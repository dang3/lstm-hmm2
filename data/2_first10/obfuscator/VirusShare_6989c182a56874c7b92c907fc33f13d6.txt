das
mov
push
jb
in
mov
and
fdiv
divl
insb
mov
mov
nop
xchg
in
mov
repnz
adc
sahf
mov
mov
jbe
xchg
sbb
adc
add
add
pusha
int3
push
push
imul
add
mov
stos
push
mov
cmpsb
mov
outsl
pop
mov
rcrb
jno
pushf
pop
mov
int
sbb
loopne
les
mov
fisttpl
call
mov
mov
mov
iret
xchg
imul
and
mov
ljmp
push
mov
mov
and
mov
fildll
in
movsl
sti
sahf
leave
mov
or
loope
ss
mov
xchg
jno
or
subb
push
xlat
shl
xchg
icebp
cmpsb
or
jb
mov
mov
outsl
inc
adc
mov
add
mov
std
fnsave
xor
sahf
and
sub
jnp
cmp
scas
imul
push
and
lret
divl
movsb
dec
mov
inc
minps
cmpxchg
mov
outsb
imull
stos
push
push
fisubrl
rolb
or
stos
test
orb
fucompp
repnz
fadd
stos
pushl
push
pushf
mov
lea
jmp
push
lods
rcr
push
push
ror
call
bt
ror
pusha
movb
pushf
dec
stc
jmp
add
dec
outsl
arpl
inc
jb
gs
adc
add
inc
mov
mov
or
int3
movsb
test
or
jge
nop
xchg
dec
mov
adc
pusha
fwait
mov
or
cmp
insl
popa
xorb
js
cmc
popf
push
out
hlt
jns
jl
xor
jle
cwtl
push
popf
scas
in
xor
sti
cmp
mov
mov
sti
insb
adc
xchg
arpl
cmc
lret
jecxz
orb
jmp
fwait
sets
outsl
out
jmp
fdiv
adc
int3
dec
iret
xor
cmc
int3
lods
xchg
pop
in
lea
dec
cmpsb
sbb
loopne
mov
inc
cmpsb
xchg
xchg
scas
mov
mov
xchg
pushf
int
scas
ljmp
or
mov
push
inc
inc
cmp
xchg
jmp
cli
jmp
out
cmp
nop
daa
int3
mov
pop
xor
loop
lcall
loopne
cmp
jg
movsl
gs
xchg
das
add
mov
scas
sub
sbb
cltd
mov
in
inc
or
push
mov
sub
subb
add
xor
daa
pop
xchg
andl
cmpb
ljmp
mov
test
or
pop
or
pushl
jmp
jne
gs
xor
fs
insb
add
push
adc
sbb
insb
cmp
in
ret
xchg
outsl
inc
sbb
xlat
mov
cmpl
jne
ja
jo,pt
pop
cmc
aam
inc
ficoms
aam
mov
dec
test
call
into
ja
jno
fmulp
fs
cmp
and
idivl
ljmp
loopne
push
fcomip
outsl
xor
scas
loopne
push
xor
sahf
test
jg
stos
jp
jb
gs
pop
push
dec
aas
cmp
inc
stos
outsb
call
mov
fistpll
aam
test
pop
add
test
sub
sbb
mov
je
pop
fcmovnb
scas
mov
add
xchg
int3
dec
movb
push
dec
and
iret
mov
dec
gs
jns
mov
dec
movsb
adc
xlat
mov
xlat
dec
sbb
cmp
adc
ret
and
push
mov
insb
lret
ret
lcall
pop
pop
leave
push
and
cs
pop
pop
arpl
jno
push
push
push
or
repz
fimuls
push
sub
lods
jae
sub
jecxz
xchg
js
sbb
into
sarb
pop
dec
sbb
out
aas
push
mov
dec
icebp
popa
cmovs
aas
push
fs
and
jmp
test
xchg
test
or
xchg
add
cltd
nop
or
xchg
loopne
xorb
or
push
push
subl
or
cmp
aaa
cmp
pop
adc
mov
repnz
push
push
jmp
dec
pushf
ror
cmc
setb
not
jmp
lea
call
pushf
call
shl
aam
xor
js
cmc
mov
imul
orl
lods
and
jmp
dec
xchg
mov
sahf
outsb
and
insl
mov
mov
orb
inc
mov
fdivrp
xor
movb
je
or
jp
sti
jle
inc
xchg
xchg
ljmp
in
lods
inc
mov
dec
mov
shrb
mov
lock
fcom
aam
mov
lods
in
and
jg
sbb
nop
pushf
mov
sub
mov
les
cmp
mov
pop
xorb
scas
lahf
sbbb
andb
in
jecxz
mov
adc
test
pop
aam
andl
pushf
jp
sti
and
lea
jne
or
xlat
shrb
cmp
stos
scas
add
ds
xchg
imul
repnz
adc
lock
andl
lret
push
int
clc
dec
in
xor
cltd
adc
dec
cmp
push
cmpsb
lods
scas
inc
xor
sub
and
adc
add
outsl
jmp
insb
xrelease
pop
cmp
cmc
int3
movsb
xchg
in
in
mov
scas
lcall
sub
dec
aas
sbb
les
mov
xor
ljmp
sbb
addr16
mov
xor
jns
aam
cmpsb
sahf
lahf
adc
sub
test
mov
outsb
sbb
jge
jae
sarb
jae
push
push
mov
adc
stos
mov
xchg
add
pop
sub
sbb
push
pop
sub
or
cmp
inc
xorb
mov
cmp
jecxz
les
sub
sub
idiv
mov
sub
cltd
fs
cmp
sub
jl
notb
jg
hlt
jae
imul
pop
cmc
push
push
mov
dec
and
std
xor
adc
das
and
add
adcl
int3
rol
mov
sub
movsl
incl
push
or
xchg
nop
jmp
xor
add
iret
fsubr
repnz
inc
lea
jl
test
cmp
mov
cmp
jmp
dec
insb
dec
and
xchg
push
cmp
in
fwait
ja
sub
shlb
pop
sarl
sub
loope
shrb
lods
pop
ss
mov
push
sbb
or
cmpsl
aas
in
xchg
inc
add
fidivrl
test
cmc
addr16
sub
cmp
rol
mov
lods
dec
push
xchg
aaa
sub
sbb
or
std
cli
data16
jmp
js
dec
push
adc
pusha
test
test
add
cmp
cmc
movw
pushl
test
mov
call
pushf
jmp
lea
jne
call
push
jg
cmpsb
das
notb
add
sbb
addr16
sbb
shrl
jg
push
mov
pop
sub
xchg
xor
stc
leave
stos
lahf
enter
cltd
vpmacsswd
aas
sub
mov
lret
xchg
push
ds
movsl
inc
cmp
and
sub
push
fwait
jmp
test
call
pusha
pushf
call
xchg
mov
adc
fisubrs
out
leave
popf
jp
leavew
ret
xchg
aad
lcall
or
fistpll
pop
stos
push
imul
mov
dec
xchg
cmpsb
or
jns
mov
xor
push
inc
ds
and
mov
or
jp
repnz
sub
scas
pushf
pushf
push
lea
jne
not
mov
movb
jmp
push
jno
ret
inc
shll
ljmp
lds
fcmovnbe
push
insb
arpl
mov
mov
sbb
sub
sub
nop
push
rcll
jae
or
outsl
xchg
mov
test
bound
jae
fs
adc
test
test
mov
cmpsl
mov
in
lods
cwtl
nop
adc
sbb
pop
sub
inc
xor
sub
paddd
imull
jmp
je
lods
jp
jecxz
sahf
cmp
scas
mov
adc
iret
cmpsl
jle
xor
lret
jecxz
mov
push
fidivs
pop
cmpb
add
xor
fistl
mov
inc
punpckldq
xchg
ds
cmpb
inc
fstl
in
insb
push
pop
fidivl
mov
aam
enter
mov
xchg
jmp
outsl
cmp
pushf
push
call
call
clc
ror
call
pusha
mov
call
lea
jne
aad
xor
shl
mov
rcr
mov
add
rcl
stc
mov
rcl
mov
jmp
pushf
cmp
jmp
lea
call
push
push
adc
jmp
cmp
adc
push
es
stos
mov
adc
lret
mov
inc
cltd
ljmp
orb
out
lcall
pop
and
shlb
mov
xchg
pop
int
adc
or
cmp
jmp
dec
scas
scas
dec
sub
mov
jno
stc
lret
push
sub
ficoms
jno
and
xor
and
jns
lret
xchg
jnp
pop
lret
stc
out
push
dec
in
fcmovne
ret
shlb
enter
dec
xor
mov
bound
sbb
popf
scas
stc
xor
mov
movsb
imull
mov
lcall
mov
lcall
test
outsb
fbstp
mov
sub
jo
out
sti
sub
ljmp
pop
adc
xor
inc
repz
ljmp
scas
or
mov
push
sbb
cmpsb
cmpsl
jp
sub
sbb
add
jge
repnz
jno
pusha
stc
sub
pushf
pushf
jmp
pushf
dec
pushf
stc
pushf
not
lea
jg
rol
pushf
push
pushf
mov
lea
call
pusha
cmp
push
cmc
cmp
pushf
lea
jae
pushf
cmc
pusha
test
cmp
jmp
lods
int3
mov
pop
xchg
jmp
mov
neg
mov
adc
fcmovne
cs
shll
out
orb
xchg
push
pusha
out
inc
adc
mov
inc
and
iret
ret
mov
pop
push
mov
insl
dec
jb
iret
and
dec
xor
inc
add
in
cmp
test
mov
stos
lret
pop
pop
es
sbb
xor
dec
and
adc
sub
addr16
xor
xor
pop
in
mov
cwtl
out
mov
popf
adc
clc
jmp
jns
fs
call
push
pusha
lea
jae
pushf
setg
mov
not
inc
pusha
pusha
not
mov
mov
lea
js
pusha
pushf
pusha
lea
call
pushf
jmp
mov
scas
test
push
mov
mov
jmp
and
fidivs
adc
push
xor
adc
movl
sub
and
and
or
jns
mov
scas
lock
aad
shr
sub
and
and
ja
out
or
mov
loopne
dec
mov
pop
out
shll
add
cmc
jmp
mov
sbb
rclb
nop
or
scas
test
or
dec
dec
inc
adc
push
xchg
mov
dec
aas
cmp
mov
dec
inc
fists
pop
mov
jbe
lret
adc
and
add
ret
lea
add
xor
push
or
cld
out
ljmp
push
and
sub
nop
add
jae
ds
int3
mov
fdivrl
xchg
scas
pop
movsb
movsl
mov
pop
loope
and
xchg
mov
hlt
cmp
adc
mov
lds
cmp
out
int3
ret
mov
fwait
adc
lahf
cltd
psubsw
adc
or
clc
test
xchg
pushl
bswap
mov
call
pushf
pusha
push
mov
push
pushl
ret
add
lea
cmp
add
pushf
pusha
pushl
movl
dec
push
lea
jne
cmp
not
rcr
shrd
mov
stc
bt
cmp
push
mov
pushf
lea
ja
not
push
mov
lea
lea
js
movsbw
push
mov
mov
bswap
push
movsbw
mov
movzbl
pop
mov
jmp
pusha
sub
call
lea
cmpsb
sbb
inc
and
fisubrl
mov
mov
lods
nop
sbb
sti
jns
xchg
test
ljmp
jmp
lahf
dec
shlb
into
cmp
adc
mov
stos
xchg
jle
insl
xor
sub
or
movsb
in
out
movsb
sub
repz
mov
xchg
push
push
push
aas
cmp
jmp
mov
xchg
push
add
xor
or
pop
es
dec
sub
fsubrs
repnz
mov
gs
mov
mov
xchg
not
leave
mov
or
int3
pop
in
cmp
into
mov
sub
imul
and
dec
xchg
jg
push
and
push
push
ljmp
xchg
and
loopne
add
push
out
xor
div
in
fcmovnu
fcmovnu
lret
dec
jmp
xor
jae
lea
push
and
sbb
repnz
mov
aam
xchg
xchg
out
jnp
mov
xlat
dec
add
testb
push
outsb
les
pop
cmpsb
data16
hlt
test
mov
mov
sbb
test
pop
push
push
ljmp
pushf
push
sub
xchg
sub
xchg
addb
push
push
enter
repnz
and
shr
call
imul
psraw
ljmp
test
mov
sbb
gs
movsl
jge
sysret
push
frstor
add
inc
jg
pop
mov
add
push
pop
fistpl
lods
insb
es
pop
push
ja
popf
pop
pushf
sub
rol
scas
negl
sbb
xor
pop
xchg
push
push
jmp
and
or
insl
jmp
nop
std
mov
stos
cmpsl
mov
repnz
fcomps
jp
incb
into
mov
cld
mov
movsb
add
sbb
inc
daa
and
scas
test
test
push
ret
aam
push
sub
insl
fistps
xor
ljmp
mov
cmp
inc
mov
pop
cmpb
repnz
push
push
jmp
pop
adc
and
roll
cmpsb
jb,pn
push
push
rcll
aaa
ds
sbb
xchg
jmp
mov
inc
sub
aaa
sub
fnsave
sti
fnstenv
sarb
jbe
inc
xchg
popa
push
fwait
lods
int
push
push
xor
cmp
cmp
daa
std
fldt
pop
adc
fisubrs
test
adc
push
lods
and
ja
in
in
int3
cmp
stc
cmpsb
xorl
cs
repnz
pop
loop
xlat
aam
ret
sarl
imul
inc
sbb
add
jmp
out
leave
movsl
adcb
mov
push
add
fs
cwtl
fistpl
push
cmp
bound
fcmove
movb
jo
xchg
cwtl
mov
adc
mov
cltd
imul
jae
enter
lea
adc
arpl
cmp
out
jmp
jl
icebp
repnz
inc
adc
test
cmpsb
out
pushf
ja
fs
mov
lahf
pop
shll
xchg
xchg
mov
aas
cmp
sub
push
or
mov
or
scas
sarl
lods
sub
enter
lahf
jo
roll
jbe
jmp
jge
imul
gs
adc
ficompl
jmp
stc
icebp
out
int3
leave
rcrb
inc
pusha
sahf
pop
icebp
fidivrl
clc
das
sbb
je
add
out
out
in
loop
lds
mov
xor
test
xorl
pop
inc
and
push
scas
aaa
or
imul
mov
test
popa
ret
cmp
mov
xchg
mov
outsl
xor
push
adc
fistpl
pop
rclb
mov
in
call
xchg
push
pop
jge
jecxz
xor
lods
movsl
stos
movsl
pushf
xchg
mov
insb
pop
fucompp
repnz
fsubs
xchg
adc
cmp
and
or
mov
arpl
test
inc
mov
add
stos
popf
and
push
ret
mov
pop
or
test
pusha
xchg
xchg
mov
fistl
or
pusha
int3
insb
mov
xlat
pop
jns
ret
adc
clc
movl
xchg
adc
add
imul
mov
ret
mov
out
es
std
jbe
cltd
ss
dec
int
xchg
shll
repnz
rol
mov
mov
sub
repnz
daa
adc
loop
popl
ret
and
xchg
fs
sbb
lret
mov
sub
jb
sub
mov
cmp
xchg
cmc
lock
cltd
fiadds
ret
push
xlat
mov
jle
repnz
les
xor
adc
pop
cmp
xchg
and
push
push
icebp
sbb
daa
scas
jmp
jnp
cmp
mov
xorl
inc
cmp
xor
test
lea
je
pusha
sub
clc
clc
bt
cmp
pushf
lea
ja
push
jmp
push
je
sub
or
shrl
in
nop
add
and
and
mov
lea
iret
sarb
jmp
jae
xorb
divl
push
fdiv
inc
or
lods
sub
repz
sub
fcoml
out
cli
push
mov
xchg
paddusw
cmc
imul
enter
mov
sbb
sbb
cli
stos
pushf
lea
jmp
cmp
call
pushf
movl
lea
js
push
push
mov
pusha
pushl
pushl
ret
lea
jae
not
mov
not
inc
pusha
mov
push
jmp
shl
xchg
or
dec
jno
mov
out
mov
aam
mov
adc
rcrb
scas
ret
push
aad
sub
dec
mov
pop
and
jmp
repnz
xor
cwtl
ret
aam
push
repz
push
inc
xchg
or
or
and
push
mov
cmp
les
sti
addr16
pop
ficoml
xchg
xchg
adc
xor
push
or
repnz
repnz
pop
push
pop
push
dec
push
push
gs
pop
push
pop
pop
or
pop
pop
pop
or
pusha
sbb
jmp
lods
lock
dec
jle
arpl
pop
aad
adc
add
push
enter
int
cmp
and
negb
stc
jb
or
lods
sbb
popf
outsl
xor
add
cmpl
add
mov
xchg
add
cs
roll
hlt
mov
push
push
int3
sub
cltd
pop
and
push
fldt
ficoms
or
mov
outsl
or
adc
testl
ds
rorb
pop
rol
fs
add
test
or
stc
call
jbe
push
cwtl
jecxz
mov
test
xchg
adc
pusha
mov
outsl
mov
push
frstor
out
push
mov
cwtl
fwait
roll
in
mov
iret
sub
bound
clc
enter
fists
sub
cmp
sahf
adc
neg
scas
out
daa
add
xchg
adc
repz
add
jnp
mov
pop
and
lahf
es
ficoms
sub
pushf
jmp
call
mov
push
iret
xchg
dec
cmp
es
sahf
sub
gs
aaa
stos
sahf
sub
dec
fcomp
stc
or
xor
loope
sahf
sub
aad
inc
jne,pn
fwait
bound
mov
popf
cmc
adc
subb
sahf
sub
xchg
mov
inc
push
xor
ds
adc
jo
inc
sub
xchg
inc
cmp
push
jae
push
iret
xchg
xchg
aam
sahf
sub
test
adc
sbb
inc
gs
sub
pop
inc
insb
pop
cwtl
sahf
adc
push
adc
inc
cmp
sbb
push
iret
xchg
inc
cmp
mov
sahf
sub
lds
cmpsl
aad
adc
stc
ds
mov
xchg
pop
ds
hlt
adc
lret
sahf
push
rclb
ret
rcrl
ds
sbb
lock
pushf
movsl
stos
push
sahf
sub
add
sahf
sub
dec
mov
adc
dec
lahf
fists
push
sahf
adc
fnstsw
das
int3
sahf
push
rcrb
enter
sti
push
dec
dec
ss
inc
pop
call
mov
push
push
cwtl
subl
std
jne
add
inc
cltd
sarl
popa
scas
mov
fcomp
and
inc
sub
lock
mov
lret
and
out
daa
icebp
sti
repz
out
mov
dec
dec
rcrb
insl
adc
inc
ret
xorb
sub
inc
dec
pop
test
cwtl
and
ret
lods
cmpb
clc
and
fucomi
shr
rol
sbb
clc
mov
filds
push
or
mov
popaw
test
in
push
pushl
lea
je
pusha
call
out
adc
enter
sub
imul
xor
insb
pop
pop
and
sub
and
aas
cmp
mov
in
fwait
mov
inc
scas
pop
ficoms
sub
inc
lret
xchg
test
pop
daa
imulb
push
cli
mov
dec
jns
pop
orb
push
cmc
lds
movsb
push
das
and
lcall
cmp
sub
pop
femms
push
std
clc
icebp
imul
and
add
pop
push
fcmovne
sub
iret
mov
std
into
movsl
mov
mov
in
dec
sbb
insl
dec
sub
lcall
mov
dec
out
outsl
ljmp
mov
daa
mov
int3
cmp
rorb
outsb
outsl
jl
adc
jo
aad
push
int3
movsb
add
andl
iret
ret
push
mov
add
jp
clc
jnp
sub
sbb
pop
or
inc
movsb
mov
aad
out
push
inc
in
xchg
cwtl
lods
outsl
imul
sbb
sbb
lock
xor
sti
push
ja
mov
dec
stos
pop
jge
cmpsl
fwait
clc
cmc
push
xor
adc
stc
in
dec
inc
mov
icebp
rol
pop
push
ja
or
pop
xchg
dec
mov
mov
lret
and
imul
add
add
incl
into
leave
ret
fdivl
bound
arpl
inc
prefetch
adc
pop
add
push
fcoms
ds
lcall
test
jmp
incb
in
push
cmp
movb
jmp
add
or
pop
rcll
repnz
fsubrl
aas
adc
cld
push
dec
lea
out
pusha
push
inc
sbb
mov
mov
aad
or
sub
mov
adc
stc
call
lret
and
test
inc
cmp
and
sub
cmc
cwtl
mov
repnz
add
add
pop
push
add
cli
xchg
stc
les
loopne
pushf
jne
repnz
xor
sub
lods
pop
decl
mov
push
or
je
xor
loopne
cmp
xchg
ret
sbb
cld
jg
and
mov
or
mov
movsb
out
xlat
aam
gs
fs
aam
jge
push
mov
ds
fldt
push
adc
xlat
lds
mov
repnz
push
std
and
out
mov
adc
mov
add
scas
xchg
xchg
xor
daa
and
mov
push
push
rclb
dec
cmc
lods
add
aas
mov
les
add
cmp
ret
push
imul
ja
negl
lea
cmp
test
sbb
mov
arpl
pop
push
push
inc
inc
mov
mov
and
lea
movzbw
mov
pushf
mov
lea
movzbw
pop
push
pushf
pusha
mov
pushl
ret
test
sub
cmc
pushl
pusha
clc
pushl
cmp
call
rcl
mov
bt
and
cmc
call
int
int
sub
loop
and
mov
jmp
cltd
outsb
dec
sbb
cli
hlt
cmp
and
or
inc
add
push
pop
int3
lret
sub
lret
pop
xor
xor
mov
cmp
add
movq
enter
daa
cwtl
mov
cmpsl
js
dec
lods
jbe
enter
lods
stos
jbe
leave
fs
jp
push
inc
data16
lea
pop
push
inc
leave
jmp
nop
xchg
gs
mov
push
xor
lds
fs
sbb
lds
cmp
jb
les
cwtl
aas
adc
imul
pop
and
outsl
sbb
sbb
or
mov
ljmp
sub
jmp
pop
lea
pop
add
lock
repnz
adc
add
inc
and
jp
xor
pop
ljmp
loopne
pushf
movhps
fistpl
xor
cmp
cmpsl
pop
mov
jg
lret
aaa
sti
ljmp
mov
mov
cmpsb
lahf
lahf
xchg
mov
data16
repnz
add
lcall
and
push
or
jbe
and
shll
icebp
lds
push
fs
xchg
xorl
mov
ret
les
imul
pop
mov
lods
movsb
adc
in
xor
inc
mov
xchg
jmp
insb
adc
imul
push
push
cli
add
cmpsl
loope
outsl
inc
xor
pop
cmp
sub
and
adc
cmc
sti
jns
bnd
cmp
add
mov
push
sub
shll
xlat
mov
jb
sub
mov
mov
push
mov
adc
mov
push
fcoml
add
ret
mov
stc
popf
sahf
lock
jbe
pop
pop
inc
mov
and
aas
and
cmp
add
iret
sub
add
andl
add
btc
mov
pushf
mov
movzbw
bsf
neg
mov
call
lea
call
push
jmp
int
stos
es
sti
enter
das
loopne
andb
or
dec
add
leave
adc
popf
call
out
jb
fmul
sbb
iret
inc
lret
leave
push
or
aaa
repz
insb
pop
orb
push
sti
inc
and
fisubs
push
push
add
jae
dec
ja
mov
fisubs
push
push
push
inc
cmp
daa
xchg
pusha
das
lea
mov
lea
push
mov
push
call
movb
pusha
lea
jb
push
movb
movb
pushl
ret
mov
iret
cmp
int3
movsl
xchg
and
rcrl
xchg
cmpl
clc
xor
push
sbbl
pop
lcall
inc
dec
push
push
inc
push
ja,pn
inc
jb
popf
lahf
pop
xchg
or
mov
fbstp
jb
pop
loope
lds
fwait
mov
cmovne
aas
pop
adc
repnz
into
and
out
fisubs
inc
cmpsl
jbe
leave
dec
lods
movsl
mov
and
mov
xchg
jmp
push
inc
xor
or
inc
sbb
int3
scas
test
and
jo
jle
out
cwtl
addr16
adcl
sub
fsubrs
cwtl
mov
adc
mull
aad
enter
mov
adc
jle
push
xor
stc
adcl
adc
scas
fwait
pushf
xchg
xchg
lea
jmp
fs
movl
pushf
movw
push
lea
jmp
adc
pusha
mov
lea
jae
call
movw
jmp
inc
fs
sbb
adc
xchg
outsl
push
daa
fidivrl
cmpsl
mov
mov
sub
push
xchg
repnz
shll
int3
test
insl
bound
hlt
or
daa
push
push
dec
dec
mov
cmp
stos
movl
add
mov
jnp
addr16
sub
adc
repnz
jmp
cmp
stc
xor
jmp
pusha
cmpb
pushf
call
push
lea
jae
pusha
mov
push
lea
jne
pusha
pushl
stos
pusha
lea
jmp
push
pushf
mov
pushf
mov
push
movb
lea
jmp
repnz
iret
inc
shrl
pop
fidivrs
int
jns
xor
and
negb
dec
out
ficoml
mov
push
sub
imull
add
in
fcomip
inc
dec
jl
fwait
out
sahf
mov
pop
dec
adc
push
cld
jg
lods
mov
lock
dec
ds
and
adc
or
cld
sub
jno
mov
xor
mov
xor
out
xchg
je
and
lret
pop
pop
pushf
aaa
inc
js
stc
out
sbb
inc
test
mov
movsl
ja
sbb
mov
out
cmp
dec
fstps
sbb
data16
lock
push
movsl
push
lods
mov
daa
mov
in
cld
jle
sbb
jnp
xchg
in
cmpsl
sbb
inc
or
jns
lahf
xor
rclb
popl
mov
popf
cwtl
mov
sub
clc
jecxz
add
lds
dec
ss
mov
pop
xor
jmp
sbb
push
jno
and
mov
cli
not
cmp
jns
or
rolb
sbb
mov
popf
mov
jp
arpl
push
lret
jmp
or
test
pushf
jmp
push
pusha
lea
jb
call
pusha
call
cmp
cmc
sub
pusha
movw
pusha
inc
lea
call
jae
js
movl
imul
xor
jecxz
mov
sbb
push
lcall
inc
adcl
dec
in
les
mov
sub
jo
jle
jns
dec
push
dec
loope
enter
pop
test
in
ret
dec
push
xchg
lods
dec
xchg
cmp
popf
lds
ja
stc
jo
dec
sub
cmpl
imul
jmp
in
jmp
pusha
lea
call
jmp
leave
out
scas
and
sbb
jne
pop
sti
shrb
cmp
cltd
cli
bound
mov
in
push
jbe
adc
or
push
dec
cmp
cs
inc
sbbl
lret
jne
adcb
jmp
cmp
mov
mov
movsb
push
push
xchg
gs
dec
dec
dec
inc
cmp
das
and
repnz
push
push
jp
daa
lahf
pop
xor
push
xor
mov
insb
cmp
in
into
lds
xchg
imul
dec
adc
mov
data16
mov
xchg
push
out
pop
mov
insl
int
inc
adc
pusha
mov
movsb
mov
cmp
fimuls
into
ret
test
movsl
xchg
mov
jmp
add
xor
lea
je
push
lea
jmp
int
xor
test
sbbb
loop
fwait
jp
cmp
into
jg
daa
ljmp
adc
jne
dec
adc
test
xlat
pop
add
cmc
push
inc
jge
adc
lds
push
gs
cmp
sub
push
fnstcw
and
xchg
clc
xor
ljmp
mov
popl
lret
leave
enter
pop
imul
push
xor
gs
sti
out
jmp
bound
add
cwtl
mov
lea
je
pushf
pusha
push
mov
lea
jmp
lea
jae
pusha
call
lea
je
jmp
adc
lea
pushf
push
pushl
ret
jmp
sub
jp
mov
push
add
mov
pusha
xor
out
rcrl
cld
add
inc
xor
or
sbb
out
mov
pop
aam
and
and
xchg
jns
xor
xor
test
mov
imul
cmp
stos
or
sbb
inc
or
vpunpckldq
outsb
pushl
dec
mulb
mov
xchg
jmp
and
sub
sarl
bound
sbb
adc
addr16
pop
pushl
call
je
jbe
leave
dec
sbb
nop
addr16
jne
das
rcl
daa
sub
std
push
cmp
mov
and
fnstsw
adc
dec
lahf
fsubrs
jmp
loope
hlt
jmp
addb
ficoml
cltd
lret
pop
out
inc
dec
adcb
jmp
lret
xchg
cmp
movsl
xchg
adc
rorl
shlb
push
jmp
fcmovb
rolb
rep
pushl
mov
push
mov
lea
push
pusha
pushl
lea
call
jno
pusha
movb
lea
jae
cmp
clc
pushf
sub
jmp
add
add
add
add
and
add
add
add
bound
add
sub
enter
or
add
push
das
add
add
add
out
jmp
mov
mov
xor
popf
jecxz
lods
adcl
leave
pushf
jae
pop
sbb
out
ss
mov
out
mov
dec
mov
dec
pop
or
mov
xchg
cmpsb
sub
lds
xchg
or
outsl
inc
cmpsb
frstor
ret
inc
xor
repz
lahf
pusha
pop
out
ds
sub
lret
roll
lods
sub
call
mov
jb
pop
fldl2t
bnd
and
jg
push
pushf
jne
dec
cmp
call
cs
cmpsb
mov
xor
loope
mov
push
ja
pop
cmp
xchg
enter
aad
push
mov
std
xchg
dec
lock
pop
cmp
adc
sbb
xchg
mov
jge
imul
out
idivb
imul
imul
je
inc
das
sub
mov
or
stc
out
addr16
dec
clc
stc
rol
pusha
jmp
into
repz
icebp
repz
das
jmp
mov
jno
and
rcl
dec
loope
mov
enter
hlt
das
and
mov
arpl
jno
lods
test
xchg
or
ja
ds
mov
cltd
shlb
ret
add
inc
adc
jp
in
cmc
movsb
lea
nop
test
roll
loop
rcl
leave
mov
mov
das
call
and
call
push
pusha
lea
jmp
lea
jne
pusha
mov
call
shl
sub
lea
xchg
jg
lods
bt
push
ror
pusha
dec
push
not
call
test
sub
jb
sub
pushf
pusha
lea
call
pushf
movb
lea
jae
call
pushf
test
xor
clc
pushf
repnz
mov
jmp
push
sub
fstl
adc
sbb
iret
test
dec
and
fistpll
cmp
ret
xchg
mov
mov
cwtl
xchg
cwtl
xor
mov
je
xor
inc
nop
aaa
mov
cmp
call
sbb
cmc
cld
mov
push
jmp
jb
fs
add
in
loop
pop
das
mov
inc
xchg
hlt
fldt
xchg
jb
fs
push
aad
repnz
rol
stc
pushf
push
bt
sub
jmp
inc
inc
setle
inc
cmc
or
rcr
sub
xchg
bsf
cwtl
shrd
mov
call
jmp
pushf
movl
call
call
or
in
lds
dec
xor
not
stos
dec
movsl
jbe
insl
rol
xchg
mov
nop
xchg
fisubrl
and
ss
push
sub
pop
xchg
inc
mov
sarb
cmp
sbb
mul
rol
pop
mov
inc
and
ja
add
popa
push
inc
movl
test
aad
cmp
mov
xchg
xchg
adc
repnz
psubd
pavgb
sub
aad
sbbl
repz
or
push
and
xor
or
mov
fnsave
outsb
mov
cmp
xchg
jns
fimuls
jo
adcl
dec
cmp
inc
rcr
in
xchg
pushf
ja
xchg
or
adc
sub
push
lret
test
dec
jno
fst
dec
stos
jbe
xchg
jne
ds
xor
sub
and
or
sub
xor
outsl
out
in
inc
sbb
add
mov
clc
shll
cmp
mov
mov
jns
mov
jne
pop
mov
test
sub
outsb
les
sbb
pop
fcompl
fwait
sub
add
pop
sbbb
pop
cmpsb
mov
add
add
sbb
iret
shll
popf
xchg
xorl
jmp
call
in
movsbl
movsbw
push
mov
pushl
movw
mov
pushl
ret
stos
pusha
lea
jmp
add
dec
outsl
popa
fs
imul
add
cmp
popa
outsb
and
or
les
aad
mov
push
sbb
jnp
mov
cmp
rcrl
mov
movsb
sub
xchg
pop
adc
adc
inc
out
roll
ret
addb
add
mov
xchg
iret
outsl
push
mov
sub
loop
dec
stos
outsl
mov
ds
js
aad
push
inc
mov
sub
jmp
int
ret
repnz
cmp
leave
call
add
ds
imul
mov
add
jp
mov
dec
test
xor
daa
add
in
pop
aam
les
jge
ret
call
push
loop
test
sub
and
inc
sbb
scas
shlb
and
add
outsb
inc
in
sub
jbe
scas
out
and
pop
fcomp
loop
sbb
sbb
je
mov
lock
test
dec
arpl
xor
mov
pop
imul
jmp
push
movsl
and
divl
or
loope
scas
outsl
movmskps
mov
je
xlat
cmp
aad
imul
sub
pop
push
or
stc
out
jmp
repnz
pop
dec
iret
not
sahf
sbb
out
mov
cmp
jecxz
mov
adc
jns
in
out
in
mov
push
push
adc
lds
pop
dec
cmp
outsl
ret
xor
push
xor
mov
jle
test
pop
push
jecxz
push
push
or
mov
mov
lods
pop
in
push
das
sub
pop
or
add
jmp
icebp
in
dec
jmp
jecxz
push
test
cmp
out
mov
and
shrb
fwait
cwtl
dec
out
jl
ds
cltd
out
rcrl
adc
inc
dec
inc
jecxz
mov
in
insl
adc
shrl
and
aad
xchg
pop
push
fsts
test
mov
add
mov
ja
rorb
pusha
jecxz
xchg
or
cs
inc
jmp
test
cli
addl
xchg
dec
and
test
cmp
add
or
push
std
repnz
loop
pop
jmp
inc
lea
call
call
shl
shrb
xor
sbb
ret
pushf
jle
sub
fcmove
popf
insl
pusha
push
mov
dec
mov
pushf
gs
or
sub
pop
push
popf
push
hlt
jmp
push
lods
sti
pop
inc
xor
pushf
xchg
gs
fstl
adc
stc
sbb
test
pop
or
mov
push
adc
push
je
pop
sbbb
push
or
mov
xchg
cs
dec
lret
scas
lahf
shrl
mov
xchg
nop
xchg
test
ja
pop
fldl2t
repnz
cmpsb
mov
lods
mov
test
pop
cmp
push
and
push
out
ljmp
lahf
sbb
or
aas
imul
mov
pop
or
adcl
jb
faddl
fs
push
push
dec
inc
cmp
lock
je
mov
imul
mov
mov
jmp
cmp
xor
out
xchg
or
jne
jle
ret
test
cmp
out
lcall
mov
mov
sbb
aas
or
mov
rorb
stc
push
mov
xchg
push
and
push
mov
inc
mov
out
add
loopne
sub
imul
sub
dec
ret
dec
or
jno
jl
dec
dec
inc
inc
ss
add
enter
jg
arpl
mov
testb
jmp
cmpsb
adc
push
jmp
es
and
fldcw
ljmp
or
das
cwtl
lea
or
subb
xchg
mov
arpl
jae
inc
inc
mov
outsl
arpl
push
dec
inc
aaa
test
cmp
stc
mov
pop
fistpl
pop
adc
pop
js
in
jb
repnz
sbb
je
mov
adc
pop
ds
shlb
out
cmpsl
fwait
push
sub
cwtl
lahf
push
mov
adc
test
cmc
stc
in
pop
stos
sbb
insb
cmp
scas
pop
out
or
loope
lret
ds
mov
mov
mov
int
out
and
call
pushf
movb
lea
call
pusha
call
aad
mov
aad
test
sub
jno
xor
loopne
lods
jg
push
dec
movsb
sbb
and
add
jmp
mov
ds
ror
xchg
and
fwait
aam
pop
int3
jae
xor
std
enter
inc
pop
in
loope
scas
pop
add
push
clc
std
push
fcmovne
shlb
repnz
cwtl
js
je
push
mov
aaa
sbb
mov
push
cli
cli
int
xchg
inc
add
adc
stos
movsl
inc
pop
in
or
int3
ret
fmuls
push
loop
lret
loop
add
lds
xlat
adc
mov
ja
or
or
cmp
dec
pop
jmp
dec
cld
mov
pop
lds
js
pop
pop
push
push
inc
inc
mov
out
fidivrs
bound
cwtl
sbb
nop
sub
gs
fsubs
test
xchg
or
pop
xchg
fdivs
or
scas
add
cld
cmpsb
fnsave
mov
sarb
outsl
lret
xor
adc
in
je
in
xchg
xor
sub
in
push
push
or
jne
ds
into
test
mov
inc
lea
inc
inc
mov
sbb
or
repnz
jmp
pusha
mov
push
mov
pusha
lea
jmp
int3
out
lds
popf
jecxz
mov
gs
adc
pop
xor
and
jmp
fisubrs
dec
loopne
lods
lods
jg
aas
jae
test
jmp
cmpsb
in
push
dec
and
rep
pusha
scas
pop
in
je
pop
hlt
cmp
inc
sub
mov
inc
or
bsf
jnp
mov
sub
mov
jno
out
repnz
pushf
movb
sub
pushf
lea
jns
rep
movsbw
pop
pusha
lea
jmp
pushf
mov
pushf
mov
call
push
movl
pushl
lea
jb
push
pusha
movl
pusha
mov
pushf
lea
jmp
leave
call
lcall
jg
cmp
jns
sub
push
inc
xchg
scas
aam
sbb
arpl
into
imul
in
push
test
mov
jo
cmp
shr
popf
pop
mov
sbb
dec
lret
sub
ljmp
xchg
add
shlb
repnz
xor
icebp
std
sahf
adc
cmp
mov
loop
jbe
mov
mov
xchg
nop
jge
jns
pop
loopne
repnz
adc
add
insb
fcomps
pop
sub
cmc
repz
mov
or
xchg
adc
cmc
enter
sbb
in
adc
out
dec
push
imulb
cmp
push
pcmpgtb
subl
movsb
in
ja
xchg
adc
push
fiaddl
out
fstps
xchg
jno
pop
push
push
inc
cmp
fwait
jmp
arpl
push
and
mov
and
mov
adc
aam
jge
ja
cmp
ljmp
pusha
ja
cmp
push
xor
movsb
aam
rorb
jno
mov
cmp
adc
xchg
xor
and
bound
cs
enter
lahf
shll
loopne
mov
jns
mov
imul
pusha
sub
xor
jns
rcll
cmp
mov
loope
pop
movsb
mov
fidivrs
outsb
imul
lahf
cwtl
xchg
mov
jmp
outsl
lcall
pop
loope
mov
sbb
shrl
fmulp
ret
sbb
sarb
pop
jbe
cmp
add
pop
addl
movsl
and
push
and
and
orb
push
aas
mov
mov
mov
sub
xor
fidivrl
cmpsb
mov
add
sub
push
jae
inc
adc
test
add
loop
clc
sbb
stos
dec
arpl
push
inc
popf
xchg
stc
arpl
in
sarl
jno
xor
cmc
sub
mov
xchg
mov
popa
sub
mov
sbb
mov
pop
lock
jne
addr16
syscall
add
cmp
imul
ljmp
je
shrl
stc
sar
hlt
jl
out
imul
xor
mov
test
insb
and
nop
xchg
sbb
ror
rol
mov
cmpsb
cltd
xchg
xchg
mov
ret
mov
aaa
cld
jns
test
fdivr
stc
cwtl
adc
pop
pop
dec
enter
sub
xchg
adc
or
pop
popf
push
test
imul
lret
dec
sub
clc
ljmp
nop
jg
pop
fidivrl
cmp
stc
aad
cmc
into
std
popf
mov
repz
into
enter
and
insl
in
jp
push
xor
mov
clc
dec
ror
mov
repnz
pop
and
pop
inc
adc
pushf
pop
imul
dec
pop
cli
aad
cmpsb
fwait
push
or
jmp
push
cmp
inc
addb
mov
push
xchg
or
mov
xor
in
or
xlat
test
push
stos
mov
jbe
push
idivl
mov
mov
or
stos
jns
paddb
je
subb
or
jp
int3
aad
lock
jo
adc
jne
pop
pop
push
push
inc
jmp
add
and
jne
jmp
push
jl
lods
sub
dec
and
jbe
pop
cli
int
popf
xchg
popa
pop
sahf
cmp
in
pusha
sbb
addb
mov
push
inc
lods
add
mov
cmc
testb
je
lcall
notb
mov
add
cmpsl
dec
int
imul
or
add
ficomps
ret
cmp
or
pushf
daa
mov
adc
loope
fcmovbe
int3
mov
sub
ret
cs
pusha
test
mov
lahf
mov
stos
mov
fsubl
hlt
int3
leave
daa
and
mov
dec
jl
out
sbb
push
adc
jle
fidivrs
popa
jnp
rorb
mov
sub
lcall
movsb
iret
sbb
pop
es
iret
xchg
pop
mov
dec
and
mov
andl
ficomps
add
mov
jne
insl
insl
pop
pusha
push
mov
and
dec
cmpsl
insb
movl
pusha
movl
push
movl
movb
push
pushl
movl
lea
jmp
pusha
pusha
mov
pushf
movb
call
movw
push
mov
lea
call
jmp
lea
jae
test
pusha
pushf
push
cmp
jmp
ljmp
out
xor
pop
xor
in
lret
movsb
adcb
sbb
aad
xchg
pop
test
mov
add
fmul
xchg
outsl
jae
pop
stos
pop
adc
jbe
cmpsb
adc
or
dec
sarb
popl
pop
push
int3
pop
push
push
leave
jmp
xchg
push
pushf
mov
pushf
pusha
pushf
lea
jmp
shl
mov
cmp
test
push
and
call
andb
nop
xor
cmpsb
cltd
jno
and
int
jne
cs
jecxz
fidivl
sub
aad
loopne
jae
ss
push
sarb
or
arpl
pop
mov
push
sahf
xchg
pop
mov
xchg
fistl
mov
or
jl
add
out
in
in
fcmove
push
jmp
adc
pushf
jmp
lea
ja
pusha
dec
inc
not
inc
shl
shl
xor
neg
xchg
cwtl
bt
mov
pusha
mov
shl
call
jmp
call
call
clc
push
not
cmc
cmp
add
test
pusha
jmp
sti
fdivrl
rorl
cmpsl
jg
inc
adc
mov
push
mov
jo
jmp
fstl
call
fs
sub
in
jmp
add
mov
test
loope
mov
dec
mov
pop
out
scas
sub
xorw
movsl
mov
push
dec
inc
mov
xor
repnz
jne
dec
pusha
bt
call
movsbw
mov
lea
movw
seto
bswap
mov
movl
mov
jmp
xlat
repz
xlat
shl
dec
and
adc
jecxz
pushf
call
or
pavgw
xorb
sub
clc
fidivrl
stc
into
pushf
jns
jae
dec
bound
inc
bound
xchg
push
popa
xor
jecxz
loop
loope
rorb
sub
es
mov
sub
inc
push
xchg
pop
subb
push
adc
mov
std
nop
imul
xchg
pop
push
inc
inc
cmp
and
pushf
jmp
xchg
push
lea
call
jmp
shr
leave
lahf
pop
jnp
xchg
mov
jnp
sub
jmp
sub
aam
aas
pop
pop
scas
pop
jg
icebp
mov
lcall
out
leave
jg
xchg
dec
std
out
inc
sti
cmpsl
sub
mov
in
es
mov
jae
jp
xlat
dec
shrb
push
push
pop
mov
mov
repnz
xor
or
repnz
ret
sarb
repnz
mov
clc
in
call
roll
jbe
add
xor
jmp
or
or
xor
pop
and
shrl
test
lret
dec
aad
leave
movaps
fcompl
lret
xchg
mov
xor
jmp
mov
cmp
aad
les
mov
jmp
test
aas
or
andl
add
xchg
sets
mov
pusha
inc
jmp
mov
mov
adc
mov
clc
les
test
enter
adc
lods
sub
add
stos
sahf
dec
pop
adc
or
add
mov
mov
xor
pushf
loope
jno
inc
mov
outsl
insl
mov
scas
adc
in
xor
mov
dec
mov
mov
lds
xchg
add
pop
cmc
dec
shrb
sbb
imul
ljmp
mov
mov
mov
push
push
and
subb
fucomip
repnz
adc
shlb
push
xor
jge
xlat
or
sbb
ret
mov
ljmp
cmc
dec
fld1
jp,pn
sub
or
push
mov
jae
dec
inc
rcl
gs
mov
sub
cmp
test
pop
mov
rcrl
cmp
jecxz
add
and
jmp
ds
sub
dec
iret
loopne
sbb
lods
loop
loop
push
push
pop
dec
adc
fcoml
jne
icebp
fisubl
pusha
xor
sub
or
idiv
call
jmp
cmp
add
stos
int3
fwait
js
xor
cwtl
insl
dec
xor
ljmp
repz
dec
mov
jne
mov
shll
dec
stos
mov
stos
adc
push
fildll
pop
fisttpl
int3
mov
sahf
fwait
lea
outsb
jo
jmp
iret
lea
jne
bswap
mov
mov
bsf
sub
shld
mov
cmc
jmp
stos
pusha
pushf
mov
mov
lea
jmp
call
repnz
mov
fbstp
call
pop
mov
or
xchg
push
pushf
or
sarl
cli
shl
out
mov
xchg
nop
mov
rcrb
test
add
ss
inc
push
push
out
and
fistl
loope
dec
subb
push
sbb
repnz
pop
sbb
mov
sbb
adc
fst
fcoml
repnz
mov
adc
add
or
add
out
incl
add
add
pusha
pushf
pushl
lea
jmp
ljmp
mov
test
or
mov
jb
das
or
andb
ss
das
enter
push
sbb
jl
cmp
sub
lods
negb
mov
lret
or
sbb
pop
add
nop
xor
das
rorb
inc
icebp
ficoml
pop
push
push
sbb
test
or
rorb
xchg
mov
jb
fs
push
dec
cmp
das
cs
popf
jmp
fcoml
dec
sub
push
jp
sbb
lds
movsb
xchg
xchg
lea
das
mov
stc
scas
pushf
jge
stos
xor
dec
out
cmp
int3
scas
dec
bound
mov
fwait
or
out
rolb
test
sbb
xor
jae
insb
and
ja
sbb
dec
lret
fs
scas
mov
icebp
jmp
leave
mov
sahf
and
repnz
shll
loope
int3
cmpsb
jg
loop
rolb
imul
loop
xchg
push
jmp
sti
and
sbb
lods
test
leave
enter
repnz
sub
fists
cmp
pop
in
mov
and
imul
loop
aam
mov
shrb
cmpsb
imul
pop
jns
je
xchg
xchg
bound
and
test
push
jae
cmp
inc
aas
cmp
xchg
jmp
pop
pushf
jmp
call
movb
call
test
orb
dec
and
arpl
adc
loopne
xor
lret
stc
fmul
xchg
mov
lahf
ficomps
mov
adc
add
pop
cmp
repz
inc
repnz
xor
aas
fsubrs
push
rcrb
scas
jae
cmp
push
push
sbb
gs
mov
sub
mov
in
leave
mov
xchg
mov
repnz
out
add
iret
test
mov
mov
xchg
jb
sub
loope
xchg
popa
cmp
add
push
dec
cmpsb
aad
stos
scas
mov
mov
sbb
sahf
adc
pop
stos
pop
insb
lds
or
std
xor
loope
ficoms
adcb
aas
xor
xor
sbb
jl
repnz
inc
lods
jns
popa
inc
pop
mov
cltd
mov
or
lret
push
sub
sub
cmpsl
xor
and
pop
dec
inc
sbb
push
adc
test
xchg
sub
sbb
xchg
iret
fsts
in
mov
dec
cmc
rcl
fisubs
mov
roll
call
push
repnz
mov
pop
out
movsb
sbb
mov
cmp
adc
pop
sub
outsl
hlt
inc
sub
test
incb
loopne
ja
push
in
repnz
push
jecxz
lea
jae
call
push
lock
std
std
xchg
xchg
fs
mov
ret
je
xchg
std
int3
dec
jge
insl
mov
mov
pop
ss
repnz
cmp
add
dec
inc
and
aam
pop
ret
add
in
daa
adc
test
in
sbb
dec
add
movsb
inc
xchg
in
xchg
push
mov
jns
pop
mov
jmp
push
fildl
jl
sub
pushl
call
add
bt
test
pusha
jmp
mov
jmp
pushl
lea
call
push
movl
call
not
call
mov
sbb
jmp
mov
jae
push
cmc
iret
mov
jbe
bound
mov
jle
sub
loop
sub
movsb
or
sti
fisubs
test
daa
mov
loop
jb
shrb
ret
xor
push
push
push
ret
lahf
bound
xor
ret
inc
pusha
xchg
outsl
insl
gs
pop
dec
cmp
and
dec
movsl
lcall
jno
mov
mov
pushf
push
movb
rep
call
add
add
inc
sub
add
add
push
and
add
add
add
bound
add
sub
enter
or
add
push
das
add
add
add
subl
cmp
pushf
cmc
sub
jmp
add
dec
gs
popa
addr16
outsl
js
add
push
sub
incl
lds
dec
idivl
loop
xor
stc
sub
adc
sti
jno
sbb
adc
xlat
mov
xchg
repnz
fsubrs
dec
sbb
lea
add
push
das
adc
cmpb
lock
dec
jmp
es
add
push
sub
xchg
xor
fists
out
and
in
je
ljmp
sub
adc
sbb
mov
push
pop
push
sub
aad
notb
fstpl
mov
cltd
nop
and
sub
jecxz
cmpsl
xchg
ja
popf
dec
lods
xor
mov
mov
mov
jmp
dec
cmp
pushf
roll
ret
inc
sbb
aad
sub
jecxz
insb
cmp
pop
dec
ds
jp
inc
adc
ret
popf
inc
add
and
jge,pt
aas
add
aam
cmp
and
rol
mov
xchg
mov
loope
lods
add
outsl
push
dec
sub
jmp
mov
or
or
outsb
sarl
mov
pop
xor
jmp
adc
addr16
inc
popf
sbb
fs
mov
in
aaa
icebp
mov
mov
std
push
nop
adc
pushf
loope
repnz
jp
cmpsl
xor
xor
loope
xlat
out
sub
addr16
pushf
ja
popa
ficomps
mov
sbb
pop
push
push
and
inc
push
aam
cmp
test
jae
dec
cmp
inc
xor
and
adc
jg
lea
popa
cmp
test
in
shrl
dec
iret
lret
sahf
nop
out
jl
mov
mov
addl
aad
imul
cmpsb
cld
mov
cld
ss
lahf
int3
jne
xchg
insl
push
xchg
or
jne
mov
scas
mov
ret
and
pop
ret
push
ret
addr16
loop
add
cs
test
xchg
popl
repnz
cld
cmc
in
stos
xchg
js
jle
in
mov
inc
sbb
stos
jp
es
stc
push
dec
sbb
or
inc
loop
shll
jb
sub
ret
fwait
xchg
jae
arpl
push
fstl
jno
pop
mov
and
das
cmc
xor
test
int
mov
aaa
cs
mov
loop
dec
and
movsl
and
addb
lahf
lcall
fcom
mov
fcomp
xlat
xchg
popf
cmp
jb
adc
mov
sar
adc
filds
call
xchg
subb
jmp
int3
mov
pop
adc
rorb
inc
setnp
mov
repnz
fstps
or
jo
pop
popa
sub
out
mov
adc
movsl
pushf
jb
sbb
arpl
test
sbb
ret
lahf
test
ljmp
xor
enter
rcrb
ret
dec
and
sahf
mov
outsb
mov
psubsb
xchg
xchg
mov
and
leave
out
push
dec
and
stos
and
clc
in
call
in
leave
mov
sub
repnz
daa
lret
fnstenv
jnp
clc
shlb
add
mov
pop
xor
and
out
adc
mov
js
push
cmc
mov
push
inc
inc
adc
test
jb
cmp
cmp
sub
and
pop
shll
stos
mov
sub
dec
cmpsl
insb
jecxz
or
sahf
sahf
gs
or
sub
divb
testb
add
out
in
sbbb
xchg
enter
inc
adc
xchg
lods
jle
scas
cmp
cmpsb
imul
add
push
push
mov
arpl
jns
fdivl
and
inc
or
add
loopne
cmpsb
out
fcompl
jecxz
cmp
into
mov
jg
jae
out
jmp
fildl
pop
iret
dec
cmp
movsl
push
and
fldt
cmc
enter
xchg
mov
dec
xchg
out
mov
jns
loopne
movsl
je
xor
hlt
mov
addb
inc
push
xchg
or
mov
in
dec
mov
shll
icebp
addr16
cltd
aad
mov
mov
popf
aad
sbb
mov
push
push
and
cmp
push
cmp
mov
xchg
jle
insb
fsubl
push
dec
inc
cmp
jmp
push
sar
les
fs
out
xchg
imul
dec
cmp
pop
dec
cmp
sbb
icebp
jnp
ds
pop
push
clc
aam
dec
notb
xchg
dec
jg
jb
adc
mov
into
xchg
loopne
jmp
inc
imul
push
push
and
sub
pop
lahf
sbb
mov
sub
or
out
loop
jmp
int
movsl
adcl
insl
mov
cmp
in
popf
xchg
push
in
in
out
inc
mov
lahf
xchg
push
sbb
stos
aam
call
inc
and
cmpsl
daa
or
jp
push
mov
aas
cmpl
testl
xor
push
inc
test
sub
dec
pop
inc
hlt
dec
xorb
push
and
std
out
insl
sbb
cmpsl
cmp
dec
inc
xor
or
push
insl
test
add
mov
pop
aaa
sbb
lret
lods
xchg
and
and
jbe
jo
push
dec
inc
popf
lcall
outsb
push
into
or
adc
dec
jno
xor
and
xchg
repnz
scas
inc
setl
xchg
dec
rcr
sub
xor
ror
shl
btr
add
ror
adc
stc
mov
setbe
mov
bt
test
pushf
call
pushf
movl
pusha
lea
jmp
into
out
aam
sub
add
pop
and
push
xor
jo
cmp
mov
mov
aam
sub
mov
and
ds
pop
xchg
dec
aad
out
movsl
inc
pop
mov
outsb
xchg
jo
push
inc
addr16
push
inc
inc
cwtl
nop
cmp
dec
jae
and
cwtl
inc
lds
push
pop
xor
cwtl
setle
cmp
adc
hlt
mov
mov
mov
push
pop
std
pop
xor
cmp
mov
push
xchg
dec
inc
movb
test
aad
nop
push
inc
lcall
mov
les
pop
into
lock
cs
lock
scas
stos
add
test
push
dec
rorb
cltd
xchg
loopne
aaa
xor
movsl
popf
lcall
mov
lret
in
call
test
aaa
mov
call
jnp
xchg
push
or
push
lcall
das
add
xchg
adc
push
fcoml
mov
dec
add
fcomps
rcll
psubsw
lds
xchg
insb
inc
cmp
fsubl
and
or
iret
imul
lret
sti
imul
mov
leave
les
mulb
xor
stos
test
jns
sbbl
cmc
inc
pop
adc
data16
mov
adc
sub
sub
popf
and
push
or
sub
ljmp
mov
xchg
pxor
lods
mov
repnz
shlb
sbb
cwtl
mov
jmp
inc
and
pusha
mov
and
jne
pushf
movl
pushf
lea
jmp
push
push
lea
jne
sbb
bsr
mov
cmc
push
add
test
movzwl
add
movsbw
bswap
rol
sbb
mov
clc
pusha
add
call
jmp
lea
je
bts
pusha
bsr
dec
add
sub
pushf
ror
sub
sub
bt
sbb
movsbw
shr
xadd
setb
ror
rol
mov
cmp
add
bts
shrd
add
sub
and
bts
dec
mov
pusha
shr
sub
jg
cmp
pushf
cmc
cmp
jmp
call
jmp
rdmsr
or
insb
jmp
cmpsl
scas
inc
aas
xor
jmp
sub
faddp
cwtl
lcall
stc
scas
sub
das
imul
insl
mov
sub
xchg
xchg
or
mov
leave
jbe
aas
adc
gs
fisubrs
adc
leave
stc
std
pop
mov
data16
test
test
iret
jl
dec
jle
mov
xchg
xor
jle
lock
sbb
imul
mov
shll
inc
in
in
in
loop
fcom
inc
leave
enter
dec
aas
in
push
cmp
dec
sub
icebp
std
ljmp
dec
dec
shr
push
jne
gs
mov
jmp
scas
into
cmpsb
sti
or
lret
fwait
jns
push
cld
scas
jno
push
adc
popa
or
lar
jae
mov
aam
lods
arpl
shrb
rclb
adc
jl
jb
push
mov
test
scas
lock
out
mov
sbb
je
lods
sub
mov
push
push
sub
sbb
dec
sub
int3
jge
fdivl
nop
xchg
xchg
push
push
adc
rcr
add
stos
daa
cmp
mov
outsb
dec
sbb
aam
mov
adc
cmpsb
and
sbb
sub
cltd
cltd
cld
jp
adc
pop
pop
mov
mov
repnz
sub
daa
mov
mov
or
dec
push
add
rclb
sub
ret
aas
xchg
ss
popf
xchg
adc
scas
icebp
into
scas
test
fwait
popf
xchg
add
pop
int3
jmp
push
mov
lds
cmp
int
js
cmp
hlt
lret
dec
daa
sbb
jmp
and
into
push
adc
mov
not
addr16
and
adcb
cmp
xor
mov
mov
incl
rcl
lret
cmp
mov
cltd
xchg
pop
jmp
incb
add
popa
insb
inc
insb
insb
outsl
arpl
jbe
outsb
dec
mov
mov
jb
cmp
call
and
aad
inc
pusha
pop
mov
lods
mov
sbb
pusha
addb
ljmp
fnstcw
xchg
testb
fisubl
mov
addps
jnp
sbb
xchg
addr16
adc
adc
mov
push
push
sub
cmp
add
and
mov
xor
out
xchg
cltd
mov
jne
js
popa
push
push
ret
jmp
jo
sti
add
fadds
adc
movb
pusha
jmp
push
mov
pushf
pop
jmp
jmp
lods
aam
test
xorb
inc
lahf
js
sub
pop
das
or
fcom
cmpsb
popf
xchg
repz
jp
mov
lods
addr16
pop
aam
mov
lret
aas
jmp
or
cmp
add
fs
jae
mov
pusha
inc
call
dec
clc
pushf
not
call
call
pop
cmp
out
jo
jns
sbb
ljmp
into
lods
xchg
push
scas
stos
cltd
jl
js
and
jo
jb,pn
inc
shl
popf
cmp
test
leave
test
xor
pop
das
bound
adc
adc
add
sbb
mov
jo
pusha
popa
push
ret
dec
inc
cmp
test
cmpsl
push
fs
jne
call
add
cld
dec
iret
xor
sbb
in
lahf
insl
inc
sbb
push
dec
test
sub
mov
add
mov
adc
fwait
ds
and
cmp
jnp
int3
fiadds
test
push
sub
and
or
jle
hlt
jno
repnz
ficoms
or
je
and
and
jmp
nop
mov
gs
mov
cmpsl
fld
test
jecxz
xchg
push
daa
adc
or
gs
sahf
mov
cltd
xchg
div
mov
stos
sub
push
pop
push
int3
std
and
out
ret
test
arpl
pop
pop
dec
dec
inc
sub
pop
dec
test
add
sub
inc
cmp
mov
jbe
sbb
movsl
jl
xor
sub
jmp
mov
lret
push
push
sbb
add
scas
sbb
aas
mov
jmp
mov
cld
inc
stos
insl
in
xor
cmc
push
pushf
dec
je
xor
jnp
outsb
sbb
aaa
gs
std
ja
sbb
pop
xchg
add
das
xor
cmc
ja
cwtl
xor
cmp
pop
pop
std
cld
icebp
jmp
lret
dec
jmp
or
test
add
pushf
test
bt
bt
add
bt
cmp
test
cmp
movb
pusha
lea
jb
stc
cmp
jmp
call
stos
mov
pusha
push
lea
jmp
out
les
cmc
xchg
in
mov
push
inc
adc
mov
push
smsw
fimuls
fcmovne
test
adc
xor
push
not
cmp
adc
ret
push
xchg
adc
ja
xchg
sarl
push
int
out
mov
mov
jmp
js
push
inc
xchg
adc
shr
dec
xchg
ss
inc
lea
rcrl
sub
lahf
pop
mov
sarb
out
pop
sub
cmc
in
out
push
jmp
adc
sbb
inc
push
xchg
xlat
add
dec
ds
pusha
aaa
or
jno
ss
jbe
pop
pop
dec
sbb
repnz
lea
sbb
xchg
testl
fisttpl
sbb
fstl
imul
push
push
sub
iret
cmp
shlb
jb
push
pop
pop
pop
push
mov
jmp
pushf
lcall
mov
mov
cwtl
outsl
push
push
cmc
mov
pop
xor
loopne
push
jb
aad
fldt
mov
dec
clc
inc
das
movsb
mov
pop
pop
pop
stos
dec
sub
jns
pusha
jg
adc
lods
xchg
adc
dec
aaa
es
add
add
repnz
jne
inc
negb
icebp
ret
inc
inc
pushf
fiadds
jecxz
pushf
insl
dec
push
test
jge
xor
xchg
scas
and
lahf
aaa
ds
xor
pushf
mov
jns
adc
insb
imul
xor
xchg
hlt
sti
dec
jmp
nop
cmp
inc
daa
popf
fwait
push
push
push
or
push
lds
push
sub
dec
sbbb
sahf
mov
nop
rcl
jnp
mov
stos
mov
jp
jo
pop
fucomi
repnz
sbb
int3
pop
test
mov
xchg
adc
xchg
sbb
shlb
sti
enter
jbe
iret
shl
and
es
or
out
mov
sbb
push
daa
shlb
jecxz
jp
xor
movl
pop
adc
lds
jge
push
push
adc
or
movsb
xchg
or
shlb
sbb
das
xor
adc
jecxz
jmp
push
movsb
leave
mov
pop
nop
lock
add
mov
pop
cmp
and
stc
mov
add
or
push
push
dec
test
adc
fists
imul
js
sbb
or
or
imul
jnp
push
push
das
mov
orl
sub
pushf
pop
aam
inc
lods
mov
push
dec
roll
repnz
or
aam
insl
dec
sbb
push
push
xor
loopne
mov
hlt
aad
mov
add
mov
sub
adc
insb
dec
sub
sti
sti
hlt
out
loopew
pop
sub
mov
xor
xchg
sub
mov
add
jb
jno
mov
lret
cmp
mov
cltd
mov
dec
and
push
or
iret
stos
lea
in
int3
stos
mov
adc
sub
icebp
mov
lods
les
popa
movsb
mov
xchg
mov
mov
mov
sbb
in
add
adc
les
leave
pusha
cmpsl
xor
orb
cmpsb
add
test
js
stc
xchg
test
outsb
jecxz
inc
out
out
popf
sbb
push
sub
mov
or
lock
or
and
add
icebp
and
dec
inc
inc
cmp
xor
adc
inc
add
aam
add
push
jbe
push
jmp
ret
and
jb
call
mov
mov
add
mov
xchg
shll
mov
repz
in
dec
aas
xchg
aad
in
xchg
mov
insb
into
mov
push
pop
stos
pop
xchg
cmp
rcrl
call
aad
in
push
test
push
adc
or
add
in
imul
pop
mov
or
mov
jnp
push
inc
sbb
lds
lret
lods
mov
inc
mov
loope
stos
call
sub
xchg
push
fwait
xor
dec
call
inc
lea
sahf
pop
jno
add
ljmp
push
push
das
rep
pop
pop
ficompl
mov
icebp
adc
ds
xor
sbb
cli
ja
repnz
fcomps
loop
lods
sub
push
sub
pop
cmp
jmp
mov
repnz
test
clc
mov
jp
push
xchg
in
das
lcall
sti
jp
addr16
push
stos
movsb
shll
insl
out
jecxz
fdivs
fcompl
sub
sbb
out
je
iret
jo
jge
es
inc
mov
out
inc
loope
lods
and
int3
aad
iret
inc
stos
xchg
inc
adc
je
pop
aam
loopne
lea
pop
pop
pop
dec
inc
cmp
push
pusha
bswap
mov
bswap
mov
jmp
in
adc
leave
inc
adc
inc
cmp
add
test
imul
cltd
or
mov
insb
fisubrs
rcr
dec
sbb
pop
or
dec
sar
cmc
jno
es
shlb
mov
dec
and
pop
leave
fstpl
mov
scas
jns
loopne
jno
fcmovnu
dec
stos
stos
or
mov
es
xchg
in
pop
orb
mov
mov
sub
mov
aad
xor
and
enter
idivl
outsb
in
repnz
push
jecxz
jmp
aas
push
push
or
pop
dec
push
dec
pusha
pop
push
or
pop
pop
or
push
pop
pop
or
dec
or
pusha
push
dec
or
pop
or
or
dec
dec
pop
push
dec
or
pop
push
push
or
pop
dec
pop
push
dec
or
pop
push
or
dec
pop
dec
pop
or
pop
jmp
in
xchg
or
nop
adc
pop
xor
mov
outsb
inc
sbb
sbb
aad
rcll
mov
mov
xor
or
stc
aam
and
xor
adc
pop
mov
add
add
je
imul
fmulp
int3
les
pop
shlb
add
adc
in
cmp
outsl
adc
test
cli
iret
stos
jne
sub
mov
and
mov
cmp
inc
sbb
adc
xchg
mov
aam
hlt
mov
cmp
inc
inc
shrl
adc
adc
cmp
inc
or
and
ljmp
xor
popf
test
pop
dec
or
pop
xor
push
or
ja
repnz
dec
and
in
dec
cli
ret
mov
push
iret
les
clts
std
add
in
jb
repnz
subb
hlt
int
and
icebp
rcrb
mov
sbb
pop
pop
xor
jnp
push
and
lea
mov
pop
inc
rcrl
lods
test
push
dec
into
sahf
aam
ds
or
pop
aam
pop
ja
and
std
repnz
aam
mov
rolb
andb
mov
push
push
dec
mov
in
mov
xorb
sub
lds
add
push
fisubrl
ds
sbb
lds
fnstsw
imul
movsl
xchg
sbbl
inc
mov
and
push
stos
lods
push
cli
sub
fwait
xchg
icebp
and
test
adc
cmp
fs
jae
pushf
test
add
jae
sub
push
push
jmp
call
call
imul
lods
test
sbb
cwtl
jnp
xor
loopne
fisubl
in
es
in
mov
push
or
repz
aas
out
sbb
mov
addr16
sub
jbe
stos
das
mov
mov
clc
out
jecxz
leave
mov
jmp
bound
or
add
movb
stc
sub
jnp
cmc
add
push
pusha
lea
jmp
pushf
call
pusha
lea
call
jmp
bts
bts
sub
push
jmp
add
add
jno
jp
fwait
adc
add
add
notb
mov
enter
mov
movsl
testb
add
jb
inc
cli
test
dec
shlb
in
mov
push
aam
jns
xor
aam
mov
cmp
rclb
xor
repnz
stos
mov
popf
cmp
rcl
mov
inc
test
out
js
test
push
adc
add
addr16
or
int
pop
or
add
outsl
push
push
xor
fs
insl
push
loope
push
fisubrl
test
push
dec
inc
cmp
cs
or
std
mulb
repnz
shlb
bound
movsb
mov
lea
mov
pusha
pushf
push
lea
jmp
pushf
cmp
bt
test
jmp
repnz
xor
mov
repz
xchg
mov
xchg
rolb
mov
inc
data16
ret
mov
inc
fwait
xchg
enter
add
jbe
out
pop
nop
xor
je
outsb
pusha
pop
push
push
push
inc
inc
xor
arpl
imul
pop
and
lea
call
pusha
adc
lea
jnp
push
movb
lea
jae
pusha
pushf
lea
jne
jmp
ret
out
popl
loope
loop
xchg
xchg
sbb
pop
xor
mov
rorl
jne
test
cmp
mov
or
movsb
jbe
jge
je
nop
mov
sub
lret
adc
adc
jo
lods
out
popa
scas
sub
cmp
sub
push
mov
mov
mov
pop
aam
pop
dec
push
shr
repnz
mov
ljmp
arpl
std
xor
ljmp
in
xchg
push
aad
ret
push
sub
mov
xor
fs
out
mov
mov
add
inc
sub
push
mov
xor
ja
pusha
pop
rcrb
inc
xor
pop
and
push
xchg
jmp
pop
js
cmp
push
pushf
pusha
push
lea
jae
jmp
pushf
pushf
lea
jbe
or
movsbw
mov
bt
add
pushf
lea
mov
pushf
seta
sets
btr
add
lea
movl
setbe
movb
btr
sbb
mov
lea
cmp
test
stc
cmc
cmp
jmp
mov
mov
pop
ds
jno
jb
loop
jns
adc
aam
xchg
insl
cmp
mov
and
into
jne
cmc
push
or
pop
repz
je
cmpsb
mov
enter
lret
cmpsb
addl
mov
aad
pop
dec
cmp
ss
lds
leave
test
test
lods
addr16
sub
iret
int3
popf
pushf
xor
sti
sti
icebp
out
jmp
push
xchg
mov
imul
jl
and
les
faddp
xchg
insl
arpl
mov
push
xor
mov
enter
arpl
inc
inc
and
xchg
inc
js
mov
int3
xchg
out
mov
sbb
ficomps
and
and
adc
repz
out
push
addr16
jp
loope
cmpb
addl
or
stos
mov
fcoml
popl
push
not
pushf
rcr
mov
push
cmc
ror
jmp
push
lea
jbe
bsf
xadd
movsbw
not
sub
cmp
inc
stc
shld
mov
add
mov
test
bsf
add
xor
bts
test
sar
shr
clc
mov
pusha
btr
btc
pushf
add
movzbw
call
mov
pusha
movb
lods
cmc
movb
call
add
pop
pop
jbe
popa
push
arpl
je
jne
je
mov
imul
xchg
outsl
dec
sbb
enter
xor
pop
std
pusha
shr
sbbb
je
pop
mov
notl
add
jg
movsb
and
dec
bound
adc
popa
sub
mov
stos
outsb
pusha
fmuls
sbb
loope
fdivrs
cmp
or
jle
je
lahf
movd
pop
cs
leave
adc
pop
notl
in
outsl
pop
pop
push
sbb
outsb
xorb
mov
mov
adc
xor
repnz
popf
xchg
jge
faddl
ret
inc
sbb
in
mov
xorb
cmpl
rorl
mov
add
push
fdivl
fcomps
dec
dec
sbb
cli
leave
fstpl
jecxz
mov
push
fdivl
cli
mov
mov
or
add
out
gs
and
inc
cs
pop
dec
sub
pop
dec
sub
in
mov
pop
fdivrs
mov
sub
and
aas
dec
mov
jle
test
fwait
lds
xor
jno
fwait
push
xchg
and
movsb
imul
add
push
popa
push
pop
or
xchg
add
sub
cltd
jbe
in
loopne
dec
mov
pusha
push
push
dec
mov
mov
repnz
movl
pushf
jmp
pusha
pushf
pushl
lea
jne
jmp
mov
mov
lea
ja
pusha
jmp
add
loope
inc
aas
dec
xor
arpl
pop
in
cmpsb
xchg
dec
movsb
movsb
dec
inc
cwtl
jg
repnz
pop
jl
out
test
lock
iret
shll
mov
xchg
or
push
lahf
aaa
test
pop
and
je
inc
lods
in
enter
and
sbb
push
or
test
push
iret
mov
je
mov
shlb
ror
int3
mov
lahf
xchg
test
imul
repnz
cmp
out
imul
sub
call
sbb
leave
mov
in
cmpsb
pop
out
inc
push
jmp
popa
mov
pop
aad
mov
mov
fwait
adc
das
ss
adc
loope
insl
fiadds
mov
popf
bnd
xchg
mov
repz
or
lds
push
cmpsl
sbb
or
lahf
cltd
cltd
loop
pop
mov
mov
dec
xchg
push
lret
dec
add
push
outsl
repz
sarl
sbb
mov
scas
push
lret
dec
ret
jg
adc
aaa
loop
jae
jnp
jl
jo
jno
sbb
mov
mov
or
jle
idivl
xor
push
pusha
dec
add
jnp
fwait
mov
jge
insb
in
push
mov
scas
imul
mov
out
and
or
es
inc
daa
adcl
mov
pusha
subb
and
xor
test
lock
jne
jb
jmp
and
sbb
sbb
sub
jmp
pop
std
orl
lods
mov
push
sahf
xor
add
jmpw
xor
test
push
lahf
inc
mov
into
cmp
cmp
leave
pop
inc
lcall
stos
mov
sarl
icebp
test
jno
jp
xchg
sbb
pop
or
mov
fs
dec
pop
fwait
mov
jmp
cmp
insb
xlat
cmp
test
aam
inc
sbb
jne
dec
dec
cmp
cmp
xor
sbb
push
inc
imul
leave
insb
mov
cmp
lds
repnz
xor
mov
lea
je
test
pusha
cmp
call
pushf
lea
je
clc
shld
movsbl
mov
shld
ror
add
lea
lea
mov
mov
call
xchg
mov
xlat
dec
sub
add
push
sub
fbstp
aad
push
mov
xor
dec
inc
mov
leave
mov
mov
lods
insb
popa
inc
or
sbb
adc
rorb
sbb
mov
shlb
dec
sbb
mov
jae
xlat
cmp
xor
outsb
pop
push
and
mov
push
dec
inc
cmp
cs
and
leave
enter
adc
movsb
push
cmp
add
xchg
ss
jmp
inc
sub
call
movb
pushf
pushl
lea
je
cmc
add
shl
ror
and
mov
bt
test
add
bt
clc
push
mov
shld
mov
movb
push
push
cmc
cmp
jmp
call
lea
call
call
jmp
mov
cmpsl
xchg
adc
je
or
test
icebp
leave
test
pop
xor
push
push
inc
adc
int
clts
clc
out
stos
push
int
fwait
xchg
std
inc
sub
lahf
rcrl
jnp
mov
sahf
repz
cmp
adc
fildll
hlt
dec
push
pop
cld
ja
inc
pop
mov
and
pop
xor
pushf
pop
out
dec
cwtl
jl
popaw
arpl
dec
inc
cmp
repnz
xchg
pop
enter
mov
movb
mov
movb
movl
lea
jmp
add
add
add
add
add
push
das
add
and
add
pop
sub
inc
jecxz
add
and
add
pop
sub
mov
das
add
and
add
add
add
and
mov
adc
movb
movl
movb
movb
pushl
ret
adc
adc
pop
and
int
sbbb
jmp
xchg
addr16
xor
daa
out
int3
sti
or
add
dec
lods
cmpsl
inc
mov
fmull
add
daa
cli
lea
adc
pop
adc
mov
out
ss
in
jl
mov
into
dec
dec
dec
popf
cs
mov
jge
mov
push
sub
stos
ret
push
pop
rcrl
movb
mov
fbstp
pop
and
push
loopne
adc
leave
mov
divl
cwtl
xchg
hlt
shlb
repz
sub
cld
xlat
lea
cltd
fimuls
inc
xchg
mov
scas
mov
aam
mov
push
sbb
arpl
clc
repz
add
sbb
push
mov
jnp
mov
pop
cld
cmpsl
push
in
movsb
inc
inc
cmpb
mov
inc
mov
mov
jecxz
mov
or
iret
lret
stos
or
sbb
out
mov
jecxz
sarb
call
aaa
xchg
imul
xlat
xchg
cmp
imul
arpl
outsl
outsb
adc
fwait
outsl
inc
xor
sbb
and
aas
hlt
gs
jb
add
xchg
sub
and
mov
aad
and
push
lret
pushf
pushf
adc
sbb
aaa
xor
jbe
xchg
mov
cld
out
dec
dec
in
les
std
stos
cmpsb
sbb
imul
jmp
xor
sub
sbb
jno
movb
mov
sub
test
ficoml
pusha
out
fstp
dec
jmp
jecxz
mov
push
movl
movb
lea
jmp
push
pusha
not
mov
pushf
jmp
and
loope
xchg
fs
test
push
xor
stc
cli
push
shr
fdiv
arpl
xchg
xchg
in
int3
and
arpl
int
movl
sub
and
mov
pop
out
xchg
adc
popa
push
mov
scas
mov
cwtl
stc
fdivs
lret
cmp
outsb
roll
bound
adc
or
fdivs
push
inc
pop
fnstenv
adc
popa
jmp
pop
fstp
sbb
dec
jo
jne
mov
inc
enter
cwtl
sahf
xchg
mov
pop
adc
adc
ss
movsb
sbb
andl
jmp
add
add
es
pusha
and
mov
insl
push
das
pop
jmp
mov
and
iret
fnop
dec
cmpsb
cmp
and
int3
xchg
rclb
cmpsl
leave
xorb
outsl
cld
add
adc
mov
xchg
mov
stos
jmp
mov
cmp
jae
push
push
inc
lret
ja
jae
movsl
xor
popf
jmp
pop
dec
inc
ds
xor
push
xchg
jmp
mov
add
mov
xor
in
enter
cmp
out
insl
pop
fscale
out
lea
je
sbb
loop
adc
sti
lcall
cmp
cs
and
orl
test
ja
sbb
and
stc
stos
repz
push
push
inc
inc
sbb
dec
cmc
leave
mov
mov
div
jmp
fcmovnbe
les
cmpsb
and
bnd
pop
adc
mov
ljmp
ja
clc
fdivl
out
ret
fwait
sbbb
and
aaa
jno
aas
xor
stos
fidivl
and
outsl
dec
and
in
mov
adc
mov
mov
insl
in
mov
push
adc
icebp
repz
aaa
mov
jae
jmp
outsb
pop
push
push
dec
inc
aas
xor
and
leave
xchg
pushf
lea
jae
bt
cmp
sub
pushf
lea
call
pusha
movw
call
out
faddp
cmp
jns
dec
xor
scas
mov
sbb
iret
mov
sbb
mov
out
xor
sbb
fstpt
cli
inc
jmp
in
mov
repnz
sub
inc
push
popf
pop
lahf
sbb
add
adc
cmp
mov
sbb
adc
std
out
fs
out
fcom
ror
ret
jmp
cmc
bt
cmp
cmp
add
pushf
movb
lea
jmp
jmp
call
add
dec
mov
add
mov
aad
outsb
or
dec
aam
push
jne
push
mov
jl
cmc
lods
or
pop
cmp
andl
paddsw
pop
aad
sahf
sbb
rol
jle
dec
jb
insb
dec
adc
testl
prefetch
or
xorb
cltd
in
mov
je
pop
fmull
add
aam
lahf
mov
xchg
mov
mov
xor
outsl
xchg
jno
inc
add
xchg
sub
and
or
dec
or
pop
loopne
push
imul
iret
fisttpl
cli
sub
lock
add
aad
jb
push
lods
push
add
mov
call
xlat
out
insl
xor
and
lods
not
push
xchg
add
repz
dec
jle
xchg
xchg
dec
fstl
xor
adc
pop
sti
add
xchg
cmp
fadds
fld1
mov
jl
add
popf
xorb
mov
fistl
sbb
mov
adc
add
lret
inc
sub
and
mov
aas
push
inc
sub
pop
pop
or
jmp
or
add
popf
aad
or
mov
movsl
scas
xchg
pop
jmp
xchg
rcrl
rolb
fmull
dec
adc
dec
out
sbb
pop
add
test
xor
data16
fimuls
iret
lds
in
outsb
xlat
sti
jae
pop
rorl
push
testl
out
sub
and
pop
sbb
sub
jle
arpl
inc
lahf
cltd
xchg
jno
inc
xchg
mov
pop
jecxz
mov
jmp
pop
jbe
lahf
fisttpl
je
and
push
and
push
call
cmpsl
or
push
mov
nop
xchg
lock
ja
xchg
lea
mov
cmc
je
dec
stos
data16
mov
rcl
add
inc
push
outsl
repz
mov
push
jnp
push
xchg
repnz
xchg
into
add
xchg
pop
pop
insl
pop
xchg
rcl
cmp
mov
jne
fists
fldcw
mov
dec
in
mov
fucomip
out
xchg
fnstenv
push
pop
out
pop
imul
xchg
xchg
push
jne
cld
add
aad
xor
inc
jb
mul
repz
cwtl
repz
rcr
push
xchg
addr16
push
push
xchg
push
iret
dec
fisttpl
push
jmp
pop
out
fcompl
out
push
pop
xchg
mulb
loope
sahf
push
std
fcmovbe
pop
std
pop
aad
adc
in
iret
inc
adc
push
into
das
push
scas
popa
xchg
push
leave
lahf
jmp
aad
lret
xchg
pop
xchg
lds
push
adc
jg
push
ret
jl
push
mov
int
mov
inc
sti
ror
fstpt
icebp
outsl
clc
loop
daa
or
mov
in
ss
or
xchg
and
rcll
mov
dec
lret
adc
iret
jge
push
or
mov
and
imul
leave
pop
ret
or
push
in
icebp
int
inc
lods
fisttpll
pop
push
or
pop
in
ret
and
add
pushf
in
icebp
stc
in
inc
iret
sbb
icebp
in
inc
lcall
jmp
pop
lahf
pop
ret
fstl
popf
pop
in
icebp
fnsetpm(287
test
negb
lret
mov
or
cwtl
ss
out
mov
mov
push
or
aad
sarb
mov
sub
lret
out
imul
aam
movd
lret
pop
adc
roll
fstpt
nop
xchg
out
sqrtps
xchg
stc
rorl
ror
mov
out
cltd
push
aaa
xlat
sahf
inc
or
outsl
std
leave
es
faddp
int3
or
decl
cmc
or
push
jae
or
test
aaa
out
or
or
or
dec
scas
mov
std
sub
inc
add
in
icebp
mov
xchg
std
add
inc
push
jo
out
inc
fstpl
inc
mov
add
lret
mov
mov
aaa
out
fidivs
ret
insb
jle
lret
lods
shrl
out
int
aaa
or
mov
add
aaa
xchg
or
jle
popf
aas
sub
lret
out
arpl
aaa
mov
or
xchg
or
jle
mov
sub
lret
out
pushf
mov
mov
or
add
sub
lret
out
lds
add
jmp
sbb
int
out
inc
mov
fildll
lods
mov
ljmp
push
add
repnz
icebp
repz
iret
dec
adc
fidivs
inc
fidivs
xchg
or
jle
add
jle
test
out
inc
lock
mov
aaa
out
fdivl
xor
lret
add
jle
pushf
xchg
sub
lret
out
mov
jmp
ret
call
xchg
or
adc
movsb
jle
leave
xchg
sub
lret
out
fcoml
mov
or
add
or
out
pushf
getsec
fcmovu
ss
mov
sti
fidivs
xchg
or
dec
out
mov
aaa
out
fidivs
xchg
or
jle
add
jle
movsl
or
jecxz
out
jbe
aaa
mov
mov
lret
jle
lret
mov
sub
lret
out
mov
aaa
hlt
fidivs
xchg
or
jle
fwait
enter
out
rorb
fidivs
xchg
or
jle
enter
jle
test
out
lret
inc
aaa
or
mov
push
or
xchg
or
test
lods
sub
enter
enter
test
mov
in
inc
popf
add
fildl
cmp
pop
movsb
add
push
add
add
icebp
add
or
sub
les
push
add
pop
movsl
rol
push
add
inc
in
icebp
push
in
inc
lods
add
sbbb
in
pop
fs
mov
in
icebp
cli
in
jecxz
xchg
enter
jle
add
jle
int3
std
sub
lret
sub
xchg
sub
xchg
out
mov
aaa
lock
xchg
or
jle
xchg
cmp
aad
out
mov
mov
jnp
fistl
add
lret
push
mov
mov
aaa
repz
pop
mov
imul
xchg
or
jle
add
lret
in
sub
lret
out
cmpl
rcr
movsl
testl
jle
add
lret
pop
aaa
sub
lret
sub
out
aad
aaa
adc
mov
cmc
or
mov
sarl
scas
xor
mov
je
jmp
or
jle
lds
jg
loopne
fadd
xchg
xchg
pop
push
lret
ja
push
add
pop
iret
insl
or
fildl
in
notl
or
sub
adc
in
mov
in
cmp
ljmp
pop
jecxz
add
arpl
or
add
push
sahf
aad
pop
or
cmpsb
and
in
int
xchg
xlat
lret
jmp
lods
scas
or
jmp
leave
ds
mov
mov
jle
add
jle
jae
sub
or
ja
aaa
mov
mov
fwait
or
lcall
add
jle
stos
xlat
sub
lret
out
stc
push
aaa
cmp
mov
push
leave
adc
mov
push
or
xchg
or
jle
mov
leave
lret
out
mov
aaa
lock
add
outsb
icebp
inc
xchg
or
adc
arpl
add
insl
mov
inc
ret
int
dec
in
mov
lret
fmul
int
sub
or
add
leave
push
xchg
xchg
std
or
decl
sub
int
addr16
dec
or
incl
fistpll
inc
fstpl
or
xchg
shlb
xchg
or
inc
nop
in
jbe
adc
test
or
xchg
or
inc
nop
in
pextrw
push
movsb
in
fsubp
mov
test
mov
inc
add
sub
lret
out
push
les
xchg
fidivs
xchg
leave
popf
ret
or
jmp
jle
push
add
lret
out
loope
aaa
and
mov
orb
xchg
or
jle
add
jle
pushf
stos
fcmovu
mov
aaa
out
fidivs
xchg
or
lods
subl
aaa
fidivs
xchg
or
mov
inc
ss
in
xchg
shlb
xchg
or
jle
mov
aas
aaa
repnz
xchg
or
mov
les
add
ja
rcl
lods
jle
add
jle
sar
dec
out
jg
ss
sub
xchg
sub
xchg
out
int3
cmp
mov
jle
add
jle
enter
lret
in
pushf
fidivl
xchg
or
jle
add
jle
cwtl
stos
fisubrs
sarb
insb
ds
push
jnp
xchg
lret
out
cli
aaa
int
mov
mov
xchg
add
jle
cmpl
ror
jg
aaa
mov
leave
sbb
mov
jns
mov
or
cmp
mov
lret
outsl
clc
sub
lret
out
imul
js
movsl
xchg
or
cmp
mov
sub
lret
out
pop
mov
cltd
fidivs
xchg
or
jle
mov
in
nop
push
movzbl
movsb
push
ret
loop
mov
jle
int3
ss
lret
in
mov
cmc
or
xchg
or
jle
add
jle
in
xor
or
je
and
or
jle
add
lret
fnsave
stc
xor
cmp
mov
repnz
or
jle
add
jle
jle
add
jmp
out
push
xor
inc
fidivs
xchg
or
jle
add
lret
fnstenv
sub
lret
out
cmc
scas
aaa
xor
mov
outsl
or
xchg
or
jle
add
lret
or
dec
lret
out
in
aaa
and
mov
lods
or
or
jle
add
lret
stc
in
sub
lret
out
aad
aaa
adc
mov
sub
xor
dec
xchg
or
jle
add
jle
push
ljmp
aaa
and
mov
sub
cmp
or
jle
add
jle
cmc
imul
aaa
pop
fidivs
rcr
mov
call
les
cwtl
mov
push
sarb
jle
xchg
stos
rcr
test
aaa
out
mov
cmpsl
or
xchg
or
mov
daa
aaa
neg
mov
out
or
fmulp
mov
sub
lret
out
enter
fidivs
rcr
mov
es
jle
in
add
in
cwtl
mov
movsl
or
xchg
or
jle
add
jle
xchg
stos
rcr
test
aaa
out
mov
in
cli
xchg
or
inc
shr
loop,pt
mov
out
int3
and
or
ja
rcr
mov
jecxz
bnd
enter
lret
in
pushf
fidivl
xchg
or
jle
add
jle
cwtl
stos
fisubrs
shlb
insb
ds
test
sub
lret
out
mov
ja
add
loope
icebp
movsb
in
loop,pt
mov
out
int3
popa
aaa
or
ja
rcr
mov
and
bnd
enter
lret
in
pushf
fidivl
xchg
or
jle
add
jle
cwtl
stos
fisubrs
rcr
xchg
or
lahf
sub
lret
out
mov
ja
add
pop
in
icebp
movsb
in
loop,pt
mov
out
int3
sahf
aaa
or
ja
rcr
mov
pop
add
jle
enter
lret
in
pushf
fidivl
xchg
or
jle
add
jle
cwtl
stos
fisubrs
rcrb
insb
ds
test
sub
lret
out
mov
ja
add
pop
in
icebp
movsb
in
loop,pt
mov
out
int3
or
ja
rcr
mov
fwait
add
jle
rcrl
adc
out
fidivl
int
ja
rcr
mov
lcall
sub
lret
in
pushf
fidivl
xchg
or
jle
add
jle
cwtl
stos
fisubrs
or
or
or
jle
add
lret
add
inc
lret
out
fstpl
aaa
sbb
mov
xchg
or
xchg
or
jle
add
lret
icebp
sub
lret
call
lret
out
jmp
mov
xchg
or
loope
push
add
jle
std
aam
cmp
out
fsts
adc
xor
or
jle
add
jle
in
push
sub
lret
out
or
aaa
dec
fidivs
xchg
or
jle
add
lret
fst
sub
lret
out
stc
push
aaa
cmp
mov
adc
adc
or
jle
add
jle
jle
add
jmp
add
lret
push
sub
lret
out
loope
aaa
and
aaa
std
in
cmp
mov
mov
sbb
xor
or
jle
add
jle
in
dec
sub
lret
out
rorb
rcl
test
int3
add
jle
mov
in
nop
push
cmovl
movsb
push
ret
loop
mov
jle
int3
lret
sub
lret
in
mov
mov
repnz
or
jle
add
jle
pushf
stos
fcmovu
mov
aaa
out
fidivs
xchg
or
lods
mov
lret
out
rorb
fidivs
rcl
test
or
out
lret
mov
in
nop
push
jns
loop
mov
jle
int3
or
lret
out
jmp
mov
mov
movsl
xchg
or
jle
add
lret
dec
xchg
aaa
push
fidivs
xchg
or
xchg
lods
jle
imul
lret
out
addr16
aaa
movsl
fidivs
xchg
dec
xchg
test
inc
add
push
mov
sti
addl
idivb
push
fdivr
sbb
pushl
lock
cmp
pop
addr16
int
xor
xchg
test
idivl
les
aaa
stc
lretw
in
ljmp
inc
or
test
dec
and
out
jb
mov
dec
dec
out
cltd
jg
fnstcw
or
mov
xor
mov
or
xchg
dec
jo
or
xlat
mov
jl
mov
or
xchg
pop
or
ret
cmpsl
sbb
push
mov
push
outsb
xchg
push
imul
aad
xor
dec
int
vcmppd
testl
inc
add
cmp
pop
pop
mov
mov
lods
adc
lds
std
aam
out
pop
lods
push
lret
lds
push
in
mov
xchg
leave
ds
push
cmp
out
cmp
dec
jmp
and
jnp
pop
xchg
jp
call
inc
lods
mov
and
xchg
fsubrp
mov
xchg
in
add
scas
sub
xchg
int
inc
or
test
jecxz
cli
adc
jo
nop
mov
lret
rolb
jmp
repnz
js
or
mov
or
repz
or
mov
scas
aad
mov
enter
out
inc
lret
inc
leave
addb
or
inc
xchg
je
lods
push
lret
inc
add
std
adc
cs
imul
pop
popf
std
pop
stos
fadds
in
dec
test
stos
roll
mov
ss
mov
das
and
les
stos
push
xchg
or
ret
add
pop
sarl
mov
ret
jg
lret
cmpsb
addb
xchg
pop
or
add
or
xchg
mov
or
push
in
lar
mov
push
in
pop
shrl
std
shr
stc
or
xchg
or
add
cmp
mov
daa
in
jne
dec
std
pop
add
movnti
int
std
ss
xor
pushl
mov
std
stos
xchg
or
jg
jae
lods
adc
ret
xor
pop
incb
out
push
adc
sbb
cmpb
pop
pushf
std
shrl
in
lret
stos
mov
jge
out
pop
mov
or
mov
std
lret
lret
incb
ljmp
mov
or
jge
mov
push
xchg
maskmovq
out
xchg
or
cld
xchg
mov
push
xchg
jl
addr16
xchg
sub
xlat
stos
fs
xchg
sti
scas
or
pop
test
pop
jp
aaa
pop
lock
inc
in
daa
sarl
mov
or
jbe
mov
mov
lods
pop
into
cmp
lods
in
mov
dec
cli
emms
std
xor
mov
pop
lret
jg
out
std
pop
in
aas
cmp
sub
outsl
pop
lods
leave
cmp
ljmp
fistl
push
or
fucom
xchg
je
divb
stos
fldl
ret
int
jecxz
insb
adc
adc
nop
cmp
dec
mov
lret
ja
cs
lods
repz
add
jae
icebp
out
std
add
mulb
sahf
out
aaa
testb
stos
lods
xchg
mov
loopne
xchg
lret
jle
arpl
decb
push
subb
mov
or
xor
hlt
sub
sbb
mov
fmulp
adc
setge
push
push
stos
push
fisubs
fsubs
out
out
andps
mov
rorl
or
mov
lods
sbb
int3
mov
jge
outsb
std
pop
loope
jb
add
xor
sub
ret
mov
in
test
xor
xchg
iret
ds
inc
cmp
xorb
xor
add
lret
inc
fnstsw
loope
push
xchg
shrl
scas
jns
ret
aad
fcomi
push
loop
xor
xchg
lret
jecxz
iret
xor
iret
test
jo
iret
data16
iret
pop
lods
iret
push
insb
iret
mov
adc
add
push
mov
pusha
or
stos
xchg
stos
pop
in
dec
imul
inc
sub
push
jecxz
pop
stos
cwtl
inc
push
in
or
lret
sub
push
xchg
lods
jmp
scas
inc
lret
sub
pop
xchg
test
cld
loop
push
sbb
inc
out
ja
popf
cmpsl
xchg
or
daa
xor
jmp
jmp
in
shlb
out
dec
in
xor
in
int
jmp
outsb
in
push
movsb
xchg
cltd
mov
iret
loop
jmp
cmovs
pcmpgtb
xadd
sub
sahf
jmp
adc
mov
test
lahf
push
ds
fidivrs
repnz
or
and
mov
sub
addl
cltd
or
inc
xchg
fs
xchg
lods
push
lret
dec
fmull
subl
mov
xchg
scas
stos
pop
or
pop
xchg
push
lret
push
sbb
les
cmp
stos
mov
mov
outsb
mov
pop
test
xchg
pop
mov
nop
std
adc
or
lret
mov
insb
xor
mov
xchg
std
ja
outsl
xchg
lahf
sbb
sbb
enter
mov
stos
push
push
lods
adc
or
popl
std
mov
pop
lods
std
gs
popa
xchg
adc
scas
add
std
jne
jno
insl
in
lods
sbb
adc
pop
decb
mov
out
sbb
xchg
push
or
inc
inc
in
pop
pop
scas
push
in
int
sbb
mov
lods
jns
xor
stos
adc
fadds
lcall
call
pop
push
xchg
jle
lods
mov
jne
xor
lods
stos
insb
xchg
movsb
arpl
sbb
stos
push
xchg
or
sbb
dec
lret
mov
shl
push
xchg
xlat
psrad
cmp
lods
push
mov
shlw
int
das
push
push
xchg
xchg
pop
filds
push
subl
xchg
popl
sar
iret
xchg
push
lret
xchg
push
ud0
lods
stos
mov
pop
xchg
incb
mov
xor
scas
insl
lods
jmp
std
mov
pop
aad
push
mov
xchg
mov
add
decb
call
xchg
push
das
stos
pop
or
push
or
adc
dec
xchg
or
push
or
adc
add
shr
jbe
cltd
lret
int
lret
cli
ror
leave
xchg
pop
jl
stos
mov
dec
or
add
or
scas
je
or
sbb
repnz
cs
jle
push
pop
dec
repz
int
fcomp
or
roll
sub
or
jmp
idiv
pop
lahf
ret
inc
dec
outsb
xchg
stos
movsl
push
in
movb
ss
pop
xchg
inc
push
icebp
stos
lods
xchg
mov
mov
std
scas
stos
sub
ljmp
popf
pop
sbb
fsubrs
nop
mov
inc
or
sar
and
js
push
lods
sub
int
cld
clc
lods
xor
jmp
fists
mov
test
mov
lods
inc
inc
mov
into
add
imul
pop
xchg
std
push
in
or
dec
adc
jl
clc
xchg
hlt
jno
lock
jmp
xchg
loope
lods
fimull
or
test
sbb
add
jp
aas
mov
mov
aad
inc
cmp
jg
aad
xchg
stos
test
std
imul
pop
in
mov
pop
and
xchg
or
lods
inc
mov
cmp
stos
mov
xor
mov
sub
stos
movsl
xchg
popf
mov
pop
xchg
mov
add
enter
in
das
or
inc
loop
movsb
inc
lret
pop
inc
sbb
flds
lret
xchg
or
rcll
ror
int
ffree
push
push
cli
or
aas
repnz
inc
lret
mov
xchg
jns
sub
psubw
sub
xchg
scas
pop
lods
sbb
or
std
pop
in
or
jnp
mov
mov
lods
pop
mov
leave
mov
in
lret
jmp
jecxz
pop
push
lods
xchg
mov
aas
rcll
lret
sub
enter
std
dec
inc
inc
push
mov
int
stos
addl
jbe
bound
nop
decb
xchg
lods
and
mov
stos
pop
xchg
xchg
adc
int3
ds
dec
mov
pop
inc
std
les
cmp
mov
xor
scas
lahf
std
push
lods
hlt
std
lahf
stos
int
filds
jae,pt
dec
xchg
repz
cmp
or
mov
jl
dec
mov
mov
lods
and
psllw
mov
mov
or
scas
cmp
std
push
in
mov
xchg
int3
aas
cmp
leave
aad
sahf
or
out
mov
push
loop
sahf
xchg
mov
jecxz
push
in
push
mov
mov
out
sub
scas
and
inc
and
add
hlt
mov
jle
std
cwtl
leave
cli
or
mov
push
mov
mov
adc
jp
out
cwtl
or
cmp
lods
adc
cmp
in
lret
or
lock
mov
mov
fucomp
cmp
enter
jg
je
mov
xrelease
out
push
jae
push
data16
cs
cs
out
repnz
scas
out
lods
mov
dec
pop
std
repz
jmp
aam
cs
ljmp
sbb
or
test
int
lcall
shr
pop
cmpsl
or
pop
and
push
or
loop
or
leave
add
or
mov
push
rcr
rcr
stc
fsubrp
pop
add
aad
pusha
mov
std
xchg
in
lahf
fimuls
add
jns,pt
je
rcrl
jge
ds
mov
mov
lods
out
xchg
or
inc
inc
lods
mov
jmp
or
inc
mov
pop
mov
or
sahf
xchg
cld
or
in
push
pop
out
add
scas
cmp
cmp
imul
in
int
mov
push
push
or
aas
fildl
push
loop
lods
popf
pop
mov
pop
jo
insb
mov
pop
adc
sbb
xchg
nop
in
cmp
scas
aaa
mov
repnz
nop
pushf
sysret
pop
push
inc
in
push
sbb
mov
stos
add
fwait
or
xchg
fwait
sub
lahf
mov
sti
ja
fmulp
adc
sbb
or
addl
fcompl
cmpsl
sbb
adc
cmp
or
pop
out
lock
sub
cmp
mov
scas
ret
xchg
iret
pop
push
iret
iret
in
push
cmpsb
xchg
adc
icebp
std
mov
lods
lock
push
stos
psadbw
jae
xchg
adc
and
xor
jg
push
mov
push
adc
rorl
in
lret
popf
or
adc
nop
xchg
cmpsl
movsb
sub
psadbw
add
xor
outsl
fs
mov
or
cmc
cld
or
pop
or
hlt
push
inc
dec
out
mov
adc
dec
rorb
dec
lret
pop
or
push
xchg
adc
push
out
cmovge
adc
aam
loop
setnp
fisttpl
jmp
movsl
xchg
dec
or
or
jle
or
mov
mov
rolb
mov
pop
or
adc
push
enter
lret
pop
xchg
cmp
sarl
mov
mov
or
jl
cwtl
mov
dec
mov
pop
lret
roll
fmull
and
setnp
insl
push
xchg
gs
inc
and
and
scas
pop
lret
insb
add
les
fs
jb
push
outsl
in
xor
ds
or
inc
or
ret
mov
scas
jg
xchg
test
call
popf
cmc
inc
ret
psadbw
jae
xchg
add
sbb
sub
inc
lret
and
mov
jg
cli
mov
mov
xchg
std
std
and
push
movsl
jge
sbb
leave
minps
mov
out
pop
icebp
mov
jo
subl
scas
cmp
jnp
dec
dec
xchg
sub
adc
imul
aad
or
fildll
mov
aaa
jnp
cmp
push
aas
mov
gs
lea
or
cmp
jl
into
jbe
mov
and
mov
rorl
shl
or
pushl
scas
ret
incb
or
js
lds
incb
adc
dec
mov
push
stos
xchg
or
ja
pop
or
aaa
fwait
mov
sub
mov
in
lods
jbe
sub
xor
lods
xchg
lock
push
aas
jne
jbe
xor
adc
mov
std
daa
stos
pop
xchg
filds
stos
int
xchg
sub
lods
sbb
std
rclb
in
push
xor
dec
std
cmp
icebp
inc
je
or
sub
pop
repz
push
mov
push
lret
mov
pushl
or
pushl
icebp
push
push
mov
lock
rcr
js
inc
icebp
pop
cmpl
mov
mov
inc
stos
add
lods
lahf
mov
xchg
jo
mov
and
push
shr
lea
scas
dec
mov
pop
cmp
stos
mov
xor
scas
sub
lahf
std
sbb
dec
out
cmovl
dec
stos
ret
ds
scas
lods
sub
mov
loopne
cmp
mov
xchg
ret
jns
insl
mov
outsl
push
mov
and
loopne
pushf
fsubrs
cmpsb
fnstcw
in
cmp
push
or
das
or
icebp
jecxz
push
lret
xchg
arpl
int
pop
push
jle
scas
mov
outsb
shrl
push
sbb
cs
in
cmp
dec
lods
psubw
test
insl
xchg
call
lods
movsl
or
in
or
iret
shrb
mov
or
sub
test
nop
int
sub
loope
iret
mov
iret
repz
test
iret
inc
cmpsl
xchg
xchg
out
dec
nop
testl
dec
in
lcall
or
iret
sub
aas
scas
push
addl
jp
ja
movsb
cmp
shll
xchg
lock
mov
push
and
mov
scas
and
repnz
lar
paddb
setp
xchg
jmp
push
xchg
inc
inc
fimuls
mov
inc
sub
mov
lods
int
xor
or
or
fwait
push
sbb
rolb
pop
xchg
sbb
aas
sub
cwtl
add
push
int
xchg
loopne
fistpll
pop
fcos
xchg
shll
push
in
stc
js
daa
repz
push
mov
stos
int
xchg
out
mov
aad
add
bnd
pop
pop
std
adc
pushf
add
fwait
int3
lods
jo
mov
in
fsin
dec
push
push
jle
xor
call
js
inc
aam
mov
inc
adc
or
inc
push
rcrb
push
int
add
jb
jnp
mov
and
inc
fs
or
push
lret
dec
rorb
fs
addr16
push
push
mov
lret
push
adc
call
stos
push
adc
fisttpll
add
test
mov
dec
decl
int
decl
lods
push
in
popf
std
sbb
movl
or
int3
xchg
mov
fdivr
cmpsl
dec
push
mov
cwtl
xchg
lods
push
lret
dec
lret
popl
add
mov
mov
or
add
lret
loope
mov
lods
ror
into
dec
or
pop
cmp
aaa
stos
xor
stos
jmp
cmpsl
mov
out
mov
sub
iret
int
lcall
insl
mov
jp
repz
int
mov
push
xchg
or
dec
dec
xchg
int
mov
pop
mov
xchg
jmp
pop
sarb
addl
jmp
jmp
or
int
lods
notb
mov
punpckhwd
and
rdmsr
xchg
addb
pop
xchg
or
xchg
enter
inc
out
adc
fiaddl
inc
mov
add
movl
add
lret
xor
cs
call
ja
int
inc
sub
jbe
pavgb
mov
ret
stos
shlb
adcl
pmullw
or
or
inc
xchg
dec
ret
mov
jmp
mov
or
mov
add
add
inc
fistpll
enter
mov
repnz
out
pop
jle
pop
in
adc
push
and
imul
xchg
jl
sti
lret
xor
dec
lods
or
cmp
cli
dec
mov
scas
inc
int
in
sahf
jp
and
mov
or
insb
sbb
xchg
mov
dec
cmp
sbb
or
shlb
mov
xor
xchg
testb
add
test
in
jbe
xchg
ss
mov
leave
lods
int
or
pushl
pop
pop
std
push
jmp
mov
stc
pop
push
loop
fiadds
pop
std
push
stos
push
fimuls
pop
inc
add
add
dec
mov
popf
stos
test
ljmp
andps
sub
scas
int
add
mov
dec
push
arpl
stc
aas
cmp
xchg
xchg
cmc
cmpsl
test
jns
lret
test
icebp
dec
ds
test
icebp
ds
out
adc
icebp
mov
fyl2x
out
sbb
adc
jbe
scas
pop
add
pop
xchg
enter
repz
push
scas
pop
pop
ljmp
push
add
push
sub
mov
repz
lahf
push
enter
jg
adc
cmp
push
aam
testl
adc
jns
xchg
sti
pop
shrl
cmp
mov
int
loope
xchg
ss
mov
or
insl
testl
mov
lods
ror
push
push
jns
xchg
ds
xchg
dec
jo
scas
int
lods
sbb
jmp
dec
adc
ja
test
mov
repnz
inc
aam
add
adc
jle
inc
je
mov
int
pop
pop
outsl
xor
fisttpl
pushf
int
hlt
or
std
adc
xchg
aad
dec
arpl
int
sbb
std
push
out
xlat
cmp
push
aas
dec
in
movl
add
into
or
int3
push
inc
dec
or
jle
or
lret
jle
or
xchg
cmp
shll
mov
std
fisttps
stos
int
or
mov
sbb
xchg
pop
push
add
insl
mov
mov
or
cwtl
mov
outsb
ja
or
rolb
add
repz
ret
add
sti
aaa
mov
or
jle
std
sti
mov
scas
mov
or
out
repnz
decl
into
repz
push
out
out
pop
mov
sarl
popf
leave
outsb
int
mov
popa
std
adc
sbbb
xchg
adc
lcall
xchg
xchg
movd
outsl
stos
and
pushf
xchg
outsl
fucomip
inc
pop
scas
das
mov
xchg
lods
stos
xchg
or
fwait
xchg
cli
dec
in
cmpl
jnp
add
aam
add
cmpb
scas
jp
mov
adc
mov
mov
add
aad
pop
xchg
mov
push
or
mov
xchg
idiv
sub
lahf
xchg
shll
enter
mov
lock
mov
push
cli
lahf
xor
or
or
or
push
test
mov
sub
cltd
movsb
mov
je
adc
sub
addr16
in
cmpsl
push
nop
iret
jecxz
aas
jmp
mov
fs
decl
xchg
test
scas
std
dec
adc
or
lock
or
jmp
inc
sub
gs
and
jmp
or
shl
lret
pop
add
iret
fcomip
sub
or
or
scas
aad
mov
mulb
jmp
rorb
sub
mov
std
inc
je
or
inc
xor
divl
inc
mov
cmpsb
cmp
mov
js
cmpsb
ret
xchg
sti
or
dec
movsl
iret
fxch
mov
lods
xchg
fnstenv
movb
outsb
sbb
je
in
dec
das
gs
mov
das
dec
rcll
roll
or
xor
sbb
pop
aaa
adc
pop
outsl
dec
scas
in
leave
push
pop
push
adc
cmpsl
addr16
aas
lock
mov
pop
mov
fmull
lret
or
enter
mov
ljmp
sbb
arpl
js
shll
outsb
mov
cmp
int
dec
ror
dec
pusha
into
out
adc
adc
in
pop
lds
psubd
mov
fs
mov
lock
clc
outsb
cmp
std
jb
inc
mov
rclb
mov
and
mov
push
gs
imul
or
addr16
xchg
sti
mov
icebp
adc
cltd
call
arpl
add
adc
and
rcll
ja
push
std
add
xchg
in
or
icebp
xchg
aam
out
insl
iret
jg
xor
pop
lea
lret
cmp
adc
or
dec
jbe
cmp
mov
aas
jbe
add
add
fimuls
pop
cli
pop
fninit
push
fistps
dec
out
and
cli
mov
push
jbe
push
fldl
mov
lea
inc
vmwrite
add
andb
pop
dec
out
subl
dec
or
push
aaa
cltd
sbb
or
in
inc
pushf
push
les
iret
stos
jle
hlt
sbb
mov
mov
aam
repz
das
outsb
test
push
mov
fcompl
hlt
push
hlt
or
or
mov
das
popa
fisttpll
in
jb
lea
icebp
jl
mov
orb
mov
movsl
fwait
nop
sahf
in
fidivrl
jmp
out
leave
adc
mov
xchg
fs
ret
lret
rclb
dec
subl
sti
xchg
pusha
mov
cli
cmp
icebp
dec
dec
mov
push
std
das
jmp
loop,pt
clc
sbb
xor
add
mov
adc
int
loope
aam
jge
rcl
mov
pushf
push
dec
ljmp
add
mov
ret
or
enter
cmp
out
mov
dec
stc
pop
fisubrs
adc
mov
sub
adc
test
or
add
sub
in
ja
push
and
pandn
mov
je
int3
add
dec
add
dec
movl
jg
fisttpl
push
pop
or
jb
or
lds
sti
fsts
pop
sub
mulb
push
jb
or
jbe
sbb
scas
dec
mov
push
or
xchg
push
dec
mov
mov
jmp
and
out
mov
inc
mov
dec
in
out
shrb
outsl
mov
leave
dec
data16
or
mov
in
popl
das
cmpl
lret
add
adc
push
add
fisttpll
popa
loopne
and
add
jmp
fwait
addr16
lret
and
lret
dec
xor
movlps
xchg
xchg
loope
les
es
jbe
push
mov
add
lds
lret
bound
pushl
das
mov
mov
rcrl
push
out
xchg
out
sub
and
pop
mov
cld
xor
adcl
sub
leave
dec
fwait
xlat
xchg
xchg
fdivrs
jge
mov
sahf
fistps
dec
cltd
aad
mov
pop
adc
ret
cli
shll
add
inc
fistl
mov
rcll
pop
cwtl
dec
mov
or
jnp
repnz
add
sbb
sub
es
in
jae
pop
hlt
sbb
stc
ds
xor
popl
iret
mov
clc
aaa
mov
dec
jecxz
pop
int
scas
xor
orl
dec
int3
pop
lds
dec
iret
jle
dec
or
insb
or
or
into
or
pop
or
add
mov
orb
aas
or
insb
jo
add
push
int
out
dec
in
out
dec
mov
scas
iret
int
cs
fisttpll
or
or
lret
in
not
popa
fisttpll
lods
dec
loope
fnstsw
lods
scas
pusha
mov
dec
loope
lea
or
ret
inc
sub
leave
or
inc
pusha
push
insb
insb
stos
into
enter
ret
daa
das
xlat
addl
movsl
or
add
int
mov
add
mov
fnstcw
scas
lahf
cli
adc
push
xor
or
scas
out
pop
and
or
jmp
imul
stos
icebp
ret
aaa
push
mov
sub
divb
or
repnz
xor
fnstsw
in
dec
loop
or
popa
or
es
pop
add
flds
fimuls
ljmp
std
sub
pop
or
sbb
sub
dec
cmpl
add
imul
test
sub
std
shl
or
clc
mov
sbb
dec
dec
pop
cmpsl
push
pop
in
or
fisttpll
loope
bnd
jmp
fmuls
addl
inc
push
or
xor
or
mov
cwtl
and
push
ja
sti
and
lcall
mov
rorl
pushf
dec
jge
movsl
rcrb
aaa
jmp
loope
fisttpl
mov
in
mov
fstpt
fs
add
and
xor
pusha
iret
mov
cltd
repz
ss
cmp
push
inc
sbb
or
add
clc
int
fsub
jmp
add
invd
and
ljmp
popa
mov
sbb
xchg
stos
int
leave
xor
mov
or
xor
ud0
mov
push
fucomip
ret
push
pop
push
adc
pop
jmp
pop
adc
dec
rorl
dec
fwait
sbb
mov
sti
fcomp
push
pop
add
cwtl
std
sti
cmc
pmovmskb
mov
ja
in
push
lahf
aas
hlt
add
xor
sbbb
adc
dec
sbb
out
pushf
mov
dec
pop
outsl
push
fstp
adc
push
lods
push
test
lods
add
sub
sbb
jmp
aam
imul
xchg
fisttpl
push
fwait
or
int
aad
test
xor
daa
mov
xlat
pop
leave
shll
sbb
push
sbb
arpl
adc
popa
xchg
xchg
mov
push
out
pop
push
push
jmp
aad
test
and
pushf
rclb
xlat
lcall
adc
shr
xlat
adc
push
push
std
adc
dec
xchg
rcrb
aaa
push
out
xchg
adc
xchg
xchg
nop
sbb
movsb
int
dec
rclb
push
nopl
mov
outsb
repz
cmc
add
cmp
and
fwait
es
push
jp
jg
lret
lds
xchg
loopne
and
addr16
loope
dec
sahf
movsl
and
pop
sbb
add
icebp
lahf
mov
mov
fwait
xor
rcll
push
xor
lds
insl
sbb
lock
scas
mov
fdivr
jge
jb
jbe
mov
faddl
lret
out
xchg
daa
cmc
fnsave
fldcw
lock
fbstp
mov
push
cmp
sti
add
dec
dec
push
lret
inc
jg
movl
or
lea
insl
inc
or
inc
mov
or
cmpb
test
or
mov
sti
stc
add
or
xor
js
jmp
add
in
sub
je
stos
sahf
icebp
pop
pop
fbld
add
cmp
jnp
xor
popf
test
mov
dec
xorl
call
fndisi(8087
mov
mov
subb
out
mov
cmp
out
sub
gs
mov
add
mov
mov
and
and
xor
mov
mov
bound
stos
bnd
dec
test
and
and
add
mov
idiv
jl
decl
andl
ljmp
mov
push
mov
aaa
inc
cmp
insl
bswap
add
ja
push
pop
push
shrl
sbb
int
cmp
jo
mov
add
dec
es
sbb
fcmovne
xchg
sahf
cmc
stos
adc
ljmp
mov
jae
mov
loope
jg
mov
and
js
test
ljmp
test
test
cmpsl
test
in
add
movsl
loopne
and
add
sub
stos
inc
rolb
sub
loop
dec
inc
pop
mov
jne
push
test
lea
xor
jo
movsb
in
data16
mov
in
cmp
sub
inc
inc
popa
inc
movsl
lds
and
mov
movsl
pop
and
and
popl
in
in
in
out
in
cmpsw
loopne
iret
mov
mov
mov
repz
jge
dec
mov
sarl
jp
jp
jns
mov
xor
clc
mov
fistpll
pop
stos
adc
insb
stos
mov
in
and
pop
inc
cmp
xlat
jge
sti
pop
and
inc
addr16
mov
lock
insl
mov
mov
mov
mov
push
mov
fimuls
sahf
ss
fs
scas
stos
clc
push
pop
outsl
mov
repnz
aaa
push
jno
lahf
sti
add
cmp
lods
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
iret
jge
repnz
stc
jb
gs
int3
ljmp
sbb
push
fs
int
jg
sti
in
ss
lods
jg
inc
out
xor
aas
sub
out
dec
sti
jle
lods
lods
repnz
xor
mov
pop
jge
into
out
add
cmp
imul
in
fisubs
lea
cmp
cmc
bnd
test
fisttps
inc
cmpsb
scas
dec
in
push
pusha
iret
sub
pop
imul
iret
mov
cs
xor
fbstp
outsl
xor
dec
and
bound
add
fildll
add
out
fldenv
inc
stc
sub
add
addb
dec
jmp
aaa
test
stos
scas
pushf
test
sbb
xlat
xchg
add
push
sbb
or
mov
loope
leave
scas
xor
insl
mov
jae
and
aam
cmpsl
dec
into
dec
movhps
popa
pop
or
lcall
mov
inc
and
cmp
es
add
loope
dec
popa
in
mov
push
dec
push
aas
mov
or
fs
addr16
and
popf
stc
call
pop
out
adc
push
add
sbb
fdivrs
and
fs
stc
das
orl
mov
dec
and
ljmp
out
jge
and
pop
into
pop
call
cltd
and
jnp
push
pop
std
adc
xchg
or
sbb
push
cs
inc
add
inc
lahf
stos
test
jmp
inc
push
test
sbb
fwait
movsb
enter
or
inc
shrl
pop
stos
mov
add
test
and
iret
fdivr
push
fmulp
sbb
das
aam
lahf
mov
in
pop
cli
into
imul
out
pushf
out
jle
es
fsubl
fstl
add
dec
rclb
dec
xchg
lods
xchg
pop
js
loopne
adc
mov
xchg
push
cmpsb
xchg
sbb
xchg
jns
dec
mov
mov
pop
or
and
ljmp
inc
sbb
cmp
add
fnop
push
push
fisttps
xchg
mov
lcall
pop
or
adc
or
arpl
sbb
push
and
imul
cmc
stc
sbb
pop
fwait
je
sahf
aad
adc
notl
xchg
stc
iret
sbb
adc
add
jecxz
pop
pop
add
sbb
pop
jmp
pop
pop
movsb
inc
add
fsubs
lock
out
mov
fldenv
sahf
loope
xlat
sahf
mov
ficoms
sbb
insl
xor
rcrl
xchg
aam
pop
pmulhw
popf
cmpsl
dec
scas
decb
or
pop
cld
push
daa
int
into
sub
outsl
out
mov
jbe
mov
fdivp
pop
lahf
shll
test
fpatan
std
rcll
movsb
inc
pop
daa
inc
sahf
pop
imul
lahf
stos
mov
sub
popf
or
add
push
adc
fistps
xchg
cmp
pop
and
aam
push
xchg
adc
xchg
mov
aad
mov
add
add
test
and
mov
and
dec
in
push
rcr
cmp
sbb
jb
int
aad
mov
jp
cwtl
and
push
push
add
mov
or
or
fistps
inc
pop
push
ja
test
cmp
sbb
scas
int
fbld
into
xchg
add
adc
loope
jmp
push
lock
mov
nopl
and
jmp
add
test
or
stos
popa
push
test
data16
shr
jne
imul
sbb
push
fcomp
adc
aad
push
sbb
fsts
popa
std
insb
rolb
mov
mov
es
sub
stos
push
stc
mov
mov
or
xchg
add
jecxz
pop
sbb
adc
pop
rclb
push
sbb
add
loopne
jmp
cli
add
pop
jmp
mov
dec
out
scas
dec
in
jae
jge
add
xor
movsl
lea
in
or
dec
push
adc
je
xlat
arpl
sbb
sbb
bound
fidivrs
outsb
je
pusha
push
or
into
jg
cmpsb
sub
xchg
stos
jle
imul
imul
or
add
push
pushf
rcll
xchg
xchg
jb
add
mov
fnsave
add
icebp
pop
pop
add
and
sbb
jl
xchg
fisubrs
xchg
stos
jecxz
inc
insb
inc
paddsw
out
xor
cld
fbstp
insb
das
cltd
cmp
pop
mov
mov
xlat
in
pop
sub
xchg
pop
out
out
mov
sahf
mov
and
dec
jp
jecxz
into
and
out
lcall
insl
xor
test
pop
ljmp
mov
outsb
xchg
pop
jo
push
call
popa
cmp
lods
mov
sbb
inc
xchg
jp
repz
je
in
scas
dec
push
lods
mov
das
jnp
and
push
pop
scas
leave
push
fucomp
out
jno
dec
jae
fildll
mov
mov
mov
add
int3
stos
aas
cmpsb
insl
sub
out
add
sub
and
iret
cmc
pop
jecxz
pop
loope
lcall
cltd
loop
sti
xchg
push
insl
mov
lods
ss
iret
cmpsb
cwtl
dec
iret
cwtd
add
sub
push
sub
rclb
ret
rorl
sub
hlt
mov
out
clc
vmptrld
cmc
add
cmpps
lret
push
in
call
or
psrlw
in
jae
out
jno
scas
mov
shrl
xlat
dec
andl
ffreep
int
fimuls
iret
mov
fs
pop
or
hlt
or
or
in
add
lods
fs
or
and
lret
mov
and
test
enter
les
mov
jecxz
mov
sti
leave
inc
mov
add
pusha
das
mov
call
push
mov
cmpsb
scas
cmp
ljmp
push
cmpsl
push
mov
or
mov
xchg
inc
cmpb
xorb
cmc
mov
lock
cs
or
ja
loope
jbe
out
stos
das
call
std
daa
in
mov
mov
in
xlat
fs
jle
imul
loopne
cmp
loope
or
cmpsl
ljmp
sub
movsb
repz
pop
jecxz
mov
fsubrp
cmc
int
push
popl
popf
stos
or
pop
push
or
push
shl
add
or
add
pop
mov
lret
popf
sub
dec
mov
add
pop
sub
les
mov
pop
icebp
rcr
pop
push
orl
ret
int
orb
jmp
iret
pushf
cmpsl
mov
mov
or
or
dec
sbb
testb
lcall
pop
aaa
or
jecxz
add
and
sbb
push
or
iret
mov
mov
test
in
fsubr
sti
add
xorl
dec
add
push
inc
aaa
sbb
fcmovne
push
test
std
icebp
add
in
cltd
jbe
or
jmp
iret
js
into
int3
xlat
loope
pusha
mov
fimuls
out
test
jle
data16
jecxz
rcl
sub
fstpt
sahf
fsubp
in
cld
hlt
jmp
sub
or
fldt
push
add
pop
jecxz
sbb
aaa
and
or
xchg
in
inc
mov
lcall
lock
push
clc
sarl
loop
stos
fstpt
loopne
jl
data16
pop
jecxz
jne
jmp
fnstsw
jmp
pop
loop
imul
sbb
icebp
mov
shll
sbb
cmc
pop
jbe
hlt
int
repnz
mov
mov
arpl
test
lea
fwait
dec
adc
or
or
aaa
fimull
cltd
das
or
shlb
or
outsl
mov
push
lock
adc
pop
int
pop
lahf
pop
push
jne
sbb
or
enter
invd
xchg
fnstsw
rcrl
pop
lahf
sbb
jae
push
mov
dec
shlb
add
aaa
in
push
pop
mov
ja
push
icebp
xor
rolb
fsubl
mov
add
std
or
adc
repnz
pop
shrl
fwait
pop
sti
dec
fimuls
push
lcall
or
out
movsb
add
cmpsl
rcrl
daa
jmp
sbb
or
dec
mov
pop
xlat
pop
add
aad
sbb
adc
fistl
xchg
pop
icebp
jb
fadds
xchg
xchg
mov
push
rorb
push
rcl
cvtdq2ps
push
mov
xchg
xor
int3
push
mov
or
les
pop
iret
adc
jle
mov
add
dec
add
dec
mov
push
das
out
repz
hlt
out
mov
bound
into
adc
push
dec
or
jg
loope
and
ret
push
push
int3
iret
and
int
or
xor
test
fwait
or
iret
outsl
and
pop
pop
repnz
adc
dec
add
mov
dec
or
std
cmp
and
pop
add
lds
jnp
mov
sti
call
repnz
ja
imul
sahf
adc
mov
cmp
add
sti
cmp
shl
xor
push
aad
and
popa
insl
mov
mov
dec
jmp
push
push
fnstenv
push
call
nop
sti
pop
out
push
lahf
add
mov
insb
imul
mov
push
aad
sarb
mov
mov
xchg
sub
out
dec
outsl
or
xadd
sub
push
adc
and
mov
push
jmp
mov
xor
jecxz
sbb
pusha
lea
jbe
cmc
pushl
test
loop
daa
or
push
mov
add
jo
or
repz
std
test
cmpsl
sbb
and
leave
fdecstp
cli
rorl
push
insl
mov
mov
pop
ljmp
or
leave
or
movl
clc
jl
stos
push
iret
int3
test
jecxz
insl
sbbb
xchg
mov
xlat
sar
mov
in
xor
cli
lret
pop
dec
test
xchg
pop
jecxz
adc
test
sub
js
mov
adc
jo
pop
xchg
xchg
push
pushf
in
nop
test
scas
or
dec
cltd
cwtl
unpckhps
xchg
rcrl
enter
add
cmp
dec
add
xchg
aam
adc
jmp
mov
pop
test
leave
mov
push
push
add
xchg
push
ja
decl
or
pop
adc
adc
push
pop
xlat
jmp
iret
insb
xor
dec
adc
jg
push
push
outsl
mov
push
pop
add
cltd
fwait
mov
jb
cli
mov
jb
testl
jg
adc
sbb
loop
sub
lret
loope
add
mov
push
aam
or
fistpl
cmp
adc
fcoms
xchg
inc
cwtl
sbb
loopne
mov
cmp
or
negl
mov
cltd
inc
sbb
and
rolb
add
ret
data16
jecxz
mul
xorb
xor
jb
add
inc
inc
inc
call
add
inc
outsb
addb
bswap
pop
xlat
dec
push
inc
shr
dec
rcr
push
dec
in
dec
xlat
push
dec
fistps
out
inc
cs
push
iret
fbld
dec
jle
lahf
orb
or
rcl
xor
in
or
or
in
jl
sti
out
xor
lea
int
in
dec
lahf
inc
jmp
mov
cli
xchg
inc
mov
rcl
fnstenv
cmpsb
dec
popa
in
iret
mov
and
lahf
sub
paddusw
dec
pushf
jl
cmpsb
push
pop
in
and
jne
xor
dec
xor
out
push
push
bound
or
dec
frstor
or
push
mov
jmp
popf
jmp
sarl
mov
fimuls
and
lahf
pop
int3
arpl
push
lods
loope
insb
nop
aaa
mov
shrb
iret
iret
push
lahf
lret
aam
add
mov
xchg
inc
mov
loop
or
dec
loope
adc
rorl
fsubrl
sahf
push
imul
fists
out
add
mov
iret
hlt
cs
lea
in
push
lods
fimuls
mov
test
vpcomub
stos
xlat
fsubr
fisubl
inc
mov
pop
add
pop
iret
rcrb
pop
inc
into
cwtl
icebp
sbbl
loopne
lret
mov
mov
sub
sub
inc
mov
or
out
mov
out
push
push
sbb
fistps
scas
out
xchg
repz
int
fsts
stc
xchg
mov
jnp
add
mov
xchg
push
test
mov
icebp
mov
dec
push
lahf
push
jle
pop
inc
les
jecxz
pop
xchg
pop
shr
in
call
pop
ljmp
in
scas
dec
cmp
pop
fldl
scas
test
mov
or
sub
pushf
data16
sub
enter
std
sbb
movsl
mov
push
push
push
sahf
scas
xchg
pop
movb
call
mov
loop
add
test
mov
inc
pop
jcxz
hlt
inc
sbb
decl
fadds
mov
iret
xchg
mov
push
dec
pop
jo
fildll
sbb
push
nop
dec
cmpsb
xchg
sbb
pop
daa
pop
pop
fisubrs
add
out
jo
mull
out
xchg
add
data16
or
mov
sbb
out
clc
jo
nop
or
push
rcll
xchg
lahf
or
arpl
dec
jo
int
xor
mov
cld
aad
mov
or
xor
xlat
inc
shl
bound
sbb
addr16
or
mov
mov
adc
jg
sub
cmp
pusha
daa
sbb
mov
pop
fldlg2
call
fistl
into
cwtl
loop
stos
pusha
or
sti
mov
outsb
adc
dec
negl
jbe
pop
call
xchg
cmpsb
loop
xchg
push
iret
sbb
mov
add
adc
por
mov
sbb
call
pop
mov
add
mov
call
hlt
or
mov
loope
pop
cli
pop
int
xor
fcompl
and
sub
popf
out
jmp
std
or
dec
mov
xchg
lods
dec
sub
out
fwait
add
sbb
orl
jp
popa
cmp
ss
popa
icebp
inc
dec
repnz
fistpll
dec
inc
int
inc
iret
add
cmp
jns
pop
xlat
inc
inc
add
data16
out
pop
call
iret
push
dec
sub
iret
out
fwait
cmpsl
dec
pop
sub
in
mulb
xor
xor
pop
rorl
jo
and
pushf
scas
push
fcoms
xchg
jl
jl
cs
mov
filds
addr16
dec
insl
pop
cmp
jb
mov
sub
lock
fistps
cwtl
mov
popa
and
mov
inc
lcall
jmp
mov
fldenv
movsb
sub
fmul
rcrb
mov
or
cmpsb
mov
fisubrs
out
and
pop
pop
xor
cs
dec
sbb
stos
dec
pushf
int
pop
xchg
rolb
filds
in
push
js
mov
fildl
lods
cld
dec
or
mov
sahf
jb
data16
loope
xor
fstpt
call
inc
repz
cltd
fistpl
scas
popa
hlt
adc
mov
xchg
icebp
std
xchg
jp
data16
jp
and
cltd
arpl
pop
jecxz
mov
fisubl
lods
aam
int
pop
imul
in
lahf
pusha
dec
lods
or
or
into
arpl
repnz
lahf
cmp
popa
popa
sbb
lods
out
xchg
and
push
mov
jl
lahf
repnz
lahf
xor
clc
lcall
push
push
bswap
loopne
rol
cs
push
testl
aad
pop
fistps
lret
repz
shll
cmp
ficoms
adc
or
pop
xor
mov
cmp
jl
mulb
addl
dec
mov
mov
addb
popf
sbb
push
pusha
or
in
sbb
xchg
dec
ficoml
loop
xchg
std
pop
push
lods
in
in
cld
and
ss
mov
pop
idivl
orb
or
sub
std
inc
mov
push
lds
push
add
pop
xchg
push
xchg
xor
not
push
adc
movsb
xchg
cmp
and
ja,pn
fistpll
into
inc
fistps
mov
negl
insl
out
divl
fsubs
cltd
and
adc
push
stos
int
fstps
mov
test
fcmovu
ds
mov
xor
mov
stos
addb
pop
pop
jb
into
or
pop
mul
aas
dec
mov
push
jmp
test
rolb
sbb
inc
fadd
push
rorl
add
inc
int
jbe
xor
and
jae
scas
stos
scas
mov
pop
jecxz
inc
loope
inc
add
xchg
subl
cmp
scas
rclb
stos
out
out
jmp
sbb
rcrl
and
sbb
push
out
jle
mov
out
xlat
cmpsb
rcrl
int
stc
icebp
stc
ds
mov
mov
mov
hlt
jno
call
je
hlt
xchg
fiaddl
in
js
fs
pop
std
lods
cmp
inc
mov
in
fsubs
mov
mov
jnp
mov
jecxz
cli
lcall
rol
cmp
dec
mov
insb
mov
aad
cmp
cmp
jb
int3
jnp
loop
dec
mov
dec
jecxz
lock
subl
outsb
mov
mov
jge
outsb
addb
lds
push
cs
mov
mov
cmp
xor
and
fdivrs
mov
sbb
sub
int
fistl
fstpl
fdiv
dec
cld
jno
cmp
mov
jns
and
js
xlat
je
fwait
jl
outsl
xlat
ret
bnd
jg
jb
les
xchg
mov
sub
test
loopne
cmp
bound
repnz
xor
in
mov
mov
jl
jo
iret
sbb
jl
xor
jb
out
mov
das
imul
loop
inc
lret
xchg
or
js
ror
pusha
insl
ja
push
sub
inc
pop
or
push
push
insb
xchg
lahf
rcrl
lock
dec
pushf
imul
iret
cmp
iret
and
aad
aad
shll
adc
addr16
in
xchg
lock
pusha
cltd
cmpb
pop
add
out
mov
enter
add
push
iret
sbb
hlt
aad
inc
movsb
push
lock
or
or
repnz
lret
shr
push
adc
pop
loopne
mov
dec
xchg
inc
sub
sub
adc
nop
push
rcll
jmp
popa
rcr
enter
cltd
and
xchg
inc
call
dec
outsl
add
sub
stos
mov
fildll
sub
cmpsl
push
sbb
in
sti
jmp
sti
lahf
out
aam
sbb
nop
seta
and
xchg
stos
push
cmp
xchg
jg
in
clc
jo
pop
roll
add
push
push
pushf
out
xchg
pop
lahf
xchg
dec
push
and
ljmp
mov
popf
sbb
sbb
inc
and
jl
adc
cld
decb
dec
mov
push
int
sbb
lds
addr16
fisubrs
movsl
push
fsubr
fisttps
sti
pop
in
lock
stos
dec
ja
mov
pop
jmp
lds
int3
lock
dec
jmp
xchg
stos
lfs
in
repnz
dec
xor
push
adc
mov
lret
jbe
lods
rcrl
jg
shll
das
jmp
or
mov
in
jmp
pop
xlat
pop
out
in
pop
and
push
mov
out
pop
push
adc
rep
out
shrl
fcomip
xchg
fbld
pop
cld
es
int3
popa
push
insl
data16
cmpl
rorl
int
filds
ljmp
or
jmp
lret
out
sub
imul
out
sbb
out
sbb
out
pop
mov
adc
pop
addr16
in
imul
rcr
push
or
and
out
in
out
add
fwait
mov
icebp
stos
dec
and
cmpsl
jecxz
cmc
push
dec
clc
pop
arpl
xor
in
out
push
lock
sbb
sbb
lock
stos
dec
loopne
cmpsl
mov
jge
and
ret
push
sahf
push
xchg
pop
inc
in
cmp
aas
add
int
cwtl
and
dec
jmp
xchg
xchg
inc
out
push
cmp
dec
pop
aas
sbb
in
lock
dec
fwait
imul
pop
dec
and
lcall
call
cltd
pop
mov
xchg
test
jg
push
push
test
jg
pop
out
ficomps
jge
rcll
jnp
out
in
leave
sarl
ja
jmp
rcl
xchg
test
imul
or
das
aam
in
jb
negl
out
jmp
mov
xchg
and
sub
imul
lods
loop
add
jmp
lahf
pop
aad
jg
mov
xchg
jmp
add
iret
pop
daa
dec
mov
int
push
stc
dec
add
mov
bound
popf
stc
or
fldcw
lret
jge
lret
lock
jl
pusha
jbe
aas
dec
shl
or
mov
or
and
xlat
and
pop
int
sti
jmp
push
iret
fwait
decb
int
pop
call
stc
pop
lahf
loopne
cmpsb
xchg
aas
in
lock
lret
sti
add
add
stos
stos
ret
inc
inc
pop
push
add
scas
ljmp
inc
lods
pextrw
mov
cltd
jmp
push
mov
push
int
es
imull
cmpsl
xlat
lock
cld
aaa
mov
stos
sub
imul
cli
xor
out
jp
or
or
cmpsb
aas
js
in
lock
int
mov
rcrl
aas
aaa
or
sbb
pop
pop
test
jbe
add
rorl
adc
cli
xor
lods
stc
mov
inc
dec
je
ja
imul
idivb
cmpsb
jg
test
and
je
mov
inc
pop
push
xor
jne
cli
outsl
inc
rcrl
push
mov
add
outsb
lahf
push
pushf
imul
cmp
insl
lods
lock
in
lock
sub
imul
lahf
pop
stos
mov
sub
adc
test
mov
sahf
inc
imul
popf
stc
mov
test
daa
push
fmulp
push
stos
pop
iret
fst
push
cld
mov
lcall
and
mov
cmpb
popf
stc
jecxz
adc
aas
shl
and
stos
in
loope
jno
loopne
shlb
sti
xchg
fdivr
aas
and
in
lock
in
aas
pop
lret
in
in
xchg
cld
aas
icebp
xchg
stc
pop
cmp
leave
aad
and
dec
add
add
fxch
xchg
inc
dec
fcmovnb
ja
test
cmpsb
aas
sbb
in
xor
adc
add
out
cld
out
jge
pop
sahf
inc
jnp
cmpsl
xlat
push
jp
test
mov
inc
add
and
pop
rcrb
jp
dec
adc
fidivrs
xchg
icebp
mov
imul
shl
adc
stos
in
rcr
cltd
jmp
imul
test
aaa
push
push
mov
cmpb
sbb
dec
cmp
pusha
or
sub
addr16
mov
outsb
rorb
in
push
stos
lods
int3
xchg
mov
inc
leave
dec
push
rol
cmc
test
pop
mov
out
cmpsb
aaa
or
pop
in
mov
cs
popf
repz
jg
push
xchg
xchg
inc
xchg
out
pop
fimuls
in
ror
jg
jno
out
lods
out
jne
int
nop
repz
cmp
repz
pop
inc
loope
lock
orl
rcll
out
mov
int
add
stc
imul
in
aaa
call
movsl
out
stc
jg
mov
dec
xchg
loopne
enter
push
call
lahf
push
mov
aam
pop
mov
sub
xchg
sti
push
clc
mov
mov
mov
mov
pop
jge
mov
out
pop
mov
int
out
add
pop
lea
jecxz
out
sti
movsl
push
lods
push
pmulhuw
sub
rcrl
pop
xor
shl
mov
pop
jg
mov
loop
inc
add
ret
scas
popf
rep
xchg
test
out
lahf
mov
inc
cmc
negl
int3
fisubrs
roll
lock
repnz
xchg
sub
clc
jmp
cmp
imul
mov
mov
addb
loope
lock
out
mov
add
sub
mov
cmpsl
popf
repz
out
test
int
es
mov
xchg
sub
cmp
sub
mov
out
fcoml
fs
pop
and
sbb
jp
xchg
mov
loop
repz
stos
sub
imul
test
sub
jnp
mov
or
inc
pop
in
out
fists
pop
pop
test
dec
fldt
arpl
jge
xlat
add
adc
pop
repnz
ffreep
in
stc
fwait
rcrl
pop
int
sbb
fiaddl
repz
xchg
test
dec
scas
jnp
mov
shl
sbb
sub
fdivr
mov
inc
insl
imul
stc
mov
rorb
out
icebp
mov
lahf
popf
loopne
int
adc
adc
imul
lock
xchg
xchg
xchg
sub
adc
aaa
adc
loope
jp
or
xchg
add
fisubrs
dec
cmpsl
insb
jo
out
dec
loopne
push
pop
in
jecxz
cmpsl
ja
fstpl
mov
pop
xchg
xchg
or
pop
cmp
dec
stos
shrl
or
icebp
jnp
rol
ljmp
dec
sbb
loop
mov
xlat
cmp
js
enter
loope
icebp
arpl
mov
xor
insl
lock
jmp
cmp
inc
push
hlt
icebp
sub
imul
sub
xchg
imul
repz
jbe
lahf
popf
xchg
ja
push
sahf
push
js
mov
jnp
sub
cmp
or
xchg
repnz
jnp
cmp
out
rclb
push
mov
sub
dec
movsb
out
adc
in
fs
mov
hlt
scas
clc
jmp
pop
push
testl
push
js
shl
icebp
repnz
xchg
idiv
rolb
add
subb
or
iret
mov
mov
add
mov
out
and
es
fld
fsubl
cwtl
add
cmc
fildl
test
jmp
in
incb
lods
or
cmpsb
outsb
rorb
int
mov
sub
pop
push
in
lcall
sbb
sahf
insb
lock
stos
sbb
mov
and
pop
or
iret
mov
jp
add
int
scas
or
cmp
sahf
push
push
push
stos
or
std
sub
iret
sbb
xchg
iret
pop
call
sub
cmc
cmp
loop
int
in
xchg
loopne
daa
adc
out
mov
fucom
dec
pop
jmp
into
sbbb
or
lcall
push
push
mov
sbb
xlat
test
in
ret
in
enter
pop
movmskps
shlb
popf
fwait
rcrb
mov
pop
pop
out
sub
imul
add
mov
lock
lret
sbb
dec
mov
or
test
or
push
clc
ljmp
movsl
jo
loopne
dec
jecxz
das
int
xchg
push
aad
por
aad
out
fisubrs
or
dec
pushf
lahf
in
out
lock
loop
rorl
mov
push
xchg
pop
rorl
xchg
bound
test
flds
jb
or
aam
sub
inc
je
cmp
mov
stos
dec
fwait
daa
pop
or
fdivrs
or
push
lods
mov
push
cmp
xchg
sahf
nop
iret
or
gs
fs
loope
lds
push
outsb
xchg
inc
pop
or
psraw
loope
pop
std
cmp
pop
fldt
xchg
std
xchg
add
xchg
xlat
push
scas
dec
or
je
or
xlat
and
push
in
cmp
call
mov
add
jmp
lds
mov
stos
stos
in
sbb
lcall
fildll
pushf
push
add
inc
xchg
cwtl
xlat
enter
jmp
mov
dec
mov
out
add
sub
add
push
xchg
int
mov
decb
fistl
fdivrp
popf
stos
pop
cmp
sti
cltd
out
sbb
in
aad
popf
fisttpl
xchg
cmpsl
loopne
orb
cmp
cmpsb
in
push
pop
call
int
stc
inc
or
out
lock
sahf
mov
inc
push
repnz
or
int3
stc
add
es
popa
mov
and
pop
addr16
sub
ja
jecxz
cwtl
loope
pop
pusha
lock
push
or
adc
push
push
pop
iret
xchg
sbb
adc
sarl
add
fs
std
loopne
mov
jmp
pop
jo
cmp
bswap
leave
push
test
or
cld
push
std
jmp
jle
jg
orb
popf
ret
mov
in
dec
lahf
add
push
cli
fbld
or
and
sbb
fimull
mov
cltd
fimuls
cli
dec
lods
adc
insb
out
xchg
fldt
push
out
mov
cld
in
jecxz
in
xchg
repnz
int
xchg
icebp
jae
lock
out
cmc
mov
or
les
aad
into
pop
out
pop
jns
in
jmp
jmp
cltd
jmp
sbb
popa
pop
fists
mov
dec
cmp
aad
repz
adc
insl
mov
sub
in
imul
ljmp
lcall
xchg
pop
jmp
or
push
or
dec
int
fisubrs
ffreep
shll
or
loopne
test
push
fdivp
sti
mov
lock
fwait
es
pushl
mov
aam
pushf
adc
pop
popf
idivl
in
sbb
lahf
aad
xchg
add
stc
lahf
int
ftst
jno
fucomip
int3
lea
loop
stos
jp
xlat
cli
mov
inc
pop
mov
inc
lret
xchg
jle
mov
push
pop
or
xchg
out
cmp
push
dec
cmpsb
xlat
or
xchg
test
repnz
xlat
sahf
ljmp
ffreep
subb
movq
jmp
xchg
push
fcmovne
rcrl
cld
fnstsw
push
xchg
ljmp
es
pop
add
imul
in
aas
in
add
push
jecxz
add
psllw
rol
lea
iret
xchg
popf
fisttps
dec
fnstsw
or
push
cmp
push
in
cli
out
iret
mov
and
testb
nop
or
das
fimull
loope
or
adc
iret
adc
or
ljmp
daa
sahf
aad
xchg
clc
xlat
mov
add
out
shrb
pop
add
pop
rol
mov
fadd
inc
clc
jo
inc
icebp
and
or
cmc
xchg
in
fnstcw
jmp
mov
mov
popf
rorl
popf
ret
pop
rorl
iret
inc
fcomi
push
mov
cwtl
fucomip
sbb
scas
out
push
jbe
ret
adc
fscale
mov
movsb
aad
cli
imul
inc
mov
mov
loope
pop
ljmp
cmp
pop
cmc
mov
loope
xchg
movsl
add
mov
lods
lret
orl
xlat
sar
pop
jo
lods
call
fistps
loop
scas
and
cli
fstl
pop
mov
dec
icebp
or
sarl
fmul
sbb
nop
pop
out
mov
movb
lds
adc
scas
aas
pushf
data16
outsl
cmp
in
add
pop
sti
mov
fwait
gs
adc
imul
mov
dec
iret
push
hlt
mov
push
sbb
sahf
push
cld
aad
pop
int
and
and
sbb
loopne
les
adc
fistpll
or
rolb
outsl
mov
std
in
mov
lret
repz
mov
mov
lcall
stos
inc
aad
jg
dec
shrb
xchg
sahf
test
pop
adc
push
jle
repnz
out
loop
iret
fidivrl
or
iret
call
fmull
fnstcw
mov
loop
movsl
fistpl
into
fildl
mov
or
add
pushf
sub
std
out
mov
repnz
fwait
bsf
mulb
loop
mov
incl
sti
jecxz
repz
pop
ljmp
fiadds
js
jl
imul
into
mov
pop
pop
fnstsw
pop
cmc
push
sbb
and
or
lds
and
fisttps
jne
shll
out
jmp
loopne
xchg
jl
cmpsl
cmc
mov
ja
in
dec
ss
mov
jno
filds
inc
cmp
cs
addr16
pop
fdivp
test
sbb
mov
pop
jecxz
xchg
pop
dec
add
dec
sbb
dec
shrl
ret
iret
fsubrl
or
fmull
testw
cltd
xchg
cmpsl
fisttps
sbb
xor
stos
loopne
push
sbb
in
repnz
pop
fimull
loope
xchg
cmp
fstp
add
fdivrl
cli
sar
popf
add
scas
fistpll
roll
out
add
pop
in
sti
fucom
leave
movsl
fisttps
xlat
dec
push
sub
push
call
add
out
push
iret
pop
push
or
add
daa
lret
fstpl
fsubrs
loop
sub
rdmsr
aam
inc
xor
jb
xchg
fucomp
jns
sarb
pushf
dec
out
jne
inc
sar
or
fldl
pop
hlt
mov
loopne
lea
fisttpll
pop
int
pop
imul
test
iret
fcmove
pop
test
mov
cmp
jmp
aad
hlt
cmp
lods
test
repnz
loope
and
repnz
sarb
cmc
dec
iret
std
lock
in
pop
fists
cmp
test
imul
inc
pop
outsl
cli
inc
and
leave
out
or
imul
pop
pop
ljmp
sbb
imul
sarl
shll
sbb
icebp
inc
xchg
add
loopne
push
add
push
frstor
jge
addr16
jle
jp
cmp
cmp
loop
adc
hlt
adc
mov
incb
fnstsw
dec
icebp
add
fucomip
lods
icebp
lahf
loopne
int
or
insb
dec
lahf
sub
xlat
sti
ljmp
pop
insb
in
out
jle
loopne
aam
cmp
lahf
mov
bnd
cld
nop
flds
jo
std
or
cmp
stos
iret
sub
or
hlt
and
jmp
ljmp
jl
out
or
pop
call
or
sbbl
mov
pop
jno
ljmp
shr
mov
and
mov
pop
lods
mov
rorl
cwtl
div
std
js
in
loopnew
shl
cmc
loopne
stc
in
mov
lock
repnz
xchg
scas
jns
or
outsl
std
xchg
testl
push
fnstcw
pusha
xchg
xchg
mov
mov
fldenv
out
inc
mov
les
xchg
enter
or
in
test
lods
in
fildll
fisttpll
jmp
aas
popa
or
dec
lock
sahf
mov
insb
xor
add
sti
or
stc
mov
pop
adc
mov
or
mov
js
vmread
or
jge
pop
movsl
inc
lahf
or
ret
pushl
or
rorb
push
out
jge
lods
or
or
fistpll
stc
sub
mov
out
das
ljmp
cli
in
push
out
in
adc
or
loopnew
movsb
xchg
loop
jno
pop
sub
fwait
sahf
vmwrite
iret
dec
test
das
or
or
cwtl
jmp
mov
fldenv
pop
movsb
sar
sub
popf
addr16
filds
sahf
inc
inc
pop
jmp
int
push
lods
pushl
lock
add
imul
aam
ret
aam
mov
aad
shrb
int
mov
loopne
pop
out
push
aad
test
ficomps
add
mov
or
sti
fcomip
fsubs
or
jns
push
and
mov
dec
out
jge
in
cmp
mov
jl
fmul
loopne
sahf
adc
test
stc
fldenv
sar
out
jo
repz
lock
cmp
loop
adc
mov
pop
rolb
mov
stc
fstl
test
out
jb
clc
repz
aaa
pop
add
pop
and
mov
jge
push
stc
movb
test
mov
out
pop
xchg
jmp
fildll
dec
push
cmc
push
ljmp
fwait
gs
add
xor
arpl
repnz
fstl
dec
loop
xlat
aad
ret
push
push
or
xchg
icebp
add
push
cmp
xlat
xor
ffreep
cwtl
or
or
arpl
sbb
jl
xchg
daa
out
fiadds
int
movsl
cli
or
push
popa
insl
ss
and
movsb
loope
out
mov
lods
sbb
adc
shll
jge
arpl
jnp
int
push
sarl
mov
cld
mov
pusha
out
imul
sti
lret
xlat
fildll
cwtl
and
mov
out
mov
mov
lahf
jmp
inc
cmpsl
add
jns
ficoml
repnz
push
fbld
fildll
sbb
adcb
mov
jge
lods
divb
push
pop
and
xor
sysexit
xchg
and
ja
ljmp
stos
sarb
inc
stos
scas
loopne
lahf
sub
fisttps
aas
lods
inc
iret
cmpsb
sti
out
cmp
ja
jmp
out
inc
rcrl
push
pop
in
pop
stos
fmuls
lock
outsl
pop
push
aam
push
pop
fildll
sbb
shl
stc
mov
fildll
fucomip
and
in
les
lsl
sar
xchg
ljmp
psubusb
pop
clc
ja
mov
xchg
aam
and
pop
icebp
sbb
mov
mov
sbb
adc
mov
jmp
xchg
pop
rcrl
cmp
mov
jmp
test
in
lock
ficomps
mov
int3
gs
or
lahf
sbb
add
stos
mov
dec
jns
repnz
mov
shrb
out
rcll
adc
or
rolb
dec
out
sbb
data16
int
pop
cli
jge
xchg
cltd
jmp
cltd
testb
in
test
xor
hlt
sti
in
mov
add
and
xlat
sti
mov
dec
lcall
loopne
loope
jge
fisttps
outsb
lea
pop
call
and
xchg
mov
out
mov
icebp
xchg
mov
loop
jmp
in
fwait
popa
in
or
push
xlat
sbb
xchg
sti
xlat
int
lahf
out
ret
aam
lock
xor
mov
jbe
dec
aaa
sbb
lcall
cld
loopne
push
rcr
ljmp
push
mov
and
insl
rcr
int
push
pop
js
fs
pop
loope
cmpsb
jae
lret
sahf
adc
aad
push
push
pop
cmpsb
fisubl
out
mov
fucom
cmpsl
pop
mov
sti
minps
pop
je
ss
int
out
imul
pop
fdivrs
rcrb
fdivr
mov
add
mov
sub
mov
fld
and
shlb
dec
add
popa
pop
add
in
sbb
dec
push
sub
sub
mov
insb
popf
mov
js
movsl
lock
in
test
push
and
pop
cld
lock
clc
jecxz
ds
add
xchg
pusha
inc
popf
ljmp
fistps
pop
int
or
xor
mov
add
cld
jge
jmp
cld
or
push
pop
cmp
and
loopne
shr
aam
lods
mov
mov
add
das
rcrl
xchg
jae
mov
pcmpeqd
cmpps
xchg
aad
lock
lods
aas
or
out
icebp
fiadds
int
push
add
lock
lock
clc
outsl
mov
das
push
dec
xchg
shlb
push
pop
fisttpl
lock
xchg
sbb
shll
push
add
add
lcall
mov
lock
mov
repnz
ret
lock
jnp
xor
fidivrs
xchg
repnz
mov
add
and
dec
pushf
leave
std
push
add
xor
hlt
jle
mov
xchg
pop
aam
push
ljmp
mov
fcmove
jge
adc
add
movsl
lock
imul
add
test
stc
aas
scas
inc
iret
loop
int
hlt
pop
fmul
xchg
scas
imull
orl
xchg
mov
add
fsubrp
pop
and
roll
or
test
cli
push
fisubrs
cmp
sbb
setle
lahf
ljmp
icebp
or
xlat
or
sti
mov
adc
test
hlt
cmp
and
jns
imul
stos
lds
jb
test
mov
sarb
sub
jg
lods
lock
addb
loopne
pop
xlat
cli
jg
jns
xchg
test
in
clc
pop
iret
loop
xor
and
filds
cmc
cmpsb
aam
imul
cli
icebp
pop
icebp
out
or
lds
loopne
roll
sahf
imul
loopne
repnz
roll
ret
int
pop
gs
cld
roll
in
adc
lcall
push
mov
std
push
push
ljmp
inc
iret
pop
imul
leave
pextrw
mov
out
aam
inc
pop
data16
int
in
jo
dec
mov
or
cmpsb
pop
add
addr16
sbb
dec
sahf
les
call
mov
pop
in
or
xchg
movsl
outsw
add
push
rcrb
inc
push
or
dec
or
dec
or
iret
xchg
pop
mov
or
rorb
ror
dec
fisttpll
fst
decb
fucomip
ds
sbb
pop
push
insb
add
repz
push
fwait
in
fucom
ljmp
cmp
aad
shr
push
cmpsb
lds
xchg
fbld
jnp
stc
cmpsb
cmc
inc
icebp
insb
pop
into
add
jae
adc
xlat
ret
lahf
and
xchg
mov
icebp
aas
adc
sti
iret
inc
mov
sti
jae
mov
mov
in
fmull
iret
sbb
cs
mov
mov
xor
ja
andl
add
push
or
fnstsw
jl
addr16
xchg
cmp
jmp
inc
out
maskmovq
notl
add
iret
iret
mov
or
mov
adc
add
push
xor
add
push
pop
aas
or
mov
fidivs
push
popa
aas
int
repnz
into
fwait
aas
popa
sti
mov
scas
fistpl
out
ds
dec
xor
push
mov
test
jmp
es
aam
lret
push
mov
lret
es
std
sub
xchg
repz
testl
dec
push
ud2
lea
cltd
and
lret
je
enter
add
pop
dec
fmul
lret
mov
add
cld
mov
ja
hlt
or
dec
ss
lret
addl
iret
xchg
adc
stos
inc
dec
les
aam
out
js
jmp
push
into
enter
aas
int3
sub
cmovno
femms
mov
imul
dec
sahf
inc
mov
adc
andl
pop
pop
decl
sahf
rep
stos
stos
or
dec
outsb
iret
and
stos
jge
iret
hlt
in
and
add
loopne
or
add
mov
xchg
shll
xlat
ficompl
mov
jmp
int3
sub
lock
movsb
and
cmp
lds
mov
fidivrs
add
push
or
divb
iret
lods
cmp
out
imul
call
add
or
sub
or
pop
add
pop
in
sbb
vsubss
lea
test
mov
xor
int
dec
dec
je
lfs
or
push
bsr
shll
xchg
push
and
jne
pusha
cli
fistps
addr16
rcll
mov
pop
xor
inc
gs
mov
fsubrs
mov
xlat
xor
and
pop
or
push
jmp
cmp
mov
or
nop
push
mov
std
push
push
xchg
dec
push
add
lods
pop
push
push
sub
xor
sar
mov
ret
shufps
or
or
pop
psraw
gs
scas
jno
ja
jge
add
pop
dec
or
das
rorb
flds
sarl
stos
sbbl
mov
or
xchg
push
psubusb
mov
jg
loop
xchg
lea
sbb
mov
aas
sti
rorl
or
sti
lea
xlat
pop
dec
or
lahf
pop
mov
mov
lcall
loope
sbb
in
fimull
or
std
scas
dec
push
jp
fisubl
paddw
movb
arpl
nopl
and
mov
or
fisubl
paddw
jp
jne
mov
call
scas
pop
pop
punpckldq
gs
or
outsb
jno
je
ja
jp
jge
orb
incl
adc
shll
adc
scas
sub
xchg
jp
dec
lret
cmovp
add
add
and
jecxz
lahf
das
push
jmp
add
cs
movsl
dec
or
jl
fbstp
or
fcomp
add
fnstcw
xlat
and
aam
mov
cmpsb
fbstp
xchg
cli
jecxz
mov
imul
add
cmp
xorb
rolb
int
push
fsubl
or
es
add
mov
mov
pop
ret
jae
js
or
mov
ja
push
insl
jmp
aaa
jo
dec
push
les
clc
mov
sub
lock
xchg
pop
in
dec
dec
xchg
loope
test
xchg
or
mov
std
push
enter
out
and
mov
ffreep
inc
dec
dec
mov
push
sbb
or
adc
das
xchg
jae
insl
sbb
cmpb
add
rclb
sbb
add
ljmp
mov
pop
shlb
iret
mov
mov
sbb
and
int3
test
and
sbb
push
pop
dec
adc
cmp
mov
and
mov
pop
ficomps
bound
and
xchg
push
mov
dec
xlat
rorb
xor
fsubrp
cltd
fs
lock
push
jmp
mov
shll
addl
jge
mov
dec
lret
jno
xchg
add
add
cltd
fwait
insb
pushf
and
sbb
repnz
loopne
into
mov
xchg
mov
mov
xchg
ss
or
mov
xor
ret
ret
dec
sbb
mov
fnsave
nop
push
and
and
sbb
sahf
or
adc
gs
pop
mov
cltd
sbb
andb
gs
aas
cmp
dec
mov
dec
mov
pop
pop
outsb
test
loopne
sarl
in
xchg
cmp
jg
addl
sub
test
mov
or
test
inc
dec
mov
int3
ret
aam
das
add
push
popf
int
cmp
xchg
xchg
aam
decl
mov
dec
mov
sbb
xchg
mov
jp
push
lea
repz
repz
scas
dec
stos
ds
fldl
push
or
pusha
jle
mov
jo
mov
shrl
aas
dec
xor
add
push
and
mov
repz
mov
pop
push
mov
push
loope
and
cmpsl
dec
lds
popl
or
dec
xchg
pop
nop
mov
mov
cmp
xchg
sbb
mov
pop
dec
push
jmp
add
stc
push
and
pop
adc
dec
jg
fmull
fdivrl
mov
inc
inc
les
jge
mov
add
pop
push
aam
xchg
cli
push
fs
inc
jge
std
mov
sbb
push
iret
sub
aas
insl
or
mov
frstor
mov
xor
add
or
cmp
push
mov
mov
add
mov
test
roll
cmp
js
jne
aad
es
jns
ss
jecxz
pop
pop
gs
inc
sub
test
and
mov
push
and
and
roll
xchg
pop
clc
call
fisubrs
inc
mov
fstl
pusha
add
jbe
clc
stc
adc
mov
aam
xor
push
sbb
dec
cs
clc
pop
add
pop
daa
mov
and
jae
sbb
add
adc
fildll
adc
call
sub
add
and
add
cltd
loopne
sahf
adc
idivb
shlb
adc
pop
dec
inc
or
push
lret
jo
jge
jge
fbld
lret
xchg
pop
mov
out
add
inc
dec
push
or
into
sbb
push
loop
dec
add
loopne
std
sub
jne
out
dec
push
aam
add
cmp
add
sbbb
cmp
mov
sbb
jg
movsl
mov
loopne
xor
xlat
mov
repnz
lock
adc
fucomip
sbb
out
add
add
pop
add
and
loopne
out
sub
lods
das
add
add
sub
iret
ss
dec
jno
testl
push
jecxz
pop
scas
inc
and
popa
dec
bound
je
std
sti
std
mov
pop
add
inc
lcall
add
xor
sbb
pushf
in
arpl
push
cli
or
aad
out
push
lock
add
sbb
add
and
add
mov
mov
push
bound
pop
lods
dec
cmp
repnz
out
dec
add
jecxz
cmp
dec
dec
mov
jmp
aaa
pop
out
iret
leave
inc
mov
mov
adc
js
add
outsl
add
rcrb
mov
dec
xor
cwtl
pop
mov
fisubl
lcall
jae
dec
dec
jl
loope
adc
mov
add
insl
sbb
add
adc
or
mov
lea
xchg
dec
adc
addr16
or
lock
call
imul
add
inc
iret
rcrl
fsubrs
call
inc
xchg
dec
mov
popa
sahf
inc
push
jg
push
leave
scas
push
jge
sbb
mov
jecxz
repz
ret
pop
fwait
mov
pop
dec
movsb
ret
dec
out
mov
mov
dec
sbb
cmp
sub
jecxz
jp
or
cmp
cwtl
jp
sti
or
insl
shlb
incb
add
int
lret
js
or
insb
pop
xchg
add
shr
dec
mov
pop
adc
xor
loope
ret
lcall
jae
js
sbb
jl
es
push
daa
mov
lsl
dec
mov
scas
stc
aam
in
pop
sub
mov
inc
lahf
les
iret
out
sub
emms
xor
adc
adc
or
or
repz
and
fbld
mov
daa
in
and
dec
popf
popa
pushf
pop
fidivrl
dec
pop
shll
dec
mov
add
sub
mov
sub
out
add
cmp
lret
mov
or
jp
jo
out
repz
iret
repnz
movsb
std
dec
out
mov
sti
loope
in
leave
mov
daa
test
add
sahf
popa
sbb
fmul
pop
es
fs
pop
fmull
shll
and
lcall
pop
frstor
shlb
xor
out
cmc
or
pop
xchg
int
leave
add
cmp
aaa
push
pop
sbb
testl
cmp
xchg
mov
push
and
push
push
leavew
pop
dec
js
push
pop
roll
or
fwait
sbb
outsb
pop
push
inc
adc
xlat
xor
jge
mov
test
clc
jae
dec
fmull
dec
into
jae
push
pop
or
test
mov
fmul
mov
or
lret
bound
push
mov
fmuls
test
or
or
mov
bswap
mov
mull
fildll
push
insb
sub
inc
dec
iret
xchg
xlat
mov
ficomps
in
into
and
mov
int
jmp
stc
outsl
and
popa
cld
shlb
add
dec
mov
mov
subl
jg
lahf
lret
fwait
roll
inc
ja
outsl
ljmp
movb
out
addb
cmpl
ds
mov
mov
jns
testb
jne
add
mov
das
out
scas
outsb
add
in
lods
insl
imul
stos
add
jmp
out
cmpsb
es
arpl
add
mov
popa
pop
pop
ficomps
or
add
lcall
add
xchg
push
push
aad
add
push
adc
xchg
push
adc
rcll
mov
std
fsts
sbb
pop
jg
mov
xor
lret
incb
sbb
dec
mov
dec
xchg
scas
pop
jg
pop
sbb
int
inc
jnp
lret
out
pop
pop
add
aas
pop
jg
shrl
pop
pop
mov
or
in
add
jbe
pop
mov
pusha
and
movsl
int
out
in
imul
stos
push
fcoml
xchg
adc
popf
xor
ljmp
mov
lods
std
sbbb
xchg
fimuls
jno
xlat
out
xchg
fsubl
ljmp
sbb
or
insl
insb
push
add
cld
push
aad
adc
lahf
repz
mov
addr16
js
mov
repnz
pop
mov
movsb
xchg
aam
pop
dec
jbe
fs
fcomip
sub
mov
and
stc
mov
into
fsubrs
gs
iret
sub
rcll
mov
mov
and
cmp
inc
adc
xor
jecxz
xchg
mov
pop
out
fs
fadd
jb
fstl
lret
add
mov
fiaddl
xchg
push
je
xchg
jb
push
dec
xor
clc
add
je
loop
data16
lods
xchg
test
mov
dec
daa
std
rol
mov
add
sarb
and
add
jae
add
mov
stc
sub
pushf
test
sub
add
call
adc
jl
xchg
pushf
out
dec
fiadds
rorb
add
or
lds
jns
push
xor
push
out
les
loop
fwait
add
cld
xor
lods
js
jecxz
cmp
cmp
add
dec
and
sarb
mov
jb
xchg
nop
out
cli
mov
xchg
mov
xlat
das
cmc
fistpl
lods
inc
jmp
stos
add
or
add
test
ret
sub
xor
cmc
iret
mov
aam
fisttpll
add
and
addr16
jno
mov
cmc
or
mov
mov
rcrb
sahf
shlb
ficompl
dec
sbb
rorb
iret
add
or
aaa
lret
push
or
jl
inc
ficompl
shll
sbb
lar
push
daa
daa
sti
adc
lea
bound
or
or
call
xchg
xchg
push
dec
icebp
popa
lahf
pop
adc
dec
add
jae
nop
adc
ds
push
bound
dec
push
push
jmp
mov
int3
mov
xlat
xchg
repz
jnp
pop
leave
mov
jnp
aad
in
rclb
jecxz
arpl
pop
dec
rcrb
pop
push
mov
xlat
jb
imul
fcmovnbe
inc
adc
dec
lods
mov
fcomip
or
pop
stos
inc
cld
push
xor
ficompl
xchg
pop
cli
into
sub
dec
andl
ds
jmp
stos
loopne
lea
jg
jns
loopne
leave
lds
int
or
dec
out
or
idivb
in
mov
mov
leave
stc
mov
cmp
or
pxor
iret
insl
mov
or
push
xor
lahf
xchg
into
leave
aaa
mov
lods
add
push
loopne
aas
dec
cmp
dec
cli
mov
mov
inc
scas
in
or
dec
mov
jmp
adc
dec
or
mov
negb
or
jg
add
mov
adc
dec
mov
mov
sub
ja
ret
icebp
mov
out
sbb
addl
aad
pop
dec
mov
daa
cmpsl
loop
push
pop
iret
std
mov
ret
lds
movsb
adc
sub
or
iret
lcall
cltd
push
call
int3
stos
cmc
jmp
fldl
ret
repz
lret
bound
pop
rcr
fnstenv
cmp
fs
jg
in
add
popa
aam
or
add
decl
sahf
addl
pop
sub
std
mov
or
cmp
pop
stos
ret
pop
stos
inc
or
inc
cld
add
mov
mov
sbb
dec
dec
iret
or
inc
addb
add
out
or
inc
xchg
fstps
push
rol
dec
pop
cmp
stos
testb
shr
ret
ljmp
xchg
pusha
or
inc
sub
add
add
mov
stc
add
cmp
fisttpl
sbb
xlat
test
les
ljmp
pop
and
inc
or
pop
test
lock
add
pop
rcrl
push
adc
and
arpl
add
in
lcall
mul
enter
fnstsw
ret
add
shlb
cli
rorl
aas
rorl
pushf
movsb
pop
dec
ljmp
cmpsb
jmp
inc
pop
add
fdivl
jnp
jbe
cli
inc
xchg
loop
mov
add
imul
mov
and
sbb
movsb
fwait
xchg
in
pop
cli
nop
sti
or
push
fldl
fldl
bound
call
pop
xchg
or
out
fsubrs
scas
pop
cld
inc
add
pop
add
or
add
int
push
arpl
shl
jmp
call
repz
jle
jecxz
fbld
loop
xchg
inc
outsl
ror
ss
dec
mov
pushf
cmp
push
cli
add
inc
les
lock
repz
in
gs
imul
daa
out
add
shlb
push
sub
movsl
xchg
jno
shll
mov
push
dec
push
adcl
pop
xchg
test
cwtl
cmp
arpl
add
outsb
inc
fwait
add
into
in
mov
adc
mov
mov
dec
xor
add
js
xchg
sbbl
ret
dec
xor
xlat
enter
mov
fstl
inc
jmp
cmc
push
fsubrl
call
int3
daa
dec
dec
mull
jne
mov
add
jmp
mov
movl
cmp
shll
pop
subl
pop
sub
pop
lcall
das
mov
and
push
add
ret
adc
mov
js
adc
es
jae
icebp
add
adc
add
or
loope
cltd
mov
push
jnp
xchg
jae
inc
int3
xchg
push
or
pop
outsb
dec
add
add
mov
add
ret
mov
dec
dec
nop
mov
outsb
pop
sbb
jbe
cltd
or
xor
cmp
add
loopne
in
xor
xchg
sub
jns
icebp
mov
jb
mov
inc
mov
add
and
in
add
cld
mov
fmul
sub
add
mov
adc
inc
and
cwtl
add
gs
shll
xchg
icebp
or
mov
cltd
loop
mov
mov
and
bound
jge
icebp
jmp
jp
jo
and
add
cmp
dec
sahf
inc
push
lock
mov
enter
xchg
and
shll
out
bound
mov
add
imul
pop
sub
fsubr
sub
inc
fnstenv
shlb
loopne
add
push
aad
add
sbb
or
and
popa
cmp
lock
dec
fstpl
sarl
add
sbb
xchg
ss
inc
add
sarb
mov
mov
popa
rclb
lret
cmp
mov
push
cmp
sbb
roll
mov
xor
sahf
inc
dec
loopne
pop
mov
add
mov
xchg
sbb
xor
cwtl
add
lods
repnz
les
popa
imul
notl
loop
arpl
sti
xchg
sbb
cld
shrl
mov
sbb
push
test
or
stc
clc
xchg
ljmp
sbb
psllw
hlt
test
lcall
mov
aam
out
add
test
xor
shrb
sbb
mov
cli
inc
and
scas
adc
lock
sarl
ds
add
xchg
mov
push
push
cwtl
dec
dec
add
fisttpll
inc
out
stc
jnp
inc
daa
jle
insb
jmp
jl
mov
mov
mov
xor
push
mov
test
mov
das
scas
pop
insl
rorl
add
mov
jb
fcomip
gs
lods
add
rcrl
clc
add
shlb
dec
imul
shrb
js
ds
push
daa
jp
out
xchg
das
add
iret
mov
into
rolb
or
and
jl
rep
adc
dec
shll
or
or
or
add
popa
push
push
inc
out
or
int3
dec
inc
in
test
jp
ret
popf
iret
mov
imul
pop
xlat
movsb
add
mov
and
insl
test
scas
mov
dec
fldt
dec
mov
repnz
and
sbb
pop
pusha
mov
cs
insb
rorl
and
loopne
out
iret
jno
and
jne
add
cld
add
shrl
xor
add
movsl
mov
add
ja
daa
je
mov
out
rolb
mov
dec
icebp
iret
jge
lock
fwait
add
sub
cmc
adc
pop
push
clc
sbb
add
test
sbbb
iret
and
outsl
adc
fld
xchg
and
add
scas
test
add
sahf
push
jmp
pop
add
aam
outsl
ss
add
sbb
loopne,pn
add
push
mov
sbb
mov
fildll
scas
in
dec
jecxz
js
and
int
lret
mov
mov
in
add
sti
insb
lret
lea
inc
cmp
fisttps
imulb
pop
stos
incb
adcl
jle
cltd
mov
ja
imul
add
mov
xchg
add
paddsw
add
adc
add
sahf
sar
jp
push
mov
mov
sbb
adc
ja
cmp
dec
outsb
pusha
or
xor
sub
cmpl
sahf
movsl
js
test
dec
xor
sub
sbb
add
mov
add
mov
fadd
mov
push
adcl
filds
dec
fdivrp
add
mov
sub
add
add
rclb
mov
xchg
lds
adc
popa
fcoms
movsb
push
push
cmp
dec
addb
mov
add
lret
push
cli
or
mov
gs
sbb
mov
dec
jp
mov
cmpsb
push
jmp
iret
mov
out
sbb
aad
sbb
xlat
inc
imul
xchg
loope
fildl
xchg
cmp
adc
icebp
cmp
jecxz
ret
xor
push
push
mov
ss
xor
xchg
xor
out
insb
mov
add
mov
repnz
mov
leave
lcall
ja
pop
add
imul
cmpl
hlt
iret
add
add
xlat
das
cmp
sub
out
push
and
iret
mov
xor
xor
mov
adc
mov
mov
pop
inc
sbb
pusha
adc
adc
cmp
out
sbb
je
sbb
push
dec
loopne
xor
pushf
dec
add
jae
fisttpll
aad
jp
inc
out
cld
push
fwait
cmpsb
add
dec
dec
sar
sbb
add
xor
leave
repnz
ds
or
push
and
sbb
insb
lods
inc
or
mov
notl
pop
xchg
adc
jo
shll
jns
aad
add
fidivrl
test
add
ret
xor
addb
clc
pop
mov
pusha
add
cmp
fwait
dec
pop
inc
in
insl
add
and
pop
dec
test
sarl
rorl
xlat
push
add
in
out
xchg
jge
jmp
fisubrs
rorb
mov
push
int
and
cmp
inc
sub
fimull
aas
pop
jo
out
mov
lcall
stc
mov
clc
loop
pavgw
cmc
filds
push
add
ja,pn
ss
inc
jl
add
shl
inc
gs
push
mov
pop
xor
iret
pop
xchg
pop
jp
push
iret
dec
lods
inc
into
fdivs
jg
fcmove
aas
popa
fists
filds
xor
lret
out
psraw
dec
insl
or
repz
inc
mov
repz
out
ret
addl
mov
cmc
inc
das
mov
mov
or
mov
lcall
dec
decb
pop
scas
xchg
jmp
mov
popf
pusha
push
pop
adcl
testb
dec
loop
stos
mov
leave
dec
out
and
push
jecxz
incb
xlat
test
xchg
sbb
mov
xchg
sbb
mov
pop
adc
and
sub
std
dec
lods
int
mov
and
rorb
mov
push
xchg
jae
xor
or
jae
or
mov
mov
testb
gs
xor
sub
hlt
lret
mov
popf
xchg
popf
sbb
out
int
pop
test
dec
out
mov
movsl
mov
push
inc
inc
mov
mov
fwait
jl
push
sbb
jmp
inc
int
in
jbe
jp
jle
ffree
jg
push
das
sbb
in
sbb
jge
aam
bound
rcrl
in
inc
fldt
scas
imul
inc
or
push
mov
cwtl
ds
inc
push
add
gs
shlb
icebp
dec
inc
dec
jp
stc
sub
cli
repz
decb
dec
test
fldl
jge
iret
icebp
and
sahf
sub
loope
stos
mov
sub
mov
lock
sub
cmp
or
add
das
test
out
sarl
xchg
mov
fdivl
outsl
inc
xor
insb
push
in
jle
pop
add
inc
xchg
pop
nop
idivb
out
mov
insb
lds
mov
ret
add
jmp
imul
cmc
mov
test
in
jne
mov
lock
loop
jg
mov
fadds
stc
sbb
js
inc
xchg
push
add
add
das
enter
in
stc
xchg
out
popf
jb
pop
dec
add
arpl
add
imul
jl
arpl
mov
pop
mov
daa
lods
scas
push
add
clc
cmp
xor
mov
add
inc
cmp
adc
cmp
ret
or
iret
jp
push
into
mov
mov
add
aas
push
add
leave
xor
add
inc
loope
mov
lods
add
out
dec
mov
shll
push
jae
mov
imul
loopne
dec
fs
lods
xor
fildl
idiv
test
stos
insl
cmp
jmp
jg
aas
push
cmpsb
cli
jb
add
jae
in
outsb
in
xorb
push
call
jp
jle
pop
loopne
push
dec
cmp
jnp
mov
jmp
sbb
mov
xor
jns
int
fbstp
mov
cmp
and
sahf
add
loope
pop
popf
in
lds
add
xor
mov
sbb
fisttps
cmpsl
inc
and
int3
add
popf
pushf
and
cmc
sbb
ja
js
ret
add
sub
xchg
dec
adc
jg
into
in
cmp
add
add
push
aad
add
stc
repz
jg
push
iret
incl
shl
jnp
gs
mov
daa
fcomip
add
aaa
mov
mov
push
add
popf
rcrl
jae
add
pop
inc
fs
sub
inc
dec
imul
sbb
mov
imul
test
jb
lods
inc
sbb
fstpl
clc
xor
cltd
movsl
mov
pop
dec
aam
sub
out
rorb
cmp
push
cld
and
call
roll
push
pop
and
cmp
push
sub
pop
jle
jb
dec
repz
cli
cltd
roll
pop
lods
ljmp
push
faddl
into
cmp
nop
xchg
xchg
jnp
out
jl
sub
sub
icebp
mov
mov
pop
data16
add
xchg
insl
pusha
add
aam
bound
jge
mov
add
inc
pop
adc
mov
mov
lods
aad
and
or
test
ja
pop
jg
add
orb
lods
lcall
orl
je
popf
add
push
adc
in
push
arpl
iret
sbb
add
das
dec
inc
aaa
test
test
mov
stos
add
test
jb
mov
mov
add
fiaddl
jl
mov
jge
push
fwait
call
shlb
sbb
jnp
cmp
ss
mov
out
pop
gs
out
adc
push
push
stc
mov
dec
in
push
inc
fisubrl
or
int3
pop
scas
adc
jae
loopne
dec
test
xchg
pop
mov
popa
push
add
insl
leave
inc
aad
mov
inc
xor
mov
les
lods
cmp
sahf
and
push
adc
mov
add
xchg
jae
ret
cld
enter
sub
mov
lds
lods
fxch
and
frstor
inc
or
sbb
ret
jp
iret
or
cmp
jecxz
push
packuswb
cmpsb
sar
pop
inc
mov
xor
jp
out
dec
mov
mov
gs
addr16
lea
fnstsw
add
adc
sub
xlat
sbb
jnp
push
xchg
icebp
aas
outsw
sub
popf
fdivr
or
sub
push
jb
movsb
lock
inc
aam
popf
jbe
cmp
test
ja
inc
les
dec
mull
or
int
mull
jae
sarb
mov
rol
xlat
test
mov
add
insl
sbb
mov
pop
sarb
and
or
cwtl
xchg
push
jg
cmp
add
push
inc
add
push
mov
pop
std
and
inc
add
mov
lods
add
lods
cwtl
mov
jbe
ret
sub
and
stos
out
dec
in
push
sub
inc
push
jg
in
ret
push
fnstsw
stos
cld
out
ret
jecxz
out
sbb
in
push
ret
addl
stos
std
cwtl
fsubrl
mov
add
dec
mov
in
pop
jle
jl
call
idiv
jnp
test
dec
dec
push
mov
iret
dec
adc
sub
inc
add
icebp
loope
scas
or
pop
add
jle
in
jg
push
jge
and
cmpl
and
scas
ja
rorl
and
mov
test
jae
jne
push
or
ja
cmp
mov
add
dec
pop
push
fcomip
sti
call
pushf
and
mov
add
insl
mov
rorl
add
xchg
mov
ret
inc
mov
push
je
push
filds
dec
pop
inc
loope
sub
cmp
sbb
pop
popf
push
shrl
loopne
fisubl
mov
mov
add
inc
scas
pop
loop
mov
jp
insl
das
popa
mov
std
test
loope
repz
pusha
test
lods
dec
cwtl
popa
inc
xchg
pop
cmp
adc
arpl
mov
stc
sarl
jl
xor
ss
jmp
dec
iret
inc
data16
stc
arpl
pop
rolb
cld
mov
mov
scas
mov
and
sti
pop
jb
shl
mov
dec
and
sbb
movsb
dec
push
pop
int
add
dec
mov
in
jg
push
fldt
mov
les
fldcw
fistl
shlb
inc
fdivp
js
mov
fs
testb
inc
jp
ret
ret
into
loopne
jge
cmp
add
push
out
in
add
scas
lret
inc
adc
jmp
stos
leave
push
cmp
xor
xchg
sbb
les
mov
pop
loopne
add
add
dec
xor
dec
jge
iret
xlat
or
xsha1
cmpsb
mov
adc
iret
xchg
lcall
incl
mov
call
xchg
aas
fs
popl
int
les
loopne
or
dec
idivb
jbe
push
into
scas
cmp
insl
stc
adc
int
aas
lahf
hlt
xor
jne
aaa
adc
dec
cld
jg
in
mov
mov
lret
xchg
dec
std
bts
insl
pop
sbb
iret
mov
outsb
int
jae
lea
in
mov
stos
mov
iret
xrelease
sub
push
xchg
jns
test
repz
enter
push
insb
or
mov
add
rol
fcmove
loope
into
lret
mov
clc
mov
cltd
push
lret
mov
test
in
fsubl
inc
dec
mov
sub
clc
or
addb
std
push
ds
incb
xor
imul
cmc
ljmp
lret
roll
sub
jl
or
dec
enter
add
mov
cmp
cmova
dec
jnp
jmp
imul
dec
cmc
pop
insl
fiadds
or
lock
lret
add
imul
pop
dec
daa
insb
les
mov
pop
inc
outsb
xchg
dec
xchg
lock
sub
add
cmp
push
lret
lds
mov
add
push
dec
xchg
dec
ja
mov
test
test
xchg
adc
inc
lret
pop
fs
mov
xlat
sti
dec
mov
ret
cmp
jp
cmc
dec
sbb
mov
mov
movq
aad
data16
ret
pushf
mov
fsub
xor
les
pop
add
fisttpl
or
lret
cli
mov
add
iret
lret
je
dec
jns
ja
xor
out
xchg
fucomi
incb
inc
stc
incb
dec
or
fstpl
cld
adc
orl
mov
mov
xchg
inc
or
or
or
lret
dec
aam
mov
outsl
js
test
sahf
mov
ret
push
jmp
in
sub
mov
lret
pop
inc
repz
test
idiv
in
xchg
ror
arpl
or
fnstenv
sbb
lret
inc
jb
xchg
aaa
in
in
out
inc
or
cmpsb
fisttps
and
dec
jo
mov
pop
push
femms
lret
stos
xor
lret
xor
add
int3
pop
les
iret
sub
stos
repnz
out
add
enter
ret
sarl
repnz
loope
mov
stos
jb
ret
add
test
int3
or
xor
inc
or
insb
xchg
cs
mov
cwtl
daa
push
ret
sbbl
dec
addb
ret
lds
mov
ret
and
dec
je
sub
pop
insl
lds
mov
add
out
out
push
sbb
mov
dec
in
xor
lret
flds
jb
jg
in
ror
pop
ret
add
popa
cmpb
cmpsl
jg
test
int
mov
add
iret
inc
sti
push
call
call
cmpl
js
dec
xor
or
orb
test
test
out
lret
ret
ret
or
mov
ljmp
add
data16
pop
mov
outsl
xchg
pop
test
cwtl
mov
pop
test
out
add
daa
pop
cmp
enter
in
gs
rorb
dec
je
mov
pusha
cli
cmp
lock
mov
mov
cli
mov
lret
cmp
into
stos
ss
pusha
push
xchg
movsb
incb
jl
inc
add
outsb
or
dec
mov
add
or
lds
popa
int
movsb
stos
xchg
or
cs
ret
push
out
cmp
push
add
in
test
jnp
stc
lret
in
pop
dec
out
incb
lods
push
popf
mov
aaa
sub
xor
adc
shl
inc
in
imul
dec
ret
inc
sbb
and
push
fmull
add
inc
je
mov
lods
mov
or
ret
jb
dec
in
push
aas
xor
ficomps
cld
dec
lret
dec
sbb
mov
dec
push
fmuls
es
push
pushf
in
mov
dec
enter
mov
in
push
mov
xor
fwait
lods
int
addr16
lret
add
xchg
js
data16
repz
outsl
dec
add
pop
sub
mov
dec
fcmovne
add
or
sub
movswl
cmc
jecxz
mov
test
aas
sub
bound
pop
add
or
inc
mov
add
pop
out
push
lcall
add
mov
push
push
imul
add
adc
fwait
mov
and
mov
mov
fsubrs
mov
pushl
mov
jbe
sbb
pop
loope
mov
scas
push
inc
sarl
dec
jae
sbb
les
cltd
aam
mov
add
lcall
add
xor
adc
xor
sbb
jne
pop
dec
enter
cmp
cmp
sbb
mov
clc
adc
dec
cli
mov
or
jmp
push
lret
or
lods
push
sbb
xor
or
ret
ret
addb
add
ljmp
or
inc
add
mov
std
into
push
mov
add
loope
xor
stos
hlt
std
sti
rcrl
add
sbb
rolb
sbb
test
int
addr16
outsb
push
fstl
sti
test
pop
repz
rcrb
add
pop
insb
or
inc
jg
shl
fidivl
dec
dec
push
cmp
mov
rolb
and
sbb
bound
xchg
out
cltd
movsb
cmc
dec
or
aad
add
pop
repnz
push
clc
or
xchg
add
add
rcll
jae
pop
stos
inc
dec
jns
rolb
sbb
sahf
test
push
popa
mov
push
add
aaa
sbb
xchg
test
mov
aas
dec
inc
add
jle
pop
pop
inc
loope
out
pop
push
pop
mov
lock
int
pop
and
push
xchg
bswap
xchg
int
fs
xchg
ficomps
rcrl
jbe
in
mov
cmp
lret
jl
sub
or
movsb
add
ret
addr16
sti
enter
test
xor
into
arpl
ds
dec
adc
push
xor
out
lahf
repnz
es
cwtl
pushl
leave
pop
call
jle
cmp
outsb
adc
cltd
inc
repz
daa
test
stos
mov
sbb
sti
sub
dec
add
inc
sub
lcall
jae
pop
mov
dec
and
int
inc
mov
jge
test
adc
adc
inc
test
arpl
sti
xchg
push
xchg
sub
pop
xor
stc
pop
fwait
in
fsubrl
adc
lods
les
add
or
pop
sahf
call
or
push
fldt
dec
shlb
lods
or
mov
mov
cmp
sti
pusha
arpl
pop
jmp
stc
add
mov
pop
add
xor
pushf
daa
inc
xor
js
fmul
add
and
adc
add
pop
mov
loop
xor
mov
lock
and
lcall
mov
aam
mov
sbb
mov
imul
cmc
or
imul
mov
sub
repz
add
stos
jl
add
ds
xchg
out
jge
loope
clc
inc
lcall
shlb
add
test
sbb
dec
sub
outsb
push
jb
mov
data16
scas
mov
add
and
and
dec
nop
push
lods
inc
sub
repz
xchg
pusha
lret
fs
dec
into
xor
shll
in
jns
repz
in
pop
call
mov
push
push
add
lret
frstor
ds
mov
pop
push
les
xor
popa
inc
dec
push
enter
adc
and
inc
jle
push
mov
fistl
daa
stos
dec
push
push
mov
jno
loope
or
shll
loopne
call
inc
jge
push
cmp
jbe
add
inc
jle
rcrl
jp
icebp
adc
push
shrl
add
stos
mov
shl
lret
dec
stc
add
rcrb
jbe
int3
push
inc
dec
movswl
inc
jmp
inc
add
aam
dec
cld
les
cmp
imul
daa
dec
ss
pop
push
push
dec
dec
jmp
mov
daa
or
into
push
lea
pop
dec
lods
jge
rcrl
dec
jge
data16
sub
jge
push
pop
and
pop
shl
lret
mov
or
data16
push
fstpl
and
pop
shr
lahf
adc
in
sbb
push
pop
xchg
and
and
std
mov
pop
pop
and
dec
and
pop
roll
dec
sbb
popa
sahf
push
mov
rol
or
push
std
dec
mov
loope
inc
enter
adc
ds
dec
adc
sti
pop
adc
daa
cmp
cs
and
adc
stc
add
and
and
push
jnp
loop
in
sbb
aaa
fsubr
cmp
cmp
dec
pusha
into
pop
dec
mov
into
mov
or
sub
ret
mov
test
xchg
into
pop
inc
loopne
push
aad
arpl
mov
adc
aam
xlat
dec
stc
xchg
outsb
add
mov
pop
and
cs
fstl
jb
in
pop
and
add
bound
or
fwait
or
or
xchg
out
in
std
fisttpl
jle
or
orl
and
inc
into
mov
mov
add
scas
dec
int
or
push
pop
xchg
pop
adc
outsl
push
in
loopne
dec
fnclex
mov
subl
dec
mov
sbb
inc
jne
pop
and
adc
sbb
mov
das
movsb
mov
sbb
push
lahf
xchg
divps
pavgw
pop
fs
mov
das
mov
mov
test
pop
movsb
addr16
cmpb
testl
cwtl
aam
xchg
cld
mov
or
push
dec
xor
add
or
int
js
push
jae
push
inc
or
dec
aam
sbb
xchg
jge
mov
pop
sub
mov
icebp
dec
mov
ret
jne
cli
lahf
add
into
lcall
mov
daa
fnstenv
and
cmp
mov
cmp
mov
dec
loop
stos
push
jp
ret
test
int3
popf
int
push
outsl
in
mov
cld
sar
test
adc
jns
movl
and
movsl
or
cmpsl
pop
cltd
gs
outsb
fistl
imul
pop
in
imul
push
int3
mov
fwait
jb
mov
dec
adc
mov
mov
mov
lret
mov
gs
movhps
fmull
cmc
in
test
popa
decl
decl
jecxz
add
mov
loop
push
and
push
es
add
mov
call
adc
sub
mov
iret
adc
test
push
push
or
mov
cltd
adc
into
xchg
xchg
add
push
xlat
lea
dec
aam
mov
mov
add
or
or
test
xchg
inc
lds
vprotw
orl
inc
sbb
and
int3
sub
add
sbb
adc
icebp
shlb
inc
pushf
add
popf
inc
loope
scas
xchg
imul
repz
or
sub
sbb
out
xor
add
mov
and
pop
xchg
ja
sub
movsl
out
insb
mov
loop
and
mov
jns
adc
add
and
mov
insb
in
pusha
lock
int3
out
add
xchg
mov
sbb
scas
dec
das
iret
lods
pop
jno
loope
jo
dec
outsl
test
ljmp
add
adc
jnp
xor
mov
in
daa
dec
add
lahf
filds
rcr
inc
iret
into
cli
xchg
push
pop
and
fildl
pushf
int3
adc
or
repz
packsswb
call
test
imul
dec
pop
pop
inc
lret
cltd
mul
jp
pop
add
stos
flds
xor
mov
push
imul
dec
sbb
push
stos
add
mov
inc
mov
cmp
mov
imul
xchg
subl
ret
mov
loope
jno
add
xchg
push
loop
ja
lds
addr16
divl
test
or
add
sub
pop
xchg
mov
es
rcr
and
iret
mov
and
pop
or
repnz
adc
mov
inc
lods
pop
sbb
sub
shl
xchg
jmp
ficomps
cmp
idivb
add
dec
fcoml
mov
sbb
bound
test
fiaddl
xchg
inc
xlat
add
push
lret
push
pop
add
add
xlat
or
add
lcall
add
xchg
mov
cmp
xchg
repz
add
insl
push
cld
outsb
mov
sbb
mov
mov
cmp
insb
inc
push
add
cli
cmp
add
mov
add
push
sbb
add
push
sbb
test
jg
pop
xor
addr16
mov
add
cmp
jmp
lahf
test
mov
xchg
imul
sub
add
loop
pop
dec
mov
sbb
or
lea
test
fcomps
xor
xor
mov
icebp
sub
lcall
repz
dec
jo
pop
sub
add
adc
mov
add
addr16
out
les
pop
cmpsl
xchg
or
out
cli
in
popf
fadds
mov
pop
mov
sub
add
push
jp
add
popa
cmc
cltd
or
ljmp
rorb
test
mov
push
cwtl
stos
pop
dec
add
pop
jae
adcl
inc
pop
xchg
add
es
fwait
mov
aad
sub
fists
xchg
or
push
xchg
daa
dec
lea
test
push
enter
and
add
inc
cmc
mov
push
test
or
mov
push
andb
out
xchg
aam
bound
mov
xlat
cli
mov
pop
clc
jle
filds
daa
jne
out
push
mov
ds
in
repnz
stc
sbb
add
ss
in
adc
add
clc
pop
in
leave
sub
mov
cmp
xlat
mov
enter
addl
mov
in
add
idiv
out
test
mov
in
nop
xchg
jns
push
mov
scas
out
inc
xor
outsb
dec
mov
or
in
xor
jnp
dec
sbb
inc
imul
ja
lret
mov
mov
lock
add
push
push
scas
jmp
repnz
mov
add
cmp
ss
pop
in
fnsave
mov
or
call
das
mov
cwtl
inc
outsb
into
push
pop
xor
pop
movsl
out
cmp
in
aad
insl
insb
push
jb
imul
sbb
nop
rcr
movsl
iret
add
and
xchg
std
xchg
dec
cmc
addr16
stos
xchg
jecxz
stc
push
jmp
mov
dec
dec
or
enter
mov
jnp
xchg
aaa
outsl
out
imul
adc
dec
adc
in
rorl
ds
mov
rclb
pop
sub
jno
mov
subb
maskmovq
imull
or
mov
mov
jmp
int
sbb
andl
push
push
iret
testl
jbe
cmp
mov
out
sbb
mov
je
dec
test
sti
mov
pop
jg
and
aam
add
mov
divb
aas
push
mov
fists
nop
sbb
dec
in
mov
jmp
shrb
push
loopne
push
popl
pop
fildl
inc
js
cs
shlb
bound
and
adc
xchg
loopne
jp
aas
or
lahf
decl
ja
imul
cmpl
push
pop
mov
insl
push
dec
lock
data16
adc
jp
or
push
movsl
pusha
inc
mov
lds
mov
int3
dec
es
out
xor
add
int
lret
in
shl
pop
add
fisttpll
dec
jne
call
mov
xor
imul
movsl
xor
dec
icebp
push
push
xchg
loop
into
sub
push
push
pop
cli
es
data16
inc
pop
clc
std
dec
jp
sbb
mov
pop
shlb
push
push
xor
mov
cmp
iret
add
pop
jecxz
js
jo
push
add
sarb
repz
xchg
loope
push
adc
sarb
push
dec
outsl
mov
dec
insl
push
xor
sarb
fs
test
sub
jl
push
movsb
add
pop
xor
loop
std
mov
insb
mov
bound
add
cltd
test
add
xor
sbb
lock
xchg
mov
cmpsl
add
cmp
test
inc
xor
jne
fs
sub
add
push
sbb
add
fadds
xchg
xchg
xlat
mov
xchg
aad
sub
loop
adc
pop
push
js
shrl
jnp
scas
jp
popa
push
add
lods
mov
pop
dec
sbb
mov
add
dec
pushf
inc
push
ja
dec
frstor
nop
push
stos
mov
mov
xchg
xchg
js
fbld
push
cmp
add
add
pop
xchg
incb
stos
jle
enter
add
sbb
stc
cmc
aad
add
fildl
cmp
push
inc
rolb
xor
in
pop
add
lock
push
stos
enter
pushl
loopne
sub
dec
jge
fidivrl
ss
ret
add
dec
subb
mov
pop
push
mov
push
xchg
mov
icebp
movsb
xchg
mov
add
cmp
sbb
dec
pmulhw
push
pop
jmp
add
xchg
add
cmp
adc
mov
xchg
std
dec
shrl
mov
jb
pop
and
out
out
mov
ret
jo
adc
inc
add
xchg
pop
jns
cmpsb
add
cmp
adc
out
or
inc
adc
loope
enter
fbld
xor
dec
lock
rcrl
fs
stos
pop
mov
in
pusha
and
dec
in
cwtl
pop
out
lods
fsubl
out
es
fldcw
loopne
aad
pop
add
in
lock
xchg
cmp
lahf
pop
push
mov
ds
add
xchg
inc
push
add
jg
mov
into
add
repnz
popf
inc
test
les
sbb
sahf
xor
js
enter
fists
shl
pop
add
bound
sub
icebp
arpl
and
or
add
fs
cmc
add
mov
fldl
sarl
ror
xchg
int3
lea
sub
sarl
loop
sbb
or
mov
out
jmp
cmc
add
aaa
fwait
aas
add
ret
dec
insl
cli
test
nop
inc
in
insb
loop
cmp
out
jno
pop
jns
push
insl
add
icebp
sub
ja
adc
sahf
rdpmc
add
repnz
repz
cmpsb
mov
xchg
push
add
lcall
mov
dec
int
mov
add
lds
mov
mov
aad
mov
enter
insb
mov
pop
loope
insl
cmpb
or
dec
repnz
add
daa
rorb
xchg
pop
and
inc
xchg
iret
pop
dec
push
aam
jns
pusha
in
dec
adc
ret
sub
imul
out
sti
xchg
stc
pop
fistpll
or
mov
pop
dec
and
fiaddl
add
sub
cmp
xchg
mov
mov
out
jnp
pop
adc
add
sub
aad
add
xchg
push
push
fidivrs
cmp
cmc
dec
movmskps
rcl
iret
mov
jns
or
add
adc
sub
add
cwtl
mov
xchg
add
add
mov
jae
aas
sti
es
add
xor
and
into
pop
push
hlt
orb
clc
or
movsl
pop
xchg
repz
stc
xor
mov
mov
stc
lea
imul
es
js
dec
xchg
fcompl
mov
idivl
jns
add
xchg
mov
xchg
adc
add
in
pop
rcll
add
mov
mov
loop
fs
in
jb
and
inc
aam
arpl
add
adc
push
push
rolb
add
lods
shlb
xlat
repnz
ficompl
add
pop
add
leave
sub
int
std
mov
lahf
fcoms
in
or
sub
push
cmp
push
or
inc
dec
lret
cmp
jle
or
push
mov
dec
rorb
sub
sub
add
jp
sbb
dec
add
and
popa
jecxz
add
pop
repnz
icebp
stos
add
xlat
repz
popa
dec
jbe
pop
imul
orb
sarl
and
arpl
pop
inc
pushf
rcr
mov
dec
dec
or
popa
mov
aad
sub
imul
add
sub
in
and
add
call
mov
lea
jb
and
or
or
fwait
mov
test
aad
je
icebp
in
dec
cld
mov
or
cwtl
mov
xlat
mov
add
dec
rolb
sub
add
inc
xchg
mov
inc
cmp
rolb
out
into
data16
enter
mov
outsb
xchg
cmpsl
inc
sbb
aas
lock
inc
lret
nop
int3
pop
and
iret
mov
rorb
cs
loope
dec
andl
jmp
cmp
loopne
jno
add
pop
mov
inc
movsl
jg
and
push
lock
lret
das
add
or
iret
movsb
pop
rcrb
mov
cld
or
icebp
enter
push
xorl
inc
out
icebp
dec
add
inc
xchg
ret
jne
mov
lods
mov
adc
xchg
dec
and
xor
dec
sub
in
push
inc
shrl
jmp
negl
daa
add
sub
mov
scas
inc
push
dec
ljmp
add
add
pushf
aad
mov
add
xlat
mov
iret
int3
jne
clc
sbb
add
jmp
cmp
pop
mov
mov
lds
fcomps
ficoml
testl
xor
pop
dec
cld
jne
out
movsl
out
fs
sbb
shl
push
sbb
repnz
push
add
push
xchg
push
loopne
dec
inc
add
pop
or
dec
mov
xchg
jmp
sub
or
imul
test
popa
movsb
add
nop
shll
insb
lods
sbb
sbb
jp
push
jae
fldl
leave
mov
call
stos
js
test
pop
add
mov
xor
in
xlat
and
push
add
cmp
cmp
pop
cmp
add
sub
mov
push
loopne
loop
mov
icebp
xor
xchg
jp
popa
pop
pop
mov
imul
lret
clc
in
add
sub
jnp
dec
fldcw
adc
mov
xchg
add
pusha
out
les
hlt
jbe
xchg
dec
scas
mov
idivl
jecxz
mov
sub
adc
mov
dec
lcall
pop
pusha
incb
std
mov
xchg
dec
cli
mov
loope
aad
ror
dec
popa
and
mov
testl
out
inc
sbb
xor
jl
push
test
mov
aam
aam
push
pop
dec
sbbl
add
nop
sub
push
pop
lock
mov
pop
subb
adc
cmpb
xchg
pop
movsl
push
out
or
jmp
rcll
cmpsb
add
cltd
jns
add
mov
mulb
test
out
cmpsb
mov
iret
or
mov
cli
sub
fcmovnbe
inc
add
jne
mov
and
xchg
lcall
push
jns
push
add
mov
je
add
ss
pop
or
pop
mov
adc
add
dec
and
or
jnp
in
dec
mov
jecxz
fs
add
mov
mov
add
test
lds
into
jp
loopne
sti
ljmp
cmp
fcoms
sub
inc
fiaddl
rolb
xor
loope
movsl
lock
xor
cmp
xchg
jo
insl
pop
fdivrs
add
mov
push
xchg
into
jp
sub
pop
pop
aam
add
push
in
sbb
aas
dec
add
bound
pushf
push
mov
in
push
cmp
mov
add
xchg
in
add
out
add
mov
add
xchg
pop
sub
mov
sbb
adc
out
push
add
pop
push
in
test
push
and
jne
out
xchg
push
add
jle
leave
movzwl
add
dec
fbstp
push
mov
jo
imul
fadds
cmp
jne
pop
stos
sbb
clc
sub
xor
subb
lock
xor
loop
cmp
out
sti
popf
dec
in
clc
push
inc
pop
xlat
mov
movsl
jo
dec
jbe
je
test
rcr
push
in
add
rcl
add
stos
icebp
adc
js
sub
dec
pop
inc
sub
je
inc
xchg
enter
scas
fs
add
mov
fiadds
or
dec
into
mov
push
addr16
stos
adc
xlat
popf
add
mov
es
stc
jne
cmpsb
inc
pop
lahf
scas
enter
pop
mov
cmc
das
dec
add
das
push
fsubrs
in
push
leave
fcmovne
scas
adc
add
push
cmp
xchg
pop
imul
xchg
js
add
inc
push
and
pushf
aaa
lds
mov
shlb
sbb
lret
or
sbb
mov
je
movsl
rcll
adc
loop
das
and
pop
pop
sub
mov
lods
faddl
lahf
shl
add
rclb
aad
add
jecxz
jp,pn
cmp
jae
push
je
and
xchg
inc
sub
adc
sahf
jb
or
sbb
out
idivl
add
popa
imul
jbe
jno
andb
sbb
leave
aaa
insb
cld
enter
out
cmp
lds
in
add
sbb
dec
rcrl
pop
sub
push
xlat
sti
mov
mov
add
dec
mov
add
mov
in
add
mov
jnp
insl
cmp
leave
aam
lret
sbb
xchg
dec
inc
outsb
loop
xlat
cmp
mov
push
add
or
shlb
test
repnz
pop
lds
xchg
add
dec
dec
xchg
mov
jmp
shll
les
xchg
mov
iret
push
mov
rcr
pop
add
jnp
jle
outsl
jae
inc
out
jp
sbb
inc
or
orl
stos
les
pop
gs
shll
mov
ja
cltd
adc
fs
adc
add
dec
in
test
icebp
fisubs
jmp
mov
cli
aad
scas
std
push
mov
jno
mov
mov
mov
jge
mov
fs
xchg
pop
repnz
fcmovbe
lcall
xorl
sub
mov
add
and
jmp
pop
in
dec
push
aas
call
fisubrs
test
xorl
insb
adc
sahf
mov
add
sub
mov
add
cmp
cmc
add
and
sbb
and
hlt
cmpsl
mov
or
add
adc
fs
insb
jl
and
es
fsubrl
adc
push
mov
cmp
fists
sub
nop
mov
push
xchg
push
sbb
add
rcll
sbb
cmp
std
push
test
in
add
lods
pop
fiaddl
rorb
iret
scas
les
fldl
push
aam
loope
xlat
scas
or
mov
cmp
pop
stc
imul
loopne
cs
mov
adc
push
sub
mov
mov
popa
and
outsl
or
add
bswap
mov
loope
testl
jg
push
fisttpl
out
add
add
cmp
popa
dec
dec
inc
orb
sti
sub
mov
ljmp
sbb
xchg
cmc
mov
cld
push
sub
add
in
push
hlt
push
add
adc
pop
scas
mov
imul
push
add
fs
sti
jb
mov
test
xor
cmp
mov
popa
push
jne
loope
movsl
jae
ret
xchg
loope
jb
add
fisubs
add
mov
add
cmpsb
and
xlat
cwtl
dec
jecxz
push
jge
jmp
fs
pop
dec
stos
mov
in
popa
lldt
arpl
push
mov
add
mov
push
add
push
xor
fpatan
mov
and
out
hlt
pop
mov
popf
test
mov
movsb
mov
fildl
xor
jg
sbb
pop
pop
mov
cmp
stc
push
test
pop
sub
out
sub
adc
aad
push
inc
xor
xor
div
dec
js
jns
xchg
repz
pop
fisubs
mov
push
int
mov
popf
mov
repz
ret
pop
sbb
mov
or
repnz
popa
call
xlat
std
sub
jne
cmc
mov
add
pusha
pop
mov
fadds
and
inc
push
test
fldenv
mov
add
stos
add
push
jmp
shll
add
int
movsl
cltd
sub
cmp
dec
dec
sub
pop
outsl
pop
sbb
neg
push
pop
add
add
jnp
ret
cwtl
dec
mov
fiaddl
xlat
iret
repnz
aam
addr16
xchg
test
add
mov
mov
imul
pusha
out
cmp
mov
fsubs
jb
add
and
mov
lods
adc
fs
test
adc
cmpsl
daa
lods
dec
add
subl
xor
mov
rorl
in
popf
fcoml
add
xchg
cmpsl
fistl
add
loope
cmp
adc
rcl
jb
out
cmp
shrb
cmc
ljmp
jg
xor
fxch
fisubrs
fdivl
out
xor
lock
arpl
sbb
push
mov
incb
xor
sbb
sub
scas
add
xor
iret
xor
inc
sbb
push
jmp
xchg
push
lcall
fucomp
xchg
jp
cli
daa
xchg
fnstcw
pop
xlat
js
arpl
and
push
jp
mov
popa
and
loope
ds
and
jmp
mov
ret
negl
leave
add
mov
add
pop
loopne
movsb
add
out
iret
dec
sar
xchg
fwait
mov
jns
cmc
fisubl
les
pop
sbb
push
jno
mov
dec
cmp
mov
loope
loopne
mov
icebp
xor
aad
xor
rcll
mov
xchg
sbb
js
icebp
xor
mov
adc
push
xchg
aam
pop
sbb
mov
into
nop
cwtl
mov
sahf
jp
lock
lahf
or
or
fisubrs
cmp
in
add
lret
inc
or
xchg
or
addr16
lods
push
sar
lret
jge
mov
xchg
pop
push
ljmp
or
mov
es
stc
lret
loop
loopne
cmp
data16
fstpt
dec
xchg
sbb
rorl
dec
push
outsb
gs
ljmp
pop
pop
gs
mov
sbb
add
pop
pushf
lahf
push
cmpsl
out
fisubs
fwait
push
sbb
or
and
frstor
mov
aad
sbb
rcr
and
or
daa
and
xchg
cmpsl
mov
lret
sbb
cmpsl
and
sbb
divl
es
scas
xlat
fbld
testl
mov
movsb
or
bound
mov
add
xlat
push
xlat
bound
and
pushf
sbb
cmpsl
fidivrs
push
pop
adc
and
adc
xlat
sub
mov
dec
pop
pop
or
aas
xchg
push
push
popl
adc
lret
pop
or
rorl
fs
push
jl
mov
fwait
nop
mov
lcall
cmp
and
sbb
or
scas
mov
in
ljmp
dec
mov
add
and
or
sti
mov
cmp
fcmovu
push
stos
movsl
insb
inc
ret
mov
loopne
mov
push
dec
mov
dec
mov
pop
dec
in
out
ret
hlt
mov
push
into
pop
pushf
in
int
and
xchg
mov
mov
ret
fists
mov
sub
mov
inc
mov
imul
or
lea
out
lret
ret
add
test
inc
outsl
loope
and
ret
push
call
cmc
cmp
mov
ljmp
incb
cmp
sbb
js
arpl
in
sbbb
lret
mov
gs
add
in
addr16
repz
jle
xor
loop
inc
pop
orl
xchg
mov
fstl
dec
ss
inc
lcall
lds
jmp
pop
and
mov
orb
stos
add
dec
mov
int
mov
jbe
cwtl
lahf
xor
test
out
mov
mov
sbb
inc
push
lret
bound
or
lahf
loope
fmuls
subl
jecxz
sbb
popa
adc
cmp
fimuls
aaa
and
fisubl
mov
add
cmp
jge
ja
mov
push
idivb
add
cmpsl
add
andl
pop
es
loop
addr16
shll
cmp
divb
ficoml
call
in
enter
sbb
push
scas
dec
dec
add
add
adc
add
popf
arpl
add
and
jmp
in
mov
jl
add
pop
int
test
call
mov
aam
inc
jbe
jl
inc
test
jecxz
dec
xchg
add
inc
mov
outsl
mov
add
es
sub
pop
push
pop
and
xchg
push
ret
scas
inc
dec
mov
cli
dec
arpl
add
pop
imul
xchg
jmp
xor
cmp
je
jo
aaa
fnsave
sbb
jb
mov
inc
push
and
popf
pop
add
jns
repnz
ss
enter
enter
stos
xor
clc
add
mov
pusha
sub
or
xor
sbb
cmp
leave
add
call
pop
pop
iret
mov
pop
or
dec
lea
push
ljmp
mov
pop
cmp
pop
jnp
outsl
ret
add
in
mov
xor
mov
xchg
jge
mov
sbb
out
daa
in
popf
push
nop
aam
sub
fs
sbb
xchg
popa
push
dec
pop
rcr
pop
out
pop
jae
mov
idivl
fs
xlat
lret
lods
xchg
out
aas
outsb
xchg
mov
lods
dec
lcall
movsl
jmp
pop
stos
push
inc
outsb
cld
jnp
add
repnz
ficoms
jbe
lods
or
sbb
cmp
cmp
push
notb
fldt
inc
lret
add
popa
xorl
stos
adc
es
out
jmp
add
lret
out
push
pop
mov
aas
test
repnz
int
add
sbb
fs
dec
lcall
sbb
sbbb
adc
cmpsl
mov
aam
add
cmp
call
hlt
or
mov
push
test
rcll
imul
lret
test
testb
xchg
jne
or
sub
jns
xlat
pop
and
inc
ret
adc
mov
dec
mov
loope
adc
cs
popa
mov
andl
sub
pop
mov
pushf
push
xchg
addr16
insb
pop
insb
jno
mov
xchg
ljmp
add
add
push
sub
mov
pop
inc
jmp
std
jmp
cmp
xchg
testb
cmp
add
or
jnp
inc
jg
add
mov
jl
and
fsubrs
mov
inc
das
mov
adc
scas
inc
and
and
scas
add
pop
loop
pop
jl
mov
cmp
or
cmc
ds
xor
push
in
lea
rep
insb
dec
inc
sub
aam
es
gs
sub
stos
out
sub
into
cmp
data16
nopl
or
dec
jne
fidivs
test
jmp
icebp
repnz
imul
sbb
mov
add
xchg
outsb
push
icebp
ja
mov
inc
cmp
mov
fnstcw
movsb
push
pop
xor
dec
adc
inc
mov
mov
push
enter
pop
fsubrl
sbb
xor
push
jge
adc
pop
jo
out
cmc
sbb
shrl
dec
add
pop
fildll
add
adc
shl
dec
stos
inc
pop
test
test
sbb
outsl
mov
aad
das
sub
pop
xchg
out
enter
mov
inc
aas
add
mov
xor
dec
loopne
imul
fistpl
sbb
imul
cmp
mov
mov
in
mov
add
mov
scas
xchg
jnp
cli
mov
stos
test
out
shll
mov
popf
xor
fbstp
ljmp
sahf
add
pop
call
test
out
into
sub
jmp
cmp
pop
add
push
lret
in
push
or
and
lret
jae
mov
jb
fbld
or
jno
add
insl
mov
mov
iret
out
xchg
push
mov
imul
scas
mov
add
add
push
xor
add
outsl
pop
inc
ss
xor
sub
xchg
rcr
add
mov
xlat
imul
into
ds
mov
sbb
mov
add
xchg
pop
ret
rcl
add
push
pop
imul
mov
icebp
cwtl
add
fnsave
sbb
lds
sub
fistpl
inc
test
mov
xlat
pop
cs
lcall
xor
pop
cmp
dec
dec
repnz
fucomi
xor
mov
loopne
rep
cmp
cmp
mov
in
mov
adc
add
outsb
cli
stc
add
add
inc
inc
dec
cmpsb
sbb
sub
sub
icebp
imul
mov
pop
sub
mov
sbb
es
out
inc
push
roll
stos
aad
in
xor
jne
or
add
xor
lahf
out
mov
iret
cli
and
ficompl
sbb
into
xlat
xrelease
sub
cmp
xlat
sub
das
int
add
xchg
mov
mov
lea
xor
in
jno
test
mov
xchg
sbb
mov
add
outsb
subb
ds
fcomps
popa
mov
test
into
sbb
jl
lcall
fwait
mov
out
mov
fldenv
aam
test
scas
sub
sbb
ret
xor
add
hlt
mov
out
push
notl
into
cmp
inc
adc
iret
xchg
xor
test
dec
sar
adc
or
in
inc
mov
push
fbstp
fldenv
push
std
lock
adcb
inc
adc
aam
cwtl
cmp
cmp
and
std
xchg
pop
insb
add
dec
push
arpl
pop
mov
cmp
add
ljmp
dec
or
cmp
add
scas
add
add
loopne
and
cmpsl
inc
jge
add
sub
mov
mov
push
mov
adc
iret
inc
push
lret
test
fldcw
add
dec
fxch
enter
dec
addl
dec
push
add
pushf
stos
mov
sub
shl
dec
lock
fildl
mov
popa
jmp
test
out
sbbl
sub
mov
bound
jns
push
and
mov
jg
test
cmp
cmp
mov
lea
sbb
sub
stos
sub
adc
faddp
dec
gs
mov
add
pshufw
daa
and
jecxz
adc
rcll
sbb
dec
dec
and
ret
or
push
insb
xor
loope
push
jecxz
pop
push
xchg
sahf
pop
xor
inc
aam
filds
in
ds
out
outsb
sbb
fcoml
mov
sub
negb
add
jmp
rorb
add
fs
xchg
mov
in
lahf
out
sahf
scas
cli
push
mov
pop
fisttps
or
fcmovnb
into
mov
iret
lds
stc
jge,pt
mov
add
loopne
sub
fdivr
and
adc
mov
cli
dec
je
add
push
out
loope
aam
cltd
test
mov
push
clc
dec
add
arpl
inc
add
push
lock
and
sbb
faddl
dec
dec
ds
add
push
paddsb
mov
cld
jb
aam
testb
mov
and
jl
es
push
pop
in
jecxz
iret
popa
jb
ffree
lret
mulb
pop
sbb
lcall
inc
pop
and
mov
inc
sbb
push
ss
aas
icebp
dec
loope
push
lock
lods
filds
pop
lahf
popf
sbb
xchg
mov
dec
mov
aam
scas
mov
cmp
iret
sub
inc
adc
mov
or
insb
call
xor
scas
xorl
outsl
jle
loope
sub
cmpsb
lret
add
xchg
mov
fisubrs
aaa
jns
popf
repnz
loope
dec
jnp
pop
out
test
dec
sub
xchg
pop
in
and
bswap
mov
ljmp
loope
hlt
lcall
jmp
test
nop
fs
in
add
loopne
in
xor
jle
inc
push
pop
fnsave
leave
cltd
out
outsl
add
lret
sbbl
les
ss
lods
sub
in
popf
enter
fists
int
lea
push
movsb
and
adc
sub
mov
in
mov
pop
sbb
xchg
mov
adc
testl
sbb
rol
pop
mov
aaa
loopne
add
xchg
lahf
jmp
xor
or
push
jp
add
popa
fcmovbe
add
inc
ret
imul
jb
xchg
insb
add
mov
or
imul
test
cmc
cmpsb
jb
dec
jge
aam
out
mov
mov
cltd
mov
add
stos
mov
popa
add
dec
or
cmpsb
cmp
out
sub
shlb
xor
fadds
add
inc
mov
rorb
lahf
cs
jae
push
rol
add
popa
out
jae
add
into
shlb
mov
daa
bound
add
popf
lds
add
cmp
pop
daa
adc
mov
imulb
xchg
jb
adc
mov
adc
mov
js
jb
decb
test
into
and
xor
adc
cld
mov
mov
or
jns
ja
and
int
int3
sub
dec
gs
mov
and
rorb
imul
mov
ja
cltd
or
sbb
jmp
add
pop
in
push
and
in
add
xor
push
iret
in
out
dec
lds
mov
ljmp
or
add
or
scas
or
ja
int3
and
mov
pop
inc
adc
sbb
scas
jmp
mov
cmpsb
pusha
call
ret
scas
or
mov
mov
sahf
add
lahf
pop
sbbb
cwtl
scas
and
pusha
daa
jg
push
aas
test
mov
or
addb
or
add
dec
dec
jge
add
out
inc
rep
jae
insb
aas
cmpsl
xchg
rorb
ret
dec
sbb
loope
pushf
in
shl
cmp
movups
jo
or
out
jbe
les
jecxz
mov
add
add
and
enter
cmc
push
add
push
or
pop
xor
stos
mul
insb
dec
sarb
mov
outsl
enter
rolb
and
out
xorb
sub
pop
pop
fwait
mov
mov
neg
in
inc
mov
cld
jge
popa
add
pop
or
cmp
add
mov
enter
jne
jecxz
cmp
vpsubsw
add
cmp
xor
test
add
dec
sti
sbb
int3
xor
shlb
fs
xor
outsl
mov
push
cmp
repnz
pop
lret
xorl
or
jmp
shr
add
pop
mov
xchg
jecxz
and
cwtl
rcr
loope
xor
push
fisubrl
andl
pushf
mov
adcb
xlat
dec
inc
add
repz
popa
mov
js
inc
add
sub
dec
mov
in
mov
sahf
xor
xchg
loop
jecxz
push
les
ret
or
dec
jp
sete
stos
xchg
push
sbb
inc
in
mov
dec
adc
jns
push
aaa
insl
fldl
ret
decl
lea
unpckhps
test
pop
incb
and
shrl
cwtl
pop
or
or
repz
dec
mov
jl
mov
dec
addr16
push
popa
sbb
mov
hlt
inc
sbb
or
jp
cmpsb
daa
push
ret
ret
arpl
add
inc
in
repz
lods
or
pop
pop
sti
pushf
mov
dec
rorl
dec
dec
add
lret
rorb
mov
dec
pop
pop
bound
mov
pop
and
loopne
xor
mov
lcall
int
cwtl
push
out
out
scas
mov
or
xor
mov
sbbb
or
and
icebp
pop
xchg
pushf
sbb
arpl
pop
mov
loopne
out
push
mov
mov
or
stc
add
mov
in
pop
mov
lret
mov
fs
or
stos
push
rorl
out
and
push
popf
loope
push
dec
out
or
daa
xor
pop
dec
cmp
mov
and
sbb
out
sbb
sbb
paddsw
xchg
out
mov
add
or
mov
and
push
sbb
leave
push
int
add
pop
sbb
rcrl
add
xchg
mov
cwtl
add
xchg
xchg
lcall
push
mov
lea
jmp
xlat
sbb
jl
out
popf
cltd
jbe
sbb
ljmp
pushf
repnz
lds
clc
adc
push
ret
in
xchg
lock
fistl
repnz
mov
pusha
and
jno
or
push
in
in
das
mov
or
fld
pop
push
push
iret
fisubl
jecxz
orl
arpl
mov
movb
bswap
push
push
lds
fisubs
and
sbb
mov
frstor
xchg
mov
fistpl
sahf
push
sbb
pusha
and
xchg
loopne
sbb
roll
mov
mov
xchg
sti
int
xor
test
jno
out
test
inc
roll
mov
adc
mov
push
cmp
mov
sbb
xchg
inc
mov
jl
jns
jae
ret
ret
jge
lahf
ficompl
or
push
pop
mov
stos
shr
adc
mov
fwait
push
call
or
stos
dec
and
repz
int
jb
xchg
add
push
stos
test
scas
adc
ds
xor
cmpsb
sbb
dec
add
je
pop
sub
xor
add
xor
inc
mov
push
xchg
fnstcw
mov
lahf
xor
out
lea
es
sub
mov
cmp
jne
movsl
add
adcl
imul
mov
in
sub
add
cmpsb
add
sbb
inc
adc
pop
out
and
ja
iret
das
xchg
pusha
add
add
sub
insb
call
inc
xor
jmp
push
pushf
push
shll
fsubrs
cmp
mov
mov
inc
pop
insb
nop
mov
xchg
fwait
add
jno
xchg
rcrb
sub
mov
add
mov
mov
jnp
push
sbb
sub
aad
popa
lods
push
aas
cmp
sti
rcll
push
pop
insb
clc
push
mov
xchg
sbb
add
lock
cltd
bound
push
sbb
xchg
jno
ret
aad
xor
rorl
pop
jl
std
pop
or
add
dec
scas
or
pop
push
in
imull
lret
inc
dec
shlb
insl
add
and
xchg
and
xor
xchg
out
icebp
pop
dec
sbb
shll
dec
jl
mov
sti
in
add
mov
inc
cmpsb
xchg
int
mov
mov
and
negb
cmpsl
jns
scas
mov
movsl
ds
aam
psraw
rcr
loopne
xlat
jg
mov
dec
arpl
pop
in
mov
js
jg
dec
inc
jno
or
out
add
fwait
movsl
mov
inc
push
hlt
test
mov
xorb
add
loope
mov
lods
mov
add
xorb
out
mov
add
xlat
sub
jp
dec
inc
notl
push
rcrl
cs
adc
rcll
repz
adc
adc
test
gs
cmp
jbe
pop
lcall
or
or
push
lods
cmc
mov
or
ret
out
push
sub
aam
sbb
fmull
icebp
mov
pop
dec
outsl
pop
mov
fwait
mov
lods
fidivrl
jne
ja
push
and
and
sbb
add
lret
or
mov
add
sti
add
push
rol
xchg
push
pushf
out
cmp
loop
incl
es
and
repnz
iret
pop
test
and
sti
add
insl
roll
xchg
jge
add
xor
pop
enter
jecxz
mov
lret
inc
test
inc
sub
out
fisubrs
add
xchg
pop
ss
stos
sbb
mov
aas
push
dec
mov
fwait
out
add
pop
and
movsb
cmp
add
rclb
cltd
and
fs
jb
fnstcw
dec
sbb
cwtl
xlat
mov
push
int3
add
and
pop
pop
sub
pop
adc
pop
push
sbb
scas
inc
xor
pop
sbb
inc
loopne
ffree
sub
mov
dec
into
adc
cld
mov
out
cmp
cmp
jl
and
aaa
lcall
outsl
or
and
cs
testl
or
je
mov
inc
call
repz
int
shrb
sbb
loope
scas
jge
lret
in
jmp
scas
mov
push
enter
adc
mov
inc
mov
add
jge
push
mov
add
sub
inc
adc
add
insl
add
mov
or
into
lret
cld
test
mov
subl
xchg
mov
mov
sub
add
popa
iret
inc
jl
push
loop
sbb
push
daa
mov
add
pop
sbb
cmp
xor
push
pusha
call
pop
xor
pop
mov
call
push
jecxz
dec
inc
shll
add
adc
mov
sub
shlb
fwait
add
adc
sub
mov
jae
xor
dec
cld
push
jge
jmp
mov
mov
xor
in
cmp
sub
xchg
int
push
sbb
push
in
and
inc
and
ss
pop
fiadds
aaa
sbb
push
lret
sub
add
mov
aas
jb
pcmpgtb
dec
inc
push
sub
call
fisttps
and
dec
dec
push
dec
push
inc
clc
inc
xor
aas
fnsave
loope
add
divb
scas
inc
sub
shll
mov
push
out
jo
fsubrl
dec
lds
es
mov
sahf
stos
sub
jg
cmp
aam
and
js
je
cltd
xor
jle
cmpsb
jno
adc
data16
sub
mov
inc
and
loope
xchg
dec
mov
xor
pop
sub
lea
fidivs
aam
stc
cmpsl
pop
icebp
sbb
fsubl
dec
stc
enter
sub
sbb
cli
addr16
pusha
imul
xor
push
mov
dec
lods
lea
jge
dec
or
mov
frstor
scas
dec
mov
mov
cltd
movsb
mov
xor
fldcw
push
pop
dec
cmc
pop
daa
fildll
test
cli
das
jb
jns
sub
mov
popa
xor
std
pop
pusha
rcrl
sub
lock
pop
dec
test
inc
outsb
fldenv
dec
xchg
sbb
out
ret
ret
bound
jle
sub
pop
enter
into
popf
cmp
and
and
mov
rcrl
push
add
cmpsl
sbb
push
mov
sbb
inc
inc
test
out
xchg
pop
add
mov
shlb
fsubs
dec
cmp
inc
mov
sub
leave
outsl
and
pusha
call
or
in
adc
xchg
push
sbb
insb
testl
lea
mov
pusha
imul
or
cmc
push
lods
push
data16
sti
xor
les
add
add
push
pcmpgtw
cmp
test
dec
xchg
jge
aad
jnp
std
sub
xchg
shl
cmp
in
and
jge
xlat
cmp
cwtl
pop
rclb
push
je
dec
cli
mov
lcall
jb
jns
out
pop
pop
mov
mov
dec
dec
inc
pusha
mov
push
pop
lods
xlat
stos
push
aaa
sahf
clc
add
push
push
ljmp
inc
dec
popa
add
or
dec
rcrb
cmp
cmp
push
add
xor
jl
sub
mov
bound
mov
popa
add
shr
sub
dec
inc
test
je
pusha
das
inc
xor
add
mov
iret
popa
repz
loopne
inc
inc
fidivrs
jns
in
push
push
les
js
mov
mov
push
lods
or
sbb
mov
lcall
je
incb
mov
mov
mov
jne
jl
xchg
mov
and
sbb
daa
fiadds
or
jle
out
inc
mov
adc
xchg
pop
inc
inc
and
dec
stc
decl
dec
ss
push
cmp
in
mov
daa
movsl
popf
and
test
cmp
push
std
sbb
push
daa
mov
into
cmp
stos
cli
lock
or
dec
jns
dec
aad
pop
pop
push
lea
fistpl
decl
mov
adcb
push
loop
push
fisubs
pop
loopne
lahf
incb
jns
leave
push
cmp
sbb
push
push
fbld
xor
fs
and
push
xchg
pop
add
pop
pop
mov
in
add
pop
loopne
fs
insl
push
add
cld
sub
add
stc
and
mov
add
incl
fdivrs
mov
sub
add
mov
popa
cmpsb
insb
test
and
and
mov
mov
js
pop
adc
mov
das
stos
insb
or
cli
inc
xor
cmp
xchg
fsubl
loop
iret
mov
pusha
dec
cmc
idivl
cltd
in
add
rorl
das
stos
aas
in
popa
add
adcb
jg
hlt
call
dec
sub
lods
ss
xchg
pop
icebp
pop
sbb
or
xchg
sub
fbstp
mov
test
fildl
loope
cmpsb
mov
add
cmp
ret
out
mov
sub
fildll
addb
cs
xchg
inc
jle
mov
shl
out
in
xor
icebp
sbb
std
push
enter
and
cmp
xor
out
test
rorl
in
sub
xchg
enter
and
loope
xor
add
popa
pop
out
add
insb
mov
movd
xchg
icebp
fists
es
sbb
jmp
mov
or
add
outsb
stos
and
mov
adc
pop
ret
push
nop
add
dec
mov
jnp
clc
hlt
add
into
arpl
mov
dec
dec
mov
push
ja
jmp
add
pusha
sub
dec
push
cmc
aam
cli
aas
sbb
sbb
iret
cmp
imul
test
sub
cmp
ffreep
adc
pop
add
shll
xorb
dec
ret
aas
jb
cmp
add
add
sbb
out
mov
or
jg
fisubs
cwtl
xchg
add
daa
std
faddl
add
outsl
shrb
int
jl
insl
add
sbb
jp
mov
xor
mov
into
les
push
push
std
lods
jns
xor
mov
call
jnp
test
dec
stos
lock
pop
mov
out
aas
push
fwait
or
or
jne
test
mov
ss
cwtl
dec
inc
iret
stos
pmuludq
cmp
das
test
cmp
xlat
or
jecxz
popl
or
inc
push
cli
arpl
rorl
push
or
js
mov
int
lret
out
push
rclb
inc
std
xor
and
and
fimuls
mov
push
test
adc
dec
push
inc
add
dec
addb
inc
add
sub
adc
add
sbb
in
add
and
xchg
mov
add
jae
ja
pop
pop
add
cmp
add
xor
and
arpl
push
loopne
mov
lock
xor
ds
add
std
inc
lret
dec
popf
add
call
shlb
and
push
inc
sbb
iret
mov
sub
pop
aad
push
xchg
dec
jo
cmpxchg
mov
xor
push
cwtl
imul
sub
rolb
push
sub
jecxz
pusha
fimull
dec
inc
lods
in
in
cmp
sub
jge
add
sbb
lods
add
pop
jae
push
clc
pop
mov
add
inc
test
xchg
or
xchg
pop
cmpsb
leave
pop
push
push
negl
sub
adc
out
pop
inc
push
push
mov
stos
fdivr
ror
out
push
and
add
in
pop
mov
sbb
cmp
dec
mov
push
jno
scas
loopne
cmp
push
cwtl
ja
push
adc
mov
inc
sub
out
in
je
mov
sub
cmp
mov
sahf
pusha
xbegin
nop
imul
inc
mov
inc
jge
ss
mov
aas
mov
add
pop
lret
xorb
mov
hlt
out
outsb
add
push
mov
dec
shrl
pop
ds
jmp
aam
add
test
mov
insb
stc
pop
dec
or
pop
loopne
and
mov
jmp
lahf
aam
mov
iret
adc
pop
and
add
repnz
fcmovnbe
xor
mov
jbe
fbld
sub
outsb
aad
mov
pop
in
loope
jl
iret
sbb
cli
or
sub
add
and
lcall
push
and
add
repnz
add
mov
stc
add
rorb
inc
xchg
cs
arpl
dec
sarb
mov
inc
cmp
push
scas
add
pop
xchg
and
mov
adc
pop
xchg
add
inc
icebp
scas
jae
in
sub
mov
and
das
mov
and
pushf
jns,pt
insl
sbb
sub
dec
fcmove
inc
add
mov
add
fstps
adc
or
xor
add
test
push
cmpb
jnp
mov
dec
and
dec
dec
ds
icebp
and
mov
mov
rcrb
xor
lock
repz
idivb
loopne
dec
inc
add
sbb
xchg
loop
outsl
dec
mov
fs
int
adc
xor
fbld
sub
sub
loop
lock
inc
sub
btc
push
xchg
enter
icebp
add
mov
lods
divl
popf
adc
fprem
mov
mov
in
scas
or
sbb
mov
or
mov
lods
cmp
nop
and
rolb
xor
shrl
divb
jb
add
pop
sarb
js
xor
loop
std
in
pushf
out
bound
add
test
repnz
or
in
aam
movsl
push
dec
sbb
jl
pop
push
out
dec
mov
nop
lea
rcl
adc
push
mov
insl
lahf
ret
cmp
jo
sar
movsb
dec
dec
mov
mov
dec
flds
add
mov
mov
mov
xchg
stc
testb
into
mov
inc
fists
pop
pop
dec
fmuls
outsl
into
cmc
pop
inc
jecxz
cwtl
mov
inc
dec
jmp
and
or
mov
inc
ud2
std
aad
fbld
sbb
cmpsl
pop
cs
lock
mov
push
pop
nop
sbb
outsl
sub
inc
xor
imull
shr
lahf
push
arpl
icebp
add
popa
or
add
fsubrl
mov
movb
cmp
pop
sub
movsl
imul
mov
mov
aam
xchg
xor
jne
rcrb
fdivl
dec
inc
je
mov
outsb
mov
jae
pop
das
add
test
and
adc
add
loope
adc
add
jo
mov
xor
repz
popa
repnz
add
mov
push
mov
leave
inc
js
cltd
push
out
in
dec
jmp
mov
mov
jno
iret
sbb
push
jns
push
add
pushf
cmp
leave
mov
rcrl
stos
and
in
mov
or
xor
ret
imul
add
cmpb
data16
lcall
pop
lret
cli
mov
adc
aaa
inc
add
pusha
or
add
jl
adc
loopne
mov
jle
xchg
mov
sub
cmp
xchg
popf
sbb
mov
xchg
mov
pop
insb
inc
xorl
fwait
insl
mov
mov
sti
cmpl
sbb
inc
inc
push
cmp
push
or
test
cld
jmp
dec
dec
adc
pop
outsb
inc
iret
adc
loopne
inc
xor
mov
faddl
movsb
add
mov
jl
les
in
pop
out
pop
rolb
mov
dec
das
dec
pmullw
and
cmc
cmc
clc
int3
mov
sbb
ret
dec
aaa
aam
xor
out
int
pop
inc
or
cmpsb
cmp
xor
data16
mov
cmp
imul
je
fsubrl
add
pop
inc
sti
jae
add
call
cmp
gs
sub
es
popf
lods
dec
enter
cltd
and
xchg
pop
mov
sub
mov
mov
mov
xchg
xor
sbb
adc
call
jmp
aas
je
add
sbb
add
mov
add
dec
insb
into
add
push
adc
mov
dec
mov
jmp
faddp
std
xlat
add
into
emms
nop
ret
pop
push
ds
dec
jmp
pop
push
sbb
fdiv
dec
xchg
and
add
mov
sub
pushl
cmc
cmp
daa
wrmsr
mov
fisubrl
popa
xchg
add
push
dec
add
sbb
mov
xor
imul
inc
cmp
rcrb
shl
cmp
mov
sahf
iret
mov
popa
fisttpl
xlat
push
mov
adc
scas
dec
jmp
dec
sub
fsubl
inc
sbb
mov
test
xchg
push
push
mov
add
negb
fidivs
pop
pop
into
and
dec
loop
push
xchg
lods
mov
lea
dec
int3
add
sbb
fildll
mov
sub
cmp
call
sub
mov
out
insb
push
mov
shlb
xchg
mov
insl
enter
cltd
and
add
gs
or
enter
test
xor
imul
mov
add
mov
jg
xchg
mov
je
pop
repz
mov
mov
iret
cli
lret
aam
rcl
pop
outsl
dec
dec
cmp
xchg
mov
imul
add
negb
dec
push
jl
inc
adc
inc
ds
aad
mov
mov
adcl
pop
lret
inc
les
mov
add
push
lods
add
mov
jmp
dec
push
ljmp
xlat
push
iret
pop
test
mov
mov
push
lods
enter
add
arpl
sahf
les
or
fldenv
fstpl
mov
movsb
sbb
sub
nop
pop
mov
sbb
iret
dec
lret
push
add
push
add
je
add
inc
ds
inc
mov
mov
and
fcomp
ret
lret
or
pop
pusha
jle
aam
add
movsl
or
cmpsl
fildll
int
inc
das
les
pusha
clc
test
outsl
lcall
test
sub
or
push
dec
pop
stos
add
push
repnz
shl
push
stc
mov
idivl
outsb
lods
inc
jl
mov
imul
mov
dec
dec
je
popa
jb
test
sub
mov
gs
or
and
mov
or
int3
lock
push
mov
js
imul
jl
repnz
ss
sub
jle
in
clc
ficoml
pop
push
adc
insb
jl
gs
and
cltd
inc
push
lret
xchg
and
ss
cmpsl
ret
mov
repnz
and
cwtl
mov
jge
xor
mov
sahf
orl
inc
jecxz
add
arpl
push
push
cwtl
sbb
and
adc
and
iret
out
dec
push
cwtl
test
lcall
orb
push
mov
jae
pushl
fsubrl
test
xor
jmp
inc
sbb
push
inc
add
mov
arpl
pushf
in
cmp
dec
push
inc
push
and
pop
les
loope
and
xlat
add
and
push
pusha
sbb
stos
fistl
data16
xchg
xlat
pop
or
add
fisubs
sbb
cs
and
test
xchg
or
inc
push
fmuls
xor
adc
fmuls
in
icebp
xchg
and
jne
int3
mov
imul
lock
insb
xor
inc
gs
jb
fbld
add
xorl
loope
add
scas
mov
loop,pt
pop
add
dec
les
xlat
iret
jnp
cld
lret
xchg
add
mov
in
jle
je
leave
xor
cltd
and
add
xchg
pop
bound
push
mov
sahf
mov
sub
js
mov
sub
outsl
dec
adc
pushf
and
xor
fisubrs
xchg
lcall
push
hlt
or
repz
pop
ret
adc
nop
rcl
add
fsubrl
xchg
and
repz
loope
pop
push
clc
fs
pop
das
dec
dec
pop
xor
xlat
xor
add
loopne,pn
jae
test
and
leave
jl
pop
test
mov
cvtps2pi
add
pushf
or
xor
jg
scas
lret
add
stos
dec
fs
sarl
push
in
int
jne
or
xor
cmp
es
stos
push
add
fwait
jnp
dec
xorb
push
cmp
icebp
ss
cmpsl
fldl
std
js
add
sub
loopne
jb
push
dec
cmpsb
xor
inc
lods
dec
icebp
or
test
je
jl
iret
sbb
enter
jmp
inc
inc
cmp
loopne
dec
xor
sbbl
sub
pop
sbb
clc
mov
sarl
and
mov
pop
out
cmp
adc
push
add
sbb
or
dec
mov
dec
xchg
push
enter
jnp
xchg
xchg
lea
push
sahf
pop
pop
adc
xlat
cmpb
mov
dec
rorb
jp
mov
ja
fidivs
sub
scas
and
loop
push
or
ret
scas
add
decl
mov
fstps
adc
mov
mov
sahf
lahf
push
jno
push
into
sbb
mov
inc
and
pop
xchg
out
loop
stos
xchg
cmp
xor
rorb
loopne
adc
jecxz
add
inc
in
mov
inc
pop
mov
add
dec
popa
outsb
dec
notb
or
xchg
sbb
jecxz
add
int
sub
stc
pop
sbb
loope
testb
fistl
popl
cli
add
xchg
add
js
shll
aaa
xor
mov
pop
push
push
jmp
push
sbb
cmp
mov
cmp
addl
sbb
aam
dec
lock
and
cmp
mov
xor
mov
jne
sbb
ret
jb
and
dec
pop
daa
pushf
inc
pushl
mov
imul
aaa
icebp
sub
push
jo
add
mov
xchg
test
pop
and
inc
pop
pop
add
test
jmp
push
xor
jnp
or
test
loopne
mov
adcl
add
xchg
inc
jnp
repnz
jno
push
cs
addr16
jns
pushf
loopne
xor
imul
push
mov
pop
pop
loope
clc
clc
sub
mov
nop
call
xchg
in
add
mov
stc
pop
pop
pop
imul
ja
fcmovbe
insl
add
scas
mov
pop
pushf
inc
jmp
jge
adc
xchg
xchg
push
cmp
inc
add
mov
aad
js
stos
in
dec
cmp
mov
jmp
std
push
stos
mov
movsb
add
loop
sahf
inc
in
add
add
xchg
mov
add
add
sbb
pop
cmp
or
add
jmp
xorb
xor
dec
filds
lods
ja
sbbl
jecxz
sub
repz
pop
mov
movsb
or
mov
iret
lret
sahf
inc
stos
mov
mov
jne
cmp
shll
sbb
or
inc
aad
add
mov
cmc
jns
and
cmpsb
sub
add
xor
ret
nop
gs
iret
pusha
sub
leave
aaa
clc
shlb
add
mov
push
xchg
rdpmc
les
lret
shlb
add
push
es
faddl
ficoml
shll
stc
push
mov
add
xor
push
dec
out
inc
mov
xchg
dec
and
push
loop
cli
pop
and
add
mov
add
jnp
aaa
popa
ss
add
test
cli
mov
mov
rcrb
pop
jae
test
dec
add
xchg
adc
add
sbb
les
insl
jb
sbb
add
movsb
push
in
or
xchg
iret
jp
dec
mov
cmp
add
push
pop
sub
icebp
sub
pop
pop
xchg
aam
shll
push
addr16
bnd
lret
std
add
dec
add
cmp
jp
and
cwtl
adc
and
mov
int
cmpsb
fidivl
popf
xlat
add
dec
and
in
sahf
add
imul
mov
fdivrl
mov
and
adc
add
orb
xchg
dec
cmc
daa
xor
bound
sub
mov
cmp
or
mov
out
insl
push
pinsrw
mov
imul
mov
xor
xchg
fsubrs
pop
arpl
xor
jnp
mov
sbb
int
dec
aas
test
pop
xchg
xlat
cmp
xchg
add
iret
in
cmpl
or
addl
hlt
fildll
dec
mov
xchg
or
inc
mov
roll
push
lret
jmp
out
cmc
add
jg
dec
cltd
testl
cmc
add
or
sti
xlat
in
lret
loope
mov
dec
inc
or
int
stc
in
jmp
xlat
xchg
fnstcw
or
in
jmp
or
in
sbb
repz
or
or
aam
lods
idiv
add
and
jmp
aam
fstl
add
out
psubusw
push
scas
in
xlat
aad
cli
cld
mov
std
add
shll
lret
fst
cmp
mov
in
ds
sti
pop
xchg
push
decb
int
jbe
xchg
cmp
push
out
jle
testl
bswap
mov
jle
mov
lret
inc
add
decl
fstl
loop
or
iret
jmp
or
frstpm(287
in
call
scas
mov
pop
mov
pop
fcoml
or
decl
rolb
jge
add
outsl
add
das
add
jp
jg
movl
test
hlt
cmc
add
test
out
jnp
out
xchg
add
std
scas
push
and
jmp
ds
push
out
pushl
push
add
int
ljmp
hlt
mov
cmp
inc
divb
lock
jp
clc
push
add
out
and
dec
xchg
cmp
mov
cmp
out
mov
pop
pop
sub
fdivr
mov
xchg
fbstp
jmp
cld
sti
out
fists
jl
pop
repnz
out
pop
hlt
outsl
pop
out
in
scas
decb
inc
aad
ja
mov
lock
jmp
rorl
icebp
xchg
cmovns
jecxz
push
iret
pop
jecxz
ja
push
sub
jbe
faddl
xor
aaa
jmp
repz
mov
je
cmp
mov
idiv
lret
out
sti
pop
xor
mov
test
roll
mov
mov
pop
imul
sub
lahf
gs
int
push
movsb
or
stos
shll
or
add
mov
cltd
add
movsb
mov
int3
mov
adc
mov
out
or
sub
ja
out
insl
aad
xor
push
adc
add
idiv
and
xor
sbb
pop
cmp
loopne
pop
dec
fwait
paddw
leave
fmul
inc
jnp
mov
and
or
das
roll
into
mov
ret
lret
into
mov
mov
add
mov
cmp
jge
popa
insb
jg
into
mov
cld
aas
push
stos
or
fdivrl
std
or
fldl
push
repz
insb
inc
fiaddl
push
rol
ret
loopne
cmc
insb
ds
filds
fldl
insb
ds
roll
or
ds
out
push
lret
fsubp
push
ja
add
xchg
ds
fcmovnb
out
ror
ja
shl
or
in
ds
in
test
or
jle
inc
repnz
or
fcmove
ja
sar
sarb
inc
loop
testl
out
jle
cli
pop
scas
or
push
frstor
js
repz
cmpsl
or
mov
jg
addb
rcrb
push
ljmp
jg
add
jge
add
data16
roll
jbe
dec
jl
mov
or
filds
mov
pop
int
out
stc
add
or
jns
fistpll
jecxz
outsb
or
cmpsl
int
and
push
std
adc
rorb
inc
add
rorb
stos
mov
jo
sub
arpl
and
fsubrl
adc
mov
inc
stos
add
lods
cmc
mov
stos
call
pop
lods
fisttpl
adc
psubd
lret
xchg
mov
std
hlt
stos
mov
outsb
sub
lods
movsb
mov
push
std
fisubrl
adc
mov
inc
pop
add
mov
repz
insl
mov
pop
out
mov
fsts
xchg
xchg
mov
repnz
scas
std
insb
stos
sub
lods
sbb
fadds
xchg
std
push
in
dec
cmp
or
enter
lods
decb
xor
imul
in
mov
stos
xlat
xchg
or
inc
std
std
stos
mov
lock
lods
mov
daa
std
jecxz
mov
lods
xchg
mov
dec
mov
stos
addl
jbe
xor
imul
pop
pop
std
sbb
jns
dec
or
aas
std
sti
stos
mov
out
lods
stos
mov
and
xchg
sbb
lods
xchg
lret
mov
dec
pop
or
les
cli
mov
je
xor
in
std
stos
stos
xchg
loopne
lods
pop
mov
pop
sar
nop
in
clc
lret
dec
xchg
inc
subb
std
jae
xor
lods
and
pop
stos
push
xchg
or
mov
push
mov
inc
fwait
xchg
clc
mov
jb
das
pop
jmp
test
xchg
ficomps
pop
sar
into
js
mov
sarl
mov
pop
mov
jno
cs
cmpsl
lods
and
push
stos
adc
rorb
int
decb
rolb
std
cmp
jo
push
loopne
stc
int
xlat
stc
out
insl
daa
iret
scas
hlt
pop
insl
or
jg
pop
mov
ficoms
push
mov
dec
sbb
rcr
cs
in
fwait
icebp
inc
pop
cs
jle
mov
add
aas
fcmovu
adc
push
pop
mov
mov
sbb
lods
cltd
xchg
jmp
dec
or
sbb
test
dec
or
xchg
xchg
xchg
dec
inc
sahf
jg
mov
dec
xchg
fs
mov
fldt
push
cs
adc
jle
out
das
push
add
fnsetpm(287
xchg
cs
and
icebp
jnp
cs
xchg
cmpsl
jmp
xchg
push
pop
add
and
jne
rcr
mov
add
aas
push
fimuls
add
push
mov
or
xchg
xchg
jg
dec
inc
xchg
jg
adc
pop
cmc
mov
nop
fdivp
push
add
xchg
dec
add
push
pop
mov
mov
out
push
das
dec
mov
outsb
cs
lods
into
icebp
in
mov
in
sub
mov
push
mov
stos
int
jmp
dec
push
push
int3
push
decb
dec
add
aas
or
fcmovnu
xor
cs
mov
add
xchg
and
dec
or
dec
xchg
sahf
or
mov
jl
xchg
fwait
mov
or
jns
adc
xchg
pop
inc
add
lds
jmp
adc
add
fidivs
add
addl
aas
inc
fidivs
add
aas
inc
fsubrp
add
dec
aas
sbb
aas
rcr
addb
aas
fisubrs
add
aas
aas
fucom
fstpt
cs
mov
std
jle
adc
push
ret
std
mov
out
xor
frstor
in
dec
cld
mov
mov
sub
push
cmpl
lcall
mov
jnp
and
cmp
es
jge
cli
fstl
inc
jp
pop
mov
cmp
and
mov
in
cmp
fldt
mov
jno
xchg
enter
fistpll
testl
ja
adc
imul
in
ret
mov
inc
lahf
jg
ss
dec
cmc
gs
mov
fldt
jne
in
xorb
pop
fimuls
add
push
mov
xor
mov
out
jl
add
icebp
inc
jae
stos
pop
cmpsl
mov
dec
or
repnz
pop
add
jbe
push
int
mov
in
xor
icebp
mov
xorl
jno
dec
xor
pusha
lods
push
mov
xor
mov
out
test
add
add
aas
das
fiadds
outsb
fiadds
in
add
aas
lods
fidivrs
add
insb
add
stos
add
ljmp
sub
cwtl
aas
jmp
pop
aas
sub
jbe
rclb
ficoms
add
daa
ficoms
data16
add
movsl
fmulp
and
fimuls
add
push
mov
or
jecxz
andb
arpl
pop
cmc
mov
loop
jl
xchg
cmc
ljmp
pop
lods
push
mov
icebp
or
stos
pop
cmpsl
jbe
dec
or
loopne
in
cmp
push
pop
pusha
mov
lcall
inc
pop
push
push
fimuls
repnz
mov
xor
push
jno
mov
mov
test
fimull
or
lea
or
decb
sarb
cmp
sarb
mov
or
cld
jle
add
jle
sti
lret
subb
repz
repz
ret
pcmpeqw
in
add
testb
fdivrp
in
fcmove
call
int3
mov
leave
ror
or
out
cs
decb
roll
or
push
add
inc
add
insb
xlat
lret
push
cwtl
inc
jmp
push
ffree
push
mov
inc
shlb
mov
in
decb
outsb
js
lods
loopne
push
div
std
sti
ljmp
shr
out
iret
cmpsb
push
stos
flds
incl
sti
insb
nop
dec
lret
hlt
insl
loope
cmc
out
cli
jae
mov
hlt
lret
ffreep
inc
sub
movl
lods
fdivrs
dec
dec
lret
clc
mov
ljmp
add
insb
aam
data16
ds
push
shlb
sti
cmc
addl
jle
xchg
cmp
dec
push
out
jp
repz
add
aam
decb
xor
in
add
or
dec
mov
or
lods
dec
or
insb
aas
mov
fcmovnbe
pop
std
mov
out
jae
mov
repz
add
inc
stos
out
fisttpll
cmc
or
sub
in
inc
dec
mov
lock
mov
or
cs
std
mov
stc
jge
icebp
imul
jae
mov
ljmp
ljmp
mov
cs
add
or
call
icebp
xchg
or
jmp
push
faddp
jmp
mov
in
or
fsubrp
std
lret
jae
mov
clc
xchg
ds
inc
in
mov
shl
add
jecxz
add
rolb
insb
aas
mov
push
ja
pop
mov
fst
test
in
insb
fiadds
fnstenv
pop
enter
les
mov
fldcw
dec
add
insb
xlat
dec
insb
ds
xchg
loopne
aam
xchg
roll
jb
shrl
add
xchg
fcmovnb
push
fstp
lds
out
decb
lds
movl
inc
jae
ror
lret
add
in
or
jmp
pmaxub
xor
pop
lds
fldl
lods
test
push
aad
aas
push
fiadds
icebp
ja
pop
push
data16
inc
aam
dec
xchg
in
icebp
or
pop
mov
jae
mov
aad
std
cmp
inc
shr
mov
lods
mov
shrl
fucomp
idiv
lret
shlb
mov
faddl
repz
push
push
or
out
push
push
bswap
ret
or
push
push
push
jmp
push
faddp
out
mov
test
rorb
jmp
mov
into
push
or
sti
mov
in
mov
or
pop
cmpsl
in
loop
int3
jae
ror
inc
shrb
or
icebp
push
in
fld
insb
ds
in
jae
pop
lea
ror
inc
fldcw
push
fisttpll
rorb
repz
or
or
fadd
fwait
int
lods
adc
jo
mov
dec
stos
add
pop
sbb
dec
out
cmp
sahf
lock
arpl
dec
mov
dec
loopne
scas
pop
cs
repz
hlt
adc
ljmp
in
jg
adc
cld
mov
or
shll
add
insl
clc
cld
mov
in
mov
dec
loopne
scas
pop
movl
and
repnz
lea
xor
xlat
mov
cmp
pop
or
xor
and
idivb
loop
mov
dec
loopne
jg
push
movl
out
push
fmull
rorb
or
push
xor
hlt
and
ljmp
dec
jno
sar
jnp
hlt
push
lds
cld
mov
clc
loopne
mov
fsts
ljmp
mov
rorb
pop
cmc
lods
sahf
dec
addr16
fs
cmc
sbb
in
cs
xorb
xchg
aam
cld
mov
add
in
xor
loop
fstp
cmp
or
lea
int3
stc
mov
pop
adc
push
in
cs
lods
outsl
or
out
inc
fsubrl
out
adc
ja
or
stos
in
xchg
or
imul
addr16
push
scas
add
fdivrp
push
iret
mov
fisubrl
fstps
adc
mov
ljmp
inc
mov
stos
add
test
aad
cs
idiv
add
jle
sub
cld
mov
push
js
in
or
js
lret
std
out
mov
pop
idiv
call
jmp
push
rol
out
jbe
mov
sar
in
mov
out
loopne
or
fcompl
fiadds
mov
or
fildl
cld
adcl
pop
in
mov
sti
int
lret
call
cmc
push
or
sti
ffree
mov
or
lods
les
push
clc
gs
shrb
test
loopne
add
dec
ret
addl
roll
or
testb
lock
orl
idivb
cmc
xor
aad
ret
or
mov
loope
idivl
xchg
cmp
push
pop
repz
lea
fistpll
repz
fisttpl
add
or
or
cs
out
movsb
pop
mov
dec
push
stos
lock
lods
mov
pop
jecxz
cli
arpl
cmp
or
jecxz
in
dec
xchg
add
in
mov
xor
in
jmp
xchg
shlb
lods
jb
in
data16
aas
mov
mull
and
in
jp
jae
push
lret
insb
sub
jecxz
sti
jp
cltd
sarl
mov
pop
dec
lret
jecxz
repnz
pop
jae
call
jmp
insl
lock
or
push
rol
out
mov
call
dec
lret
jmp
in
push
push
xlat
mov
or
lods
xlat
test
push
sbb
stos
call
push
push
pop
icebp
pop
arpl
out
sub
stos
loop
add
repz
in
stos
ss
sti
aas
cwtl
fst
loop
cwtl
loopne
and
inc
add
lret
loopne
and
jecxz
sti
or
xchg
in
or
lods
out
push
roll
inc
shrl
stos
fldl
loop
lods
mov
icebp
dec
mov
loop
aam
dec
push
shr
insl
xchg
add
or
daa
jecxz
out
fcmovnu
jmp
or
push
push
stc
mov
or
lods
stc
clc
fstp
sarl
ja
add
aaa
or
mov
fnstsw
in
in
incb
jp
ds
jns
shlb
xchg
out
test
sti
cli
cs
hlt
and
push
aam
mov
not
sarl
push
aas
stos
fimuls
loope
add
out
and
jmp
ds
xchg
xchg
test
push
jle
stos
call
in
push
push
mov
lods
mov
addr16
sti
jg
insb
lret
iret
jo
lods
out
mov
test
icebp
cs
aam
fdivrp
mov
sti
xchg
add
neg
mov
push
or
push
out
shl
sub
call
xchg
aad
fstpt
out
or
pusha
hlt
icebp
or
sti
xchg
xchg
test
push
pop
cs
cmc
cwtl
xchg
and
jmp
cmp
loop
jmp
jecxz
push
popa
mov
int
push
sub
jecxz
push
push
cs
cld
fsub
cmpsl
push
stos
ss
push
aas
sbb
jmp
add
xchg
mov
xchg
mov
iret
ja
mov
mov
cld
sti
add
fsubp
mov
addl
shrl
stos
fldl
popa
ds
fsts
pusha
ret
fisttpl
sbb
fistps
insb
cmp
push
cltd
fnstenv
in
cmpsl
cltd
sarl
cld
dec
push
pop
and
xlat
mov
sti
or
cs
call
idiv
jae
mov
aad
sarl
movsb
inc
stc
jmp
xchg
neg
or
lods
lcall
in
ss
ret
outsb
sti
ds
ret
push
stos
mov
xchg
add
insb
decb
icebp
add
cltd
icebp
aam
or
mov
add
iret
ja
mov
lahf
int
jb
mov
cs
add
lret
lds
stos
repnz
data16
cs
fistpl
or
push
lret
lock
icebp
or
in
cmp
or
xlat
out
iret
adc
cmp
inc
out
popa
add
out
mov
fcompl
ret
std
imul
repz
lret
add
test
mov
add
jecxz
fiadds
inc
jmp
xor
lods
xor
out
in
cmc
test
in
jmp
scas
icebp
mov
roll
sahf
in
out
ljmp
mov
cli
jle
xchg
cmp
mov
xlat
fsubrp
adc
jmp
xchg
or
leave
inc
pop
push
sahf
shl
push
test
stos
hlt
pop
loop
cmc
icebp
lret
in
shl
push
in
jmp
jecxz
pushf
push
or
ret
out
pushf
shl
or
pop
push
out
ffree
in
pop
sbb
daa
out
push
shlb
scas
sti
loopne
xchg
in
add
fsubp
jge
push
neg
jae
mov
jmp
loope
cmpsb
inc
fsubrp
inc
push
rol
fisttps
ffree
enter
ret
fnstsw
aas
repnz
pop
ja
repnz
fst
ret
jle
mov
dec
in
arpl
jl
aas
sbb
sbb
and
aas
sti
aad
out
sbb
popl
fadd
mov
lods
fisttps
stc
xlat
iret
stos
dec
fnstsw
add
jle
mov
movsb
icebp
cltd
or
jne
cmc
fadd
aad
or
fst
mov
out
insb
cmp
or
push
aam
aas
aaa
fucom
xchg
roll
or
push
rcl
mov
xchg
ret
jae
rolb
icebp
inc
or
push
xchg
jl
mov
loope
pop
jmp
into
push
sti
pushf
add
xchg
shlb
loop
in
or
daa
add
sub
pop
ret
or
sub
add
icebp
pop
aaa
push
inc
mov
jle
aas
clc
pop
aaa
add
mov
fidivs
std
jle
xchg
cmp
inc
or
test
mov
cs
add
fdivrp
jge
fst
or
mov
fcmovne
sti
lds
stos
or
loop
or
insb
ds
stos
push
ljmp
pop
jae
mov
pop
in
cmc
inc
bound
ja
mov
pop
les
cmp
sti
inc
add
shl
bound
cs
add
fdivp
std
cs
add
mov
sbb
out
je
leave
cli
mov
sub
or
or
cmp
or
add
and
pop
les
popa
add
push
loopne
inc
in
add
and
lahf
shll
pop
lahf
jae
shll
in
stos
mov
add
insb
xchg
mov
sti
enter
fadds
cli
jmp
xchg
push
pop
or
lods
lods
or
insb
aas
and
repnz
loope
and
clc
jae
mov
filds
call
mov
ret
sbb
cmpsl
sti
jmp
xchg
out
sbb
xlat
lods
push
cmc
insb
xchg
dec
inc
fldt
add
or
pop
or
shr
in
or
pop
add
jle
orl
pop
mov
cs
xlat
push
std
mov
icebp
jae
mov
cltd
or
or
out
lock
pop
add
jle
xchg
pop
push
inc
out
jmp
xchg
mulps
add
aas
std
in
jae
mov
fiadds
in
jmp
xchg
pop
sbb
jmp
in
mov
push
out
jecxz
ja
and
ljmp
sbb
idiv
xchg
pop
nop
add
fisubrs
add
fadds
add
lock
xchg
stos
mov
outsl
add
insb
cmc
outsl
bound
aad
idivb
cli
jle
xchg
xchg
mov
fildl
fnstsw
lods
mov
jmp
xchg
aam
or
lods
in
add
sti
pop
in
in
scas
pushw
loop,pt
cmp
loopne
jmp
inc
jle
aas
daa
sahf
push
sbb
stc
daa
insb
cmp
push
addr16
bnd
pop
addr16
fildll
sbb
cmc
jae
faddp
mov
dec
add
loope
arpl
jo
in
out
fsubp
jge
push
neg
xor
icebp
push
xchg
in
jecxz
fs
fcmovnb
imul
imul
fildll
mov
xchg
ds
push
fcmovb
fisttpl
mov
cld
pop
in
fnstcw
shrb
pop
in
add
pop
mov
jae
mov
lret
aad
cmp
jecxz
xchg
ljmp
inc
jae
mov
rolb
shr
or
leave
jno
jmp
and
push
imul
out
dec
lret
or
or
out
insb
xchg
pop
ret
out
dec
inc
out
stos
or
out
or
psllw
jmp
orl
jmp
ret
dec
dec
lret
cmc
push
in
push
movsb
adc
test
push
jecxz
mov
fnstsw
addl
sbb
cmpsl
icebp
jmp
xchg
or
or
lods
gs
fildl
frstor
pop
movsl
xor
sti
add
jle
inc
xlat
sub
mov
cmc
or
ja
mov
xchg
lret
cld
lds
or
fdivl
mov
stc
push
in
clc
frstor
ds
sbb
fistl
testb
cs
add
add
sbb
xchg
cmp
popf
xchg
pop
aam
lock
popf
or
insb
aas
in
in
aam
out
pop
in
add
jge
repz
xchg
aas
jge
iret
push
mov
or
in
xchg
icebp
xchg
or
pop
mov
jae
mov
ljmp
insb
aas
lods
fimuls
lods
jae
shl
inc
out
ljmp
jmp
push
rol
in
cmpsl
mov
rorl
in
loop
roll
stc
inc
add
insb
loopne
sub
stos
clc
icebp
cld
shr
fisubrs
data16
ds
ret
fmull
hlt
cs
or
mov
push
repz
xchg
lret
hlt
shll
lret
or
fsubrs
xor
out
pushw
xor
add
repnz
aam
stos
fdiv
fnstsw
test
cmp
push
aas
cmp
in
sar
cmp
out
jae
mov
rorb
adc
add
xchg
dec
inc
hlt
stos
or
in
jae
mov
rorb
pop
push
mov
cs
add
pop
or
jmp
sub
jmp
xchg
addr16
sub
lods
lret
xchg
in
push
cmpsl
mov
popa
add
fldl
lret
repnz
in
add
inc
push
pop
call
fidivrl
inc
pushl
insb
aas
sub
add
sub
icebp
ljmp
in
out
mov
adc
std
inc
push
fldl
icebp
cli
shr
sti
push
bound
push
xchg
in
mov
idiv
mov
das
dec
lret
or
icebp
inc
loope
test
lods
test
inc
loopne
jae
aam
or
lods
jae
icebp
fildll
fdivrp
push
ja
pop
cmp
faddp
sbb
push
in
out
imul
add
or
or
pop
mov
call
adc
jmp
mov
cmc
adc
jmp
xchg
in
icebp
icebp
cli
shr
mul
mov
out
dec
lret
in
in
dec
cwtl
add
nop
fsubp
sti
or
fwait
xchg
pop
adc
scas
mov
shrl
mov
jno
cs
ljmp
fstpl
pop
sar
int
push
mov
sarb
mov
pop
mov
jo
sub
arpl
cltd
std
push
stos
adc
or
imul
mull
movsb
pop
std
push
add
loopne
loope
push
fdivr
or
rorl
cwtl
stos
push
xchg
or
iret
dec
mov
mov
xchg
mov
lods
sub
popa
stos
push
xchg
xchg
push
lods
adc
push
std
inc
stos
add
lods
repz
stos
out
mov
adc
or
xchg
inc
ljmp
ss
repnz
scas
xchg
in
mov
std
fsubrs
imul
enter
inc
stos
incb
lods
icebp
mov
stos
in
mov
xlat
mov
push
or
inc
std
lods
mov
std
lock
lods
xchg
daa
jecxz
mov
std
stos
xchg
xchg
dec
mov
or
lods
orl
stos
jbe
xor
out
lods
lods
imul
sbb
aad
in
dec
scas
dec
mov
pop
and
sti
lods
mov
adc
call
xchg
add
wrmsr
xor
addr16
hlt
in
sub
sbb
iret
or
out
adc
divl
not
inc
xchg
or
dec
sar
cs
aas
hlt
adc
ljmp
xchg
out
ss
pusha
or
add
xor
clc
inc
push
pop
nop
jg
pop
daa
or
jo
out
scas
call
hlt
arpl
dec
mov
jge
pop
cmp
jg
nop
test
ret
cmp
pop
outsl
inc
btr
jge
pop
mov
aas
cltd
into
ljmp
mov
cmp
sub
das
stos
cld
imul
inc
inc
and
gs
fsubp
test
aas
jbe
cmc
or
cld
push
mov
or
test
inc
dec
call
xchg
xchg
jge
push
add
and
jg
push
mov
scas
mov
dec
mov
lret
inc
inc
ss
jns
mov
mov
loope
jnp
icebp
es
inc
ljmp
out
adc
cli
js
inc
iret
pop
mov
repnz
fidivs
and
jb
push
lods
test
mov
loopne
jnp
mulb
xor
test
jecxz
stos
cld
stos
sbb
mov
shlb
push
ljmp
mov
js
loopne
mov
dec
xchg
jg
push
mov
add
cld
fldl
js
push
ficoms
dec
mov
xbegin
sbb
push
stos
cld
imul
inc
inc
sub
outsb
std
mov
jmp
loopne
sub
movsb
out
jg
rcll
push
jg
test
fwait
add
shrb
cwtl
pop
pop
cs
hlt
lret
adc
pop
movl
in
sub
cmp
jnp
jg
push
mov
mov
dec
fcmovne
xchg
lea
and
jp
fdivrl
mov
fisttpl
bound
cmp
or
clc
mov
add
ljmp
aas
negl
outsl
and
test
push
in
dec
stos
movsl
add
call
jp
loop
cmp
mov
dec
pop
imul
add
jecxz
pop
mov
cmp
add
stos
push
cwtl
js
cli
push
int3
adcb
lock
push
lock
and
xchg
out
cld
inc
push
out
push
cltd
jnp
jmp
iret
lcall
jecxz
arpl
jnp
fsubp
or
insl
pusha
mov
sub
hlt
xor
dec
stos
mov
testb
inc
fucom
js
jge
fadd
movl
fidivrs
mov
sub
inc
testl
add
cmp
jmp
in
sub
cmpsl
ljmp
jno
scas
mov
dec
popf
adc
cmp
insl
pop
xchg
fisubrl
shrb
and
sbb
cld
icebp
push
pop
repnz
xchg
call
sub
cltd
aam
fsub
or
lods
push
lds
idivl
jg
and
out
icebp
add
call
push
loop
out
mov
jg
fsubrs
push
mov
pop
add
cmp
jle
icebp
xchg
add
notl
lock
out
jae
add
insb
je
push
shrb
in
mov
clc
mov
clc
or
or
mul
in
and
jo
hlt
cld
arpl
rol
ret
stc
pop
jnp
cld
arpl
or
scas
insb
or
add
dec
daa
iret
cmp
out
icebp
gs
in
adc
fiaddl
iret
adc
divl
pop
stos
add
pop
cld
stos
cmp
lock
icebp
and
sbb
fsubp
mov
adc
or
dec
sbb
add
fdivp
inc
inc
push
jo
in
fisubs
inc
loop
mov
fcom
adc
movntps
insl
add
mov
frstor
pop
lods
xchg
out
fstpl
sbb
fsub
xlat
lods
xchg
rorb
push
sbb
or
clc
inc
std
dec
lock
push
dec
inc
hlt
inc
inc
or
ljmp
icebp
stos
fisubs
mov
cmp
mov
push
stos
mov
stos
mov
mov
in
jmp
adc
divl
ja
push
xchg
cld
dec
shl
cs
jg
adc
fdivrp
mov
mov
push
push
sub
hlt
mov
inc
pop
xchg
testb
shlb
in
popf
loop
cmc
mov
cmp
in
jg
push
inc
cmp
lock
cld
mov
cli
dec
daa
iret
cmp
lock
popa
pop
out
lcall
cmp
jo
or
adc
hlt
adc
ljmp
inc
std
and
divl
idiv
inc
push
out
dec
push
iret
in
adc
push
jae
hlt
mov
iret
dec
pop
sub
xchg
mov
sbb
repnz
lock
ds
and
cmp
call
xor
arpl
ret
js
shl
and
jb
fsubs
push
fcoms
cli
inc
imul
cmp
ljmp
fcoml
push
hlt
in
cs
loopne
jg
in
movsb
fistpl
loopne
aam
and
mov
jl
push
inc
xchg
or
incb
add
dec
pop
add
int
sub
mov
cmp
in
cs
cmp
notl
in
jmp
adc
shlb
xor
pusha
dec
pop
out
aad
jmp
push
sahf
repnz
or
call
xchg
dec
icebp
aam
notl
or
xor
in
inc
push
loop
push
or
jp
hlt
adc
scas
add
cli
xchg
push
lock
sbb
icebp
nop
ljmp
xchg
repz
daa
adc
icebp
xchg
mov
divl
dec
xchg
iret
xor
out
aaa
movl
lret
out
insb
adc
lret
das
shrl
lret
push
shr
dec
iret
mov
cld
jnp
add
int3
mov
dec
inc
outsl
in
mov
push
int3
xchg
fcomi
loope
in
sbb
pusha
and
push
out
aad
in
sti
das
cmc
bnd
int3
push
sbb
sbb
lret
pop
fsubrp
aas
jg
fisttpll
das
sbb
mov
clc
fcmovnb
dec
mov
xchg
mov
int3
dec
push
lret
dec
push
push
fcomp
inc
sbb
or
xchg
lret
je
dec
or
xchg
xchg
push
or
iret
cmp
aad
pop
rcll
xchg
lret
call
dec
or
xchg
xchg
mov
sub
leave
xchg
push
in
push
mov
adc
xor
or
int3
mov
push
adc
add
into
pop
jl
mov
dec
or
add
dec
int3
mov
mov
mov
fisttpl
push
inc
mov
xor
pop
aas
faddp
inc
add
jle
xor
and
icebp
xchg
in
scas
add
xor
jmp
rcll
cmpsl
jle
daa
push
out
inc
fisubs
dec
aas
or
xchg
lret
push
jle
or
std
xchg
fstpt
gs
cld
push
sarl
or
jnp
sub
add
cli
cmp
stos
xor
in
xor
mov
dec
mov
mov
jae
ds
xor
enter
push
shrl
mov
jg
or
jno
call
lock
inc
jg
pop
mov
sahf
sbb
xchg
ret
inc
push
adc
xchg
add
push
out
adc
adc
cs
jns
fimuls
cwtl
outsl
mov
sti
push
and
inc
push
push
xchg
dec
or
push
xchg
loopne
or
adc
push
ja
mov
int3
or
out
jmp
dec
fidivs
dec
or
mov
in
fimuls
inc
leave
in
repz
insl
mov
in
nop
dec
icebp
test
aas
dec
xchg
bound
dec
lret
leave
xchg
adc
inc
mov
adc
in
jnp
ficoms
mov
in
sub
push
add
mov
push
fiaddl
aas
fisubs
add
jle
adc
dec
add
in
jbe
pop
dec
iret
xchg
add
rol
pop
xchg
mov
lcall
push
adc
mov
fwait
jle
sbb
loop
icebp
inc
std
cs
insl
mov
jge
or
cld
xchg
pop
mov
jp
push
cltd
sti
mov
jnp
and
jnp
mov
es
stc
cs
sbb
in
jg
or
clc
xchg
js
lret
es
sub
mov
mov
ret
sub
and
mov
xorb
test
or
dec
das
xchg
outsb
or
lods
mov
pop
out
inc
push
data16
out
adc
in
sti
inc
mov
adc
repnz
fiadds
incb
ja
or
pop
in
jg
lret
xchg
pop
in
jg,pt
pop
ret
cmp
and
push
fidivrs
or
int3
in
cmp
sbb
cmp
xor
aaa
push
ja
fidivs
mov
inc
push
adc
cmp
xor
inc
iret
lret
test
or
out
mov
daa
dec
ljmp
cmp
setl
and
adc
add
xchg
push
ds
mov
pushf
inc
sti
lea
xlat
int
fistl
hlt
outsb
loopne
or
int
push
push
in
fcomps
mov
add
fimuls
add
jne
out
xchg
mov
add
jp
clc
in
fsubr
fmulp
fisttps
das
mov
cld
or
ds
fisubl
fisttpl
or
out
clc
push
ja
pop
popl
aas
lret
fiadds
add
pop
lea
rcll
pop
iret
inc
lret
icebp
jle
out
rcl
dec
dec
in
in
mov
push
pop
movl
aas
fdivp
jae
test
loopne
ds
in
or
or
dec
js
loope
sahf
shll
filds
add
out
sub
neg
add
insb
inc
push
test
stc
xlat
fiadds
std
vmread
neg
pop
repz
std
js
out
cmp
pop
mov
push
cld
mov
incb
dec
pop
repz
fucomip
xchg
jmp
idiv
fists
lds
std
fs
test
call
xchg
jg
push
sarl
ljmp
ljmp
add
out
cmp
popf
flds
in
push
ret
pop
ljmp
in
loope
lods
fmuls
cli
jge
jmp
rcr
int
mov
xchg
stc
in
fistpll
fmulp
fmull
aaa
add
or
or
orb
test
mov
jmp
call
std
fisubrl
rorb
jl
int
lods
push
mov
add
std
stos
cli
xchg
rep
in
mov
pop
jmp
xchg
loope
lods
ror
popa
cmpsl
mov
add
cld
lods
cli
mov
pop
idiv
hlt
stos
repnz
call
flds
aam
dec
sti
stos
xchg
add
std
imull
loop
fsubrl
cltd
xchg
add
stc
repnz
jmp
in
loope
jnp
or
lods
cli
mov
pop
in
std
in
fiadds
cmp
lods
sti
mov
pop
in
std
out
filds
cli
add
cld
mov
pop
lock
ljmp
shr
or
add
hlt
out
in
fisttps
push
jp
or
cmc
out
lods
jmp
std
loopne
fldl
lods
ror
or
or
push
stos
add
call
mov
cld
xchg
stc
div
lods
lock
pop
ljmp
lods
fmuls
jae
or
add
std
stos
cli
xchg
hlt
icebp
lods
out
mov
pop
call
xchg
lods
mov
pop
sar
push
mov
xchg
sti
mov
pop
cmc
std
repnz
out
xchg
in
lods
xlat
mov
xchg
jns
add
clc
stos
icebp
xchg
jecxz
lods
aad
std
stc
stos
repnz
in
lods
mov
out
xchg
add
cli
rep
in
mov
pop
fdivrp
xlat
stos
rorb
mov
incb
lods
decl
stc
stos
repz
out
lods
fmuls
sysret
std
add
out
call
pop
std
aam
or
decb
add
ljmp
mov
aam
mov
lea
aaa
hlt
xor
shll
je
dec
jmp
call
pop
inc
icebp
mov
lds
lea
mov
inc
mov
push
pop
push
or
shlb
imul
or
fcmovne
push
mov
or
mov
das
aas
mov
dec
loop
rcrb
xor
xchg
stos
adc
cmpsl
jmp
hlt
sti
mov
mov
fisttpll
mov
roll
or
aas
call
clc
sub
sub
lods
ja
push
or
sub
or
sbb
mov
adc
dec
mov
jp
rcll
xchg
pop
mov
cld
mov
gs
jg
add
inc
test
sbb
sbb
and
in
pop
loopne
stc
mov
add
push
lret
add
push
xchg
xchg
test
push
out
or
add
out
inc
mov
iret
aas
cmp
fdivl
mov
inc
xor
mov
mov
and
mov
hlt
and
sbb
mulb
clc
das
scas
roll
dec
addb
lret
mov
fcmovnbe
or
adc
shl
sti
add
loope
cld
gs
fcmovnb
push
xchg
neg
scas
add
cmp
jl
pushf
cmpsl
inc
push
xchg
dec
mov
mov
gs
data16
pop
rcr
or
pusha
invd
pop
fsubrp
setg
insb
cld
dec
popf
sbb
adc
cmpl
jae
dec
or
outsl
imul
adcb
scas
outsl
push
mov
mov
dec
adc
gs
pop
sarb
jg
inc
hlt
xchg
sahf
and
and
sbb
std
or
mov
push
sbb
sahf
out
in
in
hlt
daa
loop
clc
mov
xchg
test
dec
bound
xor
or
in
xchg
sbb
inc
ficoml
or
or
xor
or
sti
aas
out
shll
loop,pn
popa
aam
shl
cli
add
xchg
xlat
loopne
sbb
ficompl
add
push
pop
push
arpl
mov
pop
shll
pushf
jg
jge
ljmp
cmpsl
bound
or
outsb
and
mov
push
imul
pop
loop
and
scas
and
lcall
fwait
sbb
mov
hlt
in
inc
test
int
fstp
mov
jmp
add
jle
mov
lret
jecxz
push
in
push
mov
pop
sub
and
push
add
int3
lea
sbb
or
or
fstpl
mov
loop
or
loopne
dec
mov
je
mov
cld
loope
cmp
add
mov
notb
and
fcmovne
mov
cmpsl
fisttps
fcomip
adc
xlat
cmc
idivl
push
hlt
fisttpl
ror
jae
shll
hlt
cmc
je
sbb
xchg
adc
cmp
stos
jmp
mov
dec
cmp
subl
xchg
aam
rorb
push
mov
mov
lret
add
call
aam
ds
in
lret
in
mov
jo
push
mov
test
or
jmp
or
mov
ds
fnsave
lods
or
push
fiaddl
mov
aas
mov
enter
jge
mul
cld
or
in
add
lret
dec
xchg
mov
cmp
aad
xor
xor
aam
jbe
or
mov
cld
cli
add
or
push
stc
push
paddw
inc
inc
in
add
or
loopne
dec
popf
scas
cs
out
idivb
mov
ja
in
or
cli
in
rcl
std
cmc
sti
cs
or
xchg
dec
or
std
cmp
cwtl
insb
div
add
cmp
pop
xor
or
stc
cmpsb
xchg
cli
add
clc
in
notb
push
stos
mov
stos
mull
or
in
dec
push
dec
jg
mov
mov
dec
sbb
or
std
fwait
repnz
int3
lods
add
mov
in
std
jg
or
icebp
mov
out
pop
add
mov
fistpll
cmp
cld
cmp
pop
inc
or
or
ds
sub
ljmp
adc
mov
stc
pop
inc
in
add
sub
dec
pop
mov
xchg
or
test
faddl
jmp
aas
imul
jle
in
out
or
cmpsb
xlat
pop
dec
dec
repnz
pushf
cld
pop
add
in
jecxz
testl
in
in
fsubrp
jae
add
loopne
in
jp
jnp
hlt
mov
imul
xlat
std
stos
fbld
or
test
or
lret
or
add
mov
stc
mov
cwtl
push
addr16
mov
add
test
fninit
sbb
shr
daa
add
push
mov
cmp
in
std
fsubrl
test
outsl
femms
add
stc
jl
aam
jp
repz
sti
mov
repz
add
inc
sarl
add
cmpb
add
ret
fldl
ret
inc
pushf
xchg
add
pop
jae
lea
out
sbb
cmp
push
inc
adc
in
push
ja
add
out
or
decl
orb
push
add
ret
fs
inc
or
in
repz
add
pop
test
lret
icebp
test
scas
ret
addl
ja
inc
imul
jecxz
lods
mov
mov
orl
add
add
jle
jle
lds
push
lcall
ret
stc
std
sub
ret
add
shll
roll
ret
inc
ret
add
sbb
lret
fisubrl
sbb
ss
push
adc
jmp
pop
test
sar
mov
es
loop
aad
fiadds
faddp
sub
or
out
idivl
repnz
fnstsw
stos
incl
or
ljmp
ret
inc
fdivrl
loop
and
je
scas
in
lret
ljmp
add
cmpl
ret
inc
incb
loopne
loop
repnz
inc
sub
loopne
imul
push
fiadds
pop
fiadds
mov
add
cmp
loopne
je
in
repnz
add
push
scas
pusha
ret
ljmp
jl
cmp
cmp
sbb
adc
out
pop
xor
mov
and
scas
imul
shl
xchg
repz
and
mov
data16
pop
pop
flds
shl
pop
xor
fnstsw
jmp
add
out
mov
sbb
or
mov
jae
inc
mov
push
add
ret
idivl
jmp
fistpl
repnz
add
andl
fsts
inc
sti
cmc
push
push
mov
out
cmp
jnp
in
add
add
test
lret
test
add
xor
add
mov
in
icebp
subl
hlt
or
mov
jle
inc
inc
mov
xor
inc
lret
sub
jnp
lock
call
jl
out
or
or
pop
add
xchg
addb
icebp
mov
xor
dec
sbb
mov
or
pop
inc
or
roll
pop
inc
sahf
inc
cli
adc
std
ljmp
sahf
shll
leave
std
ret
insl
cmc
inc
subl
push
add
add
pop
jle
je
pop
into
mov
lret
ffreep
in
fistpl
loope
dec
mov
ja
cmp
decb
xchg
fsubrs
hlt
cmc
in
dec
mov
jp
aas
xor
mov
aad
cmpb
clc
push
in
aad
mov
aaa
or
add
cmc
inc
repnz
repz
subl
enter
mov
dec
cmpsl
movsb
jmp
add
inc
mov
repnz
fdivrl
jl
jmp
jle
jo
mov
xorl
lods
mov
ss
je
jno
jbe
lret
ss
mov
flds
jnp
je
call
shlb
cmp
sub
std
mov
int
push
adc
push
mov
mov
add
or
lea
cld
iret
cmp
add
lret
test
lea
push
out
repz
scas
mov
inc
js
xor
scas
rorb
into
lret
cli
incb
or
frstor
dec
aad
add
dec
pop
lret
xchg
jmp
adc
add
aad
inc
inc
shll
or
dec
push
fs
into
clc
mov
js
testb
pop
add
push
ja
xor
jg
stc
push
jmp
in
rcrl
aam
lcall
inc
mov
ja
fadd
in
loope
xchg
push
push
fnstcw
out
mov
or
sar
fisttpll
ds
lret
cli
inc
push
add
mov
scas
jp
hlt
mov
cwtl
mov
inc
mov
aas
int3
pop
mov
in
jle
in
add
or
push
call
sub
arpl
xor
in
jbe
js
mov
lea
xchg
jge
or
add
in
into
popl
repz
stc
inc
std
nop
add
xchg
cmc
icebp
out
test
nop
into
stos
shr
inc
mull
mov
mov
into
pop
icebp
adc
lods
add
into
push
jbe
add
lods
repnz
pop
fdivrp
frstor
sbb
push
cmp
ja
jp
jae
outsl
cwtl
aas
pop
cmpsb
sub
mov
mov
xchg
into
cmp
jl
lods
out
icebp
adc
sti
mov
pusha
fbstp
cmp
mov
jnp
std
ja
xorl
jmp
ja
clc
jl
ss
lock
push
mov
and
lods
dec
iret
cs
aaa
decb
add
test
lods
push
or
cmp
jae
mov
je
clc
or
test
into
jbe
mov
jle
fucomip
mov
cld
xor
ret
or
cli
lahf
mov
mov
stos
push
scas
stc
dec
cld
jecxz
mov
and
pop
ljmp
in
stos
cmp
lea
mov
add
mov
repz
cmp
mov
out
or
mov
repnz
cmc
push
aaa
cmp
andl
ret
xor
loopne
cmp
add
pop
test
mov
jb
jbe
cmovbe
add
push
scas
and
jp
out
ja
sbb
mov
int
push
int3
cli
scas
inc
je
filds
jg
add
rol
mov
out
mov
cmp
add
jl
int3
ljmp
mov
mov
in
mov
les
xchg
adc
aam
lcall
cmc
lock
out
and
add
lock
sub
aas
ja
rcll
sar
stos
std
addr16
or
test
mov
mov
addr16
cli
jl
xbegin
in
cmp
mov
jle
inc
jmp
mull
or
out
mov
subl
fmulp
ret
jae
fsubrs
repnz
lock
cs
dec
inc
jg
std
lret
add
sub
out
add
cmp
insl
cld
popf
sti
fistpl
icebp
std
inc
out
in
add
sub
mov
cmp
cwtl
inc
repz
fucomp
fwait
jmp
lea
leave
fsubl
xchg
lock
das
jbe
add
repnz
ret
add
add
in
mov
cmpsl
movsl
mov
push
jcxz
ds
or
mov
mov
or
fwait
lds
mov
add
loopne
daa
leave
adc
mov
jbe
hlt
in
loopne
cld
mov
cli
fisttps
ret
pop
stc
jp
loopne
jp
cli
cld
ret
ret
fmull
push
leave
pop
in
mov
xor
cwtl
jno
in
out
cli
flds
aas
xlat
in
loopne
into
mov
inc
ret
call
or
lods
or
push
rolb
adc
imul
roll
in
add
cs
subl
and
orl
in
lock
sub
push
arpl
stos
std
out
jns
or
fucomp
or
push
push
or
ficompl
add
xor
sti
hlt
mov
mov
testl
lods
or
xchg
push
inc
je
add
jmp
imull
mov
push
fdivp
lock
hlt
loopne
fimuls
into
addr16
mov
push
mov
stc
add
fldl
loop
mov
popa
jge
lods
mov
jb
jg
jl
fnstcw
repz
int
test
jl
lods
mov
jmp
repnz
jns
or
aaa
ljmp
icebp
xchg
cmpsb
push
popa
fldl
add
sub
xor
lret
xor
jae
les
cmc
mov
into
test
roll
in
insl
sti
push
stos
cmc
or
xchg
cmc
decb
mov
pop
scas
mov
sub
xor
loope
inc
out
push
mov
or
jnp
cltd
out
xchg
mov
out
mov
stos
cmp
add
movsl
push
fisubrs
add
jl
sub
mov
push
fisttpll
icebp
fs
jns
fs
jbe
sti
sahf
out
mov
jns
push
scas
rolb
into
cli
xlat
cmp
outsb
jno
mov
xor
loope
jmp
xchg
filds
xor
mov
gs
in
incl
int
mov
or
or
mov
rorb
pmaxub
fstpt
call
pop
test
lods
add
add
out
test
mov
cmpl
cld
in
or
or
out
iret
xor
jl
jnp
loope
adc
cmp
mov
cmp
pop
out
divb
aad
into
inc
out
mov
iret
icebp
dec
leave
stos
adc
jle
cld
aaa
fstpl
add
out
test
or
or
aas
out
pusha
lds
out
testb
add
rcrb
add
jae
xlat
xor
lret
loop
xchg
push
mov
push
fbld
sub
stc
dec
je
push
repz
div
fadds
mov
inc
ja
jl
cmp
jg
jecxz
push
mov
jge
mov
xchg
xchg
lock
add
lcall
mov
cmpsl
hlt
int
rcrl
xor
lods
faddl
ja
sub
jge
std
jmp
icebp
push
or
int
mov
push
test
or
xchg
in
jb
aaa
clc
in
cmpsl
add
decb
cmp
xchg
pop
test
inc
jnp
jecxz
out
jb
lea
mov
addb
fcomip
ja
testl
mov
mov
or
out
or
popa
sub
incl
cli
stos
loop
lds
cs
mov
jne
dec
cmp
mov
inc
hlt
mov
leave
into
jnp
aaa
mov
roll
repnz
loop
add
fwait
or
mov
push
in
jp
out
out
jg
add
sub
dec
rcll
mov
or
pop
jecxz
add
sti
mov
jnp
int
mov
cld
fdivrl
xor
ja
xchg
mov
into
adc
add
sbbl
out
cmp
xor
mov
inc
mov
test
subl
add
and
add
adc
or
movsb
rcrl
dec
pop
cmp
test
lret
in
out
pushf
inc
ret
cmpsb
icebp
push
push
inc
ljmp
les
ja
jge
je
in
mov
or
pop
jg
jle
in
sub
dec
ja
imul
xor
jno
or
cld
adc
outsb
add
jmp
outsl
push
xchg
addl
lock
sti
decl
into
or
pmaddwd
cmp
stc
or
outsl
jge
mov
add
cmp
ja
push
sub
dec
or
jnp
scas
cmpsl
cmp
push
ljmp
daa
mov
ljmp
ret
out
sub
jne
cmp
orl
decb
int
xor
jae
jae
or
inc
testb
icebp
ja
imul
fsub
sub
jmp
stos
or
icebp
gs
cmp
mov
cli
pop
lret
or
jbe
lods
punpcklwd
add
je
jmp
in
cmc
cmpsb
stc
or
sub
fidivrl
imul
xchg
jo
incl
scas
push
stos
pop
push
lock
inc
subl
out
or
jmp
or
push
pop
mov
std
cmp
jmp
xlat
scas
or
std
jae
or
pop
scas
or
stc
mov
repnz
xchg
cli
cmp
lea
or
jmp
jp
or
cmpsb
aaa
xlat
mov
or
or
and
cmp
or
mov
xchg
push
or
les
mov
lods
mov
divb
mov
pop
or
or
je
cmp
add
or
sbb
wbinvd
repz
daa
or
mov
fcomip
dec
cmc
jns
insl
sti
std
loope
in
ljmp
add
jle
mov
std
or
lret
clc
loope
aas
clc
jmp
mov
outsl
addr16
xchg
scas
add
push
jp
std
lea
fildl
out
dec
in
scas
add
sub
jmp
aad
jnp
or
in
or
push
xchg
xlat
mov
out
xlat
mov
mov
jae
xor
cwtl
jp
push
aas
or
dec
jbe
add
or
or
jnp
push
or
mov
out
mov
push
cld
jns
sti
jecxz
sbb
xchg
pop
out
or
xor
iret
scas
lods
adc
outsl
stos
dec
xor
push
sti
jns
idiv
in
int3
jl
pop
push
push
out
hlt
sub
out
loop
hlt
add
imul
lds
jnp
push
jg
imul
insl
dec
xor
cmp
mov
hlt
shlb
push
add
outsl
or
sahf
or
sbb
cld
std
into
jne
incl
cli
shll
int3
ss
jp
jp
pop
sub
add
mov
std
jae
jecxz
shlb
mov
pop
test
data16
sti
jge
pop
ljmp
inc
leave
cmp
inc
xchg
push
mov
mov
sarb
icebp
cmpb
arpl
push
push
lods
aaa
pushf
stos
sbb
call
arpl
mov
rcl
dec
add
pop
mov
fmull
into
jmp
mov
sub
dec
inc
cli
dec
faddl
outsl
or
push
std
cmp
jb
cmpsb
mov
inc
idiv
push
ds
stos
insb
repz
sbb
jns
push
aaa
push
xor
stos
fs
mov
push
or
ret
movl
xor
inc
mov
stos
jo
addl
lods
test
out
push
cmp
jl
cmp
pop
or
inc
cli
in
add
ja
or
test
jge
fneni(8087
pushf
idiv
mov
fwait
ljmp
or
mov
lods
icebp
fldcw
out
mov
push
pop
or
lret
pop
mov
cmp
shr
ljmp
add
jno
pop
cmp
add
mov
lods
jns
mov
cltd
or
sbb
sub
in
xor
add
aas
xor
mov
or
sub
sub
pop
repz
inc
hlt
fcom
push
jnp
or
mov
or
jae
mov
in
insb
mov
ljmp
mov
mov
jb
mov
push
jo
adc
in
cmp
cmc
lods
sti
test
or
jmp
stc
pushf
cld
div
lret
mov
ljmp
scas
mov
testb
cli
cmp
addr16
mov
in
dec
cmc
out
or
stos
mov
xor
pop
jl
jecxz
out
mov
clc
stos
cld
pop
cs
add
add
mov
jbe
or
or
pop
je
xor
push
stc
stos
push
aas
or
insb
ret
jg
testb
inc
gs
aam
add
adc
and
cmp
mov
add
jns
call
test
dec
jno
enter
lock
hlt
mov
mov
push
fisttpll
out
lea
xor
out
jno
in
sub
add
lahf
pusha
out
dec
jp
jnp
frstor
push
test
int
push
pop
jmp
sbb
leave
jnp
xor
or
push
stc
and
fiaddl
cmp
std
push
mov
fdivrl
popf
fsubs
jle
inc
paddb
std
in
cli
repz
and
mov
mov
push
hlt
mov
ret
rcr
cld
fwait
testl
test
or
fsub
jge
jno
cmc
mov
movsl
or
pop
cmp
xor
popf
rorb
pusha
outsb
cmp
icebp
shll
sti
mov
std
cmc
add
dec
test
cmpsl
out
xchg
cld
pop
mov
ret
pop
mov
out
mov
mov
enter
rolb
lret
jle
testb
test
or
push
ljmp
fisttpll
xchg
jg
mov
repz
mov
loope
lds
cmp
push
jg
push
lea
stos
jg
aas
aam
mov
lds
push
or
push
inc
mov
push
dec
scas
jg
fwait
or
loop
icebp
add
in
xchg
push
inc
push
in
aad
and
cmp
loopne
orb
test
cmpsl
es
pop
xchg
aas
jge
pop
xchg
dec
jge
stos
jp
scas
cmc
adc
movsl
or
mov
mov
mov
jg
fmulp
add
in
jg
stos
or
dec
pusha
pop
push
xlat
scas
or
loope
scas
xchg
fisttpll
jne
jb
dec
in
aas
jo
xchg
pop
add
ljmp
aad
inc
fdivrl
adc
mov
lock
or
jg
fdivrs
adc
sarb
pop
jg
je
cmp
stos
jg
jg
adc
loopne
lods
jg
inc
jg
shlb
aas
mov
dec
fnstsw
pop
jle
adc
pop
jle
push
aas
inc
stos
aas
loopne
lods
xor
mov
dec
pop
nop
dec
sbb
mov
inc
out
xchg
imul
jmp
xchg
out
or
out
mov
imul
repnz
xchg
out
hlt
imul
sti
add
sub
jnp
hlt
jge
fisubrl
idivb
idivl
fisubrl
add
sarl
mov
push
mov
cmp
loop
add
aas
push
mov
cmp
mov
je
xchg
cmp
mov
mov
adc
mov
or
mov
mov
stc
fidivrs
add
xchg
mov
mov
inc
cli
faddp
push
mov
aas
sbb
adc
loop
sub
aad
xor
rclb
xchg
int
std
cmp
clc
cmp
aas
out
sbb
loop
jmp
pop
call
or
mov
sub
mov
loop
add
jg
cmp
add
in
cmp
jecxz
jne
mov
pushf
out
rol
movsl
es
add
push
hlt
shrw
sbb
imul
or
aaa
or
dec
testl
lock
jg
push
and
jg
ljmp
fildl
push
aas
and
stos
aas
loopne
lods
aas
xor
lods
aas
xor
aas
mov
dec
pop
jle
push
incb
loopne
lods
adc
mov
xchg
xchg
xor
add
std
push
jg
aas
jae
add
mov
jle
mov
mov
fisttpll
cltd
jg
fnstsw
jo
int
cmp
mov
fldcw
jg
jg
jg
or
aas
jo
aas
push
aas
dec
mov
adc
jg
mov
ljmp
in
push
sub
or
ljmp
cld
pop
shl
add
std
aas
loop
stos
jmp
hlt
test
or
test
int
mov
pusha
repz
rorb
or
gs
iret
xchg
and
mul
aam
dec
rorl
add
incb
mov
dec
or
outsl
rcrl
andb
shll
jge
xchg
pop
cmp
add
mov
sti
stos
or
sbbb
or
or
xorl
ret
lds
jne
mov
cmp
inc
ret
or
xor
subl
or
cmpb
fisttpl
jle
into
gs
or
inc
push
ret
cmpb
fwait
sti
push
ret
inc
pop
ret
or
inc
or
stos
cld
xor
shl
or
or
or
scas
sub
sub
push
aas
jg
shll
daa
xchg
or
jg
shrl
in
addr16
mov
jg
hlt
arpl
rorl
inc
push
ret
mov
sbb
mov
xchg
sbb
cmpb
fldl
mov
or
dec
mov
cs
push
jle
shlb
mov
fnstcw
or
ret
cmp
cmpl
sub
jg
bound
mov
add
mov
push
or
es
cmpsb
mov
pop
orb
cmp
repnz
jmp
mov
and
arpl
pusha
loopne
cmp
or
ljmp
aad
xchg
ret
ret
mov
or
clc
fimull
rol
clc
or
stos
or
sbb
cmpsb
mov
pop
bound
ds
mov
jle
jle
ds
xchg
mov
adc
mov
xor
jmp
mov
lea
sbb
mov
rorl
mov
jle
jle
stos
push
incb
addb
add
add
or
push
add
inc
push
inc
cmpb
ffree
xchg
orl
inc
lock
sub
cmp
rorl
xor
sub
push
mov
mov
std
cmpsb
hlt
or
sub
mov
stc
ret
stc
loopne
sub
add
jmp
pop
stos
push
roll
aas
dec
pop
mov
jl
inc
or
inc
push
mov
inc
or
addb
outsl
ret
ds
ffree
xchg
inc
dec
inc
adc
mov
repz
jae
or
ds
xchg
jle
inc
mov
and
stos
decb
cmc
adc
lock
stos
mov
cmp
inc
ret
inc
lock
sub
inc
push
add
ds
pop
into
fs
inc
sub
ret
push
inc
cmpb
fldl
mov
dec
inc
mov
sub
mov
incb
stos
rcll
ds
mov
ds
adc
lock
stos
or
jnp
or
dec
inc
insb
sarb
ret
mov
dec
movl
aas
sbbb
fdivrp
les
inc
lock
sub
ret
push
addl
pushf
in
sbb
fwait
mov
cltd
ret
mov
out
decb
loopne
sub
push
incb
xchg
decb
lock
sub
sbb
lock
sub
arpl
inc
pop
or
jg
push
aas
dec
stos
jg
jg
or
rcr
xchg
mov
jle
jle
popa
ds
inc
mov
add
add
or
add
mov
dec
inc
inc
ret
lock
sub
adc
aad
aaa
in
int3
ss
add
cli
xchg
dec
inc
ret
xorb
mov
mov
aas
push
jle
movsb
ljmp
jb
or
fldl
inc
dec
inc
jg
jg
inc
sub
ret
adc
adc
mov
cmpb
or
jle
or
ret
adc
push
mov
or
insl
jno
cld
add
movsb
jb
or
jnp
mov
mov
add
adc
pusha
out
pop
negb
in
ljmpw
jl
sub
js
ds
shl
jge
cmp
testb
mov
xor
enter
hlt
sub
mov
fmull
ds
and
sbb
cmp
inc
bound
fistpll
divb
icebp
mov
roll
mov
cli
fisubrs
jg
adc
mov
pop
outsb
sub
or
testb
pop
add
pop
cmp
enter
cli
jmp
xchg
push
repz
ja
fisttpll
cmpsb
or
mov
push
imul
mov
inc
into
ret
adc
add
jle
add
sub
stc
in
andl
push
rolb
inc
call
andl
mov
add
loopne
cs
mov
adc
cs
stos
lea
pop
jmp
testl
pusha
pop
add
cmp
addl
ret
jo
adc
lods
xchg
add
ret
addb
lea
xor
push
outsb
jnp
es
mov
add
stos
mov
adc
inc
cmc
add
xchg
jge
cld
in
ret
cltd
jle
mov
cmp
jg
sbb
shrl
inc
push
push
mov
xchg
mov
push
fnstenv
cmc
clc
jnp
sub
cs
fiadds
movswl
out
orb
movl
mov
add
cmp
cmp
xor
or
push
adc
jl
mov
cli
out
xor
mov
nop
jp
or
cli
sub
cmp
scas
mov
std
std
ficoms
in
mov
testl
orb
mov
out
frndint
add
cmp
pop
enter
popl
fidivrs
test
ret
cmpsb
shrl
pop
or
dec
movl
lock
sub
and
stc
and
fsts
out
jbe
cld
cmc
out
mov
fisttpl
add
and
in
push
pop
and
aam
mov
push
ljmp
jb
or
fnsave
out
jnp
std
sahf
lcall
mov
fwait
stos
add
insb
std
inc
mov
test
mov
std
pop
icebp
pop
lret
or
dec
decl
sub
gs
rolb
add
in
nop
push
pop
or
pop
mov
fstpl
pusha
mov
xchg
imul
int
jne
popa
sub
cmpsb
or
roll
or
aas
mov
or
gs
in
or
or
out
or
out
push
mov
and
mov
std
lea
in
mov
icebp
insb
mov
xchg
jg
jmp
test
es
push
clc
mov
cmc
cmpsl
hlt
add
mov
cmc
arpl
cmpsb
loop
mov
stc
clc
pop
movsb
mov
pop
ds
in
out
loop
sub
jl
or
jbe
in
mov
aas
pop
inc
int
xchg
clc
leave
xor
jb
jmp
mov
ss
fistpl
jp
jge
into
addr16
das
pop
shl
in
cmp
fisubrs
add
rcr
pop
ja
ja
mov
daa
out
in
mov
and
roll
jecxz
mov
cmp
cli
hlt
jno
dec
iret
shl
mov
jbe
inc
cmpsl
jge
jmp
test
ja
jg
out
cwtl
out
ss
dec
cld
stos
sub
in
icebp
jmp
jnp
push
mov
and
rcrb
sub
je
mov
inc
ja
loopne
cmpsb
aaa
fdiv
inc
repz
pusha
lock
fisubrs
jl
jg
mov
push
jae
es
popa
insb
xor
or
sub
pusha
or
fnstenv
mov
xlat
fldcw
or
aaa
mov
rorl
mov
sti
rorl
rorl
or
mov
cmp
jnp
mov
or
add
or
jnp
or
dec
dec
sbb
push
lds
ljmp
std
xor
jle
mov
lea
out
pop
imul
xchg
sar
ja
sub
loope
or
test
xchg
or
pop
pusha
paddsb
popa
paddsb
cmp
clc
ss
mov
jg
scas
out
in
sub
cmp
ja
add
hlt
add
testl
pop
in
or
orl
not
xchg
fcmovb
idivb
mov
xlat
rcr
cmpsl
or
mov
lock
dec
repz
or
or
repz
sub
jne
push
jle
or
bound
sbb
push
ss
xchg
or
jmp
mov
or
sbb
in
imul
std
mov
or
mov
mov
ret
add
jae
or
std
or
xchg
in
stc
mov
push
outsb
scas
add
cld
jecxz
roll
push
loopne
add
daa
inc
ljmp
or
jnp
outsl
cld
mov
in
out
cld
mov
inc
divb
push
lods
or
in
addl
pop
or
mov
xchg
rcl
or
or
int
sbb
scas
adc
cmpsl
testl
stc
jne
lret
or
mov
clc
jge
imul
or
insb
scas
fisttpl
mov
pop
imul
or
add
or
add
jbe
out
or
jo
insl
push
cld
out
push
and
or
in
mov
adc
sbb
pop
rorl
out
test
or
push
je
roll
lods
iret
adc
orl
repz
mov
adc
cwtl
mov
or
jae
jge
lret
xor
rdseed
xchg
cmp
addr16
jo
add
cli
or
inc
nopl
jno
or
xor
push
dec
lret
cmp
lods
jno
jl
mov
push
lods
jmp
or
mov
jno
outsl
in
or
or
or
add
dec
movl
loope
repz
cs
fldl
add
ret
sub
inc
push
add
jmp
arpl
adcb
fisubrs
ss
pop
mov
fcomi
or
cmpsl
push
pop
loop
ds
cmc
or
mov
or
ljmp
pop
add
or
mov
out
mov
mov
or
or
subl
inc
ret
xchg
jle
jle
sub
jbe
or
mov
or
or
xor
jmp
popf
xor
stos
mov
push
out
andl
or
jl
or
ss
outsl
dec
xor
sub
or
in
sbbb
or
fnstsw
test
jmp
pushf
outsl
sub
shlb
mov
pop
iret
adc
mov
cs
data16
es
sti
std
iret
test
pop
dec
lods
stos
fldt
out
out
icebp
int3
and
dec
sub
sbb
xor
repnz
stos
hlt
inc
ss
pop
flds
inc
cli
test
std
cmp
addr16
or
out
test
imul
pop
xor
sarl
add
cltd
jp
hlt
pavgw
ja
ret
mov
cmp
xlat
mov
cmp
pop
fsubrs
stc
aas
mov
cmp
rorl
push
cmp
or
stos
xlat
pop
jmp
push
outsl
xor
ljmp
mov
in
andb
cld
int3
jne
sarb
or
call
cmp
push
push
cmp
or
enter
testl
or
pop
jg
out
or
jl
aad
jecxz
xor
imul
push
shrb
ljmp
int
mov
stc
jb
shr
sub
or
or
in
add
rorl
or
loop
pop
mov
cmp
push
mov
repnz
mov
or
ljmp
int3
into
cmp
or
add
or
hlt
sbb
scas
sti
in
hlt
out
pushw
sub
out
insb
mov
scas
test
lods
adc
adc
inc
pushf
in
movb
test
imull
sub
cmc
pop
pop
popf
push
add
or
cs
inc
pop
loopne
pop
outsl
or
pop
cld
ja
adc
push
cmp
adcb
jle
inc
mov
scas
popa
sbb
jl
cmp
jo
ffreep
je
xchg
testb
lods
aam
sub
inc
xchg
cmp
repz
cmp
add
bound
movb
push
or
pushf
call
fdivrl
sub
push
ficoml
out
pop
stc
push
addr16
je
decb
es
cmp
popf
xchg
jecxz
or
fwait
stos
xchg
push
ljmp
sub
xchg
mov
arpl
fidivrs
xlat
pusha
pop
sub
aam
push
cmp
add
adc
in
das
cmp
xchg
sub
iret
sub
jge
add
jnp
ficompl
out
ss
jp
daa
add
sbb
add
in
jl
mov
fiaddl
adc
in
sti
mov
sbb
or
mov
lret
push
clc
inc
movl
or
or
jae
pop
or
fwait
repnz
or
stos
fmull
int
push
or
or
pop
sub
out
add
or
push
jge
jnp
lods
sti
fdecstp
repz
std
lock
fcmovu
dec
shlb
repnz
cmp
cmc
or
jnp
or
jl
sti
jmp
ss
adc
cli
stc
or
insb
xlat
ss
cs
cmpsb
pop
or
push
or
mov
or
loopne
stos
in
or
cld
or
or
jnp
mov
add
or
ja
clc
cmp
sub
bound
mov
push
jb
dec
cmc
aad
icebp
lahf
int3
cli
rcll
cmp
add
jge
out
mov
lock
repz
pop
add
outsl
or
icebp
outsl
push
fidivs
rorl
adc
loop
loopne
xchg
or
or
add
fdivrp
fistpll
or
mov
test
jl
cmp
std
repz
jle
jmp
pop
in
fcom
fsub
roll
or
fidivrs
jne
fcompl
repz
cmpsb
jecxz
outsb
lea
cmp
cmc
std
or
adc
cli
into
or
mov
mov
xor
jl
or
fdivr
andl
lods
or
add
ret
clc
jecxz
add
test
jle
sub
movl
movsl
mov
popf
ds
cmp
mov
hlt
test
and
jno
sti
mov
push
pop
push
incb
inc
sbb
xor
or
sbb
loope
or
js
addr16
mov
xlat
adc
xchg
call
adc
or
fsub
fs
out
scas
mov
and
fldl
cmpl
test
pop
dec
xchg
push
add
jae
jbe
faddl
jnp
in
or
test
out
or
imul
dec
or
push
xor
jl
jmp
das
mov
pushf
lret
test
sub
clc
lahf
fdivrl
clc
cmp
cmp
loope
mov
xchg
call
or
mov
mov
testb
adc
sbb
stos
jmp
cmp
cmp
movsl
fs
adc
mov
outsb
test
mov
xchg
jbe
in
xchg
or
sbb
fcmove
mov
sbb
movl
sahf
imul
pushf
aaa
out
nop
mov
push
cmpsb
or
enter
dec
clc
lds
stos
inc
sahf
cmp
cltd
ljmp
mov
insl
mov
pop
pop
call
mov
lock
jg
push
hlt
faddp
jl
push
sub
mov
add
pop
cmp
adc
adc
cmc
or
mov
sub
paddd
cmp
or
add
loop
mov
sti
jae
xchg
pop
xor
out
lods
aaa
adc
push
fwait
xlat
mov
push
arpl
in
or
and
fistpll
push
aaa
adc
sub
sarb
adc
jl
or
or
or
jb
ret
stos
add
pop
pop
xor
popf
call
or
or
or
mov
mov
or
push
cs
fnsave
aad
mov
xor
cmp
cmc
or
je
jbe
or
cs
jp
fwait
jno
add
xor
stc
mov
movsl
add
hlt
or
push
ss
inc
mov
mov
lds
rol
aaa
add
mov
mov
lds
jge
pop
neg
xor
rclb
dec
notb
adc
ficomps
test
jno
or
xor
pop
sti
hlt
or
mov
stos
or
call
sub
notb
fnsave
repnz
sub
or
pop
negl
push
cmp
repz
xor
mov
or
loop
fcoml
prefetch
sub
lock
aas
sbb
sti
adc
xchg
mov
incl
jp
sti
fucomi
push
or
enter
loopne
sbb
add
add
aad
mov
cs
aas
sbb
cmc
rclb
dec
lock
ds
xchg
cmc
dec
lock
aas
sbb
cmc
lock
sub
cmc
adc
xor
add
in
xor
mov
clc
sbb
cmc
or
clc
jne
ja
je
push
fcmovnb
shll
sbb
cmc
idivl
add
add
lock
fnsave
leave
add
xchg
xor
jmp
fnsave
lock
xor
cs
rclb
hlt
sbb
aad
lret
pop
mov
ljmp
add
cmpsl
push
pop
popa
add
lret
hlt
push
hlt
cmpb
sbb
xchg
leave
dec
jecxz
in
and
xchg
hlt
dec
xor
cli
jecxz
jb
jmp
rclb
pusha
aas
fnsave
xchg
dec
mov
jmp
leave
scas
jmp
lcall
cmp
imul
add
sar
push
add
je
adc
xor
rclb
dec
lock
aas
sbb
adc
adc
xor
sbb
jno
mov
rclb
dec
lock
out
inc
add
add
adc
insb
fdivp
insb
push
add
adc
push
repz
add
jmp
fnsave
lock
add
sub
push
repz
repz
xor
rorb
xor
or
push
shll
rorl
ds
mov
mov
lock
fnsave
cs
fnsave
or
out
pusha
ds
jae
loopne
dec
cmc
leave
add
out
aas
jae
or
sti
cld
stc
push
pop
jecxz
lock
fdivs
rclb
xor
adc
adc
xchg
xor
pusha
cmp
pop
leave
addb
or
sub
xor
cmpb
sbb
aad
jae
or
xor
testb
sar
mov
mov
pusha
or
xor
xor
xor
xor
add
jl
lock
fnsave
xor
rclb
repnz
adc
adc
xchg
repnz
lock
or
dec
repnz
shl
or
stc
in
or
pop
jb
inc
out
push
rdpmc
rclb
repnz
adc
push
xor
pusha
ds
or
and
cmpsb
or
push
fsubs
sbb
icebp
lock
sub
icebp
adc
xor
lock
sub
icebp
fucomi
xchg
sar
sbb
mulb
xor
sub
lock
mov
add
or
lock
jmp
lds
or
push
xchg
dec
lock
mov
adc
mov
dec
lock
rclb
adc
xchg
jno
push
push
xchg
dec
lock
shlb
lock
stos
jno
jno
aas
jno
inc
xor
lret
jno
jno
xchg
dec
inc
jno
jno
add
inc
jno
jno
jmp
loopne
sub
jno
jno
cmp
popf
xor
jmp
rolb
jno
shl
cs
les
jmp
leave
aas
jp
clc
stos
sahf
in
shl
inc
fwait
sarl
rorl
aas
stc
or
je
sbbl
mov
icebp
cld
repnz
jmp
dec
ss
icebp
jbe
mov
pop
jmp
imul
sub
out
or
add
ret
inc
sarb
xchg
addl
scas
mov
adc
int3
int3
dec
adc
dec
or
push
pop
repz
movsl
push
mov
out
ret
or
fadds
mov
std
mov
hlt
movsl
sahf
mov
lret
ds
pop
test
lea
cmp
dec
xchg
cld
fisttps
push
or
adc
ficompl
cwtl
js
cmp
xor
gs
repz
fsubrs
mov
dec
and
sti
pop
adcl
std
push
push
sub
xor
cmp
mov
ret
dec
fisttpl
leave
fisubl
paddw
das
out
mov
std
xchg
mov
nopl
and
sti
cmp
mov
rorb
inc
leave
scas
rorl
pop
jmp
gs
call
or
jge
das
ljmp
mov
ljmp
cmp
rorl
or
sti
mov
xlat
fsubs
psubq
outsl
lret
sbb
rorb
fmuls
or
xor
cs
or
jmp
sti
lret
pop
mov
das
in
or
fnstsw
scas
pop
loope
sbb
mov
std
pop
mov
fisubrl
xor
repz
notb
push
push
or
or
xor
outsl
lret
fisubrl
xor
movsb
pop
push
pop
cli
scas
sbb
push
scas
pop
pop
maxps
bound
outsb
scas
jno
je
ja
jp
jge
cmp
xchg
adc
shl
push
out
out
xor
mov
nop
cmp
lea
xchg
dec
add
in
mov
sahf
iret
int
std
jecxz
lahf
das
aam
test
clc
add
enter
inc
add
std
mov
add
arpl
inc
repz
mov
adc
or
push
add
push
es
add
leave
add
mov
aam
fisubs
cmp
add
pop
xchg
test
daa
mov
cli
aad
jl
std
pop
mov
jno
add
fsubl
dec
neg
cmpsl
jge
inc
sahf
popa
fucom
pop
fs
sbbb
lcall
push
hlt
push
test
mov
mov
mov
pop
in
dec
push
aas
call
sub
add
adc
push
mov
sub
sub
add
sbbb
aaa
and
sbb
xor
mov
dec
or
adc
adc
cltd
jb
sbb
lea
add
dec
fsubrl
adc
push
mov
dec
xor
mov
add
mov
dec
xchg
push
sbb
adc
rcll
sbb
cmp
push
jmp
mov
lods
pop
fwait
movsl
inc
aad
scas
dec
les
stos
push
fcmovbe
loope
loop
scas
or
mov
mov
xlat
inc
mov
mov
into
push
jno
mov
sbb
repz
dec
jmp
push
pop
lods
push
cmp
daa
ret
leave
rorb
lods
leave
mov
mov
inc
push
or
enter
add
cmp
ja
or
sbb
rcrb
jbe
das
out
repz
and
test
shlb
ret
flds
xlat
dec
or
jle
test
into
push
sbb
mov
add
dec
cmovle
into
push
xor
inc
mov
mov
int3
leave
mov
xor
mov
push
dec
add
lret
dec
dec
lock
pushf
mov
or
mov
bswap
fdiv
pushf
or
negl
iret
push
adc
scas
xchg
push
shlb
xchg
shlb
push
mov
fimuls
dec
lods
mov
sbb
dec
push
int
jmp
stc
push
and
bound
mov
mov
add
ret
mov
dec
add
stos
cmpsl
push
add
mov
rorl
outsl
jno
mov
leave
iret
mov
xchg
lds
inc
add
cmpl
ds
mov
jp
cmp
mov
jbe
ss
mov
add
jno
das
out
scas
outsb
cs
lods
insl
add
ljmp
imul
in
movsl
arpl
loop
bound
add
mov
sahf
pop
add
fstpl
lcall
xchg
push
pop
add
xchg
push
push
aad
push
xchg
add
rclb
jnp
fnstcw
lods
pop
inc
lret
sti
pop
mov
fldl2e
mov
movl
mov
mov
dec
xchg
push
or
pop
sbb
int
inc
jnp
lret
out
pop
pop
add
aas
pop
jg
shrl
pop
pop
mov
or
pop
mov
inc
add
and
pop
mov
pusha
and
fstp
mov
aad
dec
movsl
test
in
jmp
test
xchg
adc
popf
xor
outsb
lahf
mov
lods
std
sbbb
mov
out
jno
xlat
xlat
xchg
faddl
and
repnz
add
lods
sbb
or
insl
add
mov
add
adc
lahf
repz
imul
fistpl
jmp
pop
loop
mov
push
dec
dec
pop
mov
xchg
pop
dec
sbb
mov
icebp
sub
dec
mov
mov
popf
test
iret
mov
fsubrs
gs
ljmp
stos
scas
push
mov
push
adc
insl
leave
xorl
mov
cmp
inc
adc
adc
jb
mov
sub
xor
fs
jb
fstl
pop
lret
test
mov
pop
ficoml
mov
push
xor
out
aas
je
loop
data16
stos
mov
jge
xchg
test
push
mov
daa
std
rol
sarb
in
mov
scas
and
dec
popa
mov
popf
cmpsb
test
into
mov
dec
mov
test
inc
sub
or
aad
iret
cmp
adc
fcoml
dec
faddp
mov
add
pop
imul
je
enter
aad
push
cmc
int
dec
jnp
add
add
xor
js
jecxz
call
icebp
cmp
daa
ss
iret
and
sarb
sub
jb
xchg
nop
add
pop
cli
mov
cmc
fistpl
inc
jmp
cmp
add
orb
stos
outsl
out
dec
dec
popa
pop
ret
sti
xor
dec
add
mov
or
mov
mov
fs
cmp
jle
in
jns
sbb
push
sbb
pop
dec
mov
in
es
repz
dec
mov
fst
xor
add
lcall
dec
pop
cmpl
clc
xchg
shrb
data16
or
and
andb
push
pop
aad
sbbl
stc
dec
bound
into
xchg
out
mov
mov
add
push
scas
loopne
mov
cmpsl
and
rcrb
cmp
pop
insl
movsl
imul
xorl
mov
push
jnp
xor
das
int
daa
inc
xchg
lahf
out
xchg
mov
and
movsb
add
subb
dec
or
inc
xor
mov
cmpsb
mov
inc
adc
out
mov
loop
jge
cwtl
jb
int
stc
es
mov
int
mov
inc
add
add
je
dec
xchg
mov
add
mov
cmp
loop
cmp
daa
aas
mov
pop
aaa
add
mov
add
in
shl
jg
jmp
rclb
jl
fdiv
push
das
or
or
or
jl
adc
mov
into
sub
or
pop
mov
shlb
lcall
dec
push
jl
arpl
lock
stos
movsl
ss
dec
divl
enter
into
inc
xchg
cmp
xchg
push
add
int
xchg
cld
popf
mov
stc
mov
adcb
lret
jmp
mov
push
daa
cmp
push
xor
cmp
xor
arpl
loop
cmp
mov
sbb
jl
fbstp
fdiv
loopne
xlat
pushf
ds
mov
pop
movsb
iret
mov
pusha
lcall
inc
mov
pop
scas
cmpsl
mov
enter
xor
inc
movsb
aad
dec
cli
xchg
or
add
jge
push
in
lock
ja
xlat
xor
pop
std
mov
add
sbb
ret
arpl
iret
sub
daa
pushf
pushl
mov
outsb
jle
imul
icebp
sub
sbb
mov
add
test
pop
dec
and
pop
pop
xlat
xor
loopne
jns
sbb
add
push
jnp
ja
test
loopne
mov
orl
out
xchg
inc
jnp
lcall
mov
push
cs
push
jns
pushf
add
adc
imul
or
jmp
and
pop
pop
cmp
mov
mov
std
or
sbb
add
pop
imul
ja
insl
mov
subl
dec
pushf
pop
and
out
pusha
sub
push
cmp
inc
cmp
mov
int3
icebp
enter
add
aad
js
stos
dec
in
cmp
mov
dec
jmp
add
ss
mov
lret
in
dec
loop
dec
sahf
inc
in
orb
pop
iret
pop
add
xchg
loopne
sbb
int
add
jecxz
pop
cmp
add
mov
imul
jne
cmp
dec
xor
and
mov
add
fildll
sahf
xor
sub
sbb
lock
jle
std
movsb
pop
ret
or
mov
lret
add
inc
stos
mov
sbb
cmp
add
jo
sbb
sub
inc
aad
cld
mov
pop
cmc
jns
and
cmpsb
sub
int3
xor
add
nop
gs
pusha
sub
inc
leave
aaa
clc
movswl
jecxz
mov
les
scas
movsl
xor
cmp
shlb
add
push
es
faddl
ficoml
shll
stc
push
mov
add
xor
push
dec
out
inc
mov
xchg
dec
and
push
loop
cli
pop
and
add
mov
add
jnp
aaa
popa
ss
add
test
cli
mov
mov
rcrb
pop
jae
test
dec
add
xchg
adc
add
sbb
les
insl
jb
sbb
add
movsb
push
in
or
xchg
iret
jp
dec
mov
cmp
add
push
pop
sub
icebp
sub
pop
pop
xchg
aam
shll
push
addr16
bnd
lret
std
add
dec
pusha
sahf
cmp
jp
out
adc
shlb
push
mov
es
cmpsb
fidivl
popf
out
add
and
and
sahf
or
divl
fdivrl
mov
addr16
iret
int3
dec
mov
fsubrl
inc
push
out
xchg
imul
out
lret
mov
pop
call
iret
add
cmc
mov
push
lock
popf
dec
popa
or
mov
inc
out
mov
dec
repnz
pusha
add
sbb
mov
jecxz
stos
xchg
cmp
adc
cltd
imul
incl
fists
out
outsb
lock
jne
shll
jp
or
clc
dec
add
dec
popa
outsb
dec
neg
in
and
xchg
test
xor
fs
sub
pop
sbb
loope
divb
fistl
add
in
aas
add
jbe
aaa
shll
pop
push
push
jmp
cmc
sbb
cmp
lcall
adc
lcall
test
sbb
pop
aam
lock
mov
inc
call
lea
xchg
xchg
xor
or
sub
enter
roll
dec
cmc
daa
imul
mov
dec
sub
mov
or
imul
mov
insl
push
btr
enter
push
int
dec
push
into
dec
dec
cs
adc
and
or
mov
push
fxch
adc
insb
lret
xchg
ficoml
add
or
addb
lock
sahf
adc
jne
loop
push
xor
mov
sub
mov
inc
xchg
sbb
cmc
dec
add
sub
add
mov
in
jecxz
loopne
add
sub
popf
pop
insl
rol
testl
mov
ljmp
jae
and
mov
lock
jne
add
aas
mov
jae
icebp
dec
add
lods
push
inc
clc
xchg
add
shrl
mov
sub
insl
repz
cmc
aad
pop
inc
mov
mov
mov
xchg
or
dec
arpl
cltd
notl
xchg
fistl
mov
iret
enter
pop
imul
cmp
push
mov
sbb
imul
mov
xor
dec
and
mov
dec
out
cmp
je
out
das
mov
jge
sbb
push
test
lock
push
loopne
aaa
inc
add
mov
popl
xchg
xor
mov
lea
loopne
rcl
dec
add
lcall
dec
adc
dec
and
mov
jno
cmpsl
mov
sbb
dec
pop
lock
sbb
pusha
iret
mov
shll
inc
int
jbe
insb
pop
cmp
pop
cmp
ljmp
addr16
call
hlt
adcb
outsb
or
xorb
dec
xchg
or
sub
aad
mov
test
push
xchg
xchg
adc
mov
js
imul
xor
jne
ficomps
repz
or
fstsw
stos
add
call
or
dec
in
loopne
push
xchg
push
out
add
sbb
shrl
mov
push
push
inc
adc
or
jcxz
mov
insb
xor
ljmp
cmp
mov
mov
in
rcrb
outsl
add
test
testb
sbb
pop
mov
enter
rcrl
mov
in
xchg
mov
sub
sahf
add
je
add
das
push
leave
xor
icebp
daa
xchg
std
iret
jns
shll
dec
testl
clc
sub
ret
cmp
jno
or
inc
dec
mov
fwait
mov
sarl
adc
es
cmpsb
add
mov
arpl
in
testb
xorb
fbstp
fldl
push
add
jne
movsl
mov
cltd
sbb
add
or
stos
inc
cld
mov
decb
popl
mov
lret
add
push
or
add
lahf
jo
sub
or
insl
add
sub
rolb
pop
push
mov
mov
insl
push
jae
out
add
add
js
ds
add
gs
push
xor
and
mov
push
lahf
repnz
mov
xor
xchg
aaa
add
pop
stos
insb
or
cli
inc
add
cmp
xchg
fsubl
add
sarl
add
imul
push
fwait
jmp
out
out
orb
lock
cmp
pop
repnz
cmpsb
dec
pop
test
in
out
call
add
sbb
jns
jbe
mov
ror
dec
ret
cltd
jg
add
test
fidivrs
jl
addl
cmp
jp
add
movsl
xchg
and
add
mov
inc
xchg
add
or
and
addr16
pop
cwtl
and
rcrl
jg
add
out
pop
cmp
add
ds
dec
nop
aaa
aas
mov
das
sahf
and
xor
pop
mov
add
add
inc
jecxz
push
lret
xor
and
mov
shl
push
mov
mov
xchg
out
ret
adc
pop
rorb
add
push
sbbb
add
loopne
cmp
stos
cmp
sub
inc
fs
subl
lods
lock
js
lods
pop
sub
out
xchg
add
mov
mov
cmpsb
xchg
fnstcw
mov
sub
xlat
pop
daa
jno
jne
push
jnp
or
sahf
dec
movsb
fs
sub
sbb
fwait
cltd
incl
in
lock
into
and
sub
es
and
stos
stos
orl
ja
test
inc
push
inc
and
jecxz
sub
fistl
shlb
into
add
icebp
xor
add
lock
js
pop
pop
xor
insb
add
decl
ret
xchg
xchg
xor
mov
inc
movsb
xchg
add
mov
cmp
sub
cmp
loopne
lret
je
dec
xchg
jl
loop
add
push
shll
mov
sbb
icebp
and
sahf
xor
add
pop
test
fiadds
mov
jne
mov
push
daa
sbb
sbb
or
lods
add
pop
outsb
das
push
cs
sti
or
xlat
mov
add
adc
and
cltd
stc
enter
xlat
xchg
push
mov
fildll
rolb
dec
cmc
inc
aad
xchg
cmp
xor
insl
push
daa
add
fprem
dec
aam
push
rolb
xchg
cmp
cmpsb
add
xor
fldl
icebp
in
out
or
mov
fisttpll
mov
jp
jge
subl
jne
stc
loope
outsl
int
jno
xor
jnp
or
mov
push
adc
loope
call
icebp
pop
scas
nop
stc
adc
add
mov
in
add
loopne
add
shrl
push
adc
add
jp
stc
add
faddp
mov
pop
pop
dec
add
jg
mov
out
pop
xlat
or
mov
loopne
popa
cmpsb
add
xchg
and
cmp
add
mov
test
pop
pop
adc
mov
lds
iret
mov
pusha
dec
cmc
idivl
cltd
in
add
rorl
das
repz
in
popa
add
adcb
jg
hlt
call
dec
sub
lods
ss
xchg
pop
icebp
pop
sbb
or
xchg
sub
fbstp
mov
add
fcmovnu
pushf
xor
call
cmpsb
mov
mov
cmp
bnd
mov
js
fildll
addb
cs
xchg
inc
jle
dec
mov
loopne
mul
cmc
xor
icebp
sbb
std
push
enter
and
enter
sbb
and
test
push
shll
in
sub
xchg
push
negb
repz
and
dec
loope
repnz
popa
iret
pop
out
mov
rep
movd
xchg
icebp
fists
es
sbb
jmp
mov
or
add
outsb
stos
and
mov
adc
pop
ret
push
nop
add
dec
mov
jnp
clc
hlt
add
into
arpl
mov
dec
dec
mov
push
ja
jmp
add
pusha
sub
dec
push
cmc
aam
cli
aas
sbb
sbb
iret
cmp
imul
test
sub
cmp
ffreep
adc
pop
add
shll
xorb
dec
ret
aas
jb
cmp
add
add
sbb
out
mov
or
jg
fisubs
cwtl
xchg
add
daa
std
faddl
add
outsl
shrb
int
jl
insl
add
sbb
jp
mov
xor
mov
into
les
push
push
std
lods
jns
xor
mov
call
jnp
pop
jmp
and
iret
ffreep
inc
add
aad
dec
out
dec
shrl
jne
or
into
data16
dec
roll
test
dec
cld
fisttps
dec
xor
mov
or
or
popa
test
mov
ss
cwtl
dec
add
pmuludq
cmp
das
dec
mov
rcl
dec
mov
cmp
nop
push
mov
add
add
pop
rorb
add
mov
cld
test
out
int
jnp
loope
out
test
nop
mov
sbb
and
push
sub
lock
imul
dec
adc
mov
push
test
aad
or
mov
movsb
dec
push
and
add
loope
fnsave
clc
add
sub
jle
bound
test
pop
lcall
pop
pusha
scas
mov
into
jns
lock
push
cmp
inc
adc
shlb
mov
dec
and
js
andb
scas
fdivrs
pop
xchg
xlat
test
dec
leave
stos
fcmovnbe
test
mov
jmp
xchg
mov
mov
push
add
ds
jle
sti
cwtl
xor
add
sbb
add
xor
popa
cli
jp
faddl
pushf
pop
pop
and
arpl
pusha
out
cs
jp
out
add
pop
btc
cmp
dec
sub
mov
lods
cmp
push
sahf
dec
std
push
push
imul
insl
js
sti
push
iret
out
pop
xorl
and
add
je
sub
mov
mov
dec
jmp
loop
outsl
push
adc
lods
imul
in
cmp
xlat
jle
iret
out
sbb
mov
sbb
mov
ds
popa
mov
sti
mov
dec
enter
dec
cwtl
testb
int3
pop
sbb
mov
mov
outsb
mov
outsl
jp
int3
mov
mov
ficomps
loopne
add
out
lret
shll
cmpsb
dec
pop
gs
data16
add
mov
in
test
movsb
pop
lcall
lret
adc
lcall
stos
xor
cmp
add
xchg
sub
cmc
mov
jecxz
cli
mov
out
jge
into
fmul
push
add
enter
or
jb
push
xor
ja
sbbb
add
mov
loopne
add
fsubrl
push
mov
add
dec
dec
xor
inc
inc
repz
sub
add
inc
pusha
cmp
daa
rolb
pop
pop
fs
sbb
jg
add
sbb
mov
cwtl
loop
fbstp
enter
add
scas
sbb
jmp
xor
cs
cmc
enter
out
and
mov
xor
std
movsb
inc
or
add
inc
jnp
sub
std
cmp
fs
xchg
add
mov
mov
add
lods
imul
xchg
je
push
lods
dec
mov
mov
fidivl
mov
ficoms
xchg
movzbl
dec
add
lret
add
bound
mov
mov
xor
dec
sub
push
popf
lcall
inc
and
fldcw
arpl
dec
push
add
lds
orb
rcll
dec
add
pop
jb
push
daa
cmp
add
loop
pextrw
insb
lods
push
mov
std
dec
add
or
gs
mov
dec
test
add
loop
sbb
cmc
sub
jle
fisubrs
and
push
dec
orl
cmp
push
sub
inc
or
popa
sti
out
arpl
and
add
std
dec
xchg
ffree
mov
inc
fiadds
pop
inc
sub
or
cmp
ds
cwtl
call
mov
sub
idivl
fsts
add
mov
push
add
aad
sbb
decl
rcr
cmp
imul
and
or
insb
dec
stos
inc
rolb
lods
in
mov
int
sarl
fwait
mov
jns
push
rorb
or
add
xor
rorl
pushf
jo
andl
inc
sub
adcb
cld
adc
dec
shrb
xchg
test
xlat
xor
inc
nop
dec
mov
push
testl
ror
jbe
mov
fistl
add
cmp
ret
add
sbb
inc
push
dec
aam
push
shlb
leave
cmp
icebp
mov
push
or
dec
mov
adc
or
add
push
inc
mov
or
push
mov
in
mov
icebp
add
fidivs
in
jle
dec
lock
inc
add
inc
xor
add
mov
fst
das
pop
scas
dec
jmp
add
into
rorl
out
jns
and
jno
aam
shl
outsl
jmp
mov
lea
call
xlat
ds
add
jg
in
into
dec
xchg
sbb
test
sub
movsb
push
add
lret
pop
xor
jecxz
and
shll
in
jmp
xchg
push
ret
cmp
and
xor
and
xor
rcr
xor
sbb
cld
sbb
push
movsl
push
jmp
hlt
push
popa
jmp
push
inc
inc
push
test
xlat
add
dec
or
rcl
enter
into
mov
scas
add
cmp
add
rcll
icebp
push
cli
push
sbb
pushf
movsl
sub
movsb
inc
sbb
push
ds
dec
jne
psraw
or
dec
hlt
nop
enter
lods
test
sbb
mov
aas
push
jae
cmp
mov
mov
cmp
das
and
filds
dec
cmpsb
insb
daa
addr16
fldcw
push
mov
or
xor
imul
outsl
push
inc
cmpb
add
mov
pop
aas
mov
add
push
ficoms
mov
outsb
sti
mov
in
sbb
das
dec
mov
inc
add
adc
lea
stc
mov
sub
enter
sub
dec
pop
inc
xor
add
push
mov
push
out
and
iret
hlt
jecxz
push
or
ja
in
mov
sub
cmp
ret
and
into
push
xchg
mov
dec
xchg
sbb
pop
ja
shl
lret
mov
push
call
gs
cld
lret
sub
add
bound
mov
sarl
xor
ss
xor
lea
push
mov
mulb
sbb
dec
push
push
repnz
jns
mov
xchg
sub
test
push
add
insl
fwait
jg
jnp
ljmp
je
fstps
dec
jp
negb
fimuls
int
inc
jp
mov
pop
add
shl
bound
mov
fldl
cmc
mov
shrb
mov
push
add
adc
ret
jmp
mov
stc
mov
add
stos
out
bound
or
sub
mov
scas
mov
jle
cmpl
sti
movsl
add
gs
lock
jno
mov
mov
popf
mov
add
push
daa
pop
jns
mov
mov
sbbl
cmp
insb
mov
add
aaa
cmp
in
popa
and
pop
or
pop
push
xor
lock
dec
dec
xor
imul
add
pop
mov
les
mov
lods
repnz
les
imul
push
test
pop
fwait
gs
cs
test
sbb
or
xchg
sub
dec
loopne
xor
xor
xlat
ss
aaa
testl
repz
and
add
inc
out
mov
add
sub
rcll
jg
push
pop
dec
int3
faddl
arpl
popf
adc
mov
sub
enter
fbstp
and
sbb
inc
daa
push
sub
add
dec
repz
jne
scas
imul
imul
dec
stos
fildl
repnz
ja
out
cmp
xlat
and
inc
and
mov
rolb
sbb
xor
sub
mov
xchg
call
add
or
cmp
mov
mov
cmp
iret
addr16
pop
xorl
and
js
mov
jmp
stos
sbb
xor
fists
mov
rcrl
dec
int3
lds
add
push
cmp
aam
ficomps
lret
test
jl
xchg
divl
aad
insl
mov
addb
xor
mov
mov
cmp
mov
pop
inc
rolb
sub
popa
pop
push
dec
push
ffree
inc
add
or
dec
and
sub
dec
add
inc
int3
pop
cmp
andl
or
dec
shll
sub
push
push
mov
adc
sar
push
push
sbb
fwait
mov
and
and
inc
jmp
mov
and
sbb
push
das
push
test
in
xor
lock
cmp
sahf
push
repnz
and
push
adc
iret
jl
dec
in
in
mov
add
or
cmp
filds
ret
add
loop
pop
rcl
dec
xchg
sahf
lret
add
push
into
loopne
and
in
mov
mov
rdmsr
fcmovnb
pop
sbb
aas
cltd
pop
jp
movsb
adc
and
and
push
int
cmp
loopne
clc
inc
pop
or
sub
fs
fbld
loop
inc
outsl
rolb
enter
mov
pushf
cmp
push
push
cli
sbb
add
mov
pop
in
xchg
out
add
out
inc
insb
shll
add
loopne
out
xchg
jno
and
shrl
xor
cwtl
add
mov
jae
xorb
je
mov
rol
out
mov
icebp
jge
lock
fwait
add
add
adc
pop
add
lods
repnz
rolb
and
outsl
inc
adc
ret
jl
push
pop
nop
stos
pop
pop
pop
sub
scas
test
call
add
pop
insl
ljmp
shll
sbb
add
loopne
mov
out
insb
add
mov
adc
fildll
scas
in
dec
dec
jecxz
ret
inc
add
int
mov
mov
in
sub
insb
lret
xor
imulb
add
adcl
jle
cltd
mov
fdivr
lock
add
push
mov
mov
xchg
cwtl
pop
lods
mov
add
in
fcoms
add
add
rcl
jp
push
push
mov
cltd
notl
ficoms
leave
ja
cmp
mov
outsb
pusha
or
icebp
xor
les
pop
push
add
rcrl
test
inc
jno
add
sbb
outsb
int
mov
inc
xchg
mov
mov
sbb
inc
jmp
xor
rorl
sti
xchg
sub
xor
or
cmp
pop
lds
add
inc
movsb
rolb
xchg
lret
xchg
vmovsd
adc
dec
sbb
xchg
mov
push
push
rorl
f2xm1
add
xchg
xchg
add
shll
add
mov
into
lods
imul
sub
add
out
sub
dec
sarl
jp
fildll
mov
xor
add
out
push
cli
int
mull
gs
sbb
mov
jp
mov
iret
mov
out
sbb
add
in
mov
ss
fiaddl
sarb
mov
cltd
mov
rclb
dec
lret
mov
movsb
rcrl
push
push
cmp
sbb
push
inc
imul
xchg
loope
fistl
into
icebp
cmp
lcall
in
bound
add
jb
xchg
xor
out
add
in
xor
mov
repnz
mov
leave
lcall
ja
pop
push
add
imul
lea
add
dec
add
xlat
das
cmp
inc
pop
jno
push
and
mov
dec
icebp
xor
add
outsb
push
mov
adc
mov
mov
push
inc
sbb
pusha
adc
adc
cmp
add
add
push
add
mov
mov
cli
xchg
mov
aad
cmpl
fwait
cmpsb
aaa
add
dec
sar
sbb
hlt
add
leave
repnz
ds
and
push
and
sbb
insb
lods
inc
or
outsl
dec
dec
notl
pop
xchg
adc
add
shll
jne
daa
sbb
inc
mov
jp
test
add
ret
xor
addb
clc
pop
mov
pusha
add
cmp
fwait
dec
pop
inc
in
insl
add
and
pop
jne
in
mov
dec
pop
xlat
push
sub
fimull
lret
push
out
dec
fisubrs
rorb
fisttps
xchg
cmp
or
mov
pop
jo
out
mov
lcall
stc
mov
clc
loop
pavgw
cmc
filds
push
add
ja,pn
ss
inc
jl
sbb
fs
cmp
dec
iret
lea
cmp
sub
push
xchg
add
xor
rcll
es
add
sub
lods
stc
sahf
dec
pop
cmpsb
push
jae
pusha
fwait
mov
add
pop
adc
call
and
cmp
lret
mov
mov
xchg
lock
dec
xchg
js
push
jecxz
das
mov
fstl
push
hlt
dec
popa
jbe
outsb
das
jge
repz
mov
loopne
add
add
popa
push
xchg
pop
jo
jb
dec
xor
cli
shrl
movsl
fdiv
sbb
cwtl
xor
xlat
sub
into
icebp
push
add
sbb
cmp
popf
mov
and
dec
cmp
push
xchg
iret
mov
fmul
push
add
push
mov
lock
xor
cld
sub
xlat
jmp
add
cmpsl
data16
xor
mov
add
aas
mov
mov
outsl
add
mov
test
stc
jg
icebp
add
inc
daa
mov
sub
add
imull
push
stos
add
aam
mov
or
in
cmpl
xor
int3
addb
movsb
shll
xchg
sbb
mov
lahf
imul
and
pop
icebp
nop
iret
xchg
sti
cwtl
sbb
or
mov
pop
dec
divb
mov
int3
repz
mov
mov
jbe
out
and
add
add
lock
rcrl
cltd
push
sub
xchg
in
cmp
testb
test
add
leave
sti
adc
sub
mov
jae
push
les
sahf
fimuls
dec
add
inc
loop
sub
iret
addr16
xor
fists
bound
lods
jmp
inc
jmp
inc
pop
mov
dec
dec
sbb
mov
jle
mov
loopne
pop
sbb
lret
push
xor
out
out
in
and
dec
push
stc
mov
loope
leave
shrl
add
xchg
shlb
add
int
les
jg
cmp
pop
sub
and
loope
testb
call
mov
add
jmp
movsb
ds
ret
mov
push
rorb
xor
sbb
xorb
dec
stos
fcoms
sti
jg
bound
mov
lods
imul
pop
add
cld
jmp
sbb
dec
repnz
fnstcw
dec
and
push
pop
adc
mov
stos
js
test
xor
mov
pusha
testb
push
mov
sbb
xor
rolb
jno
push
jl
xchg
mov
shlb
into
mov
out
fisubrs
inc
std
xchg
ljmp
cmpsl
stos
cld
and
shll
push
cmp
sbb
pop
add
mov
insb
rorb
out
mov
xor
in
mov
sub
gs
xlat
stc
ss
movsb
out
mov
jg
dec
andl
rcrl
lods
ret
fimull
int
add
stc
pusha
xor
dec
cmc
je
mov
xchg
jbe
jg
jmp
sbb
sti
shll
lods
dec
mov
cmp
leave
aam
shlb
roll
loop
add
cld
mov
jl
in
add
mov
fisubl
dec
cltd
cmp
mov
jge
loop
lret
xchg
jecxz
cs
adc
aaa
or
ss
or
push
enter
jbe
xchg
pop
adc
cltd
jbe
loop
jo
out
rcrl
je
jge
out
fmul
inc
xchg
imul
test
lea
pop
xchg
test
adc
jmp
adc
dec
std
xorb
inc
push
mov
push
jmp
rcrl
push
mov
aaa
inc
jmp
cmp
dec
rcr
fs
inc
into
and
dec
movsl
jbe
daa
test
iret
add
outsl
hlt
imul
sub
in
das
push
jne
std
mov
fisttps
xchg
add
jne
aam
sub
push
cmp
mov
dec
ret
jmp
mov
mov
cltd
cltd
add
into
jl
jge
jmp
enterw
inc
hlt
inc
lret
push
ror
ds
jo
push
pop
adcl
cmp
sarb
mov
xor
mov
dec
pop
xor
jb
dec
cmp
and
sbb
lea
pop
pusha
jo
mov
scas
add
sub
rol
in
dec
mov
and
mov
loopne
idivl
imul
and
mov
pushf
sbbb
loopne
adc
mov
inc
and
sub
hlt
clc
popf
mov
xchg
mov
or
into
push
aaa
mov
scas
cld
out
ss
aad
add
mov
push
dec
iret
inc
out
lahf
fwait
and
cmpsb
adc
fsub
or
push
add
and
sbb
leave
cmc
xor
fistpl
sbb
aam
add
les
pop
xor
xchg
out
xchg
dec
push
cmp
enter
pop
mov
scas
popa
add
jne
sbb
cmp
and
jns
push
pop
push
adc
bound
lods
dec
inc
repz
mov
sbb
dec
mov
pop
fbstp
lods
add
out
mov
iret
sbb
xor
int3
aas
dec
jle
stos
bound
cltd
es
jecxz
mov
clc
fcompl
fdivr
mov
mov
pop
add
adc
subb
lcall
push
mov
out
stc
jne
les
inc
sub
sub
or
xor
neg
incb
ds
add
cwtl
enter
pop
or
mov
jae
mov
aaa
cltd
or
jnp
push
inc
sbb
add
imul
add
fwait
mov
adc
pop
sub
ret
xchg
inc
add
fidivrl
or
xlat
dec
pop
or
add
mov
xor
sahf
out
loopne
cmp
aam
push
imul
push
or
lods
adc
stc
test
imulb
push
enter
dec
cmpsl
loope
sub
jecxz
xor
xchg
dec
aad
pop
dec
out
sub
dec
dec
push
push
fmuls
mov
cli
loope
xchg
cmp
push
mov
add
inc
pop
lock
filds
dec
pop
out
add
sub
jne
sub
add
mov
adc
mov
lcall
xchg
insb
iret
xor
in
push
push
sub
dec
pop
filds
add
mov
mov
arpl
jae
sbb
mov
loope
lods
add
inc
dec
jle
xchg
fdivrp
stos
mov
sarl
data16
mov
sbb
addb
cmp
push
movl
test
lahf
shll
mov
inc
jl
lock
mov
jb
add
clc
sbb
inc
dec
dec
shrl
pop
add
cltd
cmp
mov
sbbl
adc
bound
test
iret
daa
loopne
js
fcoms
and
rcrl
dec
cmp
pusha
sub
rcrl
lea
xor
xchg
and
test
mov
ds
lods
imul
sbb
and
push
lock
add
fs
push
popa
mov
rorl
enter
add
imul
add
xlat
mov
mov
ret
add
and
push
add
jae
push
jbe
insl
dec
pop
adc
and
mov
je
jnp
cmp
mov
fcoml
jge
insb
pop
dec
xchg
xlat
lret
cs
add
aam
out
push
xor
add
arpl
popl
jo
shrl
add
push
adc
jbe
pop
dec
push
int
mov
stc
xchg
lret
inc
imul
dec
jne
outsb
daa
sub
jb
add
nop
sbb
popl
xchg
inc
push
aam
aam
xchg
sub
dec
scas
pop
roll
std
push
insl
inc
xchg
jnp
iret
push
push
cs
mov
mov
ret
sbb
add
stos
outsb
adc
rorb
leave
cmp
imul
ds
out
mov
roll
fst
arpl
ret
cwtl
xchg
add
jle
adc
aaa
js
loope
mov
adc
pop
inc
add
mov
pop
cltd
pop
adc
push
roll
add
and
sbb
push
scas
sbb
ss
pusha
movsb
bound
fbstp
push
popf
mov
ds
mov
daa
cmp
xchg
inc
shrl
sub
dec
xchg
jno
call
aam
iret
outsb
pop
pop
xchg
test
cwtl
lcall
add
mov
outsb
push
inc
fwait
add
call
pop
mov
lods
mov
cs
js,pt
xchg
add
add
jo
add
jg
xor
mov
or
push
aam
inc
jmp
push
fdiv
sub
push
int
daa
dec
mull
xor
mov
add
jmp
xchg
pop
in
aaa
push
ret
inc
popa
shll
xchg
cmp
add
cmp
lcall
insb
shll
and
push
xor
adc
dec
mov
call
mov
add
adc
mov
or
loope
cltd
mov
daa
add
mov
sbb
jae
int3
xchg
push
or
pop
dec
outsb
add
sub
mov
outsb
pop
dec
sbb
jbe
or
xor
ret
lcall
loopne
add
xor
xchg
sub
push
jns
lahf
pop
jb
mov
les
insl
inc
fistps
mov
push
add
cld
add
or
or
ss
bnd
xchg
or
inc
and
incb
cwtl
push
shll
xchg
icebp
jmp
sbb
cltd
loop
mov
imul
mov
bound
jge
std
icebp
push
add
jo
and
mov
add
fnstenv
shlb
loopne
add
push
aad
add
sbb
or
and
popa
cmp
lock
dec
fstpl
shll
xor
ds
xor
inc
dec
add
lret
inc
add
fcmovb
mov
xchg
push
sbb
test
cwtl
xchg
xor
shll
adc
jne
add
xchg
sbb
shr
scas
jecxz
pusha
mov
sbb
push
add
or
stc
clc
xchg
ljmp
lock
icebp
xorb
adc
test
dec
dec
lods
sarb
jne
dec
test
xor
ss
sbb
dec
mov
cli
and
repz
lock
imul
lcall
hlt
xchg
mov
jo
fistps
cmp
pop
add
xchg
stc
fimull
jnp
daa
jle
insb
jmp
dec
jl
or
mov
mov
mov
xor
push
mov
test
mov
das
scas
pop
insl
rorl
add
mov
jb
fcomip
gs
lods
add
rcrl
clc
add
shlb
dec
imul
shrb
js
ds
push
daa
jp
out
xchg
das
add
cmp
xor
rolb
or
and
jl
mov
adc
or
pusha
xor
cmp
outsb
or
popa
into
push
push
out
lock
mov
xchg
test
mov
add
imul
pop
pop
add
mov
inc
ret
insl
test
filds
sbb
enterw
pop
movsb
push
shrl
lods
mov
repz
xchg
dec
pop
cmpsl
movsb
repz
jbe
xrelease
sbb
sbb
in
and
sbb
imul
or
sbb
xor
dec
push
fistps
or
dec
cmp
cmp
in
les
pop
jl
imul
popf
push
imul
data16
and
sbb
or
and
dec
stos
negb
ja
adc
inc
pop
clc
and
dec
cmp
iret
cmp
pop
cmpsb
mov
hlt
popa
dec
lods
push
mov
and
ja
or
add
inc
or
lea
xor
ja
or
or
lea
sbb
and
iret
bound
adc
adc
push
lea
jl
fisttps
inc
roll
cli
adc
stc
shlb
scas
or
rcrl
outsb
add
lcall
mull
rclb
into
adc
ljmp
ja
sti
sub
lret
popa
scas
push
bound
or
and
lock
inc
repz
mov
insb
jle
jecxz
aam
add
cmpb
imull
pop
shr
adcl
test
adc
cmp
shrl
aad
negl
push
fisttps
jo
cmp
rcrl
xchg
arpl
push
xchg
rorl
xlat
add
aad
mov
mov
add
fnstenv
or
cwtl
insl
pop
pop
stos
dec
clc
sbb
addr16
mov
add
mov
cli
nop
out
fisttps
cmp
dec
lahf
or
call
ljmp
jge
add
lods
lock
sbb
dec
add
and
pop
dec
adc
fidivs
dec
arpl
cs
mov
jno
add
jb
cltd
mov
sahf
add
call
ss
int
dec
insb
sar
divl
dec
or
sbb
shrb
mov
mov
xchg
int
notl
dec
pop
sbb
shrd
push
sub
adcl
stos
mov
out
mov
ds
xchg
mov
mov
mov
cltd
push
dec
push
cmp
jo
jp
aam
iret
mov
sub
shll
jmp
test
repz
jmp
adc
cli
dec
mov
jmp
leave
sbb
mov
out
lea
lcall
xchg
into
xor
add
sub
mov
mov
ficoml
push
xor
sar
dec
adc
mov
sbb
add
jo,pt
ja
or
cs
adc
lock
add
inc
pop
rclb
sbb
das
std
sbb
xor
mov
dec
lea
outsl
repz
inc
getsec
xchg
and
inc
mov
add
xchg
lret
popf
inc
lock
sbb
movsb
cmc
and
shlb
push
push
cwtl
dec
xor
repz
loope
cmpsb
in
xchg
sti
push
add
inc
test
imul
xchg
or
movb
insb
aaa
jnp
mov
push
aam
add
andl
in
jbe
cmp
int3
test
push
into
out
cmp
loop
cs
insb
jg
push
loope
add
xchg
sbb
sbb
add
movsl
icebp
xor
inc
nop
sbbb
adc
mov
push
stos
cwtl
push
cmp
lods
sbb
lahf
rol
icebp
xor
or
sarl
sbb
adc
pop
cwtl
mov
call
jo
mov
dec
outsb
mov
cmp
inc
add
sub
cli
jnp
clc
mov
mov
in
dec
orl
inc
jle
xor
mov
cmpsb
stc
mov
nop
and
mov
mov
dec
sbb
rcrb
mov
cwtl
dec
sbb
in
mov
aam
add
xor
sub
fdivrs
cmpb
sub
loop
cmp
sub
sub
out
pop
shlb
shrb
add
aas
sbb
xchg
add
inc
mov
aad
iret
push
mov
outsb
and
in
pusha
mov
das
xor
mov
out
sub
aam
mov
lock
cmp
ds
xlat
adc
push
lret
add
add
insb
mov
xor
xchg
bound
sub
and
out
or
dec
mov
inc
popf
sbb
cmp
pushf
cmp
push
outsb
cwtl
push
sbb
and
cmp
dec
std
xchg
mov
sub
add
sbb
or
inc
cmpsl
and
inc
sub
mov
aas
je
and
or
testl
jo
cmc
adc
mov
jp
dec
rolb
or
shld
add
das
add
jecxz
ror
add
adc
cmc
inc
sbb
lcall
movsb
dec
dec
icebp
mov
out
mov
add
mov
add
ljmp
push
mov
xlat
test
imul
pop
xlat
dec
test
divl
cs
cmp
add
mov
shll
fistl
mov
fdivr
pop
out
xchg
mov
scas
cmpsb
or
adc
dec
rcll
fbstp
add
lock
addl
and
test
jmp
xchg
jmp
leave
cld
push
nop
lea
cmp
ljmp
mov
sub
mov
mov
icebp
pop
add
xor
xor
mov
nop
jne
xchg
icebp
in
add
mov
xor
mov
stos
jge
daa
dec
lds
sbb
xor
rorl
xor
pusha
cmp
sbb
aas
adc
adc
scas
xor
lods
repnz
mov
rcrb
and
rorl
xor
xchg
inc
mov
adc
rorb
push
lock
scas
mov
cmp
je
das
dec
mov
cltd
mov
pop
test
sub
pop
cmp
iret
adc
sbb
lret
fsubrs
push
rolb
sub
sarb
xlat
xchg
inc
pop
pop
mov
orl
xor
sbb
dec
sbb
outsb
dec
add
fcompl
mov
fiadds
push
insl
ds
in
xchg
dec
cmp
sbb
xchg
fdivrs
rclb
jmp
lcall
xor
pop
cmpsb
fcmovnb
pop
es
cmpsl
cmpsl
pop
test
les
xchg
cs
add
add
out
fnstenv
and
add
adc
mov
add
adc
lea
shlb
lock
iret
xchg
sbb
push
xor
sub
shll
cmp
inc
inc
in
mov
rep
arpl
subl
stos
rol
mov
xchg
rolb
rcrb
mov
push
pop
push
jne
sub
add
push
ljmp
xor
jae
dec
ss
dec
stos
mov
test
jmp
sahf
inc
push
or
dec
dec
rol
mov
add
pop
and
sahf
jno
cmc
aas
lret
add
ljmp
mov
xlat
out
daa
or
lods
inc
add
mov
push
mov
sbb
dec
movsl
daa
mov
or
ret
call
push
sub
push
aaa
bound
or
fs
xchg
add
pusha
cmpsb
dec
push
rolb
test
cmp
popl
dec
inc
mov
aas
adc
push
mov
into
and
adc
rcl
sbb
add
sub
dec
cmp
mov
sub
hlt
xchg
sub
dec
push
inc
or
div
scas
mov
add
xchg
mov
push
mov
adc
les
int
mov
cli
cmp
lret
outsl
sbb
es
and
cld
cmc
adc
adcl
cmpsl
out
lea
lret
mov
pop
push
push
push
ljmp
jecxz
outsb
iret
adc
pushl
add
xlat
and
scas
push
xor
mov
test
iret
inc
cwtl
aas
mov
je
rol
sub
fstpl
cmp
add
int
inc
dec
dec
push
out
gs
add
lds
sbbl
scas
mov
push
ljmp
and
push
xlat
lret
or
into
out
test
pop
fs
xchg
arpl
adc
adc
mov
jp
pop
and
adc
jae
add
stc
outsb
push
dec
mov
out
lcall
xchg
dec
sbb
in
jae
test
js
push
dec
inc
cmp
enter
sarb
add
sub
dec
mov
mov
rcr
bound
or
and
imul
ljmp
mov
push
add
push
mov
add
adc
in
bound
xor
lods
out
jle
jns
add
or
jmp
add
out
popa
aas
icebp
dec
inc
das
loopne
jo
bnd
popf
data16
mov
pop
add
jmp
pop
mov
adc
cmp
ss
pop
sub
data16
and
daa
test
mov
push
xor
xlat
das
mov
jbe
ds
ja
inc
fbld
mov
loope
movl
xchg
mov
add
cld
dec
dec
jae
inc
mov
movsb
sub
flds
push
add
dec
push
lret
pushf
push
cmp
mov
out
pop
jle
test
mov
lret
add
ud1
imul
out
add
rcrl
pop
cmp
pop
lds
out
fimuls
aaa
sub
add
add
add
inc
pop
dec
jg
mov
xchg
lcall
cmpsl
xchg
dec
imull
cs
xor
push
testl
out
mov
dec
mov
pop
mov
fstpl
movsl
xor
dec
imul
mov
jg
addb
loopne
sahf
stos
fisubrl
shrl
mov
push
push
cmp
repz
xor
cmp
jl
or
jae
push
add
sbb
add
dec
les
aaa
pop
add
pop
inc
mov
rcrl
dec
cs
mov
xchg
insb
add
push
and
fbld
jne
std
mov
aaa
out
inc
mov
and
xchg
mov
es
sub
mov
sbb
fisubl
pop
add
aas
je
push
xchg
add
lods
sti
inc
gs
frstor
pusha
shrl
aaa
add
leave
jne
scas
movsb
push
mov
dec
cmp
aaa
add
insl
xor
mov
fisubs
imull
mov
test
addb
add
xchg
sbb
aaa
xor
mov
xor
xor
pop
push
mov
jle
push
push
lret
repnz
aam
lcall
inc
cmp
sbb
inc
mov
dec
dec
icebp
jmp
jo
iret
cmpsl
pop
aad
pop
in
push
fwait
mov
dec
jecxz
in
push
xchg
ficomps
add
inc
popa
sub
stos
pop
mov
lahf
orb
pop
add
js
and
cmpsl
iret
xor
xchg
jmp
std
stos
pop
jp
icebp
test
mov
jmp
add
xor
dec
cmpl
fldl
shlb
pop
cmp
cltd
enter
add
jmp
and
lret
xchg
xor
or
xchg
adc
push
jp
add
scas
ss
rol
cltd
add
jge
pop
inc
adc
ds
push
iret
in
push
arpl
iret
out
add
mov
call
adc
mov
mov
xor
rorb
push
jg
mov
dec
lret
test
loop,pt
fcomps
loop
jae
add
mov
incb
cmp
jp
mov
dec
jmp
dec
je
in
sti
sahf
sub
add
insl
push
loopne
sub
out
xor
pop
mov
addr16
ds
cmpsl
fsubp
fistpll
stos
add
icebp
xchg
bound
imul
mov
iret
frstor
jmp
and
mov
add
mov
mov
add
or
mov
out
cmovne
fwait
sbb
inc
xchg
shrb
add
imul
pushl
add
daa
xor
xor
add
je
leave
pop
jp
xchg
push
sbb
add
dec
inc
insb
ret
cwtl
fistpl
rol
add
mov
add
cltd
gs
mov
pusha
xchg
movsb
loopne
xor
dec
mov
add
push
incb
cmpb
rclb
inc
iret
sub
das
add
dec
jge
jnp
rcr
add
adc
ss
out
insl
fs
test
add
xor
rolb
mov
lock
sub
popa
in
rcrl
scas
add
addb
cmp
sbb
std
pop
add
adc
inc
iret
les
pop
push
leave
rcrb
sti
add
sbb
iret
mov
imul
iret
mov
xor
xchg
add
gs
adc
xor
mov
and
mov
or
rcr
xor
andps
pop
pop
pop
filds
or
rcll
outsb
xor
fdivr
cmc
int
jl
cwtl
loope
xor
add
je
sbb
jnp
jg
sti
and
rol
xchg
ret
mov
out
push
mov
mov
hlt
xor
add
enter
ds
jge
aad
add
mov
ret
add
mov
cmpsl
add
in
mov
add
pop
jne
pop
jmp
mov
push
cs
or
mov
xchg
inc
jge
pop
outsl
dec
push
adcb
pop
fxch
and
popf
das
xchg
lea
outsb
xor
lea
push
daa
adc
outsb
inc
xchg
sub
js
insl
sbb
je
sub
roll
mov
xor
lods
xchg
shl
xor
mov
inc
push
xchg
sub
add
rolb
cltd
mov
fists
test
sbb
jne
or
push
mov
cmp
mov
xchg
enter
les
add
cmp
add
lret
push
xchg
jg
icebp
scas
jl
inc
jns
jnp
xor
sahf
xor
pop
rolb
xor
pop
les
movsl
aas
xor
mov
fdivs
add
sub
bound
movsb
mov
std
dec
popf
jb
mov
mov
ja
xor
jo
mov
icebp
fisttps
push
shll
shlb
leave
pop
and
push
cmp
mov
mov
out
push
xlat
pop
mov
fldl
fucomp
add
jmp
xor
shrd
sub
push
addl
xchg
ljmpw
cmp
xor
movsl
xor
mov
and
mov
push
pop
imul
and
int3
clc
inc
sub
sbb
xchg
jl
pop
mov
adc
std
push
flds
fistpl
ss
mov
nop
addr16
mov
push
imul
in
loopne
jno
popf
add
mov
insb
xchg
pop
dec
jns
inc
dec
add
mov
pop
xchg
lret
cmp
jle
pop
add
shl
rclb
icebp
ja
lret
and
movsb
aam
xor
fidivs
jne
mov
out
mov
repnz
rorb
test
repz
jl
add
mov
mov
cmp
mov
mov
jo
dec
jns
pusha
jecxz
pop
add
pop
sahf
xor
add
popa
mov
leave
aaa
std
sbb
jmp
push
mov
jl
nop
dec
xchg
enter
fnstenv
xor
iret
test
sub
jp
jo
and
out
aaa
xor
push
sbb
and
sub
insb
pop
cmp
in
iret
out
int3
inc
xchg
in
xlat
rcrl
lea
ret
sti
xor
xchg
test
lods
jl
les
xchg
xchg
sub
dec
mov
pushf
out
dec
pop
in
in
adc
xorl
dec
aad
add
rol
and
iret
add
inc
xor
jne
mull
jl
add
cmp
popa
mov
out
sbb
jne
add
ljmp
jecxz
and
xchg
push
add
xor
dec
push
dec
in
stos
out
pop
test
mov
add
cmp
pop
jp
insb
popl
add
mov
aam
jnp
add
test
shll
imul
push
pop
out
and
iret
movsb
icebp
add
pushf
jno
fstl
mov
jg
inc
aad
add
and
cmpb
sbb
jo
cs
popa
lods
lcall
adc
sub
sub
add
or
fnsave
mov
sub
shrl
xor
dec
fs
rolb
add
adc
stc
loope
add
and
fcoml
aas
enter
add
sysret
cs
xchg
jo
lcall
inc
xlat
and
add
dec
aad
fstpt
mov
int3
mov
sahf
mov
xor
push
jle
icebp
xor
cli
mov
lods
or
fsincos
push
and
aam
inc
je
xchg
scas
cmp
fistps
test
inc
hlt
loop
and
cli
addr16
mov
arpl
pop
or
test
outsb
push
cltd
sbbl
aam
add
mov
pop
mov
addb
movsl
cltd
push
mov
adc
push
stc
sub
pop
mov
incl
ret
sbb
jae
mov
je
std
in
outsl
mov
out
je
in
daa
pop
add
lock
adc
ljmp
cmp
xor
or
sub
lahf
shll
pop
sub
lret
jecxz
mov
pop
add
mov
push
stc
push
sub
pusha
mov
out
imul
xor
inc
jge
add
fbstp
mov
cmpsb
lods
fwait
jnp
xor
mov
jecxz
sbb
push
pushf
or
mov
or
out
pop
loopne
rorl
push
sub
dec
jp
xchg
mov
decb
fs
push
test
dec
pop
inc
cmp
add
sbb
push
or
scas
fs
lds
jne
add
sbb
xchg
mov
ret
mov
cmp
imulb
ds
out
bound
push
push
das
fcomi
dec
mov
enter
mov
insl
push
dec
pop
or
push
sub
cwtl
shll
call
sbb
pop
mov
add
ds
sub
dec
enter
pop
inc
or
and
jmp
or
push
mov
add
loope
lret
cmp
pop
cmp
dec
aad
rcrb
add
xor
rorb
fwait
mov
mov
or
add
sub
pop
rcrl
jne
lret
dec
and
and
mov
add
cmp
mov
pop
in
ja
repz
or
mov
jns
loopne
rcll
sahf
fisttpl
mov
int
pop
subb
dec
orb
mov
gs
adc
or
push
adc
sub
jns
bound
repz
icebp
test
add
adc
repnz
add
sub
faddl
in
mov
adc
mov
les
or
xchg
out
push
in
mov
add
mov
ljmp
rcrb
test
js
hlt
push
pop
push
xor
dec
xchg
sbb
mov
test
xor
iret
sarb
sbb
imul
xor
fadd
test
or
mov
dec
incb
cli
imul
mov
lahf
pop
sbb
cltd
xchg
fidivrs
add
mov
xchg
pop
call
add
jno
xor
stos
ret
xchg
icebp
fsubrl
add
dec
movsb
aad
mov
inc
dec
or
mov
inc
pop
and
cli
jo
fisubs
jae
jl
out
insl
push
out
sti
xchg
xchg
pop
fs
pushf
xchg
pop
inc
rol
lcall
pop
add
jp
loopne
shll
sub
sbb
push
dec
push
xchg
xor
add
xlat
rorb
pop
cld
pop
je
js
int
popf
enter
mov
je
inc
xor
inc
xlat
pop
and
cwtl
adc
push
pop
dec
xchg
test
jmp
sbb
popa
cli
add
jmp
mov
fcomip
mov
sbb
jns
mov
es
and
sub
add
insb
faddl
add
pusha
sub
pop
push
scas
outsl
jg
mov
pop
xchg
dec
push
cli
xchg
iret
and
or
xchg
dec
pop
xchg
add
pop
or
xchg
dec
sub
xorl
lret
cli
prefetch
or
mov
or
push
mov
push
into
daa
outsb
add
or
shrb
mov
fcmovne
mov
mov
or
pop
test
xchg
lds
ret
add
rolb
add
fdivs
je
or
sub
add
sbb
push
lods
sbbl
pushf
test
push
xor
xchg
imul
xlat
flds
in
or
sub
sbb
xor
imul
pop
xchg
ja
sub
movsl
fildll
loop
and
outsb
mov
jns
add
addr16
mov
pop
insb
in
lock
mov
xchg
mov
sbb
or
jno
push
enter
outsl
test
fldt
lahf
inc
das
adc
jnp
and
mov
in
add
dec
repz
filds
rcr
bound
cli
xchg
push
pop
and
sub
orl
cs
scas
repz
psllq
call
test
imul
dec
pop
pop
inc
lret
cltd
mul
jp
pop
add
stos
flds
xor
mov
push
imul
dec
sbb
push
stos
add
mov
inc
mov
cmp
mov
imul
xchg
subl
ret
mov
idivl
shl
xchg
push
add
cwtl
ja
lds
stos
addr16
add
mov
dec
or
pop
call
pop
xchg
mov
es
out
fbld
mov
and
inc
pop
or
mov
outsb
adc
roll
sbb
cmp
fcomip
xchg
mov
cmp
cmp
add
fcoml
xlat
mov
sbb
sbb
test
fiaddl
iret
xor
int
lret
rclb
pop
out
add
add
imul
movsb
and
aad
ljmp
sbb
ja
shrl
adc
xchg
out
mov
fs
mov
outsb
mov
in
iret
pop
sbb
aam
push
jae
ja
cli
cmp
mov
repz
outsb
test
pop
push
sbb
sbb
test
and
addr16
lret
aad
jecxz
add
sahf
cmp
jmp
lahf
test
mov
add
fsubrl
pop
dec
mov
enter
aas
lea
test
add
xor
xchg
mov
ljmp
lcall
add
jae
dec
add
pop
sub
loop
cld
add
push
nop
add
les
pop
cmpsl
xchg
or
out
cli
in
popf
fmuls
mov
sub
lcall
jp
dec
stos
popa
add
cltd
or
or
aaa
jmp
add
rorb
test
sbb
cwtl
push
stos
pop
addb
jae
nop
call
popl
mov
decl
add
xlat
repnz
xchg
add
fistps
jno
iret
pop
sub
fists
xchg
fisttpll
push
xchg
daa
dec
lea
bound
cltd
movl
les
inc
add
mov
jmp
xchg
or
mov
test
xchg
aam
bound
push
mov
cli
mov
pop
add
jle
inc
daa
jne
dec
out
push
pop
ds
add
stc
sbb
dec
sub
or
in
adc
arpl
dec
jne
pop
in
leave
add
insb
pop
mov
add
sub
mov
dec
push
add
jne
jns
mov
add
jmp
jae
out
testl
cmpl
nop
add
subl
sbb
mov
or
in
xor
jnp
dec
sbb
inc
imul
ja
lret
mov
mov
lock
add
push
push
scas
jmp
repnz
mov
add
cmp
ss
pop
in
fnsave
mov
or
call
das
mov
cwtl
inc
outsb
into
push
pop
xor
pop
movsl
out
cmp
in
aad
insl
insb
push
jb
imul
sbb
push
sar
movsl
iret
ja
and
les
cmc
addr16
out
fdivr
push
out
push
jp
dec
mov
into
add
lds
cltd
out
adc
std
ret
les
xchg
jno
add
orl
jo
push
roll
cmp
sarb
mov
or
nop
stc
xlat
pop
icebp
sub
aaa
mov
mov
orb
call
mov
mov
roll
sbb
jg
inc
or
iret
test
jns
fidivl
jbe
cmp
outsl
xor
mov
rolb
pop
sub
fistpll
scas
in
add
cwtl
mov
xor
add
jbe
aas
dec
push
sbb
fists
enter
int
stc
mov
test
js
lcall
and
xor
stc
and
add
movsb
push
and
ficoms
andl
fistpll
aas
add
inc
jnp
mov
dec
ja
imul
cmpl
push
pop
mov
insl
push
dec
lock
data16
addl
add
push
movsl
pusha
inc
mov
lds
mov
dec
int3
es
filds
add
lret
in
shl
pop
add
dec
or
pushl
dec
mov
imul
movsl
xor
icebp
push
dec
push
xchg
fldpi
sub
push
clc
push
mov
into
xchg
inc
pop
fistpll
add
mov
pop
dec
shlb
push
xlat
xor
mov
cmp
lea
inc
movsl
pop
or
pop
js
push
movb
mov
inc
repz
loope
push
rclb
xor
push
dec
outsl
mov
insl
add
xor
jns
lods
fs
test
or
das
jl
mull
mov
mov
mov
pop
bound
fwait
jge
add
shll
pop
add
out
lock
mov
add
int
add
inc
xor
inc
and
ret
cmp
push
sbb
xorl
fadds
roll
xchg
xlat
mov
aad
cmpsb
sub
loop
adc
js
dec
shrl
fisubrs
push
call
dec
inc
je
sbb
mov
xor
add
pushf
inc
push
ja
xchg
dec
out
cmpsb
xor
add
xchg
js
aam
add
in
cmp
or
jmp
pop
xchg
dec
add
cmp
or
mov
stc
cmc
out
pop
push
sahf
fildl
add
inc
rolb
xor
lcall
add
mov
or
jbe
add
pop
sub
jge
fidivrl
xor
add
pop
add
dec
subb
mov
pop
pop
push
mov
xchg
mov
mov
movsb
dec
faddl
mov
idivb
pop
sbb
mov
mov
add
add
xchg
cmp
cmc
addl
adc
test
les
jne
xlat
sahf
mov
sub
and
out
xlat
mov
ret
jo
adc
xor
lret
pop
jns
les
clc
cmp
adc
out
add
adc
dec
loope
jnp
mov
and
push
and
dec
lock
fs
les
pop
xchg
int3
jg
out
or
and
in
cwtl
pop
imull
push
out
es
sub
push
addr16
mov
lock
iret
xchg
cmp
add
mov
ds
loop
mov
je
out
add
mov
ds
popa
mov
jae
sub
pusha
mov
xor
ret
pop
loopne
repz
lods
shl
dec
pop
mov
bound
pop
sub
arpl
and
addl
pop
pushf
inc
cmpsb
andb
daa
mov
add
inc
sarl
ror
into
xchg
int3
cs
sarl
loop
sbb
sbb
mov
add
cwtl
mov
add
fwait
aas
xchg
add
sbb
insl
dec
cli
test
nop
inc
in
enter
dec
mov
jno
pop
jns
push
insl
insb
add
outsl
pop
std
add
adc
sahf
rdpmc
addl
fsubr
lahf
repnz
dec
or
cmpsb
mov
xchg
fstl
add
push
inc
and
pop
lgs
les
lds
mov
mov
aad
add
insb
mov
xor
jecxz
mov
add
fs
jle
nop
daa
rorb
xchg
and
inc
xchg
iret
pop
dec
sahf
aam
jns
add
pop
dec
adc
ret
add
imul
dec
sti
xchg
stc
pop
out
jnp
or
mov
pop
dec
and
fiaddl
adc
sub
cmp
xchg
jb
xchg
pop
adc
sbb
into
sub
testb
push
push
fidivrs
cmp
in
cmc
dec
movmskps
rcl
mov
sub
or
clc
add
sub
popa
add
cwtl
mov
xchg
add
xchg
add
mov
jae
aas
sti
es
cltd
add
xlat
and
add
hlt
orb
clc
ds
movsl
pop
xchg
xlat
pop
iret
pop
stc
xor
mov
mov
orb
push
cmp
jg
mov
mov
js
xchg
sbb
mov
fistpll
jns
add
xchg
mov
xchg
adc
add
in
pop
rcll
add
mov
xchg
or
sbb
in
mov
and
inc
aam
arpl
add
adc
fists
xchg
nop
push
add
xchg
xchg
xlat
add
sub
ficompl
add
pop
ds
sub
int
std
mov
aas
add
or
sub
sarb
push
add
mov
inc
lret
mov
and
dec
push
mov
rorb
sub
shll
loopne
xchg
mov
and
popa
scas
sbb
out
repnz
icebp
stos
jmp
inc
scas
mov
mov
mov
clc
outsb
daa
dec
sbb
fbstp
and
and
into
arpl
pop
inc
pushf
rcll
mov
dec
or
cmp
fisubrs
mov
sub
imul
inc
inc
sub
paddsb
sub
call
xor
lea
jb
repz
fwait
mov
out
xchg
clc
pop
outsb
or
cwtl
and
test
decl
inc
dec
sub
xor
sbb
xchg
mov
icebp
xchg
add
iret
mov
outsb
xchg
movsl
inc
lods
aas
icebp
xchg
xor
and
iret
mov
shrb
add
xor
cs
rorb
xor
pop
mov
pop
inc
movsl
jg
and
push
dec
lock
das
out
cmp
or
xor
mov
cld
jmp
adc
fyl2x
mov
aas
sbb
mov
repz
sti
filds
dec
inc
or
icebp
mov
mov
aad
push
fimuls
cmpsl
gs
add
and
dec
pusha
and
mov
ret
aas
rolb
paddsw
jb
mov
add
mov
adc
sar
add
imul
pop
pop
mov
pop
out
fcomip
xor
fdivrl
push
add
rolb
cmp
add
jno
ret
pop
outsl
sti
pop
add
xor
xchg
inc
into
add
stos
or
jl
add
in
scas
sub
stc
mov
add
inc
inc
xchg
js
call
pop
and
xlat
and
imul
shlb
mov
sahf
add
pusha
test
sbb
mov
lret
arpl
imul
mov
mov
rcll
cmp
xlat
jp
out
pop
and
push
repz
inc
sub
and
xor
fs
fadds
je
mov
in
sti
cli
lret
frstor
mov
scas
xlat
pushf
xor
fldcw
das
jns
les
mov
xor
inc
mov
mov
and
push
shl
add
or
imul
in
popf
loopne
fdiv
adc
cmp
nop
aam
or
jb
inc
adc
xlat
dec
iret
lock
sbb
mov
aaa
push
add
in
pop
pop
cmp
ficomps
adc
push
ljmp
push
jns
mov
pop
jp
push
xor
cltd
pushl
inc
pop
mov
or
xchg
cmp
xchg
lds
mov
test
mov
into
pop
sbb
push
lret
push
adc
dec
nop
jmp
cmp
sub
jle
data16
icebp
fdivrs
outsl
add
sbb
loop
cvtdq2ps
pop
mov
decb
xchg
mov
sub
js
rcll
or
add
xor
aad
lods
jmp
lret
add
aaa
mov
ret
xor
jne
lods
mov
pusha
mov
fisubs
std
ljmp
mov
int
xor
push
loop
add
stos
xchg
inc
lods
repnz
inc
add
mov
adc
mov
call
cmp
inc
add
xor
js
mov
adc
in
mov
mov
or
adc
movsb
add
push
xchg
sub
cmp
cmp
pop
andl
cmpsb
cwtl
in
cmp
in
add
jo
test
ja
bound
cmp
dec
mov
mov
fs
out
cmp
add
pop
mov
xlat
into
lock
add
cwtl
adc
loopne
rol
push
jp
mov
arpl
fldenv
cmp
and
iret
pop
stc
js
xor
lods
add
popa
jo
mov
add
adc
cltd
add
mov
dec
add
lock
xchg
mov
aam
loope
xchg
inc
add
icebp
sbb
or
xor
mov
imul
fnsave
cmp
out
push
imul
cld
adc
inc
filds
push
rorl
mov
sub
fiadds
in
ret
cmp
jl
ja
pusha
pop
insl
out
cmp
xchg
stc
add
push
in
push
push
mov
les
xor
mov
dec
sbb
mov
xchg
popf
mov
push
mov
pop
insl
inc
sbb
push
mov
add
xchg
adc
rorl
xor
ss
std
out
mov
in
mov
mov
jne
inc
iret
sub
push
fbld
in
cmpsb
testb
bswap
adcl
aas
add
mov
pop
mov
ja
sbb
xchg
adc
mov
jns
xchg
pop
add
xchg
add
shll
sarl
push
lahf
js
fsts
ret
scas
or
mov
mov
cmp
sbb
add
mov
loopne
aad
testb
mov
xchg
les
mov
iret
sbb
sbb
add
xlat
loope
mov
out
push
push
sarb
jno
add
xlat
xor
imul
lret
add
shll
add
jnp
sbb
jns
dec
fnstcw
xchg
imul
mov
mov
test
xor
xlat
or
mov
jbe
das
jl
dec
sub
push
add
daa
shll
cmp
lods
data16
in
aaa
bound
mov
inc
mov
jmp
add
popa
lods
xchg
jg
sub
mov
pusha
add
xchg
subb
add
leave
add
lods
inc
add
imulb
std
fistpl
negl
add
inc
push
push
loopne
imul
rorb
ret
or
mov
sub
cmpsl
aam
sub
out
mov
cltd
jl
push
inc
pop
in
add
iret
icebp
xor
pushf
loopne
sbb
fs
add
push
mov
repz
leave
pop
roll
cld
pop
sbbb
fwait
lock
inc
mov
adc
push
push
das
insb
mov
or
test
call
mov
mov
and
fcmovne
cmpsb
roll
imulb
in
ret
sbbl
cmp
xor
jmp
stos
sub
jle
mov
sbbl
cmp
enter
int
sbb
xlat
xor
dec
sarl
xor
je
inc
jmp
mov
jp
movsl
pop
mov
add
mov
lea
scas
addr16
add
or
cmp
shll
cmpsl
sarb
and
mov
mov
xor
sbb
punpcklwd
mov
xadd
lods
add
jmp
jnp
cs
mov
ds
xor
mov
int
jo
das
and
mov
cmpsb
dec
xchg
push
add
fiadds
mov
xor
scas
cmpsl
fisttps
pop
cmpsb
in
add
sbb
sub
mov
jmp
loopne
jl
fidivrs
xlat
iret
mov
inc
lds
test
cmpsl
pushf
movsl
fwait
add
stc
mov
push
lret
bound
mov
dec
mov
inc
out
sbb
js
popa
shrl
ss
xchg
adc
pop
dec
mov
out
or
outsl
xor
inc
stc
pop
das
jo
test
mov
addr16
sub
push
adc
dec
add
loope
mov
xchg
stc
cmp
dec
jne
push
inc
add
mov
or
add
jae
sbb
popf
and
inc
or
jl
or
dec
aam
dec
lahf
mov
dec
add
pop
les
inc
pop
add
adc
sub
adc
sbb
cmpsb
lock
dec
lods
es
add
loopne
and
adc
pushl
and
out
xchg
je
stos
mov
add
sub
fidivl
rol
add
push
out
insl
icebp
pop
inc
add
dec
mov
stos
add
and
or
push
mov
inc
xchg
push
add
inc
mov
dec
cmp
jmp
mov
mov
push
imul
add
inc
icebp
shl
add
popf
mov
mov
mov
pop
lret
xchg
mov
xchg
cmp
jmp
sbb
push
shlb
lods
add
aas
cmp
test
add
mov
rcr
inc
xor
mov
push
push
sub
shll
into
push
dec
sub
aam
add
mov
sbb
imul
std
fs
lods
inc
add
xlat
stos
hlt
icebp
and
dec
add
jne
iret
pop
sbb
shlb
mov
inc
pop
jae
ss
push
xor
or
imul
sahf
iret
stc
sub
loop
mov
repnz
push
mov
frstor
ds
repnz
and
fisttpl
push
ret
mov
dec
fistpll
paddsb
add
cmp
cmpsb
add
pop
cmp
dec
mov
mov
out
je
cmp
mov
jns
icebp
push
push
inc
mov
mov
test
js
add
stc
pop
fnsave
daa
jp
std
rcll
dec
sbb
jnp
call
sbb
movsl
shlb
js
add
outsb
test
sbb
stc
mov
in
or
loop
mov
add
out
xchg
movl
mov
add
leave
ret
aad
jg
mov
add
push
iret
cmp
xor
pop
xor
imul
push
pextrw
push
mov
add
rclb
popf
add
mov
xchg
les
and
xor
faddp
jl
outsl
sub
pop
xchg
mov
inc
sti
pop
aaa
add
addl
bound
mov
testb
add
xchg
jno
dec
in
movsb
rol
inc
sti
pusha
xchg
hlt
add
negl
jecxz
popa
push
add
inc
cli
ret
hlt
add
add
dec
or
ret
sub
loopne
dec
cmp
rcrl
fs
pop
push
jns
out
mov
add
mov
add
fidivs
repnz
jmp
in
add
jno
pop
cmp
add
push
adc
jmp
into
mov
scas
mov
xor
sarl
sti
rcrl
inc
mov
stc
add
mov
jge
cwtl
test
dec
sarb
dec
rcrb
pop
mov
fisttpl
add
lock
jbe
add
lret
xchg
adc
pop
mov
pop
add
sbb
push
adc
jmp
pop
popa
pop
out
and
push
push
rcr
xor
mov
pop
mov
cmp
je
push
push
xor
jnp
loop
pop
loopne
cs
mov
push
cltd
roll
pop
xor
shll
xchg
inc
inc
dec
pop
xchg
scas
inc
lcall
pop
iret
rcrb
and
arpl
call
mov
enter
jp
add
lock
add
inc
cmp
and
rcrl
push
add
add
add
sbb
sahf
dec
dec
ret
mov
xchg
addr16
scas
add
sub
push
inc
xchg
mov
mov
push
add
mov
dec
leave
sub
cltd
movsw
dec
mov
add
sbb
fcmovne
add
outsl
mov
mov
shrl
stc
mov
inc
data16
xchg
iret
pusha
and
daa
icebp
xor
jae
pushf
jge
cltd
je
xchg
cs
add
data16
sbb
fisttps
dec
jno
pop
add
jo
jmp
sarl
mov
loopne
stos
enter
xlat
cmp
aam
stos
xor
jae
popl
mov
outsl
jnp
aaa
mov
add
rorl
add
outsb
sub
adc
clc
jne
ljmp
imul
flds
xorb
fs
push
sbbl
pop
pop
add
popa
sbb
dec
mov
cmp
sub
pop
repz
inc
ds
xchg
enter
mov
sub
push
dec
xor
ss
iret
enter
xchg
subl
cmp
lea
cmpsl
pop
call
jle
mov
and
adc
sbb
subl
and
push
jle
dec
out
in
testl
loopne
mov
fwait
outsl
xor
mov
in
roll
sub
daa
ficoml
adc
xchg
dec
or
inc
mov
movsb
ljmp
stos
sub
mov
int
gs
inc
mov
lcall
daa
scas
arpl
push
lock
mov
fstl
push
out
sub
ret
dec
mov
mov
lcall
popf
push
pushf
lahf
incb
sbb
adc
adcl
or
sub
inc
adc
and
leave
xor
sahf
dec
adc
mov
jb
fnsave
int
xor
xchg
xor
andl
nop
sub
movl
xor
add
and
xor
decb
dec
pop
addr16
or
shlb
xchg
sub
sarl
sahf
push
push
les
in
mov
xor
push
push
fistpl
xor
stc
lahf
shlb
inc
or
outsl
std
jbe
xor
mov
or
in
pushf
jae
push
lahf
leave
mov
sub
or
and
aad
rolb
loop
enter
out
cmp
stc
lahf
out
mov
mov
scas
mov
mov
sar
jns
push
imul
mov
nop
ljmp
jmp
test
pop
pop
mov
in
cmp
jmp
test
in
icebp
stos
cmp
or
jp
in
add
push
cmpsb
outsb
sub
adc
and
sbb
hlt
add
cwtl
pop
sahf
mov
testl
push
inc
sbb
fs
xchg
dec
iret
and
push
xlat
addr16
xor
xchg
push
iret
cmp
or
sbb
mov
dec
add
test
faddl
pop
sbb
aaa
addr16
add
cmp
sbb
fcomps
rorl
aad
or
and
xchg
pop
fists
lret
mov
dec
jne
xlat
shll
int3
add
in
xor
ret
out
leave
out
ret
add
push
or
dec
inc
or
and
movsl
bound
mov
dec
pushf
inc
call
icebp
insb
adc
je
inc
movsb
js
jo
push
push
dec
dec
jl
xor
or
add
popf
lret
mov
adc
dec
dec
test
mov
push
add
dec
inc
or
popa
jp
int3
stos
es
jmp
sub
sbb
cli
test
mov
lret
std
push
ret
jno
add
push
movsl
mov
sub
fcomps
add
decb
and
or
rcll
add
loop
movsb
loopne
sahf
mov
xor
and
push
and
les
add
mov
mov
pop
add
inc
sub
push
or
jb
mov
mov
jmp
cmp
add
iret
inc
mov
js
jns
aad
mov
xchg
push
test
add
and
pusha
push
xor
xor
mov
mov
iret
and
dec
add
sahf
sub
mov
sbb
add
outsl
cwtl
lahf
add
and
ljmp
jle
inc
add
iret
push
shl
scas
sbb
ret
insb
xchg
rorl
in
and
data16
pop
add
push
mov
movsb
push
pop
daa
repnz
lock
es
or
aam
clc
stos
push
mov
rorl
xchg
xor
sub
scas
xor
aaa
sbb
mov
cmp
shrb
rcll
adc
add
xchg
dec
mov
shll
std
lcall
roll
push
lret
and
mov
movsb
xchg
xlat
xchg
out
pushf
jne
cmp
subl
loop
add
std
movsb
testb
push
add
addr16
dec
or
loopne
jp
jg
xchg
js
inc
sbb
xchg
cmp
mov
nop
xchg
orl
int3
add
cs
test
jnp
pop
dec
sub
fimuls
jns
xchg
das
cmc
cs
add
cmp
cmpl
fnstenv
movsl
jb
sarb
xor
shll
mov
mov
jg
xor
jecxz
add
ds
push
dec
jo
add
cmp
rorl
pop
mov
cmp
std
pop
lods
xchg
out
push
add
es
pop
jbe
add
xchg
bound
les
test
inc
lock
out
cmp
xor
pop
pusha
sbb
mov
and
fimull
idivl
cld
addr16
pop
xor
adc
dec
test
inc
or
sub
data16
sbb
xchg
aam
dec
lcall
and
pop
lret
add
mov
inc
inc
push
inc
push
add
add
mov
mov
fwait
cmc
jmp
jle
pop
sub
orl
daa
std
aad
movsb
icebp
dec
mov
adc
mov
rcll
dec
pop
loopne
add
lock
mov
mov
stc
push
or
aas
daa
or
dec
repz
ljmp
out
add
movsb
inc
cli
add
dec
jb
in
std
into
dec
mov
sub
jmp
jl
lods
divps
dec
lea
sar
hlt
in
test
mov
mov
inc
jle
jbe
pop
push
aam
sbb
outsl
iret
lret
or
hlt
jge
pop
rolb
pop
imull
call
das
mov
mov
cli
subl
cmp
mov
pop
xchg
xor
xor
mov
fisubrs
xor
add
cmc
mov
sub
jnp
dec
flds
sub
mov
xorb
or
push
and
jbe
push
xchg
scas
mov
idivl
std
jecxz
shlb
adc
mov
dec
loop
cmp
not
incb
std
mov
xchg
dec
cli
mov
mov
into
dec
popa
and
mov
xor
inc
dec
fiadds
jne
jo
jl
test
mov
adc
dec
pop
outsb
out
sbbl
add
js
sub
pop
lock
dec
mov
pop
push
iret
cmpb
fsubs
or
jmp
xchg
jle
es
xor
xor
mov
testb
jecxz
test
frstor
test
jp
cli
sub
add
inc
movsb
cmp
cmp
jne
mov
and
xchg
add
push
jns
push
pop
mov
popf
je
push
xlat
add
ss
or
sub
out
rcrb
dec
loopne
dec
and
sbb
lcall
mov
loope
add
mov
and
mov
jbe
jp
add
in
out
sub
fcoms
sub
inc
fcmovbe
inc
add
mov
lock
xor
cmp
pop
fdivrs
adc
cltd
push
xchg
jp
add
in
pop
aam
sub
push
in
sbb
aas
out
bound
and
adc
cmp
mov
into
add
fs
outsl
add
nop
add
xchg
pop
sub
mov
sbb
and
xchg
sub
int
push
in
out
ret
stos
push
int
adc
add
xchg
push
push
leave
movzwl
mov
dec
dec
fbstp
jmp
push
jo
imul
addb
mov
inc
pop
mov
jne
pop
stos
sbb
clc
sub
ja
subb
stos
lock
xor
out
adcl
cmp
out
sti
popf
in
dec
clc
push
inc
pop
scas
mov
movsl
shlw
dec
je
test
jmp
dec
in
add
xlat
rcrl
sbb
add
cmpsb
lock
pop
inc
or
je
inc
es
mov
mov
scas
fs
inc
cmc
add
or
aad
mov
add
addr16
stos
adc
xlat
popf
add
mov
lock
jne
cmpsb
pop
lahf
ror
aam
or
mov
cmc
das
add
rorl
fwait
sbb
jb
test
in
mov
add
scas
adc
orb
add
cmp
pop
or
mov
add
inc
jge
push
dec
and
aaa
lds
mov
pushl
ljmp
shrb
mov
push
je
movsl
dec
nop
pusha
fistpll
shl
arpl
popa
sbb
sub
lods
or
inc
and
ror
mov
rclb
fistl
jp,pn
cmp
ret
xchg
fdivl
dec
xchg
inc
sub
adc
sahf
jb
or
sbb
mov
out
fistpll
verr
pop
xchg
add
addr16
sbb
leave
aaa
insb
cld
enter
add
lds
shlb
and
sub
dec
rcrl
pop
sub
push
mov
mov
add
dec
mov
xchg
add
jmp
ret
add
test
xor
leave
aam
lret
sbb
xchg
inc
dec
outsb
loop
fistpll
icebp
mov
push
movl
mov
fs
mov
inc
or
hlt
xchg
add
dec
xchg
dec
mov
add
imul
les
xchg
and
dec
mov
aad
pop
jne
into
jnp
jle
outsl
jae
out
jp
sbb
stc
test
fiadds
int
adc
int3
cwtl
mov
rorb
in
push
dec
sbb
or
js
sub
lds
dec
push
or
mov
mov
add
sub
dec
mov
mov
ljmp
sbb
add
sub
sbb
push
dec
pop
cmp
xor
push
cltd
xor
jae
and
and
add
shll
sbb
jo
out
cwtl
idivl
add
outsl
or
out
fldl
add
jmp
mov
scas
mov
inc
mov
fsubrp
sbb
cmp
lods
add
popl
mov
xchg
add
xchg
inc
dec
clc
cld
jg
fistl
or
push
add
nop
fcmovne
divb
add
je
sbb
adc
add
popw
lea
lods
loopne
add
daa
jns
xor
mov
push
add
fcmovbe
xor
push
cltd
adc
andb
pop
push
add
dec
or
jne
cmpsl
shl
rcrl
lods
add
push
dec
in
xor
add
mov
lods
fs
pop
mov
and
daa
pushf
sub
fmull
fiaddl
les
mov
jmp
movsl
inc
xor
imul
jl
cmc
aas
mov
test
jle
movb
sbb
pop
iret
mov
sbb
xor
or
lock
outsb
fwait
xlat
add
inc
sub
movsb
adc
push
fdivrl
inc
fisttps
cmpsb
add
ja
add
mov
es
mov
push
addr16
add
repnz
xchg
mov
push
testb
ret
leave
es
rclb
out
lods
loopne
cld
xchg
mov
clc
or
in
rorb
js
add
inc
xchg
push
ficomps
and
xchg
inc
mov
mov
xor
dec
lods
fildll
jge
jno,pn
sbb
xor
insl
cmpl
and
dec
data16
inc
pushf
in
rcr
js
clc
pop
ret
fnstsw
arpl
cmc
cmp
xlat
sub
adc
pop
pop
cmp
sbb
pop
pop
jb
jne
rcl
dec
cltd
add
fists
cmp
fwait
testb
pop
pop
jmp
jno
add
daa
jmp
inc
xor
pop
mov
pop
push
and
sub
shll
xor
adc
negb
and
push
mov
sbb
add
leave
ja
repnz
dec
cwtl
inc
cs
cmpsb
jb
and
out
pop
push
jge
and
add
sarb
add
aad
push
jmp
mov
dec
ret
jg
xchg
pop
cmpsb
push
add
pop
mov
outsb
mov
mov
mov
call
inc
xchg
cmp
data16
jmp
mov
jp
push
xchg
pop
jno
gs
pop
lcall
imul
lahf
adc
jns
shrl
pushl
sbb
fst
lods
iret
ja
xor
outsb
or
jo
pop
dec
dec
out
dec
mov
aaa
add
std
sbb
push
test
push
pop
add
fadds
push
and
add
mov
mov
dec
nop
scas
mov
mov
lret
fsubrl
pop
or
push
dec
cmp
nop
mov
sub
je
and
sub
faddp
je
nop
sbb
pop
mov
mov
and
cmp
xor
xlat
sub
jns
out
and
js
pusha
mov
add
stos
push
pop
dec
inc
jnp
or
add
pop
push
pop
inc
fildll
ds
in
imul
fnstcw
adc
jecxz
inc
call
bound
push
push
mull
sbbl
inc
aas
push
lret
dec
cmp
inc
rorb
ror
es
or
mov
das
dec
bound
pop
push
scas
push
mov
cmpsl
outsb
mov
lods
iret
fistpll
cmp
ss
mov
cli
sbb
jmp
pushf
dec
inc
mov
dec
lock
add
popf
rcll
and
and
pop
push
mov
push
lock
imull
push
gs
out
dec
dec
mov
fnsave
xchg
roll
fidivs
pop
mov
push
push
jns
data16
scas
loope
imull
push
and
js
mov
add
push
jns
xor
xor
add
xchg
xor
pop
jmp
add
jg
sub
repz
mov
pop
aam
shrl
into
push
mov
inc
das
cmpsb
sbb
mov
or
xchg
sub
jae
pop
xchg
fldl
addl
pop
sbb
mov
inc
arpl
add
mov
inc
or
xchg
addr16
pop
out
es
enter
sub
imul
lea
mov
lahf
xlat
es
pop
add
pop
sub
divb
sbb
xchg
rcrl
xor
inc
fs
or
into
cmc
test
sbb
in
xor
push
dec
adc
and
test
sahf
add
shl
push
and
mov
mov
mov
cmp
filds
and
inc
addr16
shlb
test
and
mov
cmc
bound
xchg
clc
mov
mov
xchg
add
data16
and
movsl
add
outsl
lock
sub
incl
mov
inc
mov
xor
or
sahf
es
or
loope
ret
out
fiadds
loopne
jecxz
lock
mov
stos
les
cltd
test
js
add
imul
dec
insl
pop
inc
daa
mov
mov
add
shll
pop
mov
rolb
sub
pop
dec
clc
cwtl
inc
cltd
das
popf
rcr
add
scas
dec
arpl
add
sub
jb
add
cs
xchg
shrb
loop
sub
sar
pop
filds
fsubrp
push
pop
cmp
fcoml
andl
iret
jge
mov
int
adc
jl
dec
push
dec
js
inc
test
add
jne
sub
add
insl
pop
inc
add
in
push
push
push
sub
pusha
mov
in
test
iret
sbb
mov
pop
jl
push
lock
xchg
inc
mov
aaa
nop
into
out
jb
push
dec
fstl
xlat
push
in
mov
xlat
vmovlpd
fiadds
or
fcomip
and
jo
pusha
inc
rcll
xor
xchg
js
adc
add
imul
lock
jg
bound
add
mov
scas
or
sbb
cltd
adc
add
rcrl
std
push
fstl
cmpsb
mov
pusha
out
pop
fwait
sbb
scas
out
loope
xchg
mov
adc
jae
inc
xchg
add
test
jne
and
jle
or
loopne
ret
data16
and
lods
sub
hlt
pop
or
fstp
clc
mov
add
push
leave
mov
movsl
sbb
adc
test
add
xor
push
ds
add
mov
fiadds
and
arpl
mov
push
dec
add
mov
add
rorb
inc
xchg
loopne
fisubs
jns
and
inc
cmp
clc
inc
add
pop
xchg
and
dec
mov
sub
inc
pop
iret
xchg
add
icebp
xlat
jae
mov
cvtpi2ps
imul
or
iret
mov
pop
xor
mov
mov
mov
or
stc
clc
jmp
fnsave
inc
and
imul
mov
push
inc
sub
and
sub
xor
outsb
xchg
xchg
jp
xchg
cmc
and
movsl
xchg
mov
fsubrl
xor
test
ljmp
and
push
or
jne
lahf
xchg
rorl
vmread
roll
mov
fbld
xchg
popl
sbb
mov
je
stos
lret
or
sbb
bound
sub
add
loope
dec
dec
mov
sub
lods
sbb
mov
mov
inc
cmp
sub
sbbb
adc
mov
dec
add
mov
push
out
add
mov
test
jnp
xchg
fs
insl
imul
add
jecxz
push
inc
mov
xchg
sarb
jns
adc
bound
ds
dec
xchg
adc
xor
lea
dec
mov
or
mov
into
in
lods
sbb
lahf
inc
es
sub
adc
lock
lea
add
test
add
repnz
dec
xchg
inc
fldt
js
adc
mov
add
shlb
inc
leave
aaa
clc
mov
mov
nop
adc
iret
ds
andl
test
inc
add
mov
jecxz
cmp
aad
and
stos
sub
enter
dec
test
dec
xchg
adc
sub
sbb
mov
inc
push
popf
inc
xchg
xchg
cmp
mov
xor
push
std
fimuls
adcl
lcall
mov
mov
cld
push
cmc
hlt
addr16
mov
mov
push
sub
dec
inc
xlat
push
jmp
mov
out
dec
and
xchg
pop
shll
dec
fs
lock
xchg
andb
jbe
dec
test
shll
sbb
mov
mov
mov
mov
in
lret
sbb
test
dec
dec
add
mov
adc
or
jnp
adcl
popa
mov
push
or
cmpsb
mov
stos
cwtl
inc
add
cmp
xor
xchg
dec
sub
rorl
xchg
sbb
iret
push
lret
add
sarb
es
and
and
add
push
fimuls
or
push
test
adc
dec
push
inc
pop
dec
add
xlat
sub
into
adc
out
shll
cmp
and
xchg
mov
outsl
dec
jae
ja
or
pop
or
mov
pop
sbb
xor
and
out
loopne
mov
lock
jns
xor
ds
mov
addr16
inc
lret
popf
mov
call
shlb
and
push
inc
sbb
mov
loop
cli
fistl
xchg
jo
sbb
mov
mov
mov
xor
dec
push
cwtl
imul
sub
rolb
push
sub
jecxz
out
dec
add
lods
add
xchg
das
cmp
sub
jmp
insb
sbb
fisubrs
jae
push
clc
pop
lret
sti
sub
jbe
mov
pop
cmpsb
leave
add
push
cmp
sub
aas
das
addb
pusha
push
add
push
add
stos
sbb
rcl
xor
dec
lock
pop
mov
sbb
cmp
dec
mov
push
jno
xor
loopne
mov
cwtl
ja
pop
push
adc
add
mov
in
add
sub
add
inc
sahf
pusha
mov
clc
icebp
scas
ds
imul
xchg
inc
mov
jge
ss
movsl
out
or
dec
mov
push
and
scas
add
jae
mov
hlt
add
push
outsb
sbb
cmp
loopne
xor
sub
pop
jae,pt
add
aam
les
xchg
xchg
pop
insb
stc
pop
inc
dec
or
loopne
and
aad
sahf
out
cli
bnd
aam
xchg
mov
adc
pop
and
dec
insl
repnz
fisttpl
mov
sub
add
push
mov
outsb
add
mov
in
inc
loope
jl
sbb
cltd
cli
into
rolb
sub
outsl
ret
inc
int3
lock
xchg
add
iret
xchg
xchg
adc
push
jae,pn
jg
inc
cmp
sub
or
rcr
add
adc
mov
xchg
xor
inc
movsl
test
jmp
jnp
mov
push
dec
and
dec
ds
dec
icebp
and
mov
adc
xor
iret
lock
push
idivb
loopne
out
cmp
sbb
xchg
loop
outsl
mov
mov
shll
xchg
mov
xor
mov
fbld
push
sub
loop
mov
xchg
enter
icebp
ss
sbb
cs
add
or
mov
in
in
outsb
xchg
mov
lea
xor
lea
mov
and
cmp
dec
pop
add
hlt
divb
push
and
xchg
jmp
pop
sarb
mov
mov
adc
add
bound
add
sysexit
dec
xchg
test
repz
cli
or
mov
aam
mov
or
pop
repnz
mov
rcl
lea
mov
into
or
rolb
shl
dec
shlb
sub
xchg
mov
mov
mov
or
mov
inc
fists
cltd
call
push
mov
cmovo
sahf
adcb
arpl
xorb
ss
nop
xchg
call
cwtl
cs
out
lret
lock
push
punpckhbw
sub
aas
imull
clc
repnz
out
add
aaa
and
pushfw
sub
cmpsl
cmp
dec
je
shr
das
int3
jno
iret
push
addr16
aas
sub
iret
pop
cmpsb
xchg
jbe
sub
iret
and
xor
mov
jno
dec
andb
pusha
fidivrs
mov
and
push
aam
test
and
mov
dec
sub
pop
mov
xchg
leave
inc
repz
add
call
pop
xor
out
hlt
dec
dec
mov
push
lods
iret
fildl
clc
popf
scas
rolb
mov
addr16
filds
mov
cmp
sub
sub
push
add
fildll
dec
or
imul
dec
cmp
fsubl
inc
cmp
push
xor
adc
test
push
sbb
mov
aad
and
adc
stc
nop
adcb
dec
xor
adc
adc
add
xlat
jno
loop
fucomi
mov
ret
das
int3
test
fucomi
or
cmc
xchg
scas
pop
jbe
mov
out
inc
dec
push
jno
inc
pop
sar
stos
in
mov
or
loope
stc
sbb
mov
cmpl
mov
sub
mov
or
mov
dec
and
add
outsl
or
out
lock
lahf
icebp
jl
lret
jle
pop
ljmp
mov
in
pop
jo
les
add
call
cltd
in
pop
jno
xchg
add
test
scas
aaa
cltd
push
add
and
es
push
mov
add
imul
add
cmpsl
js
push
test
aas
cmp
sarb
loop
fisttpl
mov
add
pop
in
shll
arpl
or
loopne
sub
dec
call
ret
clc
je
mov
fildl
push
jne
icebp
shlb
les
xlat
out
jle
dec
cmp
lock
mov
add
pop
push
cmp
sahf
rcr
push
fistl
in
dec
add
mov
idivl
dec
or
jno
dec
out
rcrl
jae
cwtl
xor
mov
test
lret
xchg
and
add
insl
xor
add
and
mov
dec
jge
xchg
cmp
push
mov
xchg
sub
sbb
movsb
cld
arpl
push
push
cwtl
add
out
adc
adc
out
dec
push
cwtl
test
pop
push
jmp
inc
orb
cmp
divb
jmp
fsubrl
test
xor
roll
fucomi
inc
dec
mov
mov
dec
push
popf
push
and
pop
fs
mov
dec
and
push
and
xor
pusha
sbb
mov
and
data16
lahf
jno
sub
add
fisubs
sbb
cs
fs
fildll
adc
push
hlt
jae
in
popa
mov
aad
sbb
pop
gs
shll
in
jge
sub
adc
sub
shrl
jge
mov
and
dec
pop
lods
lods
sub
aaa
add
insl
mov
add
jp
add
aam
cwtl
and
in
add
xor
inc
add
pop
outsl
dec
inc
js
loop
ss
sahf
out
nop
mov
in
addl
mov
sbb
add
push
popf
xor
dec
cmp
mov
lds
jo
cld
test
cmp
jno
push
pop
adc
inc
out
je
loopne
dec
dec
push
xchg
popa
int
dec
jo
add
sarb
cmp
xchg
rclb
in
mov
mov
inc
ficoml
aam
mov
mov
push
adc
dec
lcall
lock
sbb
dec
mov
rcr
test
scas
or
xlat
scas
push
xchg
and
xchg
jle
aad
cli
xor
add
movsb
aaa
xchg
outsb
add
jns
mov
add
pop
xchg
inc
scas
das
fwait
insl
adc
xchg
or
in
add
sti
lods
ret
mov
popa
and
push
or
fisubs
push
lock
jae
cmpsb
push
sarb
data16
jns
mov
out
push
sub
xchg
mul
add
lahf
je
push
jb
aam
add
mov
jns
and
pop
jno
insl
push
or
jecxz
adc
mov
mov
scas
adc
popa
cmp
arpl
cmp
xor
add
mov
clc
enter
fwait
sti
es
push
mov
cmp
add
adc
xchg
pop
fsub
pop
dec
cmp
addb
mov
jl
icebp
push
pop
arpl
add
add
adcb
add
mov
lret
pop
shr
rcll
mov
sbb
pop
jae
inc
imul
push
out
push
inc
stc
dec
cmp
mov
cmp
cmp
shr
pop
das
or
iret
shl
xchg
lods
pop
sti
push
sbb
inc
push
dec
add
xchg
xchg
or
push
add
into
fsubs
push
or
push
xchg
mov
outsl
sbb
dec
push
or
xchg
jns
fistpl
jmp
and
outsl
or
mov
cmp
or
icebp
add
lret
mov
loope
mul
add
or
jg
push
aas
inc
or
iret
xor
orb
sti
or
mov
mov
mov
or
xchg
mov
stos
dec
cmp
add
ret
push
pop
lock
push
lds
stos
dec
add
sub
std
and
xor
fsubs
mov
aad
cmp
adc
add
add
inc
je
mov
push
dec
orl
xor
mov
jnp
push
cmp
inc
jecxz
add
inc
push
pop
movsl
lahf
dec
fldl
inc
jge
stc
xor
xor
inc
test
or
sti
inc
lock
jns
cltd
dec
leave
and
pop
aaa
and
outsb
fbstp
pop
or
adc
jae
mov
popa
lcall
and
ja
addr16
scas
test
sbb
inc
add
and
lret
popa
mov
push
ljmp
xchg
mov
adc
repz
cmp
dec
pop
out
test
loop
add
xlat
scas
xor
rdpmc
js
jp
idivl
out
sub
inc
cmpsb
inc
mov
out
xchg
mov
scas
jl
jle
lcall
fwait
imul
jl
cltd
add
xchg
cmc
mov
push
sub
add
lods
xchg
mov
mov
add
push
hlt
push
dec
rcll
add
mov
add
push
add
xchg
mov
mov
cmp
mov
enter
filds
movsl
jae
icebp
xor
xchg
loope
jb
cltd
xchg
insl
add
mov
daa
je
pop
add
jecxz
push
add
out
mov
stos
mov
mov
loope
setae
arpl
fbld
mov
xorb
add
addr16
add
and
hlt
add
mov
popf
test
adc
jne
movsb
mov
nop
jg
sbb
pop
pop
mov
cmp
push
jecxz
dec
jae
pop
sub
sbb
rclb
dec
aad
inc
xor
dec
pusha
mov
repz
xchg
fcomp
jo
or
sub
dec
mov
repz
or
or
add
sub
pop
sbb
add
dec
outsb
repnz
jecxz
dec
xor
jae
dec
std
sub
jne
cmc
mov
add
pusha
pop
mov
fsubs
sub
inc
push
test
fldenv
mov
mov
ret
mov
clc
pushl
add
push
dec
frstor
fmul
pop
movsl
cltd
sub
cmp
sub
push
xchg
pop
lahf
pop
sbb
add
push
add
imul
add
cmc
sbb
fcmovbe
iret
repnz
aam
add
test
add
scas
dec
dec
mov
mov
add
test
leave
add
jl
out
cmp
fistl
or
mov
add
add
and
add
adc
add
adc
cmpsl
daa
lods
add
sbb
lcall
pop
xor
mov
roll
dec
in
popf
fcoml
add
xchg
sti
fistl
or
loope
cmp
adc
jmp
imul
out
adc
or
add
repz
mov
xor
adc
or
inc
out
jmp
or
push
push
cltd
inc
xor
jnp
fildll
add
test
out
mov
adc
nop
adc
add
cli
jne
push
jnp
into
cmp
push
div
fildll
inc
stc
dec
dec
stos
adc
push
cwtl
add
mov
xchg
and
mov
add
add
stc
mov
pop
call
mov
jp
mov
mov
sub
jb
aaa
push
nop
xchg
xchg
daa
xor
mov
add
dec
nop
pop
add
lods
sub
std
insb
cmc
xchg
add
pop
jmp
sti
scas
xor
cmp
push
sbb
push
stos
add
cltd
xchg
scas
movsb
lcall
pop
inc
push
and
mov
inc
xchg
aaa
fucom
dec
jp
lret
xor
cmp
dec
call
negl
add
or
add
push
mov
add
cs
pop
sbb
cmp
sbb
imul
xchg
popf
xchg
pop
push
fmul
lret
adc
int
hlt
decl
lret
jne
pop
decl
lret
stos
push
xlat
repz
add
leave
pop
sub
mov
shrb
jmp
ljmp
lea
adc
aas
sub
bound
push
shrl
insb
inc
mov
add
pop
out
push
xor
mov
adc
fistpl
and
dec
mov
push
gs
negl
jl
mov
mov
pop
rolb
mov
jbe
popl
jne
adc
pop
loope
inc
iret
push
scas
push
inc
sarl
sbb
les
cltd
aam
mov
adc
lcall
repnz
xor
adc
xor
mov
pop
dec
enter
cmp
cmp
sbb
mov
clc
clc
adc
mov
loope
pop
inc
dec
push
popa
inc
xor
enter
stos
adc
dec
add
call
mov
incb
adc
hlt
in
add
mov
call
mov
decl
add
inc
jp
dec
std
mov
stos
inc
leave
dec
imul
int
jmp
xchg
cld
scas
repz
lcall
inc
addl
push
sub
test
das
pop
nop
dec
and
dec
or
out
out
outsb
or
mov
aam
arpl
or
shll
dec
or
adc
test
iret
cmp
ret
xchg
aas
jno
add
xor
mov
pop
fmul
pop
scas
ds
jno
xlat
add
add
imul
xor
pop
out
mov
loope
mov
jo
add
popf
and
mov
loope
movsl
push
xor
mov
adc
cmp
out
sbb
je
add
js
add
sti
test
outsb
ljmp
pop
movd
lcall
mov
outsl
test
inc
adc
push
stc
iret
insl
in
or
sahf
lods
ror
mov
push
adc
or
add
dec
push
aas
push
out
leave
repnz
aad
fdivrs
dec
pop
scas
cwtl
shl
sub
cmp
mov
fisubrl
or
gs
mov
jne
pop
and
pop
xchg
and
rolb
stc
out
jnp
jno
sub
lret
pop
adc
fabs
scas
dec
cmp
rclb
fimuls
mov
dec
push
repnz
mov
add
cltd
or
dec
dec
add
cs
jbe
xchg
add
mov
push
xor
aam
inc
inc
or
or
mov
sbb
lea
jmp
arpl
ret
ret
orb
add
lcall
out
std
add
ds
add
xchg
cs
pop
stos
hlt
std
sti
rcrl
add
sbb
rolb
sbb
test
int
addr16
outsb
push
fstl
sti
mov
rcrb
push
adc
or
dec
insb
or
add
repnz
fidivl
dec
mov
aam
inc
xor
add
addl
push
test
sbb
mov
xchg
out
movsb
cmc
dec
fstpl
mov
pop
repnz
mov
clc
or
loope
add
add
rcll
jae
pop
stos
inc
dec
jns
rolb
sbb
sahf
test
push
popa
mov
push
cmp
ja
out
fimull
pop
scas
jp
dec
xor
iret
dec
pop
rcr
popa
in
test
push
popa
push
aaa
leave
push
mov
xchg
mov
lods
dec
movb
insl
or
push
mov
cld
mov
out
dec
jbe
lods
or
adc
add
sbb
adc
ljmp
push
cld
push
add
sbb
add
iret
push
sbb
test
mov
dec
push
int3
pop
loopne
lret
stos
aam
cmpsl
add
cs
pop
rol
flds
cwtl
aaa
sub
cltd
out
not
popa
xor
adcl
addr16
mov
dec
xor
jno
add
stos
add
in
ret
inc
add
arpl
lahf
pushf
or
dec
fnstsw
add
xchg
jbe
ja
sbb
add
dec
and
cmp
mov
cmp
rol
sub
cmc
add
jno
add
add
push
fwait
dec
fs
shlb
cli
nop
mov
xor
pusha
loopne
xchg
movsl
push
sahf
pop
out
and
or
mov
dec
dec
scas
pop
clc
repz
pop
or
scas
stos
mull
xchg
in
aas
outsb
pop
cmpsb
sbb
add
iret
repnz
ficoms
or
addb
jmp
push
imulb
idivb
fldt
inc
lret
jbe
popa
orl
mov
je
es
out
jae
add
lret
out
push
pop
mov
aas
out
lods
and
pop
cli
repnz
int
lret
fs
loop
lcall
sub
sbbb
cwtl
enter
out
sarl
add
call
hlt
or
mov
push
test
rcll
xlat
imul
add
push
testb
xchg
add
or
rcrb
and
inc
sub
pop
push
outsl
clc
loope
shll
jne
and
adc
inc
dec
sub
or
jle
push
out
mov
pop
adc
xchg
add
add
add
clc
mov
loope
ljmp
or
loope
stos
mul
insb
dec
mov
xor
or
popf
outsl
add
inc
pusha
rolb
and
dec
out
xorb
iret
pop
pop
fdivl
inc
dec
mov
cld
insl
fwait
cmp
cmpsl
dec
test
cmp
outsb
dec
mov
dec
enter
add
jecxz
cmp
fldl2t
add
repnz
cmp
add
int3
xor
shlb
fs
cwtl
xor
mov
cmp
repnz
pop
dec
lret
enter
enter
dec
sub
add
pop
rcrb
addl
jecxz
and
cwtl
roll
fsub
xor
push
fisubrl
andl
pushf
mov
shlb
add
repz
popa
out
push
shlb
arpl
sub
dec
xchg
nop
cmp
ds
mov
mov
xor
in
add
inc
cld
enter
jge
or
js
pop
rol
inc
js
js
js
call
mov
mov
in
adc
rcrl
outsb
repnz
aad
jmp
dec
jno
leave
add
inc
pushf
sub
lret
push
loopne
xchg
cmp
shl
pop
das
inc
inc
dec
pop
fidivrl
adc
std
icebp
enter
add
sub
dec
icebp
shlb
test
sbbl
iret
mov
pushf
xchg
jmp
or
jnp
mov
fsubrl
dec
movsb
js
scas
and
mov
subl
cli
xlat
mov
insl
repnz
in
fiadds
lock
jle
sti
lret
add
mov
pop
enter
aad
push
lcall
movsb
leave
push
push
mov
movsb
popf
inc
and
addr16
cld
ficomps
pop
popa
pop
mov
out
jne
outsl
subl
leave
xchg
push
cmp
loop
popa
aam
movsb
stos
jb
je
repz
mov
mov
sub
mov
cmp
adc
add
cs
dec
outsb
hlt
add
mov
jmp
inc
pop
jmp
cmpsb
push
sbb
adc
outsl
dec
add
xchg
fdivs
iret
inc
rorb
jl
imul
dec
mov
jb
add
inc
jg
add
cmp
sahf
test
sub
stos
xor
ds
add
jp
shll
dec
lahf
xor
sbb
pusha
jo
push
pop
loope
add
pop
test
divl
jmp
lock
rcrb
xor
je
popf
pop
out
fwait
xchg
iret
inc
push
outsl
jle
arpl
fmuls
sbb
add
and
data16
loop
loope
adcl
add
ret
sbb
int3
loope
add
sbb
in
add
dec
sub
sub
clc
sbb
sub
daa
call
xor
subb
ljmp
fs
jae
adc
pop
nop
sbb
xchg
lock
xchg
iret
adc
push
fisubrl
jp
add
clc
mov
leave
cwtl
das
adc
aad
inc
loop
clc
rcl
fs
pop
mov
or
push
dec
or
jmp
mov
lret
repnz
and
je
inc
cmp
arpl
je
or
xchg
ja,pn
lcall
push
scas
add
outsb
clc
add
ffree
cs
lods
cmp
add
jb
and
add
xchg
push
add
pop
int
test
add
loope
xorl
inc
test
aam
dec
add
cmc
mov
pop
outsl
mov
ljmp
push
pop
and
xchg
push
ret
scas
inc
mov
cmp
arpl
pusha
add
jecxz
xchg
mov
mov
lock
add
popa
in
push
xchg
fdivs
aaa
fnsave
sbb
add
jb
mov
dec
push
and
popf
pop
into
add
repnz
ss
dec
adcl
stos
xor
clc
repz
mov
pusha
sub
or
xor
lock
sub
call
pop
pop
mov
cwtl
pop
jmp
lea
aam
ljmp
xlat
cltd
das
dec
mov
cmp
lock
jno
ret
int
jno
rorb
sub
mov
and
lret
imulb
jae
mov
fs
sub
add
mov
jne
es
pop
fisttps
or
outsb
cli
fldt
popf
outsl
mov
jmp
fsubrp
int3
or
stos
dec
add
xor
jae
sbb
mov
in
adc
addr16
scas
test
inc
insb
mov
mov
roll
pop
push
stos
or
jmp
lea
sbb
sbb
mov
push
add
cmp
add
pop
push
add
ds
xchg
cmp
add
and
imul
mov
sahf
sbb
ss
jecxz
or
mov
insl
mov
negb
aam
or
fldenv
mov
cs
mov
adc
dec
mov
jmp
xchg
fists
mov
add
fsubs
xchg
add
xchg
xchg
add
or
lea
adc
cmp
mov
xor
dec
jl
icebp
aad
and
iret
or
popa
int3
aam
jnp
fwait
out
jl
push
jmp
add
mov
mov
add
cmc
test
add
pop
dec
cmp
movb
xlat
stos
dec
stc
mov
out
data16
rcl
out
jl
bound
fisubrs
sbb
jno
cmp
mov
orb
dec
mov
cmp
mov
mov
imul
dec
dec
lret
or
std
jmp
dec
cmp
test
pop
popf
mov
inc
pop
mov
push
or
jnp
jg
add
cmp
mov
test
xor
adc
scas
inc
and
and
scas
ds
add
aas
pop
jl
mov
add
ds
xor
push
in
mov
push
add
sub
cltd
es
and
sub
out
into
cmp
jp
popa
nopl
adc
add
fidivs
and
and
pop
jmp
add
fdivr
imul
bound
xchg
outsb
add
icebp
ja
outsl
inc
cmp
push
mov
fnstcw
add
aad
add
mov
mov
mov
add
push
enter
fdiv
push
cmp
aaa
push
scas
jge
adc
jo
aad
sbb
test
adc
test
jl
dec
sbbb
clc
pop
fildll
dec
lcall
out
inc
pop
test
mov
dec
loop
outsl
mov
aad
pusha
lahf
lcall
stos
mov
in
mov
sub
pop
fwait
adc
inc
mov
mov
aad
sbb
xchg
fnstenv
dec
or
clc
out
popf
test
movsl
add
sub
dec
mov
or
jae
sbb
sbb
outsl
add
shl
pushf
test
mov
sub
clc
pop
in
aad
or
mov
in
adc
push
hlt
cmc
stos
pop
jb
das
mov
sbb
xor
sbb
fxch
or
insb
cmpsl
andl
fisubl
icebp
test
pop
add
mov
mov
inc
sub
int
movsb
cmp
mov
add
mov
mov
sar
out
in
stc
mov
push
loope
add
into
inc
mov
mov
sub
clc
imul
mov
pop
mov
test
sbb
xchg
mov
xchg
imul
stos
xchg
cmp
sahf
adc
xlat
cmp
add
sbb
fsubl
cmp
stc
adc
test
or
sti
or
lds
fdivrs
enter
pop
mov
push
sti
jle
cmpsl
inc
movl
enter
mov
cli
xor
dec
dec
loopne
xchg
cmp
cmp
in
int
daa
push
outsl
fnstcw
add
arpl
mov
gs
mov
test
lret
shll
pushf
das
icebp
adc
sbb
xor
add
mov
cmpsl
add
cmpsb
pop
test
add
pop
test
loope
into
sub
cmp
pop
aam
lret
in
push
mov
pop
and
dec
lret
jae
dec
jb
shll
or
jno
add
insl
push
out
xchg
push
mov
add
scas
mov
add
es
xor
push
std
outsl
pop
inc
ss
add
jecxz
popa
inc
inc
jmp
adc
cmpsb
push
lret
mov
pop
into
xchg
insl
rorl
sbb
mov
sub
rcl
loopne
pop
imul
mov
cwtl
das
mov
pop
jo
add
jae
sbb
lds
sub
pop
mov
dec
icebp
mov
pop
cs
push
lcall
jns
xlat
push
out
loop
sbb
or
aad
and
inc
loopne
lret
outsb
sbb
mov
inc
mov
testb
jnp
popf
imul
dec
cli
icebp
sub
mov
dec
push
test
daa
add
ss
call
aam
lahf
cmpsl
jge
decl
dec
ds
fs
xchg
aam
sub
out
ljmp
shlb
dec
out
jno
pop
or
add
push
stos
out
jp
repz
je
in
sbb
cmp
jae
stos
jb
dec
xor
mov
out
dec
add
ja
aaa
sub
lock
out
loope
aam
iret
fs
jmp
cmp
fisttps
pop
dec
sub
add
mov
aaa
fisubrs
mov
mov
cmp
dec
jb
dec
pushf
cmpsl
mov
arpl
loop
mov
inc
sti
mov
pop
iret
jb
mov
and
add
nop
inc
xor
imulb
or
add
out
xor
adc
add
mov
add
cmp
add
mov
xchg
push
jmp
into
push
pop
ljmp
or
repnz
mov
outsb
dec
push
jecxz
push
cmc
icebp
lods
shlb
insl
xchg
or
xor
or
in
cmp
cmp
mov
js
mov
mov
add
adc
push
outsl
dec
leave
outsb
cli
iret
add
lahf
jmp
dec
inc
fadd
sub
adc
sub
sub
ss
add
xor
aam
sbb
cmp
jl
fucomip
push
roll
stos
aad
in
xor
jne
or
add
xor
lahf
out
mov
iret
cli
and
ficompl
iret
sbb
into
jno
xchg
sub
cmp
xlat
sub
int
add
xchg
fldenv
inc
dec
jge
mov
mov
js
cmp
in
sub
test
rol
xchg
inc
sbb
mov
xchg
mov
outsb
subb
ds
sub
popa
xchg
sbb
mov
jl
inc
lcall
shlb
mov
fldenv
aam
test
scas
sub
sbb
ret
sub
mov
inc
iret
mov
hlt
mov
push
test
and
dec
rcll
pusha
sbb
sar
push
or
fnsave
sbb
and
and
or
jg
lcall
icebp
and
dec
add
ficompl
mov
sub
mov
push
inc
pop
insb
sbb
in
push
arpl
imul
fidivrs
stc
fdivr
add
jno
xchg
loopne
and
jge
sub
mov
mov
mov
unpcklps
gs
test
fildll
test
aaa
inc
pop
and
mov
dec
push
negb
xchg
popf
gs
xor
aam
mov
std
mov
inc
sbb
jmp
mov
add
mov
bound
jns
add
mov
iret
clc
add
mov
call
mov
arpl
sbb
sub
stos
sub
adc
faddp
dec
gs
sbb
pusha
add
pshufw
inc
and
lock
dec
cmp
or
into
xchg
enter
or
movl
rorl
or
daa
ds
inc
insl
aam
mov
popf
push
add
stos
xchg
add
cld
insl
pop
pop
xchg
fsubs
sub
pop
repnz
or
fsubl
sub
loopne
test
cmpsb
jge
sti
xchg
ljmp
in
pop
mov
dec
pop
or
movsl
mov
test
dec
mov
mov
cmc
adc
gs
scas
idivl
jb
frstor
outsb
add
imul
hlt
dec
inc
mov
testb
insb
xlat
jge
mov
xor
jecxz
cmpsb
xor
add
out
xchg
mov
add
cltd
test
and
mov
negl
imul
push
ss
add
mov
push
jp
jno
add
mov
sbb
addr16
pop
dec
ret
test
push
pop
iret
jnp
ds
pop
out
cmp
lret
pavgw
pop
push
push
and
pop
add
imul
jmp
in
ds
mov
mov
negb
pop
add
arpl
scas
rorb
outsl
fwait
jae
inc
add
in
out
sahf
scas
iret
cli
push
mov
rorl
or
fcmovnb
add
mov
lds
stc
add
out
mov
mov
add
cs
stc
and
lcall
dec
dec
je
pop
int
mov
mov
push
call
clc
dec
adc
push
shl
xor
lock
rcrb
mov
faddl
dec
dec
ds
insb
lods
xchg
push
bswap
in
jmp
cld
jb
aam
testb
mov
fsubs
cmpsb
call
push
jl
es
push
mov
add
jecxz
popa
jb
ffree
ror
icebp
add
mulb
sbb
lcall
xchg
pop
and
add
pop
dec
sbb
pop
push
fsubl
fiaddl
and
pop
or
inc
stos
inc
and
into
mov
xor
idiv
inc
push
pop
iret
lods
or
jne
sbb
fmuls
xor
shrl
dec
inc
add
cmp
push
shl
shl
mov
push
add
xor
aas
lcall
insl
and
dec
push
hlt
add
test
pop
pop
test
jbe
and
sbb
and
push
sbb
mov
lock
jno
mov
push
lea
hlt
dec
stc
inc
mov
arpl
push
mov
mov
stos
add
jp
fsubs
or
test
call
test
lcall
inc
ret
inc
jp
loope
insl
jo
pusha
bnd
inc
add
push
fsubl
mov
sbb
ficoms
xchg
cs
or
cmp
pop
adc
outsl
int
nop
into
das
das
aam
scas
rol
pop
mov
call
pop
xchg
in
rcl
je
sub
outsl
fldl
push
mov
jb
subb
mov
dec
ss
out
fwait
sbb
shr
cmp
sub
shrb
addr16
add
mov
fcmove
gs
push
jl
out
add
mov
std
imul
sarl
jmp
pop
es
mov
xchg
add
sub
add
stos
add
outsb
mov
xorl
sbb
popa
jnp
jl
out
out
push
inc
imulb
dec
lock
jl
fdivrs
add
pop
and
dec
pop
xchg
or
pushf
dec
ja
nop
pop
scas
adc
cmpl
jmp
clc
cmp
xor
add
push
push
add
push
jge
dec
imul
dec
mov
xlat
popa
adc
mov
jo
cmp
ret
loope
lret
lods
dec
pop
adc
add
dec
insb
jle
popa
loopne
test
out
xlat
int3
inc
adc
sarl
jnp
add
mov
or
insb
call
mov
dec
jae
fdivl
xorl
outsl
jle
dec
pop
dec
fbld
add
insb
cmp
aaa
jns
popf
repnz
loope
dec
jnp
pop
out
test
dec
sub
xchg
pop
in
and
je
leave
mov
or
xor
mov
push
add
nop
fs
in
add
loopne,pt
xor
jle
inc
push
pop
add
mov
dec
cmpsb
leave
cltd
out
xchg
outsl
mov
out
les
ss
lods
sub
in
popf
test
pop
incl
adc
int
lea
push
nop
scas
cmp
xor
lret
pop
or
loopne
sbb
xchg
push
fidivrs
inc
mov
mov
rol
jb
outsb
mov
inc
mov
popf
popf
xchg
call
add
out
inc
test
mov
inc
dec
aad
xlat
inc
sub
mov
aam
xor
xor
cmc
mov
out
leave
push
out
jmp
outsl
adc
stos
dec
cmp
das
mov
xor
fisubl
or
cmp
xor
arpl
sahf
fsts
sub
mov
sub
cmc
jmp
movups
inc
jl
and
test
lcall
sub
inc
cltd
mov
mov
pop
sub
push
pusha
add
loopne
jne
scas
and
in
sbb
add
fisubrl
popl
inc
jmp
mov
push
mov
add
jns
cmp
adc
aad
add
xor
mov
aad
rcrb
push
pop
test
xchg
nop
inc
mov
aam
or
or
aaa
sub
pop
push
out
and
dec
jmp
scas
dec
push
inc
rcrl
fistps
loopne
add
mov
add
jmp
xorb
mov
outsl
int3
add
cmp
pop
popa
fcmovbe
pop
add
inc
ret
imul
jb
lock
shll
add
imul
test
cmc
cmpsb
jb
hlt
jge
aam
mov
mov
cltd
mov
pop
adc
dec
iret
push
or
cmpsb
cmp
fcmovne
sub
into
and
icebp
xor
add
add
inc
add
lahf
cs
add
rol
add
popa
out
rol
add
into
sar
loope
imul
ss
flds
popf
lds
add
add
pop
daa
adc
mov
imulb
xchg
jb
adc
adc
ret
dec
insl
and
inc
adc
adc
aam
lahf
rol
aam
or
push
and
gs
rcr
aam
sbb
rclb
push
xchg
jg
or
xchg
mov
ss
add
icebp
repz
imul
test
mov
mov
imul
mov
or
add
insl
mov
lea
iret
fisubl
inc
fwait
jns
fcoml
and
sahf
ljmp
sbb
out
frstor
inc
and
adc
bound
mov
mov
clc
push
sbb
dec
add
cld
jmp
inc
xor
rolb
mov
cltd
mov
in
lahf
daa
rolb
dec
sbb
pop
push
add
and
pop
cltd
or
clc
add
mov
pop
sub
pop
mov
xlat
shlb
xor
or
dec
insl
dec
and
ja
repnz
aad
mov
sbb
dec
rcl
xchg
lahf
fiaddl
mov
ljmp
add
dec
insb
jle
popa
loopne
test
push
popf
jns
in
xchg
jae
hlt
shlb
mov
cmp
ret
push
das
test
out
int
jnp
mov
jge
inc
xor
insb
push
out
jle
pop
add
mov
add
inc
xchg
pop
nop
idivb
out
mov
insb
lds
mov
mov
xchg
add
mov
in
clc
jne
add
lock
loop
xor
mov
fdivr
sbb
js
mov
add
iret
das
enter
stc
xchg
fstpl
dec
shll
pop
add
shll
sub
les
mov
daa
lods
add
clc
cmp
xor
mov
test
inc
inc
or
in
mov
mov
out
add
xchg
sbb
in
ds
inc
pushl
dec
ds
outsb
add
mov
mov
pop
idivl
test
imul
xchg
add
test
adc
inc
cmp
shll
lods
sub
add
xorb
add
arpl
pop
in
clc
inc
add
cmp
stos
jne
fisubrs
and
dec
dec
dec
mov
rcrl
in
ret
pusha
repz
mov
mov
lret
pop
xchg
or
adc
add
test
ret
sarl
add
push
pop
sahf
fisubs
mov
add
pop
xor
add
ss
mull
adc
ja
fildl
add
jns
and
mov
xor
xor
nop
add
lret
scas
dec
add
mov
add
mov
xchg
adc
inc
pop
sbb
mov
inc
sbb
pop
ljmp
stc
je
adc
fisttps
inc
loope
dec
mov
lods
dec
dec
jmp
mov
sub
sub
aas
jae
mov
imul
loopne
test
lods
xor
cld
test
stos
insl
cmp
movsl
jg
fbld
cmpsb
cli
jb
clc
gs
add
in
outsb
in
mov
push
das
add
push
call
dec
movsb
jle
pop
loopne
push
cmp
lds
mov
jmp
sbb
mov
xor
jns
int
fbstp
mov
cmp
and
sahf
add
loope
pop
popf
in
lds
call
jbe
lea
adc
sbb
sub
mov
insl
fmul
add
popf
pushf
and
sbb
pop
ja
js
inc
sub
sbb
ljmp
loop
sbb
adc
testl
xor
add
dec
movsl
sti
mov
mov
mov
leave
dec
and
pushf
das
add
push
or
push
stos
inc
adc
cmp
cmp
fldt
dec
aas
pop
out
sub
insl
mov
fs
xor
aad
sbb
int
sub
mov
test
stos
mov
mov
jne
pop
fneni(8087
aas
push
enter
add
pop
ficoml
imul
and
pop
lods
xlat
sub
fsubrs
mov
arpl
mov
jmp
js
inc
je
rcrl
xor
aam
iret
es
mov
xlat
mov
xor
cmp
and
popf
loopne
jge
popa
bound
pop
str
aam
pop
clc
sub
sub
imull
out
mov
aad
add
in
inc
adc
sub
sbbl
loope
repnz
rclb
push
push
xchg
adc
stos
push
aam
jmp
cmc
or
mov
push
or
add
mov
pop
sub
repz
add
push
incl
sahf
mov
daa
fcomip
add
mov
mov
fnstsw
outsb
fiadds
popf
rcrl
jae
das
popl
ret
mov
sub
imul
sbb
mov
imul
xor
fiaddl
pop
fs
push
call
cltd
movsl
mov
in
fldcw
roll
rorb
add
push
cld
and
add
xchg
push
ljmp
or
mov
xchg
sub
sub
pop
jle
cmp
outsl
or
cli
cltd
shll
fsubr
xor
jns
add
adc
jb
mov
jl
jns
add
push
sub
mov
bound
dec
hlt
mov
jae
insl
pusha
lldt
or
out
xor
mov
mov
mov
dec
and
orb
cmp
mov
mov
clc
jge
sbbb
aas
adc
cmp
sbb
mov
inc
dec
sbb
or
add
ljmp
mov
ljmp
adc
add
loop
sti
lock
add
jl
inc
subb
out
push
loop
fisubrl
mov
jp
sbbl
test
inc
pop
out
int
rcrl
and
mov
cmpb
xchg
fs
enter
or
jno
jl
mov
jae
push
addb
mov
mov
cld
test
xchg
addr16
mov
add
jge
inc
imul
es
jbe
iret
mov
add
pop
lcall
in
lods
pop
jl
shl
add
lahf
lcall
jae
cmpsl
daa
fs
sub
faddl
dec
jne
sbb
mov
inc
adc
mov
xchg
jl
jae
lock
add
inc
jp
push
dec
test
jge
adc
pop
xchg
mov
add
mov
jb
adc
ja
outsb
adc
call
adc
in
push
arpl
daa
sbb
add
das
dec
dec
aaa
test
out
cmp
push
mov
subl
daa
fbstp
out
cwtl
inc
jne
add
jl
mov
add
push
fwait
call
xor
negb
add
xchg
mov
insl
pop
add
loope
adc
push
push
stc
mov
add
push
inc
fisubrl
repnz
pop
adc
cltd
loopne
dec
test
mov
push
jbe
insl
add
inc
aad
mov
push
add
les
add
and
add
out
mov
call
ret
cld
rcll
pusha
dec
sub
xchg
fs
lods
fldenv
popl
frstor
es
es
imul
jns
and
aam
adc
xorl
test
mov
sbb
dec
pop
mov
or
insb
inc
dec
pop
add
lods
sub
pushf
imul
cmp
daa
xchg
in
out
jl
sbb
xorb
jle
insl
dec
mov
call
mov
mov
aas
sbb
daa
pop
add
xchg
shll
fwait
bound
fs
jmp
mov
lret
push
cvtps2pd
out
pop
or
mov
shl
push
inc
addr16
and
cwtl
jns
jae
dec
cmpsl
xchg
sub
out
add
push
pushf
ficoml
mov
jo
adc
and
mov
mov
stos
dec
xchg
cmc
mov
out
or
and
cmpl
and
cmc
fbld
roll
adc
cmp
push
pop
xchg
dec
sbb
cmp
mov
aad
loop
out
add
pop
int
or
lret
cmp
in
xor
gs
fs
mov
sbb
repz
ljmp
stos
repnz
ljmp
fbstp
add
push
insb
add
xchg
int
sbb
add
dec
add
cld
out
cmp
pop
lock
ljmp
sub
test
outsl
ficoml
testl
clc
sbb
add
pop
cld
jne
out
repnz
add
fs
lcall
mov
repnz
push
dec
loope
xchg
push
loopne
mov
inc
stos
test
aaa
iret
pop
or
mov
xchg
jmp
add
pop
les
and
adc
popa
movsb
dec
push
adcb
and
add
repz
mov
lea
mov
xlat
leave
mov
cmp
jge
sub
rcll
mov
mov
and
mov
rol
jae
in
in
push
and
adc
out
ss
cmp
push
mov
int
frstor
lods
or
pop
dec
clc
and
sahf
or
loope
ja
sbb
in
lods
adc
movsb
adc
loope
test
push
fbld
lods
add
mov
fucomp
popa
add
cmp
pop
movsl
add
cmp
imul
add
pop
imul
clc
popf
xchg
or
repz
pop
or
addl
inc
add
cmp
or
imul
inc
mov
popa
icebp
loope
mov
inc
fbld
out
and
adc
stc
and
leave
sub
mov
dec
cltd
mov
cmp
pop
and
xor
sbb
movsb
jl
adc
sub
xchg
into
xlat
loopne
mov
fisttpl
or
fsubp
add
cltd
sarb
jno
add
sbb
xchg
pop
movb
std
dec
jo
test
repz
fwait
xor
xchg
xchg
mov
ret
iret
dec
orl
xor
rorb
xchg
es
lret
or
test
xorl
out
or
insl
loopne
add
js
sub
test
cltd
dec
jmp
cmp
sub
shrl
add
and
out
subb
roll
inc
cli
cmpsl
out
outsb
ret
inc
outsl
loop
jl
shll
mov
in
jnp
fwait
imul
ss
add
mov
fildl
out
jg
jae
jns
xlat
add
jnp
insb
cmp
in
sbb
iret
addl
xchg
js
imul
add
and
and
add
cmp
lods
cmp
jmp
inc
adc
test
movsb
js
add
or
cwtl
inc
and
jp,pn
pop
inc
mov
add
fcomi
ficoml
add
mov
leave
push
adc
sub
shl
mov
and
xlat
bound
lcall
je
fldpi
shlb
out
jne
popf
sub
or
nop
fs
jecxz
shll
xchg
sub
loope
scas
rol
or
in
mov
mov
jb
push
insb
mov
mov
mov
flds
pop
add
loopne
cmp
mov
scas
lret
imul
movsl
ljmp
insl
lret
cmc
add
mov
add
lahf
jnp
adc
mov
pop
sub
inc
pop
cmp
rcll
add
fsts
inc
mov
stc
mov
push
mov
mov
lds
aaa
daa
std
stos
out
xchg
jno
xorl
mov
dec
xchg
aam
xchg
xlat
push
rorl
bound
rcll
cmpsb
cmp
and
sub
out
add
xor
add
int
inc
sub
roll
push
pop
daa
inc
and
or
add
xchg
fldcw
xor
xor
js
add
repnz
shlb
xor
xlat
pushf
sub
rolb
repz
add
sti
add
nop
rcrb
loope
scas
out
lret
stc
add
mov
cs
push
and
divl
addl
cs
push
xchg
aad
sub
adc
push
aad
scas
push
or
jge
cmp
or
mov
outsl
fnsave
sbb
mov
adc
pop
cli
in
add
std
stos
mov
pop
addr16
into
leave
jnp
dec
add
fwait
mov
lcall
clc
daa
jl
add
js
ja
rclb
pop
cmpsl
ss
cmpsb
mov
add
test
sbb
adc
das
xor
add
fsub
hlt
adc
not
sub
arpl
mov
jge
jg
hlt
mov
dec
cmp
out
sahf
jecxz
cli
loop
mov
add
mov
fiaddl
cmpsl
aaa
es
cmp
add
mov
jno
dec
mov
add
mov
sub
repz
lods
sbb
rorb
mov
aad
cwtl
loop
xor
sahf
pop
stc
test
dec
test
mov
sbb
add
xor
xchg
mov
cmp
dec
pop
dec
cmp
push
and
add
scas
or
mov
lock
add
and
aad
fimull
cmp
movsl
adc
push
jg
in
cmpsb
jl
push
push
lret
out
sbb
les
add
mov
pop
dec
pusha
fistpll
sti
incb
leave
mov
push
cmp
and
mov
in
cmpsb
add
stc
gs
mov
mov
and
negb
cmpsl
jns
scas
mov
push
gs
movsl
inc
ds
add
loope
rcr
loopne
iret
push
lds
or
leave
dec
inc
je
aam
dec
addr16
mov
js
cmpb
inc
jno
or
out
xchg
flds
add
inc
push
hlt
dec
test
mov
test
lret
sbb
mov
and
mov
loope
test
lods
mov
xor
xorb
dec
out
sub
mov
adc
sbb
sub
dec
dec
inc
jmp
sbb
adc
rol
adc
and
ffree
sub
stc
iret
push
aam
lret
add
xchg
mov
add
imul
out
in
lret
push
inc
or
ja
add
mov
or
ficompl
and
imul
shlb
jle
pop
cli
jge
mov
pop
lea
ljmp
jne
cli
bound
and
adc
loop
sbb
jns
inc
sbb
add
dec
jbe
sbb
dec
inc
jp
into
test
fists
cli
dec
pushf
imul
ss
rolb
call
test
mov
loope
add
inc
cs
push
cmpsb
inc
sbb
test
push
push
pushf
dec
mov
nop
inc
mov
rolb
dec
adc
cwtl
lock
sub
loopne
mov
push
adc
fldenv
push
xchg
add
sub
xchg
int
jmp
in
imull
in
cmp
shrl
xchg
xchg
cmp
cli
into
outsl
data16
adc
stos
jle
out
mov
cmp
push
ror
scas
popf
mov
int
ror
scas
outsl
or
cmc
sbb
add
fs
aas
add
int3
jle
push
inc
aad
jp
mov
fiaddl
lds
das
cmc
mov
lcall
dec
pop
loope
push
aad
mov
dec
pop
mov
pop
or
sbb
stc
movsl
dec
cli
xchg
out
sahf
adc
ljmp
mov
sub
mov
mov
dec
mov
div
push
mov
and
xchg
dec
sbb
xor
pop
inc
adc
sbb
clc
cmp
add
jle
mov
jno
aad
movsl
cmp
cmp
mov
sub
lock
rcll
push
movsl
jle
scas
jg
jnp
or
cmp
dec
jge
push
ds
aas
add
scas
pop
cmpsb
lods
mov
scas
stc
es
out
mov
rdtsc
jae
jp
sbb
sbb
sbb
push
jmp
lret
in
inc
dec
scas
jg
fisttpll
xchg
jp
cli
daa
or
stos
jge
dec
outsl
enter
sbb
dec
jnp
test
sub
mov
sbb
ds
shll
push
negl
out
or
jmp
loopne
movsb
add
jecxz
roll
inc
loop
sbb
push
cmp
mov
loopne
mov
cmp
cmp
inc
xor
out
mov
rcll
cmpb
and
and
add
mov
lock
push
xchg
aam
fcmove
sbb
mov
mov
cwtl
stc
dec
xchg
subb
int
dec
enter
in
or
decl
jle
repnz
arpl
out
movl
sbb
pop
and
fs
mov
pop
rol
in
inc
js
enter
test
orb
and
shll
jo
andl
jge
add
jno
les
test
mov
add
xor
icebp
lock
dec
bound
jecxz
out
and
mov
fisttps
or
mov
fsubrp
enter
mov
mov
cmp
mov
rol
lret
xor
popa
ret
stos
les
xchg
call
mov
hlt
mov
sarb
das
dec
sub
in
loope
push
add
stos
inc
enter
xor
sbb
aas
cs
jecxz
sbb
test
mov
sub
jno
aam
add
adc
and
aad
inc
sub
stos
popa
jg
sub
dec
inc
adc
jnp
shrl
add
push
es
outsl
adc
mov
mov
mov
pop
cmp
push
rolb
dec
loop
inc
pop
adc
pop
in
or
punpcklwd
jae
aaa
mov
jnp
dec
ffree
add
das
xor
mov
testl
dec
lahf
or
add
sti
cmpsl
std
add
mov
movsb
dec
vprotd
lcall
pop
and
jecxz
je
fs
mov
pop
mov
and
sbb
test
pop
add
jp
scas
mov
push
cmp
or
fdivp
ret
out
std
fstpt
out
iret
sub
clc
add
in
and
popa
loop
jne
out
imul
aas
mov
adc
add
adc
clc
add
je
and
push
pushf
add
aam
pop
mov
push
cmp
cmp
call
mov
insb
enter
pop
dec
movsl
adc
fwait
pop
sbb
js
xor
fs
mov
maskmovq
divl
xor
jl
rorl
cmp
repz
insb
aas
leave
mov
jns
mov
ficomps
sti
aam
inc
add
inc
mov
add
add
sbb
dec
pop
lret
clc
or
add
add
jle
push
bswap
sarl
inc
test
dec
repz
dec
xchg
aad
std
sub
xchg
shl
cmpsl
cmp
shlb
cli
movsb
out
sub
pop
rolb
xchg
jl
cmc
push
je
dec
add
mov
movsl
ja
outsl
stos
xorb
jns
dec
pop
pop
mov
mov
in
dec
inc
pusha
mov
rcrb
add
inc
push
sahf
add
inc
ss
push
ljmp
imul
add
add
fwait
cmp
mov
loope
sub
sub
adc
bound
xor
jp
popa
rcl
sub
dec
add
insb
loope
xchg
pusha
das
add
mov
into
movsl
mov
aad
xchg
loopne
cmp
js
rcll
lcall
lcall
outsb
or
sbb
test
sub
test
in
mov
cmp
xor
pusha
ljmp
or
add
and
stos
jno
push
mov
mov
jbe
mov
add
es
les
aam
dec
in
mov
xchg
mov
and
and
xchg
push
mov
add
in
adc
add
xor
add
jbe
test
icebp
mov
sbb
push
cmpsb
jmp
or
mov
fldt
out
cltd
add
pop
jmp
fmull
mov
pop
addr16
loopne
xchg
icebp
out
dec
jmp
cmp
add
pushf
cmpsl
dec
je,pt
push
adc
leave
enter
adc
cmp
jl
xor
mov
shll
cld
aad
add
nop
push
jno
dec
inc
jnp
in
sub
dec
lea
test
fimull
rorb
push
or
push
mov
mov
adc
fsubrs
mov
and
dec
stos
add
push
or
in
insb
cmp
jle
xchg
mov
cmp
mov
loope
xchg
pop
dec
mov
mov
out
out
jne
addl
dec
and
mov
stos
movsl
add
and
jne
andb
out
adc
push
sbb
sti
sub
inc
lret
dec
loope
mov
xor
add
mov
push
sub
roll
inc
scas
xor
imul
sar
jae
push
and
mov
mov
sub
sbb
xchg
imul
xor
aam
daa
xor
adc
cs
inc
sub
mov
sbb
adc
fldt
test
add
push
or
mov
jo
cmp
in
daa
inc
dec
xor
fnstsw
add
dec
lea
fsubs
popa
sbb
mulb
cmp
lea
mov
stos
test
push
or
inc
jl
push
insb
inc
imul
sar
dec
daa
shrb
xchg
push
inc
outsl
std
scas
jge
adc
scas
add
sbb
dec
es
xor
inc
and
mov
popa
inc
mov
stc
and
mov
hlt
sub
inc
adc
add
insl
add
mov
or
add
jo,pt
test
sub
icebp
xchg
mov
mov
fs
sub
push
loop
sbb
cmp
popa
bound
mov
cmp
xor
pusha
call
pop
xor
clc
out
push
jecxz
dec
lock
add
xchg
rcr
arpl
adc
pop
mov
push
pop
or
jno
push
add
inc
adc
fmuls
rcll
dec
cld
push
add
mov
xor
in
cmp
fwait
aam
push
or
test
out
in
inc
lahf
into
or
sti
aas
stos
test
lods
nop
sbb
add
jnp
sub
rcrl
cmp
jp
mov
xchg
data16
mov
lret
movsl
js
insb
cli
push
add
mov
xchg
add
and
mov
dec
dec
jmp
xlat
push
or
mov
and
sbb
jp
add
adc
sbb
add
test
int3
dec
push
or
pop
lods
lods
cmpl
mov
adc
dec
push
xor
jae
pop
mov
sbb
push
mov
loope
push
sub
pushf
add
shl
int3
sub
test
popf
xor
push
adc
cmpsb
idivl
add
jge
popl
js
cmpsl
adc
out
lea
mov
push
mov
adc
or
sbb
inc
addr16
iret
iret
mov
sbb
in
pop
cmp
sti
adc
int
test
decl
ja
pop
push
dec
insl
rol
aas
mov
adc
les
pop
cli
stos
inc
xchg
xor
xor
or
mov
lock
fcomps
mov
sbb
inc
das
xchg
fsubl
out
cmc
stos
je
add
jnp
xchg
cld
xor
mov
push
mov
loope
movsl
push
iret
ret
and
push
mov
dec
mov
pushf
push
mov
movsl
add
push
pop
sbb
dec
dec
mov
sub
mov
sub
xor
add
mov
sbb
test
add
and
aaa
dec
and
inc
fisttps
xchg
add
inc
adc
lcall
push
xor
iret
sbb
jl
aam
jecxz
outsb
iret
sub
sbb
nop
mov
jo
cltd
xlat
xor
arpl
jmp
and
outsl
and
addr16
lcall
xchg
out
add
inc
mov
push
pcmpeqw
cli
push
sbb
or
xchg
cmc
mov
movsl
frstpm(287
add
rol
xchg
push
pushf
out
add
jl
jge
and
and
repnz
pop
dec
test
and
sti
mov
add
add
xchg
jge
and
ss
enter
xchg
mov
ja
inc
test
sub
fcomp
lods
add
push
xchg
jecxz
pop
add
sahf
stos
sbb
mov
add
push
dec
mov
mov
rcll
fcompl
pop
sbb
imul
shll
inc
jb
fistpll
sbb
push
cwtl
dec
mov
add
and
pop
pop
mov
pop
repz
push
sbb
dec
scas
inc
xor
and
sbb
sbb
mov
mov
ret
mov
call
cmp
or
lods
aaa
lcall
lret
jge
jmp
mulps
mov
inc
push
push
add
lods
addr16
inc
sub
mov
sub
sub
shlb
int
cmpsb
dec
outsl
in
fnsave
in
mov
fistpll
mov
dec
stos
je
jns
mov
pop
notb
and
pop
xchg
lret
mov
stc
jmp
dec
mov
add
push
mov
jbe
or
lods
dec
inc
add
icebp
jae
pusha
jmp
add
cmc
push
stos
mov
pop
aad
fisubrl
inc
dec
adc
sti
push
out
sbb
push
mov
jmp
pop
pop
jnp
pop
lock
inc
mov
mov
bnd
stos
inc
and
loop
jb
add
enter
adc
sbb
inc
add
sub
sub
add
push
andnps
cmp
fwait
or
xchg
mov
loope
xlat
mov
shrb
repz
add
sbb
fwait
pop
sub
cmp
dec
jne
lret
cwtl
jnp
dec
fwait
jb
cwtl
mov
add
or
add
fisubrl
and
movsb
dec
add
test
ljmp
mov
daa
or
es
clc
add
push
stos
push
add
mov
jbe
sbb
jecxz
xchg
xorl
into
cwtl
xlat
nop
popa
push
flds
pusha
jl
pop
mov
and
nop
mov
jmp
xlat
sti
dec
xchg
push
movsb
inc
and
in
add
pop
test
inc
aam
popf
add
pop
movsl
shrb
call
imul
mov
shrb
push
adc
xchg
and
and
pop
fisubl
push
dec
push
pushf
sbb
negl
adc
xchg
and
nop
out
mov
pop
adc
enter
fcomip
pop
les
add
xchg
fldenv
and
lods
loopne
loope
mov
adc
rorb
aas
sbb
mov
iret
je
mov
shll
shll
sbb
cmp
mov
pop
stos
add
lret
test
ljmp
mov
sub
add
mov
push
xchg
mov
xchg
mov
dec
add
or
enter
pop
popa
jmp
scas
mov
pop
mov
cltd
movsb
mov
xchg
mov
push
pop
daa
push
scas
add
cmp
jb
adc
jecxz
mov
pop
popa
xor
pop
mov
inc
add
adcl
add
shll
pop
test
inc
dec
outsb
inc
insb
xchg
adc
popf
cmp
add
cmpsl
sbb
fnsave
xchg
adc
inc
test
sahf
add
push
add
fsubs
dec
mov
bound
sub
sub
mov
mov
iret
and
pusha
call
scas
loopne
pop
pop
lcall
insb
ds
add
lea
dec
mov
out
ja
push
pop
outsb
or
cmp
cmp
mov
les
lahf
frstor
test
xchg
mov
call
int3
pusha
cmp
mov
shrl
inc
add
mov
push
into
test
jl
frstor
arpl
out
push
mov
xchg
jecxz
sub
xor
mov
inc
add
ljmp
movsl
add
rclb
out
jno
insb
add
and
and
xor
and
pop
push
in
fldcw
mov
fdivl
insl
cmpsb
inc
and
cltd
popa
negl
pop
repnz
mov
sub
out
pop
pop
xchg
or
insb
add
jmp
dec
inc
filds
adc
inc
push
inc
out
and
add
js
shll
add
sub
mov
jb
flds
out
jns
fisubrs
int
pop
movsb
fs
push
fmull
and
xor
nop
cmp
push
shr
pop
dec
xor
fs
out
push
adc
stos
cmp
mov
inc
scas
dec
xchg
pop
sub
pop
lcall
add
jmp
dec
cmp
xor
hlt
mov
xchg
inc
es
in
loope
scas
fisttps
lret
lods
or
outsl
dec
mov
jmp
fdiv
popf
jae
aas
adc
shll
cs
sub
mov
call
outsl
add
fldt
mov
add
pop
daa
cli
dec
orb
fbstp
cwtl
int
lcall
inc
ds
pop
outsl
lret
movsb
mov
add
imul
sub
loopne
mov
fiaddl
lock
mov
rcl
sbb
add
jbe
jmp
outsl
int3
dec
jo
jmp
mov
call
or
dec
xchg
pushl
push
popa
mov
and
add
neg
xlat
sbb
add
and
cltd
pusha
das
adc
pop
cwtl
and
xor
roll
daa
cmp
outsl
add
movsl
frstor
loope
dec
and
lret
in
push
or
dec
mov
push
xor
push
test
xchg
sbb
add
mov
pop
nop
sbb
mov
cmp
ret
int
stc
pop
shl
xor
mov
push
movsb
dec
call
jmp
add
dec
es
icebp
into
scas
mov
in
loop,pt
pop
push
les
xlat
jnp
cld
mov
xchg
jmp
mov
add
mov
in
sub
leave
xor
cltd
and
fwait
insb
sub
pop
bound
push
or
sbb
sub
js
mov
sub
pop
outsl
dec
adc
and
mov
fisubrs
xchg
and
xlat
fildll
sub
push
lahf
pop
ret
adc
fsubrl
inc
xchg
dec
lods
mov
out
add
loope
pop
orps
and
loopne
dec
dec
pop
xor
add
fidivs
or
add
shll
sahf
mov
add
and
jl
fcomps
mov
cvtps2pi
jp
or
in
imulb
addr16
xchg
loop
stos
leave
or
or
nop
fldt
cmp
fistpll
mov
push
fcmovbe
cmp
or
gs
fistpll
scas
into
inc
arpl
inc
ret
jecxz
push
fnstcw
cld
and
sbb
and
jecxz
sbb
adc
and
add
fdiv
mov
loopne
xor
xorl
xor
rorl
mov
add
jbe
ret
push
adc
out
add
ret
add
cmp
sbb
popf
mov
push
push
inc
add
sub
das
add
sub
and
pop
adc
mov
mov
iret
cmp
loop
and
aam
test
mov
mov
frstor
fidivrs
push
stos
mov
hlt
std
clc
mov
sti
dec
faddp
push
cmove
cli
int3
sbb
mov
imul
ret
cmc
sbb
into
dec
sub
enter
jmp
mov
ljmp
adcb
mov
mov
testb
and
cmc
ds
jae
adc
imul
mov
xchg
push
pushf
xor
cmc
into
inc
cwtl
cmp
add
jno
dec
mov
in
cmp
divl
lock
hlt
xor
dec
out
adc
xor
push
out
lods
add
cmpsb
movsl
cmp
das
push
cmpsl
outsb
add
pop
mov
jb
jae
mov
mov
pop
ror
add
pop
out
rcrl
call
xchg
ja
jmp
into
and
gs
stos
js
mov
mov
inc
stos
dec
fs
sarl
pop
icebp
push
int
jne
push
xor
mov
cmc
repnz
es
add
mov
test
mov
xchg
movsl
mov
insb
dec
cmp
icebp
ss
cmpsl
fldl
std
sahf
stos
sub
jb
push
cmpsb
xor
inc
add
xchg
test
add
jo
sbb
clc
andl
nop
push
int3
inc
cmp
add
insb
dec
xor
dec
pop
pusha
out
sub
pop
sbb
clc
orl
sarl
ds
adc
adc
dec
out
cmp
adc
dec
add
sbb
or
mov
pop
dec
add
xchg
jno
in
ficoml
loopne
test
scas
call
and
mov
repz
xchg
and
fst
jl
push
inc
xor
jg
repz
rorl
stos
dec
xchg
ja
xor
popf
frstor
sbb
dec
xchg
fcmovnb
mov
aad
jmp
std
sub
cs
cmp
adc
out
cmp
fists
fwait
in
push
mov
cmp
jo
loope
hlt
cli
push
incb
mov
push
fldenv
or
xchg
test
and
arpl
roll
inc
dec
js
add
mov
add
sbb
faddl
loope
push
data16
pop
lods
mov
inc
daa
pop
adc
icebp
and
test
mov
bnd
gs
je
xor
xor
and
or
push
push
clc
cs
jmp
xor
mov
pop
fldenv
sub
adc
call
add
cmp
lahf
es
cmp
jo
adc
push
fwait
push
sub
push
rclb
and
sbb
xchg
adc
push
cmpsl
sarb
jmp
repnz
xor
dec
out
scas
dec
test
cmpsl
cmp
addr16
int
add
cmpsl
in
clc
add
test
xchg
push
not
push
ja
mull
fiaddl
orb
cli
inc
sub
std
inc
mov
std
add
mov
lds
notb
movsl
xchg
cmpsb
cmp
jge
dec
push
into
mov
test
xor
aad
push
mov
mov
xchg
add
push
mov
scas
int
leave
mov
cmpsb
decb
leave
test
aas
in
sub
inc
jl
mov
fidivl
ret
dec
mov
mov
loopne
and
imul
cmp
insl
xor
cmp
in
loope
je
imul
cmp
ja
lcall
pop
add
pop
in
add
arpl
push
add
int
mov
add
inc
dec
pop
adc
in
popf
lods
mov
sti
es
mov
sub
shlb
hlt
fstpt
sbb
pusha
pop
jno
adc
and
test
shlb
sub
ljmp
sub
mov
fdivl
and
adc
mov
xor
fsub
icebp
rcrl
mov
dec
js
call
and
es
jl
sar
adc
jl
adc
xchg
xchg
mov
dec
les
push
pop
decl
ror
push
pop
mov
loope
lret
mov
out
out
jg
stos
out
mov
jge
addr16
ds
add
fwait
aad
aaa
mov
ja
orb
mov
push
xor
lahf
fs
xstore-rng
cmpsl
xorl
subl
imul
movsb
dec
push
je
negb
lahf
incb
movsb
add
and
loop
lahf
xor
out
lea
sti
sub
cmp
sub
movsl
dec
movsb
dec
adcl
jns
mov
in
sub
add
add
arpl
fistpl
pop
add
ja
add
xchg
pusha
add
loope
sub
cmp
insb
mov
push
pushf
push
add
push
fsubrs
iret
cmp
mov
mov
dec
pop
insb
nop
mov
sbb
ret
mov
sub
and
add
sbb
shlb
aad
popa
lods
aas
cmp
movsb
shr
xchg
fisubs
clc
push
mov
sbb
cmp
lock
cltd
bound
push
inc
out
loope
mov
lret
adc
or
mov
roll
jl
mov
or
add
scas
les
jnp
inc
dec
jae
push
jg
push
or
add
jge
inc
fdivs
jle
add
jg
lret
mov
lret
add
lds
sbb
fidivrl
arpl
out
outsb
add
mov
or
inc
add
lea
icebp
loope
clc
fs
add
pushf
sub
pop
scas
xchg
lock
mov
xchg
push
bnd
jle
mov
sbb
xchg
popa
mov
sbb
push
fnstsw
roll
aam
sub
mov
mov
sbb
xor
cmp
xor
dec
push
popf
xor
sti
pushf
sbb
pusha
scas
dec
pop
xchg
adc
push
jmp
xchg
in
or
adc
popa
pop
stos
inc
xor
cmp
mov
je
aad
sub
xchg
jecxz
jg
dec
les
sbb
arpl
stos
iret
mov
mov
and
stos
push
fs
and
lds
mov
mov
sti
xchg
mul
fistpl
insl
mov
add
mov
push
or
sti
jmp
mov
add
jbe
sub
cmp
or
mov
ficompl
addr16
outsl
push
add
aas
mov
mov
jae
out
xchg
inc
and
outsl
int3
mov
popa
aad
jecxz
add
adc
and
sbb
xchg
pop
je
adc
jmp
lahf
ret
sbb
pop
call
test
push
imulb
leave
xor
cli
or
cmpsl
jg
out
xchg
sarb
xchg
or
ffreep
mov
loope
test
inc
sbb
push
fldenv
pcmpgtb
cmp
sub
ret
arpl
dec
push
dec
push
push
clc
push
xor
aas
out
xor
icebp
add
aaa
divb
mov
inc
pop
or
arpl
push
out
push
fsubrl
in
add
sti
adc
push
gs
jecxz
cmp
cmp
negl
inc
mov
push
mov
lock
data16
sub
mov
icebp
imul
and
loope
dec
inc
mov
icebp
dec
pop
sub
lea
sbb
lds
dec
je
aad
cmpsl
pop
sbb
insb
fsubl
or
push
insb
cmovp
loop
pushf
lret
daa
pop
mov
les
outsl
or
mov
jle
or
cmc
jb
xchg
lret
dec
cs
mov
add
mov
aas
and
xlat
or
xor
dec
enter
cmp
dec
in
fdivrs
mov
lods
dec
sub
gs
cld
into
rcll
and
lahf
lea
pop
movsl
mov
push
shlb
test
repz
add
dec
adc
fldenv
push
pop
inc
mov
daa
sbbb
sub
pusha
jo
sbb
call
lahf
in
push
pop
mov
cwtl
fnsave
aas
mov
add
mov
mov
jmp
add
and
popa
add
xchg
pop
lock
aam
xor
add
loope
sbb
and
icebp
push
jecxz
call
sbb
adc
and
aam
add
mov
fimull
popf
and
add
mov
cltd
sbb
cmp
mov
and
into
dec
fs
or
push
addr16
enter
xor
adc
jg
icebp
cs
insb
jle
pusha
mov
dec
popa
iret
repz
jg
ja
add
pop
add
dec
mov
clc
add
mov
or
scas
add
jle
test
scas
jge
push
mov
sarb
mov
cmc
stc
outsl
lods
insb
xchg
jmp
add
dec
jl
cmp
movsb
loope
in
sbb
add
data16
pop
stos
push
or
add
xor
lds
mov
jo
sub
clc
mov
sub
outsb
call
add
aad
test
xor
popf
movsl
cmp
add
out
inc
push
jo
inc
and
push
sbb
xchg
pop
cld
test
js
sub
inc
clc
loope
add
mov
es
adc
je
or
xor
sub
dec
dec
mov
push
insl
stc
pop
or
jmp
mov
fcos
xlat
scas
dec
and
push
call
push
xor
push
in
mov
inc
add
dec
in
repnz
mov
sbb
xor
pop
jmp
ret
or
repnz
icebp
sti
jecxz
stos
movsl
rolb
cmp
stc
add
sub
add
out
arpl
and
test
out
inc
mov
xchg
iret
test
adc
add
js
cmp
xchg
push
xchg
sub
dec
xor
mov
stos
sub
shr
adc
lods
les
add
or
pop
sahf
call
or
push
fldt
dec
shlb
lods
or
mov
mov
cmp
sti
pusha
arpl
pop
jmp
stc
popl
mov
pop
xrelease
and
add
push
pop
add
pop
mov
jp
add
mov
dec
jno
dec
and
lcall
in
aam
and
mov
repz
test
and
pop
loopne
jno
icebp
inc
repz
lcall
out
add
pop
faddl
iret
std
es
jne
aam
and
fwait
shlb
push
cs
xchg
pop
pop
es
adc
mov
clc
sbb
add
out
dec
adc
xlat
jecxz
or
ret
mov
movl
xchg
mov
add
jecxz
xchg
jo
test
mov
xor
adc
mov
sbb
es
int
and
outsb
fs
stos
dec
add
clc
rol
sbb
mov
popa
mov
dec
xor
add
or
add
jo
popa
jb
pop
push
mov
mov
shlb
and
aas
repz
lods
loop
mov
jmp
in
adc
xchg
in
cs
andl
xchg
scas
sub
scas
out
lods
or
imul
stos
inc
scas
nop
je
mov
scas
cmp
lods
mov
mov
cmp
movsl
jp
adc
mov
add
gs
mov
orl
jb
cmp
prefetchnta
dec
lcall
jmp
push
inc
add
dec
xor
icebp
sub
push
mov
adc
add
test
aas
add
insb
add
push
in
repnz
pop
mov
dec
mov
imul
cmp
sbb
int3
rclb
and
cwtl
xchg
adc
pop
pop
popf
stos
adc
scas
fnstcw
fidivl
adc
and
inc
xor
mov
hlt
dec
sub
mov
imul
leave
lret
int
mov
fstps
fsubrp
cmp
mov
xor
repz
jp
jl
inc
sub
push
xchg
stos
neg
lock
xchg
sub
mov
lcall
shlb
fwait
movsl
mov
je
and
fildll
jb
add
mov
add
sbb
dec
out
nop
push
lods
inc
popf
sti
sub
in
xchg
pusha
lret
inc
jmp
jmp
arpl
jae
xchg
jns
loope
jl
jo
repnz
mov
or
lret
add
daa
ds
add
pop
push
sbb
pop
dec
pushf
popa
inc
dec
test
add
sub
push
mov
mov
mov
cmp
sub
dec
test
inc
bound
jmp
add
add
dec
shrb
and
cmp
fdivs
jb
lcall
mov
push
sub
add
inc
orl
cmp
lret
lahf
leave
mov
or
pop
push
add
jns
imul
jle
sub
fdivs
iret
pop
test
mov
pushf
test
cltd
jne
sub
filds
mov
dec
fnclex
add
add
loopne,pt
ds
in
push
in
addr16
cmp
cli
mov
gs
xor
add
bound
adc
imul
ja
mov
mov
cwtl
sub
or
and
push
mov
sarb
fisubrs
mov
ret
pop
pop
lret
add
cmp
mov
adc
sub
add
cli
cmp
loop
icebp
scas
dec
in
data16
mov
daa
mov
and
push
xor
xor
and
test
jp
xlat
out
mov
sbb
xor
nop
aad
out
loope
push
leave
out
iret
xor
push
inc
xchg
jae
test
lock
mov
pop
mov
mov
cmp
or
push
jmp
add
icebp
ret
fidivs
scas
or
jmp
out
add
cmpsb
sbb
pop
hlt
xchg
imul
loopne
push
jo
dec
aad
out
add
rorb
mov
in
lahf
daa
add
mov
fimull
mov
les
inc
mov
push
and
fwait
lea
loop
repz
pop
mov
or
popf
cmp
adc
pop
and
adc
dec
adc
outsb
pop
xchg
mov
shll
sbb
cmp
push
in
inc
push
cwtl
aam
or
sbb
mov
mov
lds
iret
xchg
popf
mov
jae
out
and
call
aad
push
lds
jle
xchg
jg
dec
dec
xor
add
pop
popa
loope
cs
mov
movsl
dec
loope
jl
cmpsl
xor
fnsave
psubusw
mov
fbstp
xchg
jb
add
mov
xchg
jae
insl
sbb
cmpb
push
cmp
mov
loope
add
out
scas
mov
pop
shl
movsl
push
inc
push
mov
mov
adc
fldenv
insl
mov
test
add
sbb
dec
adc
add
stos
repz
addr16
and
les
ficomps
add
out
and
push
adc
fistpll
out
sbbl
cltd
dec
fs
shr
negb
jmp
add
and
out
xor
mov
jge
and
sahf
mov
lret
jno
xchg
push
fildll
cltd
fwait
insb
pushf
dec
and
sbb
dec
in
mov
outsl
fcoml
push
xchg
mov
sbb
sub
sarb
sub
mov
xlat
outsl
movsl
sbb
xchg
push
xchg
sar
add
push
lcall
nop
out
jbe
jecxz
fildll
mov
stc
scas
sbb
repz
lahf
mov
shrb
add
jg
adc
mov
jp
pop
fbstp
into
or
gs
jne
outsb
sbb
mov
loope
pop
xchg
xor
mov
out
jmp
jne
in
hlt
int3
dec
mov
xor
or
decb
cmp
setb
xchg
ret
pop
push
jae
add
xor
jg
add
add
fldt
cmp
in
shl
add
cmp
insl
and
mov
mov
dec
cmp
dec
outsb
xor
jne
sbb
mov
bound
cmp
push
jns
repz
add
and
dec
add
fdivrl
mov
pop
les
mov
add
fcompl
int
or
test
add
es
decb
mov
ret
js
dec
mov
inc
mov
jno
dec
cmp
add
aaa
add
and
imul
cli
push
fsubl
or
add
jl
mov
add
cwtl
pop
ret
cmp
and
adc
cmc
int
mov
pop
xchg
or
add
clc
mov
lods
sub
adc
jecxz
jb
loope
test
xchg
or
mov
std
push
enter
out
and
mov
iret
dec
imul
gs
xchg
lea
inc
inc
or
jp
or
std
xchg
inc
push
jnp
jg
pop
jle
or
out
orl
push
mov
pop
cmp
addr16
sti
sub
icebp
push
cli
mov
lds
xchg
add
dec
call
pop
repnz
subl
dec
inc
hlt
cltd
arpl
dec
pushf
mov
in
or
sbb
mov
jmp
cwtl
pop
enter
and
setae
mov
or
out
nop
pop
cmp
in
repnz
mov
push
aaa
adc
aad
aas
js
or
xchg
add
hlt
shll
push
call
cmpsl
icebp
in
mov
jo
jno
hlt
pop
dec
and
xchg
xor
dec
inc
test
jmp
jmp
push
cmp
sub
pop
xchg
addr16
daa
add
push
out
xlat
pop
mov
std
inc
mov
out
jp
push
mov
mov
jg
mov
or
mov
xchg
dec
cmp
inc
arpl
add
fistpll
mov
and
push
pop
ficoml
dec
es
push
std
cli
adc
sub
std
int
or
shl
sti
dec
xorb
mov
lcall
jns
push
and
mov
fdivrs
out
push
mov
push
inc
pop
clc
and
jb
xchg
mov
andl
adc
xlat
outsl
into
dec
jl
clc
or
mov
add
or
lock
ljmp
lahf
jo
addl
cmp
or
push
add
cld
testl
lret
and
iret
addr16
pop
or
xchg
jo
jg
fmull
jmp
jg
repz
dec
insb
jle
popa
loopne
cs
push
mov
call
cli
rorl
xor
fldcw
pushf
sub
jmp
popa
or
and
fsubrl
add
xlat
pop
sub
mov
mulb
mov
xchg
xor
and
pop
inc
mov
lahf
pop
dec
inc
je
add
mov
add
pop
pop
das
inc
add
test
and
adc
sahf
mov
add
loope
adc
sbb
fbstp
mov
popa
add
dec
pop
mov
add
mov
inc
js
cltd
push
aad
xchg
dec
jecxz
fcomps
mov
adc
fistps
push
jns
push
mov
add
fcomps
loope
mov
rcrl
outsb
scas
insb
add
fadd
aam
dec
xchg
lret
mov
inc
les
sbb
mov
pushf
ljmp
dec
push
addr16
add
jl
lock
sahf
add
and
pop
data16
sub
test
xorl
mov
jge
gs
or
dec
xor
ret
sti
xchg
pushl
jmp
and
in
arpl
pusha
aad
cmp
or
stc
repz
pop
jo
dec
fcoms
pop
insb
cmc
rol
jae
jg
movl
and
push
jno
cmp
mov
jnp
jl
add
outsl
shlb
mov
je
sbb
aam
sbb
cmpsl
pop
pop
enter
push
loopne
add
dec
and
daa
dec
jns
jl
xor
aas
in
jecxz
int
xor
movsl
mov
pusha
push
xchg
fisttps
loopne
pusha
pusha
mov
pop
cmpsl
or
jae
int
ljmp
or
fildll
or
std
stos
mov
loop
sti
mov
std
fimull
call
shl
aad
dec
stc
mov
out
pop
add
cmpsl
mov
xchg
rolb
push
mov
mov
add
xor
pop
cmpsb
cs
shrl
pushf
icebp
jecxz
lcall
adc
push
xchg
add
xor
popf
push
add
xor
mov
jl
jo,pn
cmp
aaa
sbb
mulb
push
mov
cli
into
idivb
cmp
rorb
xor
mov
push
filds
add
fmuls
lret
int
and
fisttpl
mov
adc
aaa
inc
fs
and
add
pusha
or
imul
lcall
sub
xchg
sti
sub
cmp
xchg
frstpm(287
dec
mov
xchg
mov
add
insb
inc
xorl
add
dec
xor
mov
adcl
add
imul
inc
push
dec
cmp
shll
test
mov
loopne
dec
adc
cwtl
pop
outsb
inc
adc
aaa
loopne
inc
xor
add
fbld
in
add
enterw
add
shlb
add
das
dec
es
and
xchg
pop
mov
pusha
ret
out
aas
mov
ds
push
mov
movsl
mov
push
pusha
pusha
testl
fnstsw
add
subb
dec
cmp
notb
filds
in
mov
loopne
mull
iret
jne
sbb
mov
jb
pop
fs
iret
xchg
cmp
rclb
push
mov
movlps
xor
push
sub
outsb
mov
add
dec
jecxz
lahf
lods
dec
add
cld
in
xchg
xchg
pop
clc
adcb
sbb
inc
mov
and
rcrb
pop
jecxz
sub
loope
inc
jne
ficomps
ffreep
push
jl
inc
adc
into
lods
dec
popa
mov
cmpsl
movl
dec
fs
pop
rorb
cmp
sub
mov
test
stos
repz
lret
inc
cmpsl
loope
inc
rol
add
out
jmp
ret
jl
test
sub
jns
mov
mov
clc
gs
pusha
cli
mov
jbe
aas
sub
or
loopne
repz
sbb
hlt
push
push
add
mov
mov
or
xor
mov
outsb
cmp
arpl
je
fxch
movsl
cmpsl
jae
inc
lahf
sbb
ficoml
loop
pop
dec
mov
mov
int
outsl
dec
clc
pushf
pop
daa
sbb
ja
sahf
out
mov
or
loopne
lret
or
iret
rorb
aam
mov
popf
dec
test
or
cmp
inc
xor
mov
cmp
add
dec
push
cld
lds
fsubrl
xorb
mov
pop
or
cmpsb
out
sub
call
cmp
js
jmp
inc
popf
lods
enter
mov
cmp
xchg
pop
mov
clc
adc
sbb
xor
mov
add
xchg
xor
sbb
adc
or
je
jnp
sbb
sub
mov
add
add
add
sbb
in
imul
ret
xor
push
loope
or
or
cmp
xchg
es
add
lea
mov
outsl
dec
jno
in
stos
nop
fsts
dec
movsl
sbb
jl
std
cltd
or
shlb
sub
shll
pusha
insl
xchg
mov
mov
insb
int3
pop
mov
sbb
call
xor
xor
adc
mov
jmp
mov
or
adc
in
int3
inc
mov
shl
xchg
pop
stos
enter
dec
and
jg
xorl
aad
iret
data16
sbb
iret
mov
jb
cmc
mov
popf
loop
rorl
inc
out
sub
cmc
add
test
mov
jge
pusha
fwait
inc
push
add
cli
dec
in
fdivs
inc
out
aas
lea
nop
enter
and
clc
int
jge
add
pop
xchg
mov
xchg
add
xor
mov
pop
lret
repnz
dec
call
imul
mov
xchg
lods
add
pop
mov
add
mov
mov
icebp
je
cmp
sub
clc
jae
adc
add
loopne
cltd
pop
mov
sub
jmp
in
sbb
cmp
je
xchg
sub
mov
or
pop
push
add
sbb
out
aas
sub
mov
pop
dec
test
cld
iret
imul
sbb
out
pushf
jg
fildll
xchg
addb
xchg
int
xor
mov
pop
rorb
lcall
leave
frstor
loopne
dec
add
fdiv
dec
xchg
and
add
mov
sub
pushl
cmc
cmp
daa
wrmsr
mov
fisubrl
popa
xchg
add
push
dec
add
sbb
mov
xor
imul
inc
cmp
repz
pop
test
shl
cmp
loop
popf
sahf
mov
js
incl
push
mov
xlat
add
mov
adc
mulb
faddl
sbb
lds
push
or
cs
fwait
sbb
push
negb
ss
xor
xor
xor
inc
js
stos
mov
and
jecxz
into
stos
xchg
jae
clc
loopne
out
test
mov
fwait
add
rorl
jne
in
dec
test
mov
je
add
cmp
mov
xchg
in
enter
jl
mov
add
push
aam
inc
shlb
dec
xor
icebp
push
pop
je
xor
rorl
or
sti
adc
adc
xor
jmp
les
outsb
or
in
mov
push
call
pushf
sub
push
daa
add
and
push
jne
sbb
xchg
testb
mov
mov
and
nop
sti
je
scas
lret
orl
bswap
jae
ret
push
adc
popf
jnp
loopne
cmp
rorb
in
inc
insb
add
ljmp
mov
fucomp
addr16
xor
pop
scas
jg
mov
shrb
fisubl
mov
lea
jp
test
hlt
or
add
jb
xchg
add
test
mov
jno
jae
mov
imull
in
rorb
sbb
mov
jae
dec
lret
cmp
sub
dec
in
push
jbe
out
mov
add
pop
push
arpl
aam
into
loope
sbb
test
ffreep
test
push
je
ficoms
fld
jp
cmp
dec
mov
mov
inc
push
mov
rcr
insb
icebp
lea
int3
int
icebp
and
loopne
outsl
test
add
cmp
into
xchg
xor
jp
mov
out
xchg
push
sbb
add
mov
xchg
popf
lret
add
pop
pop
insl
enter
iret
cltd
and
sbb
adc
or
xor
dec
inc
jnp
xor
imul
mov
add
mov
jg
xchg
mov
je
pop
iret
repz
and
pop
cli
lret
aam
lock
jo
mov
loopne
imul
repz
sbb
xchg
xchg
jl
loope
pop
dec
add
lahf
cmp
aas
into
push
inc
inc
lahf
mov
test
in
loopne
add
fdivrl
dec
popf
sbb
pop
sub
mov
ljmp
mov
add
test
add
pushf
mov
gs
mov
mov
add
push
pop
addr16
mov
mov
subl
nop
lret
repz
out
dec
dec
dec
pusha
adc
lahf
int
sahf
das
add
popl
faddl
data16
mov
add
cmc
sbb
cmp
lahf
icebp
scas
jae
popa
loopne
dec
ret
das
lcall
loope
add
push
popa
pop
popa
add
sub
sbb
loop
test
push
mov
shlb
arpl
dec
mov
or
mov
push
dec
imull
cmpsl
add
jae
pop
adc
xor
test
cmp
sbb
or
mov
pop
jne
out
sub
mov
mov
lds
in
out
xchg
int
sbb
fisubrl
cmp
and
mov
jnp
cmp
dec
cli
out
movsl
shrl
decl
test
push
movsb
sbb
add
pop
mov
add
iret
dec
test
inc
jbe
aaa
and
sbb
cmp
imul
arpl
das
push
call
xchg
mov
js
loope
pop
cmp
adcb
inc
setge
and
add
std
loopne
mov
insl
int
push
lock
push
out
add
sbb
inc
cmp
push
mov
pcmpgtw
lods
aad
add
testl
push
and
add
ljmp
rcr
add
push
pop
test
mov
mov
push
lods
enter
add
arpl
sahf
les
or
fldenv
fstpl
inc
push
sub
nop
mov
add
jo
lea
add
je
pusha
icebp
inc
ds
clc
inc
add
jbe
mov
and
inc
push
ret
or
loopne
jge
cs
insb
jle
adc
cmp
leave
and
out
add
pop
inc
add
pop
inc
cmpsl
push
pushl
pushf
es
jg
imul
in
jne
or
xor
add
imul
insl
mov
inc
stos
push
lahf
loop
sahf
pusha
inc
pop
roll
cmp
adc
pop
xor
adc
mov
mov
popf
sub
outsb
loopne
jbe
fldl
test
pop
xorl
sub
movsl
js
das
inc
xor
dec
jno
xor
sbb
repnz
and
fs
fsts
repnz
aaa
clc
add
dec
jne
stc
sbb
and
xchg
adc
fldl
cmp
push
mov
pushf
cmp
and
inc
pop
movsl
or
dec
and
popa
shlb
lret
sbb
test
push
aam
mov
and
push
xlat
cmp
jecxz
mov
insl
or
lahf
and
rorl
lcall
jge
xor
add
addr16
dec
push
roll
ljmp
stc
and
jno
lea
xlat
filds
loopne
pop
outsb
mov
mov
cmp
xor
pop
xor
sub
dec
sbb
jbe
cs
fstpl
or
fldt
dec
sub
jne
call
push
jg
idivl
jbe
call
cmp
and
stc
and
out
push
cltd
pop
test
call
push
test
shr
inc
cmpsl
fildll
and
les
pusha
clc
test
or
cltd
cmp
cmpsb
mov
pop
or
repnz
pop
stos
add
push
cwtl
cltd
jno
scas
push
and
sub
test
inc
jl
mov
imul
rorb
add
lods
sbb
and
enter
add
adc
mov
push
mov
fiadds
imul
jl
repnz
inc
ss
mov
addr16
ret
inc
shll
mov
mov
lret
sbb
mov
popa
arpl
sbb
pusha
xchg
xchg
and
repz
add
xchg
inc
scas
adc
mov
insl
popa
cs
ficompl
stc
cmpsb
fmuls
jmp
sar
add
shr
add
push
mov
iret
out
mov
add
inc
sub
pop
in
test
add
insb
cltd
and
sbb
jb
jo
add
movsb
mov
push
xor
aam
loopne
sbb
shl
add
pop
and
pop
mov
xchg
and
dec
rorb
iret
mov
fistps
and
cmc
fwait
cmpsl
ret
es
enter
sbb
mov
rcll
pop
push
mov
sbb
into
das
adc
add
mov
dec
push
push
inc
mov
jo
test
jg
and
out
dec
or
dec
lret
mov
clc
xor
mov
out
ljmp
lods
jnp
inc
sahf
pop
divl
scas
ret
or
lods
mov
cld
xlat
jl
scas
add
jg
fsubrp
or
outsb
lea
or
add
or
or
xchg
mov
lahf
not
sbb
fisttpl
dec
insl
cli
lds
fnstcw
jge
repnz
pop
gs
pop
fcmovbe
fwait
out
lods
jno
lret
inc
cltd
and
mov
mov
fwait
in
scas
imul
mov
insb
add
add
pop
rorb
shlb
inc
aaa
pop
mov
out
pop
pop
out
lds
add
fsubrl
nop
mov
roll
inc
popa
arpl
cmpsl
das
dec
dec
sub
fwait
and
push
dec
mov
adc
lock
push
mov
shll
xlat
jl
popa
xchg
into
push
or
pop
pop
sub
sbb
cmp
mov
call
inc
cmpsb
mov
cli
push
fs
rolb
sbb
mov
add
sbb
xchg
ficoms
es
test
mov
enter
incl
mov
test
roll
std
mov
jg
js
jne
aad
es
jns
ss
repz
pop
add
inc
push
jbe
sub
sub
push
and
lock
or
push
dec
add
xchg
clc
add
icebp
repz
add
pusha
imul
adc
add
leave
xor
sub
cs
clc
pop
inc
negl
daa
add
bound
xchg
mov
cmp
adc
dec
rcll
pop
add
jmp
cltd
add
mov
adc
dec
shlb
cmpsb
inc
or
xchg
or
add
jecxz
jle
ds
rcrl
jge
inc
stos
xchg
cld
dec
stos
mov
test
xchg
mov
cmp
es
out
lods
add
xchg
mov
mov
and
inc
sbb
mov
fadds
mov
mov
mov
mov
ja
jno
adc
imull
jle
jae
ds
pop
scas
iret
xchg
jno
stc
fwait
cmpsb
shlb
pusha
dec
dec
ljmp
jl
dec
popa
xorb
xchg
addl
sbb
mov
scas
imul
or
xchg
xchg
out
xor
int
cwtl
mov
mov
in
push
mov
pop
dec
sub
imull
cmp
jl
xchg
insl
repz
popa
jmp
adc
out
enter
cmp
add
mov
push
cmp
in
push
inc
push
mov
mov
fldt
ret
cmpsb
cmp
int3
xchg
xchg
cli
push
sbb
pop
lret
test
mov
or
push
jns
mov
cmc
jnp
in
pushf
jbe
add
jb
push
add
loope,pt
mov
xchg
mov
ss
push
in
dec
cmp
arpl
stos
int3
add
mov
pop
test
inc
add
adc
add
clc
jl
aaa
fwait
out
mov
or
adc
xchg
sbb
add
dec
dec
jo
xor
test
inc
or
xchg
addr16
mov
add
gs
cmp
or
aaa
stc
mov
dec
inc
test
into
int
divl
add
testl
cmp
add
push
add
xor
sbb
pushf
in
arpl
push
cli
or
aad
out
push
lock
add
gs
jns
popf
lret
fisubl
mov
mov
enter
movsb
sbb
dec
add
fs
popa
repnz
enter
cs
popf
out
dec
add
jecxz
cmp
dec
dec
mov
jmp
aaa
pop
out
iret
leave
inc
mov
mov
adc
js
add
outsl
add
rcrb
mov
dec
xor
cwtl
pop
mov
fisubl
sbb
pop
sbb
mov
xchg
loopne
enter
fcomip
xor
push
add
sbb
push
es
adc
xor
jp
testl
dec
jp
push
js
out
push
and
jae
inc
xchg
call
imul
dec
daa
outsl
jmp
add
cli
aad
mov
test
dec
xor
jnp
jp
push
in
out
push
stos
mov
jns
cmc
pop
push
loopne
xorb
popa
mov
push
add
shrb
mov
dec
mov
fisubrs
sbb
mov
add
xchg
sbb
or
and
jbe
test
sub
cmc
xchg
fwait
push
mov
cmp
jp
inc
add
hlt
cltd
out
gs
fisubs
jo
adc
shr
sub
sbb
dec
movsl
sbb
inc
xor
test
cltd
hlt
and
add
xor
xchg
push
lret
push
pop
dec
add
and
sahf
pop
cmp
push
and
pop
ss
mov
test
and
cmc
cs
int3
dec
pop
inc
push
insl
inc
jno
lret
cmpsl
or
repnz
jge
mov
movsb
jnp
mov
add
movsl
sbb
pushf
jge
into
sub
add
add
sub
pop
jns
mov
add
movsb
outsb
popf
dec
jle
loope
xlat
and
dec
jb
add
inc
shl
xchg
add
sbb
mov
mov
mov
add
xchg
sbb
rolb
mov
mov
pop
les
mov
out
cmp
shrl
aaa
jmp
dec
inc
push
lea
cmp
mov
jp
add
shr
jp
mov
add
add
push
or
sbb
jbe
loop
dec
ss
loopne
std
sub
jmp
mov
dec
push
add
mov
add
mov
cmp
cmp
mov
sbb
jg
movsl
mov
loopne
xor
shll
sbb
outsl
adc
cli
dec
notl
mov
rcrl
dec
inc
push
dec
inc
and
dec
sahf
lods
das
js
add
in
iret
ss
dec
dec
jno
negl
mov
jo
add
and
popa
bound
sahf
daa
and
in
je
xchg
fmuls
jae
orl
pop
in
mov
inc
push
out
loop
sbb
xchg
add
test
jne
mov
jae
dec
push
pop
shll
cli
push
in
cmp
add
and
add
lcall
mov
repnz
cmp
sbb
add
fbstp
dec
inc
push
add
or
scas
and
cmpsb
inc
leave
aad
jg
jmp
enter
xchg
sbb
xchg
jge
xchg
aad
adc
and
sbb
ss
add
es
and
xchg
push
mov
add
mov
sbb
mov
inc
sub
popa
xchg
into
aad
xor
ss
fildll
xchg
rcll
test
pusha
lods
mov
mov
enter
jl
cmp
xor
es
xchg
es
xor
push
in
adc
or
mov
test
add
test
popf
imul
mov
push
aaa
sub
out
ds
xchg
push
push
or
mov
add
aam
test
fwait
addr16
xorb
cld
mov
scas
imul
movsl
jne
andl
dec
ret
and
repz
adc
mov
arpl
mov
lcall
mov
enter
sbb
add
dec
sahf
cmp
icebp
mov
mov
push
negb
jmp
cmp
push
mov
stos
aaa
jo
jle
mov
dec
add
mov
popa
mov
pop
test
aaa
sub
ret
iret
insl
cmp
insb
faddl
push
xlat
gs
sbb
mov
clc
fwait
cmpsl
rorl
mov
test
xor
add
jb
jne
je
push
pop
pop
insl
sbb
push
cmp
jae
jg
dec
mov
stc
or
loope,pn
call
mov
stc
add
jae
dec
ss
loop
popf
adcb
test
sub
loopne
fiaddl
cmpsb
aas
mov
mov
jmp
inc
scas
pop
loop
mov
push
mov
add
popa
mov
add
loope
repz
pop
pusha
test
xor
dec
inc
xchg
pop
cmp
adc
arpl
mov
stc
sarl
jl
xor
ss
jmp
dec
iret
inc
data16
stc
arpl
pop
xor
mov
add
add
and
dec
pop
jb
shr
insb
fsubl
sbb
xor
movsb
push
pop
jl
in
repz
dec
sub
subl
inc
mov
fldcw
xlat
sbb
push
shrb
inc
imul
inc
inc
mov
cld
mov
mov
hlt
inc
mov
dec
or
add
repz
xor
les
xchg
std
xchg
insb
mov
xchg
add
dec
add
fs
into
and
jecxz
pop
fildll
iret
dec
and
push
xchg
lea
or
jle
addr16
int3
test
aas
or
cmc
mov
pushf
lret
cmpsl
and
fbstp
push
xchg
jg
or
fidivrs
mov
rorl
mov
int
dec
lods
aas
mov
shl
btr
xchg
sbb
mov
dec
sbb
fisttps
add
mov
xchg
stos
cmpsl
push
inc
jg
lahf
add
jnp
roll
inc
ja
imull
mov
leave
add
lds
inc
add
cmpl
ds
mov
mov
jns
testb
jbe
cmc
mov
xor
add
jno
out
add
insl
imul
ljmp
add
out
es
add
loop
bound
loope
add
pop
ficomps
popf
pop
pop
sbb
lcall
xchg
push
pop
xchg
add
aad
push
xchg
push
adc
rclb
push
mov
aad
add
fldcw
sbb
dec
xchg
mov
xor
lret
sbb
mov
mov
inc
out
sbb
or
int
inc
or
ror
push
fwait
pop
into
pop
add
add
cltd
insl
outsl
pop
cwtl
cmpsl
cltd
cmc
fnstenv
jae
cmc
mov
fists
enter
sub
inc
icebp
cmpsl
sbbb
out
mov
add
mov
push
movsb
and
xor
add
add
mov
std
sti
mov
add
flds
add
gs
rcrl
pop
cld
jle
mov
mov
push
push
iret
add
pusha
icebp
sbb
push
loopne
add
fs
push
and
inc
add
cmpl
add
pop
mov
in
dec
stos
push
cs
stc
mov
roll
cmpsl
sbb
xlat
fimull
in
jecxz
add
fstps
mov
fwait
and
stos
mov
cli
aad
lock
add
jl
in
mov
add
pop
imul
lea
cmp
enter
add
mov
in
shll
xchg
xor
and
add
cltd
jle
xchg
cs
inc
add
and
add
popf
lahf
rclb
push
ss
int
mov
icebp
sti
rorl
cmp
rorl
push
jae
dec
stc
icebp
mov
pop
enter
fists
call
push
mov
pop
mov
mov
xor
iret
mov
roll
roll
add
call
pop
ja
pusha
inc
lret
or
push
add
ficoms
add
les
pop
in
dec
jge
inc
sub
js
movb
mov
pop
sub
add
hlt
xor
add
pop
mov
push
dec
rorl
call
loope
mov
add
insb
out
subl
dec
aam
adc
add
dec
out
dec
insb
incl
dec
sti
push
push
stos
fistps
pop
inc
iret
dec
push
popf
add
push
orl
cmp
xor
lods
inc
pop
jl
outsb
mov
add
mov
iret
pop
or
sbb
and
add
in
mov
push
mov
pop
js
popa
mov
jnp
pop
add
mov
xor
mov
std
xchg
aam
mov
cltd
jbe
jae
out
lahf
and
push
out
add
sub
lret
insb
add
xor
fwait
add
das
mov
push
add
and
or
xchg
enter
cs
xlat
insl
cli
push
pop
mov
icebp
xor
shll
jo
inc
stos
mov
dec
enter
in
add
call
add
shll
out
add
mov
stos
jo
inc
add
fwait
xchg
and
mov
sub
add
int3
repnz
shll
mov
ss
and
aaa
xchg
outsl
test
mov
dec
inc
sub
insb
xor
outsl
ss
pop
inc
out
cmp
xor
dec
add
push
dec
insl
dec
xor
mov
pop
xchg
push
mov
int3
add
fsubr
and
pusha
ret
scas
inc
or
and
xchg
jns
lods
incl
mov
adc
sub
or
xchg
dec
inc
fildll
fstps
aad
add
push
mov
lret
mov
lock
jnp
jb
movb
mov
sbb
or
test
inc
sbb
fwait
pop
or
mov
cmpsb
aad
sub
rolb
push
inc
fstpl
filds
and
mov
adc
clc
mov
jmp
xor
dec
push
int
lods
adc
or
push
roll
insl
mov
push
and
sub
stos
rolb
jae
adc
sbb
roll
mov
pop
add
xor
sbbb
jg
out
dec
rcl
add
shlb
lds
cmp
jne
sub
jl
sbb
and
and
lahf
mov
push
push
repz
and
popa
add
mov
shll
mov
nop
call
scas
out
sub
dec
jo
xchg
dec
fistpll
iret
or
mov
add
mov
inc
push
orb
add
popa
std
cltd
and
pop
sbb
cmp
jp
jb
mov
inc
xchg
outsb
jmp
xchg
jbe
sub
add
fimuls
scas
popf
shrl
inc
xlat
aaa
add
mov
push
das
insl
add
xor
jle
or
in
dec
daa
sahf
aaa
pop
cltd
mov
dec
inc
dec
add
in
fidivrs
pop
push
es
loop
mov
out
clc
out
sarb
add
add
push
push
and
lahf
xlat
mov
call
jge
es
sub
add
sbb
pusha
mov
xor
xchg
in
add
jp
loope
or
fsts
pop
mov
enter
mov
adc
dec
push
pop
aad
lods
inc
xor
out
adc
fildl
test
mov
data16
mov
ret
aaa
add
lahf
mov
xchg
enter
inc
fwait
mov
iretw
adc
lock
dec
or
rcll
xchg
push
shlb
cltd
je
jnp
fstps
outsb
lds
loopne
aaa
addl
pusha
repnz
sbb
add
jno
enter
add
mov
out
daa
sbb
push
lds
add
cwtl
les
mov
out
or
adc
icebp
prefetch
adc
adc
aam
cwtl
cmp
test
stc
scas
mov
sbb
mov
cmp
lods
fisttps
icebp
or
shlb
js
add
out
aad
jno
mov
js
xchg
dec
push
out
addr16
scas
dec
add
xchg
mov
pop
loopne
mov
fmul
mov
aam
pop
or
push
add
push
cmp
add
hlt
pop
jns
pop
add
and
data16
stos
cmp
add
xor
ds
inc
xchg
or
into
dec
fisttpl
cld
int3
out
jmp
adcl
iret
mov
add
sub
rcrl
mov
inc
iret
insb
rcll
outsb
push
mov
nop
jne
out
js
cmp
jecxz
add
aad
icebp
sub
sub
aaa
xchg
push
sbb
or
mov
dec
jmp
out
cmp
add
sub
aaa
loope
add
lcall
and
add
inc
jp
sbb
add
and
pop
and
jmp
inc
push
in
add
aad
js
iret
add
stos
pop
adc
add
pop
lahf
fs
aam
mov
mov
hlt
rcll
addl
and
and
call
push
iret
das
or
insb
jmp
mov
dec
cmp
mov
lock
dec
ror
movsb
fistl
add
pop
sbb
adc
and
xor
pop
sub
daa
cld
inc
jecxz
fisttps
sbb
pop
pop
or
mov
add
rolb
xchg
adc
sub
aam
aaa
push
mov
mov
and
inc
pop
shlb
xor
addb
mov
cmpsl
sub
ret
push
add
iret
loop
and
loop
xor
nop
cmp
cmp
pop
dec
test
add
mov
inc
jle
add
cltd
inc
and
xchg
mov
xor
add
adc
pop
sub
xor
sub
nop
inc
add
sbb
cli
cwtl
jecxz
xchg
adc
jle
jno
dec
inc
xchg
lahf
push
fs
lret
add
adc
inc
add
jle
insb
loope
xor
push
pusha
lds
cltd
arpl
sbb
int
or
cs
xchg
rcr
mov
call
pop
nop
jb
adc
jo
inc
add
shrl
fistpll
out
and
pop
jne
sub
jge
enter
rclb
mov
and
sub
push
ret
movsl
mov
dec
jecxz
sub
adc
xor
sub
addl
jae
dec
cltd
daa
mov
dec
inc
fidivs
stos
notl
pop
fsts
inc
and
xlat
and
shrl
sahf
add
or
adc
imul
es
mov
int3
dec
pushf
movsb
adc
mov
xchg
pop
xchg
ss
and
cmp
enter
inc
icebp
or
test
out
push
roll
mov
sub
or
sbb
adc
punpckhbw
or
cmpsb
xor
add
pop
lds
add
lcall
and
aad
xor
dec
inc
iret
jo
sbb
adc
push
into
out
jno
push
dec
iret
mov
into
or
push
or
lods
or
push
mov
mov
xor
pushf
mov
ljmp
pop
mov
or
lahf
push
stos
int
push
or
jecxz
iret
roll
adc
outsb
repz
dec
testl
mov
out
pop
sahf
add
cs
add
std
fnstsw
pop
jmp
arpl
mov
cltd
enter
mov
lret
insl
mov
fnstenv
vcomisd
stc
aam
scas
stos
sub
stc
std
mov
dec
xchg
call
jmp
cmpsb
pop
push
push
cmp
jge
fnstenv
mov
stos
ljmp
lods
or
loopne
jmp
arpl
test
rcl
mov
stos
sub
fcompl
aas
fisubs
mov
sub
jmp
arpl
fiaddl
mov
stos
incb
sub
jge
pop
js
mov
push
sti
aam
scas
stos
lock
sub
cld
arpl
mov
xor
divb
mov
into
mov
jmp
arpl
scas
stos
mov
out
scas
dec
xchg
or
fwait
nop
pop
or
icebp
in
std
lods
add
pop
pop
xchg
std
xor
loope
jg
fucomp
jmp
aam
scas
stos
jb
fstpl
jg
rorl
iret
xchg
scas
stos
mov
fsubs
pop
pop
stos
add
fstl
jmp
arpl
pop
aad
xchg
divb
std
loopne
jg
fucom
jmp
aam
scas
stos
jae
in
cmpsl
dec
jno
cli
out
xchg
add
frstor
jb
cwtl
jmp
aam
scas
stos
daa
setns
lock
negb
mov
mov
enter
mov
clc
inc
mov
jb
pushf
jmp
aam
scas
stos
es
or
aas
add
mov
in
negb
mov
lahf
mov
add
xchg
push
insl
pop
or
mov
or
and
mov
aas
cmpsl
addr16
mov
in
cmpsb
std
mov
mov
fwait
mov
jmp
arpl
lcall
movsb
jmp
aam
scas
stos
and
jmp
aaa
aas
loopne
cwtl
mov
jecxz
mulb
mov
xchg
mov
jmp
arpl
xchg
mulb
or
test
imul
in
aam
scas
stos
and
pop
cltd
test
lock
imulb
mov
xchg
mov
jmp
arpl
xchg
mulb
add
lods
jmp
aam
scas
stos
and
add
aas
add
mov
loope
imulb
mov
sti
dec
addr16
inc
scas
idivb
into
frstor
cld
aam
scas
stos
stc
or
and
fldcw
fwait
mov
xchg
fisubs
int3
dec
xchg
aas
jmp
jp
cs
mov
aad
fs
mov
lret
pusha
pop
icebp
inc
mov
cli
std
out
jb
leave
frstor
jmp
aam
scas
stos
cmp
repz
enter
aas
stc
arpl
enter
lahf
pop
add
mov
mov
fstpl
or
bnd
jmp
aam
scas
stos
pop
cltd
mov
or
mov
fsubrp
idivb
cmp
sahf
cmp
mov
out
cmp
mov
sub
stos
mov
in
shrl
aad
scas
stos
cmp
ljmp
repz
fnstsw
call
std
xchg
mov
mov
lahf
add
cs
mov
inc
jecxz
mov
es
roll
arpl
test
jle
fimuls
lcall
xchg
mov
pop
test
jmp
arpl
pop
fadds
mov
test
jmp
arpl
xchg
cmpsl
enter
fcmovnb
testb
std
stos
jg
cli
cltd
mov
xchg
dec
xchg
mov
xchg
aam
push
enter
mov
sub
stos
mov
fstpl
ljmp
incb
divb
mov
jmp
arpl
pop
lret
std
sarb
pop
out
addr16
shlb
mov
sbb
repnz
scas
stos
inc
aam
mov
xchg
aas
ljmp
imulb
mov
mov
sar
jb
scas
fstpl
out
nop
xchg
lea
lods
mov
sbb
notb
mov
lods
mov
jmp
arpl
stos
negb
xchg
ffree
jmp
aam
scas
stos
pop
rcrb
aas
loop
test
aas
daa
addr16
mov
inc
in
imulb
add
std
incb
cmpsl
jae
xchg
pop
add
ret
std
pop
jb
cmpsb
fstl
or
aam
scas
stos
add
ljmp
cmc
cltd
cltd
dec
xchg
arpl
cmpsl
addr16
mov
test
ds
xchg
aas
lock
negb
frstor
enter
inc
pop
hlt
inc
mov
jb
sahf
fldl
scas
stos
xchg
out
lahf
dec
xchg
aas
clc
arpl
mulb
inc
popf
notb
stos
mov
out
insb
jmp
mov
sub
jmp
arpl
inc
fwait
std
stos
xchg
cltd
mov
add
mov
push
clc
mulb
pop
pop
cltd
std
adc
cld
enter
arpl
add
mov
rorl
cmpsb
pop
xchg
cmpsb
jae
xchg
pop
inc
xchg
notb
cmp
subps
fwait
std
fstl
or
loopne
fs
decb
or
std
adc
push
inc
test
jb
xchg
fst
loope
arpl
notb
push
enter
pop
pop
xchg
std
push
std
shll
lods
fisttpll
jmp
aam
scas
stos
adc
aad
lods
dec
xchg
aam
nop
mov
rcl
imulb
mov
mov
in
xchg
jmp
aam
scas
stos
leave
fcomps
cmp
xor
or
fsubrl
fstl
jmp
aam
scas
stos
dec
or
daa
aad
scas
stos
rol
fistps
aas
hlt
arpl
mov
nop
loope
divb
mov
lret
mov
enter
or
lock
leave
xor
in
mov
xchg
ljmp
out
mov
mov
in
jb
pop
push
aas
jmp
lret
loopne
out
mov
jmp
idivb
jl
ffree
mov
test
daa
std
stos
dec
mov
mov
inc
mov
jb
ret
jmp
aam
scas
stos
int3
lock
ret
mov
repz
test
dec
lods
cmc
inc
cmc
arpl
sub
or
xchg
loop
aam
fs
decb
daa
std
stos
int
loopne
aad
scas
stos
int
clc
cltd
mov
loop
rorb
or
or
add
movsb
pop
fs
daa
std
lds
jmp
xor
movl
mov
inc
mov
or
loopne
rcr
dec
pop
cld
insb
or
mov
sub
jmp
arpl
mov
js
rol
clc
std
into
lods
or
lret
fisttpll
fisttpll
lods
shlb
enter
std
jmp
aam
scas
stos
dec
repz
out
mov
decb
add
fadd
iret
jp
psadbw
dec
popa
mov
out
jmp
sar
add
xchg
sub
les
mov
stc
rcrb
mov
cmc
stos
loopne
aad
int
push
push
std
mov
lds
sbb
incb
jnp
ljmp
lret
add
imulb
repnz
rclb
clc
cmp
mov
or
iret
xchg
pop
inc
shl
dec
std
aas
or
add
js
jle
outsb
aad
sti
or
push
cmp
pop
int
or
fdivr
repz
decl
dec
dec
in
push
in
sti
iret
sbb
out
jmp
out
or
in
in
sarb
add
repz
ljmp
pop
cmc
call
jmp
cmp
jmp
flds
and
mov
pop
add
hlt
mov
out
int3
divb
lret
gs
or
in
lcall
sub
std
cmc
stos
or
push
scas
repz
xchg
pop
psubsw
sti
stos
push
or
sahf
xchg
incb
stc
mov
fstpl
pxor
add
rcrl
in
idiv
or
je
xchg
stos
icebp
lods
fisttps
loopne
in
int
and
jmp
std
xchg
lret
loope
repz
push
xlat
mov
xchg
or
loopne
icebp
add
aad
scas
out
stc
pop
or
frstor
out
stos
add
mov
or
fndisi(8087
scas
in
mov
xchg
and
jecxz
cmc
in
jmp
jmp
leave
push
in
loope
leave
repz
lret
xlat
loop
jmp
in
fbld
lret
icebp
xchg
aad
out
lods
or
frstor
shl
push
in
testl
shll
mov
pop
or
movsb
xchg
std
ljmp
push
pop
and
std
movsl
popa
mov
in
dec
in
stos
es
pop
add
xchg
int
negb
fmul
test
or
and
lret
fistpl
loop
jbe
int
mov
cld
or
stos
rolb
mov
jbe
xchg
clc
int
out
lods
add
ljmp
jecxz
call
fdiv
repnz
jge
aad
cld
int
mov
xchg
out
out
test
fs
in
pop
or
imulb
add
out
fsubr
or
pop
aam
add
lock
fimuls
call
scas
repnz
xchg
mov
stos
fmuls
loop
in
and
or
psadbw
in
rorb
mov
or
popa
clc
lods
out
aam
add
std
fsubrp
or
call
mov
punpcklbw
cld
stos
ljmp
hlt
loop
ror
fisttps
or
xchg
or
pop
out
fsubr
or
scas
clc
mov
pop
aam
add
push
lock
or
call
pop
pslld
loopne
nop
cld
xchg
fadds
lods
loop
rolb
std
or
testb
mov
push
cmc
data16
sbb
sti
fsubrs
aam
cmc
iret
dec
cmp
fbstp
in
mov
or
cmp
inc
inc
adc
lods
mov
mov
das
rorb
fmuls
or
fnstsw
scas
loope
loop
jecxz
out
call
inc
mov
cmc
outsb
aas
stc
std
jmp
fldl
testb
push
or
push
out
aas
aad
fldpi
fstp
loope
in
jmp
mov
or
lret
addr16
sub
pop
lahf
mov
gs
sub
aad
push
and
mov
test
jp
sub
aam
pop
sbb
dec
andl
add
jmp
aam
aad
jne
dec
pop
add
push
cld
jo
add
scas
mov
jmp
mov
fadd
call
or
aad
je
pop
jb
adcb
dec
push
pop
push
out
aad
push
leave
xlat
iret
inc
jbe
sub
xor
sti
mov
and
sub
ljmp
inc
icebp
lods
lods
rcll
aad
mov
sub
cs
fsubr
xor
in
mov
or
mov
jmp
bound
jg
push
leave
mov
lods
arpl
lds
imul
shl
xchg
stos
clc
add
mov
push
scas
push
in
jnp
mul
in
jne
out
clc
movb
push
inc
push
incl
or
ret
jl
in
and
int3
mov
movl
mov
arpl
in
repnz
inc
push
rol
rcll
in
pop
add
add
in
loop
fstpt
ds
lds
jb
push
stos
pop
fwait
push
test
out
imul
fidivl
aad
add
or
enter
das
int
add
insl
xchg
ret
lods
aad
fstp
jne
iret
dec
mov
sti
inc
jge
jmp
push
psrld
sbb
mov
pop
push
jmp
and
dec
aad
aaa
mov
sbb
out
iret
jp
sub
or
ret
jge
aad
mov
push
or
pop
and
sub
mov
loop
in
icebp
jle
jo
mov
inc
cmc
out
fs
mov
loope
cld
stos
dec
jmp
dec
mov
xchg
int3
fdivl
sub
mov
push
mov
dec
jg
add
jnp
xor
sahf
push
dec
xor
aad
jge
lret
leave
jbe
ljmp
mov
or
iret
test
jmp
jbe
dec
xor
outsb
outsl
mov
loope
mov
xchg
dec
cmp
aad
sbb
cli
cmpsb
ret
movsb
mov
xchg
or
repnz
mov
pop
jb
jmp
xchg
sub
mov
add
jne
xor
cmp
scas
fadds
aad
cld
bound
imul
mov
mov
jb
cmc
pop
pushf
hlt
push
mov
adc
std
mov
in
pop
add
arpl
cmp
push
push
inc
mov
jp
jg
cmc
xchg
icebp
jle
mov
int
out
ds
shl
test
ja
cmp
stos
mov
pop
dec
cmp
mov
arpl
aas
add
sbb
in
inc
mov
shlb
inc
ss
btsl
int3
mov
or
mov
xor
rcrb
rcr
ljmp
movl
pop
stos
dec
in
cs
cmpsl
mov
daa
pop
aas
pop
pop
popa
lret
js
cmp
mov
fmul
sub
test
push
jg
loope
loop
jecxz
out
pop
imul
cmp
lods
int3
call
xchg
mov
fiadds
jg
xchg
loope
ret
pop
out
inc
xchg
adc
pminub
aam
mov
mov
lret
ror
in
in
dec
aad
or
dec
dec
push
scas
xlat
adc
xor
in
js
movsl
or
daa
rorb
or
loope
dec
aad
push
lcall
lods
shrb
ljmp
or
or
repz
push
xchg
mov
imul
data16
mov
aad
repnz
cmp
add
lods
dec
xchg
mov
cld
push
mov
push
lds
mov
stc
xchg
ljmp
fbld
in
loope
jmp
lea
or
decl
cmp
std
jge
pop
std
fcom
jge
sahf
mov
xchg
std
mov
push
inc
push
nop
or
cmpsb
fcomi
push
fsubrl
or
mov
std
cmp
ds
jg
imul
movsl
popf
in
lock
lret
dec
repz
insl
out
sub
and
das
rolb
mov
xchg
and
jle
bound
or
jo
push
mov
imul
cmpl
rorl
dec
shlb
jmp
cmp
cwtl
mov
jecxz
fs
xchg
mov
or
push
flds
cli
add
and
pop
les
into
and
out
mov
pop
jbe
cli
mov
jmp
test
add
lods
fcomip
cmpsb
aad
mov
xlat
cmp
sub
jmp
inc
jnp
imul
repz
or
jge
jb
loope
mov
cmpb
push
mov
mov
cmp
clc
inc
jmp
loop
mov
dec
and
scas
popf
repnz
aad
jae
ror
ljmp
test
out
cwtl
mov
dec
mov
std
push
jnp
loope
cltd
cmp
seto
icebp
mov
out
lret
pop
mov
int
fsubl
arpl
sahf
stc
pop
stc
push
pop
faddl
fistl
out
add
jl
mov
pop
fildl
sbb
lock
in
loope
in
and
sub
add
aad
xchg
aam
repz
add
push
das
mov
test
scas
nop
pause
lret
lahf
fdivr
or
fdivrp
mov
insl
dec
adc
fnstenv
jecxz
mov
cld
out
js
add
jecxz
enter
test
mov
or
add
pop
mov
sub
add
sub
fiadds
out
inc
fldenv
mov
or
xchg
sub
hlt
fmuls
rorb
adc
ja
lahf
jl
mov
xchg
out
test
sahf
xchg
pop
rcrb
cltd
xchg
frstor
mov
rorl
imul
testb
roll
push
xchg
iret
rorb
enter
por
stos
add
and
jg
into
lret
mov
aad
and
or
mov
cmc
loop
test
adc
jbe
sbb
pop
and
movsb
sahf
jl
dec
out
out
jbe
push
into
repnz
jg
sub
lods
cmp
inc
push
stos
push
loop
jmp
stos
imul
dec
outsl
pusha
pop
stos
imul
dec
or
cmc
lcall
pop
sub
fsts
dec
xchg
and
js
sub
out
and
hlt
pop
jmp
cli
dec
decl
xor
das
xlat
cwtl
data16
push
push
subl
ficomps
in
mov
xlat
fisttpl
jecxz
imul
mov
cwtl
addl
outsl
dec
mov
stos
dec
xor
pop
xchg
xlat
add
xlat
adc
in
jg
add
fidivl
cmc
pop
sub
xchg
pop
scas
push
fdivp
mov
add
adc
pop
aas
aam
xchg
fistl
loope
fsub
dec
pop
stos
out
cmpsl
loopne
or
in
rep
in
mov
fimull
leave
jg
or
cmc
adc
les
add
and
adc
dec
jne
int
les
outsl
pop
mov
testb
adc
pop
shl
or
stc
clc
out
mov
push
add
imul
mov
lret
out
xchg
xchg
mov
sub
lds
or
fisttpll
lret
pop
ret
or
push
movsl
fbld
ss
in
mov
or
iret
in
pop
add
popa
arpl
outsl
pusha
add
xchg
into
push
out
sahf
xchg
int
ss
mov
insb
out
fstpt
dec
push
int
rclb
leave
fldl
push
or
out
and
repz
fldt
gs
dec
xor
aad
and
cmp
add
mov
popl
add
mov
mov
pusha
mov
sti
loop
jle
into
in
fs
sbb
mov
or
scas
fmuls
adc
dec
or
pop
mov
sahf
and
test
jbe
ficompl
lods
jmp
les
ljmp
mov
stos
shr
dec
mov
jo
adc
jbe
xor
mov
jmp
mov
and
push
into
mov
sarl
xor
xbegin
or
sub
out
sbb
fldenv
aad
jnp
mov
or
dec
scas
fistpll
sub
fstps
cmpsl
hlt
faddp
xchg
fstp
mov
test
out
lods
sub
aaa
mov
call
xchg
xchg
cli
cmp
in
js
pop
decl
mov
scas
es
sbbb
xchg
int
les
ror
inc
lods
daa
mulb
sbb
ja
out
or
cmc
hlt
dec
out
bound
lock
popf
adc
decb
dec
add
sbb
inc
roll
or
loope
out
dec
dec
fpatan
jns
sti
xchg
fists
aam
pop
mov
cmp
or
xchg
fldcw
call
push
jl
leave
nop
or
mov
mov
cmp
xchg
or
mull
sbb
xchg
push
stos
mov
shl
testb
jae
lock
jbe
add
lds
add
rorb
jne
or
jg
mov
into
mov
push
lret
push
jp
mov
loop
mov
stos
movb
pop
std
inc
cmp
mov
js
ret
jecxz
push
aad
ret
cs
loope
or
inc
int3
cmpsl
mov
inc
mov
fmulp
lret
push
out
jns
add
jge
out
popa
jmp
cmpsl
jmp
fxch
fidivs
jg
in
mul
lods
push
sbb
pop
jecxz
in
int
jae
daa
sbb
cmp
scas
xchg
add
fucom
lods
add
lods
xor
idivb
inc
or
mov
hlt
dec
fsubrp
loope
cmp
out
push
pop
sub
jecxz
jecxz
jg
mov
stc
das
jo
neg
push
fisubs
and
dec
inc
faddp
mov
clc
cmp
cmp
cmp
sub
arpl
ret
aad
push
ljmp
push
mov
scas
idivb
shr
cmc
nop
rolb
movsl
out
pop
sbb
lret
invd
std
fisttpll
xchg
xlat
movsb
repnz
lock
addr16
stc
mov
out
addr16
dec
add
insl
push
cmc
sar
add
cmpsl
mov
sub
outsl
jmp
add
aas
lea
add
out
push
fstpt
xchg
loope
insl
mov
mov
jg
inc
jb
push
inc
jae
jp
aad
pop
dec
lods
inc
stos
idiv
ss
mov
movsb
scas
and
dec
inc
cmp
dec
xchg
xor
out
fsubr
mov
loope
out
dec
stos
ss
add
jl
shrl
hlt
push
inc
mov
mov
call
mov
sbb
movsl
enter
fs
xchg
imul
ret
cs
pop
out
sbb
idivb
loope
fistps
ret
dec
adc
mov
sub
inc
xorl
fiadds
mov
sub
dec
mov
aas
outsl
pop
lahf
dec
stc
lea
cmc
pop
push
inc
jl
repnz
jbe
mov
fistpll
mov
int
stos
jmp
cli
dec
aad
data16
xorb
dec
mov
adc
add
bound
rcrb
cmp
jle
test
xor
divl
or
les
jecxz
push
xor
dec
mov
or
mov
xchg
add
lret
push
jp
jbe
mov
iret
mov
mov
call
repnz
mov
aad
lret
repnz
loopne
add
push
mov
adc
stos
in
mov
or
daa
or
or
jp
aad
mov
insl
enter
vlddqu
jmp
jge
repz
mov
arpl
insl
push
clc
mov
jp
pop
testb
or
or
fnstsw
scas
loope
loop
jecxz
in
in
xchg
sub
mov
jmp
std
xchg
inc
cmp
dec
push
dec
jne
cmc
fcomps
mov
stos
hlt
js
xchg
push
mov
inc
andnps
outsl
dec
repz
mov
xor
jne
aas
mov
jne
sbb
xor
jg
sub
dec
in
in
icebp
cmp
jne
aam
cs
in
out
or
es
jne
repz
in
lcall
cltd
xlat
ret
mov
lods
mov
loop
or
int3
dec
scas
lret
mov
int
dec
int
or
push
adc
insl
lea
mov
mov
cmp
out
sub
push
cmpl
aas
jecxz
out
in
in
lods
mov
lahf
fisttps
dec
cmp
jmp
sbb
mov
aam
and
sbb
test
fcoms
sbb
add
aad
dec
ret
out
push
fsubrs
and
inc
fiadds
sub
iret
fisttps
adc
outsb
jns
cmp
in
stc
mov
ret
or
or
ljmp
mov
sbb
gs
ret
ja
aad
aam
inc
xchg
test
lea
or
imul
js
fxch
aad
jne
dec
cmpsl
adc
js
fcompp
or
xchg
adc
leave
jnp
push
xchg
call
scas
lea
dec
fsubr
mov
aad
aam
cmp
mov
mov
dec
push
xchg
xchg
dec
fsub
movsb
aas
aad
loope
cmp
xor
mov
push
loop
mov
adc
ja
insb
lret
repz
popf
or
fmull
jecxz
mov
insl
sti
cmc
ret
xor
push
mov
sub
in
icebp
xor
bnd
in
loopne
fidivrs
mov
mov
or
inc
sbb
jle
ds
push
ljmp
ljmp
mov
rorb
xchg
mov
mov
jnp
push
idivb
lock
mov
push
imul
add
fucomp
jp
out
stos
fcomps
inc
push
push
dec
ret
popa
fucomp
cmp
inc
pop
and
or
in
lods
mov
ret
jne
out
jb
out
xchg
xor
push
mov
push
out
lret
addr16
lock
lock
shll
sub
shr
mov
cmp
inc
push
in
out
mov
cwtl
or
and
inc
decb
je
repnz
mov
or
into
adc
into
adc
aas
into
shl
aas
into
shl
aas
into
shl
cs
inc
xor
movsl
xchg
hlt
test
jg
into
dec
adc
aam
scas
xchg
ret
mov
xchg
push
mov
pop
lret
ds
in
hlt
mov
into
xor
repz
lods
mov
dec
in
scas
mov
adc
or
push
out
sti
dec
inc
pop
or
adc
aas
dec
nop
xchg
dec
dec
adc
dec
inc
jb
clc
xchg
xchg
fs
testb
stc
addr16
add
sti
dec
push
aas
cli
arpl
dec
in
jne
mov
dec
setg
or
push
cli
xchg
stc
dec
xbegin
mov
dec
push
lret
sti
dec
and
fnstenv
xor
xchg
mov
bswap
push
cld
lods
mov
ret
jne
cld
lcall
test
in
or
cli
jle
in
cld
lcall
daa
gs
push
addr16
push
sbb
insb
or
jmp
push
fdivrp
add
je
fdivrs
fwait
cld
dec
fadds
add
cs
sub
jg
in
std
lcall
jle
in
lods
mov
js
aaa
sub
fldl
jle
in
std
lcall
fsubs
ss
sub
cmp
or
arpl
enter
sbb
fisubl
cmpsl
std
dec
mov
inc
mov
jae
lods
cmp
cmpsl
out
mov
in
fsubrp
mov
out
mov
out
jecxz
or
daa
dec
aad
js
cvtpi2ps
cmpsl
out
mov
jb
or
xor
jo
sbb
pop
or
and
mov
out
pop
ret
je
stc
cmp
inc
push
lret
mov
ret
jne
out
lcall
or
mov
out
ficomps
jg
addr16
add
in
testb
test
cmp
shrl
in
push
ja
sar
or
aas
or
fdivrs
and
out
mov
shr
lds
into
dec
scas
push
insl
push
inc
lock
jle
in
lods
mov
ret
ror
push
rcl
clc
or
inc
mov
rcl
shrb
in
lock
in
rcl
repnz
rcl
repz
data16
or
dec
aad
shr
xchg
dec
inc
rcl
ss
mov
lock
push
dec
lret
lock
mov
jmp
and
xor
mov
in
lods
mov
ret
gs
rcl
jg
xchg
ds
call
or
movsl
push
add
movsl
push
enter
sub
or
jge
xchg
aad
adc
enter
xlat
arpl
enter
in
lea
int
js
ficompl
fdivs
or
sbb
bnd
repnz
aas
dec
sub
mov
mov
test
inc
fdivr
bnd
fnsave
fstl
add
pop
pop
decb
arpl
enter
in
int3
mov
or
pop
cmpsl
fcoms
add
leave
movl
in
lods
mov
enter
mov
pushf
jle
loope
loope
inc
repz
aas
loop
loop
ljmp
or
lock
sar
mov
loop
lods
sub
xchg
loopne,pt
bnd
push
jno
cmp
and
dec
mov
in
push
enter
stos
fwait
enter
mov
ret
jne
negb
in
in
ficoms
mov
lahf
or
in
push
out
out
imulb
js
xor
or
cmpsb
mov
sbb
out
and
rolb
in
mov
testb
negb
or
rol
adc
inc
mov
lods
mov
ret
jne
hlt
lcall
inc
lods
jae
lret
push
inc
lret
mov
jmp
push
in
jmp
hlt
mov
enter
out
in
or
js
push
mov
dec
in
jle
sbb
shll
ljmp
jo
nop
enter
nop
dec
in
jg
push
orb
in
in
into
xor
in
into
xor
in
into
xor
in
into
xor
in
into
xor
out
shl
out
shlb
pop
or
rcr
lock
in
aas
into
shl
aas
shlb
cwtl
out
add
jo
or
pop
lret
rorb
lock
sub
sti
aad
jle
loopne
mov
into
ret
je
repz
in
add
dec
roll
dec
roll
dec
roll
dec
roll
dec
cs
hlt
mov
hlt
js
test
or
adc
in
cmc
cli
jle
out
pop
dec
inc
jb
notb
movsl
cs
dec
orl
push
dec
imulb
cmc
arpl
enter
sbb
frstor
cmpsl
pop
dec
mov
inc
mov
jae
dec
inc
pop
sub
push
movl
dec
push
movl
dec
push
aas
stc
arpl
dec
in
pop
mov
js
enter
cli
cli
jle
out
push
dec
inc
pop
cltd
sti
dec
fidivrs
aas
add
dec
outsl
add
rcrb
or
pop
dec
inc
fdivrp
add
dec
ret
inc
aad
jle
loopne
lods
pop
jg
pop
cmpsl
fcoms
add
stc
cmovs
cmovs
cmovs
cmovs
cmovs
incb
xor
iret
aad
add
pushl
in
lods
push
stc
wrmsr
jmp
aam
scas
push
in
mov
sti
aad
adc
fsubrs
lahf
out
popl
add
jb
fnstsw
insb
cmp
cmovp
add
fcoms
add
cli
cmovs
cmovs
cmovs
cmovs
cmovs
add
movl
aad
fistl
jle
out
cli
cmovo
push
jb
push
xchg
lahf
mov
sbb
fnstenv
repz
mov
sub
add
cli
je
in
scas
adc
and
xor
dec
sti
jne
inc
cli
xchg
mov
in
lcall
or
jae
pusha
cs
or
jne
or
or
sbbl
int
aas
jp
stos
or
mov
or
pushf
push
lcall
xchg
dec
out
inc
lret
cld
gs
cld
cli
jle
in
lods
mov
enter
popa
pushl
push
add
jle
in
cld
lcall
inc
cs
pop
sahf
aam
sar
xchg
xlat
shrb
in
outsl
fnstsw
sbb
cld
ldmxcsr
sbb
xor
pop
mov
and
std
lods
mov
ret
jne
std
lcall
adc
adc
idiv
jns
out
sahf
rcll
sub
or
adc
ret
adc
push
aam
clc
cli
hlt
cs
mov
mov
pusha
adcb
fcmove
inc
in
cltd
rcll
jno
jg,pn
cmpps
cmpsl
std
jns
adc
xchg
push
enter
repnz
insb
in
add
xor
add
xor
add
xor
add
xor
add
xor
xlat
adc
rcll
scas
pop
add
incb
fdiv
add
into
rcr
cs
loopne
jbe
add
mov
rcl
xchg
aad
stc
decb
arpl
enter
cwtl
sti
add
scas
nop
jmp
and
xor
insb
cld
orb
nop
mov
ret
jne
add
fcompl
aaa
add
aad
mov
jg
fldl
jle
in
je,pn
loopne
pushl
mov
and
sub
mov
xlat
scas
fimuls
inc
inc
add
loopne
mov
pop
lret
jns
or
dec
push
or
dec
push
or
dec
push
or
dec
push
or
dec
loope
loope
push
add
loop
loop
push
or
xor
jecxz
push
dec
in
dec
cmp
and
imul
jg
fucom
jb
or
pop
gs
or
pop
in
or
orb
rorl
ucomiss
or
ucomiss
js
sbb
mov
jecxz
dec
inc
mov
in
out
or
jmp
loopne
out
or
rorb
or
mov
call
shl
addr16
or
xor
push
sarb
into
or
cmc
mov
xlat
pop
adc
cld
xchg
nop
push
cmp
sub
dec
jnp
adcl
arpl
sahf
dec
aad
mov
fisttpll
jno
cmp
in
mov
stc
cmp
xchg
dec
lea
cmp
call
loopne
cld
jno
mov
jmp
jmp
in
jbe
sub
call
in
cli
jg
jmp
push
fiaddl
pavgw
cmp
xchg
in
enter
mov
xchg
or
divl
ss
fisubrl
xlat
mov
popf
fdivrs
insl
ljmp
add
and
fistl
fs
jnp
in
xlat
fmuls
neg
leave
scas
subl
inc
iret
sar
in
fldcw
inc
sti
rorl
sbb
xchg
ret
call
and
mov
into
inc
pop
fcmovne
outsl
out
push
mov
fst
fwait
xlat
iret
ret
xchg
jmp
adc
iret
adcl
lock
das
jnp
xor
loopne
stc
pop
icebp
test
icebp
clc
ds
in
clc
or
shl
fldz
xchg
mov
stc
enter
fnstcw
xchg
fildll
lods
stc
cmpsb
mov
jnp
cltd
in
push
lock
push
lea
xchg
faddl
fisubrl
mov
dec
movsl
xchg
outsl
jg
imul
xlat
cs
jno
inc
fdivr
cmp
cltd
in
mov
enter
outsl
pushf
lret
fidivl
inc
inc
fsubrs
ret
pusha
mov
cmc
cwtl
fcoms
in
sub
movsb
push
loopne
dec
pop
fstl
or
stos
push
sbb
es
pushf
movb
ja
pop
mov
daa
mov
outsl
nop
in
lcall
lret
push
mov
jle
in
in
dec
andb
stos
mov
or
aam
scas
pop
ss
push
test
lahf
pusha
or
or
mov
xchg
pop
aam
in
adc
adc
cli
mov
cs
and
mov
push
psadbw
hlt
cmc
adc
push
jns
jl
sub
xor
push
push
pop
jns
stc
testb
testb
testb
testb
testb
stc
mov
stc
js
out
add
cli
mov
dec
adc
cs
inc
test
cs
sti
aad
lds
adc
ja
xor
sub
rol
push
enter
arpl
dec
push
jg
pop
cmpsl
fadds
lret
mov
lds
adc
inc
pop
adc
nop
movhps
in
inc
jb
adc
jle
cmp
mov
xchg
push
ljmp
pop
dec
push
add
jmp
loopne
in
aad
add
les
sahf
fsts
decb
add
jmp
enter
push
push
in
add
jae,pn
cwtl
shrl
mov
xor
add
xor
add
xor
add
xor
add
xor
add
repnz
aad
sub
adcb
adc
add
in
notb
test
sub
dec
push
in
add
lret
push
push
mov
add
add
cwtl
mov
or
es
adc
test
jg
add
inc
fiadds
inc
fiadds
inc
fiadds
inc
fiadds
inc
fimuls
adc
cmp
jbe
imul
in
cs
add
lcall
fiadds
pusha
xor
jecxz
cmp
xlat
sub
testb
lret
add
and
loopne
jg
into
ret
je
or
xor
or
sti
mov
pop
dec
adc
mov
loopne
mov
pop
dec
push
inc
push
icebp
out
inc
out
aad
add
mov
lahf
or
in
lods
push
sti
mov
loope
and
js
nop
orl
rcll
or
repz
packsswb
enter
sbb
loope
daa
sti
in
fucom
cwtl
ja
push
or
dec
je
push
fdivr
cli
mov
xchg
cli
pop
dec
push
cli
mov
cli
mov
cli
stc
xor
rclb
rclb
mov
inc
push
pop
cltd
fsubrp
rcll
rcll
in
cli
mov
in
aam
repnz
aam
repz
hlt
repz
dec
aad
rorb
add
push
push
lods
sub
xchg
ds
repnz
cli
dec
sarb
pop
cmpsl
pop
xchg
add
push
jmp
cmp
jne
jmp
lret
jmp
mov
mov
icebp
push
inc
out
aad
jno
xlat
mov
jg
fadds
jle
in
cs
loopne
incb
add
mov
jge
or
sub
fsubs
enter
jecxz
jl
popa
inc
jecxz
jmp
and
xor
aaa
dec
enter
in
lods
mov
ret
jne
in
lcall
inc
add
xor
lods
mov
xor
inc
mov
sarb
insb
idivb
lret
lock
push
sarl
fiaddl
in
ds
stc
sbb
cmp
inc
das
adc
mov
insl
addr16
mov
lods
mov
xor
loope
repnz
loope
repz
add
jns
les
xchg
orb
push
cs
add
push
scas
pop
xchg
inc
or
cmp
mov
out
ds
sub
jle
loopne
scas
nop
enter
jle
push
push
xor
adc
ret
stc
stc
mov
xchg
stc
pop
dec
push
stc
mov
stc
mov
stc
stc
lcall
cmpsl
push
inc
inc
rcrb
pcmpeqw
xchg
stc
mov
push
loope
gs
andb
mov
push
cltd
out
or
jg,pn
mov
in
aad
adc
stc
ljmp
and
int3
in
clc
lcall
jle
in
lods
sti
jmp
jg,pn
push
dec
push
pop
pop
push
jecxz
cld
and
in
jg
out
push
inc
clc
cli
aas
in
arpl
dec
stos
cmp
mov
xor
pop
xchg
jl
lret
push
dec
inc
in
pop
sub
sti
aad
jle
loopne
scas
nop
enter
jle
adc
and
sub
push
in
std
lcall
jle
in
lods
mov
js
dec
jmp
leave
mov
icebp
insl
push
in
icebp
fwait
std
mov
enter
in
mov
inc
mov
insb
mov
mov
lahf
scas
repnz
jb
std
aad
scas
nop
lret
std
popa
inc
out
jmp
and
xor
dec
push
mov
ret
jne
cld
lcall
cmc
inc
or
enter
add
testb
in
divl
notl
repz
dec
jl
subb
mov
div
imulb
lods
fwait
out
push
inc
cld
bnd
adc
adc
pop
loope
mov
ljmp
cli
jle
in
cs
inc
mov
leave
aad
mov
in
sti
cli
jle
in
ljmp
push
push
or
aad
fmull
loope
call
mov
cld
push
cli
inc
inc
ljmp
cwtl
lret
fbld
cmp
inc
push
leave
or
call
in
call
inc
call
decl
pusha
lret
movb
mov
sti
add
in
add
call
mov
add
test
into
cmp
xor
pop
mov
or
fidivrs
add
add
cwtl
or
and
inc
loopne
arpl
xchg
mov
cmp
out
ror
adc
nop
in
add
push
repz
in
sub
pop
lahf
test
push
ds
fiadds
push
jo
pop
push
orl
cs
popa
xchg
mov
es
mov
xchg
sysret
push
hlt
push
adc
mov
inc
jmp
mov
xchg
mov
cmp
outsl
or
decl
sar
mov
sar
mov
xchg
lcall
push
or
push
or
or
dec
jp
cmp
lret
push
jg
push
add
push
push
decl
enter
clc
repnz
outsl
das
lahf
jb
outsl
fstpt
jp
mov
jg
fisttpll
jb
call
ljmp
ljmp
xorb
xchg
int3
mov
lock
dec
xchg
lock
dec
xchg
lock
dec
xchg
lock
dec
push
bswap
jmp
loopne
decb
add
movsl
pop
add
lock
push
rclb
pop
push
int
fadds
ss
fstpl
add
xlat
rclb
inc
lock
js
dec
push
lret
lock
and
lods
pop
rclb
push
ret
jg
in
in
lcall
jle
in
lods
sti
rcll
dec
push
mov
pop
hlt
mov
aam
dec
or
xchg
push
in
ret
xchg
enter
clc
testl
xchg
je
or
add
lods
sub
xchg
ds
repnz
in
mov
add
in
mov
in
xlat
xchg
cmp
in
dec
fidivl
cmc
aas
mov
jmp
adc
aas
mov
sti
xchg
aad
jg
xchg
sbb
repz
ds
fcompp
xchg
add
aas
mov
mov
inc
andl
xchg
jnp
mov
out
adc
test
and
xchg
inc
fadds
scas
xor
xchg
mov
out
rorb
or
jp
loopne
and
mov
pop
sbb
mov
jp
sarl
mov
mov
lods
stos
ficompl
and
push
xor
jp
in
cs
fiadds
cmc
sub
dec
test
fst
adc
push
jg
out
fiaddl
fildl
mov
sbb
movsl
jecxz
mov
es
test
add
filds
test
clc
lock
sbb
and
or
xchg
xchg
movsl
sarl
adc
out
in
push
mov
loope
scas
or
loop
adc
aad
scas
stos
jecxz
mov
xchg
popa
push
fstp
mov
adc
jbe
sbbb
sub
sbb
pop
movsb
mov
fimuls
push
dec
les
push
xor
inc
mov
imul
sbb
aas
mov
outsl
roll
add
or
mov
xchg
lods
xor
or
add
movl
fstpl
les
loop
gs
sbb
mov
inc
std
pop
out
pusha
inc
pop
stos
out
inc
pop
inc
out
inc
pop
je
imul
inc
pop
add
lods
lahf
hlt
inc
lahf
and
lret
loope
lock
dec
prefetch
stos
stc
clc
sub
dec
dec
aam
fistpl
fs
jns
push
les
aaa
lcall
mov
or
les
test
mov
das
mov
pop
adc
push
dec
jo
cmpsl
xchg
adc
push
lock
lea
push
dec
or
out
sbb
mov
dec
cmp
mov
fdivrs
stc
sbb
out
and
arpl
jbe
ds
imul
xchg
gs
lret
iret
pop
mov
ss
fmulp
or
sub
popa
lods
or
sarl
std
or
stc
mov
push
sbb
call
scas
aam
int3
mov
sub
fucomi
mov
inc
adc
push
lods
mov
mov
fimull
pop
fsubl
sub
or
out
jecxz
loope
sbb
hlt
xor
sbb
mov
adc
dec
xlat
xchg
add
into
addr16
dec
out
sbb
icebp
gs
dec
inc
cmp
cmc
aaa
add
cmp
mov
pop
jmp
jp
ss
sub
push
mov
lret
les
ljmp
stc
mov
jno
xor
cmc
or
or
sbb
add
fucomp
jp
ret
stos
mov
pop
adc
add
out
or
mov
and
sti
inc
sub
dec
fldl2t
test
aad
repnz
fsubrl
jnp
stos
std
outsb
or
push
and
push
or
cltd
loope
push
cli
faddl
dec
mov
les
cmp
mov
pop
pop
push
and
fs
shl
inc
add
aad
add
dec
mov
rcrl
jg
into
jns
ljmp
sti
sub
mov
jno
in
xchg
cmpsl
mov
or
mov
int
pop
and
pop
sbb
cli
cmp
and
std
js
inc
popf
inc
lahf
divl
mov
pop
add
mov
movsb
out
dec
jbe
xorps
cmp
stos
sarb
stos
xor
iret
mov
mov
lret
rcrl
jae
testl
push
adc
scas
pop
loop
dec
xor
cld
dec
cmp
dec
decl
jno
mov
stos
hlt
push
les
jb
cmp
sbb
adc
js
aad
rorl
loope
mov
xchg
push
sbb
sysenter
cmp
imul
stos
fwait
mov
int
jg
or
out
testb
or
out
scas
add
or
cmp
pop
mov
sti
sbb
jmp
mov
mov
jns
adc
push
mov
test
or
and
mov
jp
push
mov
pop
sub
cmp
arpl
sbb
jmp
sbb
xchg
neg
dec
loope
jo
loopne
and
inc
mov
inc
loope
sub
mov
mov
fsubrs
vmread
cli
inc
pop
cmpl
push
cmpsl
dec
imulb
push
add
mov
mov
sahf
add
pop
jmp
mov
mov
out
pop
jmp
dec
ljmp
sbb
fwait
test
and
jmp
clc
ud2
pop
and
sbb
ds
int3
pop
fucomi
mov
out
mov
mov
aam
pop
sbb
loope
adc
dec
into
fiaddl
jno
fsubs
push
sti
and
add
mov
sbb
mov
add
je
lea
push
mov
or
pop
pop
inc
jno
add
stc
out
dec
or
and
inc
pop
push
daa
mov
mov
mull
adc
and
jo
stc
mov
cmp
test
sarl
cmp
lock
push
xchg
jne
mov
ss
test
sti
or
in
loope
and
add
pop
inc
lahf
push
fld
mov
loopne
rorl
dec
sub
cmpsl
mov
mov
xchg
pop
pop
pop
lahf
xchg
push
stos
lds
pop
pop
push
ror
or
leave
aad
test
lock
sbb
inc
mov
icebp
dec
imul
aam
inc
push
or
movsb
xchg
pop
ds
pusha
mov
mov
loop
xchg
add
or
jecxz
push
mov
xchg
test
fiadds
aam
adc
bnd
push
test
mov
lret
xchg
mov
ror
jl
fcos
or
dec
cli
xchg
fld
or
ret
pop
xor
and
roll
out
fidivl
fsubrl
or
mov
inc
mov
cmp
lret
rorb
rorl
xlat
cmpsb
mov
cmc
idiv
bound
stos
adc
test
add
jns
jb
push
cmpsl
and
dec
out
loope
mov
dec
outsl
sahf
jne
xor
jno
jno
ljmp
jno
sbb
mulb
sub
loopne
cmp
pop
dec
mov
mov
inc
mov
cmp
inc
ja
xchg
sbb
std
jnp
or
imul
sub
popf
and
jae
push
jmp
js
pusha
aaa
and
or
sbb
inc
push
data16
mov
mov
pop
dec
lahf
je
dec
jge
lret
mov
ret
push
sbb
in
movsl
test
adc
pop
dec
xor
repz
sub
jb
or
add
push
les
andl
jecxz
cli
add
or
fmull
popl
sbb
dec
fmuls
mov
fcmovu
leave
dec
out
xchg
test
jns
pop
cmp
les
mov
fimull
sub
jecxz
fcmovb
push
sahf
jo
sbb
pop
dec
test
jp
or
lods
daa
jns
popa
jno
out
xchg
jno
js
loope
jmp
inc
pop
adcl
mov
push
xchg
push
aam
or
pop
outsl
jo
pop
sti
pop
js
adc
xchg
movsl
add
jg
arpl
ret
shll
mov
inc
push
inc
ljmp
xchg
lods
push
mov
mov
movsb
pop
ss
pop
stos
mov
shl
int
cmpsb
fiaddl
cmpsl
add
pop
insl
xrelease
push
xchg
test
cmpsl
jmp
jno
call
lds
jmp
mov
inc
push
mov
and
dec
mov
or
mov
jbe
lods
arpl
dec
stos
aaa
outsb
aad
mov
in
daa
sahf
fwait
shll
sub
dec
cwtl
inc
xchg
loopne
cmp
lret
imul
push
mov
mov
imul
mov
aam
out
xlat
jae
lahf
inc
in
sub
mov
add
mov
push
and
cmp
cltd
or
or
jg
in
jecxz
xchg
cmc
fstpt
inc
ss
pop
mov
outsb
sbb
in
push
dec
pushf
mov
mov
cmc
in
inc
cmp
dec
cmc
fbstp
loop
fdivs
and
pop
cmp
mov
shl
xchg
cmpb
xor
jge
xchg
flds
cli
enter
mov
xchg
jmp
sub
mov
mov
push
or
mov
std
and
push
lret
pop
int
mov
fstp
popf
inc
dec
fcmovnu
cmpsl
add
inc
mov
js
movsl
jnp
jp
popa
xchg
jne
ds
mov
jae
jmp
push
loopne
jmp
xor
cld
inc
pop
dec
pop
iret
cmc
add
int3
test
mov
mov
lret
cmp
std
enter
lret
pop
inc
push
jbe
mov
enter
mov
adc
sub
mov
xor
mov
aam
pop
mov
cmpsl
imul
scas
dec
mov
sarl
mov
mov
or
sbb
imul
loopne
sub
xor
test
jp
popa
lret
dec
xchg
sti
inc
add
mov
neg
mov
sbb
sti
xchg
sti
repz
and
cmpsb
mov
cmp
call
push
mov
xor
aad
out
jg
dec
movl
into
mov
gs
into
mov
cmp
popa
ljmp
out
adc
stc
mov
sub
sbb
loop
jge
push
xchg
add
gs
out
mov
jo
fst
dec
frstor
or
ds
pushf
dec
inc
fwait
sti
cmp
inc
movsb
cmp
loop
jecxz
cmc
sub
mov
xchg
lods
lock
push
cmpsl
jmp
mov
and
dec
pmullw
out
mov
mov
lret
mov
fimull
ficoml
sbb
jg
dec
push
push
stos
adc
sub
sbb
and
mov
sub
lahf
outsb
and
aad
or
xchg
push
sbb
es
cmc
sub
orb
or
or
fdivrl
push
cmpsb
jnp
or
aaa
mov
xor
or
jae
in
scas
sub
push
mull
lss
xlat
xchg
dec
jmp
jmp
fisttpl
fdivr
loopne
scas
call
cld
add
push
lret
ljmp
jmp
das
or
std
nop
icebp
pop
inc
cmc
rsqrtps
aam
dec
out
mov
pop
fstpt
inc
mov
pop
xchg
stc
arpl
into
jmp
push
sub
jmp
push
push
mov
out
jno
cld
push
and
mov
fldcw
pop
or
xchg
push
jae
subb
mov
cmc
repz
pop
outsl
xor
mov
arpl
jge
cwtl
pop
or
aad
mov
jns
call
jno
ficoms
cmp
cli
les
lahf
cli
aad
sub
xor
sbb
add
fcmovbe
push
mov
int3
rcrl
mov
mov
pushf
divb
add
jge
lock
add
loopne
dec
std
jnp
xchg
push
add
push
fbld
push
mov
fisubrl
adcl
adc
cmpsb
xchg
fucomi
sbb
push
out
add
or
cmp
adc
sub
rcrl
add
or
adc
fs
pop
or
or
push
sti
sub
inc
cld
int3
xchg
movsb
and
mull
push
in
dec
aad
dec
roll
push
push
movsb
or
and
ds
loopne
in
aad
pop
mov
les
fcmovbe
test
or
mov
jle
mov
mov
je
or
cwtl
cltd
loopne
pop
push
sbb
into
shll
pop
pop
repz
adc
lret
mov
xchg
enter
fsub
mov
mov
loope
push
inc
icebp
into
lcall
xchg
dec
cmpsb
mov
xchg
inc
mov
and
sbb
out
rorl
movsl
jmp
jge
push
jmp
add
out
in
aaa
cmp
pushf
xor
jg
push
inc
iret
adc
or
and
xor
cmpb
aad
insb
or
cmp
fiadds
add
push
fisttpl
decb
sub
cmp
xchg
sti
push
into
xchg
inc
enter
nop
dec
push
xor
aad
out
fisttpl
in
or
jl
xchg
push
sti
pop
scas
push
inc
xorl
in
or
in
push
aad
ret
jbe
ss
jne
mov
mov
sub
push
iret
cmp
mov
cmp
div
out
lock
stos
jle
xlat
cmp
aad
into
jne
hlt
dec
jmp
mov
stos
cmpsb
jg
push
xchg
mov
lock
arpl
and
add
lret
xchg
fmull
jmp
into
dec
or
or
lret
ficoml
repz
aas
xchg
and
lret
fdivl
dec
gs
aam
add
mov
lret
stos
push
mov
int3
scas
fadd
push
lret
fcoml
and
or
scas
jg
fildl
out
sarl
jne
dec
js,pn
mov
inc
neg
test
out
into
faddp
xchg
je
or
or
lret
cld
cwtl
sub
test
es
mov
jg
push
inc
subl
outsl
scas
aam
sbb
jmp
stc
lret
pop
sub
cs
push
cmp
dec
dec
imul
out
or
movsb
mov
mov
fidivrl
inc
and
lea
adc
fsubrl
hlt
out
mov
sub
inc
scas
in
jl
sbb
in
fisttpll
inc
fistps
pop
leave
in
mov
mov
idiv
addl
add
or
aam
fsubs
loopne
mov
leave
call
clc
cld
jmp
fisttpll
es
sbb
int3
fiaddl
push
mov
inc
aad
test
imul
xor
push
test
leave
fadd
xchg
pop
loop
cli
loope
push
push
cmp
mov
cltd
les
xchg
lahf
xchg
clc
jne
pop
shl
jmp
sti
hlt
out
mov
insb
dec
test
mov
xchg
fcmovu
fs
arpl
inc
jg
cmp
xor
jp
fidivrs
dec
cmp
xor
or
pop
gs
lcall
pusha
mov
iret
cmp
pop
add
jae
stos
out
out
fnstsw
mov
enter
sbb
and
in
fisttpll
jnp
or
in
mov
pop
jge
cld
jg
lock
insl
push
xchg
add
scas
icebp
aad
std
subb
loope
aad
or
stos
fprem1
in
xor
xor
test
add
movsl
jmp
push
jnp
dec
cmp
shrb
jg
mov
out
mov
xchg
or
mov
cltd
pop
mov
stos
add
push
int3
push
idiv
lods
pushf
adc
hlt
shl
aad
pop
and
and
cmp
arpl
cld
stos
ret
mov
push
loopne
in
inc
and
rcll
adc
jns
xor
sahf
mov
insl
imul
stos
sarl
jmp
push
fdivl
jbe
lds
add
fisubl
std
popf
int
mov
sbb
add
jge
decb
sar
jg
cmp
inc
add
out
add
in
or
fdivrs
add
fs
int
add
mov
mov
mov
mov
cs
or
mul
sub
loop
in
jmp
mov
xlat
int3
cmp
ret
mov
call
cmp
cld
push
pop
icebp
testb
cmp
in
cld
cmp
leave
add
mov
cmpsb
inc
push
add
shl
mov
mov
jbe
xchg
dec
test
inc
ds
cld
inc
push
fmuls
mov
js
adc
idivl
call
mov
out
outsb
xor
lret
dec
or
sub
cmpsl
sub
mov
cmpsb
xchg
dec
push
mov
popf
std
outsb
in
movsl
orb
jne
push
ljmp
add
sahf
jge
mov
imul
push
in
aad
fwait
dec
push
jo
dec
ja
sbb
and
xchg
xchg
hlt
ret
lods
jno
mov
roll
adc
int
fcomip
mov
or
and
out
shr
mov
pusha
lock
push
add
repnz
cli
sub
ficoml
aad
ljmp
leave
add
jg
pop
aad
arpl
cmpsl
out
dec
popa
out
add
cmp
pop
enter
push
out
pusha
adc
push
add
stos
mov
loopne
or
div
fstpt
mov
sbb
outsb
mov
and
pop
aad
xchg
mov
pop
sub
mov
mov
or
cs
ret
dec
mov
jnp
loopne
test
fbstp
cmpsl
mov
rcll
push
mov
mov
mov
faddl
lret
aam
or
add
clc
sub
mov
in
dec
in
idiv
aad
std
cli
ds
jbe
jge
adc
pop
in
sub
iret
adc
xor
div
in
adc
jb
ficoml
into
dec
loop
popa
cmc
repz
jle
pop
cmp
aaa
mov
icebp
aas
lret
jle
aad
scas
lcall
addr16
adc
jecxz
cld
jl
cmp
mov
cmp
fbld
push
shlb
xor
jnp
aam
and
cli
inc
cmc
mov
jg
push
sub
in
lret
nop
lods
sbb
in
sbb
out
out
cmc
mov
mov
dec
xlat
es
pop
iret
adc
rorb
jecxz
sar
into
push
repnz
ljmp
xchg
mov
jb
push
or
jl
xchg
sbb
jne
comiss
push
jnp
push
xchg
ljmp
movsb
jne
inc
out
sbb
jae
or
aad
inc
repz
cmp
pushf
pop
cmpsl
imul
mov
lret
movsb
lahf
lcall
std
dec
enter
icebp
bsr
lds
sbb
cmp
lret
ljmp
aad
pop
pop
or
or
repz
jmp
lods
mov
add
fistps
cmpsl
sti
dec
dec
xchg
cltd
adcb
std
pop
xchg
fnstcw
out
jo
frstpm(287
sti
jle
aad
scas
lcall
repz
daa
jecxz
dec
outsl
xor
or
xlat
inc
fs
xchg
out
push
push
add
rorb
cmc
xor
mov
dec
outsl
sbb
repz
jle
out
in
jmp
or
rorl
movl
or
dec
mov
out
inc
xchg
divl
cmp
cs
repz
scas
cmp
dec
xchg
lret
dec
lea
ret
or
out
addb
sarl
or
aam
inc
lcall
pop
ret
push
mov
or
data16
mov
aad
fwait
mov
lret
cmc
addl
dec
aad
fsts
jnp
out
cmp
in
mov
loope
inc
jnp
push
push
jne
push
pop
outsb
cmp
out
mov
inc
repnz
clc
lret
fidivrl
jl
cmp
int3
int
jl
adc
fstpt
cli
xor
add
cli
neg
out
mov
test
addl
ds
jns
sahf
cmp
mov
aad
xor
mov
iret
pop
stos
mov
push
dec
aas
pop
mov
push
xchg
xchg
cltd
loopne
fsubr
jle
pop
ror
ds
xchg
inc
add
cld
lret
loop
outsl
xchg
mov
ror
repz
sbb
loop
sbb
push
add
fdivp
into
je
add
fimull
pop
fstpt
inc
aas
or
repz
mov
hlt
jle
aad
scas
lcall
ljmp
popa
or
call
stc
scas
lods
or
xor
in
mov
in
xor
jmp
idivb
cwtl
adc
enter
mov
dec
dec
ljmp
repz
stos
cmp
xor
lcall
out
sbb
lcall
push
mov
enter
lods
divl
pop
cmp
movsb
sbb
or
movsl
add
sti
nop
push
pand
sti
and
int3
lahf
aad
ror
sahf
dec
dec
push
add
std
mov
pushf
jge
lret
sbb
ljmp
mov
outsb
mov
ja
test
dec
xlat
call
ror
xor
aad
mov
loop
enter
dec
sub
and
push
dec
sub
mov
sub
in
add
cld
ljmp
je
xchg
adc
in
sti
jbe
in
mov
mov
adc
repz
mov
scas
jp
lock
xor
mov
into
dec
addr16
cli
push
and
mov
add
std
ret
out
xchg
adc
xchg
add
dec
xchg
repz
dec
addr16
jp
and
add
mov
xor
mov
es
add
iret
popf
dec
xor
popf
mov
loope
or
scas
jmp
shrb
testb
outsb
mov
in
fucomp
mov
arpl
out
mov
clc
jecxz
mov
adc
adc
jle
cli
cmc
repz
jne
push
jmp
sub
mov
push
jnp
unpcklps
out
test
cld
lcall
out
cmc
repz
and
addl
jmp
fildll
in
out
cli
dec
scas
negb
jg
js
jl
cmc
decb
icebp
movsb
clc
cmp
mov
pcmpgtd
add
dec
dec
inc
inc
adc
icebp
xchg
arpl
cmp
xchg
ret
add
out
jbe
push
mov
push
fstpt
adc
dec
mov
xchg
mov
dec
fistpll
push
in
add
inc
jge
add
cmpsb
mov
sub
pop
mov
lea
pushf
inc
lock
mov
sub
lret
mov
out
sub
jns
pop
scas
cwtl
jmp
sub
bnd
out
inc
fstl
inc
mov
fimuls
fiadds
sbb
testl
mov
push
pop
jecxz
div
lret
lock
add
cmp
dec
and
xor
fstl
rcrl
repnz
into
call
dec
inc
dec
int
in
ss
or
push
cmc
cld
fmuls
insl
mov
movsb
cmc
sbb
out
lods
imul
or
xchg
fucom
mov
cmp
frstor
out
les
or
pop
mov
decb
bts
fldl
cs
out
adc
shl
arpl
jg
xchg
push
int
pusha
sub
insl
mov
push
pop
or
sysexit
mov
rorb
int
mov
mov
cld
mov
add
jmp
stos
sbb
or
push
sar
dec
sbb
or
add
add
lret
dec
mov
insb
cmp
or
jle
jg
cld
test
push
or
xor
jg
cmp
ds
stos
add
ja
mov
into
roll
pop
cmp
out
inc
dec
mov
jns
xchg
in
aas
mov
jg
add
flds
out
dec
aad
fmuls
sub
push
sub
in
repnz
fnstcw
jecxz
sbb
testl
adc
or
ror
add
and
lret
das
or
xor
sbb
lret
nop
adc
idiv
es
mov
jne
fildl
or
lcall
popa
sbb
stos
shll
mov
mov
int
ja
stos
sbb
mov
in
ds
cli
dec
lods
test
xchg
aas
enter
or
cwtl
inc
jmp
mov
cwtl
leave
test
or
repz
jg
xchg
das
xchg
imul
test
iret
xchg
bound
jl
xlat
std
popf
test
repnz
jbe
fcoml
jbe
cli
int
mov
clc
xchg
dec
das
jnp
and
aad
mov
jne
loope
mov
add
fs
clc
es
xor
pop
add
add
mov
adc
or
or
sub
jg
jb
xlat
xor
fimull
stc
jbe
xchg
or
jo
js
outsb
in
ja
loopne
enter
aad
aad
pop
pop
test
dec
data16
les
jge
push
mov
jg
pop
mov
lock
rcr
add
loop
dec
push
loop
jecxz
inc
and
aas
mov
cmp
js
cmp
aad
test
push
shll
dec
sarl
les
repz
jno
sarb
repz
sub
lret
loop
loope
loopne
add
into
lret
cmp
or
cli
push
fiadds
adc
jecxz
stc
inc
xchg
dec
xchg
adc
mov
mov
arpl
or
inc
dec
loopne
jne
sbb
cmp
mov
jne
mov
mov
inc
mov
xchg
sbbl
out
in
inc
out
jg
out
in
out
in
sub
dec
push
mov
lock
pop
addr16
lahf
dec
xchg
mov
ret
pop
cmp
test
aad
mov
enter
sahf
fsts
and
aad
pop
insb
sub
sub
cmp
xlat
out
inc
sbb
inc
negb
stos
test
shr
adcl
jnp
dec
call
pcmpgtb
xlat
arpl
push
mov
in
jl
mov
sbb
and
sbb
sub
push
inc
add
mov
rdmsr
and
mov
lods
int3
xchg
add
dec
les
xchg
xchg
cmpsb
push
test
out
lods
stos
xor
or
test
add
jmp
in
jmp
mov
push
in
sbb
repz
jl
fsubl
sub
jl
js
ret
mov
testb
xchg
jmp
pop
mov
mov
lret
xorl
xchg
sub
mov
jl
jbe
lret
lcall
lcall
sbb
xor
sub
push
jmp
sar
orl
sti
leave
or
push
push
pop
push
cmp
icebp
cwtl
inc
jmp
jns
mov
push
adc
out
lea
mov
push
aad
insb
pop
lods
stc
jge
ljmp
stos
fisttpl
out
int
mov
sbb
vprotw
repz
jmp
dec
xchg
std
push
jae
divb
inc
mov
stc
xor
call
imul
xor
or
syscall
sbb
es
dec
or
dec
fisttpll
call
int3
out
dec
mov
test
mov
adc
pop
in
jmp
mov
push
push
shl
and
cmp
sbb
mov
mov
xchg
test
std
or
fsub
les
jno
cs
push
and
nop
lods
mov
sti
mov
in
mov
mov
sbb
lcall
and
data16
enter
cs
mov
xchg
das
or
xor
ret
inc
xorl
test
mov
ljmp
lcall
bound
xor
stos
adc
fimull
adc
mov
mov
cmc
mov
add
sbbl
lahf
fnstenv
push
xchg
xchg
aam
and
inc
lock
repnz
dec
gs
aam
inc
push
lret
inc
inc
fmull
arpl
ret
into
inc
cmp
popa
es
popf
add
add
fcoms
add
dec
inc
or
cli
popf
out
rcr
mov
sub
xchg
scas
fidivs
push
int3
cli
call
fisubs
filds
fsubp
push
xor
fildl
bnd
in
fmul
mov
stos
pushf
pop
dec
and
shlb
lods
sbb
aad
test
enter
mov
push
sti
sbb
imul
rol
gs
iret
out
insb
push
cmpsb
and
fcomi
mov
sub
jmp
imul
xchg
in
jne
inc
mov
rorl
mov
lea
mov
cmp
and
lods
adc
in
and
cmp
imul
pmullw
and
lret
roll
cs
ss
mov
test
pop
or
test
inc
jmp
jecxz
or
decl
gs
mov
xchg
mov
mov
call
fistps
or
popa
es
pop
sub
or
inc
icebp
push
sub
cli
cmp
dec
fimuls
rep
and
jle
stc
mov
push
ds
movsb
dec
js
add
jl
xor
dec
js
or
je
arpl
jle
xchg
dec
pop
cltd
jg
sub
mov
or
cltd
in
dec
aad
dec
aad
mov
or
mov
push
int3
mov
dec
in
nop
or
adcl
mov
ds
repnz
lods
fwait
in
lea
lahf
dec
pop
push
xchg
enter
dec
xor
jp
jb
dec
cs
rcrb
std
xlat
nop
xchg
or
mov
mov
adc
or
jmp
xor
repnz
ucomiss
in
push
std
mov
jg
dec
cmp
rcrb
mov
repz
sti
and
sbb
add
bnd
push
pop
ljmp
mov
push
inc
iret
adc
mov
les
mov
mov
adc
cmp
dec
sbb
adc
out
cmp
cmp
lahf
mov
dec
cs
aad
repnz
lret
mov
pop
or
mov
scas
mov
add
stos
shlb
out
mov
lret
outsl
daa
leave
fmuls
rcl
fpatan
dec
jg
sbb
xchg
push
jle
push
jnp
push
xchg
or
jmp
pop
dec
add
subl
in
into
inc
jmp
int3
lods
movzbl
es
ss
or
inc
in
into
bnd
push
test
les
out
lea
jge
or
lods
inc
notl
pop
fiadds
jno
mov
rcrb
mov
and
cmc
insl
sub
add
mov
lret
mov
mov
out
cmpsl
mov
ljmp
mov
test
ret
sub
mov
inc
sub
popf
mov
int
xor
mov
aaa
or
push
or
dec
adc
call
mov
adc
xchg
jle
push
cmp
lret
ja
dec
xchg
call
dec
cli
adc
lock
inc
mov
mov
fld
loope
dec
gs
std
ja
dec
cmp
xor
fs
pop
cmp
inc
jl
adc
adc
dec
mov
fbstp
dec
call
dec
sub
sbb
adc
add
mov
js
pop
orb
test
rcll
out
into
outsb
js
xchg
sbb
fnstenv
xchg
aam
cmp
sarb
xor
loopne
sahf
or
inc
out
xor
adc
xor
repz
gs
jle
xchg
into
cld
ljmp
dec
jno
lea
mov
fadd
fsqrt
les
mov
ja
cmp
cmpsb
cmp
pop
out
test
or
adc
dec
inc
fucomp
cwtl
jmp
popa
cmpsb
push
cld
xor
lcall
and
addr16
std
rolb
jp
sbb
pusha
lret
outsl
or
scas
aam
xor
dec
jmp
cmp
pushf
fbld
mov
push
test
repz
insl
testl
lea
jle
movl
jle
out
jne
mov
mov
out
movsb
sub
call
cli
loop
test
mov
insl
sarl
in
xlat
mov
loop
leave
daa
out
or
scas
cmp
lods
in
jbe
scas
test
gs
dec
lret
stc
jnp
jno
lret
sbb
pop
sti
and
mov
xchg
in
mov
mov
push
scas
scas
lret
jecxz
jns
and
sti
cmp
jae
pop
inc
dec
cmp
out
push
fucom
mov
nop
add
cltd
fs
fimull
xchg
mov
notb
cmp
lds
lret
jg
fwait
push
out
lahf
out
mov
and
aad
cld
dec
pop
enter
fnstcw
adc
ja
push
and
mov
pusha
in
mov
outsl
push
jns
and
inc
xor
adc
lock
test
fldenv
sub
cmp
shll
add
hlt
jg
into
lret
push
ret
jg
sub
cmp
daa
mov
aad
ret
ja
jns
sub
rorb
jbe
xchg
fdivrs
out
aad
xor
addr16
in
xlat
psadbw
push
fldcw
sahf
push
fimull
test
in
stos
push
nop
faddl
mov
mov
in
jl
jg
scas
dec
lods
sbb
xchg
fucom
lea
pop
dec
inc
je
addr16
cmp
subb
in
cmp
in
or
dec
scas
xor
outsl
dec
inc
ds
cmp
fmull
push
fcmovnb
mov
dec
inc
dec
jecxz
aad
add
aas
and
addr16
cwtl
inc
clc
xchg
out
in
sbb
in
xor
nop
aad
add
or
mov
cmp
adc
pop
jecxz
cmp
aad
mov
dec
clc
clc
push
sbb
cmp
in
aas
sub
xlat
test
out
jge
popa
lret
cmp
add
dec
sub
aad
addr16
or
aad
dec
jecxz
aas
sub
add
fs
xlat
not
pop
pop
mov
call
jns
xlat
shrl
cmp
add
cmp
aad
icebp
and
dec
rep
dec
flds
repz
aas
jmp
out
iret
jl
jecxz
in
rcrl
mov
xchg
jmp
cmp
or
and
adc
rclb
xor
mov
mov
xchg
cmp
js
push
in
in
idivl
sub
in
mov
mov
jg
jle
outsb
cs
ficoms
aas
in
mov
into
and
pop
xchg
pop
daa
pop
push
add
mov
push
mov
insb
cli
pop
or
push
inc
dec
sub
cmpsl
rclb
pushf
mov
lret
push
into
cmp
dec
aad
pop
dec
dec
repnz
testl
cli
pop
into
movl
negb
addr16
mov
sub
dec
int
leave
into
repnz
mov
push
jns
dec
push
fucomp
shll
sbb
fdivrl
out
pop
pop
lret
mov
neg
in
jp
pusha
xor
cmpsl
insl
mov
add
xor
aad
mov
gs
in
lea
stos
push
sbb
lret
ss
ret
imul
data16
nop
adc
loopne
fs
leave
es
pinsrw
adc
adc
fdivs
push
in
and
out
mov
repnz
sub
cmp
mov
int
jo
in
and
push
and
sub
mov
inc
inc
shll
leave
sub
jnp
inc
aaa
and
push
inc
icebp
rcrl
xor
inc
or
repnz
cld
mov
pop
aad
pop
icebp
xchg
mov
insb
mov
cld
and
fistpll
push
mov
cmpsb
xor
push
or
sub
cli
ljmp
jge
test
dec
movsl
ror
inc
idiv
mov
addr16
insl
inc
enter
cld
pop
loop
psrlw
or
roll
inc
jns
into
pushf
mov
sub
scas
mov
call
sbb
push
push
shll
add
arpl
pop
test
lret
and
outsl
inc
fwait
repnz
jno
inc
repz
inc
out
sbb
out
dec
pop
scas
lcall
jl
and
lret
out
sub
js
mov
push
pop
rcl
lods
pop
mov
stos
add
inc
push
shll
fucom
lret
call
xor
mov
addl
pop
push
mov
sti
fstpl
mov
mov
in
lret
jmp
lahf
into
aad
cmpsb
mull
and
out
insl
inc
loop
sbb
enter
jecxz
jge
xlat
insb
stos
mov
xlat
adc
mov
push
fwait
loop
cmp
ffree
idivb
sub
imul
mov
dec
mov
ja
mov
xorb
dec
xlat
sbb
cmp
mov
repz
cvtpi2ps
cmp
rcrb
pop
mov
add
iret
insl
cwtl
enter
repnz
cmp
lods
or
movsb
inc
fmul
mov
bound
gs
add
pop
scas
mov
sbb
outsl
stc
flds
jg
stos
jmp
stos
jb
fistpll
mov
cmpb
sub
mov
scas
lret
lahf
jp
pop
dec
jmp
and
out
jne
jnp,pt
push
cmp
add
mov
fimuls
mov
dec
push
rolb
jg
jecxz
push
fs
mov
push
pop
out
stos
cld
and
out
std
in
nopl
push
add
jle
rcr
jmp
xlat
pop
jb,pn
jecxz
cld
jle
aad
scas
lcall
inc
in
xchg
xor
add
xchg
mov
neg
sbb
stc
sbb
xchg
stos
push
lock
add
loopne
in
insb
mov
lret
pop
pusha
or
repnz
in
test
cli
sub
inc
add
repz
cmpsl
dec
mov
outsl
sub
sub
jo
lret
push
aad
ljmp
inc
or
inc
cmpb
imul
push
cmc
jmp
or
sbb
jl
pushw
sarl
or
or
in
std
cwtl
jmp
popa
es
inc
xchg
sub
xor
mov
xor
xlat
jne
std
cwtl
jmp
popa
es
sbb
in
sti
stos
repnz
pop
test
sahf
xor
in
jle
jecxz
jmp
sahf
dec
dec
push
clc
inc
imul
test
mov
loop
jle
adc
adc
or
xchg
clc
dec
arpl
dec
cli
push
popl
testb
cmp
aam
jmp
or
rcll
inc
jl
xchg
das
test
dec
add
movsb
cmc
arpl
dec
aad
mov
mov
xchg
add
fimuls
mov
jl
push
fnstcw
push
mov
push
sub
sub
stos
stc
and
in
jp,pt
and
jle
push
or
add
gs
stc
jb
in
add
adc
add
jg
xor
cmp
jl
leave
test
loopne
mov
repz
or
xchg
add
loop
clc
lret
mov
cmpsl
cmpsb
mov
faddp
pop
push
in
div
jne
add
loope
pushf
dec
jg
xor
insb
xchg
mov
push
test
adc
fcomi
sub
jae
mov
and
and
pop
sub
out
in
gs
ficoms
lods
sbb
ret
loope
push
sub
jmp
pop
inc
das
mov
jnp
out
pmaddwd
adcb
dec
lret
cwtl
fwait
jnp
push
mov
arpl
inc
or
jns
lcall
lods
sub
cmpsb
lock
pop
int3
pusha
les
cmp
daa
and
push
stos
in
cmp
insl
or
mov
ja
mov
and
jp
push
subl
out
jmp
sub
cmp
addr16
push
cmpsb
inc
push
push
cmpsl
enter
adc
push
cmp
ficoml
xchg
fnstcw
in
movsl
push
fsqrt
cmpb
pop
adc
sub
insl
jmp
pmullw
in
or
mov
xchg
sahf
mov
xchg
pop
xor
pop
mov
and
mov
inc
in
ljmp
shll
sbb
jno
dec
cmc
in
mov
cld
dec
icebp
aad
out
mov
out
icebp
add
add
mov
ja
mov
bound
lcall
icebp
ljmp
and
or
fisubrl
mov
mov
call
leave
xchg
incb
dec
cmp
icebp
mov
mov
jge
pop
addr16
xchg
mov
test
loop
loope
inc
or
aad
cmp
inc
jl
inc
fsubp
xor
out
pop
pop
arpl
mov
loope
push
stc
push
mov
ljmp
shrl
shlb
xchg
cli
dec
pop
in
in
out
or
mov
xchg
aam
add
adc
and
in
incl
xchg
rol
shrb
shrb
ja
pminsw
cmp
push
mov
out
push
aam
fs
testb
jns
xchg
repnz
cs
or
orb
in
call
lret
aad
cs
lahf
dec
lea
stos
ds
in
outsl
js
roll
pop
clc
mov
inc
jnp
xor
cmc
lods
xlat
adc
pushf
add
stc
xor
jmp
rorb
aad
push
sti
in
iret
sub
out
cmp
push
arpl
fiadds
push
inc
mov
cmp
push
inc
sbb
enter
cmp
jmp
loop
cli
xchg
jle
mov
inc
fnsave
jecxz
aad
movl
clc
aas
push
loop
xor
out
mov
stos
push
xchg
test
push
in
dec
xchg
cs
stos
divb
or
xchg
das
inc
xor
inc
test
xchg
fst
inc
mov
int
fnsave
push
sbb
incb
inc
lret
sarb
adc
testb
popl
cmp
mov
mov
add
mov
mov
jb
cld
and
lahf
lods
or
inc
mov
call
inc
or
popa
mov
xor
mov
mov
call
inc
mov
pop
xchg
adc
stc
xchg
popa
lods
loopne
fdivl
leave
push
rolb
add
out
mov
bound
fldcw
ja
or
mov
cmp
dec
enter
xor
xchg
js
pop
push
fucom
and
dec
push
xchg
ror
jnp
fdivp
lret
loope
out
scas
rcll
fmulp
sub
cmp
shlb
mov
loopne
push
adc
pop
mov
jbe
aas
ja
push
pop
ljmp
jo
xor
add
in
in
pop
iret
test
sub
incb
add
mov
fcmovnbe
xor
and
sub
sti
int
sub
sub
inc
pushf
mov
aam
shrl
sbb
or
das
ds
outsl
pop
cmp
ja
add
je
add
out
xor
pop
xchg
nop
mov
cmp
cmp
or
lret
xchg
addl
std
or
in
add
pop
dec
pop
mov
or
aad
adc
mov
inc
imul
mov
fs
mov
aad
pop
pop
lret
imul
jo
or
leave
mov
rcll
icebp
fimuls
and
lret
sub
jp
push
dec
repz
mov
in
push
mov
pop
push
fucomp
and
cmp
out
and
and
push
popf
push
lret
jb
or
insb
aam
mov
sbb
fldcw
xchg
stos
fdivs
or
pop
or
movsl
aad
or
or
cwtl
sbbb
out
movl
mov
mov
shrb
add
pop
jp
rorl
fcoms
movswl
mov
cmp
sbb
xchg
movswl
lock
gs
popa
push
stos
jns
jo
push
fwait
push
dec
mov
or
xchg
in
add
mov
push
jno
aad
repz
stos
in
and
enter
mov
in
dec
fwait
cs
in
cli
mov
movhps
sub
aad
out
cmp
cmpb
imulb
push
addl
dec
stos
or
xor
out
jmp
out
pop
cs
stos
jmp
sti
int
mov
sbb
lahf
sub
test
mov
out
in
sbb
out
lea
ds
aad
aaa
jecxz
std
nopl
lods
or
fsubrp
movsb
popf
nop
neg
cmp
dec
add
mov
jno
jnp
outsl
in
mov
loopne
jle
rclb
pop
sbb
adc
push
dec
sub
mov
int
xchg
push
inc
jp
xor
imul
mov
dec
dec
clc
jg
or
fstl
movq
lock
xlat
int
push
mov
cmp
xor
or
lods
xor
dec
sbb
or
fisttps
scas
aad
rorb
push
iret
xorl
mov
xor
lcall
mov
dec
shll
mov
ja
cmp
icebp
jl
adc
inc
std
mov
jo
push
mov
dec
fdivs
xor
or
jg
mov
das
jae
repz
adc
jg
ficompl
in
out
add
rcll
mov
push
xor
lods
pop
js
cwtl
cmpsb
ds
xchg
push
nop
imul
fisttpll
inc
xchg
cmpsl
pop
repz
adc
sahf
cs
jmp
das
negb
outsl
pusha
shrb
int3
mov
sub
aam
sub
jg
adc
in
sbb
push
fwait
cmp
xor
jle
xchg
cmp
loope
out
or
nop
not
or
mov
sbb
aad
or
ds
jae
sbb
outsl
aas
lcall
ret
cmp
dec
sti
sub
and
jo
push
ds
dec
xchg
xor
jb
or
mov
test
jmp
inc
ficoml
imul
sbb
xchg
inc
mov
repnz
stos
push
in
in
imull
es
jnp
inc
sub
push
stc
xchg
push
add
nop
inc
or
inc
mov
cmp
aas
in
and
cs
stos
cli
filds
mov
lods
shrb
sub
cmp
aas
sub
js
add
popf
mov
cmp
push
cmp
adc
mov
xchg
inc
shlb
dec
push
push
add
lds
sbb
aad
xchg
dec
vmwrite
in
sub
sbb
ljmp
mov
jmp
in
push
and
xchg
stos
out
add
lods
sbb
adc
dec
stos
push
mull
xchg
xchg
xlat
cmp
sub
aad
mov
mov
sbb
out
pop
in
in
sub
xlat
mov
dec
lea
lahf
xor
jecxz
aas
adc
sbb
adc
mov
lods
out
sbb
xchg
jecxz
xchg
loopne
cmovo
in
incb
jle
dec
and
mov
in
mov
into
jl
int
lret
jl
bound
aam
stos
xchg
adc
cmpsb
mov
and
jge
adc
gs
sbb
insb
loop
mov
fistps
jle
insb
sub
xlat
hlt
loope
imulb
jnp
or
xlat
stc
xchg
scas
mov
test
pop
aam
and
insl
push
xchg
addr16
push
hlt
mov
cmp
in
mov
jne
mov
xlat
pop
xchg
movsl
jb
dec
loope
pusha
jge
icebp
pop
inc
mov
fmuls
inc
out
call
aad
push
dec
outsl
mov
xor
xlat
or
cmp
and
andl
bound
mov
call
gs
mov
mov
pop
out
out
arpl
mov
in
lods
cltd
in
gs
inc
sub
jg
xchg
inc
cs
aaa
mov
pop
inc
arpl
ret
je
in
mov
jg
out
mov
je
jnp
jmp
push
inc
sarb
or
iret
mov
jno
outsb
in
scas
in
jmp
icebp
adc
or
gs
fadds
fstp
mov
scas
incl
adc
sub
test
mov
icebp
sarl
popf
jle
mov
fcmovnbe
or
repnz
sub
xchg
int3
int
adc
cmp
gs
sbb
test
push
fs
jne
mov
cmp
leave
mov
or
mov
les
mov
pop
lret
xlat
test
adc
ljmp
xor
or
paddusw
cmp
es
cmp
jge
popa
rclb
bnd
nop
in
filds
mov
aad
test
rcl
ds
fstpt
sti
push
xchg
xchg
or
or
and
xor
dec
cmp
clc
bswap
mov
mov
cmpsl
dec
mov
loopne
lods
inc
mov
inc
popf
out
data16
sbb
cltd
cmp
mov
test
in
mov
ja
sub
cld
test
lods
cmp
pop
test
shrb
mov
out
aad
scas
mov
push
cltd
xlat
or
lahf
and
adc
int
imul
cmpsl
pop
fdivp
inc
iret
inc
not
imul
out
xlat
lods
mov
dec
mov
jmp
and
push
dec
push
cmp
cmp
jb
and
lods
fisttpll
xchg
cmc
out
dec
lods
fadd
in
pop
cmp
fsubrs
sub
repz
jge
add
xchg
mov
nop
ljmp
fstpt
stos
fcomps
psadbw
popa
shrl
popa
push
xchg
movsb
inc
fs
fisttps
or
mov
adc
push
rclb
aas
pop
stos
int3
dec
outsl
push
xchg
cltd
pop
jge
mov
or
clc
mov
stc
mov
aad
pop
mov
sbb
sub
repnz
jns
jns
or
mov
insl
sbbb
subl
dec
pop
and
stos
jmp
or
and
lret
lods
stos
mov
lods
inc
mov
fdiv
xchg
sub
push
mov
jg
or
push
lea
lret
icebp
scas
mov
or
sbb
fcompl
addb
sbbb
in
data16
push
rorb
dec
xchg
sub
subl
arpl
xchg
mov
fisttpll
pop
lods
scas
add
inc
push
int
nop
push
and
pop
sub
jl
cltd
xorb
push
inc
enter
and
xlat
sub
addr16
out
cmpsb
mov
mov
repnz
inc
adc
or
aad
xchg
lahf
lret
inc
lahf
cmp
rcl
mov
movsl
xor
mov
imul
mov
stos
fisubl
mov
out
cmp
and
fsubs
dec
dec
aad
mov
popf
xchg
inc
push
mov
mov
and
pop
das
or
fstl
dec
add
outsl
dec
pop
shrb
sbb
jl
mov
out
mov
jge
push
pop
cli
out
mov
xor
fucomip
or
dec
mov
mov
pop
or
cmp
sub
cltd
in
jecxz
cmp
subb
xor
lahf
outsl
gs
xor
nop
cmp
stos
jmp
jecxz
std
in
into
jecxz
mov
inc
xchg
xor
xchg
cmpsb
dec
xchg
pop
adc
adc
mov
mov
lahf
sbb
test
push
xlat
out
sub
in
cmp
aad
sti
dec
loop
xchg
aad
push
mov
mov
mull
into
xor
fcmovnb
mov
cmp
add
cli
jl
aam
jecxz
mov
pop
test
popa
jmp
repz
mov
mov
leave
shrb
movsl
sbb
push
enter
pop
sub
push
mov
mov
cwtl
mov
out
cmp
insb
cmp
adc
in
or
lods
ja
mov
fmulp
push
dec
adc
repnz
loopne
mov
mov
push
repz
loopne
repnz
xor
cmp
ljmp
pop
inc
test
inc
jecxz
sbb
push
inc
repnz
fistpl
rolb
cmpl
xor
xchg
add
in
test
fst
cmpsb
sbb
xorb
jg
jae
enter
popa
fisttpll
add
bswap
add
js
jb
rcl
std
stc
in
scas
sbbb
or
dec
xchg
into
rdpmc
shl
lcall
dec
mov
pop
pop
pop
paddsw
repnz
xlat
dec
mov
jne
mov
lea
mov
and
hlt
or
icebp
pop
movsl
repz
aas
cld
dec
bnd
cli
xchg
into
fisubs
dec
popf
xchg
daa
jns
mov
xlat
pop
sbb
sbb
xor
loope
pushf
repz
pop
imul
sub
push
imul
scas
or
inc
push
push
loop
cld
in
fsubr
arpl
imul
mov
pop
call
push
xchg
fcmovb
addr16
adc
scas
xchg
test
pop
ljmp
mov
mov
lea
gs
repz
mov
je
scas
aad
orl
and
dec
nop
lods
pop
cmp
mov
push
int3
int
ds
sub
inc
jae
xchg
cmp
xlat
pop
push
out
xor
mov
push
orb
adc
pop
jb,pn
shl
cli
lods
cltd
loope
gs
dec
popa
enter
xchg
push
mov
clc
mov
or
outsl
leave
mov
push
adc
pop
adc
insb
cltd
into
sarl
dec
mov
cmpsl
es
xor
dec
daa
inc
pop
mov
dec
sub
xchg
jecxz
mov
cltd
insb
mov
cld
fiadds
mov
inc
shl
es
cmp
lea
mov
xchg
scas
insb
xlat
mov
test
cs
mov
sbb
xor
fisubl
fnsave
mov
fcmovne
pop
lret
xlat
cmpsb
test
xchg
adc
roll
out
ljmp
pushl
adc
popa
lahf
mov
dec
push
cmp
mov
cmp
imul
and
leave
xlat
subl
or
dec
cmpsb
scas
enter
outsl
js
cld
jp
cld
and
pop
and
rcrb
add
lods
or
ds
xchg
sti
mov
add
repz
xchg
bsr
and
push
mov
dec
sti
out
fs
inc
mov
or
fidivs
push
outsl
enter
inc
in
push
cli
mov
int3
int3
push
repz
nop
add
push
mov
jne
lret
stc
or
jmp
or
out
pop
cs
sbb
mov
int3
inc
js
cmc
fwait
cmp
push
dec
in
jecxz
lods
jo
into
lret
add
sbb
loop
lar
or
leave
stos
xor
call
push
sub
jne
and
jo
jmp
loopne
sub
sub
xor
sub
pusha
push
imull
aam
shll
adc
enter
jbe
add
xchg
push
add
out
dec
sahf
cld
dec
xchg
add
mov
outsl
cmp
push
test
xchg
dec
dec
rcl
nop
cmp
jne
mov
mov
jecxz
dec
jle
xchg
fimuls
negl
sti
jne
out
cmp
jne
mov
imul
mov
jmp
mov
fistpll
or
cmp
repz
mov
pop
jno
and
sub
into
cmpsb
cwtl
ds
stc
or
enter
mov
xorb
int3
mov
inc
repz
out
mov
in
add
mov
icebp
dec
lret
mov
das
mov
out
lods
mov
dec
jp
repnz
sbb
fwait
or
fiaddl
xor
adc
call
adc
inc
push
pop
movsl
mul
pusha
shlb
in
aad
notb
dec
inc
pop
sbb
xor
xlat
test
loopne
cmp
out
ljmp
push
cli
ljmp
leave
or
mov
or
xchg
std
xor
pop
ja
jo
xchg
dec
cmpsb
dec
ficoms
or
and
jp
daa
cmp
xchg
movsb
and
adc
out
pop
mov
scas
stc
or
es
inc
push
sbb
xchg
mov
pop
adc
jmp
fwait
or
leave
mov
add
lods
or
mov
mov
add
jge
dec
add
fs
dec
out
loopne
sub
or
into
sbb
xor
lock
xlat
cmp
movsl
loopne
jns
lea
addr16
mov
testb
stos
adc
pop
or
adc
sub
int
fmull
and
int
cld
or
movsl
sti
lock
pushl
dec
test
cmc
hlt
movsl
notb
or
aad
out
incb
loopne
fsub
loopne
or
mov
jp
pop
in
sbb
xor
loopne
pop
dec
pusha
out
xor
or
dec
add
cld
sahf
enter
or
repz
sub
jmp
fidivrl
xchg
xor
loopne
push
xor
push
sets
fnstsw
fcmovnb
mov
cli
fadd
add
repz
xor
jecxz
out
push
pcmpeqb
fnstsw
pop
mov
dec
xor
xor
cmp
xlat
push
jg
popf
fildll
shll
mov
fnsave
mov
dec
adc
mov
scas
jno
and
dec
pop
adc
mov
aam
lods
adc
ret
dec
adc
adc
dec
mov
jnp
loopne
insb
inc
xchg
loope
jo
jno
jno
xchg
rolb
fs
add
push
divb
lret
mov
mov
jecxz
faddl
mov
xor
fisubrs
xor
add
adc
mov
test
into
clc
jo
fadds
sub
dec
aad
push
inc
xchg
xor
leave
pop
aam
test
call
and
nop
jmp
arpl
xchg
xlat
mov
dec
cli
jb
lret
mov
dec
cmpsl
into
dec
dec
pop
adcb
xlat
mov
inc
neg
test
enter
or
push
xchg
add
les
shll
cmp
popa
sbb
aad
or
xchg
xor
mov
lock
xlat
js
sub
lods
stos
ret
imul
mov
mov
rorl
pop
xchg
enter
loopne
and
lds
mov
jb
mov
jne
xchg
pop
mov
sub
lret
mov
loopne
jns
mov
or
mov
les
pushl
xor
loope
push
notl
testb
loop
mov
jns
pusha
dec
dec
repz
mov
push
inc
icebp
pop
xchg
pushf
jo
es
push
add
cs
or
push
sub
popa
pop
inc
sub
inc
pop
xlat
aam
lods
mov
and
add
pop
jp
fmull
int3
xchg
dec
in
aas
mov
mov
jns
icebp
call
scas
not
jne
sbbb
dec
add
inc
pop
daa
in
or
dec
cltd
testl
jmp
inc
jb
loop
test
xchg
sbb
cltd
xrelease
in
mov
or
add
movl
and
mov
pop
into
adcl
aam
inc
daa
dec
jg
add
dec
or
test
fldl2t
mov
xchg
add
and
inc
mov
sbb
lret
fisubrs
or
scas
cli
jg
sbb
inc
push
shll
into
fs
mov
dec
dec
jno
xchg
rcll
cltd
test
and
jecxz
adc
aam
aam
inc
or
jg
inc
inc
subl
enter
mov
jns
je
xor
mov
push
mov
ja
fcmovnu
in
sbb
pushf
repz
inc
adc
subl
test
cld
das
int3
add
aad
lods
sti
adc
cmp
jno
outsl
arpl
mov
aaa
leave
lahf
es
push
clc
mov
mov
push
push
fists
psraw
femms
mov
or
out
loop,pt
xchg
xchg
loope
jmp
lret
dec
sar
repz
in
jl
push
sub
mov
outsb
in
add
xchg
lcall
test
in
loope
aad
sub
pop
mov
adc
fildll
je
popf
fcoml
cmp
mov
and
aam
in
fstl
sbbl
arpl
adc
sahf
shlb
pop
jmp
int
repnz
fwait
sbb
push
out
jmp
dec
cmp
pop
push
sbb
xor
mov
push
loopne
xchg
jnp
inc
and
or
xor
pop
fs
mov
cld
nop
or
and
cmp
aad
jmp
jge
inc
out
cmpsl
or
push
cld
mov
std
repz
fiadds
ja
dec
enter
dec
repz
sbb
dec
fiadds
movups
mov
rolb
xchg
ror
arpl
dec
push
jns
jne
xchg
pop
jecxz
in
mov
loopne
cld
imul
idiv
jne
cli
pop
jmp
adc
ret
andb
jns,pt
push
mov
stc
dec
cmp
push
mov
mov
icebp
adc
out
ror
in
inc
push
jmp
popf
fnstsw
fwait
or
lret
cmpsl
mov
aam
loope
aas
add
fldcw
pop
dec
xor
dec
jnp
xchg
push
aaa
gs
daa
sti
jl
xchg
cld
xchg
ja
les
loop
fidivl
mov
rcr
in
and
lock
clc
shl
outsl
mov
mov
push
and
sbb
mov
pop
subl
fisubs
ret
cmp
mov
fldcw
mov
and
out
add
sti
push
ljmp
je
jns
cmp
jl
sbb
mov
lret
loop
mov
int3
dec
mov
or
dec
adc
stc
pushf
out
dec
test
add
pop
scas
mov
out
inc
mov
stc
ret
sbb
xchg
aas
lods
fdivrl
add
dec
jge
fbld
ds
lcall
fsts
ret
mov
aad
xchg
sbb
cmp
sub
call
movb
stos
jbe
clc
fadd
dec
add
ljmp
xchg
dec
aas
rcrl
fldl
negb
es
mov
loopw
mov
push
cmpb
fldl
negb
addr16
imul
cmc
dec
cmpsb
xor
pop
inc
pop
and
cmp
inc
xchg
scas
rorl
pop
fsubp
jle
mov
pop
add
pusha
imul
mov
sbb
xchg
xor
rolb
jle
and
mov
lret
mov
std
xor
or
enter
jb
in
pop
jle
sbb
jg
mov
xchg
fisttps
loope
dec
loope
scas
lock
cld
xor
xor
testb
adc
lock
xchg
mov
fisubrs
xor
jp
xor
mov
inc
cmpsl
fisttpll
xchg
push
dec
mov
mov
fisubs
or
xchg
lret
pop
in
or
sub
dec
roll
dec
lods
mov
int
inc
in
stos
jl
xchg
fstps
or
dec
adc
xchg
dec
outsl
pop
jb
xchg
or
fisttpll
jl
and
outsl
pop
mov
cmp
daa
ljmp
insl
dec
dec
push
hlt
mov
test
sub
mov
mov
or
hlt
jle
xchg
push
dec
cli
push
dec
add
mov
xchg
jnp
mov
or
mov
gs
cmpsl
or
xor
fmul
mov
mov
or
mov
inc
mov
cmp
lret
rorb
cmp
out
test
bound
negb
xor
mov
into
lret
or
sbb
mov
fmuls
dec
dec
out
loope
rcrl
xchg
cmp
fcmovb
ds
adc
mov
aad
cmpsb
lret
in
out
cli
mov
push
push
push
loop
cs
mov
and
mov
push
or
or
daa
mov
popa
push
sti
repz
jb
inc
shrl
sub
mov
filds
outsb
dec
test
and
xlat
pop
pushf
out
sub
mov
std
test
add
dec
test
mov
out
std
dec
push
push
cmp
loop
lcall
mov
pop
mov
stos
or
jo
fcmovnbe
lds
or
stc
xchg
out
jg
and
adc
loope
dec
movlps
xchg
or
enter
addr16
dec
rcrb
add
inc
push
in
ret
clc
fcoms
std
xchg
xor
inc
nop
or
repz
dec
mov
aad
insb
dec
mov
sub
mov
popa
sti
pop
jae
mov
out
cmp
lea
pop
cmp
cmp
jle
shll
or
data16
jle
in
scas
jo
dec
push
icebp
aam
add
ds
fwait
mul
mov
cmp
jmp
push
les
push
cmp
jle
movsl
ja
adc
icebp
divb
push
rclb
cmp
mov
stc
enter
loope
mov
dec
inc
adc
cwtl
xchg
int3
xlat
add
aaa
and
dec
test
mov
lret
dec
sarl
xchg
mov
jno
add
mov
mov
mov
mov
aad
mov
push
jg
adc
mov
pusha
jns
lock
add
cld
repnz
aad
mov
sbb
pop
mov
out
aam
scas
testb
push
mov
mov
lds
dec
pop
divb
sbb
sub
xor
dec
xchg
out
pop
out
into
sub
push
lret
add
or
pusha
inc
jne
push
mov
jb
dec
loope
jle
xchg
mov
insl
sub
push
outsb
sub
pushf
test
pushf
jge
and
mov
imul
inc
xchg
hlt
mov
or
sbb
shlb
mov
and
lcall
test
cmpsl
xor
movsl
int
pop
fwait
shlb
sahf
sbb
inc
sti
sbb
out
ror
sub
pop
and
add
cmpb
decb
out
push
enter
lret
dec
shlb
add
mov
in
mov
push
or
push
inc
add
mov
sub
cmc
call
scas
push
jmp
les
pushf
or
repz
scas
sub
int3
jae
xchg
scas
push
aas
dec
addr16
scas
inc
aam
xor
fildl
push
mov
enter
or
pmaxsw
test
jnp
xchg
inc
rclb
jl
sbb
lods
pop
sbb
xchg
mov
aam
nop
mov
dec
out
and
out
loop
test
mov
jo
in
lret
mov
dec
cmp
cmp
in
or
mov
jmp
sub
pop
scas
xlat
test
loopne
jno
stos
sti
push
dec
sti
xor
std
std
ret
add
mov
or
and
scas
arpl
dec
and
push
mov
imul
out
cmp
mov
addr16
add
xor
mov
or
test
enter
and
mov
loope
scas
inc
stc
jne
mov
or
cltd
mov
cmc
sysret
or
push
xchg
jg
push
test
in
dec
mov
cmp
mov
adc
dec
xor
lret
out
mov
mov
aad
push
cld
sbb
jne
dec
cmp
mov
xchg
push
hlt
outsb
jle
jns
fcmovnbe
or
lret
mul
aam
stos
std
out
notb
loope
divl
jle
cmpsl
or
fistpl
popf
add
stos
jo
cli
aas
ror
out
lahf
in
or
cmc
push
les
mov
push
lcall
out
fdivr
sahf
cltd
ret
push
fldenv
iret
mov
rcrb
cmpsl
push
fld
cmc
push
mul
push
mov
sbb
in
and
rcl
mov
mov
jb,pt
mov
xor
scas
or
xchg
or
push
mov
push
sub
movl
pop
jnp
cmp
mov
inc
and
xchg
xchg
push
dec
lea
loopne
jecxz
sub
je
fcmovnb
mov
hlt
test
add
and
imul
jnp
imul
mov
xor
jecxz
push
addr16
jns
sti
gs
div
or
push
cltd
mov
int3
imulb
mov
test
sti
push
pop
decb
cli
mov
aad
test
dec
jg
mov
adcl
jl
pusha
out
sbb
push
add
jnp
mov
outsl
or
mov
mov
jmp
mov
ds
push
inc
ljmp
mov
sahf
repz
cmpsl
inc
call
aad
pop
and
out
xchg
iret
dec
out
jo
sbb
jle
popf
dec
or
decb
jne
jecxz
fwait
lods
test
scas
mov
test
sub
lds
fadd
stc
push
lret
scas
clc
dec
jne
out
aad
push
out
in
into
sti
cltd
dec
outsb
fistpll
out
fs
fcmovnu
lock
push
mov
orl
lret
mov
out
icebp
pop
mov
lea
pop
stc
out
cmp
mov
dec
nop
popa
sub
test
sbb
mov
sbbl
mov
jecxz
lea
iret
inc
mov
sete
jecxz
stos
out
mov
test
cld
push
add
mov
push
adc
jmp
xchg
std
add
mov
mov
push
stos
fdivrp
pop
lahf
int
fnstsw
or
push
inc
and
stos
aam
mov
iret
mov
iret
jg
in
mov
lea
push
pop
xor
scas
cli
xchg
popf
mov
jnp
pop
mov
xor
jnp
lods
adc
sub
jns
cwtl
adc
add
xor
lea
jnp
imul
dec
aad
xor
std
sahf
jne
mov
scas
jnp
int3
test
sbb
les
es
push
or
push
call
xlat
fsubrs
dec
cli
mov
stos
into
ret
mov
aas
jecxz
sbb
pop
pop
rorb
mov
cwtl
cmp
dec
xlat
js
push
popa
pop
cmc
sub
out
fucomp
dec
jne
sti
cmc
fstl
pop
sti
test
insb
dec
aad
pop
or
repnz
jg
cmp
loope
push
test
repz
pop
pop
dec
jp
shll
sarl
pop
nop
xchg
iret
inc
std
lahf
das
pusha
pop
int3
outsl
in
sub
xchg
out
int3
cmp
stos
fimull
pop
jb
push
add
jg
ds
stc
mov
js
adc
rolb
jne
sarl
push
fildl
cmpb
add
dec
and
mov
sub
insl
dec
inc
push
stos
lahf
out
cwtl
mov
cmp
pop
and
cmc
mov
mov
cmpl
stos
push
xchg
mov
pop
cmp
jno
and
mov
lahf
mov
dec
movsl
sub
dec
adc
int
stos
into
out
stos
adc
jp
cmp
cmp
iret
mov
inc
test
dec
enter
jp
paddq
add
xchg
loopne
xchg
fildll
mov
sar
lcall
loopne
add
pop
mov
loop
push
loope
hlt
into
mov
push
or
push
jnp
or
je
sbb
call
add
fistps
out
or
jg
std
mov
pusha
sti
sbb
loop
adc
loopne
ljmp
sti
insb
daa
inc
loopne
push
insl
ljmp
mov
inc
ja
or
repz
scas
dec
rcll
movntq
out
loope
jnp
dec
cmp
or
mov
xchg
fisubrs
and
and
sub
mov
xchg
loopne
faddl
rorl
mov
push
gs
and
adcl
lods
popf
inc
add
aas
mov
mov
jo
jg
les
cltd
dec
ret
popf
mov
aad
cmp
dec
lcall
ljmp
in
or
lret
mov
mov
xchg
xchg
fwait
test
sbb
add
aad
movsb
dec
hlt
sbb
std
popa
dec
aad
adc
outsb
or
loopne
test
mov
cwtd
popf
jl
and
mov
fs
push
adc
movsb
leave
sahf
cli
inc
out
icebp
pusha
and
mov
pusha
xor
dec
xor
sub
lcall
push
int3
jb
jns
bound
lea
in
insb
xchg
dec
mov
enter
in
mov
insl
xchg
and
roll
dec
jle
dec
orb
es
inc
inc
sbb
stc
sbb
lods
dec
jmp
lds
repnz
cli
add
test
jnp
jge
out
xchg
pushf
popf
mov
jge
ficoms
pop
aad
in
mov
dec
add
out
add
imul
shrl
fadds
bnd
fdivrl
jnp
fnsave
stos
aas
aad
in
mov
mov
fucomp
push
out
je
aas
test
xchg
negl
and
fwait
jne
fadds
cs
or
in
mov
enter
or
shlb
into
or
dec
nop
lret
or
jb
jg
mov
lahf
sarb
pusha
jo
mov
cmp
jl
mov
mov
cmpsl
push
cltd
int3
jns
pop
inc
pop
pushf
out
cmp
aad
mov
or
call
js
inc
push
es
push
sbb
stos
iret
idivb
push
cli
lret
push
imul
mov
sub
jb,pt
cmp
add
jmp
push
sbb
adc
sub
inc
rolb
rep
repnz
mov
scas
mov
icebp
popl
pushf
mov
lahf
cmpsb
pop
mov
mov
and
pop
jne
or
stos
cli
adc
or
dec
jne
js
xchg
stc
mov
jnp
cltd
push
mov
inc
rorb
jle
mov
push
aad
ja
dec
jg
cmp
cmp
or
dec
mov
or
push
mov
aad
cmp
icebp
mov
outsb
dec
mov
pop
jo
jmp
stos
sti
xor
pushw
out
mov
aad
pusha
dec
movsl
pop
or
dec
loop
popf
hlt
cmp
mov
mov
lods
scas
aad
mov
dec
push
repz
out
sub
stc
and
push
pop
cmp
mov
mov
mov
push
mov
xchg
fscale
sub
mov
lcall
cli
in
arpl
mov
dec
cmpsb
cmp
jecxz
repz
movsl
orb
inc
aad
add
dec
inc
xor
negb
mov
imul
call
aad
mov
fcmovne
sub
or
movsl
sbb
push
ljmp
shrl
sarb
sub
mov
stos
in
xchg
stos
nop
loop
jmp
int
aad
into
pop
adc
mov
jge
push
and
jge
psrad
mov
cld
inc
adc
xlat
xchg
mov
lds
fcmove
jge
adc
loopne
adc
js
or
jg
out
xchg
ret
js
lcall
xor
shll
cmp
aam
cmp
jbe
rorl
mov
sbb
push
sbb
dec
scas
adc
dec
adc
int
jbe
ds
inc
jmp
or
or
cmc
sti
jg
inc
imul
repz
jecxz
mulb
add
in
jecxz
sub
pop
stc
mov
cmp
dec
mov
and
out
inc
scas
add
xchg
jmp
cmp
jae
jmp
adc
xor
mov
mov
dec
dec
cwtl
out
or
in
in
outsl
and
cmpsb
fistpll
push
mov
add
rolb
pusha
fdivp
mov
xor
xor
jnp
inc
pop
cmp
push
inc
mov
adc
cltd
std
fnstenv
out
pop
outsl
aad
sbb
fdivrp
add
fdiv
jg
sbb
in
rclb
jecxz
aad
jge
cs
adc
fidivs
dec
cmp
pop
fstpl
int3
dec
sahf
or
test
push
scas
repz
fdivp
mov
repnz
mov
iret
dec
and
cmp
in
lods
std
jns
sub
test
xchg
test
out
cmp
pop
imul
dec
or
scas
sub
xor
dec
adc
insl
repz
jge
bound
cmpsl
call
and
ljmp
mov
or
push
stos
mov
iret
mov
dec
les
mov
outsl
cmpsb
out
out
cmovp
cmc
aad
jle
xchg
divb
cmc
or
loope
pop
or
mov
js
or
nop
int
sbb
fadds
stos
in
mov
sub
xlat
mov
add
xchg
sahf
ret
and
xchg
decb
sub
adc
jbe
aas
jmp
push
pop
outsl
shrl
faddl
xor
add
clc
and
out
aad
addr16
inc
cmc
adc
or
scas
test
sub
dec
icebp
int
inc
lret
mov
ljmp
jnp
stc
dec
or
or
push
loop
mov
dec
cmp
aas
cmp
cmp
shlb
fxch
dec
mov
mulb
mov
sbb
jne
pop
es
fcmovnbe
add
sarb
mov
mov
bound
or
lock
andb
or
out
dec
scas
mov
xchg
push
jb
call
movsb
or
js
in
xchg
sti
addl
lds
out
adc
ds
scas
adc
test
or
sub
iret
sarb
push
shrb
push
lock
fcmovne
mov
test
fcomp
sbb
add
or
into
inc
push
fdivrs
fwait
int3
loop
fstps
sti
inc
sti
mov
fnstsw
fldenv
mov
inc
adc
mov
xorb
sbb
jb
cmc
daa
dec
loopne
out
stos
inc
cmc
cli
add
stos
mov
scas
cmc
add
cmp
jl
xorl
sar
xchg
or
mov
dec
inc
pop
lods
fsubrl
fidivrl
cmp
pop
push
dec
aad
test
mov
add
pop
mov
mov
cmpsl
sti
lret
push
add
jnp
ss
clc
push
jbe
xor
lods
clc
sbb
cmp
push
jmp
dec
fstl
lods
adc
bnd
mov
loop
add
sbb
in
addr16
dec
std
adc
orl
add
out
add
or
incb
inc
fimuls
ljmp
addb
fbld
sbb
jb
cs
repz
mov
push
mov
mov
xchg
popa
addb
inc
push
add
mov
add
icebp
ds
pop
and
in
shlb
lods
mov
out
add
aam
inc
cli
loopne
cmc
add
sub
ret
aad
or
mov
cmp
pop
into
dec
sbb
push
stc
loope
dec
sub
dec
js
fwait
xor
add
xchg
xchg
pop
lret
in
test
xlat
sub
dec
test
sbb
and
xor
cmc
loope
ss
add
pop
cmp
inc
pop
sub
aad
xor
lret
push
es
enter
in
imul
mov
repz
out
push
and
shl
mov
cmp
ret
sbb
pop
push
inc
or
sti
lods
inc
orb
shrl
jbe
fisubrl
or
out
sub
inc
loope
jmp
or
mov
mov
insb
inc
outsl
aad
mov
cmc
outsb
lods
inc
cmpsb
or
movl
int
adc
pop
add
es
or
dec
cmp
mov
lods
or
fisubs
mov
fdivrs
add
out
mov
jbe
jecxz
jae
inc
mov
les
push
stos
xor
fwait
push
adc
mov
pop
mov
icebp
imul
pop
inc
jo
inc
int3
or
test
mov
daa
jl
enter
loop
or
lods
scas
lock
pop
out
mov
std
int
sub
in
sbb
stc
sbb
push
xor
adc
jno
in
cld
mov
cld
addr16
fucomp
repz
lret
outsb
dec
and
jae
push
xor
sbb
or
cmpsl
cld
jge
mov
cmc
cld
mov
push
je
scas
sbb
xchg
mov
les
inc
cmp
imulb
jae
and
jns
fwait
call
pop
bndldx
push
jae
scas
icebp
aam
fisttpll
adc
movsb
ds
sbb
inc
jno
mov
push
fldz
mov
jcxz
aaa
sarl
inc
push
lcall
into
adc
ja
gs
orl
push
jo
cld
or
lods
repz
cmp
stc
xchg
or
add
or
pop
push
jb
loop
and
aam
sub
inc
shlb
not
mov
add
lds
loopne
xchg
in
ffree
mov
shll
pop
mov
xor
dec
fldl
or
sub
pop
fmulp
div
aas
loop
push
xchg
cmp
stc
xchg
and
jl
xor
xor
aad
xchg
lret
inc
iret
cmp
pushf
lret
jg
add
lret
jmp
aam
clc
cs
and
mov
aam
jl
pop
and
mov
xor
mov
mov
push
xchg
insl
dec
mov
mov
jmp
lods
pop
test
mov
loop
jne
int3
mov
adc
js
in
pop
ja
icebp
jo
ret
dec
call
mov
xchg
mov
xor
in
dec
push
mov
ljmp
popa
scas
push
xor
push
dec
or
in
ss
loope
jmp
lret
dec
push
test
ret
int3
inc
fbld
es
lahf
mov
and
rorl
push
pop
jmp
sbb
sbb
mov
gs
xor
xchg
out
cli
fistpl
rorb
xchg
pop
sbb
fildl
dec
inc
push
neg
cmp
adc
mov
addr16
jmp
or
loope
and
mov
sub
popf
iret
jmp
mov
inc
call
es
out
xchg
pop
mov
jg
or
lea
jecxz
add
scas
push
insl
iret
ds
rcll
out
lret
aad
div
dec
cs
sbb
stc
or
scas
sti
gs
sbbl
test
test
cmp
cmp
mov
cmp
movl
or
push
out
adc
mov
iret
push
mov
das
pop
mov
cs
out
mov
xor
out
fisttpll
jg
bswap
push
or
enter
in
outsl
inc
insb
jg
pop
mov
cmp
jne
andl
dec
dec
mov
ja
cmp
sbb
jns
mov
iret
push
cmp
addl
mov
into
dec
int
addb
fdivp
mov
mov
cmc
sub
aad
in
sub
jl
decl
mov
daa
test
mov
sub
das
or
or
enter
into
sti
sahf
notl
inc
push
sbb
lods
ds
ds
in
xlat
jmp
push
mov
mov
pop
add
aad
pusha
cmp
daa
repz
ret
mov
mov
sbb
sarl
ss
loope
mov
lea
fldl
stos
enter
sub
jge
inc
in
mov
insl
inc
inc
jo
mov
aad
dec
lret
xor
xchg
push
push
inc
mov
imul
loop
addr16
dec
xchg
rolb
test
loop
cmp
stos
lods
test
lods
pop
mov
popf
cltd
lret
jno
dec
jne
mov
cmpsb
out
pop
imull
or
jmp
idiv
cmp
cli
or
imul
neg
cmc
div
xor
repnz
out
jmp
fucomp
imul
sub
ljmp
pop
push
lea
rorl
mov
sub
cmc
fists
sti
ficomps
dec
sahf
sarl
int
pop
or
dec
lods
pop
shlb
cwtl
sahf
inc
stc
out
stos
jo
fdivs
lret
sbb
loope
aas
into
inc
loop
ss
dec
mov
aad
mov
mov
jg
arpl
inc
in
fsubrs
xchg
push
in
dec
mov
mov
in
out
inc
adc
loope
fmul
and
dec
pop
lods
orl
sbb
sub
fs
and
loope
fdivs
loope
inc
pop
fs
loop
fldcw
jmp
adc
idivl
test
iret
cmp
jg
imul
mov
mov
jb
int
mov
push
or
push
imul
jnp
cwtl
jno
stos
inc
rcrl
sti
ja
test
seto
mov
test
outsb
mov
and
cld
aad
cmpsl
add
clc
loope
insl
dec
jp
aad
mov
fwait
sbb
dec
mov
jns
lahf
in
lea
dec
mov
jecxz
lahf
xor
sbb
aaa
scas
loopne
inc
popa
imul
iret
pop
mov
leave
pusha
cmp
idivl
aad
adc
or
aad
add
and
fistps
mov
test
fdivr
movsb
jecxz
dec
rol
jp
shl
mov
xor
mov
sub
and
bound
push
sti
into
mov
ja
in
in
fucomi
mov
out
out
cwtl
mov
mov
out
rcll
dec
fcmovnu
out
shrl
lahf
lea
inc
lods
or
sbb
mov
mov
jp
fidivrs
mov
aad
sub
or
mov
push
int
or
in
enter
pop
inc
in
in
rorl
fdivrs
addr16
ret
cwtl
xchg
xor
dec
lock
lret
retw
cmp
jecxz
stmxcsr
inc
ljmp
xchg
in
xor
dec
mov
shrb
out
sbb
bound
adc
ficoml
push
subb
lods
sti
cmp
fmul
in
mov
lret
jg
idivb
dec
lods
push
inc
lds
dec
rclb
jle
xchg
shl
das
push
jnp
nop
adc
pusha
inc
mov
cs
fstl
pop
aad
sti
int
movsb
nop
or
jns
mov
mov
in
in
add
call
popf
cmp
dec
mov
test
outsl
xchg
andb
je
rorl
cmpsl
mov
sti
or
xlat
jbe
in
lahf
sarb
frstor
cmc
push
fcoms
sub
pop
iret
dec
aad
loopne
outsl
rorb
in
push
arpl
iret
mov
xchg
sti
in
lods
loope
jecxz
inc
mov
imul
or
pushf
outsb
inc
adc
cmp
test
or
adc
mov
out
in
in
fcomi
and
dec
aad
pop
mov
inc
push
xorb
enter
cmp
cmp
orb
mov
mov
push
cmp
cli
mov
repz
scas
mov
dec
jecxz
or
loope
mul
sub
xor
sbb
aam
dec
std
fistpl
mov
adc
jmp
inc
mov
popa
iret
add
idivl
jg
pop
test
test
xor
inc
push
push
jge
or
call
mov
jmp
or
clc
mov
jmp
aad
aaa
mov
adc
inc
ja
pop
pop
comiss
pop
and
cmpsl
cmp
lds
dec
shlb
jmp
out
xacquire
in
xchg
mov
int
mov
lretw
cld
mov
fisttps
or
or
mov
lret
xchg
shl
lret
lea
lea
lret
outsl
pop
iret
mov
jmp
faddl
mov
in
pusha
movsb
pop
xorb
xor
sti
cs
das
mov
or
bound
rcrb
out
jecxz
lods
scas
cmc
mull
xor
imul
lods
push
aam
inc
fnstcw
arpl
call
xchg
push
mov
in
ds
icebp
scas
add
and
mov
and
pcmpeqd
push
xchg
int
mov
push
push
sub
movsb
mov
dec
mov
jmp
or
popf
int3
inc
orl
fnstsw
fidivl
in
mov
cli
loopne
and
loopne
jle
adc
xor
lds
or
lret
cld
cmp
mov
cmpsb
mov
mov
and
mov
or
shr
jnp
or
sti
imul
fildll
mov
sahf
or
mov
std
movsl
or
xchg
aad
repnz
jg
stos
mov
ja
lea
sbbl
aad
in
movsb
xor
popl
mov
jle
aad
out
rcrl
add
outsl
out
add
loop
loope
xor
push
xchg
and
popf
jmp
aad
neg
push
das
mov
push
xor
cmp
jg
addr16
add
lret
dec
mov
int3
jecxz
movb
mov
jecxz
jnp
scas
aad
push
pop
imul
push
icebp
or
mov
inc
loopne
imul
cmp
adc
orl
in
jg
push
and
xchg
roll
inc
aad
loope
inc
popf
testl
ljmp
in
mov
out
cmp
nopl
fdivrl
and
add
push
push
push
pop
cmp
gs
cmp
cmpsl
or
outsl
mov
push
push
stos
inc
or
add
shll
lahf
adc
or
xchg
sub
push
xlat
scas
xchg
push
inc
pop
lea
pushf
scas
fisubs
dec
mull
js
xor
scas
xchg
mov
mov
push
push
scas
add
adc
jecxz
stos
and
and
or
adcl
sub
int
dec
and
pop
or
cmp
fst
cmp
pop
aad
outsb
or
xor
jecxz
dec
dec
cmp
cmpl
fwait
arpl
dec
sbb
icebp
ja
dec
cmp
mov
xchg
push
lods
rolb
fwait
imul
jne
test
mov
cmc
fsubrl
fmull
sbb
imul
rorb
nop
imul
and
inc
lea
mov
enter
lea
pop
jnp
sub
aad
push
dec
dec
and
inc
xlat
cs
out
cmp
inc
jns
add
repnz
nop
pushf
iret
lahf
cmp
xchg
mov
divb
and
es
fwait
jle
cld
lods
jb
push
mov
je
fcompl
cli
jmp
jno
loopne
push
ficompl
fxch
aad
arpl
mov
fimuls
repnz
jae
in
cmc
xor
shrl
mov
iret
mov
iret
andb
pop
add
or
sub
or
testl
or
stc
clc
lret
push
testl
ret
mov
loopne
pop
decl
mov
push
in
or
loopne
lret
dec
xchg
inc
push
push
pop
scas
mov
dec
in
fidivrl
rolb
scas
jmp
out
inc
bound
pop
je
jp
fdivrp
insl
mov
cli
cli
mov
mov
dec
push
mov
jecxz
dec
sub
test
cli
xor
mov
not
or
or
in
aas
sub
sbb
dec
or
adc
push
cmp
push
in
dec
mov
dec
xor
add
clc
adc
or
test
enter
pcmpeqw
mov
in
std
clc
pop
outsl
sub
aad
push
sub
in
push
mov
sub
dec
mulb
lds
and
rcl
pop
xor
idivl
lock
int3
mov
add
enter
dec
lahf
sbb
mov
dec
sahf
pop
incb
adc
lahf
lret
mov
dec
adc
pop
push
pop
mov
pop
ror
outsl
repnz
mov
mov
xchg
adcl
loope
jmp
rclb
xchg
cwtl
sub
adc
popf
jo
stc
push
popa
sub
arpl
sub
adc
adc
adc
sbb
xor
jne
or
cmp
pop
fsubrs
and
push
fscale
testl
cmp
xchg
dec
jp
out
mov
xchg
loope
lods
mov
push
inc
lahf
jne
xor
dec
push
lcall
cmp
and
int
test
pop
inc
faddl
mov
es
push
jb
cmp
push
test
imul
cmp
adcb
and
hlt
fnstsw
mov
icebp
cmp
push
into
rcl
push
jno
xchg
shll
iret
rclb
jo
dec
pop
push
loope
mov
popf
mov
xchg
xchg
and
mov
insb
dec
or
inc
sub
adc
popf
sub
div
adcl
xchg
jg
out
xor
ss
mov
enter
mov
jbe
int
pop
repz
mov
push
aad
div
inc
movsl
not
pop
xchg
xchg
enter
mov
testl
sbb
out
or
or
inc
lret
insb
shl
repz
rclb
icebp
mov
js
pop
in
mov
or
or
insl
lcall
inc
div
inc
movsl
pop
mov
leave
lahf
mov
enter
mov
cmp
jae
dec
xchg
dec
mov
rcl
loop
movsb
rcl
push
cli
dec
jp,pn
out
and
aam
or
pusha
ljmp
fldt
jb
adc
mov
push
fimull
dec
dec
sub
push
aam
div
inc
in
aam
add
lret
aas
rcr
scas
xchg
fisubl
nop
mov
xchg
mov
dec
test
jg
scas
dec
in
shll
aaa
shll
rorb
div
inc
out
je
mov
or
or
dec
leave
fs
inc
mov
ss
testb
lock
scas
adc
bound
push
fbstp
xchg
xchg
iret
xor
mov
jne
inc
xlat
out
jmp
or
scas
or
cmp
scas
stos
out
inc
push
test
inc
clc
fsubp
mov
lret
jnp
pop
shrb
mov
push
push
and
mov
pop
or
ret
fadds
in
and
mov
mov
fimull
movsb
das
mov
sub
in
roll
aad
pop
push
xrstors
lret
xlat
in
loop
ficoml
inc
dec
push
add
arpl
adc
push
mov
xor
mov
sub
scas
fidivs
xchg
leave
push
fsubrp
xor
mov
aam
pop
cmpsl
mov
sub
mov
lods
js
pop
and
sar
xlat
ds
xor
cmp
or
stos
xor
imul
call
xchg
out
mov
cs
push
cmp
and
push
inc
dec
repz
test
ret
xor
pop
rcpps
xchg
cmc
pop
fldenv
iret
dec
cmp
add
xorb
dec
xchg
mov
iret
push
inc
cmp
inc
ss
mov
jl
negl
out
xor
xlat
dec
xlat
fisubrs
pop
cli
les
jl
push
aaa
fwait
xlat
add
mov
mov
repnz
fsubrp
out
inc
addr16
fildl
push
ss
push
adc
loopne
mov
push
into
dec
cltd
cld
dec
aam
push
or
jp
push
ret
push
loope
in
adc
sbb
ds
push
jle
aad
scas
mov
mov
sub
stos
add
lret
lret
push
mov
or
dec
imul
xlat
loop
xchg
adc
or
mov
xchg
fiaddl
jecxz
std
push
xlat
mov
push
je
or
xchg
aad
loope
addr16
mov
into
inc
arpl
dec
repz
or
sbb
stc
loopne
sbb
push
dec
dec
es
jle
aad
scas
xor
imul
sub
out
stc
mov
xchg
inc
xchg
add
push
loopne
stc
js
add
xchg
repz
sbb
js
ror
nop
jmp
pusha
out
js
jmp
enter
movsb
mov
inc
shl
fsubl
cs
cmp
or
ljmp
fs
pop
in
loopne
pop
rcl
enter
dec
xor
mov
int3
dec
cmp
add
xor
test
mov
sub
add
js
mov
xlat
adcl
xchg
cmpsl
insl
pop
loop
shrl
sbb
and
push
testb
push
out
mov
push
jle
aam
scas
mov
jb
sbb
mov
shll
xchg
mov
rcll
into
push
les
push
je
or
rcl
aad
add
not
inc
addr16
dec
cltd
out
dec
aad
or
or
mov
outsl
sahf
shl
sarl
or
sub
jp
and
or
out
inc
movsl
fiaddl
and
sbb
xchg
cmp
iret
xor
shll
push
lods
sbb
out
gs
rcl
add
xlat
cmp
mov
in
mov
cmp
aad
mov
cs
enter
insb
or
dec
push
xlat
popa
adc
jnp
dec
repnz
jns
lret
das
nop
xlat
adc
dec
pop
push
xlat
push
push
jnp
xchg
xchg
dec
mov
mov
sbb
jge
adc
aam
popa
add
movsl
sbb
loope
dec
scas
in
mov
inc
icebp
aas
int3
sbb
and
sti
or
cs
aas
add
dec
cmp
cmp
js
fcmovnbe
cmpsl
push
mov
out
stos
xlat
xor
push
xchg
sti
adc
fisttpl
sbb
lret
dec
sbb
rolb
mov
sub
xchg
and
adc
leave
sub
xor
adc
mov
mov
les
mov
outsl
addr16
cli
xchg
add
jmp
xlat
push
hlt
mov
or
add
push
cli
mov
jmp
dec
punpckhwd
cmp
out
insb
cmp
repz
add
cmp
loop
pop
inc
jb
cli
popa
ficoms
xlat
rorl
jb
adc
xchg
ds
pusha
out
test
cld
dec
mov
cmp
gs
into
push
push
jge
out
push
fmulp
xchg
scas
xlat
je
dec
xor
dec
mov
fdivrs
into
adc
clc
mov
js
test
pop
mov
aad
aas
mov
mov
orl
out
je
aas
dec
cli
jle
aam
scas
mov
out
dec
and
dec
pushf
scas
push
pop
out
cmpsl
xchg
mov
iret
adc
inc
sar
mov
or
pop
cmp
mov
lahf
xchg
push
mov
hlt
idiv
adcl
aad
movsl
dec
push
xlat
icebp
aad
add
or
les
das
or
jg
dec
xor
mov
imul
mov
cmp
out
push
mov
gs
or
xor
movsb
or
xchg
mov
fwait
out
push
jno
inc
add
nop
pop
mov
xchg
imulb
lahf
mov
aad
inc
aam
pop
out
icebp
testl
sub
setg
or
sbbb
and
pmulhuw
adc
imul
pop
jne
lods
test
mov
test
sub
adc
or
dec
icebp
outsb
nop
lret
das
cmp
lcall
jne
test
movsb
push
int
adc
into
add
or
cmpsb
jge
lret
mov
push
inc
mov
pop
cmp
sti
dec
rcr
jo
and
sub
dec
inc
out
sub
das
pop
cmpw
std
loopne
call
out
pop
or
es
sub
lods
inc
mov
push
xchg
add
cs
push
bnd
das
add
xorb
std
add
inc
push
inc
xchg
icebp
jae
outsl
jmp
or
dec
popf
dec
mov
fnstsw
in
xcrypt-cfb
cmpsl
out
pusha
mov
stos
lea
mov
push
jno
xchg
mov
mov
xor
or
dec
pop
sub
rorb
icebp
mov
mov
lret
dec
stc
mov
mov
out
sub
dec
leave
in
add
roll
int
mov
inc
shll
lea
int3
mov
mov
bound
lods
gs
insb
cs
scas
dec
cmp
dec
and
xor
mov
jg
or
cmp
jns
sub
icebp
enter
ret
push
clc
pslld
push
sub
fsts
push
dec
dec
aad
and
fninit
es
mov
insl
sbb
flds
daa
fwait
or
repnz
or
push
enter
jmp
jecxz
xchg
movsb
repnz
jge
aas
movsl
push
add
lods
scas
jne
pusha
fdiv
movsb
std
pop
lea
cmp
mov
jmp
aad
inc
shr
and
cmc
sub
add
mov
mov
add
xor
xchg
jge,pn
sbb
mov
int
jg
mov
cmpsb
dec
xchg
push
jg
push
nop
int
sub
or
insb
jg
mul
aas
xchg
ja
pop
popf
add
lret
xor
sbb
adc
shr
fldl
xor
testb
repnz
jmp
ljmp
xor
dec
pop
jnp
jge
fidivrs
mov
ljmp
adc
mov
fsubp
mov
das
nop
stos
mov
and
inc
or
mov
push
sub
dec
lds
mov
mov
push
outsl
add
dec
sti
mov
xchg
scas
stos
rep
stos
push
inc
add
xorb
aad
test
mov
scas
popf
repnz
inc
push
stos
push
mov
pop
cmp
fstpt
mov
movb
sbb
or
jecxz
or
jnp
cmp
dec
je
sbb
adc
ss
ljmp
out
or
fs
fimull
or
mov
lods
stc
insl
cmp
mov
scas
ss
xor
push
jnp
into
lret
inc
pop
inc
sar
pop
idivb
push
lahf
out
or
out
stc
insl
scas
adc
jmp
imul
imul
mov
cmc
ret
mov
shl
lret
mov
or
stos
xchg
mov
inc
xor
lahf
stc
in
stc
and
frstor
mov
movsb
in
lods
dec
xchg
and
inc
popa
pop
push
mov
aaa
xor
mov
aaa
mov
sub
addr16
stos
xlat
xchg
or
add
dec
mov
aam
cs
std
mov
repz
cmp
repz
push
mov
cld
sbb
jne
ljmp
lahf
dec
jbe
push
cmp
mov
psubusw
push
hlt
lret
flds
dec
or
imul
cmp
andl
int
stos
mov
sub
cltd
sbb
out
loopne
ds
call
mov
cs
mov
mov
xchg
mov
rorb
or
pop
mov
out
aad
sub
dec
call
lods
out
jle
std
inc
out
fst
pop
or
mov
in
sub
lock
repz
jle
sarl
cwtl
pop
xlat
or
or
add
cld
insl
jne
jbe
add
call
dec
jno
mov
out
data16
xchg
lret
out
shrl
or
jno
push
sub
aad
inc
in
or
ror
jecxz
add
dec
cld
in
add
xor
lret
jg
rol
nop
dec
sti
les
add
mov
push
subps
outsb
inc
push
add
rcl
pop
mov
nop
adc
xor
lahf
shll
jmp
or
cmp
sbb
dec
stc
scas
out
adc
xchg
ss
btr
jb
test
andl
inc
and
data16
popf
adc
dec
clc
iret
sub
out
jb
cmp
or
sbb
movsb
pop
in
pop
sub
adc
sbb
scas
jmp
add
test
sub
and
test
add
xlat
stc
test
loope
popf
je
mov
cld
push
mull
jg
ds
iret
push
lods
mov
scas
mov
stos
loope
lods
mov
mov
data16
testb
ja
cmpsl
dec
fildll
loope
sub
sbb
pop
dec
inc
lahf
pop
in
add
jg
mov
lock
dec
jecxz
lods
push
pop
sbb
and
jo
into
out
or
dec
mov
repz
movsb
xchg
cmp
sub
movsl
enter
sub
ds
xor
les
mov
cmp
xor
stos
movsb
sahf
inc
lret
inc
cld
push
sti
addr16
or
imul
xchg
push
das
pop
ret
mov
inc
lods
cmp
cld
mov
or
shrl
cmc
cmp
inc
in
addr16
sub
dec
jecxz
lods
pop
insb
mov
jecxz
mov
xlat
lods
xor
sarl
aad
and
jb
shll
inc
pop
pop
into
and
jle
and
jle
es
stos
or
adc
add
adc
or
mov
sti
loop
lods
imul
jo
push
fisubrl
notl
paddb
adc
xlat
inc
dec
cmc
or
jle
jg
lds
jmp
or
xlat
mov
in
cmc
pinsrw
loop
sub
cli
stos
adc
int3
mov
cmp
sbb
sub
fimuls
xor
pop
jae
xchg
and
cmp
inc
add
out
dec
scas
aad
xlat
dec
lahf
push
jecxz
pop
ds
into
cli
mov
lds
sub
dec
ss
lahf
popf
mov
and
sbb
pop
mov
mov
out
test
xchg
and
dec
enter
scas
sbb
test
sbbb
outsb
adc
popfw
or
and
fistps
out
fisubrl
adc
les
into
or
dec
pop
orb
dec
cmp
stc
or
repz
aam
add
inc
fs
dec
or
push
inc
stos
or
cmp
or
loopne
push
fucomp
mov
fildl
mov
or
stos
out
push
add
or
subl
scas
add
test
push
les
dec
mov
std
js
std
iret
or
in
out
sbb
mov
cmp
testl
xor
or
inc
ss
mov
out
call
or
mov
cld
add
xchg
stos
pop
rcl
scas
mov
xchg
test
cmp
stos
push
jnp
repz
cmc
rolb
inc
lahf
and
mov
sarb
or
jmp
shrb
rorb
add
fs
aam
sub
or
sarb
and
cmp
dec
pop
jmp
aad
loop
xlat
add
clc
rcl
push
jg
mov
fistps
mov
mov
mov
ja
mov
mov
mov
lea
mov
mov
rorb
repz
cmp
hlt
add
or
cld
repnz
jmp
int
lahf
sub
adc
test
add
aaa
xchg
xlat
sub
adc
aad
xchg
mov
fsubp
and
mov
out
into
jnp
or
or
aad
add
fld
dec
imul
or
or
rcll
dec
shrl
xor
or
lods
mov
add
inc
inc
ret
xor
test
idivl
imull
jecxz
fimuls
xor
aad
ljmp
ret
mov
jnp
scas
mov
cs
inc
rcrl
pushl
or
xlat
cs
adc
in
sti
pop
ds
inc
stos
dec
xlat
pusha
cs
sub
xchg
or
nop/reserved
add
inc
imul
adc
dec
mov
out
mov
dec
xchg
or
jg
add
clc
fimuls
int
mov
arpl
mov
dec
aad
hlt
or
and
dec
mov
jmp
inc
or
add
ficomps
rol
out
mov
pusha
in
ja
int
ds
scas
push
push
out
ja
mov
int
lret
push
mov
lea
inc
xchg
out
shrb
out
jecxz
jne
add
mov
or
repnz
pop
call
fbld
test
cmp
jecxz
call
dec
cmc
mov
jbe
leave
adc
fdivrp
ja
sbb
mov
pop
mov
mov
inc
or
xchg
fdiv
jae
lret
dec
jge
fists
ret
ja
and
loope
cld
fcmovu
xchg
sbb
test
xchg
mov
shl
jno,pt
stc
or
test
lret
sarl
aad
jecxz
icebp
inc
lods
jb
mov
push
dec
int3
dec
inc
sbb
cmp
or
jmp
ret
or
xchg
push
sub
sbb
add
inc
in
adc
repz
aas
adc
inc
jle
arpl
ret
shr
ret
out
add
jle
fucom
pop
fstl
dec
decb
sub
mov
mov
push
lea
add
ret
subl
jg
cmp
adc
push
ja
mov
jge
daa
out
push
movl
mov
mov
or
jge
push
lock
push
adc
and
jmp
in
ds
xlat
rcrb
or
subb
dec
cmp
jecxz
or
cmp
sbb
jecxz
jecxz
testb
mov
mov
cld
mov
sub
shlb
rolb
fstpt
inc
or
xchg
push
or
jecxz
inc
xlat
mov
lea
sub
mov
sub
cmp
stos
sbb
mov
inc
inc
cmp
fistps
inc
imul
popa
xchg
dec
push
add
adc
jecxz
xchg
mov
sub
sti
fs
or
pop
ds
xchg
push
into
adc
sbb
lods
jecxz
ljmp
and
inc
push
aaa
dec
mov
cmp
mov
jmp
mov
mov
jecxz
jg
inc
dec
stc
jecxz
scas
fcomi
jbe
and
je
fisttps
xchg
clc
push
aad
adc
or
or
testl
outsl
negl
fists
inc
stos
or
cmpl
ss
mov
dec
out
aad
add
ds
icebp
in
lret
outsl
outsb
or
jp
lahf
aad
scas
jg
xor
push
aaa
test
les
pop
add
aad
or
cs
in
fdivrs
xchg
add
sbbb
or
repz
jmp
xor
or
out
cs
out
xchg
in
aam
cmp
rorb
add
cltd
rorb
xchg
jg
mov
leave
psubw
rorl
adc
push
lret
dec
sbb
xchg
rorl
or
lret
repz
mov
int
idivb
jg
out
orl
cmp
push
sbb
push
fistl
add
idivb
jp
mov
test
sahf
das
dec
push
mov
clc
fwait
jmp
jg
aas
dec
adc
or
cmp
pop
inc
fldcw
repz
push
pop
cmp
jecxz
arpl
imul
dec
or
rorl
jge
test
outsl
ja
or
lea
xchg
mov
or
js
outsl
aad
pop
push
sub
movsl
lahf
pop
dec
in
jg
loopne
or
loope
dec
mov
repz
jns
dec
ja
cmp
jae
scas
sub
in
aas
pop
adc
gs
adc
mov
js
addr16
div
aad
adc
mov
stos
or
sarb
jae
xchg
cmp
aam
adc
or
popf
dec
mov
dec
loope
push
mov
test
in
out
sbb
scas
fistpll
aad
cmc
jge
adc
push
lret
incl
in
ds
mov
or
xor
stos
out
xchg
or
jecxz
cmp
sbb
divl
inc
add
dec
mov
cltd
repz
out
int
aad
stc
push
repz
jns
shr
lods
mul
jo
aad
mov
bswap
add
jbe
inc
jmp
fimuls
addr16
out
mov
jecxz
jle
and
mov
aad
or
cmc
add
lods
lock
jecxz
aad
dec
aad
hlt
imul
adc
out
arpl
mov
shl
scas
add
mov
or
fbld
push
mov
mov
int
inc
xchg
xchg
out
mov
or
dec
xlat
jmp
jle
adc
mov
sti
or
mov
mov
and
mov
fucomip
sub
dec
jmp
in
inc
mov
dec
push
fdivl
icebp
mov
mov
sar
scas
fcmovnbe
mov
jbe
cli
or
cli
mov
add
or
inc
roll
xor
divl
stos
arpl
insl
jmp
repz
repnz
in
js
xchg
fwait
orl
jg
adc
mov
sbb
out
sub
or
aad
push
aad
cmpsl
lret
push
pop
mov
rep
jmp
sub
enter
inc
or
or
popa
jo
aad
imul
lods
or
mov
xchg
add
push
fnstsw
xor
clc
enter
stos
and
fdivrl
mov
jge
aam
scas
rcll
or
icebp
xor
aad
add
lret
add
lods
aam
fcmovnu
dec
and
pusha
shlb
cmp
cmp
or
dec
cs
ret
jecxz
mov
pop
jbe
dec
outsl
inc
enter
in
jg
loopne
test
and
movsb
inc
jmp
or
sarl
aad
add
fpatan
jecxz
out
jmp
stc
jg
pop
mov
mov
sti
jno
add
dec
add
lret
scas
jb
dec
cmpsl
aad
sahf
dec
lahf
jl
out
push
adc
rcr
push
icebp
test
aad
push
setg
insb
jmp
imull
jg
aad
aam
jmp
std
mov
call
popl
cmp
loope
js
gs
std
adc
adc
repnz
or
push
mov
jecxz
push
add
cli
push
mov
std
push
jmp
std
xor
enter
jmp
out
sub
jg
aam
add
mov
inc
aad
das
dec
lret
pushw
cmpsl
aad
scas
inc
in
xchg
jl
in
loopne
mov
sbb
jmp
sbb
jbe
jg
jp
and
xchg
and
fdivp
int
aad
lcall
scas
sbb
sahf
jo
jmp
sbbl
gs
fidivl
adc
fst
mov
int3
outsl
outsl
add
aad
je
in
std
jmp
jg
push
add
inc
cmp
jmp
stos
jecxz
in
sarb
loop
mull
or
ss
mov
push
dec
dec
insl
orb
movsl
sarb
stos
jmp
in
scas
repnz
mov
cmp
and
fistps
in
cmpxchg8b
int3
or
roll
scas
fstpt
or
mov
xchg
into
push
dec
lahf
jno
or
or
lock
test
outsl
iret
ret
sar
ss
fistl
jmp
mov
aam
inc
jg
out
dec
dec
aad
cmpsb
lret
outsl
clc
enter
movsl
pop
dec
cmp
inc
mov
pusha
icebp
jb
mov
rol
fwait
enter
movl
mov
mov
push
in
in
mov
or
lret
dec
out
pop
mov
lock
mov
repnz
fimull
and
in
inc
fimull
repz
or
and
mov
mov
or
dec
or
out
stc
lods
test
inc
push
jne
dec
rcr
call
repz
inc
push
xlat
xchg
test
mov
les
mov
xchg
or
cmp
shll
inc
fistpll
aad
stos
mov
dec
ret
jecxz
in
dec
outsl
aad
cmpsb
mov
enter
push
xchg
push
pop
lret
imulb
jg
gs
scas
icebp
jnp
or
lret
push
push
loopne
insb
sub
insb
mov
sti
adc
push
sub
mov
and
add
jmp
dec
in
sbb
in
jmp
repz
aas
shlb
lcall
push
jecxz
cmp
cmpsl
js
aad
repnz
push
call
repz
push
stos
inc
mov
mov
divl
repz
mov
dec
add
fs
out
jp
mul
jns
leave
scas
mov
ja
imul
loop
out
inc
xrelease
call
mov
sub
lahf
xor
out
push
or
js
je
icebp
inc
xor
add
jle
adc
jecxz
aad
std
xor
pop
popa
jmp
neg
inc
out
bound
lret
or
rcr
stos
dec
imul
xor
pop
jmp
or
and
adc
xlat
dec
ds
lea
out
mov
call
frstor
repz
js
out
shrl
pushl
lgs
scas
mov
xchg
out
add
ret
add
dec
push
pop
xor
xchg
or
adc
addl
jecxz
and
or
jbe
dec
xlat
imul
iret
aad
mov
inc
pop
add
lret
filds
pop
mov
mov
add
inc
jle
and
jecxz
decb
dec
dec
dec
in
popa
jecxz
sbb
stc
jo
xchg
ljmp
call
mov
lahf
aad
rcll
outsl
rorl
inc
test
loope
inc
mov
xchg
sub
push
sub
lret
adc
and
jecxz
in
sub
aad
cs
imul
sbb
or
mov
mov
aas
out
cmp
xor
in
or
jl
mov
jecxz
ljmp
add
dec
shld
and
out
inc
sti
mov
sub
outsl
fisttps
inc
cmp
xlat
sub
out
mov
dec
jle
and
mov
filds
dec
cs
and
and
out
pop
xlat
jne
idivl
aad
fs
mov
xor
xor
or
jp
aad
mov
icebp
dec
out
jb
out
or
aad
or
or
pusha
inc
jecxz
loop
dec
mov
out
add
jle
and
mov
aad
and
inc
inc
mov
in
scas
sti
and
int3
fstpl
sbb
xlat
xor
aad
cwtl
aas
or
sub
xor
icebp
sarl
mov
ret
jb
push
inc
in
sbb
ret
rcl
test
push
adc
jecxz
fidivl
fistps
lret
movsl
and
jecxz
in
aad
mov
or
sbb
add
inc
loope
aad
add
xchg
and
lcall
fdivl
add
cltd
iret
dec
icebp
and
lods
jb
sti
jecxz
fadds
aad
or
push
and
in
in
fucom
pop
ds
les
xlat
in
push
dec
movsb
sbb
repz
test
mov
into
in
and
fsubrp
xor
xlat
outsl
sbb
xor
mov
or
aad
sub
push
or
cmp
mov
aad
movl
arpl
inc
dec
aad
sbb
xor
lods
jb
fbld
inc
mov
add
mov
xchg
or
add
movsb
jecxz
jle
arpl
mov
movsb
jecxz
sub
sbb
shll
int3
clc
icebp
sbb
adc
add
pusha
inc
lds
mov
adc
jecxz
in
cld
call
test
icebp
sub
lods
jb
or
arpl
mov
fadds
cmp
mov
loopne
out
jnp
mov
pop
jecxz
inc
mov
adc
leave
lahf
mov
sti
pop
ds
xor
mov
lahf
cs
cmp
sbb
divl
out
nop
inc
dec
rclb
jecxz
shlb
aad
mov
add
cmp
sub
jp
mov
jle
in
mov
inc
hlt
shll
pop
frstor
faddp
xor
enter
mov
jns
shl
lods
testb
or
nop
push
and
neg
xor
aad
dec
cwtl
clc
add
jecxz
clc
rorb
sbb
lods
div
jo
jnp
dec
or
lret
sub
fs
pop
inc
lock
sarl
aas
enter
xor
inc
in
jecxz
sti
aad
adc
ret
xor
aad
mov
dec
xchg
sub
mov
or
xchg
call
add
jecxz
loopne
sbb
pusha
inc
mov
lock
or
lahf
fs
pop
stc
fdiv
gs
scas
mov
icebp
cmp
jb
mull
stos
jecxz
xor
pop
fs
pop
cmp
xor
jb
inc
mov
out
ret
mov
mov
mov
mov
sbb
xor
lods
jb
jmp
or
testl
sahf
mov
out
testb
mov
jecxz
jecxz
testb
dec
aad
sahf
scas
dec
and
sbb
test
mov
inc
push
sbb
psllw
add
movsb
jecxz
jle
arpl
xchg
or
insb
add
cmp
test
xchg
cs
inc
popf
sbb
fidivrl
in
xchg
imul
add
cmp
inc
movsb
dec
jecxz
data16
pop
addr16
add
pop
sbb
inc
xor
subb
jno
add
cmp
inc
movsb
dec
jecxz
js
dec
outsl
insb
or
sar
lods
neg
jo
jnp
fidivs
repz
and
fs
pop
mov
dec
dec
dec
lret
cmp
mov
sti
sub
shl
mov
mov
rorb
aad
leave
push
mov
mov
out
lods
not
jo
pop
adc
outsl
and
xor
shll
adc
or
fstpt
sub
add
xor
lock
jecxz
add
dec
push
in
repz
stos
inc
and
add
fs
dec
lcall
scas
shr
xor
das
repz
or
sbb
jg
or
inc
aad
push
out
cli
je
sbb
hlt
push
dec
lret
rorl
ficoml
js
shl
push
sbb
in
lods
jg
je
in
les
ds
sbb
sbb
repz
cmp
push
sti
test
mov
mov
fldl
shrl
cs
inc
pop
sbb
in
sub
cltd
in
lock
or
aad
popa
loope
sub
lods
jb
add
out
dec
aad
insb
dec
push
loopne
inc
fldcw
inc
sub
in
adc
fdivrp
xor
fpatan
dec
aas
and
sub
testl
dec
lods
fwait
sahf
or
jg
shll
cli
lret
sti
mov
or
or
sbb
jecxz
notl
xchg
je
adc
aad
daa
or
inc
arpl
mov
cmp
in
or
pushf
or
cmc
fstp
mov
in
or
add
jmp
out
mov
movq
aad
jmp
fimuls
xor
lahf
aad
scas
int3
lahf
enter
sbb
stc
jg
sarl
cs
ds
movl
mov
or
bound
xlat
jp
pop
add
enter
sbb
loopne
jmp
lret
out
in
mov
jne
idivl
fdivrp
sub
dec
xlat
popf
sub
out
aad
mov
icebp
xchg
dec
fimuls
jmp
jmp
jl
test
aam
and
mov
fnclex
pop
jmp
jne
adc
scas
popf
outsl
addb
jle
adc
xor
cmp
shlb
dec
lret
xor
jno
lock
mov
fcmovnbe
aad
adc
shl
jmp
aas
or
fistpl
jnp
cmpsb
mov
dec
out
scas
dec
xrelease
pop
pop
out
inc
dec
outsl
pop
or
push
scas
sub
or
lahf
cs
xlat
gs
in
mov
popf
push
inc
cmp
loopne
imul
or
mov
jmp
loope
loopne
xlat
dec
xlat
sahf
cs
shll
fdiv
jecxz
les
lock
pop
xlat
xor
xlat
mov
int3
sub
jbe
das
mov
jmp
xchg
dec
pop
or
or
or
outsl
les
rorb
aad
stos
repz
jg
and
repz
aad
popa
dec
enter
out
push
ror
inc
test
addl
fimuls
jno
repz
sahf
test
xlat
xchg
scas
lock
jmp
mov
repz
mull
mov
cmpsl
aam
idivl
test
xchg
repz
repz
cmp
aaa
lea
repz
sarl
jp
or
fdivrp
xor
jmp
rcll
or
cli
aad
pop
fistps
jmp
testb
push
mov
sar
mov
arpl
out
in
adc
shrb
lcall
jecxz
sahf
aam
lret
out
dec
out
or
mov
in
xrelease
jecxz
mov
sub
in
ljmp
mov
cmp
out
imul
xlat
cli
or
out
fsubp
push
insb
jmp
pop
mov
enter
in
scas
shr
mov
dec
pusha
fdivp
mov
test
int
out
lret
mov
ret
add
dec
scas
aad
push
or
sub
jg
aad
xchg
shlb
and
repz
add
dec
inc
lret
les
or
xchg
scas
fdiv
mov
mov
out
jno
push
mov
rcl
repz
loope
std
sub
fimuls
mov
lahf
aad
insb
enter
rcl
mov
cmc
stc
adc
cs
push
or
dec
adcl
scas
fwait
sub
add
jmp
jmp
and
adc
aad
ret
out
push
shl
idivl
push
mov
lods
std
dec
jmp
andl
aam
inc
mov
aad
imul
add
pop
jp
mov
enter
nop
sahf
mov
out
xor
std
scas
jb
icebp
jmp
push
mov
cmp
add
shlb
out
pop
lret
popa
inc
les
imul
jmp
lcall
jmp
push
daa
and
lahf
aad
sbb
lahf
push
push
jmp
push
and
or
fcmovnb
and
in
inc
lahf
cmp
addr16
test
shl
jg
mov
ret
or
add
xchg
nop
dec
or
aad
lret
repz
jle
adc
mov
dec
cmovp
iret
add
adc
inc
test
fimuls
cmp
or
stos
rcll
aad
test
adc
lret
mov
cwtl
repz
scas
aad
cmp
mov
cmp
or
jle
adc
std
jae
and
shl
dec
cmp
jae
fcomi
or
or
push
add
flds
jmp
or
mov
pop
fs
or
or
popa
cmp
sub
leave
lret
test
xlat
xchg
and
adc
mov
and
mov
into
cmp
and
test
pop
jae
pop
aad
pushf
out
sbb
imull
pop
enter
shr
push
aas
dec
push
rorl
testl
lock
arpl
out
lahf
into
insl
jmp
in
scas
fstpt
and
nop
sbb
mov
mov
add
push
jmp
or
lret
or
adc
call
out
inc
arpl
dec
call
mov
sub
cmp
popa
dec
lcall
xchg
sbb
sub
inc
test
in
loopne
cmp
jecxz
loope
or
rcr
call
add
mov
push
jae
out
cmc
in
arpl
rcrl
enter
sbb
testl
pushf
or
cmp
cmp
jecxz
aad
dec
aad
pop
lea
fidivs
loopne
push
out
ret
test
push
and
lods
jb
jmp
rdpmc
jo
aaa
cmp
mov
or
dec
adc
pop
mov
fisttpll
rorb
lds
and
pop
jo
mov
add
xor
or
and
mov
pop
mov
in
dec
lret
sbb
xlat
xor
cmp
orb
rcl
lods
idiv
xor
and
int3
fwait
xor
sbb
ret
rcr
add
dec
mov
sbb
xor
pop
scas
fisttpll
in
sub
xor
lahf
jbe
lret
sub
fldl
ds
xlat
sti
aad
cmp
adc
aam
movsb
jecxz
call
or
sbb
sti
xor
cmp
or
sub
sub
stos
loopne
aad
mov
or
dec
mov
rep
neg
adc
shrl
or
pusha
inc
out
mov
xor
mov
fisttps
or
xchg
mov
fst
push
rolb
out
cmp
xor
rcl
nop
add
lret
mov
dec
mov
cltd
jecxz
fimuls
xor
mov
daa
add
pop
ds
aad
sub
leave
aas
inc
out
xor
xor
add
cmp
fcmovnu
dec
or
xlat
inc
sbb
out
xchg
repnz
sarl
fadd
dec
cmp
repnz
xchg
loopne
or
testl
sarb
roll
div
rcl
mov
iret
ficoms
push
in
pop
mov
add
lahf
dec
jne
add
push
xchg
dec
add
arpl
dec
mov
sub
dec
mov
enter
stc
or
aad
push
lret
outsl
ss
mov
jmp
arpl
fdivl
aas
jb
xchg
mov
mov
fdivrl
push
lods
jnp
jp
push
mov
aam
adc
daa
cmp
test
cmpsb
idivb
xor
not
jecxz
pusha
stos
mov
gs
fiaddl
aad
enter
rcrb
xchg
movsl
sbb
imul
ljmp
lret
cmc
inc
xchg
or
test
int3
push
repnz
aad
clc
add
hlt
sbb
lods
testb
in
or
xchg
fimuls
sub
aad
imul
call
xchg
lret
dec
pop
mov
mov
or
jle
pop
insl
mov
leave
das
xchg
xor
adc
xor
bnd
into
mov
cmp
push
xchg
shl
dec
out
xchg
int
xchg
cli
cmp
ljmp
iret
cmp
or
push
cmp
mov
mov
mov
adc
mov
shll
leave
outsb
or
xchg
dec
cmp
mov
orb
testb
leave
mov
dec
or
out
aad
mov
xchg
dec
in
cs
or
or
jp
xor
pop
push
clc
mov
ds
mov
adc
rcr
add
push
dec
sub
aad
jl
push
insl
jg
lds
frstor
push
inc
push
add
or
or
lods
mov
das
scas
fdivrl
add
and
sub
fidivs
loopne
cmc
add
xor
xlat
je
out
mov
or
aad
pop
arpl
lret
mov
fcomi
mov
mov
push
push
insl
or
mov
sti
lds
sbb
xchg
cmp
das
push
pushf
mov
sbb
stos
lret
mov
dec
xor
sbb
ljmp
in
cld
mov
out
pop
movl
add
or
lret
lret
mov
imul
in
mov
lods
xor
sti
push
icebp
scas
aam
call
jmp
push
les
cmp
mov
push
out
in
in
xor
sbb
xlat
or
adc
cmp
push
insl
test
inc
jge
push
faddl
mov
pop
rcl
dec
or
jbe
in
inc
jb
int3
inc
into
mov
and
push
jbe
push
xchg
mov
mov
test
jbe
enter
mov
daa
fldt
gs
pop
and
loop
movsl
aam
aad
int3
mov
mov
mov
arpl
mov
rorl
iret
jnp
ljmp
xor
adc
mov
or
adc
fisttpll
mov
push
nop
cmp
or
jb
mov
pop
inc
out
shrl
fnstcw
repnz
mov
js
in
fimull
pop
inc
lods
out
mov
loope
aam
sti
out
mov
aad
mov
adc
add
cld
push
loope
sbb
cmp
test
loope
add
cmp
push
vandpd
mov
stos
adc
es
je
mov
test
mov
xlat
aad
stc
fcmovnu
test
in
out
mov
mov
push
into
dec
daa
mov
jl
into
jbe
or
cmc
xorl
mov
iret
out
dec
out
imul
xchg
mov
mov
jnp
pop
inc
pop
out
fsubp
scas
push
scas
or
movsb
mov
dec
cmp
fidivrs
scas
rcr
push
mov
adc
mov
outsb
mov
dec
mov
push
call
int
mov
add
cmpsl
into
xchg
int
in
sub
imul
jmp
jmp
repz
shrl
scas
jnp
mov
pop
ss
push
dec
mov
das
lahf
iret
repz
mov
mov
and
jl
or
out
lret
fldl
fcmovne
fidivrl
xchg
xchg
popf
sbb
lret
addr16
out
jecxz
idivl
xchg
repz
sti
pop
add
int
rcrl
add
leave
call
dec
mov
dec
cmp
or
sub
mov
mov
pusha
out
out
mov
or
or
jmp
scas
in
out
pxor
shrl
aas
repz
hlt
jmp
div
cmp
stc
or
cld
jmp
fldl
testb
or
push
or
aad
loop
jecxz
in
in
out
cmp
notb
add
imul
movsl
pop
ud2
out
or
lret
in
inc
push
in
mov
adc
lret
pop
in
popf
lods
pop
inc
aad
xor
enter
data16
sarb
out
scas
mov
jnp
shl
add
mov
divb
dec
jne
cmc
or
repz
loopne
ds
scas
jbe
pop
aas
out
fsubrp
inc
ljmp
cmp
out
insl
loope
lock
jne
mov
mov
mov
test
call
xor
sbb
mov
or
pusha
iret
testl
rol
hlt
xchg
push
dec
lods
mov
lret
jecxz
out
jae
stos
ds
mov
bound
scas
std
repz
in
xor
stc
xchg
out
xlat
out
mov
fxam
mov
fbstp
pop
dec
push
mov
xchg
mov
bound
mov
ja
jecxz
out
mov
js
push
sub
inc
sbb
mov
or
push
scas
or
jae
imul
outsl
fsts
aad
mov
ja
shl
fsubrs
pop
jge
xchg
out
pop
into
arpl
loope
fdivl
sbb
jle
push
cmp
lret
lea
cltd
into
rcll
outsl
aam
lock
iret
xchg
fwait
cld
dec
enter
add
xlat
push
fmulp
mov
xor
popl
mov
lahf
mov
push
psrld
popa
inc
pop
or
filds
loopew
fisttps
pop
adc
pop
pushw
std
fldl
mov
jg
dec
or
aad
insb
sti
stos
stc
scas
adc
mov
aad
pusha
add
xchg
push
mov
lods
push
mov
rorb
jb
pop
adc
aaa
imul
add
test
mov
inc
bound
loope
std
mov
mov
test
mov
mov
cmp
dec
clc
mov
lret
sbb
into
and
aad
sbb
sahf
jb
mov
mov
xchg
out
out
cwtl
iret
cmp
aam
dec
sbbb
and
fadds
jp
mov
scas
jae
pop
div
daa
int
out
sbb
out
aad
add
mov
mov
or
mov
inc
adc
mov
aad
jge
sarl
lea
mov
loop
xchg
out
or
andl
popa
sar
or
fidivs
fisttpll
test
test
out
cli
into
and
push
in
adc
call
aad
and
add
xchg
or
jmp
xchg
or
ja
aam
insl
mov
orl
and
pop
mov
sbb
xor
test
mov
out
dec
sti
std
cmp
cmp
cmp
sbb
and
mov
jnp
adc
xchg
pop
jne
movsb
push
mov
arpl
bound
decb
and
outsl
outsl
int
xchg
aad
pop
in
xchg
shr
testl
lea
out
cmp
movsb
sub
sub
mov
sbb
sbb
clc
nop
adc
outsl
fsubs
and
adc
sti
lods
shl
les
mov
dec
js
pop
cs
mov
daa
jmp
push
mov
aad
loope
mov
lods
in
pop
or
call
sbb
subb
sbb
add
adc
mov
inc
xchg
or
mov
in
in
adc
add
jle
mov
in
dec
push
xchg
inc
dec
cmc
add
pop
add
and
xchg
out
push
movsl
call
or
fildl
aas
mov
cmp
out
outsl
mov
in
daa
dec
jne
popa
out
sti
inc
sbb
frstor
fisubrs
leave
shlb
jmp
mov
loopne
adc
push
inc
add
mov
loopne
js
dec
aad
and
decl
xchg
sub
into
mov
adc
loope
cs
ss
pusha
xchg
jle
sbb
aad
in
or
sbb
and
sarb
xor
cli
stc
sbb
jne
sub
mov
out
aad
pop
pop
xlat
mov
repz
jle
cmpsb
out
add
lret
jbe
xchg
cli
push
lret
xor
dec
jge
sbbl
add
adc
fists
push
lret
nop
das
aad
inc
lea
lret
adc
fidivrl
pop
adc
outsl
out
inc
out
jmp
enter
xlat
ret
inc
and
repz
in
sbb
cmp
hlt
ja
or
fiadds
cmc
les
cmc
xchg
pop
or
pop
push
lock
mov
xlat
mov
sbb
fisttpll
cltd
aad
stc
or
test
loop
mov
dec
or
out
jne
scas
add
xor
sti
int
hlt
test
lds
mov
add
lods
cmc
and
sti
lret
mov
int
inc
mov
dec
scas
push
lods
and
lods
outsl
xor
cmp
mov
or
adc
inc
mov
xlat
xlat
mov
inc
ficoml
in
mov
out
jns
mov
call
push
cmp
push
ret
sbb
pop
jmp
das
jnp
repz
jne
aas
pusha
popa
cwtl
dec
lret
ficomps
pop
pop
sbb
jge
dec
adc
or
imul
sbb
push
addl
lahf
jne
xchg
adc
hlt
aad
add
mov
push
outsl
mov
rcrl
cmpb
mov
jp
xchg
add
ffreep
or
cs
sub
lea
jb
jae
test
sbb
pop
dec
lds
out
pop
or
dec
or
inc
mov
lea
add
nop
cmova
sub
in
jg
in
or
fldl
xor
push
sub
mov
pusha
out
and
lahf
mov
aad
xor
xchg
aad
stos
xchg
sbb
ror
fmull
in
shrb
xor
cmp
sbb
aas
repnz
lds
stos
jp
paddsb
xchg
sub
sbb
sti
ljmp
or
ret
lods
lret
and
pop
test
out
cmp
and
fiaddl
or
cmc
push
push
sub
les
aad
fimuls
xchg
push
xchg
cmp
mov
jl
ret
into
pop
cltd
lret
mov
jo
mov
sarb
or
cmp
xchg
movsl
cltd
and
mov
iret
sahf
cs
stc
loopne
sub
mov
cs
xor
out
cmp
stc
iret
mov
or
fstps
xchg
xor
sub
mov
add
or
dec
jb
in
imul
inc
pop
in
ljmp
aas
in
push
jp
adc
pop
cs
mov
add
dec
xchg
aad
call
sahf
add
lret
or
inc
imul
hlt
movb
dec
or
xchg
or
loope
lea
insl
scas
mov
addr16
scas
push
movsl
mov
or
xlat
inc
add
dec
jl
in
stos
aad
test
out
sar
add
aad
mov
fistpl
cmp
sti
mov
and
dec
lcall
scas
cmpsb
lods
jp
jg
cmc
addb
scas
mov
add
jp
or
xchg
dec
mov
add
mov
js
paddd
aad
jp
loopne
ja
dec
pushf
mov
aas
out
subl
jae
pop
loop
movsb
fisubs
cwtl
movsl
jno
push
icebp
cwtl
gs
out
aad
andb
push
xchg
or
push
loop
cmp
jb
mov
xor
mov
sar
popf
out
or
into
mov
xchg
in
add
and
mov
xchg
out
out
mov
or
int
test
mov
pop
loop
jbe
adc
arpl
sti
nop
gs
or
push
cmpsl
xor
mov
mov
andb
mov
dec
sbb
arpl
pop
in
xchg
mov
icebp
mov
sbb
lods
or
into
mov
rcr
pop
frstor
mov
stos
int3
int
add
cmp
add
das
xor
repnz
jmp
outsl
aas
lret
add
stos
sbb
xchg
popf
inc
mov
cmpsb
adc
out
mov
sbb
decb
ljmp
insl
shll
cltd
xor
cmp
ja
ljmp
pusha
sub
inc
mov
adc
mov
or
shlb
pop
and
leave
xchg
lcall
jg
cmp
lcall
or
inc
ja
dec
cltd
cwtd
mov
jne
roll
clc
pop
xchg
jne
scas
jmp
out
data16
adc
lahf
sub
repz
cli
je
hlt
push
xor
addr16
xchg
jmp
mov
fcoml
pop
jmp
sti
mov
test
sti
into
dec
push
fmul
or
dec
dec
dec
push
int
adc
shrb
push
jnp
dec
psllq
xchg
sbb
mov
out
cwtl
movsb
mov
sbb
arpl
enter
mov
push
add
xor
xorb
ds
cld
sub
mov
cmpsb
or
pop
outsb
mov
divps
adc
out
jp
inc
mov
mov
or
out
popf
out
add
mov
lock
ja
jne
mov
mov
in
cmc
test
push
xchg
or
jb
inc
call
and
or
in
rolb
mov
ljmp
aad
sbb
loopne
xchg
sbb
out
lods
xor
dec
adc
fucomip
inc
in
jae
sbb
in
leave
jmp
ljmp
jl
mov
cmp
jmp
push
jb
pop
adc
mov
cmp
arpl
jo
or
gs
lock
and
or
jecxz
shrb
dec
mov
push
icebp
into
jg
mov
jb
adc
jp
aad
or
aaa
push
mov
mov
mov
out
ds
test
scas
aaa
sub
aaa
nop
push
xchg
adc
sahf
fs
das
aad
test
cwtl
test
cmp
in
repz
invlpg
int
repnz
mov
aad
das
dec
cmp
nop
ret
loope
lods
mov
dec
jmp
ficoml
stos
fadds
push
call
lods
jne
shlb
jle
jmp
imul
mov
lret
cmp
fldl
fldl
sbb
add
stos
decb
sbb
gs
ljmp
into
popf
jbe
mov
sbb
lret
out
xchg
mov
mov
mov
sub
aam
aaa
mov
out
std
mov
imul
cli
sti
mov
rorb
orb
addb
mov
pop
xor
add
xchg
and
xchg
aad
pop
xrelease
aas
in
int3
std
push
dec
mov
insl
inc
inc
mov
or
stos
in
lods
subb
sbb
divl
outsl
incl
jnp
ss
movq
mov
sub
in
loop
ja
mov
jge
dec
mov
inc
in
add
adc
imul
inc
idiv
xorb
push
loope
dec
shr
aas
xor
jo
lods
mov
adc
stos
inc
stc
pop
notb
lahf
adc
mov
jo
out
and
icebp
fstpt
aad
popf
push
dec
and
fdivs
or
loop
jge
mov
and
or
loopne
xor
stos
mov
scas
ja
xor
dec
aad
in
or
inc
rorl
icebp
push
mov
popa
dec
dec
pop
das
xchg
int
inc
je
aad
pop
lret
push
insl
add
inc
add
flds
icebp
scas
jg
jb
in
bound
xor
fistl
cmpsb
pop
or
movsl
or
or
ja
inc
repz
roll
xor
lret
mov
out
fwait
loope
enter
icebp
xor
in
repz
loopne
or
aad
mov
cmpsb
jg
sub
mov
inc
xchg
aam
mov
loop
movl
mov
cwtl
lret
push
shrb
jg
movsl
or
xlat
jecxz
js
add
sahf
mov
cli
jecxz
lret
dec
sub
in
dec
lea
jo
into
inc
inc
bound
je
mov
icebp
sbb
scas
add
xor
inc
push
or
jb
out
push
outsl
sbb
dec
pusha
pushf
bound
aaa
mov
lahf
movsb
cmp
mov
mov
shl
mov
cli
push
fcmovnu
mov
jne
mov
mov
je
jle
add
pop
lock
outsb
mov
clc
mov
jg
xor
cs
pop
leave
into
push
push
jecxz
dec
mov
out
jne
jecxz
xchg
mov
decb
pop
inc
repz
jmp
mov
cmp
arpl
lret
je
jb
repz
xor
out
pop
dec
xlat
xlat
lods
mov
int
dec
mov
inc
leave
mov
paddusb
lock
or
cltd
fmull
push
jecxz
loope
loopne
adc
fcom
sub
inc
std
lea
adc
les
sub
inc
xchg
xchg
mov
fimuls
jno
or
hlt
xchg
lcall
scas
or
jnp
lcall
hlt
int3
xlat
subl
ret
mov
test
fisubs
inc
or
jno
xchg
aas
jne
aad
scas
repz
jno
xchg
out
fcomps
stc
movsl
and
xor
jge
arpl
mov
xor
fsubrp
jno
mov
andb
jecxz
xchg
inc
sti
mov
mov
in
pop
icebp
inc
icebp
xchg
adc
sbb
inc
sbb
add
fisubs
into
inc
mov
xchg
sub
adc
in
shlb
pop
outsb
into
fsubl
or
dec
gs
or
or
inc
pop
loopne
cwtl
in
into
mov
enter
and
jl
bound
xorb
pop
sub
daa
or
ja
test
inc
jo
std
xor
jmp
les
xchg
adc
inc
popa
cld
subb
stos
test
aam
bound
jbe
stc
rclb
nop
lret
rolb
mov
jp
fnsave
mov
out
lret
xor
pop
or
movb
jnp
shrb
scas
push
push
je
iret
xchg
sahf
mov
jg
movsl
test
xor
jp
pop
in
enter
pop
pop
nop
test
inc
dec
mov
xor
into
fisttpl
test
mov
inc
call
mov
rcrb
push
jae
dec
outsl
out
cltd
rcrb
jecxz
int3
xor
xor
sub
jmp
int
mov
js
sbb
into
aad
imul
fimull
or
mov
je
cmp
movsl
mov
popa
dec
cmc
fidivs
fsub
pop
mov
push
divb
insb
add
cwtl
adc
sti
cmp
popf
pop
xchg
pop
cmp
dec
aad
stc
ds
sub
xchg
mov
and
xor
jg
xor
mov
lret
xchg
lds
fst
out
xchg
adc
sub
aad
ds
rclb
or
ja
out
aad
dec
pop
jecxz
cmp
mov
dec
jb
push
xor
ficomps
divb
push
lock
push
push
mov
jno
aad
inc
jmp
mov
jl
out
daa
int
xchg
and
cmovbe
mov
xor
fdivl
inc
dec
push
out
out
jno
fisubrs
xor
inc
push
scas
or
or
fidivrs
xchg
dec
ja
jg
into
dec
sbb
shrb
std
dec
paddq
repnz
cld
js
lahf
dec
lods
popa
iret
iret
xchg
daa
pop
sub
fwait
ljmp
mov
gs
lods
sub
fisttps
jmp
xchg
enter
push
fistl
rcl
outsl
add
mov
lock
xchg
js
repnz
and
push
inc
jo
cmpsl
xchg
clc
xchg
jge
xchg
push
or
jecxz
push
or
shrl
mov
xchg
mov
jo
idivl
xchg
pop
xchg
mov
inc
pop
nop
add
repz
jp
sbb
jle
rol
jle
xchg
out
mov
xchg
jbe
mov
pop
xchg
adc
scas
and
mov
je
cmpsl
fidivrl
xchg
dec
or
aas
mov
mov
in
jg
movsl
in
cmpsb
insl
enter
xchg
dec
inc
or
addr16
cmc
add
fcmovbe
mov
push
sbb
decb
je
sbb
in
std
push
xor
jp
nop
aad
pop
fcomps
aam
arpl
xchg
lock
aad
mov
lret
or
popf
pop
stos
iret
lea
shld
or
push
lea
in
into
fsubs
int3
mov
ret
add
adc
cwtl
lret
mov
sbb
scas
mov
jmp
sub
into
sbb
cmp
ret
jbe
adc
jle
inc
mov
pop
inc
cmc
ljmp
leave
testl
inc
enter
out
inc
dec
pop
dec
test
loop
push
push
pop
adc
or
xor
fcmove
pop
in
loopne
rcl
sub
xor
or
sahf
shlb
mov
dec
or
pushf
or
or
lods
dec
and
or
aad
add
inc
mov
aam
cwtl
cmpsl
jp
insb
pop
jg
sub
ljmp
out
andps
out
mov
xchg
dec
fucomp
jmp
out
mov
add
push
dec
mov
jp
scas
dec
cmpsl
orb
xchg
dec
out
xchg
into
adc
and
testl
and
mov
cmp
xchg
fldl
lret
decb
fimull
mov
xchg
mov
xchg
sub
sbb
jmp
adc
in
sub
pop
push
jo
or
cld
lahf
jmp
aad
mov
test
jno
popa
xor
or
or
jp
and
mov
push
mov
movb
aad
out
lahf
outsb
stc
mov
addr16
jnp
mov
lret
pop
pcmpgtb
or
test
clc
add
sub
inc
lret
test
push
push
ret
dec
add
or
add
aam
lods
mov
orl
xchg
aad
pop
stos
lahf
or
mov
jmp
mov
add
insl
stc
mov
fucompp
flds
test
lcall
and
std
jo
aad
int
mov
imul
lret
fs
fmuls
in
mov
outsl
popa
loope
mov
mov
pushf
mov
mov
sub
sbb
sbb
divl
adc
outsl
sbb
or
pop
lcall
push
xchg
xchg
sarb
hlt
call
loop
inc
cmc
sbb
popa
xchg
ljmp
popa
xchg
in
dec
loope
sub
in
popa
xchg
out
dec
mov
adc
push
std
and
cmc
icebp
dec
popa
mov
inc
or
stos
mov
lods
stos
mov
adc
js
mov
lcall
inc
mov
mov
sti
push
mov
inc
icebp
in
in
aad
js
jmp
jle
inc
ljmp
add
push
call
rorl
inc
out
push
mov
lcall
mov
or
sahf
imul
ss
sub
in
clc
fdivp
ja
ret
cmc
or
in
and
pop
test
cmp
or
mov
into
fdivrl
xchg
fwait
in
xchg
xor
adc
mov
fdivrl
mov
bswap
inc
rorb
test
push
fstl
mov
mov
movsbl
sti
idivl
mov
pusha
xor
mov
aad
dec
or
mov
icebp
mov
loop
push
stos
cmp
jmp
and
ljmp
push
sbb
das
adc
push
scas
pop
fcmovnb
push
sub
or
pop
in
add
inc
sbb
insb
sbb
nop
inc
and
ljmp
aad
push
jae
aad
test
outsb
test
or
cmp
aaa
sub
test
jnp
enter
shrl
or
popf
mov
cmc
cltd
and
inc
loope
pushf
cmpsl
pop
js
pop
mov
popf
xor
je
xchg
xchg
xchg
pop
in
mov
aas
add
out
nop
jmp
mov
loope
cmp
mov
lods
mov
lret
dec
and
aad
cmc
dec
test
or
lea
in
mov
shl
scas
dec
clc
jl
out
rcl
mov
pop
push
or
aad
outsw
sahf
sbb
inc
movsl
insl
cmp
sub
aad
je
mov
std
push
mov
pop
or
insl
mov
sbb
mov
repz
xor
sub
aad
imul
xchg
leave
dec
test
xchg
jle
mov
xor
jmp
scas
sti
aad
rorb
outsb
repz
push
mov
add
sbbb
ficompl
fisubs
mov
ds
mov
jg
in
dec
aad
fwait
sarl
inc
pop
xchg
pop
pop
je
push
or
or
jns
enter
ljmp
sbbl
and
scas
push
lods
jo
sti
mov
or
xor
add
mov
mov
cmp
or
aam
cmp
xchg
sti
in
adc
inc
repnz
sarl
hlt
cmp
mov
popa
xchg
ror
sub
mov
add
jmp
sti
xor
jp
sub
jmp
push
lea
jp
out
je
jmp
add
lret
and
movsl
pop
mov
popa
xchg
lcall
mov
in
sbb
push
sub
ret
cmp
ret
scas
rcr
inc
and
aad
push
push
mov
push
cmp
sub
jnp
xchg
xlat
ret
xor
in
or
call
or
in
mov
sarl
or
dec
sub
shl
adc
sbb
aam
mov
fsubrs
or
mov
mov
push
fcomps
cmp
fxch
cmp
ljmp
cwtl
push
scas
pop
xchg
xchg
or
insl
dec
mov
js
das
fnstsw
push
adc
into
mov
movsb
outsl
std
pop
js
push
sbb
sub
iret
les
mov
mov
pop
int
ljmp
or
jbe
jmp
int3
dec
out
dec
out
or
xchg
imul
cmpsl
jp
sbb
pop
sbb
sbb
sub
inc
sbb
sub
iret
out
imul
jb
out
out
jg
xor
imul
jnp
jbe
push
mov
aad
jecxz
aad
add
pop
imulb
ja
jnp
add
loopne
aam
or
fcmovb
sarb
leave
insb
in
lock
jno
daa
fidivrl
sti
dec
icebp
ret
int
pop
mov
fisubrl
fnstsw
inc
iret
xchg
push
jg
adc
lahf
add
dec
or
icebp
incb
iret
repnz
icebp
movsl
stc
push
sbb
jo
mov
push
jno
add
and
pop
xchg
pop
out
dec
cmc
lock
cltd
dec
testb
in
mov
int
pop
xchg
call
dec
andl
pop
fcmovnb
pop
les
in
pop
jmp
xchg
mov
pushw
cmpsb
jnp
xchg
mov
cld
dec
std
icebp
jns
push
mov
mov
adc
adc
cmc
sbb
cmp
add
mov
jecxz
mov
fidivs
xor
add
pushf
sbb
jae
push
xchg
or
or
ret
repz
jle
and
clc
ss
or
sbb
lret
lcall
jle
and
cli
jns
jp
aad
inc
dec
or
inc
push
fcmovnbe
imull
and
shl
dec
jg
in
jle
xchg
loopne
lret
aaa
mov
mov
pop
iret
pop
aam
fidivs
lret
fidivl
lret
push
fs
xlat
pushf
push
or
aad
jmp
and
aam
inc
popf
imul
stos
outsl
iret
fmulp
stos
pushf
ja
add
in
pxor
rorb
xor
out
rorb
pop
mov
out
jle
pusha
inc
push
rorl
ss
jle
push
add
lods
jb
dec
das
mov
add
sti
out
repz
push
stos
iret
pushf
fs
push
dec
jnp
push
dec
push
mov
sbb
fisttpll
sbb
rorb
inc
mov
imul
out
scas
push
sbb
imul
inc
clc
ja
jge
popa
pop
dec
lahf
aad
popf
mov
imul
xor
dec
inc
out
int3
sysenter
mov
cmp
push
iret
dec
cmp
xor
lock
in
mov
jb
enter
out
pop
dec
mov
and
cli
add
push
mov
jo
or
dec
mov
mov
lods
scas
mov
push
fcoms
cli
lds
xchg
aad
cwtl
gs
mov
out
add
gs
popf
into
adc
jg
vmaxss
pop
add
fimuls
test
fs
nop
push
sar
inc
rep
fidivl
scas
jnp
sub
pusha
adc
lods
dec
js
mov
jnp
mov
pop
adc
cwtl
xchg
clc
dec
pop
roll
lret
rorb
out
mov
mov
loopne
popa
sub
push
dec
aad
add
into
lret
shrl
pop
push
xorl
push
mov
push
scas
mov
xchg
push
mov
dec
stc
mov
mov
movsb
sbb
cmp
repnz
outsl
dec
aam
lods
xchg
inc
loopne
jns
sub
mov
in
jge
ljmp
aad
stc
push
mov
jne
sbb
inc
int
xchg
mov
out
scas
sti
aad
add
stos
mov
xlat
mov
and
ret
dec
pop
fsubs
cwtl
dec
jb
sub
in
cld
cmpsl
sub
jl
push
sbb
in
dec
scas
fadd
leave
je
int3
cmp
js
shrb
xchg
mov
int3
jno
mov
mov
cmpsb
xor
rorb
daa
mov
lods
movsl
or
cmp
add
cltd
mov
insb
dec
mov
stc
out
clc
gs
pop
lret
scas
xor
test
decb
fisttpl
fnstenv
leave
push
and
nop
in
loope
add
adc
dec
adc
pop
xchg
into
cld
inc
or
dec
push
and
das
ljmp
in
scas
mov
jp
addr16
xchg
fsin
or
adc
cmp
xchg
sahf
repnz
pop
pop
mov
ds
rorl
xchg
cmpsl
dec
rol
fcomip
stc
mov
xor
aad
sub
xlat
fsub
xor
dec
out
xchg
sub
fiadds
inc
test
movsl
jg
in
adc
fistpl
mov
je
scas
in
xor
cmp
inc
lock
mov
push
or
ss
push
pusha
rorb
imul
push
sahf
add
and
mov
dec
fisttpl
into
push
call
sbb
mov
dec
scas
jne
imull
xchg
and
cmp
mov
push
jbe
in
inc
push
fdivrl
mov
push
xchg
imul
stc
mov
cs
sbb
int3
jecxz
aad
je
or
sub
shr
jp
dec
push
int
sub
jmp
add
in
cmp
sub
test
imul
lahf
sbb
cld
fs
mov
sub
pop
loopne
or
push
lods
fidivrs
sub
into
xchg
jle
push
fisubl
jle
fsubrl
fldcw
pusha
jg
cld
mov
add
sub
push
incb
dec
add
xchg
imul
xor
push
in
lret
dec
enter
outsb
jle
fmulp
mov
add
cmp
aad
out
ds
adc
pusha
sti
and
ja
out
shll
fsubp
pop
inc
xlat
add
cwtl
jge
cmp
rorb
or
clc
movsb
mov
in
sbb
and
in
or
inc
stc
push
cmp
ror
enter
xor
faddl
dec
aad
bound
shrl
fidivrs
dec
pop
sub
inc
dec
and
adc
imul
bound
or
aas
aad
lea
pop
xchg
in
jge
jne
xchg
jg
outsl
pop
rorb
or
leave
movb
lods
xchg
adc
cmp
dec
cmp
sbb
gs
std
mov
daa
add
and
inc
push
dec
rcl
cmp
or
pop
mul
adc
mov
shll
ds
addb
xchg
das
aad
aas
mov
inc
shll
mov
aad
outsb
mov
jg
hlt
mov
pop
sub
push
adc
or
or
dec
je
mov
dec
push
pop
int3
cvtpi2ps
rcr
das
movsl
stos
out
push
repnz
call
dec
adc
into
or
mov
lret
fimuls
dec
dec
or
pop
dec
repnz
lret
seto
test
in
ret
aad
sbb
and
mov
mov
pop
dec
inc
dec
outsl
dec
mov
in
in
dec
aad
pop
or
lret
int3
jns
sub
xchg
cli
sub
decb
dec
pop
aad
insl
lahf
dec
xor
cs
stc
scas
clc
add
mov
pop
add
ret
cltd
leave
mov
sarb
out
fs
and
test
or
adc
jp
cs
cmp
push
dec
adc
inc
dec
aad
mov
mov
popf
aam
ja
xchg
rclb
gs
scas
and
idiv
arpl
cmp
xchg
push
inc
lea
fwait
push
cmpsb
dec
loope
mov
rcll
inc
cmc
dec
adcb
push
insb
movsl
out
xchg
pop
xchg
inc
inc
dec
inc
adc
rolb
scas
jnp
scas
insl
lock
add
and
ss
sub
scas
add
lret
fmuls
stos
fimuls
inc
pop
dec
mov
mov
jmp
or
dec
repz
lock
push
test
stos
cltd
aas
mov
fcoms
xchg
jb
push
test
addb
sti
add
out
loop
xlat
imul
cmpsl
push
xchg
mov
test
jnp
loopne
cs
cmp
pop
roll
jl
sbb
dec
stos
das
nop
cmpsb
dec
icebp
in
test
pop
lods
jmp
mov
in
add
lea
xchg
cmpsl
pop
pop
orl
or
xchg
mov
mov
jnp
dec
fsts
stc
fdivrl
jnp
jmp
mov
lret
dec
push
cmpsl
dec
adc
fbstp
rsm
clc
divb
addr16
lret
sub
or
mov
movb
mov
push
dec
jno
loope
xchg
or
inc
push
pop
lcall
jle
add
mov
rcll
sbb
test
aad
xor
clc
xor
xor
mov
cli
fidivrs
mov
cld
ds
push
jl
sbb
sub
stos
fisubl
push
arpl
mov
xor
jne
jle
add
cwtl
push
mov
jnp
lds
mull
sub
cld
mov
loopne
xchg
mov
push
sti
in
js
mov
mov
or
cld
sti
nop
jmp
and
mov
jae
js
push
jae
es
xlat
daa
sub
cld
scas
jno
mov
jp
fmuls
push
mov
cmc
stc
jl
push
cmc
ss
fs
sbbb
das
push
leave
mov
insb
lcall
pop
clc
xchg
jecxz
push
jp
aad
movsl
jmp
jne
aad
icebp
xor
stos
jge
inc
clc
mov
arpl
mov
dec
aad
mov
add
fs
insl
mov
push
jmp
mov
fisttpll
inc
dec
jge
dec
push
notl
cvtps2pi
and
dec
mov
mov
cmpsb
inc
popa
insl
cmp
xor
iret
adc
or
int
dec
test
adc
pop
or
push
ja
jle
lock
rorb
push
dec
cmp
fildl
es
push
lret
lods
in
mov
scas
sti
jnp
inc
add
lret
loope
cmpsl
jo
lret
movsl
lods
mov
std
mov
adc
aam
sti
cmp
jae
aam
mov
dec
dec
movups
rorl
scas
jge
pop
dec
jns
xchg
cli
xchg
decb
sbb
lret
mov
and
sub
inc
jecxz
iret
or
insb
push
dec
out
and
les
dec
lret
xor
xchg
lcall
fs
xlat
cs
xchg
lea
pushf
js
out
dec
cmp
enter
or
mov
or
iret
fs
aad
inc
mov
js
arpl
aad
push
repz
jle
mov
pusha
add
adc
dec
mov
decl
xchg
push
inc
mov
mov
add
int3
popf
in
test
test
inc
push
out
cmpsb
aad
in
push
push
movsl
icebp
scas
jp
push
jmp
inc
jge
cmp
outsl
xchg
xorl
test
xor
aad
push
sbbl
mov
lret
jno
mov
sti
out
cmpb
enter
jp
inc
mov
mov
add
shl
dec
pop
or
and
int3
shlb
or
shrb
push
out
jge
xor
stos
outsl
pop
leave
mov
popf
andl
mov
imul
jl
aam
pusha
cmp
sbb
scas
and
ja
dec
mov
or
dec
adc
sbb
mov
nop
imull
lahf
test
jnp
dec
add
addr16
sub
inc
sbb
push
jg
ficoms
add
out
test
lcall
xor
pop
sti
aad
cld
test
xchg
sbb
jg
out
and
les
out
in
inc
shll
out
cwtl
and
jecxz
jle
and
test
aad
clc
mov
test
ja
mov
out
dec
dec
add
adc
and
and
call
or
jge
fs
aad
sbb
pusha
dec
push
aad
or
movl
call
js
sbb
aas
lret
pop
or
outsl
xor
fwait
rclb
pop
xchg
xchg
sbb
xchg
in
aas
scas
int
cmp
cs
push
pop
addb
test
pop
jnp
push
mov
adc
sbb
mov
in
rol
pop
xchg
outsl
pop
push
mov
pop
xor
push
add
bound
aad
test
fsts
mov
jmp
outsb
dec
jnp
lods
xor
rcrl
in
adcl
mov
adc
mov
and
cld
jae
loopne
push
mov
adc
enter
call
cwtl
out
sub
jg
or
stos
xchg
mov
fmuls
xor
lret
pop
push
fmul
cmp
xorl
lahf
test
cli
dec
testl
lods
cmp
stc
scas
inc
cmp
jp
movsb
mov
outsl
addr16
mov
paddusb
sbb
dec
fisttps
adc
xchg
ja
movsl
xlat
dec
and
jecxz
sbb
mov
popa
pop
stc
or
adc
push
push
dec
pop
les
std
jle
xchg
add
add
dec
scas
std
xchg
ja
pop
aad
or
add
leave
int
dec
cmp
jmp
dec
cmp
divl
mov
and
aas
lret
push
mov
gs
sahf
cwtl
lret
shll
adcb
and
cmpl
mov
out
lds
dec
pushf
mov
or
arpl
jl
mov
pop
stos
insb
in
in
jmp
out
and
cli
or
insb
xchg
push
xor
jle
inc
add
mov
jae
shll
add
fwait
inc
adc
add
aas
out
loope
sub
out
fidivrs
mov
out
outsl
mov
pop
push
mov
in
out
jmp
ljmp
and
add
les
jmp
mov
pop
out
pop
xorb
mov
std
push
mov
test
pop
loopne
jge
mov
or
cmp
lret
outsb
addb
dec
repnz
lret
add
int3
dec
add
aad
dec
pop
orb
cwtl
xchg
test
dec
insb
sbb
enter
cmp
mov
inc
scas
jecxz
add
dec
inc
mov
sarb
shll
mov
push
jp
imul
or
jmp
fldcw
and
lahf
aad
leave
jg
mov
test
sub
scas
not
inc
popa
or
add
sub
and
sti
ret
bswap
popf
dec
or
outsl
cmp
into
lods
loope
pop
sbb
dec
stos
stos
mov
jnp
stos
pop
test
lea
adc
push
push
fcmovu
movsb
mov
out
xchg
xchg
scas
jmp
aad
aad
dec
scas
jne
int
cld
fcoms
adc
pushf
repnz
cmpb
mov
xchg
daa
mov
add
lcall
lret
insl
add
mov
inc
stc
test
repz
mov
jp
xchg
add
repz
ror
mov
dec
loop
xchg
lea
mov
cwtl
popf
jge
mov
cmp
scas
or
inc
push
add
arpl
outsb
sub
or
les
js
xor
mov
xchg
addr16
and
aam
xchg
test
fucom
pop
or
cmp
xor
sbb
xor
dec
cltd
imul
cmp
ljmp
setle
xlat
or
ds
fisttpll
push
imul
mov
or
mov
mov
outsb
test
movsb
xor
ds
les
jmp
out
pop
jns
fs
cmc
fstpt
add
mov
mov
aam
push
out
xlat
scas
scas
lret
call
rorb
lods
into
push
xor
mov
xchg
fisttpl
mov
push
jb
adc
or
in
xchg
mov
jmp
dec
fld
jecxz
jmp
cmp
mov
repnz
pushf
stc
into
push
mov
add
push
ds
pop
push
rcl
subl
lcall
sub
mov
call
imul
fmull
sarl
int
jge
dec
mov
bound
scas
lret
jns
movsl
fiaddl
repnz
fwait
xor
dec
les
jbe
in
js
insl
aad
call
pusha
push
leave
ja
or
xor
dec
and
cmp
rolb
cwtl
or
xor
dec
aad
cmpsl
int3
outsl
mov
mov
push
repnz
fwait
repnz
xor
or
mov
ljmp
cmpsl
adc
fst
es
xchg
icebp
and
cs
test
lret
mov
jnp
adc
add
mov
out
mov
int3
mov
sbb
aas
scas
jne
pop
xchg
nop
mov
inc
mov
and
lahf
aas
or
dec
scas
cmp
aad
hlt
dec
push
js
icebp
popa
out
js
shll
stc
in
dec
mov
lret
dec
leave
push
out
add
jmp
lock
mov
loop
or
sahf
mov
mulb
cmp
jp
scas
in
xchg
dec
ja
pushl
inc
and
shrb
cmpsb
out
cli
xchg
ss
sub
sarb
mov
cmpsl
test
aad
xlat
movntq
or
lahf
mov
jecxz
jnp
repz
aas
mov
jns
cmpsl
sub
lret
jg
add
adc
adc
in
cmp
or
dec
push
mov
testb
fnstenv
pop
ret
das
push
xchg
or
dec
aad
sbb
lret
and
cs
outsl
or
fadds
jmp
lret
in
ds
gs
andb
sbb
aaa
test
mov
fucomp
xor
dec
mov
cmc
jecxz
jle
adc
inc
and
lds
in
add
fistpl
xchg
in
icebp
lahf
rolb
mov
xchg
pop
sbb
add
jo
jb
shll
xor
aas
mov
leave
mov
out
xchg
sti
adc
mov
outsl
gs
aad
jmp
bswap
sbbl
adc
repnz
push
aad
cmc
mov
cmpsb
adc
aad
mov
ljmp
or
xchg
ljmp
int
adc
and
fcmovne
lahf
ror
xchg
dec
movsl
cmp
mov
inc
jp
popa
pop
and
xchg
sbb
mov
xchg
jmp
xor
arpl
sbb
insb
pop
in
pop
push
mov
incl
jbe
adc
movsl
int3
cmpsl
loopne,pt
push
mov
mov
xchg
or
or
and
cmp
test
pop
aas
ja
call
and
stc
cmp
outsb
pop
add
and
fsubp
outsl
test
pop
jmp
pusha
insb
fdivrl
add
imul
outsl
sbb
incb
repz
xor
dec
ds
mov
push
mov
and
dec
add
mov
pop
int3
sub
sub
pop
js
adc
and
mov
dec
mov
enter
dec
lods
jg
and
or
es
je
or
xchg
pop
daa
or
iret
out
fsubr
into
cmc
dec
jge
movsl
mov
mov
popa
aam
dec
pushf
aad
nop
push
xlat
sahf
fisttpl
dec
cmpsb
pusha
mov
ds
jg
dec
lret
jb
mov
mov
add
movsl
iret
jmp
les
push
loope
rclb
hlt
jecxz
inc
push
mov
pop
push
sbb
jbe
sub
iret
mov
dec
sahf
clc
and
pop
jle
int3
mov
jle
mov
lods
dec
xchg
scas
int
insl
mov
loop
or
mov
in
and
xor
jp
xor
adc
adc
mov
loop
test
ja
dec
ljmp
cltd
call
enter
cltd
sbb
mov
dec
mov
jl
pop
mov
imul
rclb
push
enter
aad
sbb
fisubrl
out
call
mov
adc
mov
cmp
into
popa
sti
das
mov
lret
int
enter
int3
testl
xchg
cmp
lret
push
xchg
iret
ljmp
rclb
loop
xor
fstpt
xchg
nop
push
movsb
fwait
push
jno
sub
cmp
jg
aas
dec
mov
cmpsl
jmp
jle
push
aam
push
cld
cltd
inc
dec
jp
dec
lret
pop
pop
xchg
out
push
xor
outsl
xchg
inc
pop
push
cltd
mov
movswl
mov
add
jl
pop
hlt
push
adc
mov
jmp
cltd
icebp
fstpl
jg
scas
dec
cld
jle
dec
pop
xchg
push
mov
pusha
sbb
mov
popa
mov
cwtl
loopne
das
push
ja
sbb
xchg
xchg
push
andl
sti
jae
pop
sbb
insl
lods
outsl
ja
pop
aad
pop
inc
cmp
imul
and
mov
add
ss
push
sbb
call
xchg
mov
push
jp
fisttpl
and
mov
mov
jb
icebp
mov
xlat
xor
out
jp
adc
ds
out
into
dec
jmp
ret
dec
arpl
stos
inc
cmp
dec
jmp
loopne
pop
out
or
mov
stos
sbb
mov
inc
repz
test
pop
or
pop
call
inc
dec
jp
in
cmpsl
push
pop
cmpsl
cmc
pop
lret
fidivrs
adc
push
lods
ret
pusha
cltd
sbb
cs
cld
mov
fistpl
test
jns
mov
je
sti
outsl
mov
sbb
push
insb
aaa
aad
or
sub
push
and
sti
mov
xchg
adc
pop
out
push
jmp
jno
sti
fxch
loopne
fiaddl
in
mov
jbe
inc
and
adc
xchg
xchg
dec
inc
sarb
pop
mov
scas
aam
xor
xor
mov
scas
fimuls
ljmp
aad
push
cwtl
scas
test
mov
fdiv
fimull
cmp
fmul
imul
jmp
or
test
mov
pop
or
mov
mov
inc
cmp
ror
loopne
jmp
xchg
in
or
push
cmp
or
daa
out
imul
lea
mov
out
mov
out
arpl
mov
sahf
dec
mov
cmp
dec
je
jb
stos
out
movsl
lahf
mov
jbe
mov
cmc
inc
mov
jg
jmp
add
jl
lcall
popf
int
jne
imul
aad
or
mov
pop
fstpt
fnsave
hlt
movsl
mov
loopne
xchg
jb
fadds
inc
jmp
cwtl
fld
pop
test
cld
cmc
aad
test
stc
sbb
test
adc
in
jmp
inc
or
and
mov
fstpt
pushf
mov
mov
in
dec
mov
aaa
jp
jnp
mov
pop
std
outsb
mov
loope
out
pop
add
push
mov
dec
in
lcall
sbb
push
or
mov
xor
or
pop
adc
cltd
test
jl
add
fxch
xlat
mov
cmp
aas
adc
mov
pop
decb
mov
mov
pop
orl
leave
or
pop
rorb
into
or
xchg
dec
lds
sahf
lods
mov
testb
fwait
jne
test
test
jns
ss
out
adc
movsb
inc
in
mov
stc
xchg
daa
sbbl
mov
test
lcall
sahf
sub
inc
inc
add
adc
mov
repnz
push
push
mov
jnp
in
jp
cmp
dec
jmp
fs
cmp
fdiv
movsb
cmp
cmp
fadd
aam
pop
and
setne
cmpsl
add
stc
fists
mov
or
shr
mov
lahf
loopne
jmp
or
cmp
jecxz
lcall
xchg
lret
test
mov
dec
rclb
mov
jnp
xor
mov
scas
loope
ret
mov
push
aaa
sti
scas
dec
mov
int
xchg
lahf
jns
mov
mov
aaa
jmp
pushf
fistps
mov
into
pop
test
inc
aaa
xlat
aad
imul
cmp
or
xchg
shr
xchg
mov
xchg
ficoms
add
mov
add
hlt
mov
mov
sub
jns
push
jbe
mov
sti
lock
or
insl
mov
push
xchg
repnz
cmp
fmul
inc
clc
imul
stos
mov
cmc
or
data16
jmp
sti
push
xor
pop
add
mov
test
aad
dec
arpl
mov
stos
fcmovbe
mov
fimull
fldpi
fcomp
xlat
repnz
inc
das
insb
das
rolb
sbb
jne
mov
in
add
scas
push
ret
xchg
inc
sbb
cmc
inc
movsl
int3
cmp
fisttps
or
fstp
outsb
jmp
loope
loop
jecxz
mov
in
out
out
call
jmp
pop
jnp
sbb
lret
xlat
leave
mov
add
popa
movsl
push
mov
inc
pop
rorb
lcall
subb
push
fcom
inc
aas
pop
arpl
lret
sub
or
push
fst
xlat
out
add
fistpll
sub
dec
fst
nop
jnp
or
das
adc
and
arpl
outsb
ljmp
aaa
push
mov
mov
xchg
or
dec
scas
push
icebp
dec
or
jecxz
dec
clc
mov
or
cmp
sub
mov
inc
push
mov
pop
cmp
cli
fidivrs
or
sahf
lret
aam
and
les
rcrb
rclb
xchg
or
arpl
jnp
mov
push
push
xor
daa
ljmp
sbb
pop
push
pop
dec
clc
dec
or
in
mov
fidivrs
jno
scas
loope
mov
or
cwtl
pop
jmp
or
or
xchg
mov
jae
cmc
pop
mov
lea
pop
orl
mov
jnp
dec
xor
xlat
aad
inc
dec
xlat
dec
in
clc
jnp
jns
mov
enter
out
jne
pop
into
loopne
push
mov
pop
mov
out
roll
xchg
into
push
add
pop
inc
into
aad
xchg
dec
in
xlat
repnz
loope
sti
aad
std
or
xchg
push
inc
sub
fldt
sub
xchg
arpl
int
inc
call
lds
jnp
mov
jp
xchg
mov
mov
mull
clc
mov
inc
mov
fidivrl
xchg
cmp
ljmp
jbe
insl
push
es
stos
pop
push
push
cmp
mov
cmc
jmp
outsl
daa
std
cltd
or
xor
xchg
neg
leave
fcompl
xchg
in
ds
cmp
fiadds
mov
dec
adc
sbb
xlat
in
fistpl
stos
push
mov
test
mov
mov
mov
stc
daa
jl
jae
in
mov
jmp
imulb
test
adc
and
outsl
dec
in
ljmp
test
loop
decl
xchg
lret
jmp
shll
stos
lret
cmpsb
cmp
push
cmc
fistpll
and
mov
lcall
mov
aad
out
cmp
xor
fsubrl
mov
popf
or
mov
jge
pop
xlat
xchg
into
iret
jne
jge
mov
iret
mov
enter
add
enter
dec
xchg
addr16
cmp
orl
xor
jg
mov
dec
in
xchg
lea
stos
test
flds
and
mov
mov
cld
scas
xor
fdivp
into
sub
ds
daa
jnp
in
test
mov
cmpsl
or
mov
mov
mull
cmpsl
push
fiaddl
cmpsl
aad
jp
sub
or
mov
cmpsb
jb
ret
add
cmpsb
ss
add
jmp
pop
sti
aad
mov
out
icebp
rcrl
daa
xchg
or
dec
fsubs
sub
dec
fmull
sub
test
incb
inc
push
dec
aad
lahf
mov
daa
add
or
dec
rcrl
aad
stos
clc
cs
mov
lret
int
cmp
push
mov
and
xor
jecxz
aad
jle
sahf
sbb
push
fldt
aad
and
outsl
jmp
mov
fdecstp
lds
lcall
or
decb
mov
bound
fcmovnu
fwait
add
add
imul
ficompl
dec
out
pop
test
repnz
stos
clc
cmp
inc
pop
and
inc
loopne
mov
int
iret
pop
das
cmp
mov
dec
jecxz
sub
xchg
jb
mov
imul
xor
loopne
fistl
leave
loope
call
mov
jnp
jg
lods
fnsave
and
mov
or
xor
cmp
dec
mov
fsubrl
jl
sub
out
pop
push
loopne
sub
int
adc
pop
xor
rol
jl
pop
cmpsb
mov
adc
and
mov
stos
push
imull
andl
int
bound
push
stos
mov
std
es
leave
jp
sbb
adc
std
add
in
shlb
outsb
mov
jae
cld
jae
lret
sbb
push
mov
pop
aam
mov
stos
stos
mov
ja
sbb
test
push
pop
int3
aam
sub
dec
add
inc
jbe
ror
mov
jmp
push
mov
adc
inc
ror
jae
cmp
cltd
xor
cld
mov
push
or
mov
inc
mov
jle
mov
lahf
pop
repnz
sub
mov
xlat
push
pop
and
sbb
shr
in
sub
sti
in
adc
inc
push
inc
rorl
jg
leave
in
lea
and
or
cmpsl
or
mov
shl
bswap
sti
jp
lods
dec
test
inc
dec
cmp
movsl
mov
ficomps
loopne
test
into
dec
andb
jns
insl
lea
or
pop
xchg
jp
xchg
movsl
xor
test
clc
into
loopne
shrl
lea
mov
repz
stos
cmp
aad
sarl
inc
mov
sarb
xor
pop
cmpsl
pop
imul
sahf
push
push
jno
sbb
loope
lods
incb
cmp
fldt
daa
or
in
sub
es
fwait
loope
push
repnz
jmp
std
bound
lret
pop
cmp
pop
aad
or
int3
mov
cmovl
adc
mov
sbbl
cmp
notb
rol
loope
insb
movsl
sbb
stos
pop
cmp
jo
gs
add
fs
xor
dec
push
and
bound
and
fimuls
cmp
sub
bnd
out
mov
ret
and
dec
jecxz
dec
aad
test
jbe
push
fstps
sbb
dec
lahf
jecxz
push
ficomps
arpl
mov
out
aad
add
or
scas
push
les
outsl
mov
imul
inc
or
add
sbb
dec
add
out
sub
addr16
fs
ret
or
stc
cmp
adc
cld
lahf
mov
repz
xorb
ljmp
in
pop
add
loop
call
inc
mov
out
ret
out
dec
aad
inc
mov
out
fidivs
loope
loop
and
out
pop
mov
inc
lcall
push
aam
or
mov
stc
jno
stos
dec
aad
dec
aad
fs
dec
orb
jp
fs
pop
loop
jmp
cld
test
xchg
pop
neg
out
rcl
lods
sub
loop
mov
js
mov
shrb
in
mov
mov
ljmp
jecxz
aad
inc
bswap
adc
jb
shll
mov
les
add
icebp
lock
leave
push
outsl
inc
xlat
dec
push
loop
sub
mov
pop
mov
xlat
out
aad
iret
shrb
sbb
aad
and
adc
mov
rcrb
adc
push
dec
add
in
dec
push
pop
dec
loope
pop
xchg
inc
adcb
jne
adc
or
push
sahf
adc
andnps
rorl
dec
ret
and
je
pop
dec
ret
push
push
mov
insb
dec
ss
pop
aad
or
jle
xchg
imul
push
sub
jle
mov
or
sub
sbb
cmp
mov
sub
divl
sysret
mov
out
jno
xlat
aam
imul
mov
imulb
lret
mov
mov
xor
fdivp
popf
mov
cld
jecxz
xchg
inc
aam
gs
fsubl
mov
push
rorb
adc
dec
scas
jbe
test
jno
add
out
in
cmpsb
rorb
cmc
push
jns
pusha
fbld
mov
pop
pop
and
sub
adc
fisubs
push
pop
ret
push
jne
lds
xor
or
fsubs
push
mov
ror
cmp
mov
lret
loopne
std
sub
mov
sarb
pop
push
push
repnz
pop
shrl
ficoms
mov
lahf
ret
sbb
jmp
jmp
cmp
pop
jno
daa
dec
push
mov
aam
ror
jp
jns
inc
mov
jp
aad
xchg
test
mov
aam
pop
or
cmp
xor
inc
mov
cmc
add
mov
cs
push
jnp
imul
fs
pop
stos
aam
outsb
in
fistps
cmc
std
movsb
das
out
push
jp
das
aam
lods
out
dec
loope
adc
cmpsb
dec
sub
mov
fucom
adc
or
inc
or
pop
adc
and
loop
shl
into
out
jle
aam
test
xchg
cmp
outsb
arpl
add
jg
inc
in
repnz
mov
push
cwtl
stos
in
push
loope
lret
jmp
daa
repz
jle
aam
sub
jmp
push
test
jb
cmp
and
or
inc
es
loope
or
or
inc
out
adc
fldl
ds
shlb
call
cmc
inc
xor
cs
in
fnstsw
dec
inc
mov
cwtl
icebp
push
inc
test
sub
shll
aad
loop
movsb
outsb
xchg
jmp
xor
jecxz
push
scas
outsb
cwtl
out
adc
xor
in
adc
outsb
pop
mov
outsb
sbb
in
push
adc
out
aad
inc
data16
ds
sub
add
scas
dec
lea
inc
out
sbb
loope
xchg
inc
mov
cs
cmp
daa
mov
ljmp
scas
je
pop
or
mov
in
or
in
add
insl
sub
repnz
into
mov
sbb
push
clc
pop
inc
inc
daa
in
jb
repz
in
insb
or
cmc
xor
iret
dec
lret
mov
lods
mov
movsb
in
fstps
cmp
cmc
xchg
lret
in
dec
out
aad
add
dec
jg
or
addr16
divb
bound
xor
or
test
fidivrs
inc
mov
sbb
shll
inc
mov
adc
lods
arpl
lret
stc
push
inc
or
repnz
fucomp
and
cli
mov
bnd
lahf
aad
jmp
and
jp
mov
popa
xor
push
sbb
idiv
inc
cld
or
call
out
xchg
lret
movsb
in
xchg
std
decb
ljmp
out
lds
jp
inc
push
lret
fbld
dec
mov
cwtl
jmp
in
out
jg
dec
fdiv
sbb
out
cmp
add
push
adc
outsl
notl
pop
es
divl
jp
add
push
ljmp
lods
aad
addr16
outsb
push
mov
xor
sti
and
adc
gs
xchg
aad
xchg
dec
lahf
rorb
stos
add
pushw
paddusw
dec
sub
lock
sub
repz
sub
cmc
insl
jmp
jmp
mov
icebp
sti
std
scas
stc
outsl
movsb
int3
bnd
xchg
mov
stos
scas
mov
repnz
cmp
xchg
dec
push
mov
lock
jecxz
dec
leave
scas
jp
dec
fucomp
cwtl
into
aad
test
mov
lods
fstpt
jl
aad
aas
scas
xchg
xor
dec
loope
xchg
sarl
xchg
pop
cmp
mov
or
mov
push
pop
sti
mov
addr16
adc
cmpsb
mov
iret
jecxz
into
lret
mov
pop
pop
cmp
les
fdivrs
mov
fisttpl
xchg
fisttps
loopne
loope
xchg
jecxz
in
in
push
in
out
call
subl
dec
xchg
sbb
lods
pop
inc
pop
ds
dec
in
les
or
aad
pop
jo
fistps
stc
popf
in
lods
sub
cmp
ss
imul
int
mov
xchg
aad
push
cmp
ljmp
or
xlat
es
sub
loop
data16
fidivl
mov
in
and
or
sti
mov
adcl
rorb
jl
sbb
pop
scas
or
out
lods
stos
enter
mov
rol
mov
mov
bt
jo
aas
je
rcll
jo
mov
outsl
and
aas
std
xor
pop
inc
sbb
popf
mov
jne
inc
push
in
mov
adc
stos
std
out
or
xchg
lcall
sbb
xchg
fdivrl
or
mov
pop
dec
loope
aad
ss
into
and
out
adc
sbb
or
scas
pop
ljmp
push
out
cli
insl
sbb
stos
mov
mov
xor
xchg
push
cmp
lret
ja
sbb
cmpsl
sub
push
fs
into
int
js
or
fs
mov
sub
push
lcall
fimull
in
push
jp
lahf
mov
inc
or
ss
or
xchg
jo
call
lret
scas
or
ret
jge
outsl
in
xor
punpcklwd
popf
fisubl
cld
push
test
aad
aad
ja
xlat
jnp
adc
xlat
imul
mov
cmpb
sub
in
imul
jne
js
mov
sbbl
jle
adc
test
inc
pop
push
mov
and
mov
out
in
jnp
sarb
pop
fisttps
xchg
call
pop
push
repnz
inc
leave
jle
mov
insb
push
xor
sbb
xchg
notl
int3
cmp
sub
pop
push
bt
jmp
or
add
cmp
setp
fs
fdivrs
jmp
mov
iret
dec
mov
dec
lds
xorps
sub
nop
lret
and
icebp
loop
insb
movl
mov
lds
mov
cli
int3
push
mov
aad
mov
psrld
mov
std
cmp
sti
cmp
fdivr
fimuls
sbb
cli
inc
add
aad
push
or
iret
loop
loope
sbb
or
in
and
pusha
inc
das
in
mov
xchg
xor
lret
mov
dec
xor
or
sarl
jne
loop
repnz
stc
dec
jnp
fisubrs
idivb
mov
xchg
in
inc
ljmp
stos
std
cltd
jnp
out
dec
insl
xchg
push
mov
lcall
sub
xchg
scas
sar
dec
scas
cmc
fnstenv
mov
cltd
aad
aad
inc
repz
mov
inc
and
test
mov
jecxz
testl
ss
lods
insb
push
add
mov
insb
movsl
or
or
sti
shll
push
xor
add
aad
test
out
out
mov
mov
ljmp
pop
addr16
add
mov
add
movl
fisttpll
in
loop
jecxz
fiaddl
loope
loopne
xchg
outsl
fisttps
aad
arpl
fcomi
outsl
aas
movsl
in
addb
fisttpl
movsl
mov
fistpll
sub
mov
fisubl
out
mov
aas
frstor
mov
decb
jmp
fdivs
pop
or
cltd
ds
int3
and
shrb
dec
insl
lods
call
or
fisttps
or
aad
test
fcoms
imul
xchg
movd
push
fs
mov
inc
or
hlt
sbb
sarl
stos
arpl
pop
bswap
push
xlat
aad
js
xlat
test
sbb
or
mov
push
leave
inc
pop
js
add
repnz
arpl
fimuls
les
dec
mov
aad
lret
push
sbb
std
loopne
push
mov
dec
in
aad
loope
push
shlb
movsb
sbb
add
rcr
sub
scas
filds
ret
push
mov
dec
and
sbb
xlat
sbb
mov
cli
lea
fnstenv
leave
clc
or
xchg
dec
or
popa
in
jg,pn
movsl
dec
pmullw
ret
lds
les
push
or
lret
jp,pn
inc
sbb
or
aad
aas
es
adc
lret
outsl
mov
call
pusha
inc
push
test
sbb
subb
pop
pop
mov
and
out
fsubr
jg
arpl
xchg
adc
andb
cmp
jge
lret
aaa
pop
in
push
pop
dec
push
mov
add
fmulp
ds
xor
hlt
add
xchg
or
aad
mov
test
mov
push
icebp
enter
lret
lds
je
push
inc
shr
fnsave
push
aas
in
cmpsl
mov
aad
add
lret
inc
xchg
aad
mov
enter
aad
jg
and
push
pop
push
cli
adc
xchg
adc
lahf
lret
icebp
ljmp
inc
in
fildll
jo
inc
imul
std
jecxz
inc
dec
or
or
outsl
lea
lods
jle
and
dec
stos
dec
jle
imul
arpl
imul
mov
mov
dec
mov
aad
fcmovne
xlat
add
jle
fimuls
in
int3
jmp
outsl
dec
xlat
push
sub
or
clc
or
loop
inc
push
dec
test
fcmovu
ja
cs
aad
jo
pop
ret
aad
shl
mov
popa
imul
shl
into
xor
outsl
or
out
mov
test
jp
adc
cli
or
jb
lret
lock
loope
adc
das
sub
test
cs
test
sub
mov
fiadds
in
cmp
rclb
sarb
jmp
mov
je
lret
push
cs
sub
data16
push
icebp
xor
pop
insb
lahf
daa
mov
punpckhdq
enter
das
icebp
mov
scas
js
xchg
adc
outsl
mov
les
psubsb
enter
or
inc
push
out
sbb
orb
sub
insb
or
popa
rorb
aas
cs
sar
mov
in
dec
ljmp
cmpl
enter
pand
sar
into
ljmp
mov
mov
insl
in
mov
dec
outsl
or
ljmp
outsb
add
scas
cs
cmp
enter
sbb
mov
cmp
daa
sub
fsubrp
lret
xor
sbb
js
push
fstl
das
mov
mov
sbb
icebp
xchg
jo
int
inc
shl
pop
mov
cmovns
adc
cmp
xor
scas
pop
aad
sub
push
add
cvtps2pd
inc
jg
loop
xor
cs
cli
insb
pop
xor
data16
movnti
test
mov
jo
jecxz
push
icebp
ds
jg
mov
sub
pop
xor
mov
mov
pop
fistpll
xchg
adc
adc
scas
aad
dec
dec
lahf
adc
ret
and
in
dec
out
leave
daa
mov
jno
mov
imul
out
in
stc
insb
shl
fadd
pop
cmpsl
or
out
cmp
adc
insl
xor
cmp
cmp
fsts
std
call
mov
call
or
jne
wrmsr
cmpsl
das
jo
sub
pop
xlat
lcall
xchg
mov
ret
jnp
pusha
in
je
inc
lods
stos
lcall
lea
cmp
lds
lcall
ljmp
sbb
mov
stos
xchg
cmp
push
pop
mov
xor
add
out
mov
and
push
enter
mov
sbb
pop
movsl
dec
fistl
sub
leave
mov
es
data16
adc
inc
enter
icebp
cmc
nop
mov
adc
jl
jno
cltd
fsubrp
int
cltd
scas
aad
jno
push
jge
or
sbb
dec
jmp
les
test
nop
mov
fcmovu
je
cli
dec
xchg
add
push
xor
dec
push
fsubr
mov
cmp
fidivl
xchg
out
push
jg
dec
test
add
aad
std
movsl
iret
push
scas
in
mov
pminub
les
pop
fisttpll
outsl
xor
jge
sarl
mov
aad
pusha
int3
dec
lods
or
in
mov
xchg
mov
in
and
or
movsl
and
or
scas
pop
jge
nop
push
jns
fidivrl
and
idivb
int3
cltd
jb
hlt
jl
out
scas
int
icebp
push
sub
loop
arpl
xchg
outsl
inc
inc
repnz
and
cmp
xchg
shlb
clc
ja
rorl
sub
mov
aas
out
jmp
fiadds
out
xchg
lahf
and
jb
fiaddl
inc
dec
sub
mul
insb
push
out
add
test
cmp
mov
xchg
ficoms
push
mov
lcall
xchg
cmp
popf
cmp
call
in
fisubrs
mov
push
add
inc
bswap
or
mov
push
fs
mov
jmp
aad
jg
popa
lea
mov
pop
test
aam
lret
rorl
mov
fs
xchg
jp
fildll
int
dec
das
aad
jp
test
cmpsl
dec
xchg
addb
mov
aad
mov
aad
arpl
lahf
xchg
mov
mov
pop
fsubrl
lret
neg
aad
mov
leave
jg
adc
fidivrs
sti
jno
mov
out
push
dec
push
dec
repz
add
mov
dec
jb
in
adc
loope
adc
push
or
push
lahf
test
divb
sub
push
shrb
xchg
inc
lcall
inc
in
inc
jbe
xlat
cmp
lcall
outsb
lret
addr16
loopne
cmp
add
xchg
jg
and
cmp
push
inc
or
mov
leave
or
lock
or
loope
adc
test
scas
js
insb
adc
lret
mov
cmp
aad
cs
xor
aad
jg
and
aad
jmp
mov
lret
nop
or
adc
clc
jg,pn
mov
cmp
in
sbb
mov
fwait
cwtl
mov
ja
push
inc
in
or
imul
push
insb
aad
cltd
rorl
out
aad
sbb
dec
fst
icebp
mov
scas
icebp
cmp
lahf
aad
cmp
inc
lock
in
or
push
or
or
imul
psadbw
movsl
std
xchg
mov
cmp
cmpsl
push
into
inc
insb
ret
fimull
fs
dec
xlat
dec
scas
xlat
add
xlat
mov
lret
pusha
hlt
ret
aad
inc
lea
jno
push
out
in
sbb
push
or
push
push
cmp
cmp
adc
scas
fwait
xchg
mov
out
cmp
daa
dec
and
fsub
fs
jmp
add
jl,pn
sbb
push
xor
call
and
or
mov
xchg
dec
xlat
test
lods
cmp
in
or
andb
test
mov
push
test
push
xchg
cmp
test
pushf
dec
cmp
loop
test
jno
test
jp
mov
sub
dec
outsl
mov
popl
cld
mov
or
sub
mov
or
aad
cs
neg
orl
aad
movsb
dec
js
aad
or
cmp
jns
aam
test
scas
js
aad
pop
int
sbb
insl
push
mov
sbb
aad
cmp
dec
repnz
scas
xlat
aad
inc
dec
sub
test
shl
ljmp
push
test
mov
repz
dec
dec
push
fst
repnz
jbe
cmp
cmp
mov
fistpll
aad
xor
lret
cs
cmc
rolb
test
fldcw
cmp
mov
inc
or
cmp
jo
into
xor
or
fs
cmc
mov
add
lods
dec
xor
cltd
mov
or
fadds
das
aad
add
aad
mov
cmp
xor
sub
mov
out
aad
push
int
sub
es
shrb
push
dec
inc
add
xchg
jne
ja
lods
or
aad
lods
ficompl
or
and
fimull
aad
in
stos
sahf
stc
jns
and
add
adc
stos
xchg
dec
adc
sub
aad
sar
dec
fcmovnu
insb
push
lods
mov
fcmovnu
or
mov
pop
fst
fcmovnb
repnz
mov
pop
out
push
push
insl
fstp
sub
repnz
decb
mov
xchg
cmp
inc
mov
in
out
out
pusha
jno
mov
imul
push
adc
testl
sub
test
jno
mov
inc
aaa
fdiv
push
lods
dec
pop
test
mov
subb
cmpsb
mov
ficoms
cmpsb
cmp
outsl
jns
jge
lcall
stos
into
jmp
dec
sbb
test
mov
out
std
cltd
mov
push
cmp
mov
insl
push
xchg
andb
adc
scas
inc
adc
sbb
call
dec
clc
mov
pushl
sbb
push
or
dec
iret
cmc
push
lods
das
and
push
sbb
in
repz
and
add
pop
dec
js
idivb
sbb
or
inc
in
adc
fidivrs
clc
xor
aaa
aam
mov
jbe
lcall
adcl
xchg
sub
inc
and
mov
dec
out
pop
into
jns
lods
mov
mov
sbbl
fistpll
pop
or
dec
pop
shll
cmp
pop
xchg
mov
ror
cmp
dec
adc
repz
cmp
les
xchg
popa
inc
stos
rcl
aad
stos
jmp
cld
popf
adc
lret
dec
ffree
mov
and
sub
pop
scas
inc
push
push
mov
xchg
mov
fst
mov
enter
pop
stos
dec
fstpt
mov
sub
popa
shr
scas
push
jne
ds
fs
pop
push
scas
dec
popaw
push
rorb
lds
xor
or
mov
fucomp
js
leave
ret
xor
pop
lret
xlat
lcall
dec
inc
cmp
lahf
dec
and
out
inc
shrl
sub
int3
mov
inc
sub
lahf
aaa
pop
cld
sub
pusha
add
movsl
push
cmpsb
arpl
jnp
in
dec
jo
leave
cwtl
push
mov
cmp
or
jno
aad
sub
aaa
pop
dec
mov
push
fsubrs
mov
xchg
cltd
dec
mov
sub
out
ljmp
lcall
cmc
lahf
cmp
lods
mov
mov
and
add
and
mov
dec
out
xchg
test
jne
mov
or
aas
add
pop
repz
in
xchg
cmpsw
fdivr
xor
xor
sbb
mov
mov
inc
pop
dec
mov
adc
inc
or
jno
in
adc
push
jecxz
mov
clc
loop,pt
aam
in
xor
jns
pusha
cmc
in
ljmp
cmpl
fmull
mov
sub
scas
adc
out
loop
lahf
aad
add
jmp
add
jmp
mov
popf
pop
dec
mul
pushf
mov
loopne
push
adc
or
xor
iret
popf
icebp
enter
fnstsw
or
mov
inc
lret
add
in
les
lods
push
push
mov
out
mov
aad
cmp
jnp
cmpsl
test
aam
mov
dec
stos
add
dec
or
add
aad
mov
dec
decl
insl
jle
xchg
xor
aad
loope
cs
dec
or
cwtl
pop
insb
les
cmp
out
pusha
imul
jg
mov
es
fadds
fbld
aam
lahf
dec
sub
movsl
daa
lcall
lods
lods
sub
cmc
test
jg
or
push
adc
imul
sarl
dec
pop
add
stos
std
sbb
inc
int
mov
gs
jle
dec
mov
add
ljmp
or
sbb
mov
popa
mov
fs
cmpsl
test
stos
mulb
add
fnstenv
push
jmp
sti
add
sti
mov
std
push
subb
insb
push
jo
data16
pop
push
lods
faddl
or
sbb
fdivrp
imul
imul
mov
cmp
iret
in
mov
inc
pop
fcmovbe
dec
aam
mov
gs
clc
call
mov
push
sbb
rcll
rcll
pop
stos
push
leave
in
jne
sbb
xchg
in
int3
and
aad
sti
ja
sarl
subl
push
aad
popf
cmpsb
es
gs
jge
sbb
aaa
mov
xor
sub
jae,pn
inc
mov
mov
loop
sbb
aas
lea
jmp
loopne
mov
call
int3
imul
push
jmp
jmp
ror
xor
test
add
mov
ficompl
outsb
aam
loopne
in
popa
and
fwait
sub
fidivl
mov
and
add
rolb
mov
mov
aaa
dec
mov
inc
in
push
rcll
adc
js
in
loop
inc
rcll
adc
fdivrs
in
jecxz
aad
lret
push
lock
and
mov
lods
stos
mov
lods
ds
or
ljmp
mov
dec
jge,pn
or
in
push
xchg
cmp
std
call
sub
lret
jg
mov
shlb
push
iret
and
sub
dec
movsb
jmp
pop
les
sub
pop
repz
jle
fstp
adc
adc
lahf
aaa
dec
stc
dec
dec
int
mov
scas
cmp
test
xchg
leave
pop
mov
shlb
int
mov
sbb
enter
fidivrs
divl
leave
outsl
jnp
adc
xor
mov
sbb
mov
arpl
add
dec
mov
or
ret
dec
xor
or
mov
icebp
aad
stc
es
mov
scas
adc
cmpsl
std
dec
lea
lahf
pop
mov
dec
shrl
int
scas
in
xor
push
cmp
aad
cmpb
aad
push
or
mov
xor
les
out
jbe
scas
in
loopne
or
sbb
cli
icebp
aad
std
cmpsb
jbe
fwait
and
ljmp
scas
jnp
fs
outsl
mov
aad
add
in
jnp
xor
push
xlat
jae
aad
jmp
xor
push
cmp
push
ficompl
addr16
enter
push
mov
jg
in
lods
sbbb
add
stos
sarl
xchg
lock
cmp
ret
dec
pop
in
fcompl
popa
mov
lods
repz
insb
pop
or
xchg
mov
loope
repnz
jecxz
cmp
lcall
xchg
scas
xchg
dec
cmp
mov
test
ss
push
mov
leave
shld
aad
jle
out
hlt
in
xchg
dec
rcl
or
xchg
lret
or
xchg
and
jge
xchg
rclb
int
cld
inc
mov
mov
pop
push
or
sqrtps
ds
jae
inc
jp
lods
adc
push
dec
jg
bswap
jno
lods
cmp
or
mov
repz
pop
in
jg
in
lods
sbbb
cld
in
or
stos
scas
in
adc
lcall
sbb
dec
xlat
nop
cs
lock
mov
xchg
dec
loope
cmp
push
int
sub
lahf
aad
pushf
or
mov
dec
dec
xlat
mov
popa
pop
out
in
add
lret
rcll
adc
loopne
xchg
xchg
push
mov
mov
pop
decl
jp
lret
push
ret
sbb
push
and
cmp
sub
testb
dec
cmp
mov
mov
or
and
loop
aad
pop
mov
int3
xchg
xor
jle
push
decl
fs
arpl
in
mov
fwait
in
add
sbb
sub
test
shrl
pop
int
jp
sti
inc
lds
addr16
pop
sar
lret
push
xchg
mov
dec
cld
dec
sub
dec
xchg
pop
in
xor
scas
call
les
jnp
call
fstl
outsl
pop
cmp
push
lds
lahf
mov
scas
mov
int
jmp
xor
sub
or
cmpsl
rclb
jge
cmpsl
pop
mov
cmp
in
int
ss
mov
aad
xchg
or
or
kmovw
stos
mov
xor
mov
adc
divl
movsb
mov
pop
xor
stos
in
popf
xchg
mov
sti
aad
test
fwait
or
test
sbb
fucomp
clc
std
test
or
shr
push
and
cmp
pop
je
shll
gs
fwait
jecxz
loopw
ljmp
xchg
stc
sarb
shlb
dec
aad
in
out
inc
push
mov
or
or
or
xchg
hlt
test
sub
push
mov
int3
sbb
push
inc
adc
dec
inc
enter
pop
inc
sbb
xor
adc
cwtl
addr16
iret
xchg
push
hlt
push
xchg
sub
sbb
stos
aad
loop,pt
mov
mov
sub
push
aad
ds
icebp
es
es
imul
es
jge
inc
das
cld
or
mov
out
loopne
jl
movsl
xlat
mov
xor
xor
xchg
cwtl
dec
dec
bound
aas
or
pop
inc
repnz
cmpsl
xchg
cwtl
lret
in
dec
jecxz
jg
push
in
jecxz
cld
shl
outsl
test
jno
add
xchg
test
les
mov
clc
loopne
cmp
inc
sub
mov
sub
fcmovnu
jmp
mov
call
test
loop
lds
jo
or
xlat
xchg
and
or
mov
pop
dec
jnp
out
or
shll
jg
fmul
xor
mov
shr
cmp
pusha
cmpsl
enter
roll
or
jae
sbb
out
push
push
outsl
add
adc
loop
jo
xcrypt-cbc
cmpsl
aad
sahf
mov
mov
es
sarl
xchg
inc
out
loope
pop
push
repnz
xor
lock
jmp
push
xor
jb
fistpl
inc
decl
dec
orl
add
into
adc
in
cltd
loopne
rcrl
mov
mov
dec
xlat
stc
scas
mov
loopne
jge
push
aas
xchg
xlat
aad
jecxz
imul
nop
or
xchg
ljmp
push
mov
dec
sbb
or
mov
cmp
shll
ficompl
andl
in
ds
loopne
sub
dec
push
dec
cli
in
dec
rcrl
loope
lret
or
repz
iret
sbb
inc
int
sbb
shr
aad
inc
dec
scas
xor
gs
nop
xchg
adc
stos
insb
rcl
sub
mov
fidivl
repnz
xor
jp
dec
or
and
adc
les
xchg
mov
out
out
sbbb
mov
push
nop
sub
out
cmp
mov
or
push
das
mov
decl
push
popf
cli
pop
stc
add
decl
mov
mov
dec
icebp
push
cmc
cmp
sahf
fwait
orl
roll
adc
xchg
or
sub
pop
repz
ljmp
dec
pop
dec
jns
into
sbb
loopne
and
fistpll
lea
adc
mov
ds
mov
je
lds
sbb
or
outsb
loopne
inc
push
xchg
push
loope
jno
or
sbb
dec
aad
push
mov
pop
add
imul
fld
jecxz
jne
adc
ds
out
insl
xabort
and
adc
xchg
les
imul
push
and
fxam
mov
test
xor
adc
push
in
or
push
push
ds
lahf
aad
adc
lahf
push
mov
aad
adc
or
pushf
mov
rcr
aad
xor
sub
pop
sbb
adc
sbb
lahf
filds
or
jl
mov
sbb
mov
or
sahf
daa
mov
dec
lahf
and
sbb
repz
or
ds
leave
ds
push
jg,pn
adc
sub
mov
mov
cmp
push
imul
mov
dec
lahf
test
add
std
hlt
mov
jecxz
in
or
mov
mov
jns
cwtl
dec
into
loopne
fs
cmp
loopne
dec
sbb
cmp
add
add
jmp
dec
enter
xor
or
or
add
fldenv
jle
movsb
notl
jno
test
mov
mov
pcmpeqb
stos
ss
fimuls
ds
push
loope
daa
int
or
mov
push
in
cld
mov
cli
mov
mov
in
and
clc
pushf
xchg
adc
ss
or
aad
jg
pushw
dec
jp
or
and
out
js
outsl
sbb
sbb
mov
sub
dec
incl
cs
testl
jnp
jns
dec
scas
nop
out
cmp
divl
push
loop
dec
pop
or
popa
stc
stc
mov
dec
mov
push
jne
or
dec
mov
adc
repnz
push
mov
fmulp
lea
xorl
pop
push
out
dec
cmp
rclb
icebp
mov
xlat
dec
cs
orl
out
ja
fcomps
jg
cmp
cli
xchg
lcall
int
lret
stos
inc
sbb
repnz
jle
stos
dec
out
int3
outsb
dec
subb
into
jl
arpl
cli
imul
add
out
jbe
pop
ss
mov
scas
pop
clc
mov
push
dec
sub
ljmp
sub
ss
inc
scas
data16
mov
push
dec
push
out
cmp
and
mov
xor
push
dec
imul
and
jle
loopne
inc
and
scas
jno
mov
mov
aam
xchg
mov
cs
cli
inc
in
repz
cli
dec
aad
cmpsb
loope
in
or
scas
lret
push
cmp
out
ret
dec
ljmp
adc
cltd
out
or
popa
sti
dec
sub
out
out
repnz
int
stc
cs
pop
lahf
cmpsb
mov
nop
out
cmp
daa
pop
outsb
xchg
out
cld
scas
ss
jecxz
cs
mov
adc
movl
cmpsb
int3
push
ret
cmp
xlat
outsl
push
addr16
out
aad
xchg
dec
pop
dec
jp
push
push
push
xor
sub
or
pop
loopne
push
mov
pop
pop
cmp
aad
ja
mov
push
sub
aad
cld
das
ss
jg
cmpsb
psraw
in
adc
xlat
lock
repz
stos
mov
or
and
loope
cs
setnp
mov
and
aam
dec
dec
mov
pushf
pop
or
daa
test
arpl
or
outsl
inc
xchg
or
rorb
inc
pop
setnp
lea
nop
sbb
pop
sbb
dec
mov
aad
fidivrs
sub
push
xlat
inc
scas
adc
sub
in
mov
cli
pop
push
test
lods
fwait
mov
jbe
pop
ss
mov
bt
jge
adc
dec
pop
push
int
inc
sahf
ret
rolb
mov
xlat
and
mov
icebp
aad
std
add
hlt
pop
icebp
out
xor
rorl
scas
clc
jmp
dec
ja
lea
or
psllw
or
pushf
sti
aad
clc
sbb
mov
xor
mov
add
jo
or
cmp
aaa
lret
or
push
mov
mov
cli
cld
add
pusha
aad
cs
inc
in
add
mov
push
mov
jno
dec
inc
cmc
jne
fmuls
cld
out
ss
outsl
jle
pop
cmp
out
push
es
mov
fmull
aad
jp
out
cmpsb
nop
push
sub
mov
cmpsb
fwait
fisubrl
dec
sub
ret
roll
jg
lret
sar
stos
adc
push
mov
sub
rcpps
aad
add
inc
push
jns
lock
lret
sub
int
push
xor
jns
jmp
push
inc
sbb
xor
aad
jb
or
mov
push
pusha
dec
aad
xchg
or
outsb
test
cld
pusha
js
sbb
icebp
sar
insb
jae
stc
insb
sbb
dec
aas
leave
mov
dec
push
pop
scas
push
and
pop
mov
clc
jl
push
sbb
hlt
int
insl
pop
sbb
stos
repnz
or
int3
or
and
sub
dec
mov
inc
clc
leave
push
jl
sbb
ret
pusha
int
stos
mov
das
mov
add
xchg
or
jg
push
xchg
enter
inc
lretw
push
xor
sub
rcrl
pop
jo
arpl
stc
mov
ds
loopne
sub
cs
inc
or
aad
jge
jno
sbb
rorl
inc
aad
aam
add
mov
aam
fdivs
cmpsl
mov
dec
inc
adc
aas
cs
stos
fmuls
mov
sbb
push
dec
dec
fstpt
sbb
je
ficoml
mov
lret
mov
in
cmp
in
jmp
fisubrs
dec
add
pop
sub
mov
dec
js
cmp
cld
ss
sub
fisubs
aad
mov
cli
notb
cs
loope
push
and
aad
dec
ljmp
jg
xor
pop
lahf
or
jmp
sub
add
scas
and
inc
and
stos
shl
jnp
insl
js
into
mov
pop
xchg
and
add
push
dec
not
or
cmpsl
mov
fisttpl
push
inc
sbb
testl
mov
cmpsl
dec
jne
aad
xchg
cmpsl
mov
add
outsb
mov
dec
xchg
xchg
or
fsubrs
cli
or
aad
or
adc
stos
push
mov
cmp
std
lret
repz
sub
bound
cmpsl
cmpsl
mov
xchg
incl
int
cmpsl
adc
aad
idivl
outsb
or
jecxz
jp
aad
testb
xor
js
insb
jg
sbb
xchg
inc
ja
jb
and
cmpb
aaa
mov
fst
nop
lret
notl
push
sub
pop
pop
pop
dec
push
dec
sbb
inc
mov
popf
or
popa
fadd
seta
push
leave
pushf
cmp
pop
dec
mov
rorl
mov
or
loopne
inc
push
mov
adc
out
xorl
inc
jecxz
subps
aad
in
not
btc
mov
add
jmp
clc
out
adc
inc
call
test
shll
pusha
aaa
dec
push
cmc
cmp
paddsw
cwtl
movsl
scas
mov
enter
mov
jns
mov
xor
mov
push
xor
xchg
in
inc
push
pushf
gs
mov
mov
shlb
pop
test
sarl
repnz
or
push
or
push
jne
lret
psadbw
shlb
xor
outsl
pop
xor
jnp
add
insl
adcb
ficoml
stos
fsubs
lret
mov
mov
fidivl
cmpsl
dec
mov
in
test
pop
lret
pusha
aad
cs
cmp
xchg
xor
aas
fisttpl
adc
aad
jmp
pushf
mov
movsb
adc
pop
push
inc
jge
sbb
out
add
scas
pop
ja
lods
push
mov
fsubl
sarl
outsl
mov
inc
imul
insb
jns
fiadds
push
cwtl
mulb
adc
data16
push
shr
in
out
aad
sti
mov
xor
repz
cmp
push
add
into
xchg
jmp
push
jecxz
dec
dec
repz
jg
roll
inc
jmp
aad
stos
pop
dec
mov
or
cmp
pop
xchg
cmp
in
mov
stc
lret
push
dec
pop
inc
aad
clc
rsm
push
add
test
mov
nop
xchg
mov
mov
sbb
out
test
xor
stos
int
push
sbb
test
or
jg
aam
add
mov
dec
mov
pop
xor
imul
sbb
dec
mov
call
or
shrl
arpl
gs
inc
jno
jle
push
dec
and
testl
icebp
movsl
jle
or
fdivp
inc
sub
cli
into
mov
pop
stos
je
xchg
and
mov
xacquire
orb
add
lret
fisubl
int3
pop
cmp
add
in
faddl
jno
je
aad
cmp
push
mov
cltd
cli
lahf
mov
ds
mov
test
stos
fidivrs
dec
sbb
jo
jns
xor
sbb
cmp
or
orb
mov
incb
ljmp
push
aas
mov
loope
shrl
fisubs
leave
int
out
xlat
mov
inc
or
push
fildl
inc
addl
mov
mov
inc
ja
clc
push
cmp
mov
sti
stos
movsl
lods
push
movsb
mov
dec
inc
sub
leave
jno
mov
xlat
aam
lret
fdivrs
popa
mov
add
aad
or
insl
test
or
movsb
out
inc
sub
int
mov
push
daa
enter
out
movsb
mov
or
add
movsb
fisttpll
mov
push
pop
push
push
inc
dec
scas
loopne
int
movsb
sub
xor
insb
in
test
dec
shl
push
push
mov
int
shl
int3
movsb
push
push
test
shlb
cs
test
les
mov
sub
mov
mov
inc
pushf
scas
mov
jnp
dec
aad
ret
int
sahf
js
cmp
mov
dec
lods
pop
mov
stc
lahf
lods
jg
cmpsl
xchg
or
sub
mov
cwtl
dec
dec
std
movb
pushf
adc
aam
jge
movsl
and
adc
inc
sbb
mov
push
cmp
btc
lea
outsb
mov
adc
enter
mov
mov
push
inc
das
imul
lea
popa
dec
xor
out
dec
xchg
test
scas
pop
dec
nop
xor
cwtl
and
inc
or
out
in
inc
lds
cmp
ficompl
inc
lret
xchg
movb
push
test
js
int3
push
sbb
sub
pop
inc
movsb
iret
sbb
aam
insb
jb
dec
and
mov
mov
sub
icebp
loop
insb
shrb
pop
dec
ds
repnz
dec
out
pop
movsl
outsl
cmpsl
pop
cmp
or
dec
xchg
mov
cld
sub
jne
std
or
les
fnsave
sbb
rcrb
or
xor
aad
mov
push
dec
aad
push
or
add
jle
and
aad
in
inc
cmp
mov
dec
mov
lahf
rorl
fildll
cli
mov
ja
or
adc
mov
int
jge
cmpsl
addr16
mov
int3
aas
fldenv
mov
lcall
popa
lret
jno
mov
and
ljmp
subb
in
fs
push
int
cmpsl
decb
or
xor
pop
push
inc
movsl
push
mov
and
cmp
fldenv
jecxz
mov
mov
je
stos
push
fstps
cmpsb
arpl
push
jge
jmp
xlat
cmp
or
imul
pop
cmc
jmp
push
mov
jge
in
out
sbb
loop
add
aad
je
int
mov
ds
jbe
js
jae
jae
adc
dec
push
imul
xor
push
out
cmp
test
repnz
call
test
loope
add
loop
push
pop
out
gs
cmp
cmp
aam
inc
clc
js
xchg
or
sub
push
dec
lahf
pop
es
pop
loop
popa
test
add
movl
jbe
lret
mov
adc
daa
cwtl
add
iret
mov
psllq
iret
lcall
jae
in
add
scas
test
push
iret
enter
push
lea
lret
dec
mov
cmpsl
repz
mov
xor
sub
repnz
push
xor
roll
cmc
das
xlat
xor
or
cmp
lods
xchg
adc
and
enter
add
ret
cmp
xchg
add
dec
cmpsl
sbb
fimull
cmp
push
nop
dec
test
aad
mov
jecxz
lods
int
xchg
scas
fcmovnbe
loopne
jg
xchg
orl
jmp
xchg
fmuls
aad
cli
or
fcmovnbe
sarb
aam
lods
js
bound
inc
dec
cmp
mov
rcl
call
fdivrs
dec
in
push
aad
jo
cmp
nop
mov
das
gs
imul
fcmove
jl
inc
push
cli
dec
pop
sbb
mov
xchg
in
xchg
jo
test
add
jle
and
aad
in
test
nop
lret
out
cmp
and
int3
scas
icebp
adcb
and
lss
add
test
sarl
aad
add
jle
aad
in
leave
mov
scas
mov
in
or
hlt
ja
out
mov
add
je
dec
xlat
imul
dec
dec
push
nop
dec
into
pop
call
dec
push
jle
fs
repnz
clc
or
and
stc
jns
test
inc
outsl
mov
lret
adc
lcall
dec
jb
mov
mov
enter
jp
xchg
mov
mov
inc
add
rorl
stos
add
pop
jns,pn
or
cmp
add
ret
lods
ds
aam
lods
clc
inc
aad
lock
dec
cmpsb
test
cwtl
das
aad
cmp
test
enter
xchg
dec
popa
dec
leave
into
int
addr16
cmc
stc
fmull
xlat
cli
scas
fld
and
ljmp
rclb
arpl
mov
xor
cmp
shlb
or
pop
lcall
out
cmp
jo
xchg
test
ja
mov
or
ljmp
pop
cmp
scas
xor
jp
lahf
add
mov
fcmovbe
dec
outsl
aad
sub
push
mov
addl
dec
inc
sbb
lods
xor
gs
icebp
das
aas
data16
cs
out
mov
jp
push
aad
cmp
xor
dec
mov
movsl
add
mov
push
lds
adc
cmp
push
lock
test
sub
mov
in
and
lods
test
xchg
into
or
js
orl
ja
jne
mov
or
out
and
mov
dec
clc
int
push
push
adc
mov
add
andl
les
jns
or
mov
or
mov
adc
imul
hlt
push
push
ret
xchg
sub
push
push
inc
js
popa
mov
dec
inc
mov
inc
mov
xchg
cltd
dec
dec
out
cmc
fimull
mov
cmpsb
cmp
decl
sbb
push
int3
sbb
mov
and
out
add
loopne
ror
js
inc
pop
in
in
fwait
loop
addr16
movntq
out
pop
inc
jge
cmp
mov
or
lcall
aad
ja
push
jo
mov
mov
mov
leave
mov
cwtl
pushf
adc
add
mov
cmpsl
mov
inc
stos
enter
in
sub
xchg
loope
sub
fstp
sub
sbb
mov
mov
xchg
dec
imul
xchg
mov
fidivs
dec
ljmp
and
shll
mov
dec
imul
sbb
lds
jmp
mov
movsb
mov
cmpb
mov
mov
scas
push
inc
loope
cmp
test
aad
repnz
cmpsl
in
out
jo
rorb
int
cmp
mov
dec
xchg
fdivs
movsl
push
sub
pop
cmp
dec
sarl
lret
sbb
xor
adc
aad
cmp
and
jg
pusha
into
lcall
mov
mov
cli
sbb
push
dec
arpl
in
scas
push
xlat
cld
adc
aas
mov
inc
add
dec
fisttpll
push
lods
jnp
inc
mov
popf
push
mov
repz
outsl
lret
xchg
or
adc
sub
inc
and
int
inc
xchg
fcmovnbe
aam
push
fisttpll
jns
cmp
aad
adc
xlat
arpl
inc
adc
xchg
decb
ljmp
mov
loop
mov
jmp
dec
repnz
pop
or
inc
testb
jecxz
mov
mov
cs
dec
jo
jae
xchg
ja
and
xchg
ljmp
dec
xchg
mov
aad
lret
sbb
ja
outsb
mov
and
out
imul
dec
test
adc
or
push
add
ss
loope
cs
les
inc
fwait
dec
dec
xchg
jo
jae
mov
inc
lahf
jg
push
rorl
out
scas
aad
sub
dec
mov
fsubl
dec
inc
mov
rorb
jnp
aad
daa
lret
or
ja
mov
dec
mov
or
fadd
or
pop
jg
imul
fldt
cs
repnz
lsl
lods
out
scas
ret
out
rcl
aad
sub
sub
incb
inc
dec
jg
loopne
sti
xor
push
inc
cwtl
loop
push
mov
xchg
mov
lods
jecxz
call
xchg
xchg
iret
les
fmul
mov
sub
addr16
cmp
push
add
jg
fcompl
mov
rorl
xchg
loop
ds
icebp
mov
psrlq
and
ficoms
cli
adc
lock
imul
mov
push
fdivrl
clc
push
aad
inc
xchg
sub
cld
out
scas
sub
or
sbb
inc
les
sub
mov
dec
pop
sbb
test
or
jmp
out
enter
and
mov
inc
loope
xlat
pop
lods
and
lods
add
scas
cli
mov
negb
loope
or
sbb
fstp
fidivl
mov
push
mov
mov
outsl
inc
or
or
jns
push
int3
int
cld
adc
lods
dec
mov
sub
mov
add
lods
add
sbb
int
cwtl
sub
adc
fwait
shlb
and
sahf
aam
outsl
and
xor
mov
or
or
mov
icebp
into
stos
ret
rcll
sbb
sub
mov
mov
jp
cmp
push
cltd
jp
push
inc
adc
out
stos
inc
push
inc
jmp
sti
cmp
dec
fnstsw
cmp
ret
mov
cmp
ret
ffreep
enter
mov
pop
into
jae
rorb
daa
xchg
cmp
loopne
jg
insl
pop
xlat
sub
push
push
nop
dec
xchg
dec
push
push
or
pop
dec
push
jle
lea
mov
push
repnz
aam
sbb
imul
mov
push
js
movsb
dec
imul
int
dec
xlat
in
rorb
in
out
adcb
cmpsb
jmp
mov
rorl
lock
jp
fsubrs
loop
fstl
frstor
cwtl
stos
in
into
aad
mov
movsb
xchg
jmp
iret
cmp
xor
push
icebp
test
inc
sbb
and
out
mov
jmp
push
mov
mov
pop
inc
ljmp
or
xchg
dec
aad
les
out
pop
lea
xchg
or
xchg
mov
fcomi
rorb
push
and
mov
xchg
jo
cmpsl
stc
jp
pop
rorb
or
sarl
or
or
xor
mov
cltd
mov
pop
lret
inc
jmp
dec
sub
insb
jp
jo
dec
dec
incb
call
sysret
inc
js
in
push
jns
push
dec
cwtl
jnp
jecxz
pop
sub
jl
popl
and
stc
idiv
inc
test
mov
jp
or
std
rclb
cld
rorb
stc
jp
cld
shr
add
pop
inc
loope
pop
fsubr
add
dec
test
stc
xor
cmp
testb
add
jb
pop
insl
imul
adc
and
fidivrs
add
pusha
inc
es
adc
call
in
mov
loop
push
call
adc
dec
add
lea
pmullw
lret
test
test
dec
adc
iret
dec
xor
pop
push
mov
aad
inc
aas
stc
or
ljmp
dec
add
into
test
scas
loope
movsb
jbe
stos
mov
push
inc
inc
movzbl
sbb
mov
xor
push
push
xor
cli
shll
xor
and
call
fisttpll
jns
push
out
orl
mov
in
add
push
jno
inc
jnp
jl
or
rcll
xrelease
in
stc
or
cwtl
push
test
jno
fstps
xlat
sahf
test
lods
or
mov
xor
scas
fisttps
mov
mov
bnd
rclb
jbe
ljmp
std
call
or
ret
push
in
fistpll
decb
adc
cmp
dec
adc
jp
int3
xchg
pop
dec
mov
push
icebp
test
lret
push
mov
leave
loope
out
mov
inc
stc
sarl
inc
movsb
andl
imul
je
es
int
out
or
cmp
negl
sarb
fwait
stc
enter
or
jg
in
and
loope
push
mov
pop
and
cmp
dec
sub
jl
adc
and
out
or
lret
in
xchg
sbbb
mov
sub
pop
cmp
mov
push
xor
jge
inc
popf
pop
insl
mov
lret
stc
pop
or
adc
jg
mov
sbb
push
aad
or
ja
lahf
dec
cli
or
inc
out
xchg
mov
iret
ss
dec
cmp
pop
sahf
adcb
or
arpl
add
adc
xor
call
std
add
popa
rorb
lock
das
repz
aas
bound
pop
jnp
cmp
sbbl
and
cmp
xchg
cmp
mov
mov
pop
pusha
jnp
outsl
fwait
lret
xchg
rclb
inc
jmp
push
xor
clc
jg
cmp
imul
cld
xchg
dec
gs
faddl
js
xchg
mov
mov
je
mov
insb
fiadds
cmpsb
dec
out
xor
stc
mov
jb
lret
xchg
out
push
insb
mov
ja
lcall
daa
cmp
fst
scas
jp
stos
dec
dec
pop
rorb
push
lods
movsb
xchg
rclb
add
dec
lcall
cmp
rclb
add
pmullw
adc
aam
cmp
jl
out
int3
sbb
out
pop
xchg
jbe
mov
aad
in
out
jno
or
lret
ds
adc
xor
jl
js
add
pop
js
dec
roll
ror
scas
adc
and
xchg
lea
vpmuludq
decl
sub
cmp
sbb
jno
call
push
or
sbb
outsl
xor
cmp
pop
push
sbbl
inc
fidivrl
pop
out
stos
adc
xchg
xchg
fistpll
fwait
push
lods
push
scas
adc
jecxz
scas
dec
sub
out
iret
xor
leave
cmove
bswap
pop
fwait
mov
addr16
lahf
push
lock
mov
fsubl
stos
stc
mov
fadd
js
or
add
and
daa
mov
sub
sti
aad
and
mov
pop
jno
js
mov
aam
loop
jp
jp
stos
mov
push
inc
mov
cmp
cmc
fldt
and
lea
lcall
scas
nop
xor
inc
lret
call
xor
loope
out
or
xchg
lods
sub
lock
dec
cmp
dec
lock
out
scas
xchg
imul
xor
or
repnz
cmp
inc
ja
jp
fwait
dec
decl
pusha
pop
or
jnp
add
mov
in
lret
les
push
push
fistpl
mov
aam
lock
lret
inc
fs
cld
ds
arpl
jp
into
cwtl
or
pop
cmp
in
mov
daa
repz
mov
or
inc
adc
shlb
clc
dec
sti
std
mov
fs
in
shl
subb
pusha
testb
mov
add
jmp
sub
dec
mov
lret
scas
or
arpl
jns
addr16
jmp
and
dec
cmp
mov
out
push
mov
jno
sbb
sub
xchg
pop
movd
sub
xor
lret
out
rcr
or
inc
mov
outsb
fucom
adc
ja
inc
jge
into
cmp
call
inc
jl
sub
mov
inc
imul
mov
ret
aad
daa
cmp
lcall
push
rcrl
icebp
ret
cmc
push
mov
inc
imul
mov
add
jo
fwait
das
jne
add
jg
push
sub
jmp
test
mov
and
adcl
aad
push
leave
aam
aam
inc
int
pop
pop
iret
dec
pop
aaa
sbb
fsubs
mov
adc
fdivrs
pushf
loope
seta
jl
push
rcl
sbb
adc
add
jge
sub
cmpsl
pop
jg
mov
pop
pop
pusha
dec
cli
cld
cli
mov
ljmp
jl
ret
xchg
sub
insb
loope
daa
ret
in
sub
add
pop
xchg
jg
mov
imul
and
cmpsb
stos
xlat
or
rclb
mov
gs
mov
or
push
test
or
and
push
cwtl
aad
add
js
jg
in
shr
icebp
jg
in
in
mov
insb
or
cwtl
stos
out
push
rcrl
sbb
mov
popa
inc
jae
push
rcl
add
adc
test
add
notl
js
iret
add
in
inc
lcall
fidivl
outsl
mov
cmp
cltd
lods
decb
cmp
and
test
inc
jb
icebp
arpl
mov
xchg
fisubs
repz
aam
scas
div
add
leave
repz
jle
aam
scas
div
add
movl
hlt
inc
hlt
imul
je
cmp
mov
inc
fdivp
inc
cmc
imul
je
cmp
cmpsb
je
jp
neg
call
push
outsl
in
cwtl
jmp
in
scas
stos
in
mov
les
out
clc
scas
idiv
add
ljmp
stc
add
fstp
sub
dec
lods
cltd
cli
mov
jmp
ror
lods
adc
inc
sti
mov
sbb
xlat
jne
mov
mov
mov
leave
lahf
adc
std
lret
and
in
push
or
cs
mov
cmp
fdivrp
inc
push
pop
xor
push
testb
add
add
enter
push
je
add
add
cwtl
sub
outsb
je
fldl
jp
add
push
out
or
jg
cwtl
add
dec
push
sbb
scas
stos
repnz
jno
sbb
rolb
scas
testb
out
lods
fwait
jp
popa
sbb
push
push
dec
inc
hlt
add
icebp
jnp
enter
jmp
mov
push
dec
adc
les
loop
mov
les
sbb
ss
cmp
lret
in
orl
es
and
fiaddl
dec
addr16
or
loope
arpl
dec
jecxz
mov
xchg
or
or
js
aaa
mov
xchg
adc
scas
gs
js
xor
xchg
sbb
jle
sbbb
or
fdivrs
mov
or
stos
dec
xlat
mov
fisttpll
adc
cmp
stos
clc
inc
jb
fisttpll
or
lret
xlat
mov
mov
fdivr
cmp
in
cltd
push
lea
xchg
cmp
ud1
test
cmp
pop
mov
outsl
and
or
pop
inc
pop
inc
dec
pop
or
inc
ja
push
lret
push
adc
pop
mov
pop
je
shr
jp
rcr
ficomps
pmuludq
jp
rcr
ficompl
pop
je
sarl
rcr
cwtl
ret
loopne
popa
jb
nop
pop
stos
in
jmp
arpl
inc
jl
jb
or
inc
aad
in
cwtl
add
and
lret
mov
dec
inc
or
jb
subb
xlat
mov
cmp
scas
xlat
leave
lods
xchg
fdivrs
fstp
mov
out
scas
sub
fnstcw
cwtl
or
test
cwtl
jmp
movsb
push
mov
sub
lret
lock
arpl
mov
aam
add
dec
inc
je
jg
and
jns
cmp
bswap
in
xor
fucomp
jp
fstp
out
cwtl
add
dec
push
mov
adc
into
xchg
sbbb
sub
sub
or
mov
rorl
fldcw
iret
xchg
jne
sbb
jmp
cmp
pop
lcall
sub
addl
mov
and
and
sbbb
xchg
add
ficomps
loope
popa
cwtl
jp
les
mov
xchg
lahf
ds
int
lods
or
jo
aad
mov
idivl
addl
loopne
ss
sti
fsubrp
scas
push
loopne
lcall
loope
test
push
cmpsl
lock
xchg
or
in
jmp
arpl
inc
jl
loope
lret
outsl
test
jecxz
jecxz
repz
mov
add
jmp
mov
pusha
aas
push
out
je
in
jg
sahf
cli
jns
mov
fimull
or
stc
jecxz
sub
jb
pusha
inc
jo
out
out
mov
xorb
call
xlat
mov
jle
shr
scas
imul
add
add
push
jle
shr
scas
imul
add
loopne
jae
inc
int
jmp
jmp
out
insb
jp
repz
mov
in
fsubrp
inc
in
incl
sbb
push
add
inc
movsb
jb
in
arpl
mov
aam
mov
xlat
ret
pusha
lcall
mov
pop
lods
mov
scas
mov
adcl
dec
xor
inc
arpl
clc
stos
xchg
insl
shr
jbe
fwait
repz
jge
xchg
in
xchg
jo
xchg
cmpsl
and
notl
dec
stos
xchg
push
js
mov
push
xor
sub
in
adc
aad
mov
repz
cmp
int3
and
push
or
int3
ljmp
outsb
mov
out
test
xor
hlt
and
movq
jp
dec
dec
dec
xchg
mov
scas
dec
iret
sub
xchg
fisubrl
inc
rcl
aaa
test
xlat
adc
pop
mov
cmovl
int
jae
mov
stos
or
cmp
xchg
jg
jg
sti
aad
test
ds
pop
xchg
mov
push
lods
insb
add
mov
push
std
pop
mov
enter
pop
push
jge
dec
fcoms
sub
adc
jle
aam
jg
cmpsl
lock
dec
xchg
popa
mov
pop
and
div
inc
icebp
ss
fstps
mov
lea
repnz
das
aam
add
or
lock
arpl
xor
adc
lock
arpl
mov
fstl
jp
in
shl
scas
div
add
in
pop
int
mov
xchg
testb
jecxz
xchg
idivl
out
cmpxchg
mov
adc
xchg
inc
rcl
stos
and
jo
stc
arpl
cmp
push
hlt
loopne
jp
in
sar
scas
idiv
and
push
pop
mov
in
sbb
pop
bound
mov
fstpt
rclb
notb
sub
push
pop
sbb
in
sub
sbb
fmuls
dec
push
push
lret
adc
lret
in
pusha
push
mov
pop
in
or
jmp
in
stos
adc
rol
pop
pop
pop
fsubr
cwtl
jmp
in
stos
adc
sbb
push
lcall
mov
lcall
decb
xchg
in
xchg
loop
aas
xor
jns
roll
or
loopne
lods
cmp
test
mov
testb
popf
std
dec
lret
cmp
movl
sub
rolb
scas
testb
imul
jo
in
xchg
or
sbb
and
or
loopne
testb
lock
arpl
adc
or
or
mov
push
in
std
cwtl
and
or
dec
push
jecxz
std
lock
inc
aas
in
jb
or
push
jmp
int3
pusha
push
mov
xlat
dec
js
xlat
arpl
adc
or
pop
lret
jo
fucomi
push
sub
leave
sbb
rclb
dec
pop
xor
shr
jp
rcrl
sub
cmp
mov
sarb
fst
mov
xor
or
lret
arpl
inc
mov
mov
and
jp
aam
add
xor
adc
xchg
jge
fst
mov
mov
dec
fdivrp
add
mov
lock
inc
call
scas
pusha
cmpsb
push
adc
fiaddl
sub
push
loopne
int3
xchg
jbe
clc
cmp
cmp
inc
jbe
xlat
jg
sbb
repz
aas
nop
nop
fidivrs
sahf
aam
jg
cmpsl
fcoms
ja
jnp
in
arpl
mov
xchg
jo
out
outsl
cmp
in
neg
inc
mov
imul
or
in
inc
inc
fcomi
icebp
je
pop
cmp
neg
inc
mov
stos
out
popa
mov
inc
cmp
jle
aam
scas
neg
add
adc
paddq
jp
call
add
cmp
jnp
in
arpl
mov
xchg
or
cmp
mov
in
aam
scas
mul
add
test
int
not
loope
mul
add
lret
xchg
fisttpll
pusha
loop
loop
inc
fidivl
dec
mov
jecxz
jecxz
pop
or
cmovbe
xor
in
cmp
jo
pop
mov
in
sbb
nop
loope
push
mov
jmp
in
sub
ds
pop
pop
mov
in
pusha
jbe
dec
out
push
mov
sub
jp
call
inc
inc
int3
lock
arpl
inc
push
cmp
pushf
push
or
lret
cli
in
popa
leave
es
insl
sbbb
pop
nop
ds
push
fwait
pop
mov
or
shrb
into
jmp
jecxz
mov
mov
adc
xchg
jg
jg
sti
aad
out
repz
dec
pop
cli
shlb
pop
aad
xor
adc
jmp
ljmp
dec
add
scas
imul
xor
cld
jecxz
pop
fwait
mov
lea
sbb
xchg
lods
mov
out
inc
inc
out
shlb
ror
jle
out
scas
imul
xor
shr
outsl
and
lock
inc
lock
int
cltd
icebp
adc
dec
cld
or
bnd
repnz
fidivrs
repz
jle
aam
scas
div
xor
cs
mov
je
hlt
jp
hlt
shrb
dec
xlat
jb
cltd
cmc
adc
insb
push
ljmp
in
sub
dec
loopne
and
in
jp
imull
shlb
or
jg
arpl
cli
rclb
pop
mov
sarb
or
inc
ret
jb
cli
arpl
inc
pop
out
mov
imul
rolb
in
and
cld
mov
fdivrs
test
pinsrw
ds
xchg
sahf
loopne
imul
mov
and
push
fidivl
loopne
cmp
cmp
sbb
jecxz
lret
push
jp
adc
dec
gs
aad
and
xor
push
cltd
int
rolb
jl
add
pop
jae
and
sarb
in
js
jmp
leave
stos
inc
shl
add
add
movsb
mov
jle
aam
scas
testb
jmp
inc
in
fiadds
inc
movb
rcrb
lods
inc
adc
daa
xchg
movsb
in
cltd
add
popf
add
rcl
add
sarl
aam
scas
testb
dec
xchg
clc
pusha
movl
shrb
or
jg
arpl
cli
rclb
lcall
or
dec
pusha
or
inc
mov
pop
and
testb
xor
lahf
out
dec
dec
push
or
xor
xor
movsl
in
cmp
stos
push
push
mov
or
in
test
jl
sub
sbb
inc
je
push
jp
push
xchg
adc
pop
dec
lods
xchg
jge
fimull
or
call
rclb
call
sbb
shlb
rcr
jp
push
negb
shrl
jne
int
movsl
cmp
adc
aad
mov
outsl
cmpsb
cmp
mov
adc
xor
arpl
push
into
mov
clc
nop
hlt
inc
out
sbb
adc
cli
rcl
rorl
push
sbb
rcr
test
rclb
mov
mov
je
test
shl
aam
rcl
add
mov
inc
cltd
jb
jge
fst
mov
sbb
not
inc
xor
jle
mov
mov
std
pusha
push
inc
iret
mov
or
in
in
scas
stos
out
popa
sarl
or
in
scas
stos
jmp
xor
push
lock
and
mov
mov
sbb
fnsave
jp
fcmovnu
in
sub
daa
lret
and
fdivrl
in
loop
fnstenv
repz
jle
aam
scas
neg
add
cmpsl
repz
jle
aam
scas
neg
add
pusha
jle
rcr
scas
neg
add
lahf
testl
shlb
in
lahf
loopne
dec
push
loope
jmp
loop
sbb
xlat
push
fisttpll
xchg
loop
in
fucom
mov
cltd
cmpsb
dec
lahf
or
jecxz
jmp
arpl
inc
cmp
adc
pop
fcomps
adc
jmp
in
pusha
sbb
sbb
jmp
in
scas
stos
cli
and
xchg
rcrb
xor
aam
in
mov
or
jmp
in
scas
in
add
cwtl
dec
sbb
or
cmpsb
lret
cld
scas
loope
aas
xor
push
mov
push
inc
dec
push
arpl
test
mov
pop
lods
mov
gs
pop
mov
dec
aam
and
in
xor
push
ljmp
leave
dec
mov
enter
cmp
add
push
xor
dec
movsb
jecxz
sub
cli
lods
imul
sbb
xchg
adc
adcl
mov
aad
xchg
repz
and
lock
sahf
cmp
add
inc
mov
ret
dec
push
out
and
cld
adc
aam
dec
sbb
sub
xchg
jg
aas
gs
mov
pop
sub
fcoml
pop
ret
in
movl
push
jmp
pop
xchg
dec
jl
jne
ljmp
xchg
mov
inc
imul
inc
inc
jmp
jae
or
inc
jb
in
arpl
inc
pop
inc
popf
push
mov
inc
imul
inc
inc
in
rclb
inc
std
lret
adc
arpl
lock
loope
adc
dec
push
cmp
jmp
in
sub
cmp
sar
dec
shl
scas
div
xor
in
dec
xchg
or
arpl
lock
mov
cmp
lock
in
arpl
lock
push
mov
lret
cwtl
and
repz
inc
sbb
hlt
inc
inc
hlt
rclb
aam
jg
arpl
lock
loope
loope
int3
inc
fidivs
mulb
inc
fsub
mov
push
test
jp
in
push
or
or
in
sub
iret
in
add
dec
push
stc
lret
push
jne
mov
lret
lock
arpl
inc
pop
inc
sub
adc
in
sub
ss
push
dec
or
leave
insl
cli
sbb
sbb
pop
pusha
pop
dec
test
or
je
test
int
pop
xchg
push
pop
jp
lret
push
dec
rcll
das
loope
inc
xchg
push
ss
inc
enter
mov
enter
aas
inc
lahf
pop
aaa
lea
mov
testb
aad
mov
ss
aad
cld
push
dec
push
std
rcrb
inc
jle
jg
cmpsl
rorb
pusha
jg
mov
inc
in
lcall
rorb
mov
push
and
add
sbb
arpl
lret
push
jno
pop
inc
jb
lock
arpl
inc
push
cmp
mov
dec
dec
push
add
stos
add
in
movsl
inc
or
arpl
fbld
dec
lahf
lock
arpl
lret
adc
cwtl
jmp
in
sub
sbb
dec
inc
mov
testb
inc
or
xchg
dec
jp
in
rorl
scas
testb
xor
outsb
add
imul
testb
and
popa
mov
jmp
in
sub
in
dec
stc
dec
xlat
test
sbb
inc
inc
or
xchg
fisttpll
xchg
dec
push
or
stc
aam
dec
sbb
in
sub
shll
fisttpll
adc
test
cmp
and
jp
pop
adc
aad
mov
and
dec
aas
adc
negl
push
cmp
lret
pop
pusha
and
lret
mov
jecxz
cmp
in
sbb
arpl
push
and
lock
aad
nop
dec
outsl
xor
mov
enter
jge
data16
aas
in
or
adcl
jmp
ds
ror
out
jg
xor
pop
push
adc
js
shll
iret
lods
mov
loope
pusha
add
push
mov
xchg
aam
mov
xlat
mov
inc
pop
loope
or
inc
cs
inc
out
test
js,pn
or
sbb
and
jae
xor
adc
rcll
dec
push
jnp
sub
fidivl
rclb
test
rclb
push
mov
call
ljmp
clc
and
int3
mov
pop
cmp
and
jp
aam
hlt
cwtl
ret
loopne
cmp
xor
sub
in
mov
repnz
mov
pusha
lods
cltd
fst
mov
mov
mov
repnz
les
mov
in
fstp
mov
dec
inc
and
mov
xlat
lods
cltd
fimull
je
push
jg
or
in
arpl
lret
arpl
inc
ja
push
std
push
dec
arpl
lret
popf
fisubl
loopne
loop
mov
jmp
arpl
and
lahf
std
inc
or
jmp
loop
xor
outsl
push
imul
in
fbstp
jg
sbb
pop
je
loopne
jp
loopne
or
lret
push
loope
loope
inc
pop
repnz
iret
ljmp
arpl
jb
nop
or
scas
xor
lea
in
jecxz
jg
cwtl
add
je
imul
fs
daa
jp
ret
out
mov
xchg
pushf
dec
lret
lea
paddd
sbb
outsl
dec
repnz
stos
xchg
lcall
jbe
xor
xchg
jmp
or
jmp
xchg
in
or
stc
dec
push
dec
or
andl
lahf
mov
push
adc
xchg
lea
fsubr
mov
mov
mov
cli
aas
in
in
fsubr
scas
lret
in
mov
mov
lret
jnp
out
out
inc
fdivrs
or
out
in
mul
add
insl
jle
shr
scas
imul
les
jp
jb
xor
dec
pusha
jmp
or
push
roll
sbb
jb
ljmp
pusha
push
add
dec
sbb
in
scas
stos
add
jne
xchg
je
fucomp
jp
in
cwtl
or
sub
sbb
in
in
in
scas
imul
out
rcrl
imull
lahf
cli
jo
or
mov
lret
adc
adc
jge
mov
enter
inc
or
xor
jl
cmpsl
fwait
jo
inc
inc
pop
lcall
or
loope
dec
into
aad
jno
adc
repnz
aam
les
lret
ror
in
in
mov
in
push
or
das
shl
xlat
mov
or
cmpsl
push
scas
inc
in
dec
adc
sub
stos
movsl
push
scas
add
loop
xor
sbb
add
mov
fwait
push
push
adc
jg
insl
das
mov
xchg
jg
inc
jnp
or
je
lret
mov
fnclex
xchg
mov
dec
std
out
outsb
rol
aas
lret
pusha
ret
scas
lods
stos
push
out
ljmp
jne
cmovs
out
pop
mov
mov
repnz
mov
push
mov
jle
das
int3
pop
lock
cmp
mov
jnp
jmp
pop
shrl
lea
jle
in
mov
gs
jns
add
das
leave
or
mov
into
scas
aad
dec
mov
or
imul
xchg
rclb
lock
or
mov
mov
outsl
hlt
sarb
add
jl
inc
and
mov
scas
jb
fptan
adc
mov
mov
push
icebp
xchg
or
sub
int
dec
out
mov
pop
cld
std
or
fldl
out
jmp
out
leave
mov
nop
dec
push
in
dec
cmc
lret
lods
lods
in
insl
push
inc
sti
stos
inc
dec
dec
sub
popl
rclb
lret
or
push
add
or
jp
aad
aad
dec
out
jb
rcll
icebp
in
sub
flds
aad
push
or
sti
int3
xchg
ljmp
push
pop
mov
loopne
pop
scas
mov
cmpb
aad
call
fsubr
jge
stos
mov
push
lods
add
sub
iret
xchg
or
loope
or
aad
jb
test
lods
mov
sti
cmovo
mov
mov
or
loopne
daa
dec
aad
xchg
inc
sbb
clc
pop
adc
add
mov
jecxz
cmp
aad
lea
dec
dec
cltd
loope
jp
clc
mov
mov
xor
lret
fstps
sbb
push
sar
dec
out
mov
cmp
mov
sub
lods
icebp
cld
sbbb
mov
and
mov
xor
sti
filds
fidivl
iret
or
ret
mov
pop
lret
repnz
fisttpll
or
rorl
sbb
xchg
sub
in
mov
add
xor
dec
popa
dec
pop
inc
mov
in
xchg
out
scas
out
fmull
add
arpl
jmp
jmp
mov
cmp
xchg
ljmp
fdivrl
cwtl
repnz
jne
jne
cmc
repz
cmc
std
nop
mul
leave
scas
inc
in
push
mov
mov
in
or
mov
push
mov
insl
push
lahf
jmp
shl
xor
xor
iret
repnz
aad
cltd
ror
push
shrl
test
test
icebp
or
mov
jg
or
cmc
imull
std
clc
jmp
fidivrl
mov
xor
sti
mov
stos
dec
das
pop
push
xlat
fwait
lock
out
jnp
addr16
push
sbb
dec
mov
jmp
mov
add
hlt
fucomp
andl
aad
jg
arpl
sub
int
in
movsl
sub
or
lock
int
xor
or
jae
sar
cmpsl
out
das
aad
push
mov
mov
icebp
cmp
or
xchg
mov
test
fcoms
aas
dec
pop
dec
cmp
jle
incl
sbbl
movl
pop
mov
push
out
out
add
push
dec
lds
mov
jne
hlt
addr16
add
mov
add
cmp
fildl
or
and
mov
mov
cli
in
pop
dec
xor
decl
mov
cmc
pop
lea
mov
or
das
aad
inc
pop
add
scas
mov
out
clc
dec
in
mov
push
push
cmpxchg
jl
test
adc
and
test
mov
loopne
lods
dec
sti
cmp
and
leave
jge
push
xorb
jnp
repz
mov
xor
and
fwait
jnp
xchg
push
mov
daa
out
cmp
inc
xlat
dec
mov
aad
cmp
addr16
mov
inc
popa
dec
jns
fstpt
in
jne
jecxz
scas
sti
andl
scas
fisttps
jo
xchg
add
in
in
push
sbb
aaa
in
mov
int3
test
shrb
xchg
loopne
daa
push
mov
xor
mov
nop
das
jge
pushf
cmp
fwait
scas
lods
std
jnp
or
dec
fsubrp
imul
cs
jo
mov
js
xchg
jmp
or
or
xchg
ret
dec
rorl
add
mov
pop
fisubs
movsl
or
in
lcall
imul
sbb
stos
in
aad
lret
sahf
jbe
mov
mov
addr16
frstor
or
or
mov
cmp
fstpl
stos
jg
jb
or
addr16
decb
cltd
or
push
or
iret
popf
or
or
adc
mov
xchg
cwtl
enter
push
popa
add
xchg
inc
dec
arpl
inc
fidivs
sub
adc
push
mov
cwtl
testl
lret
or
in
pop
sub
ficoms
mov
inc
mov
les
lahf
mov
lods
pop
and
add
jecxz
xor
jmp
xor
cmp
cmpsl
mov
add
movsb
in
std
bound
fmull
pushl
xor
sbb
sub
decl
cmpsl
xor
or
push
or
outsb
xchg
mov
pop
and
jo
or
cwtl
cmpsl
mov
or
sub
mov
aad
mov
es
push
mov
mov
pop
daa
sbb
lret
and
fcmovb
out
pop
sbb
and
fcmovb
js
push
in
ror
and
mov
lods
or
xchg
add
xchg
pop
dec
dec
lret
int3
shl
jg
stc
scas
movsl
add
in
outsb
push
dec
scas
decb
ret
xlat
lea
rclb
fidivrs
dec
lret
testb
jae
ficoml
mov
lea
add
dec
aas
sub
mov
inc
in
scas
stos
pop
sahf
scas
mov
bound
mov
aad
or
incb
ret
pop
mov
lea
add
add
push
sub
leave
jmp
jl
icebp
test
mov
test
std
js
mov
mov
aad
fcmovne
push
filds
jecxz
std
cli
es
neg
repz
pop
xlat
fiaddl
repz
int
xchg
inc
orb
das
or
shl
aad
dec
repz
ljmp
movntps
add
jmp
movsl
and
mov
ret
dec
sub
dec
popa
fdiv
mov
mov
scas
arpl
inc
lds
push
add
mov
imul
cmp
xor
ljmp
dec
or
cmp
dec
test
xlat
ret
fnstsw
sahf
idiv
mov
stc
fildll
movsl
iret
popf
or
ja
push
or
cmp
mov
ljmp
shlb
in
add
xor
lods
faddl
push
mov
add
xor
mov
mov
dec
iret
fimull
pop
std
or
cmc
xor
sub
push
xchg
push
cltd
push
pop
push
xchg
scas
cmc
fiadds
cmp
cmpsb
pusha
mov
aam
aam
lret
aam
jg
cli
fdivl
ljmp
aad
out
sarl
call
out
jno
movsb
xchg
inc
into
pop
adc
and
push
movsb
xchg
push
pop
xchg
subl
in
mov
aas
aad
lods
and
or
into
fcoms
jge
rolb
test
scas
or
add
pop
pop
mov
pushf
jnp
aad
xor
mov
cmpsl
pushf
jl
rcl
lods
xor
popf
lret
inc
cmpsb
push
imul
in
adc
fst
adc
sbb
mov
or
sub
dec
div
xchg
aad
push
jecxz
std
lcall
pop
pushf
jae
dec
inc
dec
or
outsl
mov
gs
stc
lret
or
xlat
adc
mov
sbb
adc
daa
add
add
add
or
mov
scas
pushf
fstp
stos
rcrl
cmp
jb
mov
mov
stos
orl
pop
cli
ljmp
fsubrs
int
jnp
stc
ret
clc
xchg
imul
lret
mov
scas
dec
shrl
pop
je
test
xchg
mov
sarb
fstps
xor
pop
inc
rolb
cmp
bnd
das
and
int
movsl
xchg
or
rcr
insb
xchg
dec
jecxz
xor
ja
shl
scas
dec
stos
out
xchg
push
out
shl
push
iret
std
cmp
inc
insl
mov
lret
rcl
icebp
jmp
jl
add
pop
stos
int
cmp
xorl
jge
fsubr
push
loopne
lods
pushf
test
cmpsl
mov
inc
jecxz
jns
push
xlat
fsubrl
filds
aas
out
add
into
jne
dec
das
adc
mov
or
scas
out
out
call
inc
in
cmpsb
mov
hlt
jmp
sub
sub
push
mov
mov
or
mov
inc
lahf
into
mov
xlat
xchg
repnz
inc
data16
cld
mov
inc
jle
sbb
adcl
int
in
mov
adc
jo
aad
fdivr
or
out
adc
je
add
jnp
cmp
adc
push
shrb
movsb
jnp
insl
lock
leave
mov
jge
movsb
cmp
cmc
decl
push
xchg
test
int
lret
imul
fwait
aad
cld
test
sub
loope
out
mov
mov
push
int
inc
stos
loope
jns
in
js
repz
dec
fistpl
test
adc
test
xchg
nop
jo
lret
lcall
jmp
int
cmp
in
cmp
fildll
pop
int
loope
xchg
fdiv
sti
sti
push
cltd
daa
scas
mov
popf
push
xor
in
fisttpll
sub
mov
cwtl
es
xlat
leave
movsb
loope
lock
dec
pop
fisttpll
sub
and
pop
mov
pop
or
lods
dec
xor
jb
hlt
inc
notb
or
std
sarb
das
roll
aas
add
pop
pop
pop
lods
ljmp
push
dec
dec
adc
inc
xchg
or
insb
dec
aad
and
push
xlat
dec
jnp
add
mov
enter
dec
pmaxsw
xchg
mov
dec
cmp
cmp
cmp
pop
push
mov
fcomps
jge
xchg
repnz
push
mov
cwtl
aad
pop
jb
dec
testb
addr16
add
popa
imulb
sbb
fiadds
adc
xchg
inc
pop
cmp
outsb
or
jbe
stos
sbb
lods
scas
movsb
addr16
mov
imul
stc
pop
inc
orb
add
mov
inc
push
scas
fcomip
test
inc
sti
adc
imull
sahf
push
jbe
cmpsb
and
adc
push
lods
push
inc
or
mov
sbb
dec
mov
ljmp
jbe
jp
sub
mov
test
inc
ljmp
adc
dec
out
insl
inc
pop
imul
ja
sub
pop
sub
aad
mul
int
jae
push
pop
repnz
das
ficomps
sbb
add
iret
sub
in
out
pop
add
jmp
iret
test
inc
mov
mov
cwtl
out
push
fsubrs
negb
lods
pop
sbb
popf
dec
mov
sub
shld
push
fstpt
pusha
add
inc
pop
mov
fnsave
mov
shrb
repnz
xor
int
andb
std
decl
sub
pop
fdivrs
rcr
std
stos
out
stos
sbb
push
scas
leave
mov
mov
and
xchg
mov
std
add
stc
pop
mov
std
push
popa
mov
sbb
ret
xlat
inc
popf
push
adc
cld
mov
sar
add
xchg
ficomps
mov
fldl
adc
mov
out
call
lds
loope
push
xor
push
movsb
repz
pop
sub
inc
pop
roll
inc
lods
call
pop
outsl
ja
repz
fcoms
push
jbe
pop
dec
int
lds
lret
or
int
or
iretw
rorl
mov
or
or
push
gs
rolb
xor
add
repz
incl
fimuls
mov
push
insb
mov
mov
or
jmp
dec
lods
mov
out
shl
out
shl
movsl
mov
or
stos
pushl
jne
and
xor
mov
pop
daa
out
imul
push
jmp
mov
inc
pop
pop
jne
jno
inc
stos
decb
popf
loop
pop
js
data16
rol
enter
mov
mov
addr16
loop
push
pusha
dec
mov
shll
add
les
movsb
int3
andl
xchg
loop
lret
std
cmpsb
fisubs
inc
inc
cli
lret
int
mov
mov
lea
sbb
paddw
cli
fmulp
dec
ja
leave
in
push
ds
jmp
push
jmp
mov
cli
sub
ja
dec
mov
insb
xchg
into
pop
or
cli
out
mov
pushf
cmp
hlt
adc
jbe
jmp
insl
mov
out
cltd
icebp
lods
pop
insl
scas
das
lret
ret
and
icebp
mov
das
mov
dec
mov
sub
mov
ja
mov
dec
cmp
jns
cmp
and
mov
jbe
in
aas
std
sbb
sti
xchg
mov
sbb
cs
push
into
insb
loopne
daa
sbb
add
sbb
cmp
mov
or
jge
sarl
icebp
addr16
xorl
scas
fsubl
push
scas
addl
clc
cmp
add
test
dec
sub
or
aas
incb
fdivp
enter
divb
cltd
inc
add
or
dec
xchg
sub
insb
add
int3
cmpsl
pop
fldenv
xchg
bound
leave
int
lahf
mov
inc
mov
repnz
es
add
cmpsb
lds
iret
jnp
mov
int
inc
in
dec
sub
sub
push
xchg
sub
cmp
mov
pop
iret
mov
aad
sbb
cmp
push
mov
xor
shrb
xchg
shrl
add
out
aad
test
mov
push
push
jo
or
add
dec
mov
lret
or
in
jecxz
int
lods
lret
mov
gs
imulb
insl
loop
push
jecxz
ss
or
mov
push
sar
dec
adc
mov
mov
sub
xor
xchg
jno
mov
int3
jp
xchg
or
mov
jmp
xchg
mov
into
aad
mov
aam
xchg
int
xchg
xchg
mov
popf
mov
xchg
bound
sbb
adcl
js
xor
ds
jne
mov
ljmp
mov
mov
add
mov
scas
fnsave
into
dec
icebp
jp
loopne
loope
sti
dec
in
sub
int
stos
mov
mov
in
imul
cmp
push
out
xchg
or
pop
or
stc
inc
push
sbb
cmp
mov
push
fisttpl
sbb
fimuls
fisttps
loopne
loope
loop
jecxz
scas
in
out
out
jmp
repz
xchg
adc
mull
outsb
aas
or
or
push
int
int3
imul
pop
scas
cmpsb
scas
xor
iret
ror
lods
testb
cmp
popa
inc
pop
fwait
or
in
mov
add
add
shrb
adc
pop
sar
stc
addr16
ret
sub
cmc
jb
das
loopne
fnstsw
jge
idivl
fdivs
enter
std
jmp
jle
adc
mov
adc
jbe
stos
sbb
jp
in
or
sub
pop
testb
imul
sbb
jp
adc
sub
sbb
dec
scas
mov
aad
fisttps
sbb
sub
or
mov
repz
dec
or
fisttpll
pop
and
sbb
ret
mov
mov
jnp
dec
enter
bound
int3
or
cmc
or
jle
call
push
xchg
inc
ds
pmulhuw
loop,pt
loope
movsl
mov
dec
fbstp
jmp
lock
lret
or
leave
loop
sti
fmull
vfnmsub231sd
and
repnz
loopne
fstp
lods
ficoms
xchg
sbb
push
in
loop
in
mov
imul
jecxz
in
jbe
test
out
push
adc
mov
imul
adcb
ret
cmp
lret
adc
mov
push
or
in
sahf
std
lods
mov
xor
mov
inc
or
push
xor
cmc
jle
jne
cld
int3
lcall
dec
jmp
jecxz
shr
dec
int3
jp
setnp
xchg
test
pop
fstl
inc
jge
cltd
std
fmul
jbe
int
xor
sub
imul
pop
mov
lods
lods
mov
sbb
mov
enter
cmp
xchg
aaa
inc
cmp
out
scas
xor
push
push
xor
adc
or
push
mov
clc
cmp
jno
stos
fnstsw
gs
out
pusha
mov
mov
dec
pusha
int
mov
test
imul
lss
push
insb
cld
xchg
fidivs
out
dec
dec
out
push
mov
or
mov
cmpsb
xchg
mov
lret
sbb
or
mov
add
dec
pmulhw
dec
out
mov
pop
mov
sahf
mov
inc
loopne
lret
or
or
lret
stc
stos
scas
inc
mov
jo
sub
jbe
in
add
fucom
adc
stos
fs
mov
pop
out
fimuls
jmp
cmp
dec
fmulp
ret
mov
fidivrl
push
xchg
xchg
inc
adc
mov
or
fcmovnbe
lret
xchg
addr16
lahf
push
unpckhps
mov
mov
jb
dec
jbe
fwait
xchg
aas
or
push
loopne
sub
xchg
mov
lret
cmc
or
popa
or
repnz
js
in
sub
js
add
js
loopne
dec
stc
mov
push
out
ljmp
es
cmp
mov
and
jge
sarb
inc
and
subb
pop
pop
dec
add
pop
mov
decl
out
into
mov
loope
cmp
shl
leave
cmp
jp
sti
mov
jg
push
out
in
and
mov
sub
mov
lds
pop
push
shlb
out
outsb
mov
popf
jl
xor
pop
push
xchg
inc
pop
dec
pop
int
dec
outsl
daa
mov
push
mov
mov
sbb
std
das
int
push
mov
aam
loop
popf
lea
icebp
fadd
xchg
xchg
imul
mov
pop
jp
xor
aam
adc
sbb
sbb
pop
outsb
push
cmp
rep
in
or
ljmp
inc
or
outsb
dec
clc
mov
das
aad
dec
lret
outsl
inc
outsb
aad
xlat
data16
subl
rclb
scas
mov
lret
add
aaa
mov
sarl
or
in
dec
aam
mov
cmpsl
or
pop
mov
push
pop
xchg
mov
xchg
int
outsb
jg
mov
mov
out
or
cwtl
sti
unpckhps
push
add
popf
sbb
jo
pop
mov
mov
ret
xchg
add
push
fst
inc
stos
sahf
mov
and
int
in
shrl
pop
xor
jg
bswap
sahf
mov
ljmp
outsb
jge
ror
sbb
xlat
in
mov
subb
pop
cmp
mov
jp
jecxz
jmp
dec
dec
mov
in
sbb
stc
jnp
cli
xchg
lret
out
jg
js
push
inc
sub
push
push
mov
xor
loopne
jno
aas
ljmp
mov
mov
xchg
cmovge
cmpsb
mov
cmp
outsl
fcmove
push
fisubs
stc
adc
sbb
xlat
mov
lahf
mov
out
pop
leave
stos
int
test
jl
lahf
rorb
testb
cmpsl
xchg
aaa
dec
ret
sahf
stos
and
hlt
push
xchg
int
jns
mov
push
push
jmp
into
in
xchg
lret
out
or
cmp
arpl
adc
mov
push
out
add
movsl
jo
inc
inc
adc
filds
push
aad
ja
xchg
ror
add
jg
in
cltd
xchg
adc
mov
fadd
dec
fucomi
out
fsubrl
sub
xchg
adc
adc
jae
cmp
jg
xchg
loope
scas
dec
aad
add
cmc
jg
loopne
std
cwtl
into
inc
push
mov
jge
add
in
dec
loope
movl
and
mov
ds
test
stos
cli
mov
bound
lret
aad
divl
or
lcall
sbb
inc
loop
sbb
lods
dec
mov
or
jno
lods
call
cmpsl
and
fmul
cli
insb
cmpb
jnp
mov
das
lahf
jno
adc
mov
sbb
inc
rcr
sti
inc
mov
dec
lret
nop
adc
sub
in
movsl
lea
in
fnstsw
shl
cmc
int
adc
jecxz
adc
add
dec
mov
pop
cmc
cmp
cmp
aam
sub
push
push
inc
in
inc
adc
mov
in
leave
push
inc
sti
lods
test
insb
push
in
xchg
inc
jle
out
in
dec
inc
lods
adc
lcall
cmpsl
fidivrl
iret
xchg
pusha
xchg
inc
mov
stc
push
movl
jmp
test
iret
adc
out
pushf
mov
cmp
aam
xlat
inc
dec
cs
xchg
xchg
imul
ret
mov
adcl
testl
xor
out
movl
fimuls
cmp
leave
in
cmc
fimuls
push
pop
test
ja
ljmp
or
hlt
out
aas
or
rcl
aas
inc
fisttpll
stos
popa
arpl
push
mov
out
pop
jmp
or
or
adc
push
lds
test
mov
fdiv
pop
adc
lret
xor
push
add
imulb
stos
pop
jge
aam
push
mov
and
icebp
jmp
adc
lahf
inc
jge
subb
adc
nop
mov
push
push
je
and
stos
repz
mov
out
pusha
dec
rep
rolb
cmpsl
fwait
jge
divl
sbb
mov
or
clc
sbb
les
or
sub
icebp
xchg
dec
movl
daa
sub
aad
es
cld
fists
mov
test
fsubr
neg
div
or
leave
pop
fiadds
into
std
cmp
mov
inc
jg
lea
mov
jmp
orl
add
testb
push
lods
xchg
mov
push
mov
lahf
mov
divb
in
push
cmp
aas
push
sahf
leave
push
add
fidivs
lret
iret
fsubr
sti
push
cmc
popa
movsl
rcrb
mov
xchg
lahf
adc
pop
or
dec
mov
mov
int3
mov
cs
stos
ret
int
fists
inc
orl
mov
iret
decl
jnp
inc
cmp
fimuls
push
or
jp
mov
stos
idivb
repz
ds
repnz
icebp
push
lock
and
call
arpl
inc
lret
or
jp
push
add
int
push
dec
lock
mov
clc
mov
sub
in
cltd
in
mov
pop
addb
loopne
int
pop
jbe
mov
pop
ljmp
jecxz
jmp
int
xchg
mov
dec
scas
inc
fistps
mov
sbb
or
fwait
adc
xchg
cmp
scas
xchg
lds
in
shl
icebp
lock
jge
stos
shl
call
and
inc
lea
xchg
mov
jo
fists
rcl
xchg
mov
cmc
lds
fwait
mov
jecxz
cmp
jp
adc
in
jmp
fmul
movsb
int
lods
int3
test
or
pop
mov
das
fsubr
and
add
in
push
icebp
icebp
add
xor
xor
mov
into
pop
push
xlat
push
mov
testl
jo
xlat
cltd
clc
int3
pop
add
call
clc
xchg
in
or
imul
push
ss
mov
dec
jno
lret
ljmp
test
or
popa
ret
xlat
outsl
adc
mulb
in
ljmp
mov
push
and
push
pop
push
and
cmp
filds
inc
icebp
pop
push
xchg
int
bound
or
or
mov
add
aad
lods
xor
fcomp
pop
test
sarb
cld
or
mov
or
sub
in
fdivs
jg
mov
call
push
out
jno
sbb
rolb
in
mov
lds
pop
push
std
xchg
mov
jns
in
out
in
lret
test
mov
into
add
inc
or
out
scas
scas
sahf
pop
arpl
fisubl
into
or
incb
dec
inc
lret
pushf
mov
int3
shr
insl
push
pand
mov
or
insb
mov
ret
jecxz
or
sbb
pop
loopne
fsubrl
jg
or
dec
leave
mul
xor
pop
mov
cld
pop
mov
mov
mov
jmp
inc
pop
into
or
push
jmp
aas
or
jl
and
leave
push
mov
mov
inc
pop
aas
idivb
aad
mov
pop
test
les
ja
int3
xor
and
mov
dec
lock
cmpsb
cli
pop
jno
pop
mov
cmp
cmp
push
repz
or
imul
add
add
test
addr16
cltd
jge
lods
out
xor
jnp
fldl
mov
lret
xchg
es
inc
in
rorb
inc
add
mov
jp
jnp
lret
adc
mov
add
add
in
div
sti
movsb
mov
mov
fwait
rcrl
stos
or
mov
int3
fisubrl
cmp
mov
jo
push
add
stc
fucomp
mov
push
lret
stc
mov
mov
push
jl
fadds
sub
ror
rorl
cs
jg
daa
loopne
jg
ret
shlb
aam
in
ds
repz
repnz
icebp
scas
lret
fisubrl
scas
aam
iret
cmpsl
aam
mov
xor
or
mov
xchg
push
xchg
call
dec
mov
mov
jne
or
sbb
pop
sub
mov
dec
mov
pop
repz
in
rcrb
addr16
dec
dec
or
ret
jmp
lret
add
dec
repz
jns
add
repz
lods
or
push
mov
lahf
ja
xor
or
imul
push
adc
mov
test
jmp
or
dec
adc
jl
xchg
mov
fnstsw
es
jae
add
sbb
pusha
jne
jg
pop
in
mov
test
dec
ficoms
sahf
aam
lods
or
or
mov
call
ficoms
push
xor
sahf
jmp
fldl
scas
add
dec
add
fiadds
orl
add
in
mov
out
popf
jo
mov
jmp
mov
icebp
jo
sbb
pop
push
mov
sub
jo
movsb
push
int
aam
inc
lds
pusha
shrl
jg
insl
ja
int
lahf
out
add
cld
mov
cmpsb
and
fsubs
in
into
add
jae
lods
mov
fstpt
out
or
mov
dec
in
cltd
into
mov
aad
fmull
or
stos
sub
leave
lahf
jmp
pop
aad
cmp
repnz
push
int3
test
aad
adc
daa
lods
pop
mov
mov
fsubrs
pop
aam
pop
xchg
mov
lock
xchg
in
dec
mov
xchg
aad
jbe
and
or
or
lds
dec
mov
das
test
out
addr16
lods
stc
adc
or
jmp
mov
pop
cmpsl
xchg
outsb
pop
dec
lea
and
imul
bnd
fidivs
and
aas
push
out
or
loop
and
outsb
and
mov
fistpll
out
aad
cmc
cwtl
jl
dec
add
dec
and
int
jge
cmpsl
adc
and
clc
lods
ss
adc
test
inc
ud1
sahf
out
insl
dec
fldenv
daa
notb
push
aas
xor
incb
cmpsb
inc
add
in
cmp
insb
inc
mov
jae
int3
xchg
inc
lods
fisttps
xchg
xchg
divb
hlt
out
xlat
push
repnz
ja
t1mskc
lods
mov
add
add
and
jle
dec
mov
test
das
mov
dec
jmp
fidivl
pop
sbb
push
dec
ret
shrl
out
push
in
or
jb
cmp
adc
call
pop
dec
dec
pop
mov
int
vcvtsi2sdl
scas
mov
int
ljmp
sbb
rorl
xor
xor
cmc
cmpsl
pop
rcll
in
or
into
scas
fcomip
mov
int
mov
dec
aam
mov
dec
cld
pop
popa
daa
popf
mov
mov
push
bswap
lods
int3
mov
insb
je
or
cmpsl
ret
loope
sti
or
in
mov
ds
pusha
cmp
push
cld
push
dec
pop
in
out
add
mov
adc
and
data16
push
cwtl
aas
mov
push
addb
adc
rorb
fcomip
mov
divl
fbstp
into
pop
pop
push
and
sub
mov
stc
into
fstpt
push
xchg
dec
push
mov
arpl
push
push
xchg
xchg
cmp
rcl
pop
pop
xlat
cmpsl
push
int
dec
sub
pop
cmpsl
inc
enter
push
mov
push
xor
xlat
fldenv
lods
enter
fstpl
aaa
push
lods
pop
adc
inc
add
rorb
aas
or
or
push
in
or
dec
mov
pop
mov
call
lods
dec
sbb
js
cli
call
mov
fst
clc
call
lods
rclb
mov
jnp
and
orl
pop
inc
popf
xor
ljmp
and
scas
pop
paddsb
mov
fsub
or
lds
mov
jl
or
out
daa
inc
or
sub
push
mov
cld
adcl
push
mov
adc
inc
or
push
cld
aas
int
mov
add
aad
in
leave
cmp
popa
dec
pop
mov
lock
int3
aad
inc
push
push
jmp
cli
out
mov
leave
stos
cmpl
clc
idiv
lds
add
inc
sbb
dec
cmp
lds
sub
addr16
insb
inc
add
loop
lret
aad
and
stos
adc
testl
lahf
fdivr
and
dec
outsb
call
decb
mov
mov
lods
stos
push
dec
fadd
rclb
lods
scas
cltd
je
int3
scas
push
lahf
test
push
mov
adcb
mov
fnstenv
sub
loope
enter
int
into
push
pop
jns
loopne
adc
loop
fisubs
mov
mov
icebp
xchg
or
test
inc
ret
lcall
inc
push
cli
mov
add
movsl
xor
loope
mov
push
ficompl
xor
mov
xorb
fsubrs
js
test
int
aas
lock
int
push
pop
in
scas
jmp
or
nop
repz
pop
push
stos
adc
sti
add
push
scas
dec
dec
xlat
scas
mov
cli
push
jne
adc
out
call
scas
push
and
cmp
and
jns
mov
cmpsb
pop
push
ficoms
dec
fwait
add
arpl
pop
and
mov
sbb
mov
aad
int
aas
mov
fsubs
or
insl
xor
mov
add
aam
mov
sbb
push
dec
inc
xlat
popa
inc
xor
jg
adc
les
mov
cmc
in
dec
xchg
and
movsb
into
push
inc
push
add
xchg
rcrl
mul
sti
sbb
lods
outsb
sub
sub
push
call
es
jmp
xor
sbb
in
mov
jg
out
fistl
addl
xor
sbb
jbe
xchg
repz
daa
ljmp
shl
cld
sbb
mov
cmpsb
rcll
data16
popa
out
adc
insb
or
stc
pop
and
add
mov
stc
cmp
arpl
dec
cmp
and
in
aas
or
fiadds
cltd
divl
sub
into
stos
or
inc
js
mov
ds
repnz
sbb
lea
fcoml
cmovb
mov
scas
adc
mov
fcoml
out
xchg
mov
imul
aam
pop
mov
lock
cs
lret
icebp
or
or
sbb
outsl
mov
shrl
mov
int
movsbl
scas
pop
mov
xchg
fwait
dec
imul
fnstenv
mov
fisttpll
sbb
shl
or
lret
jmp
mov
icebp
in
sbb
push
cltd
xchg
sub
lock
imul
leave
cmp
cltd
pusha
pusha
test
mov
push
clc
cwtl
mov
jne
mov
hlt
lahf
fldl
dec
push
cmpsl
push
inc
cltd
lret
mov
or
scas
mov
loop
push
fwait
dec
jecxz
clc
xor
loop
cmp
dec
push
dec
cmc
push
dec
arpl
jbe
push
sub
arpl
or
mov
mov
or
cmpsb
std
xchg
into
in
cmp
arpl
push
inc
push
rcr
xor
push
mov
arpl
mov
aas
lods
xchg
mov
andb
std
or
mov
lock
jmp
cmp
dec
stos
std
loopne
shll
cs
push
xchg
out
and
jmp
add
or
pop
jae
dec
cltd
dec
inc
negl
fcompl
mov
bound
sbb
mov
mov
lods
lods
addb
adc
lcall
les
sbb
jmp
pop
popa
dec
xchg
mov
test
xchg
aad
inc
jg
jecxz
pop
mov
sub
xor
sub
rorb
ficoml
mov
notb
xor
inc
mov
or
lods
int3
popa
or
cmp
xchg
inc
push
jne
int
xor
or
sbb
xor
mov
outsl
xchg
xchg
std
inc
dec
jns
ljmp
push
cmp
addl
dec
mov
xor
mov
ret
jg
xor
in
mov
inc
adc
cli
lods
je
inc
mov
and
dec
loop
movsb
and
insl
and
into
push
xor
push
mov
mov
sbb
outsb
inc
sub
pop
je
jns
or
mov
into
xor
pop
add
xor
aad
mov
in
adc
push
mov
stos
loope
pop
pop
rolb
add
scas
or
fnsave
stos
ss
out
push
mov
aam
mov
stc
mov
dec
add
lcall
mov
fstl
jg
mov
je
and
dec
scas
mov
push
test
push
out
stos
fisubrl
cld
enter
mov
inc
inc
shlb
sbb
jp
fbstp
mov
notb
pusha
lods
dec
mov
mov
mov
cmc
add
jnp
loopne
inc
aam
out
and
into
push
push
jo
jmp
or
push
out
mov
dec
rolb
jge
fdivrs
push
insb
jg
mov
or
out
outsb
lock
lock
into
fdivs
push
adc
mov
aad
inc
iret
orl
add
pxor
mov
push
push
sub
test
cmpsl
rorl
adc
std
lahf
inc
loopne
jge
out
sbbl
lea
cwtl
pop
mov
xlat
fsubrp
lds
loopne
fst
in
inc
xchg
lea
std
xchg
aam
out
add
fsubl
or
shrl
icebp
scas
movsl
xchg
sti
aad
add
mov
dec
mov
xor
sub
icebp
xchg
dec
pop
fstl
loopne
test
sub
out
fsubs
adc
outsb
inc
aad
xchg
dec
lods
test
mov
inc
lret
arpl
ret
testl
call
and
or
faddp
out
cmp
or
lea
mov
stos
movsl
mov
jle
ds
in
cld
sti
inc
aad
test
or
iretw
in
std
je
adc
loopne
imul
fisubs
push
mov
aad
in
cs
fldl
xchg
add
add
push
or
out
xchg
push
adc
xlat
jnp
js
sti
out
int
cmc
inc
ja
mov
adc
inc
loop
arpl
fyl2xp1
ss
aad
ljmp
les
mov
jecxz
cmp
js
jg
iret
lea
or
rcl
cs
add
mov
insl
or
scas
xchg
mov
dec
aad
out
and
popa
jb
pop
sub
xchg
stc
lret
xor
aad
push
out
cltd
cli
int3
pop
adc
aaa
cmp
pushf
xor
add
jge
test
aad
push
repz
and
pushf
cmp
mov
cmp
lock
push
cmp
adc
sub
dec
xchg
popf
addr16
out
subb
aad
lahf
or
mov
repnz
cli
insb
rcrb
pop
pop
jno
iret
in
xchg
int3
repz
test
jo
and
fwait
decb
or
int3
xchg
inc
popf
xor
ffree
or
cmc
int3
dec
dec
push
fstl
out
bound
adcl
fstl
out
scas
or
adc
dec
dec
mov
adc
lret
popf
or
jp
iret
scas
decb
mov
xor
lods
out
xor
mov
dec
push
fadd
fsts
imul
jns
dec
xchg
push
xchg
mov
mov
xchg
fdivs
sub
jmp
in
fmuls
int3
or
rol
dec
push
cmp
bnd
enter
pop
push
fiadds
sarb
inc
bound
pop
xorl
mov
sbb
into
push
inc
lds
pop
push
lahf
pop
push
mov
pop
jmp
ficoms
lea
scas
es
mov
loopne
jge
fnstenv
jl
jg
fyl2x
pop
fidivrl
push
in
lcall
dec
mov
addr16
dec
xchg
in
repz
cmc
mov
aad
out
jb
inc
aad
xchg
xlat
push
mov
fcoml
fstpt
movsb
cmpsb
xchg
mov
fldenv
add
lret
xor
bound
mov
int
xor
inc
jg
bound
leave
xor
or
adc
xchg
add
dec
ficoml
out
push
data16
ljmp
jg
jl
test
xor
insb
mov
in
pop
cmc
push
cmp
mov
lods
xor
jb
fdivrp
ja
add
mov
clc
int3
fsubl
jmp
pop
fs
gs
mov
mov
outsl
inc
and
pop
mov
into
mov
and
movsb
push
inc
dec
sbb
stc
xchg
jno
sti
stos
xchg
xor
in
mov
push
fmull
lods
scas
test
rcll
cld
cmc
shl
repz
repnz
mov
or
fdivrs
inc
inc
aam
xchg
lret
mov
aad
inc
dec
and
test
push
lods
xchg
push
cld
nop
sbb
xchg
lcall
outsl
add
shl
repz
repnz
popa
movsb
pop
sub
cmp
pop
cwtl
xchg
stos
xchg
movsl
inc
pop
mov
mov
pushf
outsl
xchg
mov
inc
pop
xchg
jnp
dec
sub
pop
inc
jb
xor
stos
fwait
pop
icebp
stos
mov
xor
stc
and
cwtl
cmp
bound
sub
inc
xchg
sbb
stc
fstps
cmp
cmpsb
push
or
cli
mov
fstl
scas
sti
cmc
aad
js
dec
into
mov
scas
stc
popf
rorl
popf
xchg
int
aad
orl
mov
arpl
jp
pusha
test
orl
test
sub
js
gs
jbe
cmp
cltd
fmull
add
fwait
movsl
xchg
popf
add
lods
cmp
aad
push
into
movsl
faddl
outsb
mov
out
adc
or
fimuls
fs
mov
imul
fdivr
push
xchg
lret
aad
aad
sbb
mov
push
xchg
int3
cmp
loope
mov
jmp
mov
adc
lods
aad
inc
std
mov
stos
cld
cmpsb
adc
popf
xchg
popf
and
sbb
or
in
sbb
aad
movsb
jnp
inc
push
jae
stc
sti
decl
bound
mov
arpl
gs
cmp
dec
movsl
mov
inc
stos
sbb
jle
stc
or
int
mov
clc
pop
xchg
gs
jge
pop
jp
push
fisttpl
jge
cld
in
push
pusha
je
ja
push
inc
push
in
mov
push
sub
ffree
push
mov
dec
les
mov
jbe
mov
fidivs
int
inc
imul
gs
cs
jg
paddw
insb
push
or
mov
cmp
adc
into
js
lods
stos
mull
das
call
lea
sub
or
idivb
sarb
or
adc
pop
push
jno
outsl
adc
push
cltd
sub
fcompl
push
push
jp
mov
in
push
sub
out
xchg
mov
dec
pop
or
add
aas
mov
shl
inc
out
sub
js
mov
jb
inc
insl
bound
out
xchg
xchg
int3
dec
or
and
and
dec
xchg
sub
mov
sti
pop
out
mov
xor
push
fwait
dec
mov
or
pusha
out
cmc
or
in
aas
or
ficoms
in
push
aad
mov
mov
stos
leave
pop
add
aad
repz
xlat
aad
push
cmpsl
adc
jno
or
inc
adc
sbb
rcll
jmp
out
adc
enter
jp
mov
dec
inc
push
lcall
cmp
sarb
xchg
loopne
cmp
xor
mov
or
fisttps
rolb
out
test
les
add
aaa
pop
xchg
es
jge
inc
lds
jecxz
stos
xchg
push
std
inc
fmull
fimuls
inc
rol
filds
outsb
add
loope
xchg
test
pop
pusha
cmpsl
shrb
loop
xchg
cmp
xchg
cmp
push
dec
cltd
xchg
push
aaa
cmp
jmp
xchg
cmp
cmpsb
sbb
xchg
mov
popf
imul
xchg
aaa
mov
jge
dec
mov
fistpll
aad
push
dec
xchg
mov
inc
addl
enter
out
mov
mov
sarl
push
stos
mov
data16
lock
cmpsl
lea
sub
mov
mov
lahf
movb
pop
mov
lds
dec
xchg
lods
ljmp
clc
sub
and
push
jb
cli
push
pop
jb
jp
inc
test
pop
clc
and
aad
fmuls
and
fbstp
les
sahf
movsl
cld
xchg
lea
shl
insb
xchg
mov
iret
sub
sub
dec
test
ljmp
xchg
lds
mov
icebp
fstpt
or
xchg
int3
mov
call
data16
push
and
cmp
neg
pop
jg
pop
rorl
inc
fcmovnb
cltd
add
or
rorl
cs
jg
or
test
dec
or
or
lods
ljmp
mov
stos
xor
mull
addr16
adc
push
in
dec
dec
xor
xor
add
pusha
jg
or
faddp
pop
dec
mov
enter
dec
dec
xchg
cmp
and
push
insb
nop
mov
lock
cli
in
insb
xchg
mov
out
sub
daa
and
cmpsb
sbb
mov
and
add
sub
jo
mov
loope
loop
sub
loop
adc
and
or
jo
inc
push
scas
fwait
and
int
xchg
xor
adc
fwait
and
cs
adc
mov
inc
ror
dec
lea
in
push
fidivs
mov
or
or
movsl
pushf
subb
sti
jmp
mov
sti
shlb
xor
jo
cmc
mov
mulb
cld
call
mov
xchg
and
in
aad
stc
or
loop
inc
cmp
mov
or
fcmovb
js
bnd
gs
adc
movsb
jnp
pop
iret
rorl
sub
push
xchg
push
lret
test
adc
and
js
push
push
cmp
sub
and
scas
cli
stos
pusha
cld
cmpsb
push
push
sub
pop
push
call
jbe
mov
int3
shrb
shrb
js
int3
cmp
in
mov
adc
hlt
jnp
push
cmp
push
or
xor
jge
or
mov
mov
fisttps
sbb
insl
cmp
mov
xor
inc
mov
push
orb
mov
push
mov
push
orl
cli
jg
pop
daa
int
or
fnstsw
into
add
push
cmp
mov
pop
dec
jg
push
push
or
add
loope
or
pop
or
jns
jge
rcll
repnz
testl
push
ret
leave
lret
sub
jo
ret
lret
mov
xrelease
mov
sbb
dec
jnp
rcrb
inc
push
fstl
add
sahf
or
divb
std
popa
movsb
xchg
imul
mov
fisttpl
in
orb
add
inc
mov
pop
out
pushf
add
adc
repnz
repz
and
aad
lret
loope
test
lods
mov
stc
lods
sub
or
cmpsb
pop
sub
adc
mov
push
or
in
dec
outsb
loopne,pt
pop
jge
lea
addr16
in
enter
sub
js
lods
push
inc
xchg
jmp
sahf
mov
push
loopne
adc
lods
cmp
sub
mov
mov
insl
dec
sti
cmc
add
fbstp
fisubrl
inc
dec
sbb
sub
inc
jle
arpl
lods
cwtl
cmp
jnp
cmp
cli
sbb
cmp
inc
movl
sti
fidivrl
dec
or
dec
shlb
jp
inc
mov
out
push
test
jb
push
cmc
xor
push
stos
xchg
inc
xlat
in
mov
or
scas
stos
repz
mov
arpl
fimuls
pop
jge
stos
dec
in
lods
jb
enter
jp
leave
ljmp
jno
jnp
loopne
add
or
aad
mov
lret
leave
loope
mov
loop
cmc
imull
xchg
adc
jmp
push
out
aam
cmpsb
enter
pop
inc
loop
out
loop
dec
test
sti
fs
in
out
pusha
xor
jp
cwtl
cltd
add
xchg
add
mov
jl
adc
xchg
inc
sub
ficomps
mov
inc
push
test
push
stos
fcoml
js
outsb
mov
lock
adc
xchg
lahf
shrb
sub
loope
data16
push
jg
ficompl
sbbl
cs
mov
xchg
repnz
ret
in
test
xchg
push
mov
fcmovbe
jns
je
mov
sahf
leave
jle
jle
inc
lds
mov
inc
or
sub
cmpsl
stos
in
xor
adc
pop
xchg
shr
xchg
xchg
or
pushf
push
divl
add
sbb
mov
mov
or
outsb
pop
loope
imul
jl
and
scas
insl
sub
fimuls
xor
mov
ljmp
lret
xchg
loop
lock
mov
and
lock
adc
clc
ret
int
jecxz
in
pop
out
daa
push
ss
push
lret
je
sub
or
pop
xchg
or
fwait
pop
mov
add
rclb
or
out
sbb
xchg
pop
nop
out
aad
dec
outsl
insl
jne
sub
loopne
insb
xchg
mov
sub
daa
mov
shrl
dec
xlat
mov
call
sub
lahf
xor
out
inc
sarb
out
xor
pop
inc
js
jbe
rorb
lret
pusha
stc
out
fucom
adc
movsb
inc
scas
adc
add
push
push
cwtl
xchg
fbld
clc
add
fimull
cmp
push
loope
int
ret
sarb
call
pop
inc
js
fcomp
push
sti
mov
sub
fucomp
adc
movsb
sbbl
iret
fs
xchg
ret
mov
shrb
jl
add
xchg
ljmp
out
ret
and
iret
cld
push
out
ds
lods
xor
pop
sub
arpl
adc
xchg
gs
dec
gs
in
je
call
ret
hlt
xor
ret
stos
sub
lcall
mov
ds
xlat
xchg
loop
nop
fsubrp
xor
fadds
divb
mov
push
insl
mov
cltd
or
or
ud0
aad
fwait
mov
lret
fsubrp
rclb
stos
and
loopne
loopne
loopne,pt
in
fdivs
out
xor
fcmovne
cmpsl
dec
insl
or
inc
xchg
stos
pop
mov
pop
out
or
lahf
adc
inc
rcll
or
mov
xor
insb
sbb
xlat
push
inc
icebp
loopne
shr
mov
scas
dec
sbb
add
jg
lods
pop
or
mov
mov
ds
push
repnz
mov
out
cld
adc
inc
in
add
mov
repz
push
dec
push
lahf
xor
loope
inc
xchg
out
lock
mov
pop
out
in
insb
sub
rclb
xchg
lea
lods
icebp
call
jg
scas
cmp
cmc
xor
pop
push
aad
jle
or
cmp
xor
out
cld
call
stos
sub
notb
or
out
jle
lret
ds
add
out
div
xor
pop
out
std
cmpb
std
adc
jne
cmpl
scas
mov
call
mov
xor
les
fidivs
pop
cmp
mov
pushf
and
stc
adc
sbb
outsl
lret
or
dec
jno
mov
xchg
inc
shll
popf
aas
or
sarb
cli
sbb
xor
pop
inc
js
dec
and
jp
cs
mov
sti
adc
in
dec
jmp
xchg
inc
scas
mov
sbb
iret
or
rclb
enter
addr16
aad
popf
imul
jo
push
std
inc
fidivs
cmpsl
leave
push
stos
push
mov
insb
and
std
cmc
mov
xor
pop
pop
lock
jecxz
imul
or
jbe
pop
mov
xor
jne
or
std
mov
aas
add
lods
and
or
mov
out
outsb
push
icebp
and
sbb
xor
inc
les
cltd
xchg
stos
icebp
xchg
icebp
cmc
lret
and
cmp
call
push
jge,pt
call
pop
pop
xchg
mov
xchg
cmp
shrb
or
jne
cmp
xchg
movsb
call
adc
xchg
sti
mov
sbb
aad
xchg
or
push
xchg
aad
insb
xchg
inc
cld
out
hlt
mov
and
xor
lds
js
or
fmuls
fiaddl
in
lock
out
aaa
mov
out
stos
jno
leave
aad
aaa
js
aaa
jae
inc
push
loopne
cmpsl
insb
mov
pop
cs
jg
daa
loopne
out
or
inc
in
pop
test
pop
out
inc
or
loopne
add
in
stos
cmc
stos
scas
fiaddl
das
aad
xchg
dec
outsl
fadds
ds
icebp
sub
adc
out
stos
clc
pop
pop
and
lret
in
add
cmpsl
dec
out
int
jl
fimuls
rclb
stos
and
loopne
in
or
iret
mov
sub
pop
mov
or
pushf
sub
pop
add
dec
mov
mov
push
subl
mov
mov
sub
cmp
or
and
loopne
bound
jg
test
push
in
adc
cmp
fildl
insb
xchg
mov
cmpsb
popa
call
decb
xor
movsl
add
fldenv
lret
xor
pop
adc
rcrb
lods
and
cli
inc
rclb
test
stos
repz
aas
leave
fs
shll
loopne
push
int3
andl
rcl
nop
cs
jno
xchg
adcb
movsb
jne
fidivs
cmpsb
dec
pop
loop
scas
mov
mov
aam
mov
decl
fwait
mov
pop
stc
jne
test
push
dec
mov
jmp
stos
add
cli
jbe
fsubrl
outsb
jbe
dec
and
mov
out
cld
ja
inc
push
aad
xor
fnstsw
sbb
pushf
or
pop
adc
icebp
daa
and
mov
jns
xor
sahf
ds
nop
add
scas
fistpll
aad
mov
into
lods
cli
dec
out
xlat
nop
rcll
lds
and
dec
jno
jnp
inc
das
gs
mov
enter
in
xchg
push
dec
pop
lods
dec
leave
jb
sahf
cld
jp
xchg
push
stos
lret
leave
inc
cmpsb
jg
ljmp
das
or
pop
cmp
mov
aad
jg
aam
or
pop
int
std
fs
mov
and
xchg
fcmovnb
push
or
sub
popa
or
sub
cld
testl
in
fcoml
loopne
or
sbb
data16
xchg
fs
stos
push
fucom
jne
ldmxcsr
dec
sbb
cmp
fstl
fnstsw
fidivl
in
cmp
push
out
adc
insb
xchg
push
clc
aad
adc
cs
jg
daa
loopne
popa
or
call
or
test
mov
enter
sub
mov
lret
clc
js
xchg
imul
mov
add
jmp
mov
push
jmp
pop
idivl
mov
or
jno
rcr
in
jns
popa
xorb
dec
mov
mov
test
nop
push
repz
dec
clc
and
inc
sbb
pop
lods
mov
pmovmskb
fcomp
scas
fldl
push
fmulp
pop
ljmp
push
outsl
and
mov
mov
aas
aad
xor
std
sub
mov
mov
filds
outsb
add
mov
mov
bound
dec
dec
pop
out
cmp
push
idiv
jge
jle
movl
scas
jmp
fisubs
jmp
pop
in
and
stc
dec
pinsrw
sti
lds
fs
aas
test
cmpsl
cld
in
fildl
cmp
push
jbe
or
in
mov
and
aad
or
dec
inc
mov
push
sbb
aas
repz
lea
jp
push
movnti
cmp
mov
cmpsl
jb
cmpsl
mov
xchg
pop
mov
pop
mov
insl
aad
add
out
pushf
inc
xor
or
imul
test
and
into
jnp
and
add
mov
aaa
lret
fsub
or
push
fsub
jb
fwait
lds
out
xor
aam
sbb
movsl
sub
je
fidivl
cs
cli
sub
mov
xchg
pop
push
jecxz
cmp
or
iret
and
or
dec
fisttpl
repz
pop
xchg
jge
xchg
sahf
dec
test
cld
enter
push
sahf
pop
push
into
fdivs
inc
scas
cld
int3
jmp
rcl
movsl
inc
or
mov
in
adc
aad
push
out
scas
loopne
in
in
mov
pop
lock
in
pop
pop
loopne
push
in
mov
loopne
jnp
dec
xlat
in
or
cld
lahf
outsb
lods
femms
in
fimuls
outsb
aad
popa
outsb
fimuls
subl
scas
in
insl
cmp
jmp
ffree
mov
cwtl
lods
enter
mov
fsubrp
mov
dec
or
cs
push
dec
xchg
pop
push
mov
cltd
int
aad
jbe
lods
in
dec
out
in
add
addr16
mov
pop
jno
mov
add
cld
xchg
jle
jl
stos
in
aas
push
mov
or
insb
aad
clc
and
in
outsb
dec
sub
ja
mov
mov
jne
jge
lret
imul
js
daa
xor
cmc
jecxz
pop
fadds
inc
pop
jnp
push
pop
mov
cmpsb
adc
mov
jp
lods
xchg
lcall
jbe
push
xor
das
aam
or
out
ret
adc
mov
xchg
mov
mov
gs
stos
lahf
jbe
adc
sbb
in
cmp
ficompl
cmpsl
and
cmp
aad
add
jmp
mov
or
arpl
in
pmaxsw
inc
popf
pop
inc
dec
sbb
cld
add
mov
lods
ja
sub
sti
aad
testl
cmp
fisubs
mov
nopl
jl
add
sub
fildll
ret
out
sub
aaa
repz
lock
fsubrl
xchg
movb
jmp
sbb
and
mov
pop
ficoml
popa
adc
mov
add
xchg
push
aad
aad
cmp
jmp
adc
push
into
push
xchg
icebp
mov
or
cli
and
fldl
out
pop
lret
jmp
push
mov
push
or
pop
scas
jmp
fucomp
mov
mov
andl
dec
aas
jecxz
or
aad
js
repz
int
daa
fsubrp
cmp
imul
aad
stos
pop
and
adc
dec
mov
mov
sub
inc
cmp
mov
mov
js
jns
or
test
inc
pusha
jl
add
cmpsb
shrb
adc
mov
push
xchg
jl
xchg
loop
test
mov
or
or
shr
and
jmp
or
add
aas
push
imul
cmp
mov
fisttpll
cli
mov
cmp
mov
andb
push
out
dec
insb
pop
dec
int
mov
std
out
or
or
dec
xchg
sbb
test
cmpsb
inc
lock
jg
dec
mov
sub
cli
lret
negl
mov
in
das
mov
int3
repz
sub
and
mov
leave
cld
lods
dec
xchg
mov
xor
push
add
repz
idivl
xchg
push
jge
and
sub
inc
mov
add
std
frstor
inc
add
xchg
out
adc
inc
hlt
in
aas
test
xlat
ja
mov
dec
push
js
sbb
add
jnp
arpl
lcall
jmp
icebp
adc
and
not
shlb
movsl
adc
lcall
push
fstps
gs
mov
lods
je
add
pop
xor
or
insb
fstps
imul
mov
adc
loopne
sarb
inc
push
mov
stc
js
andb
test
xor
lahf
pop
push
xor
ds
jne
adc
aad
sbb
cmp
pushf
in
mov
cmp
add
icebp
xor
bound
ss
mov
lret
call
dec
mov
push
in
cmpsb
insb
dec
sbb
iret
mov
cmp
cmpl
sti
orb
roll
scas
fbstp
gs
push
ljmp
decl
in
adc
sbb
arpl
and
aam
inc
mov
out
xor
mov
popa
mov
fsubrp
xor
out
mov
pop
sarl
mov
adc
cmp
iret
add
mov
jg
mov
loop
or
jg
lcall
cmpl
xchg
jl
or
lods
out
inc
or
stc
mul
out
jecxz
cmp
or
std
or
call
xchg
or
cmp
push
pop
repz
pop
cmp
mov
idivb
adc
jp
aam
aad
es
jno
les
neg
mov
push
cmpb
data16
jnp
shr
clc
mov
rcrb
mov
cli
push
xchg
shr
mov
stos
push
in
popa
out
mov
or
scas
or
sub
aas
stc
fimuls
aas
aad
ret
and
les
or
jns
fadds
xchg
daa
mov
jns
lret
mov
inc
testb
xlat
fidivrs
mov
orl
add
iret
popf
pop
int
cmpb
inc
aad
mull
lret
inc
mov
push
sbb
not
mov
std
ja
scas
sarb
or
aaa
mov
push
fst
mov
sbb
imul
out
out
fbstp
in
daa
fdivrp
dec
jne
inc
lret
dec
mov
lds
leave
hlt
lret
fists
xchg
xor
cmpsl
cli
cmp
divl
cld
inc
mov
xchg
call
xor
xchg
mov
cmp
dec
cmc
mov
in
dec
aad
xchg
int3
outsl
test
loop
mov
sbb
hlt
lret
arpl
rorb
mov
mov
pushf
into
ds
mov
rcrb
xor
inc
mov
sub
mov
loope
mov
mov
jmp
mov
sbb
inc
repnz
nop
cltd
out
mov
int3
jne
mov
or
lock
inc
pop
cmp
mov
push
push
lret
sub
or
inc
test
xchg
and
mov
test
fs
repz
mov
fildll
mov
inc
add
mov
out
jbe
sub
aad
fdivs
cld
add
jmp
popf
popl
jp
add
test
test
outsl
jno
mov
pop
lods
dec
pop
js
add
mov
shll
stos
or
and
adc
std
mov
int3
mov
mov
or
ja
cwtl
imulb
xchg
cmc
repz
xor
pop
cmp
insl
push
test
int
std
mov
adc
jl
and
bound
ror
or
das
xchg
in
rolb
pop
andb
cmp
int
cld
inc
mov
fists
mov
ret
push
movhps
or
cmpb
imul
or
dec
mov
loopne
call
scas
pusha
jnp
insl
loope
rcr
mov
lea
call
cli
insb
aas
xchg
int
adcl
fidivrs
shlb
mov
sbb
xchg
xchg
imul
shll
push
or
int
and
jge
xchg
movl
or
cmp
in
xchg
into
int
or
push
xchg
push
mov
ret
xchg
pop
push
or
mov
mov
push
mov
dec
jge
js
add
imul
cld
xchg
aas
pop
jb
aas
or
or
push
ficoms
add
leave
mov
cli
jg
push
dec
lret
loope
scas
incb
scas
incb
scas
incb
jnp
xchg
fistpl
cmp
inc
cmp
cmp
mov
xchg
jmp
jecxz
pop
adc
jnp
daa
xchg
test
jg
mov
add
je
and
insl
stos
fcom
cmc
test
jg
int
pop
dec
aad
mov
int
cmp
scas
jmp
loop
daa
repz
aad
sub
pop
sub
sbb
ffree
stos
stc
out
mov
push
test
push
jmp
adc
nop
imul
and
pop
inc
dec
add
mov
xchg
push
jns
test
in
rcr
add
adc
or
adc
jnp
push
popf
jp
add
sub
add
jbe
push
add
cmp
sub
jl
jae
clc
aaa
aam
fadds
int
data16
mov
scas
shlb
addr16
mov
in
dec
mov
iret
mov
es
push
loopne
mov
out
insb
call
js
inc
call
pop
leave
inc
lret
push
pop
mov
iret
and
sub
push
push
jno
and
push
cmp
movsl
call
push
loopne
rcl
or
out
push
adc
aam
or
call
addb
lds
or
rorb
les
pusha
or
adc
and
lahf
popa
je
in
push
xchg
aaa
push
dec
sub
aam
sub
sbb
int
pop
jle
jne
arpl
dec
data16
scas
jg
adc
out
push
iret
xchg
icebp
mov
in
js
outsb
pop
lea
bound
lock
dec
adc
loopne
rol
repz
jns
jmp
sbb
movl
or
inc
dec
mov
nop
pushf
mov
nop
imul
jns
jo
lods
add
les
push
dec
sahf
jnp
xor
sahf
xchg
mov
lahf
jae
addr16
movsb
xor
and
sahf
push
sub
not
sahf
xchg
mov
test
loopne
loop
out
and
popa
cli
repz
les
sub
sahf
cmpsb
in
loope
sub
out
inc
lret
cs
sahf
inc
push
outsl
mov
mov
ficoms
pop
dec
sub
xor
push
jle
insl
or
insl
insl
or
or
ret
push
fstpl
sbb
sub
cltd
mov
scas
or
das
call
ja
mov
ljmp
in
pop
fistl
out
repnz
push
pop
add
mov
xchg
aas
test
lods
mov
mov
sub
adc
cwtl
adc
ja
push
leave
clc
pop
or
dec
dec
out
mov
jne
cwtl
push
mov
cmp
xchg
mov
jg
cmp
adc
cwtl
or
lods
cmc
cmp
mov
dec
mov
in
mov
cwtl
xchg
mov
stos
lret
andl
fisttpll
jnp
popa
xchg
mov
fnstcw
xor
out
xor
div
pop
mov
and
or
or
int3
push
test
sarb
loop
jmp
clc
or
idivl
test
das
mov
fsts
fbstp
mov
xchg
xchg
sub
fimuls
push
fimull
inc
int3
repz
stos
loopne
test
cmc
xchg
cmpsl
mov
js
adc
lock
mov
sbb
cmp
add
stos
out
cmp
or
mov
lock
arpl
or
or
add
cmp
adc
ficoml
sub
lods
cmpsb
and
adc
iret
pop
mov
mov
cmp
ja
add
push
add
insb
lods
mov
or
push
cmp
cmp
fucom
stc
jnp
inc
mov
fnsave
movsb
and
testb
bound
add
dec
cmp
sbb
xchg
scas
repz
push
push
add
cmp
leave
and
enter
mov
inc
std
stos
cld
pop
stos
ret
inc
lock
cli
sub
movsl
iret
lret
pusha
pop
call
arpl
inc
les
cli
sub
cli
inc
int
pop
or
test
or
fwait
xlat
icebp
loop
mov
mov
pop
pop
ds
inc
cld
addr16
mov
mov
mov
into
and
outsl
sarb
std
stos
les
dec
xchg
jno
inc
cmpsb
inc
les
into
mov
arpl
stos
les
daa
stos
fcmovu
jnp
xchg
test
fimuls
into
stos
repz
in
les
gs
sar
jae
mov
std
cli
add
mov
into
test
jo
icebp
lret
jg
xor
imul
add
fwait
loop
push
mov
call
outsb
xchg
jge
out
pop
push
pop
push
arpl
mov
ja
mov
test
fldz
xor
loopne
lret
js
and
sbb
in
jl
cwtl
pop
sub
insb
hlt
mov
mov
or
adc
or
cwtl
sub
lds
cmp
push
stos
xchg
inc
cmp
mov
cmp
mov
dec
jmp
push
pop
aad
aad
xchg
mov
out
dec
push
test
out
lds
xchg
dec
shlb
icebp
int
pop
fs
and
call
jmp
fisubl
icebp
stos
lret
cmc
addr16
inc
mov
stos
mov
enter
ljmp
adc
adc
notb
ja
dec
mov
cmp
mov
jmp
scas
aad
push
pop
popa
popa
push
cmp
pop
cmp
cwtl
lret
out
stos
ss
idivl
aad
call
test
add
aad
jecxz
inc
es
sbb
jne
loopne
and
or
mov
std
adc
adc
in
insb
xchg
test
inc
xor
aas
in
sbb
xor
pop
add
jo
out
icebp
lods
das
aad
mov
mov
lock
mov
cmp
ds
sti
cli
dec
out
sub
cmp
mov
aas
cmp
ljmp
mov
lret
imul
rcl
or
dec
or
sbb
jne
mov
int3
jns
push
sti
adc
in
call
fmul
insl
int
lods
push
dec
xchg
or
adc
adc
add
fnstsw
push
testl
aam
mov
sbb
pop
or
repz
and
loop
in
and
stos
bound
mov
mov
jge
jnp
ljmp
mov
imul
or
dec
jbe
scas
push
mov
into
jmp
push
mov
ljmp
dec
out
scas
fbstp
out
mov
jmp
ljmp
ljmp
add
pop
xchg
or
ljmp
aas
std
pop
jnp
xchg
jmp
std
testb
arpl
dec
or
popa
stos
xor
mov
pop
dec
add
mov
mov
dec
inc
mov
push
in
jge
fwait
cmp
aas
in
xchg
scas
ret
cmp
ljmp
jmp
scas
sahf
out
add
mov
fucom
lock
jb
fistl
push
jl
jg
rorl
sub
out
je,pn
and
or
rol
jmp
mov
cs
stos
and
mov
int3
gs
jo
das
adc
push
mov
dec
add
fnstsw
dec
mov
aad
fsubrl
add
or
ljmp
rorl
cmp
mov
scas
stos
lret
fimuls
scas
inc
mov
in
rorl
push
mov
stc
rolb
mov
dec
inc
dec
mov
add
push
mov
lods
jp
add
jno
ljmp
std
dec
insb
mov
out
jae
inc
mov
jmp
mov
cmp
xchg
aam
and
sub
insb
mov
lea
push
jmp
icebp
mov
fiadds
sbb
loope
sbb
or
or
sub
push
mov
dec
pop
dec
mov
out
bsf
popa
out
cmp
ljmp
jecxz
in
dec
mov
push
or
jo
mov
cmp
push
or
mov
inc
cmp
int3
aad
arpl
pop
arpl
inc
xchg
mov
xor
aas
or
stos
dec
scas
mov
pop
xchg
call
ret
aam
sub
or
mov
sub
and
addr16
negb
loope
rorb
fsubr
or
insb
nop
xor
push
jns
das
out
mov
jge
lcall
pop
aaa
xchg
lret
les
movsb
stc
sbb
dec
frstor
sbb
inc
mov
bound
in
inc
xor
incl
insl
in
push
pop
int3
jb
ljmp
adc
test
push
sarb
je
call
pop
outsl
rorl
or
test
mov
in
ret
pop
push
call
jle
cmpsl
or
xor
push
lods
pop
pop
mov
repz
outsl
popa
pushl
int3
add
nop
stos
mov
subb
xchg
mov
or
mov
jp
fs
aad
pop
ss
fiadds
lods
and
or
int3
aad
xor
icebp
scas
push
jne
pop
aad
mov
jmp
hlt
jg
loope
scas
in
addb
mov
dec
inc
jno
shll
rorb
push
xchg
adc
pop
xor
incb
or
adc
dec
pop
aad
inc
adc
mov
lods
pusha
fsubrl
loop
mov
lret
shll
sub
sub
cmp
cmp
mov
inc
lret
jns
or
int3
and
mov
jp
cmpsb
push
lret
mov
mov
jg
and
loopne
jl
push
dec
rol
aas
pop
dec
mov
fucomp
lret
out
sti
cmp
inc
mov
mov
pop
pop
add
scas
adc
imul
enter
out
out
xor
mov
lret
out
in
push
out
aad
dec
fwait
in
out
mov
lret
rorb
sub
adc
sub
jg
dec
inc
inc
jl
or
mov
sub
lret
push
cltd
sti
std
leave
mov
cld
arpl
inc
sti
or
jg
dec
cmp
lds
ds
out
mov
or
mov
pop
imul
cmc
cmpb
fldt
push
lret
dec
sbb
push
mov
aad
in
das
mov
loop
dec
scas
lods
mov
add
and
xor
and
lret
sub
jne
push
cwtl
pop
arpl
fwait
leave
or
por
xlat
jmp
add
ret
outsl
xchg
enter
out
push
jne
int
outsb
xchg
push
or
rorb
in
in
and
ja
fucom
push
mov
lds
mov
shl
jmp
mov
or
aad
lods
mov
sub
inc
mov
les
and
arpl
xor
pop
mov
jae
push
aas
adc
jg
or
in
adc
or
cmp
mov
fwait
cmp
out
addr16
sahf
and
mov
adc
mov
lret
or
pop
mov
ror
push
jp
inc
js
and
imul
or
dec
dec
mov
dec
lcall
mov
in
stos
outsb
jl
mov
daa
sub
in
jmpw
sub
lods
and
hlt
xor
icebp
std
mov
idiv
cmp
add
or
mov
filds
into
xchg
xchg
stc
mov
insb
cmpsb
lret
in
gs
out
bound
jp
pop
push
xchg
not
jl
or
mov
push
js
test
lods
sti
push
jecxz
aad
dec
adc
mov
vunpckhps
push
add
mov
lret
cmp
adc
xchg
test
repz
ljmp
movsl
test
push
jg
ljmp
fidivl
sti
cmp
jbe
fiaddl
inc
cmp
fisubrs
xchg
cld
or
cmp
jns
adc
cli
fidivrs
push
mov
jbe
sbb
fincstp
aas
xor
or
orl
inc
int
pop
cld
stc
aad
jp
pop
inc
xlat
stos
into
jle
sbb
pop
pop
xor
dec
out
add
rcr
fcmovne
xlat
inc
mov
cmpsl
std
cld
add
pop
aad
stos
sti
mov
pop
lret
push
sub
pop
sbb
cli
push
xchg
lds
pop
int3
mov
push
fnsave
jns
loop
pop
xchg
inc
gs
mov
or
add
stos
sub
pop
ja
nop
xchg
and
jae
shl
pop
popa
dec
inc
jae
maskmovq
notl
je
out
gs
insl
mov
push
ds
adc
sbb
cmp
jo
pop
dec
cli
fdivrs
xor
aas
ljmp
cmpsl
push
cmpsb
mov
inc
fcmovne
sbb
outsl
mov
aad
mov
add
scas
std
out
xchg
jg
sti
mov
in
or
int
jb
fadd
or
sahf
stc
push
adc
cmpsl
pusha
xor
sbb
jae
sub
stos
mov
jmp
arpl
push
cmp
inc
mov
sti
cmc
roll
je
call
dec
or
fisubs
out
aaa
ljmp
aad
cmp
mov
cmp
jbe
sbb
sub
inc
cmp
aad
mov
lea
inc
adc
add
sbb
push
or
pusha
push
loope
popa
stos
leave
mov
sub
mov
call
jne
cmp
or
cmpsb
fwait
popf
cmpsb
mov
cmpsl
mov
adc
stc
add
mov
xchg
mov
jnp
pop
or
mov
leave
out
cmpsb
in
dec
in
xchg
call
aad
cmp
cs
scas
add
dec
mov
fisttpll
sbbl
mov
loop
fnsave
test
movb
dec
pop
jae
sbb
dec
int
not
loopne
or
rcrl
rorb
adc
and
mov
lcall
stc
movsl
mov
or
aam
jecxz
clc
scas
mov
lods
rorb
inc
push
fisttpll
dec
out
mov
ss
dec
rol
incl
fisubrs
xor
sub
cli
jb
mov
ja
or
cli
aam
aas
into
jg
or
or
insb
movsb
jb
jg
mov
dec
add
movl
orl
outsb
jg
in
cs
xor
cli
scas
lret
fst
adc
jge
invlpg
push
cli
mov
enter
dec
jbe
fucom
scas
cmp
xor
jmp
in
sbb
pop
add
in
hlt
dec
sbb
insl
ds
fs
test
jae
xchg
mov
aad
lea
pop
ret
sbb
test
xlat
cld
in
nop
cwtl
rorb
jge
notb
mov
test
dec
jb
int3
loop
aas
sbb
sahf
icebp
inc
dec
scas
icebp
loope
cmpsb
sbb
aad
aad
mov
mov
std
icebp
scas
jl
arpl
cmp
push
fs
jmp
inc
es
or
cmp
mov
scas
imul
jge
and
test
adc
movq
cmp
in
pop
lods
int
dec
cwtl
sbb
into
lea
into
in
mov
cmc
lahf
lock
adc
push
shl
into
sub
lret
dec
xchg
or
outsl
push
cld
icebp
cmp
outsl
fisttpll
xchg
jl
loopne
or
lock
outsb
xchg
popa
adc
xor
sub
imul
adc
sbbl
int3
stos
mov
scas
icebp
cmpsb
int3
sub
xchg
dec
push
add
or
sahf
or
fnstenv
sti
cmp
add
out
inc
daa
mov
sub
jae
cmp
aad
push
xbegin
cmpsb
pop
popa
sbb
and
cmp
mov
or
adc
or
iret
insb
out
mov
aad
dec
adc
test
scas
pop
in
fdivr
cmp
insb
addr16
std
popf
js
mov
lods
loope
je
pop
push
insl
lret
iret
andb
test
pop
ljmp
cmp
rolb
mov
cmp
xchg
pushf
int3
xorb
loop
pop
and
pop
psubb
mov
xchg
mov
repz
push
lcall
les
mov
ja
sbb
int3
or
out
push
mov
js
in
hlt
sub
nop
inc
fwait
mov
or
insb
pop
mov
fdiv
xchg
lods
sarl
roll
xchg
xchg
lret
shrb
or
add
aad
arpl
or
pop
jg
loopne
in
inc
push
lret
jb
aam
ds
mov
loopne
adc
mov
mov
mov
cmp
xlat
and
xorl
dec
cli
fcmovnbe
or
mov
inc
test
sub
ret
jge
popl
call
repnz
scas
std
sub
or
in
lods
iret
loop
jg
lret
or
mov
pushf
aad
dec
mov
and
pop
xlat
arpl
pop
repz
xor
fisttps
mov
incl
mov
xchg
dec
sti
pop
mov
cmp
lret
pop
repz
scas
sub
cmp
and
test
mov
shll
mov
into
mov
and
ja
inc
aas
fiaddl
and
arpl
rcll
inc
pusha
cmp
insl
mov
stc
pop
int
clc
jns
dec
adc
fadds
sub
push
nop
or
or
inc
lcall
inc
aad
mov
ljmp
arpl
test
scas
sub
sbb
lods
popf
xor
or
test
aas
fsubp
push
pusha
insl
lods
ljmp
or
xchg
repz
inc
es
imul
dec
loop
pop
dec
loop
push
add
lds
inc
pop
adc
scas
fimuls
or
clc
jg
mov
or
enter
in
sub
xchg
inc
sub
in
lods
imul
lcall
dec
dec
cld
adc
push
xchg
push
ret
or
jp
addl
jge
mov
cmpsl
mov
adc
sbb
push
aam
sub
fwait
iret
push
test
add
inc
and
cmp
outsl
aad
loopne
jno
test
jbe
arpl
push
lret
fdivrs
sarb
add
lds
lea
test
cmp
cmp
lods
jnp
test
or
jmp
mov
xor
jbe
idiv
les
inc
out
outsb
sarb
sub
outsb
rcll
movb
cmp
scas
lret
fucomp
add
out
mov
jle
lods
push
xor
cmc
xchg
js
decb
jecxz
jge
lock
cltd
sbb
cld
cwtl
daa
push
lds
sub
push
nop
int
std
rep
ljmp
inc
jne
ss
loopne
out
dec
lock
repz
in
mov
scas
stos
jp
pop
out
pop
and
mov
jg
js
mov
and
cwtl
or
and
xchg
mov
into
out
add
dec
test
repz
shlb
mov
mov
inc
dec
stos
fcmovb
arpl
stos
and
popf
mov
std
adc
cmp
nop
dec
lret
lahf
loope
jg
imul
cmc
arpl
or
cmc
leave
push
int3
push
mov
imul
hlt
dec
jno
jle
mov
dec
or
lahf
cwtl
add
test
push
add
mov
xchg
inc
fmul
xchg
pusha
jl
lods
mov
scas
mov
stos
mov
cmp
aaa
bndldx
and
icebp
mov
aas
or
fdivrs
in
stos
mov
lret
cmp
mov
add
rep
call
or
inc
mov
cltd
pop
out
add
pop
popa
pop
mov
jl
stos
fstps
jp
sti
nop
iret
xchg
dec
add
pop
push
add
sbb
hlt
arpl
cmpsl
inc
add
lahf
decl
scas
ror
jnp
jp
push
hlt
sbb
xchg
jmp
pop
or
xlat
stc
push
sbb
imul
int
and
sub
or
inc
gs
nop
push
pop
popf
lock
xchg
jg
sub
dec
out
jnp
into
enter
jno
stos
cmp
mov
xor
rcll
adc
ljmp
cmp
aam
test
xchg
rol
div
lods
cmp
xor
out
aam
fwait
jnp
adc
mov
sub
in
repz
jge
inc
rorb
cwtl
add
leave
idivb
imul
scas
cmp
adc
push
fsubrl
push
jg
dec
jp
push
jmp
scas
push
cmpsl
popf
mov
addr16
xlat
xchg
mov
lret
cmpsl
sub
pop
mov
jmp
adc
push
sbb
nop
push
adc
jg
push
push
adc
cltd
jl
sete
push
adc
rolb
adc
xchg
push
xchg
dec
popf
out
lret
push
dec
scas
stc
in
lahf
push
cmp
xor
lods
cli
popf
dec
cmp
ja
out
out
scas
mov
jno
leave
rclb
sub
out
and
cltd
call
mov
sbb
call
jns
lret
cmp
fisubs
add
jge
popa
sub
ljmp
imul
xor
cltd
ljmp
sti
xor
push
std
mov
xchg
mov
and
mov
out
out
add
lock
mov
and
cmpb
and
push
icebp
xchg
test
sub
mul
out
or
gs
dec
inc
inc
jo
adc
pop
add
and
repnz
sbb
aaa
icebp
push
jmp
jo
cmp
cli
sub
aad
pop
and
push
adc
call
jae
es
xor
xor
mov
mov
ret
jb
jg
jmp
test
adc
in
jno
xchg
add
sub
imul
add
lret
repnz
stc
clc
adc
xor
mov
jmp
jge
and
mov
cmp
mov
or
imul
inc
cmp
shll
cmp
mov
iret
in
xchg
mov
idiv
mov
cs
shlb
push
mov
push
icebp
notb
push
pop
jmp
aam
movsl
jge
out
aad
loopne
sub
cmc
push
incb
mov
je
xchg
cmp
push
lret
mov
inc
mov
mov
sub
sti
pop
mov
or
inc
lods
xchg
pop
sarl
sub
push
pop
loope
inc
mov
cmpsb
test
arpl
std
cmp
mov
sub
cmp
repz
subl
lret
mov
stc
inc
not
sbb
or
stos
insb
jle
pop
pusha
test
pop
and
mov
out
loopne
xor
fs
arpl
mov
xchg
jne
das
xchg
mov
cmp
out
cwtl
fsubp
daa
aam
dec
and
sub
xchg
and
or
cmc
dec
repz
aad
icebp
or
dec
mov
pusha
icebp
push
jnp
aad
icebp
loope
jbe
push
xorl
add
xor
lods
popf
or
push
sbb
and
xlat
movsb
inc
shrl
push
sti
aas
cmp
inc
arpl
imul
xchg
mov
sub
push
filds
sub
insb
pop
push
inc
adc
mov
pop
cmc
out
and
sub
sbb
sub
dec
fildl
sbb
scas
adc
sub
inc
lret
sbb
jle
cmp
test
fstpl
jp
mov
cmp
hlt
mov
dec
aas
xchg
mov
jmp
xchg
into
shlb
sbb
inc
lods
int3
xchg
shr
xor
pop
xchg
xor
and
ja
xchg
dec
sbb
sbb
call
xor
inc
nop
sub
lret
cmp
js
push
inc
pop
aad
sahf
push
dec
nop
and
out
cli
mov
mov
or
add
daa
rorb
aad
lret
cmpsb
xorb
loopne
adc
aad
mov
jns
or
mov
nop
ljmp
mov
jp
xor
ret
loopne
daa
push
inc
sbb
pop
xor
pop
sbb
loope
mov
lcall
adc
push
std
fdivrl
jp,pn
dec
sbb
pop
inc
cmp
sbbl
add
ss
cmp
idiv
orb
mov
sbb
bound
xor
push
cmc
jecxz
xchg
mov
aam
cmp
push
push
stc
mov
push
cmp
push
pop
shl
adc
aam
pop
adc
and
in
push
fwait
loope
incl
fcomps
es
push
adc
shlb
pop
cmp
mov
clc
or
jbe
adc
cmc
hlt
loop
dec
cmpsl
ficompl
add
add
int3
inc
into
les
inc
roll
xchg
sub
or
inc
int3
lods
xor
inc
nop
call
dec
mov
jg
push
push
test
clc
sub
inc
adc
cmc
inc
xchg
pop
or
pop
xchg
outsl
adc
dec
in
aas
sti
pusha
push
ret
outsl
dec
scas
aad
xor
lahf
pop
lea
adc
out
jg
or
mov
out
not
and
loope
jl
adc
xchg
loope
or
push
into
sbb
imul
lock
aad
sub
dec
or
xchg
popa
xchg
jg
out
into
add
xchg
in
outsb
xor
cs
mov
jecxz
jo
in
or
fcoms
out
sub
in
out
xor
test
cmp
mov
loopne
xorb
xchg
aas
out
dec
jg
in
or
adc
call
out
jmp
dec
push
inc
push
jp
sbb
jnp
inc
ret
test
shl
add
mov
jmp
in
jmp
or
gs
jmp
jmp
fucomp
push
ds
jmp
fcompp
mov
aad
repz
call
xchg
icebp
push
dec
push
add
int
cmp
out
fisubs
or
cs
lea
jle
jecxz
inc
xlat
jmp
cmp
jno
add
mov
dec
sbb
sub
pop
out
pop
and
mov
cmp
in
in
cmp
nopl
inc
inc
in
jns
gs
adc
push
fmul
jnp
lods
cmp
mov
popf
cmpsl
ljmp
push
movsb
sub
xchg
mov
cmpsl
or
or
cmc
sub
repz
aad
jae
loop
vmwrite
add
ds
jbe
lret
and
fisttpl
cmp
cmpl
aad
out
mov
push
or
cmp
fistpll
aad
in
sub
inc
push
cs
jmp
mov
lea
rcr
icebp
and
push
cli
insb
adcb
xor
sbbb
nop
inc
repz
pop
mov
std
rcl
xchg
adc
int3
cmpsb
stos
cmp
subl
sti
jmp
loopne
out
mov
insb
aam
or
push
push
add
fstp
popa
decl
outsl
push
outsl
mov
cmp
mov
insl
dec
cmp
jmp
es
rorb
xchg
decb
cld
fimull
rclb
dec
out
repz
cld
dec
es
stos
out
cld
xchg
and
loop
push
jg
xchg
aad
jb
fsub
and
stos
insb
stos
or
addr16
test
in
loop
inc
cli
sahf
jbe
add
and
jp
push
stos
cs
inc
and
outsb
dec
and
mov
and
stc
inc
insb
arpl
jp
cmp
jb
or
dec
dec
inc
inc
inc
in
fucomi
fmul
aad
cmpsl
into
sbb
add
sub
add
decb
in
or
push
dec
fsubrl
inc
or
dec
or
xchg
test
xor
mov
cwtl
add
shl
lods
out
clc
jno
xlat
jno
mov
sti
shrb
fadds
test
xchg
inc
cmp
dec
lret
in
loopne
inc
jg
daa
aad
ret
push
or
jge
push
jae
inc
pop
stos
or
cmp
jne
inc
sbb
int
cmpsb
pop
dec
and
inc
mov
mov
cwtl
test
mov
adc
sahf
jmp
xor
dec
rcrl
xor
inc
jae
int3
stos
jmp
iret
repz
ds
xchg
fstp
sub
in
sbb
scas
mov
outsl
jb
push
sbb
div
jl
pop
addr16
ror
aas
dec
fucom
cmp
and
push
cs
push
dec
or
cli
jbe
mov
scas
std
add
push
test
shll
pop
cli
outsb
inc
xor
ss
rcrb
add
cwtl
movsl
mov
clc
andl
cwtl
rcr
mov
call
dec
testb
sbb
push
xchg
mov
jae
fisubrs
add
int3
cwtl
aam
cs
pop
sbb
out
sahf
fadds
or
fadds
mov
fsubs
mov
enter
dec
fs
aad
mov
dec
rep
inc
fisubrl
test
test
mov
shlb
push
les
out
jl
mov
pop
jb
xchg
in
inc
jmp
imul
sbb
cli
jb
xchg
mul
aad
mov
xchg
adc
aad
call
in
and
in
cli
xor
add
push
jnp
idivl
in
ljmp
std
je
in
decb
and
dec
fidivs
int3
adc
or
rorb
mov
mov
mov
addr16
adc
jg
or
nop
stc
lock
adc
clc
add
jmp
out
test
cmc
jle
mov
dec
mov
imul
frstpm(287
shrl
push
cltd
push
push
inc
fldt
gs
outsl
inc
sbb
mov
xor
outsl
dec
loopew
pushf
je
inc
pop
pushf
cmpsb
push
and
jbe
pop
ret
jno
xchg
pushf
std
bound
jle
rcr
bound
fidivs
fstps
sbb
bound
imul
jg
mov
cmp
daa
adc
and
xchg
jnp
jle
push
sbb
jle
inc
mov
xchg
mov
dec
test
stos
js
jp
icebp
insb
xchg
mov
sbb
out
enter
xor
int3
mov
mov
divb
jp
push
inc
adc
xchg
sbb
mov
push
xchg
dec
push
outsl
loop
iret
pop
pop
xor
mov
subb
cld
mov
cmp
cmp
push
adc
hlt
adc
dec
negb
cmp
mov
out
out
imul
cbtw
scas
call
xchg
mov
xchg
mov
sbb
in
sti
jp
sub
pop
test
sbb
push
js
inc
lock
pop
cmp
ficompl
lock
and
arpl
cmpsl
fsubl
dec
call
stc
or
dec
repnz
lods
lret
hlt
add
pop
jmp
scas
mov
fisubrl
sub
vcvtpd2dq
out
sub
aad
loopne
jns
loope
dec
sub
pusha
push
notl
in
cs
repz
cmp
cmpsb
xchg
pop
pop
aam
aad
call
jmp
or
jmp
rol
cld
es
cmp
cmp
mov
adc
scas
pop
lretw
lcall
das
daa
xorps
pop
mov
movsl
mov
or
fildll
pop
inc
sbb
push
jp
scas
js
subb
test
cmpsl
nop
aad
sti
frstor
fistpll
mov
dec
jmp
add
cld
mov
dec
nop
lea
fimull
ljmp
outsl
push
adc
cmp
mov
fstpt
out
pop
dec
lcall
pop
mov
in
imul
addl
fs
or
pop
fdivl
inc
push
je
mov
mov
lea
jmp
cmc
frstor
mov
adc
push
in
aad
jmp
jmp
mov
and
sub
arpl
cmp
ret
into
jae
mov
lahf
sti
inc
adc
cmp
jge
std
lret
dec
int3
dec
sub
fiaddl
mov
ficompl
addr16
adc
pushl
inc
lods
dec
shlb
fwait
mov
jmp
sub
mov
or
testb
call
loope
iret
mov
bswap
inc
adc
mov
sbb
xchg
xchg
pop
movl
nop
scas
lods
aam
insb
inc
and
sub
cli
ss
xchg
cli
int
cmc
push
js
mov
add
dec
dec
loope
mov
mov
sbb
jg
sub
dec
in
sub
and
mov
and
push
pop
or
xlat
xor
or
jmp
in
das
cli
mov
lods
aad
add
xchg
dec
fisubrl
mov
mov
dec
test
scas
jg
mov
add
or
clc
dec
cmpsb
push
ds
cmpsb
sub
aam
scas
aad
test
push
mov
dec
or
in
in
aad
fmull
cld
push
sub
ljmp
adc
sub
mov
sarb
inc
insb
std
dec
popl
inc
jecxz
dec
xchg
xchg
dec
or
mov
jbe
jge
aam
pop
loop
or
addl
aam
mov
mov
cltd
inc
cli
sti
mov
cmp
mov
nop
lret
adc
xor
and
mov
xor
inc
bound
add
nop
push
fsubl
aad
or
push
mov
aad
add
dec
pusha
cli
ljmp
in
or
pop
cmp
pop
jno
pop
and
sbb
mov
stos
jnp
mov
sti
popf
pop
imul
out
or
sbb
jge
fisttpl
add
dec
sub
pop
push
sub
pushl
pop
mov
es
add
dec
push
mov
iret
lret
sahf
cld
shlb
ficompl
pusha
lret
mov
iret
cmpsl
aam
in
test
stos
fidivrl
fdivl
jg
lods
fsubs
xor
mov
mov
lcall
hlt
ljmp
cmp
add
jne
dec
fimull
stc
enter
xchg
stos
fdivr
icebp
mov
pusha
fisttpll
scas
outsl
push
xor
sub
jl
xor
jp
and
mov
jnp
nop
push
or
lahf
and
aad
mov
hlt
pop
adc
std
and
lds
or
dec
lret
ds
stc
mov
lcall
jp
push
push
into
aad
xor
out
ror
lods
clc
decb
aad
loope
push
or
pusha
popf
mov
call
pop
mov
rep
jp
add
pushf
mov
jmp
nop
arpl
fidivrl
lea
xchg
add
push
out
sahf
adc
mov
and
scas
and
stc
andl
movsb
push
or
xlat
jo
xlat
inc
scas
push
dec
aad
lods
xor
or
imul
mov
int
push
xadd
mov
stc
xchg
dec
adc
cmp
sub
jno
loope
je
and
shll
sbb
mov
push
out
loope
inc
repz
sub
jmp
xchg
xchg
and
ljmp
test
cli
divl
add
inc
fiaddl
hlt
pop
cmp
stc
bswap
unpcklps
testb
decb
scas
in
and
inc
mov
xor
lock
sub
jb
call
aad
lods
into
push
icebp
pop
inc
repz
jle
push
jmp
mov
mov
or
fiaddl
or
pop
ds
das
testb
js
repnz
sub
movsl
mov
and
jae
add
jmp
ds
inc
add
shll
add
popf
test
dec
scas
xor
pop
jp
test
scas
jl
lret
in
push
stc
pusha
subl
out
mov
aad
cmp
nop
lods
or
insb
sbb
pop
inc
out
sti
fnsave
xor
push
xor
movsb
pcmpeqb
aam
pop
xor
mov
mov
and
out
pusha
jmp
dec
push
movsb
decl
xor
mov
cmp
into
and
pop
sbb
pop
gs
mov
iret
mov
lds
or
mov
out
mov
int
out
aam
ds
mov
push
xor
ror
or
jecxz
pop
out
xchg
popa
add
dec
shlb
and
xor
dec
outsl
inc
fwait
add
psrlw
movsl
inc
dec
add
mov
lods
push
mov
mov
pop
xor
imul
cmp
or
mov
dec
dec
and
mov
or
movsl
add
xor
jns
addl
ljmp
dec
dec
push
pop
add
jecxz,pn
movsl
mov
into
int3
jns
out
pop
sbb
dec
ja
lock
aad
fdivs
les
or
or
jle
outsl
fmull
or
test
pop
enter
inc
loope
mov
imul
or
fstps
xor
adc
xchg
jb
jo
subb
int
not
popf
mov
jmp
jno
jmp
add
test
in
add
sbb
xchg
into
mov
out
inc
dec
loop
pop
scas
aam
cwtl
int3
pop
push
out
mov
mov
loope
mov
jae
pop
scas
fldenv
push
ja
cs
xor
rol
jl
cltd
iret
push
xchg
es
sysenter
subl
scas
xor
test
add
test
lcall
fmuls
xchg
test
and
inc
lods
push
aam
nop
repz
add
les
fistpll
or
push
dec
mov
sti
pushf
clc
shr
movsl
mov
inc
add
test
sub
lods
int
into
movsl
sbbb
in
lea
and
test
add
add
cmp
push
les
mov
and
dec
push
jg
in
cld
mov
fidivrl
and
dec
ret
inc
out
rcr
loop
xlat
test
mov
sbb
sbb
out
push
jo
movsl
or
inc
or
mov
call
test
iret
push
jecxz
add
mov
les
add
xor
jecxz
testl
aad
mov
add
and
stc
int
test
out
mov
call
sahf
aam
mov
sbb
push
lds
rorl
add
jmp
mov
mov
out
fidivs
out
iret
cmp
and
lea
mov
or
mov
jbe
loop
inc
cmp
aad
cmp
dec
cmp
data16
cmp
gs
mov
movsl
or
dec
dec
push
cmp
xorb
imull
sbb
adc
inc
mov
jo
gs
out
or
xor
leave
aad
pop
sar
inc
add
ror
adc
mov
arpl
dec
or
enter
push
add
fisubrs
addr16
js
and
inc
pop
in
call
cmpxchg
push
rolb
sbb
daa
loope
or
imul
xor
cmp
pop
sub
stos
xor
insl
push
jecxz
jbe
in
xor
pavgb
ljmp
out
jg
lods
mov
xlat
mov
cmp
mov
out
cmp
mov
addr16
ljmp
fsubr
jle
jne
inc
clc
mov
mov
clc
aam
lret
lock
aas
aaa
cld
pop
daa
stos
xchg
mov
mov
add
movb
sbb
lcall
push
cmp
push
orl
sub
xchg
cmp
dec
or
arpl
add
fadds
icebp
lods
and
cmpsl
ljmp
fcompl
out
pop
jge
xor
cmc
sbb
mov
jae
loope
sub
cmpsb
xor
ljmp
mov
or
xchg
int3
xor
jno
push
lret
aad
mov
inc
int3
jl
stos
push
jno
jno
xchg
fsubrl
std
dec
add
test
mov
stos
call
dec
test
jo
push
repnz
lret
push
testl
xor
mov
rcll
xchg
or
mov
popf
and
or
mov
aas
dec
pop
pop
fwait
or
mov
jp
fnsave
cmp
or
jo
lock
ss
push
or
sub
js
test
mov
inc
pop
enter
testl
xor
mov
les
sbb
dec
jmp
and
std
mov
popf
ljmp
mov
outsb
ljmp
mov
dec
outsl
xor
ja
insb
into
or
ds
xchg
mov
cmp
cmp
cmc
mov
pop
sub
test
aad
lret
pmullw
cmpsl
sbb
sbb
dec
pop
push
adc
cmp
insb
lea
incl
out
or
inc
leave
sub
fbstp
dec
add
subl
or
push
add
xchg
in
out
push
out
push
mov
mov
push
int
fsubl
rdtsc
sub
sti
aad
sub
repnz
jmp
pop
push
jb
outsl
cmp
adc
insl
aam
mov
ret
cmc
dec
mov
or
mov
faddl
adc
rorb
mov
dec
cmpsb
out
cmp
pop
sti
in
scas
stos
loope
rolb
pusha
scas
xchg
aam
cmp
addr16
push
fstps
enter
or
dec
cltd
mov
jg
iret
out
into
jecxz
inc
adc
out
dec
pop
dec
mov
cmp
sar
enter
cld
and
xor
pusha
push
cs
xchg
mov
add
cld
ret
cmpsb
adc
fildll
out
lret
arpl
xchg
dec
pop
cmp
or
mov
int
jnp
mov
fmuls
iret
arpl
adc
cmp
push
idivw
loope
fmul
or
mov
lret
cltd
xlat
rorl
ds
xor
stos
cltd
sub
loope
inc
fcoml
fadd
add
in
push
add
and
jmp
out
mov
cld
dec
mov
or
xchg
mov
mov
stos
sbb
push
mov
xor
mov
lods
mov
lea
or
xchg
repz
jbe
mov
dec
xchg
cmovnp
cmc
jl
jg
or
push
add
stos
jl
std
stc
mov
jecxz
mov
ret
iret
mov
xchg
inc
popa
add
push
mov
popf
push
mov
xchg
and
es
push
or
push
lret
add
mov
dec
pushf
mov
inc
cmpsb
xor
sub
or
flds
adc
sub
lods
or
lea
cs
xchg
aam
and
pop
dec
popf
cmp
dec
sub
mov
or
push
cmp
jl
push
sbbl
dec
ret
lods
fisttpl
fildll
stos
movsb
stc
push
pop
jno
jne
mov
mov
push
mov
cltd
cmpsb
jmp
aam
jne
cmp
mov
cmp
sbb
sub
mov
push
icebp
inc
in
daa
cmp
mov
pop
dec
jb
cli
lods
mov
adcb
push
cli
xor
pop
dec
push
cld
push
fsubrs
aad
xchg
or
nop
lret
xchg
mov
or
into
dec
aam
shl
fucomp
adc
push
mov
pop
jno
mov
imul
inc
dec
out
lret
and
push
dec
mov
dec
add
or
dec
cmpsl
pop
fldenv
cmc
jb
dec
lods
mov
fwait
iret
mov
push
or
sub
pusha
push
out
nop
lret
not
out
cmp
stos
mov
out
andb
mov
call
fucomi
jmp
mov
int
fldenv
aam
jle
loopne
push
negb
jmp
pop
mov
jbe
or
xor
xchg
fidivrs
outsl
mov
dec
lods
fidivrl
fisttpl
stos
or
xchg
mov
mov
call
int3
inc
frndint
sarl
lock
inc
or
lcall
inc
aas
push
icebp
push
add
fistpl
pop
inc
rorb
loop
xchg
mov
mov
out
pop
or
inc
scas
ja
cltd
lahf
shll
pop
aas
dec
lret
xor
fwait
xchg
in
add
jge
push
push
idivb
mov
movsb
and
dec
cmc
in
mov
aad
jne
imul
in
adc
cmovnp
mov
mov
aam
push
int
in
fldt
jmp
push
outsl
and
or
mov
mov
or
sub
and
aad
push
cmp
jecxz
or
aaa
push
xchg
push
testl
dec
mov
fnstcw
aad
loope
cld
lahf
cmp
xchg
mov
int3
lret
dec
cmc
cmpsl
adc
mov
mov
sub
inc
pushf
gs
psubq
pop
mov
aad
lea
testl
imul
int
loope
or
sbb
int3
pop
add
clc
jb
cli
xchg
sub
cmp
sub
mov
jg
loopne
sub
mov
ds
fdivl
mov
out
push
mov
leave
mov
xchg
mov
push
out
mov
mov
mov
sub
popf
aam
sub
loopne
sub
lahf
mov
mov
loop
std
outsb
xchg
or
jg
xlat
out
and
dec
jp
add
ja
push
orb
int
fcoml
cld
mov
and
popa
lods
test
imul
lods
loope
mov
jae
jp
jo
aad
dec
push
out
test
loop
adc
daa
xor
push
sub
mov
fisttps
or
loop
test
and
add
sub
test
or
in
mov
jbe
stos
sub
adc
imul
movsl
repz
mulb
movsb
popa
pop
bound
int
mov
jmp
cli
fs
mov
jle
mov
mov
xlat
ds
or
or
enter
sbb
pushl
inc
sub
leave
push
aam
cmpsb
or
or
imul
aad
aam
iret
pop
push
or
aam
jmp
cmp
arpl
rcrb
test
negl
popf
rcl
sub
jae
test
and
cmp
fnstsw
lock
icebp
scas
mov
daa
cli
inc
fnstenv
and
mov
pop
xchg
fcomps
daa
pop
dec
es
cld
jg
cs
roll
es
pusha
push
adc
fiadds
inc
jmp
adc
stc
jecxz
add
jnp
mov
lret
hlt
movq
push
xchg
insb
lea
mov
idivb
leave
aas
testb
xchg
xchg
aam
add
inc
sub
stc
inc
push
mov
aas
jmp
imul
imull
mov
das
mov
add
cmc
sub
mov
inc
xchg
lret
lods
cmpsl
or
xchg
gs
mov
mov
lea
aad
shr
cltd
sbb
in
jae
and
repnz
and
mov
xacquire
push
in
jg
movsl
or
xor
dec
sub
cmpl
cltd
fisttps
jmp
mov
repz
mov
mov
mov
sub
ficoms
movsb
push
mov
shrb
mov
add
mov
lods
jbe
mov
divb
xchg
jecxz
pop
mov
xor
jle
inc
fisttpl
jecxz
aas
push
sub
cmp
mov
out
push
fsubp
push
dec
orb
dec
loopne
in
out
jmp
fisttpll
mov
mov
das
rorl
mov
popf
bnd
sti
sub
adc
mov
fucomip
les
and
jmp
and
mul
mov
out
shrb
xchg
mov
fisubl
mov
jmp
inc
fildll
decl
cmp
push
jno
or
outsb
aas
inc
or
cmp
sub
sub
lret
aas
jge
sti
jo
inc
pop
aad
outsb
mov
mov
aad
rcl
add
dec
push
scas
and
enter
orl
aam
jl
adc
mov
cmpsl
inc
or
sbb
aam
out
sub
xor
mov
sti
xchg
mov
or
sub
dec
sbb
or
stc
xchg
ret
jg
xchg
int3
xchg
mov
fdiv
dec
scas
mov
std
stos
fisubl
sub
ret
std
shlb
pop
sbb
sbb
and
cmc
mov
lods
in
adc
xchg
push
ljmp
mov
in
lret
cmp
dec
aad
sub
pop
je
sub
fcom
loop
xchg
mov
leave
clc
cmp
lahf
or
repz
or
jb,pt
stos
mov
xor
loope
jle
push
fisubrs
scas
and
faddl
mul
mov
call
mov
sub
xor
add
jmp
pop
jecxz
push
std
xor
sar
push
push
inc
jno
dec
jg
adc
mov
stc
enter
mov
jmp
push
aad
in
dec
add
loop
and
aad
cmp
sbb
xchg
dec
push
pop
out
inc
or
sub
aad
addr16
andl
jge
mov
mov
mov
insl
movaps
cmp
aad
stc
fstps
insl
push
in
paddd
or
sub
add
lret
dec
out
jne
out
imul
xor
push
int
cmp
ljmp
fcoml
iret
cmpsb
out
repz
mov
dec
dec
fimull
mov
add
repz
add
into
aad
stos
pop
icebp
jle
out
rcrb
cld
or
push
add
out
mov
outsl
iret
dec
in
or
orl
mov
push
call
or
cmpsb
push
mov
inc
xabort
xor
loopne,pn
add
movl
dec
push
xchg
inc
movsl
cs
or
or
mov
xor
xchg
xchg
inc
xchg
mov
out
push
mov
or
cmc
js
bound
xchg
test
mov
sti
mov
test
dec
mov
cmp
outsl
mov
sbb
add
nop
les
or
mov
data16
loop
xor
sub
cmpsl
popf
sbb
inc
into
std
fbld
rcl
imul
sbb
jmp
xor
pop
int
push
mov
test
xorl
jmp
xor
push
dec
cmc
loopne
and
pop
test
mov
jmp
dec
push
xchg
fldcw
iret
int3
xor
cmc
in
mov
inc
aad
in
out
fildl
mov
cwtl
adc
out
mov
or
and
lods
fists
test
cmp
push
ljmp
pusha
in
jge
orl
mov
adc
or
loope
in
mov
std
ja
imul
jmp
out
stos
adc
dec
dec
mov
push
sarl
fdiv
mov
mov
push
dec
pop
dec
shrl
js
sbb
xchg
lret
repz
je
push
mov
pop
in
and
or
popf
mov
js
aad
cmpsl
fisttpll
js
addr16
mov
ljmp
clc
jmp
mov
push
cwtl
test
cltd
mov
aam
mov
mov
adc
iret
jl
sar
sub
xchg
xor
daa
and
xchg
push
fidivl
pushl
mov
rcrb
aad
xchg
iret
and
je
fists
or
cmp
arpl
addb
push
outsl
sti
loop
mov
imul
inc
popf
loopne
cmp
mov
jo
test
xor
adc
mov
mov
movsb
stc
sub
fmuls
cmp
sbb
dec
add
out
fisubs
aad
dec
xor
hlt
and
cwtl
lret
fisttps
loope
mov
push
cwtl
test
or
or
insl
cld
push
push
cmpps
xchg
fadds
out
jmp
scas
rolb
in
cs
jbe
lock
out
fisttpl
rcr
mov
mov
mov
mov
push
out
xchg
in
jo
fmull
loopne
fstps
rolb
add
imul
data16
dec
push
lea
mov
dec
mov
push
out
jnp
mov
and
push
mov
aad
xchg
or
jnp
js
incl
or
hlt
aad
mov
cld
xor
push
sub
cmp
xlat
or
aaa
lock
gs
push
push
or
into
push
mov
mov
rcll
jmp
mov
nop
out
sub
mov
imul
mov
nop
mov
fstp
test
aad
xlat
pushf
jnp
mov
decb
adc
fidivs
out
enter
jg
in
mov
push
mov
inc
ffree
out
add
mov
daa
xchg
ss
inc
cli
or
arpl
inc
loopne
fnsave
fisttpll
mov
cmc
sub
jg
cmp
hlt
push
cmovae
arpl
gs
stc
fcmovbe
or
or
or
inc
dec
and
loopne
scas
add
inc
mov
stos
cli
in
fidivrl
xchg
cmpb
xchg
mov
fisubs
incb
jp
aad
mov
popf
popa
sbb
lahf
cltd
enter
sbb
clc
xor
jmp
mov
adc
mov
mov
mov
pop
jnp
cmc
mov
cwtl
jl
pop
shll
sub
push
lds
inc
jno
mov
cwtl
aaa
mov
clc
xchg
mov
jge
pusha
mov
into
cld
test
bound
out
fucomi
aaa
mov
sub
in
cs
or
sbb
mov
xor
jmp
add
mov
cmc
pop
jae
in
out
adc
movb
pusha
xor
enter
pop
cld
xor
out
jge
push
push
dec
aad
dec
and
mov
fbstp
test
mov
imul
jno
push
loop
sbbl
xor
pmullw
jl
int
xchg
nop
pop
pop
xor
mov
lea
sbb
sbb
out
sbbl
pop
mov
fmull
neg
ss
cmp
push
loopne
repz
or
loopne
scas
lock
lcall
cmp
pop
inc
loopne
pop
hlt
scas
or
mov
pop
xor
mov
ds
push
push
pop
int3
xchg
jg
leave
cmpsb
popw
adc
int3
fucom
imul
popa
jne
sub
mov
sbb
inc
cmp
sahf
cltd
int3
xchg
xchg
push
inc
xchg
outsl
imul
xor
les
fiadds
out
xchg
jle
loop
lods
adc
jle
push
xrelease
add
cmp
inc
push
icebp
cmp
xchg
test
int
sti
shrb
hlt
inc
fidivs
aad
adc
xor
push
jno
addr16
mov
sub
dec
jno
into
fcmovnu
insl
scas
pop
call
into
stos
loope
xorb
in
push
cld
push
jmp
or
cmp
dec
mov
mov
sbb
inc
mov
iret
ret
fiadds
in
sarl
or
mov
mov
test
pushl
inc
pop
mov
mov
fcmovnbe
push
arpl
cmp
cmp
pop
adc
aad
fwait
sbb
xchg
pop
xlat
aad
inc
out
stc
jbe
adc
lahf
lret
test
arpl
pop
sti
xor
or
xlat
lret
js
push
cmp
aad
cli
fwait
inc
adc
adc
xor
ss
and
or
pop
push
xor
fsts
cmp
push
call
jmp
mov
inc
adc
cmc
mov
cmpsb
xlat
pop
cmpsl
jle
dec
mov
or
arpl
cmc
jno
jmp
jmp
popf
inc
lahf
or
add
leave
pop
sub
jno
ja,pn
mov
push
and
les
add
jg
inc
ds
jnp
loope
sub
or
imul
out
mov
ret
out
loope
lret
push
adc
mov
push
cmc
scas
sar
lds
out
in
push
popl
sbb
cs
sbb
xchg
dec
cmp
out
and
inc
and
cltd
mov
dec
dec
addr16
les
push
iret
test
out
xchg
sub
rcrl
das
sub
mov
mov
int3
sub
jge
frstor
inc
dec
mov
fldenv
pop
pop
idivb
js
dec
xchg
push
jle
imul
push
adc
inc
loopne
imul
cmpsl
pop
inc
out
inc
sbb
lret
testl
dec
add
pop
xchg
mov
mov
xchg
pop
fisubrs
outsl
ss
iret
lods
jnp
or
ljmp
add
aad
add
aas
xchg
les
add
inc
or
fidivs
cs
push
dec
movsb
cltd
jnp
shrb
je
test
mov
jne
cmp
clc
daa
test
in
sbb
pop
fisttpll
lret
or
push
jge
into
mov
push
push
cmp
and
repz
mov
dec
loope
imul
nop
xchg
and
cs
js
jb
jns
xchg
xchg
jae
xor
jno
in
pop
xor
inc
or
lods
cld
sub
mov
jae
aad
out
jmp
or
adc
aad
mov
rcrb
inc
scas
orl
cwtl
cltd
push
sub
dec
ficoms
fmuls
xchg
mov
sti
ja
jnp
mov
sahf
test
aad
dec
fst
jns
mov
js
jp
mov
xchg
mov
clc
xchg
xchg
enter
clc
and
outsb
xchg
xor
inc
stc
cmp
inc
orl
idiv
pop
aam
repnz
mov
sub
arpl
add
sub
sbbl
les
pop
xchg
inc
pusha
test
or
dec
xchg
shrb
aad
rorl
xchg
push
loope
es
iret
popa
jb
iret
sub
sbb
inc
loopew
sub
cmpb
imul
stos
outsb
sub
jg
push
lods
shr
jmp
add
stos
outsl
cli
test
adcb
mov
aas
dec
jl
cmp
and
out
adc
test
mov
jne
sti
mov
mov
das
call
inc
into
or
in
ficoms
rcr
jmp
dec
addl
mov
sub
cmp
mov
xchg
sub
int
xor
push
push
aam
stos
fisubl
fadd
dec
scas
aas
std
or
inc
sub
push
decb
hlt
iret
outsb
insl
data16
push
xor
stos
lcall
fldl
fdivp
enter
scas
lahf
decb
dec
decl
fstpl
jae
stos
repnz
loope
cmp
sti
push
fucomp
pop
mov
mov
stc
cmp
in
jnp
jmp
jo
imul
or
jecxz
or
fmul
dec
mull
add
repnz
aas
iret
cmpsl
aam
mov
push
push
push
cmpsb
add
mov
xchg
ret
cmp
dec
cmpsl
push
xchg
xor
dec
ret
jb
inc
mov
xchg
jnp
cltd
inc
jo
ljmp
fsubp
inc
stc
push
sbb
mul
lods
adc
imul
adc
cmc
pop
pop
cmp
jne
inc
xchg
pop
pop
cmpsl
cmpsb
test
mov
dec
fadds
test
popa
push
pop
nop
cmp
nop
inc
and
push
mov
dec
cmp
enter
sbb
sbb
std
dec
xlat
sti
aad
add
jae
out
gs
inc
mov
dec
dec
aad
sti
fs
mov
loopne
in
rcr
jmp
and
loopne
sub
lret
fimull
xchg
push
loop
push
cmp
cmp
aad
es
sub
jg
mov
lcall
sbb
push
dec
outsl
inc
sub
mov
push
pushf
sbb
mov
out
jg
jle
cmp
negl
inc
jo
dec
cmc
or
es
push
push
sbb
or
ret
out
jne
jmp
push
sahf
inc
call
stc
cmp
mov
orb
faddp
push
fsubs
or
sub
mov
aad
fmulp
ds
lds
mov
les
push
test
inc
jnp
addr16
enter
jnp
addr16
pop
and
loopne
call
fcomip
inc
dec
cli
mov
addr16
aad
out
mov
mov
sub
mov
xor
lods
int3
cmp
rorl
xor
xor
lret
mov
adc
mov
inc
fcmove
loop
out
lret
pop
test
inc
cwtl
cmp
xor
xor
jo
aad
int
mov
jns
jns
fisttpl
mov
adc
int
testl
jo
jno
pop
out
cli
jg
jl
mul
push
jo
jnp
addr16
test
inc
sbb
mov
mov
cmp
adc
lds
push
clc
ret
ljmp
lcall
lds
aad
int3
sub
loopnew
or
sahf
rcl
add
pop
sbb
rclb
jnp
addr16
pop
and
add
xchg
aad
jb
gs
addr16
inc
xchg
sbb
push
iret
and
imul
or
popf
cmpsb
lret
mov
mov
adc
sub
loop
nop
xor
sub
sub
aad
inc
ror
imul
adc
movsb
int
out
mov
inc
lcall
mov
pop
xor
inc
loopne
fs
pop
or
pop
dec
mov
mov
dec
lock
jno
push
sbb
popa
dec
cmp
jo
outsb
icebp
or
add
adc
add
inc
leave
adc
ficoms
push
mov
in
hlt
adc
fs
pusha
jg
daa
loopne
adc
shll
ror
aas
int3
shrl
nop
aad
scas
je
mov
es
in
pop
or
iret
jecxz
dec
jns
push
movsb
in
stos
add
imull
pusha
jg
daa
loopne
popf
and
clc
adc
insb
pop
jp
sub
stc
xcrypt-ofb
cmpsl
imul
rclb
mov
lock
and
jo
pop
dec
out
stos
cmp
mov
stos
jl
movsb
dec
stc
rclb
or
inc
lods
xor
mov
cli
pop
sti
mov
push
loopne
dec
aad
or
mov
dec
or
call
inc
or
adc
cmp
xor
cwtl
cld
xor
cmp
xor
cwtl
idiv
xor
sbb
es
cmc
add
inc
jecxz
dec
dec
cmpsb
movsl
mov
inc
xchg
out
push
or
sub
cmp
insb
xchg
lea
mov
dec
loopne
insb
xchg
dec
dec
aad
push
mov
push
push
add
dec
or
jecxz
xchg
push
repz
aas
mov
inc
sarb
push
sbb
xor
pop
inc
mov
pop
pop
sti
aad
std
loop
test
fmuls
aad
repz
mov
mov
inc
and
jmp
push
xor
les
xor
add
mov
mov
lret
jnp
mov
mov
mov
mov
mov
rcrl
push
cs
jg
daa
cmpsb
pushf
pop
jb
or
dec
lock
mov
test
add
or
loopne
repz
mov
je
cmpsl
mov
dec
out
ret
mov
xor
lret
pop
js
mov
dec
out
rcll
adc
popa
out
rclb
out
popa
imulb
mov
xor
add
xchg
dec
jno
xchg
mov
jne
out
movsb
xor
push
in
and
jl
push
xchg
imul
sub
clc
pop
pop
insb
shlb
mov
pop
jg
movsb
or
test
push
in
and
gs
test
pop
add
adc
pop
dec
jp
ljmp
inc
dec
sub
xor
mov
mov
jl
xor
push
movsl
inc
push
in
push
stos
and
jae
push
xor
cmp
inc
xor
push
xor
idivb
lret
out
icebp
addl
dec
inc
aaa
lret
add
pop
loopne
arpl
ds
and
arpl
stos
outsb
and
mov
test
lret
jb
xlat
cmp
or
xchg
dec
xor
mov
stc
lahf
sbb
xchg
sub
pop
repz
or
or
dec
arpl
push
cmpl
jmp
aaa
rcll
lods
out
into
das
xchg
adc
insb
and
jne
jecxz
xchg
xor
adc
out
add
loope
dec
sarb
fimuls
in
orb
sbb
ss
lods
adc
lret
loopne
mov
adc
jle
xor
out
cwtl
into
nop
xor
sub
inc
adc
scas
test
out
xchg
mov
jno
sub
sbb
mov
inc
xor
aam
jo
cmpsb
int
out
push
pop
mov
out
enter
mov
out
or
enter
mov
dec
mov
mov
pop
out
or
inc
mov
das
cmp
xchg
pushf
inc
out
inc
mov
pop
and
rol
mov
lret
int3
lcall
mov
outsl
jae
int3
add
iret
xor
pop
and
cmp
inc
fmul
rolb
push
pushf
dec
loopne
push
push
mov
lea
enter
pop
adc
loop
mov
dec
lahf
mov
lods
sbb
fadd
aad
push
push
jl
or
adc
push
pop
mov
pusha
or
nop
sub
stos
inc
icebp
in
and
cmp
push
jp
xor
aas
cltd
sbb
or
xlat
aaa
sub
arpl
push
stc
aad
mov
dec
in
and
adc
mov
dec
movsl
add
movsl
inc
repz
mov
mov
aad
cld
and
std
cmp
loopne
xor
inc
xor
push
stos
nop
sub
inc
push
push
shrb
push
push
inc
imul
push
scas
test
push
push
jbe
inc
add
jl
scas
pop
xor
loop
and
adc
pop
inc
sbb
int3
push
add
out
shll
repz
test
add
or
fwait
push
icebp
ljmp
sarb
stos
mov
cwtl
mov
sub
mov
push
out
into
out
push
add
cs
adc
insl
out
xchg
cmp
sahf
lret
sbb
mov
pusha
sti
fistpll
pushf
pop
test
pop
fucom
aad
scas
aad
pop
mov
inc
rorl
fnclex
test
dec
mov
jns
push
out
test
cmp
dec
pop
call
es
mov
outsl
mov
fsubs
mov
out
insb
int3
ffree
daa
aas
xchg
dec
cmp
sbbb
jo
pop
sbb
adc
out
mov
mov
dec
insb
arpl
stos
mov
push
push
xor
dec
loopne
scas
and
xchg
push
rclb
inc
neg
stos
mov
mov
adc
lret
int
xlat
repnz
sub
xchg
dec
and
stos
lds
movb
xchg
test
gs
xchg
mov
popa
sub
out
add
and
js
push
outsb
int
or
jg
rorl
inc
test
mov
jne
out
mov
sbbb
mov
mov
push
mov
std
lcall
sbb
aad
jns
dec
sbb
testb
jl
cld
inc
push
xchg
fsubr
nop
in
pop
jl
sbb
push
mov
repnz
cmp
or
jecxz
scas
cmpsl
lahf
roll
jle
roll
xchg
mov
or
lcall
dec
pusha
cmp
jo
fmull
ror
icebp
cmp
lret
es
dec
cmpsb
xchg
xchg
or
xchg
pop
adc
xchg
pop
shlb
movl
test
addr16
stos
pop
cmpsb
enter
icebp
mov
dec
add
inc
int
out
xchg
ret
inc
or
inc
cmp
mov
xchg
pop
gs
pop
aad
fldenv
int
hlt
jle
add
pusha
jns
push
out
inc
dec
cmp
jns
ret
test
xchg
in
mov
xor
es
cmp
pushl
adc
add
mov
fldcw
push
lret
mov
imul
ljmp
or
dec
sbb
mov
iret
sbb
repz
in
movsb
add
in
add
mov
or
pop
adc
and
adc
in
scas
jmp
sbb
cmp
cmp
je
loope
in
jle
in
or
push
hlt
mov
incb
std
in
cld
cltd
loop
rcrb
cld
or
fisubrs
xor
les
fiadds
loop
divl
js
aad
inc
sbb
mov
in
xchg
push
lret
shl
or
cltd
jmp
jecxz
stc
xor
pop
inc
fdivrp
inc
cmc
clc
jle
inc
cli
jl
sbb
push
aad
mov
pop
or
lahf
aad
outsl
mov
loop
or
cmp
jmp
push
or
push
popa
jl
sub
cwtl
loopne
push
mov
loop
and
arpl
add
sbb
jne
xchg
iret
lea
jge
out
push
movsl
jns
mov
xchg
pop
mov
mov
scas
and
test
test
lea
jmp
in
adc
out
repnz
push
mov
pusha
push
inc
jmp
push
jns
xor
jnp
jmp
mov
xor
in
add
mov
mov
xor
bnd
decb
push
xor
sbb
mov
stos
mov
loopne
cmp
fwait
in
out
or
or
mov
sbb
in
out
out
sub
in
dec
add
xchg
repz
xor
sarb
iret
enter
push
test
andb
sbb
mov
scas
push
mov
mov
fiaddl
pop
out
or
mov
div
in
out
push
out
push
mov
cmp
sub
cs
inc
test
pop
cmpsl
adc
push
mov
and
sbb
push
nop
popf
shlb
sub
cs
stc
icebp
loop
mov
xchg
ret
into
xor
mov
dec
icebp
sub
loope
dec
jae
add
push
jb
mov
fadd
push
or
loopne
sbb
push
loope
jecxz
jg
pop
daa
loopne
imul
cli
and
pop
fldenv
adc
push
loope
testb
pop
lret
jmp
jg
xor
xchg
int
sub
dec
dec
out
in
and
xor
xorb
es
aad
cmp
sub
cmp
je
int
and
iret
cmp
xchg
outsb
mov
sub
add
xor
pop
jns
dec
pop
aad
lret
aad
es
neg
xor
rclb
stos
call
mov
stc
pop
daa
loopne
imul
lods
add
fs
fnstsw
cmp
cmc
or
jecxz
jmp
dec
fdivrl
aad
mul
pop
cmp
push
and
shll
loopne
jmp
in
or
add
movsb
add
movsl
add
xchg
test
sub
aad
jbe
mov
sbb
enter
rclb
enter
push
repnz
adc
jecxz
icebp
test
sbb
mov
inc
mov
cmp
in
icebp
test
lods
lret
notb
leave
test
dec
push
loop
push
mov
pop
stos
jecxz
loop
push
inc
lahf
mov
push
cmc
mov
sarl
out
pusha
jg
daa
loopne
and
dec
cmp
out
cltd
sub
gs
fcmovnbe
popa
jge
rcr
sub
xchg
dec
jno
xchg
lds
or
ljmp
popa
fucomp
adc
pusha
lret
adc
es
les
mov
sbb
int3
test
lret
popf
insl
or
mov
in
adc
cmp
xor
inc
push
in
inc
fisubs
and
or
loop
lret
loopne
pop
mov
or
hlt
xchg
lods
pop
js
mov
sub
movsb
test
scas
es
popa
jle
movd
inc
mov
mov
cwtl
fsubrp
xor
cmc
push
pop
ffree
mov
mov
fs
psadbw
jo
lock
or
dec
addr16
lret
enter
cmc
pop
xor
and
push
push
mov
mov
xchg
fimuls
push
or
adc
cmp
xor
xchg
cmp
repz
xchg
clc
ss
xchg
lret
enter
mov
gs
mov
inc
dec
fucom
xchg
js
lods
ja
sbb
jge
mov
xchg
mov
push
xchg
mov
inc
xor
dec
ficoms
push
pushf
das
cmp
push
stos
xchg
xor
loop
cwtl
fdivp
xor
cmp
adc
cmp
xor
cwtl
div
xor
sbb
jmp
fnstcw
mov
xor
push
mov
js
popl
jl
jo
mov
add
xor
xbegin
adc
push
push
inc
stc
loopne
push
jo
aad
lret
inc
sbb
out
jp
mov
sub
or
jecxz
adc
cli
cs
jg
daa
loopne
adc
sti
loopne
mov
jno
xchg
dec
in
insb
xchg
dec
push
sub
jg
lahf
jmp
mov
shlb
dec
xlat
add
jg
dec
mov
add
ds
movsl
inc
pop
fisubs
pusha
jl
jo
jnp
repnz
push
fmuls
out
or
xchg
aad
inc
shrl
stos
test
add
pusha
jg
stos
jnp
dec
lods
mov
icebp
scas
mov
dec
lock
mov
ds
lods
shll
out
add
into
int
xchg
ret
jle
cmp
xchg
jl
sbb
add
or
pop
sub
push
pop
inc
mov
sti
cmpsb
sti
repz
adc
int
shrl
cmp
pop
adc
cmp
or
icebp
loopne
cwtl
fimuls
xor
rclb
lods
push
sbb
push
pop
push
inc
or
jle
push
jle
jmp
or
add
stc
dec
xchg
lret
adcl
aaa
sbb
or
mov
push
adcl
dec
aad
push
ljmp
in
cltd
sahf
add
or
adc
sub
lea
mov
dec
movsb
pop
inc
out
xor
push
push
mov
mov
mov
data16
or
icebp
test
int3
adcb
enter
pop
or
and
stc
rcll
test
int3
incl
cmpsl
push
pop
lds
loopne
inc
loopne
hlt
adc
stc
aad
insb
jl
push
sub
xor
jle
dec
subl
repnz
xlat
xor
or
rcll
lea
leave
movsb
or
fdivr
rcll
mul
cmc
rcrb
bnd
push
mov
jb
add
aam
or
loopne
aad
scas
lock
cs
aam
lret
dec
mov
push
ja
or
xchg
pop
mov
add
push
in
xor
les
fiadds
fisubrl
mov
int3
xor
int3
pop
icebp
das
dec
jl
sbb
sbb
pmullw
imul
loopne
mov
in
dec
repnz
push
lret
jl
int3
and
cld
cli
std
fadds
or
bnd
pusha
inc
fchs
jl
dec
and
daa
lods
fisubrl
test
xchg
fstpt
cmp
das
jmp
cli
or
idivl
aad
mov
push
mov
ljmp
adc
or
push
aas
or
lcall
icebp
inc
cmpsb
cld
pop
mov
and
sbb
fsubrl
jmp
out
aad
imul
cmp
adc
nop
dec
jge
test
faddp
or
idivl
movsl
or
sbb
shlb
cmpsb
push
out
adc
mov
mov
dec
mov
xchg
adc
push
xor
mov
shll
xchg
aaa
fdivr
jnp
imul
daa
aaa
in
cmpb
sub
repnz
jmp
jl
fdivrs
cmp
jnp
mov
cmpl
hlt
enter
jmp
int
sub
iret
push
scas
cli
sub
dec
xor
fsubrs
iret
fnstcw
aaa
sti
in
test
xchg
aad
add
mov
sbb
sub
pop
push
add
fs
inc
in
cmpsl
sbb
and
and
add
popf
mov
xor
stc
lock
fwait
push
sub
mov
mov
or
sti
in
lock
sub
xchg
jge
add
cmpl
lods
bnd
fisttpl
adc
dec
cmpsl
pop
pop
push
push
jmp
int3
adc
in
or
aad
sahf
or
cs
adc
and
adc
xchg
push
test
rep
repnz
fsubr
mov
and
scas
mov
xor
data16
xchg
leave
xor
dec
and
clc
test
cmp
or
icebp
cs
test
mov
fidivrs
push
and
stos
cmp
popa
dec
sbb
les
push
sbb
cmpsb
and
lcall
mov
adc
cmp
sub
arpl
mov
fwait
shll
and
fsubrl
pusha
inc
jno
stos
mov
dec
sahf
and
paddusw
fisubrl
and
dec
inc
std
int3
mov
out
popf
jns
mov
imul
ret
lret
or
mov
cmc
inc
jno
push
mov
out
mulb
ds
out
ret
inc
divb
pop
sub
das
movsb
sbb
loopne
scas
lcall
ja
ret
and
push
cmp
fldenv
sbb
add
aas
cmpsb
in
pop
daa
sub
stos
add
flds
xor
add
mov
pop
jno
pop
pop
push
pop
dec
out
xchg
outsl
dec
xchg
mov
jl
ficomps
outsl
xlat
adc
mov
mov
rol
cmp
jmp
or
neg
aam
cmp
mov
dec
xor
mov
shll
cmp
push
mov
dec
dec
fisubrs
leave
push
xchg
stos
or
std
scas
mov
movl
gs
inc
mov
mov
add
aad
push
repz
jns
push
out
mov
pop
mov
cwtl
insl
pop
iret
or
adc
lcall
loop
cltd
dec
fwait
cmc
lcall
popf
dec
daa
mov
ret
out
test
cmp
xchg
jle
sbb
and
cli
push
xor
add
xchg
aas
into
mov
sub
scas
mov
inc
sbbl
scas
push
mov
mov
insb
jl
pop
mov
mov
xor
shrl
mov
ds
icebp
insb
fbstp
jnp
aad
inc
xchg
lret
push
inc
xor
cmp
xor
adc
mov
outsb
in
divb
lds
pop
aas
sbb
test
xor
les
jmp
sbb
pop
and
cltd
push
ficoml
adc
inc
popf
sub
popf
jns
scas
pop
dec
lods
adc
rcrb
jns
push
stos
rcrb
mov
ss
mov
mov
jge
std
gs
mov
insb
xchg
dec
fsub
sub
jmp
addr16
js
lret
cld
dec
cmc
cltd
cmp
call
jg
ljmp
dec
addb
xor
arpl
sbb
icebp
and
stos
sbb
in
fnstsw
jl
das
stos
lahf
mov
push
loop
lds
xchg
mov
mov
cmpsb
xor
cltd
adc
jno
pop
test
fldln2
aad
xor
je
fucomp
jecxz
cmp
test
bound
fnstsw
mov
inc
cs
iret
sub
push
jns
loop
lcall
enter
call
inc
pop
push
gs
mov
outsb
idivb
sbb
imul
ficomps
test
in
imul
mov
test
mov
icebp
dec
push
in
sbb
in
dec
cwtl
sbb
push
stos
or
cmc
cmp
xchg
fildl
arpl
popf
loope
lds
or
insl
mov
stos
lcall
xchg
mov
mov
ljmp
sub
cmp
push
mov
repnz
xchg
jns
out
adc
xchg
mov
outsb
cmp
loop
push
out
adc
jmp
fst
scas
aad
aam
bound
fiaddl
fwait
jp
or
dec
push
cmpb
or
xchg
movsl
push
sbb
push
or
lock
mov
loopne
jne
dec
jnp
or
pop
aas
push
fimuls
std
dec
xor
jle
adc
xor
les
fiadds
testb
repnz
or
or
rcl
pop
mov
fmuls
adc
fmulp
sub
int
mov
push
lock
movsb
push
lret
cmpsl
push
sbb
out
test
jg
jae
push
dec
cmpl
push
hlt
shrb
push
jmp
adc
jns
or
push
mov
enter
lock
pushw
scas
xchg
mov
xchg
insl
mov
mov
jo
stos
or
sti
cs
jg
daa
loopne
pusha
inc
cld
loopne
in
ljmp
jbe
xlat
pop
cmp
in
push
jg
dec
xchg
lret
std
rclb
enter
dec
push
add
push
pop
jp
jp
push
jecxz
mov
lea
jo
cmp
push
rclb
push
pop
lock
push
dec
push
call
testl
loopne
push
dec
push
loop
mov
in
and
push
pusha
sub
out
push
flds
into
xor
lea
or
repz
outsb
jns
insl
lds
popa
test
fcompl
out
lods
xchg
dec
jp
std
repnz
and
movsb
inc
addl
cmp
aam
mov
sbb
scas
popa
cwtl
test
jle
daa
out
loope
dec
repz
jmp
or
stos
mov
rolb
sbb
out
out
lret
push
push
sub
rorl
aas
add
mov
pushf
outsb
aad
jne
add
xchg
flds
fnstsw
imul
popa
inc
lcall
out
les
push
arpl
pop
jecxz
sbb
stc
int3
mov
xor
xchg
leave
aad
mov
ret
or
lods
stos
mov
mov
adc
jg
mov
addb
push
lahf
ficompl
sti
jns
cltd
xchg
andb
jecxz
fcmovnb
xchg
das
inc
cmp
pop
push
ficoml
push
fwait
jecxz
inc
inc
push
ljmp
arpl
cltd
push
dec
push
in
jecxz
lds
loopne
cmc
lds
fisubl
gs
or
lods
mov
adc
sub
jns
push
pop
xor
jne
aas
mov
rclb
xlat
mov
push
xchg
rcrb
xchg
mov
dec
daa
out
push
insl
aas
mov
fcmovnb
outsb
jo
mov
cmp
mov
dec
aad
cmpl
sbbb
mov
cmp
mov
adc
or
pop
cmp
mov
mov
aad
sahf
xchg
lcall
mov
sbb
outsb
mov
outsl
pop
xchg
mov
push
adc
stos
inc
sbb
fsqrt
iret
in
mov
add
test
mov
decl
dec
xchg
out
and
adc
stos
xor
in
imul
pop
cmpsb
mov
xor
scas
fdivrp
fstps
cmp
jmp
cmp
jg
xchg
fisttpll
pop
out
lock
in
dec
ljmp
arpl
jae
in
js
aam
add
or
adc
lods
pop
mov
out
jmp
mov
jl
enter
dec
gs
aaa
cmp
mov
push
aas
stos
mov
pop
jle
in
add
jno
fs
xchg
jno
adc
outsb
xchg
dec
in
add
add
loop
xchg
leave
imul
lods
mov
push
push
les
mov
scas
push
mov
mov
jno
in
test
sub
outsb
jnp
jmp
push
sub
push
les
divb
mov
test
adc
das
pusha
mov
ficomps
adcl
hlt
mov
sub
mov
mov
dec
lahf
fildl
idivb
out
adc
jno
xlat
les
jle
in
ffree
jmp
insb
orb
sahf
push
push
xor
js
jns
lods
popf
in
inc
push
cwtl
adc
ljmp
xor
push
or
das
add
test
or
mov
jecxz
sbb
inc
xchg
icebp
aad
add
mov
insb
adc
sub
push
int
push
popa
inc
jns
mov
lds
popf
icebp
test
stos
nop
push
mov
sahf
scas
sub
rol
aas
insb
insl
xor
imul
jne
or
cmpb
repz
fs
adc
outsl
shll
jne
loopne
jp
out
out
ficompl
push
bound
xchg
jbe
dec
mov
aaa
mov
jmp
call
jae
stos
xchg
stos
sbb
pop
call
repnz
mov
mov
jae
lods
mov
cmpsl
pop
push
inc
mov
xchg
inc
pop
push
mov
loop
dec
xor
mov
les
imul
sub
aas
push
sub
or
mov
scas
and
scas
aas
or
mov
mov
pop
in
testl
xchg
jl
adc
sub
movsl
rcr
inc
xor
lea
xorb
jg
mov
out
in
subb
jp
pop
xchg
lret
lods
dec
xor
or
cmp
mov
push
jp
or
stc
mov
mov
or
mov
and
stos
inc
add
pop
or
adc
out
fwait
dec
jo
in
and
stos
loop
dec
xchg
popa
sbb
in
and
in
mov
xchg
lret
jecxz
test
inc
cmp
and
pop
add
push
loop
fwait
lods
iret
sti
aad
stos
lret
jecxz
cmc
add
enter
sbb
mov
or
lret
push
mov
push
jbe
cmc
mov
or
sub
daa
mov
loop
mov
in
mov
mov
sub
nop
cmpl
dec
jp
jecxz
inc
mov
lret
mov
adc
stos
lcall
out
call
insl
or
pop
lcall
xor
push
mov
stc
cmp
or
xchg
cli
bound
addb
dec
inc
lret
rorb
imul
aad
daa
dec
je
imul
mov
cld
imul
jmp
lret
repnz
je
fs
and
rolb
cmp
clc
mov
add
jle
les
lds
jle
sbb
or
out
xor
fldcw
xchg
mov
cmp
out
lret
out
fiadds
ja
loop
ficoml
mov
rcr
and
jle
jp
or
orb
cmc
lock
cmp
sbb
icebp
push
stos
mov
adc
or
stc
pop
pushf
stos
jp
into
lcall
and
sbb
jo
mov
mov
repz
cwtl
aas
xchg
fucom
mov
pop
cmp
inc
push
hlt
xchg
cmpb
add
mov
or
add
out
mov
mov
lods
fistps
pushf
fcoml
jecxz
adc
add
cwtl
mov
mov
mov
inc
mov
dec
inc
mov
fsubr
aad
out
add
aas
insl
xor
in
fldl
subl
rorl
dec
fstpl
lret
iret
mov
cmp
loopne
fwait
dec
inc
and
jg
jl
pop
xor
loope
sub
lock
jns
adc
fdivs
push
scas
js
dec
and
xchg
mov
into
mov
mov
cltd
sub
push
in
fistl
inc
hlt
jle
outsb
mov
fisttpll
incl
inc
jle
inc
lret
cwtl
xchg
pop
inc
push
mov
dec
pusha
idivb
out
adc
scas
ret
ljmp
mov
inc
adc
mov
js
mov
mov
push
sbb
fdivrl
fstp
xor
bound
mov
jmp
cmp
pop
jb
xchg
mov
int
test
fstps
seta
stos
cld
movsl
or
aad
aam
push
popf
push
fistl
repnz
dec
fisttpl
aad
adc
adc
adc
lock
cmp
testl
fidivrs
lods
jge
repz
sbb
cmp
ja
out
jg
test
ja
lret
mov
push
inc
add
hlt
dec
cmp
add
movsb
cwtl
mov
sub
cltd
push
dec
roll
mov
add
mov
stos
dec
aad
jle
jmp
push
push
adc
push
xchg
add
orl
aas
sbb
add
pop
push
push
repz
cmpsb
fldcw
add
popa
je
loop
push
and
mov
int3
stos
jmp
mov
int
mov
js
push
into
pop
or
call
addl
hlt
mov
pop
fcmove
xchg
jp
cmpsl
cmpsl
xchg
and
fs
dec
ret
repz
cs
adc
sub
in
aad
cld
cmpsb
iret
push
pop
gs
jl
stos
ds
cmpb
call
mov
into
or
xchg
xchg
out
in
sbb
mov
gs
stos
or
cmc
jmp
stos
filds
mov
mov
sbb
dec
lcall
loop
xor
sarl
inc
fsubrp
movsl
sbb
add
inc
fmuls
out
pop
scas
psrlq
push
or
sbb
popf
repnz
xchg
mov
repz
bnd
xrelease
stc
sbb
ljmp
sahf
jl
cwtl
aaa
inc
or
xchg
xchg
inc
pop
icebp
outsb
imul
or
mov
out
cmpsl
sub
or
xchg
add
mov
xchg
pop
mov
xchg
cmc
loope
mov
repz
push
lock
int3
out
in
jecxz
sub
xchg
xchg
mov
sub
adc
or
scas
add
cmp
or
js
data16
sub
shl
int3
mov
repz
outsb
test
inc
into
mov
std
dec
cmp
andb
pushl
lods
lret
dec
addr16
dec
jmp
decb
shl
aas
cmpsb
fisttpll
jo
aad
stos
rolb
out
mov
push
shl
and
jmp
cmpsl
call
mov
dec
jmp
loopew
outsl
rorl
dec
jmp
fldenv
roll
leave
jo
ljmp
lods
or
rolb
ds
shrl
mov
in
aas
fmull
xchg
or
mov
mov
add
mov
dec
jl
and
or
or
pop
dec
dec
out
xchg
mov
xor
mov
xor
or
out
pop
jle
in
loopne
test
mov
jl
mov
test
lods
cmpsl
sub
add
outsb
ja
inc
xor
dec
dec
fisttpl
lds
mov
test
dec
xchg
add
xchg
push
shrl
arpl
fdivp
into
sub
data16
fucomip
cmc
out
lds
mov
gs
iret
xchg
or
xor
pop
xchg
sub
xor
sahf
imul
mov
stos
repz
add
leave
push
xchg
push
les
test
adc
cmp
or
icebp
call
scas
xchg
cwtl
into
out
pusha
xchg
or
fs
jecxz
lret
cli
mov
or
dec
jle
cs
shll
lret
xchg
mov
mov
xchg
adc
int3
aad
inc
stc
sub
or
dec
cmp
xchg
adc
and
push
cwtl
rorb
insb
inc
insb
int
incb
jp
cmc
shlb
mov
jnp
cli
jne
inc
pcmpeqw
cmc
add
push
adc
out
sbb
mov
push
ljmp
inc
push
sub
adc
scas
out
cmp
sub
or
in
stos
mov
aaa
or
loop
sub
mov
adc
jne
loopne
out
test
shlb
stos
out
inc
push
mov
and
mov
fdivrp
in
das
cmc
outsb
xchg
mov
cli
jae
xor
out
mov
jo
mov
add
mov
adc
cmpsb
pusha
sbb
add
lock
push
mov
in
sbb
cltd
dec
mov
sti
inc
enter
loopne
stos
push
jne
fsubp
pop
lods
sub
into
mov
mov
test
movsb
js
sub
in
pop
mov
test
xchg
ljmp
std
mov
in
jo
mov
cmp
push
imul
jo
add
mov
in
push
dec
btr
mov
ficomps
jle
and
mov
in
lahf
mov
lcall
and
nop
test
dec
mov
or
pop
ret
insl
fdivp
or
push
mov
mov
and
test
jb
repz
mov
aad
push
setg
or
and
and
stos
adc
es
sbb
mov
jbe
or
loopne
and
lods
outsb
imul
lods
in
mov
dec
mov
push
mov
popf
xor
call
pop
mov
aam
gs
xor
lods
ficoms
pop
clc
mov
aad
push
pop
pop
adc
pop
in
add
repz
dec
inc
xor
enter
lret
inc
sbb
mov
jg
fst
outsb
aad
or
cli
imul
test
jno
pop
aam
in
mov
sti
and
inc
cld
sbb
repz
or
int
pop
or
jb
repnz
int3
dec
bound
dec
icebp
sbb
out
inc
test
mov
ds
push
push
jnp
add
or
push
loop
je
lret
xor
mov
dec
cmp
dec
fimuls
push
flds
ljmp
mov
xchg
jge
push
mov
mov
fbld
ds
pop
scas
sub
outsb
decb
fildl
push
dec
pop
in
outsb
jmp
push
dec
sti
sub
dec
roll
ljmp
jnp
pop
sbb
pop
cmc
nop
add
sti
addb
insb
lods
pop
pusha
pop
mov
mov
push
aad
or
pop
scas
pop
dec
lahf
fcompl
rclb
adc
outsb
imul
mov
xchg
inc
xchg
mov
loopne
sub
mov
push
hlt
xchg
out
into
xchg
mov
mov
stos
out
loope
cmp
hlt
fs
mov
adc
push
sub
addr16
jmp
mov
mov
mov
test
sbb
push
mov
jecxz
pop
mov
js
jno
lds
pop
jmp
or
and
mov
mov
fiadds
or
mov
and
cld
cmp
and
cmp
xor
aad
mov
mov
and
loopne
in
and
test
sub
or
and
add
or
mov
sbb
jge
test
pusha
sub
pop
xchg
xchg
adc
call
aas
and
or
mov
loope
sub
adc
push
or
mov
les
aas
xchg
or
in
and
push
inc
lds
sub
movsb
inc
xchg
lds
add
data16
je
or
xchg
pop
ja
clc
ds
push
nop
adc
cmc
shl
std
and
jg
fs
mov
push
pushf
loopne
nop
aaa
into
dec
xchg
mov
shlb
adc
cmc
pop
loopne
and
adc
stos
ja
cmc
fcomps
idivb
add
sbb
push
cvtdq2ps
aam
add
xor
rclb
lock
and
adc
adc
and
xchg
addr16
add
xor
sub
xor
loop
or
add
aad
sbb
rorb
sub
mov
ja
lock
or
add
mov
sub
icebp
sub
mov
xor
fisubs
aad
adc
pop
aad
xchg
into
pop
fadds
divb
fiaddl
js
pop
and
adc
mov
cmpsl
dec
int
xchg
add
repz
pop
les
int3
dec
pop
lods
inc
and
adc
jb
push
inc
inc
mov
icebp
jp
or
xchg
int3
loopne
sub
mov
and
and
js
enter
out
mov
mov
fsubrs
xchg
int3
dec
pop
lods
inc
and
xor
fnsave
shl
jle
xchg
aaa
fwait
fisttps
add
push
mov
movsl
and
jg
and
and
or
stos
rclb
mov
je
loop
adc
fldenv
or
sub
icebp
fdivrp
repz
fiadds
hlt
jno
sub
addr16
jno
adc
pushf
aas
xor
cmc
movsl
in
scas
inc
aas
fs
arpl
testb
std
in
in
xor
aad
inc
lret
outsl
xchg
into
pop
xchg
test
insb
or
sub
pop
or
test
pop
xchg
xchg
mov
xchg
mov
and
std
dec
or
mov
lea
jae
mov
jp
mov
sub
pop
dec
insl
or
cmc
test
xchg
jae
cltd
add
or
pop
lret
ja
or
push
jbe
and
filds
out
js
sub
cltd
xor
or
jmp
rcll
ds
add
fcmovnbe
push
adc
inc
scas
jno
ds
lods
add
mov
fwait
test
bswap
adcb
iret
or
es
pop
in
rcll
cmpsb
cmp
repnz
lods
cld
add
and
cmpsl
lds
and
aas
xchg
and
fstp
std
rcrl
mov
mov
inc
pop
mov
lock
imul
scas
aad
jns
lahf
sub
fidivs
mov
stos
test
adc
movsl
notl
popa
sbb
call
xchg
addr16
adcb
xchg
insl
or
cltd
sub
pop
jg
push
lret
fistpl
push
fistl
std
orb
fcoml
cs
fisubrs
aas
jge
pop
adc
pop
or
insl
stos
add
stos
push
cmp
sub
or
or
popa
pop
push
adc
stos
push
fldl
add
push
sarl
es
sti
jns
jl
push
add
cltd
mov
mov
push
xor
push
push
lret
or
or
and
lea
mov
sbb
mov
mov
inc
xchg
in
in
bswap
adc
insl
push
xchg
jo
outsl
pop
sbb
call
adc
lods
mov
lea
stc
decl
adc
cmp
push
push
sub
ljmp
add
inc
push
sub
lock
cmpsb
ds
shld
cmpsl
loopne
or
in
mov
aas
or
sbb
popa
outsb
cmp
and
sub
lds
stos
sbbb
sub
mov
lret
das
or
inc
popf
pop
insl
int
lahf
test
cmpsb
fcoms
or
cmpsl
mov
dec
std
or
jnp
xchg
dec
cmp
push
es
mov
push
insl
and
ficoml
push
call
mov
fdiv
ljmp
int
fwait
out
add
xchg
jl
fnstenv
insb
adc
jge
and
fwait
sbbl
out
inc
outsb
dec
pop
lds
sahf
cwtl
jnp
mov
jo
imulb
xorl
sub
jge
jno
fmul
dec
and
fldcw
movsl
pop
cmpsb
sub
or
mov
fisubrl
mov
cmp
lods
inc
xchg
xor
mov
aaa
fldcw
push
out
imul
mov
dec
or
fisttpll
mov
push
loopne
and
mov
xchg
sub
add
mov
test
lret
movsb
loop
in
adc
lods
xchg
add
aas
or
cmp
pop
iret
or
push
test
jg
push
pushf
add
jb
loopne
push
mov
loope
lods
clc
xor
loopne
arpl
sub
jp
mov
cmc
jne
push
std
or
sbb
into
xchg
and
lcall
cmp
pop
cltd
push
mov
rcl
in
sub
xchg
mov
xchg
dec
cmp
xchg
lods
push
mov
outsl
mov
outsb
jl,pt
push
jmp
or
push
rcll
into
xchg
mov
sub
fwait
cmp
in
into
mov
sub
adc
mov
movsl
loopne
popf
rcll
push
nop
cmp
and
mov
jmp
pop
js
add
dec
cmp
adc
stos
lcall
out
scas
lock
xor
es
cmp
mov
jnp
push
stos
adc
ja
inc
or
mov
rcll
pop
fiadds
fistpl
aam
or
push
fst
fcmovnbe
nop
in
xchg
push
cmpl
out
ja
out
in
mov
jo
dec
or
in
data16
pmullw
test
mov
lcall
add
dec
mov
insb
add
lock
cs
inc
jno
cmp
cmp
shll
jns
inc
cli
jno
sub
cs
fidivrl
in
mov
fwait
lods
cmp
cli
sub
hlt
stos
ljmp
add
fildl
cmc
icebp
imul
dec
sub
repz
mov
jmp
fwait
pop
mov
push
aas
cmc
cmpsb
adc
rclb
in
mov
mov
cmp
mov
cmp
xchg
mov
aas
lods
mov
dec
es
xor
xchg
cmp
pop
or
inc
movsb
mov
clc
test
out
test
movsb
mov
dec
sub
repnz
mov
aad
add
in
dec
jmp
inc
ljmp
and
or
jge
scas
dec
dec
aad
xor
sar
lahf
xchg
mov
out
popa
push
sub
outsb
sub
outsl
sbb
inc
lods
iret
mov
add
sub
adc
nop
sub
sbb
insb
adc
ds
push
or
aad
push
jne
js
mov
nop
rcll
mov
fmuls
addr16
jns
adc
loope
in
adc
push
mov
mov
push
ja
inc
mov
xchg
dec
lahf
ret
xchg
inc
sub
inc
add
dec
sub
loop
or
loop
movsb
shll
jecxz
jbe
sub
adc
sub
cmp
push
in
out
clc
adc
aad
lea
or
xchg
lea
leave
pop
fidivs
in
leave
pop
fidivs
inc
ljmp
jo
mov
adc
cmp
lret
jbe
mov
aad
mov
lods
mov
dec
and
push
stos
xchg
ss
icebp
cs
pushf
mov
out
add
adc
mov
jp
pop
inc
or
adc
adc
pop
outsl
mov
cmp
xchg
sbb
xor
pop
inc
xor
jmp
adc
jmp
push
enter
xchg
jp
xchg
ljmp
lods
in
jp
dec
adc
jmp
in
xchg
push
lret
shlb
fnstsw
aas
imul
inc
in
mov
adc
sbb
mov
jg
and
aad
cmp
in
dec
xlat
cmpsl
fimuls
jo
out
nop
push
sbb
es
push
cmpsb
mov
aam
xchg
mov
jle
icebp
xchg
lea
push
lods
mov
sub
cmp
or
adc
mov
pop
or
adc
ds
cmc
loopne
in
add
lea
adc
jecxz
gs
or
test
mov
test
ja
int
xor
mov
mov
scas
mov
adc
push
mov
scas
mov
pop
rcr
mov
lret
fwait
inc
dec
in
cli
xor
les
fidivs
in
sti
xor
les
fidivs
inc
fiadds
std
xor
les
fidivs
incb
xor
std
adc
in
pop
loopne
or
aad
in
jmp
loop
adc
jg
jne
push
dec
cmp
gs
out
add
pushaw
jg
daa
loopne
pop
adc
push
cmp
add
lods
stos
cmp
add
push
or
and
and
jmp
push
and
iret
sub
imul
unpcklps
loopne
push
fmull
push
add
cwtl
test
or
mov
cmpsb
xchg
jecxz
dec
lock
shr
scas
mov
les
shr
mov
or
fst
stos
or
add
pop
mov
fldt
icebp
inc
sub
sbb
outsl
movsb
mov
and
push
fisttps
inc
mov
stos
jnp
loop
fwait
xchg
xor
xchg
or
jno
leave
cmpsb
or
dec
xor
scas
push
mov
flds
btc
mov
outsb
xor
lods
stos
fisubl
inc
push
or
cmp
in
mov
in
push
nop
sbb
fcmovne
jb
imul
fistpll
xchg
dec
in
add
xor
pop
inc
xor
ds
mov
stc
add
ds
out
mov
pop
out
xchg
mov
push
in
les
shr
rcll
lds
pusha
shlb
sub
xlat
aad
lret
add
sti
or
adc
test
push
dec
jo
int3
into
or
test
les
fidivs
roll
repnz
shr
lods
sbbb
scas
jmp
fisubrs
push
or
cwtl
pop
aad
inc
push
in
mov
fnstsw
xchg
mov
in
mov
push
loop
iret
cmp
push
test
push
aas
jl
es
inc
std
dec
int
fmul
cltd
push
jp
lods
pop
lret
or
dec
lock
fcom
mov
xchg
lea
leave
pop
fidivs
fnstcw
lea
push
pop
inc
fcmovbe
add
scas
mov
scas
mov
jl
push
in
mov
mov
pop
pop
or
push
cwtl
mov
xor
adc
xchg
fwait
push
jp
jp
fisubrl
int3
push
jb
aad
inc
mov
data16
jo
loopne
push
sbb
es
push
loope
push
gs
cmp
fdivp
scas
mov
mov
pop
icebp
insb
loopne
loop
loope
jne
ucomiss
xchg
push
fucom
ss
mov
mov
shl
shrb
xor
shlb
push
shlb
lcall
sbb
rolb
in
mov
fnstsw
add
sub
push
inc
call
push
sbb
push
adc
aad
in
mov
dec
outsl
jl
add
push
jmp
testb
xor
lahf
or
cmc
cmpsl
push
jo
mov
repz
stos
repz
cmp
fstpt
jo
movzwl
sbb
mov
xor
aad
stc
xchg
mov
into
pop
dec
sbb
and
rcll
or
add
jp
dec
xchg
jo
shll
add
add
xchg
lea
cmp
mov
push
xlat
outsl
icebp
fucomp
bound
ljmp
fst
lods
fldt
addr16
mov
mov
dec
out
pop
test
lods
mov
int3
jns
rcr
xchg
push
jle
push
push
lcall
pusha
ret
jmp
add
lret
add
lods
push
outsl
jle
lods
cmpsl
jmp
dec
mov
les
add
cmp
fmul
iret
repnz
fs
fmul
les
add
pop
call
or
add
sbb
scas
and
stc
jmp
frstor
loope
repnz
jmp
es
cltd
insl
sub
mov
repz
out
mov
mov
in
and
popf
mov
lea
aas
iret
jmp
mov
fcoms
push
push
rolb
mov
das
fimull
xor
ss
test
mov
sub
push
inc
add
mov
cmc
push
pop
or
popl
adc
aas
sub
ljmp
into
or
pop
mov
dec
dec
xor
xor
dec
outsb
aas
lcall
adc
repz
test
xchg
pop
push
xchg
aas
inc
pop
out
out
repz
stos
cmp
push
inc
mov
repz
cli
inc
push
test
jge
sub
stos
aam
aad
sti
imull
push
daa
mov
mov
aad
cld
mov
pop
jmp
dec
repz
mov
out
add
cmp
push
jnp
faddl
adc
and
and
aad
mov
lds
movsl
mov
inc
or
in
add
xchg
iret
leave
xlat
mov
hlt
cmc
mov
mov
xlat
data16
scas
dec
xlat
cwtl
lret
or
or
lock
mov
add
push
push
or
xlat
push
jnp
in
mov
in
dec
lods
incb
dec
ror
nop
ffree
aad
pushf
mov
add
cmc
cmp
mov
fcomp
scas
fimull
jecxz
in
scas
and
setbe
aam
pop
jmp
stc
inc
stc
cmpsl
das
sar
iret
dec
scas
add
subb
cmp
or
mov
dec
or
lods
fadd
mov
shrb
fadd
in
cmp
lds
or
in
push
jnp
cmp
fcompl
outsl
dec
mov
sub
mov
dec
loopne
cmc
or
mov
mov
adc
stc
orl
dec
outsb
mov
aam
int3
cmovg
fistps
mov
loope
jns
or
cmp
es
jae
outsb
mov
mov
dec
ljmp
mov
xlat
add
test
or
aad
jp
outsb
cli
addl
and
loope
jge
push
scas
es
cmc
nop
dec
pop
dec
sbb
rorb
mov
rorl
xchg
inc
adc
lret
jnp
jmp
fisttpll
xchg
sar
scas
daa
cmp
stc
mov
cltd
push
jge
fwait
mov
cli
idivl
jo
sbb
sbb
cli
dec
int
int
inc
ret
cli
dec
xchg
mov
push
push
push
or
sub
xor
aas
insl
sub
xlat
cld
pop
ds
repz
jp
and
mov
push
pop
sbb
add
sbb
jnp
fstl
or
in
out
or
mov
cwtl
xor
ja
and
not
rorl
add
mov
lahf
shll
loop
pop
outsl
lret
or
fcmovu
jl
fs
sub
into
enter
lret
movb
mov
dec
outsl
push
lsl
pop
mov
mov
jne
out
loop
xchg
mov
les
push
sbb
mov
or
and
mov
or
mov
adc
pop
insl
sbb
cmovs
mov
iret
test
jecxz
push
scas
fists
mov
out
fmul
cmp
lret
mov
int3
lods
add
xlat
int
fmulp
es
or
in
mov
push
pop
jmp
out
ret
rclb
into
lods
fdivr
pushf
mov
int3
inc
dec
lcall
inc
dec
push
jge
jle
or
gs
mov
inc
sub
mov
inc
jnp
mov
jp
cld
mov
lea
mov
cmc
sbb
mov
js
sti
sub
push
into
inc
fsubrs
ffree
mov
mov
push
cmp
ss
mov
xlat
sahf
cmpsl
rorl
scas
mov
iret
mov
loopne
xchg
mov
mov
cmp
in
loope
aas
fsubl
inc
adc
or
ret
jbe
mov
sub
mov
aam
lds
pop
jg
pop
shll
inc
sbb
cmc
test
loop
sub
or
ljmp
int
pusha
lcall
fisubs
dec
imul
in
jmp
into
decb
inc
test
push
seta
into
mov
clc
cmp
lahf
fstpt
pop
testl
push
sbb
sbb
out
lea
inc
jne
cmp
int
lock
scas
jbe
mov
mov
fsubrs
push
sti
iret
and
dec
dec
out
adc
sbb
fisubrs
jbe
mov
or
scas
and
push
cmc
out
xchg
sub
adcb
sub
xor
repnz
ljmp
insb
aad
mov
decb
inc
mov
jns
out
pop
in
mov
lods
xor
bnd
lcall
pop
lock
mov
xor
std
xlat
je
mov
adc
call
cmp
dec
lret
jo
cmp
sub
imul
pop
imul
aad
push
mov
aam
mov
es
push
mov
push
popa
jg
mov
psubsw
jnp
test
xor
wbinvd
out
mov
pop
or
ret
das
jbe
lods
mov
mov
repnz
pop
pop
jnp
xchg
xor
stos
fimuls
xor
xchg
fucomp
lea
test
fbstp
push
loopne
shr
pop
or
arpl
mov
xchg
fwait
mov
enter
mov
loop
lahf
and
add
inc
sbb
jge
dec
mov
movsb
out
in
jmp
ljmp
inc
rol
cwtl
mov
add
or
mov
adc
inc
dec
inc
mov
iret
aad
es
adcb
aad
add
aam
sub
fldl
andb
rcl
sbb
sub
jnp
stc
clc
cmc
insb
adc
call
enter
dec
fisubrs
jge
out
add
nop
or
leave
aad
sbb
adcl
fdivr
add
into
cmp
fstl
test
cmp
mov
sahf
loope
loop
int3
nop
addl
in
adcl
stos
mov
out
cwtl
push
fnstsw
sbb
push
stos
xor
psadbw
add
int3
stos
hlt
les
xor
ljmp
fdivrp
mov
xchg
or
cmc
ljmp
outsl
lcall
adc
stos
add
cmp
xchg
cmp
scas
add
fists
jl
pop
inc
mov
sub
les
push
cwtl
imul
rorb
and
stc
inc
adc
jae
xor
movsb
mov
jnp
fisttpll
cmp
jns
dec
push
inc
aad
loop
pop
sbb
lahf
repz
jl
mov
jmp
mov
pop
cli
jge
pop
mov
xor
dec
adc
les
jle
fs
jge
jnp
or
mov
cmpxchg
in
mov
inc
and
mov
cmp
or
adc
and
jge
idiv
aad
xchg
repz
pop
aam
mov
or
pop
int
repnz
arpl
scas
fcmovnb
xlat
lods
ret
or
lret
int3
xor
scas
out
insl
lods
mov
jecxz
jge
stos
rorb
jno
jbe
shlb
and
in
mov
push
fwait
cmp
push
jno
clc
in
fsubp
jae
dec
mov
test
bound
xor
inc
loop
add
fimuls
push
ss
imul
or
loop
stos
cmp
pop
or
imul
popf
dec
shlb
fiadds
jae
inc
fdivrl
cli
fcmovbe
xchg
testb
and
or
dec
push
movsb
iret
insl
lods
out
insl
movsl
xchg
sbb
and
xchg
cmpsb
mov
test
jnp
ficompl
fidivs
lock
xor
sbb
mov
cli
test
add
and
push
xor
les
mov
xor
into
sbb
flds
scas
ja
or
shrb
ret
cmp
cmp
nop
lret
sub
lds
in
sbb
add
mov
jg
push
add
lcall
jle
mov
jp
data16
or
mov
xor
xchg
dec
mov
push
sub
out
xchg
jb
gs
imul
lcall
jg
or
mov
into
outsb
pop
mov
pop
jns
jo
xor
leave
sbbl
adc
lods
fwait
jb
jnp
arpl
sti
jne
dec
cmp
push
xor
outsb
in
xor
mov
add
xchg
dec
or
repnz
inc
jle
int
test
and
repz
shll
lods
lcall
faddp
inc
push
iret
cltd
iret
mov
push
pop
ret
aad
push
sub
repz
push
negb
adc
and
cli
push
cmpsl
pop
stos
decb
ds
push
sub
xchg
lods
mov
fucom
int3
es
or
jl
aad
push
mov
pop
dec
pcmpgtw
in
or
pop
xchg
or
pop
inc
add
out
les
clc
lock
sbb
cmp
mov
push
imulb
clc
fisubrs
lds
push
fimuls
push
mov
stc
mov
insl
js
idiv
jae
or
in
cmc
sbb
scas
lock
xchg
xchg
jg
jb
mov
dec
mov
imul
repnz
jns
fidivrs
mov
aad
test
dec
in
sbbb
leave
sbb
inc
adc
jne
inc
andl
add
gs
shll
loope
jge
aam
and
push
sarl
fidivrs
pop
jnp
fisubs
xchg
ret
xor
jg
push
subb
test
lods
clc
and
xor
adc
in
push
ret
mov
xor
fnsave
adc
inc
mov
or
ljmp
cmpsb
lcall
dec
inc
popa
loopne
in
cmp
pusha
repnz
jp
movsb
int3
fucomip
mov
dec
popa
test
rclb
inc
push
cmp
jge
mov
lods
mov
movsb
add
sbb
mov
cmp
and
repnz
decb
lret
fxch
faddl
xchg
cmp
rcl
jmp
push
sub
jno
ret
fldl
mov
lock
jmp
pop
fidivrs
in
dec
lock
jnp
out
mov
inc
dec
sti
ja
dec
pop
dec
pop
push
or
aad
les
fmull
fstpt
dec
or
aad
popa
stos
mov
cmp
jne
outsb
jp
inc
in
neg
xchg
call
inc
ffree
fiadds
icebp
stos
out
lret
jnp
paddsw
rcll
stos
push
dec
aad
jg
inc
call
mov
cmp
mov
adc
cltd
test
and
jl
insb
movb
lods
int
leave
xor
xchg
ret
adc
dec
outsl
scas
jne
or
xchg
jae
mov
jge
pushf
mov
adcb
jg
or
aam
jo
xlat
xor
mov
pop
or
dec
fldcw
leave
lods
ret
xor
movsb
mov
mov
cli
dec
call
sub
mov
pop
mov
push
sbb
stos
push
push
adc
sbb
add
test
lret
sbb
inc
or
push
imul
jo
push
lret
fstl
jae
push
or
dec
sahf
decb
leave
call
pop
add
mov
xor
cs
jmp
dec
orl
cmc
xorb
xchg
lahf
loop
imul
pop
pop
hlt
adc
hlt
mov
sbb
test
mov
fimuls
movl
fs
enter
notb
pop
adc
fimuls
mulb
mov
xchg
les
and
dec
lahf
dec
pop
mov
pop
mull
jno
jae
imul
int
idivl
xbegin
aad
and
das
test
dec
mov
cmp
inc
data16
lods
push
mov
test
pop
test
or
mov
or
jnp
ret
out
das
lahf
inc
lahf
fs
int
lods
daa
dec
xchg
cli
cwtl
pusha
insl
jbe
adc
stos
mov
sbb
adc
sahf
push
repnz
out
jne
mov
pop
insl
mov
mov
jb
test
inc
lods
stos
add
pop
dec
mov
or
inc
and
inc
cmp
mov
cmc
add
push
lds
orb
add
mov
and
sti
aad
cli
lcall
dec
mov
es
cld
fildl
movsl
push
fs
stos
gs
xchg
mov
dec
cwtl
pop
xor
out
sbb
in
jmp
cwtl
test
out
pop
pushf
int
xchg
das
adc
fdivrs
pop
lock
jecxz
sbb
sbb
outsb
inc
and
mov
iret
xchg
aad
std
inc
fnstsw
shlb
repnz
cmp
or
outsb
adc
popa
test
mov
aad
mov
aam
roll
fsubs
fsubp
add
loopne
inc
adc
or
cmp
jnp
lret
push
into
xlat
jbe
fisubl
jl
popa
fstpl
es
pusha
mov
in
fsubr
add
leave
fmull
out
pop
xor
mov
es
jmp
aad
pop
inc
jae,pn
lret
add
fisubrl
stos
jle
adc
or
stos
movsl
mov
inc
cmpsl
push
cmp
es
in
leave
or
andl
fisttpl
lods
or
adc
mov
lods
js
aad
fwait
dec
out
or
mov
les
sbb
or
pop
xchg
pusha
cmp
xchg
test
inc
mov
pop
fcoms
test
testb
pop
jg
cmc
jg
scas
rorb
mov
decb
ja
dec
outsb
aad
xor
adc
inc
out
mov
mov
mov
or
cmp
call
mov
fiaddl
fisttpl
stos
movsl
enter
lods
cmp
popf
jg
jmp
sti
push
push
cli
lahf
or
loop
mov
jae
rcrb
inc
ljmp
xor
arpl
pop
leave
mov
mov
mov
or
stc
cmp
inc
mov
jns
hlt
cmpl
xor
lds
lods
push
dec
gs
cld
lods
and
sbb
sbb
cmp
jl
rcll
add
xchg
xchg
jo
xor
mov
wbinvd
arpl
clc
jno
mov
sbb
fimull
cmp
or
add
pop
fisttps
or
scas
cwtl
adc
jmp
xchg
mul
std
in
jecxz
aas
mov
sbb
scas
das
aad
xchg
or
xchg
inc
xor
inc
mov
dec
in
mov
gs
loop
nop
sub
sub
aad
cwtl
int
mov
pushf
push
pop
push
faddl
lret
gs
loop
add
out
xchg
or
cmp
sub
mov
popf
mov
xor
scas
pop
std
sbb
out
mov
and
mov
dec
lock
mov
ja
std
out
push
les
cwtl
data16
test
dec
mov
adc
add
repnz
cmp
arpl
xchg
cmp
scas
aad
pushf
pusha
pop
test
fdiv
add
adc
jne
push
arpl
and
loope
sbb
addr16
sbb
jmp
mov
sub
cwtl
or
fstpt
and
mov
aad
sub
scas
add
inc
mov
sbb
push
cmp
lahf
testb
popf
repnz
inc
lea
fcompl
or
cmpsb
inc
lods
adc
out
mov
scas
outsl
and
rorb
pop
inc
cmp
xchg
xbegin
or
push
in
lret
pop
imull
sahf
or
adc
out
pop
inc
adc
mov
decb
icebp
cmp
mov
mov
push
cmp
cmpsb
add
dec
leave
jecxz
and
jo
cli
cmpsb
push
outsl
jmp
adc
push
sbb
shr
sub
xchg
dec
push
push
or
sbb
sub
or
add
int
mov
xchg
shll
mov
fcmovb
js
stos
mov
ja
dec
or
jnp
add
mov
mov
insb
inc
pop
les
xchg
add
cmc
ficomps
inc
std
loopne
fimull
cmp
push
insl
mov
xor
dec
mov
inc
or
sub
clc
lret
scas
mov
mov
jg
in
ret
xchg
lret
cmp
jno
imul
adc
jb
jbe
adc
sub
mov
andb
xchg
inc
push
mov
mov
and
test
cmp
shl
orb
lret
sbb
mov
pop
lea
mov
js
xchg
dec
daa
xchg
pop
xor
sbb
dec
mov
xchg
or
push
int
sti
mov
das
mov
adc
ret
popf
movsl
dec
sbb
pop
fisubl
rorb
cmpsb
sti
and
cmc
pop
mov
fs
mov
testl
cld
xor
pop
pop
lea
iret
dec
adc
cld
insb
ror
mov
insl
pushf
loop
xorl
insl
lcall
iret
jb
iret
loop
inc
je
jecxz
dec
lcall
dec
in
fs
loop
in
and
stc
call
xchg
mov
cs
stos
mov
icebp
cmpsb
cmp
loopne
cmp
or
jmp
aad
adc
notb
sub
in
scas
aad
in
inc
incl
and
cmp
and
addr16
int3
repnz
lahf
js
ja
push
stos
fwait
sarl
xlat
fs
push
mov
iret
lods
push
or
rsm
pop
xorl
xchg
js
cmp
je
push
xchg
hlt
mov
ljmp
rcr
mov
in
push
mov
lods
icebp
movsl
mov
inc
sahf
inc
addl
out
addr16
ret
mov
fnsave
sub
fcomps
or
ror
lcall
xor
iret
fcmovnbe
iret
sub
jp
push
loop
jmp
mov
and
cmp
dec
out
xor
nop
inc
pop
in
xchg
test
idivb
jno
jne
mov
lock
mov
mov
cmp
add
cmpsb
mov
pusha
loop
cli
mov
outsb
cmp
and
js
jg
push
iret
lret
js
adc
sub
mov
bswap
pop
cli
sbb
xchg
or
pop
push
pop
xor
hlt
xor
ja
add
xor
add
testl
jno
in
test
fnstcw
ljmp
cmp
or
mov
fs
jmp
test
mov
sub
and
loopne
pop
in
movsb
and
mov
push
sarb
lret
jecxz
push
xchg
stos
shll
push
inc
mov
aad
fdivrs
pusha
jl
insl
or
scas
stos
or
jbe
rcl
test
lock
cmp
lret
pop
jb
js
psubd
notl
mov
and
std
push
out
pop
shl
loop
add
pop
jg
jge
call
mov
inc
sti
sbb
pushf
xchg
xchg
stos
into
add
imul
pop
mov
insb
dec
outsl
out
mov
dec
pop
fstl
jg
pusha
jl
sub
cmpsl
shll
std
mov
enter
xchg
std
dec
xor
mov
ljmp
mov
scas
aad
sbb
lahf
popf
jbe
xchg
popl
ret
dec
mov
push
scas
scas
sub
mov
push
stos
lret
jnp
pushf
mov
and
pusha
fidivl
test
and
xor
notl
inc
sahf
out
movsb
jne
mov
dec
psrlq
aaa
aaa
pop
clc
iret
lcall
sub
cmp
xor
daa
push
push
daa
xor
mov
push
movsl
or
cmp
ret
or
jmp
and
cmpsl
rcl
cmp
inc
nop
movsl
mov
or
in
push
push
add
jg
mov
aaa
mov
movsl
inc
rclb
loopne
outsb
arpl
xchg
xchg
inc
shlb
rcr
mov
dec
es
or
push
iret
add
int
mov
cmpsb
icebp
fadds
int
mov
inc
cmp
mov
or
gs
mov
popa
adc
jge
pop
gs
outsb
sub
jge
sub
add
or
iret
cmp
mov
test
or
pop
pop
add
adc
cmp
dec
sub
aaa
stos
xchg
stos
das
jae
sbb
adc
enter
sub
addr16
adc
jbe
imul
pop
mov
or
in
xchg
or
push
in
jecxz
pop
pmaxsw
mov
cmp
inc
ret
mov
mov
int3
or
fsubrs
cmpsb
and
and
pop
push
es
and
popf
rcrb
mov
mov
or
aad
ljmp
mov
cs
mov
sarl
aad
mov
lret
inc
incb
sub
jle
adc
enter
mov
add
sub
arpl
stos
mov
dec
xor
jl
or
mov
xchg
push
hlt
insb
jg
in
repnz
lds
stos
lock
mov
out
dec
lds
loopne
fildll
outsb
stc
test
les
inc
jmp
leave
leave
push
out
mov
sub
xchg
test
out
push
or
arpl
push
aaa
aas
mov
fiaddl
loope
dec
cmp
mov
cmp
ja
andl
fcomp
popf
sub
mov
adc
jp
push
cmp
in
jmp
sbb
jb
push
and
cmp
or
in
idivl
gs
fsubrl
pushf
inc
repnz
mov
enter
test
lods
mov
cwtl
popf
lcall
lds
cmp
mov
rolb
adc
mov
test
xchg
lods
jae
int3
adc
icebp
sub
adc
cmp
aas
andl
in
in
cmpsb
mov
shll
push
cmpsb
nop
lret
mov
xchg
mov
xor
rcl
lock
xchg
push
inc
aad
gs
inc
or
push
gs
mov
inc
inc
push
lret
fdivs
xchg
into
aam
mov
inc
xchg
pop
mov
addr16
test
lret
loope
push
test
push
pop
and
mov
dec
and
mov
leave
cld
into
dec
mov
add
scas
jnp
cmp
jno
add
mov
mov
mov
cli
test
dec
sbb
stos
lcall
jg
pusha
jl
sub
mov
sub
fcompl
inc
jno
xchg
out
sbb
pop
gs
sub
adc
jg
scas
lock
clc
mov
mov
sub
aam
pop
cmc
int3
adc
rcll
jb
xchg
aad
gs
jg
xchg
fistl
mov
pop
sub
push
push
xor
int
loopne
xchg
xchg
pusha
add
js
pop
stos
xchg
or
cmp
lret
dec
in
call
stc
mov
gs
or
mov
mov
lret
aaa
out
push
push
je
xchg
ds
ja
mov
inc
call
ret
inc
inc
sub
and
loope
pusha
movsl
jg
mov
fs
lcall
iret
or
nopl
add
or
adc
mov
repz
and
jp
or
mov
inc
int
repnz
fiaddl
xor
dec
cmp
push
xor
mov
adc
lret
movsl
subl
or
sbb
cs
push
in
lcall
inc
fdivp
cmp
lret
shrl
and
adc
mov
xchg
or
xor
xor
lcall
iret
mov
pop
ret
aad
pop
or
jmp
fwait
dec
mov
lea
stos
dec
cmpsl
imul
aad
or
imul
test
mov
adc
call
pushf
insb
mov
insl
push
rcr
and
out
xchg
xchg
int3
push
jo
inc
fstpt
pop
dec
jg
xchg
xchg
in
mov
pop
subb
and
pop
mov
mov
sub
ja
sti
add
aam
loop
int
jmp
rcrb
mov
shl
rcl
pop
add
dec
inc
imul
sbb
clc
or
adc
test
call
aad
sahf
jmp
stos
pushf
mov
mov
ret
cmpsl
pushf
xor
movsb
jmp
mov
dec
jg
scas
and
inc
es
or
mov
sbb
pop
repz
ret
jo
aas
xchg
aad
push
xchg
fiaddl
mov
out
adc
test
sbb
test
loopne
push
aad
add
rolb
inc
push
jle
scas
aad
inc
lahf
pop
dec
outsl
aad
xchg
out
call
push
lret
push
outsl
jecxz
or
insb
lods
in
dec
fdiv
push
int
lcall
into
aad
insl
int
imul
jns
and
dec
icebp
fildl
jle
sub
jmp
fistl
mov
arpl
loopne
jle
out
cmp
scas
xchg
lea
or
pop
xchg
outsb
xor
imulb
call
cld
jg
inc
mov
aad
or
lods
sub
clc
xchg
fidivl
fstpt
fstpt
cmpsl
xorl
lcall
rcl
pop
cs
xor
mov
rcl
and
lahf
fs
jle
orb
xor
mov
repz
push
pop
aad
daa
mov
jmp
adc
out
int3
xor
or
out
enter
fnstcw
in
icebp
aad
jae
jg
pusha
pop
aas
add
rep
int
cli
fcmovb
cmp
jns
adc
adcl
or
add
inc
mov
pop
inc
or
clc
xchg
cmp
stos
orb
xchg
andnps
xor
int3
out
dec
inc
fildll
mov
fcomp
or
add
arpl
flds
mov
movsl
push
nop
sahf
mov
ror
jg
inc
dec
loope
fidivs
fildl
jp
aas
or
jle
push
inc
cmc
cmp
in
jbe
cld
rol
adc
adc
dec
lods
cli
jmp
lock
dec
dec
popa
inc
sub
sysexit
mov
arpl
or
mov
jne
paddusb
sahf
lret
rclb
daa
or
push
out
dec
dec
or
xor
jae
xchg
into
push
mov
into
or
in
aam
jmp
adc
mov
xor
shll
pop
jo
movsb
pop
push
out
inc
ljmp
ror
jmp
fisttps
ljmp
popf
sti
push
stos
in
xor
xchg
aad
push
dec
iret
scas
sbb
es
into
addr16
fcomi
into
outsb
jge
fs
push
pop
arpl
scas
fcomip
lods
sub
adc
mov
adc
pusha
aam
cs
pop
scas
inc
mov
sbb
inc
lock
into
sarl
fwait
subl
cmp
movsb
lret
xlat
test
div
xor
dec
fwait
dec
out
xor
ret
or
xchg
mov
addb
pop
dec
test
dec
rol
enter
jmp
outsl
scas
jne
int3
rcll
ret
jnp
stos
int3
testb
lock
adc
push
rolb
int
or
sbb
or
enter
sub
test
jmp
pop
cld
sarb
mov
pop
fninit
movq
jbe
in
push
sbb
outsb
adc
aad
cs
jno
xchg
aaa
sti
or
aam
movsb
ret
and
shrl
mov
xchg
rorl
jno
pop
sub
ds
cmp
pop
outsl
into
pop
xlat
int
mov
sbb
sbb
mov
dec
sub
mov
mov
jp
sti
test
mov
arpl
xchg
ljmp
and
pminub
pop
cld
cltd
cld
aam
js
mov
or
insl
sarb
pop
inc
addps
xchg
mov
out
pop
xchg
dec
jp
push
pop
rcrl
gs
fwait
jo
rorb
pmullw
add
jge
lret
xchg
xchg
add
data16
jmp
fiaddl
test
outsb
sub
in
cltd
sub
repz
stos
pop
push
loop
jns
sub
mov
push
fildll
ss
js
aas
les
cs
cld
xchg
int3
scas
pusha
add
mov
fadd
scas
popf
cmpl
and
fisttpl
popf
std
sub
ret
insl
inc
fldl
push
out
push
aad
xor
stc
sbb
outsb
push
pop
movsl
mov
mov
xor
mov
or
pop
andl
and
sub
scas
inc
or
movsb
jo
sbb
adc
push
cmp
loopne
xchg
dec
mov
popf
mov
xor
pusha
or
push
inc
jae
dec
popa
or
cmpsb
cmp
in
pop
dec
pop
mov
xchg
pop
mov
push
push
out
jns
mov
data16
fistpl
mov
aad
roll
add
sarb
dec
in
dec
mov
loop
jnp
jp
scas
jg
inc
out
mov
and
mov
nop
int3
push
sbb
xor
lods
inc
movl
mov
sti
loopne
add
mov
sbb
or
add
int
sbb
lahf
scas
aam
test
call
ss
leave
lods
mov
fimull
fisttpl
fmull
out
ljmp
stos
testb
stc
movsl
pop
in
and
push
lock
cmp
push
and
or
cld
fnsave
or
adc
mov
leave
sub
rcrb
or
sub
push
popf
fstpl
mov
mov
out
shr
scas
lea
addb
mov
mov
repnz
ret
lea
gs
adc
adc
mov
das
roll
mov
or
in
inc
pop
iret
fildll
lret
cmpsb
fcomip
loope
jmp
in
push
cmpsb
mov
testb
mov
fsubr
inc
cmc
mov
adc
inc
jp
and
jg
int
mov
in
repz
mov
pop
mov
jmp
fisttpl
aad
add
dec
or
xor
mov
out
lods
outsb
pop
inc
dec
repnz
nop
lahf
imul
xor
adc
mov
add
insb
out
sbb
mov
sbb
mov
cmp
mov
jge
sbb
lret
mulb
dec
sarb
mov
push
lret
filds
es
in
bnd
in
jle
lods
and
stc
int
test
pop
test
inc
pop
dec
test
sub
aad
not
das
mov
dec
jno
ret
shl
dec
pop
repnz
push
out
and
enter
cli
aas
jmp
jb
fucomp
or
and
cmp
sti
shlb
or
ss
cmp
ds
loop
ljmp
jmp
and
jge
pop
jmp
cmp
ds
fildll
dec
fcoms
pop
dec
jbe
push
or
push
and
test
ja
xchg
into
add
or
mov
insb
leave
imul
jge
jmp
aad
xor
xchg
insl
cmpsl
inc
ljmp
out
mov
fstpl
cmp
test
es
int
and
fisubs
in
fdivrl
xchg
out
mov
mov
loopne
jnp
std
inc
mov
jno
xor
mov
mov
jg
pop
cli
mov
mov
ret
test
out
xchg
lret
sti
xchg
mov
push
dec
jnp
dec
mov
jecxz
mov
lret
inc
es
imul
push
clc
std
rclb
movsl
jo
ds
push
mov
lds
lret
push
int
pop
lock
lods
jnp
and
xchg
fnstsw
xor
data16
jae
jmp
das
push
int3
iret
push
mov
ror
aam
jns
rolb
pop
mov
add
sub
adc
jecxz
inc
dec
lahf
dec
sub
dec
int
sarl
into
repnz
add
pop
popa
ret
sub
std
sub
sub
test
arpl
addr16
add
inc
cmp
jmp
mov
pushf
pop
stos
add
push
inc
in
and
add
mov
sbb
mov
sbb
and
shr
repnz
or
pop
out
jl
add
fdivp
mov
iret
push
fisubs
fpatan
mov
call
aam
mov
fisttpl
mov
es
sarl
xchg
mov
in
push
pushf
mov
leave
rolb
cltd
aaa
test
mov
jnp
inc
lret
mov
in
lret
mov
push
movsl
add
push
fsubrs
pop
fcoms
mov
test
lock
std
inc
mov
add
mov
xlat
xchg
or
gs
aad
hlt
and
repnz
lds
aad
mov
into
or
in
or
in
cmp
jb
or
int3
dec
inc
icebp
lods
aad
and
xor
xor
mov
pop
stos
movsb
lds
jae
mov
mov
cmp
push
mov
jle
add
lea
pminsw
cli
loop
cmp
jmp
out
jmp
sub
out
xchg
pop
xchg
push
dec
adc
loopne
out
pop
push
subl
loop
inc
push
adcl
add
and
jno
fsubr
decb
iret
jne
out
mulb
xchg
shll
mov
or
fcomp
xor
mov
jbe
mov
cmp
dec
lret
add
es
adc
add
repz
out
das
sarb
lea
shr
aad
sahf
nop
adc
fucom
jp
mov
popf
mov
loopne
shlb
test
out
cmp
mov
cmp
sub
test
xchg
aas
push
and
xor
lcall
mov
xor
popf
cmp
std
add
adc
in
iret
mov
jg
inc
in
out
movl
enter
jo
xchg
sub
pop
insb
arpl
xchg
popa
dec
shrw
jne
bnd
or
mov
dec
mov
cmpsl
add
inc
and
insb
outsb
and
mov
orl
sub
into
in
jl
ja
dec
in
mov
cmpsb
cwtl
mov
stos
push
aam
and
out
fs
fistpl
pop
sarl
aad
nop
and
dec
jnp
or
mov
xor
js
scas
loopne
js
mov
pop
sub
lret
pop
or
orl
push
mov
clc
xchg
test
dec
mov
out
mov
adc
lds
push
sahf
sbb
pop
vandnps
mov
fistpl
xchg
ret
cwtl
popa
pop
lcall
aad
and
ret
dec
pushf
pop
pop
mov
sbb
jp
cmp
lea
in
pusha
cmp
and
cmp
pop
jns
and
sbb
jg
lods
imul
rcll
mov
dec
cmc
rorb
mov
fdivp
pop
sti
arpl
mov
inc
cld
jg
addr16
aad
or
mov
adc
add
push
add
sahf
adc
in
xor
cwtl
xchg
pop
add
lahf
mov
or
or
or
nop
push
lcall
stos
pop
mov
paddusb
mov
push
dec
xor
subb
mov
out
sub
xchg
ljmp
loop
out
and
mov
add
dec
mov
aad
pop
fisttpll
push
jge
out
ds
mov
dec
scas
aam
xchg
sti
sti
and
jl
inc
call
sub
lock
dec
pop
rcl
scas
aad
aaa
adc
fcmovu
shll
ror
mov
leave
rcll
jno
jnp
lret
inc
push
stos
or
xorl
add
repnz
hlt
stos
or
test
jl
test
dec
add
pop
adc
cmpsl
or
mov
aam
xchg
icebp
dec
arpl
movsl
inc
sbb
clc
push
pop
jmp
not
js
dec
cmc
push
fiaddl
sbb
sub
xchg
out
clc
les
jae
out
jb
int
cli
mov
add
xor
jl
dec
daa
out
adc
cmp
push
or
or
rorb
mov
sub
jno
inc
fnstenv
in
dec
cmpsl
mov
aaa
mov
push
fadds
jl,pn
mov
gs
or
sub
fnstsw
ja
add
stc
lret
shlb
push
dec
stc
mov
dec
fmuls
decb
or
cmp
add
jnp
mov
in
pop
xchg
mov
mov
fwait
movsl
div
cmpsb
push
fimuls
jecxz
push
cmpsb
repz
adc
xsaveopt
pusha
or
into
aam
mov
cmp
or
or
mov
lods
aam
lea
add
aam
aad
dec
dec
cs
insb
mov
cmp
jecxz
lahf
lret
scas
mov
dec
shll
lret
inc
ljmp
sub
repnz
int
in
repz
and
jmp
push
mov
and
scas
jecxz
out
scas
ja
clc
je
shl
lds
andb
pop
mov
in
lea
sub
daa
push
lcall
pop
mov
jg
xor
and
sarb
aas
sbb
or
roll
mov
jb
adc
repz
std
loopne
mov
mov
mov
fnstenv
test
hlt
mov
or
jle
js
cmc
pusha
mov
and
jo
fsubs
or
negb
sbb
aad
dec
pop
cmp
or
es
cmp
mov
sbb
add
cmp
leave
sub
and
fcmovnb
mov
pop
icebp
movsl
dec
push
mov
jecxz
adc
adc
mov
jecxz
filds
inc
or
cmp
dec
jge
imul
movsb
inc
cmp
fneni(8087
mov
pop
dec
sub
and
push
inc
insb
call
out
mov
fsts
out
bound
filds
xchg
mov
push
or
pop
sbb
nop
cmpsb
pop
mov
xor
movl
pushf
into
rcrb
testb
mov
lods
popf
movsb
push
lods
pushf
dec
fisttpll
lret
fs
aad
sbb
pusha
ret
pushf
in
add
mov
negb
jmp
inc
push
jle
ljmp
into
stos
mov
stos
mov
pop
dec
jns
xchg
ret
pusha
cmp
jp
cld
fisttpl
xchg
adc
insl
rclb
in
fimull
jae
add
fdivs
sbb
jp
in
cmp
bound
lcall
xchg
jns
jae
or
iret
sub
mov
les
mov
dec
nop
or
adc
push
int3
or
push
jmp
cmc
lret
psadbw
push
adc
mov
js
ds
push
mov
fsincos
pushf
insb
sub
push
push
in
pop
jecxz
dec
cmp
int3
adc
pop
rclb
out
push
loope
mov
jmp
rorb
xchg
cmpsb
push
std
aas
fimuls
loopne
in
sbb
in
xchg
mov
icebp
cmp
adc
stos
loopne
arpl
aad
push
loop
mov
lods
rcl
xchg
push
mov
loop
shlb
mov
stos
loopne
sub
loope
pusha
or
icebp
popf
loopne
xchg
out
jl
pop
sub
dec
js
mov
out
cli
or
lret
js
iret
aad
sub
pop
test
mov
jno
lds
cwtl
icebp
dec
sti
adc
arpl
adc
jmp
cmpsl
mov
xchg
push
out
stos
jecxz
or
lret
and
clc
pop
lods
stos
hlt
out
jge
in
add
cmp
xchg
lea
mov
fsubrs
mov
mov
outsb
adc
aad
enter
jecxz
mov
ss
fidivrl
inc
mov
mov
cwtl
mov
aad
pushf
cs
cmp
jnp
aam
popf
jb
nop
call
xchg
or
inc
fbstp
inc
int
pop
mov
out
adc
push
mov
mov
fmul
inc
loope
in
inc
lods
stc
dec
add
and
inc
iret
adc
cvtps2pi
sbbb
jne
or
aas
xchg
pop
lea
jmp
mov
stos
arpl
jno
mov
daa
rorl
or
fisttpl
mov
push
aam
xchg
dec
das
jo
xchg
adc
jmp
cmp
scas
mov
repz
xor
sub
or
dec
aam
lret
xchg
sbb
xchg
es
fldcw
adc
ror
jb
cmp
and
mov
ds
cmc
cmp
mov
into
mov
add
std
loopne
int
int3
or
sub
mov
jg
dec
xchg
push
insb
or
jmp
testb
xlat
in
stc
sub
adc
add
aad
pusha
or
es
sub
inc
scas
mov
add
cmp
loopne
pop
das
fstpt
sti
dec
in
rcll
das
js
into
popf
lods
incb
push
or
or
mov
daa
and
dec
cld
inc
or
dec
sbb
or
or
fadd
push
or
or
add
shlb
les
hlt
mov
sub
orl
jmp
dec
jp
or
jo
in
or
and
fdivp
xlat
xchg
pop
mov
test
in
or
sub
ss
xchg
pop
sti
loop
fimuls
shl
cmp
dec
jmp
sub
iret
repz
push
xor
movsl
pop
mov
and
test
push
jnp
imul
or
sbb
adc
addr16
out
aad
nop
mov
outsl
addr16
clc
in
fcmovbe
jmp
in
or
dec
std
cmp
xchg
adc
nop
je
test
popa
hlt
xchg
mov
mov
xor
inc
mov
lock
and
sti
out
push
insl
aad
xchg
in
add
pop
out
mov
dec
inc
mov
das
js
movsl
jae
sub
pop
dec
inc
mov
clc
scas
stos
ds
loop
jg
pop
movl
adc
push
push
jmp
arpl
cltd
xchg
icebp
dec
inc
and
jg
ljmp
shl
ljmp
call
shrb
imul
add
stos
mov
dec
lret
xchg
push
arpl
pop
sbb
notb
xchg
scas
stos
xor
jg
fnstsw
out
inc
icebp
call
int3
add
in
in
push
xchg
lods
stos
fbld
mov
xchg
jae
loop
inc
sub
loope
stos
mov
rolb
jg
fnstsw
or
cs
arpl
add
pop
sub
fiadds
xchg
movsl
jae
cwtl
rcrb
mov
cmc
xchg
es
fisubl
loop
jg
fwait
fdivl
es
and
xchg
out
aad
dec
icebp
loop
lret
rol
sti
ficomps
adc
shrl
imul
xchg
jae
push
xchg
cmpsb
lret
or
pop
xchg
push
mov
push
push
jmp
lret
inc
push
add
jg
xchg
sti
mov
add
adc
cmpb
add
icebp
jae
add
in
jae
add
fwait
decl
cmp
loope
scas
stos
ret
push
faddl
jg
fisttpll
xlat
mov
or
xchg
cltd
rorb
cmc
xchg
jnp
jae
mov
cmc
xchg
scas
arpl
out
push
test
test
fiadds
cmc
call
xchg
sti
mov
addr16
add
test
ja
roll
mov
ljmp
movsb
xchg
in
xchg
std
xchg
lea
fsubp
cmc
cld
pushf
mov
aas
jecxz
mov
jns
and
mov
add
sub
cvtpi2ps
mov
test
incl
pusha
jne
mov
xchg
mov
mov
dec
xchg
in
fiaddl
dec
sti
cmc
stc
cld
jg
lods
mov
scas
f2xm1
cs
dec
cmp
cmp
mov
or
scas
adc
inc
mov
push
ret
cmc
add
cmp
adc
cmp
mov
mov
repnz
pop
inc
inc
sbb
fprem1
mov
inc
jnp
jns
cmp
push
jnp
push
in
mov
pop
mov
movsl
or
dec
sub
jg
pop
mov
in
push
inc
stos
cmp
negl
cmpsl
mov
arpl
in
lods
add
test
int
add
std
xchg
jnp
cld
mov
lods
fisttps
xchg
mov
stc
aam
mov
mov
mov
pop
les
cmc
repz
enter
call
xchg
jnp
cmp
mov
or
mov
aam
jg
xchg
add
jg
popf
out
or
mov
xchg
pop
xchg
pop
lods
sti
adc
push
lret
decb
add
les
add
push
shrl
pushf
or
and
adcb
or
test
xor
sbb
mov
inc
jl
mov
jl
push
mov
jl
mov
fs
js
mov
repz
pop
sbb
mov
test
jp
inc
dec
fwait
insl
mov
mov
clc
xor
aad
cmp
shlb
mov
dec
and
idiv
or
inc
mov
xchg
xor
in
scas
fistl
mov
mov
inc
adc
mov
lret
or
es
push
dec
xchg
add
jnp
dec
cmpsb
push
pop
jo
fnstsw
mov
sbb
cwtl
sbb
je
cli
lods
popw
js
pop
mov
or
jae
add
fisttpl
add
or
xchg
sub
orl
mov
stos
loop
adc
cmpsl
mov
xchg
sti
cmc
clc
mov
push
pushf
scas
ds
push
sbb
es
xbegin
stos
outsl
out
lods
sahf
inc
jl
mov
aad
clc
out
inc
cmp
roll
jle
imul
inc
imul
iret
scas
out
cmp
push
in
decb
mov
jno
sbb
xor
lsl
arpl
bound
aaa
movsl
addr16
mov
test
ja
iret
insl
mov
mov
dec
arpl
int
or
roll
cmp
in
out
push
jmp
inc
add
lods
and
incb
insl
fistpll
add
es
jns,pt
add
add
insl
fbld
push
dec
and
cld
cli
or
pop
fs
sbb
addr16
mov
jns
jle
mov
and
out
aad
add
or
dec
in
fistpl
fisttpl
sub
push
call
pop
mov
sarb
dec
and
arpl
mov
fisttpl
mov
mov
outsl
out
dec
mov
or
fimull
dec
fidivrl
pop
repz
rolb
in
scas
mov
sti
iret
mov
and
imul
xchg
js
enter
xchg
ljmp
dec
jmp
movsl
inc
ss
cli
mov
or
adc
and
ja
cmpsb
sbbb
dec
popf
add
pop
fisttpl
js
repnz
jp
aad
push
xor
push
xlat
lods
mov
loopne
imul
shrd
jmp
in
cmpb
cmp
arpl
adcb
iret
aad
push
or
sub
jg
pushf
dec
aad
and
outsl
lock
mov
or
or
out
xor
inc
mov
clc
inc
adc
decl
jnp
jg
pop
mov
rolb
sbb
cs
test
mov
js
sahf
ds
pop
rorb
or
push
xchg
pusha
dec
xchg
pop
movq
movsb
mov
xor
sahf
cmc
icebp
insl
clc
or
jg
sbb
es
xchg
lret
clc
test
inc
mov
mov
or
adc
pop
cmp
cmp
loope
out
push
cs
js
mov
dec
cmc
sbb
adc
adc
adc
jnp
testb
arpl
add
aad
jg
ljmp
repnz
xor
xchg
repnz
movsb
push
fcomps
or
gs
fyl2xp1
addr16
mov
or
aad
add
dec
inc
mov
jns
jae
imul
xor
jp
push
movsb
lret
pop
or
cli
cltd
ljmp
mov
out
mov
ljmp
jecxz
call
sbb
jecxz
xor
xor
sti
sbb
mov
lret
dec
and
idiv
or
cwtl
mov
sub
lea
hlt
xchg
imul
out
pop
add
jns
sub
inc
mov
fsincos
fmull
fisttpll
jmp
or
mul
and
xchg
lock
push
ja
sbb
int
mov
mov
ja
dec
ret
clc
push
dec
adc
out
dec
out
xchg
jae
push
in
into
decb
pop
fs
fcompl
inc
in
jae
lret
jnp
add
sti
aad
inc
and
jno
sbb
loopne
rclb
mov
xchg
int3
ja
loope
das
push
xor
out
adc
xor
mov
leave
and
outsl
sub
out
or
aas
out
rcrl
pop
and
push
jmp
jo
lods
loope
rcl
inc
or
repnz
jmp
iret
ret
fisttps
cli
push
data16
cmp
or
jae
inc
push
push
mov
movsb
dec
lahf
add
fdivrl
iret
push
and
arpl
adc
cs
inc
rol
sub
sub
in
mov
test
push
or
pop
andb
and
pop
or
daa
xchg
mov
daa
rol
pop
jns
sub
inc
or
add
enter
jo
lahf
or
inc
cmp
add
out
das
fbld
sti
cmp
inc
cmp
xchg
or
fsubrl
adc
in
add
insb
leave
fnsave
ret
dec
mov
or
rorl
adc
xchg
cmp
and
mov
aas
or
lds
push
out
mov
int3
insb
sti
cmpsl
mov
xchg
mov
lods
inc
leave
mov
or
dec
into
outsl
cmpsl
in
and
test
out
addr16
scas
add
xlat
je
popa
jno
sbb
cmc
add
repz
mov
mov
push
arpl
repnz
pop
leave
push
loope
push
push
jg
mov
push
push
decl
adc
xchg
and
pop
aad
xchg
arpl
repz
adc
mov
sub
jl
outsb
and
das
flds
xchg
insb
inc
add
mov
daa
shr
repz
addr16
and
loop
bound
loop
mov
add
jg
xchg
les
orl
pushf
aas
mov
lret
stos
mov
lea
ret
jg
xor
mov
arpl
push
push
jge
cmc
add
jp
push
scas
push
mov
les
icebp
jle
xchg
iret
adc
ds
mov
sub
lret
jo
dec
jno
fmuls
jo
scas
jne
mov
push
mov
insl
scas
xchg
mov
ficoms
scas
jmp
mov
dec
mov
mov
inc
stc
push
stos
or
xlat
scas
fmuls
in
in
pop
mov
out
imul
dec
ljmp
or
mov
mov
mov
mov
push
push
mov
insl
push
hlt
cmpsl
daa
aas
inc
and
addr16
lahf
dec
add
xor
sub
and
mov
divb
jge
mov
aad
adc
dec
aam
test
mov
cwtl
fwait
test
sbb
cmp
imul
dec
jno
fadd
sti
cwtl
pusha
data16
or
cwtl
mov
mov
sub
and
sbb
and
fs
mov
push
setnp
stos
into
push
ds
rclb
sub
inc
ljmp
cmpsl
pop
call
dec
push
loopne
subb
roll
mov
ret
xchg
in
mov
fldcw
cwtl
jmp
jge
aaa
in
rcrl
xor
cmp
aad
pop
movsl
dec
aam
cmp
xchg
mov
adc
sbb
cwtl
mov
jae
xlat
push
xor
mov
mov
icebp
jmp
cmpsl
outsl
leave
repz
mov
add
or
arpl
add
fists
xlat
psubusb
out
xor
or
fimull
mov
jp
ljmp
daa
rolb
mov
jmp
cld
repnz
mov
dec
in
xor
aad
aad
loopne
jp
lds
ljmp
fcoml
push
pop
add
int
fidivs
push
sbb
repnz
fcmovnbe
mov
push
inc
inc
or
fdivrs
jmp
insb
cmp
pop
test
adc
or
repnz
adc
rclb
lock
scas
mov
loope
dec
or
outsl
pop
lods
mov
push
dec
xchg
dec
popa
or
jmp
dec
aad
stos
dec
lahf
mov
mov
test
or
push
sub
out
add
mov
inc
lea
out
rcll
dec
in
or
inc
std
pop
add
mov
std
mov
add
jb
repz
fildll
loope
out
cmc
stc
gs
mov
inc
int
shr
sub
out
fucomp
icebp
xchg
add
or
mov
imul
mov
daa
and
dec
pop
cld
es
or
jle
out
jg
out
in
jb
in
sbb
xchg
add
cmp
mov
dec
add
fildl
xor
pop
inc
std
rcr
vucomisd
mov
andb
jae
jmp
in
or
jle
push
mov
fmuls
or
xchg
imul
adc
push
adc
lea
or
out
aas
ljmp
xchg
fimull
cmpsl
nop
mov
rorl
cltd
and
jecxz
je
shr
test
mov
cmc
add
lods
mov
jns
loope
mov
pmaxub
fisttps
or
repnz
jae
out
mov
sti
fldenv
mov
add
inc
push
aad
xchg
mov
scas
mul
cmp
or
mov
out
cmp
test
scas
stos
fdivr
daa
fnsave
jb
push
adc
test
fiadds
loopne
fisttpll
lret
out
popf
test
loope
loop
stos
jnp
loop
mov
push
sbb
addr16
jno
sub
insl
xor
mov
jg
imul
mov
mov
adc
cmp
lret
or
adc
xchg
je
mov
cmp
out
xchg
lret
test
cmp
mov
pushf
cmp
push
insb
push
push
sti
pushw
in
scas
or
cvtps2pi
test
aad
test
fsts
dec
cmc
repnz
out
fsubs
arpl
or
sub
mov
subb
cmc
cmp
fsts
cmp
js
cmp
mov
xchg
std
cmp
sbb
pushl
aam
xchg
out
mov
popf
cld
sbb
in
int3
push
rol
or
cmp
push
aam
pop
push
dec
xchg
or
sarb
fucomp
mov
loope
lcall
mov
jecxz
rorb
scas
push
lds
je
stos
xlat
aad
out
mov
das
xor
in
mov
cmc
in
xor
and
shll
cmp
out
fisubl
jb
fidivrl
sahf
mov
cmpsb
clc
adc
pop
push
pmaddwd
shrb
or
test
rcrb
and
xchg
mov
sbb
fnstcw
lret
pop
ja
fimuls
sbb
xchg
aad
adc
dec
jge
rolb
sarb
sub
push
push
clc
inc
pop
cmp
mov
mov
aas
pop
push
loopne
push
dec
icebp
inc
cmp
dec
or
push
dec
outsl
out
dec
mov
mov
cmp
inc
push
lret
hlt
dec
and
jmp
les
pushf
add
dec
sub
add
addl
jg
mov
test
nop
cmp
mov
add
dec
adc
jp
fildl
stos
or
aad
adc
xlat
gs
xchg
imul
dec
mov
cmp
push
xchg
pop
jg
ficoml
push
es
xchg
adc
enter
pop
xchg
cwtl
pop
repz
pusha
adc
xchg
xor
and
cmp
sub
xor
push
out
aam
fwait
dec
xchg
xor
dec
inc
loop
ljmp
pop
sarl
pop
inc
int3
pop
pop
shl
decl
add
stc
arpl
xchg
test
add
lret
mov
int
jp
out
testl
xlat
and
adc
adc
jno
call
and
out
pop
scas
jge
sub
jge
xchg
push
outsb
aad
push
ss
leave
test
mov
js
push
mov
or
arpl
dec
stc
test
leave
inc
popf
imul
jg
lock
loop
jecxz
or
or
mov
pushl
fisubrs
jno
jmp
add
mov
outsl
clc
jecxz
xor
xchg
lret
xor
ja
scas
loopne
add
and
cltd
lahf
ljmp
mov
loope
stos
out
xchg
hlt
mov
jne
jl
aad
lret
into
dec
and
pop
js
int
mov
ja
into
int3
sbbl
fidivrs
or
and
cmp
fwait
adc
dec
popf
repnz
push
nop
rorl
push
dec
aad
or
repz
add
inc
shll
aad
mov
mov
ja
test
insb
pop
mov
fwait
xor
dec
test
mov
out
das
sub
dec
out
jle
cmp
jbe
mov
hlt
stos
dec
in
adc
in
sbb
inc
fsts
push
xchg
pop
int3
lea
or
out
pop
aad
or
and
test
nop
enter
sbb
in
push
inc
cmp
stos
in
jae
mov
mov
je
scas
push
dec
sbb
jg
xchg
ja
jno
and
inc
js
inc
fldenv
pop
mov
jmp
cli
mov
fstl
pop
loopne
clc
sub
pushf
xor
dec
inc
fstpl
push
scas
popa
lcall
cmc
xchg
stos
jmp
movsl
mov
lods
bound
jecxz
cmc
fldcw
ja
mov
mov
aad
sub
jns
cld
int
pop
fucomp
mov
fcompl
cmp
clc
and
mov
push
pop
inc
mov
jnp
jmp
sub
cmp
adc
mov
std
into
mov
lock
and
inc
iret
inc
aad
in
mov
pop
popa
fsubrp
vprotw
pop
jmp
scas
mov
data16
aad
jnp
mov
inc
sub
jg
js
mov
testl
mov
cmp
xor
xor
inc
loopne
movsl
inc
mov
rolb
adc
add
loope
ds
pop
int3
sub
or
and
loopne
cmp
lds
mov
cmc
popa
jae
repnz
std
pop
ret
imul
testl
inc
imul
dec
mov
cmovae
sub
aad
pusha
movsl
push
mov
cmpsb
lods
mov
or
int
inc
pop
mov
or
je
dec
lea
addb
js
pop
or
jecxz
and
loope
lret
psllq
xchg
adc
mov
pop
ljmp
push
cmp
mov
shrd
daa
addl
push
or
out
call
push
cmp
int
aad
add
or
inc
fildll
mov
out
jmp
div
xor
stc
or
movl
push
xchg
leave
aam
jmp
or
push
mov
jnp
mov
sarl
pushf
dec
adc
sub
cmp
lods
jne
jno
clc
fwait
jle
jp
outsb
nop
mov
call
shrl
lods
shr
sbb
stos
xchg
cmc
fcmovbe
mov
or
and
pop
das
cmpsb
cmp
aas
ljmp
add
aad
pop
into
data16
jns
sub
sti
mov
testb
xor
dec
and
add
xchg
aad
stos
pop
sbb
jmp
in
inc
sub
fld
stos
fldenv
cmpsl
or
pop
in
movsb
lret
or
sbb
repz
jge
or
mul
mov
push
aad
jmp
lods
adc
or
aad
dec
pop
pop
sub
arpl
mov
addl
pop
stos
or
jmp
xor
or
lods
push
test
dec
das
sti
ja
mov
or
or
sub
mov
cmc
sub
mov
mov
jmp
cmc
ja
cmp
add
mov
cmp
pextrw
mov
xchg
push
fwait
mov
xchg
jl
sub
jbe
pop
jmp
stos
ficompl
push
cmp
jg
sbb
sub
jg
jbe
imul
fs
pop
and
or
push
dec
aad
adc
adc
add
sbb
cwtl
inc
adc
or
sub
lock
sarl
stc
xchg
cmc
or
xchg
push
div
mov
mov
jl
pop
jge
shrl
outsl
mov
cmc
or
add
outsl
dec
fsubs
mov
icebp
or
pop
pop
das
sti
dec
push
fdivrl
pop
add
into
and
sub
sti
int
ds
jae
and
std
lret
jge
mov
dec
mov
mov
sarb
jg
mov
xchg
arpl
dec
jmp
or
mov
sbb
pusha
stos
out
or
into
std
lcall
or
add
pop
out
es
loope
cmpsl
mov
xor
jge
sub
cwtl
or
lret
aam
pop
mov
jne
inc
popf
xor
mov
mov
clc
sti
dec
lods
movsl
xor
loope
mov
loop
outsl
inc
inc
jne
sahf
ljmp
pop
leave
add
hlt
fs
or
mov
movsl
out
lret
sbb
cld
out
add
or
mov
push
addb
or
dec
jne
push
imul
jmp
xchg
fdivr
sahf
cltd
ret
xchg
fldenv
mov
and
cltd
or
sti
cmp
xor
push
es
pop
aad
movsb
push
vmread
or
insb
jmp
mov
cmp
adc
mov
nop
inc
adc
push
mov
icebp
add
cltd
add
fxch
fbstp
repz
scas
push
mov
test
lods
mov
movsb
aas
faddp
cmc
sub
lret
mov
adc
adc
lret
dec
fbld
popa
add
cmc
popf
movaps
sarb
jmp
in
test
pop
enter
add
aaa
imul
sub
sbb
and
add
sub
mov
dec
out
sub
popa
sti
repnz
or
push
popf
sti
int3
cmp
aas
jns
xchg
add
push
push
push
adc
add
or
lret
inc
outsl
les
jb
add
and
lret
xchg
fidivrs
sbb
out
fisubs
cmp
mov
repz
lcall
testl
adc
push
insl
sbb
int
ret
sbb
rorb
lods
push
aad
shlb
leave
mov
lods
mov
test
js
mov
push
fcomi
cmpsb
pop
addb
out
adc
mov
out
or
mov
xlat
mov
sti
lods
lret
imul
fs
push
repnz
jns
or
out
sub
outsl
sbb
adc
mov
inc
cmove
add
pop
push
adc
sti
rorb
das
push
mov
mov
cmp
fsubp
neg
cmp
cs
push
or
in
fwait
or
mov
xor
lea
cmp
or
pop
js
jo
pop
cwtl
incb
mov
lods
test
std
in
and
fcmovnb
xchg
test
mov
incl
sti
in
rolb
push
test
aad
xchg
sarl
mov
in
stc
cmc
les
aad
ror
lods
inc
scas
push
jnp
jb
sti
lock
jp
sub
lock
loopne
jecxz
sub
inc
fisttps
hlt
jne
cld
pop
cld
sti
sbb
push
mov
mov
das
aad
mov
xor
fsubrl
mov
sub
mov
in
mov
fnstsw
lods
mov
lret
add
out
mov
and
jmp
sbb
jmp
out
rcrb
test
mov
push
cmc
cmp
dec
mov
mov
xchg
sbb
sbb
in
jmp
jmp
push
mov
testb
add
aad
je
lret
cmp
out
push
decl
out
in
popf
push
out
aad
aad
add
push
loope
scas
mov
ss
out
in
push
mov
mov
push
out
arpl
insb
call
dec
dec
jns
lret
negb
mov
cmp
and
mov
sub
out
jp
and
cld
adc
push
sub
movsl
dec
mov
or
add
incl
ss
mov
adc
sub
adc
mov
in
shl
subl
jl
test
pop
mov
mov
cli
cmp
das
in
jo
rcll
mov
mov
mov
mov
or
test
mov
out
stos
xchg
ljmp
out
pop
push
lods
shrl
push
or
and
mov
int
inc
std
aas
push
stos
add
and
xor
and
mov
push
scas
or
add
cmp
inc
cwtl
aas
mov
inc
shll
daa
shufps
lods
jns
nop
fwait
leave
cmpb
push
push
mov
into
rorl
test
test
fwait
xlat
mov
mov
test
es
fdivrs
fsubs
jnp
xchg
and
push
cmp
in
sbb
ja
loop
mov
fsub
cmp
jnp
test
dec
pop
stc
stos
or
in
jle
in
in
jle
xbegin
in
mov
scas
in
or
int3
sti
dec
aam
loopne
pop
lret
or
xchg
mov
jl
pop
jge
aad
push
cmpl
mov
shr
insb
and
jnp
ljmp
out
jnp
cmp
ficomps
or
in
sub
dec
and
or
lds
stos
call
mov
lret
mov
mov
inc
lahf
dec
scas
inc
mov
repnz
add
lods
pop
mov
and
js
push
dec
push
pop
int3
cwtl
mov
pop
sti
leave
or
stos
aam
fdivrs
fadd
push
pop
adc
nop
xchg
fmull
mov
cmpsl
or
test
popa
jnp
imul
out
and
jnp
pop
inc
movsl
lods
call
repnz
jb
repz
add
add
rcll
les
sbb
mov
sub
js
cmp
sahf
rcr
lods
in
or
gs
inc
sahf
ja
push
mov
push
enter
lock
andb
push
jnp
or
inc
stos
mov
daa
dec
popf
cmp
arpl
stos
mov
cmpsb
xor
mov
cmp
dec
pop
pop
mov
ljmp
test
cmp
loop
sbb
mov
jb
jmp
jp
lahf
loopne
xchg
into
int
add
or
and
lock
pop
pop
inc
loop
pop
decb
sub
xor
sti
movsw
out
pmullw
pushf
cmpsb
pop
add
and
dec
cmc
fistl
xchg
jno
add
cmp
jecxz
out
fcoml
adc
aad
in
sahf
inc
xor
cltd
call
fsubp
clc
test
lock
int3
addr16
pop
fiadds
jg
pop
pop
dec
int
nop
mov
jp
jmp
mov
mov
xor
data16
and
dec
adc
mov
fcoml
or
and
fdivl
push
out
mov
inc
and
mov
jne
imul
jne
add
out
sbbl
push
ljmp
jne
and
arpl
xorl
mov
call
popf
pusha
loope
push
jbe
out
subl
jns
out
mov
adc
stos
mov
loope
int
xchg
mov
mov
push
in
stos
fldcw
movntq
out
dec
adc
or
shrl
outsb
cmc
repnz
cmp
pop
mov
push
or
cmpsb
in
icebp
pop
push
push
out
xchg
sub
lahf
jmp
sar
popa
adc
sahf
loop
dec
xor
xor
pop
aad
mov
daa
and
pop
dec
test
and
cmp
xchg
xlat
out
sub
daa
mov
mov
out
test
jbe
or
xchg
or
ljmp
es
pop
xchg
sysenter
pop
lret
fisubs
xchg
sbbl
push
int3
xor
mov
sbb
rolb
loope
addr16
dec
pop
popa
imul
cmpsl
test
sbb
cmp
rcl
and
push
enter
cli
shlb
sub
xor
or
inc
shr
mov
out
or
adc
inc
pmaddwd
jo
gs
cmp
cmp
mov
or
cmp
in
bound
pushf
or
fmul
mov
or
ret
ret
ror
enter
push
rcll
push
test
or
int3
add
xchg
scas
mov
int3
sti
lahf
scas
add
popf
mov
icebp
imul
idiv
lret
push
insb
in
jne
addl
inc
jmp
sarb
xchg
lret
jbe
lea
ljmp
jp
xchg
jecxz
push
nop
out
lea
bound
adc
faddl
pop
repz
lods
xor
outsl
sbb
scas
lock
jg
mov
pop
lea
shrb
sub
lds
sbb
in
push
dec
mov
pop
xchg
adc
mov
cmp
lock
or
sub
push
sti
dec
jecxz
shl
mov
xchg
or
iret
sahf
mov
ret
insl
jge
hlt
xchg
std
push
cmp
inc
gs
push
pop
push
dec
push
orl
test
sub
neg
sbb
fmull
fucomip
loopne
loope
loop
jecxz
in
in
aas
out
out
call
sub
in
or
out
jmp
div
xor
hlt
or
cli
jmp
fldl
testb
or
ud2
nop
cmp
or
dec
or
jnp
lods
mov
xchg
cli
clc
bound
rclb
push
dec
mov
xchg
test
dec
cmp
xor
mov
mov
push
outsb
inc
cmc
fld
inc
add
pop
cmp
xchg
jmp
fistps
jns
daa
cmp
mov
je
stos
mov
xor
push
mov
jbe
xchg
mov
ret
lea
out
data16
out
push
imul
push
ret
cli
lcall
clc
push
mov
jg
rclb
fwait
dec
or
aad
add
movl
mov
inc
lods
mov
int3
mov
das
cmpsl
lahf
lret
pushf
cltd
inc
mov
xchg
into
scas
jnp
vsqrtps
or
lods
in
scas
scas
mov
mov
scas
cld
das
fnstsw
icebp
push
xor
stos
jp
or
pop
lret
push
cwtl
div
scas
cld
sti
jno
cli
add
insb
out
cmpb
fstpt
push
lahf
or
pop
leave
cmp
addb
hlt
jg
stc
or
or
pop
cli
or
scas
or
cmpsl
stos
mov
prefetch
adc
or
mulb
scas
jecxz
cld
stos
xchg
sahf
lods
cld
xchg
jbe
in
mov
std
enter
or
out
xorl
add
and
push
and
ss
push
jle
lret
dec
dec
dec
add
push
outsl
aaa
out
lret
fldl
or
cs
xor
imul
fmull
and
fimuls
lret
aas
aam
loop
stos
std
push
loope
mov
pop
cmp
mov
cld
mov
addr16
sub
lret
out
mov
call
jle
cwtl
daa
ljmp
lret
in
mov
out
mov
mov
sub
dec
lret
lock
mov
jmp
notb
test
cmp
sbb
jle
inc
out
lret
out
in
in
fsubrp
ja
ret
ljmp
out
out
in
in
jecxz
loop
insl
mov
ja
ret
fimuls
fucomp
jle
inc
fcmovne
fnstcw
jne
aad
mov
add
or
lret
add
sahf
cli
or
adc
into
xchg
scas
fsubrp
shlb
jge
mov
fisttpll
cmp
dec
dec
mov
inc
pop
setne
mov
or
xor
inc
mov
in
jle
lret
icebp
in
lock
ja
ret
in
or
in
jle
inc
ljmp
ja
ret
in
in
jle
inc
loop
loope
loopne
fbstp
ret
fisttpll
fsubr
jle
inc
fimull
sub
mov
into
bound
inc
pop
xchg
cli
in
cmpsl
mov
shrb
mov
subb
cmp
out
add
dec
and
scas
sub
cmp
testb
jnp
aam
cmpsb
mov
dec
fdivs
sysenter
push
loopne
dec
xchg
inc
push
lods
loope
mov
mov
dec
fisttps
or
jns
pop
xchg
jmp
arpl
stc
std
stos
add
or
enter
sbb
or
pop
test
fidivrl
mov
aad
xor
or
cltd
test
lock
xchg
adcl
cwtl
pop
test
sar
invd
add
loop
adc
add
fwait
mov
jbe
jbe
ret
sbb
lock
aad
push
push
outsb
popa
xchg
pop
jp
stc
loop
adc
mov
mov
aad
xor
jmp
jnp
mov
dec
aad
scas
daa
clc
and
imul
cmpsb
rclb
mov
inc
push
mov
jmp
sub
xlat
leave
and
mov
mov
out
jbe
test
sbb
dec
dec
out
mov
test
in
rcl
jmp
rol
dec
mov
idivl
mov
inc
in
daa
pop
add
jnp
testb
jge
popf
mov
jle
push
shll
pop
mov
outsl
mov
inc
and
add
aad
mov
cmpl
add
int3
inc
and
mov
lods
test
mov
mov
lahf
in
repz
mov
pop
cmpsl
push
out
lods
adc
vaesenclast
pop
inc
enter
je
push
lds
jmp
fldl
xchg
outsl
pusha
push
aad
ror
add
pop
inc
lret
jmp
jno
fiaddl
mov
testb
add
jno
pop
jp
in
mov
test
sti
jnp
lret
jge
pusha
pop
and
nop
das
cmc
in
mov
adc
or
in
jecxz
mov
jmp
dec
jp
insb
cmpsb
or
bound
aam
xchg
mov
mov
ss
inc
in
jg
mov
orb
in
lods
fidivs
mov
mov
mov
mov
dec
scas
xor
in
pop
jecxz
and
mov
jne
cmp
jecxz
jno
push
xor
or
sub
inc
push
out
fwait
movsb
and
jg
push
inc
push
inc
pop
inc
sub
or
inc
adc
dec
stc
sarl
push
inc
clc
les
cmc
or
jae
fsubl
jmp
nop
mov
mov
jle
xchg
and
jns
sub
push
mov
mov
cmp
mov
fcomp
sarl
inc
aad
int
stc
add
sub
imul
mov
dec
aad
sbb
mov
push
or
rcrl
lock
pop
mov
mov
clc
and
add
push
rcll
xor
adc
js
clc
jg
out
mov
insl
out
mov
mov
test
inc
imul
popa
test
cmp
xlat
adc
fisttpl
cmp
xlat
adc
dec
adc
push
minps
jnp
mov
lret
clc
adc
sbb
sbbb
popf
shr
xor
decb
aas
cmp
scas
mov
mov
lea
xchg
mov
shrb
mov
inc
shl
jmp
xchg
iret
ds
adc
lcall
push
mov
sub
jbe
dec
or
into
call
pop
cmp
fidivrs
jecxz
adc
jne
cmp
mov
mov
out
jmp
aad
aas
dec
fisubrs
mov
mov
movb
loope
or
cmp
push
cmp
jns
in
into
movntps
pusha
inc
xchg
pop
data16
mov
sahf
pop
mov
xchg
sahf
push
jecxz
pop
std
sub
imul
jl
jae
jnp
sar
mov
sub
cmp
add
rolb
das
inc
daa
stc
jnp
mov
cli
sub
mov
dec
jo
std
stos
xchg
mov
or
shlb
cmp
inc
add
xchg
mov
bound
cmp
push
jae
push
fwait
add
mov
sub
push
cmp
ret
pop
dec
or
or
inc
mov
fcoms
iret
mov
sub
inc
mov
cmp
shrl
mov
adc
xor
cmpl
pop
dec
dec
jno
dec
and
inc
call
test
repz
pushf
out
dec
jp
das
adc
into
out
sub
ret
xchg
insb
adc
cmp
pop
dec
dec
aad
push
dec
outsl
xor
sub
addr16
lea
ljmp
dec
daa
out
or
sub
mov
repz
mov
cmp
int3
rcr
inc
inc
sbb
mov
sti
xor
shll
sarl
dec
lahf
cmc
icebp
std
or
adc
repnz
mov
add
and
lahf
fnstcw
shll
jp
mov
in
jae
or
adc
addb
cmp
insl
test
imul
pmaddwd
xchg
aad
xor
cmpsl
daa
lret
sti
filds
dec
scas
dec
out
loop
sbb
sub
fcos
loope
push
fs
insb
jnp
jle
neg
xchg
or
dec
pop
in
sahf
ds
fs
adc
cmpsl
cld
xchg
out
out
test
dec
pop
xchg
sti
bndldx
cmc
and
mov
test
stos
push
gs
mov
pushf
pop
loopne
mov
inc
pop
sbb
call
fists
push
call
mov
outsb
in
push
lods
xchg
loop
enter
xlat
loopw
call
je
iret
nop
dec
dec
mov
mov
dec
in
fisttps
gs
fcoms
sub
pop
lret
fisubrs
fsubr
fistl
mov
fldcw
pop
out
in
mov
mov
aam
or
hlt
pop
fdivrl
imul
mov
xchg
hlt
aad
fbstp
add
cmp
loopne
loopnew
xlat
inc
insb
loopne
mov
repz
aad
cmpsl
imul
loop
mov
aad
mov
and
cltd
test
add
rorb
filds
cmp
aad
dec
lds
pop
xor
mov
fdivl
ffree
fcmovnbe
fiaddl
fldcw
movlps
jnp
mov
popa
push
xchg
add
xor
cmp
push
fists
sub
mov
push
jl
fsubs
jp
jp
clc
lods
or
test
pop
cmp
sub
fisttps
sub
outsl
push
fwait
xchg
fisubrl
cmpsl
xchg
into
cmc
xchg
push
jg
loope
cld
jo
les
xchg
std
jnp
in
add
or
add
enter
sbb
ds
loop
add
enter
inc
add
sbb
paddsw
in
cld
cmp
leave
cmp
or
jo
loop
sbb
shrb
add
movsb
jge
xchg
aas
or
push
sbb
or
mov
and
fstp
mov
dec
dec
xchg
rol
sbb
aad
dec
jg
dec
in
out
scas
mull
aaa
inc
add
and
inc
shr
outsl
dec
sub
iret
clc
cmc
push
cmp
add
jl
arpl
jge
pushf
mov
rcll
loope
sub
and
mov
push
xor
pop
push
dec
std
cmpl
repnz
std
mov
cmp
mov
lret
arpl
cmp
jge
adc
xor
dec
rorl
fs
mov
fsts
push
fxch
insl
xchg
outsl
std
sub
fidivl
and
sub
sbb
addb
or
fxch
pop
jns
fwait
push
ds
movsl
dec
sub
cmp
bound
repnz
push
sub
pop
sti
cmp
cmp
push
scas
iret
cmp
cmpsl
gs
inc
aad
loop
fucom
or
add
pop
mov
adc
xchg
add
movsl
add
or
call
mov
aas
test
inc
inc
inc
cmp
push
js
mov
icebp
jns
xchg
test
push
push
inc
sbb
sbb
fldt
jo
cld
or
inc
push
lret
sbb
shr
andl
mov
xchg
mov
push
icebp
in
scas
xlat
lret
shll
lcall
push
outsb
inc
pusha
leave
lcall
and
push
les
fadds
addr16
jns,pn
rorb
mov
or
repnz
lret
cs
dec
jo
rolb
xchg
dec
imul
bound
dec
in
add
jae
mov
repnz
xor
repz
mov
mov
pop
inc
or
into
jl
pop
pop
mov
adc
out
out
and
and
mov
mov
out
fucomi
sub
les
out
or
iret
adc
mov
rclb
jb
aad
lret
andb
scas
in
out
mov
imul
mov
cmc
add
imul
dec
jno
shr
out
adc
sti
cmc
add
ret
push
xchg
js
loopne
fdivrl
mov
mov
js
sub
push
xchg
or
divl
lods
dec
popa
cmpsl
jecxz
imul
xor
sarb
dec
push
sub
out
pop
sub
sbb
fcomip
or
leave
xchg
mov
mulb
dec
mov
in
outsl
mov
shrl
int3
push
repz
jno
add
fs
loope
mov
or
cli
daa
xor
mov
popf
cmpsl
or
call
aas
loope
sub
std
jge
aad
repnz
cs
scas
jp
mov
ljmp
mov
push
jg
aam
scas
push
sub
loope
cmpsl
xor
pushw
in
mov
loopne
rorl
pop
aam
scas
popf
outsl
jbe
dec
mov
loopne
scas
fistpll
scas
rcll
stos
pusha
imul
xchg
in
fwait
xlat
dec
mov
popf
mov
and
aam
scas
push
jl
lahf
les
shll
fists
sbb
loope
mov
or
xlat
cmp
in
jecxz
mov
mov
jo
lods
or
jge
push
jae
loopne
call
cmpsl
popa
push
icebp
mov
negb
call
arpl
mov
cmpl
outsl
pop
mov
shr
bnd
xchg
out
push
enter
int
sub
pop
aad
push
jb
cmpsb
jge
repnz
jge
sub
shrb
fisttpl
cmpsl
scas
fwait
lahf
dec
sbb
push
out
mov
jge
push
pop
dec
cs
add
pmaxub
add
adc
push
ljmp
xor
aas
pop
test
mov
nop
mov
cli
ljmp
jg
fisttpl
scas
pop
aaa
lret
jge
div
test
pop
clc
jmp
dec
addr16
pop
das
out
mov
mov
out
mov
dec
add
ljmp
and
pop
mov
jmp
pop
icebp
pop
push
int
add
or
cmpsb
lret
or
jge
cmpsb
ljmp
lods
repz
cmpsb
jge
frstor
mov
pop
cltd
and
pusha
or
jge
pushf
test
addl
pop
arpl
dec
mov
sbbl
outsl
addr16
inc
mov
mov
jge
push
xchg
dec
sub
xchg
daa
add
mov
mov
gs
les
aad
les
rolb
ljmp
mov
add
jae
popf
scas
test
into
mov
cld
jge
jg
lahf
test
idivl
mov
imul
fistpll
cmc
jle
in
out
mov
dec
push
roll
sbb
cmc
test
xchg
mov
test
fstpl
mov
xchg
inc
in
mov
ds
aas
movsb
ret
pop
dec
negb
adc
scas
sbb
loop
pop
ret
cmp
jge
movsl
ret
repz
fsubs
adc
pop
or
aam
cmpsb
jge
pop
and
aam
jg
xchg
aad
sub
loope
xor
icebp
out
push
or
push
mov
rcll
jle
add
mov
dec
lret
es
daa
sub
pop
fdivl
loop
rcrb
int
add
mov
pop
add
jmp
loope
or
push
decb
sahf
inc
dec
ss
sub
ss
daa
jge
ret
jns
lods
movb
mov
shr
cmc
mull
fisubrs
jo
jge
jg
sarl
pop
mov
cltd
cs
and
shl
mov
out
inc
loope
in
daa
cld
dec
sbb
bound
aad
adc
ljmp
bound
jle
insl
in
cmp
and
fdivp
aas
adc
hlt
test
inc
mov
ret
jnp
or
push
ljmp
mov
jge
sbb
jle
mov
jge
fwait
dec
pop
cmp
shlb
imul
xchg
testl
orl
fwait
push
dec
pop
xor
outsl
and
adc
loope
or
test
or
loopne
sub
movl
push
js
adc
int
add
and
pop
sub
or
jge
pop
add
and
test
push
mov
pop
repz
cld
or
lds
fstpl
pop
leave
jbe
or
push
cmc
dec
notb
ficompl
jge
icebp
roll
les
pushf
jne
cmp
jge
out
test
fstl
cmp
jge
jg
xchg
loopne
mov
aam
adc
or
in
out
jne
pop
rolb
xchg
loop
ljmp
lea
dec
arpl
dec
ror
push
xchg
adc
repnz
sub
aad
jmp
outsb
cmpl
sub
notb
test
aad
out
push
push
insl
aad
cmp
shl
jne
nop
xor
xchg
js
or
sbb
cmpsb
sub
adc
aam
mov
jns
push
or
or
dec
cmpsl
out
lea
aad
leave
mov
loopne
rolb
frstor
js
fwait
dec
jle
xchg
jle
jge
jmp
mov
or
fldl
cmp
sub
in
sub
jno
ljmp
je
dec
stos
sub
jg
loopne
scas
xchg
push
mov
inc
notb
test
push
mov
push
pmovmskb
cs
dec
fpatan
dec
aas
or
jge
imul
lret
sbb
clc
enter
add
sub
cmpsb
fdivs
push
mov
call
out
ljmp
daa
adc
insl
jecxz
cmp
xchg
dec
lahf
xor
jb
and
fnstsw
sub
lods
ds
pusha
mov
aam
scas
sbb
lret
jb
cltd
pop
adc
xchg
pop
imul
and
popa
inc
imul
rorb
sbb
pop
loope
cmp
imul
fcmovnb
into
jle
push
xchg
ljmp
push
mov
aad
popa
and
or
lret
jmp
std
and
aad
inc
push
add
jmp
loope
dec
aad
stc
out
insl
sti
jge
jmp
loope
sbbl
mull
dec
push
js
repz
negb
stc
jp
fimull
push
dec
xchg
setle
sti
lock
push
push
push
arpl
ljmp
or
sbbl
rcll
in
lds
jge
aad
les
loopne
test
filds
fsubl
dec
bound
jg
add
fdivr
pusha
jg
daa
aad
push
iret
lahf
mov
jg
push
mov
mov
data16
jne
daa
pusha
sub
into
add
mov
loopne
repz
mov
mov
test
push
iret
cmc
or
cs
js
loope
fdivs
ljmp
mov
sub
notb
or
add
xchg
icebp
cs
mov
mov
cli
jae
mov
data16
dec
jne
aad
es
mov
jb
and
repnz
insl
hlt
jge
jmp
mov
pop
lods
or
jge
mov
xor
or
and
shrb
mov
ljmp
xlat
fsubrp
lods
sub
inc
jmp
in
or
fucom
mov
add
dec
mov
add
add
fdivrl
scas
mov
insl
fnstcw
jmp
mov
dec
addr16
sbb
les
fidivs
push
aad
shr
mov
push
push
dec
dec
pop
lods
xor
in
dec
jle
sub
scas
jge
adc
sahf
pop
mov
xchg
in
jne
adc
out
icebp
xchg
add
lods
or
aaa
add
dec
call
cmpsl
jae
mov
jle
insl
jge
jmp
mov
mov
aaa
test
and
scas
sub
jg
test
frstor
into
mov
cmc
pop
cmc
scas
cltd
sahf
inc
push
es
push
add
lods
xchg
push
jne
cmpsl
aad
pop
push
mov
out
ljmp
or
lahf
jns
sbb
jg
loopne
scas
xchg
imul
stos
jge
push
insb
jae
movsb
fmuls
sbb
jg
ffreep
add
bound
dec
mov
aad
into
lret
lahf
push
jne
rorl
mov
push
stos
jge
gs
into
loope
in
jne
aas
ljmp
movsl
bnd
xchg
jae
and
jge
lcall
dec
cmc
or
mov
jne
sti
push
out
test
cmp
int
stos
fstpt
cmp
jge
push
scas
push
jne
cwtl
mov
sub
jg
loopne
std
pop
jae
sub
iret
sti
shll
aam
mov
addr16
sub
mulb
test
or
push
cmc
dec
negb
mov
sbb
aad
in
cmc
out
insl
pop
jne
ljmp
fucomp
mov
js
aad
pop
mov
scas
jge
aad
sahf
fwait
xchg
lea
ja
aam
cmp
jne
pop
les
test
fstl
js
adc
int3
hlt
sti
fildll
cmp
xlat
sbb
jmp
push
push
fcmove
fcmovnu
movsl
and
in
loop
lock
aas
fs
aad
mov
jae
into
push
sbbl
popa
sbb
mov
gs
push
fisttpll
aad
xchg
push
mov
or
sbb
jg
pop
ret
daa
scas
sub
ljmp
dec
push
pop
insl
add
mov
clc
movq
gs
test
jle
lea
loop
jnp
ljmp
pop
add
jns
ljmp
jl
repz
ds
mov
mov
outsb
test
rcll
jo
pop
les
pushf
jne
cmp
das
lcall
mov
in
cli
sbbl
dec
les
ljmp
jb
popf
imul
jne
pop
aas
out
imul
sbb
xor
fdivs
jecxz
loop
test
push
or
jge
sbb
mov
jp
int3
call
pop
lahf
pop
lahf
icebp
icebp
dec
xlat
jb
cltd
jge
xlat
sbb
aam
jge
sbb
dec
rcrl
fcomp
lcall
lea
popa
and
ljmp
dec
insl
or
jmp
loope
or
iret
or
push
pop
dec
notb
int
xchg
and
xchg
jge
filds
ljmp
outsl
inc
addr16
stos
jge
push
test
or
jle
jge
adc
pop
mov
pop
dec
adc
jne
daa
sahf
jns
sbb
lea
ljmp
loop
loopne
dec
vhsubpd
and
xlat
add
jmp
arpl
jne
or
ljmp
and
jge
pop
lds
aam
scas
popf
scas
icebp
adc
dec
mov
loopne
jnp
ljmp
jg
push
jne
bound
xchg
aam
fisttpl
and
sub
dec
addr16
stos
jge
pmullw
ljmp
test
popa
and
pop
inc
jge
insl
fisttps
test
aam
test
jle
out
pmulhuw
inc
subb
mov
xor
push
loopne
mov
imul
aad
clc
ljmp
jl
sub
jg
loopne
scas
xchg
fidivs
lds
jge
std
adc
push
jle
sahf
in
jne
gs
out
aad
inc
sub
mov
fs
sub
dec
add
jge
arpl
cmp
jge
loop
das
aad
outsb
into
outsb
into
loope
in
test
stos
jge
int
sarb
test
fstpl
out
xchg
dec
lods
jmp
and
sbb
test
xor
jne
pop
pop
rcl
cmp
sub
notb
mov
mov
jge
xchg
daa
push
cmp
xlat
out
lods
or
and
outsl
clc
int3
lea
fsub
sbb
jg
push
inc
nop
dec
cmc
aam
ljmp
hlt
shll
scas
aad
ret
int3
xor
call
vhsubps
xchg
daa
sub
mov
or
jge
pop
aad
adc
xlat
fwait
pop
cmp
lods
mov
into
mov
add
adc
gs
push
cmp
fwait
mov
movsb
test
movsl
or
inc
orl
mov
and
jge
push
mov
pop
into
mov
cmc
cmpsb
jge
and
aad
jno
jb
sahf
repnz
mov
fstl
push
cs
and
outsl
stos
fisttps
jnp
jge
push
scas
push
aad
and
pop
call
fstpl
adc
movsb
insl
jne
sbb
jae
xchg
inc
ljmp
dec
ljmp
adc
jge
pop
icebp
pop
mov
sti
call
xlat
fnsave
ret
mov
xlat
jb
pop
test
adc
fst
mov
or
xchg
lret
or
push
rorb
adc
ljmp
fs
jne
push
fstl
mov
or
aad
xor
and
rorb
cmpsb
jge
push
dec
test
aad
push
hlt
jae
cmpsb
jge
xchg
dec
test
aad
test
mov
lret
nop
frstor
mov
mov
daa
popf
sbb
into
add
jge
data16
fstpl
xor
ja
aad
std
popf
jae
pushf
jle
mov
mov
vhsubpd
xlat
aad
mov
fucomp
mov
jmp
je
jno
popf
sub
xor
adc
pop
out
mov
push
sahf
rorl
pop
enter
lea
test
mov
dec
psrad
popf
fs
jne
cwtl
popf
rcl
or
iret
or
push
xlat
sub
notb
fwait
ss
fwait
rorb
xchg
sub
lahf
xchg
arpl
out
test
pop
inc
aad
sahf
mov
fstpl
and
daa
add
jge
sbb
push
xchg
addr16
add
sbb
push
add
ja
arpl
out
je
jne
jp
pop
nop
aad
cld
cmp
int
aad
cmp
jnp
jge
gs
repz
movsb
xlat
aad
mov
scas
out
and
jne
mov
push
mov
fwait
jmp
ljmp
inc
or
jg
aam
stos
push
fcmovne
jge
in
in
jmp
loopne
cld
push
loopne
loope
adc
fwait
jge
aas
sti
cltd
gs
fnsave
fcmovbe
filds
jg
xchg
stos
push
fldt
and
xor
sbb
mov
int
shll
adc
aad
jae
lods
or
and
push
repz
add
aad
mov
lret
ljmp
inc
cmpsb
pop
push
not
in
dec
lods
or
ljmp
push
mov
jge
fisttps
aad
sahf
into
outsl
xchg
mov
aam
scas
popf
das
pop
lea
std
loope
jecxz
add
fldl2e
sarl
mov
mov
and
cltd
repz
add
cmpsl
jge
jg
xchg
rcrb
divl
shr
mov
test
jne
jnp
fnstsw
ljmp
and
mov
ljmp
int3
mov
jge
shlb
lret
fdivrs
insb
jecxz
push
jne
pushf
jne
ljmp
ljmp
lea
push
jge
fmull
mov
inc
mov
ficomps
loope
jb
mov
pushf
repz
fst
mov
loopne
roll
dec
mov
mov
dec
aad
push
mov
mov
inc
mov
sar
mov
xchg
or
xlat
imul
jge
pop
inc
dec
imul
add
jge
rorb
cld
or
lret
ljmp
les
mov
sarb
aad
add
lahf
pop
loope
mov
outsb
or
not
inc
jge
sbb
lahf
dec
cmc
jb
pop
xchg
mov
in
loope
jns
in
adc
pop
js
cmpsb
xchg
mov
dec
mov
inc
ljmp
mov
mov
ljmp
lret
pop
sbb
mov
ja
mov
xchg
test
not
test
fst
clc
fisubrs
dec
clc
call
pop
icebp
pop
test
mov
jo
fnstsw
mov
iret
repz
fsubrs
push
jne
mov
xchg
pop
xchg
mov
push
jno
ljmp
stos
inc
sbb
shll
pop
fldt
mov
arpl
cwtl
fcomi
repz
adc
fs
arpl
push
push
test
psubsw
mov
dec
notb
iret
push
dec
mov
jge
xchg
cmpsb
fwait
hlt
cmc
loope
cmp
pop
add
arpl
and
add
ljmp
inc
ja
sti
test
popf
clc
mov
imul
jg
xlat
aad
jnp
roll
jne
adc
pop
dec
push
lea
ljmp
popf
push
outsb
insl
out
jge
jmp
loopne
add
jmp
fst
clc
out
ljmp
mov
sbb
jnp
addl
mov
loop
inc
mov
outsl
or
or
adc
mov
mov
test
sub
lods
push
adc
mov
pop
dec
mov
inc
jge
inc
xlat
lea
sbb
ficoml
xchg
adc
lds
sub
or
push
addl
sahf
fisubl
inc
jne
pop
jnp
adc
cmpsl
fiaddl
lea
aad
add
lret
movl
adc
aas
fldl
sbb
dec
insl
mov
ljmp
push
test
mov
jle
insl
std
jge
imul
jae
dec
aaa
int
cli
dec
arpl
sub
stos
addr16
testl
push
xchg
lea
hlt
jge
push
push
dec
pmullw
xor
out
ds
push
jl
outsl
fwait
adc
inc
test
or
inc
aaa
mov
jecxz
inc
dec
aad
aad
mov
in
jge
lahf
clc
xchg
negl
sahf
sub
je
and
lcall
fcmovnu
and
pop
xchg
es
lahf
repnz
jae
cltd
dec
imul
jg
aam
cmpsb
ljmp
add
scas
fldenv
and
loope
loop
jne
fldt
dec
popa
cmc
pop
or
loop
sbb
pop
loopne
inc
stos
lret
mov
xchg
repnz
lods
jmp
arpl
inc
jne
push
aad
xor
mov
repz
inc
dec
addr16
stos
jge
sti
mov
dec
lods
or
and
fs
les
int3
sbb
jne
mov
notb
cmpsb
ljmp
data16
or
stos
jge
mov
xchg
dec
add
aam
scas
lahf
aad
dec
lcall
loope
cmp
sbb
arpl
loopne,pt
fsubl
cmc
loopne
cltd
pop
dec
pop
jo
dec
outsl
jge
jnp
jge
push
stos
jae
lods
xor
mov
test
in
jecxz
outsl
movsbl
test
fst
clc
mov
or
mov
les
shrl
cmc
shlb
scas
aad
fs
and
jne
cmp
fs
sbb
fdivl
je
cmpl
gs
xlat
adc
aad
pop
jnp
xlat
add
jmp
mov
cmp
sbb
testl
and
xchg
sub
inc
mov
mov
leave
or
hlt
jb
cli
out
pop
hlt
adc
sbb
lods
movsl
leave
mov
mov
fdivs
ret
enter
mov
sbb
jecxz
in
test
dec
js
mov
add
jbe
fcomip
andl
lret
mov
mov
push
pop
call
push
push
pop
int
xor
jge
sbbb
mov
gs
xchg
sbb
cs
movsl
fs
fisubs
gs
ret
call
or
add
loope
lds
lret
std
in
repnz
xchg
or
clc
cmpsb
push
dec
sub
jp
cpuid
arpl
loopne
add
inc
push
mov
mov
or
push
mov
fidivl
jnp
xor
out
aam
jnp
das
lret
loopne,pt
jge
das
lea
ret
adc
cmp
mov
or
xor
in
call
mov
idivl
pop
pop
jp
icebp
jbe
in
jae
repz
or
or
push
lods
cmp
mov
dec
jno
mov
jl
rclb
popa
fsts
add
sbb
sti
dec
mov
lea
jle
xchg
cmp
jge
adc
pop
push
adc
and
ljmp
lcall
rcll
data16
push
mov
jmp
std
lret
imul
insl
mov
push
add
inc
repz
adc
in
scas
lock
jne
fbld
jg
jp
sbb
xchg
in
dec
sub
dec
mov
fmul
loopne
pop
int
in
cltd
xchg
xchg
jecxz
sub
loope
insl
xlat
sbb
out
fucomi
add
in
inc
fisttps
lods
stos
cmc
mov
cmp
loope
in
jmp
pop
pop
stc
mov
std
fldl
testb
add
test
jnp
adc
shll
mov
mov
cmpsl
inc
sahf
lods
inc
or
sti
dec
and
cmpsl
mov
or
imul
pop
ret
or
stos
sbb
jmp
mov
sub
enter
in
or
insl
out
fsub
cmpsb
popa
fildll
test
adc
insl
pop
xchg
jne
push
adc
std
dec
mov
mov
xchg
xor
ljmp
sub
fsubrl
pop
sub
mov
movsl
fstpl
fmull
in
adc
shll
jl
dec
dec
mov
or
fstpl
lahf
data16
mov
mov
imul
out
inc
push
fsubrl
mov
mov
ret
inc
jne
add
sbb
fmull
stos
cmp
cmp
push
jp
pusha
pop
dec
in
fdivrl
jg
and
scas
pusha
arpl
sar
cs
mov
and
push
xchg
rorl
adc
xchg
or
aad
push
sub
scas
out
jnp
loopne
cltd
mov
adc
aad
mov
xlat
fucomip
mov
pushf
loope
jnp
dec
push
push
push
adc
int
es
dec
filds
jbe
int
dec
sub
les
movb
cmp
add
jbe
sub
dec
out
aaa
xor
dec
push
adc
stos
xchg
jle
mov
lcall
xchg
sbb
ret
pop
gs
js
inc
fcoms
xlat
cmc
or
sbbb
mov
push
fdivp
dec
push
jmp
dec
sti
lods
popl
lret
xchg
sub
add
inc
fs
dec
loop
arpl
aas
cmova
push
js
cmp
push
stos
inc
scas
arpl
out
mov
mov
stos
nop
fs
rsm
sahf
orl
cmp
shrb
out
pop
lret
sbb
mov
pop
notb
cmp
xor
push
mov
xchg
cmpsb
fsts
adc
movsb
adc
jmp
inc
out
jmp
arpl
lret
loope
and
mov
fisttps
into
popa
push
jne
dec
ljmp
mov
xchg
idivl
mov
movsl
ret
xchg
or
adc
imul
inc
lea
cmove
int3
daa
xchg
test
outsl
add
mov
push
mov
sti
add
aad
jecxz
push
shrb
jp
cmp
int3
mov
dec
movb
lret
inc
cvtps2pi
xchg
cmp
jl
daa
push
insl
das
test
push
movsl
das
es
into
and
jmp
scas
and
ljmp
or
fucomi
imul
sbb
ja
mov
xchg
lea
arpl
cmp
ud1
or
std
ljmp
cmp
inc
push
pop
xlat
cld
add
fistpll
sbb
inc
flds
jp
pop
adc
popf
cmp
int
sbb
out
mov
iret
jnp
mov
repz
xor
inc
inc
lods
pop
or
popf
sub
push
sbb
mov
shrl
mov
rorl
hlt
adc
mov
hlt
in
xor
jp
dec
lods
mov
loopne
movsb
xchg
mov
cmp
mov
and
sub
incb
cs
fwait
hlt
leave
inc
imul
fisttpll
mov
aad
pop
dec
fucomip
sub
in
insb
sub
push
aad
pop
dec
outsl
fwait
mov
in
push
sbb
cmp
repz
rorb
mov
fucomi
mov
cmc
fisubrs
cmp
pop
adc
xor
out
add
mov
ljmp
shl
lret
scas
fs
push
jnp
into
test
add
lcall
cmpsl
mov
jnp
jnp
or
sub
int
notb
jle
sub
pop
cmc
sarl
int
jbe
dec
das
add
sbb
imull
es
lret
dec
mov
add
das
leave
das
pop
or
or
in
cmc
xlat
cli
cmp
push
inc
pusha
mov
pop
das
filds
xchg
scas
sahf
ljmp
lret
icebp
or
mov
xor
in
in
mov
push
sub
call
or
push
cmp
and
imul
ret
dec
dec
lods
daa
mov
sti
bnd
mov
dec
or
mov
cmpl
mov
pop
div
add
out
leave
dec
pop
or
aas
ja
or
scas
push
insb
push
clc
int3
es
mov
push
ret
mov
lds
and
jmp
lret
inc
imulb
cli
and
dec
or
popf
das
sti
mov
inc
repz
push
out
and
ror
stos
or
in
insl
addr16
add
addl
or
mov
out
push
into
cs
mov
insl
xchg
xchg
or
fs
iret
and
jo
adc
stc
sub
and
sahf
ja
jmp
mov
xchg
jle
pop
push
mov
jg
out
bound
sti
add
and
outsl
dec
sub
mov
in
pop
sub
aad
pop
push
and
lahf
in
sbb
push
mov
out
repz
mov
dec
lods
sar
rorl
xchg
int
aad
lods
mov
into
mov
cwtl
std
ja
inc
inc
in
inc
std
decb
sub
stos
lods
mov
add
mov
add
es
iret
mov
jbe
fldenv
or
into
sub
xchg
or
loopne
aaa
and
out
dec
mov
sbb
mov
dec
ja
sbb
inc
pop
lods
scas
cltd
je
int3
loopne
int
fxch
faddl
fcoml
mov
dec
pop
rcl
jg
or
add
in
push
decb
gs
lods
sti
nop
divb
jno
add
sub
push
or
sbb
mov
ja
mov
inc
fildl
jge
push
mov
mov
lea
aam
or
sbb
movsl
dec
sbb
aad
aam
das
rcl
pusha
outsl
lea
push
inc
mov
flds
xor
mov
fildll
add
mov
sti
mov
or
mov
mov
js
dec
pop
movsl
in
fidivrl
mov
xlat
mov
xchg
mov
or
jg
xor
fs
lock
into
clc
leave
lods
jp
push
jae
ficomps
test
push
xor
testb
xor
loope
or
out
in
iret
add
mov
idivb
outsl
js
pop
into
cmp
adc
or
int3
into
hlt
sub
mov
lret
sub
xchg
mov
cmp
xchg
cltd
dec
mov
inc
stc
sub
cmp
lea
adc
loopne
scas
sub
imul
jne
call
pop
mov
xor
jne
jo
cmp
adc
sub
pop
cmc
add
repnz
inc
pop
mov
lret
repz
setb
std
push
ljmp
xchg
ror
ljmp
cmc
test
mov
pop
inc
ja
into
pop
insl
shr
fistpll
mov
std
add
fistpll
out
aad
lret
repz
in
in
leave
aad
sub
push
push
sysret
out
jecxz
mov
mov
xchg
call
repz
iret
imul
jecxz
lods
fisttpll
shrb
idiv
cld
insl
leave
out
mov
test
div
lods
out
mov
xchg
mov
mov
mov
pop
inc
or
or
leave
test
jg
sti
int
lods
repz
imul
mov
leave
cmp
int
mov
xchg
push
mov
add
jl
testl
lret
outsb
test
or
popa
test
pop
cld
int
in
lea
pop
cmp
stos
jnp
jbe
lock
lods
jmp
std
pop
stos
xlat
xchg
pop
decb
test
sti
std
hlt
stos
jno
in
jbe
xchg
push
lods
fisubrs
idivb
lds
test
pop
cmpsl
xchg
pop
incb
dec
add
int
pop
scas
cld
ja
hlt
outsl
stos
imul
fmul
add
leave
pop
test
rorb
incb
add
mov
int
pop
jo
insb
stos
push
pop
lods
jbe
mov
xchg
mov
or
cwtl
decb
subb
int
xchg
cmc
icebp
in
imul
pusha
fldt
inc
jmp
inc
int
leave
lea
push
mov
adc
cmp
vmaskmovdqu
fincstp
adc
add
dec
daa
cltd
add
das
pop
rclb
adc
repnz
mov
add
mov
inc
ret
sahf
push
pop
mov
aad
pop
jle
scas
pop
aad
pop
shr
mov
or
push
std
in
cld
adc
adc
loope
or
or
xchg
add
pop
ss
sub
pop
idivl
adc
std
and
jae
pop
fildll
adc
xchg
add
inc
mov
adc
jbe
dec
popf
pop
xchg
lods
jb
add
shll
pop
or
adc
add
ds
scas
mov
push
lods
cld
call
movsb
mov
pop
xlat
push
or
aad
xchg
pmullw
sti
add
dec
push
adc
jbe
sbb
dec
iret
insb
sub
pop
mov
loop
xlat
icebp
ss
cwtl
test
add
push
add
stc
and
inc
cltd
inc
sahf
mov
aad
je
mov
movsl
in
loopne
loop
popl
xchg
daa
sub
jp
loop
sub
mov
roll
adc
ret
jmp
jbe
or
jge
or
addb
pop
std
or
and
mov
je
and
ficompl
orb
fsts
mov
sub
out
add
ret
jbe
nop
aad
call
mov
xchg
daa
popa
xchg
sub
and
push
in
iret
mov
xchg
outsb
xlat
rcll
add
push
das
aam
dec
scas
push
ljmp
and
xchg
or
mov
jo
push
pop
cmc
orb
xor
adc
xchg
cmc
loope
pop
test
push
out
xchg
arpl
mov
ds
clc
xor
mov
xchg
lods
or
sarl
xchg
pop
cli
das
mov
movsb
in
fidivl
push
ficomps
lods
or
dec
fprem1
mov
sub
je
xchg
mov
fcompl
test
gs
imul
push
std
and
and
iret
notl
jo
jbe
mov
mov
xchg
push
aad
ja
lea
fists
movsl
dec
jb
filds
push
push
out
mov
js
scas
loope
mov
pop
dec
notl
lcall
mov
jge
cmp
lret
movsl
das
cltd
sti
ds
sti
stos
out
cltd
shl
lret
lahf
imul
addr16
push
or
xor
fnsave
or
ret
ret
xchg
xchg
mov
int
push
or
jb
test
enter
in
std
xchg
outsl
in
cmp
mov
cmp
enter
in
mov
pop
cmp
push
negl
movsb
mov
addl
mov
xor
das
outsl
cmp
dec
xchg
add
sub
int3
call
hlt
pop
mov
lods
ljmp
or
aaa
cmp
loopne
xchg
push
pop
repz
push
cmp
mov
daa
clc
test
mov
xchg
imul
sar
outsl
cmp
int
pop
or
stos
filds
std
stc
add
test
outsb
imul
cld
mov
xchg
scas
sub
add
cmp
cmc
sbb
outsl
mov
jne
call
rorb
rcrb
callw
std
mov
test
out
adc
popf
pop
and
mov
cmpsl
in
or
cmp
mov
add
aas
push
arpl
lahf
clc
xchg
pusha
pop
imul
dec
cmc
rcll
mov
aas
in
xchg
adc
in
cmp
add
xchg
push
xor
subl
mov
in
hlt
imul
ret
cmc
aas
mov
push
xor
add
sbb
and
xchg
repnz
retw
aaa
repnz
add
daa
ficoml
sahf
dec
in
push
fmull
ds
enter
cmp
jecxz
loopne
xchg
test
push
xor
pop
insb
xchg
mov
jnp
fiadds
pop
mov
push
shlb
mov
stos
orb
mov
aad
sarb
mov
adc
pop
shrl
dec
or
data16
popa
sbb
mov
xchg
in
arpl
xchg
fdivl
or
idivl
call
int3
imulb
xchg
daa
int
sbb
add
xchg
mov
iret
add
push
push
ret
fadds
ja
jge
cmc
fbstp
or
jmp
aad
sbb
inc
dec
mov
int
int
pop
dec
push
outsb
mov
cmp
jno
push
inc
or
push
xchg
sbb
inc
loop
or
sarl
movsl
in
pop
inc
push
gs
jle
imul
out
or
in
ja
xor
dec
inc
add
flds
push
fsubrs
into
rcrl
hlt
bound
lds
std
mov
daa
movsb
ret
xchg
mov
into
push
sarl
fisttps
inc
imulb
add
cmc
popa
out
push
mov
imul
mov
test
mov
and
dec
add
fldl
sbbl
or
aad
shll
push
adc
and
test
stc
adc
ret
insb
lds
ret
push
stc
test
or
jmp
aad
std
into
cli
xchg
mov
jmp
fwait
inc
pop
add
bound
mov
lds
pop
cmp
or
mov
sub
into
dec
out
in
sbb
cmpl
mov
inc
mov
gs
pop
rcr
shll
dec
repnz
push
sahf
daa
push
mov
sub
out
enter
aam
pop
xor
lods
ffreep
and
sub
jbe
fiaddl
out
cmc
mov
imul
and
xchg
inc
jnp
sbb
frstor
adc
pop
shll
das
fs
jmp
lods
out
pop
vpshlw
fucomi
mov
mov
cmp
ret
sub
cmp
or
lods
push
cmc
inc
adc
fbstp
lock
add
xor
cmpsl
mov
iret
cmp
pop
stos
nop
push
in
pop
out
dec
test
push
loopne
idiv
ret
inc
iret
cmp
lea
jae
cmp
sub
pushf
push
call
std
and
push
ja
int3
xor
sbb
shll
fldenv
cmpsb
push
in
and
sub
push
aam
or
enter
cli
pop
test
mov
inc
mov
push
push
mov
mov
xor
ss
pop
rolb
out
mov
rolb
mov
pop
cmp
hlt
mov
xor
xor
call
pop
sbb
in
lret
pop
outsl
sbb
xchg
xadd
dec
dec
inc
xor
sbb
testl
and
jae
push
test
add
movw
pusha
jmp
or
add
pop
ss
xchg
xor
add
mov
pop
cmp
lock
push
inc
mov
xchg
jmp
outsl
bound
movsl
iret
inc
test
pop
or
push
push
call
adc
cmp
cmp
shll
dec
roll
aam
out
jecxz
fiaddl
or
push
pop
sbb
mov
push
jo
adc
or
lret
mov
movsl
movsb
movsb
jmp
shlb
xorb
ja
aas
adc
ret
lahf
imul
jmp
cmp
cmp
xor
xor
add
dec
dec
dec
dec
dec
jle
cmp
out
ret
mov
sub
testl
and
jne
push
mov
stos
pusha
pusha
pushf
lea
jmp
push
lea
js
jae
push
pushf
jmp
lcall
xor
jp
inc
sub
fsubrs
loope
mov
aad
fistpl
pop
adc
mov
dec
out
adc
pusha
push
das
or
mov
adc
adc
or
hlt
jne
dec
push
outsb
inc
sbb
clts
imul
leave
aas
jmp
add
popa
ds
out
xchg
pop
ds
into
movsb
sbbb
out
sarb
fdivrl
sbb
lahf
mov
imul
cmp
pop
mov
xchg
sahf
arpl
into
and
aam
lret
cltd
rcrl
dec
icebp
ja
push
addr16
fs
ds
xor
insb
pop
pop
dec
les
inc
cmp
sub
adc
pop
cwtl
sub
fisttps
dec
cmp
aam
test
and
int3
test
pop
xor
push
jmp
pop
icebp
roll
cli
mov
jl
inc
inc
loopne
adc
loope
loope
add
mov
je
cld
pop
outsb
test
inc
sbb
in
jg
mov
pop
int
pop
enter
fs
xor
xchg
rolb
je
pushf
mov
sbb
cmpsb
mov
bound
enter
inc
mov
shll
in
cld
push
mov
call
inc
add
clc
jmp
jmp
fs
ja
pusha
pushf
inc
pushf
push
dec
inc
shr
test
xchg
pop
das
inc
mov
shl
stc
seto
shl
mov
clc
stc
clc
stc
xchg
shrd
mov
stc
cmc
sub
call
fildl
arpl
cmp
test
or
jmp
inc
inc
aad
nopl
add
jg
pop
and
pop
mov
dec
jecxz
pusha
mov
sarl
in
in
jl
adcb
inc
cmp
sbb
mov
jmp
push
pushl
pushl
lea
jae
clc
push
mov
call
lea
jne
call
mov
fcmovnbe
into
mov
push
sub
fdivl
std
sarl
insl
fisubrs
movsb
add
cmpsl
sbb
add
inc
loope
cmp
adc
into
aam
mov
jno
nop
add
pop
pop
fildll
lds
adcl
xchg
push
pop
and
inc
or
test
lea
movsl
mov
out
scas
mov
sahf
xchg
mov
js
jmp
mov
out
btc
shl
cmp
mov
cmp
jmp
call
jmp
pusha
lea
jae
inc
mov
pusha
inc
pusha
mov
movb
mov
lea
call
pusha
push
call
adc
or
imul
xchg
cmpl
jb
pop
cmc
aam
mov
push
sbb
fld
in
lods
fisubs
xchg
pop
sub
pop
add
xor
push
inc
jge
lret
mov
mov
scas
ret
xchg
pop
pop
dec
sbb
loopne
out
push
add
outsl
sub
ds
bnd
shrb
testl
adc
test
adc
lea
jae
pushf
lea
jmp
jae
pushf
pusha
movw
movl
jmp
shr
adc
fwait
out
mov
icebp
loopne
sahf
outsl
dec
daa
add
scas
mov
aas
sahf
lcall
out
pop
push
es
inc
sbb
add
rol
ss
popa
aad
xchg
sbb
jb
into
pop
test
jg
icebp
fld
mov
mov
test
cmp
sti
repz
lds
cmp
push
mov
push
int3
dec
out
push
inc
rolb
sub
adc
aam
rclb
xchg
xchg
rorb
mov
mov
pop
pop
shlb
call
scas
and
or
adc
nop
cmp
ljmp
add
cmp
sub
jb
stos
out
shrl
dec
sub
sbb
adc
xlat
js
stos
shlb
sub
pop
jecxz
push
inc
pop
xlat
lret
pop
mov
and
das
dec
call
jo
jb
insl
pop
pop
pop
dec
pop
adc
int
pushf
dec
push
or
test
pop
push
push
out
sbbl
testl
mov
mov
in
lea
push
out
sahf
jo
sub
stc
in
dec
inc
push
loop
mov
and
stos
and
fldcw
arpl
jae
lods
test
mov
aam
push
xchg
lock
cwtl
dec
idivl
push
pop
and
jl
dec
shrb
dec
sbb
mov
ss
jbe
and
sbb
add
out
out
loope
lret
testl
jmp
xor
repnz
enter
push
and
into
test
pop
sub
repnz
cmc
sub
leave
or
push
jae
lods
iret
ret
out
fs
mov
dec
mov
mov
dec
incl
sub
push
sub
or
and
cwtl
pop
pop
into
cmpl
aaa
and
and
inc
rcrl
jne
popa
pusha
pop
pop
iret
push
iret
jmp
lcall
mov
mov
adc
into
movsb
mov
or
fstpl
jbe
sub
cwtl
outsl
dec
jnp
mov
dec
and
jns
stc
repz
cwtl
aam
or
out
cmp
mov
in
dec
mov
pop
je
add
fnstsw
into
lahf
movsb
xchg
div
popl
daa
sbb
lods
inc
fiaddl
xor
and
ds
decb
mov
out
and
push
loopne
adc
pushf
xchg
add
mov
jbe
adc
cmpb
xchg
stos
enter
sbb
add
out
xchg
fmull
ljmp
jle
inc
xchg
iret
mov
popf
mov
dec
scas
sub
push
inc
dec
inc
inc
cltd
cwtl
sub
ja
sub
cmc
repz
inc
adc
jge
cmp
in
pop
inc
dec
xor
jmp
mov
jne
push
dec
sub
std
ja
push
and
lahf
xchg
xchg
mov
or
mov
mov
shll
jnp
sahf
aaa
mov
pop
mov
add
cmc
cmpsl
sbb
or
aaa
out
loop
in
pushf
or
fadd
mov
in
sbb
popa
ljmp
sbb
push
fwait
cltd
leave
inc
xor
std
pop
arpl
add
dec
rcrb
and
dec
inc
loopne
lds
ss
fdivs
xlat
mov
ja
shlb
test
mov
pop
pop
push
sbb
leave
int
jl
mov
arpl
sub
aas
cmc
xchg
jne
pop
fldl2t
notl
xlat
ret
clc
pushf
clc
push
mov
call
sti
sbb
loopne
fisubrs
pop
es
es
mov
jmp
cwtl
imul
pop
subb
ja
xchg
cmp
jae
lods
int
ffreep
mov
and
xor
sub
pusha
and
pop
xchg
dec
sbb
pop
pushl
push
in
cltd
and
adc
cmpl
subl
dec
inc
dec
ds
jmp
xor
xor
loope
mov
sbb
pop
xor
call
ds
aam
pusha
jo
pop
dec
pop
lcall
jno
inc
sarb
insb
fsubl
jbe
xchg
sbb
pop
pop
mov
pop
rcrb
ss
int
das
repnz
sahf
pop
nop
inc
mov
adc
pop
daa
mov
push
pop
and
add
imul
in
fcom
enter
stos
cltd
xchg
mov
cmp
sbb
out
xchg
push
xor
insl
cmp
into
cmpsl
cmpsl
mov
mov
ret
mov
xchg
adc
jl
fstpt
adc
loopne
pop
jb
or
das
fdivrp
cmp
mov
and
sub
cmp
es
mov
js
lret
ret
dec
sbb
lock
loop
rcl
ret
notl
cmp
or
movl
mov
movb
push
push
pushl
ret
xor
or
daa
pop
dec
sub
popa
dec
and
fdivrl
sahf
fcomps
jb
mov
push
ss
or
cld
je
cs
pop
push
rorb
pop
mov
outsb
sbb
nop
ds
aam
jmp
outsl
xor
shll
out
push
loopne
or
jl
loope
mov
por
ljmp
notb
aaa
mov
mov
rclb
xor
shl
js
push
movsl
and
sahf
std
test
pushf
std
and
or
ja
out
out
xchg
xchg
jl
cld
adc
and
arpl
xor
shl
sbb
lret
inc
jge
daa
jno
sti
pop
stos
sbb
and
fisubrl
rol
xchg
or
xor
or
rclb
movb
dec
inc
lds
sub
pop
xor
addr16
push
or
int3
pop
add
lahf
lret
shlb
loop
fisubrs
push
mov
scas
les
repz
push
bound
dec
jge
adc
and
setae
mov
pop
push
lret
dec
xchg
add
xlat
or
mov
inc
ret
stos
mov
add
movsb
fwait
adc
pusha
and
sahf
mov
outsl
adc
fs
fwait
jb
fadds
jg
movb
mov
mov
std
jge
jo
aam
push
sub
lock
lcall
inc
ret
inc
loop
loop
mov
repz
ss
dec
pop
fcoms
push
inc
xchg
xchg
xor
inc
cmpsl
adc
cltd
xorb
lods
xchg
mov
xchg
pop
mulps
fldl
fs
xchg
fs
rcrl
add
and
int3
cwtl
push
xchg
mov
xchg
mov
movsb
jnp
lcall
mov
mov
psubd
enter
icebp
fcompl
pusha
addr16
adc
test
std
xor
inc
andb
adc
jecxz
test
jle
ja
cmp
imul
fstps
or
imulb
push
lods
cwtl
pop
pop
orb
push
in
arpl
push
push
mov
add
sub
imul
adc
sbb
movsb
pop
test
imul
push
mov
xchg
and
or
cmp
xchg
dec
test
loopne
mov
mov
add
ret
cmp
cmpsb
stc
jo
dec
cmp
adc
mov
add
xchg
add
fwait
xchg
mov
cs
ret
dec
jmp
mov
adcb
mov
push
arpl
subb
ret
cmp
cmp
sub
fcmovnbe
dec
adc
pop
pop
cmpsl
outsb
fmul
fcmovnbe
and
mov
xchg
push
push
jno
in
xchg
add
into
lcall
mov
dec
sub
mov
mov
roll
fs
or
daa
mov
sub
xchg
pusha
xor
scas
sub
in
jl
js
jmp
lods
xchg
in
jle
xor
sub
push
mov
xor
push
xchg
dec
push
mov
xchg
popl
int3
rcrl
add
leave
jl
call
jle
push
dec
inc
mov
stos
cmp
das
stos
pop
pop
outsb
movsb
add
fcomps
leave
cmp
in
mov
cmp
clc
dec
insb
inc
test
jb
mov
xchg
gs
pop
mov
insl
in
pushf
mov
dec
scas
or
and
mov
fbstp
and
sub
mov
dec
inc
leave
jne
push
inc
adc
jae
imul
xchg
test
dec
ret
andl
icebp
xor
shll
loope
mov
mov
inc
mov
or
inc
fsubl
jb
roll
ja
movsb
and
dec
je
inc
aaa
add
out
shl
pop
or
sub
test
adc
cmp
pushf
xchg
imul
jge
inc
and
xchg
adc
outsb
jmp
fs
dec
jecxz
lods
sub
ja
lea
ja
addr16
clc
outsl
ret
nop
sub
pop
dec
movb
fsts
sti
mov
pusha
xor
in
cmp
lret
jp
jge
dec
cltd
sbb
add
and
xchg
or
loop
int3
mov
cmp
sub
xchg
pushl
adc
cltd
push
dec
sub
jbe
shlb
mov
out
inc
adc
push
fisttps
jl
jecxz
roll
inc
add
ret
stos
dec
push
push
pop
sub
lock
add
mov
dec
jecxz
cmpsb
js
out
push
dec
cld
icebp
mov
cmp
mov
lods
jg
sbb
sti
repnz
gs
sub
push
mov
scas
and
push
fnsave
jp
add
lea
ficoml
outsb
xchg
jnp
and
loop
inc
push
jae
andb
mov
push
push
cli
insb
in
push
cmp
sbb
sti
rclb
pop
mov
incb
xor
lahf
ds
pop
fwait
out
shll
add
insb
popa
ss
mov
gs
addr16
jge
imul
punpcklbw
xor
or
cwtl
icebp
daa
in
xchg
imul
mov
xor
call
lret
adc
lds
rolb
lds
pop
orb
cmp
repnz
ret
mov
ja
das
sub
or
leave
ds
stc
cs
push
pushf
jbe
cmp
das
add
lds
jb
xchg
fwait
int
mull
mov
xor
xor
mov
das
icebp
mov
push
fdivrl
push
lods
mov
fbstp
aam
addl
mov
cmp
push
fisubrs
cmp
push
bound
scas
in
loopne
test
xchg
sub
jg
mov
mov
inc
repz
orb
bound
mov
inc
xchg
inc
adcl
popf
adc
stos
test
sub
into
insl
pop
mov
and
popf
ds
sub
bound
push
sub
loope
and
add
pop
scas
jns
scas
fwait
adc
inc
in
push
mov
ret
or
push
dec
add
and
data16
sub
roll
fildl
fisubrl
sbb
ljmp
in
inc
adc
push
shll
pop
pushf
subb
bound
inc
push
imul
add
stos
mov
jecxz
lret
aaa
stos
pop
iret
pop
cmp
flds
in
pushf
lcall
jmp
stos
sub
scas
sub
outsl
lret
or
into
dec
aam
gs
jle
hlt
outsl
jo
shrb
sbb
and
out
xlat
mov
rolb
fs
insb
fldl
jnp
repnz
shll
mov
or
sub
scas
or
dec
jno
mov
dec
divl
rcrb
subb
jl
ficoml
lods
repz
jmp
fdivp
push
jo
lds
xchg
xchg
lock
ret
mov
cld
sbb
ds
sbb
sub
es
pop
popa
cmp
mov
or
sahf
adc
leave
mov
enter
mov
loop
sub
dec
pop
gs
mov
std
xor
lods
xor
pshufw
movsb
scas
shrb
inc
ret
adcb
adcl
repz
popa
fstpl
push
dec
imull
push
ljmp
xchg
cld
xlat
cltd
cmp
sub
jo
cmp
sub
iret
inc
jbe
cs
cmpsb
or
or
ds
mul
fcomi
mov
xchg
inc
push
push
outsb
or
lret
mov
sub
in
push
inc
xchg
std
add
mov
aas
call
pushf
xchg
lea
sub
jne
into
inc
jbe
jae
icebp
xchg
arpl
mov
iret
arpl
sub
shlb
sub
adc
and
aaa
dec
mov
and
add
repnz
sbb
mov
lods
negl
and
mov
mov
mov
mov
pushl
push
mov
ss
dec
psraw
xor
push
fwait
adc
enter
nop
sub
fwait
cwtl
lea
mov
mov
add
ja
add
adcb
out
cwtl
push
imul
push
arpl
pop
inc
mov
mov
jno
jmp
mov
mov
dec
cmp
jnp
aas
call
dec
shll
pop
adc
push
nop
xchg
xor
mov
nop
int3
imul
mov
int3
push
repz
pop
mov
movsl
xchg
mov
adc
pop
dec
and
arpl
cmpsl
cmp
ret
rcr
push
mov
pop
mov
cmp
xorb
cmc
cmpsl
xchg
stos
je
mov
mov
add
cli
cmp
xor
fadd
es
movsb
pop
sbb
fwait
pop
lret
cmpb
int3
mov
dec
add
bound
fstpt
ficomps
push
in
sub
mov
pop
arpl
push
inc
aam
imul
in
pop
ficompl
test
cld
icebp
push
inc
cmp
aas
dec
int3
inc
ret
and
xchg
clc
adc
sbb
inc
dec
clc
pop
mov
pop
leave
adc
outsl
xchg
pushf
imul
add
add
lock
or
outsb
sahf
int3
pop
aad
jp
inc
mov
sub
xchg
jne
imul
testl
jg
dec
les
mov
ror
dec
lret
dec
mov
mov
inc
mov
mov
les
movsl
popf
pop
enter
fistpl
rcrb
insl
jmp
test
in
pop
xchg
jle
mov
sbb
fistl
push
xlat
cmp
out
rcll
dec
out
or
mov
leave
adc
loope
js
pushf
mov
orb
pop
xchg
or
cmp
lods
xor
sub
clc
fcomp
pop
push
mov
cli
xchg
je
es
xchg
aas
popa
rclb
and
call
xlat
jnp
cmc
mov
and
in
ja
aam
mov
push
sbb
mov
cltd
sbb
movsl
divl
xor
ljmp
ror
pop
xchg
or
sti
into
inc
icebp
jg
in
fstpt
sub
out
dec
sbb
rol
inc
leave
cmc
das
arpl
jge
jmp
cwtl
mulb
stos
loop
inc
pop
or
or
gs
movsl
lret
bound
insb
push
mov
pop
dec
leave
inc
xor
test
lock
pusha
fstps
or
cmp
cs
testl
mov
adc
push
push
cmpsb
mov
cli
js
gs
mov
ds
sbb
pushf
and
jbe
ds
ljmp
rcll
sbb
mov
decb
jge
mov
mov
xor
or
sub
enter
adc
sti
repnz
push
and
sub
jb
repnz
ret
ds
and
test
xchg
rorl
in
and
xchg
mov
xchg
mov
cmp
mov
xchg
adc
mov
lahf
sub
dec
adc
xlat
push
int
jmp
sub
cli
jnp
jp
ljmp
pop
xor
add
movl
enter
ja
in
aaa
mov
jns
fstps
ja
adc
ficomps
jae
sbb
mov
mov
mov
inc
in
push
and
pop
push
sbb
jmp
mov
jge
jne
pop
rcrl
cmp
push
lods
mov
push
sbb
mov
cmp
arpl
mov
xchg
xchg
jp
xchg
push
test
loope
lret
xchg
imul
dec
dec
aas
mov
jno
cld
jb
mov
xor
lahf
jno
and
int
idivb
or
mov
dec
dec
shr
pop
repnz
and
push
cmpsl
xchg
mov
addb
xchg
pop
push
scas
push
imul
push
xchg
psrld
rcrl
dec
push
stos
lcall
and
pop
cwtl
cmovs
pop
mov
and
push
shlb
mov
clc
stos
test
popa
dec
and
xchg
mov
cli
sti
pop
mov
xchg
imul
fsubl
sub
cmp
insl
mov
xchg
fwait
xchg
push
dec
mov
icebp
mov
dec
adc
sti
bound
nop
ss
int3
movsb
test
icebp
xchg
xchg
rorl
ja
cmp
adc
imul
push
cmp
cmpl
imul
insb
mov
jle
bound
sbb
add
into
aas
in
imulb
sub
sub
fwait
jo
xlat
test
or
jno
mov
jp
xor
or
pop
imul
bound
sbb
ljmp
add
inc
loope
cmp
fs
pop
jmp
jmp
nop
clc
push
js
lods
mov
idivl
cltd
leave
mov
repnz
lods
push
xchg
adc
adc
pop
popl
lea
or
test
sub
shll
sbb
movsb
mov
dec
add
pop
mov
jne
cmp
cli
pop
call
cmpb
ror
dec
mov
loopne
movsl
sub
adc
or
ja
stc
add
aaa
in
mov
add
or
popa
pop
and
xor
pop
repnz
push
jbe
inc
push
fisubrs
mov
and
or
ret
mov
and
fildll
xor
arpl
mov
mov
lods
movsb
jp
dec
mov
fs
or
fyl2x
inc
cmp
fistl
or
mov
test
leave
imul
add
mov
das
mov
mov
dec
sub
mov
sbb
push
push
rep
out
dec
out
imul
fmull
leave
inc
inc
push
js
sbb
out
pop
aam
jmp
pmulhw
pop
sbb
jne
pusha
dec
and
xchg
mov
push
sub
popf
push
outsb
test
lret
ja
push
dec
es
jle
sub
or
xchg
adc
mov
and
xor
mov
pop
fisubl
lock
mov
hlt
push
push
xor
mov
iret
xor
pushw
adc
leave
lods
call
addl
cmpsb
xor
pop
push
sub
push
hlt
fists
mov
js
sbb
ss
mov
add
cmp
test
cltd
bsr
pop
cmc
mov
pop
inc
xor
cmp
ljmp
and
sub
push
dec
jmp
das
lea
mov
pop
ficompl
push
inc
je
cmp
jmp
inc
pop
sahf
xchg
pop
sub
jl
push
sub
int
xlat
xor
icebp
mov
and
ljmp
icebp
push
mov
fcompl
jecxz
xchg
call
jp
xchg
sahf
push
cltd
pop
pop
iret
dec
lret
xchg
fnstenv
inc
cmpsl
mov
daa
adc
and
rolb
fnstenv
push
popa
imul
xchg
xchg
sbb
pop
push
and
in
pop
shl
je
jge
sub
movsl
sbb
fcoms
stos
das
mov
out
in
xorl
in
cmc
or
mov
xor
sub
xchg
pop
fmull
dec
cltd
sub
sbb
pop
std
cld
bnd
jmp
sub
jnp
je
adc
mov
pusha
pushf
push
mov
pushl
ret
scas
aam
lea
loope
jg
int3
movsb
jge
cmp
loopne
mov
push
cld
lds
push
insl
jecxz
push
push
inc
inc
jmp
lahf
pushf
arpl
jecxz
xor
push
xlat
cmc
inc
rorb
push
int3
dec
arpl
add
sbb
cmp
sub
mov
iret
movsl
jle
ja
insb
pop
push
dec
dec
cmp
scas
mov
mov
cmp
xor
push
test
pop
aas
xor
xor
mov
in
jbe
ret
movsb
mov
cmp
adc
daa
test
lods
jge
gs
push
iret
adc
pop
cld
push
pop
cmp
mov
jle
stos
pop
inc
mov
in
mov
lcall
stc
jmp
sbb
mov
cli
jmp
fbstp
fs
std
aad
xchg
jbe
es
mov
addr16
push
and
iret
movsb
mov
cmp
je
popa
xor
inc
sbb
int3
int3
scas
push
aam
insb
stos
jmp
jge
fisubrs
jg
xchg
lret
mov
lret
test
push
sbb
xchg
fcoml
mov
imul
mov
mov
sbb
jnp
jecxz
xchg
pop
xor
push
sub
fnsave
fsubrl
aaa
sub
sub
sbb
es
jmp
xlat
push
aad
enter
cs
in
pushf
fs
xchg
movsl
ljmp
add
idivl
xchg
jnp
repz
push
mov
adc
std
ja
ret
jns
popf
adc
mov
sbb
je
add
push
push
std
xor
loopne
push
add
lods
inc
mov
sti
fimull
mov
fistpll
mov
xor
dec
jp
scas
mov
inc
add
or
dec
dec
inc
cmp
xor
xor
push
sub
out
jne
fistpll
into
iret
into
imul
dec
aas
mov
mov
xorb
idivb
stc
test
inc
int
lcall
sub
jb
inc
pop
cmc
leave
scas
pop
das
xchg
cltd
lods
rcrb
icebp
cwtl
dec
dec
push
ss
loopne
out
loop
sub
xchg
inc
mov
fmuls
cmc
pop
int
das
xchg
sub
pop
xor
test
dec
xchg
mov
mov
inc
inc
loopne
shll
sub
adc
test
mov
xor
mov
add
xchg
bound
js
out
push
sub
xor
icebp
pop
cs
push
push
adc
div
out
dec
mov
jns
cmp
insb
ret
addl
scas
mov
jmp
fisubrl
xchg
stos
or
ret
pushw
popfw
lea
je
inc
jmp
insl
mov
inc
xor
sub
fistpll
add
lods
lods
mov
fisubrl
rcll
fisubl
or
mov
js
enter
ret
mov
and
inc
xchg
insb
aas
cmp
sub
adc
or
jge
imull
jp
pop
jl
sub
stc
xchg
sti
iret
lods
mov
cld
lret
push
inc
mov
inc
or
push
pop
int3
mov
jbe
xchg
addl
and
mov
orl
cmp
scas
cmp
shll
gs
ret
fldenv
dec
inc
and
insl
inc
cmp
popf
pushf
xor
sub
mov
push
in
pop
pop
push
and
movsl
push
les
stc
out
loopne
rol
popa
lds
fstps
cmp
mov
dec
ror
sub
push
fsubl
outsl
add
fcmovbe
mov
idivl
jb
mov
loope
ret
mov
out
clc
cmp
xchg
push
xchg
sbb
inc
ds
rcl
adc
sbb
add
rcl
mov
inc
adc
jle
and
cmp
mov
add
into
into
add
outsb
jmp
push
fstpl
lds
lock
or
jl
dec
mov
rolb
xor
push
mov
dec
sub
je
add
out
xor
dec
cli
icebp
iret
ret
icebp
stos
dec
nop
jp
cmp
in
fbstp
mov
cmpsb
outsb
test
sbb
mov
fldt
push
sbb
push
sub
nop
shlb
pushf
inc
sub
das
push
inc
in
ret
sahf
popf
or
out
iret
sti
sbb
loopne
sbbb
mov
aad
xchg
arpl
bound
dec
dec
fidivs
pusha
shll
cmp
jl
push
fimuls
fildll
into
int3
pop
xchg
sbb
out
and
cwtl
int3
mov
int3
xchg
lea
leave
mov
shl
add
inc
inc
xor
and
push
sti
std
ljmp
pop
add
test
adc
es
push
sub
fidivrl
mov
cmpsb
xchg
test
mov
xchg
mov
mov
shlb
xor
ret
jo
dec
lods
repz
mov
sahf
lcall
je
loope
jmp
or
push
not
dec
shll
ja
pop
and
mov
std
aad
adcl
lods
ror
add
jmp
jg
or
out
shlb
movsl
jmp
lods
adc
cmp
xchg
sahf
popa
xlat
pushf
jmp
adc
rclb
loopne
fildl
pop
push
pop
ds
sbb
adc
rcrl
push
mul
jecxz
into
lret
scas
lods
movsl
sbb
imull
mov
push
push
pusha
push
pushl
ret
mov
jle
sub
fdivrl
pop
dec
ret
jge
fucomip
dec
fisttpl
js
adc
lcall
mov
ror
outsb
insl
pusha
or
aad
dec
jmp
mov
adc
push
lea
jae
jmp
movb
mov
lea
jne
pushf
push
stos
movb
pusha
pushf
lea
jmp
and
push
xor
loopne
movsb
orb
loop
frstor
push
and
xlat
sbb
aam
loop
inc
lahf
jge
jl
or
loop
aam
bound
icebp
bswap
xchg
jns
rcl
js
or
ror
imul
aas
test
insb
adc
test
jae
insl
xorb
mov
fsubrl
shlb
add
sbb
arpl
scas
xchg
jb
sbb
lret
inc
add
loop
ror
xlat
dec
stc
xor
or
jne
scas
mov
jne
jno
add
enter
mov
in
jge
pop
inc
or
insb
ret
xchg
xor
enter
cmp
imull
das
out
fdivrl
xor
or
mov
pop
cmp
out
popf
push
cmp
xchg
in
das
fdivrs
mov
scas
mov
jb
ljmp
pop
loope
inc
sub
stc
push
mov
sbb
scas
push
push
pop
aas
mov
lret
mov
adc
jns
in
jne
mov
mov
ja
jne
imul
imull
in
lea
je
pusha
stc
push
pushf
or
mov
lea
je
rol
xor
neg
btc
mov
test
daa
push
cmc
mov
cmc
call
mov
jmp
push
pusha
lea
jne
pusha
not
jmp
arpl
popf
jnp
fwait
adcb
add
leave
sub
in
arpl
out
mov
mov
push
loopne
sysexit
add
test
insl
icebp
insb
xchg
loope
mov
outsb
out
jmp
mov
cltd
hlt
cmpsl
dec
xchg
xor
inc
sbb
or
inc
xor
xor
nop
xchg
test
js
outsl
repz
fstps
sbb
add
cmc
xor
sti
lret
cmp
out
xchg
jb
insb
lret
cmp
testb
mov
pop
cmc
inc
cmp
xor
cmpsb
pop
mov
jp
leave
push
roll
push
xorb
out
imul
pop
push
push
dec
dec
inc
mov
outsb
xor
adcb
sub
loopne
addr16
push
call
movsl
mov
adc
push
push
fnstenv
jmp
mov
inc
and
pop
fsubrl
jbe
inc
lret
fnsave
jl
in
sti
push
adc
or
jae
dec
xorb
xchg
ds
neg
and
sub
xchg
int
cmp
jno
ror
inc
sahf
out
lret
leave
rol
mov
fwait
mov
push
stc
in
push
jmp
cmp
push
jle
or
mov
pop
inc
adc
rcll
jnp
out
xchg
xlat
rcr
lds
pop
push
fstpt
retw
por
arpl
jne
jbe
fisubrs
fxch
ficompl
dec
inc
or
and
and
subb
movsb
mov
inc
sub
test
loop
call
push
push
inc
inc
inc
xor
pushf
daa
sbb
imull
mov
mov
insl
adc
test
out
int3
cmpsb
adcl
cwtl
in
aad
out
loopne
mov
push
sbb
pop
mov
mov
gs
sub
dec
sub
sti
clc
repz
fcmove
mov
outsl
mov
lahf
mov
mov
stos
jg
cmp
ret
dec
and
sti
test
lock
rol
jmp
iret
les
inc
sub
jmp
hlt
jno
or
stc
push
cmc
xchg
jnp
divl
fdivrs
sub
mov
and
fists
cmp
push
aas
mov
movsl
jge
je
push
push
pop
push
dec
xor
scas
jmp
push
mov
xchg
mov
fcmovnbe
cmpsb
jl
cmp
dec
sbb
add
xchg
or
mov
popf
xchg
test
inc
xchg
dec
jecxz
or
push
push
pop
add
mov
into
jnp
adc
mov
dec
test
int
loope
push
cld
outsl
push
cmp
pop
xchg
aad
in
pop
inc
imull
sub
jno
outsl
call
sbb
adc
or
jae
in
in
out
loope
jmp
and
enter
rol
jle
aaa
adc
mov
adc
sub
mov
xor
mov
adc
fcmove
leave
xchg
insl
jo
pop
or
mov
lods
mov
jmp
inc
adc
out
push
imul
or
pop
fpatan
cltd
xchg
nop
addl
leave
movsb
ret
xchg
ja
jns
imul
push
cmp
in
mov
sub
std
pop
cmpsl
jl
mov
jmp
and
xor
xlat
mov
jmp
xor
add
jb
lods
lods
lret
adc
sub
inc
jecxz
pop
adc
push
int3
call
or
repnz
enter
divl
imul
out
gs
mov
ret
jb
jmp
iret
into
lahf
int
addr16
pushf
mov
pop
sbb
xor
add
insl
jge
stc
in
clc
dec
inc
sub
aam
pop
enter
fisubrs
adc
test
in
xchg
push
xchg
push
xchg
add
sub
push
push
mov
inc
pushf
lret
call
enter
roll
mov
push
fcomps
mov
lea
jne
pushf
mov
pusha
stos
pusha
pushf
pushf
lea
jmp
adc
in
addr16
pop
sub
stc
fdivl
ficomps
es
cltd
nop
loopne
sub
adc
sbb
in
pop
fcompl
mov
mov
pop
mov
repnz
push
daa
jae
insb
insl
push
and
xchg
aad
mov
dec
or
mov
mov
cmpsl
pushf
sbb
movsb
inc
mov
dec
cmp
and
outsl
jl
divl
jp
lea
je
push
pusha
lea
jmp
push
jo
sub
mov
leave
mov
loope
nop
xchg
add
sbb
cwtl
sub
mov
lea
xchg
xchg
out
lret
pop
mov
xorl
ret
daa
push
xchg
ljmp
aad
iret
into
mov
cltd
mov
divl
or
add
std
fistpl
nop
inc
dec
xor
cmp
in
nop
imul
aad
repz
mov
mov
repnz
mov
mov
dec
call
xchg
pop
out
sbb
iret
ljmp
sub
add
clc
call
divl
xorl
xor
dec
xor
in
lea
sbb
mov
leave
aad
sbb
mov
mov
xchg
mov
leave
cmpsl
pop
mov
jnp
lret
cmp
inc
movsb
xchg
adc
test
gs
dec
dec
inc
xor
lcall
and
push
call
inc
ds
cmp
in
lea
and
aad
test
push
scas
movsb
repz
jg
sbb
lock
movb
xchg
cltd
cwtl
xchg
and
scas
repz
and
and
pop
fildll
sub
icebp
call
sar
insl
lcall
push
sub
ja
pop
inc
gs
call
sub
icebp
jb
in
outsl
inc
lea
addr16
pusha
pop
push
dec
cmp
sub
movsb
jmp
or
je
and
movw
mov
pushl
call
pushf
movw
lea
call
jmp
stos
rcrb
mov
fwait
mov
add
test
in
mov
or
stos
push
lods
sti
lea
ss
hlt
mov
fidivrs
dec
wbinvd
test
pop
test
imul
in
fmul
rol
mov
jmp
mov
lea
jae
clc
bt
bt
cmp
jmp
mov
test
pop
mov
popf
push
lods
aam
fwait
jbe
xor
out
cmpsl
mov
cs
je
jmp
stos
rcl
cwtl
push
addr16
int3
std
in
pusha
xorb
push
mov
or
lods
mov
shrl
mov
stos
cmpl
das
js
xchg
sbb
inc
stos
outsl
int
mov
dec
xlat
fstpt
out
push
pop
inc
dec
pop
loop
pop
shl
push
aas
mov
xlat
jne
mov
push
popa
rcrl
dec
inc
cmp
mov
xchg
movsbw
call
cmc
and
aad
add
test
ss
pmaxub
add
mov
gs
ret
xchg
inc
or
loopne
lcall
xchg
xor
test
movsl
sbb
mov
imul
xchg
outsl
add
nop
pop
in
lods
movsb
movsl
lret
xlat
fmull
pop
inc
std
gs
dec
rcrb
loopne
test
jg
jmp
or
mov
cmpsl
mov
cmp
divl
stc
ljmp
jge
sub
adc
jbe
pop
subl
jge
ja
out
mov
cli
imul
out
arpl
inc
push
cmp
adc
insl
push
shlb
mov
jp
imul
ja
ljmp
loopne
sti
lcall
fidivrs
je
insb
push
jmp
xchg
add
add
adc
mov
data16
sti
fsubs
stc
lret
pop
dec
aas
or
ljmp
movsb
mov
mov
pop
fisttpl
mov
gs
into
push
loop
sahf
sbb
jmp
std
push
cmp
outsl
mov
xchg
pop
sub
dec
es
mov
sub
addr16
stos
adc
jge
jecxz
cmp
shll
xchg
xchg
jmp
testb
sbb
or
lcall
cmpsb
jg
das
or
inc
cmp
xorl
shrb
out
cmpsl
jb
sub
repz
mov
rcl
pop
cmp
mov
lock
mov
cwtl
ljmp
aam
mov
call
fsubr
insb
mov
dec
inc
loope
mov
cltd
push
lret
jmp
lret
xor
sbb
lcall
movsb
jne
sbbl
mov
and
pop
adc
mov
divl
xchg
push
push
inc
push
dec
xor
inc
dec
dec
add
ljmp
dec
sub
addl
and
cltd
je
push
add
mov
pop
dec
inc
sbb
inc
sbb
loopne
mov
add
repz
lcall
push
mov
enter
jb
cmc
adc
xchg
adc
pop
mov
insl
mov
lahf
jb
xchg
push
jle
dec
rorl
fcompl
dec
out
sub
std
mov
int3
push
mov
ret
cwtl
jno
lds
dec
stos
mov
loope
and
outsb
out
mov
adc
xchg
pop
popf
jg
push
daa
sbb
or
stc
repnz
mov
mov
mov
insb
ret
xchg
scas
jl
loope
mov
jmp
loop
jmp
test
test
add
mov
xchg
outsl
aas
pop
lock
push
jnp
aam
add
and
mov
js
pop
adc
loope
outsl
js
and
xor
xor
pop
int3
rol
aad
adc
pop
push
test
lds
mov
push
shll
jge
sbb
jns
pop
dec
arpl
ljmp
int3
aas
icebp
ret
loope
lds
popf
cltd
xchg
mov
enter
sarl
xchg
jno
out
andl
mov
orb
cwtl
sbb
mov
lea
mov
insl
dec
lds
mov
add
lret
xchg
loope
jnp
in
push
clc
push
sahf
xorb
imul
xor
scas
jmp
cltd
imul
gs
xor
cs
insb
add
adc
bound
or
mov
icebp
shlb
lcall
pop
adc
jbe
les
andb
fisubl
push
fldt
push
pop
scas
aam
shrb
push
adc
xchg
push
lahf
and
xor
and
xchg
icebp
lock
mov
scas
dec
xlat
loope
xor
cltd
leave
mov
dec
mov
inc
repnz
iret
leave
mov
test
xchg
or
idivl
pop
cld
pop
inc
mov
bt
cmp
mov
cmp
or
push
mov
call
adc
pushf
push
lea
jae
push
jmp
shl
int
sub
sti
in
lds
lds
pop
mov
mov
mov
out
iret
into
test
mov
pushf
push
jbe
dec
shlb
mov
add
and
pushf
cmp
stos
arpl
popa
add
sub
mov
xchg
sbb
jnp
xchg
mov
nop
adc
ds
mov
push
inc
inc
cmp
das
sub
sbb
push
add
jmp
inc
add
iret
or
push
sub
repz
push
xor
test
jp
mov
add
popf
adc
and
cli
in
xor
mov
push
jl
jmp
jns
popa
out
in
pop
repz
jae
jnp
sub
dec
cs
bnd
adc
repnz
xchg
lcall
insb
push
or
call
icebp
sbb
lret
dec
jg
in
cmp
fwait
imul
cli
fsubrs
xor
popa
add
mov
cmp
mov
loop
sub
daa
pop
pushf
adc
adc
btc
test
xlat
or
jae
mov
loop
jne
or
fincstp
or
mov
jg
jb
ret
cmp
stc
lock
leave
xor
pop
jge
push
aam
cmp
mov
aas
adc
cli
pop
dec
pop
aad
sub
xor
and
or
ud0
out
out
push
ret
fsubrp
sub
into
iret
xlat
mov
mov
jnp
cmp
xlat
rol
les
jl
inc
or
loop
xorb
stc
call
push
lods
stos
add
sbb
xlat
mov
xor
nop
addr16
or
sbb
mov
xor
and
jecxz
cmp
adc
ds
xor
jbe
addr16
jmp
lods
cmpsb
jl
js
jne
mov
lds
andb
pop
sbb
fistpll
out
jmp
inc
ljmp
adc
jno
mov
out
int
and
mov
cltd
dec
adc
dec
sub
push
cld
testl
ret
jmp
push
push
pusha
lea
jae
jmp
call
test
js
cmp
pusha
pushf
movb
pusha
lea
je
pusha
cmc
jmp
dec
stc
pushf
test
pusha
neg
jmp
call
lea
call
pusha
mov
jmp
movl
pushf
pushf
mov
pushf
lea
jmp
pusha
adc
mov
call
cmc
mov
push
cmp
test
jmp
bt
test
add
push
lea
jnp
jne
not
pusha
pushf
pushfw
popw
rcr
mov
pushf
bt
push
ror
mov
call
add
inc
js
je
jb
arpl
jae
mov
pushf
dec
bt
not
bt
lea
jae
stc
bt
rol
push
pushf
stc
cmc
pushw
popfw
call
pushf
lea
jae
pushf
lea
je
pusha
call
fldl
mov
push
dec
mov
mov
loopne
mov
and
movd
dec
adc
bound
aad
fists
sub
jae
and
push
js
js
cmc
dec
hlt
stc
pop
xor
push
sbb
push
int
inc
int3
or
popf
bound
pop
daa
out
cli
jecxz
push
pop
push
imull
aaa
mov
lods
mov
into
sahf
lcall
pusha
pushaw
pop
inc
lret
jmp
xchg
add
add
in
pavgw
inc
ret
mov
or
rorb
je
dec
ret
loope
pushf
inc
mov
jo
pop
lahf
ret
push
iret
int3
das
pxor
mov
stc
test
out
aam
aad
inc
out
dec
or
and
cmp
cwtl
adc
fistl
mov
mov
dec
std
sbb
in
mov
push
adc
adc
lcall
adc
or
cmc
jecxz
ror
leave
cmp
idivl
ss
mov
jle
mov
nop
pusha
cmp
mov
adc
mov
imul
in
jg
adc
or
addr16
dec
mov
js
outsb
out
or
push
nop
push
jne
mov
adc
jmp
out
dec
cmp
adc
fcoml
cmp
aad
fcomip
mov
movsb
lcall
jo
pop
push
dec
lret
jmp
mov
xorl
call
add
jl
mov
cmp
pusha
pushf
lea
je
pushf
movl
pusha
lea
jmp
push
lea
call
pusha
cmp
pushl
pushl
lea
jns
pusha
lea
jae
stc
bt
pushf
cmp
movb
pushf
lea
jae
cmc
call
dec
insb
dec
mov
fnstcw
cmc
shll
xchg
stos
insl
cmp
mov
shlb
lcall
push
adc
cmpb
ficomps
inc
les
lret
mov
inc
mov
sub
scas
negl
call
sbb
mov
lods
addl
pop
inc
mov
jmp
orl
pushf
movl
mov
jmp
pop
jp
and
adc
sbb
lret
push
and
mov
movd
ss
push
leave
or
popf
jnp
fs
aaa
sbb
mov
cmovns
loopne
fists
sbb
push
push
pop
push
and
mov
mov
sub
loopne
push
in
aam
int
cmp
testl
clc
rol
cmc
test
shr
mov
pushf
lea
je
pusha
mov
pusha
pushf
adc
pushf
pushf
push
lea
jmp
lcall
inc
pushf
in
jg
aas
pop
out
xchg
jp
and
iret
sarl
adc
test
orb
cmp
iret
adc
ffreep
lods
sbb
inc
lock
or
test
cli
jb
cmp
mov
ret
insl
xchg
mov
repz
adc
push
int
pop
push
aam
stos
pop
xor
out
xor
stc
out
jecxz
enter
mov
jmp
inc
lea
jno
cmc
pusha
rol
jmp
aam
fisubl
stos
mov
in
mov
pop
stc
int
jne
xor
xor
pop
sub
fcmovnbe
ror
ret
stos
pushf
mov
sub
push
sbb
push
xlat
mov
ret
mov
mov
testl
add
cwtl
pusha
mov
dec
pushf
clc
shl
mov
lods
pushf
clc
call
pushf
pushf
call
pusha
sbbl
mov
inc
and
fdivs
lock
pushf
or
test
xchg
cmpb
fnsave
fldcw
inc
cmpsl
pop
lcall
push
insl
ljmp
adc
pusha
jbe
mov
pusha
loope
and
aaa
and
clc
jne
aad
xchg
pushl
nop
sarb
cmp
divl
dec
imul
jne
gs
pop
inc
inc
cmp
sub
cmp
imulb
fistpll
movsl
inc
cmp
bound
or
enter
je
dec
gs
pop
push
cmp
dec
jge
push
popa
mov
xor
mov
mov
cs
scas
shll
inc
dec
insb
scas
xor
fists
jae
adc
mov
xor
in
fs
fsubrl
push
pop
push
lods
mov
movsb
and
xor
mov
xchg
test
pop
pop
pop
push
push
push
inc
xor
inc
scas
pop
and
or
and
ljmp
out
mov
cs
pop
inc
xor
xchg
aam
add
div
inc
cli
out
mov
aaa
outsb
hlt
shl
ror
mov
mov
mov
es
leave
int
xchg
push
sbb
arpl
and
xor
cwtl
xchg
xchg
sub
testl
lea
jmp
push
jg
and
push
jp
cmp
cmc
mov
fidivl
pusha
aad
iret
repz
adc
xchg
and
mov
ret
out
pop
in
inc
pop
clc
cmp
mov
loop
ficoms
int
mov
sbb
testl
xor
push
xor
loopne
xchg
ja
sub
loop
cmpsb
sbb
mov
xchg
fcompl
int
cwtl
mov
dec
pop
fcompl
pop
mov
jbe
jbe
clc
ds
arpl
add
mov
jge
popa
bound
push
inc
dec
ret
jmp
mov
push
xor
jbe
sbb
push
sub
loop
andb
stc
ror
les
sbb
sbb
or
outsl
xchg
nop
daa
add
mov
rorl
and
sti
ret
push
push
xchg
xor
adc
scas
ficoml
push
pop
pop
mov
dec
mul
nop
testl
or
fcmovbe
lret
ret
mov
test
lahf
sbb
testl
dec
clc
ljmp
js
insb
pushf
jmp
push
call
pusha
pusha
lea
call
call
mov
xchg
xchg
mov
bound
adc
shll
cld
pop
push
stos
aad
lods
mov
mov
scas
inc
cmc
sub
jns
jae
mov
or
int3
mov
sti
xchg
jmp
and
dec
inc
inc
inc
xor
es
push
xchg
jmp
xchg
repnz
cli
jmp
leave
bt
shr
sub
rcl
add
mov
mov
jmp
jmp
jmp
out
int
into
cwtl
lcall
insl
cmp
test
mov
adc
cmc
loopne
shrl
dec
icebp
loop
ss
fldenv
sub
mov
aad
dec
test
pop
xchg
cmpsb
ret
rclb
push
dec
daa
jo
xchg
pop
xchg
and
push
jg
fistpll
push
addr16
cmp
popa
or
adc
dec
cs
addb
inc
cmp
adc
sbbl
loop
cmp
into
jmp
out
mov
or
ret
call
lea
ret
aaa
sti
add
add
fsincos
notb
outsl
jb
jnp
lods
fcmovb
add
nop
jge
xchg
enter
fs
sbb
repnz
inc
cmp
add
sbb
push
fisttps
cltd
xchg
hlt
lret
push
push
inc
mov
jmp
pop
lea
jae
call
int
int3
popf
pop
jb
pop
imul
jns
sbb
rcrb
clc
hlt
push
adc
lcall
lock
int
dec
jbe
imul
inc
and
orb
in
mov
mov
outsb
arpl
inc
xor
mov
je
outsl
xor
adc
mov
mov
test
out
jmp
loop
xchg
insl
inc
les
in
out
pop
cmp
hlt
enter
es
mov
and
cmp
pop
mov
fcom
repz
cmp
idiv
push
push
icebp
mov
insb
dec
and
adc
sbb
lret
out
outsb
out
or
ljmp
ljmp
push
pop
pop
mov
stc
jl
movsl
xor
test
aas
inc
xchg
arpl
pop
lds
inc
xor
sahf
jmp
pop
adc
push
fcoml
lds
sub
inc
and
jecxz
mov
sub
lcall
ds
pop
not
lcall
int
aas
mov
loopne
adc
mov
add
repz
dec
jmp
adc
push
push
adc
push
push
pushf
mov
pushl
ret
push
call
pushf
mov
movb
pushf
pushl
lea
jmp
jmp
jmp
std
and
fcoml
inc
in
pop
pop
es
ret
pushf
jns
sub
loopne
fwait
js
dec
inc
sahf
xchg
mov
pop
xor
mov
iret
aas
popa
pop
std
jbe
lds
cmpsl
rorb
repnz
sbb
jle
or
pop
outsl
aad
mov
sub
test
xor
xor
jb
int
mov
xchg
fisttpl
jb
pop
cmp
mov
pop
sub
jl
add
dec
mov
popa
andl
jno
or
jmp
sub
insl
xchg
stc
mul
jecxz
ror
mov
adc
int
mov
repz
push
jmp
popa
lea
call
call
lea
jbe
pushf
lea
jne
pushf
pusha
jmp
call
shld
aaa
movzbl
push
xadd
neg
mov
movsbw
daa
add
sub
btc
rcr
das
push
adc
push
btr
pushf
shl
lahf
mov
inc
setno
push
btr
shl
clc
mov
call
lea
jae
bt
push
pusha
push
sub
mov
push
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
ja
sbb
bound
and
sahf
jle
cmp
in
icebp
jecxz
cmp
mov
outsl
fdiv
mov
stc
xor
cli
leave
ss
lea
mov
and
cmp
mov
xor
pop
pop
loope
push
loop
fldt
and
movsl
jge
imul
pop
dec
dec
dec
inc
inc
cmp
sub
scas
ret
xlat
pop
jns
sbb
lret
dec
sub
out
shrb
push
push
or
adc
jno
aaa
sbb
std
add
test
roll
push
add
shll
repnz
outsl
aaa
push
aaa
pop
and
pushf
aaa
sub
mov
shll
lods
cmp
mov
cmp
movsb
das
das
sub
pushf
mov
jb
out
loope
add
xor
in
in
lret
testl
push
mov
insl
dec
and
shrb
hlt
out
cmp
jbe
das
sbb
cmp
dec
jmp
or
sbb
add
out
aaa
loopne
sbb
lods
cltd
scas
cwtl
mov
pop
out
sbb
repnz
js
mov
dec
cmp
xor
mov
fidivs
mov
subb
pop
fucompp
testl
and
fs
call
call
pushf
test
call
repz
fcomps
stc
shrb
and
lret
dec
sub
fnstenv
xor
sbb
xchg
mov
cli
lds
rorl
int3
into
into
inc
jg
test
out
inc
sbb
repz
sbb
push
ror
lods
jnp
pop
sti
mov
sub
push
xchg
fcoms
test
daa
cmp
pop
jb
cltd
push
popa
sub
insl
pusha
pop
dec
inc
cmp
xchg
loopew
ja
icebp
in
outsl
jecxz
pop
and
icebp
stos
inc
inc
aas
fcom
int
mov
mov
popa
call
xor
repz
loopew
addr16
mov
adc
jge
stc
iret
mov
sti
sub
jno
pop
pop
push
dec
dec
cmp
xchg
sub
call
test
mov
daa
fnsave
outsb
outsl
pop
fucomip
testl
call
dec
jo
and
sbb
daa
add
cmp
ljmp
push
sbb
jo
clc
push
test
out
cmp
mov
call
jns
je
jno
addr16
pop
mov
sub
xchg
dec
xchg
lds
and
sysret
idivb
testl
add
call
bt
pushf
cmp
pusha
pushf
lea
je
bt
bt
cmp
pushf
pusha
lea
jle
push
lea
je
stc
call
xchg
dec
shrl
mov
add
jmp
fildl
std
adc
adc
pop
jbe
repnz
or
scas
mov
test
push
sbb
adc
testl
pop
push
pusha
add
jbe
cltd
push
sbb
cmp
cmc
pop
mov
jnp
dec
ret
xchg
bound
sub
pop
or
popf
scas
cwtl
mov
jl
adc
loopne
push
rcrl
dec
int
hlt
pop
std
and
adc
aam
fldt
dec
test
scas
dec
scas
sbb
jl
adc
test
xlat
fldcw
dec
mov
jg
xchg
aaa
rcrl
jle
or
push
pushf
mov
int3
lahf
dec
test
adc
fists
cltd
push
pushf
add
add
lods
lods
pop
xchg
add
push
dec
or
pop
mov
sub
insb
pop
nop
add
neg
cltd
out
push
popa
inc
xchg
or
dec
lret
cli
in
xchg
sub
push
out
sar
jp
cmp
lahf
inc
mov
in
xchg
in
fs
in
or
call
je
out
aam
jmp
push
pop
mov
dec
movsb
dec
fists
fisttpl
cmc
lea
dec
ret
loopne
fsubl
xchg
pop
sahf
xchg
iret
adc
xchg
mov
push
popf
aad
jmp
adc
jnp
pushl
or
pop
call
das
xchg
into
pmullw
adcl
sbb
dec
orb
and
dec
outsb
popf
call
cmc
imul
mov
imulb
lea
aad
int3
mov
fldt
sahf
pmullw
mov
xchg
mov
add
mov
mov
pop
ljmp
clc
jmp
pop
movsl
cmp
scas
out
pop
mov
xlat
jmp
xlat
aad
push
pop
imul
jecxz
cmp
cmc
mov
cltd
test
ficompl
xchg
sbb
or
fistl
dec
mov
push
fwait
xchg
add
sbb
adc
push
fsts
jp
fwait
into
add
push
pop
call
int
aam
sbb
add
push
xchg
or
or
imul
push
ja
shll
fsubrl
adc
fldcw
jmp
mov
dec
add
adc
add
imul
lcall
sbb
fildll
out
add
fidivs
out
sbb
push
pop
pusha
mul
inc
sub
xchg
cs
ret
addr16
mov
scas
mov
loopne
int3
and
jl
or
ljmp
scas
or
xchg
sbb
scas
xchg
xor
jno
movsb
xor
lret
jmp
ret
cmp
push
mov
add
adc
pop
call
out
push
scas
sub
pop
psrlw
cmp
lods
fsubrs
mov
into
cmp
fbstp
decl
int
adc
loop
xchg
xor
add
xchg
inc
ficoml
lret
cmp
iret
sub
or
mov
out
pop
push
test
add
xchg
aad
lret
mov
sar
icebp
es
bswap
stc
enter
pop
in
push
paddsb
test
mov
jmp
outsl
out
cmp
add
xor
iret
movsb
pop
in
push
ss
mov
std
pop
push
fistps
in
xchg
xlat
insb
pop
push
out
or
mov
inc
ja
out
in
or
dec
xchg
cli
std
or
fstpt
mov
in
inc
out
cmc
xchg
or
scas
or
outsb
fldcw
or
push
pop
out
dec
push
in
sub
das
stos
dec
xchg
inc
pop
fidivs
mov
mov
sub
lahf
data16
cmc
scas
sahf
push
jge
sbb
add
mov
imul
cld
add
sub
jle
ljmp
aam
hlt
mov
leave
loopne
sti
or
push
rcl
mov
or
dec
sub
or
or
lods
lcall
fisttpl
hlt
jg
jg
stos
loope
div
lahf
repnz
add
add
out
fninit
sti
fucom
add
imul
arpl
cmc
out
shlb
or
jmp
out
cld
ljmp
insl
jmp
or
movsb
sub
out
pop
add
or
sahf
loop
ret
or
lcall
xlat
lds
leave
out
push
mov
jnp
mov
mov
loope
sub
lahf
imul
lods
loop
scas
fsubrp
in
cmpsb
out
cmpsl
ljmp
add
add
or
jecxz
or
jecxz
cmc
out
out
add
or
fcmovu
jne
data16
maskmovq
imull
xchg
jbe
mov
fisttps
mov
imul
jle
scas
in
repz
pmaddwd
or
aad
mov
push
push
fldenv
loope
add
xchg
idivl
add
xchg
xor
cmpsb
iret
fisttpll
popa
and
ret
lea
mov
out
imull
js
mov
jg
push
test
out
test
inc
lods
aam
jbe
sbb
js
pop
inc
lods
call
jae
lods
inc
shrb
ret
sbb
adc
call
push
outsl
and
xchg
fcmovnbe
push
jge
test
fimuls
add
cld
mov
call
lods
add
loope
imul
call
adc
cmp
lods
lock
push
cs
jl
outsl
call
mov
in
fsub
sub
or
lds
mov
xchg
push
mov
jge
or
outsl
bnd
pop
int
popf
push
cld
fildl
test
sub
cmp
leave
sub
in
imul
stc
inc
out
push
push
ret
cmp
sbb
cmc
clc
test
jg
in
movsl
sarb
cld
ds
cs
xor
fistps
sub
xchg
pusha
out
jg
incl
sbb
dec
jb
push
or
mov
rcr
or
sbb
sbb
sbb
lahf
push
vpmullw
sub
mov
cmc
mov
sub
xchg
mov
in
or
push
rsqrtps
add
ljmp
and
xchg
push
push
sub
fxch
lock
or
fwait
cmp
cmpsb
int3
xor
dec
sub
loop
stos
mov
repnz
lret
iret
cmc
ret
shlb
sub
cmp
push
pop
jmp
and
ret
dec
or
inc
popa
notl
dec
data16
push
add
cld
mov
popa
xchg
mov
lret
and
fistpl
cmc
xor
mov
ja
push
dec
cmp
loope
shlb
adc
scas
iret
adc
fisttpll
jecxz
stos
pusha
sbb
clc
ret
jp
stos
mov
push
pop
out
fisubl
cmp
popf
sbb
addr16
cwtl
mov
out
push
pushf
out
xchg
dec
mov
aad
js
fcomi
xchg
call
scas
es
idivl
push
testb
cmc
cmp
int
adc
shlb
inc
fistps
rolb
pop
xchg
call
jnp
and
je
push
jmp
or
or
mov
sbbl
cmp
sahf
aad
imul
sarl
aad
scas
push
or
push
inc
arpl
xchg
adc
nop
pop
fists
popa
imul
mov
xchg
add
aad
cli
popa
bound
ljmp
out
imul
add
lret
push
pop
iret
cmc
mov
add
jbe
add
aad
dec
ljmp
xchg
jnp
stos
pop
inc
lods
cli
push
xchg
sbb
sub
inc
in
sub
call
daa
pop
and
adc
add
and
mov
add
stc
cld
lods
jp
xchg
ficoms
pop
cld
or
rorb
pop
ret
push
add
imul
inc
stc
mov
mov
jns
sbb
ds
cwtl
or
mov
lcall
pop
inc
xchg
mov
xchg
cmc
push
pop
int3
loope
jl
cmp
jno
or
pop
das
arpl
xlat
mov
push
lea
jae
jbe
pop
cmp
push
lods
jb
jne
cmp
cmc
sbb
jae
sub
aam
cmp
in
or
imul
jnp
dec
outsb
sahf
ficompl
notb
push
aad
pop
adcb
dec
imul
xor
jmp
add
sti
mov
std
sarb
xor
dec
ret
lds
add
incb
lret
dec
xor
sti
fidivrs
lds
and
and
cmpsl
aad
jl
lods
lahf
cmc
sub
rorl
mov
pop
jge
es
aad
mov
mov
adc
out
cld
add
cmc
int3
call
stos
jne
ret
pop
std
pop
jne
push
addr16
test
jmp
xchg
mov
push
mov
xchg
sub
mov
sahf
mov
shll
and
cmc
xchg
gs
fnstsw
adc
sbb
fwait
out
inc
push
inc
cld
and
loopne
jmp
das
stos
xchg
aas
jb
xor
mov
rcll
mov
out
pop
int
shr
adc
xchg
in
loopne
mov
dec
adc
pushf
add
or
pxor
and
xlat
lahf
jae
into
add
int3
aad
pop
out
and
cmc
mov
and
sti
and
movsl
adc
cld
sub
insl
dec
cmpsb
addr16
inc
adc
add
imul
and
dec
cli
rcrb
subl
aad
cli
fmull
jge
rcll
pop
lahf
ret
stos
xchg
imul
aad
cmp
loope
out
ss
filds
fimuls
cmc
les
add
push
hlt
or
xor
xchg
fdivrl
pop
xor
insb
mov
or
popa
inc
outsl
mov
xchg
cmpsb
and
mov
or
inc
addr16
jecxz
sti
push
repnz
test
fdivrs
or
insb
xchg
mov
call
push
lret
fsubrp
icebp
adc
add
jmp
std
call
add
push
push
testl
mov
stos
add
and
cmp
mov
ret
pop
maskmovq
notl
pop
push
mov
mov
out
mov
mov
stos
mov
mov
fists
ds
not
push
push
push
insl
loope
mov
mov
repnz
xchg
imul
lods
cld
jle
mov
push
testl
push
and
pop
xchg
out
push
cmc
jp
out
loop
cmp
jmp
mov
imul
add
xor
cld
xchg
out
add
aas
ds
popf
aad
scas
mov
rcll
pop
pop
or
or
jp
fisttpll
jecxz
xchg
imul
stos
pop
aad
push
test
cld
mov
lods
ldmxcsr
dec
add
fisttps
cmpsb
fsubp
pop
jno
pop
dec
repnz
sbb
insb
test
or
std
mov
addl
int
cmc
pushf
push
std
enter
fidivrs
xchg
mov
out
cs
lahf
pop
or
lock
ss
pop
adc
xor
neg
ffree
loopne
push
repz
scas
dec
and
in
into
call
shrl
mov
lcall
jmp
and
add
sbb
out
adc
lods
mov
dec
int
mov
pop
jne
mov
mov
xchg
mov
pop
clc
sbb
stc
xchg
out
test
push
iret
out
xchg
push
push
in
out
fimuls
loop
daa
movsl
daa
out
or
jmp
int
xchg
les
in
mov
outsb
xchg
aad
imul
push
cmc
mov
int3
out
pop
xchg
gs
or
xlat
push
push
cmp
mov
sbb
add
or
rorb
js
pop
stos
jp
mov
dec
fiaddl
mov
dec
aam
push
out
aad
sti
mov
dec
or
testb
jne
aad
and
mov
push
sub
sub
sbb
sti
outsl
inc
std
out
mov
int
push
lea
mov
jg
push
lahf
push
add
sub
gs
push
push
rol
nop
jmp
notb
daa
xchg
push
sti
pop
scas
jno
jmp
call
popf
outsl
jge
pop
cli
push
fcmovne
cmc
pop
and
add
mov
ss
mov
inc
pop
in
std
aad
push
xchg
push
xor
dec
xor
xchg
adc
scas
std
dec
int3
mov
jno
je
dec
fdivp
mov
push
aad
xlat
std
lcall
jmp
out
xchg
in
sahf
sti
aad
cmc
fmull
idivb
or
cmp
int
push
pop
add
cmc
xchg
mov
push
jge
sub
pop
punpcklwd
popa
push
lea
scas
fcmovnbe
adc
xchg
add
push
pop
mov
and
mov
mov
add
sbb
xor
es
cli
lcall
shll
aaa
xchg
and
call
mull
push
jo
push
xchg
xchg
pop
cli
jecxz
mov
pextrw
cltd
std
mov
fistps
cmc
jae
adcl
jnp
mov
jne
hlt
test
push
aam
movsb
mov
pop
xchg
cltd
lods
mov
cld
xor
pop
mov
arpl
xor
mov
arpl
xchg
xor
mov
into
jl
push
dec
test
das
cmc
dec
cmpl
sldt
das
aam
dec
insb
and
popa
or
sbb
std
cs
popa
call
push
push
add
mov
notl
pop
js
pop
jp
ds
jns
pushf
scas
push
mov
mov
out
push
cmc
adc
lea
inc
mov
or
xor
les
rdmsr
inc
pop
ja
sub
sub
adc
sti
jge
pop
aad
adc
xchg
out
rcr
popf
lret
jge
mov
add
adc
pop
int
popa
pop
iret
aad
cli
sub
pop
pop
push
mov
sbb
add
gs
push
pop
pop
xchg
pop
pop
jp
jmp
xchg
push
push
dec
scas
mov
fistpll
inc
or
aam
dec
leave
add
out
xlat
mov
dec
fucomi
jp
int
in
push
bnd
enter
mov
mov
int
xchg
pop
imul
test
mov
repz
pop
inc
ret
fs
add
or
adc
dec
cmc
imul
xchg
movb
int
mov
imul
xchg
pop
cmp
ljmp
insl
out
sbb
inc
lahf
cmc
shlb
pop
sub
jle
das
push
andb
sti
lret
into
jl
in
jg
insl
xchg
jge
int
not
fcoms
int
inc
xor
push
sub
cltd
ror
jno
or
adc
test
jmp
inc
or
shrl
fstp
ror
cmc
adc
add
loop
outsl
int
push
fimuls
add
out
adc
or
cmp
and
sti
or
test
cmc
adc
cs
icebp
xchg
xor
stos
ficomps
sub
xchg
pop
idivl
jns
pop
fidivs
arpl
sbb
mov
lds
out
adc
cmp
iret
mov
fs
ret
xchg
nop
mov
push
push
push
fxch
push
mov
in
sbb
into
lcall
pop
insl
leave
or
pop
mov
cmc
mov
add
cmpsl
into
loopne
loope
lods
fistps
test
movsl
decb
and
faddp
imul
dec
dec
cs
lods
into
mov
or
outsb
adc
push
lcall
sub
movsl
out
cwtl
push
lods
lds
mov
incb
daa
fisttpll
aad
push
in
adc
mov
fnstenv
fimull
lods
or
in
cli
push
xchg
cmp
push
xchg
sbb
cwtl
mov
les
or
sbb
stos
iret
dec
aad
shlb
arpl
out
dec
cs
lret
jp
or
jae
cmp
pop
mov
sahf
leave
push
push
push
bound
inc
jb
mov
lods
xlat
mov
mov
add
shll
sub
and
add
roll
fiadds
in
std
pop
mov
cld
cmp
pop
mov
iret
pop
jnp
xchg
dec
outsl
push
add
lahf
cmp
pop
outsb
jecxz
aad
rolb
insl
jns
cmp
dec
cmc
hlt
adc
add
add
fadds
mov
popa
sub
enter
dec
out
sbb
jmp
cmp
in
or
sub
cli
call
jmp
sti
pop
arpl
cmp
out
test
or
jmp
sahf
sbb
iret
pusha
xchg
pop
sbb
call
repnz
adc
or
aad
cmc
pop
fsubrl
scas
or
push
pop
add
xchg
dec
pushf
mov
mov
dec
aad
xor
out
cli
mov
sar
add
dec
lods
seto
jg
in
cmpsb
setne
or
outsb
les
cwtl
add
xchg
scas
orl
ret
pop
outsb
das
fdivrs
mov
rolb
sub
push
or
cld
pop
idiv
pop
xchg
jnp
dec
out
mov
jb
adc
or
out
call
mov
push
jp
push
jne
in
xorb
in
lods
imul
std
xor
subl
idivl
add
sti
aad
or
push
sbb
fadd
adc
jmp
inc
mov
xlat
jmp
out
call
jb
pop
lds
dec
stos
cltd
les
test
fsub
jg
xchg
call
clc
mov
push
into
sbb
sti
cmp
or
loop
jno
ljmp
stc
jmp
mov
loop
mov
mov
pop
mov
fs
add
cld
and
neg
shl
jle
pushf
jmp
aad
cld
add
push
cmpsb
data16
mov
adc
cmc
mov
jnp
imul
ds
std
aad
add
jecxz
mov
movsl
lea
push
xchg
inc
idivl
dec
clc
cwtl
lods
lock
jge
or
shr
pop
or
push
sbb
lahf
fcoml
and
ffree
adc
in
scas
sti
data16
out
cmc
add
movsl
or
test
sti
ljmp
ja
nop
mov
sahf
insl
dec
push
rcl
sti
into
sti
push
int
lods
repnz
cs
out
cwtl
inc
or
scas
stos
fsubp
add
sti
jecxz
add
div
push
push
pop
pusha
xorl
sbb
dec
fadds
xlat
test
adc
inc
xchg
or
xchg
test
mov
mov
popa
push
ja
bound
cs
or
shll
fildll
inc
mov
fimuls
call
cmp
pop
xchg
movsl
lods
push
arpl
ret
loope
xchg
xchg
inc
movsb
aad
jae
divb
adc
xchg
cmp
out
add
movsb
stc
enter
push
aad
push
popl
repz
dec
dec
xor
jp
mov
jg
push
sub
out
mov
cmp
sar
les
dec
out
push
sbb
fldt
xchg
std
and
inc
or
cmp
pop
cmpsb
cmp
dec
flds
sbb
and
mov
cmp
mov
jnp
andb
xchg
call
adc
sahf
pop
sbb
pmaddwd
in
pop
mov
mov
xchg
sub
push
lods
or
push
xchg
pop
int
add
add
dec
or
iret
pop
ljmp
cs
rcll
lds
stos
popf
add
or
cmp
inc
dec
jge
nop
jb
pop
repz
adc
xor
in
roll
dec
stos
or
jp
push
iret
pop
stc
add
gs
dec
rol
mov
mov
sti
pop
dec
sub
xor
push
lods
lock
lock
jp
xor
into
fdiv
insl
imul
mov
scas
int3
jmp
insb
js
cmc
scas
xlat
lods
shll
pop
std
pop
mov
test
jmp
aas
lods
jne
pop
push
and
jbe
dec
psubq
xchg
pop
or
mov
xchg
xlat
xlat
lea
push
fldt
dec
imul
loope
daa
mov
inc
mov
or
xchg
jmp
mov
in
imul
sbb
mov
mov
jo
call
and
dec
xchg
iret
out
pavgw
jmp
fucomi
pop
int3
aad
loopne
sub
lret
dec
jecxz
cld
xor
and
notl
repnz
or
in
pop
int
scas
pop
cmc
ss
jl
cld
sub
js
mov
or
das
inc
mov
jl
faddl
jno
stc
test
mov
or
imul
movsl
cs
lods
cmp
push
scas
out
jmp
cmp
arpl
xchg
popa
dec
into
fsubrp
cld
imul
out
mov
push
xlat
fndisi(8087
jne
mov
push
xchg
xchg
or
into
ss
jbe
mov
push
paddd
int3
dec
out
cmc
or
out
and
xchg
test
xchg
int
xor
sbb
push
stos
sub
scas
out
xchg
cli
pop
stc
mov
add
mov
adc
push
sti
icebp
push
rol
js
cmc
cmp
mov
mov
or
lds
pop
mov
mov
roll
das
les
push
out
loope
xchg
sbb
mov
repz
ror
movsb
jns
cli
or
sbb
out
je
add
dec
mov
pusha
in
test
mov
inc
or
cltd
fnstsw
pop
inc
aaa
push
xchg
jmp
mov
imul
dec
pextrw
xchg
push
jae
lods
mov
test
es
pop
fs
aam
or
movsl
pop
loope
push
out
sub
in
jns
popf
push
add
mov
mull
cld
jmp
in
imul
fistl
sub
jl
inc
mov
jb
pop
push
jle
into
fldenv
arpl
stos
cmc
sub
and
add
lret
iret
or
out
pop
movsl
movsl
or
mov
sub
and
fisubl
pop
add
loope
jae
mov
enter
jne
add
xchg
mov
std
mov
sti
lahf
call
sti
loope
or
cmpsb
loop
push
cmp
icebp
mov
add
daa
sub
mov
insl
cmp
lock
loop
cmpsl
dec
mov
data16
jmp
or
pop
call
loopne
mov
xchg
iret
jmp
cli
cmp
cmp
and
jns
cmp
fnsave
xchg
mov
add
pop
fs
pop
mov
popa
clc
cmpb
jb
testl
lods
add
jl
and
cmp
aad
movsb
or
stos
in
rclb
inc
testb
filds
xchg
in
fwait
jno
loope
dec
add
shrd
enter
mov
push
cld
xchg
push
adc
mov
xchg
in
fldt
and
aas
jnp
movsb
mov
pop
fsubp
mov
dec
and
jl
cs
jge
mov
mov
jmp
sbb
mov
cmp
fnstsw
outsl
call
mov
insb
testl
inc
scas
imul
std
cmp
out
cli
mov
aad
mov
in
aad
push
or
shrb
dec
jle
dec
in
adc
push
loopne
add
data16
std
iret
sarb
lods
pop
shrb
bts
pusha
movl
xor
sbb
sub
pop
popa
pop
xor
dec
sub
sub
push
xor
add
lods
ss
xor
stc
loope
push
mov
das
push
clc
mov
inc
add
into
xchg
cwtl
fmull
mov
dec
jnp
ret
mov
cmp
mov
inc
and
enter
into
fisubrl
not
movsb
stos
das
or
mov
cli
dec
mov
into
aam
push
addr16
inc
pop
mov
push
pop
sub
out
mov
cmpsb
cli
std
xchg
pop
lea
or
into
scas
pop
mov
pop
mov
das
out
xchg
rorl
fnstenv
stos
cmpsl
push
xchg
lods
push
gs
js
mov
adc
jno
and
into
sub
mov
popf
pop
jne
rclb
mov
psubusw
jmp
mov
cmc
dec
mov
mov
lods
stos
out
movl
push
jnp
add
pusha
dec
push
push
xor
jbe
int
xchg
mov
mov
and
orb
psllq
into
mov
push
ljmp
mov
pop
dec
sbb
outsl
pop
push
jge
lods
insl
add
jnp
dec
push
int
sbb
test
in
and
xlat
sbb
pop
out
or
jmp
bound
xor
add
pushf
mov
xor
std
mov
ret
loopne
add
xor
jb
repnz
jbe
test
or
call
add
repz
test
xlat
push
or
cltd
pop
je,pt
insl
pop
pop
pop
jecxz
dec
sub
aad
sbbl
or
outsb
pop
jge
adc
or
mov
jns
jmp
or
inc
jns
into
and
xchg
adc
mov
sbb
sub
mov
cmpsb
std
mulps
cmp
add
xor
pop
in
sub
sbb
sub
jp
cmp
cmp
divl
push
inc
in
out
jno
ljmp
add
dec
bnd
add
add
add
push
cmpsl
inc
jmp
xchg
divl
call
aad
inc
ror
arpl
lcall
push
out
cmc
insl
inc
idivb
int3
out
cs
cs
subl
adc
stos
lcall
pop
mov
add
popl
and
dec
loop
cmpsb
fisttps
push
push
fidivl
sahf
mov
out
fcomip
in
adc
int
aad
insb
sub
jg
cld
xor
pop
xchg
ficoms
ja
rorl
cld
inc
mull
cld
mov
pop
test
mov
cmp
push
add
cli
subl
stos
mov
inc
adc
out
cmpsl
adc
int
loopne
loope
or
push
idivl
or
mov
mov
bound
jmp
arpl
cmpsb
lock
push
add
or
lea
sti
or
add
pop
iret
jmp
pop
out
xrelease
in
stos
test
mov
jmp
or
add
adc
sbb
cld
ljmp
out
and
clc
mov
sub
imul
cmp
xchg
xor
pop
aaa
dec
popa
dec
add
popf
xor
adc
loope
aaa
push
stos
popf
inc
in
out
nop
lods
outsb
push
fisttps
ret
iret
pop
loopne
add
cmp
jmp
scas
push
pop
mov
mov
fldpi
cmc
cmp
ficomps
out
cmp
mov
or
jp
es
int
incb
aad
fimull
mov
mov
sub
flds
push
int
jg
call
push
add
out
movsl
or
add
je
outsl
lods
cmp
cli
xor
sub
in
mov
mov
jae
mov
arpl
or
testl
mov
push
lahf
inc
in
sub
lds
call
mov
stc
ljmp
fsts
outsb
packuswb
or
cmpsb
pop
mov
inc
push
pop
fs
scas
or
ret
test
jecxz
jge
pushf
idivb
ds
mov
in
fxch
js
test
call
dec
aam
or
inc
out
adc
repz
xchg
imulb
xor
mov
outsb
jp
sahf
mov
je
adc
enter
pop
or
push
mov
insb
inc
lret
loopne
iret
add
mov
das
lcall
in
sbb
xchg
out
cmp
mov
in
xorl
lods
jecxz
dec
pop
xlat
adc
sub
fnstsw
call
pop
cmp
movsl
aad
push
jmp
xor
aad
mov
add
jge
push
push
mov
lea
add
ljmp
mov
pop
jnp
out
dec
jbe
xchg
mov
cld
or
out
addr16
jle
push
mov
or
inc
cld
xchg
jge
cmpsb
jb
clc
pop
lods
imul
or
rol
xchg
pusha
outsl
push
in
jp
testb
sub
pop
push
dec
xchg
push
cmp
mull
push
iret
lods
add
in
jno
mov
xchg
cwtl
mov
scas
and
addr16
add
cmc
xchg
or
test
cld
aad
push
cmp
or
push
mov
pop
inc
xchg
add
pop
mov
dec
xchg
fisttpll
xchg
je
pushl
add
mov
pusha
dec
cs
loop
rolb
test
inc
icebp
lock
insb
test
or
clc
cwtl
dec
adc
lods
bound
mov
xchg
in
cwtl
push
jne
jmp
jle
jecxz
lods
mov
push
decl
or
pop
popf
mov
push
xchg
inc
jge
cmpl
mov
push
jg
in
pop
mov
add
sbb
dec
cltd
mov
add
push
sbb
mov
scas
mov
sub
mul
sub
shll
and
mov
cld
fbstp
cwtl
test
addr16
mov
fsubs
jnp
lahf
cld
push
and
cmpsl
jae
mov
push
inc
mov
cmpsb
aad
inc
xchg
mov
cmp
lods
out
inc
fsubl
pusha
push
popf
sub
in
pusha
cmp
rcll
add
xor
push
int
shlb
and
or
pushf
dec
add
addr16
aad
aas
jnp
sub
xchg
nop
sub
call
inc
mov
pop
dec
xor
xchg
jl
testb
daa
mov
mov
ficoms
pop
into
aad
xor
out
and
js
in
imul
mov
mov
sti
pop
aas
cmp
insb
iret
add
pushf
ret
arpl
icebp
into
jp
and
shlb
testb
inc
push
sub
cmp
dec
xor
jmp
fists
nop
adc
add
mov
mov
int
repnz
call
lret
xchg
loopne
dec
pop
lock
cli
repnz
aad
into
pop
mov
call
mov
mov
jns
push
mov
mov
arpl
into
stc
test
jge
nop
sbb
mov
cmc
xchg
dec
push
sbb
mov
push
push
mov
pusha
cmc
lock
pop
lods
cmp
dec
int
jp
sub
pop
xorb
popa
movsl
xor
lea
mov
andl
stc
loope
repnz
or
call
jmp
dec
mov
inc
out
push
mov
jge
or
aad
add
push
ss
popf
push
or
cmc
fmull
mov
fwait
imulb
fsub
ja
sbb
push
repnz
decb
cmp
xlat
nop
jl
mov
and
cld
xchg
test
aad
sub
insl
sbb
xchg
aad
add
push
negl
call
or
leave
aaa
std
imull
xor
fcmovnb
jnp
lahf
cmpsl
sub
cmp
ret
adc
inc
aad
test
sbb
add
insb
fistl
xchg
aam
sub
push
icebp
aas
and
lods
popa
rclb
or
cmc
repz
jae
ret
arpl
push
mov
mov
stc
cmp
push
lahf
mov
jl
lea
or
or
ret
mov
jne
icebp
sub
lock
sub
in
mov
lcall
sbb
fs
mov
stc
mov
pop
jg
stos
push
int3
mov
test
mov
popa
add
jge
hlt
dec
mov
leave
fcoms
sbbl
cmp
inc
sub
xor
pop
xchg
pop
andb
pushf
sti
adc
fstp
sub
inc
lods
out
push
mov
popa
pop
push
fcmovbe
mov
mov
fnclex
popa
rorl
movsl
sub
bts
or
out
mov
mov
sbb
add
stc
lock
jb
or
rorl
inc
add
call
sbb
imul
push
and
enter
movsb
mov
dec
add
imul
jnp
or
lock
or
fldt
test
lret
jp
popf
iret
enter
sub
ds
xchg
mov
mul
cmovnp
xor
jmp
jno
in
loopne
and
xor
imul
add
cmp
fldl
jae
dec
add
push
in
cmc
xor
jne
cmp
sahf
mov
iret
cmc
sbb
and
inc
adc
in
and
jnp
lret
setbe
push
jmp
std
jae
movsl
aad
cmp
push
insl
add
mov
js
push
cmp
ss
loopne
not
mov
imul
push
dec
sbb
xchg
mov
aam
xor
mov
mov
mov
or
fnsave
sub
cmpsb
jp
push
mov
loope
push
push
jge
dec
or
push
int3
out
icebp
lea
jns
dec
push
int
lods
or
movsl
imul
out
jbe
call
test
or
pop
cmp
add
inc
insb
jle
pmaddwd
mov
sti
push
rol
sti
cld
push
adc
test
mov
movl
idivl
ret
icebp
push
popa
sbb
js
testl
pusha
shlb
xchg
cmpsl
lret
test
in
cli
mov
jmp
or
push
dec
mov
loopne
or
out
out
pushf
insl
bnd
sbb
push
pusha
or
push
sbbl
mov
dec
cli
stc
cmp
notb
jl
fistl
cmp
outsb
sbb
cmp
andb
imul
dec
or
test
mov
ret
pop
jmp
fcomi
test
xchg
stos
incb
jge
lods
icebp
shl
bound
jmp
lods
push
js
mov
popa
rcl
in
jp
loop
imul
filds
cmc
aad
cmp
dec
xchg
pop
jl
insb
cs
jbe
dec
popf
push
sti
jne
jg
clc
lahf
sub
loop
test
xchg
ja
aad
lcall
or
lahf
out
bound
in
fdiv
sub
sub
cmc
out
sbb
mov
push
adc
mov
jns
hlt
out
fsubl
dec
or
dec
enter
cmp
or
dec
fimuls
push
push
int3
out
jne
hlt
addl
xchg
aad
imul
dec
push
adc
data16
int3
jno
mov
or
push
jmp
call
jns
cmp
sarl
fimuls
sbb
add
aad
mov
cmpsb
mov
int
repnz
push
pop
sti
add
jmp
and
add
lods
sub
push
cli
ljmp
mov
sub
lret
dec
and
movsl
hlt
push
fistl
lahf
clc
gs
jecxz
sbb
cmp
out
mov
ret
out
bound
jbe
mov
mov
or
lods
sub
push
aad
ror
lds
nop
cwtl
lods
out
push
push
les
dec
addb
mov
cltd
dec
lea
or
lahf
out
add
pop
dec
mov
and
int
jle
dec
or
cs
fsub
out
dec
outsb
inc
sbb
leave
cmp
imul
setne
pushf
and
dec
cmc
gs
popf
in
adc
stc
roll
xor
out
fcompl
pop
mov
loopne
sbb
jg
mov
aam
xorl
out
and
out
mov
sub
in
cmpsl
cmpsl
mov
mov
sub
pop
jb
push
imul
sub
inc
das
repz
mov
cld
or
scas
dec
xchg
sbb
xor
dec
xchg
clc
cmp
aaa
sti
mov
andl
pop
data16
jmp
xor
add
mov
nop
aad
fsub
dec
or
xchg
adc
movsb
loopne
test
mov
cld
dec
dec
xchg
fstpt
inc
imul
orb
call
pop
pop
mov
cmc
push
xchg
push
or
popa
mov
sub
jle
jmp
movsb
punpckhdq
leave
cmp
cmp
outsl
out
add
mov
jmp
pushf
cmp
imul
and
mov
stc
movsb
dec
mov
dec
jb
icebp
nop
inc
cmp
movb
or
inc
and
mov
pop
jecxz
stos
icebp
mov
xchg
fwait
fwait
add
ds
aaa
loopne
jne
dec
add
inc
cmc
scas
jns
loopne
mov
insb
fistl
push
xor
fcmovnbe
pop
sub
jns
cmc
mov
aad
cmp
enter
and
sub
aad
mov
dec
fstps
push
push
into
leave
aam
xor
enter
fdivrp
lret
cld
jmp
push
cmp
mov
jb
gs
cmp
mov
rclb
call
jp
and
and
fnstsw
sahf
repnz
jnp
pop
test
das
testl
aaa
pop
mov
add
and
adc
jae
pop
js
mov
jecxz
dec
xor
shll
test
pop
es
push
mov
lock
in
mov
testl
andb
cmp
popf
sbb
test
je
jmp
add
outsb
pop
mov
and
adc
cmp
ret
test
xor
scas
mov
cld
add
xchg
jle
dec
loop
sub
add
ror
cmc
jb
mov
cs
rcl
aam
add
repz
pop
mov
add
adc
mov
cli
movb
inc
lds
jecxz
std
aad
cmp
or
and
sbb
pop
sti
or
push
and
jmp
in
leave
mov
mov
repnz
aad
xchg
lock
pop
push
mov
bound
jnp
movsl
iret
testb
movsl
stc
cld
insb
int
cmp
mov
or
push
mov
push
inc
xor
and
lret
mov
push
xor
test
aaa
push
sbb
sbb
stc
ret
mov
int
ljmp
adc
repnz
popa
arpl
jmp
or
rcl
aaa
push
dec
xor
outsl
xchg
es
loop
mov
test
jle
outsl
jecxz
insb
xchg
test
pushw
je
outsl
shll
sbbl
xchg
mov
jmp
fmul
add
fdivrs
lods
jmp
hlt
sub
xchg
pop
fimull
dec
mov
inc
insb
out
adcl
int3
aas
pushf
dec
daa
fildl
push
cltd
adc
das
sub
in
test
cmc
insb
dec
test
lods
test
repnz
mov
aad
cltd
mov
push
vmwrite
fildll
fs
mov
jae
pushf
adc
pop
dec
adc
mov
fsubrl
jg
sbb
xchg
add
stc
test
xlat
cs
cmp
inc
push
aad
jns
fildll
mov
xor
aaa
test
add
insb
push
loopne
std
lret
dec
in
xlat
je
mov
mov
xor
xchg
js
xchg
pop
repz
stc
jp
stc
scas
insb
pop
xchg
pop
pusha
in
je
adc
mov
or
adc
add
repz
push
lahf
bnd
push
sbb
test
js
ljmp
clc
inc
jge
mov
cmovns
sub
inc
int
loop
jmp
or
push
divl
fsqrt
dec
in
mov
fndisi(8087
imulb
jle
add
cmp
xchg
adc
mov
mov
pop
shlb
fcomps
xor
shll
xor
pop
outsl
nop
push
aas
fimuls
lahf
jno
mov
mov
pop
aad
inc
pusha
scas
cwtl
lods
aam
or
sub
mov
adc
dec
pop
sti
xchg
fwait
sbb
or
pop
popf
divl
fistpll
lods
jb
pop
jb
xor
add
ss
addr16
movsl
pop
sbb
ret
nop
push
pop
scas
dec
xchg
cs
mov
jge
fldl
or
pop
mov
loope,pt
add
sub
cli
aas
stos
in
dec
push
div
loopne
dec
loopne
enter
aad
pop
or
cmc
or
pop
cmc
sub
push
mov
imul
and
cmpsl
mov
pop
fisubl
and
cli
shrb
mov
ljmp
push
ss
mov
js
notl
call
dec
push
jnp
xchg
mov
out
mov
add
add
jns
mov
in
inc
repnz
push
lods
test
dec
out
jmp
sub
scas
cmpsl
dec
test
fsubp
dec
pusha
rorl
mov
nop
loopne
movsb
and
iret
movb
pop
jl
or
jmp
test
enter
test
fcomi
xor
mov
jns
test
xor
fistl
jne
jg
movsb
cmp
inc
cld
addr16
sub
cmpl
adc
push
std
cmp
add
cmp
sub
stos
hlt
cmpsl
in
inc
fcom
cld
or
add
cmpsl
push
adc
call
clc
add
cmc
mov
jne
out
mov
cmp
mov
xor
sbb
out
jno
cmp
jge
dec
sub
lds
dec
push
pop
call
in
clc
mov
add
jp
or
in
iret
dec
nop
xor
jae
call
scas
cmp
mov
xchg
scas
jns
pop
lret
inc
in
cmp
pop
sub
mov
jl
addr16
cmp
or
fdivl
or
adc
dec
sub
pop
or
dec
popa
cs
sub
jg
push
rolb
aaa
orb
push
sti
stos
lcall
mov
jg
fildll
mov
cmc
push
push
jl
jmp
or
lret
adc
dec
dec
incl
icebp
xor
add
cmp
pop
shrl
iret
jmp
iret
cmpsb
xchg
scas
repnz
fiaddl
sbb
dec
xchg
sbb
mov
lcall
or
mov
setne
fimuls
mov
fsincos
add
mov
adc
sbb
mov
sbb
jnp
test
sbb
sub
insb
jnp
test
or
sti
jnp
fdivp
arpl
push
clc
dec
dec
jge,pn
call
shll
in
and
out
mov
cmpsb
imul
stc
or
pop
mov
xchg
push
mov
push
sbb
push
cmp
pop
add
popf
lret
mov
jbe
cmc
sbb
xchg
outsl
mov
ja
pusha
fsubs
xor
ret
jns
adc
sbb
stc
dec
stos
fistps
shrb
fisubl
mov
rclb
leave
gs
mov
xchg
and
mov
in
insl
add
or
push
mov
add
sti
fnstsw
xchg
ret
loop
in
stos
cmc
jl
cltd
jl
int
cld
jp
mov
in
ret
inc
ja
leave
or
je
xchg
jne
or
mov
push
adc
add
jne
cmc
cmp
into
jge
repz
push
bound
test
fstp
testb
mov
and
insb
subl
mov
inc
std
lea
dec
cli
mov
push
in
mov
lds
daa
insl
and
stos
sti
xchg
xchg
lret
cmp
pop
xchg
jle
js
cmpsb
cmc
out
aad
jge
jmp
add
into
cmp
iret
mov
xchg
mov
dec
std
sub
gs
into
ss
inc
mov
cmp
out
imul
sbb
mov
pop
mov
imul
mov
std
shrl
or
idivl
mov
movsb
test
popa
aad
in
push
mov
fildll
and
cmpsb
xor
dec
cs
jecxz
insl
loope
rclb
pop
or
mov
and
js
int
dec
sarb
test
xlat
lods
push
jnp
fcmovne
xor
test
in
out
sub
jg
mov
das
xchg
xchg
cmove
pop
and
xchg
adc
dec
push
jns
jmp
leave
stos
mov
cltd
xor
jp
sbb
xchg
adc
into
popa
aam
sub
test
jge
dec
out
fsubrl
int3
pop
loopne
lahf
loopne
pop
lcall
int
jnp
cmp
sti
sub
fimuls
mov
or
cmc
mov
fists
fstps
pusha
mov
cs
les
push
sub
or
mov
and
jl
jp
fcomip
adc
dec
jl
dec
lods
addr16
cmp
add
sbb
inc
add
leave
ljmp
jmp
push
in
cmp
sbb
andl
and
push
das
repz
popl
push
add
shrb
fisttps
repnz
ret
mov
shrl
inc
std
adc
cmpsl
sahf
dec
in
cmpl
fldcw
xchg
jmp
pusha
fucomi
lods
stos
mov
pop
jns
add
bound
hlt
shlb
pop
jbe
jmp
pop
lods
sbb
mov
and
cmpsb
mov
inc
iret
jnp
fwait
out
dec
pop
push
scas
cmc
imul
jecxz
lret
push
push
lcall
outsb
adc
mov
js
dec
jl
test
xorl
sbbl
mov
cmp
pop
shlb
lret
testb
jp
leave
leave
clc
cli
jne
jmp
xor
cs
push
hlt
mov
xchg
mov
adc
lret
mov
and
mov
cs
loopne
cmpsb
adc
jp
in
sub
inc
lcall
fnsave
cmp
add
in
aam
mov
push
mov
int
sub
mov
fwait
or
xchg
rolb
mov
and
add
fildl
pop
lret
push
arpl
jmp
mov
jae
jnp
mov
push
and
fst
push
in
imul
data16
xchg
and
fcompp
xorb
pop
xlat
aas
and
stos
pusha
mov
jle
iret
js
xor
mov
mov
mov
out
mov
sahf
stc
scas
add
jge
hlt
in
cld
call
imul
mov
jns
popf
cmpsb
mov
pop
push
mov
jp
xchg
cmp
inc
xor
pop
push
dec
dec
imul
loopne
mov
loopne
fsts
int
xchg
mov
pop
icebp
xchg
loopne
mov
inc
sub
bswap
jg
mov
das
call
jl
into
sbb
mov
xchg
lea
add
and
or
daa
push
loop
add
mov
or
fidivs
loop
jp
mov
sub
dec
scas
xchg
lea
mov
push
mov
ljmp
lahf
mov
xchg
or
push
out
lds
rcll
movzwl
add
pop
jecxz
aad
inc
push
mov
push
or
push
pusha
adc
in
out
lods
nop
std
loope
cmp
js
fisttpll
inc
or
test
push
xor
dec
and
xchg
call
outsb
mov
pop
push
cmpsb
cmp
div
sbb
add
sub
sub
mov
pop
mov
stos
lahf
enter
lea
call
xor
in
imul
fistps
loop
mov
cmp
and
fisttps
jp
mov
xor
mov
add
adc
icebp
pop
dec
add
es
pop
and
dec
pop
sbb
fldenv
jns
jle
mov
or
push
adc
jge
push
mov
or
stc
add
das
sti
lret
add
xchg
popf
rorl
jl
addr16
mov
mov
cwtl
cmp
add
or
adc
js
dec
dec
stc
notl
jbe
imul
gs
xchg
adc
into
sbb
push
cmc
pop
lods
ss
jmp
sbb
jg
cmp
repnz
ds
jb
xchg
fcomps
ljmp
adc
mov
or
cld
xchg
and
cmc
push
clc
les
mov
push
fnclex
or
xor
adc
jle
add
imul
xchg
pusha
cmp
enter
inc
shrl
es
mov
mov
outsb
xchg
jl
cs
sub
sub
shlb
fwait
je
scas
cmp
ljmp
jp
or
adc
push
fsubrp
adc
aaa
loopne
dec
lea
jg
sub
cmp
mov
pop
cmc
stos
mov
and
xchg
xchg
imul
ficompl
sub
jp
fdiv
dec
mov
test
push
mov
sbb
std
outsb
and
loopne
imul
fsubp
out
jmp
adc
pop
neg
scas
lret
sahf
sbb
jmp
mov
aad
nop
cmp
xchg
or
psadbw
lock
push
inc
test
or
push
inc
xor
xchg
push
test
xor
imull
shll
mov
jge
jg
fwait
mov
lcall
mov
shll
and
push
into
nop
loopne
xchg
stos
jmp
pushf
mov
jg
jge
in
lahf
adc
pop
sub
sub
repnz
shrb
in
imul
xchg
jno
dec
jge
aam
std
push
int
rorl
push
rcrb
jns
daa
mov
pop
test
lods
imul
mov
stc
test
pop
cwtl
in
insb
negb
cmc
cmp
and
mov
jns
inc
pop
push
mov
mov
cmp
imul
leave
xor
ret
dec
vmovd
xchg
call
cmc
aad
shll
mov
xor
push
mov
mov
push
sti
ja
divl
cmc
js
ja
adc
test
rolb
dec
jno
fwait
adc
mov
adc
sbb
aas
lock
mov
sub
xchg
or
inc
xchg
or
es
int
cmp
cmc
jecxz
xor
int
jge
int3
arpl
mov
cmpsb
add
loopne
cld
mov
fistpl
cmpsb
aas
in
lahf
lret
or
or
pop
pop
cmp
xchg
push
sbbl
or
or
punpcklbw
into
bound
jo
adc
subb
dec
and
into
dec
scas
jecxz
int
mov
shlb
pop
cs
stos
mov
into
cmc
pop
cmp
out
into
dec
sahf
cltd
add
xchg
jnp
push
adc
add
js
pop
cmc
int
mov
push
arpl
loopne
push
and
pop
xor
pusha
push
and
outsl
sub
mov
and
sub
in
ror
and
repnz
push
fwait
das
les
test
xchg
fstpt
sub
or
jns
cmp
cmp
sub
leave
outsb
and
loop
ljmp
push
shl
dec
sbb
jnp
jno
jmp
or
mov
bound
std
imul
bound
and
mov
out
mov
and
cmp
jecxz
cmp
jns
fistpll
enter
js
mov
xor
aas
cli
xchg
push
fwait
xor
ret
out
mov
fcompl
int3
scas
mov
pushf
inc
shll
jl
add
jle
test
popf
jecxz
dec
sbb
mov
push
mull
ljmp
shrb
out
xor
stos
mov
popl
fcmovu
jnp
jge
add
inc
xlat
xorl
bound
popa
mov
cmpsl
mov
in
push
mov
xchg
inc
mov
push
in
in
cmp
inc
dec
dec
dec
sbb
call
or
push
aam
mov
cmp
mov
pop
shlb
ljmp
sub
adc
or
jae
mov
add
mov
add
pushf
imul
xlat
into
cmc
adc
dec
aas
and
dec
das
add
jo
cmpxchg8b
lret
in
loopne
jecxz
insb
pusha
test
hlt
in
cmp
shr
cmc
shl
scas
xchg
add
cmp
pop
xchg
aad
fdivrl
scas
sub
faddl
inc
add
jmp
imul
or
cs
cmp
jnp
jl
movaps
pop
mov
pop
fbstp
dec
fildl
and
aad
mov
sbb
ss
cld
shl
cmp
loop
jl
or
xchg
and
xchg
cmp
idivl
adc
xor
fisttps
dec
fsubs
gs
mov
imull
push
jg
aam
xchg
test
out
xchg
mov
lret
test
fisttps
fwait
rorb
sub
scas
movsb
mov
out
fwait
cwtl
mov
pushf
or
in
lea
stos
dec
xchg
stos
dec
push
sub
dec
push
insl
mov
gs
jno
mov
inc
ds
and
ja
scas
out
add
es
cwtl
cmp
imul
jnp
mov
and
jl
push
inc
and
cmp
inc
cwtl
add
fsubl
dec
cwtl
and
fdiv
outsl
stos
ret
int3
cmc
pop
stos
sbb
ret
cmpsl
adc
cmpsb
lock
xlat
xchg
rolb
or
ret
ret
mov
pop
push
lcall
aaa
in
mov
jge
push
cmc
sbb
mov
int
sti
pop
mov
mull
mov
mov
jns
movsl
pop
in
mov
pop
cs
sbb
jb
cmc
inc
pop
xor
negl
mov
popf
icebp
jg
addl
or
xor
lds
fildl
jp
lcall
or
hlt
test
aad
dec
ds
imul
jle
aad
cmp
fucomi
mov
mov
faddl
inc
sub
mov
mov
cmp
push
lahf
cmpsl
mov
iret
add
lea
dec
aad
fprem
jb
cld
out
xlat
aad
pop
cwtl
jb
dec
test
inc
dec
push
js
ljmp
push
jo
sbb
mov
xchg
inc
std
dec
xchg
and
sub
orl
dec
repnz
mov
test
test
std
fbld
dec
loope
sub
cld
ljmp
das
lret
daa
xor
push
stc
jp
loope
addb
push
pop
repz
xor
jp
inc
dec
push
jnp
subl
adc
cmc
jbe
lret
ror
add
push
cltd
cmpsl
mov
or
loopne
dec
dec
aas
out
scas
pop
fisttpll
cmpsb
fimull
jae
jo
mov
push
int3
rorl
gs
inc
push
add
dec
push
and
aad
mov
invd
sub
loopne
cmp
sahf
cmp
add
mov
dec
sub
sbb
fcoml
xchg
ret
xor
push
push
adc
or
in
out
imulb
or
addr16
shrb
cmc
mov
push
mov
shr
fldt
or
leave
jns
mov
mov
fs
nop
dec
rorb
mov
push
lock
std
mov
arpl
ds
sbb
fwait
jno
out
fdiv
jns
je
aad
xlat
inc
js
test
sbb
mov
and
cmp
add
pop
xor
adc
gs
mov
adc
lods
out
in
mov
stc
adc
dec
stos
dec
lods
lods
push
rorl
lds
mov
sub
mov
imulb
jbe
dec
sub
gs
jmp
xchg
cltd
cmpb
sbb
cs
add
in
dec
and
mov
inc
in
aas
xchg
add
xchg
push
aad
push
sub
mov
dec
add
fistpll
pop
ljmp
adc
and
outsl
aad
int
cmpsl
cld
in
cli
outsb
jo
sbb
push
inc
int3
aad
adc
mov
xchg
sbb
or
jle
aad
loope
dec
ss
mov
out
mov
fs
mov
fdivrs
mov
aas
jecxz
cmp
add
repz
shl
sahf
lret
out
mov
add
jnp
mov
cmp
iret
sbb
std
cltd
pop
popa
sub
pop
xchg
mov
ret
clflush
push
pop
das
and
in
test
ljmp
inc
push
int3
fiadds
js
jnp
push
fdivp
cmpsb
aad
cmp
dec
and
sub
sub
adc
pmulhw
or
mov
push
incl
xchg
mov
lret
mov
out
jo
mov
push
add
dec
adc
mov
mov
mov
jne
in
int
mov
out
xchg
outsb
cmp
jecxz
inc
inc
popf
mov
xchg
mov
lods
or
in
out
add
push
popa
sarl
imul
xchg
lfs
imul
jmp
xchg
mov
pop
fs
mov
inc
test
adc
aad
pop
rcll
xchg
cwtl
push
xlat
or
ret
test
sub
cmp
jns
call
movsb
imul
aad
jp
test
cli
movsb
fs
jmp
test
aad
jbe
dec
inc
xor
mov
popf
test
dec
mov
dec
es
movsl
xchg
popl
nop
or
int
call
scas
dec
loope
sbb
into
xchg
cli
mov
push
jge
sub
adc
test
in
xor
sbb
dec
xchg
js
dec
add
dec
xor
push
adc
lods
dec
cld
aaa
xchg
or
test
loop
mov
xchg
sub
scas
subw
mov
and
fsts
jmp
dec
jg
add
cld
dec
inc
jmp
xchg
pop
aam
imul
jno
push
pop
mov
ja
outsl
xchg
mov
repz
dec
add
mov
call
push
pop
add
bswap
mov
paddsb
jmp
jecxz
xchg
dec
xchg
jns
push
outsl
jb
iret
imul
inc
pop
mov
mov
lock
aam
cs
sub
jmp
xchg
arpl
mov
xchg
xchg
cmp
jp
shll
xor
push
mov
mov
icebp
sahf
lods
fistpl
mov
lcall
and
aaa
repnz
sahf
xchg
mov
push
orb
mov
das
in
lret
pop
and
inc
movsb
adc
dec
imul
cmp
mov
inc
xchg
or
ja
mov
mov
aad
in
ljmp
mov
sub
mov
mov
pusha
cmp
add
xchg
fidivrs
in
push
mov
pmulhuw
aam
mov
and
js
cmp
cli
jmp
add
jns
stc
pop
repnz
jns
scas
mov
jmp
aam
in
xchg
pop
arpl
jl
popf
mov
jo
pusha
inc
jle
dec
mov
scas
push
dec
test
cmp
popf
iret
adc
and
call
cli
mov
or
or
lock
imul
cwtl
popa
ljmp
mov
test
imul
div
testb
sub
xor
xchg
ds
inc
cmp
or
sbb
ret
push
fs
sti
dec
ss
mov
jle
pop
sub
sti
mov
lret
stos
pop
or
dec
sar
or
addl
std
or
dec
fwait
adc
sub
callw
hlt
scas
cmovge
aad
dec
shlb
push
lahf
add
gs
fidivs
dec
sub
mov
hlt
in
xchg
clc
or
pop
cmp
lahf
add
jno
js
movsb
movsb
add
clc
or
pop
loope
into
pusha
aam
inc
push
jmp
or
mov
iret
pop
push
or
xlat
pop
popa
or
and
mov
or
lds
sub
pop
sbb
inc
and
dec
outsb
aam
push
cmp
xchg
xchg
or
inc
xor
js
out
aad
call
dec
add
and
iret
xchg
int
lods
sub
fnstsw
je
loopne
jae
sub
adc
sub
jae
push
lea
pop
mov
add
mov
push
cmc
pop
mov
mov
push
cmpsb
xor
into
jne
loope
jmp
push
and
pop
lock
fldenv
pop
mov
push
mov
sahf
mov
push
imul
mov
mov
loopne
mov
jnp
mov
adc
push
mov
sub
out
call
out
adc
popf
testl
jecxz
cmp
xchg
addr16
push
gs
push
jge
call
movsb
rcll
cmc
js
sbb
fidivrl
dec
cmp
xchg
sbb
lret
leave
mov
adc
dec
out
in
aas
das
std
dec
shrb
mov
fildll
sti
aad
xor
xchg
dec
or
lea
enter
sbb
repnz
sub
aad
lahf
sub
pop
mov
mov
dec
mov
or
fsts
jmp
dec
inc
adc
aaa
test
scas
xchg
lods
push
pop
shlb
xchg
sti
orb
stos
pop
dec
mov
iret
lods
or
loop
cmp
and
mov
xor
xor
stc
aad
inc
out
mov
push
movsl
inc
adc
out
shlb
jae
aaa
adc
push
dec
adc
xchg
test
xchg
lods
or
xchg
jns
mov
lods
inc
idiv
fmull
cltd
lods
mov
addb
dec
and
test
xchg
pusha
and
js
incl
arpl
sub
and
pop
enter
inc
decl
scas
lcall
call
into
cmc
shll
mov
jnp
insl
lahf
into
into
dec
pop
aam
xchg
cli
xlat
insl
insb
enter
cmc
stc
cmp
add
popa
mov
in
test
mov
pushf
lret
lret
aad
pop
sahf
dec
out
int
inc
add
pushf
into
call
loope
sub
mov
sbb
sub
dec
sub
sbb
fst
and
xchg
pop
insb
and
jnp
fdivr
arpl
dec
xor
setne
push
jg
adc
fdivr
mov
icebp
dec
xchg
pop
adc
call
mov
mov
or
inc
mov
mov
jge
pop
cwtl
sarb
dec
scas
sbb
adc
inc
fucomip
push
inc
lods
ret
xchg
das
push
cmp
push
and
cmp
daa
lret
aad
push
or
cmc
inc
xchg
sub
loope
test
fidivrl
xchg
incl
int3
sub
lods
cmp
dec
jecxz
push
cwtl
jl
add
js
aad
and
mov
div
testb
jnp
inc
pusha
jb
jl
cmc
sub
sahf
ljmp
xchg
imul
jmp
inc
das
cmpl
xchg
int
in
fsubs
jmp
push
pop
dec
mov
sbb
cltd
mov
lods
outsl
insl
dec
push
test
cmpb
sub
cmp
xor
xor
dec
xchg
push
out
ret
fisttps
inc
outsb
pop
fimull
and
mov
int
int3
xchg
push
es
add
dec
loope
adc
aam
js
push
loopne
pop
mov
mov
cs
xor
xchg
in
data16
loope
out
sti
imul
jle
adc
fisttpl
jo
data16
fdivr
mov
xchg
jnp
das
xor
divl
inc
jge
sbb
lret
mov
xchg
pushf
fldenv
je
sti
fs
and
cli
push
lahf
push
push
out
or
push
lods
or
mov
mov
xchg
and
mov
or
decb
popf
lcall
xchg
shrl
or
call
push
jbe
lods
mov
dec
push
scas
push
push
push
mov
mov
hlt
jmp
mov
push
aad
mov
mov
pop
cli
sahf
pop
pusha
jl
int
pop
pop
popa
mov
cwtl
ret
and
sbb
stos
jns
xchg
dec
push
adc
push
mov
cmp
sti
push
into
std
pop
call
sbb
pop
pop
cltd
mov
or
xor
sbb
xchg
and
jno
dec
adcb
or
js
imul
add
add
popa
mov
mov
int3
push
std
mov
ja
push
out
jns
mov
mov
lods
je
fs
pop
or
arpl
xchg
mov
pusha
mov
out
repz
cld
sti
mov
cmpsb
js
jmp
and
xchg
les
and
jp
icebp
pop
popa
push
outsl
imul
or
fldt
push
stc
jns
arpl
cmpsl
adc
push
mov
movsb
addr16
in
push
dec
cmp
inc
roll
imul
repz
cmpsl
orl
lds
fcmovu
lea
imul
sbb
jmp
xchg
push
sub
xchg
mov
xchg
xchg
jmp
fs
jbe
ja
or
push
stc
aad
daa
shl
adc
push
bts
int
mov
add
ds
fisubl
mov
or
stos
jge
std
stos
outsl
ljmp
xchg
sti
rolb
dec
mov
out
jae
sub
jecxz
jmp
data16
dec
cmp
push
mov
adc
nop
fwait
dec
mov
inc
xor
lods
jge
mov
cmp
js
mov
cmp
jg
stos
pop
loopne
add
fldenv
rol
mov
dec
out
mov
imul
daa
js
mov
inc
xchg
into
add
aad
lret
add
dec
mov
pop
pop
stc
ret
outsl
and
clc
jo
les
pop
jnp
in
fmull
in
mov
ljmp
sub
xor
mov
push
inc
insl
jge
shr
int
mov
xchg
cli
jno
jns
daa
aad
fmulp
add
pop
outsl
fcoms
mov
or
xor
cmp
cmp
ret
pop
popf
cmp
dec
in
loope
data16
cmc
ficoms
rclb
rcrl
aam
sub
lret
cmp
movsb
jmp
or
cwtl
jbe
dec
xchg
ds
stos
aas
or
mov
rcr
jmp
lods
mov
xor
mov
xchg
enter
inc
outsl
sbb
mov
and
int3
mov
jg
or
popa
hlt
or
jmp
mov
cwtl
mov
or
cmp
out
sub
dec
sahf
dec
inc
mov
xchg
mov
xchg
int
clc
mov
adc
in
into
and
in
cwtl
pop
cmp
fidivs
pop
fiaddl
pop
xor
push
xchg
jmp
mov
sbb
ss
stc
out
mov
das
cltd
jl
cmc
xchg
outsl
nop
mov
pushf
int
mov
repnz
cmp
xchg
fidivl
fisttpll
push
cli
xchg
rcrb
or
outsb
mov
out
mull
pop
dec
out
popf
in
lcall
jne
lock
cwtl
movzwl
and
in
push
mov
int
in
xchg
into
jge
and
dec
imul
add
pop
pop
aam
sub
mov
jb
fisttpl
pop
cmpsb
arpl
pusha
push
dec
mov
enter
sahf
xor
dec
movsl
cwtl
mov
aad
push
stos
lret
inc
call
mov
loop
jns
mov
mov
mov
sub
mov
inc
adc
cmc
aad
xchg
and
cltd
jl
xchg
std
in
jno
stos
sub
pop
add
sub
cwtl
imul
push
mov
xor
out
or
mov
nop
jmp
xor
stc
push
movb
cmp
lea
mov
sub
mov
daa
push
or
ret
call
in
xor
xor
lea
or
es
js
lds
push
pusha
call
jne
jle
cmpsl
mov
xor
push
and
lods
push
xchg
in
pop
lahf
jbe
loopne
into
ret
cwtl
and
adc
cli
jl
enter
cli
sti
test
sub
mov
or
or
aaa
mov
inc
mov
je
dec
inc
mov
rcrb
stc
loopne
in
stc
xchg
sbb
add
arpl
push
and
out
mov
imul
push
push
out
nop
ja
xor
movsl
cmp
xchg
out
mov
out
jns
mov
lds
les
jg
or
pop
mov
scas
es
into
mov
test
inc
sub
mov
add
stos
mov
cmc
pushf
mov
inc
or
jmp
aad
sahf
psadbw
lods
cltd
xor
aad
mov
aad
mov
ret
cmp
fsubs
jge
ds
add
or
out
and
lcall
or
bound
aam
ss
xchg
sti
lods
push
xor
std
dec
cltd
sbb
mov
ljmp
shlb
mov
lcall
es
push
or
aad
sbb
jo
out
js
scas
or
pop
outsl
leave
daa
dec
mov
test
cmpsl
mov
mov
jg
push
xor
xchg
mov
push
add
push
cli
jbe
pop
loope
pop
and
jg
mov
inc
in
xor
mov
push
lea
and
stc
lcall
xchg
pop
cld
or
test
loope
mov
push
shlb
int
add
bound
push
fwait
rcll
and
pop
loopne
jmp
add
xchg
or
lods
aas
lret
cli
inc
inc
cmp
xor
in
ljmp
mov
cmc
aad
xchg
out
lock
stos
std
insb
xchg
rcl
sub
xchg
mov
jge
in
cmp
mov
pmullw
cmpsl
mov
cli
adc
out
bound
arpl
iret
mov
call
loop
xor
lea
push
in
outsb
sub
sub
in
add
into
loope
jno
loopne
cmpsb
ret
test
inc
dec
push
popa
movsb
cs
int3
popf
shrl
arpl
mov
pminsw
sub
ja
inc
fcompl
push
test
adc
es
mov
push
dec
out
aam
dec
aad
and
sti
mov
xchg
or
movsl
loopne
out
cld
jp
jl
std
mov
js
out
cld
inc
xchg
sti
add
adc
loop
xor
cmp
xor
pop
pop
imul
mov
inc
xchg
or
ss
jle
pop
pmaddwd
jne
add
and
daa
mov
jo
imul
pop
mov
pop
sub
mov
imul
jecxz
xor
mov
ljmp
stos
not
jb
ljmp
outsl
bound
ret
and
incb
dec
int
mov
rcrl
paddsw
adc
ret
mov
lea
out
arpl
clc
mov
xchg
adc
fistpl
aam
mov
and
cmp
push
push
into
scas
push
xchg
lret
push
not
and
mov
dec
pop
int
jns
dec
aad
ds
xchg
sti
xchg
leave
and
lret
cmc
std
cmc
jle
mov
clc
fildl
insl
imul
push
ss
loopne
nopl
dec
and
cmp
stos
mov
daa
jl
fimuls
cmp
fildl
lea
add
and
aam
sbb
int
or
insl
jmp
scas
xchg
dec
pop
mov
xchg
or
mov
mov
xchg
mov
or
dec
jecxz
int
sti
sti
xchg
loopne
popa
sbb
xchg
jge
pop
scas
je
loopne
jmp
outsb
je
fwait
jmp
cmp
pop
pop
xchg
jbe
xchg
clc
leave
cmp
mov
push
lds
lods
pop
rolb
decb
dec
cmp
pop
mov
pop
inc
int
pop
xlat
fucomi
mov
iret
les
push
dec
xor
clc
lcall
sub
cmpsb
adc
mov
jge
inc
fld
push
cld
movsb
adc
out
push
xchg
sbb
js
push
out
lret
mov
dec
orl
das
pop
adc
add
mov
xchg
cmc
dec
repnz
clc
mov
adcl
jg
mov
or
cmpsl
ljmp
sar
scas
subb
xchg
and
sbb
xor
xchg
gs
cs
mov
cmp
xchg
aas
mov
es
cmp
ds
xor
inc
popf
dec
into
xchg
sbb
test
pop
shl
jnp
add
aad
js
faddl
sti
mov
lret
mov
add
mov
addr16
add
in
and
mov
int
mov
adc
xchg
sub
xchg
add
ficomps
popa
mov
dec
ss
jecxz
shrb
lods
and
and
outsl
mov
pop
int3
fmull
out
insl
cmp
shrb
out
and
mov
xlat
cmc
test
je
gs
in
jl
rolb
or
mov
mov
les
sti
xchg
fwait
mov
mov
pop
aad
cmp
out
add
orl
lret
pop
push
popf
into
lea
or
sti
xor
inc
add
mov
jp
cmc
test
xchg
pop
xchg
add
add
es
aad
pop
paddusw
stc
jbe
aas
stos
fwait
pop
cmpsb
jnp
jmp
sub
fildll
sbb
and
xor
scas
xchg
xchg
xchg
adc
jb
icebp
dec
bound
mov
in
sar
hlt
inc
xchg
out
add
in
scas
inc
das
jle
movsb
add
cmc
jge
fldcw
mov
sahf
sub
pop
jo
jb
jns
mov
cs
aad
cmpl
jb
cmp
xchg
pop
inc
jbe
xchg
fisttpl
dec
pusha
adcl
and
inc
scas
mov
call
add
add
lods
pop
aaa
insb
mov
fst
out
jle
jns
pop
popa
js
cmp
cltd
out
inc
push
dec
lods
adc
loope
adc
shll
aam
cmp
int
mov
insb
pop
out
mov
dec
movsb
outsl
cvttps2pi
cmc
add
into
das
push
mov
andb
in
mov
testb
add
dec
out
cmp
enter
rorl
in
shl
xor
mov
sbb
inc
mov
inc
jl
rcll
dec
stc
or
pop
mov
xchg
in
loope
in
rcll
jbe
xchg
mov
rcl
mov
dec
inc
orb
jle
or
fs
sub
or
mov
xchg
push
jge
loop
fisttpl
mov
xchg
into
shl
dec
imul
stc
cmp
cmp
mov
movsb
insb
sbb
out
ficoml
pushf
cmc
lret
xchg
mov
pop
idivb
push
mov
in
sti
push
pop
mov
in
xor
mov
ljmp
loope
lock
add
rcll
repnz
les
sti
in
adc
clc
pop
movsl
mov
cmc
or
cmp
pop
aas
repnz
push
lods
mov
dec
xchg
pop
clc
xchg
mov
sub
loope
cld
ret
pushf
inc
add
and
jbe
dec
scas
inc
insl
psrld
subl
pop
jge
dec
sub
dec
cmp
sub
xchg
lods
mov
sti
xchg
sbb
out
aam
and
imull
and
cmp
dec
popa
cltd
cld
stos
xor
xor
out
imul
call
sbb
test
push
jb
cmpsb
stos
rcrb
into
or
xor
adc
adc
test
pop
data16
jecxz
aad
je
stos
jge
ror
mov
in
add
mov
lods
or
insl
sub
xchg
fwait
cmp
roll
sub
ljmp
dec
call
dec
xchg
or
xchg
mov
xchg
lock
setb
and
mov
push
add
xchg
aad
mov
cs
push
fstpt
xchg
jge
cs
cmp
aad
xchg
pop
daa
shrl
jne
cwtl
into
out
shlb
dec
dec
jge
rclb
mov
mov
add
mov
mov
sub
push
loope
je
sar
cmpb
dec
rcrl
dec
jo
mov
scas
sub
dec
scas
xchg
imul
into
jle
xchg
pop
test
out
in
add
bound
dec
ja
or
mov
adc
inc
push
jo
push
imul
icebp
mov
mov
sbb
sbb
sbb
sbb
mov
enter
inc
repz
aad
std
cmc
dec
xor
fs
in
sub
cmp
mov
xchg
push
cli
xchg
into
sub
add
loope
dec
jl
lcall
cmove
scas
sbb
js
sub
jo
ljmp
or
pop
iret
jbe
cmc
shrl
cmpsl
fwait
cmp
jae
add
aad
test
pop
outsb
sarb
outsb
xor
test
xlat
hlt
mov
fs
movsl
rol
jecxz
pop
jmp
mov
dec
jge
jmp
mov
int
aad
jne
into
idiv
mov
test
cmpsb
mov
push
shrb
push
dec
shll
das
inc
xchg
ljmp
add
fimuls
cmp
bound
xchg
push
mov
fdivl
cmp
mov
mov
push
cmp
jg
xchg
xchg
idivl
push
clc
jno
dec
mov
push
pop
loopne
inc
jbe
jmp
lahf
xlat
aad
push
adcb
std
lds
mov
dec
cmc
mov
jmp
stos
sub
sub
out
xchg
pop
jge
rorb
in
or
mov
cli
lret
fnstsw
stc
mov
push
lock
dec
and
jl
adc
movaps
mov
push
cmc
fildll
mov
push
call
and
cmp
inc
mov
ffree
call
dec
xchg
fs
push
aad
mov
sub
jl
dec
enter
jecxz
lods
add
sti
call
cmp
enter
dec
popf
sbb
pop
int
es
sub
cmp
sti
stos
mov
jnp
jns
jl
cmc
sahf
xchg
xor
mov
cmp
and
loop
xor
dec
into
cld
pop
cmc
mov
jo
and
ds
push
pop
pop
sti
cwtl
test
out
and
mov
xchg
fld1
jnp
sub
pop
or
push
xchg
dec
add
push
sbb
sub
pushf
lahf
aad
mov
and
pop
out
js
iret
inc
sti
mov
mov
fimull
cmpsl
mov
push
repnz
sti
xor
cmp
fisubrl
iret
js
leave
lods
pop
les
dec
call
mov
jecxz
hlt
push
dec
aas
mov
push
pop
push
or
mov
cmc
push
aam
or
shlb
and
std
fmuls
cmc
push
popf
pop
out
imul
or
int
cwtl
and
ficomps
jns
imul
ds
icebp
ret
test
mov
in
adc
outsb
lods
push
dec
dec
inc
mov
shll
test
mov
sub
cmp
ss
xor
and
movsb
cwtl
imul
jl
addr16
cmc
in
adc
rclb
pop
dec
add
xchg
inc
or
xchg
inc
inc
std
mov
test
pop
rclb
insb
leave
xchg
jge
aad
inc
push
fbstp
push
out
push
push
sub
or
iret
shr
mov
js
jg
aas
sbb
fidivrs
int
xchg
adc
fucomi
or
or
mov
jbe
fsubl
dec
test
rolb
dec
outsl
test
mov
add
int3
adc
iret
xchg
push
les
pop
jne
lahf
xchg
add
rorb
aad
dec
adc
mov
pop
push
dec
mov
dec
lcall
inc
mov
sbb
push
prefetcht1
lods
and
scas
jb
jecxz
ret
loope
inc
aad
inc
jp
jmp
jns
cli
imul
sti
in
test
int
orl
cmpsb
mov
cmp
repnz
dec
sbb
sub
inc
in
cmp
sub
out
sub
xlat
lahf
stos
xor
push
adc
mov
into
push
or
mov
test
push
adcl
adc
pusha
jp
incb
jb
mov
xchg
lods
pop
xchg
sbb
mov
inc
lret
xor
imul
adc
mov
pop
mov
stc
push
rorl
notb
gs
xlat
aad
gs
pop
popa
sub
dec
xchg
xchg
or
mov
les
mov
aas
popa
push
mov
jmp
mov
mov
sbb
int3
test
ja
xchg
mov
pushf
adc
mov
scas
sub
lods
xchg
popa
les
xchg
insl
push
addr16
cmp
and
push
in
xchg
mov
shrb
out
sbb
out
jne
imul
cmpsb
mov
arpl
add
jb
cmp
adc
pop
or
lds
push
into
xchg
out
jne
or
dec
sub
sti
jnp
fnstenv
and
xchg
lods
xchg
sbb
enter
outsl
cmc
popa
data16
cmp
dec
in
xchg
xor
mov
das
mov
fisubs
loopne
sub
cltd
aam
fs
mov
andb
adc
movsl
mov
iret
push
cmc
enter
loopne
or
mov
and
stos
int
test
mov
iret
or
mov
iret
out
sbb
cmc
les
xor
or
daa
int
xor
stos
dec
aad
addr16
divb
sbb
push
jecxz
outsl
test
mov
repnz
dec
jno
add
dec
ja
imul
cmp
add
std
aaa
rclb
cltd
std
loop
cwtl
repz
iret
sbb
sahf
popf
jle
cmp
rol
rcr
sbb
cmp
add
sti
or
scas
outsb
push
mov
sub
mov
arpl
imul
fisttpll
jb
dec
pop
cltd
lods
jne
mov
adc
stos
cmp
and
xchg
add
call
pop
cmpsb
adc
jge
inc
xchg
mov
or
dec
fadds
popf
jo
mov
push
test
or
js
cmc
incb
jmp
cwtl
in
fsubl
hlt
shrb
loopne
pop
out
xchg
dec
movb
mov
xor
mov
mov
aad
lods
mov
cli
mov
imul
pop
push
arpl
cld
cmp
jge
or
cld
cmp
push
divb
cld
int3
or
push
rcll
add
loope
mov
repz
push
xchg
or
cmp
sub
and
repnz
jb
jo
mov
outsb
sbb
sbb
int
and
cli
cmc
dec
movsl
xor
pop
pop
les
shlb
outsl
fs
into
jmp
mov
sub
sarl
cmp
sbb
sub
push
jb
xchg
movsb
test
mov
movsb
pop
xchg
push
shr
cmpl
lods
pop
iret
jp
and
dec
push
addr16
or
xchg
hlt
pop
push
cmpsl
sbb
shlb
loopne
jno
fs
andl
ja
xor
or
fdivl
loopne
cs
lahf
push
jnp
add
sbb
mov
pop
add
ds
ds
cmp
mov
dec
xchg
popa
test
dec
movsl
xchg
dec
mov
repz
push
test
and
repnz
xor
jp
decb
mov
inc
mov
cmp
lea
loope
mov
int
aad
jns
mov
jge
push
jp
shl
add
sub
xchg
dec
into
lea
ret
outsl
pop
sub
les
push
xchg
icebp
stos
int3
sbb
sbb
inc
daa
cmpsl
push
loope
int
cmp
pop
iret
pop
cltd
xor
iret
sti
int3
cltd
out
pop
mov
stos
sub
fs
icebp
and
cmc
fistpl
imul
mov
pop
inc
jns
stos
orb
es
add
push
aas
repz
push
fstps
xchg
mov
std
lret
or
in
and
cwtl
jl
iret
dec
loop
scas
stos
imul
inc
adc
aam
iret
popf
xchg
push
xchg
mov
fisubs
loope
lock
lods
imul
mov
call
shll
scas
imul
dec
xor
pop
push
imul
jmp
dec
iret
iret
mov
repz
inc
aam
out
fbld
xchg
repz
xchg
push
adc
out
pop
stos
pop
dec
int3
fdivs
ss
pushl
dec
imulb
xor
jle
js
dec
sbb
inc
jmp
cmpb
cmovle
lahf
std
mov
xchg
xor
out
movsl
mov
pop
lock
icebp
and
mov
cld
mov
add
bound
loop
repnz
push
aad
fistl
dec
popf
ret
divb
mov
aad
pop
fidivl
out
sbb
mov
cmc
add
out
mov
fsubs
push
js
add
testb
mov
and
xchg
or
sub
dec
or
cli
xchg
movsl
xchg
lds
mov
aaa
mov
out
add
adc
dec
stos
xchg
mov
movsb
in
pop
scas
fstpl
outsb
mov
mov
xchg
cmp
out
sub
adc
cmc
pop
iret
movsb
insl
mov
in
jb
jnp
imul
cld
xor
xor
ljmp
inc
mov
xor
lahf
mov
adc
std
lret
dec
push
lahf
fs
cld
or
and
cld
jmp
fwait
in
or
pop
loopne
mov
das
movsb
sub
fisubl
mov
mov
xchg
mov
xchg
cs
pop
out
pop
sub
inc
or
cld
xor
scas
inc
mov
jmp
pop
or
add
mov
mov
cmp
loop
inc
aad
imul
dec
mov
iret
iret
xchg
mov
dec
adc
test
sti
aad
std
cmp
cld
mulb
arpl
sbb
out
lret
lret
jmp
adc
addr16
movsl
rcrb
jnp
jp
rcrl
scas
jne
lret
add
out
cmc
push
leave
or
adc
inc
test
jno
ret
mov
push
pop
pop
in
into
repnz
jmp
int
mov
cmp
rorb
fsts
andb
sub
mov
pop
les
push
and
lret
mov
repnz
movsb
jmp
and
add
ret
xor
in
xchg
mov
cmp
inc
enter
push
sti
adcb
loop
ds
push
orb
jmp
mov
add
push
mov
insb
dec
push
adc
mov
pop
test
fdivrp
push
lea
mov
out
lret
in
enter
mov
xlat
mov
repnz
sub
sbb
movl
cmc
popf
fimull
in
cmp
xchg
jle
dec
int3
daa
or
into
das
scas
mov
xchg
out
mov
loope
inc
cmp
cmp
dec
or
lret
cmp
jle
ljmp
or
mov
stos
repz
js
or
arpl
xchg
sahf
pop
add
mov
popf
inc
sub
rolb
jb
xchg
xor
mov
int
inc
xchg
rolb
push
dec
les
adc
bound
idivb
in
push
std
jae
in
pushl
or
insl
and
adcb
cmc
mov
outsb
loop
inc
pop
xchg
dec
push
ficoms
ja
dec
lret
cwtl
aam
addr16
inc
xlat
je
sub
fsubrl
mulb
xchg
and
ss
lock
adc
jl
push
mov
mov
pop
jno
stos
lahf
jmp
ss
mov
into
jl
in
rclb
or
add
imul
in
ja
js
into
repz
push
mov
mov
repnz
leave
mov
or
or
popf
mov
pop
jecxz
shr
mov
orl
jmp
sub
sbb
cwtl
scas
xchg
inc
push
arpl
mov
jge
adc
insb
dec
neg
adc
dec
and
mov
imull
imul
mov
lret
pop
out
lcall
xchg
inc
pop
push
out
adc
cmpsb
dec
stc
xchg
cltd
fimuls
xlat
cld
out
jns
pop
mov
outsb
in
jmp
xor
les
mov
inc
fisttpl
aad
mulb
push
js
hlt
adc
or
cld
cmp
repnz
insb
sub
hlt
mov
cmc
inc
xor
pop
call
lds
sub
jl
shrl
imul
sbb
mov
xchg
xor
add
jg
dec
push
dec
pusha
adc
inc
nop
push
pop
out
aad
stos
pop
repz
cmp
mov
out
movsb
jg
cmp
jl
mov
xchg
pop
cmp
cvtdq2ps
or
or
and
or
out
test
dec
mov
dec
rclb
int3
ret
xchg
dec
aad
flds
jge
test
sqrtps
lar
mov
jb
fsubl
push
dec
mov
adc
mov
inc
fwait
std
mov
add
in
popf
hlt
jp
out
cmc
sbb
inc
and
push
cmpsb
dec
xchg
fs
or
and
outsb
jmp
inc
out
cli
imull
faddl
stos
xchg
cmc
xor
into
lods
or
inc
or
and
imul
bts
lods
fcompl
repnz
insl
fcmovu
xchg
mov
movsl
in
cmp
movsl
inc
pop
fisttpl
pop
repz
int
lods
xlat
lret
pop
mov
cmp
mov
shlb
and
sub
mov
iret
test
and
repz
or
dec
add
popa
test
push
aaa
aad
loopne
int3
xchg
cmc
insb
idiv
push
jl
fisttpll
add
push
sbb
test
inc
arpl
les
jb
popf
sti
mov
xor
add
insl
push
dec
xor
cmc
es
shl
std
scas
aam
mov
pop
jmp
and
jmp
adc
icebp
mov
int3
outsb
js
xor
gs
hlt
sbb
push
or
inc
in
and
and
mov
sbb
into
subb
and
sbb
cmp
lea
dec
cmp
lods
xlat
mov
clc
mov
xchg
aas
pop
loope
out
and
loop
cwtl
adc
out
jl
mov
cmp
add
movsb
cmc
cmc
mov
jbe
mov
mov
cmp
outsb
popa
gs
mov
test
ss
dec
cmp
add
dec
and
scas
push
mov
xor
aas
dec
add
loop
sbb
mov
jmp
pushf
xchg
popa
xor
mov
clc
jge
fcom
jae
iret
out
adc
mov
cs
aad
pop
fistl
stc
ror
das
xchg
loop
push
mov
mov
push
mov
or
cli
pushl
sub
mov
jne
mov
pop
ficompl
pop
or
out
add
inc
add
mov
add
loopne
out
mov
pop
mov
shlb
and
addb
daa
xor
fldt
sub
xchg
cltd
ds
inc
mov
inc
mov
and
or
dec
jmp
das
dec
aaa
mov
dec
push
push
jmp
lods
add
out
cmc
cli
mov
aam
int
test
imul
push
outsl
or
push
imull
decl
cmp
ljmp
faddl
das
enter
jmp
arpl
test
fs
jns
nop
arpl
push
lods
jecxz
push
dec
out
sbbb
xchg
dec
outsl
xchg
inc
mov
cmp
test
adc
pop
xor
jmp
xchg
jmp
inc
mov
or
cmp
in
lods
push
lods
push
aad
cmpsb
ds
pop
shrl
in
push
push
jns
xchg
jl
lret
sub
jne
orl
push
test
add
stos
pop
iret
cmc
mov
loop
adc
div
stc
cmp
sbb
repz
jge
sub
cltd
push
frstor
mov
sub
sub
call
push
xor
jle
std
mov
loope
jo
inc
dec
xchg
mov
hlt
mov
jle
mov
push
push
iret
dec
sub
or
cmp
iret
stc
lods
frstor
hlt
mov
dec
cmovg
test
jo,pn
mov
dec
sub
sbbl
imul
and
addr16
pop
lods
mov
in
sarb
jl
fiadds
dec
sbb
push
nop
jns
dec
fucom
ret
jecxz
mov
popa
and
sub
mov
test
roll
dec
jae
out
add
and
cmp
mov
lods
jnp
or
add
fs
ljmp
sbb
xor
mov
adc
pop
add
ja
push
dec
jg
push
push
testl
sahf
es
es
aad
les
jne
std
pusha
sub
das
xchg
xchg
jnp
xchg
mov
sub
cmp
xchg
inc
cmp
or
pop
clc
mov
pusha
mov
adcb
xorl
lret
insl
test
sbb
movsb
cld
or
leave
jo
daa
call
xchg
ljmp
adc
lds
jno
cmp
in
out
mull
pusha
mov
ja
ljmp
sti
pop
jl
xchg
cli
hlt
xchg
sahf
mov
adc
sub
clc
cmp
jns
mov
adc
loope
aad
adc
jne
jge
dec
out
jns
stos
mov
fucom
js
fists
pop
popl
ljmp
xchg
mov
xchg
pop
mov
dec
shl
imul
cmc
pusha
jg
iret
cmp
xchg
jnp
mov
adc
jmp
into
cmpsb
push
cmpsb
sbb
sub
aam
in
mov
and
imulb
adc
or
or
clc
sahf
jnp
movsb
insl
arpl
xchg
popaw
inc
scas
rorl
push
sbb
aad
int
hlt
movl
sub
mov
jmp
mov
xor
mov
fildl
dec
sub
fcoml
lds
lods
int
outsl
dec
imul
sub
in
out
imul
xor
mov
mov
rorb
inc
sub
stos
pop
aad
mov
push
imul
add
pop
shrl
sbb
fsub
and
cwtl
push
cmp
add
mov
cmp
jmp
testb
pop
aam
jo
mov
popa
loope
fstpt
or
cmpsb
shlb
xchg
dec
add
adc
outsb
shlb
cmc
jge
insb
call
in
sarb
mov
jne
ds
pop
in
test
mov
scas
cmc
aaa
into
arpl
mov
pusha
inc
int
arpl
lahf
sbbb
dec
aad
andl
mov
inc
mov
imul
push
fistpl
test
mov
mov
sysret
jbe
mov
push
dec
std
dec
sub
aad
and
lock
in
pop
mov
outsl
mov
or
xor
mov
sbb
or
fwait
shll
cmpsb
nop
imul
and
ret
pop
ficoml
sbb
mov
mov
ss
loopne
sahf
pusha
pop
cld
out
push
aaa
or
insb
push
inc
scas
sub
dec
pop
lock
cmp
cmp
data16
mov
repnz
imul
aad
ret
xchg
xorb
popa
and
adc
mov
movsl
idivl
sbb
xchg
fstl
mov
fsubrs
loope
jmp
ljmp
xchg
xchg
sub
xlat
adc
xchg
or
int3
dec
bound
ret
jns
iret
pop
cmpb
mov
and
dec
popa
iret
adc
push
or
xchg
jg
jns
inc
subl
das
and
aam
xor
dec
das
clc
and
lods
dec
cltd
cli
cs
rcrb
notl
ret
into
xor
adc
nop
push
fcmovu
stc
pop
fisttps
je
push
fldl
mov
inc
ljmp
add
jecxz
iret
mov
lret
outsl
test
and
dec
cld
fwait
js
repnz
mov
imul
or
sti
jecxz
or
jno
into
xlat
inc
push
in
insl
sbb
movzwl
dec
mov
push
cs
adc
cmp
push
cwtl
push
or
fwait
cltd
es
out
cmc
jge
aam
lea
cli
lods
into
imul
mov
loope
ret
sbb
int3
inc
pushl
mov
pop
and
jne
in
call
xchg
dec
inc
and
xchg
mov
add
and
sub
or
sub
mov
pop
adc
push
scas
pop
cli
aad
int
xchg
cmp
loopne
sbb
jbe
pushf
lock
jg
test
sub
xchg
popf
jae
push
stos
mov
aad
add
aad
mov
sub
xchg
jmp
mov
jns
test
aaa
repnz
dec
dec
jmp
out
cld
mov
jge
push
push
mov
sbb
mov
fadds
es
cmc
sbb
jae
xor
sahf
cmp
das
xchg
jmp
pop
sbb
jns
mov
lods
stc
xchg
or
test
jnp
jo
test
and
cld
out
js
arpl
fdivl
int
lret
leave
mov
fcomps
aaa
divl
xor
jae
and
cmp
pop
cmp
and
xchg
jnp
stos
sbb
fnstsw
xchg
mov
add
dec
dec
ret
cli
mov
pop
ljmp
dec
ss
aad
pop
nop
add
loope
push
cmp
or
cmc
pusha
sub
xchg
stos
jg
lods
mov
jmp
nop
xor
push
insl
inc
mov
or
nop
xchg
bound
push
jo
daa
or
mov
dec
mov
shr
add
jno
mov
pop
jmp
out
rorl
cs
xchg
js
stos
fisubrl
cmc
xor
mov
rcll
orl
or
insb
repz
fisttpll
aad
mov
fwait
mov
mov
popa
sti
in
cmp
call
in
iret
and
arpl
sub
adc
andl
adc
test
jbe
xor
mov
pop
cmp
in
pushf
inc
pop
scas
sbb
pop
jne
inc
pop
cmp
cmpb
imul
shlb
push
xor
push
aad
iret
std
out
out
lods
test
push
and
fidivrs
xchg
hlt
sub
sbb
jne
mov
loopne
int
sub
cltd
or
fs
ret
lahf
mov
jmp
sub
or
mov
sti
out
imul
dec
jl
add
lods
and
sub
jnp
xchg
ja
jnp
call
cmova
push
pop
jae
jns
imul
mov
cli
int
sti
mov
clc
dec
cli
faddl
cltd
in
insl
xchg
lock
push
add
cmp
hlt
ljmp
orl
push
adc
pop
pop
mov
add
xor
outsb
lods
lods
jbe
into
and
dec
dec
and
and
mov
sbbb
in
mov
sbb
push
divb
cmp
inc
mov
lret
repnz
xchg
xor
jmp
xchg
gs
jmp
jno
dec
jno
jnp,pn
mov
fdecstp
inc
scas
or
mov
push
aaa
aad
lahf
push
subl
lcall
jl
or
pop
cmc
or
lret
lea
fs
xor
adc
fstps
pop
popa
sbb
push
inc
dec
hlt
aad
and
push
ljmp
and
aam
pushf
inc
mov
or
cs
mov
dec
or
imull
gs
mov
jns
mov
aad
stos
pop
mov
fisttpll
mov
idivb
int
cmp
into
cmc
push
pop
lret
int
push
push
cli
mov
arpl
in
sbb
iret
xorb
lods
pop
mov
inc
jo
pop
push
add
ljmp
jge
inc
mov
sahf
mov
out
setl
roll
and
pop
fdivrp
add
stc
cmpsl
push
ljmp
or
sahf
maskmovq
imull
fldl
les
ss
loope
pop
out
in
add
cmc
lds
lahf
aaa
js
out
lods
and
lret
leave
mov
and
mov
jne
lods
and
xchg
mov
aad
fadds
dec
xchg
out
fsubrs
adc
cmp
shlb
nop
sub
dec
sbb
push
fwait
cmp
xchg
fs
adc
mov
pop
sbb
andb
inc
add
rcll
inc
xchg
mov
push
xlat
adc
sbb
jp
in
int
xor
xchg
outsl
clc
pop
mov
andb
sbb
push
aaa
inc
mov
scas
adc
aam
pop
lds
pop
or
pop
mov
out
sub
inc
jecxz
lea
divb
insl
cmp
sub
aad
rolb
lods
in
or
outsl
insl
sub
popf
xlat
adc
add
in
mov
mov
mov
punpckldq
xchg
repz
mov
scas
jb
ja
out
cmp
cmp
stos
aad
popf
cmp
cmp
sti
sub
test
xlat
pop
aas
lds
aad
dec
push
dec
mov
repz
push
or
shll
pop
xchg
jg
fisubs
and
aam
std
dec
fs
stc
out
stos
and
in
cld
into
pop
lcall
dec
or
test
mov
imul
pop
xor
dec
imul
inc
jle
add
lret
xor
vandpd
inc
aad
cmp
and
push
scas
push
cmpl
fstpt
sub
lea
ret
jo
pusha
iret
and
xchg
cwtl
lahf
cmp
cmc
mov
sti
data16
dec
xchg
mov
mov
mov
cmc
in
or
pop
cmp
lret
push
xchg
sbb
lock
inc
inc
fxch
jp
and
ds
pop
shlb
sub
mov
lods
out
jbe
jle
jae
dec
subl
add
xchg
sbb
mov
mov
dec
lcall
sbb
inc
fpatan
cmp
or
in
aas
dec
lds
mov
and
xchg
iret
cmc
xor
loopne
jecxz
rcrb
in
es
lret
jae
sbb
sbb
xchg
stos
stc
adc
out
mov
ficoml
jne
mov
pop
rcl
jge
or
pop
push
push
jae
and
or
pusha
mov
repz
add
aad
jne
aad
or
pop
add
xchg
clc
loopne
pop
enter
popf
pushf
nop
cs
rclb
mov
iret
sub
xor
pop
xor
dec
or
xchg
adc
mov
and
lods
mov
mov
int3
jne
adc
mov
int
cli
xchg
fsubs
in
les
adc
subb
jge
mov
scas
push
cwtl
iret
out
or
cmc
jnp
ficompl
cltd
ljmp
xor
sbb
cmp
in
mov
adc
cmc
iret
push
dec
ss
pusha
lea
push
mov
das
xor
pop
cld
cmpb
dec
icebp
aad
mov
jl
push
cli
lret
or
cmp
mov
cmp
stc
sub
dec
sub
pop
leave
pop
inc
cs
ljmp
sub
push
les
roll
mov
insb
inc
push
or
xchg
mov
movsl
out
inc
dec
data16
popf
into
cmc
fsubs
cmp
or
or
xchg
xchg
cmc
add
cmp
mov
xchg
jmp
clc
testl
ret
sub
jo
int
sub
orl
iret
jmp
pop
push
push
xor
cli
sarb
bound
int
pop
cmp
xchg
mov
jmp
or
pop
mov
out
mov
sbb
dec
pop
outsl
in
in
add
push
jmp
mov
fwait
out
add
or
sub
xlat
mov
push
mov
not
cmc
mov
xchg
mov
call
fs
or
fs
cmc
pop
cmp
and
cmpsl
and
pop
rolb
not
xchg
mov
out
dec
push
shll
imul
or
call
mov
xchg
or
sbb
inc
xchg
mov
pop
aaa
xchg
negb
or
xchg
gs
sti
xchg
lea
mov
or
js
jns
aad
xor
pop
mov
fdiv
out
or
mov
sahf
cmp
hlt
outsl
ljmp
add
sub
or
jae
mov
xchg
in
cltd
sub
nop
in
gs
push
mov
sub
js
push
psubsw
mov
out
mov
jns
pop
push
fnstcw
fadd
pop
scas
ljmp
add
in
inc
push
lret
leave
scas
loop
push
sbb
pop
int3
out
inc
mov
xor
std
das
fdiv
jge
add
pop
xor
jl
lods
addb
pop
shlb
jb
xor
add
xchg
es
mov
test
iret
cs
orb
test
fwait
dec
mov
setne
dec
daa
mov
arpl
sbb
xorl
insb
lock
mov
in
fstpl
out
and
cmp
mov
and
jbe
popf
jne
mov
ja
cmp
movsbl
and
fists
mov
xchg
add
out
scas
and
pop
add
cltd
or
mov
jmp
popf
inc
ja
dec
push
sub
cmpsl
xor
cs
call
mov
fucomp
sub
loope
ja
cmp
into
jae
cli
stc
test
iret
gs
into
inc
inc
pushf
jp
mov
and
cmp
mov
popl
pop
out
push
pop
aad
inc
je
inc
xchg
rorb
xchg
movsb
push
loopne
cmp
pop
or
sub
in
in
pop
pop
adc
flds
punpcklbw
mov
les
push
ja
out
push
cmp
lods
cmpsl
shr
jg
sbbl
popa
mov
fs
or
imul
adc
jmp
shlb
mov
mov
dec
pop
mov
sub
js
pusha
or
push
lret
sub
pop
xlat
hlt
cmp
cld
cmp
out
sbb
pop
lods
lock
cmpsb
jnp
test
mov
add
mov
jnp
pop
and
popa
cmpsl
adcb
xchg
jnp
add
add
xlat
mov
loope
cmpsb
pop
insl
call
cmp
in
mov
jg
fisttpll
insl
std
mov
inc
xchg
cmp
xor
aam
ror
push
jns
jmp
in
lret
cltd
stc
shlb
orb
lret
push
mov
in
xchg
ret
push
mov
pmullw
std
dec
and
shlb
mov
cmp
daa
jge
mov
int
enter
fcmove
cli
clc
cmc
inc
and
inc
lods
pop
loope
testb
push
dec
fs
mov
or
add
cs
adc
ret
nop
aad
adc
ret
and
cmp
mov
int3
inc
aad
inc
outsb
xor
outsl
lock
adc
mov
cmp
push
cmp
inc
mov
std
push
scas
sub
sbb
jecxz
in
push
pop
incb
lahf
mov
push
cmp
jne
orb
dec
mov
xor
rcll
aad
mov
push
dec
adc
les
pop
mov
mov
or
dec
cmp
fists
div
cmp
lods
add
les
out
add
mov
test
jecxz
adc
sahf
jb
popf
mov
mov
sub
mov
pop
push
or
imul
jmp
xchg
or
jl
xlat
lahf
lock
test
xor
and
add
jge
jns
call
nop
stos
stos
or
and
mov
or
mov
mov
in
popa
es
jnp
cmpsl
jns
adc
cmpl
idiv
sub
or
adc
data16
or
stos
jp
pop
cwtl
mov
fwait
adc
rorl
fsubs
fists
clc
push
mov
dec
cltd
out
lods
or
cmpsb
xorb
sbbb
xchg
jge
std
aad
cmp
dec
jo
inc
call
mov
nop
add
fisttpll
imul
pop
pop
jecxz,pn
dec
imul
push
jne
scas
inc
xor
repnz
rcrb
lods
sbbl
test
ds
in
rolb
pushf
sub
fistps
jo
in
bsf
or
and
sti
sarl
jno
pop
aad
fdivs
adc
stos
inc
pop
sbb
sbb
push
ret
jns
mov
jle
out
popf
out
ret
sbb
jbe
mov
sarb
push
xlat
sub
jg
nop
jmp
jge
in
sbb
xchg
jmp
rorl
push
stos
lcall
lods
xchg
int3
dec
mov
push
ret
mov
call
popa
fdivl
sbb
lods
lds
jge
punpckhdq
sbb
inc
lcall
test
inc
sub
xlat
mov
mov
mov
adc
imul
leave
call
jle
ljmp
jmp
stos
pop
pop
test
xchg
and
and
dec
aaa
jne
xor
or
test
lds
iret
mov
sbb
shl
xchg
es
movsl
std
jg,pt
jbe
sub
fs
mov
addr16
or
and
inc
fs
stos
jmp
mov
xchg
movsb
pop
fistl
mov
mov
scas
fs
cmc
adc
test
jmp
fmulp
test
jp
fld
je
ljmp
es
rcr
pop
and
push
xchg
sbb
iret
jle
lods
dec
xlat
test
xlat
dec
arpl
jns
jno
jge
pop
mov
fsubrl
je
dec
xchg
stc
jb
mov
cmc
mov
std
test
addr16
insb
dec
adc
jnp
mov
push
jns
loope
sub
or
mov
clc
xchg
in
xor
dec
in
jne
dec
mov
or
mov
shl
ja
mov
pmaxub
mov
pop
jne
lods
cmp
inc
dec
scas
cli
rolb
sub
stc
cmp
add
cmpsb
push
adc
lods
pop
movsl
rol
int
call
jl
scas
and
mov
xchg
xlat
ljmp
lds
cmp
fadds
sub
jne
shrl
jbe
sub
test
lcall
mov
mov
inc
mov
fistps
push
stos
mov
test
jnp
jmp
cmp
insb
sub
jo
mov
jne
ljmp
pop
popa
lods
jl
fcoml
add
shlb
loope
and
jl
xchg
and
push
pop
in
inc
sahf
loopne
xorl
jmp
pop
and
ffree
sub
xchg
mov
loop
sbb
mov
daa
fs
fdivs
outsb
dec
scas
mov
mov
mov
fwait
in
or
loop
xchg
stos
xchg
or
xchg
pop
in
sub
sub
mov
cmp
mov
cltd
xchg
xor
and
xchg
or
addr16
mov
lods
add
dec
mov
lods
xor
fwait
mov
xchg
mov
dec
cli
fsubl
aas
jmp
test
lea
out
jo
filds
ret
jno
cmp
xor
jle
xchg
std
adc
inc
cwtl
sub
xor
sbb
cmp
or
aad
adcl
dec
add
xchg
cmp
fsts
mov
push
jecxz
pop
xchg
mov
push
aad
sbb
mov
push
mov
dec
mov
imul
lods
adc
mov
outsb
ss
xchg
sbb
test
icebp
push
pop
add
cmc
dec
xchg
inc
xchg
sub
movb
cmp
shll
les
sub
ret
icebp
xchg
sub
sub
rclb
mov
out
testl
add
inc
xchg
inc
fsubl
mov
int
test
adc
xchg
dec
dec
add
pop
cmpsb
jmp
cmc
movsl
lds
in
mov
and
leave
dec
in
pushl
mov
arpl
or
add
mov
in
inc
movups
and
xchg
xlat
dec
sub
lods
divb
mull
push
mov
inc
sahf
and
mov
jle
scas
xor
std
mov
test
pop
mov
aad
std
dec
mov
add
cltd
mov
test
mov
push
pop
stos
lcall
cmpsl
dec
pusha
fwait
jecxz
stos
lea
add
and
mov
pusha
sub
inc
orl
adc
fwait
dec
sahf
dec
pop
dec
mov
adc
fistl
cmc
pusha
les
lods
add
fisttpl
mov
xchg
inc
xchg
ret
lods
dec
aad
nop
or
xchg
in
jmp
mov
dec
shl
cli
lret
leave
lea
and
in
inc
or
std
add
cmc
mull
loop
fisttps
repz
dec
ljmp
xchg
jmp
decl
dec
dec
outsl
mov
xor
out
dec
and
add
dec
xchg
insb
pop
cwtl
xchg
outsb
data16
jns
outsb
cli
adc
popf
test
lret
mov
cmc
xor
fisubl
fucom
push
sahf
mov
and
shlb
or
pop
repz
popa
cmc
dec
lahf
adc
aad
add
maskmovq
idivl
cmc
out
mov
lahf
cmp
jecxz
inc
mov
ret
mov
dec
int
call
stc
aas
adc
into
enter
jo
mov
or
jnp
sub
pushf
call
int3
mov
divb
movsb
jo
mov
stc
pmullw
bound
jae
mov
jnp
xchg
mov
or
dec
jb
fidivrs
mov
or
add
test
sub
sub
pop
outsl
imul
push
ljmp
fsubl
mov
sti
sub
mov
push
push
addb
cmp
aad
cmp
cmp
sub
clc
mov
cmc
imulb
das
xchg
pop
inc
jp
das
sub
ljmp
mov
popa
mov
push
xchg
mov
push
push
pop
xchg
mov
in
imul
negb
pcmpeqb
mov
pop
mov
out
cmc
cmp
gs
xchg
push
mov
addr16
cmp
cltd
out
mov
cmp
xlat
lcall
push
dec
or
inc
fistpll
fwait
sub
fdivrs
and
loop
pop
sub
xchg
pop
jns
dec
psraw
mov
adc
jmp
out
mov
std
xchg
enter
push
and
fisubs
pop
sbb
std
add
jno
repnz
jmp
sub
dec
loope
out
jnp
jmp
das
dec
jp
lahf
pop
dec
inc
xchg
inc
testl
nop
out
cwtl
jmp
rclb
pop
nop
and
into
add
push
push
mov
lahf
jge
and
inc
add
or
sti
mov
push
psubsw
in
test
dec
push
mov
sbb
mov
aad
cmp
in
mov
push
cmp
mov
aad
sub
xchg
xchg
and
xor
fs
push
pusha
and
mov
nop
call
mov
inc
jp
movsb
int
outsl
mov
lods
push
xor
xchg
loop
int
mov
mov
mov
sbb
and
jg
test
push
and
dec
pop
loope
fadds
or
call
jno
sarb
cmp
dec
int
sub
mov
sbb
test
roll
add
jg
arpl
jge
sub
dec
divl
lock
cmpsb
aam
les
js
jnp
cmpb
inc
lods
sub
jnp
push
sti
ret
and
pushf
imul
int3
gs
dec
stos
fscale
jno
adc
je
fwait
mov
lea
insl
jl
mov
push
and
pop
stos
imul
xchg
movsb
int
adc
mov
cmc
int
test
mov
or
push
js
dec
in
fwait
in
xchg
add
cmpxchg
mov
cmp
xchg
pop
scas
repz
stos
xchg
xchg
dec
js
int
or
mov
int
loop
fs
imul
arpl
stc
hlt
xor
shl
mov
mov
ja
scas
mov
stos
or
dec
in
fildll
int3
aaa
push
xchg
andl
ljmp
enter
mov
cmc
les
stos
nop
cmp
jg
cli
test
and
clc
xchg
cltd
lods
pop
mov
movsb
in
sahf
mov
mov
outsb
cmp
bound
fcompl
insb
les
push
mov
xchg
in
out
repnz
cld
stos
inc
loop
pop
popa
inc
adc
insl
mov
aad
or
jnp
call
xor
jb
outsb
pop
cmpsb
cld
pop
out
cmp
test
pop
or
mov
imul
adc
adc
pop
rorl
jnp
mov
mov
imul
aad
pop
int3
pop
xchg
push
sub
dec
sub
aaa
lods
cli
pop
aad
bound
jg
xchg
inc
pop
xchg
jns
shl
adcl
call
lret
inc
inc
movsl
push
xchg
mov
jl
sbb
jnp
mov
xchg
sub
ret
adc
neg
daa
icebp
popf
and
xor
adc
mov
into
and
pop
js
jmp
adc
dec
and
cli
ret
ds
test
loopne
scas
cli
jmp
scas
pop
js
mov
outsl
int3
aad
cmp
into
gs
xchg
stos
mov
and
fxtract
jmp
mov
mov
mov
and
outsl
lea
adc
sub
mov
fisttpll
mov
call
xchg
in
aad
mov
adc
cmp
jnp
stos
mov
pop
lods
jnp
cmp
cmp
pop
mov
cwtl
push
dec
or
out
jne
es
cmp
mov
adc
arpl
cmp
and
scas
arpl
in
pop
push
mov
xchg
inc
jle
mov
cld
cli
in
clc
test
out
mov
adc
mov
mov
xchg
subl
push
mov
ja
xor
mov
and
testl
lahf
int
out
push
dec
ficoms
jnp
clc
cmp
pop
in
add
vcvtss2sd
out
adc
data16
push
mov
sbb
out
mov
mov
push
push
outsl
cmp
pop
jne
lods
cs
cmp
xor
hlt
clc
jle
dec
pop
cmc
dec
push
inc
daa
imul
imul
ja
ds
pop
dec
sbb
into
xchg
jb
rorl
test
inc
aam
sub
stc
mov
mov
call
xor
loop
js
jge
adc
hlt
or
mov
add
pop
jae
add
sahf
sti
cwtl
in
inc
repnz
dec
mov
loopne
idivl
in
jnp
mov
test
xor
mov
mov
xor
jb
scas
sub
addr16
pop
xchg
cmp
lret
and
popf
scas
ljmp
push
or
or
add
sbb
notl
es
out
sbb
push
adc
aad
pop
lahf
std
mov
aas
aad
test
jg
mov
rorl
aad
pop
fmull
push
lods
mov
and
sub
pusha
jle
xchg
pushl
mov
xchg
arpl
sbb
sub
xchg
mov
inc
and
cli
into
xchg
mov
out
and
cmp
shl
mov
outsb
dec
arpl
out
ret
pop
cs
mov
pop
sub
jae
mov
mov
add
pop
adc
movsl
rolb
movq
fstps
pop
jg
scas
lcall
inc
sarb
mov
popa
icebp
mov
fcmovnbe
cmp
in
lcall
pop
sub
idivb
sub
pusha
ss
dec
adc
insb
ljmp
lods
in
lcall
inc
dec
sub
cmc
out
cmpb
add
xor
iret
insb
cs
sbb
sahf
aam
loope
sub
adc
mov
xchg
icebp
inc
adcl
pop
in
inc
inc
push
xor
cmp
mov
rorl
jne
or
dec
or
xchg
push
in
add
cli
cmp
dec
mov
out
mov
mov
mov
out
outsl
xchg
sub
mov
outsl
xchg
inc
push
int
lods
imul
sti
cs
repnz
iret
cmc
jne
xchg
addr16
lea
mov
jmp
inc
ja
or
push
inc
jns
pop
stos
rcrb
and
inc
jp
pop
mov
sub
scas
cmc
js
add
cmp
or
nop
fsubl
pop
mov
std
cmp
loope
imul
cmp
test
sar
pop
cmc
inc
cld
jg
cmpsl
das
xchg
pop
or
lret
int
pushf
jb
lods
fs
push
jmp
inc
in
outsl
sbb
adc
mov
imul
or
int3
les
fsubl
add
outsl
aaa
sub
add
mov
cmp
in
jge
or
sub
in
out
inc
fisttpll
and
cvtdq2ps
js
jl
cmc
ljmp
mov
aad
cmpsl
mov
fs
jo
jae
mov
cmp
pop
cmc
imul
cmp
in
popl
pop
mov
dec
mov
mov
lcall
add
push
sbb
scas
or
cmc
mov
lret
subl
test
or
sbb
pop
add
clc
je
push
addl
or
test
or
pop
sub
pushl
dec
int
xchg
dec
or
cli
lods
cmp
cmp
dec
inc
punpcklwd
sub
rol
or
dec
dec
outsl
cmp
dec
xor
fiadds
push
iret
or
cmp
iret
lcall
cmpl
pop
pop
repz
orb
pop
xadd
scas
sub
xlat
scas
mov
or
mov
pop
push
mov
sub
xor
xchg
mov
subl
sub
nop
lods
insb
jns
daa
add
and
ja
mov
out
mov
push
cmp
call
int3
lods
fmull
or
sub
and
sti
ficomps
xchg
fisubrl
jae,pt
clc
adc
cmpb
fstpt
orb
test
xchg
inc
push
lret
psraw
aad
std
int3
cmp
pop
sbb
or
lods
outsl
shll
xchg
repz
mov
sub
or
mov
aad
out
pop
insl
iret
push
pop
adc
fs
popa
outsl
clc
cmp
mov
in
ret
outsb
sarl
aad
xor
test
xor
pop
push
cmpsb
js
inc
cmc
or
loope
sbb
add
cmp
in
jecxz
mov
test
or
mov
jecxz
inc
mov
or
push
es
sub
mov
mov
sbb
aam
in
inc
sub
lods
mov
pushf
divb
int
pop
js
test
icebp
add
mov
inc
int
jp
inc
mov
push
jle
dec
jnp
add
leave
pop
cmc
imul
sub
mov
arpl
loop
pop
lock
or
xor
mov
aad
cmp
jb
cmp
movsl
mov
in
test
imul
outsl
cmp
add
push
bound
cli
mov
sub
cli
jp
or
stos
sahf
inc
mov
and
lahf
test
loop
push
ljmp
bts
in
cwtl
jle
and
ficomps
ja
xor
lods
cmp
sbb
jg
cli
mov
iret
outsl
cmpsl
sahf
xchg
push
pop
jo
dec
shll
icebp
test
sub
imul
push
adc
ja
repnz
das
mov
dec
sub
mov
add
sub
divl
idivl
add
pop
test
xor
out
sub
pmulhw
shrb
loopne
setg
iret
popa
lods
loop
mov
mov
add
dec
mov
sub
jns
pop
ret
test
add
add
mov
cmpsb
mov
pop
rorl
outsb
outsl
xor
stc
int
adc
mov
idivl
jb
movsb
push
mov
fcomp
cmp
push
aad
push
cmp
stc
imul
cmpb
pop
pop
cmp
dec
rorl
ret
inc
jg
xchg
cmp
nop
test
into
xchg
outsb
in
jl
hlt
cmp
or
test
add
ret
pushf
push
test
mov
jns
scas
fimull
outsl
aaa
mov
lods
push
test
fidivl
inc
fsubl
or
test
jge
fisttps
pusha
sbb
pop
aad
or
dec
mov
cmp
in
or
test
add
xchg
fcomi
mov
mov
or
jge
adc
push
mov
and
jl
mov
cmp
xor
jbe
aaa
or
out
or
xchg
inc
je
jecxz
popa
bound
sub
mov
mov
jmp
push
into
mov
add
sbb
gs
stc
lods
push
mull
movsb
int
je
adc
dec
popa
bound
data16
sub
imul
rcll
xchg
xor
mov
std
je
jns
pop
ficompl
xorb
loop
or
mov
sahf
jo
inc
or
stos
or
scas
inc
cld
cmpsl
xchg
stc
leave
shld
dec
loop
fcomps
std
adc
cld
sub
je
dec
repz
xchg
cmc
cmpsb
cmp
aas
jl
sahf
dec
popa
pop
lods
jl
dec
mov
repz
mov
lret
out
mov
mov
xchg
xor
xor
push
dec
sub
in
push
bound
add
cmc
mov
mov
mov
xchg
test
call
adc
shl
and
push
push
scas
cmpsb
loop
test
cltd
insl
in
scas
cmc
sti
stos
pushf
popl
fdivrl
add
dec
cs
jo
dec
ja
push
iret
mov
std
and
xchg
xor
movsb
cmp
out
dec
or
mov
insb
and
jnp
mov
jmp
and
aad
rorb
push
dec
in
jb
adc
fs
or
xor
xchg
pop
mov
nop
ficoms
push
and
outsl
jp
mov
jecxz
aad
sub
fcomip
in
jp
out
in
movsb
dec
in
dec
pop
movsl
pop
or
jnp
fiaddl
inc
das
mov
int
jmp
pop
mov
aas
stos
cmpsb
addr16
mov
pop
outsl
popa
rcr
insl
lahf
mov
aaa
std
mov
xchg
lahf
icebp
outsl
ret
or
out
cmc
xchg
mov
in
mov
mov
ljmp
ljmp
mov
ja
lahf
mov
imul
xor
daa
pushf
add
notl
jmp
stos
rcr
and
std
test
or
jp
aam
sub
fisubrs
call
add
mov
push
out
pcmpgtb
jnp
push
xchg
cwtl
cs
inc
fsubrl
xchg
xchg
rcr
mov
imul
jae
pop
inc
push
ss
push
out
xor
dec
loope
clc
scas
inc
dec
cmpsb
repnz
jbe
inc
mov
lahf
shl
pop
fldl
cwtl
add
stos
pusha
pop
or
sarb
pmaxub
push
xor
push
or
cmp
cmp
xor
bound
mov
out
cmpsb
inc
or
pop
and
add
sub
xchg
sbb
aad
pop
lods
cmp
dec
sbb
les
push
add
mov
jno
mov
clc
mov
add
pusha
stc
mov
fcmovu
pop
ds
jnp
mov
fildll
dec
stos
pop
and
pop
push
mov
lret
mov
cmc
cmp
popa
ljmp
daa
inc
loop
in
push
hlt
bound
add
out
stc
cmp
adc
adc
aad
fs
shrb
js
std
push
cld
sahf
add
lods
push
jg
out
incb
push
mov
outsl
iret
xor
dec
iret
mov
and
xchg
daa
cmp
insl
test
jl
sbb
cs
xlat
stos
arpl
mov
jb
xchg
xchg
jle
ss
repz
mov
and
xor
cmp
in
cmc
pop
rolb
sahf
add
mov
add
out
inc
push
cmc
movb
or
negb
ror
mov
aam
jns
shld
xor
sub
pop
sub
xchg
je
int
mov
sbb
cmc
cmpsl
push
loope
jno
xor
imul
sti
bound
popw
push
push
outsl
lret
inc
xchg
dec
dec
push
mov
std
in
sub
fcmovu
mov
or
repnz
fiaddl
dec
push
xchg
or
xchg
push
and
jae
out
mov
mov
sbb
stos
mov
jo
sub
pop
sbb
xchg
jge
mov
callw
ja
mov
push
push
rorl
scas
arpl
inc
addb
cltd
cmpb
or
pop
cmp
sti
mov
aad
fiaddl
dec
pop
xchg
mov
cltd
pushf
lcall
in
arpl
xchg
lods
bound
into
pop
int3
mov
rclb
js
fwait
and
cmp
or
repz
popf
xchg
push
mov
in
lret
jns
inc
sti
jbe
or
lahf
int
pusha
inc
incl
or
int
fsubs
jecxz
push
cmpsb
add
push
sbb
insl
dec
add
nop
mov
jnp
pusha
sbb
pop
dec
mov
in
sub
out
out
sahf
cmp
mov
cmp
push
adcl
out
cmc
movsl
or
xchg
stc
add
leave
and
jmp
mov
iret
popf
mov
cs
nop
xchg
sbb
add
ret
das
stc
aaa
xchg
dec
mov
shr
pushf
mov
mov
inc
adc
xchg
sub
es
adc
push
loopne
cld
cltd
out
dec
cld
sub
outsl
sbb
ror
sti
std
call
fistpll
cmc
fcoms
scas
mov
jmp
sbb
jns
out
fs
cmp
call
popf
xchg
setae
xchg
aad
jo
pop
dec
xor
mov
sub
cmpsl
es
pop
or
xchg
mov
clc
push
mov
mov
push
dec
xchg
test
in
xor
dec
arpl
mov
pop
outsl
cld
cwtl
imul
scas
dec
fdivs
jbe
xchg
js
addr16
mov
mov
cld
push
or
push
or
mov
repnz
inc
das
stc
jns
cwtl
into
cs
scas
dec
fs
out
out
gs
push
enter
cmpsl
or
jg
mov
mov
cmp
mov
lea
add
push
push
cmp
scas
iret
rcrb
stc
push
fcomi
insl
jae
jecxz
sub
mov
sub
sbb
shl
xlat
imul
loop
and
orl
inc
mov
test
sbb
js
pop
add
shlb
dec
test
xor
addr16
lret
lret
ret
jge
popf
lret
inc
out
xchg
sarb
xchg
test
add
psrlq
mov
fs
repnz
mov
lahf
mov
loopne
lods
jmp
jb
shrl
test
movsl
jle
pop
aas
iret
imul
stos
int
stos
fisttpl
xchg
scas
test
lea
inc
into
add
xor
lcall
fs
int
cmp
mov
shlb
inc
in
fsubp
dec
mov
lret
adc
shrb
jnp
das
add
jge
mov
nop
jb
stc
inc
int
mov
jmp
push
xchg
out
jnp
jnp
cmp
shll
adcb
dec
into
xchg
inc
xor
and
mov
cli
fisttpl
iret
dec
sub
jnp
stc
cmc
idiv
out
xor
xlat
or
add
xchg
scas
jl
mov
cmpsl
jecxz
scas
mov
out
jmp
jno
enter
jmp
bound
mov
int
push
cmp
into
add
shl
popa
lock
cmp
dec
mov
out
sub
iret
ja
inc
mov
leave
mov
out
outsb
pusha
sbb
shrd
pop
out
dec
scas
cmp
lret
inc
dec
xchg
out
or
mov
pop
xchg
or
int
xor
mov
mov
in
into
pusha
scas
outsb
pop
dec
out
sub
mov
lret
mov
mov
fwait
lahf
mov
fyl2x
loope
test
mov
enter
pop
loopne
adc
mov
or
aam
insb
aad
push
jbe
scas
sub
or
aad
cld
mov
pop
fwait
inc
add
aad
cmp
mov
insl
fistpll
cmp
dec
popa
out
outsl
aad
test
xchg
or
xchg
incw
sbbl
jp
add
and
jae
cmp
imulb
nop
or
out
cmc
int
jle
hlt
aam
stos
stc
inc
xchg
popa
cmpsb
std
sub
je
inc
int
jle
xor
into
sub
pop
adc
sbb
test
push
jns
das
adc
adc
aaa
and
fidivrl
sub
mov
fisubs
gs
sbbl
lods
lock
adc
and
cmp
lahf
xchg
dec
call
leave
or
int
negl
inc
leave
incl
sti
mov
push
test
iret
pop
xchg
sbb
add
ds
stos
dec
mov
mov
arpl
pop
sub
xchg
int3
outsl
sbb
shlb
fwait
hlt
sub
fstpt
adc
jmp
or
jp
cmp
xor
insb
test
cmp
call
int3
cmp
xorb
jp
ja
ret
std
jle
sbbl
mov
fbld
popa
fcoms
xchg
imul
sub
aam
outsl
xchg
insb
jmp
adc
gs
push
stos
push
push
cmpl
xchg
or
mov
loopne
repnz
les
jnp
les
add
mov
sti
movsb
push
cli
aam
and
cmpsb
push
popf
dec
mull
shrl
dec
push
inc
js
cmp
movb
out
push
pushf
push
xor
xor
jae
popa
sub
cmpsl
sar
shll
inc
mov
outsl
or
pop
sbb
pop
rcrl
mov
mov
mov
add
dec
jp
cmp
mov
jo
fsubrs
and
or
fidivrl
aas
pop
xor
adc
adc
int3
stos
pop
and
iret
or
inc
lods
in
mov
stc
sub
cmp
lcall
xor
pop
iret
es
push
arpl
mov
out
or
nop
sbb
fildl
add
xor
xor
cmp
mov
mov
add
divl
test
mov
cmp
mov
scas
iret
std
xor
das
mov
cli
jge
data16
js
inc
or
js
std
mov
mov
sbb
pushf
flds
ja
jmp
adc
scas
imul
add
adc
sbb
dec
sbb
or
clc
cmp
sbb
test
addr16
aad
aas
or
jnp
pusha
imul
jmp
cld
pusha
std
dec
xchg
lds
xchg
mov
jp
incb
push
dec
in
sbb
sbb
jg
adc
lret
mov
icebp
add
sahf
jl
shr
adc
cmc
mov
xchg
sti
in
xchg
xchg
es
shl
add
mov
icebp
and
mov
mov
sarb
or
xchg
call
mov
or
pop
jne
and
adc
div
movsb
sbb
addr16
popf
into
clc
jae
or
aad
stc
push
mov
dec
std
imul
xchg
cli
mov
mov
es
or
cmp
cmp
rcll
pop
mov
and
xchg
push
mov
mov
push
mov
mov
xor
lahf
cwtl
je
fiadds
lds
or
add
out
cs
lods
loope
cwtl
cmp
xchg
dec
add
scas
out
ffree
or
mov
mov
loope
outsb
pusha
push
pop
in
push
gs
sub
jecxz
pop
mov
cmp
xchg
outsl
inc
jecxz
js
sbb
pop
call
pcmpgtw
push
addr16
out
push
dec
push
out
out
dec
pop
cs
aad
push
and
xor
movsb
mov
cmp
jmp
push
out
cmp
loop
mov
mov
sub
es
fimull
mov
sbb
rorl
mov
ret
or
xor
mul
xorl
out
cmp
mov
and
cmp
mov
cmc
adc
jnp
sahf
and
xlat
jo
jne
mov
sub
push
lods
and
cld
enter
mov
imul
jmp
mov
and
shl
test
add
jne
aad
mov
lock
sbb
push
test
adc
push
ja
fst
stc
test
pop
dec
add
lods
xor
inc
cmp
sub
iret
cmc
sub
xor
inc
push
cmpsl
test
out
cmc
ljmp
test
inc
jmp
mov
popf
or
aad
sub
lea
dec
cmp
lahf
sti
jne
lock
nop
stos
popa
data16
pop
xchg
sub
mov
jg
mov
pop
out
sarb
call
aaa
xor
leave
icebp
mov
movsb
xchg
leave
xchg
sarb
cmp
mov
rol
ret
dec
jnp
sub
aas
jo
mov
add
mov
xchg
or
sub
ss
in
jb
cmpsl
push
cmp
sbb
idivb
inc
das
and
mov
lods
xchg
lods
push
push
scas
xchg
divl
stos
push
popf
inc
adc
adc
mul
and
enter
pusha
cli
shrl
cli
pop
xchg
lret
dec
int3
mov
sbb
scas
out
and
add
daa
mov
cmp
cmp
out
add
pop
aad
stc
out
cmc
out
xor
dec
jle
mov
push
mov
xchg
xchg
or
mov
inc
pusha
pushf
mov
pusha
or
add
dec
and
push
fisttpll
cmp
cmpsl
push
xor
dec
inc
stos
cmc
inc
lods
outsl
mov
pop
bound
push
dec
int
jge
adc
mov
fmul
inc
jbe
jae
xor
pop
or
jmp
mov
and
xor
aam
jp
mull
sbb
mov
inc
lods
inc
outsb
mov
and
dec
imul
or
or
aam
aad
adc
pusha
dec
pop
mov
hlt
inc
inc
iret
cli
and
in
xchg
cmc
addr16
nop
insl
jnp
xor
sbb
lahf
mov
xchg
popa
jns
fsubrs
in
ljmp
xchg
mov
int
ror
sarb
xor
sbb
outsl
jne
jl
arpl
or
lds
sub
cmpsb
cmp
ljmp
inc
fmul
dec
in
xlat
add
loopne
xor
lods
out
ret
int
mov
cmp
shrl
and
mov
jns
outsl
jp
mov
je
data16
inc
xchg
xor
call
rclb
lret
sbb
cmp
inc
or
leave
movntq
sbb
nop
or
and
stos
mov
adc
xlat
in
inc
fcoms
mov
cli
les
or
aaa
cmp
movsb
mov
push
out
xor
dec
mov
mov
add
fisubs
push
push
out
push
test
pop
push
mov
cli
xchg
add
test
jb
mov
adc
ret
pop
push
cmc
scas
out
xor
fists
sbb
or
ljmp
sahf
cli
mov
xchg
push
xchg
cmp
lods
frstor
push
insl
test
mov
jp
into
aad
fs
ja
sub
fwait
mov
call
shrb
lods
popl
push
sbb
jg
ret
cmp
out
adc
add
and
mov
cmp
dec
into
inc
imul
xor
jne
add
adc
mov
add
fdiv
pop
fucom
loop
mov
inc
roll
lods
jns
pop
sahf
out
popa
adc
inc
xor
cmp
lods
jl
sub
xchg
push
and
int
inc
fdivr
cltd
xor
sub
fsubs
testl
gs
or
adc
imul
or
adc
lea
jae
push
add
repnz
popa
add
lods
in
es
push
iret
cmc
clc
cmpsb
and
adc
mov
roll
mov
out
or
test
stos
mov
mov
jmp
leave
ja
and
and
mov
and
mov
xchg
inc
mov
pusha
sbb
mov
mov
rorb
dec
inc
push
outsb
stos
inc
mov
sbb
jmp
cmc
hlt
sahf
sub
add
add
lods
addr16
lahf
fstps
imull
lcall
bound
test
push
pop
dec
xchg
enter
sub
dec
dec
fidivrl
sbb
pop
sarl
jb
popf
dec
sbb
fimull
pop
and
cmp
aam
xchg
cwtl
inc
iret
xchg
or
xor
repz
aad
cmp
pushf
jmp
les
jns
aad
add
rcll
add
or
loope
sbb
add
jne
mov
test
jle
jae
inc
jg
jns
or
xchg
xchg
out
adc
cmp
pop
je
mov
aad
xor
les
mov
add
add
sbb
imull
xchg
xchg
out
and
pop
cmpl
push
sub
je
xlat
xor
lds
in
das
xchg
xchg
fcompl
or
mov
ljmp
cmp
es
push
pop
push
sub
xchg
test
mov
jg
inc
cltd
lods
insb
ljmp
in
fcomip
mov
cs
int
jo
push
aas
sub
mov
mov
jbe
adc
int
and
and
add
or
outsl
mov
loope
lret
dec
fidivrs
repnz
dec
mov
xchg
adc
les
testl
inc
sbb
or
add
cmpsl
sahf
mov
icebp
and
xorl
cmc
add
push
xchg
out
jge
popf
pushf
int
das
adc
outsl
sti
jl
xor
cmp
jo
cmp
negb
mov
aam
pop
data16
ss
cs
mov
imul
mov
push
lret
icebp
mov
cwtl
bound
pop
std
push
lods
push
mov
push
ret
cmp
or
cld
or
into
xor
add
inc
outsl
test
mov
mov
push
sub
push
mov
in
push
aad
aam
pop
ror
pop
xchg
es
sub
movsb
push
dec
cmp
les
fiaddl
cmp
push
cmp
mov
jae
cmpsb
xchg
arpl
mov
lods
mov
cmp
cmp
fiaddl
sub
push
fsubp
mov
jnp
and
mull
mov
outsb
jecxz
jmp
push
aad
mov
hlt
adc
fldl
sub
test
loope
jg
mov
and
push
js,pt
int3
adc
ja
and
roll
and
jg
add
xchg
lret
test
dec
and
jns,pn
sub
es
mov
arpl
xchg
jmp
popa
inc
test
call
aas
sub
mov
adc
jns
xchg
je
gs
push
fsin
and
mov
push
divb
jge
xchg
cmp
xchg
mov
out
and
mov
mov
dec
mov
cmc
dec
adc
mov
or
inc
lods
cmp
stos
mov
call
pushf
cmp
sbb
xchg
mov
mov
mov
loopne
movsbl
leave
int
and
add
loope
cmp
dec
aad
cltd
aas
mov
popa
test
or
in
lds
jo
jp
push
addr16
cmp
mov
mov
es
push
mov
js
jmp
imul
ljmp
loope
lods
call
sub
fcom
loope
mov
mov
and
xchg
push
cwtl
jg
dec
push
cli
adc
dec
jmp
pop
les
call
int3
andb
scas
xchg
das
popa
jl
cmp
nop
jns
in
push
sub
and
add
jne
sbb
jmp
rorb
leave
je
aad
pop
popa
aas
mov
sar
mov
adc
adc
outsl
cmp
xchg
jmp
inc
fisttps
push
mov
loope
daa
mov
dec
or
or
dec
sete
sub
jp
imull
stc
outsl
jl
xchg
scas
mov
push
int
gs
dec
adc
and
add
lea
inc
or
outsl
ret
out
jae
mov
in
ljmp
test
aas
push
aad
jl
fdivrs
mov
mov
test
mov
sar
daa
mov
cmc
fisubl
push
rcrl
jl
jbe
imul
incl
pop
xor
sahf
jmp
mov
aaa
mov
dec
orb
ss
cmp
push
jecxz
cmp
push
das
enter
outsl
pop
mov
ficoms
pop
jmp
not
pop
fisubrs
mov
mov
fnstenv
sub
jno
addr16
and
js
in
mov
ret
or
add
jnp
mov
bound
fprem1
pop
shrl
jp
jns
pop
adc
test
jmp
shll
int
push
int
cmp
xchg
cmp
adc
push
adc
mov
xchg
std
xchg
or
or
mov
xor
inc
jmp
jae
outsl
mov
clc
shl
call
add
adc
pusha
push
add
cmp
lret
std
dec
xor
ja
sub
in
aad
xchg
icebp
mov
bound
xchg
int
add
fwait
mov
sbb
sbbb
sub
shrb
or
repnz
cmp
cmp
cmpsb
ja
fldenv
stc
jge
mov
shlb
loop
addr16
inc
cli
imul
jns
lods
add
cli
lods
cld
pop
xchg
mov
sub
lods
loop
xor
jo
repnz
xor
movsb
lods
jl
movsb
mov
mov
lds
testl
fs
aas
or
jb
dec
or
scas
stc
cmpl
in
inc
sub
push
xor
xchg
dec
dec
mov
scas
call
dec
pop
lock
or
pop
xchg
xchg
xchg
data16
sbbb
fbld
les
or
popa
rcrb
jecxz
orb
push
adc
or
jge
or
cs
add
das
pusha
add
mov
ds
xchg
into
jecxz
pop
add
xor
mov
adc
pusha
pushf
fldl
jbe
cmp
clc
xchg
lods
pop
divb
mov
shlb
inc
js
pop
lods
loop
jne
mov
into
lds
shlb
psubsb
loope
pop
out
mov
scas
add
inc
xchg
adc
pop
cmp
sub
pmaddwd
jo
inc
push
repz
div
shr
jo
pop
push
xchg
or
mov
lods
mov
out
sbb
lcall
cli
add
adc
mov
xor
movsb
aad
cmp
sti
mov
xchg
sbb
shlb
pop
sti
cmp
push
adc
jmp
sti
mov
dec
lods
jns
or
test
mov
mov
mov
fisttps
mov
pop
mov
cli
mov
and
rclb
lods
rcr
popf
mov
fistl
out
cmc
cmpsb
mov
push
stos
icebp
leave
push
adc
into
lret
movsb
pop
cs
fs
rclb
mov
pop
arpl
fwait
push
les
mov
add
xchg
adc
in
inc
or
xor
stos
xchg
jno
push
jb
shll
push
dec
ror
sub
scas
or
add
aas
xchg
inc
jne
lahf
stos
repnz
lret
mov
cmp
adc
jo
cmp
cmc
sbb
lods
int3
out
jb
xchg
add
mov
outsb
bnd
xchg
jne
and
es
in
sub
ja
fcmove
fmuls
icebp
addr16
das
iret
mov
xor
fcomip
fstps
cltd
movsb
mov
mov
lods
into
and
adc
push
aad
ss
pop
mov
lods
sbb
lea
adc
adc
decb
in
inc
std
rolb
sub
jmp
lahf
lods
adc
stos
add
push
sbb
add
ljmp
mov
adc
mov
dec
repz
in
ja
lahf
push
scas
gs
sbb
xor
adc
mov
ja
mov
test
push
test
sbb
dec
xlat
mov
stos
push
mov
int3
push
add
push
dec
adc
test
test
pextrw
xchg
shl
push
xor
sbbl
and
call
negl
sbb
and
cli
call
cmpsb
mov
movq
or
and
or
cmc
jb
pop
adc
cvtdq2ps
xchg
scas
sbb
dec
lock
loopne
aas
sbbl
imul
lds
int
or
testb
call
jmp
int3
clc
or
push
mov
or
je
push
or
fimull
jmp
aad
cmpsl
cli
dec
push
mov
jg
jmp
push
jns
movsl
std
jo
inc
fldl2e
popa
int3
fstpt
sbb
add
icebp
insl
cmc
mov
out
xchg
push
or
dec
test
ss
ss
stos
lock
je
cmp
add
insb
jo
arpl
or
into
cmc
push
inc
hlt
mov
pop
outsl
fistps
popa
jmp
mov
jno
ret
mov
or
xor
mov
xchg
rcrb
iret
or
je
mov
cwtl
adc
mov
into
mov
lret
push
fistps
pxor
cmpsb
adc
xchg
sub
and
js
stos
inc
jmp
or
mov
ss
push
ss
nop
pop
stos
xchg
xchg
sti
addl
aad
sub
setne
mov
xor
and
sbb
pop
in
out
sub
imul
mov
cld
sub
jmp
lcall
push
pop
loopne
push
hlt
xor
add
add
dec
daa
iret
xchg
mov
gs
mov
jge
lock
or
addr16
cmp
xor
dec
dec
xchg
ss
mov
cmovo
cmc
int
es
push
lcall
test
inc
or
pop
sti
pop
loopne
out
add
dec
call
iret
sub
sub
or
std
push
inc
mov
mov
insl
cmc
lret
data16
fidivrl
js
nop
inc
lods
mov
sti
or
add
rorb
pusha
adc
shll
sub
or
mov
xor
aad
decb
cmp
or
jae
xchg
pop
mov
mov
jmp
mov
imull
or
iret
ret
cmp
xchg
jg
out
and
pop
sub
std
sbb
xor
pop
scas
aad
mov
testb
neg
fcom
sti
popa
testb
dec
adc
jno
lock
jmp
test
jp
sahf
lds
jmp
inc
inc
or
pop
mov
xchg
insb
sbb
stos
xor
cmpsb
scas
ds
jne
testl
pop
lods
sub
popa
push
arpl
mov
pop
dec
inc
dec
cwtl
stos
lods
or
cli
sbb
int
sbb
mov
lods
sub
ficoml
fdivrl
out
into
test
test
adc
add
mov
mov
adc
cmc
testl
dec
aam
loop
mov
in
or
pop
icebp
push
dec
arpl
mov
pop
push
cmp
adc
lret
cmp
aad
cld
push
push
ror
lods
cmp
gs
pop
popf
loope
iret
in
in
push
or
and
enter
xchg
bts
aad
jne
pop
sub
loope
dec
mov
outsb
cmp
lret
sbb
adc
add
pop
and
pop
push
out
mov
jg
dec
mov
jp
mov
xchg
in
psubusb
test
loop,pn
fdivrl
dec
test
inc
sub
sbb
fcos
pop
movsl
lea
jnp
aam
pop
dec
mov
xor
xor
xlat
mov
push
mov
cli
and
fs
hlt
cwtl
loop
jb
test
scas
les
xchg
adc
cmp
lods
iret
ldmxcsr
test
xchg
push
nop
ljmp
sub
dec
test
out
and
sbb
cmp
mov
int3
cmp
or
jmp
or
in
or
jae
cli
cmp
scas
or
cmp
fldenv
or
inc
mov
sbb
pop
add
out
pop
dec
call
loop
xor
in
sub
adc
push
lods
lds
loope
pop
daa
mov
push
or
xchg
fs
fdivrl
cli
jl
cmc
test
ret
add
popa
js
mov
xchg
dec
mov
fistps
jmp
lahf
or
int
call
incl
cmc
lret
jecxz
mov
adc
mov
push
lea
int3
out
mov
mov
adc
shr
mov
dec
into
xchg
js
jne
js
cs
add
nop
mov
sub
push
xlat
popf
pop
jnp
aad
and
icebp
or
outsl
cmp
fisttps
dec
cli
mov
mov
addb
pop
fdivrp
mov
adc
test
push
lds
mov
cld
lahf
lret
les
addl
negl
and
or
clc
dec
scas
jmp
push
int
pop
testl
jge
call
add
cli
aad
mov
fcmovne
mov
dec
pop
add
jmp
push
sub
js
xchg
leave
fs
scas
mov
hlt
pop
int
leave
sub
daa
sub
push
rorb
cmc
dec
lcall
mov
dec
push
ljmp
inc
movsl
mov
cmc
lcall
push
adc
lret
faddl
aaa
or
sti
dec
mull
loop
xchg
or
pinsrw
jae
cld
mov
mov
sahf
addr16
jg
repnz
add
add
aad
cmp
mov
dec
mov
or
cmc
je
add
or
and
notb
out
dec
jne
push
mov
loope
into
xor
pop
cmpsb
inc
sahf
das
inc
sub
cmp
cmp
in
push
xchg
xchg
mov
xchg
sub
or
mov
arpl
jp
xchg
fldl
mov
arpl
shr
fbstp
test
sahf
mov
add
dec
aas
sub
dec
mov
push
push
lods
or
mov
into
lods
sub
roll
std
addr16
ret
adc
stos
mov
pop
or
scas
push
in
roll
stc
test
mov
in
popa
inc
sub
out
inc
dec
out
stc
mov
dec
jecxz
jecxz
cmc
test
test
adc
adc
mov
pushf
incl
xchg
scas
lods
fcompl
wrmsr
inc
cmpb
pushf
jmp
out
inc
dec
pop
test
lods
cmpl
mov
xchg
or
test
in
lock
jb
test
add
dec
xor
sub
adc
fwait
clc
sbb
fidivrs
clc
or
xchg
lret
js
in
fiaddl
int
mov
jg
cmp
xor
adc
adc
sub
cmpsb
cld
lcall
addr16
dec
rcr
aas
jmp
dec
aad
push
aaa
pop
andb
test
cmp
add
sbb
ja
pop
mov
cltd
adc
nop
sub
and
dec
mov
and
xchg
and
je
pop
fcomip
pop
shl
arpl
int3
and
gs
xor
test
pop
inc
sti
pop
rep
sub
pop
in
or
push
popa
xor
aad
adc
mov
mov
mov
leave
cld
mov
add
push
add
jg
movsl
inc
idivl
pop
mov
clc
orl
and
push
xchg
inc
iret
fimull
lcall
and
add
fimull
sub
fsubs
pop
sbb
int3
jne
push
sub
xchg
dec
stos
ja
rcrb
xchg
fldpi
inc
arpl
rorl
add
popf
sub
mov
loop
sbb
xrelease
loopne
test
xchg
jp
pop
out
scas
lahf
mov
es
aad
xor
jnp
pop
in
xlat
movsb
aas
notl
rcll
ds
dec
lock
dec
mov
je
mov
sbb
ja
fisttpll
xchg
dec
stos
or
adc
fwait
lcall
push
clc
sti
add
dec
dec
fidivrs
mov
or
cwtl
aas
sub
xchg
cmc
xchg
jnp
pop
dec
aad
lret
xchg
adc
out
adc
xchg
push
ja
xor
push
sahf
lock
aad
push
into
pop
mov
mov
aas
mov
repz
scas
js
loope
out
inc
loope
ret
add
dec
test
and
inc
add
inc
sbb
push
jmp
dec
fistps
inc
loop
add
mov
sti
pop
and
pop
pusha
sahf
inc
sub
jnp
dec
iret
and
and
arpl
enter
movsb
mov
add
out
fwait
cli
aad
repz
test
mov
add
mov
push
jg
sub
push
scas
jns
int
fprem
decl
daa
push
mov
push
daa
inc
dec
dec
out
adc
jmp
pushf
mov
imul
fistpl
and
std
pop
lahf
sti
inc
aam
outsl
xchg
push
mov
test
nop
dec
movsl
xchg
call
cwtl
or
push
cmc
int
shlb
mov
pop
push
mov
lahf
cmp
push
cmpsl
add
or
inc
lret
ss
push
hlt
push
mov
repnz
lret
test
mov
pop
loop
dec
mov
insb
hlt
xchg
jge
mov
dec
shr
js
call
outsb
cltd
push
daa
xor
popf
push
inc
insl
sub
ds
push
mov
leave
fistpll
jp
push
notl
lea
std
xorb
sahf
sub
xor
fnstenv
rcr
or
xor
or
or
xor
shlb
adc
inc
adc
jmp
cld
jns
out
int
or
fsubrl
aad
mov
mov
mov
repnz
sub
pop
int
or
fisttpll
call
mov
rorl
or
dec
repz
subb
mov
fwait
inc
jp
je
cmp
jbe
or
in
push
or
into
sahf
sub
mov
loope
ret
ja
test
pop
inc
jne
dec
pushf
cmc
or
lods
gs
in
repnz
frstor
add
subb
pusha
dec
sbb
mov
pop
outsb
cmp
sub
js
cmp
stos
mov
xchg
or
fistpl
xorb
negl
cld
test
popa
xchg
pop
jnp
inc
dec
mov
adc
dec
mov
pop
fwait
and
into
cmp
outsl
mov
or
imul
mov
mov
xor
ficoms
sbb
bound
xor
mov
mov
adc
xchg
push
xchg
fdivrs
mov
inc
jno
push
or
mov
pop
mov
sbb
sti
xor
sub
adc
jmp
out
andl
xchg
test
add
lds
out
sahf
push
push
call
push
fnsave
xorl
push
pop
imul
mov
push
in
ljmp
mov
inc
movsb
add
jp
call
pop
jmp
loope
cmp
or
or
movsb
addr16
cmp
add
lods
xchg
xchg
dec
enter
mov
lcall
out
sbb
ljmp
pop
outsl
int
popa
or
arpl
dec
push
lods
or
repnz
mov
into
adc
lea
or
dec
lods
sub
dec
hlt
js
jmp
rcl
loope
adc
mov
test
ljmp
xchg
mov
sbb
mov
jecxz
test
insb
jb
jmp
loop
or
inc
fs
mov
and
fs
rclb
xor
mov
mov
xchg
dec
xchg
outsb
out
int
and
idivl
mov
cmp
xchg
lahf
cmp
in
mov
sub
dec
fbstp
inc
out
iret
lret
mov
test
or
dec
jmp
xchg
out
test
push
inc
cli
fnsave
push
dec
aam
sub
adc
aad
enter
das
idivb
out
jl
arpl
add
aad
xlat
jno
xchg
add
cmp
cmp
xor
lea
divl
fwait
mull
xlat
mov
fstpl
scas
mov
aad
mov
imul
add
lods
pop
jno
pop
cmp
into
pop
dec
lods
jae
and
xor
testb
jl
test
aas
jno
mov
and
fmull
inc
nop
jbe
cmc
pushf
test
test
xchg
xchg
sub
aaa
insb
pop
nop
lds
test
mov
xor
mov
or
mov
jl
and
jecxz
divb
mov
jmp
xchg
sub
xor
cmc
adc
cmp
lea
lods
int3
add
push
adc
idivb
movsl
lods
push
add
scas
rorl
xchg
imulb
mov
and
dec
sub
rcrb
mov
xchg
jp
mov
xchg
and
sub
sub
push
add
loope
or
cs
xchg
mov
push
or
xchg
hlt
or
pop
xchg
fbld
sub
push
jmp
cmp
mov
cmc
movzwl
lods
mov
mov
push
scas
stc
sub
fsub
inc
dec
dec
stc
push
or
dec
lea
adc
jg
fcomp
cli
adc
arpl
jns
push
gs
push
repz
gs
xchg
pop
jnp
adc
push
cmc
dec
push
xor
scas
nop
xchg
or
in
std
and
stos
jmp
movsb
es
negl
push
nop
int
xor
jge
push
xchg
mov
mov
xchg
fwait
addr16
std
cmp
mov
mov
nop
out
inc
dec
fdivrp
and
lock
push
ret
mov
mov
jne
jg
dec
aad
ljmp
loop
or
stos
sbb
iret
pop
cmc
cmp
dec
sbb
in
push
xchg
inc
jge
iret
mov
mov
clc
lods
sbb
push
sbb
jbe
stos
call
sti
pop
and
cwtl
sbb
xor
jg
sub
mov
sar
or
mov
push
iret
filds
movsl
pop
xchg
ss
test
add
in
jp
cmc
aad
lock
xchg
out
mov
xor
test
sahf
into
fsubr
loope
inc
shll
scas
pusha
cltd
popf
loope
or
dec
xor
test
int
fwait
mov
bound
ret
test
fbld
repz
xchg
sarl
mov
mov
lret
jnp
sub
test
inc
mov
lods
loope
mov
stos
shlb
addr16
lret
js
and
stos
stc
jae
fadds
scas
xchg
xlat
ja
cmpsb
dec
xlat
sbb
sub
insb
mov
repnz
xlat
cmp
ja
mov
or
and
stos
imul
stos
pop
push
sbb
dec
xchg
push
aad
adc
scas
push
mov
cltd
cmpl
sbb
mov
or
mov
insl
add
insb
in
mov
inc
sub
test
push
fcoms
jb
mov
bound
les
sbbl
and
gs
aam
and
shl
mov
sub
cwtl
push
es
loop
pusha
shrl
add
push
daa
cmp
rclb
cmpsl
js
imul
lahf
mov
cmc
addr16
std
push
fwait
adc
xor
ja
sti
sub
popf
aaa
adc
xor
cmc
adc
xor
daa
imull
cmc
pop
and
cmp
add
push
stos
xor
mov
jp
mov
cmpsl
repnz
push
push
add
lods
and
lahf
xchg
and
subb
int3
cltd
ret
cmc
movsb
sti
push
adc
xor
aaa
jg
cmc
fstps
jnp
sub
mov
loope
pop
shrl
mov
pop
mov
mov
movsl
mov
cmp
xchg
daa
in
push
pop
in
popf
call
fs
cmc
fiaddl
sub
dec
cmc
daa
lret
out
xlat
lcall
std
mov
jnp
aas
scas
adc
sbb
mov
fisttpll
scas
fdivr
cmp
popf
or
or
int3
cwtl
dec
aad
int
jmp
or
xor
aad
cmpsb
adc
and
push
imul
and
loopne
out
fucomi
and
in
or
movsb
test
lea
pop
mov
pop
push
jae
scas
js
sub
push
mov
addb
sub
and
negl
mov
sarb
loope
movsl
decl
pop
mov
xor
mov
fiaddl
sub
mov
ss
cwtl
arpl
lret
lahf
mov
in
and
cmp
cmp
pop
repz
popa
int
sub
into
mov
out
adc
clc
sub
out
fwait
xchg
add
mov
fldl
mov
imul
test
jl
mulps
inc
jecxz
sub
dec
add
in
aam
mov
inc
cmp
js
leave
push
dec
stos
jl
pop
inc
xchg
loopne
movb
adc
loope
xchg
les
dec
cmp
or
jge
out
std
and
mov
inc
les
hlt
ror
cmc
addb
in
inc
pop
fldcw
stc
sti
stos
jmp
fldl
shlb
inc
int
lea
fstp
jp
inc
xchg
add
add
dec
push
in
leave
add
or
dec
xchg
dec
pop
xlat
fdivl
aas
aam
roll
dec
mov
push
loopne
lahf
in
out
or
push
fdivrs
cli
push
push
pop
dec
push
jb
jmp
aad
icebp
imul
sbb
xchg
out
xchg
jne
cmc
sub
imul
mov
cmp
cmp
out
pop
or
imulb
ljmp
cmc
nop
pop
jno
sbb
lods
push
jno
cmp
mov
mov
iret
cmp
mov
and
int
mov
sti
iret
ret
lea
add
lods
imul
inc
sub
xchg
add
or
js
jg
sti
fisttpll
cltd
xchg
ja,pn
xchg
push
data16
cmp
adc
into
xor
loope
int
lods
push
es
std
xor
pop
mov
push
in
aad
ljmp
sub
push
in
loopne
aad
fldcw
adc
adc
in
mov
fdiv
xchg
push
int
dec
in
sbb
or
mov
or
out
cld
ret
add
sub
test
call
jge
popa
scas
xchg
into
push
dec
les
fstl
mov
stos
adc
mov
mov
jg
inc
imull
cmc
stc
or
sbbl
imul
adc
inc
in
sarb
cmp
movl
divl
loop
cmc
iret
cli
jae
pop
aad
outsl
test
cmp
and
mov
or
sub
dec
dec
testl
mov
into
popf
dec
mov
inc
add
pop
out
dec
sbb
inc
push
push
cmc
fldl
inc
fcoms
lods
loopne
mov
popa
out
test
inc
ds
icebp
and
loop
movsl
push
jle
popf
push
cmovnp
mov
dec
inc
push
js
iret
cmc
inc
sub
jmp
mov
mov
lret
dec
add
scas
loope
jge
pop
jmp
sbb
xchg
mov
lds
loopne
inc
mov
loope
rolb
bound
pop
stos
sbb
pop
sbb
and
add
add
lea
pop
and
or
adc
call
xchg
ss
test
mov
loop
add
mov
arpl
and
aam
push
inc
add
es
aad
hlt
scas
cmc
cmc
fs
sbb
mov
rorl
jmp
mov
mov
mov
mov
lcall
in
pop
cld
decl
push
push
popf
arpl
xchg
dec
enter
jae
out
and
sbb
clc
fstl
adc
cmpl
cmp
out
dec
push
push
mov
pushf
test
addr16
jmp
imul
repz
pop
pusha
cmpsb
out
loope
xlat
imul
loope
call
enter
push
andl
out
and
jae
adc
add
sub
jle
xor
cltd
movsl
sub
je
inc
add
in
sti
mov
add
push
xchg
lods
std
mov
dec
mov
clc
or
jo
call
push
xchg
jge
dec
arpl
cmp
jl
mov
adc
stos
arpl
dec
stos
mov
and
shl
rcr
add
mov
aam
arpl
mov
in
lds
and
out
lahf
in
out
xor
cli
jecxz
adc
repz
pop
jns
add
aad
fbstp
cmp
scas
icebp
imul
frstor
xchg
addl
xor
sub
and
dec
push
iret
lock
mov
rolb
int3
mov
shrb
fstpt
lods
mov
loop
aas
and
fnsave
cmp
std
loopne
jne
sbb
stc
outsl
bzhi
and
xchg
jle
in
or
jecxz
xor
fwait
pop
imul
mov
xchg
inc
jle
in
mov
int
mov
call
mov
int
adc
test
and
jle
xorl
pop
imul
inc
cmp
cmp
and
jg
cmp
les
mov
rolb
sbb
pop
int
or
ds
xchg
in
mov
and
mov
xchg
mul
les
jns
and
xchg
mov
stos
rcr
lahf
sbb
dec
clc
mov
mov
mov
loope
push
lret
lods
mov
add
push
cmc
insl
stos
lds
jge
dec
outsl
sbb
popf
repnz
imulb
dec
add
jno
inc
add
subl
arpl
int
jg
or
cltd
lods
jecxz
push
imul
int
xchg
pop
outsl
int
add
cmpsb
fidivrs
xor
imul
pop
xchg
decl
push
fsubrl
add
pop
dec
lea
lret
xchg
sub
jno
or
pop
pop
pop
jbe
adc
arpl
mov
js
lahf
xchg
scas
int
jo
mov
cmp
mov
mov
scas
push
lock
test
dec
xor
outsl
or
mov
or
mov
test
pop
and
scas
jl
repz
lcall
loope
aad
add
push
push
and
cwtl
sarl
mov
push
xchg
rorl
jge
arpl
sahf
mov
mov
int
loopne
jl
pop
sarb
mov
push
insl
shlb
mov
xlat
mov
push
out
mov
je
push
or
adc
std
xchg
testl
sahf
xchg
jle
push
dec
sub
lods
pop
rclb
cmp
cmp
mov
dec
fbstp
rcr
pop
mov
push
add
mov
mov
xor
imul
push
cld
into
add
mov
push
sub
popf
movsb
push
lock
gs
imul
pop
mov
and
jno
movsl
sub
mov
mov
push
push
sti
cmpsb
xchg
inc
inc
mov
pop
js
mov
add
popa
orl
or
pop
pop
push
adc
imul
call
in
cmc
jo
pushl
mov
cmp
enter
loop
mov
faddp
jmp
dec
xor
imul
inc
or
pop
out
cmp
movsl
push
dec
lahf
repz
xchg
add
mov
sub
pushf
push
sub
mov
adc
outsl
leave
stos
and
mov
mov
or
mov
dec
sti
lods
cld
arpl
inc
pop
movsb
jmp
dec
pop
pop
mov
lret
in
sub
pop
loope
into
xchg
ss
loope
pusha
insb
cmc
mul
xchg
adc
fdivrl
fimuls
sub
dec
jnp
jb
in
jp
loopne
out
sub
push
fstpt
mov
test
cmp
out
mov
xlat
xor
leave
cmc
or
pop
fmull
xor
dec
out
cmovge
dec
or
xchg
pop
cmp
out
mov
cmpsl
mov
dec
mov
xchg
cs
cmc
pop
int3
mov
push
pop
sub
adc
dec
mov
or
jb
loope
jmp
jbe
jne
lods
cmp
into
and
imul
int3
gs
jge
mov
xchg
js
stos
outsl
outsl
cmp
dec
mov
imul
decl
adc
sar
pop
cmp
ds
les
imulb
push
mov
stos
repz
and
fldln2
sbb
fmul
test
xor
inc
or
pop
dec
lret
stos
lods
mov
push
andb
dec
sub
push
or
push
xchg
popa
jbe
jmp
adc
lock
stc
inc
int
out
mov
pop
clc
out
fisubl
xorb
aad
lret
xchg
bound
sub
mov
and
jb
pop
xchg
fcmovb
pop
lret
jb
xlat
cmc
nop
mov
sarb
cli
jge
mov
and
aas
imul
into
imul
cmp
nop
dec
out
psraw
test
sbb
pop
popa
push
or
dec
push
push
aad
scas
or
jae
lods
mov
lahf
fadds
mov
or
in
cmp
lea
clc
dec
sub
fmuls
mov
aaa
cmp
xor
inc
les
jl
mov
leave
push
in
xor
clc
stos
mov
aas
mov
pop
jb
cs
or
mov
cwtl
mov
scas
and
xchg
insl
scas
push
pop
jne
sub
cmc
xor
mov
mov
cli
rcl
mov
pop
int
pop
sub
jp
fcompl
lret
aas
add
sbb
cltd
lds
push
cli
jnp
cmp
add
and
sub
int3
test
inc
fsubl
xor
sub
xor
andl
insl
dec
mov
mov
jecxz
dec
mov
xchg
into
and
jmp
mov
jecxz
fs
std
dec
or
adc
jo
sub
or
out
sarl
movsb
xor
dec
mov
movups
loope
jg
inc
push
or
pop
stos
cmp
jge
jl
stc
fmull
dec
sub
out
mov
aaa
dec
xchg
pop
pop
cmp
pop
push
jns
fsubrs
cmp
pop
icebp
mov
call
inc
fdivp
rolb
xor
mov
push
mov
faddl
and
adc
mov
mov
jne
ror
fsubs
push
sbb
xor
adc
or
push
btc
sub
mov
aad
pop
int
jmp
push
shrb
jns
jp
loopne
or
xchg
ds
sti
call
pop
loopne
insl
dec
mov
jns
xlat
xor
adc
nop
cmp
or
push
inc
mov
dec
add
pop
or
call
ficompl
pop
in
add
loopne
jge
cs
cli
sbb
in
xchg
mov
scas
pusha
xor
or
adc
pop
jno
xchg
add
and
cmpsl
adc
pusha
test
mov
test
out
mov
xchg
std
cmp
incb
cmp
push
xchg
repnz
inc
inc
jne
out
cmp
cmp
and
push
ss
push
aaa
out
sti
stc
popa
cmc
insb
inc
js
dec
in
cmp
xor
std
sbb
daa
int
aad
push
push
in
dec
sbb
cmc
pop
mov
or
cmp
and
mov
out
mov
lret
mov
cltd
or
ja
cli
or
sti
mov
ffree
dec
mov
adc
push
adc
xchg
data16
xor
stos
out
sahf
xlat
iret
fldcw
push
mov
lcall
pop
and
jl
inc
mov
or
fisubl
aaa
inc
push
movsb
jge
mov
pop
inc
aad
out
inc
movq
and
lret
std
imul
loop
pop
popa
adc
mov
pop
inc
out
xchg
xchg
iret
movsl
decl
enter
xchg
fcomps
lods
add
and
cmp
gs
imul
or
or
aad
push
pushf
xor
popf
sbb
lods
xchg
push
jge
and
or
push
das
inc
stc
mov
fisubrl
jns
in
in
inc
loopne
hlt
lret
cmc
in
fwait
scas
jae
hlt
test
in
xchg
lret
add
lods
scas
fimuls
mov
lods
rorl
push
dec
xor
mov
pushf
inc
xor
fcmovnu
lfs
test
jl
fimuls
cltd
xor
out
sbb
inc
and
icebp
mov
aas
movsl
lahf
in
add
push
and
call
push
jmp
pusha
shlb
lcall
sub
mov
popa
mov
adc
or
iret
xchg
sbb
int3
xor
fs
inc
ja
dec
or
xchg
sti
or
cld
mov
xlat
sub
adc
fs
xchg
dec
pop
adc
lahf
dec
push
mov
mull
add
out
cmpsb
movsl
mov
xchg
xor
push
rclb
or
jle
test
movsl
clc
add
mov
push
cmp
push
ljmp
or
adc
push
lea
jmp
dec
inc
cmpsl
les
adc
pop
into
dec
pop
aad
arpl
and
push
addr16
xchg
xchg
lret
mov
or
mov
lea
imul
int3
mov
stc
push
pop
jo
mov
shll
jnp
cli
movsb
test
testl
in
test
movsl
int
aad
int
cs
lcall
sarb
rol
data16
adc
xor
push
inc
repz
lea
in
xchg
lods
push
or
aad
mov
mov
leave
mov
test
movsb
sti
cmc
or
sbb
mov
call
lret
jno
add
imul
js
loop
mov
aad
xchg
mov
imul
or
push
push
in
lcall
mov
outsb
leave
idivb
inc
jp
jecxz
testl
mov
sbb
cltd
xor
ljmp
pop
mov
sub
jl
and
push
loope
in
cmp
retw
jb
icebp
sahf
push
push
jno
std
sbb
mov
adc
ss
inc
cwtl
mov
gs
add
out
mov
icebp
lods
jge
roll
into
in
mov
aam
adc
push
and
pop
fs
loope
dec
std
dec
lret
gs
outsl
int
aad
in
daa
jge
pop
shl
cmp
int
mov
push
or
xor
adc
out
test
jle
xchg
cmp
pop
push
arpl
lret
cwtl
push
mov
cmp
repnz
icebp
jnp
dec
movsl
inc
xchg
test
iret
cmc
pusha
push
sbb
push
rolb
aam
or
sub
xchg
ret
stos
cs
sub
mov
roll
std
mov
into
jmp
into
lods
and
xlat
sub
nop
cwtl
cmp
cltd
mov
xchg
add
inc
jns
jbe
mov
imulb
fimull
repnz
and
sbb
cmpsl
or
cwtl
pop
aam
and
xchg
dec
jno
test
ljmp
pop
icebp
xchg
insl
sbb
mov
push
std
call
pop
mov
push
cmp
fnstsw
lods
cmp
test
cmpsb
fdivr
cmpsl
pop
out
mov
dec
aad
mov
xchg
cwtl
jl
or
gs
xor
lcall
bswap
and
push
lds
enter
stc
inc
mov
mov
into
mov
lods
pusha
dec
mov
xor
cmpsb
pop
cmp
dec
int3
iret
bound
sub
add
sub
adc
fs
add
mov
test
addr16
jnp
sbb
or
fs
out
imul
adc
negl
popf
into
add
cmp
xor
cltd
ss
inc
or
or
ljmp
sahf
cmp
mov
mov
orb
bnd
das
aad
pop
mov
dec
xchg
inc
cmp
xor
or
mov
cmp
test
into
imul
lret
bound
or
inc
insb
xchg
rclb
int
xchg
test
in
les
jp
add
jo
mov
out
pop
inc
xor
add
fucomip
movsb
and
rorb
aad
outsb
int
loopne
andl
inc
push
icebp
dec
rcll
jge
fwait
push
arpl
jmp
ljmp
aad
cld
rolb
jmp
mov
mov
shlb
stos
mov
lock
and
aad
push
add
popl
out
outsb
ljmp
mov
mov
jecxz
aad
rolb
shrb
int
addb
adc
mov
into
fs
outsl
pop
pop
xchg
out
xchg
mov
inc
xchg
js
test
mov
faddl
ja
into
mov
push
addb
xchg
lods
and
scas
nop
mov
aaa
xor
cmc
pop
xor
fcomip
fs
sti
jge
mov
out
mov
pop
mov
int
xor
js
repz
inc
add
pushf
and
das
mov
ret
fmull
pop
or
cmp
pusha
lods
ret
pop
push
int
mov
pushl
mov
and
dec
dec
aam
push
mov
sub
and
jg
leave
lock
dec
aad
push
or
mov
dec
or
test
cmp
add
out
ljmp
aas
pop
mov
outsb
aad
sub
test
test
mov
testb
dec
adc
mov
and
mov
aad
lods
stc
or
add
pop
mov
mov
lods
mov
insb
aad
pop
dec
dec
movsb
add
fldl
adc
push
cmp
cmp
jno
gs
jo
dec
xchg
mov
in
cmp
decl
call
aad
mov
push
xchg
sub
test
ret
fs
xchg
js
aad
popa
int3
sbb
cmpsl
into
add
jmp
push
add
cmp
pop
rcll
xchg
in
sbb
xchg
stos
lock
mov
or
out
xchg
mov
jne
mov
xchg
ss
dec
cmp
jp
shl
jl
outsl
repz
cmc
scas
dec
sub
and
adc
or
into
inc
and
aad
out
xchg
jbe
add
mov
stc
iret
and
test
rcr
dec
mov
icebp
out
lcall
sarl
rorb
bound
mov
jle
jmp
or
das
aam
or
js
add
cli
cmc
addr16
sarb
lock
sub
pop
or
inc
stos
int
mov
addr16
xchg
cs
xor
pusha
dec
dec
mov
je
imul
rcll
pushf
cmp
mov
repnz
into
stos
cmc
iret
adc
lret
dec
xchg
pop
lea
cld
mov
clc
push
imul
icebp
mov
push
testb
or
dec
notl
xchg
pop
jg
rcrl
jnp
cmp
inc
pop
lret
adc
imul
dec
cs
mov
sahf
cmp
mov
shll
pushf
fcmovnbe
call
ficoms
xchg
xchg
mov
xchg
xchg
xor
mov
test
pop
or
add
push
xor
sbb
scas
jae
test
fisubl
stos
loope
ja
jge
jnp
sub
movsl
stos
call
dec
xchg
cmc
js
adc
push
pusha
iret
rorb
stc
sub
lods
subb
xchg
mov
xlat
cmp
cmp
ret
or
imul
adc
je
test
jmp
inc
pop
jl
adc
mov
js
pop
outsb
div
es
std
test
lods
fldt
sbb
data16
mov
mov
pop
pushf
into
mov
push
ljmp
mov
stos
mov
aam
mov
cwtl
jl
push
adc
dec
jbe
adc
mull
imul
and
xchg
imul
mov
std
aad
pop
dec
out
cmc
mov
mov
sbb
scas
push
sub
outsl
cmp
mov
jl
push
or
test
jbe
add
adc
and
dec
loope
add
out
fimuls
movsb
ds
and
xor
add
aad
xorl
ljmp
loope
lret
jnp
clc
iret
adc
inc
push
shll
sub
dec
into
jnp
add
sbb
add
xchg
xchg
andl
fwait
mov
sbb
xor
adc
jae
out
je
call
shll
fistps
fcmove
push
xchg
inc
sbb
add
push
bound
jno
or
jmp
push
into
mov
sbb
popa
in
xchg
cmc
dec
nop
orl
aad
add
mov
pop
jg
ja
aam
mov
dec
mov
dec
add
movsb
out
xchg
scas
aad
inc
lret
cmp
fs
div
jbe
add
aaa
pop
push
cmp
adc
add
mov
pusha
icebp
inc
pop
btc
out
push
stos
xchg
xchg
adc
xchg
jno
test
shlb
mov
iret
cmc
dec
push
cmpsl
pop
jo
mov
push
jmp
lods
dec
jmp
rorb
mov
push
xchg
mov
dec
or
add
lock
rep
js
xchg
jge
pop
out
mov
push
cltd
cmp
or
cld
out
mov
imul
call
add
inc
or
int
sub
mov
pop
movsb
mov
leave
sub
add
insl
frstor
ficomps
inc
push
mov
cmp
sub
repz
pop
aad
push
mov
call
mov
fnstenv
dec
xchg
jnp
aad
out
or
fistpll
jmp
jbe
nop/reserved
sub
or
mov
add
mov
mov
test
cltd
inc
lahf
push
inc
call
cmp
mov
add
jmp
mov
jno
pusha
mov
pop
push
dec
cmp
mov
adc
inc
sbb
sbbb
cmc
jge
loope
and
xchg
fidivl
push
pop
mov
hlt
orl
into
into
inc
cmp
mov
jmp
fldt
xchg
mov
in
insl
ret
repz
movzwl
sbb
cmpsb
cmpl
or
dec
inc
mov
pushf
lahf
inc
cmc
repz
fnsave
lods
fisttpll
insb
popa
jge
out
jmp
jp
iret
in
xor
aaa
jge
inc
notl
mov
out
sub
outsl
push
stc
jge
shlb
add
aad
jne
in
dec
scas
sub
push
in
adc
fimuls
int
ud2
andb
and
xor
mov
mov
shrb
stc
and
lds
aad
mov
cmpsl
andb
adc
mov
lods
jno
jae
and
jne
and
outsb
dec
bound
or
test
sbb
adc
mov
or
cmc
in
je
pop
mov
inc
cmp
dec
pusha
mov
dec
and
shll
dec
lret
mov
shlb
call
out
inc
lods
or
lds
dec
popl
push
repz
cli
xor
add
dec
aam
adc
add
js
jns
sar
mov
xor
mov
mov
cltd
dec
or
lods
sub
dec
or
setl
inc
in
jb
int
push
jmp
bound
mov
sahf
mov
int3
div
sub
mov
dec
or
sahf
mull
scas
xchg
add
mov
or
iret
cs
and
std
dec
jge
xchg
dec
lahf
jmp
fsubrs
or
mov
ss
jns
fs
push
fdiv
das
jge
adc
loop
addr16
lods
inc
inc
push
in
inc
push
xchg
out
add
aad
sbb
pop
or
dec
cwtl
nop
imul
jb
xor
jne
sbb
rcll
jnp
ja
add
rcrb
loope
outsb
sti
cltd
outsl
int
fcoms
pop
and
mov
loope
xor
loopne
fidivrs
std
pop
mov
xchg
fisubl
lahf
mov
mov
mov
and
js
adc
add
loop
mov
stc
push
and
mov
movsb
mov
mov
inc
je
pop
addl
cmc
jno
cmc
cs
cmc
add
addr16
rorl
daa
cmp
mov
mov
inc
rcpps
out
sbb
rcll
mov
adc
aad
jno
mov
fs
pop
mov
or
pop
scas
ret
xchg
push
shll
jg
in
sbb
inc
xlat
sahf
loope
adc
inc
imul
lcall
scas
sub
xor
lock
inc
cltd
outsl
dec
jecxz
jno
xor
inc
pop
loopne
hlt
pop
bound
imul
scas
pop
lods
test
sub
sub
sbb
int
sbb
pop
xchg
shl
out
push
push
lds
sub
mov
or
loope
jns
xchg
arpl
xchg
aad
mov
or
fistpll
push
ret
mov
sub
or
sbb
loope
cmpsb
pusha
in
adc
push
lcall
aas
jbe
dec
dec
mov
hlt
sbb
leave
and
jl
repnz
fdivrs
inc
rcr
pop
popa
lods
xchg
push
lahf
mulb
ret
sbb
das
rcll
cs
dec
repnz
add
not
push
and
push
jne
int
inc
test
dec
cmp
test
out
add
lahf
mov
dec
mov
mov
sti
jg
popa
jno
mov
out
lcall
mov
or
das
popf
mov
sub
mov
popf
mov
mov
and
jbe
add
mov
sub
push
pushf
pusha
add
sti
push
pop
push
sahf
lret
xchg
imul
xor
pop
test
mov
imul
into
icebp
and
jge
repz
mov
jno
loope
cmp
nop
imul
xor
adc
insb
test
cltd
sub
fmul
sahf
pushf
push
mov
jp
fucomip
jo
mov
inc
push
sbb
andb
inc
aad
pusha
sbb
jns
gs
xor
xchg
ret
imul
popa
out
mov
jb
mov
inc
test
nop
mov
jno
cli
add
cmp
cmc
mov
cwtl
jbe
sub
int
mov
push
mov
aad
xor
lea
xorl
ficompl
add
mov
xchg
lods
push
cmp
and
xchg
rolb
mov
js
ds
mov
shrb
outsl
aad
push
popf
cmp
int3
or
movsl
dec
popa
lret
inc
nop
or
xor
push
rolb
test
int
lcall
push
push
repnz
inc
lahf
or
inc
lret
mov
push
dec
insl
andb
fwait
aas
aad
xchg
mov
push
sbb
cmpsb
lea
jmp
inc
cmp
into
fucom
int3
jmp
sti
push
jl
jns
and
dec
cmp
pop
adc
decb
pop
out
loope
sbb
jnp
lcall
addr16
addr16
je
inc
jo
xchg
push
inc
jecxz
push
inc
addr16
xchg
repz
ljmp
or
push
ret
jnp
leave
cs
or
sahf
pop
cmp
xchg
lret
imul
das
popf
pop
adc
mov
inc
decl
add
imul
cmpsl
repz
add
imul
mov
mov
jnp
push
roll
pop
jnp
cli
jne
pop
dec
push
nop
out
xchg
vphsubbw
inc
cmp
inc
cs
mov
iret
dec
pop
aad
icebp
test
mov
out
and
push
popf
cmc
movsl
mov
mov
dec
mov
mov
shlb
popa
push
mov
push
xchg
aad
add
push
cmc
adc
hlt
inc
sbb
pop
add
sbb
lcall
and
add
mov
xchg
add
or
jge
push
repnz
mov
cmp
lahf
data16
out
ss
insb
jns
in
clts
or
dec
repz
jmp
lods
add
scas
call
aad
push
dec
and
sub
or
pop
scas
lea
cmp
and
fidivl
jge
xchg
loopne
pop
mov
add
jl
jg
mov
mov
scas
inc
rorl
pop
push
cmp
in
std
gs
cmpl
nop
jns
stc
out
addr16
lods
out
aad
insl
into
push
mov
das
push
cmpsb
push
xchg
rorb
loope
cmp
in
insl
or
leave
xchg
fldl
xchg
push
pop
xchg
pop
jl
mov
xchg
pop
mov
outsl
aam
mov
movsb
adc
xchg
sub
aad
xchg
lock
mov
fmul
push
xchg
fisttpl
daa
cmp
mov
mov
movsb
loopne
in
adc
pop
add
jmp
pop
jmp
aad
sub
xchg
xchg
int
shl
lcall
fisubs
mov
jl
bound
jecxz
fldl
rsm
xchg
sbb
mov
pop
push
cmc
int
xor
xchg
cld
jbe
dec
pop
xor
enter
imul
pop
std
movsl
pop
adc
xchg
dec
dec
dec
ficoml
leave
pop
jge
pop
outsl
in
pop
xor
fs
out
movsl
sahf
xor
jg
xchg
or
and
xchg
mov
xchg
jg
iret
mov
and
gs
shrb
mov
outsl
fiaddl
dec
out
fwait
scas
lret
ja
adc
shl
mov
scas
or
ret
bound
add
out
test
or
jnp
je
lock
int3
loope
or
mov
or
dec
xchg
inc
daa
rol
fstpt
mov
scas
aad
mov
pop
mov
mov
xchg
sahf
test
out
cmpsb
les
dec
xchg
in
mov
mov
xchg
xchg
dec
pop
push
cmp
scas
inc
aad
fcoml
je
add
lods
pop
loope
jbe
arpl
cmp
mov
mov
push
cmpsb
sbb
ret
outsb
jno
dec
mov
lods
stos
test
rorb
cmc
jne
arpl
push
aad
add
adc
xchg
dec
test
inc
nop
sub
xor
in
mov
xchg
out
jle
jge
sarl
pop
jecxz
clc
sub
xchg
pop
out
xchg
jge
arpl
cmp
pop
std
mov
imul
mov
icebp
in
scas
lret
ss
push
movsb
cmp
gs
sub
inc
mul
adc
and
popl
mov
dec
aad
xchg
sti
fmull
mov
or
add
enter
outsl
sub
movsl
cmp
pushf
and
xchg
repz
jmp
rclb
adc
daa
mov
pmaxub
add
cmp
cmpsb
adcl
lods
or
and
movsb
lahf
lds
jl
push
insb
pop
aaa
dec
aam
cmp
pop
inc
push
push
jecxz
clc
stos
fldl
dec
pop
mov
insl
push
outsl
sub
repnz
test
xor
rclb
aad
jg
mov
into
or
xchg
lds
std
mov
mov
or
imull
je
sub
sbb
ret
mov
mov
and
mov
cmpsb
lahf
sub
pop
mov
mov
pop
mul
cmpsb
push
ds
je
pop
in
push
pop
insl
cmc
xchg
jbe
mov
push
jo
js
xlat
xchg
fsubs
iret
sub
dec
push
cmp
std
jnp
mov
gs
push
pusha
sub
out
aas
fbld
xchg
ljmp
cmc
dec
add
mov
mov
inc
sub
les
jo
mov
enter
fs
cwtl
lock
xchg
push
cmp
mov
int
sbb
pop
call
jne
sbb
imul
insl
jns
lods
std
xor
jl
fldl
aad
lret
loope
push
fcmovnu
addr16
jmp
pop
imul
es
nop
sub
fadds
in
mov
inc
jns
stos
rolb
push
pop
sub
aad
arpl
jl
adc
and
aad
jle
icebp
cmp
or
pop
jnp
push
lahf
jl
fists
addb
fimull
xchg
mov
ja
clc
lods
pop
mov
sahf
jp
xchg
cmp
mul
sbb
mov
js
iret
cmp
fiadds
push
push
push
adc
test
lods
mov
push
std
int
insl
dec
cmp
and
dec
push
out
cmp
sub
popf
ficoms
push
pop
mov
and
into
loope
sub
addr16
jl
pop
mov
dec
mov
lahf
sub
jns
loope
xor
popa
xchg
mov
jnp
pop
pop
stc
fstp
outsl
aad
cmp
xchg
sub
xchg
adc
mov
enter
push
cwtl
cwtl
roll
push
dec
push
inc
shlb
sbb
out
xchg
call
dec
pop
out
jg
popa
mov
js
aas
mov
iret
pop
cmc
mov
mov
inc
pushf
mov
push
push
ljmp
mov
cmp
adc
scas
rcrb
add
outsb
dec
jnp
int
and
dec
xor
iret
sub
psubsb
mov
jge
mov
insb
scas
repnz
aam
cmpsl
or
or
pop
jno
into
iret
lods
stos
push
mov
outsb
jecxz
pop
loopne
aaa
into
lahf
push
and
dec
adc
jno
mov
div
into
push
sahf
test
push
adc
xor
repnz
push
xor
lret
or
xlat
add
push
fnstcw
and
push
push
ds
aad
mov
imul
adc
xchg
sub
add
mov
and
in
cmp
and
sarb
mov
scas
push
mov
push
pop
and
adc
xchg
roll
out
or
out
mov
sub
jmp
mov
xor
lock
pop
sbb
repnz
sbb
in
pusha
popa
jg
lock
xor
cli
adc
pop
cmp
aaa
and
pushf
insb
mov
gs
push
dec
pop
xchg
mov
or
jns
mov
dec
lods
add
insb
mov
stc
test
dec
mov
lret
lcall
push
cmpsb
cmp
std
jne
les
test
mov
popf
test
adc
test
out
mov
and
pop
push
mov
jge
cmp
sub
aad
call
dec
cmp
sbb
aad
jne
mov
jne
mov
mov
xchg
and
ret
stos
in
pop
lret
shrb
cld
out
and
mov
adc
loopne
inc
scas
cmp
inc
lret
jmp
and
mov
sub
addb
jo
xlat
xchg
pop
pusha
fimuls
cmp
out
movsb
out
add
inc
or
lods
outsl
stc
mov
add
add
cmp
loope
out
inc
jo
sti
insl
popa
les
xor
neg
int
aas
cltd
iret
cmp
inc
cmp
inc
pushl
jbe
imul
ret
inc
push
call
xor
xchg
xor
out
ficoml
push
test
xchg
mov
cmpb
pop
fwait
and
dec
xlat
mov
iret
adc
out
and
sub
cmp
cwtl
mov
ret
bound
leave
lret
dec
xchg
cmc
dec
inc
sub
movsl
xor
arpl
cmp
scas
xchg
xchg
inc
jmp
cmc
cmp
inc
cwtl
mov
das
jg
daa
pushf
jno
testl
jle
js
mov
rcll
stos
push
xchg
inc
popa
lds
mov
jmp
mov
pop
sbb
push
dec
cltd
hlt
lret
mov
ja
dec
or
shl
lea
mov
popa
not
add
enter
cmpsb
adc
aad
in
dec
sub
xor
fs
iret
xchg
mov
int3
sub
xor
inc
push
out
out
add
pop
fsubrl
int
mov
jge
push
sbb
push
dec
cmp
inc
adc
hlt
push
divl
dec
xor
clc
out
rcrb
cmc
lods
pop
push
fs
pop
mov
xor
loope
dec
daa
es
frstor
or
imul
popw
xchg
ret
icebp
mov
add
jl
xor
jo
jmp
xchg
mov
push
cmc
pop
imul
adc
movaps
shld
push
or
popf
xor
add
cmp
std
div
cs
insl
cmpsb
notl
pop
sub
cmp
jle
inc
loope
xchg
cmp
adcl
add
pop
xchg
pusha
inc
outsl
mov
into
aad
xchg
fs
sarb
clc
in
mov
push
jo
lock
leave
cmp
or
jns
inc
mov
cmp
mov
out
popf
or
jmp
inc
and
and
jle
cmp
add
cmp
sub
fldenv
lret
dec
stc
outsl
int
add
cmp
lcall
aad
xchg
pop
test
cs
push
lods
dec
test
xchg
sub
sub
outsl
lret
stos
ret
cmc
fldenv
aaa
imul
in
aad
and
hlt
int3
sahf
rorl
jge
and
pop
inc
frstor
mov
out
cmp
mov
cmc
push
into
adc
loopne
imul
aad
inc
sbb
stos
adc
test
jmp
std
lods
mov
adc
shrb
adc
xchg
sub
lods
jne
jnp
movsl
scas
iret
jo
xchg
jno
cmc
data16
pop
nop
shrb
pop
std
sbb
pusha
hlt
and
fnsave
sub
mov
lock
ja
notl
add
mov
jl
loopne
lahf
aad
sbb
fs
loop
add
jb
mov
mov
cld
into
rolb
les
imul
hlt
pop
jb
lock
add
push
shrl
dec
aad
fbld
mov
aaa
loopne
and
int
scas
mov
cld
enter
push
xorl
rolb
pop
cmc
loopne
xor
mov
testb
mov
in
inc
mov
ret
imulb
and
rorb
add
sti
int3
add
aad
dec
pop
jns
int
or
call
nop
out
lods
xor
int
fnsave
daa
fbld
loope
sbb
ds
fisttps
add
lret
mov
or
adc
mov
fildl
pop
mov
jae
mov
out
ja
int3
loopne
addr16
test
and
pop
or
ret
pop
pop
sti
add
fsubs
js
push
bound
or
movsl
add
icebp
cltd
or
insl
mov
dec
mov
push
sarl
xorl
add
lcall
lods
inc
out
cld
push
test
in
lds
mov
mov
xchg
or
lret
or
gs
out
imull
push
jnp
sarl
idivb
dec
rolb
add
or
jp
popa
js
mov
pop
rolb
or
xor
dec
pusha
pop
or
daa
mov
xchg
cmpsl
cmp
jmp
mov
push
std
jle
les
cmp
int
sti
sub
or
fwait
stc
call
push
cmc
insl
decl
sub
xchg
aad
inc
inc
push
fldenv
xchg
rcrb
jecxz
mov
cmpsb
out
add
pop
and
mov
jg
jg
nop
cmpps
int
arpl
jmp
lea
popa
pop
cmp
sti
fsubrs
adc
pop
movsl
sub
jns
popa
repz
popa
lods
pop
fistps
mov
mov
mov
iret
out
dec
aad
pop
pop
movq
pop
add
fucom
mov
sbb
popa
js
shr
cmp
jg
cmp
cli
xchg
jecxz
and
out
cmc
repnz
xchg
xor
jl
mov
xchg
int3
inc
adc
cmc
and
mov
ja
dec
push
cmpl
push
inc
or
xchg
or
add
mov
js
aad
inc
mov
in
or
aad
imulb
arpl
addr16
test
pop
push
xchg
inc
push
xchg
mov
dec
aad
sub
fwait
in
mov
and
inc
pop
cmp
aad
movsb
jmp
jp
out
or
les
lret
pop
push
orl
sar
sbb
push
xor
cmp
and
push
pop
mov
push
fstps
fsubp
push
xor
jl
jle
push
push
dec
fidivl
mov
mov
fisubl
pop
push
rolb
cmp
cmp
ja
out
jp
scas
add
jle
call
and
enter
mov
not
add
in
ljmp
call
pusha
and
or
arpl
push
jae
pop
inc
pusha
cltd
in
xchg
popa
sbb
andb
jge
adc
or
cmc
lea
out
test
int
orps
pop
in
inc
into
pop
loopne
cli
sub
mov
idivl
out
iret
orb
or
and
test
push
nop
or
in
fimuls
aam
mov
xor
adc
dec
or
loop
call
push
int
aad
push
pop
xchg
rcrb
mov
shr
cmp
sti
test
out
mov
pop
add
ror
or
xor
mov
or
pop
ljmp
jmp
imul
mov
loopne
mov
xor
mov
clc
mov
and
fwait
pop
adc
sbb
push
jne
hlt
xchg
cmp
popa
ret
or
repnz
jg
jbe
xchg
int
nop
outsb
icebp
mov
push
leave
xor
ljmp
add
push
push
jae
cs
lret
je
data16
fistpll
out
dec
call
cmpsb
dec
outsl
xor
sub
lret
xchg
sub
pop
or
mov
xor
jbe
pop
int3
add
outsl
in
dec
mov
inc
mov
call
mov
jl
and
repnz
popf
sub
cld
and
inc
mov
add
leave
movsb
dec
mov
add
lods
fs
xchg
sbb
adc
xchg
sub
movsl
jmp
lods
les
cmp
movb
test
mov
mov
pop
jge
and
cmp
shrb
xchg
aad
jge
and
mov
adc
pop
xchg
rorb
add
add
dec
mov
inc
out
mov
jle
in
adc
xor
ds
xchg
cmpsb
cmp
cli
lods
call
movsb
mov
gs
mov
xor
cmpsb
movsb
sub
clc
lret
adc
jo
dec
add
nopl
fadds
rcl
sub
call
xchg
jb
outsb
push
mov
sbb
dec
fisttps
xor
aad
gs
pop
enter
loope
dec
jg
shlb
cmp
cmp
mov
mov
mov
popf
fs
jge
sub
lahf
mul
xchg
sbb
fcoms
dec
pop
push
pop
in
adc
sub
dec
mov
xchg
imul
testl
dec
insb
fisttps
mov
pop
pop
in
mov
out
lock
mov
push
ja
jecxz
xchg
lret
add
in
loope
jmp
jns
inc
imul
jg
in
movsl
mov
jne
insl
mov
movsl
pop
out
add
xchg
dec
fistpl
inc
adcb
or
stc
xchg
or
mov
aad
mov
in
sbb
cli
cmp
cmc
int
fwait
xor
hlt
and
pusha
jl
aam
das
in
jp
push
xor
jg
sti
mov
xchg
mov
fimull
jnp
mov
xchg
leave
insl
addl
sbb
cmp
daa
jg
jecxz
insb
addb
mov
repnz
js
and
ret
pop
mov
fstl
sub
xchg
incl
xor
test
and
aaa
mov
ret
cmc
cmp
mov
inc
fs
repnz
aad
cmp
pop
push
inc
in
adc
and
stos
sub
xchg
mov
stc
pushl
push
mov
cmp
iret
pushf
outsl
aad
push
sbb
mov
testl
popf
roll
push
rcrl
aad
xchg
scas
in
popa
or
lods
add
aad
pop
imul
jg
push
lcall
mov
cmp
loop
or
jb
push
repnz
add
cmpb
mov
dec
add
push
fidivrs
dec
inc
adc
movsl
xor
ljmp
sub
and
jbe
push
aad
je
addr16
jmp
aad
dec
mov
lret
push
in
cmp
loop
and
rol
lahf
pop
inc
int3
mov
les
jbe
jae
cmpsl
add
fstps
jns
mov
int
inc
mov
fs
push
pop
dec
jne
mov
xchg
jge
dec
xor
mov
add
pop
jl
mov
jbe
fldcw
sbb
and
scas
or
sete
cs
clc
jle
loope
cmp
unpcklps
push
pop
mov
cmc
xchg
push
fstl
stc
dec
sub
cmc
pop
aad
or
subb
movsb
mov
outsl
out
into
xor
sub
fisubs
adc
dec
dec
xchg
jecxz
mov
cmc
mov
test
mov
sbb
or
aad
inc
outsl
out
test
pusha
inc
ljmp
mov
add
andb
mov
cltd
fucomp
jns
popf
out
push
sahf
idivb
es
xchg
jg
js
aad
outsl
ret
out
int
pop
cwtl
mov
js
out
jmp
dec
cmp
cs
lods
xor
decl
add
add
xor
test
inc
movsb
pop
rorb
push
movsl
insb
jns
sub
call
jecxz,pn
rcrb
lcall
insl
mov
dec
adc
aad
imul
out
push
pop
fs
mov
xchg
xor
rcll
sbb
xchg
jmp
pop
push
pop
dec
rcrl
loop
sti
addr16
dec
ret
fxch
rorl
aad
nop
and
push
bound
psraw
js
add
fnstsw
es
inc
mov
stos
pusha
insl
imul
push
ret
and
push
and
les
and
adc
mov
sub
cld
adc
inc
push
testb
repnz
cs
dec
lods
or
int3
lds
imul
mov
mov
rcrl
jnp
mov
mov
mov
out
insl
int3
or
dec
stos
shll
sbb
aas
xor
aas
jb
or
lea
popl
adc
popf
and
cmc
inc
push
pop
xchg
xchg
iret
push
int3
cs
mov
and
lahf
xchg
inc
dec
xorl
repnz
mul
mov
pop
aaa
orb
fsubrs
jge
or
push
inc
not
sar
cmp
mov
dec
add
and
and
lods
cmpl
pop
jp
push
mov
dec
shlb
adc
jbe
out
cli
in
add
rcrb
addr16
ljmp
or
imul
and
xchg
dec
je
xchg
dec
psllw
lret
mov
ja
jo
mov
xchg
cmpsl
xor
and
sub
lcall
push
mov
inc
into
call
into
mov
pop
imul
filds
inc
fsubr
icebp
cmp
roll
push
mov
fildll
pandn
sahf
cmp
out
lds
pop
pop
push
sahf
fistl
cmp
push
stos
lock
std
insb
gs
inc
push
test
aad
or
push
adc
adc
lret
pop
aad
jnp
in
mov
jmp
or
cwtl
jl
fdiv
push
sub
and
int
push
inc
mov
cmp
out
into
cmp
mov
adc
and
test
in
dec
adc
bound
adc
add
mov
lock
cvtsi2ssl
dec
loopne
cmpsl
ljmp
imul
cmp
out
sub
call
pop
mov
push
mov
and
xor
bound
mov
aad
mov
push
jle
add
cs
push
dec
int
lods
cmp
mov
xor
cmpl
scas
push
cmp
int
ljmp
aad
cmp
lods
adc
pop
jle
dec
dec
xchg
jmp
xlat
enter
sbb
mov
mull
and
sbb
cmc
ds
cwtl
jg
js
jae
cmp
sbb
lret
sti
fsubrs
int
aaa
inc
lea
movsb
stos
dec
mov
add
fldcw
sub
push
jns
lahf
mov
and
jg
pop
jns
dec
sub
xchg
test
add
pop
mov
mov
frstor
dec
inc
popa
popf
pusha
not
push
in
dec
fisttpll
jg
xor
pavgb
pop
and
cmp
mov
in
dec
and
lock
add
outsb
out
mov
pusha
loope
jge
loopne
pop
xchg
inc
lds
into
mov
cmp
rorl
aad
daa
push
jb
outsl
add
cwtl
loope
add
and
cmp
jg
test
and
xchg
inc
sarb
repnz
push
ljmp
mov
addr16
rcl
int
popa
lock
dec
jmp
sbb
add
fisttps
lahf
imul
lock
dec
sub
and
pop
mov
fisttps
mov
std
iret
cmc
add
pop
sub
movsb
in
out
push
loope
test
mov
xchg
in
jbe
popa
movb
into
imul
popa
pop
out
pop
imul
ret
scas
or
jae
inc
imul
rorl
aaa
dec
fstl
inc
mov
fdivr
or
enter
sti
cli
xchg
adc
inc
mov
push
mov
push
mov
popa
xlat
out
cmp
mov
cmp
loopne
ljmp
mul
pop
mov
mov
mov
loop
add
sbb
xlat
fnstsw
shll
jge
jp
mov
jns
jl
pop
movsb
cmp
ljmp
xchg
outsb
rorl
enter
sti
xor
jg
mov
stc
frstpm(287
and
push
sbb
mov
xchg
cmp
in
enter
inc
mov
xor
movsb
movb
stos
or
or
js
ficomps
outsl
cmpsl
push
mov
jo
rcrb
push
test
dec
pop
dec
inc
cmp
pop
sahf
aad
rorl
fdivrs
mov
cmp
jecxz
testb
icebp
or
push
mov
push
fwait
add
loope
mov
jl
pop
xor
fcomip
cmc
stc
push
xor
dec
mov
loopne
pop
mov
ljmp
xchg
jge
shll
ret
jnp
add
loop
and
rorl
aas
imul
push
enter
dec
mov
add
cpuid
hlt
lea
arpl
popa
push
cmp
add
fwait
ljmp
movsl
pshufw
ret
enter
divl
das
sbb
dec
push
lock
lock
and
dec
jmp
mov
iret
pushf
xchg
lcall
push
fsubl
mov
dec
in
pop
pop
out
cmpsl
mov
fcoml
or
lcall
int3
iret
movsl
sub
inc
mov
cmc
jne
stc
mov
pop
sbb
adc
or
clc
stos
sbb
int3
movsb
int3
xor
inc
test
fdivl
sub
test
aad
mov
cmovl
mov
je
cld
pop
jl
or
mov
lods
mov
clc
cmp
mov
stos
imul
fs
sub
icebp
and
cmp
push
xchg
rcrb
in
jnp
mov
mov
push
test
mov
imul
xchg
repz
sub
scas
cmp
stos
repnz
dec
add
sahf
ret
jmp
inc
in
dec
movsl
cmp
jbe
and
sbb
inc
out
xchg
popf
add
popa
jo
sbb
cmp
inc
push
dec
aam
dec
and
lods
sub
jnp
and
arpl
idivl
dec
loope
pop
aad
sbb
stos
shr
add
jmp
mov
and
sub
pusha
pushf
xor
and
into
negb
fdivrs
imul
es
loope
sub
cwtl
orl
popf
fisttpll
and
mov
pop
jns
push
jle
gs
adc
add
inc
jmp
sbb
mov
adc
loopne
ljmp
xchg
jl
out
cli
adc
aad
jge
inc
mov
popf
cmp
mov
aaa
mov
js
cmc
ret
push
rol
lock
ficoms
lea
inc
dec
pop
testl
inc
mov
aad
fcomps
loop
andnps
test
into
aad
xchg
push
dec
xchg
in
int3
jno
lds
cltd
jno
inc
mov
in
inc
sub
mov
pop
fcomps
lret
xlat
or
adc
jns
fisubs
dec
out
cltd
push
aam
int
adc
mov
mov
jbe
mov
fdivrs
jmp
push
xor
and
jns
je
je
or
shl
call
mov
inc
cld
sub
xor
jmp
and
outsb
repnz
fiadds
mov
rorl
cmp
mov
dec
adc
lretw
or
add
fistl
clc
lods
les
sbb
out
sub
pcmpeqd
cvtdq2ps
int
outsb
sti
cmp
mov
loope
into
aad
ficompl
in
ljmp
mov
dec
int
adc
orl
jnp
jne
dec
xadd
iret
loope
lods
lea
fwait
push
subl
mov
add
and
in
jno
jge
jmp
mov
lret
sbb
sbb
push
leave
int
aad
fidivs
aam
ljmp
xchg
or
or
fbld
js
add
hlt
mov
out
pop
cmp
and
test
dec
xchg
dec
or
mov
xchg
add
in
add
lahf
push
jmp
xchg
mov
lods
dec
sub
loopne
pop
inc
fcomi
mov
pop
cmp
fadds
mov
mov
adc
mov
fs
or
imul
roll
paddd
mov
fisubl
pusha
loope
out
aad
jl
iret
mov
push
cli
les
and
ficompl
jl
xchg
pop
std
popa
xchg
sbb
fisttpl
jb
fnstsw
sbb
loopne
jno
mov
inc
and
jecxz
jmp
push
cmp
out
movsb
roll
xor
into
fs
xchg
test
dec
or
pop
inc
mov
xchg
sub
push
std
scas
add
adc
push
call
push
adc
insb
jl
out
or
cmc
mov
incb
or
or
xchg
aad
loop
movsl
je
jae
mov
movsb
dec
stos
add
out
push
push
adc
push
sub
stc
cmp
dec
mov
jl
adc
stos
push
mov
ja
mov
dec
test
aas
mov
daa
cmp
pop
out
mov
loope
cmc
stc
mov
mov
or
sub
jnp
pushf
popa
add
aad
lods
arpl
add
pusha
daa
pop
ja
outsl
add
xchg
pop
pop
and
je
in
pop
lcall
xchg
test
xchg
inc
or
aas
enter
out
jb
out
xchg
lcall
cwtl
mov
scas
bound
jmp
lods
push
xchg
push
jo
jno
pop
inc
pop
mov
dec
les
push
cmc
aam
cmpl
cmp
adc
push
pop
mov
jmp
jmp
into
push
clc
lods
mov
push
mull
pop
xlat
sahf
xlat
loopne
sub
dec
in
inc
xchg
js
sti
popf
jge
jmp
inc
dec
push
mov
adcb
fwait
popf
aad
ret
or
insb
cmp
aad
cmpsl
lock
int3
push
addb
cmc
lock
cmp
pop
mov
jno
mov
push
aad
jmp
xchg
push
dec
test
mov
popa
pop
neg
movsb
in
filds
jne
xor
mov
pusha
mov
xchg
add
cmc
xchg
test
stos
imul
mov
mov
mov
fildll
dec
xor
jae
lods
pop
cmc
fcomi
lods
add
dec
sbb
mov
mov
mov
incl
cmc
out
in
xlat
shl
mov
or
pop
pop
sub
data16
mov
imul
dec
rorl
pop
addl
les
cmc
in
daa
mov
aad
push
jns
xchg
push
cltd
xor
inc
push
test
loope
sub
jne
lds
sub
jnp
jecxz
xchg
inc
and
lahf
add
out
pusha
pop
lods
scas
ds
js
pop
jo
jnp
sub
inc
xchg
mov
cwtl
decb
adc
sbb
fcmovbe
jg
in
jl
and
clc
sub
aad
push
dec
push
adc
inc
mov
sub
add
sbb
stos
lods
and
popf
popa
iret
in
cli
push
mov
in
lock
adc
scas
add
cmpsl
adcb
push
mov
scas
dec
fstpl
pop
lods
dec
insl
lds
sbb
sub
outsb
mov
pop
repz
js
stos
push
sub
in
pop
movsl
es
sbb
movsb
mov
in
lret
pop
loope
stos
mov
inc
fs
push
scas
push
fwait
xchg
jbe
or
push
popf
gs
sbb
shrb
aas
jmp
cld
inc
sahf
or
and
mov
mov
xchg
in
mov
enter
sti
jbe
jae
out
fcmove
cmp
gs
imul
mov
or
xor
dec
stos
or
call
xchg
and
xchg
out
pop
xchg
adc
test
push
pop
xor
mov
pop
loop
into
sbb
aas
into
pushf
aad
jp
gs
or
cs
sbb
push
adc
mov
ret
lea
sbb
test
and
jmp
mov
xor
xchg
dec
cwtl
cltd
and
sti
jne
cmpb
cmp
push
cmp
fadds
jmp
or
lret
loopne
cltd
mov
js
std
mov
add
repz
pop
int
jnp
out
sbb
pop
push
cmp
in
pop
mov
or
cmp
lret
lea
mov
sub
cmp
xchg
sti
add
jmp
fwait
dec
sub
cmp
int3
imul
aam
stc
dec
pop
das
mov
sti
lods
dec
loope
outsl
loopne
movaps
out
push
or
cmp
outsl
addl
aad
add
test
movsl
sub
daa
add
xchg
ficomps
loope
jg
scas
jnp
mov
sub
fwait
and
cmc
dec
cmpb
ljmp
lods
dec
add
outsb
sti
lahf
push
arpl
std
mov
jns
mov
adc
dec
fs
mov
imulb
mov
add
aad
je
jnp
adc
into
mov
enter
sbb
add
ret
jp
or
addb
mov
out
into
insl
cmp
and
mov
sbb
lret
mov
xchg
xchg
jg
mov
lods
je
std
adc
add
add
xor
jae
in
or
stc
aad
out
xor
enter
wrmsr
mov
cmp
sbb
jl
shrl
or
cmp
mov
icebp
and
int
dec
cltd
scas
fisubrl
pop
test
enter
xor
rolb
dec
push
and
stos
add
aad
mov
mov
add
adc
xchg
adc
mov
mov
cmp
cmp
mov
js
adc
outsb
insb
hlt
out
popf
test
ret
mov
test
mov
cmp
dec
scas
sbb
cmpsb
test
lret
cmp
push
andb
adc
js
jp
lods
add
push
inc
lahf
into
jg
jno
sahf
mov
pop
jns
dec
xchg
mov
cmc
bound
jnp
mov
sub
aas
aad
aad
daa
mov
add
fs
lods
cltd
and
pop
out
loop
in
hlt
mov
mov
pop
jle
push
lahf
push
imull
int
imul
dec
aad
cmp
out
push
jmp
mov
xchg
jo
rep
xchg
adc
das
loopne
jl
stos
enter
pop
test
in
mov
int3
push
xchg
push
xchg
gs
cmp
movsb
out
pop
movsb
mov
jecxz
cli
pop
mov
mov
fs
arpl
mov
lea
push
enter
cmpsb
popa
call
subl
call
pop
fistpll
add
dec
sub
iret
cmp
add
push
jp
repnz
xchg
ljmp
push
and
mov
or
push
in
scas
jg
fists
sbb
xchg
in
imul
addb
inc
dec
mov
mov
popa
les
stc
cli
sub
lahf
icebp
xchg
jno
pop
movsb
ret
mov
ret
sbb
mov
lea
and
adc
lahf
mov
xchg
push
sbb
adc
cmpsl
push
int3
adc
dec
push
pusha
je
mov
lcall
cld
mov
jnp
mov
jbe
sub
ljmp
xchg
pop
dec
mov
xchg
test
outsb
fstpt
hlt
mov
arpl
leave
aad
int
push
dec
pop
js
or
adc
push
push
add
aad
repnz
sarl
cli
ds
sti
int
push
lods
push
imul
movsl
pop
scas
inc
lcall
imul
or
add
fstpt
cmc
shr
xchg
mov
or
cmp
pusha
repnz
mov
pop
scas
sbbl
jb
lahf
stc
call
xor
mov
mov
push
sti
pop
mov
or
rorl
mov
fs
push
sbb
out
and
sub
push
out
jnp
repnz
push
jnp
cltd
out
push
imul
sub
in
je
xchg
scas
dec
ljmp
cmp
sub
jg,pn
xlat
adc
mov
imul
xor
jl
sub
repnz
sub
or
sarb
cmp
aam
or
aaa
or
sub
ja
jl
in
loopne
and
lods
cmpsl
in
dec
ss
aas
mov
xor
out
les
mov
xlat
add
sbb
movsl
pop
lahf
or
scas
loope
mov
mov
adc
out
stc
cmc
xchg
dec
sbb
jno
ficomps
std
and
out
adc
into
cmc
adc
in
movsl
outsl
sub
inc
add
fcomi
jae
or
not
shll
cmpsl
lock
das
pop
repnz
out
or
pmaddwd
dec
jno
and
lahf
scas
aad
pop
adc
jb
xor
pop
lret
and
cli
mov
mov
popf
std
setl
dec
mov
dec
cmc
sub
sbb
mov
hlt
dec
dec
xchg
xor
jmp
pop
aad
stc
xchg
xchg
scas
into
int
and
fld
dec
lock
xor
cltd
xchg
adc
stc
or
jmp
sahf
mov
sarl
mov
sbb
adc
dec
loope
movsb
mov
mov
xchg
popf
inc
loope
dec
mov
xor
jle
push
shr
notl
cmp
gs
andl
daa
pop
lcall
negl
dec
jl
cmp
sub
mov
push
fiaddl
and
mov
pop
sub
sti
arpl
or
dec
pusha
std
cmc
jns
and
cmpsl
rclb
sub
sub
sahf
negb
dec
dec
xor
cmc
cld
inc
stos
adc
loope
not
in
outsl
or
pop
mov
sarb
cmp
mov
rol
dec
call
mov
sbb
in
add
mov
push
frstor
ret
idivl
or
lcall
std
leave
fwait
pop
and
cld
sarb
lods
pcmpgtb
inc
sbbb
add
jl
add
cmp
sub
ljmp
and
mov
jne
popf
xchg
cli
add
js
sahf
sub
jo
dec
scas
nop
into
aad
mov
nop
jl
std
mov
shl
mov
mov
push
scas
xor
xchg
xor
and
fcomip
and
cwtl
movb
outsl
sub
xor
cmc
xchg
into
jno
sti
xor
push
push
out
fwait
loopne
es
xor
cmp
pmulhw
or
cld
mov
lds
mov
aad
lods
test
subb
stos
stos
stos
incl
mov
ds
or
mov
dec
aad
repz
add
jbe
sbb
popf
dec
xchg
lahf
lahf
sbb
cmpl
mov
mov
addr16
mov
xchg
cmp
repz
mov
adc
push
mov
xor
in
popf
sti
daa
adc
cmp
lock
aas
fsubr
jo
loopne
insb
fsubrl
gs
push
lods
adc
pop
scas
or
dec
les
or
enter
imul
fistpll
hlt
xor
adc
not
bound
pop
jmp
or
push
lock
add
setl
testl
outsl
sub
inc
aad
mov
mov
les
pop
pop
call
les
test
sub
dec
cmp
add
std
pushf
scas
mov
stos
mov
sti
xchg
add
out
pop
and
nop
or
xchg
pop
adc
jg
mov
mov
test
pop
add
xor
dec
imul
add
addl
jno
and
hlt
sbb
mov
mov
inc
jbe
js
or
scas
fwait
mov
adc
mov
movb
cld
movl
xchg
rorl
inc
dec
iret
xchg
mov
mov
dec
scas
pop
scas
cltd
out
adcl
lods
ficomps
es
push
test
sbb
insl
and
dec
inc
dec
pop
sub
jge
adc
scas
xor
ret
xor
dec
movsl
cwtl
adc
aam
dec
in
or
lds
shll
sbb
inc
scas
aad
in
imul
cld
lea
adc
insb
loope
jmp
sub
xchg
push
adc
adc
outsl
mov
and
mov
jp
push
dec
xchg
and
sahf
aad
lods
sub
jecxz
loope
jns
jns
leave
push
stos
aad
out
ds
rol
arpl
xor
loopne
or
ja
cmc
mov
jmp
mov
jg
sub
xor
fwait
push
add
jge
daa
xor
push
mov
mov
sub
fimuls
in
xlat
add
add
push
inc
mov
repz
hlt
pop
out
in
stos
addr16
cwtl
test
jge
jl
int3
bound
test
int
push
jecxz
in
stos
arpl
cmovnp
icebp
popa
push
jmp
add
aad
mov
repnz
scas
pop
insb
daa
idivb
add
aaa
bound
stos
aad
cmc
stos
dec
cltd
push
pusha
add
das
repz
fbld
sub
sbb
int
xor
aad
sbb
and
inc
and
add
push
in
fsubl
and
and
mov
sub
pushf
les
xchg
push
cmp
cmp
push
subb
insl
loope
rclb
inc
loop
jo
out
dec
pop
sub
js
mov
and
enter
adc
lret
mov
mov
push
push
mov
xlat
xchg
jl
pop
pop
pmullw
int3
push
jmp
in
mov
rolb
iret
idivl
cwtl
mov
xchg
sbb
xchg
and
mov
imul
fnstsw
or
cs
sbb
sub
dec
insl
xchg
movsb
sbb
jg
xchg
les
nop
push
jl
and
cmp
lods
dec
test
and
cmp
movsl
sbb
test
call
cmc
rorl
test
and
subb
pmullw
ficoml
ja
jmp
pop
dec
mov
xor
clc
push
push
scas
setne
jecxz
sbb
cmpsb
jne
popa
inc
je
jo
nop
aam
adc
cmpsb
int
idiv
cmp
push
repz
dec
sbb
outsl
xor
insl
sub
and
popf
test
jp
jl
jns
jl
in
int3
adc
aam
mov
lock
mov
call
out
xchg
lcall
fwait
pause
and
push
outsl
xchg
sarl
sahf
dec
out
fsts
paddsw
xor
clc
jnp
sub
jo
jge
jno
adc
xorl
dec
dec
fimuls
icebp
sub
dec
cmc
and
sbb
int
pusha
arpl
mov
cli
movsb
pop
enter
jno
jne
dec
inc
dec
or
mov
popa
push
add
std
inc
js
dec
das
jno
lret
mov
popa
jmp
cmc
ds
fwait
push
inc
cs
lahf
and
mov
mov
mov
sub
es
stc
in
cld
mov
fistpll
in
jp
shl
movb
repz
push
mov
pop
add
popf
lods
add
pop
dec
cmp
jb
jne
dec
cmc
jne
outsb
ret
cld
mov
inc
or
jmp
lds
ljmp
fnstenv
mov
es
mov
mov
sarb
iret
dec
and
or
sub
out
push
inc
dec
gs
push
or
dec
test
push
shl
dec
xchg
sbb
hlt
aad
insl
out
add
push
popf
ljmp
out
rsqrtps
pusha
push
nop
cmp
jnp
xor
adc
rorl
pop
xchg
adc
and
sub
adc
in
aam
xchg
cmp
or
divl
lahf
out
inc
out
or
mov
pop
fstp
int3
and
push
jp
inc
ret
dec
aad
inc
xchg
or
push
ret
lahf
imul
loope
sub
inc
pop
inc
push
aam
jmp
shll
cmp
fsub
cmp
and
adc
inc
sbb
fimull
data16
cmp
dec
xchg
ds
dec
es
jno
test
cmpsb
or
xor
repz
lods
aaa
push
mov
into
mov
fxch
dec
dec
test
jge
into
inc
subps
sbb
jns
jmp
adc
subl
test
repnz
add
clc
addr16
insl
mov
sub
test
inc
popa
xor
jbe
push
push
add
call
jnp
pushf
ds
ret
int
mov
cli
xor
inc
sub
mov
cli
test
xchg
jl
add
mov
cli
in
mov
sarl
and
mov
loopne
mov
int
inc
or
xchg
pop
jge
xlat
insb
mov
xor
fcomps
test
je
pusha
pop
inc
pop
fnstcw
int
orl
aad
and
push
pop
cs
mov
dec
repnz
xchg
lds
ret
loope
jl
sub
push
or
das
cmc
xor
fidivrs
sub
or
jl
inc
push
cmp
loopne
std
loop
loopne
push
iret
dec
mov
push
mov
sub
xor
pop
sbb
or
jne
jmp
inc
fnsave
pop
lret
out
jecxz
cmp
adc
nop
cmc
popa
sarb
mov
add
xor
cmp
loope
fldt
jl
insb
or
push
xchg
add
ljmp
cmp
xchg
addr16
dec
adc
push
iret
pop
jmp
xchg
cmpsb
bound
fdivr
stos
test
xchg
dec
cmp
pmaxsw
mov
iret
insb
mov
jo
in
insl
dec
lahf
psrlw
jmp
stos
sbb
mov
inc
enter
sub
adc
xor
inc
out
pushf
xchg
pushf
leave
xor
adc
je
aad
or
sti
loope
inc
pop
or
icebp
aas
or
fisttpll
or
scas
sub
fldt
mov
mov
dec
scas
mov
adc
ret
fwait
sbb
xchg
pop
mov
std
outsb
shlb
fldcw
out
push
loope
mov
mov
lods
mov
dec
popa
leave
mov
clc
sbb
dec
push
mov
mov
inc
shll
test
jmp
cmp
xchg
clc
or
jecxz
lret
test
fcom
pop
aad
lcall
and
lods
xorb
idivb
test
cmc
enter
test
mov
sti
jns
jne
into
aad
loopne
mov
nop
out
dec
mov
and
es
push
mov
les
push
mov
cmpsb
mov
jmp
mov
fists
xchg
fadd
iret
jmp
sub
lret
mov
add
mov
dec
pusha
mov
push
lds
cmp
xchg
inc
xor
aaa
dec
cmp
in
or
jmp
aad
xor
dec
daa
mov
mov
into
aas
loopne
arpl
dec
or
mov
sbb
fcmovne
cli
test
mov
jmp
imull
outsl
jne
jmp
adc
adc
push
or
sbbl
fwait
incl
lret
mov
jbe
mov
out
sub
push
mov
mov
sub
stos
rorb
adc
nop
sub
fistpll
jp
mov
pusha
pushl
sbb
mov
mov
mov
mov
jmp
sar
arpl
sbb
pop
jecxz
out
sahf
dec
mov
jns
mov
cmpsl
mul
outsb
xchg
cld
repz
pop
es
es
decb
mov
lea
lods
scas
stc
dec
fidivs
xor
pop
test
adc
sub
mov
in
push
sub
dec
xchg
add
mov
in
rol
clc
movsl
pop
jbe
jge
cmc
stos
xchg
idivl
xchg
hlt
popa
and
sub
loop
inc
in
adc
cmp
stc
cld
jo
push
stos
dec
xchg
std
fwait
test
mov
aad
int
mov
in
aad
pushf
mov
pop
mov
jae
sub
fwait
adc
inc
mov
push
sar
cwtl
pop
inc
jecxz
js
jae
cld
aam
test
mov
mov
xor
pop
sbb
ficoml
push
test
aas
jp
out
pop
pushf
notb
mov
scas
hlt
iret
idivl
arpl
mov
pop
ret
inc
push
fnsetpm(287
or
adc
jne
mov
orb
xchg
mov
testl
shrb
push
push
sbb
mov
mov
xlat
or
lods
stos
ret
push
push
mov
pop
call
xor
and
mov
out
scas
call
ret
enter
stos
int
clc
out
stc
and
gs
ficoml
test
incb
faddl
mov
ret
sbb
mov
roll
ljmp
int
lods
sbb
scas
aaa
mov
pop
xchg
nop
dec
lock
mov
lret
jl
mov
adc
fiaddl
nop
or
bound
dec
test
push
ss
stos
fisubrl
cmp
mov
xor
ficoms
jl
cmp
xor
loop
loope
pop
push
mov
shll
jle
imull
and
dec
outsl
outsb
lret
dec
call
xchg
loope
sarl
jl
iret
and
aam
dec
jle
xchg
rolb
bnd
stc
mov
js
push
bound
or
dec
and
add
cmp
dec
adc
movsl
dec
mov
pop
aas
sub
xchg
pop
and
inc
mov
xchg
xchg
imul
mov
pusha
add
fs
sbb
jbe
add
mov
mov
jmp
xchg
push
mov
inc
push
jge
jb
daa
fistpll
hlt
xor
jecxz
jl
add
cwtl
lock
mov
dec
icebp
imull
arpl
push
iret
arpl
frstor
mov
push
rorb
xchg
push
loope
xchg
and
test
sbb
or
or
jge
cmp
push
xchg
in
aas
outsl
imull
in
mov
sub
adc
leave
out
pop
or
jne
cld
xchg
in
xor
idivl
cld
sbb
push
cmp
xchg
icebp
jae
sar
call
lcall
pusha
int3
ret
inc
and
out
pop
and
in
inc
cli
push
ljmp
add
das
lea
cmp
sub
cmc
xchg
enter
into
clc
xor
cmc
pop
xor
or
adc
add
inc
inc
inc
jns
mov
jb
pop
push
jg
repnz
jg
mov
mov
insb
adc
leave
testl
lahf
je
pop
in
ja
lea
and
cmc
fcoms
in
call
xchg
pop
mov
cmpsl
mov
lea
cmpsb
pushl
jno
jge
aad
mov
adc
rcll
cmp
inc
repnz
inc
xlat
cmc
fidivrl
mov
add
dec
jmp
jnp
mov
std
mov
push
mov
mov
jne
ljmp
incb
cmp
and
fwait
add
ljmp
push
ljmp
jne
or
mov
inc
dec
insb
movsb
cmp
test
sahf
jmp
xchg
fidivl
xchg
popa
fistpll
or
sub
sub
mov
push
mov
repz
leave
cli
or
dec
mov
dec
mov
mov
mov
test
and
loop
add
lea
ror
stc
xchg
inc
or
ljmp
test
je
dec
std
notl
cli
inc
in
mov
idiv
fcmovne
lods
or
outsl
lods
dec
dec
cmp
cmp
lock
add
in
pop
mov
xor
pop
and
jl
ret
mov
inc
fmull
aad
jne
xchg
mov
out
mov
or
cmpsl
int3
or
sub
ja
mov
pop
lcall
add
push
mov
aaa
jp
sbb
jge
into
iret
xchg
and
inc
cmp
les
sbb
sbb
subb
mov
das
cmc
fstpl
leave
pop
adc
mov
mov
roll
and
xchg
pushf
and
jge
push
cmc
ljmp
ljmp
cli
fsubrl
loope
mov
push
rcrl
jae
lret
scas
or
fimull
jmp
loope
jmp
cld
into
jno
sub
std
sarl
in
imul
cwtl
dec
call
sti
ret
xchg
cvtpi2ps
jnp
lea
dec
xchg
aad
ficoms
divl
mov
cld
inc
sub
or
mov
xor
mov
les
add
stos
addr16
nop
lds
sbb
sbb
mov
shlb
inc
cmc
or
movsl
push
cld
jge
out
sahf
mov
loope
sbb
push
aam
bound
movsb
push
sub
adc
loopne
xchg
inc
in
jo
enter
jg
outsb
cmp
or
fidivrl
cli
cmpb
lret
jbe
cli
sahf
sbb
cmp
call
mov
or
mov
out
pop
bound
scas
mov
cmp
es
out
sub
jae
cs
lahf
movsb
enter
sti
or
stc
push
push
sub
in
jns
iret
sbb
fidivrl
or
fimuls
dec
cmc
sbb
cmp
add
je
add
addr16
jg
mov
add
jnp
aad
add
dec
mov
into
add
dec
mov
xor
adc
ljmp
rol
push
xor
popl
dec
iret
fldenv
les
push
inc
jl
jmp
push
sbb
test
movsl
mov
push
fldenv
dec
push
test
shll
or
or
and
and
lret
adc
push
push
std
lods
test
pushf
jp
mov
push
xorl
xchg
xchg
inc
pop
in
cmp
dec
rcll
lock
scas
adcb
roll
ljmp
fwait
sahf
and
inc
bound
into
cmp
aad
jge
in
ljmp
je
and
dec
or
iret
ret
cmpsb
lcall
popa
xchg
dec
xorb
mov
add
jno
les
cmp
jns
xlat
pop
mov
sbb
dec
setg
lret
ds
xchg
inc
in
xlat
or
fbstp
push
pop
fcmovnbe
xor
aad
outsl
aad
cmp
sub
sub
dec
add
or
dec
sub
mov
mov
or
xor
cmc
out
std
cvtpi2ps
hlt
mov
sbb
sbb
fisubrs
sbb
xor
xchg
xor
ds
test
call
mov
sbb
lods
add
jle
and
loop
mov
je
inc
mov
das
fs
mov
in
in
adc
jecxz
inc
lea
dec
xchg
adc
xor
shlb
cmp
jo
les
aad
push
dec
popa
xchg
pop
mov
lods
lods
rolb
mov
ja
inc
sbb
shll
dec
and
dec
insb
xchg
or
in
in
lret
jl
rcrl
stos
push
psrlw
or
cmovp
dec
adc
int
mov
fstl
and
jmp
xor
mov
aad
pop
or
sub
lret
xor
jmp
faddl
mov
mov
mov
or
adc
xchg
push
loopne
mov
mov
cli
fimuls
cmpsb
bound
leave
mov
je
sbb
or
pop
test
mov
stos
add
xchg
aad
jg
int3
and
test
pop
pcmpgtb
mov
popl
adc
rorb
jecxz
inc
or
xchg
dec
xchg
xor
mov
in
lods
adc
ret
stc
loope
xlat
cmp
push
sbb
sahf
ja
dec
inc
out
xchg
pop
adcl
mov
sbbb
jno
mov
or
test
aad
xlat
jmp
int
leave
push
stos
jmp
mov
mov
cld
push
and
inc
or
xchg
sub
dec
and
mov
loopne
mov
dec
loope
stos
mov
inc
loop
popa
iret
jmp
jg
mov
mov
cmp
scas
and
add
cmpsb
sti
std
mov
cmp
iret
imul
popa
jl
and
jne
push
pusha
inc
lods
leave
xor
jnp
test
xor
mov
sarb
add
cmc
jle
fisttpll
fwait
jns
pop
mov
xor
dec
out
mov
arpl
jecxz
mov
mov
sbb
sarb
sti
xchg
out
nop
ja
imul
hlt
xchg
jo
or
dec
outsb
jmp
xor
sub
lea
and
std
cmp
mov
pop
jmp
pusha
clc
sbb
xchg
mov
test
enter
cmp
adc
ja
sub
mov
lds
pop
addr16
ret
or
cli
adcl
cmc
sub
sbb
stc
mov
pushf
aas
fwait
cmpsl
and
rorb
nop
adc
aam
into
cmc
insb
mov
leave
pop
addr16
or
popf
or
fbld
push
out
aad
sbb
inc
out
cmpsb
rorb
aaa
xchg
lds
cltd
shrb
cmc
aam
inc
jp
icebp
xor
test
mov
mov
or
in
paddb
adc
pushf
pop
aam
in
js
pop
ror
mov
outsl
sub
fnstsw
ficoms
popf
sbb
test
fsubl
mov
rclb
fsub
pop
xor
lahf
or
jb
addr16
ljmp
imul
mov
jbe
jnp
clc
pop
pop
std
jp
leave
sub
fsubs
mov
imul
cmpsl
mov
dec
insb
out
subl
and
or
insl
int
test
push
ljmp
or
cmp
shlb
or
idivb
cld
cmpl
data16
into
jns
into
sbb
push
fimuls
stos
pop
les
out
orl
dec
into
cmp
fisubs
lahf
sahf
or
sub
inc
ljmp
jns
mov
push
addr16
adc
in
or
mov
repz
in
aad
mov
fs
mov
aad
sub
cld
mov
dec
nopl
adc
xchg
add
jns
sahf
jmp
jle
out
dec
or
dec
decb
mov
push
lea
lcall
dec
jecxz
cld
inc
mov
or
cmpsb
in
mov
mov
adc
cs
into
and
adc
inc
divb
sahf
call
pop
in
mov
cmp
popf
test
insl
or
mov
mov
push
sub
sub
das
movsl
dec
fists
mov
push
dec
cmp
loop
xor
adc
xlat
xorb
cld
cmc
lock
sbb
add
cmp
cmp
cmc
outsl
dec
push
aad
fstps
fld
and
mov
mov
sub
mov
sub
popf
mov
ss
ror
sti
jge
addr16
dec
dec
adc
ret
mov
xor
hlt
adc
adc
orl
xchg
sub
mov
ss
mov
mov
popa
fisubrs
mov
fistps
xchg
ja
pop
xor
add
mov
outsl
jo
int3
fsubrp
mov
jp
and
pop
stos
push
aam
movsl
cs
in
xchg
cmp
in
xchg
and
xchg
and
dec
shr
into
cmc
cmpsb
push
loope
movsb
adc
or
xchg
dec
and
or
in
sub
push
xchg
dec
imul
enter
xor
dec
div
fucomi
add
add
dec
fnstsw
jmp
cld
push
push
mov
dec
incl
and
fisubrs
inc
orl
xlat
sahf
mov
or
stos
pop
cmc
bound
out
loop
in
repz
insl
cmp
jne
sbb
and
push
or
test
aad
js
inc
fistps
bound
repz
movsb
sti
cmp
psubq
cmpsl
push
fstp
popf
push
sub
arpl
and
out
sbb
ficoms
mov
cli
jb
sti
aad
and
test
add
add
adc
pop
mov
repz
andl
push
jl
lods
mov
pop
int
loope
xor
nop
jp
outsb
scas
mov
and
or
test
inc
inc
mov
and
push
mov
sub
push
push
mov
or
not
aad
sub
pop
test
stc
lcall
ret
lcall
cli
sar
bound
jne
sbb
movsb
iret
adc
mov
and
daa
shrl
imul
inc
cld
mov
pop
dec
iret
imull
fwait
jo
iret
cmc
mov
addr16
shll
mov
out
shlb
push
mov
or
daa
sahf
int
rcr
nop
push
cmp
rcll
nop
sbb
dec
aad
dec
lock
dec
xor
cmp
out
notl
jo
xchg
add
repnz
sub
scas
rcll
pxor
mov
call
or
out
add
adc
mov
rcl
dec
cmp
iret
or
mov
ret
mov
mov
xchg
fimuls
aas
fs
popf
xchg
lock
cltd
lods
push
xchg
into
or
and
push
shll
adc
and
les
idiv
xchg
adc
shlb
popf
jno
in
xor
mov
cli
mov
inc
push
add
jp
shlb
mov
or
hlt
or
or
cld
xor
aam
out
addr16
xor
mov
xchg
mov
dec
in
or
pop
cmc
int
cmp
mov
jecxz
cmp
or
inc
fcomps
sub
jg
icebp
mov
xor
outsb
mov
ljmp
dec
loopne
cmpsl
push
aad
sbb
mov
pop
cmp
outsb
mov
push
call
sub
hlt
sub
inc
push
aaa
add
sub
inc
in
jge
mov
xchg
and
shlb
test
jmp
inc
adc
pop
sbb
subb
xchg
jg
push
jb
pop
test
aam
xor
dec
roll
and
pop
cmp
dec
mov
int
imul
xor
cmp
in
rsm
fwait
mov
out
xor
data16
pop
rol
sub
mov
jmp
in
inc
imul
adc
xchg
dec
dec
push
mov
mov
outsb
aad
xchg
jle
leave
adc
arpl
popa
push
mov
jmp
adc
mov
adc
or
lret
into
fcoms
pop
push
into
cmc
jge
sbbb
lea
testl
jo
imul
jno
and
cmp
testb
and
rcll
xor
jbe
xchg
call
cmc
fildl
aam
pop
stos
jne
xchg
dec
leave
stc
fists
movsb
clc
mov
xor
jge
imul
sbb
test
add
jnp
push
xchg
jnp
and
adc
cs
or
add
int
fcomps
jo
mov
outsl
sub
std
jnp
ficompl
jmp
xchg
stos
repz
jp
sbb
lcall
js
adc
test
sub
cmp
jae
cmpsl
mov
or
insb
js
jnp
pusha
mov
test
xchg
cmp
dec
xchg
jecxz
lret
jp
mov
pop
xor
ficoms
add
outsb
popf
in
idivb
xor
jl
shlb
and
fistpll
inc
sub
scas
bound
jg
pop
or
icebp
pop
inc
mov
cld
subb
sbb
xchg
cmp
fwait
mul
jb
mov
aas
or
adc
fistps
xlat
les
mov
into
ret
shll
das
mov
push
inc
sub
xchg
mov
lea
mov
sub
dec
xor
int
cmp
dec
outsb
push
or
stc
data16
inc
sbb
es
jbe
lods
outsl
mov
ss
in
dec
xlat
sbb
pop
jl
push
xchg
xor
mov
push
lcall
andb
mov
mov
push
xchg
ja
sbb
jge
xor
dec
pop
lock
scas
cmp
mov
int3
dec
xchg
ljmp
sbb
decl
icebp
inc
das
and
dec
push
xchg
cli
insb
dec
xor
sub
pusha
repnz
hlt
or
push
jecxz
xchg
sbb
lods
daa
stc
test
lahf
sub
shl
dec
add
inc
push
pushf
cmp
mov
andl
jne
stos
in
bnd
icebp
lods
jne
adc
pop
imull
maxps
inc
sub
inc
int
rcll
jb
negb
rcl
loop
lahf
sbb
xchg
lods
mov
xor
xor
nop
hlt
lcall
xor
push
pop
xchg
mov
pop
and
std
movsl
mov
fimuls
inc
and
mov
mov
aaa
shrb
mov
dec
xchg
lods
mov
sub
imul
push
lods
add
push
sbb
dec
inc
mov
jecxz
mov
xorl
out
sub
int3
out
push
arpl
mov
popa
xchg
or
and
movb
add
jmp
and
popf
xor
aad
mov
cmpsb
jl
test
rcr
cli
push
lcall
fmulp
aad
frstor
push
xchg
pop
jnp
cmp
pusha
cmp
lret
mov
xchg
cli
mov
in
loope
movswl
push
mov
ficomps
test
jns
jmp
cmc
xor
jge
and
icebp
shrl
jne
sub
adc
fstpt
pushf
sti
mov
mov
jmp
or
pop
mov
addb
xor
lcall
jl
or
add
adc
stc
ss
por
fdivr
pop
adc
loope
add
nop
stos
xchg
aad
outsl
scas
mov
stos
jne
adc
mov
dec
cld
cmc
dec
lods
mov
mov
dec
jecxz
xchg
shll
test
mov
out
sbb
xor
or
pop
popa
xchg
out
shll
fbld
xor
fcompl
icebp
lods
inc
gs
xor
xchg
or
cmc
not
inc
loope
pop
out
pop
hlt
xchg
sar
xchg
mov
mov
dec
mov
cmpsb
les
ljmp
pop
sahf
pavgb
dec
dec
sub
jb
sbb
inc
cld
stc
push
mov
dec
dec
in
stos
cli
mov
in
iret
out
cmp
cmp
push
int
mov
jle
xor
push
or
xlat
subl
xchg
shll
in
mov
jle
int
aad
jbe
out
xor
cli
insl
push
push
das
lods
adc
jno
icebp
mov
in
sbb
mov
cmpsb
loop
imul
aad
mov
cmovge
cmp
les
mov
push
iret
lret
xchg
iret
cld
call
jno
arpl
or
xchg
xchg
xchg
xchg
lods
stc
cwtl
adc
in
cmc
adc
cltd
xor
test
fcompl
pop
cmp
bound
jo
inc
gs
lods
cmp
call
cld
jnp
jg
inc
mov
inc
shlb
iret
movl
stos
dec
inc
mov
adc
xlat
inc
pop
mov
movsb
scas
mov
adc
fldpi
loopne
push
mov
pop
push
mov
dec
aas
cmp
mov
loope
push
fadd
dec
or
bound
jno
xchg
inc
push
push
ss
ret
je
ds
cld
adc
imul
mov
adc
xor
out
cmc
idivb
dec
jb
outsl
das
pop
repnz
out
dec
or
jne
cli
or
cltd
ds
std
leave
stos
push
repz
negl
fstl
rolb
pop
sbb
jmp
cmc
add
cld
out
xchg
mov
loopne
sahf
ror
mov
jae
jb
test
and
xabort
push
or
shlb
cld
mov
jecxz
fcmovnu
xchg
lods
subl
push
add
mov
or
or
gs
sbb
mov
lcall
xchg
push
in
imul
sub
push
mov
and
lret
mov
mov
das
add
mov
ret
dec
in
dec
int
shrb
lcall
add
loope
repz
int
out
and
adc
aad
int3
daa
push
adc
or
cmc
rclb
mov
fistpl
fwait
dec
jmp
cmc
mov
fnstenv
mov
pop
pop
or
mov
xchg
popa
pop
adc
mov
inc
and
dec
mov
xor
xchg
test
mov
inc
mov
in
mov
pop
mov
and
addb
mov
cmpsl
mov
rep
or
add
sahf
jp
adc
std
add
adc
arpl
mov
sub
outsl
and
mov
sbb
mov
add
mov
jmp
and
push
cmp
or
sub
orl
inc
js
pop
xor
ret
and
subl
pop
push
int3
lret
or
lock
sahf
pushf
cmp
and
and
call
fnsave
out
xchg
dec
fistps
lahf
pop
fbld
cld
cmp
inc
aad
push
jnp
arpl
cmc
cmp
and
mov
xor
xchg
inc
inc
cmp
sub
jp
jge
and
mov
mov
mov
jbe
pop
into
notl
addb
rorl
pushf
leave
int
lea
jg
mov
pmaddwd
mov
mov
jns
dec
imul
mov
or
cmp
jge
mov
xor
inc
in
mov
sbb
pop
mov
insb
jns
sub
xor
cmp
outsl
push
out
cs
push
jnp
xor
jae
mov
das
and
mov
enter
dec
mov
sbb
lods
loop
inc
subl
ror
mov
dec
shll
cmpsl
sub
scas
push
lods
imul
ja
mov
mov
fiaddl
sub
cmp
push
jge
xor
dec
int3
dec
jl
cmp
adc
pop
xlat
test
cmp
push
cli
js
cmc
cmp
fisubrs
jg
jg
in
xchg
popa
loope
dec
js
gs
movsb
lret
lcall
add
xchg
jmp
mov
dec
cs
mov
or
push
out
jp
sub
xchg
mov
sub
movsl
mov
jge
xchg
xor
mov
cmp
lods
jge
push
jge
inc
mov
pop
push
adc
int3
adc
arpl
mov
mov
add
mov
mov
xor
in
cmp
mov
aas
mov
jno
inc
aad
mov
dec
xchg
and
push
int
lds
in
std
es
sub
in
xchg
xor
xor
cmp
rcrl
jne
in
out
mov
int
jp
add
xchg
scas
push
push
pop
xor
sub
jle
das
push
cltd
ret
mov
int3
mov
aad
call
push
push
xor
into
or
push
cmp
jl
scas
fs
loope
shlb
pop
ss
pop
rol
fsts
mov
outsb
rorl
dec
xlat
xchg
mov
psubb
rol
test
pop
jl
xchg
jns
rcr
lahf
rcl
cmpsb
test
cmp
xchg
mov
xor
jnp
fs
and
mov
jl
pop
cli
xchg
ret
add
stos
mov
jmp
fmull
repnz
mov
inc
push
jbe
mov
daa
and
sub
adc
xchg
cmp
in
mov
pop
inc
out
cmc
je
jo
lods
scas
dec
mov
jp
leave
pop
mov
addr16
shr
add
ds
ds
lods
pop
dec
jge
movsb
inc
loope
cmc
divb
fstpt
imul
in
clc
and
mov
add
lods
mov
mull
xchg
popf
mov
in
in
das
jnp
xchg
orb
sbb
mov
out
lahf
lahf
or
out
add
addb
mov
fidivs
sahf
pop
inc
mov
cmpsl
push
outsb
adc
mov
mov
les
mov
mov
and
and
outsl
mov
fnstsw
cli
inc
incl
aad
lods
neg
adc
sahf
and
add
pop
rcll
xor
jecxz
xor
mov
inc
lock
lea
inc
fisttpl
dec
call
into
testb
into
dec
cs
cmpsl
in
xor
loopne
dec
bound
jge
aam
lahf
xchg
das
add
pop
push
push
call
cmc
lahf
lret
add
pop
xchg
enter
add
lods
popl
mov
cmp
cld
std
std
mov
push
mov
ss
sub
push
ret
gs
adc
fnstsw
push
fimuls
sahf
mov
inc
aad
jb
sub
inc
jp
gs
or
mov
sub
inc
sarb
lods
xor
inc
fildl
jbe
les
je
adc
bound
adc
fcoms
or
pop
pop
insl
cwtl
fwait
push
mov
adc
scas
arpl
mov
stos
jle
ret
adc
jmp
inc
outsl
mov
lds
dec
xchg
cmp
xor
mov
mov
cmp
roll
push
into
sti
aad
mov
test
sub
mov
pop
adc
idivb
inc
rclb
test
lret
ljmp
je
mov
xor
pop
sub
out
pop
shr
sbb
aad
push
rcll
or
test
jp
mov
aad
cmp
ror
dec
imul
push
movsl
xlat
loopne
aad
mov
je
pop
sahf
add
int3
lea
dec
loop
adc
imul
sbb
sarb
call
jns
dec
ud2
aad
pop
int3
lods
xor
mov
jbe
and
pop
les
lahf
rcll
mov
xor
xchg
sub
pop
jno
inc
out
pop
mov
das
sub
push
mov
sbb
xor
ret
in
jmp
cmp
and
loopne
pop
imul
adc
cmp
or
movsb
outsl
cmc
sub
outsl
xlat
mov
inc
jecxz
and
adc
xchg
ja
out
dec
dec
loop
xlat
cmp
push
movsl
loop
adcl
or
push
out
jmp
push
add
xlat
inc
pop
cmp
and
sti
sbb
mov
dec
add
and
sbb
cmp
and
das
xor
xor
jnp
cmc
or
xor
inc
push
orl
and
mov
mov
pop
or
out
dec
cmp
lock
les
aad
cli
or
lds
add
and
lcall
pop
adc
xlat
inc
insb
mov
lock
imul
sbb
stc
xchg
mov
mov
or
mov
les
mov
test
mov
aad
imul
rorl
in
ljmp
ret
xor
or
cmp
or
int
aad
push
cmp
popf
sub
or
mov
xchg
ljmp
xchg
daa
imul
add
addr16
add
out
pop
out
mov
pusha
les
pop
neg
les
xlat
cli
les
shlb
call
fnstsw
sbb
mov
cld
cmc
cmp
sbb
and
insb
cmp
pop
push
xchg
inc
xor
sti
mov
fdivr
test
mov
xchg
push
std
scas
mov
or
mov
cmc
mov
movsl
pop
lahf
xor
push
add
shlb
mov
mov
in
push
xor
jns
out
aas
jmp
mov
cwtl
add
leave
aam
sbb
cmp
jns
sub
bound
cmp
lock
cmp
dec
mov
loop
add
cli
mov
pop
adc
dec
xor
cmp
add
dec
or
in
lock
cmpsb
aam
sub
data16
out
cmp
adc
and
inc
mov
mov
push
cmc
pop
xchg
fistpll
ljmp
outsb
aas
int
ret
out
inc
por
movsb
das
in
aas
dec
test
inc
pop
add
jnp
pop
xor
call
mov
test
jae
test
cmc
pop
jmp
sbb
stc
xchg
sub
fldt
cmp
cs
add
cmp
xchg
jne
xchg
imul
popf
push
repnz
jne
jg
cltd
cmp
cltd
push
ja
imul
fsubrs
jmp
repnz
or
dec
push
int
pop
fwait
mov
inc
jg
das
sbb
out
mov
ret
xchg
mov
jae
cmp
add
test
xlat
loop
outsb
xchg
xchg
push
sbb
movsb
mov
loope
cld
push
ds
cmp
cmp
mov
cmp
xor
jno
jns
bound
movb
scas
ror
dec
jbe
cmc
dec
in
stos
cmp
loope
adc
rcrb
mov
shl
out
sub
shl
jnp
push
mov
mov
cmp
xchg
pop
xlat
sbb
inc
inc
insb
outsl
shll
xchg
pop
outsb
iret
sub
and
and
rclb
xor
cmpsl
jge
ja
leave
cmp
in
movsb
fst
xor
jg
fdivrs
push
roll
cmp
fwait
mov
push
sbbl
cmc
pop
gs
xchg
adc
jge
push
dec
outsl
pushf
fisttpl
push
jns
pop
fwait
mov
mov
outsb
lods
iret
mov
or
jl
mov
incl
pop
call
fldcw
jl
pop
sti
mov
popl
cmc
lahf
pop
jp
mov
jl
out
pop
xchg
sahf
stos
jge
push
cmp
dec
leave
es
cmp
mov
xor
jmp
and
mov
int3
and
and
mov
sarb
daa
mov
mov
and
enter
cmp
sub
fmulp
into
and
or
pop
shl
stc
mov
xor
or
lods
push
leave
andl
out
iret
popa
sbbl
or
pop
and
mov
loopne
xchg
pop
xchg
aas
pop
or
data16
cmp
add
aad
out
scas
xchg
inc
repnz
out
out
xlat
movntps
fisttpll
push
js
pushw
dec
xchg
sub
repz
and
test
test
je,pt
das
out
repnz
xchg
shld
add
insb
stc
mov
sti
cmp
pop
push
xchg
iret
dec
sub
jno
xchg
mov
test
or
movl
sti
mov
sarb
outsl
jb
xor
inc
fidivs
dec
popa
mov
insb
push
jno
frstor
and
pusha
mov
fs
dec
lcall
add
lock
pushf
pop
jmp
xlat
push
mov
or
dec
insb
mov
notl
mov
sub
popa
imul
daa
lret
cmp
xor
lcall
xchg
adc
add
and
inc
imul
rclb
sbb
mov
repz
movsb
leave
sub
mov
lahf
pop
in
mov
xlat
and
into
fwait
aaa
nop
mov
xchg
popa
js
sub
andb
dec
sbb
jae
xor
lcall
int
stos
aad
clc
mov
popf
add
fsubrp
sbb
pop
cltd
testl
sbb
push
lock
adc
push
scas
and
jmp
mov
xor
das
daa
push
cmc
xor
repz
add
xor
or
pop
dec
imul
cmp
dec
test
add
in
xchg
dec
movsl
mov
cmp
inc
fnclex
jne
int
jmp
dec
test
mov
mov
add
xchg
jno
mov
xchg
pop
in
mov
stos
ja
repz
jae
cmc
das
sub
jmp
jae
rclb
xchg
xchg
jp
int
in
and
icebp
push
mov
and
xor
push
imul
jo
mov
or
mov
jno
fisubrl
or
mov
subl
loopne
pop
int
fisttps
xor
dec
push
or
loop
and
sti
sub
sbbb
xchg
jne
cmpsb
jge
js
xchg
dec
fidivrl
fcoms
mov
fisubrs
or
ret
adc
jmp
mov
pop
jbe
stc
xor
out
xor
popf
cmp
xor
aad
inc
and
lret
in
call
or
orl
jmp
add
push
add
insl
mov
lods
inc
adc
orl
xchg
pop
jo
mov
es
in
test
mov
jg
loope
mov
out
lods
fs
push
inc
mov
and
into
iret
je
or
ds
jbe
movsl
lret
iret
rcrl
outsl
or
adc
push
and
fistpl
insb
sbb
pop
cltd
ds
dec
xchg
test
popf
push
jge
addr16
sbb
addr16
or
loopne
out
adc
popa
mov
test
or
jmp
iret
pop
mov
add
test
add
shl
dec
and
sub
jnp
adc
pusha
js
icebp
call
aad
out
cmc
pop
jo
jg
mov
xchg
mov
outsl
mov
nop
cmp
and
movsl
xor
inc
test
xchg
jge
pop
mov
cmp
jo
jns
pop
imul
out
iret
fisubrs
jns
popa
testl
cmp
iret
mov
mov
jmp
xchg
jmp
test
adc
cmp
into
jo
and
and
outsl
sub
xchg
movsl
sub
mov
adc
or
jecxz
js
adc
mov
xchg
shll
add
aad
ja
adc
inc
lea
push
add
int
scas
imull
notl
test
inc
out
or
jns
imul
sbb
and
or
dec
pop
dec
sub
dec
popa
mov
and
and
xor
sub
add
or
test
mov
inc
jecxz
out
imul
cmc
mov
mov
jl
push
jnp
cmp
push
push
cmp
and
mov
mov
int3
mov
sub
or
decb
int
pop
insl
mov
fucomp
paddw
pop
mov
in
outsl
cmpsl
pop
push
js
cmp
cmp
aad
stos
stos
addr16
push
xchg
push
pop
mov
mov
jecxz
call
lods
or
mov
loopne
ja
lahf
fbld
out
xchg
or
mov
jmp
jl
int
les
jno
in
cli
mov
imul
fcomps
into
mov
pop
push
adc
cld
into
fidivl
mov
cmc
mov
sub
and
unpcklps
add
inc
icebp
push
fcmovb
lcall
scas
jno
inc
cmp
xchg
xor
sbb
mov
add
pop
stc
mov
jns
in
lahf
lock
lcall
aam
mov
push
lods
add
mov
mov
add
loope
sub
mov
pop
lret
dec
fsubl
pop
hlt
fcomps
or
jb
cmpsb
fcomi
int
mov
xchg
or
aad
jns
xchg
pop
xor
jo
inc
jnp
fnstenv
test
call
add
mov
mov
cmpsb
ret
or
aad
leave
repz
out
lds
mov
jecxz
shlb
cwtl
imul
xchg
outsl
adc
jb
int
push
int3
movsb
ret
repnz
je
call
fimuls
pushf
cmpsb
insl
hlt
dec
push
xchg
ljmp
pusha
popa
in
stos
inc
in
or
movsb
test
sbb
fdivl
sub
cmc
mov
fsub
ljmp
or
sub
int
jmp
push
outsb
push
cmp
cltd
or
push
iret
ljmp
imul
cmc
mov
cltd
inc
imul
test
dec
repz
fcomi
mov
adc
jno
mov
mov
sbb
lcall
rol
int3
addr16
inc
test
jns
mov
out
call
fdivrl
in
sti
sbb
fs
mov
in
gs
loopne
rolb
jno
sahf
fsubr
ja
dec
nop
mov
outsl
inc
lods
push
insl
je
sub
outsl
xchg
loop
inc
in
pop
decb
sbb
mov
orb
add
dec
cmp
loope
call
iret
dec
in
and
xor
inc
mov
outsb
mov
lcall
xchg
or
xchg
call
cmp
sub
int
vucomisd
add
pop
cmp
add
adc
sbb
clc
cmc
push
xor
movsb
or
in
jl
push
cltd
shrl
inc
push
cmp
add
cmp
test
inc
popf
push
pop
inc
cltd
enter
pusha
lret
call
adcb
repnz
fcmovnbe
test
sbb
xchg
or
or
pop
push
scas
or
movsl
in
mov
loop
enter
inc
cmp
sub
jg
pusha
pop
jnp
mov
push
jg
mov
scas
and
jmp
xchg
movsb
jo
lahf
mov
pop
push
out
int
subb
cmp
xchg
outsl
fwait
cmp
xchg
xor
xchg
jae
push
fstpt
outsl
jl
cs
xor
movsl
sbb
mov
out
dec
aad
into
les
enter
iret
fsts
imull
xchg
sub
scas
jmp
ret
dec
test
inc
movsl
dec
leave
int3
or
iret
insb
inc
aad
push
int
aam
push
adcl
xchg
adc
daa
ficoml
jnp
imul
xchg
push
cmpsb
xor
sbb
stos
test
int3
mov
mov
aad
inc
xchg
sub
push
sahf
out
push
adc
xchg
dec
dec
cmc
daa
push
inc
out
movsb
and
movsl
sbb
adc
cmp
adc
push
mov
sub
pcmpeqd
add
test
out
cmc
cs
xor
test
ds
sub
cmp
cmp
dec
int
pop
mov
aam
jecxz
push
out
sbb
dec
pusha
add
out
sbb
and
mov
cmp
rcrl
mov
adc
ret
sbb
xchg
and
dec
test
and
mov
mov
test
in
cmp
iret
leave
dec
mov
fstpt
jo
ja
mov
pop
xchg
and
pushf
aad
repnz
rcl
jne
add
out
xchg
lret
push
das
inc
imul
cltd
fmuls
in
movsl
or
dec
movsb
clc
xchg
jecxz
lret
cmc
cmp
fstpt
insb
push
sets
and
mov
xlat
xchg
popf
xchg
add
jmp
notl
ret
xchg
js
and
cmp
adc
cmp
test
frstor
shll
cmp
out
cmp
dec
dec
scas
push
push
mov
mov
or
in
into
jbe
cmc
jle,pn
lcall
pop
rorb
cmp
shlb
clc
mov
fisttps
push
pop
mov
int
dec
lds
hlt
fildll
adc
mov
jle
fists
sub
stos
rorb
jo
mov
xchg
shl
sbb
sub
sbb
je
sub
pusha
xchg
inc
fcoml
leave
out
lods
and
xor
jo
into
leave
call
loope
mov
pusha
mov
leave
pop
dec
mov
arpl
mov
out
xchg
mov
sub
lcall
and
aad
cmp
fildll
push
imul
popf
das
sbb
cmpsl
stos
jae
mov
loope
and
in
iret
add
cmp
ljmp
das
clc
mov
pushf
pop
mov
or
movsl
xchg
testb
cmc
mov
add
aad
xor
adc
bsf
mov
cmp
sub
fucomp
mov
or
jmp
adc
jb
inc
mov
or
sbb
int
psraw
test
in
mov
cmp
push
fnstsw
mov
mov
xchg
sub
pop
orb
sub
or
mull
andl
jnp
sbb
aad
jno,pn
stc
mov
js
adc
xor
sub
and
cmp
jmp
pop
fcmovnu
xchg
cltd
daa
inc
in
xchg
cmc
dec
cmpsb
jno
mov
divl
ja
stos
outsl
fs
shlb
push
mov
pop
int
aad
int3
aad
test
jp
xchg
out
xchg
repz
loope
shrl
inc
punpcklwd
push
jg
cmp
add
lret
xchg
les
test
movsb
sahf
in
pop
xor
mov
outsl
jecxz
adc
or
xor
pop
inc
cmp
sbb
pop
fstps
lea
and
jl
jns
mov
sarl
add
adc
stos
cli
repnz
xchg
dec
enter
mov
push
leave
lea
ljmp
cmc
mov
int
xchg
mov
mov
cmpsb
ret
arpl
dec
psrad
push
xchg
jae
aad
rorl
mov
adc
lds
loope
sub
or
mov
jns
xchg
xlat
cmp
or
push
push
and
add
mov
andb
mov
nop
aad
jnp
sub
iret
and
lcall
and
xchg
rsqrtps
loope
adc
shl
jp
jb
xor
movsl
mov
or
jmp
insb
cmc
dec
pop
or
mov
cmovnp
xor
lods
push
jecxz
call
sub
test
lcall
cmp
fwait
sbb
fisubl
dec
cmp
or
push
or
inc
sbb
idivl
fstpl
lods
fldt
scas
repnz
inc
and
cmp
lea
adc
dec
sbb
xbegin
pop
adc
dec
aam
outsb
dec
into
or
in
add
jl
cmp
pop
dec
and
add
ret
adc
sbb
xchg
rclb
mull
pushf
jge
jecxz
addr16
adc
sti
dec
call
jge
test
cmp
movsb
add
ret
rol
cmp
sti
jne
int3
mov
cmpb
loope
enter
popw
pop
mov
mov
lods
mov
xor
jo
cmp
punpcklwd
sti
rcl
imull
xchg
xor
dec
roll
test
out
pop
mov
sbbl
jmp
cmp
lods
jnp
or
jmp
movsl
adc
push
or
inc
out
es
and
repnz
mov
in
lock
arpl
int3
aad
repnz
ficoml
cmc
in
aam
in
add
cmc
addr16
fimuls
cmp
mov
pop
rcll
scas
cmp
int
negl
mov
mov
fs
or
jno
movsb
xchg
lods
sahf
xor
push
fs
loope
and
ffreep
adc
pop
xchg
mov
push
mull
xchg
and
or
jmp
in
dec
int
dec
cmp
jmp
xchg
xchg
pop
jnp
mov
pop
mov
push
imul
mov
test
mov
sub
enter
xchg
inc
jp
jg
scas
iret
xchg
cltd
mov
fwait
mov
jo
jnp
lahf
xchg
mov
outsb
cld
aad
fisubs
or
mov
outsb
leave
scas
pop
punpckhdq
xor
xchg
mov
clc
repz
cmpsb
into
mov
lret
loopne
lods
push
sbb
cmp
jl
sub
hlt
xchg
xor
xchg
pop
push
test
ret
mov
jno
pop
adc
and
jp
mov
loope
fists
test
mov
test
iret
js
popa
push
es
pop
fimull
sub
cltd
incb
adc
les
insl
scas
adc
into
mov
or
lret
loop
stos
movsl
sub
xchg
xchg
xor
cmp
pusha
or
cld
insl
push
pop
jo
add
sti
std
fisttpll
sub
movsb
cmp
xchg
stos
pop
and
aam
pop
dec
mov
pop
lea
in
filds
or
divb
mov
mov
aaa
ja
scas
pop
popa
in
into
inc
adc
pop
nop
mov
pop
or
cmc
jmp
enter
or
aad
pop
dec
movsl
test
arpl
cmpsl
fmull
adc
movl
cmp
push
push
leave
mov
lods
xor
js
cmc
mov
call
inc
fwait
push
stos
jno
cmpb
mov
loope
cli
and
repz
mov
push
loope
int3
test
push
enter
pop
mov
cmp
sarl
or
jp
sbb
and
xchg
xor
cmp
sub
mov
push
popa
mov
mov
sarb
or
iret
shrl
push
sub
arpl
push
dec
sbb
popa
fidivrl
fistps
sub
scas
cmp
cli
lds
popa
pop
push
aaa
pop
js
lea
out
cmp
in
cmp
push
ja
mov
out
or
rcrb
cwtl
dec
cmp
add
in
stos
cmp
dec
stc
or
mov
divl
dec
add
xsaveopt
cwtl
pop
imul
cmc
xchg
inc
or
lods
and
mov
mov
inc
xor
mov
mull
fstpl
test
fldt
push
cwtl
sub
insb
out
repz
dec
popa
aad
cmp
nop
sub
jecxz
xchg
mov
fnstenv
movsl
cs
pop
mov
xchg
repnz
clc
paddw
dec
mov
jno
dec
xchg
mov
out
mov
xchg
iret
inc
sbb
cmp
testl
int3
cld
lea
and
push
ds
jg
jg
int3
xchg
outsb
add
jbe
jb
pop
xchg
xchg
popa
in
sbb
fdivrl
mov
mov
sub
jmp
mov
jmp
or
test
ss
mov
sbb
sub
pop
mull
or
jge
pop
cltd
xchg
in
nop
or
jno
inc
into
loope
test
or
mov
lret
cmpsb
xor
add
fists
push
mov
mov
nop
std
pop
push
int
xchg
inc
add
inc
aad
call
xchg
outsb
cmpb
lret
pop
sbb
testb
insl
call
aad
cwtl
aam
iret
jne
jnp
aaa
or
dec
mov
sbb
sti
cmc
or
push
int
xchg
rcl
cmp
or
jp
cld
or
test
mov
push
es
enter
cmpsb
hlt
shrb
jb
jl
pop
push
fcomps
stos
and
cs
in
fldt
sbb
xchg
pushf
add
mov
sbb
outsl
loope
xchg
mov
in
fldcw
jo
xchg
test
enter
scas
adc
test
fcoms
xchg
into
ljmp
xchg
repz
sub
out
sub
loope
lods
inc
sti
and
stos
push
lcall
jnp
aam
mov
mov
dec
push
subl
push
push
lods
or
shrb
pop
cs
jp
imul
notl
aad
insb
lret
xor
mov
repnz
xchg
mov
push
repnz
xchg
xor
mov
cld
lods
stos
dec
imul
dec
sti
clc
cs
aad
mov
imul
outsl
pusha
in
fldenv
and
into
fs
pop
lret
fcmovnbe
lock
stos
xchg
sub
mov
out
cmp
pop
imulb
outsl
and
sub
gs
ja
fnsave
push
mov
gs
cmc
sti
inc
push
fdivrs
jmp
cmc
sub
push
out
push
xor
pop
inc
ja
jp
pusha
mov
loope
lods
cmp
pop
cmp
fidivrs
mov
xor
test
sub
and
jl
outsb
loopne
or
mov
cmp
mov
mov
iret
xor
mov
mov
dec
inc
adc
call
aad
inc
lahf
lea
fistpl
enter
xchg
sub
ret
pop
inc
and
std
lret
inc
push
ds
shrl
add
imul
xor
jle
xchg
push
xchg
dec
dec
jmp
testl
fildl
imul
cmpsb
nop
scas
jns
cmp
fldcw
imul
adc
fadd
add
add
cmc
int
mov
fs
sbb
pop
jns
test
push
inc
imul
aas
aam
int
push
dec
js
cmp
repnz
cmp
cmp
xorl
std
scas
enter
sub
jmp
xchg
sbb
lcall
loope
xchg
jbe,pt
cld
jnp
dec
mov
mov
inc
int
cmp
imulb
or
cs
repz
and
mov
int
int3
lea
cmc
imul
mov
into
pop
jmp
jle
push
lret
push
xchg
cmc
cmpsb
push
pop
movsb
xor
mov
jl
mov
xchg
mov
mov
lea
or
jp
sarb
push
xor
loope
jmp
mov
xchg
mov
testl
rorl
out
popa
pushf
out
aad
mov
rclb
loopne
push
mov
and
inc
and
ret
std
xlat
test
and
mov
inc
lahf
insl
in
rcll
and
add
leave
cmp
repz
cmp
push
notb
into
and
mov
xor
or
jno
cmp
sbb
adc
fs
xchg
stos
enter
inc
in
stos
bound
sarl
in
jge
push
pop
cmc
or
aaa
add
popa
jmp
mov
sbb
pusha
xchg
cld
fwait
daa
mov
out
or
sarb
imull
add
pop
ret
imul
or
shll
lods
jmp
push
jns
and
or
mov
push
xchg
imul
das
and
flds
or
sub
addl
cld
rorb
pop
inc
js
xor
sbb
pusha
into
popa
cmc
push
shrb
jecxz
push
int
ja
dec
xchg
in
mov
jge
fs
lret
mov
insb
das
jnp
jno
je
in
imul
xchg
mov
cmc
rolb
jnp
mov
dec
sti
lea
in
adc
mov
mov
in
xor
int3
aad
scas
adc
into
mov
xchg
scas
mov
cmp
nop
or
psadbw
push
fistpl
jno
daa
adc
xchg
movsl
outsb
lods
xchg
dec
push
in
xlat
jmp
add
mov
lods
mov
pushf
lret
dec
stc
out
mov
in
dec
dec
mov
add
loope
mov
fidivl
out
shr
mov
stc
cwtl
les
sahf
cltd
xchg
cmc
xchg
stos
sbb
popf
imulb
jbe
loopne
lods
push
or
cmp
fisubl
xor
fwait
dec
xchg
xlat
loope
imul
push
adcb
push
pop
cmp
push
jg
int3
lea
push
inc
cmp
sbb
bswap
mov
inc
movsl
or
pop
cmpl
or
xchg
xchg
scas
inc
iret
loope
jp
adc
popa
xlat
fnstcw
mov
cmp
mov
and
sub
or
push
lods
stc
xchg
dec
sub
outsl
jbe
hlt
mov
arpl
leave
sub
push
pop
jno
insl
push
test
imul
mov
adc
out
jmp
bound
xchg
cmp
aad
pop
lea
leave
add
test
stos
aad
inc
mov
pop
test
in
loop
jp
xchg
jae
jae
dec
outsb
push
xor
ljmp
sbb
sbbl
push
clc
ja
pop
sub
and
pusha
test
dec
adc
movsb
out
xchg
mov
imul
jmp
fcoms
push
stos
js
dec
dec
sub
mov
mov
inc
xor
cmp
daa
scas
push
inc
mov
xor
xor
call
enter
jb
cltd
std
jo
jecxz
imul
cmc
cwtl
iret
or
pop
mov
and
mov
jns
cmpsl
out
xchg
bswap
std
add
mov
insl
mov
out
xchg
inc
xor
push
mov
mov
loope
push
pop
sub
aas
pop
pop
fcompl
lret
out
sahf
cmp
test
sub
and
mov
aad
addr16
xchg
mov
imull
jmp
lods
mov
scas
sub
pop
mov
jp
xor
and
add
movsl
cmp
jo
xor
inc
add
dec
cmp
mov
jp
into
aad
xchg
and
sbb
fistl
pusha
mov
push
xor
sbb
mov
scas
or
call
cmc
int
sbb
xor
mov
add
mov
fildll
push
cld
dec
mov
iret
or
fisttps
neg
push
aad
in
hlt
ret
mov
push
insb
leave
outsl
cmp
mov
sti
scas
in
pop
pop
shl
jge
aam
cmpsl
cmp
or
mov
mov
test
xchg
fs
les
movsb
dec
pusha
cltd
sbb
int
lret
loope
in
jl
cmpsb
inc
adc
je
sub
mov
dec
dec
adc
les
pop
or
test
mov
add
jns
xor
sub
and
inc
shll
sti
and
lret
lret
stos
leave
inc
cmp
jns
push
pop
and
test
les
and
cld
add
jg
sbb
nop
xor
add
inc
insl
jp
mov
jno
jle
cmp
rcrb
call
push
call
or
mov
cmp
dec
inc
jo
dec
dec
or
dec
lods
pop
jbe
xor
mov
pop
cmp
cmpsl
sarb
jp
cmp
cmp
loopne
js
stos
cmp
es
push
mov
scas
jecxz
push
push
push
fwait
sti
mov
repz
mov
stos
add
mov
mov
add
dec
stos
pop
lods
insb
inc
test
mov
jns
push
scas
test
lea
jns
sbb
cmp
add
xchg
ds
out
aad
les
into
jp
ja
adc
lods
mov
or
shr
and
mov
or
mov
push
call
iret
mov
inc
rorl
cmpsl
lock
dec
push
cmp
mov
cmp
push
cmp
pop
push
pop
lods
mov
push
gs
fs
mov
and
ret
outsl
dec
lret
mov
cmpsl
inc
sub
and
aad
test
push
mov
inc
add
mov
mov
sti
arpl
mov
scas
lret
mov
aad
inc
mov
fmuls
dec
xchg
jne
and
loope
lock
pop
mov
outsl
lcall
mov
or
rorb
js
jmp
inc
sbb
xchg
jg
push
jecxz
cmc
xchg
mov
mov
cld
dec
scas
jecxz
jns
add
cli
imul
or
pop
out
icebp
lea
push
jnp
pushf
inc
pop
cltd
movsb
fs
dec
inc
lret
add
push
call
addr16
jmp
pop
ljmp
cmp
fstp
mov
push
arpl
popf
outsl
dec
xor
ror
ret
lea
mov
stos
mov
ret
aam
cmp
fisubrs
lret
sahf
mov
jge
sbb
scas
sub
popa
cmp
mov
cld
ficomps
jle
mov
jns
movsl
fisubs
es
lock
xchg
cmp
lds
lahf
mov
sub
push
pop
mov
jp
adc
aaa
call
xchg
cli
repz
ja
sti
xchg
popf
cmovo
mov
mov
into
xchg
mov
mov
mov
arpl
push
inc
add
out
pop
xlat
jmp
lahf
gs
mov
adc
sti
jle
cmp
popf
xlat
shl
adc
aad
lods
mov
cmc
sbb
sbb
cli
call
jb
mov
jno
cmp
or
leave
aad
pop
push
in
les
pop
into
int
cmp
lds
dec
jmp
cli
mov
icebp
aam
dec
sub
mov
xchg
and
shl
jns
fucomi
adc
cmp
add
imul
cltd
test
push
or
cmp
jl
sar
push
pop
or
jle
or
adc
orb
mov
loope
imull
mov
movsb
xor
cmc
sub
cld
nop
iret
mov
mov
out
cmp
aad
mov
in
adc
bswap
xchg
xchg
leave
aam
std
adc
sti
mov
mov
jnp
jnp
sub
mov
pop
dec
std
out
lock
int
and
lods
adc
js
hlt
shrl
test
mov
dec
push
pop
lahf
push
pop
fsubp
hlt
fstl
iret
xchg
sti
gs
jle
push
or
lret
and
cli
xor
mov
aad
mov
mov
cli
rol
mov
inc
pop
out
in
dec
push
fwait
call
jmp
lods
bts
cwtl
subl
sbb
jge
and
dec
cwtl
sub
mov
into
push
pop
jg
adc
push
int
xchg
dec
paddw
jbe
lds
adc
or
mov
or
push
add
mov
aad
mov
pop
adc
xorl
fldcw
sbbl
loop
inc
push
adc
movsl
and
inc
sub
es
lock
enter
mov
mov
iret
and
mov
add
mov
xor
pop
out
mov
mov
stc
mov
mov
xchg
stos
push
and
cmp
jecxz
imul
jmp
insl
hlt
ja
fndisi(8087
insb
mov
jno
sub
dec
mov
mov
popf
mov
xchg
mov
test
xchg
jecxz
adc
push
xor
popf
lahf
mov
scas
jns
or
and
fdivr
jp
icebp
or
dec
lcall
adc
jno
fstl
cltd
rcll
xchg
cmc
jb
mov
lock
mov
vpmacsww
in
pop
mov
dec
loopne
sub
mov
stos
or
popa
out
dec
shrl
lods
outsb
fistl
out
scas
adc
loop
push
pusha
push
out
push
mov
testb
pop
and
push
movl
test
inc
xchg
hlt
divl
adc
int3
test
jae
inc
in
sbb
fucomip
repnz
mov
movsb
push
out
xchg
adc
or
imul
sbb
add
call
arpl
iret
mov
xchg
scas
adc
je
xchg
mov
sarb
cmc
xor
adc
lods
add
push
xchg
fmull
dec
mov
add
mov
push
adc
inc
cmp
repnz
xor
nop
xor
xchg
popa
clc
pop
nop
or
shll
das
movsl
repz
fcoms
jns
nop
leave
fs
insb
dec
or
bound
popa
lcall
and
pop
xor
or
fmulp
mov
pop
or
in
jl
call
mov
cmp
push
out
sub
scas
and
ds
lea
std
sub
loope
inc
xchg
xchg
outsl
sub
jle
or
inc
loope
imul
push
lods
add
mov
mov
inc
xchg
mov
in
push
jl
mov
cmp
dec
jnp
pop
das
aad
leave
cmp
repz
jge
mov
int
pushf
out
ja
das
dec
std
in
mov
jmp
inc
and
pop
inc
jl
xchg
in
outsl
lahf
jbe
jo
mov
scas
push
mov
add
imul
mov
call
sahf
dec
addr16
int3
faddl
mov
daa
sbb
xchg
mov
push
inc
imul
mov
and
stc
inc
lret
ror
push
add
mov
mov
cmp
insb
fsubp
pop
mov
sbb
or
pushf
je
pop
adc
jnp
sti
div
pop
mov
inc
and
sbb
add
jecxz
rcl
fwait
lahf
xor
outsb
pusha
cmpsl
pop
lods
add
movsb
jg
jo
js
inc
sub
mov
pop
push
jg
mov
jns
movsl
std
push
cmc
cmp
test
and
rcll
or
imull
insb
mov
shr
lods
jnp
icebp
int3
jecxz
mov
mov
cmp
cmp
inc
dec
loopne
std
push
push
pop
sbbb
mov
aaa
fbstp
aaa
cmp
leave
idivb
and
mov
pop
sbb
sti
push
xchg
inc
jmp
dec
inc
sti
sub
ficoms
xchg
jns
daa
mov
lcall
cmp
sahf
cmp
push
cltd
outsb
shl
sub
push
aad
into
repnz
cmp
or
cmc
mov
mov
ja
mov
in
lods
sub
or
inc
fmul
jecxz
xor
pop
call
fimull
paddsb
sbb
aad
cmp
jno
mov
repnz
cli
xchg
push
or
sarl
push
push
jecxz
sbb
cmc
push
pop
mov
lods
jmp
mov
clc
outsl
add
cmp
xor
outsl
bound
mov
add
push
in
adc
inc
adc
stc
push
cmp
les
xor
test
ror
loope
fmul
mov
add
dec
push
dec
sub
dec
out
pop
sub
mov
dec
addb
jno
std
xchg
push
mov
repz
mov
out
add
ret
hlt
sbb
cmc
xor
popa
xchg
add
leave
faddl
scas
mov
or
fnstcw
daa
in
mov
js
mov
or
aas
out
pop
scas
or
xchg
add
mov
adc
in
int
sti
inc
lds
fbld
dec
mov
xor
xor
xchg
add
sahf
bnd
mov
loop
fcmovbe
movb
loope
insb
cli
dec
fistpll
imul
sbb
push
xchg
mov
push
sbb
or
xor
and
push
in
sub
jl
pop
mov
movsl
jbe
in
or
xchg
pop
jnp
cmp
add
clc
mov
mov
cmpsb
bsf
gs
push
movsl
fdivrs
mov
into
popa
idivb
sub
push
insl
or
xor
test
add
mov
xchg
push
dec
stos
fsubl
or
dec
icebp
cmc
fisttpl
fsubrp
xchg
ljmp
inc
pop
jns
dec
adc
test
and
dec
inc
fisubrs
jnp
imul
jo
lods
popa
and
dec
push
scas
mov
ds
xor
mov
xchg
jb
cmp
dec
cmp
mov
push
mov
xchg
dec
and
push
js
bswap
push
mov
sahf
sub
pop
mov
or
mov
repz
int
jle
mov
jp
jbe
cli
test
mov
xor
mov
dec
mov
mov
sub
mov
int3
or
dec
jle
push
test
xchg
cmp
or
loope
cltd
test
pop
mov
push
dec
test
push
jno
jno
insl
xor
jl
dec
mov
dec
jge
mov
mov
cmc
pop
scas
push
lcall
sub
out
test
sub
pop
jns
add
ret
mov
dec
fstps
and
lock
fcmovbe
lcall
aas
cltd
ret
cwtl
cmp
mov
in
xchg
jg
pop
std
cmp
xchg
jmp
pop
faddp
test
cmp
popf
push
sbb
insb
adc
xor
sbb
sub
pop
mov
mov
mov
out
js
push
daa
cmp
jo
push
je
xchg
push
fidivrl
push
scas
int
lret
adc
inc
lods
pop
push
lock
xlat
dec
dec
xchg
adc
inc
mov
data16
push
jge
movsl
and
add
enter
lret
and
int
ds
jbe
int
into
dec
js
insb
pusha
cmpsb
adc
aad
inc
xchg
int
rorb
cmc
repz
sub
jmp
aad
outsb
cmp
push
or
into
cmc
jnp
daa
arpl
inc
mov
insb
loopne
fsub
por
xchg
notb
pop
cmc
in
adc
xor
call
cli
add
xor
sar
mov
repz
xchg
xor
dec
push
fnstcw
ror
cmp
xchg
push
mov
adc
cld
xor
in
repnz
ficoms
mov
iret
movsl
scas
jecxz
dec
ss
jp
mov
mov
in
clc
rcrb
cmp
idivl
imul
add
lret
cmp
clc
jge
dec
xchg
adc
dec
lods
cld
movsl
inc
outsl
out
std
and
push
sub
fmull
mov
adc
pop
push
lods
xchg
cmc
cs
push
add
lahf
xchg
lcall
push
mov
ss
daa
or
fstpt
mov
or
ret
xor
testb
lods
divb
adc
xor
testl
imul
jmp
imul
cmp
movsl
xchg
or
into
jb
add
scas
mov
fs
mov
mov
pop
mov
test
and
into
je
xor
cmpsb
sub
cli
out
je
repnz
fisubl
outsl
scas
lret
jnp
dec
loope
pop
stos
mov
test
push
cmp
add
das
andl
jnp
xor
sub
stos
aad
push
ljmp
mov
iret
test
cmp
pop
mov
pop
or
lret
xchg
inc
js
popa
mov
jecxz
fstpl
inc
rorl
jnp
push
repnz
or
sarb
sub
jmp
or
sub
xor
aam
push
xor
mov
sub
inc
int
aad
dec
mull
fbstp
dec
mov
popf
cwtl
arpl
dec
es
sbb
mov
cmp
mov
into
out
scas
mov
loopne
sub
in
int
push
ja
jmp
adcb
push
cld
or
int
jo
out
and
sbb
cmp
xchg
mov
or
xchg
rcl
cmp
cmc
cmc
sub
mov
aad
jle
jbe
and
pop
and
movb
jl
jbe
pusha
pop
xchg
mov
cmpsb
fs
cld
and
dec
out
cmp
aad
jp
pop
fdivr
ja
cmpsb
xchg
adc
les
in
push
pop
cmp
jns
ficomps
stc
or
cld
stos
add
test
xchg
push
nop
xchg
mov
inc
jp
fisubrs
popa
mov
and
daa
mov
lods
add
dec
js
cmp
xchg
lds
int3
popa
test
cmp
mov
negl
xor
and
dec
repz
cld
xchg
popf
scas
sbb
or
sub
add
mov
push
clc
adc
movsl
clc
mov
test
pop
sbb
popl
jae
dec
add
push
int3
jmp
nop
or
jge
add
aaa
push
mov
mov
mov
addr16
mov
xor
add
push
fldt
cmc
subb
sub
enter
ljmp
aam
jl
push
or
fadds
pop
orb
mov
push
js
in
push
stos
clc
ds
call
lret
popa
faddl
es
mov
arpl
push
int
mov
aad
and
das
hlt
pop
adc
cmpsb
pop
jbe
fwait
sbb
mov
ds
dec
idivl
jbe
mov
xchg
mov
xor
outsl
cmc
dec
xchg
push
mov
mov
aam
mov
sub
leave
xchg
and
add
fxch
and
and
jae
aam
lock
dec
xchg
call
pushf
dec
scas
dec
fadds
jle
loopne
push
pusha
dec
mov
imul
cld
adc
pusha
aaa
xchg
inc
mov
and
inc
xchg
mov
icebp
lods
test
shll
sti
push
adc
int
arpl
repnz
and
xchg
jmp
cld
out
mov
out
clc
add
stos
adc
adc
jl
lds
call
push
aam
das
arpl
pusha
nop
rcrb
loopne
xchg
add
jp
xor
xorb
and
dec
testb
cmp
xchg
dec
xor
jno
add
cltd
xor
decb
in
push
and
sub
dec
in
mov
push
loopne
lahf
shrl
out
or
inc
xor
lea
and
push
add
push
cmp
pop
add
lahf
sub
jno
js
push
jae
mov
xchg
pop
or
sbb
jge
dec
xor
push
in
dec
sbb
ss
push
inc
add
repnz
aam
inc
bound
lret
xchg
lods
sbb
mov
jno
xchg
imul
leave
fistl
lods
cs
das
and
add
outsb
fcmovne
and
sub
popf
notl
test
dec
jno
or
test
add
jbe
dec
jl
xchg
inc
mov
mov
jle
das
xor
fdiv
dec
pop
cmp
icebp
xor
fmull
add
ljmp
js
inc
cmp
les
shlb
loopne
popf
cmpsb
or
outsl
add
popf
or
jl
push
fucomi
dec
sub
enter
ds
lcall
cmpsb
fidivrs
orb
fsubrp
cmp
aad
imul
roll
in
sbb
js
fs
sub
adc
inc
mov
fwait
test
sub
bound
loope,pt
sub
lahf
cli
ljmp
mov
mov
xchg
ret
jp
xchg
sbb
jae
xchg
les
jo
mov
into
aad
repz
call
ljmp
std
adc
xchg
test
jnp
loopne
mov
sub
das
ficomps
fldcw
and
dec
fucom
pop
mov
sub
add
jo
ljmp
cwtl
push
sub
or
push
jge
jns
push
dec
loop
sub
jl
test
scas
or
shrb
xchg
mov
int
lock
movsl
inc
adc
ja
jge
cmp
cwtl
ja
jb
sti
sub
push
subl
pop
inc
mov
add
dec
pop
mov
or
mov
arpl
fstpl
sub
idiv
aaa
add
rorb
cld
cmp
lods
loopne
cmp
ret
bound
cmp
adcl
dec
inc
shl
imul
adc
mov
lahf
cmc
outsl
dec
dec
push
cs
lock
jbe
imul
fiaddl
pop
jge
jb
pop
std
cs
pop
adc
xor
fcmovnu
dec
negl
aad
test
or
mov
hlt
pop
push
inc
maskmovq
jecxz
stc
mov
in
cmpsl
mov
and
mov
leave
push
sub
scas
pop
aas
xchg
inc
in
das
aad
in
jl
sarl
cwtl
push
push
mov
or
out
aas
and
out
nop
pop
push
test
stos
cmc
stc
jecxz
cmp
jmp
shlb
cmp
mov
pusha
out
iret
push
xchg
popl
repnz
mov
movsl
out
call
push
popa
xlat
stos
dec
jecxz
mov
add
mov
sbb
lret
cmc
lods
test
jno
mov
cltd
mov
sub
or
movsb
mov
hlt
out
sub
push
ljmp
adc
repnz
inc
repz
and
aad
sbb
and
roll
inc
mov
lds
ret
mov
xor
lods
gs
mov
orb
out
dec
test
or
add
inc
into
js
outsb
push
dec
addr16
inc
ja
or
add
int
mov
mov
inc
or
jmp
mov
and
out
sti
push
pop
int
or
sub
in
clc
sub
loope
sbb
decb
push
add
in
and
pop
int
jne
jae
iret
lods
add
test
stos
xchg
mov
sbb
loop
push
roll
pusha
pop
les
flds
out
push
mov
lahf
cwtl
pop
jge
cmc
mov
ljmp
and
dec
loopew
mov
dec
loopne
jns
dec
adc
and
stos
push
test
xor
cmp
xchg
inc
test
int
popa
push
push
imul
add
and
push
sub
pop
out
push
popf
out
xchg
add
hlt
enter
std
xor
dec
xchg
mov
repnz
xor
dec
ljmp
cltd
into
mov
mov
js,pn
or
push
sarl
cmp
mov
ja
mov
cmc
dec
fldenv
pop
jo
adc
test
addr16
cmp
mov
test
push
cmpsl
lcall
xor
test
lret
testb
mov
pop
jns
arpl
dec
add
sub
or
pop
push
clc
add
jp
pusha
verr
xchg
jmp
sbb
gs
mov
jmp
lods
and
and
test
pop
dec
stos
repz
sbb
pop
xchg
das
fsubrl
lcall
out
sbb
add
push
fcmovbe
or
js
aas
sub
mov
cwtl
lret
push
or
push
je
fsubs
sub
ja
lods
or
clc
movsl
jae
xchg
mov
out
popa
sbb
les
lods
mov
adc
ljmp
sbb
xchg
arpl
imul
push
int
jecxz
adc
or
jbe
fcomps
imul
push
sbb
inc
or
jmp
push
sub
jmp
testb
fisubrs
jmp
or
mov
fidivrs
jmp
dec
roll
push
enter
cmp
add
mov
add
mov
cmp
stc
ljmp
sub
repz
inc
nop
sar
arpl
cmp
jmp
pop
push
test
xlat
push
push
js
ret
inc
arpl
pop
and
movsl
iret
call
add
cmp
pushf
test
pop
adc
pop
push
xchg
cwtd
js
cmpsb
pop
in
idivb
int
repz
popf
jne
sub
mov
lahf
and
out
jg
push
aad
lcall
aad
dec
aas
sub
mov
cltd
dec
push
outsl
imull
push
bound
lahf
cwtl
aad
xor
aam
mov
xchg
scas
xchg
pop
outsb
std
add
xchg
push
sti
inc
push
les
jp
jo
mov
pop
jg
push
and
cmp
add
inc
push
sub
push
cwtl
int
fadd
shl
pop
lret
out
js
movsb
bts
and
fisttpl
loop
dec
iret
movsb
cmp
push
sbb
dec
pop
out
aas
es
xor
mov
add
mov
lods
movsb
mov
mov
test
and
fiadds
stc
mov
jl
fldl
pop
and
cmp
and
movaps
rclb
jg
xor
into
cwtl
jns
cmp
loope
sub
inc
test
mov
mov
mov
or
sbb
mov
add
std
xchg
or
cmp
and
adc
fsubrs
mov
xchg
cmc
push
outsl
scas
mov
cmp
ljmp
push
int3
inc
cmp
loope
or
out
mov
mov
lea
jmp
add
rorl
sub
mov
rorl
or
leave
in
cmp
or
xchg
outsl
gs
int
testb
sbb
pop
mov
mov
inc
mov
mov
pusha
pusha
mov
mov
push
and
xchg
in
je
dec
popa
popf
jge
in
bound
fucomp
mov
outsl
sbb
adc
movsl
aas
js
aam
sub
mov
mov
jbe
mov
es
out
aad
enter
or
or
add
filds
or
mov
idivl
xchg
aad
cmp
aam
pushf
std
adc
in
outsb
test
xchg
adc
jbe
push
dec
sbb
mov
test
leave
movsb
or
pop
jns
lahf
in
out
in
push
dec
push
push
and
jns
dec
out
add
inc
xchg
xchg
and
add
aad
aaa
gs
rorb
and
loope
insl
mov
or
divb
syscall
and
jbe
out
das
and
leave
cmc
dec
mov
rcrl
fidivrs
stc
clc
xor
ljmp
test
out
pushf
cs
jl
jge
sbb
and
fimuls
stos
push
lods
dec
xchg
cli
andl
std
aad
popf
jge
xchg
std
and
je
xchg
mov
add
mov
xor
dec
jp
and
push
mov
xor
adc
sub
decb
rorl
add
decl
pop
and
mov
and
loop
and
leave
xchg
inc
mov
cmp
int
dec
or
stc
sbb
fcomp
xchg
sub
cltd
popf
es
fidivs
arpl
scas
adc
cld
xchg
aad
shll
and
cmp
adc
jb
sbb
test
stos
or
movsl
mov
and
dec
rol
adc
das
fisttpll
xchg
jmp
inc
pusha
jmp
sahf
testl
in
and
mov
stc
fcoms
push
jge
repz
cs
addr16
pop
xchg
out
pop
cmp
dec
sahf
call
into
mov
iret
lods
sub
add
cmp
dec
xchg
ljmp
jmp
push
push
lods
out
jl
push
cltd
out
mov
std
mov
pop
popa
pop
lods
sub
mov
xchg
lret
dec
push
cmp
mov
cmp
and
inc
inc
or
dec
stos
push
adc
dec
xor
jnp
inc
jl
push
cmp
int3
stos
sbb
jl
daa
cli
cmp
cwtl
out
sub
adc
cmpsl
lret
xor
xor
fxam
mov
pop
pop
cli
sbb
leave
xor
sub
daa
ret
dec
or
cmpsb
push
stos
inc
xchg
inc
cmp
mov
les
xchg
or
outsl
mov
mov
ss
out
les
ljmp
mov
pop
mov
fnstsw
xchg
jo
stos
lock
dec
fldl
sub
fs
sub
in
roll
cmc
int3
or
addl
mov
popa
fwait
push
mov
mov
shl
cmp
xchg
insl
ret
jl
in
pop
ds
dec
clc
cltd
xchg
mov
lcall
adc
lods
mov
cmp
stos
je
cmpsl
psraw
mov
mov
std
int
mov
popa
fldt
mov
mov
insl
push
push
int
js
aas
popa
insl
and
stos
or
add
lods
test
push
dec
std
and
and
test
jge
inc
pop
dec
cmc
xor
fiaddl
add
rorl
mov
pop
jge
fabs
cmc
shlb
sbb
pop
sub
mov
mov
addr16
cs
sub
int
xchg
mov
and
mov
rcll
mov
aad
arpl
lcall
inc
dec
inc
add
pop
mov
and
aad
jae
lods
scas
add
lret
pusha
jmp
xchg
cmpsb
lds
rcll
aam
mov
mov
sti
xchg
xchg
jbe
jecxz
pop
fwait
lods
or
movsb
out
cltd
dec
mov
in
pop
sbb
dec
xchg
mov
fisubs
add
or
mov
jmp
icebp
mov
call
push
icebp
sbb
sti
mov
xchg
pop
or
test
in
jmp
jl
cmp
mov
mov
mov
xor
lods
jle
pusha
cld
aad
dec
xchg
dec
xor
stc
aaa
pop
mov
add
add
mov
test
lcall
lahf
push
add
sub
out
out
js
jae
mov
out
xchg
dec
out
lret
std
lods
mov
dec
and
jp
imul
sbb
xor
jg
mov
xchg
call
js
ret
addr16
int
inc
push
sbb
cmpsb
addl
cld
push
inc
in
push
in
lods
xorb
sahf
cmp
mov
adc
cmc
fwait
dec
js
stos
pop
sbb
mov
mov
fisubrl
in
scas
adcb
ret
lea
data16
sti
push
jbe
mov
les
mov
or
xchg
rorl
scas
shlb
orl
dec
loope
fstpt
imul
pop
xor
add
in
jns
sub
sahf
call
cmpsl
fcompl
xchg
int3
int
orb
js
shrl
mov
pop
and
stc
sub
lcall
xchg
rcl
call
pushf
fldl
or
test
test
ret
mov
push
enter
loopne
shr
test
xchg
nop
std
mov
or
pcmpeqd
dec
cmc
jmp
push
push
fsubp
adc
sbb
mov
shrb
popf
not
sbbb
gs
inc
in
pop
sarl
adc
jle
test
dec
dec
mov
movsb
dec
cmp
test
mov
adc
jecxz
xor
xchg
xchg
mov
pop
adc
pop
cmp
iret
jmp
add
stos
mov
or
sbb
mov
fs
in
add
push
dec
imul
xor
jmp
xchg
xor
jl
push
jmp
mov
iret
push
pop
fbstp
bound
jae
js
mov
insl
xchg
mov
cmp
push
sar
push
add
cmc
xchg
cmp
ret
pcmpeqb
nop
iret
mov
jo
in
push
adc
ljmp
scas
push
adc
loope
xchg
adc
dec
add
insl
sub
movsl
sub
jbe
out
fidivrl
int
mov
es
mov
mov
mov
fiadds
mov
cmp
jnp
and
dec
mov
fcom
add
lahf
repz
sub
push
fwait
xchg
subl
cmp
imul
iret
or
pop
xchg
xchg
outsb
sti
pop
in
mov
cmp
in
shrb
or
retw
popf
fisttps
sub
xor
mov
and
mov
mov
inc
insl
dec
imul
out
stc
cwtl
stos
out
lock
push
jb
hlt
cmp
pop
jo
cmpsb
cltd
xchg
movsb
pop
xchg
jl
pop
add
add
sbb
mov
mov
imul
push
fimuls
dec
cmpsl
add
std
cmpsl
mov
lds
mov
cltd
out
ret
jg
bound
call
jmp
inc
or
clc
into
inc
mov
call
jge
stos
push
jmp
pop
mov
dec
int
pop
xlat
out
lods
cs
ljmp
dec
lahf
mov
cmp
popa
pushf
push
sub
ror
rcll
test
push
jg
push
xchg
mov
push
xchg
out
jae
sub
or
sub
add
adc
ja
rclb
xor
mov
xlat
xorl
clc
push
call
fstpl
ret
mov
xacquire
xchg
cmp
scas
inc
mov
popf
add
out
mov
mov
test
imul
into
and
xchg
mov
push
cmp
mov
and
jge
push
pushf
cwtl
je
xchg
push
movsb
rcll
ret
es
xchg
into
or
in
clc
insl
xor
mov
dec
popa
adc
int3
aad
loop
inc
adc
xor
xchg
xchg
fld
jmp
lods
mov
lahf
stc
out
lods
push
sub
fnstsw
loope
push
cmp
xor
dec
pop
inc
sti
ljmp
jne
cwtl
fisubrs
and
call
arpl
shlb
shll
icebp
cmp
adc
out
arpl
adc
sub
push
mov
dec
jl
cmp
testl
and
mov
jl
int
call
fdivr
lods
xchg
sub
adcl
mov
lods
or
ljmp
idivb
cmpsl
mov
lcall
push
lret
into
lods
mov
mov
dec
mov
xchg
sahf
insl
shll
dec
dec
jmp
sbb
mov
dec
jmp
loope
aam
mov
dec
scas
pop
insl
xor
dec
cmp
cltd
xor
jno
movsl
inc
int
cmp
out
push
hlt
sbb
sub
mov
in
or
pop
imul
sbb
dec
iret
dec
test
sbb
xchg
mulb
pop
cmp
adc
sub
fldl
aam
pop
aaa
dec
call
dec
into
lcall
add
mov
and
xor
js
rcll
popf
vmread
xchg
lret
cmp
pop
pop
outsb
mov
call
lods
dec
mov
jno
loopne
mov
pusha
mov
xchg
imull
mov
js
fidivrs
push
mov
fldcw
xor
push
andl
std
out
dec
dec
mov
push
dec
mov
mov
in
mov
sub
cmp
lds
lret
xchg
div
leave
stos
add
addr16
push
mull
arpl
popf
dec
test
dec
jle
dec
rorb
lret
dec
int
notb
jl
cwtl
ficoml
lahf
jnp
pop
push
cmp
push
xor
dec
addr16
pop
pop
mov
test
xchg
fnstenv
jmp
dec
mov
dec
add
and
pop
call
ja
clc
mov
jl
out
stos
xchg
jb
pusha
mov
aaa
insl
inc
cld
out
push
loope
pop
and
inc
adc
imul
add
into
jo
xchg
movsl
mov
mov
call
jo
leave
cmc
nop
mov
aad
adc
mov
and
jecxz
dec
xchg
lret
incl
stc
popl
stos
xlat
sti
mov
inc
repnz
loope
jmp
jno
repz
addr16
nop
inc
ret
xchg
test
jne
cmpsb
mov
stos
imul
cmp
adc
and
pushf
jp
and
pop
sbb
jmp
rcll
xchg
loopne
scas
and
pusha
sbb
jg
ljmp
int
mov
mov
scas
push
cmc
lret
dec
iret
add
imull
mov
cli
mov
pop
and
cmp
xchg
mov
sahf
sub
inc
push
cmp
data16
xchg
xchg
pop
aad
adc
sbb
jne
mov
faddl
dec
xorb
mov
ss
popf
lods
inc
adc
sahf
out
lods
mov
xor
cmp
add
push
cmc
insl
outsb
cmp
push
fidivrs
aas
pusha
xchg
addl
dec
in
dec
in
inc
jge
cli
sbb
fsqrt
xchg
hlt
jl
iret
add
cmp
aad
rclb
jle
adc
call
jo
fistpll
dec
push
aad
add
jmp
mov
or
mov
inc
xchg
sbb
and
lods
lcall
scas
dec
out
cmp
sub
popa
test
push
cmp
push
sbb
mov
sub
test
loope
jge
xchg
inc
xchg
mov
sbb
cli
push
aad
sub
push
int
cs
fnsave
aad
xor
int
mov
imul
inc
in
jne
aam
pop
mov
repnz
cmp
and
mov
mov
adc
in
cmp
jb
jp
outsb
mov
xchg
aad
add
outsl
mov
mov
sub
in
stc
push
fidivs
mov
mov
sub
pop
repnz
in
decl
mov
aad
loopne
sti
call
mov
cld
jp
lea
push
lods
xchg
xchg
notl
jo
sarb
inc
add
or
popf
sbb
push
js
mov
cmp
mov
fcoml
fxch
pop
mov
xorl
add
sbb
pop
into
leave
aas
std
jne
xchg
sub
jns
int3
jne
or
scas
imul
dec
push
insl
xchg
mov
dec
imull
push
push
cmp
and
push
in
add
xchg
xchg
xchg
inc
stos
out
xor
cmp
sub
ljmp
aad
mov
psubw
pop
adc
in
lcall
adc
in
int
or
sub
cmp
cmp
stc
adc
add
push
dec
and
imul
sub
xor
fcoml
jnp
int
mov
pop
lock
outsl
adc
sahf
out
sub
idivl
jns,pn
add
dec
stos
inc
rcrl
cmpsb
fsubr
sahf
xchg
or
xchg
scas
pop
inc
test
adc
or
enter
es
fs
mulb
add
sub
mov
jo
push
xchg
sub
pop
cmc
aaa
or
lods
aad
out
xchg
jmp
mov
add
paddw
mov
cli
inc
mov
dec
mov
pop
mov
icebp
mov
bound
or
or
neg
loope
daa
jbe
in
stc
mov
ret
jne
inc
add
sub
bswap
in
push
movsl
or
adc
jno
rcll
lahf
scas
in
adc
sub
sbb
popa
in
nop
jg
xor
add
cmc
add
xor
pop
mov
iret
dec
and
jg
sbb
popa
shl
pop
gs
cmp
mov
call
push
cmp
pusha
sub
popf
cmp
rclb
test
push
jle
shrl
sti
xor
add
mov
pop
push
outsb
test
std
xor
dec
lahf
negb
or
add
push
cmp
clc
inc
dec
pop
pop
js
inc
rcl
popf
mov
jae
mov
mov
push
loopne
fstpt
sub
pop
in
jnp
into
out
cmp
scas
adc
test
xor
test
movsb
sbb
fidivs
xchg
into
dec
mov
leave
scas
insl
inc
insb
adc
push
push
sub
and
jb
in
fisttpl
dec
js
cmp
mul
nop
jb
cld
mov
lahf
mov
ja
sub
dec
stc
adc
repz
xchg
movsb
shlb
and
sbb
fsubrl
mov
adc
push
mov
dec
fiadds
xchg
shrb
add
push
sbb
push
sbb
xchg
sbb
jo
ja
jle
sub
mov
xchg
jo
push
mov
daa
pusha
notb
sub
push
mov
xchg
int
in
pop
std
push
jg
icebp
pushf
dec
cmp
outsl
and
sub
jle
mov
stos
movsl
xchg
test
and
imulb
pop
fs
daa
iret
shll
and
dec
sahf
push
call
or
in
arpl
xor
cmp
sbb
daa
mov
adc
in
inc
lcall
addb
sahf
mov
adc
cltd
and
gs
iret
cmc
add
xlat
pop
mov
cmp
fadd
push
xchg
mov
adc
popa
jae
rcr
xchg
xor
and
push
testl
daa
push
mov
mov
aad
in
lods
mov
int
inc
sti
sub
xchg
fimuls
leave
aad
jmp
mov
into
mov
xchg
sbb
daa
cmp
fstl
sbb
xor
jmp
adc
fsubr
outsb
jns
addr16
mov
cmc
cmp
lret
lock
div
add
and
mov
or
mov
pop
and
inc
sbb
test
or
jge
cmc
dec
mov
mov
call
in
mov
push
out
mov
inc
dec
mov
push
in
or
test
scas
push
out
dec
lods
and
jmp
sub
pop
popa
adc
je
jns
ja
std
sub
sbb
pop
hlt
decl
imulb
ror
cmp
scas
outsb
dec
lret
push
repnz
js
test
jne
divl
xchg
mov
and
jns
stos
mov
lret
scas
movsb
sub
inc
and
jae
call
adc
es
outsb
mov
movsb
mov
sbb
mov
inc
mov
adc
outsb
xchg
int3
xor
cmp
outsl
mov
stc
lock
push
dec
mov
and
fcoms
ds
jae
out
cmp
fistpl
cmovns
addr16
push
mov
mov
inc
and
dec
bound
mov
mov
aad
jg
cmp
leave
mov
sub
fmuls
cmc
outsl
jecxz
movsl
scas
call
or
mov
add
jae
clc
idivl
out
xchg
fildll
addb
xchg
xchg
jno
addr16
pop
sbb
mov
mov
mov
and
adc
pusha
cltd
or
in
fcompl
ja
popa
les
adc
call
cmc
lock
xchg
into
push
in
rorb
mov
fcomi
aad
jbe
stos
cld
sub
fst
push
inc
or
testb
outsb
cmpsl
stc
mov
or
out
push
sub
clc
cmc
test
popa
cmp
jl
jecxz
add
fimuls
sbb
dec
lods
sbb
mov
in
dec
xlat
sbb
dec
or
mov
push
repz
jp
or
adc
movb
sub
mov
repz
std
stos
lods
dec
sbb
js
cmc
and
in
icebp
adc
cmp
jnp
dec
xchg
faddl
add
call
ret
xor
mov
mov
repz
das
push
or
call
insl
out
cwtl
mov
fdivp
add
add
pop
mov
push
push
je
imull
inc
push
push
data16
inc
jle
or
sti
shl
dec
fistpll
jne
scas
adc
and
xor
jo
dec
fdivl
cltd
repz
sbb
mov
stos
test
and
lds
mov
mov
mov
xor
adc
aad
loope
and
xchg
aas
addb
cmc
dec
cmp
sub
int
sahf
scas
mov
sbb
movb
mov
pop
dec
std
push
lods
mov
outsl
outsl
push
stos
cmp
dec
outsl
mov
sub
movsl
and
xor
roll
test
test
ljmp
push
xchg
and
dec
call
ret
inc
mov
cmc
mov
xchg
scas
inc
xchg
ficomps
outsl
cld
sub
add
mov
push
add
scas
mov
xchg
stos
or
ljmp
sub
repnz
push
cmp
dec
adc
cmp
repnz
xchg
push
mov
lcall
push
popf
push
aad
into
lods
and
stc
fbstp
ss
jecxz
inc
mov
adc
xchg
mov
into
int
push
add
jns
mov
iret
mov
xchg
fildll
hlt
je
lods
in
lahf
jmp
rcll
out
cmp
lods
push
adcl
sbb
cmp
fmulp
mov
mov
outsb
xor
sub
mov
adc
inc
xchg
inc
fstp
gs
loope
ror
xchg
xor
rcrb
mov
in
int3
cmp
ljmp
jb
inc
daa
lret
or
std
jne
mov
mov
jmp
fildll
cmc
sub
cmp
inc
into
or
push
push
mov
jg
packuswb
es
sub
fmuls
and
imul
cmp
pop
aad
dec
jmp
add
sbb
icebp
out
cli
or
push
outsl
pop
mov
insl
xchg
dec
jno
mov
mov
pushf
mov
mov
iret
push
aad
push
adc
xchg
xlat
in
mov
jge
add
cli
into
test
cmp
inc
mov
sar
jbe
pop
xor
aad
mov
andl
pushl
aam
loope
cmp
jnp
int
jbe
orl
lods
test
mov
idivl
lahf
mulb
mov
rorb
repz
loope
dec
mov
sbb
sbb
dec
add
push
jl
push
add
push
add
xor
repz
ret
push
adc
jp
or
mov
jmp
lock
mov
xor
mov
jecxz
int3
dec
adc
mov
vmovsldup
mov
add
or
imul
lock
mov
jmp
jnp
scas
jo
pusha
sub
filds
or
mov
incl
dec
loopne
pop
lods
mov
adc
sub
mov
jmp
icebp
sbb
lods
pop
fiadds
int
jmp
or
adc
movsb
push
lods
movsl
mov
mov
and
ret
insl
adc
inc
scas
xchg
jns
jmp
into
cmc
imul
push
jo
and
sbb
repz
aad
adc
cmp
add
gs
pop
push
cmp
repz
lock
cli
dec
in
aam
insb
mov
int
mov
int
jg
pop
or
mov
pop
mov
add
insl
std
mov
pop
mov
movsl
jge
xchg
and
fsubs
pop
ror
cmc
hlt
push
in
rcll
mov
push
insl
into
lret
negb
aad
scas
mov
or
addr16
push
fldl
lods
mov
add
dec
push
out
jmp
int3
lock
or
cmp
push
add
pop
loope
repnz
test
dec
insb
mov
int
negl
jecxz
xchg
xchg
daa
mov
and
in
iret
cmp
fs
jmp
call
aam
out
cmp
mov
pop
aam
outsl
aad
push
cmpsl
mov
shlb
leave
in
or
xor
mov
shl
inc
adc
mov
andb
mov
test
mov
aam
sub
pushf
mov
lcall
inc
mov
jae
xchg
sub
add
jb
out
pop
mov
cli
int
cmp
mov
lcall
cmp
adc
lret
stos
mov
mov
fstps
js
sarb
cmp
or
stos
out
mov
outsl
lods
mov
xor
je
or
rcrl
pop
fs
push
loope
sarb
mov
sub
sahf
fcom
add
add
scas
cmp
aad
mov
je
in
cmp
or
mov
xchg
and
arpl
cmp
sti
or
adcl
cs
test
and
ret
push
dec
mov
in
out
and
cmp
aad
push
int
mov
fbstp
inc
and
adc
out
push
push
ja
call
sbb
js
dec
jo
sbbb
int
movsb
push
aam
stos
mov
aad
gs
gs
dec
jg
push
jo
mov
sub
jmp
je
fnstsw
fwait
xor
ror
test
cli
push
jae
cmp
mov
iret
push
sbb
dec
sbb
inc
pmaxsw
xor
cmp
aam
sbb
xchg
in
packsswb
mov
icebp
dec
mov
jmp
adc
scas
inc
mov
out
jmp
mov
mov
xchg
jae
inc
ss
jecxz
test
hlt
sub
dec
hlt
pop
mov
lahf
jmp
outsl
test
and
je
aas
push
std
insb
push
dec
pushf
mov
pop
mov
xor
dec
int
pop
lret
idiv
jle
daa
cwtl
cmp
rclb
lods
xchg
bnd
shl
sbb
jl
push
and
jge
xrelease
cmp
mov
push
daa
loop
hlt
subb
pop
int
and
mov
dec
test
fsts
add
out
ret
hlt
push
pop
jns
je
and
cmp
pop
data16
push
sahf
or
loope
cld
out
mov
adc
stos
xor
loope
scas
ja
adc
negb
pop
cmp
jnp
loop
push
mov
sahf
or
aam
jnp
inc
mov
mov
inc
dec
jmp
aad
cmp
punpckldq
mov
cmp
cmc
push
pop
scas
pop
xor
push
cmp
mov
jb
sti
xor
js
divb
and
jmp
not
mov
out
mov
add
adc
mov
dec
dec
iret
fldt
push
jg
testl
mov
and
idivl
pop
add
or
xchg
sahf
int
push
rcrl
push
mov
inc
push
and
cmp
xchg
fs
in
cwtl
aad
adc
jmp
mov
mov
jno
jle
and
js
xor
adc
or
cli
or
sub
ret
mov
xlat
xchg
lea
inc
and
pop
aam
cmpsb
cmpsb
rorl
rorb
mov
jge
adcl
jnp
cmp
imul
push
pop
icebp
cmp
and
data16
mov
mov
fistps
and
cld
je
inc
and
outsb
cmc
dec
xor
xchg
jp
aas
popa
cmp
cwtl
push
cwtl
push
addr16
imul
lea
jmp
daa
aaa
sti
pop
pop
pusha
adc
xor
xor
or
cmp
dec
lret
jbe
lret
inc
jns
mov
pop
fidivrs
xchg
cmpsb
or
cld
sub
dec
ljmp
arpl
repnz
mov
repz
paddd
adc
adc
mov
xor
jp
mov
fisubrl
test
jl
push
outsl
and
lcall
inc
int
ljmp
xor
clc
push
push
lcall
jmp
or
mov
jl
pop
mov
lahf
std
sbb
and
loopne
popa
add
sub
in
dec
mov
fildll
outsl
push
orl
fildll
lcall
js
lods
adc
dec
mov
test
stos
repz
call
sbb
xchg
cmc
leave
add
cmp
fcomps
aas
rolb
add
adc
arpl
xchg
inc
insb
cmc
data16
or
cwtl
sub
ficoms
iret
lods
nop
dec
xor
mov
or
dec
mov
mov
in
cmc
mov
int
sbb
ret
rcrb
ret
into
int
pusha
insb
stos
mov
cli
xor
in
inc
lcall
lahf
pusha
xchg
clc
mov
adc
gs
in
int3
imul
icebp
fldt
addb
into
int3
push
fcomp
adc
xor
mov
xor
bound
js
lods
out
xor
shll
daa
jnp
push
cmp
adc
adc
pop
into
aad
ss
lods
add
mov
cs
cmp
xor
dec
and
ror
push
rcll
iret
lods
sub
mov
scas
sub
aad
sub
jnp
dec
or
and
cmp
in
mov
xor
cmp
aad
stos
cmp
lods
fnstenv
add
lods
pop
xchg
add
push
sahf
jo
mov
pop
movsb
mov
cmpl
loop
insl
ds
mov
stos
push
sub
mov
test
cmpb
mov
mov
cld
lods
dec
xchg
and
lods
cld
inc
xchg
add
ds
dec
out
sahf
inc
ss
pop
into
jo
inc
cmp
add
or
sbb
xchg
notl
mov
out
sbb
xor
cs
les
cmp
into
aam
lods
and
aad
lret
shr
jo
mov
xchg
orb
mov
mov
and
rolb
mov
addr16
adc
mov
mov
test
mov
mov
adc
clc
mov
xor
push
clc
in
sbb
jbe
lods
xor
mov
mov
pop
icebp
mov
ret
xchg
jmp
fdivl
sbb
out
test
paddsw
cli
test
or
in
ja
cmp
fwait
ret
or
aad
dec
cmp
rclb
sub
jo
sub
ss
out
adc
cmp
cmp
sti
push
loope
mov
mov
scas
sub
inc
stos
pop
cltd
pusha
pmullw
sbb
fcoms
imulb
gs
mov
jl
popa
or
mov
push
fmuls
aad
mov
gs
jmp
cmpsl
enter
xor
shr
or
ss
adc
push
outsl
test
andb
push
or
aam
xchg
dec
stc
sub
jl
cmp
test
outsb
call
xlat
clc
pop
mov
mov
std
out
mov
outsb
test
jno
add
mov
dec
xchg
into
sub
ret
jae
stc
adc
push
sbb
dec
inc
daa
pop
cmp
iret
push
push
xchg
stos
cmp
shrb
ret
jmp
sti
push
pop
aad
in
insb
scas
sub
mov
xchg
sub
push
outsl
insb
sbb
pop
nop
dec
mov
mov
add
shrl
lods
cs
aaa
jno
push
mov
xchg
mov
mulb
ror
insl
cltd
adc
lods
lock
xor
add
and
jl
popa
in
mov
hlt
call
enter
test
pop
push
popa
inc
add
sarl
mov
sub
and
imul
cmp
in
fnstsw
lret
loopne
push
das
xchg
dec
dec
js
jg
cli
push
push
inc
int3
mov
jb
xor
icebp
and
xor
dec
mov
mov
dec
into
and
scas
das
test
or
aam
jmp
aad
xorl
imul
and
fildll
cmc
test
adc
add
aad
fistpll
cltd
js
ljmp
punpcklbw
in
mov
jno
dec
xchg
pop
mov
xor
xchg
mov
call
rcl
xchg
xchg
mov
stc
mov
jmp
xchg
xchg
xchg
pop
pushf
or
push
xor
mov
fnsave
int
jbe
or
and
loopne
and
cmp
adc
in
js
divl
aad
cmp
pop
cld
into
add
push
jns
inc
adc
jg
repnz
nop
mov
and
call
test
xor
inc
and
lods
sbb
cmp
daa
call
push
int
push
sub
cmpsb
mov
sub
add
mov
and
movsl
into
lods
jg
xchg
jb
shl
add
fwait
bound
scas
cmp
fsubrs
int3
loope
fs
in
das
in
sub
mov
clc
add
push
or
sbb
test
data16
pop
mov
int
cwtl
cmp
inc
lahf
mov
sti
adc
sub
pop
out
int
dec
aad
push
sbb
jo
shrl
push
mov
xchg
cmp
adc
push
fwait
dec
cld
sti
loop
xlat
sub
shufps
outsl
xchg
cli
mov
fsubrs
jl
mov
clc
inc
mov
jo
add
jae
adc
dec
pop
aad
loopne
call
add
std
cmc
movsl
dec
jecxz
fidivrl
pop
sub
testb
or
fsubrs
and
xor
popa
rorl
aad
add
push
jae
sti
push
pop
in
jecxz
test
sarl
mov
mov
lods
aad
arpl
pop
xor
int
mov
sbb
cld
jg
add
pop
jnp
mov
stc
push
push
pop
in
orl
fsubs
in
scas
mov
jp
decl
mov
push
loope
sarb
mov
push
in
aam
rclb
mov
jo
xlat
push
xchg
movsb
and
fiaddl
fldcw
lret
lcall
fwait
xchg
mov
lds
jmp
dec
pop
cmp
pop
aad
ret
popa
sbb
in
or
pop
push
and
iret
cmp
or
add
test
cmpsb
out
or
mov
mov
sub
aad
cmp
add
fbld
aam
mov
push
mov
outsl
andl
addb
insb
stos
test
cmp
popa
xor
and
push
sarl
aad
jecxz
inc
add
out
inc
xchg
or
xor
jno
out
adc
aam
xchg
orb
push
sbb
shrl
in
int3
sub
push
sub
cmp
nop
adc
lods
and
fistps
dec
dec
test
adc
jmp
pop
int3
mov
mov
fcomi
aad
or
pop
adc
xchg
jmp
xor
popa
test
push
clc
test
sub
cmp
push
dec
sub
pop
or
mov
cltd
sbb
jno
in
pop
movsb
out
cmp
inc
cmp
inc
add
int
out
mov
and
stc
mov
pop
sub
jae
or
xchg
mov
xchg
test
mov
jo
cmpsb
loopne
lock
push
ja
ret
data16
out
hlt
aad
imul
and
mov
pushf
xlat
cmc
cmp
jge
or
push
sbb
out
push
xchg
push
popf
push
add
ret
adc
push
iret
out
ret
aas
jnp
test
add
pop
mov
in
mov
inc
xchg
mov
add
gs
rcll
adc
testl
inc
jp
stc
outsl
bound
dec
and
jl
ja
xsave
xchg
dec
repz
push
jnp
push
orl
aad
cmp
xor
cwtl
mov
mov
iret
cmc
nop
add
popa
sbb
idiv
inc
mov
popa
test
pop
add
lods
mov
pop
stc
cli
mov
sub
or
mov
or
pop
jmp
dec
add
popa
repz
ret
ret
aas
mov
cmc
inc
xor
loop
or
imul
dec
jmp
dec
and
cwtl
imul
push
scas
cmp
or
dec
mov
into
inc
xchg
shl
sub
and
adc
and
mov
dec
in
xchg
std
cmp
sub
pop
dec
loope
leave
movsl
lcall
cmpsb
lods
jae
mov
cmpsl
aad
push
dec
cmp
je
mov
sub
icebp
xchg
sti
xchg
arpl
dec
test
pop
and
jae
xor
xchg
test
mov
cmc
mov
pop
mov
stos
aad
cmp
test
or
jg
xchg
jmp
add
mov
test
imul
lock
and
cmp
mov
dec
mov
sti
lret
push
mov
lods
shlb
jp
jmp
aaa
add
jl
pop
aaa
inc
ror
sbb
dec
in
outsb
stos
pushl
call
jmp
inc
or
inc
lcall
add
add
cmc
sub
mov
cltd
pop
mov
mov
add
aad
out
and
cmp
xchg
or
pop
cmpsb
adc
pop
inc
int
stos
cli
dec
sub
jbe
push
jns
adc
fwait
rorl
or
pop
mov
seto
inc
and
xor
in
js
bound
inc
sub
add
adc
pop
dec
ljmp
out
leave
punpckldq
insl
cs
leave
cmp
sti
xchg
push
mov
sbb
iret
iret
icebp
cmpsl
xor
fcoms
popa
lods
push
cmpl
cli
adc
pop
int
fimuls
out
sub
jge
aam
sub
jp
imul
ja
out
das
aad
mov
inc
xchg
les
les
push
in
mov
aaa
ja
sti
or
rcr
xchg
mov
dec
ja
xchg
fildll
call
fisubs
int
aad
fisttpl
dec
sub
lds
xchg
pop
dec
jns
addr16
sub
sbb
dec
mov
repnz
leave
push
aad
lock
add
mov
scas
ljmp
hlt
divb
add
xor
scas
aad
mov
inc
push
jl
fstl
dec
inc
mov
sub
fcmovnu
dec
stos
push
sub
inc
jno
or
mov
jmp
sbb
popf
idivb
cmc
jmp
mov
and
mov
aaa
aad
xlat
pop
icebp
mov
enter
push
les
mul
stc
or
pushf
cs
push
lahf
lahf
or
les
ljmp
push
js
scas
clc
daa
repnz
daa
cmc
std
stos
inc
je
xchg
mov
push
mov
hlt
xor
and
lock
loop
fsubrl
pop
xor
jmp
inc
je
leave
popf
jnp
into
xchg
sub
outsl
movsl
pushf
test
movsb
xchg
leave
push
push
xor
jne
jb
stos
or
add
mov
dec
repnz
sti
sub
or
cmc
mov
dec
mov
lods
movsb
cmp
outsl
aad
mov
mov
sti
aad
into
push
mov
pop
aad
out
loop
loope
lods
imulb
lahf
sti
ret
mov
bound
add
enter
addr16
lods
pop
dec
leave
mov
lcall
dec
iret
push
sub
popa
addr16
or
pop
int
xchg
imul
pusha
cmp
jb
pop
sub
dec
cli
mov
jmp
add
ja
jmp
setne
pusha
pop
xor
inc
jns
mov
fdivrp
xchg
test
aaa
inc
push
bound
call
xor
cmp
push
out
push
bound
jo
jecxz
into
jmp
xor
jb
fs
xorl
loop
or
lea
cmp
jb
mov
mov
dec
jno
dec
imul
sahf
mov
lcall
insl
insl
add
push
inc
mov
ret
jns
sahf
xchg
push
xchg
rcll
push
cmp
lods
dec
lods
adc
nop
dec
and
sub
clc
sbb
cwtl
pop
mov
jle
les
int
stos
pop
dec
dec
xor
fnstcw
mov
push
pop
pop
and
mov
imull
popa
loope
jge
subb
lahf
int3
push
mov
jp
xor
test
js
sbb
shr
cwtl
sahf
cmp
adc
es
xchg
inc
jp
int3
int3
jbe
testb
in
mov
or
sub
aad
insb
add
xchg
push
cli
xchg
push
xor
xor
jne
cmc
pop
jnp
jp
rclb
testl
jle
imul
dec
leave
xchg
jecxz
xchg
push
mov
mov
icebp
mov
add
sub
hlt
sbbb
push
std
mov
push
mov
pop
icebp
mov
outsb
les
mov
push
mov
fistl
inc
adc
jge
or
in
jg
pop
fcoml
in
gs
fisubs
sahf
push
xchg
add
sub
pusha
movsl
xor
pop
out
jge
repz
jl
test
adc
cli
mov
mov
out
lock
mov
addr16
inc
push
mov
mov
dec
sbb
shll
mov
xchg
jno
dec
add
xchg
sahf
iret
cmc
mov
inc
lock
adc
mov
mov
add
fmul
imul
xchg
jae
cmp
popa
fldt
fistpll
cmc
enter
jbe
mov
add
xorb
mov
ja
cmp
cmp
mov
int3
cmc
sub
cltd
out
add
pusha
je
add
pop
idiv
call
mov
std
jl
cwtl
insb
inc
cmp
arpl
je
in
fadds
les
jne
pop
xchg
jno
adc
sub
pop
xchg
push
arpl
fdivs
pop
insb
and
add
jnp
stc
subl
mov
jmp
aam
push
out
cmc
dec
jl
adc
ret
push
outsb
jmp
lcall
scas
or
loope
jg
and
fcom
in
sti
sti
mov
stos
out
xchg
sbb
add
mov
sub
mov
int
in
mov
flds
or
xor
pop
push
adc
js
dec
loopne
push
inc
cmp
cmpsb
add
xor
loop
dec
inc
and
sub
pop
mov
lds
stc
pop
adc
int3
dec
add
insl
sbb
sub
add
and
es
adc
lcall
add
xchg
xchg
sub
std
pushf
mov
xchg
mov
sub
or
out
movsl
and
xchg
jb
orb
xor
iret
cmp
clc
aad
popa
xor
jno
fdivrp
pop
push
test
xchg
mov
mov
cltd
or
int
pop
mov
in
dec
jnp
aas
push
scas
push
pop
pop
je
jg
movsl
mov
aad
movsb
push
cmp
popa
div
cmc
lcall
mov
xchg
outsb
pop
mov
nop
jmp
je
cmp
out
cmc
and
xchg
and
xor
mov
loop
sub
mov
sbb
lahf
or
cmp
cmp
lock
cmp
cmp
adcb
cmp
dec
xorl
sbb
fcoms
sub
mov
jle
repz
int3
aad
clc
push
pop
mov
add
cwtl
jne
cmp
test
in
push
inc
lods
sub
scas
sub
aad
lods
hlt
movsb
clc
mov
sub
lds
out
cmp
test
cmp
and
stc
or
push
pop
dec
xchg
andl
push
cmp
bswap
fimuls
out
fucomi
push
cmc
cmpsl
jne
jnp
into
add
xchg
jle
jl
mov
stos
lods
cmp
insb
jne
lcall
cmc
pop
mov
mul
test
mov
mov
xchg
mov
dec
in
pusha
fstpl
push
cmp
enter
mov
lock
pop
mov
push
cmp
inc
mov
sub
jecxz
jp
orb
dec
je
outsl
js
mov
repz
add
pop
dec
in
lahf
loopnew
loope
pusha
and
into
nop
gs
push
mov
xchg
cmp
or
xchg
fldenv
mull
or
jmp
shl
mov
lcall
cmc
dec
unpckhps
xchg
outsb
mov
and
cld
adc
cmp
adc
xchg
std
aad
cltd
lret
test
cli
push
mov
sub
mov
xchg
push
out
insb
cmp
cmp
and
or
inc
jae
lret
mov
sbb
mov
test
fldenv
ljmp
or
lock
inc
jno
mov
jecxz
sub
hlt
insb
cmpsl
jge
mull
xor
cmp
push
inc
pop
dec
arpl
fwait
js
dec
jp
test
fisttpl
mov
popa
sub
aam
sbb
jo
dec
jmp
sub
aam
jle
pusha
cmp
lods
push
les
or
int
push
sub
xor
cmp
adc
adc
dec
sub
lahf
aam
inc
mov
jle
and
lcall
jmp
push
inc
or
mov
mov
stc
icebp
or
mov
mov
jl
pop
pusha
or
and
mov
fnsave
xabort
stos
lcall
add
cmp
and
xorl
pop
xor
into
and
xchg
xchg
push
sahf
inc
loopnew
cmpsl
inc
fcmovnu
xchg
shrl
stos
push
rorl
lret
sub
out
stc
dec
push
addr16
mov
push
cmpsb
lea
inc
inc
imul
dec
hlt
lods
mov
sub
in
sbb
pusha
imul
xor
int3
pmaddwd
cwtl
fcomp
aas
push
push
add
ss
outsb
push
jo
pop
cmp
add
adc
emms
sub
test
ret
test
outsb
notb
loop
aad
nop
iret
mov
cmp
xor
pusha
mov
int
outsb
inc
nop
aad
jmp
xchg
test
dec
popa
stos
fxch
addr16
decl
jmp
dec
loope
je
cmp
push
int
sub
push
pop
cmp
xchg
loope
dec
sahf
bnd
xchg
xchg
lods
dec
out
push
sti
test
leave
mov
inc
jmp
mov
push
int
loope
mov
push
inc
mov
shlb
jecxz
insb
fldl
pop
cmp
xor
sub
adcl
mov
dec
outsl
dec
cmpsl
bnd
jle
les
push
dec
pop
movsb
jecxz
or
into
xchg
or
xchg
mov
pop
jg
dec
cli
sti
pusha
adc
push
imul
das
int
fs
out
aad
jl
mov
mov
subb
push
dec
xchg
dec
dec
push
inc
out
stos
in
pop
add
pusha
in
cmp
jmp
rcr
rcrb
mov
gs
addb
jmp
push
int
cmp
add
idiv
loop
inc
push
xchg
outsl
pop
movl
aad
jb
mov
aas
adc
mov
add
xchg
jecxz
enter
sub
es
dec
hlt
out
mov
test
arpl
iret
std
fisttpl
mov
xchg
mov
imul
push
mov
leave
cmp
pop
jnp
jp
and
or
out
cmp
mov
pop
adc
cld
shrb
mov
dec
cmpsl
add
in
adc
sahf
dec
lods
das
adc
add
xlat
lret
xor
rorb
pop
pop
xchg
ss
mov
cmpb
bound
and
cli
push
mov
sbb
mov
or
jp
andb
sbb
ss
or
jmp
mov
jno
pop
cwtl
mov
dec
scas
xchg
out
aad
int
cmp
or
push
mov
imul
negl
js
in
or
jecxz
cli
repz
int
aad
mov
mov
xor
data16
int3
pushf
or
push
daa
jmp
loope
imul
mov
pop
mov
sahf
scas
fwait
and
pop
shl
mul
nop
outsl
add
mov
lods
and
aaa
mov
clc
movl
test
xchg
add
out
mov
sti
aad
xchg
in
cmp
movsl
push
dec
or
inc
jnp
sti
adc
inc
dec
cs
cmp
popf
call
popa
gs
and
mov
and
push
xchg
iret
sub
test
ljmp
mov
test
sbb
or
popa
push
jmp
sub
popf
mov
sbb
or
mov
sub
dec
orl
or
in
movsl
push
int
pop
fwait
lea
sahf
scas
cmp
push
les
cmp
test
push
cmc
mov
jb
and
xchg
ror
dec
jnp
pop
cltd
adc
daa
imulb
mov
movsl
stos
stos
mov
gs
sbb
dec
sahf
sub
mov
cmp
dec
cs
lea
das
xor
jns
mov
dec
leave
jle
sbb
push
xor
cmp
xchg
into
pop
push
sbb
jns
ljmp
test
dec
mov
ja
dec
and
sbb
push
pop
sbb
js
inc
cltd
inc
movsb
fnstenv
push
xchg
loopne
insb
pop
in
aam
push
sub
dec
loopne
lods
cld
jmp
xchg
jno
and
add
not
inc
cmp
and
mov
data16
in
insl
xor
lds
mov
in
sbb
cmp
push
adc
lods
xor
cmpsl
pusha
imul
push
lret
dec
sbb
sub
cmp
mov
notb
push
int
das
jmp
mov
dec
xor
sub
xchg
jne
dec
xchg
andl
sub
cmp
test
in
push
xor
stos
mov
mov
fldl
fbstp
out
repz
dec
stos
jno
aaa
in
aad
jle
ds
repz
pop
xchg
jo
stos
jb
cmpsb
xlat
je
aam
xchg
jns
out
cld
ret
cmp
aad
out
outsb
ds
xchg
ja
fidivl
punpcklwd
jg
bound
cmp
pusha
addr16
into
xchg
jmp
enter
fwait
mov
outsl
adcb
std
jne
es
sbb
jg
mov
mov
lods
lods
sti
adc
pop
jae
dec
addl
pop
aas
fdivrs
pop
xor
int
arpl
xor
sbb
sahf
xchg
outsb
cmp
jae
test
les
andps
pop
call
iret
push
in
testb
mov
dec
or
lds
push
mov
loop
mov
rclb
xchg
mov
std
jecxz
jno
leave
mov
add
push
jmp
sbb
out
leave
or
cli
insb
daa
xor
pop
divl
not
repz
filds
sbb
sti
xchg
add
add
mov
mov
sar
push
call
dec
cmc
cld
xchg
fistps
sti
cmc
xchg
push
or
and
ror
mov
mov
jb
popa
adc
jp
arpl
mov
scas
mov
mov
leave
lods
testb
iret
lods
int
pminub
cmp
sete
and
lds
add
pusha
dec
and
sbb
dec
and
xlat
mov
loop
into
movsl
or
sbb
outsl
and
fistpll
outsb
mov
jmp
arpl
cld
inc
in
ffree
xchg
jo
mov
int
ret
cmc
xor
or
scas
dec
cmp
in
mov
add
mov
rorl
mov
jge
and
aad
add
ljmp
jae
insl
mov
add
dec
scas
push
xchg
mov
inc
outsb
movsb
sbb
mov
and
aad
jnp
daa
mov
pop
jle
mov
inc
mov
mov
mov
loope
inc
pushf
push
lret
outsl
pusha
in
decl
xchg
mov
lahf
xor
add
xchg
mov
pop
cld
jl
fbld
sub
ret
insb
add
push
mov
leave
popa
js
mov
sbb
push
stos
int
mov
mov
jle
jbe
lea
jnp
popa
xor
push
lods
xor
int
js
cmp
mov
icebp
cwtl
test
mov
mov
adc
repz
push
pop
aad
mov
adc
in
fwait
cmp
xchg
ret
push
mov
push
cmp
inc
cmp
xchg
inc
arpl
jnp
mov
pop
adc
pop
rcll
ret
cmp
popf
fsubrs
mov
imul
xlat
outsb
and
xorl
push
out
xchg
ss
in
push
lahf
rorb
pop
cmpl
das
inc
and
notl
mov
or
jp
es
mov
clc
rorb
movsb
fwait
mov
call
push
leave
mov
sbb
cwtl
divb
xor
imulb
out
and
cli
add
idiv
jo
cmp
push
jmp
into
or
scas
cltd
in
add
aas
mov
jg
dec
or
imul
or
js
xchg
imul
cmp
lds
mov
fstp
lods
ja
lock
fstl
cmp
inc
push
cmp
jmp
enter
sub
and
jl
pmullw
pop
int3
inc
insl
call
in
scas
loope
int
xchg
rcrb
cltd
out
push
out
sub
lds
sbb
call
pop
lret
cli
mov
jge
fistpll
sahf
int3
ljmp
push
dec
imul
stos
cmc
rcrb
or
add
lods
jmp
stc
ja
add
cmp
arpl
aad
mov
add
je
xor
adc
inc
jae
jb
inc
outsb
sub
sbb
std
pop
inc
lock
xchg
and
popf
push
pop
sub
dec
cmp
adc
aam
sahf
stos
xchg
int
repnz
xor
pop
aaa
dec
out
push
or
in
cmp
mov
dec
pushf
sub
test
xor
inc
inc
dec
data16
cmp
mov
push
nop
stos
adc
les
in
pop
aad
adc
cmpsb
cli
nop
xchg
jge
out
js
loope
sbb
mov
aam
rorl
jb
rorb
in
repnz
cmpl
dec
rcll
push
nop
sbb
sub
orb
sbb
mov
and
push
sbb
or
test
jp
or
sbb
aam
sub
xorl
iret
popf
negl
out
or
jmp
into
add
ror
mov
rcrb
lahf
push
aad
push
fiadds
mov
and
cmpsb
fiadds
pop
sub
sub
push
dec
out
pop
jmp
jbe
std
dec
jl
rcl
jo
or
mov
push
in
jnp
dec
add
loope
lock
sti
push
fs
addl
push
or
outsl
cmc
add
icebp
xchg
ds
dec
stos
mov
jp
pcmpeqd
pusha
mov
rcl
or
fwait
jb
sbb
orb
dec
fcomps
push
inc
dec
dec
sbb
subl
arpl
push
stc
mov
cld
add
jmp
mov
xchg
outsl
jb
inc
push
or
dec
repz
in
imul
mov
test
or
mov
dec
psubusb
push
test
xlat
sbb
adc
pop
dec
scas
jnp
shlb
xor
ret
sub
ficoms
or
jg
in
sub
dec
insb
call
dec
lods
add
pop
dec
jno,pt
adc
pop
push
shrl
lods
call
out
xchg
js
mov
lock
mov
cmp
in
add
push
mov
mov
jae
dec
nop
ss
arpl
lahf
add
xchg
mov
xor
xor
lods
sub
sti
lret
push
test
pop
xor
outsb
adc
shr
add
cmp
mov
fistps
es
cld
push
pop
gs
or
loope
cli
aaa
nop
shl
adc
or
dec
int
jae
outsl
cli
mov
sub
add
xor
sub
mov
mov
ret
icebp
cmc
xchg
dec
and
in
dec
dec
pop
xchg
push
adc
stos
lcall
pop
testl
pop
in
scas
mov
or
or
dec
xor
loopne
dec
mov
xchg
xor
pop
cmpsb
and
fwait
xchg
lods
adcl
dec
dec
mov
sti
popl
jb
cmp
xchg
scas
adc
cmp
cmp
test
add
enter
xchg
mov
int
xor
pop
lea
mov
add
add
pushf
pop
jmp
stos
fistps
mov
sub
pusha
cmp
jmp
aad
sub
pop
xchg
mov
push
push
js
fs
mov
leave
jo
call
mov
repnz
cli
loopne
testl
mov
xchg
mov
repz
sub
mov
call
nop
mov
mov
and
jp
jle
jo
push
stc
add
arpl
cmp
dec
jp
aad
add
lcall
fcmovu
movl
cmp
dec
sti
je
lcall
into
movsb
aas
jg
in
aad
loopne
xchg
inc
adc
or
inc
out
dec
popa
fucom
fnstsw
push
ds
push
imul
aad
sbb
lods
leave
aam
push
aaa
pop
jp
scas
or
popf
cmp
xchg
leave
shl
push
loope
jmp
fiadds
cld
inc
push
dec
inc
lods
mov
dec
addr16
or
mov
loopne
into
psrlw
jl
sarb
sbb
out
fwait
out
dec
xchg
mov
clc
aaa
push
inc
or
fldl
mov
pusha
mov
and
sub
popa
sub
sub
adc
fcomp
mov
in
sub
mov
pop
mov
adc
add
daa
stc
popf
cmc
jge
inc
loopne
mov
cmp
cwtl
and
int
sarb
aas
cld
in
jl
push
inc
jl
int
push
or
mov
pop
dec
adc
mov
dec
int
sbb
fmull
fisubl
push
inc
pop
jmp
stos
xchg
es
push
mov
bound
add
add
cmpsl
push
sti
or
fdivrs
lods
or
out
pop
notl
push
fnstsw
adc
xchg
xchg
out
push
cmc
jne
test
sub
lcall
popa
pop
jmp
pop
test
mov
lret
jmp
push
push
popf
inc
outsl
sub
push
rolb
mov
xor
cltd
mov
dec
sub
push
pushf
pop
sub
push
scas
pop
jns
add
icebp
dec
stc
jmp
imul
aam
cltd
mov
add
push
xchg
or
push
js
jbe
pop
pusha
sti
dec
mov
aad
popf
arpl
pop
inc
jp
nop
and
xor
adc
mov
xchg
sbb
jle
ljmp
mov
jno
mov
jecxz
pop
dec
mov
pop
nop
mov
imul
aad
movsb
and
dec
stos
rcr
or
push
mov
int
cmp
or
add
sub
cmp
inc
sub
push
cmp
xchg
xchg
lret
xchg
cs
data16
int
sub
cmp
sub
push
rcrb
xchg
jecxz
test
nop
dec
sti
aad
inc
xor
push
pcmpeqd
sub
jl
in
aad
stos
out
test
mov
xchg
lods
mov
cld
jnp
aad
movsb
dec
aad
or
mul
into
add
aad
pop
mov
xlat
rorl
repz
cld
fucomip
fsubrp
push
pcmpeqw
or
jmp
lds
push
in
std
hlt
mov
sbb
insb
je
push
cmp
shr
inc
int
pop
call
sub
loop
int
mov
jg
mov
and
loope
psubd
sub
dec
pop
rolb
sti
cmp
movsb
xchg
jge
mov
and
js
jecxz
jp
lcall
adc
cmp
push
cli
sub
mov
inc
in
imul
add
popa
pop
out
sub
mov
mov
sbb
clc
sub
outsb
int3
mov
sub
icebp
jge
xchg
pusha
and
int3
pop
push
in
pop
mov
dec
adc
dec
lods
and
inc
and
subb
mull
jge
pop
loopne
gs
push
cmc
mov
xchg
xchg
xor
ficoms
popf
lret
cltd
sarl
pop
std
loop
mov
pop
dec
lds
pop
cmc
adc
scas
and
lret
ficoms
xlat
loope
shlb
jge
jno
pmaddwd
mov
mov
xor
addr16
mov
movsl
dec
mov
test
jo
aaa
pop
loope
or
test
aad
add
fcomi
add
loopne
out
aam
imul
insl
aad
pusha
out
jp
stc
jns
stc
or
mov
iret
ja
clc
stc
loope
sbb
movl
das
xchg
arpl
dec
scas
jns
sub
fistl
add
aad
adc
or
push
stos
xor
jno
sti
cli
mov
cld
ror
data16
dec
jnp
push
shl
decb
dec
jnp
aam
aad
push
pop
shlb
jmp
sub
fisttpl
xchg
xor
lds
in
xchg
loopne
jl
jnp
fcomps
pop
adc
movl
loope
jmp
adc
mov
ds
psraw
dec
cmp
mov
xor
loop
out
inc
sbb
pop
push
sub
push
packssdw
stc
lahf
ret
fwait
and
loope
mov
testb
mov
adc
mov
bound
inc
xchg
pusha
testl
scas
sbb
stc
jl
cmc
cld
arpl
cli
daa
cs
dec
jbe
rclb
leave
int
in
setg
cmp
outsb
icebp
bound
push
jne
pop
lcall
lds
push
or
daa
out
xor
xlat
iret
push
xchg
cli
in
mov
ss
add
xadd
and
mov
jmp
imul
or
stos
push
push
sbbl
sub
mov
nop
jg
pop
mov
jge
mov
jbe
loope
add
rcll
inc
lea
roll
or
or
dec
stc
xchg
xchg
test
xchg
out
sbb
mov
inc
or
rol
repnz
aas
adc
insl
jmp
daa
and
repnz
cmpsb
add
inc
leave
lret
jo
dec
cmc
stos
push
sbb
add
adc
sub
or
fstps
popa
repz
outsl
xorl
jnp
add
add
xor
and
sti
sbb
cld
push
ja
add
fbld
dec
mov
std
ss
decb
push
cmc
sub
test
add
mov
das
fldl
xchg
mov
xchg
rcrl
inc
sahf
jmp
mov
adc
add
inc
adc
int
or
lds
mov
popa
pop
ret
bound
imul
push
ds
mov
fs
andl
sti
xchg
mull
shlb
cmp
test
or
sbb
movsb
aam
dec
jns
pushf
dec
int3
adc
mov
ljmp
lods
xlat
enter
push
fwait
shr
fisubs
mov
dec
call
jecxz
cmc
or
mov
fisttps
not
add
scas
jmp
pop
xor
aad
mov
mov
out
das
hlt
sbb
jnp
mov
repz
aaa
pop
je
sti
orb
scas
cmp
popf
pushf
xor
jo
ficomps
pop
mov
xchg
dec
xchg
dec
sub
out
out
mov
dec
test
dec
or
add
pop
cmp
pop
mov
or
cmp
jle
nop
lock
cs
mov
adc
stos
xor
les
and
xor
lods
inc
movsl
and
xlat
add
cld
fstpl
ja
or
bound
dec
cmp
cmpsl
mov
fidivs
jmp
inc
shrl
lahf
lods
in
int
jnp
adc
aas
mov
int3
in
xor
stos
mov
pop
jl
mov
adc
sbb
lcall
pop
or
repz
mov
and
mov
cld
mov
neg
or
or
loopne
aam
lea
cld
or
mov
pop
push
jmp
leave
jg
cmp
cmp
sbb
pop
pop
add
mov
push
xor
push
cmp
repnz
into
addr16
or
lods
xchg
sti
cmp
pusha
jmp
jg
xchg
mov
call
pushl
in
lock
mov
push
sub
stos
mov
sub
cmpsb
imulb
aad
rcr
testl
push
xchg
lea
pop
cltd
stos
jae
cmp
loope
popf
notl
jecxz
fcmovnbe
xlat
ret
loop
js
mov
fdivrl
movsb
enter
cmp
xlat
inc
decl
test
dec
jbe
out
sbb
fcom
mov
xor
sub
jg
fisttps
mov
adc
inc
add
inc
jl
adc
fbstp
mov
pop
imul
in
test
or
or
mov
jecxz
pop
inc
rorl
hlt
cwtl
push
sarb
in
mov
mov
inc
mov
jg
shlb
mov
loope
inc
mov
out
sbb
repnz
xchg
inc
push
dec
mov
lret
xchg
adc
orb
rorl
cmpsb
aad
test
sar
mov
out
enter
ret
cli
int
sbb
cmp
lock
cmp
jl
iret
pop
std
xchg
iret
fwait
xchg
push
lods
jo
dec
aaa
push
xchg
mov
repnz
lods
cmp
adc
int3
xor
in
sub
outsl
subps
lcall
adc
and
pop
clc
loop
mov
push
push
push
cmpsb
sub
or
stc
sahf
std
leave
and
addr16
dec
mov
xchg
in
lock
push
aad
and
xor
mov
dec
xchg
mov
lret
mov
lcall
dec
stos
cmp
pop
mov
shrb
push
daa
xchg
inc
cld
outsl
std
xlat
sbb
push
cmc
fnsave
and
cmp
scas
lret
lret
push
push
sarb
add
scas
jl
aad
das
or
or
pop
push
and
adc
test
dec
fdivs
xor
jb
pop
inc
xlat
js
cmp
pusha
adc
lahf
insb
mov
inc
xchg
adc
inc
jmp
or
inc
insl
movnti
aad
xor
xor
xlat
add
adc
dec
rolb
inc
out
fsubs
aas
cmp
jl
mov
jecxz
sub
xlat
xchg
xchg
xor
scas
cmp
inc
popa
inc
scas
les
int3
inc
mov
cmp
adcb
sub
mov
dec
sbb
shl
adc
jle
cmp
adc
add
fnstsw
or
jns
mov
aas
mov
sbb
xchg
adc
aad
cs
mov
roll
xlat
jb
inc
mov
xchg
loope
xchg
shlb
adc
outsl
leave
adc
rorb
pusha
pop
mov
or
jecxz
cltd
inc
lds
sub
xchg
push
mov
fisttps
clc
addr16
xchg
insb
out
or
and
push
xchg
cmp
loopne
mov
in
ret
and
bound
lods
call
testb
insl
int
iret
xchg
lcall
pop
in
push
add
pop
ss
popa
movsb
iret
ja
in
xchg
loope
incl
test
pusha
cld
jp
aad
pop
push
mov
mov
fs
adc
mov
dec
add
cmp
pop
loopne
and
adc
and
std
dec
push
les
inc
fwait
in
cmp
jb
cli
mov
mov
push
out
std
and
ss
popf
divb
movsl
mov
stc
aad
aad
btc
orl
cmp
cli
xchg
inc
adc
int
mov
aam
dec
push
mov
mov
imul
dec
cmp
inc
dec
jl
jle
scas
lret
xchg
movsb
stc
lret
sub
inc
lods
aad
pop
inc
sub
clc
add
push
jmp
test
dec
div
int
int
mov
dec
add
ds
icebp
dec
in
lods
test
subb
jmp
jnp
outsl
cmp
and
jbe
sbb
xchg
lea
mov
mov
aad
test
and
push
fists
dec
fistps
fwait
int
adc
push
push
add
bound
shll
jecxz
or
mov
dec
shll
fcomi
xor
mov
shll
sub
out
lfs
cltd
les
dec
lahf
dec
test
lods
movsb
aam
in
aas
pop
cwtl
jno
js
repnz
cwtl
sbb
pop
dec
lods
clc
mov
jge
push
sbb
xchg
xchg
mov
leave
inc
mov
popa
pop
js
cmpsb
rclb
daa
iret
pop
and
cmp
mov
dec
int
fmul
and
fldcw
ljmp
mov
adc
pop
push
bound
mov
cmc
fists
add
xchg
popf
mov
mov
xorl
dec
notl
inc
mov
mov
cmp
or
outsl
jns
and
and
lcall
pop
jg
cmp
pop
aad
lds
paddsb
push
mov
out
test
outsl
int
cli
psrld
or
js
lahf
cmp
scas
xchg
jl
je
xchg
imul
out
adc
pop
sub
mov
cmp
test
call
into
popf
sub
adc
mov
push
cmp
add
in
push
les
jmp
andb
out
lret
testb
test
jp
outsb
mov
xchg
xor
cmpsb
mov
add
xchg
lahf
inc
gs
dec
push
arpl
imul
xchg
outsl
repnz
and
mov
cli
and
and
or
lds
and
jecxz
xor
jbe
sub
in
imul
or
xor
cmp
inc
mov
nop
lods
mov
dec
add
xchg
ss
int3
and
sbb
jns
test
push
rolb
dec
je
inc
jnp
imul
xchg
push
jl
or
pop
es
mov
push
dec
cmpsl
adc
mov
or
pop
cmc
int
add
cld
xor
inc
sub
scas
xchg
sarl
iret
lods
gs
mov
sahf
and
adc
lahf
dec
shl
jo
mov
adc
mov
jns
outsl
pmullw
fcompl
in
push
call
mov
pusha
les
cmp
adc
and
lds
lea
lahf
jmp
add
add
mov
lock
mov
mov
jae
jmp
dec
xchg
adc
incl
arpl
mov
in
xchg
pop
jmp
outsl
pop
xlat
mov
mov
cli
loopne
scas
call
stos
or
clc
mov
cli
dec
test
cmpsb
jnp
decl
subb
add
xor
bswap
aad
loope
push
sbb
pop
movl
add
imul
push
add
mov
pop
neg
ds
lods
jmp
enter
cli
xchg
push
jb
lahf
push
nop
movb
outsl
mov
jmp
ljmp
std
xor
push
scas
fbld
shrl
popf
mov
sbb
jne
aad
jl
cmp
les
aad
dec
inc
and
push
fsubrp
adc
adc
cmc
pop
cmpsb
out
dec
fdivrs
stos
lret
stos
addr16
aad
imul
out
cmc
dec
xor
and
xchg
aas
cmpsb
pop
imul
ss
mov
push
push
jge
aaa
sbb
jg
xor
mov
daa
and
mov
mov
loopne
mov
sbb
xchg
sub
mov
cmp
js
add
or
or
mov
pushf
push
das
mov
mov
add
lret
pop
jle
xchg
fists
stc
pushl
mov
inc
jmp
in
mov
pop
adc
jmp
popl
pop
mov
xor
sbb
xorb
ds
mov
iret
adc
lods
cwtl
pop
dec
test
mov
add
sti
xor
push
add
fs
fldenv
cmp
sub
or
push
dec
cmpsl
mov
mov
jecxz
sub
and
push
pop
lahf
in
int
mov
fsubl
jmp
mov
xor
sbb
into
adc
ja
xchg
cmc
xor
popa
cmp
scas
push
xchg
into
shrb
shlb
fwait
jbe
sahf
ds
push
aad
push
arpl
dec
xchg
mov
dec
xor
sbb
add
je
dec
inc
outsb
popa
addr16
cmp
dec
aad
xchg
lahf
mov
les
cmp
je
or
pop
sub
mov
sbb
pop
sbb
out
jle
sub
pop
mov
add
in
sub
inc
les
or
or
fisubl
nopl
aas
aad
test
mov
scas
push
xchg
mov
push
xchg
jnp
into
and
lret
out
aad
into
jnp
outsl
dec
movsl
xlat
dec
scas
sub
mov
xlat
jmp
loop
jmp
inc
popa
mov
cmp
push
cwtl
je
push
out
filds
call
roll
fs
mov
jnp
or
xor
fdivrs
xlat
cmp
pop
jp
pop
mov
jo
scas
loope
popa
addr16
jmp
sbb
or
push
jno
stos
loop
dec
shrl
jbe
dec
sbb
cwtl
adc
nop
sbb
xor
lock
stc
sub
jns
sub
popa
xor
popa
negb
fdiv
sbb
int
push
sti
cli
test
jns
imul
stos
hlt
clc
lock
mov
mov
andb
jge
loope
pop
lmsw
dec
minps
push
xchg
into
xor
and
popf
in
pop
mov
mov
imul
fsubs
in
decb
mov
test
and
sub
dec
mov
fwait
mov
cmp
sbb
mov
call
sbb
pusha
xchg
sbb
adc
and
jno
add
xchg
cmpsl
bound
sbb
cs
icebp
mov
bound
cmpsb
cltd
jge
cld
adc
adc
ret
jg
dec
scas
sbb
inc
lock
add
pop
jmp
sbb
rcll
stos
test
mul
and
dec
scas
mov
bound
lods
lods
sbb
push
cmpsb
adc
sbb
jnp
enter
jmp
pop
xor
cmpsl
cld
std
loop
and
outsl
stos
lds
mov
shrd
xchg
ret
cmc
inc
ds
adc
sub
nop
and
sub
adc
sbb
mov
or
ja
shrb
mov
add
or
adc
out
lods
test
scas
int3
cmp
inc
mov
mov
negb
jno
sub
add
add
cmc
adc
daa
pusha
push
xor
adc
cmp
leave
in
add
xchg
push
push
fwait
or
divl
repnz
xchg
iret
imul
in
mov
xchg
cmc
mov
jnp
xchg
addb
adc
inc
and
adc
cmp
xchg
je
sbb
adc
mov
sbb
push
mov
xchg
add
lods
mov
test
cmc
and
loope
cmp
push
xor
sub
or
divl
je
dec
shl
pop
push
popf
push
xor
jmp
and
je
int3
xchg
das
ss
scas
mov
push
mov
push
out
mov
jle
push
es
iret
fsubl
xchg
pusha
scas
push
mov
sbb
jg
repz
push
test
pop
int
imul
xchg
jmp
sub
mov
arpl
aad
inc
call
xor
lret
int
adc
mov
xchg
dec
in
xlat
fs
sub
push
into
loop
mov
mov
dec
mov
and
mov
push
insl
sub
imul
loopne
aaa
xor
dec
pushf
mov
flds
in
int
divl
push
lret
stos
in
mov
cltd
xor
mov
fsubr
fs
cmpsb
lcall
and
cmp
sarb
pop
mov
xlat
cmc
dec
inc
fstpl
ds
int
mov
clc
lds
add
sub
jne
arpl
dec
in
add
call
sub
jne
and
stc
stos
dec
sub
jnp
xor
xchg
mov
inc
jno
dec
das
cmc
cltd
jbe
fistpll
call
mov
inc
sbb
sarl
movswl
fwait
mov
addr16
insb
sub
fadds
add
les
cwtl
or
andb
inc
scas
sub
push
or
in
mov
shl
int3
jae
mov
add
clc
xchg
pop
xor
push
inc
cmp
test
xor
cmpsl
inc
sarl
cmp
cmc
clc
dec
or
lea
das
fs
cs
aam
push
lea
mov
pop
popa
fwait
imul
push
dec
cmpsb
roll
test
add
push
jmp
inc
sub
inc
lods
jp
mov
mov
fisttps
mov
pop
fists
adc
test
pop
or
mov
ret
and
push
jo
fisubrs
sbb
or
imull
or
push
push
mov
jecxz
enter
rcrb
arpl
mov
or
sub
mov
cmp
les
adc
ljmp
mov
loope
cmpsb
lods
xor
mov
cmp
cwtl
sub
es
or
mov
not
ss
mov
xor
mov
pop
lahf
stc
mov
icebp
iret
sub
fidivs
fstpt
adc
cmp
insb
inc
mov
sbb
aad
inc
mov
popa
mov
add
push
add
ror
aad
cmp
sub
repnz
loope
jge
pop
or
inc
jmp
daa
add
outsl
jns
aad
push
sbb
sbb
scas
lret
rep
push
push
push
stos
adc
mov
js
xchg
dec
repnz
negb
aam
in
fs
in
jmp
fidivs
and
mov
sbb
xor
repz
mov
aam
xor
xchg
enter
push
dec
adc
sub
fcmove
pmaddwd
cwtl
hlt
inc
mov
popa
std
pop
cmp
jg
jle
fwait
mov
inc
inc
negl
int
xchg
jns
cmpsb
mov
mov
loop
push
jmp
into
mov
pop
push
sbb
fisttps
notl
dec
dec
mov
mov
daa
push
jno,pn
sar
aad
rcl
xchg
loope
mov
aad
mov
cmp
and
fldt
inc
aad
pop
xor
xchg
lock
sub
out
and
lret
lods
cmp
into
xchg
xchg
xor
lods
xchg
cmp
imulb
xchg
lcall
jmp
sti
je
loope
in
xorb
sarl
mov
sub
mov
mov
jp
mov
mov
push
lods
or
cltd
gs
push
andl
jnp
or
pop
mov
inc
mov
lcall
dec
filds
dec
inc
jl
push
xchg
dec
mov
or
adc
in
jne
jnp
mov
mov
popf
or
into
test
xor
jmp
jmp
pop
pop
xchg
aaa
push
add
into
xor
add
xor
sahf
movsb
cmp
nop
cmp
pop
push
jecxz
test
pusha
cltd
dec
fucomip
pop
cmc
repnz
in
mov
sub
pextrw
push
xor
cmc
inc
jg
outsl
jge
ret
cmp
sub
out
adc
push
cld
enter
icebp
sti
int
push
iret
test
in
mov
pop
in
jge
cmp
test
pop
imul
aad
mov
leave
lock
scas
lock
mov
aas
lea
cmp
or
lcall
lret
lock
insl
imul
out
test
popa
in
and
jecxz
out
push
loop
repnz
mov
je
popa
mov
outsb
stc
clc
jecxz
data16
sbb
test
xor
outsl
xchg
aad
and
stos
xchg
test
outsb
out
cli
addr16
aas
dec
mov
or
mov
mov
lds
imul
aad
loop
ljmp
das
mov
idivl
push
adc
pop
or
notl
in
lcall
adc
aam
into
cmc
dec
push
cs
test
and
add
in
test
mov
push
dec
sti
and
add
sahf
movsl
inc
cltd
and
mov
rorl
out
jns
movsb
aaa
lahf
aad
std
dec
hlt
lods
mov
xor
xor
fldenv
add
imul
sub
into
sub
fimull
iret
sub
mov
dec
shr
idiv
scas
lods
xor
aas
mov
mov
in
pop
xor
or
jg
loop
int3
pop
xchg
pop
cwtl
clc
jnp
mov
pop
and
mov
das
bound
test
adc
or
outsb
push
daa
andl
inc
repz
and
ja
jnp
aad
les
jbe
push
cs
lret
lods
jl
shll
mov
pop
mov
inc
dec
outsl
sub
aam
cmc
jo
push
adc
pop
sbb
cmp
mov
cmpsb
jge
push
ret
inc
call
inc
negl
lret
out
sbb
pusha
mov
arpl
or
lcall
and
xor
out
insl
mov
cli
pop
mov
push
push
inc
jbe
jo
outsb
mov
popa
insl
dec
outsl
jb
faddp
cmp
out
push
mov
mov
in
sahf
xchg
jae
daa
fcompl
pop
mov
inc
in
sub
scas
icebp
imul
popa
jle
push
cmc
int
or
insb
aaa
or
aas
ds
dec
leave
int
cmp
pop
mov
xchg
xchg
sbb
mov
push
cmp
cmp
jmp
or
and
int3
lea
or
jne
outsl
imul
ja
dec
sar
out
repnz
add
xchg
fdiv
mov
xor
bound
mov
xchg
punpckhwd
lahf
mov
dec
out
adc
clc
and
xlat
mov
lahf
out
aad
out
into
mov
xchg
lahf
xchg
mov
cmpsb
std
adc
jnp
lods
add
inc
mov
ret
fimuls
cmp
sub
mulb
sub
mov
add
in
or
ret
add
add
out
test
cmp
jp
or
cmp
lret
filds
jbe
inc
das
cwtl
sti
sahf
mov
addl
jge
and
dec
xor
jb
jmp
aad
arpl
cwtl
lods
mov
jmp
bound
mov
mov
int3
in
pop
mov
fdivrs
mov
dec
xchg
jl
inc
pop
inc
into
add
hlt
fnop
es
sbb
mov
imul
popa
pop
andl
sti
andl
ljmp
push
push
lds
jb
call
or
rcl
testb
movsb
sbb
pop
jmp
mov
lea
jnp
dec
and
xchg
out
jp
mov
push
pop
je
xlat
mov
sbb
push
ret
add
cmc
or
mov
xor
inc
ss
lret
lcall
add
jmp
mov
jge
outsl
out
cmp
imul
es
sub
push
shll
fwait
roll
test
mov
and
mov
or
fidivrl
movsb
jns
pop
call
ret
arpl
cli
jmp
push
fsubs
jge
cwtl
dec
mov
jl
rcrb
lods
sti
in
sbb
xor
lcall
mov
sbb
mov
or
mov
pop
pusha
gs
lahf
rcl
mov
jle
jmp
clc
add
frstor
cli
sub
xchg
lods
adc
push
cmc
addb
in
test
mov
mov
ja
jo
rclb
test
add
xor
loopne
xor
cmp
jmp
or
mov
inc
ret
rorl
inc
adc
jmp
push
pshufw
popf
mov
add
and
inc
cmc
or
add
orb
js
jp
or
cld
jbe
pop
mov
push
pop
push
lock
clc
and
push
push
xchg
pop
in
jg
xchg
jecxz
repz
dec
out
pop
out
push
dec
mov
sub
inc
cmp
pop
mov
mov
sub
cld
fwait
setne
out
aaa
enter
mov
cmp
popf
and
out
and
dec
adcb
scas
out
pusha
or
push
mull
dec
mov
pushf
cmpsb
fimull
mov
xchg
dec
mov
add
push
mov
sub
xchg
popl
mov
adc
aad
pop
cmp
dec
int3
mov
mov
mov
sub
jnp
dec
addr16
mov
iret
xor
mov
lods
mov
jl
orl
test
dec
popa
fbld
test
and
ret
cli
pop
ljmp
cs
push
sub
mov
jnp
pusha
mov
loopne
sub
out
cmpsb
adc
clc
faddl
and
int
aaa
dec
in
push
or
fwait
popa
dec
data16
popf
out
int
sub
dec
sub
add
bswap
cld
mov
insl
lcall
fildl
leave
inc
adc
popa
mov
jmp
jle
jmp
adc
mov
cltd
les
inc
mov
mov
pop
icebp
or
in
fdivr
cmp
xor
jne
add
push
insb
mov
inc
shl
filds
sbb
and
cmp
jo
stos
add
loope
cmpsb
idiv
int
cld
imul
and
xchg
jo
loop
or
loopne
sub
jmp
mov
sub
imul
iret
outsl
pushf
or
mov
insb
add
in
and
into
push
inc
push
loope
bswap
stos
mov
popa
cmpsb
imul
and
add
dec
sbb
mov
out
cmp
dec
and
fnsave
pushf
push
jle
add
cmp
scas
add
push
xlat
repnz
and
out
xchg
outsl
adc
mov
mov
test
xchg
xor
jmp
movsl
inc
xchg
and
das
hlt
aad
xchg
test
lret
and
mov
pusha
push
pop
dec
lahf
add
lods
xor
mov
int
adc
mov
push
gs
push
add
cmc
mov
inc
mov
cmp
fs
push
pop
push
mov
outsl
lcall
push
aas
cmp
sti
enter
cmc
nop
dec
push
stc
fsubl
test
dec
aad
movsb
lds
fidivrs
enter
fimuls
xor
push
cld
sub
popa
shlb
cmpsb
fwait
sub
pushf
and
sti
push
hlt
pop
push
push
cmp
imul
and
je
push
aas
mov
lret
mov
cmp
jge
xlat
cmp
cli
inc
popf
cld
andl
scas
test
lds
jnp
sbb
push
sub
fwait
lods
sbb
ror
phsubw
push
mov
cmc
out
xchg
mov
mov
mov
dec
int3
aad
or
push
dec
stos
fmuls
jo
add
xor
sbb
imul
xchg
or
fcmovne
xchg
mov
jnp
sub
dec
fistpl
lea
jbe
stc
mov
call
scas
dec
stos
xor
jecxz
dec
sti
mov
rsm
jp
out
aad
dec
push
add
lahf
mov
mov
jl
aam
fisttpl
cmp
arpl
jb
mov
std
jnp
int
fs
mov
das
sub
mov
mov
jle
push
mov
ljmp
gs
xchg
ljmpw
icebp
mov
dec
inc
in
sub
cmp
shll
cmp
inc
ret
in
or
lods
in
xchg
cmp
aad
test
adc
fs
idivb
cmp
outsl
into
loope
sub
int3
jmp
test
cmp
mov
aad
inc
hlt
mov
fistpll
mov
xchg
fst
jge
xchg
xchg
add
lods
das
and
mov
icebp
loope
or
outsl
or
fstl
xlat
bound
test
or
add
push
pop
jno
or
rcr
pushl
aas
pop
mov
jg
cmp
push
push
fwait
decb
cmc
mov
mov
ja
mov
xlat
sub
mov
dec
incb
xchg
aad
cmp
push
ds
mov
setne
in
nop
inc
dec
xchg
js
pop
pop
test
sub
pushf
mov
mov
dec
and
sbb
outsl
std
or
int
mov
shl
les
cmp
psubusb
cld
mov
addl
sub
jle
movsl
or
inc
nop
cltd
imul
cmc
xor
inc
mov
mov
mov
jmp
and
rcl
fwait
mov
dec
jle
xchg
shll
sbb
fcomi
lock
imul
and
inc
sbb
adc
pop
jbe
lahf
sub
cmpsb
outsl
testl
in
lods
outsl
vunpcklpd
push
and
in
lahf
insb
mov
rdtsc
pushf
pop
sbb
imul
repnz
int3
xchg
out
jae
notl
mov
es
out
sarl
cmc
movsl
or
ja
in
and
cmc
mov
cmp
jg
popa
xor
sbb
pusha
aaa
lods
fstl
imul
idivl
add
mov
ds
std
popa
sub
add
pop
and
push
das
or
test
out
cmp
xlat
dec
inc
gs
stc
aam
sbb
dec
les
scas
lahf
jecxz
push
xchg
int3
sbb
push
jb
aam
fldenv
cli
aad
addr16
xlat
push
push
add
subb
test
mov
pop
out
fldenv
or
out
push
push
sub
lods
push
nop
push
lea
rcl
jnp
nop
and
and
daa
outsl
mov
pushf
outsb
cmp
loope,pn
or
mov
das
sbb
or
adc
push
add
lods
and
insb
fisubs
sub
jnp
gs
lcall
pusha
cmp
mov
or
test
xchg
jg
fistpl
leave
in
push
and
inc
push
mov
xchg
dec
mov
sub
aam
or
xor
inc
push
movsb
mov
and
iret
out
scas
insb
outsl
mov
mov
cli
dec
dec
cmp
popf
fistps
call
in
pop
or
adc
adc
fld
jae
and
cmp
or
add
mov
sub
rolb
xor
mov
jo
cmp
aad
push
int
and
pushl
jmp
js
or
xchg
andl
or
fwait
iret
mov
add
or
push
mov
and
scas
mov
and
jge
aad
fisubs
stos
pop
sub
push
aad
jp
push
scas
popf
cmp
mov
inc
sbb
xchg
lds
jb
insb
inc
xchg
jne
mov
popf
jb
mov
xor
jo
iret
xorl
or
push
test
cs
xchg
xchg
int3
popa
test
add
xchg
add
scas
bound
aad
loop
push
jp
or
lahf
mov
or
or
outsl
stc
loope
movsl
cwtl
das
in
scas
sbb
addr16
add
mov
lret
or
mov
push
inc
es
lcall
fisttpll
bts
popa
add
pop
lea
repz
iret
out
sti
outsl
adc
cld
mov
imul
push
fmul
mov
pop
push
lahf
pop
mov
mov
icebp
rorl
gs
cmc
add
add
xor
mov
fmulp
and
adc
push
mov
xchg
movsb
std
sbb
mov
pop
clc
cmp
lods
inc
imul
test
jb
cmp
rolb
mov
stc
mov
dec
test
loope
inc
repz
call
and
xchg
jmp
xor
rcl
sub
jnp
fistl
cli
sub
xchg
scas
ret
loop
std
stos
mov
xchg
mov
sysret
lcall
mov
dec
daa
cmp
xchg
adc
sub
cmp
adc
je
insb
seto
sub
imul
cmc
fisubrl
xchg
cld
add
mov
mov
add
adc
imul
outsl
lods
aad
stos
lea
xchg
or
gs
fildll
or
sbb
sbb
sti
ret
dec
mov
ds
sbb
aad
test
sub
cld
cmp
nop
addl
inc
mov
cli
ljmp
add
mov
xchg
xchg
call
push
je
or
xor
pop
add
jbe
pop
scas
popa
loope
fbld
cmc
mov
int
inc
xor
mov
iret
or
lea
pop
xor
and
mov
stos
or
mov
cmp
fidivs
addr16
or
std
jge
mov
cmc
xchg
ror
push
push
or
mov
jmp
rolb
pusha
rcl
cltd
cmp
jecxz
push
inc
lock
push
ja
rcr
fisttpl
in
cmp
dec
dec
jmp
inc
inc
adc
js
lahf
xchg
cmp
or
jbe
mov
loopne
scas
add
loope
jnp
pop
xor
mov
jmp
and
call
jno
lea
pop
xchg
clc
scas
aad
test
adc
cmp
les
std
cmpsb
xlat
fdivrl
sub
jmp
cmp
pop
jp
shll
clc
je
add
xchg
lods
jmp
ret
ja
test
mov
sbbb
pop
scas
sub
fistpll
jl
xchg
or
cmp
outsl
notl
roll
or
pop
cmpl
popa
call
mov
cltd
imul
js
xchg
popa
out
jl
call
int3
into
inc
add
fnstsw
add
lods
cmp
hlt
cmpsl
dec
adc
loopne
mov
in
xchg
mov
jnp
pop
sub
test
icebp
adc
pop
in
mov
dec
lret
movsl
mov
xor
into
cmc
aad
lock
das
dec
mov
jae
inc
adcl
mov
hlt
leave
int3
mov
out
aam
stos
addr16
cmp
movsb
xchg
scas
add
loopne
pop
add
aam
cmpsb
fs
adc
sbb
and
push
fisttpl
and
inc
sbb
mov
loopne
or
sub
enter
sub
mov
mov
out
jle
jmp
or
inc
dec
mov
mov
mov
gs
mov
sub
xchg
adc
movsl
push
jecxz
inc
inc
rorl
cmp
imull
pushf
push
and
cmp
push
loope
fwait
into
loopne
ds
lcall
fwait
or
and
and
sbb
xlat
jns
movsl
inc
pop
xchg
dec
xchg
dec
jecxz
stos
out
inc
clc
xchg
jp
fisttpll
test
lods
pmaddwd
outsb
stos
or
lock
xor
mov
mov
push
sbb
fs
xchg
jns
dec
pop
incb
js
fs
and
xchg
push
lods
addl
xlat
shlb
aad
stos
loope
mov
js
jp
fsubp
cmp
jbe
or
dec
jnp
in
daa
subl
jge
pop
testl
add
push
jmp
aad
cmp
enter
clc
call
iret
jb
sbb
mov
push
cmp
lods
movsb
das
add
das
nop
out
jb
push
in
jl
fcmovb
testl
mov
cmp
push
cmpsb
repnz
mov
in
add
push
pop
mov
test
xor
scas
lahf
and
xchg
xor
and
stos
fists
jge
and
popa
cmp
mov
ret
stc
and
iret
or
cmp
mov
push
mov
insb
stos
mov
pop
xor
mov
add
sub
jno
mov
out
jle
sarb
jo
push
push
addr16
jl
mov
movsl
outsl
xchg
lock
stc
sub
pop
call
outsl
jle
dec
movsl
ja
inc
or
hlt
jo
inc
iret
scas
mov
into
sub
or
cmpsb
mov
cmp
outsl
xor
loope
int
add
std
cmc
mov
dec
cld
btr
int
in
testb
je
in
sbb
iret
sahf
aad
arpl
cmc
add
cmp
mov
enter
ljmp
loopne
xchg
loop
sbb
fdivl
jge
xchg
xlat
sbb
jp
sti
xchg
adc
out
andl
lock
sbb
fadd
movsb
out
jne
out
nop
cmc
mov
xchg
sti
mov
jmp
repz
std
xchg
into
test
popa
add
in
adc
notl
xchg
dec
movsl
lods
scas
mov
aad
inc
cmp
loope
cmp
sarl
push
fcomip
dec
mov
mulb
sti
jns
or
sub
mov
mov
mov
xorb
imul
clc
push
cmpsl
into
mov
push
sbb
jle
adc
or
lcall
cmpsl
and
push
repnz
iret
imul
pop
sub
in
or
dec
and
sub
in
pop
cld
les
jae
cmp
mov
dec
test
add
adc
xchg
in
into
mov
fcomip
add
mov
cmp
lret
jns
popa
mov
popa
mov
mov
xchg
push
inc
nop
add
orb
rorl
cmp
jns
xchg
imull
cmpsb
dec
popa
xor
sub
push
pop
test
xchg
cwtl
xchg
aaa
mov
lahf
fcomp
frstor
into
jmp
pop
andl
mov
and
out
imul
out
pop
xor
or
int
mov
jo
aam
mov
dec
cmp
cltd
popf
jp
xchg
push
insb
mov
out
out
loope
sbb
mov
xchg
adc
bound
add
pop
add
sbb
mulb
ret
pop
mov
cmp
pop
jl
rcrl
pop
or
jne
inc
dec
sbb
pusha
es
cmp
xchg
or
cmp
imul
add
sbb
jg
jl
enter
xchg
mov
into
movsb
divb
add
xlat
adc
outsl
cmp
outsb
lahf
das
push
into
ljmp
call
pusha
jmp
mov
and
dec
orl
xchg
shr
inc
sub
cmc
imul
pop
sbb
lds
adc
cmp
div
sti
cmc
push
jo
int
xchg
fisttpl
pop
lcall
add
cmc
push
pop
mov
bound
ja
mov
inc
and
call
xchg
out
mov
popa
mov
and
push
and
push
enter
mov
nop
add
sbb
fs
mov
loopne
mov
pop
jnp
mov
sbb
popa
inc
orl
pusha
daa
sbb
jl
out
inc
out
fadds
cmc
lds
je
pop
loope
push
std
lock
repz
fldt
aad
dec
inc
jle
stos
inc
adc
sub
mov
mov
call
aad
adc
outsl
jnp
push
xchg
fucomip
inc
popf
push
cmovl
push
adc
popf
lcall
adc
adc
and
and
rorl
ljmp
mov
sub
jno
sbb
add
and
push
das
jnp
mov
sbbl
xchg
mov
dec
mov
sub
push
push
popf
cmp
daa
xchg
shl
sahf
pop
mov
mov
cmp
outsl
lds
jo
push
jl
xchg
mov
and
inc
adc
pop
mov
or
fwait
pop
pop
idivb
iret
pop
aad
loope
mov
pop
dec
jmp
dec
fwait
adc
repnz
popf
cmc
data16
lret
xor
call
mov
lcall
cmp
dec
fildl
and
adc
adc
jae
push
cmpsb
daa
add
fst
in
or
mov
and
mov
enter
sub
popf
inc
add
adc
mov
add
out
into
cmp
lods
add
sub
adc
scas
bound
sar
cmp
clc
mov
lods
mov
mov
dec
in
xor
jo
xor
push
fistl
jl
inc
loope
enter
cmc
push
dec
fs
mov
leave
pop
aaa
adc
divb
ja
fwait
jne
fprem
jno
dec
xchg
mov
dec
cwtl
mov
sarl
rclb
into
and
out
mov
add
xchg
std
cli
xchg
adc
mov
xchg
std
js
mov
add
sub
and
aad
daa
push
nop
in
sub
sub
dec
movsl
in
hlt
push
adc
dec
out
mov
lret
loope
add
mov
lds
clc
sub
or
cmc
push
sarb
push
cmp
or
imulb
lret
inc
cmpl
js
adc
mov
sahf
mov
pusha
xchg
lahf
movsb
xor
imul
js
xor
loope
xorl
and
cmp
ds
sub
or
fsincos
repz
mov
jno
and
push
cmpsl
int3
aad
das
mov
into
sbb
adc
js
outsb
jnp
in
dec
dec
mov
xchg
cmc
gs
xor
cmp
cmp
sbb
jge
inc
mov
dec
jge
add
fisubrl
fs
in
mov
out
mov
outsl
aad
add
call
lods
int3
add
cli
add
and
jl
push
mov
mov
movsb
lock
add
mov
pop
mov
pop
jle
in
call
cmp
mov
dec
insb
inc
push
xchg
or
sti
mov
clc
shr
cmc
daa
pop
lcall
cmp
adc
adc
jno
mov
pop
jmp
aam
stc
in
pop
out
pop
cmp
jge
add
sub
cmp
jg
pop
inc
inc
pop
mov
int
testl
scas
test
test
jp
jl
jmp
xorb
pop
fprem1
jb
test
movsb
jne
faddl
cs
xchg
xchg
cmpsb
or
mov
in
int
sbb
gs
cmp
adc
mov
jb
cmp
dec
xchg
cmp
add
cltd
out
cmp
cmp
shrb
cmpsb
imulb
xor
imul
xchg
subb
pusha
mov
jns
int3
push
aad
jnp
shr
push
and
jle
push
int
cmp
sub
in
aad
in
jg
pusha
dec
mov
nop
int
adc
xchg
stc
jnp
rorb
bound
cs
mov
add
dec
stos
pop
ror
xchg
mov
jecxz
cmp
iret
movb
mov
adc
fbld
clflush
lcall
mov
pop
adc
jae
call
ljmp
loope
pop
jg
js
inc
pusha
add
mov
inc
ja
or
test
into
and
or
and
cltd
orps
test
xchg
negl
jns
jl
dec
sahf
mov
insl
cmp
and
jb
stos
jecxz
push
jns
jne
dec
imull
xchg
lcall
or
enter
mov
fidivrs
or
fcmove
addr16
cmp
jmp
cmpb
jne
xchg
adc
shl
cmp
shlb
lret
sub
idiv
or
in
test
les
aad
sbb
mov
scas
xor
cmp
adc
call
rorl
call
fstps
push
cmc
xor
hlt
cmp
pop
inc
loope
mov
adc
xor
ja
loope
mov
xor
adc
xor
scas
imul
mov
aas
div
or
mov
push
les
and
mov
je
pop
ret
sahf
nop
in
or
jno
dec
xor
dec
loope
mov
jno
cltd
cmp
xchg
in
fisubrl
xchg
jnp
ss
sub
cmpsb
sbb
xlat
mov
push
fdivrp
in
inc
xchg
cmp
fs
xchg
test
cli
mov
or
xchg
adcl
lods
adc
and
dec
fs
fistl
cmc
xchg
pop
mov
popl
clc
shll
lahf
in
mov
pop
mov
popa
std
push
imul
movsb
test
cli
out
pop
adc
pop
inc
cmc
sahf
mov
insb
and
test
inc
in
popa
mov
int
rolb
mov
bound
inc
jl
fidivl
pop
mov
xchg
pop
stos
aas
cld
pusha
icebp
sub
add
scas
or
es
inc
aad
lcall
imul
repnz
lret
mov
out
movntps
jmp
outsl
dec
in
cld
mov
dec
or
lret
shl
or
btc
out
sub
out
or
nop
mull
jp
decl
cld
push
jl
iret
push
bound
jmp
mov
pusha
neg
int
xchg
in
mov
push
pusha
pmullw
inc
push
push
lods
lret
sbb
dec
push
testb
add
mov
push
cmp
out
cs
mov
jge
popf
fmulp
cmp
mov
xchg
mull
jge
rorl
out
push
fwait
cmc
lods
cmp
dec
insl
mov
addr16
pop
movsb
adcl
pop
fistpl
and
ja
repnz
cmp
add
test
xchg
mov
testl
push
jmp
cld
push
push
adc
iret
sbb
xchg
ss
bound
jge
jae
fiadds
dec
sbb
cmp
cmc
adc
mov
mov
std
mov
xor
push
and
dec
movsl
xor
repnz
cmpsl
pop
and
dec
test
adc
cs
iret
or
pop
xor
dec
push
pop
aad
popf
cmp
sahf
push
repnz
fadd
aad
sarl
test
mov
in
adc
mov
pmaxsw
movsb
or
push
mov
dec
pop
inc
je
pop
out
addb
cmp
int3
cmp
pusha
movsl
test
xchg
cltd
xchg
dec
std
sub
jp
int3
and
sub
mov
mov
stos
aas
into
cmpsl
push
adcl
lret
in
mov
das
outsb
dec
mov
push
jo
mov
adc
mov
mov
jo
cmp
sub
pop
and
add
jle
jmp
inc
ss
lds
jae
mov
lret
jl
movaps
jbe
addr16
int3
xchg
and
adc
lret
in
xor
pushf
repnz
dec
outsl
xchg
mov
std
fisubl
jg
mov
mov
out
jne
aam
push
in
mov
mov
dec
insb
rcrb
push
and
call
rcrl
fisubl
frstor
mov
xor
sbb
fstl
gs
inc
int
cmpsl
into
jbe
mul
xchg
incl
jnp
xchg
xchg
jae
pop
lods
pop
mov
inc
bound
lods
add
or
xlat
dec
push
adc
lods
sbb
jge
loopne
cmp
mov
les
jbe
adc
data16
dec
fsubrs
loope
or
mov
ljmp
test
add
ret
dec
testl
pusha
mov
lods
bound
xor
sub
arpl
test
xchg
xchg
dec
dec
arpl
cmc
fstl
arpl
xchg
sbb
lcall
outsl
pop
shrb
aad
orl
jo
dec
push
loope
imul
xchg
or
inc
iret
inc
fwait
test
dec
lods
add
rcl
jne
fwait
xchg
and
test
outsl
call
ret
scas
loop
push
jle
inc
push
dec
xchg
xchg
std
fisttpl
or
sti
mov
scas
xor
enter
push
inc
pop
dec
mov
push
test
sub
popa
or
fs
imul
cmp
or
mov
push
lcall
mov
adc
stc
nop
xor
loope
fs
push
dec
int3
insl
inc
js
rorb
repnz
cmp
mov
mov
add
arpl
jle
jbe
or
leave
mov
jl
jmp
out
lcall
push
xor
subl
scas
jl
lock
pop
out
mov
jmp
dec
or
jle
adc
mov
test
hlt
adc
push
push
push
pop
mov
add
jb
cs
pushl
aad
sub
jmp
mov
fs
insl
or
mov
jmp
add
jp
xor
cltd
ss
sti
xchg
nop
adc
cwtl
sbb
inc
sub
cmp
es
shlb
jmp
aam
sahf
jp
popf
xchg
pop
cmp
cmp
fisubs
movsb
int
call
push
lods
and
mov
jnp
pop
push
js
arpl
subl
inc
test
loope
fwait
jl
dec
mov
cmpsb
out
mov
int
out
scas
test
add
add
iret
loope
cmpb
or
xor
xor
dec
les
fnstsw
cmpsl
mov
push
cmp
insl
push
hlt
ret
testb
and
ljmp
rorl
aas
push
stc
dec
pop
mov
pop
dec
fsub
or
aad
sbb
xchg
test
push
fldl
pushf
xchg
add
pop
in
pop
and
add
clc
inc
outsb
aad
and
or
adc
std
mov
pusha
subl
xor
mov
push
in
adc
std
cmpsl
in
outsl
not
jg
dec
mov
fs
inc
jmp
aad
mov
out
shll
dec
cmp
shrl
ret
mov
stc
mov
stc
sub
mov
data16
popf
dec
out
cmpsl
jne
loope
dec
pop
and
inc
outsl
push
sti
mov
stos
arpl
test
in
lods
in
outsl
cmpl
cld
repnz
pop
push
mov
icebp
lret
dec
mov
push
int3
cmc
sub
dec
xchg
cmp
dec
sbbb
or
jbe
dec
mov
mov
dec
aad
jecxz
mov
mov
inc
dec
xchg
add
mov
pop
mov
pushf
inc
idivb
cmp
fisubrl
lea
jns
push
dec
in
xchg
and
iret
fldt
add
jmp
push
mov
sub
mov
aad
inc
hlt
into
cmc
and
into
jmp
inc
or
xor
cli
pop
cmc
dec
or
test
loop
iret
ret
mov
jp
lods
or
mov
mov
fwait
lahf
fs
test
inc
pop
repz
cmp
xor
pop
adc
dec
pop
out
or
sub
mulb
js
xchg
roll
adc
cmp
into
out
adc
out
mov
sub
or
xchg
adc
pusha
and
cmp
sbb
mov
std
into
orl
mov
sahf
out
fbstp
jmp
fldcw
mov
add
mov
mov
and
sub
xchg
push
or
sbb
xorl
pop
aad
add
xchg
mov
cmpsb
or
xchg
dec
pop
outsl
pop
mov
les
pop
ret
mov
xchg
js
cwtl
hlt
dec
mov
mov
jg
nop
leave
mov
mov
stos
faddp
xor
push
mov
aad
and
mov
push
sub
loop
out
cmp
push
in
dec
or
mov
mov
lret
js
negl
fbld
sarb
mov
mov
pop
js
mov
jp
or
inc
sub
sti
in
inc
push
pop
negl
jbe
test
adc
push
stos
inc
xor
xchg
or
stc
ljmp
mov
test
addr16
push
clc
sbb
push
mov
or
popa
and
jmp
inc
es
pop
lods
jge
inc
sub
adc
stos
cmp
cli
jp
aam
test
jo
stc
dec
cs
outsb
mov
fbld
mov
int
cli
andl
add
xchg
pop
ret
jecxz
jecxz
sarl
dec
jle
jmp
mov
rcrl
pop
xchg
or
shr
push
pusha
lcall
std
xchg
dec
mov
cld
inc
dec
out
test
repnz
call
into
mov
insl
jp
lods
in
inc
lods
lahf
aad
in
push
push
fidivrl
pop
mov
jnp
lea
adc
mov
push
add
scas
cmpsb
lret
gs
jecxz
imulb
jecxz
push
xor
cmp
cld
xchg
push
shr
mov
mov
add
mov
or
xchg
fldln2
adc
cmp
or
fdivrs
and
cwtl
cmp
push
pusha
mov
xchg
xlat
adc
insb
js
push
inc
nop
movsl
jmp
cmp
dec
cmc
xor
lock
lds
call
pusha
out
add
je
dec
xchg
jl
mov
sub
gs
push
test
mov
scas
jle
repz
js
fsubs
dec
ficompl
arpl
and
movsl
cmpxchg
mov
int3
stc
movsl
filds
std
mov
inc
lods
dec
jbe
mov
lret
and
out
mov
xor
ja
push
xor
inc
add
xor
pop
add
nop
ljmp
mov
test
push
sub
adc
pop
mov
mov
loop
sahf
aad
mov
test
sbb
mov
inc
roll
pop
xor
jge
mov
fidivl
mov
jns
jle
fs
jge
and
cmp
xchg
out
sbb
add
xchg
ljmp
xor
std
or
and
iret
push
rep
nop
mov
in
xchg
or
adc
test
rolb
add
ljmp
out
sbb
out
stos
les
test
in
or
jge
mov
frstor
into
enter
fsubrl
lcall
dec
dec
mov
cmp
jno
mov
xchg
sti
stc
sarl
mov
loope
or
cli
push
into
push
sbb
push
jmp
lahf
mov
das
hlt
stc
test
stos
mov
inc
dec
or
mov
add
cwtl
daa
mov
push
add
lods
outsl
loop
arpl
sub
push
cmp
std
inc
popf
std
cmp
inc
loopne
aaa
xchg
xor
jo
jp
pop
mov
data16
and
loopne
xchg
xor
sbb
ljmp
fwait
stc
or
test
lock
cmp
or
in
ret
push
std
xchg
fadds
jne
mov
xchg
into
pop
outsl
call
lret
out
xchg
jae
fimull
dec
sub
andl
xor
leave
pop
push
push
shrl
call
insb
into
aad
sahf
and
pop
int
dec
push
jg
pop
idivl
arpl
pop
pop
aas
loop
scas
out
jge
fsubs
mov
adc
decb
xlat
push
xchg
popf
scas
and
mov
and
lods
divb
jge
popa
pop
xchg
pop
sub
mov
aad
jl
adc
insb
movsb
xchg
sub
inc
dec
xchg
dec
imul
lret
jno
in
lock
sbb
mov
xchg
jmp
ret
mov
js
into
sub
adc
dec
aad
pop
push
pushf
stc
shll
mov
inc
fmul
int
adc
mov
sub
and
or
loopne
mov
pop
cmp
jecxz
add
dec
js
frstor
xor
cltd
out
jecxz
icebp
es
imul
popf
call
push
lret
out
pusha
inc
outsl
cmc
jno
xchg
pop
insl
fisubrl
dec
or
test
mov
ljmp
popf
mov
mov
add
cmp
shrb
sbb
mov
mov
pop
out
es
cmp
lods
push
sar
or
sbb
mov
cmp
mov
add
cmc
idivb
stos
lahf
sub
outsl
jge
idivl
or
les
repz
mov
cltd
push
or
daa
jge
lahf
std
rcr
add
out
or
dec
mov
jge
inc
into
out
mov
pusha
int
jnp
icebp
repnz
scas
push
mov
xor
das
aad
sub
jecxz
mov
cmpsl
mov
or
jns
mov
inc
pop
adc
add
imul
es
mov
push
mov
mov
push
xchg
popf
shrl
insl
cwtl
out
cmc
gs
js
out
aad
push
cmpsl
jl
jp
cmp
adc
out
jnp
mov
data16
imul
loope
jnp
cltd
mov
das
jge
adc
lsl
add
xor
rorl
cmc
popa
lods
pop
add
gs
pop
mov
dec
xchg
or
cmp
push
mov
add
aad
jp
pusha
sti
popf
cmp
and
addr16
add
ficoml
xor
cmp
xor
xchg
movsb
fdivr
into
push
repz
jae
les
clc
addr16
sbb
std
or
cmp
in
cmp
loopne
jecxz
ss
add
dec
aad
fs
dec
enter
incb
mov
ljmp
in
out
scas
pop
and
inc
movsl
cmp
xchg
bound
push
cmp
push
pop
mov
out
fwait
test
xor
lods
jecxz
add
adc
cmp
add
loope
mov
call
sbb
add
pop
mov
insl
stos
mov
aas
cmp
loope
ljmp
ud0
jmp
icebp
xor
pop
add
aas
ss
cmc
dec
daa
jno
jbe
lods
or
dec
sub
jbe
xor
mov
fstp
incb
jp
ss
pop
mov
mov
dec
es
pop
movsl
orb
lods
inc
insb
decb
mov
mov
xchg
and
mov
mov
mov
inc
sar
aad
shrl
or
movsb
pusha
or
sub
std
cmpb
xlat
rcrl
push
iret
cli
adc
xor
jae
jge
in
popf
or
stc
jo
clc
les
lret
xchg
add
add
xor
aas
ljmp
fnstenv
push
xchg
or
hlt
ljmp
mov
shlb
cmc
inc
push
cmp
iret
sub
in
testb
add
arpl
out
cmp
xchg
or
adc
ret
iret
testl
pop
and
psubsb
aad
xchg
lock
scas
jge
arpl
mov
icebp
and
mov
pop
jp
jecxz
vmwrite
push
dec
cli
andb
daa
add
and
cmp
fwait
cmpsl
sub
xor
mov
sub
mov
insb
hlt
ljmp
jmp
pop
fildll
call
mov
add
push
mov
icebp
fisttps
push
rcr
popf
sub
or
add
dec
dec
mov
or
xchg
lods
lea
mov
mov
mov
jbe
aad
outsb
lods
roll
rol
xor
or
loop
into
aad
outsl
in
or
shll
idivl
pop
xor
into
pop
sub
aad
jns
dec
xchg
adc
shr
mov
dec
stc
sub
out
aad
mov
ret
movsb
push
lods
jbe
jns
pop
shlb
lahf
or
mov
add
loope
lea
test
int
inc
lret
push
test
mov
mov
ja
adc
outsl
outsl
out
and
add
jbe
cltd
and
cltd
arpl
lods
mov
or
mov
cmpsl
mov
pop
xchg
cmp
mov
aad
or
and
dec
stos
mov
loope
repnz
cltd
mov
dec
pop
or
aaa
out
sub
inc
rcr
mov
stc
xchg
lret
xchg
faddp
rcrl
pop
lods
or
mov
ds
add
push
cmp
mul
push
fnstsw
mov
test
mov
call
mov
sub
scas
dec
or
push
pop
sti
xor
ss
mov
mov
dec
mov
push
pop
stos
or
aam
jnp
add
and
mov
jnp
popa
repz
div
int3
inc
mov
jae
add
mov
mov
inc
or
dec
xchg
lock
xchg
mov
notb
in
xlat
xchg
jmp
stos
jno
inc
out
xchg
mov
int3
xchg
mov
push
sbb
insl
jbe
mov
jp
add
loop
dec
add
and
mov
pop
out
dec
out
pop
pop
dec
xor
imul
int
inc
in
mov
popa
mov
outsl
inc
and
pop
add
out
add
xchg
mov
adc
lret
add
jg
jge
scas
scas
mov
mov
push
cli
inc
sub
and
cmp
pop
les
sbb
push
lock
and
mov
and
mov
lret
fwait
mov
or
sti
pop
scas
jge
mov
cmp
pop
cld
jge
adc
mov
xchg
mov
packuswb
out
loope
out
sbb
cmp
test
rcl
mov
clc
repz
inc
aad
cltd
int3
les
xchg
xchg
sarl
dec
jb
pop
inc
roll
xchg
cmp
adc
shrb
xchg
and
out
test
fs
stos
mov
add
sti
popf
rcll
xor
push
push
push
ret
pushf
icebp
xchg
fdivs
enter
adc
mov
pmaddwd
cmpsl
jnp
push
dec
test
pop
lods
icebp
sbb
aad
daa
popa
sub
mov
mov
dec
pusha
pop
scas
push
jge
jmp
push
mov
mov
fs
jns
movsb
dec
cld
out
insl
inc
lea
cmp
push
pop
stc
jp
int3
mov
lea
or
or
push
dec
lcall
stos
pop
cmpsb
adc
cmc
loope
jae
xor
stos
xchg
xchg
and
cmp
mov
sub
cmpsb
push
mov
pop
xchg
pushl
fmuls
frstor
imul
and
cwtl
inc
jl
and
xor
dec
nop
test
outsl
mov
cmpsb
hlt
into
in
sub
wrmsr
leave
jl
fisttpll
aad
pop
std
adc
int3
stc
loope
into
loopne
adc
sub
orl
scas
movsl
out
xchg
cmpsl
sbb
jl
cmp
inc
pop
add
stos
or
push
xchg
pop
dec
ret
das
cmp
lods
bound
xchg
cmp
cmpsb
scas
ficomps
call
out
imul
cmp
sub
ljmp
jmp
xlat
mov
dec
fbstp
jg
jl
mov
xor
cmp
rcr
stos
adc
cs
in
movsl
xchg
mov
lock
mov
pop
sbb
push
int
adc
cmp
push
ficoml
and
mov
mov
dec
mov
movsb
test
adc
adc
fdivs
cs
es
out
mov
add
movsl
or
les
aad
xchg
addl
mov
jne
adcl
imul
out
pop
jnp
ret
inc
and
xchg
mov
push
aam
out
loope
daa
cmp
or
aad
and
or
inc
fldl
call
mov
stos
ljmp
cwtl
not
or
popa
fstp
lcall
cmp
les
ds
sti
and
mov
fst
dec
cmp
subl
push
fdivrs
out
sarl
loope
push
lock
decl
fisttpl
push
or
dec
js
lods
sbb
into
out
xchg
inc
xchg
cmpsb
lods
ljmp
inc
mov
pop
enter
test
jmp
xchg
fsubrs
stos
sbb
jp
aad
outsl
pusha
xchg
mov
andb
push
xor
int
add
iret
orl
adc
ss
loope
xor
push
xchg
incl
mov
mov
ret
pop
lret
mov
hlt
push
int3
or
inc
fstl
add
mov
ljmp
sbb
into
aam
sub
fisttpl
mov
xchg
lods
sarl
or
out
push
loopne
test
xor
or
aad
lahf
adc
sahf
adc
mov
inc
mov
xor
add
xadd
loop
xchg
add
js
mov
jecxz
stos
hlt
and
pop
scas
sti
mov
stos
loope
mov
xor
cli
or
aad
add
dec
std
pushf
out
jmp
stos
sahf
idivl
and
addr16
sbb
subb
ficoms
sub
push
idivb
data16
mov
sub
cs
mov
mov
inc
mov
les
cld
int
mov
fs
lea
call
jb
je
xchg
adc
cli
cmp
sti
xchg
mov
popa
mov
test
flds
xchg
int
scas
ds
lea
jle
xchg
ljmp
mov
imul
out
aad
out
enter
mov
jae
test
jmp
mov
cmpsl
push
in
shrl
lea
aad
sbb
int
push
mov
cmp
dec
jl
lea
pop
sub
in
xchg
jle
pop
push
fidivrl
psrlw
xchg
cld
push
mov
imul
lahf
call
loope
popf
jg
int
iret
xor
lods
add
mov
jmp
adc
push
fisttpll
jbe
lods
or
decb
cmp
cld
scas
jl
xchg
loop
lods
iret
cmpsl
roll
fidivrl
aad
lods
sti
sbb
stos
lahf
popl
add
inc
sbb
jl
xchg
xchg
inc
aam
outsl
push
and
lods
fsubrs
jbe
pmaddwd
scas
pop
or
jecxz
push
fwait
xchg
cmp
inc
and
loope
out
lods
push
fwait
inc
lret
aaa
sub
pop
mov
popa
push
repnz
cmc
mov
int3
push
scas
xchg
in
cwtl
adc
lret
shl
push
stc
pusha
jnp
iret
xor
cmpsl
mov
test
jne
jg
jge
loop
stos
push
bts
nop
das
sahf
mov
fisubl
cs
movsl
jp
stc
xchg
fldcw
mov
sbb
sbb
pop
or
fiadds
mov
popl
sbb
xor
inc
add
fstps
or
mov
xchg
push
pop
or
jno
xchg
mov
mov
pop
cmpl
xchg
inc
fimuls
mov
jnp
and
out
or
je
push
mov
in
inc
shlb
cmp
mov
cli
jne
xchg
into
stc
sahf
mov
aad
ja
mov
int
mov
fwait
ret
lock
or
cmpl
dec
or
fldenv
sbb
ja
movsl
mov
or
or
pop
xchg
je
setno
jg
sti
movsl
or
lock
sbb
inc
push
adc
fs
cmc
push
push
pop
into
aad
mov
fdiv
cmc
xchg
xchg
dec
jnp
loopne
jmp
adcb
call
call
mov
xchg
pop
xor
rorb
dec
pop
xchg
pop
jo
mov
call
pusha
pop
cld
mov
repz
adc
imul
loope
repz
ficoml
lret
iret
cmp
or
cmp
and
lods
push
aad
mov
xlat
aaa
jmp
dec
rclb
and
push
add
repz
xor
jbe
or
lahf
mov
lea
cmp
sbb
mov
sub
add
push
mov
xchg
bound
arpl
lret
aas
cmp
stos
fdivp
lahf
xor
xchg
xor
loope
xchg
cmp
fstl
les
cwtl
imul
mov
jne
iret
push
aad
mov
inc
xchg
rorl
dec
repz
aad
cmp
hlt
test
int3
lock
mov
jae
clc
into
jnp
jecxz
xchg
cmp
sbb
inc
aad
push
inc
lss
mov
and
fdivrl
loopne
sub
fmull
ret
jb
push
cmp
xor
incl
and
out
cmp
xchg
cmpsl
lahf
repz
jo
xchg
inc
stos
iret
sahf
mov
mov
in
mov
mov
pusha
cmovno
cld
stc
dec
add
add
inc
or
test
or
sub
xor
push
nop
add
adc
and
jbe
test
jo
add
jecxz
push
cwtl
in
jle
adc
sub
jb
xor
mov
push
popf
cmp
sub
xchg
pop
and
lahf
sarl
cmp
loop
ret
dec
lret
xor
and
dec
insl
stc
xor
push
mov
jbe
je
dec
out
repnz
jmp
jp
adc
test
adc
gs
mov
and
cmp
nop
mov
jp
add
loope
mov
and
leave
data16
pop
inc
lods
jmp
and
pop
sub
ret
outsl
mov
jg
pop
addr16
hlt
or
rolb
cmp
sbb
mov
inc
fcomp
pop
xchg
ret
fadd
fcmovnbe
mov
sahf
in
jecxz
dec
jmp
mov
sub
push
in
mov
inc
mov
mov
pop
xorl
pop
and
scas
cmp
push
jecxz
movsl
addr16
xlat
mov
jle
movsl
sbb
dec
addb
push
cld
push
leave
outsl
out
popf
sbb
mov
in
rorb
dec
dec
cmc
imul
call
push
stc
dec
push
enter
sbb
cmp
inc
cld
fsubrs
insl
jmp
mov
or
int
arpl
cmp
dec
aad
ljmp
xchg
arpl
add
xchg
cwtl
mov
push
push
out
stos
sti
stos
js
sub
push
mov
fimull
add
mov
ja
ja
sti
aad
add
les
mov
aad
fimuls
cmp
cmc
jns
sub
in
push
lods
inc
dec
push
adc
inc
fldt
add
fisttpl
or
test
xchg
int
push
sahf
push
mov
popf
cmp
mov
out
cmc
push
dec
push
inc
push
arpl
outsb
xchg
movsl
mov
sub
inc
mov
or
xchg
pop
mov
std
aad
sbb
out
mov
or
add
push
int
fwait
mov
and
push
mov
out
test
or
push
div
pop
xchg
push
shld
push
mov
cmc
inc
cld
in
push
pop
and
cli
rorb
repz
mov
repnz
push
or
inc
int
dec
sub
mov
or
jp
jo
fdivr
movd
mov
fdiv
inc
ret
test
pop
out
in
mov
out
test
jnp
or
int3
adc
jmp
mov
inc
shl
jg
or
push
xchg
loop
pop
clc
shrl
out
or
and
jl
dec
add
dec
mov
in
jmp
lea
sbb
lea
cmp
call
pop
jge
jecxz
xchg
adc
and
lds
sbb
mov
adc
in
xor
loopne
das
aad
mov
dec
add
fnsave
jge
fiaddl
ja
jne
mov
sbb
or
push
dec
nop
jl
push
cmp
js
mov
daa
fs
shl
inc
inc
xchg
and
and
cmpsl
sub
sahf
add
ficomps
pop
add
and
sub
shlb
sub
in
pop
icebp
fisubrs
xchg
xor
and
mov
dec
test
gs
jg
cmp
aad
dec
dec
mov
inc
out
and
xor
pop
fcmovne
jbe
jmp
push
mov
iret
adc
lods
inc
adc
divl
cld
push
mov
gs
mov
jae
sub
jno
pop
jge
cli
outsl
xchg
cli
xor
aad
push
repnz
mov
lea
insl
sbb
in
pop
das
mov
int
lcall
mov
iret
adc
push
jbe
jge
add
pop
jl
shll
dec
mov
jno
clc
inc
jae
in
pushf
mov
rcrb
xchg
aad
sub
adc
lods
pop
pop
jbe
push
jg
mov
and
pop
pusha
push
popa
cli
ljmp
lahf
testb
aam
testl
movups
mov
mov
cmpb
jo
cmpsl
decb
add
es
std
cmp
adc
repz
or
xchg
mov
push
xor
fnstsw
nop
nop
inc
clc
lcall
mov
lods
notl
xchg
adc
sahf
das
mov
xor
and
popa
mov
adc
mov
inc
int
xlat
dec
fnsave
ret
shl
popf
jnp
mov
and
and
or
adc
push
adc
sub
scas
adc
mov
arpl
lods
mov
fnstsw
or
aam
jb
movsl
push
imul
call
sub
dec
mov
cld
rcrl
lods
into
popa
and
gs
fdivl
adc
dec
cmp
popf
aad
lock
adc
inc
aam
push
and
add
addr16
sbb
lods
mov
sub
or
jmp
or
pop
or
shlb
call
pop
nop
int
mov
ljmp
iret
cld
call
inc
bound
je
pop
scas
nop
sti
lret
xor
inc
or
cmp
out
std
decl
loopne
das
lods
inc
mov
int
loop
xor
sahf
pop
and
outsl
mov
cmc
ja
add
xchg
stc
dec
repnz
cmpsl
insb
flds
scas
add
mov
clc
pop
mov
and
push
push
cmc
nop
jne
dec
mov
mov
mov
lods
pop
jnp
jl
out
jmp
sti
jmp
add
lds
dec
daa
cmp
inc
frstor
jle
pop
and
sub
jmp
aad
mov
mov
xchg
insb
lea
cwtl
cmp
in
mov
pop
sub
bswap
lods
bound
lret
test
imulb
adc
pop
jne
andb
cwtl
sub
xchg
dec
pusha
xor
jb
sub
mov
ds
mov
test
scas
lcall
movsl
sub
adc
mov
fldt
mov
mov
sub
insl
popf
sbb
mov
mov
push
sub
sbb
lods
int3
ljmp
and
shll
jns
sub
jmp
pop
call
aaa
inc
push
mov
jb,pn
dec
int
xor
dec
push
cmp
jmp
cmc
orl
movsb
fisubs
rcll
add
jmp
lods
gs
scas
movsl
pop
mov
pushf
jle
scas
sub
mov
mov
addr16
jns
bound
pusha
jb
scas
js
push
push
mov
sahf
jbe
push
push
scas
pusha
fldpi
jno
xchg
dec
and
mov
ja
cmc
cld
out
xchg
jns
xchg
xchg
fsubrs
mov
int3
sub
aad
pushl
xor
hlt
sub
or
mov
dec
xchg
mov
stc
pop
pop
jp
jno
mov
outsb
aad
sbb
push
xchg
xchg
lahf
cmp
push
nop
jo
jp
push
or
cmc
lods
sub
and
jbe
push
lret
fnstsw
lods
jbe
data16
jno
pmulhw
repz
and
mov
stc
popf
sub
sub
adc
cmpsl
int
test
add
mov
add
lea
cmp
add
pop
jo
call
stos
fs
mov
push
sub
loop
mov
inc
dec
and
fwait
mov
roll
mov
loope
or
add
push
mov
jns
shll
mov
sti
loopne
pop
and
xchg
icebp
aaa
dec
add
out
loopne
fildll
cwtl
orb
pusha
xchg
addr16
push
and
loopne
scas
aas
dec
int3
jnp
or
sub
outsl
jecxz
cmpsl
ljmp
xchg
jmp
mov
or
xchg
jg
xchg
fs
mov
add
sub
lahf
fisttpl
xor
sbb
push
adc
sub
xchg
mov
arpl
nop
xchg
es
add
arpl
push
inc
mov
out
insl
jle
test
imul
stc
inc
js
fidivs
outsl
sub
out
cmp
ret
mov
repz
rolb
arpl
xchg
hlt
fsincos
mov
gs
in
mov
pop
pop
fs
push
mov
imul
std
int3
dec
xchg
pop
into
push
rol
movsl
mov
add
stos
add
mov
jns
stos
dec
adc
mov
repz
fcompl
and
jmp
sub
sbb
and
mov
int
and
mov
inc
mov
cmp
and
dec
lea
nop
fcompl
or
push
jl
into
push
std
fimull
sbb
negb
jp
sub
and
xchg
inc
mov
je
xchg
cmpsb
filds
push
pop
mov
pushl
mov
loopne
leave
cmp
jecxz
aam
xchg
adc
lds
add
test
mov
fwait
and
fprem1
sub
mov
lret
cltd
dec
movsb
add
pop
or
jno
adc
test
adc
sar
mov
pushf
and
or
insb
ret
cmp
jns
outsb
mov
test
in
lahf
aad
stos
dec
sub
pop
outsl
sub
cmp
add
xchg
dec
mov
or
std
lret
sub
sahf
adc
int
mov
int3
hlt
pop
mov
sub
push
xchg
mov
bound
lods
cmp
aad
push
je
movsl
or
dec
ja
adc
sub
jnp
pminub
mov
ret
xchg
or
movsl
and
rcl
dec
fbld
push
stos
mov
jge
pop
pop
push
fists
fsubrp
mov
xlat
fistpll
sub
adc
inc
aad
inc
loopew
xchg
mov
shl
mov
jmp
lods
loopne
stc
xor
les
ja
lods
out
into
and
cmp
jo
sbb
pop
jle
and
pop
js
add
aad
adc
or
push
xchg
inc
jne
dec
push
xor
lds
js
sti
popa
aam
jecxz
jecxz
repz
mov
inc
push
cmc
mov
fimuls
xor
or
cmc
jle
push
int
lods
sub
shll
and
cmp
push
mov
data16
xchg
hlt
pop
mov
mov
dec
ret
inc
dec
jl
jns
mov
stos
ret
xchg
cli
add
jno
xor
rcr
jo
repnz
add
insl
dec
bnd
cmpsb
shrl
add
fsubr
inc
cmp
xstore-rng
cmpsl
inc
xchg
clc
in
jmp
cmp
fmuls
dec
std
movsl
jmp
sub
inc
outsl
test
xor
sbb
or
lret
xchg
inc
fwait
lcall
ficoml
lret
push
mov
sub
mov
dec
aam
xlat
addr16
ljmp
jge
mov
cmp
setne
pop
adc
outsl
pusha
ljmp
add
sbb
mov
stc
sub
addr16
mov
xor
or
out
js
adc
lea
iret
cld
cmp
sub
mov
ja
or
dec
dec
std
cmc
insl
js
cmp
sub
add
or
or
int
stc
popf
xchg
mov
test
leave
into
call
in
mov
out
rep
jmp
cmp
mov
or
loop
aad
xchg
pop
mov
imul
mov
push
outsl
sub
call
xchg
xor
inc
lcall
push
sub
or
adc
add
scas
jnp
out
jmp
jecxz
loope
dec
mov
inc
call
cmp
dec
in
fucomip
inc
sahf
mov
fidivs
sbb
hlt
repnz
mov
add
pop
lock
addr16
or
fldcw
divb
cmp
popa
cmp
sti
cwtl
mov
push
enter
pop
jecxz
add
push
mov
and
sub
push
shl
cmc
hlt
fwait
cli
cmpsl
mov
iret
repz
sbb
stos
outsl
pcmpeqd
hlt
out
bound
stos
sarb
imul
cli
adc
sub
testb
ud0
test
and
or
in
lods
add
xchg
and
arpl
dec
mov
xor
into
rorb
or
mov
sub
push
adc
aas
dec
xor
pop
mov
inc
in
out
movsb
pushf
mul
jecxz
xor
je
sbb
push
bound
pop
dec
push
out
lods
push
dec
sub
cld
popf
lock
lret
call
aad
movsb
dec
mov
repnz
pop
mov
add
cli
pop
mov
aad
adc
dec
ret
ss
or
cmp
cmp
test
and
int
push
lret
dec
xchg
loope
cmp
jl
push
push
scas
aad
icebp
or
shlb
sahf
and
fiaddl
scas
xor
out
xchg
test
and
mov
int
mov
and
out
rclb
out
cmp
gs
push
fwait
stc
stos
cmc
push
lcall
dec
fildll
iret
jae
cmp
xchg
or
popa
ljmp
adc
jge
add
out
or
stc
xchg
call
xor
imul
cmp
pop
or
out
dec
aad
and
int
repnz
lret
cmp
popa
sbb
lock
mov
les
loopne
scas
ret
imul
xchg
sahf
scas
lret
jb
mov
lahf
mov
test
sub
cli
cmp
shrl
xchg
xor
testl
dec
ljmp
mov
cmpl
mov
cmp
stos
sbb
pop
xor
out
sbb
pmaddwd
xchg
adc
adc
xchg
loope
faddp
pop
aad
adc
mov
mov
adcb
or
cmc
push
pop
js
push
jnp
gs
pop
add
ret
mov
inc
cmp
mov
add
jp
jl
push
inc
repz
popa
lods
fs
dec
push
pushf
pop
dec
sub
or
jecxz
xchg
dec
or
and
cli
jns
xchg
pop
pop
ret
rep
sti
inc
push
cmp
ret
inc
sti
mov
aad
ret
mov
mov
nop
std
stc
lods
add
out
sub
xchg
mov
or
mov
arpl
push
cmp
cmp
fldt
test
mov
add
rcrb
rorb
ss
pop
mov
lahf
push
inc
or
clc
dec
out
mov
dec
es
outsb
cli
xchg
lds
or
out
dec
pop
mov
push
xor
jecxz
lret
mov
fsubrp
push
dec
stc
arpl
sub
xchg
xlat
pop
adc
mov
std
mov
imul
sbbb
xchg
lods
or
repnz
jl
arpl
std
popf
das
push
dec
xor
mov
in
bound
sbb
adc
jecxz
int
jae
pop
mov
clc
xchg
sbb
push
dec
jbe
sbb
xchg
imul
or
xchg
popf
inc
lret
lahf
repz
out
or
out
imul
ds
aad
lret
iret
iret
dec
cmp
fs
or
cmp
das
aas
in
xor
shufps
mov
lods
shld
out
sub
mov
xor
mov
push
push
fidivs
mov
test
add
into
fsubrl
xor
outsl
outsl
inc
or
xchg
insb
adc
lea
sub
in
fwait
in
mov
lea
jb
sahf
xchg
in
cmpsb
jmp
sub
popa
sub
lods
cmp
cmp
mov
push
adc
jno
fimuls
and
mov
imul
jno
orl
mov
gs
orb
push
in
scas
mov
xor
loopne
lods
cs
fdiv
mov
jmp
aad
in
pushf
cmc
lods
pop
adc
sar
cmp
test
aad
lahf
jns
adc
cltd
cli
xchg
outsb
aad
xchg
imul
dec
popf
mov
jecxz
adc
or
mov
pop
aaa
lock
mov
jl
sti
repnz
les
mov
sub
pop
testb
mov
fucom
mov
cmc
mov
sub
cltd
and
ret
pusha
xchg
jne
out
mov
negl
fists
add
sahf
ss
je
call
frstor
test
js
or
gs
push
lea
xor
or
loope
jnp
out
movsl
mov
adc
arpl
js
mov
clc
mov
iret
cs
lret
add
and
push
pop
negb
jmp
outsb
aad
std
xor
mov
test
push
int
daa
rorb
sub
nop
sub
sub
inc
jb
xchg
and
out
push
cmc
jge
jno
out
js
cmpsl
jbe
aam
stc
mov
or
pop
push
lods
dec
setno
sub
and
stos
test
je
or
divl
jle
xchg
les
cld
les
mov
dec
cwtl
cld
xchg
and
push
or
sahf
jp
mov
jl
pop
into
rcr
or
fcomps
dec
ja
pop
push
les
ficoms
mov
pop
mov
scas
adc
sub
aam
stos
and
int
les
lret
in
add
aad
mov
lds
jle
jbe
push
sub
jp
ja
jnp
xchg
add
or
push
out
inc
mov
jp
push
dec
loope
lods
pop
push
test
bound
popa
lds
loop
dec
mov
cld
cmc
lcall
aaa
jnp
scas
xchg
ljmp
mov
bound
jo
scas
cmc
nop
outsl
mov
push
std
and
lock
push
cmpsl
cmp
dec
es
cmp
push
mov
jo
mov
fnstcw
orl
repnz
and
push
jl
push
cmp
fsts
cmp
push
pop
add
xor
hlt
jle
xlat
cld
xor
fisttpl
std
in
pop
mov
xchg
ret
jmp
sub
cmpsl
mov
jne
aad
cs
popa
rorl
idivl
xchg
sub
int
adc
and
and
dec
add
xchg
or
repnz
mov
inc
adc
jl
push
mov
mov
mov
shr
inc
push
imul
mov
es
add
into
xchg
add
inc
in
pop
pop
cmp
adc
mov
pop
cmc
lods
negl
mov
inc
xchg
xchg
pop
mov
loop
mov
mov
std
mov
mov
test
lahf
int
sbb
imul
aad
fwait
ret
jo
mov
or
dec
dec
fwait
cmc
ss
mov
cmc
adc
mov
dec
hlt
lea
inc
in
mov
fdiv
mov
fnstenv
cmp
add
mov
arpl
out
pop
popa
negl
repz
imul
jne
xor
out
xchg
insb
test
fwait
mov
add
imull
dec
sub
push
xchg
jecxz
mov
movl
stos
xchg
gs
enter
push
stos
push
idivb
sub
dec
aad
cmp
in
push
cld
mov
push
cmp
int
cmp
pop
sbb
fsub
pop
aam
cmp
jecxz
lahf
lods
xchg
sbb
addr16
mov
mov
push
adc
out
adc
push
imul
or
and
psubsb
jg
xor
cmp
jnp
inc
xor
sub
sbb
lcall
dec
jp
pop
icebp
lea
add
sar
xchg
insl
inc
call
out
loope
and
pop
jg
mov
aad
out
bound
cmp
int
sahf
testl
fst
outsl
inc
dec
jmp
or
out
cli
cmc
or
fisubrl
mov
test
enter
xchg
push
rcl
jmp
iret
vpcmpgtw
add
cmc
push
fiadds
pop
orb
jp
jnp
cld
add
pop
jb
jg
stc
sti
ja
and
lods
fcomps
pop
fistps
aad
outsl
dec
out
push
js
add
mov
and
xchg
imul
cmp
dec
mov
jmp
jnp
fisttpll
push
jl
idivl
sub
mov
cld
mov
push
into
fcom
out
stos
int
sub
cmp
mov
xlat
lods
xchg
dec
xchg
clc
das
ffree
popa
lret
out
or
stos
fisubrl
inc
mov
jmp
sub
inc
mov
jo
jge
pop
xchg
aad
xchg
les
xchg
lea
fst
testl
mov
sub
dec
dec
cmpl
out
movsl
sbb
call
mov
xchg
dec
xlat
and
icebp
into
inc
mull
lods
and
mov
push
cmp
int
cmp
xchg
repnz
dec
imul
or
or
push
outsl
int
mov
scas
pop
or
dec
iret
repnz
decb
getsec
jmp
push
xor
fmul
test
fcoms
mulb
cmp
js
stos
jnp
ret
lcall
iret
mov
loope
mov
dec
add
cmc
fs
jmp
aaa
pop
lret
push
call
repz
mov
adc
jbe
xor
loop
andb
lods
adc
inc
inc
cs
or
lods
ljmp
fisubrl
ror
test
push
lock
je
pushf
movb
iret
and
fsubl
in
sbb
jnp
jmp
daa
jge
adc
cmp
xchg
sub
dec
sbb
mov
pop
xchg
in
out
loope
add
mov
aad
mov
pop
jge
xchg
sub
fs
mov
mov
jecxz
mov
dec
cmp
das
lods
cld
pushf
popa
pop
aaa
mov
cmp
mov
stos
clc
jb
lods
sbb
cmp
loop
add
bound
test
pop
data16
or
xor
repnz
lahf
jge
jo
nop
push
sti
sarb
push
aam
sahf
xchg
gs
lcall
sub
or
sarl
mov
shrl
push
xchg
push
movsl
mov
dec
xchg
mov
add
ffree
jp
jb
cmp
out
inc
push
cli
in
cmp
loopne
jecxz
dec
sbb
test
mov
pushf
dec
pop
pop
nop
push
in
fdivr
out
jns
outsb
push
mov
fistpll
pop
enter
ljmp
xchg
pop
jbe
in
pop
aad
jge
dec
jmp
popf
adcl
negl
mov
imul
daa
shrb
adc
cmc
mov
sti
xchg
jmp
movsb
sub
mov
bound
pop
sbb
dec
xchg
cmpsl
push
or
pushl
int
mov
sub
lcall
dec
pop
xor
gs
and
jmp
jo
or
hlt
jmp
xor
xchg
add
or
jnp
mov
cltd
jae
xchg
jae
mov
add
lds
sub
scas
xchg
mov
sahf
pop
push
lret
out
lods
call
or
dec
dec
or
inc
nop
adc
and
push
dec
or
mov
bound
mov
cmp
and
xchg
inc
out
in
cmpsl
pop
pusha
add
inc
fisttpl
jns
scas
inc
sbb
test
rcr
mov
imul
xchg
call
pusha
push
mov
stos
fwait
and
inc
pop
mov
or
add
divl
and
xchg
mov
cli
inc
and
push
scas
aad
outsl
rorl
hlt
movsl
push
adc
and
jg
push
out
mov
repz
inc
rol
xchg
mov
add
leave
mov
dec
out
je
movsl
sub
mov
cmpsl
mov
add
add
mov
out
add
loope
dec
sub
mov
pop
int
aad
ud0
das
in
test
fs
cmpsl
lods
mov
lcall
or
pop
ss
xor
sahf
cli
into
imul
lock
out
aad
cmp
out
aad
cmp
sub
std
inc
and
sbb
incb
push
push
add
cmc
jmp
add
test
pop
lds
sbb
mov
stos
repz
dec
fwait
xchg
loopne
movsb
mov
mov
cltd
jns
fnstsw
push
pop
sbbb
frstor
inc
jp
fadds
faddl
sub
xchg
push
jno
xor
dec
bound
lret
cmc
ja
add
mov
outsb
xchg
or
das
fs
daa
ljmp
inc
dec
mov
or
mov
push
int
sbb
into
aam
mov
call
shrb
sub
hlt
cltd
mov
ljmp
push
add
and
test
dec
and
pop
xchg
loop
mov
pusha
xchg
sub
sbb
xor
div
mov
ljmp
outsl
ja
rcr
gs
push
popa
mov
icebp
pop
aad
mov
imul
add
adc
and
xchg
cmp
enter
icebp
shrl
xchg
add
add
clc
aad
jge
scas
mov
outsl
fmul
sub
out
push
fdivr
cmc
pop
pop
sbb
ret
fs
add
pop
sbb
dec
out
cmp
shl
mov
adc
sub
imul
push
pop
mov
mov
pop
or
insl
lahf
sub
add
xor
push
in
into
dec
je
xchg
mov
pushf
mov
dec
dec
std
mov
mov
mov
sub
mov
cmc
adc
lcall
arpl
stos
push
shl
in
mov
mov
cmc
enter
inc
cmp
pop
in
aad
in
dec
cmp
js
cmpsl
cmp
cmp
arpl
imulb
ror
add
xor
test
cmc
clc
js
cltd
repz
push
jns
mov
mov
xchg
clc
jmp
imul
out
mov
add
sbb
loop
sbb
pop
xor
and
mov
and
xchg
fcomip
mov
aad
shl
adc
mov
scas
jbe
fimull
jmp
in
adc
mov
and
mov
sub
rcrl
and
or
cli
dec
push
xchg
daa
xchg
jmp
and
test
std
jns
sub
xchg
pop
lods
push
cmp
out
movsl
jl
add
scas
push
adc
popa
fwait
dec
pop
fimuls
int
adc
mov
cmp
or
fimuls
sub
aas
aam
arpl
jge
lods
fildl
cmp
jo
xchg
cmpsl
sbb
or
mov
mov
ficompl
mov
in
enter
lcall
hlt
int
jno
jb
aad
jae
sbb
fs
je
imull
and
mov
jo
mov
add
mov
test
xchg
cld
iret
or
xor
mov
dec
and
fisubrs
daa
dec
jl
lcall
cwtl
mov
xor
mov
xchg
es
sbb
xor
pop
mov
adc
xchg
aad
lahf
inc
jge
clc
addr16
lahf
repnz
or
test
popf
inc
dec
cltd
lahf
scas
adc
orl
pop
loope
cmp
mov
mov
roll
jns
xchg
adc
mov
xlat
into
outsl
stos
push
lea
cmc
push
inc
jns
lock
sbb
mov
popa
inc
sub
pusha
or
hlt
add
out
call
sub
and
mov
pop
rcrb
and
and
inc
int
or
add
dec
mov
sub
mov
mov
pop
enter
lahf
stos
es
jmp
xor
out
lods
fstl
inc
mov
out
dec
jnp
iret
pusha
mov
aad
hlt
pop
cmp
add
into
xchg
sub
push
or
idivb
sbb
sbb
call
add
dec
fisttpl
or
cmpsb
fwait
icebp
mov
mov
lods
cmp
lods
jmp
repnz
ds
fisttpll
push
addr16
xchg
sub
lcall
repz
lcall
sbb
aaa
jl
rcrb
sbb
ficoml
mov
sub
sbb
outsb
out
dec
movsl
jne
cmc
lret
popa
aad
pusha
lahf
mov
fidivl
pop
inc
cmpb
getsec
mov
adc
aad
adc
testb
outsb
dec
xchg
je
push
inc
iret
aad
jle
mov
nop
jmp
pushf
imul
mov
orl
inc
adc
jmp
nop
jl
shll
addr16
imul
xchg
add
jp
ror
push
nop
jp
dec
imul
inc
push
pop
jbe
cmp
xchg
idivl
pop
lods
cmc
pushf
scas
rcl
out
int3
inc
shll
imul
mov
dec
leave
out
mov
insl
sti
out
pop
test
fsub
jg
pop
mov
pop
popa
aad
and
addr16
pop
out
jl
in
outsb
lds
or
stc
lcall
sub
loopne
push
gs
sbb
adc
stos
pop
jb
mov
or
js
xchg
rcl
std
cmp
and
jge
pop
xor
lds
cmp
xchg
roll
sbb
xchg
loopne
int
idivb
add
mov
repz
rorb
je
inc
imul
cmc
mov
adc
and
shrl
xor
cmp
mov
xlat
sbb
les
imul
push
jbe
outsl
les
fnstcw
aad
pop
je
subb
pmaddwd
ss
push
cmpsl
adc
jae
or
jb
jbe
ljmp
outsl
fdivrs
cmp
cmp
fwait
jecxz
add
xchg
jns
addr16
test
movsb
nop
mov
xor
dec
mov
movsb
or
loope
push
mov
dec
repz
sahf
xor
in
and
adc
arpl
push
mov
push
adc
cmp
movsb
std
add
add
arpl
in
dec
iret
lea
pop
mov
aam
aam
int3
adc
lcall
push
mov
and
sub
movsl
call
add
push
mov
out
or
push
lds
pop
sub
xchg
push
jg
cmc
sub
push
sub
jge
adc
addr16
testl
add
lods
and
int
jb
sti
cmc
sub
mov
or
aad
repz
int3
fdivrl
lea
dec
sti
xor
inc
dec
or
jo
icebp
sahf
out
rcrb
xchg
inc
and
in
jecxz
xor
sub
rorb
adc
test
lea
imull
pusha
dec
imul
popf
dec
mov
das
adc
enter
jl
mov
aad
out
aad
mov
xchg
or
sbb
or
cmp
sbb
pop
lcall
push
adc
popa
push
bound
pushf
mov
mov
outsb
mov
and
push
int
test
sbb
pusha
test
lcall
dec
cmc
pop
mov
mov
iret
xlat
and
aam
jnp
fsubrs
mov
and
cmc
gs
repnz
adc
enter
and
into
insl
mov
iret
das
cmp
jb
mov
pop
mov
add
int
sbb
popf
stos
pop
imull
ret
cld
std
xor
aad
jne
outsl
jl
adc
into
test
cld
into
nop
jge
cmp
stos
lret
sub
xor
or
pop
js
out
lods
popl
mov
cmp
pusha
sti
lods
pop
xchg
pop
dec
icebp
inc
icebp
stos
cmpl
push
or
cli
mov
sub
icebp
roll
lods
inc
adc
push
imul
hlt
cmp
stos
fldcw
pop
sub
into
test
and
inc
push
gs
ror
xchg
ror
add
lahf
repz
mov
loope
aaa
sub
aad
push
sti
xchg
clc
sub
xorps
adc
sti
loopne,pn
mov
je
out
jmp
mulb
sbb
push
in
sbb
popl
push
in
and
cmpsl
ret
jo
cmp
aad
orb
mov
mov
aad
xor
scas
or
movb
aad
lret
loope
pop
into
loop
andb
mov
xchg
pusha
insb
or
dec
xchg
inc
cld
outsb
push
jnp
sub
dec
or
push
pop
jmp
dec
sub
dec
xor
dec
xchg
lea
cmpsb
subb
aad
dec
insl
mov
cli
jmp
testl
fldl
xchg
dec
movsl
mov
xor
insl
sbb
push
or
mov
push
cmp
pop
int
pop
scas
scas
or
mov
add
push
aad
adcb
jbe
incb
jmp
jo
pop
jo
cmc
push
leave
mov
mov
jb
imul
arpl
mov
data16
cs
inc
fcoml
push
leave
cmp
sbb
or
cmc
inc
insb
sbb
xor
insl
jmp
leave
sub
xor
iret
aad
mov
mov
push
lods
icebp
jg
push
push
lcall
lahf
cmp
mov
arpl
or
jnp
fsubrl
sbb
mov
lea
cmpps
fwait
imul
xchg
or
fstpt
cmc
fildl
cmp
dec
js
jbe
lea
fs
push
add
adc
aad
push
cmp
xor
or
mov
dec
dec
scas
in
push
jecxz
and
popf
pusha
mov
push
and
cmpsb
mov
mov
cmp
pop
in
imul
cmc
cmp
push
push
incb
and
call
scas
fistps
lock
ja
rcl
scas
lahf
dec
lds
idiv
adcl
mov
pmaxsw
orb
imul
out
or
mov
clc
rol
mov
mov
test
adc
xchg
and
mov
pop
frstpm(287
cmc
push
mov
lock
push
push
cmp
jns
or
sahf
in
int
mov
aad
mov
test
xor
sbb
sar
fnsave
int
sarl
sub
shlb
adc
fwait
jno
sub
dec
mov
aas
movsl
push
dec
mov
or
jl
imul
cmp
in
mov
xor
aad
inc
aaa
dec
not
push
jmp
or
loope
std
test
sub
jns
or
cmpsb
jbe,pn
add
pop
rcrb
pop
into
jle
pmaddwd
push
in
pop
xchg
in
sti
and
ret
sbb
out
popa
xchg
push
xchg
movsb
adc
les
mov
dec
xor
cmpsl
pop
xchg
or
jns
es
pusha
xor
jge
cmp
cmp
int
ret
dec
jnp
rcrb
ds
add
jecxz
lds
stos
pop
imul
add
loop
dec
pop
sub
dec
dec
inc
xchg
in
jp
test
cmp
les
nop
fxch
cmc
fisttpll
scas
or
pusha
mov
push
push
lock
mov
adc
in
inc
xor
mov
xchg
outsl
mov
popf
or
mov
cltd
add
push
and
dec
cmc
mov
push
shrl
les
dec
scas
or
gs
adc
lahf
push
imul
push
fisttpll
std
and
aas
aad
jb
stos
popl
enter
mov
pusha
popf
dec
pop
jmp
jno
cmp
fimuls
adc
mov
movsb
adc
ljmp
paddq
mov
mov
adc
and
rcll
add
cmpsb
sub
aad
add
sbb
mov
sub
sub
pop
icebp
push
fistpll
mov
iret
adc
fs
jp
jle
testl
call
or
pop
mov
add
or
int
inc
iret
sbb
ret
das
movsl
sbbl
lret
xchg
pop
push
fistpl
jae
add
cwtl
imul
shlb
dec
inc
mov
xor
ljmp
or
fwait
mulb
fldcw
push
mov
decb
pushf
in
mov
xor
push
mov
pop
fsubl
fwait
push
pop
sub
bound
xor
adc
jp
test
insb
adc
mov
stos
lret
imull
jbe
repz
sub
ja
jg
jo
cmp
sub
and
push
in
into
outsl
dec
ss
repz
andnps
stos
std
add
xorl
mov
pop
cmp
push
repz
aad
into
mov
adc
push
sbb
cmc
fmul
ret
stc
fadds
mov
test
cmpsb
in
sub
cwtl
cld
xchg
insl
mov
inc
lahf
cli
andb
dec
mov
jmp
and
dec
add
mov
not
ret
inc
xor
and
imul
aad
or
xor
jb
iret
shll
adc
lea
imul
daa
out
push
sbb
arpl
mov
add
dec
rorb
lret
inc
in
cli
sub
mov
push
cmpl
lahf
and
ds
ljmp
inc
mov
and
fisubs
mov
xchg
cmp
mov
mov
into
int
sbb
mov
add
xor
mov
out
push
jl
gs
push
movb
out
outsl
stc
orb
movsb
sbb
iret
push
xchg
lret
mov
stos
js
or
cmp
adc
add
nop
sbb
test
cmc
add
pop
xor
add
dec
pop
mov
out
loope
data16
leave
test
pop
jle
sub
inc
mov
out
imul
mov
mov
jb
adc
nop
sub
inc
xchg
out
call
jecxz
int
xor
sti
lods
orb
stc
pop
leave
aad
inc
or
lahf
xchg
data16
jno
aaa
aas
push
inc
cmc
inc
popf
mov
jnp
push
push
dec
lahf
xchg
mov
push
or
aam
fldpi
mov
push
rol
scas
fwait
mov
or
inc
xchg
add
fwait
std
sub
cmp
push
sub
daa
test
fwait
inc
add
xor
addr16
and
jbe
sahf
into
cmpsb
jp
mov
faddl
adc
mov
dec
inc
sub
pop
lock
cli
jb
mov
inc
adc
sub
testb
es
cli
mov
in
and
les
scas
in
adc
orl
mov
mov
push
dec
popl
xchg
push
mov
xor
and
fisttps
dec
mov
fs
fidivl
dec
pop
mov
mov
push
in
in
and
cwtl
push
imull
or
cmp
pop
aad
outsl
movsl
mov
push
sbb
xchg
lds
sar
repz
out
mov
sub
add
jge
dec
rorl
je
test
mov
ja
fistpl
cmp
int
popf
inc
push
sbb
loope
insl
in
lea
mov
inc
sbb
cmpsb
sub
mov
adc
sar
push
movsb
cmc
int
sub
mov
test
int3
aad
mov
or
xchg
pop
push
decl
xor
cmp
lods
pop
xlat
decl
cmp
mov
jg
and
push
push
xor
popf
aam
popa
rorb
stc
outsl
adc
dec
out
cmp
out
or
cmp
lret
push
mov
pushf
or
aad
add
mov
cmp
xchg
pop
lods
lcall
jmp
dec
sahf
int3
fs
xor
xlat
xor
mov
test
cmc
jo
cmp
lds
cltd
xlat
ds
stos
mov
pop
rclb
in
or
cld
sub
sahf
int
neg
push
pop
xchg
lds
cmpb
xchg
iret
mov
dec
or
dec
jmp
test
into
dec
ljmp
xchg
loope
or
and
jecxz
loope
push
push
jle
imull
xor
pop
fisttps
cmc
or
sub
test
stos
sar
jmp
cwtl
imul
mov
test
lcall
jp
lods
jbe
bound
imul
mov
add
push
lods
into
bound
into
xchg
lret
sub
jmp
repnz
out
imulb
div
cmp
cs
mov
repnz
cmp
hlt
ss
sbb
fwait
in
ds
ret
and
out
aad
out
imull
adc
pop
js
scas
js
ss
lret
dec
xchg
or
data16
notl
lods
sub
lods
sub
imul
xor
orl
rcrb
sub
into
adcl
setne
lret
jmp
loope
xor
push
fldl
lds
xchg
cmp
rorl
or
push
cmp
mov
es
sbb
mov
pop
daa
out
call
sbb
call
aad
jb
into
aad
adc
xchg
popf
fs
test
idivb
imul
xchg
adcb
push
and
sub
xchg
hlt
imull
int3
ja
pop
lret
or
loop
adc
cmp
mov
mov
inc
insb
mov
mov
adc
cmp
aad
fst
cmc
xor
in
test
aam
cwtl
sbb
adc
cmp
mov
and
mov
pop
add
int
mov
dec
add
ja
push
out
aam
dec
jp
jmp
dec
add
or
xchg
loope
movsl
sbb
jmp
ss
roll
movsb
xchg
mov
into
push
popf
mov
sub
in
mov
mov
inc
inc
gs
jnp
or
push
fs
jmp
xchg
jecxz
mov
jbe
lahf
dec
unpckhps
adc
jl
mov
mov
pushf
pushl
into
ss
and
mov
addr16
push
mov
and
repnz
pop
lods
push
fisubl
mov
js
out
test
push
cmp
inc
dec
fidivrs
push
shlb
je
cld
inc
sbb
int3
or
dec
insl
lret
fisubrs
fsubs
push
jl
and
or
cmp
mov
nop
mov
adc
or
mov
push
test
jmp
leave
lods
add
cmp
pop
enter
in
jp
dec
mov
and
notb
fwait
cmc
psubsb
lock
fldcw
aad
cmp
mov
inc
push
out
cmp
aam
lret
lods
and
imul
inc
dec
filds
outsb
aam
ja
imul
aaa
jo
repz
jge
iret
xor
xchg
loope
je
ret
adc
fs
push
mov
or
test
sub
dec
jae
test
and
pop
dec
push
es
push
xchg
decb
and
xchg
push
cmpsb
addb
mov
lret
jno
and
cmp
loop
shrl
aad
jle
mov
ret
xchg
mov
je
jb
outsb
out
loopne
and
cwtl
test
add
stos
jnp
stos
add
mov
jmp
add
out
in
xor
mov
add
pusha
jno
add
xor
sbb
por
aad
stos
popa
xchg
daa
rcll
je
adc
add
push
mov
adc
wrmsr
mov
ds
rcrb
decl
add
daa
sbb
or
rcrl
sub
or
stos
pop
stos
inc
cmpb
pop
jbe
mov
les
jb
stc
push
cmc
mov
add
dec
mov
popa
push
cmp
stos
and
test
sti
ss
pop
mov
xchg
aad
clc
clc
xlat
test
stos
jle
iret
jne
out
xchg
push
std
test
es
imul
ljmp
movb
fists
inc
cli
dec
push
mov
mov
add
scas
sbb
push
lret
pop
rcr
aad
outsl
sub
sarl
cmp
jb
js
jle
jp
adc
or
dec
inc
xchg
add
and
lock
jb
dec
addr16
dec
sub
adc
mov
idivb
mov
pop
aad
dec
test
mov
push
int
adc
adc
aas
lret
push
mov
out
test
xchg
ljmp
and
push
fadds
into
lret
insb
int3
daa
jb
add
add
add
aad
lret
or
cmpsl
sbb
and
mov
test
dec
cmp
hlt
and
pop
lock
or
cmpb
or
push
xchg
cmp
adc
push
mov
pop
notl
jmp
push
inc
mov
mov
mov
sbb
push
lods
sub
divl
outsb
jl
cmp
mov
in
sbb
por
xor
add
xor
mov
xchg
jg
mov
pop
cmp
cli
or
jno
mov
jge
sub
pop
pop
fcmovne
out
mov
mov
or
or
cmp
lret
mov
xchg
andnps
movsb
es
inc
and
mov
cld
sub
sarb
cli
jle
pop
mov
mov
mov
pop
xor
and
addl
shlb
cmp
mov
leave
add
lods
ljmp
popa
popf
inc
in
dec
jbe
jge
nop
lcall
xor
or
jne
cmp
arpl
inc
lods
mov
int3
adcb
in
std
nop
int
jmp
popf
pop
cmovno
shr
stos
add
push
addr16
mov
or
les
xchg
dec
or
inc
sti
fbld
pop
jns
or
inc
dec
mov
jmp
or
mov
xchg
add
aas
imul
jl
fdivrl
cli
or
jge
flds
mov
outsb
push
cmp
fimuls
loop
aad
ret
cmp
push
xchg
cs
out
jnp
and
jp
daa
pop
mov
jecxz
jne
lcall
setle
cmp
mov
adc
ljmp
jne
pop
sub
lahf
mov
testl
packuswb
mov
add
jmp
xchg
test
into
mov
mov
mov
pusha
mov
icebp
xor
pop
pusha
test
mov
mov
sbb
push
in
lock
std
xchg
dec
jns
popf
lea
iret
stc
call
jg
repnz
outsb
mov
inc
std
je
dec
lods
nop
icebp
push
sbbl
mov
or
push
out
ds
jg
xchg
sbb
or
and
add
cmpsl
leave
in
mov
insb
mov
xchg
test
mov
or
arpl
aad
aaa
or
leave
cmc
and
std
adc
cmp
shll
pop
sub
int
sbb
sub
leave
iret
mov
push
or
pop
dec
cmc
scas
xor
push
sti
aaa
jns
add
lods
lret
call
mov
sub
push
add
decl
inc
cmp
mov
lret
jg
cltd
or
and
repnz
add
imul
mov
and
adc
jl
cmp
stos
add
outsb
pushf
xor
in
rsm
lret
mov
je
xlat
and
les
dec
rcrl
jge
pop
jmp
scas
std
xchg
mov
rcrl
shl
xor
mov
loopne
inc
aas
dec
icebp
xchg
pop
out
dec
xchg
jo
movups
bound
test
fisubs
repnz
lcall
xchg
les
pop
loop
nop
sub
dec
pop
push
jmp
mov
mov
pop
les
loope
sbb
incl
or
and
shr
lahf
mov
xchg
inc
loope
out
jns
out
int
int
pop
out
imul
outsb
xchg
push
add
sbb
sahf
xor
ror
jp
shrb
in
dec
xchg
and
fisubs
mov
jne
stc
in
incb
imul
jle
jnp
add
mov
jle
mov
xchg
lret
popf
fidivrl
out
in
std
aad
frstor
push
jnp
lret
mov
and
add
jl
cmp
shrb
push
sti
int
fs
adc
jl
jae
bound
cmp
pop
push
or
jge
inc
mov
inc
imul
xchg
inc
pop
add
arpl
pop
int
imul
iret
cli
cmc
call
pop
pop
adc
stos
sarb
stos
fiaddl
and
out
add
loop
orb
push
push
in
lods
loope
xor
dec
lods
insb
add
cmc
jne
lds
xchg
adcl
std
cmc
insb
sbb
fcmovnbe
pop
es
bound
inc
mov
cmovno
loopne
fildl
iret
xor
push
jns
pop
iret
adc
mov
pop
fnstsw
mov
push
mov
and
aam
pop
mov
rorl
das
js
and
cmc
stc
mov
inc
ret
arpl
inc
or
pop
bound
pop
fs
movsl
cmpb
nop
enter
mov
xchg
stc
ror
mov
imul
lods
int3
cmpsl
mov
push
fldl
dec
push
call
pusha
pop
stc
add
adc
push
xchg
into
inc
and
sub
lods
rorb
xor
jmp
jmp
insb
ret
outsl
inc
mull
xchg
lret
decb
mov
dec
jo
cwtl
hlt
ja
sbb
pop
pusha
or
xor
sub
in
cwtl
jg
push
aas
jmp
cmpsl
into
adc
mov
pop
or
or
stc
setne
inc
pushf
mov
lock
mov
jb
jbe
mov
inc
fisttps
and
xchg
rorl
xlat
shll
sub
int
pop
int3
cmp
outsb
dec
out
mov
stos
fsubl
cltd
xchg
mov
jecxz
testl
repz
js
mov
rcl
inc
cmp
jb
mov
lcall
stos
xor
dec
and
inc
std
pop
int
or
mov
xchg
add
add
lds
xorl
or
aas
xchg
cmc
lcall
fmul
leave
int
or
stc
inc
dec
decl
cmp
stos
insb
iret
out
fldenv
cmp
stos
or
cmpsl
sbb
pop
pop
mov
pop
sub
out
test
pusha
xchg
mov
imul
inc
jbe
dec
lods
pop
int
adc
dec
mov
loop
jecxz
dec
or
push
add
out
arpl
nop
push
dec
cs
mov
xor
and
pop
outsl
mov
sahf
jb
stos
test
xchg
pop
test
mov
cmp
pusha
xchg
lret
out
int
inc
mov
sahf
rclb
jl
pop
jp
xor
add
loope
into
jmp
lcall
dec
push
popl
bound
in
mov
mov
cli
js
das
out
mov
xlat
jmp
clc
and
mov
repnz
or
push
push
mov
ljmp
cld
sub
cld
mov
jl
fwait
mov
fs
xor
dec
repnz
sub
cwtl
sbb
movsb
or
mov
imull
mov
fstpl
movsl
nop
insb
or
int
dec
xor
pop
ja
stos
add
out
inc
xchg
out
pop
lods
ja
pop
xlat
aas
push
imul
and
jp
dec
push
int
mov
mov
mov
rclb
sti
and
jmp
lret
mov
pushf
sbb
cmp
mov
cmpl
pop
xor
push
sub
cmpxchg
cwtl
popa
popf
adc
inc
adc
mov
arpl
jp
dec
dec
jecxz
out
jnp
and
sub
insb
pop
and
or
xchg
dec
mov
dec
xchg
jge
and
lahf
xchg
mov
ljmp
jnp
jl
dec
jg
mov
das
or
ret
sub
cli
mov
stos
mov
cmp
and
pop
or
aam
sub
fidivl
insb
jnp
gs
dec
aad
xor
arpl
movsbl
int3
cmp
fsubrs
inc
push
daa
stos
or
jnp
pop
mov
stos
inc
hlt
ja
cli
xchg
and
jae
mov
sahf
das
gs
fsubs
pop
lods
mov
lods
and
pmuludq
sbb
mov
hlt
cmc
push
jge
test
fldenv
mov
or
mov
push
or
pmaddwd
inc
nop
test
sub
push
ja
inc
cmp
inc
loope
push
mov
sub
test
imul
push
fidivl
in
dec
cs
cmp
stc
fabs
in
jl
fldl
jmp
or
dec
cmc
jecxz
outsl
xchg
pop
testb
fldcw
testb
pop
push
push
add
aam
pop
and
inc
mov
mov
cmp
cmc
imul
push
clc
jp
shrd
mov
sbb
rcrl
xchg
add
clc
popf
in
dec
mov
cmp
lods
push
push
jnp
mov
inc
aam
cld
mull
pop
aaa
sbb
cmpsl
add
xor
mov
jno
pushf
jns
lods
cmp
dec
sub
xchg
mov
gs
pop
push
mov
cmpsl
add
stos
push
mov
sbb
outsb
mov
lods
cmc
push
mov
fs
stc
aaa
pop
sti
sbbl
sahf
xchg
icebp
or
inc
xlat
jnp
js
dec
ds
out
xor
inc
pusha
dec
push
push
add
test
je
jo
aam
xchg
in
aad
mov
pop
aam
sub
xchg
mov
cmpsb
sti
aaa
sub
in
out
add
push
jnp
sub
push
pop
xchg
pop
mov
js
movsb
leave
and
dec
mov
or
add
cmp
inc
xor
les
imul
xchg
stc
sub
insb
mov
fadds
mov
push
in
inc
lods
mov
push
mov
inc
out
push
lea
aas
imul
js
loopne
addb
into
lds
sub
jge
adc
mov
cmpsb
orl
sar
aam
stos
data16
or
cmp
repz
notl
adc
adc
dec
in
and
test
xchg
jns
arpl
ss
sbb
xchg
mov
jne
adc
xchg
cmp
or
in
or
sbb
mov
fsubl
call
aas
pop
adc
and
cltd
mov
sahf
mov
mov
in
xor
repz
or
stos
xchg
mov
mov
fwait
stos
push
in
cmc
or
pop
pusha
add
xchg
pop
ljmp
dec
test
push
push
out
aam
out
std
dec
mov
icebp
fs
dec
cmp
add
mov
adc
or
and
adc
push
rorl
cmc
mov
in
mov
ljmp
ss
sahf
adc
aam
call
arpl
rcr
sbb
jnp
push
pop
shrb
xchg
xchg
dec
mov
mov
and
jp
out
in
dec
dec
ja
inc
or
imul
pop
cmp
and
fdivp
std
jmp
scas
inc
imul
leave
mov
test
add
sub
out
scas
cmp
or
aad
and
mov
inc
fs
mov
dec
test
push
sbb
aad
js
lods
cmp
mov
mov
jge
or
into
stos
mov
push
enter
or
jl
dec
push
jecxz
pop
outsl
scas
je
mov
sub
dec
movsb
andb
push
and
cmp
pusha
jno
cmp
loope
xchg
cmc
mov
movhps
xchg
loopne
xchg
aam
pop
insb
bound
gs
mov
mov
mov
into
cmp
aad
push
es
adc
push
mov
push
std
cmp
std
sbb
or
pop
or
test
mov
cwtl
push
or
inc
les
xchg
ret
cli
jb
dec
aad
push
movsl
das
fstpt
addr16
rorb
xchg
mov
call
popf
cmp
das
dec
jmp
imul
popf
daa
clc
dec
ljmp
jae
pop
mov
mov
mov
iret
cmc
addb
scas
pop
push
mov
mov
in
sbb
mov
mov
ffree
jl
jg
add
cmp
dec
push
aad
inc
push
mov
popf
sbb
jbe
sbb
jge
pop
xchg
or
stos
cltd
xchg
cmp
nop
jbe
cld
dec
jl
mov
sti
cld
add
jge
rolb
lcall
jl
pusha
cltd
add
in
sahf
iret
aas
enter
cmpsl
in
cmp
and
imul
imulb
cltd
jge
and
or
call
lods
clc
std
mov
out
dec
xor
ret
cmc
mov
mov
mov
shrl
push
insb
repnz
int
xchg
cli
xchg
mov
sahf
fstpl
pusha
or
sarl
movsl
dec
xor
jecxz
lods
add
popl
add
mov
and
fcmovbe
shl
sub
jecxz
push
addr16
xchg
int
and
mov
js
andb
roll
mov
repnz
and
jge
sub
sub
out
cmp
daa
mov
pop
dec
cs
es
int
clc
pop
aas
icebp
xor
and
shlb
out
mov
jb
pop
fwait
push
dec
popa
daa
mov
sub
jno
push
dec
mov
fists
xor
pusha
adc
push
xchg
jae
add
mov
dec
xlat
push
fstpl
rcr
inc
push
das
inc
inc
mov
mov
and
leave
mov
or
mov
sub
std
in
sti
lret
test
aas
fistl
popf
sbb
vmread
fisttpl
xchg
std
mov
pop
add
push
ja
pop
xchg
adc
or
fildll
outsl
and
sbb
add
test
push
iret
cmc
xor
fldcw
mov
fisttps
dec
stc
insl
cmpsl
sbb
sub
add
inc
popa
jl
or
or
in
jl
insb
in
fdivrl
jle
outsb
loopne
pop
pop
fmulp
push
scas
push
or
in
aad
and
mov
cmp
in
int
jno
or
and
jne
dec
pushf
pusha
test
inc
rep
daa
dec
insl
cmc
or
hlt
lret
xchg
cltd
int
fidivrs
clc
xorl
push
aad
lret
test
adc
pop
imul
jb
testb
js
stc
aad
adc
and
cmc
into
xchg
mov
lods
stos
push
arpl
addr16
pop
out
or
or
mov
fldcw
sub
sbb
jl
push
mov
repnz
add
dec
sbb
jmp
test
aad
cmp
fcompl
fbld
cltd
dec
sbb
xor
movsl
mov
or
add
jp
movsl
add
push
sub
out
cmc
sti
das
lods
int
push
pop
insl
cltd
sbb
rcr
lret
fsts
xor
in
rol
dec
pop
xlat
or
cmovg
repz
mov
test
dec
mov
push
xor
sub
stos
shlb
rorl
add
jne
jae
or
adcl
lock
or
pop
adc
sub
or
xor
pop
jg
fdivrp
ret
iret
mov
fldl
incl
mov
bound
pop
out
jp
jbe
inc
lret
outsl
cmpsb
js
lahf
cs
inc
add
in
out
sbb
add
gs
push
xor
mov
push
bound
push
push
jo
mov
popa
lea
in
jno
fwait
dec
dec
hlt
cmp
add
or
loope
sub
xchg
dec
adc
or
mov
dec
adc
jmp
xor
enter
add
push
insl
cmc
jbe
sarl
sub
aad
sub
jo
addl
nop
stos
fidivrl
push
mov
fstl
mov
sub
jp
inc
cli
rol
fadd
inc
adc
push
add
sub
mov
jno
xchg
test
adc
insl
je
orb
inc
lahf
iret
call
fsubrl
dec
fs
div
inc
jg
push
std
int3
cwtl
aam
push
icebp
clc
mov
cmp
imul
push
ret
aas
pop
aad
or
add
in
adc
cli
inc
loopne
jb
fsubrl
pop
daa
mov
xor
adc
cmc
imul
roll
arpl
xor
mov
cmp
fcomip
xor
jg
arpl
popl
rorl
mov
xchg
ret
lea
adc
in
jmp
insl
dec
out
test
loope
dec
pop
ret
sti
popf
subb
popf
cmp
xchg
jl
inc
test
scas
mov
adc
je
sub
pop
push
movsb
cs
psubsb
roll
mov
or
jg
lret
xlat
cmp
mull
in
sti
ret
mov
ss
arpl
popa
imul
fsubrs
dec
push
sarb
mov
repnz
ds
cmpsl
stc
aad
mov
enter
xlat
sub
cwtl
out
mov
ja
lods
add
aaa
push
and
jmp
out
mov
mov
xor
inc
jge
lahf
xchg
testb
xor
or
pop
push
in
bound
popa
cmp
mov
pop
xchg
sar
mov
loope
test
jge
fiadds
cmpsb
cmc
and
inc
addr16
cmp
bound
sahf
sbb
jmp
in
subb
sub
xor
imul
push
ss
popa
jge
adc
pop
lods
inc
xor
and
or
push
outsl
aad
mov
inc
sub
adc
paddw
inc
sub
bound
mov
lea
jo
push
fimull
jl
loope
stos
jb
jnp
cmp
push
fwait
in
out
inc
mov
dec
mov
insb
aam
jge
cmp
fucomp
cmc
enter
or
aad
push
enter
or
shll
lret
push
stc
orb
inc
jo
into
scas
push
flds
jmp
jmp
lea
scas
rorl
and
jmp
test
mov
add
sub
dec
mov
add
in
mov
sti
int3
adc
sub
xchg
lods
push
push
fidivs
aam
sub
dec
fistps
and
popl
mov
fmul
or
mov
push
lods
add
jecxz
aad
cmpsl
ljmp
mov
adc
pop
inc
cwtl
sahf
lods
or
ljmp
shlb
pusha
sarl
in
mov
mov
test
cmp
movb
test
push
hlt
orl
cwtl
lods
stos
test
push
fmull
push
iret
dec
mov
xchg
ja
jnp
fsts
fadds
inc
imul
or
and
sbb
xchg
lods
bt
xor
cmp
test
pop
call
testl
js
shrl
mov
dec
push
insl
or
dec
cli
adc
aaa
cld
ret
movsl
out
mov
outsl
cmp
imul
jl
out
mov
int
inc
fnstenv
add
sbb
xchg
dec
xor
push
xor
inc
sub
loop
les
mov
jmp
movsb
in
das
outsl
cmp
cmovs
cld
mov
inc
sbb
test
out
ret
lret
adc
andl
clc
add
adc
xor
pop
dec
pop
sub
mov
iretw
sub
outsl
hlt
aas
mov
mov
push
nop
fidivrs
hlt
out
cmc
pop
add
int
lods
dec
cmp
or
repnz
bnd
adc
xchg
cli
inc
ljmp
and
pop
mov
inc
xlat
int
imul
xchg
dec
test
and
xchg
pusha
cmp
mov
lcall
xchg
jl
cmp
pmaddwd
pusha
out
or
loope
out
cmc
sti
pop
add
ret
mov
xor
mov
push
clc
sbb
jg
push
dec
int3
je
push
outsl
sub
rcrl
push
add
sub
lods
or
cmp
push
mov
nop
js
inc
mov
adc
jnp
xor
and
sub
push
mov
sahf
pop
enter
in
out
dec
bound
std
daa
jl
mov
add
lret
adc
lcall
mov
cmp
push
sub
dec
xchg
fnstcw
cmpsb
jmp
sarl
push
dec
inc
bound
inc
int3
lds
popf
sbb
or
jl
loopne
dec
aad
push
mov
mov
mov
add
sti
cli
or
sbb
mov
dec
sub
fisttps
xchg
repz
loopne
ret
push
das
push
sub
arpl
or
sub
add
mov
add
adc
aad
cld
jge
fnsave
add
pop
pusha
push
xchg
aam
dec
xchg
repz
push
mov
mov
and
js
or
or
mov
push
test
push
inc
or
inc
push
adcb
mov
mov
dec
lds
jnp
shlb
out
cmp
mov
into
idivl
aad
int3
rcrl
mov
out
movsl
mov
sbb
call
pop
pusha
jg
aad
dec
jnp
push
imul
jne
dec
mov
out
dec
sbb
dec
imul
fcmovnb
xchg
lahf
cmpsb
shl
xchg
or
into
mov
add
lea
xchg
fsubrs
lods
push
lcall
fidivl
out
inc
and
imull
push
xchg
data16
mov
push
sbb
mov
xchg
out
call
jns
fistps
pmullw
and
sbb
fldt
mov
or
add
out
fdiv
cmp
add
in
sub
loope
mov
sbb
push
sbb
out
sub
mov
aad
mov
push
in
lods
mov
jbe
jge
in
jecxz
pop
cmc
je
int
and
push
out
rorb
mov
mov
cmpsb
jbe
or
in
idiv
xchg
xchg
movl
add
in
lret
lea
popf
and
add
or
movsb
push
dec
mov
inc
inc
xchg
jle
int
add
push
loopne
ja
adc
test
inc
push
jnp
fcmovnb
lods
clc
mov
push
add
ret
scas
out
xor
pop
dec
les
inc
lahf
mov
js
pop
xor
les
ja
sbb
xchg
into
fcmove
sub
ret
pop
cmp
data16
dec
dec
rorl
daa
add
ds
or
test
cmc
ss
adc
lock
inc
pop
js
sbb
cmp
mov
cmc
mov
mov
inc
outsl
clc
mov
dec
or
mov
xchg
sub
add
incb
sub
out
les
pop
push
lcall
jl
aad
or
mov
rorb
sbb
push
test
imul
jp
pop
push
adcl
jge
or
xchg
push
mov
outsl
sbb
xlat
insl
cltd
jae
cmp
mov
fnstsw
add
inc
mov
jg
push
iret
pop
pusha
cmp
test
dec
jl
bound
and
cmc
clc
pop
sub
jp
stos
mov
jmp
cmp
mov
sub
cltd
pusha
repz
lds
mov
repz
xchg
push
sbb
loope
aad
sub
jg
std
pop
or
push
mov
neg
cmp
push
add
call
push
cld
jae
inc
scas
hlt
or
cmp
rolb
addr16
pop
repnz
std
jnp
jecxz
rcl
mov
sub
push
sbb
cmp
out
sub
xchg
aad
mov
popf
push
jl
mov
sti
pop
stos
fiadds
push
xchg
gs
sub
sbbb
mov
out
fs
mov
lock
mov
xor
je
stos
into
pusha
lock
pusha
sub
mov
cmp
testl
jnp
ja
push
mov
sbb
jl
jmp
call
push
int
testb
mov
fs
popa
jg
pop
orb
xchg
pop
fwait
leave
stos
push
xchg
xor
test
or
aam
popf
xabort
jns
sahf
xor
repz
test
xchg
movb
jg
clc
stos
push
psubw
pop
pop
int3
std
je
pop
idivb
adc
and
pop
or
cmp
cmp
imul
sub
adcl
scas
xor
mov
mov
dec
jmp
dec
mov
imul
popf
jmp
cli
sti
jl
jecxz
out
movsl
iret
std
popa
cmpl
out
jmp
inc
popf
mov
mov
mov
rcr
rcll
cmc
loope
sbb
sti
dec
insl
mov
test
xor
dec
push
cmp
cmp
test
and
jns
adc
cmpsb
xor
imul
cmpl
add
pusha
jnp
decb
lret
test
push
inc
sbb
subl
cmpsl
cmc
dec
xlat
and
test
mov
lea
mov
out
popa
or
lahf
add
mov
loopne
pop
dec
jp
xor
or
mov
lcall
dec
mov
inc
aad
and
jl
mov
cli
aad
lcall
testb
lea
aad
mov
out
adc
nop
stos
xchg
int
rorb
loop
out
mov
outsl
mov
cmpl
cmc
aas
add
mov
fucomi
xchg
jmp
ljmp
aad
mov
jbe
xchg
cmc
hlt
mov
inc
sub
fstpl
cmc
sti
jecxz
inc
ds
lret
inc
pop
movl
push
adc
flds
pop
adc
cs
test
dec
dec
cmc
std
stos
fadds
enter
fidivs
pop
inc
loope
cmp
icebp
mov
aad
loope
sub
stos
sbb
mov
sar
mov
and
xchg
shl
push
adc
inc
cld
push
cmpb
or
push
push
jge
and
cmp
pop
arpl
pop
jp
mov
mov
test
add
adc
scas
xchg
imul
int
test
mov
adc
pop
cmp
sahf
insb
test
rcrb
adc
cmp
xor
inc
das
mov
xor
xchg
cli
lds
sbb
test
mov
and
and
imul
jae
mov
out
imul
or
pop
add
and
push
mov
dec
sub
adc
jb
push
sbb
add
lods
add
mov
mov
adc
test
mull
or
xchg
inc
add
xor
int3
bnd
fs
dec
cmp
dec
cmc
mov
fildl
fidivs
sub
push
mov
cmc
jmp
mov
jmp
push
xchg
mov
mov
pop
scas
add
jb
sti
pushf
popa
mov
leave
sub
outsl
add
mov
gs
aad
cmp
push
sub
sti
pop
sub
mov
lea
adc
or
popf
aam
stos
adc
call
cmp
lods
lret
xchg
pushf
scas
outsl
scas
iret
dec
push
fwait
lret
mov
or
add
xchg
mov
push
cmp
pop
sarb
add
mov
or
bound
push
lods
int
cmc
neg
loope
push
cmp
jg
inc
pop
lea
dec
das
repz
add
push
cwtl
push
cmp
jno
jge
iret
rorb
or
div
fcompl
xor
ret
scas
and
lret
cli
mov
lea
mov
xchg
mov
das
outsb
sub
dec
and
outsb
add
aas
mov
xchg
cmp
lcall
jns
mov
or
imul
xor
cmpsb
sub
imul
dec
ljmp
iret
imul
pop
lret
mov
push
jecxz
addr16
pop
cmp
xchg
test
adc
loope
adc
ficomps
repz
sub
xor
pop
loopne
nop
pop
test
test
mov
repz
sbb
cs
and
lcall
inc
outsb
mov
scas
jl
lock
mov
lcall
add
out
loope
xchg
pop
loop
dec
sub
std
stc
push
xor
dec
sbb
jp
xor
xchg
cmp
daa
in
cld
fucom
pop
mov
stos
sbb
shrd
and
lods
decl
or
sub
pop
mov
aad
push
mov
andl
mov
mov
in
mov
sbb
stos
aas
inc
xchg
scas
mov
jo
imulb
aad
stc
andb
sub
mov
sub
add
mov
push
push
xor
and
adc
repnz
imul
cltd
cmc
sbb
fs
pop
sahf
into
pusha
pushf
jno
mov
stos
push
or
test
dec
sub
jae
and
mov
aad
cmp
xor
sub
pushl
les
sahf
push
sub
fcomp
in
shlb
lcall
lea
push
cmp
adc
in
roll
xchg
int
out
mov
mov
add
aas
cmp
cmpsb
lods
popf
stos
mov
lcall
jmp
stos
or
imul
fistps
rol
aad
lods
add
repnz
decl
mov
xchg
mov
pop
test
int
sub
mov
jge
pmullw
and
or
ficoml
or
insl
idivb
adc
xchg
push
cmp
sahf
test
adc
ds
int
js
shll
or
shll
cmp
ljmp
lret
notl
loope
jl
lods
inc
hlt
int3
pop
out
std
cmpsl
mov
mov
sbb
sbb
push
repz
addb
dec
jmp
add
out
inc
mov
ljmp
mov
jecxz
mov
jle
push
cmp
ds
xchg
fmulp
ja
lea
pushf
vmwrite
scas
jmp
inc
mov
xchg
addb
mov
and
pop
addr16
push
repnz
aaa
mov
mov
mov
xchg
push
push
xor
popf
or
pop
ljmp
into
das
bound
pusha
pop
outsl
mov
test
insb
les
dec
sahf
pop
inc
jl
jle
or
int3
or
dec
cmp
imul
jbe
push
pop
mov
int3
mov
push
adc
outsl
flds
mov
enter
ret
in
mov
inc
add
idivb
test
pop
pusha
movsl
adc
push
repnz
jbe
loope
inc
sahf
testl
stos
push
mov
sbb
and
hlt
dec
nop
push
mov
mov
ret
je
fwait
cmp
jno
add
dec
out
int
add
aad
pop
push
dec
dec
sub
mov
call
sbb
xor
cmp
sahf
incb
push
popa
cld
stc
jle
cmp
mov
push
fcmovnu
sub
test
xlat
out
xchg
and
mov
mov
push
js
mov
cli
push
mov
cmc
fcmovb
push
cmp
xchg
inc
into
aad
xchg
sub
add
rcll
js
stc
xchg
mov
cmc
sarl
sbb
sub
lock
push
test
call
sbb
or
mov
in
test
dec
adcl
sub
pop
mov
setne
js
pop
jecxz
pop
test
pop
outsl
repnz
pop
lret
aad
fistl
int
pop
dec
xchg
cmp
mov
xchg
jp
and
add
call
sub
aam
out
pusha
lahf
xor
dec
mov
arpl
sbb
loop
mov
addr16
sarb
dec
repnz
mov
inc
in
or
cmp
cmp
inc
xchg
sub
stc
jge
repz
mov
lods
arpl
movsb
mov
cs
cmp
or
in
mov
iret
mov
mov
int
popa
insl
jno
jp
mov
inc
int
or
add
enter
mov
pushf
aad
jno
mov
sbb
pop
xchg
xor
icebp
jl
sti
jns
jmp
sar
aaa
add
loope
xor
test
and
imul
popa
shlb
mull
push
rorl
les
out
in
das
fwait
pop
popf
push
xor
xchg
jg
cli
jmp
push
lods
or
xchg
cmp
insl
imul
test
jmp
push
cmpsb
gs
and
mov
nop
imul
pop
cmp
push
sub
or
in
mov
scas
test
lcall
inc
inc
negb
aad
loope
cmpsb
inc
js
xchg
std
nop
or
cmp
dec
out
xchg
out
xor
sbb
loop
in
bound
pusha
add
aad
fnstsw
push
adc
bound
xor
mov
add
adc
dec
aad
xor
xchg
stc
out
lret
inc
insl
mov
add
fdivrs
and
adc
out
push
shrl
add
sbbb
mov
in
cli
and
lods
mov
push
mov
mov
cmp
push
decl
mov
rcl
mov
inc
jmp
push
leave
or
mov
inc
cmp
sahf
jecxz
mov
movsl
sub
sbb
adc
popf
cmp
addl
mov
jg
push
push
inc
mov
cwtl
cmc
cmc
fisttpll
and
inc
inc
and
jmp
test
testl
push
test
mov
xor
sub
cld
xchg
sbb
in
add
mov
stos
inc
adc
movsl
mov
mov
lcall
pop
cmc
les
or
std
cltd
stos
inc
mov
dec
lods
mov
pop
dec
ja
ret
xlat
fs
js
adc
sub
and
dec
mov
push
out
call
jnp
stc
arpl
popf
jg
lea
xchg
in
andl
gs
dec
stos
and
add
cmp
int
sub
insl
rorb
jg
mov
add
test
ljmp
int
nop
or
cmc
sub
lds
arpl
adc
jecxz
push
fwait
ret
hlt
shll
cmp
pop
pop
or
mov
push
lcall
sub
jmp
dec
mov
out
stc
push
inc
loopne
fcompl
aad
inc
inc
jnp
add
pusha
cli
ret
cmp
ja
pop
repz
fsub
cld
mov
mov
xor
push
in
cmc
outsb
dec
popf
adc
and
mov
xchg
in
or
add
into
mov
fldpi
sbb
gs
push
stos
add
mov
imul
dec
cwtl
fsubr
push
xor
int
sub
mov
loopne
or
mov
sub
add
pop
mov
xorl
pop
in
scas
inc
inc
sahf
loope
movsb
leave
idivl
int3
add
inc
mov
mov
xchg
arpl
jp
or
imul
adc
sahf
cltd
cwtl
lret
ljmp
xchg
xchg
push
push
loopne
test
inc
jl
push
and
adc
jge
xchg
stc
imul
pusha
ljmp
sbb
insl
std
mov
shlb
dec
aad
inc
out
sar
test
pop
push
push
mov
es
xchg
loope
sub
mov
cmp
adc
test
movb
insl
arpl
lea
inc
pop
sti
push
xchg
testl
sbb
jnp
xor
mov
out
push
shlb
fcoms
mov
cmp
xchg
lret
add
xchg
xor
outsb
xorb
cmp
test
or
into
les
sbb
fdivl
cli
movsl
testl
idivb
cltd
jo
call
xchg
jp
fnstenv
inc
ljmp
loopne
inc
addr16
data16
or
push
xchg
push
lret
inc
or
mov
je
nop
out
jmp
xlat
out
cld
sub
jmp
loope
push
call
lret
jl
xchg
call
out
push
imul
or
pop
sbb
push
iret
mov
shrb
mov
sarl
fwait
repz
aad
shrl
outsb
mov
andl
lea
xor
pusha
xchg
mov
xor
dec
jp
push
mov
fsubs
mov
and
cmpsb
mov
add
sbb
or
popa
ljmp
jle
push
fs
adc
or
or
xor
out
dec
cmc
fistpl
and
incb
push
scas
dec
sbb
leave
mov
mov
cmp
shl
testb
stos
inc
sub
lret
and
pop
push
arpl
mov
cld
xor
jl
jmp
test
aad
int
adc
pop
push
mov
int
sbb
pop
icebp
cmp
adc
sub
loope
test
ljmp
jne
cmp
je
xchg
or
outsl
jnp
mov
cmpsb
lods
pop
out
icebp
pop
xchg
shl
adc
aas
cwtl
test
or
cld
insl
cld
cmp
push
pusha
mov
or
pop
xor
ljmp
inc
cmpb
adc
add
int
and
cwtl
aad
test
int
or
cltd
cs
jge
dec
call
out
mov
enter
and
xor
jns
mov
xchg
lods
push
icebp
add
cmc
pop
and
mov
idivw
fdivp
and
or
push
ss
test
jmp
sbb
movsl
int3
mov
imul
push
lods
inc
adc
hlt
adc
in
mov
jae
int
mulb
into
cmp
lcall
into
xchg
push
push
int
lods
mov
sbb
sti
push
cltd
push
imul
jmp
call
fildll
pusha
push
pop
inc
enter
xchg
outsl
je
ja
xor
pop
cmp
pop
repnz
aad
xchg
cmp
cmc
push
and
xor
fisttpl
insb
out
sub
fadds
into
push
add
lahf
adc
cwtl
jle
shlb
movsb
hlt
dec
aad
dec
int
mov
xchg
dec
shlb
test
xchg
sub
lock
adc
mov
in
mov
mov
out
test
repz
fidivrs
in
and
fwait
cld
add
or
in
push
fwait
dec
imul
mov
rcll
mov
cmpsl
push
shll
mov
pop
mov
jo
and
ret
inc
les
mov
inc
xchg
mov
inc
lahf
es
cmpsl
and
aad
cmp
sub
xchg
outsl
mov
lock
aad
mov
les
lock
adc
jae
scas
aam
xor
and
fisubl
jns
push
ret
roll
or
test
adc
push
repnz
sub
cmc
out
enter
loope
push
pop
outsb
int
sbbb
int
iret
xor
out
cmp
and
out
xlat
add
jns
or
in
inc
hlt
fidivrl
push
in
mov
add
shll
insb
ljmp
mov
in
sub
sub
sarl
add
inc
andl
push
icebp
out
cmc
ror
jp
stos
fwait
lea
aas
sub
data16
xchg
loope
cmp
jmp
aad
mov
pop
lds
mov
adc
jge
insl
adc
popa
aaa
dec
xor
stos
add
insb
fdivr
call
cld
ret
xor
adc
test
sub
aam
test
std
push
js
or
mov
fwait
inc
cmc
in
mov
in
fsubrs
mov
lcall
movsb
sbb
es
sbb
pop
xor
dec
in
dec
push
loope
cmpsb
imull
rorl
sti
mov
jmp
xchg
pushf
jns
pop
daa
mov
push
les
aaa
add
out
inc
loope
test
mov
adcb
daa
lret
add
mov
and
pop
cwtl
push
ret
xchg
inc
ficompl
mov
jl
lods
xor
add
fbstp
lea
je
xor
lcall
push
push
ret
cltd
cmpsl
fistl
dec
ret
sub
lret
dec
mov
dec
xchg
test
add
pop
cmp
daa
daa
cld
arpl
or
xchg
xor
ds
sbb
int
adc
stos
pop
popa
not
cmc
test
inc
dec
leave
mov
dec
cld
pusha
push
jno
test
les
add
pop
adc
ficompl
ljmp
cld
mov
xor
jnp
fmulp
jl
in
lret
or
xlat
imulb
cmc
in
mov
int3
sub
fisttps
cltd
or
imul
arpl
sub
xlat
out
adc
mov
pushf
stc
cmp
mov
mov
inc
lret
and
lahf
out
mov
mov
inc
fimuls
pop
xchg
pop
stos
mov
es
push
push
aas
xbegin
jmp
orb
lods
sub
ret
jne
repnz
cmp
xchg
in
out
inc
sbb
popf
or
ja
jl
aam
cs
sahf
dec
int
push
cmp
mov
dec
das
mov
insb
pop
push
leave
dec
lods
dec
cmp
jecxz
mov
mov
es
sub
push
sti
aad
xchg
popa
test
and
xor
jl
or
aad
and
std
cmp
lea
push
add
dec
or
repnz
cli
xchg
imul
sub
out
insl
rorb
xchg
mov
iret
fistl
int
xchg
or
test
arpl
push
inc
aad
ret
lahf
push
iret
test
jmp
movsl
cmp
pusha
sti
movsb
cld
mov
mov
clc
and
dec
inc
fadd
cmc
fucomp
and
movsl
push
inc
sbb
fsubr
mov
inc
fwait
pop
pop
arpl
stc
lret
aad
and
jecxz
repnz
lods
cmp
fiaddl
das
xchg
xor
jp
cs
mov
or
pop
inc
push
fistpll
pusha
jne,pt
mov
dec
cli
aad
std
into
or
in
fdiv
xor
jno
cltd
movsb
cmp
mov
dec
cmp
outsl
sbb
mov
xor
xchg
sti
cli
out
mov
xchg
dec
imul
xchg
das
out
or
into
lods
add
sahf
fsubp
out
jbe
inc
call
js
push
loop
push
inc
das
xchg
add
mov
dec
cmp
jmp
orl
pop
xor
pop
aad
mov
push
add
repz
and
xchg
inc
scas
negl
lcall
xchg
arpl
add
push
pop
mov
sahf
xor
nop
outsl
rcll
dec
or
or
aad
insb
aaa
adc
sarb
push
cmp
push
push
sbb
mov
sbb
mov
jbe
lret
or
mov
pop
push
jp
fdivrs
repz
movsl
nop
lret
cmp
idiv
adc
cld
inc
jmp
stos
adc
sbb
fdivrp
gs
stos
roll
xor
imul
pop
push
ja
out
inc
fldl
aad
jge
loope
sbb
jle
push
inc
push
call
idiv
mov
add
add
cmp
xchg
ljmp
lret
adc
incl
fistpl
mov
sarl
cmp
push
dec
sbb
cmp
arpl
add
mov
pop
test
and
cmp
or
sub
insb
mov
sbb
lea
aad
ljmp
mov
rcrb
cmp
inc
cmpsl
cmp
mov
pop
decl
mov
out
lock
rol
nop
cmp
jle
test
fsubp
xchg
stos
dec
stos
nop
jmp
push
mov
out
adc
jne
pop
xor
xchg
mov
cmpsb
scas
add
pop
mull
add
repnz
leave
dec
test
enter
out
xorl
sbb
dec
je
or
cmp
xchg
add
icebp
mov
lock
aaa
push
mov
sbb
mov
sub
testb
test
xchg
je
mov
scas
and
cltd
mov
lret
xchg
imul
mov
or
mov
mov
das
outsl
pop
movsl
pop
pop
add
pop
jl
std
sbb
push
movsl
jp
add
pop
outsb
mov
out
and
mov
dec
add
cmp
or
nop
mov
mov
sub
add
outsb
mov
mov
xorl
lock
sub
pop
lock
iret
loope
popf
push
pop
inc
dec
ret
sub
push
lahf
push
test
ja
sbb
mov
pusha
mov
adc
push
out
fstpt
adc
stos
imulb
loopne
hlt
fnstsw
int
xor
push
popf
adc
int
push
xchg
sbb
push
or
lods
shl
push
pop
or
shrl
ret
push
test
sub
dec
mov
push
or
jnp
iret
lret
test
sbb
or
shl
pop
dec
xor
mov
push
outsb
les
mov
mov
mov
stos
sub
enter
jo
dec
cmp
pop
sub
leave
icebp
rclb
fnstsw
add
jl
pushl
hlt
divb
xchg
pop
dec
cmpsl
jb
push
movsb
fsubrp
aas
add
out
cmpsl
pop
dec
in
icebp
inc
cmp
ds
popf
mov
or
adc
ret
mov
pop
pop
or
dec
push
mov
pop
call
fistps
addr16
pop
xchg
ret
test
in
pop
mov
pusha
ret
int
mov
mov
push
dec
dec
sbb
lcall
xchg
mov
or
leave
sahf
xchg
pop
lock
outsb
int3
fs
sub
icebp
outsl
shrl
dec
push
insl
or
leave
sbb
into
inc
pop
popf
movsl
xchg
add
jne
lcall
insb
ret
fcomps
xchg
or
push
stc
cmp
or
and
ret
pop
mov
add
inc
push
fildl
push
rorb
push
ja
lret
xchg
push
shrb
fwait
inc
mov
rol
pop
or
mov
ret
add
and
push
lret
sar
fmull
fisttpll
leave
mov
sub
es
mov
pop
aas
out
fsubrl
dec
xchg
xchg
popf
lods
add
lods
leave
lahf
xlat
stc
popf
jmp
add
and
adc
ret
aad
jnp
or
xchg
int
or
out
xchg
mov
out
add
adc
pop
push
test
or
mov
lods
cltd
add
pop
lret
cmp
je
and
dec
popa
popf
jp
in
cwtl
das
jl
stos
gs
shr
inc
call
test
insb
rcll
mov
bsr
pop
jp
in
xlat
cmp
dec
dec
popf
pop
push
in
repnz
xor
jne
pop
pusha
jmp
into
popa
aaa
jp
jbe
out
outsb
mov
xor
clc
dec
push
add
cltd
pop
and
in
jmp
jmp
pop
mov
insl
or
jecxz
lock
add
sar
jmp
testl
int3
in
into
icebp
lock
popf
pop
das
add
leave
ja
cmc
insb
fisttpll
leave
adc
add
out
mov
call
jecxz
ss
dec
sbb
popf
xchg
out
inc
fldl
push
push
sbb
or
or
sub
or
fld
lahf
jns
dec
inc
fldl
jae
xchg
imul
wbinvd
cmc
xor
cmc
sub
popl
add
outsl
adc
shlb
lods
push
pop
xchg
add
mov
popf
mov
mov
lcall
clc
mov
scas
dec
fistl
xor
scas
loope
ds
popf
fwait
cwtl
adc
dec
push
fidivrl
mov
ret
sbb
or
mov
out
or
rol
lcall
cltd
movq
cli
add
ret
call
popf
cmpsl
push
or
fstl
das
ret
je
movsl
and
inc
or
jae
dec
sub
leave
or
cs
popa
lds
sar
aaa
xorb
fadds
ljmp
std
rorb
add
inc
aam
fldenv
pushl
cwtl
rcll
xchg
or
outsl
in
jg
int
lcall
cmc
or
ljmp
pop
int
and
decl
in
cmc
js
xchg
or
pop
rorb
shl
mov
notl
mov
push
call
popf
and
lret
sub
dec
call
mov
ret
aad
data16
push
mov
repnz
adc
push
in
add
mov
jmp
sti
movsl
or
cld
xchg
or
outsl
lret
sub
jl
lea
lock
popf
mov
inc
int3
inc
pop
cmp
add
dec
and
test
cmpsb
icebp
mov
inc
inc
sub
fmul
add
mov
lret
adc
int3
pop
insb
mov
out
mov
imul
pop
cld
lret
mov
push
sbb
xorb
mov
jmp
repz
daa
imul
mov
add
add
fyl2x
or
aam
dec
fwait
pop
insl
shr
out
sbb
or
int
jecxz
out
push
jg
in
pushf
rorl
lea
or
add
leave
inc
cltd
repz
jp
out
std
cs
fnstsw
push
or
stos
mov
sbbl
mov
xor
jg
add
nop
xchg
data16
pop
test
repnz
jns
aas
maxps
mov
xlat
or
push
int3
push
or
mov
xor
sti
push
popf
push
scas
mov
loop
xchg
ja
inc
xlat
dec
dec
push
adc
sahf
js
out
cld
push
test
frstor
enter
add
shrl
lods
cli
fmuls
push
mov
std
push
lahf
icebp
scas
xchg
cli
out
leave
sbb
xchg
in
out
in
stos
push
in
popf
insl
clc
sahf
fstp
leave
das
sub
mov
stc
jno
icebp
jmp
dec
ja
xchg
dec
inc
ret
sub
filds
mov
call
cmpsl
jmp
xchg
jg
pop
lret
and
xor
sub
fisubrs
scas
fstpl
inc
inc
xor
mov
pop
arpl
in
mov
enter
jl
and
lds
mov
pusha
fwait
dec
pop
fwait
test
or
xchg
push
cmp
cmp
add
push
ja
mov
xchg
jmp
pop
popa
dec
shlb
arpl
sbb
adc
jle
cmp
jecxz
or
or
lret
outsl
cmp
pop
insl
cmpsb
cmp
fs
outsb
add
test
pop
sub
mov
jecxz
sti
sbb
out
in
lcall
subb
sbb
das
rcll
outsb
orb
or
lods
jae
or
and
ljmp
stos
scas
subl
add
int3
sbb
inc
mov
jne
fistps
xor
dec
outsb
sbb
pop
div
gs
imul
inc
and
cmpsl
sub
lret
jb
cmp
push
pushf
push
pop
adc
dec
sub
dec
xchg
cmpsl
int3
push
fst
test
mov
in
test
cmc
outsl
push
loop
fs
insl
inc
adc
sbb
inc
jb
or
push
xchg
lds
iret
rcl
out
add
cld
insb
mov
jmp
test
cmp
cmc
dec
mov
test
adc
dec
std
int3
add
xchg
hlt
fcmovu
hlt
mov
add
jmp
ljmp
dec
cmp
test
movsl
or
mov
sub
scas
outsb
aad
add
loope
adcl
or
jmp
insl
fmull
mov
daa
and
repz
cmp
jmp
data16
test
push
mov
mov
out
outsl
sub
xchg
xor
pushf
and
out
enter
mov
and
or
and
or
js
addr16
cmp
adc
cmc
scas
jno
std
mov
int3
cmp
pop
and
dec
jns
dec
dec
flds
ficoms
clc
jae
mov
adc
jg
test
int
and
jp
ffree
mov
jl
sbb
xchg
jo
adc
in
notb
xorl
scas
or
inc
pusha
sbb
mov
ss
push
xchg
xchg
dec
or
push
scas
mov
and
ja
cmpsb
clc
into
dec
shll
xor
add
adc
mov
enter
jmp
or
pop
jl
jae
add
add
test
sub
mov
xor
mov
xchg
je
dec
mov
mov
mov
shr
cmc
rcrb
sbb
mov
cld
sub
or
int3
les
call
and
add
xchg
inc
or
mov
aad
divl
outsb
fsubs
push
sub
jae
pop
mov
sar
sbb
dec
jge
das
jnp
dec
xor
or
cmpsb
jge
add
in
decl
jl
imul
inc
sub
cmp
rsm
arpl
out
and
popf
fs
or
pop
scas
mov
loope
ljmp
gs
dec
jo
std
and
lcall
jg
incl
sub
aad
test
mov
stos
push
mov
sahf
xlat
xor
jb
cmp
push
dec
mov
in
repnz
pop
inc
add
pop
mov
mov
movsb
adc
cmp
xchg
bound
dec
or
dec
or
sbb
fstl
stos
int
outsl
fmuls
jg
scas
sub
add
test
or
jmp
aad
aam
cmp
push
sub
decl
xchg
dec
push
push
hlt
je
cmc
inc
add
cmpsb
or
push
jg
cmp
inc
mov
xchg
std
mov
pop
add
mov
call
jae
cmpsl
iretw
enter
sbb
push
int3
cmp
mov
push
mov
out
aad
jmp
test
pop
add
out
shlb
add
int3
icebp
dec
mov
stos
shlb
mov
dec
adc
adcb
inc
insb
std
fnstcw
cmpl
addr16
mov
jg
xchg
add
test
ja
std
pop
lods
cmp
fcompl
repnz
xor
es
icebp
fdivrs
pop
stc
nop
cmp
fdivrl
add
sub
ret
cmp
subl
imull
dec
mov
cmp
aad
jl
loop
dec
les
adc
jl
cwtl
enter
mov
jbe
aam
out
outsl
and
xchg
inc
cmpsl
dec
mov
ljmp
out
fisttpll
rorb
pop
orb
mov
cmpsb
js
test
jecxz
xor
cwtl
cmc
cmp
sbb
mov
and
inc
lahf
inc
nop
inc
jo
fs
lock
jb
sbb
lods
jle
pop
mov
idiv
lcall
push
sbb
dec
call
int
scas
aad
stc
push
fisubl
aad
adc
sub
jl
fisttpl
aad
jns
push
cmp
cmc
sub
movsb
jge
loopne
cmp
lret
int
loop
cmp
inc
jnp
into
imul
pushf
das
adc
insb
push
and
pop
and
sbb
div
mov
inc
aad
xchg
sbb
inc
stos
or
adc
inc
push
cmpsb
ja
mov
out
jge
mov
or
xor
adc
fmuls
shll
push
rorb
mov
sarl
push
pop
repnz
adc
jg
aad
fstl
sarb
addr16
lea
fwait
jnp
setae
dec
in
push
sbb
mov
cmc
pop
lret
sbb
sbb
dec
lock
xor
push
addr16
jbe
out
in
fstl
repnz
hlt
xchg
aad
or
dec
loopne
ljmp
loopne
jge
ret
je
fwait
or
add
push
cmp
mov
sub
fisttpl
cmp
rorb
inc
ljmp
call
mov
mov
loop
in
and
fwait
push
sbb
lds
jno
xor
enter
mov
and
jnp
inc
into
aad
mov
xchg
mov
mov
push
mov
or
xchg
sub
mov
lea
sub
scas
loop
ret
testl
fst
xor
xchg
inc
and
fwait
xchg
mov
popa
and
jle
sbb
dec
cmp
cmc
cld
mov
call
cmpsb
push
daa
out
in
pop
xchg
and
mov
out
cltd
xchg
jecxz
and
jge
add
dec
jae
mov
sahf
jmp
cmp
loopne
push
pop
jne
sbb
imul
sbb
in
fwait
push
cli
outsl
mov
inc
adc
jl
stos
xchg
leave
xchg
dec
push
fdivs
cmc
arpl
xchg
sti
push
cmp
dec
dec
aam
add
loopne
lods
int
sub
adc
test
out
mov
dec
cmp
inc
int
pop
mov
into
jno
clc
lods
ljmp
xchg
imul
addl
insb
xchg
std
sub
mov
mov
pop
xchg
or
push
mov
les
das
mov
xchg
stos
or
dec
arpl
mov
imul
fists
push
cmp
jne
sub
push
or
dec
jge
fwait
mov
pop
xor
scas
dec
mov
pop
mov
mov
lock
incl
aam
pusha
shl
arpl
mov
mov
cmc
mov
enter
fbstp
lahf
or
les
mov
subb
dec
cmp
push
orl
mov
xor
js
movsb
dec
xor
or
cmp
dec
fcomi
inc
push
xchg
dec
cmp
push
xchg
das
cmc
dec
aad
inc
int3
mov
sub
mov
rolb
pop
and
cmp
fs
mov
sub
aaa
test
test
mov
dec
outsb
dec
test
ljmp
mull
mov
cmp
dec
stos
mov
ret
lahf
leave
push
push
orb
xor
sbb
pushf
mov
daa
cwtl
lahf
cli
in
xor
push
cmp
cli
sub
les
pop
jne
add
jge
add
mov
jl
imull
adc
mov
or
adc
js
jnp
fldl
pop
pop
mov
push
sub
orb
fnstcw
in
mov
or
das
int
push
push
adc
xor
inc
cld
lret
adc
xor
pop
andl
xor
push
adc
ljmp
ljmp
into
adc
cmp
and
cmpsl
dec
out
sahf
pushf
and
mov
sti
pusha
cld
inc
or
sbb
cmpsl
add
xchg
iret
sub
idivl
inc
out
cs
out
push
rolb
add
dec
mov
push
into
and
aam
lods
add
sbb
cltd
dec
int3
xor
inc
lcall
aas
jle
pop
cli
add
adc
xor
xchg
and
fcmove
out
jmp
xlat
bound
scas
or
adc
jb
into
add
cmp
push
cmp
and
test
enter
rcrb
cld
cmpsl
into
sbb
pop
jmp
incl
xchg
inc
pop
xchg
pop
and
hlt
push
xor
frstor
sbb
or
inc
add
add
aad
add
adc
add
or
pop
cmpsb
xor
fisubl
fwait
mov
insl
xor
sbb
xchg
sbb
repz
lea
mov
sbb
test
and
xor
jne
lcall
icebp
fmuls
add
aas
jne
mov
cmpsl
inc
push
jno
stc
imul
insl
movsb
scas
daa
or
sbb
jne
sub
jne
xchg
leave
shl
mov
fs
cmc
xor
out
sbb
push
idivl
pop
insl
or
mov
push
popa
add
fs
aaa
xor
leave
push
pusha
dec
cmpsl
jge
sti
sub
sarl
sub
stos
inc
mov
jle
mov
mov
aad
mov
cltd
mov
mov
out
stc
jno
cmp
into
scas
or
pop
cmp
je
dec
stos
push
and
mov
popa
leave
sti
hlt
lods
or
jo
mov
mov
sub
xadd
add
jns
inc
movsl
out
out
loop
fists
int
int3
stos
mov
and
adc
mov
cmpsb
push
mov
jno
add
repnz
ljmp
gs
test
inc
pop
inc
push
adc
aaa
or
arpl
jl
call
aad
mov
inc
mov
int
jp
mov
jnp
ror
insl
push
ds
dec
aad
scas
into
scas
cmpsb
repz
ljmp
dec
xchg
xor
xor
hlt
xchg
sub
out
cmc
sub
push
push
sub
add
pop
int3
mov
ret
fwait
or
data16
sub
arpl
cld
cmp
mov
mov
insl
ficoml
aad
std
jns
scas
push
leave
imull
jge
rol
nopl
aad
or
inc
int
jmp
cwtl
mov
das
flds
or
sbb
jb
jae
mov
ret
sub
lods
fsts
pop
rcrl
dec
mov
stos
loope
push
sti
mov
adc
scas
sbb
dec
xor
ss
push
mov
add
dec
ljmp
int
rcrb
out
pop
fcomip
ljmp
add
lods
push
ficomps
inc
cmpsb
or
push
adc
std
pusha
pop
jg
js
mov
and
imull
aad
mov
or
mul
cltd
ja
xlat
out
or
aad
dec
xor
adc
jl
add
push
lods
mov
in
push
jg
sbb
pop
jecxz
adc
notb
adc
ret
das
xchg
dec
xlat
mov
jb
gs
idiv
aam
mov
jl
add
iret
ja
and
aad
add
out
out
lldt
sahf
lea
in
aad
sbb
mov
pusha
cmpsb
push
push
cmpsb
enter
or
cmp
inc
dec
pop
sub
dec
xor
mov
cwtl
shl
rcrl
push
dec
mov
add
push
loope
pushf
call
loope
push
xchg
cmp
or
inc
dec
pop
jmp
fildll
stc
mov
aad
fistl
je
cmpsb
push
rclb
push
pop
int
loop
cld
adc
jnp
stc
xchg
fadds
movsb
push
push
push
xchg
cld
insl
dec
adc
and
add
dec
dec
repz
div
jbe
cwtl
jl
push
inc
mov
cmp
or
mov
int3
mov
movsl
jg
cmc
pop
mov
add
cmp
adc
dec
xlat
aam
sbb
push
sbb
inc
leave
mov
jge
cmpsl
mov
mov
adcl
lods
xor
cmp
xchg
and
jae
pop
sub
pop
fwait
mov
pushl
sti
test
mov
stc
adc
dec
pusha
int
push
sub
fbld
mov
mov
jo
mov
mov
adc
or
add
test
mov
daa
dec
jp
pop
mov
or
lcall
jmp
xchg
add
std
mov
shll
push
mov
orb
gs
jl
xchg
daa
sbb
pushf
xchg
mov
sub
insb
hlt
push
jmp
or
xchg
inc
add
cmp
xlat
cmc
sbb
and
mov
and
jno
popa
dec
lret
inc
xor
out
aad
outsb
and
movsb
in
cmp
pop
xchg
inc
icebp
push
sarl
idivl
pop
lret
push
add
ret
pop
push
lods
or
or
popl
cmp
push
pop
lret
adc
fnstenv
dec
shrl
lods
cmp
icebp
xchg
loop
xlat
cltd
jle
push
das
popl
mov
bswap
cmp
jne
sub
inc
sub
mov
mov
push
pop
scas
decb
pop
js
pop
jle
sub
dec
aad
xchg
cmpsb
outsl
jo
shl
mov
mov
mov
cmp
dec
or
andb
lods
insl
lahf
imul
test
aad
xchg
aas
mov
testb
push
push
sbb
in
pop
les
mov
or
sbb
mov
rorl
aam
cmp
out
mov
jmp
inc
mov
xor
test
adc
pop
test
xor
mov
push
out
and
jl
ffreep
pop
mov
decb
aad
jge
push
jle
jbe
lret
test
movb
cs
pop
push
icebp
or
mov
sub
and
test
dec
sahf
and
lods
dec
mov
rol
or
jle
cmp
les
push
add
ss
in
movsl
xchg
stos
cmp
sub
pop
inc
out
jo
into
ficoms
adc
sbb
jns
int
push
lcall
cmp
mov
inc
js
and
shrb
dec
int
jl
lcall
push
int3
rorb
leave
xchg
negl
popf
fldcw
repz
mov
imul
insl
ss
leave
stos
in
addr16
cmc
push
pop
outsb
iret
jns
mov
fcmovnu
fimuls
sbb
mov
aas
daa
or
mov
mov
dec
fldt
push
or
jae
adc
into
cld
lcall
lds
not
shl
jo
pushf
cmp
mov
testb
in
fincstp
ret
pusha
jge
push
ficoml
sti
mov
daa
stos
int3
mov
movb
pop
jno
pushf
jecxz
addr16
adc
xor
inc
iret
push
pop
and
adc
ret
stc
push
mov
mov
adc
lcall
fsts
stos
or
xor
xchg
ds
xlat
shr
jge
xchg
or
stos
aas
jmp
and
arpl
outsl
sarb
and
cs
inc
pop
xor
mov
ffreep
lds
mov
xor
rol
imul
fsubs
add
mov
sahf
jp
in
ret
pop
fistpl
shrl
mov
pop
or
mov
mov
cmp
jge
and
pop
mov
in
repz
into
test
leave
jne
mov
outsl
xchg
int
fucom
aad
not
or
xchg
and
cmp
iret
cwtl
call
adc
inc
add
stc
aam
jl
int
mov
add
add
pop
sub
or
stc
sbb
cmc
push
or
pop
or
in
fisttps
enter
xchg
jo
lods
inc
add
call
jecxz
and
lea
cli
insl
sahf
mull
push
test
adc
mov
mov
cs
leave
pavgw
mov
popf
lahf
andl
and
jno
xchg
push
cmc
mov
dec
aad
jp
push
sahf
cli
jmp
mov
in
fs
and
gs
push
inc
iret
add
cmc
into
or
lods
mov
pop
imul
dec
sarb
dec
mov
inc
inc
out
sar
jmp
int
dec
dec
fiaddl
inc
cmp
mov
cmp
cmp
test
das
lea
call
pusha
imul
inc
xchg
mov
mov
lcall
fnstsw
mov
inc
ret
cs
lods
and
adc
fmuls
cmp
push
push
lods
and
sti
and
dec
aad
xor
xor
pop
or
jns
shrb
enter
adc
and
jmp
les
mov
adc
shl
mov
sbb
pop
and
mov
and
xchg
subl
jne
lods
ja
jbe
mov
mov
std
pop
jle
imul
mov
mov
add
cmp
loopne
scas
or
loopne
xchg
pop
mov
cs
and
pop
cmp
scas
add
sub
mov
mov
xchg
sbb
stos
fldl
ret
push
sub
add
div
cmp
dec
test
idivb
or
sbb
mov
cwtl
xchg
mull
adc
setbe
repz
loope
ret
nop
loope
add
jmp
pusha
sbb
mov
ss
add
js
aaa
fcomi
int
xchg
insb
mov
mov
loope
scas
cmc
jmp
stos
cmp
pop
xchg
adc
hlt
xchg
leave
inc
cmp
jo
dec
test
out
jmp
dec
fwait
outsl
sub
adc
nop
testb
adc
adc
jne
lea
test
mov
or
cltd
loop
test
mov
push
lcall
xchg
add
pop
sbbl
add
out
les
sbb
or
adc
mov
mov
sub
daa
roll
push
pop
cmp
inc
mov
sub
or
xchg
lahf
nop
lret
sub
and
or
mov
fs
jmp
and
in
cli
pop
sub
inc
fimull
rcr
scas
jge
in
inc
jmp
push
jg
jmp
mov
idivl
jnp
cmp
sti
add
add
jo
nop
mov
jne
cmp
lret
cltd
into
push
lods
in
add
mov
stos
cld
push
lods
enter
lods
or
or
outsb
aad
or
lahf
ljmp
in
fists
xchg
lea
movl
lock
aaa
sarl
and
sub
push
xlat
mov
or
loope
outsl
dec
push
or
jne
sbb
test
adc
icebp
pop
pop
cld
or
dec
int3
sti
out
cmc
dec
mov
jg
test
pop
sbb
int
aas
xchg
mov
adc
push
xchg
or
sub
mov
xchg
and
lret
ficoml
sbb
xchg
test
jp
fucom
mov
xor
pop
fcmovnu
aam
test
lea
push
mov
or
cld
insb
mov
mov
popa
push
pop
lahf
scas
add
xchg
jecxz
inc
loopne
mov
std
inc
jno
cmc
push
sbbl
call
minps
lea
addr16
scas
es
ja
sbb
lods
decb
cmc
cmp
insl
fcomp
loop
or
pop
fwait
dec
aad
mov
lcall
and
cmpl
sar
out
xchg
call
inc
fisttpll
add
lods
das
adc
sub
push
or
fstl
int
pushl
adc
insb
push
jle
push
cmc
push
int3
negb
dec
inc
mov
movsl
push
call
jb
leave
imul
arpl
movl
add
push
jmp
add
and
inc
xchg
shl
jbe
es
fcoms
lods
hlt
arpl
and
pop
push
aad
jno
inc
int
fmull
adc
and
mov
xchg
adc
ljmp
or
cmpb
imul
adc
jl
aaa
js
xchg
push
adc
dec
add
push
push
push
ja
mov
insl
mov
cmp
adc
adc
xchg
or
fcoml
dec
lods
sub
loope
outsb
push
je
repnz
or
mov
adc
cmc
xchg
lods
test
cmp
adc
xchg
adc
lods
out
cwtl
mov
cmp
call
and
fistpll
cmc
mov
and
add
scas
les
xor
add
xchg
push
dec
mulb
dec
mov
aam
push
je
and
jmp
iret
je
hlt
dec
sti
aam
aaa
sub
fstl
cmp
push
cwtl
lgs
inc
cwtl
insb
push
dec
lds
hlt
dec
int3
cmp
in
dec
aad
inc
int
data16
or
push
jg
loope
jns
loopne
add
mov
pop
jp
mov
push
jmp
fsubr
aaa
pop
lea
mov
pop
xor
nop
mov
aad
enter
add
out
es
stos
sub
mov
out
cmc
sub
mov
je
stos
fwait
jp
lods
or
lds
iret
dec
sahf
adc
cmp
fidivrl
add
inc
into
xchg
aad
rclb
aad
push
shlb
clc
loopne
cmc
loope
das
in
lock
dec
sti
dec
bound
cli
pop
out
mov
iret
and
fs
divl
les
xor
mov
in
icebp
fnstenv
into
out
and
popa
cld
jnp
push
sar
shll
inc
push
mov
mov
test
xchg
mov
data16
in
push
movsb
inc
pop
pop
imul
fdivrs
cld
or
push
cmp
cmp
mov
mov
mov
and
adc
clc
arpl
dec
jmp
inc
jnp
pop
std
xor
out
or
sahf
movsl
enter
mov
push
pop
lds
jecxz
mov
mov
psubw
shll
and
cli
push
or
mov
push
mov
pusha
aad
lahf
cmc
pushf
pop
push
pop
clc
dec
xchg
int
aad
fsts
mov
and
pop
cmc
cmc
loopne
mov
mov
jno
fwait
sti
cmp
notl
stc
and
sub
shll
dec
sub
das
pusha
add
jl
and
inc
dec
jae
scas
mulb
imul
inc
or
out
push
mov
aad
mov
loop
adc
dec
xchg
inc
mov
pop
cmc
jg
adc
sbb
lods
daa
jmp
or
outsl
xchg
mov
jl
ljmp
iret
xorl
sub
or
push
adc
mov
push
jmp
addb
jns
dec
das
push
adc
in
mov
imull
sub
inc
sbb
shl
mov
xchg
xor
cltd
sub
jbe
int3
sub
dec
filds
push
mov
enter
mov
mov
imul
sub
loop
adc
aaa
xchg
inc
push
mov
call
push
pusha
ss
and
push
int
aad
cmp
in
in
dec
decb
gs
sbb
pop
push
inc
test
aad
ret
jge
imul
and
inc
into
int3
lret
stos
popl
mov
not
popf
dec
ret
ljmp
cmp
mov
mov
fwait
gs
push
xchg
pop
test
imul
lods
and
adc
movsb
lock
fucom
imul
in
fwait
not
mov
xor
xor
fimuls
fldl
fbstp
in
pop
and
pop
aas
mov
imul
sarl
popf
push
adc
push
jns
dec
add
and
push
test
add
popa
in
push
loope
fnstenv
mov
cld
and
cmp
mov
aaa
jns
in
lock
movsb
int3
or
loop
add
lcall
dec
cmp
xor
inc
sbb
stos
adc
decl
daa
xchg
test
mov
adc
add
cmp
test
movsl
or
mov
pushf
adc
pop
mov
jo
xchg
repnz
adc
and
or
pop
add
xor
mov
lods
mov
int
call
mov
outsl
add
inc
xchg
mov
mov
mov
mulps
rcrb
shrb
test
out
xlat
cmp
fidivrs
add
sub
dec
gs
stos
lods
scas
or
inc
jmp
mov
imul
sub
or
scas
jbe
nop
add
incb
sbb
mov
imul
andb
hlt
xor
nop
sbb
lcall
inc
aad
sbb
scas
pop
sahf
xchg
xchg
jge
pop
in
xchg
test
sub
jns
in
orl
sbbb
adc
cmpsb
stos
pop
call
lods
mov
popa
push
cmpsb
mov
or
lcall
push
push
fcompl
stos
scas
sti
pop
inc
lods
dec
cmp
inc
add
jl
xlat
movsb
inc
clc
xor
xor
scas
aad
and
mov
das
cmpsb
pop
std
sub
js
test
pop
mov
jecxz
xchg
inc
sahf
jg
mov
gs
sbb
test
out
cwtl
mov
pop
scas
dec
mov
cmp
push
popa
cwtl
pop
shlb
shll
dec
dec
mov
in
scas
lret
and
xchg
sti
cmp
jg
cltd
xor
xchg
inc
and
aad
add
xchg
add
cmp
testb
add
lods
or
stos
xchg
sti
jo
push
jne
push
mov
out
cmc
out
call
cmc
sarb
add
dec
mov
in
idiv
test
mov
loope
gs
sbb
pop
jno
and
cmp
xchg
inc
mov
cmp
sbb
leave
xor
and
xchg
and
xchg
popa
xor
jno
clc
scas
cmc
clc
sbbb
xor
or
cmpsl
mov
cmp
sti
jmp
xchg
mov
ret
sarb
jne
and
fidivrl
mov
scas
imul
add
xchg
pop
mov
xor
dec
and
aam
sbb
jno
movsl
xchg
lret
inc
adc
lcall
cmc
cwtl
add
push
loop
dec
sbb
sub
add
stos
mov
xor
nop
fimuls
jne
outsl
xchg
nop
shlb
aam
sub
push
outsl
sbb
cmp
dec
data16
and
or
xor
int
cltd
pusha
dec
sub
aas
or
cltd
mov
xor
mov
cmpsb
cmpsl
mov
push
insb
pop
sub
and
rcll
insl
aad
clc
popa
inc
cmpb
lcall
int
sbb
data16
mov
popf
mov
aam
or
mov
lods
mov
pusha
cltd
mov
and
or
xor
push
aas
pop
jmp
out
xchg
sbb
in
jb
int
popa
in
lock
pop
cs
cwtl
aaa
subb
decl
sub
push
jmp
fwait
inc
sti
xor
jns
nop
rclb
or
mov
and
push
scas
mov
xor
pop
pop
pop
push
push
dec
cmp
mov
iret
sti
leave
cmpsb
or
inc
inc
mov
mov
hlt
mov
movsb
je
push
cmp
inc
xor
jns
pmaddwd
fmuls
inc
mov
ret
lds
push
push
addr16
sub
insl
out
cmp
test
push
lcall
cli
push
add
mov
xchg
ret
mov
pop
push
jnp
or
or
cmp
std
bsr
mov
mov
mov
and
out
push
inc
in
rorb
aad
push
cmp
dec
int3
pop
pop
incl
cmp
inc
fdiv
mov
xor
popf
es
sarl
in
or
jns
and
pop
mov
xchg
shlb
mov
ret
lahf
sbb
or
inc
fisttpll
cltd
mov
cmp
sub
or
mov
retw
jo
pop
scas
jno
lock
and
insb
add
cmc
ret
test
jnp
into
sub
js
lods
ss
xchg
push
leave
cmp
jnp
dec
in
add
ljmp
sbbb
xor
in
or
dec
cmp
pop
sub
dec
out
aad
xlat
or
sbb
push
out
test
mov
aad
push
mov
push
ret
ror
cmpxchg8b
sbb
cmp
sbb
xor
push
xor
pop
add
enter
sahf
sbb
dec
in
sbb
pop
mov
clc
dec
jbe
out
mov
dec
scas
xchg
cs
adc
lret
sarl
xchg
sbb
repnz
cmp
pop
cmp
enter
cmp
adc
xchg
xchg
mov
dec
push
mov
aaa
fistl
mov
cmp
push
rcll
cltd
dec
cld
lds
sub
jnp
mov
bound
and
in
pop
xor
adc
pop
or
inc
or
cmp
push
cmp
in
push
cmp
adc
jmp
add
out
sub
pop
dec
fisttpll
or
popf
mov
push
rol
jmp
sub
xor
imul
add
mov
push
out
mov
xchg
or
xchg
mov
jge
inc
sarl
add
aad
fldcw
pushf
les
mov
add
push
mov
xlat
xchg
sub
clc
xchg
inc
push
xchg
jb
xlat
cmc
inc
movsl
jl
lods
jb
loopne
dec
mov
mov
ret
idivl
cmp
repz
mov
xchg
rcl
scas
or
aam
cltd
jne
inc
pop
sub
or
out
sub
notl
add
or
dec
jecxz
test
out
mov
or
sub
aad
pop
sub
shll
les
inc
int
mov
xlat
in
scas
xchg
test
cmp
negb
jns
pusha
sar
daa
pop
std
jmp
mov
mov
xor
mov
lahf
cmp
iret
dec
call
ds
push
mov
jmp
in
cld
push
shl
xchg
cmc
fildll
dec
jns
and
fsts
push
cld
mov
jp
ss
cmp
cmc
push
stos
and
mov
lods
repnz
add
fisubrs
dec
aad
addr16
fidivrl
and
imull
fxch
cmp
pop
jecxz
cmpsl
cmc
fwait
cmp
scas
lods
and
arpl
ljmp
xchg
aad
std
dec
push
into
popa
add
dec
call
cld
sub
rolb
loopne
xor
mov
aad
aas
rorl
dec
sahf
xchg
jo
mov
movsl
xor
add
mov
test
dec
sarb
fwait
mov
decl
mov
imul
test
call
scas
sub
and
xor
dec
test
sub
and
or
out
jo
push
dec
or
loope
out
jg
test
and
pusha
scas
dec
mov
or
xchg
mov
mov
icebp
pop
stos
push
mul
lods
xchg
jp
cmpsl
mov
xchg
fildl
pop
cmp
pop
inc
cltd
jno
pop
imul
leave
mul
js
jmp
add
xchg
jb
call
pop
aad
xchg
pop
cmp
cmovnp
adc
outsl
icebp
rol
shl
lods
or
inc
test
jp
xor
into
push
ret
sub
xor
aam
mov
cmp
stos
inc
inc
ds
and
xor
cmp
inc
stc
jl
jmp
movsb
pop
and
pop
mov
xchg
xor
loop
popa
dec
xchg
add
cmc
mov
imul
scas
dec
into
cmc
xchg
and
movsl
subl
pop
and
xchg
xchg
pop
stos
aaa
shll
push
pop
dec
movsl
mov
pop
dec
mov
xlat
mov
jne
cmc
mov
scas
std
or
pop
xchg
in
addb
push
jge
jmp
je
lahf
movsb
flds
xchg
fwait
icebp
mov
mov
mov
sub
cli
mov
hlt
dec
scas
jno
or
mov
mov
lcall
into
xor
xchg
dec
mov
cltd
jg
aad
sbb
mov
rclb
pop
push
gs
cltd
int3
add
jp
pusha
mov
and
mov
mov
sub
hlt
ror
inc
cmp
pusha
dec
cmpsl
sub
test
lret
incb
and
jns
or
pusha
aaa
mov
rclb
lods
jg
setg
xor
js
popf
mov
cmp
or
mov
xchg
stos
outsl
xchg
pop
inc
std
insb
xchg
dec
imul
cmc
xor
pop
and
push
andb
aad
inc
add
pushf
jl
fs
jbe
pop
je
pop
pop
sbb
dec
lret
ret
dec
cltd
xlat
scas
in
xchg
imul
inc
push
lcall
jno
int
fcomps
jge
out
movsb
sti
test
pop
inc
int3
inc
pop
xlat
dec
lret
or
mov
loopne
lret
pop
jmp
inc
pushf
pop
lret
pop
je
sub
out
mov
dec
xchg
push
xchg
incl
hlt
loope
and
inc
lods
pop
xor
sub
lods
punpckhwd
jno
and
cmp
pop
ljmp
movsb
gs
dec
jnp
test
inc
inc
int
lcall
out
jno
push
std
imul
sub
pop
lods
xchg
jle
pop
cmp
cmp
add
fs
cmp
mov
and
outsb
cmc
xor
shl
ja
push
jmp
or
and
das
jle
cmp
gs
lds
aas
stos
cmp
out
icebp
xor
or
rcl
lret
adc
sarb
push
rolb
inc
loope
out
dec
cmpsb
aam
cmp
fistps
push
ret
mov
fwait
lret
dec
inc
or
in
fcomip
and
mov
jmp
jge
add
std
cmp
shlb
aad
mov
fstps
lahf
push
nop
out
out
imul
flds
stc
fisttpll
mov
push
mov
dec
cmc
sbb
mov
dec
xchg
adc
dec
aad
lock
mov
in
sub
mov
fstpl
jmp
stos
mov
push
mov
std
push
lcall
dec
testl
out
push
divb
mov
insl
loopne
sbb
jmp
push
arpl
dec
add
js
lahf
cmp
inc
sub
or
je
cli
mov
adc
stos
aad
sbb
pop
js
pop
push
lret
or
adcl
push
jae
std
ficoml
adc
inc
pop
mov
clc
mov
push
jno
mov
xchg
xchg
aam
iret
stos
imul
test
popf
or
xor
stc
popf
int
nop
push
sub
repz
dec
test
jnp
pusha
jp
hlt
fisubs
or
out
lods
ja
in
iret
out
pop
test
push
sub
lahf
lahf
pop
stc
aad
mov
rorb
pop
ljmp
icebp
call
mov
or
push
loope
sub
or
cmp
imul
addr16
nop
imul
adc
jno
push
and
jecxz
cmp
movsb
push
inc
cmc
cmpsl
mov
imul
out
repz
xchg
jnp
ficoms
push
mov
sbb
push
dec
cmp
aam
and
add
adc
and
xchg
inc
cmp
out
and
push
jg
rcr
nop
jmp
adc
pop
fsubs
add
testl
rolb
push
add
xchg
rclb
out
mov
push
cmpsl
mov
out
les
mov
mov
outsl
xchg
aad
fidivs
cld
cli
lret
scas
enter
xor
cli
mov
repnz
push
jp
jge
nop
dec
test
xchg
stos
ror
std
xchg
cmpsb
iret
or
lods
lea
shlb
lods
loop
in
sub
cltd
cmc
push
scas
les
dec
sub
int
aad
sub
jbe
mov
test
jb
cli
fildl
loop
cmp
ret
sbb
sbb
pusha
dec
loopne
and
cmp
sbb
inc
push
mov
fidivrl
sbb
push
scas
or
and
mov
cmp
mov
std
xlat
rolb
sub
or
push
mov
rcrl
jae
repz
sub
mov
jge
add
cwtl
punpckldq
and
rorb
stos
imul
fcmovu
rcrl
imul
pop
xchg
add
pop
lock
and
push
cmc
push
xchg
imul
popa
imul
test
rclb
cmp
pop
aad
stos
repz
arpl
mov
imul
mov
fnsave
mov
mov
popa
insl
in
jle
mov
pop
clc
jge
and
jg
mov
inc
jno
out
dec
xchg
fwait
insb
xlat
std
xor
inc
outsl
into
popa
pop
mov
jle
das
aas
shrb
inc
pop
imul
xchg
mov
xor
sub
jno
cmc
dec
cmc
lahf
insb
roll
add
popa
or
test
push
popa
pushf
ss
xor
cmp
sbb
and
test
ret
fmull
aam
out
xor
and
and
cmp
arpl
xchg
lahf
ficomps
fstp
push
jmp
sub
jne
cmpsl
jns
nop
int
mov
or
leave
adcb
jns
out
sub
mov
fstps
mov
call
sbb
lods
iret
inc
push
sub
enter
imul
jge
decb
aad
jle
push
bound
dec
or
jmp
inc
mov
xchg
repnz
in
xlat
fdivrl
adc
xchg
ss
mov
lret
mov
flds
vpcmov
orl
jns
cmpsl
icebp
inc
push
add
xor
mov
popa
es
mov
nop
cmc
fstl
cli
pusha
repz
adc
aad
mov
jl
adc
popa
jmp
mov
and
dec
mov
cmc
lea
fcomps
push
xlat
xchg
fbld
sub
mov
cld
cmp
inc
imul
or
or
mov
cltd
sarl
cmp
jle
mov
add
dec
std
aad
mov
and
test
push
jae
lods
aas
cmp
ja
mov
pop
pusha
fwait
icebp
jge
bound
in
outsl
mov
mov
ja
inc
sbb
daa
daa
shrl
out
or
inc
adc
pusha
push
mov
mov
dec
xchg
jmp
fstpt
test
roll
clc
push
lcall
xchg
mov
lret
leave
sbb
sbb
mov
rorb
out
jmp
mov
add
mov
xchg
pop
add
xchg
push
jle
sbb
nop
fmull
xchg
jle
roll
and
add
cmc
lods
sub
ss
leave
movsl
inc
jg
pop
jo
sbb
sbb
loop
pushf
sub
mov
mov
lcall
jmp
jo
jns
fs
stos
sbb
cmp
loopne
add
int3
mov
imul
js
aaa
iret
jmp
pop
push
jb
push
or
fbstp
inc
repz
ja
jecxz
push
and
inc
movsl
jb
mov
sti
jns
filds
dec
jno
shrl
loope
adc
sbb
aas
bound
jae
stos
pop
jnp
out
orb
jmp
cmp
sbb
sub
fcomip
lea
xor
cli
leave
insl
jp
fsubs
dec
gs
push
inc
jbe
mov
pop
aad
pop
cli
pop
ja
jnp
clc
pop
hlt
addr16
jl
mov
popf
into
arpl
stos
out
adc
and
repnz
pusha
xchg
xchg
pop
dec
inc
ja
lods
lcall
dec
dec
lret
xchg
subb
mov
jne
in
xchg
pop
repz
jecxz
js
xor
jmp
int
push
mov
das
leave
nop
es
or
mov
push
xor
mov
sbb
lahf
ja
or
cmc
stos
cli
lods
push
ror
andb
iret
cmpsb
push
cmp
js
dec
inc
mov
sbb
sbb
jb
mov
fcomip
cmc
inc
inc
dec
jno
xchg
cs
mov
shr
int
hlt
popa
sub
xor
cld
jmp
js
jb
jo
sbb
in
inc
sbb
fsubrs
sub
cmpl
dec
not
int
dec
sub
jns
sbb
sbb
data16
int
icebp
pop
int3
nop
mov
cmp
aad
cmp
mov
test
pop
enter
scas
insl
push
dec
adc
xor
bswap
aad
arpl
rclb
mov
or
outsl
inc
ljmp
fmuls
orl
sbb
fdivrl
dec
shrl
and
loopne
mull
lcall
and
pop
stc
ljmp
shll
lahf
cmp
mov
mov
outsl
xchg
ja
xlat
sub
loope
mov
adc
out
sbb
sbb
push
jmp
mov
push
leave
pop
add
mov
loope
jp
inc
sbb
testl
jmp
dec
inc
mov
mov
mov
movsb
inc
mov
cmp
add
and
cmp
mov
pop
int3
outsl
leave
movsb
pop
push
lds
les
scas
pop
and
push
subb
lods
fcompl
idivb
test
leave
enter
sub
mov
and
add
mov
or
jbe,pn
lods
jns
stos
xchg
xorl
mov
inc
adc
or
cmp
popa
push
incl
dec
fnstenv
mov
cltd
movsl
inc
outsl
sbb
xor
add
fcoms
lods
fcmovbe
int
xor
nop
dec
xchg
enter
dec
loopne
push
and
bound
push
scas
jo
call
jmp
aad
aam
pop
push
in
sub
xchg
jne
and
cmc
ret
ljmp
jmp
stos
fistpl
or
cld
dec
int
test
fisttpll
ret
cmpsb
jge
push
icebp
test
mov
gs
int
rclb
mov
aad
push
in
lods
mov
shlb
mov
pop
mov
adc
mov
or
stos
fists
jmp
cmp
loop
arpl
or
ljmp
jb
sbb
negb
andb
cwtl
push
and
or
or
test
cmpsl
mov
aaa
mov
divl
stos
mov
cli
sub
idiv
and
cmp
iret
add
xor
filds
pop
sbb
and
dec
dec
insl
adc
pop
loope
pusha
push
frstor
dec
pushf
aad
hlt
push
les
enter
aam
loope
mov
jg
sub
fisubrl
insl
mov
jne
inc
bswap
sub
inc
mov
add
sub
inc
fs
in
in
dec
mov
frstor
push
jb
loop
xchg
sti
cmpsl
jp
notl
shlb
or
pop
sahf
jnp
jb
mov
jb
dec
mov
je
mov
push
mov
pushf
js
push
dec
pop
sbb
nop
xchg
and
sbb
add
cmp
and
push
in
xor
sbb
cmp
or
add
dec
cmp
lds
mov
out
ret
data16
loope
add
add
aad
movsl
in
and
and
xchg
xor
push
addr16
jge
pop
xor
test
andb
push
xchg
or
fnstsw
iret
aam
std
adc
xchg
sbb
push
or
and
cmp
loopne
outsl
xchg
aam
fstpt
fsubrl
lods
lcall
aaa
das
cltd
mov
and
in
cli
divl
rclb
or
adc
pusha
je
jl
or
and
jmp
push
lock
jl
add
movsb
mov
xchg
push
scas
adc
pushf
pop
popa
je
dec
lds
jl
sub
push
mov
jge
into
xlat
and
test
aad
test
mov
push
int3
lret
insl
xorb
push
testl
push
imul
shl
sbb
adc
mov
cmp
dec
ja
or
pop
into
stc
lea
mov
sub
adcl
shr
add
enter
mov
out
xchg
adc
and
xchg
xlat
in
addr16
mov
add
or
movsb
mov
out
sahf
xchg
dec
imul
mov
xor
shl
aaa
fs
xchg
inc
insl
cmp
xor
call
or
dec
imul
push
ljmp
mov
add
stos
das
mov
stc
test
daa
aad
inc
jne
mov
lods
push
or
mov
std
repz
jl
popa
in
hlt
push
out
outsl
adc
std
mov
outsl
mov
lds
stc
aad
sbb
outsl
inc
dec
cmp
stos
xor
xchg
imul
inc
jmp
aas
xchg
rcrb
sub
sbb
mov
sbb
fbstp
sbb
or
cmp
cs
les
dec
or
inc
cmp
inc
jp
xchg
sbb
mov
sbb
inc
sbb
lahf
popl
push
icebp
fisttpl
aaa
repz
fadds
cmc
sbb
aas
xchg
adc
dec
psraw
out
jp
div
push
fcmove
mov
int3
push
xor
test
cmp
int
jl
xchg
decl
and
daa
lods
test
fiaddl
jo
jge
iret
call
xor
sbb
xchg
adc
ds
rorb
mov
insl
loope
mov
push
jmp
sbb
jnp
dec
cs
and
xor
fcompl
dec
aad
fisubs
lock
aad
adc
addb
outsl
jb
repz
out
push
push
push
gs
xchg
mov
insb
sarl
mov
dec
lea
mov
xlat
imul
test
nop
mov
and
pop
add
ret
push
push
negb
scas
mov
xchg
test
adc
rsm
mov
enter
test
xor
push
or
mull
jle
int
xchg
dec
imul
fwait
xchg
jno
repnz
mov
stos
mov
sub
push
mov
and
into
dec
pusha
daa
xchg
aad
sbb
ret
or
pop
mov
in
xor
icebp
xchg
mov
sub
ss
push
pop
and
mov
imul
cltd
insb
mov
cmp
xchg
enter
popa
mov
iret
outsl
mov
test
int
adc
fwait
cmp
sub
bound
push
pop
jl
fmull
stc
decb
int
jl
int3
xchg
xor
mov
cmp
add
mov
and
invd
xchg
jo
sbb
jg
dec
dec
jmp
test
xchg
add
sub
mov
pop
outsl
loop
out
shrl
push
mov
jl
arpl
inc
mov
loope
adc
jae
mov
aam
in
dec
jo
mov
std
lods
test
in
scas
les
add
adc
xchg
mov
ud0
add
in
shld
xlat
notl
and
xchg
testl
push
call
push
scas
jle
stc
mov
dec
aad
gs
cmp
xor
adc
mov
sub
push
mov
or
cli
sbb
insb
dec
xlat
jg
or
jbe
jmp
adc
pop
jns
pusha
addr16
pop
inc
mov
push
aam
pop
imul
adc
jns
testl
insl
call
popf
jmp
or
cmp
mov
jo
call
movsl
jg
jns
mov
int
push
int3
push
mov
jb
cmp
or
pop
and
aad
jg
dec
scas
xchg
popa
ljmp
jnp
or
adc
mov
inc
lcall
xor
mov
mov
pop
scas
xchg
pop
leave
mov
mov
xorb
sub
cli
loope
addr16
leave
push
mov
mov
mov
mov
iret
adc
imul
sbb
sti
push
in
shr
lret
imul
push
addr16
mov
in
push
cmp
cli
ja
and
and
jnp
cmp
pop
or
mov
rorb
sbb
cmpl
and
cmp
mov
push
cmp
add
pop
insl
pusha
addr16
sar
call
pusha
movb
into
mov
sahf
or
lods
and
inc
lahf
mov
xchg
xchg
cmpsl
mov
in
jp
out
ljmp
mov
jp
out
push
int3
stc
loope
inc
loopne
int3
pop
dec
lret
mov
setns
sub
dec
sub
xchg
roll
pop
fistl
js
ljmp
pushf
jle
std
cld
insl
push
jne
ret
int
sub
das
test
std
mov
or
sbb
stos
aad
leave
jne
icebp
mov
pushf
xor
push
addl
push
std
jl
out
pop
push
pop
mov
leave
lret
in
push
jge
popf
sbb
mov
xor
jns
cmp
js
int3
pushf
lret
jge
inc
fs
std
dec
mov
mov
pop
mov
push
or
mov
or
add
mov
add
hlt
or
dec
popa
or
jl
bswap
jg
jmp
mov
push
xor
aas
pop
jo
dec
fcmovnb
pop
int
xor
lods
fimuls
xchg
lea
xor
mov
scas
push
testl
xchg
js
jno
pop
lods
adcb
xor
mov
sbb
pop
adc
fbld
or
xchg
repz
stos
subl
xchg
cmp
out
bound
cmp
leave
and
or
adc
dec
jg
jmp
inc
inc
int
loopne
push
pushf
cmp
mov
xor
pop
or
xor
inc
mov
push
enter
and
outsb
neg
jns
cmp
outsl
mov
imul
pop
lods
sbb
repz
nop
lcall
push
iret
sub
hlt
lcall
xlat
outsb
push
cmp
movaps
mov
jl
in
lcall
scas
push
stos
lcall
test
cmpsl
ljmp
das
dec
cli
popa
mov
mov
cltd
or
fwait
jmp
lods
jns
or
xlat
xlat
push
fucomi
jp
mov
push
outsl
loop
fnstcw
aad
add
xor
dec
sub
mov
xor
sub
or
mov
aas
jnp
jbe
mov
mov
xchg
or
lods
adc
add
sbb
inc
jmp
aas
test
sub
adc
xchg
sbb
or
es
cmc
mov
mov
mov
sbb
jge
mov
out
xchg
ret
mov
fisttpll
cmc
and
scas
fucom
das
add
cmp
cli
addr16
stc
lret
adc
adc
mov
push
int3
or
add
mov
loope
popa
mov
adc
xchg
xor
add
outsl
inc
mov
sarb
xor
xchg
mov
mov
sub
cmc
pop
mov
adc
jp
push
dec
aad
push
cli
sub
in
adc
test
test
out
lret
add
adc
das
lods
sub
push
lcall
cmp
sub
lcall
sarl
out
xchg
adc
imul
or
and
popa
fcomps
adc
scas
mov
inc
inc
jecxz
fwait
into
xchg
aam
or
aad
xor
jns
enter
testl
aam
cmc
int
mov
pop
jmp
jg
jb
cmp
fbstp
into
sbb
xor
cmpb
idiv
fs
jle
fucom
sbb
jo
mov
imul
xchg
xor
call
adc
xchg
aad
cmpsl
sahf
movsl
mov
add
push
jg
sub
mov
or
fs
jge
ja
mov
scas
add
xchg
loop
xchg
js
pop
dec
mov
cld
subl
stos
xchg
or
into
lea
push
pop
dec
test
push
subl
jbe
xchg
sti
push
add
imul
push
and
mov
inc
out
das
int
imul
int
repnz
mov
int
mov
inc
paddusb
xchg
fdivrp
fldt
aas
mov
movsl
xchg
jnp
popa
adc
arpl
popf
add
lock
jno
bound
xor
or
cld
adc
cli
lods
sub
ficoms
push
sbb
inc
add
pusha
cmp
or
pop
inc
jbe
xor
repz
in
rdmsr
fcmovnbe
dec
scas
rcl
sub
es
mov
jne
cmp
je
sarl
in
xchg
pop
add
mov
mov
ljmp
xchg
out
push
jl
fs
aam
pop
xchg
inc
or
fcomp
cmp
imul
cmc
add
add
lea
sub
ja
push
loopne
mov
insb
out
in
gs
je
push
add
jno
inc
dec
sti
movsl
stc
dec
das
fwait
mov
pop
nop
xchg
inc
rclb
not
adc
cmp
xchg
aad
push
jl
mov
fbstp
into
fildll
add
inc
iret
push
loop
inc
call
subl
out
and
and
jl
sti
leave
in
sub
loop
popf
insb
add
inc
test
inc
mov
fisubrl
xchg
stos
push
and
leave
aas
roll
js
inc
or
and
insl
dec
adc
dec
jne
hlt
sub
insb
in
fidivl
fiaddl
data16
jne
add
mov
in
jecxz
pushf
mull
push
or
and
sarl
cmp
insl
cmp
and
or
out
es
pop
mov
push
xchg
je
outsb
mov
mov
or
add
cmc
popf
sbb
and
cmp
mov
test
mov
shlb
cs
pop
sarb
sarb
test
bound
sti
mov
repnz
fcom
sub
and
adc
data16
cmp
or
shll
jecxz
call
arpl
mov
cltd
pop
mov
negl
jl
and
cmp
push
add
jbe
mov
cmp
js
jl
xchg
mov
dec
ss
loopne
mov
pop
insb
or
mov
jnp
jle
inc
lcall
pop
inc
lock
scas
push
aad
inc
into
insl
xlat
inc
ljmp
sbb
out
sbb
in
in
push
inc
into
cmp
lock
mull
mov
fsubs
or
cmp
stos
pop
adc
sbb
sub
mov
aad
scas
xor
cs
aad
sub
mov
mov
enter
dec
mov
cli
sti
cmp
neg
or
or
lret
add
add
push
scas
or
dec
int
iret
cs
mov
shl
push
inc
loope
nop
imul
xchg
push
cmc
outsb
sti
imul
or
mov
int
gs
int
test
xor
xchg
pop
loop
adc
pop
mov
pop
leavew
xchg
xchg
jp
inc
test
jmp
lock
clc
or
pop
jg
dec
jbe
fsubrl
or
pop
enter
mov
push
les
lods
jg
rcrb
and
jae
rcll
outsl
pop
rclb
push
pop
int3
push
sbb
stc
jmp
or
xchg
mov
xor
mov
shll
and
and
cmp
test
cmp
cmp
sahf
jo
aam
mov
cwtl
pop
in
int
mov
cli
inc
int
sbb
in
imul
ror
loope
lds
pop
sub
xor
punpcklwd
sbb
ljmp
xor
push
les
sbb
ja
and
aam
jb
xchg
jmp
cmpsb
jecxz
cmc
jle
ja
xor
data16
dec
mov
shl
add
dec
inc
jnp
mov
aad
pushf
xchg
data16
nop
xchg
out
int
loopne
adc
adc
cmp
dec
mov
insl
jno
lahf
fsubl
cmp
std
imul
shll
mov
out
testl
and
mov
js
gs
lods
jl
aaa
lret
mov
dec
dec
or
frstor
call
sub
mov
out
xor
mov
ret
xor
sub
cmc
iret
and
mov
lods
outsl
adc
sti
cld
ret
or
mov
xchg
dec
cli
and
in
jge
stos
ja
dec
adc
cmc
fadds
inc
in
mov
aad
jo
xchg
mov
sbb
popa
cmp
std
mov
mov
prefetch
dec
pop
aad
add
ljmp
outsb
call
jecxz
or
jbe
xchg
rcrb
dec
cmp
jo
dec
loop
add
mov
je
jl
sti
gs
std
adc
xchg
pop
push
icebp
jnp
sub
inc
cmc
mov
mov
popf
into
xor
in
out
pusha
adc
aad
mov
stos
mov
push
out
aaa
mov
inc
subb
mov
loop
xchg
cmp
jno
cli
jo
jbe
jmp
mov
scas
sti
cmc
movsl
and
leave
dec
lret
inc
cs
out
arpl
in
sub
fs
jnp
insb
nop
stos
insb
add
inc
sub
sub
adc
sub
movsb
hlt
mov
dec
mov
in
jge
xor
mov
cwtl
mov
aad
iret
lods
repz
mov
inc
or
sbb
inc
push
cmp
sti
call
xchg
lsl
mov
jmp
lds
notb
pop
cmp
movaps
lods
xchg
inc
out
fnsave
inc
mov
sub
jo
cmp
push
sahf
and
and
les
adc
mov
into
in
push
lea
mov
jp
or
out
dec
jnp
sarl
add
mov
push
xchg
mov
push
les
xchg
add
rolb
xor
and
dec
mov
push
loop
inc
fnsave
rcrb
add
jmp
push
lods
push
add
sub
ljmp
or
mov
loope
aad
jl
and
xchg
push
xchg
jp
mov
sti
lds
filds
dec
pop
mov
jmp
adc
aam
clc
jg
iret
cmp
clc
mov
out
adc
xor
iret
pushf
jecxz
sub
arpl
adc
in
mov
mov
mov
jbe
or
lock
sbb
aad
fcomip
rolb
cs
jp
imul
mov
dec
xchg
jl
dec
clc
addr16
or
mov
cmp
test
mov
imul
fiadds
arpl
xchg
mov
add
dec
mov
mov
cmpsb
jle
cmp
outsl
cmc
pushf
lret
rcr
push
cmpsl
cmp
rorb
add
sbb
pop
push
mov
imul
stc
mov
cmpl
cmp
test
mov
in
js
in
sub
adc
pop
adc
dec
sub
and
outsb
jmp
imul
addr16
add
loope
imul
int
js
idivb
enter
adc
jmp
fs
cli
sarb
xchg
out
icebp
stos
mov
shrb
push
dec
mulb
aad
adc
lea
and
into
test
sub
shlb
or
jae
aad
imul
lea
xchg
or
ret
jge
popa
add
cs
sti
gs
dec
mov
les
les
ljmp
add
xchg
fs
imul
push
push
std
sub
enter
sub
and
sub
and
adc
xchg
xchg
lock
inc
aad
cmp
pop
push
in
ret
outsl
dec
insl
addr16
and
mov
push
std
xchg
cmc
fstpt
lea
movsb
mov
mov
movsb
jge
and
or
inc
pusha
imull
xchg
mov
jbe
shlb
jmp
int3
ds
test
test
mov
scas
jne
and
in
shl
mov
add
pop
jns
pop
sbb
sbb
das
and
push
in
lret
mov
sub
adc
sub
mov
jg
cmpsb
adcl
sti
pop
sbb
inc
iret
cmc
mov
in
ret
xor
cmpsb
xor
mov
lahf
aad
pop
mov
or
pop
xor
pop
xor
aaa
out
jae
repz
mov
rclb
dec
push
fisttpll
lea
mov
mov
ss
or
or
or
sub
mov
in
adc
dec
sub
inc
push
xchg
xlat
imul
jo
push
call
sub
loopne
pusha
fwait
jo
dec
call
test
test
insb
lea
imul
pushf
or
mov
insb
jge
es
in
sub
pop
lret
dec
and
jl
test
mov
sub
ja
cmp
jns
push
loope
out
inc
arpl
mov
test
pop
test
pop
push
pop
loopne
jmp
ret
or
cmc
jns
mov
lret
lahf
mov
hlt
into
xchg
adc
int
imul
das
jo
fs
xchg
aad
inc
adc
or
jo
mov
imulb
add
xor
mov
mov
sbb
push
push
test
mov
add
adc
adc
sub
mov
out
ds
rorb
aas
jmp
dec
fcomps
pop
xlat
scas
adc
pop
popf
ss
mov
mov
push
cmp
xchg
add
xchg
aad
adc
mov
pusha
adc
aad
cmpsl
adc
mov
inc
or
sbb
psraw
cmp
nop
lcall
cld
int3
mov
int3
cmpsb
fiaddl
les
clc
adc
nop
mov
ficoml
lods
std
mov
int
pushf
mov
pop
mov
push
mov
ja
gs
xor
dec
sub
sub
lcall
test
adc
fistl
mov
adc
xchg
xor
cs
jp
imul
scas
dec
and
stos
or
popa
xor
setbe
sbb
cmp
sbb
dec
aad
faddp
adc
cmp
stc
or
mov
push
xlat
shlb
ja
pop
sti
sub
add
or
das
pop
pop
adc
insb
pop
inc
mov
frstor
mov
push
cmp
popf
adc
data16
call
sub
and
xchg
and
cmp
call
aaa
mov
pop
cld
js
add
je
mov
addr16
mov
out
jb
daa
out
push
push
push
testb
lods
jno
test
mov
dec
push
push
jmp
xchg
pop
loopne
stos
jno
test
pop
sub
jo
lock
mov
adc
imul
cmp
or
test
xchg
lahf
mov
scas
mov
adc
or
xchg
cltd
fcmovbe
push
adc
shl
push
mov
out
mov
xor
add
mov
insl
ds
int3
sbb
ret
or
fcomi
add
pushf
iret
movsb
in
aad
mov
inc
add
push
shll
fcmovb
mov
fcmovnb
addb
imul
add
xor
xchg
mov
inc
nop
sbb
fiadds
dec
and
mov
roll
inc
cmp
and
les
xorl
jmp
popl
arpl
or
xchg
popa
arpl
or
cmp
dec
jmp
and
jl
pop
ss
dec
fisttpl
xchg
ss
std
sbb
mov
int
int
cld
mov
jmp
mov
mov
jge
cmp
jne
pushf
lods
rcll
stos
in
jno
push
cmpl
push
ljmp
pop
cmp
mov
or
or
mov
aad
mov
sbb
pop
xlat
jmp
cli
xchg
xchg
iret
and
xor
inc
xchg
mov
adc
push
imul
int
xchg
aam
pop
or
push
fsubp
sbbb
add
bswap
mov
sahf
and
stos
jge
ss
mov
lcall
imul
jle
xchg
push
and
cmp
xor
jl
fbld
adc
out
dec
lock
hlt
adc
and
test
bsr
aad
sub
test
cmp
xchg
aas
loope
int
cmp
sti
add
and
insb
jg
leave
mov
mov
and
ficomps
jns
call
stc
mov
testl
ljmp
pop
in
lods
cmpb
popf
popf
enter
cmc
push
mov
into
popf
mov
push
testl
cmc
lret
mov
cwtl
xchg
pop
pop
mov
and
adc
insl
ffreep
or
and
ja
pop
mov
push
sub
pop
or
out
in
mov
stos
aam
mov
fs
adc
nop
das
cmp
add
and
jns
inc
fucomi
xor
imul
cmp
outsl
out
mov
ss
in
mov
jl
adc
addr16
outsl
mov
aaa
data16
xchg
push
mov
push
aad
mov
mov
xchg
mov
dec
xchg
loopne
cmp
mov
add
into
cmp
or
mov
inc
fs
mov
scas
or
add
add
or
shll
outsb
shlb
sbb
push
push
xchg
ja
mov
fildl
pusha
fstpl
scas
jmp
lcall
movsb
iret
sbbb
jo
adc
daa
insl
cmc
into
jb
test
leave
fldenv
or
cmp
sbb
call
dec
iret
add
cmpsl
jnp
out
push
jb
dec
add
cmp
movsl
lods
adc
mov
and
mov
xchg
sbb
dec
fdivrp
add
lods
idivb
pop
fs
pop
testb
cli
mov
lea
roll
push
mov
jge
cmp
xchg
xchg
sbb
mov
outsl
int3
cmp
out
inc
and
sbb
sub
test
icebp
outsb
lcall
jge
lahf
shlb
insl
nop
push
mov
dec
dec
adc
xchg
test
pusha
arpl
xor
lods
vphaddubw
jne
popa
nop
pop
jge
push
adc
cltd
mov
mov
fs
or
in
xchg
cld
cmpsl
aad
mov
mov
stos
jmp
dec
mov
fsubl
cld
call
cmp
hlt
les
imul
in
flds
push
aad
mov
es
repz
aad
fistps
sbb
mov
xchg
divb
push
jp
adc
mov
jne
mul
push
int
sbbb
fucomi
xlat
mov
rcr
or
adc
mov
lea
push
fs
mov
pop
testb
inc
xchg
sbb
mov
fisttpl
movsb
je
mov
cmp
mov
adc
in
rcrl
mov
fptan
loopne
loop
das
cmp
mov
ljmp
mov
jg
out
xchg
aam
aas
out
mov
sub
jmp
or
jns
dec
cmc
repnz
adcb
xchg
cltd
into
test
inc
push
fimuls
out
cmp
mov
call
in
jmp
in
lea
gs
stc
jns
cltd
mov
xchg
pop
mov
gs
jle
or
jge
loopne
das
sbb
lret
pop
lock
iret
insb
jb
inc
xchg
repz
push
and
outsb
aas
aas
jmp
cmpl
sub
repnz
test
mulb
clc
outsl
push
sub
sbb
jl
rcrb
add
or
lea
scas
and
mov
stos
int
and
setg
pusha
mov
ljmp
push
je
sub
leave
stos
scas
jbe
push
testl
and
test
inc
aad
jmp
sbb
pop
xchg
dec
rcrb
mov
push
in
mov
or
push
int
xchg
push
sbb
out
or
push
cmpsl
in
loop
fisubl
es
push
sbb
fdivrs
sbb
cmp
test
shlb
fidivl
push
loop
pop
mov
jmp
mov
jge
jg
xchg
mov
adc
sub
mull
cwtl
enter
fxch
scas
or
xor
mov
stos
loopne
push
cmpsb
or
bound
jmp
mov
pusha
xchg
mov
and
mov
dec
xor
mov
out
pop
or
adc
ja
scas
xchg
xchg
push
stos
js
xchg
mov
xchg
mov
and
jnp
jno
shlb
rorb
fdivl
pop
mov
mov
adc
or
in
adc
jmp
test
push
das
push
leave
cmpsl
outsl
adc
roll
sub
bound
pop
pop
cmpsb
shlb
cmc
lock
xor
and
pop
cmp
xchg
out
push
aad
int3
mov
sub
lods
cmp
into
or
cmpsb
faddl
xchg
xchg
fwait
pop
cmp
lcall
mov
push
int
and
jnp
pop
fwait
sbb
jl
pop
insb
xchg
mov
addr16
mov
paddsw
aam
loop
addr16
xor
int3
iret
lret
lea
fmuls
out
fidivrs
push
in
xchg
sahf
fs
cmp
xchg
push
jecxz
aad
xchg
in
add
cld
pop
rcl
sub
mov
sbb
cmc
int
inc
fmull
jp
adc
aas
out
or
ljmp
lret
jmp
push
or
orb
mov
cmp
xor
jg
mov
mov
push
popf
xchg
iret
mov
mov
outsl
mov
addr16
adc
int
mov
push
lds
call
ret
sbb
loope
pop
fisttps
loope
into
sti
adc
dec
rclb
dec
outsb
push
aam
xlat
out
mov
adc
aaa
pop
jno
push
in
fucomi
jl
adc
cmp
aad
add
xchg
aam
xor
xchg
mov
or
stc
xor
jnp
jle
test
xorl
es
popa
adc
mov
xor
push
stos
ja
inc
xor
add
stc
adc
ret
push
pop
add
mov
loop
sub
mov
loope
test
std
sub
sub
les
or
stos
cwtl
or
lret
mov
pop
popf
or
test
jnp
rsqrtps
add
mov
js
mov
xor
push
adc
int3
inc
jg
mov
and
or
lcall
lcall
and
fbstp
mov
mov
sahf
xchg
fmulp
pop
cli
add
cmpsl
adc
rcl
aas
mov
lret
mov
mov
cli
jne
xchg
jl
test
aam
jns
push
das
pop
sub
mov
and
scas
and
inc
jnp
cli
gs
cmpsb
xchg
add
jns
psubd
cmp
cmpsb
nop
daa
in
jbe
push
dec
add
into
inc
and
sbb
or
shll
pop
cmp
adc
and
pop
fisubl
lods
notl
push
mov
subl
mov
fwait
jle
clc
stos
xchg
sub
dec
ja
in
pop
inc
add
pushl
push
cmp
jo
push
lds
mov
aaa
outsl
ja
fsubp
mov
cli
fcomps
outsl
dec
fnstcw
sub
mov
lea
aaa
lret
add
in
int
cmp
je
andl
push
gs
xlat
stos
jo
imulb
xchg
in
cmp
aad
orl
mov
imul
gs
and
pop
repz
push
jl
arpl
xor
jno
and
stos
enter
in
jmp
dec
leave
imul
inc
xor
add
mov
scas
xchg
nop
and
pop
xor
or
sub
clc
adc
loopne
jecxz
xchg
jg
int
hlt
cmp
lds
cmc
mov
jl
push
pop
mov
fwait
jns,pt
popa
mov
cmc
imul
and
jmp
js
je
jo
lret
dec
insb
stc
mov
frstor
insb
data16
xchg
inc
outsl
push
xchg
shlb
movsl
and
popa
jnp
out
adc
add
mov
je
mov
jae
and
sub
mov
push
sub
push
dec
cmp
sub
inc
mov
mov
or
sub
or
cmc
ja
in
int3
mov
test
add
testb
loopne
xchg
imul
leave
popa
mov
sbb
pop
pop
xchg
jnp
dec
aad
pop
push
inc
xor
or
mov
sbb
jmp
sub
std
xchg
jnp
int
inc
or
lods
mov
pop
fdivl
ret
mov
mov
cmc
test
mov
movsl
sbb
xsave
push
sbb
or
add
pushf
lea
movsl
dec
sub
stos
in
sub
xor
sbb
iret
lods
jle
ja
xor
sub
xchg
pop
adc
and
lods
test
popa
fcomip
mov
sti
or
or
or
mov
sbb
inc
lods
dec
mov
mov
stos
xchg
loopne
pop
fists
push
in
mov
sbb
pop
div
lods
jo
dec
and
xchg
pop
jne
repnz
aad
les
xor
and
push
outsl
aad
push
into
jns
dec
or
fcmovbe
stos
insb
jmp
loope
sub
sub
rorb
hlt
je
dec
dec
lcall
int3
aad
bound
fwait
and
xchg
pop
or
dec
mov
daa
jns
inc
add
fcoms
outsl
xchg
push
popa
sahf
test
into
vmread
mov
sbb
add
lock
js
push
mov
iret
jecxz
jge
aad
outsl
jp
fisttpl
or
mov
out
cmc
fisubl
lods
jmp
jl
test
inc
xlat
cmp
ret
mov
out
je
sub
rcl
outsl
cs
mov
std
dec
sub
jo
out
xor
aaa
int
rcrl
adc
and
out
or
cmp
in
mov
dec
shll
sub
inc
out
outsb
or
xchg
mov
fdiv
dec
sub
mov
movsl
in
cs
cmc
popa
pop
iret
pusha
dec
sub
mov
cmpsl
dec
inc
je
testl
xor
into
test
ret
xchg
jne
or
cmp
mov
or
jbe
ret
adc
add
cmp
notl
out
jns
aam
enter
inc
cmc
outsb
call
xchg
jne
lock
imul
push
pop
arpl
mov
popa
xor
scas
dec
add
iret
stc
mov
jne
iret
or
mov
lods
adc
xor
xchg
sbb
mov
add
stos
lret
dec
push
rcrb
scas
cltd
and
mull
inc
les
mov
pusha
xor
push
jle
mov
push
sub
rcll
call
xchg
loop
push
jmp
pushf
and
and
xor
movsb
sbb
in
aam
stos
sbb
dec
xchg
mov
pop
cmpsl
out
mov
clc
sub
mov
add
arpl
out
cld
pop
js
push
out
fists
xchg
push
xchg
loopne
dec
adc
divl
dec
pushf
lcall
mov
jne
mov
clc
mov
pop
jmp
ja
jns
mov
bound
lods
jae
mov
int
jmp
dec
jle
cmp
mull
push
cmc
adc
adc
cmp
jmp
jae
jg
dec
movlhps
xchg
pop
add
mov
xchg
pusha
push
loop
sahf
int3
js
cmpsl
mov
div
sub
enter
xor
sbb
xor
sbb
push
jmp
rclb
cltd
mov
pop
decl
mov
cmovbe
sub
inc
insb
jbe
xor
scas
addr16
fmuls
imul
xchg
pop
push
lods
push
xor
add
arpl
cli
and
ret
aad
sub
mov
pop
std
js
fs
outsb
xchg
xchg
jb
dec
lods
adc
xchg
mov
out
xor
and
pshufw
cs
add
xchg
filds
mov
add
icebp
mov
add
cmp
bound
and
jmp
add
xor
pop
dec
pop
inc
aad
data16
out
sbb
and
mov
inc
lahf
pop
inc
xchg
jo
xorb
inc
push
push
decb
lcall
nop
sub
fsts
sub
into
mov
xor
mov
push
push
in
sbb
jns
mov
pusha
mov
cmc
setp
dec
outsb
in
fcomps
mov
repnz
mov
xlat
jnp
dec
sbb
sbb
into
aaa
cmp
xchg
or
mov
mov
xor
pop
push
into
xchg
xor
loope
imul
jl
fidivrl
fs
out
loop
xor
push
inc
mov
test
xchg
push
dec
jb
cmp
fsts
push
mov
insb
jae
dec
cmp
xchg
in
fidivrl
mov
ficomps
jae
leave
or
xor
dec
and
aad
rorb
out
mov
mov
mov
loope
cmp
or
jl
xchg
mov
fiaddl
inc
lcall
lea
or
aaa
shrl
mov
and
pop
scas
push
mov
stc
test
fs
mov
rorb
cmp
pushf
or
int
push
jmp
icebp
jmp
or
pop
bound
test
lahf
cmp
idivl
xchg
dec
xor
popa
or
or
stc
jne
int3
mov
cmc
popa
jecxz
rcr
jmp
push
je
dec
jo
mov
sbb
mov
adc
pop
pop
xchg
call
int
adc
ficoml
inc
add
lods
mov
jg
dec
jns
jecxz
gs
shll
push
xlat
or
mov
ffreep
das
jg
aad
js
shll
add
sahf
mov
xchg
and
sub
and
sti
roll
pushf
and
cmp
aad
fisttpll
arpl
cmp
pop
popa
and
sub
pusha
pop
or
add
jmp
out
pop
ds
add
je
pop
mov
push
out
sub
inc
fisttpll
test
add
cmp
mov
xor
push
iret
call
outsl
lea
js
dec
std
scas
or
fisttpl
cmpsb
dec
lods
in
outsl
xor
lock
int
dec
pop
in
push
jecxz
jmp
addr16
in
xchg
movsb
sbb
sbb
sbb
inc
fsubrs
xchg
sbb
push
mov
or
mov
outsb
jbe
les
push
xchg
push
dec
pop
test
fs
in
out
mov
test
mov
cld
in
xor
mov
test
jns
imul
push
sbb
mov
xchg
or
dec
incb
mov
xor
xlat
out
push
and
sbb
push
pusha
das
jle
add
sub
and
pop
test
push
popf
fists
mov
jae
fcomps
jmp
sti
sub
js
out
cmp
push
movb
push
cld
es
mov
pop
push
jno
jge
push
jbe
mov
or
test
cmc
gs
cmpsl
push
pop
and
dec
mov
adc
inc
push
fidivs
sub
xchg
fisubrl
push
jp
cld
call
pusha
arpl
cmp
jnp
xchg
je
aaa
inc
pop
mov
pop
inc
cltd
push
xor
cltd
dec
xchg
enter
rcrl
xor
loope
out
mov
jae
push
into
cmp
rol
lods
jnp
sbb
popl
rolb
cmc
add
dec
mov
pxor
inc
loopne
xchg
aad
xchg
addb
sbb
inc
popf
and
lea
outsb
iret
jmp
mov
xor
aad
mov
int
outsl
or
cltd
pop
outsl
insl
jb
mov
push
push
out
sbb
hlt
push
dec
data16
dec
push
sahf
cmp
add
rorl
mov
dec
sti
xchg
sbb
insb
mov
sub
jnp
sub
or
sahf
ficompl
sub
mov
dec
dec
push
sbb
jae
xchg
rorb
jmp
xor
aad
mov
es
adcl
pop
mov
fistpll
cmc
fcmove
mov
sbb
into
cmc
adc
outsl
nop
call
jp
out
dec
imul
repz
jnp
sbb
add
stos
loop
in
imul
daa
loope
mov
dec
jl
xchg
cmp
mov
dec
dec
in
jnp
pop
outsl
lods
lea
cld
pop
mov
dec
dec
dec
stos
pop
adc
push
jmp
mov
dec
bound
dec
inc
outsl
cltd
mov
movsl
xor
push
adc
sbb
repnz
shr
mov
sti
push
sti
aad
mov
lods
insl
push
mov
gs
xchg
sbb
mov
call
cmc
dec
or
lock
sar
popa
js
lret
or
orb
jb
pushf
into
call
sti
int3
push
dec
mov
iret
fsubl
dec
mov
mov
mov
out
or
nop
jg
bound
pop
repz
inc
psllw
sub
int
loop
stc
push
add
dec
lret
in
xlat
fdivp
mov
dec
dec
jmp
jp
ja
ficoml
ror
cmp
shr
pop
xchg
jnp
aad
aaa
pop
js
aam
sbb
cwtl
sbb
mov
inc
xor
imul
xchg
fs
fcmovbe
add
sbb
cmp
jbe
mov
lds
cwtl
std
xchg
sub
pop
xchg
or
jnp
les
imul
jnp
mov
cltd
outsb
mov
fcmovbe
pop
inc
push
repz
testl
rorl
mov
or
sub
lret
mov
dec
and
es
cmp
leave
mov
jecxz
push
cmp
xor
aad
scas
push
xchg
or
idivb
xor
cmp
fists
out
or
jmp
mov
lods
int
xlat
sub
jae
inc
not
fnstcw
mov
mov
or
aam
or
mov
inc
mov
xor
js
gs
mov
jge
gs
int
cwtl
cltd
dec
sub
in
jl
mov
xor
sbb
lret
aad
fsubrl
lock
loope
pop
xor
and
clc
pop
out
pushf
fsts
pop
mov
inc
pop
push
in
ljmp
adc
xchg
or
cmpsl
pop
jecxz
xchg
push
les
jle
inc
scas
mov
jg
out
xchg
pop
es
cmp
or
push
shrb
fcomip
popf
xor
stos
lods
pop
pop
mov
sbb
js
repnz
div
mov
stc
aad
fldcw
fneni(8087
mov
loopne
jmp
jnp
call
add
mov
jno
cmp
cmp
jge
aad
cmpsb
pop
mov
shrl
insl
ret
adc
insl
ror
dec
mov
lods
and
adc
mov
fildl
xchg
inc
mov
dec
aad
sbb
add
fstl
jne
call
xchg
mov
inc
repnz
adc
jo
mov
jecxz
int3
out
jp
mov
cld
out
xchg
mov
fcomp
stc
push
pop
push
xor
testl
jecxz
xchg
inc
cmp
mov
aad
lret
les
mov
js
jge
int
das
xlat
xor
or
test
sub
div
int3
and
xor
adc
jl
push
adc
fcomps
movsb
pop
out
sbb
and
insb
mov
shl
fdivr
enter
imull
xor
push
xchg
pop
ffreep
push
inc
sub
negl
cmpsb
push
add
xor
dec
push
mov
daa
mov
and
mov
and
jp
cmpsb
xchg
adc
xor
sbb
adc
lods
mov
push
test
mov
dec
aad
push
mov
aad
fcomip
cmp
aad
stos
addr16
cmp
mov
fidivl
dec
adc
pop
aad
adc
jne
jmp
cmp
add
in
mov
push
lods
out
jb
jle
cs
mov
jg
mov
push
int
and
rorb
sub
clc
bound
test
insl
sbb
adc
lods
add
cmp
bound
jp
loop
aad
mov
mov
and
mov
dec
insl
sbb
shr
das
test
mov
or
inc
push
sti
lods
or
popl
jns
les
push
cmc
lret
inc
bound
int
addr16
jge
fisttpll
dec
or
cmc
pop
pop
pusha
orl
push
idivb
jb
or
jecxz
pop
std
andl
push
adcb
mov
and
lret
js
rclb
xor
add
out
inc
shlb
add
push
push
mov
dec
fsubs
inc
mov
loopne,pn
dec
mov
or
das
pop
inc
jnp
call
imulb
aas
in
cld
or
out
push
mov
sub
fwait
lea
mov
stos
out
xor
gs
push
fists
aaa
pop
das
cld
push
jne
or
xchg
mov
xor
add
cmp
xchg
loope
mov
daa
out
pop
cmp
push
mov
jne
out
jno
mov
cmc
imul
pop
into
mov
icebp
adc
aaa
sub
data16
sahf
and
call
or
lods
push
int
lcall
rorl
mov
sti
inc
push
xlat
ret
out
fs
add
shll
sub
in
scas
test
dec
call
loope
xchg
jge
stos
mov
pop
add
jb
xchg
lods
cmp
pusha
testl
mov
cmp
repz
outsb
push
dec
or
popa
aaa
mov
arpl
jle
hlt
jbe
movb
cmp
push
aas
cmp
out
or
push
xchg
out
mov
mov
mov
inc
add
mov
cmc
sub
mov
ds
aaa
shll
loop
insb
xchg
or
jle
aad
outsb
maskmovq
imull
dec
sbb
mov
aaa
push
imul
ror
sbb
and
add
pxor
jmp
jl
mov
fildll
xor
mov
mov
jmp
xor
mov
add
cmc
xor
cld
sbb
mov
or
fnop
push
call
push
ret
fimull
push
add
push
loope
inc
or
sub
enter
out
add
dec
pusha
pushw
inc
pop
push
jmp
cmpsb
push
adc
out
int
pop
dec
fstpt
ds
jg
cmp
cmp
into
xor
cltd
jmp
std
sbb
dec
pop
or
xchg
orl
es
sbb
add
ret
xchg
pusha
bswap
aad
sbb
jmp
push
jmp
xor
lahf
push
adc
add
add
scas
cmc
fs
js
lea
xchg
mov
mov
fnsave
push
cmp
loope
jecxz
out
pusha
jns
iret
aaa
aad
sbb
inc
gs
test
andb
pop
mov
adc
jnp
push
out
inc
cmpsb
orl
push
dec
jnp
in
int
gs
inc
sbb
movsb
pop
jl
mov
sbb
and
decl
push
cmp
mov
push
fstpt
lods
or
mov
and
cmp
cld
call
mov
arpl
int3
repnz
mov
adc
fcompl
ljmp
imul
fisubrl
inc
push
sub
adc
cmp
mov
dec
pop
ret
test
in
in
ja
ret
gs
mov
push
push
hlt
inc
cld
test
sbb
or
add
adc
insb
in
out
push
lods
or
pop
sti
mov
cmp
push
xchg
jle
pusha
push
xchg
jl
divl
mov
js
or
test
int
add
nop
xor
iret
adcl
or
jl
popa
mov
lods
jne
bound
dec
xchg
jae
push
imul
in
filds
cmp
push
mov
mov
xchg
mov
nop
or
pop
pop
ret
loop
xchg
dec
ljmp
es
mov
inc
aas
cmp
mov
mov
mov
and
repnz
dec
mov
ja
call
js
sarl
mov
dec
fimuls
and
call
xchg
ret
inc
pop
in
adc
push
mov
pusha
or
jo
or
mov
jl
mov
push
jns
xchg
shrl
ret
lahf
hlt
jge
movl
xchg
scas
stos
xor
fwait
inc
movb
cld
mov
movsb
sahf
xorb
pop
popa
mov
mov
in
dec
ret
push
inc
lods
or
int
jns
aam
mov
sbb
cld
and
xchg
testl
sbb
in
sub
lock
pop
mov
pusha
mov
pop
shrl
lods
outsl
xor
in
jnp
andl
in
cld
stos
outsl
rcrl
mov
ret
push
mov
movsl
fidivrl
loop
lds
in
scas
cmc
mov
cld
jecxz
lds
jae
imul
mov
xchg
fstpl
fisubl
cmp
jecxz
and
sbb
test
outsl
adc
or
mov
hlt
iret
ret
jle
cwtl
jmp
cmp
nop
out
std
scas
test
mov
roll
mov
cmc
cmp
cmpsb
out
sti
xchg
inc
call
jmp
fwait
aaa
dec
or
inc
rcr
ret
adc
mov
dec
cmc
xchg
loopne
sbb
pop
dec
shrb
push
mov
mov
jg
push
pop
or
mulb
mov
xchg
loopne
dec
sbb
in
into
jb
xor
adc
push
xchg
pop
add
push
lahf
inc
in
jecxz
into
lds
cmp
aad
test
clc
test
lcall
cmpb
jp
pop
pop
jle
adc
movsl
xchg
cltd
pusha
call
pop
movsb
dec
and
ror
xor
and
xor
push
jns
push
jb
pop
orl
or
pop
scas
aad
xchg
push
je
sbb
xchg
xchg
imul
add
push
pushf
jns
xchg
repnz
jmp
iret
xchg
pop
loop
hlt
insb
outsl
aad
cli
xor
fwait
or
shrb
repz
jl
mov
in
sbb
nop
dec
add
jl
adc
imull
xchg
push
push
stos
bnd
aam
pop
outsb
repz
and
push
aas
adc
enter
sti
stos
mov
push
mov
daa
and
xor
pop
or
cli
dec
sub
sahf
xlat
sbb
mov
push
adc
cli
jge
subb
xadd
aad
std
fisttpll
test
hlt
jno
adc
sti
and
incb
rolb
sub
hlt
in
cltd
sbb
lods
fisubl
inc
dec
imul
data16
pop
mov
cmp
loope
mov
add
rcrb
and
sarb
pop
xor
sub
dec
xchg
movsl
mov
add
cmpsb
sbb
pop
int
popa
and
mov
xlat
call
es
fucomip
std
adc
cmp
cmp
fistpll
out
mov
out
sti
cmc
adc
add
mov
pop
xchg
outsb
sbb
pop
aad
jns
adc
or
jg
ja
cmp
pop
adc
cmpsb
daa
mul
sub
adc
mov
add
dec
in
xchg
les
popf
pusha
pop
mov
iret
cli
ret
dec
sub
or
idivl
push
andps
or
dec
js
or
jge
stos
orb
xchg
mov
sub
call
lahf
lret
xor
push
pop
jmp
mov
dec
test
mov
arpl
xchg
leave
mov
cwtl
push
adc
inc
mov
mov
and
mov
shrb
mov
into
incl
icebp
scas
fstpt
fdivp
pop
fwait
xor
push
adc
mov
popf
cmp
jg
mov
and
fdivl
cmp
lods
faddl
ljmp
aaa
stos
xchg
jge
adc
jg
in
call
adc
add
ljmp
push
mov
or
into
cmc
out
rcrl
lods
aad
inc
subb
mov
cmp
push
scas
xor
jle
test
cmp
cmp
push
or
loop
jns
push
loopne
inc
daa
ja
outsb
or
sub
jg
aad
xor
imul
cmp
or
mov
lahf
pop
test
cmp
add
int3
adc
cmc
dec
aad
dec
ljmp
dec
or
popa
cld
cmp
pop
cmp
inc
lods
or
movsw
lret
push
mov
fs
loope
jae
insl
xchg
icebp
lea
arpl
mull
ljmp
xor
xchg
out
ficoms
aam
aad
test
sbb
jmp
mov
adc
in
js
mov
or
mov
invd
aad
in
shrl
or
sub
pop
inc
pop
push
ret
jge
push
lret
pushf
push
cmp
imul
add
aaa
push
cmp
shll
xor
fcompp
push
add
mov
or
mov
jb
cmp
sti
and
gs
stc
cmpsb
jl
fstp
mov
adc
ja
inc
pusha
mov
popa
stos
and
add
shr
fisttpl
mov
pop
out
push
outsb
pop
adc
inc
call
stc
jmp
stos
xchg
mov
jo
cmp
gs
into
mov
out
jnp
aad
shl
xor
jecxz
inc
cli
cmp
xor
jge
adc
hlt
loope
mov
pushf
jp
lahf
dec
sbb
xor
sub
or
bt
int
adc
sub
mov
xchg
mov
jge
test
cmp
in
outsb
or
mov
loope
nop
out
aaa
call
xchg
fdivrs
andb
iret
xchg
cs
rcrb
sub
test
test
popf
mov
jmp
aad
movsl
vmread
add
inc
xor
lcall
cmp
and
clc
cmp
orb
mov
les
mov
inc
loop
in
dec
and
and
xor
arpl
aad
xchg
xlat
or
inc
testb
daa
dec
stos
lret
int
out
dec
lods
or
cmp
dec
push
iret
cmc
push
fsub
cmp
mov
stc
data16
add
lcall
cmc
add
aad
xor
int3
and
xchg
sbb
cmpsl
dec
arpl
lret
loop
data16
es
inc
std
and
lock
dec
inc
jnp
pushf
jge
mov
cs
daa
cld
sub
nop
iret
idiv
cmc
movsb
fisubrs
mov
adc
mov
call
push
loop
shlb
popa
loope
das
addr16
inc
or
sub
and
int3
push
push
mov
cs
inc
push
mov
or
mov
rorl
or
stos
xor
xchg
jmp
ret
movsb
jmp
es
iret
dec
stos
adc
mov
mov
fmuls
or
negl
xor
xchg
ljmp
dec
push
inc
inc
mov
sub
lods
das
sbb
roll
hlt
lcall
cmp
es
cmp
idivl
xchg
jmp
rorb
push
dec
repz
dec
push
lods
xor
pusha
sbb
ret
pop
cmp
push
inc
movsb
dec
dec
out
mov
sti
push
fidivs
imul
inc
addr16
mov
and
sbb
pop
and
jecxz
imulb
fistl
out
add
jl
stos
cmp
or
push
or
jle
std
out
jg
push
mov
or
mov
pop
loopne
push
insl
sarl
inc
sub
mov
mov
out
aas
or
rorb
jge
mov
pop
lock
ret
cmc
cli
mov
cmpsb
nop
test
jnp
out
cld
mov
xlat
sub
fmuls
cmp
mov
iret
in
push
adc
pop
loope
push
xor
adc
jmp
dec
iret
inc
and
nop
add
pop
loope
mov
fcmovnbe
imul
cli
mov
data16
adc
mov
fldl
jmp
mul
mov
cmp
push
pop
sub
aam
repz
xchg
test
dec
fs
scas
stos
lcall
inc
imul
out
dec
shll
push
jo
dec
cmpsb
stos
pop
push
lods
jmp
ds
fstps
pop
or
mov
pop
cli
mov
push
cwtl
shlb
dec
mov
or
addr16
jo
mov
jmp
lahf
sbb
imul
inc
and
ja
repz
fildl
xlat
movsl
mov
jns
xchg
cmc
mov
cmp
mov
jp
pop
dec
into
cmc
lods
nop
negb
jmp
add
les
jbe
ljmp
clc
sub
dec
sti
jmp
push
or
rorb
ret
pop
scas
imul
fwait
dec
mov
or
xor
daa
not
and
cmp
pop
jb
rolb
ds
hlt
and
push
cmc
ret
call
std
xchg
loop
popl
repnz
aad
int
nop
pop
fidivs
cmc
cmp
or
add
int3
stc
sbb
aam
clc
dec
daa
inc
mov
adc
jo
outsl
into
imul
and
push
sbb
je
pop
int
sbb
mov
push
pop
mov
jnp
jmp
insb
pop
out
iret
arpl
mov
and
icebp
add
inc
jmp
sahf
test
mov
mov
js
jp
out
int
jge
mov
inc
xor
pop
fistps
jno
in
stos
mov
xchg
daa
add
xor
aad
sbb
cmp
push
sub
mov
xchg
jno
fists
arpl
and
cmc
les
rdtsc
js
lods
cmpsl
loope
sti
xor
or
dec
jle
movsb
push
cmp
and
add
testl
shrl
jmp
cmpsb
fwait
into
scas
push
xchg
jp
or
lea
xchg
adc
popa
ret
jle
int
insb
jge
hlt
das
sti
xchg
data16
rcll
mov
push
and
jge
movsb
lods
inc
push
adc
xlat
mov
inc
jmp
mov
jle
mov
and
je
fstl
shll
inc
adc
jns
cmp
iret
js
or
insl
dec
mov
mov
shlb
cwtl
sbb
mov
dec
push
add
call
scas
and
inc
movsb
std
mov
mov
repnz
in
loope
pop
push
xchg
dec
addr16
fs
dec
ret
mov
adc
rolb
add
mov
cmpsb
xchg
int
cmc
pop
and
cmp
mov
lds
lock
jg
cwtl
jecxz
mov
mov
jbe
cmp
outsl
pop
lods
cmp
lods
sbb
dec
add
add
dec
fsubr
jp
cmp
mov
test
jmp
xchg
fiadds
jl
mov
sbb
call
jae
aad
and
and
pop
adc
jle
shll
adc
shr
cmp
aas
sahf
push
stos
cs
xorb
test
sbbb
cmp
mov
loope
xchg
in
xchg
aam
pop
xchg
mull
dec
xchg
xlat
cmp
pop
cmp
pusha
data16
mov
leave
sar
ljmp
adc
add
mov
add
or
add
fisttps
inc
cmp
cmpsl
popa
dec
icebp
mov
xor
pop
cmp
add
or
xchg
mov
rol
aad
int3
ret
jle
fimuls
ficoms
and
arpl
cmc
jecxz
push
mov
shlb
xor
sub
pop
out
dec
xchg
mov
cli
pop
pop
iret
mov
out
xchg
dec
movsb
in
mov
sub
push
or
lock
cmc
jnp
mov
push
cmpsl
jno
jl
cltd
movsl
test
je
sub
aad
cld
cmp
and
into
pminub
and
push
fwait
imul
xor
popl
mov
jecxz
scas
inc
pop
mov
lods
add
call
popa
jmp
pushf
imul
xchg
lahf
test
gs
jge
mov
sub
mov
es
dec
mov
js
adc
jl
in
mov
fisubrs
cld
mov
mov
mov
inc
inc
out
or
movsb
out
or
nop
test
pop
xor
and
and
in
cmp
adc
xchg
shl
push
add
mov
mov
scas
fiadds
das
lods
and
jg
jo
scas
xchg
xchg
repz
iret
je
add
or
aad
test
popf
adc
sahf
lret
lcall
jg
jmp
pop
stc
aad
fisttpl
cltd
fnstenv
mov
cld
mov
pop
or
dec
fcomps
popa
fimuls
orl
mov
movsl
inc
adc
scas
dec
or
insb
mov
pop
lea
aad
lcall
jg
lcall
wbinvd
movsb
aad
sti
les
lods
jmp
mov
inc
fldl
testb
xchg
jge
leave
jns
imul
clc
fildll
mov
jmp
sub
out
notl
imul
mov
add
jp
cmc
adcl
loope
mov
and
fistpll
out
jmp
mov
add
hlt
jmp
and
mov
lock
subl
inc
sbb
movsl
cld
fsubl
mov
add
mov
test
mov
aad
jnp
gs
ss
fsubr
mov
aam
jmp
jo
mov
das
add
mov
cli
scas
sbb
cmp
sbb
mov
sti
mov
fidivrl
pop
add
cmp
mov
mov
cmpsl
jnp
push
ror
int
cltd
int
cltd
or
push
xchg
push
cmp
loopne
loope
xchg
and
push
sub
mov
outsl
mov
push
push
adc
movsb
mov
lret
pushf
sarb
or
and
sbb
call
inc
mov
sbb
jmp
xor
cmp
fadds
pop
xchg
push
mov
inc
js
add
jecxz
je
pop
xor
mov
dec
int
popf
call
outsl
fsubp
sbb
jge
in
std
add
and
mov
test
scas
sti
aad
xchg
das
in
and
add
andb
fbld
adc
add
mov
cmp
xchg
inc
mov
cwtl
pop
mov
iret
roll
jl
xor
sub
movsb
add
and
stos
fsubs
jnp
mov
das
inc
iret
lds
jb
test
inc
lods
scas
sbb
xor
icebp
stc
sti
das
repz
mov
bndstx
or
pop
inc
or
jno
inc
test
sbb
push
aam
mov
jmp
xor
fincstp
mov
stc
xchg
shrl
push
mov
mov
inc
int
jno
pop
stc
repz
pop
outsb
jp
and
or
inc
aad
test
test
push
js
popf
push
jne
sub
sub
ja
nop/reserved
addr16
dec
push
dec
fstpl
dec
loope
roll
sbb
inc
pushf
aam
wrmsr
sbb
add
adc
push
add
mov
addr16
into
repnz
dec
test
jbe
icebp
jbe
jl
jmp
loop
popf
mov
nop
sub
dec
and
xchg
or
ret
ficompl
sub
xchg
mov
test
push
test
add
cmpsl
mull
jnp
lret
sub
and
enter
ds
ret
push
mov
in
pop
xor
inc
pop
adc
push
mov
add
lret
ljmp
jbe
dec
mov
lods
loopne
cli
jns
aad
dec
daa
cmp
pop
push
enter
aas
int
popa
jecxz
repz
imul
sub
and
arpl
popa
jno
std
jl
sub
sbb
imul
decl
cmp
cld
scas
das
mov
lea
add
mov
or
outsl
xorl
mov
push
xlat
fs
fstps
divb
into
out
addr16
sub
aas
je
xlat
pop
fs
andb
std
add
push
mov
out
cmc
inc
popf
and
insl
push
pop
out
jmp
iret
sbb
or
cmp
cli
mov
mov
out
les
or
sub
xchg
shl
sbb
in
jmp
test
or
insl
insb
xchg
sarl
loopne
mov
sub
ret
or
test
gs
in
jns
out
and
mov
mov
loope
orb
and
sub
mov
int
jmp
jae
lahf
test
xchg
sbb
push
movsl
repnz
aad
push
ret
addr16
dec
mov
dec
jbe
test
push
jmp
in
iret
push
pop
popa
gs
lds
imul
ds
cmc
mov
test
inc
xlat
rcl
mov
add
in
push
xchg
dec
lods
lds
push
fmull
add
cmc
jbe
mov
push
lahf
iret
testb
rcll
dec
cmp
dec
ljmp
cmp
adc
adc
cmp
pushf
jp
or
mov
fistpl
jnp
mov
arpl
iret
les
pop
pop
or
sub
sub
in
pusha
or
in
xor
adc
pop
xchg
ret
push
fs
hlt
jns
jo
dec
add
dec
add
clc
mov
pop
and
das
ficomps
jns
xor
jge
into
enter
xchg
adc
jmp
adc
sub
loopne
cld
xchg
push
and
and
aas
xchg
mov
cli
iret
popf
mov
xor
mov
movsb
andl
cmp
aad
lret
push
dec
subb
outsb
cmp
and
pop
dec
dec
dec
jmp
jo
jp
push
aad
lods
std
inc
orb
dec
xchg
mov
js
movsl
mov
ret
aad
add
aas
orb
cmpsb
cmpsb
je
xchg
imul
mov
add
popa
scas
mov
imul
lret
jl
push
ret
imul
cmp
movsl
cmp
sbb
stos
adc
or
das
icebp
mov
bound
addr16
lea
movb
push
jmp
mov
idiv
jb
push
and
and
jae
mov
and
inc
not
enter
lods
push
lods
out
icebp
les
imul
push
test
filds
inc
cwtl
or
add
add
les
insl
aad
lods
xor
pop
shrl
dec
out
faddl
push
xor
shl
mov
test
mov
mov
and
jbe
int
mov
mov
in
pop
rcll
ret
aad
orb
push
fucomi
into
test
imul
mov
std
xchg
pop
ljmp
or
and
lods
in
adc
mov
lea
add
pushf
cmc
out
mov
xchg
add
sahf
jg
xor
xchg
xchg
notl
or
out
pusha
sub
and
arpl
repz
xor
filds
fdivr
jnp
sbb
mov
int
cmp
lcall
sub
sbb
call
fldt
dec
iret
clc
popa
movsl
push
sub
bound
xlat
test
rolb
lret
punpckhdq
jmp
or
icebp
and
mov
call
xor
sbb
fcomp
in
push
stc
mov
and
jge
jp
test
pop
pop
repnz
jmp
pop
fcoms
mov
cmpsb
push
push
push
mov
mov
push
pop
out
rclb
aam
repz
mov
cmc
in
pop
dec
dec
jecxz
fistl
dec
dec
in
push
cmc
ret
jmp
daa
bound
into
les
pop
testb
addr16
mov
fwait
mov
ljmp
mov
lahf
fdivr
ja
sub
xchg
cmp
mov
rcll
jno
xchg
out
int
hlt
pop
fmulp
dec
fcoml
dec
fnstenvs
cli
movsl
xor
push
in
arpl
std
pop
pusha
or
jns
dec
xchg
je
int
divl
lods
shrl
jns
and
movsb
int
xchg
cmpsb
mov
loop
int
out
fsubr
and
lret
and
iret
fcmovne
sbb
push
mov
outsl
xor
jno
sub
in
xor
xchg
mov
fbstp
loope
arpl
shrb
cmc
cmp
loop
mov
cld
sbb
jg
xchg
out
fbld
scas
xchg
aad
cmp
mov
cmpps
enter
mov
xlat
mov
dec
mull
fimuls
test
mov
setle
mov
loope
cs
xlat
sbb
inc
in
or
and
insl
call
daa
push
decl
popa
mov
outsl
jnp
mov
sbb
jl
xchg
xor
pop
dec
inc
jl
imul
aam
mov
sub
lahf
dec
sti
jl
inc
mov
cmpsb
mov
adc
loopne
push
dec
inc
pop
stos
and
or
or
decl
imul
push
dec
pop
cmpsb
jns
mov
into
xchg
shl
cmpsb
sub
push
sbb
push
sub
xor
xlat
shr
sub
cs
pop
dec
cmc
dec
test
dec
std
cmp
jg
or
lods
mov
sti
dec
xchg
jecxz
dec
nop
or
scas
cmp
jp
cltd
mov
jmp
int3
pop
adc
sahf
ja
cmpsb
push
push
std
andb
cmp
push
dec
pop
fnstenv
adc
int
xor
push
sbb
int3
pop
dec
dec
push
cs
xchg
push
lods
popl
xor
scas
shll
or
pusha
or
mov
sbb
jle
cmpl
lods
adc
sbb
mov
mov
stos
lea
mov
aaa
ss
and
pop
stc
xchg
pop
rorl
inc
cli
jo
mov
fists
mov
mov
or
xlat
inc
add
int3
movsb
repnz
and
aam
int
aad
pop
jp
out
jo
or
jecxz
stos
jg
push
mov
lods
jge
push
jmp
aad
xchg
mov
sub
pusha
test
mov
pop
nop
mov
loope
mov
xor
int3
pushf
out
push
jbe
mov
adc
iret
cli
cmc
cmp
adc
lods
pop
cltd
fucompp
mov
mov
jl
push
ljmp
in
or
or
or
xor
xchg
cmpsb
int3
sub
repz
push
jl
or
xor
jmp
lds
data16
enter
out
int3
pop
cmp
test
mov
mov
push
dec
iret
std
cmc
mov
push
cmp
shlb
out
cmc
mov
into
or
adc
push
imul
sub
repnz
cs
mov
push
or
arpl
subb
sahf
dec
sub
adc
and
in
push
inc
cmp
test
add
sahf
jle
sub
dec
mov
mull
addr16
pushf
repz
out
jo
or
stc
imul
aaa
push
rclb
jnp
pop
xchg
add
push
and
loopne
cmp
std
lods
sbb
pop
out
xchg
jne
push
and
out
scas
cmc
sbb
pusha
dec
pusha
fsts
cmp
xlat
fldpi
stos
sub
shlb
xlat
push
std
mov
push
scas
dec
call
inc
jl
stc
ret
add
sbb
out
test
int3
inc
mov
mov
inc
addb
adc
pop
into
loope
lcall
stc
fldt
mov
push
pop
sbb
xor
cmp
mov
mov
and
jns
test
in
or
repnz
call
lods
dec
cmc
nop
pop
aaa
out
xor
clc
add
leave
xor
js
scas
pushf
movsb
adc
mov
pushf
pop
or
jo
cltd
cmp
ss
add
jno
mov
loope
xchg
jl
cld
sti
movl
cmp
cmp
fs
push
xor
ja
sub
dec
lock
out
xchg
pop
enter
cmc
test
sbb
sub
test
sbb
mov
imul
insb
jnp
cmp
sbb
jge
cmpsl
mov
xchg
xchg
pop
sub
lods
rcl
mov
in
into
cmc
mov
fdiv
pop
int
lods
loope
aam
push
les
jmp
pop
clc
cmp
and
popf
fistl
in
popf
add
rclb
imull
xchg
mov
in
aaa
mov
jecxz
jns
rcr
add
clc
push
sbb
jns
and
fisttps
add
sbb
sbb
stos
add
push
aam
mov
lcall
or
or
xchg
push
in
mul
dec
inc
into
aas
pop
gs
ret
in
xchg
or
dec
push
decl
jg
loopne
cmp
bound
mov
fldt
cmp
shr
sbb
pop
jl
add
xchg
ja
ljmp
mov
pop
and
mov
jmp
add
ljmp
xchg
adc
mov
dec
mov
cmp
sub
mov
addr16
fsubs
int3
pop
loope
and
ret
adc
inc
rcl
fidivrs
jecxz
scas
or
sub
les
cmc
int3
aad
inc
fisubrl
inc
imul
sub
js
xlat
movsb
ljmp
negb
out
fs
shll
cmpl
mov
and
mov
mov
or
aad
dec
nop
adc
ss
mov
or
setne
sbb
aad
int
add
mull
sub
iret
jg
test
fwait
outsl
divl
sahf
gs
jo
shll
out
mov
movsb
jno
bound
sbb
mov
add
fisubs
pop
cmp
cwtl
xchg
xor
test
pop
mov
or
mov
inc
dec
aas
fidivl
insb
loope
and
js
iret
dec
test
aas
cmp
jp
xlat
dec
sub
and
js
idivb
out
pop
xor
bound
jno
cbtw
shl
lods
jecxz
cmp
cmpsb
das
stc
xchg
test
xor
adc
cmp
outsl
add
shl
xchg
sbb
adc
cmp
jge
or
in
jns
enter
dec
inc
push
xchg
jb
adc
push
inc
xchg
fildll
add
inc
xchg
addl
test
cmpsl
and
cmp
pop
xor
sbb
or
cmp
xchg
fs
sbb
cli
sub
notb
sbb
pop
dec
add
xchg
sarl
add
jmp
mov
in
aaa
out
subl
jo
adc
sub
mov
push
repz
xchg
inc
shll
out
movsb
jp
daa
int
sti
addr16
lock
cmp
jns
mov
sub
loope
jl
jnp
lahf
xor
pop
jle
faddl
mov
arpl
rcrb
jno
cwtl
mov
mov
dec
mov
jge
test
mov
stc
xor
or
adc
out
push
push
inc
aad
into
das
or
jno
push
cmp
mov
test
xchg
push
adc
pop
inc
xchg
sahf
xchg
ljmp
movsb
sub
faddl
jecxz
xlat
mov
data16
enter
xor
dec
lcall
xchg
push
cld
stos
jmp
push
repz
adc
cmp
jae
paddsw
xchg
cmp
mov
xor
nop
mov
cmc
scas
sahf
loopne
call
jbe
loopne
xchg
pmullw
inc
lret
out
out
mov
leave
cmp
mov
xchg
test
in
mov
push
jne
pop
adc
lods
push
fldl
lahf
ds
sbb
adc
push
lcall
mov
dec
inc
mov
cmc
insl
ds
jb
insb
mov
mov
rorb
pop
lahf
mov
pop
mull
nop
pop
xor
jmp
mov
test
xor
push
push
in
push
adcl
cmp
test
inc
and
ret
mov
cmp
xchg
or
jnp
mov
sbb
pop
lock
or
int3
imul
icebp
pusha
movsb
inc
idivl
jb
jne
decb
stc
xchg
fidivl
dec
setns
xor
inc
xor
adc
cmc
repnz
ret
out
call
push
jp
int
xor
cmp
scas
hlt
jbe
mov
ljmp
lcall
cmp
loopne
js
aas
sbb
lret
hlt
int
fs
adc
arpl
imul
sbb
lahf
jae
into
roll
add
pop
cmc
mov
popa
addb
imul
or
call
dec
stos
mov
arpl
lea
fstps
out
in
rcrl
xchg
or
int
xchg
cltd
insl
mov
js
lahf
fwait
aad
test
cmpb
xchg
pop
dec
jg
dec
fcomps
test
int
and
movsb
nop
xchg
test
cmpl
scas
cmc
fs
out
int
addl
insb
ja
ljmp
aad
clc
xor
cmp
cs
mov
adc
jmp
cs
mov
cld
pushf
adc
insb
adcl
ja
cmp
scas
xchg
mov
popa
cmovle
jecxz
scas
lret
xor
mov
out
adc
dec
pop
mov
adc
xchg
sub
jg
or
mov
sub
xchg
mov
mov
push
ss
cld
gs
ds
inc
fs
sub
movsl
mov
imul
xchg
jl
fs
iret
inc
push
test
jmp
pop
ror
jl
xchg
out
loope
outsl
sbb
or
pop
test
negl
cmpl
lods
frstor
cmp
xchg
dec
add
or
imul
add
pusha
cmpsb
dec
aad
notl
clc
nop
cmpsb
pop
and
xchg
sbb
out
cmpsl
aad
adc
pop
xchg
mov
lret
sti
lock
mov
cmp
cmc
add
mov
sub
dec
leave
hlt
sarb
and
pop
dec
inc
jl
lock
sub
sbb
int
cmp
adc
js
push
jne
popa
push
fildl
aad
and
in
dec
stos
lahf
into
cmc
inc
jb
xchg
sub
push
sub
pop
sub
mov
mov
vpmacsww
xchg
lret
xor
popa
adc
cmc
int3
cli
jmp
scas
mov
mov
or
cmp
aad
mov
lock
out
and
les
dec
or
cmp
ljmp
test
fdivr
dec
lcall
dec
pop
out
stos
cwtl
inc
rcrb
pusha
mov
data16
dec
pop
out
jo
pushf
into
dec
bound
ret
pushf
add
gs
imul
xchg
push
aas
mov
cmc
mov
adc
ret
or
push
push
arpl
add
dec
or
xor
sbb
push
dec
jb
push
inc
xor
mov
aaa
add
out
rorb
cmp
dec
aad
mov
mov
cmp
scas
cmc
sub
data16
cld
loop
cs
cld
push
adc
aad
cmp
insb
push
xor
mov
sti
dec
das
in
rcrb
jmp
xor
pusha
nop
out
mov
lret
mov
js
mov
je
jl
adc
cmpsb
add
xchg
fprem1
int3
dec
stc
sar
out
cmc
outsl
inc
fnstsw
or
std
lahf
add
loope
lock
adc
je
xor
into
imulb
sbb
mov
popf
enter
xor
movl
push
dec
sti
in
cli
in
out
dec
jae
adc
xor
sub
mov
jle
shrl
mov
dec
mov
jno
cmp
fistpl
arpl
adc
das
xor
mov
les
lock
test
add
fisubrl
push
dec
jp
int3
fistpl
push
pop
outsl
mov
and
dec
outsl
and
cli
js
icebp
and
jl
fidivl
stos
lods
fldenv
aad
push
imul
into
les
push
shll
cmp
xchg
pushf
insl
cmp
inc
cmp
loopne
push
nop
xor
scas
xchg
push
imul
je
adc
jmp
adc
fildll
and
stos
fwait
inc
arpl
lret
cmp
aam
loop
cmpsb
cmp
popa
lret
xchg
imul
pusha
in
jp
lret
fcom
push
pop
push
in
repz
mov
pop
aad
sub
sub
xor
dec
xchg
andb
and
in
cmpsb
pop
sarl
sub
adc
dec
add
jns
out
mov
pop
jb
inc
jge
pop
add
ljmp
mov
and
push
and
int
sub
push
std
fdiv
idivb
arpl
inc
or
pop
dec
mov
and
fistpll
cmc
or
mov
stc
cmp
mov
cmc
push
lcall
std
sbb
fs
mov
repnz
push
jae
xchg
adc
cmp
cmp
repz
testb
push
shrb
pop
mov
mov
mov
adc
outsb
pop
jp
push
or
imul
psubd
movsl
push
cmp
push
or
popa
inc
or
adc
inc
cmp
jnp
and
cmp
add
lcall
movb
xchg
fdiv
add
lret
xor
loope
dec
mov
or
mov
scas
push
inc
fidivrl
jns
in
outsl
out
nop
lea
mov
inc
xchg
scas
xlat
pop
dec
sub
int3
into
mov
out
mov
mov
dec
pop
js
lcall
out
movsl
movsl
ja
imul
pop
loope
mov
xchg
mov
popf
add
push
cltd
jb
outsl
sub
and
push
jo
or
sub
aad
mov
sub
cmp
mov
or
adc
or
pop
dec
je
jl
and
or
test
adc
add
stos
mov
cmp
mov
fnstcw
xchg
jl
outsl
cltd
cmp
xchg
xor
or
xchg
inc
cmp
fbld
clc
ljmp
arpl
cmc
call
dec
jno
cmp
addr16
xchg
leave
dec
pop
sbb
cmp
dec
sti
xor
xchg
ret
jb
mov
xor
adc
mul
nop
push
or
jmp
test
movsb
inc
jmp
add
jg
jmp
mov
jbe
push
pusha
xchg
ljmp
or
lcall
das
bound
sbb
or
arpl
lcall
adc
addr16
fnstsw
fcoms
cmp
das
mov
imul
pop
test
sub
imul
push
pop
xlat
iret
cmc
lock
loopne
testl
inc
cmp
int
movsb
fidivrs
add
int3
mov
scas
xchg
jmp
mov
sub
jl
lea
inc
cmp
aas
xor
idiv
adc
lods
int3
aad
pop
xor
js
mov
push
hlt
sub
mov
mov
xor
add
sub
dec
sub
stc
lods
shrl
into
lcall
dec
jmp
loope
adc
mov
xchg
dec
mov
mov
jge
gs
les
scas
mov
addr16
dec
xor
pushf
or
push
inc
cmc
leave
ficomps
add
call
pop
dec
mov
movsl
vmread
cli
push
mov
mov
mov
insb
dec
add
addr16
mov
out
add
mov
fwait
in
jmp
aam
mov
dec
into
sbb
mov
out
into
and
cmp
insb
mov
sub
daa
out
clc
pop
pop
xlat
aad
imul
pusha
int
mov
add
jg
out
ja
ja
loop
clc
add
sbb
fsts
divl
iret
mov
and
clc
pop
sub
pusha
dec
jns
xchg
mov
fimuls
sub
push
mov
mov
stc
xchg
jge
jmp
imul
and
cmp
or
mov
loope
jge
xchg
cmpsb
push
push
out
mov
inc
out
gs
push
sub
inc
pop
jbe
sub
imull
test
jb
sub
lcall
ds
mov
imul
push
mov
scas
inc
stos
or
or
mov
push
dec
jg
inc
gs
insl
pusha
test
mov
cmp
sub
adc
sbbl
test
and
ret
aad
out
or
dec
cmp
cmp
jge
shrl
cmp
into
ss
aad
rcrb
and
mov
enter
div
sbb
fsubl
lock
out
fnstsw
aad
mov
push
push
pop
pusha
or
sub
in
sbb
pushf
inc
xchg
or
jecxz
int
mov
adcl
pop
mov
cmc
sbb
out
jge
and
scas
aad
add
subl
aad
xlat
xor
insb
cmp
jge
mov
add
mov
push
mov
jl
mov
mov
push
int
xor
sub
dec
mov
ss
add
cli
mov
mov
or
xchg
testb
inc
fcmovbe
sbb
pop
divb
das
dec
in
lds
pop
shll
cmc
aam
mov
push
cs
or
push
and
mov
icebp
xchg
mov
call
ss
or
fildl
cmp
fstl
lock
aad
jnp
lock
adc
xchg
shlb
jnp
push
mov
ret
fs
imul
loope
shlb
mov
mov
jo
cmpsl
pop
mov
mov
inc
aam
sbb
movsl
jno
leave
xchg
inc
ret
pop
mov
lock
dec
dec
jae
cs
jle
pop
xchg
add
xor
inc
or
jl
ret
jbe
mov
jo
rcrl
sti
mov
inc
in
dec
pop
push
push
dec
insl
mov
add
fisttps
and
adc
inc
fwait
idivl
aam
or
enter
outsl
cmp
shll
pop
shrl
clc
ficoms
in
mov
mov
dec
push
sahf
out
aam
xor
jge
xlat
orl
adc
ljmp
sbb
popa
in
jno
and
xchg
repnz
mov
adc
movsl
cltd
lods
mov
cmp
hlt
out
cmpsb
adc
mov
jmp
int
xchg
gs
ficomps
decb
dec
movl
std
cmp
and
mov
sbb
mov
stc
xlat
adc
mov
cmpsb
psubd
mov
mov
in
and
lret
dec
lock
aas
lds
adc
mov
mov
fisubl
pop
cmc
sub
pop
rolb
xchg
add
lock
push
mov
cld
test
bound
xchg
mov
push
jmp
stos
std
mov
sub
or
sbb
scas
push
xchg
mov
dec
jne
mov
push
dec
pusha
outsl
xchg
into
xor
xchg
dec
icebp
or
mov
adc
jmp
mov
mov
push
mov
mov
xlat
mov
in
add
adc
out
clc
xor
xchg
ss
into
movsl
nop
enter
pop
aad
jge
xlat
mov
cmc
adc
fwait
pusha
mov
xor
andl
xchg
or
dec
mov
or
cs
sahf
cmpsl
sbb
in
sub
cmc
mov
in
inc
cmpsb
test
movsbl
mov
outsl
adc
stc
add
dec
push
add
aad
fistpll
push
inc
sbb
xchg
fstpt
movb
add
xor
xor
sbb
xor
sub
lea
fisubs
fwait
into
scas
add
orl
imul
add
lea
dec
outsl
xor
jg
pop
outsl
mov
inc
sbb
icebp
adc
push
sbb
in
cltd
call
cli
int
repz
cli
or
aad
aaa
lock
or
adc
imul
inc
ljmp
test
mov
sub
pop
cmp
mov
xchg
movsl
xchg
movsl
xchg
sbb
gs
inc
js
or
inc
mov
xor
xchg
sbb
mov
push
addb
js
lods
xor
pop
sub
xchg
ja
jl
repz
popa
pop
cmp
in
enter
sub
mov
adc
or
mov
cli
stos
dec
jo
sub
fsubrp
or
jecxz
mov
jbe
lds
stc
loope
add
add
idivb
pop
popa
cmp
fwait
lds
push
add
cld
popa
rorl
repz
xor
jb
mov
xlat
sti
xchg
fisttps
push
cmpsl
popa
add
out
jns
scas
sub
push
sbb
shl
sub
shlb
adc
mov
pop
and
mov
je
rcrb
loope
sub
imul
popa
insl
jl
repnz
sbb
sub
cmc
or
in
xchg
jb
adc
shrl
mov
xchg
dec
or
aas
push
pop
push
jbe
inc
lcall
push
lahf
imul
lds
aad
push
shr
addr16
mov
outsl
fidivrl
pop
xchg
push
repz
fbstp
in
outsl
jge
lods
and
jb
jl
out
mov
mov
nop
or
fisubs
lcall
fistpll
cmc
fnstcw
xchg
call
das
sbb
je
out
and
mov
loopne
cmpsl
bnd
roll
das
ljmp
shl
cmp
sti
or
inc
int
sti
xor
fwait
mov
cmp
fdivl
insl
push
lret
addr16
add
setne
cmp
bound
push
adc
jmp
fwait
xor
fcomps
dec
int3
sub
push
aad
in
fcmovbe
jno
idivb
or
divb
add
and
push
les
jnp
sbb
push
fstps
xchg
or
inc
int3
in
add
cmp
outsl
add
aad
jmp
mov
add
cmp
adc
dec
inc
cmp
dec
pop
sbb
push
xchg
decl
dec
push
add
cmc
test
push
in
cli
xor
fs
ret
xor
add
lea
lret
test
cmp
in
pusha
fwait
pop
std
aad
mov
sub
mov
insl
dec
or
scas
jge
pop
loopne
mov
dec
and
add
xor
sahf
rcrl
shrb
std
inc
jmp
lea
aaa
mov
test
pop
lret
out
adc
in
movsl
jne
adc
and
xor
roll
jl
icebp
loope
jo
test
mov
mov
sahf
cmp
cmp
repz
movsb
sarb
add
mov
int3
cmp
insl
mov
add
sub
lock
add
or
aas
andl
shlb
mov
mov
call
push
inc
xchg
adc
repz
aad
xchg
mov
jle
cli
addb
adc
shr
dec
push
lcall
pushf
enter
mov
call
dec
in
pusha
js
repz
xchg
clc
and
and
dec
ljmp
pop
jae
ffree
notl
test
ja
inc
push
jns
aas
pop
lret
js
out
pusha
call
cmp
int
std
imul
mov
cmpsb
xorl
pop
dec
lret
es
es
or
loope
fsubl
jbe
adc
iret
xor
pop
repz
lret
cltd
add
push
test
in
je
pop
jecxz
lahf
jge
jecxz
or
pop
mov
bound
jg
int
sarb
push
decl
imul
mov
sbb
and
mov
xlat
out
push
jmp
jmp
cmc
cmp
inc
and
lret
dec
xor
roll
cs
sub
popa
adc
push
dec
fs
cli
pop
push
int3
xchg
sbb
aad
xchg
pushf
jge
out
je
js
adc
iret
or
mov
loop
or
xor
lds
push
scas
jecxz
movb
repnz
adc
jmp
cmpsb
pop
mov
les
or
int3
or
sti
dec
jmp
sahf
mov
insl
jne
fwait
sub
aaa
iret
loop
pop
add
cwtl
pop
test
sbb
cli
pop
dec
leave
div
jnp
testb
mov
rclb
xchg
imul
xchg
test
push
inc
repz
mov
out
lods
xchg
shlb
mov
pusha
jmp
rcll
and
sub
cmc
stc
pusha
leave
int
aad
cmpsb
fldcw
call
push
mov
cmp
mov
push
xchg
and
push
and
jp
popf
push
cwtl
inc
test
pop
rolb
aam
pop
mov
push
jge
pusha
ret
out
cmp
mov
xchg
lret
shlb
or
bound
out
arpl
iret
and
je
insb
ljmp
and
mov
jg
mov
dec
hlt
stos
xchg
add
into
data16
cmc
or
idivb
in
in
bound
pop
xchg
xor
movsl
out
cmc
adc
loopne
repnz
lods
sbb
mov
lcall
push
out
sbb
stos
dec
jp
int
lahf
fcoml
mov
in
mov
xchg
mov
jge
cmp
push
popf
push
jmp
iret
jl
adc
cmp
cmp
roll
jecxz
jmp
sbb
mov
cmpsb
arpl
sub
insb
pop
pop
and
out
xlat
aad
gs
lret
jbe
xchg
imull
mov
adcb
adc
xchg
lods
push
sub
arpl
negb
jnp
mov
aad
lret
push
mov
idivl
int
addl
xchg
mov
xor
movsb
fdivrs
and
cmp
cmp
rcll
ret
dec
dec
or
xchg
clc
adc
cmp
sub
ja
jg
xchg
jmp
das
push
imul
add
dec
cmp
test
cmc
int
mov
andb
into
movsb
mov
lret
and
fstpt
mov
add
fwait
mov
push
jnp
mov
out
sub
fdivr
mov
add
mov
or
mov
xor
clc
adc
in
pop
pop
add
xchg
hlt
mov
ficoml
lret
cmp
out
std
cmovbe
imul
shr
cmp
mov
fisttpl
stos
jo
adc
push
add
test
outsl
in
mov
jg
mov
jp
pop
mov
repnz
and
leave
or
or
jp
daa
and
sub
jge
das
dec
or
or
cmp
icebp
xor
arpl
inc
xchg
cmp
dec
mov
insb
incl
std
jnp
mov
pop
cmp
pop
fldt
pop
jmp
and
or
xor
mov
jmp
pop
or
dec
add
loope
fnsave
dec
pop
inc
and
jge
xchg
movsb
test
aad
ret
dec
pop
test
out
cmp
mov
adc
andl
cmpsl
jge
xchg
or
ljmp
mov
mov
js
loop
mov
xor
sbb
dec
pushf
mov
and
and
dec
add
arpl
dec
cs
jbe
xchg
cwtl
jo
mov
or
add
push
sub
pop
and
cmc
add
mul
pop
mov
ret
xor
and
outsb
int
fcoml
roll
cmp
inc
sbb
loop
js
mov
rclb
jge
arpl
fmuls
incl
cmc
jge
mov
jne
in
lret
sbb
out
sbb
cmpsl
jae
pop
or
std
xchg
add
fsubrs
fwait
nop
sub
cmovge
fidivs
add
ds
fs
ret
cmp
fucomi
dec
stos
out
inc
stos
aaa
pop
insb
out
push
int
mov
pop
iret
ficoms
loope
mov
xchg
or
jp
out
jno
mov
xor
push
inc
dec
mov
les
add
sbb
jnp
pop
ja
xchg
imul
loope
fwait
add
shr
add
cli
out
iret
sub
bound
shl
sub
sbb
cmp
std
fdivrs
inc
jne
clc
dec
mov
jecxz
cmp
call
insl
loop
push
xor
and
adc
xchg
or
cmpb
ret
aaa
or
hlt
leave
pop
aad
fdivrp
stc
xchg
gs
dec
pop
inc
push
orl
bound
and
pop
imul
js
int
sub
pop
push
ja
inc
pop
ljmp
inc
movsl
das
cli
adc
ret
add
out
mov
data16
mov
xchg
pushf
pop
orl
test
adc
cmp
fmuls
xor
push
fs
hlt
push
jg
xor
int
mov
iret
sbb
mov
xlat
sub
xchg
sahf
jge
add
mov
lds
out
fnstcw
wbinvd
loope
lods
jge
jmp
mov
adc
mov
push
in
mov
cmp
mov
fwait
add
popa
out
aad
movsb
imul
push
std
sub
cmp
xlat
dec
or
dec
insb
cmpsl
aad
nop
dec
xchg
scas
into
adc
in
dec
into
jle
xchg
test
push
rcrl
inc
into
fcomps
mov
pusha
lea
add
lods
fidivl
xchg
ja
pop
adc
mov
fdivrl
repz
mov
fstl
xchg
sahf
push
fs
or
enter
es
inc
xchg
xchg
test
fistl
ds
xor
mov
rolb
out
fprem1
or
pop
cmp
aam
jecxz
cmc
jg
es
ljmp
push
scas
aaa
or
in
lret
mov
loopne
loop
ret
lods
fldl
hlt
cmp
lahf
xchg
push
fildl
pop
loope
push
and
sub
mov
pusha
mov
popa
adc
fs
push
adc
mov
jmp
stc
dec
divb
test
aam
dec
aad
ror
loop
std
rolb
xlat
repnz
fildll
sub
imul
punpckldq
dec
jp
jo
mov
mov
mov
sbb
jg
and
dec
stos
push
das
add
or
xchg
stc
inc
out
xor
out
xchg
test
shl
repnz
fnstcw
cmc
adc
jno
test
into
push
fwait
mov
or
dec
cmc
imul
or
pop
jnp
out
sub
adc
pop
cs
std
into
jnp
or
shll
nop
je
cmpsl
int
pop
das
fnstenv
sbb
inc
sbbl
cmp
sti
push
and
adc
nop
mov
cmpsl
add
insl
adc
cmp
dec
es
aad
rcrl
push
mov
push
out
movsl
jmp
inc
rcl
add
xchg
fadd
dec
rorb
jge
fsubrl
shrl
jg
xchg
subb
inc
or
arpl
xchg
std
mov
loope
into
jle
aad
addr16
jg
xchg
int
push
xchg
or
cmp
mov
dec
add
mov
cmp
sarb
packssdw
lahf
imul
adc
in
inc
scas
scas
add
sub
lret
pop
incl
push
jecxz
movsb
adc
shrb
faddl
jne
adc
in
mov
stc
and
dec
cmpl
inc
movsl
ja
jmp
inc
sti
lret
or
pop
jmp
push
xlat
out
inc
ret
into
pop
jmp
loopne
push
dec
idivl
ljmp
xchg
sar
sub
stos
mov
or
cmc
inc
clc
scas
cmp
push
stos
mov
pop
iret
rorl
sti
mov
test
ds
dec
jno
dec
stos
or
out
inc
mov
repnz
jne
mov
sahf
xor
int
fimull
xor
mov
pop
push
insl
pop
or
ficompl
push
mov
jae
imul
arpl
push
imul
xchg
sub
mov
mov
xor
jge,pn
xchg
std
dec
popf
rcrb
popf
cmc
int
aaa
xor
lcall
jns
adc
jo
adc
cli
popf
ret
bnd
js
dec
push
mov
cmp
test
stos
gs
rcll
sub
push
in
mov
fldl
test
stc
jnp
mov
lahf
imul
leave
in
out
and
dec
daa
lods
sti
pop
jecxz
sti
xchg
push
je
jle
insl
push
mov
fmull
dec
or
mov
mov
mov
lods
out
fdivrp
cmp
sarb
stc
push
in
jge
sti
sti
mov
jecxz
or
fs
dec
jp
enter
pusha
rorb
and
mov
push
dec
push
adc
adc
sub
out
xor
lcall
cli
xchg
dec
and
in
fwait
sti
xchg
jo
jae
lret
sub
test
out
pop
jp
cmp
daa
and
adcb
aaa
pop
push
inc
push
inc
inc
out
lock
inc
pop
inc
mov
out
add
test
ljmp
or
xchg
fcoml
fnstenv
pop
imul
rcll
xor
es
add
je
push
pusha
mov
mov
dec
aad
xlat
in
jp
push
xlat
cmc
fcomps
cmp
adc
iret
sub
push
je
mov
lret
jo
cld
sti
cwtl
xchg
sbb
mov
insb
or
les
cmp
bound
and
inc
iret
mov
leave
dec
sub
dec
fadds
ja
cmp
out
push
in
outsl
aad
lea
int3
lret
pop
stc
mov
inc
mov
pop
or
inc
in
push
dec
jmp
shll
inc
out
mov
xchg
mov
cmp
repz
hlt
aam
notl
xor
sbb
jl
fnsave
jnp
push
push
mov
sbb
lretw
inc
js
mov
add
fisubrl
mov
pusha
daa
sub
inc
std
pusha
mov
cmc
push
add
pop
jmp
adc
adc
into
xor
filds
sub
jns
ja
mov
sub
jp
test
les
ds
out
clc
xor
out
add
jmp
pop
cmp
push
int
sti
jmp
sbb
mov
jns
cmpsb
push
sbb
in
dec
jae
adc
mov
ljmp
insl
mov
jno
push
dec
push
jbe
mov
call
jnp
stos
scas
mov
cmpsl
repz
hlt
shll
mov
add
mov
add
mov
sub
cld
jle
divb
inc
and
or
scas
sbb
das
mov
das
push
or
repnz
stc
lods
mov
cwtl
aad
lea
out
les
repz
sub
mov
popf
cmp
int3
test
bts
aam
dec
xchg
pop
gs
cwtl
mov
and
ss
imul
or
ret
repnz
ds
add
mov
add
sub
and
add
mov
mov
sbbb
jae
stos
cli
fcomip
mov
mov
sub
lret
adc
aad
lods
fildl
lcall
cmp
cmc
lods
pop
filds
mov
test
pop
test
jmp
lret
pop
push
add
push
add
shrd
and
int3
inc
roll
xchg
adc
rcr
test
sbb
pop
ficompl
test
adc
or
in
mov
xlat
aad
pop
rolb
adcl
cli
test
inc
sahf
xor
into
fsubs
scas
je
pop
fimull
adc
repnz
mov
or
test
sahf
sub
add
jns
fildl
int
call
xchg
cli
pop
pop
or
xchg
lds
pop
pop
or
lret
lds
mov
cwtl
imul
cltd
in
dec
pop
adc
push
jle
rcll
ret
inc
mov
std
mov
add
inc
vmwrite
adc
les
dec
cmp
aad
pop
les
push
shll
imul
lods
loop
mov
fwait
cmp
in
jg
push
mov
cmpsl
inc
loopne
mov
int3
xchg
xchg
jo
adc
cmc
pushf
ss
pop
adc
and
data16
and
xor
fldln2
inc
dec
push
xchg
bound
adc
push
dec
xchg
lock
mov
jnp
fisttps
nop
leave
mov
popa
push
push
ret
test
leave
xor
mov
cmp
or
dec
repnz
hlt
jne
pop
xchg
rol
insl
or
mov
dec
notl
lods
inc
sbb
sub
jnp
in
jge
fdivr
sub
dec
std
and
mov
int
xchg
inc
icebp
adc
sub
push
pop
aad
pop
xlat
mov
xchg
icebp
cmp
imul
or
mov
jl
and
push
leave
cmp
pop
cmpsl
aam
or
ror
cmpsl
inc
pop
cmpsb
xchg
iret
cmc
sarl
lods
lret
adc
dec
popa
dec
fwait
out
mov
lock
daa
pop
dec
xor
cld
pop
int
lcall
adc
mov
fadd
scas
in
popf
push
ja
cmp
out
data16
imul
aaa
mov
dec
aad
cmc
adc
jmp
xor
cmc
repz
xchg
pushf
pop
xchg
dec
jge
adcl
cli
mov
outsl
loop
fmul
sbb
arpl
xor
or
icebp
mull
enter
out
mov
or
dec
xchg
mov
lahf
iret
push
mov
jg
shll
mov
mov
mov
jecxz
cwtl
enter
pusha
jbe
mov
jge
insl
mov
add
aas
and
and
jae
lock
arpl
cmc
pop
push
mov
pop
idivb
arpl
inc
adc
out
test
aas
mov
es
jl
aaa
into
in
and
icebp
jnp
movsb
xor
mov
jnp
popa
mov
std
pop
mov
nop
dec
mov
movsb
mov
dec
xchg
pop
dec
mov
testb
or
sbb
std
test
cmc
aas
dec
mov
adc
mov
inc
add
xchg
repz
ja
mov
sbb
sbb
aas
insb
aad
adc
cmpsb
pop
adcl
in
add
loopne
fwait
push
xchg
mov
and
xchg
and
popf
sti
sbb
scas
inc
int
ja
cmp
fmull
sbb
pop
mov
icebp
lods
sub
ljmp
push
cli
ror
pop
pop
out
xchg
lds
xor
jbe
pop
notb
pop
lods
shl
pop
pop
fisubs
mov
xchg
aad
jl
push
cwtl
push
ret
push
popa
negb
xchg
inc
cmp
fiadds
or
pop
sti
mov
mov
xchg
jg
neg
syscall
mov
adc
jo
ret
aad
push
in
dec
dec
das
clc
aaa
sarl
cmp
push
inc
cld
loop
sarl
jns
and
or
jnp
lea
inc
push
cmc
movsl
jae
mov
inc
je
inc
hlt
adc
loope
lods
loope
cs
cltd
push
addr16
scas
adc
mov
xcrypt-cbc
cmpsl
push
out
add
push
int3
cmc
pop
push
fisubrl
call
test
push
scas
cmp
and
into
sub
or
jne
lds
or
ud0
call
jb
cli
xchg
mov
push
push
idiv
sbb
ds
or
stos
in
jns
mov
pop
scas
aaa
enter
adc
adc
lcall
push
testb
inc
ror
xor
inc
in
out
shll
or
lcall
pop
cmp
mov
lret
int
dec
cmovs
outsl
into
insb
repz
repz
cmp
cmp
sub
das
push
cmp
mov
in
dec
bound
push
xlat
sbb
push
cmp
cmc
mov
sti
xor
xchg
jle
inc
inc
mov
rol
sti
bextr
sub
dec
push
mov
push
adc
js
scas
cmpsl
xor
inc
movsb
aaa
outsl
aad
dec
sub
in
out
or
sub
inc
shr
pxor
nop
test
push
ffree
aad
jns
fs
bound
xchg
inc
cltd
sub
in
mov
mov
jg
jl
push
jne
add
imul
mov
mov
out
cmp
lods
dec
add
add
xchg
jnp
pop
push
incl
xchg
aas
movzbl
dec
push
xchg
xlat
iret
cmp
daa
out
lea
nop
sbb
add
push
cmc
mov
pop
cmp
push
or
fidivrs
jns
icebp
mov
enter
loopne
loop
add
or
pusha
test
xor
xlat
aad
or
loop
jecxz
out
cld
push
cmpsb
or
incb
push
mov
adc
int
fwait
mov
dec
repz
fmuls
stc
stos
int
loope
hlt
lcall
lods
scas
cmp
loopne
call
ficomps
mov
xchg
into
jl
mov
lea
xor
shlb
gs
xchg
mov
inc
sar
dec
mov
push
iret
mov
or
add
int3
clc
pop
cmpsl
iret
ljmp
add
or
into
les
add
stos
adc
nop
sbbb
rolb
push
in
add
xlat
ret
add
std
push
push
mov
lods
and
clc
mov
bt
add
mov
lcall
pushl
push
sbb
mov
add
adc
and
inc
mov
xchg
cmpsl
fcompl
or
pop
out
fbstp
push
pop
inc
addr16
aad
int
cmp
adc
xor
and
pop
mov
add
or
dec
dec
bound
xor
fstps
jle
dec
push
xchg
es
cld
or
jmp
imul
jmp
and
cmp
or
xlat
lret
push
cmp
pop
out
or
sahf
call
cli
pop
decb
imul
loope
pop
rcr
sti
push
cltd
clc
cmp
cltd
or
jmp
test
mov
jl
in
je
or
sub
cmc
mov
jno
jecxz
mov
mov
dec
sub
push
cmc
mov
popf
shr
push
jle
cmp
stos
lahf
xchg
out
inc
jmp
call
and
call
push
dec
mov
push
push
jge
cmp
cltd
xchg
fsubp
cmp
xchg
les
mov
popa
dec
xor
lahf
js
push
xchg
ja
and
test
pusha
inc
xchg
in
scas
jb
sar
mov
lret
and
out
fisubs
int3
in
fbld
imul
sub
nop
cmp
jb
cs
or
lods
fldcw
mov
xlat
repnz
cld
test
mov
mov
popa
mov
or
jp
and
das
jmp
cli
cs
aad
xor
dec
cmc
movsl
and
arpl
add
pop
xchg
ds
int
xor
aaa
fsubrl
jmp
mov
cmp
xchg
jns
icebp
insl
mov
cmp
and
or
or
cmp
out
leave
pusha
jbe
inc
enter
or
lahf
mov
enter
mov
or
add
notb
test
scas
call
or
sbb
adcl
dec
dec
mov
test
outsb
js
repnz
mov
mov
aad
test
dec
pop
fmul
or
and
stc
sti
popa
popa
mov
imul
sti
mov
popa
stos
ret
inc
popf
rol
push
inc
lahf
in
xchg
test
xchg
adc
jbe
mov
mov
xchg
adc
loope
aad
pop
loope
scas
jne
and
hlt
push
lret
pop
sub
mov
aad
cmc
jp
fildll
imul
pop
aad
cmp
xchg
int3
sub
sub
jg
movsl
leave
pop
das
mov
int
add
sbb
jle
adc
mov
add
stos
add
or
add
push
mov
lret
sbb
cmpsb
adc
cmp
fwait
jecxz
shrb
aad
pop
xchg
clc
setne
cmpsb
aas
adc
add
call
int
push
out
cmc
xor
lahf
out
mov
sbb
aad
ficoms
inc
adc
mov
push
add
jno
inc
sbb
dec
daa
pusha
shll
stos
jp
push
stos
or
cmc
xchg
sbb
shrb
xchg
lods
inc
mov
push
stos
cld
roll
or
loop
push
notb
ljmp
dec
jl
popa
pop
idivl
aam
and
lea
or
pop
add
inc
inc
mov
mov
mov
adc
xchg
lods
dec
mov
aad
and
outsw
jae
aad
jne
xchg
push
int3
cmp
push
fwait
setne
cmpsl
jl
rolb
or
mov
cmp
mov
rcr
add
test
push
stos
arpl
xchg
pop
push
xchg
test
push
inc
adc
sarb
mov
mov
dec
xchg
bound
cmp
test
iret
pop
xorb
les
mov
cmp
mov
inc
clc
adc
sbb
cmpsl
mov
stos
mov
lds
jnp
and
in
adc
jl
push
xchg
sbb
in
test
mov
push
das
stc
aad
mov
mov
rorb
cmp
fwait
pushf
push
or
sub
ljmp
arpl
dec
add
adc
out
pop
imul
ss
mov
xchg
mov
and
dec
adcb
std
dec
scas
cs
adc
or
push
insb
mov
jns
push
sbb
inc
dec
push
inc
inc
cltd
adc
push
add
xchg
xchg
insl
pop
inc
fwait
je
and
repnz
xor
mov
sbb
pop
jp
mov
dec
xorl
js
filds
sbb
mov
and
jmp
aaa
jb
into
sbb
dec
mov
xor
testl
imul
xlat
imul
sub
nop
add
cmp
lods
test
push
push
pop
mov
or
xor
les
inc
or
pushf
dec
test
outsl
lahf
repnz
mov
sbb
dec
daa
addb
mov
adc
adc
dec
sbb
test
cwtl
popl
jecxz
xchg
hlt
in
inc
adc
arpl
dec
xlat
dec
mov
popa
sbb
imul
mov
push
push
push
filds
bound
dec
popa
and
sti
scas
in
mov
mov
push
dec
mov
mov
mov
xchg
sub
mov
faddl
lahf
xor
dec
xchg
inc
pusha
leave
fisubrs
lcall
call
mov
shrl
xchg
push
lods
pop
inc
xchg
std
sahf
mov
add
cld
arpl
int3
sti
call
jo
xchg
mov
xchg
pop
fmull
lcall
or
or
xor
js
test
shlb
mov
movsl
or
xor
pop
dec
cltd
mov
pop
inc
cmc
xchg
popa
or
mov
jmp
lods
push
mov
out
push
dec
fcmovbe
and
dec
int
movsb
clc
xchg
push
loopne
mov
xor
mov
cmp
outsb
add
ret
mov
cwtl
push
call
leave
xchg
push
hlt
outsb
cmp
mov
and
imul
fists
add
jl
sub
iret
je
pushf
cmp
rcl
add
pusha
pop
cwtl
roll
decb
mov
roll
dec
or
adc
ret
out
xchg
lods
inc
addr16
cld
test
jmp
dec
or
push
mov
rcr
adc
imul
lods
rdtsc
jmp
mov
scas
and
mov
cs
inc
add
dec
sarl
popa
ret
unpckhps
adc
mov
lock
lret
jmp
pop
test
cmp
outsl
pop
or
loop
push
das
aad
adc
int
push
insb
mov
testl
cmp
sub
jmp
bound
sub
push
in
shlb
in
jle
arpl
stos
dec
or
xchg
dec
xor
and
pop
inc
sbb
pop
sti
xor
pushf
jp
lea
inc
ja
sbb
or
cmp
push
jge
push
push
fwait
jns
test
sub
test
xchg
js
stos
fmulp
fucomp
xor
lret
or
stc
loopne
scas
aad
cltd
sahf
imul
mov
jl
push
adc
imul
bound
or
cmp
test
in
popa
or
fs
aad
std
in
ret
fisttpll
xchg
push
or
adc
dec
adc
aad
lods
gs
in
fimull
imul
gs
mov
pop
scas
push
adc
in
mov
push
int3
mov
hlt
jp
adc
ja
jne
arpl
inc
mov
cli
into
ja
cli
xchg
mov
push
cmc
dec
dec
push
xchg
mov
mov
lods
loope
sbb
pop
sbb
aad
je
push
lahf
sub
testl
dec
cmp
add
stc
jmp
cs
dec
cli
aas
ret
dec
subb
or
xchg
aad
mov
push
das
hlt
lcall
dec
and
cwtl
scas
push
lods
or
mov
sbb
ret
dec
add
dec
mov
iret
push
cmpxchg
dec
fsub
mov
fs
mov
subl
inc
lahf
cmp
scas
mov
pop
fidivrs
adc
nop
mov
inc
and
mov
iret
into
cmc
or
rclb
js
cmp
negl
les
das
shl
insb
int3
adc
mov
push
negl
int
lret
add
aam
aad
jge
push
into
push
xchg
mov
mov
out
movsb
out
mov
sub
mov
js
sub
xchg
das
sbbl
fildll
iret
into
jno
mov
mov
das
ret
sbb
stc
dec
pop
fisubs
push
mov
arpl
ret
mov
pop
mov
lods
push
pop
loop
movsl
cmp
pusha
pop
mov
or
pop
jl
push
jmp
lcall
sub
lods
sub
adc
lods
jl
or
ljmp
mov
cmp
and
ds
pop
xor
sub
inc
mov
pop
jb
data16
hlt
gs
cld
test
negb
repz
mov
jl
call
mov
adc
jecxz
js
lods
aad
jg
jns
or
xchg
orb
aad
std
or
imul
cmpsb
stos
idivl
std
mov
or
mov
push
xor
inc
test
xor
aad
repz
test
xor
fsubrs
scas
stos
or
cmp
repz
push
pop
mov
int
inc
lcall
dec
push
cld
rcrb
cld
inc
xlat
push
call
mov
clc
jl
into
push
xor
sub
out
push
out
ror
punpcklwd
and
fcmovnb
sti
sub
loopne
jmp
dec
cmc
jne
xor
pushf
gs
inc
imul
imul
lock
xor
in
xor
leavew
or
mov
jo
or
sub
cli
adc
mov
and
sti
ret
frstor
mov
or
mov
or
divl
ljmp
mov
aad
inc
sbb
les
add
sarb
jb
std
mull
in
mov
push
jge
in
inc
int
fimull
or
or
js
mov
adc
mov
jp
js
xchg
icebp
dec
js
jmp
cli
xchg
mov
jp
mov
ret
or
pushl
mov
int
xor
cmp
mov
push
lods
add
mov
stc
mov
inc
push
sub
mov
mov
or
rclb
jns
popa
xchg
mov
cmpsb
lea
addr16
push
mov
mov
mov
cli
fsubs
xor
das
jge
mov
cmc
movsl
xor
gs
rcl
mov
add
inc
int3
pop
aaa
cmp
shrl
mov
mov
mov
lcall
gs
or
mov
gs
push
js
xchg
jnp
aas
xchg
sub
inc
enter
mov
and
add
mov
mov
and
rol
idivb
mov
fiaddl
mov
ljmp
jae
pop
cmp
push
fnstcw
fdivrs
icebp
stos
mov
add
jns
pusha
orl
mov
mov
jmp
test
outsb
dec
dec
shll
aad
adc
jmp
mov
outsl
cli
pop
js
pop
clc
ja
sub
sub
ss
push
fwait
loope
adc
negl
add
fistl
xchg
jp
dec
xor
push
mov
inc
outsl
test
movsb
jnp
aam
fsubrl
imul
rolb
sub
push
mov
xchg
out
popf
mov
adc
int3
add
aaa
outsb
mov
stc
add
jno
sbb
aaa
loopne
insl
pop
stos
pop
xchg
pop
and
inc
js
jmp
mov
lret
mov
fwait
or
mov
jmp
or
jae
mov
in
pop
push
push
xchg
mov
xchg
ljmp
int3
mov
fistpll
fwait
xchg
rolb
jle
pop
mov
or
mov
xor
dec
fstp
or
mov
scas
push
push
fs
adc
call
test
push
jns
push
in
das
push
xchg
les
jno
jge
adc
push
jae
cwtl
hlt
into
mov
push
int
push
stos
cmp
dec
clc
movsb
out
push
adc
xchg
cmp
pop
jg
cmpsl
dec
mov
push
out
negl
dec
stos
pop
movsl
jmp
punpckhdq
mov
sub
dec
into
push
pushf
xchg
je
xor
push
repz
cmpsb
add
inc
insb
clc
xchg
xchg
mov
push
mov
jns
ljmp
scas
xchg
sub
mov
rcl
rorb
js
push
push
int3
push
xor
idivb
and
mov
cmc
leave
pop
push
hlt
xor
popa
sub
sub
mov
cmp
adc
cwtl
adc
inc
bound
push
out
and
aas
lahf
push
lods
pop
adc
lods
pop
outsb
cmp
es
add
popf
adc
adc
aaa
mov
cmp
mov
movsl
in
rolb
std
sub
popa
pop
sub
scas
cmc
arpl
xchg
fcmovu
push
inc
mov
std
xchg
fidivrs
xor
add
mov
mov
mov
lret
jbe
sub
aad
xor
mov
in
mov
mov
jl
dec
stos
mov
lock
jp
not
sub
outsb
pop
sub
and
adc
enter
js
dec
xor
fnstenv
or
insb
lahf
aad
daa
xor
in
dec
cmp
jl
mov
scas
addr16
mov
ljmp
hlt
aad
js
mov
adc
sbb
add
jmp
dec
and
jmp
sbb
out
js
out
cli
sub
mov
mov
int
in
lret
pop
in
push
insb
mov
and
les
repnz
in
out
dec
int
aam
add
mov
aad
jecxz
js
cmp
or
mov
and
pop
out
xchg
div
xor
data16
push
pop
jl
repz
jge
dec
sbb
out
mov
mov
iret
inc
xchg
je
popf
xor
ja
cmp
fcom
loopne
xchg
add
xchg
jb
adc
mov
clc
lcall
clc
sbb
mov
xor
add
xchg
stc
xchg
cmpl
repnz
in
push
pushf
stos
pop
pop
loope
nop
hlt
mov
jp
cltd
dec
add
sub
call
pop
dec
adc
lds
jmp
in
xor
cmc
scas
inc
mov
inc
aad
mov
dec
xchg
jne
sbb
mov
cmp
cmp
call
mov
iret
or
and
inc
add
dec
int
imul
lret
add
sbb
aaa
popf
imul
jb
mov
xchg
push
jl
fiadds
dec
push
jae
verw
push
xor
jge
roll
stos
xor
dec
adc
push
cmp
mov
repnz
cmp
stos
jp
cmc
ljmp
loope
out
xor
lock
pop
push
in
cld
bound
mov
push
bound
dec
les
mov
mov
nop
mov
dec
and
pop
xchg
jmp
imul
dec
dec
xor
jge
repz
das
cwtl
jge
sub
jns
jmp
inc
xchg
push
and
xor
or
and
mov
mov
lds
mov
ja
add
sub
or
or
ret
lcall
sbb
push
cmp
mov
test
jmp
movsl
enter
pop
mov
jecxz
sub
lods
mov
test
sarb
pusha
push
dec
pop
hlt
mov
jmp
pop
call
sub
push
xlat
mov
mov
jb
jb
ss
sub
iret
fistpll
arpl
jecxz
shlb
sub
hlt
sti
jmp
int3
mov
insl
out
ja
fmuls
fsubrs
jle
inc
dec
imull
or
mov
shll
ret
fcmovnu
imull
mov
or
mov
dec
xchg
push
aas
scas
jecxz
add
adc
insb
insb
testw
sti
jg
fwait
idivb
pop
cmp
int3
push
xchg
and
jne
add
mov
sbb
add
mull
ljmp
fisttpll
xchg
push
cmp
clc
push
pop
notb
cltd
jo
add
add
daa
cmp
int
in
out
insb
xchg
push
ja
imul
pop
movswl
jns
push
mov
dec
sub
cld
into
fadds
into
adc
push
inc
out
lahf
push
ss
dec
es
or
add
shr
rcll
scas
jb
jp
and
xchg
cmp
enter
pop
adc
pop
test
inc
pop
out
shld
or
or
xchg
dec
and
gs
push
call
sub
jo
pop
lock
or
pusha
sar
jmp
test
inc
das
testl
or
std
arpl
cli
jmp
inc
mov
mov
popa
cmp
popf
aad
mov
add
out
sub
lods
mov
push
cmc
add
cs
sbb
xchg
xchg
jg
or
std
out
js
inc
fildl
xor
out
and
gs
loope
bswap
sbb
pop
ret
popa
test
inc
mov
mov
lret
insl
call
not
ljmpw
lods
jns
dec
sub
cld
jns
popa
lahf
sbb
fisttpll
dec
cmp
scas
xor
aas
out
mov
mov
insb
outsl
push
mov
adc
push
sbb
mov
lods
or
stos
adc
xlat
sub
int
cmp
fists
cli
das
decl
scas
sub
test
push
mov
movb
repz
inc
outsl
xchg
imul
mov
pop
daa
repz
in
inc
xchg
push
repnz
inc
mov
mov
cmp
push
adc
jne
test
dec
add
scas
push
jp
add
jmp
pusha
sbb
inc
mov
jp
mov
jl
dec
mov
in
dec
aad
icebp
push
rorb
movsb
and
dec
xchg
mov
jge
les
dec
lods
add
mov
cmc
out
mov
inc
dec
jmp
adc
adc
iret
cmp
jmp
ss
insb
xchg
insl
leave
push
adc
pop
fs
rolb
lods
or
out
mov
mov
pop
lcall
sbb
pop
pusha
sbb
mov
fwait
shlb
xchg
int
lods
mov
mov
std
adc
scas
insb
xor
out
pop
sub
lret
add
xchg
mov
add
stos
cltd
inc
mov
or
dec
fs
dec
jl
cmp
or
xchg
stos
and
mov
pushf
xlat
int3
xchg
add
lods
test
push
stos
dec
stc
in
test
cmc
jo
fs
popa
insl
cmp
dec
push
or
push
aad
fucomip
xchg
cmpsb
adc
push
fistps
pop
cli
aad
mov
dec
adc
xor
sbb
and
sub
jo
mov
scas
shrl
roll
lahf
loope
sub
ja
enter
pop
clc
mov
cmc
add
data16
int3
pop
ret
dec
add
mov
add
repz
stos
aad
cmp
xchg
pop
fildll
xor
and
pop
jne
and
int
mov
nop
movsb
lock
pop
xchg
fistpll
inc
mov
scas
ja
notb
and
and
pop
scas
shl
pop
sbb
jne
cmp
data16
pop
push
dec
cmp
outsl
mov
dec
sbb
lock
sarl
ja
or
mov
xchg
adc
lods
enter
dec
adc
lcall
imul
aad
fdivp
push
mov
fcmovne
aad
add
dec
dec
push
aaa
dec
lods
jge
jg
mov
clc
jg
outsl
pushf
add
jno
jecxz
test
push
popf
mov
in
lods
cli
stos
xor
inc
jp
jnp
pushf
sbb
mov
sahf
cmp
lret
test
sub
data16
and
cld
jmp
repz
xchg
cmp
popa
lods
xchg
lods
pusha
xchg
push
and
mov
aad
add
or
xchg
adc
xchg
inc
jmp
shl
mov
mov
hlt
movsl
push
pusha
lret
imul
jp
lock
adc
cld
aam
in
push
shl
mov
hlt
cmc
aaa
xchg
stc
addr16
sbb
in
mov
scas
lods
xor
jmp
xchg
addr16
test
out
imul
lods
cmp
in
push
es
xchg
cli
les
xchg
test
mov
pop
sub
out
lods
cmp
test
push
int
dec
mov
sub
in
je
mov
lods
xchg
lods
xor
iret
loope
dec
lea
dec
cmc
cs
cmpsb
jno
jmp
add
mov
push
pop
mov
aam
cld
icebp
js
adc
add
inc
sub
pop
test
xchg
test
cwtl
push
add
test
iret
add
xchg
inc
and
adc
or
push
push
daa
push
les
push
movsb
jle
subl
fcompl
gs
sub
inc
cwtl
jne,pt
pop
xor
jne
adc
pusha
pop
stos
repnz
in
fstpt
lret
lods
imul
imul
xor
rclb
into
cmp
repz
aad
adc
test
popf
orb
xchg
add
rorl
mov
sub
xchg
pusha
sub
cmp
inc
sbb
fsubr
outsl
xchg
cmp
imul
add
rolb
adc
insl
insb
mov
or
jnp
setne
or
int
stos
arpl
xchg
pop
js
outsl
jbe
xchg
je
and
pop
push
or
push
imul
popf
add
js
jnp
fmuls
out
xchg
lods
pop
stc
stos
std
cmp
int
daa
imul
icebp
adc
push
lret
mov
inc
fdivs
add
jns
add
adc
mov
stc
adc
jo
xor
xor
into
or
mov
and
leave
test
js
mov
push
mull
stos
sub
mov
mov
lcall
push
in
xchg
jo
mov
mulb
in
add
stos
pop
pop
js
pusha
mov
arpl
and
subl
xchg
gs
add
mov
outsl
int3
sbb
and
negl
pop
cmc
test
fucomip
sti
aad
outsb
cmp
add
inc
jge
scas
shrb
xor
fcompl
pop
mov
dec
lret
mov
out
xchg
ljmp
das
pop
jb
inc
cmp
imul
xor
mov
mov
cmp
aad
mov
out
mov
mov
or
xchg
popf
adc
add
outsb
repz
or
jl
or
movsb
outsb
inc
lcall
push
jns
push
inc
cs
aad
rcl
adc
dec
lods
mov
fildll
inc
test
sub
int
sti
add
mov
les
cmp
jecxz
dec
mov
jge
fmuls
mov
cmp
subl
test
lods
mov
movl
cmp
in
mov
aad
xor
les
mov
jmp
mov
push
mov
adc
in
fsubr
and
cmp
mov
add
push
call
dec
or
pop
sbb
addr16
cmc
loope
mov
inc
pop
cmp
bsr
mov
scas
cld
mov
fcomip
cmc
inc
mov
divb
jmp
dec
push
aad
mov
cmp
fisttpl
mov
mov
out
push
aad
xor
adcl
xchg
in
jmp
gs
xor
jp
jg
in
jmp
cmpsl
cmp
pop
stos
hlt
sub
xor
push
inc
scas
aad
mov
jmp
jge
add
imul
pop
jb
push
sub
pop
call
aad
nop
in
stc
stc
shl
and
sub
and
jbe
xchg
or
inc
mov
notl
cwtl
cld
bound
or
in
push
imul
call
out
xor
push
sahf
cmpsl
sti
jnp
adc
dec
int3
repnz
cmp
sub
push
cmc
dec
outsl
inc
movsl
push
into
ret
mov
pmullw
rorl
mov
lods
clc
pushf
sbb
addl
fadd
sub
xchg
cmp
jp
push
imul
sbb
xor
dec
out
icebp
aas
mov
js
addr16
jo
leave
push
xlat
mov
xchg
loope
jno
mov
fnsave
sbb
cld
xchg
jecxz
popl
mov
int
lcall
sarb
movsb
cltd
push
insl
ss
inc
or
jnp
popf
lret
je
ljmp
pop
dec
cmc
enter
mov
out
out
dec
and
jae
iret
popf
cmp
adc
cmpb
sarb
and
adc
sub
arpl
not
push
inc
js
jp
lds
dec
cld
jmp
sbb
jge
nop
stos
xor
int
cmp
inc
sarb
ja
adc
pop
stos
dec
mov
add
stos
les
jl
push
or
ror
shrb
pop
inc
dec
dec
jb
iret
inc
bound
ret
lods
sarl
sbb
into
es
movsl
cli
push
arpl
repz
jg
hlt
mov
mov
lods
mov
imul
xor
insb
iret
cmc
cmpsl
xorl
incl
xchg
jle
jns
or
fcmovne
add
es
xor
push
pusha
dec
filds
cmp
and
in
xchg
push
data16
jnp
rclb
xlat
es
or
lods
arpl
loop
push
outsl
imul
xchg
jb
imulb
aam
jl
psubb
sub
idivl
push
ret
xor
out
loop
cmc
pop
loope
cmp
sub
xor
test
push
mov
push
repnz
sub
mov
shr
pop
jl
cmp
ja
mov
sub
jmp
or
jp
test
push
shlb
jnp
dec
fcomps
push
adc
jle
jecxz
jbe
or
xchg
jp
pusha
lods
cltd
inc
in
xchg
jne
jmp
cwtl
or
out
add
leave
jmp
xchg
mov
jae
int
mov
mov
out
stc
sub
lahf
pop
stos
test
fnstcw
out
xchg
push
push
mov
jge
lahf
ret
movq
or
add
cmc
pop
mov
rcl
aam
popa
cli
loope
add
dec
imul
adc
sbb
or
sarl
and
es
jns
xlat
iret
nop
dec
push
xchg
out
lods
fs
add
xchg
add
mov
push
cld
push
or
lahf
push
dec
sub
sbb
jmp
repz
sbb
mov
cmp
sbb
mov
mov
lahf
pop
pusha
cltd
sub
pop
pop
insl
lret
jae
pop
xchg
mov
in
jo
testl
stc
ds
jmp
jno
sahf
xchg
add
fcom
je
insb
sbb
jmp
imul
lods
pop
inc
in
lea
cmp
shrl
mov
jne
dec
loop
lea
test
or
xchg
xchg
nop
aam
je
popl
outsl
lods
js
jmp
xor
or
pop
dec
imul
ficompl
in
xchg
mov
out
push
jmp
test
push
shl
sti
and
mov
cmpsb
xor
lret
add
les
add
insb
push
pop
and
or
and
adc
hlt
adcb
xor
out
mov
and
js
pop
mov
pop
push
and
stos
stc
mov
mov
es
cmp
adc
clc
pop
xchg
cmp
or
cmp
mov
or
les
call
xor
adc
shl
or
xlat
aad
repnz
outsl
pusha
mov
rorb
or
push
pop
dec
push
mov
cld
pop
int
popa
int3
mov
mov
cmc
jecxz
jnp
pop
pop
in
mov
jmp
dec
fnstenv
dec
add
popa
in
sbb
sti
adc
arpl
sub
xchg
xchg
dec
fstpt
aad
pop
lods
jo
negl
adc
dec
and
lea
mov
ret
add
ret
and
les
sti
xchg
inc
push
adc
or
int
insl
into
push
sbb
in
push
push
insb
int
lods
nop
nop
push
pop
jno
dec
xchg
call
lock
sub
jmp
into
lea
aaa
xchg
jle
jl
jnp
out
popa
dec
adc
aad
icebp
sub
stos
lock
ds
xchg
jne
mov
dec
mov
aad
sub
push
stc
mov
test
cmp
jo
pusha
movsl
out
add
ret
mov
dec
add
jmp
std
and
xchg
mov
push
pop
pop
mov
mov
inc
xchg
leave
ficomps
int3
cmpsl
mov
loop
sub
adc
outsl
pop
adc
sub
mov
outsl
sub
mov
mov
scas
sub
dec
subb
orb
cmc
add
inc
ret
imul
cmp
js
fwait
test
scas
outsl
cmc
mov
add
push
cmp
jle
xor
inc
mov
dec
out
adc
and
movl
jmp
jge
das
pop
adc
xlat
dec
or
fldt
cmp
sbb
push
cwtl
out
iret
push
xchg
and
jg
mov
movl
sub
xchg
leave
push
inc
and
out
into
aad
jns
loope
lahf
movsb
and
or
outsb
adc
ds
push
xlat
pop
xchg
jge
shrl
dec
sub
popa
out
into
dec
testl
int3
pop
pop
fnsave
inc
aad
mov
mov
jne
and
scas
iret
cmp
out
adc
xor
inc
lods
inc
sbb
mov
push
pop
dec
nop
dec
fidivrs
cs
nop
xchg
std
incb
mov
fdivs
mov
dec
jnp
sub
and
jecxz
inc
dec
je
fmuls
loope
pop
jle
jno
sub
add
cmpsl
mov
or
popf
sub
xchg
idiv
scas
and
movsb
fisubs
add
jo
dec
test
dec
dec
sbb
inc
mov
cld
or
stos
mov
sbbb
call
push
xchg
addr16
mov
les
stos
sbb
imul
and
pop
xor
popa
pop
mov
dec
outsl
cmp
xor
test
sahf
call
std
xchg
mov
mov
pop
adc
test
ljmp
mov
aaa
adc
pop
pop
mulb
and
xor
stos
popa
jl
pushf
adc
jl
lds
pop
or
mov
add
sbb
shlb
aad
mov
adc
mov
xchg
adc
xchg
out
jl
aad
imul
sti
cmc
push
sbb
test
and
jns
jmp
cmc
and
mov
xlat
inc
repz
out
mov
daa
imul
or
push
xchg
loope
test
jmp
int
xchg
ds
stc
aad
pop
iret
inc
lods
sahf
sbbl
in
push
and
xchg
adc
and
sub
scas
leave
and
inc
lods
icebp
xor
shrl
cli
jmp
cmpsl
shl
dec
add
sub
sub
cmc
psubsw
adc
lahf
sub
scas
dec
fistpll
fwait
push
push
mov
mov
mov
loop
inc
cmc
jbe
rol
mov
scas
dec
andl
addr16
cld
test
inc
imul
cmp
sbb
inc
bound
xchg
and
lock
imul
cmp
outsb
jnp
aas
xchg
adc
mov
sub
push
pop
std
loopne
daa
aad
sbb
jbe
sbb
loop
popw
dec
test
movsb
dec
and
sbbb
imul
mov
mov
daa
sub
loope
add
loope
test
or
sbb
orl
and
mov
add
push
cwtl
push
ret
test
mov
adc
jecxz
aad
cmp
rcl
enter
mov
push
inc
in
lods
push
xchg
dec
fbld
xchg
xchg
into
and
fsubp
xchg
loopne
test
sub
and
mov
xlat
add
mov
jle
movsb
xchg
mov
int
call
and
add
mov
ds
and
dec
jp
ja
sbb
cltd
cmc
int
sti
adc
movsl
data16
imul
sbb
outsl
je
loope
jmp
lock
xchg
dec
cmp
mov
aaa
xor
div
aad
out
out
and
jns
int
lret
mov
jp
js
dec
mov
xchg
lahf
adc
dec
add
mov
add
pusha
adc
xchg
lods
aas
mov
fists
leave
scas
adc
push
testl
repnz
xor
shll
nop
in
cmp
loope
cmp
cs
jno
sub
xor
sbb
fs
int
xchg
in
add
js
in
out
add
adc
push
stos
test
adc
pop
mov
shll
iret
dec
into
imul
and
xchg
hlt
inc
ja
jl
sti
sub
ficompl
setb
jmp
mov
sahf
jmp
jno
ja
push
loopne
int
adc
sub
mov
lock
iret
je
mov
in
out
dec
sub
loop
dec
imul
or
xchg
add
bound
fsub
adc
cmp
popa
lods
jp
dec
push
push
ds
sub
imul
mov
or
add
lods
aad
lret
cmp
js
xchg
dec
mov
sub
sub
lods
mov
mov
das
pop
cli
dec
mov
out
push
dec
pusha
pop
cltd
dec
or
adc
and
sahf
std
mov
inc
das
lret
dec
push
jl
pop
aam
push
addr16
pop
rclb
xchg
aaa
sahf
add
cmp
or
mov
popa
inc
scas
lahf
mov
push
mov
sub
stc
push
arpl
movsl
into
jnp
and
xchg
out
popa
pushl
testl
mov
sub
pushf
aas
bound
pop
jo
mov
scas
push
lea
pop
sub
push
mov
mov
ret
outsl
insb
in
xor
and
mov
shll
sub
mov
xchg
xchg
add
pop
mov
hlt
sahf
sbb
jns
mov
popf
and
gs
cmp
cmp
lods
mov
and
pop
mov
lods
jne
shr
pop
out
int
into
or
cmpsl
pushf
ret
or
aam
sub
test
xor
pop
dec
jge
cltd
xlat
int
mov
push
fcmovnb
inc
aad
aaa
iret
mov
ja
movsl
fdivrl
mov
xchg
sti
lea
cli
sbb
ja
test
daa
bound
int
and
cmpsl
fistpl
xchg
adc
sbb
dec
emms
cmpb
stos
inc
xlat
std
cmp
push
cmp
adc
cmp
push
stos
jno
int
rcrb
cs
inc
insb
lret
jge
jno
adc
shlb
jge
stc
cmc
fs
xor
cmp
aad
data16
mov
hlt
pop
xor
sbb
and
fistps
aaa
pmulhuw
xor
adc
mov
xlat
pop
and
enter
mov
inc
jnp
sbb
mov
movsb
in
pop
inc
outsl
arpl
mov
in
or
in
sub
mov
mov
and
call
sbb
notl
cmp
lods
in
ss
dec
sub
push
or
xorl
lods
cmp
rorb
pusha
mov
adcl
icebp
leave
adc
shlb
shrb
stos
adc
lahf
ja
sahf
dec
pop
cmp
popa
faddl
rolb
lcall
push
sub
jns
adc
inc
and
scas
movsb
js
push
sbb
adc
rclb
xor
lods
popa
out
lods
into
mov
or
scas
dec
out
push
lods
pop
push
fistps
mov
into
dec
dec
aam
adc
bound
ror
insb
popa
push
xchg
mov
fwait
aad
lods
push
mov
sub
repnz
pusha
clc
adcl
out
cwtl
lods
aaa
mov
cltd
jl
lods
cmpsl
adc
aam
mov
mov
jmp
push
jmp
loope
cmc
adc
sbb
stos
jmp
lods
sub
and
cld
lds
rorb
mov
cmp
iret
movsl
mov
and
push
jmp
rcr
repnz
imul
mov
xlat
mov
int
jbe
dec
sub
xchg
daa
xor
adc
shl
push
cli
das
jbe
shll
mov
hlt
out
out
sbb
loopne
dec
ret
gs
dec
push
sbb
imull
cld
cmp
loop
cmc
dec
out
ret
jo
xchg
or
int
in
jecxz
aad
je
jle
jp
loope
or
fmuls
out
cs
psubsb
push
daa
shrb
inc
mov
cld
clc
mov
push
mov
loopne
sbb
jne
das
push
dec
mov
xor
test
add
loopne
sbb
mov
out
xchg
cmp
jmp
icebp
lahf
fstpl
jmp
cmpsb
cmpsl
stos
jne
int
adc
or
dec
xchg
leave
decl
aad
bound
mov
sub
adc
cmp
in
add
sub
mov
data16
lret
imul
push
pop
aad
xchg
in
lahf
in
sti
sbb
sub
sbb
inc
gs
mov
mov
stc
out
push
sbb
mov
dec
jl
fisttpll
pop
lock
push
or
jno
inc
or
mov
fmuls
sbb
nop
jnp
std
aas
xor
rorb
add
xorl
cmp
inc
iret
sar
lock
lret
popf
in
test
iret
data16
cmp
cmpl
aad
in
and
lahf
mov
xor
movsb
sahf
inc
push
mov
jle
loope
pop
mov
lcall
jmp
aaa
insl
sub
push
jg
xchg
xchg
iret
add
frstor
cmp
push
movsb
and
xor
dec
and
fisubrl
dec
or
mov
adcb
mov
fistpl
dec
push
or
daa
lds
mov
push
ret
mov
cmp
cli
int
push
dec
xchg
and
dec
dec
mov
mov
inc
shrb
or
xchg
cmc
aad
gs
mov
sub
imul
cld
fs
xchg
shl
jl
scas
mov
mov
and
jmp
xchg
lcall
jns
push
rcr
sub
aad
mov
out
jnp
push
and
loopne
mov
loopne
scas
popa
cmp
mov
fadds
cmp
pop
test
inc
push
cmp
mov
xchg
mov
cli
push
mov
cmpsl
pop
pusha
cmp
mov
ljmp
pop
bound
pop
add
lods
push
lock
mov
and
mov
cmp
dec
repz
aad
jg
pop
insl
subb
lret
or
out
mov
pop
or
lcall
fwait
xchg
in
xchg
cmpsb
inc
gs
into
or
xchg
and
add
fwait
jg
imul
xor
sbb
push
sub
or
aad
inc
ret
out
pop
sarb
das
sbbb
ja
push
add
jo
fisttpl
mov
loopne
ds
ret
mov
dec
lods
jmp
or
fimull
iret
xchg
aam
and
negb
cmp
shrb
pop
call
mov
decl
sbb
and
jg
pop
sub
sbb
adc
jbe
lods
pop
mov
add
cmp
lds
pop
xchg
cmpsl
mov
inc
push
push
test
idiv
inc
aad
push
jl
mov
jg
push
out
vmread
push
imul
outsb
or
sti
int3
mov
into
stc
sub
pop
push
call
mov
xor
hlt
add
aad
scas
push
mov
push
xchg
lret
gs
push
aad
movsl
sti
nop
clc
cpuid
lock
sbb
inc
and
call
lock
ds
xchg
mov
mov
test
call
or
repnz
int3
insl
mov
outsl
setne
stos
push
cltd
mov
mov
in
daa
xchg
je
les
add
sub
or
ljmp
sub
pop
cld
lret
lock
stc
sub
pop
outsl
sub
into
sti
jp
add
loope
iret
insl
push
test
ret
mov
scas
pop
test
js
mov
loopne
sbb
push
add
sbb
sbbb
mov
aad
sti
mov
adc
scas
out
jmp
inc
lods
in
out
adcl
int
sbbl
inc
sti
out
mov
push
or
xor
gs
jmp
iret
pop
fisttps
xor
mov
fnstcw
mov
in
in
mov
insl
sti
mov
stc
testb
add
sbb
idivl
aam
aad
out
cmp
repnz
mov
push
testb
ds
push
out
push
mov
aad
jmp
mov
sub
and
push
lret
xor
cs
sbb
mov
and
cs
jb
sarb
push
and
pop
push
lds
andb
lods
push
push
mov
leave
jge
cmp
psubb
push
loopne
jnp
mov
xchg
scas
rclb
gs
xchg
inc
or
aaa
sahf
jg
jge
push
mov
mull
imul
aad
imul
xchg
mov
mov
aad
hlt
ljmp
and
mov
insl
jae
add
jnp
mov
pop
and
jp
adc
push
aad
inc
mov
xchg
aaa
aaa
lods
scas
mov
jne
jmp
add
inc
jo
mov
test
test
sub
sbbb
jp
add
or
cltd
mov
out
subl
hlt
cmc
int
adc
rcrl
dec
loope
mov
xor
sti
and
into
sub
xor
nop
jno
cmp
aaa
test
jo
decl
push
jb
stc
xchg
fs
push
fldt
cld
insl
or
push
sbb
sbb
loop
cmp
pop
loopne
inc
cmpsb
or
xchg
dec
dec
cwtl
into
repnz
mov
call
insl
mov
lods
xchg
jb
cmp
cmc
in
popf
xchg
lcall
test
test
mov
cwtl
ss
fdivs
pop
mov
call
mov
or
jmp
into
xchg
jmp
cmp
pop
insl
jmp
mov
cmp
idivb
call
adc
jl
shlb
stos
adc
sbb
xor
adc
push
test
or
sahf
mov
iret
js
mov
cmp
inc
mov
add
and
push
pop
xchg
fs
ljmp
jno
jecxz
repz
cmp
jle
sarb
mov
repnz
mov
mov
push
jp
add
popa
jmp
loop
into
mov
iret
dec
inc
or
mov
or
aad
pextrw
gs
js
and
cmp
pop
lcall
add
inc
pop
mov
addr16
repnz
incb
sbb
adcb
pop
out
fsubr
push
jl
into
mov
imul
cmc
lcall
dec
das
xchg
mov
xor
rclb
mov
or
in
aas
imul
rcrb
xor
call
add
mov
cmp
dec
in
aad
popf
inc
or
outsl
cmpsl
int
adc
cld
mov
mov
xor
aad
aam
in
sti
jns
cmp
jns
jecxz
icebp
leave
test
xchg
dec
add
pop
aaa
imul
and
mov
mov
cmp
mov
or
or
pusha
into
cmc
inc
shrl
aad
sbb
xor
mov
shrb
and
xchg
lods
test
mov
cmc
cli
inc
pop
adc
push
xor
pushf
aad
divl
xchg
out
or
repnz
push
je
xchg
xlat
loope
mov
out
cmpsl
or
or
insb
jne
mov
jmp
rolb
in
pmullw
mov
push
inc
sub
shlb
cmp
sub
cmc
fstpt
scas
outsl
jmp
lods
xchg
idivl
pushf
pop
inc
aas
outsl
sub
int3
psubsb
arpl
aaa
push
cmc
aad
fwait
cmp
stc
loope
xchg
xlat
orl
stos
jns
dec
push
rclb
inc
pop
dec
repnz
imul
sub
pop
xchg
xor
mov
jg
fwait
test
bound
push
inc
cmpxchg
rorb
push
push
inc
pmaxub
iret
movsl
mov
sahf
ljmp
fsubl
ljmp
imul
out
dec
and
out
lods
mov
dec
and
ret
mov
repnz
xor
jp
sti
jmp
je
cmc
gs
fisubs
mov
fs
divl
cmp
aaa
and
push
xchg
add
fdivr
cmp
rcr
jmp
sub
loope
sti
out
xchg
gs
das
rorb
xlat
dec
pop
aad
enter
mov
dec
int
adc
cmp
lret
sbb
and
lods
test
aad
aam
jg
insb
lds
inc
inc
or
xor
orps
mov
mov
in
rorb
jns
and
xchg
shll
sti
inc
xchg
imul
pop
cmc
dec
push
adc
jnp
push
and
movsl
out
ljmp
sbb
bound
into
call
loopne
pop
add
dec
test
movsl
imul
loope
mov
cmp
pop
leave
cld
movsb
jmp
bswap
and
or
push
jne
mov
mov
sbb
mov
fbstp
jg
xchg
mov
lret
mov
pusha
cmp
jl
addr16
je
rorl
setg
movsb
test
repnz
mov
shrb
bound
push
adc
cld
dec
push
cmc
cmp
and
xchg
push
lret
pop
es
in
ja
mov
mov
int3
stos
sub
mov
xor
ljmp
sbb
sub
lret
push
inc
mov
and
adc
push
sub
dec
sub
mov
ja
neg
shll
mov
std
mov
sbbl
xchg
decb
dec
mov
mov
fisttps
imul
std
pop
mov
mov
inc
jg
mov
frstor
repnz
aad
mov
imul
mov
enter
clc
in
adc
out
insb
repz
jno
int3
mov
aad
mov
aam
cli
sti
in
or
dec
jecxz
push
fpatan
adc
cmp
repnz
adc
push
push
xchg
sbb
nop
clc
mov
sub
inc
xchg
adc
iret
outsb
adc
and
pop
jne
push
dec
stos
push
insl
or
aad
test
xchg
mov
pushl
aam
sahf
mov
lahf
sarl
repz
xchg
int3
movsb
pop
fwait
jle
cmpb
and
xchg
mov
xor
out
sbb
addr16
adc
and
not
xor
in
mov
lods
into
stos
sub
push
sub
wbinvd
je
out
sbb
imull
test
and
jbe
daa
jae
pop
sbb
cmp
and
in
jne
loope
dec
pushf
xchg
inc
sti
push
mov
lods
cmp
xchg
push
add
stc
out
cmp
and
out
mov
push
cmc
pop
sbb
xor
push
std
lcall
pusha
cltd
cmp
aad
dec
add
mov
jecxz
jns
xlat
inc
mov
shll
in
pop
popa
lods
stos
inc
adc
mov
aam
pmaddwd
cltd
mov
xchg
ficomps
out
mov
jb
and
and
iret
push
sub
mov
pop
mov
add
and
inc
jnp
jns
jno
or
cmc
sbb
sub
or
pushf
xor
xchg
outsb
jge
ds
shrb
les
jecxz
mov
sbb
push
test
sbb
or
inc
push
pop
mov
mov
mov
outsl
arpl
mov
notl
sub
xchg
mov
xchg
adc
loop
pop
inc
sbb
hlt
pop
pop
pusha
pop
lahf
lods
scas
add
hlt
out
rclb
aad
shrl
and
xor
dec
lea
mov
gs
adc
cmc
divb
and
xor
test
push
out
or
sbb
ret
xchg
jbe
push
lds
push
mov
xlat
xor
sahf
sbb
pop
insb
or
inc
lock
sti
sbb
dec
or
fst
pop
jb
bound
fcmovnu
sub
std
xchg
jne
out
jnp
push
rep
jecxz
int3
sub
stc
mov
mov
fs
xlat
xor
xchg
sbb
add
pop
fbld
or
scas
repz
adc
mov
iret
or
push
bound
rcrl
xchg
mov
push
xor
mov
or
stos
mov
mov
in
cmp
mov
lret
mov
pusha
arpl
sub
push
out
popf
jmp
mov
push
sbb
xor
mov
mov
aad
popf
lods
xchg
adc
fwait
or
and
notl
aad
add
loope
pop
iret
cmc
pushw
aaa
imul
add
outsl
aad
sub
jmp
pop
fdiv
xchg
add
movsl
in
inc
lahf
or
fldl
test
testl
jnp
ljmp
test
or
xchg
push
out
ljmp
fsubrs
or
out
xchg
lret
movsb
lea
ja
stos
xchg
cld
aam
cmpsl
ret
push
jge
or
pop
mov
scas
stos
push
xchg
popf
cmp
and
lock
mov
xor
sbb
into
xor
dec
out
test
aad
cli
jl
stos
add
js
scas
push
roll
test
fimuls
lahf
cltd
pop
dec
lret
jno
cmp
call
or
cmpsb
fsubrl
pop
mov
scas
js
inc
dec
push
jmp
ds
out
out
sub
cmp
int
pop
jp
nop
jae
js
fs
mov
inc
push
mov
xlat
dec
or
xor
mov
mov
fisubl
dec
mov
push
or
ljmp
and
int
enter
data16
rorb
push
mull
pop
mov
inc
sti
cmp
adc
cmp
pop
lock
cmp
cmp
cwtl
push
hlt
loopne
stos
mov
popf
mov
sub
ret
mov
sbb
xadd
jnp
jns
popf
jo
mov
inc
test
decl
dec
jmp
dec
jmp
xchg
test
and
in
insb
pop
push
inc
int
mov
lcall
fnstenv
cmp
out
sbb
das
pop
xchg
or
or
mov
fwait
cs
xchg
rorb
or
jle
cld
cmc
mov
or
pop
pop
hlt
lods
lcall
clc
aam
pop
cld
idivl
mov
dec
stos
pop
and
test
dec
mov
adcl
cmpsl
jg
inc
xchg
cmp
rorl
loop
hlt
inc
gs
psllq
jecxz
mov
adc
into
dec
xchg
dec
xchg
jmp
lea
cmpsl
outsl
jo
test
xchg
repz
xchg
mov
mov
fcoms
mov
sarb
add
and
cmp
mov
mov
dec
dec
mov
ret
mov
int
lock
mov
movsb
inc
test
cmp
ret
lret
in
test
dec
popa
fldcw
adc
call
inc
inc
and
ffree
xchg
dec
adc
push
iret
jl
outsl
xor
fldt
add
and
sti
jo
outsl
ja
fwait
ret
out
dec
jge
mov
and
add
mov
push
nop
mov
clc
pop
dec
sbb
imul
xor
je
aad
scas
xchg
adc
dec
mov
ljmp
call
mov
xlat
jns
int
out
cli
negl
cmp
sub
pop
scas
and
test
outsl
test
cmp
jecxz
enter
mov
shrl
lcall
push
or
inc
nop
dec
inc
jecxz
aad
cmpsl
aaa
fimull
out
shlb
cmp
xchg
push
lahf
lcall
xor
in
mov
cmpb
loope
bound
ja
push
cmp
mov
popa
mov
xor
je
cmp
frstor
sbb
cmp
flds
cmp
pop
movsb
lcall
movsb
xor
cmpsb
dec
add
aad
mov
jge
or
shlb
mov
lahf
fimuls
aad
dec
insb
mov
cmpb
or
aad
ret
inc
or
scas
xchg
push
pop
pop
sbb
inc
sti
loop
cmp
and
in
in
iret
pop
pop
out
add
push
hlt
inc
std
in
mov
mov
imul
push
push
scas
ds
testl
cmp
ficompl
test
push
push
jno
and
cmp
outsb
lahf
mov
popa
dec
arpl
imul
loope
enter
or
repz
test
or
outsl
dec
sbb
add
and
mov
pop
je
mov
stos
scas
xchg
lds
sti
xor
fbstp
sbb
cmp
add
push
roll
dec
movsb
out
sbb
mov
cltd
or
pop
sbb
ljmp
dec
pop
shrb
inc
jge
hlt
movups
cmc
mov
sti
rclb
mov
mov
pop
ss
cmc
push
cli
xor
jne
ficoml
dec
push
dec
dec
int3
pop
lods
jmp
movsb
call
icebp
dec
cmp
fisttpll
cmp
ja
into
jae
mov
and
inc
push
sub
sub
dec
sub
aad
and
and
shll
mov
scas
movsl
incl
ja
cmc
push
fcoml
aam
and
xor
dec
xchg
mov
into
out
push
test
mov
dec
or
adc
scas
mov
and
jg
mov
and
sbb
loopne
push
xchg
pop
add
sbb
fxch
aad
cmpsb
mov
cld
ljmp
mov
cmp
xchg
lea
iret
mov
in
pop
rorb
xlat
cmp
jnp
pop
mov
loopne
mov
movnti
cli
mov
cltd
add
icebp
and
push
cwtl
xlat
mov
push
in
seto
mov
aad
xchg
fistps
iret
into
jae
into
xchg
or
subb
push
loopne
out
jns
mov
bound
aad
sbb
xor
cld
jo
lods
push
sub
cltd
sbb
or
test
xchg
jnp
or
popa
pop
cmpsb
popf
mov
or
dec
xchg
incb
inc
inc
ficoml
aad
mov
pop
add
jmp
mov
int
pusha
jmp
mov
lea
ss
xchg
stos
push
mov
call
aad
pusha
std
xchg
test
sub
jl
jecxz
adc
loopne
pop
dec
jae
lret
fisubl
push
lgs
std
mov
popa
aas
fidivrl
dec
dec
mov
lods
in
push
pusha
imul
pusha
sahf
add
mov
cli
inc
int
loop
cmpsl
rclb
add
cmc
cmp
jno
fidivrl
dec
sbbl
and
push
mov
in
jo
dec
add
jl
loopne
or
xchg
cld
pop
sbb
hlt
lods
sti
arpl
add
cmp
pop
sub
sub
xchg
cmp
stc
movsl
dec
in
pop
hlt
cmp
adc
aad
es
dec
push
jmp
mov
xor
negb
icebp
mov
test
xor
xor
pop
mov
sbb
adc
mov
adc
mov
shl
int
ficomps
jge
xchg
movb
xchg
add
hlt
ja
fnsave
sub
jns
cmp
xor
inc
dec
inc
and
aaa
pop
repz
stos
stos
sub
std
lret
xor
mov
mov
mov
sbb
cwtl
mov
mov
xlat
xchg
popa
mov
cmc
push
lcall
push
push
cld
loopne
mov
scas
and
lahf
outsl
jmp
out
cmc
icebp
xor
pusha
imulb
test
shll
fisttps
stos
movsb
sub
filds
rolb
xchg
fiaddl
jns
push
and
mov
dec
or
adcl
mov
pop
jae
sbb
cmp
adc
mov
and
stos
mov
std
popa
bound
out
outsl
xchg
hlt
sar
imulb
mov
xchg
test
jl
movsl
setb
fwait
inc
mov
jp
testl
aam
sub
jg
stos
clc
mov
leave
or
sbb
adc
dec
xchg
test
divl
and
ret
mov
xchg
push
cmc
cmpsl
lret
sub
mov
mov
xchg
dec
push
je
xchg
in
cli
dec
jns
shlb
sub
gs
mov
xor
leave
xchg
adc
cli
rcrb
jns
test
arpl
jecxz
xchg
dec
inc
mov
gs
bound
and
addb
jns
cmp
and
fwait
aad
add
jecxz
mov
add
call
xchg
push
cltd
int3
sub
cmp
mov
xchg
mov
dec
inc
xchg
imul
push
add
movsb
mov
sub
dec
xchg
inc
imul
cmp
dec
outsb
fs
faddl
mov
xlat
dec
jnp
or
daa
xor
cmpl
jl
mov
add
jecxz
popf
maskmovq
mull
roll
dec
dec
xchg
ret
movsl
les
adc
pop
arpl
xchg
push
stos
jle
push
test
mov
jg
add
repz
outsl
pop
sbbl
or
mov
repnz
jmp
push
andb
push
jecxz
ret
add
mov
das
xchg
jns
movsb
std
call
clc
xor
ss
and
pop
fildll
push
mov
push
jmp
xchg
fimuls
stc
sbb
mov
dec
mov
aas
cmp
or
sti
cmc
mov
inc
xor
call
leave
aam
shrb
fstp
imul
sub
scas
les
or
add
push
or
aad
mov
sbb
cmp
repz
mov
int
add
mov
movsb
add
push
enter
mov
or
imul
mov
mov
mov
push
dec
jp
pop
push
dec
pusha
fstps
mov
add
ja,pt
xchg
call
enter
add
movsb
push
pusha
fidivrl
aas
adc
dec
out
mov
dec
or
mov
filds
cmp
inc
push
fidivrs
add
sbb
imul
push
int
repz
xchg
inc
pop
test
xor
int3
fimull
imul
pop
cmp
popf
jecxz
pop
lock
inc
repz
and
xchg
lahf
cwtl
cmp
adc
sti
aad
icebp
and
or
imul
dec
sbb
aad
cwtl
add
lods
setno
pop
mov
in
xor
or
movsl
fs
add
lods
bts
pop
cmc
add
add
or
outsl
xlat
loope
xchg
imul
adc
sbb
in
sbb
js
daa
pop
jmp
pop
ljmp
flds
or
out
faddl
rolb
mov
aam
mov
mov
rcl
push
out
or
mov
int
push
shrl
fnop
lods
out
add
lods
outsb
pop
movsb
roll
repz
jo
les
lods
mov
sub
or
int3
test
xor
jp
out
cmp
rorl
movsl
mov
push
and
repnz
arpl
insl
cmp
pop
mov
sub
cmc
cli
sub
sarb
mov
int3
sbb
jp
push
lahf
jmp
xchg
movsb
test
shll
cmpsb
or
cwtl
dec
inc
stos
xor
sub
adc
cwtl
cmc
neg
mov
in
insl
sbb
test
bswap
out
jmp
cli
jmp
jge
jmp
sub
adc
inc
dec
mov
js
ja
sub
mov
std
sti
gs
add
sub
stc
sub
push
push
insb
push
out
pop
test
loop
int
sbb
js
lods
cld
scas
mov
fisubrl
aad
mov
std
or
and
dec
xchg
jno
or
inc
push
ljmp
or
cmpsb
pop
bound
in
scas
or
insb
pop
setae
dec
outsb
rorb
mov
je
dec
jmp
cmp
loopne
iret
scas
dec
cmp
cmp
push
xchg
aaa
pushf
add
mov
mov
mov
cmp
pop
jmp
arpl
xchg
cmp
pushf
ror
mov
std
mov
shl
add
notl
mov
jg
jns
mov
bswap
push
xor
or
pop
inc
dec
xchg
push
cmp
popf
in
mov
jmp
adc
int3
cmp
dec
aad
es
sub
cltd
jmp
test
gs
aad
pop
inc
dec
dec
in
sub
cmc
cmpsb
lds
lcall
cmp
fstpl
push
jae
mov
mov
out
fcmovbe
sub
int
jb
stc
xlat
mov
test
mov
pusha
xchg
int
push
icebp
and
notl
in
lock
sub
cli
xor
test
nop
jl
sub
outsb
mov
push
pop
mov
mov
cwtl
or
aad
imul
lods
clc
repz
and
mov
cmc
int
arpl
cmp
shrb
cwtl
out
mov
std
icebp
sbb
test
fdivrs
cld
or
cmp
fcmove
scas
test
xor
test
inc
add
cmpsb
int
push
dec
pop
xor
mov
imul
push
pop
push
lea
ret
sub
sbb
in
cmp
sub
lahf
outsl
sti
pop
mov
mov
and
sbb
ficomps
lret
dec
add
lods
or
into
arpl
mov
mov
aam
adc
jg
or
sbb
and
cmp
mov
jle
cmc
jle
xlat
mov
fwait
mov
mov
mov
jle
xchg
imul
sti
cmpsb
cmpsb
pusha
into
in
push
sub
outsl
decl
jne
jecxz
sbb
xchg
xor
mov
pop
ficoms
icebp
mov
mov
psrlq
inc
cmp
add
cmp
jp
and
popa
add
hlt
add
scas
xlat
jmp
lcall
aaa
jne
xor
sbbl
jle
sahf
cvtsi2sdl
or
sbb
gs
xchg
ljmp
lods
fcoms
js
and
dec
xchg
movsl
aad
and
mov
ffreep
gs
xor
sbb
fnclex
aas
aad
fcmovnb
das
jg
ret
jo
fisttpll
cli
mov
xor
lahf
add
ss
push
mov
mov
mov
push
mov
popl
xchg
adc
pushf
cld
add
cmp
adc
lock
sub
negb
mov
addr16
pop
mov
push
mov
cmc
sbb
jecxz
sub
sbb
test
adcl
mov
mov
sti
push
loop
xchg
les
rorl
or
lods
add
mov
fdivrl
mov
inc
add
adc
sbb
sub
fsubrp
fsubrp
dec
stc
loope
add
push
stos
notb
adc
sahf
aad
in
loope
xor
xchg
pop
lret
mov
mov
int
in
in
push
pop
xchg
xchg
push
jbe
cmp
sbb
repnz
xor
cmc
sti
stos
js
cvtps2pi
out
dec
imul
cwtl
ja
sbb
stos
lods
mov
jae
imul
cmp
xor
adc
mov
mov
push
or
popa
jmp
fimuls
xlat
push
out
jns
adc
dec
mov
cmp
dec
and
test
inc
mov
decb
lret
jge
test
scas
movsb
imul
and
sarl
jecxz
or
insb
push
dec
out
push
daa
repz
xchg
mov
roll
in
lds
jecxz
fs
pop
or
aad
ss
lods
dec
imul
into
add
lds
push
mov
xchg
cld
pushf
lcall
push
rcll
mov
mov
loope
adc
in
pop
fldl
and
dec
inc
mov
arpl
jns
or
cmp
jae
shll
test
and
loop
shll
cli
lret
cmp
fimuls
xchg
push
pop
and
movsb
hlt
sbb
jg
push
fistps
dec
out
rcr
stos
call
aad
inc
push
push
xor
scas
push
cmp
ja
mov
xchg
mov
dec
mov
xchg
jge
pusha
fnstenv
decl
jb
aam
xchg
ret
ljmp
loope
repnz
sub
inc
or
jl
mov
aas
mov
fwait
push
lods
or
repnz
fisttps
jbe
cli
push
add
mov
cmp
repnz
mov
sti
pop
xchg
inc
jecxz
push
les
xchg
jnp
cmp
popa
rclb
jmp
push
cmp
inc
imul
pop
and
sub
mov
inc
xlat
popf
or
adc
dec
test
call
jnp
jle
adcl
cmp
mov
adc
aas
adc
mov
fldl
aad
stos
imul
cli
mov
cmpsb
jae
fidivs
jmp
jecxz
pop
ficomps
movsl
leave
jns
add
or
dec
sbb
in
fildll
pop
nop
hlt
and
nop
dec
push
jmp
and
cmp
add
lods
jecxz
push
lods
jae
xchg
shrl
push
popf
push
sub
push
lcall
sub
loopne
sbb
push
jns
popa
inc
sarl
fisttpl
aas
cmp
mov
daa
repnz
in
and
aam
jmp
jae
xchg
sub
pushf
dec
or
repnz
inc
arpl
and
scas
cmc
cmp
xchg
jl
in
pop
aad
inc
and
mov
lcall
sub
mov
imul
fisubrs
fdivs
jns
mov
aas
cld
std
mov
sbb
pop
jno
inc
es
fucom
sub
and
and
sbb
cli
or
ja
sti
stc
xchg
push
cmp
or
cld
in
fwait
inc
cmp
adc
out
jno
dec
pop
adc
xchg
jle
cld
movsl
out
xchg
fsts
and
push
js
pop
jmp
sub
sub
lods
add
adc
add
fldl
insb
imul
rclb
pop
or
outsl
or
and
mov
xchg
cltd
mov
cmc
iret
cmp
sbb
popf
jo
xchg
lds
mov
outsb
std
shlb
addr16
into
pop
pop
xlat
pop
shl
neg
pusha
fs
int3
loope
mov
mov
insb
jo
scas
test
or
ror
mov
lds
scas
insb
in
xor
or
test
mov
test
adc
mov
mov
xchg
out
stos
push
pop
inc
mov
push
fnstenv
inc
pop
xor
mov
rolb
cmp
mov
fdivs
adc
js
rcrl
aad
popa
xchg
into
cmp
push
mov
sbb
mov
int
rcll
cmp
cmc
dec
aad
test
and
xchg
and
xchg
jmp
aad
xchg
pop
loop
fsubl
sub
add
cltd
test
lcall
cmp
into
mov
testl
mov
mov
aam
stc
xchg
mov
ja
movb
sbb
xor
sbb
adc
xchg
or
mov
cltd
test
or
data16
ret
or
lods
dec
add
and
adc
sub
mov
jecxz
push
into
mov
stos
sahf
dec
mov
aad
addr16
imul
loopne
xchg
pop
fisubrl
dec
sub
imul
scas
mov
lret
jnp
fimuls
scas
pop
fstps
ret
mov
arpl
lcall
js
out
aaa
xor
fsts
push
push
jnp
cmp
popa
jp
add
test
sub
mov
sbb
cmp
pop
in
mov
out
movsb
or
scas
adc
divb
out
js
testl
ljmp
test
mov
in
js
test
lock
shr
and
mov
jnp
daa
jno
push
and
data16
xchg
stos
imul
jae
add
mov
jmp
mov
xchg
popa
dec
sarb
dec
aad
sub
fdivs
pop
mov
aaa
cwtl
mov
out
jb
cmc
and
mov
aas
push
clc
pop
push
clc
call
dec
into
cli
sub
adc
mov
inc
push
xchg
imul
js
rorl
cmp
out
neg
clc
cmc
push
scas
inc
pop
push
cwtl
dec
aad
adc
or
mov
dec
xchg
lret
lcall
fdivrl
shlb
dec
repz
call
outsl
push
cmp
sti
jmp
or
mov
push
repnz
bound
sti
dec
clc
lret
cmp
imul
arpl
aad
ficomps
push
pop
mov
sub
and
add
loope
sub
call
lods
jge
in
lret
pop
push
sbb
adc
addr16
divl
xor
xor
jl
lahf
push
and
fwait
scas
jae
repnz
or
jmp
rcll
dec
and
aad
adc
iret
cwtl
fcmovu
leave
xchg
outsl
fucom
add
jecxz
leave
inc
stc
inc
popa
mov
add
testl
adc
ffreep
jl
adc
scas
subb
jl
xchg
daa
or
pop
sbb
mov
sbb
or
aaa
jmp
mov
sbb
es
imul
cmp
inc
in
out
pusha
mov
jnp
xchg
ds
cmc
sti
mov
sbb
and
sbb
pop
sub
inc
ret
pop
aad
arpl
into
pusha
push
iret
das
or
inc
divb
push
inc
add
or
aad
mov
xchg
cmp
add
int
jg
pop
jns
shl
adc
add
adc
aas
and
push
popl
cmc
mov
xchg
sti
es
sub
fists
loope
mov
mov
push
test
mov
mov
popa
test
dec
notl
test
repz
stos
pop
cmp
jle
dec
adc
nop
mov
and
pop
mov
adc
pop
arpl
lea
cmc
xor
sarb
lods
loope
mov
in
and
jle
add
pusha
lahf
push
sub
bound
cmp
push
cmpb
lods
or
aad
shl
and
fcomps
mov
loope
loop
int3
out
xchg
data16
adc
into
dec
bound
mov
push
cmpl
aad
mov
shr
popa
ja,pn
mov
fidivs
xchg
fcmovnbe
xor
inc
lret
stc
push
inc
in
rcl
and
add
cmc
cmp
sub
aam
inc
sbb
jge
pushl
jp
jns
lods
or
mov
sbb
mov
push
push
pushf
or
dec
or
inc
test
pusha
jmp
inc
test
aad
hlt
and
inc
or
fstpt
sbbb
je
pop
add
xor
andb
popa
push
mov
jns
loope
outsb
jnp
or
cli
std
jg
and
dec
hlt
data16
iret
aam
mull
mov
xchg
push
aad
jg
add
icebp
fsubl
aaa
imul
es
outsl
push
test
fistps
xchg
mov
or
inc
jb
call
je
or
mov
imul
sti
js
jnp
dec
stos
add
test
adc
cmp
gs
mov
cltd
ret
scas
aad
inc
and
mov
ret
pop
fisttpll
sub
shrb
aad
sbb
cmc
xchg
jae
inc
jl
fists
vmovss
lret
enter
push
lahf
or
or
cmp
push
push
jl
or
sbb
nop
cltd
lcall
push
xor
loop
xor
adc
or
pushf
sub
pop
ret
cmc
insb
adc
mov
adc
pop
test
aam
jecxz
call
sub
loope
or
in
es
jge
fsubl
mov
sti
mov
xchg
aaa
loop
lahf
dec
outsb
test
jnp
cmp
push
fidivrl
mov
and
rol
cmpsb
repz
fs
dec
cmp
rorb
loopne
add
mov
xor
jbe
psrld
jo
icebp
ja
mov
cmpsl
dec
mov
lahf
andb
or
push
jge
xchg
dec
idiv
push
out
ja
or
push
rorb
out
cmp
mov
jns
inc
pushf
movsl
daa
add
sahf
sub
outsl
mov
mov
mov
sbb
or
aas
aaa
in
daa
add
aad
mov
fistl
outsb
ret
cmpl
pop
sbb
cmp
test
scas
and
mov
lods
movsl
mov
clc
ja
test
imul
pushf
dec
lret
pop
clc
jmp
in
or
js
ja
call
outsl
mov
pop
dec
arpl
xlat
cmc
fnstcw
add
test
sub
dec
sub
gs
pop
int
sub
dec
in
rorb
push
inc
mov
pop
adc
out
int3
dec
sub
mov
sub
jnp
and
jmp
fistpll
jge
sbb
jb
sbb
sub
lret
sbb
cli
iret
lods
and
mov
jecxz
test
maskmovq
divl
xchg
test
lods
jg
push
fdivrl
push
jae
mov
sbb
mov
pop
pop
icebp
jb
out
mov
fisttpll
cwtl
pop
mov
aad
xchg
sub
adc
and
pop
std
pop
mov
xchg
mov
pop
fcomps
dec
dec
or
movsl
mov
cmc
mov
cld
mov
adc
pop
pop
and
cmpl
xchg
mov
mov
add
dec
inc
dec
stos
ds
int
lods
imul
mov
lret
xchg
lock
pcmpeqb
sbb
mov
push
xchg
mov
mov
icebp
in
inc
push
inc
pushf
mov
loopne
sbb
in
sub
pcmpeqd
dec
popf
mov
lahf
aad
cmp
xor
sub
into
mov
setle
jbe
scas
jge
out
orl
arpl
cmp
ljmp
int3
pop
jle
xor
or
add
or
jmp
inc
aad
inc
jecxz
xchg
stos
inc
xchg
and
xor
inc
scas
jae
or
movsl
ret
int
sub
mov
pop
and
fnop
sub
cmp
rcrb
fildll
fwait
in
xchg
jmp
xor
lock
cltd
cmp
pop
out
in
sbb
inc
lods
inc
gs
out
in
testl
cmpsb
jnp
jge
xchg
mov
dec
hlt
in
scas
or
in
xchg
loope
out
and
sbb
sub
sbb
out
or
inc
or
mov
mov
pop
in
imul
xor
cmp
or
cmc
jnp
imul
lods
or
mov
mov
popa
sub
dec
das
ss
lods
iret
or
out
mov
or
sbb
testl
ficoml
ljmp
inc
fmuls
xchg
mov
cmp
arpl
call
pop
stos
test
inc
out
mov
xchg
lret
bound
mov
and
out
punpckldq
sbb
scas
mov
std
ret
divl
jmp
scas
cwtl
aad
cli
inc
outsb
pop
mov
stc
push
ret
mov
in
sahf
movsl
adc
cli
xchg
jmp
inc
jmp
fisttps
push
sub
idivb
or
mov
mov
push
jnp
inc
aam
pop
enter
in
push
dec
iret
xor
and
dec
jg
adc
cmpb
xchg
cld
cmp
stc
mov
js
sbb
negb
inc
lds
push
andnps
xchg
pop
xchg
aad
pop
jae
pushf
sub
mov
and
test
sti
mov
mov
xchg
adc
mov
jl
in
mov
test
mov
mov
mov
push
aad
mov
and
das
call
push
add
aas
cltd
dec
hlt
leave
sub
adc
jle
cmp
jl
mov
push
pusha
jmp
lret
pop
aad
in
stos
mov
lock
in
leave
int
sbb
out
in
pop
in
add
int
xor
cmc
subb
xchg
sub
adc
dec
jb
cld
xchg
or
call
mov
mov
mov
inc
add
add
fwait
mov
loopne
jmp
ja
in
xchg
aam
leave
insl
cmp
pop
cli
xor
lret
das
dec
add
shr
mov
push
cwtl
add
rcl
lods
sarl
int
insl
xchg
xchg
jmp
xchg
dec
jo
xor
enter
rolb
iret
jnp
pop
imull
inc
flds
insl
dec
in
add
mov
sar
mov
aad
sbb
ljmp
and
mov
les
xchg
movsl
adc
mov
inc
dec
lods
dec
push
inc
or
xchg
adc
dec
push
lcall
repnz
ja
add
cltd
scas
dec
mov
stc
lea
repz
aad
jle
iret
add
sub
mov
mov
rolb
jp
inc
insb
and
sub
or
push
mov
mov
cwtl
lods
fs
neg
orl
cltd
pushw
push
inc
dec
or
pop
mov
pop
mov
dec
int
test
mov
push
imul
pop
mov
cmp
fnstenv
xchg
push
sbb
cmc
and
dec
xlat
adc
jb
pop
dec
pop
rolb
cld
sbb
jl
push
dec
sti
dec
push
or
aam
dec
and
mov
and
mov
jl
jmp
loopne
fcmovnbe
test
jae
or
fldl2e
popf
lods
xchg
int3
dec
call
stos
or
jp
pop
mov
xchg
shll
movsl
push
pushl
sbb
xchg
fcmovne
adc
gs
aad
stc
and
or
mov
cmp
adc
adc
sahf
addr16
push
or
push
jmp
sbb
in
in
cmp
xor
sbb
push
add
dec
cs
jmp
into
inc
jg
mov
and
imul
fildll
in
imul
nop
test
std
ja
jmp
aad
jbe
fstpl
loope
xlat
cmc
mov
andb
imul
mov
xchg
cmpsb
negb
jae
inc
out
mov
pop
mov
adc
sub
lret
dec
cmc
in
je
aad
pop
xor
lods
lea
loopne
sahf
add
cmp
gs
enter
aad
pop
pop
insl
and
cmp
jno
cmc
mov
inc
shlb
add
neg
mov
bnd
cmp
std
popa
mov
push
out
mov
xlat
or
popf
pop
fsubl
jl
popa
or
mov
stos
shrl
cwtl
adc
xor
in
imul
add
mov
pop
sub
jmp
cmp
adc
out
or
in
or
push
dec
sbb
sub
call
mov
fmuls
into
and
out
stos
add
sti
testb
or
sbb
in
loopne
inc
sbb
dec
popf
sbb
mov
sub
iret
in
cmp
jmp
mov
inc
pavgw
pop
push
and
nop
cld
aad
mov
movsl
out
jb
imul
mov
push
and
call
jns
imul
daa
rcl
int
and
dec
xlat
and
jp
pop
cmp
divl
adc
adc
es
orb
lock
in
mov
addl
jmp
pusha
pushf
ret
add
lret
rcr
mov
mov
lret
jae
push
inc
sub
jge
cmpsb
hlt
je
jnp
mov
insb
aad
cli
lods
arpl
dec
dec
and
jbe
icebp
push
sub
test
mov
push
test
repz
ret
mov
shll
add
push
ror
sbb
xchg
out
repz
mov
jno
cmp
or
stos
sub
fisubs
fst
imul
jae
out
and
jb
sub
movsl
int
jbe
lock
shlb
dec
rcl
jns
icebp
popf
mov
mov
sub
add
xchg
dec
stos
dec
adc
insb
xor
arpl
insb
fucomi
jge
out
add
ret
adc
xor
stos
icebp
mov
insb
out
jmp
sub
push
pop
jnp
stos
iret
pop
cmc
mov
fsts
lret
or
iret
icebp
loope
mov
jno
clc
or
jl
addr16
and
addl
sbb
inc
imul
stos
pop
or
outsb
in
cmc
cmp
test
or
mov
fisubrs
jmp
cs
clc
mov
ss
xchg
out
xlat
inc
test
aad
inc
nop
dec
mov
jecxz
xor
fidivs
popf
loopne
or
outsb
in
dec
sahf
push
pusha
push
pop
mov
mov
sbbl
aad
or
jno
mov
sbb
push
sets
sub
mov
pop
dec
mov
mov
pusha
insl
pop
jbe
pop
loopne
popf
jmp
fs
push
xchg
add
jns
xor
mov
jne
mov
out
imul
mov
xor
int
cwtl
xchg
mov
imul
shlb
scas
jnp
push
mov
addr16
shlb
and
pop
jmp
pop
mov
and
inc
or
inc
ja
jmp
test
adc
xchg
jl
push
xchg
mov
imul
out
push
fdivrp
sub
data16
cmc
xor
jb
repnz
or
mov
aas
imul
cmp
jge
cmc
ja,pt
mov
xchg
xor
lret
add
xchg
add
and
jp
loope
ss
mov
dec
xchg
pop
pop
mov
in
mov
test
subb
fidivs
push
mov
add
clc
mov
xchg
mov
icebp
push
ja
cmp
int
std
cs
loopne
subps
mov
mov
mov
jl
inc
lea
bnd
fstpl
es
xor
mov
outsl
loop
xchg
jmp
out
je
xor
mov
dec
iret
lods
scas
imul
jne
cmp
sub
mov
cmc
fcompl
cld
lock
and
fisubrs
mov
mov
xchg
xchg
fwait
cmp
std
or
dec
dec
pop
push
adc
cmp
test
repnz
popf
add
data16
cmp
in
adc
jmp
dec
aam
fucomip
mov
nop
outsl
ficoml
lods
in
les
aad
nop
pop
fs
lcall
aas
stos
icebp
mov
add
repz
or
push
cmc
int
and
int
lds
out
sub
mov
adc
and
cmp
bound
and
add
and
mov
hlt
jmp
mov
jecxz
ljmp
repz
xor
test
paddw
int
je
pop
dec
cmp
test
mov
mov
arpl
cli
mov
movsl
cmpsb
imul
outsb
fisttpl
mov
insl
xchg
pop
arpl
pop
sub
cmp
shrl
inc
jmp
outsl
in
push
push
into
cmc
test
mull
or
mov
aam
inc
imul
dec
lea
cmp
dec
xlat
stc
push
int3
lsl
shlb
push
sub
mov
in
jl
or
push
sti
loop
push
lods
sbb
mov
outsl
sub
mov
jb
test
in
clc
jmp
cld
mov
addr16
fidivs
in
mov
mov
call
rol
cmpsb
push
sti
push
test
jmp
aad
lea
pop
in
sbb
mov
loopne
sti
popa
fincstp
je,pn
adc
clc
cmp
insb
sti
sub
mov
das
jle
push
dec
fidivs
add
ja
dec
dec
loope
loop
push
xor
nop
adc
int3
icebp
movb
fisubrs
in
mov
shr
cmp
mov
xchg
pusha
pop
lds
xchg
out
cmpsb
mov
mov
out
fsubl
pop
int3
cmc
xchg
mov
js
pop
jo
jle
insb
or
mov
push
mov
fildll
lods
rol
push
mov
add
dec
cwtl
cltd
enter
insl
pop
jl
adc
mov
mov
mov
add
inc
cli
xor
outsl
cmp
xchg
clc
mov
mov
push
sbb
je
fsubl
je
cmp
pop
mov
dec
enter
push
in
xor
mov
outsb
jle
testb
cld
push
out
or
inc
add
addr16
lahf
jo
fucom
dec
test
sti
adc
mov
mov
rcrl
fisttpl
out
or
xor
popf
adc
inc
jnp
cmpb
paddb
mov
mov
iret
rcrb
ret
ja
out
or
and
outsb
and
aam
mov
sub
call
aaa
xchg
adc
push
pushf
xor
jmp
xor
stc
mov
orl
mov
pop
imul
mov
out
in
int3
inc
call
cmc
pop
sbb
fstpl
jnp
inc
testl
cmpsb
bound
dec
pcmpgtw
ret
cmpsb
pusha
rcrb
mov
pop
adc
bound
adc
aad
sbb
xchg
cltd
and
pushf
je
jb
aas
sbb
push
call
aaa
push
rcl
inc
or
cli
fchs
les
jb
daa
rcrb
aam
mov
neg
dec
aad
pop
xchg
cltd
add
lret
out
out
mov
jg
mov
hlt
lret
cwtl
fbstp
lret
test
stos
jne
cmp
jl
push
sahf
jmp
add
dec
mov
lahf
push
sub
lods
cmp
pop
jne
jmp
jbe
loop
push
scas
add
shlb
xor
jb
iret
das
mov
inc
insl
ja
jb
aad
pop
ds
rorb
pop
cmpsb
lret
fiaddl
stc
adc
sti
ror
cwtl
loop
adc
jge
pop
jbe
adc
pushf
fs
ss
cmc
repz
mov
and
cmp
cld
add
int
testl
bound
xchg
sub
or
sub
popa
aad
int
loope
or
or
xor
and
cmpsl
in
xchg
xchg
push
mov
arpl
push
addr16
xchg
repz
iret
sub
aad
add
and
movsb
in
fisubl
xchg
mov
imul
push
sbb
jmp
loope
ret
aas
cld
jp
push
sbb
in
cli
cmp
in
mov
ss
aaa
jb
mov
jecxz
andl
inc
mov
jmp
outsl
sbb
inc
sar
popf
jnp
fadds
fdivr
repz
or
jo
mov
mov
stos
rorb
sti
lahf
lahf
lahf
loope
shl
scas
cmc
int
pushf
lock
in
push
lcall
xor
std
xchg
popa
popf
mov
push
cmc
imul
aad
and
cmp
xchg
jae
out
jp
jp
jb
ret
pop
sti
jmp
dec
scas
js
and
mov
andb
aam
jp,pn
dec
into
xlat
hlt
das
stos
pop
int
xchg
jl
popa
sbb
aad
sub
ljmp
add
iret
cmc
xchg
mov
add
fsubrl
in
lahf
cld
xchg
lods
jno
push
aad
xor
xchg
clc
das
outsl
and
cltd
jecxz
ror
setnp
push
push
ljmp
pop
dec
add
pusha
push
jle
mov
mov
dec
xchg
in
out
dec
cmp
inc
out
inc
push
mov
sarl
in
mov
mov
xor
cmpsl
das
subl
arpl
adc
fiaddl
jp
repnz
notb
fldl
pop
call
int
int
into
js
pop
popf
jmp
fst
pop
leave
sub
shrl
dec
popf
call
xor
add
jge
cmp
pop
mov
leave
insb
cwtl
hlt
or
es
mov
mov
cltd
fmull
dec
cmc
dec
stos
dec
or
mov
push
fbstp
add
fs
mov
jo
xor
cli
test
inc
enter
dec
outsl
push
or
sub
push
bnd
or
or
mov
mov
or
or
out
cmc
adc
and
xchg
stos
iret
aad
je
andl
imull
push
negl
or
mov
repnz
cmc
sub
iret
icebp
jle
push
adc
divl
filds
xchg
push
and
fwait
cmpsb
mov
pusha
inc
xchg
dec
stc
sti
into
iret
or
sub
jo
mov
imul
mov
add
dec
rclb
or
push
es
loopne
inc
cmp
lea
popa
dec
inc
inc
and
mov
jns
fs
repz
adc
xchg
push
pop
int
adc
sahf
dec
inc
bound
pop
adc
out
push
mov
imul
stos
jge
mov
xor
xor
xadd
imul
sub
loope
les
push
popl
jno
sarb
ds
andb
in
mov
pop
lahf
adc
mov
lret
mov
pop
sar
cs
xor
stos
mov
dec
sahf
cmp
pop
lds
popa
mov
or
leave
push
flds
js,pn
flds
jns
add
sub
mov
push
adc
dec
stc
sbb
xchg
mov
mov
mov
gs
stc
add
dec
ds
stc
sub
mov
js
insl
mov
imul
xchg
divl
dec
xchg
lahf
aad
mov
inc
mov
in
test
or
pop
scas
and
inc
jl
adc
pop
jne
xchg
js
out
cmp
fsts
call
mov
data16
mov
out
ljmp
jge
bound
std
shrl
jecxz
cmp
cli
push
dec
sub
fmull
push
pop
cmpsl
push
pushf
movsb
mov
loope
mov
and
xchg
fs
mov
aaa
test
mov
dec
loope
lcall
loope
push
idivl
ja
popl
xchg
sti
jle
push
sub
sub
pop
je
rcll
loope
nop
adc
andl
js
or
pop
test
xchg
or
push
xchg
jmp
pushf
mov
sti
aad
mov
sbb
in
push
aad
daa
int
sbb
adc
mov
lods
imul
sub
jmp
cmp
in
insl
push
mov
add
dec
fadds
jl
mov
add
or
fcomi
xor
add
xchg
xchg
pop
stos
movsl
int3
loope
aas
sbb
jmp
mov
movsl
out
sub
mov
xchg
lods
std
loop
push
xor
roll
mov
out
cmp
and
add
mov
adc
jmp
inc
and
iret
and
das
mov
push
cmp
or
mul
xchg
into
jmp
xchg
movsb
xchg
int
jbe
pop
inc
jg
in
push
int
or
mov
clc
mov
cmc
insl
ja
xor
or
scas
adc
xchg
inc
out
out
jae
adc
arpl
push
fs
adc
mov
mov
or
push
xchg
fidivl
pmaddwd
nop
push
jge
adc
insb
jl
and
dec
or
push
shlb
dec
inc
stc
jnp
fwait
mov
rorb
dec
xchg
subl
lods
lcall
jge
jge
dec
popa
testl
fimuls
lea
cli
aam
aad
inc
adc
push
cmp
call
dec
popa
mov
loope
mov
icebp
mov
xchg
icebp
inc
sub
xor
es
loop
hlt
xor
ret
jecxz
adc
imul
dec
jle
int3
jmp
fmull
cmp
push
cmc
xor
lcall
push
mov
daa
inc
aad
sub
dec
cmp
stc
mov
dec
ret
xchg
pop
mov
movsb
iret
int
fs
sti
out
add
je
ret
jp
push
cld
mov
gs
sub
stos
dec
sti
jbe
shl
and
test
jae
cmc
ja
fidivrl
mov
inc
fst
leave
dec
or
push
les
push
fdivrl
ud1
dec
mov
aas
add
adc
mov
aad
sahf
negb
addb
aad
cmp
loopnew
or
cmp
push
int
leave
in
xorl
adc
xor
mov
ss
adc
cmp
scas
push
out
jp
ljmp
add
in
cld
imul
jl
fbstp
and
push
push
outsl
shlb
sbb
sub
jno
sti
lahf
mov
int
or
imul
mov
push
lods
xor
cmc
dec
enter
cmp
jmp
in
or
mov
lods
mov
xor
adc
dec
lret
call
xchg
mov
mov
jl
add
les
xlat
xor
jmp
or
mov
enter
fs
sbb
mov
lods
int
mov
push
or
ficomps
xor
js
sub
or
push
int
test
adc
jg
mov
xchg
test
lcall
dec
js
xor
imul
xor
je
clc
add
outsl
jae
int
dec
je
popf
sti
or
add
in
dec
jecxz
xor
push
pop
clc
push
inc
sbb
dec
add
repz
fdivl
ret
sbb
and
insb
push
cwtl
pop
rorb
jmp
fidivrl
dec
mov
nop
sub
or
xchg
adc
out
and
sub
xchg
lds
push
inc
lahf
es
pop
sahf
loopne
or
mov
jp
jnp
pop
pop
pop
fnstenv
icebp
adc
scas
add
xchg
loope
out
std
ljmp
fcomps
xchg
xchg
mov
daa
dec
insb
dec
inc
mov
popa
cmp
movsl
inc
cmp
xchg
iret
or
and
rcrl
xor
out
push
add
jle
pushf
mul
sub
jg
pop
out
ret
mov
push
fsubrl
pusha
push
mov
jg
aad
decl
lcall
rcrl
movsb
ljmp
and
cmpsl
ror
addr16
mov
outsl
lcall
out
popf
jge
pop
outsl
idivl
and
push
test
das
aaa
sti
dec
sub
dec
cmp
pusha
jecxz
cmp
lock
dec
fldt
lcall
scas
ds
adc
and
in
fidivrs
enter
push
and
xor
std
cmc
shll
aam
in
out
jge
ljmp
push
addl
das
sub
mov
push
fs
popf
mov
lock
inc
or
shll
jae
sub
add
inc
or
rclb
fcoml
cmc
push
stos
mov
hlt
jns
xchg
in
xor
xor
movsl
mov
inc
lods
mov
xchg
mov
scas
cmp
push
sub
std
lods
push
cmp
sbb
dec
es
jmp
scas
iret
outsl
inc
dec
pop
imul
movsb
insb
dec
cs
in
or
movsl
jge
adc
mov
imul
insl
jne
lock
ds
loop
int
xor
jne
cmp
add
push
pop
popa
fsub
mov
cwtl
lds
add
aam
loopne
xchg
xchg
or
addl
cwtl
lahf
jne
out
addr16
jp
mov
and
into
mov
or
arpl
movsl
or
jmp
gs
fdiv
push
dec
cmc
cli
cwtl
mov
addr16
inc
jge
inc
out
pop
jbe
push
stc
mov
div
mov
xchg
test
mov
insl
dec
stos
std
icebp
sbb
cmp
dec
dec
cli
pop
sub
mov
xor
int
stc
test
mov
call
mov
fisttps
cmp
and
dec
sub
ljmp
popa
xchg
sarb
aad
loop
sub
jl
aaa
out
enter
or
mov
imul
jp
push
mov
lahf
add
fldt
sbb
test
xchg
add
add
cmp
push
push
mov
or
lods
sbbl
in
das
xchg
xchg
add
shlb
dec
lret
es
push
or
jg
dec
lcall
or
imul
add
adc
scas
imul
fimuls
stc
idivl
jae
or
and
fbld
lods
shll
arpl
sub
int
lcall
dec
fwait
scas
insb
ret
xchg
xchg
add
push
imul
ret
sub
xchg
testl
add
lods
pop
movb
mov
movsb
movsl
sub
inc
pop
pusha
test
in
push
les
or
dec
aad
mov
inc
and
cmp
dec
dec
bound
push
movsl
sbb
lahf
aad
dec
pop
enter
je
sub
data16
cld
arpl
adc
inc
int
jo
cmpsl
rorl
stos
pop
jmp
or
jns
mov
mov
aad
xor
adc
mov
popa
pop
imul
mov
outsb
pop
cmp
nop
cwtl
xchg
mov
mov
mov
or
int
mov
xchg
dec
cmp
add
popf
ljmp
and
add
test
inc
or
cmp
add
jge
das
insb
xchg
lcall
lods
jne
jmp
xchg
sti
xchg
ds
xchg
pushf
cli
push
ss
mov
or
xor
mov
lods
into
pusha
pop
mov
mulb
inc
push
jp
dec
hlt
adc
shlb
cmp
add
sbb
inc
inc
cmpb
and
andl
rcr
mov
leave
and
or
and
push
in
sti
cmp
repz
cmp
jne
cltd
mov
out
or
push
pusha
imul
inc
testb
dec
lds
mov
pop
or
ds
sub
mov
ss
xchg
add
mov
adc
pop
shlb
call
jp
iret
add
cmp
and
adc
mov
jns
sub
jmp
or
lcall
paddsw
push
es
cmc
fwait
inc
fsub
sub
out
dec
gs
adc
lods
out
test
xchg
sbb
addr16
loope
dec
jl
cmp
lods
sti
cmc
jg
fs
mov
popa
pop
test
in
mov
out
mov
cmp
les
outsl
adc
cmp
dec
call
push
aad
push
push
fdivr
iret
pop
xchg
or
or
fprem1
je
mov
mov
cwtl
leave
and
or
int3
inc
xor
mov
mov
xchg
imul
aaa
int
pop
js
js
jmp
aad
ret
in
data16
dec
push
mov
or
int3
lret
push
dec
xchg
pop
jle
lcall
dec
aam
adc
add
outsl
mov
mov
jbe
jno
repz
fbld
hlt
jo
shll
add
sarb
inc
loop
cmp
dec
sub
dec
loope
popa
adc
cmp
fucomi
ljmp
imul
xor
mov
dec
adc
in
sub
lcall
daa
cmp
js
idiv
mov
sbbl
testb
insl
jle
aad
xchg
adc
mov
jmp
in
pop
mov
cmp
ja
cmpsl
push
cli
cmp
pusha
enter
aad
pop
add
pop
and
mov
mov
insb
pop
fidivrs
fs
leave
mov
mov
sub
jnp
rcrb
loopne
out
popa
gs
push
aad
insb
cmp
inc
fcmovnbe
sti
push
jns
in
mov
call
push
sbb
popa
outsl
ror
jg
ret
fdiv
enter
or
mov
jge
dec
or
xchg
loop
ljmp
fprem1
inc
clc
jns
sti
xchg
push
push
outsl
jnp
cmp
fldl
or
pushf
add
sub
js
mov
and
add
sbb
add
add
into
cmc
aad
xlat
sub
ds
dec
int
mov
aaa
dec
stc
mov
jg
not
mov
mov
mov
push
out
aad
fs
jae
loop
cmc
inc
dec
and
das
xchg
mov
inc
mov
aam
adc
xor
xchg
inc
mov
lahf
pop
loope
xchg
inc
loope
lahf
scas
adc
push
andl
stos
int
hlt
pop
stos
pop
int
mov
lods
mov
inc
gs
test
repnz
in
jge
cmp
ret
add
sub
in
dec
shlb
stc
loope
jmp
jnp
dec
pop
iret
out
pop
aaa
mov
popa
pop
scas
mov
or
mov
fmull
mov
and
int
mov
jb
inc
inc
fldenv
cmp
clc
insl
icebp
cmp
lods
std
jp
jl
cmp
mov
mov
js
lahf
cmp
mov
xchg
rolb
lods
push
and
rcr
jg
subb
xor
iret
imul
rcl
fsubr
bound
push
cmc
les
jl
scas
push
sarl
rorb
loope
jmp
int
mov
adc
cmp
cmc
mov
mov
pop
jp
cmp
mov
push
mov
cwtl
loope
or
push
fcmovnbe
sbb
jecxz
dec
push
jmp
sub
popa
ret
jg
mov
inc
lds
pxor
fdivp
inc
cltd
inc
sar
push
pop
inc
scas
dec
outsb
dec
cmp
scas
xchg
mov
xchg
cmp
adc
scas
cmp
push
negb
and
and
sbb
andl
jmp
iret
push
sti
jo
jne
popa
ljmp
pushf
mov
push
aad
add
xchg
aas
stc
pop
flds
cmc
arpl
sahf
dec
pop
push
inc
call
aad
xor
jbe
sub
ds
lock
sub
add
pop
popf
psubd
xchg
ret
jle
iret
cmp
out
out
dec
dec
popl
sbb
adc
fldenv
sub
jno
sbb
cmp
sbb
sub
aam
mov
fidivrs
stc
in
sub
shll
mov
int
loop
adc
jbe
into
jo
loope
outsl
popa
xorl
lock
sbb
test
pusha
jmp
push
das
sub
aam
sub
mov
scas
in
and
dec
pop
test
std
aad
cmp
adc
out
pop
call
adcl
or
enter
repz
cmc
out
inc
mov
add
push
inc
mov
xchg
clc
addr16
dec
pop
lcall
mov
cmc
adc
push
sub
dec
adc
cld
ds
pop
mov
jle
decl
je
cmp
out
inc
pop
adc
mov
fstps
mov
sbb
push
call
cmp
adc
push
das
fldl
sub
adc
aad
arpl
mov
and
cmp
sub
int
and
ss
cwtl
cli
lahf
lock
mov
jo
mov
in
pop
adc
mov
inc
imull
xchg
pop
xor
xchg
aas
arpl
push
mov
adc
xchg
add
imul
cmpsb
bound
mov
push
sti
sbb
lea
shl
stos
push
inc
mov
pop
ret
in
cmovo
cmc
cmp
pushf
fnsave
cmpb
sub
mov
pusha
shlb
pop
cs
scas
aad
adc
mov
push
lcall
inc
dec
sbb
inc
nop
dec
int
push
mov
or
mov
mov
sub
enter
inc
outsl
aad
sahf
in
mov
imul
mov
aam
xchg
test
sub
repnz
sti
aad
cmp
and
cmc
cmpsl
dec
fistpl
sub
lcall
xchg
aad
add
aam
fs
cwtl
sti
dec
xchg
and
cmp
cmpsb
xchg
or
addr16
mov
push
int3
lret
test
xchg
repz
jecxz
loope
addr16
pop
sub
inc
loope
inc
mov
pop
add
cmp
loope
addr16
pop
fimuls
sbb
or
jecxz
jno
mov
xchg
mov
sarl
lods
adc
cmp
sub
mov
jb
stc
cli
jmp
mov
lods
mov
push
aad
out
mov
adc
mulb
mov
xlat
imul
mov
les
outsb
iret
adcl
fdivs
dec
adc
andb
stos
jge
xor
xor
fcomip
xchg
add
mov
lea
imul
fidivrs
add
loope
jecxz
fcoms
fstps
stc
push
dec
pop
fsubl
es
dec
lahf
fincstp
jmp
or
dec
push
cmc
fsts
and
aad
xchg
xor
popa
int
test
mov
push
arpl
xchg
arpl
jo
dec
push
rclb
cld
orl
mov
cwtl
cmp
xchg
popa
push
adc
daa
aad
cmp
ljmp
into
mov
not
jmp
mov
and
rcrb
or
test
imul
lret
nop
inc
inc
cli
jle
cwtl
push
push
mov
add
or
aad
push
nop
neg
decl
fstps
int
sub
fstps
popa
push
or
jb
cmp
mov
lods
pop
inc
xchg
mov
or
fnsave
std
add
call
mov
stos
icebp
lods
nop
pop
fwait
or
pop
imul
cli
mov
xor
mov
addr16
xchg
popa
cmp
dec
jne
std
adc
inc
mov
xor
mov
stos
xor
dec
and
or
push
dec
stos
fsubrp
xchg
or
or
lods
or
cvtps2pi
mov
jnp
divl
out
dec
cmp
das
mov
push
test
mov
cmp
push
add
push
pop
stc
mov
jecxz
xlat
ljmp
loope
sbb
pop
pushf
psubusb
stos
rcl
aaa
mov
mov
jns
pop
jle
dec
shlb
sbb
sbb
in
pmaddwd
bound
and
adc
ds
test
cmpsb
dec
xchg
loop
sar
cmp
sti
push
push
lods
sahf
aad
fs
dec
cmp
add
mov
insl
cmpsl
pop
insb
in
push
xor
dec
dec
std
and
shr
and
fnstsw
or
pop
sub
lods
aad
cwtl
sub
and
or
adc
sub
loopne
aad
je
loopne
pop
mov
or
into
and
xchg
and
mov
mov
push
push
test
js
and
jns
mov
inc
xchg
pop
ds
scas
dec
shrl
cmp
push
and
stos
repnz
mov
or
or
push
ss
mov
aam
por
sub
adc
jmp
lds
dec
call
mov
lock
roll
jge
jl
mov
rorl
dec
popf
jmp
imul
inc
mov
or
int3
jbe
fdivs
pop
add
mov
mov
rcll
jmp
es
lcall
and
jge
push
into
in
inc
sbb
into
jl
scas
push
adc
fldt
push
cmp
lea
aad
jecxz
mov
cwtl
mov
inc
pop
arpl
adc
insb
push
add
xchg
and
popa
sub
gs
cli
std
loope
aad
popf
xor
test
in
sub
xchg
push
dec
dec
in
lcall
loope
inc
flds
imul
jnp
mov
je
sbb
cmpsb
leave
jp
dec
mov
push
ja
mov
cmp
push
aad
jb
jmp
mov
scas
inc
loop
pop
jno
xlat
dec
xchg
or
sti
adc
xor
inc
rorb
lock
in
xor
int
xor
imul
xor
xor
iret
xchg
dec
push
and
push
pop
xor
push
add
adc
and
dec
fistps
lret
imul
pop
xchg
mov
mov
gs
add
mov
mov
andb
jnp
mov
aad
sub
xchg
in
mov
mov
call
iret
int3
jnp
dec
lods
xchg
xchg
hlt
js
sti
jp
negl
outsl
add
shll
jg
adc
cmc
std
ret
filds
fcomp
xchg
aad
sub
inc
iret
lahf
mov
popf
insl
jo
xor
repz
mov
int
pushf
hlt
xor
add
orb
mov
out
jno
mov
out
sub
or
fists
movsl
xchg
addb
mov
sbb
jb
inc
fstpl
js
xchg
pop
sub
dec
in
adc
mov
cmpb
test
cmp
jmp
aas
mov
rclb
cmp
or
mov
jns
add
repnz
std
arpl
popf
scas
or
aad
mov
or
xchg
cltd
xor
cmp
out
add
mov
les
outsl
fldt
dec
xchg
jle
adc
mov
cld
add
mov
inc
jnp
in
or
or
andb
adc
push
fwait
lahf
pop
adc
jle
rorb
call
int
inc
mov
sub
and
add
cwtl
lret
adc
lods
imul
fisttpll
call
cs
testb
mov
lods
mov
aam
xor
push
stc
pop
push
or
push
mov
pop
cmp
repz
fimuls
add
push
das
les
cld
ss
mov
lahf
mov
or
mov
xchg
jae
dec
sub
xchg
int
das
push
push
scas
aad
push
arpl
cltd
and
xchg
stc
nop
push
out
xor
fdivrs
adc
mov
in
sbb
sub
dec
nop
inc
popf
sub
lret
ss
or
aam
les
rcrb
mov
ret
movsl
push
push
mov
add
push
jbe
jmp
mov
jae
jnp
dec
jmp
jmp
xchg
pop
jl
out
jg
data16
jmp
test
inc
sub
loope
sbb
cmc
mov
mov
js
xchg
dec
mov
ljmp
xor
lea
adc
js
cmp
js
xor
sbb
xor
stc
add
dec
mov
lods
lss
xor
ret
and
xchg
sbb
xlat
out
in
decl
nop
inc
movsl
inc
push
test
add
mov
mov
pop
repnz
mov
jnp
xchg
or
pushf
push
test
jl
sub
movsb
push
scas
sub
mov
or
push
in
lret
push
mov
add
add
or
outsl
jmp
subl
popa
add
cld
mov
xchg
gs
push
xor
xor
ds
push
je
stos
push
add
ds
ret
rcrl
jmp
mov
lods
cmc
inc
call
bound
inc
addl
cmp
rorb
and
xor
out
push
and
pop
aam
mov
sbb
pusha
dec
push
mov
sub
or
mov
xchg
dec
or
add
cmp
cmpsl
aad
aam
lods
xchg
xorl
inc
pushf
js
cmp
inc
decl
fsubs
ret
mov
popa
xchg
mov
sub
add
jmp
popf
insl
cmp
mov
adc
jge
pop
or
add
fs
sbb
xchg
repz
xchg
dec
decb
shlb
dec
mov
outsb
lahf
cmp
cmc
notb
mov
int
lods
dec
push
repz
sbb
lahf
loope
stc
xchg
sti
push
les
insb
je
testl
lcall
sti
mov
loopne
cmp
aam
inc
gs
call
sahf
xchg
and
icebp
test
icebp
pop
mov
iret
dec
and
cmp
push
sarb
enter
mov
add
shl
mul
outsb
lahf
mov
lret
mov
fnstenv
in
jns
and
dec
jl
negb
push
inc
add
dec
xor
push
lods
loope
shll
cmpsl
jecxz
push
adc
pusha
push
js
in
outsl
aad
mov
ficoms
mov
loope,pt
xor
push
test
scas
je
pop
ficomps
mov
fsts
push
fdivl
mov
cmpsl
sub
mov
xchg
pop
jns
cwtl
testb
jp
clc
pop
mov
out
sbb
sub
xchg
xchg
leave
jb
je
and
out
mov
xchg
inc
and
mov
ret
inc
inc
out
hlt
andl
sub
push
lds
and
xor
call
insl
jne
mov
push
aad
lahf
inc
insb
dec
sbb
cmc
iret
ljmp
inc
or
and
fisttps
insb
aad
inc
xchg
into
jl
int3
push
push
pop
sti
rcrb
cmp
cmpb
xchg
dec
sub
and
xchg
jge
sub
test
rcll
inc
xchg
jns
addr16
inc
fisubl
adc
mov
and
push
idivl
mov
mov
jbe
xor
lods
outsb
stos
das
mul
aad
std
jns
sbb
xor
jl
jmp
dec
cmp
sub
inc
xchg
xchg
mov
iret
test
je
xor
cmp
cs
inc
xlat
arpl
xor
push
insb
test
pop
mov
in
in
or
out
imul
lahf
mov
inc
in
pop
mov
int3
mov
jmp
and
pop
test
mov
cwtl
cli
lods
add
int3
sbb
pop
xchg
mov
mov
xor
jle
dec
gs
incb
cltd
mov
mov
fsts
lods
mov
adc
insb
ss
jns
adc
pop
pop
pusha
stc
xor
cmpsl
shlb
notb
mov
cltd
mov
cs
inc
mov
xor
fwait
insl
push
mov
fildl
and
add
pop
mov
or
xor
sub
xchg
pop
cmp
mov
into
neg
or
pop
movsb
mov
outsl
xor
cmp
ljmp
xor
jecxz
xorl
js
out
jecxz
xchg
sbb
dec
xchg
push
mov
mov
and
lods
movsb
lock
xor
stos
jmp
into
mov
popa
popf
xchg
xlat
xchg
push
and
aad
pusha
sbb
pop
push
cmp
cmp
xlat
idivl
out
or
cmp
xchg
test
pop
jl
or
test
push
lcall
jmp
jge
popa
mov
jnp
les
jmp
aad
loop
call
xchg
pop
pop
rorl
pop
jbe
jge
adc
cmp
xchg
int3
mov
addr16
cmc
aas
jne
rcrl
popa
jge
outsb
ss
or
enter
dec
mov
lock
xor
cwtl
mov
sbbb
stos
push
lods
outsl
leave
bound
sub
push
dec
fadd
lcall
mov
add
cmc
xlat
jge
jns
inc
or
mov
xchg
jo
inc
push
popa
jmp
sbb
in
dec
xchg
jg
push
cmp
cmovbe
loope
cmp
js
adc
xchg
push
sbb
pop
mov
jmp
loopne
pop
loope
jl
sub
lea
cs
or
ret
jns
adc
xor
sbbl
aas
mov
mov
mov
cmp
xchg
or
add
adc
pop
cmc
xor
idivl
mov
xor
leave
test
jl
lods
mov
jb
mov
push
adc
push
sub
insb
mov
xor
jmp
je
sbb
mov
fldenv
into
pop
push
mov
jmp
push
mov
mov
mov
inc
out
cmpsb
dec
pop
mov
aam
arpl
adc
or
push
add
mov
adc
xchg
mov
inc
mov
fcoms
sub
xor
fsubp
popa
add
mov
jl
ficoml
clc
pop
int
dec
repnz
and
jmp
les
mov
lret
dec
es
xchg
lock
pop
iret
into
rcr
fs
or
jge
inc
and
adc
mov
int3
lret
filds
lret
call
cmc
repnz
mov
sbb
jnp
js
mov
int
shlb
cmpsb
xchg
in
in
mov
loop
cmpsl
loopne
test
sbb
mov
add
scas
lret
arpl
cmp
aam
or
xor
loopne
jmp
ljmp
pushf
cmp
or
jecxz
cmc
adc
sbb
jge
rclb
push
stos
mov
xchg
jns
or
or
and
jbe
sub
cmc
xchg
out
sub
push
iret
jp
xchg
inc
in
cmp
sarb
lahf
in
add
xchg
cltd
test
into
inc
jl
fs
push
jb
cmc
mov
xlat
mov
pop
adc
pop
aas
shl
pop
pmullw
adc
cs
cwtl
push
mov
add
fcmove
out
test
cmc
dec
test
les
sbbl
test
adc
repnz
movsb
sub
fs
jl
dec
ljmp
mov
mov
add
bound
mov
xorl
aas
ffreep
call
jne
imull
or
lock
cwtl
cmp
cmp
out
add
dec
pop
jnp
dec
ss
jb
pop
xchg
iret
mov
cltd
jmp
xchg
adc
xor
les
and
mov
push
inc
xor
out
lods
or
or
testl
cld
loope
or
repnz
mov
std
mov
pop
outsb
mov
nop
pop
xchg
lahf
cld
inc
stc
adc
mov
cmpsl
cli
popa
jbe
decb
jg
mov
cmp
jl
gs
popf
xor
xchg
mov
or
cmc
int
or
cwtl
arpl
neg
push
mov
push
shl
ja
inc
xor
mov
cmc
dec
in
hlt
cmp
adc
lods
scas
sub
push
loope
push
xor
movnti
aam
int
out
test
xchg
jl
mov
mov
stc
mov
push
stos
xor
mov
aas
jmp
and
or
mov
loop
jnp
test
mov
ret
inc
popf
int3
mov
inc
add
push
das
sti
mov
test
mov
int3
jae
nop
sub
inc
int
xor
scas
dec
aas
shrb
and
cs
int3
or
arpl
test
jb
divb
jp
add
jae
jmp
lcall
adc
dec
sub
mov
test
sti
or
mov
inc
dec
aad
sub
and
ret
pop
add
and
pushf
dec
les
jmp
out
cmc
mov
ss
stc
dec
adc
inc
adc
gs
adc
aad
out
popa
clc
pop
and
sub
push
out
pop
xchg
sbb
jp
in
mov
or
and
and
jmp
dec
mov
and
test
push
fmull
addr16
cmpsl
sub
out
pop
out
movsl
imul
adc
add
xchg
iret
shrb
sub
fcmovnb
imul
mov
adc
test
fcmovnu
fcomp
les
sub
gs
mov
xchg
jge
loopne
popf
cmpl
xchg
insl
mov
test
cmc
lods
movsl
or
adcl
adc
xchg
into
shll
cmp
xchg
enter
xchg
dec
xchg
icebp
inc
inc
dec
and
mov
adc
insl
stos
into
int
sahf
pop
cmc
stc
ftst
pop
aad
dec
xchg
dec
lods
sub
lods
jae
mov
lods
rcrb
sub
and
or
sub
ret
add
fstpl
loope
pop
cld
xchg
add
xor
dec
adc
sti
jp
xor
add
movsl
in
cli
les
inc
and
loope
mov
std
add
cs
sub
dec
in
je
and
pop
push
push
mov
cli
cld
pop
pop
int
push
insb
lock
mov
scas
sbb
outsb
mov
mov
ret
nop
aad
mov
xorl
rolb
cmpsb
decl
xor
jne
cmp
data16
dec
imul
sub
mov
add
and
xchg
adc
clc
test
es
or
adc
stos
add
stos
sbb
xchg
fisubrs
call
jns
fcomip
test
cmpsb
cmc
xor
loope
xlat
jb
dec
sub
jmp
jecxz
test
outsb
cmpsl
pop
sub
xchg
inc
outsl
push
push
sti
sahf
sub
mov
insb
sub
mov
into
je
and
divl
mov
inc
adc
popa
popa
push
pop
mov
stos
loop
cs
in
loope
xor
sub
sub
je
add
lods
sbb
xchg
xor
dec
in
aad
aas
dec
inc
call
jle
inc
mov
aam
jmp
test
int
les
push
push
jmp
les
ljmp
ljmp
imul
push
jmp
imul
dec
int3
out
adc
popa
sti
inc
dec
fsubrs
inc
cli
lods
pop
jmp
dec
call
sbb
push
std
cmpl
fistl
testl
lds
cmp
xchg
das
bound
lcall
fisubs
xchg
push
test
cmc
dec
ss
call
jbe
xchg
or
adc
dec
rcl
lds
jp
outsl
dec
push
rcrb
jae
mov
ljmp
loopne
pop
or
arpl
jmp
dec
test
adc
jg
enter
pop
cltd
movsb
jecxz
mov
mov
hlt
fisubrs
lock
fdivrl
add
mov
pop
leave
std
push
adc
sub
stos
cmp
mov
in
popl
add
push
cmc
pop
mov
cmp
test
add
testb
add
scas
lret
rorb
movsl
cmp
dec
lds
mov
sti
jo
inc
out
cmc
lea
cmpsl
int3
xor
scas
xchg
jmp
mov
mov
das
data16
and
add
xchg
imul
aad
jge
fisttps
lods
ja
or
addr16
stos
loop
out
push
and
in
mov
mov
add
int
ja
add
push
push
test
mov
xchg
xchg
les
icebp
push
jecxz
imul
and
insb
lock
movsl
shlb
jmp
pusha
int
js
scas
mov
je
xchg
imul
lahf
xchg
dec
jg
mov
scas
jecxz
or
cmp
scas
fwait
aad
loop
sbb
rcl
xchg
jmp
sbb
js
cld
lods
sub
in
scas
aad
loope
mov
js
add
or
lea
dec
aam
out
cmc
filds
test
mov
push
xchg
ljmp
mov
sub
das
push
aaa
outsl
mov
shll
add
mov
add
or
jl
adc
imul
aad
push
add
dec
jmp
or
fdivrl
sub
std
jno
repz
or
or
cmp
das
xlat
cmp
xchg
lds
jno
nop
movsb
inc
outsl
out
xchg
fxch
lods
add
imul
adc
pop
mov
mov
pop
pmaddwd
push
imul
push
xchg
dec
cmp
push
cwtl
ror
push
jns
mov
int
adc
xchg
mov
divb
testl
push
dec
shlb
pushf
inc
repz
adc
or
sub
fistpl
ss
out
in
testb
sbb
mov
xchg
sbb
in
mov
inc
push
cmp
lods
rsm
sub
cli
fyl2xp1
and
fwait
int
mov
test
jae
lcall
sarl
xchg
dec
or
adc
sti
mov
ja
push
rcll
mov
mov
jo
xchg
imul
iret
sbb
js
mov
sti
cltd
cld
sbb
jns
dec
pop
jnp
rcrb
sbb
inc
icebp
fwait
shlb
mov
or
js
and
sbb
sbb
jl
cs
sub
iret
add
ret
scas
jo
or
jnp
pop
pop
cmc
xlat
jmp
and
cmp
push
lcall
repz
sti
push
push
aad
pop
loopne
out
jmp
idivl
inc
inc
pop
jl
xchg
or
lret
cmp
in
mov
stc
sub
pop
cs
outsb
into
mov
in
push
cmp
jmp
or
mov
loope
cmp
into
mov
and
pushl
xor
movsl
repnz
repz
test
mov
or
push
lods
xchg
ret
jl
int
sti
xor
pop
jnp
or
pushf
pop
repz
sbb
mov
pop
mov
push
fcomi
lock
dec
insb
inc
cmp
sahf
xchg
mov
es
shl
jmp
fidivl
mov
in
push
cld
test
cmp
xchg
int
mov
adc
jecxz
in
fstpl
push
jecxz
xchg
jecxz
xchg
jne
mov
fmuls
push
pop
jp
sbb
xchg
pop
mov
ljmp
repz
and
imul
and
fdiv
push
int3
rorb
adc
xchg
lods
and
stos
cld
mull
cmp
mov
and
daa
add
stos
iret
out
mov
add
mov
shlb
imul
cmc
jno
and
xchg
sub
lock
call
mov
adcb
lcall
dec
adcb
sub
into
xchg
lea
les
and
int
nop
jecxz
jmp
sub
sbb
add
push
js
jle
push
adc
into
dec
mov
out
enter
cmc
movsb
jb
lods
mov
inc
mov
imul
pop
mov
inc
popa
test
rorb
or
lock
idivl
sarl
jns
push
negl
or
std
cmc
xchg
rolb
push
lds
pcmpgtb
cltd
push
aam
push
cwtl
insl
mov
sub
rorw
xor
in
add
pop
lods
shlb
mov
jl
xchg
dec
les
cld
xchg
stc
sti
sbb
fcmovbe
xchg
aad
fcomi
mov
pusha
fidivs
in
out
setne
mov
ret
mov
inc
in
out
add
leave
and
mov
popa
imul
xchg
adc
xlat
and
in
imul
xchg
push
jmp
push
cld
mov
std
adc
dec
pop
sub
cli
jmp
int3
pushf
adc
cmp
pop
insl
sub
jne
adc
push
push
nop
scas
stos
lret
and
mov
cmc
shr
mov
inc
fcmovbe
jg
icebp
cmc
outsl
mov
repz
lods
sbb
clc
cli
mov
iret
pop
call
orb
dec
mov
mov
mov
adc
bound
idivb
arpl
sti
int3
aad
mov
push
out
mov
or
or
inc
testl
cltd
mov
bnd
xor
pusha
stc
lods
sub
pop
mov
or
pop
xchg
les
cmpb
repz
cmpsl
dec
pop
mov
inc
lcall
pusha
fisttps
cmp
mov
xchg
adc
nop
and
push
pushf
dec
dec
cli
or
push
pushf
fbld
mov
movsb
fs
leave
out
mov
lcall
mov
fwait
dec
cmp
imul
lcall
js
scas
mov
dec
xchg
push
repnz
xchg
xchg
xchg
rol
dec
out
mov
sub
andb
nop
out
or
test
mov
fs
jnp
pop
int3
dec
cmp
pop
nop
mov
loope
push
sbb
jmp
dec
and
stos
push
mov
or
dec
dec
push
mov
xchg
cwtl
mov
test
mov
scas
push
aad
mov
cmp
pushf
pusha
sub
aaa
jnp
rorl
dec
add
sbb
dec
xchg
or
adc
aad
jns
adc
mov
ret
mov
or
in
or
sbb
push
push
test
sub
mov
push
or
adc
outsl
in
cld
insb
lods
add
frstor
movsl
test
mov
sar
test
adc
mov
mov
aad
orb
call
loopne
cmpsl
aad
push
jge
cmp
mov
mov
in
mov
cmp
xor
shll
cs
pop
add
cli
gs
insb
pop
pushf
dec
ror
not
jno
iret
ljmp
imul
mov
jp
stos
push
mov
call
and
divb
mov
es
cmp
sti
out
add
xchg
push
jns
scas
add
mov
call
insl
mov
loop
into
xchg
loopne
sub
mov
imul
enter
xchg
out
sbb
das
ss
lcall
cmp
shl
add
push
xchg
inc
out
js
adc
xchg
xor
js
push
es
insl
ljmp
mov
push
out
les
fcoms
int
and
cltd
outsb
cmc
adc
or
dec
jns
test
mov
scas
push
lcall
cmp
inc
mov
push
mov
mov
cmc
push
imul
dec
mov
xor
aad
mov
popf
sub
or
lods
fs
lock
imul
shl
and
cli
daa
xlat
cld
dec
inc
sub
jmp
fcomip
adcb
mov
sbb
test
jnp
jg
into
xchg
xor
sub
test
sbb
inc
sbb
int
ret
cmp
in
sub
dec
cmc
xchg
imul
cmp
push
loopnew
add
push
rcl
popf
push
push
xlat
cmp
add
std
mov
psubd
mov
sbb
rcr
dec
shrl
sub
nop
dec
push
jns
ljmp
xchg
out
test
cli
add
mov
int3
or
insb
add
mov
aad
add
lea
mov
clc
push
out
aam
xchg
mov
cli
orl
xlat
mov
faddp
sbb
cmpsl
loop
sub
mov
int
xchg
pop
je
dec
movsb
jmp
inc
dec
out
sub
dec
mov
push
fwait
or
sbb
pop
lret
scas
mov
mov
cwtl
dec
mov
mov
mov
xchg
into
xchg
mov
popa
fstp
fwait
dec
aad
out
cmp
mov
jae
sti
dec
push
cmc
or
les
lds
fs
lret
jp
sbb
push
icebp
iret
cmc
pushf
push
pop
xor
lahf
inc
fstl
push
imull
sqrtps
pop
cli
push
jbe
bnd
out
cmp
inc
pop
cmpsl
add
int
jns
mov
mov
cmp
cmc
push
mov
pop
mov
stc
lods
mov
scas
jne
out
out
cmp
aas
sbb
into
lcall
enter
pushf
or
adc
std
out
dec
aad
xor
pop
scas
and
pop
lods
mov
inc
cmp
repnz
adc
scas
cli
aad
orl
bound
cmc
loop
sbb
and
sbb
cmpsl
xchg
popa
cs
mov
mov
mov
cmp
add
enter
nop
pop
push
cmp
pusha
mov
testl
int3
push
fcomps
fcom
mov
or
jbe
sub
jmp
mov
rcrb
push
sub
jns
mov
sub
and
aad
out
rorl
jle
test
in
lret
lds
decb
or
mov
repnz
sbb
xlat
imul
aad
or
ja
mov
push
lods
lock
cli
in
sbb
loop
mov
cmc
aad
and
insb
bound
xor
mov
xchg
mov
out
dec
xchg
xor
xor
add
dec
add
repz
ja
aad
insl
in
or
jge
xor
imulb
mov
xchg
sbb
iret
movsl
cltd
sbb
scas
push
daa
xchg
mov
pop
push
popa
call
xchg
xchg
iret
call
mov
fcomps
cmp
shrl
dec
or
ds
popa
adcl
js
aas
mov
mov
fistpl
int
jo
inc
cmp
cmc
lods
lahf
and
ficompl
dec
shr
dec
sub
lds
test
dec
test
pop
outsb
push
and
jle
dec
out
scas
mull
call
in
or
xchg
rclb
dec
sbb
gs
movsl
xchg
xor
test
sub
notl
add
cmc
repz
push
add
enter
test
xor
out
jg
out
out
test
sub
adc
aas
add
shlb
aad
inc
push
mov
adc
cmp
mov
mov
push
push
push
mov
push
negl
pop
cmc
push
jae
or
jmp
sub
arpl
iret
pop
adc
sub
and
dec
rolb
aam
or
dec
mov
sbb
xor
fsubl
movsl
in
pop
fdivrs
inc
xchg
jl
mov
cmp
lret
test
daa
jns
clc
mov
shlb
jnp
inc
mov
and
int
hlt
mov
cmp
pop
loopne
ss
popa
out
inc
aad
mov
jg
cmpsl
fidivs
dec
jmp
outsb
out
and
aad
dec
sbb
mov
cmp
mov
in
jae
fnsave
fldl
int
cmpsb
notb
fildl
in
and
jl
hlt
push
mov
pop
jmp
cltd
call
arpl
push
lret
jns
pop
shlb
lahf
in
pop
push
xor
lds
lods
add
jmp
or
mov
pusha
xchg
dec
jl
fdivl
ret
test
je
or
ljmp
lods
or
mul
addr16
mov
loop
int
je
adc
sbb
xchg
jne
mov
dec
js,pt
test
aad
rorl
loope
cmp
pop
arpl
dec
xor
jle
cmp
addr16
push
jns
mov
out
cmp
pop
cwtl
imul
inc
push
adc
imul
out
xchg
xor
or
dec
ja
call
jns
aad
je
in
mov
xor
and
jno
mov
outsb
xchg
in
outsl
jae
aad
aad
movb
ja
cmp
or
scas
cmpsb
push
mov
cmpsl
scas
xor
ja
das
addr16
test
mov
cmp
shrl
leave
movsb
lahf
adc
aad
inc
aam
sbb
les
push
cmp
push
and
out
test
dec
aaa
inc
stos
push
push
jle
sub
rcrb
xchg
frstor
je
imul
jge
outsl
mov
rclb
ljmp
setae
push
scas
mov
add
fimuls
shrl
or
jecxz
addr16
movaps
dec
daa
cs
mov
and
sub
insl
pop
mov
xor
cld
jle
add
fistpl
push
mov
daa
dec
xor
ljmp
push
mov
shlb
sub
jecxz
int
cmp
aam
aas
dec
movsl
aam
inc
stos
and
push
scas
in
movsb
jo
dec
pop
decb
inc
adc
shrl
mov
stos
hlt
or
jmp
dec
mov
add
aas
and
sub
xor
or
or
mov
pop
sub
mov
aam
loopne
stos
out
popa
jg
adc
xchg
int
xchg
into
aad
cmp
add
sub
mov
aad
xor
dec
imul
or
fildll
adc
into
outsl
imul
dec
rcl
in
movsb
loop
sbb
nop
inc
xchg
fdivrs
jl
gs
push
xchg
mov
js
sub
jns
xchg
cmp
mov
xor
inc
sahf
push
cmc
shl
sub
inc
decb
add
push
sub
dec
pop
mov
mov
or
loope
scas
fldt
cmp
add
jmp
mov
addr16
adc
push
jmp
test
in
dec
popf
enter
sti
pop
inc
mov
cmp
mov
mov
jb
jle
sub
sbb
push
rorl
sti
arpl
notl
arpl
pop
xchg
clc
loopne
js
mov
fildll
push
fisubrl
cmp
loop
lcall
xchg
movsl
fcomi
mov
dec
iret
and
cwtl
dec
scas
push
inc
lea
jnp
aaa
mov
push
sbb
pop
jnp
arpl
or
std
fimuls
pmaddwd
insl
movsb
mov
fcompl
js
iret
and
xor
pop
call
jo
dec
jecxz
insl
lods
push
popa
add
movsb
lret
roll
xlat
loop
aad
inc
pop
sti
sbb
outsb
scas
add
cmp
pop
mov
adc
add
js
int
inc
insb
xlat
iret
je,pt
ud1
repnz
inc
popa
lods
imul
push
jmp
sub
mov
lods
cmp
adc
into
aad
fmuls
ffreep
mov
les
in
in
mov
scas
xchg
mov
add
dec
bound
dec
in
out
or
subl
xor
or
int
cmovae
mov
or
jmp
fsubrs
stc
aad
ret
or
cmp
sbbb
mov
jnp
repz
push
dec
add
xchg
ficoms
xchg
push
idivb
push
xor
pop
js
pop
push
rcll
lahf
push
mov
les
in
mov
push
decb
xor
or
stc
aad
repz
inc
xor
inc
mov
std
insl
mov
daa
popf
sbb
push
roll
enter
mov
jae
mov
and
jb
push
pop
push
decl
jns
movsl
cmp
scas
dec
enter
movsb
fmul
add
ficoml
ja
mov
cli
adc
movsl
cwtl
into
rcl
push
in
out
cld
out
dec
or
into
mov
xchg
arpl
ret
pusha
repz
add
mov
int
adc
loope
and
neg
mov
xor
mov
movsl
mov
out
cli
loope
dec
cmp
in
out
and
dec
push
int3
xor
or
or
in
jne
sub
in
jmp
jnp
cmp
add
and
and
aam
nop
leave
adc
adc
push
jb
hlt
mov
loop
lcall
push
sbb
aad
mov
dec
outsl
bound
mov
call
movsb
or
xchg
or
sti
jle
jp
mov
iret
xchg
std
repnz
mov
add
mov
sbb
and
leave
mov
ja
pop
mov
lea
mov
cmp
sub
cltd
fwait
mov
jmp
add
fwait
dec
mov
ja
jl
fimull
or
cmp
cmp
enter
mov
inc
loope
adcb
lods
push
push
test
xor
push
or
push
lea
in
call
mov
int
notl
jb
out
pusha
daa
enter
dec
jecxz
jo
cmpsl
test
aad
notb
and
stos
popa
or
mov
pop
scas
mov
js
adc
repz
inc
mov
pop
sub
ret
mov
aas
rol
xor
jns
scas
negb
xor
in
add
mov
cltd
gs
int
bts
sbbb
test
cmp
xchg
xchg
xor
mov
std
dec
jge,pn
push
mov
sub
out
add
movsl
mov
test
hlt
jnp
outsl
xor
jae
or
jg
std
ret
dec
cmc
push
daa
test
push
sti
jmp
loope
popf
lss
xchg
cld
or
int
ds
mov
cli
call
jecxz
arpl
jb
jo
jge
std
push
outsl
sub
xchg
stos
lahf
pop
aad
mov
fisubs
xchg
mulb
mov
jae
call
dec
jge
push
jns
and
lods
aad
pop
lea
out
sub
dec
pop
xchg
or
sub
iret
cmc
addr16
out
aam
pop
std
mov
dec
ret
std
movsb
std
inc
fdivrl
jmp
add
jp
dec
sub
mov
les
sub
dec
shlb
xor
cmp
or
add
xchg
inc
int
aad
roll
jl
push
fwait
jmp
jp
or
xor
iret
push
call
mov
adc
xchg
and
sarl
repnz
adc
xchg
inc
mov
cs
and
and
mov
je
jle
inc
rolb
movsb
rorl
pop
inc
enter
and
sbbl
ljmp
ds
ljmp
imul
xchg
mov
sti
or
andb
xor
stos
or
xchg
cwtl
neg
cmp
lods
dec
ret
push
cs
icebp
int
int3
insb
mov
cmp
and
lea
add
add
daa
dec
xchg
setl
jmp
fwait
leave
out
mov
xchg
repz
test
mov
xlat
xchg
push
stos
iret
pop
loop
and
rcl
sbb
inc
es
dec
insb
dec
out
idiv
loop
jl
sbb
cmp
aaa
ret
test
shr
test
or
loope
inc
sti
jo
sub
cwtl
test
inc
popf
cs
push
bound
loope
shrb
cmpsb
cmc
rcll
pop
xchg
repz
xchg
test
pop
mov
push
imul
sub
pop
mov
mov
pop
gs
mov
xor
aad
jb
test
mov
es
test
inc
out
xchg
and
test
pop
xor
imul
xor
dec
dec
movsl
lea
fisubs
std
bound
sub
insb
fdivrl
sub
mov
movsl
pop
xor
int
cmp
popa
jle
dec
mov
orl
popa
pop
icebp
cmp
popf
lcall
scas
mov
fwait
cmc
and
add
cwtl
cmp
pop
mov
bound
or
int
dec
push
jmp
jns
inc
jnp
mov
sub
inc
and
sbb
insl
cmp
addr16
add
imul
aad
rcl
adc
test
pop
push
lea
fcmovb
cmpsb
pop
fcomps
loop
repz
sbb
push
popa
or
inc
jmp
mov
mov
jno
lods
popa
adc
sbb
and
pop
adc
out
lea
xchg
scas
cmp
sub
pop
cmpsl
lods
mov
sbb
bound
test
shrl
and
jne
cmp
dec
sub
addr16
sbb
test
testb
and
test
ret
sti
jge
lock
xorl
inc
out
ljmp
in
mov
adcb
popf
jmp
mov
push
shll
sub
repz
lret
jp
or
cltd
cmpsl
cld
mov
imul
push
stos
aad
add
or
mov
mov
dec
out
fwait
mov
mov
adc
ljmp
popf
adc
dec
out
addr16
outsl
xchg
cld
dec
xor
or
lret
mov
pop
inc
pop
mov
iret
push
cmp
xor
pop
fucomi
cmc
dec
lods
cmpsb
movsl
imull
mov
cmpsb
mov
mov
gs
dec
in
loop
mov
add
and
leave
jl
in
dec
movsb
push
mov
xchg
push
cmp
nop
sti
jge
and
add
sub
jmp
rorb
xchg
aad
arpl
push
lods
std
pushf
push
mov
mov
cld
dec
pop
add
popf
adc
cs
xor
and
pop
mov
in
mov
out
inc
and
jge
fildll
cmp
push
xchg
inc
ljmp
mov
lahf
pop
pop
in
dec
jns
icebp
test
ficoml
out
stos
ret
push
repnz
js
pop
sub
les
fisubl
lea
pop
adc
dec
push
and
and
jno
cmp
dec
in
xchg
xchg
sub
aaa
pusha
cli
sub
xchg
out
movb
fucomip
js
sub
pop
and
lret
fimull
popa
insb
mov
push
stc
hlt
cmp
mov
and
aad
jle
out
aad
aam
stos
mov
jns
std
insl
mov
gs
clc
into
arpl
add
subb
xor
lds
cld
dec
cmp
repnz
and
daa
mov
in
pop
or
jle
lahf
pop
adc
lcall
jmp
sbb
cmp
aam
imul
xchg
movsl
mov
dec
sub
scas
mov
cmc
add
xor
lret
push
pop
adcl
fnstsw
mov
xchg
xor
push
xchg
cmc
adc
inc
dec
mov
shlb
sbb
div
push
fmull
insl
mov
lock
and
mov
xchg
sbb
hlt
jae
hlt
mov
and
and
cmpsb
push
cmp
or
jmp
out
iret
mov
cltd
push
aad
adc
dec
jg,pn
popf
add
cli
shlb
jmp
outsb
mov
add
jge
push
fs
cmp
pusha
jle
mov
iret
loope
and
cld
arpl
int
mov
dec
outsl
lret
adc
cmc
mov
popa
rcll
ljmp
push
dec
or
es
xchg
enter
jne
cmp
shrb
cmp
xchg
push
out
push
andb
std
inc
jns
ss
push
andl
xlat
ja
movsl
inc
adc
sahf
push
sub
mov
dec
fiaddl
repz
or
imul
mov
loop
cmp
decl
add
popa
jge
loop
rep
dec
jo
daa
test
sub
fcompl
mov
aam
cmpsb
inc
add
out
fmul
mov
mov
cwtl
or
aad
bound
mov
imul
rcr
lock
xchg
sti
jmp
rorl
aad
and
nop
jp
addr16
out
sub
test
or
mov
or
mov
pop
in
mov
xchg
shll
cmc
inc
xor
jecxz
imul
add
mov
jb
jae
jecxz
cmc
out
and
mov
jp
jnp
loopne
dec
push
cmc
xor
lcall
pop
mov
mov
adc
rcll
adc
cld
roll
add
addr16
lods
int
idivl
jmp
imul
cltd
push
inc
and
xor
sbb
jno
mov
mov
xor
adc
daa
cmc
stos
cli
test
fs
xchg
sahf
mov
shll
iret
inc
xchg
les
xchg
shrl
cmpxchg
sub
push
pop
or
or
fwait
cmp
xchg
nop
mov
dec
xchg
inc
ret
sub
mov
lcall
div
adc
add
movsl
repnz
pop
inc
cmp
lods
mov
iret
fistl
ret
fildl
sub
mov
js
mov
xchg
fbstp
pop
push
lods
mov
sub
pop
xchg
loop
in
clc
xlat
pop
aaa
sub
pop
inc
mov
inc
xchg
packuswb
aad
dec
or
push
fldenv
pop
stc
dec
les
cmp
imul
inc
add
insb
pop
cwtl
xlat
and
xchg
cmc
lock
leave
xchg
dec
call
or
addb
mov
mov
dec
cmp
jge
dec
scas
aad
out
aas
inc
jmp
jbe
and
or
shlb
fildll
sub
js
pop
adc
cli
adc
aad
clc
mov
mov
sub
dec
cmp
jle
dec
and
dec
pop
or
inc
les
mov
lock
call
cld
mov
inc
mov
dec
dec
std
mov
popf
dec
push
sbb
ret
ja
imul
jp
mov
cmpsb
lea
xchg
sbbl
scas
out
mov
pusha
vpshlw
hlt
test
push
stos
lret
hlt
and
adc
les
testb
flds
lea
inc
sub
aam
sti
mov
and
dec
cmp
test
adc
mov
leave
subb
std
sbb
mov
lcall
sti
xchg
xor
and
mov
jmp
lahf
push
cwtl
push
jp
push
out
mov
insl
sbb
and
xor
cmpsl
inc
test
lods
cmp
add
movsl
pop
cmp
sahf
dec
push
mov
sub
pop
push
mov
movsl
mov
mov
sbb
in
out
stc
sahf
jb
mov
cmc
sbb
xor
or
add
mov
push
mov
jp
fst
cmp
call
in
fcoml
xchg
leave
ja
push
lcall
dec
mov
stos
cltd
cwtl
mov
push
push
and
daa
jmp
into
jne
into
fnstcw
addl
fiadds
insl
jg
jmp
bound
pushf
dec
repz
mov
ja
dec
aad
mov
cmc
int3
popa
adc
jle
adc
or
jge
in
dec
cmp
fwait
ret
out
and
movsb
xchg
stos
and
xlat
dec
outsl
out
and
sbb
subb
cli
ret
mov
shl
ds
xchg
xchg
lods
or
xchg
shlb
lret
fildl
popf
std
xchg
push
push
and
dec
int3
aam
jns
inc
or
out
add
fsubrs
jmp
out
or
pop
adc
add
and
nop
mov
cmp
adc
jl
in
cmc
fdivrs
sub
mov
aad
dec
adc
dec
jne
adcl
mov
std
out
aad
imul
sub
mov
mov
sbb
lods
mov
movsbl
js
sub
mov
lods
fiaddl
repz
jns
rolb
popf
dec
add
push
cmc
sarb
push
in
or
shlb
bound
andb
rcll
test
mov
in
push
mov
jmp
add
mov
fisttps
call
popf
aaa
cli
mov
mul
jae
sbb
xchg
sub
or
lahf
xchg
ljmp
and
pop
aad
dec
lcall
lods
sub
add
jo
sti
aad
inc
mov
mov
sti
outsl
shll
and
dec
and
mov
add
jge
pop
sbb
jge
cmp
test
outsb
fmull
jno
in
mov
and
aad
rorb
mov
and
scas
pop
adcl
inc
fs
mov
xchg
add
dec
imul
pop
out
inc
cmp
mov
push
sti
mov
faddp
aas
and
and
push
stc
xchg
mov
shl
xchg
jecxz
dec
push
out
pusha
out
mov
sub
mov
xlat
add
outsl
xchg
jle
leave
das
xor
sub
xorl
mov
pusha
lahf
aaa
jge
mov
mov
mov
xchg
lret
push
inc
cmc
iret
lds
test
lods
push
mov
scas
call
pop
pmaddwd
addr16
ljmp
dec
xor
inc
mov
and
push
push
jge
or
pushf
js
fs
and
dec
pop
lcall
jmp
imul
ret
dec
cmp
cld
push
mov
pusha
mov
pop
lea
lret
imul
out
or
test
mov
mov
test
dec
enter
mov
les
sbb
cmp
jns
pop
lds
dec
xlat
cli
xchg
inc
xchg
mov
fnstenv
cmp
xor
add
aaa
popa
into
push
ljmp
fwait
hlt
scas
pop
cmc
mov
or
mov
sti
rorb
or
xchg
cmp
dec
adc
adc
repnz
mov
test
aaa
add
fucomi
stos
and
icebp
in
stos
cltd
sub
repnz
repz
out
fwait
cmp
inc
fsts
int
push
testb
jne
inc
cmp
std
out
xchg
xorb
stc
or
jae
inc
loopne
mov
in
roll
inc
mov
mov
sbb
xchg
jl
xor
rcr
dec
mov
add
or
jg
jp
cmpsb
movsl
push
iret
jmp
sub
mov
sbb
out
or
cmp
dec
dec
outsb
cltd
insl
adc
inc
and
dec
push
xchg
aas
and
cmc
mov
loop
test
lret
xchg
inc
pop
push
sbb
fs
cs
enter
push
pop
inc
push
fdivl
cwtl
scas
loop
jg
push
jnp
sub
jmp
sub
iret
ja
in
shlb
call
and
ljmp
aad
imul
call
loope
pusha
mov
data16
add
sarb
out
or
lods
movntps
ds
xor
push
adc
xchg
push
subb
mov
push
dec
cmc
push
mov
aad
mov
jmp
gs
adc
es
sti
or
push
sub
sub
sarb
jbe
push
jl
cmp
jns
xchg
lret
pop
sbb
clc
lret
dec
aad
or
and
scas
stos
mov
mov
decl
fists
add
xor
inc
out
insb
jecxz
int3
mov
push
xchg
test
push
insl
cmpsl
clc
div
and
int
xchg
cltd
lods
sub
rorl
push
xchg
inc
scas
cmp
jge
push
test
sbb
dec
or
add
mov
adc
stos
pop
xchg
orl
push
movsb
aam
xchg
outsb
mov
add
ljmp
test
lret
sub
int
push
or
add
jno
dec
adc
pop
adc
out
dec
jmp
or
or
and
fdivs
and
pop
call
int
push
cmpsl
sub
stc
adc
xor
call
pop
repnz
xchg
mov
dec
test
or
cmp
cmp
mov
addl
mov
sbb
loope
ss
adc
or
sub
adc
sarb
aam
sub
jg
push
cs
and
inc
or
push
or
push
push
sti
lock
xchg
pop
mov
add
cmc
clc
addb
mov
add
add
mov
aaa
xor
ljmp
inc
push
sbb
out
dec
pusha
adc
push
aam
mov
sub
xor
loope
mov
cmc
fimull
ret
fs
lods
mov
imul
test
or
movsl
iret
mov
push
pop
addr16
lods
outsl
in
push
mov
xor
loope
and
or
movsb
pop
into
adc
out
test
sub
movsb
cmp
aad
jl
push
call
or
dec
stc
aaa
punpckhbw
mov
sbb
cmp
nop
imul
out
in
es
xchg
lock
popf
inc
sbb
pop
mulb
and
pop
cmp
ja
push
push
ja
xor
jg
subl
cmp
repnz
jbe
sbb
mov
mov
hlt
push
clc
in
out
xchg
sbb
aad
cs
jbe
jmp
mov
mov
addr16
dec
js
out
rcl
lds
fisttpll
push
loope
xchg
fwait
lret
pop
lock
int
pop
or
pop
stos
sbb
icebp
ss
xchg
test
and
lea
jae
cmp
xor
push
jb
sub
cmpsb
mov
push
xchg
jg
cmp
mov
and
push
dec
sbb
jmp
repz
xorb
insl
sbb
cld
xchg
into
bound
dec
or
xchg
jae
roll
xchg
push
cmpsb
xchg
mov
fisttps
mov
jne
xchg
lsl
add
xor
push
jge
lods
hlt
adc
imul
push
inc
lret
push
sub
sub
cs
add
in
xor
xchg
test
lods
jmp
imul
or
in
sbb
scas
jne
subl
subl
scas
xor
or
jge
test
xor
aad
das
insb
pop
cmpsb
in
ret
andl
dec
subl
and
sbb
or
push
out
xchg
mov
sahf
call
and
cmc
stos
fucomp
and
js
push
loope
rorb
fldt
lcall
xchg
mov
in
test
xchg
repnz
das
and
data16
sub
jl
mov
dec
push
dec
or
divb
insl
pop
out
imul
xchg
mov
mov
dec
mov
out
enter
mov
data16
and
mov
dec
or
dec
fldenv
and
cld
adc
inc
fimuls
sbb
arpl
divb
mov
dec
jnp
cwtl
ds
dec
cld
insb
mov
jo
outsb
inc
movsb
mov
mov
sbb
lods
push
fmull
nop
aam
cmp
push
std
sbb
adc
pop
dec
pop
enter
outsl
insb
fnstsw
rolb
dec
cmp
pop
xchg
je
or
out
inc
dec
leave
lds
dec
rcl
mov
pop
repz
scas
lret
cmc
jl
fwait
push
filds
mov
or
in
fimull
sub
xor
fisubrl
jg
xchg
add
xchg
sarl
std
push
wrmsr
mov
xor
cmp
jg
xchg
fdivrp
cwtl
fidivs
add
and
jle
std
lret
in
repz
mov
ja
push
pop
dec
roll
cmp
jmp
mov
mov
outsl
and
xchg
xor
cmp
mov
shlb
pop
add
xchg
cmp
nop
mov
cld
movsb
test
cmp
cs
inc
pop
icebp
adc
mov
loopne
sbbl
jnp
inc
sbb
repz
lods
sbb
sub
lods
popa
mov
dec
cmp
outsl
and
mov
int
cmpsl
cwtl
cmc
es
adc
mov
imul
fnstcw
mov
push
arpl
rclb
add
adc
inc
bound
aad
sub
and
pop
cmc
out
pop
pop
pop
mov
and
mov
stos
cmpsl
fildll
sub
dec
lock
pop
ljmp
push
mov
or
pop
mov
cwtl
or
push
add
mov
cli
mov
cld
mov
lahf
pop
icebp
adc
test
fistl
pop
dec
and
stos
jg
add
mov
lea
pop
and
repnz
test
push
inc
dec
push
sub
test
fildll
lea
je
test
loopne
cmp
aaa
or
dec
dec
bsf
aad
cmp
shr
jmp
jecxz
loope
out
pop
fimull
pusha
daa
mov
in
cmc
popf
jae
inc
test
into
rorl
jl
push
pop
cmp
inc
daa
xlat
cmc
jge
das
adc
test
rcl
push
popf
push
iret
sbb
aas
rorl
andb
imull
adc
mov
cmpsl
xchg
dec
fwait
test
in
push
pop
sbb
idivb
scas
fdivrs
mov
pushf
cmp
push
sbb
push
inc
mov
mov
dec
jns
add
mov
icebp
jg
push
or
into
lods
data16
xor
push
cmc
or
jmp
jmp
jg
inc
jle
jno
cltd
std
fstps
ret
sbb
lods
popa
mulb
les
js,pn
mov
loope
xchg
jle
movsb
scas
push
cmp
mov
sbb
dec
or
into
nop
cli
in
mov
push
push
je
mov
lock
inc
lahf
scas
rclb
jecxz
xchg
and
cltd
aad
sub
mov
shl
and
mov
fcos
scas
pop
insl
idivl
stc
in
out
and
push
lods
cmpsl
pusha
std
mov
mov
movsl
add
popa
ja
sti
cmp
negb
fstpt
push
mov
push
inc
bound
add
and
pop
jns
scas
pop
popa
scas
dec
xor
dec
sti
push
jp
loope
fdivr
repz
cmp
rclb
dec
mov
lds
test
fisttps
push
or
and
xlat
je
les
clc
or
inc
aas
out
enter
insb
xor
iret
and
aad
push
hlt
aas
add
mov
xchg
jae
aad
std
mov
mov
pop
adc
mov
jns
push
add
cmc
in
aaa
aam
in
sub
in
cmc
xchg
mov
xor
mov
fcmovne
xchg
jp
js
test
add
iret
rcl
sbb
es
sub
into
imul
pmullw
cmpsl
dec
push
pushf
insl
scas
subb
sub
pop
jmp
movl
negl
mov
push
push
popf
mov
xor
pusha
ljmp
sub
mov
sub
mov
adc
mov
mov
lret
test
mov
int3
xchg
fs
pop
stc
cmp
pop
lret
call
movsb
aad
popa
popf
mov
aaa
xchg
ds
pop
lea
add
lods
cli
cs
push
mov
lock
js
imul
pop
adc
outsb
setne
out
and
mov
jp
mov
mov
js
push
inc
push
mov
popa
ja
or
adc
push
inc
cmp
mov
out
jecxz
sbb
mov
mov
pop
rorb
int
cs
movl
jp
jge
mov
lea
into
sub
push
cmp
sti
test
dec
or
push
jmp
push
or
in
clc
lcall
pcmpgtd
add
dec
fdivrs
loope
repz
rclb
das
in
fidivrl
stc
cmpsl
fucomi
and
mov
out
sub
dec
xlat
lret
lahf
subl
mov
or
add
int
loope
jg
or
mov
pusha
in
cwtl
cmp
xchg
pop
dec
psrlw
out
fs
loope
push
or
shrl
jmp
mov
mov
je
inc
push
leave
inc
movsl
sub
aam
or
loopne
mov
xor
mov
pop
cmc
jp
and
cmp
test
fistpll
cmc
movb
repnz
lahf
jno
adc
sbb
add
outsb
adc
mov
lea
fwait
outsb
cmp
ret
sahf
push
and
testl
push
aad
js
cmp
test
xchg
mov
cmc
adc
dec
mov
mov
fiadds
mov
in
test
outsb
xchg
push
arpl
fnstcw
ret
push
or
jb
in
sti
loop
sbb
shlb
mov
cmpsb
cltd
mov
sbb
aam
in
cltd
mov
push
movl
out
adc
mov
mov
pusha
stc
ffree
or
nop
push
std
movsl
jns
roll
cwtl
or
sub
pusha
data16
ret
xchg
imul
enter
int
rolb
adc
sub
add
ljmp
or
mov
mov
in
adc
push
pop
push
pop
adc
pop
push
mov
out
loope
sbb
std
stos
mov
lcall
mov
adc
and
sub
push
stos
bound
rcr
mov
push
les
jmp
sub
fs
add
lea
stos
sub
std
cld
mov
js
inc
int
and
mov
mov
movl
jb
std
jmp
xor
popa
out
xchg
pop
les
sub
mov
cmc
cmp
or
add
rclb
push
dec
stos
mov
frstor
cmp
dec
rcrl
subps
aad
pop
bound
cmp
or
lods
lock
and
adc
and
pop
cmp
lods
or
and
pop
std
pop
cmp
ja
push
int3
dec
mov
dec
add
bound
cld
mov
xchg
fstl
push
and
fwait
aaa
and
mov
jne,pn
dec
les
mov
loopne
push
testl
pop
push
xchg
jno
ficoml
cs
shll
mov
or
subl
stc
xchg
sub
pop
jnp
jg
imull
je
xor
sbb
push
cmp
push
mov
dec
inc
pop
popa
inc
js
int
cmpl
xchg
cld
scas
movb
test
test
mov
jmp
push
sub
xchg
sub
inc
mov
ja
jg
sub
scas
stc
mov
jne
fnsave
xchg
and
mov
sbbb
lds
mulb
and
pop
lods
nop
imul
lcall
lcall
ljmp
daa
movntps
psubw
inc
lods
addl
jne
mov
mov
mov
add
es
stc
das
sub
pop
xchg
in
cmp
mulb
loop
inc
mov
dec
mov
out
nop
mov
sbb
push
or
stos
jb
loope
inc
inc
repz
test
jmp
pop
fnstcw
push
dec
cli
cmp
stos
jo
stc
stos
lds
mov
cld
repz
cmp
xchg
insl
push
test
inc
in
dec
cmp
hlt
xchg
pop
mov
ss
int
bound
sbb
ja
pop
jmp
inc
fwait
mov
adc
dec
sbb
xchg
ret
nop
clc
push
jnp
movsb
in
dec
adc
jecxz
or
pop
xchg
cli
mov
jne
add
loope
aaa
mov
aad
out
or
shr
mov
mov
rcrb
shrb
add
test
mov
and
jl
jp
lahf
add
mov
out
daa
adc
add
ficompl
or
cwtl
imul
add
jecxz
sbb
ja
cmp
into
out
cmp
loopne
call
lock
dec
loopne
pop
mov
add
fwait
std
imull
jmp
inc
push
mov
aad
cmpsb
dec
jno
mov
stc
add
popf
add
icebp
sbb
mov
add
jg
cmp
cmp
or
add
into
push
mov
and
loop
loop
xor
mov
out
jg
dec
xchg
gs
mov
cmp
mov
lds
mov
mov
jg
add
or
push
mov
mov
xor
sub
lahf
mov
ljmp
test
sarb
cltd
sub
shlb
add
sub
inc
push
or
push
push
lods
lcall
scas
cwtl
lea
push
lret
femms
aad
lret
dec
xchg
ret
aam
loop
loope
inc
shl
lods
push
jae
clc
or
mov
mov
mov
xchg
jge
aad
stc
cmp
mov
xchg
mov
notl
gs
ret
sub
sbb
or
das
push
dec
inc
dec
fmull
jmp
test
push
fwait
nop
xchg
push
cmpsb
out
repnz
xchg
jno
neg
fsts
cmp
cmp
out
mov
shl
les
cmp
jmp
cmp
mov
jge
jge
jge
int
loope
sti
xor
je
sbb
adc
std
cmc
mov
push
test
cs
adc
punpckhdq
data16
xchg
test
inc
test
add
adc
xchg
int
popa
cmp
jo
xchg
push
setne
dec
jb
mov
xchg
cmp
or
sbb
cmp
cltd
dec
add
aad
loope
loope
mov
out
jecxz
repz
mov
in
push
jae
stc
xchg
adc
jne
jg
in
leave
ss
jmp
mov
pop
sbb
loopne
pop
xlat
jmp
mov
push
push
addr16
xchg
pop
and
cmp
rolb
mov
cmp
lea
lea
xchg
in
mov
ljmp
mov
jecxz
jmp
xchg
cmc
mov
dec
pop
add
adc
daa
jbe
enter
sub
mov
adc
mov
xlat
outsl
repnz
cli
repnz
and
out
push
adc
mov
in
ljmp
out
mov
dec
sbb
jmp
rcr
fisttps
fisubrs
or
sub
mov
idivl
lcall
int
mov
out
icebp
jnp
fs
movsl
scas
sub
add
cmp
dec
ret
xor
in
or
cmc
xchg
xor
lret
les
les
rcrl
int
mov
jp
arpl
inc
aad
js
pop
or
jmp
daa
cmp
xchg
adc
jae
std
fistpll
fcoml
or
stos
pop
xchg
xchg
sti
jp
jecxz
lods
daa
icebp
xchg
lret
adc
movsb
stc
scas
dec
or
fdivr
into
in
leave
fcmovne
cmc
jg
fldenv
mov
ret
pop
cmp
dec
xchg
test
fsubrl
pop
negb
jb
dec
in
lret
cwtl
push
jp
push
int
shlb
sti
dec
test
mov
push
push
or
lea
ljmp
cli
pop
sbb
cmc
fwait
dec
sub
xchg
sub
inc
add
sub
shl
xor
add
cmc
sbb
mov
cmpsl
push
test
imul
fisttpl
in
push
inc
inc
ret
mov
and
lods
mov
xor
stos
lcall
mov
adc
clc
dec
jmp
pop
pop
inc
test
cmc
or
not
fidivs
cmp
mov
jbe
pop
add
cli
mov
in
mov
sti
jnp
inc
or
stc
xchg
push
xchg
pop
jl
push
int
test
rolb
out
in
cmc
xchg
cmp
negl
frstor
les
xchg
and
movsl
jnp
scas
sbb
ss
sub
into
or
loope
cli
sub
popf
mov
std
dec
and
cmovge
add
sub
leave
mov
jecxz
sub
mov
stos
jp
notb
pushf
add
ja
jecxz
adc
mov
ficoml
cmc
shl
stos
adc
movsl
ljmp
and
push
xorl
cmpsb
ljmp
jmp
mov
pop
mov
sub
xchg
decl
lock
sbb
shl
mov
cmp
inc
loope
test
hlt
jecxz
sarb
aad
adcl
adc
jl
in
test
les
cmc
fistpll
icebp
cmp
push
mov
addr16
cmc
xchg
mov
mov
in
call
int
sbb
rcl
push
adc
into
fsubs
orl
mov
pop
sub
add
mov
push
mov
mov
or
rclb
jmp
inc
fwait
xchg
divl
push
in
add
stos
aas
xor
sub
addr16
mov
jl
inc
iret
xlat
sub
mov
push
jl
int
pop
call
pop
int
in
push
popf
cld
jne
adc
cwtl
in
mov
xchg
cmpsb
jmp
or
or
clc
add
inc
mov
sbb
push
pop
sahf
dec
dec
cmc
or
mov
sti
loopne
cld
jo
or
stos
leave
xchg
add
push
add
imulb
mov
fisubrl
out
insl
jnp
imul
cmc
nop
inc
insl
sub
mov
std
sbb
ret
pop
rcl
shlb
inc
xchg
and
aad
mov
scas
push
inc
sti
sub
scas
fidivrl
mov
dec
adc
jnp
stos
loopne
mov
and
lret
xor
mov
addr16
imul
or
cmp
sub
and
dec
push
add
cli
and
popf
sbb
jae
sub
cmpsb
xor
les
or
loope
mov
lods
sub
je
inc
ja
in
push
jecxz
repnz
int
xchg
sbb
cmpsb
jnp
or
jo
push
movsb
hlt
fbld
mov
scas
lods
adc
or
psadbw
stos
std
dec
scas
cld
dec
mov
or
cmp
jns
fs
pushl
sahf
aam
xchg
int3
cmp
pop
lret
aaa
mov
mov
fidivs
push
aam
fdivp
hlt
xchg
jge,pt
fcompl
xchg
or
aad
mov
sub
xlat
hlt
jl
or
cltd
jecxz
ljmp
rolb
xchg
cmp
fistl
dec
xchg
dec
xchg
sbb
cwtl
icebp
loop
or
sub
xchg
jo
dec
or
popf
push
sbbl
sub
repz
lret
jo
pop
cmp
int
rcll
pop
shlb
sbb
out
xchg
gs
outsl
adc
cmp
ficomps
pop
in
repz
addr16
ret
sub
lods
and
arpl
pop
push
inc
sub
xchg
push
loop
sub
jbe
dec
popf
mov
sbb
inc
cmp
in
xor
enter
adc
pop
test
shll
inc
xor
mov
aam
out
adc
cmp
push
js
icebp
icebp
dec
dec
mov
mov
xor
fs
lahf
movl
insl
popf
cld
jmp
in
xor
call
or
xor
aad
jns
cmpsl
mov
movsb
pop
sub
xor
xchg
cmp
xchg
outsb
sub
pop
cli
adc
pop
mov
pushf
into
cmpsb
xor
mov
pop
add
repnz
jnp
push
jns
gs
mov
js
jnp
pop
aaa
test
xchg
jp
pop
xlat
sahf
idivl
loop
push
dec
in
sbb
dec
jl
cmp
or
scas
nop
loop
xchg
xchg
dec
adc
sbb
pop
cli
xor
pop
dec
pop
mov
mov
sahf
sbb
or
cmp
loop
repz
test
test
movsl
out
or
cltd
mov
jle
xor
popf
js
ret
mov
pop
cmpsb
jl
jo
les
cwtl
loop
imul
mov
outsl
push
xor
pop
into
mov
ja
hlt
popa
fdivrl
jp
fistpll
repnz
push
sahf
bound
je
out
loopne
mov
out
aad
mov
push
pop
dec
test
inc
sub
push
stos
pop
in
or
mov
scas
mov
pusha
inc
rolb
fdiv
mov
in
clc
mov
add
mov
or
jl
rorb
mov
xor
fbld
jnp
mov
data16
mov
mov
or
aaa
dec
stos
mov
popa
mov
dec
ja
jmp
cmp
jbe
rcrl
xor
js
gs
rcr
pop
loop
cmp
push
es
jp
sub
mov
xor
pusha
ljmp
lcall
sub
shrl
add
mov
arpl
repnz
jmp
lods
push
imul
or
and
pop
cmp
adc
fs
mov
xor
sbb
sub
cmp
pop
cld
mov
aas
sbb
adc
jl
pushf
call
int3
iret
aad
jle
sub
rolb
andb
cltd
adc
pop
mov
jmp
les
add
xchg
add
ss
aad
fidivrs
jmp
cmpsb
mov
or
fmuls
mov
dec
cltd
pmulhuw
addr16
jmp
mov
lods
das
insb
adc
loope
lock
jg
enter
in
fs
in
int3
push
jne
cli
out
dec
inc
adc
mov
cld
imul
popf
push
and
cmp
nop
push
dec
aad
push
mov
ja
cwtl
xchg
outsl
xor
dec
stc
call
or
add
xchg
lods
push
dec
sbb
mov
mov
shrb
jge
push
ss
ljmp
popf
ja
sbb
push
mov
pop
mov
adc
cmpl
mov
pop
and
mov
pop
fwait
sub
or
jne
pop
call
cli
mov
arpl
testl
xlat
jno
xor
and
cmc
jne
inc
lcall
mov
jo
sahf
aad
lahf
fldenv
inc
jnp
lcall
add
mov
ss
xchg
push
insb
dec
ret
adc
fsubl
cld
dec
mov
dec
dec
fwait
mov
or
sub
aam
into
call
mov
push
lds
mov
pop
or
inc
repz
hlt
and
cmpsb
cmp
adc
lods
bswap
insb
ss
mov
fnstsw
jb
add
mull
call
and
bound
aaa
and
xchg
lea
sub
jg
pushf
adc
xchg
aad
sbb
cmc
pand
cmp
pop
ret
sub
sti
sub
sbb
int3
cltd
xchg
push
fmull
aam
adc
push
leave
push
int
and
and
mov
xor
add
push
mov
jp
lret
cltd
aad
xchg
xlat
adc
cs
or
inc
sbb
push
inc
jbe
ljmp
mov
sub
sub
mov
xchg
movsl
insl
cmp
sbb
imul
punpckhdq
repnz
pop
push
sbb
mov
mov
cmpsb
inc
rorl
dec
test
sub
je
mov
adc
or
fbld
jmp
xchg
mov
jmp
or
push
out
fnstenv
jnp
daa
fildll
popa
sub
adc
sti
lods
mov
call
aad
dec
or
loopne
scas
add
jl
add
sti
bound
inc
aam
or
nop
xchg
push
icebp
int
leave
cwtl
mov
enter
cmp
xchg
mov
jmp
ret
mov
jo
sti
jmp
or
dec
out
mov
pusha
loope
sbb
push
clts
int
divb
mov
mov
shll
and
mov
aad
inc
and
xor
inc
sub
xchg
movsl
repnz
arpl
and
sti
pop
cld
decl
jne
and
jmp
sub
fwait
mov
xchg
jo
sti
scas
xchg
cli
into
pusha
out
push
or
add
or
std
sbb
xchg
out
mov
test
in
mov
into
dec
outsb
and
iret
push
mov
aad
add
scas
push
push
push
cld
pop
shrl
mov
js
mov
out
jae
jbe
xor
adc
nop
jle
add
sbb
jbe
inc
scas
pop
mov
or
sub
lods
and
shlb
dec
push
jb
sub
cmp
arpl
int
xor
aad
cmp
pop
stc
dec
leave
repz
jg
mov
insb
jb
int
mov
lods
mov
jg
mov
cmp
lcall
incb
jbe
dec
jmp
lock
push
or
cmc
in
add
inc
outsl
je
mov
mov
xchg
inc
push
add
pushf
jl
movsl
push
ja
nop
fistpll
xor
fsubrp
data16
or
pop
into
dec
jns
arpl
cmp
into
cmp
xchg
push
lea
testl
inc
and
fs
lods
inc
test
lea
andl
push
std
jecxz
push
mov
push
pop
dec
dec
test
lcall
cmc
jl
dec
jbe
in
sub
adc
roll
mov
or
nop
lds
cmp
xor
mov
scas
loopne
nop
mov
scas
or
pop
popa
aad
sub
adc
inc
iret
aas
sub
inc
sti
in
sbb
add
pop
out
mov
push
int3
adc
inc
xchg
adc
in
sub
enter
sub
insb
aad
dec
fcomip
lods
adc
xchg
push
add
lahf
dec
jecxz
out
or
cmp
or
test
mov
mov
decb
sub
jp
enter
xchg
dec
lcall
jbe
mov
mov
and
sarb
add
in
inc
inc
jbe
sarb
lret
lahf
loopne
scas
lahf
or
xlat
push
xor
and
and
and
dec
adc
push
out
and
mov
push
aad
mov
sub
jge
mov
into
loope
sti
mov
out
lods
or
pushf
iret
loopne
and
pop
jecxz
outsb
popa
lock
or
add
es
cmp
jmp
jmp
jmp
mov
and
or
lret
ficomps
out
push
inc
adc
lds
sub
inc
leave
jns
lods
pop
cmp
pop
sbb
das
inc
mov
fnstsw
shr
fildll
loope
xchg
mov
dec
mov
mov
daa
int
and
outsl
xchg
adc
mov
cli
xlat
paddusw
int3
pop
ja
fisubrl
hlt
std
lea
call
into
dec
inc
push
sbb
jp
lcall
fcomps
rclb
sub
sahf
loopne
in
int
jae
shlb
pop
lcall
loope
shll
out
add
hlt
pushl
jns
jmp
loope
fimuls
xor
mov
jecxz
push
xchg
sbb
mov
mov
stos
popa
jecxz
push
in
mov
push
in
xchg
in
ret
test
sarb
iret
pusha
aad
pop
jae
scas
add
inc
fildl
movsb
mov
push
in
shll
cld
push
mov
rcl
test
cmp
decb
add
fs
push
enter
daa
cmp
iret
jmp
xchg
or
cmc
cmpsl
lods
push
push
and
dec
jno
and
testl
jmp
mov
out
mov
mov
nop
push
mov
test
xlat
out
xchg
pushf
outsb
add
das
int
pusha
data16
mov
jmp
push
stos
daa
fs
inc
fs
stos
add
mov
enter
lea
loopne
or
cli
jns
aad
popf
or
mov
jae
cld
pcmpeqd
dec
jge
mov
movsl
or
call
insb
loope
les
or
push
daa
test
sbbb
fmull
ljmp
mov
scas
or
pusha
adc
movsb
jbe
jmp
std
int3
aad
pcmpgtw
test
mov
jo
jne
inc
xchg
jmp
pop
and
inc
add
insl
incl
pushf
jecxz
or
dec
push
cs
scas
mov
mov
dec
adc
sar
mov
pop
pop
jo
imul
and
add
mulb
scas
or
lcall
std
xor
mov
mov
xchg
add
lods
sub
cmp
and
cmc
stc
pop
fisttps
ljmp
xor
adc
icebp
jge
shrl
push
stos
lds
push
sbbb
lock
and
mov
mov
jnp
subl
ss
add
js
jmp
popf
mov
scas
or
jo
dec
xrelease
sbb
nop
out
mov
aaa
into
repz
push
dec
adc
cmc
rcrb
int
lods
dec
das
xor
adc
jae
mov
adc
pop
decl
scas
and
and
test
js
lods
call
or
adc
movb
ss
lock
sti
xchg
mov
cmpsb
or
mov
out
sub
or
dec
cs
cwtl
cmp
and
jnp
leave
fimull
into
fdivrl
aam
outsl
fs
xor
push
pop
push
lock
clc
push
fstpt
mov
mov
push
je
or
mov
mov
or
cmc
jno
or
popf
or
or
push
mov
xlat
mov
cmp
xchg
jp
xchg
xchg
mov
adc
inc
cwtl
push
icebp
je
les
test
push
mov
jae
jge
flds
fcmove
pop
jl
out
aaa
jns
fistps
lods
dec
scas
sbb
adc
andl
gs
jmp
adc
cmp
aad
cwtl
xchg
addb
mov
aaa
sub
outsb
imul
sbb
jns
in
ljmp
jns
enter
lds
mov
addr16
xchg
push
mov
fldl
stos
inc
sahf
rcl
push
push
out
ds
sbb
dec
sub
mov
sub
fisubs
in
or
loopne
out
pop
ret
es
call
inc
push
mov
ret
out
das
cli
int3
add
push
lods
add
pop
hlt
mov
popa
call
or
arpl
enter
mov
lea
pop
aad
lods
or
xchg
cmp
add
pop
pop
inc
sbb
mul
popa
stos
pop
fnstcw
outsl
dec
into
arpl
loope
mov
fsts
adc
test
mov
ljmp
and
add
jo
sti
mov
and
out
push
adc
ds
sub
jp
and
mov
xor
aam
inc
mov
test
and
test
pop
push
cmp
in
js
or
dec
imul
push
push
mov
lock
push
push
faddl
in
insb
dec
in
cmc
sub
int
xor
bound
xrelease
loop
dec
cwtl
or
mov
inc
ror
out
jnp
in
pop
push
rorb
test
stos
pop
dec
out
mov
aad
cld
scas
lret
fcoml
into
mov
xor
movsb
cwtl
jmp
xchg
push
js
in
shr
int3
inc
outsl
pop
mov
icebp
les
cmp
mov
push
adc
jns
test
cmc
mov
push
in
aas
xlat
inc
stos
mov
cmc
lock
std
pushf
outsl
and
sbb
and
cmp
bound
aam
and
lds
idiv
out
jmp
lea
mov
lahf
mov
dec
and
or
out
mov
cmp
into
jns
jge
push
sbb
js
and
mov
add
fisttps
and
xchg
out
scas
or
hlt
mov
in
push
or
add
cmp
lahf
mov
mov
popaw
aas
out
orl
clc
cmp
ror
sub
inc
scas
adc
mov
aam
shlb
adc
mov
sub
mov
pop
mov
mov
mov
int
mov
sbb
jp
outsl
inc
stos
pusha
iret
sub
in
jne
cmpsb
inc
adc
jne
and
push
dec
cwtl
fcom
aad
mov
mov
jecxz
or
data16
cmc
xor
mov
cmp
xchg
push
outsl
aad
lret
fnstsw
imul
sarl
push
scas
mov
inc
iret
dec
lods
pusha
das
sbb
nop
jns
dec
cmc
dec
pop
fildll
mov
push
mov
xchg
fcmovnu
push
mov
mov
jmp
mov
lcall
jl
call
mov
xchg
jno
call
or
rcrb
neg
sbb
movsl
stc
dec
shrb
cmp
sti
cmp
int3
imul
iret
jb
jl
imul
mov
sbb
jg
insl
jns
insb
push
pushf
xchg
or
mov
test
insl
sbb
imul
fwait
xchg
addl
test
cli
xor
aaa
pusha
xlat
add
add
pop
mov
cld
push
sarl
in
xor
inc
lret
fs
jmp
inc
rcl
xchg
mov
xor
int
xchg
lahf
or
add
lds
mov
imul
js
jle
sbb
jg
test
scas
repnz
fwait
push
or
popf
fcomps
rcrl
and
sub
shld
ds
in
bound
or
or
icebp
mul
mov
dec
lahf
popf
or
push
jecxz
push
cli
fcoml
dec
xchg
movups
add
push
add
cmp
dec
lock
leave
or
cmp
aad
mov
in
inc
pusha
xchg
cli
nop
loop
cld
das
or
sub
push
fsubrp
cld
add
pop
adcb
jecxz
dec
lods
loope
add
popf
sti
dec
std
shlb
data16
mov
inc
aad
pop
jb
or
stos
scas
xchg
xor
aad
sub
add
mov
dec
mov
mov
jg
cmpsb
ljmp
int
lods
mov
xchg
sbb
mov
cmp
xchg
xlat
in
cld
sub
cmpsb
jnp
subb
inc
xchg
cmc
fistpl
jno
xor
bound
xlat
stc
cmp
and
fstl
out
pop
mov
popa
jg
mov
sub
lods
mov
and
aas
int
lods
jl
sbb
cli
and
scas
stos
cmp
int
mov
fldt
iret
sti
popa
ja
call
lcall
jg
lahf
cmpsl
jecxz
lretw
les
push
lds
dec
push
jno
cmp
mov
js
test
out
pop
aad
icebp
xor
neg
inc
or
sbb
inc
rcrb
cmp
pop
mov
movsb
ret
sbb
out
movsb
jb
dec
out
push
jmp
xchg
stc
or
mov
js
mov
lret
in
std
in
adc
push
iret
popa
and
cmc
js
shlb
in
shrl
cmp
es
adc
call
pop
dec
sub
mov
aad
mov
add
or
popa
pop
add
inc
cmp
push
je
out
in
adc
fstps
aad
repnz
xchg
jl
icebp
jl
in
fs
jae
pusha
insl
jp
cmc
sarl
jb
inc
repz
pop
xchg
int3
inc
ffreep
pop
aad
mov
fidivs
sbb
je
fcomp
mov
dec
test
mov
xchg
cmc
mov
jg
inc
inc
rep
stos
xor
sbb
mov
or
or
ljmp
cmp
loope
pop
mov
xchg
xchg
lret
cmp
pop
pop
addb
mov
pop
pop
mov
dec
pop
ss
mov
movsl
shrb
call
int3
mov
adc
popa
push
arpl
dec
cmp
push
add
outsb
jb
or
pop
push
mov
sbb
sbb
call
lret
cs
jb
das
dec
or
andl
out
inc
paddsw
xlat
scas
js
lods
fnstenv
push
cmp
inc
push
xchg
mov
pop
xchg
call
xchg
cwtl
mov
scas
icebp
pusha
or
cmp
xor
stc
orb
pushf
mov
shrb
sub
sti
add
icebp
cmp
loop
in
repz
xchg
and
lret
mov
fmuls
or
or
inc
mov
push
sti
stos
movsl
lods
mov
leave
imul
mov
mov
inc
scas
fldpi
and
jns
add
jae
xchg
les
xor
xchg
xlat
push
das
jmp
mov
js
cmp
imul
jp
cmc
cltd
dec
push
mov
dec
push
cmp
gs
pop
stos
pop
and
sub
jecxz
test
sub
int
xchg
push
add
out
jmp
mov
pusha
mov
sub
inc
out
es
nop
cmp
jg
dec
jbe
lods
shlb
das
aad
ds
push
lods
data16
int
filds
xchg
pop
cmp
dec
sub
fcmovbe
ds
xchg
fisttpl
popa
in
push
fisttpl
mov
lcall
into
int3
icebp
mov
inc
xchg
scas
jmp
or
xor
sub
and
jne
mov
xchg
and
cmpsl
out
mov
out
pushl
std
and
mov
popa
data16
pusha
inc
pop
test
jmp
inc
leave
add
fistpll
addr16
addr16
jb
adc
int
iret
sub
and
adc
push
cmp
fcoms
clc
out
push
addl
fwait
adc
cmp
lret
sub
mov
and
cmp
out
mov
ss
mov
mov
and
scas
mov
add
arpl
adc
std
push
add
pop
mov
test
aad
cli
daa
dec
stos
xor
and
nop
inc
addr16
cmc
data16
jmp
popa
push
jb
mov
enter
push
cli
fidivs
vmwrite
or
mov
mov
or
das
jp
aad
add
test
xacquire
sbb
sahf
mov
xchg
test
cmp
jmp
xchg
orb
and
sub
xchg
int
mov
daa
lods
dec
and
push
fisttpll
adc
cmp
cltd
push
mov
sub
mov
mov
push
or
mov
lods
iret
cmp
xlat
scas
fsubr
mov
dec
push
jne
clc
cld
es
or
add
lea
mov
xchg
add
int
push
add
loopne
mov
int3
adc
mov
dec
js
push
stos
mov
hlt
mov
out
pop
mov
dec
aad
jge
push
clc
push
mov
in
js
sti
dec
jnp
outsl
es
std
sbb
pop
or
nop
aad
shlb
cmc
and
sbb
loope,pn
jl
add
xchg
rcll
mov
add
test
sbb
sub
jne
push
and
jge
ss
inc
xor
sti
jno
divl
and
adc
sbb
mov
sbb
xor
adc
jmp
sti
lea
adc
push
mov
sbb
movsl
sbb
cwtl
sbb
pop
push
ss
xchg
mov
arpl
movsl
inc
cli
inc
lods
and
out
mov
mov
insl
jle
mov
dec
fistpl
mov
mov
mov
dec
inc
out
cmp
sbb
push
cmp
stos
test
cmc
lea
fnstcw
add
aad
cmp
adc
andl
jb
xor
cmp
or
shl
jmp
in
fs
jb
repz
out
jg
loop
cwtl
xchg
push
testl
das
imul
in
or
cmp
in
lret
inc
cmp
stos
or
cmp
mov
orl
shrb
push
flds
xchg
xchg
jnp
aam
cli
mov
cmp
cmp
inc
jb
loope
subl
adc
add
sub
mov
jmp
call
cs
inc
inc
das
push
cmc
cmp
std
in
add
repz
shrl
xchg
jge
sub
inc
jnp
outsl
mov
je
shl
mov
mov
sub
cmpsl
xchg
cmp
lret
lret
mov
mov
or
mov
cmp
pop
or
ja
sbb
rolb
mov
push
cmp
movsb
or
rolb
bound
xchg
dec
lods
and
mov
scas
addr16
mov
iret
or
and
outsl
jmp
mov
xor
cmc
mov
mov
int
add
arpl
outsl
adc
stos
mov
push
pop
mov
mull
rorl
call
sub
into
push
aad
or
and
mov
sbb
jns
jbe
outsl
push
test
push
add
in
sub
mov
movsb
cmpsl
out
xchg
addl
idivb
mov
sahf
pusha
xchg
icebp
cmp
in
xchg
pop
or
jge
loopne
jl
repz
lods
push
sub
sub
cmp
lahf
insl
fcomi
and
aam
push
out
xchg
dec
js
into
or
clc
out
arpl
jbe
jmp
sub
dec
addr16
js
enter
scas
repnz
add
into
jmp
cli
loopne
push
push
repz
xor
pusha
ret
mov
fisubs
lcall
dec
jp
push
outsl
sub
stc
mov
xchg
aas
lcall
in
mov
divl
stos
pop
mov
outsl
xor
xchg
adc
mov
pop
out
dec
loope
mov
aad
jne
push
outsb
clc
testl
mov
jmp
mov
test
sub
in
mov
xchg
into
lret
icebp
fisubrl
call
test
jle
xchg
icebp
pop
scas
iret
movsb
inc
aad
xor
xor
inc
push
or
dec
mov
mov
lcall
popa
std
je
adc
and
test
push
testl
sub
fidivrs
fimuls
call
dec
jo
mov
in
je
lcall
popf
jnp
imul
mov
mov
mul
xor
daa
movsb
adc
mov
fists
pop
in
adc
add
aad
and
mov
dec
addb
mov
fs
idivl
hlt
outsb
mov
movsb
out
add
idivb
out
sub
test
notl
xchg
mov
je
lret
std
jae
sub
xor
movq
mov
jne
nop
cltd
inc
imul
es
pusha
cmp
pop
int
add
pop
das
jg
dec
jnp
cmp
pop
ficomps
out
mov
jecxz
enter
jo
dec
or
bswap
sub
mov
cli
lods
adc
and
inc
xchg
or
cli
xor
dec
xchg
mov
and
push
test
aam
or
test
add
insb
push
mov
gs
mov
pop
jle
lea
mov
or
js
cld
cmp
xchg
xchg
sub
sti
test
ljmp
stc
out
dec
jecxz
stos
sbb
mov
and
popa
or
add
inc
adc
clc
js
lcall
xchg
jb
jge
mov
rcr
ss
imull
push
xchg
or
push
je
aad
dec
jno
test
loopne
ja
out
lods
mov
xchg
mov
fdivr
shrb
aad
sbb
jmp
inc
psrlq
and
pusha
jne
jnp
sahf
call
aad
sub
push
xchg
jp
int
cmp
mov
and
fs
int
rcr
jl
pop
pop
outsl
imul
inc
mov
fs
and
inc
lret
std
mov
imul
sub
xchg
fistpl
ret
aaa
shrb
je
push
loop
pop
fs
leave
sub
adc
lods
xor
in
push
and
or
jo
lahf
lahf
xchg
push
xchg
int3
mov
cwtl
xor
push
testb
cmc
pop
mov
leave
loop
push
xchg
add
push
ss
sahf
xlat
lea
mov
test
xchg
fdiv
fwait
mov
sbb
or
aad
rolb
data16
inc
mov
cli
mov
push
lods
cmpsb
cmc
lock
add
mov
insl
inc
xor
cmp
nop
lahf
idivb
mov
call
or
mov
and
rcll
repnz
sti
push
jle,pn
leave
rclb
and
cltd
int3
shrl
and
xchg
in
not
lods
stos
push
mov
fistps
bound
cltd
mov
test
mov
dec
mov
push
arpl
aas
dec
push
cmp
test
lret
sub
test
pop
int
dec
inc
jl
or
addl
sbb
jecxz
dec
pushf
sbb
mov
outsb
inc
fisttpll
and
xchg
mov
dec
dec
loopew
fistpll
mov
or
in
push
test
sub
add
popa
test
sub
dec
rolb
cmp
jg
rclb
xchg
in
or
loopne
popa
jl
jbe
bound
add
jns
loope
add
in
cmc
sbb
loop
pop
repz
or
lret
out
xchg
add
xchg
mov
cwtl
or
mov
and
jge
std
pop
testb
cmp
into
js
maskmovq
cmc
ja
addr16
and
fisubl
pop
ss
arpl
mov
pusha
cmp
popf
mov
out
sarl
add
xchg
cmc
test
mov
and
push
fistpl
push
loopne
test
mov
adc
popf
lahf
pusha
shlb
test
scas
outsl
insb
test
push
fldl
sbb
aad
and
bswap
lahf
sti
xchg
and
cmp
sub
and
das
add
loope
popf
xchg
fs
mov
int
add
out
add
cmc
xlat
in
xchg
nop
icebp
aaa
jecxz
and
testb
popa
sub
out
sub
lcall
bound
data16
and
xchg
scas
inc
mov
or
xor
jmp
leave
add
and
sub
ds
mov
into
add
gs
cld
aaa
or
lods
test
cmp
cmp
sbb
sub
scas
mov
repnz
xchg
sub
call
cmp
sbb
pop
out
push
rcl
fistl
divb
push
push
dec
std
xor
imul
push
repz
int3
rclb
dec
xor
in
xchg
pusha
xchg
ja
add
jmp
cmp
mov
sti
jns
outsb
fldenv
and
das
movsb
shrl
jg
inc
add
outsl
pusha
cmp
mov
xchg
cwtl
xchg
lods
in
repnz
cmp
mov
and
xchg
xor
cmc
mov
push
fs
enter
movb
sub
dec
mov
jecxz
test
out
out
test
fstpl
lock
loope
iret
fisubl
push
dec
push
dec
leave
outsl
add
mov
imul
jle
pop
sub
orb
inc
nop
and
mov
iret
loope
sbb
jecxz
stos
std
test
insb
lods
cmp
gs
inc
pop
mov
hlt
imul
iret
faddl
test
mov
cmovge
jb
hlt
mov
in
enter
cltd
out
cmp
jns
mov
sti
jmp
popf
xchg
iret
scas
aaa
mov
adc
loope
xchg
mov
ljmp
push
inc
add
test
cmp
jbe
or
dec
fildl
aad
stos
push
xchg
mov
aad
push
lcall
icebp
xchg
mov
pop
ja
mov
jno
stc
add
and
jnp
dec
and
stos
popa
pop
sub
sbb
sbb
bound
aad
nop
cltd
xchg
pop
push
inc
fsubl
push
out
popf
and
int
push
scas
jno
cld
add
dec
mov
aad
scas
jnp
enter
xor
or
sbb
loopne
jmp
cmp
push
sbb
adc
push
and
iret
rorb
mov
mov
test
push
lods
or
xor
xor
mov
dec
cmp
add
pop
lret
popa
movsl
adc
loop
lods
movsb
cwtl
cltd
add
mov
jo
mov
and
in
mov
pushf
mov
sub
ss
add
pop
inc
lods
jns
stos
mov
jno
ja
shll
sub
jbe
add
or
push
or
rorb
mov
cmp
gs
addr16
fstl
insl
in
popf
scas
out
mov
sub
adc
fimuls
movl
loope
scas
add
nop
icebp
lods
cs
xlat
adcl
fildll
inc
xchg
cli
mov
pusha
cmp
jmp
adc
outsb
into
je
push
push
jge
outsb
pusha
test
lds
int
mov
sbb
les
je
roll
push
out
dec
mov
xchg
cmc
shrb
jnp
lahf
dec
xchg
pop
out
sbb
outsl
xor
insb
int3
xor
out
mov
push
ds
sahf
andb
aas
pop
cld
mov
int
mov
cmpsl
or
jbe
inc
mov
dec
xor
nop
pop
jl
mov
xchg
add
repnz
dec
jno
and
mul
pop
jg
jnp
fisttps
divl
imul
sub
rorl
stos
lahf
mov
mov
push
adc
int
mov
xchg
sub
pop
or
cs
mov
push
sbb
addr16
call
int3
scas
xchg
fnsave
push
mov
cld
xor
idiv
mov
xchg
pop
inc
ljmp
push
imul
sub
xchg
adc
ret
inc
bound
lods
arpl
push
test
mov
mov
add
pop
out
sub
mov
mov
arpl
lock
divb
aam
jmp
push
jg
sbb
cwtl
popa
pushf
jge
dec
xchg
lods
mov
pusha
ja
enter
aad
inc
mov
fcompl
xor
jb
cmc
rorl
dec
into
push
mov
or
mov
adc
mov
pusha
xor
addr16
cmc
cmp
push
cmp
enter
fwait
sub
pop
loop
add
pop
mov
mov
or
jne
gs
in
lods
pusha
inc
in
fwait
dec
das
or
loope
mov
xor
mov
mov
cmp
loopne
sub
dec
xchg
bound
lcall
repnz
push
movsb
or
movsl
push
scas
cld
fldcw
add
mov
subb
imul
xlat
int3
ret
push
jp
les
lods
gs
std
stos
inc
cmp
inc
imul
mov
js
pop
jno
mov
push
fs
ficompl
leave
jge
movsb
and
jg
pop
xchg
out
push
xor
mov
into
mov
pop
aad
aam
popl
xor
sub
ss
mov
sub
movsl
cld
call
adc
lock
das
out
out
lods
or
cmp
xor
mov
popa
or
pop
out
and
sti
test
jns
int
adc
cmpsb
xchg
adcl
pop
fidivs
es
shld
pop
xlat
cltd
fs
mov
test
addr16
call
and
dec
stos
push
push
inc
jno
rclb
andb
gs
aad
aaa
cmp
adc
mov
lahf
adc
push
xchg
cs
cmp
or
mov
jge
and
jge
sbb
mov
pop
pop
adc
cltd
adc
jp
fs
xchg
sahf
pushf
cmp
int3
aaa
mov
xchg
or
ficoml
das
sti
push
cvttps2pi
push
gs
push
or
push
xchg
loope
sbb
inc
mov
mov
jmp
andl
stos
repnz
adc
or
aad
out
xor
inc
outsl
jl
int
lea
rorl
push
jecxz
movl
imul
mov
push
push
stos
jb
mov
cmp
inc
mov
clc
push
cmp
jmp
sub
xchg
fs
mov
sbb
cltd
sub
cli
stc
push
fiaddl
pmaddwd
jae
loope
dec
jnp
adc
sub
out
mov
out
xor
mov
mov
push
adc
call
lods
sub
fisttpll
jecxz
into
mov
or
inc
dec
fdivrl
js
mov
loope
dec
mov
cmp
pusha
add
mov
sbb
cmpsb
push
push
cld
inc
inc
mov
popf
xor
std
cmc
lret
dec
xchg
mov
decl
xchg
cs
and
in
int
js
cmp
inc
out
mov
pop
mov
xchg
sub
pop
hlt
paddsb
loope
pusha
mov
xchg
pop
push
fisubl
inc
cmpsb
or
or
mov
fwait
ja
test
cld
add
mov
call
lods
iret
outsb
jl
push
inc
dec
fnsave
std
pop
jbe
xchg
shlb
insl
mov
add
cmp
mov
rorb
loop
rorb
or
sbb
dec
data16
push
cltd
inc
mov
sbb
and
cmp
sbb
cmc
sub
xchg
inc
and
je
push
fidivrl
jne
bound
mov
mov
pop
cmp
cs
hlt
mov
or
cmp
adc
mov
xor
imul
xchg
cmp
xor
xlat
fnstcw
popa
push
jno
mov
out
or
sbb
inc
js
add
and
fidivrs
pop
adc
ret
test
out
mov
jmp
stc
outsb
dec
dec
jmp
lock
addr16
popa
scas
mov
lahf
mov
or
int3
sarl
call
sub
data16
stos
setne
inc
push
aad
stc
pusha
jp
sbb
inc
arpl
add
sub
xchg
int
mov
popa
inc
sarl
inc
dec
or
dec
adc
inc
xchg
mov
adc
arpl
cmc
sub
cld
and
dec
sub
jnp
mov
cli
scas
lock
adc
jp
icebp
mov
das
decl
inc
testb
repz
push
push
pop
imul
insl
jg
cmpsb
js
mov
pushl
mov
mov
jle
mov
pop
aas
push
cmp
loop
jbe
adc
hlt
aas
mov
inc
push
add
xchg
stos
shrl
dec
in
incb
loopne
jb
cs
inc
push
sbb
lcall
xor
add
das
jo
sub
xchg
adc
jnp
divl
sahf
xchg
imul
std
dec
mov
aad
mov
mov
fldt
fisubrl
fiadds
cmp
cmpsb
aam
notl
in
jg
mov
xchg
mov
fimuls
xor
cmp
sbb
popa
push
add
xlat
insb
jnp
or
fbld
mov
test
ds
push
push
rolb
sbb
aam
movsb
xchg
sub
scas
push
sub
xchg
fistpll
paddw
inc
gs
sbb
cmc
cmp
jae
dec
jne
movsl
mov
pushf
int
push
lahf
mov
pop
mov
push
addr16
xor
or
xchg
add
imul
jp
mov
insb
mov
lods
dec
cwtl
testb
loop
push
push
rolb
sub
test
scas
loope
and
iret
push
push
mov
out
imul
mov
jnp
fistl
and
xchg
ss
scas
mov
and
lock
cmove
mov
cli
cmc
and
in
outsb
mov
jge
add
pop
push
dec
mov
cs
scas
and
pop
xchg
cs
jge
data16
mov
les
fs
mov
stc
inc
fwait
jns
testl
imul
enter
add
lods
das
sarb
ja
sbb
push
or
xor
pop
and
inc
cld
data16
les
mull
jp
adc
les
dec
sbb
scas
xchg
gs
or
lock
cs
mov
pop
daa
dec
ret
or
out
xchg
jmp
sub
cmc
push
addb
push
shll
lods
loopne
out
por
mov
cmc
add
sbbl
rorb
add
mov
cmp
push
push
iret
fisubrs
push
imul
cmpsb
push
bswap
or
lock
or
add
fimuls
fcmovne
and
je
ljmp
push
xor
sti
dec
sub
stos
imulb
push
xchg
or
imul
ret
lods
dec
fisubs
std
out
dec
add
stc
cmp
dec
xchg
je
and
ja
jp
mov
sbb
lahf
sbb
inc
out
pop
in
jbe
xchg
xchg
jbe
dec
xchg
and
scas
pop
les
aas
int
or
lods
lret
mov
hlt
lods
lods
adc
inc
decl
xchg
lcall
fiadds
xor
out
aad
ficoml
sarl
std
push
cmp
jle
jnp
or
and
testl
inc
insl
loope
testl
jns
int3
push
insl
xchg
dec
add
aaa
bound
icebp
repnz
in
inc
in
loop
mov
dec
dec
sub
jp
xchg
data16
jnp
mov
loope
pusha
xchg
jne
andb
pxor
push
cmp
inc
push
jecxz
aad
inc
popa
mov
mov
pusha
fists
lret
les
cmc
aam
cmc
int
lcall
cmc
inc
cmp
mov
int3
inc
int3
std
ret
repnz
f2xm1
push
cmp
pusha
add
call
nop
std
and
jnp
in
int3
or
lcall
push
aas
xor
push
shlb
xchg
cmp
sbb
push
adc
adc
adcb
cwtl
dec
push
cmpsb
jl
dec
xchg
rcll
stc
mov
sub
idivl
mov
jge
movsb
insb
lods
std
cwtl
xlat
popa
xchg
pop
fisttpll
or
test
pop
inc
mov
lret
repz
jp
adc
cmc
dec
push
ja
push
bound
or
mov
aad
and
arpl
inc
or
jle
push
pop
int3
dec
or
fadds
sbb
int
loop
sub
clc
jno
cmc
pop
imul
jbe
lahf
or
je
popa
mov
push
aad
mov
movsl
adc
push
inc
mov
je
adc
clc
xchg
inc
fwait
mov
icebp
dec
pop
jnp
aam
or
sub
icebp
mov
and
je
jmp
addr16
ss
mov
stos
mov
iret
jg
aam
cli
in
pop
fimull
mulb
repz
movsb
jp
jmp
loopne
adc
jge
rep
cmc
icebp
ret
mov
xchg
pop
dec
jbe
outsl
clc
pop
iret
push
outsb
mov
adc
sub
fldcw
mov
dec
cltd
mov
inc
fstps
lea
dec
push
stos
add
cmc
test
lcall
dec
pushf
stc
into
inc
or
mov
sbb
lock
scas
mov
sti
push
xor
adc
jmp
jl
add
jnp
cltd
in
dec
mov
add
out
imul
mov
or
xchg
push
pop
mov
sub
out
insb
or
push
lods
out
or
movsl
dec
push
lea
pushaw
pushf
or
jg
dec
fucomi
sub
mov
and
in
xchg
push
or
popa
or
jne
jl
sbb
je
stc
mov
cld
xchg
xlat
dec
xor
inc
jl
xor
mov
push
out
int
popa
les
cmp
fidivrs
jmp
or
outsl
fs
in
jo
mov
cmp
mov
imul
xlat
imul
or
cmp
lods
mov
arpl
push
ret
scas
rcl
call
sub
jo
ljmp
push
sbb
cltd
jl
pop
pop
adc
faddl
sbb
mov
push
or
int3
nop
and
pop
pop
clc
jo
jbe
mov
add
ret
sbb
loop
and
add
out
mov
imulb
pop
push
in
repz
cmp
shlb
xchg
jge
test
push
jmp
push
jnp
mov
adc
and
mov
inc
fs
stos
dec
or
xor
loope
cmp
add
sbb
mov
and
dec
mov
nop
dec
cld
mov
hlt
aad
lock
xchg
cwtl
loope
jge
in
in
sub
mov
lahf
scas
into
xor
aas
jmp
lret
or
dec
push
push
fisttpl
lods
test
cmc
jns
add
push
cmp
sbb
xchg
ret
mov
pop
mov
clc
call
lahf
mov
mov
dec
clc
push
movsb
cmp
addr16
dec
orl
xchg
mov
jle
inc
bound
popf
mov
xlat
ss
stc
sub
jbe
inc
shll
int3
or
aad
scas
into
dec
das
clc
movsb
loop
add
mov
or
jle
out
mov
mov
mov
inc
decl
iret
lods
lods
enter
push
leave
xor
subb
inc
dec
adc
push
push
push
jmp
inc
pushf
adc
push
out
sbb
stc
mov
test
jo
dec
out
push
aaa
sbb
loope
push
jl
mov
into
xchg
jg
or
in
outsb
sub
ja
push
jp
jno
pop
adc
popa
inc
sbb
das
aad
mov
aam
xor
std
sub
jl
xor
stos
icebp
pusha
or
or
dec
aad
outsb
clc
jle
ja
or
aaa
or
xchg
jge
shrl
push
divl
mov
xor
imull
mov
stc
push
shlb
ss
xchg
outsl
ja
nop
or
xchg
cmp
sub
scas
sti
mov
lods
adc
in
add
shl
mov
leave
add
jmp
hlt
or
adc
fistpll
cltd
jns
test
jns
testb
cmp
std
pop
or
fcoms
xchg
notl
shlb
inc
inc
push
out
jns
int
push
fistps
push
in
mov
and
sub
arpl
pop
mov
js
fcmovb
dec
inc
in
xchg
pop
in
cmp
cwtl
cmp
fisubl
gs
repz
fdivrs
lds
mov
int3
push
les
call
sbb
jnp
cld
pop
mov
adc
in
or
mov
rorl
mov
xorb
adc
lds
jnp
xchg
adc
aad
jb
pop
dec
nop
dec
rorl
fwait
or
push
mov
sub
mov
push
dec
bound
mov
xchg
adc
cmc
out
mov
push
and
jb
mov
cli
and
shll
and
mov
mov
lds
dec
sub
mov
cmpsb
mov
inc
lahf
rol
andb
push
or
or
xchg
sub
jl
mov
xchg
orl
add
inc
sub
sbb
sub
rclb
setle
jb
call
inc
out
sbb
andb
stos
movsb
add
dec
sub
orb
aam
jbe
push
and
sub
add
add
sbb
mov
or
in
mov
popl
or
push
fs
call
fxch
scas
inc
sbb
mov
int
inc
fidivrl
push
dec
push
je
adc
pop
out
les
push
mov
push
push
test
das
xchg
das
into
cld
jne
inc
xchg
stos
jne
cmpsb
ljmp
pop
testl
fsts
mov
shll
inc
mov
sti
and
shl
or
mov
add
loopne
js
ja
cmp
bound
xlat
inc
cmp
aam
inc
mov
cmp
iret
push
dec
pop
inc
lods
aad
cwtl
and
test
js
mov
cs
bound
ja
push
xchg
mov
add
add
xchg
cwtl
mov
pop
pusha
adc
std
stos
push
and
dec
imul
add
mov
js
xlat
dec
jle
inc
in
dec
mov
cmp
scas
pop
or
lcall
in
mov
gs
sbb
xchg
aas
ja
mov
xor
addl
mov
outsl
fidivrs
mov
test
out
popf
mov
xlat
icebp
ret
dec
xlat
dec
data16
sti
push
inc
xorl
inc
push
dec
dec
xchg
jo
xor
jmp
std
mov
subb
rep
mov
cltd
lcall
ja
rcrl
xchg
inc
or
cmc
fistps
xchg
jg
pop
por
out
adc
or
clc
setbe
push
mov
push
or
pop
cmc
int
dec
ljmp
popa
ja
jae
insb
adc
les
std
lds
and
or
stc
sbb
cmc
frstor
imul
fstps
pop
mov
lds
pop
add
imul
mov
insl
push
and
aad
or
fimull
jle
iret
pusha
pop
mov
fstpl
push
test
adc
incl
call
stos
pop
js
xchg
dec
and
dec
int
jmp
in
fcomps
out
cmp
dec
icebp
adcb
call
or
pop
push
adc
add
cmc
xor
add
jecxz
add
mov
xor
lods
pusha
fdivr
dec
testb
fsubr
iret
pop
sahf
clc
mov
cmp
push
notl
push
stos
int
sbbb
movsb
scas
aas
sbb
shlb
or
stos
lret
iret
push
aad
xor
cmc
enter
and
cmp
push
sbb
pop
mov
cmp
jg
aad
lret
test
sti
mov
aam
mov
xchg
mov
mov
jle
mov
xlat
dec
sub
jl
push
add
aad
mov
push
movsb
inc
hlt
mov
int3
and
aaa
test
out
mov
xlat
out
mov
aad
or
imul
inc
pop
and
push
lcall
leave
icebp
cmp
push
aam
outsl
fdivl
dec
xor
sub
cmp
add
push
mov
or
inc
cmp
insb
mov
or
loopne
mov
sub
and
mov
mov
pop
mov
enter
dec
out
add
in
arpl
std
jmp
add
or
scas
mov
pop
loopne
daa
sub
arpl
adc
pop
shld
fucomip
aas
lods
push
popf
xlat
fsub
sbb
mov
jge
add
xchg
and
daa
inc
or
pusha
lods
sbb
iret
bound
repnz
mov
and
test
ss
mov
adc
push
push
mov
lea
cmp
push
cmc
dec
sti
adc
repnz
out
enter
mov
dec
or
pop
mov
fidivl
sub
push
mov
jmp
icebp
dec
push
push
and
dec
mov
xchg
test
pop
xorl
outsb
inc
test
test
lds
or
cmp
test
mov
leave
cmc
xchg
scas
out
and
cmp
aam
cli
popf
aad
cmpsl
dec
icebp
xor
jmp
lret
mull
shr
shrb
in
aad
sub
fs
sub
mov
mov
jno
inc
test
xor
lcall
les
mov
or
sbb
cmc
ret
push
inc
mov
push
sbb
in
or
xchg
or
pop
pop
xchg
jno
out
movsl
push
bound
ret
sbb
loope
out
test
test
lock
adc
sub
dec
test
pop
loopne
fbstp
push
jnp
shlb
mov
jo
jle
nop
sbb
xor
xchg
inc
add
scas
fcmovnb
or
aad
sbb
aam
cmp
popa
dec
bswap
push
addr16
mov
loope
hlt
inc
lcall
les
pusha
psraw
into
fsubp
gs
call
or
and
xor
out
jnp
or
push
notb
inc
cmp
dec
and
mov
sub
lock
fnstcw
adc
push
add
inc
ret
testb
inc
xor
adc
mov
lea
jl
repz
jne
fmuls
or
das
in
es
stos
xchg
jecxz
inc
cwtl
sti
mull
packssdw
sar
mov
mov
jp
stos
cmc
sbb
loopne
jge
lcall
inc
cwtl
pop
icebp
jae
push
jnp
and
adc
jle
mov
call
xor
and
add
cmp
cmp
mov
shll
pmullw
jecxz
icebp
push
scas
mov
pop
inc
out
pop
mov
arpl
cmp
sub
cs
xchg
jge
loopne
fldcw
mov
xchg
xchg
cltd
inc
xor
xchg
jg
pop
push
sub
clc
mov
ljmp
je
stc
cli
sbb
and
ret
dec
es
loope
adc
sti
mov
inc
call
pop
or
push
rcrb
mov
mov
pushf
addr16
xor
sbb
sbb
je
jmp
int
pusha
out
cmp
adc
inc
cmp
pushf
nop
push
stc
js
mov
cmp
dec
insl
rcl
inc
mov
inc
jg
outsl
xchg
or
mov
sar
and
dec
cmc
xchg
fldt
pop
add
aad
imul
add
dec
iret
dec
loopne
lods
lcall
fwait
loopne
jp
das
and
dec
aad
xchg
out
xorl
pop
inc
and
aad
test
cld
jmp
sbb
sbb
jns
or
xchg
ds
xchg
out
jae
pop
loopne
out
or
out
or
fs
jecxz
push
jne
scas
pop
xchg
stos
iret
ja
dec
std
jmp
adc
jg
arpl
add
jae
sbb
gs
nop
sub
shl
imul
stos
loope
cmp
or
mov
jnp
sub
xor
dec
lods
lods
sbb
ss
cmc
jnp
in
dec
imul
dec
scas
and
fisubl
pusha
and
dec
pop
ds
push
and
js
sub
sbbl
pop
xor
push
in
or
mov
push
cltd
jl
adc
cmp
idivl
clc
ja
jge
mov
fnstcw
or
repnz
stc
xlat
inc
cmp
or
fstpt
jg
xchg
mov
inc
ret
out
inc
or
les
cmp
mov
dec
sahf
add
les
ficoms
push
fsubs
imul
cmp
inc
dec
loope
sbb
iret
cmpsl
sti
cmp
or
pop
xchg
jecxz
out
or
inc
out
in
mov
and
jmp
mov
push
sbb
or
sub
icebp
das
aam
and
add
push
mov
mov
js
mov
fistpll
test
xor
pop
decl
fmul
cs
test
dec
ficompl
pop
int3
or
ja
mov
inc
xchg
xor
sbb
nop
or
test
lret
scas
jns
push
cmp
test
mov
out
enter
cmp
ret
pusha
clc
adc
lods
or
push
in
movsl
inc
enter
loop
test
popf
ret
and
fbld
hlt
leave
inc
sbb
jp
div
sub
dec
cmp
stos
or
imul
push
jns
jnp
xchg
fiadds
insl
cmc
roll
aas
inc
in
mov
or
adcl
xchg
stc
inc
mov
jle
test
xchg
jmp
jle
es
aad
pop
cmpsl
js
inc
push
mov
dec
or
ja
fstpt
or
or
les
mov
xchg
or
movsl
jl
and
jl
push
inc
jge
lcall
xchg
dec
and
mov
shll
fildl
sti
out
jmp
pop
dec
dec
cli
aad
gs
sub
jge
decl
lock
fsubrs
cmc
mov
xlat
push
sub
push
ljmp
inc
jp
cmp
push
sahf
or
arpl
stc
icebp
or
mov
sub
mov
add
sbb
int
jmp
xor
js
add
mov
mov
mov
imul
push
mov
adc
cmc
or
aad
cmp
cmp
and
dec
neg
lods
inc
dec
sub
mov
out
xchg
lods
imul
mov
mov
out
jmp
inc
or
xchg
ret
dec
inc
cmp
add
out
jns
xor
xchg
cmp
or
stos
sub
movsl
lods
add
lods
add
sub
xor
in
xchg
push
ja
or
leave
movaps
push
out
es
pop
or
xchg
jle
cmp
mov
subl
sbb
jns
dec
addr16
outsl
repz
dec
xchg
inc
movsl
popf
inc
cmp
adc
mov
cld
dec
fs
sub
add
pop
pushf
sub
les
sti
sti
mov
cmp
push
fisttpll
mov
jne
lods
sub
jp
mov
jne
add
aad
movsb
push
cmc
xlat
imul
lcall
jo
int
adc
cli
cmp
dec
push
sbb
mov
outsl
cmp
jb
mov
xor
incl
sub
aad
stos
mov
mov
sarb
push
add
repz
and
lock
cmp
pusha
mov
mov
and
jle
mov
lret
inc
push
push
ss
sub
push
ret
insl
cmp
scas
scas
cmp
pop
divb
std
mov
jecxz
jge
lock
ljmp
jo
outsb
or
push
cs
cmp
adc
aad
shlb
jg
sti
das
lret
int
ss
mov
mov
push
xor
cmp
jge
and
dec
js
loope
adc
jbe
xchg
in
inc
scas
les
int
sub
les
jle
ja
xor
test
pop
cmp
outsl
dec
xchg
push
pop
or
stc
sub
test
mov
repz
cmp
dec
std
sub
pop
psraw
or
sub
jmp
cli
mov
scas
out
stos
sti
int
fucomi
aad
test
dec
dec
sbb
xchg
icebp
std
inc
inc
cmpsb
sti
lea
sbb
int
push
inc
mov
jge
leave
mov
in
ss
stos
add
or
jl
fiadds
call
adc
xor
inc
mov
push
andl
jbe
add
mov
dec
jg
xchg
aad
mov
pusha
stos
push
orb
fisttpll
popa
in
sub
stos
jnp
cltd
or
pop
int
jecxz
xor
xchg
inc
push
ja
ljmp
mov
shll
add
movsl
push
call
insb
outsl
fcomp
push
adc
cld
jl
mov
xchg
insb
insl
in
ja
mov
sahf
jp
and
inc
dec
mov
xlat
jle
jl
loopne
dec
cmp
clc
insl
xor
fldl
enter
int3
adc
je
cmp
ret
jge
sarb
jmp
pop
subl
clc
into
cmc
out
not
cld
mov
sbb
int
cld
lret
push
pop
fimull
aad
xor
in
mov
sub
add
in
loope
loope
dec
cmc
fsubr
cmpl
arpl
lea
sbb
jmp
mov
out
in
out
inc
ja
test
cli
adc
out
ds
mov
rolb
bound
out
insl
inc
lea
cmc
mov
fwait
pop
dec
sub
ljmp
push
test
jle
std
dec
mov
rorl
ret
ss
in
shl
dec
aam
dec
mov
inc
popl
in
sbb
adc
xchg
push
shl
inc
jp
add
sti
aaa
mov
mov
push
sub
push
lret
mov
aaa
adc
and
jp
add
pushf
jl
mov
adc
test
xorl
lcall
stos
lret
jbe
out
mull
fisttpl
xor
call
fistps
int
xor
or
cli
sahf
push
rcll
jo
fdivrp
pop
add
or
cld
add
sub
jmp
bound
push
adc
into
imul
loopne
or
mov
int3
into
push
mov
stos
adc
sbb
xor
jg
andl
mov
push
lret
je
and
jmp
jle
jmp
mov
lret
push
insb
xchg
push
adc
lock
mov
es
cltd
xchg
jmp
jg
xchg
leave
sbb
sbb
das
mov
in
sbb
sti
aad
je
ficoms
test
sub
cmp
mov
push
pop
ss
lds
sbb
nop
sar
es
in
jg
sbb
popa
call
fmull
mov
xchg
aas
inc
adc
xor
into
cmc
push
jnp
jl
pop
negl
cmp
xchg
dec
xlat
ja
or
sub
add
mov
repnz
sahf
fstpl
sub
fdivrl
xchg
mov
fs
in
bound
jp
adc
les
push
or
adc
pop
mov
repz
cmp
stos
xchg
mov
push
jecxz
orl
cli
mov
lea
les
inc
fwait
and
repz
mov
jo
notl
adc
cs
jns
int
les
cmc
movsl
adc
mov
jl
mov
subb
and
out
xchg
mov
push
fmull
loope
lea
mov
popf
sbbl
data16
mov
jmp
add
enter
into
and
imul
scas
das
xor
dec
cmc
aad
jb
pushf
out
push
add
rclb
lcall
into
jmp
stos
add
cmp
and
dec
das
push
movsb
out
ret
push
data16
ret
ss
push
outsl
adc
lods
sub
fidivs
repz
scas
mov
dec
xor
cmp
mov
adc
call
sbb
cli
jg
lods
lea
dec
test
jnp
mov
ret
loope
jns
mov
cmpsb
into
iret
cmp
lcall
lock
pop
js
xchg
lock
stc
bound
xor
xchg
popf
popl
add
and
push
jae
jp
mov
dec
pusha
adc
mov
mov
nop
imul
mov
cmp
lahf
ret
push
sti
je
in
push
pop
shl
popa
notb
daa
xchg
outsl
aad
xlat
jnp
adc
xor
add
les
xchg
shlb
je
lea
stos
out
lock
sbb
ljmp
ret
outsl
out
inc
dec
into
jmp
rcl
call
sbb
pop
cmp
fwait
xchg
push
sbb
mov
jmp
inc
shll
bound
mov
add
in
test
dec
popf
xor
mov
hlt
es
mov
cltd
test
sub
push
inc
idivl
adc
or
and
in
jne
test
add
push
pop
xchg
hlt
pop
mov
or
cmpsb
dec
fisubrl
pushf
repnz
add
outsl
cmp
jmp
push
cmp
jg
xchg
mov
jle
dec
xchg
push
xchg
leave
inc
and
sub
adc
or
mov
nop
push
pmaddwd
push
adc
xchg
or
fisttpl
adc
dec
push
popf
xorb
outsl
outsl
lods
subb
lret
test
clc
pop
pop
in
imulb
mov
xchg
inc
into
movsb
ds
jne
add
movsl
int
push
in
cmp
pop
jne
sub
bound
shrl
sahf
lods
loopne
lods
jno
and
in
data16
aam
std
xor
dec
push
adc
push
jnp
or
cmp
int
out
mov
mov
push
jp
notb
adc
shll
pop
or
cmc
jne
pop
mov
rcrb
mov
cmp
out
repnz
jp
pop
clc
sbb
neg
jmp
cmc
int
push
sbb
int
or
imul
sub
rcr
int3
daa
out
arpl
inc
sbb
inc
mov
inc
xchg
push
jb,pn
inc
js
int
clc
cmpsb
les
scas
lock
aad
cmc
and
ja
cmpsl
fstpl
sbb
xchg
es
and
test
mov
rolb
bound
int
js
imul
xlat
jns
pop
stc
cmp
lods
jp
std
dec
jp
or
cmc
lret
add
cmp
pusha
mov
push
pop
xchg
ja
das
jge
mov
jmp
cmp
push
andl
arpl
jo
lea
add
int3
dec
cwtl
xor
add
inc
pusha
mov
mov
add
inc
stc
es
icebp
int
xor
mov
clc
mov
add
div
lahf
or
js
in
outsl
xchg
xchg
pop
xor
xchg
stos
jmp
mov
push
sarb
sbb
aad
mov
das
int3
cmp
rol
mov
xor
cmc
in
pop
lcall
dec
and
or
or
cltd
ds
aaa
or
jmp
and
jmp
mov
dec
push
faddl
mov
mull
mov
adc
jns
out
jae
cltd
adc
or
pop
movsb
cmc
testb
popf
mov
into
push
pop
ja
add
and
imul
jl
aad
pop
cmp
cld
iret
lods
push
clc
jae
pop
dec
das
mov
push
pop
cld
stos
out
test
aad
testb
jae
inc
lea
lret
xchg
sub
mov
xor
cmp
xchg
sub
inc
xchg
notb
push
pop
cmpsl
movsb
cltd
cld
jbe
loop
es
fprem1
out
dec
cmc
outsb
into
imull
xchg
mov
dec
push
cs
xchg
sarl
cmp
call
and
leave
aad
stc
lea
cmp
scas
inc
xchg
stos
pop
clc
mov
add
loope
push
js
and
cmp
jno
xchg
fsubs
pop
stc
das
xchg
stos
cli
cmp
lds
inc
and
cmp
mov
or
stos
xchg
int
iret
cli
xor
or
jg
mov
roll
push
loopne
cmc
ss
cli
push
mov
add
dec
sbb
sti
jmp
add
mulb
or
sarb
lods
lea
cld
pop
dec
push
lock
or
inc
inc
pop
into
shlb
xor
xchg
jp
mov
out
inc
js
loope
ror
sbb
into
dec
das
push
adc
dec
insl
pop
call
call
cmp
dec
dec
sbb
lret
call
icebp
outsl
inc
inc
lret
addr16
push
lods
xlat
mov
sub
lcall
out
add
test
dec
cmpb
stc
xchg
fbstp
and
adc
adc
sub
xlat
mov
mov
lret
push
cwtl
mov
inc
pop
ja
sub
jne
sbb
aad
shl
fucomip
sbb
xchg
stos
frstor
inc
cmp
or
xor
ljmp
clc
push
jmp
int
sahf
xchg
dec
int
xchg
fwait
aad
aad
adc
pushf
dec
push
pop
fbld
fmul
out
xchg
ret
add
mov
fs
lock
dec
and
leave
sbb
dec
les
mov
jle
cmc
jb
push
mov
jmp
ljmp
pop
xchg
jne
les
stos
push
push
sub
mov
sahf
mov
mov
xchg
lods
push
and
dec
or
outsl
dec
lods
sbb
inc
xor
jae
lea
hlt
repnz
jno
xchg
aaa
in
adc
fists
fninit
aaa
cmp
add
or
or
dec
loope
jge
push
iret
xchg
pop
lds
repz
js
inc
adc
mov
lods
clc
pop
lahf
sti
addl
add
mov
and
xchg
notb
dec
sarb
test
jp
stos
negb
jbe
aam
and
das
out
nop
cmc
jno
jl
jb
jge
cmp
cmp
and
push
iret
rcrb
std
das
inc
add
cld
xor
or
dec
std
rorb
faddl
mov
xchg
ret
cmpsl
pop
ja
pop
cs
push
xchg
std
lret
cmc
out
mov
jo
push
jmp
push
leave
xchg
rclb
cmp
cs
bound
shl
mov
divb
ja
negl
outsl
cmc
xor
cmp
cli
addr16
xchg
jg
cmpl
enter
inc
lock
in
mov
into
scas
dec
in
lcall
in
ret
dec
cmp
jecxz
or
add
cmp
inc
jg
sbb
mov
divb
loope
cli
dec
insb
and
push
popa
add
in
dec
pusha
or
int
not
mov
aad
fnstsw
xchg
xchg
jmp
jns
call
xorb
inc
mov
inc
or
leave
mov
shlb
gs
sbb
mov
popa
int
into
les
sub
loopne
in
dec
inc
push
adc
lds
popf
or
pop
mov
push
fnstsw
repz
cmp
fstpt
faddl
sahf
jp
add
and
loope
inc
jmp
sbb
and
loopne
mov
into
push
test
leave
or
es
std
xor
scas
mov
or
and
fisubl
shr
pop
in
sbb
xlat
push
cld
pop
rorb
and
adc
adcb
xchg
xchg
outsl
rsm
int3
fwait
add
pop
sub
pusha
jne
sub
dec
mov
daa
inc
test
mov
iret
jno
adc
stos
int
adc
cmc
lcall
ja
loopne
mov
pop
outsl
mulb
jbe
sbb
cmp
mov
push
jl
insl
mov
clc
ja
cli
xor
mov
lret
and
mov
sbb
and
data16
dec
mov
xchg
cli
xor
pop
inc
cmp
dec
mov
nop
push
jmp
stc
out
or
dec
in
dec
imul
arpl
jns
push
pop
xchg
push
sub
fbstp
mov
pop
or
mov
xchg
idivl
push
scas
jnp
add
cmc
dec
dec
int
or
lods
into
stos
aam
icebp
scas
push
fcomip
xchg
mov
inc
imull
outsl
mov
pushf
aaa
daa
or
and
arpl
es
push
sti
fldt
cmc
mull
mov
mov
scas
push
cmc
pusha
in
jl
or
or
jb
mov
std
inc
cmp
arpl
daa
cmc
ret
sub
insb
xor
pop
das
mov
js
int
fidivrs
movsb
dec
adc
jmp
cmp
xor
sub
or
inc
jle
xor
jbe
cmp
cltd
mov
pop
xchg
jnp
insb
xlat
mov
aas
dec
fs
jbe
pmulhuw
fstpl
rcrb
pop
aad
ss
cli
or
mov
push
sub
inc
fs
xor
popf
std
out
bound
rolb
pop
fdivrp
out
shll
cmp
push
divb
data16
out
pop
xor
sbb
lcall
movsl
jno
add
lods
or
jno
cmp
sub
push
cs
lods
imul
sbb
addb
push
popa
xor
inc
sub
fcomps
das
not
cmp
testl
mov
addl
out
pop
pop
lea
popa
xchg
notl
mov
jae
mov
into
jge
and
fmul
jge
ds
jns
stc
ljmp
adc
mov
adc
fmulp
fildll
push
adc
cltd
xor
scas
nop
movsb
mov
xor
aam
rorl
mov
jmp
fnstenv
pop
push
pop
leave
mov
push
ret
loope
jno
ljmp
clc
jg
ja
loope
clc
push
ret
or
xor
popf
test
xchg
loope
cmc
mov
jne
or
into
jg
dec
jmp
cs
lcall
loop
jne
jnp
aaa
mov
xchg
jne
in
xlat
cmc
mov
jmp
xor
int
in
pop
xor
dec
int3
lods
adc
mov
fmuls
scas
or
push
movsl
mov
mov
das
push
loope
jo
jnp
iret
out
in
jg
icebp
push
dec
mov
mov
mov
movaps
outsb
andl
ds
pushf
push
mov
xor
les
push
pop
or
out
frndint
jno
or
mov
nop
push
or
in
out
or
inc
add
jecxz
loope
or
or
mov
icebp
orl
sarb
clc
pop
cmp
sub
dec
int
aad
mov
call
in
dec
push
nop
mov
call
in
inc
out
bound
ret
mov
inc
xchg
inc
dec
jmp
jl
mov
dec
out
dec
mov
push
aaa
outsl
sbb
dec
sub
push
cmp
jnp
outsl
mov
mov
rcl
jns
push
mov
cmp
inc
and
or
into
andl
inc
push
icebp
pop
lds
lods
fisubl
adc
stc
xlat
lods
aam
out
push
insl
mov
mov
test
out
jge
roll
scas
aad
imul
and
push
popf
fcmovnbe
lahf
cmp
dec
jl
leave
ret
lea
pop
not
push
inc
bound
notb
cld
mov
lds
xor
add
push
fcmovbe
xchg
cli
xor
pop
pop
adc
add
cltd
mov
fsub
pop
fadds
cwtl
call
jno
xor
pushf
or
ret
push
jns
sub
xor
jle
push
aaa
js
inc
push
push
iret
adc
pop
xchg
dec
pop
mov
xor
jo
call
cmc
fiaddl
cmp
push
ror
into
sbb
jecxz
insb
dec
aad
imul
popl
rorl
dec
sbb
fcoml
xchg
xor
mov
inc
jae
int3
jno
stc
push
push
add
cmp
lock
gs
ficompl
or
test
and
push
ret
xor
and
int
aad
jno
mov
cmp
xchg
test
xlat
adc
cmpsl
or
and
cwtl
into
imul
adc
dec
sub
adcb
nop
cltd
or
push
cltd
pop
adc
in
pushf
incb
cmp
out
arpl
lcall
mov
jle
pop
mov
mov
xchg
dec
push
gs
mov
cmc
lahf
int3
pop
mov
cmp
test
jae
xor
pop
pop
int3
test
pusha
dec
jle
loop
pop
inc
push
nop
jno
test
lret
sub
icebp
jmp
jg
xchg
out
jae
and
jl
ss
add
push
mov
add
xchg
cmp
and
jmp
xchg
mov
das
push
int3
inc
das
or
dec
inc
sbb
xor
cmp
and
xchg
push
sbb
push
inc
mov
in
lods
call
xchg
stos
mov
outsl
mov
cwtl
mov
insl
imul
and
sub
loop
cmp
outsb
mov
xor
mov
loopne
pop
xchg
sti
lods
sub
adc
inc
mov
shrl
int
push
cmp
add
mov
jl
and
jb
mov
push
repz
xor
ud2
cmp
sarl
or
push
dec
int
fnstenv
mov
or
xchg
mov
mov
or
sbb
rorb
lods
mov
xchg
or
adc
aad
imul
sub
bound
inc
fsts
cmp
mov
jns
cltd
mov
mov
inc
fwait
gs
int
xchg
sub
scas
and
dec
or
xchg
ljmp
jmp
outsl
js
cmp
out
add
scas
xor
out
and
or
gs
stc
jge
jb
cmp
mov
in
rcll
cmp
or
push
outsb
jg
into
out
arpl
push
es
loope
mov
frstor
out
outsl
outsl
in
xchg
adc
xor
jnp
jns
dec
mov
out
mov
fs
xlat
aad
lahf
push
int
shrl
loopne
mov
pusha
sbb
and
scas
push
xchg
fisubl
mov
mov
add
mov
cmp
mov
push
int
fmul
cmp
mov
jmp
add
rcrb
mov
imul
stos
inc
ljmp
xchg
mov
sub
push
cli
scas
dec
cltd
cmpsb
xchg
inc
scas
sub
aad
sbb
jne
int
mov
scas
imul
xchg
std
int
ljmp
xchg
movsb
pop
xchg
imul
add
inc
insl
sti
clc
xor
pop
xchg
cmp
aas
xor
dec
lods
xchg
push
adc
fdiv
mov
gs
dec
jmp
cmc
or
mov
jne
adc
pop
jmp
mov
mov
aad
mov
hlt
inc
nop
push
iret
xchg
sbb
cmpsl
jno
call
xchg
aad
push
into
pop
mov
ret
add
testb
jle
lret
iret
push
adc
and
xchg
out
xchg
xchg
int3
pop
cmp
push
pop
shll
bswap
push
loop
add
xchg
xor
cs
repz
nop
inc
push
dec
lods
mov
orl
jb
cmpsb
fisttps
out
loop
dec
cli
pop
fsubs
cltd
fs
rolb
adc
mov
imul
lahf
cmc
call
push
sahf
and
adc
mov
aad
inc
loopne
jl
mov
in
mov
into
mov
add
inc
jmp
lret
lds
repz
test
mov
movsb
outsl
mov
lret
inc
or
mov
sub
sub
adc
call
pop
movsl
in
and
out
jnp
push
mov
stc
rcrl
data16
mov
and
movsl
fcomi
loope
xchg
mov
adc
imul
cmc
inc
xlat
or
xchg
les
xor
cmp
cmc
inc
push
paddq
loop
push
iret
lods
or
add
jmp
insl
cmp
push
xchg
mov
sub
mov
in
cld
rorb
sub
aad
jge
cmovl
rcrl
cmc
jne
mov
cwtl
cmp
cmpsb
js
and
int
inc
dec
adc
add
movsl
inc
aam
nop
imul
lods
idiv
inc
jl
test
cmp
shlb
xorl
inc
rorl
cmp
scas
gs
sti
mov
bound
cwtl
or
add
mov
add
hlt
cmc
loopne
mov
cs
test
in
int
push
rcrl
mov
add
inc
jns
lret
int
jmp
fwait
xchg
xchg
fs
mov
hlt
or
mov
sub
xor
outsb
inc
mov
add
stos
jle
xchg
outsl
cltd
pop
loope
mov
and
jl
orl
mov
add
adc
sbb
das
iret
lahf
mov
pop
into
mov
aas
mov
mov
jmp
jo
sub
repnz
push
rclb
xchg
or
cmpsb
dec
sbb
dec
sahf
jp
xchg
mov
imul
insb
pop
jmp
add
pop
ss
jne
in
adc
mov
int
mov
shlb
cli
bound
pop
fs
loop
add
mov
daa
popa
adc
lds
pusha
popa
fstpt
aad
add
imul
mov
ja
push
adc
add
and
call
mov
mov
pop
idivl
xchg
insb
cmpsl
sub
xor
pop
jecxz
cmp
fisttps
and
call
rol
xchg
ja
in
out
mov
add
pop
lea
mov
cmp
popa
jb
jecxz
outsb
lcall
push
enter
xor
lcall
push
or
outsb
adc
ja
jecxz
mov
sbb
and
mov
sbb
int3
test
dec
jle
push
xchg
mov
jecxz
aad
ficoms
inc
andb
mov
std
sbb
jmp
jb
jge
jge
mov
and
shrl
xchg
cmpsl
sbb
mov
sub
aam
imul
sbb
or
stos
scas
adcb
jmp
out
mov
inc
movsb
movl
aad
xor
mov
mov
and
aad
sbb
add
push
inc
enter
and
mov
adc
cmovl
test
and
int
idivl
in
sti
xor
sub
cltd
js
jp
mov
mov
rcll
mov
mov
ficoml
movsb
daa
ss
lods
dec
jecxz
pop
dec
clc
fdivrp
jns
push
inc
pushl
sub
movsb
lcall
cld
and
xchg
flds
dec
in
out
lcall
or
push
jbe
mov
outsl
test
push
lods
ljmp
enter
mov
in
mov
add
cmp
and
popf
adc
xor
fcom
jp
mov
lahf
jo
in
jecxz
xor
dec
push
sub
iret
dec
and
ret
sbb
cmp
flds
pop
lds
lods
mov
xchg
dec
popa
sub
daa
fdivrp
pusha
xchg
jle
sahf
cmp
push
int
push
cmp
inc
idivb
mov
sahf
popf
iret
lods
je
push
xchg
mov
lods
in
inc
fimull
push
cmp
lahf
mov
inc
out
jae
jmp
jl
fidivrl
jp
iret
mov
loope
pop
xor
jmp
addr16
or
push
mov
jae
outsb
or
xchg
cmp
jl
shll
les
test
xor
xchg
cmc
lret
xchg
and
mov
pop
xchg
xor
cmp
add
ja
push
sarb
sahf
jge
jl
lods
sahf
call
pop
mov
out
aad
enter
addr16
ret
push
imul
cmp
and
mov
sarl
cmp
in
push
and
iret
cmc
popa
stc
mov
lods
ficompl
push
or
cmp
pop
jae
cmp
inc
sbb
jne
pop
shrl
and
mov
pop
mov
es
lods
iret
or
jne
xor
call
xor
pop
push
jmp
sbb
lods
int
loope
xor
je
loope
dec
out
mov
dec
aad
add
jbe
std
push
imulb
loope
sbb
mov
ss
sti
je
push
xlat
lods
dec
jae
les
outsl
sub
fnstsw
inc
and
test
imul
dec
test
test
lea
sbb
add
sahf
mov
scas
test
dec
lods
mov
das
push
add
dec
dec
aas
dec
xchg
mov
cmp
pusha
adc
setg
sbb
shlb
test
call
or
outsb
xchg
in
sbb
and
mov
js
jns
fwait
mov
mov
mov
jbe
jb
lahf
xchg
arpl
cmp
mov
or
movsl
in
mov
or
and
jmp
cmc
and
test
mov
mov
and
out
aad
cmp
inc
adc
dec
push
pop
mov
loope
test
inc
ljmp
inc
out
push
mov
add
dec
cmc
xchg
or
mov
inc
xor
pop
mov
js
jo
filds
pop
or
scas
sbb
jnp
div
xor
inc
pop
popa
loope
jmp
dec
rclb
cs
lock
ds
stos
dec
loope
aad
sub
cmc
mov
loopne
sub
jl
cli
stc
jmp
cmpsl
sbb
mov
clc
insb
int3
mov
xchg
push
mov
mov
cmp
jns
pop
mov
adc
ds
jl
jnp
jp
sub
int
adc
cmc
jle
dec
sbb
popa
jnp
pop
and
ljmp
and
cld
es
frstor
push
pop
cmp
cmp
imul
cli
out
mov
insb
cmc
mov
pop
mov
in
xor
push
or
pusha
jo
repz
aad
icebp
cli
in
cltd
dec
das
pop
and
popa
mov
jne
rolb
sbb
and
ss
addr16
dec
test
iret
in
sbb
dec
out
bound
sub
nop
mov
and
movsl
mov
imul
and
sub
mov
test
jecxz
aad
mov
imul
leave
subb
xor
jmp
or
test
dec
jp
clc
loopne
or
fstpt
jmp
sbb
shlb
jb
jnp
sbb
popf
cmp
xchg
imul
notb
mov
pushf
inc
int
fwait
jne
sub
pop
xlat
sahf
clc
jecxz
stos
pop
mov
daa
outsl
mov
adc
lret
xchg
andb
or
out
shrb
pushf
cld
xor
adc
jo
in
pop
cmp
xor
aad
outsl
aad
xchg
adc
fs
loopne
scas
pop
rclb
push
sub
mov
int3
outsb
add
mov
paddusb
mov
adc
inc
aad
lret
mov
cmc
inc
cmp
addr16
mov
mov
or
sbb
jg
sbb
popa
int
jle
push
mov
xor
and
pmaxub
mov
lods
mov
xchg
cmp
cmp
fsubp
mov
add
scas
inc
out
mov
cmc
adc
adcb
aad
or
sarb
pushf
sub
xchg
mov
iret
jmp
outsl
sar
xor
jo
mov
adc
ret
pop
and
cmp
mov
cltd
inc
iret
cli
fsubr
jmp
inc
and
cmpsb
mov
mov
call
in
jp
xor
mov
push
sub
xor
dec
or
lods
jecxz
mov
insl
sti
xlat
jp
add
push
lcall
lret
outsl
add
push
imul
fimuls
dec
pop
mov
and
mov
adc
shrb
jecxz
jl
aad
sub
add
sub
and
adc
pop
mov
pop
test
mov
dec
and
xchg
sub
sbb
test
push
std
pop
dec
shlb
xchg
cld
cmpsb
gs
iret
add
push
fiaddl
mov
fildl
sub
add
pop
or
cmp
xor
movsl
lret
lea
lahf
inc
out
xchg
lods
adc
outsl
add
and
sub
loopne
mov
mov
fimuls
mov
xlat
adc
sarl
sub
js
jmp
and
inc
pop
out
int3
shl
mov
loope
pop
mov
notl
adc
dec
in
sbb
scas
pusha
pop
jmp
jnp
in
popf
xchg
push
dec
imul
xchg
jecxz
out
dec
and
jnp
jo
insl
jmp
pop
dec
mov
mov
mov
mov
jge
add
sbb
inc
in
jae
test
aas
sbb
insl
mov
in
add
in
inc
out
repnz
jbe
mov
rorb
in
cld
mov
inc
mov
push
cmc
add
mov
fs
cld
cmc
mov
arpl
imul
in
aad
fwait
adc
mov
xor
int3
sub
add
cmc
pop
jecxz
fistl
cmpsl
mov
xchg
lods
wbinvd
fucomip
repnz
push
xor
mov
daa
repnz
jo
icebp
pusha
aam
call
sbb
cmpsb
pop
gs
mov
je
inc
int
push
and
rcll
negb
push
loopne
push
pop
ret
inc
in
mov
mov
loope
add
or
cli
mov
sti
jg
xchg
movsl
icebp
stc
loopne
add
add
sub
mov
mov
jp
push
pop
mov
sub
fwait
push
cmp
push
mov
iret
add
push
cmp
jns
push
pop
scas
aaa
stos
filds
jl
and
int3
inc
aad
test
lock
cmc
das
ds
orb
push
mov
xchg
das
xor
fwait
mov
add
cmc
cwtl
mov
inc
addr16
mov
and
xchg
sub
mov
repnz
rol
cmp
fcmovu
ret
dec
push
sub
mov
in
jge
sete
mov
in
sub
outsb
xor
and
jnp
std
repz
pop
or
jmp
sti
call
mov
dec
iret
pop
dec
insb
inc
aas
sbb
call
iret
idivl
cltd
xchg
adc
sbb
push
xchg
negb
inc
call
notb
addr16
bound
test
push
fimull
negl
cmc
jb
push
and
les
mov
sbb
adc
xchg
in
push
lahf
sbb
dec
cmp
xor
xchg
push
rorl
inc
mov
rol
inc
or
int
mov
int3
adc
mov
sub
pop
add
lock
lods
push
int
or
ret
push
je
out
insl
and
cli
or
xlat
xchg
es
push
sub
scas
aad
sub
sbb
out
addr16
cmp
or
xor
rcr
cmc
dec
jae
pop
adc
sub
shll
aam
mov
call
add
outsb
aas
mov
leave
sub
pop
xor
gs
lock
mov
int
add
push
jb
cmc
out
mov
xor
and
inc
stos
or
test
xor
cmc
mov
arpl
shlb
call
out
inc
or
mov
fcomi
shlb
shll
jb
fs
dec
pop
jle
cmp
in
sub
cmp
xor
outsb
cs
push
sub
jl
js
jg
mov
dec
adc
cmpsl
xchg
fwait
in
inc
mov
pop
adc
cs
mov
les
sub
jge
or
cli
push
jmp
mov
mov
int
push
jnp
and
aaa
xor
in
in
in
push
repz
jge
popf
dec
adc
ja
sub
iret
push
adc
pushf
lods
lock
and
hlt
and
dec
in
out
mov
sti
mov
or
pop
pop
cmp
xchg
testb
stos
leave
cmp
xor
pop
xchg
jo
jl
pop
scas
scas
cli
aad
je
jbe
lods
clflush
and
aad
push
inc
loopne
int3
stos
push
add
ucomiss
sti
xchg
xor
mov
pop
pop
add
cmp
or
dec
jecxz
and
cmp
leave
aas
lcall
mov
sti
jnp
push
or
mov
cwtl
xor
insl
ret
and
sbb
inc
aam
test
repnz
out
mov
lahf
sar
xchg
lds
pushf
inc
mov
pop
sti
push
movsl
sbb
notl
add
cmp
or
aad
inc
scas
lods
imul
jg
sti
nop
cld
mov
mov
pop
xchg
xchg
adc
imul
jbe
or
sbb
call
fwait
pop
xchg
outsl
inc
or
out
push
adc
enter
call
lcall
sbb
mov
movsl
call
mov
repz
mov
push
int
gs
sbb
xchg
clc
jns
fistps
out
loop
and
mov
test
je
adc
shl
mov
dec
push
and
dec
cmc
rcll
mov
jmp
ja
xchg
loop
adc
loop
mov
call
push
dec
push
sbb
mov
mov
sub
pop
popa
test
cmpsb
js
fists
mov
in
pop
dec
pop
jl
sbb
pusha
test
adc
outsl
icebp
rcrl
mov
xor
push
jge
out
jl
dec
gs
hlt
cmpsb
sbb
mov
cmp
js
dec
psrlw
out
in
mov
adc
loope
mov
and
fbstp
ds
and
or
cmp
das
add
mov
out
fld
sbb
pop
int
jb
pop
int
ret
out
jl
dec
mov
mov
jo
xchg
insl
popa
repz
add
jge
jmp
inc
inc
ficoms
cmp
into
mov
pop
sahf
sbb
sbb
mov
imul
cltd
xor
notl
stc
add
inc
enter
or
dec
fdiv
punpckhwd
jnp
push
fwait
jne
mov
lods
jb
outsb
mov
cmp
cmc
loopne
lds
pop
div
mov
out
shlb
cmpsl
shl
or
fstpl
dec
sub
and
outsl
in
sub
cmp
sti
repnz
cld
jbe
lret
movsl
jae
rorl
mov
inc
div
push
pushaw
int
inc
mov
pop
aad
in
mov
rorl
icebp
jbe
sahf
mov
pusha
mov
stos
test
push
setbe
xchg
mov
ja
mov
enter
xor
jle
aad
aad
loopne
xor
or
test
cmpsb
push
pushf
dec
push
adc
jmp
insl
sbb
or
xchg
testl
aad
adc
add
jns
xchg
std
js
into
mov
nop
int
mov
mov
xchg
lds
add
dec
pusha
mov
add
adc
push
mov
pop
call
cmc
in
push
popf
nop
aaa
sbb
cmpsl
hlt
xlat
push
sbb
aad
std
push
jmp
cmp
cmc
mov
lcall
jmp
loope
pusha
outsb
cmp
rorl
add
cmpl
cs
gs
mov
idiv
cmp
arpl
adc
xchg
push
mov
aaa
or
lods
fcoml
in
cmpsb
into
sub
adc
and
jmp
iret
sub
int
mov
mov
adc
sarl
xchg
packssdw
cld
scas
xchg
mov
btc
xchg
adc
cmc
outsl
aad
fcmovne
xchg
xlat
lods
out
clc
lock
int3
popa
aam
inc
loope
dec
rcll
dec
or
int
dec
push
add
push
mov
dec
popf
jmp
mov
popa
out
and
repnz
cmc
das
jo
nop
in
cmp
mov
xor
or
js
cmp
and
int
dec
call
fistpll
das
xor
inc
in
push
xor
jge
mov
js
sbb
dec
test
cs
andb
xchg
adc
xchg
cmc
dec
push
addr16
cmp
pop
imul
mov
jno
mov
adc
sub
mov
and
cmp
xchg
adc
xchg
iret
add
jmp
sbb
jmp
push
lods
mov
arpl
sti
fildll
loope
mov
rcrb
idivb
mov
js
cmpb
inc
in
lret
rorb
aad
sub
mov
xor
push
int
jg
cmp
xchg
or
jno
outsb
xchg
sub
mov
stos
enter
adc
mov
xor
sub
mov
push
inc
adc
fs
sbb
jecxz
pop
je
sub
movb
fdivrs
dec
test
pop
jmp
cmc
sub
lret
xor
adc
sub
xchg
mov
ficomps
lret
pop
xor
jp
outsb
out
nop
fists
push
inc
cmc
pop
or
cmp
mov
femms
mull
cmp
push
cmc
pop
icebp
and
pushf
mov
xchg
cmp
scas
sbbl
cmpsl
dec
imul
lcall
fisubrs
clc
dec
repnz
fs
imul
adc
insb
shl
incl
insb
jmp
mov
aad
xchg
divl
cli
or
inc
pop
push
inc
mov
mov
int
out
or
lock
mov
mov
js
jp
cmp
sbb
xchg
push
jo
es
mov
nop
int
dec
xchg
out
cli
and
sub
out
cwtl
mov
pop
fistpl
pop
cmp
inc
lahf
adc
xor
mov
inc
lods
mov
in
mov
ret
ret
jno
add
test
jne
shll
int3
mov
xlat
cmp
jne
or
xchg
insb
push
shl
cmpsb
out
fiaddl
xchg
mov
negl
and
aad
inc
jbe
adc
pop
into
negl
dec
call
imull
xor
push
mov
scas
test
inc
hlt
or
nop
mov
sbb
call
jns
daa
adc
pop
js
sbb
add
daa
scas
pop
and
xchg
and
dec
xchg
dec
adc
push
mull
aad
lods
jnp
in
clc
out
test
xchg
add
sbb
inc
ljmp
and
xchg
enter
je
ljmp
push
hlt
jl
push
outsb
ja
pop
sbb
lcall
test
lds
xchg
jnp
jl
imul
or
or
sahf
in
cmp
mov
sbb
fistpll
mov
pop
mov
jae
adc
fdivrp
mov
or
lea
mov
outsb
aad
jae
sti
mov
or
data16
in
xchg
nop
es
call
push
sbb
sub
cmp
mov
xchg
addr16
jp
sti
pmaddwd
mov
jnp
int
mov
sub
sbb
je
in
cmp
dec
and
inc
jecxz
jmp
or
stos
mov
mov
and
hlt
lods
adc
mov
jecxz
ss
adc
filds
aas
into
sub
inc
push
jmp
mov
pushf
dec
outsb
lods
and
jmp
dec
and
addr16
jmp
cmp
shll
pop
in
lret
gs
pop
in
push
sub
pop
lods
decl
loopne
jge
sub
arpl
jmp
pop
pmaddwd
movsb
fcoms
shl
pop
sbb
sbb
mov
in
cmc
xchg
or
dec
test
mov
and
add
jp
pop
xchg
adc
jl
stos
xor
and
and
xchg
stos
and
cli
and
cs
or
test
aaa
mov
jle
pop
cld
xchg
inc
lods
sub
pushf
or
scas
mov
sub
push
lock
mov
mov
mov
mov
bound
scas
inc
iret
fdivrs
sar
shlb
xchg
pusha
mov
mov
push
negl
lea
cmp
in
sbb
js
push
rorb
pop
mull
fwait
xchg
or
dec
add
fcomi
add
popa
jns
filds
clc
int3
pop
in
or
syscall
call
jmp
out
lret
lret
mov
mov
jmp
mov
push
mov
and
cmp
sahf
jne
push
aad
sbb
xchg
adc
sub
rcl
mov
std
mov
in
insl
xor
bound
jb
xor
sarb
rolb
mull
stos
cmc
hlt
popa
int3
js
das
shrb
and
lods
in
sbb
cld
dec
cmp
das
sbb
inc
mov
mov
fs
fimuls
xchg
inc
add
cmc
mov
jno
pop
ljmp
sti
mov
mov
iret
in
mov
mov
inc
enter
mov
dec
and
push
jge
adc
test
adc
pop
cmp
add
xor
adc
gs
out
scas
mov
mov
adc
jns
cmpsl
xor
mov
repnz
movb
js
popw
lret
add
cmc
cmp
push
popl
xchg
ds
and
call
pop
insb
pop
sub
ret
mov
xor
sahf
mov
adc
mov
jl
adc
sub
mov
stc
das
sarb
testb
and
aaa
push
dec
push
loopne
add
call
aaa
jo
outsl
adc
lret
mov
sub
aam
fsubrp
movsl
insl
idiv
ss
loope
arpl
jo
pop
cmp
pavgb
push
jle
in
sub
mov
push
int
aam
scas
sar
inc
rorl
stc
stos
mov
cmc
and
test
test
out
and
jle
push
add
mov
dec
cmp
adc
fs
imul
cmc
mov
xchg
enter
in
mov
pop
sub
xor
notb
mov
pop
sub
mov
aam
push
mov
leave
pusha
call
adc
mov
dec
mov
iret
jecxz
cmc
icebp
in
add
jmp
clc
ds
jno
xor
mov
pop
imul
cs
lret
cmc
dec
jecxz
adc
mov
bound
push
clc
int
movsb
mov
sub
jmp
in
in
lods
add
sbb
das
sub
es
lds
xchg
sub
adc
jmp
xchg
or
mov
pop
mov
outsl
loope
xor
clc
sub
push
mov
add
leave
xchg
sbb
mov
add
lods
push
mov
xchg
jge
add
fidivrl
jecxz
xchg
cmp
mov
lea
addr16
mov
push
cmp
cld
sub
popf
and
jnp
or
mov
daa
dec
sub
and
stos
inc
sub
or
lret
aaa
mov
js
in
mov
sub
testb
jg
arpl
lods
mov
ss
mov
sbb
rol
mov
and
daa
sbb
ret
add
addr16
xor
insb
rorb
decb
shrl
or
call
or
sub
jb
cmpsb
cmp
in
jns
stc
repnz
jmp
or
iret
lods
add
push
inc
mov
add
icebp
incb
lahf
jbe
sbb
int
xchg
mov
pop
lods
push
jae
mov
cmp
pop
jp
cmc
jb
cmpsl
ret
pop
test
sahf
ss
adc
stc
jle
scas
dec
aad
or
xchg
pushf
dec
imul
sbb
mov
loopne
rcr
imul
cmp
jo
mov
nop
and
std
out
orl
xchg
outsb
mov
cmc
mov
lcall
nop
inc
cmpsl
jmp
clc
cmp
cltd
mov
and
cmp
pop
inc
cld
mov
jno
daa
ja
xlat
loope
imul
fwait
in
jnp
out
hlt
and
xchg
sub
xor
inc
dec
inc
inc
outsl
scas
ss
dec
inc
rcrl
cmpsl
lods
insl
cmp
mov
cmp
out
xchg
lret
int
inc
adc
pop
js
popa
push
cmp
and
add
jge
mov
orl
iret
stos
add
and
cmpsl
mov
inc
rcrl
xchg
pop
sub
aam
or
into
call
cmc
popa
mov
fwait
mov
incb
xor
lahf
jecxz
or
push
js
stos
fsts
add
or
mov
ds
adc
mov
int3
jge
and
aad
and
in
scas
adc
jne
mov
push
mov
and
in
jo
dec
mov
sub
popa
sub
sbb
fmul
or
adc
iret
cmp
mull
repnz
dec
inc
xor
sub
xchg
sbb
js
sbb
ja
dec
sub
fstpl
mov
mov
int
js
mov
dec
popa
inc
xor
add
in
cmp
xorb
jbe
loop
out
movsb
adc
aad
aam
fnsave
stc
jge
mov
lock
hlt
push
lods
pop
aam
aas
jns
mov
mov
sub
imul
rcl
clc
sub
xor
pop
out
outsl
push
lret
cmpsl
adc
and
inc
imul
popa
fwait
in
out
cmc
pop
ja
test
popf
scas
int
stos
or
aad
mov
scas
test
adc
push
out
hlt
or
fisubrl
xchg
add
fadds
mov
test
or
sub
js
in
scas
cmc
jb
addl
mov
xchg
push
bound
setbe
into
mov
xchg
xor
and
add
test
push
or
or
jnp
call
cmpsb
int
aad
pop
aad
adc
xchg
or
mov
mov
fsubrl
push
mov
cmpb
and
mull
fisubrs
mov
mov
jmp
mov
jnp
or
sbb
int3
stos
cltd
sbb
add
shr
xchg
not
jp
sbb
and
ret
mov
mov
loop
adc
inc
ja
inc
dec
jb
dec
push
xchg
mov
das
bound
xor
adc
insl
adc
cmp
adc
insl
pop
sarl
xchg
lock
adc
xchg
jnp
call
push
notb
shlb
adc
movsb
popa
stos
fdivrs
mov
in
shrl
ja
ror
xor
std
mov
or
or
pop
lods
or
sbb
push
outsl
lods
not
jno
xchg
outsb
push
rclb
pmullw
sbb
lods
mov
lea
cld
shll
sahf
jmp
adc
fs
adc
aam
lds
notl
dec
pop
and
lods
inc
mov
and
or
or
dec
scas
fwait
sub
lret
or
shl
or
test
mov
sbb
test
adc
rcll
mov
xlat
inc
popa
rcll
mov
jno
ds
sahf
sti
lds
jg
inc
cmp
mov
inc
lret
adc
inc
out
and
pop
or
add
mov
xchg
stos
fcmovnb
sub
scas
into
xchg
and
rcll
aad
divps
fldl
bound
fsubrl
sub
xchg
jecxz
iret
push
adc
repz
out
leave
jbe
mov
jmp
fisubs
sub
or
or
push
mov
xchg
loope
inc
jle
mov
leave
pop
cmp
std
lods
inc
sub
ja
or
jle
ss
fs
mov
inc
rolb
cli
sbb
gs
push
jecxz
addb
inc
lret
adc
jno
sahf
stos
inc
ljmp
fs
jl
jns
cmp
or
test
lea
rclb
cmp
es
sbb
nop
dec
add
jle
inc
out
sub
push
pop
xchg
xchg
cmc
sbb
dec
aad
int3
fisttps
ret
cld
outsl
addl
hlt
jbe
dec
into
sub
into
and
jecxz
mov
push
jmp
fcomi
sub
xchg
aad
repz
adc
xor
call
sti
iret
mov
daa
mov
jle
mov
aaa
icebp
iret
cli
mov
or
pop
add
push
or
push
mov
jmp
mov
psubq
out
jno
arpl
cwtl
dec
mov
pop
and
adc
int
xchg
or
imul
rep
add
mov
aam
lret
xchg
int
jl
dec
aad
adc
jmp
aaa
roll
adc
daa
and
gs
mov
dec
sub
fadds
dec
mov
lods
sub
pop
mov
cmovg
aam
xchg
jg
out
add
jmp
lods
jmp
pop
dec
stos
sti
push
pop
xchg
test
in
je
and
xor
arpl
testl
xlat
loop
pop
ret
into
pusha
incb
sbb
pusha
mov
cmp
subb
pop
jmp
xchg
adc
jmp
stc
cmpsb
addl
add
jecxz
clc
push
call
jo
in
xchg
jnp
and
pop
movsl
inc
jge
dec
xchg
les
dec
xchg
pop
iret
data16
rclb
or
xor
aad
xor
movsl
cld
mov
nop
mov
mov
cltd
add
ffreep
movlps
rorl
push
mov
mov
cmp
ror
das
mov
mov
cmpsb
dec
mov
loope
lahf
ja
aas
js
scas
adc
dec
test
std
sbb
inc
dec
stc
mov
ret
and
and
sbb
xchg
jnp
pop
adc
decb
repz
out
lcall
fcmovb
shlb
or
or
dec
fsubl
fdivs
je
xlat
into
push
dec
xlat
mov
inc
cld
push
scas
sub
push
xchg
les
jae
cltd
inc
sub
inc
repz
add
andb
notl
jo
sub
sbb
or
lock
mov
sbb
nop
shll
ror
adcl
pusha
fsts
and
jl
dec
fisttps
and
mov
sbb
cmpsl
push
nop
mulb
and
xor
movsl
inc
sarl
or
pop
mov
xlat
jge
pusha
out
jae
inc
xor
inc
lcall
mov
adc
cld
in
sbb
in
rolb
cmp
je
add
nop
repz
fldenv
test
ja
push
in
fistpl
jge
pushf
sub
pop
in
stos
dec
dec
cmp
sbb
in
ret
mov
aad
cmp
std
adcl
cld
scas
add
sub
or
not
shl
pop
and
lock
mov
notl
mov
cmp
stc
lcall
dec
inc
and
xchg
adc
dec
pusha
mov
rcl
loop
lods
lret
popa
mov
jge
aam
cmovl
not
jp
sbb
jae
mov
cmp
fisubrs
dec
or
shll
out
or
sub
adc
aad
icebp
ja
mov
cmp
mov
pop
outsl
pop
movl
iret
xor
bound
mov
rep
add
lcall
stos
mov
scas
imul
sub
jge
in
test
std
jns
jl
jae
mov
jnp
ljmp
cmc
bound
nop
mov
mov
outsl
aad
jg
adc
sbb
in
xchg
jmp
icebp
or
imul
push
call
pop
adc
jnp
pushf
mov
add
cmc
cwtl
in
mov
cmc
fldt
push
shr
ljmp
stc
cmc
mov
lea
mov
pop
push
inc
repz
test
sub
or
push
daa
push
cmc
call
xchg
cmp
jae
scas
inc
and
and
into
cli
sbb
int3
je
jp
or
sub
std
call
mov
in
ljmp
cmpb
adc
outsl
cmp
icebp
xor
loopne
sub
cmp
iret
cmc
jge
dec
ret
test
sbb
adc
dec
ficoms
shr
or
adc
loope
and
cld
and
ja
cmp
imul
adc
mov
mov
add
int
je
dec
jb
hlt
ljmp
jae
int3
mov
add
cwtl
or
mov
call
out
cmc
int
out
jg
jns
and
cmc
imul
test
dec
lret
jo
xor
and
stos
call
xchg
mov
pop
lods
inc
lret
inc
or
or
fimull
sub
jle
ja
cmp
jmp
hlt
scas
cmc
cmp
xchg
lods
sub
ret
sbb
xchg
sbb
and
pop
or
imul
mov
idiv
add
sub
pop
into
sahf
inc
shll
jmp
imul
loope
sbb
or
sbb
int3
mov
and
xchg
jnp
or
dec
out
into
jmp
sub
mov
lods
mov
or
jno
das
sub
mov
inc
add
sbb
sub
cmp
mov
les
dec
pop
or
sub
dec
xchg
adc
jl
out
test
or
xchg
aad
shrb
adc
mov
cmp
fs
mov
push
ljmp
xchg
sub
int3
mov
aaa
jge
roll
cs
lods
shll
lock
jp
xchg
mov
push
aad
push
js
dec
mov
js
xor
xchg
loopne
pusha
add
and
jge
nop
inc
mov
mov
jne
sbb
fdivr
loop
or
lea
xlat
mov
xchg
mov
popa
inc
repnz
push
adc
out
popf
lock
inc
adc
jl
psadbw
insb
cli
and
std
mov
sbbb
iret
xchg
xor
sub
xor
mov
loop
imul
or
aad
jl
push
xchg
mov
sbb
add
mov
cmp
mov
xor
aad
add
adc
mov
xor
or
int
mov
ret
sahf
jl
nop
test
xor
dec
cmc
push
sbb
xor
cmp
and
addb
dec
cmp
sbb
fwait
sbb
in
iret
mov
xchg
addl
nop
or
xorl
cmp
or
adc
in
dec
jle
inc
jnp
mov
pop
dec
inc
or
leave
mov
or
sub
sbbb
popa
aaa
mov
ljmp
orl
jo
out
aad
xor
out
out
js
out
mov
mov
adc
xor
xor
jg
jg
cmp
aad
aam
mov
adc
dec
mov
cld
xor
mov
imul
aad
jle
repnz
push
movsb
test
testb
arpl
mov
adc
mov
dec
or
fsubl
push
lret
mov
cld
pop
mov
iret
jmp
aam
inc
inc
mov
jmp
movb
pop
and
xor
cmc
adc
iret
inc
call
into
aad
movsb
nop
and
cmp
jg
mov
xor
mov
or
cmpsb
push
jnp
fwait
stc
mov
fstl
cmc
lock
sub
sub
rcrb
ficomps
movsl
enter
xchg
mov
in
mov
lds
ss
loopne
aad
dec
jge
push
push
jmp
into
pusha
fnstcw
mov
mov
fsubrp
mov
xor
xchg
push
stos
outsb
pop
cmp
fwait
sub
xchg
cltd
aad
cmp
pushf
jl
les
ror
jl
cli
pop
cmpsl
and
xor
dec
mov
xorl
cmp
inc
sub
je
mov
out
arpl
ja
dec
pop
sbb
dec
imul
adc
mov
ucomiss
out
lcall
std
sub
mov
and
fwait
aas
testl
int3
stos
call
adc
push
jp
scas
cmp
dec
sbb
push
xchg
iret
dec
out
push
aam
out
xor
and
cmp
enter
lea
test
idiv
and
pop
out
cmc
lea
xchg
pop
jecxz
xor
les
pop
stc
int
clc
pop
movlps
fwait
and
scas
push
adc
mov
cmp
adc
cwtl
or
pop
dec
and
mov
stos
fsts
xor
lods
into
xchg
notl
lods
int
fisttpl
movsl
fcomip
pop
jns
sti
add
mov
xor
or
jecxz
jnp
out
daa
testl
lods
call
cli
rcl
xchg
insl
fmull
nop
popa
pop
popa
inc
stos
jmp
int
jns
daa
xor
or
cmpb
insl
test
xchg
sti
and
mov
xor
int
icebp
mov
fwait
dec
sub
mov
adcl
mov
xchg
pmaddwd
imull
sub
push
adc
call
pop
subl
pop
repz
std
or
push
mov
fstpt
lea
mov
xlat
imul
jmp
cmp
push
inc
fwait
adc
out
mov
sub
out
decb
roll
int
push
js
scas
test
dec
fcoml
jmp
cmp
dec
xor
bound
and
or
dec
rcrl
scas
mov
les
mov
dec
dec
pop
sbb
bound
int3
scas
mulb
mov
fistpll
push
jnp
push
nop
iret
aaa
jg
mov
adc
lahf
push
xchg
jnp
cli
or
adc
cmc
or
push
adc
mov
adcb
or
pop
push
cwtl
mov
in
iret
cmpl
cs
popa
dec
loop
jge
test
or
xchg
fnstsw
mov
push
or
sbb
test
outsl
subb
lcall
xchg
rcl
test
lret
mov
sti
in
add
stos
inc
push
mov
pop
fs
mov
faddl
inc
mov
mov
jno
cwtl
cmp
int
jne
mov
cwtl
sub
sbb
adc
lea
adc
push
mov
repz
xchg
push
add
lcall
mov
and
adc
push
mov
out
gs
cmp
enter
les
dec
stos
dec
inc
push
adc
dec
push
mov
inc
xor
pop
and
adc
into
ret
fisubs
cmp
add
mov
aad
pop
syscall
xchg
xchg
ror
and
dec
aad
leave
mov
scas
sarl
fidivl
cmc
push
les
dec
into
out
cmpsb
sbb
dec
repnz
fistpll
mov
xchg
mov
jle
outsl
insl
not
popf
cmp
sub
aas
aas
mov
flds
loop
cmpl
mov
lds
mov
and
enter
dec
fcmovbe
ja
add
mov
scas
xchg
mov
push
movb
mov
inc
mov
sbb
or
xor
out
cs
rclb
int
mov
cltd
mov
pop
cmc
mov
xchg
int
mov
fsubrs
aaa
fmul
nop
or
out
nop
into
jo
aad
xchg
stc
int
icebp
push
mov
mov
int
test
fsubl
es
cmp
xor
lea
notb
pop
dec
add
aad
into
sbb
sti
push
mov
xchg
mov
in
jno
cmp
pop
sub
test
or
add
inc
pop
leave
sahf
inc
xchg
popa
jns
jns
mul
fs
or
or
cmp
mov
pop
ret
bound
cmp
aad
popaw
xor
fists
push
outsl
dec
call
les
shlb
pop
cli
jmp
arpl
mov
adc
mov
notl
cmpsb
push
mov
xor
cmp
es
and
testb
xchg
dec
or
mov
das
aad
dec
mov
outsl
sub
push
cmp
leave
sti
rorl
cmp
negl
mov
mov
ret
mov
outsb
in
jg
inc
or
in
mov
lods
mov
insl
sub
mov
cwtl
je
push
rclb
cmc
jge
fdivr
shll
and
int
mov
mov
inc
inc
adc
xchg
scas
and
cmp
sbb
iret
jg
movsb
jecxz
sub
enter
dec
js
fcmovbe
cmp
add
cmc
int
je
push
cmp
cmpsb
push
test
adc
loopne
sbb
lcall
imul
add
or
popf
inc
cli
sbb
dec
push
stc
fnstcw
jmp
mov
aad
dec
les
ror
xor
dec
sbb
stc
xchg
rcr
imul
mov
mov
aad
nop
jmp
add
push
mov
cmp
and
jne
rolb
fstpt
cmc
pop
mov
xchg
cmp
mov
mov
sbb
pusha
inc
cmp
ljmp
daa
xlat
movb
ljmp
incl
xor
sbb
mov
dec
shll
adc
push
mov
aad
xchg
repz
dec
or
mov
daa
icebp
mov
sub
rcrl
test
jge
mov
stc
stos
fistpll
xchg
test
push
into
fs
sbb
mov
push
dec
cld
and
clc
cld
jge
sarb
adcl
idivb
cmp
mov
cli
mov
fnsave
push
xchg
jecxz
jl
lods
mov
hlt
xchg
int
xor
pop
je
sub
popa
sbb
inc
mull
and
add
rolb
sbb
push
test
aad
mov
mov
push
jecxz
out
cmc
cmp
cmc
in
cmpsl
mov
mov
out
inc
add
mov
stc
js
dec
adc
dec
mov
dec
jns
movsl
sbb
jge
or
fildll
xchg
jg
or
insb
mov
mov
lods
mov
cmc
cmp
push
or
jnp
mov
cmc
cltd
popa
or
lods
xchg
or
xchg
inc
pop
loop
push
ja
in
shll
shll
and
insb
jp
push
add
sub
ss
and
fwait
pop
mov
call
dec
subl
dec
jmp
je
mov
add
jle,pt
aaa
je
pusha
cmp
and
enter
mov
add
push
imul
mov
mov
mov
cmp
aad
cmp
cmp
jle
xchg
pop
mov
mov
insb
shrl
add
in
dec
mov
and
lds
mov
repz
je
jbe
xchg
outsl
push
push
push
rcrl
sti
mov
mov
jmp
sbb
or
cmpsb
cmp
pop
ljmp
cwtl
test
or
into
cmp
mov
cmp
pop
or
jge
sub
shl
dec
shrb
adc
icebp
or
mov
mov
xor
pop
push
mov
push
mov
ljmp
mov
int
out
mov
mov
int
call
sub
lds
mov
popa
pop
cmp
stos
movsl
out
dec
jno
ss
push
les
les
movsb
icebp
mov
mov
mov
repz
cmp
lcall
cmpsb
mov
add
push
xchg
aam
out
cmpsb
popa
cmp
int3
inc
jmp
adc
int
loop
cmp
loop
dec
mov
and
or
insb
movsb
shrl
fwait
insb
repz
loope
pop
cmp
mov
dec
mov
jbe
leave
cmp
inc
addr16
in
lret
pusha
lods
mov
jb
mov
out
add
and
dec
xchg
test
push
push
adc
push
push
cmp
dec
in
stos
pop
sar
scas
aad
mov
sbb
push
test
cli
dec
sti
xchg
sub
jecxz
les
inc
mov
mov
cli
sub
loopne
ljmp
push
adc
xor
data16
fsts
jl
adc
mov
in
jecxz
mov
jp
cmp
fiaddl
sahf
cmp
jl
jecxz
sti
sub
pop
loope
mov
mov
shlb
dec
imul
div
push
shlb
sub
out
push
mov
add
lcall
popa
mov
sub
in
push
loop
movsb
xor
repz
add
mov
in
sub
inc
lret
dec
les
cwtl
lods
js
push
mov
lods
orl
push
jnp
popa
clc
jl
sti
call
sbb
dec
or
push
test
sahf
mov
xlat
jae
mov
sbb
jmp
mov
xor
mov
xchg
in
push
andb
mov
imul
or
push
js
popf
pop
pop
outsl
popa
mov
shll
mov
jmp
jl
ret
cmc
jl
hlt
mov
mov
xor
pop
sub
pop
cld
adc
loope
clc
sbb
loope
cmpsb
and
enter
out
shl
lods
ret
in
xchg
mov
aad
add
cmp
mov
mov
ret
arpl
dec
lock
stos
subb
leave
clc
iret
sub
jno
and
test
or
sub
xchg
and
push
xor
into
mov
fucomi
bound
push
cld
xor
inc
or
mov
sub
sbb
aad
ret
inc
into
push
jb
and
testb
mov
fwait
mov
lret
repz
pop
arpl
mov
sub
mov
sub
jns
inc
fsubl
mov
mov
js
mov
and
mov
adc
pusha
fbld
mov
xor
sti
decl
lret
cmc
pop
mov
loopne
mov
mov
popa
pop
adc
aad
sub
out
add
rcl
adc
lock
pop
popa
rcrl
cmp
jbe
outsb
imul
popf
cmc
jmp
push
mov
popa
pop
jne
mov
shl
int
mov
inc
cmp
mov
mov
aad
mov
jnp
cmp
add
scas
inc
inc
inc
dec
pop
loope
jp
lods
mov
scas
loop
dec
xchg
xor
cmp
cmp
cmc
adc
cmp
mov
jg
add
lahf
xchg
push
popa
adc
iret
into
cmc
jne
movsb
jno
es
cld
jnp
fcomps
pop
or
fstp
inc
scas
aad
jecxz
mov
dec
das
out
iret
cmp
rorb
aad
sbb
enter
movsl
cmpsb
stos
test
and
adc
push
xlat
pop
int3
pusha
sbb
jge
xchg
cmc
popf
lahf
rcl
inc
dec
or
and
dec
shll
shl
mov
mov
cmpsb
or
mov
cmp
imul
or
inc
sub
scas
jae
mov
repnz
lcall
inc
in
ja
add
mull
stos
or
lea
stos
sub
sbb
adc
xchg
push
mov
xor
scas
stos
xchg
sub
push
mov
pop
and
inc
out
cld
push
loop
lock
xchg
popa
mov
lret
movsl
xor
or
add
js
jno
add
and
gs
insl
cmpsb
pop
mov
rcr
push
ljmp
andl
scas
sub
aaa
xor
fdiv
notl
xor
pusha
dec
iret
mov
sub
cltd
divb
aad
and
adc
dec
mov
mov
aas
pop
pop
adc
cmc
mov
popa
adc
into
cld
jnp
sbb
pop
addr16
test
pop
into
incb
jnp
repz
and
adc
lahf
inc
imul
pop
popa
in
inc
mov
dec
movb
jno
movsl
repz
jb
loopne
es
jo
jl
outsl
ret
nop
rcl
sub
jmp
xchg
add
out
or
std
and
mov
pop
dec
and
jecxz
es
in
aad
ret
adc
decl
jnp
aad
inc
mov
je
cmp
mov
pop
and
sti
xor
fidivrl
ret
lcall
jge
mov
punpckhdq
xchg
mov
nop
cld
arpl
aad
cmp
stos
push
idiv
cmp
es
fucom
insl
stos
push
xor
fcmovnb
mov
sbb
cmp
inc
dec
xchg
fisttps
mov
and
lds
loop
into
mov
push
xchg
stos
sahf
js
rorb
pop
and
popf
cmp
and
cmp
lret
pop
int
cmpsl
push
test
icebp
inc
popa
idivl
lahf
pop
fwait
inc
in
and
repnz
rolb
push
jb
popa
iret
push
lods
movsl
sub
testb
and
xchg
cmpsl
mov
mov
xchg
mov
ljmp
add
dec
movsl
push
int3
xchg
sbb
dec
aam
or
xchg
stos
jns
dec
mov
sahf
mov
pop
push
ljmp
lds
sti
inc
out
loopne
out
cmp
adc
cltd
push
push
sub
adc
popa
adc
sub
jns
or
mov
mov
push
add
mov
rorb
and
sub
sbb
js
shlb
mov
push
add
sub
cmp
pop
jno
mov
and
movsl
mov
add
test
sbb
dec
bound
dec
stos
jmp
mov
mov
cmp
mov
aaa
mov
mov
test
lods
imul
dec
loopne
int
push
rcll
push
push
in
mov
dec
jg
mov
mov
push
lods
cmp
mov
push
mov
fs
rcrb
ds
dec
jmp
arpl
adc
dec
dec
lods
imul
movsb
movb
ret
mov
test
cmp
sub
xchg
int3
popf
jmp
xor
mov
jnp
in
icebp
es
sub
mov
ja
jo
inc
nop
stos
aad
int
pushf
xor
and
das
fs
pop
dec
or
arpl
leave
mov
js
out
and
mov
mov
sbb
ret
cmpsb
hlt
push
xor
inc
lcall
push
pop
enter
test
shlb
not
mov
jge
or
or
cmc
mov
ds
push
fs
movntq
mov
daa
std
mov
pop
push
sub
cs
cmp
or
mov
loope
inc
lahf
mov
std
aaa
cmp
lahf
pop
iret
dec
ljmp
or
push
pushf
mov
test
mov
mov
movsl
movb
push
mov
setne
imul
mov
int
aad
jae
lret
mov
outsl
mov
loope
stc
xor
es
scas
jmp
sti
movb
xchg
fstpt
out
add
pusha
hlt
imul
aad
cmpsl
mov
sub
add
movsb
addb
push
inc
mov
adc
push
pusha
fildll
into
mov
add
xchg
imul
push
or
mov
hlt
mov
pop
sbb
loope
mov
outsl
cmpsb
addl
sub
xchg
outsl
ret
cmpsb
add
lret
mov
addr16
sbb
fisubs
fmul
mov
test
mov
mov
mov
mov
add
jg
xchg
mov
push
cli
sub
sbb
arpl
repnz
imul
xchg
in
xchg
adc
divl
pop
pop
xor
xchg
mov
cmpsl
out
inc
jl
and
das
jmp
int
and
dec
outsb
mov
xor
rorl
lcall
mov
mov
pushf
call
aad
test
jecxz
inc
iret
cmp
push
rcrl
popf
clc
push
insl
das
inc
ud0
jp
push
push
mov
cmc
and
aas
pop
push
rorl
aas
test
push
xlat
sub
ret
push
jge
and
test
inc
stc
adc
movsl
xor
pop
sahf
fcmovnu
mov
inc
aas
mov
cmpsl
fst
xlat
inc
add
scas
sub
lods
nop
aaa
mov
jmp
stc
jp
je
jmp
cmc
or
mov
or
or
shlb
add
dec
fadd
xchg
inc
sahf
das
fisubl
xlat
xor
cld
aaa
or
push
inc
cld
pushf
sbb
das
cmp
pop
popa
cmpsb
icebp
xchg
dec
jns
int
div
aad
jecxz
aad
test
outsl
cmp
jge
int
nop
clc
add
jo
fninit
mov
aas
fimuls
aad
jecxz
cs
loopne
rclb
and
or
jmp
xchg
js
xchg
fs
repz
jecxz
inc
clc
mov
and
lret
repnz
or
loope
pop
stos
inc
imull
mov
rcll
sub
sub
mov
pop
cmpsl
adc
int
leave
sbb
jl
jnp
iret
sub
ret
ss
xchg
mov
cmp
call
aam
mov
jecxz
dec
cli
cmc
stos
jne
fldenv
mov
lahf
lods
push
cld
sub
jae
push
or
cmp
dec
xchg
mov
lds
testl
adc
adc
ror
lret
int
enter
outsl
add
xchg
js
sub
test
out
mov
jns
sbbl
xor
xchg
aad
stos
ja
sti
mov
mov
pop
lock
inc
cmp
push
stos
or
xchg
lahf
out
or
repz
pop
lea
in
mov
cmp
aad
xor
out
mov
dec
jl
nop
cmp
fwait
aad
fildl
gs
inc
dec
sbb
inc
xchg
jb
dec
sbb
jecxz
imul
jmp
in
xor
cwtl
mov
jnp
aad
push
cmp
adc
pavgw
pusha
sub
shr
lea
push
cmpsl
cmp
aam
dec
scas
adc
inc
ficomps
push
or
push
cltd
imul
or
sti
cli
adc
lds
and
lret
iret
xor
xchg
scas
push
cmc
outsb
repnz
aad
cmp
fwait
es
jg
xor
call
dec
fcmovnbe
xchg
notl
loope
cmp
outsl
or
addb
mov
je
int
in
int3
jge
aad
xchg
jecxz
mov
xchg
push
inc
aad
or
daa
fwait
mov
packssdw
cmc
mov
ss
mov
and
fsubrp
addr16
xor
ficoms
inc
mov
mov
dec
adc
sahf
push
jmp
mov
aad
or
jae
dec
mov
mov
les
xor
loop
clc
mov
ds
add
dec
jns
scas
sub
imul
or
loope
in
addr16
jle
notl
cli
adc
testl
loopne
cmp
cmp
mov
leave
mov
cs
in
movsb
sbb
mov
and
pop
lahf
mov
loop
loope
push
or
aaa
in
pop
jno
jno
add
xor
aad
adc
cmp
cwtl
xchg
xchg
andl
sub
jnp
into
cmp
push
jmp
dec
shll
adc
push
jecxz
lods
not
insb
jl
add
dec
xor
cmc
push
rcll
fimull
sbb
cmpsb
sti
test
imul
gs
lea
push
out
insl
jns
ja
out
iret
push
and
inc
inc
popf
add
jge
fcomps
xor
btc
xor
pop
inc
in
sub
jmp
pop
filds
mov
imul
sub
jno
lock
sub
std
adc
push
popa
push
mov
mov
lcall
ja
inc
or
shr
mov
or
hlt
or
xchg
mov
and
imul
rcrb
lret
cwtl
out
cmpsl
rorl
addr16
push
cmpsb
nop
outsl
cmpsb
xlat
cltd
cmc
mov
icebp
mov
sarb
and
test
les
or
add
stc
ljmp
xchg
jno
popf
hlt
ret
ss
or
sti
cmc
push
sub
ficomps
push
ret
xor
xchg
outsb
push
cmc
push
in
or
xchg
repz
jle
mov
or
sbb
or
dec
in
popa
or
iret
jbe
subb
mov
or
lods
insb
das
bound
in
push
adc
into
cmpsl
sub
jno
mov
and
xor
popaw
scas
lea
test
out
cmc
push
lock
push
mov
aad
or
lcall
enter
jns
push
dec
mov
inc
xchg
xor
jb
fisttps
ror
gs
lea
stos
sbb
pop
sub
pushw
jp
jmp
xor
test
pop
dec
lahf
cwtl
cld
js
shl
xchg
icebp
imull
lods
loope
mov
sub
add
pop
mov
pusha
inc
jbe
test
xchg
dec
or
pop
cmp
enter
mov
leave
cmp
rcr
jl
js
std
xchg
add
or
sbb
int
lret
les
arpl
or
or
lock
stos
cmp
int
popa
jne
mov
lea
mov
pop
pop
mov
or
jmp
rcll
or
lahf
adc
cmpsl
push
mov
mov
jmp
ja
xor
or
push
adc
cmp
stos
sbb
jle
into
in
inc
fbld
mov
and
into
movsb
jno
lret
stc
cmp
pop
jecxz
imul
decb
xchg
push
out
push
lds
repnz
dec
dec
fcoms
imul
xor
or
add
daa
cmp
and
mov
mov
jbe
xor
stc
jg
les
dec
int3
loopne
frstor
sub
mov
sbb
and
enter
popa
dec
dec
aad
xchg
adcb
leave
or
xchg
cmp
fmull
push
sub
inc
negl
aaa
dec
xor
xlat
lods
add
xlat
jle
aad
dec
aad
psrlq
jg
testl
adcl
add
push
add
xchg
jae
cmp
push
mov
movups
inc
jmp
xchg
stos
xchg
mov
sahf
mov
cmc
add
xor
push
scas
std
add
int
inc
cmp
cmp
mov
adc
push
xchg
icebp
or
xchg
sbb
or
sbb
scas
mov
add
cwtl
dec
mov
push
pop
stos
push
iret
pushf
cmc
mov
push
nop
push
mov
outsl
pop
lds
and
roll
js
dec
push
sbb
int
xchg
push
jo
std
loope
mov
mov
std
repnz
adc
push
lods
sbb
out
push
jmp
cli
rcrb
xchg
push
pop
adc
fsubrp
imul
scas
lret
enter
lea
jmp
xchg
push
sub
repnz
mov
cwtl
aaa
aad
pop
xchg
test
mov
testl
sbb
int
enter
pushf
lods
shlb
jne
xor
inc
fiadds
xchg
es
jae
pusha
xchg
jecxz
mov
sti
and
inc
roll
stos
clc
pop
aas
sarl
xor
push
ret
mov
jne
pop
imull
fcom
cmp
xchg
or
cmpb
rol
iret
push
mov
push
sahf
lods
shr
test
icebp
loope
nop
jl
rorl
pop
out
xchg
into
cmp
test
imul
aad
mov
sub
loop
dec
adc
inc
ja
sbb
lcall
mov
int3
in
mov
sub
cmp
int3
loop
int
xorb
fucom
mov
or
pop
push
jmp
movsl
push
sbb
outsl
xchg
lret
inc
mov
ljmp
sub
out
lret
icebp
pop
sbb
mov
outsl
arpl
decl
daa
les
pop
ljmp
pop
add
jmp
divb
or
call
aad
and
mov
out
xchg
xchg
aam
sbb
push
aaa
sbb
jge
pop
stos
jmp
or
jnp
sub
dec
scas
int
mov
out
add
js
popa
jnp
and
add
jge
fcoml
inc
xor
jbe
arpl
rcl
push
jg
mov
mov
shlb
in
pop
sub
call
je
cmp
jle
arpl
in
jns
cmp
xor
lods
adc
cmp
dec
shr
sub
movsl
sub
inc
adc
pop
add
xor
push
inc
aad
fisubl
xchg
mov
xor
mov
js
push
dec
inc
stc
dec
mov
sti
int3
jp
push
cltd
jl
aad
sar
mov
jle
sub
adc
aad
rorl
stos
cmp
lods
int
divl
xchg
sub
jne
je
mov
cmp
popf
repz
cld
push
pmulhw
or
pop
mov
sub
lods
int
sbbl
mov
cmp
pushf
int
cmp
cmp
or
xchg
leave
gs
dec
iret
out
lret
js
sbb
push
les
jmp
or
mov
push
mov
jns
pop
lods
scas
cmc
test
pop
je
leave
xchg
push
ss
pop
sbb
outsb
test
out
test
jnp
in
arpl
les
sub
or
nop
icebp
std
dec
cld
adc
cmp
pusha
jl
jg
inc
bound
adc
mov
test
inc
adc
movsb
cld
pop
sti
pop
pop
js
adc
mov
ljmp
cmp
ret
mov
nop
push
int
test
dec
add
fdivrs
lods
xor
mov
int
js
std
sti
cli
in
psubusb
out
cmp
cli
or
iret
xchg
sbb
cli
push
mov
sbb
jno
outsb
out
xor
pusha
adcb
jno
cli
loope
or
pop
int3
jbe
mov
idiv
xchg
arpl
jmp
out
icebp
sahf
mov
jnp
sahf
jnp
aad
cmp
xchg
psubsw
push
pusha
mov
enter
and
push
ss
jecxz
repnz
aad
add
mov
mov
in
push
xchg
jmp
clc
into
pop
in
cld
mov
push
dec
call
push
ds
jmp
pop
xchg
xchg
call
popa
out
cld
hlt
clc
inc
lods
ficompl
sub
cltd
out
cmc
aam
loop
aad
shlb
sbb
add
pop
into
push
icebp
mov
or
fisttpll
aaa
ffree
lea
pop
lods
mov
decb
js
fdiv
jp
pop
loope
and
mov
push
iret
push
imul
sub
mov
jns
pop
xchg
jge
mov
fimull
loop
sahf
cmpsl
and
jmp
lods
adc
mov
repz
sub
mov
jnp
push
repz
add
cli
cmp
mov
aas
mov
outsb
cli
cmc
int
lret
adc
movsl
lods
xor
mov
xchg
cmp
xchg
jmp
js
outsb
and
popf
inc
push
call
pop
inc
daa
adc
mov
movsl
insb
pop
repnz
pop
pusha
into
sub
aas
pushf
add
and
push
jg
mov
arpl
lret
jns
gs
test
ss
adc
cltd
lret
out
std
push
sbb
mov
test
xor
adc
cmp
add
fists
test
push
repz
popa
xchg
iret
cwtl
ret
xor
or
push
mov
cmp
pop
imul
dec
and
fiaddl
sti
push
cmp
gs
imul
pop
cmovno
jmp
pop
aaa
subps
enter
mov
cli
mov
cs
iret
mov
mov
cmp
jnp
rorb
ds
jge
fs
das
sub
stos
into
or
testl
push
mov
add
mov
aad
in
fwait
mov
fnsave
out
or
add
pop
popa
cltd
pop
jnp
stc
shlb
cmc
daa
mov
into
inc
cli
cmp
push
ljmp
fstpl
aad
push
mov
sti
notl
in
inc
adc
stos
push
aam
mov
pop
cmp
dec
mov
stos
int3
outsb
mov
les
lahf
das
movlhps
mov
add
xchg
inc
sub
adc
repnz
fstpt
pop
popa
out
fdivr
imul
fidivrl
xchg
add
lock
repnz
mov
push
mov
xor
jnp
fisubrs
adc
roll
mov
test
sbb
jo
in
add
pop
cmpsl
dec
je
mov
jle
push
cmc
fildll
clc
xchg
aad
inc
test
add
jmp
adc
mov
out
push
pushf
push
fsubl
orl
or
pop
rorb
add
imul
mov
das
lods
loop
push
sub
setno
mov
jg
pop
pop
testb
xchg
clc
add
and
or
int
push
aad
lds
cmp
jne
cmc
in
jg
xchg
cmp
push
sbb
lcall
stc
out
mov
into
and
aad
int
cltd
cmp
lds
sbbl
pop
int
data16
notl
or
pushf
stc
fmul
pop
iret
and
mov
or
mov
mov
in
xchg
xor
loope
ret
mov
mov
jnp
dec
stos
adc
or
or
data16
pushf
or
scas
stos
bound
aad
and
std
jb
and
dec
mov
dec
les
cli
sbb
cmp
fsubl
add
push
cmc
test
adc
arpl
popa
inc
dec
jl
rorb
jae
lret
cmp
mov
jno
rclb
or
and
jnp
lret
mov
fs
lods
int3
nop
addr16
aas
ljmp
emms
cmp
rorb
and
addr16
in
rcrb
add
fldcw
call
iret
sbb
add
call
popf
lock
mov
iret
jge
call
dec
lret
test
data16
jle
stos
cmp
xchg
push
addb
jg
add
loope
call
inc
pop
int
mov
aad
inc
shrb
cmp
daa
add
and
scas
idiv
add
js
mov
pop
into
loopne
push
js
rcrb
andb
cld
mov
into
xchg
and
or
inc
lahf
inc
nop
dec
out
mov
lret
js
xchg
dec
std
std
add
sub
fmull
stos
xchg
lret
out
in
adc
int3
fdivl
pusha
jns
push
mov
jo
ja
adc
in
adc
imul
cltd
inc
aam
lcall
rolb
or
inc
sub
push
add
fsts
lcall
push
rorl
mov
xchg
insl
cmp
mov
jbe
aam
test
jne
mov
xor
int3
mov
popa
sub
sarb
rolb
hlt
cmp
mov
sahf
sbb
cmp
xor
dec
xchg
jle
dec
sbb
call
loope
or
inc
or
out
pop
out
xchg
adc
adc
dec
in
adc
pop
xchg
fisubrl
dec
pop
lcall
xchg
adc
in
cmc
mov
fidivs
out
mov
movsb
xchg
xor
or
lock
mov
int3
mov
adc
sahf
out
lods
mov
or
push
test
cmpsb
outsl
push
divl
std
mov
repz
rorb
sub
loope
push
pop
int
lods
decb
push
pop
cltd
ret
xchg
jns
jmp
xor
jmp
into
cmc
ds
mov
mov
fcomp
lods
jl
iret
or
inc
dec
mov
inc
cmpsb
xchg
mov
sbb
mov
sbb
xchg
cmovg
lea
jl
out
shr
xor
mov
mov
jb
mov
pop
mov
mov
loop
std
jmp
cmp
add
outsl
inc
pop
and
cmp
lds
je
jnp
jmp
cmc
insl
jo
or
mov
std
imul
cmpsl
and
jp
test
pusha
in
jae
rcl
sbb
jge
adc
movsl
subl
lods
aam
jb
dec
inc
mov
sub
or
cmp
adc
xchg
imul
push
out
adc
mov
mov
xorb
std
call
mov
loope
or
mov
shlb
push
test
jecxz
mov
mov
aam
sub
jp
fcompl
test
imul
out
lret
cmp
inc
in
jp
sub
scas
mov
or
cmpb
mov
push
aam
into
int
cmpl
repnz
in
shrl
pusha
xchg
dec
mov
arpl
imul
loope
mov
cmp
dec
shrb
jl
ss
pusha
and
mov
mov
and
sub
test
fstpt
repz
test
data16
xchg
imulb
mov
jl
lods
int
lock
sbb
inc
les
aas
cmpsl
sbb
cmp
mov
mov
jns
arpl
fxch
and
xchg
xchg
and
adc
push
mov
xchg
add
cmp
imul
fxch
aad
xor
adc
rcr
xlat
inc
jecxz
scas
xchg
lods
and
mov
incb
in
addr16
fsubrl
jno
mov
pop
cmp
xchg
jp
and
into
std
sub
mov
or
int
adc
cli
dec
sti
lahf
cmp
ss
jbe
pop
dec
xchg
jne
jp
sbb
and
jmp
push
mov
xchg
push
repz
flds
dec
shll
inc
popa
das
add
out
pop
lea
pop
int3
pusha
pop
scas
call
push
lret
aas
lods
aad
or
aam
add
scas
loop
push
gs
jns
jge
nop
insl
pushf
pop
xlat
dec
test
jmp
cmc
aaa
jne
lods
insb
cmp
mov
add
popfw
cmp
lock
sbb
ret
lcall
repz
xchg
test
pop
mov
cmp
dec
int
xchg
jecxz
adc
jo
lahf
push
xchg
fiadds
and
xlat
adc
lods
add
or
into
mov
addr16
or
dec
popl
sub
movsl
mov
xchg
imul
sub
dec
lods
jmp
jmp
jg
sbb
mov
dec
mov
mov
outsl
test
std
call
int3
ss
xor
jge
cmp
xchg
je
js
and
pop
mov
out
test
lods
cmc
call
clc
cmp
or
or
lods
test
sub
jge
pop
ficoml
scas
call
fmull
ficoml
xchg
repz
mov
mov
mov
sub
sbb
or
lahf
shll
cmp
pop
pusha
cmp
loope
icebp
int
mov
jge
jle
int
aad
and
in
push
xchg
jl
add
das
loope
cmp
xchg
lahf
iret
and
cld
mov
mov
mov
out
lock
xchg
push
lods
mov
mov
xchg
gs
scas
add
lods
movsbl
outsl
xlat
adc
jmp
cwtl
sbb
sub
in
jo
jp
loope
int3
jmp
push
push
outsb
sbb
jns
lea
or
lea
fiadds
adc
dec
out
outsl
inc
sbb
xor
add
xchg
sbb
mov
outsl
inc
loope
xchg
push
mov
jmp
sub
in
aad
call
or
mov
jp
aaa
xchg
outsb
stc
and
loope
jno
or
mov
inc
lahf
roll
int
jns
push
jmp
add
jle
mov
cmpsl
sbb
cmp
xor
adc
repnz
adc
les
add
push
xchg
xor
leave
scas
int
mov
pop
or
jmp
or
dec
and
cmp
movsl
clc
jmp
aad
scas
or
iret
cmp
xchg
popf
add
pop
mov
icebp
cmp
sbb
scas
aad
inc
inc
stos
dec
fcmovbe
and
mov
sbb
mov
cmc
sub
push
add
mov
pop
push
mov
fwait
pusha
andl
sub
mov
sbb
inc
sbb
pmullw
dec
stos
das
lret
les
shll
xor
into
cmc
cltd
iret
mov
dec
imul
pop
test
std
pxor
jecxz
sbb
cli
cmc
gs
mov
in
fwait
in
shlb
sbbl
push
jnp
or
fs
or
stos
std
addr16
adc
sbb
int
xor
lods
mov
aam
fnsave
jl
sbb
or
and
mov
pushf
ss
xchg
loopne
and
add
mov
dec
pusha
push
or
xchg
popa
jmp
lods
add
inc
negl
into
jmp
loope
iret
fstpl
adc
mov
sub
scas
add
shll
pop
aam
nop
jne
lcall
jge
xchg
jl
mov
pusha
sub
inc
arpl
test
imul
mov
fisubrs
cmp
loope
pop
outsb
mov
cmp
mov
sub
jecxz
dec
scas
fs
jns
and
dec
int
and
lret
lcall
cmp
mov
sub
dec
push
mov
jl
mov
imull
aad
clc
lea
mov
add
inc
push
pop
ret
push
sub
scas
jl
inc
pop
icebp
cmp
mov
or
mull
fs
loope
push
xchg
jnp
jl
adc
movsb
das
cmp
xor
sub
test
scas
mov
xchg
outsl
popf
ret
dec
sbb
and
bound
sarl
adc
pop
sbb
cwtl
popf
or
xchg
cltd
lret
iret
bound
and
jge
xchg
adc
dec
cwtl
cmp
xlat
cmc
sti
sti
cmc
stos
icebp
pop
inc
call
jecxz
or
jno
sub
mov
in
push
pop
nop
mov
mov
out
loop
stos
lsl
sahf
cmpsb
and
sahf
ss
lret
mov
data16
xchg
cmc
jnp
mov
arpl
ja
sub
dec
test
push
xor
lods
add
repz
icebp
int
jbe
pop
jo
leavew
dec
sahf
fsub
push
add
mov
pop
lea
imul
lods
jle
cltd
jo
xchg
add
loop
gs
sbb
add
nop
cmp
sub
nop
lods
and
sub
inc
in
stos
int
shlb
or
adc
pop
mov
lret
decl
nop
inc
or
and
iret
or
xor
or
xchg
gs
cmovp
push
aas
fisttps
lods
jmp
xor
repnz
xchg
xchg
mov
bound
add
fcoms
shl
je
push
sub
out
adc
stc
sbb
jo
addr16
js
add
fdivl
pop
mov
or
inc
adc
push
call
js
adc
sti
dec
jmp
sti
cltd
aad
mov
stos
xor
jge
lods
inc
add
inc
jnp
pop
mov
loope
hlt
sub
repnz
inc
nop
sub
add
xchg
push
mov
js
sahf
cld
je
mov
filds
cli
mov
int
cmp
fldl
mov
aam
stos
call
jle
xor
dec
and
add
jae
repnz
cmovo
arpl
mov
cltd
std
inc
in
inc
into
jmp
lods
ja
pusha
cli
pusha
push
orl
xor
add
movsb
mov
cld
dec
call
mov
cmp
inc
std
cwtl
inc
bound
inc
mov
cmp
cmp
pushf
inc
addr16
fs
add
lods
and
mov
mov
movsb
cmp
fisubrs
scas
cmc
enter
xor
outsb
fs
jge
mov
push
jmp
sub
or
sub
scas
push
hlt
cmp
inc
mov
jo
adc
fstpl
jg
popa
mov
in
stc
or
fcmovbe
xlat
jno
scas
xlat
mov
add
fnstsw
pop
das
lods
push
or
scas
loopne
das
sub
into
outsb
and
jnp
xor
sbb
push
enter
loope
mov
cmp
push
fists
ficomps
test
mov
int
sbb
addr16
iret
pop
inc
out
in
fdivrs
jmp
lods
inc
dec
pop
jle
or
mov
lcall
xchg
dec
inc
mov
xchg
xlat
out
cmp
add
xchg
test
or
stc
or
add
xchg
sti
cmp
sbb
pop
push
mov
cmp
add
or
fstpl
inc
push
int3
dec
xchg
xor
ljmp
and
dec
cmc
dec
dec
addl
aam
mov
stos
jnp
fwait
add
mov
sub
push
aad
inc
adc
add
lods
out
add
mov
and
pop
xchg
pop
push
xor
fisttpll
mov
js
div
arpl
inc
cmp
sarb
movsl
adc
fucomi
andl
cmc
lcall
cmp
pop
jecxz
or
pop
mov
test
out
test
jno
cld
mov
xlat
inc
xchg
insb
popa
inc
lcall
dec
xor
cld
shrl
iret
jmp
addr16
ds
pop
fdivrl
imul
test
mov
xlat
push
pop
into
fs
les
fs
fsubr
xchg
xor
dec
cmp
adc
jge
mov
add
stos
aaa
ror
aad
cwtl
cmpsl
stc
movsb
cmp
mov
call
inc
mov
stos
adc
fidivrs
call
outsl
or
inc
ss
jne
fwait
push
inc
pop
xchg
adc
push
mov
pushl
pop
mov
xchg
test
enter
mov
icebp
int3
fbstp
pop
in
shlb
xchg
inc
out
push
dec
lahf
sbb
test
mov
mov
xor
outsb
push
jne
cmp
xchg
xchg
imul
pushf
push
mov
push
ret
mov
gs
out
sbb
push
cmp
push
push
cmp
sub
push
call
jp
andb
xlat
repnz
sbbb
inc
movsb
pop
sub
push
jge
adc
call
pop
and
aas
pop
in
pop
popa
popl
jg
and
jmp
or
adc
cmp
in
cli
or
in
jl
ret
scas
or
fs
out
mov
addr16
js
pop
orb
xor
sub
pop
lahf
or
outsb
dec
dec
ja
int3
mov
xchg
fildl
and
cmc
inc
test
loop
cmp
sbb
std
loop
int
rcll
jbe
mov
pop
ljmp
jb
cmp
push
mov
xchg
jg
sbb
in
out
cmc
mov
shrl
mov
push
dec
rcll
sub
jo
and
mov
or
fbstp
sbb
and
mov
adc
stc
add
int
jp
adc
test
dec
push
pop
mov
loop
daa
push
sbb
pop
in
js
shll
push
ljmp
test
ljmp
stos
int3
or
add
cli
mov
jnp
aam
cmp
mov
lret
xchg
mov
xor
fsts
cmp
rorb
jp
xor
iret
bound
out
xlat
mov
jp
stc
dec
pushf
pop
mov
mov
mov
int3
and
repz
fnstsw
adc
scas
jae
fisubrl
int
repz
xchg
add
push
xchg
xor
nop
jle
ds
jl
pushf
ds
mov
orl
test
es
lods
inc
cwtl
add
mov
jle
js
addr16
xor
pusha
jb
aam
jge
lahf
adc
inc
fimull
push
add
jmp
add
mov
pop
dec
cmp
mov
jno
xor
negb
sbb
std
test
pop
mov
pop
aad
or
into
pop
xlat
int3
adc
stc
fcompl
in
aaa
les
pusha
enter
mov
inc
xchg
jmp
into
jge
pushf
hlt
mull
fisttps
add
jo
mov
push
dec
and
dec
into
jmp
push
mov
fwait
into
das
adc
sbb
xchg
inc
xchg
jl
pop
or
mov
and
call
movsb
mov
mull
sbb
test
and
add
xor
dec
xor
into
and
or
test
add
adc
rol
xchg
sti
and
cs
xchg
nop
out
add
add
loope
test
out
ds
sbb
mov
xchg
xchg
aad
cmpb
fwait
ret
out
push
call
cmp
bswap
aad
mov
lahf
cmp
push
je
pop
cli
cmp
sub
test
in
jge
push
test
cld
cmc
insb
sti
ret
aas
adc
push
cmc
fcoml
divl
jno
push
cmp
add
or
cmp
mov
movsb
jmp
scas
xor
cld
ja
jl
jno
loopne
shlb
jmp
in
mov
int
and
lock
out
mov
pop
stos
scas
mov
inc
mov
add
add
push
add
out
jmp
push
in
es
in
push
xor
nop
dec
aad
adc
pop
sub
jmp
pushf
xchg
dec
mov
push
jg
push
push
leave
mov
xor
ljmp
sti
mov
sbb
sbb
imul
jp,pn
add
inc
stos
sub
jmp
xlat
sbb
dec
ljmp
sahf
sbb
mov
mov
xlat
and
sub
ret
popf
mov
adc
xorb
mull
fs
sbb
adc
jl
cmp
xor
call
cmp
dec
out
outsl
push
rclb
subl
test
in
popa
jo
jb
jnp
lds
push
lods
scas
lods
push
jns
out
jecxz
mov
bnd
pmaddwd
add
sub
push
pop
xchg
subl
jmp
mov
or
into
sub
jge
aam
into
stos
push
les
mov
pop
add
rol
stc
inc
sub
push
push
fisttps
jns
shlb
xlat
leave
cmp
lods
xor
orb
nop
pop
clc
cmp
sbb
imul
jmp
sub
push
rorb
enter
add
push
int
and
add
add
mov
cmp
test
pop
xor
in
test
cmp
add
mov
js
mov
addr16
jbe
sar
frstor
sub
fidivl
jnp
inc
dec
or
xchg
lea
sub
test
mov
test
mov
lock
or
lds
add
mov
shll
push
pop
inc
inc
testl
xchg
rcrl
sub
dec
push
xchg
mov
adc
xchg
inc
cmc
fsubs
push
dec
jg
sub
jp
mov
and
test
jbe
inc
imul
jle
shll
andl
lret
xchg
adc
in
or
cmpsl
xor
mov
cmp
shr
out
arpl
or
idivl
sbb
ret
dec
je,pn
mov
sbb
xor
es
pop
rcl
cmp
add
daa
je
and
aas
cmpsb
imul
fidivrs
ret
mov
mov
addr16
push
mov
dec
or
lea
xor
jb
adc
xchg
pop
sbb
fisubs
aam
mov
repz
test
mov
cltd
jle
out
std
or
cltd
cmp
add
xor
mov
sbb
scas
push
cwtl
mov
adc
mov
insb
jecxz
stc
jb
aad
pop
cmp
or
popf
mov
repz
ljmp
mov
xorb
popf
mov
sub
lods
adc
call
not
xchg
dec
aad
mov
adc
nop
out
sub
into
movups
in
mov
into
cmc
lret
loop
push
mov
bnd
pop
mov
inc
nop
push
pop
das
xchg
popf
dec
das
push
add
mov
outsl
mov
cmp
negb
cmp
push
jmp
jns
stos
imul
dec
add
fndisi(8087
mov
or
sub
mov
push
push
adc
inc
or
xchg
in
leave
mov
adc
or
fs
xchg
cwtl
push
pop
bound
cmc
jp
mov
mov
cli
lods
jns
adc
loope
jge
mov
dec
xor
push
repnz
sub
or
xchg
adc
push
cmc
je
jae
mov
scas
movsl
shll
lret
mov
cmc
lds
xor
cwtl
rorb
cmp
mov
aad
mov
jmp
loop
in
lods
stos
test
or
jns
loopne
scas
aad
arpl
loop
push
loope
mov
push
pusha
lods
in
popa
in
imul
or
add
mov
daa
xor
cwtl
mov
or
sti
iret
jp
xorl
and
lret
scas
jg
jnp
jns
rcrl
xchg
jb
into
jne
lods
push
aaa
sub
lock
push
sahf
push
xor
nop
nop
inc
fidivrs
add
jnp
pop
push
jg
cmp
ljmp
push
dec
mov
cvtps2pi
je
fidivrs
frstor
frstor
idivl
xchg
cmc
leave
pop
nop
mov
sub
sti
sti
mov
ret
push
mov
fs
sub
std
mov
or
inc
mov
sub
cmp
inc
pop
pop
std
mov
and
aaa
mov
rclb
dec
lret
leave
dec
lcall
adc
sbb
push
mov
cld
in
insb
test
mov
xchg
jo
popf
xor
frstor
xchg
js
jae
iret
mov
insl
loopne
decl
xor
loope
adc
adc
inc
imul
iret
movl
dec
shlb
xchg
mov
in
pop
push
fdivp
fstl
dec
mov
adc
adc
addb
mov
out
fnsave
outsl
clc
xor
cmp
push
testb
jbe
into
js
dec
aas
mov
das
addr16
sar
ljmp
insl
repz
jmp
sahf
add
rolb
mov
add
pop
ret
and
scas
jp
jmp
scas
idivb
sub
xchg
mov
cmpl
stc
fsubrp
insl
add
sub
jecxz
push
js
test
jg
cmpsl
xor
cmc
addr16
mov
loope
js
or
pop
shl
mov
jmp
jmp
clc
fcmovu
pusha
jb
dec
add
cmc
enter
xchg
scas
sti
fsubrs
inc
fucomi
or
js
dec
pushf
xchg
inc
jp
dec
push
push
adc
fimull
mov
das
jo
cs
push
btrl
jne
cwtl
pop
dec
popf
mov
sarb
or
call
cmp
jnp
xchg
gs
or
jmp
push
jl
xchg
lcall
dec
repz
into
shl
and
pop
push
in
out
xchg
jecxz
lds
repnz
xor
in
adc
clc
lods
outsl
imul
fwait
stc
xor
xor
cmp
lret
inc
addr16
or
xchg
add
jmp
mov
btrl
dec
scas
cmp
testb
pop
std
inc
imul
lods
cmp
or
rcl
or
int3
inc
fadds
sbb
add
repz
mov
call
dec
fstl
xchg
jns
dec
pop
movsl
rclb
cmp
mov
mov
and
mov
push
add
gs
cmpsl
xor
xchg
cmp
push
cld
push
add
out
in
gs
jl
data16
cli
or
cmp
dec
or
outsl
dec
and
data16
mov
add
iret
js
cmp
and
enter
rorb
pop
xchg
test
inc
jb
rclb
xlat
or
loope
and
adc
mov
into
pop
dec
out
xor
cs
jnp
push
inc
pop
mov
fsubl
fbld
mov
cmp
fdivrs
push
add
push
sbb
and
out
pop
sbb
insl
push
fwait
sub
jl
mov
mov
mov
out
or
sub
push
jmp
pusha
cmc
rorl
add
ret
ret
lds
lods
out
fs
sbb
fwait
adc
inc
shrb
mov
ret
ljmp
inc
adc
mov
daa
idivl
jbe
les
fwait
dec
cmc
imul
test
xchg
mov
stos
cmp
stos
push
adc
aam
mov
mov
lret
aad
mov
push
xchg
jge
jge
fldenv
dec
push
int
aad
mov
cltd
aaa
mov
insl
pop
pop
jl
nop
in
sub
inc
sbb
loope
out
movsb
out
dec
outsb
push
mov
cmc
bound
inc
imul
or
xchg
sub
bound
xor
fldcw
iret
ret
or
push
or
mov
jle
push
cmp
or
bound
mov
fwait
adc
shlb
outsl
mov
dec
fisubs
xchg
clc
imul
or
mov
lods
add
cmp
jge
les
pushf
dec
fwait
pop
adc
pop
js
mov
jbe
cmp
adc
icebp
es
rclb
outsl
pusha
sub
push
adc
loopne
sbb
xchg
cmc
mov
lea
add
or
pmuludq
fdivl
sarl
dec
push
popa
xor
mov
repnz
add
iret
lret
push
push
popf
frstor
call
lea
repz
inc
add
sti
stos
sub
jge
jge
and
cmp
cmp
adc
iret
jns
xchg
inc
negl
cmp
inc
dec
mov
adcb
jl
popf
addb
dec
push
mov
add
js
outsl
js
negl
xchg
rorl
xchg
xchg
sub
mul
or
in
or
popa
add
cmp
outsl
cmp
lds
pop
sarb
dec
sub
and
push
in
pandn
jo
sti
movb
arpl
cmc
jl
sbb
mov
jmp
les
jnp
iret
addr16
cmp
mov
xorl
jg
jmp
add
or
js
xor
dec
xchg
mov
dec
out
loop
jecxz
jecxz
mov
std
mov
jecxz
out
bound
repz
test
jecxz
cs
stos
loope
jecxz
push
xchg
mov
and
call
xlat
jo
cmp
test
inc
adc
push
xchg
inc
fisubrl
lahf
lods
insb
pop
stos
rolb
jne
xchg
test
xor
push
or
xor
push
push
sarb
in
test
sbb
adc
rclb
mov
pop
loope
sub
aas
scas
cmp
mov
fstpt
jge
arpl
mov
sti
dec
dec
xchg
imul
outsb
pop
movsb
push
and
mov
xor
push
sub
sbb
mov
sub
mov
sub
add
popa
pop
test
push
sti
push
fdivl
aad
pop
rcl
inc
mov
sbb
aam
sub
in
cli
mov
and
stos
or
pop
int
stos
sahf
mov
rolb
cs
jb
testb
dec
mov
hlt
mov
shll
mov
push
mov
inc
xchg
arpl
jne
imul
push
push
lods
or
arpl
lahf
pop
adc
gs
mov
push
jnp
movsl
mov
shll
push
sti
add
mull
test
xchg
std
xchg
loop
cli
dec
push
adc
mov
repnz
icebp
movsb
jge
in
pop
fcoms
jmp
jmp
xchg
int3
pusha
pusha
or
inc
inc
or
cmp
ret
andb
ret
cmp
psllw
sub
xchg
fildl
dec
mov
xor
nop
mov
loop
inc
dec
adc
les
adc
mov
ss
cmc
or
adc
ja
fldl
cs
stos
out
mov
in
shrb
sub
cmp
pusha
add
imul
enter
pop
ja
data16
call
ss
inc
mov
iret
shl
push
sarb
jecxz
ljmp
ficoms
ror
cmp
fcomip
test
ret
mov
into
or
xchg
mov
push
mov
push
fistl
push
insl
outsl
or
lods
or
les
loop
subb
mov
inc
fnstsw
jmp
aad
int
cmc
mov
inc
out
xchg
in
mov
popa
push
outsl
and
push
jle
and
pop
sbb
aad
lret
addr16
pop
je
imul
fcomip
pop
inc
scas
and
mov
lcall
mov
jns
adc
or
sbb
movsl
and
in
in
cmc
mov
mov
das
push
dec
aad
xchg
mov
pop
sub
push
lea
cmpsl
in
fsin
mov
and
pop
add
aad
adc
out
ss
loop
cmp
xchg
adc
and
flds
test
mov
sub
push
sbb
mov
jl
out
dec
arpl
iret
sti
dec
scas
out
mov
jl
mov
leave
pop
sbb
leave
lods
faddl
adc
test
xchg
jbe
into
cmc
in
ret
mov
dec
sbb
push
test
adc
and
in
cmc
push
les
jp
xor
push
out
pop
cmp
mov
aad
in
lock
cmp
push
not
cmc
push
aam
sub
xchg
aad
adc
jmp
bound
mov
loop
jns
adc
or
push
xlat
sub
mov
push
sbb
mov
lret
andl
xchg
adc
mov
aad
sub
dec
add
cmc
rcrl
sub
fs
push
iret
add
mov
adc
fstps
push
pop
lds
mov
les
pop
sub
jb
xchg
sub
push
addr16
push
jecxz
ret
cmp
cmpsb
cmp
ds
pop
mov
mov
jnp
rcr
mov
outsl
xor
and
dec
lret
jae
jge
mov
iret
mov
jnp
call
push
inc
inc
pop
pop
hlt
popl
mov
int
cld
mov
sar
stc
xchg
mov
int3
aad
mov
push
xchg
incb
xor
or
lods
mov
imul
adc
push
push
pmaddwd
cmp
shll
enter
mov
push
ss
dec
in
aam
int
cmp
jecxz
outsb
lret
mov
out
notl
and
adc
nop
sbb
cld
sbb
inc
popf
mov
adc
xchg
mov
fmull
sub
cld
cmp
into
mov
xchg
popf
pushf
xchg
dec
and
out
cmc
shlb
stos
aaa
cmp
scas
daa
ret
mov
or
mov
mov
aad
xchg
notl
mov
lcall
cmp
pop
insl
mov
les
jo
or
xchg
repz
pop
lock
lods
sbb
pusha
mov
popa
insb
xchg
enter
cmpsl
fdivs
jle
int
mov
cltd
test
push
fcmovbe
and
jmp
js
jnp
iret
icebp
mov
lods
pop
stc
dec
xchg
jmp
js
std
popa
add
ret
mov
inc
sub
pop
popf
les
stc
je
mov
or
popa
nop
cmp
repnz
cmpsl
fsubr
insl
div
mov
xchg
rcrb
aad
sti
xchg
cmp
leave
xchg
je
outsl
notl
stos
fstl
test
jo
ret
mov
daa
and
sbb
mov
into
dec
in
and
inc
dec
jl
pop
jmp
dec
and
stos
adcl
mov
mov
scas
lcall
sub
mov
mov
aas
in
sub
jo
push
imulb
enter
les
jb
mov
outsb
lods
push
jno
cmp
outsb
jl
icebp
mov
int3
sub
and
xchg
fwait
outsl
dec
cwtl
fcompl
and
jno
xchg
cmp
inc
jl
adc
int
jbe
add
sti
jno
movsb
cs
notl
and
or
lahf
pop
fmull
mov
cmc
test
inc
int
aad
or
xchg
sub
add
out
and
popa
xchg
cmp
shll
dec
sub
scas
xchg
jge
rcl
and
jnp
adc
psubsw
fwait
jo
lcall
mov
ss
mov
jmp
fucomp
in
aad
dec
movsb
rorl
jns
lcall
div
movsb
ja
enter
outsb
cltd
or
ss
sti
fisttps
and
pop
enter
mov
mov
aad
mov
lea
daa
out
cld
mov
sti
testl
rcll
push
dec
xchg
jae
gs
jmp
loopne
dec
cwtl
popa
mov
mov
pop
dec
mov
xlat
xor
mov
adc
dec
mov
mov
pushf
call
test
lods
aad
sahf
stos
clc
cmc
mov
push
add
sub
out
jns
arpl
mov
jnp
mov
mov
push
sbb
xorl
repz
mov
test
mov
daa
sbb
imull
aad
sarl
fwait
cwtl
sti
jns
wrmsr
fwait
popa
inc
les
dec
xchg
stos
push
daa
add
clc
cmc
mov
rorb
xchg
inc
pop
and
dec
outsb
pop
dec
push
call
loope
dec
xor
out
dec
loope
mov
mov
dec
in
gs
mov
insl
add
sbb
aad
pop
jecxz
cmpsl
mov
mov
xchg
cwtl
mov
cmc
mov
jns
xchg
ret
and
cmpsb
das
mov
mov
jne
xchg
mov
sub
ss
lock
add
pop
push
lock
imull
inc
test
xchg
cmp
mov
push
inc
jns
movsb
and
xlat
aas
cmc
int
or
xchg
or
std
rclb
xchg
cmp
div
sbb
mov
in
cmp
jo
stos
and
fimuls
fists
scas
mov
jbe
out
fdivr
iret
test
pop
test
mov
xchg
hlt
sub
jmp
inc
fistps
inc
iret
in
cmp
es
jae
ret
xchg
or
into
movsl
scas
pusha
add
jns
xchg
bound
jns
mov
adcl
inc
add
sub
mov
fcomip
fldlg2
shll
shr
adc
push
std
pop
iret
inc
pop
cli
fs
fistpll
into
add
sqrtps
mov
xchg
xchg
dec
out
sub
sahf
int
xchg
or
sbb
aad
aam
ret
rcrb
mull
push
jmp
mov
mov
ret
lock
mov
inc
hlt
mov
les
adc
in
in
aad
and
lahf
fwait
xorl
xor
add
lods
dec
xchg
mov
cmp
or
sub
je
adc
push
cmp
pop
jmp
jmp
pop
mov
repnz
movb
push
aas
test
sub
cmp
scas
psllw
pop
mov
mov
test
mov
push
stc
popa
mov
mov
mov
test
es
adc
mov
mov
jge
loop
scas
cmc
pop
in
inc
jno
add
testl
inc
stos
push
test
repnz
and
pop
call
jp
dec
add
fsts
imul
cmp
rol
pushf
test
clc
mov
sub
pop
mov
and
add
jle
add
and
outsl
outsl
insb
and
aad
cmp
scas
aas
ja
add
movsb
mov
nop
mov
add
adc
cmp
je
jl
jb
sbb
push
cmovo
bound
mov
dec
cs
ljmp
push
lods
jmp
mov
jecxz
sub
enter
jbe
data16
mov
dec
insb
sbb
inc
sbb
push
push
push
in
lods
cmp
push
fxch
lods
mov
jo
cmp
movsb
popf
lods
or
jle
cmc
cmp
pushf
fwait
push
mov
cli
and
adc
mov
sarb
or
jns
test
shrl
pop
lds
lds
sbb
mov
inc
add
jecxz
xor
xlat
add
or
sub
xchg
mov
das
push
mov
out
push
arpl
lcall
or
jo
jecxz
arpl
aam
cmp
das
add
xchg
loop
push
loop
or
mov
in
pop
pop
mov
dec
mov
sti
into
pop
sarb
mov
aad
test
pop
mov
jg
jns
repz
je
mov
xchg
mov
mov
adc
js
push
mov
loope
sub
push
not
test
mov
inc
add
adc
scas
packuswb
sbb
jmp
dec
dec
push
lea
les
movl
jo
ficoms
stos
stc
pusha
lods
xlat
mov
gs
cmp
gs
mov
pop
stos
stos
into
testl
out
nop
loope
fimuls
and
mov
ljmp
pop
adc
mov
xor
cmp
mov
adc
in
sub
dec
inc
rcl
pop
adc
dec
mov
xor
leave
call
and
jg
test
lea
xchg
test
mov
adc
aad
movd
bound
shlb
or
loope
into
std
or
arpl
ret
rep
push
pop
dec
stc
aad
ljmp
test
sub
loop
mov
xor
fcmovne
out
pop
arpl
sub
dec
int3
pop
add
mov
std
ret
movsb
mov
push
jo
pop
jae
jle
mov
jge
filds
rcl
mov
pop
repz
push
mov
jo
hlt
pop
loopne
mov
repz
fwait
mov
ss
repz
shll
test
push
imul
mov
sub
xchg
sub
fisubrl
sub
ss
fnstsw
testl
mov
in
jb
jmp
int
cmp
pop
mov
sbb
dec
mov
lahf
mov
testl
inc
inc
sbb
lods
ljmp
int
mov
lahf
or
test
cmp
xchg
leave
xchg
pushf
std
mov
je
jmp
sub
mov
adc
es
adc
push
fbld
orb
in
jae
addl
mov
lods
rorb
add
or
mov
push
lea
idiv
stos
cwtl
mov
es
imul
pop
pusha
sbb
bound
rorb
and
dec
in
dec
loop
dec
mull
stos
xchg
xchg
cmpsb
xchg
fcoml
movsl
dec
pop
xchg
pop
inc
cmp
cltd
lahf
xchg
aas
scas
fstpl
cmp
das
xchg
push
rclb
iret
popa
jmp
ljmp
int
test
jne
cmc
shrb
push
pop
fildll
call
mov
xchg
movsb
cmp
in
mov
repnz
cli
mov
fimull
sbb
ljmp
shrb
mov
mov
jne
outsb
int
sub
icebp
mov
repnz
mov
pop
xor
std
cs
and
rcrl
inc
xchg
or
aad
cmp
fmuls
iret
sub
sahf
xchg
add
mov
stos
or
add
insl
jae
push
xchg
es
mov
sub
add
out
lods
das
mov
outsb
int3
movzbl
shlb
mov
adc
daa
arpl
mov
sub
dec
sub
mov
adc
xor
jp
cmc
pop
inc
pop
mov
inc
xor
dec
pop
cmpsl
mov
cwtl
ljmp
push
xor
xor
out
jl
in
adc
popl
pusha
fsubrl
jmp
rorl
popa
jl
adc
ljmp
sti
pop
popf
outsb
cmpsb
scas
std
aad
xchg
popf
xor
sbb
cs
sub
xor
push
sbb
adc
sbb
mov
shl
insl
sbb
cmp
push
xchg
and
inc
push
fldt
dec
adc
cltd
inc
arpl
inc
sbbb
out
cmp
sbb
test
dec
arpl
xchg
mov
mov
mov
mov
in
sbb
dec
xchg
fst
adc
mov
jb
and
dec
cmpsb
jmp
sbb
mov
iret
cmc
pop
push
or
mull
sar
xor
xchg
push
negl
testb
adc
push
or
lods
xor
test
cmp
notl
inc
sub
data16
xchg
jle
mov
xor
inc
cmpsb
cli
cwtl
and
adc
sub
mov
cmc
int3
and
mov
out
inc
and
and
lahf
rcrb
xchg
sub
es
push
mov
cmp
pop
sbb
push
xor
out
sbb
rcr
push
mov
jo
adc
arpl
aaa
sbb
jle
add
inc
push
push
inc
sub
push
lcall
lahf
test
xor
jns
or
xor
xlat
lods
jb
pandn
push
lock
adcb
jmp
sub
lea
std
sarb
sub
iret
mov
fs
leave
cmp
out
ds
cmp
jl
daa
jl
push
sbb
sbb
lods
cmpsl
xor
fidivrs
addr16
inc
mov
repnz
and
push
jl
test
mov
ror
or
jge
pop
mov
dec
or
and
leave
and
cltd
and
fucomi
sub
rorl
outsl
in
ret
iret
jno
dec
bound
sub
cwtl
sarl
mov
mov
cmc
inc
rclb
gs
addr16
gs
or
not
push
cmp
out
dec
and
dec
cmp
lcall
add
push
ljmp
xchg
pop
mov
mov
adc
push
imul
sub
cmp
into
loope
sbb
and
cmp
icebp
push
xchg
shll
bound
dec
aad
shlb
mov
repnz
call
in
and
mov
mul
xchg
leave
jl
mov
sub
in
fwait
jae
add
lcall
jmp
test
mov
xchg
cwtl
xchg
loope
mov
mov
sarb
int
and
ljmp
fisubs
push
sub
push
ja
cmc
gs
fisubrs
inc
mov
subb
ljmp
shrl
push
jg
mov
pop
dec
mov
sbb
jg
push
rorl
nop
test
xchg
in
les
mov
or
cmpb
push
or
cltd
lret
daa
movsb
pop
gs
lds
push
fisttpl
loopne
nop
pop
jo
jnp
bound
out
push
sub
sub
xchg
or
cli
mov
or
pop
js
mov
jl
push
fstl
xchg
jecxz
mov
sahf
fstpl
mov
arpl
mov
jmp
scas
adc
andb
or
jp
iret
sub
mull
mov
push
incb
in
push
sar
jmp
loop
mov
sub
sbb
or
fdivrl
lods
mov
notb
fstpl
add
aad
cmp
mov
popa
dec
mov
jge
outsb
or
xchg
mov
or
xchg
push
xor
ljmp
leave
shl
in
bound
std
movl
dec
ds
inc
jle
leave
adc
repz
gs
rolb
cmove
mov
jnp
add
cli
inc
jmp
stos
and
xor
loopne
fcom
jge
fwait
pop
aad
jl
outsl
adcb
outsl
test
sbb
aad
adc
and
push
int3
ljmp
fiadds
or
xchg
lret
cmp
stc
mov
add
mov
dec
test
int
insb
pop
mov
cmpsb
int
pop
or
repz
les
cmpsb
push
rol
ficoml
mov
push
dec
popf
and
mulb
call
dec
dec
stos
xchg
popa
push
and
stos
cli
insl
add
xchg
iret
in
fmull
jmp
push
scas
add
jmp
into
jae
push
cltd
int
and
mov
jne
push
ljmp
js
sub
mov
testb
inc
aas
mov
jl
xchg
stos
xor
cmp
out
xchg
sahf
fcoml
fdivrs
xchg
mov
cmpsb
mov
mov
jmp
xlat
jnp
stos
pop
pushf
testb
addr16
pop
int
jge
dec
cmc
jne
das
fnstenv
loope
shll
repz
dec
and
out
rclb
and
adc
stc
jmp
gs
sahf
subl
icebp
aad
aas
adc
femms
pop
or
fists
movsb
hlt
push
jge
dec
xchg
cmp
out
cmp
lods
xchg
sti
add
jno
or
inc
adc
cmp
xchg
jge
aam
mov
jl
in
mov
cmp
test
dec
inc
imul
fstpt
inc
mov
xchg
xor
or
mov
dec
notl
mov
int3
in
testb
or
mov
push
push
sub
or
mov
pop
aad
outsl
das
sub
test
adc
mov
lds
andl
repnz
push
xchg
or
shl
shrb
xchg
adc
xor
cmp
and
sti
push
testl
int3
inc
mov
movsb
nop
out
cmc
ljmp
and
mov
jns
pop
jnp
icebp
and
clc
std
xchg
xchg
mov
test
xchg
mov
jg
cmp
pop
js
repz
icebp
cmp
loopne
js
insb
scas
repnz
mov
or
fs
xchg
cwtl
outsl
push
pop
lcall
repnz
test
mov
jge
jmp
xchg
sbb
mov
das
fwait
mov
and
cmpsl
jmp
movsl
sahf
mov
xchg
lock
or
test
push
jl
mov
xchg
adc
bound
cmovg
fsts
aaa
mov
pusha
rol
mov
sub
and
mov
cmpsb
loope
jp
mov
push
xor
sub
mov
leave
xchg
clc
pusha
arpl
cmpb
mov
push
mov
mov
adc
pop
sti
sub
inc
cmp
push
mov
int
bnd
mov
jl
pop
clc
hlt
mov
jb
and
cmp
aaa
inc
dec
mov
fs
mov
dec
xor
pop
les
inc
jns
rolb
dec
and
cmp
aad
inc
loope
jo
decl
or
mov
loop
push
adc
cltd
add
cs
fisubl
in
cld
xchg
dec
setne
negb
push
aaa
imul
inc
xchg
jae
sbbb
sub
mov
cmp
and
cmp
aad
pop
clc
and
popa
jle
pop
das
aaa
and
loope
pop
lods
add
xor
and
mov
testb
mov
mov
jnp
or
pop
ret
adc
mov
xorb
push
inc
xor
cmc
or
orl
rol
inc
add
pushf
cmc
aad
mov
xchg
daa
xchg
mov
or
stc
iret
cmc
inc
test
jbe
test
sub
cmp
hlt
mov
out
js
and
lea
jmp
mov
jbe,pn
pop
push
adc
and
add
cld
sti
cmp
cmp
push
push
sub
cltd
adc
push
in
and
push
cmp
ljmp
mov
aam
out
lods
sub
jb
sti
iret
dec
add
push
pop
popa
int
mov
or
push
les
mov
js
cmp
movd
call
xor
fnstcw
int3
data16
cmp
sub
jnp
subb
call
mov
mov
mov
lds
inc
test
pop
js
mov
or
sbb
cmp
mov
sub
inc
int
in
dec
mov
outsb
cld
test
dec
repnz
int
cmp
xchg
cmp
loope
cmp
or
push
pop
adc
jl
aad
jae
push
cltd
push
inc
and
push
cmpsb
fs
adc
out
aaa
mov
incl
sbb
addr16
fxch
or
sahf
in
mov
jl
jge
xchg
cmc
mov
cmp
add
xor
mov
insl
js
outsl
aad
push
fwait
and
pop
xchg
test
or
push
loop
jnp,pt
sbb
lock
dec
loope
jp
mov
jge
test
add
add
and
pop
cmpb
fwait
enter
pop
int3
int
fcmovne
and
loop
imul
and
jb
mov
push
xlat
sub
les
movb
mov
lret
insl
cwtl
jg
dec
mov
and
loopne
sub
push
popa
scas
cmp
int
inc
pop
inc
les
lahf
outsl
xchg
fldl
inc
pop
data16
fs
daa
push
xchg
inc
cltd
push
adc
lock
push
incb
aad
data16
mov
dec
pop
sahf
inc
and
pop
shlb
and
scas
lods
stos
or
and
xchg
fcomip
xchg
mov
mov
imul
add
dec
xchg
imul
out
cmp
mov
push
imull
pop
aad
sbb
xchg
arpl
jl
add
lods
xor
cwtl
xchg
dec
mov
pop
mov
jo
adc
add
push
lret
shrb
xor
imul
outsb
insb
push
add
xchg
mov
pop
xchg
mov
lcall
push
mov
adc
bound
out
xor
cmp
call
les
insl
cli
jnp
mov
dec
mov
cli
nop
mov
je
repnz
push
dec
dec
outsl
sbb
mov
pop
push
jge
and
xchg
cmc
iret
sbb
xchg
mov
sahf
push
leave
fcoms
push
xchg
sbb
cwtl
jmp
out
imul
or
push
adc
std
dec
mov
es
fisttpll
fbstp
mov
nop
add
xchg
inc
sahf
and
cmpsb
mov
push
ja
test
sub
into
mov
fs
cmc
and
lcall
nop
xchg
hlt
xchg
jns
push
fisttpl
push
into
inc
cwtl
fidivrs
push
outsl
mov
int3
fstps
and
pusha
jg
mov
imul
adc
cmp
lods
rolb
add
xchg
enter
cmp
pop
cmp
or
jae
div
mov
jmp
jle
sbb
mov
fnstenv
lahf
jle
aam
push
cmp
dec
xor
cmp
jecxz
xor
cmp
mov
jne
das
or
arpl
xor
inc
inc
jb
push
push
insl
sahf
pop
jmp
insl
pop
lea
inc
dec
scas
push
test
dec
cs
notb
jne
push
ljmp
or
sbb
call
pusha
cmp
sbb
test
add
push
popa
pop
jmp
adc
mov
mov
cmp
adc
sub
sbb
punpckldq
out
and
outsl
and
fdivrs
into
arpl
push
fldl
jp
or
rolb
push
iret
sub
or
call
xor
out
or
sub
dec
push
ss
mov
aad
stos
decb
or
dec
jns
xor
add
cmp
bound
cli
enter
jg
or
xchg
cmp
mov
inc
out
cs
cmp
adc
in
out
add
sbbl
arpl
cmc
or
sbb
fsub
xchg
idivl
sar
add
das
xor
inc
dec
jl
mov
push
adc
jmp
push
dec
aad
xor
cmpsl
cmc
movsb
pop
movb
cld
cmp
xchg
xchg
push
adc
mov
or
push
aas
add
lods
into
out
mov
and
movsl
sbb
adc
mov
xchg
mov
test
mov
cmp
fildl
cmc
inc
xor
js
cmp
ret
ss
jns
xchg
fnsave
ja
idiv
push
in
xchg
out
int
and
std
inc
or
cmp
push
fisttps
mov
sahf
decb
rcl
movsl
inc
jns
popl
add
icebp
test
aas
movsb
fmuls
into
push
mov
cmp
and
cmp
pop
leave
call
push
mov
int
pop
cmp
xor
dec
rolb
psubsw
and
mov
cltd
and
mov
mov
call
sbb
scas
imul
into
mov
mov
bnd
jnp
and
add
in
xor
flds
mov
add
sbb
pop
push
nop
mov
sub
arpl
inc
or
imul
push
subl
les
fimuls
int3
inc
daa
fldl
add
cmp
hlt
xor
jl
aas
iret
inc
mov
outsl
divl
not
lea
ds
sub
lock
lahf
mov
or
nop
ret
pusha
or
rolb
ret
or
addr16
push
bound
fidivrl
sbb
cs
std
test
sub
in
mov
imul
shl
xlat
aad
fmul
pop
lea
jae
gs
dec
pusha
mov
lcall
sbb
and
xor
or
cld
ljmp
cltd
fdivl
in
mov
sti
push
jmp
inc
push
sub
push
sub
xchg
push
jmp
xchg
stc
mov
repz
and
test
cld
in
test
add
stos
cmp
in
out
and
cli
dec
cmc
xor
mov
sub
imul
mov
mov
aad
sub
andb
stos
cld
aam
les
xchg
lret
nop
les
sti
test
mov
pop
mov
aad
inc
outsl
jo
mov
jl
push
rclb
xchg
pop
jge
mov
fists
fsubrs
dec
call
inc
repz
pushf
mov
sarl
movsb
cmp
jl
or
out
or
pop
push
dec
dec
leave
movsb
push
xchg
pop
mov
jbe
rcrl
mov
clc
call
xlat
sbb
in
jge
lahf
add
iret
lock
dec
leave
mov
in
sti
jmp
stc
mov
jecxz
rcl
mov
mov
cmp
iret
adc
push
call
aaa
test
arpl
pop
insb
repz
adc
ljmp
icebp
iret
rorl
dec
loopne
push
std
dec
jge
fistpll
cld
mov
out
and
mov
push
pusha
pop
sub
int
stos
into
mov
xchg
stos
lock
scas
mov
cltd
scas
xchg
cmpsb
cmp
lds
rorl
lods
cmp
arpl
or
test
sbb
xchg
jge
xlat
mulb
enter
into
aad
cmp
ret
sbb
ja
jb
and
adc
into
xchg
orl
dec
outsb
lcall
adc
cmc
decb
lock
js
popf
mov
mov
test
xchg
loope
ret
repz
adc
or
mov
dec
lahf
jp
data16
sbb
and
popf
mov
jno
repnz
shr
add
dec
lcall
inc
xchg
adc
pop
lret
pop
xlat
pop
dec
not
xlat
loop
push
pop
rsqrtps
xchg
jp
adc
mov
scas
fldt
dec
fimull
jmp
scas
jge
lock
test
mov
fs
rol
inc
sti
xchg
cmc
cmp
movsb
jle
push
fisttpll
aas
and
fcomip
adc
cmpl
rolb
bound
xor
xor
mov
ret
sub
imul
js
mov
aas
cli
inc
loopne
dec
jge
enter
in
mov
imulb
mov
std
dec
cmp
fmull
mov
sarb
fistps
out
pop
movsl
adc
loopne
into
out
xchg
lret
xchg
cwtl
popf
add
sbb
or
clc
xchg
jae
push
fisttpl
mov
dec
fnsave
leave
xchg
jmp
sub
aad
xchg
iret
imul
lahf
das
movsl
or
stos
xor
cmp
jo
lahf
mov
inc
xchg
cmc
fadd
push
into
or
aad
fwait
push
mov
push
jne
loopne,pt
xor
scas
sub
xchg
push
sbb
lcall
into
or
jmp
aad
les
jg
sbb
ja
dec
cmp
inc
leave
dec
mov
pop
test
stos
ljmp
out
adc
and
inc
into
test
daa
adc
idiv
sbb
mov
out
and
fwait
int
sbbl
fwait
jmp
ja
test
mov
mov
addr16
xor
inc
nop
add
aad
sub
das
push
mull
mov
mov
or
xchg
dec
and
rolb
bound
or
push
pop
fisubl
or
pop
mov
lods
loopne
mov
cmc
cwtl
es
pop
movsl
xchg
pusha
jnp
or
dec
xorl
test
lods
fisttps
imull
shrl
mov
adc
call
dec
add
cmp
fnstsw
xchg
and
out
push
push
add
lods
enter
and
cmpl
aaa
or
notl
cli
arpl
or
addr16
pop
xchg
iret
sub
pop
ljmp
or
inc
or
dec
xchg
jmp
mov
mov
sub
xchg
roll
stc
dec
aaa
rcl
jns
mov
je
push
leave
dec
jp
not
lea
int
std
sub
stos
adc
shll
push
sar
cmp
inc
and
xchg
cmovne
addr16
or
pushf
cmp
inc
bnd
cmp
mov
and
adc
movsl
jmp
push
xor
push
sahf
out
es
jne
or
xchg
xchg
inc
mov
jmp
xor
lock
movsl
cmp
popa
pop
call
and
bound
sbb
push
xchg
and
mov
aad
lret
cmovno
jmp
aad
fwait
iret
mov
mov
mov
fisubl
loopne
scas
lahf
aad
dec
int
dec
js
inc
pusha
xchg
xchg
shlb
sub
cmp
xor
and
mov
imul
cmc
testb
push
lahf
and
fisubrs
movsb
mov
jo
dec
push
jmp
mov
aaa
imul
stc
bound
mov
push
test
aad
lods
mov
insb
xchg
daa
jb
cmp
xchg
mov
sub
mov
push
add
adc
icebp
enter
mov
iret
xchg
cmp
bound
ja
fsubrs
jno
fistpll
push
mov
xchg
adc
mov
and
xor
jge
ja
push
pop
sbb
adc
mov
mov
mov
imul
out
add
or
call
sub
out
adc
dec
xchg
mov
jmp
jnp
and
pop
dec
xchg
stos
or
lods
mov
outsl
aad
inc
add
xchg
testl
stc
jge
sub
loope
in
jmp
or
xchg
pop
idivl
enter
mov
leave
inc
pushf
add
jp
and
dec
pop
add
ret
ret
inc
mov
sbb
std
pop
push
nop
orb
inc
jle
fldenv
xchg
mov
push
lods
aad
cmpsb
mov
add
mov
out
pop
es
dec
out
out
jge
aaa
dec
cmc
int
and
lods
sub
iret
and
dec
sbb
and
aam
nop
in
push
add
lock
sub
mov
pop
ds
popa
add
jo
push
negb
sub
scas
add
addr16
mov
fwait
shrl
aaa
or
scas
lock
mov
sbb
imull
sub
mov
ficoms
sub
mov
fcompl
popl
in
ljmp
dec
cmc
jl
push
stc
push
stc
jo
into
xor
sahf
dec
cmp
aad
rorb
or
das
fnstsw
and
mov
jnp
out
sub
dec
loopne
mov
xchg
add
mov
inc
dec
icebp
jecxz
mov
nop
cmp
sub
aad
jl
and
dec
push
jbe
jb
pop
pusha
rol
iret
das
loope
or
pop
jmp
inc
adc
ror
cmp
mov
push
sbb
lahf
xchg
sub
or
lret
pmullw
ja
out
mov
push
vpackssdw
ljmp
mov
cmpb
pop
mov
xor
mov
cmpl
xor
pushaw
cmp
dec
jmp
mov
push
xchg
dec
inc
push
and
into
loope
and
aad
sub
aam
jl
mov
stos
outsl
in
in
sbb
sub
shrb
xchg
mov
mov
in
fldt
inc
dec
add
in
decl
fidivrl
or
js
jbe
inc
lret
test
xchg
stos
out
cmc
pushl
cmp
adc
data16
mov
cli
aad
notb
out
stc
loope
idivl
add
push
mov
push
lods
inc
ds
push
arpl
add
in
xor
mov
push
jle
insl
push
lods
in
scas
push
adc
cmp
mov
aad
mov
sti
mov
xchg
arpl
nop
cmpsl
mov
sub
lods
xor
repz
movb
fiaddl
fldpi
lods
bsf
sbb
or
mov
inc
xor
sbb
xchg
out
lret
repz
mov
jnp
rcl
mov
push
mov
adc
mov
stos
sbb
add
or
aad
lock
in
push
and
pushf
dec
mov
lods
cs
xchg
sub
add
mov
pop
ret
les
push
out
or
pop
inc
int
fsubp
arpl
mov
scas
dec
cmc
jno
scas
cmp
cs
int
mov
xor
xchg
mov
sub
popa
movsl
repz
stos
mov
test
sub
jbe
pop
in
mov
pop
jnp
dec
jg
pop
nop
std
adc
jge
pop
into
mov
inc
shll
movsl
push
clc
lret
xor
dec
cli
cmc
ret
mov
mov
pop
mov
push
popa
or
mov
mov
mull
rcr
outsl
mov
mov
or
xor
movsb
dec
out
mov
call
or
jle
sbb
hlt
sar
in
popf
sahf
loopne
outsb
xchg
test
cmp
data16
lahf
mov
sbb
sarb
jmp
or
and
xchg
pop
idivl
mov
shl
xlat
or
ficoml
je
lods
push
pop
bswap
push
jns
pop
xor
xchg
cmp
data16
notl
push
les
cmp
jbe
nop
jns
dec
loope
pusha
xlat
mov
cli
outsl
cmp
cltd
sbb
cmp
push
gs
adc
popa
ljmp
push
xor
not
add
add
push
aad
cmpsb
incl
dec
xchg
push
ret
out
filds
and
mov
inc
idivl
mov
jo
sub
jle
gs
cmp
jbe
std
mov
imull
pandn
and
movsb
jns
loopne
idivl
mov
incl
in
popf
mov
and
cmp
cmc
pop
pop
ret
fisubs
dec
mov
aaa
mov
or
aaa
mov
inc
dec
out
adc
mov
dec
lea
dec
jne
cld
push
mov
and
popf
add
cmp
sub
push
repz
int3
xchg
add
sarl
mov
out
sbb
add
mov
jmp
std
xor
adc
mov
aad
mov
daa
pop
dec
pop
popa
xor
mov
out
jmp
add
cmp
push
dec
adc
mov
in
adc
aas
sti
xor
cmp
fdivl
push
cwtl
lods
and
pop
push
xchg
dec
clc
add
jle
sbb
lcall
sbb
mov
or
loope
push
push
cmpsb
cli
mov
repnz
or
mov
push
xchg
mov
out
dec
movsb
cmp
imull
or
std
jge
shrl
xchg
je
fsts
xor
pop
jle
cmp
iret
in
jmp
lea
fldenv
jg
cli
pop
into
mov
arpl
add
icebp
and
cmc
imul
aam
or
mov
xchg
push
inc
pop
loopne
movsb
cmpsb
daa
jne
dec
fsubrl
jne
xchg
adc
pop
jp
test
ss
xor
shl
rclb
fs
mov
jp
es
mov
es
cmp
cmp
outsl
aad
jne
mov
mov
jb
js
mov
sub
lcall
loope
outsl
mov
xchg
icebp
mov
and
sbb
fld
movsl
leave
sub
sbb
repz
xchg
outsl
lahf
jns
and
into
in
pop
aaa
lea
dec
subl
cmp
inc
loope
mov
scas
xchg
pop
jmp
bound
or
in
sub
das
add
mov
jg
aam
push
mov
fcmove
cmc
shll
loopne
scas
pusha
lahf
or
adc
addb
jp
and
psrad
iret
dec
pusha
push
jge
fdivrp
out
ljmp
pusha
jl
ror
sbb
mov
fisttpl
xchg
push
test
add
stos
jl
outsb
inc
ljmp
sbb
in
notl
stc
inc
out
sbb
jne
clc
aas
gs
das
aad
dec
jns
jp
and
ficompl
jns
xchg
mov
stos
out
or
mov
xor
sub
mov
fsubs
leave
jmp
mov
or
call
or
cmc
inc
push
push
jo
inc
mov
mov
and
or
sbb
popa
nop
test
mov
cmp
fdiv
cmpsl
mov
jecxz
aam
add
ret
lods
call
cmp
lds
adc
add
aad
inc
mull
cmpsl
std
and
adc
mov
repz
lcall
testb
add
jmp
out
adc
daa
jns
out
and
mov
dec
repz
mov
mov
shlb
incb
mov
pop
jbe
xchg
cmc
popf
add
js
mov
sub
test
mov
dec
inc
xor
test
or
cmp
sub
mov
mov
hlt
insl
ret
add
test
loopne
lea
das
ds
jmp
mov
push
insl
mov
rclb
xor
rcrb
loop
aam
and
lcall
cltd
lcall
iret
mov
repz
lret
lret
lods
dec
out
and
cs
pop
gs
xor
cmp
push
mov
pusha
es
push
and
loopne
pop
lgs
xchg
add
jecxz
mov
ficomps
mov
aad
out
inc
shrl
sarb
dec
sahf
jb
stc
pusha
inc
inc
leave
stc
add
push
icebp
popa
inc
xor
mov
sub
cli
popl
sub
adc
scas
xchg
jl
and
xor
std
mov
cmp
xlat
cmp
in
lea
call
lods
or
ds
jbe
mov
pop
test
and
cmpsb
xchg
scas
fwait
jp
cmpl
jmp
sahf
rcll
ljmp
rorl
fistps
jnp
cwtl
xchg
es
cwtl
inc
test
xchg
mov
popa
xchg
jnp
decb
test
leave
mov
rcrb
sub
inc
sbb
orl
xchg
push
test
ljmp
or
add
cwtl
lcall
mov
xor
mov
jg
bound
outsl
dec
pop
pop
sub
xchg
xor
insb
sub
or
mov
outsl
sub
in
xchg
fbstp
adc
xorb
or
jo
rclb
dec
xchg
lds
sbb
xor
ret
cmpsb
push
lods
adc
pop
popf
push
imul
dec
int
sbb
mov
in
pushf
in
mov
ja
test
mov
xchg
jae
lds
cmpsl
push
aad
xor
mov
popa
lds
add
insl
inc
or
mov
mov
lods
addl
insl
xor
testb
inc
loopne
clc
dec
add
xor
sub
xlat
aaa
stos
mov
lds
les
mov
cmp
mov
jns
xchg
xor
and
cmpsb
adc
pop
mov
ljmp
pop
not
inc
aad
push
rorl
mov
adc
fdivrl
mov
xchg
aam
popf
or
dec
sbbb
and
rorl
pop
xchg
and
push
ss
adc
fidivl
call
xchg
jmp
fs
sub
sub
adc
inc
inc
and
icebp
mov
jge
mov
ja
dec
jmp
adc
pusha
iret
shll
lret
pop
jmp
or
dec
xchg
lahf
stos
in
sub
adc
mov
or
push
add
shrb
push
push
mov
and
int3
push
adc
lock
sbb
mov
imul
loopne
outsl
scas
sub
push
clc
std
cli
xor
xchg
outsb
mov
testl
fs
sahf
inc
es
mov
stc
sbb
sub
push
ror
xchg
fmuls
stos
mov
into
jno
mov
adc
rol
jno
jo
dec
blcfill
fdiv
loopne
test
ss
mov
test
xchg
sub
mov
bound
in
adc
js
add
pop
xchg
bound
adc
cmp
mov
mov
xchg
shlb
mov
dec
mov
ss
imul
popf
rcr
cmp
adc
subb
xchg
cmc
mov
mov
into
not
into
and
sahf
int
in
push
mulb
pusha
aad
pushf
inc
push
sbb
or
pusha
outsb
out
jmp
pop
je
and
mov
jae
das
xchg
push
push
jge
iret
xchg
push
fimull
jno
insb
cmpsl
jae
jne
rcrb
test
inc
mov
in
mov
push
cmc
sarb
lods
xlat
xchg
bnd
and
xor
xor
popa
jne
loope
int
iret
push
aas
add
jecxz
adc
inc
dec
jnp
mov
iret
and
jg
adc
push
mov
cmp
adc
hlt
pop
cmp
loopne
aam
aas
out
jne
dec
out
rep
cltd
jbe
popa
pop
repz
adc
adc
cwtl
cmp
mov
fwait
cltd
cs
imul
or
fidivrs
mov
jp
pop
call
push
mov
and
mov
push
imul
cmp
in
xchg
pop
jmp
and
sub
xchg
jnp
ja
jns
adc
cmp
mov
dec
divl
lock
repz
mov
xor
movsl
fisttpl
sbb
dec
das
dec
pop
push
pop
pop
pop
out
pop
por
scas
insl
pop
iret
mov
or
cmp
mov
jne
sbb
and
pop
cmp
fstl
and
mov
mov
aad
aad
inc
jp
pushf
es
adc
aad
loope
fs
in
add
push
loope
mov
jns
popa
cld
incb
sub
insb
vmovapd
test
cltd
jne
cmc
dec
jb
mov
adc
xchg
or
jecxz
sbb
jge
jg
xchg
push
out
mov
mov
movb
test
push
mov
or
ja
dec
push
push
outsb
ss
mov
mov
lret
cmpl
jge
cmp
mov
inc
push
xor
into
cmpsb
das
sbb
cmc
lahf
xchg
mov
dec
mov
push
enter
jns
rcll
arpl
fadd
pmaddwd
mov
fldt
aad
push
jge
push
mov
adc
mov
mov
or
and
mov
psubd
mov
push
xchg
divb
dec
mov
adc
mov
test
cmpsb
fimull
repz
cmpsl
mov
push
cli
push
add
in
lods
jb
push
mov
jle
jns
repz
pop
nop
dec
push
add
adc
jmp
jg
dec
cmpsb
int
sti
adc
and
mov
adc
imul
mov
or
or
adc
jb
jo
dec
sbb
pop
lahf
xor
jp
mov
and
add
cmc
sbb
popa
mov
test
ljmp
cmp
in
testb
shlb
jns
les
leave
and
andl
jl
jbe
fdivl
out
sar
and
test
jge
rclb
aam
cli
push
stos
and
inc
and
sti
mov
fimuls
and
push
adc
mulb
cmp
cltd
dec
int
and
call
xchg
sbb
scas
cmc
dec
lods
test
idivl
cmp
pop
fistpll
fnstsw
test
call
jl
push
lar
shrl
push
int
aad
pop
fsubl
mov
push
inc
insb
jmp
dec
pop
add
fimull
adc
into
repnz
dec
pop
lcall
in
sub
xor
mov
test
int
out
mov
lea
xchg
aam
dec
aad
jns
arpl
xlat
ljmp
in
jmp
xchg
xchg
xor
push
jecxz
orl
xor
and
push
dec
cmpsl
je
pop
sarl
jo
sbb
cmc
xor
sbb
sub
push
mov
adcb
aam
push
popf
stos
push
stos
push
and
jnp
or
insb
push
aad
loope
lea
imulb
stos
adc
or
or
mov
lods
and
or
mov
lret
or
cmp
popf
xor
mov
lahf
bound
jmp
outsl
fiaddl
pinsrw
sarl
lods
cmpsb
xchg
push
pop
rcr
cmp
pop
jle
imulb
sbb
pop
mov
jecxz
mov
cwtl
cmp
loopne
cwtl
cmc
jb
sbb
int
stos
cmp
ja
xchg
xchg
es
mov
push
aas
das
pusha
pop
jmp
fildll
dec
aad
cmp
and
call
rcrl
aad
mov
mov
jmp
xchg
xchg
sub
and
cld
rcll
movsl
es
jle
out
aad
xchg
cmp
inc
clc
push
pop
mov
data16
jnp
xchg
jnp
or
adc
pop
sub
fcmovnbe
pop
adc
lsl
push
jnp
loop
jb
jnp
jo
mov
jmp
xchg
push
sub
addr16
js
jnp
in
imull
or
repz
mov
aad
pop
push
setne
cmpsl
fs
leave
rcrl
inc
cmpsb
leave
xor
popl
ret
in
mov
or
jle
xchg
sub
pop
mov
jecxz
sbb
lea
popf
repz
xor
or
mov
mov
add
sub
jge
aam
dec
cmp
adc
and
test
ss
sbb
popa
dec
and
sbb
test
aad
dec
adc
mov
dec
push
mov
pushf
mov
adc
mov
sahf
mov
lret
movsb
dec
pop
xor
xchg
jne
setns
cmc
jno
pushf
adc
in
std
stos
insl
jns
ja
cmpsb
ds
clc
push
pop
test
popa
sub
mov
lods
and
notl
jns
pop
test
in
inc
fmuls
loop
call
pusha
pop
jmp
adc
faddl
lahf
loope
pop
jp
stc
xchg
les
je
loop
dec
mov
push
jb
test
rcl
jp
pop
sub
into
xor
or
cltd
les
imul
push
pop
int
push
add
mov
ss
imul
xchg
testb
cmc
loopne
push
divl
pop
cli
and
test
aad
push
jp
mov
jmp
pushf
xor
jbe
sub
in
dec
das
js
in
shl
adc
and
ffreep
or
xchg
shr
into
mov
out
and
pusha
fnstcw
dec
fmul
sbb
popa
push
js
cmp
out
fdivp
dec
adc
sbb
and
js
out
fcomip
sub
sub
push
lcall
xor
dec
sbb
mov
add
jmp
inc
ror
loope
mov
xchg
dec
int3
scas
popa
cmp
cli
xchg
pshufw
jo
bound
repnz
fwait
mov
xor
jo
adc
cs
cli
sti
into
jne
rorb
aad
mov
xchg
mov
fidivrs
jge
adc
out
mov
mov
gs
push
loopne
ss
in
xor
add
lcall
je
fisubs
into
adc
cld
arpl
dec
adcl
add
sarl
fs
movb
jge
sbb
mov
push
gs
std
ror
popf
lahf
lret
mov
pop
test
pop
notl
mov
add
ret
inc
jl
or
in
es
ret
fbstp
and
xchg
mov
jbe
add
mov
mov
adc
xchg
aad
add
or
notl
add
frstor
pusha
or
fstpt
adc
inc
cmpsb
or
fs
movsb
popa
addr16
mov
and
into
in
aad
xorb
inc
adcl
lret
aaa
dec
sub
adc
frstor
repnz
std
adc
jne
xchg
test
or
inc
mov
mov
rol
rcll
push
mov
xchg
divb
inc
aad
xlat
jbe
and
add
in
lock
jecxz
sarl
jp
in
add
mov
and
ja
push
or
out
imull
pusha
fnstsw
push
sub
pop
jmp
mov
dec
inc
iret
cmp
test
fs
cmp
int
icebp
or
testl
cmp
push
add
lret
in
sahf
cld
xchg
push
aad
imul
cmp
pop
push
out
jae
mov
sbb
sbb
or
movsl
test
jmp
icebp
sub
jg
cltd
and
adc
adc
jp
aas
stos
cmovns
fcomi
cmc
fcmovu
or
aam
mov
sbb
jb
inc
cmpsb
outsb
lcall
jns
jae
out
fcoml
adc
pop
sub
sti
mov
out
xchg
adc
popa
push
imul
mov
and
test
pusha
sbb
or
nop
pop
pop
fnstsw
pop
arpl
rclb
push
lds
xor
lcall
popa
push
pop
sbb
into
mov
mov
in
mov
sub
jb
call
cli
popf
xor
insb
sub
call
mov
push
dec
jns
ficomps
push
fidivl
sbb
push
imul
push
js
or
sbb
or
mov
test
inc
xchg
push
jne
xor
xchg
call
mov
ret
jbe
mov
shrb
mov
cwtl
lods
jmp
adc
sub
lock
cmp
push
xor
xor
inc
and
fmull
mov
lret
je
dec
pop
jo
mov
loope
xchg
jnp
daa
outsl
lea
jg
sub
movsl
das
mov
repz
jl
lahf
fsts
clc
pop
dec
pop
mov
cmpsl
inc
enter
lret
add
imul
pop
xchg
mov
and
ja
cmp
test
or
negl
aad
jno
fwait
dec
mov
cld
push
jg
popa
or
mov
mov
imul
repz
inc
mov
dec
inc
faddl
aas
xor
dec
cmc
movsb
inc
sbb
dec
mov
add
dec
loope
imul
mov
pcmpeqb
dec
popa
fisttpl
stc
dec
xchg
test
mov
std
addr16
lahf
dec
cmpsl
adc
cmc
adc
push
pusha
fstps
cmp
add
and
test
xor
push
stos
jmp
roll
cmp
sahf
lahf
iret
sub
cld
jecxz
jecxz
push
in
scas
mov
mov
inc
xchg
nop
pusha
xchg
mov
lods
scas
imul
cmpsl
call
mov
adc
shr
jnp
jmp
dec
jg
addr16
push
rorl
jnp
test
mov
jo
les
mov
add
mov
jl
fldl
jo
cmp
movsl
jp
stc
shl
sub
inc
mov
scas
call
out
push
xlat
inc
test
mov
test
push
mov
ja
jmp
jg
cmc
in
dec
xor
push
push
in
test
mov
iret
or
das
out
xchg
faddl
xor
xchg
cmp
scas
sub
mov
lock
out
dec
dec
push
xchg
out
push
add
pop
xor
mov
push
cmp
pop
lock
int
aad
push
sti
andb
sbb
test
repnz
add
adc
mov
decb
stos
cmp
pop
xchg
jle
push
cmc
dec
nop
popf
leave
cli
xor
mov
aad
test
test
jl
push
and
mov
cmc
adc
aam
push
mov
imul
in
cmp
in
sub
jae
ret
aad
cmpsb
jmp
and
xchg
mov
popf
pop
std
adc
in
pop
loope
mov
cld
cld
jp
adc
push
std
out
int3
mov
adc
mov
jg
clc
dec
cmp
cmpsl
hlt
ljmp
jnp
clc
mov
mov
add
test
push
push
cmpsl
arpl
cmp
mov
fwait
sub
or
cltd
mov
imul
and
addr16
scas
pop
and
dec
aad
sbb
idivb
sti
fidivrs
pop
mov
adc
sub
xchg
jp
sbb
movsb
cmc
orl
mov
lock
jp
enter
ror
and
pop
or
xchg
mov
test
into
inc
pop
aad
push
or
cmp
jmp
mov
gs
or
jno
int
scas
lea
inc
inc
push
lods
repnz
add
notl
mov
jmp
popf
sbb
lahf
pmaddwd
roll
or
adc
cmc
jg
ret
std
aad
fcoml
shll
cli
mov
lret
fcomp
std
insb
sub
adc
es
arpl
js
leave
jp
cs
xor
jle
adc
outsl
xchg
ret
jno
fbld
mov
or
mov
sbb
test
push
dec
mov
repnz
shll
int
popa
mov
dec
std
adc
dec
popa
in
jg
lods
sbb
cmp
push
imul
adc
aad
lret
insl
shl
mov
arpl
push
adc
cltd
cmp
adc
mov
mov
outsl
aad
pop
mov
xchg
faddl
jnp
jno
push
movsb
inc
or
xlat
ficompl
scas
add
and
xor
cmp
test
clc
decb
out
cli
sub
and
iret
mov
adc
mov
movsl
or
or
push
fcmovnb
jmp
imul
lahf
fwait
dec
inc
enter
cltd
mov
jmp
sbb
inc
or
repz
insb
lods
outsl
lahf
loop
dec
jnp
out
xchg
mov
push
cmp
dec
out
and
das
insl
or
add
outsb
dec
xchg
rol
mov
dec
outsl
lods
into
xchg
mov
mov
jno
xchg
popa
mov
aad
fdiv
imul
cltd
mov
cmc
repz
lret
popa
shlb
ds
inc
cltd
mov
adc
mov
divb
int
lcall
aad
add
cli
aad
notl
sbb
jae
mov
sub
push
fdivrs
push
mov
imul
lcall
sbb
into
dec
and
dec
das
sub
addr16
test
and
pop
cmc
push
lods
add
inc
sahf
cmc
leave
push
and
jle
xchg
mov
out
in
sub
xchg
aam
adc
nop
in
inc
or
pmaddwd
movsw
dec
aad
xor
mov
movsb
sub
jecxz
fidivrl
shll
or
imul
cmp
in
negb
push
pop
stos
cmp
cmp
insb
and
sahf
fsubl
lret
imull
mov
or
push
cmp
shll
jae
test
mov
sub
mov
inc
rcrl
inc
jmp
mov
cld
cmp
cmp
push
inc
push
daa
ss
sbb
loope
js
ja
gs
leave
addr16
mov
sub
pop
inc
mov
sarl
stc
decl
inc
imull
or
aad
mov
cmp
das
jmp
xchg
aam
insb
jmp
sbb
jge
xchg
add
jg
lret
or
jne
cld
mov
xor
lock
addl
pop
sti
pusha
and
out
and
lahf
in
dec
sahf
sub
aad
mov
push
nop
dec
out
cmc
xor
dec
mov
pop
cmp
mov
lret
mov
mov
bound
enter
js
pop
jae
in
aam
mov
and
and
stos
or
std
mov
mov
js
lods
in
clc
ret
inc
pop
inc
mov
pop
scas
or
mov
jne
xchg
sahf
nop
mov
enter
xlat
imul
lods
lret
sbb
syscall
cmp
jg
mov
js
xchg
fs
scas
ss
addr16
pop
mov
addr16
cmp
sub
loop
pop
aad
pop
push
cwtl
pop
xor
xchg
adc
outsb
push
mov
aad
add
adc
cmp
inc
mov
pop
sub
dec
fildl
sbb
add
hlt
jg
push
loopne
out
xchg
cmc
popf
and
addr16
in
xchg
clc
inc
xlat
sbb
xchg
mov
mov
imul
push
arpl
or
sbb
mov
adc
xchg
insl
rcrb
jle
int
lahf
loope
mov
mov
adc
filds
shr
mov
fsubl
add
test
lods
add
jge
lret
ror
inc
jge
mov
lods
das
jnp
cmp
xor
leave
aad
pop
mov
sbb
insb
in
mov
iret
fisubrs
jmp
adc
and
shlb
sub
push
cmp
mov
stos
ret
arpl
in
pop
push
mov
or
or
push
mov
js
sahf
mull
xor
inc
inc
out
sbb
xorl
insb
xchg
mov
pop
dec
sub
call
ds
mov
imul
jmp
mov
xor
sbb
push
cmp
cmp
adc
xor
in
cmp
or
orl
stos
out
pop
aad
imul
mov
dec
push
adc
test
mov
movsbl
popf
xor
add
sbb
xor
fwait
sti
pop
xor
stos
int3
xlat
pusha
mov
sub
xor
std
test
out
das
mov
adc
fsubs
sub
aad
sub
pmaddwd
push
pop
fsubs
mov
cmp
decb
movsb
fistpl
and
or
adc
js
cld
dec
ret
push
inc
mov
mov
jbe
lcall
cmc
int
dec
xor
lock
mov
add
or
cmp
packuswb
pop
sub
xchg
pop
adcb
pop
add
les
xchg
pop
lea
inc
cmp
add
aad
sbb
int3
dec
out
in
sahf
mov
add
xchg
mov
inc
xchg
push
push
out
test
test
clc
ljmp
jge
in
btc
cmp
push
xchg
dec
push
jo
int
mov
iret
or
movsb
test
jg
jl,pn
rcrb
aaa
mov
lret
add
add
loop
lret
inc
mov
cmp
adc
inc
clts
hlt
loope
push
add
repnz
mov
leave
sarl
mull
sub
mov
pop
outsl
repnz
adc
push
adc
sbb
adc
movsl
jl
jnp
ljmp
sub
mov
push
fs
mov
cmc
inc
mov
pop
imul
pop
aad
mov
aam
aad
xchg
sbb
dec
inc
mov
cltd
mov
jge
jecxz
rorb
sti
mov
dec
add
push
popa
push
cmpb
add
sub
jmp
lods
adc
lods
adc
adc
add
test
jns
imul
iret
lret
push
enter
cmp
and
loope
push
ja
and
dec
sub
cmp
adc
cmpsb
xor
jp
cmp
dec
enter
mov
daa
xchg
les
pop
add
push
into
jae
or
xor
push
cmc
stos
inc
pop
mov
stos
test
fs
cmp
or
sti
xchg
jnp
scas
jae
pop
inc
mov
addr16
mov
rolb
or
insl
mov
adc
jbe
les
and
or
fidivrl
in
cmc
iret
mov
add
adc
or
fiaddl
and
pmaddwd
and
xchg
cwtl
and
push
imul
scas
adc
hlt
fistpl
in
push
push
sub
imul
mov
stos
push
cmc
roll
pop
div
int
aaa
arpl
test
mov
mov
cmc
inc
jecxz
adc
aam
fisubs
push
aam
std
insb
mov
push
mov
popf
mov
mov
mov
data16
lods
jnp
cmp
aam
or
pop
xor
aad
sbb
xor
cmp
scas
arpl
loope
test
popf
sub
iret
lahf
jno
hlt
sub
andb
mov
xor
push
int
sar
aam
adc
cmpsl
add
lods
fs
mov
insb
xor
loope
or
mov
arpl
repnz
or
add
arpl
out
into
cmc
sub
mov
mov
fwait
int3
inc
rclb
subl
fiaddl
xlat
jl
push
call
out
les
sub
insl
mov
lods
add
out
push
inc
mov
jne
push
insl
xor
mov
testb
and
les
lods
dec
push
into
pop
popa
mov
dec
aad
mov
or
mov
jne
jmp
leave
out
mov
inc
fwait
mov
and
and
sub
mov
aad
xchg
mov
stc
test
call
nop
in
mov
jp
dec
xchg
in
push
pop
xchg
or
test
jnp
cmp
cwtl
int3
push
nop
stos
dec
xchg
and
adc
inc
mov
sti
movsb
pusha
push
pushf
lods
mov
int3
aam
sub
pusha
mov
inc
push
lcall
mov
inc
aad
in
xchg
into
and
cmp
fldcw
fsin
mov
cmp
jl
mov
mov
in
mov
stos
dec
call
cmp
jmp
sub
mov
push
or
or
in
icebp
push
lods
inc
pusha
add
mov
sub
dec
int
insl
fisubs
and
into
sbb
xor
sar
loop
lods
fisttpll
sub
mov
mov
repnz
test
mov
movsb
into
add
adc
popf
movsb
xor
or
and
mov
cmp
cwtl
aad
or
pop
leave
xchg
and
testb
sub
cmp
jmp
add
cmpl
cmp
test
gs
scas
out
push
jmp
jge
ja
lea
xchg
mov
insb
jge
dec
push
xchg
outsl
push
out
add
aad
mov
mov
es
fdivrs
mov
mov
les
sbb
test
mov
int
mov
aad
mov
ret
movsl
es
cmpsl
dec
fs
xor
stc
fcmove
fs
cmpsb
outsb
jmp
xchg
inc
fcomi
test
add
cld
stos
ds
out
in
cmpl
out
xchg
int
into
mov
bswap
sti
clc
popl
jecxz
in
cmp
jno
push
gs
pushf
jns
cld
pop
jns
lods
mov
mov
psubsb
into
and
jns
iret
nop
mov
scas
sub
inc
out
dec
icebp
or
fwait
aad
cmp
cmp
pop
xlat
add
int
sub
sbb
lea
outsl
setne
push
cmp
and
sbb
ror
fcoml
jge
shrb
out
cmc
fisttpll
xchg
hlt
enter
dec
in
stos
stc
in
shll
int
cmp
cmp
push
cmpsb
push
out
mov
fidivrs
mov
fiaddl
aaa
in
and
xchg
test
sbb
mov
xchg
hlt
scas
adc
stos
leave
incb
imull
std
mov
enter
cmc
mov
dec
xchg
scas
outsl
in
or
mov
test
push
lds
dec
mov
aad
jl
lahf
jno
lcall
pusha
paddsb
in
scas
or
and
aam
add
pop
stc
add
cwtl
test
into
push
lea
arpl
fxch
mov
mov
xor
test
lcall
dec
pop
mov
sbb
divb
mov
pop
or
and
jecxz
mov
aam
into
and
push
dec
sbb
sbb
mov
popa
mov
jnp
fldenv
jl
rcrb
inc
rorb
xchg
or
mov
fldt
popa
jmp
dec
shl
sub
paddsb
fs
test
mov
or
outsb
jmp
mov
lods
cmp
xchg
inc
int
mov
pop
outsl
cli
mov
mov
lret
add
jb
repnz
mov
repnz
movsl
addb
mov
lret
fsubp
xchg
jmp
fistl
mov
test
mov
lock
jmp
ud0
jg
cmpsb
jg
scas
and
jge
nop
mov
push
mov
fstpt
gs
lret
leave
push
xchg
out
test
mov
cmp
aad
outsb
shl
sahf
cmp
mov
cmp
inc
gs
xor
insl
lods
test
lret
adc
mov
jge
pop
in
int
mov
leave
jp
pop
sbb
sub
adc
mov
aad
lcallw
pop
das
and
adc
ss
les
in
pop
out
sub
xchg
jmp
dec
je
popa
dec
jmp
fcompl
mov
mov
inc
test
xor
sub
fidivrs
or
mov
int
mov
dec
scas
mov
sti
popa
arpl
sbb
dec
mov
sub
aaa
js
movsb
ret
adc
cli
fisubrl
inc
cmp
nop
mov
mov
fwait
int
xchg
lret
dec
push
ficoml
sbb
into
cmp
push
std
mov
notl
enter
mov
aad
out
jg
outsb
push
lock
jns
or
lock
lock
orl
add
scas
ds
in
mov
add
lods
or
incl
shll
bound
jne
cmp
xchg
nop
pop
push
add
jno
dec
jb
xor
out
fwait
aad
cmp
aaa
pop
andl
gs
fs
fisttpl
loope
fnstcw
dec
xchg
xor
cmp
cmc
iret
and
inc
jp
dec
cmc
shlb
push
push
dec
inc
inc
jo
aas
in
mov
test
jg
aad
cmp
jl
in
add
mov
adc
aad
imul
lea
pop
adc
bound
ljmp
ret
cmp
rsm
jp
ja
xlat
test
repnz
jbe
mov
jge
subl
mov
testb
mov
and
cmpsb
lods
dec
fbld
mov
mov
mov
xchg
xchg
xchg
gs
jg
jmp
imul
lea
mov
stos
das
cmp
xor
sub
mov
mov
push
sbb
inc
push
out
ds
mov
jp
and
jne
test
divl
inc
stos
jns
mov
sarl
hlt
push
mov
jecxz
testl
dec
or
jle
adc
testl
shl
add
and
xchg
xchg
xsavec
in
or
cs
sar
lret
jnp
enter
hlt
in
loop
imul
add
or
popf
pop
adcb
aad
leave
jge
xor
lret
idivl
cmp
jnp
adc
jns
das
scas
repnz
cmc
test
dec
pop
in
cmc
add
in
sub
xchg
fstps
fmul
push
sahf
xchg
xchg
je
ficoms
mov
inc
xor
mov
pop
icebp
fwait
mov
mov
pop
or
cli
loope
add
push
jl
xchg
or
pushf
jns
fwait
notb
out
inc
aam
pop
or
and
into
cli
mov
int3
outsb
jecxz
inc
callw
addr16
aad
and
xor
aam
rolb
sbb
les
mov
pushf
test
fcmovb
xchg
or
imul
stc
aad
inc
xor
mov
test
add
rcr
movsl
lods
adc
daa
xchg
cmc
xchg
mov
and
push
cmp
sarl
pop
pop
aam
lods
aad
pop
adc
js
stc
xchg
dec
push
dec
call
hlt
mov
mov
dec
cmp
mov
or
pop
or
jecxz
fbstp
out
loopne
dec
and
addps
imul
into
mov
lahf
adc
les
mov
add
ror
cmpsb
gs
dec
or
xchg
dec
fcoms
aad
jecxz
inc
in
cmp
out
out
std
push
andl
push
add
push
mov
jecxz
mov
into
mov
push
mov
pop
jns
lea
leave
clc
test
imul
pop
sub
int
inc
sahf
mov
and
pop
sub
js
movups
xchg
jbe
mov
stos
sub
jmp
sub
xchg
stos
or
mov
hlt
cmp
or
aad
adc
aam
cmp
cwtl
and
orb
sub
dec
lds
mov
scas
pop
shrl
insb
fcomps
orl
sbb
add
cmpsl
pop
xchg
xor
xchg
push
sbb
sub
pop
cmc
cld
inc
dec
or
and
ds
aad
and
adcl
mov
push
xchg
xchg
sub
xor
add
pop
sbb
clc
or
pop
sub
xchg
pop
or
jp
call
lret
dec
mov
ljmp
aam
das
enter
cmc
mov
invd
jnp,pn
add
into
or
mov
sbb
push
jecxz
imull
sbb
jge
scas
imul
cmp
mov
inc
aam
jmp
cmp
outsl
idivb
movsl
inc
mov
outsl
adc
dec
lods
aad
shl
lahf
adc
jp
inc
mov
push
jae
mov
mov
mov
xchg
inc
aam
mov
jnp
pusha
popa
add
fsubrp
loope
or
cli
daa
sub
adc
in
add
jl
jmp
sbb
lahf
scas
iret
adc
push
int
add
clc
scas
insb
cmp
dec
dec
fcmovne
and
inc
add
xchg
icebp
pop
and
mov
rcrb
rcll
or
call
into
sbb
test
cmp
xor
push
adc
or
push
adc
mov
movsl
cmp
call
into
sbb
or
rcrl
push
loopne
sbb
sbb
cmp
jbe
push
into
mov
jns
fsubs
out
icebp
inc
xor
andl
lock
dec
adc
iret
cmc
mov
push
hlt
jno
push
xor
pop
xchg
jbe
into
pop
pusha
add
fwait
xchg
jmp
rolb
jge
pop
xchg
lret
dec
xlat
popa
dec
outsl
je
fisubrs
das
ficoml
pop
iret
mov
xor
cmp
addr16
andl
cmp
mov
adc
jecxz
mov
mov
das
cld
cmp
xchg
mov
lcall
or
loop
mov
ficoms
xchg
inc
into
jne
pop
ss
addr16
or
notl
jl
or
data16
xchg
rorb
jmp
inc
ret
arpl
and
orb
and
mov
decl
xchg
xchg
out
fiadds
push
add
mov
xor
mov
mov
cli
jne
add
popa
and
mov
std
jecxz
push
dec
push
dec
ret
push
mov
popa
shlb
stos
xchg
or
sub
jae
outsb
xchg
test
sbbb
sub
ljmp
xor
add
inc
outsl
xor
sbb
dec
loopne
and
int
adc
pop
push
adc
jne
push
pop
push
xor
jp
mov
nop
pop
push
jge
mov
or
in
xchg
push
testl
pushf
xlat
in
ljmp
stos
lods
aas
xor
aam
das
dec
jbe
testb
mov
jl
imul
outsl
aad
fistl
xchg
daa
imul
or
mov
pop
mov
add
jbe
cmpsb
cmp
loope
push
mov
cmc
lods
mov
cmp
xchg
lret
mov
lret
mov
xchg
mov
push
test
mov
sahf
or
int
push
mov
std
ljmp
scas
into
jp
mov
jo
aad
xor
jle
lods
add
cmp
cmp
mov
popf
stc
cmpsl
and
iret
lea
aad
jecxz
in
or
mov
sbb
shl
shl
sbb
dec
sbb
or
ljmp
mov
sbb
adc
outsb
testl
inc
ss
jp
sbb
jno
mov
xlat
leave
add
mov
out
je
pop
scas
jbe
mov
push
mov
popa
sahf
jns
call
push
or
popa
je
push
cmpsl
daa
gs
lods
jmp
cmp
mov
icebp
lahf
pop
insb
inc
movsb
mov
jae
jp
popf
xor
cmp
jo
iret
pop
pop
dec
mov
lock
les
mov
sbb
add
daa
xsave
adc
mov
cmp
or
inc
lret
mov
hlt
xchg
inc
mov
sub
sub
adc
pop
or
lods
xlat
js
xor
ljmp
addr16
cmp
add
aad
jge
push
cli
in
fisttpll
loopne
sbbl
or
out
mov
xchg
lods
jo
pop
test
mov
clc
inc
mov
fadd
movsl
jle
mov
mov
add
push
jb
lock
out
dec
dec
mov
jae
jmp
sub
jo
in
inc
and
stos
add
dec
dec
or
leave
mov
call
xlat
mov
aad
cltd
push
ljmp
push
mov
loop
int
aaa
xor
pop
ja
ss
xchg
sahf
cmp
xchg
mov
jnp
aam
shrb
push
inc
scas
and
jge
push
pop
cmp
cmpsl
or
inc
loope
sub
cltd
and
repz
lds
push
fisttpl
movsb
or
cwtl
pop
xor
int
outsl
insb
mov
jge
loope
lahf
cmp
push
add
cmp
push
int3
mov
xchg
aad
fwait
dec
imull
pop
xchg
sarl
les
test
aad
leave
popa
test
ds
push
pop
insb
cs
xchg
xor
dec
xlat
cmc
cli
jno
mulb
icebp
aam
push
xchg
push
and
adc
pop
mov
fldl
jmp
lret
loope
jl
shll
loop
ss
test
insb
sbb
lock
xor
inc
or
mov
cld
dec
pop
jmp
clc
xchg
pop
std
sbb
pop
add
jmp
popa
or
mov
mov
imul
adc
aam
pop
lea
sbb
and
adc
insl
mov
mov
pop
sbb
pop
lods
sbbl
in
jmp
gs
adc
push
movsb
stos
and
clc
adc
mov
or
jbe
mov
inc
sub
test
nop
xchg
mov
std
aaa
mov
dec
mov
sub
and
add
lea
add
pop
addr16
shr
test
std
outsb
sbb
ret
jmp
cmp
lods
sub
fimull
pusha
aad
fimuls
push
loop
repz
lods
in
negl
fimull
rclb
and
pop
mov
hlt
aad
sub
add
cmp
cmp
std
test
insb
loope
and
popa
lods
mov
mov
push
cmp
mov
pop
call
das
or
cmc
cmc
jl
push
mov
push
push
add
add
insl
sub
xchg
test
cmp
jns
loopne
push
je
fucom
cs
mov
xchg
lock
mov
add
cmp
and
les
out
repz
jns
add
jle
bound
sub
mov
dec
lahf
cmp
xchg
cmc
pop
jae
push
dec
dec
jl
pop
adcb
mov
ljmp
fnstcw
test
mov
scas
add
int
jg
decl
ficomps
push
fildl
xor
jl
mov
movsl
mov
inc
xchg
push
add
cwtl
loop
ja
dec
outsl
mov
xor
jge
and
icebp
or
sub
pop
jmp
test
cs
fsts
pop
arpl
out
inc
mov
popf
movsl
or
cmp
cmp
sarl
mov
mov
mov
and
jmp
mov
rol
cmp
jno
xor
hlt
push
testb
push
out
cs
mov
out
and
mov
push
iret
mov
push
xlat
in
jecxz
out
call
loop
int3
push
movl
sahf
push
xchg
dec
sbb
adc
das
aad
inc
popa
push
ret
subl
pop
inc
dec
xor
lods
sbb
mov
sbb
aad
dec
mov
shll
add
test
or
lea
jp
test
push
cli
inc
in
notb
cmp
stos
mov
and
adc
push
cwtl
cmc
push
xchg
push
subl
aad
mov
mov
xchg
jnp
pop
insb
pusha
adc
mov
mov
add
outsl
push
les
int
repz
out
lock
fdiv
flds
and
dec
or
jmp
fnsave
in
imul
iret
ret
xchg
pop
adc
loope
push
jb
hlt
mov
insl
int
popf
in
mov
sub
sub
test
fldl
lock
xor
ljmp
or
jnp
and
pop
frstor
inc
shl
cmc
lcall
stos
lahf
jae
stos
xor
xchg
jnp
imul
adc
adc
mov
lods
aad
xchg
fsubs
mov
xchg
cmp
lahf
push
inc
xor
lods
ficoml
pop
jge
call
fsubs
loope
push
push
add
mov
out
inc
das
ret
push
mov
jecxz
sti
add
negl
mov
addl
popa
pop
inc
outsl
out
popa
adc
aad
mov
icebp
dec
mov
cmp
minps
adc
xchg
dec
cmp
int
icebp
shlb
cmp
xchg
push
stos
jg
push
popa
push
fidivs
cmp
mov
ret
inc
std
leave
xor
cs
and
ds
add
out
and
cmp
jb
outsl
xlat
push
mov
sbb
into
mov
mov
bound
sub
popa
pop
hlt
inc
std
mov
in
stos
pushf
jg
int
popa
inc
inc
repnz
aad
inc
mov
aad
pop
sahf
jg
dec
mov
and
mov
int
dec
test
cli
pushf
gs
dec
testl
aaa
pop
push
fdivp
or
mov
mov
scas
test
pop
leave
dec
jge
add
mov
test
adc
rorl
popa
out
loop
outsb
ret
jecxz
dec
mov
cmpsb
mul
xor
test
jge
sti
pop
pusha
mov
jae
shl
shlb
out
sub
or
push
arpl
add
cmc
enter
mov
sti
fcomps
jg
jg
in
push
rcr
sti
inc
sbb
cltd
cs
inc
xchg
sub
add
jle
and
push
rcr
les
out
in
or
loope
sbb
xchg
and
fisubl
enter
jnp
jle
sarl
pop
js
xor
std
iret
inc
test
fistpll
pop
jbe
lods
sbb
pushf
cmp
xchg
repz
mov
ret
movsb
int
xor
lea
lea
in
push
sub
push
jl
movl
stc
xchg
dec
int
enter
xor
cli
dec
or
cs
cmc
lods
mov
mov
push
fisubrs
cli
jp
movsb
cmp
test
pop
sbb
hlt
int
pusha
movsl
push
fcompl
dec
mov
and
add
jo
mov
add
jnp
ljmp
mov
mov
fldt
das
mov
adc
pusha
arpl
push
fwait
loop
cmc
inc
xlat
adc
popf
filds
in
lea
aad
scas
mov
imul
adc
jg
int
mov
rcrl
mov
dec
fldcw
mov
xlat
mov
ljmp
fisttpl
inc
shlb
push
mov
mov
xchg
push
aad
std
int
jbe
xchg
mov
std
sub
jno
cmp
mov
xchg
sub
mov
sbb
hlt
mov
mov
int
mov
sub
and
divb
or
push
sub
cmpb
in
pop
fnstsw
add
js
mov
and
dec
lock
in
int3
out
rolb
or
xchg
arpl
pusha
iret
mov
popa
fdiv
xchg
ret
mov
push
adc
mov
call
cmp
xchg
push
fcomi
jnp
xorl
lea
jno
jne
subl
fwait
cld
imul
pusha
mov
sub
pop
out
subl
lods
add
icebp
add
or
stc
loope
mov
push
arpl
mov
sti
pop
imul
mov
js
popa
shrb
lcall
roll
xchg
aaa
outsl
mov
jle
xchg
fdivrs
addr16
shrb
cmpsl
orl
mov
pop
sub
nop
test
stos
cmpsl
mov
jns
or
xchg
inc
outsl
and
stos
push
or
test
pop
mov
mov
push
mov
enter
fsubrp
fcomp
mov
sbbl
fsts
frstor
in
mov
mov
pop
xor
push
push
jl
adc
fdivrl
sbb
sub
xchg
clc
mov
xchg
jno
out
out
loop
jo
fimull
mov
cmc
fimuls
sbb
mov
xlat
or
cwtl
dec
xchg
or
test
lods
jo
mov
fildl
scas
jg
cs
adc
or
sub
mov
gs
dec
mov
adc
or
stc
mov
and
mov
mov
jb
lods
lret
mov
pop
jmp
cmp
adc
loop
fmull
imul
cmp
push
mov
outsl
cltd
xchg
clc
dec
into
sub
cmpsl
hlt
pop
cmp
dec
fbld
fwait
mov
test
xchg
pavgw
stos
ss
imul
cmpsb
fimull
adc
sub
pop
jmp
add
xchg
repz
jmp
xchg
pop
in
adc
jns
shll
popa
popf
leave
lret
fsin
add
cmc
cmp
mov
cmp
imul
mov
dec
inc
loope
xchg
mov
mov
dec
gs
imul
scas
ljmp
lcall
pop
cmp
xor
mov
mov
mov
xchg
xchg
mov
and
mov
rorl
xchg
icebp
pop
inc
in
mov
cmp
jo
lds
cmc
iret
outsb
xor
xchg
push
cmc
cld
addl
ljmp
pop
testl
into
test
pop
scas
int
xchg
or
fdivl
mov
mov
nop
inc
or
xor
in
jge
std
cmp
sub
mov
jne
pop
cltd
hlt
xor
pop
push
xor
pop
adc
into
setne
xor
xor
xchg
xchg
mov
inc
mov
inc
popf
mov
shrb
into
test
int3
mov
pop
imul
mov
psrlw
jbe
dec
add
call
ret
daa
inc
sbb
jle
aaa
push
and
cmp
insb
dec
mov
xchg
enter
sub
inc
ljmp
dec
movsb
mov
jge
pusha
test
cmc
sbb
xchg
lods
push
push
scas
leave
or
in
mov
shll
and
fstps
add
dec
stos
sarb
inc
iret
in
xchg
cmp
push
mov
repz
mov
adc
js
or
add
sub
jmp
sbb
dec
arpl
out
sub
mov
jg
aad
push
xchg
roll
push
sbb
pop
dec
cmc
mov
hlt
xor
inc
ret
mov
ja
les
xor
sbb
jne
dec
sarb
mov
push
jns
and
notl
shlb
sarl
xchg
cltd
cs
pop
lea
test
and
cld
sub
dec
inc
push
or
dec
push
jnp
js
mov
dec
mov
cmp
or
fbstp
cmp
testb
dec
mov
insl
cmpsl
js
icebp
dec
cli
cld
daa
push
into
inc
insb
arpl
ss
push
fmulp
cmc
xchg
dec
aad
out
mov
or
and
sub
or
jae
into
ljmp
add
in
mov
shl
inc
sub
xor
sub
movsl
jge
mov
push
or
int
xor
rol
pop
loope
js
stos
imul
mov
imulb
mov
mov
out
mov
aad
push
xchg
push
jns
xchg
mov
or
push
adc
and
or
das
test
aad
cmp
dec
pop
jb
push
push
test
in
cmp
out
decb
xchg
loop
scas
cmp
sbb
shrl
push
dec
adc
out
test
pop
out
lea
aam
lods
aad
jle
mov
cmp
cmpsl
gs
and
xor
popa
fldt
jmp
lods
stos
xchg
adc
outsl
xchg
sub
jp
int
sub
stos
cmp
sub
pop
movb
lret
mov
daa
mov
lods
push
int3
iret
js
add
jp
dec
test
in
lret
xor
sub
push
mov
pop
cmpsl
aad
dec
adc
fildl
jns
lea
call
pushw
jmp
mov
jl
push
mov
divl
mov
jmp
fimuls
xchg
mov
jge
aad
test
xchg
decl
mov
push
aad
lret
mov
push
movsb
cmp
mov
out
mov
jp
out
xor
stos
stc
loope
popa
mov
and
cs
cmpsl
dec
fucomi
mov
inc
dec
lret
sbb
and
mov
ljmp
push
xlat
mov
xor
mov
cmc
shl
lds
or
xor
fimull
jmp
aad
js
mov
lods
or
aas
and
or
pusha
fildl
movsl
cmpsb
cli
movsb
inc
dec
mov
xor
push
cmc
repnz
jg
sub
lahf
xor
int3
add
xchg
lea
lds
sbb
scas
outsb
lahf
cltd
dec
std
popa
jle
stos
xchg
or
test
shr
push
aas
int3
cmp
jnp
hlt
xchg
repz
lcall
cmc
leave
mov
ss
jo
xor
js
popf
mov
mov
jbe
sub
mov
jmp
dec
pop
mov
aas
or
push
loopne
jl
sub
test
or
mov
jns
test
jns
xor
cmp
negl
imul
cmpsb
mov
cltd
mov
call
mov
jl
pmulhuw
ljmp
push
and
jnp
std
xchg
lds
lret
std
dec
mov
fisttpll
cmc
mov
push
jne
mov
jo
inc
cmp
adc
aad
push
imul
dec
cs
jge
pushf
xor
xchg
sub
inc
shrb
mov
ljmp
mov
cltd
adc
leave
xor
pop
aad
test
stc
inc
mov
push
add
flds
push
push
je
mulb
cmp
jle
mov
cmp
movsb
ret
sub
or
or
cld
imul
lds
jecxz
mov
dec
out
fs
cld
sub
scas
jns
arpl
cld
sub
and
xlat
out
mov
sub
int
push
flds
jnp
lcall
cltd
inc
mov
cmc
aad
pop
gs
inc
in
jbe
mov
pop
mov
jnp
mov
dec
fisttps
jle
jmp
jmp
xchg
ljmp
loop
iret
add
mov
and
pop
inc
dec
mov
sub
cwtl
cmpl
and
int3
nop
loopne
xchg
ss
push
inc
jmp
push
or
push
std
add
pop
or
cmp
adc
jmp
or
iret
or
cld
cmc
inc
dec
jnp
sub
sbb
pop
pusha
dec
add
mov
or
dec
stc
cltd
negb
xchg
sar
dec
or
icebp
mov
das
cmp
push
and
cwtl
scas
pop
cs
jmp
sbb
mov
sub
sbb
hlt
dec
dec
shlb
mov
dec
mov
push
or
int
mov
into
pushl
pushf
or
cld
shll
jns
xchg
out
adc
divb
lock
mov
aaa
nop
cmpsl
adc
mov
add
loopne
in
mov
into
cmp
add
fwait
mov
pop
xchg
sbb
jnp
push
push
rolb
mov
sub
add
inc
cltd
in
xchg
jl
mov
jo
stc
push
test
movb
outsl
rcll
loope
jmp
mov
xor
cmp
pop
push
mov
fisubrl
ret
jge
adc
lods
fldl
or
jnp
push
push
or
jle
xlat
std
test
rcrl
xor
fisttpll
outsb
jnp
cmpsb
pmullw
sti
scas
add
jns
lock
cli
ret
mov
test
andb
mov
andb
mov
xchg
inc
push
sbb
out
mov
cmp
inc
fldenv
std
in
or
pusha
addl
mov
imul
and
stos
fadd
pop
mov
stos
es
aas
mov
pop
aam
mov
fcoms
xchg
mov
test
maxps
test
add
jnp
fwait
call
adcl
pop
lods
out
cwtl
aad
mov
dec
mov
ss
test
sahf
subl
cwtl
add
out
cmc
ds
cmp
nop
pop
jmp
mov
push
push
fdiv
addb
and
mov
iret
ret
dec
inc
adc
rcrb
push
sbb
cmpsb
sbb
aas
call
pop
jecxz
push
fistpll
add
jmp
inc
jnp
push
out
lret
ljmp
inc
jl
lods
push
std
test
scas
in
or
lea
cmp
or
pop
jne
in
lock
jl
add
inc
and
sti
cwtl
mov
ljmp
movsl
ds
dec
lret
fcomps
xchg
adc
push
lods
mov
jae
lahf
and
jl,pt
pop
xchg
mov
cmpsl
repnz
stos
lcall
jo
mov
sub
jp
iret
or
pop
jae
xchg
cmp
fdivp
ds
mov
jl
cmp
aad
psraw
pop
iret
imul
or
xor
sbb
pop
testb
ds
fcmovu
mov
cltd
in
dec
jne
or
js
add
loope
int
mov
in
mov
aaa
inc
hlt
and
xchg
pop
jae
shrb
sti
dec
out
aad
dec
adc
push
mov
sub
movsb
push
outsl
loope
xchg
cmp
mov
fnsave
push
dec
mull
add
inc
decb
push
mov
stos
cmp
scas
sub
outsl
popf
xlat
or
and
sub
movsb
imul
pop
jecxz
into
mov
stc
jbe
in
sahf
jne
xchg
scas
cmp
mov
adc
int
xchg
movsb
lods
pop
cwtl
mov
scas
cmc
sbb
dec
ss
and
pop
shl
pop
xorl
pop
lret
or
or
sbb
std
xchg
push
iret
adc
into
mov
cmpsl
sbb
loop
out
test
bnd
jne
and
dec
hlt
nop
incl
rol
ljmp
or
jle
popa
ret
xchg
in
pop
stc
test
loope
mov
out
pop
sub
or
pusha
cld
or
xchg
or
xor
arpl
cmp
rorb
jmp
sub
daa
int3
inc
xor
and
fwait
jno
aad
cld
xchg
loop
shlb
aam
test
js
cmp
mov
mov
sbb
pop
mov
movsb
mov
mov
pop
pop
adc
loopne
es
jnp
push
scas
xchg
mov
repz
in
cltd
jae
loop
int
xor
inc
in
fistpl
loopne
fiadds
out
sub
cmp
jmp
aad
imul
mov
jno
cmc
jle
jns
adc
dec
icebp
push
call
sub
mov
in
movsb
pop
dec
rcr
and
sbb
sub
loope
xor
jge
cmp
inc
mov
jnp
or
mov
mov
sahf
add
or
push
cmpsl
lds
add
lret
dec
outsl
cs
mov
add
mov
and
xor
fbld
cmc
testl
and
xchg
fdivrl
ficoml
and
xor
imull
outsl
mov
and
cmp
sbb
cmp
popf
mov
inc
aad
and
inc
mov
call
outsb
push
adc
jle
out
popa
mov
icebp
scas
in
push
adc
add
push
mov
or
dec
das
insl
int
push
cmc
data16
mov
pushf
ljmp
sub
out
pop
test
aaa
mov
jmp
nop
or
xchg
dec
scas
mov
sub
or
test
es
xchg
jae
sti
cmp
mov
aad
stos
outsl
push
cmp
cwtl
push
addl
push
frstor
mov
ja
mov
loope
dec
dec
cmpb
imul
sub
mov
cmp
cmp
aad
mov
mov
addr16
sbb
int
clc
inc
jmp
sub
or
andb
pop
cmpsl
out
add
xchg
mov
cs
adc
push
dec
test
cmp
cmp
aad
mov
jle
sarl
cmp
push
out
cmp
sbb
inc
mov
outsl
rolb
loope
adc
mov
mov
xchg
mov
push
add
adc
aad
mov
mov
js
popf
and
int3
dec
xchg
or
and
ja
ficomps
lods
jge
lahf
mov
jge
xor
xor
adc
mov
cmp
aam
lods
or
add
push
and
negl
int
and
ret
inc
lcall
fcoms
lods
pop
nop
sahf
sub
or
inc
jbe
add
lods
push
mov
les
out
sub
jmp
rolb
pop
fxch
sub
push
je
mov
jge
mov
imul
jne
lds
sub
loop
push
mov
test
aam
das
shl
cmpsl
pop
lcall
and
popa
scas
push
cli
repnz
in
in
adc
mov
dec
arpl
xchg
inc
push
xor
outsl
add
jbe
jnp
xor
and
lods
or
xor
inc
push
pushf
iret
cmpsl
sbb
jp
add
fidivrs
xchg
lea
test
lcall
or
xor
pop
lret
push
inc
in
aam
jb
rcrb
mov
jns
movsb
or
xor
xchg
mov
sub
jmp
mov
push
stos
push
cli
inc
test
lds
das
and
mov
ret
mov
cmp
adcl
aaa
sbb
sti
add
or
mov
popa
pop
push
jl
push
mov
mov
push
mov
sarb
jns
dec
insl
add
sub
pusha
imul
pusha
xchg
pop
dec
cmc
repz
xadd
fwait
cmp
stos
cmp
cmpsb
pop
fildll
jae
push
addb
aam
std
je
sub
or
stc
loopne
mov
scas
lods
mov
into
test
scas
loop
lret
es
xchg
inc
scas
rorl
sbb
pop
xor
leave
aad
lret
add
adc
leave
js
cmc
or
fwait
decl
aad
push
ljmp
ljmp
sub
sub
pop
out
dec
sbb
or
cmp
decb
pusha
jmpw
sbb
into
shll
je
fidivs
xchg
loope
jns
cmpsl
pusha
fcmove
sbb
or
push
mov
push
adc
mov
sbb
lea
jge
imul
mov
jg
out
cmc
add
pusha
add
or
arpl
pushf
stc
pusha
xchg
scas
movsl
sbb
inc
inc
or
jmp
sub
lahf
pop
cmc
jno
jl
inc
sti
xchg
sub
les
clc
add
scas
sub
idivb
cmp
into
sbb
inc
add
pmaddwd
aaa
xchg
sahf
popa
mov
ret
ret
jo
jle
mov
cmovo
jecxz
lcall
in
sbb
ljmp
gs
cli
pop
shr
and
out
lds
xchg
mov
dec
ret
xor
ja
inc
pop
sar
push
jmp
ret
roll
xchg
mov
cmp
jge
mov
sbb
push
not
jae
nop
adc
loope
lret
out
add
repnz
cli
dec
pushf
inc
pop
pop
mov
mov
lea
repz
gs
mov
lea
sbb
pop
jns
adc
loope
addl
jmp
lock
sahf
jg
cmp
adc
movsl
xchg
mov
and
jg
jns
mov
pop
pop
shl
jg
in
mov
orl
xchg
xchg
int
pop
js
mov
enter
les
jmp
das
xchg
inc
cmp
jp
mov
mov
into
mov
outsb
fdivr
subl
sub
popa
aam
push
rcrl
jl
mov
push
cmp
gs
fidivrl
outsb
and
pop
addr16
dec
push
push
inc
mov
xchg
movsb
imul
add
sub
add
orb
jbe
jge
fldl
cmp
sub
test
arpl
mov
and
mov
sub
lret
jns
push
xchg
add
and
mov
jg
sbb
xchg
cmp
sub
arpl
and
aad
jge
in
xchg
and
inc
pop
fwait
jmp
or
fistpl
aam
jge
vphadduwd
jmp
loope
sbb
data16
rolb
in
jns
scas
repnz
and
xlat
pop
push
mov
dec
jmp
aad
pop
jecxz
out
mov
cld
mov
lods
lock
dec
push
push
dec
and
loope
pop
fdivs
std
cli
call
lods
rolb
push
mov
call
stos
sahf
mov
push
fs
lods
sbb
movsl
fstps
mov
mov
mov
sbb
testl
arpl
cltd
in
pushl
cld
pusha
incb
xor
shlb
mov
fidivs
pop
addr16
sub
or
mov
push
cmp
mov
push
xchg
dec
fsubrl
jb
mov
ret
xor
inc
xchg
sahf
ja
fimuls
xor
inc
cwtl
loopne
mov
cmp
mov
jmp
dec
sub
nop
popf
jns
mov
or
mov
daa
xchg
loop
call
cmc
mov
cmp
cmp
cmp
push
ror
jb
in
insl
loop
orl
and
lds
adc
outsl
push
rcll
ljmp
movsb
or
adc
cli
mull
and
fisttps
ljmp
add
xchg
add
sub
dec
out
mov
lods
jg
sbb
push
push
lods
inc
inc
or
cmp
xchg
std
pop
rcrl
mov
jl
jg
push
xchg
pop
sub
iret
cmc
add
or
in
sub
unpcklps
mov
notb
pop
dec
mov
mov
inc
or
mov
push
fidivrl
fstl
xchg
in
cmp
test
push
loopne
ds
jns
adc
cmpsl
mov
cltd
loopne
sub
stos
jl
jmp
ret
ficoml
pushf
or
dec
xchg
mov
call
das
pop
inc
imul
in
or
pop
dec
mov
pop
int3
mov
xchg
cmpsb
sub
fidivs
popf
sbb
mov
fiadds
fldcw
cmp
cld
stos
cmp
scas
cmp
xor
push
ret
jmp
adc
cmp
scas
sbb
cmp
mov
adc
addr16
out
aam
out
shl
xchg
call
push
and
out
inc
dec
stos
repz
into
int
ret
pusha
fs
mov
mov
insb
gs
andnps
dec
or
and
fimull
aad
mov
ss
std
lcall
lods
lock
lods
popf
mov
push
loopw
push
xorl
test
jmp
or
mov
mov
mov
ja
push
sbb
imul
add
fstps
insl
jbe
lds
mov
xor
and
aad
inc
xlat
xor
mov
imul
daa
dec
xchg
push
jg
imul
fisubl
inc
cld
push
aam
insl
scas
sar
or
or
mov
lea
mov
jle
mov
les
inc
xchg
sbb
push
mov
movsl
dec
js
push
daa
cmpl
je
mov
or
cmc
lea
sahf
jo
adc
cmp
shrl
ja
or
adc
xor
stos
jl
cmp
sbb
dec
sti
cwtl
pop
and
cmc
insl
call
jnp
rcl
shr
subl
xchg
out
or
mov
outsl
rorl
cmp
and
fwait
fs
cld
inc
in
ljmp
mov
pop
stos
jb
inc
adcb
divb
xlat
cmp
jnp
clc
cmp
shr
dec
mov
dec
mov
in
arpl
mov
andl
sub
aas
neg
push
xorb
fbstp
xchg
inc
jne
fsubr
sub
into
dec
movsb
jmp
jo
pusha
inc
in
cmp
pop
mov
mov
cmp
leave
adc
inc
push
ljmp
aas
scas
add
cmp
fcomps
out
sti
mov
xchg
nop
mov
push
bnd
sbb
adc
ficoml
mov
sbb
and
inc
inc
cld
push
imul
or
pushf
sbb
repnz
movsb
add
jl
arpl
mov
ret
out
sti
xchg
rcrb
into
add
in
cld
stos
iret
cmc
es
je
ret
pop
fucom
sysret
dec
xor
int
lods
sbb
lds
or
xor
lods
and
mov
or
dec
mov
les
add
popf
data16
mov
sub
inc
or
sub
cwtl
jecxz
aad
add
lods
mov
dec
xchg
add
adc
test
pop
xor
pop
ds
out
popa
stos
mov
inc
addr16
std
mov
pcmpgtd
cmp
scas
inc
mov
cmp
add
pop
mov
jbe
negb
dec
pop
inc
sbb
pop
pop
mov
out
inc
xchg
push
push
clc
push
sub
cmpsb
cmc
mov
pushf
jnp
fistl
pop
enter
pushf
lods
std
ficoml
out
std
rcrb
fsubs
in
scas
or
xchg
pop
xor
icebp
or
cmp
out
add
cld
cmc
cmpsl
ds
inc
cmp
fsubrl
mov
shlb
and
cmp
push
pop
scas
cltd
ja
xor
lcall
dec
sbb
mov
cvtps2pd
xchg
lcall
pop
or
xor
addr16
xor
cmp
and
adc
jle
out
xor
mov
cmp
mov
scas
sysexit
lahf
jbe
jg
push
cmp
in
fisttps
cmp
movsb
adc
popf
leave
cmp
imul
dec
xchg
xor
cmp
dec
or
jmp
push
sub
aad
xchg
mov
inc
aas
push
dec
fisubrl
dec
mov
stc
jbe
js
int3
xlat
and
aad
dec
xor
pop
and
std
leave
mov
mov
inc
lea
or
pop
outsb
js
imul
cmp
pop
xchg
js
scas
sub
into
mov
jnp
sbb
jmp
sahf
bnd
xchg
push
sub
fcomip
sti
fs
lods
fistl
jns
mov
mov
push
dec
sbb
push
aas
aam
dec
push
cmc
fstpl
sub
ret
jns
pop
test
scas
jmp
adc
sbb
popa
or
jge
shrb
or
push
movl
inc
repnz
rcr
pop
mov
vmaxsd
or
cmpsl
fildl
test
add
mov
mov
or
xchg
sub
call
pop
decb
pushf
lcall
xor
cmpsb
fwait
push
or
inc
jb
sahf
cmp
jnp
movsl
xor
fiadds
fs
out
sbb
sbb
mov
nop
sti
aad
lcall
mov
cmp
negl
mov
aam
dec
and
arpl
leave
pusha
rorl
cmp
cmp
inc
fiadds
int
cmp
packsswb
mov
adc
mov
test
and
mov
dec
dec
pop
lods
jecxz
movsb
dec
adc
jg
sbb
lods
and
dec
dec
push
cli
ja
sti
mov
jns
outsl
inc
xchg
aad
sub
mov
in
jnp
movsl
dec
dec
cmc
inc
shufps
scas
mov
outsl
mov
jcxz
jmp
pop
jge
mov
ret
testl
mull
fmulp
mov
and
lea
lahf
add
pop
scas
in
xor
mov
jmp
pop
adc
push
pop
push
pop
pop
jae
add
cmpl
push
js
jns
jae
scas
jl
outsl
push
cmp
pop
mov
je
lcall
xchg
adc
mov
and
add
das
lahf
popf
mov
adc
xchg
jns
jmp
je
andl
data16
jp
scas
push
add
fistpll
sbb
js
and
fsubl
mov
sbb
sahf
mov
xchg
sub
dec
daa
cmpsb
xchg
insb
xchg
call
or
dec
mov
stos
mov
jmp
and
and
xor
jnp
aad
lcall
xchg
cmc
jg
in
bnd
xor
ds
mov
test
test
cmp
stc
cmpsb
repz
outsl
stos
or
loope
sbb
mov
cmp
cli
mov
xchg
mov
jo
or
mov
pop
push
push
jle
or
movsl
inc
cmpsb
pop
push
cmp
paddsb
icebp
sub
leave
xchg
inc
sub
adc
xchg
das
xchg
arpl
xor
add
scas
mov
mov
out
fisttps
push
fwait
imul
aad
push
dec
je
aas
or
add
cwtl
mov
les
das
push
adc
ret
push
adc
aad
jns
clc
fs
decl
sti
clc
xchg
cmc
lea
into
cmove
adc
fwait
or
xor
lahf
mov
aad
ret
jecxz
outsl
pop
jnp
sbb
pop
cld
mov
in
std
jno
aad
push
testl
out
cli
clc
xchg
add
movsb
fldt
add
adc
stc
fsts
int
jl
push
sarl
cmpsl
sbb
sbb
repz
test
mov
add
loope
stos
insl
and
jnp
in
test
fwait
xchg
sub
or
push
pop
xchg
pop
cmp
jmp
mov
cmp
push
dec
mov
sahf
push
inc
mov
rcll
fwait
dec
and
test
mov
cli
leave
inc
cwtl
pop
mov
mov
jo
aad
sbb
mov
dec
int3
out
or
loopne
sub
mov
mov
push
mov
adc
inc
out
mov
cld
adc
jmp
push
jle
sub
in
push
loopne
cli
mov
lcall
mov
sarl
xchg
sub
jg,pt
jae
xchg
lcall
sub
xchg
jbe
jb
imul
dec
dec
jle
xchg
rorl
outsl
pop
jnp
lcall
outsl
repz
fcmovb
mov
jmp
mov
es
imul
movb
enter
sahf
pop
and
and
cli
xor
cmp
mov
jl
xchg
lods
push
push
xchg
lret
cmpsl
xchg
fwait
inc
shll
sbb
sub
mov
xchg
xchg
rol
adc
push
or
cmp
jl
or
cmc
jae
stc
into
call
cmp
out
and
push
sbbb
jmp
ret
stc
xchg
jmp
jns
popa
loop
iret
cmp
fistps
rol
mov
rorb
les
in
lret
or
mov
iret
fwait
mov
cli
pop
imul
mov
adc
sub
test
test
mov
adc
int3
xor
movsl
ds
jo
mov
push
shrb
scas
out
test
pop
sahf
mov
xorb
fcom
mov
arpl
add
clc
sub
mov
call
jmp
std
pusha
mov
add
xchg
add
loopne
outsl
loope
jo
shlb
in
sbb
sub
adc
xchg
loope
xchg
cwtl
cmp
push
ret
call
adc
loop
add
and
mov
dec
movsb
push
ret
dec
or
mov
pop
mov
data16
xchg
push
cmp
xlat
dec
loop
out
iret
mov
or
out
cwtl
pop
lret
mov
push
jmp
imull
je
nop
arpl
stos
sbb
or
push
stos
and
pop
scas
ss
xor
lcall
cs
sbb
mov
scas
int3
in
enter
cld
neg
mov
mov
aam
js
pop
pop
jne
je
rolb
push
into
mov
xor
cmp
test
cwtl
ret
inc
inc
dec
sub
pop
decb
mov
adc
mov
dec
popa
fsubrs
emms
cs
call
mov
cltd
sbb
js
jns
and
int
into
sarl
addr16
jo
fidivrl
lods
scas
loopne
iret
imul
int
stc
ds
arpl
push
mov
push
leave
xchg
stos
push
mov
aam
in
ja
sub
push
add
mov
mov
imul
outsl
mov
int3
stos
push
into
lods
paddusw
xchg
and
outsl
aad
xor
loopne
inc
cli
xlat
rolb
push
xchg
push
sbb
rcrb
dec
jmp
stos
xchg
leave
mov
mov
inc
ret
jo
popa
dec
xchg
jle
mov
scas
subb
ja
add
pop
sahf
repnz
lret
cltd
test
pop
mov
dec
int
cmpsb
stc
lahf
test
jmp
lods
loop
roll
vphaddbd
pop
out
stos
lret
jbe
pop
push
pusha
mov
popa
das
adc
iret
or
xchg
in
dec
andb
filds
jne
or
add
shll
mov
dec
xor
nop
xchg
xchg
sub
pop
decl
mov
or
jmp
mov
cld
ds
aas
iret
imul
xor
pop
mov
aam
out
mov
inc
aaa
add
and
and
mov
sbb
cwtl
jno
xor
mov
pop
xor
cmp
ss
pop
jl
arpl
mov
outsl
out
test
in
sbb
aad
add
lea
push
out
movsb
cmpsl
add
xor
cli
loopne
fcompl
mov
leave
and
add
dec
loop
dec
cmpsl
je
push
lock
outsb
xchg
int
xchg
push
daa
dec
shrl
lods
ret
out
jne
pop
pmullw
xor
testl
add
cmp
push
movsb
aad
rcrb
xor
cmpsb
pop
fistpll
fs
lcall
loope
or
in
out
push
sbb
dec
adc
ds
loope
sahf
sti
sbb
je
adc
outsb
cmc
mov
sub
or
insl
sub
stos
imul
shll
jmp
into
pop
js
mov
popa
mov
cld
push
leave
inc
push
out
aas
xchg
cmp
pushf
rcrl
jge
bound
pop
js
add
fstpt
mov
je
insl
imul
or
adc
jmp
pop
aad
add
adc
ljmp
fcoml
call
outsb
mov
push
int
mov
pop
mov
jnp
push
jmp
push
movsl
shll
jnp
push
leave
cmp
rcll
push
dec
jmp
cmp
out
lahf
cld
out
cmp
dec
cmc
fsub
ja
lahf
sub
stc
shld
xchg
cmc
loope
sbb
dec
adc
sarl
mov
sbb
dec
mov
icebp
mov
mov
or
sbb
cmp
dec
call
mov
js
mov
cmp
push
mov
in
mov
and
call
lret
cmc
data16
popf
xchg
js
inc
push
xchg
lock
cmpsl
sahf
dec
inc
out
ja
jle
mov
mov
sarl
int
jae
inc
jne
lea
dec
push
and
push
pop
ret
insl
cmp
testl
dec
ljmp
ljmp
cmc
sbb
push
sti
mov
mov
pop
cltd
mov
jg
pop
outsl
mov
aam
add
int3
add
cmpsb
inc
mov
jmp
mov
fwait
mov
push
out
jl
and
push
xchg
std
lcall
fidivrl
mov
mov
imul
rorl
hlt
popf
jmp
jmp
inc
jno
andb
outsb
xchg
out
out
jb
fs
mov
and
jbe
test
sahf
sub
add
cmp
int
xor
mov
or
out
scas
sahf
scas
movsb
cmp
pop
test
std
inc
inc
mov
shrl
mov
mov
adc
dec
and
mov
mov
mov
cmp
scas
mov
cmp
shr
xchg
add
or
dec
aam
cmp
daa
addl
aad
insb
sub
std
popf
inc
lea
mov
dec
xchg
dec
jl
scas
test
sub
push
adc
push
call
out
out
add
dec
mov
inc
rorb
jae
xchg
sub
add
cli
push
xchg
add
dec
dec
pop
adc
inc
mov
leave
aad
movsl
cli
in
cmc
int
push
nop
fdiv
loopne
test
dec
push
adc
mul
cmp
cmp
insb
mov
cmp
fcomi
mov
out
pop
xchg
aaa
xchg
aam
dec
xchg
dec
jp
mov
mov
aad
pop
mov
push
fcompl
push
test
xchg
or
adc
sub
cmpsb
or
dec
mov
aad
and
sbb
push
int
std
pushl
stos
lods
jo
mov
and
inc
jg
cmp
cmc
cmp
and
jnp
dec
divl
jg
ret
xlat
and
and
push
add
jmp
sbb
and
dec
jl
sbb
sub
xchg
inc
push
and
xchg
push
imul
into
dec
push
xchg
and
xchg
addr16
int3
cmp
sub
add
cmpsb
mov
xor
add
xchg
mov
or
orb
cmovbe
testl
les
out
xchg
adc
and
aad
cmpsl
jo
or
repz
test
fstps
add
clc
add
dec
sub
call
jmp
sub
out
mov
pop
adc
fcompl
outsb
cltd
jns
pushf
cmc
mov
repz
scas
insl
sub
add
in
lock
insl
add
dec
cmp
or
loope
fcomps
push
jns
out
lods
stos
pop
icebp
fcoms
pop
sbb
imul
enter
push
pushf
sub
cmp
call
lock
stos
aaa
das
je
cltd
mov
and
daa
jnp
sbb
xchg
push
push
pushf
dec
mov
mov
popa
scas
push
aad
clc
adcb
js
push
ljmp
insl
mov
cmc
sbb
test
xchg
std
cmpsb
les
sahf
mov
int
cs
js
daa
js
insl
pop
add
xor
es
jmp
insl
mov
add
xor
lea
dec
repnz
sub
test
cmp
push
lds
pop
sub
jnp
dec
add
jecxz
lea
shl
scas
lds
sti
mov
jmp
jle
in
fs
movsl
imul
fldenv
pop
aas
std
rcrl
stos
dec
fsubr
lcall
cmc
push
push
js
sbb
and
out
aam
mov
push
add
stos
popf
xchg
push
push
fldenv
in
jge
push
scas
and
push
aad
add
pusha
mov
in
imul
int
icebp
jno
into
cmpsb
rorb
in
iret
and
rorl
cmc
incb
aad
mulb
lods
cmp
andl
lods
in
stc
sahf
sti
jl
push
pusha
in
sbb
mov
fs
fdivl
call
sub
mov
adc
out
add
xchg
sahf
dec
not
inc
cwtl
adcl
aam
mov
mov
es
push
mov
pusha
adc
dec
adc
ds
mov
ret
aad
mov
pop
sub
jle
mov
or
jb
test
je
push
pop
mov
outsb
dec
out
xor
int3
decl
mov
movb
jns
or
sub
dec
das
xchg
jne
push
xchg
mov
push
jns
inc
or
xchg
jnp
scas
shr
outsl
jnp
aam
sbb
mov
jecxz
hlt
insl
mov
mov
rcrb
xchg
mov
fimuls
popf
scas
pop
push
add
and
fmull
jns
cs
outsl
mov
test
stos
jmp
mov
aad
scas
ret
lods
shll
repz
std
or
dec
xchg
or
leave
ja
dec
imulb
arpl
pop
xchg
out
sbb
stc
lods
cs
lahf
mov
mov
adc
jo
dec
jnp
test
push
inc
jp
div
push
es
pop
inc
fwait
pop
dec
dec
xchg
clc
ss
mov
xchg
repz
jb
notb
cwtl
mov
insl
push
cld
xor
flds
mov
ljmp
mov
jg
xchg
aad
out
lods
out
dec
out
cmpsb
push
scas
push
and
xchg
jle
addl
jo
stc
inc
xchg
mov
movsb
inc
loope
pop
mov
mov
inc
sbb
mov
ss
jge
loopne
and
dec
push
hlt
int
pop
jns
or
testb
iret
stos
in
scas
addr16
xor
mov
xor
cmc
pop
ficompl
call
aad
aaa
dec
mov
or
and
jae
jmp
cmc
fidivrl
cltd
cmp
jge
std
mov
xchg
push
dec
iret
movsl
mov
std
in
mov
mov
call
or
in
inc
in
hlt
test
bound
in
dec
inc
and
push
xor
or
jo
mov
sti
sub
dec
push
addl
std
xchg
pop
ret
or
cmp
pop
int
cmp
popf
roll
cmc
je
push
imul
adc
loope
push
mov
inc
mulb
sbb
inc
mov
mov
xchg
mov
and
aad
adc
or
mov
repnz
push
lods
or
xchg
mov
jmp
sbb
shrb
shl
imul
push
shll
sub
xor
and
in
and
mov
mov
jbe
xchg
adc
adc
movsl
fadds
or
lods
loopne
inc
cwtl
add
pop
imull
int
aaa
mov
js
cmp
in
test
xor
dec
out
mov
fidivl
inc
fdivrl
push
fimull
push
int
sbb
mov
into
inc
sub
repnz
dec
mov
negl
pop
cwtl
lret
out
iret
or
repz
and
std
pop
mov
mov
xor
std
sbb
mov
xchg
jo
arpl
out
incl
push
sahf
roll
test
mulb
gs
inc
insl
mov
jge
outsl
inc
mov
push
cmpsl
dec
aad
pop
jmp
jge,pt
xlat
lds
out
cmp
mull
pop
test
xlat
in
movsl
cmp
fisubl
das
lahf
jl
mov
sarl
fildll
shlb
pop
out
loope
sub
cwtl
jbe
mov
jge
add
or
pop
and
out
fwait
push
mov
push
lds
fld
push
jns
inc
mov
jnp
gs
mov
and
outsl
mov
or
cmp
aad
cs
mov
cmp
lods
cmp
stos
out
jnp
fildll
outsl
int
mov
xchg
inc
and
lret
test
shrl
gs
jae
insl
push
sbb
fsub
and
push
cld
fcmovb
and
int
lds
ror
outsl
and
notl
cmp
test
or
mov
gs
je
jns
jae
xlat
pop
jge
aad
outsb
dec
sub
or
shll
aam
scas
call
fisubs
jo
mov
lret
xchg
and
dec
add
into
stos
lods
adc
jae
and
xchg
inc
xor
pop
mov
sar
popa
push
lods
repnz
enter
in
lds
ljmp
push
pop
jnp
cltd
xchg
xchg
xor
loopne
stos
pop
adc
mov
add
and
mov
sub
cwtl
push
dec
jns
mov
add
bound
popa
and
mov
fsts
sub
imul
lock
adc
sti
imul
in
arpl
sarl
out
insb
sti
pop
outsb
and
mov
dec
add
insl
lcall
imul
push
incl
lcall
dec
cwtl
insl
sub
dec
test
aam
gs
addr16
xor
cmpsb
jns
push
aas
out
mov
mov
jmp
stos
mov
mov
push
in
jae
jmp
test
out
push
fneni(8087
push
xchg
inc
xor
out
test
ja
jge
gs
and
xor
add
cmp
mov
xchg
mov
js
popf
scas
xor
gs
aam
xchg
int3
sub
aad
out
pop
shlb
lahf
xchg
call
sbb
dec
cmp
mov
idivl
mov
cmp
out
ficoml
pusha
roll
mov
push
scas
negl
aad
sbb
sbb
daa
adc
rorl
push
cmc
push
test
inc
ds
cmp
jl
lahf
imul
push
or
dec
xchg
rcrl
out
xor
mov
sbb
cmp
push
ljmp
sub
dec
int
adc
dec
idivl
and
or
cmc
cmpsb
adc
adc
es
out
add
ror
out
aad
jle
scas
cmc
in
jmp
pop
das
sub
jo
into
xchg
mov
cltd
in
sbb
cmp
jg
ja
add
int3
inc
mov
dec
mov
lods
push
cmpsl
adc
adcb
or
mov
jbe,pn
shlb
cmpsl
mov
mov
dec
pushl
jb
imull
push
mov
idivl
outsl
cmp
jnp
pop
mov
cli
popl
cmp
mov
int
imul
pop
or
xlat
xchg
into
inc
add
cmp
and
xchg
rcrl
xchg
pop
stos
cmc
outsl
or
and
imul
test
ret
loope
js
xchg
add
add
xor
jo
pop
sbb
bound
mov
mov
lcall
test
adc
aad
lock
push
jns
lock
xchg
dec
test
jge
xor
sub
adc
imul
into
xor
js
lcall
fwait
es
insb
div
aas
mov
fiadds
fs
jl
clc
mov
mov
inc
dec
ja
jmp
mov
jne
or
add
int
fiadds
or
test
mov
dec
cmpsb
add
insl
add
js
movsb
inc
pop
out
jbe
call
lock
ret
int3
xlat
mov
jne
or
mov
add
outsb
int
into
js
mov
inc
movsb
aas
jns
or
jno
mov
sbb
and
mov
xchg
cld
lods
push
sbb
andl
sub
fptan
int3
lods
fs
dec
adc
movsb
clc
mov
fists
in
imul
pop
sub
cld
mov
iret
jmp
outsb
insl
in
sub
cmpsl
test
xchg
mov
lcall
testl
jns
lea
inc
das
mov
mov
mov
sbb
mov
lods
outsl
push
out
inc
sub
std
imul
loope
popa
sbb
ljmp
cmp
lods
xlat
addr16
inc
sub
pusha
std
jp
insb
xchg
cld
js
pop
and
fistpll
test
in
fsubs
and
sub
mov
cmc
dec
imul
out
pop
xchg
and
mov
add
cmp
mov
push
fldt
or
push
std
push
jbe
cvtpi2ps
jns
fmuls
cmpsl
das
inc
add
add
push
outsl
add
mov
adc
popa
movsb
inc
iret
cmp
in
in
push
adc
inc
lods
dec
inc
dec
popf
cmc
es
and
cmpsb
or
dec
dec
sub
jmp
fistpl
out
mov
stc
mov
fucomp
sub
and
mov
jp
pusha
fcoml
mov
mov
mov
orb
cli
mov
mov
jmp
in
fisubs
rcll
sub
aad
loope
and
lret
dec
add
xchg
loope
imul
pop
sub
jge
aad
sbb
mov
mov
iret
setae
xchg
cmpsl
and
out
stos
jmp
add
popf
mov
test
and
lods
pop
neg
and
xchg
fwait
jns
cmpsl
ljmp
xchg
les
push
dec
fwait
cmc
int
jo
les
std
pop
jns
imul
leave
cmp
inc
add
shufps
pop
cwtl
dec
call
pusha
lahf
aad
mov
stc
add
fcmovnb
add
cld
jb
out
rorb
cltd
dec
or
nop
mov
adc
mov
int
jno
push
push
pop
ret
mov
and
mov
push
xchg
aam
pop
and
mov
loope
cmpsl
add
push
xor
dec
dec
add
or
or
out
xor
scas
cmp
jl
mov
mov
mov
dec
jle
pop
add
dec
dec
dec
ret
sbb
cli
sub
dec
jo
dec
sub
bound
fldl
fnstcw
push
push
add
int3
jmp
iret
dec
out
push
mov
sarb
sbb
loope
pop
cmp
push
xchg
arpl
or
xchg
and
push
mov
lahf
mov
cli
push
dec
in
inc
dec
arpl
mov
jae
mov
test
jnp
imul
ret
and
dec
jmp
in
lret
mov
sbb
movsb
data16
lds
mov
dec
popa
test
mov
fiadds
cltd
inc
fmuls
push
dec
inc
outsl
mov
mov
sbb
xor
pusha
test
or
jg
add
lcall
cli
cltd
jg
or
mov
stos
aad
cmp
add
xlat
jl
jmp
psubsw
inc
icebp
cmpsl
xchg
mov
sete
mov
jl
in
dec
scas
inc
aaa
push
mov
fbld
push
stos
ja
adc
cmpsb
pop
inc
repnz
out
jns
ljmp
nop
outsb
aad
imul
push
in
mov
xor
aas
out
shr
stc
xor
and
xchg
mov
xchg
popa
xor
test
add
lods
test
fistpll
aad
sbb
hlt
lods
add
adc
and
push
lods
and
test
fildll
negb
outsl
lahf
out
popf
aad
icebp
dec
push
lcall
addr16
pop
jg
cmc
shl
sub
mov
inc
cld
pusha
dec
fwait
push
arpl
int3
dec
xchg
push
or
mov
xchg
cld
sarb
fnsave
sbb
les
out
fcomps
xor
push
or
mov
add
mov
out
xlat
mov
jnp
sti
pop
push
xor
mov
fimull
mov
lret
inc
ja
leave
sti
mov
mov
and
and
mov
pop
idiv
lahf
mov
aad
pop
dec
cmp
add
mov
pop
mov
iret
cmc
mov
inc
dec
subl
xchg
sbb
sbb
orb
pop
daa
scas
mov
jb
int
neg
std
rorl
out
add
jecxz
mov
aad
sar
nop
mov
imul
sbb
cmp
outsb
aas
dec
adc
cmp
mov
movsl
sub
leave
out
in
xlat
scas
dec
movsb
sbb
outsb
mov
pushl
add
roll
add
lock
lods
pop
xchg
xlat
xor
inc
mov
outsl
xor
cmp
push
fimuls
pop
js
aad
sub
andb
jg
sbb
dec
inc
out
std
cli
pop
lea
push
gs
sub
int
lahf
mov
in
add
cmp
int3
outsl
call
arpl
xor
xor
sti
push
test
shr
sbb
popa
mov
sarl
fcmovnu
in
jg
xchg
popa
in
fucomp
std
out
cmp
mov
sbb
inc
lcall
pusha
dec
dec
or
sti
push
push
sub
cmp
rorb
sbbl
in
pushf
jmp
scas
int
pop
or
les
xlat
mov
inc
xchg
adcb
call
jo
jnp
jno
loopne
sub
cmp
out
cmp
jae
cmp
in
setne
add
cmc
into
cltd
xchg
fmull
das
rcll
cmpsl
jl
test
xchg
cld
cmpsb
push
out
cmp
movsl
mov
pop
or
adc
jno
jmp
jecxz
inc
cmp
or
imul
xchg
addr16
ljmp
icebp
aad
test
insb
and
or
mov
inc
scas
dec
push
popa
dec
mov
and
xor
mov
or
enter
push
or
mov
fsubl
loope
pop
dec
adc
xchg
and
pop
cwtl
gs
and
lcall
adc
push
aad
loope
bnd
rolb
lea
cmp
jmp
xchg
xchg
xchg
sub
lret
in
pop
aad
adc
mov
cli
loopne
sahf
dec
pop
push
lods
jge
sub
sbb
divb
add
aad
es
outsl
leave
jae
mov
jge
xchg
rcrl
call
lcall
push
mov
bound
idivl
fdivrl
out
push
sub
jg
mov
dec
lods
adc
sbb
dec
add
das
fisubrs
pop
aam
dec
testl
or
jo
je
call
jge
adc
jns
outsb
lcall
or
dec
les
mov
mov
mov
push
jnp
xchg
fucomi
fmull
cmpsb
and
fnsave
mov
xchg
aam
jge
cmpxchg
scas
push
int3
push
inc
in
push
lret
push
ja
int
aad
inc
inc
jae
or
cmpsb
outsl
xchg
jl
lods
dec
daa
ljmp
hlt
popa
loopne
sbb
jo
push
add
xor
or
mulb
das
sub
mov
jg
dec
dec
aad
xchg
and
pop
es
jge,pn
daa
jno
data16
dec
sub
popa
push
mov
dec
loop
add
mov
mov
lock
push
ret
loope
and
jl
and
inc
mov
enter
jnp
inc
sub
adc
cmp
in
mov
or
pop
xchg
add
scas
or
movsl
sub
xor
xor
add
jmp
or
fmulp
mov
pop
les
or
pop
loop
cmp
aas
dec
aad
das
aad
ret
cmp
int3
mov
aam
out
add
call
pop
pop
cltd
adc
cwtl
and
sub
xchg
in
dec
jle
imul
test
into
push
fldt
lods
mov
and
add
inc
mov
sahf
out
loope
ret
cltd
or
test
sub
sti
sub
icebp
dec
mov
dec
repz
pop
lret
addr16
cmp
or
mov
inc
jge
dec
jl
adcb
cmp
xchg
xor
push
inc
cmp
in
xchg
js
add
int
sbb
mov
pop
dec
adc
insb
dec
lods
pop
stc
sub
fimuls
adc
sub
and
or
iret
je
xor
sub
cli
out
rcr
cmc
nop
inc
repz
movsb
fiaddl
pop
xchg
dec
int
and
adc
cmp
jnp
movsb
fimull
dec
ja
xchg
xchg
arpl
pop
je
jp
cmp
movsb
dec
outsl
aad
icebp
mov
shlb
cmp
mov
popf
int
sub
inc
ds
insb
cltd
fs
in
repz
outsl
push
jno
push
stos
dec
sub
cld
mov
inc
faddl
jl
aam
js
mov
mov
xor
jbe
xor
movsb
sub
push
or
dec
jge
jg
fnstsw
int3
inc
ss
push
sti
pop
hlt
arpl
push
lock
stos
mov
insb
dec
fs
fnstenv
jb
fbld
add
cwtl
adc
cmpsb
lods
inc
xor
call
add
mov
mov
add
imul
sub
adc
xchg
iret
lcall
dec
fnsave
jo
xlat
sbb
sub
jne
xchg
sbb
sub
pop
movq
lahf
dec
lea
pop
ret
pop
mov
lods
roll
enter
cmp
filds
mov
add
dec
lcall
sub
addr16
dec
inc
sbb
jnp
jecxz
inc
sub
jle
xchg
push
mov
pusha
lods
mov
orl
in
out
mov
jecxz
cmp
jne,pt
sub
aad
repz
push
les
fs
cmp
jns
cmp
xchg
pop
insl
or
add
movsb
inc
out
push
pop
int
xchg
lods
or
outsb
dec
jl
xlat
ja
js
lods
pop
scas
sbb
xchg
je
int
push
jge,pt
push
ficoms
scas
in
imul
fs
pop
or
aad
sti
add
and
aam
push
lret
andl
push
cmp
jp
lods
lods
int3
lahf
das
ds
push
xchg
sub
inc
inc
or
mov
xor
arpl
rcr
sbb
mov
inc
jmp
dec
sub
ficomps
cmp
data16
pop
sbb
mov
add
lea
pop
fwait
and
push
loop
in
pop
fdivrs
ret
push
rclb
cwtl
and
cmp
or
dec
push
mov
movsb
lea
or
xchg
fcomip
inc
mov
pusha
out
fucom
and
sub
stos
push
mov
ficoml
movsl
pop
out
jbe
add
and
sbb
scas
jno
xor
mov
pop
and
dec
out
lock
inc
out
dec
int
jb
hlt
adc
sub
cmp
mov
jl
push
jb
push
or
imul
adc
sub
outsb
push
cli
enter
mov
shrl
dec
cmpsl
cmp
sahf
mov
push
sbb
rcr
jge
out
movsl
orl
gs
sub
xor
adc
lods
push
aas
out
jae
mov
jbe
fisubs
in
dec
shlb
bound
push
or
cmp
loope
mov
dec
int
dec
mov
mov
nop
xchg
stc
fcom
cmpl
clc
cmp
cld
sahf
add
xor
mov
mov
movsb
mov
xchg
popa
dec
pop
jle
ret
je
jge
xchg
cmc
aad
adc
push
mov
sti
popa
popf
jae
mov
adc
inc
cmp
push
inc
sub
incl
xchg
lock
cs
adc
int3
sbb
pop
dec
adc
cmpsb
imull
faddl
mov
mov
xor
outsl
mov
fwait
xchg
adc
outsl
sti
xor
mov
test
pop
int
inc
inc
pop
sub
jo
pop
jl
mov
aaa
push
cltd
cmp
nop
and
pop
xchg
into
and
and
in
outsl
xlat
jecxz
dec
cmpsl
lds
pop
icebp
setb
fbstp
jns
sub
ja
xchg
push
dec
pop
or
std
xchg
test
or
idivw
out
lret
sti
bound
mov
and
push
test
roll
jge
sti
int
outsb
lock
inc
jp
inc
movzbl
cmpsb
in
mov
xlat
dec
add
and
sti
mov
mov
loope
out
cld
cmp
loopne
loop
mov
mov
out
xchg
mov
mov
cmp
inc
dec
aad
call
pop
or
imul
test
xchg
xchg
mov
jmp
mov
mov
adc
movsb
mov
xor
jnp
lds
push
push
lock
popa
cs
fs
int3
ja
mov
dec
fbstp
cmp
mov
stc
or
addb
sub
iret
inc
je
ss
mov
fimuls
sbb
sbbl
mov
add
sub
dec
cwtl
lahf
or
aad
xchg
jge
cmp
mov
call
nop
mov
cmp
cmpsb
adc
push
dec
aad
jo
dec
pop
stos
jg
popl
aad
aad
addr16
push
into
pop
rorb
addr16
sub
push
mov
jp
in
pop
mov
mov
xor
dec
dec
cmc
ret
xchg
mov
add
sbb
test
std
scas
call
add
push
jge
pop
movsl
fsubp
jae
lea
mov
pop
push
dec
or
jecxz
fbld
push
and
pop
cmpsb
cs
push
and
fmull
xlat
loopne
cmp
shll
dec
rclb
or
loop
adc
pusha
and
cmp
mov
idiv
pop
push
mov
cmp
popf
stos
repnz
fimuls
and
iret
cmc
repz
jl
and
pop
call
xor
movb
add
loope
push
cmc
decl
cld
mov
aad
imul
scas
adc
pop
xor
imul
nop
cs
cmpsl
nop
pusha
and
cmc
je,pt
lock
adc
cmpsb
inc
push
mov
mov
sbb
cmc
addr16
int
addr16
fcomps
cmc
loopne
jbe
xchg
lcall
mov
sti
loop
cmp
fstps
jmp
filds
fiaddl
out
mov
loope
sti
ja
jb
cmp
std
repnz
push
fadds
shr
int
push
aaa
repz
and
xchg
fisttpl
dec
adc
lahf
and
adc
sbb
repnz
jl
jl
add
outsl
les
and
mulb
add
stos
hlt
psubsb
dec
or
jle
inc
ficoml
sbb
dec
sub
iret
test
or
fwait
out
sub
jecxz
jecxz
icebp
idivl
sbb
mov
xchg
into
insb
aaa
pop
push
loop
adc
and
int
push
mov
mov
scas
repz
loope
cmp
cmpsb
stc
lds
pop
adc
sub
push
hlt
and
shlb
mov
cmc
repnz
jae
outsl
or
adc
sbb
adc
out
dec
call
xor
clc
dec
dec
insb
jb
enter
sahf
les
jae
into
stc
loope
adc
lahf
cmp
orb
in
cmp
xchg
cmp
loope
push
jp
out
ja
cwtl
dec
xchg
pop
inc
fistpll
dec
mov
or
jecxz
out
dec
mov
or
lahf
cmc
push
mov
mov
push
mov
fs
mov
push
pop
xor
mov
and
cmc
mov
dec
ret
enter
jle
cmp
pfmin
mov
insl
ficompl
ds
scas
push
xchg
sbb
push
leave
js
es
rcpps
lods
push
jno
sbb
pop
pusha
dec
or
mov
push
sbb
inc
lret
arpl
push
push
and
das
fstl
pop
fldcw
and
int
jne
xchg
push
jle
ret
and
inc
negb
xlat
xchg
ja
arpl
xchg
imul
xchg
add
or
push
push
ret
rorb
pushf
sti
pop
or
mov
popf
arpl
icebp
add
mov
dec
xchg
pop
mov
ret
fisubs
aad
pusha
or
xchg
cli
mov
aas
popa
into
mov
add
and
jnp
jae
mov
fdivs
nop
adc
adc
sub
and
mov
nop
ja
inc
sti
sti
fwait
out
lods
insl
int
and
aaa
lds
jae
call
sbb
arpl
jge
lds
pop
mov
stos
aam
out
stc
stos
aas
xchg
mov
or
mov
xchg
ficomps
cmp
mov
popl
jae
arpl
mov
sub
std
add
mov
scas
sti
clc
jb
cmp
push
rol
xchg
ret
add
pop
sarl
jge
cmpsb
sbb
xlat
insb
inc
outsl
sbb
inc
cld
push
imul
push
call
mov
pushl
dec
inc
mov
pusha
or
cmp
aad
aaa
cmp
pop
xor
mov
xchg
test
cmp
imul
cmpsl
rcrb
stos
std
mov
cmp
imul
divb
testl
inc
movb
mov
incl
aad
clc
and
lahf
push
push
xchg
aam
xor
and
out
enter
sahf
imul
cmpsb
push
xchg
ljmp
aad
scas
adc
stc
or
adc
inc
cmp
push
add
js
lea
xor
insl
dec
test
cli
inc
xlat
xchg
jl
adc
aad
stos
bound
js
leave
shlb
jnp
adc
sahf
fwait
pop
je
cmc
pop
dec
fists
xchg
rclb
mov
cwtl
lahf
and
inc
dec
inc
cli
inc
sbb
int
pop
sarl
jns
shrb
sub
mov
xchg
fwait
rolb
cmp
cs
mov
cmc
mov
orb
or
pop
xchg
sti
lods
imul
and
mov
add
cmp
cltd
outsl
daa
and
shrb
js
pop
cli
lret
idivb
lods
insb
ret
outsl
adc
jecxz
fisttps
mov
in
out
jns
push
call
js
nop
imul
adc
cmp
pusha
sahf
inc
adc
mov
adc
jecxz
movsl
jl
fiaddl
loopne
es
adc
test
mov
jb
es
cmc
add
shlb
test
and
iret
adc
sub
iret
dec
mov
mov
into
in
icebp
mov
js
xchg
sti
cli
pop
adc
dec
xor
out
or
xor
add
ss
inc
cmp
std
mov
pmaddwd
ds
fcomi
or
imulb
aas
lret
lods
mov
cmc
outsl
and
icebp
jle
pusha
int
lcall
mov
loope
scas
outsl
lock
nop
mov
push
jae
pushl
fs
pop
aad
sahf
push
mov
jns
dec
push
ds
mov
lods
pusha
jecxz
pop
fsub
mov
push
neg
xchg
les
fsubr
lret
sub
or
outsb
add
js
mov
lods
cmc
imull
pop
mov
jmp
cmp
inc
in
pop
sub
fcmove
int
sbb
sub
aam
adc
adc
add
mov
mov
ds
xchg
in
mov
pop
sub
dec
dec
fs
inc
test
xor
rorb
sbb
ret
and
push
sarb
imul
clc
pop
rcrb
aad
cmpsb
xchg
inc
aad
inc
sahf
mov
or
arpl
add
rcl
and
adc
cwtl
sbb
lods
orl
inc
test
sbb
mov
loope
int
mov
xor
lea
ja
lods
adc
int
mov
scas
les
add
push
leave
imul
adc
imul
cmp
mov
ret
mov
fucomi
xor
push
aam
dec
dec
mov
push
mov
cwtl
lea
add
cwtl
dec
xor
push
pop
adc
jp
wrmsr
out
dec
popa
in
fildll
and
imul
repnz
in
cli
cmp
xchg
mov
mov
int
lds
push
jbe
or
or
xor
mov
adc
addl
push
or
push
pusha
fs
leave
mov
pop
mov
in
jns
and
pop
jbe
insb
xchg
mov
out
lcall
mov
sub
jge
push
adcb
out
or
movsl
fisttpll
mov
stos
mov
loop
lahf
adc
into
xor
test
pop
icebp
loope
dec
mov
mov
push
mov
adc
jle
xchg
jno
pushf
ss
mov
les
xor
jge
push
or
cmc
push
push
push
sbb
add
xor
addr16
les
xchg
loope
addl
dec
dec
sub
mov
dec
push
test
fiadds
or
adc
fisubl
loope
adc
push
add
cld
add
adc
notl
jo
mov
push
and
sbb
or
lcall
mov
jnp
adc
in
pusha
jl
and
xchg
ret
or
cmpsb
mov
je
repnz
mov
popfw
add
pop
cmc
lock
xchg
mov
pushf
js
fmull
cmc
loop
pushf
out
call
cmp
fcoml
adc
cld
out
shrb
xchg
dec
and
sub
and
cs
inc
mov
cli
gs
or
jae
inc
pop
push
divl
clc
out
scas
dec
js
push
in
jb
movsb
cltd
outsb
mov
in
add
push
mov
adc
mov
stos
xor
cmp
cmc
xchg
imul
sbb
paddb
aad
push
mov
sbb
out
lret
out
sidtl
imul
add
cmp
dec
xchg
data16
mov
fdivrl
push
and
call
out
ja
or
xchg
popa
add
sbb
leave
sbb
sub
or
aas
jne
sub
testl
jne
dec
mov
frstor
mov
push
jmp
push
push
leave
inc
xchg
ret
or
or
push
adc
int
jmp
stos
add
pop
xor
repnz
in
xlat
aad
pushf
mov
and
movsb
fimuls
push
ficompl
dec
lock
cmc
cwtl
bound
pop
shlb
mov
cltd
mov
test
mov
push
int
xchg
mov
xchg
ds
insl
mov
add
jg
adc
mull
mov
std
mov
loop
cmp
push
dec
std
lcall
mov
dec
or
mov
test
push
std
pop
decl
fcomip
add
jge
or
lcall
outsb
fdivs
add
in
pop
fists
mov
xchg
xor
repz
mov
pop
xchg
mov
xchg
sbb
movsl
mov
cmpsb
fwait
out
mov
and
jge
cs
lock
popa
add
xor
lods
push
iret
mov
cwtl
mov
sbb
les
lods
rol
cltd
sbb
mov
rorb
int
push
std
outsl
sub
sub
cli
xchg
xchg
mov
dec
shl
inc
xor
cmpsb
in
stc
shrl
int
mov
idiv
ret
sub
int3
mov
mov
push
jb
add
int
push
cmp
pop
inc
jmp
add
test
jbe
jo
mov
outsb
or
mov
lcall
mov
popa
sub
sub
enter
jne
dec
jns
jnp
bswap
in
and
add
repnz
dec
imul
aad
adc
ds
mov
xchg
cmp
rclb
sti
cmc
dec
ds
stc
push
loop
out
xlat
jo
cmp
daa
fbstp
inc
repz
mov
jmp
js
and
in
incl
cmc
dec
mov
xchg
insl
jnp
gs
pop
aad
cmc
adc
fldenv
inc
movsl
outsl
push
adc
scas
int
imul
pop
mov
lods
sbb
push
sti
mov
adc
or
mov
enter
inc
std
adc
shrb
mov
adc
jae
pushf
das
lcall
push
jmp
add
sahf
or
add
fst
mov
sbb
or
cmp
inc
jns
push
subb
xchg
cmp
or
shr
cli
xchg
subl
or
push
or
lods
adc
xchg
arpl
nop
aam
cmp
shl
or
or
sahf
sahf
dec
aad
mov
dec
outsb
and
and
fstl
jl
and
int
dec
pop
js
fcomip
inc
sub
js
push
mov
cmp
xchg
and
xchg
pushl
adc
mov
das
cmp
adc
sbb
cmc
pop
stos
dec
jge
push
cmp
mov
and
jle
mov
inc
jecxz
pop
gs
cmc
test
dec
rclb
xchg
stos
int
sbb
push
fcmovnbe
ss
mov
cmc
test
mov
jle
xchg
xchg
dec
dec
xor
pop
imul
aad
mov
and
xchg
movsb
dec
pop
or
or
mov
int3
ret
fsubrl
dec
sbb
out
mov
xor
jge
popa
repz
cmc
outsb
cmp
into
dec
aad
mov
jo
dec
xchg
or
add
cmpsl
inc
or
insl
mov
xchg
and
cld
mov
push
out
int
lds
hlt
fldl
js
lods
pop
xor
shlb
mov
pushf
xor
xchg
inc
mov
test
push
ror
sbb
out
add
add
in
dec
and
mov
bound
div
cmpsb
lret
dec
xchg
jmp
pop
lock
insb
and
mov
lods
or
mov
or
stos
xchg
and
push
pop
mov
clc
imul
cmpsl
insb
jne
dec
push
push
push
sub
dec
dec
aad
ljmp
or
pop
fsubl
push
imul
push
xchg
mov
les
dec
jge
loope
pop
and
test
mov
pop
cmp
push
adc
ret
adc
movsl
mov
test
pusha
sub
sbb
jb
pop
jle
mov
out
lock
xlat
jnp
cmc
adc
mov
sub
xchg
dec
jne
repz
push
mov
fadds
mov
jnp
push
fsubr
jmp
inc
sti
iret
pop
or
scas
or
sar
lods
popf
add
lods
das
out
fsub
sub
mov
pop
test
xchg
out
dec
nop
or
add
or
mov
aam
outsl
imul
xchg
out
pop
xor
push
inc
cmp
cmp
aas
jge
and
xor
into
in
dec
pusha
and
mov
repz
mov
jl
lret
lods
adc
push
lahf
add
mov
dec
mov
inc
int3
out
or
in
adc
aad
mov
jno
or
dec
jmp
mov
pusha
movsl
iret
dec
xchg
mov
sbbl
xchg
sbb
jb
inc
test
mov
or
fildl
testb
outsl
inc
das
mov
stos
aad
outsl
push
outsl
iret
mov
lds
or
leave
cmp
mov
xchg
fwait
mov
jns
pop
push
jg
sub
mov
cmp
push
xor
aas
fbld
cmc
cltd
sub
mov
adc
push
outsb
xchg
jecxz
bound
in
cltd
and
inc
mov
and
aad
inc
push
xchg
ljmp
leave
mov
notl
pop
inc
and
mov
stos
jb
int
dec
mov
push
cmpsb
xor
fisubrl
inc
sub
mov
dec
lret
and
xor
stos
xchg
loopne
inc
jnp
std
test
cmp
xor
add
push
mov
je
inc
mov
jne
push
xchg
cmp
sub
in
mov
stc
out
sti
in
dec
aad
stos
popa
aas
push
mov
mov
aad
icebp
jbe
cmc
int
dec
out
dec
clc
nop
pop
cwtl
test
add
outsl
mov
mov
stos
int
mov
adc
out
shlb
je
les
push
iret
sub
inc
pop
add
dec
adcb
cld
jns
cmpsl
add
nopl
mov
adc
or
sub
sub
xchg
insb
std
ds
add
jnp
lcall
outsl
jp
mov
bound
add
adc
decb
cld
test
ret
icebp
idivb
pop
addl
mov
cltd
lret
mov
sarl
mov
or
test
mov
rolb
sub
or
mov
inc
jne
dec
ss
dec
jp
popf
sub
dec
and
adc
adc
dec
out
cmc
sub
mov
mov
mov
pop
inc
nop
shrl
sbb
or
jno
add
mov
addr16
pop
or
push
xor
pusha
or
jl
popa
cmp
adc
in
jne
lock
int
dec
pop
or
push
adc
ljmp
xor
int3
sbb
mov
dec
mov
mov
jo
jnp
jmp
fidivs
into
dec
mov
imul
sub
in
xchg
int3
pusha
sarb
add
xchg
pop
sub
cmc
sbb
sbb
mov
das
sti
cmp
jo
jb
and
xchg
movsl
sti
jo
lock
and
les
insb
rolb
mov
and
cwtl
jne
stc
push
mov
push
loop
les
shrl
dec
loopne
enter
lahf
popa
sbb
ja
dec
sub
lar
mov
out
es
dec
aad
adc
push
xorl
mov
xchg
out
cmc
push
pop
mov
xchg
fcmovu
flds
mov
movsb
repz
or
xchg
cmp
stos
or
dec
fwait
cmp
arpl
mov
add
cmp
call
movsl
int3
xor
sti
repz
push
fildl
mov
dec
ja
mov
mov
xor
jo
push
lods
or
std
mov
xchg
add
neg
xor
or
xchg
inc
ss
loop
outsb
cmp
loop
out
mov
popf
mov
mov
jecxz
xchg
pop
dec
lock
icebp
lea
adc
xchg
xchg
jmp
pusha
cmpsl
jg
rsqrtps
mov
cmpsb
cli
test
inc
cmp
call
jg
mov
cmc
stos
dec
icebp
mov
sub
sbb
out
sti
jmp
rorl
out
and
jle
mov
adc
mov
dec
mov
and
xor
cmp
cmpsb
add
out
dec
dec
xchg
mov
push
xchg
jae
imul
ss
inc
jo
jl
and
xchg
add
xorl
xchg
lret
inc
into
cmp
inc
xchg
lods
incl
jns
orb
xchg
push
je
and
push
les
mov
sub
mov
popa
dec
pop
shl
cmc
lret
mov
imull
fwait
pop
in
lret
dec
decl
mov
aaa
popf
out
ds
std
push
push
mov
in
add
js
mov
test
jns
cmp
out
fiadds
ds
cli
push
mov
out
push
cmc
out
fldt
aad
or
popf
ja
or
dec
pop
sub
cmp
pop
jp
pop
xor
daa
pushl
imul
adc
scas
jbe
dec
popa
insb
rorl
push
cmp
stc
adc
pop
dec
into
test
mov
out
lods
xchg
insl
xchg
add
mov
fs
pop
or
call
mov
rorl
repnz
cwtl
lcall
push
add
push
sarl
pop
fwait
mov
xchg
psubb
xchg
int3
dec
aas
stc
lods
shrl
dec
aad
pop
test
cmp
sarb
sub
hlt
sub
es
fcoml
cmc
cmp
dec
ds
mov
insb
xchg
jmpw
out
push
pop
sarb
nop
cmp
or
and
or
mov
test
adc
stos
push
mov
scas
cs
fwait
cmpsl
insl
dec
inc
out
das
lods
sbb
stos
es
les
or
mov
jne
into
push
fdiv
xor
addl
fdivrs
cmp
mov
mulb
movsb
clc
push
xor
xchg
cmp
lret
pusha
ret
jle
xor
aam
mov
sbb
dec
pusha
sbb
stos
mov
adc
inc
mov
and
inc
xor
imul
mov
fstpl
or
jg
jmp
jle
shrb
fsubrs
cmp
dec
and
cmp
jnp
inc
lcall
in
mov
sbb
std
popf
jns
scas
jo
pop
sbb
repz
inc
jne
mov
lock
jnp
mov
and
add
xchg
repnz
xor
sub
push
xor
ret
pop
pop
jae
shrl
rep
and
pop
int3
mov
mov
imul
push
pusha
jl
push
pop
xchg
cmp
push
popf
push
xor
mov
aas
xchg
ja
pop
adc
sub
and
mov
loope
or
sbb
and
test
or
cmp
cmc
push
int
jle
sti
or
cld
jo
fists
adc
push
fiadds
mov
dec
stc
jne
shlb
lds
adc
add
cmp
fistl
not
aam
sub
jge
call
add
adc
jo
sub
int
cpuid
jp
gs
aaa
mov
dec
push
rcll
xor
push
sub
add
dec
or
and
orb
das
aad
inc
or
mov
add
xor
pop
or
pandn
jg
sti
and
aad
inc
int3
sub
mov
aad
das
dec
xor
imul
or
iret
iret
dec
push
fisttpll
std
push
cltd
push
sub
adcb
fsubs
jge
cmp
lods
mov
pop
out
popa
in
cmpsb
adc
push
mov
roll
fcomip
jg
daa
sbb
cmp
fucomip
mov
pop
lahf
sbb
cld
mov
das
ljmp
sub
fnstcw
mov
out
sub
test
and
xor
int3
cmc
and
fwait
add
sbb
into
pusha
loope
sub
mov
shrb
int
sub
aas
popf
cmp
cmpsl
int
add
jle
mov
jmp
xor
gs
push
pop
inc
mov
std
inc
fnsave
mov
je
outsl
push
or
std
mov
mov
adc
jnp
or
les
fcmovne
xlat
pop
lds
lret
cmc
in
call
adc
pop
loop
xor
sub
test
stos
imul
pop
filds
bound
call
mov
shrb
jp
sub
mov
cmc
ja
mov
xchg
mov
mov
pop
out
movsb
outsl
xor
mov
adc
sbb
mov
jns
cmpsb
sti
mov
jl
jg
incb
mov
adc
jp
pop
mov
jl
dec
cmp
mov
push
les
stos
sti
cmp
cmp
shlb
mov
xchg
cmp
jl
jns
dec
arpl
insl
aad
mov
push
sar
or
into
inc
hlt
adc
ja
cmp
xchg
cmp
rorb
adc
xlat
lahf
and
out
push
pop
inc
xlat
cmp
test
pushf
out
sub
daa
imul
sbb
fcomip
loope
push
and
iret
pop
jnp
aad
out
add
xchg
sub
aad
add
aaa
sub
fdiv
stos
add
mov
push
bound
arpl
jmp
sbb
cmpsl
adc
push
cmp
pop
sti
mov
push
xor
call
xchg
inc
jg
xchg
popa
into
xchg
add
loop
dec
pop
sub
fimuls
add
mov
mov
adc
mov
mov
in
fs
pushf
out
inc
dec
lret
jno
call
inc
mov
call
stc
mov
xchg
jns
jp
fiadds
jg
dec
arpl
adc
mov
xor
lret
jo
inc
movsb
mov
add
or
movsb
adc
icebp
lret
inc
iret
test
in
es
mov
mov
xor
orl
jg
xchg
push
xor
and
inc
mov
dec
js
pushf
sub
xchg
nop
bnd
adc
mulb
sub
fnstsw
jl
and
dec
iret
push
cltd
lcall
cmp
ret
lods
mov
mov
ljmp
into
or
jmp
aaa
imul
adc
add
iret
mov
je
fcoms
in
bound
daa
and
jmp
sub
add
repnz
mov
mov
pop
dec
mov
push
dec
adc
xchg
sbb
test
inc
mov
lods
cmp
jmp
add
xchg
or
fcmovne
add
cmp
and
into
cmp
mov
sbb
clc
clc
adc
and
and
and
hlt
or
lods
jmp
popf
in
loope
test
jle
jmp
mov
mov
imul
call
mov
nop
dec
jecxz
aaa
mov
xlat
imul
out
add
dec
adc
in
push
icebp
sti
pushf
js
rol
addr16
in
aad
je
andl
push
xchg
add
insl
dec
cmp
lahf
push
arpl
xchg
aad
lahf
sub
orl
add
in
mov
sbb
leave
aad
pop
push
jp
out
pop
add
cmpl
add
mov
inc
xchg
pop
mov
cmp
fs
jbe
stc
aad
aaa
pop
shr
jns
out
cld
mov
loopne
mov
mov
xchg
inc
and
mov
jl
or
bound
ja
push
jae
cltd
sbb
cmpsl
clc
dec
cmc
xchg
sbb
and
movsb
fcmovnbe
push
subl
inc
or
mov
ret
jns
cli
push
mov
mov
and
lea
mov
in
or
jmp
cmpsl
inc
setg
add
mov
mov
push
faddp
dec
add
jecxz
pop
out
mov
pusha
insb
lds
repz
movsl
pop
das
and
xchg
push
xchg
test
std
test
iret
test
dec
int
or
shlb
pop
mov
jg
mov
mov
push
out
adcb
mov
testl
cmc
cmp
in
arpl
iret
cmp
cwtl
idiv
fistpll
sahf
or
xchg
add
mov
and
ror
sub
addl
call
cmp
mov
push
or
pop
pop
or
mov
xchg
pop
mov
mov
adc
movsl
aad
stos
call
cmp
imul
es
lods
mov
pop
lea
inc
mov
nop
cmp
movsl
in
push
add
jnp
rcll
mov
bound
aad
inc
nop
mov
js
cmpsb
mov
sti
andl
outsl
push
pop
mov
mov
or
xchg
mov
sarb
test
cmp
js
pop
sub
or
int
adcb
pop
divl
push
ret
lea
aad
lret
pop
cmc
mov
jno
sbb
adc
adc
xchg
cmpsl
pushf
and
cmp
mov
jmp
ficomps
iret
mov
cmp
rcrb
dec
push
aad
xchg
cmc
sub
jnp
and
sub
hlt
repnz
fcmovnb
push
ret
mov
shl
mov
sar
pop
cmpsl
mov
dec
mov
or
ljmp
and
mov
sti
jmp
cmc
dec
inc
mov
sbb
fistpl
je
lcall
jmp
jle
pop
mov
mov
maskmovq
ret
arpl
push
xchg
xchg
sub
mov
adc
pusha
call
dec
and
js
cmp
ret
cli
push
int3
imul
repnz
decb
add
fimuls
xor
es
scas
pop
inc
adc
cmp
test
call
mov
pop
sti
mov
push
pop
into
idiv
and
in
push
icebp
fisubl
loope
cmp
ret
pop
sti
mov
pop
and
leave
rcl
and
inc
call
cmc
inc
cmp
push
lods
or
lahf
xchg
xor
int3
lock
add
scas
mov
sahf
popa
aaa
add
std
sbb
sbb
lods
jo
imul
roll
or
and
cmc
jo
in
cmp
jbe
sub
mov
push
jnp
bound
fcomp
mov
mov
sarb
jmp
xchg
hlt
lcall
push
in
scas
jo
ret
scas
aam
ds
mov
push
jmp
into
cmc
sti
pushf
subl
dec
xchg
dec
fcomps
pop
aaa
addl
std
pop
shlb
scas
cld
inc
scas
fs
dec
test
insl
into
xlat
pop
sbb
lock
sub
dec
fadds
loope
cmp
add
test
ljmp
inc
jb
inc
jbe
stc
cmp
out
push
incl
aad
lahf
dec
mov
cwtl
jbe
loop
cmp
insb
mov
jp
cmp
arpl
inc
fwait
xor
popa
xchg
int3
cmp
insl
insb
push
pop
sub
popa
into
dec
push
cmpsl
scas
add
xchg
pop
leave
in
sbb
les
or
mov
inc
scas
test
mov
enter
aam
mov
loopne
xor
sahf
jle
xor
push
adc
and
test
sub
pop
jmp
fisubrl
repnz
jnp
paddsw
and
mov
popf
mov
call
jl
js
nop
prefetcht1
je
push
sub
or
inc
out
dec
dec
mov
and
pop
pop
sbb
pusha
or
mov
push
push
arpl
mov
mov
sarb
cwtl
sub
add
int
cmp
popl
bound
lock
dec
sub
popa
pop
mov
or
lock
cmp
xchg
inc
daa
xchg
mov
mov
popf
mov
mov
lods
popf
cmp
jbe
jl
repnz
jmp
lret
lea
cld
pop
dec
sub
test
rcr
int
in
inc
or
lods
pusha
call
mov
push
jge
in
data16
aad
stos
mov
dec
leave
adc
xchg
mov
jno
mov
fists
mov
pusha
loop
mov
jge
shl
les
mov
ljmp
dec
dec
aad
and
inc
sti
or
pmaddwd
cmpsb
dec
xor
dec
sub
dec
arpl
mov
push
xchg
lcall
pop
add
or
dec
mov
loope
call
push
sbb
mov
outsb
cmp
adc
or
sti
int3
cld
lods
ja
dec
mov
call
lahf
in
fsub
inc
jo
fisubrs
mov
aad
dec
and
notl
enter
and
jb
xchg
mov
ret
jne
imul
mov
add
cmc
mov
insl
cld
mul
push
add
cmpl
sbb
jne
inc
ret
inc
mov
arpl
shlb
dec
xchg
or
mov
mov
or
shrl
xor
sub
jns
popa
mov
or
mov
sbb
mov
xchg
addb
mov
fbld
in
sahf
adc
pop
int3
int3
pusha
lcall
push
aad
mov
sbb
inc
daa
sub
negl
aad
psubq
call
lds
mov
pusha
int
out
cltd
add
movsb
jp
dec
in
adc
pop
cli
mov
lret
pop
xor
mov
inc
mov
sbb
decl
mov
sub
popf
hlt
or
mov
or
pusha
push
and
xor
push
loope
call
jmp
cmc
lock
pop
push
out
push
fisubs
push
xchg
into
jno
and
enter
cmp
push
cmp
fstpt
mov
xchg
daa
add
ret
sbb
mov
and
xor
sti
aaa
xchg
lcall
sarb
inc
adc
out
push
inc
roll
scas
or
int
cmp
jle
mov
mov
jle
mov
ss
pinsrw
shlb
mov
mov
jnp
mov
push
xchg
cmp
insb
pop
jns
outsb
mov
fidivrs
sub
test
mov
jecxz
cs
mov
push
sti
test
mov
pop
iret
dec
fildll
or
mov
cmpl
loope
push
aad
mov
arpl
mov
cmc
mov
negl
cli
in
lahf
lahf
push
fucomi
jne
mov
insl
int
fiaddl
cmpsb
sbbl
xchg
test
mov
cld
stos
jecxz
cmp
cmp
mov
pop
inc
push
lret
out
add
jmp
xchg
vrsqrtss
xchg
stos
outsl
aas
mov
add
fmull
cmpb
imul
lahf
sar
and
ffreep
add
push
adc
sub
scas
push
xlat
mov
pop
cmp
pusha
and
push
cld
clc
push
div
and
aad
adc
pop
orb
push
cltd
pop
mov
cmpsl
jge
mov
icebp
cmpsl
mov
fsubr
outsl
sub
and
icebp
xchg
adcl
jns
dec
xchg
call
inc
dec
cmp
roll
sub
dec
mov
push
push
je
mov
lret
push
xor
jecxz
out
jbe
dec
inc
push
test
mov
into
pusha
push
outsb
sti
jmp
outsl
fcomps
mov
cld
xor
ret
cltd
cmp
mov
pop
mov
jl
dec
jmp
add
sub
scas
mov
and
jp
mov
dec
into
mov
icebp
scas
shrl
rcl
mov
jns
test
inc
arpl
push
jnp
into
sbb
jne
jl
arpl
push
aad
sbb
cmp
fmull
mov
sbb
jo
pop
movb
aam
pmaddwd
rcrl
mov
inc
in
imul
jb
lock
nop
xor
xchg
push
and
dec
mov
xchg
int3
out
scas
in
cmp
push
mov
aad
das
and
sub
jnp
inc
sti
xchg
pop
movsb
mov
int
pushf
in
sub
mov
negb
xor
or
jbe
loope
test
sub
test
and
scas
and
repnz
jmp
xchg
xchg
inc
ds
cmp
and
scas
lock
cmp
add
aad
pop
test
loope
mov
pop
insl
xchg
pop
jp
cltd
sub
cmc
mov
cmpsl
mov
test
sti
das
dec
sub
bound
test
xchg
imul
into
out
push
mov
mull
ja
mov
int3
lahf
insl
mov
xor
add
fisttpl
or
mov
addl
inc
jbe
out
adc
mov
inc
or
mov
or
popa
outsl
cmc
pop
jne
out
push
in
jo
outsl
aad
mov
mov
jp
loope
es
cmp
movq
adc
shr
sahf
sub
movsl
stos
pop
lods
pop
mov
cmp
adc
xlat
rolb
and
adc
ret
xchg
mov
aaa
push
xchg
aam
pop
fsubl
out
adc
xchg
lods
dec
xor
movsl
cmp
xchg
or
iret
repnz
push
outsl
pop
mov
cmp
jge
mov
and
inc
gs
jne
xor
dec
push
aas
cs
jecxz
mov
pop
or
cmp
sti
mov
mov
cmpb
pop
idivl
xchg
sbb
cmp
mov
aas
jnp
test
ficoms
cltd
cli
ffreep
cmc
into
cwtl
in
cmp
mov
adc
ror
sti
addr16
and
or
pushf
or
or
int
adc
lods
out
adc
pusha
mov
lods
sbb
mov
add
fildl
pop
mov
xor
mov
xchg
and
xor
aad
sbb
push
sub
and
iret
and
pop
or
fldt
frstor
jb
int
lods
jmp
ja
sub
jnp
lahf
std
add
pushf
mov
dec
pop
shl
mov
cli
pop
add
push
scas
pusha
lods
loopne
sbb
or
pop
pop
inc
in
std
aam
inc
cmpsb
outsb
and
and
mov
push
xchg
sbb
or
and
ror
mov
stos
add
push
jg
sti
imul
mov
imul
shl
test
ret
fists
adc
in
les
fisttps
push
repnz
cmp
fldt
test
cli
jnp
dec
test
leave
out
testl
sbb
ret
and
push
push
mov
fdiv
lods
aaa
scas
in
loope
das
xchg
pop
jecxz
jmp
add
popf
lret
xchg
adc
fistpll
call
or
cli
roll
cltd
std
outsl
mov
inc
inc
mov
xchg
scas
xchg
adc
and
iret
out
pop
xchg
push
push
and
sarl
lock
cwtl
aam
shr
cmpsl
mov
outsl
lret
shll
jae
loope
cmpsb
sti
push
lcall
pop
jnp
testl
add
outsb
iret
add
orl
fisubl
lods
pop
pop
mov
adc
sub
mov
xchg
div
or
ljmp
jno
push
std
sub
push
pusha
div
xchg
mov
cmc
mov
clc
sbb
jno
adc
sarb
std
add
loopne
scas
mov
jno
sbb
mov
out
dec
andl
dec
sub
pop
arpl
dec
das
adc
xchg
int
adc
adc
adc
cmpsl
int3
aad
jb
cmp
or
sub
test
or
ss
out
loope
add
sti
in
cmc
push
inc
test
push
or
jnp
dec
lods
lock
out
sub
gs
aad
hlt
mov
fisubl
imul
decb
push
cmp
mov
mov
sti
daa
add
lea
jp
popf
mov
pop
popf
pushf
add
ljmp
mov
das
xor
insl
cmp
sbb
rol
andl
push
aad
out
push
pop
mov
test
aad
adc
cmp
imul
push
int
aad
out
xchg
lret
push
push
icebp
pop
outsb
mov
je
and
bound
cmpsl
pop
mov
arpl
in
out
fnstcw
mov
and
pushf
dec
push
cmc
sub
add
pop
xchg
enter
add
insb
test
sub
and
stos
out
outsl
mov
or
mov
lods
mov
mov
cld
add
stos
dec
lcall
push
std
jns
cld
push
sbb
popa
push
sub
push
add
xor
mov
push
jmp
testl
inc
pop
cli
fdivrl
add
scas
int
mov
push
popf
jb
inc
push
repz
mov
in
xchg
test
fsubl
pushf
movntq
mov
lret
sub
mov
adc
aad
push
jnp
cmp
and
sbb
gs
or
push
imul
fidivrl
xlat
adc
mov
faddp
mov
je
scas
mov
xchg
test
jg
int
inc
loope
outsb
pusha
pop
inc
and
ret
mov
xor
mov
repnz
and
aas
inc
test
add
mov
aad
pop
xchg
adcb
cmc
and
or
inc
int
sahf
shll
bswap
adc
lods
mov
mov
add
push
add
mov
pop
arpl
js
and
lea
jbe
fildll
in
jo
mov
call
xor
movb
les
fidivrl
push
push
mov
dec
mov
idivb
jne
shl
dec
into
push
inc
or
jnp,pn
daa
pop
cmp
test
loope
pop
push
cmp
decb
and
lea
outsb
arpl
addr16
sbb
jnp
ja
pshufw
xchg
outsl
out
xchg
mov
leave
dec
cmp
js
or
lods
pop
dec
notl
inc
out
pop
movsl
push
xor
push
sub
cltd
push
cmpsb
js
xchg
or
pusha
pop
mov
pop
or
push
testl
bnd
lods
shll
std
inc
lea
clc
lods
jg
fnstenv
aaa
or
cmp
cwtl
adc
push
mov
cwtl
cmc
fidivrs
and
mov
adc
mov
add
push
mov
mov
push
out
aaa
xor
lcall
lods
xor
int
pop
push
in
push
xchg
or
call
orl
addr16
cmp
pop
into
or
pop
rclb
jmp
and
pop
jbe
mov
jg
xor
push
outsl
and
lea
xchg
push
xor
into
dec
cli
jno
mov
lods
inc
rcrb
ret
shlb
stos
stos
rclb
imull
jno
adc
push
push
inc
or
mov
or
popf
inc
jo
push
jl
mov
mov
mov
inc
xchg
xchg
xlat
jmp
les
scas
out
mov
push
pusha
xchg
jmp
xchg
cmp
dec
dec
pusha
repz
xor
mov
mov
mov
icebp
or
js
std
mov
dec
adcb
add
xor
stc
repz
les
push
lock
insl
pop
cmp
stc
addr16
xchg
pop
ja
rcrl
push
cmp
push
and
cli
es
mov
jp
int3
js
aam
sahf
cvtpi2ps
jmp
stc
fs
pop
loope
inc
pop
fs
outsb
addl
out
xchg
sub
jge
js
or
mov
mov
mov
fwait
ja
std
or
repz
enter
pop
adc
dec
in
repnz
lds
cld
adc
out
out
filds
jg
insb
mov
push
sbb
cmpl
jnp
push
lods
in
jg
jo
cmpsb
fsubs
push
inc
imul
mov
das
shr
xchg
or
mov
push
sub
cli
enter
test
das
jo
roll
sub
push
fists
pop
shll
out
xchg
push
xchg
pop
and
and
outsb
test
outsb
scas
push
xchg
pusha
push
movsl
jl
jno
cmp
lds
mov
insl
add
aas
sub
ret
popf
std
test
ljmp
aad
or
dec
iret
cmp
jmp
roll
out
popf
push
and
inc
out
push
inc
or
add
mov
sbb
loopne
das
and
xchg
mov
and
cmp
pop
add
or
add
jbe
rol
mov
sbb
sbb
sbb
nop
test
int
lea
int3
shlb
mov
mov
cmp
jp
mov
jl
push
cmp
push
pop
leave
testl
ds
jnp
mov
adc
sbb
mov
aam
adc
cmp
cli
xor
enter
dec
xchg
in
adc
dec
jmp
cld
pop
mov
jns
arpl
stc
push
scas
in
cmp
fisubrl
int
icebp
int3
jmp
repnz
or
popa
or
into
jge
xchg
or
call
jnp
xor
or
aaa
lods
out
into
test
lods
push
jmp
cmp
out
into
cmpsb
aad
cmc
dec
out
cs
adc
or
je
push
and
into
popa
inc
and
int
out
out
mov
push
mov
dec
mov
js
mov
or
insb
push
hlt
vmread
pusha
mov
push
adcl
cmpsb
xchg
sbb
ss
call
jg,pt
jp
pop
inc
lcall
push
jbe
mov
pushf
xor
test
in
loop
shlb
imul
imul
xor
cld
mov
iret
into
adc
and
jo
jg
mov
in
in
aad
aad
cmp
lret
push
scas
rolb
lods
jl
pusha
add
test
add
jecxz
cmp
jecxz
mov
shl
cmp
lahf
and
inc
mov
mov
dec
pop
aad
and
push
loope
sbb
jl
mov
lods
lock
adc
ret
push
pop
cmp
dec
or
call
iret
add
in
pop
imul
pushf
lock
fcmovnb
sub
push
push
mov
aaa
or
int
sub
cmpsb
fiaddl
add
mov
sub
repz
loope
push
cmp
into
xor
mov
push
push
adc
inc
out
dec
jge
les
test
fcoml
mov
adc
ret
lods
push
jp
cmp
out
adc
cmp
lahf
jae
dec
lret
movsl
imul
or
mov
lods
or
or
aad
iret
sub
shl
xlat
or
xchg
xchg
inc
mov
aas
fistpll
pusha
add
test
jns
cmp
call
dec
sbb
pop
push
sub
xchg
fstps
fdivrs
dec
pop
sub
in
pop
cmp
inc
pop
or
cli
jp
sti
xchg
sub
push
outsl
loope
xchg
jl
out
mov
aad
inc
into
xchg
addl
mov
rcr
and
and
popf
lret
aam
add
push
sbb
fwait
push
loope
lahf
outsl
xchg
dec
inc
dec
xchg
sbb
icebp
jmp
push
add
or
fs
dec
and
jno
push
adc
add
push
push
into
popa
test
fistl
jp
std
je
push
inc
cs
loope
cmc
iret
int3
sub
ds
je
dec
mov
cmp
fld
dec
mov
and
outsb
into
sub
das
xor
ficoms
mov
add
jno
dec
out
orb
dec
lahf
stos
testb
imul
lds
pusha
lahf
sub
out
and
ret
sar
mov
add
mov
cmp
ret
insl
cmp
push
push
fstp
xor
dec
sub
push
push
pop
or
cmp
jmp
mov
xor
sbb
mov
std
rolb
shll
dec
dec
push
stc
jmp
cmp
stos
arpl
push
es
mov
in
push
or
xchg
mov
pop
dec
fildl
sarb
fidivl
xchg
mov
mov
inc
aas
lods
jp
sti
pop
jns
mov
std
cmc
inc
enter
mov
loope
dec
aas
fistps
ss
imul
subb
jne
mov
pusha
insb
aas
cmc
pop
fs
push
mov
or
cltd
mov
cmp
pop
data16
mov
add
cmc
pusha
xchg
out
movsb
sbb
sub
dec
jle
aas
scas
outsb
mov
cmpsb
out
or
and
sub
cmc
or
adc
mov
rolb
imul
int
sub
popf
cwtl
fistpl
testl
mov
mov
movsb
pop
mov
scas
mov
fdivrs
stos
rcl
or
fidivrl
and
mov
sar
imull
jp
xchg
jbe
dec
scas
push
shrb
mov
mov
popa
movsl
xchg
mov
test
loopne
mov
xor
mov
in
out
dec
and
ss
cmc
push
loop
lock
mov
dec
bswap
add
and
jns
popa
inc
fsubrl
in
mov
mov
xchg
fisttps
dec
lods
mov
inc
cmpsl
scas
pop
mov
inc
lods
fsts
or
or
push
shll
cmpsl
gs
sbb
popa
dec
xor
xchg
cmp
push
nop
mov
dec
jmp
xor
ret
stc
mov
repnz
jmp
pop
pop
inc
jmp
in
mov
pop
leave
int3
push
mov
mov
loop
cmpsl
sub
ss
fists
push
lahf
sbb
xor
stc
dec
pop
and
push
das
lret
lods
push
scas
xchg
into
call
aad
dec
add
test
mull
fimull
push
push
jnp
bound
cmp
sti
or
les
sub
leave
decl
mov
mull
mov
sti
cmc
sbb
jle
mov
jle
out
mov
or
movsl
push
popf
fistpll
sub
jl
sarl
loope
mov
inc
inc
cmc
test
pop
jmp
fbld
jns
popf
stc
mov
sbb
xor
mov
push
rorb
incl
cmp
sbb
mov
into
xor
xchg
outsb
push
mov
popa
mov
xchg
cmp
sub
out
or
adc
add
jg
jmp
ror
or
add
cltd
adc
pop
popa
push
xor
or
mov
jae
loope
test
or
fiadds
mov
mov
and
repz
pop
jp
mov
inc
je
pop
mov
in
sub
stc
pop
imul
mov
xchg
popl
push
ss
sub
jl
out
push
ja
lea
shlb
xchg
sub
orl
mov
add
bswap
lea
mov
mov
pop
ds
not
add
movsb
ret
js
jns
or
mov
mov
xor
into
xchg
dec
dec
nop
lods
pop
insb
in
push
and
push
cmc
dec
int
xchg
xlat
jmp
mov
sub
dec
hlt
in
sub
mov
clc
lea
mov
lcall
mull
mov
pop
lahf
aad
push
jge
dec
jns
pushf
mov
sbb
cmp
addb
mov
hlt
aad
mov
mov
insb
mov
pusha
xchg
xchg
icebp
sbb
lea
dec
fisttps
imul
setg
cmp
mov
insb
fwait
int
stos
mov
cmp
out
fs
adc
test
arpl
into
scas
loop
push
call
or
cmp
cmp
cwtl
pop
sar
ret
sub
imul
jl
popl
or
pop
push
pop
push
jnp
lcall
inc
pop
mov
inc
aas
add
scas
insl
mov
lahf
bound
adc
ficomps
int
xchg
pusha
vmovntps
rcr
sub
bound
sub
hlt
sub
cltd
dec
mov
lock
push
loop
add
sti
jmp
dec
mov
or
jns
push
inc
mov
sub
scas
dec
out
movsb
sub
aad
inc
dec
mov
lods
stos
and
shl
add
adc
ret
in
fimull
inc
and
push
sahf
mov
xchg
sbb
push
insl
insl
sub
sub
aad
add
sub
or
das
in
push
js
lahf
cmc
data16
mov
lds
pop
je
mov
orb
loope
or
and
lods
sub
xlat
sbb
test
jl
mov
mov
lahf
mov
jo
cmpsl
pop
movsl
test
pop
test
add
jg
mov
mov
test
xchg
xchg
lock
lods
xor
int
and
cmp
add
xor
mov
pop
rorl
xchg
ja
idivb
aaa
es
sub
xchg
push
dec
repz
insl
fs
ljmp
mov
inc
ds
sti
push
jo
lock
and
pop
ficomps
enter
xor
stos
js
pop
pop
test
and
and
mov
mov
cwtl
aas
jp
push
mov
mov
loope
sbb
sbb
jecxz
rcrl
cmpsl
cli
sub
push
mov
out
push
ljmp
sbb
sub
or
adc
adc
xchg
dec
fldenv
and
decl
in
cmp
dec
std
push
shlb
out
mov
cmp
inc
push
jg
pop
sub
negl
xchg
push
push
nop
mov
test
mov
xchg
pusha
and
pop
fchs
test
les
les
inc
push
dec
sti
sbb
adc
test
popa
adc
test
xchg
jnp
xchg
testl
test
popa
mov
les
in
dec
cmp
in
push
andl
inc
mov
rorb
fldl
rol
pop
test
dec
jne
add
insl
ret
and
jmp
or
push
or
arpl
lea
mov
fs
sub
cli
jmp
mull
ror
in
fldt
dec
icebp
std
sub
cmpsb
test
push
pop
push
mov
je
push
cs
push
jnp
loope
mov
or
outsl
or
pop
dec
xchg
push
push
sub
in
mov
js
mov
std
mov
cmc
shrb
shll
int
inc
jo
sbb
fistpll
jl
xchg
dec
out
jecxz
shl
icebp
popa
sbb
mov
adc
ret
lahf
cmp
pop
cs
jg
scas
aad
cmc
dec
xor
cmp
and
sbb
ljmp
ljmp
mov
mov
in
inc
nop
inc
mov
jmp
mov
aam
lods
or
aam
mov
xchg
add
popf
mov
pop
movsl
lret
pop
mov
xchg
loope
mov
lods
cmp
or
fwait
pop
xor
cltd
adc
push
les
popf
sbb
repnz
sar
sti
orl
mov
mov
pop
mov
pop
cmc
mov
jge
xor
mov
push
push
add
pop
xor
add
es
xchg
daa
push
mov
add
xchg
iret
xor
push
call
dec
testb
fistpl
sub
xchg
in
insb
jbe
mov
cmp
movb
dec
cld
xchg
repnz
clc
xchg
insl
mov
out
jne
vshufps
cmp
cs
adc
push
cmp
push
or
xchg
cwtl
push
push
dec
mov
jns
into
mov
xor
pop
dec
scas
jb
fimull
xchg
xchg
insb
adc
popa
or
sub
push
pop
stos
lea
cli
sti
cmc
mov
es
dec
xchg
jne
mov
cmp
or
mov
mov
sbbl
jnp
loope
aad
ja
bound
aam
pop
cmp
mov
into
gs
xor
dec
iret
cmp
into
in
outsl
movsb
lea
push
cmp
je
xchg
add
dec
inc
push
std
xchg
in
loopne
outsl
push
test
scas
sbb
dec
xor
rol
out
cmc
or
hlt
adc
xchg
push
jg
push
cmp
sub
cmp
loopne
outsl
fistl
and
cld
adc
and
inc
popa
lds
jl
jnp
int
scas
shl
pop
pop
mov
jns
imul
or
je
out
insl
insl
pusha
pop
fistl
inc
pop
mov
jmp
push
cmp
or
aad
movsl
fnstcw
sub
or
lcall
aam
sbbb
jl
push
repz
xor
addps
and
int3
arpl
sbb
or
mov
mov
mov
cmp
aam
lret
dec
cmp
into
jno
inc
xchg
push
push
cmp
add
push
dec
dec
and
push
xor
cmp
call
and
push
test
xchg
std
jo
pop
leave
and
push
neg
dec
shlb
cltd
cmp
or
sysenter
shlb
addr16
cmp
pusha
sub
ret
mov
inc
imul
call
aaa
pop
and
jns,pn
in
mov
xchg
xchg
arpl
or
test
mov
sti
adc
cmc
out
sti
adc
mov
std
call
ljmp
aam
pop
xchg
clc
icebp
sbb
push
jns
push
pop
into
or
rol
faddl
inc
out
out
stos
cli
dec
pusha
mov
or
cmc
mov
test
sbb
and
cld
pop
addr16
mov
lock
push
jge
dec
xor
mov
out
xchg
jl
iret
mov
out
fiadds
pop
xchg
fs
es
jnp
pusha
or
sub
test
inc
jge
enter
scas
or
pushf
xor
inc
jecxz,pt
mov
je
push
call
xchg
mov
lds
inc
jecxz
faddl
stos
mov
in
push
insl
pop
push
or
mov
sbb
adc
iret
mov
repz
fidivrl
enter
jmp
xlat
sub
mov
test
sbb
sbb
cmp
insb
loopne
pop
pusha
leave
and
vmwrite
pop
out
xchg
inc
jno
fadds
int3
pushf
sti
xlat
mov
aad
or
cmp
xchg
push
add
lods
and
push
sub
movsb
dec
and
lcall
push
ret
dec
out
sub
jge
out
push
and
aas
sbb
or
add
cmp
dec
mov
sbb
aad
push
dec
xchg
xor
popa
dec
or
js
adc
pushf
mov
xor
pop
outsl
call
pop
xor
out
mov
repz
cmp
adc
sub
sbb
fwait
adcl
aad
jecxz
jmp
fwait
cmc
add
xor
add
or
std
mov
roll
xchg
mov
data16
data16
mov
outsl
nop
hlt
and
in
imul
xchg
ljmp
xchg
xor
push
sub
xor
mov
sbb
call
xchg
mov
mov
add
pop
in
adc
pusha
mov
pop
subl
aam
adc
sub
xchg
sub
leave
dec
pop
cmp
ja
add
push
popf
stos
adc
mov
jnp
sub
dec
lcall
add
stos
gs
aam
mov
mov
jno
js
out
jo
fsts
test
jbe
cmp
or
es
aas
nop
sti
or
mov
xchg
shrb
add
xchg
stc
cmp
into
mov
cmpsb
lea
jge
sbb
push
outsl
or
dec
cmc
or
fiaddl
sub
xor
jnp
aam
sub
cmpsb
sbb
and
xchg
and
xchg
mov
push
lods
mov
fsts
cmp
fwait
cmp
fwait
arpl
repz
add
mov
out
out
cmpsl
jp
lock
mov
dec
cli
aad
and
imul
pop
icebp
mov
push
sarb
sbb
imull
pop
stc
xlat
inc
imul
sbb
dec
and
lret
jg
xlat
cmc
pop
add
into
aaa
cwtl
cmpsl
inc
push
cli
call
mov
jmp
rorb
imul
popa
push
hlt
sub
xor
cmp
insb
or
mov
aam
mov
test
testb
fnsave
mov
in
push
pop
aad
inc
sub
stc
imul
cmpsl
les
notl
push
aad
and
adc
repnz
push
loope
adc
lods
das
add
rorb
push
cmp
test
jge
bound
and
jmp
js
pmaxsw
xlat
mov
js
mov
rcrb
pop
ficoml
loopne
loop
push
sub
sub
cmovbe
cmp
and
maskmovq
mull
in
sbb
leave
sub
push
pop
in
test
xchg
repnz
pusha
cmp
mov
cwtl
ficoms
sub
imul
xor
push
aas
out
arpl
push
minps
xchg
aad
adc
add
or
in
push
pop
call
repz
sub
les
push
popf
mov
or
in
aad
cmpl
sarl
or
jl
out
mov
push
pushf
pop
mov
mov
or
insl
cmc
add
and
mov
lea
add
sbb
cmpsl
dec
sbb
ja
fnsave
mov
mov
cwtl
push
cmp
mov
popf
mov
or
sarl
xchg
pop
insb
pop
xchg
fcmovu
sub
ss
les
and
nop
push
mov
pop
imul
mov
jmp
inc
sbb
lods
adc
stos
out
divb
insl
sbb
out
and
mov
mov
iret
lahf
mov
push
xor
inc
je
in
mov
insl
mov
icebp
cmp
mov
aas
das
mov
ljmp
das
aad
fisttps
aas
popa
xor
cmc
and
movsl
std
cmp
or
outsb
ret
pop
cmc
dec
push
ret
out
add
jnp
inc
add
into
add
rol
rorl
adc
xchg
les
pusha
xchg
stos
inc
inc
jnp
jp
shll
lret
scas
lahf
popa
stos
and
pop
cwtl
adc
not
mov
rol
pusha
popf
adc
insl
imul
in
int3
into
stos
cmp
xchg
dec
fstps
xor
in
mov
insl
xor
subb
mov
push
loop
adc
jge
inc
mov
sub
mov
fiadds
jnp
xchg
loope
jns
ret
xchg
adc
out
or
dec
cmc
mov
in
sbb
lcall
cmp
xchg
and
cld
mov
andb
inc
scas
popa
push
outsl
adc
jg
cmp
mov
xchg
subl
loope
push
idivl
aad
mov
stc
ljmp
sysexit
sti
inc
sub
loope
lahf
and
mov
loope
inc
jg
jo
ja
rcrb
out
jle
or
enter
or
outsl
data16
iret
push
mov
aad
arpl
or
sbb
pop
jl
mov
mov
jle
jl
mov
mov
out
hlt
aad
mov
rolb
mov
divl
pop
sar
dec
cli
and
pop
add
cmc
fadds
int
xor
aad
add
repnz
stos
mov
inc
inc
cmp
push
fucompp
xchg
inc
pop
lret
push
mov
adc
dec
mov
ret
jp
ljmp
inc
cmp
mov
xchg
xor
xchg
shlb
jb
outsl
pop
mov
stos
or
in
xchg
inc
es
lea
dec
cmp
mov
xchg
adc
mov
sbb
rcr
mov
inc
dec
imul
pop
push
mov
sbb
repz
movsl
push
testl
popa
bound
pushf
repz
push
into
or
mov
adc
push
mov
pop
xchg
out
cli
mov
lahf
jecxz
lods
rolb
sub
fidivs
sbb
cli
roll
mov
or
jg
push
cmp
in
lcall
fcompl
out
scas
cmpsl
jnp
adc
push
ret
sbb
inc
test
inc
sti
loope
xor
movsl
mov
leave
cwtl
fldl
jmp
daa
ficoms
les
mov
jecxz
jge
lods
jecxz
bound
repnz
mov
nop
mov
mov
push
add
mov
sarl
cwtl
scas
add
sahf
bound
add
jno
and
stos
mov
test
add
mov
and
call
stos
shr
das
add
push
push
dec
xchg
pop
sbb
cmp
int3
sub
sbb
je
push
mov
loop
daa
ret
sarl
adc
test
mov
dec
mov
repz
lods
cmp
jecxz
jmp
push
add
pop
push
and
xchg
movsl
sarl
fidivs
in
pop
outsb
dec
inc
mov
adc
sub
out
sbb
or
or
mov
xlat
adc
xchg
and
sbb
add
hlt
in
push
aad
pop
jnp,pn
inc
mov
mov
or
mov
sub
shlb
addr16
call
in
std
daa
dec
and
xor
inc
mov
mov
mulb
data16
mov
mov
mov
mov
sti
xor
fisubrs
pop
add
lcall
mov
rep
nop
stos
mov
insl
cmc
adc
mov
jmp
and
xchg
test
dec
xchg
jo
incb
push
jne
adc
jmp
mov
and
mov
dec
cli
push
roll
inc
aad
rorl
shrb
dec
std
lods
scas
js
ret
push
dec
jmp
dec
jge
shlw
mov
xchg
repnz
out
xchg
and
xchg
fucom
aam
and
push
inc
clc
enter
cmp
inc
add
push
adc
mov
iret
cmc
push
lods
add
dec
in
outsl
lahf
mov
mov
jmp
inc
loop
pop
rcrb
jnp
dec
xchg
mov
int
mov
mulb
out
mov
ret
or
mov
or
mov
mov
stos
jmp
mov
lock
int3
notb
cmp
fcmovb
mov
sub
mov
jne
outsl
pop
js
add
sbb
rorb
xchg
cwtl
jge
in
ljmp
iret
xchg
bound
adc
lods
sbbb
dec
setp
cmp
test
xor
imul
push
add
or
pop
pusha
lods
lods
xchg
jb
jno
aam
ret
adc
mov
add
arpl
and
and
inc
cmp
out
jns
pop
in
add
stos
dec
mov
int3
popa
inc
xor
jmp
addr16
jnp
sub
ss
pop
xchg
jg
jg
xor
call
or
cmp
std
push
mov
lea
gs
mov
xor
das
sub
lcall
mov
mov
mov
arpl
dec
adc
cmp
push
mov
and
insb
push
or
adc
scas
fadds
nop
shll
xor
mov
jp
fwait
ret
push
add
adc
jmp
mov
in
sahf
sti
gs
push
idivl
call
fst
lods
js
or
inc
mov
faddl
dec
sbb
fisttpl
xchg
outsl
lea
sub
and
cmp
nop
xchg
xchg
imul
popf
scas
cmp
and
jg
mov
cmc
cmp
mov
mov
lahf
push
rcrl
xor
sbb
adc
push
add
scas
mov
cmpsl
pop
js
imul
cmc
mov
adc
aad
mov
dec
mov
push
mov
and
cmp
mov
scas
pop
mov
out
add
mov
jl
xor
popf
xchg
xchg
mov
into
aad
call
int
or
sbb
or
xchg
add
cmp
mov
lods
xchg
dec
add
aad
sub
insl
jne
filds
dec
cmp
xchg
adc
mov
fcompl
sahf
or
push
push
mov
or
add
in
pop
mov
or
cmp
sbb
lret
adc
pop
sarb
lock
insl
loope
les
xchg
dec
and
mov
sub
mov
xchg
jp
push
cld
popa
aad
enter
out
sti
mov
jle
xchg
lea
or
hlt
into
mov
xor
imul
out
push
loop
dec
and
add
cmp
in
pop
cvtdq2ps
sbb
jg
and
and
in
sub
ja
cmc
hlt
ret
xlat
or
std
pop
lods
jge
inc
into
lahf
xchg
test
xor
lret
push
mov
je
ret
mov
push
inc
cmp
insl
mov
cmc
int
out
lds
xchg
popa
or
into
popf
and
outsb
test
mov
inc
cmpb
cmpsl
fcmovu
mov
lahf
dec
xchg
inc
fs
into
neg
add
test
inc
jns
shr
and
rcrb
xor
iret
int
cs
jge
aas
fidivl
movsl
xor
nop
lahf
xchg
imul
ror
hlt
fmull
dec
pusha
push
call
push
dec
int
pop
loope
mov
fdivrp
test
enter
js
and
fisubrl
leave
jo
and
stos
xor
bound
xchg
or
mov
xlat
jns
and
data16
into
out
pop
xchg
mov
cmp
into
and
adc
data16
mov
cmc
lea
repz
add
xor
jo
or
mov
jno
mov
rcl
push
stos
pop
sbb
icebp
or
push
jmp
dec
or
mov
xchg
pop
push
jp
in
or
repnz
stos
pop
inc
into
scas
popa
mov
iret
fdiv
popf
jae
rclb
push
and
js
jg
mov
nop
int
ljmp
in
push
iret
cmc
in
stos
out
stc
mov
lock
mov
cmc
sub
aad
cmp
push
cld
xor
pop
pop
aaa
dec
mov
add
sbb
clc
loop
sub
enter
cltd
and
pop
dec
mov
and
call
xchg
or
stos
and
or
cmp
bound
pop
push
xchg
or
int
xchg
dec
ljmp
les
xor
je
in
jge
xor
xchg
mov
xchg
and
leave
out
xchg
out
lea
xchg
dec
or
stc
jmp
sub
jecxz
fcmovb
imul
lahf
js
pop
pop
jecxz
sbb
lahf
dec
lods
pop
inc
popf
sbb
stc
sub
ret
addr16
cmc
in
int3
cmp
dec
out
dec
cmpsl
xchg
jae
add
aad
insb
add
in
leave
cmpsl
jo
mov
je
sti
cli
and
cmp
ret
jmp
arpl
xabort
xlat
cmp
jle
stc
test
cmpsl
aad
inc
dec
jg
and
out
ss
out
inc
mov
push
jne
inc
cmp
int
mov
jle
mov
sbb
xor
inc
enter
int
cmp
add
addl
mov
or
repnz
or
cmc
sbb
clc
mov
mov
repz
out
call
mov
xchg
and
mov
xor
pushl
mov
cmpsl
jp
cltd
and
and
adc
aad
jns
lds
mov
rolb
xor
cmp
cltd
xor
xor
mov
outsl
inc
hlt
aaa
xchg
mov
jp
jmp
popa
mov
jge
popa
or
hlt
stos
mov
pop
add
loope
sar
test
addb
pop
cmc
jl
inc
pop
insl
aad
lods
and
ljmp
xchg
add
jmp
jb
ficoml
xchg
inc
adc
dec
test
xchg
scas
out
lods
lods
add
adc
dec
mov
mov
dec
mov
and
inc
cmp
and
pop
in
clc
add
rcll
xchg
inc
jl
stos
mov
mov
mov
mov
test
mov
jp
ja
js
pusha
jb
sbbb
or
sbbl
dec
push
leave
cmp
cmp
jno
aaa
jno
pop
adc
popf
fnstcw
in
or
add
or
rcl
out
clc
jns
xchg
xor
imul
fs
or
ret
cli
stc
lea
les
jmp
cmp
pop
ds
sub
sbb
test
cmp
add
mov
push
push
xor
jg
pop
add
and
xchg
movsl
or
or
sub
cs
lahf
dec
lds
jmp
fs
or
cmpsb
shrb
notl
dec
pop
bound
loopne
scas
ficoml
popf
test
dec
sub
xorl
testl
cmc
jge
or
dec
lahf
insl
mov
mov
sahf
inc
jno
cltd
lea
jl
dec
fisubs
into
jmp
sub
inc
call
lods
in
pmullw
in
out
stos
ret
jp
repnz
les
fisttpll
push
test
cmp
add
dec
dec
cmc
mov
and
push
xor
xor
lcall
aad
jae
xlat
fbld
stos
cwtl
or
arpl
lea
arpl
mov
inc
dec
and
mov
adc
add
setns
dec
aad
cmpsl
dec
stos
cmp
xor
loope
cmp
xchg
subb
iret
xchg
fwait
push
scas
sub
test
push
mov
jp
and
push
nop
mov
loop
shlb
mov
inc
or
adc
into
addl
push
push
std
dec
or
cmp
rcl
inc
addr16
push
scas
ja
adc
cmp
lahf
xor
imul
cmp
dec
push
push
adc
or
cmc
mov
inc
push
mov
lcall
mov
mov
std
rorb
idiv
sbb
push
or
dec
push
js
mov
mov
out
mov
rcr
xor
jnp
jge
push
ljmp
dec
or
sti
neg
lea
inc
out
push
push
adc
inc
add
cmc
mov
shlb
cmpsl
sbb
negl
and
inc
jmp
nop
mov
std
and
repz
int
rol
incb
or
sub
or
jb
es
jmp
popa
aad
repz
je
pop
xor
dec
push
mov
dec
push
pop
test
jl
or
mov
das
data16
mov
or
jne
or
mov
push
add
add
xor
je
iret
cmc
int
dec
sub
jo
inc
sti
js
push
mul
movsb
pop
into
call
scas
ds
loop
rcrl
loope
dec
inc
dec
test
push
loopne
ljmp
jg
imul
lock
sub
fisubl
cwtl
xlat
test
dec
shlb
enter
dec
push
dec
in
pusha
loope
cmc
repz
mov
lcall
mov
or
mov
xchg
cmc
int
and
sbb
jae
dec
cld
add
scas
out
popa
jmp
scas
movsb
cmp
nop
aad
mov
mov
sbb
aad
sub
lret
jl
ret
mov
into
inc
dec
sub
int
dec
shrl
jns
or
cmc
dec
jge
jle
jg
aas
push
mov
cmp
xchg
jno
imul
mov
test
cwtl
xchg
jne
dec
iret
inc
mov
add
jp
call
popa
or
cmc
call
movsb
stc
inc
ja
mov
mov
js
loopne
sbb
mov
push
cmp
dec
push
adc
fimuls
aad
outsl
jg
push
cltd
into
ficoms
loopne
into
or
xchg
push
aas
js
inc
mov
mov
jl
lret
inc
pop
mov
dec
fdivp
jae
mov
sub
and
and
scas
movsb
popl
jg
mov
pop
aam
mov
fs
push
dec
iret
in
je
push
nop
mov
dec
inc
addr16
pop
jmp
iret
shrl
fs
add
cs
lods
ja
push
stos
sub
lret
pop
sahf
jl
incl
test
fndisi(8087
rolb
jnp
dec
fsubrl
scas
xchg
ficoml
and
mov
jge
sar
cmp
pop
mov
and
adc
shll
mov
adc
decb
or
int
arpl
out
sbb
jg
leave
in
mov
aad
and
mov
push
xchg
adcb
mov
push
orl
and
dec
in
jb
in
inc
outsl
test
inc
dec
adc
add
push
jge
cmp
jmp
add
cmp
ret
or
inc
cmc
jmp
xchg
nop
lret
incl
or
fsubrl
les
cld
adc
dec
sub
neg
int3
xor
stos
xchg
mov
mov
pop
sub
xchg
std
aaa
xchg
and
fnsave
call
in
cmp
inc
mov
mov
xchg
adc
inc
xor
cmpsl
add
aad
scas
fs
mov
inc
xchg
in
push
mov
cmp
and
imul
jmp
out
inc
or
int
fmuls
or
test
jl
or
mov
jl
aad
mov
sub
sbb
lea
xchg
inc
mov
mov
or
fwait
mov
movb
and
xchg
out
call
call
stos
jae
out
mov
pusha
inc
in
sbb
xor
cmc
int
jecxz
ficoml
mov
push
rolb
subl
mov
int
add
repz
mov
fs
cli
jbe
dec
test
push
cld
push
or
stos
int3
jnp
call
fbld
bound
push
or
loop
inc
add
or
js
movsl
mov
loop
mov
mov
lret
fisubrl
sbb
test
sbb
xchg
add
mov
loope
ret
jmp
cmp
ljmp
or
mov
out
inc
and
push
cmc
sbb
inc
push
mov
ja
pop
cmp
add
add
cmp
push
adc
and
ret
push
mov
xor
mov
arpl
call
out
movsb
mov
xor
mov
and
jle
jl
pop
jbe
xor
push
and
xlat
scas
int
pop
pop
outsb
xchg
testl
fwait
inc
bound
mov
adc
orl
flds
pushf
jge
mov
adc
push
fdivrl
aaa
testl
mov
adcl
push
adc
std
rorl
add
mov
cmp
out
lods
push
jmp
ret
stos
pop
stos
jg
jecxz
jl
jecxz
mov
outsb
mov
jp
cmc
outsl
push
cmp
mov
stos
clc
sub
mov
or
mov
push
mov
fsubp
outsl
cmp
test
lods
das
jo
pop
or
push
or
out
aad
jl
jg
mov
adc
pop
jp
push
fwait
pop
adc
lock
sbb
xchg
inc
mov
in
sbb
dec
or
cli
cwtl
xor
pusha
lcall
ja
imull
popf
bound
ret
push
outsb
pop
test
sbb
les
inc
jg
jl
jmp
cmpsb
jp
pop
push
pusha
int
loope
iret
icebp
lcall
xor
ds
mov
mov
adc
sub
imull
pop
jo
les
andb
xchg
add
mov
and
push
sbb
iret
fprem
or
movsl
mov
and
mov
or
cmp
lods
mov
xchg
testl
mov
xchg
dec
sbb
pop
add
sbbl
dec
add
out
push
pop
mov
mov
jbe
jecxz
outsl
xchg
pop
xchg
std
cmc
fmuls
sti
mov
xchg
inc
adc
adc
orb
xor
dec
cwtl
and
js
std
xor
pop
and
mov
call
xchg
imul
div
dec
mov
push
ja
cmpsb
xor
lret
inc
inc
gs
mov
int
out
sbb
shrl
pop
loopne
inc
fwait
pushf
int
pop
add
adc
push
int
cmpl
mov
mov
and
fs
adc
mov
int
repz
sbb
fsubs
xchg
js
cmc
xchg
fwait
out
push
in
lahf
and
pop
push
sti
repnz
outsb
ret
sahf
jl
cmp
ljmp
jae
and
cmpl
out
jno
xlat
pop
aad
push
fistl
push
sbb
mov
cld
lret
add
addr16
dec
dec
arpl
pop
mov
js,pn
mov
jp
mov
cld
popa
int
movsb
inc
std
push
bt
adc
notb
scas
insb
mov
fsubrl
inc
iret
xor
push
pop
sbb
mov
aad
mov
add
inc
por
mov
push
mov
test
in
adc
out
or
scas
pop
insb
imul
sti
xchg
stc
shrb
inc
mov
fs
aam
filds
jo
mov
ret
insl
mov
xchg
mov
mov
xor
sub
inc
sbb
push
or
add
mov
jl
ret
imul
pop
dec
outsl
outsl
dec
inc
fdivrl
int
mov
xchg
dec
inc
mov
jge
adc
or
cmp
hlt
mov
xchg
cmc
lds
popa
jae
cmp
data16
mov
or
dec
mov
adc
gs
out
push
int
fmull
cmp
add
int
lds
mov
adc
pop
je
mov
std
insl
dec
in
loope
mov
movsb
shl
int
pop
in
fistpl
sahf
xchg
das
les
cli
fcoml
out
out
dec
rolb
cmc
lods
sub
push
movsl
and
jae
jmp
and
sahf
int3
and
popa
add
stos
dec
jns
xchg
push
add
xchg
frstor
add
cmc
push
in
adc
add
out
pop
iret
and
movsb
push
inc
mov
jnp
mov
push
das
push
movsl
loop
jecxz
stos
cmc
in
out
addr16
cmp
adc
scas
out
lds
je
out
aad
scas
lods
mov
dec
xor
inc
daa
mov
mov
mov
pop
lods
aam
stc
loop
pop
mov
push
movsl
negb
cmp
cmp
mov
aad
sbb
lahf
cs
jns
loopne
scas
movsl
fsubrl
aas
sub
or
inc
adc
or
cmc
aaa
iret
je
dec
and
dec
iret
add
aad
lcall
or
cmp
cltd
push
cmp
int
sahf
and
hlt
fbld
int
aad
and
sti
std
push
cmp
popf
mov
gs
inc
aas
call
push
and
pop
in
jmp
les
dec
or
or
ret
or
dec
aad
or
das
cmc
loopne
sub
fistpl
stos
iret
xchg
andl
pop
rcrb
jle
jp
or
div
jns
adc
stc
xorb
mov
adc
add
in
dec
call
aad
sub
gs
sub
mov
or
stc
outsb
inc
jl
pop
jecxz
pusha
jbe
in
out
mov
and
ss
or
inc
add
imul
sub
out
sub
stc
push
sarb
and
sar
mov
xor
stos
xlat
call
nop
pcmpgtb
std
jns
popf
test
stc
sub
pop
push
stos
dec
xchg
aas
mov
push
in
jnp
adc
es
pop
mov
repnz
popf
not
ret
xchg
dec
lret
lds
aad
repz
push
cltd
int3
mov
inc
nop
ficomps
cmc
paddd
stos
inc
cmp
filds
xchg
add
movsl
jnp
repnz
shll
mov
mov
inc
ret
xor
or
cwtl
push
dec
pop
sub
jo
mov
inc
pop
lret
rep
aad
in
sub
cmp
jno
loopne
push
lock
lods
and
sbb
and
data16
faddl
iret
xchg
mov
icebp
imull
clc
pop
mov
mov
stc
inc
adc
aaa
or
pop
push
lcall
adc
jno
andl
loope
mov
mov
or
mov
add
add
in
into
out
ret
cmp
dec
xchg
xor
mov
addr16
out
mulb
or
inc
lahf
adc
push
subb
sarb
int
mov
inc
ds
nop
mov
addr16
outsl
xor
ret
faddl
sub
loop
cld
sub
xor
xchg
into
jl
movsb
aas
adc
sbb
lret
movsl
or
mov
dec
jmp
sub
jns
stc
lahf
in
lcall
cld
lea
dec
or
cmp
push
cs
push
mov
in
mov
cwtl
testb
mov
jne
iret
xchg
xor
pop
jmp
inc
dec
jae
mov
movsb
push
cltd
into
jmp
jbe
dec
cmpsb
mov
les
int
or
ljmp
call
or
and
mov
xchg
stc
pushf
int
xchg
mov
dec
and
jl
vaddsubps
inc
push
pop
cmpb
outsl
ds
out
test
pop
push
jno
aad
sti
push
movsl
push
inc
repnz
jl
movzwl
je
ss
out
out
cmc
int
inc
sub
cmp
shrb
jl
fsubrs
jnp
lcall
or
je
popa
addr16
inc
aaa
roll
sub
mov
jb
imul
rolb
in
std
mov
cltd
xor
add
and
dec
xor
inc
push
push
jmp
out
aam
pop
mov
push
adc
dec
imul
sbb
fdivrp
sub
gs
setle
mov
mov
jae
sbb
lcall
push
ja
xor
mov
jmp
loope
jg
jbe
shrb
jns
lds
jmp
frstor
dec
imul
or
arpl
cwtl
enter
imul
or
jmp
dec
mov
outsb
aad
jno
push
rorl
repz
push
aas
icebp
mov
jno
pop
xor
sbb
sbbl
xlat
or
gs
adc
add
mov
mov
or
repz
leave
mov
pop
out
cmp
dec
cltd
mov
out
jmp
cmp
jge
or
mov
pop
nop
ss
sub
dec
rcr
fimuls
adc
cmp
pop
js
cli
jge
fisttpll
mov
dec
xchg
and
sub
jo
vmovupd
adc
dec
insl
jle
adc
sub
imul
aad
test
mov
gs
add
xor
subb
cmc
mov
inc
out
aad
test
add
xor
inc
jne
jae
mov
add
sbb
popa
imul
fs
mov
aas
fists
into
fidivrs
mov
icebp
push
int
pop
outsl
int
sbb
stos
loopne
push
sbb
lods
mov
outsl
dec
xchg
scas
stos
dec
jb
fdivrp
loopne
out
dec
pop
xchg
cmp
mov
adc
dec
mov
fstps
mov
jbe
out
pop
or
or
imul
dec
mov
sbb
js
mull
addl
fisttpll
push
sahf
push
lods
jl
or
jno
and
fistpl
bound
inc
test
arpl
mov
addr16
fcoml
nop
ret
jmp
or
ja
jp
pop
clc
lea
imulb
subl
test
je
xchg
cmp
sbb
gs
das
pop
ljmp
mov
or
sub
stc
cmp
push
cli
imul
iret
cli
dec
in
outsb
rorl
repz
hlt
ljmp
into
cmc
notb
add
xchg
dec
loope
add
mov
jo
sahf
daa
addr16
mov
pop
mov
or
cmc
cmpsb
sub
scas
add
decl
sub
jp
or
and
jp
cmpsb
adc
xlat
movsb
faddp
out
push
sbb
lret
popa
xchg
pop
jae
pop
add
mov
mov
push
cmc
ret
sub
or
pop
ret
in
insl
xchg
cmp
adc
aad
addr16
leave
jns
imulb
xchg
fildl
sbb
scas
cmp
fdivrs
not
lock
cmp
inc
mov
push
dec
dec
popa
mov
mov
dec
notb
mov
jae
data16
or
xor
cwtl
ficoms
mov
je
jmp
shll
mov
and
cmpsb
cwtl
call
fbstp
cltd
mov
xchg
lea
aad
push
jmp
mov
xor
xor
dec
aad
and
jp
shl
fstps
jle
push
mov
xchg
push
sbb
lods
mov
or
jg
rol
dec
adcl
pop
push
inc
pop
add
popf
xchg
or
cmp
fwait
mov
pop
aaa
fucomi
push
or
lahf
andl
push
andb
sar
adcb
dec
push
outsl
or
sub
cmpsb
sbb
mov
xor
mov
inc
bound
sbb
cli
pusha
testl
int
not
pop
xor
cwtl
push
iret
fnstcw
xor
xor
inc
mov
into
sti
rorl
in
ljmp
loope
aam
cmpsb
in
inc
mov
mov
jno
pop
xor
push
iret
xchg
inc
or
shl
cmp
and
cmpsl
lahf
lods
jg
in
cmpsl
data16
cmc
xor
cmp
mov
cmp
mov
and
loope
fcompl
dec
push
or
push
mul
adc
jge
push
jmp
pop
clc
fisttpl
cmp
dec
in
and
pop
lods
sub
lret
xor
lock
lahf
dec
cmc
es
jl
insb
push
hlt
and
jns
sbb
cmpsb
imul
outsl
loope
divl
mov
out
je
jl
sub
popf
fidivrs
sbb
and
xlat
xchg
addr16
cmp
sub
popf
das
fcmovu
jno
inc
cmp
rorl
sbb
fucomp
aad
sti
popf
and
int
push
ret
gs
dec
cmpsb
push
add
cmc
mov
mov
cmp
pop
movb
dec
aaa
mov
sub
mov
negl
jmp
or
cs
out
mov
xchg
cwtl
aad
jp
mov
xchg
cmc
push
cmp
into
add
notl
aad
cld
sub
test
xchg
add
sbb
sub
cltd
cmp
and
int
call
iret
adc
push
mov
sbb
pop
cs
pop
test
cmc
movsl
stos
dec
inc
push
pop
add
jne
stos
shlb
inc
dec
js
xor
jb
cwtl
add
std
sub
mov
pushf
dec
out
jl
mov
imul
punpckhwd
frstpm(287
sub
dec
xlat
les
shl
mov
ss
jmp
repz
xchg
pop
setns
inc
aam
arpl
bts
adc
mov
mov
cwtl
sarb
ds
aas
inc
xchg
add
stos
push
or
pop
aad
leave
iret
cmp
adc
outsl
mov
lahf
xchg
mov
xchg
jno
pusha
std
repnz
add
mul
push
out
jb
mov
dec
std
jg
and
or
in
jmp
sub
cmpsb
lods
std
push
outsl
imul
lcall
imul
xchg
jge
scas
out
push
call
popa
fsubrs
jbe
int
je
ret
or
or
push
movsb
into
insb
test
je
scas
mov
cwtl
fildll
pop
push
adc
jmp
fildl
into
cmc
out
jecxz
out
aas
mov
cmp
mov
ud2
fldcw
test
mov
sub
aam
movsb
popa
adc
sub
jmp
mov
mov
lock
pushf
repz
cmpsl
in
xor
lret
jmp
test
push
sti
aad
cmp
push
mov
and
pop
pop
lods
cmp
xchg
testb
push
loop
xor
stos
dec
scas
push
jae
add
sbb
aam
stos
and
or
pop
in
cmp
xlat
mov
xchg
xor
cwtl
fldl
push
sub
std
lea
shlb
lahf
sbb
movsl
sub
fwait
inc
aas
pop
cs
cmc
mov
movsl
arpl
cmp
aad
loop
push
or
mov
adc
mov
jns
jo
mov
dec
mov
jge
and
iret
jnp
lods
aad
jae
or
clc
pop
jb
xor
sti
mov
nop
dec
xchg
cmp
aad
sub
ffreep
gs
cli
or
rorl
lods
cmp
or
aad
jecxz
jmp
xor
fmuls
imul
push
outsl
sbb
pushf
out
loopne
adc
aas
cs
loope
mov
xchg
inc
sti
pop
push
pop
inc
jmp
sbb
loopne
cmp
dec
ret
pop
div
inc
mov
jle
jbe
push
adc
pop
jnp
je
lds
inc
outsl
cmp
mov
aam
sbb
and
push
cmp
xchg
movsb
rolb
fldcw
or
insl
mov
ss
or
decb
pop
repnz
pusha
loope
cmc
mov
mov
xchg
add
aas
mov
jmp
xchg
sbb
stos
fmuls
aad
xchg
adc
andl
and
xor
ss
mov
imul
xchg
cltd
cmp
pop
scas
out
push
js
repnz
xor
out
jle
mov
cli
insb
or
dec
pop
mov
or
loop
cld
or
iret
pop
sub
push
push
lods
inc
xor
push
out
aad
gs
mov
fucomp
iret
pusha
add
adc
mov
jecxz
mov
cmc
mov
jp
stos
lods
sbb
jecxz
push
movsb
lea
frstor
and
fidivrs
bound
add
push
imul
xchg
popf
sbb
and
or
adc
and
sub
jmp
dec
cmp
test
adc
jecxz
pop
mov
jb
lahf
insl
mov
jae
add
repnz
rcrl
mov
imul
outsl
mov
stc
in
cld
jne
lret
push
jns
xchg
xor
in
fnstsw
loopne
lds
fwait
cmp
aad
fcom
addr16
stc
xchg
pop
outsb
push
sub
test
jae
stos
adc
and
pop
das
mov
imul
or
push
cmp
call
cmc
mov
insb
cltd
fidivrs
repz
in
aam
stc
cwtl
jmp
sbb
and
sub
stos
stc
loop
and
mov
mov
inc
pushl
dec
stos
sahf
mov
in
out
std
dec
mov
int3
out
or
cld
int
inc
lcall
or
inc
aad
mov
lea
push
scas
sub
les
jbe
out
fnstenv
dec
daa
cmp
into
xchg
int
mov
sbb
dec
das
push
loope
imul
mov
cs
out
stc
les
mov
dec
int3
mov
mov
and
jo
push
fidivs
pusha
aad
fsubr
adcl
mov
cmp
xchg
push
pop
mov
pop
shr
call
mov
jg
jae
sub
xchg
cld
or
hlt
outsl
loope
insl
xchg
mov
iret
aam
fistpll
inc
mov
jnp
mov
shrl
in
xchg
sbb
call
xchg
or
lahf
mov
cmp
movmskps
jg
ret
mov
adc
js
in
lret
aam
xchg
xor
dec
sbb
sub
lods
loope
iret
mov
cld
out
daa
out
rclb
inc
shll
adc
sbb
jmp
fimull
in
sub
inc
xor
mov
cmpsb
mov
and
icebp
imul
addr16
jle
fwait
mov
or
jmp
bound
jecxz
or
lahf
mov
gs
pop
insb
add
aam
add
ficoml
mov
clc
dec
lock
loop
popf
jl
in
cmpsb
push
stos
jge
xor
and
test
out
xchg
das
call
nop
dec
aad
sahf
xchg
mov
and
mov
pusha
sysexit
cmpxchg
cmc
bound
pop
dec
loope
xchg
xor
sahf
push
mov
jns
mov
ljmp
add
ja
lods
xor
and
dec
mov
mov
lahf
popa
fstl
xor
inc
fimuls
mov
dec
int
sub
xchg
mov
std
cli
mov
add
mov
rclb
or
test
mov
jne
xor
adc
xchg
nop
inc
inc
xchg
hlt
inc
and
push
outsl
push
jo
xor
outsb
jl
leave
aam
cmp
movaps
cmpsl
and
or
repz
and
jg
and
out
into
mov
out
mov
ljmp
sti
mov
adc
xor
int
jns
cmp
jmp
mov
in
setp
and
dec
repnz
icebp
sub
mov
lods
stos
test
repnz
andl
nop
loopne
dec
jg
adc
sub
push
jbe
jmp
imull
adc
inc
std
pusha
push
or
xor
push
xor
mov
sub
movsl
add
cmc
sub
mov
loope
retw
push
outsl
aam
out
mov
stos
ret
cwtd
mov
ljmp
psrlw
xchg
pop
dec
cs
jmp
adc
aaa
mov
in
pop
int3
popa
loopne
sub
adc
decb
dec
pop
xchg
cmpl
push
in
inc
jl
add
pop
push
aaa
ret
in
add
push
mov
fmuls
mov
out
test
mov
xchg
add
adc
or
fstpt
pop
in
sub
aad
pop
ljmp
xchg
cmp
popa
xor
std
pop
sub
in
out
pop
mov
loop
das
into
jmp
push
ds
cwtl
dec
aad
jbe
clc
call
sub
pop
mov
subl
mov
shll
cmc
out
pushl
push
xor
jmp
jno
xchg
xchg
fisubl
sbb
cmpsb
rcrb
jno
in
inc
cmp
fistl
bound
add
mov
ljmp
inc
mov
pop
aad
xor
xchg
dec
inc
rclb
out
cmp
shll
cmp
popa
shrb
cmc
test
loope
imul
repnz
cmpsb
cmp
mov
mov
shlb
dec
ja
mov
das
jp
scas
cmc
jnp
mov
aad
mov
xchg
bound
js
mov
stc
insb
dec
addr16
mov
adc
sub
ja
not
push
xchg
ds
inc
fistpll
or
jb
jg
xchg
push
sub
dec
pshufw
adc
idivl
cltd
xchg
ds
mov
jg
sub
dec
aad
push
rcrl
cmp
xchg
push
inc
sub
outsb
or
psubd
inc
xchg
cmc
push
mov
dec
outsb
mov
insl
and
inc
xchg
mulb
adc
aad
jo
andb
and
and
sbb
cli
loope
cmc
inc
mov
mov
cmp
inc
cmc
mov
lcall
pop
cmp
cmp
or
sbb
in
sub
jle
outsb
jnp
cwtl
jae
and
mul
or
mov
xchg
inc
lds
imul
mov
in
lods
jns
loop
aad
ljmp
mov
movsb
and
ja
jmp
dec
out
mov
scas
xor
mov
fbld
pop
jg
sbb
and
scas
xchg
cmp
movsl
insl
faddp
and
push
imul
adc
xchg
pop
movsb
icebp
rorb
fucomp
ljmp
pop
cmp
lods
mov
add
cmpsb
subl
cmp
ja
xabort
push
pop
test
add
jp
in
int3
jle
mov
xor
sti
imul
cmp
xchg
adc
pop
dec
fdivs
jmp
cltd
dec
leave
test
stos
das
cld
in
mov
or
mov
aaa
push
mov
jge
jg
or
iret
add
sti
std
mov
out
imul
mov
mov
inc
adc
aad
sar
push
ret
sub
cmp
stc
fs
xor
mov
jecxz
out
cli
pusha
and
sub
adc
inc
add
ret
jecxz
or
xchg
ds
js
ds
jmp
xchg
add
cmc
fcomps
xor
leave
into
and
and
int
loope
ljmp
shll
cltd
mov
arpl
aad
xor
cmc
rorl
lods
jae
repnz
dec
dec
lea
addr16
adc
cmp
push
inc
xchg
pop
jns
mov
cmpsb
cmpb
mov
lods
in
sbbl
vshufps
fwait
jecxz
cmovo
jmp
repz
in
adc
jg
adc
xchg
cwtl
xchg
addr16
jbe
out
xchg
mov
cmp
loopne
mov
aas
cs
decl
sub
ficomps
scas
call
push
js
mov
ret
lret
outsb
xchg
call
dec
scas
jmp
lahf
xchg
js
orb
int
fiadds
xchg
pop
cmp
mov
int
mov
int
fcompl
scas
jno
push
js
rcrl
loope
cmp
cmpsb
into
add
je
lahf
stos
repz
cmp
mov
inc
dec
shlb
dec
das
adcl
push
cmp
in
ljmp
xor
add
mov
lods
push
pop
das
jmp
jns
pusha
push
xor
scas
fbstp
add
cmp
cmp
pop
dec
aad
sti
out
sbb
pop
lret
or
or
xorb
and
jecxz
xchg
jbe
jmp
std
dec
add
fldt
mov
xchg
push
mov
mov
pop
fistpl
push
insb
lods
or
cmc
mov
pop
movsl
cmp
clc
and
inc
push
fldcw
je
dec
aad
lret
sub
fildll
cli
scas
cmc
rorl
add
push
lea
call
movsl
cmpsb
lcall
inc
xchg
les
into
jbe
les
xchg
cmp
xor
pushf
or
vmread
jne
leave
or
or
sub
sub
aad
add
mov
nop
aas
push
mov
icebp
lret
ss
imul
xor
sbb
cli
adc
pusha
sbb
xchg
rcrl
xchg
xchg
movsl
pop
or
call
mov
idivl
sbb
add
push
dec
mov
and
sbb
pusha
lods
xchg
dec
dec
mov
out
leave
push
js
repz
xchg
and
push
or
push
les
pop
add
jae
dec
icebp
test
adc
aam
mov
aam
adc
iret
mov
mov
mov
inc
cmp
in
mov
lods
test
data16
adc
cmpsb
fdivs
jge
cltd
push
mov
pop
ljmp
dec
add
cmc
imul
lahf
xchg
out
cwtl
pusha
cld
out
jmp
jp
cmp
ret
cmp
xor
ljmp
cmc
mov
std
lods
cmc
cs
and
insl
xchg
cmpsl
das
lea
insb
les
idivb
data16
sbb
lea
cmc
into
test
rolb
jmp
xadd
xchg
jno
fs
hlt
cld
call
push
or
outsb
aam
dec
push
call
jmp
mov
nop
xor
push
push
pop
call
dec
sub
push
xor
addr16
jge
sub
xchg
les
addl
rorl
and
cmova
cmp
pop
test
inc
mov
dec
aad
leave
dec
xchg
or
push
cs
mov
jl
mov
and
mov
pop
add
sub
jns
push
add
outsl
push
and
xorb
add
sub
dec
aad
test
sar
into
cmp
sub
mov
and
loope
mov
xchg
inc
or
push
in
insl
jp
jle
insb
int
ja
je
hlt
or
mov
imul
cmpsb
xor
mov
adc
icebp
in
insl
fisttpll
dec
push
fwait
sbb
and
aad
addb
and
mov
call
cwtl
jl
dec
cmc
insb
cld
pop
das
xchg
cmp
in
in
scas
cmc
push
mov
call
mov
dec
scas
movsl
push
loopne
inc
clc
cmp
add
sbb
inc
inc
push
mov
fstps
jg
jno
cld
lahf
mov
dec
jmp
or
pop
popf
leave
pusha
xor
mov
test
sbb
mov
adc
adc
movsb
sbb
jecxz
xor
iret
out
pop
mov
enter
outsl
imul
int
jle
arpl
cmc
out
mov
push
icebp
scas
sbb
cmp
ret
addr16
std
iret
xor
lea
loopne
inc
sub
js
insb
bound
lahf
icebp
hlt
ljmp
lea
push
and
dec
rcr
mov
pmullw
fs
jle
lods
xchg
cli
lahf
mov
rclb
push
or
jmp
scas
loopne
into
loope
jne
adc
cmp
data16
mov
mov
leave
out
pop
or
ret
sbb
push
pop
bound
js
adc
pop
push
in
sarl
mov
xchg
arpl
or
insl
je
popl
xor
mov
scas
insb
push
shlb
sbb
pop
mov
push
inc
in
jl
loopne
mov
mov
mov
lds
in
gs
mov
cmc
aaa
lock
mov
or
and
cmp
cld
push
je
int
movsb
jo
sub
dec
loop
int
cli
aad
jmp
cmc
sbb
fdivrp
dec
cwtl
fadd
dec
lcall
xor
xchg
std
adc
mov
js
aad
sbb
jmp
jecxz
lods
sub
push
push
jecxz
test
inc
mov
pop
and
inc
test
jg
js
imull
push
mov
lret
fildll
xchg
or
dec
outsl
fwait
push
xor
jae
ret
xor
enter
push
xchg
sub
and
dec
xchg
or
pop
insb
and
call
scas
ja
fwait
leave
call
fucom
push
sti
out
or
sti
mov
test
xor
les
imul
fldenv
and
sub
movb
push
ret
pop
loope
ret
adc
sarl
mov
sarl
aas
xor
cmp
int
incl
mov
fisubrs
xchg
in
test
fstpl
loope
adc
int
inc
scas
daa
mov
xchg
lahf
sub
push
dec
xor
sbb
sub
cmpl
loop
test
mov
xor
push
mov
enter
pop
in
pop
lock
lods
push
dec
xchg
shrl
les
into
pop
cmp
imul
sub
fisubs
loope
outsb
jnp
mov
xchg
adc
aad
cmpsb
push
adc
lods
sarl
stc
sbb
push
jecxz
dec
cltd
sahf
aam
lods
mov
xchg
sahf
js
gs
mov
hlt
arpl
repnz
or
or
mov
push
xchg
push
and
xor
jae
cltd
or
jae
lods
mov
lret
into
and
mov
dec
movsl
jno
aad
mov
mov
xchg
scas
or
insb
cmc
jle
jecxz
out
mov
out
push
js
in
test
idivb
aaa
jge
fldt
push
jg
add
mov
leave
idiv
jmp
pcmpeqw
stos
dec
into
push
xchg
push
jge
push
or
iret
push
in
add
test
rorl
cmp
dec
aad
fs
loop
or
cli
inc
cmp
aad
insb
sti
cmpsb
adc
and
pushl
lret
fsubrs
lods
test
fisubrs
cld
adc
cmp
inc
test
xchg
cmc
popf
pop
arpl
jnp
movsb
sub
addr16
cmp
movsl
loope
jmp
gs
mov
loop
test
pop
shrb
xchg
ja
xlat
jmp
adc
cmc
iret
punpckhbw
mov
cmp
mov
cmp
call
jnp
xchg
scas
push
or
sahf
sub
push
rcll
idivl
shlb
push
inc
jb
xchg
sub
in
dec
nop
mov
mov
xor
aad
push
jecxz
cmp
insl
dec
push
int3
xor
test
dec
es
in
cmp
popa
idivl
ss
jmp
cmpl
jle
dec
mov
std
cmp
std
jl
pop
inc
and
pop
lods
pop
mov
push
je
pop
xchg
outsl
mov
mov
cli
cmc
pusha
mov
xchg
add
mov
pop
jns
outsb
sbb
xor
sbb
dec
js
pushf
jmp
fwait
stos
xor
in
adc
outsl
cmp
jp
cli
pop
adc
jmp
hlt
insl
scas
xchg
and
flds
out
push
mov
aam
inc
nop
push
scas
mov
in
inc
not
int
push
ret
push
dec
xchg
insb
mov
xchg
outsl
pop
xchg
sbb
cltd
es
mov
lds
push
loopne
cmpsl
jmp
and
stc
jle
outsl
cmp
or
mov
popf
add
popa
cltd
stos
outsl
insb
xchg
out
cmp
dec
testb
std
mov
dec
xor
int
jnp
xor
ret
mov
jae
mov
push
out
cmp
mov
cli
cmovp
test
xchg
mov
ret
inc
mov
pop
pop
add
fcoml
xchg
lock
mov
clc
adc
mov
xchg
into
popa
lods
outsb
inc
adc
mov
cs
into
fmul
xchg
inc
cmp
jnp
pusha
ret
call
out
dec
jl
and
outsl
mov
jo
bound
add
or
movsb
iret
subl
xor
jnp
push
xchg
loop
aad
lahf
repz
sub
repnz
xchg
mov
nop
andb
dec
cli
sti
dec
sbb
fisttpl
scas
stos
outsl
xor
movsb
jl
jl
inc
push
mov
xchg
push
test
mov
lahf
mov
sbb
xchg
jns
pmaxub
shlb
pop
or
movsl
mov
ret
dec
and
or
insl
push
iret
cmp
pop
mov
jo
cmc
lds
movsb
and
aam
sbb
push
in
adc
stc
sub
sahf
ss
push
pushf
jns
arpl
add
mov
gs
into
out
movsb
sti
jmp
loop
xor
outsb
stc
push
ror
imul
lock
xchg
pmaddwd
xchg
dec
js
in
jmp
dec
aad
push
popa
jbe
and
mov
lcall
xchg
xor
mov
fwait
or
les
aaa
fnsave
rol
test
xchg
inc
and
idivl
push
cmpsl
push
cmp
stc
mov
in
loope
sub
shll
inc
test
adc
add
push
int
lret
pushf
add
mov
xchg
add
xchg
outsl
jnp
scas
and
xchg
arpl
outsl
push
rorb
add
rorb
push
dec
mov
jbe
or
pop
mov
ret
mov
cli
xchg
mov
pop
std
adcb
mov
add
stos
in
adc
mov
in
add
push
out
out
test
inc
pop
frstor
sbb
jns
jge
push
inc
lahf
popf
mov
std
lcall
pmullw
xchg
notl
das
int3
xor
push
dec
jge
xchg
mov
and
jne
int
jb
int
add
cmp
xchg
inc
ja
xchg
push
ret
fsqrt
fiaddl
xchg
xlat
out
push
sbb
mov
jge
inc
push
cmp
sub
mov
out
test
xchg
aad
cmc
push
dec
scas
fisubl
sub
into
mov
call
jns
inc
clc
out
or
jb
int
cmp
push
adc
cs
sub
int
cmp
leave
in
push
pop
xchg
jge
mov
or
mov
xchg
cmpsb
repnz
int
or
fimull
inc
sbb
or
popa
inc
xor
jae
cmp
xchg
cwtl
cmp
jns
repnz
nop
pop
iret
call
jl
int3
mov
nop
jmp
cmp
dec
imul
loope
cs
lds
pop
or
cwtl
sbb
hlt
into
pop
arpl
aam
sub
jb
out
push
add
cmp
xor
mov
cmpsl
scas
xchg
mov
and
out
sbb
pop
cmc
loopne
enter
test
idivb
ja
dec
daa
add
fs
and
push
and
sub
mov
loop
fwait
insb
inc
test
aaa
xlat
dec
sbb
mov
pop
mov
imul
int3
push
cmp
mov
mulb
xor
lods
ds
ror
popa
inc
adc
fld
cltd
test
cmc
xchg
sub
inc
movsl
push
cmc
repnz
fsubrl
cmp
xchg
jl
rcll
add
aad
mov
xchg
lcall
idiv
jmp
inc
insl
out
push
out
jmp
mov
inc
fcoml
les
gs
sub
cmc
inc
lods
cmp
sbb
xlat
inc
rcll
clc
rcrb
ljmp
mov
pusha
xchg
cmp
sbb
sub
adc
xchg
scas
icebp
ds
mulb
cmp
jns
mov
popf
jg
loope
dec
mov
divb
inc
push
mov
ds
lret
cmc
mov
cmp
icebp
add
stos
flds
outsl
int
push
pop
sahf
jb
loop
es
mov
push
iret
cmc
inc
cmp
sbb
lcall
mov
gs
addb
test
jp
out
or
lods
or
aas
or
std
push
mov
jl
fmull
aad
ja
icebp
in
mov
sub
jg
jle
jb
adc
imul
gs
sub
and
repz
lock
faddl
xchg
mov
cmp
shll
popw
cli
cmp
push
mov
mov
sbb
nop
xlat
mov
pusha
test
lods
mov
stos
adc
add
out
cmc
inc
adc
insl
or
imul
sub
dec
pop
xchg
shrl
filds
rclb
jbe
das
int
add
dec
fists
cmpsl
jge
jecxz
mov
push
outsb
xchg
into
in
cs
out
dec
xor
mov
pop
dec
loope
push
mov
aad
cs
push
aam
jge
mov
fistps
push
fs
mov
testl
repnz
cltd
scas
je
jns
iret
aad
stos
push
jno
mov
bswap
lea
xchg
mov
and
pop
ret
mov
aas
int
sar
inc
inc
mov
push
xchg
jg
in
sbb
cmp
lods
lods
cli
dec
fstl
imul
sbb
mov
decb
adc
bound
ficompl
xchg
cmpsb
push
ja
and
addr16
and
cwtl
je
jnp
addr16
movsb
push
aad
sbb
xchg
lock
push
xchg
outsl
sub
aam
int3
pop
cmc
inc
ss
aad
rorb
popa
shll
push
jne
in
movmskps
unpcklps
cs
scas
jge
adc
aas
loope
fidivrs
lods
fs
mov
iret
imul
adc
xor
mov
xor
push
mov
out
mov
out
xchg
sbb
mov
jno
or
sbb
sbb
into
in
loopne
or
and
cmp
sub
loope
dec
mov
test
or
add
pusha
aad
mov
sub
mov
mov
aam
call
out
shrl
in
pop
fstpl
jno
mov
dec
sub
out
jmp
adc
shrl
adc
inc
or
jecxz
push
sbb
insb
jmp
or
cli
and
mov
or
cmc
aaa
mov
lret
loope
mov
xor
or
mov
jecxz
nop
fisubrs
xchg
and
aad
int
aad
sub
pop
lods
adc
push
test
dec
lods
imul
cld
sbb
mov
push
notb
lea
jp
or
inc
cltd
cld
inc
fimuls
pop
add
mov
daa
cmp
loopne
imul
cmp
pop
mov
andl
add
repnz
iret
and
scas
lock
xor
imul
mov
or
inc
or
cmc
inc
push
leave
mov
fstpl
int
jbe
jl
add
jne
mov
ljmp
cmp
mov
xchg
cld
cmp
dec
xchg
les
addps
sbb
mov
lock
inc
rcl
outsl
mov
mov
cmp
or
fimull
fs
push
dec
xchg
fmul
adc
mov
cmp
add
ja
punpcklwd
mov
xchg
dec
mov
mov
cmp
add
xchg
fcoms
sub
scas
xchg
fisubs
movsb
mov
scas
cmp
cmp
insb
gs
pop
push
jns
fcmovne
imul
pop
lods
leave
jae
sti
sti
lods
inc
jns
shll
mov
lcall
lret
outsb
push
xor
out
js
std
push
push
mov
jle
out
js
jp
jl
xchg
imul
cmp
pop
popl
ljmp
cmp
xchg
pop
loope
loop
insl
cmpsl
push
outsl
sbb
push
cmp
out
inc
xlat
in
jmp
and
push
fbld
loop
mov
insb
dec
sbb
and
fxch
mov
imul
incb
fsubr
pop
dec
inc
or
shll
imul
and
nop
fildll
addr16
xor
ja
mov
xchg
cmp
enter
cmp
movsb
sbb
xchg
repz
mov
xchg
sahf
notb
mov
push
in
mov
std
scas
out
std
jp
in
cmp
mov
push
jl
pop
nop
call
fwait
jmp
insl
lods
or
xchg
out
or
movsb
mov
push
mov
sbb
sbb
pop
lock
stos
out
xchg
in
jo
xchg
xorl
daa
mov
jo
sbb
xor
lock
imul
and
int
aad
and
cmpl
les
in
add
push
sbb
stos
loop
pop
push
lods
add
aad
xchg
fists
mov
xchg
or
pop
jl,pt
sbb
std
aad
roll
cmc
pusha
mov
adc
adc
adc
jno
inc
adc
cmc
popa
test
pop
or
aas
ret
fimull
call
fsub
push
or
repnz
push
fadds
mov
cs
push
aaa
cwtl
pop
add
in
xchg
gs
inc
or
ljmp
nop
push
dec
aad
adc
cli
sbb
jo
lds
movb
cltd
jle
pop
push
inc
fistpll
dec
outsl
test
into
bnd
inc
and
and
dec
aad
mov
mov
dec
lock
jmp
cld
push
aam
dec
inc
filds
xor
andl
popa
hlt
mov
in
pmaddwd
idivb
pop
sarb
dec
mov
pop
cmp
xchg
lahf
add
iret
inc
xchg
sbb
jo
cmc
add
js
roll
push
outsl
or
cld
dec
push
mov
decb
std
mov
sahf
cmpsl
pusha
movsb
dec
cli
xchg
pop
int3
adc
jbe
add
insb
test
test
in
mov
ret
loop
jae
test
jp
jl
iret
pop
mov
cmp
and
xchg
data16
mov
movq
xchg
je
aad
sub
or
loop
dec
mov
lcall
std
out
cmc
popl
mov
nop
ret
or
cwtl
lret
jg
lods
iret
stc
call
xchg
dec
dec
jno
jl
popa
push
jecxz
cwtl
data16
push
repz
xor
out
cmp
lods
pandn
sub
jmp
stc
out
dec
dec
sub
mov
sub
in
dec
cmp
mov
sbb
out
sub
dec
cltd
ret
or
outsl
out
fdivrp
dec
les
popf
mov
mov
dec
gs
movsl
xor
stc
std
dec
xchg
and
jnp
test
sarl
into
dec
xchg
iret
cmp
cmp
add
movsb
cld
xchg
push
jp
stc
push
or
out
scas
xchg
stc
je
cmc
xchg
jle
outsb
jo
push
aad
movsb
lahf
test
push
maskmovq
testl
cmp
in
sarb
jo
nop
test
aad
popa
into
cli
lods
sahf
int
mov
in
out
sub
xchg
add
pop
popa
sti
out
ljmp
ljmp
fmuls
cmc
lock
add
inc
mov
fidivl
call
cmp
das
call
inc
pop
sbb
jmp
jmp
int
fs
inc
scas
fs
pop
or
popa
icebp
cmp
jnp
and
ret
dec
xor
in
fildll
mov
lret
and
js
out
inc
loope
adc
int
xchg
sbb
mov
test
sbb
mov
xchg
scas
mov
mov
inc
or
push
cwtl
cmp
arpl
jge
pop
mov
jmp
call
inc
push
pop
jecxz
aaa
outsb
enter
leave
xchg
mov
or
ljmp
dec
into
rcll
lahf
or
push
push
inc
in
xor
int
cld
rcll
out
jnp
lock
frstor
orl
cli
adc
test
int
aad
and
xchg
jmp
sbb
xor
or
aam
cmp
pop
inc
jg
rcr
dec
lds
jbe
out
xchg
out
add
xchg
int
dec
lcall
pop
test
mov
sbb
jns
dec
xor
xorl
xor
sbb
mov
mov
test
imul
sub
inc
add
sub
add
or
jmp
and
xor
jg
movsl
dec
sbb
xchg
pandn
mov
outsl
xchg
jg
dec
outsl
mov
adc
add
int
bound
jg
adcb
dec
cmp
and
jmp
push
xchg
mov
test
xor
outsl
sahf
adc
mov
adc
xchg
add
jp
sbb
jl
sub
jmp
xor
add
mov
mov
xchg
mov
ret
xchg
add
sti
sub
or
aas
rclb
enter
stos
not
lds
gs
or
push
int3
mov
xor
jne
sub
arpl
cmpsb
ret
or
data16
xchg
adc
add
push
scas
adc
xchg
pop
cwtl
fcompl
pop
add
shrl
pmullw
cwtl
pop
jg
mov
push
js
mov
js
popa
cwtl
fwait
lcall
aad
jne
loopne
leave
pop
notb
cld
jmp
repnz
subl
into
popa
fs
xchg
jmp
cmp
xor
je
adc
aad
mov
icebp
and
adc
aad
lea
data16
sub
dec
jmp
add
add
jnp
pop
paddq
cli
andb
add
cmp
jmp
outsl
pusha
or
mov
push
add
cmp
sub
fistpll
push
xchg
mov
xor
cmp
pop
loop
movsb
jp
out
mov
dec
addb
mov
test
pushf
bound
cs
add
jge
ficoms
movsb
lods
or
cmp
rcrb
outsb
test
or
lea
xorl
sahf
dec
cmp
jg
stc
lahf
pop
test
jge
sbb
pushf
dec
jo
les
inc
cmc
xchg
test
cli
dec
adc
out
cmp
sub
lret
lret
xchg
in
subl
aas
sub
es
and
adc
leave
sti
int
es
out
pop
test
push
out
push
stos
push
lods
mov
int3
subl
gs
lahf
adc
jno
rorb
imul
jmp
cli
mov
stc
and
cmpsl
jo
imulb
mov
adc
and
notb
mov
and
mov
iret
arpl
imul
and
fwait
testl
loop
jmp
jp
stos
pop
pop
mov
in
sbb
xchg
jb
testl
adcb
mov
pusha
adc
cli
lcall
lret
mov
xchg
mov
das
test
std
std
mov
movzwl
imul
mov
xchg
loop
decb
loop
loopne
aas
add
and
fcomps
mov
adc
pop
loope
cmp
lret
out
mov
mov
or
xchg
mov
jg
cmp
fbld
pop
and
xor
insl
pop
sahf
out
lods
je
ljmp
jns
xchg
mov
pmaddwd
lret
pop
fsubr
sbb
lahf
mov
or
js
out
sbb
hlt
call
dec
gs
jge
mov
sbb
xchg
popf
dec
sub
insl
out
movsb
repnz
or
stc
xchg
mov
mov
ds
adcl
enter
das
std
jl
add
mov
xor
std
sahf
aad
jge
and
pop
push
mov
lret
aas
push
imull
push
mov
leave
dec
loope
jnp
movsl
dec
repnz
or
xchg
arpl
testl
pusha
dec
into
ds
cmc
mov
daa
sub
aad
movsl
iret
and
das
xchg
sti
lock
dec
ror
inc
stos
stc
or
sub
cltd
cltd
aam
mov
lods
mov
mov
aam
inc
loop
fbld
pop
jo
dec
lcall
insl
mov
cmp
adc
jnp
int
in
ficomps
or
loopne
int3
sbb
rorb
imul
std
mov
push
and
xchg
fmull
inc
outsb
xchg
mov
in
test
add
iret
cmp
mov
mov
mov
test
in
jg
int
push
dec
shll
xor
add
or
popf
dec
cmc
imul
fcoms
sub
mov
jl
dec
xchg
push
lock
or
fldenv
xchg
ret
aam
shlb
jp
js
and
mov
cmp
or
cmp
xor
and
pushl
fsincos
mov
xor
repz
and
out
movsl
push
mov
stos
jmp
negl
dec
xorl
insl
aam
gs
add
and
lahf
sub
outsl
jg
lret
mov
mov
test
lods
sbb
decb
stos
or
out
or
lahf
xor
inc
and
and
and
pop
add
in
outsb
in
add
pop
adc
fneni(8087
jmp
mov
xchg
lds
out
stos
test
and
jae
and
and
insb
inc
cli
ret
js
rcrl
lahf
scas
loope
std
xchg
call
sbb
mov
imul
imul
call
cld
test
idivb
jl
inc
fimull
imul
scas
mov
cmpb
sub
aam
jg
fildl
cmp
lret
or
pop
xchg
adc
xchg
or
mov
dec
call
dec
jmp
lret
or
cld
or
push
mov
scas
jmp
pop
push
fdivs
or
out
cmpsb
xor
scas
mov
mov
pushf
dec
push
inc
mov
adc
jbe
cltd
in
or
data16
aad
inc
pop
pop
stos
aas
cmc
shll
in
test
and
mov
stos
nop
stos
fcomi
xor
cli
js
add
add
xor
add
loopne
out
xchg
xchg
out
cmp
or
mov
sbb
jbe
cld
fs
aam
jbe
adc
fisttps
jns
mov
cmp
fwait
jmp
icebp
inc
repz
out
or
jle
xor
aas
pop
mov
xchg
dec
imul
sub
push
in
xchg
cmp
pop
cld
cmp
popf
dec
test
lcall
and
push
add
sbb
iret
decl
cmovg
imul
adc
sarl
cmp
cmc
aas
jmp
lods
mov
dec
loop
inc
jl
adc
jl
leave
call
jl
or
xchg
into
adc
insb
push
lea
mov
inc
add
cmc
call
cmp
inc
mov
jge
cmp
call
or
mov
push
loop
pushf
dec
or
int
jnp
inc
frndint
dec
xchg
sbb
fstpl
sub
mov
cmpsb
and
rcr
inc
iret
jge
xchg
outsb
or
rcl
pop
and
push
fdivr
aad
notl
stos
add
mov
les
pop
jp
insl
xor
repz
ljmp
mov
aas
cmpsb
fsub
or
jge
aad
adc
inc
btc
outsl
in
mov
mov
dec
jb
jmp
cmp
subl
ljmp
push
or
adc
jmp
icebp
mov
jo
sub
cmpsb
fwait
stos
data16
gs
inc
and
xchg
out
cmp
cmp
int
lret
mov
or
push
mov
adc
push
jmp
movd
ljmp
cmp
add
pop
cmp
gs
adc
mov
aaa
jno
jno
inc
lret
outsl
into
cld
scas
fwait
pop
sub
ja
jl
sub
sbb
push
aam
add
ljmp
imul
mov
xchg
arpl
xchg
mov
loopne
add
rcl
and
roll
push
jmp
sub
jge
jno
les
jmp
jae
adc
aad
inc
sbb
adc
pop
outsl
push
xchg
push
iret
cmc
mov
jecxz
cmpl
aaa
dec
into
xchg
es
in
cwtl
sub
push
mov
lock
int
nop
sub
les
cmpl
repz
mov
mov
jmp
adc
sbb
clc
out
icebp
pop
push
repnz
aad
das
or
test
or
push
lods
mov
dec
add
pop
cwtl
sub
repnz
pop
syscall
in
in
sbb
add
jge
lahf
or
mov
push
add
aam
int
jne
jle
ljmp
and
mov
jo
push
scas
dec
adc
cmpsl
dec
and
pop
out
jbe
imul
cs
jecxz
lret
mov
sar
push
push
or
pop
jg
ret
test
shlb
jns
pop
mov
adc
rcl
mov
data16
adc
lea
add
in
icebp
mov
outsl
movsl
pop
popa
gs
divl
cmp
xchg
xchg
mov
and
jb
xor
movsl
test
test
lret
sbb
sbb
pusha
call
out
cmc
sub
xor
mov
sub
rorb
sub
bswap
mov
repz
xlat
mov
adc
mov
jmp
pushf
int
divl
cmc
push
xchg
add
es
jb
add
frstor
sti
movsb
insb
mov
out
cmp
dec
adc
jae
push
mov
jmp
xchg
fnstsw
adc
in
aad
mov
mov
sbb
loopne,pt
jns
dec
call
jle
sub
ret
lret
mov
cmc
push
movsb
popa
jb
scas
cmp
leave
enter
iret
lds
loopne
sbb
sti
jns
mov
cmpsb
or
push
movsb
fidivrs
out
scas
aad
cmp
adc
repz
jae
lods
call
shr
and
and
or
cmp
fisttps
test
push
inc
mov
pop
mov
push
aad
xor
push
pop
dec
push
sar
sub
lcall
es
loopne
xchg
rclb
stc
xlat
xor
dec
inc
push
int
xchg
or
stc
cmc
xor
and
pop
adc
push
movsl
push
push
fwait
jbe
out
xorb
mov
mov
cli
add
add
sub
adc
daa
gs
int
shr
pop
testb
xchg
shrd
mov
daa
stos
and
adc
scas
xchg
xchg
hlt
jge
lret
xchg
pop
cmp
pop
inc
sbb
and
subb
inc
add
push
or
xchg
xor
push
xor
je
stos
outsl
pop
std
sbb
dec
cwtl
cmp
sub
mov
mov
mov
cmp
or
dec
dec
loopne
inc
gs
jb
out
out
mov
sbb
add
jle
and
dec
mov
xor
iret
mov
jo
lea
and
lock
inc
insb
int
cmp
and
jle
out
test
call
popa
fstps
repz
insl
xchg
or
cmc
pop
arpl
idivb
or
and
cld
or
popa
mov
ds
xchg
addps
lcall
flds
mov
nop
pop
jns
out
adc
pop
cmc
fwait
pop
sbb
xchg
sbb
shr
jns
cs
mov
mov
ds
imul
and
stos
mov
in
adc
xchg
cs
into
or
cmp
jl
adc
pusha
in
shll
dec
movsb
or
insb
sub
and
lahf
hlt
jmp
mov
inc
or
xor
iret
sbb
mov
xchg
jae
dec
call
repnz
jnp
mov
push
scas
pusha
enter
xchg
mov
sbb
lods
out
jae
scas
push
sub
pop
into
ljmp
push
enter
dec
xchg
roll
dec
rcrb
movsl
sub
or
mov
mov
enter
jl
scas
inc
jns
pop
outsb
into
cmc
sahf
inc
es
mov
mov
scas
and
push
cmp
pop
xor
mov
sub
pop
mov
test
fisttpll
mov
push
loop
pop
pop
movsb
je
xchg
sbb
js
mov
lds
adc
push
test
scas
inc
mov
out
cld
cmc
aad
int
sbb
add
xchg
jnp
imul
mov
adc
add
xchg
push
jg
lahf
mov
shll
into
je
sub
and
push
nop
into
fcoms
dec
push
icebp
ljmp
inc
pop
es
pop
cmpsb
add
sbb
stos
mov
dec
inc
gs
test
and
add
push
cmp
and
cvtdq2ps
and
sahf
movl
mov
ljmp
scas
cmp
pusha
daa
inc
xchg
mov
xor
int
and
cmp
jnp
sub
dec
out
addr16
aad
mov
std
inc
push
cmp
mov
jl
ret
mov
aas
and
pop
out
xor
cmp
mov
daa
ljmp
movsb
fists
fnstenv
pavgb
cmp
push
mov
sbb
or
aad
lret
dec
int
test
pusha
retw
dec
insb
xor
mov
shr
pop
mov
lahf
call
xchg
inc
jl
adc
xor
js
lds
mov
sahf
jnp
lret
and
stos
pop
imul
int
subl
shll
rorl
push
xchg
mov
cmc
imul
test
mov
shld
pop
enter
cmp
and
mov
insb
xlat
jecxz
cli
insb
pop
xchg
cmc
fldt
sub
sbb
pop
cmp
fsubrp
call
ret
imul
cltd
ret
mov
sbb
xlat
mov
pop
call
movsl
cmp
add
out
cpuid
stc
jb
lea
or
inc
mov
shl
lods
jecxz
cmp
cmp
dec
add
xchg
int3
jo
arpl
mov
mov
sbb
xchg
clc
sbb
xchg
sub
repz
popf
imul
repz
pusha
icebp
mov
in
adc
mov
mov
or
xchg
arpl
test
xor
ret
push
cmpsb
dec
inc
dec
cmp
xchg
inc
stos
jne
push
and
js
mov
aad
sarl
fisubl
fdivrl
cmpsb
ljmp
push
mov
or
push
sbb
rorl
cmp
xchg
push
add
sarl
stos
add
push
test
jmp
es
xchg
xchg
xchg
jl
mov
cs
aad
sub
jmp
cmp
mov
xlat
jl
and
mov
popf
mov
xchg
mov
and
mov
out
ja
cmc
adc
mov
mov
mulb
mov
cmc
mov
ds
sti
cmp
sbb
mov
pop
xor
or
and
add
cli
pop
push
add
cmp
adc
cltd
repnz
bound
aad
mov
sbb
mov
cld
fcomps
inc
jge
aad
ds
gs
movl
sub
mov
mov
out
pop
inc
mov
dec
stos
jp
jne
dec
mov
mov
pop
add
add
sti
xchg
pop
insb
cwtl
jge
in
dec
jb
fnstenv
loope
mov
data16
rol
out
lods
mov
push
pusha
cli
cmc
dec
push
xchg
out
imul
repnz
nop
mov
and
dec
test
ficoml
dec
stos
pop
cmpsl
dec
mov
imul
aad
xlat
js
pop
or
movsb
les
cld
lahf
in
mulb
sbb
mov
or
push
outsl
aad
es
dec
mov
cmp
adc
nop
popa
call
mov
aas
das
mov
mov
lahf
ret
pop
dec
lods
push
push
scas
ss
push
fsubp
fnstcw
divb
popf
jbe
shl
fimuls
fldl
lahf
aad
jbe
jbe
and
outsb
mov
push
or
and
sar
xchg
add
aad
xchg
xor
mov
movsl
stc
mov
je
rcl
test
adc
and
pop
mov
mov
cmp
pop
xor
mov
popa
cmpsl
mov
push
xchg
mov
dec
fadd
out
fdivr
cli
inc
fdivp
adc
call
jnp
mov
xchg
lret
adc
xor
aas
fnstsw
xchg
or
out
xchg
and
jl
leave
mov
into
insl
movsb
bnd
movsb
jo
stc
push
push
jmp
mov
in
aad
mov
cld
push
fwait
jo
movsb
jg
leave
push
jo
mov
dec
aad
add
cmc
icebp
mov
xchg
int
sbb
fbstp
arpl
cmp
data16
and
js
stc
mov
frstor
pop
cld
add
adc
xor
sti
lods
add
adc
jmp
mov
mov
push
test
popa
divl
xor
sti
cmp
fwait
and
mov
outsl
xor
mov
push
xorb
lret
add
jp
xor
ret
sub
in
xlat
push
push
and
push
pop
movsl
jbe
pop
mov
cmc
hlt
or
cmpsb
cmp
mov
nop
pop
or
ret
jl
dec
jl
dec
push
int
imul
cmovne
xchg
dec
push
fsub
pop
out
push
sarl
or
adc
push
std
pusha
dec
int
aad
or
stos
out
mov
xchg
popa
pusha
divb
cmpsl
faddp
movsl
dec
out
and
outsl
lea
movsb
add
mov
xchg
repz
cmp
push
inc
xchg
and
jmp
loopne
xor
mov
and
cld
or
ljmp
daa
mov
out
loopne
fcomip
jbe
repz
push
aad
in
mov
cwtl
push
int
mov
jbe
cmp
adc
sbb
popa
cmp
js
js
mov
inc
cmp
out
adc
mov
cs
xchg
bound
push
sbb
jp
sub
push
repnz
cli
push
push
mov
mov
mov
mov
and
push
push
mov
out
fdivp
mov
xor
insl
test
fucomi
mov
fisubrs
subl
push
pop
mov
lcall
push
jns
stos
gs
in
stos
or
inc
mov
cmc
insb
lods
roll
xchg
jp
std
lods
leave
fisubrl
mov
xlat
mov
roll
inc
and
xor
ja
iret
and
xor
ret
stos
sar
adc
cmp
mov
jmp
das
mov
xchg
loope
jge
testl
add
jp
push
mov
cmp
out
fisubrl
sub
orl
cs
test
cmp
movsl
rcr
mov
add
pop
popa
sub
push
xor
nop
pop
stos
push
in
dec
add
or
add
and
or
add
push
pusha
dec
mov
dec
inc
mov
add
or
cmp
sahf
fdivr
inc
jmp
div
inc
int
cmp
jmp
mov
gs
out
in
aad
stc
xchg
pop
adc
loopne
dec
int
pop
loope
jne
out
add
inc
mov
jne
lahf
popf
push
mov
jle
pop
test
jbe
jmp
imul
test
test
jp
idiv
js
jle
clc
mov
mov
and
add
jmp
in
out
testl
dec
xchg
dec
xor
fwait
xor
dec
outsl
cli
mov
inc
ret
push
jae
lret
mov
rcrl
int
dec
in
int
adc
xchg
enter
mov
mov
xor
sub
stos
mov
ds
dec
mov
mov
lret
sub
jae
push
test
add
leave
jge
lahf
add
fidivl
add
lods
xchg
mov
sbb
cli
xor
inc
or
bound
pusha
inc
sti
int
mov
mov
pop
lods
sub
in
jo
mov
xor
push
inc
and
xlat
fnstenv
andb
lret
ret
sbb
and
and
mov
push
ds
popf
addr16
aas
jle
or
loopne
lods
repz
test
std
stc
add
pop
sbb
mov
mov
adc
xor
stos
ret
rcrl
adc
pop
aad
or
test
inc
cmc
sub
xchg
aas
inc
lret
push
sti
mov
mov
dec
and
sub
cmp
jg
pop
or
mov
das
mov
out
cld
in
js
push
cmpsb
sub
ljmp
push
aam
push
jg
fimull
or
or
std
aad
mov
xchg
popf
add
nop
sahf
int
add
mov
ret
mov
iret
xor
jecxz
and
or
pop
clc
lods
cli
js
lea
shl
cmp
jne
dec
pop
or
xchg
pop
xlat
std
mull
cmp
lahf
iret
or
xchg
stos
sbb
aad
or
ljmp
icebp
fidivrs
outsl
sbb
add
sub
imul
push
imul
xor
loop
add
push
aam
or
mov
sub
cmc
xchg
cmc
lret
iret
cmpsb
je
xchg
movsl
push
rdtsc
xchg
shrb
into
mov
dec
and
sub
iret
and
rcrl
adc
jge
cmp
inc
pop
and
add
icebp
pop
push
fsub
sub
adc
shlb
and
adc
vpsubsw
jecxz
test
jmp
jge
pop
notl
jl
ficompl
add
mov
out
in
pop
xchg
lret
xchg
cmp
sub
adc
pop
jecxz
in
js
stos
sub
or
xor
scas
mov
sbb
fimuls
call
ficoml
pop
and
push
jge
fsubr
mov
adcl
outsb
cmpsb
cmp
cmpsb
fiadds
fidivl
aad
out
bound
pushf
xchg
adcl
inc
pop
lods
cmc
mov
adc
fcmovnu
and
pop
mov
pop
outsl
push
xchg
nop
or
sub
and
adc
fisubrs
push
adc
lods
fmull
add
ljmp
imul
mov
scas
scas
push
repz
in
stos
jp
mov
inc
ret
or
daa
add
xchg
out
in
inc
jns
cmc
dec
or
push
adc
sub
scas
jg
xchg
sub
xchg
jno
sarb
lods
test
cmp
popf
mov
lods
out
stos
jge
iret
js
cmp
fisttpl
and
into
rorb
xchg
pusha
jb
clc
out
lcall
cwtl
push
repnz
add
imul
into
inc
loopne
jmp
mov
in
mov
push
inc
mov
test
inc
es
dec
stos
mov
aad
jae
push
mull
incb
shrl
lock
dec
xor
mov
movl
jo
cld
jge
jecxz
fildl
fiaddl
add
pusha
add
adc
xchg
roll
lock
sub
mov
call
out
and
mov
or
mov
lock
scas
adc
xor
iret
xchg
mov
loop
cltd
cmp
fisttps
stos
or
leave
cmp
jbe
rcrl
dec
lahf
mov
mov
sha1msg1
add
or
cs
jmp
adc
adc
fisttpll
xor
mov
cmp
in
arpl
mov
mov
in
stos
or
add
int3
xchg
or
int3
xor
mov
cmc
push
dec
jb
movsb
enter
int
outsl
or
xlat
loope
sbb
out
repz
cli
and
or
xchg
jo
mov
xchg
scas
and
fwait
cltd
sub
inc
fwait
push
inc
aam
xchg
xor
std
sahf
push
cmp
out
sub
jmp
outsl
mov
push
jno
inc
pmullw
pop
mov
xchg
jo
loop
data16
outsl
add
lock
lret
jp
popf
repnz
jo
imul
dec
xchg
pop
inc
lahf
cli
cmc
leave
scas
in
lahf
daa
cmp
ret
js
or
test
xchg
push
loop
jp
pusha
mul
aad
subb
cmpsb
adc
lahf
sub
aam
into
xor
pop
aad
sub
or
add
add
rcll
sub
pusha
js
cwtl
in
mov
adc
jp
sub
pop
pop
and
or
fcompl
les
jnp
adc
or
hlt
push
shl
adc
notl
fwait
pop
mov
push
rcll
lods
clc
sbb
add
sub
aad
dec
std
mov
cmp
cmp
stos
dec
cli
jno
movb
cvtps2pi
repnz
mov
push
mov
inc
hlt
in
arpl
orl
cmp
push
lahf
scas
mov
cmp
icebp
add
cmp
outsl
push
cmp
adc
xor
repnz
nop
sub
daa
and
jl
cmc
test
mov
rcl
loop
mov
lcall
pavgb
mov
add
negb
mov
sub
mov
int
jmp
iret
mov
int3
js
shlb
aaa
cmp
pop
jg
test
test
out
cmc
dec
mov
pop
out
into
mov
push
out
pop
add
outsl
push
or
xor
jo
jg
negl
test
sbb
scas
pusha
pusha
push
fsubr
das
add
and
push
loop
cmp
andl
jle
fdivs
push
pop
jbe
xchg
inc
cmpsb
inc
xor
cmc
xlat
cwtl
into
data16
mov
sub
dec
sbb
push
push
sbb
lret
test
jmp
add
stc
inc
push
cmp
push
pop
cld
int3
mov
lret
mov
aaa
adc
lret
add
add
mov
cli
xchg
sub
hlt
outsl
into
add
clc
shl
push
and
push
mov
mov
mov
sti
and
mov
xor
and
mov
mov
mov
jmp
jg
xchg
sbb
std
in
mov
call
cmp
imul
dec
sbb
popa
mov
neg
xchg
int
je
mov
jle
fstpl
xchg
shrb
lock
jo
rorb
sub
int3
sarl
shlb
sub
mov
adc
mov
sub
stc
push
aad
in
loope
ret
mov
icebp
and
pop
jp
cmp
loopne
out
fisubl
loop
sub
xchg
sub
pop
jbe
inc
int3
shlb
xchg
adc
or
in
sub
jmp
dec
and
fwait
xchg
test
cmp
cmc
jp
movsb
cmp
mov
push
imul
mov
pop
aad
movsl
and
xor
testb
movsl
cmc
mov
sub
xor
pop
xchg
sbb
mov
cmp
andb
je
dec
cld
stc
jp
xor
adc
adc
subl
mov
fldt
pushf
aad
cmp
daa
stc
into
add
or
out
jg
and
or
cmc
std
jmp
sbb
mov
sbb
dec
or
stos
cld
call
push
in
mov
cmp
out
mov
jae
push
dec
pop
adc
xchg
inc
icebp
imul
dec
jmp
add
scas
mov
mov
mov
mov
add
cmc
jl
paddusw
pop
xchg
loop
pop
mov
push
dec
mov
mov
ja
lret
iret
int
mov
push
cmp
sub
in
mov
mov
ljmp
js
out
lods
xor
out
pop
xor
jne
sar
inc
mov
in
cltd
nop
out
jnp
lcall
jl
lea
cmp
rcl
sbb
or
fcompl
into
adc
lods
sbb
cmp
jo
movsl
movsb
fwait
scas
hlt
aad
lods
xlat
dec
jns
xchg
movsb
je
popf
mov
shll
test
jp
gs
pop
mov
jl
mov
or
and
or
add
mov
push
mov
push
outsl
add
sbb
inc
cli
push
xchg
xchg
cltd
idivl
sub
mov
vmread
rol
cmpsl
negl
dec
imul
mov
dec
iret
out
cmc
jae
cmpsl
testl
call
xor
xchg
clc
lods
push
xchg
hlt
ss
push
jl
pop
and
xchg
sbb
adc
xchg
icebp
and
cmp
jp
stc
dec
test
mov
popa
lods
lahf
xchg
mov
in
les
mov
add
cmp
dec
sub
divl
mov
cld
cmc
mov
or
sub
add
jmp
inc
push
inc
add
sbb
cwtl
jo
mov
add
xchg
push
imul
jmp
jno
mov
sbb
les
mov
nop
xchg
pop
jmp
xchg
xor
lret
sub
jo
or
clc
call
movsb
dec
adc
loopne
cwtl
cmp
push
pop
cwtl
fnstenv
jbe
pop
inc
call
rclb
lods
jno
jge
fcomps
cvtpi2ps
decb
addl
xor
xchg
mov
adc
xchg
das
xchg
in
add
adc
and
aaa
loope
mov
cmc
sahf
sbb
scas
jl
jmp
cmp
cmp
add
outsl
push
nop
mov
stc
sub
call
jne
mov
popf
cmpsl
loopne
lock
sub
cmc
push
xorl
and
cmc
filds
cmp
or
fiadds
cmp
testl
xchg
imul
xchg
fwait
sti
jo
ret
test
jnp
pusha
fsubl
mov
shrl
lret
dec
xor
push
push
imul
pop
jns
fidivrs
mov
inc
jge
aam
pop
push
sub
aam
loop
mov
jl
inc
cltd
or
ja
adc
shl
test
inc
mov
dec
cld
sub
xchg
or
je
inc
dec
sbb
shrd
jmp
inc
mov
push
jo
mov
xchg
xlat
push
mov
fistpll
mov
pop
ffree
sahf
mov
pushf
call
push
inc
mov
and
cmp
jmp
mov
into
mov
pop
add
loope
test
inc
mov
xchg
addl
push
iret
leave
jns
xchg
jns
adc
in
sub
or
jns
inc
ljmp
outsl
aas
aad
and
sub
or
push
cmp
dec
push
mov
inc
js
push
das
lea
adc
int3
dec
popa
push
outsl
mov
adc
cld
aam
test
mov
pushf
inc
push
cmp
jnp
dec
nop
jno
dec
xchg
xor
cmp
ret
insl
pop
mov
push
or
test
or
hlt
sbb
movsb
imul
shll
pop
scas
lahf
mov
jns
fwait
mov
mov
mov
sub
mov
sub
aaa
faddl
in
cmc
icebp
stos
jne
sbb
ret
mov
push
sti
jecxz
mov
add
mov
pop
mov
cmc
mov
scas
push
in
leave
clc
test
push
lods
xchg
push
shrl
es
jmp
ds
pop
jecxz
mov
sahf
cmp
inc
mov
aas
or
cmc
xor
jp
add
and
xchg
cmp
xor
sbb
fnstsw
push
imul
scas
enter
cmpsl
mov
imul
into
dec
sbb
out
jle
aad
xor
inc
rorb
jno
cmp
fnstcw
mov
inc
and
scas
jle
dec
int
pop
xchg
jno
shrb
iret
ss
inc
dec
insb
addr16
fisubl
movsb
incb
pop
jns
cmc
sbb
pop
test
data16
push
dec
jl
and
repz
add
shlb
and
test
int3
lahf
movsl
push
mov
inc
ret
pusha
mov
lfs
cmc
aad
xor
lock
int
jns
xchg
fidivs
cmpb
xchg
scas
and
pop
into
add
and
jl
add
mov
jmp
call
and
loope
call
aam
push
pop
js
repnz
push
jnp
arpl
in
sub
mov
fisubrl
push
sbb
data16
push
in
fsubrl
add
mov
xchg
mov
and
jae
notl
lods
andl
sub
fs
sbb
int
loope
addr16
out
hlt
sbb
push
cli
jmp
test
cmpsb
dec
lods
iret
stos
es
jl
sub
std
jmp
test
or
prefetch
imull
push
dec
jmp
dec
add
sub
xchg
cmpsb
insb
insb
cmpsb
pandn
and
or
shlb
ret
loopne
call
imul
and
cwtl
test
xor
mov
adc
and
dec
push
sarb
fwait
int
xorl
cwtl
push
sar
inc
cmp
adc
cmc
mov
outsb
pop
and
cmp
subb
pop
lea
icebp
and
idivb
idiv
mov
xor
aam
psrad
sbb
jmp
cmc
loopne
inc
mov
mov
cmpsb
std
testl
decb
mov
clc
ja
imul
mov
ja
or
jnp
sub
mov
mov
pop
mov
xor
enter
cld
in
push
pusha
cmp
cli
icebp
dec
xorb
insl
push
mov
subl
and
inc
pop
push
inc
jbe
jge
mov
mov
sarb
andb
dec
in
or
xchg
notl
mov
lea
loope
movsl
jg
ljmp
arpl
mov
sti
pop
mov
mov
adc
scas
gs
and
stc
sbb
sti
or
jmp
cmpsb
dec
cmp
push
sbb
push
cmp
dec
out
popa
xchg
insb
repz
jo
and
xchg
rclb
mov
aam
sbb
pushf
loopne
cmp
aas
cmc
subb
cmp
adc
add
lods
in
xor
aad
out
int
jmp
jl
push
aas
mov
jg
js
stos
jnp
testl
and
mov
adc
cmp
fsubrs
jge
mov
out
push
add
psrld
in
fidivs
in
mov
push
mov
popa
popf
inc
inc
mov
aaa
dec
pop
imul
mov
xchg
test
xchg
add
pusha
xor
addr16
popa
pop
cmc
pushf
dec
fidivl
repz
xchg
mov
push
fcmovnb
insb
pop
pop
jns
fisubrs
jmp
cmc
aas
push
stos
movsb
adc
int
outsl
push
mov
sbb
fnstcw
or
shrb
pop
cmp
jmp
and
fdivrl
loopne
fwait
stos
pop
lds
int3
shll
rclb
outsl
xor
daa
in
sub
fwait
mov
dec
call
inc
mov
or
jmp
call
cmp
inc
es
lcall
pop
xor
xchg
popa
leave
stos
incb
int
cltd
pop
xor
inc
jecxz
aas
adc
jmp
push
sbb
and
jmp
sub
inc
dec
lock
cmp
pop
push
cli
jl
je
faddp
mov
or
push
mov
mov
iret
cmc
pop
ds
mov
push
xchg
cs
xchg
or
insl
push
out
add
and
dec
pop
mov
movsb
lret
test
cli
dec
mov
jmp
and
popf
dec
xchg
sub
mov
push
mov
imul
mov
dec
and
mov
mov
lods
pop
std
stos
mov
jae
xlat
mov
rcrl
xor
xor
test
push
fwait
cmpsb
sbb
sub
ficompl
in
cmpsb
and
cmc
aad
jecxz
sub
test
mov
mov
lods
bswap
push
jg
xchg
add
cmp
orb
mov
sarb
lea
jno
sbb
nop
jg
push
stc
shl
sbb
arpl
sub
or
push
or
call
mov
pushf
dec
fld
sti
xchg
inc
jle
lea
test
sub
mov
or
movsl
pop
cli
adc
cli
mov
push
pop
push
aaa
test
jp
mov
aad
mov
fistpl
sti
fisubs
aam
dec
mov
aad
mov
clc
orl
xchg
dec
scas
pusha
imul
sbb
ret
fbld
inc
push
stc
in
cwtl
shlb
lods
in
testb
in
sub
xchg
fidivs
call
sub
out
les
dec
stos
dec
pop
popa
mov
popf
cli
cmc
mov
mov
out
sbb
fsubrp
push
or
in
cmovs
outsb
lods
sti
mov
cmp
into
jle
bound
je
add
aad
xor
dec
add
icebp
daa
or
mov
adc
enter
icebp
cli
jb
jp
out
mov
lds
mov
testb
int
dec
pop
call
aad
sub
push
lea
lods
xchg
add
mov
mov
fcmove
xchg
cld
mov
notl
stos
inc
push
jmp
dec
jge
frstor
enter
push
lea
cmpsl
fcomps
sub
popa
and
fwait
xorl
dec
int
sub
push
jns
in
pop
mov
fimull
dec
cmpsb
imul
and
jb
push
popa
push
push
into
xor
cwtl
adc
sbb
insl
cltd
mov
notb
ret
add
in
out
rolb
jmp
xchg
loopne
xchg
adc
mov
dec
insl
adc
sbb
pop
mov
mov
mov
lea
fbstp
add
push
dec
sub
dec
fidivl
ss
mov
xchg
out
addr16
cmc
add
enter
ljmp
and
xchg
loope
sti
mov
pop
pop
fucomp
ficompl
fdivp
repnz
lds
pmaddwd
mov
and
mov
out
shl
fptan
xor
sbb
mov
mov
pop
rorl
mov
call
push
repnz
mov
pop
in
neg
js
popa
jmp
jb
mov
and
or
jnp
mov
rcr
cmp
sbb
xchg
mov
lahf
out
add
inc
popl
mov
mov
sbb
and
sarl
inc
ss
cmpsl
imul
or
push
push
idivl
or
jbe
add
arpl
push
jge
adc
inc
pop
mov
cmp
loope
dec
and
pop
call
push
pop
movsl
arpl
xchg
xchg
push
cmp
iret
xchg
dec
inc
dec
inc
push
rcrb
iret
rorb
xor
xor
sub
pop
sbb
mov
adc
outsb
leave
inc
jge
or
xchg
jb
ljmp
adc
pop
mov
xchg
and
jle
inc
es
jecxz
dec
and
mov
dec
push
movsl
sbb
mov
dec
aad
push
dec
adc
iret
icebp
or
jnp
aad
sbb
in
daa
fwait
or
aam
les
mov
mov
jl
imul
sub
xchg
inc
push
mov
jmp
add
ret
cmp
imul
fimull
and
mov
sub
call
aad
pop
ds
jl
in
xchg
int
push
lcall
pusha
add
pop
pusha
cmp
xlat
mov
push
sti
sub
loopne
or
inc
xor
cmp
arpl
cmp
pop
adc
jmp
out
outsb
or
test
cmp
cmc
adc
push
fstl
fwait
pop
pminub
data16
lahf
inc
pusha
sahf
push
test
xor
shr
mov
popa
jnp
xor
add
lods
xor
and
popl
xchg
sbb
dec
in
int
aad
mov
xor
adc
push
jbe
xchg
cwtl
pop
xlat
gs
or
pop
daa
mov
adc
ds
jae
xor
jecxz
pop
loope
test
jbe
cmc
jo
and
mov
xor
push
js
mov
imul
xchg
jmp
cwtl
lea
mov
xchg
mov
sahf
xchg
out
ja
fstpt
arpl
jnp
dec
scas
dec
pop
xchg
cmpl
outsl
rorl
sub
xor
jmp
mov
dec
xchg
scas
pop
sbb
scas
dec
pushf
out
add
jbe
in
gs
inc
xchg
stc
fcmovnu
and
add
dec
cmp
notl
stos
lahf
adc
xchg
cwtl
mov
push
inc
xchg
movsl
jp
movsb
mov
rcl
and
xor
xchg
adc
aaa
dec
int3
bswap
jb
pusha
and
out
ret
jne
lock
cmp
cmp
xor
mov
and
sub
push
adc
sbb
push
or
pop
aad
mov
in
lods
jae
scas
or
loopne
jae
loop
jle
pop
dec
mov
sbb
xchg
outsb
ss
cmp
stos
dec
icebp
mov
addb
fdivs
in
bnd
cmp
les
jbe
int
xchg
xor
std
adc
cli
stos
bnd
punpcklbw
imul
push
andb
sub
sarl
or
scas
lods
lods
xchg
pop
ljmp
hlt
insl
jg
sbb
or
sahf
add
into
call
gs
add
or
lods
or
inc
adc
push
ret
in
es
arpl
mov
xchg
aad
fisubs
mov
popa
sti
test
mov
inc
stc
iret
jmp
sub
lret
add
andl
xchg
aas
jno
dec
xlat
push
mov
sbb
push
push
and
mov
test
dec
loopne
pop
sub
xchg
mov
or
lock
enter
ret
push
mov
insb
fs
test
ret
cmpsb
or
rcrb
outsb
inc
xchg
mov
mov
movsb
cld
cmove
mov
cmp
fyl2x
sti
cmc
mov
mov
das
sti
aad
mov
ljmp
sub
out
mov
sub
jnp
xlat
cmp
mov
cmp
mov
push
jecxz
mov
pop
jecxz
sub
sub
mov
js
xchg
dec
sbb
movlps
jl
pop
fnstsw
mov
push
lret
aad
incb
cwtl
loop
cmove
stos
xchg
mov
add
addr16
aad
jg
repz
adc
sub
cmp
divb
repnz
pushf
adc
inc
mov
inc
xor
pop
test
mov
popf
cmp
fstps
cmp
mov
les
movsb
cli
fistl
insl
movsl
and
aad
test
ja
pop
rcrl
sub
roll
je
push
adc
inc
jae
jg
inc
fcmovne
pop
mov
dec
jge
cs
inc
sbb
ja
aad
or
cmp
lods
or
lret
arpl
js
mov
dec
xchg
jae
push
mov
or
das
sti
push
fcomps
push
shr
adc
in
js
and
add
mov
sti
push
loope
je
ja
add
dec
int
imul
push
pop
dec
cld
jmp
aad
sub
mov
mov
xor
adc
xor
sti
into
shlb
push
jecxz
cmp
out
or
sub
xchg
fwait
jae
cmpsl
jne
push
xorl
inc
lret
jle
cwtl
shrb
stos
jle
movsl
pushf
sbb
fwait
call
jns
in
loop
jg
cltd
adc
xor
xor
lods
pusha
shrl
adc
mov
imul
xor
jmp
cli
in
xchg
xor
adc
add
ljmp
leave
adc
cmpsb
or
aad
mov
roll
fiadds
push
dec
jl
push
inc
iret
xchg
pusha
out
rcrl
stos
sub
xchg
add
js
cmpsl
add
es
jb
xchg
push
mov
fildll
test
pop
outsl
iret
js
and
and
mov
movl
shlb
dec
mov
xchg
enter
loope
inc
scas
mov
inc
iret
stc
cmc
or
jge
shll
mov
mov
mov
mov
adc
dec
or
out
push
sub
jbe
or
mov
ret
loop
add
shlb
or
aad
sbb
mov
call
xchg
xor
xor
mov
pop
and
arpl
cmc
imul
mov
xchg
mov
xchg
dec
jecxz
idivl
sbb
cmc
push
push
dec
mov
testb
aad
jo
adc
imul
dec
pushl
psubd
and
arpl
jl
xchg
cmc
pop
mov
dec
xchg
frstor
jge
add
or
rclb
xchg
pop
mov
and
push
or
ret
imul
or
cwtl
and
and
flds
test
inc
sub
dec
shl
or
out
and
leave
fsubrp
inc
out
pushf
dec
mov
sarl
aad
jns
enter
in
xchg
push
sbb
and
clc
out
mov
clc
push
push
sbb
mov
imul
mov
sub
mov
lds
jns
ficoms
mov
dec
es
adc
pusha
xchg
pop
sub
xchg
sbb
xchg
popf
cli
leave
scas
sbb
mov
inc
cmp
inc
lods
psubusb
mov
jo
rorb
and
leave
fldt
sub
mov
std
push
mov
or
cmp
inc
mov
ds
mov
repnz
xchg
sbb
cmp
cmp
fistps
and
lret
or
jg
fstpl
mov
aaa
pop
jb
xor
push
mov
loope
aas
mov
jmp
aaa
sbb
test
mov
cmp
scas
ret
ds
cmpsb
inc
outsl
jb
mov
out
xchg
popa
mov
xchg
push
lahf
loope
jl
inc
add
mov
push
sub
adc
adc
rorl
pop
mov
push
arpl
xchg
test
jne
push
add
cs
ret
pop
mov
sbb
pop
adc
mov
add
fcoms
or
cmp
loope
sbb
ret
xchg
cmc
push
adcb
mov
loope
or
mov
sbb
pushf
lret
sub
sbb
out
imul
add
cmp
ds
adc
sarl
mov
lds
bound
outsb
cmp
sub
sbb
jo
lahf
aad
sub
fdivrl
stos
add
cmpsb
mov
xchg
es
add
idiv
loope
jne
mov
xor
mov
imul
adc
dec
pop
push
push
push
lret
out
xchg
dec
jl
push
jns
div
dec
decl
inc
aas
push
sbb
jmp
or
dec
mov
loopne
mov
bound
mov
pop
hlt
es
mov
push
call
adc
jns
push
adc
dec
daa
add
in
daa
inc
cmpsl
xchg
mull
inc
mov
sub
call
and
xor
in
and
add
adc
xchg
mov
and
clc
cmp
dec
loop
jg
and
dec
dec
stos
pop
push
inc
push
jg
insb
and
jbe
cmc
dec
les
lock
out
mov
push
add
lcall
adc
and
outsl
mov
xor
pop
insl
stos
jge
fisttps
loope
mov
jns
push
or
dec
je
dec
movsl
xchg
rcll
xchg
xor
cwtl
pop
jmp
mov
xchg
dec
in
mov
dec
push
cltd
xchg
jne
iret
es
jecxz
dec
mov
sbb
mov
or
aaa
pop
outsb
dec
stc
cld
int3
mov
sti
ret
js
loop
mov
pop
jbe
mov
mov
add
push
repz
cmp
icebp
add
inc
cmp
sbb
mov
daa
add
sbb
push
mov
jge
cmp
push
inc
cmp
repz
dec
js
push
int
inc
into
stos
cmpsb
sbb
outsb
in
dec
scas
xor
sub
testb
push
adc
mov
adc
andl
imul
movsb
push
xchg
inc
dec
into
loope
jo
fmull
pop
fucom
jmp
mov
movsl
in
cwtl
push
xchg
jo
adc
dec
mov
adc
xchg
das
jmp
int3
pop
dec
outsl
mov
or
daa
inc
lods
sbb
popa
or
mov
push
aad
es
addl
lods
push
fdivl
or
loope
fs
dec
xlat
roll
mov
mov
pop
pusha
mov
sub
hlt
push
idiv
xchg
mov
dec
mov
xor
xchg
or
add
cmc
push
fldl
andb
cld
inc
cmp
xor
lahf
cmp
aad
lea
push
inc
xchg
xlat
or
idivb
addl
imul
jmp
jmp
out
xchg
add
mov
stos
adc
dec
mov
or
mov
sbb
pusha
ficoms
in
jnp
push
mov
dec
sti
cltd
pop
pop
es
cld
xor
stc
cmc
shl
clc
mov
lahf
test
pmulhw
stos
nop
push
lods
std
xchg
pop
sub
jo
jl
push
fadds
ja
xchg
out
xor
sub
xchg
inc
mov
push
or
lret
sub
or
or
pop
js
rorb
test
xor
notl
or
test
call
je
loopne
movsb
in
test
push
ljmp
test
add
and
cmpsb
dec
or
jmp
insl
mov
adc
pop
andb
lcall
mov
dec
cmpsb
hlt
lcall
pop
or
jns
mov
call
jno
lock
data16
or
out
clc
ja
call
mull
sub
lret
into
inc
dec
and
mov
icebp
std
inc
push
sahf
mov
clc
push
xor
adc
movsl
push
inc
pop
cld
cmpsl
or
jmp
push
fs
jge
cltd
mov
adc
scas
or
js
add
mov
jmp
lods
dec
mov
lds
xor
cmp
pushf
jge
popa
repz
lock
aad
jl
dec
mov
or
fidivrs
xchg
inc
psubusb
adc
dec
test
rol
out
fimull
push
adc
shl
jge
sub
fisubs
lods
cmp
sub
fstpt
jge
and
adc
or
mov
icebp
movsb
jecxz
test
mov
jp
jmp
or
jl
js
push
sahf
adc
cmp
inc
mov
add
iret
xchg
xorl
pop
mov
sbb
faddl
jl
and
xchg
push
hlt
cmc
add
repnz
push
cmp
cmp
js
gs
movnti
lea
push
lock
lods
sub
pushf
jmp
jp
mov
mov
inc
aas
or
outsl
inc
push
push
dec
push
icebp
movl
cmc
jg
mov
ror
call
mov
xor
rolb
xor
add
outsb
jns
cs
flds
dec
in
dec
xchg
push
pushf
repnz
repnz
inc
loopne
push
lret
arpl
lret
nop
or
or
or
mov
flds
cmp
das
nop
loope
sub
movsb
fisubrl
push
mov
sub
popa
sbb
mov
cmp
xchg
mov
or
push
pop
test
mov
inc
fwait
or
adc
adc
fwait
add
sbb
data16
pop
gs
cltd
push
and
xchg
ljmp
imul
call
mov
into
mov
mov
leave
int
or
cmp
int
jl
cli
faddl
orb
lock
andl
jecxz
lods
xorb
lods
pusha
cmpsb
cmp
dec
mov
push
jl
xchg
push
gs
cmp
out
daa
stos
into
mov
fisubs
jmp
xchg
mov
repz
cli
pusha
popa
imul
mov
pop
xchg
push
rorb
fsubrs
fs
loop
mov
les
push
cs
into
jae
in
enter
sub
xchg
sub
mov
lods
and
mov
and
and
sub
leave
sti
xchg
test
push
scas
jecxz
or
jb
cmp
jecxz
adc
push
bt
dec
mov
mov
or
lods
adc
jge
vpunpckhdq
xor
jl
es
xor
mov
xchg
fsubrp
test
arpl
jno
xchg
or
jae
dec
mov
loop
popl
mov
fsubp
jl
xchg
jb
or
pop
pop
pop
xor
inc
imul
decb
das
popa
xchg
out
xchg
mov
adc
mov
dec
stos
fimull
insb
xchg
aad
aad
xchg
mov
dec
popf
mov
jmp
push
and
xor
cmp
push
xor
shl
cwtl
cmpb
cmpsb
cmpsl
xchg
lock
push
adc
rcll
jo
sbb
inc
and
jbe
aam
dec
and
dec
inc
sub
repz
xchg
jnp
jp
call
int
mov
mov
jl
prefetch
or
popa
pop
mov
xor
cmp
pop
stos
mov
in
cmp
fbld
jnp
shll
cli
aaa
sub
mov
jnp
lods
add
insb
mov
mov
out
mov
fcoml
inc
loope
push
in
outsl
in
fsubl
call
or
jp
divl
movsb
dec
sti
dec
and
icebp
sbb
pop
vcvtsd2si
or
add
push
enter
cmp
push
jae
dec
jmp
push
inc
stos
repnz
mov
xchg
dec
mov
loopne
dec
sbb
popa
xchg
or
das
and
addr16
stc
loope
sar
sbb
jno
xchg
mov
bound
call
into
xor
shl
jmp
xor
into
dec
out
cmc
int
test
push
mov
xor
pop
mov
mov
xor
sahf
xchg
push
or
aam
sub
fidivrl
scas
ficoms
xchg
or
movb
push
lods
addb
inc
xor
xchg
std
push
sbb
sbb
mov
jge
jns
dec
testl
adc
adc
mov
lods
rcl
fistpl
outsl
sub
not
popa
cmp
sub
adc
out
pop
jb
cmp
or
js
bound
jnp
mov
aad
sub
scas
cmp
loop
inc
shrb
pop
dec
cmp
or
js
iret
gs
or
jg
insb
mov
repnz
adc
lods
xor
pop
ret
js
ret
xor
jb
arpl
orl
cmp
fadd
mov
pop
cmp
cmp
push
sub
mov
mov
lods
and
xor
lcall
sub
aas
jg
rorb
lock
pop
loop
idivl
jns
mov
or
sbb
cmp
jnp
jge
push
in
iret
add
leave
xchg
push
bound
sub
add
dec
push
and
add
test
icebp
mov
jb
pop
sti
jp
sti
iret
add
sub
xchg
push
pop
sub
push
scas
gs
lea
les
mov
push
mov
fimull
mov
xchg
add
nop
movsl
xchg
aad
cmp
xor
inc
dec
gs
mov
lret
mov
push
fadds
or
dec
ret
cmp
xlat
xlat
ret
mov
mov
push
adc
xchg
add
or
pushf
ds
jge
and
xchg
frstor
idivl
mov
into
and
xchg
cmp
sbb
pop
shll
adc
xchg
lcall
int
sbb
pop
mov
pop
xor
fbstp
dec
std
sub
push
nop
mov
pop
and
jl
xchg
add
aad
ja
call
dec
jns
fidivrl
stc
mov
into
test
cmp
push
mov
pop
mov
dec
scas
push
jl
lea
push
lds
push
pusha
iret
cmc
out
jns
in
outsb
jmp
push
pop
dec
subb
pop
addr16
std
xor
push
cld
ficomps
xchg
jbe
lock
int
outsl
int
adc
int
jle
fcmovb
outsl
cmp
cmpsl
sbb
ss
sub
push
in
aaa
cmpsb
dec
iret
or
mov
ret
cmp
and
loop
sub
in
add
sti
dec
sub
mov
fs
xchg
inc
sub
test
jecxz
aad
dec
outsl
adc
push
insl
orb
or
orl
and
lcall
fsts
xchg
pop
cmpsb
jns
add
movsl
nop
sbb
lods
cmp
sub
lock
jmp
xlat
inc
lret
or
dec
jb
adc
pusha
repz
cmc
xor
fwait
movsb
popf
sbb
lods
fbld
js
mov
mov
addr16
inc
or
sbb
mov
pop
xlat
pop
cmpl
sar
sub
movsb
push
mov
mov
mov
push
push
pop
das
rclb
cmpsb
mov
pop
mov
dec
stos
outsb
stc
adc
out
rorb
fs
addr16
lcall
das
pushf
ret
jecxz
inc
adc
mov
repnz
or
pusha
fisttpl
outsl
cmp
mov
ljmp
lret
jg
dec
and
mov
sub
adc
xor
push
into
xchg
outsb
loopne
jg
cmc
mov
jle
data16
orb
mov
mov
in
xlat
sbb
jno
xor
scas
adc
lock
jle
in
ret
mov
ja
idivl
repnz
sbb
popf
dec
aam
fcoms
xor
push
sbbb
shl
pop
scas
aad
inc
xchg
push
inc
stos
inc
dec
daa
into
imul
inc
addr16
aad
xchg
cmc
call
les
jmp
pop
add
mov
xor
insl
mov
pop
out
gs
xchg
adc
cmp
into
movsl
and
out
push
xor
mov
iret
or
addl
jne
imul
test
mov
and
xor
lahf
fstpl
mov
add
dec
fcmovne
adc
sub
daa
jp
in
sbb
xor
mov
or
mov
sbb
mov
xorl
push
test
orl
fisttpll
lret
mov
ret
adc
data16
stc
std
into
add
push
sub
mov
ss
repnz
add
cmpsb
cmp
icebp
add
ds
loopne
pop
mov
popf
cmc
xlat
addr16
shrb
movsl
dec
mov
mov
andl
popf
fldenv
pfcmpge
imul
inc
sbb
inc
xchg
sub
mov
mov
mov
out
popf
idivl
mov
incl
dec
test
mov
movsl
mov
push
sub
call
mov
in
and
hlt
ja
pop
shll
test
movsb
or
xlat
mov
sbb
xor
add
cmc
sbb
cmp
stos
xchg
lods
outsl
insb
jno
lea
jmp
test
inc
scas
mov
jnp
cld
je
jle
dec
dec
cmpsl
addr16
mov
or
aas
sbb
jmp
out
mov
pop
inc
pop
adc
or
mov
bound
aad
subl
push
pop
aaa
cmp
mov
sub
dec
jp
and
push
bound
jecxz
mov
addb
xchg
pop
jns
push
add
cmc
filds
mov
icebp
iret
mov
outsl
inc
int
jmp
mov
test
push
leave
insb
fs
scas
popf
aad
dec
lock
dec
fucomp
and
push
fsubs
stos
push
xchg
xchg
out
cmc
sub
inc
dec
jmp
pop
addb
jbe
leave
clc
cmp
cmpsl
inc
or
xchg
stos
xchg
pmullw
fcoms
mov
mov
cmpsl
adc
iret
xor
cmp
cmc
sub
sbb
outsl
xchg
cld
rcll
imul
movsl
aam
push
sub
cmc
std
pusha
sub
inc
mov
add
mov
and
test
xchg
movsb
jmp
sbb
pop
cmc
pop
jecxz
sbb
into
test
push
aad
xor
pop
mov
push
and
mov
outsl
mov
icebp
shl
test
in
and
or
jmp
aaa
mov
repnz
sub
cmpsl
sbb
dec
hlt
dec
sarb
cmp
and
mov
pop
push
aam
ret
enter
cmp
out
les
or
fwait
imul
and
xor
and
gs
psadbw
jge
push
jg
xor
mov
mov
rolb
and
jmp
sti
xor
adc
arpl
push
cli
gs
cmp
fs
mov
arpl
in
repz
mov
dec
sarb
xchg
mov
cmp
leave
mov
cmpsb
push
fwait
xchg
adc
adc
shll
repnz
adc
or
xchg
aaa
lods
sahf
xchg
cli
xor
xor
adc
mov
mov
jmp
mull
mov
mov
inc
sbb
cmc
ja
push
rorb
sti
test
aam
inc
cmp
lock
aas
pop
sbb
push
movd
pop
push
ja
or
pop
adc
repz
adc
xor
mulb
les
decb
lods
lret
int
mov
cwtl
movsl
testl
and
adc
or
xor
inc
mov
cli
add
push
js
adc
and
xor
cmp
xchg
cmpsl
sbb
adc
jge
jne
xchg
fmull
imul
jp
into
aad
push
enter
pusha
js
sbb
cs
stos
leave
or
repnz
sbb
std
or
pop
aas
inc
add
jle
ret
arpl
movb
push
test
dec
pusha
inc
aad
jo
cmp
mov
adc
add
lds
jns
int
push
sbb
nop
sahf
push
or
cli
cmp
jle
cmpsb
cwtl
mov
mov
hlt
in
in
shl
mov
pop
or
and
loopne
aas
psubd
lods
out
push
stc
xchg
imul
mov
jecxz
xlat
jl
push
cmp
out
int3
sub
in
shlb
cmc
ljmp
mov
and
pop
cmp
cs
sbb
sub
std
scas
sbb
sub
pop
and
and
adc
call
cmc
lea
dec
sub
inc
mov
mov
adc
arpl
mov
out
outsb
or
xchg
icebp
fisubl
cmp
push
mov
mov
xchg
mov
out
sbb
push
push
int
jp
repz
mov
les
mov
cmp
in
pop
mov
bnd
iret
or
std
orb
xchg
add
daa
and
mov
push
out
pop
rclb
jge
and
push
ljmp
inc
loope
scas
aad
outsb
into
inc
xchg
notl
or
mov
fildll
push
jo
std
push
out
inc
xor
jns
gs
xor
bound
lret
sti
rcrl
xchg
sub
cmpsl
fwait
and
sub
scas
and
pop
pop
dec
sub
ja
pop
xor
mov
shlb
sbb
adc
into
sub
test
jmp
lods
aas
xor
int
push
dec
icebp
fwait
sub
jne
repnz
adc
sub
jg
cmp
lods
nop
push
dec
fistpl
or
hlt
ret
lret
or
xor
dec
out
lret
fimuls
mov
mov
insl
xor
jg
xlat
lods
cli
or
daa
mov
je
xchg
xor
call
ja
lahf
sbb
jmp
inc
and
jecxz
dec
inc
sub
gs
pop
dec
xchg
mov
lcall
jg
mov
pop
jne
mov
push
xor
xchg
aam
sub
mov
popa
leave
ret
jg
nop
cltd
outsl
das
rcll
in
sub
mov
ss
mov
sub
xor
lea
pusha
inc
adc
push
push
into
sbb
add
xchg
cli
enter
sub
adc
test
into
das
push
xchg
adc
xor
and
lahf
iret
mov
push
pop
pusha
scas
lcall
out
xlat
jne
adc
gs
sub
leave
jmp
mov
mov
jl
fs
pop
negl
xchg
sbb
sarb
sub
jl
and
nop
testl
in
mov
shlb
mov
mov
mov
or
movsl
scas
xchg
xchg
mov
and
jecxz
jecxz
xlat
jno
jge
dec
mov
cmc
dec
test
mov
in
cld
and
fcoms
or
mov
lea
cltd
cmp
mov
stc
call
dec
pop
jnp
lock
fmul
pusha
pop
fcmovbe
mov
jecxz
test
daa
outsl
or
je
js
add
jl
jnp
inc
sbb
int3
incb
in
sti
or
jp
and
outsl
mov
mov
cwtl
subb
jecxz
add
mov
xlat
cmp
nop
enter
imul
nop
pop
add
insl
mov
sbb
push
mov
in
pusha
push
test
adc
loop
mov
popa
out
iret
push
cmc
fistps
pop
cld
push
flds
fwait
cmp
fcomip
xchg
insb
imul
pop
mov
sti
or
xchg
icebp
push
pusha
jle
or
jp
shrl
aad
xor
jge
mov
icebp
inc
nop
xor
lods
cli
hlt
orl
popa
pop
jge
and
mov
js
js
adc
mov
pop
push
in
xchg
lahf
xchg
adc
xchg
int
push
jns
cmp
std
mov
mov
or
mov
jl
aam
sub
xchg
jae
adc
aaa
dec
fmull
sub
or
dec
mov
push
mov
xchg
sub
mov
inc
xchg
sti
mull
and
fsubrl
cmp
popa
clc
in
xchg
leave
mov
sbb
movsl
rol
dec
push
daa
loopne
ljmp
jae
cmc
faddp
pop
push
cwtl
dec
call
pop
int
repz
jmp
push
fwait
and
daa
and
mov
or
xor
dec
call
xchg
addr16
cwtl
pop
mov
add
jmp
out
sub
push
popa
jge
test
lahf
fiadds
pop
and
and
mov
subb
in
add
mov
jns
xchg
and
push
lods
out
shl
cmpsb
push
dec
mov
lods
test
test
xchg
cmpsb
insl
fisttps
jle
jge
popa
in
mov
mov
scas
sbb
jo
fsubr
xchg
add
add
aad
pop
jl
jmp
mov
std
add
mov
jle
jp
jo
movsb
jge
outsl
movsl
js
jnp
into
pmulhuw
das
cltd
adc
push
push
pushf
jo
cld
rclb
and
mov
sub
jg
sti
jmp
xor
mov
shll
dec
jb
scas
and
push
shrb
nop
sub
shl
mov
inc
mov
xchg
jl
push
stos
lods
outsb
add
mov
adc
out
fsts
adc
in
shl
pop
rol
aad
adc
mov
dec
mov
dec
pop
std
xchg
out
jb
scas
xchg
and
popf
rol
fsubl
idivl
jmp
dec
pop
sub
xchg
jbe
jmp
push
inc
in
or
mov
pusha
pop
test
xchg
mov
cwtl
je
iret
jg
out
jns
bound
xor
iret
mov
in
dec
sbb
rorl
mov
pop
cmpl
xchg
push
loopne
addl
shll
scas
popa
pop
sti
xchg
mov
mov
jp
fists
sub
cmc
mov
in
cld
xchg
mov
jge
ljmp
fsubrl
push
decl
xor
mov
adc
sbb
push
iret
aam
mov
push
inc
pusha
push
out
add
cmp
pushf
push
test
mov
shll
sbb
dec
xor
jbe
call
and
jbe
jl
adc
lods
xlat
mov
xchg
lds
push
cmp
cmp
xor
xchg
call
bound
sar
mov
mov
fidivrl
pop
lret
cs
into
mov
ss
test
outsb
loope
mov
lods
pop
lods
icebp
lock
mov
xor
cmp
jb
enter
stc
icebp
xchg
sub
in
and
into
adc
pop
or
push
loop
push
mov
xor
icebp
adc
push
ret
adc
jge
leave
mov
mov
out
adc
stos
hlt
jmp
xchg
sub
movsb
add
in
adc
sbb
mov
divl
leave
and
or
add
sti
bound
sbb
fidivs
mov
pop
dec
xchg
ljmpw
in
cmp
lock
aad
aas
adc
pop
in
mov
notl
aad
sub
outsb
setae
inc
xchg
mov
fs
les
popa
cmp
aad
sbb
add
sub
fcomps
outsl
pop
clc
jl
mov
mov
aam
scas
xchg
fwait
lret
loope
push
lds
mov
adc
sbb
mov
repz
mov
pop
push
out
mov
or
clc
call
xchg
push
fldt
fisubs
fs
gs
jb
push
cmc
sbb
mov
fidivs
adc
hlt
adc
sbb
and
or
ds
sti
cmp
push
cmp
and
or
inc
push
cmp
test
push
mov
enter
test
inc
push
aad
out
test
popa
xchg
xchg
jbe
inc
mov
sti
mov
mov
or
dec
mov
roll
pop
in
jmp
fisubl
pop
jb
dec
jle
cmpsl
psadbw
jmp
pusha
addl
sub
dec
add
js
fstps
push
aad
std
pop
xor
mov
and
mov
mov
imul
or
aad
mov
xchg
pop
adc
scas
adc
ds
push
mov
mov
cmc
adc
dec
lea
orl
arpl
sti
lcall
int
das
push
mov
divb
and
repnz
testb
dec
inc
aam
cmp
imul
movsb
int3
insb
push
aad
cmc
or
xchg
inc
lea
push
sbbl
cmc
mov
xchg
pop
fildll
cmpsb
out
es
into
pop
pop
xchg
sbb
jnp
push
xlat
pushf
xor
mov
sahf
ds
cmp
push
and
pop
push
mov
mov
cmp
nop
decl
js
push
adc
mov
adc
or
int
and
mov
and
mov
push
push
arpl
loope
sbb
jb
ret
decl
jnp
imul
lea
jno,pt
fwait
jb
mov
in
add
xchg
fidivrs
or
movsb
mov
xchg
stos
mov
or
sbb
sub
in
outsl
in
xor
ljmp
fldl2e
fwait
xorb
inc
testl
sar
cs
loop
sub
rolb
das
icebp
test
es
xchg
jnp
push
inc
pop
pop
jp
popf
loopne
into
in
sub
or
pop
dec
pop
mov
cmp
outsl
imul
cmc
jg
jno
jp
sbb
adc
lds
fildll
test
mov
add
arpl
outsl
sets
cmp
mov
movsl
jae
loopne
add
xor
jg
insb
mov
sbb
sahf
jge
popf
inc
xor
cmp
adc
fs
mov
maskmovq
in
xchg
rolb
jb
int
stos
jb
decl
pop
mov
test
call
testb
shrb
adc
mov
popf
clc
mov
inc
int
psadbw
add
fstps
iret
jno
mov
push
xchg
iret
cmc
mov
and
pop
dec
ficoms
lods
loope
push
jmp
outsb
aad
cmp
add
inc
or
push
mov
loopne
lcall
enter
mov
jl
arpl
loopne
cs
xlat
pop
mov
flds
test
mov
lret
stc
inc
out
dec
xchg
aad
jg
inc
mov
dec
in
and
repz
in
xor
and
or
jns
test
shr
sub
ds
sbb
mov
repnz
bnd
jp
mov
sub
lret
push
dec
mov
or
xlat
jl
adc
call
bound
mov
xor
loope
pop
cld
aas
fsubrs
jnp
add
cltd
cmp
adc
jle
sbb
mov
pushf
jl
and
repz
or
xor
jge
fisttps
bound
dec
ja
inc
hlt
xchg
mov
das
mov
jl
daa
push
inc
adc
sarb
cmpsl
cmp
jns
pop
imul
push
into
cmc
or
scas
push
push
sarb
inc
mov
xchg
in
rdmsr
inc
scas
xlat
in
std
lds
and
std
ret
lods
repnz
testb
sbb
inc
mov
and
push
leave
pusha
pop
lret
xlat
push
std
popa
out
std
cmc
stos
test
xchg
loop
push
pop
push
mov
pushf
inc
testb
hlt
arpl
sub
call
lahf
orl
dec
in
inc
push
loopne
scas
adc
in
cmpsl
aad
mov
addr16
stos
adc
cmp
arpl
xchg
scas
sub
xchg
mov
jb
aam
mov
or
xchg
ja
fidivrl
dec
inc
push
inc
adcb
xor
aad
loop
dec
xorb
xchg
mov
aad
aam
je
and
fisttps
push
lods
mov
push
dec
hlt
dec
xor
mov
add
dec
fs
or
jnp
call
inc
call
cmp
aad
xchg
addr16
lds
lods
fidivs
pop
data16
mov
insl
adcl
mov
sbb
or
lret
xor
dec
sbb
xchg
mov
push
sbb
sbb
sub
popf
fwait
and
shrb
add
mov
cltd
pop
or
xchg
dec
lods
add
sbb
scas
addr16
ret
sbb
lods
mov
sarl
jle
mov
cmpsl
pop
test
push
jns
inc
aad
inc
jge
in
pop
idivl
sbb
push
push
inc
push
sarl
mov
jb
pop
cli
dec
mov
leave
aad
addr16
sub
fldln2
ss
stos
dec
mov
aam
imul
and
cmp
in
add
lods
scas
enter
negl
mov
stc
sbb
fiaddl
and
mov
jmp
sarl
aad
std
dec
xor
cmp
pop
adc
cmp
repnz
shll
ret
std
repnz
fsubrp
pusha
sub
or
mov
xor
dec
sti
cmp
xchg
les
mov
sbb
test
adc
jbe
dec
sbb
in
sbb
push
orl
scas
lea
lods
mov
xor
mov
or
bswap
sub
xor
pop
inc
sub
add
pushf
jo
aad
push
dec
xor
cmp
cs
scas
cmp
movsb
fucomp
mov
repnz
les
push
ficoml
jecxz
or
pop
xor
ret
sub
lea
ret
imul
das
xchg
leave
cmp
fstpt
orb
cltd
loopne
jmp
sbb
cmpsl
aad
cmp
popa
mov
sbb
cmp
int
out
addr16
inc
ficoml
iret
jg
jp
and
mov
mov
xchg
rclb
scas
add
adcl
pop
adc
sub
icebp
les
lds
out
xor
lret
out
xor
jmp
pusha
pop
dec
sub
cmc
jge
aas
adc
test
sub
loope
push
dec
js
cwtl
popf
or
jmp
cmp
divb
je
cmpsb
jl
aad
mov
sbb
imul
jmp
lds
arpl
in
insl
pop
iret
lods
inc
lds
mov
out
jg
cmp
jmp
and
mov
mov
mov
push
loopne
cmp
push
mov
ljmp
cmp
and
std
loop
sub
cmp
fs
cld
dec
dec
xchg
push
sbbb
and
adc
addr16
js
mov
mov
loopne
cmpsl
inc
dec
into
outsl
xchg
je
xchg
insb
jbe
dec
sub
xchg
scas
fildll
test
dec
mull
imul
cwtl
or
cs
pop
out
lock
sti
popa
sbb
in
or
adcb
cmp
hlt
mov
js
push
adc
int
inc
cmpsb
std
fstpl
mov
jp
mov
call
or
out
insb
cld
rcll
mov
cmp
movsb
cmp
pusha
inc
stc
pop
jmp
cmp
xchg
int
pusha
mov
adc
xlat
add
xlat
cs
test
iret
test
or
xlat
aad
mov
sub
into
stc
sub
loop
cli
mov
fdivrs
lods
popa
jmp
mulb
mov
or
lret
shll
adc
rorl
jp
sti
fst
out
cmc
adc
outsl
int3
lcall
jl
xor
adc
pop
add
rcr
jge
mov
psubsw
leave
mov
loope
jge
loop
pop
pop
sti
pop
push
push
das
mov
call
aad
dec
xor
dec
cli
mov
test
mov
sub
and
adc
jl
fidivl
push
pop
xor
daa
xlat
pop
xchg
mov
mov
int
adc
sbb
pop
sti
cs
bound
inc
push
xchg
test
pop
mov
dec
inc
cmpsl
aam
mov
out
push
ljmp
cmc
push
cmpsb
inc
mov
rorl
insb
lahf
and
into
popa
sbb
mov
bound
mov
fistpll
lock
jnp
mov
imul
call
or
and
sbb
jb
ljmp
mov
movsb
setne
dec
sub
decl
adc
popa
out
movsb
ds
decl
hlt
stos
dec
mov
iret
push
test
sub
push
inc
mov
test
aas
les
out
outsl
popf
jmp
fwait
mov
mov
mov
lahf
cs
cmpsb
dec
mov
push
inc
dec
add
int
xor
mov
imul
fisttpl
pusha
sbb
popf
divl
push
and
sub
and
fcmovne
xchg
sbb
mov
fisubrs
mov
or
mov
add
lods
test
mov
repz
cmp
xor
push
cmc
dec
pop
sub
shrl
jb
sub
mov
test
xchg
and
sti
cmc
sahf
punpckhbw
lods
scas
push
cmp
cmc
int3
dec
dec
dec
push
mov
lods
cwtl
xchg
pushf
sub
mov
push
lock
ljmp
lods
lock
jle
cmp
call
fs
sub
fisubrs
sbb
fs
mov
lcall
sub
xchg
jp
jecxz
adc
shlb
outsl
pop
loope
pushf
mov
push
xor
xor
aam
adc
daa
pop
inc
or
ss
pop
and
sbb
adc
popa
jns
nop
push
scas
cli
aad
and
pop
push
pop
mov
int3
fs
mov
lods
lock
fists
fsubr
jae
cmc
jb
inc
pusha
scas
jmp
adc
xor
mov
xchg
out
insl
or
adc
gs
mov
std
sbb
pop
ds
nop
jge
mov
add
or
adc
xor
subb
jle
and
inc
sti
sti
sub
mov
pop
lahf
or
jg
movsl
add
xchg
dec
jbe
movsl
push
loopne
cli
mov
lea
pop
aad
pop
or
emms
and
cli
jns
aam
mov
das
shll
cld
cmp
popa
divl
test
sub
idivl
jb
in
aad
push
sub
or
xchg
mov
cmc
mov
mov
add
mov
out
aad
rcll
shlb
inc
xor
cmp
popa
inc
mov
bound
lods
stos
fbld
jp
jnp
adc
in
xchg
dec
mov
mov
rclb
inc
aam
push
xchg
xor
shll
stc
fwait
inc
js
or
ror
adc
push
xchg
dec
jge
adc
popa
mov
sbb
div
sti
pop
cmpsb
sbb
mov
shlb
inc
cmpsl
mov
dec
jne
mov
xchg
jb
add
fisttpl
gs
scas
mov
push
push
pushf
or
cmp
mov
std
sbb
xor
decb
ja
dec
push
jns
mov
scas
aad
cs
andb
push
into
mov
aad
imul
pushf
cmpsb
cmp
lea
jbe
mov
cmp
sub
out
jae
addr16
scas
ret
add
repnz
cmp
mov
dec
sub
mov
dec
out
clc
mov
xor
cmc
cmpsb
cmp
mov
dec
cli
loope
cmpsb
divl
into
inc
cmp
and
sub
xchg
ret
es
xchg
xchg
sbb
or
xor
pop
std
pop
fdiv
pop
jmp
sbb
push
or
pushf
dec
xor
cmc
aam
inc
dec
pop
cmp
in
dec
fldcw
repz
mov
dec
call
mov
or
jbe
jge
adc
and
int
xchg
fs
or
or
shrb
imul
rorb
lret
cmp
js
cmp
in
mov
enter
jg
add
xorb
leave
aad
mov
dec
mov
movsb
out
cmpsl
pusha
xchg
inc
jne
fwait
lahf
dec
mov
mov
aad
jp
pop
loope
out
je
into
mov
in
mov
lcall
sahf
dec
mov
push
dec
movsl
pop
test
test
scas
iret
sti
or
cs
sbb
xlat
jne
dec
xchg
mov
int
add
push
hlt
pop
add
adc
outsl
ljmp
xor
stos
mov
repz
inc
inc
mov
in
sbb
push
ljmp
fwait
out
mov
pop
mov
jle
test
jmp
and
mov
mov
jo
imulb
out
scas
sbb
mov
mov
mov
lret
cmp
pusha
mov
loop
imul
jmp
ljmp
add
cltd
jle
inc
mov
cmp
aam
or
shlb
push
ljmp
icebp
push
mov
xbegin
jg
ret
add
ds
ret
inc
out
repz
cltd
and
sbb
push
gs
loop
int
jmp
stc
xchg
lcall
rolb
lds
popf
lds
shr
test
sub
sub
add
addr16
dec
sbb
push
push
int
push
loop
scas
cmc
push
mov
inc
inc
sub
xchg
sbb
sbb
lods
movsl
xchg
scas
shll
sahf
fsubs
loope
xchg
mov
mov
iret
out
sub
adc
test
stos
cmc
sub
pop
shll
xor
ret
lock
shlb
xor
nop
xchg
adc
cmp
shrl
cmp
hlt
mov
int
xchg
mov
mov
or
inc
aad
sub
xchg
sub
adc
popa
stos
dec
in
or
les
jno
dec
sbbb
cld
and
and
test
sbbl
pusha
or
and
mov
std
jecxz
fbstp
xchg
ds
ret
push
xor
jecxz
testl
cmc
inc
xchg
stc
push
jno
aas
outsb
push
fwait
scas
sbb
mov
jg
cmp
cmc
out
or
dec
add
mov
je
cmp
addr16
mov
stc
mov
pop
ljmp
xchg
mov
cmc
mov
cltd
dec
or
jge
fistps
cmpsb
inc
mov
pop
inc
test
and
mov
cld
jmp
out
iret
xchg
dec
add
adc
mov
mov
imul
adc
xchg
xchg
inc
dec
inc
in
scas
outsb
adc
flds
pop
sti
ljmp
test
inc
hlt
push
imul
xor
dec
adc
add
mov
mov
xchg
inc
jbe
cltd
fiadds
or
jns
popa
xchg
cmc
mov
in
popa
jge
or
aad
jns
int
sahf
fxch
dec
jmp
rcrl
mov
mov
in
fistpl
jle
bound
filds
aad
pop
xchg
add
sti
xcrypt-cbc
cmpsl
xchg
les
sub
sbb
enter
xchg
out
mov
pop
cmp
xor
jne
ds
mov
xchg
jecxz
xchg
hlt
jae
mov
and
mov
mov
jbe
mov
mov
sub
mov
testl
sub
out
out
or
into
lods
jp
mov
sub
lock
mov
dec
push
cmp
call
lahf
adc
outsl
sub
xlat
cli
lods
jg
cltd
call
lods
jae
xchg
dec
je
pop
iret
idivl
mov
cwtl
xor
cmp
fsubrp
jp
or
jmp
sti
mov
cld
in
sub
out
pop
jmp
mov
jmp
out
fcmovnu
int
sbb
cli
fiadds
ljmp
cmc
push
outsb
sbb
btsl
iret
fldt
bswap
in
mov
int
lock
pop
test
pop
outsl
scas
pop
pushf
int
in
enter
mov
mov
pop
mov
xchg
mov
ds
cmc
and
mov
xor
jbe
leave
lds
clc
jmp
mov
int
lahf
adc
dec
jle
loope
lods
add
jl
and
ja
in
int
mov
daa
ljmp
adc
inc
mov
ja
arpl
sbb
xchg
push
cmpl
lea
cwtl
dec
push
unpckhps
cmp
andl
pop
out
pop
push
mov
sub
or
cmpl
xchg
dec
and
dec
xchg
sbb
lahf
jo
ds
mov
rcl
and
in
outsl
fimuls
pop
sub
add
push
xchg
iret
ljmp
aaa
mov
js
out
outsl
and
lods
scas
stc
mov
in
and
ljmp
clc
dec
fstl
les
jns
mov
call
sub
cld
dec
mov
dec
adc
aad
push
cmp
jle
add
inc
pop
mov
jl
lahf
mov
push
into
xadd
mov
in
pop
and
test
or
add
loop
xchg
pop
adc
and
mov
popa
pop
cmp
loopne
loop
out
dec
stos
sahf
lods
sub
jne
adc
insb
arpl
xchg
sahf
fstpt
in
popf
cmp
into
add
out
hlt
aad
pushf
sub
or
push
mov
in
lock
int
mov
push
xchg
movsbl
mov
outsl
jns
out
les
cmp
cmp
adc
repnz
and
roll
movsb
lcall
jns
and
sbb
je
inc
adc
rorb
testl
push
push
cmp
clc
add
hlt
cmp
and
es
adc
mov
inc
cmp
pop
decb
stos
cmpsb
xchg
inc
sub
cltd
xchg
sub
adc
cmp
mov
adc
jecxz
imul
js
cmp
mov
aad
out
push
cmp
xor
cmp
sbb
xchg
fnstcw
lock
lods
jl
push
loop
addr16
enter
popf
pushf
cli
imul
mov
push
lea
movsb
loopne
aad
out
push
cmpl
adc
and
popf
xchg
not
push
pop
enter
shlb
jo
cmp
xor
in
add
frstor
or
xchg
jbe
mov
lcall
dec
or
outsb
mov
or
adcl
bound
sub
pop
pusha
mov
mov
int
adc
xchg
and
jo
sti
cmc
or
mov
mov
jmp
or
mov
iret
loopne
mov
cmpl
sub
jmp
jae
inc
inc
iret
shrl
add
cmp
mov
andb
add
xchg
jge
syscall
xchg
cmpsl
stc
clc
inc
push
bound
mov
push
addl
mov
lds
test
add
inc
push
xchg
or
dec
js,pt
fldt
in
or
inc
iret
sbb
and
inc
lahf
data16
adc
not
je
xor
lret
cmpsb
sbb
out
cmc
jl
inc
cmp
ljmp
cld
lods
jmp
inc
or
lgs
leave
pop
loope
sub
dec
sets
cld
inc
insb
mov
cmp
cmc
sub
mov
aad
or
sbb
sbb
mov
push
xchg
mov
fcoms
pop
ja
jo
cld
mov
aad
mov
sub
jge
mov
mov
sub
sub
xchg
mov
filds
pop
and
addr16
xor
jo
jae
rcll
mov
cmp
pop
cld
lret
in
or
out
sub
pop
std
add
ja
push
addr16
mov
push
pusha
iret
or
jecxz
lcall
mov
mov
andb
cmp
jl
out
scas
outsl
cltd
and
cmpsl
or
jmp
lea
mov
push
push
fwait
mov
jl
aam
lods
push
sub
and
and
dec
lcall
movl
add
mov
sti
push
xchg
and
push
scas
jmp
sub
sub
pop
cs
sbb
aad
in
cmp
cli
sub
or
fwait
jl
push
dec
ja
mov
sub
comiss
cmp
shlb
sub
popa
jnp
loopew
int
xchg
mov
nop
mov
pop
inc
js
gs
in
divl
xchg
and
jns
dec
mov
into
sbb
sub
sarl
cli
cmpsl
test
clc
lods
xchg
xchg
xchg
dec
sub
inc
shrl
xor
mov
movsb
rcrb
cmp
adc
pop
xchg
xor
sbb
aad
xlat
gs
sbb
pop
ljmp
iret
ljmp
nop
xchg
inc
and
cmp
add
sub
cmpsb
fiadds
xchg
push
into
sub
in
push
or
aad
dec
loopne
sub
adc
test
in
fcompl
xchg
push
test
and
lret
call
cmp
xchg
adc
jno
jnp
sbb
ficomps
or
ja
int
jg
outsb
xchg
lcall
fisubl
fisttps
insb
mov
je
mov
addb
push
xor
inc
into
push
movsl
outsl
out
cmc
gs
mov
stos
adc
hlt
or
xchg
adc
mov
cmp
aad
cmc
das
fbstp
pop
mov
inc
test
cmp
into
xor
xlat
sbb
jmp
imul
and
push
shll
push
cmp
into
cli
push
shlb
mov
into
lods
or
enter
jne
aam
mov
sbb
dec
es
cli
movsl
push
add
lods
adc
outsl
js
xchg
adc
mov
sub
lock
cmpb
ror
mov
push
repnz
add
fwait
or
fisttpl
mov
sahf
xchg
or
in
mov
jle
jmp
push
cmp
adc
and
mov
sti
fsubs
bound
jae
repz
jo
mov
loopne
out
call
rclb
xchg
test
xchg
push
leave
fists
pop
imul
mov
dec
push
repz
xchg
add
lcall
jne
and
dec
jl
mov
aad
add
pop
hlt
jb
pop
int
jmp
push
and
adc
mov
jbe
sahf
std
cmpl
insl
testl
fisubs
mov
cwtl
mov
cltd
hlt
pop
das
outsb
movsb
leave
popl
jnp
dec
xor
insl
scas
sub
inc
iret
sbb
push
fwait
mov
inc
xchg
sbb
fwait
adc
xchg
jmp
cmp
js
cmc
mov
test
adc
xor
add
inc
jns
and
inc
xchg
dec
xchg
mov
adc
push
jg
cs
cld
and
push
add
lcall
add
ljmp
dec
cmp
popf
loop
mov
std
add
int
push
add
sbb
jg
adc
adc
jge
ret
jno
sub
pop
mov
and
dec
cmp
mov
mov
push
inc
pop
aam
les
scas
rcl
lea
inc
sub
fdivrs
sbb
dec
jp
mov
mov
push
in
aas
jmp
repz
xlat
testl
stos
push
out
cmc
or
aad
add
dec
jmp
fisubrs
dec
call
add
push
and
pop
push
popa
xor
dec
lods
scas
lock
xlat
sub
mov
push
nop
adc
inc
jno
or
cmp
fsubr
cmc
mov
sahf
cmp
mov
fsubr
ds
fiaddl
shll
mov
test
push
jb
xor
mov
jne
pop
sbbl
mov
inc
dec
xor
movsb
js
stos
hlt
imul
fistps
mov
imul
mov
mov
loopne
scas
sbb
cmp
mov
mov
sbb
add
inc
xchg
mov
mov
cld
popf
shll
mov
addl
testl
in
xchg
mov
rorl
ffreep
lods
and
iret
fs
mov
pushf
into
sbb
push
jge
fsts
dec
movsb
pop
push
cmpsb
mov
imul
cmp
insl
shll
jno
imull
insl
into
cltd
fldenv
dec
lods
pop
arpl
mov
add
daa
cmc
stos
or
mov
aad
push
sub
je
fcmovbe
mov
sub
mov
fldt
xor
adc
mov
js
cmp
aam
mov
divl
arpl
push
xchg
xor
gs
xor
dec
or
inc
repz
pop
fistps
call
leave
dec
inc
pop
push
and
int
lret
xchg
lahf
ret
nop
imul
out
inc
js
or
dec
aad
and
jb
shlb
aam
cmpsl
int
xchg
outsl
js
or
sbb
pop
sahf
push
outsb
inc
in
dec
adc
cmp
movsb
and
hlt
sub
lods
pop
ret
mov
fistps
pop
in
lahf
lds
inc
cmp
cmp
mov
fcmovu
iret
mov
pop
jge
sti
cmp
test
in
imul
adc
pop
js
jg
js
inc
dec
sub
xor
rolb
idivl
xchg
sbb
rcll
lods
mov
shr
insl
ljmp
arpl
cwtl
pop
orl
cmp
leave
mov
ljmp
aaa
inc
pusha
inc
xchg
into
cmp
dec
nop
aas
loop
sub
xor
inc
addr16
mov
push
data16
in
lea
sub
movsl
xchg
lds
dec
stos
fs
or
push
sbb
sub
aad
in
push
insb
add
je
cli
pop
jl
rorl
aad
daa
sarb
pop
mov
sbb
xchg
rcrl
cli
jg
mov
fisubrs
sbb
ret
xor
push
les
add
push
cmc
sbb
xor
in
jl
jg
push
aad
lcall
call
xlat
je
dec
enter
hlt
adc
and
test
push
mov
mov
fldl
xlat
loopne
outsl
sbb
dec
jmp
cmc
outsb
dec
mov
movl
insl
jmp
int
into
imul
mov
call
mov
push
cmc
cld
adc
adc
sti
push
xchg
mov
cmp
pop
jmp
repnz
add
out
jae
dec
js
mov
cmp
jg
ret
out
jmp
and
lock
out
mov
stos
xchg
pop
push
test
outsl
gs
mov
mov
out
scas
cmc
flds
cmp
ficomps
fwait
out
add
inc
add
xor
cmp
push
push
ljmp
and
aaa
lods
fwait
mov
add
aaa
into
fidivrs
and
pop
or
into
fucom
shl
push
std
push
lods
mov
aad
mov
sbb
shrb
xor
push
sti
and
adc
es
inc
jp
push
mov
movsw
sti
faddp
mov
adc
inc
out
xlat
movsb
test
xchg
shlb
inc
or
dec
lret
push
xchg
shlb
jb
cmp
push
cmp
pop
push
adc
mov
cmp
call
pusha
pop
dec
push
xchg
pop
les
dec
xchg
mov
mov
push
cmp
pushf
xor
jb
sbb
pop
repnz
insb
sbb
jbe
mov
xchg
into
loopne
jl
test
stc
call
pop
int
dec
add
mov
sub
lods
add
imul
mov
push
pop
outsl
mov
mov
mov
movsl
adc
orb
jp
popf
or
and
mov
addr16
movsb
sti
xor
div
fs
std
loopne
test
jge
push
out
xchg
sti
les
dec
loope
cmp
cmp
sbb
imul
sub
and
or
movsb
das
js
cmp
cmc
repz
js
fcmovne
aad
scas
cmp
ljmp
repnz
or
rol
scas
fucomp
aad
scas
call
iret
or
pop
in
test
adc
rol
xorb
adc
addl
cmp
jg
sti
jne
mov
lahf
popa
lock
mov
jge
adc
jg
add
dec
adc
mull
cld
cltd
mov
outsb
dec
stc
popa
lods
xchg
jl
les
push
lods
mov
call
sbb
lret
xchg
dec
cmc
cmp
es
mov
dec
xor
gs
sub
fists
and
push
inc
out
into
in
xchg
es
aad
shlb
loop
adcl
mov
push
fstpt
jge
and
dec
int3
and
jns
js
out
bswap
scas
imul
cmc
int
stos
test
push
jge
out
lds
pop
lods
testb
fbstp
mov
xor
xchg
and
xchg
mov
push
sarl
xor
lea
cmp
add
cmc
mov
sub
or
or
psubq
mov
call
cwtl
shlb
sbb
stos
inc
jmp
xchg
inc
add
mov
pop
sbb
sbb
fwait
adc
in
repz
leave
pop
pop
push
sbb
imul
rorl
xor
sbb
call
idivl
fucomip
sub
int
push
pop
iret
cmc
jmp
jnp
js
mov
scas
and
pop
lcall
inc
in
loope
out
and
dec
xchg
mov
or
pushf
xchg
out
xchg
xor
dec
pusha
pop
inc
arpl
or
push
inc
xor
cmp
xchg
inc
mov
mov
adc
sub
fdivr
adc
cmp
push
ljmp
xchg
and
sub
fldl
dec
dec
xor
push
cmc
dec
ret
jo
mov
xor
adcb
or
add
sub
loope
stos
jge
imul
cld
shrl
adc
mov
frstor
lods
dec
add
xor
ljmp
fmull
pop
jns
jl
adc
mov
jno
cmp
push
in
test
enter
aam
mov
push
fsubs
repnz
xchg
adc
push
dec
stos
stos
and
rorl
inc
dec
dec
jno
push
or
sbb
les
scas
int
aaa
into
jno
into
push
inc
loope
rolb
xchg
inc
lea
aad
or
lods
add
jnp
stos
fidivl
or
lret
les
ficomps
shlb
push
fstps
jne
mov
movsb
add
pop
sbb
popa
mov
stos
or
notb
sub
loope
mov
out
mov
fwait
jmp
lods
xchg
cld
sahf
out
test
lock
std
cmp
repz
push
in
or
pop
inc
inc
imul
repz
cmc
sbb
shl
loope
sbb
sub
test
dec
aam
and
stos
popa
dec
jl
mov
lret
leave
mov
push
mov
arpl
imul
jl
stos
aaa
lahf
adc
rcll
and
lret
and
insl
jg
add
lahf
int3
ds
std
fcmovu
add
arpl
pushf
daa
inc
inc
or
stc
jp
mov
add
jge
sub
jp
lcall
push
pop
jb
in
or
sub
and
enter
sub
clc
cmp
repnz
insb
sub
or
stc
fstps
add
cmp
pop
jl
arpl
xchg
sub
and
mov
dec
mov
push
adcl
daa
sub
add
fdivrl
xchg
sub
mul
out
jle
fimuls
xchg
movsb
push
xchg
aad
sbb
into
mov
in
jo
aam
iret
dec
sub
loope
mov
test
lea
dec
adc
inc
jecxz
aad
pop
push
jge
cmc
dec
fwait
adc
jmp
dec
std
push
nop
lods
add
test
push
jne
int
xchg
push
fdivrp
xor
xor
movsl
lock
shl
mov
cs
inc
mov
daa
dec
or
cmp
fistpll
xchg
dec
mov
adc
aaa
aad
push
ljmp
loope
aad
das
iret
sahf
dec
mov
stos
out
push
and
jne
xchg
stc
cwtl
add
pusha
sbb
mov
cmp
outsb
cmp
push
sbb
aad
mov
into
hlt
into
out
lea
jnp
and
or
aad
adc
cmp
hlt
lock
loopne
and
les
inc
adc
or
lods
cmc
test
cmpsl
mov
inc
loope
sbb
jb,pt
loop
pop
aad
mov
outsl
sub
lret
outsb
aas
sbb
sti
out
ret
scas
lret
decb
mov
xchg
aad
mov
div
xchg
in
jbe
decl
inc
mull
test
jb
push
xchg
cld
cltd
mov
shl
inc
rcll
xchg
and
jecxz
fidivrs
pop
xchg
mov
mov
rcll
loope
jb
mov
push
in
add
in
dec
mov
add
and
pop
fisttpll
push
xchg
into
push
fldt
testb
jns
sub
not
add
sub
test
stos
xor
shlb
and
cltd
fs
push
movsb
das
in
dec
xchg
xor
mov
iret
scas
test
xlat
outsb
sub
jmp
stos
fldt
inc
bound
int
mov
lahf
insb
aad
cmpsl
inc
fwait
pushf
and
jns
daa
pop
dec
scas
ss
cmpsb
outsl
xchg
repnz
mov
mov
xchg
push
in
lods
std
ja
jb
sti
xchg
mov
sub
jl
jmp
push
sub
jo
xchg
xor
inc
adc
iret
add
lods
or
mov
dec
xchg
test
adc
push
add
adc
pop
jl
shlb
imull
mov
loope
dec
ljmp
push
sub
insl
cmp
jge
mov
xchg
imul
loopne
adc
jno
lods
push
adc
jno
mov
push
inc
lea
je
mov
or
mov
imul
aam
or
cmc
shll
scas
sbb
jmp
cmc
mov
shll
decb
push
adc
inc
insb
subb
inc
or
pop
sub
inc
lcall
dec
add
stc
lea
loope
mov
setne
jmp
xchg
cli
add
pusha
jae
mov
gs
mov
add
test
test
jmp
add
jp
sahf
cmpsl
push
add
dec
imul
sbb
loop
sub
out
popa
adc
int
loope
idivb
imul
in
mov
imul
and
sub
xchg
mov
pop
add
arpl
dec
cmc
aad
mov
sub
push
mov
or
mov
leave
insl
inc
sbb
repz
addr16
int3
es
and
sti
add
push
push
cmpsb
or
test
xchg
push
in
iret
mov
lcall
pop
mov
sub
out
fisttps
xchg
imul
add
mov
mov
rol
icebp
add
cmp
popf
enter
rorl
iret
neg
ds
dec
mov
pop
fldl
xchg
jl
and
clc
lret
mov
or
xor
xlat
mov
jle
push
rclb
jmp
dec
cmp
insl
rcll
pop
fdivrs
push
nop
sbb
orl
scas
in
xchg
loop
xor
movsl
or
push
push
mov
and
cmp
pop
shlb
std
dec
cld
cmp
mov
movsl
inc
sub
push
push
lods
lock
jecxz
dec
in
imul
pop
xor
fwait
inc
sbb
enter
mov
push
stos
push
pop
cli
sub
icebp
sub
faddp
mov
lods
imull
xor
ret
out
push
add
pusha
scas
iret
push
incl
cmc
decl
mov
sub
popa
jge
xchg
pop
ds
xchg
inc
stos
in
jo
frstor
test
arpl
sbb
scas
or
sub
push
add
bound
lods
rcrl
sbb
xor
jg
stos
push
xchg
lahf
aad
fimull
ds
inc
lret
xchg
adc
psrlq
or
mov
cmc
fs
aad
movsb
jl
and
test
mov
lahf
dec
scas
scas
adc
mov
pop
and
aam
mov
pop
or
jl
rcl
cmp
insl
mov
popf
sbb
sub
and
out
pop
push
sub
enter
cmp
ljmp
mov
fisttpl
add
shll
fnstsw
and
cmp
loope
repz
xchg
int3
movsb
cmp
sbb
sub
mov
inc
in
jb
test
mov
cmp
sub
mov
insb
lods
mov
jp
loop
mov
into
test
repz
pop
cwtl
jae
jo
pop
aad
rclb
test
cmp
jg
pop
mov
cld
cmc
dec
dec
sbb
jp
mov
inc
cwtl
hlt
xor
in
xchg
adc
jg
mov
mov
adc
sbb
cli
jmp
andb
xchg
sbb
adc
push
sti
jbe
test
enter
pop
cwtl
sarl
movsb
int3
fcomi
push
xchg
popa
inc
leave
lret
les
test
sub
mov
or
sbb
jne
pop
xlat
jae
daa
dec
in
or
sarb
inc
jge
cld
and
pop
jg
cld
aam
mov
mov
jmp
mov
push
dec
pop
add
jmp
daa
ja
test
lods
scas
xchg
in
adc
push
jge
cmp
fdivrs
push
xor
cmc
fdivs
movsb
mov
dec
sub
xchg
cmp
jmp
pusha
xchg
mov
add
jae
jecxz
dec
orb
scas
mov
fs
dec
fiaddl
movsl
lods
gs
add
mov
mov
bound
lods
xchg
pusha
movzwl
add
mov
mov
cwtl
ss
aad
sbb
xchg
test
in
inc
lock
jge
sti
pop
add
ja
push
push
inc
dec
dec
cmp
cmp
jae
mov
leave
insb
fnstcw
and
sbb
rcrb
out
call
jno
mov
fs
or
cltd
push
mov
cmp
dec
pop
arpl
sub
das
insb
int
ja,pn
cmp
pop
mov
pop
sbb
cmp
mull
jle
push
punpckldq
cmp
test
add
sarl
leave
mov
cmp
inc
push
lea
adc
jb
mov
sarl
dec
or
in
or
push
fdivl
mov
xchg
lods
test
xchg
xor
fnstcw
sub
out
push
xchg
lods
jle
or
iret
test
cwtl
mov
mov
inc
fldt
idivl
mov
pop
dec
adc
int3
add
sbb
inc
xchg
ljmp
lods
add
mov
push
inc
outsb
inc
pop
jnp
jecxz
lret
outsl
xor
mov
pusha
addr16
pslld
hlt
adc
aad
loope
add
mov
mov
insb
or
inc
orl
fdivrs
xchg
mov
std
lea
test
sbb
pop
inc
pop
xchg
jo
xchg
ret
or
mov
jmp
loopne
sub
push
hlt
or
sub
push
xchg
mov
xchg
std
mov
stos
or
in
mov
nop
dec
outsb
cmp
testl
sub
xchg
adc
into
out
or
push
enter
sbb
je
mull
cmc
hlt
out
and
mov
sbb
or
fistpl
outsl
stos
popf
mov
ret
daa
out
add
cmp
lods
pop
push
cmp
xchg
mov
xchg
or
fs
cmp
mov
popa
adc
into
es
dec
adcl
inc
jmp
orb
or
lods
int3
test
add
mov
or
lods
push
mov
sbb
fwait
mov
pop
ret
push
adc
incl
jo
mov
and
jo
jge
push
fnstsw
push
sub
sbb
and
push
sbb
int
mov
je
and
jae
rorl
out
pop
call
sahf
lods
pop
testb
das
inc
push
cmc
cmp
rcll
xchg
xchg
add
dec
shr
stos
imul
push
scas
lock
popf
lods
lods
mov
xchg
fwait
popa
jge
lods
push
scas
ret
jp
int3
ljmp
test
out
sbb
inc
jb
jp
stc
insb
push
int3
sbb
mov
dec
jmp
add
sti
xor
sbb
adc
xchg
and
imul
and
rsqrtps
cld
cmc
test
mov
in
mov
mov
ljmp
test
or
sub
adc
aad
stos
sbb
jns
in
data16
popa
call
cli
scas
xchg
jno
ljmp
or
rclb
sti
cmp
lret
rcl
out
jecxz
mov
test
fsubrp
fwait
mov
push
inc
into
add
xor
test
mov
and
cmp
inc
cmp
jnp
test
inc
imul
add
subl
mov
lret
inc
add
scas
cmp
mov
lret
pop
cmp
popa
notl
mov
xor
adc
adcl
sub
mov
sbb
fsubr
dec
lods
stos
cmpsl
jp
cmp
and
lods
push
test
notl
fsubp
stc
mov
dec
les
adc
or
sub
push
mov
cmp
shlb
jnp
or
nop
sbb
in
lods
prefetch
lds
cmc
outsb
mov
jp
mov
inc
in
mov
iret
mov
movsl
jmp
out
repz
repz
setne
ret
mov
cmpsl
adc
popf
inc
pusha
idivl
lods
les
pop
jne
loope
xchg
xor
and
fidivrl
jae
mov
dec
jmp
sbb
mov
fucom
dec
sub
aad
sub
inc
jge
push
add
jecxz
adc
lds
int
adc
push
jae
mov
fbstp
xchg
cmp
sub
dec
outsl
mov
push
push
out
mov
inc
cmp
add
repz
popf
cmp
and
xlat
cmp
add
push
stos
out
stos
push
aad
test
sahf
inc
push
outsb
repnz
data16
aad
cmp
xor
cmc
movb
int3
mov
out
aad
jge
mov
or
ror
gs
std
xor
shrb
jecxz
mov
mov
mov
outsl
jl
pusha
add
add
jl
adc
push
enter
ja,pt
in
xchg
jb
dec
xchg
imul
arpl
jmp
cmp
ss
dec
addr16
into
sahf
arpl
and
out
jmp
mov
sar
dec
fbstp
daa
popf
int
mov
arpl
stos
push
push
lods
cld
mov
jb
mov
xor
mov
mov
or
dec
or
sub
stc
adc
in
cmc
xchg
jo
ret
fldcw
stos
mov
add
test
in
repnz
in
or
icebp
in
mov
adc
mov
cmp
out
mov
push
pop
or
je
out
lcall
jns
cltd
sub
stc
mov
mov
ds
shr
sub
cmc
imul
cmp
mov
dec
scas
mov
and
rcrl
jbe
dec
int
sahf
into
std
mov
push
repz
mov
mov
cmc
add
test
mov
mov
sbb
shrb
lret
push
mov
imul
insl
jae
mov
test
ret
ret
xchg
push
ffree
dec
inc
mov
mov
arpl
clc
bswap
mov
or
scas
add
cli
mov
sub
dec
and
xchg
and
lods
sub
xlat
ret
imul
nop
iret
in
aas
test
mov
pop
mov
or
cmp
lods
mov
ud2
or
inc
fsubrs
daa
cmp
fistl
outsl
and
jg
pop
jne
cwtl
jns
cmp
or
aad
mov
fisubrl
mov
jecxz
stos
cmc
add
lea
jne
or
rorb
jb
cmp
movsb
pop
inc
or
mov
pop
and
fmull
adc
xor
sahf
or
orl
arpl
std
or
or
shl
subl
jmp
inc
icebp
push
dec
xchg
stos
add
push
in
dec
sahf
or
imul
dec
lahf
push
jae
popa
add
fucompp
xor
cmpsb
push
pop
jl,pt
mov
out
cmp
jne
jecxz
pop
xor
rcll
imul
popf
idiv
inc
out
jnp
mov
mov
rol
int
sbb
andl
add
fimull
or
xchg
inc
in
popf
repz
hlt
mov
aad
bound
push
pop
lods
mov
js
popa
sub
jg
insl
out
dec
mov
cmpl
sub
sbb
jecxz
inc
xchg
adc
pop
imul
cs
lcall
pop
lods
jns
movsb
or
xchg
xchg
subl
fldenv
sbb
stos
ffreep
loop
das
pushf
rcrl
xchg
cld
cs
cli
jecxz
add
and
out
push
jmp
test
ret
mov
xchg
repnz
stc
mov
mov
cmc
out
xchg
inc
xor
jb
inc
std
jne
movsl
xor
testb
mov
test
test
stos
or
push
inc
repnz
repz
push
pop
int3
int
xchg
cwtl
adc
out
daa
xchg
mov
sub
orb
aad
es
pop
mov
push
push
fwait
sbb
pop
sub
jb
mov
leave
dec
xchg
push
inc
cmpsl
repz
popl
and
mov
xchg
daa
lcall
pop
pop
popf
jmp
xor
mov
cmp
push
cmpsl
push
push
and
pop
cwtl
cld
das
pop
fs
and
dec
enter
pusha
test
cmp
mov
adc
jae
nop
ljmp
fimull
push
pop
int
sub
sahf
pop
idivl
adc
lock
mov
divl
arpl
movsb
jge
push
aam
test
movl
xchg
push
lret
xchg
js
test
int
inc
xor
xor
sbb
lret
xchg
dec
sub
in
xchg
xor
into
or
pop
xchg
rorb
or
pop
aad
sbb
mov
push
push
or
sahf
push
jno
imul
dec
mov
add
movups
jno
cmpb
movsb
push
imul
mov
jecxz
aaa
jmp
cli
test
cmc
fists
loope
sti
repz
mov
decb
xor
rcrb
xchg
and
dec
xchg
adc
mov
push
mov
out
loope
sbb
add
pop
xchg
mov
lcall
popa
add
xchg
xchg
gs
jae
push
sbb
lods
or
jb
push
das
cmp
insl
xchg
rolb
jl
mov
icebp
rcl
adc
lea
jge
negl
jg
mov
addb
xor
cmp
xorb
pop
push
nop
fdivp
jge
adc
adc
jo
aad
xchg
sub
sbb
or
dec
inc
lcall
aad
push
mov
pop
jp
add
rcll
mov
lods
push
imul
int
pop
mov
push
ror
and
clc
mov
cmp
cmp
jecxz
out
inc
xlat
ss
stos
sbb
addr16
cltd
stos
jb
pushf
xchg
test
out
add
push
imul
inc
cli
push
int
pop
scas
pop
int3
mov
shll
fsub
ja
xchg
sub
stos
lahf
xchg
loop
movsb
lock
xchg
mov
sub
jp
out
bound
gs
pop
inc
clc
hlt
jl
insl
jo
cmc
js
shrb
es
mov
lret
imul
push
xor
push
ret
int
repz
adc
adc
out
pop
dec
in
rclb
xchg
jp
movsb
pop
xchg
rcll
push
adc
push
jl
cs
xchg
popa
rsqrtps
xchg
push
pop
out
adc
dec
xchg
in
movsl
xchg
or
lahf
push
daa
scas
cmpsl
pop
pop
scas
xchg
jo
jb
sub
xchg
pop
adc
push
xchg
mov
je
pop
stc
cmp
loopne
inc
std
jb
push
xchg
nop
and
loopne
push
shll
mov
mov
adc
inc
mov
ljmp
sete
repz
loopne
mov
out
lahf
aad
std
int
lahf
inc
push
jmp
movsb
pop
or
xchg
xchg
adc
push
pop
mov
dec
lock
jmp
nop
xor
push
aad
fwait
lcall
dec
jns
movsb
pop
out
aam
scas
push
jg
aad
jl
mov
push
fistpl
cltd
mov
xchg
mov
shl
adc
mov
clc
int
aad
cmp
loope
push
cmpsl
and
nop
lods
cli
mov
jmp
mov
cmp
test
out
pop
sub
mov
ljmp
je
enter
hlt
into
cmc
ret
jns
mov
adc
loop
and
xchg
mov
push
lock
mov
mov
xor
fsubp
shlb
jl
ljmp
es
xchg
popa
sub
call
ja
adc
cmp
xchg
push
cmp
or
xchg
cld
push
add
xchg
xchg
adc
aad
aad
pop
scas
xlat
loope
fldt
insl
cmp
hlt
cmp
lods
or
adc
imul
cmc
jecxz
sub
popf
aad
cmp
jo
popf
pusha
lods
pop
push
or
dec
lds
mov
out
out
mov
pop
push
mov
arpl
sbb
lea
call
pop
jg
mov
jns
jg
pop
sub
jp
loopne
mov
std
jns
aad
test
xchg
out
push
cmp
jecxz
push
cmp
pusha
cmp
and
push
imul
cmp
sbb
js
popa
neg
pusha
sbb
push
out
cltd
or
movsl
ljmp
adc
jle
jns
mov
jnp
gs
pop
sbb
int
dec
jne
cmpl
out
cmc
ljmp
xchg
mov
dec
or
mov
aad
inc
dec
fdivs
and
xchg
jge
out
fs
mov
loop
cmp
hlt
loope
pop
pop
ds
iret
pop
mov
inc
xchg
icebp
inc
cmc
mov
lods
rcll
test
je
jns
scas
cmp
out
xchg
or
and
push
push
outsl
jl
iret
xor
jg
pushf
inc
fsub
notl
jnp
rcrb
push
leave
pop
add
dec
xchg
movl
addr16
dec
or
xchg
out
pop
sub
lods
aas
adc
dec
test
or
inc
push
std
inc
sbb
int3
clc
idivl
popl
dec
adc
sbb
lods
sbb
xor
data16
adc
pusha
js
jge
fcoms
pop
dec
fistl
cmp
out
insb
push
xor
xchg
jp
imul
jne
jnp
xchg
xchg
push
pop
pop
stc
js
and
mov
fwait
add
clc
cmpsl
loope
xchg
dec
inc
add
xchg
mov
subl
nop
dec
aad
push
add
add
and
cli
sub
dec
mov
scas
inc
jge
cmp
hlt
or
loopne
shlb
pop
int
hlt
or
movsb
pop
jge
xlat
int3
enter
imul
fcoms
dec
sub
dec
insb
mov
gs
add
int3
lcall
scas
btc
push
jmp
jno
mov
sub
dec
dec
pushf
mov
aad
loop
imul
pop
xchg
int
mov
push
jno
lods
add
or
sbb
sbb
mov
mov
cmpsb
sti
xchg
filds
addr16
in
lods
cmovl
in
jl
mov
mov
xor
in
xchg
int
mov
push
mov
int
mov
in
mov
inc
xchg
cmp
repz
test
cli
fidivrs
dec
dec
stos
fisubrs
fcomi
mov
lret
call
bound
lods
sub
lods
xlat
and
idivl
add
aad
ret
pop
xchg
push
hlt
std
insl
pop
scas
aaa
test
addr16
jecxz
push
into
xchg
icebp
insl
mov
leave
or
mov
or
icebp
mov
test
and
iret
jmp
cld
mov
fidivs
mov
jg
and
ja
mov
pop
fistpl
div
arpl
es
sti
mov
add
popa
push
ret
lds
jecxz
adc
aad
adc
out
cwtl
test
ret
dec
repz
mov
mov
fldln2
ja
and
adc
dec
xchg
mov
cmp
addr16
mov
pop
xchg
push
adc
ret
cltd
xchg
cmp
test
fadds
cmp
nop
mov
sbb
aas
mov
paddd
mov
setbe
and
and
push
adc
popf
mov
or
or
int
sub
in
call
cmpsl
push
in
push
js
ja
mov
dec
mov
cmp
shll
nop
adc
mov
push
mov
pop
push
jbe
jmp
inc
and
sar
dec
or
fs
xchg
lret
movsl
jg
dec
aam
mov
fnstenv
mov
xor
mov
and
sub
ret
test
loope
sbb
jg
inc
pop
mov
into
add
popa
loope
mov
in
or
testl
lcall
dec
ficoms
call
xchg
inc
jo
inc
or
popa
xchg
inc
mov
dec
lods
jbe
repnz
test
jg
adc
scas
mov
scas
jae
test
add
inc
mov
xchg
pop
push
sub
int3
cmp
and
repnz
cli
out
push
scas
xchg
loopne
xchg
into
jno
add
and
cmp
movsb
inc
test
jo
mov
ljmp
scas
call
pop
push
mov
notb
js
loope
jno
cli
loop
js
and
movsl
push
ja
cld
push
dec
stos
pop
aad
inc
dec
dec
lcall
popa
cmp
jbe
incb
ret
aam
sti
dec
push
lds
aad
mov
jecxz
outsl
bound
cmp
xchg
ljmp
mov
pop
int3
or
cmp
movsl
mov
pusha
add
int
aad
inc
js
pop
fimull
push
cmpsb
cmp
test
adc
xor
fiaddl
rolb
mov
adc
in
dec
sub
in
inc
or
jb
out
mov
aad
mov
and
jne
out
out
lods
pop
mov
movsb
icebp
insb
mov
push
shrb
xlat
add
push
cltd
dec
push
mov
mov
mov
sub
mov
jb
pavgb
aad
dec
loopne
les
inc
in
fwait
stc
icebp
inc
andl
outsl
xchg
jle
sub
or
jnp
add
adc
dec
out
rorl
jecxz
or
ss
mov
push
test
sub
jae
ret
repz
cmc
ss
ret
mov
loope
fmulp
into
pusha
ds
test
mov
repnz
xlat
sahf
xchg
mov
out
cmp
mov
das
inc
mov
movsl
xchg
nop
scas
and
iret
stos
cmpsb
rcrb
lock
mov
dec
and
movsb
js
cmp
out
scas
shld
test
fdivrl
out
xor
out
std
jmp
adc
pop
pop
mov
jle
mov
scas
mov
in
aaa
test
inc
data16
or
fiadds
movsl
pop
in
inc
cmp
icebp
aad
mov
sub
into
mov
mov
inc
jmp
fisttpl
add
inc
test
ds
and
in
mov
sbb
xchg
in
and
mov
loope
jmp
jge
push
push
movsb
push
and
mov
jb
add
cmc
fildl
sub
js
mov
fs
hlt
loop
rorb
push
lock
xchg
or
test
push
jae
pop
ror
push
lods
popa
rorl
pushf
inc
out
jb
dec
ljmp
iret
lea
xchg
push
fdivrl
and
fmuls
jg
iret
aad
adc
inc
aad
mov
idiv
sbb
outsb
jl
jmp
pop
jle
int3
iret
mov
and
cltd
les
lret
mov
or
outsl
test
fndisi(8087
cmp
cmc
call
cmp
int
sbb
das
pop
es
xchg
test
jne
negb
cmp
inc
push
cmpb
mov
cmc
adc
xchg
lret
jp
divl
cltd
push
xchg
xor
lea
ret
mov
daa
cmp
dec
cmp
jno
xor
cmc
fstl
repnz
movb
loopne
mov
cmp
sbb
sub
push
or
inc
lahf
mov
mov
mov
jmp
dec
out
nop
add
mov
and
xchg
cmc
fsts
mov
push
cmp
add
out
push
shlb
cmc
loope
xor
das
imul
dec
cs
pop
out
sub
sti
adc
jmp
cli
jns
shrb
fiadds
and
rorb
lods
out
lods
sets
mov
jmp
sub
aad
in
jo
ret
or
js
hlt
popa
cmp
lcall
add
out
insb
iret
fsub
sti
jae
jecxz
dec
loope
pop
mov
cmp
pop
mov
stc
daa
out
sbb
insl
js
insl
fimuls
pop
pop
mov
loope
lock
mov
or
imul
out
lcall
jle
push
out
xorb
sarb
fdivrp
notl
leave
das
aad
or
dec
xchg
mov
ret
push
into
nop
sub
cmp
xchg
pop
outsl
xchg
out
pushf
mov
add
xlat
adc
push
mov
push
add
jle
and
data16
test
out
dec
inc
ss
into
jp
add
cmc
push
dec
mov
pop
cmp
jp
fisubrs
stc
jmp
aad
cmp
or
cli
in
scas
add
shll
jnp
pushf
punpckldq
xlat
or
adc
sbb
fsubl
add
outsl
mov
loopne
out
mov
pavgb
fs
das
xchg
fldt
loope
sbb
int
pop
jno
aaa
xlat
dec
mov
push
loopne
dec
aad
int
push
addr16
lds
mov
dec
mov
testb
nop
pop
pop
lret
es
int
xchg
mov
and
icebp
ja
mov
mov
and
leave
or
jne
les
out
ficompl
pop
loope
loop
and
aad
sub
mov
push
incb
push
push
jp
mov
gs
sbb
shrl
in
mov
lret
mov
les
lea
addr16
or
mov
in
mov
stc
jno
pop
push
dec
aam
sbb
lods
or
xchg
adc
xchg
into
test
popf
insl
test
fcompl
cmp
fbld
push
aad
push
cwtl
xor
pop
cmp
xlat
pop
add
icebp
je
scas
and
and
inc
dec
es
cmc
and
xor
fldz
inc
popf
xchg
pop
rclb
loop
in
lcall
mov
lret
xchg
push
lea
push
arpl
dec
cmc
push
pop
lahf
sbb
and
pop
js
sarl
out
mov
sub
push
and
mov
lods
lcall
in
into
push
js
int
cltd
adc
imul
aad
jmp
icebp
xor
int3
lret
and
cmp
pop
out
pusha
call
push
cmp
add
aas
or
mov
mov
jl
jl
push
push
loopne
enter
test
inc
pop
add
jnp
lods
mov
cmp
xchg
push
cmpsb
xchg
pop
dec
and
mov
pop
push
mov
sub
mov
pop
in
inc
hlt
lret
imul
cmp
and
inc
pop
test
push
or
pop
int3
dec
push
out
sahf
lds
in
imul
or
xchg
jbe
loope
arpl
inc
cmp
push
or
shll
mov
repnz
cwtl
cmpsb
push
or
lret
pop
adc
cmp
test
jnp
push
sbb
cmpb
mov
repz
cmp
cmpsb
les
lods
pop
or
into
ljmp
or
test
jg
dec
xchg
xchg
mov
das
mov
xchg
jnp
pmaddwd
dec
in
dec
sub
data16
into
call
xor
xchg
in
repnz
push
jo
lret
pop
js
push
and
push
inc
call
jno
adc
cmc
int
mov
jne
loope
repnz
push
adc
adc
repnz
ret
out
addb
xchg
or
pop
int
je
out
inc
inc
or
mov
icebp
push
pop
lea
dec
push
in
lods
adc
and
and
adc
and
daa
mov
dec
in
jb
push
fs
mov
mov
loop
and
dec
cmc
dec
mov
mov
dec
jnp
out
pop
repnz
or
mov
imul
ud0
add
mov
movb
cld
sub
fsts
sub
or
sub
into
js
idivb
jmp
shl
jnp
cmp
sti
cs
mov
lret
lret
push
xchg
nop
sub
adc
js
repz
ja
aaa
js
mov
fnstcw
imul
xchg
fcmovb
outsb
mov
add
jl
pusha
push
add
divl
scas
pop
imul
negl
sbb
cmc
and
pop
pop
add
inc
dec
cmc
dec
jo
ja
mov
mov
xchg
sbb
sbb
cmp
mov
mov
xchg
loopne
out
inc
push
imull
mov
test
jmp
imul
sti
mov
add
andl
cmp
xchg
bound
pop
adc
or
mov
mov
and
mov
in
test
and
jge
or
insb
int
insb
dec
dec
mov
arpl
movsb
sbb
mov
mov
mov
jo
add
es
adc
fisttps
negl
sahf
call
dec
outsb
int
xor
cmp
sub
or
in
and
mov
push
aad
add
inc
or
out
jle
int
aad
loop
push
popa
iret
add
cld
inc
cmp
sarl
dec
cmp
jl
mov
sub
cmp
std
aad
adc
fidivl
push
loop
bswap
dec
xchg
leave
jl
inc
sbb
mov
jp
aaa
dec
into
in
push
call
fldenv
cmp
call
jmp
mov
push
pop
cmc
fsubrs
pop
popf
lahf
jmp
lods
fs
jne
pop
push
cmp
aad
cld
out
adc
jns
int
pushl
inc
ret
lahf
rorl
add
clc
pop
cmp
mov
mulps
test
ret
insb
loope
lock
shl
mov
add
ret
js
xchg
sbbl
inc
inc
mov
xor
push
stc
add
int
sbb
mov
lcall
mov
cvtps2pd
and
xchg
ljmp
adc
imul
icebp
mov
cmp
addb
out
test
inc
xor
int
xor
xchg
dec
sub
or
and
xor
dec
stc
xchg
iret
push
dec
test
aam
scas
or
or
sub
pop
xchg
xchg
loopne
dec
mov
cmp
out
pop
fs
out
cmc
or
popf
xchg
mov
call
jl
aaa
mov
leave
or
mov
sub
dec
notl
je
inc
xchg
push
pop
stos
add
add
dec
pop
xchg
add
xchg
inc
fstl
push
int
std
cmc
or
sub
fwait
leave
jns
pop
ret
aas
nop
jo
sub
in
xor
jns
jecxz
and
rcl
jp
js
ljmp
and
roll
jmp
pusha
push
pop
or
stc
adc
mov
popw
jo
loopne
cmc
clc
out
mov
cmp
movsb
notl
mov
rcl
xlat
clc
aad
and
xchg
ja
pop
sbb
xor
data16
sti
push
psubusw
lea
lahf
stc
inc
aad
sbb
bnd
int3
xchg
imul
jo
js
mov
jmp
dec
push
pop
mov
mov
mov
bound
inc
lahf
xchg
jne
xor
jno
push
in
add
iret
ret
xlat
aad
lret
idivb
sbb
xor
pop
gs
jae
aaa
jg
into
clc
mov
dec
out
nop
push
popf
sti
or
xor
pusha
rcr
outsl
int
add
test
push
mov
fidivrl
lcall
mov
adc
mov
cld
lods
loopne
jg
rcrb
add
adc
sbb
ret
xchg
fsubr
sub
insl
std
int
dec
loope
mov
es
jge
fld
push
mov
push
scas
pusha
mov
sub
lods
std
in
mov
xchg
push
xchg
popa
xchg
jmp
stc
lods
jle
out
jns
mov
mov
mov
fs
xchg
cmc
push
frstor
shll
mov
ret
pop
mov
and
and
inc
scas
push
or
add
or
aas
inc
or
pusha
std
lods
or
movsb
pop
jnp
jno
pop
out
lods
mov
loope
and
popf
sbb
outsb
inc
call
es
repz
cmp
pop
aad
in
pop
js
cmp
shrb
rorb
mov
add
sbb
push
push
in
int
ror
in
mov
out
xchg
test
mov
xchg
or
dec
push
sbb
mov
jns
lahf
bound
lcall
jg
out
or
out
imul
es
clc
xor
or
int
faddl
hlt
cmpsl
call
pop
shr
push
clc
mov
int
cld
jmp
cmp
cmp
aad
add
inc
jecxz
jge
xchg
movsb
xor
insb
pusha
ja
mov
ret
fbld
addr16
mov
sub
jl
and
cli
fists
add
scas
or
jmp
jl
loope
scas
add
iret
into
cmp
mov
xor
aam
sbb
inc
fildll
ficoms
ja
or
in
data16
sbb
mov
mov
movaps
jnp
aam
out
std
cwtl
insl
sub
mull
push
xabort
ss
jmp
xchg
cmpsl
mov
in
cmc
xor
jecxz
int
push
shl
adc
data16
lcall
outsl
dec
dec
sbb
les
repz
jp
scas
cmp
xchg
push
push
fs
inc
pop
cwtl
fiadds
iret
testb
sbb
mov
jle
in
out
cmpsb
aad
mov
push
out
mov
js
aam
xor
mov
push
lods
add
ret
les
js
add
notl
in
out
outsb
cmc
sub
cmp
push
fdivrl
aad
test
cmp
add
pop
mov
push
jns
mov
jo
ja
repz
int
xchg
xchg
nop
inc
lods
jecxz
jb
push
add
sbb
addr16
add
test
fidivs
push
mov
xchg
sub
sti
lock
loop
push
mov
jb
mov
sbb
fsubrl
add
mov
dec
sti
aad
imulb
call
std
mov
cwtl
add
jle
cmp
inc
jbe
push
or
lods
add
inc
inc
shrb
fisubrs
push
sub
cld
dec
dec
inc
mov
pop
sub
scas
decl
jge
arpl
jmp
loope
sbb
jne
lods
inc
jo
mov
outsb
mov
inc
es
xlat
js
aad
dec
aad
rcl
int
leave
dec
test
mov
nop
mov
fwait
div
mov
push
inc
loopne
jg
adc
sti
cmp
inc
mov
icebp
mov
add
fcoms
push
mov
out
jp
test
outsb
int
aam
jmp
pop
cmpsb
mov
insb
mov
add
aad
scas
cltd
dec
adc
xchg
jb
idiv
js
cmpl
xchg
jmp
out
xchg
jne
adcl
push
movsb
cmp
cmp
popa
sub
xchg
outsb
xor
dec
xor
mov
dec
dec
and
cltd
jne
fisttpl
adc
or
or
repz
sub
into
int
sti
dec
cmp
or
push
or
mov
seto
jb
das
fists
pop
push
jge
adc
or
xor
sbb
jge
mov
push
pop
fdivrl
jno
or
ffreep
ja
mov
insb
fisubrl
mov
js
push
jg
inc
mov
push
insb
repz
adc
shrb
cmc
pop
dec
mov
cmp
dec
repnz
std
xchg
or
lcall
test
xchg
push
xor
wrmsr
jns
sarb
addr16
mov
xchg
adc
mov
cwtl
loope
hlt
push
and
lods
test
push
and
gs
jns
daa
filds
and
or
pop
imul
and
shr
inc
outsb
push
shlb
or
or
push
ljmp
mov
ret
and
je
add
lock
ja
pop
push
mov
lods
fwait
mov
push
test
adc
into
test
int
lea
notl
int
sahf
or
scas
jne
mov
dec
mov
add
mov
xor
leave
xchg
fsub
push
mov
imul
mov
jns
pusha
push
ret
loope
leave
jle
pop
xor
cmovne
push
idivl
dec
mov
gs
cmc
inc
shlb
xchg
testl
and
pop
push
data16
inc
mov
or
loopne
or
fs
adc
adc
jno
insb
jge
orb
xchg
xchg
ficomps
dec
pushl
jo
adc
gs
ja
and
sub
scas
pop
filds
jmp
subl
loope
mov
emms
aas
sbb
movsb
jmp
push
dec
xchg
inc
out
or
fstpt
mov
out
ljmp
in
jo
jg
test
jmp
or
mov
int
pop
jp
mov
enter
sub
push
mov
popf
call
mov
mov
fnstsw
mov
adc
nop
jmp
int
push
sub
inc
push
jmp
or
sub
arpl
xchg
add
mov
div
adc
loop
or
mov
mov
xor
cmc
call
push
fadd
push
jmp
ret
icebp
and
popf
cltd
inc
sub
pop
mov
call
dec
aad
mov
push
inc
fidivrs
imul
jbe
imul
mov
inc
loopne
lcall
dec
xchg
pop
inc
iret
jge
xchg
cmp
jle
mov
cmpl
sti
lock
xchg
mov
push
dec
into
sbb
xor
pusha
pop
push
dec
bnd
int
sub
jmp
maskmovq
idivl
call
aad
xchg
inc
movsb
arpl
cmp
call
or
adc
push
jo
les
cmp
pusha
add
sbb
rcl
les
mov
imul
fxtract
sahf
jns
jmp
mov
cmc
pop
rorb
pop
movsb
popf
test
int3
popa
ffree
pushl
pop
xchg
rol
cmp
mov
xchg
fsubrs
daa
inc
dec
jl
movsb
mov
and
adc
fcompl
fs
movsb
scas
push
movsb
pop
scas
bound
or
and
int
jnp
int
and
outsl
xchg
scas
es
push
pushf
mov
js
xchg
or
mov
push
adc
pop
or
sti
or
mov
cld
or
mov
popa
mov
divl
dec
xchg
stc
xor
into
aad
sti
adc
iret
mov
rclb
mov
sub
arpl
jmp
jae
jmp
add
xor
popa
fwait
je
fidivs
fistpl
and
out
stos
push
push
loop
mov
sub
mov
loope
js
testb
mov
cmp
mov
mov
dec
sub
stos
fcomps
push
sub
jge
or
lahf
sbb
mov
mov
lds
dec
pop
mov
cmp
arpl
es
sub
xchg
mov
cmpsb
je
sub
dec
inc
dec
mov
clc
push
mov
movlps
xchg
call
testb
or
mov
aad
adc
push
popf
jnp
cmpsl
mov
jbe
cmp
jbe
sbb
mov
jb
add
push
lret
ficoms
lods
and
cmp
dec
pop
mov
add
sbb
repz
xchg
or
das
ja
iret
add
test
xor
xchg
push
jns
mov
in
pop
add
mov
cmp
aam
and
iret
ror
sub
in
sbb
xchg
ja
dec
xchg
mov
arpl
add
mov
in
jg
fwait
adc
cmc
inc
fidivrl
push
popa
push
add
inc
add
pop
mov
pop
sub
lods
in
jo
jmp
lcall
in
lods
inc
xor
xchg
jmp
mov
in
lcall
pop
or
in
popf
and
lahf
cmp
push
pop
mov
mov
and
add
lahf
or
xor
xor
dec
gs
adc
cmc
xor
rclb
dec
mov
cld
push
imul
addr16
fsubr
aad
daa
adc
push
in
push
aad
or
subl
icebp
lcall
loop
in
jo
mov
loope
in
sbb
imulb
pop
lods
cmp
sahf
cwtl
xchg
daa
xchg
jns
data16
sbb
je
jmp
inc
shrl
lock
into
jmp
xchg
add
loopne
sub
mov
push
mov
loope
cmp
mov
adc
scas
xor
les
jb
js
rorb
lret
dec
add
mov
inc
in
and
push
popa
add
xor
xchg
xchg
push
pushf
pop
mov
adc
and
daa
mov
cmc
push
mov
pop
jnp
or
mov
das
dec
in
lcall
xor
jge
cmp
mov
sub
scas
dec
pop
mov
outsb
ret
loop
sub
cltd
movsb
test
sti
movsb
fisttpl
pop
or
xchg
call
cltd
into
lcall
and
inc
call
push
jg
std
cmp
ds
call
dec
icebp
push
jmp
cmp
incl
outsl
test
adcl
iret
cmp
lock
pop
mov
sub
mov
mov
into
xchg
push
pop
push
daa
ja
cmc
in
cmp
aam
mov
mov
pop
int
mov
rorb
jae
mov
int
pop
mov
jmp
sbb
sub
pop
cmc
jg
cmp
jmp
cmp
cld
aad
jg
jbe
fwait
mov
mov
mov
inc
xchg
push
cmp
mov
pop
pop
jl
nop
pop
xchg
mov
mov
stos
sbb
or
div
fsincos
add
adc
sbb
mov
and
cmp
verw
call
icebp
mov
pop
jnp
into
or
cltd
adc
jmp
jnp
pop
pop
or
mov
idivl
sub
adc
xchg
cmp
pop
jecxz
pop
mov
loopne
loop
jge
iret
pusha
add
stos
push
xchg
push
sub
xchg
rorl
or
mov
sub
jg
outsl
lods
je
mov
lods
sub
cmp
jne
dec
fildll
xor
pop
shr
dec
cmc
mov
xchg
femms
dec
in
xchg
test
stc
sub
lea
cwtl
sub
sub
adc
pop
and
pop
loopne
or
pop
js
sahf
arpl
xlat
cmp
loopne
call
xor
cli
in
or
rolb
xchg
mov
cmpsb
inc
movsl
sbb
div
ret
lcall
mov
popa
sarb
jg
fldt
jns
scas
es
lcall
push
push
push
cmp
int
cmpsl
sbb
aam
push
fadds
push
mov
push
aad
jp
cmpb
bt
das
shll
in
push
lods
jecxz
xlat
sbb
cmovbe
movsb
arpl
jmp
cwtl
dec
mov
jo
inc
jmp
jne
int
xchg
and
jo
fadd
outsl
movl
pushf
mov
lods
push
jo
jg
or
push
inc
dec
fstpl
add
cli
repnz
dec
push
push
stos
push
xchg
xor
negl
call
out
arpl
adc
mov
es
enter
inc
ja
add
inc
or
orb
jae
xor
aad
cltd
adc
leave
bound
cmp
ss
or
int
cmpsb
gs
addl
and
mov
jg
cmpsb
inc
pop
dec
pop
enter
lcall
cltd
jo
xor
int
push
repz
cmp
lods
dec
sub
mov
sub
xchg
mov
insb
pop
xchg
cmpsb
cmp
fsin
push
movsl
dec
xor
fildl
arpl
ljmp
xor
mov
clc
and
jns
stos
xor
push
mov
sub
test
jl
arpl
in
idivl
pop
or
insl
out
aad
out
cmp
stc
and
xchg
add
repz
jnp
rolb
sub
daa
sti
ret
bound
dec
aad
rcr
stc
nop
xor
lods
dec
sbb
cli
mov
xor
sbb
or
sub
add
dec
adc
dec
lret
xchg
jl
stos
stc
jp
mov
stos
mov
cmc
push
jne
cmp
das
xchg
or
mov
shl
or
clc
scas
imul
sbb
arpl
fidivrs
notl
jae
fists
mov
adc
add
int
xor
test
inc
mov
mov
mov
cli
enter
stos
leave
jl
insl
add
push
and
popa
mov
lods
test
xor
and
lock
jo
shl
cmc
jmp
dec
xlat
push
push
sbb
jl
adc
sbbb
popl
test
rclb
cmp
std
adc
out
xor
sub
inc
and
jns
das
jno
mul
xchg
and
jne
popa
das
dec
loope
les
or
rcrb
jle
pop
jmp
inc
cwtl
insl
adc
pop
cmc
jnp
dec
insl
inc
stc
dec
scas
or
mov
pop
ljmp
mov
data16
xchg
inc
cli
frstor
or
shrb
or
fbstp
pop
dec
mov
les
mov
cld
fisttpl
fimuls
dec
add
dec
mov
movsb
aad
mov
dec
push
sahf
fwait
and
ret
outsl
into
push
pusha
push
dec
or
pop
jge
mov
loop
dec
sbb
les
rolb
sub
push
movsl
push
cwtl
adc
sahf
adc
cs
fucom
jmp
add
or
sbb
push
cmpsb
ja
cwtl
xor
and
scas
and
aas
ds
jle
imul
mov
sbb
jae
push
push
add
and
and
stc
std
test
mov
out
inc
or
repnz
xchg
clc
cmpl
mov
mov
enter
dec
test
mov
sbb
dec
push
aad
mov
adc
jmp
xchg
addr16
xor
dec
push
in
sub
loope
cmc
lea
mov
cmp
lock
sub
sarl
jl
xchg
sub
adc
sub
lds
xchg
mov
call
movsb
xchg
cmp
and
shr
out
add
mov
int3
jns
aas
jg
jl
or
sarb
push
iret
ret
adc
mov
mov
jo
dec
clc
push
and
or
mov
mov
pop
pusha
jg
and
xlat
cwtl
fsqrt
test
mov
fs
in
jae
sub
and
xchg
add
or
outsl
jge
xchg
sbb
cmpsl
into
xor
lea
xchg
cli
push
push
rcrb
push
stos
dec
xor
rorb
xchg
pop
bound
push
loop
pusha
popf
roll
popa
push
lods
mov
shll
jecxz
push
scas
mov
sbb
dec
dec
cmp
cmp
imul
sub
test
fstpt
add
mov
dec
bound
xchg
mov
pop
pusha
sbb
jle
bswap
inc
aam
cmpsl
sub
cmc
call
fwait
sbb
xor
add
jge
xchg
jecxz
cmpl
dec
leave
ret
ds
ljmp
dec
sahf
mov
roll
into
loope
fidivrs
das
int
xchg
addr16
jae
out
pop
aad
cmp
or
jecxz
jl
aam
in
pop
dec
xchg
cs
push
inc
data16
mov
scas
int
and
std
nop
or
or
push
das
inc
leave
mov
aad
sub
out
jns
aas
inc
cmc
lcall
call
adc
in
sbb
inc
push
xor
aad
stos
or
jns
fnsave
dec
stos
and
jl
xchg
pushf
inc
and
inc
pop
adc
divl
stc
push
fcmovb
call
or
dec
iret
out
xchg
stos
inc
in
imul
adc
or
rorl
mov
xchg
inc
sbb
ss
adc
aaa
pop
fisttpl
loopne
rol
jle
dec
sahf
sti
cwtl
pop
xor
mov
test
mov
cmc
je
repz
and
pop
mov
js
leave
js
mov
mov
pop
test
sbb
xchg
inc
rclb
mov
addb
mov
rcrl
lock
mov
repz
rolb
jp
push
lods
or
testl
sbb
adc
fucomp
pusha
push
dec
call
sbb
call
mov
dec
mov
mov
add
jmp
mov
cmp
in
jo
iret
scas
sahf
add
rolb
icebp
testl
int
mov
pop
push
repz
into
pusha
push
xchg
jmp
bound
out
cmp
faddl
add
and
das
pop
dec
mov
sbb
mov
dec
sbb
inc
xor
out
test
and
push
dec
push
push
xor
jno
test
mov
pop
jge
cmp
pop
dec
out
pusha
sbb
data16
pop
iret
lea
lds
mov
sub
dec
lret
push
aad
inc
lea
jmp
je
inc
jb
xchg
int3
cmp
sarb
fs
outsl
imul
mov
and
test
mov
call
jo
das
pop
jbe
cmp
shl
out
jmp
int3
jnp
add
out
scas
fwait
push
sti
popf
fldenv
repz
add
arpl
iret
cli
sub
rcll
adc
fidivrl
push
shll
and
in
push
mov
sub
aad
fisubl
arpl
lcall
loop
dec
sub
pusha
das
push
mov
sub
jae
inc
aad
clc
outsl
nop
mov
sub
and
pushf
and
mov
iret
inc
pusha
scas
insl
sub
push
ret
push
fcoms
loopne
ljmp
and
shrl
pop
xchg
add
xchg
push
pop
jl
push
pushf
int
sahf
in
add
pop
sti
dec
int
cltd
xchg
pop
mov
lret
fwait
call
incb
daa
cmc
cmpsb
lea
push
lods
push
mov
fs
jnp
addb
mov
test
sahf
movsb
pop
pop
mov
xchg
jp
aas
add
test
mov
popf
int
mov
aaa
sbb
add
cld
jnp
push
sbb
sbb
sub
mov
movsb
sub
inc
cmp
outsl
push
push
repnz
pop
aaa
pusha
mov
adc
cld
sbb
mov
mov
mov
setne
fimuls
cmpsb
mov
xchg
mov
inc
jae
jae
repz
ljmp
sbb
hlt
lahf
js
movb
test
mov
push
cmpsl
mov
xchg
inc
loopne
xchg
push
stos
add
mov
andb
xchg
xor
stos
fcmovbe
xchg
bound
or
inc
mov
mov
jp
xor
lods
add
fucomp
test
push
jae
call
rclb
pop
test
movsl
push
arpl
xor
and
sbb
fldl
cmp
mov
dec
add
lret
insl
mov
add
xchg
add
jmp
jp
clc
jns
mov
gs
add
cmp
push
and
mov
and
pop
xchg
xorl
punpcklbw
add
sub
or
mov
iret
aaa
cmc
fbld
test
jg
out
shl
push
movl
fs
jo
mov
xor
fnstcw
test
pop
ret
je
jg
xchg
add
sarb
lret
xor
dec
jno
nop
inc
fldl
mov
test
test
rcrb
jae
test
mov
pop
adc
mov
ljmp
sub
or
imul
lea
incl
cmp
repz
pop
push
popf
add
pop
and
dec
popa
xchg
lods
dec
punpcklbw
and
pop
scas
fsubrs
shll
out
sbb
pop
scas
cmp
loope
jae
loope
cltd
sbbb
cltd
shlb
mov
aas
and
or
jb
adc
sbb
or
cmp
push
add
leave
cmp
cmp
sub
iret
sbb
mov
aad
mov
cs
bound
popa
andl
shrl
fcoms
pop
or
out
or
push
imul
ljmp
es
mov
cwtl
add
mov
iret
mov
into
jno
les
add
aad
sbb
xor
adcl
pop
mov
jne
pushf
jmp
test
sbb
clc
dec
jmp
add
push
insb
cmc
jo
rol
nop
cmp
or
push
test
xchg
inc
sbb
mov
or
aad
mov
pop
andb
or
lods
push
lock
aad
jg
push
mov
cmp
xor
xchg
or
adc
dec
repz
iret
cmpsl
sti
dec
xor
inc
jg
cmpsb
out
cli
int3
xchg
dec
daa
and
or
test
xchg
and
mov
test
sbb
punpckhdq
and
sbbb
pushf
cmp
and
xchg
add
out
adc
test
sti
push
fs
cmp
or
test
daa
or
out
popa
fldenv
test
adc
mov
lods
adc
test
scas
aad
or
add
mov
xchg
and
and
pop
addb
or
or
add
add
fwait
xor
int
push
cwtl
ud2
cltd
aad
push
xchg
gs
cmpsb
int
imul
cs
addr16
inc
nop
or
or
cmp
cli
cmc
ja
push
movsl
clc
rorb
shrb
mov
pop
test
cmp
mov
mov
push
insb
jg
jge
push
pop
mov
mov
into
cwtl
jle
or
jg
inc
lock
xchg
inc
add
adc
jo
and
mov
ds
and
aaa
sub
popa
movsl
loop
xor
out
addr16
sbb
and
push
pop
iret
and
push
add
insb
into
mov
or
lcall
push
decb
call
push
sbb
xlat
test
cmp
pusha
inc
ja
in
lods
outsl
sti
dec
cli
jl
and
jnp
movsb
call
mov
repz
cli
or
pusha
push
aad
adc
aaa
pop
ret
add
mov
mov
icebp
clc
popl
or
fxch
cmp
ret
aad
push
push
and
out
or
push
mov
jmp
mov
dec
cmp
mov
jp
roll
repnz
or
push
gs
jnp
add
test
test
stc
pop
xlat
add
fs
in
lea
lahf
jle
push
sub
push
push
mov
inc
and
sahf
push
dec
push
and
or
iret
scas
in
jmp
cmpsb
push
add
mov
pusha
mov
pusha
sub
inc
inc
adc
lcall
lock
incl
test
cli
rolb
jns
incb
cmp
imul
or
adc
test
imul
mov
mov
add
adc
cs
outsl
sbb
js
push
jmp
out
pop
enterw
push
inc
imul
pushf
jle
add
sub
sbb
add
mov
insl
cmp
add
movsl
in
jnp
dec
movsb
hlt
fmull
mov
sub
or
adcb
jae
jmp
cwtl
dec
outsb
ret
mov
sarb
sub
gs
ss
xor
inc
lods
dec
sub
and
arpl
jg
into
aaa
aad
pop
dec
sub
jne
pop
dec
mov
fstpl
jge
ficoml
push
aad
movsl
arpl
mov
lock
push
popa
and
add
jmp
into
inc
ja
mov
cmpsl
inc
std
rcll
adc
ljmp
into
jl
dec
and
dec
negb
xchg
push
insl
jle
nop
scas
xchg
dec
loope
adc
cmp
mov
mov
enter
mov
jno
mov
mov
imul
mov
outsb
mov
sub
mov
sub
sbb
js
add
in
js
push
pop
imul
cmpsb
das
add
pop
movsb
mov
incb
jo
cld
pop
sti
lds
aad
or
mov
out
and
lods
sub
mov
and
cli
aad
in
fcomp
jae
pop
rcrl
int3
shrl
push
cmp
cs
or
lods
clc
adc
pusha
xchg
adc
inc
mov
pop
xchg
test
jnp
rcr
loop
movsb
dec
fdivrs
push
jno
push
push
jmp
or
jae
mov
ds
stos
jae
xchg
dec
xchg
mov
mov
and
sbb
adc
stos
xchg
mov
cmp
gs
adc
testb
cmp
out
scas
cmp
cmpsb
mov
pop
test
jmp
add
xchg
jb
data16
ja
mov
adc
cmc
jp
sar
js,pn
loopne
shrb
fwait
mov
xchg
ds
jmp
pop
aad
push
xor
mov
aad
or
sub
push
xchg
jo
and
xchg
mov
mov
adc
in
jle
sti
out
push
shrl
fisubl
test
aas
xchg
imul
cwtl
lea
push
rorl
les
pop
fwait
out
xchg
inc
mov
sub
inc
jp
stos
mov
test
int
push
pop
hlt
sub
xchg
leave
mov
call
stc
gs
xchg
testb
jge
call
add
or
dec
lods
sub
test
push
adc
jp
jecxz
pusha
roll
cmc
xchg
pop
lods
add
sahf
dec
xchg
out
je
cmp
jno
or
and
popa
sub
lcall
mov
shrl
mov
int
mov
add
fists
into
popa
xchg
mov
push
dec
and
sub
and
insb
in
arpl
les
and
test
dec
fimull
int
cmpsb
add
push
rorb
out
insb
xlat
inc
xchg
ret
xchg
insl
inc
rol
stc
shrb
cltd
adc
enter
icebp
mov
js
or
xlat
movsl
packuswb
cmp
adc
push
xchg
fiaddl
lea
mov
setg
dec
or
cmp
sub
xlat
or
jge
and
or
push
nop
sahf
adc
aam
cmc
rorb
cmp
xchg
mov
mov
adc
call
dec
cli
mov
subb
inc
fwait
int3
nop
stos
aad
andb
jmp
mov
xchg
fwait
sub
jno
in
sub
cmpsb
dec
xor
cmp
js
add
sub
mov
pop
in
aad
cmp
mov
and
icebp
xchg
xchg
test
loope
pop
mov
mov
in
outsl
orb
cltd
push
out
cmp
push
mov
fs
outsb
add
sub
inc
int3
outsb
mov
nop
je
inc
idivl
mov
insb
cmc
dec
inc
push
sar
aad
test
out
mov
xchg
xor
adcb
and
jbe
imul
or
inc
mov
mov
ljmp
repnz
dec
dec
stc
into
sbbl
sti
pop
adcl
push
lock
ljmp
fidivrs
mov
inc
xor
pop
inc
std
mov
std
add
jmp
or
js
push
fdivrp
mov
mov
lds
inc
pop
prefetch
or
cwtl
inc
push
jmp
add
out
sysret
push
add
test
and
adc
mov
fsin
jmp
ret
ds
or
lea
mov
push
add
popa
dec
pop
hlt
jl
jecxz
dec
push
mov
mov
lcall
push
dec
xchg
or
xlat
push
ljmp
push
lahf
loope
sbb
outsl
dec
int3
popf
mov
in
xchg
fcmovnbe
add
test
mov
ljmp
subb
mov
mov
sbb
enter
ss
add
popa
cmp
imul
dec
xchg
into
xchg
fsub
pop
and
es
pop
stos
dec
mov
aas
ss
cwtl
mov
add
hlt
pop
es
sub
fwait
dec
dec
sbb
cli
sbb
aad
inc
cmc
cmc
push
mov
popa
jle
stc
push
jb
adc
and
pop
outsb
xchg
cmp
xchg
mov
sub
arpl
jecxz
xorl
xchg
jo
dec
cwtl
pushl
enter
pop
push
aad
lret
push
imul
rolb
jmp
add
jno
imul
lar
and
ljmp
in
cmp
aaa
mov
popf
push
psubw
mov
jnp
loop
mov
add
cmc
clc
xor
movsl
cmp
sub
movsb
sarb
cmpl
sti
cld
scas
jecxz
push
xchg
jl
jmp
or
push
addr16
push
mov
cmp
outsb
mov
sahf
out
cwtl
or
add
dec
out
cmpsl
mov
pop
stos
sbb
xor
das
ljmp
pop
sub
loope
and
inc
dec
inc
in
aam
pop
dec
sub
int3
mov
pop
push
jle
pop
fists
aas
loopne
push
int3
int
mov
jl
pop
dec
jno
dec
lods
pop
lods
jecxz
xlat
xchg
jmp
cmp
fld
into
rcll
hlt
or
cmp
sbb
rcll
xchg
mov
push
stc
cmpsl
jb
sahf
sub
xchg
cmp
sbb
add
cmc
sarl
xchg
inc
in
mov
add
sub
das
aad
test
add
pop
xchg
jge
in
into
and
dec
in
pop
fwait
into
cmc
int
cmp
adc
divl
push
cld
popf
push
daa
mov
adc
cmp
jae
loop
in
or
mov
mov
jae
push
cmc
lea
imul
adc
nop
cmp
pushf
inc
in
cmp
xchg
pop
dec
sbb
push
aas
cmp
lcall
pop
mov
add
and
dec
xchg
push
inc
mov
es
add
int
aad
xor
adc
in
adc
ret
cmpsb
jle
cltd
mov
cmp
cwtl
loope
xchg
lret
xchg
mov
std
lods
sahf
lea
rclb
aad
pop
dec
xchg
loope
push
into
cmc
int3
repz
and
insl
sub
sti
pop
xchg
push
int
in
mov
pop
jmp
push
dec
dec
sub
cmp
rolb
add
push
ljmp
scas
push
mov
or
xchg
cmp
insl
add
mov
aad
es
mov
lds
repz
fnstcw
mov
jnp
je
mov
jmp
cmp
sbb
jmp
int3
cltd
mov
fincstp
and
add
dec
mov
push
nop
loope
jl
inc
aaa
popf
push
jp
scas
aad
adc
push
je
push
div
fdivs
adc
adc
popa
out
xchg
pop
mov
cmp
les
cmp
test
in
push
inc
cmc
sbb
popa
ret
pop
xchg
dec
jne
cltd
push
into
repnz
cs
push
sub
movl
cmp
push
movsb
jge
iret
sbb
popa
and
and
pusha
mov
ljmp
int3
xchg
out
jp
test
fbld
imul
inc
in
arpl
jg
pop
testb
test
xchg
call
in
mov
fwait
cmp
pop
fnstenv
xchg
jno
fmuls
mov
test
inc
popf
or
mov
mov
clc
cmc
mov
cli
js
ja
pop
sti
or
xchg
ss
cwtl
cmc
aad
xorl
push
gs
cli
push
push
imul
std
mov
movsl
jne
or
cmp
cmp
gs
sti
pop
add
arpl
xchg
pop
pop
sbb
pushf
shrl
sbb
mov
lock
mov
jle
xor
js
xchg
mov
jecxz
rclb
sub
dec
cmc
mov
jo
lock
jo
push
lods
mov
pusha
or
sahf
loop
imul
out
stc
test
stos
adc
std
mov
add
out
xchg
mov
mov
les
pop
xor
jl
adc
sahf
gs
aad
enter
and
in
shlb
leave
imul
cli
stos
test
imul
pop
mov
xchg
jnp
sbb
push
xchg
dec
aad
out
addr16
or
js
and
mov
aad
mov
add
sbb
mov
push
enter
mov
xchg
push
js
into
jno
test
hlt
xchg
fs
xchg
push
mov
xor
sti
add
lods
pop
aad
xlat
stc
dec
cmp
and
shrb
and
dec
push
cmp
int
loop
icebp
cmp
enter
pop
jo
in
cmp
pop
adc
jmp
cmp
bound
jg
mov
mov
imul
nop
pop
pop
mov
push
js
mov
mull
pop
mov
push
adc
jnp
pop
jnp
arpl
aad
pop
push
cmp
lcall
pop
sub
jmp
movsb
aad
aam
lock
int
or
daa
xchg
push
stos
dec
inc
cmpsb
lds
cmp
jb
mov
pop
in
addl
js
cmp
aas
xchg
sbb
jl
arpl
nop
loope
stc
sub
pop
js
fst
int
mov
and
ljmp
clc
test
push
movsl
xchg
out
and
outsl
cmp
cmp
lds
add
push
jb
xchg
mov
xchg
enter
setne
mov
xchg
sarl
cmp
sbb
sub
and
xchg
push
ret
pop
popa
push
and
and
xchg
lret
inc
aad
xor
pop
jp
scas
popf
call
mov
pusha
filds
cmp
in
xchg
sub
adc
push
jnp
loopne
lods
inc
loop
xchg
add
ficoml
xchg
xchg
fld
scas
rcl
movsl
sbb
sbb
dec
jecxz
outsl
test
adcb
cmp
push
aad
jp
adc
inc
pop
xchg
push
stos
cmp
xchg
test
mov
xchg
imul
js
popa
add
mov
int
cli
mov
xor
mov
aam
jge
mov
fdiv
mov
mov
and
repnz
cwtl
test
and
dec
out
loopne
mov
cld
mov
sub
popf
cmp
shrb
orb
cmp
and
adc
lret
cmpsl
pop
and
cmp
inc
mov
sbbl
dec
fidivrs
jmp
push
sub
cld
xchg
xorb
fnstcw
les
cmovbe
stc
stos
rorl
out
rorl
mov
jne
add
jbe
mov
test
and
push
lds
pop
int3
in
inc
shrb
sbb
dec
push
data16
shrb
push
xchg
add
mov
xor
adc
lods
in
je
xlat
cld
mov
roll
out
dec
jne
dec
sub
cmp
mov
adcb
in
int
xchg
setne
pop
xchg
and
xorl
cli
jbe
andl
adc
out
xchg
jne
and
add
sub
inc
ja
imul
dec
movnti
aad
push
jp
stos
movsb
add
mov
arpl
cli
and
rdmsr
jnp
mov
loopne
popf
in
and
sub
call
jmp
jge
jno
stc
leave
jmp
push
sbb
mov
scas
cmc
pop
cmpsl
rcrl
xchg
mov
clc
inc
call
test
pop
jge
add
cmc
js
add
or
addr16
inc
cmp
cmp
jns
push
cwtl
jge
gs
add
mov
popf
mov
inc
push
dec
imul
mov
sbb
cmpsb
ja
into
movsl
pop
popf
add
incl
out
add
aam
and
push
into
inc
push
pusha
dec
push
mov
fiadds
cmpsb
pop
or
scas
lret
call
cmp
push
jmp
popa
sbb
repnz
dec
aad
xchg
cmc
lods
sbb
test
jne
pop
mov
xchg
sub
stos
xchg
xchg
sbb
jg
cmp
cld
stos
repz
push
jecxz
rcll
dec
lods
adc
push
gs
js
ffree
push
dec
lret
jmp
cmp
adc
lret
cmpsl
fdivl
enter
and
or
jbe
mov
and
sbb
or
int
rorb
hlt
pop
lods
xchg
jno
scas
fimuls
scas
and
movb
pop
and
dec
sahf
sarb
or
lcall
hlt
test
jmp
xchg
cmp
or
xchg
add
test
nop
ljmp
cmp
int
js
mov
mov
addr16
ljmp
mov
stos
xchg
mov
xchg
pop
inc
data16
sub
call
add
ja
in
out
int
xchg
je
pop
mov
ret
pop
inc
popa
stc
add
cmc
aaa
jmp
lea
testl
scas
add
dec
push
cmp
inc
add
dec
inc
pop
sbb
adcl
callw
dec
adc
mov
pusha
iret
dec
out
sarl
loope
fwait
pop
inc
mov
cmp
pop
lcall
mov
rcrw
imul
jnp
fisttpll
sub
idivl
xchg
shll
rcll
mov
xchg
call
out
mov
mov
in
sub
cmp
lods
stc
int
addl
in
lods
stc
clc
jl
cwtl
jp
pushf
movsb
sti
int3
cld
or
cmp
fsubl
ret
jb
mov
lcall
repnz
stos
mov
mov
cmpl
ja
adc
daa
cmp
in
jl
inc
xor
mov
cmovle
xchg
push
shl
into
popa
leave
mov
iret
cmc
pusha
or
jmp
xor
mov
repnz
mov
inc
shll
pop
lahf
int3
aad
insl
mov
or
mov
sub
aad
in
test
mov
mov
cmp
sub
cmp
arpl
and
cmp
cltd
popf
notl
mov
mov
xchg
xchg
push
in
shr
cmpsb
imul
lods
movsl
mov
xor
push
and
add
push
cmp
enter
or
lods
cmp
push
and
xchg
nop
cli
aad
xchg
jno
sbb
jbe
dec
cmc
dec
in
jp
pop
les
mov
sbb
xchg
sbb
out
adc
inc
iret
mov
sub
cmp
divl
jle
mov
xchg
lret
nop
insl
mov
pop
pause
pop
xor
pop
and
jle
jnp
jno,pn
ss
sub
dec
scas
adc
mov
int
mov
out
lods
jns
addl
cmp
clc
loopne
testb
scas
xor
jns
dec
sarl
outsl
jmp
and
ret
or
and
jb
testb
xchg
cmp
add
nop
sbb
sbbb
xchg
dec
test
test
lea
add
lods
sub
test
int3
cli
iret
mov
push
int
mov
call
add
lahf
imul
dec
aad
push
lds
adc
jmp
add
clc
fiadds
loopne
dec
xchg
xorb
sbbb
pop
loopne
test
pop
pop
or
sti
ret
mov
div
mov
and
movsl
push
mov
test
jns
loopne
add
outsl
mov
iret
push
lods
mov
mov
inc
adc
sbb
in
out
dec
cmp
push
inc
dec
mov
mull
jl
xchg
rorb
pop
push
in
xchg
jge
fmuls
cmp
pop
adc
push
lret
popl
and
imul
negl
jl
push
and
enter
jo
out
xchg
xchg
int3
shl
int
les
mov
sbb
lods
xchg
lock
mov
dec
in
mov
jecxz
int
push
jns
sbb
fnsave
pop
sahf
or
scas
add
mov
out
testb
or
into
shrl
fwait
cmp
jno
int
jo
cwtl
cmc
sub
jbe
add
jb
cli
sar
sbb
mov
rorl
xchg
cmp
push
aad
sub
sbb
pop
dec
mov
lahf
push
dec
les
xor
mov
dec
js
jmp
mov
cmc
pushf
or
adc
dec
adc
mov
xchg
int3
cmp
sub
jle
mov
push
xchg
push
xchg
mov
insl
dec
in
hlt
mov
or
jecxz
test
sub
add
fists
adc
cmc
mov
add
inc
xchg
out
fisttps
lock
mov
stos
jno
mov
mov
and
out
outsl
mov
mov
dec
cmp
push
cmp
out
xchg
adcb
push
push
mov
or
xor
inc
or
sub
mov
add
xchg
lock
xchg
std
and
xlat
arpl
add
cmc
das
jg
dec
sub
and
fwait
xor
inc
rcl
jns
jl
loopne
sbb
sub
leave
ljmp
in
sbb
rorb
lods
xchg
inc
jp
and
out
cmpsb
leave
jno
fidivl
sbb
xchg
inc
rclb
mov
mov
or
out
adc
mov
in
pop
packuswb
or
lods
fadd
adc
mov
mov
int
fcmovnbe
cmp
mov
push
sti
push
aaa
cli
xlat
mov
pop
adc
jae
inc
stos
cmp
rorb
mov
test
adc
pop
call
add
push
sub
rcrl
and
gs
stos
cmp
insb
xchg
mov
pop
sti
jp
adc
pusha
fldl
cmc
xchg
mov
push
xorb
fs
push
add
insl
dec
adc
add
mov
int3
outsb
ljmp
push
inc
or
ror
pop
dec
adc
insb
pop
mov
mov
mov
ret
js
jbe
aam
dec
or
sub
mov
or
sub
push
push
push
jmp
int
dec
xchg
sub
mov
pop
les
dec
sbb
int
jnp
clc
pop
aad
and
adc
cwtl
xchg
ss
sbb
cwtl
je
inc
sub
push
into
cs
pop
and
je
out
ljmp
in
push
or
cmp
loope
inc
call
bound
idivl
aad
push
mov
sbb
daa
add
gs
testb
sahf
cli
imull
lea
ds
loope
mov
aas
or
aaa
jno
mov
fwait
hlt
dec
iret
inc
lods
inc
js
out
jmp
cld
cmp
sub
arpl
pop
pop
dec
stos
aad
sbb
and
lcall
int
or
mov
jle
mov
jmp
mov
jmp
add
outsl
jnp
aad
pusha
sub
mov
ljmp
cs
lea
jmp
shr
cmp
add
mov
aas
lahf
into
das
mov
mov
movsl
mov
cmp
cmp
cld
cmc
xor
divl
mov
insl
push
push
mov
or
adc
and
push
mov
cmc
jl
mov
pusha
bound
and
andl
push
clc
mov
inc
sub
addl
imul
stos
imul
fs
jae
inc
xlat
rol
in
and
mov
add
adc
in
aam
outsb
cmp
lcall
shl
outsl
pop
mov
cld
mov
addr16
ret
fildl
call
xor
imul
imul
sub
cmpsl
jne
dec
fiadds
in
imul
clc
jnp
lock
adc
cs
pop
xchg
into
push
popa
pop
aaa
xchg
sub
imul
mov
adc
xchg
or
adc
sub
adc
or
cmpb
shl
bound
out
js
inc
outsl
and
mov
adc
inc
mov
mov
inc
lahf
mov
out
andl
cmp
cmp
out
adc
nop
shl
inc
push
dec
and
in
push
sahf
mov
lods
or
lock
loope
in
or
mov
xor
sub
movsb
xchg
mov
in
mov
mov
sub
popf
cmp
repz
scas
xchg
rorl
frstor
fsts
push
hlt
fiadds
mov
sub
xchg
lea
cmc
pushf
push
mov
dec
mov
aad
imul
lock
in
push
int
xchg
ret
xor
and
cltd
pop
popf
outsl
into
out
or
loopne
cmp
dec
aam
sub
mov
fimuls
shl
incb
sub
pusha
xchg
stc
into
cltd
push
loope
sub
insl
imull
sbb
sbb
lods
push
cmpsl
and
test
jle
hlt
sub
addl
and
or
in
outsl
xchg
mov
mov
pinsrw
jg
repnz
add
mov
mov
dec
iret
mov
adc
or
or
aad
dec
fsubrs
jecxz
fstpt
test
mov
jno
fisubl
repnz
in
out
add
mov
pop
sbb
rcrl
mov
mov
cmp
cmpsb
xchg
xor
mov
gs
jns
std
adc
inc
out
xchg
fwait
cmp
ss
movsl
push
cs
push
adc
mov
jg
iret
in
pop
das
sbb
jnp
je
lods
pop
inc
iret
cmc
mov
ss
cmp
adc
xor
mov
cmpsl
inc
js
loop
xchg
jae
test
ret
push
add
sbb
mov
call
add
pop
sub
mov
insl
sbb
jmp
ss
aad
aaa
mov
sub
lret
mov
pop
sbb
ret
mov
lds
cwtl
mov
mov
xchg
pop
mov
and
jmp
outsl
push
mov
cwtl
ljmp
mov
xor
inc
or
pop
and
sbb
jmp
add
add
cmp
mov
cmp
adc
lret
pop
insl
jae
clc
adcb
test
inc
adc
sti
pusha
add
testl
cli
pushf
ljmp
shrl
pop
dec
pop
jbe
std
xchg
mov
sbb
xchg
xor
mov
pop
out
ss
negl
out
subb
pop
fdivrl
and
push
xchg
xor
outsl
cld
sub
lods
cmp
pop
mov
fimuls
mov
inc
lea
sahf
sub
push
xor
pop
push
test
inc
loop
xchg
pop
pop
int
pop
or
xchg
sub
mov
sub
sub
test
sti
or
int3
call
scas
push
arpl
mul
aad
stos
sub
sti
in
pop
and
or
fnstcw
push
testl
push
sbb
jo
pop
aad
mov
and
dec
cltd
imul
dec
pop
scas
insb
cmpl
push
cli
push
or
xor
push
mov
dec
aad
fstl
sub
scas
inc
comiss
xlat
int
cli
pop
divl
adc
and
notb
jno
sub
jle
jmp
jmp
mov
bound
sti
aad
and
movsl
inc
push
add
mov
jb
idivb
js
bswap
cmp
fwait
loope
mov
xor
push
inc
andl
pop
outsb
test
jo
sti
loope
int
inc
gs
std
imul
jmp
inc
sar
outsl
aad
fstps
into
mov
push
adc
or
dec
rcll
rorb
mov
loope
mov
adc
jecxz
fs
lea
scas
int
aad
mov
sbb
cmpsb
xchg
divb
cwtl
in
filds
dec
pop
mov
nop
pop
push
stos
pop
pop
out
sub
cwtl
mov
rclb
outsb
jg
mov
jmp
push
mov
sub
iret
cli
inc
cmp
push
adc
test
jle
stos
aam
mov
jnp
xchg
inc
push
pop
cwtl
mov
lods
push
das
imul
xchg
fcompl
test
mov
sub
pop
or
or
xchg
inc
movb
nop
pusha
mov
mov
sub
jle,pt
sbb
maskmovq
testl
divb
clc
lods
add
out
cmpsl
jae
push
xor
push
and
jo
ret
cmp
dec
or
inc
push
stos
out
dec
hlt
scas
push
clc
jg
mov
lods
sub
push
push
int
mov
mov
arpl
ret
std
mov
outsl
jl
pop
gs
in
xchg
jnp
adc
sbbb
stc
outsl
push
mov
push
push
cmp
mov
maxps
out
std
inc
push
mov
push
mov
xor
sub
cmp
or
push
ret
or
test
inc
jg
push
out
lock
xor
or
mov
sti
test
sub
xchg
add
push
js
dec
sub
jno
push
jg
pop
jne
add
rorb
jne
les
add
and
push
repnz
or
out
push
or
js
test
mov
mov
and
int
mov
cltd
hlt
int3
jmp
push
stc
test
and
sahf
adc
push
push
cltd
js
jp
js
xchg
jl
jo
inc
xchg
in
mov
aam
fsubrs
cli
xchg
xor
lods
or
pop
bound
mov
aad
popf
in
adc
push
lods
cld
pop
and
jl,pn
faddl
mov
mov
inc
and
sbb
adc
or
or
imul
xchg
movsl
mov
sub
dec
pop
jne
test
push
mov
lea
inc
in
sub
test
jmp
aad
add
dec
imulb
stc
inc
int
aam
jge
loop
sub
mov
jmp
nop
test
mov
inc
pop
inc
cmp
cli
jmp
push
push
shrl
enter
cmp
dec
adc
mov
cli
mov
adc
inc
jb
or
adc
xchg
or
jmp
mov
lods
scas
and
setge
popf
cmp
push
shrl
movlhps
jno
inc
adc
lahf
mov
push
aad
sub
lcall
lods
inc
setne
fs
sbb
xor
cld
and
jb
rolb
cli
out
cmc
jg
pop
push
mov
mov
adc
mov
iret
mov
cmpsb
or
jp
inc
or
sti
inc
mov
mov
divl
pop
fisttpl
xor
faddl
xchg
jg
add
and
push
test
jp
cmp
jb
mov
jo
mov
int
mov
enter
cmp
in
sub
stos
popa
sarl
jns
fucomip
xor
and
leave
cvtpi2ps
add
in
filds
jb
push
sbb
xor
fisubrs
enter
les
test
mov
nop
repz
xor
mov
out
rorl
mov
test
cmp
add
aas
imul
and
mov
and
in
xchg
dec
cwtl
sbb
jae
aad
clc
mov
int3
sbbl
pop
addr16
fnstcw
dec
pop
jno
mov
sub
and
push
adc
and
aad
or
popa
dec
push
leave
mov
lret
inc
cmp
bound
mov
das
xor
mov
inc
dec
xchg
sub
addr16
xor
out
xlat
add
lods
scas
test
cld
test
mov
mov
out
jge
cltd
lcall
push
addr16
sub
mov
aaa
or
xlat
inc
push
movl
pushf
das
sub
cld
dec
adc
out
or
popa
mov
and
fimuls
sbb
cmp
inc
ja
jmp
loop
repz
xor
xchg
add
movsb
sbb
dec
sbb
fbstp
in
jle
lea
out
jae
mov
push
push
test
lods
dec
push
fwait
shlb
shrb
cmp
and
in
cmc
mov
lods
shlb
std
js
arpl
scas
out
ficoms
outsb
into
push
sub
aad
cmpsl
xchg
add
cmp
jl
pop
fildll
in
lods
lods
and
into
imul
lahf
mov
xchg
cmp
mov
fwait
aam
cmc
icebp
out
ja
mull
mov
cs
xchg
repnz
into
and
repnz
jmp
ja
dec
out
daa
jle
in
sub
rclb
outsl
inc
mov
dec
or
cwtl
rorl
pop
lahf
fsubr
sub
dec
xchg
sbb
ficoml
jp
in
fildll
adc
mov
sub
loope
out
aaa
pop
gs
push
inc
mov
movzwl
sarb
cmpsl
popa
movsb
iret
mov
cmpsb
mov
addr16
in
and
and
shll
shl
cmpsb
cmp
insb
mov
mul
pop
cmp
add
in
lcall
aam
inc
imul
cli
lods
std
int
push
fwait
lea
jne
ja
nop
lds
xchg
clc
shrb
sbb
xchg
movsl
mov
imul
imul
pop
stc
xchg
jns
insl
hlt
popa
mov
push
cmp
arpl
mov
or
add
mov
mov
out
add
cmc
xor
stos
xchg
stos
jmp
jno
jmp
sbb
int
adc
orb
leave
push
xchg
mov
mov
pop
int3
xchg
cmp
std
iret
dec
pop
cmc
test
mov
adc
lods
aad
pop
call
xlat
add
dec
sbb
lods
in
lcall
mov
testl
or
mov
data16
test
sub
out
or
push
pxor
push
or
stc
into
ja
cmp
mov
popa
ss
out
push
push
push
mov
xor
pop
lcall
push
stos
push
fdivl
lds
fildll
cs
mov
inc
scas
xor
movsl
jne
push
std
pop
jbe
mov
mov
mov
jecxz
loop
add
out
popa
pop
stc
and
mov
adc
mov
fsts
sub
out
ljmp
or
les
or
add
cmp
jp
or
add
cmpsb
in
adc
loop
psrld
pusha
add
sub
out
and
jge
inc
inc
pop
cmpsb
mov
or
cli
jno
dec
pop
stos
push
addr16
lds
movsb
dec
push
gs
jle
inc
and
xchg
cmc
xor
jnp
dec
ja
dec
add
jne
xlat
pushf
mov
daa
push
or
cmc
push
pop
or
cmp
call
prefetchwt1
addr16
and
pop
cmp
sub
fnstsw
daa
jmp
dec
insl
cmp
outsb
ss
popa
dec
xor
imul
add
cmp
call
out
int
xchg
jo
div
iret
and
sub
pop
push
in
jge
cmp
cmp
imul
stos
jno
leave
mov
fsubrs
adc
ds
fndisi(8087
rcll
ljmp
mov
fs
push
cmp
pusha
and
add
cltd
pop
rcrb
jp
es
mov
xlat
cwtl
mov
xchg
sub
sti
dec
lock
mov
aaa
adc
push
sarl
mov
std
lahf
rcll
mov
jnp
or
mov
and
jg
jae
inc
xchg
testb
mov
addr16
and
adc
gs
jo
jno
xchg
sti
int3
arpl
fidivl
insl
ljmp
pop
loop
fisubrl
cmpl
addr16
out
xor
add
lods
enter
cmp
mov
sbb
repnz
out
sbb
insb
push
idivl
cmc
push
loopne
add
xchg
and
jns
bound
int
xchg
dec
mov
push
push
js
push
cld
xor
in
inc
mov
inc
inc
insl
sub
sub
idiv
xchg
cwtl
sbb
int
aad
leave
aam
xlat
out
and
sti
sbb
imul
stos
out
pop
sub
mov
les
jg
inc
xchg
push
lods
cltd
jp
mov
push
mov
popf
cmc
pop
dec
mov
ret
popa
cmp
out
xchg
or
nop
fildl
movsl
and
mov
mov
sahf
aad
push
and
lcall
ljmp
popa
jge
jg
inc
jecxz
stos
xchg
clc
test
jo
sbb
mov
jb
jmp
shl
adc
sub
mov
pop
outsb
xchg
xchg
movl
jge
sub
jns
jecxz
pop
cmp
sbb
xlat
or
xor
mov
adc
mov
add
jp
adc
movsb
imulb
cmpsl
lret
mov
notb
pushf
mov
mov
lods
and
ja
cmp
push
sub
fimuls
sarb
dec
js
cld
dec
iret
int
in
mov
test
mov
add
add
loop
repz
mov
jno
mov
ficompl
xchg
push
nop
ljmp
js
xor
dec
out
leave
jb
jo
cmc
xchg
inc
jo
mov
in
sub
int
xchg
adc
aad
add
dec
push
mov
enter
add
loope
push
pusha
cmp
cld
and
stc
roll
or
rcrl
aam
cmp
in
insl
lods
inc
int3
xor
mov
push
adc
clc
sub
and
ja
inc
xor
or
and
jno
jns
shll
sarb
stos
add
jecxz
movsl
xchg
out
jno
adc
in
or
loopne
adc
scas
cltd
xor
or
ret
rcrl
inc
inc
dec
notl
movsl
sbb
cmc
clc
lods
in
pop
movsb
sub
lods
or
dec
cmc
aam
push
fistpl
cmp
xor
xchg
mov
popf
and
icebp
cli
push
inc
insb
sub
std
add
mov
dec
call
jo
cmp
sub
and
push
arpl
sti
cli
pusha
cmp
mov
push
sbb
movsb
test
popa
das
cmc
mov
inc
lds
call
pop
push
add
mov
jge
in
push
sti
into
push
fistl
loop
mov
mov
incl
and
ds
std
mov
and
popa
sub
cmp
lret
mov
scas
adc
xor
xchg
push
or
or
push
test
lcall
add
xchg
mov
daa
dec
jmp
call
fs
push
push
mov
push
jbe
into
sub
cmp
mov
lcall
sub
mov
call
vpsllq
push
daa
addr16
inc
lods
and
and
dec
cmp
mov
or
pusha
adc
xor
repz
insb
nop
out
or
pop
enter
sahf
jp
jecxz
call
jo
fwait
xchg
sbb
lock
adc
mov
push
cmc
aas
movsl
cld
repz
lret
xchg
inc
popa
cmp
int
or
lahf
xchg
ja
notl
scas
movsb
jo
pop
sub
sbb
jecxz
ss
mov
xor
in
sbb
mov
xchg
inc
imul
fdivrs
in
out
lds
dec
ja
mov
sub
das
aas
pop
mov
cmp
jl
test
stos
stos
xor
adc
mov
add
sbb
fcomp
jo
xchg
ret
push
cmc
inc
push
imul
fwait
loopne
mov
add
pop
aaa
sub
aad
cmp
xor
or
fidivrs
lock
cmp
pop
call
pop
sub
call
jne
lcall
dec
sub
cmc
add
leave
out
in
adc
cmpsl
mov
inc
cmp
in
movsb
jle
dec
insb
out
in
dec
adc
enter
movsb
xchg
dec
xchg
push
mov
push
aaa
test
movsl
lret
lds
popa
sbb
xor
aam
sub
lea
mov
je
sub
mov
xchg
rolb
pop
ja
outsl
adc
mov
cmp
daa
sbb
mov
inc
flds
push
call
push
jl
out
inc
push
sbb
outsl
pop
imul
mov
xchg
jp
pusha
jmp
mov
jo
scas
sti
pusha
mov
in
add
inc
jb
pop
mov
fbld
in
lods
arpl
int3
or
int
inc
dec
dec
and
mov
cmp
rorb
scas
inc
xlat
xor
clc
mov
inc
fdivr
sbb
inc
shlb
mov
out
cld
xchg
adc
cmpsb
andb
push
jg
xchg
mov
cltd
les
mov
int
jo
push
mov
leave
pop
fcmovne
icebp
xorl
cltd
xchg
pop
pusha
lods
pop
sahf
in
xor
fcoms
xchg
lds
cmp
lock
leave
clc
sbb
pop
ret
scas
data16
or
xchg
repz
test
and
pop
mov
cmp
out
mov
je
leave
in
and
mov
sub
push
jp
inc
lgdtl
mov
jb
stos
xlat
mov
cmp
inc
call
aad
xor
inc
jl
cli
cmc
xor
inc
in
mov
movsl
hlt
add
sub
incb
push
fbld
call
lahf
dec
inc
xor
jle
fsubp
ror
out
sub
push
jmp
mov
es
push
scas
jno
and
mov
sbb
jecxz
test
lock
cmpb
and
mov
mull
in
sbb
mov
or
or
iret
jbe
clc
mov
sub
push
out
cs
punpcklbw
stos
push
sysexit
loope
pop
push
ja
cltd
mov
mov
inc
mov
or
popa
or
jge
sbb
add
cmc
dec
frstor
jge
iret
fnstenv
inc
or
arpl
pop
lea
mov
push
push
mov
mov
sub
dec
std
pop
pop
dec
mov
int
dec
fwait
xchg
inc
rclb
jns
es
testb
repz
movsb
dec
cmp
ss
sub
pop
cmc
adc
repnz
jnp
sbb
and
out
sbb
div
push
sbb
std
cmpsl
and
push
jecxz
loop
sti
aad
mov
sub
cmp
mov
and
xchg
scas
push
xchg
and
push
inc
push
push
rolb
insb
les
sub
sbbb
aam
inc
in
adc
test
xchg
rclb
shrl
bound
xchg
push
inc
popa
lds
cwtl
mov
inc
lret
adc
add
int
xorb
lods
push
pushf
pop
or
mov
std
test
dec
in
mov
lret
loop
mov
jnp
xchg
xchg
inc
sub
mov
cmp
push
mov
setp
test
or
aad
dec
rorb
cmp
cli
adc
xor
mov
push
aad
das
out
pop
dec
stos
xlat
pop
mov
pop
es
jmp
in
adc
jmp
fnstsw
sbb
loope
fbstp
movsl
mov
int
js
fidivrs
mov
mov
in
and
jmp
add
push
jg
mov
fs
adc
imul
push
push
jmp
xchg
add
fdivrl
stos
jp
movsl
call
xchg
addps
int3
inc
in
stc
adc
or
pop
jb
jns
xlat
or
cmc
jmp
jl
out
daa
mov
or
imul
jge
mov
lods
jmp
push
pop
addr16
data16
rorb
adc
pop
dec
div
lea
xorl
fsubl
pop
rcrb
imul
pop
mov
mov
push
mov
cld
ret
xchg
push
xor
test
cmc
xchg
mov
dec
aad
sub
push
sti
clc
daa
lret
add
popa
mov
jg
les
das
mov
sahf
nop
add
cli
push
sub
sbb
inc
add
fildll
mov
imul
push
int
adc
lcall
push
dec
and
dec
lods
inc
xchg
lcall
cmc
jne
out
test
arpl
mov
xchg
les
imul
inc
test
or
scas
mov
cwtl
mov
xor
and
xlat
sti
and
js
les
or
dec
or
mov
mov
mov
mov
cmp
stos
mull
nop
lods
cmp
cmp
mov
push
cli
movsb
fimull
mov
add
in
sbb
outsb
xchg
mov
out
cmc
int
mov
pop
mov
cwtl
movsl
pusha
jne
nop
xchg
orl
lods
mov
push
dec
inc
lea
fidivs
filds
xchg
add
das
mov
mov
sbb
jno
push
incb
adc
mov
sub
add
inc
dec
jnp
notb
sti
xchg
es
pop
aad
in
or
pop
popf
mov
cmp
jmp
inc
jns
cmp
daa
movb
inc
jg
sti
xchg
or
neg
cmp
and
cmpsl
pop
jl
and
int
sbbb
sub
inc
dec
jl
dec
dec
popf
das
negl
int3
movsl
std
aaa
movb
loop
lret
push
lds
dec
sub
mov
das
scas
ss
mov
xor
xchg
lret
lods
xor
jmp
add
push
cmp
cmp
mov
and
std
and
xor
in
push
mov
test
xor
or
mov
mov
andb
stos
jl
xchg
push
mov
cwtl
pop
dec
mov
movsb
xchg
into
in
aad
inc
and
mov
pop
lds
sbb
sbb
stc
pop
or
cmp
cmc
insl
jb
pop
in
out
pusha
jl
call
loopne
scas
cld
dec
pop
inc
movsl
insl
call
adc
jbe
in
pop
sub
mov
aas
pop
and
xchg
and
les
pop
test
and
inc
jecxz
or
xor
incb
insb
pusha
fxch
ljmp
mov
mov
popa
mov
addr16
sbb
iret
and
sahf
jge
xchg
mov
sbb
adc
sub
mov
xor
xor
inc
icebp
xchg
imul
scas
rcrl
jo
jbe
xchg
sbb
fmuls
shrl
cmp
aad
cmp
dec
in
mov
cmpsb
mov
test
cmp
cmp
sbb
lods
add
fucomip
cmp
in
aad
cmp
jle
push
push
cs
ljmp
mov
mov
pop
mov
cmp
sub
inc
lock
push
imul
mov
mov
lods
fcompl
lock
add
jl
cmpsb
jne
cmc
xchg
std
enter
js
mov
xchg
scas
add
mov
inc
movsl
fbld
mov
inc
push
out
test
mov
imul
mov
test
pop
stos
push
add
popf
shr
stc
fistl
in
inc
jg
push
stos
mov
ret
or
push
cmp
push
or
inc
cmp
in
pushf
and
push
jmp
pop
test
popa
xchg
cmp
mov
push
mov
outsb
shrb
mov
imul
dec
adc
cmc
dec
xchg
mov
idiv
lods
sub
mov
xchg
push
popa
or
in
imul
mov
cmc
das
or
call
outsl
jno
and
sti
adc
add
subl
rcl
mov
push
hlt
mov
call
cli
and
or
gs
or
into
or
dec
sbb
jb
and
data16
jnp
aad
jg
jg
jle
cmp
mov
or
mov
addr16
pop
gs
xchg
jecxz
dec
clc
sub
mov
cmc
inc
dec
out
push
pop
into
mov
shlb
loopne
lods
call
imul
mov
loopne
pop
xchg
imul
and
daa
pop
pop
and
jle
cmp
pop
inc
lahf
mov
inc
mov
loope
cmp
ja
test
or
outsb
fdivr
xor
inc
in
adc
and
cmp
arpl
dec
int
loop
arpl
testl
loop
adc
lret
into
dec
xchg
fsubrs
insb
cmp
xchg
mov
shll
mov
sar
call
or
imul
scas
sbb
push
pushf
hlt
push
adc
dec
jmp
push
or
test
sbb
pushf
imul
cmp
sbbl
cmpsb
adc
sti
enter
jbe
pop
sbb
out
cmc
xchg
fwait
or
xchg
mov
iret
mov
xor
gs
xchg
repz
lea
cmp
cmp
add
push
cmpsb
rclb
std
pop
add
adc
jno
adc
adcb
lock
mov
xchg
outsl
sbb
dec
lods
fwait
jns
ficompl
aad
inc
push
push
inc
testl
mov
mov
xor
icebp
sbb
sbb
cmp
and
test
rcrl
jmp
addl
flds
inc
bnd
cmp
jns
clc
imul
pop
pop
and
sbb
out
push
ret
mov
dec
xchg
rol
pop
mov
inc
vcmpeq_osss
rorl
imul
cmc
les
mov
push
dec
repnz
cmp
loopne
out
bound
mov
mov
mov
xchg
mov
inc
jns
hlt
mov
jg
xchg
mov
push
test
dec
ret
add
repz
mov
cmp
imul
dec
test
out
and
mov
mov
scas
and
enter
dec
adc
test
mov
xlat
push
add
fmul
mov
mov
inc
adc
gs
add
fstpt
cmc
cmpsb
adc
mov
mov
xchg
int
stos
cmp
sub
push
cmp
jg
in
hlt
xor
faddl
cmc
iret
jl
enter
xlat
jo
and
mov
cmp
fildll
test
mov
push
jb
jmp
pop
mov
adc
shll
dec
lods
pop
mov
scas
scas
dec
push
roll
ret
jp
push
mov
mov
repnz
pop
xchg
fcmove
mov
dec
into
loopne
loope
call
pop
call
lcall
in
mov
adc
outsl
aad
jnp
jne
lock
and
fwait
pop
scas
bound
nopl
mov
push
out
pusha
jae
aad
or
adc
or
fnstenv
mov
pop
in
ficompl
imul
es
push
xorl
adc
and
and
hlt
inc
and
jmp
pusha
xchg
stos
jmp
push
lods
sbb
rclb
xchg
add
push
push
test
inc
pop
cltd
mov
popl
call
mov
shr
out
enter
ds
mov
push
sti
add
dec
lret
sub
inc
out
bound
mov
pop
pop
add
and
cld
sub
jno
inc
cmc
xor
repz
mov
jmp
cmp
shrb
xchg
shufps
sub
cmp
add
xchg
inc
std
mov
int
test
jns
out
js
cmp
aad
pop
negl
and
cs
int
mov
jno
movb
xchg
push
add
lahf
jmp
aam
stc
in
and
pop
test
cmc
or
pop
xor
je
test
lods
jge
cmp
lods
movl
push
loopne
call
lods
mov
and
cwtl
out
sbb
sub
and
dec
ljmp
pop
xor
mov
jg
fistpll
inc
jb
iret
mov
dec
cmp
mov
fstl
sub
jmp
sti
xchg
scas
pop
jecxz
cwtl
leave
mov
loope
cmp
fstl
insl
aas
mov
jp
lods
mov
xchg
fimull
jmp
imul
xchg
cmp
xor
or
cmp
or
add
or
cmp
aaa
pop
inc
orl
jp
mov
jle
pop
sub
jb
fnstsw
aas
subl
push
icebp
stos
xchg
jg
daa
ss
nop
xchg
sarb
inc
movsl
mov
or
lock
imul
popa
popf
int
sahf
imul
push
push
mov
idivb
movsb
lcall
xchg
mov
push
dec
scas
movsl
cli
cmp
xor
cmc
mov
jp
scas
push
jne
jmp
dec
or
into
adc
push
push
mov
push
push
mov
movsb
sti
je
xor
lods
jl
dec
loopne
cmc
xchg
shlb
push
sbb
jg
jmp
mov
lods
mov
push
in
push
je
inc
scas
int
and
push
mov
testb
push
add
test
fwait
aaa
loop
pop
es
test
push
mov
mov
or
add
or
sbb
mov
sbb
xchg
dec
icebp
test
insl
imul
adc
ror
int
and
jg
cmp
and
mov
out
outsb
push
fisubs
outsl
aad
xchg
stc
cld
int
movsl
and
lcall
xor
rolb
cltd
xchg
mov
mov
cmp
loopne
xchg
arpl
cmp
mov
cmp
mov
lahf
in
and
cmc
movsl
fcompl
fisttpll
push
xchg
dec
ljmp
inc
test
mov
lods
pop
insl
add
xchg
out
repz
mov
push
push
mov
in
cmp
ficoms
mov
cmp
push
mov
das
inc
ds
xchg
or
dec
and
shl
add
dec
mov
stc
sti
rcrl
jnp
adc
rol
inc
and
dec
add
adc
sub
mov
or
jecxz
clc
sub
out
js
jnp
not
ret
cmp
jmp
and
loope
or
push
dec
les
iret
popa
jno
insl
jl
sbb
ljmp
lock
jl
out
scas
dec
sub
xchg
mov
push
cmp
lds
mov
mov
sarl
aad
mov
xchg
int3
pop
push
add
xor
dec
jl
jle
mov
pop
loope
gs
clc
adc
lcall
inc
adc
add
enter
xor
xor
syscall
jnp
lds
push
shl
ljmp
stos
fidivrl
cmp
cli
jp
xchg
cmp
jbe
mov
lcall
nop
xor
xchg
sti
pop
add
out
inc
push
dec
pop
jl
repz
mov
arpl
in
jp
jmp
adc
mov
ja
lahf
or
inc
mov
inc
es
int3
notl
sbb
pop
stos
rclb
sub
and
push
push
incl
pop
mov
popa
jl
aad
pop
imul
into
cmc
mov
std
int
arpl
fnsave
je
inc
inc
jge
sub
add
adc
shll
ficoms
cmp
loopne
popw
cmp
dec
jns
inc
xchg
adc
fadds
add
mov
outsl
xchg
lods
lock
add
cmp
ja
out
es
stos
pop
jg
adc
call
cmc
scas
fistps
or
mov
push
das
jmp
out
mov
xchg
push
cld
adc
dec
mov
push
stos
or
ljmp
fcomps
mov
add
out
add
push
scas
adc
test
jmp
or
xchg
jns
mov
bound
stc
mov
dec
add
push
or
sub
jns
iret
jmp
shll
out
negl
or
jo
adc
mov
jecxz
cmp
cmp
mov
sbb
popa
out
or
lods
push
and
lea
add
add
shlb
jmp
jnp
cld
icebp
popf
cmp
fsubp
std
js
lahf
int3
popf
xchg
or
call
lcall
mov
pmaddwd
arpl
inc
push
mov
push
test
js
repnz
jne
pop
jo
sbb
or
adc
jns
cli
dec
out
jmp
fsubl
xchg
inc
mov
shl
scas
or
pop
sarl
cmp
das
push
push
incb
sub
loop
or
sbb
pop
jno
adc
dec
fidivrl
sbb
ss
inc
scas
aad
add
add
int
ret
push
push
add
jmp
popf
and
iret
cmc
and
test
xor
pop
rorl
sbb
and
icebp
out
and
cmp
enter
push
sbb
xchg
mov
pop
pop
jl
sbb
lods
mov
xchg
jg
xor
shrb
pop
mov
cltd
pop
sub
adc
cmc
and
out
push
out
aad
inc
dec
adc
popf
or
mov
xchg
jl
and
inc
push
push
mov
icebp
gs
outsb
add
insb
dec
aad
ljmp
dec
gs
jg
dec
jmp
pop
jecxz
cltd
jmp
testl
cmp
aad
add
insb
sbb
jne
inc
pop
mov
test
adc
js
fisttps
add
clc
jns
repnz
test
incb
dec
fimuls
dec
mov
ror
int
xchg
mov
imul
sbb
cmp
pop
mov
mov
dec
js
out
xor
imul
xor
test
mov
js
out
iret
xor
fs
out
aad
push
sbb
sub
sbb
xchg
inc
outsb
xchg
sbb
dec
or
test
dec
xor
mov
sbb
push
or
mov
sti
insl
popa
loope
jb
cmp
fmuls
nop
fs
out
jecxz
or
call
inc
in
ficoml
loopne
cmpsl
sub
hlt
cmp
jp
mov
andb
sbb
pop
jp
rcr
sub
cmp
xchg
sarl
ss
stc
shr
imul
ja
cld
mov
aad
data16
lock
adc
inc
js
xor
mov
or
xor
fcomps
aad
jbe
xor
pop
inc
push
jle
popf
int
mov
xor
xor
inc
adc
cmc
lret
lds
xchg
lods
mov
xchg
cmp
jg
rcl
mov
sbb
cmpb
push
cmp
fistps
pop
ret
std
sbb
into
xchg
mov
mov
jns
mov
xor
bound
ja
in
in
adc
rorl
mov
fs
and
shl
ss
ljmp
ss
cmc
pop
dec
push
je
xor
lods
ja
add
test
jl
jge
out
test
fists
int
pop
out
pusha
sub
push
xlat
std
aad
cwtl
mov
or
arpl
mov
pop
mov
inc
sub
int
imull
jne
xor
xor
sbb
pop
sub
loope
pop
clc
jmp
into
scas
adc
call
sbb
pushf
mov
xor
add
push
mov
mov
shll
and
ljmp
cmc
int
mov
adc
adc
jmp
jp
out
sub
and
sub
mov
push
sbb
stos
xchg
pop
jae
xor
inc
pop
push
mov
stos
rcl
xchg
mov
inc
and
cmp
jns
mov
stc
and
jmp
push
pop
pop
mov
mov
push
fdivrs
cmp
ds
cmp
jnp
pop
adc
mov
data16
jmp
loope
cmp
jg
movsb
fisttpl
dec
or
scas
loope
mov
lods
sub
sbb
add
inc
push
nop
ljmp
shlb
or
dec
outsb
xchg
orl
add
sbb
jmp
cmc
add
pop
jno
imul
push
pop
mov
aaa
cmp
add
fs
popf
jge
push
jg
imul
and
jne
cmpb
push
dec
cli
in
and
adc
cmp
es
xor
or
push
jge
and
adc
adc
mov
pop
lock
mov
mov
cmp
mov
cmp
outsl
les
cmp
clc
jge
scas
pop
dec
outsb
cmc
and
sub
jge
mov
ljmp
insb
cmpsl
sarl
push
xchg
pusha
enter
dec
lret
mov
mov
daa
mov
arpl
xlat
xchg
cmc
fldt
incb
inc
adc
inc
cli
xchg
ret
sbb
out
ja,pn
cmp
xchg
xor
xor
mov
rcl
mov
dec
mov
or
xchg
jg
push
clc
sub
popa
jle
lods
cli
pop
xor
jo
xchg
mov
cmp
cmpb
mov
sub
cmc
jle
xchg
pop
xchg
cmpsl
cmp
addr16
mov
mov
out
add
push
daa
or
rcll
sub
sahf
rorl
sub
or
pop
dec
mov
mov
and
adc
sub
xchg
sub
adc
pusha
aad
fdivp
and
fsts
ja
in
or
sbb
cmp
or
jne,pt
out
xchg
int
lahf
and
shlb
outsl
sbb
lds
loope
fsin
sbb
scas
mov
push
pop
mov
in
ljmp
cmpsb
in
xchg
stos
mov
and
inc
insb
jnp
mov
mov
in
int
xor
cwtl
rcr
mov
and
aad
negl
sub
fwait
int3
rcrb
xchg
aad
cltd
in
jne
mov
sub
pop
mov
mov
fildl
lret
adc
notl
and
cld
clc
jnp
outsl
pop
outsb
iret
dec
out
ret
cmp
mov
lea
imul
mov
hlt
divb
cmc
fs
into
ljmp
and
testl
or
addb
push
sbb
les
aad
jbe
sti
loopne
stos
lods
jge
and
pusha
les
push
mov
ds
dec
mov
push
ljmp
daa
cmp
imul
mov
adc
jb
xor
inc
jmp
fcoml
pop
cmp
in
jecxz
aas
xchg
and
pusha
les
and
jmp
push
dec
mov
ja
dec
push
add
push
subb
or
cmc
and
aad
fidivl
mov
test
cmpsl
in
inc
loope
push
mov
out
daa
popa
and
std
lahf
cs
pop
adc
loope
and
jb
xor
mov
aad
das
jecxz
divl
sarb
and
mov
add
fildll
dec
mov
js
push
or
stc
mov
sub
cmpsb
fsubl
jge
fldenv
jbe
and
stc
fisubrs
mov
stos
andl
or
adc
subl
adc
inc
xor
adc
push
sbb
xchg
data16
scas
mov
jg
mov
lods
jmp
aas
fwait
shrb
inc
dec
hlt
aad
and
adc
sbb
adc
popa
negb
and
addr16
outsl
aad
push
pop
or
lea
and
adc
or
popf
test
mov
aad
jbe
sub
jns
push
je
loop
into
popa
inc
test
jnp
pop
jp
lret
iret
iret
mov
out
stos
popa
push
sbb
pusha
mov
jge
push
xchg
sti
push
push
cmp
out
shl
repz
sbb
mov
sbb
incb
jp
out
mov
notb
inc
and
and
mov
adc
sub
pop
aad
mov
out
pusha
sbb
push
aas
sub
xchg
scas
jns
aad
inc
shl
cmc
int
sub
std
les
movsl
adc
cmp
cs
dec
loopne
jno
ret
popf
push
addr16
or
mov
jnp
js
popa
cmp
jmp
mov
test
mov
mov
popa
aad
and
or
xchg
xor
frstor
xor
out
test
jne
dec
ficoml
cmc
mov
mov
inc
mov
xchg
cmp
mov
jge
push
psrad
cmp
aad
inc
sti
adc
je
int
xlat
sti
fbld
add
xchg
pusha
lcall
xor
jge
popa
dec
xchg
jne
dec
out
push
and
jb
jnp
stc
mov
cpuid
push
ret
rcl
repz
push
ret
leave
das
xchg
ds
cld
mov
lea
test
addr16
repz
mov
aad
cltd
inc
addb
mov
adc
and
push
sahf
pop
rcll
mov
jle
jo
inc
dec
push
imul
and
push
add
and
lods
les
pusha
or
pop
mov
xchg
push
mov
jmp
xchg
call
fstpl
xchg
in
mov
stos
imul
call
fists
adc
aad
and
inc
jmp
cmc
and
fsubrs
mov
out
jle
sub
fucomip
gs
jnp
xchg
jg
mov
mov
fwait
or
cltd
outsl
out
js
push
and
pop
in
cmc
cmp
jae
out
sti
stos
mov
push
cld
cli
sbb
movsl
and
xchg
movsb
rclb
xchg
xlat
cli
or
and
jo
mov
and
dec
imul
and
aaa
mov
adc
mul
jb
jae
aad
push
inc
jmp
enter
xor
dec
mov
insb
pushf
push
mov
jg
jle
xchg
rolb
mov
mov
or
pop
adc
les
movsl
lret
out
fiadds
xchg
push
jns
aad
push
nop
cmc
xor
pop
sub
and
test
xor
js
push
or
inc
repnz
mov
loopne
dec
xchg
push
out
test
and
pop
xlat
insb
and
cmp
push
adc
cmp
roll
adc
or
leave
push
test
pop
mov
sub
imul
push
cmp
cmpsl
stc
mov
test
jmp
xlat
popf
enter
lods
outsb
pushf
int
nop
fstl
clc
cwtl
jns
xor
movsl
xchg
sahf
shr
inc
enter
inc
aad
push
aam
and
xchg
movb
push
iret
add
jp
cmp
mov
dec
xchg
adc
push
jnp
inc
sahf
popa
mov
lds
sar
fwait
les
xor
jo
jg
jnp
jecxz
popl
test
jae
fidivrs
inc
sub
push
frstor
jae
sub
mov
lods
out
out
fmull
xchg
push
int
pop
cmpsl
fcompl
cmp
and
in
popa
fldcw
mov
dec
push
xor
xor
pop
fisttps
push
shlb
clc
jge
push
addr16
or
or
lahf
mov
outsb
js
cmc
enter
fs
out
or
jo
cli
iret
cwtl
mov
lods
jle
lods
cltd
push
dec
sub
js
or
insb
inc
pusha
sbb
aas
jge
rcr
adc
dec
add
cmpl
sbbb
or
inc
jp
or
push
shlb
push
mov
cmc
push
ds
jne
pop
or
out
mov
xor
ret
inc
lret
adc
jnp
push
cmp
add
and
sbb
rcll
nop
test
aad
int3
jns
out
push
and
sub
push
adc
pop
mov
pop
cmp
into
and
flds
clc
jno
sub
lods
lods
and
iret
jl
stc
add
or
std
mov
ret
sub
cmp
outsb
int3
mov
mov
dec
cmc
and
stos
sar
int
or
xchg
sbb
inc
fs
sahf
shll
repz
aam
lahf
xchg
gs
fiaddl
ficoml
test
andb
inc
mov
jne
mov
loopne
sub
std
jg
push
pop
sub
fildl
add
or
pop
push
outsb
movsb
mov
std
jmp
shrl
mulps
add
pop
sti
les
sar
jg
push
cmp
rcrb
jbe
es
inc
jnp
jbe
lcall
cmp
ja
pop
xor
lcall
inc
xchg
cmc
cmpsb
and
push
imul
stos
dec
cmp
icebp
je
push
jmp
adc
sub
sbb
nop
sub
sub
xchg
xor
xchg
sub
mov
pop
arpl
das
cli
mov
test
icebp
dec
xor
fwait
aad
bound
jl
popa
sub
jp
imul
fistpl
loopne
lods
xchg
dec
push
and
outsl
adc
popf
mov
add
mov
enter
in
aad
jnp
rorb
int3
lret
aam
test
daa
dec
outsl
dec
in
xchg
pusha
push
mov
bound
je
dec
sub
mov
add
dec
cmp
jnp
ret
int
fwait
mov
std
loope
and
fdiv
pushf
or
inc
orl
and
lea
xchg
call
dec
mov
popa
ja
pop
cs
scas
pop
and
outsl
lods
mov
jns
subb
dec
int
dec
popa
les
int
xor
xchg
lret
out
inc
jne
jae
mov
cmp
aad
int
cmpsb
jp
xchg
adc
sub
dec
sub
lcall
push
testl
mov
addl
outsl
add
adc
sub
and
outsl
dec
mov
pop
mov
enter
pop
loope
fsubrs
in
cmp
aas
inc
cmp
jo
mov
in
push
mov
ljmp
jb
mov
mov
imul
xor
in
stos
std
and
jg
cs
aad
testl
mov
fnsave
scas
test
mov
inc
fmuls
mov
push
iret
xor
cmp
stc
aad
icebp
jmp
cmc
xchg
jns
jl
mov
xchg
sbb
add
int
add
sub
push
aam
out
scas
mov
push
cli
dec
jnp
ret
cmc
pop
pushf
filds
cs
mov
decl
and
xchg
scas
mov
sbb
in
loop
cmp
dec
out
aad
cmp
call
repz
std
mov
pop
jns
loopne
pop
loope
pmaxub
jns
movl
cmp
or
loope
cmpsl
push
cs
add
inc
adc
sub
js
dec
in
sbb
dec
push
sbb
jmp
dec
sbb
dec
popf
dec
lcall
pop
out
and
xor
mov
loop
setp
dec
push
pop
push
add
clc
sti
cmp
rcrl
sbbb
arpl
pop
add
leave
iret
cmp
push
imull
and
and
int
in
mov
xor
iret
cmpsl
ud1
push
iret
xor
or
mov
iret
xchg
popa
subb
rclb
push
rol
setl
popa
adc
stos
pop
testl
cmc
jecxz
and
test
sbb
xchg
shll
mov
popf
outsl
push
push
sbb
xor
inc
cmp
mov
arpl
in
repz
rcrb
sbb
pop
data16
mov
push
imul
test
mull
mov
or
imul
repz
jmp
and
jge
sti
icebp
jmp
dec
js
add
push
repnz
jl
mov
sbb
push
popf
ds
mov
dec
xor
daa
adc
sti
and
add
inc
daa
cmp
mov
jg
dec
es
mov
pushf
xor
sbb
jl
jmp
cmc
out
pop
test
cmp
xlat
loopne
daa
xchg
xchg
inc
in
scas
adc
sub
xor
jge
cmc
push
xor
mov
loop
xchg
in
jge
fwait
lahf
mov
bound
pop
cmp
call
mov
aaa
adc
cmpsb
in
push
fistl
sbb
jg
leave
adc
lret
sub
push
and
xchg
cld
sbb
inc
sbb
xorb
pop
outsl
aad
cmp
xor
sahf
or
stos
sub
out
pop
sub
and
iret
cmc
xchg
push
inc
cmpsb
xchg
fwait
sbb
pop
ljmp
jecxz
mov
mov
test
lods
out
add
in
xchg
scas
and
inc
mov
fidivrs
and
ret
je
test
imul
stos
sub
jge
push
adc
fdivs
mov
adc
aad
jne
pop
negl
inc
fcoml
xchg
ficomps
lock
aad
jo
roll
shll
jg
jg
mov
dec
test
cmp
mov
jg
loope
shl
ljmp
popf
add
pop
shrl
cs
mov
mov
lock
sub
incb
test
ljmp
add
lret
cli
or
dec
push
fidivrl
fmul
inc
jmp
fstpt
aas
call
gs
cwtl
mov
adc
adc
push
lds
mov
mov
adc
out
mov
inc
push
lcall
xchg
dec
jg
in
sbb
mov
xchg
loope
dec
js
outsb
and
testl
mov
cmc
jg
mov
lods
lcall
fidivs
mov
or
push
adc
xchg
out
aad
xor
ds
scas
jl
lock
push
inc
and
xor
inc
fnstenv
popf
dec
aad
mov
and
loop
or
adc
or
mov
or
push
outsb
add
fildll
out
and
test
sti
jo
into
out
mov
mov
jmp
test
mov
sbb
fcomi
cmc
into
add
ss
shr
jo
add
loop
sub
push
xchg
cmp
sti
scas
dec
cmc
dec
cs
or
enter
fistpll
cs
dec
fs
fiaddl
pop
faddl
jns
loopne
ret
xor
push
cmc
aas
aam
jns
rorl
xchg
or
call
jge
sarb
outsl
rcr
out
cmpsl
and
and
syscall
xchg
mov
fcomi
cwtl
fwait
mov
fidivrs
in
mov
inc
push
js
xor
fdivr
jge
iret
setl
div
sar
imul
xor
mov
mov
pcmpeqd
aad
mov
aaa
mov
scas
pop
into
push
jne
xorl
xchg
rorb
dec
int3
xlat
test
iret
push
pop
sbb
addr16
loope
and
xor
mov
inc
or
jge
fnstsw
inc
adc
in
inc
fcomps
sbb
aas
int
testl
test
dec
lret
ror
cmpsb
jmp
add
push
xchg
lahf
mov
stos
cwtl
or
fs
push
lods
lret
js
mov
loopne
sub
movsl
xchg
out
lock
xchg
out
int
pop
push
mov
dec
xlat
fiaddl
mov
dec
inc
xchg
hlt
rcrl
popa
mov
sbbl
cmp
inc
dec
or
stc
xchg
adc
fstpt
adc
mov
lcall
and
pop
push
fisttpl
aaa
lods
push
jnp
out
or
pop
ja
xchg
clc
push
incb
push
lea
idivb
xchg
je
pop
xchg
jp
or
je
aad
fsts
dec
mov
pop
test
sahf
outsl
mov
iret
into
dec
ficompl
mov
push
push
dec
lahf
rcl
xchg
call
jbe
dec
mov
sti
cmpsb
adc
out
test
idivl
cli
movsb
sbb
cld
dec
jns
lods
fwait
or
rorb
pop
push
cmpsl
out
sbb
or
hlt
mov
iret
ret
mov
adc
das
setne
iret
lods
inc
test
dec
push
xchg
insb
and
xchg
sub
mov
aad
outsb
lods
jle
negl
fstpl
xchg
jp
iret
jae
mov
jmp
sub
gs
cli
out
bound
in
adc
xchg
push
xchg
inc
aad
jp
inc
mov
ljmp
cmp
scas
cmp
gs
adc
mov
push
adc
dec
fs
and
add
push
lea
jg
pusha
aam
pop
out
lods
lret
int
shrl
or
or
xor
testl
lahf
jg
sbb
insb
dec
jl
addr16
cmp
addr16
jno
mov
jle
aad
inc
or
fnsave
sub
in
rolb
ret
imul
mov
sbb
pop
loope
or
jns
mov
cmp
push
pop
jge
stos
mov
jno
call
cli
loop
lods
push
fistpl
vmptrst
sarb
mov
add
imul
pop
push
ficompl
enter
push
push
es
sarb
xchg
mov
aad
sub
mov
sti
mov
mov
or
mov
fs
scas
test
call
nop
pop
jno
sub
cmpsb
push
movsl
sub
divl
jg
push
jb
stos
cmp
test
sti
cld
dec
jg
dec
out
or
pop
vpshld
cmc
mov
jecxz
bound
int3
sahf
adc
call
dec
jg
push
imul
out
and
xor
int
lods
mov
daa
test
dec
dec
sub
jecxz
cmc
inc
mov
jle
cmovp
sbb
dec
xchg
int
in
xchg
orb
arpl
loope
add
in
mov
adc
pusha
fwait
int
aad
mov
out
leave
ret
fidivrs
xchg
dec
xor
mov
mov
jp
mov
stos
fcomip
jmp
in
push
addr16
ja
adc
add
hlt
pop
mov
xchg
fdivrl
jb
sub
adc
lcall
ret
pop
adc
mov
jmp
xchg
inc
lahf
mov
xchg
mov
mov
jp
arpl
outsb
or
pop
push
aaa
sbb
stos
pop
popa
fwait
mov
outsl
testb
xchg
adc
aam
add
ja
mov
sti
push
add
mov
pop
lea
push
xchg
cltd
adc
sbb
adc
shll
fcmovu
push
scas
imul
jns
loopne
ret
lcall
xchg
pop
push
andb
aam
mov
jmp
jb
decl
or
or
xchg
push
sarl
mov
xchg
data16
call
mov
lahf
push
mov
push
cs
or
lahf
mov
hlt
add
dec
adc
jp
imul
mov
mov
adcl
lods
sub
jle
mov
jnp
jp
scas
cmovle
xchg
mov
mov
xchg
cmp
fmuls
mov
add
jae
xchg
es
mov
sbb
pop
hlt
in
lret
dec
mov
mov
fidivrl
into
cwtl
ljmp
subb
cmc
xchg
xor
in
mov
ret
or
sub
xchg
out
jle
daa
es
jecxz
movsb
test
clc
pop
inc
mov
adc
mov
jmp
aad
push
test
cld
add
ret
sub
adc
xchg
rcr
cli
cmc
dec
xor
push
cli
push
mov
mov
pmulhw
dec
or
adc
jbe
dec
shlb
shlb
scas
stos
xchg
iret
enter
int3
add
insl
add
stos
xchg
into
test
dec
push
pop
cmp
movsb
cwtl
pop
loope
fiaddl
jns
sbb
repnz
stc
cmp
cmp
push
scas
aad
int
call
fdivrp
sahf
dec
cmp
pop
aam
jae
out
out
mov
or
jno
adc
and
out
xchg
jp
mov
adc
pop
shll
stos
fnstcw
dec
fdivr
push
adc
adc
lods
adc
cmc
ret
movsl
jg
dec
cli
out
and
out
push
aad
insb
fistpl
out
lret
into
pop
cmp
mov
popa
sbb
jle
sub
and
pop
stos
dec
and
out
jnp
rolb
inc
js
push
jmp
sub
or
xchg
adc
cmp
mov
adc
int
or
push
mov
lcall
cli
rol
push
xchg
lods
mov
sub
insl
cli
inc
push
mov
jmp
mov
aaa
or
nop
dec
jl
shlb
imul
fadd
ss
lret
orl
roll
lcall
test
pop
call
pop
or
jp
or
insl
outsl
xchg
jl
ja
xor
push
rcr
xchg
jl
inc
cmp
lret
out
dec
mov
or
scas
xchg
mov
mov
mov
and
popa
int
call
fs
push
and
pop
add
aad
out
push
cmp
mov
xor
cmp
or
jmp
jmp
lods
adc
nop
mov
scas
imul
lret
sbb
fidivrl
rdtsc
sub
jo
test
pop
push
movsb
push
xchg
push
xchg
pop
mov
mov
xchg
shlb
sbb
les
cmp
lock
cmovp
lea
imul
add
dec
setne
repz
mov
jns
mov
outsb
push
dec
cmp
in
in
push
jecxz
int
pop
xor
es
out
ljmp
mov
mul
lahf
nop
sub
pop
adc
das
or
pop
mov
iret
sub
jb
or
rcrl
push
add
cmc
iret
mov
jmp
das
into
cmpsb
xchg
popf
mov
clc
cmp
mov
mov
jns
cmp
js
push
sub
fcoms
imulb
popa
scas
xrelease
and
mov
push
out
adc
out
dec
enter
add
stos
pushf
mov
sbb
adc
add
xchg
test
in
cmp
add
adc
sub
cltd
mov
xchg
push
and
or
cmpsb
dec
inc
lods
loope
mov
mov
add
pop
js
iret
loope
nop
xorb
rorb
or
xchg
inc
push
scas
cmpb
xchg
fidivrl
imul
rorl
das
sbb
jmp
enterw
cmp
adc
fsubr
stos
dec
test
jo
repz
mov
and
std
mov
scas
mov
hlt
lea
hlt
push
adc
cmpsl
dec
and
popa
cmp
dec
inc
mov
incb
aad
jbe
xlat
sub
or
and
aad
arpl
pop
jno
mov
sbb
int3
xchg
jne
ljmp
aad
ds
repnz
push
sti
add
xchg
jle
xchg
xor
jecxz
stos
cli
loopne
sub
dec
sbb
add
into
cmp
std
imul
jo
mov
aad
inc
nop
pop
jae
lods
fisttps
or
iret
xchg
in
push
jno
gs
cmc
mov
jne
and
mov
rcll
mov
fs
rcll
movsl
daa
scas
int
dec
push
lods
push
cmp
cwtl
roll
enter
xor
jecxz
andb
mov
jp
ror
iret
mov
xor
jmp
call
mov
aad
xabort
mov
jge
gs
jbe
fiadds
loopne
inc
push
xor
xchg
xchg
lahf
xor
cmp
xor
adc
lahf
movups
and
and
outsl
push
add
pusha
xlat
jne
xchg
ljmp
mov
popa
in
cmp
mov
pop
mov
aad
push
add
das
mov
shll
test
xor
sbb
icebp
test
icebp
cli
sub
dec
mov
std
or
or
aad
iret
lods
and
addr16
or
adc
mov
jl
sub
push
aad
cmp
into
xor
cmpsb
adc
lods
push
mov
out
arpl
add
and
pop
in
xor
lahf
pop
adcb
dec
cltd
and
push
pop
orb
pop
popa
push
dec
ja
cmc
mov
int
idivl
iret
sahf
mov
jmp
cmpsl
out
pop
ljmp
int
mov
insl
pop
jmp
pop
push
cmp
sbb
add
jmp
ds
in
or
jle
jge
mov
mov
lods
sti
mov
aad
jmp
cld
sti
add
addr16
prefetchnta
jo
mov
cmc
xchg
ror
and
jge
bound
aad
ljmp
enter
les
leave
lods
mov
lock
cmp
mov
ror
sub
popf
fwait
addr16
sub
stos
jmp
mov
cli
push
cld
stos
mov
addl
cmp
mov
push
jmp
gs
popf
cs
sub
in
dec
mov
add
dec
xchg
stos
or
and
sti
sub
mov
fildl
or
jge
in
xchg
int
dec
inc
mov
mov
enter
xchg
psrad
inc
sti
push
pop
or
or
incl
adc
xor
xor
jns
push
cmp
cmc
sbb
add
cmp
inc
data16
mov
inc
push
mov
fbld
js
and
out
lods
mov
loopne
aas
sbb
jb
mov
inc
imul
idivb
and
fcom
not
bound
adc
cmpl
rorl
push
aad
mov
xchg
add
pushf
cld
repz
pusha
adc
push
adc
add
and
negb
lods
add
or
in
push
jns
jnp
and
sar
cmp
jmp
mov
sub
push
inc
loopne
out
cmc
inc
cmp
or
leave
dec
dec
adc
push
push
insb
fnsave
cmc
push
jge
pop
xchg
punpcklbw
xor
mov
out
aaa
push
lods
lods
sub
jbe
cmp
mov
xchg
fucomi
and
dec
sub
jae
loopne
jmp
xchg
scas
cli
cmc
cmp
lock
jns
inc
adc
imul
cli
nop
xor
das
lret
adc
pop
sub
dec
movsb
xchg
adc
pop
ljmp
pop
ljmp
fldenv
adc
iret
shrl
add
xchg
lods
push
inc
xor
jge
sub
push
push
xchg
stc
jbe
mov
dec
js
rorb
stc
jmp
dec
decb
imul
gs
sub
loope
scas
jge
jmp
out
fiadds
mov
out
mov
mov
mov
sbb
pushf
sub
xchg
out
outsb
jge
scas
dec
push
sub
mov
setne
cmp
and
push
test
insl
push
into
mov
sub
jecxz
push
int
fstpt
mov
add
cmp
rclb
or
std
loope
aad
movhps
jl
in
lods
aad
test
dec
lock
xor
sub
cmpsl
in
jbe
dec
cmp
aam
pop
addr16
mov
cltd
xor
les
cs
lahf
test
fisubrl
rcll
xor
cmp
xchg
loopne
mov
orl
idivb
aad
cmp
ret
imul
jmp
out
cmp
lea
incl
jns
fnstcw
jae
roll
aad
xor
mov
xchg
and
pop
adc
mov
test
jecxz
mov
popf
popa
jp
sub
jne
mov
cmp
push
jae
gs
inc
mov
pop
scas
and
jge
in
cmc
cs
out
test
fwait
cmp
and
clc
mov
andl
pop
xchg
outsb
cld
bound
or
push
cmp
cld
sub
jg
xchg
or
sub
lock
shrb
orb
and
lds
loopne
or
sub
jne
or
mov
shrb
mov
leave
cmc
int
pop
jo
xor
pop
dec
clc
jae
inc
loope
fdivp
ja
xchg
sub
push
adc
xchg
add
inc
add
cld
cli
dec
jb
xor
inc
xor
popf
and
pop
cmc
or
jmp
cmp
lcall
repnz
in
aam
outsl
lods
sbb
xchg
aam
rcl
stc
imul
scas
xor
into
adc
mov
mov
cs
scas
subl
dec
aad
xor
push
int
jmp
mov
and
aad
push
clc
leave
jg
fwait
pusha
mov
bound
cmp
xchg
inc
jns
push
idiv
shlb
cmp
add
jecxz
out
mov
loopne
and
rcll
jbe
sub
dec
clc
pop
sbb
or
andb
testb
xor
pop
lahf
jmp
lret
fsubrp
addr16
cld
nop
popa
sbb
leave
push
lods
sti
sbb
shlb
fsubrp
clc
mov
inc
push
cltd
inc
push
js
xchg
shlb
pop
bound
or
dec
fs
mov
imul
subl
xlat
push
into
sbb
adc
cmp
movsb
pop
outsl
outsl
ljmp
xchg
jmp
mov
xor
scas
lds
inc
and
xchg
aad
add
push
xor
test
dec
push
and
pushf
lahf
ja
fs
cmp
int
dec
scas
jecxz
dec
lock
outsb
cmp
nop
cmpl
cmp
mov
adcb
std
rorl
stos
jmp
movsl
push
pop
mov
inc
mov
cld
inc
jb
adc
sbb
and
aas
test
fiadds
loop
sub
cmp
sbb
or
dec
cmpsb
and
jp
fisttps
mov
out
and
pop
sbb
call
dec
or
imul
push
sbb
push
xchg
cmpb
push
push
inc
test
js
aam
aad
sub
int3
push
stc
cwtl
icebp
jae
fmull
push
push
cmp
cmp
out
stos
out
mov
nop
dec
pop
add
adc
enter
mov
mov
jge
or
xchg
or
pop
jge
cmc
or
mov
arpl
fisttpll
jbe
imul
repnz
push
and
or
in
stos
xchg
xchg
cwtl
jno
pop
or
adc
std
repnz
arpl
repnz
push
sub
add
dec
mov
std
es
add
cs
add
or
mov
or
test
sti
fs
jp
loopne
inc
sub
sub
scas
cld
cwtl
out
xor
sub
out
mov
cmp
mov
pop
mov
add
nop
pusha
repz
test
or
inc
mov
inc
loopne
out
iret
cmc
mov
cmpsl
outsb
call
push
int3
add
or
repz
sbb
jg
xchg
mov
push
push
inc
lds
jg
sarl
jge
in
jg
or
fildl
jo
pop
inc
xchg
aad
jne
dec
lahf
adc
cs
mov
push
push
aad
dec
mov
idiv
into
cmc
mov
loop
xchg
inc
mov
pop
jnp
in
jmp
popa
adc
cmp
mov
or
and
sub
shl
sub
icebp
xchg
adc
mov
cmovle
xchg
cld
mov
jbe
add
jbe
jmp
mov
cwtl
pop
std
cmp
mov
xchg
imul
mov
pop
mov
cli
push
mov
cs
aaa
fiaddl
bound
pop
mov
int3
rcll
pushf
shl
fldt
or
push
ljmp
dec
aam
mov
call
mov
fimuls
and
aaa
mov
jmp
mov
xor
jo
and
jns
pop
inc
fcom
out
inc
cmp
arpl
popf
dec
popl
jne
test
sbb
xchg
adc
test
xor
cmp
cmp
cmp
cli
or
mov
int3
and
or
xchg
mov
xchg
adc
mov
jbe
cwtl
inc
addr16
inc
std
mov
sub
xor
xchg
pop
add
mov
out
sti
mov
or
pop
mov
out
inc
cmp
aad
hlt
cmp
sbb
test
jmp
lods
cltd
push
test
movhps
cli
adc
push
mov
repz
dec
fwait
mov
push
shlb
push
mov
inc
imul
leave
rorl
daa
in
mov
push
jbe
aad
cs
in
push
shl
out
pop
cmc
lock
pop
in
fsubs
cmp
test
and
std
movsb
jo
mov
and
stos
add
xor
adc
push
fisubrl
dec
adc
enter
fld
or
test
in
xor
jb
cmp
out
jmp
xor
dec
push
fdivl
push
mov
jp
and
add
dec
addl
xchg
sub
xor
fisttpll
divl
dec
mov
cmp
jecxz
stos
jo
out
lahf
lods
seto
inc
xchg
stos
push
push
adc
fcoms
mov
les
jmp
popa
out
pop
cmp
mov
and
add
test
adc
out
shll
cmp
test
rcl
pusha
cli
insl
add
filds
cmp
push
push
mov
out
jecxz
mov
popa
rolb
xchg
clc
repz
dec
out
push
add
jle
adc
fs
adc
mov
or
in
dec
pusha
pop
ja
scas
loope
push
out
mov
push
test
insl
cld
cli
adc
push
jl
gs
xor
dec
pushf
aad
jge
insb
cli
pop
arpl
test
ror
fisubrs
int
incl
mull
roll
cmp
xor
mov
mov
mov
mov
ret
sbb
sub
outsl
mov
or
gs
xchg
inc
jg
stos
mov
repz
mov
push
in
pop
js
stos
pop
outsl
push
pop
rorl
lahf
insb
aad
shlb
and
or
mov
imul
and
xorb
sbb
cmp
cmp
das
xor
nop
pushf
dec
inc
frstor
sti
jmp
aad
mov
test
gs
lds
xchg
out
adc
fdivrp
mov
dec
fisttps
push
mov
gs
sub
mov
push
xor
adc
mov
push
push
out
mov
mov
and
mov
ljmp
adc
cmp
mov
imulb
fisubrs
js
jns
or
xchg
ja
jmp
pop
sbb
cmp
and
dec
jo
push
push
loope
outsb
jl
jb
xchg
sub
syscall
out
out
push
sbb
xchg
outsl
sbb
fnstcw
sub
cmp
shll
sahf
test
clc
sbb
or
int
add
cltd
lods
lret
dec
xchg
lea
out
cli
rcll
mov
or
cmp
jne
cmp
repz
int
data16
mov
aad
int3
pop
ljmp
ds
sbb
mov
sti
cmpl
add
fs
cmp
cmp
pop
push
cmc
dec
jo
sti
in
push
mov
pusha
scas
inc
jae
leave
jne
push
xor
sub
sarl
push
repz
jmp
xchg
fbstp
adc
push
cmp
into
push
push
pop
push
dec
xchg
adc
hlt
addr16
jns
sbb
xor
std
dec
outsb
mov
mov
decl
imul
mov
push
dec
mov
push
pop
mov
cltd
int
mov
leave
sbb
adc
mov
les
cmp
add
js
mov
push
int
adc
jb
sbb
mov
push
and
ret
mov
jecxz
aad
cmp
sarb
pop
mov
mov
shl
in
fnstenv
test
add
mov
mov
or
addr16
movsb
cmc
test
cld
adc
mov
jne
xor
cmp
hlt
ret
sbb
jne
sub
cmp
dec
lds
jae
mov
jo
jb
fnstcw
shlb
pop
mov
pop
mov
xorb
rcl
inc
xchg
or
xchg
cld
and
scas
mov
lea
sarl
lret
ljmp
es
mov
dec
and
inc
fwait
fs
push
loope
mov
mov
pop
loope
pop
mov
data16
pop
mov
ljmp
pop
dec
daa
mov
aad
xchg
or
inc
jg
movsb
dec
mov
push
dec
add
dec
adc
js
ja
xchg
ret
dec
xchg
xchg
mov
sub
iret
mov
icebp
mov
out
scas
shr
sub
sub
push
adc
int
mov
addb
and
mov
stos
fldcw
test
cmc
jp
add
outsb
into
ret
cmpsb
pop
push
push
jb
push
push
or
add
dec
test
int
fimuls
jbe
rorb
pop
sub
mov
push
es
enter
inc
xchg
cmp
adc
mov
pop
test
jno
jl
cli
andb
cmp
stc
jl
sbb
rclb
andl
mov
add
arpl
xor
notl
xchg
push
push
and
pop
mov
popa
out
dec
scas
ss
movsb
lods
scas
jb
scas
push
cli
enter
push
sub
cmc
sbb
mov
fdiv
cld
dec
lods
push
das
mov
fs
scas
int
adcl
out
push
test
jnp
pop
into
mov
cmp
lahf
push
leave
lcall
mov
lcall
mov
das
and
or
cmc
jae
jmp
int3
in
cmp
call
xchg
dec
mov
pop
clc
pop
nop
adc
aad
out
mov
cld
push
jmp
inc
xchg
xchg
adc
js
jb
psubsb
pop
mov
aam
mov
adc
mov
sub
xchg
push
jge
test
push
enter
pop
pop
add
aas
fldenv
inc
jo
jg
inc
idivb
jl
repz
sub
test
mov
into
mov
sahf
mov
jecxz
xchg
inc
mov
pop
dec
mov
outsb
call
xchg
fwait
mov
inc
dec
mov
dec
add
cmp
ret
negb
jl
jb
cld
jg
mov
adc
pop
jne
and
add
pop
push
xchg
int3
sub
push
xchg
or
jnp
leave
ret
jne
push
xchg
cmpsl
jbe
add
sbb
sub
imul
pop
jns
and
inc
das
pop
add
cmc
cmp
cmp
push
sbb
jl
out
popa
push
jnp
push
clc
push
mov
adc
lds
outsb
pop
jl
mov
inc
fucomp
or
push
rcrb
je
sti
clc
pop
cmc
shll
imul
cmp
rol
mov
adc
pop
xchg
adc
out
std
mov
pop
aad
push
popf
mov
mov
mov
jns
adc
aad
or
int
xor
outsl
xchg
adc
adc
call
push
cmp
out
jae
or
fucomp
sub
scas
jns
fstpt
add
dec
push
mov
sbb
xchg
cmp
into
jg
hlt
and
je
sbb
dec
adc
lcall
ljmp
cltd
push
add
sub
adc
loope
dec
stos
jns
cmc
xchg
add
loope
test
push
int
cld
adcb
or
inc
and
push
daa
call
pop
pop
inc
push
pusha
or
jl
add
sbb
popa
into
mov
cmpsl
mov
adc
cmp
lods
aad
pop
in
adc
or
mov
testb
not
push
stos
iret
sbb
xchg
adc
ss
jno
loopne,pt
cwtl
cwtl
mov
int
mov
mov
mov
jecxz
nop
adc
cmc
out
mov
push
bound
rcrb
out
cmc
dec
push
into
xchg
call
adc
pusha
pop
popa
je
fistpll
repnz
jecxz
push
dec
inc
xor
pop
lahf
pop
popf
loopne
nop
or
and
mov
sub
cmovge
daa
fmull
stc
jae
cmc
rorl
call
pop
clc
mov
iret
mov
add
sub
xchg
dec
xor
mov
dec
cmp
fwait
imul
pop
test
sysexit
jmp
sub
sub
adc
jnp
test
daa
stos
sbb
cmc
cmp
pop
ljmp
lea
inc
or
xchg
pop
ror
sbb
notl
jge
imul
xor
repz
cmp
inc
push
sub
int
mov
addr16
cmp
mov
popf
pushl
fwait
adc
adc
aad
sbb
fisubrs
setb
jl
decl
xor
jp
sti
push
and
dec
xchg
por
rep
fcoms
mov
add
loop
shl
mov
popf
mov
mov
insb
pop
data16
sub
call
adc
xchg
mov
ret
repz
fldenv
inc
jns
push
push
mov
sbb
push
sub
sahf
push
add
xchg
xchg
shl
xor
push
mov
xor
dec
inc
jno
sarb
xchg
pushf
dec
std
out
pop
mov
fsin
and
dec
pusha
stc
scas
xchg
lret
jmp
fmull
lods
add
pop
dec
mov
pop
fcoml
cmc
nop
int3
sub
xor
fcompl
xchg
xchg
repnz
shlb
adc
dec
jl
dec
scas
jl
and
xor
scas
pop
aad
outsb
mov
cmp
add
push
and
dec
or
adc
cli
mov
xor
stc
xchg
jo
dec
adc
mov
jbe
add
push
aam
sbb
mov
mov
les
rorl
cmc
sub
addb
pop
push
and
mov
lret
mov
jbe
add
dec
cwtl
jecxz
fnstcw
out
jmp
notb
dec
xchg
xchg
mov
clc
sbb
mov
loope
sbb
aad
arpl
cmc
in
xor
xchg
and
or
add
push
cmp
repz
xchg
imul
ss
loope
fistpll
out
dec
stos
stos
pop
daa
divl
cmp
jo
xchg
dec
mov
mov
stc
adc
icebp
jne
in
jmp
sbb
mov
clc
or
loope
jecxz
xchg
pop
cmp
pop
test
mov
icebp
dec
sub
mov
idivl
push
popf
mov
add
or
xchg
sti
sarl
xor
test
popa
ss
aad
icebp
push
das
call
push
fisubrs
fisttpl
cmc
lret
lods
pop
mov
push
ret
push
cmc
fwait
xor
divl
fisttpl
call
repz
ret
dec
inc
inc
dec
cwtl
mov
mov
aad
mov
and
add
cvtps2pi
repz
scas
and
mov
push
xlat
mov
xorl
jmp
cmp
cmc
cmp
jmp
aad
jne
jo
dec
mov
jmp
jae
or
push
dec
jne
push
mov
in
loop
xchg
or
add
fbld
cmc
dec
roll
jne
xor
inc
int
jnp
fistps
bnd
lahf
hlt
loope
inc
orb
movsl
cmp
add
xchg
stos
mov
rclb
adcl
aad
pop
popa
jmp
shlb
adc
mov
xor
rcl
out
jnp
jecxz
mov
or
in
pop
push
mov
int
cmp
push
sub
lcall
int
add
or
sbbb
lea
add
cmc
adc
xchg
xlat
xchg
push
enter
and
add
xor
ret
cmp
enter
pop
addr16
xchg
jae
mov
lret
loope
std
add
sub
and
mov
inc
mov
jb
out
scas
mov
leave
stc
rolb
cwtl
push
xchg
lods
and
in
add
lret
mov
iret
rcrb
div
aad
push
cli
shl
pop
cmp
in
aam
adcl
js
cmp
sahf
pop
rcrl
aad
mov
push
pop
and
test
and
mov
outsl
adc
iret
fmull
call
jge
scas
aaa
xchg
sub
popa
ret
enter
dec
and
mov
std
push
cmp
dec
daa
das
mov
cmp
cmp
sarl
inc
and
mov
sbb
xchg
cmp
cwtl
push
lock
pop
call
jns
rolb
push
repz
nop
xchg
pop
xchg
sub
enter
fwait
das
or
sub
mov
lret
lcall
add
mov
loop
inc
fnsave
pushf
xchg
stos
mov
dec
sbb
movsb
jge
dec
sub
dec
dec
fistps
fists
int3
loope
out
add
and
clc
loopne
jecxz
sbb
jbe
pop
pop
or
int3
aad
ret
sbb
stos
sub
xchg
test
xor
std
insl
test
mov
repnz
xor
mov
jg
pmaddwd
or
scas
push
es
jge
sub
mov
push
mov
cld
adc
into
xchg
adc
pop
sbb
adc
mov
pop
out
cmc
xor
daa
repz
das
addb
dec
pop
push
outsl
bound
fnstsw
xchg
fldt
sub
dec
push
or
pop
jnp
pushf
int
insl
cmp
dec
pop
scas
pop
xchg
cmp
push
add
sub
adc
mov
and
stos
test
inc
sub
mov
scas
aad
test
mov
into
std
fmuls
inc
idivl
repnz
mov
test
xchg
inc
mov
addb
push
jle
lea
xchg
inc
xor
dec
flds
lahf
ja
mov
jge
fsts
push
movsb
test
and
push
dec
out
dec
push
adc
out
lods
test
adc
pop
sub
xchg
xor
jb
inc
sbb
push
push
jg
cmp
jne
lahf
pusha
pop
inc
in
push
gs
xor
lcall
loope
push
faddl
les
xchg
scas
push
imul
sub
mov
aad
adc
jno
sti
in
jo
cmp
xor
sbb
test
xchg
pop
ljmpw
jae
cli
adc
mov
dec
push
fwait
mov
pop
jp
scas
mov
cld
or
xor
cmp
xlat
jle
xor
outsl
lcall
add
push
ljmp
cli
dec
pop
mov
push
insl
jmp
dec
cmc
lcall
pop
das
mov
jmp
in
pusha
movsb
add
std
push
rol
aad
sbb
add
loop
or
arpl
add
pushf
int
mov
testb
dec
aad
mov
cmc
loope
movb
cmc
insb
jbe
push
add
sub
fstpt
outsl
sar
rorl
xlat
xor
or
fidivrl
sub
pop
cmp
pop
notl
inc
dec
fsts
push
xchg
insb
in
add
popf
fisubs
push
dec
ret
push
mov
testl
or
mov
sub
sbb
sbb
jp
cmp
sub
add
stos
cmp
mov
jo
cmp
in
test
pop
xchg
pop
inc
fcomi
mov
xchg
sub
leave
xchg
pop
rolb
and
fnstenv
inc
or
std
jo
aam
lret
pop
xchg
shrb
popf
sbb
repnz
inc
cmpsb
push
push
xchg
push
outsl
jmp
inc
shll
jnp
popf
fwait
negl
xor
data16
or
mov
stos
dec
dec
popf
mov
xchg
mov
lock
or
sub
std
dec
movb
repnz
clc
and
push
mov
in
rcll
xchg
inc
inc
outsb
or
or
out
add
pusha
mov
adc
in
add
adc
sar
mov
popf
clc
cwtl
mov
divb
mov
punpckldq
js
lcall
mov
outsl
mov
lock
pop
nop
push
dec
xor
scas
xor
push
jae
xor
mov
outsb
loopne
and
clc
das
fcom
xor
je
xchg
hlt
testb
cmc
rcrl
cmpsb
pushf
add
aad
jno
out
lahf
jle
adc
lds
fisubs
je
rorb
out
or
jno
dec
add
add
push
lcall
decb
cmp
push
out
dec
int3
int
pop
out
pusha
fists
dec
clc
mov
push
adc
fsubr
out
les
sti
cmp
or
insb
loopne
sbb
shll
adc
aaa
inc
ret
xor
push
orl
mov
repz
pop
inc
mov
pop
lahf
xor
movsb
imul
inc
sbb
add
push
sub
movsb
xchg
pop
cli
jb
mov
and
cmc
icebp
call
out
bound
imul
mov
adc
jnp
test
cli
out
add
popa
in
lret
cmc
inc
int3
or
sarb
or
lahf
add
repnz
push
dec
popf
mov
mov
or
test
jae
inc
popa
leave
cwtl
or
outsb
repz
cmpsb
lret
mov
push
xchg
sbb
xchg
jl
in
sbb
jno
xchg
enter
sbb
test
jne
stc
jmp
jo
mov
stos
ret
js
movsb
sub
mov
call
subb
mov
loope
mov
fstl
push
pop
sub
test
xchg
mov
js
xchg
add
aad
daa
jge
and
cmp
jp
in
pop
xchg
gs
adc
lock
ss
xchg
adc
mov
fnsave
add
cmp
dec
cwtl
jnp
fs
mov
push
shrb
mov
dec
incl
dec
inc
mov
pop
insl
adcb
xchg
lods
mov
test
lcall
int
lods
add
lahf
dec
push
mov
mov
bound
lahf
or
test
add
into
fldenv
dec
sub
mov
scas
ljmp
push
orl
lss
pop
aad
jne
pop
add
jecxz
xchg
inc
into
and
fsub
rcrl
inc
or
popf
repnz
add
pop
xchg
cltd
stos
jl
and
aad
mov
outsb
data16
push
lret
cmp
push
mov
repz
leave
push
mov
mov
mov
jne
mov
inc
push
aas
movsb
sbb
push
stos
xchg
dec
jle
outsl
hlt
push
xor
mov
jp
mov
mov
cltd
push
loopne
arpl
mov
sub
sbb
add
pop
dec
cmc
shll
sbb
xor
pop
push
inc
es
add
or
jns
sub
popa
lahf
loop
adc
sub
imul
or
cmc
mov
sbb
arpl
pop
push
js
cmp
cmp
aad
orl
pop
pop
stc
mov
sub
or
icebp
xchg
scas
sub
fidivs
xchg
push
addr16
lods
mov
jnp
popa
jp
mov
outsl
xchg
inc
jns
cmp
cmp
fisttps
inc
ljmp
pop
sbb
dec
xchg
movsl
adc
push
mov
fildll
mov
xor
ds
mov
pop
mov
gs
push
mov
test
inc
aad
cmpsl
jns
rorl
fidivrs
adc
xor
add
nop
out
mov
and
test
in
inc
xor
arpl
scas
xor
outsb
mov
aad
stos
mov
add
xor
inc
out
xlat
and
inc
cmp
cmp
jno
xor
mov
pop
inc
inc
inc
jnp
mov
bound
dec
addl
cmc
cmp
ret
lods
cmp
in
pop
aad
std
enter
test
pop
fwait
pop
scas
insb
jnp
sub
dec
dec
mov
and
test
and
or
cmp
popf
sbb
cmc
dec
popf
ss
aad
mov
aas
scas
nop
stos
fisubl
mov
xor
in
xchg
jmp
xor
mov
mov
loope
sarb
push
sahf
mov
and
sub
push
add
into
inc
jb
insb
insl
xchg
sahf
mov
sub
ja
repnz
addr16
cli
pusha
dec
je
jb
jp
mov
mov
jne
push
nop
gs
out
cmc
or
push
sub
mull
add
int
shrl
fnstcw
or
popa
mov
mov
daa
arpl
add
inc
adc
push
mov
or
es
sbb
xchg
psrld
insl
add
cmp
push
enter
push
mov
adc
and
adc
stos
sti
cmpsb
jns
adc
call
pop
into
neg
dec
push
aas
iret
pop
stos
or
lock
mov
mov
push
inc
in
pushf
aad
pop
lcall
ds
test
mulb
push
fs
mov
mov
cld
leave
xor
jmp
dec
xor
cmpsl
decl
jge
push
test
adcl
mov
push
jecxz
loope
ja
mull
pop
mov
push
jecxz
jmp
mov
leave
or
iret
mov
push
cmpsb
cmp
pop
or
cmc
jle
call
mov
cld
dec
dec
enter
repz
add
or
jl
bound
mov
scas
popa
push
jb
daa
push
mov
dec
test
xchg
popf
outsl
add
cmp
inc
and
pop
mov
cmp
jge
jb
cmpsb
nop
dec
xchg
mov
fistl
and
xor
lahf
aad
pop
test
push
or
inc
sbb
aaa
in
jne
test
call
in
cld
cs
enter
push
adc
cmp
jno
dec
cmp
cld
xor
loopne
jae
mov
pop
push
jp
cli
rclb
cmp
fcomp
jb
xor
jmp
jne
pop
scas
js
adc
xchg
test
lcall
movsl
orl
je
jnp
lods
adc
into
mov
push
test
sbb
mov
adc
mov
aad
lret
cmp
sti
out
mov
into
push
pop
jns
push
test
stos
pusha
andb
sahf
or
mov
and
lret
int
rorl
jb
jne
xchg
in
movsl
adc
add
sti
adc
ss
sub
pusha
inc
adc
stos
dec
mov
pop
movsb
pop
imul
bound
nop
arpl
jl
movsl
mov
dec
test
push
cmp
ljmp
adc
mov
jb
mov
aam
shl
in
aas
and
aam
mov
scas
mov
push
imul
fnstsw
sub
jmp
mov
or
jmp
cmpsl
push
mov
rcl
xchg
add
loope
lds
mov
mov
inc
mov
hlt
jmp
scas
lcall
cmpsl
add
je
into
outsl
inc
lea
and
inc
and
aad
cli
xchg
lret
psraw
in
push
jg
cmp
sbb
rorl
iret
xchg
inc
inc
xchg
lock
add
mov
stos
pusha
adc
aad
cs
shl
and
aad
jge
rcrl
mov
push
mov
leave
mov
fdivp
or
cwtl
out
add
cltd
call
inc
push
ret
jge
xor
ss
sbb
idiv
jl
fisubs
fisttpl
or
aad
xchg
int
das
je
cmp
cmp
sub
fxch
pop
cmp
popf
xchg
inc
fistpl
jecxz
icebp
cmp
xor
outsb
jbe
sub
cltd
ds
jnp
mov
pushf
push
sub
mov
jns
testb
ljmp
out
pop
push
push
dec
xchg
jge
ljmp
out
push
lods
mov
push
sbb
out
mull
ljmp
add
and
fdivr
add
popf
inc
jle
sub
push
sub
or
pop
cmp
loopne
inc
ljmp
das
fildl
std
lea
sub
je
lds
add
pop
leave
repnz
test
xchg
mov
mov
jge
repnz
mov
jnp
xor
fs
insl
rcrl
mov
push
scas
pop
inc
xchg
int
daa
adc
jl
cmp
jnp
push
cld
jbe
loope
scas
and
cmp
ret
jns
adc
add
mov
mov
sahf
xor
lcall
les
ret
or
sbb
mov
sub
mov
sbb
inc
sti
xchg
sub
icebp
fidivs
inc
pop
xchg
addl
mov
sti
test
out
cmp
xchg
lahf
sub
and
fstpl
mov
or
stos
lea
mov
cmpsl
inc
mov
xor
nop
dec
fwait
push
je
sbb
adc
cmp
les
inc
dec
pop
adc
mov
leave
rcll
jmp
add
in
test
fwait
and
push
mov
nop
movsl
fcom
repz
popf
aad
fcmovu
ret
mov
add
lods
rclb
push
stos
cwtl
fwait
sbb
mov
sbbl
dec
sub
jo
lahf
icebp
jo
inc
pop
stos
shlb
adc
dec
xchg
rolb
and
xor
push
and
push
pusha
jg
insl
sbb
pushf
movsb
xchg
xor
dec
sub
lods
into
test
add
gs
mov
faddl
sub
out
and
lock
div
hlt
pop
jo
cmp
popa
jb
xchg
mov
push
in
into
sti
and
mov
jbe
mov
push
jmp
out
nop
test
sub
pusha
out
jns
outsb
and
fdivr
cmc
stc
xor
inc
jmp
jmp
lea
inc
xor
cld
mov
aad
mov
lcall
add
mov
arpl
or
fst
xchg
sbb
xchg
mov
or
xchg
popa
sbb
pop
push
xchg
aam
adc
xor
xor
movswl
add
adc
nop
jg
cmc
das
add
cmpsb
hlt
stos
dec
dec
mov
nop
cmp
sbb
cmp
push
notl
pop
add
cltd
aam
jmp
icebp
outsb
aad
mov
cmpsl
stc
sahf
jmp
jmp
lret
aad
jecxz
add
pop
movsb
sbb
add
pusha
jmp
jp
jmp
push
data16
inc
jl
adc
inc
fldl
sub
aad
mov
mov
rcll
pop
xchg
repz
push
dec
cmp
rcr
mov
cmp
testb
push
ja
cltd
cmp
ficomps
iret
jl
mov
out
jo
mov
or
add
cmp
push
pop
cld
mov
mov
inc
lock
push
or
lahf
popa
je
stc
xor
out
xor
pop
test
jbe
add
xchg
mov
push
jp
sti
mov
inc
imul
mov
aaa
roll
dec
imul
or
in
out
outsb
xchg
ror
inc
pop
cmp
cmc
addr16
dec
push
movsl
ljmp
ja
mov
jl
mov
cltd
mov
pusha
ret
jle
push
js
test
xchg
rcr
dec
push
cmp
fsubl
scas
lock
movsb
negb
sub
es
push
lock
pop
cmp
pop
add
cmp
inc
add
ja
mov
push
dec
jmp
jbe
rcrl
addr16
dec
pusha
enter
add
sub
inc
cmpsb
rolb
sub
inc
sub
in
data16
xor
out
jns
pop
mov
and
imul
bound
cmpsb
jge
les
notl
iret
or
xchg
ss
or
out
mov
sub
outsl
pop
aad
adc
es
lea
cmp
push
cld
and
test
fisubrl
out
cmp
outsl
aad
cld
iret
pop
mov
movsb
popa
pushf
loop
push
add
or
push
jp
inc
outsl
dec
push
mov
out
das
or
or
aad
in
int
test
loop
ja
mov
add
jg
hlt
out
js
dec
cmpb
xor
mov
insb
invd
das
stc
xchg
jae
sarl
fisttpll
mov
xchg
dec
pusha
cmp
and
lret
push
addr16
idivl
push
mov
and
xor
pop
and
dec
sti
adc
arpl
pop
stos
cmp
sub
mov
jno
adc
std
mov
and
out
mov
lahf
sbb
lret
or
out
cli
and
jno
aad
addr16
pop
test
insb
js
cwtl
imul
push
jnp
cltd
ja
inc
inc
and
fs
mov
xor
std
mov
mov
aaa
pop
je
xchg
ret
sub
cmp
out
and
inc
or
icebp
aad
mov
push
je
adc
std
or
xor
dec
aad
add
sbb
push
fists
push
push
pop
ds
and
pop
scas
sbb
xor
pop
outsb
mov
lods
cmc
ds
das
dec
testl
pop
stc
imul
sti
and
mov
sub
cmc
cmpb
jne
mov
in
xchg
mov
test
mov
push
xchg
mov
imul
decb
jb
push
call
scas
or
dec
out
add
and
and
add
xchg
ret
mov
fisttpl
ja
jmp
lret
divl
fisubrl
xchg
cmp
push
lods
lds
adc
mov
testl
dec
decl
push
inc
movsl
int
push
xchg
ja
cs
cld
jnp
push
cltd
cmp
mov
hlt
test
lcall
and
stos
ljmp
enter
sbb
iret
lret
jns
sub
xlat
clc
aad
rcl
push
es
sti
rolb
inc
mov
test
mov
les
movsl
inc
xor
pxor
fsubs
mov
sub
mov
jg
mov
shl
sbb
int
aad
rorl
into
cmc
cmp
ret
loope
scas
das
and
in
int
and
push
sti
iret
xlat
sub
mov
xor
fs
fcoml
in
xor
mov
cmc
add
push
aam
xchg
jge
adc
out
int
xchg
lcall
or
xchg
les
adc
add
push
inc
out
int
cmp
shl
push
mov
mov
icebp
in
sbb
mov
dec
xchg
and
imul
setae
fst
jbe
jl
xchg
ja
mov
inc
dec
outsb
and
aaa
test
mov
cli
dec
std
fisttpll
jecxz
add
jmp
aad
adcl
mov
fcompl
dec
adc
push
pop
xchg
out
rolb
fimuls
testl
sbb
aad
aaa
mov
sub
cmc
js
fsubrl
adc
mov
adc
sbb
imul
mov
cmpsb
xchg
repz
xchg
int
mov
inc
pop
call
insl
cwtl
push
loop
repz
mov
incb
je
icebp
out
inc
fcomi
ficoms
scas
mov
jnp
mov
push
and
inc
int
and
mov
push
int
push
mov
or
div
data16
mov
mov
jns
jecxz
sub
jecxz
rorl
or
into
jg
adc
xor
cmc
push
lea
lods
call
jmp
pop
mov
fbstp
cmp
aad
mov
out
mov
out
adc
pop
in
mov
scas
xchg
in
push
and
aam
sbbl
sub
xor
std
sbb
or
push
insl
or
or
sbb
les
pop
out
sub
xchg
adc
pop
pop
insb
cmp
stos
les
les
in
sub
scas
sahf
loopne
leave
inc
out
cmpsl
mov
sar
call
xor
or
pop
scas
mov
test
outsl
jno
int3
enter
out
or
cltd
add
mov
lret
mov
popa
test
in
ljmp
xchg
lret
stos
mov
gs
cltd
push
iret
pmaddwd
sahf
push
stc
cmp
dec
sbb
push
sbb
popf
adc
cwtl
push
mov
pop
sub
aaa
push
int
push
mov
mov
loop
int
std
mov
inc
add
les
fs
and
lahf
or
aad
fnstcw
sub
jbe
testl
pop
xchg
adc
aam
cld
scas
pushf
push
inc
in
mull
jb
fisubs
or
lcall
pop
mov
mov
gs
dec
decb
cmc
ss
scas
cmp
in
dec
push
call
sbb
mov
popf
jmp
dec
lods
adc
mov
shl
mov
aaa
mov
adc
mov
ss
hlt
ja
adc
xor
xchg
inc
mov
add
push
imul
cmp
cmc
adc
xchg
mov
push
xchg
mov
sar
jns
ds
pop
cld
and
lahf
les
xchg
inc
outsl
dec
aam
adc
and
add
aad
outsb
fistps
fs
add
fnstcw
js
fidivl
adc
adc
stc
bound
mov
xchg
addr16
jmp
cmp
in
mov
xchg
lods
in
add
in
cmp
aas
inc
mov
lods
sahf
dec
xchg
shr
sub
xchg
sub
mov
mov
sbb
out
iret
icebp
aad
sub
xchg
ficoml
enter
insl
xor
sar
cs
lods
ljmp
add
movsb
dec
jnp
xorl
sub
into
mov
cmp
sbb
xchg
sub
mov
cmc
add
jae
adc
xchg
clc
test
adc
mov
jbe
and
adc
pop
hlt
xchg
dec
aad
xorl
dec
std
out
ds
fucom
push
mov
sub
addr16
push
push
jbe
sbb
adc
clc
lret
cltd
inc
cmp
dec
push
iret
in
in
jb
inc
xchg
jno
neg
push
push
jl
insl
cmc
xchg
jl
mov
lds
jg
insl
mov
shll
rorb
movsb
repz
or
xchg
xchg
sysret
mull
push
loope
mov
sti
dec
xchg
jmp
cmc
mov
push
ds
add
aad
les
movsb
inc
push
outsl
mov
cmp
cmp
mov
sub
in
mov
test
out
insb
arpl
test
sub
lds
sbb
dec
xchg
aad
and
jmp
adc
pop
scas
xchg
arpl
pop
idiv
cli
filds
je
xlat
ljmp
cmc
mov
cmp
pusha
sar
pop
cmpsb
inc
into
cmpsl
add
xor
ffreep
cmpsb
xor
push
call
adc
adc
call
in
mov
inc
xchg
aas
int
cmp
mov
loopne
decl
ret
das
dec
pop
fstl
jle
lods
fwait
or
mov
push
aam
sahf
mov
push
arpl
enter
ds
mov
mov
cmp
adc
sub
pop
mov
rcl
stc
dec
aad
jp
pushf
mull
jae
adc
bound
dec
push
xor
and
add
notb
pop
sub
popa
jg
aad
leave
stc
test
fmull
enter
cmc
ja
pusha
inc
cmp
clc
mov
jmp
stc
dec
mov
or
sahf
out
inc
adc
sbb
sub
xchg
lret
jae
test
jns
sub
jmp
lea
pop
ret
imul
mov
inc
sbb
testb
push
repz
in
lds
xlat
jnp
mov
pop
adcb
jnp
cmpb
aaa
mov
int3
jno
add
loopne
mov
mov
rolb
jl
bound
cmc
pop
add
inc
and
loopne
mov
push
cmp
cltd
mov
cmp
dec
push
lds
mov
cli
in
enter
xchg
pop
or
mov
int3
mov
test
testl
or
xchg
sbb
sub
lea
idivb
jg
es
cmp
add
dec
rorb
pop
push
mov
and
insl
and
dec
adc
in
jmp
imul
mov
mov
js
in
sbb
jae
andb
test
insl
adc
mov
pop
or
mov
lods
or
mov
loopne
lods
and
gs
add
decb
decb
jecxz
test
xlat
xchg
jp
and
or
movb
or
in
mov
call
sti
jecxz
xchg
dec
imul
inc
push
std
sarl
and
or
mov
xor
jo
mov
or
dec
hlt
and
fistpll
jbe
insl
xor
sbb
orl
cmc
out
pop
and
ret
test
push
movsb
cmp
jo
dec
jl
cmp
jg
adc
xchg
sti
shlb
cld
sti
enter
add
stos
mov
adc
dec
psrad
loop
in
jns
sbb
mov
bound
sahf
and
std
inc
lret
ljmp
out
repz
scas
pusha
adc
call
loopne
sub
mov
or
bound
mov
orl
push
movsl
or
xchg
xchg
ja
movsb
lods
test
lcall
movb
inc
int
mov
in
pop
xchg
outsl
mov
cmp
loope
out
add
insl
cmc
inc
pushf
cwtl
push
mov
std
lods
jp
fstpt
in
sub
stos
pusha
mov
xorl
xchg
jbe
insl
in
dec
xchg
mov
or
mulb
inc
enter
fildl
fs
popa
adc
mov
call
cmc
int
es
mov
mov
inc
roll
sub
nop
testb
roll
test
test
or
and
ljmp
jnp
xor
xor
std
or
xchg
mov
mov
xlat
push
jecxz
enter
out
xchg
andl
sti
vshufps
pop
data16
aam
shl
out
popa
pop
xor
dec
xlat
cmp
js
in
adc
rorb
loope
jno
mov
add
mov
cmp
cmp
mov
std
cmc
leave
mov
xchg
enter
jecxz
sbb
cmp
mov
insb
pushl
mov
jecxz
mov
out
in
cwtl
cmc
inc
sub
out
lock
loopne
test
cmp
fdivl
pop
int
lea
mov
sbb
imul
int
jmp
mov
xor
mov
cmp
fstl
xchg
mov
cmpsb
aad
out
mov
iret
mov
adc
mov
in
outsl
aad
test
test
add
imul
stos
jo
push
xchg
xor
sub
mov
cs
mov
enter
cmp
jo
adc
sbb
cmp
inc
aaa
sub
pinsrw
push
ret
dec
jb
repz
mov
mov
dec
pop
out
insb
ja
or
ret
add
inc
es
cmp
push
mov
stos
cmc
out
enter
scas
xchg
xchg
adc
and
fimuls
pushf
popa
je
push
sarl
xchg
daa
in
or
mul
imul
dec
ja
repnz
inc
mov
jle
std
cmp
lds
or
fs
xchg
lds
jp
inc
and
inc
xor
mov
lock
mov
pop
or
sub
mov
dec
or
mov
and
fcmovnbe
lock
or
js
mov
adc
rclb
jmp
cmp
xchg
add
movsl
jl
lds
push
inc
lods
sbb
or
lds
les
mov
mov
loopne
adc
and
cmc
dec
addr16
sbb
push
cmp
cmp
pusha
dec
jo
lds
dec
pop
xchg
pop
ljmp
sbb
push
inc
test
addr16
arpl
mov
std
dec
xchg
fucomip
cmc
repz
jns
ss
lcall
dec
cld
mov
or
jmp
xchg
pop
jl
push
call
in
push
leave
sar
aaa
and
pop
cmp
inc
scas
aad
int
les
add
mov
mov
int3
inc
dec
cs
push
aaa
sbb
movsl
loopne
jae
sbb
aad
insb
and
repz
xor
clts
dec
call
insb
pop
imul
add
outsl
xorb
xchg
xchg
pop
das
insb
sbb
sti
jnp
scas
in
orl
adc
cmp
jmp
cmp
and
mov
mov
shlb
mov
dec
cld
mov
xchg
or
sub
fwait
pop
cmp
lea
or
mov
rcrl
mov
lcall
jo
fisubrl
push
and
add
push
into
out
xchg
mov
cmp
inc
jl
push
in
adc
test
push
outsl
sub
mov
es
inc
sbb
inc
ficoml
ja
lea
push
jno
cmovae
push
call
mov
int
or
fadds
aad
jbe
cmp
or
lret
int
in
cmp
sub
xor
ret
stos
xchg
jmp
cmp
sbb
rolb
pop
xor
nop
mov
pushf
mov
fidivs
rorb
pop
jp
outsb
aad
nop
repz
jecxz
inc
jl
js
mov
stc
fs
hlt
iret
xchg
out
fcomp
or
test
mov
mov
mov
sbb
loope
arpl
sbb
inc
cmp
sti
es
sub
ffreep
add
addb
scas
cmp
sub
jmp
lods
cmp
stos
out
dec
aad
les
fucomi
add
cmc
dec
sub
mov
std
or
dec
pop
testl
mov
lods
shrd
lret
js
fiaddl
cmc
rorl
lock
aad
arpl
lret
sbb
insl
dec
es
xor
out
dec
arpl
jp
cmpsl
add
aad
jmp
js
pop
cmp
push
sahf
lock
dec
xchg
cmp
or
jl
scas
mov
push
fwait
pop
push
xor
nop
mov
mov
repnz
out
iret
imul
and
inc
cmp
sbb
in
es
mov
dec
push
jge
and
pusha
pop
stc
or
rcll
add
pmaddwd
outsl
lret
jle
lds
nop
pop
xchg
aad
inc
arpl
in
fldcw
repz
xchg
xchg
xor
insb
out
xchg
mov
sbb
movsb
movsb
int3
outsl
push
xor
repnz
cmp
inc
and
add
cwtl
cmc
dec
test
add
aad
lcall
cmp
push
mov
sub
mov
data16
add
push
cltd
sahf
fsubs
into
andl
jge
int
aad
and
stc
xor
into
and
fwait
mov
std
ret
xor
es
subb
jge
jmp
aad
jnp
push
adc
dec
outsl
psrlw
xchg
dec
mov
rsm
pop
shl
push
aad
rcrb
mov
mov
jnp
sbb
adc
int
jno
mov
mov
out
add
pusha
or
in
sbb
int
leave
cmp
in
pop
mov
std
rclb
cmpsb
sbb
pop
lahf
loop
jecxz
or
push
int
mov
mov
mov
shll
jl
cmp
jp
repnz
cmp
dec
or
ret
xor
mov
scas
push
adc
inc
cld
pop
xchg
sub
cmp
and
pop
mov
mov
dec
pop
pusha
sub
xchg
push
lods
inc
out
cmp
ret
sbb
idivl
cld
aaa
mov
push
nop
fs
sub
jl
adc
xchg
shrl
das
stc
lods
pop
loope
jb
and
es
repnz
popa
pop
aam
pushw
jns
ret
inc
jno
xchg
and
mov
pop
push
test
out
mov
add
lcall
xchg
insb
inc
cltd
mov
add
das
jl
push
dec
aaa
dec
aaa
mov
inc
sahf
sub
jmp
pop
ds
out
dec
adc
arpl
xchg
in
dec
rclb
js
int
jno
jns
jns
aad
imul
jb
ret
adc
ret
xchg
xor
xchg
xor
cmpb
outsb
mov
sub
pop
dec
cmovnp
jg
fldt
sbb
les
jo
in
leave
mov
cld
cmc
int
and
pop
out
fisttps
pop
sbb
push
push
aas
scas
mov
nop
test
jecxz
rorb
cmp
mov
jg
das
cwtl
imul
or
mov
jle
fnsave
push
std
stos
cmp
adc
ljmp
inc
int
cmpsl
into
hlt
jp
pop
sub
xchg
adc
mov
cmpsb
dec
cmp
movsl
xchg
arpl
rcrb
std
lods
and
sti
dec
das
xor
dec
mov
and
out
jecxz
imul
popf
fisubs
dec
addr16
aad
jmp
mov
push
mov
pusha
inc
add
cmp
cmp
cs
and
rcll
shll
or
add
jmp
out
gs
sbb
mov
pushl
and
aam
sub
shll
dec
mov
cmp
shlb
xor
pushf
sub
pop
mov
shl
fistps
ds
xchg
push
add
dec
sbb
mov
push
lock
aam
shll
in
fdivrs
repnz
cmc
das
mov
push
add
pop
xor
cmp
pop
xchg
outsl
out
int
mov
cld
dec
add
cmpsb
jecxz
nop
stos
fst
filds
scas
push
lods
jl
mov
aad
ds
insl
bound
mov
xchg
inc
in
hlt
mov
in
arpl
xchg
lret
sub
andb
imul
pushf
dec
mov
inc
lcall
clc
xor
scas
jecxz
lret
imul
mov
adc
push
loop
and
adc
dec
add
scas
jp
sti
inc
ffree
push
mov
mov
mov
in
mov
jmp
mov
jmp
aad
dec
icebp
jns
xor
mov
lahf
or
xchg
andl
jg
incl
jmp
lea
stos
out
pop
lods
stos
push
popa
mov
sti
ret
mov
push
das
daa
and
jae
push
popa
mov
cmp
enter
cmp
xlat
add
xchg
fldl
pop
call
push
loopne
jmp
sub
outsl
lods
jmp
mov
add
jb
mov
loop
andl
push
mov
gs
and
into
shrl
js
movsl
icebp
mov
gs
lock
pusha
pop
push
stc
ss
fucomp
lret
out
sub
testb
rclb
sub
mov
jle
push
xor
mov
jge
call
pop
mov
xchg
loop
into
cmc
dec
push
outsb
ds
xor
test
cld
cmp
mov
push
inc
filds
popf
inc
jb
dec
scas
push
shll
test
pop
int3
and
dec
cmc
jmp
insb
cmpb
in
out
cli
inc
pusha
pop
jecxz
xor
stos
pop
sub
pop
pop
inc
mov
push
in
jl
sub
imul
into
arpl
mov
or
and
addr16
adc
xor
mov
xor
int
stos
mov
lea
pop
dec
loopne
iret
lods
sbb
inc
push
add
sti
notl
push
cmp
addr16
lahf
mov
jg
shl
cmc
lret
xchg
jo
lods
jmp
jg
xor
cli
in
lds
add
aam
arpl
test
and
gs
popa
add
movsl
clc
int
loope
cwtl
fwait
push
dec
pusha
sbb
cltd
add
mov
sbb
xchg
xor
scas
iret
lret
shr
inc
aaa
int
and
and
inc
aad
push
cmp
adc
mov
xor
repz
dec
iret
sbb
inc
cmp
pop
stos
je
outsl
cmpsb
pop
adc
loop
cmpsb
add
jnp
sub
xchg
xor
mov
add
inc
jmp
fucom
mov
cmp
inc
push
cmp
pop
pop
cmpsb
push
or
ss
push
fmul
cmc
dec
lods
adc
lcall
xchg
push
icebp
mov
dec
ret
inc
dec
fsubl
out
rol
dec
push
repnz
xlat
cmp
out
test
imul
in
inc
sub
cltd
lea
test
clc
js
subl
xchg
jle
js
mov
xor
mov
or
xchg
inc
pop
cmpsb
jge
mulb
nop
xchg
pop
test
scas
push
pusha
jmp
xchg
inc
dec
and
mov
push
aaa
add
and
pop
xchg
aas
stos
adc
pop
add
clc
and
jge
dec
pop
and
cmp
cmp
push
aam
xchg
outsb
into
mov
outsl
pop
cmp
xchg
sub
sbb
xchg
push
es
mov
and
test
push
jecxz
mov
les
push
es
fcmovbe
sete
imul
daa
out
mov
stos
mov
inc
jbe
ficomps
stc
sarl
jnp
jmp
stc
adc
ja
rcr
sub
pop
test
or
jne
fs
and
sti
dec
mov
jb
lds
push
xchg
out
cmp
mov
lea
xchg
cmp
sub
aaa
cltd
inc
inc
dec
mov
xor
lods
cmp
or
in
call
or
inc
stos
mov
mov
aad
stc
adc
ss
inc
movsl
xor
sub
or
mov
cmpsl
push
sahf
and
das
lods
and
jmp
ss
jno
lods
repnz
and
inc
cmc
fwait
stc
popl
aad
ds
mov
cmp
and
filds
adc
sbb
mov
mov
stos
iret
add
sub
test
xor
bound
fnstenv
xchg
test
dec
sbb
pop
ret
insb
imul
movsb
cli
lds
testb
jns
fbstp
cmpsb
mov
push
pop
push
cli
ret
into
mov
sub
mov
movsb
mov
inc
sub
sbb
mov
adc
adc
push
ss
push
pop
lods
pop
andl
ret
popf
jmp
aad
ret
or
push
push
std
cmp
shll
imul
sub
outsb
or
cmp
lcall
out
xchg
enter
mov
out
cltd
mov
dec
outsl
mov
xchg
ret
dec
hlt
bound
test
cmpl
xor
cltd
jp
cwtl
cli
cmp
sub
lock
stc
push
mov
sbb
jecxz
into
push
popf
or
xchg
cmpsl
jbe
ret
jns
out
in
push
pushf
mov
pop
testl
adc
dec
ljmp
inc
inc
mov
adc
push
jo
insl
clc
dec
dec
lods
sub
cmc
filds
mov
adc
int
mov
xorl
jo
push
mov
cmp
push
cmc
or
scas
jl
sub
popf
mov
std
sub
sti
pop
pop
cld
sbb
cmp
push
in
mov
mov
lahf
cmp
fcmovnb
cmc
xchg
pop
sub
sbb
gs
pop
jg
or
mov
leave
xchg
popl
jae
and
or
ror
xchg
and
add
push
xchg
mov
xor
pushf
and
mov
mov
rclb
and
out
inc
movsb
adc
int
cli
pop
das
mov
outsb
inc
jecxz
stos
mov
repz
test
adc
adc
ja
cmp
jge
adc
aam
xor
jmp
cltd
in
test
nop
pop
adc
xor
sti
stos
dec
xchg
sub
cwtl
movsl
mov
cmp
leave
insb
sbb
loop
fsubr
fisttps
ret
fildl
sbb
push
push
cmp
ret
in
xor
je
xchg
jle
xchg
imul
aad
outsl
test
fimull
leave
bound
xchg
dec
ds
int
cwtl
or
clc
mov
cmp
les
mov
iret
cmp
rolb
sti
in
or
push
pop
int
mov
lret
mov
dec
or
hlt
adc
fnstsw
add
xchg
ljmp
or
lahf
push
inc
lds
jle
mov
sub
scas
aas
xlat
hlt
lar
unpckhps
pusha
ret
int3
xchg
stos
xchg
lods
or
and
lahf
and
jo
sti
inc
cmp
loopne
lods
jp
outsl
xor
pop
push
jp
pop
add
lods
jmp
mov
je
loop
dec
aad
mov
sub
xor
repnz
jbe
jl
sbb
loope
out
call
or
xchg
jp
fs
cmp
iret
vsqrtpd
cli
xor
cmc
les
cwtl
sahf
or
inc
jne
xchg
inc
adc
xchg
sub
inc
xchg
xchg
push
push
dec
sti
aam
sub
repnz
outsl
and
popa
lea
xchg
aam
and
xor
lea
mov
inc
pop
icebp
dec
xor
or
test
popl
xchg
cmp
and
mov
mov
hlt
and
pop
cmc
adc
xor
loope
ss
int3
jb
pop
add
lock
pusha
xchg
loopne
rorb
popl
cmc
sub
dec
sbb
lock
add
xchg
test
in
push
xor
mov
das
xlat
mov
popa
int
cltd
push
adc
clc
fnstenv
sub
jnp
add
mov
sub
xor
repz
int3
mov
push
in
lods
ljmp
fildl
in
pop
sbb
mov
xchg
movsl
mov
lods
jmp
and
xchg
push
mov
mov
aam
push
fisttpl
out
cmp
imul
call
mov
decl
cs
ret
add
add
arpl
loope
xchg
mov
add
popa
xlat
xchg
out
and
mov
sbb
pop
push
call
xor
outsb
jmp
mov
divl
mov
dec
call
sbb
inc
adc
push
mov
loope
nop
dec
cld
por
ljmp
mov
ret
or
cmp
jmp
inc
lds
ds
cmp
jmp
inc
loop
mov
pop
test
faddp
jecxz
int
xor
lock
xchg
sbb
or
mov
pusha
fucom
aad
inc
nop
mov
lss
mov
mov
mov
notl
loope
mov
push
aad
std
ds
pop
inc
decb
sub
jb
mov
jecxz
call
jne
push
aam
sub
int
sub
sub
test
xor
mov
shll
aad
stos
into
or
push
arpl
fidivl
in
or
jmp
inc
mov
loop
cmp
loopne
dec
setl
cli
stc
outsl
cmpsl
cmp
fisubrs
pop
mov
and
pusha
sbb
movsl
fstpt
stos
pop
and
fistpll
mov
dec
bound
fimull
lds
cmp
repnz
push
xorl
pusha
insb
pop
mov
imul
repnz
lret
mov
cmpsl
repnz
rolb
push
push
fdivrp
mov
int3
cmp
orl
rcll
stos
or
inc
mov
inc
inc
es
cmp
and
aad
je
mov
repnz
mov
add
sbb
push
imul
jecxz
pushf
enter
out
addb
cmp
xchg
insl
cli
sarl
dec
rclb
ds
ja
xor
inc
movb
popa
cmp
shrb
sub
push
aas
cs
mov
inc
les
mov
movsb
rol
mov
mov
sbb
lret
lods
mov
jle
shrl
in
sbb
mov
int
fsubl
jae
mov
and
adc
decl
fisubrl
xchg
out
inc
lea
sbb
leave
in
push
adc
jg
lock
inc
pushf
pop
enter
ficomps
clc
push
test
mov
rolb
mov
jmp
test
push
ja
shr
mul
pop
aad
lahf
outsb
movsb
pop
lea
pop
pop
cmp
pop
test
lret
iret
mov
mov
cltd
clc
and
les
mov
cmc
cmp
into
movsl
stc
adc
int
push
dec
jge
popa
lods
arpl
imul
sarl
push
sahf
mov
imul
xchg
cmp
cmp
repz
fisttpll
dec
inc
sub
mov
cmpsb
xor
cmp
lahf
xchg
pop
loope
mov
push
into
insb
int
mov
inc
sbb
je
jnp
push
cmc
cmpb
xor
lods
add
iret
pusha
lcall
mov
imul
loope
mov
stos
sbb
cmpsb
mov
adc
lahf
int
cli
stos
mov
nop
jle
pop
or
leave
idivb
movsl
daa
mov
lret
stos
inc
and
push
inc
cmp
adc
pop
ffree
add
cltd
sarl
out
mov
and
sbb
mov
push
xor
adc
push
or
cmc
or
data16
dec
movsb
vmwrite
daa
and
mov
mov
sub
mov
pop
jns
jmp
aam
fnstenv
in
stos
push
jecxz,pt
jge
rorl
jl
test
cmp
push
mov
jle
mov
loop
popf
rcl
sti
inc
lods
adc
popa
cs
cmp
push
sbb
imul
and
mov
mov
mov
sub
bound
xor
rorb
push
insl
lds
sub
pushf
sbb
cmp
push
nop
fdivs
push
or
arpl
adc
jno
shll
insb
movsb
cmc
dec
xchg
xor
or
stc
aam
ja
push
dec
sbb
scas
aad
dec
sar
bound
or
xor
add
call
fimull
fldenv
jnp
push
cwtl
mov
cmp
nop
or
shll
pop
inc
cmc
in
mov
lods
imul
push
xchg
mov
mov
jbe
xchg
aad
lods
sbb
arpl
xchg
outsl
lods
ds
mull
mulb
insb
jmp
fldl
and
mov
mov
cmp
cmp
stos
jae
pusha
lret
sub
out
ret
cmp
scas
iret
xchg
call
mov
ds
or
shlb
mov
iret
or
repz
cmc
iret
mov
push
repnz
imul
dec
sub
pop
lock
negl
xchg
and
lahf
lahf
xchg
int3
dec
push
je
arpl
jo
sub
cmp
cmc
inc
jle
call
not
aad
subl
loopne
xchg
jmp
mov
out
es
gs
data16
test
idivl
push
and
mov
xchg
dec
xor
cli
push
aad
cmpsb
sbb
jge
xchg
mov
adc
jl
aad
push
dec
pop
cmp
scas
js
pop
or
mov
mov
loope
xlat
adc
sbb
rcll
sbb
cmc
out
mov
mov
adc
jp
btr
stos
push
sub
push
push
das
cs
inc
mov
push
or
sbb
and
adc
loop
mov
push
test
les
loope
fsubs
add
add
std
testb
add
scas
imul
popa
jmp
sbb
pop
push
push
or
lock
out
lea
or
xchg
xor
out
rorb
xchg
call
dec
mov
mov
iret
in
pop
jmp
scas
incl
xor
adcb
xor
add
leave
mov
sbb
jae
subb
mov
bound
lcall
pop
pop
jae
test
orb
ret
pop
aam
push
icebp
dec
aad
mov
push
jno
push
xor
jle
jmp
or
scas
test
jle
movsb
jmp
mov
inc
jp
dec
jae
sub
fcomps
sub
notb
add
in
mov
push
popf
xorl
jge
imul
test
jbe
int3
aad
scas
push
div
xchg
je
or
lahf
mov
and
sbb
pop
xchg
jmp
outsl
inc
aam
pop
jne
icebp
jne
aas
xchg
clc
cwtl
mov
paddd
aad
xchg
or
xorb
jb
test
mov
sbb
aam
test
add
push
push
bound
dec
shr
xor
pop
lods
loope
jns
lret
icebp
movsl
dec
or
mov
dec
leave
ret
mov
popf
mov
xor
jge
setb
stos
nop
leave
ret
push
dec
dec
and
mov
movsb
sub
sbb
inc
repz
psubsb
xchg
sub
jns
mov
stos
adcl
aam
sub
stc
mov
ret
mov
sbb
hlt
xchg
jmp
mov
stc
jecxz
cmp
mov
dec
mov
xor
insl
inc
jg
divps
dec
stos
sbb
inc
adc
jmp
pusha
and
dec
icebp
push
jmp
or
das
outsl
xor
jl
adc
scas
adc
lods
mov
cs
out
dec
or
xchg
inc
pusha
mov
lods
in
adc
push
negl
xchg
adc
cmc
xor
push
adc
bound
test
push
loop
out
xchg
lahf
mov
pmullw
sti
or
mov
in
and
jp
sbb
adc
loopne
scas
or
push
insl
fimull
dec
popa
dec
mov
fldenv
icebp
in
jge
fidivs
adc
xor
jle
adc
int
fcomp
mov
adc
pop
xchg
cmp
adc
mov
loopne
or
arpl
lods
and
jnp
addl
test
push
mov
jmp
mov
cmp
into
sbb
dec
lods
lcall
insl
xchg
push
std
jb
por
push
mov
pop
push
sbb
push
pusha
dec
or
mov
xchg
ret
iret
pop
cltd
fsubrl
jns
mov
push
mov
push
rol
iret
fbstp
fbstp
cmp
jne
hlt
pop
movsb
dec
out
push
jmp
out
jecxz
mov
loopne
pop
cmpsl
outsb
into
mov
jle
mov
setne
inc
dec
rcr
mov
mov
sti
xor
fs
je
pop
cld
push
jmp
test
stc
pop
sbb
aad
push
mov
sub
push
adc
out
imul
pop
xchg
das
loope
mov
inc
fpatan
shl
out
mov
sub
cs
adc
jge
add
cmc
in
lods
ja
sbb
sti
cwtl
mov
xchg
das
add
dec
mov
xchg
repz
es
push
mov
loopne
std
aad
mov
arpl
dec
mov
cmp
jbe
xchg
and
pusha
pushf
cmp
fnsave
or
cmp
push
push
divb
sti
sbb
rcl
pxor
scas
imul
idivb
subl
stos
cmp
xchg
jmp
arpl
arpl
jge
aad
mov
xchg
mov
push
and
cmp
popa
fldt
and
cmp
pop
or
cmpsl
sub
fnsave
dec
xchg
mov
dec
mov
xor
jne
xor
scas
out
cmc
stos
push
out
sub
nop
fwait
popa
mov
int
jnp
push
call
fucomip
es
jmp
cmp
mov
shll
insb
adc
shlb
mov
mov
mov
push
les
ficoms
xor
fld
xor
aad
sub
xchg
mov
inc
adc
add
push
and
std
into
adc
sub
adc
mov
fsubp
dec
outsl
aad
jno
and
insb
popa
jl
stos
es
scas
es
push
or
int3
mov
or
pop
inc
sti
ret
inc
aad
pop
or
jmp
and
inc
push
xor
in
dec
lea
inc
mov
mov
push
ljmp
push
jns
repz
imul
arpl
cmp
mov
xchg
xchg
xchg
mov
push
aad
mov
jmp
test
stos
xlat
jl
in
int
xor
xchg
and
push
stos
fimull
inc
fildll
imull
sub
xchg
jo
fwait
mov
adc
mov
jmp
pop
loope
xchg
push
test
dec
push
inc
xchg
imul
push
in
sbbb
add
faddl
mov
scas
xor
xor
je
inc
in
jl
popf
sub
in
js
adc
mov
push
popf
lcall
ljmp
cmp
pop
rcr
inc
sti
mov
inc
les
pushf
adc
js
out
daa
xor
mov
and
cli
jge
jmp
push
mov
mov
fistpll
sub
in
cli
stos
mov
shrl
mov
test
jge
and
int3
or
lods
add
test
int
xchg
nop
jecxz
push
inc
in
js
dec
xchg
xor
push
pop
sub
add
popf
mov
lret
ret
addr16
cmp
push
fmulp
cwtl
sbb
ljmp
sar
das
fmull
adc
rorb
push
xchg
mov
sbb
push
sti
loope
stos
mov
fistpl
shll
add
mov
insl
inc
loope
add
jl
mov
push
cli
mov
mov
outsl
stc
xchg
popa
mov
es
frstor
fidivs
in
sub
out
push
jmp
pop
movsl
std
and
and
or
push
or
out
mov
cmp
mov
out
add
cld
mov
dec
pusha
push
mov
inc
sbb
incb
lods
mov
lcall
mov
jp
jno
push
cmp
test
outsb
out
sti
dec
outsl
addr16
pop
pop
popa
add
sti
shrl
push
cmp
test
mov
idivb
jle
or
repz
les
loope
adc
pop
popa
lcall
aad
push
int
insb
gs
icebp
inc
test
sbbl
push
xchg
jg
jp
adc
mov
stc
or
jmp
push
inc
rcll
push
sub
and
in
mov
add
mov
pop
push
and
pushf
mov
imul
into
mov
das
lods
test
js
mov
pop
test
xor
dec
adc
sub
hlt
inc
test
in
push
sub
aad
pop
shlb
jb
dec
into
fdivrl
jne
cltd
loopne
and
push
adc
mov
sbb
pop
into
scas
cmp
pop
pushl
jl
xchg
xchg
push
mov
push
xor
aad
jb
xchg
sar
push
mov
mov
stos
ret
adc
xor
xchg
repnz
xlat
aad
adc
repz
icebp
rorb
je
aad
fildl
jmp
xchg
sub
test
sub
xor
xchg
scas
add
out
lods
add
and
hlt
or
test
or
mov
pop
dec
repz
int
mov
push
mov
sub
sub
cmp
or
sbb
icebp
cmpsb
jecxz
mov
std
out
inc
aad
inc
cmp
iret
inc
popa
dec
mov
test
leave
ficoms
cltd
adc
maxps
xchg
test
roll
sub
push
orb
leave
lret
pusha
dec
fcoms
and
jns
scas
jmp
aad
cmp
cmp
xchg
sbb
and
in
cmc
orb
dec
sub
int
mov
addl
js
dec
adc
div
mov
cmp
and
icebp
ficoml
cmp
xchg
xor
js
shrl
jmp
push
roll
add
lods
adc
sbb
arpl
fisubrs
inc
push
aad
imul
ficoml
movsb
test
or
dec
aad
in
sub
sub
add
jmp
xchg
jg
iret
xchg
les
imul
insl
lcall
jnp
add
mov
jnp
lds
push
ror
enter
imul
out
aad
mov
and
xchg
push
js
les
mov
push
movl
jge
dec
mov
push
dec
adc
xchg
push
les
movsl
rorl
out
jle
adc
cmpsl
into
inc
in
xchg
test
xchg
or
or
or
push
das
rcrl
je
mov
std
mov
test
jmp
xor
outsb
lea
stc
data16
pushf
inc
adc
cmc
lods
mov
sarb
xor
sub
dec
movsl
ret
roll
ficoml
call
push
push
sti
mov
inc
scas
setno
fsubrs
push
adc
xor
clc
cltd
fmull
gs
sbb
movsb
mov
push
and
sub
out
xchg
repnz
arpl
push
cltd
cmp
dec
mov
sti
popf
mov
data16
popa
sti
jae
stos
sarb
orb
mov
fs
addl
push
fiaddl
xor
add
leave
test
mov
dec
pop
cmp
xor
testl
movsb
adc
sub
mov
adc
aad
jo
xchg
mov
xchg
std
pop
jnp
pop
mul
mov
or
mov
and
cmc
dec
pushf
and
jecxz
and
fstp
inc
cmpsb
push
adc
imul
daa
shrl
push
cmp
mov
cmp
xchg
and
mov
and
arpl
dec
cmc
insl
add
in
mov
shlb
int3
aad
sbb
ficoml
pop
or
in
add
cmp
xor
lret
add
or
sbb
ror
insl
jp
mov
push
rorb
sub
lock
dec
mov
mov
dec
mov
xchg
fsubs
notb
push
jno
pop
in
cwtl
movb
lods
dec
jo
dec
outsb
mov
out
xor
les
stos
inc
fimuls
inc
mov
lock
pop
mov
pop
cmpsl
dec
xchg
sub
add
call
dec
jne
movsb
out
or
jecxz
in
into
xchg
je
xchg
neg
scas
push
xchg
int
pop
frstor
jmp
mov
mov
mov
pusha
pop
xchg
jae
adc
lods
push
cmp
pop
nop
les
sub
cmp
js
lds
test
push
div
pop
rol
jns
cwtl
dec
adcb
int
push
leave
lret
mov
test
ja
repnz
mov
das
pusha
ljmp
es
jb
iret
fmul
nop
pop
sbb
ret
fdivs
push
imul
loope
mov
xchg
pop
repnz
in
test
and
lcall
hlt
or
lock
cmp
cs
test
dec
aad
inc
rcrb
fmul
sub
cld
xchg
xchg
and
sub
repz
les
es
fistpll
outsb
inc
aad
into
adc
leave
cld
sub
or
push
ret
psraw
jb
adc
ret
dec
insb
xchg
setbe
jne
out
shl
test
xchg
xlat
scas
xor
in
sbb
cwtl
rolb
mov
push
xchg
cmc
push
adc
stos
inc
cmp
notl
cld
xor
imul
or
int3
dec
pop
roll
push
cmp
xor
jae
inc
push
lock
les
inc
in
mov
pop
daa
mov
cmc
out
mov
sets
cmpsb
rcr
ljmp
or
add
movsb
into
cmc
inc
or
loopne
ja
lret
and
int
out
pop
lahf
xchg
aas
sbb
push
in
or
dec
jg
orl
mov
inc
stc
enter
jno
je
push
bound
mov
cltd
fsubp
sub
mov
std
mov
xchg
ret
lea
outsl
jmp
sti
mov
pop
xor
pop
cmp
inc
test
lcall
xor
xchg
xchg
jg
jmp
les
js
pop
mov
adc
and
push
add
xchg
int
in
out
int3
enter
adc
cld
cmp
cmp
add
lods
and
jo
mov
dec
mov
jb
or
cmp
pushf
pusha
out
xor
push
and
dec
xchg
adc
mov
add
push
orb
ret
cmp
and
xchg
cmp
sub
mov
fdivrs
inc
pop
and
in
aaa
in
pusha
push
popa
sub
pop
divb
lods
loope
sbb
adc
mov
test
jne
fnstsw
les
jmp
outsl
mov
cmp
xchg
je
movsl
sub
cmp
out
insl
loop
lods
int
adc
aam
leave
insl
dec
std
stc
sti
cli
jnp
xchg
mov
pop
mov
ljmp
shll
iret
lods
fs
leave
lahf
hlt
jmp
aam
leave
xor
mov
ret
push
ss
mov
arpl
into
insl
pop
cmp
dec
lock
sbb
push
faddl
sbb
jnp
mov
leave
xchg
and
jmp
cltd
inc
mov
jecxz
js
outsl
pop
ffree
xor
clc
xchg
pushf
outsl
or
pusha
sbb
scas
scas
mov
mov
or
mov
add
leave
cmp
dec
and
jmp
iret
loop
or
out
jae
test
lahf
call
adc
call
xor
fdivl
ds
dec
incb
ljmp
jge
gs
insl
vsqrtps
sub
outsb
testl
clc
or
cmp
frstor
push
rorb
or
into
movsl
or
and
jge
fistpl
aad
jl
loopne
scas
jecxz
inc
xor
dec
js
pushf
movb
mov
or
xor
mov
inc
mov
scas
push
cmc
push
and
pop
and
ljmp
add
cmp
push
and
fdivr
xchg
pop
lods
jl
cmpsl
dec
int
add
inc
stos
jae
or
cmp
cwtl
movsl
jae
push
adc
in
and
or
mov
jecxz
outsl
int
jmp
outsb
mov
fsubr
addr16
fdiv
nop
lret
push
ljmp
adc
adc
xor
stos
dec
out
dec
push
lret
test
nop
mov
jle
or
cli
in
adc
sbb
roll
push
xor
and
aas
fwait
cmp
mov
sbb
and
jae
mov
mov
sub
lea
sbb
sti
xor
adc
cli
int
mov
jo
leave
mov
cmp
adc
inc
movsb
mov
pop
mov
add
aad
jge
jecxz
dec
jns
push
or
xchg
inc
ja
test
push
or
arpl
cmp
fistpll
cs
bound
mov
mov
mov
dec
gs
dec
inc
mov
out
sbb
xchg
idivb
mov
aam
out
lods
mov
in
iret
xchg
mov
outsb
add
jmp
inc
bound
pusha
dec
xchg
sub
decb
into
jmp
out
inc
xchg
outsl
aam
sarl
hlt
je
jmp
fs
mov
loope
jae
out
stos
push
divb
dec
or
cmc
push
sahf
pop
jg
jp
and
sbb
aad
ret
test
stos
add
ja
xchg
mov
fstl
jns
sub
jbe
fs
mov
loopne
dec
jmp
lods
cs
mov
mov
cmp
ret
mov
dec
cmp
out
mov
mov
insl
mov
sub
jmp
jae
cld
sub
insb
hlt
jmp
aad
jne
pop
lods
or
dec
fstps
jle
adc
push
push
adc
xor
sbb
dec
sbb
mov
test
clc
or
mov
or
sti
repz
adc
inc
sub
adc
adc
lods
inc
jae
xor
or
sub
aad
fnsave
dec
fucomi
and
out
sub
sub
push
and
pop
in
xlat
jmp
adc
ret
ficompl
add
inc
repz
std
xlat
add
adc
cmc
jnp
pop
sbb
xchg
popa
jg
push
decl
xchg
cmc
in
test
xor
or
adc
ss
lret
ljmp
or
xchg
ja
add
or
aas
pop
jecxz
push
repz
aas
mov
pusha
push
push
push
mov
and
inc
jp
mov
mov
scas
cmp
xchg
xor
in
loope
loopne
mov
pop
mov
xorl
and
add
and
xor
pop
push
xchg
test
outsl
push
clc
ja
sub
lock
mov
into
ss
andl
jg
push
mov
dec
cmpsl
idiv
js
adc
sub
mov
push
mov
fwait
xlat
pop
cli
fsubrs
fmuls
movsb
xchg
push
cltd
test
mov
inc
inc
das
aad
sbb
in
sub
dec
adc
movsb
fistpl
lcall
xlat
aad
fimull
pop
lea
dec
jb
push
out
xchg
xchg
xchg
je
sub
dec
in
adc
jns
add
sahf
lea
jmp
pop
jmp
mov
sbb
sbb
div
jg
mov
fmuls
roll
xor
mov
mov
mov
xor
out
or
cmp
pop
dec
psubusb
inc
in
clc
jno
add
fwait
xor
cmc
lods
das
gs
push
sub
sbb
mov
adc
adc
cmp
mov
lcall
push
or
out
mov
lret
adc
adc
mov
jecxz
and
pop
mov
and
mov
push
aam
cmp
pusha
testb
and
decb
mov
xchg
jecxz
or
test
loope
rclb
xchg
mov
inc
jb
mov
cmp
dec
add
mov
inc
jecxz
cs
xor
cs
cmp
inc
xlat
inc
stos
dec
and
sbb
int
shrb
int3
jmp
daa
fucomi
leave
imul
and
xor
cmp
pmullw
pushf
and
aaa
psllq
int
sub
fsubrs
inc
sub
and
sub
xor
insl
inc
push
sahf
mov
imul
mov
xchg
aam
lret
cltd
xchg
imul
clc
add
test
dec
xor
aam
ss
dec
mov
pop
inc
xor
dec
push
mov
loopne
cmc
shll
pushf
fiaddl
addb
add
push
shrb
lcall
sti
notl
gs
fldcw
push
stos
push
mov
pop
dec
out
inc
ss
mov
or
cmp
mov
popf
adc
cmp
bound
or
adc
cmp
fildll
push
pop
add
daa
outsl
fcmovu
adc
hlt
jecxz
sub
push
ficompl
bound
les
push
sbb
xchg
gs
inc
mov
mov
or
aad
add
mov
push
int3
es
pop
sub
xchg
lcall
clc
sbb
out
stos
or
movsb
pop
insw
fimull
jg
mov
and
push
lods
adc
xchg
push
outsl
into
sub
pop
lods
xchg
int3
pop
popf
cmp
insl
mov
sbb
sar
ret
mov
pop
je
push
ret
or
outsb
das
in
fcomps
or
lea
das
icebp
mov
aas
loope
xchg
pop
sahf
fwait
jmp
mov
jb
or
xchg
push
repz
arpl
push
aad
sbb
fisubl
dec
ret
call
xor
adc
test
ret
out
popf
scas
cmc
lcall
xorb
mov
jle
push
fldl
arpl
out
dec
ljmp
inc
xor
aad
push
mov
inc
cli
mov
in
js
out
iret
lret
jns
leave
int
loop
shll
pop
push
dec
call
cmc
aam
in
sub
inc
lret
dec
int3
xor
xor
jge
int
lea
hlt
fwait
mov
data16
int
in
push
push
push
test
aad
push
jnp
pop
push
stc
sub
inc
sub
paddd
shr
sarl
out
daa
fs
cmp
add
mov
in
mov
out
xor
cmp
repz
mov
inc
pusha
inc
adc
jp
iret
test
jo
cmp
pusha
mov
cs
je
sub
and
data16
loope
sbb
test
and
sti
imul
cmc
xchg
add
gs
cmp
testl
sub
ret
add
fst
mov
adc
add
push
ret
jge
sub
cmp
loope
mov
iret
mov
sub
pop
push
push
int
pop
sbb
push
sub
sar
js
cmp
dec
rcrl
jb
outsl
insb
mov
xor
nop
not
xchg
cmp
mov
jne
loop
or
int
jl
jns
loope
sub
inc
ja
cmp
xchg
jl
ret
lods
adc
jo
or
dec
or
xchg
xlat
adc
in
sahf
add
mov
inc
ds
int3
mov
fnstsw
inc
mov
adc
xchg
imul
cmp
push
dec
sub
inc
mov
cmpsb
movb
push
add
lods
or
mov
adc
call
mov
iret
lods
or
inc
xlat
cmp
xor
les
cmp
addr16
push
test
mov
loope
cs
js
pop
mov
mull
xchg
out
loope
cmpsl
arpl
jne
je
or
push
cmc
rorb
mov
xor
mov
or
pop
add
scas
js
mov
ret
les
ficompl
jnp
mov
test
sub
inc
icebp
notb
sbb
clc
and
push
add
cmp
pop
into
sub
pop
adc
addr16
adcl
jns
int
aad
sbb
mov
lahf
mov
pop
mov
inc
or
bound
sub
cmp
or
cwtl
mov
jb
mov
cmp
xor
add
push
aad
clc
push
mov
jno
pop
sbb
sahf
in
stos
aam
or
clc
dec
cmp
call
pop
push
xchg
outsb
sub
rolb
pop
lods
dec
xchg
xchg
mov
sbb
add
jns
jmp
insl
pop
leave
jmp
int3
das
rcrb
pop
cmc
adc
cmp
sub
and
dec
jnp
in
movsl
push
imul
out
xchg
les
lcall
idiv
ud0
sbb
push
fnsave
repnz
inc
repz
add
cli
push
ficompl
popa
imul
cmp
sti
mov
jmp
mov
iret
push
aad
or
lods
es
popf
aad
aas
popf
or
stos
jno
add
lret
lcall
push
xor
ljmp
fdiv
pop
out
out
sub
and
cld
and
aad
mov
mov
dec
mov
in
lea
and
mov
jp
addl
or
pop
data16
mov
lds
add
dec
ljmp
loop
cld
pop
push
mov
jae
pop
and
scas
jmp
rclb
sbb
gs
popa
mov
pop
sbb
push
popa
push
icebp
dec
popa
dec
and
sub
ret
inc
lods
mov
mov
jnp
lea
stos
xchg
add
lods
imul
sti
scas
push
loope
sbb
or
mov
jno
ret
xchg
mov
stos
movsb
cli
js
sahf
fisubl
or
ret
loope
pop
xchg
shlb
and
inc
push
mov
push
lods
faddl
push
fisubrs
call
mov
jo
add
sbb
mov
add
into
pop
test
pop
jp
scas
cmc
shlb
jl
in
cmp
cmc
jg,pt
and
adc
xchg
fscale
loopne
jns
mov
mov
jmp
ret
sub
sti
cmc
and
out
mov
aad
addr16
mov
gs
rolb
ficomps
push
fistl
xchg
mov
inc
and
mov
jl
je
sbb
call
imul
ljmp
lahf
xchg
loope
dec
int
pop
xchg
push
mov
imul
mov
test
fisttpl
aad
fwait
bswap
sbb
inc
push
dec
rorb
mov
int
mov
hlt
in
rcl
cmc
add
ficompl
push
xor
and
fidivrl
mov
or
dec
stos
mov
test
cwtl
xchg
push
push
addr16
lcall
xchg
mov
xchg
jo
push
sbb
adc
fildll
ds
stos
push
dec
mov
inc
mov
mov
subl
or
jb
jne
out
mov
outsl
or
and
push
cmc
inc
xchg
test
xchg
xor
jge
mov
loope
or
mov
js
or
sub
pushl
sub
daa
int3
scas
addl
sbb
call
dec
jmp
dec
mov
nop
mov
pop
push
push
lods
sbbl
xchg
stos
jbe
insl
insb
imulb
mov
loop
jmp
int
sub
stc
arpl
cli
call
jbe,pt
movsb
cs
mov
dec
mov
out
xor
leave
or
mov
into
and
push
or
arpl
pop
bound
xchg
mov
adc
add
scas
or
pop
or
aas
jecxz
fsubr
push
sahf
push
push
or
pop
leave
les
and
aad
fmull
test
mov
push
out
iret
or
repnz
pop
cli
adcl
dec
xchg
js
jno
mov
jecxz
jmp
mov
add
xchg
lds
cmpsl
sbb
int
dec
dec
mov
jb
and
jnp
lea
lea
cmc
mov
mov
test
jae
sub
aas
pushf
pop
dec
pop
les
inc
mov
inc
xchg
nop
into
imul
in
ja
push
test
xchg
or
mov
cmc
mov
cmp
cli
les
xchg
mov
dec
testl
je
fsubl
cmp
mov
ret
fimull
fiadds
cmc
dec
outsl
pop
inc
adc
and
xlat
out
cmc
xchg
enter
jg
out
jno
lds
ret
or
sub
aas
es
cmp
fisttpl
aad
mov
pop
xchg
mov
leave
shlb
mov
or
pop
icebp
pmaddwd
outsl
shlb
push
std
push
call
lcall
icebp
mov
pop
es
rclb
paddusb
aam
out
mov
call
cmpsb
xchg
mov
stos
jb
scas
frstor
adc
int
xor
lods
mov
add
xchg
cmp
mov
out
das
insl
add
cmc
into
cmpsb
pop
mov
dec
add
mov
pop
jl
jmp
push
mov
xchg
add
shll
inc
test
shl
into
mov
xchg
ret
mov
mov
xchg
fsubp
jnp
xlat
cmp
pop
lahf
pop
cmc
mov
mov
fwait
sbb
idiv
cmp
aad
mov
dec
cmp
sbb
and
mov
fs
bound
sti
xchg
pop
rcrl
pusha
lods
fdivs
xchg
lret
jno
test
or
loope
or
insl
and
add
fistpl
xchg
sub
les
repz
push
jmp
dec
dec
iret
cmp
xchg
pop
xor
jge
fsubs
loope
test
inc
or
je
loop
jo
cld
addr16
mov
and
dec
stos
sub
jbe,pt
imul
out
aam
sub
fwait
out
xor
js
int
cmp
pusha
jno
daa
leave
and
mov
cli
ror
and
iret
push
shlb
cwtl
test
daa
lods
das
push
push
les
cmp
subb
inc
mov
jp
loop
jl
jle
test
jns
repz
jo
push
out
jg
dec
inc
jecxz
clc
sub
leave
jo
mov
out
adc
push
inc
mov
mov
cmpsl
pop
mov
jg
sti
lds
outsl
clc
inc
dec
sbb
daa
adc
stc
mov
pop
imull
out
test
ret
lods
ja
addr16
jnp
pop
inc
and
popf
test
inc
inc
pop
decb
push
cmp
xorl
loope
dec
int
ret
iret
scas
aaa
cmpl
and
sub
pushf
mov
lahf
aad
clc
repnz
pop
dec
xchg
cmp
xchg
and
test
loop
aaa
out
or
int
repz
ret
sti
add
fmuls
sub
inc
test
mov
js
add
xor
scas
mov
inc
in
insb
dec
loope
fstpt
cmp
addr16
mov
mov
cmc
and
cmp
push
or
dec
arpl
nop
add
out
montmul
cmpsb
inc
mov
popf
insb
and
push
sbb
loope
nop
sbb
cmc
jmp
jns
push
jg
dec
xchg
xchg
mov
xchg
scas
test
mov
sar
cmc
sub
jge
pushf
mov
mov
das
sub
add
sub
jl
mov
jp
cmp
imul
outsl
dec
lods
bnd
fnstsw
mov
jl
nop
inc
mov
mov
adc
add
loop
out
sub
scas
sahf
mov
shlb
fmuls
mov
cmc
push
add
jns
lock
lods
cld
aas
rcrl
cmp
sub
xchg
sti
pusha
xchg
cmp
rolb
sbb
dec
sub
mov
divl
aad
ljmp
xchg
fisubrs
cmp
and
into
inc
sub
mov
lret
fisttpl
jmp
sti
mov
xchg
into
jl
data16
xchg
inc
scas
mov
dec
inc
dec
sub
lea
and
dec
sbb
outsl
jbe
mov
add
nop
into
aas
or
icebp
sbb
test
add
mov
inc
mov
nop
sub
adc
dec
sub
int
push
mov
jge
sub
push
mov
and
repnz
and
cltd
cmc
pop
mov
cmp
aas
cwtl
adc
jmp
adc
lcall
mov
mov
paddsb
enter
and
lea
dec
cwtl
xor
dec
into
cmp
ret
int
jge
inc
or
push
adc
int
sbb
out
xchg
iret
fnstsw
pmulhuw
or
push
xor
xchg
fcompl
and
xchg
or
mov
cmp
inc
xor
insb
lea
xchg
fadds
test
and
sbb
cmp
iret
mov
cmpsb
xchg
cmp
lods
push
and
cmc
iret
mov
lcall
ds
pop
and
jmp
fstpt
std
push
ret
add
ret
rcrb
clc
sub
aam
pop
ljmp
pop
roll
cmc
ret
iret
pop
jmp
test
ds
rorl
lods
push
pop
cmp
xchg
jl
push
add
dec
fs
pusha
mov
nop
jmp
cmp
fdivp
push
movb
mov
lds
shlb
xchg
clc
test
gs
fimuls
insl
push
adc
ret
xchg
scas
and
leave
xchg
data16
fs
mov
fmulp
xor
add
xchg
test
add
mov
cs
xchg
jne
lods
cmp
push
xchg
dec
popa
int
sbb
in
push
daa
mov
mov
lret
lods
outsb
aam
ja
jno
ja
adc
and
add
push
call
mov
sbb
into
out
testb
xor
push
out
out
div
sti
pusha
loopne
lea
ja
jb
cld
stos
mov
xchg
stc
push
xorl
sbb
repnz
jg
dec
xor
cmp
pushl
mov
jmp
and
loopne
mov
in
fistl
xchg
sahf
mov
mov
jnp
dec
loop
int
daa
mov
adc
stos
mov
test
aas
or
sbb
push
icebp
cmp
xchg
lar
sbb
addl
fxch
cmc
das
fiaddl
or
jl
jle
gs
add
cmc
mov
stos
inc
push
incl
sbb
out
mov
cmp
dec
stos
sbb
sbb
mov
adc
ja
repnz
push
lds
cmpsl
cmp
xor
lahf
jae
mov
dec
aas
push
rcr
imul
call
dec
std
mov
fimull
pop
cmp
push
ja
call
xor
sahf
dec
push
fadd
and
and
cs
adc
cmp
push
in
cmp
cmovp
dec
mov
pop
mov
pop
lret
jge
mov
call
sbb
mov
lock
into
fmull
push
xchg
dec
adcb
dec
int3
add
test
out
add
dec
and
test
mov
shl
jg
inc
loope
lods
loope
adc
pop
ja
xchg
aad
jo
loope
jns
push
sbb
push
cmp
cld
add
mov
cld
das
push
js
push
out
mov
outsl
in
jbe
scas
sti
ror
cli
push
dec
outsb
jo
test
imul
sbb
mov
add
out
mov
ds
mov
data16
add
mov
jnp
cld
mov
movsb
daa
and
fcoms
enter
mov
testl
xchg
stc
stos
add
enter
jmp
fwait
dec
imul
push
cmpsl
js
add
mov
cmp
and
jl
jae
dec
pop
jno
outsl
gs
mov
lret
dec
enter
pop
jge
sub
sub
push
fiaddl
mov
push
inc
or
out
push
or
mov
outsl
lods
jmp
addr16
or
stos
push
mov
je
mov
mov
sub
xchg
jge
loope
sub
mov
movsb
mov
sub
fisubl
mov
jnp
cmp
nop
jg
add
mov
xor
fcomp
popf
int
sti
frstor
xlat
cmc
gs
mov
roll
sub
jg
adc
xor
cmp
mov
pop
dec
adc
lods
push
fiadds
sbbb
loopne
ljmp
adc
rorl
push
xor
pop
xchg
jns
iret
add
pop
aad
ret
adc
dec
sar
in
mov
jl
dec
or
out
jle
mov
push
mov
mov
dec
in
jb
out
aad
sub
clc
xchg
je
dec
mov
or
into
lret
setno
xchg
lock
dec
or
shlb
es
fsubs
inc
xchg
jge
jno
inc
add
jge
xchg
in
hlt
or
gs
dec
setp
and
dec
mov
add
psubq
fs
add
cmp
rclb
js
aam
add
pop
sti
xchg
fdivrl
call
shll
out
dec
stos
inc
mov
call
cmp
lods
cwtl
add
cmp
fidivrl
enter
push
repnz
cmpsb
sbb
repnz
mov
jle
mov
or
fs
dec
aas
push
loopne
das
add
ret
lea
imul
sti
or
and
add
and
mov
push
pop
mov
pop
jb
push
mov
test
iret
fwait
inc
xor
js
jge
or
into
dec
mov
jno
pop
sti
cmp
or
xchg
push
enter
push
mov
adc
test
sub
push
outsl
ljmp
stos
clc
adc
out
xchg
mov
loop
adc
addr16
dec
or
xor
mov
mov
sub
dec
dec
subb
mov
out
sbb
push
xchg
pmaddwd
shll
dec
shl
sub
sbb
or
outsl
iret
mov
out
cmp
dec
subl
imul
cs
movsl
jmp
js
nop
xchg
fsubrp
neg
mov
jp
bound
ficompl
or
loopne
sahf
dec
push
fiadds
push
not
cmp
in
dec
fwait
xor
pop
movsb
mov
mov
stc
mov
iret
inc
xor
sti
test
lock
xchg
loopne
adc
imul
and
sub
adc
frstpm(287
nop
fidivl
jmp
test
icebp
fisttps
stc
loope
int
das
adc
outsb
bound
mov
mov
cld
into
dec
out
leave
push
fwait
adc
scas
fistl
and
out
pop
push
xchg
dec
jmp
int3
pop
lds
pop
gs
lock
psubq
push
inc
js
movsl
ss
shrb
and
mov
pmullw
inc
nop
data16
int3
scas
rcl
inc
push
add
sub
fisttps
out
inc
roll
cltd
test
movsl
call
js
jecxz
lds
mov
call
aad
xor
or
mov
negl
mov
cli
adc
jecxz
xor
inc
jmp
ss
sub
cmp
mov
lods
int
aaa
jne
push
testl
loop
or
jl
imul
jle
jl
ret
push
dec
xchg
ret
dec
xor
stos
scas
aad
notb
test
cld
push
movb
jns
push
dec
sarl
mov
aas
lds
les
je
xchg
gs
add
ret
push
rcrb
sbb
add
fwait
addr16
push
or
loope
dec
xchg
fs
sub
add
daa
es
jno
int
mov
and
or
test
sub
and
lds
push
fsubrl
cmc
dec
in
dec
fistpll
scas
dec
xor
int
aad
bnd
out
add
mov
enter
les
mov
sub
pop
xor
jle
int
mov
xchg
lret
pusha
cmp
loope
das
pusha
fwait
popa
xchg
cmp
pop
sub
inc
push
cli
jmp
sub
adc
jmp
jp
sbb
rcrb
and
sbb
push
cmp
dec
mov
and
loopne
adc
lds
jge
xlat
inc
jmp
stos
xor
mov
push
jbe
cld
ret
arpl
and
sub
lcall
mov
aad
push
psrlw
jge
dec
outsl
mov
push
mov
pop
fldenv
pusha
ret
imul
cmp
dec
jmp
and
mov
das
xor
sub
lahf
inc
mov
jo
pop
xchg
cmp
push
sbb
lcall
mov
scas
cmp
in
mov
mov
push
xchg
mov
xor
scas
stos
leave
cmp
pop
adc
pop
std
loopne
jns
dec
sub
adc
pop
push
mov
aad
dec
test
fildll
test
data16
shll
mov
popf
lods
xor
inc
cld
jmp
xchg
jge
adc
pop
inc
in
pop
in
sub
xchg
and
js
fcoml
mov
scas
lods
mov
add
lods
add
xor
insb
xchg
into
pop
xchg
les
push
aaa
sbb
iret
outsl
ja
lcall
xorb
aad
jl
mov
mov
dec
aad
mov
sub
dec
sbb
dec
jnp
imulb
fdivrs
adc
ja
test
mulb
ljmp
loope
test
scas
mov
rol
test
sub
test
stc
test
xchg
cmc
or
jecxz
aad
ret
pop
iret
pop
loope
mov
call
pop
subl
mov
rorb
push
fnstenv
mov
push
add
mov
cmp
jns
xchg
lods
push
orl
pop
rclb
sub
popa
pop
cmp
add
mov
xor
pop
jo
add
into
pop
and
pop
adc
mov
mov
add
rcll
jbe
enter
mov
movsl
aaa
dec
mov
scas
ss
roll
into
stos
imul
in
cld
mov
dec
popf
pop
loopne
xchg
cmc
or
mov
xchg
fcompl
adc
dec
cmc
pusha
in
dec
cmp
jmp
out
ror
scas
stc
xchg
or
jmp
mov
jne
sbb
call
jl
dec
sub
ljmp
jnp
jecxz
clc
xor
lock
push
mov
adc
or
push
js
stc
jmp
js
dec
pop
cmpsl
mov
je
and
lods
clc
mov
pop
cmp
push
scas
pop
xchg
sub
fcomps
push
mov
ror
and
cmp
bound
jbe
leave
mov
js
adc
ret
push
mov
cmp
aad
xor
jno
jge
add
and
loope
iret
jmp
pop
jmp
inc
dec
pop
mov
mov
pop
insb
dec
mov
jb
pushl
lods
imul
out
fucompp
push
movsb
pop
dec
xchg
or
mov
mov
inc
inc
hlt
mov
dec
and
fucom
mov
call
hlt
jecxz
cmp
aaa
mov
pop
icebp
ja
pop
inc
enter
or
cmc
stc
repz
sub
xor
inc
push
sbb
ret
pushf
adc
jecxz
push
xor
push
inc
adc
nop
in
in
lret
leave
pop
test
cmp
daa
movsb
lock
inc
iret
cmc
mov
pop
mov
or
leave
pop
inc
dec
call
pop
or
pop
or
lods
or
aad
jp
and
addr16
test
xchg
rorl
or
push
mov
cmp
fsubrs
int3
mov
add
mov
dec
out
and
mov
dec
push
outsb
outsl
aad
dec
jb
mov
and
scas
in
aad
push
mov
std
in
imul
add
std
stos
cmp
je
fcoml
sub
dec
addr16
imul
lods
add
fisttps
xor
cmp
xchg
int
stc
lock
loopne
lock
lods
jge
popa
jnp
adc
jp
jg
cltd
pop
add
fnstenv
das
in
jbe
push
pop
jp
mov
stos
cmp
mov
mov
cwtl
imulb
inc
aaa
xchg
cld
imul
loope
fsubl
into
xlat
and
cld
xchg
jmp
push
pop
nop
mov
adc
push
loop
dec
out
mov
lds
dec
aad
xor
inc
clc
cmp
push
mov
jmp
bound
dec
notl
fdivrs
enter
push
loop
mov
in
mov
push
mov
popf
jb
rorl
xlat
movsl
fwait
pop
sti
out
loope
jns
adc
xor
data16
cmpsb
xchg
icebp
xor
sub
sahf
dec
adc
inc
into
aad
aam
pusha
addr16
clc
mov
cmp
aam
loopne
xchg
fisubrs
and
inc
mov
sbb
add
decl
data16
push
aad
cmp
fiadds
shlb
mov
je
subb
push
add
sub
push
mov
jnp
in
jae
pop
cmp
cli
bswap
jecxz
mov
mov
cmc
or
xchg
and
pmullw
cmpsl
inc
jg
mov
test
into
xor
mov
scas
dec
xor
movntq
add
ficomps
jns
out
mov
sti
mov
jo
mov
push
add
aad
cmp
arpl
leave
and
out
cli
sbb
and
shll
pop
xchg
adc
aad
sti
dec
mov
mov
xchg
addl
pop
neg
aad
mov
add
shl
or
push
sysret
cld
add
testl
ja
ss
std
jno
dec
xlat
aas
ret
or
xor
roll
ret
cmp
jno
add
sub
xchg
sbb
addr16
lret
in
xchg
sbb
int
call
xor
xlat
dec
mov
js
adc
sub
faddl
jbe
jo
dec
aad
jle
inc
push
repnz
xlat
sti
test
test
xchg
xor
nop
ljmp
outsb
mov
aaa
aas
repnz
jge
jmp
sbb
jae
int
adc
or
fsubl
inc
lahf
out
mov
andb
call
xor
fdivrl
mov
sub
mov
adc
cwtl
mov
test
popa
fnsave
imul
outsl
aad
cmp
addr16
adc
dec
mov
and
jge
mov
cltd
mov
stos
jl
nop
fstps
ja
popf
int
pop
sub
or
enter
jo
and
cwtl
pop
push
stc
std
pop
sbb
pop
lret
jge
dec
testl
fnstsw
sahf
call
idivl
lcall
mov
mov
sub
push
push
fwait
insl
mov
mov
add
push
inc
add
shlb
aas
jmp
fmuls
cmp
cmp
lds
int
jl
add
cmc
sarb
outsb
inc
stc
popa
int
loope
clc
sti
add
popf
jns
pop
xchg
xchg
icebp
or
mov
xchg
into
and
js
into
and
jne
in
mov
xlat
pop
fnstsw
rorb
imul
lods
mov
dec
add
int
aam
cs
pop
xor
push
mov
outsl
dec
or
dec
mov
cld
lcall
mov
add
lods
mov
dec
idiv
sbb
adc
cmc
iret
in
iret
fcmovbe
jl
inc
and
push
inc
mov
jae
in
out
mov
xor
lret
pop
mov
shufps
push
call
pop
sahf
xchg
jmp
lods
or
mov
stos
js
pop
push
and
xor
in
xor
les
adc
jns
scas
cmp
fwait
jo
dec
xor
sbb
push
loop
adc
xor
push
js
and
xlat
imull
mov
aaa
mov
jmp
and
das
repnz
shl
into
push
pusha
dec
dec
push
sub
scas
mov
sub
test
repnz
sub
pop
jmp
xchg
faddp
mov
mov
pop
lock
in
fwait
cmp
aas
jbe
stos
cmc
mov
xchg
test
cmc
push
mov
adc
pop
and
add
mov
pop
add
divl
fs
xlat
mov
mov
js
aam
mov
xchg
hlt
sahf
jmp
add
xchg
je
enter
mov
or
cwtl
in
mov
mov
lods
sub
fwait
jp
popaw
inc
lea
or
mov
mov
mov
push
adc
push
mov
filds
adc
leave
dec
pop
je
dec
pop
aad
cmp
aas
out
into
orl
and
testl
lcall
out
and
push
pop
xchg
xchg
sti
ficoml
test
sar
pop
and
mov
into
movswl
int
stc
movsl
and
clc
xor
fisttps
cmpsb
les
test
inc
xor
mov
and
or
rclb
inc
jg
shll
jg
out
cltd
mov
popa
ficomps
in
xchg
aad
and
sbb
fdivrs
jns
push
nop
fsubrp
gs
js
fdivrs
inc
loopne
pop
out
aad
dec
jmp
push
js
and
inc
setne
xor
jge
std
mov
cmpsb
ss
dec
dec
popf
outsl
je
and
pop
js
fsubrl
cltd
and
mov
inc
dec
ds
sahf
inc
js
mov
adc
push
jecxz
js
arpl
add
push
mov
dec
filds
mov
shlb
popa
adc
pop
cld
test
lret
loope
rclb
loopne
idiv
dec
subb
push
in
xchg
pop
stos
cmp
scas
popa
clc
insl
or
or
leave
into
stos
sub
stos
cltd
lret
mov
lret
jns
orl
inc
jo
xlat
or
popf
lods
movsb
cmpsl
je
pusha
aam
mov
xchg
sbb
ljmp
pop
add
pop
dec
sub
dec
into
push
fildll
call
iret
pop
pusha
jmp
std
cmpsb
scas
push
inc
clc
cmpsb
sti
sub
out
call
ja
sub
int3
fs
aad
cld
stos
std
test
cmp
fdivrs
loope
cmp
jmp
xchg
cmc
or
dec
fnstsw
idivb
push
lcall
divl
imul
xchg
xor
in
into
shrb
and
push
xchg
dec
std
mov
jnp
in
dec
in
add
xchg
cltd
push
push
mov
mov
add
xchg
andl
pop
shl
pop
repz
jns
pop
jno
inc
push
test
sbbb
clc
sbb
idivb
or
outsl
fisubrl
sub
push
push
mov
push
dec
stos
ljmp
xchg
nop
push
push
outsb
out
push
cli
pop
cmpsl
or
jmp
fsubrl
jmp
cmc
loope
adc
jne
mov
cmp
inc
ds
imul
sahf
lods
in
divb
into
insb
and
or
push
pop
fcomps
pop
or
jns
mov
sbb
adc
push
and
dec
out
incb
lock
std
xchg
push
cmp
mov
test
loope
in
ret
push
jno
or
add
jp
decb
xchg
daa
scas
dec
pushf
jle
cmc
push
push
push
aaa
pop
jbe
and
enter
and
jno
inc
mov
lcall
ficomps
push
push
movsb
xor
aad
cmp
lcall
notb
in
cli
adc
lahf
popf
pop
inc
and
sti
mov
mov
aaa
or
iret
cmc
jle
nop
outsl
daa
outsb
loope
test
dec
sub
push
aam
in
or
adc
push
and
es
cmpl
inc
xchg
mov
lods
divl
fwait
roll
push
cmc
test
and
cmp
es
clc
dec
fwait
sbb
incb
xor
push
jge
mov
movsb
and
mov
pop
and
subb
xchg
dec
and
sarb
addps
jbe
clc
ljmp
dec
adc
push
pop
cmc
hlt
fdivrp
loop
pushl
dec
mov
jmp
loopne
or
inc
daa
inc
cmpsl
jecxz
add
jmp
roll
call
xor
roll
or
pop
loope
adc
lea
push
out
or
xchg
xchg
inc
add
adc
adcl
adc
and
jp
ja
or
loop
cmc
push
mov
rorl
ljmp
orb
adc
andl
cli
cmp
scas
es
int
mov
or
movsb
stos
pop
pop
mov
push
pop
idivb
adc
nop
mov
pop
lods
or
xor
cmp
or
insb
or
pop
gs
dec
add
ljmp
out
fcoml
xchg
sub
int3
testb
cltd
mov
jp
es
andb
ljmp
dec
pop
push
in
sar
adc
mov
outsb
pop
jbe
mov
movsb
mov
mov
sbb
loop
clc
sub
xchg
sbb
jbe,pt
les
popa
jne
lods
dec
ret
and
stc
in
lcall
cmc
jmp
inc
pop
pop
test
xor
arpl
jmp
mov
ret
mov
cs
mov
imul
or
int
cmp
mov
imul
push
mov
fisttpl
xlat
test
jp
push
stc
or
push
push
pop
sbb
push
cld
push
sub
inc
nop
fwait
inc
pop
mov
fbld
jle
ja
aam
neg
cld
aad
gs
pushf
dec
sub
popl
aad
rcll
or
xor
xor
inc
cmp
jge
mov
into
add
push
jae
and
or
xor
rcrl
aam
popf
cmp
leave
out
xchg
ss
aad
pop
into
lcall
and
push
mov
jg
test
outsl
lret
xlat
jp
jecxz
add
testb
inc
fdivrs
int
mov
sti
xorb
mov
sub
jmp
mov
lcall
loope
cmc
sub
aad
inc
sarb
inc
jb
iret
xor
xchg
xchg
jmp
rolb
jo
test
dec
loope
cmp
inc
mov
mov
xchg
or
test
sbb
sub
mov
xchg
xlat
mov
push
push
dec
pop
adc
jge
inc
or
in
and
mov
pusha
mov
jecxz
mov
dec
and
cmp
mov
sub
pop
dec
mull
sub
jmp
jg
addr16
loop
fbld
mov
cmpsb
pusha
dec
mov
dec
cmp
stc
data16
fs
and
mov
xchg
jnp
pop
imul
xchg
cmp
push
pop
lods
mov
mov
call
pop
int3
addr16
lret
repnz
les
and
inc
jne
test
xor
aaa
xlat
or
pop
push
mov
fstl
lds
sbb
jnp
adc
cmp
rcr
pop
nop
sbb
and
rcr
call
sbb
ss
push
out
lods
adc
dec
out
lret
aad
repz
out
xor
jge
daa
inc
dec
add
sti
rcll
cmp
cmp
dec
sub
jo
pop
adc
popf
ror
cli
pop
mov
rcrb
int3
popa
pop
inc
scas
nop
cmp
cmp
fcmove
loop
jl
add
mov
jbe
andb
sahf
lods
test
push
out
repnz
scas
mov
test
and
cwtl
or
cmc
mov
les
dec
frstor
les
hlt
dec
outsl
sub
push
fcom
push
rcrb
sub
lea
cmp
mov
scas
cltd
dec
loop
nop
sti
jl
rcl
sti
push
jmp
lods
mov
mov
fistpll
pop
lods
pushf
out
ret
iret
xchg
sub
in
pop
xchg
test
and
xlat
lods
mov
cmp
jecxz
aad
mov
jo
and
sub
push
jmp
jb
test
adc
dec
cmp
sub
mov
loope
outsl
aam
adc
call
inc
cmp
in
cmp
into
push
rcll
xor
and
mov
sbb
jae
push
fcoms
inc
adc
xchg
add
test
loop
push
sbb
sbb
sub
pop
lods
cmp
popa
or
movsb
or
in
into
das
dec
xor
adc
cwtl
into
mov
pop
aad
in
mov
sub
jns
pop
pop
in
out
dec
cmc
sub
jns,pt
in
out
pop
pop
push
popa
or
leave
enter
cmc
inc
lock
and
shlb
mov
jae
stc
negl
not
jge
add
out
or
stc
xor
stos
lock
mov
aad
sbb
pop
pop
xor
rolb
push
cwtl
fiaddl
mov
add
mul
sub
xchg
jp
test
mov
shlb
or
ja
push
and
clc
pop
cli
into
outsb
xor
push
loop
sbb
mov
sub
insl
sub
cmp
iret
dec
ja
mov
orb
loopne
inc
sbb
dec
ja
xchg
push
push
cwtl
jbe
mov
test
popl
adc
dec
and
idivl
jo
adc
mov
in
fcmovbe
and
cwtl
sub
add
daa
xchg
xor
ja
mov
jns
les
sub
adc
lcall
sbbb
cltd
pop
add
jno
aad
cmp
mov
inc
adc
dec
cmp
mov
fistl
dec
xorl
jmp
jmp
xchg
and
popl
cmpsb
cmc
dec
adc
cmp
or
adc
mov
and
aam
lods
mov
mov
bound
or
sbb
popf
xchg
jl
jmp
punpcklbw
test
push
lahf
lock
stc
add
sti
jmp
sbb
pop
xchg
jno
je
fs
out
cmpsb
jns
mov
cld
mov
pusha
dec
cmp
test
lahf
push
test
pslld
mov
pusha
mov
movsl
lcall
into
iret
or
ret
jb
ja,pn
sbbl
jmp
clc
cwtl
mov
xlat
push
cmc
cltd
mov
fcoml
popf
out
test
mov
dec
mov
cmc
int
rcrb
bound
mov
cmove
test
cmc
aaa
push
pop
push
and
sbb
adc
xor
jg
mov
lods
mov
imul
pop
out
jg
outsl
or
out
mov
adc
in
or
fidivs
out
ljmp
mov
jne
dec
loope
cmp
or
mov
or
ror
pop
mov
xchg
sbbb
cmp
sahf
or
rclb
push
or
into
stos
mov
inc
out
mov
xor
dec
jmp
xchg
aas
mov
jecxz
dec
inc
pop
adc
cli
popa
inc
pop
add
and
mov
push
les
mov
or
int3
clc
pop
jl
push
or
inc
movl
inc
xor
sub
lock
sahf
dec
mov
or
out
bound
mov
iret
in
inc
movsl
icebp
adcl
sbb
icebp
push
dec
aad
movsb
mov
jnp
loop
std
dec
lods
pusha
jns
mov
jno
pop
adc
fdivl
jo
aad
dec
sbb
test
inc
sub
sarb
in
cmc
mov
mov
out
cmc
dec
dec
hlt
and
sub
inc
mov
cmp
lret
aam
xchg
or
jl
filds
push
iret
nop
test
rcll
dec
aad
cmp
lahf
xor
sahf
dec
cmp
mov
mov
jno
jae
cltd
negl
lahf
loope
out
jnp
es
addr16
out
jecxz
in
inc
or
cmc
inc
aam
ss
adc
rcll
movsb
adc
jb
jae
xchg
inc
lret
addr16
jmp
cltd
mov
lret
pop
outsl
imul
cmc
mov
divl
nop
sbb
xchg
dec
dec
jns
xchg
mov
adc
inc
decl
pop
rcll
cmp
xchg
stc
in
sti
cmp
cmpsl
xchg
sub
or
int3
fucomp
jl
push
mov
push
push
jo
movzbl
dec
push
call
stc
lock
mov
mov
push
dec
and
ffree
or
std
jbe
pop
mov
nop
lret
aaa
mov
hlt
or
call
jecxz
lret
shlb
fcmovbe
or
insl
insb
stos
mov
cs
rorb
loope
iret
xlat
in
cmp
xchg
lret
int
orb
cmp
pop
or
mov
call
pop
or
data16
pushf
jle
inc
test
addr16
push
push
sbb
mov
jecxz
pusha
pop
insl
aas
cmp
add
push
adc
jno
or
jp
icebp
xlat
dec
sub
xchg
mov
xchg
xchg
movsb
hlt
icebp
jl
fs
movsl
adc
inc
xchg
nop
push
mov
invlpg
sub
or
push
pop
fidivs
loope
push
call
dec
scas
scas
fs
loopne
push
dec
bswap
push
pop
or
mov
xchg
nop
fstpl
pop
in
xchg
push
mov
cmp
xor
push
mov
cmp
inc
ds
call
push
and
mov
push
jae
iret
in
push
ja
inc
pop
xor
pop
sbb
mov
das
mov
inc
loop
push
ret
pop
push
sarl
aam
xlat
xchg
dec
in
cmc
pop
mov
cli
xor
jge
mov
imul
popa
addr16
outsb
xchg
rolb
push
sarb
inc
test
cmp
cmp
add
cmp
gs
jmp
inc
jb
pcmpgtw
mov
xchg
idivl
jge
cmp
jecxz
cli
in
pusha
xorb
mov
repz
inc
out
jmp
pusha
in
pop
push
mov
in
aas
add
lret
add
les
jae
mov
and
cmp
adc
push
insl
dec
mov
gs
nop
mov
mov
lea
add
inc
div
pop
sbb
sub
insb
mov
add
and
jmp
adc
mov
push
lcall
jmp
mov
mov
mov
dec
lahf
mov
faddl
jo
into
daa
nop
push
pop
out
sub
clc
jns
sbb
sub
lahf
imul
loope
or
popa
and
sarb
test
mov
aad
push
xchg
xchg
mov
jg
ja
mov
ljmp
inc
mov
inc
jp
aad
and
mov
adc
sarb
lret
xchg
inc
out
xchg
pushf
mov
pop
test
mov
test
cld
enter
popa
inc
fmuls
sub
and
cmp
fsincos
push
fimuls
push
mov
test
dec
nopl
and
lods
push
aad
scas
jg
xchg
ja
inc
std
lods
rclb
into
out
cmp
xchg
mov
shr
pushf
cs
adc
imul
dec
mov
mov
dec
xor
xor
cmp
push
pop
leave
nop
out
add
movsl
inc
outsl
into
push
ss
sbb
mov
stos
push
jb
leave
dec
jmp
fstpt
dec
imul
mov
adc
push
into
scas
rclb
jmp
jecxz
mov
sub
ret
jae
fcomip
cmc
dec
cltd
clc
push
sub
cli
cmp
push
mov
fldt
cmc
les
movb
jg
mov
mov
cmp
xchg
sbb
data16
pop
xor
dec
test
jmp
js
cltd
cmp
loope
cmp
dec
dec
int
push
jno
xchg
pop
jmp
xor
jo
mov
repz
cmpsl
push
cmpsl
rcrl
popa
rcr
pop
push
xor
outsl
jns
dec
cld
push
cmp
xchg
outsl
repnz
cmp
in
dec
or
add
rcr
push
je
into
imul
fcmove
xchg
aad
aas
or
push
pop
testb
es
fldl
and
sub
mov
and
dec
and
cmp
rorl
movsl
stos
inc
repnz
adc
fst
inc
stos
fld
dec
bswap
inc
fwait
mov
std
out
push
out
add
idiv
mov
lods
or
push
addr16
xor
sub
add
xchg
pop
arpl
xchg
or
xchg
or
in
mov
daa
dec
xchg
xor
xor
push
or
jl
orb
jle
lret
test
jmp
cmovne
and
and
jg
xor
pop
rorl
setb
add
loope
inc
push
cmc
xchg
ljmp
xchg
push
outsl
push
adc
adc
rclb
mov
and
dec
test
push
or
je
sbb
add
cmp
cmp
rcll
sub
xor
dec
mov
sub
or
enter
jp
sub
cmpxchg
in
lret
jno
or
test
lret
jle
test
mov
adc
jne
call
mov
mov
dec
jl
mov
xchg
push
std
fnstenv
or
cmp
and
dec
xor
sbb
mov
push
es
addr16
cmp
into
dec
enter
mov
adc
mov
mov
pop
ljmp
or
test
push
mov
sub
popl
ljmp
test
cld
inc
bts
inc
aad
dec
call
outsl
push
jns
xor
repz
cmp
aad
pop
xchg
jl
and
push
xchg
and
lods
push
xor
cld
cld
lret
dec
movsb
lods
stos
add
push
scas
repz
in
mov
ljmp
repnz
pop
popa
rep
lock
dec
test
insb
inc
rorb
mov
fdivrp
sub
int
sahf
xchg
mov
imul
test
fwait
punpcklbw
and
mov
icebp
xchg
sbb
popf
or
lahf
in
push
cmp
sbb
loopne
jle
stos
hlt
inc
daa
lods
into
push
aad
dec
mov
imulb
lods
divb
fcmovnu
enter
ss
test
les
movsl
sbb
lods
jne
cmp
loop
xlat
adc
in
aad
cmpsl
inc
sub
mov
cmp
loopne
cmpsb
ret
pop
pop
inc
inc
mov
dec
and
and
ficomps
adc
neg
cld
and
cmpl
mov
cmpsl
lahf
dec
pop
pop
punpcklwd
mov
in
pusha
sarb
sbb
je
lds
or
pop
out
movsb
or
mov
popf
xlat
adc
and
cmp
lcall
mov
add
in
inc
push
arpl
arpl
leave
lret
mov
jno
and
mov
out
shl
jl
mov
out
shlb
arpl
push
pop
cwtl
jmp
mov
or
push
test
push
add
fsubp
ja
repz
fcmovbe
je
mov
lds
mov
or
push
call
xchg
jle
and
ficomps
fsub
fmull
sbb
jecxz
mov
adc
and
mov
add
dec
mov
inc
bound
std
adc
cli
adc
rolb
out
test
idivb
sub
push
cmp
cltd
mov
test
or
sub
cmp
pop
dec
mov
xor
psllq
sub
xchg
test
or
in
fdivrl
xor
scas
das
push
dec
jmp
sbb
lret
and
sbb
in
add
pop
setne
loopne
or
jb
sub
hlt
pop
loop
popa
in
or
push
adc
insb
pop
cld
cmp
inc
into
jmp
arpl
cltd
pop
pmulhw
lods
aam
lret
push
dec
inc
aad
cld
xchg
adc
fsubs
ret
dec
dec
fiaddl
mov
idivl
repz
and
mov
fs
mov
pop
mov
push
sti
dec
xchg
jp
out
cmp
in
xor
xor
cmp
roll
std
or
jmp
mov
inc
call
cwtl
or
push
rcrl
sbb
lock
sbbl
movsl
mov
jp
pop
inc
and
sub
dec
cs
dec
js
lods
lret
or
stos
xchg
call
xchg
jno
je
aam
lahf
push
xchg
cmp
in
jns
test
jl
pop
adc
xchg
dec
pop
and
or
add
sbb
rorb
lods
sub
xor
pop
mov
mov
inc
jge
mov
imul
sbb
push
call
pushf
jno
inc
jb
lods
inc
inc
dec
adc
test
mov
mov
xor
sbbb
int
scas
and
and
mov
sbbb
cmc
pusha
les
icebp
in
ja
push
scas
xor
mov
sbb
lret
pop
jo
scas
lea
jmp
dec
test
cmc
lret
cmpsb
jl
lcall
add
xchg
adcl
and
mov
popa
mov
fldpi
cmp
dec
mov
adc
out
mov
or
jge
daa
cwtl
int3
jge
ret
and
lods
or
xchg
addr16
xor
cmp
int
xor
mov
add
in
cmpsb
fistl
inc
int
aad
cli
xchg
fiadds
mov
outsl
xchg
wrmsr
push
mov
in
repz
xchg
inc
mov
inc
imul
dec
out
rorb
xor
ret
dec
sub
xor
jns
sar
outsb
aad
sub
sub
cmp
xor
jae
xor
jb
add
and
mov
mov
sbb
dec
loope
cld
pushf
sub
xchg
int
lret
jmp
dec
mov
mov
test
shlb
xchg
in
dec
popa
add
shlb
inc
cmp
xor
cmc
arpl
pop
cmp
jbe
or
xor
test
inc
push
dec
cmp
adc
cmp
scas
inc
hlt
push
jle
loop
push
pop
jmp
sub
push
cmp
jbe
aad
xor
insl
sub
lods
outsl
dec
sti
add
not
mov
std
pushf
dec
xchg
mov
jecxz
clc
xchg
vmread
cmp
insb
sub
mov
adc
jnp
fidivrl
out
pop
std
inc
cmp
add
fldt
movsl
push
fmuls
sub
add
or
ret
out
popf
add
mov
loope
fbld
pushf
jg
dec
or
bound
lods
shrb
mov
xchg
adc
movsb
mov
and
fisttps
sub
dec
lods
scas
push
pop
test
aas
push
dec
sahf
ror
fucomip
adc
stc
mov
iret
js
jnp
test
cmp
imul
cmpsb
jp
pusha
mov
mov
mov
push
xor
mov
outsb
stc
sub
jp
mulb
outsl
xor
popf
sub
inc
jecxz
mov
jnp
push
xor
pop
sub
cmp
inc
and
shll
loopne
xchg
xchg
fistps
out
jmp
dec
cmp
sbb
or
orb
lcall
inc
notl
pop
pop
inc
and
fdivs
mov
xchg
sub
mov
mov
jg
out
test
adc
push
cmp
or
in
add
inc
loop
into
cmp
push
rdmsr
or
scas
out
dec
push
nop
fwait
dec
and
popf
xor
xchg
or
push
xchg
mov
cmp
js
fistpl
cmp
call
push
sti
or
inc
mov
in
sbb
cmpsb
sub
addb
enter
mov
sub
rsqrtps
xor
mov
jae
xchg
push
cmovp
loope
push
sbb
imul
jno
mov
lock
inc
sbb
test
rcrb
lods
fimuls
lds
outsb
and
stos
stos
lods
ljmp
jmp
in
js
push
add
jbe
sub
lcall
jo
outsl
fiadds
mov
push
imul
gs
iret
call
mov
mov
or
mov
fdivl
out
aad
inc
sub
mov
sub
int
adc
cmp
sbb
pop
push
rorb
push
push
jecxz
push
inc
cmp
filds
jecxz
sub
int3
sbb
sub
popa
adc
mov
cld
mov
fstpt
add
stos
xor
dec
iret
orps
sub
mov
jnp
dec
fcmovnb
roll
test
stc
outsb
mov
xchg
lods
pushf
add
mov
fwait
jb
repz
cmp
stc
aad
sub
ja
add
jno
or
in
jo
xchg
arpl
mov
into
xor
out
jge
sub
mov
arpl
mov
mov
sbb
mov
mov
std
cmp
lock
lahf
repnz
mov
xor
and
and
jecxz
scas
aad
pop
push
and
mov
sub
into
push
cmp
mov
and
jbe
mov
cmc
inc
imul
mov
mov
jge
mov
jae
les
xchg
pushf
sarb
mov
dec
fisttps
cmp
fstpl
pusha
adc
mov
pop
outsl
xor
divl
pop
or
aam
fidivs
test
cli
clc
aad
mov
or
sarb
adc
add
clc
testb
or
out
aad
sub
loope
dec
pop
fdiv
sub
lods
arpl
aad
inc
jle
out
shl
pusha
into
test
jle
cmp
xchg
push
xchg
in
aam
test
cmp
mov
int
jnp
adc
test
into
test
rcrl
stos
dec
push
push
popa
dec
in
push
pop
sahf
cmp
movsb
cmovge
xchg
sbb
out
icebp
cmc
push
xchg
inc
mov
int3
inc
dec
popa
jecxz
aad
jns
jg
xchg
movsl
lock
xchg
cs
idivl
and
add
xor
xchg
arpl
pushf
aad
rcrl
mov
fdivs
cld
mov
outsl
pop
jg
jmp
cld
pop
jge
in
pusha
dec
out
mov
dec
and
mov
cmp
jnp
xor
fldt
mov
inc
les
inc
adc
push
adc
jmp
inc
mov
icebp
subb
repz
dec
xor
mov
xchg
fdiv
dec
fnstsw
loope
dec
sbb
dec
mov
lock
or
je
mov
xchg
or
mov
sar
pop
mov
mov
cmp
incl
stc
arpl
or
das
and
sbb
call
dec
inc
cmpxchg
lods
sbb
ja
aad
jo
imull
sbb
repz
adc
shl
cmc
pop
mov
adc
push
cwtl
popa
mul
sub
loop
mull
ja
add
icebp
adc
dec
int3
push
dec
jecxz
mov
jbe,pn
dec
and
in
jge
cmovl
decb
loop
push
dec
movsl
pop
xchg
repnz
xchg
sub
push
imul
stos
jg
sub
std
mov
mov
push
sub
or
cltd
lods
jmp
andl
fidivl
fldenv
int
loope
int3
xchg
test
dec
in
daa
inc
jne
jmp
out
pusha
js
pusha
dec
aad
cmpsl
mov
pop
loopne
adc
push
push
xchg
jne
jnp
jnp
into
fwait
test
push
sti
mov
jg
repz
divl
cmp
mov
testb
shrl
dec
lret
cmp
and
or
adc
push
jnp
cld
lods
cltd
movb
inc
popf
in
lcall
cmc
xlat
out
push
in
mov
lods
sbb
pop
loopne
scas
and
jge
pop
inc
xchg
roll
bound
mov
sbb
xchg
cmp
int3
push
fisubrl
js
lcall
fs
xchg
data16
sub
shll
xor
xacquire
jns
cmc
hlt
dec
cs
addr16
faddp
or
fisttpl
xchg
stos
jge
mov
movsl
xor
in
cmpsb
pusha
cmpsl
pop
mov
hlt
jo
in
pushf
ret
pop
mov
sbb
das
in
cld
add
or
mov
jo
cld
sub
mov
xor
or
or
push
sub
xor
dec
lcall
lods
and
xchg
imul
js
in
pop
add
xorb
xor
repnz
bound
pop
in
xor
push
lds
xor
addr16
stos
add
adc
hlt
dec
aad
xchg
pop
aad
jmp
mov
imul
and
int3
mov
dec
sub
sub
repz
dec
stos
xor
sbb
push
stos
sbb
movsb
std
rclb
js
dec
mov
mov
je
bound
rcrb
cmp
std
andl
mull
jno
or
loope
ljmp
jns
pop
xchg
flds
std
cmc
dec
movsb
cmp
cmp
lods
loope
cli
sub
push
and
cld
loope
sub
aad
dec
add
xchg
hlt
or
pop
and
push
sbb
into
arpl
sub
sub
adc
call
cs
and
fwait
push
je
xor
mov
push
push
negl
inc
mov
add
and
cmp
rcll
pop
mov
jmp
xchg
arpl
and
std
ret
cld
xchg
sti
or
and
xchg
loope
or
or
dec
dec
xchg
dec
fimuls
sbb
pop
sbb
push
push
sbb
pushf
fnsave
stc
stos
mov
inc
bound
loope
jne
in
push
in
out
fcomip
cmc
push
add
nop
mov
ljmp
loopne
aad
xchg
push
sub
xchg
stos
repnz
aad
mov
add
into
jnp
aad
fldl
and
pop
jo
icebp
mov
repnz
idivl
jle
imul
dec
pusha
cmp
mov
lods
pop
xchg
xor
fldl
orl
xchg
inc
outsl
dec
outsb
adc
js
std
sbb
rclb
dec
in
cs
shll
mov
and
adc
daa
sbb
pusha
sbb
cli
push
div
fists
dec
arpl
repz
xchg
int3
js
aad
cs
cmp
stc
inc
int
aad
loop
int
outsb
add
or
mov
xchg
mov
repz
and
sub
mov
jmp
setl
cmp
stos
in
push
adc
adc
sub
sbb
outsl
or
jb
sub
ds
pop
test
cmp
push
notl
xchg
inc
or
mov
xchg
mov
jmp
pusha
aas
idiv
loop
dec
imul
out
and
stc
add
and
mov
cmc
adc
mov
and
test
jae
pusha
lea
cmp
cmp
pusha
pop
fsubr
push
mov
lods
adc
filds
xor
js
jmp
cmp
cmp
push
cmp
sbbb
push
dec
sahf
outsl
aad
xchg
xor
cmp
fisttpl
out
mov
dec
nop
in
jne
std
pop
xor
sbb
loop
cmc
inc
dec
mov
stc
popa
mov
push
adc
inc
lods
out
mov
mov
mov
jo
xor
mov
pusha
inc
add
and
add
jg
or
lret
cli
xchg
mov
aad
dec
sub
fcoml
mov
jmp
cmc
pop
fildl
js
mov
pop
fsubrl
sub
or
add
cmp
test
push
sub
shlb
cmpsl
aad
cwtl
into
pop
cmp
ret
or
insb
cmc
jecxz
aas
cmp
mov
push
les
sub
loope
shr
aad
sti
mov
adc
fcoms
push
ljmp
xlat
xor
sub
mov
cmp
test
rcrb
pusha
fistps
xchg
lcall
mov
imul
aam
adc
mov
xor
xchg
in
fucomip
cmc
fisttpll
jns
shlb
addr16
or
ds
test
out
adc
mul
nop
mov
jle
dec
sti
inc
daa
dec
aad
mov
and
adc
mov
outsl
lds
mov
shrl
sub
out
pop
stos
mov
lods
pop
out
mov
jmp
inc
mov
and
sbb
jno
or
sub
xor
cmp
int
mov
or
xor
push
cltd
dec
lods
and
pop
adc
push
jl
sub
push
mov
out
fistpl
inc
push
and
jmp
sub
xorl
pop
xchg
sbb
or
and
insl
ret
mov
push
sarl
inc
loope
repz
dec
sub
pop
dec
aad
pop
rcl
imul
pop
call
and
sbb
push
rcrb
loope
adc
pop
sti
aad
add
jl
lds
inc
add
sub
or
inc
push
sar
jbe
loope
jns
inc
dec
lods
jmp
ds
mov
subb
notb
jg
mov
inc
pop
add
inc
in
or
push
mov
mov
dec
je
xor
jae
orl
call
adc
lods
sub
mov
mov
scas
sbb
jmp
das
fistpl
push
cmovl
mov
sub
adc
popf
test
adc
add
das
call
stc
testl
push
in
loopne
into
aam
invd
jmp
repnz
push
js
and
push
cmpsl
push
xor
push
int
xchg
mov
and
insl
xor
mov
in
int
insb
inc
inc
sahf
cmc
dec
cltd
xchg
xor
push
fiadds
fidivrs
inc
iret
imulb
adc
fistl
sub
xchg
push
mov
xor
push
imul
xchg
xchg
cmp
sub
sbb
mov
lock
scas
jmp
orl
cmp
lcall
or
je
ret
pushf
lock
cmp
imul
popa
sbb
sub
jmp
mov
outsb
sbb
sti
call
push
mov
mov
inc
mov
cltd
xchg
xorb
xor
loop
push
push
push
popa
fidivl
xchg
inc
cmp
mov
pushf
int
and
rdmsr
and
sub
fnstsw
jb
out
popa
push
shlb
xlat
in
les
push
mov
xchg
dec
test
popf
call
into
xchg
dec
mov
pop
sbb
fmuls
cltd
inc
xchg
imul
mov
cmp
mov
adc
aad
sbb
mov
cmc
mov
cmp
int
lods
outsb
outsl
jb
add
sbb
xchg
jnp
xchg
jp
shl
daa
shrl
xchg
lods
inc
sti
cmp
adc
sub
mov
jg
pop
lcall
addr16
jp
addl
mov
push
data16
or
rorb
out
aaa
dec
push
jae
adc
sbb
cltd
pop
xchg
pop
pop
test
inc
out
add
cwtl
call
popf
mov
in
jo
cmp
adc
jl
mov
sub
call
or
hlt
push
jbe
js
mov
or
arpl
fistps
cmpsb
shll
jle
lret
inc
xchg
outsl
sub
sub
xchg
popl
shl
jmpw
xor
jge
lods
jb
in
mulb
shlb
xchg
cmp
dec
sbb
sub
jnp
dec
jmp
stc
call
push
jmp
ret
mov
inc
push
insl
mov
iret
in
pop
enter
popa
xchg
call
mov
add
das
adc
or
aad
je
jge
sti
cwtl
pop
cltd
inc
hlt
stc
push
sub
jge
push
test
mov
popf
add
ret
into
xchg
sub
ficomps
pop
aad
fstpl
dec
mov
cltd
cmpsb
pop
mov
mov
lods
dec
xchg
aam
inc
lods
mov
add
mov
adc
js
mov
xchg
loopne
pop
cmc
repz
sub
movsb
lahf
push
mov
jmp
mov
fcoml
mov
xlat
pop
lock
je
stos
fcom
out
iret
pushf
mov
fnsave
ljmp
jp
sub
in
idivb
std
decl
rclb
les
insl
push
iret
dec
sub
mov
scas
jb
cmp
xlat
push
gs
pop
loop
pop
sbb
lea
inc
xchg
imul
jb
lds
and
cli
xor
push
sbb
in
mov
jge
in
cwtl
repz
shll
xchg
mov
js
int
add
pusha
push
lods
jmp
sub
and
fisttpl
mov
add
inc
cwtl
jmp
outsl
jecxz
mov
repnz
loopne
push
iret
out
jne
jnp
in
fimuls
filds
xor
scas
xchg
adc
jns
mov
imul
mov
xor
or
inc
jo
push
xchg
lods
adc
clc
xor
sbb
add
pop
cmp
jbe
movsl
mov
cwtl
mov
outsl
gs
push
cld
sti
or
lds
mov
dec
stc
orl
mov
int3
lods
add
aad
imul
xchg
pop
xchg
cli
mov
aad
add
xor
xchg
pusha
test
lods
aaa
leave
push
imul
add
int
sbb
ficoms
ret
push
fnstcw
loope
xor
push
cltd
or
add
stc
and
adc
lods
cwtl
into
in
inc
or
or
int
xchg
movsb
mov
and
jecxz
int3
shl
mov
add
roll
mov
ret
jne
sub
lods
push
or
cmc
lcall
and
movsb
in
jl
fistl
cmc
pop
sar
shrl
push
into
inc
jp
xor
iret
pusha
sbb
fsubs
mov
inc
aam
inc
xor
cmp
push
or
xor
iret
faddl
cmp
dec
sbb
lods
mov
pop
and
in
xchg
pop
lahf
xchg
or
fs
adc
cmc
ds
fldcw
jmp
sub
cmp
mov
js
mov
mov
jmp
out
xchg
dec
out
aad
js
dec
sbb
dec
adc
cs
ja
ficompl
enter
adc
cmc
in
inc
iret
inc
and
outsl
imul
or
fstpl
mov
cmc
cmpsb
mov
xor
outsl
dec
call
idivl
popf
mov
mul
jp
mov
cmp
stc
bound
lock
xchg
test
std
xchg
icebp
pop
outsl
xchg
adcl
stc
testb
xor
mov
jne
mov
jbe
in
roll
mov
mov
adc
ret
mov
mov
imul
scas
femms
jmp
into
inc
adcl
js
pusha
cwtl
xor
jbe
movsl
dec
int
cs
cmc
iret
or
lahf
sbb
loope
ja
into
imul
and
mov
dec
adc
mov
in
jl
movsb
lock
xchg
mov
pop
jne
jmp
aam
imul
push
call
adc
bnd
or
cwtl
mov
pop
out
stos
pop
lods
or
xlat
mov
ss
jecxz
sar
inc
adc
fs
push
dec
dec
stos
pop
inc
sub
mov
cmp
and
or
arpl
push
cltd
mov
inc
jecxz
int
insb
sub
push
or
sub
idivl
loope
outsl
sub
mov
test
fdiv
sbb
sub
sti
push
outsb
sti
xchg
in
in
lods
fincstp
mov
push
enter
jno
iret
pusha
mulb
orl
into
add
adc
mov
mov
bound
dec
dec
mov
pop
cmc
jmp
in
test
insb
scas
aad
testb
mov
mov
xchg
mov
iret
pop
pusha
sub
jl
aas
cmc
mov
les
or
je
lea
in
sbb
cmp
dec
leave
jecxz
popa
pusha
mov
xchg
outsb
pop
jne
mov
jno
sub
push
mov
cmp
fdivs
ljmp
mov
mov
hlt
add
dec
in
and
mov
xchg
js
or
int3
mov
in
mov
cli
xchg
lea
insl
add
cmp
or
and
negb
cmp
jmp
dec
xor
cmc
mov
add
pusha
testb
xor
pop
sbb
popf
lock
jmp
lock
dec
sub
dec
mov
jp
jnp
loop
cli
and
xor
loopne
insl
dec
xchg
xor
mov
mov
or
jmp
cmp
inc
cmc
sub
or
jnp
les
call
std
mov
fcmovnbe
jmp
into
scas
test
lods
in
fcoml
cmpsl
mov
ja
aad
aad
sti
test
jmp
inc
pop
adc
mov
movsl
insb
push
or
jl
and
int
xor
dec
xchg
sub
mov
adc
and
cli
sahf
iret
cmc
lock
pop
pop
xor
cs
les
mov
or
aad
jp
sbb
xchg
movsb
adcb
xor
xchg
aam
gs
xchg
pop
int
jno
xor
lahf
jmp
mov
fnstsw
push
or
es
push
aad
add
mov
lret
into
aad
int3
dec
int
or
outsl
nop
adc
adc
pusha
lds
mov
sub
mov
ror
sub
add
pop
aad
adc
imul
xchg
dec
add
add
push
xor
dec
cmp
jg
iret
or
aad
test
sbb
aam
cld
movsb
cmpsb
or
cmc
inc
gs
sub
or
jl
fiaddl
or
jl
js
xchg
cmp
mov
lods
call
rcr
pop
dec
je,pt
pusha
jmp
push
add
jne
sbb
inc
inc
es
mov
movsb
cmp
pop
daa
sub
add
arpl
imul
xchg
xchg
popa
add
outsl
dec
loope
or
push
clc
jbe
in
dec
loopne
inc
xchg
insb
popa
sbb
popf
lret
mov
mov
push
add
test
dec
jmp
call
jl
pusha
lds
push
lcall
out
or
mov
jb
mov
pop
jmp
xchg
xchg
arpl
push
push
xor
pusha
push
adc
fldenv
imull
pop
scas
loopne
orb
loope
jno
cmpsb
pop
or
call
in
ret
setg
adc
jo
mov
dec
shl
nop
cli
xchg
cmp
test
lret
mov
adc
dec
sub
sbb
int
jo
mov
mov
mov
addr16
in
cld
pop
bswap
or
and
loop
mov
mov
cmp
fucomip
cmc
test
cmp
inc
mov
cmp
jl
roll
fcoms
or
xor
hlt
push
mov
test
es
inc
xor
popl
fstpt
aad
pop
push
mov
es
inc
imul
mov
pshufw
xor
push
sub
pushf
shr
cltd
punpcklwd
xchg
iret
xchg
sbb
scas
cmp
jle
sbb
jp
stos
out
mov
or
push
or
or
std
call
scas
in
dec
inc
add
cmc
mov
dec
jmp
test
popaw
in
jb
in
dec
dec
cs
and
cld
sahf
or
mov
push
xchg
popa
cmp
jecxz
inc
rcr
lds
in
xchg
mov
push
pop
inc
lods
sub
push
dec
inc
popa
out
xor
insl
jne
rcrl
mov
por
test
push
sbb
push
add
push
hlt
repz
int3
insl
cmp
les
lahf
and
jae
add
decl
test
dec
add
fisttps
xor
dec
xchg
mov
xchg
xor
adc
xchg
lahf
xchg
inc
popa
pop
xlat
dec
cmp
fldl
jecxz
test
dec
mov
pop
mov
adc
incb
imull
fs
sub
adc
jb
popf
arpl
dec
scas
vfnmaddsd
or
mov
jle
mov
and
daa
das
rcll
mov
sbb
inc
in
push
cmc
rorl
mov
shrb
dec
sti
and
cmp
or
inc
or
cmpl
xchg
cmp
or
mov
popa
pusha
mov
lahf
pushf
or
mov
cmp
mov
sbb
jmp
cmp
inc
push
add
and
lret
out
inc
jns
int
jnp
aad
popa
sbb
outsl
int
cmp
stos
or
sar
and
aam
add
lds
pop
into
icebp
inc
gs
mov
in
gs
or
loop
add
loop
sub
das
cvtdq2ps
inc
xchg
adc
pushl
mov
cmp
mov
int
mov
jecxz
or
pop
push
ret
bswap
xchg
fbld
pop
pop
outsl
mov
push
mov
call
adc
sbb
das
cmp
xchg
in
into
jbe
and
or
jnp
stos
clc
xor
jmp
jo
jge
movsl
pop
mov
in
lods
ss
cmp
data16
and
std
mov
push
and
or
push
sub
inc
aam
aad
mov
or
inc
sbb
iret
pusha
std
shrl
test
dec
sub
cmpsl
out
pop
dec
fbld
xchg
je
xor
mov
push
push
add
push
inc
fisttpl
and
push
push
popa
fidivrs
cmp
jmp
in
loope
cli
mov
jmp
jmp
arpl
jge
jne
mov
outsl
push
dec
sub
pop
orl
ds
or
dec
sbb
dec
sub
addr16
or
inc
lock
aad
xchg
imul
mov
pop
or
xchg
addr16
push
mov
cmpsb
and
icebp
imull
sub
pushf
adc
sbb
mov
push
in
and
and
jae
mov
repnz
sub
lds
sub
and
push
sbb
imul
push
test
stc
dec
push
jnp
inc
addr16
cmp
add
jnp
cmp
jb
sbb
rcpps
sbb
loop
jmp
test
loope
stos
push
aad
adc
test
fimuls
rolb
push
mov
jmp
imul
push
jae
mov
cltd
mov
push
inc
jmp
inc
pop
test
and
std
dec
mov
ret
push
inc
rcrl
sarb
lods
sbb
arpl
jge
loop
idivl
push
inc
cs
xor
int
notb
stos
mov
pop
and
cld
mov
fstl
push
in
scas
cmc
dec
dec
adc
cmp
mov
jp
outsb
in
mov
pop
inc
popa
ret
pop
or
push
js
xchg
push
sbb
adc
mov
pop
rorl
arpl
imul
mov
jmp
push
inc
mov
jne
leave
cs
pop
push
push
cmc
outsb
arpl
push
ljmp
mov
popa
cmp
and
inc
and
add
in
jecxz
and
xchg
out
or
scas
xchg
jecxz
scas
add
cli
cs
lahf
mov
pop
xor
mov
jg
scas
adc
or
jb
adc
aad
cmp
jg
xor
mov
bound
fadd
sub
adc
rolb
out
mov
les
xchg
mov
jns
mov
mov
in
mov
out
fwait
mov
movsb
fsubrl
outsb
fimuls
into
ljmp
add
pop
lds
les
adc
inc
mov
ljmp
push
daa
mov
xchg
and
xchg
cmp
mov
push
adc
xor
or
or
loope
inc
sahf
or
sbb
ds
negb
into
scas
and
fstl
inc
cmc
in
inc
sbb
mov
or
outsl
aad
xchg
push
insb
and
xor
clc
je
xor
adc
das
dec
adc
jnp
stc
inc
push
inc
inc
and
enter
lret
scas
faddl
rclb
mul
pop
jnp
lret
out
push
loope
cwtl
jo
mulb
nop
push
xchg
call
xchg
inc
mov
mov
je
and
icebp
mov
cmp
popf
leave
gs
mov
dec
mov
negl
pop
lods
cmpsb
fidivl
inc
mov
movsb
adc
sbbl
in
fs
or
sub
ljmp
sbb
cli
xchg
out
fsubr
push
lods
into
mov
mov
and
jnp
out
mov
imul
xor
out
mov
dec
int
cmp
stc
xchg
js
aad
sub
sbb
ret
loopne
jb
les
push
dec
add
test
loope
in
dec
adc
cmp
int
pop
enter
add
shl
imul
sub
mov
sbb
dec
sbb
mov
cwtl
or
jno
adcb
cld
sub
or
notl
loope
lock
pop
jp
negl
xchg
cmp
aad
mov
and
adc
xor
adc
fdiv
sub
pop
xchg
adc
jmp
mov
adc
in
or
adc
notl
out
dec
aad
inc
xchg
inc
cmp
cltd
in
add
out
or
in
mov
cmp
andb
jns
mov
sarb
mov
sub
cmp
fnstsw
mov
mov
cmpsb
adc
clc
xchg
or
xor
movsl
mov
sbb
dec
mov
lods
out
and
mov
rcrb
sub
lods
jae
rcl
lock
adc
and
dec
mov
jl
dec
and
jge
xchg
cmp
mov
out
ljmp
daa
mov
int
xor
dec
idivl
dec
mov
mov
repz
mov
mov
dec
dec
or
loop
sub
and
gs
les
mov
dec
mov
into
iret
arpl
hlt
ljmp
fadd
or
and
out
and
mov
xchg
shll
or
ret
lods
cmp
fsts
ficoms
sbb
out
loop
and
pop
jge
push
sbb
es
imul
adcb
ljmp
xchg
lock
imul
fnstenv
mov
dec
sub
dec
mov
mov
push
sub
jmp
pop
sub
cli
test
orl
sub
test
lods
dec
mov
lea
out
pop
and
or
shlb
and
jno
cmpsl
mov
or
mov
popf
movsl
pop
mov
cmc
sti
lods
sub
mov
fucomp
inc
enter
repz
les
or
call
sub
cwtl
popl
xchg
setne
lcall
dec
or
and
add
lods
jno
push
cmp
xchg
inc
push
arpl
jmp
aad
push
adc
or
in
mov
clc
xchg
out
cmc
sbb
mov
or
cld
int
mov
dec
std
xchg
or
mov
or
mov
add
push
pusha
loopne
ficoms
fildll
xchg
lds
push
mov
sbb
push
cli
ds
test
sbb
sbb
in
dec
or
call
adc
sbb
pop
mov
xlat
sub
call
mov
jge
stos
shlb
and
or
test
lret
mov
andb
aad
adc
sub
jns
iret
mov
mul
js
jo
ss
mov
mov
stc
mov
pusha
push
les
jg
dec
clc
mov
fbstp
in
adc
test
out
push
bound
imul
into
push
cwtl
call
mov
mov
scas
and
ror
push
andl
jp
hlt
mov
jne
pop
loope
mov
cmp
xchg
adc
pop
pop
mov
push
imull
xchg
push
lcall
sbb
inc
push
push
pop
dec
sbbl
fsubr
xchg
icebp
jp
sub
or
inc
lock
pop
stos
inc
cmp
js
fidivrs
jp
xchg
aas
push
aam
push
subl
inc
xor
pop
adc
setp
xchg
stos
jbe
sarb
sbb
iret
inc
insl
dec
scas
xor
lret
push
xchg
std
cmc
jmp
pop
ret
mov
cmp
std
push
xchg
stos
roll
faddl
cmc
sbb
clc
sti
mov
push
loop
sub
in
mov
dec
cli
fldt
xchg
hlt
inc
inc
cmpsb
pushf
rcrb
sub
xchg
into
xor
stc
sub
shl
jns
pushf
push
pop
or
xchg
dec
mov
mov
dec
int3
and
mov
lods
stos
hlt
roll
xor
lahf
add
cmc
stos
popf
add
sar
pop
mov
bound
jmp
xlat
mov
outsl
xor
std
xor
lock
lods
add
lods
push
mov
jno
lret
not
push
jge
fwait
mov
sahf
sti
mov
dec
test
jno
cwtl
pop
push
stos
xor
movsl
inc
add
test
mov
push
inc
xchg
mov
and
sub
ja
lods
dec
cmpsb
arpl
insl
jmp
mov
or
push
dec
dec
lods
popa
jge
push
in
fwait
jecxz
ret
loope
push
ss
xor
mov
sub
insl
or
mov
xor
out
movsl
das
dec
cwtl
ret
insb
and
in
mov
mov
jae
push
adc
lods
bswap
stos
pop
mov
pop
in
add
push
mov
test
ficomps
in
pop
movzwl
rcrb
in
xor
or
mov
mov
loopne
sub
sub
sub
sub
xchg
pop
sbb
pinsrw
mov
mov
xor
sar
into
cmc
nop
lods
inc
shrl
decl
fisttpll
mov
fcoms
cmp
mov
adc
push
fcmovbe
inc
mov
outsb
mov
je
sub
flds
psubsw
pop
mov
popa
inc
mov
xchg
loop
imul
cmpsl
aas
ucomiss
scas
stos
xchg
dec
daa
mov
outsb
jmp
imull
or
stos
hlt
imul
push
shl
mov
sbb
jge
dec
aad
dec
sahf
nop
jg
aad
imul
lahf
repz
mov
xchg
and
or
stc
push
mov
cmc
add
xchg
jge
cmp
adc
dec
or
jb
je
ret
cmc
adc
or
or
xchg
inc
push
pop
fistps
mov
notl
mov
cmp
and
inc
and
andb
js
adc
decl
mov
push
das
cvtps2pi
jl
and
sub
les
mov
mov
pusha
jmp
test
fistpll
fsubs
mov
repnz
pop
push
adcl
cmp
jns
cmpsb
inc
js
mov
shr
sub
push
inc
adc
mov
jb
lcall
fidivs
in
or
mov
data16
addl
outsb
test
push
cmp
int
mov
jnp
aad
or
cmc
enter
mov
lock
shll
fidivrs
ja
js,pn
hlt
js
add
nop
js
inc
add
mov
cmpsb
or
mov
adc
lods
ds
in
mov
call
sub
int
andl
mov
out
mov
adc
sub
dec
cvtpi2ps
sbb
push
cld
cwtl
js
xchg
add
pop
mov
add
testb
stos
fildl
or
lods
xchg
pop
test
sahf
popa
and
int3
xchg
dec
decb
sub
nop
add
repz
std
bound
orl
xchg
mov
out
bound
mov
inc
cld
jne
add
jnp
mov
adc
pop
outsb
inc
ret
btl
jle
mov
and
xor
mov
inc
jns
jp
xchg
lcall
lcall
push
pushf
cwtl
or
les
and
hlt
push
or
mov
mov
add
pop
dec
call
xchg
imul
ds
les
or
push
sub
aaa
xor
rcl
cmp
jl
push
faddl
mov
addl
jle
or
cmp
mov
pop
dec
popa
push
mov
xor
mov
push
in
ret
outsb
mov
rcl
imul
jmp
xchg
mov
jecxz
pop
jns
mov
jl
insl
or
test
inc
adc
and
mov
push
aad
cmp
pusha
aas
mov
add
and
jg
dec
je
imul
xor
sbb
pusha
popf
add
cmc
test
xchg
int3
pop
sbb
sbb
add
sub
ret
adc
cmpsb
push
cli
inc
add
jge
imulb
cli
test
push
test
sarl
jne
pop
je
mov
adc
push
bound
sbb
leave
pop
dec
aad
xchg
pop
jns
jmp
arpl
sbb
fiaddl
movsb
jo
rcrb
sbb
jb
shl
jbe
or
scas
pop
jmp
shr
push
lahf
aad
shll
ret
fwait
inc
add
xor
xchg
mov
cmp
clc
and
sub
bound
cmc
pushf
imul
xor
or
inc
lcall
sbb
jmp
cmc
mov
int3
pop
xchg
out
sbb
jmp
int3
out
mov
lods
or
dec
dec
dec
mov
pop
xchg
push
inc
cmp
daa
mov
aad
inc
sbb
std
lods
mov
mov
sbb
into
cld
xchg
mov
and
movsb
mov
int
fs
sar
insl
jl
mov
and
pop
jmp
jae
cmp
push
push
cmp
mov
loope
out
clc
sub
fwait
int
outsb
pop
push
mov
fs
push
nop
xor
pop
mov
cmp
dec
stc
xchg
mov
call
int
pop
mov
jo
les
test
mov
fdivrp
test
mov
mov
mov
gs
stc
into
mov
fiadds
stos
add
xor
bound
push
sub
sub
aad
into
test
dec
cmpsb
lahf
cmp
dec
outsb
mov
mov
jle
and
xchg
movsl
xchg
add
jmp
lods
mov
mov
sbb
rorb
mov
or
jle
test
adc
daa
das
jp
and
jl
or
aas
imul
push
jmp
adc
push
lcall
push
or
aad
mov
adc
jbe
pop
mov
pusha
std
js
mov
stos
push
in
stc
or
pushl
popf
lret
mov
in
lret
lret
push
mov
roll
cmp
pop
adc
shrl
mov
out
mov
ss
inc
pop
fs
pop
pop
int
xor
call
out
sub
hlt
xchg
bound
jg
dec
adc
int
mov
sbb
in
scas
add
jecxz
fs
mov
inc
int
pushf
dec
cmp
or
pop
mov
inc
fstp
xlat
dec
xchg
adc
push
pop
adc
push
sbb
adc
adc
push
mov
sbb
push
imul
lods
sub
add
loope
fistpll
pop
gs
mov
jbe
mov
dec
add
mov
js
bndldx
into
push
fwait
or
cwtl
push
lods
into
outsl
add
test
fisttps
mov
sbb
sti
repnz
test
int
daa
push
mov
nop
arpl
rcl
dec
jnp
push
xchg
dec
xor
andb
or
add
outsl
outsb
cmp
into
arpl
pop
mov
into
or
and
sbb
fs
mov
pushf
cmc
pop
enter
jg
scas
cmp
adc
data16
xchg
repz
popl
adc
fdivl
shlb
jg
xchg
dec
jo
jnp
insl
xorl
dec
movsb
enter
mov
mov
push
rol
adc
cmp
mov
rorb
jmp
dec
xchg
add
iret
subb
call
xor
jo
in
and
imul
jp
mov
cmp
arpl
and
iret
add
adc
mov
stos
inc
pop
testl
cmc
dec
mov
and
dec
jg
fs
mov
push
in
jl
outsl
inc
cld
jle
adc
repz
xor
mov
aas
call
popf
xchg
push
orl
and
jmp
sarb
nop
loope
push
fwait
mov
add
cwtl
xchg
mov
dec
xchg
stos
pop
cmc
push
ret
or
cwtl
jno
cmp
mov
and
scas
pop
adc
in
ljmp
cwtl
cmpl
sarb
cmc
jnp
and
js
xchg
xchg
repnz
cmp
orl
sahf
bound
push
sahf
fidivs
lea
mov
xchg
adc
sbb
ss
or
or
push
cwtl
test
aad
jmp
push
in
xor
mov
xchg
xchg
adc
adc
aad
data16
imulb
lret
div
cmp
arpl
ror
dec
cmpsb
cmp
dec
pop
and
jae
enter
and
adc
lock
mov
adc
test
or
dec
lods
cmp
aam
loope
out
gs
out
dec
add
lea
rclb
std
pop
cmp
fstps
lods
lods
or
in
std
pusha
rorb
jg
repnz
xor
mov
add
clc
jmp
dec
mov
push
adc
jbe
or
add
das
xchg
xorb
push
add
pop
adc
out
sub
std
adc
dec
inc
lahf
and
lods
sbb
push
sbb
inc
cmpsb
out
xchg
movb
jmp
xlat
sub
test
xchg
scas
adc
ljmp
dec
test
imul
mov
cmpsb
fsubl
push
add
add
or
cmp
cmpsb
xor
xor
int
push
mov
lcall
pushl
pop
xchg
in
dec
xchg
fnstcw
dec
shr
xchg
out
fsubs
imul
xchg
cmc
gs
sub
fsubs
mov
aaa
cmpsl
imul
mov
mov
inc
push
jge
add
js
scas
ret
xor
pop
pop
leave
notl
imul
cmpsl
pop
pushf
sub
push
cld
les
xchg
sub
or
cld
push
jne
pop
fldl
imul
aad
insb
ja
leave
aaa
jp
movl
mov
daa
das
lret
pop
das
aad
add
jo
cmp
jae
xchg
add
mov
repz
test
adcb
movsl
adc
pop
jge
mov
lods
xchg
sbb
lcall
pop
and
push
and
jge
push
xor
dec
scas
lcall
popf
mov
dec
leave
loope
jnp
and
adc
out
and
ljmp
jns
lea
mov
cmp
xchg
cli
jmp
jno
test
adc
in
jecxz
cmp
outsb
popf
cmpsb
repz
or
mov
dec
lds
jne
mov
aaa
outsl
xor
mov
loopne
out
cmc
sahf
out
jecxz
or
mov
jnp
mov
js
call
mov
sbb
adc
dec
arpl
push
push
push
aad
js
xchg
mov
rolb
out
hlt
cli
xchg
stc
dec
cmp
dec
mov
notb
aaa
adc
mov
cwtl
jns
or
cmpsb
mov
mov
movsb
into
imul
cmp
xchg
xchg
mov
bnd
mov
or
loope
out
cmc
or
enter
fsubrp
lods
incl
jnp
mov
inc
dec
aad
shr
inc
mul
cmp
popl
mov
orb
push
and
fadds
cmp
shrb
arpl
cwtl
insl
movsl
xor
add
aas
mov
repnz
dec
in
stc
aam
das
mov
sub
call
push
fs
rcl
adc
jp
adc
mov
push
lods
add
and
xchg
adc
xor
sti
int
jmp
xchg
int
aad
popf
xor
and
xchg
iret
cmc
sbb
sarb
jne
or
leave
aaa
outsb
rolb
cmpsb
xchg
test
lods
or
sahf
mov
imul
pop
jp
push
push
fstpt
aad
fwait
push
mov
daa
jno
dec
push
push
xchg
addr16
sbb
lds
or
sub
aas
lock
adcl
nop
pop
stos
fs
cmp
mov
jne
wrmsr
sub
or
xchg
xor
pop
or
enter
mov
imul
arpl
inc
int
loope
mov
fistpl
call
jge
cmpl
or
jge
out
mulb
pusha
ja
repnz
cmp
mov
cwtl
sub
out
lods
push
sub
test
sub
xchg
or
push
xchg
add
sub
ja
inc
add
xchg
fsubrs
pop
add
or
jmp
and
and
adc
js
fnsave
into
dec
in
jge
and
outsb
mov
add
or
mov
xlat
sbb
lret
jl
aad
mov
movsl
les
pusha
cmc
nop
pop
lcall
mov
out
and
out
int
shr
push
dec
inc
cmpsb
and
pop
sbb
push
xor
testl
pusha
jle
mov
jl
lahf
ret
ss
mov
enter
mov
ljmp
push
movb
mov
adc
ss
negl
adc
and
rorl
cs
lods
and
cmp
lret
rolb
adc
adc
data16
mov
sub
cvttps2pi
jmp
sub
or
push
std
movsb
jo
mov
mov
fcmovnu
out
mov
int3
into
mul
ljmp
insb
loop
dec
aam
cltd
pop
in
xor
fdivrl
fs
add
cld
lahf
xor
mov
js
or
sub
xchg
ja
std
inc
pop
sbb
pop
pop
stc
add
mov
arpl
test
dec
pop
sbb
mov
mov
daa
cmp
fistpll
or
sub
or
mov
mov
iret
pop
rcrb
imul
add
aas
sti
jnp
jge
stos
rol
movswl
mov
mov
mov
idiv
js
mov
fwait
into
imul
dec
mov
aad
cmp
ret
mov
xor
mov
dec
jnp
stos
iret
xor
mov
inc
adc
mov
test
outsb
decl
in
dec
andb
imul
mov
jge
xor
push
test
inc
rcr
xchg
aad
sti
jecxz
dec
xchg
sub
push
icebp
cltd
and
cvttps2pi
out
iret
inc
mov
mov
fnstsw
jne
or
and
daa
adc
lea
mov
cmc
test
outsb
nop
test
push
movl
jo
dec
mov
mov
lds
loope
dec
popf
cmpsb
pop
scas
jecxz
xorl
iret
cltd
cmpsl
je
and
jge
cmp
and
sub
int
sti
add
jbe
pop
mov
iret
cmp
pop
lods
inc
pop
mov
call
mov
leave
iret
mov
mov
shrl
mov
lods
mov
negl
cs
lcall
xchg
inc
nop
idivl
add
sbb
out
sub
out
loope
lds
stc
xor
sub
lds
and
xchg
xchg
out
jmp
mov
imul
mov
into
lahf
iret
mov
cltd
bound
or
jno
sub
or
clc
mov
enter
cmp
lock
pop
cs
aad
sarl
insl
inc
add
pop
scas
mov
outsl
pop
insl
aad
sub
lds
ficoml
push
sbb
mov
testb
ds
sti
xor
imul
dec
test
pop
movsl
jne
xor
pusha
sub
in
scas
sbb
int
outsb
int
out
jnp
test
loop
imul
mov
notb
sbb
xchg
xor
shrb
pop
mov
dec
add
cmp
out
push
psubsb
xor
push
call
mov
iret
xor
int
sti
notl
pop
sti
nop
cmp
in
push
lds
and
cmpsl
ds
cmp
repz
cli
add
paddw
jl
lahf
inc
pop
push
dec
enter
jp
out
or
shll
xor
sub
jl
and
addr16
and
dec
iret
cmc
jo
sbb
or
stos
stos
fidivrl
sbb
rcrb
popf
push
sub
pop
jbe
mov
or
fnstcw
pop
inc
xchg
mov
xchg
call
fstpt
in
repnz
jmp
xor
cmp
add
roll
jl
inc
sar
scas
psubb
cmp
cld
gs
mov
mov
pop
mov
sti
icebp
cmp
popa
push
push
mov
dec
xchg
mov
dec
popf
stc
jmp
rol
ret
test
popa
cs
add
in
xchg
adc
push
addr16
xchg
or
aad
mov
adc
xchg
xor
out
adcl
mov
int
pop
cmp
jns
xor
test
mov
mov
orl
jo
mov
wrmsr
sti
sbb
lods
cmp
pop
jge
adc
je
add
sub
imul
iret
and
cmp
jle
dec
das
sub
push
in
mov
push
push
mov
call
clc
subb
movsl
jp
bound
test
jae
out
dec
xor
pop
cwtl
mov
fsubrs
lods
mov
daa
or
or
jge
xlat
pop
loope
sbb
inc
outsl
xor
and
lcall
pop
cli
stos
lock
xchg
push
add
or
fisttpll
ljmp
fistps
xchg
scas
adc
and
cmp
xchg
in
xlat
pop
add
scas
adc
push
jmp
adc
pop
scas
divl
sbb
add
sar
nop
mov
loopne
fwait
mov
push
popf
xchg
shrb
mov
lcall
cmp
decl
push
fsub
mov
jbe
inc
pop
ds
push
xlat
pop
jbe
mov
out
lock
int
mov
int
sbb
adc
cmpsb
sbb
aad
mov
insb
jmp
or
mov
nop
sub
mov
iret
cli
jle
fst
scas
arpl
iret
mov
mov
gs
fdiv
xchg
lods
nop
mov
push
les
stos
jle
add
loop
rorb
fimuls
mov
mov
or
cld
stc
aad
vhsubpd
bound
pusha
mov
adc
incl
clc
or
jl
shr
pop
int
mov
imul
dec
ficoms
shll
xor
mov
add
jbe
or
and
and
into
in
sbb
loopne
dec
aam
sbb
rorb
and
and
and
cmp
inc
shlb
cld
mov
xor
jmp
cmp
pop
adc
or
mov
sub
xlat
cmp
andl
mov
push
pop
ss
adc
int
stos
ds
mov
add
fsubs
mov
sub
inc
and
add
mov
pusha
cmpsl
push
scas
cmc
scas
pushf
stos
ret
sbb
cld
inc
or
andb
push
out
rcrb
adc
mov
dec
addr16
sbb
jp
inc
or
int3
mov
or
gs
sub
push
adc
cs
push
mov
pusha
mov
mov
movsl
and
add
ficoml
cmp
ret
xchg
or
mov
mov
add
notb
adc
xchg
imul
adc
and
inc
dec
mov
popa
dec
loopne
inc
mov
int
push
add
push
xor
push
enter
xchg
mov
jg
jnp
dec
and
push
mov
or
lcall
lret
sub
pop
test
clc
dec
in
gs
fildll
mov
xchg
push
inc
iret
arpl
mov
cmp
xor
stos
fsubs
pandn
pop
mov
mov
iret
jbe
fstpl
int
sbb
cld
ds
call
addr16
or
and
inc
jnp
into
push
jecxz
jmp
jae
push
aad
inc
scas
cmp
or
cltd
jmp
pinsrw
mov
push
call
mov
xchg
sub
adc
sahf
mov
popa
aas
push
or
int
stc
out
pop
out
push
popf
out
mov
es
dec
lods
insl
hlt
mov
loope
mov
mov
sahf
mov
pop
adc
inc
mov
roll
lds
xor
cli
or
mov
inc
jne
cmpsl
xorl
xchg
inc
fcmovnb
jmp
pop
idivb
mov
dec
andl
inc
jp
jb
jnp
pop
sub
mov
mov
mov
jmp
xchg
ficomps
imull
add
mov
call
jmp
cmpsl
xor
dec
jge
fisttpl
cmp
add
xor
mov
sti
cmc
scas
add
das
sahf
or
mov
fildll
lret
xlat
xor
outsl
sbb
xchg
movsb
cmp
and
add
cmp
and
cltd
pop
xor
cmp
pop
repnz
fisubl
xor
mov
daa
sub
inc
dec
ja
insl
int
andb
imul
dec
std
inc
sub
lods
mov
imull
push
cli
out
test
out
call
mov
mov
pop
cmp
sti
mov
inc
mov
cmp
or
mov
add
xchg
je
pop
adc
pop
popa
sub
icebp
xchg
or
xchg
mov
jmp
shlb
pop
pusha
pop
jbe
pop
mov
cld
aaa
rcl
repz
in
sub
rclb
mov
dec
int
mov
das
out
scas
fildll
pop
cmp
or
aad
sbb
int
in
add
hlt
addr16
push
jecxz
inc
iret
push
or
or
ljmp
std
rcrb
pop
fcomps
jae
cs
clc
in
into
cmc
imul
fs
pop
dec
shr
lahf
je
ja
push
sbb
andl
lds
mov
add
into
jo,pn
sub
popa
rolb
jmp
jl
stc
xchg
rcll
nop
mov
imul
imul
int
xor
adc
frstor
loopne
call
lods
dec
jmp
jge
inc
mov
jp
push
notl
mov
and
dec
fs
mov
mov
inc
cli
jl
pusha
lods
addr16
inc
inc
adc
fldenv
mov
lock
out
mov
pushf
out
stc
call
fcmovnb
lds
aad
xchg
jge
cmp
aad
mov
sub
mov
test
and
rcrb
mov
popw
push
insb
rorl
stos
cmp
xor
jne
mov
dec
ja
sbb
nop
xlat
jecxz
int
inc
sub
test
lea
je
jecxz
ret
jae
pop
std
or
nop
mov
lcall
adc
stos
dec
mov
pop
sbb
dec
jb
mov
push
std
sub
lods
xchg
push
jns
shlb
push
cli
sbb
lahf
fs
cmc
sub
fiaddl
add
in
je
pslld
int
cs
nop
shr
divl
xchg
out
sbb
icebp
dec
ljmp
arpl
js
mov
mov
mov
addr16
mov
movsb
pop
mov
or
aad
fiaddl
out
repz
rorl
sub
outsl
push
dec
shll
inc
adc
adc
jnp
cmp
dec
and
decl
push
rolb
mov
hlt
mov
dec
add
fisttps
and
jl
jne
pusha
ret
mov
ja
addr16
xchg
nop
jae
sti
add
outsb
rol
negl
cmc
leave
push
pop
and
lods
sbb
adc
dec
or
test
jnp
lock
nop
add
pop
jmp
jg
xchg
ja
mov
dec
sahf
xchg
pop
lods
jns
popf
outsl
jbe
int3
sub
cld
and
inc
sahf
pop
fsubs
testl
dec
xchg
jne
cli
add
mov
mov
cmc
push
fildl
popf
jmp
or
je
sub
pop
int
sub
or
gs
aad
notb
cmp
xchg
inc
push
int
call
or
scas
cmc
fidivl
mov
rclb
jmp
cmc
test
xor
insb
aad
loope
leave
insl
arpl
cmc
jbe
mov
or
jnp
mov
and
push
daa
mov
mov
cmp
fimull
stos
pop
pop
inc
jecxz
inc
scas
cmp
cmp
hlt
mov
sbb
adc
pop
and
scas
adc
mov
add
fdivrl
hlt
and
xchg
imul
jmp
aas
nop
inc
push
das
rorb
incb
xchg
inc
in
test
lods
mov
or
jge
push
and
xor
jne
icebp
xor
in
push
lods
cli
add
or
inc
push
push
adcb
rcrl
or
out
adc
shrb
into
sbb
lds
mov
cmp
mov
adc
lock
or
adc
sub
or
xchg
das
das
sub
cmc
sahf
out
ret
loope
sahf
add
add
cmc
dec
fcmovnb
loop
xchg
jne
push
push
rol
sahf
les
add
fsubl
jns
jmp
test
into
mov
or
jbe
ret
movsb
jmp
movsb
lcall
mov
cmpsb
lcall
or
mov
xchg
cmp
sar
sti
sub
or
loope
sub
stc
mov
shr
pushf
mov
push
xor
push
or
adc
cmpsl
mov
push
push
pop
out
cwtl
jae
mov
aad
inc
cs
jnp
pop
repz
jmp
xchg
ljmp
sub
xchg
inc
cmp
lods
popa
aam
jns
mov
dec
loope
cmc
ret
mov
jecxz
mov
add
mov
lret
cmp
pop
jmp
mov
push
adc
cmp
sbb
xrelease
add
out
or
jmp
pop
or
cs
pop
je
std
push
test
pop
inc
push
into
cmp
sub
dec
roll
push
lret
jb
in
cld
sub
fwait
sti
mov
xor
data16
lret
inc
out
inc
daa
sub
pop
in
sete
dec
add
cmc
movl
jmp
cmp
sti
out
addr16
imul
mov
dec
aam
es
mov
adc
mov
cmp
pop
lods
push
ja
add
mov
out
mov
push
add
mov
sub
mov
testl
xor
int
push
loope
xor
fsubrs
popf
mov
pushf
gs
push
add
dec
test
push
cmpsb
into
sbb
and
xorl
test
lea
test
int
ret
mov
cmp
test
or
les
aad
sub
xlat
clc
push
lods
xchg
xchg
pop
out
push
dec
sbbb
xor
fildll
cmp
pop
mov
push
ljmp
mov
imul
inc
cmp
imul
jecxz
or
gs
sub
dec
mov
test
shrl
jmp
pop
in
cli
nop
jbe
mov
lods
jg
inc
mov
lods
lea
xchg
idiv
and
xor
fstpt
push
addr16
cltd
cltd
into
aam
adc
test
cmp
call
outsl
inc
jl
shrb
mov
mov
fisubs
xlat
sbb
aad
rcrl
orl
nop
out
add
loope
iret
cmp
xchg
xor
mov
push
ljmp
stc
jmp
dec
jnp
xor
shrb
scas
test
adc
cmp
mov
xor
pop
mov
jns
xchg
je
inc
or
jge
cmpsl
imul
adc
std
dec
addl
mov
fmull
mov
lock
add
dec
fwait
rcll
lahf
enter
imul
rcrl
xchg
add
lods
or
and
dec
test
addl
jp
and
mov
dec
mov
outsl
pop
mov
stos
adc
mov
test
into
int3
mov
inc
dec
xchg
ljmp
imul
or
js
cmpsb
sub
out
mov
add
add
gs
cmp
testb
mov
sbb
mov
pop
bswap
mov
out
xchg
jno
jl
popa
lds
je
fimull
mov
dec
inc
out
pop
dec
and
int3
sbb
lods
mov
cmp
jae
ja
push
test
xor
sub
call
or
ljmp
mov
adc
and
mov
cmp
cmp
xchg
out
adc
xchg
pop
sti
push
xor
push
aad
mov
sbbb
fwait
dec
cmp
ffree
push
mov
jmp
cmpsb
dec
lea
aam
les
mov
or
mov
leave
dec
lock
sbb
mov
xchg
cltd
insb
xor
jae
push
xchg
push
mov
adc
inc
mov
xchg
jno
sub
lcall
sub
mov
or
mov
or
xchg
movsb
add
pop
mov
scas
in
sub
mov
jb
jg
mov
jp
mov
fcomip
shr
loop
lret
xchg
shrl
out
pop
push
add
cmp
popf
in
add
dec
mov
xchg
adc
and
mov
into
xchg
fldt
je
mov
add
cmpsl
lock
clc
jnp
fsubs
cltd
leave
into
loope
outsb
mov
into
cmc
push
dec
cmp
fwait
jmp
pop
jmp
pop
cmc
push
int
lods
ss
lahf
jle
pop
sbb
mov
xchg
cmc
add
pop
les
xor
jo
mov
xor
cmpsb
pusha
mov
jb
sub
pop
int
fidivrl
xchg
in
jmp
push
ret
cmp
daa
ljmp
imull
aad
inc
in
push
fstp
or
sbb
cmp
in
xchg
mov
xor
mov
pop
and
lods
adc
popa
aad
push
in
ficoms
xchg
mov
or
inc
push
push
mov
ret
roll
imul
jbe
enter
mov
jmp
adcl
adc
icebp
pop
mov
out
fistps
repz
mov
jmp
jg
cmp
je
jmp
sub
mov
repnz
scas
leave
mov
xor
mov
cmp
push
imul
or
in
cld
dec
out
push
in
sbb
sub
rcl
ret
jmp
aad
sbb
jmp
cmp
mov
cmp
jge
pusha
test
cmp
arpl
sti
jle
es
jp
es
and
or
cmp
jl
push
ljmp
xchg
pop
push
fwait
sbb
jle
sub
inc
dec
and
outsb
arpl
mov
mov
sbbl
adc
adc
testl
jl
aad
jmp
dec
or
call
or
sbb
fdiv
jne
cmp
sahf
jle
pop
inc
ljmp
std
shll
and
mov
hlt
dec
push
sub
dec
out
sti
imull
ss
js
loope
pop
in
xchg
cmp
iret
dec
jmp
cli
pop
out
jg
call
cld
daa
add
fwait
mov
in
cmpsl
or
sub
notl
imul
adc
ret
in
pop
add
dec
lret
je
push
pand
bound
adc
fs
cmpsb
xchg
inc
jnp
push
adc
jns
adc
sbb
mov
fidivl
int
or
in
add
jno
xchg
imul
popf
mov
mov
imul
pop
cld
cmp
pop
inc
xchg
jmp
push
push
xchg
inc
scas
xchg
std
icebp
nop
push
cmp
fisubl
sarb
std
pop
flds
aad
loope
pop
cmp
imul
xchg
cmc
jl
mov
and
das
and
fwait
mov
std
cmc
lret
push
test
adc
jmp
aad
test
xchg
mov
mov
aad
add
pushl
adc
aad
cltd
into
push
or
fneni(8087
add
or
ss
adc
push
int3
dec
fsubr
pop
cmp
dec
pop
cmc
xor
movsl
imul
ja
jge
dec
cwtl
sub
push
ja
dec
jle
scas
or
ret
xchg
push
jmp
add
cmp
or
arpl
xor
int3
pusha
aad
pop
addl
jge
xchg
dec
cmp
lahf
xchg
fbld
in
movl
push
cmc
fnstcw
ja
jp
xor
cmpsb
nop
sbb
aam
dec
test
adcl
push
and
cmc
test
add
jmp
push
insb
jp
mov
lods
call
lea
pop
fiadds
adc
hlt
test
push
iret
mov
shll
adc
popa
adc
sub
pop
jp
fdivrs
addr16
adc
pusha
fsubrl
adc
ret
mov
mov
lcall
ljmp
xor
lods
jne
iret
xor
fnsave
lock
inc
mov
mov
jmp
xchg
dec
nop
ret
js
pop
cmp
lods
testl
jnp
jne
outsl
jecxz
jbe
jbe
int
aad
push
mulb
outsl
movsb
or
ja
outsb
out
lock
mov
iret
je
dec
stos
pop
popa
mov
jl
ljmp
testl
and
push
enter
jmp
lods
stos
add
fisubs
ljmp
iret
jbe
jecxz
repz
push
insb
lret
pop
push
push
jl
push
add
cmp
cmp
add
or
out
cmc
sbbb
cwtl
cmp
inc
add
xchg
addr16
fcom
fnstsw
popf
cmp
jmp
jo
cmp
or
xlat
scas
les
jl
out
lods
mov
pop
insl
cld
out
or
test
in
or
lahf
mov
or
mov
or
jecxz
dec
inc
and
cltd
filds
out
mov
inc
insl
add
hlt
mov
push
sub
imul
addb
or
and
test
inc
rclb
push
cmc
lahf
push
fs
cmp
js
jle
sbb
aad
pop
sbb
in
andl
mov
aas
paddsb
into
insb
pop
fldt
filds
jnp
in
int
scas
xchg
xchg
mov
push
fdiv
jp
and
divl
jns
ret
lods
pop
xchg
push
fstpt
sub
add
pop
gs
mov
stos
mov
add
in
gs
out
out
adc
cwtl
or
push
iret
pop
cs
loope
sbb
pop
mov
or
loop
test
sarl
dec
cmp
pop
xor
insb
push
pop
sub
inc
insl
rcrl
loop
mov
adc
mov
push
addr16
into
xchg
add
int
jns
cs
pusha
arpl
stos
das
dec
cld
lods
or
pop
jge
mov
sub
insb
fwait
js
pop
and
in
cmp
jb
lea
push
mov
xchg
sbb
imul
add
jmp
std
mov
dec
pop
adc
das
in
xchg
jg
xchg
push
or
lds
test
scas
push
mov
test
ljmp
repnz
aad
lcall
jg
push
cmc
lret
cmp
mov
sub
addb
shlb
pop
in
push
mov
jp
enter
xchg
add
sbb
and
cld
fistpll
pop
adcb
clc
imul
jle
mov
insl
mov
mul
mov
and
and
ficomps
outsb
insb
push
pop
pop
or
loop
add
pop
cmpsb
cmp
mov
and
sarl
cmc
dec
je
sbb
jmp
push
notl
mov
in
sub
fiadds
sti
cmp
pop
bound
loope
sbb
inc
ja
insw
jle
les
js
int3
dec
loope
add
pusha
es
add
mov
add
push
pop
rolb
pop
sub
jl
hlt
test
jbe
loope
xor
imull
popa
dec
jp
xor
dec
jns
xlat
fsts
in
add
jns
and
cmp
mov
cwtl
mov
xor
movsb
inc
stos
jbe
or
std
in
stos
cli
push
xor
and
dec
sbb
xchg
outsl
cmpsb
lds
iret
aad
movsl
lea
mov
imul
je
mov
inc
and
fs
repz
sub
lret
cmpsb
mov
xor
mov
cwtl
lcall
jno
daa
push
cs
lea
inc
mov
stc
cmpsb
push
in
push
adc
daa
adc
jo
scas
jo
sbb
push
iret
push
mov
inc
loope
or
ret
cmp
pop
mov
pop
jae
jns
js
fistpll
pop
fisubs
shr
int
mov
pop
sbb
clc
or
sub
and
inc
push
jmp
sti
jmp
je
xlat
ret
push
fwait
stos
cmc
aad
mov
bound
stos
sub
ja
outsb
jl
dec
aad
loopne
adc
or
jmp
in
xchg
xchg
enter
push
jp
adc
mov
sti
dec
aad
sahf
stc
cmp
mov
cli
cwtl
int3
std
cld
bound
or
add
xor
mov
out
push
push
push
loope
adc
stos
cmc
jbe
mov
add
test
fwait
cmp
sub
dec
xchg
paddsb
mov
mov
xchg
jno
mov
pop
adc
xchg
test
dec
ret
repz
outsl
in
jmp
mov
out
mov
inc
xchg
pop
sti
cmp
aad
mov
dec
rclb
inc
inc
popf
int
repz
ss
in
roll
ja
shll
sub
dec
and
mov
push
xor
pop
out
orl
negl
cmp
inc
or
sti
dec
pushf
cmp
testl
mov
cwtl
add
mov
std
mov
scas
add
mov
jnp
pop
mov
jnp
aam
push
xlat
dec
cmc
dec
inc
ljmp
std
ljmp
adc
into
aad
mov
fcoml
int
out
mov
push
push
test
fildl
xchg
dec
xor
dec
shlb
jp
hlt
mov
cmp
mov
xchg
les
and
cltd
dec
inc
fadd
in
cs
jb
int
xchg
hlt
push
cmp
sbbl
out
push
mov
push
outsb
insb
arpl
scas
mov
aad
and
sbb
popf
pusha
cli
inc
jg
xchg
adc
rcrl
cmpsl
inc
cmp
add
lods
cmc
mov
sub
jg
mov
jns
loope
cmp
push
mov
mov
fistpl
int
or
jmp
cwtl
popa
aad
dec
ret
jmp
nop
adcb
jp
push
out
leave
cmc
jmp
inc
repnz
mov
out
jns
mov
cwtl
sahf
test
sub
outsb
aad
lds
les
mov
jge
jae
cmp
das
stc
sbb
inc
dec
pop
lock
adc
std
scas
clc
lret
or
in
cli
arpl
mov
out
cmp
out
bound
push
xor
pop
js
popa
jle
xchg
push
pop
mov
loopne
cli
mov
repz
pusha
loopne
pop
stc
cmp
jne
dec
and
in
iret
out
xor
xchg
or
pusha
xchg
adc
aaa
push
in
pop
bound
cmp
push
ret
popf
or
movb
int3
or
cmp
adc
xchg
shrb
imull
psraw
enter
inc
pxor
push
lea
sub
push
or
inc
jp
rorb
mov
mov
push
jle
push
test
cmp
cmp
stc
push
dec
mov
cmp
imul
test
mov
pop
and
or
movsl
negl
movsb
or
add
jae
pop
stc
out
lods
insl
push
rcrl
or
or
sahf
aad
lods
and
in
push
popf
orb
sbb
orl
xchg
scas
negl
xor
aad
rcrl
or
push
cmp
and
in
stos
sbb
xor
push
and
sub
inc
mov
testb
and
sbb
add
cmovo
push
cmc
jnp
cmp
lret
and
mov
pop
push
cmp
mov
mov
and
adc
mov
xchg
push
ljmp
outsl
bound
imul
lret
cmc
sti
xor
leave
pavgb
clc
pop
testl
sbb
inc
movb
jp
mov
fsubl
int
pmaddwd
push
insb
cmp
adc
lcall
xchg
std
mov
pop
stc
dec
lds
mov
popf
cli
jge
rcrb
out
push
lods
stos
sbb
roll
or
sub
or
idivl
rcr
add
fwait
mov
int
out
scas
loope
jmp
cmp
imul
xchg
xchg
push
add
aad
sbb
mov
xchg
and
lods
stc
adc
cmp
add
repz
and
ja
int
scas
js
and
out
mov
mov
jmp
push
lret
mov
sbb
dec
mov
cmpsb
pop
aam
lcall
fs
push
adc
iret
mov
and
and
ret
push
hlt
das
js
arpl
flds
lcall
fisttpl
inc
sub
pushf
mov
jne
jno
in
flds
in
sub
addr16
sub
mov
sub
inc
adc
jno
mov
out
das
ljmp
inc
inc
test
mov
mov
push
in
jns
xchg
mov
sbb
std
cmp
xchg
test
fbstp
insl
inc
rcl
add
mov
mov
xchg
cmp
std
jns
mov
imul
lods
sub
pop
add
cmc
dec
jo
adc
mov
pusha
outsb
add
pusha
test
call
in
out
loope
aad
add
push
es
inc
push
dec
lcall
nop
mov
lahf
stos
add
xor
shl
add
or
or
xchg
lcall
jecxz
test
sbb
cmp
sbb
nop
dec
xchg
test
jge
fbld
lods
std
jp
int
lcall
mov
xor
mov
or
mov
jmp
cmp
mov
js
mov
decl
aad
dec
xchg
das
sbb
lods
rorl
aaa
pop
pop
push
and
dec
mov
cli
add
lods
and
sbb
clc
mov
sub
popa
inc
xchg
pop
nop
xchg
cmp
cmp
adc
xchg
mov
mov
pushf
fimuls
dec
out
andl
je
outsl
lock
adc
aaa
mov
adc
xlat
inc
aad
pop
push
nop
std
lods
push
cmp
push
inc
cmp
mov
outsl
scas
xchg
dec
inc
mov
pushf
push
in
stos
inc
xchg
inc
add
mov
pop
push
sub
adc
and
mov
int
sub
int3
mov
or
mov
into
cmc
inc
push
pusha
push
gs
pop
outsl
outsl
dec
or
es
cmp
cmpsl
jp
loope
mov
mov
popa
es
shl
cmp
mov
popf
dec
mov
or
mov
leave
int
push
dec
adc
inc
inc
outsb
xchg
clc
daa
inc
jmp
mov
cmc
mov
aaa
jl
aas
loop
cmp
cmp
jmp
mov
mov
in
lods
sti
xchg
adc
aaa
in
clc
xchg
mov
or
dec
bound
push
cmp
das
negl
xor
in
adc
pop
lock
jl
into
inc
addr16
sub
or
lods
fsubrs
fists
test
adc
out
adc
mov
hlt
pusha
fsubrl
cmp
adc
nop
cli
xchg
jnp
sahf
loope
pop
xor
test
fiadds
inc
push
ja
iret
or
lods
or
les
leave
mov
xchg
rcl
data16
imul
mov
shrb
fdivr
sahf
fst
xchg
push
mov
xlat
in
in
dec
adc
fwait
xchg
mov
fcom
test
hlt
mov
adc
add
xor
enter
inc
pop
xchg
sub
lds
jge
mov
cmp
out
div
loopne
jne
in
sub
int
dec
push
ficomps
in
mov
test
mov
inc
stc
jp
sbbl
pop
jl
pop
in
dec
shlb
out
cmp
ror
call
scas
test
mov
out
or
test
push
fildll
cmp
xchg
lret
in
pop
mov
test
aaa
xchg
jns
xchg
cmp
call
out
lods
adc
xor
nop
and
int
dec
testl
lret
icebp
adc
fs
ficoms
inc
mov
cltd
in
dec
fimull
sub
movsb
ficomps
mov
push
mov
nop
cmp
lret
pop
std
add
dec
push
cmpb
aad
mov
jl
push
cmc
dec
cmp
out
jp
xor
jno
scas
ret
lods
jns
popa
repnz
aam
pop
fildll
inc
popf
setb
jnp
inc
and
xchg
and
dec
fistpll
pop
das
out
fdivrs
xchg
add
push
push
shl
clc
enter
cmp
dec
es
test
test
add
iret
pushf
jns
ud1
pusha
pop
cmpsb
jl
in
pop
out
dec
adc
fdivs
jne
js
decl
shl
pop
mov
lret
adcb
in
dec
scas
and
adc
loop
and
test
or
in
jp
push
fcomip
jg
mov
mov
pop
xchg
inc
inc
adc
pop
mov
test
loop
xchg
push
cmp
out
lret
or
push
dec
in
and
xor
scas
inc
in
mov
popf
inc
mov
pop
cmp
sbb
loop
out
inc
ret
outsb
lret
sbb
lods
movsb
jne
lret
out
cmc
jle
iret
mov
or
lds
arpl
bnd
pop
je
insb
fmull
cmc
dec
pop
imul
scas
xchg
mov
arpl
sbb
mov
jno
sbb
xor
negl
shll
mov
inc
arpl
stc
les
sub
fstpl
into
arpl
mov
shll
mov
jnp
loop
push
or
out
inc
in
sbb
mov
xchg
jge
adc
stos
add
push
sub
ret
dec
aad
jmp
mov
inc
pusha
adc
and
lret
int
cmpsl
mov
arpl
and
insl
cli
loop
jmp
notl
xchg
push
pop
adc
push
mov
pop
adc
jae
jl
cs
push
push
ds
push
icebp
cmp
mov
cld
sub
cwtl
mov
mov
ficoms
shr
andl
mov
and
bswap
rclb
popf
xchg
or
pop
movsl
flds
mov
cwtl
add
mov
stos
lods
adc
test
ds
jnp
mov
jns
rcll
lods
cld
lods
sar
xchg
xchg
sarb
addr16
mov
and
cli
clc
jle
jg
in
cli
loopne
xor
mov
shl
add
mov
xchg
pushl
sti
sti
sahf
sbbl
push
fucompp
gs
lods
mov
lret
repz
push
mov
and
out
jg
or
test
push
add
mov
fwait
pop
xchg
in
pop
sti
roll
mov
lods
ja
and
mov
lds
or
pop
push
adc
or
fistps
imul
mov
out
stc
adc
xchg
out
fsubl
adcb
mov
cmp
add
cmp
fidivrs
ljmp
scas
push
and
sti
cmc
add
or
mov
dec
xchg
cmp
mov
out
fcomi
andl
test
aas
mov
push
sub
cs
xor
jmp
stos
fucomip
fcompl
inc
push
mov
push
pusha
fnstenv
divl
iret
sub
mov
and
cmp
mov
pop
mov
hlt
and
data16
mov
adc
mov
push
inc
xchg
cmp
pop
xchg
and
push
pop
jns
das
repnz
nop
cmpsl
addb
cmpsl
enter
adc
imul
push
sbb
ds
dec
sub
bound
loopne
jmp
mov
nop
adc
int3
in
push
or
testb
cmc
mov
add
ss
das
inc
inc
or
pop
movsb
ficoml
add
mov
popa
shrl
jl
packssdw
int3
into
out
rcll
sarb
lock
mov
pop
out
sub
mov
jns
fidivrs
lods
inc
sub
xchg
xchg
into
sub
fwait
jne
xchg
push
movsb
jg
adc
ljmp
aam
mov
cmp
outsl
fmul
cwtl
mov
xchg
int
addl
cmpb
shrl
or
xchg
and
jb
sub
jnp
insl
leave
add
ljmp
xor
fists
jnp
lds
aad
lahf
sub
push
scas
ljmp
jmp
fnsaves
and
ret
jmp
cmpsb
mov
insb
mov
pop
add
mov
and
sub
nopl
mov
add
into
aad
jne
std
fldl
and
cmp
adc
cld
mov
jge
cmp
jge
loope
sub
lods
je
xor
rcr
pop
sub
nop
and
push
or
nop
stc
stos
xor
pop
cmp
test
adc
cmp
loope
inc
and
imul
fildll
repnz
fsubl
repz
lods
aaa
cmove
outsb
push
push
jns
insl
in
mov
and
jp
out
rorb
aad
mov
pop
add
adc
pop
sti
aad
dec
in
inc
les
cmpsl
popa
sub
push
je
mov
xchg
loop
sub
sbb
pmullw
cmp
fs
pop
stos
js
xchg
movsb
jmp
or
jo
add
and
push
xchg
or
push
sub
and
shrb
in
daa
sub
inc
mov
outsb
or
arpl
sub
cmp
xchg
mov
ljmp
cli
int
mov
mov
jnp
adc
out
push
fdivrl
cmp
fstpt
jnp
and
xchg
inc
cmp
lcall
sub
in
int3
push
jg
adc
daa
cmpsb
jo
scas
pushf
jne,pn
pop
dec
lahf
testl
loope
out
lods
inc
lcall
pop
paddusw
stos
hlt
test
cmpl
sub
xchg
aam
stos
and
aaa
stos
dec
or
or
mov
test
dec
outsl
aad
popf
mov
dec
cmc
mulb
jg
push
and
pop
popf
sbb
dec
xchg
jmp
cld
xchg
push
cmp
mov
push
or
cmp
into
aaa
or
pusha
inc
fdivrl
jmp
push
mov
js
in
enter
in
push
movsl
je
cmc
lahf
xor
push
jae
adc
mov
arpl
mov
mov
xchg
xchg
jno
nop
cmp
mov
js
aad
sub
pusha
and
mov
cmc
stos
dec
sar
insl
or
adc
mov
pushf
inc
cmp
or
andb
enter
pop
test
shrb
lods
xchg
lahf
loope
cs
xor
xor
mov
inc
cmp
dec
cmc
ror
jns
mov
pop
in
daa
stos
cmp
aad
out
clc
sarb
pop
dec
adc
push
cmp
int
roll
iret
ss
test
jle
adc
scas
sti
xchg
push
movsl
or
adc
sbb
cmp
pop
push
imul
mov
lock
aas
and
pop
jmp
jne
cmp
sub
in
pop
fcmovnb
div
add
mov
xchg
stos
cmp
mov
lret
push
sbb
popf
push
shll
pop
jno
test
stos
daa
xchg
pop
jo
dec
push
fnstenv
cli
cmp
push
cmp
and
mov
jmp
aad
jl
mov
add
out
jnp
int
push
mov
push
jmp
cmp
rcll
mov
xor
mov
sub
sub
push
mov
sbb
fiaddl
jp
mov
xchg
mov
pop
adc
add
in
xlat
aad
in
adc
orb
push
fwait
shrl
dec
add
cwtl
mov
rorb
mov
repnz
std
xchg
out
inc
xchg
dec
and
mov
push
xchg
lcall
and
mov
cld
movsl
or
cmc
push
adc
cmp
sbb
aad
jb
iret
mov
pop
xor
in
das
cmc
out
lret
jmp
std
add
and
aad
fwait
inc
das
add
shlb
jl
jno
fimull
ljmp
cmp
mov
push
xchg
or
xchg
aaa
mov
jge
push
push
arpl
mov
cmc
or
adc
pop
inc
add
cmpsb
mov
iret
or
and
lahf
cmp
sub
cmc
xchg
push
xchg
and
fidivl
fwait
imull
push
aad
ja
fwait
xchg
push
imul
dec
sar
test
push
jmp
mov
add
out
cmp
cmc
add
cmpsl
pop
shr
int
adc
scas
or
jo
sti
dec
xchg
lods
mov
pusha
mov
sti
mov
scas
cmp
shrl
add
or
mov
pop
mov
movsl
mov
mov
insl
or
outsl
sti
mov
aad
cli
push
das
imul
decb
sub
sbb
or
mov
cmp
sbb
sbb
ds
add
mov
lods
and
mov
jle
xchg
jae
add
jnp
jg
pop
outsl
test
pop
dec
push
jns
mov
inc
jne
in
repz
inc
loope
cmp
add
sti
sbb
adc
mov
jge
or
aad
mov
cmpb
iret
xlat
inc
lods
xor
and
mov
test
or
cmp
rorl
bound
movsl
outsb
mov
mov
mov
jmp
sbb
setb
lahf
stos
outsl
inc
inc
xchg
dec
sbb
ret
jmp
jecxz
xor
cmp
fildll
or
and
call
jmp
ds
daa
cmp
xchg
push
push
fwait
dec
adc
sbb
cwtl
movsb
icebp
int
xchg
mov
xchg
fnstsw
xchg
iret
mov
into
rorb
out
fwait
dec
popa
jle
in
int
out
mov
dec
sub
test
sub
out
popf
and
iret
insb
xor
movd
pop
jns
jno
xchg
lods
add
mov
aad
xor
adc
cmp
push
jmp
cmp
testb
lret
mov
fsts
std
jmp
flds
scas
or
or
push
ret
add
cwtl
mov
adc
addl
push
outsl
jge
mov
and
cmc
fiaddl
and
fbstp
in
jl
push
pushf
sub
popa
cld
pmaddwd
mov
inc
and
push
push
sub
addl
icebp
inc
inc
std
aas
push
popf
rorb
or
testb
xchg
dec
das
pop
push
fldcw
int3
mov
pop
or
mov
outsl
cmpsb
add
enter
xor
xchg
shrb
mov
fisubs
pop
mov
mov
int
daa
xlat
in
out
in
xchg
and
dec
aad
inc
xor
dec
pop
sub
sub
dec
inc
mov
stos
cmp
mov
ror
or
push
fcmovb
xchg
and
cli
cmp
leave
int
stos
repz
mov
lret
addr16
cmp
mov
xchg
cld
fimuls
pop
push
fistl
xchg
ret
ds
dec
and
loopne
xchg
cmc
mov
js
out
das
rcr
out
sub
pop
ficoml
dec
insb
xor
mov
push
dec
jmp
jno
les
cmc
adc
aad
push
stos
pop
pop
lea
jl
dec
aad
lret
mov
scas
cmpsb
mov
dec
mov
int
ljmp
xlat
adc
sub
mov
mov
xlat
push
sbb
dec
out
and
adc
cmp
andb
cld
scas
pop
mov
mov
sub
inc
cmc
rcl
mov
aad
popa
jbe
loope
push
cs
enter
push
jo
xchg
or
fdivr
jmp
add
cmc
sub
adc
mov
sub
ljmp
idivl
mov
jbe
loop
sbb
jmp
inc
ss
in
fidivrs
into
movsb
sub
jno
lods
fistps
aam
mov
hlt
aad
inc
sti
xlat
or
adc
cmp
roll
cmc
sub
or
inc
pop
push
sub
jnp
ror
jno
fcoml
loope
dec
enter
movzbl
push
fistpl
aad
iret
jl
bound
mov
and
je
lcall
xchg
jl
popf
or
pop
loope
inc
bound
add
jge
xor
mov
outsb
outsl
lea
lock
dec
fwait
cmp
jg
cmp
xchg
insb
sbb
call
popf
and
aad
sub
scas
test
lock
mov
in
and
imul
mov
fcmovnbe
xchg
sub
js
int
adc
cli
call
inc
test
not
fdivl
bnd
in
jge
outsl
and
push
mov
gs
sbb
and
ds
mov
outsl
ljmp
negl
and
leave
mov
hlt
mov
jbe
lods
test
in
mov
dec
jmp
xabort
push
dec
lcall
cmc
xchg
enter
lea
xchg
out
jge
out
in
lods
pop
mov
fmull
mov
or
fwait
cmp
xchg
cmp
ret
push
rol
mov
in
mov
adc
outsl
sti
mov
and
or
ret
js
addr16
cmc
mov
aaa
aad
jge
jecxz
js
lcall
shlb
fwait
popa
test
adc
arpl
stos
mov
pop
lret
jb
insl
repz
in
mov
cmc
jge
push
inc
outsl
shlb
xchg
add
stc
aad
aaa
cmp
jmp
dec
cli
xchg
fs
insb
push
pop
js
dec
adc
mov
out
adc
inc
sbb
pop
xchg
cmp
push
lods
loopne
add
mov
sbb
cmp
xlat
sbb
xchg
lods
in
in
cmp
cmp
lods
or
mov
jae
iret
aad
jns
mov
add
sub
inc
inc
cltd
roll
cltd
mov
repnz
out
mov
mov
xchg
enter
jmp
and
adc
call
std
mov
lahf
dec
dec
push
arpl
mov
aam
test
jne
sub
test
mov
addr16
sub
lret
in
inc
jle
lret
add
pop
add
testb
xchg
mov
insb
add
pop
ret
sub
cmp
jne
push
mov
push
lea
adc
pop
mov
xchg
jns
sub
shl
mov
jle
das
in
stos
popf
arpl
dec
sub
test
in
mov
cmc
push
rorl
pop
std
ret
out
inc
or
nop
stos
das
cmc
fbld
xor
fidivrs
pop
add
cmp
adc
push
shlb
push
mov
mov
mov
dec
aad
cli
or
mov
xor
out
in
pop
loop
xchg
cmpsl
xor
repz
xor
push
pop
stos
ss
or
inc
dec
cmpsl
stos
xlat
mov
pop
cmp
aad
add
arpl
test
xlat
jp
push
jmp
aad
mov
dec
push
and
dec
inc
xchg
cmp
orl
shl
mov
in
and
cwtl
mov
xchg
shr
jo
and
xor
inc
idivl
sbb
dec
lcall
jae
pusha
dec
iret
and
cmc
mov
adc
xor
popf
add
xchg
or
jge
and
inc
xchg
les
dec
jns
jle
pop
aad
adc
xor
mov
dec
mov
fs
insl
cwtl
pop
fcmovnb
xor
loop
cltd
and
sti
pusha
out
jg
jns
mov
fwait
mov
jp
lea
pop
in
imul
mov
xor
xchg
gs
add
in
jnp
cmc
mov
ja
jbe
clc
push
ja
cmp
jp
push
pop
mov
scas
imul
les
mov
xor
addr16
mov
jo
cmp
sub
push
int
xchg
iret
mov
outsl
les
idiv
jmp
test
lcall
mov
mov
ds
cmpsb
out
push
push
ror
aad
stos
iret
in
arpl
push
js
in
outsl
xchg
ret
sbb
jb
xchg
in
xor
test
gs
jl
fbld
ret
and
xor
adc
push
aaa
das
or
fsubl
push
test
pop
in
xchg
sub
cmc
pop
inc
push
movsl
pop
xchg
add
dec
mov
push
sbb
iret
cmc
sahf
test
outsl
pusha
fadds
stos
cmp
push
addr16
jmp
enter
mov
aad
sahf
inc
rorl
mov
and
cmp
testl
cmp
jp
dec
sub
loope
daa
cmp
or
push
out
in
push
pop
imul
cmc
out
xchg
push
mov
xchg
jg
inc
in
fmulp
shrb
jnp
sbb
je
fisubs
stos
lret
cmc
int
les
das
stos
jle
mov
push
push
xchg
or
enter
jecxz
cmpsb
and
int
sbb
cltd
mov
dec
and
lods
lcall
movsb
push
jmp
xchg
jnp
aaa
mov
outsb
fnstenv
pop
pop
push
jmp
xchg
xorl
aad
or
dec
in
jmp
in
shrl
lahf
call
dec
ret
xchg
pop
push
mov
inc
sbb
loopne
dec
into
push
jle
inc
xlat
mov
stc
xchg
test
sub
je
popa
add
gs
in
stc
cld
cmp
out
adc
mov
dec
xchg
es
cmpsl
lods
ss
add
int
ret
push
pop
push
inc
adc
add
fsubp
sti
add
and
or
mov
pop
repz
add
hlt
cmp
sahf
fmull
cmp
pusha
push
ret
push
pushf
insb
inc
adc
xchg
xchg
inc
pusha
jb
sub
decb
pop
cmp
add
cmc
into
mov
arpl
and
jg
nop
dec
mov
mov
mov
subb
dec
cmp
sti
push
pop
clc
mov
add
mov
push
mov
mov
repz
and
movsb
mov
popa
xor
push
ss
cmpsb
add
push
adc
pop
pop
add
sti
cli
movb
clc
popl
or
loope
scas
push
in
fs
addl
out
sub
and
fs
jnp
cld
nop
mov
iret
adc
outsb
aad
adc
sub
stos
jb
adc
cmc
std
lcall
and
mov
jmp
and
or
dec
or
pop
into
out
loopne
push
movsl
cmp
cmp
lcall
inc
mov
mov
fimuls
pop
mov
sbb
sub
mov
popa
mov
jns
or
cmc
cmp
sub
mov
addr16
jecxz
aad
mov
fs
fnstcw
dec
xchg
sarl
pop
jnp
cmp
or
xchg
xchg
maxps
decl
dec
sub
cmc
fisubrs
or
cwtl
jmp
call
xchg
vmovupd
addr16
enter
in
test
leave
xor
loope
out
xlat
lret
xchg
inc
loope
sub
jp
outsb
mov
jmp
and
xchg
cwtl
ljmp
out
fnstsw
jge
mov
lea
mov
aas
rol
scas
popf
jmp
rcr
js
adc
jne
aad
jno
push
mov
inc
js
xchg
add
jecxz
jno
jmp
jl
push
fists
pop
iret
mov
or
mov
test
nop
jne
add
mov
sahf
cmp
xchg
fs
outsb
and
push
xchg
xchg
jo
push
dec
ljmp
lahf
loopne
adc
icebp
jo
adc
push
nop
cld
repnz
sti
inc
hlt
jb
stc
shlb
push
push
lret
cs
mov
scas
rclb
adc
scas
inc
sar
imul
mov
jne
lods
mov
jle
jbe
and
push
sub
inc
ficoml
aad
sbb
test
pushf
mov
inc
xor
jmp
cmp
lock
jno
into
sbb
out
push
pusha
into
push
sub
in
sti
ror
or
outsb
cmp
scas
cmc
jge
out
ja
std
cli
in
repz
and
mov
iret
pop
sub
and
aaa
cmc
mov
mov
xor
movsl
ja
xchg
cmpl
push
lahf
sti
and
cli
inc
xchg
call
push
inc
in
shll
cld
jge
adc
popa
in
mov
cmp
aad
imul
mov
jl
in
xchg
xor
push
jmp
ret
mov
push
aas
push
stos
sbb
add
mov
pop
mov
inc
add
lcall
xor
or
stc
ljmp
adc
or
inc
push
add
aad
mov
pop
cmp
vmread
xor
add
dec
fisttpll
movsb
enter
test
cmp
call
dec
test
popf
jns
in
fidivs
popa
int
cmp
stos
subb
add
xchg
jg
sti
adc
lds
sti
and
or
ljmp
nop
jmp
pop
popa
sbb
repnz
dec
xchg
mov
push
shrb
push
imul
sub
loopne
cld
sbb
mov
mov
outsl
mov
and
aam
and
clc
sti
std
call
sbb
int
ss
jle
test
cld
cmc
or
lock
shlb
jae
inc
stc
call
test
jl
int
rcrb
sub
sbb
mov
push
pop
inc
pcmpgtd
dec
dec
mov
out
pop
and
mov
jecxz
andl
adc
adc
das
cmp
xchg
lods
in
mov
push
and
mov
sub
add
adc
jmp
sbb
testl
adc
dec
stos
jp
les
jno
xchg
repz
jecxz
cmpsl
jge
pop
popf
notb
xchg
mov
xchg
adc
push
add
jb
dec
stos
ss
inc
inc
fnstsw
sahf
push
nop
fwait
das
je
add
out
inc
out
sbb
xor
repz
into
sbbb
in
sbb
xlat
push
cmc
dec
stc
lock
pusha
or
mov
inc
in
subb
fisttps
andl
cmc
or
mov
iret
ret
push
ja
pop
fadds
out
hlt
subl
aad
xchg
dec
pop
mov
popf
dec
iret
imul
xor
mov
inc
into
pusha
bound
out
inc
xchg
pop
xor
je
or
add
imul
mov
mov
clc
sti
sbb
test
cmp
int
xchg
hlt
test
je
mov
mov
dec
in
mov
sub
xor
aad
test
inc
jmp
fdivrl
test
rorl
nop
push
inc
mov
add
push
into
dec
ud1
or
cmp
aad
insb
into
xor
out
lds
arpl
stos
loope
push
loop
add
mov
call
imul
dec
xchg
adc
lods
cli
inc
xchg
cmpsl
jmp
cmp
and
adc
dec
jmp
dec
add
xchg
inc
jae
jno
mov
lods
movsb
out
mov
stos
xlat
out
sub
mov
cmpsl
inc
into
ljmp
stos
repz
ret
repz
jg
dec
jb
cmc
push
mov
and
jge
lock
cmc
add
push
loope
pop
and
xchg
or
xor
mov
repnz
or
hlt
mov
xchg
cmc
aas
or
aad
pop
dec
cmpsl
inc
cmpsb
in
sbb
xor
dec
xchg
jnp
xchg
pop
pop
push
popa
cmpsb
out
and
mov
int
jp
roll
pop
icebp
jmp
mov
xor
fstp
lahf
cmpsl
out
push
loopne
cld
pushf
cmp
or
test
mov
mov
mov
out
lret
movsl
insl
popf
inc
jae
mov
sub
js
je
scas
xchg
cmc
adc
dec
out
xor
mov
aad
adc
mov
fmuls
mov
dec
cmpsl
cmp
dec
cmc
popf
inc
mov
iret
mov
rolb
cmp
data16
xor
insl
or
jmp
cltd
and
shlb
or
push
inc
lcall
rcl
and
aam
xchg
movsl
xchg
subb
ret
jmp
cmc
mov
push
jge
dec
sbb
cltd
test
jns
aad
push
add
js
loopne
enter
subl
ja
xor
ror
aad
int3
push
ds
movsb
fcomip
mov
std
pop
mov
mov
dec
lret
stos
popa
lahf
daa
pop
dec
add
pop
dec
int
push
xchg
cmp
mov
repnz
pop
adc
mov
xchg
jmp
stos
lods
dec
pop
cmp
ljmp
test
popa
roll
cli
xchg
inc
xor
idivl
and
fbld
inc
aaa
dec
mov
inc
fs
lock
cmc
cmp
lret
aaa
add
cmc
inc
in
test
sbb
cmp
lods
dec
or
xchg
inc
loop
cmp
xchg
mov
shlb
xor
jne
pop
dec
ja
rorb
push
lods
sub
or
dec
or
das
and
inc
stc
aam
jno
dec
dec
nop
adc
int
cmp
mov
imul
int
xor
daa
or
in
insb
fistpl
or
fimuls
dec
ds
and
in
jnp
or
or
fidivrs
xchg
dec
lock
push
shrl
add
push
push
push
sub
sarb
sbb
loope
pop
xchg
cmc
stos
adc
jne
or
insl
sub
jle
out
in
ja
mov
pop
loope
lods
jl
ud2
adc
out
xor
adc
es
sbb
xchg
iret
inc
xor
pusha
push
sub
leave
lret
dec
jmp
in
inc
add
dec
jl
sbb
out
and
ret
es
shlb
test
mov
or
in
xchg
aad
repz
cmp
movsb
shlb
gs
lods
insb
iret
xchg
popa
xchg
dec
imul
sti
test
cli
stos
adc
pop
xchg
iret
cmc
sti
cmpsb
jmp
outsl
mov
xchg
cmpsb
push
fsubrs
cmc
sbb
sti
fdivs
in
add
fcoms
cmc
scas
mov
stos
xor
inc
and
mov
inc
jmp
mov
pushf
push
push
adc
jmp
lea
vpmacssdqh
and
adc
jge
jmp
imul
out
push
imul
test
pop
cli
or
stos
mov
scas
repnz
dec
shlb
xor
adc
mov
push
shrl
mov
push
fistps
std
imul
inc
icebp
pop
fs
mov
mov
xorps
cltd
jg
call
pop
mov
pop
xchg
scas
push
lcall
adc
push
int
add
movsb
repnz
cmc
in
das
push
or
mov
gs
bound
sbb
sti
xor
lahf
int
out
hlt
popa
bound
adc
mov
or
test
test
and
lcall
jl
and
cmpsl
and
ja
movsb
sub
cmc
mov
jl
inc
iret
ljmp
add
pop
lods
jmp
sti
inc
rcrb
sub
sbb
add
insl
sub
repnz
scas
pusha
sub
movsl
xor
call
xchg
js
xchg
fnstcw
test
mov
jp
pop
push
or
loopne
xchg
mov
or
lret
mov
add
out
jle
loop
ljmp
js
xchg
mov
push
in
push
mov
into
out
jmp
fistps
xorb
js
ja
decl
sub
xorl
inc
bsf
xchg
lea
mov
push
sub
mov
push
out
sub
jge
sbb
sub
idivl
fsubp
ja
push
push
cmp
test
mov
unpckhps
sahf
decl
arpl
jnp
cs
add
call
add
insb
aas
pop
popa
xchg
cmp
or
fisttpll
add
sahf
mov
xchg
arpl
gs
sub
pop
enter
sbb
dec
sub
and
aad
rcrl
mov
sbb
or
push
adc
sbb
dec
jno
fnstsw
in
jmp
xchg
mov
addr16
sbb
jne
nop
sub
adcb
inc
push
ja
xorb
push
jg
lods
mov
outsb
rcrl
pop
and
lock
xorb
fdiv
out
stos
cwtl
sub
pop
mov
in
or
int
adc
lret
mov
xchg
dec
arpl
mov
and
loopne
nop
add
mov
stos
sbb
imul
sub
addr16
or
push
or
or
xor
cmp
cmp
and
shll
fnsave
jns
pop
lods
sub
in
or
fisttps
imul
lret
mov
pop
int
pop
mov
aas
or
xor
push
movsl
xor
les
adc
sbb
aad
lods
xor
shrb
rcll
xchg
pop
pop
movsb
jb
dec
mov
aad
test
popa
lcall
loope
mov
jb
lods
inc
xchg
push
push
repnz
xchg
add
inc
adc
aad
push
fldl
iret
cli
cmc
pop
push
dec
inc
xor
xchg
push
push
inc
jo
and
fisubs
lock
mov
orl
out
inc
aaa
aas
inc
repz
leave
xlat
xor
cmp
mov
pop
jle
jle
fsincos
cmpsb
into
sub
adc
push
jge
faddl
mov
loopne
int3
mov
test
add
cld
push
ret
dec
jmp
xchg
insl
jge
push
ss
push
popa
xor
enter
xchg
iret
js
bound
mov
cmpsl
push
das
bound
lods
pop
add
fildl
cmp
or
sub
push
adc
movsb
stos
popa
pop
ds
call
or
aad
orb
loope
adc
pushf
aad
or
sbb
cltd
add
lea
mov
lods
lds
or
mov
cs
jnp
or
mov
mov
pavgw
mov
mov
cld
cmp
ljmp
push
ja
jg
mov
cld
pushf
mov
js
stos
shl
jge
outsl
int3
pusha
mov
orl
movsl
lahf
shlb
scas
shlb
mov
repz
push
pop
push
int
in
mov
push
in
fimuls
shll
push
loop
mov
test
jno
sub
push
inc
lods
fstpl
push
xchg
imul
cltd
lcall
pusha
repz
mov
test
mov
add
jns
sub
pop
adc
lea
les
push
out
lock
out
cli
aad
jecxz
adc
mov
movsb
push
jbe
inc
rol
dec
pusha
icebp
jg
inc
lahf
push
aad
in
mov
daa
rcrl
sub
loopne
into
or
cmpsl
sbb
repnz
pop
mov
in
jmp
add
push
add
pop
push
test
mov
mov
pop
inc
aas
lods
test
xchg
data16
or
out
ljmp
or
test
fistpll
cs
stos
cmp
stc
cmp
xor
pop
out
imul
adc
pop
loope
inc
std
inc
testl
out
lea
cmpsl
or
decb
dec
inc
add
dec
iret
xchg
jle
jns
ljmp
dec
jae
jmp
lock
lods
add
loopne,pn
fwait
popl
pop
sbb
mov
out
scas
or
mov
fildl
adc
xchg
xor
aam
int
shlb
daa
xor
cmp
cmp
in
cmp
add
jecxz
mov
dec
sub
xlat
test
insb
xchg
inc
inc
xor
repz
pusha
lahf
in
mov
jl
cpuid
mov
pushf
mov
out
scas
cmc
cmpsb
stos
push
fldt
js
adc
and
je
aam
into
movsb
jnp
out
pop
adc
into
and
sbb
cli
sub
or
adc
fimull
or
or
rolb
dec
or
leave
push
cwtl
stos
jns
xchg
push
lcall
adc
mov
into
aad
outsl
push
dec
mov
sub
lea
push
sbb
stos
icebp
fcmovne
sti
ljmp
mov
dec
outsl
mov
xchg
imul
mov
sub
mov
dec
stos
mov
mov
jmp
adc
dec
aad
mov
xor
cmpl
mov
xchg
add
arpl
scas
andl
sub
int
xchg
lock
jae
movsl
pop
aam
add
mov
jae
xchg
cmc
xor
clc
adc
loop
stos
add
out
imul
ret
sbb
push
cmp
pop
sbb
sbb
out
and
fnstcw
mov
neg
aad
sub
pop
xlat
cmpsl
push
xor
movsl
cmp
out
sbb
mov
or
xchg
mov
and
pop
out
fldt
sub
or
test
aam
clc
push
int
or
popa
shrl
ss
ljmp
xor
lods
imul
sub
xor
jecxz
inc
and
xchg
out
dec
pop
mov
inc
cmpl
xlat
jb
adc
or
stos
in
xchg
dec
int
dec
or
add
iret
sub
xor
cmp
push
push
cmpsb
addb
inc
or
mov
sub
clc
dec
outsl
in
mov
shlb
jmp
mov
mov
xchg
adc
sub
jg
jbe
sarb
mov
aad
ja
notb
xor
adc
add
std
xchg
and
fsubl
bswap
popa
push
sbb
mov
and
inc
pmaddwd
mov
mov
outsl
dec
mov
dec
pop
fisttpll
jp
sbb
call
popa
xor
push
jne
and
push
dec
or
call
lods
jecxz
std
mov
movsb
lds
imul
sbb
arpl
enter
jbe
mov
xchg
push
frstor
add
push
add
pop
out
add
popa
sub
in
and
pop
mov
roll
mov
dec
outsl
jnp
push
cmpsl
insb
pop
or
cmp
adc
push
in
lods
call
pop
xchg
nop
int3
aad
imul
outsl
jge
xchg
popf
mov
and
repnz
enter
or
ja
push
roll
out
pop
aad
cwtl
stos
outsl
push
cmpsb
dec
ja
sbb
sub
popf
sub
inc
push
cmp
lahf
or
int
dec
dec
andb
or
inc
xor
fisttpll
jp
in
cmc
repz
mov
arpl
mov
cmc
and
scas
and
imul
ret
pop
cli
es
adc
pop
dec
mov
les
test
arpl
cmp
mov
popa
mov
push
mov
mov
movsb
movsb
or
imul
aad
rol
or
jmp
fistpl
pop
shr
jp
fdivrp
cmp
test
jge
sub
jns
cmc
sbb
push
mov
test
adc
adc
out
inc
xor
mov
or
mov
mov
mov
loopne
and
mov
dec
xchg
fildl
inc
in
imul
dec
push
mov
repz
cmpxchg
cmp
sub
or
inc
repz
dec
or
fsubrs
adc
xor
outsl
or
mov
jno
mov
jg
fistpll
iret
sbb
or
int
jnp
dec
sbb
mov
int
push
pop
mov
sti
xor
orl
inc
ror
das
jae
push
scas
rcll
insl
lcall
and
arpl
jge
fistpl
fiadds
push
js
outsl
jmp
ljmp
inc
out
leave
cmp
push
or
jbe
jecxz
or
push
cmp
push
adc
jp
cmp
and
push
cltd
jp
fisttpll
xchg
sub
adc
cmp
test
loopne
and
pop
fidivs
ret
push
decl
dec
cmp
or
jecxz
cmpsl
cmp
or
in
or
xchg
mov
mov
push
cmp
pushf
out
loope
stos
les
aaa
cmc
sarl
mov
call
push
jmp
imul
scas
stos
xchg
cmpsl
out
adcl
dec
mov
cmc
rorb
das
rclb
jecxz
adc
gs
adc
mov
dec
repz
adc
nop
lds
mov
mov
mov
jns
lret
sub
lretw
and
sub
scas
inc
inc
cmp
jge
hlt
sbb
andl
jg
xchg
jmp
jb
clc
cs
jnp
cmpsb
scas
shll
jns
scas
int
pop
inc
cli
cmp
insl
cli
cmpl
repnz
mov
rclb
jecxz
dec
dec
mov
pop
jmp
xchg
int3
in
mov
js
nop
imul
cmp
jge
add
and
xchg
or
ds
jnp
shll
fs
dec
andl
xchg
and
stos
mov
sub
xlat
pop
aam
cld
sub
add
mov
push
std
mov
stos
sub
inc
adc
adc
dec
mov
scas
cmp
mov
jp
xchg
daa
leave
dec
iret
loopne
in
aad
adc
adc
jge
scas
push
or
js
xchg
mov
xor
dec
inc
xchg
mov
js
xlat
cmc
jnp
sbb
inc
adc
jno
mov
cmp
mov
dec
jmp
push
scas
js
iret
sbb
addl
push
jnp
js
and
dec
pusha
xchg
out
aad
cmc
mov
mov
sbb
mov
push
add
xchg
inc
out
addb
mov
out
mov
cmc
pop
and
shlb
sbb
jmp
loope
testl
into
in
or
in
out
jmp
cs
inc
push
pop
dec
aad
outsl
loope
sbb
pop
dec
sbb
xor
push
js
push
ja
lock
mov
add
jne
dec
icebp
call
mov
in
lods
push
mov
sub
add
and
push
inc
in
adc
adc
jle
pop
xor
mov
inc
ret
mov
sub
add
mov
notw
inc
ret
push
pop
mov
loop
dec
pushf
or
fcmovne
xchg
add
pusha
cmp
and
arpl
lcallw
jl
clc
mov
out
jbe
cs
mov
icebp
jl
add
out
cld
push
sub
jae
mov
lea
aad
mov
loop
cmc
int
inc
lock
lahf
mov
movsb
flds
pop
mov
scas
push
pop
mov
adc
shlb
dec
jp
cmp
xchg
ror
in
sub
xchg
and
std
ret
mov
inc
aam
dec
cmp
outsl
add
ljmp
hlt
ja
fs
cwtl
mov
dec
andl
aad
add
push
push
flds
jl
xor
fdivrl
dec
outsb
stc
shl
movsb
fcomi
xlat
mov
jge,pn
fstpl
dec
stos
push
pop
mov
mov
test
xlat
adc
les
mov
sub
dec
fildll
mov
mov
cmp
lret
imul
ror
mov
ficomps
sub
lahf
push
icebp
mov
mov
incb
lea
mov
scas
lds
pushf
cmovo
or
outsb
cwtl
aad
mov
push
aam
pop
mov
sti
xchg
out
cmp
push
push
sbb
arpl
xchg
mov
push
andl
mov
repz
mov
cmc
aaa
cwtl
sub
lods
outsl
add
mov
shl
fisubrs
mov
inc
or
andl
gs
out
xchg
jp
mov
stos
divb
ja
mull
cmpsb
out
inc
mov
call
cmp
xor
inc
lret
into
push
repnz
lods
jecxz
adc
repnz
jns
xchg
hlt
cmp
bound
test
mov
testb
pop
ret
pusha
mov
fsubl
and
bound
fwait
and
inc
xor
outsb
nop
fwait
cmpsl
popa
rolb
nop
pop
bound
lahf
jg
and
lahf
adc
mov
xchg
insl
ja
lods
in
cmp
scas
test
fildll
cltd
inc
mov
dec
add
test
and
push
or
jge
daa
bnd
std
or
mov
pop
pmullw
gs
mov
push
mov
lods
add
mov
mov
sub
nop
ljmp
testl
pop
arpl
dec
pop
das
and
es
out
pop
lahf
inc
pop
popa
inc
pop
nop
stos
in
in
xchg
xchg
sti
sbb
add
add
sti
cmpsb
out
lods
xchg
mov
imul
rcll
mov
lods
adc
std
xor
hlt
shl
or
pop
or
jle
mov
jl
dec
mov
ds
test
or
xor
dec
popf
mov
test
fs
sbb
fs
lods
leave
pop
mov
cmpl
adc
adc
cwtl
out
push
and
loope
mov
iret
cs
sahf
roll
cmp
je
xor
sti
lods
adc
jmp
mov
test
dec
mov
cmp
hlt
ljmp
xchg
cltd
inc
cwtl
clc
mov
sub
test
mov
xorb
xchg
mov
cmc
cmp
add
aad
mov
int3
add
cld
ljmp
movsb
loope
or
or
loop
arpl
cmc
je
xor
movsb
cmp
cwtl
mov
mov
gs
clc
xor
mov
ficomps
mov
loopne
push
lret
movsbw
bound
sub
pop
pushf
adcb
fisubrs
out
loopne
ret
inc
enter
dec
adc
dec
pop
js
mov
imul
cmp
and
pushf
mov
xchg
popf
mov
push
rolb
bound
mov
jne
add
mov
pop
fiadds
repnz
push
test
je
lahf
lock
in
adc
lods
dec
pop
rorl
push
popf
or
sti
mov
icebp
adc
jmp
mov
dec
push
testl
lods
or
mov
in
or
xlat
mov
test
xchg
pusha
xor
mov
ret
dec
stos
and
add
xchg
push
mov
in
mov
adcb
add
mov
xchg
xchg
dec
push
iret
pop
mov
cmc
dec
insb
das
lret
and
adc
bound
or
out
call
jmp
fistpl
or
lods
sbb
vpsubb
les
or
mov
lahf
enter
push
or
mov
std
and
sbb
dec
loope
insb
pop
int3
mov
arpl
aas
arpl
or
pop
aaa
insl
push
adc
rcl
mov
loopne
xchg
pusha
pop
cmpsb
jb
movhps
adc
xchg
jle
mov
mov
pop
xchg
mov
outsb
iret
cmc
xchg
sub
push
adc
add
inc
adc
sbb
in
lcall
ss
or
out
sbbb
jge
sbb
mov
loopne
sarl
fimuls
add
lcall
mov
lcall
lods
bound
push
fidivs
clc
dec
testb
mov
mov
cmpsb
idivb
cmc
sub
cmpb
or
mov
xchg
jno
popa
outsb
lret
cvtdq2ps
cmpsb
ljmp
mov
adc
lcall
inc
or
negb
and
shrl
xchg
fldl
mov
in
push
fcmovne
loop
push
push
les
add
popf
jp
inc
adc
idivb
sub
mov
js
lcall
mov
jmp
test
sahf
dec
push
cmc
jnp
aam
testl
mov
inc
xor
outsl
jnp
xchg
sub
lods
mov
jmp
push
rorl
lods
push
xchg
jmp
mov
test
jb
out
mov
loope
pcmpeqw
mov
fdivrl
adc
cmp
mov
std
add
mov
sbb
insb
fwait
clc
loopne
and
mov
pushf
add
mov
push
pop
js
cmp
jnp
decl
sbb
and
adc
das
into
or
popf
jl
sbb
bound
adc
iret
push
inc
leave
jg
pop
pop
scas
lret
cwtl
xor
lret
fisttps
pop
inc
cmp
bound
dec
mov
pusha
jno
mov
js
sub
iret
and
mov
dec
rcll
stos
repz
int
leave
sbb
xchg
arpl
adc
imul
push
inc
into
cmc
push
loopne
les
mov
subl
pop
jp
js
daa
xchg
ret
movsb
mov
push
bound
jl
inc
mov
stos
push
test
jg
mov
sbb
clc
add
dec
sub
nop
mov
shlb
into
ja
jae
dec
cmp
or
push
jge
pop
pop
int
xchg
push
or
mov
cmc
jl
gs
xchg
jmp
cmpl
adc
jns
mov
sar
aas
or
mov
scas
faddl
xchg
dec
lods
outsb
add
or
or
cmp
nop
fcompl
movsl
ror
mov
add
dec
pop
pop
popf
jo
lret
sub
in
lods
dec
aaa
test
push
sbb
push
test
sub
or
out
and
arpl
js
into
jb
push
xchg
jle
sub
pop
aad
add
arpl
rolb
stc
push
inc
sub
push
lods
push
shll
dec
notl
add
xchg
jmp
add
xchg
push
push
jb
jmp
clc
add
jb
idiv
aad
mov
cmp
rcll
lock
insl
subl
mov
add
push
js
jns
out
inc
fnstcw
dec
bnd
mov
inc
js
addb
push
sahf
test
cmp
add
call
adc
xchg
push
cli
outsl
aad
ss
push
add
cmc
pusha
jno
or
sub
call
sub
add
iret
call
setns
into
xchg
push
fcmove
in
cltd
mov
aad
xchg
fisttps
cmc
dec
cmp
push
xor
mov
adc
pop
outsb
pop
cmc
mov
jmp
aas
add
fst
push
sti
jp
jb
scas
mov
mov
aam
cmp
xchg
inc
movsb
add
jno
lds
jnp
and
into
cli
sub
jecxz
cs
int
pop
xchg
aam
dec
shl
sub
iret
push
cmc
xor
mov
sub
out
xchg
or
push
jnp
aad
and
jmp
sti
cmp
test
call
sbbb
into
insb
cli
mov
aam
jge
enter
pushf
in
or
fldenv
fninit
stos
cwtl
ret
push
call
cli
lods
push
addr16
xchg
pop
dec
lock
add
or
es
add
imul
scas
cmpsl
rcll
out
clc
aad
fcomps
stos
aad
movsl
jno
and
fdivp
test
xchg
addr16
cld
out
imul
jecxz
xor
or
pop
or
cli
lret
inc
pop
mov
shll
adc
jmp
add
jb
xlat
ret
cmp
gs
loope
bound
inc
or
out
rclb
clc
enter
pop
sbb
push
push
xchg
icebp
xor
std
jmp
xchg
lods
dec
cmp
push
push
adc
das
stc
shrl
and
insl
sti
das
cmp
shrb
push
push
stos
setne
mov
push
arpl
or
loopne
cmc
pop
mov
jbe
test
out
adc
dec
push
sub
xchg
and
mov
inc
dec
rcll
or
xchg
mov
jae
push
adc
mov
add
push
sti
aad
into
out
mov
in
sbb
jno
in
or
xor
dec
push
les
cwtl
jns
dec
pop
xor
xchg
xor
jge
mov
xlat
mov
dec
ja
lcall
jbe
pop
xor
add
imul
adcl
sbb
out
aad
aaa
and
repnz
mov
sub
mov
pop
xchg
inc
movb
ja
out
adc
and
adc
and
lret
aad
dec
imul
andb
xor
sti
sbb
jp
cmp
int3
decb
push
jnp
stos
xchg
popa
xor
dec
mov
dec
fs
rorl
xor
ret
jle
xor
inc
add
push
loope
mov
mov
mov
loope
out
inc
adc
into
push
sub
xor
mov
or
pop
mov
movsb
or
mov
daa
dec
cmp
xchg
cmpb
fiaddl
out
push
jno
add
xchg
test
cmp
in
in
lods
sti
xchg
dec
xchg
imul
and
arpl
cmp
mov
rcll
xchg
fstpl
or
imul
fstl
push
push
pop
mov
cmc
fstpl
pushf
incl
xor
loopne
cmpsl
es
loop
xor
movsl
xor
orb
mov
inc
js
cmp
sub
cmc
dec
mov
mov
inc
pop
push
jecxz
aad
jl
push
jbe
adc
fsts
xchg
mov
xor
cli
sub
popf
cmp
pop
cmp
pop
decl
add
cmp
inc
push
lcall
jg
xchg
push
pusha
dec
adc
std
mov
or
xchg
jmp
mov
aad
aaa
repnz
loope
push
push
jge
mov
out
add
popa
mov
lds
lar
jmp
aad
test
shrl
jns
lahf
push
lea
lcall
cmp
xor
test
or
cmp
dec
jnp
inc
jge
jecxz
adc
xor
jns
jmp
add
jle
cmc
fcmovne
andl
aam
scas
add
and
mov
cltd
xchg
cmp
sbb
xchg
scas
iret
xchg
dec
iret
data16
adc
push
sub
push
dec
ret
cmp
pop
lods
daa
mov
jp
adc
adc
dec
pop
dec
sub
xor
and
inc
sbb
xor
xor
mov
imul
rolb
mov
movsl
jecxz
push
stos
pop
cmp
or
or
ret
test
js
sub
pop
fdivrl
int
fwait
sub
adc
call
or
add
or
jl
xchg
imul
push
sti
push
test
lret
enter
jecxz
lahf
mov
ds
xchg
and
xchg
cmp
outsl
decb
cmc
std
xchg
enter
mov
sub
out
or
sti
sbb
or
adc
sbb
inc
in
or
xchg
mov
mov
adc
cmp
fistl
js
loope
clc
gs
into
or
ljmp
xchg
ljmp
push
in
repnz
shll
ljmp
mov
sbb
adc
and
cmpsl
jl
dec
cmp
add
incb
sti
aad
out
ret
or
cmc
insl
xlat
cmpsb
bound
lods
daa
adc
jg,pt
sbb
dec
cmp
leave
pop
mov
mov
and
jge
adc
repz
int
and
pop
xchg
ljmpw
ror
cmp
inc
xlat
lods
pop
jno
push
sbb
mov
pushf
push
push
hlt
cmpsl
int
cmp
xchg
sbb
leave
hlt
push
mov
nop
movb
mov
cmp
bound
jns
repnz
aad
pop
mov
mov
xchg
jae
ljmp
repnz
call
inc
xchg
hlt
out
js
aad
popa
out
mov
adc
jle
and
inc
fldl
in
dec
insl
pop
add
stos
insl
insb
cltd
adc
pop
mov
or
mov
repnz
cmc
aas
dec
inc
add
clc
cmc
out
xchg
aaa
leave
push
lods
jge
jg
insl
push
aas
sahf
inc
mov
sub
hlt
push
mov
fwait
out
cmc
shll
jnp
nop
pop
je
stc
jns
add
sbb
mov
sub
scas
lret
push
fcoms
bound
xchg
int
imul
xchg
xchg
in
repnz
adc
hlt
aad
push
add
mov
lods
or
shr
mov
push
testl
sub
fs
and
and
sbbl
movsb
lret
or
mov
test
add
or
lock
push
decl
lods
imul
sub
adc
push
mov
dec
pop
jmp
push
jnp
mov
jl
in
adc
clc
sbb
cli
xchg
je
in
xchg
or
mov
hlt
in
add
jecxz
or
dec
lods
iret
popa
xor
test
pop
xchg
in
pop
pop
pusha
js
icebp
add
sub
jmp
push
fldt
stc
mov
cmp
jp
cmp
push
mov
pop
jns
outsb
cmp
xchg
push
sbb
dec
add
xor
loop
jb
sti
push
mov
push
ret
pop
cltd
repnz
sti
add
inc
inc
lods
aam
mov
mov
inc
jno
lock
push
fdivs
jecxz
xor
je
sub
ljmp
repz
sbb
mov
sbb
adc
mov
repnz
loopne
fisttps
imull
mov
adc
daa
xchg
imul
mov
xchg
xchg
mov
cmpsb
pushf
clc
shr
adc
cltd
rorl
mov
leave
push
cmpsl
push
stc
or
fs
fwait
ret
push
pop
dec
jmp
fstp
or
sbb
xchg
das
mov
mov
iret
mov
rcrl
inc
es
mov
cli
aad
test
pop
pop
or
cmp
adc
cmpsb
out
pusha
out
pop
or
pop
sbb
or
and
mull
sbb
std
pusha
push
dec
jns
ror
jge
in
cmp
adc
xor
sub
or
movsb
lahf
repz
idiv
into
cmc
xlat
mov
add
out
xorl
jns
mov
fdiv
inc
mov
in
mov
xchg
xor
movsb
and
sub
cmp
test
lret
sub
inc
fcmovnbe
aad
in
jecxz
dec
pusha
cmp
mov
pop
ljmp
outsl
xlat
fimull
xchg
mov
cmp
popf
push
stos
shl
addr16
mov
fisubl
add
cmp
aas
decb
adc
xchg
jnp
and
jge
cmpsl
pushl
mov
or
mov
cmc
filds
adc
sub
push
jl
or
jmp
gs
stc
inc
push
popa
mov
jp
es
int
adc
inc
cmc
int3
insb
in
push
ret
dec
dec
test
cmpsl
loopne
movsb
mov
sub
sarl
in
mov
pusha
fldl
jo
andb
jnp
or
addr16
and
or
add
cmc
rcll
and
xchg
sbb
shll
cmc
and
icebp
mov
jle
xorl
xor
das
sub
addr16
sub
push
mov
inc
inc
cmp
leave
pop
repz
mov
jo
dec
test
add
xchg
dec
js
test
aam
insl
pop
ljmp
orl
dec
xchg
loopne
scas
push
xlat
dec
push
mull
xchg
add
mov
xor
enter
pop
fwait
and
ss
aam
jnp
test
sbb
mov
mov
int
sub
fisttpl
jne
test
shl
sbb
xlat
out
mov
aaa
int3
inc
adc
rcl
or
push
or
das
mov
xchg
mov
mov
clc
cmp
loope
or
das
std
or
movsb
out
js
popl
test
lods
insb
xchg
or
add
or
dec
int
inc
pop
or
sbb
pop
xchg
icebp
and
cmp
fmull
push
das
xchg
xorb
and
rorl
and
repz
mov
stc
pushf
jne
mov
fcmovnb
add
cmc
into
sarb
fisttpl
dec
or
xchg
aam
dec
push
jl
mov
mov
outsb
arpl
sub
cmpsl
sbb
mov
imul
jne
mov
push
jnp
xchg
xchg
and
nop
jo
pushl
jge
pop
cwtl
push
mov
out
xchg
js
in
cli
push
sbb
sbbl
or
jmp
pusha
cmp
sub
pop
jne
pop
das
fsubrp
adc
test
hlt
mov
inc
mov
es
nop
cmp
and
mov
push
add
ljmp
into
lea
adc
mov
mov
mov
out
adcl
aam
mov
or
jmp
and
dec
or
cs
int
xchg
idivl
rclb
cmp
mov
or
in
pop
pop
adcl
cs
nop
filds
and
sbb
push
mov
call
push
jg
repnz
or
inc
mov
scas
add
jmp
stc
xchg
inc
mov
subb
mov
sbb
lret
adc
dec
out
or
adc
jae
xchg
mov
mov
mov
and
jge
icebp
adc
or
scas
push
sub
test
add
sahf
jmp
ret
scas
pavgb
xor
cmp
sti
mov
adc
cmp
aam
out
cmc
pop
in
jae
dec
aad
pop
popa
popf
push
inc
flds
mov
cli
inc
out
aas
or
jp
movb
aam
into
cmc
sbb
inc
cwtl
jmp
sub
loope
sub
std
xchg
aas
and
lods
mov
sar
lret
mov
xchg
popa
mov
call
pop
xchg
inc
mov
shll
push
int
fildll
mov
test
scas
adc
hlt
lds
stos
mov
int
pop
test
inc
sub
mov
scas
inc
outsb
cmpsl
sub
cmpsl
push
aad
jns
cmp
outsl
int
cmp
sbb
adc
test
aad
js
add
inc
cmpsl
push
sbb
inc
lods
movsb
sbb
rep
rol
rorl
lret
jae
mov
lods
popa
and
cmp
lret
cmp
imul
mov
add
js
or
cltd
jle
enter
popa
add
imul
pushf
stos
out
xchg
dec
sbb
mov
jns
dec
push
mov
jns
ljmp
push
test
cmp
lcall
xchg
fidivrl
shr
dec
dec
pusha
push
call
or
loop
sub
dec
cmpsb
out
jne
push
adc
xchg
push
mov
imul
dec
cmp
mov
sub
jmp
dec
popa
shl
add
sarl
mov
fstpt
mov
adc
aad
call
jae
js
addl
shlb
sti
stc
loop
aaa
outsl
shll
mov
stos
pusha
or
aad
xor
cmp
lahf
scas
clc
xor
inc
push
fwait
sbb
test
xchg
stos
adc
test
push
test
lahf
mov
push
pop
push
or
lods
xor
sbb
loopne
aad
scas
popa
insb
jns
and
dec
jecxz
mov
add
jge
dec
ss
mov
lock
mov
xchg
stc
mov
pop
outsb
incl
jl
xchg
inc
nop
fdivs
iret
push
cmp
lock
dec
xor
loop
movsb
push
cmp
mov
fiaddl
mov
mov
sbb
es
movsl
out
loope
mov
addl
cmp
rcrb
lahf
aad
or
xchg
push
jne
add
push
mov
add
cmp
aad
inc
dec
es
cwtl
mov
xchg
inc
xchg
cmp
out
imul
and
mov
xor
or
test
push
cmp
shll
nop
aas
stc
sub
loope
pop
repz
mov
pusha
push
jns
data16
dec
pop
pushf
adc
xor
popf
adc
shll
sbb
adc
xchg
cli
adc
cs
cld
cltd
stc
pop
jge
sbb
cmp
nop
fisttpll
add
sub
adc
dec
dec
lcall
sti
in
lock
cmp
ret
pop
notb
jmp
sahf
pop
pop
es
mov
int3
adc
arpl
sbb
add
dec
aad
sbb
cmp
xchg
xor
rcrl
lock
or
push
cmpsl
aad
push
and
inc
data16
push
bound
das
mov
pop
inc
xchg
sub
call
sub
jecxz
and
std
mov
sahf
mov
hlt
sbb
daa
mov
in
fptan
stos
iret
and
loope
cmp
scas
push
inc
push
cmp
imul
ss
enter
das
push
jnp
mov
and
sub
push
inc
sub
outsl
mov
aad
fcomps
test
cmc
mov
push
adc
push
mov
mov
sti
cmp
mov
pop
popa
divl
pop
cltd
add
ss
test
cmp
data16
mov
and
and
jl
shll
ret
cmp
in
scas
in
push
int3
push
pop
mov
push
daa
fisttpll
mov
dec
movd
cmp
or
cltd
dec
jo
das
jge
out
mov
sbb
frstor
push
data16
bound
imul
dec
mulb
pop
jmp
mov
xor
jnp
adc
nop
jmp
add
jl
mov
mov
int
hlt
pop
xor
push
int
sbb
jnp
lods
fstl
stc
mov
stos
mov
dec
scas
adc
or
cmp
xchg
lock
cli
dec
xchg
push
xchg
sub
repz
lods
bound
movsl
mov
rorl
imul
xchg
push
adc
dec
imul
lret
pop
push
xor
jo
and
arpl
int3
mov
outsb
icebp
push
xchg
pop
test
xor
inc
sti
fdiv
dec
aad
adc
daa
scas
xchg
xlat
pop
adc
clc
pop
or
cmp
sti
andl
fchs
push
or
mov
out
out
jmp
mov
popa
push
mov
call
sbb
aaa
fistpll
mov
jae
iret
popl
mov
pop
pop
pop
jp
xchg
mov
das
lret
stc
in
es
loope
outsl
cmp
std
push
mov
cmp
sar
imul
cmp
out
lods
xor
lret
idivl
push
cmc
fdivl
notl
fsubl
sub
lret
xchg
popa
xchg
adc
ljmp
out
call
lret
nop
push
sbb
int
adc
mov
fwait
hlt
int
bound
pop
mov
jb
int
sbb
mov
movsb
mov
sub
dec
push
sbb
cmp
add
fcmovnbe
jge
pusha
mov
seta
ficoml
jbe
mov
sti
cmp
fnstcw
movsb
jg
jo
adc
jae
xchg
aaa
xor
repnz
pop
scas
pmullw
xchg
into
adc
xor
mov
mov
jae
push
hlt
add
mov
and
xor
or
fcmovu
mov
sub
fisubrl
pusha
daa
scas
and
and
adcb
cmc
fs
jg
fiaddl
sub
or
roll
in
lea
pop
xlat
nop
mov
mov
mov
cli
stos
mov
iret
cmpsl
lret
adc
mov
popl
sbb
mov
xchg
cltd
aas
xchg
and
jbe
popa
mov
cmp
out
pmaddwd
pop
inc
xchg
mov
xor
divl
push
sbb
inc
dec
pop
jbe
push
jnp
push
xchg
test
pop
cli
or
aad
pop
add
push
xor
lea
cld
enter
xchg
jl
mov
dec
mov
sub
jmp
cmc
cmpsb
cmp
pop
aad
add
jmp
xchg
mov
push
mov
into
shll
xor
ljmp
mov
pop
mov
xor
gs
pop
sbb
mov
cmp
pmaddwd
pusha
call
jb
pop
les
fcomi
fsubrs
pusha
cmp
ret
into
pop
mov
jb
add
scas
in
ret
clc
pusha
pop
inc
pop
jle
cmp
fidivrl
sub
dec
or
mov
push
in
push
or
stc
popa
in
pop
dec
in
mov
mov
addr16
cmpsb
inc
push
pop
fcoml
dec
into
aad
hlt
sarl
jnp
dec
jp
inc
sbb
inc
add
insl
sub
das
sbb
xchg
jp
xor
lods
cli
in
mov
leave
xchg
mov
out
lods
aad
mov
imull
gs
ljmp
push
jne
sub
into
jle
rcrb
je
mov
xchg
aam
sub
push
sahf
jl
add
outsl
cmp
and
negl
daa
xchg
mov
pop
jmp
scas
lret
int
cld
adc
xchg
cwtl
insl
dec
stos
xchg
or
and
in
cmp
add
out
mov
mov
out
enter
loopne
mov
mov
out
jmp
mov
inc
leave
mov
push
add
lret
out
rolb
mov
call
repz
loop
jg
jg
iret
push
adc
adc
fidivs
and
hlt
push
sub
leave
stc
cmp
mov
xchg
ja
jo
int
pop
xchg
orl
ja
stos
data16
cmp
jo
outsl
cmp
xchg
adc
xchg
andb
out
stc
jmp
cmpsl
ja
mov
or
lods
sbb
jmp
sbb
adc
or
xor
sub
dec
add
loope
mov
out
push
jne
xchg
push
mov
jp
pop
fmulp
pop
xor
mov
push
pop
btc
popa
sub
xor
push
cmp
mov
xchg
jnp
je
mov
push
scas
out
push
arpl
add
adc
or
push
in
or
and
mov
xchg
fcomps
push
popf
mov
cmc
repz
dec
inc
movsb
jp
cmp
mov
je
jo
aad
mov
mov
loope
add
lods
sub
in
pop
pop
cld
mov
xor
or
push
pop
or
sub
out
aam
and
sbb
add
mov
and
pop
sbb
pop
jmp
mov
notl
std
cli
adc
inc
cmp
jle
xor
addr16
pop
jo
xrelease
cmc
gs
sbb
inc
mov
repnz
movl
jmp
cmc
xor
push
push
pusha
cmp
sub
not
or
mov
int
icebp
jnp
cmp
out
out
xor
test
in
or
jo
int
xchg
inc
push
xor
inc
lods
loope
fs
into
ja
arpl
in
jmp
jl
jnp
loop
jecxz
jp
dec
or
cmc
jns
jg
movsb
sbbb
mov
stos
jecxz
cmc
imul
mov
or
popf
loop
repz
leave
and
xchg
aad
jge
gs
inc
pop
or
or
mov
cmc
mov
lock
cltd
push
cmc
fwait
and
inc
in
shrl
xor
cmp
cwtl
cmc
out
imul
xor
jo
xchg
pop
outsl
inc
sqrtps
cmc
call
out
sbb
movsb
shll
lods
inc
xchg
ja
mov
hlt
mov
in
rcrl
cs
dec
lds
inc
jb
pop
clc
bswap
push
mov
xchg
sub
es
mov
int
sarb
jnp
sub
mov
js
cld
sti
jnp
jo
loope
mov
int
jg
addb
rol
pop
cmpsl
ja
mov
clc
mov
fdivl
pop
xchg
mov
inc
and
mov
das
cmp
dec
jbe
sbb
aad
test
adc
andl
or
fwait
mov
insb
dec
xchg
addr16
gs
cmp
mov
fistps
jne
addr16
out
cmc
add
test
xor
repz
jl
xchg
xor
fwait
jmp
mov
les
out
add
std
pop
jo
std
and
mov
repz
scas
inc
push
sub
negl
mov
aad
in
mov
or
xor
fisubs
movsl
clc
outsl
lods
mov
push
outsl
or
sti
push
cs
aad
mov
addr16
orb
outsb
sarl
pushf
loopne
jge
cmpsl
jmp
mov
lock
mov
scas
stc
loope
xchg
sbb
or
cmp
pop
mov
lret
adcl
mov
jecxz
and
loope
dec
shll
scas
repz
jg
dec
xchg
pushf
movsl
jg
jnp
mov
aad
dec
inc
and
dec
rcrb
adc
xor
fwait
sti
lcall
rorb
jp
rolb
in
adc
and
int3
sub
inc
in
bnd
scas
xchg
sub
aaa
fstp
dec
sub
sarb
jnp
xchg
xor
cmp
aad
cmc
dec
std
xchg
pop
jnp
xor
out
js
inc
push
cmp
jnp
xchg
and
or
mov
popf
es
popf
pushf
in
add
daa
and
setp
cwtl
push
cmp
test
sbb
adc
into
scas
or
shl
aam
or
aad
push
xchg
shlb
addr16
xor
in
roll
xchg
and
adc
enter
outsl
xor
int
dec
jmp
negb
push
xchg
jbe
sub
sti
les
sbbl
mov
movsb
xor
mov
push
gs
push
push
mov
add
addr16
sbb
subb
movsb
rol
mov
or
cmp
fmull
pop
std
mov
mov
iret
sub
sbb
mov
inc
dec
dec
xor
jnp,pn
ds
lock
jp
and
nop
bswap
aad
es
ret
xchg
xchg
xor
popf
xchg
pop
mov
push
push
cmc
push
mov
adc
out
cli
push
fimull
int
dec
aas
mov
xor
and
pop
popa
lods
in
or
mov
dec
rcrb
cmpl
inc
dec
jle
int
cmp
add
mov
pop
fwait
adc
popa
sbb
lods
or
repnz
cmpsb
test
lods
aad
movsb
cmpsl
imul
mov
sbb
pop
cld
push
pop
gs
scas
jmp
arpl
sub
test
dec
mov
ljmp
jg
mov
jno
mov
sub
test
mov
shrb
lock
leave
fsubl
mov
xor
push
dec
pop
jmp
int
int
sbb
mov
xor
sar
xchg
sbb
fistps
xchg
push
xchg
arpl
mov
outsl
mov
mov
cmp
cli
sahf
push
mov
add
push
cmp
je
sbb
adc
fst
test
jns
push
or
in
mov
add
jl
mov
int
cmc
dec
clc
pop
mov
mov
dec
mov
pop
push
jp
dec
lock
jne
push
cltd
push
in
insl
ljmp
ret
xor
shr
jmp
push
outsl
lcall
push
xchg
in
and
xchg
in
lahf
test
xchg
sbb
fisttps
nop
leave
sbb
sti
and
add
inc
mov
decb
sbbl
sub
loope
iret
jmp
mov
push
inc
or
jns
mov
in
lret
mov
notl
popa
mov
sti
jmp
xchg
scas
push
mov
mov
pop
cmp
sub
arpl
outsl
mov
mov
insl
leave
cmpsl
imul
adc
xchg
cmpb
lret
push
icebp
and
mov
sbb
shll
dec
push
aaa
jns
jb
mov
or
xorps
dec
mul
popa
into
xchg
mov
rcr
in
add
push
cmp
ss
ja
ljmp
decl
jb
cmp
out
into
fwait
aaa
aad
dec
jnp
movsb
jae
xchg
not
repz
dec
dec
enter
bound
pop
icebp
ret
xor
push
cmp
xchg
and
push
push
std
cmc
add
cwtl
xchg
rcrb
bnd
repnz
dec
pop
popf
aad
stos
push
mov
imul
std
cmpsl
or
sub
add
sub
lods
and
int
mov
jnp
out
inc
imulb
pusha
pop
in
rorb
cmc
imul
cmp
jecxz
and
xchg
or
mov
jo
aaa
fucom
push
mov
imul
xchg
insl
std
cmp
mov
sbb
iret
cmc
movb
lock
movsb
imul
imul
int
mov
sahf
int
imul
mov
pusha
ja
adc
addr16
cmpsl
jle
dec
inc
xor
in
call
ret
adc
loopne
int3
lds
cmc
fs
pop
xchg
mull
ret
or
faddl
inc
jmp
and
les
mov
shrb
mov
xchg
mov
cmp
jle
xor
dec
shll
sbb
inc
pop
shlb
arpl
aaa
jmp
xor
sahf
daa
dec
stc
mov
fs
jns
roll
sub
dec
or
sub
mov
pushf
mov
jl
fs
inc
in
sti
lods
leave
or
jmp
and
idiv
sub
lcall
sbb
sub
sbb
sahf
add
push
sbbb
in
or
inc
cmpb
mov
pop
xor
jg
out
xchg
sbb
fsubl
and
ljmp
cli
mov
xchg
int
in
dec
pop
sti
jnp
mov
add
jmp
jecxz
in
rolb
leave
mov
jecxz
mov
test
int3
cmc
fildll
cltd
ss
in
xchg
mov
jno
shlb
sbb
inc
xchg
stc
movl
mov
pop
outsb
out
push
xchg
inc
dec
repnz
dec
mov
sarb
rorb
sbb
mov
pop
dec
push
xor
cmp
or
xor
lods
es
repz
fcompl
jns
in
out
adc
xchg
adc
imul
mov
push
cmp
xchg
into
push
lcall
stos
push
mov
nop
mov
hlt
mul
add
into
xchg
js
mov
mov
and
rorl
inc
ljmp
cmp
and
int
popa
mov
into
xchg
mov
daa
mov
xchg
cmc
jno
push
cmp
cmp
add
sbb
pop
pop
cmc
out
or
sbb
mov
jmp
clc
mov
sub
xchg
inc
mov
bound
and
sti
fstps
push
lahf
aad
in
pop
fmull
scas
cli
push
clc
pop
fiaddl
popa
mov
fldl
stos
mov
nop
cwtl
filds
fisubs
mov
pop
cmp
inc
or
sbb
ja
repz
out
cmp
xchg
sarl
add
xchg
push
sbb
lret
jecxz
pusha
or
jmp
add
fucomp
loope
mov
dec
mov
inc
add
mov
aad
pop
fwait
scas
mov
bnd
dec
xor
mov
mov
cmpsb
cli
inc
imul
and
fiaddl
sarl
enter
lock
decl
sub
mov
and
aaa
jecxz
lods
jmp
sub
jnp
pushf
mov
dec
mov
div
dec
outsl
imul
outsl
sub
cmp
mov
fcmovnu
push
aas
sar
cltd
mov
call
pop
mov
pop
movsl
cli
les
mov
stc
dec
shrl
adc
and
cmp
call
js
in
add
imul
sbb
push
arpl
xchg
shl
test
popa
or
cmp
fdivrs
jmp
test
sbb
std
pop
fyl2xp1
orb
push
pop
jge
xchg
add
out
les
dec
gs
fsubr
push
mull
add
xor
jp
dec
mov
pop
fwait
pop
pusha
xchg
cmp
pop
jecxz
mov
out
jle
fidivs
test
orb
jl
push
and
shrb
jbe
cmp
pushf
inc
sub
lcall
notl
cmp
cmp
rorb
jge
testl
fsub
add
xchg
jecxz
dec
mov
lahf
adc
cmpsl
jno
or
sub
push
add
jb
ja
fs
int3
or
pop
ficompl
sbb
shlb
adc
jecxz
fisttps
mov
jnp
arpl
adc
dec
mov
dec
or
fcmovnbe
inc
mov
into
xchg
push
ret
add
call
mov
cmpb
sub
push
cvtps2pi
jp
push
cmp
cmp
ja
add
mov
mov
sti
test
sub
push
xchg
push
xchg
push
aad
rorl
push
ja
stc
xor
mov
or
aad
cmp
adc
test
push
xor
mov
push
mov
push
jne
mov
mov
jecxz
lds
pop
loope
jns
lahf
pusha
out
outsl
shr
and
gs
xor
add
push
mull
mov
mov
inc
and
idiv
dec
lcall
mov
les
xchg
pop
je
filds
cmp
repnz
test
xor
mov
sbb
addr16
adc
cmc
mov
les
adc
mov
push
shll
inc
sti
test
jg
into
outsl
xchg
or
sub
popf
adc
aaa
fmuls
or
add
dec
and
pop
sub
mov
pop
cmc
sbb
mov
jle
std
mov
sub
orl
out
push
mov
push
lods
adc
aam
nop
xor
pop
pop
popf
mov
mov
mov
stc
pop
or
pusha
imul
btr
in
lret
loope
std
orb
nop
sub
cmc
fildll
rorb
xchg
lock
repnz
int3
xchg
push
adc
cmc
jnp
cmc
fidivrl
mov
das
dec
xchg
mov
dec
dec
cwtl
jae
sbb
es
or
inc
fs
xchg
mov
fisubrl
xchg
and
out
ljmp
leave
mov
xor
dec
out
cmpsb
arpl
test
mov
shrb
sbb
mov
push
cmp
jmp
sti
xchg
mov
in
jns
push
ljmp
testl
dec
or
scas
push
or
jnp
lock
sahf
jle
xchg
push
in
push
cmc
in
mov
sbb
mov
xchg
xor
inc
ficomps
xchg
mov
daa
add
mov
push
jg
sbb
cmp
in
cmp
andl
mov
add
dec
and
adc
int3
das
rorb
lret
push
out
xchg
stos
lods
xor
int
sahf
xor
add
inc
sbb
mov
ret
push
daa
roll
loopne
imul
push
loope
aad
scas
dec
push
mov
data16
and
stc
rolb
out
mov
sub
ljmp
mov
lahf
mov
pusha
fimull
ret
dec
inc
push
mov
leave
fisttpl
cmp
bound
mov
mov
insb
testb
rorl
test
inc
or
mov
int
out
loop
fisubs
mov
mov
fnsave
je
les
aad
xlat
mov
dec
mov
jecxz
add
sub
lcall
stc
xor
ds
jge
stos
jbe
shlb
ja
jb
sti
xchg
jns
xchg
dec
cmp
test
mov
test
popa
mov
jp
outsb
in
push
sub
xor
mulb
hlt
inc
test
xorl
popf
inc
cmpsl
std
xchg
iret
xor
xchg
lret
les
mov
test
add
or
cmp
dec
ljmp
mov
mov
bound
popa
mov
jp
jno,pt
mov
mov
mov
jne
cltd
add
or
push
pushf
pusha
jge
jb
js
out
ret
filds
jle
outsl
ja
cmp
pop
stc
cmc
push
std
nop
jecxz
es
xchg
addr16
shlb
not
fwait
mov
int3
lock
adc
orl
enter
jae
xor
pusha
push
mov
pop
push
add
cwtl
jg
idivl
cld
popf
idivb
clc
mov
dec
rcr
cmp
sti
mov
stos
pop
sbb
test
test
xor
movsl
mov
add
ficomps
rorb
xor
mov
jbe
sysenter
mov
inc
mov
jmp
in
imul
es
into
cmc
movsl
fldenv
mov
xchg
stos
dec
dec
sub
fildl
or
les
jmp
mov
lcall
cld
cmc
pop
mov
pop
ret
movsb
in
pop
scas
mov
mov
xor
xchg
inc
imul
mov
and
jmp
mov
adc
push
add
fldln2
sbb
and
aad
arpl
adc
repnz
ds
lahf
mov
mov
in
in
insl
or
jg
push
fisttpll
or
adc
lahf
or
leave
sub
push
daa
inc
imul
pop
js
out
push
and
std
pop
test
orl
mov
dec
add
movsl
jl
ljmp
int
pop
adc
nop
shrb
add
lahf
mov
xchg
stos
xor
cmpsl
aad
test
into
cmp
push
lahf
paddusb
sub
imul
stos
lock
jae
xchg
int3
push
rcl
sub
push
inc
mov
fwait
pushf
out
aad
jge
popf
or
push
jge
and
adc
out
mov
dec
jp
cltd
sahf
jp
stc
xchg
sbb
push
shll
sub
sahf
mov
or
jecxz
ret
pop
adc
fistpll
cmpsl
lea
mov
adc
add
fwait
push
dec
lahf
loope
mov
sbb
push
mov
adcl
setne
sarb
xlat
cmp
or
lret
xchg
subb
sub
push
cld
pop
mov
sub
stc
push
test
or
xchg
cmp
dec
mov
pusha
push
sub
pop
adc
push
cmc
jno
inc
sbb
cwtl
outsl
dec
dec
mov
aam
lods
call
mov
sub
pop
dec
cli
cmp
rcrl
dec
adc
fs
or
mov
cld
movsb
dec
jmp
jns
aam
and
pop
aad
cmpsl
mov
aas
ljmp
sub
push
adc
dec
fs
idivl
test
push
in
push
mov
xlat
cmp
cmp
or
or
dec
mov
cmovno
test
inc
or
mov
adc
das
into
scas
push
aad
hlt
pusha
out
add
push
lods
popa
sbb
adc
test
or
cmpsb
ljmp
fadd
xor
in
add
repz
ficompl
imul
ret
adc
das
or
int3
cmovb
loop
dec
add
pop
ret
mov
dec
pop
popa
data16
xor
push
pop
xchg
add
jns
pop
adc
icebp
int3
mov
jbe
dec
addl
push
fimuls
jmp
in
nop
aas
jno
rorb
xchg
clc
ss
mov
int
or
mov
add
pop
push
outsb
cmpl
inc
cmc
pushf
jbe
sbb
dec
add
shl
shrl
jnp
xchg
fwait
or
fistl
mov
fsubl
call
loope
and
add
sub
test
mov
pop
push
in
int3
mov
cmp
push
movl
add
pop
imul
lahf
dec
dec
je
jmp
jns
movsl
inc
or
aaa
xorb
int
cmp
ror
or
mov
sbb
xchg
sarb
mov
pop
sbb
push
inc
mov
test
jge
mov
push
xor
std
mov
pusha
leave
xor
jno
loop
bound
mov
mov
add
xchg
ds
mov
sbb
icebp
push
inc
mov
stos
mov
shrl
test
imul
aam
dec
aad
mov
es
shl
jns
adc
arpl
sti
cmp
and
push
xchg
sbb
xchg
mov
sarl
aas
leave
lods
dec
imul
out
mov
ds
rorb
neg
push
lods
add
sbb
int
or
popa
cmpsb
sbb
fimuls
or
adc
sbb
jl
cmpsl
dec
mov
xor
push
dec
int
js
inc
push
test
stc
xchg
js
and
mov
jp
adc
dec
xchg
sub
testb
pop
fsubl
xchg
pop
imul
sti
xchg
xchg
jge
add
out
call
in
jmp
cld
cmp
gs
inc
mov
and
dec
scas
xchg
in
nop
call
loop
in
mov
lea
lock
fadds
dec
push
pop
and
sbb
or
aam
lcall
into
lcall
mov
or
and
ja
inc
jno
test
or
andl
cmpsl
mov
adc
mov
pushl
imul
fidivrs
call
ja
fstl
xor
stc
dec
sbb
push
push
dec
or
cli
xchg
add
cmc
call
pop
pop
ficoml
jp
adc
push
mov
pop
pop
pusha
outsb
cmp
jle
leave
xchg
imul
outsl
das
flds
pop
mov
movsb
out
and
fwait
and
mov
hlt
mov
rcrl
inc
int
nop
idiv
movsl
xchg
filds
cmc
xchg
fwait
pushf
inc
stos
pop
int
mov
imul
ja
loopne
mov
xlat
xchg
rclb
cli
cli
mov
je
scas
dec
outsl
scas
inc
test
add
movsl
ljmp
scas
or
ss
xor
pusha
ret
pop
push
les
dec
or
push
aad
sbb
test
push
adc
inc
add
int3
dec
xchg
js
aam
js
adc
stos
fisttps
nop
push
ja
mov
adc
loope
pop
aam
or
mov
sbb
dec
cs
sahf
push
fisttps
dec
sar
repz
out
cs
shr
mov
xchg
jo
jns
xchg
sbb
ja
into
idiv
rcrl
out
inc
or
jnp
jno
sbb
push
dec
and
cmpsb
bswap
sub
stos
stos
sbb
sahf
push
mov
sub
and
mov
sbb
and
pop
popf
xor
sub
add
mov
xchg
sbb
data16
cmp
daa
out
subl
jg
roll
pmaddwd
movsl
daa
sbb
dec
xchg
outsl
cmpsl
fcompl
addr16
imul
dec
jns
stos
xchg
push
jg
les
mov
lret
inc
push
mov
loop
or
fimull
jae
xchg
push
stos
adc
cmp
rorb
loopne
aad
mov
xchg
and
mov
test
stos
hlt
test
jo
mov
fsub
lret
adc
xchg
xchg
mov
dec
fldt
dec
aad
into
xor
mov
jns
xor
call
push
cld
jnp
fsubr
movb
fcomip
cmpsl
mov
push
jo
jo
add
xor
push
lcall
int3
or
mov
add
jp
shlb
dec
jns
mov
arpl
xchg
es
pushf
test
cwtl
inc
push
sarb
jne
test
cltd
shll
sbb
cmpsb
iret
mov
push
jp
imul
inc
add
dec
rorl
mov
dec
cltd
cmpsl
mov
pop
popf
movups
jl
mov
xor
call
dec
xchg
shl
orb
mov
and
addr16
mov
pop
in
xchg
dec
mov
pop
enter
loope
inc
sti
cmp
dec
or
dec
std
sub
mov
jl
xchg
popf
jmp
jo
in
mov
pushl
pop
xchg
or
aas
jb
xchg
cmp
sbb
push
jl
arpl
push
lock
dec
call
push
sbb
pop
cmp
jp
int
cmp
inc
mov
gs
loop
or
mov
call
mov
jns
pop
jo,pt
pop
sub
sbb
test
call
mull
inc
xor
or
iret
mov
mov
cli
and
and
and
add
xacquire
jbe
js
aam
sbb
enter
mov
xor
cmp
icebp
xchg
pop
je
shl
emms
in
int
outsl
dec
mov
or
nop
or
fs
lods
sub
and
add
in
cltd
pop
add
adc
adc
call
mov
xor
enter
lock
lea
cmovl
cmp
push
xor
dec
mov
mov
push
pop
shlb
leave
lods
adc
mov
adc
sbb
loopne
add
mov
lods
jmp
sub
cli
cmc
rcrl
xchg
pusha
sub
imulb
dec
insl
mov
jmp
test
cld
xchg
dec
xchg
or
addr16
lea
and
pop
lods
add
xchg
inc
and
mov
jg
nop
xchg
sbb
xchg
mov
mov
lahf
scas
ja
push
scas
icebp
std
dec
das
xchg
mov
pushf
and
xchg
scas
jmp
xchg
test
jne
inc
insl
movsb
out
aad
lods
and
and
cltd
cmp
rcll
insb
int3
sbbl
lods
sti
popf
pop
adcl
pop
cmpsl
aas
popa
iret
jge
push
fucomp
sub
loopne
scas
aad
rorl
xor
dec
pop
jp
and
xchg
test
call
insb
loopne
out
jmp
setge
dec
jge
int
aad
lods
lahf
imul
xlat
adc
add
imul
add
push
mov
in
dec
push
mov
test
jle
faddl
test
sub
pushf
cmc
ss
into
not
stos
pop
fistpll
cmc
push
pop
inc
inc
jae
push
out
dec
daa
or
or
mov
subb
pop
mov
sub
decb
mov
add
adc
pusha
imul
sbb
test
mov
adcl
add
add
in
xor
enter
stc
jecxz
mov
mov
or
scas
mov
nop
in
scas
jmp
in
dec
int
ficompl
int
ja
or
sbb
xor
adc
push
mov
add
outsl
dec
aad
repz
icebp
cmp
inc
pop
add
pop
mov
mov
ficompl
ret
lret
jo
push
or
mov
add
xor
add
pop
inc
jmp
or
push
or
cmp
icebp
mov
jo
lcall
fistpll
dec
xchg
dec
jge
adc
cmp
popf
nop
mov
cmpsb
sahf
sbb
int
lret
cmpsl
js
lret
sub
or
test
frstor
push
sbb
mov
jmp
loopne
jl
out
aam
mov
mov
mov
mov
nop
jbe
push
lods
push
or
xlat
inc
pusha
adc
push
inc
lods
pop
mov
notb
incb
mov
fildll
fildl
popf
shl
movsl
aaa
push
and
ficoml
jno
add
or
dec
mov
shlb
sub
outsl
aad
mov
stos
jae
mov
andl
jl
dec
mov
fcomp
mov
cmp
and
inc
push
fdiv
lds
dec
add
nop
hlt
cmp
lock
loope
leave
or
pop
js
sarb
sti
or
cmp
js
xor
mov
nop
testb
imul
fs
or
pop
fistps
nop
and
add
rcrb
pop
lahf
pop
insl
pushf
jne
mov
in
push
in
mov
mov
in
add
cmp
shld
mov
push
jge
mov
xchg
push
jg
fwait
jb
sbb
imul
sahf
jmp
iret
test
inc
loop
insl
js
es
jns
das
push
mov
push
lcall
sti
aad
das
aad
inc
cmp
fs
test
jmp
mov
pusha
adc
xchg
or
cmp
testl
fldt
add
imul
or
add
sub
xor
cld
mov
xorl
cmp
mov
jmp
xchg
loopne
jl
mov
in
pop
call
mov
lret
xor
test
std
pop
gs
fwait
mov
nop
mov
lods
out
jmp
enter
or
mov
pop
lcall
aad
xlat
pop
mov
into
test
scas
testb
add
sub
pop
sbb
not
fistps
cmp
fsubs
sahf
shr
out
add
cmp
dec
bound
aaa
dec
mov
cmpsl
fldt
jmp
push
or
or
inc
outsl
jl
fs
mov
in
jge
dec
xchg
cmp
sub
stos
sub
mov
enter
adc
mov
adc
in
sbb
gs
push
inc
bound
icebp
add
and
mov
std
pmullw
dec
loope
fisubrs
out
cmc
dec
or
xchg
aad
sbb
mov
out
pop
cmp
adc
into
pop
cmc
dec
mov
push
fnstcw
jmp
cmp
or
pop
fistps
mov
or
aaa
inc
aad
pop
and
jns
shlb
popf
mov
jmp
lret
test
mov
bound
mov
push
rcl
inc
rcpps
fists
lahf
cmc
adc
xchg
jmp
out
cmp
jcxz
mov
xchg
and
fwait
jmp
fmull
ss
loop
aad
jle
call
nop
adc
stc
stos
das
jae
push
cli
lods
mov
cmp
bnd
gs
push
cli
divb
aad
int3
loope
into
push
shlb
bswap
cmp
jg
push
lods
call
hlt
jecxz
mulb
jecxz
jmp
iret
addr16
cmovo
loope
pop
pusha
enter
dec
out
pop
scas
dec
into
clc
mov
lret
jl
out
ret
lret
xchg
js
cmp
cmpsb
dec
cmp
xchg
loop
push
inc
mov
movsb
and
iret
push
cmp
stc
aad
sub
pop
icebp
mov
cli
lret
js
and
dec
pop
adc
and
fisttpll
xchg
or
sbb
fs
xchg
pop
dec
push
shlb
add
jg
movlps
dec
mov
scas
scas
xor
out
lods
jns
push
mov
in
pop
add
scas
mov
xor
dec
push
xchg
jl
loope
lods
es
arpl
arpl
fnstcw
inc
add
and
ret
lret
out
das
aam
pop
int3
out
loop
movsl
ljmp
xchg
sub
lods
stos
imul
pop
cmpsb
jae
xchg
inc
inc
xchg
testb
cmp
shlb
cmp
fstps
inc
cmp
scas
int
jg
fdivs
push
fnstenv
or
call
jb
push
inc
rcll
xor
sbb
add
test
jb
js
dec
adc
dec
mov
adc
inc
stos
fimull
div
outsl
je
cmp
mov
mov
mov
pop
and
repz
out
mov
lea
test
out
enter
dec
out
dec
mov
adc
pop
add
pop
int3
and
and
lock
or
dec
xor
jp
fdivr
xchg
dec
push
lods
and
jecxz
cmp
cmc
sub
and
mov
cmp
lcall
lock
divb
popl
mov
das
pop
ljmp
test
cwtl
add
jmp
aad
or
mov
xor
adc
pop
adc
and
fdivrl
shll
mov
jbe
imul
lea
mov
xchg
aam
cs
push
in
mov
and
mov
inc
cmp
pop
test
push
addr16
int
mov
cld
stc
add
cltd
sahf
xor
aad
pop
mov
test
cmp
or
or
xchg
loopne
loopne
jns
mov
mov
out
inc
clc
adc
test
imul
std
fildll
scas
cli
shufps
adc
xchg
dec
dec
sub
inc
push
jg
insb
in
test
adc
int3
out
fs
out
lcall
ja
test
cmp
sbb
insl
lcall
jne
pop
leave
lret
div
pusha
shll
cmp
jb
lods
or
sahf
out
pop
pop
sub
inc
push
call
stc
fwait
xchg
int3
dec
cmp
insl
repz
sub
mov
int
xor
adc
loopne
or
and
xor
pop
dec
rolb
into
mov
xchg
dec
xlat
lret
nop
jg
lds
mov
push
push
into
pop
aad
out
mov
push
add
sub
jl
pusha
sub
jno
pop
xchg
xchg
sub
mov
xor
inc
sarl
mov
sti
dec
jns
bswap
loopne
pop
cmp
mov
fildl
mov
xchg
or
push
iret
in
jns
push
lret
xorb
mov
jns
in
xchg
popa
cmp
addr16
mov
cli
push
inc
mov
sbb
fwait
les
mov
cmp
or
je
sbb
xchg
mov
aad
test
dec
cmp
notl
sbb
cmp
mull
mov
pusha
jnp
cli
mov
push
sub
js
out
sahf
aad
mov
pxor
xor
mov
and
push
cmp
pop
lea
xor
loopne
andb
nopl
and
loope
adc
xchg
movb
test
mov
lods
imul
lahf
mov
aam
addr16
mov
jg
inc
shrb
fdivrl
les
mov
xor
inc
add
jns
sarb
jmp
sub
icebp
dec
stos
int
aad
js
imul
cmc
push
sahf
pop
out
out
mov
daa
xchg
cltd
inc
repz
push
insb
pop
inc
jbe
inc
push
scas
mov
cmp
dec
xchg
push
repnz
das
xor
stos
stos
leave
js
iret
std
ret
pop
out
push
test
pop
shr
in
mov
and
imul
mov
push
mov
pop
loopne
mov
jmp
movups
dec
add
insl
xchg
pmullw
xor
rol
pop
adc
bnd
loop
hlt
stos
sbb
adc
insb
mov
pop
popa
gs
setge
mov
out
cmpsb
jge
xchg
or
push
dec
loop
lahf
pop
decb
adc
gs
mov
nop
push
fwait
popa
dec
lret
cmp
ljmp
in
push
test
mov
int
or
aam
fmull
sti
jge
dec
cmp
out
icebp
nop
cmp
mov
sahf
mov
xor
enter
and
dec
push
and
insb
adcl
cmp
mov
xor
int
adc
shlb
movsb
mov
repz
sarl
sub
sbb
inc
inc
cld
xchg
dec
cmpsb
incl
orl
xchg
or
adc
outsb
xchg
sbb
call
cmp
into
cmp
lahf
push
push
sub
test
add
cli
jge
or
lds
add
sub
lret
je
xlat
jmp
bound
incb
jb
mov
cmc
pusha
jb
push
and
call
mov
das
sar
xor
jl
fadds
mov
xor
imul
mov
push
inc
inc
addr16
popa
cld
sbb
test
dec
in
lock
and
leave
add
out
adc
fsts
mov
cltd
jb
fdivrl
or
int
xor
popf
mov
mov
inc
pop
call
imul
jnp
push
jmp
imul
sbb
aad
cmp
fildll
aam
dec
cmc
int3
popf
push
xchg
lods
xchg
xlat
add
stos
adc
xchg
outsb
aad
rcrb
push
jle
mov
mov
dec
or
sub
fnstenv
push
cmpl
inc
or
inc
cmpxchg
jnp
mov
fldt
or
pusha
mov
pop
xchg
sub
push
mov
aad
mov
cmp
test
xchg
cmp
mov
xor
push
dec
jmp
xchg
loopne
out
sub
sub
adc
xchg
rcll
insl
jge
xor
add
sub
add
mov
mov
mov
loop
in
mov
mull
fstps
sahf
dec
cmp
pop
sub
cmpsb
mov
push
push
sbb
inc
movsl
pop
cli
rcrl
sahf
pushf
lock
es
psraw
sub
xchg
iret
pop
jmp
jmp
sbb
push
mov
cli
loope
out
mov
dec
arpl
popf
pop
test
and
loop
subb
pop
inc
outsl
dec
push
rorb
dec
mov
test
scas
orl
inc
mov
cltd
iret
or
lock
mov
test
scas
fimull
sub
test
push
call
stc
daa
sbb
cmc
mov
loope
scas
mov
jnp
lods
push
aad
jmp
popl
cmp
jns
add
xchg
jmp
adc
jge
push
sub
cmpsl
xchg
std
cwtl
jb
inc
push
in
push
dec
loopne
inc
mov
into
push
adc
mov
outsl
push
sbb
mov
and
out
lock
dec
jae
cli
lds
repz
xchg
jge
mov
add
mov
sub
mov
pop
jg
daa
mov
stc
sbb
test
out
push
iret
xchg
iret
inc
das
jl
test
or
cld
pop
sbb
cmp
mov
movsb
aad
mov
xor
or
mov
insb
or
loopne
or
test
and
jmp
leave
pushf
mov
xchg
mov
add
mov
cmp
sarl
inc
daa
xchg
lods
mov
mov
or
xor
idivl
inc
int
hlt
jp
push
stc
mull
rolb
push
sub
push
inc
or
into
out
imul
mov
rorl
and
mov
sub
inc
pop
loopne
pop
aad
test
dec
arpl
dec
jle
jns
loope
fisttpl
cmc
fldt
pop
insb
inc
xchg
inc
aas
cwtl
jmp
jp
aas
dec
pop
dec
mov
out
stos
mov
shr
repz
jmp
loop
and
mov
mov
jmp
shlb
cld
dec
mov
jecxz
cmp
push
xchg
lock
out
cmp
bound
mov
push
mov
xchg
and
mov
cltd
cmp
adc
mov
ss
stos
in
into
mov
scas
adc
arpl
and
repz
fnstcw
negb
xchg
adc
mov
xchg
mov
sbb
icebp
mov
fldt
push
mov
cmpsl
jecxz
push
jo
cmpb
jns
xor
or
mov
fidivs
sbb
mov
mov
ljmp
pop
xor
jge
cs
repnz
fwait
movd
inc
lds
push
or
cmp
push
or
adc
cmc
push
lock
imul
mov
sub
pop
mov
adc
into
scas
addr16
inc
jb
aad
jg
movsl
mov
cmpsb
lods
fisttpll
ljmp
pusha
dec
das
dec
scas
xchg
bound
push
cmc
xchg
mov
pop
shr
push
fsubr
arpl
dec
and
cmp
cld
mov
pop
fcmovne
aad
mov
jae
mov
mov
mov
jmp
xchg
inc
adc
out
or
adc
mov
mov
inc
mov
aas
in
dec
push
fs
in
add
xor
scas
jno
adc
or
mov
in
pop
outsl
and
ljmp
sub
fcomps
sbb
lea
jnp
inc
es
add
mov
popa
fyl2x
sbb
inc
add
fs
mov
popa
push
addr16
mov
mov
dec
dec
popf
pop
ficoml
xorl
loope
lcall
pop
hlt
lret
sbb
mov
mov
mov
cmc
dec
mov
mov
leave
int
lds
nop
jle
int
xchg
scas
xorl
rorb
cmpsb
xlat
mov
pusha
xchg
xor
push
push
adc
add
outsl
insl
hlt
jno
mov
dec
push
dec
xor
loop
jne
addl
call
dec
and
mov
pop
mov
daa
xor
push
pushf
pop
xor
add
jge
fisttpl
push
xchg
aad
call
or
mov
dec
js
push
sbb
popf
cmp
mov
jmp
cmp
cmp
mov
test
or
adcl
xchg
xor
cmpsl
lahf
aad
inc
gs
mov
les
xor
lods
adc
push
mov
in
pop
pop
out
fstpl
int
add
mov
mov
iret
sub
or
cmpsb
insl
les
mov
adc
std
cmp
jg
test
pop
jl
gs
sbb
rolb
bound
jecxz
cmpsb
inc
fs
xchg
les
or
sbb
xor
fsts
add
jge
fisubrs
push
mov
in
ljmp
mov
and
inc
gs
test
imul
mov
dec
jno
adc
call
pmaddwd
insb
jae
lahf
in
xchg
xor
sub
push
loope
push
and
pop
lret
mov
icebp
int
lret
lcall
jae
lcall
add
push
jae
jae
stos
movsl
cmp
div
push
and
dec
clc
out
cmc
mov
add
js
in
cli
jb
jns
push
scas
sti
cmp
aad
loop
cmp
dec
incb
repnz
mov
jp
enter
adc
sahf
lods
sub
lock
aam
adc
mov
inc
and
test
jecxz
mov
dec
inc
cmp
and
and
mov
jno
out
xchg
dec
rorl
pop
les
aad
cmovl
imul
mov
ret
aad
pusha
adc
ss
xchg
call
xchg
imulb
call
popa
repz
push
fldt
sbb
pusha
pop
stc
aad
and
and
mov
adc
out
js
fdiv
mov
test
arpl
popf
mov
dec
out
ficoml
test
nop
enter
sbb
ffreep
or
add
xchg
inc
ds
out
add
std
mov
outsl
fldt
add
bound
cmp
cmpb
and
mov
lods
sub
jbe
les
das
es
sub
mov
or
les
loopne
int
jae
inc
xlat
cmc
repnz
adc
jo
pop
roll
mov
push
jno
fld
or
add
sbb
test
pmaddwd
push
enter
adc
and
out
xorl
scas
push
and
inc
dec
lcall
lods
cmp
mov
xorb
out
dec
inc
fimuls
pop
add
lods
aad
orl
adc
add
popa
hlt
push
shl
sub
xlat
dec
push
js
jecxz
cld
stos
jmp
sbb
movsb
cmp
ds
xor
cmp
ljmp
lea
and
fs
push
pop
aad
mov
in
xchg
rorl
out
sub
mov
pcmpeqd
and
aad
repnz
adc
insl
pop
jge
lods
std
in
xor
ja
insb
psadbw
mov
cmp
std
jnp
int
cli
sbb
filds
or
pop
push
testl
cmp
mov
es
lret
dec
or
scas
adc
bswap
movsl
fwait
cmp
ret
aaa
push
push
loope
loope
jg
xor
js
add
mov
test
ret
and
adc
pop
mov
popf
in
add
mov
es
rclb
push
ror
aad
pusha
fsetpm(287
jge
iret
int3
jmp
cwtl
cmp
or
sbbb
add
push
testb
adc
mov
or
jno
push
jg
ljmp
popf
xor
lcall
cmp
movl
mov
ss
shll
adc
loopne
cwtl
xor
rorb
aad
in
dec
cmc
ja
adc
movsl
loopne
xchg
xor
xchg
lds
xchg
cld
sarb
in
outsb
loope
push
cmp
adc
pop
notb
out
insl
cmpsb
cmc
inc
mov
enter
push
cmp
adc
and
subb
rolb
out
stos
rcrl
jl
pop
popa
sub
addb
repz
jnp
mov
cli
outsl
std
out
out
cmp
sahf
iret
into
push
gs
in
sub
aas
aad
cmc
add
mov
stos
rolb
push
add
jns
pcmpgtb
jmp
xor
mov
sub
cs
sbb
insb
pop
and
pop
xor
adc
idivb
call
sar
jl
cwtl
sub
adc
test
jecxz
jge
lcall
add
div
mov
push
cmp
lods
movsl
ds
cld
loop
mov
out
gs
cmpsl
push
cmpsl
push
xchg
mov
mov
cmpsb
or
pop
mov
shr
out
xchg
jne
or
enter
inc
scas
imul
lods
add
jmp
stc
ljmp
fildll
add
addr16
add
jmp
lahf
das
push
jmp
xchg
pop
push
faddl
mov
jb
dec
xchg
fcomi
cmc
aas
rol
and
cmpsl
push
scas
pop
cld
repnz
jge,pn
daa
testb
xchg
sub
aad
in
mov
push
in
jl
cmp
in
mov
or
and
cmp
ret
aad
jmp
shll
repz
jns
push
clc
in
int
popf
adc
add
in
cmp
pop
push
in
pusha
cmp
mov
shll
aaa
nop
mov
shll
sbb
bound
enter
divl
jns
daa
xchg
les
adc
aad
inc
dec
jmp
xor
push
sub
jmp
sbb
divb
inc
sbb
repnz
pop
cs
dec
dec
sbb
and
cmp
fwait
mov
je
or
lret
sbb
xor
js
into
and
cmp
out
fisttps
push
int
or
pop
cvtdq2ps
mov
enter
adc
mov
mov
mov
sahf
loop
lods
mov
imul
stc
xor
pusha
enter
cmp
out
pusha
iret
jl
pop
lods
pop
test
push
out
nop
push
jmp
rcl
adc
test
leave
int
add
xor
mov
dec
xchg
push
test
jl
or
dec
cli
inc
mov
ds
mov
or
aad
adc
jp
ss
or
cmp
sti
lods
packuswb
push
jp
jp
mov
mov
mov
out
inc
push
in
sub
lods
xchg
out
mov
cld
and
xor
inc
imul
dec
cmp
insb
lahf
dec
jne
lods
pop
adc
xor
stos
loope
mov
nop
dec
popf
jnp
push
dec
mov
jb
and
std
orl
out
fwait
mov
fcoms
test
repnz
in
cmp
stos
push
xchg
mov
in
mov
jne
aas
orb
in
loope
scas
not
xchg
pop
add
jo
bound
mov
aad
aas
movsb
cmpsb
jbe
rorl
and
mov
shr
clc
lret
mov
xor
or
xor
pop
jl
pusha
mov
adc
adc
nop
inc
adc
xor
xor
scas
add
or
push
jge
add
add
cmp
mov
and
inc
in
andl
xor
jno
int
lods
and
sbbb
mov
jge
jnp
pop
dec
or
pop
push
dec
mov
push
pop
shrb
mov
in
pop
dec
sub
fildll
aas
add
jl
and
cltd
and
add
sub
inc
jl
outsl
lock
or
sub
bound
flds
pavgb
mov
imul
xor
jg
jp
imul
jge
andb
adc
fidivrs
or
das
fnsave
sub
repz
mov
gs
call
sub
loope
shlb
dec
in
mull
aad
repz
jmp
lock
fstpl
and
cmp
in
sbb
xchg
stos
sahf
decl
rorb
cld
fs
pusha
test
pop
cmp
scas
imul
loopne
dec
jl
stc
shlb
insb
sub
sbb
xchg
js
and
dec
add
or
neg
rcrb
mov
hlt
scas
test
rorb
adc
mov
xchg
fs
loopne
adc
mov
sahf
mov
jno
test
sbbl
test
sub
cmp
pop
mov
add
stos
shlb
call
std
cmp
pop
pop
aam
fldcw
mov
call
mov
pop
andb
push
lcall
arpl
add
mov
and
jae
mov
mov
xchg
jnp
rcll
and
es
mov
cmc
mov
push
xor
aad
xchg
js
push
fiadds
fmul
mov
mov
fmul
bound
jns
out
aad
fwait
push
pop
xlat
mov
xor
sub
into
cmpb
arpl
adc
mov
scas
sbb
ret
lret
insb
cmpsl
test
dec
dec
push
xor
into
mov
sub
imul
or
mov
xchg
cmp
imul
mov
mov
pop
in
int
arpl
jecxz
pop
out
sbb
push
notl
je
int
sti
fsubl
add
aad
cld
push
ret
repnz
notl
aad
jmp
cmpsb
xor
inc
push
jbe
inc
test
mov
scas
call
push
aad
ja
cmp
cmc
cltd
pop
push
bound
loope
jae
repz
sub
rclb
pop
push
shlb
js
lea
pop
jmp
bound
fsub
inc
dec
aam
scas
jae
cld
sbbb
pop
popf
jb
cmp
sub
sbb
cmp
add
js
data16
or
ljmp
iret
dec
mov
dec
popa
sub
inc
inc
adc
fildll
in
lock
mov
dec
aaa
inc
jae
push
cld
push
pmaddwd
fisubrs
fildll
fwait
push
js
jmp
das
rolb
pop
mov
jp
loopw
mov
filds
into
xchg
shr
icebp
repz
jno
loop
mov
out
test
xlat
aad
inc
push
shll
cmp
popa
or
dec
push
and
dec
aad
ja
adc
push
int
aam
cli
hlt
cwtl
xchg
jl
test
push
mov
cwtl
cmc
mov
xchg
cmp
lods
xor
mov
jl
shrb
cli
or
loope
fdivrs
inc
js
aad
lahf
outsb
cs
inc
cmp
scas
or
fistpl
xor
aad
hlt
jp
dec
mov
aad
cwtl
stos
and
xor
sbb
dec
outsb
in
sbb
lods
cli
sti
xchg
das
or
notl
inc
mov
push
pop
ja
mov
push
fistl
sub
stos
mov
dec
sub
in
rolb
leave
rorb
pop
mov
and
jo
cmp
ds
push
bound
mov
xchg
int
jl
cli
lahf
lods
push
jge
mov
js
pop
inc
cmpsl
loope
mov
data16
sub
push
in
loop
pop
cmc
outsl
jne
jecxz
dec
or
cmp
dec
imul
cmp
mov
pushl
movsb
jns
jmp
cwtl
xchg
mov
lcall
and
mov
mov
mov
dec
pop
fldcw
adcb
or
or
adc
xchg
je
push
imull
fs
push
stos
je
and
popa
shll
aad
cmp
lds
int
into
mov
int
cmp
out
into
sub
add
negl
out
add
adc
mov
arpl
lcall
fdivrs
adc
mov
sub
sub
adc
dec
aad
scas
nop
aam
lods
icebp
aam
mov
sub
xor
mov
sub
push
sbb
lock
pusha
mov
pop
or
sub
aad
dec
sarb
hlt
pop
add
aad
pop
ljmp
push
sbb
das
iret
in
mov
mov
xchg
jecxz
popa
xlat
mov
sahf
mov
adc
adc
std
clc
inc
sti
xchg
js
and
iret
cmc
aam
fldcw
xor
scas
loope
ja
repnz
or
lcall
push
inc
outsb
movsl
sti
jle
push
je
mov
jne
call
jnp
jg
xor
xor
or
dec
or
inc
mov
scas
popa
cmp
mov
inc
cmp
mov
pop
inc
shll
outsl
sti
jno
jae
jnp
cs
stc
push
cmp
std
pop
js
cmc
mull
jnp
pop
out
mov
inc
dec
mov
imul
mov
xchg
pop
inc
add
xor
cmp
add
aas
jge
jge
mov
dec
mov
or
or
cmp
jae
cmp
aad
adc
lds
or
shrb
cmp
dec
lock
not
sub
cwtl
loopne
lahf
iret
xor
mov
loopne
cli
cmp
adc
inc
cmp
jbe
inc
push
jnp
jle
aam
and
xchg
pop
int
dec
mov
jno
add
jnp
notl
into
xchg
sbb
in
xor
sub
jmp
iret
dec
mov
jns
add
aad
mov
call
std
into
test
mov
addr16
lahf
fdivs
insl
nop
scas
mov
repz
in
xchg
stos
js
testl
push
insb
push
call
lcall
xlat
sahf
push
ficoms
sbb
mov
dec
xchg
test
cli
out
cmpsb
inc
int
adc
pop
mov
dec
push
arpl
cmpsb
xorl
stos
int
xchg
out
movsb
jmp
pop
test
mov
std
out
aad
sbb
push
xabort
mov
mov
jmp
inc
pop
ror
xchg
inc
cli
push
enter
into
clc
jo
sub
inc
xor
cmp
push
incl
loopne
mov
scas
loopne
lahf
jae
cmp
dec
cmpsb
jns
push
pop
pushf
in
cli
xor
dec
cmpsl
mov
adc
push
iret
cmc
fldl
xchg
dec
sbb
lods
pavgw
es
xor
cli
push
sbb
sarb
dec
cmc
rclb
int
and
dec
cmp
cmp
xchg
push
sbb
insl
jo
adc
mov
add
mov
aas
push
in
push
add
push
push
mov
push
sti
lret
cmp
cmpsl
pop
cmc
add
mov
or
aas
lock
imul
add
add
scas
pop
and
cmc
pop
inc
ret
xchg
in
mov
lods
sub
fwait
xor
testl
out
xchg
roll
cmp
and
pop
scas
mov
orb
aad
scas
idivl
or
jae
cmp
push
xor
les
add
mov
dec
fildl
mov
fucomip
sbb
pop
jmp
xor
jge
shrd
test
xchg
subl
lahf
aad
sub
add
cmp
and
mov
cmc
xchg
subb
sub
popa
int
call
out
or
mov
gs
lret
pop
sbb
pop
sub
scas
cmp
cmpsl
cmp
mov
adcl
inc
or
cmp
xchg
shll
pushf
loopne
lcall
sti
sub
add
xchg
outsl
inc
rclb
pop
lea
ret
push
mov
pop
push
call
daa
xchg
rol
cmp
pop
cltd
stc
push
pop
dec
or
cmp
jnp
aas
dec
addl
xor
mov
out
nop
push
cmc
out
pop
loop
out
xchg
addb
xor
lcall
inc
push
xor
cmc
xor
loope
pop
fcoml
cmpb
mov
push
mov
cmp
icebp
ret
sbb
adcb
xchg
sub
lock
adc
xchg
adc
push
fs
cmp
rolb
pop
test
cmc
and
shll
or
out
sbb
scas
cmp
mov
lods
and
jl
push
pop
fistpl
ljmp
loop
push
rorb
fcmovbe
fimull
add
loopne
sub
sub
mov
fsubs
jg
jo
nop
shlb
mov
insl
or
cmp
jbe
stc
lahf
sbb
out
dec
pop
mov
mov
rorb
mov
xor
clc
sbb
hlt
cmp
out
mov
std
mov
call
push
mov
add
cmc
test
add
sarb
dec
xchg
lret
push
jl
int
pop
subl
push
pop
pop
in
add
daa
aam
cmpsb
popa
in
aad
mov
and
xor
lods
xor
sbb
push
and
xorb
rol
sub
jge
iret
sti
mov
pop
xchg
pop
aam
scas
dec
mov
lcall
inc
jge
cld
cltd
jg
push
das
out
xchg
daa
call
nop
loope
out
daa
or
dec
mov
jo
sub
fwait
dec
mov
cmp
jmp
push
outsl
add
fwait
pop
jl
ja
pushf
stos
scas
cmc
in
in
sub
out
push
pop
mov
jg
movsl
bnd
adc
adc
test
enter
xor
push
mov
arpl
ret
enter
outsl
mov
jb
fidivrs
add
jmp
dec
cld
ds
mov
cmpsl
and
or
xor
fwait
js
mov
movsb
mov
roll
sub
addr16
lret
insb
in
lahf
pop
fs
das
mov
mov
lods
sbb
mov
ljmp
mov
push
xchg
mov
push
mov
mov
mov
sub
fyl2x
adc
shl
mov
mov
shrb
sbb
fstpt
xor
leave
push
jo
lea
add
aad
xchg
sub
push
fidivrs
and
dec
out
xchg
jmp
ficoml
je
push
or
adc
push
in
arpl
clc
add
xchg
daa
xchg
and
cld
xchg
jle
mov
cli
aad
arpl
dec
pusha
adc
push
xlat
aad
dec
sub
lcall
mov
xchg
and
stos
imulb
sbb
into
lahf
and
movsb
mov
outsl
jge
xchg
cld
dec
shr
pop
icebp
and
addr16
outsl
add
fisubrl
sarl
pop
imul
arpl
or
ffreep
fldenv
out
cld
mov
scas
inc
push
mov
dec
mov
cmp
dec
xchg
sbb
fsubs
or
in
mov
cmp
ja
xchg
inc
cwtl
stos
aaa
pop
test
mov
mov
mov
mov
idivb
mov
or
pop
sbb
pushf
sti
mov
mov
push
and
dec
cltd
test
xlat
sbb
cvttps2pi
outsl
adc
push
xchg
jle
sub
sbb
iret
pusha
pushf
dec
call
ss
mov
xchg
movsb
lock
data16
dec
sbb
mul
ljmp
jne
mov
rol
jge
cmc
xor
divl
lods
movsb
or
outsl
mov
jg
mov
fs
mov
adc
sbb
mov
testb
xor
aaa
jp
mov
pmullw
add
or
repnz
pop
loope
cltd
fst
repnz
cmp
out
int
and
add
cmp
push
int
jae
push
dec
jmp
shl
or
xor
add
cmc
pop
sub
inc
imul
inc
mov
sarb
push
roll
imul
gs
mov
in
ficoms
jecxz
in
mov
gs
cmpsl
mov
sbb
cmpsb
shrl
xchg
or
xchg
adc
mov
scas
or
sti
xlat
push
xor
mov
jns
sub
inc
push
lcall
lcall
and
in
out
jmp
jmp
cmp
xchg
in
xor
daa
and
sub
aad
outsb
mov
jnp
push
cs
outsl
insl
in
jno
dec
int3
mov
cwtl
pop
jle
call
jmp
jne
mov
or
std
dec
scas
les
or
sbb
pop
sbb
out
xor
in
shlb
loope
sub
or
xchg
bound
mov
pop
xlat
call
cmc
out
rorb
lods
sbb
and
into
iret
mov
sub
sub
pop
or
pop
mov
pusha
xchg
dec
sti
jns
adc
add
push
aad
stos
stc
lds
rclb
sbb
dec
pop
popf
pusha
js
std
cmp
cmp
push
or
aaa
jne
cmc
scas
sbb
or
cltd
mov
jle
les
mov
js
rclb
xchg
jo
rcrb
mov
jae
cmp
fldl
push
mov
daa
scas
aad
stc
into
std
test
sti
cli
dec
shr
pop
rcrb
pop
pop
call
xor
jg
mov
mov
in
jmp
call
cmpsl
cmp
fists
and
pusha
mov
sbb
test
xchg
cltd
dec
int3
add
es
leave
inc
add
pop
and
mov
imul
icebp
cld
mov
inc
and
ljmp
insb
aad
stc
xchg
into
popa
xchg
or
mov
mov
add
pushaw
fimuls
pop
push
adc
or
mov
mov
out
xor
mov
cmp
push
in
or
jo
sbb
fists
iret
xchg
mov
mov
xchg
ja
mov
ficoml
pop
mov
sub
call
cmp
adc
sti
xchg
test
jb
out
dec
sbb
adc
lods
and
sbb
nop
dec
mov
pusha
lahf
jmp
cltd
ja
aad
xchg
adc
lock
pusha
mov
imul
sbb
loope
stos
clc
fsubp
iret
stos
repnz
mov
fs
ja
sti
push
nop
test
or
sub
dec
cwtl
lods
mov
aaa
dec
jmp
sub
sub
or
in
enter
xor
out
cmc
in
mov
add
mov
into
fmulp
xchg
shlb
stos
pop
loope
sarb
adc
jns
adc
std
push
jnp
and
add
leave
sub
inc
in
loopne
lds
shlb
or
mov
add
mov
int
pop
sub
loopne
pusha
pop
xlat
clc
sti
dec
ret
cmp
adc
xor
faddl
imul
add
cli
lods
std
out
jo
xchg
lahf
cmp
lds
xchg
mov
into
roll
fwait
or
jmp
iret
ja
pusha
mov
fdivrs
or
jecxz
jle
jl
lcall
sub
xlat
push
ja
mov
adcl
adcb
out
lcall
or
or
mov
rorb
or
dec
fnstenv
mov
fists
inc
inc
or
mov
arpl
bound
or
cltd
lods
mov
sti
cmc
movsl
mov
sub
sahf
push
fimuls
mov
dec
pop
loop
inc
mov
mov
jno
add
dec
mov
mov
mov
add
sbb
adc
psrad
mov
or
test
dec
and
jmp
adc
mov
or
movsl
lock
push
add
mov
ljmp
dec
call
mov
pop
push
inc
pop
or
dec
adc
fstp
xor
and
sub
sbb
dec
aad
jo
into
jne
dec
pop
ja
mov
and
mov
pop
add
cmpsb
adc
dec
popf
push
test
push
fisttpl
jae
jecxz
loope
mov
test
fists
sbb
daa
jp
das
cmp
jecxz
adc
or
jno
gs
jo
mov
outsl
xchg
add
mov
cli
push
push
les
or
fbstp
in
in
push
sbbl
xor
shrl
jnp
lods
xacquire
dec
lea
xor
push
push
aad
cmp
divl
std
into
adc
adc
push
in
mov
xchg
fldt
cmc
pop
lods
movsb
sar
in
cmp
into
outsl
dec
iret
mov
dec
lock
xor
incb
cmp
mov
inc
movsl
pusha
div
addl
mov
je
das
in
cmc
out
or
xor
dec
jge
push
push
jecxz
push
and
mov
rcrl
mov
fs
push
ret
lods
cld
and
mov
iret
fs
mov
shll
adc
or
jge
mov
data16
lea
lods
push
repz
push
adc
dec
cwtl
inc
mov
cli
jmp
mov
mov
test
into
and
pop
mov
sbb
fidivs
addr16
out
out
daa
mov
clc
pop
out
inc
cmp
test
pop
imul
dec
mov
mov
cmp
push
pop
popa
jmp
call
add
leave
mov
push
iret
and
ror
imul
out
mov
add
pop
std
pop
or
gs
sbb
pushl
movb
iret
mov
mov
sti
out
xchg
test
aad
cmpsb
dec
in
cli
push
imul
dec
xchg
and
fneni(8087
and
dec
pop
pusha
inc
xchg
jb
xor
shrb
outsb
jmp
testl
std
inc
sub
xchg
aad
adc
aam
cmc
fsubp
out
mov
cmc
pop
push
imul
cmc
js
movb
mov
inc
leave
stc
inc
je
cwtl
pop
data16
xchg
pop
jno
aad
push
in
pop
xor
sbb
inc
and
cmp
sti
jge
lcall
clc
repz
pop
add
xor
cmp
dec
sbb
jns
daa
or
iret
into
jo
add
subb
dec
or
aad
in
xchg
rcrb
push
sbb
lods
shl
icebp
in
in
cwtl
test
inc
imull
mul
jmp
jns
shr
cmp
jl
sub
dec
adc
sahf
jno
or
pop
xor
les
or
pushf
adc
dec
sbb
loope
out
aad
push
fdivrs
mov
mov
fsubrl
jnp
and
cmp
sahf
or
xlat
pop
fnstcw
cmp
lods
notb
mov
sbb
add
insl
inc
loope
popa
mov
shrb
shr
fwait
int
jmp
callw
pop
jb
stos
adc
out
push
sbb
popa
add
aad
or
xchg
movsl
push
mov
test
sahf
mov
imull
xchg
pop
sub
fucomip
loope
mov
sahf
and
cmp
cli
shl
adc
push
fnsave
insl
aad
sub
or
les
dec
dec
daa
stos
adc
and
pop
sub
stos
xchg
xchg
cld
lea
mov
in
out
ds
adc
cmp
sub
jecxz
cmp
jae
mov
jg
or
push
mov
mov
js
or
cmc
fcmovne
push
mov
mov
mov
popf
push
jp,pt
jmp
lock
lods
jg
jp
dec
mov
jnp
call
cmc
es
push
lcall
push
pop
loop
pop
dec
xchg
push
sub
dec
shrl
outsl
andb
test
push
out
xchg
push
mov
mov
jge
es
out
inc
push
sub
aad
adc
out
imul
cmc
mov
call
xor
adc
icebp
adc
jecxz
es
loop
mov
dec
xor
sti
xor
idivl
cmc
fists
stc
lods
sbb
mov
dec
dec
xor
adc
mov
sbb
scas
inc
fisubrl
in
gs
mov
adc
dec
bts
out
scas
mov
jge
cmp
xor
lret
out
nop
hlt
mov
pop
repz
scas
dec
push
stc
jmp
test
popf
in
cld
xchg
dec
cli
aad
rorl
and
test
gs
pop
xchg
jge
test
dec
mulb
aad
es
jge,pt
lods
mov
dec
mov
mov
inc
inc
dec
jle
pop
mov
testb
jmp
xor
sti
loope
bound
inc
add
add
cmc
push
inc
les
in
jmp
clc
or
pop
add
xchg
mov
xor
jno
outsb
cmp
push
push
arpl
stos
jl
jo
sbb
pusha
in
cld
mov
mov
pop
jns
jecxz
cmp
mov
push
inc
aad
mov
push
adc
nop
mov
mov
or
aad
pop
add
cmc
xchg
test
outsb
repnz
and
add
lret
pop
add
imul
pop
icebp
cmp
popl
sub
mov
add
cmc
sahf
adc
int
out
int
jecxz
les
shll
imul
popf
das
mov
inc
xor
sub
xor
sbb
inc
es
cmc
inc
pop
imul
sti
sarl
es
cmp
cmp
fstpl
xchg
lods
into
dec
dec
inc
jnp
push
arpl
das
push
test
sti
idivb
mov
jne
push
mov
insl
sub
push
push
andl
add
cmc
sbb
inc
cli
mov
jnp
mov
mov
cmpsb
cmp
idivl
arpl
xchg
test
pop
int
sub
repz
or
push
and
mov
xchg
je
or
add
mov
and
xchg
les
ja
dec
mov
jbe,pn
mov
sub
ss
ret
fnstcw
jns
mov
push
push
popf
sbb
les
icebp
out
outsl
mov
outsl
mov
mov
js
push
inc
mov
into
pop
mov
fucom
sub
ret
outsb
mov
jmp
inc
adc
and
mov
add
cmp
push
lahf
cli
cmc
outsb
scas
inc
mov
or
jnp
inc
jne
es
push
movsb
xchg
or
or
jo
push
add
dec
sub
les
push
cmp
daa
es
sbb
pop
sub
mov
stc
sbb
cli
nop
or
inc
and
cmp
dec
adc
xor
aad
cmp
xchg
xlat
xor
stos
push
push
adc
cmp
ror
cltd
mov
aam
mov
add
shll
jnp
jne
mov
adc
call
dec
sti
add
aad
cmp
xor
pop
imulb
nop
sbb
add
or
adcb
cmp
xor
enter
pop
out
xchg
jns
out
addr16
movsl
xchg
pop
lcall
ja
popf
js
lods
lret
andb
xchg
int
icebp
push
jnp
lods
js
fs
arpl
mov
cwtl
test
pop
jp
mov
iret
cmc
push
and
in
xchg
pop
xor
add
adc
push
mov
sarl
rcll
mov
adc
or
adc
iret
in
sbb
repz
lcall
xchg
int3
ljmp
les
jmp
push
pop
out
fcmovbe
jge
mov
push
je
pop
jae
clc
mov
cmpb
xchg
mov
mov
pop
psubb
mov
xchg
ficoml
testb
cmp
popa
cli
call
in
jecxz
xchg
lea
push
xor
add
and
adc
negb
adc
cld
dec
mov
insl
or
add
mov
cmc
negb
cmpsb
test
enter
cmp
out
adc
and
and
sub
popa
out
sub
mov
ljmp
mov
sub
fucomi
out
test
jne
mov
out
add
test
inc
les
push
lods
je
adc
xor
push
lock
fisttps
jecxz
loope
lods
sarl
xchg
and
les
xorl
push
cmc
insl
cmc
xchg
mov
das
aam
pop
call
arpl
add
sbb
in
pushf
dec
popf
sbb
add
into
push
out
jmp
xchg
cmc
mov
inc
jg
cmpsb
add
or
aam
xchg
push
and
cwtl
push
mov
adc
imul
loopne
into
fildl
cmpsb
mov
mov
mov
cs
hlt
cmc
adc
fwait
in
inc
gs
aad
sbb
pop
add
mov
jmp
jmp
addb
sub
and
mov
cltd
or
jp
aad
call
and
push
repnz
shufps
push
fldl
imul
loop
insl
fildll
pop
add
movsb
xor
xchg
xor
push
cmp
sub
rorb
sub
imul
add
add
pop
loopne
nop
adc
pop
out
sti
or
cmp
or
ret
sbb
ljmp
cli
or
add
out
dec
sub
fdivs
xchg
mov
test
jl
mov
rcrb
push
adc
add
arpl
push
cmpsb
push
les
cmc
sub
lcall
xlat
orl
jmp
iret
int3
lock
stos
testb
and
subb
mov
js
rcrb
push
jnp
inc
hlt
std
push
cmc
sbb
jo
iret
jecxz
insl
popa
xchg
jno
mov
push
push
add
pop
push
cmpl
xor
mov
imull
fcmovbe
mov
inc
daa
dec
subb
popf
nop
jmp
leave
gs
mov
gs
ret
pushf
out
add
int
and
cmpsb
aad
inc
fisttps
xor
xchg
push
fists
sub
dec
sub
mov
imul
xchg
sbb
sub
leave
shlb
and
push
les
mov
insl
xchg
xchg
pop
sub
cs
daa
fcomi
cmp
pop
lods
mov
xchg
cld
lahf
mov
jmp
sbb
cmp
imul
mov
les
push
ss
stos
ret
pop
push
xchg
aad
xchg
lods
sub
mov
nop
jbe
adc
and
mov
daa
dec
xor
int3
and
popa
pop
daa
in
mov
add
pop
pop
cmc
jg
inc
jo
xor
xchg
push
das
loopne
jecxz
or
or
sub
adc
cmp
push
fsts
js
int3
jno
cmpsl
xor
lods
push
cwtl
xchg
decl
leave
push
in
push
push
lea
dec
and
mov
and
repz
cmp
cmp
out
in
cld
jmp
push
lods
cmpsb
mov
das
cmp
pop
rorl
jl
lds
sbb
ja
mov
test
xlat
mov
stos
add
loopne
xor
cmp
add
inc
cmp
stos
dec
lret
add
lea
mov
icebp
shl
sub
pop
xchg
xlat
jo
in
mov
pop
mov
xchg
sub
lahf
or
in
mov
sbb
gs
mov
pop
push
xchg
aas
pushf
ror
fdivrl
cmpsb
xlat
lock
mov
fstl
out
rorl
sbb
xchg
iret
cmc
mov
rcll
ljmp
scas
ficoms
inc
mov
and
imul
fsincos
xchg
ja
sti
jmp
push
stos
sarl
lods
sbb
mov
lock
add
mov
mov
cmp
lea
mov
mov
cmpsl
jp
push
shlb
mov
movsl
add
jmp
std
js
addl
or
sarb
notl
jb
test
mov
sahf
sbb
loope
sub
push
cmp
mov
cwtl
cmp
imul
or
cmc
adcl
mov
fsubr
int
xchg
fxch
stos
rolb
cmc
lods
xchg
idivb
aam
js
xchg
fnsave
and
loope
jae
cmc
mov
idivl
imul
inc
sub
subb
scas
inc
mov
xor
stos
xlat
mov
and
adc
pop
xor
push
lods
or
std
or
and
inc
or
lock
in
das
fimuls
lret
add
lahf
or
ret
movsb
ficomps
test
push
and
lods
ja
xchg
adc
mov
imul
pop
sub
xchg
inc
movsb
shr
aad
jp
rorl
dec
push
into
pop
or
pop
cltd
push
scas
in
inc
cmp
and
adc
sti
mov
xchg
fiadds
clc
mov
jge
imul
mov
insb
orl
push
mov
arpl
in
mov
ljmp
in
lock
jo
mov
testb
iret
lods
test
adc
and
xor
jl
fildl
xchg
push
cmpl
aaa
stos
ja
push
fstpt
dec
and
xchg
test
inc
push
repnz
mov
mov
push
popf
jnp
pushf
or
fwait
inc
scas
push
nop
cmp
mov
cmpsl
stos
push
mov
rclb
rorl
mov
shlb
cmp
test
repz
mov
into
push
or
cmp
jl
push
cmp
add
add
data16
gs
ds
daa
fbstp
and
xchg
enter
idiv
mov
insl
inc
add
dec
aad
jns
adc
imul
stc
insb
out
pusha
push
sbb
mov
and
jnp
cmp
sbb
outsl
aam
lds
dec
aad
jo
xchg
sbb
mul
xor
imul
aad
loop
adc
pop
jns
clc
pop
fsts
addr16
ret
sub
inc
sub
push
test
or
pop
cmc
int
lahf
jnp
cmp
or
fldt
jmp
xlat
sti
sub
idivl
sbb
or
cmp
dec
scas
push
adc
mov
fildll
hlt
or
xchg
addl
aad
lock
push
and
mov
pop
shl
xor
push
in
sbb
lods
add
js
dec
mov
sub
cltd
mov
les
sub
fildll
js
dec
sti
sbb
das
outsl
pop
arpl
mov
outsl
les
cmp
xchg
dec
pop
cmc
repnz
out
lcall
ja
mov
cmp
mov
arpl
cmp
add
lods
loope
adc
js
stos
jge
data16
arpl
sub
dec
and
mov
stos
mov
aaa
inc
mov
bound
and
dec
stos
xchg
xchg
push
cmp
cld
sti
cld
jne
dec
lods
or
mov
testl
mov
cs
jnp
test
mov
lcall
xor
mov
jl
leave
add
xrelease
or
in
jecxz
iret
adc
scas
mov
insb
ja
icebp
test
adc
cmp
cmp
or
pop
mov
adc
xchg
bound
xor
pop
in
jbe
push
into
popa
pop
push
sub
jmp
add
les
rorl
cwtl
dec
mov
icebp
cmp
jbe
int
mov
add
lods
daa
mov
punpckhbw
int
xchg
mov
fstpl
clc
jne
cli
jmp
jge
cmp
xchg
adc
insb
aad
bound
adc
dec
adc
inc
xchg
ljmp
xchg
xor
subl
dec
imul
in
bound
stos
sbb
das
xchg
xchg
rclb
loope
lods
negl
in
dec
fstpt
test
xor
in
insl
adc
mov
adcl
dec
or
sub
in
aad
and
dec
add
icebp
shll
adc
add
sub
inc
shrl
cli
adc
fiaddl
xchg
adc
out
daa
dec
sbb
aas
lahf
scas
mov
cmc
push
cmc
into
rcrb
jl
call
in
fs
or
test
test
push
in
sahf
or
push
sti
mov
and
or
jo
xchg
scas
test
adc
or
dec
xchg
xchg
mov
out
fidivs
jge
mov
inc
push
dec
jl
dec
jmp
xor
jnp
jne
cmp
aad
mov
insl
jge
mov
adc
mov
jno
mov
and
lcall
pop
aaa
pop
loopne
arpl
orb
mov
cli
xchg
bound
lea
std
cs
mov
sbb
sti
rolb
mov
cmp
add
cwtl
sbb
cmc
je
fcompl
mov
pop
or
jns
js
jno
jle
test
jb
sbb
mov
or
outsb
xchg
arpl
add
mov
aas
outsl
aaa
test
movsl
xor
pop
int
dec
in
fnstenv
loopne
insb
push
rcrl
xlat
shlb
popf
out
adc
test
popa
rep
aad
test
sub
popf
sub
adc
fidivl
mov
test
fs
test
mov
jns
mov
push
xor
sahf
xchg
out
mov
add
cmc
dec
scas
push
xchg
add
lcall
add
xchg
sbb
and
out
dec
sub
push
sub
in
mov
and
mov
test
shll
call
rclb
add
or
dec
aad
cmp
mov
cld
xor
out
fists
or
pop
add
stos
xlat
inc
adc
mov
mov
add
les
sub
mov
pop
dec
jecxz
sbb
jp
out
sbb
mov
mov
out
mov
xor
and
push
sub
out
push
jno
inc
notb
les
popf
filds
jmp
je
cmp
cmp
out
push
aad
jb
push
aas
cmp
mov
in
stos
test
repnz
mov
bound
idivb
xchg
les
pushf
mov
daa
scas
aad
lret
sbb
rcrb
fwait
mov
inc
mov
sbb
xor
imul
add
ljmp
jnp
mov
and
or
mov
push
mov
or
jns
mov
aam
sub
insl
push
push
pop
adc
sbb
add
cli
sbb
add
cmovg
jecxz
pop
in
dec
sbbb
cmp
mov
push
mov
enter
or
dec
mov
arpl
addr16
adc
jle
cmc
inc
stc
ret
xchg
xchg
sbb
sti
mull
xor
xor
mov
pop
fidivs
aad
aam
dec
bound
test
int
pop
push
sub
mov
mov
sbb
inc
and
or
loop
and
push
add
test
das
popf
aaa
insl
clc
jae
mov
xchg
es
and
rorl
add
pop
addr16
mov
loop
aaa
sbb
arpl
inc
or
fsubrs
iret
push
in
nop
rcr
scas
lods
jno
arpl
or
fidivrs
mov
icebp
lock
enter
pop
lods
fst
cli
test
sub
out
dec
scas
fs
dec
mov
or
cltd
lea
repz
mov
mov
fucomp
test
out
adc
jno
scas
repz
cmp
cs
adc
push
fadds
pop
jae
cld
pusha
push
scas
cmp
lahf
iret
lods
imul
mov
int3
in
sbb
mov
adc
loope
pop
and
lods
and
test
lock
aaa
and
sub
inc
and
fimuls
mov
push
add
jmp
mov
adc
mov
in
xor
rcl
and
push
cmpsl
mov
jbe
outsb
mul
rcrl
sbb
in
pop
push
xor
lods
sbbb
mov
adc
jne
ljmp
jo
sub
arpl
lds
push
stos
xchg
mov
testl
cmp
dec
imul
daa
out
gs
loopne
or
clc
sti
lods
scas
test
add
mov
and
xor
aad
test
sub
adc
mov
mov
pusha
out
test
sbb
mov
sub
cmc
xchg
leave
push
test
xchg
test
out
add
lods
and
cmc
ja
repnz
out
das
push
mov
push
xor
lock
cli
inc
jg
push
jp
jg
cmp
push
lds
push
jg
popa
fldcw
das
bound
lods
xor
ret
lock
or
pop
mov
pusha
jb
clc
or
cmp
lcall
mov
fs
mov
pusha
xchg
aad
sbb
das
clc
mov
loop
xchg
lahf
mov
or
or
jo
sbb
je
stos
repnz
out
sub
jo
dec
mov
loop
std
inc
fildll
je
cmp
subl
mov
mov
dec
popf
rcr
pushf
mov
in
insl
std
ljmp
mov
aad
cmp
push
outsl
xchg
mov
nop
ret
sti
cmc
negb
jb
jae
nop
rolb
fldenv
adc
sti
cpuid
jo
mov
fnstsw
cmp
inc
mov
dec
out
std
sub
add
xchg
mov
aaa
cmp
int3
adc
hlt
or
aas
push
or
js
test
inc
fnstcw
das
and
imul
pop
or
adc
nop
adc
mov
mov
cmp
mov
scas
gs
in
add
sti
aad
nop
popa
mov
adc
sbb
in
pop
push
push
mov
je
jg
aad
shll
sldt
divb
adc
dec
shll
or
js
cltd
divl
dec
cmc
and
shl
cmc
jp
outsl
add
push
dec
imul
push
pop
sbb
lea
aad
jnp
dec
sub
out
aaa
in
mov
and
sub
mov
test
xchg
mov
imul
lods
cmc
fcoms
push
inc
nop
cld
dec
cmp
xchg
mov
ret
aaa
scas
cmc
cmp
negl
dec
inc
mov
aad
cli
ret
inc
jnp
std
push
jl
jnp
sub
imul
aad
add
pop
mov
push
outsl
push
mov
out
es
les
loop
outsl
mov
mov
fistl
ret
inc
sarb
scas
aad
cmpsb
and
mov
imul
add
xchg
shr
pop
cmc
xchg
mov
imul
dec
jno
mov
icebp
sbb
mov
addl
or
jno
mov
cli
adc
es
add
and
aad
push
and
out
fiaddl
or
mov
scas
sbb
xor
mov
and
add
and
ljmp
mov
jl
imul
push
shlb
jecxz
push
out
clc
sub
cltd
arpl
inc
les
jmp
or
jle
int
jg
shlb
stc
gs
pop
fisttpl
fidivs
add
sub
cmc
mov
pop
imul
movsb
mov
repz
test
scas
stc
loope
adc
ljmp
int3
jmp
es
xor
pop
imul
lret
icebp
add
lock
dec
pusha
mov
rcll
fistps
cmc
xor
addr16
neg
cmp
repz
pop
sti
test
push
mov
xchg
mov
popa
jne
mov
fwait
adc
jge
pop
add
scas
sbb
aam
outsl
rorl
sbb
adc
out
jne
iret
fcoms
pop
add
out
xchg
shrb
jmp
cmp
jns
push
loop
jge
adc
popf
or
fcompl
scas
mov
jne
cmpsl
stos
jp
scas
sub
and
cmpsl
or
aad
mov
mov
call
mov
jmp
int
lods
je
xor
pop
push
xor
push
insb
cmc
jnp
lret
hlt
ss
adc
mov
push
jge
push
dec
insl
pushf
add
dec
aad
sti
jl
xchg
push
ja
mov
imul
data16
or
mov
clc
or
jle
mov
lods
outsb
imul
stc
lods
das
jge
sahf
stos
adc
mov
call
les
je
xchg
mov
in
xchg
pusha
addr16
dec
xor
ror
mov
xchg
fildl
imul
lahf
insb
lea
and
push
aad
mov
fimuls
adc
xchg
xchg
test
cmp
mov
dec
and
cmp
mov
and
sub
push
mov
icebp
inc
adc
fldt
imul
cs
sub
jg
loop
sarb
jno
sahf
cs
out
cmc
dec
bound
jns
imul
divl
ror
mov
sub
or
fucom
mov
push
test
pop
gs
dec
jns
pusha
fimull
ljmp
stos
xchg
or
es
sbb
lea
mov
add
lea
dec
rcll
stos
add
inc
inc
das
fwait
pop
subb
sbb
sbb
cmpsb
cld
aad
push
fcmovb
mov
mov
adc
add
aam
stc
lods
outsl
shl
bound
ficoms
out
jno
sbb
sbb
mov
jecxz
stos
cli
fwait
mov
icebp
shl
cmp
sbb
das
pop
lcall
dec
cwtl
adc
pop
mov
pop
out
inc
add
sub
scas
or
notb
loop
andb
in
sub
mov
out
lcall
xchg
xchg
pop
repnz
movb
gs
ds
dec
jno
in
push
mov
mov
int
push
xchg
cwtl
push
stc
xchg
xor
lods
int
mov
fisttpll
std
lods
test
xchg
leave
push
testb
ds
sub
pusha
add
inc
fidivs
pop
cmp
pop
es
push
xchg
cmp
lahf
hlt
mov
clc
mov
inc
cmp
lahf
jge
or
faddl
int
push
cld
shll
fdivs
cmp
add
fsubs
not
xchg
ror
in
push
out
xor
mov
jecxz
mov
cli
or
mov
maskmovq
and
and
dec
fwait
push
int
jb
pop
pop
inc
cwtl
pop
movsl
cli
cmp
sub
insb
sbb
in
je
jb
inc
pop
add
sub
aad
dec
mov
test
popf
cmp
inc
mov
addl
ljmp
sub
testl
push
and
test
xchg
fcmovbe
cmp
mov
sbbl
add
test
in
adc
or
cmp
aad
rolb
sbb
insb
int
jno
push
out
aad
out
rcrb
pusha
lods
xor
lahf
cli
or
cmc
add
arpl
xchg
jle
addps
fnstcw
sti
mov
cmpsb
fdivr
inc
lahf
sub
test
and
lcall
pop
xchg
inc
mov
push
jecxz
push
cmc
pop
decb
xor
shl
sbb
mov
push
iret
add
jmp
push
hlt
inc
stos
dec
ss
ret
andl
loope
and
sub
xor
pop
mov
jle
inc
push
outsb
cmp
inc
jge
inc
aad
jo
dec
repz
stos
mov
or
fdivrs
pop
test
add
fwait
push
dec
sub
jmp
or
insl
ret
xor
mov
push
fs
shl
stos
mov
in
jns
setne
outsl
pop
pusha
lods
sbb
xor
dec
in
pop
nop
int3
dec
out
call
out
aad
mov
push
sbbl
cmpsl
call
or
mov
jbe
fstp
fs
sarb
nopl
aam
jb
cmp
aas
mov
leave
mov
imul
js
shr
pop
aad
xchg
out
cmc
dec
loopne
fidivrs
adc
jmp
rcrl
push
test
cmp
add
pop
add
sti
cs
push
std
cmp
cmp
push
inc
push
sbb
roll
setle
gs
lods
movsb
rolb
mov
push
mov
sbb
lret
mov
shrb
sahf
or
and
xor
aad
push
call
xchg
aas
popf
push
or
xchg
dec
mov
or
jge
push
jbe
adc
popf
dec
das
gs
adcl
out
cmc
ljmp
aaa
jno
xchg
scas
pusha
mov
inc
lods
pop
fiaddl
jbe
cld
test
mov
or
aam
mov
push
fs
std
out
into
dec
inc
lea
jle
push
daa
cmp
or
sub
addr16
mov
lahf
out
xor
pusha
mov
and
lahf
loope
xor
fs
sub
push
sti
movsl
dec
xchg
sub
push
mov
mov
insl
cmpb
push
fcmovne
jmp
push
add
ljmp
add
scas
les
or
nop
mov
or
lock
cli
inc
stos
cmp
in
cmpsb
cmc
mov
mov
xchg
xor
xchg
mov
scas
xchg
int
pusha
int
cmp
or
mov
sbbb
xchg
xor
data16
jnp
xchg
shlb
inc
or
cmovl
push
out
push
ss
out
aad
loopne
incb
jg
jp
cmp
aas
inc
jmp
and
popf
jp
insl
sub
inc
int3
jns
mov
movsb
jmp
out
fldenv
push
js
mov
pop
sub
dec
inc
loopne
push
ficoml
push
jb
adc
jb
fs
jae
lods
inc
ljmp
cmc
xor
mov
mov
mov
add
test
ss
pop
dec
out
adc
fbstp
lods
jae
das
outsl
lcall
call
push
out
and
pmullw
sbb
mov
xchg
sbb
test
xchg
and
fs
fwait
cmc
insb
dec
in
aaa
cld
adc
stos
cwtl
push
mov
cmp
stc
mov
lret
nop
xchg
subb
pop
mov
cld
or
jmp
mov
shlb
sbb
iret
cmc
jb
nop
adc
loopne
addl
ret
cli
arpl
fmull
jno
inc
sti
push
fldenv
inc
xchg
mov
or
sub
fisttpll
sbb
or
stos
dec
dec
aad
xor
or
mov
xchg
in
std
mov
sbb
sti
sub
imul
scas
cs
cmp
sahf
mov
push
rcrb
data16
js
lods
out
mov
lahf
std
jmp
push
in
int
adc
sahf
xlat
es
push
ljmp
out
mov
lea
add
sub
pusha
sbb
pusha
mov
push
pop
or
jmp
adc
mov
aad
test
cmp
push
xchg
sub
in
add
jl
add
sarl
xchg
or
push
popa
loope
jp
jmp
dec
and
pop
dec
int
xchg
cs
lcall
dec
add
sti
mov
popf
xor
jnp
in
add
xchg
cmpsb
sti
stos
or
je
ds
push
iret
cmc
mov
jl
not
nop
loop
addr16
jl
add
aad
dec
sbb
scas
pop
bound
sub
ret
fwait
cmpsb
fdivl
sub
popa
jo
jbe
pop
mov
rcl
cs
xchg
mov
or
jo
loope
into
rcrb
push
repnz
push
sub
imul
cmp
fadds
cmp
nop
fildll
mov
das
outsl
add
std
sbb
mov
arpl
cmp
jp
jns
dec
xor
fwait
js
jp
sbb
pop
pop
sub
mov
sbb
push
inc
cmpsb
mov
jge
gs
aas
sbb
movsl
repz
and
xchg
aas
test
arpl
std
into
test
aad
fadds
add
sub
shlb
pop
push
add
lods
or
daa
xlat
xor
pop
cmp
out
sub
or
xlat
test
cmc
data16
js
iret
test
adcl
repz
inc
mov
pusha
xchg
imul
popa
mov
sbb
fwait
lahf
imul
outsl
xchg
scas
mov
mov
cltd
jmp
inc
sub
sbb
push
lahf
mov
fimuls
fs
dec
repnz
push
cmp
ja
movsb
scas
outsb
sub
xor
dec
jae
das
xchg
aaa
xlat
iret
pop
jmp
stc
hlt
mov
jne
add
xchg
in
push
sahf
jmp
ror
xlat
jp
shlb
xchg
push
xchg
jns
sbbl
xchg
dec
fistpll
les
mov
incb
jnp
insl
mov
xchg
dec
call
fdivrs
out
cmp
incl
cmp
cmpsl
pushf
aad
adc
daa
pop
popf
mov
in
fnsetpm(287
mov
add
push
adc
loop
xor
imul
lock
imull
clc
pop
jle
and
aam
and
mov
jmp
adc
mov
cwtl
mov
dec
jl
out
jnp
mov
sub
fistpl
cltd
pop
adc
shlb
addr16
cmp
add
aas
mov
mov
add
push
xchg
lea
push
in
outsl
add
sti
cwtl
or
clc
paddq
sbb
add
popa
xor
add
loope
jp
mov
sahf
into
dec
dec
out
xchg
ret
xchg
insb
jno
fs
sbb
mov
iret
mov
aad
pop
scas
push
jp
pushf
inc
sbb
cld
adc
cmp
lock
dec
dec
fcmovnb
cwtl
popf
sbb
cli
sti
push
stos
pop
popf
insb
divl
mov
or
sbb
cmpsl
sub
xchg
fdivp
jns
frstor
jl
adc
scas
lods
scas
jecxz
out
shl
movsb
mov
mov
and
cmc
push
dec
imul
push
xchg
jns
dec
daa
inc
add
mov
cwtl
sub
mov
aaa
dec
mov
push
lcall
iret
shrb
fisttps
mov
inc
fmulp
lds
pop
arpl
roll
in
mov
cmp
in
push
es
jnp
clc
mov
or
shrl
loope
cmc
inc
cmp
adc
mov
nop
lock
sub
jne
mov
pop
imul
repz
nop
xchg
insl
les
fidivs
cmc
bound
push
push
fstps
xor
test
sahf
and
xor
repz
mov
push
aad
jo
xchg
lea
mov
std
add
test
int
stos
rclb
sahf
iret
arpl
and
jne
cmp
jmp
cmc
inc
mov
lods
mov
or
pushf
pop
mov
lret
mov
inc
lcall
push
jg
or
dec
into
push
cltd
mov
push
mov
push
scas
xchg
mov
bnd
scas
or
mov
dec
call
sbb
fmull
jne
rolb
sarl
jmp
adc
mov
xchg
cmc
add
int3
lock
and
repnz
push
cmp
outsl
push
pop
stc
shlb
pop
cld
sbb
and
xchg
jnp
and
lock
dec
stos
cmp
pop
movsb
and
dec
xchg
sti
scas
xchg
aad
lret
dec
clc
or
stos
pop
lock
out
imul
repz
cwtl
jb
es
dec
sub
imull
jo
sub
mov
and
rcll
cmp
pop
mov
mov
fucomip
ret
cmovno
sbb
jo
mov
bound
mov
push
je
push
sbb
sub
or
or
or
jmp
jno
fdivrs
adc
mov
xchg
jb
jp
out
cmp
insl
test
int
scas
fisttpll
inc
cmp
nop
and
int
mov
push
adc
cli
dec
dec
sub
loope
idivb
and
mov
mov
cmp
hlt
sbb
xchg
sti
xlat
fldenv
cmp
shlb
dec
inc
push
add
or
ret
sub
loop
sub
sarb
iret
test
push
fstpt
jo
aad
cmp
xchg
dec
cmp
nop
cmpsb
pop
add
pop
cmp
cmpsb
popf
idivl
sbb
sub
cmp
dec
jmp
mov
fdivs
sub
xchg
and
push
mov
aas
bound
mov
push
ret
lea
add
add
sub
shlb
ret
pop
loop
mov
stc
xrelease
mov
in
in
mov
aam
popa
push
xchg
mov
pop
xchg
cmp
in
jnp
sub
arpl
flds
cmpsl
mov
and
out
adc
sbb
dec
data16
out
shll
sbb
jmp
jge
data16
addr16
dec
sbb
xor
test
test
xchg
dec
sbb
enter
or
leave
xchg
pusha
mov
js
xor
adc
imul
test
pop
cmp
scas
push
mov
mov
cvtdq2ps
loop
decb
iret
push
lcall
jne
ja
dec
loop
mov
decb
pop
aad
outsb
sarb
in
push
mov
push
into
jge
push
gs
xchg
insl
xor
gs
jp
and
into
push
aad
ret
into
in
outsl
xchg
fnstsw
nop
lods
neg
xchg
push
in
xor
pop
push
jne
nop
or
adc
cli
jmp
mov
daa
xchg
mov
mov
push
pushf
jg
nop
out
xor
fisubrs
jne
loope
jmp
xchg
movsb
adc
fcomip
cmc
je
jae
push
lods
out
push
mov
cmp
out
jns
xbegin
cld
out
insb
pop
pop
aad
mov
cmpsl
lock
jae
or
or
sub
addr16
fistl
inc
aad
mov
mov
xchg
xor
sub
pop
mov
loop
push
add
sbb
pop
jb
push
outsb
out
scas
lock
in
lock
sbb
stc
xchg
cmp
dec
sub
les
xor
popa
popf
and
movzwl
arpl
leave
push
jp
and
jno
push
enter
or
cmpsb
cmp
xchg
ss
jmp
in
nop
and
fisttpll
inc
sahf
mov
adc
fdivl
pop
daa
rorb
push
dec
mov
mov
or
lea
push
inc
adc
cltd
int
lahf
push
cmp
mov
xor
jg
pop
xchg
icebp
test
sbb
dec
push
decb
loope
jg
mov
push
out
in
imul
rcrb
dec
dec
and
cmp
ss
rcll
mov
xor
aam
fcoms
in
or
push
imul
and
mov
push
lcall
or
wrmsr
fdivl
repz
jmp
xchg
les
dec
and
pop
movsb
in
mov
jno
pop
adc
add
or
pusha
mov
shr
push
rolb
stos
xchg
mov
fistpll
arpl
or
or
adc
push
pushf
sub
fists
mov
dec
lcall
mov
out
shlb
sbb
sub
jno
stos
icebp
mov
cmp
mov
push
add
aad
popa
jge
xchg
jmp
push
addr16
fsubrl
popa
fsubrl
mov
outsl
int3
iret
idiv
add
or
ja
pop
sbb
or
jo
dec
adc
movsl
ficoms
sbb
adc
cwtl
fistl
sub
aam
inc
sti
jns
loop
push
mov
mov
lcall
mov
sbb
add
pop
movb
cmp
jle
pop
cmp
sarb
xchg
adc
add
lahf
stc
call
sti
adc
pushw
aad
adc
adc
adc
and
lcall
repz
mov
mov
fcmovbe
add
fucomip
fs
ret
dec
pushf
mov
pushf
mov
jbe
and
push
mov
dec
mov
ss
imulb
xchg
mulb
jne
mov
into
lret
mov
int
aad
aas
pop
xchg
cmp
cmc
xchg
cli
fistps
xor
sbb
scas
pushf
lods
and
or
pop
sti
push
xor
imul
dec
push
push
movsb
mov
inc
fstl
mov
mov
shl
out
outsl
daa
jmp
mov
cmp
push
popf
movsl
test
xor
inc
push
inc
mov
sub
sbb
push
iret
lods
insl
add
adcl
icebp
sbb
pop
jl
ljmp
add
outsb
mov
nop
aad
xchg
fstps
ret
sbb
rorb
dec
cltd
xlat
mov
pop
sbb
stos
xchg
into
out
push
sub
faddl
mov
cltd
mov
mov
inc
push
and
repnz
lods
and
shlb
fcomip
test
iret
fwait
xchg
push
test
scas
xchg
sub
cs
bound
pop
data16
cmp
adc
stos
dec
mov
outsb
push
cmp
andl
jge
mov
cmc
mov
cmpsb
cmp
subb
dec
je
out
jl
lods
sub
xchg
sbb
stos
xchg
daa
out
xchg
push
inc
sbb
pop
popf
sarb
sbb
jbe
cli
stos
lcall
jmp
adc
and
pop
shl
jmp
push
pop
adc
ljmp
jns
dec
push
aad
inc
xor
adc
test
push
repnz
in
cmp
inc
xchg
rolb
fadds
lds
mov
sarl
imul
imul
insl
dec
sti
das
mov
xchg
rclb
in
pop
pop
dec
adc
push
xor
push
je
pop
cmp
push
pop
pop
cmp
scas
pop
sub
xlat
sbb
push
cmp
or
pop
push
int
mov
cmp
sbb
imul
sub
divl
and
lcall
div
inc
stos
cld
dec
mov
call
inc
in
incl
adc
sahf
mov
call
int
inc
sbb
mov
cmp
xor
jecxz,pn
jp
adc
iret
xchg
add
adc
fld
fdivs
xlat
imull
cmp
inc
cs
push
aad
out
sbb
clc
add
std
cmp
add
aad
jo
mov
push
dec
sbb
push
aad
cli
add
mov
dec
hlt
popa
push
insl
iret
cmp
cli
rorl
adcb
jmp
bound
loope
xchg
xor
std
test
icebp
add
lcall
in
addr16
cwtl
sbb
mov
mov
adc
aaa
jge
adc
inc
jg
mov
enter
dec
pop
xchg
insl
sbb
lcall
sbb
test
cmp
xchg
sub
adc
push
push
cmc
dec
or
and
loop
sbb
and
out
out
iret
push
cmp
imul
pop
jnp
lods
xchg
jno
jbe
nop
sbb
dec
inc
xor
or
sti
aad
jge
mov
ja
sub
and
loope
mov
jbe
sbb
push
push
pop
out
aad
mov
das
loop
add
outsb
cmp
adc
and
mov
lret
mov
and
dec
negl
lods
stos
add
inc
int3
cmc
jge
cmp
lcall
mov
in
out
inc
pop
jns
mov
in
cmp
pushf
adc
lods
gs
or
loop
outsb
dec
das
push
pop
jb
cmc
loope
xchg
sbb
jno
popa
cmc
popa
dec
jns
lahf
push
pusha
xor
dec
adc
int
fimuls
lock
mov
push
jl
call
aas
fists
into
xchg
mov
push
and
xchg
cltd
mov
xor
xchg
hlt
jne
add
sbb
fcoms
jmp
scas
pusha
xchg
and
idivl
ljmp
notb
add
insb
add
fwait
test
lcall
into
aad
mov
mov
jae
into
xor
mov
lcall
popf
add
inc
mov
fildll
cmc
pop
sub
jmp
cmp
lods
and
stc
jmp
in
xchg
stos
lea
cmp
adc
cmp
cmp
adc
test
lods
loop
mov
ljmp
iret
dec
mov
or
dec
out
inc
adc
and
pop
or
lahf
stos
or
aam
scas
or
repnz
outsl
dec
jl
pop
gs
dec
xchg
les
xchg
mov
stc
movsb
inc
js
and
inc
out
data16
dec
inc
add
sar
arpl
or
push
xchg
js
out
add
sub
xlat
call
nop
jle
fnsave
push
test
or
or
loop
xchg
sbb
and
xchg
scas
dec
aam
nop
xor
das
scas
jb
dec
or
xchg
jge
sbb
mov
inc
cmp
andb
mov
jns
out
mov
jecxz
stc
dec
cs
sub
mov
movsl
testl
jmp
aad
repnz
fidivrl
scas
xor
imul
push
xlat
and
jmp
push
adc
or
aam
mov
stos
sbb
xor
cwtl
hlt
test
adc
aad
test
frstor
pop
or
std
jl
ret
xchg
mov
jg
jbe
scas
cs
pushw
in
cwtl
mov
je
incb
call
mov
jmp
insb
dec
addr16
sub
enter
iret
xchg
sbb
inc
aam
rolb
adc
sbb
adc
xchg
inc
push
imul
pop
stc
shll
stc
adc
es
repnz
or
add
cmp
xchg
mov
sub
or
mov
lods
mov
loope
and
int
popf
aad
out
and
sub
iret
je
popa
sub
lret
fisubrs
adc
or
stos
cld
mov
cli
pusha
insl
adc
fs
fwait
jnp
sahf
into
mov
rcll
sbb
inc
dec
out
dec
rorb
nop
xchg
aad
cli
mov
adc
inc
xchg
push
imul
and
sub
cmp
ljmp
mov
fs
call
repz
sbbl
pop
jecxz
or
add
pop
xor
outsl
push
add
mov
dec
add
cmp
in
dec
aad
mov
mov
and
sub
add
int3
shll
jg
xchg
popa
fisttpl
jmp
sbb
sub
roll
or
cmc
jecxz
dec
ficoml
add
xor
mov
xlat
test
aad
int
cmpsl
ret
scas
lock
sti
fisubrl
repz
sahf
cwtl
push
stos
repz
sub
test
jbe
gs
icebp
mov
mov
jp
movntps
das
inc
inc
arpl
jmp
jo
dec
dec
rcrb
xor
push
fwait
sub
mov
adc
js
push
call
sub
mov
je
fs
stos
xor
sbb
in
dec
mov
sub
and
mov
add
adc
add
and
pushf
out
xor
jns
push
adc
pop
aaa
jae
bound
adc
dec
adc
nop
jae
aam
push
jnp
xchg
js
pop
dec
push
cmp
mulb
pop
xchg
cmp
mov
push
push
sub
rcl
mull
fsubrl
data16
add
ret
not
sub
and
out
pop
push
cmp
ret
jae
push
sti
out
test
adc
int
mov
aas
or
mov
loop
push
fdivp
push
test
sahf
aad
and
push
inc
clc
or
dec
xor
or
mov
push
in
int3
aam
jnp
sub
movsb
ljmp
andl
out
add
aas
shll
xorb
icebp
xor
push
mov
icebp
sbb
cmc
fistl
sub
lea
push
into
lret
ljmp
jns
mov
jbe
rclb
and
mov
insl
pop
add
cmp
popf
pop
mov
or
aam
sub
imul
sbb
dec
mov
std
mov
mov
push
inc
nop
in
sbb
push
into
and
js,pn
jnp
adc
mov
out
fucomip
js
mov
out
ret
inc
in
jp
fnsave
popl
mov
cwtl
ficoms
pop
push
mull
lods
out
xchg
inc
or
lock
mov
lret
jno
sbb
fcmovne
sbb
and
push
fmuls
pop
jno
ficoml
push
cmc
aas
cld
loopne
push
or
adc
filds
call
sahf
push
mov
sub
stc
fwait
cmpsb
out
popl
or
pop
push
test
lock
in
and
negb
mov
repz
and
das
lret
sbb
or
int
inc
shl
mov
push
or
std
lahf
push
xchg
dec
sub
sub
sub
pop
mov
iret
ljmp
mov
int3
addr16
jnp
rcl
inc
aaa
push
or
fstpl
les
push
sbb
sahf
sti
dec
cmp
js
sahf
les
lods
jmp
gs
mov
jne
jae
or
popa
popf
push
sub
movl
xlat
sub
cld
adc
jne
shlb
pop
jg
or
mov
pop
jno
cmpsl
call
daa
outsl
add
pop
mov
push
orb
out
pop
mov
not
sti
or
ffree
or
pop
popa
addr16
fidivl
xchg
fnstenv
xor
adc
add
imul
pusha
decl
movsl
adc
call
fxch
push
adcl
out
inc
icebp
sbb
fisubrl
push
cmpsl
xlat
inc
in
jmp
add
enter
in
out
mov
imul
mov
push
cmp
jl
adc
jns
popa
popl
repz
aam
stc
adc
leave
lea
movsl
cli
add
dec
mov
popf
stc
subl
ficomps
ja
add
fmull
push
jno
jl
out
add
int3
sub
lcall
inc
add
cmp
dec
aad
cld
bound
into
dec
daa
push
push
data16
ret
cmp
and
pfcmpeq
outsl
mov
sti
jnp
pop
add
add
loope
cmp
pop
jmp
jmp
in
andb
outsl
sub
idivl
jne
std
in
jns
xor
cmpsl
add
imul
lea
fs
jns
cmp
ret
mov
push
imul
jne
cmp
out
out
pop
cli
out
ret
xor
scas
inc
mov
repz
clc
cs
loope
jne
pop
jmp
xor
data16
fs
mov
mov
ffree
xchg
mov
pop
mov
jns
fs
cld
dec
out
inc
sbb
ret
fiadds
sub
sub
sbb
push
sub
add
cld
divb
andl
sbb
stc
jmp
mov
mov
das
mov
xor
cmpsb
xchg
daa
stos
mov
imul
or
or
sbb
mov
sub
imul
inc
push
lcall
inc
nop
sub
loopne
lods
dec
or
pop
xchg
dec
rcl
loope
push
or
out
mov
jb
lahf
aam
xor
push
mov
push
aam
jns
outsb
mov
data16
add
int3
jle
dec
shll
mov
popa
xchg
add
in
orb
fisubs
repz
addr16
lcall
ds
and
push
push
inc
aaa
iret
xlat
inc
xchg
push
cmp
movsl
lock
and
pop
jle
push
sbb
icebp
push
int
dec
mov
loope
mov
pop
or
mov
or
xchg
cmc
and
cld
clc
add
cmc
mov
mov
rclb
jmp
cmc
mov
jns
out
sub
ror
pusha
movsb
ds
sub
dec
fimull
test
or
push
lret
testl
xchg
mov
xchg
xor
mov
push
dec
inc
es
dec
in
jae
push
jmp
sti
imul
xchg
push
xchg
jo
jo
aam
aad
xchg
std
test
adc
pop
xchg
nop
sarl
jecxz
and
mov
xor
test
mov
repz
hlt
aas
pushf
xchg
subb
pop
cmp
arpl
adc
lods
xor
jg
sti
sbb
cmp
ret
inc
xlat
insb
xchg
mov
dec
lds
mov
js
xor
das
call
mov
add
add
push
aad
or
adc
outsl
ret
out
cmc
pop
sbb
lods
jl
in
xchg
jl
and
push
aam
push
jns
mov
add
subl
dec
mov
call
jb
lcall
and
pop
stos
insb
jno
sub
testb
outsl
bound
jg
fcompl
pop
lods
ja
lods
int
ficoms
imul
xchg
xchg
in
insl
add
mov
xor
rol
fucomp
sub
or
lds
lock
xchg
js
pop
cmpsl
mov
repz
xor
rclb
aaa
imul
jns
rclb
fldenv
mov
or
or
jo
jmp
inc
xchg
cmp
nop
xchg
mov
push
push
out
aad
jns
cmc
mov
adc
push
fndisi(8087
js
or
cmc
out
lods
inc
dec
xchg
jbe
lahf
divb
sub
mov
xchg
xor
repz
cmc
inc
adc
cld
gs
sbb
mov
cmpsb
mov
xchg
cmp
and
outsl
push
mov
sbb
mov
cs
sti
sarb
orl
in
dec
cmc
out
mov
mov
or
mov
dec
pushf
outsl
outsl
aam
movsl
jno
ss
loope
inc
inc
jle
push
fucomp
insl
xchg
dec
xchg
push
movsbl
pop
aaa
mov
hlt
adc
sahf
int3
jne
movsb
sub
insb
roll
in
jnp
pop
adc
fs
push
cmpb
jle
push
cmp
jb
mov
fucomi
js
stos
adc
in
adc
insb
cmpl
xorl
lcall
mov
jl
aaa
jl
test
cs
mov
mov
in
xor
cmc
lods
dec
push
dec
sub
and
fmuls
outsl
in
mov
lods
imul
mov
cli
test
fsubp
pop
aad
mov
xchg
and
push
outsl
shlb
into
push
cld
movsl
adc
jae
int
insb
xchg
dec
faddp
test
add
test
imul
jb
andl
pop
into
out
jmp
ss
js
mov
mov
xchg
adc
add
lahf
inc
sub
mov
mov
inc
cld
jecxz
add
div
lods
sub
dec
dec
lret
jmp
hlt
jg
jns
jecxz
jmp
out
add
repz
mov
pusha
mov
xor
cs
popa
call
mov
and
xchg
sbb
xchg
mov
stos
push
or
and
sub
dec
and
mov
jge
dec
mov
test
and
mull
into
sbb
or
lret
gs
cmc
adcb
pusha
dec
pop
or
and
lcall
inc
mov
push
fisubrl
push
addr16
inc
stos
loope
fwait
rcll
enter
and
lret
lret
pop
xchg
mov
inc
test
jno
pop
cmp
sbb
in
jae
adc
pop
mov
and
mov
inc
nop
push
in
jb
mov
ss
push
adc
popa
loope
adc
mov
cmp
fs
insb
in
dec
iret
aad
jo
and
push
xor
jl
push
cltd
scas
inc
lods
pop
xchg
add
adc
pop
xlat
in
adc
pop
int3
stos
sbb
pop
jp
cs
xchg
inc
es
jl
inc
adc
add
dec
push
out
aam
js
lods
or
test
inc
add
adc
aas
popa
lcall
daa
out
shlb
mov
inc
imul
sbb
mov
xchg
rcrb
shrb
xor
mov
jbe
in
es
mov
xor
adc
ds
rorb
xorb
arpl
outsl
out
push
into
notl
mov
das
lret
push
jp
loop
mov
or
outsb
dec
dec
sub
call
inc
das
mov
push
rcll
add
jl
mov
xor
into
inc
mov
lret
in
pushl
iret
scas
in
mov
aad
adc
adc
cli
sub
or
nop
mov
xchg
lsl
enter
mov
js
lock
or
inc
out
inc
mov
test
cmp
sub
insb
add
les
imul
jecxz
pop
push
xchg
lods
pusha
fisubl
cmpsl
stc
out
testb
dec
out
jp
mov
test
cmc
sub
in
sti
xor
cmp
mov
or
mov
sbb
jno
cmp
nop
mov
dec
fwait
decb
lds
mov
subl
stos
push
pushf
imul
out
inc
in
clc
pop
or
movsb
pop
popf
cmpsl
sbb
jge
sbb
or
ljmp
cmp
sub
popa
jnp
sub
inc
xchg
out
push
push
mov
xlat
aad
pusha
pop
sti
push
push
movupd
cli
inc
inc
push
ficoms
or
mov
xchg
mov
movsl
cmp
or
test
cmp
cmp
mov
lds
pop
out
aad
push
and
cmpsl
pop
in
pop
stc
mov
sbb
imul
ficomps
fcoml
cltd
or
call
or
jno
mov
dec
and
leave
push
mov
in
scas
es
out
mov
add
mov
ret
hlt
jb
in
movsl
or
add
repz
sub
mull
shl
outsl
or
cmpsb
mov
popa
fwait
std
jmp
outsl
out
sbbl
push
movsb
add
rcll
leave
pop
or
jge
push
stos
xchg
call
out
jle
dec
outsb
push
jp
outsb
mov
mov
cli
or
xor
mov
jns
lock
loopne
cmpb
mov
fdiv
xchg
mov
ret
inc
cmp
cmp
mov
lret
clc
les
push
test
in
add
cmp
sbb
out
nop
test
jbe
xchg
mov
shll
clc
mov
rorb
add
adc
sarb
jl
pop
jg
cltd
data16
xor
inc
adc
push
cld
mov
test
inc
iret
popf
jle
jne
sbb
or
inc
push
leave
int
ds
fmul
ljmp
mov
jmp
jno
rcpps
mov
xchg
add
rorl
cwtl
cmp
aad
iret
and
sbb
adc
cwtl
cmp
lcall
std
mov
das
fidivs
mov
xor
adc
into
hlt
popa
inc
stos
out
loope
out
jno
cs
inc
insl
and
cwtl
mov
adc
add
into
int
mov
cli
aad
mov
pop
cmp
inc
mov
xchg
mov
add
aad
or
or
dec
jmp
leave
pop
sahf
movsb
push
xor
pushf
or
push
xchg
mov
cmp
imul
test
mov
push
shlb
jo
xor
push
mov
add
jmp
sbb
or
js
sub
mov
test
dec
loope
aad
xor
push
aas
mov
in
adc
dec
mov
inc
sbb
xor
pusha
jmp
xchg
scas
sub
cld
sti
aad
test
pushf
add
mov
add
mov
pop
dec
mov
jp
cmp
dec
repnz
pop
fdivr
in
or
sub
scas
adc
jno
push
pop
adc
ficompl
sti
xchg
jns
adc
inc
jns
jmp
clc
adc
pop
pmaddwd
push
bound
add
call
push
xchg
pop
fimuls
aad
mov
sbb
clc
mov
sti
sbb
xlat
push
pusha
inc
add
cld
cmp
adc
and
or
ja
icebp
cmp
ja
inc
cmp
ljmp
dec
out
mov
into
pop
sbb
jecxz
sub
stos
stc
nop
cmp
push
mov
mov
fcoms
adc
imul
inc
cli
daa
mov
xchg
jnp
test
dec
jnp
sub
inc
fcmovbe
sub
xchg
adc
rcrl
dec
clc
sbb
test
out
cmp
dec
cld
adc
loopne
das
sub
mull
movsl
rorb
push
fldt
cmp
iret
leave
aad
and
mov
push
out
aam
sub
shll
loop
les
popa
xor
outsl
out
inc
jnp
mov
shrl
call
cmp
mov
cmp
dec
xchg
xchg
adc
sbb
dec
add
dec
sub
adc
idivl
push
lods
arpl
add
inc
fistpll
in
loop
fcoml
jmp
jl
fisubrs
mov
popa
les
xor
movsl
out
dec
rcrl
jno
cli
inc
popf
scas
xchg
in
sbb
jmp
cmpsb
popf
cmc
ss
js
pop
xchg
inc
sti
pop
int
loopne
fisubrl
imul
add
iret
aad
aad
xchg
subb
out
and
stos
movl
and
fsubrs
pop
scas
into
add
out
lds
xor
mov
jp
and
inc
pusha
and
xchg
scas
pusha
dec
mov
out
pop
daa
aad
mov
in
cmc
movsb
out
add
imul
jge
xor
pop
pushl
nop
loopne
int
cmp
push
stos
jae
push
push
mov
cmc
decb
or
testl
into
call
sbb
mov
push
jmp
and
jge,pn
mov
mov
and
mov
jecxz
sub
sahf
scas
or
jecxz
or
dec
dec
stos
xor
cmp
loopne
or
or
in
sbb
pop
push
jae
cmp
or
sub
cli
scas
repz
or
out
loope
jge
stos
popf
aaa
mov
pop
or
popl
mov
mov
push
imul
aad
sbb
cmp
imul
jne
mov
dec
or
mov
dec
mov
into
iret
adc
xor
mov
inc
dec
sti
loopne
dec
pop
push
ret
testl
push
inc
setge
test
das
xor
mov
pop
idiv
test
addl
fnstcw
aad
cmp
out
test
push
inc
insl
jne
nop
mov
xchg
arpl
sub
psraw
and
mov
mov
cmp
aad
stc
push
pop
pop
mov
fnsave
aad
into
inc
repz
sbb
jg
idivl
mov
fnsave
and
mov
stos
mov
cmp
out
je
lahf
pop
addl
xchg
add
and
adcl
test
pop
aas
scas
insb
inc
rcrb
jb
lods
test
icebp
adc
cmp
jnp
outsl
mov
dec
mov
jg
fistl
in
lret
bound
mov
mov
into
shrb
push
jmp
mov
test
out
lods
and
dec
sbb
loop
add
mov
xor
push
pop
lock
adc
lods
cmp
push
lods
scas
mov
iret
jnp
add
sbb
and
dec
xor
xchg
mov
push
mov
fidivl
jl
mov
shl
movsl
push
push
out
inc
in
fnstcw
adc
sub
xchg
push
xor
or
lcall
jp
and
int
cmpl
js,pn
setne
popf
fs
stc
out
cmp
mov
or
xor
adcl
rolb
fucomip
out
mov
fiadds
jmp
sub
adc
loopne
dec
divl
add
out
lahf
mov
mov
popa
imul
mov
movb
ret
aad
pop
icebp
push
push
les
adc
rol
adc
pop
fstl
dec
adc
cld
and
xlat
scas
insl
or
and
inc
push
push
shrb
xchg
hlt
movsl
adc
cmp
int3
and
das
orl
aad
out
jns
fsubrl
les
jmp
stos
mov
lret
mov
add
in
mov
push
mov
imul
pusha
mov
dec
jl
xchg
dec
xchg
xchg
std
icebp
jg
imul
sarl
adc
cs
in
scas
xor
cmp
or
cwtl
popf
ret
push
test
xchg
out
repz
xchg
dec
inc
js
xchg
aaa
dec
mov
mulb
imul
push
imul
and
popa
sarl
fstpt
insb
rorl
clc
dec
sub
dec
push
repz
xor
mov
je
ud2
pop
loope
mov
sub
jl
scas
ss
jne
aad
dec
jmp
mov
aad
notb
push
test
popf
shl
insl
jecxz
and
mov
xor
lret
jns
add
cs
adc
popf
lock
scas
pop
xor
inc
cmc
sbb
in
fwait
sbb
cli
ficomps
add
jnp
push
outsb
cmpsl
adc
cmp
and
or
pop
cmpsb
cmp
in
mov
mov
insb
mov
rorl
into
aas
cmp
lret
out
icebp
jp
and
fstpt
outsl
sbb
orb
push
cmc
mov
or
cmpsb
mov
xchg
mov
negb
dec
xchg
das
cs
xchg
popf
inc
fists
sub
pop
cmp
push
jmp
inc
pusha
adcl
or
cmc
ror
push
mov
add
ret
pop
xchg
dec
inc
shl
add
mov
popa
xor
leave
cltd
into
out
push
adc
lds
int
js
mov
mov
sti
dec
pop
sub
xlat
xor
scas
std
cmc
fwait
xlat
or
cltd
mov
fimuls
dec
sub
inc
insl
dec
ljmp
ja
shlb
outsl
xchg
add
cmp
lea
jecxz
pop
dec
lahf
adc
or
pop
jns
fidivl
cmc
js
adc
xchg
sbb
clc
lea
loopne
sarl
pop
lock
xor
loopne
testl
mov
fiaddl
xchg
out
movsl
sbb
push
into
or
push
in
dec
xchg
xchg
jno
sub
jp
lahf
sarl
and
inc
ljmp
or
mov
jmp
inc
std
or
xchg
pop
imul
imul
push
stos
fildll
mov
fwait
push
jne
sti
rorb
sub
out
mov
sti
push
adc
push
jns
loop
jmp
jb
mov
push
sahf
jge
call
fdivr
aad
ljmp
push
test
jae
loope
jp
cmc
out
xor
mov
mov
flds
sub
or
loopne
mov
dec
mov
adc
xor
lods
mov
insl
in
sub
jmp
imull
dec
cmc
aas
sub
shrl
dec
cld
jns
cmp
mov
sub
jge
push
adc
cmc
mov
and
mov
loopne
dec
or
and
pop
gs
aad
mov
stos
push
daa
pop
mov
notb
imul
or
cli
jnp
mov
andl
jp
test
enter
push
push
jne
mov
cld
fidivs
in
and
inc
mov
sub
jl
roll
adc
clc
push
adcb
mov
dec
mov
scas
add
ret
pushf
pusha
call
inc
push
fs
pop
and
adc
or
addl
insl
mov
sti
dec
dec
pop
popa
pop
aaa
fidivrl
mov
jnp
cmpsb
push
and
and
cmp
ljmp
mov
add
jg
dec
repz
mov
sub
or
jne
cs
jns
out
xor
mov
jo
rolb
arpl
adc
xchg
and
aad
mov
mov
les
cmp
xchg
and
mov
in
mov
stc
mov
aam
jecxz
fstpt
rcrb
jl
cmpsl
movl
dec
std
loopne
enter
int
pop
lahf
into
adc
push
mov
shrb
test
int
push
shrl
out
adc
adc
das
push
jbe
lds
jae
or
mov
insb
pop
arpl
mov
aad
ja
aam
js
xlat
cmp
dec
add
mov
test
cwtl
adc
fs
xorl
test
iret
movsb
mov
or
daa
cld
add
andl
push
fldenv
inc
or
and
sbb
incb
sub
or
inc
test
push
ficomps
popa
xchg
ret
idivl
loop
or
int3
aad
jmp
push
pop
dec
xor
or
adc
xchg
jne
and
scas
ss
xor
pushf
scas
jl
xchg
push
loop
and
jmp
insl
push
mov
aad
arpl
in
jae
stos
testb
push
fs
push
mov
xchg
add
js
aad
mov
and
popa
cmc
mov
clc
mov
mov
lcall
and
aaa
test
jmp
cs
fdivp
adc
push
aad
ja
mov
sub
sub
xchg
loope
in
int3
and
shrb
mov
push
pop
jne
dec
dec
div
into
fcmovnbe
test
notl
notb
lock
push
les
icebp
or
in
clc
mov
js
xchg
sub
jae
inc
in
jp
push
enter
in
pop
jp
movsb
pop
inc
filds
aad
pop
dec
xchg
xor
adc
jle
popa
or
adcl
enter
cmp
out
push
imul
in
aad
mov
push
lods
jb
cmp
les
lods
sahf
fwait
test
clc
mov
mov
aam
imull
ja
jae
add
pop
push
nop
add
push
pop
push
sbb
rol
clc
mov
les
dec
adc
cmpsl
and
lcall
xchg
and
jmp
fisttps
cmp
call
inc
lea
push
push
cltd
into
aad
ftst
fiaddl
mov
mov
dec
pop
mov
jp
and
in
stc
into
inc
xchg
sbb
sub
push
inc
cmp
fwait
cwtl
mov
add
sub
shl
movsl
lea
pop
cld
rcl
mov
push
pusha
es
mov
pop
into
or
mov
adc
mov
jmp
or
xor
cmp
insb
in
test
clc
xchg
cmc
or
iret
sub
jmp
jle
cmpsb
mov
pusha
mov
cmc
cmp
loop
je
les
popa
pop
fidivrl
xor
push
jnp
push
push
pusha
push
out
adc
fs
bound
mov
inc
xchg
sbb
cmp
mov
in
pop
pop
push
mov
mov
mov
cmp
in
inc
and
pop
sti
jnp
cmc
arpl
add
pop
or
xchg
jecxz
jnp
out
cmc
js
push
cmpsb
pop
pop
push
fbld
aad
push
loope
xchg
pop
into
mov
push
or
ficomps
lea
call
push
pop
in
or
loope
fcmovnu
mov
dec
cmp
dec
cmpsb
mov
push
dec
or
xchg
xchg
nop
subl
jmp
insl
std
rcll
xchg
or
push
dec
cli
add
adc
mov
jge
shrb
dec
cmc
xchg
add
cmp
test
leave
mov
jo
int
mov
daa
insl
add
jmp
adc
outsb
dec
mov
aad
xchg
mov
sub
mov
cmpsb
mov
in
mov
jmp
call
hlt
mov
in
jnp
adc
movsl
iret
xor
negb
cli
adc
jno
stc
pop
ja
and
cmp
int3
int
lds
and
neg
fadds
pop
leave
sub
into
int3
mov
loopne
mov
xor
cli
add
movsb
stos
mov
imul
cmc
cmp
cmp
add
inc
out
cli
repz
testl
mov
popa
and
or
daa
cmc
or
dec
or
dec
lds
lods
push
mov
inc
push
dec
mov
or
jmp
fs
sub
inc
mov
fs
stos
inc
shr
call
jno
mov
xchg
shll
inc
dec
cmpsl
jmp
pushf
int
out
xchg
mov
pop
mov
and
add
mov
popa
cmpsl
loope
xlat
cmc
or
sarb
xor
cwtl
inc
cmp
jae,pn
addr16
arpl
pop
dec
nop
in
add
aad
mov
xlat
sub
cwtl
pop
into
div
inc
mov
imul
or
cmp
adc
cld
push
fidivrs
cli
jmp
push
in
mov
xlat
call
jnp
in
cmp
mov
or
nop
adc
fsubs
cmpsb
sub
xor
add
out
adc
mov
and
mov
pop
push
fistpl
cmc
gs
imul
xor
popa
ja
mov
cmpsb
or
add
sub
clc
cld
jl
sub
clc
in
imul
jp
push
iret
lods
loope
mov
sbb
cmpsb
or
dec
aad
cmpsb
popf
lock
stc
stc
scas
cmc
in
aad
lret
lods
inc
cmpsb
and
movsb
stc
mov
mov
pop
xor
and
lods
out
sub
cwtl
mov
enter
xor
mov
rcll
jge
and
leave
aad
jbe
jp
ss
cwtl
sahf
dec
jmp
ljmp
cmp
nop
iret
outsl
xchg
addr16
aam
or
fiadds
add
fiaddl
pop
dec
outsb
ret
shlb
orb
push
test
add
and
pop
sub
sti
xchg
in
sti
push
dec
cmp
hlt
ja
push
push
xchg
add
insb
sub
sti
jns,pn
in
xchg
pop
cmpsl
loopne
popa
lahf
cmp
aam
adc
dec
sub
imul
sti
jae
pop
int
and
dec
xchg
push
dec
push
adc
mov
addr16
pop
mov
aad
jns
nop
ss
mov
sahf
das
sbb
xchg
xor
pop
jle
mov
xor
sbb
pusha
mov
cmp
adc
push
divb
xchg
xor
sti
mov
adc
jb
les
mov
cmp
pushl
shll
jb
daa
and
jae
push
int3
cmp
push
and
pop
xchg
sbb
lcall
out
xchg
push
dec
lret
or
outsl
sbb
or
mov
test
push
sub
xor
push
movsl
call
fwait
sub
pusha
inc
xor
stos
adc
or
mov
push
xor
sub
and
dec
mov
cld
and
dec
cld
dec
aad
jnp
pop
mov
cld
xchg
stos
cmp
cmp
notl
or
scas
sub
dec
pop
int3
or
fsubrs
dec
addr16
or
and
repz
mov
xchg
cmp
cli
dec
sub
push
adc
pop
imul
in
lea
adc
popf
aad
dec
cmp
fimull
xlat
sarl
xlat
add
xlat
mov
mov
mov
popf
jb
enter
call
fisttpl
xchg
mov
popa
ja
int
rorb
xchg
dec
jle
lds
xchg
setne
rcrb
ljmp
xchg
mov
pop
popf
je
test
outsb
adcb
push
test
fsubrs
in
cli
cmc
dec
sbb
lea
jge
jecxz
scas
jge
stc
push
std
push
mov
add
mov
jecxz
mov
fisttps
jle
test
xchg
inc
sahf
sbb
xor
xchg
adc
adcb
push
pop
aad
dec
sbb
sub
ljmp
faddl
out
ja
jp
idiv
fs
sub
add
fcmovnu
clc
int
int
pusha
xchg
mov
dec
flds
adc
dec
fstl
adc
sub
adc
sbb
arpl
lret
mov
movsl
add
sahf
orl
movsl
aad
subb
imull
push
or
idivl
pop
jno
fsubrl
push
jmp
cmp
xchg
push
mov
loope
pop
and
out
lods
das
fadds
sub
mov
mov
xchg
lods
pop
push
cmp
add
push
dec
xchg
sub
aam
mov
push
dec
jl
mov
icebp
or
fwait
test
scas
out
add
enter
or
cld
cmc
rorb
out
negl
push
lcall
gs
dec
fists
push
sub
xor
dec
js
add
push
mov
inc
dec
sub
test
lds
iret
addr16
js
xchg
jb
aad
fisubs
push
cmpsl
ret
jg
cltd
dec
cmp
mov
ss
scas
inc
cwtl
jmp
pop
sti
inc
testb
push
dec
loop
jp
aad
add
cs
pop
in
mov
dec
pop
mov
cmp
lcall
aad
fistpl
jp
lods
idiv
stc
push
pop
sub
push
loope
sti
sbb
jl
mov
adc
cmpsb
mov
mov
cmc
mov
in
pop
out
popf
lods
push
add
cmp
and
dec
mov
andl
outsl
jmp
test
mov
out
in
imul
jnp
loope
or
and
outsb
pop
mov
mul
sub
add
ljmp
ljmp
pop
and
scas
inc
push
arpl
xor
sub
and
aas
test
or
mov
push
scas
addl
mov
sub
testl
stc
mov
int
lret
lret
xor
dec
out
arpl
sbb
mov
into
aam
iret
js
xlat
xchg
xchg
adc
lods
mov
jmp
int3
jns
cmp
insl
sbb
xchg
jb
fidivs
loope
outsl
aad
in
sti
leave
mov
adc
mov
rorb
jns
out
aad
arpl
xchg
dec
mov
adc
add
jne
mov
rcr
iret
adc
and
cmpb
loope
xor
or
cmc
pop
or
or
inc
lret
pop
jp
insb
cmp
js
sub
jmp
shlb
and
cmp
in
out
push
aad
fst
popa
dec
add
dec
mov
cmp
mov
add
add
sub
jl
repz
ljmp
out
dec
js
and
push
mov
xchg
push
fcompl
frstor
imull
inc
clc
xchg
push
or
cmp
sub
aad
xor
or
stos
loope
in
ljmp
ficompl
mov
lret
int
aam
cmp
pushf
loope
sub
nop
daa
push
sbb
lods
and
cmp
add
jne
je
add
loop
test
sti
xchg
sbb
cmp
sbb
sub
jno
out
movsl
int3
xchg
arpl
sub
or
pusha
fistpll
jge
add
jp
in
test
pop
jecxz
je
jo
pop
movl
rcr
icebp
ljmp
jmp
xchg
cmp
xchg
movsl
aas
mov
ret
aad
mov
rorl
mov
cmp
add
test
sub
dec
int
cmp
jl
popf
aas
or
aam
jl
xlat
mov
sub
inc
ljmp
pop
sti
insl
insl
sub
jae
enter
mov
es
jmp
mov
test
adc
loope
push
cwtl
outsl
aaa
outsb
xor
mov
cmc
xor
mov
inc
xchg
sbb
les
cmc
ss
or
push
or
mov
lcall
and
dec
jge
add
adc
cmp
and
dec
push
aad
mov
mov
cmp
jmp
inc
pop
out
fadds
jbe
mov
aad
les
lods
scas
dec
pop
jb
mov
adc
aad
push
test
js
dec
test
popf
addb
call
es
rcr
fcompl
push
or
fsubs
pop
aad
out
in
sub
push
mov
inc
push
inc
xor
mov
sub
push
jecxz
outsl
icebp
out
test
mov
int
push
cmpsl
ror
sbb
stos
mov
imul
call
add
dec
mov
xor
movsb
roll
mov
inc
adc
pmullw
cwtl
outsl
sub
mov
or
fdivl
mov
and
out
stc
sub
out
ja
ljmp
jl
and
cmpsl
xchg
mov
lcall
xchg
outsl
cmp
iret
stc
cmp
pusha
rolb
into
sub
insb
cli
pop
or
cmpsb
in
inc
je
lcall
lods
or
stos
cltd
push
arpl
add
js
pand
ficoms
and
mov
gs
imul
mov
negb
push
fstps
push
mov
sub
outsl
sub
idivb
mov
aas
lea
jecxz
xchg
cli
mov
sbb
cmp
in
xor
testl
std
or
scas
xor
outsl
push
stos
das
shld
popf
dec
adc
mov
inc
or
rcr
mov
out
pop
sbb
aad
and
mov
cwtl
pop
push
and
mov
push
dec
hlt
imul
dec
xor
cs
imul
ljmp
jb
mov
aad
jp
subl
lock
pop
ss
sub
push
test
leave
popa
sti
pop
mov
addr16
add
mov
imul
scas
xchg
cmpsl
sbb
out
dec
mov
lods
jmp
push
pop
xchg
cwtl
std
mov
push
cmp
in
jp
xchg
or
inc
jns
pop
punpcklwd
adc
or
in
into
sti
mov
inc
lahf
jge
pmulhw
gs
hlt
aas
call
sbbb
jecxz
pop
add
lret
cmp
js
push
jno
sbb
js
addr16
out
mov
pop
stc
lcall
pop
cmp
gs
add
mov
lret
aad
xlat
ljmp
cmc
repnz
xor
fucom
push
cmp
sarl
fildl
xchg
out
pop
xchg
daa
lea
push
aad
leave
xchg
jmp
jl
or
mov
ficoms
inc
push
cmp
add
xchg
aad
cwtl
icebp
cmp
sahf
decl
ljmp
rol
jmp
filds
lods
scas
adc
cmp
popf
out
test
in
cltd
in
nop
mov
pop
pop
into
dec
mov
ss
dec
push
mov
push
sahf
scas
jo
xlat
gs
push
sub
or
sbb
cmc
mov
movsb
nop
push
mov
jns
insl
gs
push
nop
call
mov
or
cmp
pop
or
mov
cmp
mov
call
loop
cmc
sub
arpl
adc
mov
mov
and
ret
dec
xchg
jb
fstpt
jmp
dec
pop
push
aad
insb
sarl
mov
aad
sub
lret
mov
inc
mov
push
xchg
cmp
and
and
cli
add
push
mov
xchg
mov
lods
and
inc
mov
outsb
mov
enter
adcb
mov
adc
cmp
pop
insb
and
js
sbb
adc
mov
push
loope
add
cmc
ret
cmp
cmp
mov
jbe
ds
or
das
sbb
das
int3
push
gs
cld
cmp
adc
adc
sahf
call
lods
add
addl
leave
cmp
pop
xchg
fidivrl
repnz
loope
pop
sbb
push
or
mull
in
cmp
ret
mov
fsubrl
sahf
mov
adc
jae
movsb
dec
shlb
ljmp
fidivrs
bound
dec
xor
sub
jl
out
lods
es
cmp
xchg
sub
lahf
xor
xor
or
mov
jns
idiv
shrl
jno
test
xor
mov
nop
push
stos
mov
or
xorl
cs
dec
fadd
add
or
lret
push
sarl
lret
inc
lods
xlat
je
ljmp
cmc
insl
push
push
push
icebp
sub
dec
in
out
or
jbe
jecxz
xlat
inc
xchg
stos
in
mov
jo
rsqrtps
fdivs
sub
jmp
shl
mov
ficoms
lods
jb
shrl
sub
loop
cmc
dec
mov
xor
nop
push
bound
or
rorl
scas
sbb
push
sub
pop
push
and
mov
push
inc
xchg
lcall
popa
jmp
fildl
test
test
rep
jl
aad
pop
in
inc
mov
cmp
jmp
in
mov
push
loop
rol
imul
sbb
addr16
add
cmpsl
out
inc
hlt
popa
jns
push
sbb
cmp
pop
xor
stos
xlat
cs
dec
fwait
inc
js
outsl
cmp
adc
jno
pop
out
cmpb
stc
rclb
cmp
nop
or
mov
mov
mov
mov
mov
iret
idivb
pop
dec
lahf
in
lahf
mov
inc
jne
mov
mov
pop
lods
sub
add
ret
shlb
jg
or
or
testl
push
jl
mov
mov
lret
inc
mov
lock
dec
repnz
and
negl
rorb
shll
and
daa
scas
xchg
cmp
cmpsl
push
pop
mov
loope
jbe
push
fwait
xchg
shl
jne
js
jg
rcll
out
or
mov
push
push
addb
loope
loop
loope
sub
cmp
aad
dec
popa
dec
xchg
lock
adc
shlb
aad
nop
adc
mov
std
addr16
icebp
dec
mov
cmp
mov
and
scas
jg
enter
cmpsb
dec
pop
scas
popf
and
sarb
movsb
mov
pop
movsb
cs
icebp
cmp
cmc
int
inc
mov
mov
insl
jns
add
pushf
clc
sub
add
clc
stos
xchg
cmp
and
xor
in
xchg
and
jle
or
cmp
jmp
stos
int3
mov
pop
clc
ror
cs
lods
cmp
sbb
jg
or
sbb
jne
sarb
push
xlat
aaa
mov
push
lea
sub
xlat
cmc
lock
jno
fsubs
xchg
test
les
cmp
es
fwait
mov
push
test
lahf
sbb
pop
push
lret
and
psubd
pop
scas
roll
je
mov
sub
mov
pop
imull
xor
push
rcr
sub
sbb
sub
xchg
adc
cwtl
dec
jnp
mov
test
pushf
sti
aad
sub
aam
jmp
das
jge
pop
stc
sti
lcall
xor
icebp
mov
ss
shrb
pop
mov
push
mov
into
cld
popa
into
popa
call
scas
nop
add
sub
aad
pop
mov
pop
jne
out
pop
push
out
jnp
adc
pusha
in
fisttpll
mov
leave
xchg
jp
mov
shlb
add
mov
loope
std
pop
jnp
xor
jmp
lret
lahf
jnp
dec
pop
cmp
and
stos
mov
rcrl
lahf
sbb
test
loope
add
aam
add
sub
push
sbb
jnp
pop
jne
cmp
adc
xchg
lea
mov
cmp
es
bnd
add
shrb
movsb
mov
xor
mov
cwtl
imulb
push
out
pushl
movsb
lock
mov
roll
shlb
in
push
add
push
aam
std
imul
cmc
sti
in
pop
aam
dec
fnstcw
inc
test
out
sub
iret
fcomps
push
cmp
mov
rorb
dec
pop
gs
testl
add
pusha
adc
out
push
jecxz
cmpsl
inc
movsl
xchg
outsb
loope
jl
scas
in
nop
cmpb
dec
push
aad
lret
mov
ret
pop
xchg
jae
inc
scas
mov
cmp
andb
nop
sub
or
sbb
stos
push
mov
jmp
mov
cmp
mov
add
and
daa
xchg
ljmp
sub
test
aam
cs
cli
mov
jnp
pop
and
mov
js
insb
addl
add
inc
xchg
cwtl
adc
cmpsl
enter
insb
aam
cmp
aad
shlb
or
or
mov
insl
scas
push
enter
aad
jge
frstor
and
sbb
outsb
and
js
aad
inc
out
in
into
in
or
add
and
mov
mov
cmp
cld
negb
cmc
adc
incb
sub
shll
xor
movsb
into
pop
and
pusha
lock
dec
mov
and
jge
mov
fs
mov
sahf
push
mov
fstpl
inc
call
mov
rclb
mov
jns
cmpsl
pop
hlt
dec
sbb
inc
adcb
push
ficompl
xchg
mov
sbb
sbb
cmc
lea
pushf
shl
imul
dec
jns
jns
xchg
add
addr16
sbb
pop
and
dec
popa
imull
pop
xchg
cmp
fs
xchg
aad
sub
dec
mov
pop
jmp
pop
and
loop
std
pop
out
or
mov
xchg
je
aad
out
mov
jmp
pop
push
ja
push
push
testl
push
leave
jl
pusha
sub
std
push
aam
dec
mov
jle
shr
xchg
mov
dec
push
into
jnp
or
shll
stc
sbb
shrl
lea
dec
hlt
movsl
insl
vmovdqu
or
repz
push
aas
dec
dec
orb
pop
test
in
fsubrl
inc
sub
cli
rcrb
pushf
mov
push
cmc
dec
cmp
rcll
jecxz
lcall
fwait
das
mov
outsl
imul
popa
cmp
addr16
fidivrl
loop
sbb
popf
sbb
imul
adc
xchg
jno
repnz
jl
xchg
sub
mov
sub
cmp
xchg
in
dec
jne
mov
int
mov
stos
adc
rorb
mov
cmp
push
xchg
sub
or
fcom
push
jmp
in
cmp
shrl
push
pop
ss
add
sub
dec
shrl
lret
jmp
xchg
push
lds
arpl
aaa
ficoms
xchg
mov
push
pop
push
inc
sub
stos
rcr
in
outsl
mov
inc
ret
and
add
pmaddwd
or
into
outsb
int
dec
jmp
inc
add
call
sbb
negb
xchg
dec
or
aad
in
fsub
in
movsl
xchg
pop
and
push
cmp
xorb
push
notl
jmp
int
xchg
into
pop
insl
jp
cmc
rorb
mov
inc
and
jnp
inc
jle
stos
mov
test
les
ret
std
sub
mov
adc
jp
cmp
mov
jle
add
loope
sarl
and
insb
insl
out
push
push
fisttpl
push
sub
jl
aad
pop
aad
divb
mov
call
or
cmp
out
inc
out
jp
movsb
mov
test
fstpt
dec
in
mov
sbb
int
cmc
adc
xor
inc
cmp
cmp
cmp
jmp
iret
enter
xor
jne
pop
loopne
je
adcb
int3
push
ror
pop
rolb
pop
xor
lods
lret
jnp
mov
mov
pop
xor
bound
cmp
idivb
lock
popa
cmpsb
inc
and
jne
mov
xchg
sbb
dec
xchg
mov
movb
push
xorl
push
lea
int
movsb
mov
lock
mov
test
or
mov
or
jecxz
cmp
adc
jge
mov
popa
stos
imul
inc
jle
bound
pop
jo
jns
mov
cmpsb
push
adc
mov
repnz
out
mov
or
jmp
loope
xor
adc
cmc
dec
pop
jge
aad
fs
jecxz
adc
xadd
fdivrl
dec
cmc
shll
push
lods
pop
pop
clc
dec
es
js
jbe
int
inc
daa
mov
pop
jmp
out
or
outsb
lcall
pop
or
mov
lea
stos
jb
imul
or
lods
mov
jl
push
xor
ss
mov
testl
cmp
bound
and
mov
push
sub
inc
and
fcompl
cwtl
xor
or
loopne
jno
fcom
adc
pop
mov
test
sti
dec
inc
in
ljmp
in
mov
adc
adc
imul
mov
add
cmp
int
fnstenv
cmp
inc
shll
daa
std
add
in
loope
inc
sub
sub
in
push
mov
icebp
mov
sub
or
mov
pusha
movsb
int
cmpl
lret
lea
popl
push
pop
lods
inc
scas
mov
mov
jmp
test
test
xchg
daa
aad
mov
orl
cmpsb
adc
cmp
outsb
inc
dec
jnp
xlat
pop
jns
pop
jge
push
mov
or
test
dec
inc
mov
lds
adc
dec
cmpsl
xchg
jo
dec
lods
jns
jmp
ret
mov
mov
call
or
adc
imul
sbb
sbb
xchg
cmc
xchg
jnp
icebp
clc
cmpsl
mov
sbb
mov
aad
mov
mov
xor
pushf
pusha
into
shlb
shr
jno
sub
outsb
sub
in
mov
ret
push
push
xor
repz
insb
mov
cmpsb
lock
wbinvd
mov
jge
out
push
mull
xchg
or
jo
xlat
dec
sub
scas
dec
imul
repz
js
jl
xor
push
fxrstor
xor
loopne
cmpsl
push
mov
ljmp
iret
add
jns
lock
push
add
jo
sub
mov
popl
movsb
adc
mov
das
push
xlat
cmpsb
or
adc
addb
add
sbb
jge
jp
movsb
out
pop
int
les
xchg
xchg
xchg
cmpsb
lock
in
sub
sbb
js
insl
jmp
mov
jns
jle
test
popa
mov
fucom
dec
fucomip
call
mov
xchg
mov
rcll
ljmp
cmpsl
aas
sbb
xor
pop
rol
mov
add
mov
test
xchg
cmp
push
or
dec
scas
fists
push
out
popa
aam
mov
lret
pop
sbb
adc
cli
test
push
andnps
stos
pop
cmp
inc
seto
int3
leave
aaa
rclb
iret
xchg
js
push
fmulp
aad
das
sahf
mov
pop
setne
iret
and
xor
hlt
adc
cmp
jg
int
pop
cs
push
mov
std
push
int
xchg
cmpsb
mov
insl
mov
mov
aad
jl
dec
xchg
in
xchg
ljmp
loope
in
mov
add
mov
and
loope
inc
int
jbe
dec
out
jns
mov
jne
mov
insl
cli
cmpsl
out
pop
inc
outsb
int3
and
xor
inc
adc
push
jns
shrl
mov
adc
aad
scas
es
and
fidivrs
dec
or
add
or
xchg
and
xor
xchg
cli
in
ror
setle
fwait
lea
in
mov
cmc
xchg
or
test
out
cs
out
test
cmp
and
mov
dec
aad
cmp
sti
inc
pop
or
pop
or
pop
insl
xor
lahf
aad
push
inc
jg
notb
leave
insb
rclb
jno
dec
or
dec
mov
dec
jmp
arpl
addl
xchg
dec
push
lahf
mov
add
xor
inc
adc
test
mov
xchg
cmp
jbe
test
cmp
jp
dec
movsl
jb
bound
or
dec
aad
push
in
xchg
flds
and
int3
and
lods
imul
sub
sbb
daa
ja
out
mov
mov
cmp
xor
ljmp
sbb
movsb
dec
push
das
ret
mov
pop
adc
mov
outsl
stc
cltd
std
stos
mov
aam
fimuls
lods
push
jmp
lea
iret
sub
jno
ret
into
fidivrs
popa
jge
lret
jae
sub
int
sub
hlt
inc
xchg
stos
sub
out
popf
dec
push
mov
int
and
rcrb
shl
or
jle
jle
repz
xlat
pop
pop
popa
cld
mov
ja
xchg
xor
jo
push
pop
push
fsubrl
or
pop
add
int
ror
cld
mov
sub
nop
pop
lock
dec
inc
mov
push
movsb
jae,pt
inc
ljmp
mov
mov
and
mov
sub
pop
ret
and
mov
inc
add
nop
xchg
mov
ja
pop
lods
dec
outsb
jnp
iret
ficoms
fnsave
inc
int3
sti
nop
mov
test
jb
imul
int
jnp
mov
xchg
xchg
push
push
fmulp
cmp
nop
into
add
xchg
stos
pop
test
mov
mov
or
aad
jl
stos
xchg
test
popa
inc
in
int3
push
into
push
mov
fstl
xchg
call
mov
popf
push
lods
mov
mov
cmp
shlb
mov
mov
add
loope
jg
or
push
scas
lock
pushf
pusha
inc
inc
mov
cwtl
in
fnsave
stos
in
shl
fiaddl
adc
popa
adc
dec
cmp
inc
idiv
cmp
xor
nop
or
cmc
sub
scas
gs
cmc
pop
loopne
mov
jmp
fiaddl
loopne
subb
nop
jg
iret
xchg
dec
jo
aad
sbb
dec
cmp
xchg
aad
test
lcall
cltd
lcall
xchg
cmp
je
movsl
mov
pusha
out
dec
enter
lahf
lret
jecxz
xchg
add
lahf
ret
push
mov
popf
scas
cmpsb
incl
add
or
dec
mov
jl
xlat
rcll
sarb
sub
sbb
mov
test
mov
adc
lahf
test
or
xor
aad
xchg
je
cmp
pop
out
loope
out
cli
repz
sub
test
cld
outsl
stos
lods
stc
cwtl
push
push
push
pusha
faddl
cmc
mov
incb
mov
sub
push
mov
cwtl
stc
js
mov
adc
xchg
pop
fistpll
xor
repnz
and
sub
repnz
mov
movsl
xchg
jae
aad
popa
mov
xchg
jae
inc
clc
stos
lea
push
cmp
cmp
and
ds
mov
out
rcrl
jge
rcrb
dec
jg
ljmp
or
loope
jb
push
dec
lret
push
jmp
das
mov
cmp
inc
loope
out
dec
loop
lods
cmp
insb
or
pop
out
lods
call
mov
addr16
fimuls
outsb
cmp
aad
adc
cmp
xor
push
push
xlat
inc
and
cmp
pop
fs
mov
inc
or
xchg
int
repz
out
ret
pop
je
jo
xchg
call
sub
pop
cmpsb
xchg
nop
mov
jae
gs
addr16
adc
stc
stos
dec
jb
cmp
cmc
aad
push
sti
outsl
inc
pop
fsts
mov
js
xchg
and
nop
xchg
jns
add
pop
les
lock
in
pop
aad
stos
adc
lahf
rcr
mov
sub
nop
fmull
rol
or
pushf
xor
sti
cmpsb
rolb
mov
adc
addr16
push
xchg
scas
cli
pop
clc
push
dec
xlat
jg
aad
add
mov
out
stos
cmpsl
lret
mov
xor
mov
cmp
std
jmp
mov
ljmp
jp
pop
pop
xchg
xchg
jno
push
lods
sbb
frstor
adcl
das
cwtl
mov
cmp
outsb
adc
push
dec
out
stc
mov
sub
or
xlat
orl
outsl
dec
lock
and
lods
insl
jns
xlat
or
in
fabs
jnp
mov
stos
repz
rcl
or
lea
inc
adc
push
xor
pop
pushf
jnp
lods
jns
cltd
inc
lods
jmp
repz
mulps
jo
push
in
inc
pop
cmpsl
fcomps
pop
lods
adc
mul
cld
push
pusha
out
dec
sub
scas
inc
sarl
sti
lods
sub
mov
xchg
sbb
loope
fnsave
or
lods
insl
iret
xor
mov
mov
std
dec
idiv
push
rolb
iret
sahf
rol
ljmp
lcall
mov
outsl
xchg
mov
or
or
cmp
push
clc
cmp
pop
insb
xchg
mov
dec
mov
dec
addr16
and
out
cmc
pop
pop
inc
imul
jecxz
movsl
fcmovnb
cld
in
dec
aad
xor
addl
adc
mov
jmp
adc
std
pop
mov
sub
mov
fists
in
dec
add
repnz
in
sti
out
or
out
sub
rclb
je
push
add
and
dec
push
in
jo
mov
outsl
xor
mov
imul
dec
fdivs
sbb
xor
add
fdivrs
or
inc
jge
ret
pop
jnp
outsl
lods
cmp
sbb
and
mov
je
mov
and
in
ds
js
jnp
sbbl
stc
fnstsw
sub
adc
mov
clc
sub
xchg
jmp
pop
insl
xor
jge
xchg
ret
cmp
dec
add
jl
sbb
hlt
loope
div
jnp
lods
or
jecxz
pop
test
sbb
lock
je
push
add
and
jecxz
inc
stos
cwtl
lcall
xchg
cltd
stc
cmp
cmp
loopne
push
cmp
fcoml
mov
lahf
cwtl
fstpt
arpl
jge
mov
lods
fyl2xp1
xchg
jl
ljmp
into
mov
sbb
ljmp
sahf
aad
aam
jl
lods
incb
icebp
fiaddl
or
ret
arpl
lea
div
jl
insl
jp
clc
and
push
imul
xchg
pop
andl
aaa
jb
mov
sub
addr16
outsb
iret
mov
add
fisubs
aad
fildll
xchg
and
xchg
xlat
cvtps2pi
int3
xchg
in
mov
push
jmp
sbb
scas
or
ficomps
shlb
scas
mov
leave
and
sub
push
into
or
das
loope
lods
add
sbb
mov
lcall
icebp
sub
dec
xor
push
insl
push
cmp
jg
mov
clc
jnp
in
rcl
sbb
cld
sbb
rcl
bound
popf
push
sbbl
fisttpll
xchg
cmp
dec
mov
xchg
outsb
dec
pop
jnp
cmp
into
and
ss
sbb
popf
sbb
inc
push
aaa
imul
loope
adc
faddl
scas
push
cmp
add
mov
jecxz
mov
jno
shrl
out
jl
dec
add
popf
iret
and
scas
shll
add
je
movsb
stc
xchg
mov
testb
pop
sbb
loope
inc
clc
stc
jg
je
in
int
fcompl
pop
jg
add
rclb
or
pusha
stos
sbb
sti
cmp
movsl
inc
adc
add
pusha
dec
pop
sbb
cmp
pop
repnz
lahf
es
mov
testl
stc
stc
cwtl
es
inc
add
shlb
jno
add
sub
std
dec
sbb
xchg
out
mov
xchg
pop
jns
adc
into
repz
lahf
push
faddl
jge
arpl
add
cmc
add
loope
out
mov
adcb
cmp
orl
les
xchg
fwait
cmpsb
fcomps
cmp
lods
popa
cmp
popf
push
push
mov
cmpsl
dec
adc
fstps
ljmp
in
and
aam
fimull
jl
or
adc
sbb
dec
cmc
and
roll
nop
xor
pop
jns
dec
and
sbb
mov
dec
out
and
aam
int
not
test
lods
ja
push
mov
imul
insl
xor
stos
lock
aad
mov
out
outsl
cmpsl
cmp
cmc
mov
or
add
cmp
cltd
test
sbb
pop
lcall
sub
xlat
push
dec
aad
jge
popf
dec
lds
notl
fisttpll
inc
outsl
pushf
jmp
sub
jns
into
repz
aad
cs
xchg
inc
notl
mov
xor
inc
dec
test
lods
rclb
ja
out
out
iret
mov
jne
push
or
mov
inc
jge
outsl
in
add
push
in
push
push
xor
pop
mov
ss
cmp
adc
push
jecxz
test
cli
xchg
out
jle
cmc
das
aaa
les
and
cmp
lock
cltd
sub
and
dec
mov
orl
jmp
jno
mov
inc
and
int
ljmp
push
ja
or
insl
gs
adc
lock
jle
add
xor
cld
push
mov
in
sbb
sub
jae
lods
mov
jp
popa
popf
or
cmp
mov
mov
rcll
cmp
push
movsb
sub
dec
loopne
iret
push
mov
pop
inc
shrd
fisttpll
mov
inc
and
pop
in
mov
std
in
scas
add
out
jmp
out
loopne
sbb
jecxz
cmp
cmp
in
pop
popa
cwtl
lret
aas
stos
jo
jne
or
loopne
test
pop
or
js
movsb
rcrb
add
loope
aas
cld
imul
fcoml
inc
rorb
das
outsb
in
inc
stc
mov
scas
loop
out
xchg
mov
mov
notl
stos
dec
sub
sbb
leave
or
addr16
mov
mov
jmp
leave
pop
xchg
out
test
aam
jl
nop
sbb
push
fcoml
xchg
test
or
mov
iret
and
loopne
jnp
sub
jge
and
sbbl
inc
test
xorb
int
mov
lock
aad
test
push
xchg
or
xchg
mov
push
jnp
jl
adc
fstpt
shl
pop
cld
cmc
dec
cmp
mov
inc
xchg
inc
fisttps
clc
xchg
sub
imul
mov
jo
push
jge
hlt
scas
jmp
aad
mov
add
jbe
dec
hlt
and
cmp
out
aaa
gs
movsl
dec
push
fsubs
inc
insl
mov
popa
in
stc
lods
sub
push
lret
and
and
cmp
xor
cmp
loope
dec
ljmp
out
adc
mov
jg
test
bnd
les
jns
mov
test
xor
jo
lds
pop
movsl
or
pop
addr16
pop
push
clc
pusha
pop
out
loop
aad
daa
stos
mov
sub
cld
sbb
sub
jo
enter
out
add
dec
lcall
fists
rcrl
pop
test
imull
rcll
lods
addl
inc
fldt
jle
in
rolb
into
mov
loope
imul
or
mov
push
mov
adc
sub
movsb
and
mov
pop
push
and
enter
shrb
ja
mov
mov
mov
lods
lahf
in
sbb
andb
dec
mov
insl
into
movsb
aam
loopne
int
mov
cwtl
xchg
jo
insb
in
mov
lret
mov
js
push
pop
push
fdivs
push
adc
and
inc
sub
adc
rclb
fwait
or
mov
sub
push
xchg
xchg
inc
popf
cli
mov
cwtl
cmp
add
aaa
popa
cmp
loope
sub
jg
xor
cli
je
mov
and
sahf
in
push
fwait
inc
or
outsl
loope
jecxz
mov
jecxz
push
les
push
aas
loopne
mov
xchg
mov
jge
insb
push
pop
roll
sbb
and
loope
into
gs
cmp
jge
mov
pop
sarl
dec
push
add
cmc
or
dec
or
and
fchs
and
stc
mov
or
iret
fcomi
je
jl
mov
aam
jge
pop
mov
mov
xchg
stos
sbb
push
push
push
dec
lret
aad
jp
scas
loope
and
call
cmp
out
sahf
jnp
mov
sub
enter
stc
mull
in
dec
rclb
test
ljmp
pop
jb
jl
fbld
or
lods
or
or
scas
fidivl
mov
nop
sub
jle
mov
mov
incb
xor
fildll
pop
and
aad
adcb
bound
jnp
movsl
sarb
and
xchg
mov
sbb
sbb
xchg
xchg
jns
jmp
loopne
cmp
cmpb
inc
repz
in
pop
ficoml
cmc
fnsave
imul
add
je
cmc
dec
dec
cmp
pop
insb
xchg
push
and
lods
imul
fldenv
xchg
test
pop
and
add
rorb
jae
push
jge
data16
mov
out
dec
inc
aaa
mov
outsb
sub
jecxz
add
mov
mov
jle
sub
xchg
jp
ja
out
pop
mov
shlb
inc
push
sub
add
cmpxchg
sbb
insb
pusha
stc
iret
cmc
sub
or
xor
scas
and
idiv
psubb
fwait
mov
pop
add
fnstsw
jecxz
test
jnp
enter
popf
push
cmc
inc
or
inc
push
out
repz
jmp
cli
shlb
xor
mov
or
roll
testl
cmp
test
into
jno
jb
stos
cltd
movsb
mov
xchg
sbb
outsl
cmp
mov
cli
push
inc
sbb
shrl
xor
rorb
or
ret
mov
repz
stos
or
subb
jmpw
and
js
jo
jno
xchg
xchg
mov
in
clc
jo
dec
inc
int
jne
insl
mov
aad
xorl
rcl
int
sbb
pop
rol
test
sub
shld
gs
sub
lret
jb
cmpsb
pop
pop
pop
and
dec
scas
inc
jmp
mov
repz
imul
xchg
mov
lds
incl
fdivp
or
in
test
arpl
into
add
or
mov
mov
add
cmc
inc
xor
mov
test
cmp
dec
lods
cs
adc
or
xchg
jb
sahf
mov
stos
pop
or
test
and
out
outsb
xchg
data16
dec
mov
out
lcall
push
fwait
mov
jo
xchg
cmc
outsl
xchg
xchg
shr
xlat
movsb
stc
dec
pop
push
cli
lret
xor
push
aad
testb
xchg
and
stc
call
mov
mov
jmp
adc
cltd
dec
xchg
enter
and
xchg
mov
sti
rorb
jl
scas
add
out
mov
push
cmp
arpl
inc
test
rcl
stc
mov
nop
sbb
rorb
lds
pop
or
or
push
je
jge
dec
mov
int3
dec
out
pusha
stc
fstpl
sub
jle
int
ret
push
addr16
jnp
xchg
jg
popl
jns
cmc
imul
das
jle
rol
xor
jb
xor
adc
sbb
loope
test
pop
inc
fs
fsubrs
pop
jecxz
insl
shll
jnp,pn
ja
cli
jg
xchg
jge
adc
dec
jmp
push
jle
jge,pn
push
shl
or
lods
fisubl
outsl
mov
fbstp
jp
mov
sti
jg
vmovaps
icebp
sub
sbb
push
sub
jmp
cmp
in
cwtl
test
jge
js
mov
call
stc
in
mov
popa
scas
dec
sub
push
cs
int3
sti
insb
lock
out
xor
icebp
out
mov
xchg
out
popa
repz
lea
call
jp
fnstsw
popa
or
into
int
xor
ds
cmc
je
sbb
jl
mulb
pushf
push
out
popa
inc
push
aad
mov
leave
outsl
sub
enter
or
lcall
xchg
fs
sub
leave
gs
sbb
loopne
dec
sbb
test
adc
pop
mov
leave
fwait
call
outsl
sub
imul
dec
sub
or
fsubrl
insl
add
int3
outsb
sbb
lock
ljmp
xlat
in
or
sti
pop
add
and
sbb
push
cvtps2pi
shll
ret
jns
loop
out
add
cmp
pop
xlat
out
mov
stos
push
ficompl
mov
cmp
or
out
fwait
cmc
repz
sub
and
push
fwait
cmp
mov
lahf
pop
adc
stos
pop
jo
push
call
imul
xor
cmp
xchg
test
std
sbb
inc
nop
sub
jg
push
dec
cmc
data16
gs
leave
cmp
les
pop
adc
add
ret
pop
xor
fistps
cwtl
cmp
int
in
push
outsb
pop
aad
stos
jle
hlt
dec
sahf
cs
dec
xor
jecxz
dec
dec
popf
mov
movsl
or
sbb
cmpsl
mov
pop
sub
mov
imul
dec
sub
dec
jmp
test
mov
or
jge
dec
data16
sub
lds
sbb
jl
xor
or
jb
add
mulb
cmc
mov
cld
sub
shl
push
ret
shrl
loop
add
add
lahf
fdiv
mov
addl
fisubl
or
push
push
push
push
sub
in
fistl
dec
cmc
sbb
jne
pop
enter
imul
pop
adc
or
lss
scas
mov
pop
stc
loope
fldcw
rep
imul
jge
and
jmp
sahf
or
pop
jns
in
sub
testb
dec
mov
repz
mov
insb
jle
mov
mov
pop
ret
jnp
addr16
dec
mov
cmp
push
sub
jb
add
mov
sbb
imul
push
popa
jecxz
mov
xor
insb
mov
fwait
pop
rcrl
xchg
xor
dec
call
js
push
mov
and
repz
sbb
pop
sahf
jmp
or
nop
out
dec
xchg
andl
popa
out
push
out
sti
js
cmpsl
jo
cmpsb
pop
shlb
sub
jmp
push
adc
fwait
mov
sbb
xchg
xlat
dec
cmc
xchg
mov
mov
xchg
xchg
xor
imul
dec
scas
dec
pop
jle
mov
movsb
sub
jl
and
pop
in
rol
pop
scas
inc
mov
sbb
outsb
mov
push
scas
testl
mov
in
clc
fildll
jmp
loope
sbb
xchg
and
jle
pop
dec
pop
sub
js
pop
test
cmp
pop
jno
fisttpll
mov
lret
or
call
adc
loope
dec
jb
rorl
and
imul
aas
outsb
xor
subl
jbe
adc
push
int
loope
cmp
mov
insl
scas
xor
add
mov
imul
stos
jl
pusha
test
fcomp
insl
fwait
pusha
ss
push
insl
mov
lcall
mov
jmp
aad
cld
and
inc
sti
mov
cwtl
pop
sarb
xchg
iret
sbb
lea
jnp
int3
adc
cmp
fsub
outsl
or
xor
out
orl
and
shll
ret
aad
cs
in
cltd
rclb
and
mov
clc
std
push
and
int
inc
pop
sbb
adc
cwtl
aad
adc
outsl
cmc
outsl
lret
dec
fiadds
sbb
xchg
nop
xchg
pusha
jge
std
ja
adc
xchg
xchg
iret
mov
out
mov
fistps
imul
mov
jns
movsl
pushf
pop
sbb
test
add
popf
mov
cld
call
aad
fcoml
push
scas
imul
mov
rol
sub
xor
shll
xchg
mov
and
adc
repz
cmp
pop
mov
in
arpl
int
lock
aaa
in
loop
pusha
iret
mov
out
inc
xchg
mov
lods
inc
test
cs
mov
in
pop
jecxz
cmp
loop
fs
adc
jmp
or
push
bound
dec
js
inc
aad
xchg
pop
dec
dec
mov
jns
fmull
aad
clc
push
pop
fs
push
nop
into
or
jle
xchg
cld
xchg
sbb
scas
mov
repnz
push
push
int
inc
idivl
hlt
ljmp
mov
jbe
cmc
mov
movsb
dec
add
lods
dec
dec
sub
stos
mov
out
in
out
mov
out
test
clts
xchg
mov
cmp
push
rcr
les
mov
retw
jl
jne
jmp
ficompl
mov
add
subb
xchg
test
sub
leave
dec
xchg
push
insb
rolb
xor
jmp
xchg
sbb
shll
out
cmp
scas
lds
push
scas
std
inc
jne
adc
or
cmp
psubw
xchg
or
mov
aad
sti
adc
dec
jo
pop
xlat
add
mov
out
movsl
cmp
arpl
mov
je
aad
imul
cmp
loopne
cmc
xlat
jnp
push
xchg
imul
and
xchg
dec
int
inc
jg
cli
mov
inc
adc
jmp
jns
mov
stos
cltd
sub
xchg
int
sbb
xchg
inc
and
fildll
or
mov
push
insb
fdivrl
fists
cmp
push
xchg
mov
mov
mov
repnz
add
pop
xor
mov
or
lret
das
repz
xchg
mov
xchg
loope
xchg
and
cld
sahf
clc
out
mov
cmp
push
push
sti
adc
cmc
mov
mov
push
inc
lahf
arpl
ljmp
pop
adc
pop
or
push
mov
dec
out
mov
add
aad
inc
not
push
or
mov
pop
or
in
gs
fistpll
fcmovnb
iret
mov
adc
les
in
xchg
mov
xor
mov
out
loopne
shlb
stc
out
push
jge
xchg
jg
test
lahf
inc
imul
lock
sbb
lods
shufps
jb
jb,pt
sub
test
subb
push
dec
jnp
ja
sbb
loope
int
push
dec
sbbl
nop
push
mov
cmp
mov
mov
sbb
or
lret
pop
add
loop
es
cwtl
xchg
mulb
sbb
test
adc
stos
popa
popa
daa
daa
cmp
fisubs
or
orl
cmc
adc
popa
ret
insb
sbb
test
pop
dec
test
dec
popf
cmpsl
pushl
cltd
dec
call
jne
mov
stc
outsl
dec
xor
mov
out
pop
dec
pop
dec
mov
lds
mov
adc
rorl
push
lcall
gs
fists
test
mov
in
mov
mov
pop
nop
add
and
scas
jg
insb
jb
push
cmovnp
sbb
out
aad
out
popf
adc
lahf
lods
push
nop
jmp
into
into
fcmovu
outsb
int
cli
mov
cmp
mov
cmc
mov
imul
leave
cld
int
sub
cmc
hlt
push
xchg
jl
cmp
sbb
jb
push
or
cmc
scas
sub
nop
stos
lock
cld
aad
sbbb
enter
fnstenv
js
aaa
sbb
xchg
stc
adc
loopne
jge
lods
push
mull
cmp
jge
jp
nop
jmp
cmc
sub
xchg
popa
sarb
fucomi
cmp
and
xor
push
in
xor
iret
or
in
and
mov
ret
adc
jecxz
dec
inc
mov
or
daa
and
lods
out
aad
fs
pop
push
movsl
pop
xor
loopne
mov
inc
aad
stc
sahf
jns
popa
mov
sar
repnz
push
sahf
mov
and
sbb
loope
lods
mov
adc
or
or
push
jecxz
stos
sbb
xchg
sub
out
lods
dec
sets
inc
aam
scas
pop
int
in
adc
cmp
cltd
ja
inc
mov
mov
es
cmp
mov
fsubp
out
cmp
sub
push
sub
sub
insl
push
call
mov
aad
mov
fwait
jnp
stc
pop
add
rorl
xchg
hlt
addr16
sbb
cmp
xlat
xor
sub
dec
cmp
pop
fdiv
inc
sub
movsb
and
sub
popa
push
mov
in
stc
into
inc
sbb
out
sub
cmc
ljmp
cmp
mov
cmp
push
dec
aad
jecxz
xor
jge
mov
aam
mov
or
aam
mov
fidivrs
into
mov
inc
mov
mov
insl
fisubs
or
sarb
fists
pusha
cld
ret
aad
fmul
cltd
push
mov
xchg
clc
mov
or
in
popa
or
in
in
into
adc
ljmp
or
int
or
sub
jl
call
add
out
xor
push
fwait
or
test
int
adc
insl
cwtl
aam
mov
xchg
lcall
pop
and
mov
call
adc
movb
aad
test
out
jbe
out
xchg
in
jbe
jecxz
mov
and
or
push
sbb
cwtl
mov
fiadds
stc
add
jbe
std
out
cltd
jo
lret
sbb
mov
inc
imul
and
int3
cmpsb
xchg
sbb
insb
adc
call
pop
xchg
ja
clc
aad
stos
ret
xchg
jl
in
xchg
pop
int
inc
adc
mov
dec
repnz
shlb
fsubrl
fcomip
cmp
xor
mov
dec
outsl
cmp
dec
cmp
lock
cmc
popa
pop
scas
hlt
push
and
jecxz
xchg
leave
pop
xchg
bound
mov
shll
das
aad
or
push
mov
popa
xchg
aaa
or
imul
mov
push
mov
daa
int
aad
pop
mov
addr16
hlt
shrb
mov
icebp
pop
xchg
fwait
out
movsb
fiadds
or
mov
fs
inc
push
lahf
jnp
xchg
fistl
aad
movsl
adc
std
pop
jecxz
jmp
jmp
test
ljmp
lret
lods
pushl
std
jecxz
lea
cmp
jle
mov
jnp
enter
inc
loopne
pop
adc
push
or
jp
and
push
ja
rcrb
push
lods
scas
int3
stos
xorl
inc
sahf
leave
or
loope
xchg
fsubrs
mov
xchg
jno
lahf
jecxz
mov
mov
repz
pop
mov
jl
inc
push
outsl
pop
xchg
loope
mov
xchg
push
jnp
lods
cmp
out
push
inc
push
nop
sbb
mov
mov
in
cmp
cmc
or
sti
dec
out
add
inc
iret
loope
cs
push
xor
jns
addr16
in
mov
pushf
sbb
enter
movsb
adc
ds
xchg
mov
lock
push
fstpl
sub
cmpsl
jmp
xor
xchg
sbbb
movsb
dec
fs
or
sarb
xchg
out
adc
adc
inc
jae
sbb
ret
outsb
rorl
cvtdq2ps
or
out
push
add
jae
idiv
and
sbb
fstpt
ret
push
dec
mov
add
or
pop
ja
lret
sbb
xchg
dec
jecxz
stos
jl
push
mov
fs
lods
aas
adc
cwtl
xor
xchg
inc
fistpl
jo
and
cmp
xchg
test
mov
cmpsb
xor
mov
mov
in
into
inc
jbe
cltd
inc
outsl
lret
lahf
loope
mov
bswap
mov
rorb
getsec
fidivrl
or
push
mov
ja
clc
les
jecxz
loopne
xchg
fimull
aam
imul
inc
xchg
jbe
out
adc
add
jle
jge
aam
scas
push
xchg
loopne
add
lahf
les
push
cmpsl
xlat
out
add
xchg
fstpt
inc
mov
fxch
leave
pusha
inc
jo
cltd
aad
mov
int
dec
rcrb
notl
movsb
add
add
loopne
mov
push
xchg
in
sub
in
movsl
jmp
or
xor
cmp
ja
negl
push
cmc
xchg
push
dec
bound
jle
mov
pop
cmc
inc
push
outsl
pusha
mov
stos
xchg
or
std
push
daa
out
or
sub
arpl
lret
and
sub
dec
jno
rorb
jns
test
or
mov
dec
xchg
push
mov
mov
shll
cmp
push
movsl
adc
push
aad
mov
fistpl
sbb
or
push
repz
pop
pop
adc
fadds
aam
in
mov
add
imul
dec
movb
lahf
mov
sub
ret
je
sbb
add
push
dec
cmpl
movsb
xor
mov
mov
add
cmp
popa
int
xor
adc
cmc
clc
dec
aam
or
mov
sbb
ret
leave
cltd
jno
cmpsl
cltd
inc
cltd
fadds
stos
or
mov
sbbl
mov
push
lock
into
cmc
jmp
sbb
inc
scas
test
push
push
mov
xchg
mov
fwait
out
jl
lods
incl
jnp
imul
push
xor
mov
or
xor
jmp
cltd
add
popf
cs
adc
inc
pop
jo
pop
jbe
dec
test
jne
insb
inc
dec
sbb
aad
cld
aad
roll
xchg
add
jp
push
lods
sbb
mov
inc
jo
xchg
mov
loope
inc
sub
clc
ss
mov
mov
jge
scas
out
ret
xchg
mov
xor
xor
dec
cmp
daa
or
ljmp
in
int
jmp
jnp
lods
pop
xor
push
frstor
scas
sub
aad
xlat
mov
adc
and
jp
ljmp
inc
adc
or
insl
inc
jl
popf
xchg
aad
js
push
js
jae
out
sbb
pop
loop
repnz
fs
lods
pop
test
dec
aad
test
out
fldt
out
imul
lds
insb
clc
adc
push
cmp
mov
imul
sbb
loop
inc
and
test
mov
mov
cmpsb
loopne
scas
je
loope
out
push
sahf
orb
xchg
int3
iret
and
inc
jmp
loope
popa
test
imul
cmc
cmp
les
xchg
mov
out
pop
mov
mov
or
jae
mov
jo
push
jbe
sbb
cmp
jg
push
lds
xlat
jb,pn
mov
push
xchg
mov
iret
test
shl
int
or
xor
lret
push
mov
inc
pop
mov
cmp
in
repnz
mov
sbb
shl
imul
ljmp
in
fs
cmp
add
mov
loop
jge
push
cwtl
adc
inc
push
aad
xchg
fiadds
mov
in
sub
lods
iret
das
or
mov
psubw
imul
das
inc
mov
xor
and
lret
in
push
xchg
jge
cmp
mov
cltd
jb
js
push
scas
and
mov
stos
lret
pop
push
movsb
push
pop
out
imul
arpl
pop
lcall
das
lea
shrl
jmp
inc
repz
adc
movsl
in
sahf
and
add
sub
push
adc
ret
test
xchg
xor
adc
mul
mov
xor
stos
test
xor
push
js
cmp
aam
pop
jmp
mulb
mov
xor
test
mov
cld
pusha
pushf
cmp
lods
adc
dec
push
xchg
mov
push
loope
xchg
in
push
pop
cmc
mov
adc
xchg
mov
and
fdivr
inc
out
pusha
mov
sub
mov
sub
popf
mov
cmp
fisttpl
scas
pop
aad
sub
movsb
in
or
mov
add
test
cmp
and
xlat
jmp
aad
cs
mov
std
xor
cld
xchg
adc
hlt
xor
adc
test
jmp
movb
pop
jns
jmp
push
int3
dec
jb
cmp
cmc
iret
scas
out
pop
int
push
dec
mov
insl
jbe
push
sahf
jge
fmuls
and
mov
mov
stos
pusha
sub
lock
jo
je
sbbl
das
dec
outsl
jp
mov
push
aaa
call
cmc
shrb
sbb
mov
pop
sub
mov
xlat
fldcw
sub
movsl
fcmovnu
add
cmp
cmpb
pop
xor
fwait
sti
pushf
fnstenv
xor
js
pop
push
pop
xor
xor
sbb
sbb
jecxz
add
ljmp
mov
add
or
and
inc
mov
imul
push
dec
and
pop
pop
sbb
push
sbb
jmp
mov
jle
in
sub
into
push
or
push
jl
xor
or
test
rcrb
xlat
push
test
mov
sbb
clc
into
cltd
dec
js
sti
sub
sbb
pusha
mov
inc
push
cmp
cmpsb
clc
mov
mov
xor
mov
iret
and
and
call
pop
cmp
adc
aas
fisttps
pop
pop
sti
jbe
lock
cmc
mov
ds
mov
sbb
scas
cmpsb
mov
pusha
add
jle
sbb
dec
aam
mov
dec
inc
pushf
mov
or
pop
lods
fistpl
cld
jns
scas
push
xchg
push
test
sbb
jge
mov
xor
in
xchg
inc
xor
cmp
or
outsl
loope
sub
cmp
and
xchg
sub
lahf
dec
scas
xorb
pop
adc
xchg
or
sub
mov
jecxz
xchg
push
jge
out
repnz
jb
lret
jl
jnp
add
cmc
or
sbbl
lcall
jnp
push
dec
fildl
popf
enter
loop
dec
call
nop
movsl
into
aad
in
aam
out
or
dec
outsl
xchg
pop
loope
mov
mov
in
jmp
cwtl
push
mov
push
xchg
pop
jp
in
dec
pop
aad
loop
sub
jg
pop
ficomps
hlt
pop
into
insb
sub
in
aad
dec
adc
cmp
jmp
mov
cmpsb
pop
sti
ljmp
or
popf
dec
or
movsb
fs
cmc
xchg
ss
jge
xor
in
inc
mov
sbb
add
xorb
xchg
daa
test
jmp
jae
push
lock
adc
mov
fmull
cmp
popa
adc
sub
mov
out
ret
fucom
jp
xor
int
shl
adc
mov
into
out
pop
ja
cli
mov
jnp
pusha
rolb
rclb
cmp
lods
hlt
add
adc
loop
xchg
ljmp
pusha
in
mov
mov
ja
test
repz
push
mov
mov
in
cltd
inc
sub
outsl
testl
dec
and
dec
adc
pop
loope
data16
add
std
sub
test
inc
inc
push
lods
stos
std
mov
add
aaa
cmc
int3
popf
and
sahf
pop
ret
adc
pop
jge
in
dec
push
pop
dec
xchg
add
or
out
rclb
inc
xchg
mov
div
ja
imul
mov
sbb
or
xchg
mull
enter
and
push
gs
mov
mov
jge
jns
mov
loop
sbb
push
and
mov
filds
dec
mull
mov
aad
dec
stc
mov
loope
pop
dec
imul
out
mov
lods
sbb
in
popl
js
rorb
addr16
stos
mov
cli
cld
adc
xchg
int
pop
and
push
aad
push
fildll
sub
fistpl
aad
in
jno
or
push
std
xor
fs
push
test
call
in
xchg
xchg
dec
into
cmc
loop
and
in
dec
lods
push
or
and
icebp
repnz
sahf
iret
cmp
stos
pop
xchg
adc
dec
out
in
cvtps2pi
dec
xor
mov
int
sbb
add
aad
xchg
fnstsw
inc
out
or
dec
mov
popf
adc
sub
push
mov
and
or
call
sub
cwtl
js
push
inc
adc
aad
lcall
and
xlat
add
decb
test
neg
inc
out
and
jge
mov
push
in
jmp
cmp
imul
scas
jnp
adc
adc
jmp
jb
repz
inc
xchg
mov
or
lahf
cmp
cmp
xchg
push
into
lods
jo
dec
in
ret
movsb
lods
cmp
repz
int
pop
push
push
and
lods
mov
push
dec
movsb
jae
dec
cmp
jmp
mov
iret
mov
out
push
shrl
and
and
lret
fisttps
push
sbb
dec
in
pushf
lret
xchg
test
call
bound
mov
inc
push
push
mov
mov
jmp
clc
and
sti
jne
pop
add
or
pop
adc
lret
xchg
mov
jbe
mov
out
incb
sub
xor
xor
mov
sub
std
sub
xcrypt-cfb
cmpsl
movsl
jne
dec
cmc
push
imul
push
ljmp
in
in
ds
jmp
lret
mov
in
ljmp
sbb
pop
xor
into
aad
rcll
push
test
add
xchg
daa
ret
shl
iret
cmp
push
xchg
and
fcomip
mov
mov
iret
mov
pop
test
pop
sub
jl
dec
sbb
test
mov
fdivrp
cmpsb
pop
sbb
fistpl
gs
int
fbld
add
xor
loopne
jge
push
popf
mov
test
dec
scas
jl
xchg
inc
pushf
out
xor
dec
loope
sub
xchg
cld
sub
xchg
or
scas
xchg
push
aad
mov
test
or
mov
lock
addr16
in
and
cmpl
call
ret
push
daa
add
xor
cmp
or
jp
mov
xchg
adc
das
mov
adc
jo
ljmp
sbb
nop
in
xchg
dec
test
out
push
pop
cmp
adc
ja
rorb
test
stos
out
inc
jo
int3
popl
js
stos
sti
xor
adc
mov
cmp
or
mov
push
adc
nop
cmpsl
sbb
lods
jmp
aaa
stos
movsl
outsl
scas
jmp
adc
scas
push
mov
jmp
mov
mov
add
jo
mov
adc
dec
nop
stos
push
cmp
in
mov
int3
fnsave
repz
sbb
inc
mull
xsha256
cmpsb
adc
xor
es
nop
jmp
shll
mov
sbb
outsl
inc
out
imul
sbb
imul
sti
add
fildll
push
test
dec
in
dec
sub
orl
sub
push
fists
out
call
cmp
adc
xor
sub
mov
xor
ds
add
ror
pmaddwd
ret
popf
cmpsl
mov
adc
addr16
adc
inc
hlt
mov
ljmp
cltd
hlt
xlat
pop
add
push
sti
xor
mov
test
adc
and
mov
cmp
push
cs
imul
into
bound
mov
and
xchg
pusha
sti
leave
scas
mov
movsl
add
inc
cmp
inc
push
mov
pop
dec
xor
out
in
cmp
ret
xchg
insb
push
and
hlt
jbe
out
cld
lea
add
adc
movsb
sti
sahf
aad
shll
add
imul
jmp
aam
packuswb
dec
push
or
aad
mov
test
xchg
lds
sahf
test
or
inc
nop
cmp
fstl
test
mov
les
pop
sahf
mov
es
mov
out
test
jo
xchg
sbb
fcom
push
cmp
pusha
mov
or
daa
aad
push
std
push
leave
add
sbb
cmp
fwait
xchg
sbb
sub
mov
add
iret
cmpsb
adc
ret
and
pusha
test
aad
xchg
lret
loope
xor
or
mov
xchg
ljmp
sti
mov
pop
in
push
or
sbb
mov
push
push
fisttps
dec
xchg
mov
inc
mov
add
and
mov
ja
adc
in
idivl
mov
jbe
outsb
mov
stos
aam
iret
inc
in
or
sbbb
pop
push
dec
in
jge
jmp
je
adc
xlat
mov
xchg
xchg
divl
aam
loope
jle
neg
dec
xchg
ja
and
test
les
cmc
mov
aas
mov
pop
outsb
movsl
div
or
pop
mov
mov
adc
add
push
push
loop
and
push
mov
xchg
dec
sub
and
repnz
cmc
sub
mov
xchg
lcall
push
addl
push
dec
inc
int3
or
stos
xchg
inc
in
bnd
pop
stc
add
imul
dec
cmc
pop
mov
mov
in
mov
sub
mov
gs
adc
mov
push
inc
loop
sbbl
cmp
inc
mov
jnp
mov
inc
or
and
imul
lods
in
imul
aas
dec
mov
mov
jp
out
stc
int
or
cltd
jno
into
jg
xor
psubb
mov
test
aaa
add
cwtl
or
or
push
cmc
lea
push
jecxz
push
mov
add
mov
scas
mov
fldpi
sbb
or
add
test
or
in
aad
out
aam
sbb
mov
popf
push
fsub
outsb
xor
and
pop
nop
cmp
jne
xlat
and
shrl
sbb
mov
jns
xchg
test
mov
lods
ljmp
aaa
inc
subl
clc
idiv
fistpl
xchg
cmp
aam
dec
push
sbb
xchg
sbb
adc
or
dec
cmpsb
repz
mov
or
or
test
pop
sbb
jp
mov
cmc
adc
dec
js
in
xlat
aad
daa
and
adc
sbb
insb
cmc
push
mov
es
xor
mov
jmp
aam
insb
sarl
push
add
sbb
sbb
jg
jmp
es
faddp
mov
jmp
aam
fcmovnb
inc
in
popf
shll
rcll
mov
out
leave
js
xchg
pop
and
mov
xchg
sub
loope
and
mov
mov
andb
orps
add
dec
gs
push
inc
stc
jle
test
xchg
or
enter
psubw
test
nop
fmull
jg
xchg
sub
mov
xchg
repz
adc
mov
aam
sbb
js
inc
jmp
dec
loope
sbbl
sti
xchg
test
arpl
sbb
pusha
push
xchg
adc
push
out
or
icebp
repz
and
test
xchg
dec
push
mov
sbb
cltd
nop
enter
jnp
ret
sub
scas
mov
sbb
cltd
dec
aaa
imul
xchg
adc
add
dec
mov
adc
jmp
test
jmp
inc
jecxz
cmp
dec
pushf
call
fdivl
push
cmpsl
or
pop
jno
xchg
mov
adc
xor
test
ljmp
int3
negl
push
sbb
sub
pop
sub
ljmp
cmp
pusha
sub
outsl
stc
fwait
popa
xor
stos
notb
cmp
xchg
shlb
int
out
and
xor
inc
and
imul
int
fistpl
sbb
leave
adc
lock
dec
xchg
dec
dec
or
pop
xchg
cmp
hlt
and
fsubs
add
mov
fsubrs
jmp
pop
push
or
js
pusha
ffreep
stos
mov
mov
mov
and
decl
bound
push
mov
pusha
es
rcl
test
jo
lods
out
cmc
jmp
pusha
xor
int
loopne
add
cmp
lret
leave
lahf
jae
into
lea
sbb
and
pop
dec
adcl
daa
push
cmp
mov
dec
fucomip
xor
shlb
xchg
fwait
sar
sub
stc
mov
mov
pop
mov
lock
cmc
xor
or
xor
icebp
fimuls
adc
btcl
jo
pop
test
cmc
inc
cmp
jb
pmullw
ja
dec
fdiv
xchg
inc
mov
push
aad
popf
adc
loopne
int
into
mov
inc
pop
pusha
es
or
jmp
aad
jp
pushf
push
in
sbb
mov
shl
xchg
fisttpl
mov
add
mov
xor
fst
mov
scas
jl
popa
addr16
les
and
jl
in
int
movsb
sbb
jno
leave
push
aam
jns
cld
xchg
adc
rclb
adc
pop
mov
gs
cmp
inc
add
xor
inc
pop
in
ljmp
jl
mov
in
lods
add
sarl
and
mov
lods
add
adc
mov
loope
jne
adc
int
xchg
adc
jae
xor
mov
and
subb
iret
mov
xor
inc
push
cmc
js
cmp
cmp
or
lods
sarb
adc
xor
jecxz
mov
xor
mov
notl
testb
inc
loope
mov
outsl
sbb
pop
data16
lock
dec
lcall
arpl
es
or
lods
dec
jne
into
dec
out
xor
cmpsb
xorb
dec
test
add
les
jnp
cmp
xor
addr16
and
aad
pop
cwtl
xor
sbb
loopne
and
jl
pop
jle
ljmp
iret
andb
popa
adc
adc
xchg
ljmp
dec
shlb
and
jnp
push
testb
cli
push
out
jo
mov
jmp
or
mov
cmp
pop
dec
xchg
lds
push
sub
push
call
or
jo
add
sahf
shll
add
and
jl
mov
in
add
ljmp
aam
jmp
les
mov
dec
gs
inc
sub
in
loopne
xor
and
cmp
or
push
cmp
jb
cli
mov
hlt
sbb
call
cmp
dec
sub
mov
and
or
add
cmp
bound
aas
mov
insl
add
sub
jmp
imul
int3
loope
xor
jmp
mov
and
cmp
cmp
mov
pop
dec
add
sub
inc
and
jae
mov
ficompl
scas
rcl
lahf
enter
inc
jle
adc
jae
icebp
xchg
cmp
add
jb
loope
roll
es
ret
cmc
pop
mov
popf
xchg
pop
mov
popa
jg
mov
xchg
xchg
data16
addr16
cmp
loope
sub
ret
shl
arpl
mov
psubq
repz
ja
mov
rcll
jnp
push
insl
pop
adc
stos
sub
mov
xor
fxch
fwait
test
pop
mov
xchg
and
cltd
stc
xchg
add
mov
int
mov
inc
std
push
mov
cmp
arpl
mov
mov
pop
push
xchg
fcomp
scas
mov
test
mov
mov
push
mov
pusha
leave
mov
cltd
popa
dec
xchg
pop
jmp
xor
or
mov
shlb
iret
push
jmp
stc
inc
ret
pop
sbb
xor
jmp
sub
xlat
sub
cmp
data16
lods
and
push
sbb
fildll
mov
std
shrb
mov
into
mov
xor
push
add
sbbl
jg
data16
cmp
adcb
push
cmc
adc
mov
adc
or
call
call
shll
jge
call
push
nop
xchg
mov
dec
dec
and
pushf
and
lods
ret
cmpsl
xchg
jo
sbb
dec
shlb
xchg
or
mov
push
adc
cwtl
push
pop
jl
decl
cmp
repz
sub
pop
or
ret
es
xchg
lea
inc
sbb
out
xchg
and
fwait
or
push
sub
pusha
pop
inc
cmp
mov
ret
or
xchg
adc
fisttps
adc
popa
movsl
lcall
cmc
fs
jmp
cmp
add
mov
dec
test
int
pop
lods
test
push
dec
mov
xchg
outsl
jnp
and
cli
lock
cmc
jge
mov
dec
mov
push
cmpsb
fisttps
sahf
mov
pop
xchg
nop
sbb
fdivr
adc
add
mov
ds
and
test
mov
dec
push
aad
mov
sti
cmp
push
test
jp
cmp
or
lock
popa
dec
mov
jecxz
sub
ja
jbe
inc
js
xchg
dec
mov
outsl
push
sti
outsl
mov
sub
cmc
inc
cmp
mov
push
pop
sbb
jmp
test
shlb
mov
sbb
dec
sbbb
dec
dec
dec
xchg
mov
or
mov
aam
pop
jmp
fidivrs
fstps
dec
cmp
xchg
add
divl
or
int3
es
fs
xchg
jmp
cmp
jmp
fneni(8087
sahf
insl
inc
pop
gs
cltd
adc
dec
adc
dec
aad
jmp
push
cmpsl
pop
scas
testl
and
mov
or
sub
idivb
mull
jne
jno
lods
add
sbb
add
movsl
and
xor
insl
es
in
nop
cmp
mov
js
ja
push
dec
pop
icebp
mov
inc
out
cs
mov
fdivrs
das
push
cmpsb
stc
push
add
repz
aad
or
mov
xchg
sar
inc
add
dec
jnp
sbbl
xor
jge
pusha
test
addr16
int3
and
mov
jp
mov
scas
adc
xchg
je
jge
push
cld
popa
sti
cmp
mov
and
sbb
inc
mov
mov
dec
pop
stos
lcall
mov
or
loope
cmp
mov
pop
and
stos
mov
xchg
popa
jmp
xor
xor
adc
add
fwait
ds
fbstp
cli
xchg
shrl
pop
pop
dec
outsl
loopne
stc
xor
mov
adc
or
out
enter
or
push
adc
fdivrl
sahf
mov
pop
stos
push
pop
ds
pop
lret
jnp
leave
ja
iret
nop
push
mov
js
lods
add
or
cmp
cmp
hlt
rcl
push
inc
lock
and
aas
sub
stos
cmp
in
mov
sti
jns
clc
lock
mov
jmp
aad
cmp
inc
dec
stos
scas
jns
cmc
inc
arpl
aad
jns
pop
dec
lret
inc
out
mov
arpl
and
fistps
mov
lfs
xchg
xchg
push
push
xor
mov
jnp
mov
dec
push
lcall
jecxz
jbe
ja
or
or
xchg
sahf
cmp
sbb
push
outsl
out
mov
sbb
out
js
insl
sarl
cmp
int
ret
icebp
sbb
sub
cmp
jl
add
and
fsubs
in
gs
mov
dec
xor
aad
out
test
add
aam
inc
xor
pop
and
jmp
aad
dec
cmc
inc
jecxz
inc
or
daa
in
test
mov
mov
jl
ret
pop
jnp
jmp
inc
loop
pop
aam
inc
aad
jno
jl
movsl
or
sbb
ja
sbb
sbb
loope
adcl
xchg
rolb
out
jle
xor
mov
push
in
popa
lret
pushf
inc
ds
cmpsb
push
dec
push
pop
and
div
gs
js
out
inc
mov
pushaw
add
adc
out
dec
mov
js
xlat
mov
or
aad
fists
cmc
call
popf
scas
inc
and
into
sbb
les
xlat
mov
les
out
cld
sbb
and
sahf
enter
out
sahf
or
in
notb
inc
mov
adc
xchg
or
call
ret
cmpps
inc
loope
shr
lock
out
fwait
insl
sub
loop
push
dec
into
sub
and
xchg
xchg
dec
sbb
adc
mov
fidivs
ja
mov
push
or
mov
add
repnz
push
add
mov
into
or
andb
mov
and
push
or
add
add
psubusw
or
loope
cwtl
icebp
push
inc
mov
imull
movsb
pop
les
out
push
sub
mov
push
aam
in
movsl
mov
aam
test
fidivs
popa
lahf
jg
pushf
adcb
gs
inc
mov
les
or
addr16
sub
or
mov
jecxz
xor
push
pop
pusha
cmp
nop
or
pop
mov
xchg
push
es
push
or
stc
aad
clc
mov
int
pop
mov
sbbb
test
push
movsb
fstpl
push
mull
out
xchg
fistl
cmp
mov
imul
out
jne
int
dec
push
xor
dec
decl
cmc
and
inc
std
aad
mov
xchg
inc
dec
lock
pop
push
xor
call
push
push
out
jnp
ror
hlt
adc
mov
fimull
mov
repnz
fwait
mov
sbb
adc
sbb
aam
insb
iret
jnp
cmc
sti
rcrb
call
lahf
jns
test
jle
imulb
lock
enter
cmp
arpl
les
jg
jecxz
aad
cmp
imulb
cmp
sub
or
fists
mov
in
iret
rol
imul
lods
repnz
dec
cwtl
push
pslld
cmp
pusha
dec
pop
aad
sbb
or
cmc
cltd
dec
inc
lea
xchg
sub
stc
test
call
or
and
sti
pmaddwd
pop
pop
movsl
or
cmc
mov
pop
inc
jle
push
scas
addr16
dec
cmp
loope
stc
push
jmp
inc
fwait
div
jle
cmc
push
lcall
add
outsl
sub
cmp
mov
xor
inc
dec
mov
lahf
int
imul
or
ja
xor
popa
cmp
bnd
lahf
fsts
test
add
rorb
jo
loope
popl
and
dec
cmp
loope
cmc
inc
sub
pop
jno
jmp
sbb
dec
pusha
stos
nop
adc
sahf
aad
cmp
pop
js
jecxz
into
dec
sub
jp
cmp
imul
jl
push
test
in
stos
jo
push
cmc
push
negb
dec
or
jo
loopne
inc
mov
fwait
fsubrs
scas
pusha
push
and
add
shrb
ja
cmpsb
fiaddl
cld
adc
mov
fdiv
dec
and
addr16
sbb
push
or
out
mov
repz
xchg
dec
cli
les
adc
jmp
lock
addb
out
scas
xchg
jae
jge
push
cmp
sbb
mov
das
testl
cmp
adc
popl
cmc
cmp
nop
jns
inc
out
mov
fnclex
push
cmp
testl
js
inc
sub
mov
jp
stc
add
cmp
jae
jp
sub
and
pop
out
sub
sahf
pop
std
das
xchg
adcb
int
into
mov
pop
loopne
jno
pop
mov
scas
pop
icebp
lods
or
sar
or
into
jmp
and
call
dec
inc
xorb
add
mov
daa
loopne
or
adc
cli
jg
mov
dec
jl
dec
repnz
mov
pop
mov
mov
lret
repnz
rcrb
pop
sub
dec
cmpsb
cs
bnd
mov
adc
lea
test
pop
push
mov
out
js
fisttpll
loop
push
sub
or
in
scas
addr16
arpl
cmpsl
fcoms
jb
xchg
inc
movsl
mov
cltd
int
rcrl
jl
out
insl
jge
scas
notl
or
jnp
dec
dec
mov
pop
adc
scas
iret
dec
jmp
or
and
rolb
sub
testl
cmp
mov
xlat
cwtl
out
mov
fbstp
sti
ffree
ja
stos
mov
push
mov
int
iret
loopne
clc
sub
stos
dec
sbb
es
jns
ds
sub
xor
mov
or
lea
and
inc
loope
mov
ss
pminsw
and
pop
cwtl
lds
jl
cli
nop
dec
pop
jmp
jmp
pop
adc
ds
xor
int3
add
sti
lods
movntps
movsl
mov
iret
roll
xor
sbb
cmc
stos
rcl
lcall
scas
fwait
jne
pop
arpl
sub
xor
mov
inc
push
xchg
sub
int
push
call
cmp
or
xor
xor
inc
adc
xor
shrb
scas
cmc
movsb
xlat
gs
call
aad
and
and
jb
dec
sbb
loopne
in
pushf
sbb
lods
out
mov
pop
ja
jnp
fdivrs
cli
js
jmp
std
fwait
incl
or
je
stos
adc
inc
cmp
sbbl
mov
or
mov
xor
ficomps
int
xor
movsl
mov
insb
jmp
or
aad
inc
rcll
sub
imul
adc
push
xchg
mov
testb
aad
jmp
mov
push
sub
mov
js
out
roll
dec
mov
sbb
cli
dec
jl
arpl
fiaddl
hlt
test
adc
inc
pop
pop
adc
xor
xor
aad
sti
test
dec
lods
mov
mov
cwtl
sbb
std
mov
jmp
add
enter
xor
ret
sbb
adc
add
xchg
mov
jmp
pop
sbb
repnz
cmc
mov
push
gs
in
cltd
push
fwait
nop
pusha
test
call
or
addr16
aam
test
sub
push
sub
and
jae
push
pop
mov
call
inc
into
mov
fs
paddsw
stc
je
jno
imul
mov
pusha
not
push
scas
into
sub
xchg
andl
sti
clc
jnp
xchg
add
pusha
int3
push
stos
mov
movsb
outsl
dec
adc
sbb
mov
mov
xchg
aad
cmp
into
xchg
adc
xor
stos
stos
mov
gs
cmpsb
inc
shrl
pop
andb
iret
xadd
sub
fdivrl
mov
decb
arpl
or
add
jp
ret
into
mov
clc
mov
nop
jecxz
cmp
lahf
pop
cmpsl
es
js
cld
cmp
aas
mov
cmc
mov
insl
sub
push
pop
cmpsl
in
aas
mov
pushf
insl
test
int
test
cmc
pop
mov
and
daa
xor
push
shll
lea
int
xchg
aad
fstps
in
pop
lods
into
mov
mov
in
ds
add
lock
cmp
iret
les
les
clc
xchg
aas
adc
popf
add
iret
pop
sub
push
test
aas
xchg
les
sub
add
test
mov
inc
pop
inc
fs
pusha
pop
inc
rcr
insl
push
pusha
hlt
mov
jnp
jecxz
in
movhlps
inc
jmp
mov
dec
shll
or
mov
dec
add
cmc
es
dec
sbb
xchg
das
sbb
dec
push
loope
jno
mov
shlb
stc
lcall
push
outsl
cmp
ja
test
cmp
cmc
dec
in
xor
out
adc
jb
and
test
aas
test
lret
shl
and
pop
fists
xor
cmp
fcompl
into
inc
inc
jmp
cmpsb
shll
xchg
icebp
mov
aas
enter
mov
mov
adc
cld
cld
out
sbb
aad
mov
adc
push
orb
test
les
mov
mov
or
mull
jle
push
or
cmc
das
cmp
add
fimull
sbb
mov
ljmp
sub
and
repz
mov
xchg
insl
jb
push
cld
ficoml
scas
sbb
je
call
jg
push
cmpsb
hlt
stos
fisubrs
sub
lods
insb
add
add
enter
cmp
pop
xchg
jge
stc
inc
mov
in
xchg
fadd
lea
jno
mov
or
shrl
repz
je
movsl
aas
fdivrs
push
jg
cltd
rol
push
or
push
sub
mov
add
adc
xchg
popa
cltd
xchg
popf
int
lcall
cld
aam
dec
mov
faddl
inc
loop
inc
mov
outsb
das
lods
leave
or
in
push
cli
mov
inc
ds
jnp
mov
test
fisubs
loopne
push
and
jnp
jb
push
std
out
and
sbb
pop
xchg
cli
xor
insl
cmp
repnz
xchg
scas
flds
into
push
aad
push
xchg
pop
pop
and
testl
xchg
ret
scas
jae
cmp
stc
test
out
lret
lcall
mov
vucomisd
sub
dec
dec
adc
jg
cmp
fs
and
cmc
dec
pusha
and
int
jmp
and
xor
xchg
mov
in
shlb
push
cmp
or
cmp
mov
aad
xchg
roll
xchg
sub
sbb
jmp
or
or
sbb
aad
push
loope
mov
int
dec
int
mov
inc
jl
cmpl
leave
push
mov
push
cmpsb
cli
mov
pop
push
or
xchg
pusha
not
lcall
divl
aad
ja
mov
or
xor
adc
rorb
cmpsb
rorl
js
push
imul
inc
ret
ret
cltd
mov
or
jo
movsb
out
sub
jl
movsl
jnp
lods
or
or
in
insb
jge
sarl
imul
pop
in
inc
cmc
into
mov
dec
mov
and
into
xlat
cs
ja
daa
sub
clc
or
hlt
fistps
pop
or
pop
xchg
dec
hlt
les
sub
xchg
push
ss
mov
inc
xor
daa
sub
sbb
cmpsb
mov
mov
pushl
cmp
mov
sub
and
cli
divl
outsb
jb
push
jns
ss
and
fsubrp
outsl
xchg
cmp
xchg
iret
cmc
adc
lods
movsb
cld
cwtl
call
and
mov
push
das
push
das
out
setbe
rcrl
data16
inc
fstpt
xchg
mov
xor
int
xchg
std
xor
jmp
orl
mov
popf
pop
rorl
test
imul
sub
or
cltd
jl
sub
nop
jo
das
dec
ljmp
jnp
add
inc
jmp
push
icebp
nop
mov
mov
jbe
jecxz
push
js
mov
out
clc
pusha
xchg
out
rorl
and
subb
mov
push
pusha
rclb
fs
xchg
xchg
jge
mov
push
inc
in
lods
fs
mov
mov
mov
pop
pop
xchg
gs
lcall
dec
ljmp
push
popa
inc
addr16
mov
xor
test
sub
xchg
xor
in
imul
jbe
pop
dec
int
lcall
fstl
or
out
loope
inc
dec
mov
popf
int3
cmp
fisttpl
insb
jno
inc
sbb
sbb
fstps
adc
pcmpeqd
test
add
aad
cmp
push
xor
xchg
inc
adc
std
push
popa
int
jbe
imull
mov
idivl
icebp
sahf
idivl
lret
lock
cli
push
push
insb
jl
mov
lea
les
jl
imul
movsb
lds
pushf
jae
xor
xor
push
sub
and
push
mov
push
or
or
inc
lods
lock
mov
out
addl
sbb
call
jo
out
pop
scas
push
inc
mov
xchg
jnp
jl
iret
sub
pop
cmpsb
les
inc
decb
js
mov
push
adc
push
and
jnp
fdivl
fs
es
xor
stc
inc
lods
xchg
lods
data16
cmc
fcmovnbe
push
mov
popf
mov
scas
add
testl
cs
inc
stos
mov
test
je
inc
sbb
ret
cmpsb
or
adc
pushf
ja
incl
sub
daa
add
rcrl
and
or
jnp
sbb
jle
jecxz
addr16
mov
pop
lock
jmp
mov
mov
ror
cmp
movsl
shlb
out
cmp
stos
popa
mov
arpl
cwtl
xchg
hlt
push
fdivl
inc
sub
sahf
cmp
loopne
stc
mov
lods
sbb
fxch
pop
mov
adc
lods
mov
pop
outsb
adc
and
sbb
xor
jns
or
dec
loop
popa
sub
mov
or
aad
add
and
movsb
cmp
lea
xchg
xor
dec
divl
mov
push
imull
or
add
fs
ljmp
xchg
iret
inc
cli
loope
ret
or
aad
mov
mov
pop
out
xor
mov
orb
fldcw
mov
dec
into
mov
mov
fbld
xor
cli
fisttpl
mov
sbb
test
adc
popl
cmp
ret
cmc
xor
pop
jo
lret
pop
xor
repnz
in
push
sbb
mov
dec
xchg
popa
cmpsb
cmp
mov
xorl
xor
cmp
ds
std
aam
out
lock
sub
in
xor
std
xchg
int
out
mov
sarb
aam
sub
fimuls
xchg
in
inc
cli
dec
dec
xchg
arpl
imul
xchg
dec
xor
aaa
mov
lds
xchg
adc
mov
sub
jo
and
cmpsl
inc
inc
enter
movsb
lcall
push
ds
cltd
inc
jno
sbb
popa
imulb
idivb
mov
cmp
in
out
sysexit
lods
jecxz
xchg
jmp
pop
aad
push
cmp
hlt
pop
xchg
inc
js
aaa
and
mov
test
pop
jnp
stos
sbb
xchg
fnstcw
push
js
jl
xchg
clc
mov
cmp
sub
imul
aas
out
lods
and
mov
mov
sbb
inc
sbb
negl
ret
fdiv
sub
sbb
and
xlat
loope
and
pop
outsb
and
cmp
aaa
mov
icebp
jnp
nop
lcall
es
repnz
pop
aam
test
dec
inc
addr16
aas
sub
cmpsl
imul
mov
inc
and
mov
push
jmp
push
and
inc
cmp
mov
or
mov
dec
aad
addr16
sbb
mov
cmp
sub
xchg
movsl
fs
out
mov
cmovo
mov
add
sub
stos
sub
mov
icebp
push
mov
push
loop
add
mov
cld
scas
ds
mov
jecxz
push
fs
cmpsl
popf
cmp
addr16
sub
sahf
or
shlb
in
xor
jno
sub
mov
test
cli
jmp
repnz
repz
jge
push
ret
roll
cmc
and
addb
mov
add
push
lret
mov
imul
repnz
cmpps
adc
inc
in
or
iret
out
sbbl
add
pop
push
cmp
rolb
cmp
add
jg
stc
xchg
insl
mov
pop
or
std
sub
das
out
imul
cltd
out
mov
pusha
lcall
movsl
xor
push
int
sbb
iret
out
xchg
adc
jmp
pop
adc
lods
int3
fisttpl
shlb
iret
cmp
mov
add
mov
lods
scas
shrl
jecxz
push
mov
cmpsl
mov
cmc
or
test
outsl
in
jno
jle
mov
lahf
jnp
stos
jl
cmp
enter
mov
and
jnp
int
dec
adc
daa
xchg
push
imul
jno
test
iret
out
mov
bound
cwtl
sub
ds
jl
mov
add
xchg
sub
jl
push
pushf
dec
pushl
cmp
and
pop
xchg
mov
dec
push
or
out
jnp
cmp
jne
repnz
inc
mov
push
jg
outsb
scas
jbe
inc
mov
mov
xchg
and
lods
adc
ret
adcl
jns
sub
scas
xor
dec
xchg
shl
and
and
push
cmovs
aam
dec
xchg
mov
push
push
ror
insl
int
stc
push
lods
out
jp
jns
mov
movsl
dec
jnp
icebp
popf
js
popa
mov
fimull
xchg
call
out
jbe
inc
inc
pop
lcall
ljmp
movsb
sbb
gs
xlat
mov
adc
in
push
xchg
test
cmpsb
sbb
call
int
cmp
push
mov
or
shrl
movsl
hlt
cwtl
lahf
xor
nop
into
xor
sbb
rorl
pushf
jp
dec
or
aad
cwtl
adc
and
stos
jmp
pop
push
icebp
bound
xchg
addr16
inc
mov
xor
rclb
idiv
mov
push
repnz
jb
scas
cmc
mov
push
inc
mov
mov
addr16
cmp
cmp
pop
push
push
insb
cmpb
or
aad
cmp
fistps
fldenv
adc
jp
cmpsb
clc
xor
int
jmp
mov
jg
cmpsl
std
push
aad
cmp
xorl
jmp
xor
sub
push
cmp
in
or
lods
dec
shl
loope
mov
and
xchg
loopne
scas
mov
dec
xchg
scas
xchg
dec
xchg
adc
xor
lcall
lret
frstor
idivl
shrl
cmc
sbb
dec
nop
icebp
and
popf
mov
dec
sbb
fdivrs
cli
dec
dec
jnp
xchg
int
leave
iret
icebp
sub
or
xor
lcall
orb
sub
popf
xor
and
jecxz
xor
xchg
xchg
inc
pop
test
xor
mov
xor
outsb
out
pusha
ficomps
jbe
popa
and
popf
ja
cmpsl
jmp
inc
adc
inc
dec
pop
fimull
cwtl
pop
adc
jp
and
sub
push
loop
push
cmp
or
jp
mov
dec
or
xchg
mov
or
mov
imul
push
iret
xchg
aas
xchg
rolb
insl
adc
or
shll
cs
lahf
out
adc
mov
clc
call
sbb
cmovg
jb
push
xor
test
sub
push
or
rcrb
shll
lock
mov
mov
outsb
adc
in
jg
repz
adc
imul
sub
xor
movzwl
adc
cmc
push
lods
mov
add
lods
gs
mov
jno
stos
cwtl
jmp
or
mov
call
xchg
int
out
push
pusha
inc
out
push
out
dec
fimull
mov
flds
inc
pop
mov
cmp
cwtl
push
add
mov
dec
mov
push
sub
bound
sahf
or
jl
frstor
dec
in
mov
out
fwait
cmp
imul
xchg
popf
jmp
icebp
sarb
and
dec
in
clc
arpl
iret
or
cmc
ficoml
nop
fidivrs
jo
int
add
in
outsl
rorb
in
adc
or
and
aad
andl
pop
xchg
rclb
aaa
mov
lret
inc
lcall
pmulhw
pusha
push
or
les
adc
jge
mov
call
ficoml
push
and
movsb
ja
pushl
xchg
andb
xchg
inc
adc
bsf
aam
imul
fcomi
xchg
gs
out
cmp
ret
popa
mov
jns
loopne
xorps
adc
xchg
jl
push
lahf
inc
push
mov
cmc
adc
mov
push
pop
add
jg
cli
imul
or
ja
aad
jns
out
add
inc
lea
cltd
dec
cmpsb
scas
enter
in
jmp
cmc
pop
leave
and
mov
add
and
sub
je
in
jb
sub
jo
mov
xchg
xor
push
ljmp
nop
cmp
push
xchg
lds
dec
popf
bswap
lret
arpl
mov
cmp
cmp
xchg
xchg
dec
popf
mov
iret
adc
xchg
cmc
movsb
jns
pop
test
adc
scas
jecxz
mov
lods
imul
jnp
aam
ljmp
lods
test
or
mov
cmc
and
cmp
and
cmc
or
cli
outsl
or
xchg
add
std
mov
mov
adc
fcompl
push
ljmp
jecxz
pop
shll
les
dec
cmp
idivl
aad
lret
add
ret
out
cwtl
rcrl
ficompl
mov
movsb
add
jle
int3
sbb
pop
mov
scas
pop
add
sti
jne
notl
cld
xor
outsb
cmpsl
mov
dec
je
lea
add
fwait
sub
xor
cmc
xor
mov
pop
xlat
adcb
cli
dec
bound
jmp
rclb
lock
je
popf
insl
and
gs
sub
aad
jmp
add
pop
jb
mov
stos
dec
cmc
sbb
rcrl
loope
mov
mov
popa
lods
incl
aad
stc
add
mov
cltd
mov
push
mov
mov
je
andl
in
popa
outsl
xchg
mov
mov
leave
mov
das
or
stos
mov
cli
fldt
cmp
sub
push
mov
addl
xchg
dec
sbb
shrb
adc
jns
ret
push
loope
pop
shlb
clc
loopne
sub
gs
idivb
fs
mov
jecxz
loope
mov
adc
clc
fldcw
fstpt
pop
lock
stc
loopne
fimuls
cmp
sub
push
cli
jg
maxps
mov
mov
pop
idivb
mov
mov
les
mov
pop
rorb
iret
lahf
cwtl
inc
add
jmp
in
dec
movb
mov
xchg
stos
jno
call
je
hlt
mov
xacquire
insl
lods
aam
xor
jmp
dec
in
sbb
int
sub
lock
push
sub
int
cwtl
or
sti
xchg
fs
mov
xchg
and
mov
pop
gs
addr16
xorl
cmc
mov
mov
jle
fsubrl
pop
and
sbb
mov
out
decb
mov
test
loopne
cmpsl
and
imul
imul
adc
cmp
fst
add
push
arpl
call
pushf
push
pop
aaa
cs
cwtl
xchg
sub
int
cmp
jns
repnz
mov
imul
aam
fistpll
pop
cmc
decb
jo
loopne
test
pop
jp
rcrb
or
dec
test
lret
dec
std
inc
pusha
fisubrs
dec
push
fucomi
cmpsb
test
push
cmpsl
dec
inc
inc
mov
sub
mov
out
inc
lret
jecxz
mov
jns
mov
push
les
shl
addr16
sbbl
dec
sub
in
int3
mov
inc
mov
aad
cmp
fidivrs
sbbl
push
es
in
jmp
pop
cmp
lcall
mov
mov
and
or
sub
mov
xchg
mov
out
fnsave
inc
pcmpgtb
mov
add
out
mov
int
imul
outsb
ficompl
pop
and
xchg
jle
cmpb
mov
push
push
mov
enter
cmc
xlat
imul
mov
sub
addr16
dec
push
bound
call
sub
pushf
or
shll
inc
or
mov
test
cmp
jnp
adc
mov
dec
sub
sub
or
rcrb
imul
sbb
sbb
imul
adc
adc
dec
imul
cmpb
inc
cmp
fstl
pop
pop
dec
shll
ljmp
imul
xchg
sarb
mov
mov
stos
or
push
and
adc
imul
aas
imul
lds
into
lea
loop
and
cmpsb
add
jmp
adcl
adc
in
dec
cmp
ja
push
xor
jbe
adc
or
or
hlt
and
mov
push
xor
sbb
dec
xchg
pop
dec
test
sbb
rcl
inc
xchg
clc
jl
adc
cmpsb
out
sub
or
cmp
inc
test
fldcw
je
jo
insl
les
cmp
xchg
sarl
push
jno
lea
pop
daa
jle
push
ret
sub
mov
and
stos
dec
rcll
xchg
jle
lods
outsb
pop
dec
push
jns
mov
aam
iret
ja
mov
loope
popf
std
inc
movsl
or
negb
cld
stos
sti
mov
jge
pop
xchg
les
and
out
dec
adc
movsb
je
jmp
sub
popa
es
mov
pusha
lcall
sub
std
push
into
or
jecxz
inc
jb
mov
imul
gs
lods
jns
outsl
data16
mov
loope
cmp
dec
pop
push
mov
les
push
arpl
push
into
movl
aad
inc
adc
addr16
jb
mov
shrl
add
outsl
hlt
or
jae
and
mov
cltd
popl
popa
into
jmp
jmp
sbb
mov
fcmovb
in
adc
mov
call
jo
testb
mov
push
outsl
aad
fsubrp
lahf
cmc
mov
pushf
cmp
fdivrl
mov
pushl
maskmovq
idivl
popa
and
cmp
sbb
imul
fistl
inc
mov
dec
and
fs
jmp
stc
sbb
pop
and
cwtl
xor
lret
and
mov
int
sub
sub
cmp
sti
negl
repnz
jg
cmpsb
out
test
cltd
outsl
xchg
cmp
push
xchg
dec
icebp
push
adc
iret
aam
xor
aad
sti
sti
and
mov
popa
add
inc
sahf
jno
aam
sti
inc
leave
jnp
or
stos
add
xor
lods
movsb
push
cwtl
addr16
pop
xchg
daa
imul
test
or
testl
mov
sub
mov
out
idivl
or
xchg
sbbb
iret
dec
loop
pusha
jmp
cmp
cmc
fs
jnp
mov
mov
ljmp
shrb
repnz
pop
jl
push
jne
or
mov
sbb
test
cld
lcall
mov
sbb
lea
push
cmp
push
xor
pop
xchg
lret
xor
cmc
dec
pop
sub
std
pop
sub
ljmp
je
pop
adc
cmpsl
test
arpl
push
pop
push
lcall
jne
sub
imul
pop
or
fsubrp
mov
jae
pop
xor
aas
out
add
adc
shll
mov
cltd
fnstcw
jmp
shll
imul
aaa
mov
loope
add
jge
mov
pop
clc
cwtl
jno
test
stos
and
or
pop
notl
xlat
mov
icebp
sbb
movsb
mov
jns
pop
push
fdivrl
push
or
cmp
mov
sub
cmp
cli
pmaddwd
out
xor
test
shll
mov
jnp
pop
iret
aad
clc
iret
sub
loope
pop
sbb
call
fnstsw
and
mov
pop
lock
int3
jmp
cmp
mov
push
testb
and
mov
inc
fildll
jae
cmpsb
sbb
add
outsl
xchg
jae
and
in
aad
sti
push
arpl
jae
int
dec
movsb
mov
sub
std
cltd
dec
xchg
adc
jp
inc
add
out
insb
les
adc
lahf
jb
pop
mov
cmp
in
mov
repnz
mov
pushf
pop
lock
bswap
lea
inc
nop
xchg
inc
in
cmp
pushf
sub
imul
lods
xchg
negl
lret
sub
pop
stc
cmp
xlat
push
dec
xchg
inc
mov
cli
jl
addr16
std
scas
inc
xchg
icebp
mov
testb
adc
popa
or
jne
mov
and
jmp
shr
lahf
xchg
inc
dec
xor
sbb
cmp
out
mov
imul
ss
cmc
or
fimuls
and
js
pop
out
cli
popl
hlt
pop
stc
andl
movsl
xchg
notb
iret
xor
cwtl
push
xchg
mov
in
mov
sub
vphsubbw
sub
mov
popa
push
je
in
and
lcall
test
cmp
mov
push
fisubl
fimuls
xchg
leave
sub
clc
inc
fmulp
sub
mov
test
mov
int3
dec
in
sti
jge
addb
inc
mov
push
arpl
cmp
or
mov
and
sub
sahf
lea
inc
rolb
das
stc
dec
scas
aam
pop
shrl
lods
mov
mov
out
stc
sbb
xchg
pop
cmc
fsubl
mov
or
jnp
loopne
clc
mov
jns
pop
aam
add
dec
shrl
mov
jnp
cmpsb
mov
stc
lods
xor
dec
mov
adc
dec
fisubrl
ret
test
mov
rorb
jl
lds
sbb
aad
cld
push
jg
mov
in
dec
fisubrs
sbb
mov
rorb
mov
mov
push
or
push
scas
add
shl
jae
jge
and
stos
xchg
add
cwtl
push
testl
sarb
repnz
gs
jnp
push
pushl
popl
xchg
loop
push
pop
aam
sbb
cmp
xorl
cwtl
dec
lods
out
adc
jae
je
popf
or
or
sbb
enter
inc
xor
jle
cmp
cmpsl
aad
nop
clc
push
push
push
mov
xchg
stc
vcmpss
into
inc
fnstsw
xlat
ja
mov
mov
sub
fstpt
mov
outsl
sbb
xor
mov
in
imul
and
iret
mov
jmp
pop
aad
js
and
leave
notl
cmpsb
int
adc
mov
lods
in
push
sbb
add
mov
pop
mov
movsl
mov
adc
fbstp
jmp
pmaddwd
dec
and
loopne
scas
mov
aad
sub
shrl
mov
or
lds
hlt
lret
pop
dec
out
out
cmp
shrl
es
std
addr16
add
sub
pop
test
ret
adc
add
jg
add
test
aad
xor
repnz
dec
adc
fidivl
ret
ret
fs
int
dec
addr16
iret
popf
insl
pop
push
jg
sbb
mov
aam
std
push
addr16
fsts
and
mov
adc
mov
fs
jecxz
xchg
fdivr
jmp
rclb
icebp
sub
inc
popa
sahf
aam
stos
pop
jne
cltd
mov
pop
or
testl
jg
imul
xchg
jge
andb
mov
repnz
fbld
sbb
jle
or
cmp
pop
jge
in
dec
cld
jl
mov
jo
inc
jnp
setne
filds
cmp
lahf
out
arpl
ret
in
std
aas
ficomps
adc
jae
jnp
inc
xchg
xor
push
dec
movsb
call
das
insl
icebp
scas
insl
cmp
or
add
rcll
pop
shll
or
mov
xor
mov
mov
pop
mov
jg
in
cs
push
push
pop
add
clc
cmpsb
cmp
and
sahf
js
mov
lods
mov
rcl
fldl
cmp
and
pop
aad
hlt
or
push
lock
sbb
dec
mov
lcall
cmp
out
subb
popa
cmp
push
add
cmp
jo
data16
inc
xor
enter
xchg
add
add
popa
popa
fisubs
adc
fimuls
test
pop
nop
arpl
add
pop
shll
push
cmp
test
insb
movsb
iret
out
loopne
mov
in
fcmovnbe
mov
xchg
jmp
into
cmc
mov
jae
add
enter
gs
or
push
push
pop
dec
adc
and
mov
fsubrs
mov
ret
mov
sub
cmp
rcl
daa
call
or
cli
imull
jl
mov
jns
clc
shl
sub
dec
sub
scas
aam
pop
in
or
fs
cmpsb
bound
sbb
add
imul
cmp
push
adc
out
mov
je
test
xchg
imul
pop
jno
xchg
loopne
push
outsl
aad
mov
jo
mov
sbb
dec
movsb
dec
mov
add
cmp
daa
jl
dec
add
sub
push
popa
mov
mov
push
inc
aas
add
mov
pop
data16
or
insl
mov
iret
jge
cmpsb
popa
add
imul
push
xchg
sbb
out
push
mov
stos
xchg
int
fsubrl
out
int
add
inc
dec
pop
in
lods
mov
mov
sti
xor
sbb
and
push
popa
lcall
inc
mov
ret
xchg
push
loopne
push
shrb
or
dec
xchg
dec
jl
mov
test
adc
jo
jno
mov
pop
mov
popf
dec
cmp
dec
or
test
rclb
imul
pmullw
push
xor
addb
add
cmc
inc
dec
fcompp
mov
push
pop
std
or
cmpsb
xchg
into
add
bound
or
mov
inc
pop
cmpsl
outsb
rcr
pop
or
ljmp
mov
fs
sbb
or
cmpsb
jne
xchg
and
stos
je
jae
daa
xchg
push
dec
andl
out
fdivs
lods
push
clc
ds
gs
adc
iret
dec
or
cmp
push
fcoml
and
dec
adc
mov
fs
out
add
xchg
ud1
sbb
mov
mov
mov
leave
bound
jg
sbb
sub
xor
jmp
aad
mov
shrl
loope
adc
mov
cmpsb
lock
mov
mov
push
shl
fwait
pop
sub
sti
cmp
and
mov
pop
mov
hlt
push
stc
shrl
int3
mov
shll
dec
sti
xlat
shlb
or
sub
cmp
jp
lods
push
mov
push
aad
sub
xchg
adc
test
mov
mov
clc
inc
inc
test
pop
sbb
cmp
jmp
int3
add
gs
mov
test
push
fcmovu
div
and
adc
cmp
arpl
push
mov
xlat
add
aaa
imul
mov
sahf
bound
jle
out
mov
outsb
testl
cmc
ret
out
cmp
adc
leave
sahf
cmp
nop
xor
loope
and
loope
loope
cmp
jb
push
pop
test
clc
popa
fisubl
sub
jmp
outsb
ja
test
aas
mov
popa
aaa
mov
nop
add
sub
add
push
lcall
add
push
cmp
jl
mov
adc
cmp
es
stc
cwtl
lahf
push
xchg
sahf
aaa
or
mov
cmc
js
push
rcl
ja
adc
mov
push
gs
lods
sub
fists
loopne
test
push
jl
cwtl
inc
lret
scas
cmp
inc
xor
inc
mov
int
xchg
pop
inc
out
iret
lock
push
push
cli
xchg
inc
jg
pop
ret
and
fsubs
loopne
or
sub
or
in
out
sbb
mov
mov
ss
jns
sar
fucomp
outsl
or
out
cmpsb
pop
int3
cmp
xor
outsl
push
jne
jns
adc
in
subb
jnp
pop
adc
push
xchg
fsubr
push
sub
jnp
add
fwait
aad
nop
mov
pop
and
mov
xor
lods
jmp
jae
rsqrtps
and
mov
cmp
mov
inc
xlat
stos
iret
push
xchg
or
sti
imul
pusha
inc
push
fmull
cli
je
rcl
mov
hlt
or
jae
inc
add
cmp
or
pop
mov
xchg
sbb
push
cmc
loop
movsb
mov
jne
xchg
jge
test
testl
out
adc
dec
xor
lcall
shlb
mov
dec
xchg
stos
mov
hlt
icebp
xchg
les
fcmovu
and
and
push
or
xchg
subl
in
idiv
jae
test
mov
push
push
sbb
int
lahf
test
xor
add
and
add
shufps
jo
push
cmc
arpl
pop
std
rcr
mov
dec
imul
int
pop
popa
xchg
and
fs
xchg
inc
pushf
dec
mov
jl
pop
jl
xchg
test
mov
cwtl
lret
jmp
insl
xchg
mov
out
add
mov
push
in
mov
dec
push
cmp
lods
mov
mov
jmp
rclb
mov
cmp
sub
lea
cmpsb
insl
xor
test
stc
and
mov
jl
inc
sbb
and
out
repz
jae
push
imul
inc
sbb
pop
pop
pop
jae
in
cltd
mull
gs
mov
dec
xchg
mov
rolb
lcall
xchg
into
aad
cmp
and
adc
or
aam
ret
xchg
out
js
test
push
sarl
push
adc
int3
pop
inc
or
jo
fisubrl
sahf
jle
push
xor
push
pushf
aad
jb
rorb
or
fcompl
and
pop
gs
test
cmpsl
cmp
add
aad
das
sub
stc
int
loope
aad
adc
pop
dec
aas
sarl
mov
mov
punpcklwd
test
lret
add
add
mov
sbb
dec
test
push
cmp
xchg
rcl
je
arpl
adc
adc
mov
das
cmp
outsl
jae
imul
and
mov
xchg
rorl
push
lods
and
and
jg
cwtl
sub
jno
add
int3
daa
aas
ja
cmp
cwtl
dec
aad
xchg
scas
aad
add
and
add
and
inc
inc
aad
adc
add
dec
xchg
cmpsb
mov
inc
push
js
pop
aas
xor
sbb
lods
test
xlat
test
mov
cmpb
push
jnp
adc
popa
xchg
add
jge
cmc
int3
xor
xchg
gs
cltd
push
add
dec
sub
stc
mul
mov
leave
std
or
std
inc
data16
inc
mov
mov
push
scas
int
idiv
dec
mov
lcall
push
adc
call
dec
push
aad
adc
pusha
jmp
in
xor
scas
call
push
jns
mov
dec
push
shll
sti
sbb
mov
push
push
enter
inc
rorb
packsswb
and
mov
cmpl
ds
cwtl
rorl
jl
into
mov
das
pusha
faddl
arpl
mov
dec
jge
leave
scas
icebp
or
inc
out
sub
mov
dec
sbb
sbb
scas
imul
jno
mov
jmp
jle
int3
and
adc
sbb
and
and
xchg
cmp
push
inc
neg
mov
jl
popa
fsts
test
cltd
aas
sub
and
jp
sub
jge
cld
in
or
repz
mov
stos
or
into
mov
adc
div
daa
adc
adc
das
inc
call
mov
mov
or
mov
mov
add
push
int3
rcrl
jns
sbb
lret
int3
push
mov
loopne
mov
rorb
jp
add
loop
mov
pop
jo
imul
out
and
push
mov
jmp
xchg
xor
outsl
mov
or
inc
in
add
sbb
inc
icebp
test
outsl
add
mov
aad
add
adc
lcall
jno
push
aad
xchg
adc
dec
aas
fbstp
adc
lods
popf
fcmove
sub
clc
mov
push
lahf
je
out
or
jle
test
loope
data16
movsl
xchg
xor
fisubs
and
pop
roll
and
stc
or
sbb
stc
test
cmp
xlat
mov
or
or
inc
and
inc
xlat
push
test
das
das
aad
mov
jnp
lds
daa
pop
push
adc
imul
cmp
nop
inc
or
lods
lods
or
lods
fnstsw
and
test
pop
mov
call
or
push
push
shl
push
imul
or
mov
inc
sbb
sub
sbb
dec
js
xchg
popa
and
mov
cmp
jne
shr
add
lahf
sub
popa
push
sub
mov
mov
imul
lret
dec
push
arpl
ret
enter
fwait
jge
or
shlb
div
sub
cmp
sti
lods
shl
mov
sub
dec
outsl
gs
idiv
mov
lods
adc
adcl
cmp
aaa
popl
hlt
shl
push
jns,pt
int
push
dec
sbb
cli
xchg
cmp
insl
xlat
xchg
test
mov
das
pop
xchg
xor
int
mov
pop
push
adc
ljmp
fidivl
adc
pusha
push
daa
out
pop
and
push
push
test
mov
dec
jns
movsl
cld
lea
pop
xchg
ljmp
add
mov
xor
add
stos
fstps
jmp
and
xchg
stos
cmp
push
call
addr16
int
rcrl
mov
cmpsb
int3
or
cmp
pop
and
sar
enter
jns
xchg
jno
pop
in
add
dec
js
add
adc
popa
cmp
or
xchg
out
mov
jp
push
mov
adc
dec
dec
xor
xchg
push
out
in
in
xchg
mov
je
mov
cmc
pop
add
js
sarl
scas
inc
push
and
xlat
or
iret
rorb
jne
jbe
loope
repz
sub
test
inc
pop
scas
xor
loopne
dec
jg
aad
xchg
inc
jge
out
je
into
mov
xchg
xchg
pop
ds
mov
stos
sub
mov
cmp
ljmp
imul
xchg
dec
mov
add
dec
xchg
ficompl
fnstsw
pop
stc
mov
sbb
rclb
cld
jge
pop
test
add
cmp
loop
sub
leave
xchg
insl
mov
aad
push
sbb
ret
cmpsl
mov
cmp
bound
sub
and
test
int
lcall
movsb
xlat
sub
aad
fwait
shl
test
shlb
out
mov
mov
hlt
rol
movsb
sarb
testl
fs
aad
xchg
sub
xchg
xor
cmpsl
stos
add
adc
adc
or
jae
jmp
scas
mov
mov
repz
xchg
loope
je
push
pushf
leave
lea
iret
std
add
nop
inc
jg
aad
pushf
cmp
aaa
add
push
mov
sub
fadds
aam
in
push
lock
cmp
jo
movsl
adc
out
jnp
scas
jle
fbld
mov
insb
fnsave
cld
mov
lret
aas
les
jbe
push
outsl
imul
jo
xchg
scas
std
inc
xor
inc
inc
cli
sbb
jmp
mov
mov
add
sbb
dec
and
shlb
xchg
add
loop
mov
xor
adc
dec
sbb
xchg
in
adc
sub
imul
push
data16
sbb
fstp
push
in
js
daa
pop
dec
in
repz
xchg
aam
cmp
add
cmc
add
xor
xchg
inc
fisttpll
jb
jl
aad
lds
xchg
and
fstpl
stc
xchg
inc
iret
cltd
mov
xor
and
in
mov
addr16
lods
mov
add
ljmp
sti
mov
cmpl
jnp
cmp
push
aam
sub
push
xor
mov
ljmp
dec
hlt
adc
push
rorb
xor
cmp
bound
in
push
add
cmp
inc
cld
mov
jl
xchg
insb
cmp
leave
or
rcrl
mov
or
subb
push
fs
ret
xor
xor
in
xchg
jl
adc
adc
lods
das
push
cmp
insb
inc
or
xchg
add
rcr
cmc
int
sahf
call
inc
inc
dec
xlat
xchg
pop
test
sbb
popf
mov
jl
push
or
pop
push
loopne
dec
push
mov
push
aad
push
mov
push
in
sub
clc
cmp
adc
dec
push
leave
in
mov
les
test
push
setne
iret
push
fadds
pusha
jne
sub
ja
mov
or
mov
sub
dec
clc
sbb
mov
mov
clc
sbb
enter
addb
mov
dec
movl
pop
pushl
mov
inc
mov
popf
test
cmpsl
and
pop
loope
test
xchg
mov
pop
fisttpl
xchg
inc
xchg
or
arpl
push
aas
xor
shll
push
add
cmpsl
test
dec
lds
mov
stos
mov
insb
insl
mov
aas
pop
inc
iret
dec
shll
cs
sbb
xor
stos
cmp
lods
enter
inc
cltd
push
sub
testb
addr16
or
inc
jg
mov
into
adc
aad
scas
or
xorl
cmp
pop
sbb
movsb
popf
pop
out
mov
jl
pop
insl
jmp
aas
xchg
push
sub
pop
adc
test
inc
mov
adc
out
mov
jp
ja
mov
or
faddl
mov
xchg
test
test
test
movsl
mov
jbe
ror
mov
dec
add
mov
stos
int3
adc
loopne
add
std
and
cmp
jl
push
orb
out
add
mov
push
xchg
int
mov
sbb
iret
add
ficoms
cld
sarl
std
xor
into
cmc
xor
lea
lcall
xchg
jnp
loop
push
ljmp
test
scas
pushf
mov
dec
sbb
aad
jb
push
in
jbe
pop
mov
mov
push
stos
icebp
mov
sub
adc
xchg
or
xchg
push
xor
adc
cli
and
or
mov
mov
adc
test
sti
fwait
xchg
cmp
add
and
inc
loopne
mov
mov
jg
inc
nop
sar
jnp
and
jne
push
int
sbb
mov
loopne
jnp
push
add
push
rcrl
pop
mov
xchg
lahf
jmp
cmp
sarl
mov
pop
nop
fistps
outsl
xchg
add
decb
mov
xchg
out
repz
and
pop
push
jl
inc
xchg
jo
push
fildl
add
dec
stos
fisttps
push
mov
mov
imul
or
mov
mov
gs
pop
nop
popl
fs
das
lds
jmp
ret
jb
das
sbb
cmp
lods
aaa
lock
cmp
out
movsb
daa
test
mov
lods
fsubrl
jo
mov
xor
and
cmc
jle
ds
iret
lods
add
xor
xor
call
adc
popa
pop
aad
adc
cmp
mov
mov
mov
stos
ds
mov
add
dec
test
mov
sbb
arpl
into
rsm
sbb
sub
push
int
jp
iret
or
or
repz
mov
fxch
or
aad
push
xchg
fdivl
fstps
js
inc
sub
popf
sbb
pop
jp
cmc
cmc
iret
sub
shll
mov
sub
adc
mov
xchg
in
jecxz
pop
aad
sub
fldt
mov
jle
xor
mov
cld
jmp
adc
jg
jae
or
pop
imul
icebp
jle
out
mov
inc
mov
shl
xor
int
sbb
mov
or
das
mov
lods
in
cmpb
pop
or
pop
lret
xchg
mov
fbld
adc
adc
mov
jge
jmp
or
sbb
mov
xor
jb
out
adc
xchg
outsl
movsb
lock
or
pop
cmp
pop
cs
jb
lock
sub
cmp
push
repnz
in
jb
stc
out
adc
cmc
decl
insl
push
jbe
in
sub
sbbl
sbb
dec
aad
push
and
sti
xchg
dec
and
pop
jl
add
xor
add
cmc
mov
push
push
test
inc
mov
sbb
vmwrite
stos
movsb
mov
sti
inc
iret
cmp
dec
jmp
addr16
and
insl
bnd
sub
mov
mov
ret
mov
mov
test
cli
push
testl
int
xlat
popf
dec
scas
stc
xor
cmp
cmp
arpl
sub
ja
lret
aad
push
jg
pop
int
mov
jns
fimull
lcall
and
out
popf
mov
pop
inc
pop
aam
xor
shlb
mov
xorl
adc
cmp
sbb
pop
pavgb
jno
push
adc
push
mov
popa
xchg
icebp
je
add
pop
stc
pop
inc
scas
add
cmpsl
xchg
xchg
test
je
stc
mov
les
cmp
lods
pusha
jae
decl
sbb
out
popa
inc
mov
in
mov
push
xor
push
push
iret
push
lcall
and
cmpsl
mov
iret
push
mov
xchg
aam
adc
inc
lahf
stc
mov
pop
stc
jnp
mov
into
push
ret
xor
cmc
rcr
inc
iret
dec
aad
dec
xchg
jnp
push
jnp
push
bound
cmc
std
mov
je
stos
test
mov
cmp
jecxz
aad
fidivl
scas
mov
push
iret
pop
addr16
xchg
inc
fbld
cld
push
movsl
and
bound
mov
dec
mov
lcall
inc
jecxz
int3
inc
test
xchg
idivb
scas
orl
sbb
and
int
dec
or
pop
and
loopne
mov
aad
xor
mov
int
fbld
lods
and
pop
rcr
sub
cmp
pop
cmp
jg
push
fisubrl
pushf
repz
mov
push
xor
fwait
dec
adc
jl
sub
rcrb
adc
mov
mov
push
dec
mov
rol
or
in
lcall
cli
adc
lret
push
add
push
int
and
mov
clc
out
sub
leave
pop
dec
xchg
test
and
loope
popa
stos
cmc
jl
lds
dec
in
test
dec
add
mov
int
xchg
lods
adc
mov
lcall
cmp
xor
daa
push
dec
lods
shlb
imul
dec
adc
mov
js
sti
cmc
sub
and
call
ljmp
xchg
mov
inc
or
mov
aad
in
adc
xlat
lods
and
dec
dec
in
and
inc
in
enter
cmpsb
inc
push
lock
adc
push
dec
jge
push
cmp
arpl
mov
pop
mov
push
shr
pop
cmp
notl
mov
cwtl
jp
jae
adc
loopne
inc
nop
pop
push
adc
xchg
xor
sbb
push
call
sti
loop
adc
mov
ja
dec
push
loopne
sarl
fldcw
into
cmc
mov
imul
sub
sti
mov
inc
sbb
or
test
sar
imul
js
xlat
mov
adc
inc
andl
sahf
je
jae
xchg
and
les
maskmovq
idivl
ljmp
lods
jmp
sbb
addr16
cmc
dec
sbb
mov
jl
cli
loopne
lock
cmp
push
pop
sub
pop
cli
int
rol
cld
jmp
aad
cmp
dec
repnz
dec
xchg
inc
sub
fs
jne
stos
lcall
out
in
fucomip
aad
aad
int
xchg
ds
testb
mov
mov
dec
lcall
lret
or
xor
mov
sub
xchg
jl
pushf
es
cmp
lds
int
sahf
and
jnp
push
cmp
mov
mov
jno
pmaddwd
es
add
cmp
mov
push
vaddsubpd
ffree
push
xchg
int3
sbb
out
xchg
add
or
test
ds
lahf
push
jo
repz
cmp
jmp
repz
inc
push
pop
dec
cli
mov
inc
xchg
dec
movsl
fprem1
xchg
rolb
outsl
sbb
inc
movsl
jne
dec
sbb
mov
dec
shrl
int3
jg
xor
push
sbb
cmp
xor
into
lods
fisttpll
arpl
jl
divb
gs
rdtsc
movsl
mov
add
and
jg
adc
shll
jp
out
push
xor
push
lds
mov
popf
hlt
scas
xchg
inc
fdivl
mov
and
jne
push
fdivs
idivl
int
int
pop
dec
cmp
int
div
pop
gs
sbb
test
sbb
cmp
inc
aad
fdivr
dec
mov
nop
cld
rorb
push
loope
in
xchg
notl
mov
mov
xchg
adc
lods
ja
push
mov
out
pop
cli
inc
push
cwtl
mov
fisttpll
data16
es
movsb
shlb
sub
outsl
mov
enter
int3
mov
mov
sbb
in
xchg
pop
imul
xchg
mov
jns
pop
lea
dec
mull
scas
inc
out
cmp
add
outsl
or
inc
jmp
cmpsl
fistpl
loope
add
mov
and
js
loop
lods
mov
jb
and
daa
mov
adc
xchg
arpl
push
cld
fstps
jg
call
mov
pop
aad
sbb
je
mov
push
mov
sbb
fsubr
mov
ja
mov
or
inc
adc
push
sti
push
xchg
cwtl
sub
mov
sahf
fisttpl
xchg
push
daa
jecxz
jno
pop
ret
popf
ret
mov
jecxz
test
dec
add
stc
sti
push
dec
sub
into
pop
mov
jmp
ja
into
inc
aad
int3
jb
jne
clc
cmc
enter
scas
xchg
push
and
sub
or
jmp
jbe
xchg
xlat
data16
jmp
popf
call
insb
or
scas
cmc
movsl
xor
js
in
fimull
inc
xchg
fidivs
xor
sbb
shlb
push
push
sub
mov
pop
hlt
mov
inc
call
int
aam
stos
nop
dec
sbb
hlt
mov
push
maxps
aam
jmp
test
xchg
or
and
cld
dec
pop
cli
rorl
dec
pop
dec
dec
mov
xchg
clc
adc
mov
rcrb
cmp
fucomip
jmp
in
cmp
push
divl
cmp
inc
jge
add
xchg
jns
in
jne
ret
into
cwtl
inc
inc
jns
cmp
mov
adc
mov
scas
loopne
xchg
dec
sub
add
out
fisubrl
js
xchg
lods
mov
enter
adc
add
pop
mov
movsb
aad
push
iret
or
dec
pushf
cltd
xor
loopne
outsl
out
movsb
jecxz
adc
es
sub
nop
xor
jns
jae
and
mov
jne
xchg
int3
lret
mov
lods
pushf
js
push
into
cmc
mov
push
xchg
and
stos
jmp
mov
int
sbb
jecxz
pop
mov
divl
mov
sub
aad
or
mov
insb
lea
adc
cs
push
fisttpl
stos
test
jbe
mov
imul
xchg
push
mov
sub
mov
jl
int
shl
mov
jnp
mov
fdivrl
add
scas
xchg
cmp
aam
pop
jp
loop
imul
loopne
lsl
and
int3
insl
insb
loope
adc
add
jne
and
pop
dec
aad
push
stos
or
xor
lea
lahf
test
adc
xlat
fwait
mov
push
inc
jmp
xchg
xchg
mov
sbb
rclb
out
aad
or
and
cmc
or
sti
call
and
psubsb
or
lods
mov
mov
dec
aad
pop
cs
xchg
inc
add
jmp
fists
test
lcall
jge
les
xor
push
cmp
lds
dec
jg
push
fdivl
mov
mov
cwtl
dec
add
push
adc
aam
popf
cltd
dec
fsubrp
popf
inc
adc
cli
inc
fbstp
sbb
add
int
mov
movsb
cmp
inc
aam
scas
scas
sti
xchg
xchg
sub
jno
jo
mov
jb
cmc
mov
mov
repz
jecxz
out
movsl
arpl
sti
pop
ljmp
xchg
push
in
and
enter
push
lods
std
mov
call
rcl
mov
outsb
xchg
lock
xchg
repnz
call
es
xchg
outsb
push
cmpsb
arpl
loope
cvtdq2ps
gs
test
mov
inc
lret
call
mov
push
or
test
incb
jmp
lods
fmuls
out
out
jbe
aaa
or
int
notl
xchg
mov
add
cmp
loope
adc
cmp
or
pop
mov
cmp
and
pop
shl
inc
bound
scas
testl
imul
cmp
popf
mov
xchg
xchg
add
cmp
push
mov
das
ja
adc
jae
das
into
fucomp
add
push
sbb
fcompl
add
aam
mov
push
adc
int
jns
jl
or
adc
pop
mov
sbb
jl
pop
cmp
sbb
and
or
mov
mov
sub
ficompl
scas
sbb
add
orl
mov
popf
js
mov
and
jg
or
dec
cmp
addl
push
xchg
je
push
add
jns
cmp
push
imul
jg
jb
xchg
in
fcomi
repz
jne
imul
aad
jl
flds
inc
mov
push
fisubrl
jmp
out
aad
sar
push
test
iret
mov
ret
loope
out
addl
movsl
jne
call
mov
div
jge
lret
adc
dec
mov
mov
push
mov
mov
cmp
mov
testb
sti
adc
pop
std
mov
scas
dec
mov
sbbb
jno
cmp
pop
and
jno
push
jmp
push
fcompl
dec
aad
call
push
mov
push
mov
push
les
cld
adc
cmp
into
add
xchg
loope
std
repnz
ja
adc
mov
adc
push
dec
xchg
mov
cmp
lahf
mov
stc
test
jp
lahf
add
into
jne
test
cmpsl
xchg
in
movsb
pushl
lea
push
xchg
inc
rorl
call
testb
dec
sub
cmpsb
vpmacsww
adc
push
sub
movsl
outsl
pmullw
mov
adc
push
imul
pop
pop
cmpsl
push
jno
jno
faddl
iret
inc
sti
stc
sub
notl
lcall
scas
test
add
aad
xchg
pmaxub
loope
xchg
incl
ljmp
rcll
push
add
pop
push
pop
sbb
jl
mov
jecxz
inc
xor
mov
dec
mov
push
dec
add
mov
into
ds
sub
pusha
push
pop
sub
mov
mov
int
fadds
mov
sbb
outsl
mov
adc
out
rcrb
movsb
lret
inc
mov
iret
add
jno
cmp
int
and
sti
xchg
cmp
sbb
dec
cltd
add
fsubrs
pusha
add
inc
mov
jl
and
imul
sub
pop
add
aad
pop
mov
cmp
fbld
loope
adcl
outsl
pushl
and
or
lea
add
nop
sahf
mov
jl
int3
inc
push
movsb
daa
mov
lcall
rclb
mov
outsl
and
js
add
in
dec
sar
cs
jns
push
insl
dec
xor
jmp
jno
cmp
rcll
ud2
insb
push
popf
out
mov
popa
movsb
pop
imul
dec
cmp
popf
add
stc
mov
add
xchg
scas
inc
mov
mov
pop
jmp
dec
and
push
mov
or
jecxz
aad
fbstp
or
into
cld
push
jle
xorl
mov
divb
cld
pop
inc
sbb
insl
cmc
iret
push
inc
jge
aad
nop
add
xchg
scas
test
stos
imul
cmc
movsb
dec
repnz
lods
es
and
dec
fiaddl
fisttps
enter
xor
popf
pop
or
add
fidivl
sub
inc
sbb
pop
iret
in
movsb
nop
addb
cli
cli
cmp
xor
int
sub
das
inc
jmp
js
jge
mov
mov
push
fdiv
or
xor
scas
stos
xchg
dec
pop
xor
in
fiaddl
push
cmc
dec
xchg
push
pop
out
adc
adc
mov
cmp
pop
cmpsl
imul
les
xchg
xchg
push
inc
cmpsb
sbb
mov
orb
repz
add
aad
fwait
xor
mov
icebp
leave
mov
mov
icebp
jge
inc
inc
imul
xchg
icebp
push
push
lcall
in
rcrl
cmp
jmp
lcall
sub
lret
iret
scas
aam
cli
aad
in
cmpsb
incl
mov
dec
out
mov
inc
call
cli
jne
pop
addr16
inc
sbb
into
pop
mov
decl
jno
aad
test
pop
and
adc
adc
decb
mov
lods
bound
mov
adc
ror
into
cmp
sahf
jo
push
sti
xor
test
and
push
sub
dec
pushf
xchg
push
inc
ljmp
leave
lret
dec
nop
xchg
jne
cltd
push
adc
out
inc
jl,pn
mov
dec
cld
test
das
dec
cmc
hlt
pop
push
lcall
je
insb
or
iret
pop
jmp
adc
or
das
cmp
lods
xchg
shrb
ljmp
xchg
cmpb
and
shrl
enter
mov
sahf
pop
jmp
mov
sbbl
xchg
ret
call
das
data16
pop
dec
dec
push
daa
cwtl
mov
in
imulb
mov
divl
cmp
shl
jmp
sub
xchg
jb
xor
sub
addr16
xchg
ljmp
jmp
mov
or
push
sub
ror
call
mov
xchg
out
jge
nop
xchg
mov
mov
jno
pop
inc
popa
rcrl
lahf
push
inc
pop
cmp
dec
int
and
add
jp
aas
cmp
mov
mov
aam
pop
mov
xchg
stc
and
popf
ljmp
into
cmc
adc
xor
into
push
js
push
mov
lret
divl
push
out
jmp
dec
arpl
lods
adc
pop
xchg
lret
jne
jno
int3
jb
in
inc
dec
arpl
mov
outsl
std
cli
call
fdivp
push
add
popf
mov
push
fbstp
popa
sub
pop
jb
and
cld
xchg
movsb
jne
in
or
cmp
dec
les
aas
jp
or
jae
js
fstpt
ss
repnz
adc
aad
frstor
js
jge
inc
lods
lock
lods
dec
imul
xor
inc
adc
jecxz
stos
cwtl
imul
and
call
rcl
rcl
jb
jne
mov
jae
es
inc
or
jnp
mov
sbb
popa
xchg
pop
and
jmp
out
xor
mov
jp
jae
popf
insl
sub
xchg
pop
cmp
je
xchg
bound
pop
imul
push
out
mov
mov
in
pusha
leave
dec
adc
sub
inc
imul
and
iret
cmc
insb
mov
or
xorb
push
js
mov
push
in
aas
adc
pusha
int3
bswap
pop
ds
popa
jne
popf
adc
mov
push
mov
add
inc
std
pop
insb
sti
dec
dec
sub
fidivrs
push
xchg
ss
neg
cmc
pop
jl
jg
call
sahf
xlat
mov
cmp
loop
lods
dec
gs
sarl
sahf
in
add
sub
sbb
or
push
add
fisubl
mov
and
xorl
fisubrs
mov
scas
and
movsl
push
cwtl
pop
cmp
dec
push
aad
jg
fidivs
pop
jae
cmp
ds
roll
mov
pop
mov
dec
nop
hlt
add
pop
imul
mov
mov
call
mov
mov
loope
or
push
or
fisubrs
sub
loope
out
inc
lret
aad
out
push
call
jmp
aam
sub
test
xor
test
xor
stos
sbb
int3
aad
or
fstpl
inc
fidivrl
jle
and
fidivl
outsl
push
cmp
ret
in
push
cmp
push
xchg
out
add
loope
ret
gs
adc
ss
add
pushf
mov
jl
cmovbe
adcl
mov
imul
scas
sbb
std
jne
js
mov
cmpsb
sub
mov
lock
repz
pop
shlb
cmpsl
or
add
pop
jmp
sub
in
mov
xchg
stc
cmp
ret
jne
sub
dec
dec
gs
sbb
sahf
out
cltd
lods
imul
dec
out
lcall
xchg
ds
adc
xor
push
sub
es
xorb
adc
push
push
in
xor
jnp
das
idivb
dec
out
decb
gs
cmp
dec
xor
out
ret
cmp
cs
mov
jno
sbb
cmp
pop
and
sub
sub
push
pop
mov
cltd
jo
outsb
mov
push
or
movsl
cmp
pop
call
mov
aad
out
ret
add
aam
imul
push
out
popf
adc
std
add
push
pop
arpl
cmp
iret
jb
mov
push
fsubrl
cmc
mov
sti
in
add
mov
enter
and
push
xor
or
sti
jg
sub
ja
dec
scas
pop
nop
stc
mov
aas
and
cmp
pusha
notb
pop
jl
test
xor
cmp
push
pusha
xchg
add
js
cmc
gs
mov
xchg
imul
test
inc
lds
or
mov
jo
xor
cmp
rcrl
cmp
jo
push
jno
nop
fidivrs
popa
ljmp
lret
xor
mov
movb
adc
sub
jns
or
pop
push
fidivs
hlt
xchg
jl
push
mov
pop
jnp
call
and
jl
rorb
cmc
in
ja
lods
cmp
test
int3
lahf
aad
ja
sar
fdivrl
js
adc
fdivrs
mov
int
push
and
xchg
cwtl
fisttpl
pushf
and
adc
data16
arpl
inc
out
push
cwtl
cmp
ja
push
inc
cwtl
mov
es
xor
in
and
xchg
sub
int
clc
jg
outsl
mov
sub
xchg
push
test
mov
xchg
faddl
or
mov
stos
cmp
es
inc
sub
fistl
popa
jno
sub
stos
mov
mov
mov
add
xchg
imul
mov
fiaddl
xor
in
mov
leave
cmp
or
lcall
lret
fistps
imul
scas
mov
es
add
dec
das
adc
jecxz
aaa
jl
mov
repnz
xchg
push
xchg
sub
incl
mov
jp
in
ja
movsb
jns
fbld
fadd
cmp
movsb
pop
dec
mov
call
add
leave
pop
arpl
dec
cmc
cmp
pop
fs
addr16
jg
icebp
test
jmp
mov
lock
sbb
xchg
fcmovnbe
mov
subl
mov
jno
jnp
je
push
xchg
or
or
outsl
jp
dec
push
inc
or
iret
cmc
imul
add
je
mov
sbb
fisubs
dec
into
xchg
push
or
pop
or
or
sbb
lods
outsb
mov
cwtd
mov
dec
mov
in
fs
sbb
or
cmp
imul
into
add
ficoml
cmc
pop
fimuls
mov
cmpsl
adc
push
test
stos
jnp
scas
fisubrs
adc
mov
adc
mov
in
rcl
pop
dec
xchg
cmp
xchg
imul
cmp
sub
mov
jmp
gs
push
ficompl
les
gs
fisttps
cmc
dec
pop
mulb
aad
push
mov
jmp
cltd
aam
inc
xchg
sbb
adc
repz
add
out
push
dec
sbb
cs
loope
mov
out
inc
pusha
xchg
inc
pusha
cltd
push
adc
daa
mov
lret
push
or
xchg
loope
jecxz
jp
xchg
loop
gs
cmp
fldcw
aaa
iret
ljmp
out
aad
jne
or
push
call
jg
dec
xchg
xlat
data16
sub
add
cltd
loop
inc
mov
add
xchg
xchg
and
repnz
les
push
rcr
jbe
fbstp
rorb
dec
pusha
subl
shrb
dec
ret
pop
mov
adc
cmp
sbb
fadd
shr
lcall
pop
and
jnp
jbe
cld
and
jecxz
stos
add
xchg
sbb
or
repnz
xchg
mov
mull
mov
call
dec
mov
sbb
gs
xchg
sbb
jne
mov
dec
test
andl
out
add
out
xchg
pop
add
cmp
mov
xor
jb
inc
sub
cmp
clc
or
pop
push
mov
pop
test
xchg
jno
and
xor
adc
ljmp
mov
outsl
in
adc
loopne
dec
jns
push
inc
lock
into
ret
ss
lock
mov
push
fwait
lcall
ljmp
lahf
loope
adc
ret
daa
cmp
divps
shll
outsb
cmp
shlb
push
loope
daa
cli
push
cmp
dec
jmp
mov
cmc
popf
nop
push
and
cmc
cmp
pop
sbbb
call
sbb
arpl
push
mov
ja
scas
jbe
in
orl
jns
adc
add
adc
test
out
jmp
js
jecxz
outsl
dec
sbb
dec
mov
pop
rclb
decb
inc
fwait
popa
fildl
dec
into
pop
scas
cmpsb
dec
lcall
and
insl
jae
jbe
repz
or
and
xchg
shll
add
aam
push
and
sti
out
xor
test
sbb
push
stc
aas
shl
add
adc
mov
push
lcall
jo
decb
mov
xor
xlat
jp
rolb
cmp
jl
xor
ret
or
scas
dec
cmp
inc
lods
dec
jno
lahf
xchg
es
xchg
push
add
cmc
cmp
xor
fisttpll
addb
cmp
in
add
xchg
push
repz
out
fisttpl
popa
jns
xchg
data16
xchg
out
push
stos
push
pop
mov
adc
jae
mov
mov
xchg
dec
mov
mov
mov
cmp
jnp
sti
in
out
dec
pop
out
xchg
adc
fisttpll
arpl
notl
stc
jmp
popa
or
dec
into
cmc
xor
push
pop
fnsave
imull
sub
xchg
pop
bound
fdiv
sub
cmp
mov
jge
push
xor
xlat
mov
or
and
sub
scas
cvtps2pi
icebp
fwait
cmp
in
rcrl
lods
or
sbb
xchg
inc
adc
xchg
pop
pop
jne
vprotq
push
out
data16
sub
add
mov
in
sub
xor
data16
mov
and
test
cmpb
jl
fcomip
and
mov
xchg
mov
jns
nop
out
or
push
in
jmp
int
fistl
mov
fs
mov
cmpsb
test
cs
sarl
insb
pop
push
mov
mov
jae
dec
xor
or
and
add
fucomip
push
stc
mov
popa
lea
mov
push
push
push
std
int
outsb
mov
pop
or
or
pop
jl
or
out
mov
mov
imul
pop
data16
clc
ljmp
cmovne
pop
mov
dec
push
repnz
ljmp
sti
outsb
out
leave
cmp
jmp
int
fadds
shrl
or
clc
shlb
pop
dec
pop
sub
jns
push
push
cmp
test
fs
push
dec
shrl
and
cmp
push
sbb
push
lahf
and
pop
jmp
popa
lahf
lret
cmpsb
mov
pop
adc
mov
arpl
addr16
or
pop
enter
jo
nop
and
aam
or
xchg
inc
rol
in
lock
sub
xchg
outsl
or
shlb
leave
shrb
add
out
dec
pop
inc
mov
testl
or
cli
rcr
sub
aad
mov
push
jle
in
or
loope
mov
pusha
add
out
inc
pushf
fstps
out
sti
xchg
out
push
jbe
int
push
xchg
js
mov
mov
mov
fldenv
mov
out
inc
movsb
dec
push
pop
je
loop
sub
push
nop
aam
push
scas
rcll
push
pop
rolb
imul
pop
cmpb
mov
add
scas
add
xchg
scas
push
adc
das
cmp
scas
call
out
das
je
or
or
mov
out
scas
sub
aam
shlb
les
pop
aad
es
mov
psubusw
cmpsl
dec
rol
daa
out
popf
lods
or
test
mov
dec
mov
mov
mov
cmp
pop
jl
mov
sbb
xchg
fsubr
repz
or
mov
mov
sbb
mov
pop
jmp
mov
sti
rcrb
mov
xchg
sub
js
jns
pop
fdivrp
lods
insl
shrl
psubd
rcll
lods
out
jp
or
mov
orb
fildl
loop
repnz
xchg
cmc
or
add
lods
and
lret
pmullw
dec
loop
xchg
cmp
mov
jb
cs
xlat
shlb
mov
popf
add
mov
xchg
dec
fs
imul
rolb
mov
push
fildll
sub
loopne
xchg
aam
mov
mov
rorb
cwtl
je
call
rcrb
or
aad
mov
sbb
scas
mull
data16
out
sti
aad
add
mov
inc
jbe,pn
loope
ret
call
aad
jl
into
cmc
int
mov
fnstenv
adc
dec
mov
pusha
mov
lods
or
jo
jns
push
or
in
or
or
jge
in
in
sbb
movsb
and
cmp
xchg
pop
cmp
loopne
cmc
jnp
jb
aad
or
and
inc
neg
dec
xchg
inc
dec
icebp
jge
in
and
es
or
pop
arpl
sti
dec
dec
aad
adc
lods
ja
add
in
pop
and
iret
add
test
mov
mov
xor
testb
das
mov
inc
cmp
repz
push
and
inc
xchg
icebp
inc
dec
and
movsl
dec
fdivrs
xchg
int
jle
add
pop
pop
lods
scas
popf
inc
push
ja
fnstcw
imul
mov
jne
dec
mov
pusha
jle
jle
aas
and
das
mov
mov
js
sub
int
cmpl
into
cli
and
lret
pop
mov
cs
push
sbb
jmp
fldt
push
cmc
or
scas
xor
lock
out
stos
icebp
repz
mov
cmp
mov
lcall
or
xchg
loopne
insl
adc
popf
push
pop
pop
test
cmc
dec
rolb
in
or
stos
mov
mov
lds
les
jmp
iret
stc
loope
sbb
add
lret
cltd
jb
xchg
ret
xor
or
mov
cltd
stc
fisubrl
ljmp
in
adc
popf
jbe
sbb
inc
pushf
push
pop
push
sbb
mov
and
shrb
pop
xchg
lahf
clc
pop
imull
lret
cmc
out
leave
sbb
mov
dec
ljmp
out
xor
jp
cltd
xlat
or
movsb
addb
sbb
cli
lods
loopne
int
mov
call
cmp
mov
decl
loope
push
imull
aad
and
adc
into
jp
xor
enter
sub
xchg
test
mov
sbb
mov
pop
int3
xor
cld
push
sub
aaa
xchg
out
push
jb
cmp
mov
insb
dec
aad
push
dec
or
psubusb
mov
mov
xor
cmp
sub
popa
mov
mov
push
inc
subb
xlat
stc
je
mov
cmc
daa
sub
dec
aad
notb
push
scas
dec
jl
test
jge
cmc
adc
addb
dec
mov
pop
lret
outsb
dec
xchg
and
cmp
leave
add
xorl
idiv
lea
cld
ret
xor
xor
es
or
nop
and
sub
and
into
out
dec
mov
xchg
xor
pusha
pop
dec
sarb
rclb
mov
stos
clc
xor
call
arpl
bound
and
jnp
lcall
outsb
pop
inc
inc
pop
jbe
jle
aad
fisubl
in
je
fldl
adc
sub
mov
sahf
push
cld
push
sub
sub
je
cmp
dec
push
add
mov
icebp
fbld
sub
jmp
aam
sub
and
jae
dec
mov
jbe
inc
push
and
test
and
xor
ds
inc
jle
and
pop
cwtl
lds
dec
pop
jnp
adc
jp
xchg
not
pop
and
cmc
mov
test
dec
jp
js
pop
xor
inc
push
jp
cmp
xchg
jl
arpl
mov
cmpsl
outsl
and
sti
jo
mov
call
adc
lcall
stos
push
mov
testl
push
jb
jg
sub
stc
pop
jb
std
cmp
push
cmp
lfs
mov
cld
loop
in
sbb
stos
int
test
mov
jge
xorl
aad
std
lret
jmp
imul
je
outsl
lret
or
rol
lods
std
adc
inc
cmp
gs
dec
rolb
outsl
dec
mov
out
adc
cmc
iret
cmp
xchg
mov
and
setne
pop
das
repz
fs
ret
push
dec
jl
dec
push
inc
cmp
jae
nop
jne
aad
mov
popa
xor
jnp
mov
dec
pop
or
cli
fsubrl
mov
loope
or
loop
lret
je
lock
jnp
arpl
add
test
or
cmp
mov
xchg
roll
dec
addr16
mov
inc
ss
or
mov
mov
leave
in
in
mov
dec
xchg
pop
in
loope
or
mov
xor
clc
rorl
jo
fcom
pusha
negb
sbb
iret
sti
popa
scas
add
ja
ljmp
mov
mov
push
mov
sub
pop
out
push
cmc
data16
jnp
xor
shrb
pusha
inc
adc
int3
rorb
pusha
test
cmc
add
aad
sahf
stos
insl
mov
in
movsl
aad
mov
xchg
jecxz
enter
adc
mov
lahf
dec
xchg
mov
jmp
inc
cmp
fisubl
dec
and
jge
into
pop
push
arpl
popa
jb
dec
sbb
sbb
sahf
mov
xor
sbb
mov
fidivrl
cmp
add
lock
jp
imul
adc
in
jg
adc
cmp
fdivrs
cmp
sbb
cld
sar
xchg
lods
iret
or
jmp
or
test
nop
mov
add
outsl
or
mov
cltd
faddl
or
loope
test
or
in
rcl
bsf
mov
and
mov
xchg
scas
xchg
sahf
add
sub
mov
push
add
mov
jl
adc
jns
sub
jl
sbb
xor
inc
or
addb
loopne
call
dec
push
sub
dec
aad
cli
sbb
xchg
leave
jmp
sub
das
jge
mov
push
cmp
xor
mov
xor
inc
jbe
decl
aaa
int
out
mov
call
dec
lods
dec
ret
xchg
sbb
jle
jg
fidivrl
pop
ss
and
repz
loop
xor
test
adc
xchg
cmp
imul
sti
stos
stos
shl
xor
test
xchg
fstl
ljmp
dec
xchg
dec
in
sbb
mov
xchg
pop
dec
lcall
pop
jo
stos
mov
add
cmc
test
pop
fwait
pop
adc
adc
repz
sbb
inc
xchg
and
pushf
sub
xor
out
push
cmc
int
mov
jne
sar
imul
syscall
aad
bound
push
pop
int
or
xchg
shl
pop
test
cwtl
mov
stos
call
sti
lods
testb
stc
in
jmp
push
enter
cmpsl
lret
xchg
push
xor
dec
pusha
lea
dec
rcl
leave
out
notb
mov
jg
and
push
pushf
call
sarl
sarb
cmp
mov
jge
mov
pop
or
das
test
mov
xchg
mov
push
xor
cmc
jecxz
sub
test
mov
test
sbb
cmp
outsl
scas
pop
push
push
jnp
hlt
mov
int3
shlb
cmp
std
test
shll
ss
pushf
fmulp
adc
test
mov
dec
cltd
push
jle
adc
xchg
iret
and
mov
inc
xchg
loope,pt
lret
xchg
repz
and
pop
inc
sahf
jp
rcll
out
push
xchg
pusha
imul
adc
fistpll
and
mov
pop
aad
aas
in
push
insb
pop
notb
mov
aam
mov
test
cmc
cmp
mov
mov
mov
jp
fcmovu
bnd
ja
lods
push
outsl
int
fisubs
stos
or
call
xchg
or
pop
ret
adc
mov
add
call
fistps
adc
xor
cmp
xchg
cmc
int3
sbb
sub
sub
cwtl
mov
les
cli
test
cltd
sub
fisttpll
push
or
ret
mov
mov
and
jae
dec
stos
push
fildll
xchg
js
imulb
repnz
and
bound
mov
int
push
fwait
mov
call
out
xchg
xchg
pushl
daa
in
fsubr
js
push
add
stc
imul
stos
int
sbb
into
mov
push
int3
sub
mov
xchg
sbb
out
mov
adc
pop
mov
mov
mov
jecxz
push
aad
dec
mov
lock
sub
and
out
and
in
jg
xor
pop
notb
jno
js
aad
test
addr16
mov
or
flds
lods
imul
xchg
mov
sahf
cltd
adc
and
inc
push
pop
jg
arpl
or
or
xchg
int3
adc
sbb
push
dec
insb
sahf
jae
loopne
mov
mov
cmp
and
xor
cmpsb
jl
cmp
adc
aad
and
pop
popa
add
int
and
cmp
sarl
outsl
sbb
leave
mov
mov
sahf
stc
mov
fstl
mov
fisttps
mov
enter
out
push
mov
xchg
ss
mov
mov
cmpl
mov
fxch
fsts
popa
scas
rcr
inc
in
and
mov
aam
cld
std
xchg
notb
rcr
mov
mov
mov
jmp
mov
movsl
mov
sti
fistps
xor
push
cltd
out
sub
sub
or
mov
adc
arpl
movsb
push
dec
lret
push
cld
in
cmc
imul
insl
iret
jge
jle
jmp
jecxz,pn
sub
dec
mov
cmp
es
xchg
cmp
iret
push
aad
push
mov
or
ja
ds
sti
dec
add
call
pop
out
or
adc
addl
shrl
or
in
std
jns
aad
ljmp
mull
sub
jne
sub
xchg
aaa
addr16
jl
push
mov
mov
xor
xchg
fistps
pushl
adc
es
xor
xor
xor
adc
dec
scas
push
and
push
push
in
dec
push
loopne
aas
insl
jle
popa
loop
inc
add
sti
imul
popa
fdivp
lret
es
mov
orl
mov
cvtps2pi
pusha
test
mov
fmull
and
dec
sub
cmp
mov
pushf
pmullw
pop
xchg
fs
test
lods
sub
pop
rcrl
inc
jl
push
sbb
add
fisubrs
cmp
xchg
pop
push
sbb
mov
jecxz
cmpsb
jge
shlb
jne
dec
cmc
pop
ss
fxch
mov
into
cltd
lret
incl
mov
sub
sti
mov
xchg
inc
fwait
ljmp
or
dec
test
fidivs
mov
add
jecxz
int
popf
jle
iret
or
dec
lahf
jp
cltd
fsubs
stc
iret
aam
dec
rclb
sub
pusha
sbb
data16
nop
imul
mov
push
mov
loope
dec
sbb
popf
dec
inc
xchg
and
add
lea
wbinvd
add
aad
repnz
xor
xchg
sub
xchg
push
inc
inc
xor
imul
mov
or
sub
xchg
xchg
dec
pop
cwtl
or
aad
cmp
mov
push
mov
or
adc
xlat
push
xchg
or
push
stos
xor
push
outsl
pop
fsubrs
cli
mov
add
inc
cld
fisttpll
jl
mov
in
adc
jae
lcall
dec
in
or
sub
adc
mov
outsl
and
out
mov
aas
imull
push
call
push
div
fs
xchg
test
cmpb
inc
mov
jbe
js
and
fdivs
cs
add
jnp
mov
xor
cmp
mov
push
pop
jno
jno
shrl
hlt
xlat
lods
ret
and
push
not
lret
pop
call
movsb
pminub
pop
in
push
inc
adc
mov
dec
dec
rcl
lahf
outsb
repnz
adc
jno
jecxz
imull
cmc
ret
shrb
roll
loopne
int
mov
and
popa
ficomps
and
cmc
jae
imul
mov
lods
in
in
pop
xchg
addr16
lcall
mov
mov
test
mov
mov
ds
xorl
scas
and
add
push
out
lock
push
xabort
imulb
sti
scas
and
test
push
and
scas
mov
add
and
mov
outsb
xchg
cltd
cmpsb
bound
sbb
cmp
loopne
cmp
fildl
jns
cmp
sti
out
aad
stos
push
mov
aad
cmp
push
and
repz
pop
push
std
fisubl
hlt
mov
cmp
and
scas
cmp
pop
push
push
xchg
or
das
sbb
or
vmread
jl
lods
sbb
add
mov
add
gs
test
dec
adc
divl
xchg
icebp
xor
or
mov
pop
loope
loopne
pop
test
push
lret
lahf
aad
ss
std
mov
xchg
mov
out
xor
in
or
mov
inc
xchg
mov
aad
jno
dec
int
pop
sbb
clc
inc
mov
jge
sbb
mov
add
cmc
roll
mov
adcl
popa
dec
pop
iret
cmp
adc
jnp
xchg
mov
fdivrl
pmaddwd
aad
jp
loope
addr16
sbb
fldlg2
jge
cwtl
add
cltd
adc
xchg
mov
scas
arpl
mov
nop
out
bndldx
push
out
pop
sub
shrl
stc
and
scas
pusha
mov
cli
test
adc
xchg
cmp
scas
ror
xlat
js
int
cwtl
rcl
cmp
cmc
mov
xorl
push
dec
adc
sub
jo
imul
scas
sbb
in
jb
or
mov
sbb
xor
loopne
fwait
cld
jmp
popf
push
js
or
jg
xchg
frstor
jae
fidivrl
or
sbb
push
ret
mov
insl
and
pop
push
xchg
lahf
outsl
mov
dec
sub
or
or
lahf
rcr
scas
imul
jmp
les
jmp
sub
jbe
subb
cmc
mov
sbb
mov
inc
movsb
add
stos
lea
dec
xchg
xchg
aad
popa
xor
rcll
or
inc
adc
pushf
inc
movb
cmpb
loope
imul
or
fildll
cmp
xchg
sub
pushf
je
rcl
inc
pop
sets
cmp
push
jg
mov
mov
push
sbb
out
adc
iret
xor
stc
cs
nop
mov
fstl
fisubrs
push
or
dec
push
sub
aad
stos
fbld
sub
xor
push
test
mov
dec
ja
cmp
sbb
nop
mov
mov
cmp
sub
test
pop
add
ret
xchg
pmaddwd
sub
popa
sub
cmp
icebp
insl
call
rol
in
iret
mov
push
pusha
add
loop
aad
int
push
cmp
pop
ljmp
cmc
bound
arpl
lret
dec
and
insl
sub
add
push
fwait
jb
lea
jo
clc
and
das
lods
mov
xchg
add
xchg
and
and
sbb
xlat
xor
sbb
sbb
movsb
testl
or
icebp
jnp
mov
jle
mov
aas
imul
fisttpll
pusha
dec
movsb
lret
or
mov
dec
in
inc
aam
or
add
xchg
push
xchg
shlb
femms
mov
pushf
mov
dec
xor
bound
inc
hlt
stos
cmp
test
jbe
arpl
lahf
dec
jmp
push
add
mov
adc
int
mov
lahf
dec
fcoms
leave
xchg
dec
out
push
jecxz
push
insb
push
adc
andnps
neg
jl
pop
pop
flds
lods
xchg
pop
jnp
clc
std
cmc
mov
loope
xor
xor
sbb
dec
icebp
xchg
insb
movsl
cmp
pop
sbb
push
push
cmp
gs
mov
inc
push
popf
and
jge
xchg
adc
or
int
xchg
int
shlb
cmp
sbb
add
mov
push
aad
stos
jp
xor
add
aas
aam
testl
nop
xor
mov
es
push
mov
mov
call
jae
jle
dec
push
ljmp
push
or
shlb
cs
push
aam
or
jb
pop
sub
push
sbb
fwait
rcl
lahf
xchg
movsl
mov
fidivs
jge
ret
mov
jnp
test
cmp
scas
cmc
pop
fidivrl
inc
jne
jmp
popa
les
inc
xchg
add
push
adc
mov
call
mov
push
js
mov
adc
push
and
rcll
aaa
xchg
or
sbb
gs
pop
test
ljmp
outsl
lea
dec
repnz
add
loope
cmc
loope
inc
idivl
adc
jbe
inc
pop
into
cmp
dec
or
addb
jo
push
xchg
mov
pop
add
dec
mov
jecxz
rorb
pop
or
outsb
mov
xlat
or
dec
loop
cmc
or
xlat
scas
mov
outsl
int3
xor
inc
cli
mov
jmp
imul
in
xlat
jecxz
sub
add
mov
das
jb
jmp
inc
lds
mov
jbe
cmp
xchg
xchg
cmpl
decl
mov
dec
or
sahf
xchg
lea
lret
imul
adc
cmp
ja
ret
aam
cmp
mov
call
push
scas
test
dec
jmp
add
or
or
jns
into
pop
popa
js
sti
adc
enter
out
sbb
sbb
push
inc
or
pop
daa
push
inc
cld
xor
xchg
mov
pop
xor
jl
sbb
mov
das
incl
mov
arpl
sti
jo
das
jle
and
bound
scas
mov
stos
mov
std
loope
cmp
cmp
negl
dec
and
aas
sub
lahf
addr16
mov
cmpps
popa
xchg
nop
jmp
cmp
add
and
jne
mov
adc
xor
adc
xchg
xlat
bswap
mov
cmc
pop
push
jne
nop
adc
or
hlt
test
push
mov
fwait
test
rcr
stc
pusha
dec
sub
pop
nop
sbb
push
dec
in
fwait
cld
ret
loope
mov
dec
cli
xlat
scas
push
push
rcll
or
pushf
dec
cmp
clc
xchg
jne
add
shrd
add
hlt
push
icebp
js
int3
mov
fnstenv
sbb
mov
and
cwtl
xor
pop
inc
inc
cmp
xor
sahf
fxch
shr
hlt
nop
mov
mov
cmp
mov
into
push
jmp
outsl
rcpps
push
rclb
jl
push
add
dec
adc
add
test
xchg
jl
jmp
xchg
sti
cmp
rolb
xchg
push
xchg
leave
mov
jmp
aas
sahf
test
mov
ljmp
ds
js
decl
das
scas
std
incb
or
mov
inc
dec
cmc
rcll
sbb
jmp
aad
mov
aaa
or
outsb
xchg
jnp
or
sbb
not
stos
decb
mov
xor
jne
lock
dec
xchg
push
sarb
cmp
sti
pop
push
fisubrs
nop
dec
dec
cltd
shrb
incb
mov
dec
sub
hlt
sbb
insl
push
jge
pop
jmp
push
out
gs
push
test
cld
jns
popa
xchg
pop
mov
push
arpl
sub
movsl
mov
xchg
add
jmp
add
out
movsl
push
dec
inc
dec
mov
shl
fstl
imul
or
iret
jne
pop
push
into
mov
scas
mov
aad
out
dec
xchg
pop
pop
adc
inc
dec
sbb
fwait
ds
andl
xchg
ljmp
mov
adc
notb
pusha
xchg
clc
push
movsb
lock
insb
cli
xchg
adc
xchg
maxps
outsl
aad
cwtl
mov
push
jne
push
add
and
or
shlb
cmpsl
cvttps2pi
cmp
popa
mov
push
test
pop
inc
ret
cld
cmc
or
imul
stos
jge
lahf
cmc
cmpsl
and
clc
pusha
decb
adc
jecxz
mul
in
jecxz
int
aad
out
out
jno
test
and
mov
jns
mov
or
jae
aas
test
out
fs
mov
sbb
cmp
out
lods
mov
mov
jp
sahf
das
push
cmp
or
or
aad
sbb
call
rorb
dec
rcl
jno
nop
mov
sbb
or
mov
pop
xchg
lahf
dec
stc
add
mov
aaa
and
or
xorb
cmp
mov
dec
loope
and
mov
testb
mov
arpl
cwtl
cmp
dec
cmc
mov
sbb
or
jb
mov
loope
cmp
popf
mov
adc
dec
sti
into
shlb
mov
mov
movsl
and
aad
cmc
jo
dec
xchg
dec
je
aas
es
notb
les
inc
pop
jb
icebp
lods
sub
jns
cmpb
inc
test
push
and
mov
push
aad
sub
rcrl
add
xchg
into
xchg
daa
add
stc
out
cmp
or
add
mov
sub
fldl
cmc
inc
dec
cmpsl
mov
icebp
orb
cli
push
cmp
cmc
ds
pop
outsl
rep
adc
loop
out
test
addr16
imulb
add
cmc
dec
mov
ss
int
push
out
xchg
sub
popf
jmp
adcb
jl
adc
inc
xchg
test
insl
les
push
mov
in
and
mov
scas
aas
loop
lods
pusha
pushf
push
xor
jns
insb
rclb
mov
dec
int
ret
mov
or
subl
loope
js
xchg
pop
mov
push
cmpsb
int
push
adc
fadd
loope
testb
lahf
inc
or
lcall
mov
mov
into
sbb
scas
pop
pop
mov
pop
pop
push
mov
pop
stos
scas
sbb
bound
in
es
xchg
xchg
cmp
aad
mov
movsl
pop
mov
and
mov
xchg
test
fsubs
mov
cli
rolb
dec
push
aaa
lods
pop
sti
jb
sbb
or
xor
jne
in
jl
and
cmp
xchg
xchg
jbe
inc
or
mov
jle
les
int
xor
inc
outsl
xchg
repz
cmp
jge
out
mov
adc
add
aad
xchg
push
lcall
int
scas
aad
jb
inc
adc
jbe
mov
pop
pusha
loopne
sbb
push
sti
xor
clc
out
sbb
inc
pop
jmp
in
jmp
or
iret
aas
mov
lock
fisttpll
call
test
ret
inc
push
jo
outsl
push
add
xor
stos
xchg
inc
int
lret
clc
stos
mov
icebp
xchg
leave
fimuls
aam
dec
cmp
push
cmp
xchg
sub
loop
flds
std
or
shlb
and
hlt
sub
ljmp
filds
js
in
pop
aad
fwait
ret
shrd
in
cwtl
sbb
fucomip
ret
loop
jg
jb
in
add
dec
mov
mov
fucomip
imul
clc
sar
mov
or
out
arpl
jmp
add
cwtl
js
decl
mov
mov
jp
mov
xchg
fldl
mov
jns
push
test
iret
lahf
aad
movsb
adc
xor
shll
cmp
pop
xor
aam
scas
cmp
ds
fbld
int3
sub
xchg
mov
xor
cmp
xchg
divl
cmp
or
push
dec
mov
inc
icebp
xchg
mov
and
repz
mov
ja
in
mov
mov
mov
dec
in
and
sub
mov
push
mov
imul
cmp
ret
mov
mov
pusha
movsb
or
inc
jbe
loope
pop
jmp
jl
dec
xchg
cs
mov
in
jne
loope
es
dec
and
xchg
or
and
lods
in
push
lods
mov
lret
addb
lcall
pusha
es
and
sub
cld
cmpsl
mov
xchg
cmp
jg
aad
fistl
and
add
popaw
loopne
imul
mov
les
rcr
mov
clc
cmp
mov
xchg
stos
js
adc
xchg
jp
leave
pushl
lods
mov
cli
inc
or
push
stos
xlat
cmpsl
sub
mov
fistps
loope
loop
out
lcall
adc
jae
cmp
cmp
imul
mov
cmc
out
lock
cld
fxtract
push
mov
mov
adc
jp
sti
jp
pushf
mov
mov
push
adc
mov
dec
fdivl
dec
push
cli
jl
scas
cmp
xchg
mov
adc
lods
mov
pusha
cmp
mov
pop
add
xchg
shl
fs
outsb
orl
mov
or
hlt
inc
add
test
push
jmp
aam
idivl
js
hlt
cmp
sub
xor
mov
test
cmp
add
sub
or
inc
xor
mov
lret
into
aad
nop
rcl
jmp
pop
or
mov
outsl
or
push
fwait
adc
pop
sti
xchg
xchg
sbb
ds
shl
jno
jmp
lds
jne
jo
test
lds
jo
sbb
jb
dec
push
imul
push
jo
scas
aad
call
mov
sbb
mov
xchg
shlb
add
lds
lods
mov
test
mov
xor
das
inc
pop
cli
nop
scas
or
leave
testl
rcrb
fildll
xchg
nop
mov
movsl
ret
fnstenv
or
popf
mov
out
adc
cmp
jne
aam
mov
fwait
cmc
xchg
mov
nop
push
cltd
jg
scas
xchg
mov
cs
testl
sub
shll
cmp
mul
xchg
les
push
jmp
jg
ljmp
sub
shl
xlat
sti
mov
rcrb
dec
and
lds
pushf
pop
je
add
orb
out
outsb
inc
mov
cwtl
cmp
adc
push
mov
orb
mov
jnp
xchg
subl
lea
roll
out
lahf
dec
pushf
and
xchg
pop
adc
mov
xchg
jae
pusha
mov
dec
dec
std
outsl
iret
in
out
clc
rcl
repnz
jmp
add
ret
ja
mov
mov
fldcw
inc
mov
dec
jnp
inc
mov
adc
mov
mov
das
push
sahf
fwait
mov
push
ret
jno
jle
xchg
test
fs
jecxz
cmc
add
cs
pop
aad
adc
or
mov
push
in
jmp
dec
lea
cwtl
addb
sub
fs
jb
lods
outsl
or
pop
fcoml
push
mov
inc
and
dec
xchg
xchg
into
in
inc
adc
loope
mov
cmpsl
addr16
les
repz
pop
push
addr16
xchg
dec
sbb
sbb
rcll
addr16
jno
xchg
int
iret
into
clc
jo
mov
add
cmp
and
cld
jl
shlb
imul
xchg
subl
and
aad
pop
jle
push
jl
popa
inc
or
out
xor
cmc
and
int
xchg
pop
mov
movsl
dec
in
jnp
cmpl
in
lock
mov
fadd
test
jne
imul
in
out
pop
mov
int
pop
sbb
sti
fwait
stos
mov
and
jnp
pop
push
lods
push
dec
fwait
mov
sti
std
and
gs
jge
jnp
xchg
out
push
repnz
aad
pop
xchg
mov
xchg
add
fcmove
lods
or
loop
inc
or
test
pcmpeqd
gs
adc
mov
lods
mov
sbb
or
ljmp
mov
lock
inc
add
aad
mov
insl
push
cmp
rorb
push
rorl
nop
and
in
aad
pop
xchg
add
icebp
xchg
pop
mov
lock
pop
dec
lret
push
mov
mov
inc
clc
inc
inc
fwait
addr16
nop
push
scas
into
repz
js
pusha
pop
xchg
add
sbb
cld
call
push
pop
dec
dec
lods
adc
pop
mov
pop
xor
jge
aam
testl
out
pop
decl
test
lods
imul
or
push
adc
aas
out
bound
inc
inc
dec
xchg
das
jbe
stos
dec
lods
sbb
in
ret
or
subl
fwait
mov
mov
insb
sub
cwtl
push
andb
bnd
push
mov
mov
mov
stos
dec
aad
aam
lock
orb
in
call
or
sub
inc
test
inc
lahf
out
popa
mov
mov
decb
and
add
fsub
bound
inc
jnp
xchg
jl
movsb
in
sqrtps
test
jmp
add
int
and
jno
cmp
fstp
jns
scas
sti
call
aad
outsb
and
mov
jge
lods
sbb
in
push
add
dec
xchg
out
aad
stos
push
int
adc
lods
dec
stos
and
cmp
xor
pop
negb
dec
and
push
adc
aad
add
test
icebp
aaa
push
jp
es
add
dec
adc
cmp
lock
mov
xchg
mov
mov
xchg
xchg
xchg
les
cmpb
leave
jbe
push
cli
xchg
dec
jmp
ja
or
fidivs
mov
mov
leave
adc
clc
aad
ret
push
xchg
test
and
add
xchg
jecxz,pn
cmpsb
xlat
rorl
push
or
stos
bnd
shrb
lods
and
int
sbb
cmc
dec
adc
sub
xlat
mov
fs
dec
dec
push
fbstp
sub
enter
insl
jno
cli
cwtl
xchg
in
jge
sub
sti
push
imul
fmul
adc
out
and
mov
nop
mov
mov
xchg
sub
repnz
adc
lock
inc
mov
orl
xlat
mov
xlat
lahf
fsubrs
repnz
cmp
xlat
out
stos
es
jbe
jmp
not
xchg
jge
mov
pop
enter
out
mov
dec
dec
movsl
loopne
dec
cmp
outsl
rclb
pop
scas
push
daa
sub
sub
cmc
jne
iret
cmp
dec
jg
lods
test
lock
jg
and
and
fwait
xor
cltd
pop
push
imul
in
jmp
mov
mov
fcmovu
xchg
inc
mov
mov
jno
repnz
icebp
push
int
or
loope
sub
inc
adc
push
xor
dec
mov
mov
in
cmp
jp
std
add
lods
sbb
out
outsl
cmp
idivl
or
adc
push
test
sarl
shrb
adc
cmpl
cmp
je
icebp
jecxz
mov
jo
stos
mov
dec
out
xchg
cwtl
lods
jo
loopne
pusha
cli
stos
xchg
and
xchg
or
add
and
in
cmp
pop
out
loopne
sahf
cmpb
push
ret
in
or
stos
pop
fiaddl
jge
cmp
xchg
fdivrp
cwtl
ds
es
sarb
xchg
mov
aad
mov
daa
cmp
shrl
je
rcl
inc
and
shrb
mov
fimull
jecxz
bnd
lret
inc
inc
imulb
add
xor
or
inc
loope
xchg
int3
ljmp
adc
push
add
out
or
jp
xchg
jmp
pop
jae
jo
orb
mov
and
pop
push
pusha
in
or
test
and
jne
mov
cmc
dec
stos
cmp
testb
dec
pop
fldl
add
push
pop
seto
ja
cmc
and
pop
jl
and
cmp
xor
push
mov
dec
fsubl
inc
or
cwtl
push
test
jg
pop
outsb
mov
or
ljmp
pop
sbb
cltd
mov
mov
ret
roll
jo
dec
in
add
mov
dec
and
and
or
cmc
repz
cmp
fimuls
push
cwtl
adc
pop
or
in
push
les
out
xor
adc
sahf
adc
mov
mov
push
and
fs
je
push
push
insb
nop
push
aad
and
sbb
adc
inc
cmp
ret
add
sub
sbb
jae
arpl
dec
mov
les
cmp
jns
popa
xor
xchg
mov
jl
scas
lods
cmp
in
cmp
movsl
hlt
insl
dec
push
mov
aad
popf
int
fwait
mov
cmp
mov
sbb
nop
adc
mov
ret
cmp
movsl
lock
cmp
mov
gs
sbb
mov
jge
jp
jnp
xchg
jecxz
xchg
and
mov
shlb
mov
stos
or
rcrl
and
mov
pushf
or
fdivs
test
or
cmc
sub
push
call
sti
lret
lods
sub
aas
inc
push
fmull
mov
out
xchg
cmp
xchg
loope
es
aad
sbb
ljmp
enter
xchg
imul
popf
inc
push
sbb
loope
lahf
ljmp
es
jg
or
aad
inc
push
jp
mov
mov
mov
ret
rolb
add
cmpsb
xchg
mov
adc
xchg
shlb
in
cs
push
insl
sub
push
imulb
jp
cmp
sbb
std
into
idivl
cmpsl
mov
sti
xchg
cs
popa
dec
fcompl
popf
xchg
test
pop
sub
xchg
adcb
dec
shufps
hlt
fmuls
jns
and
xor
sbb
jbe
movsl
pop
cmp
sbb
push
adc
push
into
test
ljmp
adc
inc
test
mov
out
ja
iret
xchg
push
push
inc
idivl
add
mov
hlt
jb
and
outsb
das
fstps
push
xchg
test
jg
into
loope
or
push
int
pop
mov
xchg
mov
cmpsl
ret
cmp
xchg
rol
sub
lahf
aad
jns
iret
mov
stos
push
jmp
inc
rolb
test
xchg
adc
mov
scas
and
and
adc
inc
imul
pop
mov
mov
adc
aad
outsb
dec
fsubp
jmp
push
cli
or
push
xchg
into
icebp
adc
mov
mov
jmp
mov
rol
xchg
fs
mov
adc
jl
jnp
mov
insl
inc
mov
jb
mov
es
dec
sub
mov
iret
jmp
xchg
mov
adc
jbe
dec
insl
xor
popa
jg
ljmp
in
or
cwtl
cmp
loop
stos
mov
ljmp
lcall
fisubrs
mov
jbe
jo
pop
xchg
mov
cli
jns
sti
cli
fisubl
jle
xchg
std
adc
add
mov
jp
cmp
decl
cld
cmc
push
adc
test
mov
mov
in
cwtl
jmp
jnp
stos
out
push
add
mov
add
lds
mov
xchg
sub
and
push
cmpl
lods
inc
xor
call
sub
stos
pop
push
imul
jmp
je
mov
inc
xchg
pop
sbb
outsl
enter
cmpsb
imul
test
pusha
out
in
dec
mov
jnp
loope
loope
lds
outsb
in
cmp
xchg
or
pop
dec
lea
cld
fsubs
loope
jo
in
pop
call
jne
dec
jecxz
adc
test
std
push
cmp
movb
adc
adc
scas
maskmovq
xchg
xchg
and
pop
orl
ret
test
hlt
dec
cmp
adc
jnp
pop
imul
or
or
addr16
out
xor
jo
in
outsl
xchg
gs
xor
call
sbb
neg
cmp
ljmp
cmp
jns
stc
add
xchg
push
arpl
pop
or
enter
outsb
adc
xchg
xor
xchg
test
lock
js
popf
iret
cmc
int3
mov
and
cltd
mov
push
or
push
cmp
aam
fisttps
mov
sub
mov
ret
xchg
inc
xchg
inc
cwtl
jo
xor
jmp
mov
out
sub
cmc
fisubrs
loope
mov
sbb
push
and
cmp
sub
inc
cmp
mov
and
mov
xchg
in
mov
mov
pop
adc
shl
into
sbb
test
fst
outsb
cmp
xchg
call
and
cmp
sti
adc
bound
jge
mov
jno
jne
ljmp
fs
mov
int
push
pop
ds
add
push
push
daa
cwtl
fwait
or
add
and
leave
mov
push
out
cmp
and
sarl
xchg
jmp
js
dec
out
test
roll
in
pop
ret
roll
les
aad
fisttpl
xchg
jmp
jge
add
add
and
rorl
das
popf
add
pop
mov
repnz
sbb
or
iret
mov
lods
pop
inc
push
mov
inc
sbb
test
subl
push
or
add
je
stc
jp
cli
xor
lret
rorb
mov
cmpl
mov
push
jecxz
mov
xlat
dec
xchg
std
sti
sub
jbe
loope
mov
xchg
jle
pop
cmpsb
push
popf
push
xchg
dec
mov
lods
lods
push
add
in
xchg
testb
ror
les
mov
mov
mov
cmp
cli
cmp
cmc
sarb
addr16
into
out
repz
or
jecxz
lock
inc
jmp
and
adc
add
int
pop
sub
cs
xchg
adc
cmp
mov
mov
push
sub
jp
into
cmp
les
mov
jecxz
jno
in
rolb
adc
inc
jg
jbe
xor
pop
testl
push
int3
add
mov
mov
lret
stc
movsb
mov
stos
mov
mov
xchg
cmp
icebp
sbb
push
imulb
sub
in
jmp
dec
push
adc
lods
rorb
jnp
pushl
push
cmc
enter
mov
cmc
push
incl
dec
mov
cmp
pusha
fmull
es
stos
fistl
dec
fdivs
add
and
mov
cmp
xchg
or
add
push
lods
aad
fwait
ljmp
testl
xchg
mov
leave
jb
jg
fcmovnu
jb
sub
mov
fnsave
lret
fisubrl
fisttps
test
push
xchg
or
ret
ljmp
bound
pop
adc
xchg
inc
push
mov
insl
mull
outsb
push
addr16
xor
js
rcr
cli
adc
fsub
mov
or
adc
sbb
lahf
inc
int
fisubs
jns
dec
aad
mov
inc
fstl
and
xchg
aad
push
cmp
mov
fsubp
outsl
fiaddl
dec
lcall
lods
leave
lcall
push
inc
aad
mov
inc
mov
sbb
adcb
mul
jl
add
sub
scas
jo
in
lret
jmp
or
mov
icebp
arpl
pop
notb
cmpl
xor
cld
jl
add
lods
in
and
fisubrs
add
outsl
add
loop
inc
cld
mov
and
scas
aad
push
hlt
hlt
add
nop
mov
popa
test
imul
int3
sub
mov
jnp
popa
ret
or
aas
push
sbb
mov
fdiv
push
jmp
cmp
loop
lods
dec
insl
pop
mov
mov
xor
int
lea
push
mov
adc
xor
scas
mov
pop
outsl
push
aad
cmc
jno
mov
mov
call
or
lahf
orb
inc
push
jmp
pop
sbb
add
mov
fisubs
cmp
mov
sbb
test
ret
and
cmpsb
push
mov
icebp
mov
dec
movsb
mov
repnz
imull
adc
or
fwait
lock
test
mov
jge
stos
mov
popa
add
decl
cmp
sub
mov
fs
sub
arpl
lods
or
adc
andl
add
cwtl
jle
imul
jnp
sbb
pop
push
pop
inc
lock
rcrb
stc
push
mov
and
shlb
sahf
dec
fsubrs
div
scas
xchg
mov
push
sbb
or
or
ret
inc
push
mov
enter
ret
mov
ja
pop
mov
out
in
xlat
or
cmc
mov
mov
loope
add
into
ss
mov
aad
inc
inc
popa
or
add
add
mov
ja
inc
iret
jae
ret
sub
aaa
add
mov
dec
jb
add
mov
adc
clc
xchg
add
or
cmpb
mov
dec
imull
lea
pushf
mov
cmp
shrb
stc
xlat
xchg
dec
lcall
mov
inc
out
fstps
jmp
cmc
xlat
mov
mov
outsb
inc
les
in
pop
xorl
aaa
mov
js
lea
xor
mov
push
and
push
mov
stos
adc
adc
inc
xor
sbb
sti
jo
cld
rorl
jns
pop
or
add
movsb
mov
imul
pop
into
sbb
cmc
adc
lods
imul
cmc
sarl
ljmp
and
and
imul
sub
leave
sysret
push
daa
push
xchg
sarl
mov
inc
inc
gs
shll
cmp
rcl
mov
lods
shlb
fadds
add
cmp
sub
jmp
loope
xor
pushf
and
aaa
pop
cmc
dec
stc
jecxz
jno
in
dec
or
cli
xchg
mov
jo
adc
enter
mov
xor
push
xchg
ret
in
aaa
pop
in
push
jnp
cmp
pop
dec
mov
inc
shrl
cmp
or
inc
jbe
cmp
jb
in
clc
test
adcl
loop
addl
sbb
dec
loope
cmpsl
pop
rcll
lret
inc
aad
out
add
ja
jp
notb
mov
or
fsubrl
enter
outsl
push
nop
push
stc
mov
mov
adc
stos
and
popl
stc
test
cli
push
loop
aad
mov
pop
cmp
xchg
or
xchg
xbegin
cwtl
sub
repz
dec
jge
fists
xor
cld
push
mov
cld
mov
pop
adc
popf
push
test
cwtl
mov
outsb
push
decb
mov
mov
pextrw
push
fldl
or
add
cld
pushl
into
adc
push
or
aad
push
mov
xchg
cmp
leave
jno
xchg
scas
leave
jb
jns
mov
sarl
imul
push
or
jmp
lods
sub
sub
mov
imul
aad
mov
fldl
mov
addb
xchg
adc
push
and
filds
into
dec
mov
push
call
cltd
xor
push
lods
stc
sti
icebp
mov
or
pop
sbb
cs
xor
jno
jle
xor
xchg
sarb
pop
and
popa
push
dec
mul
out
ficomps
pop
xchg
pushf
xchg
jg
ficoms
rclb
cmp
stc
pop
popa
inc
repz
lret
dec
push
cmpsb
out
jp
mov
cmpsl
xchg
pop
add
out
xor
xor
pop
pop
mov
scas
ljmp
sub
pushf
das
pop
pop
inc
iret
mov
mov
jl
add
cmc
jno
scas
jge
adc
inc
push
fldl
aaa
lods
cmp
dec
inc
push
ret
fmul
mov
std
test
stos
shr
and
jl
in
mov
ret
loope
jmp
nopl
imul
dec
adc
test
add
insl
xchg
xor
adc
adc
bound
mov
mov
leave
outsl
fwait
jbe
or
fbld
and
jnp
jne
orl
mov
cmc
mov
push
in
sahf
dec
push
cmp
mov
pushf
and
xorb
cmc
js
xor
in
int3
xchg
test
push
loope
out
rcrb
stos
push
sbb
fwait
inc
lret
repz
push
jl
xor
jecxz
push
adc
sarb
add
and
pop
push
lea
or
sub
loope
cld
and
dec
jnp
ds
int
mov
fistpll
into
jge
out
cmc
lea
sub
and
adc
or
xchg
pop
ficoml
push
dec
mul
pop
outsl
push
lds
sahf
lret
push
push
inc
ret
pop
scas
mov
loopne
test
push
daa
lock
std
push
mov
push
imull
jns
xchg
loopne
xchg
orb
or
nop
add
mull
jns
aas
adc
add
or
mov
and
cwtl
pop
insl
popf
vfrczpd
xor
mov
mov
jmp
out
fildl
xchg
in
xchg
inc
xor
cwtl
cmp
bound
sbb
xor
mov
mov
insb
into
xchg
fists
cld
jns
push
mov
jnp
pop
out
or
mov
jae
push
nop
inc
cmp
imul
mov
and
sti
or
jns
cmp
push
cmp
cwtl
and
clc
add
mov
add
in
or
pmaddwd
jno
or
call
xor
fsubl
lods
xchg
cmc
out
fildl
out
std
lods
dec
jno
movsb
insb
cmc
xchg
loopne
xchg
jecxz
mov
inc
out
rcrb
mov
push
and
outsl
xchg
push
js
in
fldl
das
aam
sub
jge
xchg
hlt
dec
jno
loopne
cmp
mov
pop
mov
xchg
xor
mov
cmp
push
push
xchg
ja
sarl
mov
popa
mov
cmp
andl
clc
sub
xchg
arpl
repnz
pop
sbb
cmc
xor
inc
addr16
int
in
inc
dec
add
enter
lock
jp
adc
cwtl
inc
mov
push
gs
pop
fbld
xchg
rclb
jmp
jno
leave
mov
jnp
xlat
sub
ja
int
mov
dec
sub
loope
mov
push
out
je
xchg
ljmp
mov
ja
mov
adc
arpl
sti
clc
sti
mov
or
mov
mov
mov
sub
inc
punpckldq
ficoml
fdiv
std
jb
icebp
cmp
jl
push
cmpsl
mov
subl
dec
jle
pmaddwd
push
mov
aad
mov
fmull
orb
add
cli
into
imul
pusha
add
ds
aad
popf
rorl
mov
mov
and
inc
push
ret
cmp
cmc
push
dec
arpl
lret
mov
mov
mov
loopne
sub
mov
jne
dec
push
mov
pop
arpl
jge
pop
test
aad
xor
add
xchg
out
cli
out
or
fsubs
jo
icebp
sbb
and
lods
or
push
pop
sub
test
inc
mov
or
adc
cmp
sbb
mov
popl
shlb
mov
inc
push
adc
mov
icebp
jge
or
push
lods
outsl
iret
pop
mov
mov
cmp
pusha
cmp
pop
aad
aam
jb
notl
stc
addl
test
enter
push
adc
inc
ret
outsl
repnz
out
shll
fcompl
mov
shrb
add
xchg
dec
mov
add
inc
pushl
nop
cld
imul
cmp
jge
lods
es
mov
cli
jnp
xchg
cmc
mov
enter
cmp
cmpsl
jb
xchg
xchg
and
fcomip
mov
ja
mov
rcrl
and
out
sti
push
push
loop
add
mov
test
or
loopne
xchg
adc
das
jns
jmp
add
mov
mov
and
adc
push
cmpsl
or
mov
or
xchg
mov
repnz
repz
or
lcall
inc
outsl
cmpsb
add
pop
adc
xchg
int
loopne
jno
mov
orl
aas
push
jmp
fcoms
xchg
js
in
cmp
add
push
adc
mov
xchg
addr16
xchg
sbb
out
xchg
fs
loope
mov
mov
and
push
je
stos
scas
add
lea
decl
lahf
imul
inc
aam
jl
cltd
in
shll
aad
andl
iret
mov
xlat
dec
push
testl
cmp
pop
add
mov
aad
cmp
psllq
mov
xor
popf
mov
sub
adc
inc
popf
nopl
popf
or
cmc
dec
outsb
rorl
add
stos
xchg
inc
push
icebp
jge
loopne
push
dec
sub
loope
aad
cmp
popf
pusha
mov
xchg
call
push
out
jl
xchg
adc
xchg
fists
arpl
jnp
jecxz
mov
push
xor
cmp
stos
ja
inc
and
push
mov
popl
push
and
ret
mov
pop
add
inc
movsl
mov
out
mov
aam
aad
mov
xchg
inc
adc
add
arpl
shl
push
jnp
dec
test
dec
lahf
sbb
nop
je
mov
xchg
bound
mov
nop
pop
loope
lock
jns
stos
push
pop
cmpsb
popf
or
ss
fwait
decl
test
movsb
movsb
push
cmp
dec
and
cmp
cmp
sti
aad
and
cltd
lods
inc
pop
clc
fisttpl
adc
jge
dec
and
mov
jne
pop
cmp
sub
or
gs
arpl
and
xor
push
jns
or
ret
cmc
fldl
pop
test
xor
inc
je
into
out
cmpsb
fcmovu
pusha
test
stc
or
lcall
les
adc
mov
or
jl
fsubrs
clc
jg
mov
fwait
into
cmpb
sarl
mov
cmp
push
mov
rcrl
imul
stos
mov
cld
dec
push
outsb
cs
lods
cwtl
xor
sti
or
ucomiss
movsb
gs
lahf
out
ficoml
insb
aas
mov
in
repz
les
dec
or
or
push
call
sub
lret
int
xchg
xor
xchg
xchg
sbb
sub
jecxz
aad
fsubr
cli
push
ljmp
ds
and
fcoml
movsl
cmp
cmp
in
cwtl
cmp
mov
cmc
pop
xor
icebp
xchg
andb
xchg
jne
dec
pop
xchg
jecxz
lods
addr16
fxch
cmpsb
jge
lods
movsl
sti
stos
jns
cmc
fcoms
mov
inc
lods
lock
mov
fcoms
push
lods
imul
mov
xor
loop
push
pop
xor
cltd
cmp
xchg
cld
sub
jne
fisttpl
adc
arpl
loope
pop
in
inc
idivb
inc
dec
das
mov
cmp
cwtl
into
and
jbe
mov
aad
data16
stos
cli
sbb
cld
ds
xchg
jge
fs
push
mov
xchg
aam
mov
inc
stos
mov
nop
xor
inc
cmpsl
adc
aad
js
out
std
repnz
subl
scas
or
push
sbb
cwtl
mov
xchg
xor
outsb
cli
lret
sbb
jg
divl
pop
cmp
sbb
push
fidivrs
mov
mov
push
jne
sbb
test
jl
inc
cmp
mov
inc
in
cmp
dec
jge
inc
adc
xor
xchg
mov
scas
nop
push
mov
out
int
aad
fmuls
inc
in
lods
mov
jg
out
jge
scas
mov
push
add
mov
aad
push
testb
cmp
mov
not
ljmp
pop
lods
ljmp
sub
push
clc
adc
push
push
sbb
sub
jo
jmp
scas
jl
rorl
add
aad
cld
xchg
adc
xchg
sub
int
lock
cmp
cmp
movsl
push
int
and
leave
ret
or
aam
nop
aas
pop
add
xlat
enter
test
popl
xchg
dec
arpl
into
sub
adc
push
rolb
sub
or
mov
and
mov
sbb
cmc
lods
dec
mov
adc
jne
cmpb
lret
sbb
aad
bound
sub
dec
or
movsl
xor
dec
outsl
pop
lock
xchg
nop
cmc
push
jnp
mov
mov
out
outsl
mov
aam
mov
sub
mov
cmp
shll
cmc
pop
outsl
out
pop
xchg
push
fnstcw
cltd
xor
cs
pop
add
and
or
test
lcall
push
fwait
mov
aad
adc
adc
sub
lret
loope
or
sub
pop
or
cmc
int
push
daa
lock
cli
rorl
sti
out
lods
and
popf
dec
aad
pop
iret
cmp
push
mov
call
shll
pusha
sub
cmc
mov
xor
sub
push
xchg
enter
rolb
and
xor
scas
cli
lods
inc
dec
pusha
outsl
ljmp
inc
aam
jb
sahf
xchg
lahf
jle
push
test
ljmp
shlb
mov
je
adc
mov
aad
mov
push
mov
sti
testl
jnp
dec
aad
or
mov
aas
pop
mov
insl
inc
incl
ja
xor
xor
mov
or
adc
mov
mov
or
stc
add
fcoms
xchg
adc
jmp
iret
or
test
mov
js
mov
xchg
cmpsl
mov
sbb
fwait
jmp
xchg
sub
sub
arpl
sub
mov
fcom
mov
arpl
ljmp
and
mov
push
cwtl
lahf
and
and
imul
incl
rcl
test
and
inc
mov
int3
fimuls
fs
jae
movsb
or
xchg
inc
adc
mov
or
out
or
lods
decl
jnp
scas
in
repz
ja
push
and
mov
div
push
push
pop
lahf
or
push
loope
push
or
inc
nop
add
loope
imul
inc
push
stos
and
jno
clc
inc
cli
lcall
adc
cmp
sbb
pushl
adc
cmp
in
mov
stc
mov
gs
idivl
stos
popa
repz
mov
fldcw
xchg
cli
cld
mov
cmc
ja
push
data16
aam
sbb
or
lcall
mov
jecxz
push
call
popa
push
out
lds
add
mov
cmc
or
xorl
imul
scas
or
sub
pop
into
cld
mov
add
lahf
mov
xor
inc
daa
inc
mov
lcall
pop
cmp
mov
add
sahf
jb
fcoml
popa
add
xchg
shll
push
call
mov
push
push
add
mov
rclb
cmc
dec
aad
fucomi
cmp
testl
hlt
xchg
inc
or
shrb
adc
into
popa
or
push
mov
jmp
jecxz
lcall
rcll
movsb
adc
push
xchg
inc
out
stc
add
addl
enter
out
fadd
sub
xchg
and
in
push
adc
mov
data16
or
add
dec
jno
sbb
fists
out
lret
adc
mov
adc
xor
stos
push
jbe
xchg
jge,pn
call
loope
int
cwtl
jle
or
or
xchg
aad
dec
nop
rcll
in
and
leave
pop
fimuls
pop
push
adc
shlb
aaa
push
lods
add
xlat
inc
shl
push
test
repnz
xchg
adc
data16
les
stos
in
ret
push
dec
inc
jns
xchg
addb
sub
das
add
sub
fbld
cli
adc
xchg
stos
inc
or
fwait
xchg
cli
xchg
xlat
std
dec
xchg
push
inc
push
add
lods
movsl
mov
lcall
and
inc
dec
sbb
int
or
aad
xchg
mov
cs
fiaddl
and
aaa
test
xor
cmp
ret
pop
aam
inc
shll
lods
loop
pop
cmp
mov
jecxz
ret
and
dec
mov
dec
je
or
inc
cmpsb
hlt
adc
xchg
or
mov
out
or
and
popf
rcrl
andl
stc
pop
sub
test
sbb
mov
stc
loope
push
mov
das
lods
xchg
mov
sbb
sub
idivb
shll
mov
and
xchg
in
inc
xor
cltd
stc
inc
fldcw
jo
pop
lods
fs
aad
addb
mov
in
jbe
ja
aam
mov
idivb
out
sbb
lahf
fs
sub
cmp
movsb
mov
cmc
add
jbe
or
movsb
mov
sar
loope
dec
call
sub
xchg
les
and
dec
fdivrs
gs
aad
adc
aam
scas
lds
in
add
dec
or
popf
imul
ret
sbb
and
pop
xor
scas
dec
into
lea
jmp
and
minps
call
mull
mov
sub
jecxz
jns
mov
sbb
mov
mov
bound
pop
scas
aam
sub
movsb
test
sbb
nop
icebp
dec
and
cltd
and
cli
cmpb
imull
add
pop
imul
rol
dec
mov
mov
sbb
arpl
xlat
imul
icebp
sbb
not
fidivrl
loope
cmpsb
in
icebp
sarl
hlt
mov
pop
in
decl
jb
je
dec
sub
add
cmp
stc
adc
jl
jmp
push
jbe
sbb
stc
dec
in
push
scas
mov
pusha
jne
or
push
jae
dec
add
sti
sarb
stc
call
adc
sarl
ret
or
dec
jmp
fildll
outsl
ja
sub
fmuls
cmpsb
ds
xchg
nop
repz
subl
push
popa
dec
bound
jnp
lret
std
scas
shrl
cmpsb
mov
sbb
push
lret
mov
pusha
icebp
in
push
mov
inc
in
adc
push
push
cmp
dec
inc
fisubl
cmc
ror
fwait
pop
sti
jp
test
sub
xchg
xor
mov
test
aad
mov
incl
cli
jp
xchg
lcall
push
inc
aad
gs
sbb
and
dec
jne
dec
stc
outsl
test
lcall
rclb
mov
xchg
fisttps
cmp
dec
lods
mov
adc
pop
lods
xchg
xchg
xchg
dec
push
bound
dec
aad
dec
and
outsb
lcall
js
or
mov
sbb
scas
mov
or
lret
icebp
jp
dec
sbb
and
push
sbb
push
xchg
dec
xlat
out
bound
push
scas
or
cmp
fiaddl
imulb
sub
fnstsw
imul
mov
push
fisubrs
xchg
cmp
pop
sbb
xorl
sub
jp
add
gs
mov
mov
mov
nop
mov
dec
cld
addb
sub
ror
outsl
cmp
imul
mov
ljmp
adc
stos
cwtl
mov
sbb
lods
push
testl
test
cmp
ja
xchg
icebp
sbb
test
mov
add
mov
and
cmp
rorb
adc
loopew
jl
insl
mov
testl
pop
out
or
push
push
shl
rcr
sbb
testl
cmp
int
xchg
mov
push
pop
jmp
cmp
adc
cld
inc
mov
xchg
push
mov
push
imul
jmp
dec
rclb
int
int3
push
orb
xor
jge
mov
int
rcrb
inc
mov
xchg
mov
dec
adc
mov
cmc
jle
mov
in
push
xchg
mov
mov
inc
stos
mov
xchg
setae
cld
jecxz
rcrl
js
int3
fimuls
inc
ret
aas
sbb
adc
fildll
aad
fwait
dec
add
mov
cmp
cwtl
imul
pop
int
lock
les
jmp
jo
aaa
sbbb
pusha
test
outsl
mov
call
add
rcrb
inc
adc
push
cmpsb
rcrb
cmc
test
int
xor
arpl
mov
dec
into
pop
dec
pop
loopne
xchg
sbb
add
mov
mov
mov
dec
mov
mov
into
mov
cmp
fcoml
outsb
or
js
cmp
loopne
cmpl
cs
scas
jmp
fisttpll
aad
lahf
push
and
sub
pop
mov
cmp
scas
add
jge
jp
inc
ds
push
cmp
mov
insl
idiv
mov
mov
movsl
inc
jmp
std
loop
jnp
mov
mov
xor
dec
into
imul
add
dec
push
and
mov
lds
and
daa
and
jge
into
jl
push
dec
sub
addr16
lock
enter
mov
xchg
subl
sbb
scas
outsb
and
jmp
into
pop
es
xchg
int3
stc
lahf
mov
bnd
stc
xchg
inc
push
in
ss
cmp
add
dec
lahf
jnp
or
xchg
in
mov
loop
out
or
mov
and
stos
jno,pt
sbb
lods
mov
pop
push
divl
out
mov
adc
lods
push
ret
push
adc
sbb
rorl
cmp
adc
adc
xchg
out
xchg
lcall
test
xor
pop
cmp
inc
mov
shll
sub
imull
test
lcall
into
and
ds
push
sbb
fcomps
push
gs
adc
call
lea
mov
lock
mov
fisttpll
xchg
pop
pushf
mov
les
pushf
out
push
out
dec
sub
push
cmpsb
faddp
into
es
xchg
movsl
mov
or
mov
adc
sbb
sbb
fsts
or
ret
mov
lahf
sbb
aaa
jae
clc
jbe
mov
hlt
mull
std
jns
cmp
or
jecxz
out
les
ja
lea
jae
imul
ss
dec
mov
fldt
negl
push
iret
xchg
mov
cld
mov
jne
cli
jmp
notl
sbb
or
and
xchg
mov
cmp
cmp
ja
mov
dec
add
jbe
adc
aad
push
mov
mov
xchg
pop
push
add
jmp
or
clc
imul
adc
jo
dec
inc
jns
inc
fmuls
jno
cmp
fisubl
popf
xor
fldt
push
or
adc
sbb
sbb
cmp
out
imul
cmpsl
pop
dec
test
aam
jno
or
repz
out
cmp
stos
mov
out
mov
jo
cmp
mov
cld
adc
lock
xchg
xor
in
or
arpl
pop
jbe
jp
int
mov
cmpsb
inc
jmp
es
xlat
and
mov
fimuls
adc
cmp
ficoms
ds
ret
fisttpll
jno
outsl
cmpb
ret
idivl
xchg
shl
sub
mov
adc
sbb
in
loope
test
jo
pusha
and
out
cmc
pushf
pop
fstp
xchg
sbb
dec
sbb
and
and
std
int3
mov
pop
jl
mov
sbb
xchg
rcl
add
pusha
and
jbe
aad
mov
inc
test
ljmp
movb
std
pop
cwtl
in
imul
add
dec
jp
out
fyl2xp1
dec
xor
add
cmc
pop
adc
jno
stos
leave
cmp
cmp
cmc
es
jl
xchg
push
sub
dec
ja
jg
add
cs
jmp
sub
data16
jns
int
cmp
inc
push
frstor
jno
inc
pusha
pop
cmp
test
mov
mov
sub
data16
xchg
or
xor
push
xchg
cmp
scas
xchg
sahf
lcall
and
fdivrp
daa
mov
xchg
rcr
mov
lahf
imul
ret
mulb
xor
push
mov
mov
pop
ja
in
shrl
push
mov
sub
jno
jp
iret
sahf
out
out
out
test
dec
cmp
aad
cmpsb
aad
push
mov
sbb
sahf
sub
dec
jb
or
mov
int
sbb
fisubl
mov
inc
int3
mov
pop
test
push
aas
cmp
xchg
loop
push
pusha
daa
fwait
sti
mov
and
dec
xchg
lcall
shl
push
adc
nop
adc
jmp
call
scas
fldcw
pop
xchg
les
cmp
mov
push
push
inc
cmp
jbe
pushf
or
adc
fucomip
lahf
cmc
and
inc
inc
lods
scas
and
cmp
loope
js
ss
rclb
pop
jnp
aam
sbb
in
aad
sti
rcrb
cmp
in
cmp
aad
mov
push
das
cmp
test
mov
pop
frstor
subl
fidivl
sbb
int
psubb
loope
lods
push
add
inc
rorl
gs
mov
xchg
cmp
mov
mov
push
cmc
ficoml
into
shll
and
fsubl
jmp
mov
pushf
add
xchg
sub
in
push
aas
gs
insl
cmpsb
or
add
das
data16
jecxz
ljmp
push
inc
and
cmp
mull
aam
int
mov
xchg
jmp
mov
dec
cs
shrb
adc
nop
inc
adc
push
repz
dec
push
mov
mov
jb
sbb
aam
test
sbbb
mov
jmp
repnz
mov
sahf
add
mov
and
mov
loope
add
push
jecxz
shll
jle
lcall
test
jp
sub
xchg
loop
adc
cmpsl
pop
xor
nop
add
mov
lahf
pop
stc
sbb
jo
in
les
fdivrl
jmp
shlb
mov
jnp
pop
or
andb
ljmp
mov
divl
lahf
sub
cmpsl
pusha
xchg
jecxz
test
hlt
push
dec
out
cmpsb
std
rorl
pop
fmull
rcll
pop
loop
add
sbbl
mov
jge
insl
cmc
cli
rorl
ja
push
test
pusha
mov
mov
test
test
stc
fisttpl
or
push
mov
cs
sbb
lcall
lock
sub
add
xchg
idiv
sbbl
pop
add
mov
xchg
jg
in
mov
aad
jge
into
out
lock
pusha
fucom
add
mov
out
and
push
repnz
and
and
adc
jle
and
outsl
mov
xchg
bndstx
int3
mov
aam
mov
xchg
push
enter
dec
mov
out
add
and
xchg
mov
jp
jle
pop
bound
adc
inc
ds
cmp
shlb
sarb
xchg
cwtl
xor
push
cwtl
sub
or
mov
lods
stc
aad
mov
fcompl
add
add
adc
dec
das
gs
lods
sbb
sub
aad
xor
xchg
les
mov
mov
shlb
cmp
in
es
test
push
fldenv
testl
mov
push
shrl
xchg
add
rcrl
testl
imul
or
shrb
aas
push
jno
mulb
push
mov
repz
loop
cli
and
adc
stos
dec
and
insb
subb
sbbl
lock
imul
cmpl
insl
fmulp
daa
orb
mov
fninit
rclb
outsl
into
jmp
adc
xor
int
push
in
jecxz
jns
aad
xchg
push
in
adc
mov
lods
imul
idivb
xor
mov
dec
xlat
cmc
sub
mov
xchg
pop
mov
lahf
sub
bound
clc
cmp
test
dec
push
fwait
test
cmpb
cmp
mov
sbb
cltd
dec
hlt
mov
dec
or
mov
shlb
aam
push
sti
nop
mov
lcall
push
ljmp
nop
popf
aam
mov
or
data16
xchg
test
or
ret
or
jge
std
jb
ficompl
daa
ja
inc
decl
cmc
dec
jns
jno
pop
loop
lret
add
daa
sbb
dec
aaa
clc
fstpl
cmp
mov
jmp
xchg
ljmp
or
inc
push
pop
jb
jmp
imul
aad
cmp
sti
subl
or
lret
cmp
adc
mov
lahf
mov
loope
ficompl
or
mov
cmp
dec
xor
mov
xchg
out
fistpll
pop
outsl
and
cmc
mov
cmp
add
jg
jp
popa
dec
fisttps
cmp
push
sub
dec
or
and
push
js
add
stc
xchg
cwtl
imul
popf
call
test
sub
loope
inc
jp
cs
mov
aad
push
jb
imulb
ret
jne
cmp
outsb
out
xor
dec
jmp
cmc
inc
arpl
pusha
pop
jecxz
jp
out
aad
pop
ffree
in
sbb
pop
cmp
in
xchg
ljmp
dec
sbb
mov
mov
or
out
adc
enter
cmpsb
xchg
imul
pop
aad
cmp
adc
ret
mov
and
push
jecxz
mov
mov
imul
cmc
in
test
nop
out
mov
dec
mov
fwait
mov
push
push
mov
loope
cwtl
cmp
in
comiss
dec
mov
mov
into
cmc
out
sbb
outsl
popf
jle
cmpsl
cmp
push
xchg
push
lret
jnp
pop
dec
xor
into
xchg
xchg
pop
cmpsb
push
cmc
fbld
or
fsubp
imul
push
nop
insl
mulb
mov
push
adc
push
jl
negb
aas
sbb
dec
adc
mov
daa
cmp
jge
xor
dec
mov
into
dec
int
mov
adc
ret
mov
push
les
outsl
fnsave
in
jo
ja
or
gs
sti
and
pop
sbb
jge
int
lock
xchg
push
mov
addr16
aad
lahf
inc
in
adc
sub
push
sahf
std
enter
int
mov
mov
or
push
int
jns
cmp
sbb
mov
push
mov
push
nop
out
cld
call
pusha
out
xchg
xchg
lods
js
fucomp
jge
aad
pop
adc
mov
xchg
aad
cmp
out
or
shll
sti
je
aas
es
jb
idivb
repz
pop
call
lcall
ds
mov
mov
cmpl
into
and
lds
es
or
add
or
and
dec
cmp
push
push
out
mov
loopne
jno
fs
fld
and
mov
inc
out
pusha
popf
aad
mov
jb
and
lcall
push
cmp
aad
insb
lcall
cmp
mov
mov
aad
hlt
into
dec
mov
or
pushl
cmp
jne
not
sub
xchg
test
loope
lods
arpl
roll
or
add
scas
fiaddl
and
jg
jb
xor
mov
mov
pop
mov
int
pusha
push
xchg
mov
pop
ja
movzbl
enter
cwtl
cmp
in
incb
and
or
scas
push
mov
cltd
in
sub
or
jmp
rorl
mov
mov
sub
fnstcw
dec
lea
mov
fdivp
mov
cmp
cmp
jmp
cmc
test
cmpl
dec
aad
cld
fcomip
loopne
decl
sub
pop
ret
mov
mov
push
jno
pusha
add
movl
iret
in
dec
leave
les
jg
dec
aad
out
loopne
aaa
mov
loop
xor
addl
bound
jge
int3
addr16
or
or
jns
sbb
or
mov
loope
inc
xchg
mov
scas
xchg
in
sub
or
push
ljmp
in
sub
pop
dec
mov
std
decb
aad
repz
mul
pop
push
xchg
inc
adc
mov
mov
push
outsl
testl
mull
dec
adcb
push
popf
mov
adc
arpl
mov
jo
out
push
fs
out
loopne
adc
pushl
add
xchg
inc
neg
xor
dec
dec
adc
sbb
inc
or
and
cmp
push
stc
xchg
sbb
and
mov
rorb
dec
cmp
push
xor
into
js
fists
pushf
mov
stos
clc
xchg
outsl
popa
mov
cs
xchg
push
data16
int3
mov
lock
mov
mov
in
sbb
ss
ret
jmp
push
es
cmp
in
aad
mov
push
insb
jb
pop
and
sub
fistps
sbb
loopw
mov
int
mov
dec
mov
jg
pop
jns
push
mov
ret
imul
mov
mov
push
ret
insl
adc
cwtl
xchg
nop
rorb
sarb
mov
jns
push
hlt
aad
xchg
push
push
cwtl
sub
subb
leave
notb
xchg
add
dec
call
lods
or
aaa
xchg
mull
fucom
sub
inc
lods
ss
arpl
jmp
jecxz
dec
scas
lahf
mov
xchg
sti
inc
arpl
mov
aam
push
jno
dec
int
popf
sti
cmp
in
cmp
and
sbb
shl
sub
xor
or
sbb
cltd
mov
mov
das
fwait
out
int
mov
dec
push
add
push
les
scas
mov
je
inc
inc
out
mov
mull
and
stos
out
fisttpll
out
sub
sbb
lock
jno
mov
test
test
fs
pop
xor
lcall
dec
inc
sub
imulb
mov
jmp
loopne
rep
dec
flds
dec
mov
clc
call
jb
xchg
add
mov
rorb
mov
in
mov
and
ss
aad
scas
testl
popf
or
in
cmp
loopne
fimuls
imull
push
sub
jp
dec
scas
mov
int
xchg
mov
or
cmp
pop
jp
mov
and
mov
cmp
pushf
hlt
sbb
push
adc
aas
cmp
sti
xchg
inc
insl
cli
int3
aad
or
cmpsl
mov
sbb
cmp
movsb
lods
setne
movsb
pop
out
inc
hlt
in
add
cwtl
mov
popa
mov
mov
pop
jg
and
lock
xchg
adc
xchg
cwtl
pop
xor
in
mov
mov
xchg
mov
out
aad
cmp
cmp
mov
aas
jge
push
lahf
mov
hlt
div
push
filds
xchg
push
pop
popa
xchg
int
mov
rcll
push
cli
lahf
iret
or
loopne
test
shr
mov
add
inc
push
adc
lret
lea
loop
faddl
inc
sub
ret
iret
out
jecxz
in
mov
mov
aad
pop
adc
pop
icebp
out
cmp
lea
int3
push
fwait
sub
ret
cmp
je
xor
stc
add
mov
dec
pop
ds
push
mov
test
or
andl
mov
popa
sbb
aam
lss
fstl
nop
pminsw
pmullw
push
xlat
outsb
cmpl
scas
pop
test
mov
jge
mov
lods
xor
cltd
rcr
clc
setne
shl
call
lea
rorl
cmc
fstpl
jl
mov
mov
or
add
int
dec
mov
aad
and
aam
out
jne
cld
out
out
invd
and
dec
cs
push
test
inc
nop
insb
div
out
push
sbb
or
jp
sub
xchg
ret
in
cmpl
jno
sub
nop
cmp
cmpsb
out
cmc
lret
sbb
addb
arpl
jne
sub
insl
int
test
mul
mov
pop
mov
clc
pop
mov
xor
out
mov
data16
cmc
mov
rorl
jno
sarb
cwtl
jbe
testl
sub
jnp
das
pop
ds
fsub
je
int
mov
sbb
cmpsb
inc
test
xchg
mov
loop
xor
pop
das
shll
int3
dec
test
outsb
sbb
sub
mov
inc
push
arpl
add
add
jmp
and
mov
sbb
jns
adc
pop
shlb
in
shl
imul
mov
mov
add
push
popl
cmp
adc
and
test
mov
lods
aad
out
nop
and
cmp
inc
cwtl
test
and
sub
test
mov
xor
shrb
push
and
aad
stc
into
arpl
mov
mov
mov
mov
cmp
mov
test
and
jns
lds
test
or
setle
int
adc
outsb
test
mov
xor
sub
push
pop
bt
sub
loope
cmc
adc
dec
xchg
cmp
adc
sbb
aas
pushf
cmp
dec
movsb
dec
popa
or
sti
add
arpl
lcall
jmp
aad
mov
fbld
sbb
or
rclb
outsb
lcall
ss
ret
xchg
mov
inc
out
jmp
dec
test
dec
cmp
popf
xchg
cmp
pop
and
movsl
cwtl
sub
out
push
ja
push
fbld
pop
sub
push
sbb
mov
jmp
push
clc
xlat
and
int
jmp
jl
aad
fdivrs
loope
mov
iret
int
nop
or
lods
sbb
in
test
sbb
inc
dec
push
dec
popa
and
lcall
adc
xchg
inc
cmp
popf
les
jp
pusha
lods
or
jmp
pop
cmp
mov
iret
aam
mov
loope
fdivp
fimuls
inc
cmc
das
mov
xchg
dec
mov
dec
push
iret
mov
push
hlt
paddsw
shr
xchg
movsl
push
orl
loop
ret
lock
dec
lahf
mov
out
mov
fdivrs
std
mov
push
xor
pop
push
mov
add
xchg
lock
sub
loopne
inc
sbb
jne
cmc
lea
adc
inc
cmp
cld
xor
cmp
push
jp
and
les
out
insl
mov
fs
push
or
movsl
mov
call
push
imul
or
pop
cmp
pusha
push
andb
into
cmc
mov
jnp
xchg
mov
call
xor
bound
iret
sub
cmp
out
pop
int
mov
add
dec
ljmp
aad
decl
dec
adcl
xlat
call
int
shrl
push
stc
arpl
push
cmp
mov
cli
dec
mov
rcll
repnz
or
sbb
dec
adc
out
iret
pop
movsb
inc
mov
mov
es
mov
pop
xchg
cmpsb
shl
pop
push
inc
sbb
mov
fcoml
fwait
jnp
mov
cmpsb
or
jnp
and
sub
and
add
sbb
and
push
out
int3
push
psubq
fstps
jmp
push
xchg
test
rcrl
aad
fucomip
xor
xchg
pop
nop
cmc
inc
adc
cmc
cmp
jne
jg
aad
push
jp
dec
push
sub
jbe
jnp
cwtl
jg
add
xchg
out
cltd
xchg
ja
sub
push
mov
add
or
loop
pop
insl
jns
and
mov
cmp
cs
dec
push
aad
push
ret
mov
cmc
jp
pop
mov
mov
xchg
jmp
mov
or
call
hlt
fiadds
and
movsb
iret
fistps
in
addr16
popf
nop
movl
mov
jno
push
xlat
roll
xchg
xchg
push
sti
or
add
test
data16
xchg
mov
mull
mov
dec
mov
dec
xchg
pop
pushf
and
out
fs
xor
mov
add
push
lahf
aam
xchg
or
cs
iret
cmc
fisttps
cmp
test
push
jnp
pusha
shl
jp
xor
mov
sub
add
adc
dec
pop
push
loope
adc
outsb
lea
fstl
inc
lcall
or
stc
out
cmc
arpl
pmullw
jge
cli
and
das
cmp
cli
int3
xchg
fcoms
inc
rorl
sbb
into
xor
add
pop
and
loope
fwait
out
sub
mov
js
lock
xchg
int
jmp
iret
imul
xchg
sub
fidivs
addl
pushf
push
test
cmp
cmp
popa
xchg
and
repz
clc
mov
fistpl
and
repnz
or
adc
pop
psubq
lock
dec
mov
jo
xchg
mov
sub
push
dec
push
fldcw
pop
ds
add
insl
sub
push
xchg
push
fistps
fwait
or
lods
jno
in
or
outsl
iret
xor
mov
xchg
mov
pushf
call
add
mov
push
outsl
pop
test
ficoms
outsl
cltd
sbb
push
dec
inc
xchg
nop
jbe
sub
lcall
adc
nop
xchg
push
das
lds
jp
das
call
pop
data16
cmp
xchg
sbb
pushf
and
test
lods
add
mov
mov
cmc
int
xor
xchg
mov
mov
xor
jnp
jo
icebp
sub
mov
pop
and
or
xchg
jne
stos
fs
mov
sbb
pushf
popf
cmp
xchg
int3
data16
mov
dec
out
loop
enter
fidivrl
loopne
cmc
pop
repz
dec
xor
mov
mov
mov
jns
cmp
imul
std
jecxz
mull
xchg
subb
fdivrl
test
dec
or
sahf
lods
insl
hlt
dec
shrb
cs
or
sbb
stos
jo
jg
ljmp
cld
adc
in
cmc
fwait
or
push
pop
sbb
push
adcb
lcall
jb
ljmp
sti
add
dec
insb
jmp
pop
push
sbb
movsl
inc
xchg
mov
xchg
cli
jo
xchg
cmp
test
adc
movsl
out
inc
mov
hlt
pop
push
and
gs
in
and
pushf
cs
xchg
pop
mov
push
pusha
xchg
flds
sar
stos
sub
stc
add
je
imulb
hlt
and
jnp
movl
pop
adc
dec
sub
lds
mov
xlat
lock
and
incb
loop
fs
add
pop
stc
xchg
or
sar
mov
popa
jb
pop
movsb
mov
adc
stc
loope
push
cmp
popa
pushf
rorb
fbld
lea
lea
xchg
into
xchg
cli
xor
movsb
daa
or
in
lea
movsb
mov
into
and
mov
imul
iret
repz
inc
idivl
xorb
pusha
push
lods
and
adc
std
jl
in
or
mov
fnstenv
aam
xchg
add
loop
fstps
mov
outsb
inc
mov
pop
mov
fdivrs
and
pusha
mov
dec
lcall
sub
aas
push
mov
aaa
and
push
lahf
or
outsb
mov
add
lcall
scas
add
test
cld
sbb
mov
mov
mov
xchg
lock
dec
and
jnp
hlt
imull
sub
cmp
lret
add
jp
cmp
inc
aad
jae
jge
adc
dec
aas
leave
imul
jbe
jl
adc
xor
jle
dec
testl
sbb
sub
xchg
gs
dec
leave
xor
je
idivb
sbb
sbb
pop
test
mov
jb
popf
mov
notl
stos
movsl
stc
xor
xchg
dec
imul
fistpll
fincstp
mov
aas
lods
icebp
xchg
inc
mov
insb
outsl
pop
mov
mov
push
push
flds
push
mov
mov
mov
dec
inc
mov
pop
into
sti
pop
aas
and
sbbl
test
mov
mov
dec
stc
fnsave
call
dec
fcompl
cmp
addr16
jno
sub
fstl
mov
clc
stos
in
fidivrl
shll
test
stos
data16
xlat
ds
inc
cmp
jbe
xchg
repz
gs
inc
cmp
and
mull
sti
sub
add
and
cmc
insl
outsl
mov
mov
sbb
xchg
mov
es
ljmp
es
call
jo
mov
ret
inc
jge
movl
mov
push
rclb
jns
arpl
xor
xor
mov
fisttps
adc
and
mov
iret
push
pop
pop
sub
ret
push
popf
mov
pop
out
or
adc
push
add
aaa
mov
stc
shll
mov
xlat
adc
cmp
not
js
cwtl
adc
scas
shll
xor
cmp
cltd
outsl
int
call
adc
xchg
push
jge
popa
lcall
sbb
iret
pop
and
jl
movsl
loopne
add
cli
test
imul
push
out
aad
popa
dec
mov
push
insb
int
sbb
fdiv
and
lret
dec
in
repz
ret
jmp
dec
int
adc
add
gs
jns
cmp
fbstp
iret
fwait
pusha
cltd
inc
hlt
dec
mov
jne
loopne
adc
cmp
lock
mov
fistpll
call
cli
xor
stc
pop
push
and
mov
sub
aaa
or
shlb
and
mov
mov
mov
cmp
sub
mov
xor
cmovl
scas
push
mov
push
fidivs
adc
sti
insl
jmp
jnp
mov
insb
push
inc
bound
dec
inc
adc
mov
mov
xchg
pop
ficoml
pop
sbb
test
stc
push
push
sar
jb
pusha
negb
mov
repz
aad
test
test
test
dec
inc
xchg
call
push
jg
stos
fcom
jno
stos
adc
add
cmpsl
into
sub
stos
out
loope
dec
cmp
aad
mov
jmp
loope
fcomip
push
outsl
mov
or
cmpsl
and
psubw
pushf
rcrb
insl
movsl
cmpsb
nop
stos
repnz
scas
or
mov
call
pop
or
into
add
in
mov
push
jl
adc
push
jmp
aad
in
enter
push
adc
test
popf
lds
in
lahf
sbb
nop
repnz
dec
mov
out
lods
or
xchg
or
js
lea
push
fwait
aaa
push
ja
push
inc
mov
mov
adc
es
shrb
jp
cs
dec
pop
lea
adc
lea
sti
dec
xchg
pop
mov
inc
popa
mov
stos
inc
mov
cmpsl
aam
dec
pop
xchg
add
mov
aad
or
mov
inc
or
loope
mov
jecxz
mov
gs
cmp
xchg
sbb
add
mov
mov
mov
or
inc
mov
inc
loop
stos
movb
filds
aad
and
ss
test
push
xlat
in
jns
cmp
adc
das
pop
jl
and
mov
out
cmc
sbb
fadd
iret
jmp
gs
je
pop
imul
lcall
lods
inc
arpl
mov
fstpl
ret
push
and
fcoml
lock
adc
jo
mov
enter
lods
call
sub
jp
arpl
cmp
xchg
test
lock
xchg
jbe
push
xor
call
pop
into
setne
adc
imul
dec
mov
or
jbe
lahf
mov
or
or
push
jp
jecxz
sbb
sarb
sbb
movsl
negb
aad
movsb
in
mov
and
mov
inc
out
idiv
dec
add
int3
dec
icebp
mov
imul
lret
mov
mov
jmp
jns
jns
in
imul
push
and
push
sarl
jecxz
cmpsl
shll
xor
icebp
enter
xchg
jge
lds
ds
push
inc
out
fs
xor
mov
divl
fs
jg
cltd
lods
fsubs
ja
jns
mov
dec
push
lea
clc
imul
lret
adc
lahf
dec
xchg
mov
mov
sub
push
mov
jmp
aas
xchg
cmpsl
inc
stos
nop
inc
outsl
jmp
fwait
jb
cs
sbb
imul
lcall
pop
loope
pushf
loopne
or
out
std
scas
fnstsw
jmp
mov
je
out
and
mov
jmp
fwait
mov
in
imul
push
jae
jno
xchg
adc
cmc
test
add
aad
dec
sub
cmp
and
pop
sbb
fisubrs
movb
stos
stos
cld
cmp
mov
cmp
int
xlat
and
jmp
dec
rorb
dec
and
jle
xchg
jge
mov
and
add
push
or
js
jle
int
jb
dec
leave
daa
roll
sbb
pusha
dec
iret
mov
fwait
lahf
xor
sbb
je
cmp
cmp
dec
xor
neg
addr16
inc
xor
sbb
call
push
popa
addr16
xchg
into
push
and
movsb
nop
pop
ja
push
loopne
push
int
std
out
imull
repnz
dec
lahf
addr16
cli
sub
pop
inc
add
cmp
lret
leave
or
xchg
scas
xchg
adc
out
ja
scas
jns
stos
movsl
daa
pop
fbstp
pop
jmp
nop
jnp
movsb
cs
out
icebp
push
out
pop
pop
shlb
xlat
in
sub
dec
jb
rorl
cmp
loop
xor
fwait
cmp
cmp
add
dec
jno
pop
xchg
mov
or
sub
loope
inc
stc
loopne
out
popa
jp
xchg
inc
cli
pop
mov
dec
push
push
adc
ja
outsl
or
ret
setg
mov
mov
shll
or
leave
cwtl
bound
mov
mov
xlat
and
icebp
pop
jmp
dec
or
cld
rorb
inc
adc
mov
cmp
or
movb
iret
lods
seto
push
popl
cmp
fsts
add
mov
push
nop
hlt
movntq
or
sarb
out
dec
mov
and
mov
stos
cmp
sub
inc
mov
mov
lret
mov
pmullw
cmp
cltd
push
out
cmc
sbbl
aad
shrl
in
rorb
add
mov
or
jge
pop
push
jge
movsb
leave
inc
sub
jge
cmp
ret
cmp
shlb
jmp
mov
ljmp
sti
inc
or
or
pop
xlat
aad
mov
std
ret
dec
ja
iret
push
je,pt
push
call
in
nop
lods
mov
int
rclb
xchg
test
cmp
xor
push
cmp
lds
icebp
mov
add
lods
mov
sbb
mov
out
popf
sub
and
mov
sbb
ja
shl
std
mov
iret
shl
cli
push
cmc
popa
mov
sbb
push
mov
jle
inc
sarb
mov
inc
xchg
sbb
movsb
jns
out
out
out
pop
lahf
sahf
rcr
sbb
test
scas
jmp
push
mov
sub
push
cltd
popf
jno
movsl
mov
mov
sbbl
aad
dec
imulb
shll
dec
and
xor
jl
mov
out
loopne
sub
shrl
inc
negl
inc
dec
sbb
bnd
aad
mov
cwtl
leave
push
jmp
in
mov
filds
sbb
xor
dec
mov
mov
mov
fsubrs
pop
or
inc
mov
inc
cmc
cmpsl
ljmp
dec
mov
mov
incl
js
push
adc
addr16
fildl
jge
repz
aad
mul
imul
mov
xchg
outsl
aam
adc
sub
push
les
bound
mov
and
sub
jmp
lahf
pop
jmp
or
ljmp
les
movsl
jns
loopne
lahf
out
insb
sub
mov
mull
hlt
cwtl
jp
loopne
mov
movsl
xor
pop
dec
pushf
adc
repnz
dec
loop
scas
mov
ficompl
sbb
xchg
dec
cli
aam
mov
push
sahf
xor
inc
mov
xchg
xchg
dec
adc
mov
hlt
mov
inc
repz
int
fildl
sbb
push
mov
inc
lahf
or
pop
inc
jae
inc
jnp
out
int
or
add
movl
jp
push
les
out
dec
add
jge
lcall
sub
loop
xchg
imul
popf
jns
dec
and
pop
jge
les
mov
push
popa
cmp
cmp
mov
sub
and
std
pop
add
sbb
mov
sti
sahf
sub
and
pop
xlat
cmpsb
shrb
pop
xchg
sbb
ret
test
and
cmp
movsl
lds
xchg
pop
pop
fmul
sti
sub
out
pop
cmp
loope
sub
adc
in
and
pop
aas
mov
shll
mov
inc
jle
notl
push
test
sbb
frstor
lock
movsl
xchg
sbb
xchg
mov
sbb
std
sub
lods
outsl
xor
mov
sbb
mulb
or
push
jge
lock
scas
imul
stc
dec
xchg
cmp
cmpb
outsb
sub
stos
leave
and
test
hlt
pop
push
add
cwtl
rorl
lret
loopne
out
mov
dec
lcall
xlat
pop
pop
push
stos
mov
mov
adc
movsb
push
loope
mov
jo
aam
repz
fdivl
jo
div
sahf
and
loope
sub
in
sub
cmp
leave
dec
mov
xchg
js
popa
imul
cmpsb
loop
testl
aad
add
mov
lcall
mov
jl
push
mov
jb
sti
movl
cmpsl
mov
xlat
loop
test
fcomip
inc
cs
xor
clc
or
and
sahf
inc
clc
mov
sti
cmp
mov
push
pusha
les
sub
pop
cmp
fbld
and
or
sub
adc
inc
push
xchg
dec
xchg
xor
scas
push
data16
arpl
cmp
sub
daa
jge
mov
add
push
inc
popf
mov
sbb
pop
xor
cmp
push
add
add
xchg
pop
int
mov
mov
lods
outsb
dec
iret
push
filds
push
adc
jge
jmp
xchg
sbb
cmc
pop
daa
jl
bound
jae
mov
cmp
inc
cmp
adcb
jnp
mov
scas
lods
pop
cmp
addr16
cmp
jmp
lret
sub
enter
les
shlb
sub
xchg
mov
adc
scas
inc
mov
xlat
jns
mov
jle
loop
scas
inc
or
mov
sub
or
add
xlat
mov
aas
ljmp
cmp
lock
sub
fwait
jnp
push
push
mov
push
adc
lahf
sbb
inc
loope
jne
dec
lods
xchg
jns
in
cmc
movsl
push
xchg
dec
decl
or
lods
and
aad
scas
sbb
out
inc
cld
mov
mov
push
jmp
int
mov
mov
cmc
lea
inc
fstl
xchg
data16
dec
stos
and
xchg
lret
ljmp
iret
push
dec
cmc
dec
sbb
fldl2t
cmp
mov
add
xchg
mov
imul
leave
pop
imull
scas
scas
mov
mov
adc
pop
popa
out
jb
inc
pusha
jnp
sarl
fmull
int
das
jge
mov
cmp
pop
mov
out
adc
loope
xor
out
xchg
test
push
jg
pushf
mov
aad
push
out
setl
add
stos
pop
dec
mov
adc
iret
in
stos
pop
in
insb
addr16
jns
cmp
inc
jle
dec
and
jnp
mov
mov
fwait
push
int3
xor
xchg
outsb
jmp
cmp
jae
dec
cmc
mov
stos
rorl
std
in
ljmp
test
mov
mov
pop
or
pop
movb
xor
mov
pop
xchg
or
xchg
js
into
es
add
and
sti
insl
xchg
mov
cmp
dec
push
aad
mov
stos
rclb
pop
or
dec
js
mov
lock
lcall
adc
pop
jge
shr
sbb
popl
stos
push
idivl
bound
imulb
loope
inc
inc
mov
sti
test
cmp
and
ljmp
inc
or
into
stos
xchg
idiv
movups
xlat
cld
xchg
pop
dec
mov
stc
xchg
aad
adc
pop
pushf
cmp
scas
fisubrs
out
cli
cmp
mov
test
cmp
adc
nop
dec
aad
sbb
out
imul
lods
add
or
pop
stos
xchg
imul
hlt
sti
mov
dec
pushf
loopne
imul
in
in
or
sbb
imul
mov
aas
arpl
popf
mov
mov
mov
into
xchg
mov
jge
in
inc
lea
test
incl
sti
cmc
pop
inc
pop
pop
mov
jae
aad
xor
decl
cmp
lds
add
test
push
out
jl
cmp
or
punpckhdq
add
hlt
divl
or
ja
push
jns
std
fsubr
sbb
mov
jecxz
pop
mov
mov
dec
in
pop
ret
mov
movsl
pusha
push
imul
push
jle
push
movsl
mov
or
popa
jecxz
add
in
xchg
push
test
cmp
xchg
mov
out
mov
or
stos
cld
loop
lods
adc
lock
std
dec
sbb
imul
or
sbb
arpl
pop
lods
dec
push
adcb
lock
aad
pop
dec
lcall
shl
jl
jp
inc
add
inc
shll
test
repnz
cmc
or
test
dec
cmp
lods
lods
push
jl
loopne
push
adc
xlat
shl
inc
xor
sub
jnp
adc
mov
pop
adc
data16
xlat
mov
mov
imul
sti
mov
push
lods
addr16
or
jecxz
pop
nop
ret
aad
fisubrl
out
aad
rcr
mov
push
mov
xchg
mov
dec
lock
adc
bound
movsb
cld
push
inc
xor
pop
stc
mov
lods
lock
xchg
stc
int
ret
int
cmp
inc
and
sub
lock
mov
and
inc
repnz
mov
popl
add
out
in
fndisi(8087
push
sub
mov
mov
out
shlb
xor
mov
adc
dec
mov
dec
jmp
xchg
bound
ss
repz
jmp
jge
xchg
clc
sbb
test
pop
cld
negb
dec
aad
lahf
mov
dec
mov
stc
jmp
cmp
dec
scas
cmp
and
sbb
fldl
lcall
mov
push
hlt
enter
loopne
mov
pop
int
mov
mov
xchg
in
sub
add
lret
pop
shll
int
adc
jnp
fwait
dec
iret
adc
ret
xchg
inc
cli
jnp
dec
aad
sbb
rolb
push
add
sbb
js
call
es
add
jge
push
inc
cld
or
jb
js
or
cmp
clc
test
push
mov
out
fucomip
mov
movl
add
aas
lock
sti
loope
mov
xchg
sub
fwait
dec
std
push
jno
test
push
sbb
mov
test
xor
aaa
lea
pushf
stos
push
sub
inc
and
pop
idivl
loopne
dec
or
rclb
repz
imul
adc
ret
jb
mov
sahf
int
jp
mov
xchg
mov
adc
into
lock
push
or
sub
in
push
idivl
arpl
mov
fs
pop
sarb
mov
ss
jno
cmp
xor
pop
mov
push
nop
std
rcll
test
fcmovnbe
cld
mov
shlb
sbb
and
cmpsl
adc
cwtl
inc
insb
insl
stos
dec
sbb
ret
jecxz
and
mov
mov
push
int
cmp
pop
and
js
mov
xchg
adc
mov
dec
loope
cmpb
dec
mov
test
dec
adc
push
filds
sbb
test
xor
lods
mov
lret
popa
ret
inc
into
push
iret
add
cmc
or
add
sbb
and
cs
addb
js
add
popa
xchg
xor
adc
stc
dec
push
push
add
or
sub
addr16
pop
mov
imul
push
dec
mov
pop
push
adcl
dec
out
and
pop
cmc
sti
ds
imul
and
iret
fnsave
aad
xchg
aam
pop
lret
cmp
jecxz
push
jns
in
mov
das
xorb
out
and
hlt
cmpsb
jmp
jge
push
xor
pop
mov
fst
jecxz
test
inc
sub
mov
xorl
jns
or
push
fcomps
sbb
jp
into
add
adc
dec
imul
xchg
xchg
add
sbbb
addr16
pop
pop
imul
mov
notl
aad
cld
xchg
inc
arpl
inc
lods
cmp
mov
sub
or
mov
adc
add
fsub
sbb
mov
jg
inc
pushf
cltd
xor
mov
int
sbb
ljmp
loope
cmc
int
adc
loopne
sbb
jmp
ljmp
mov
pop
int
mov
sbb
mov
dec
push
dec
dec
aad
jns
add
jno
push
fcomi
pushf
iret
unpckhps
std
lcall
dec
incl
clc
xchg
xchg
xor
test
lret
jp
push
mov
aad
pushf
sbb
or
mov
cld
xchg
inc
push
fwait
jae
inc
ret
pusha
pop
mov
cmc
icebp
int3
cmovnp
inc
sbb
movsb
cwtl
xor
push
clc
dec
fnstenv
and
and
scas
int
pop
test
or
or
lock
pop
popf
adc
cld
dec
mov
ja
lds
push
jns
pop
jb
cmp
fnstsw
mov
jmp
fwait
popa
rorb
incb
pop
sti
jge
aad
pop
cmp
push
bound
pop
add
dec
stc
lods
lcall
dec
loope
xchg
aam
das
int
int3
scas
cmpsb
or
insl
ret
add
test
div
and
je
in
sbb
arpl
mov
clc
pop
xchg
mov
pop
mov
call
inc
dec
jb
jmp
shrl
lahf
xchg
mov
dec
daa
or
push
sbb
dec
cmc
andl
mov
lods
and
and
cwtl
repz
pop
ret
not
lea
adc
rorl
sub
loopne
gs
adc
stc
pushf
int
scas
lock
mov
and
mov
lods
add
pop
xchg
adc
sbb
nop
aaa
call
cmp
loop
lods
sti
pusha
mov
mov
sub
mov
xlat
gs
pop
xchg
xor
call
or
inc
loope
push
cmp
or
jnp
mov
cmpsl
movsl
fdiv
mov
pop
push
xchg
ss
lret
xor
sahf
aad
sbb
add
loope
out
push
test
xchg
xchg
jns
adc
push
sub
sub
jp
xlat
jle
into
cmc
jge
sub
push
and
ljmp
clc
rcrl
dec
mov
jle
xchg
inc
xchg
out
insb
sbb
or
or
fimull
cs
inc
lods
stc
subl
push
rorl
xor
xor
lea
mov
in
roll
push
xchg
je
rcrl
ljmp
cmp
jne
aad
int
xor
rclb
imul
xchg
fmull
andl
push
shl
aad
xor
test
fcmovnb
pop
das
arpl
mov
mov
and
fwait
or
add
push
loop
lcall
mov
xor
cs
sbb
ljmp
mov
dec
or
es
mov
xchg
push
inc
adc
std
or
xor
push
cmc
sti
xor
xchg
lods
dec
movsb
pop
push
int
fcoms
psllw
mov
jge
and
mov
shl
jg
sahf
and
lcall
jb
rclb
inc
push
cmpsb
cmpb
add
jle
hlt
enter
push
mov
jmp
mov
mov
jae
addr16
adc
out
mov
loop
test
add
cmp
mov
cltd
mov
lcall
ret
push
and
divl
out
push
xor
add
push
lret
js
divl
xchg
imul
cld
adc
leave
lahf
sub
imul
adc
or
div
les
lds
pop
add
dec
add
out
xchg
dec
adc
cmp
xor
cmp
aad
cs
mov
inc
in
scas
sub
xor
daa
jnp
scas
xor
xor
sbb
leave
je
xchg
hlt
in
fldcw
adc
or
loope
cmp
mul
sbb
sbb
aam
incb
jb
mov
sub
je
cmp
imul
xor
xor
jge
outsl
into
lds
mov
push
mov
push
cmp
xchg
mov
sub
ds
xchg
aam
and
rorb
inc
add
shrl
mov
adc
dec
das
cmp
stos
sub
jb
jge
cmp
jle
fnsave
or
xchg
xchg
cmp
jmp
adc
or
xlat
out
xchg
sub
pop
mov
pop
rcl
inc
nop
iret
fisubrl
outsl
or
cmp
aas
mov
or
mov
stos
adc
dec
int3
cmp
scas
lea
pop
cmp
mov
stos
outsl
testl
imul
jp
push
into
rcr
in
out
sbb
std
imul
sbb
inc
mov
cwtl
xchg
out
imul
jmp
xor
inc
jo
pushf
and
and
adc
and
add
rclb
add
aad
mov
shlb
addl
xchg
mov
ret
lret
adc
shrl
call
adc
mov
out
pop
js
add
into
and
aad
and
push
jae
leave
dec
stos
pop
add
stos
pop
or
and
jecxz
xchg
push
inc
push
and
mov
ja
cmc
js
incl
push
cmp
cmpsl
push
movsl
fwait
scas
outsb
pop
repz
adc
jb
or
pop
jmp
and
jmp
push
xor
jns
jmp
lret
int
test
fiadds
loope
dec
fcoml
mov
lea
xchg
cmp
cmc
mov
ja
or
push
push
add
xchg
sbb
cltd
cld
push
imul
aad
dec
decl
sub
inc
idivl
ja
aad
mov
add
cmc
fcmovb
inc
mov
inc
pop
dec
lods
cmp
inc
add
iret
cmc
dec
test
push
cmp
fimuls
loopne
bound
mov
ljmp
adc
add
icebp
imul
cmp
mov
testl
les
aad
cmp
dec
xchg
int
sahf
je
rcr
dec
or
jmp
movsl
movsl
lcall
pop
or
push
jno
insl
je
jbe
inc
ret
fistl
mov
popa
cmpl
adc
adc
adc
xchg
and
out
mov
imul
add
dec
xchg
fisttps
jmp
mov
xchg
mov
lcall
xlat
xor
push
inc
sub
sub
sarl
pop
add
mov
jle
dec
lock
or
cltd
sti
call
jp
sub
fimull
and
jns
push
pop
jo
cmc
push
mov
push
fstl
xor
imul
mov
lahf
jmp
lahf
push
sub
mov
inc
jbe
cmp
cmp
cmp
xor
scas
es
mov
iret
lods
or
add
dec
pop
lods
lods
out
fsubrl
les
pop
push
divb
dec
push
ret
nop
fcoml
movsl
in
sahf
or
inc
push
lea
sbb
dec
test
fistpl
or
inc
push
ds
or
movsb
mov
lcall
xlat
add
popf
lcall
iret
shrl
insb
xchg
in
push
mov
int3
in
pop
iret
mov
push
xchg
add
jmp
lahf
or
mov
cld
mov
insb
xchg
xor
pusha
ret
subl
cmc
aam
out
lcall
dec
lcall
push
adc
jg
lahf
loope
cmp
xchg
out
test
jl
mov
loopne
dec
movsb
mov
andb
jl
pop
dec
mov
jmp
push
jecxz
cmc
dec
lahf
mov
inc
jb
jge
dec
outsb
imul
push
jmp
or
ljmp
xlat
test
push
jne
fidivl
aam
cmp
sahf
or
mov
notl
cmp
cmpsb
nop
imul
mov
and
sub
sub
lock
cmc
int
mov
scas
aad
xchg
and
and
jb
int
ljmp
mov
test
adc
rorl
jo
outsl
outsl
popa
outsl
sbb
pop
inc
cltd
pop
cmp
xchg
jge
icebp
or
sbb
add
mov
add
out
xchg
pop
jne
jnp
into
push
jne
dec
imul
push
and
dec
popa
je
decb
sti
dec
sbb
jmp
or
push
or
fisttpll
xor
outsl
js
pop
sbb
push
insb
fstpt
fisubrs
popfw
bound
jb
dec
sahf
fsts
and
pusha
jne
stos
stc
add
iret
cmp
notl
mov
mov
lea
mov
or
lahf
push
jp
sahf
shrl
fisttps
xchg
outsl
cmp
mov
outsb
cmp
outsb
push
pop
cli
sbb
sbb
stc
jo
addr16
fwait
push
in
xchg
pop
add
mulb
jmp
aad
jl
adc
sbb
pop
mov
mov
mov
bswap
mov
jbe
mov
jbe
jo
push
out
lcall
mov
add
pusha
fists
xor
sub
mov
lret
int
pop
icebp
jp
jns
mov
push
pmaddwd
aad
mov
xchg
test
inc
inc
stos
push
addr16
xchg
iret
cmc
clc
push
das
scas
cmpb
sub
mov
enter
mov
cli
mov
sbb
xor
adc
cltd
dec
roll
adc
xor
xchg
out
popa
js
sub
lret
mov
fists
xchg
cli
idivb
daa
out
xchg
inc
imul
es
add
adc
mov
jno
into
stos
xchg
inc
pushf
loope
mov
fwait
icebp
lret
in
aad
popf
mov
ret
cmpsb
icebp
and
mov
mov
popa
lcall
push
sub
daa
in
add
and
mov
nop
cmp
aaa
into
cwtl
aad
push
push
cmp
push
pop
mov
nop
imul
jbe
mov
or
xor
pop
aad
enter
je
testb
jnp
dec
mov
fmuls
imul
adc
mov
int
xchg
and
cmp
jae
xchg
push
cmpsb
out
pushf
mull
loope
fists
sbb
into
sub
in
lods
clc
in
mov
pop
mov
dec
jmp
and
xor
push
jle
ss
xchg
leave
rorl
out
in
push
lds
or
lret
mov
je
test
xchg
mov
pop
cmc
addr16
jmp
sbb
cmpb
add
adc
push
sbb
jmp
push
dec
sub
mov
cmc
sub
and
dec
and
ja
add
adc
mov
adc
out
mov
push
inc
pusha
or
mov
pop
jae
test
test
sub
fisttps
pushf
and
xchg
sahf
rcl
push
pop
jg
les
fisttpll
stos
fdiv
out
and
lock
dec
in
push
push
leave
push
sub
jp
int
arpl
incl
cmc
out
inc
xchg
jl
pop
pop
push
inc
incl
insb
and
and
out
mov
mov
lods
add
pop
int3
stos
xor
outsb
xchg
push
ja
bnd
mov
dec
lcall
and
jmp
xor
jge
mov
sub
das
clc
fmul
dec
add
add
adc
clc
pop
jmp
arpl
jae
loop
out
xchg
loop
pop
ss
dec
test
and
out
ljmp
dec
andl
iret
xor
femms
add
iret
inc
sbb
dec
add
int
mov
pop
mov
xor
test
cld
cmp
mov
adc
adc
lock
push
cli
ja
mov
jle
pop
fmuls
aad
jb
xorl
sbb
adc
das
push
xchg
xchg
imul
xchg
mov
fstps
mov
shll
xlat
cmp
cmp
cmpb
repnz
xchg
mov
cmp
xchg
decl
lods
outsb
mov
dec
fstl
iret
or
jmp
cmp
push
push
loope
xor
inc
dec
in
push
xorb
pop
movsb
lcall
bswap
pusha
sub
dec
adc
sub
jle
int
mov
imul
or
dec
mov
shrl
sub
js
lahf
mov
push
je
ret
aaa
mov
dec
inc
orb
fnsave
pop
lcall
adcl
add
inc
push
jno
and
xor
mov
outsl
adc
jg
lcall
inc
cmc
int
push
jecxz
inc
sub
and
les
jbe
js
xchg
pop
shlb
scas
adc
jge
dec
loop
gs
cmpsb
and
das
push
add
nop
notb
sahf
push
dec
or
push
dec
push
out
mov
cmpsb
scas
mov
dec
movb
push
cmp
xlat
dec
call
and
rolb
sub
mov
xchg
fnstenv
movsl
outsl
sbb
dec
sbb
sti
idivl
fucomp
shl
cmpsl
mov
sahf
std
dec
inc
int
cmp
push
addb
add
shlb
das
sti
fs
out
push
adc
jle
jne
jo
jns
out
sti
jbe
aad
cltd
fcmove
mov
and
leave
and
push
mov
arpl
sub
cmp
mov
fimull
push
dec
jg
je
mov
gs
jp
cmpsb
jo
mov
cmp
mov
inc
sub
sub
out
loop
add
and
jb
jecxz
cmp
adc
call
scas
inc
call
icebp
sahf
out
push
fildll
scas
and
aad
jle
into
mov
push
xor
xchg
repnz
leave
ja
xchg
push
pop
push
iret
cmc
or
stos
je
add
js
enter
xchg
push
mov
test
movsl
lods
add
shlb
mov
and
xor
dec
fnstcw
call
clc
imul
dec
dec
idivb
cmp
push
jl
aad
sub
leave
mov
sbbl
aad
xlat
dec
cmp
mov
xchg
inc
push
movl
add
xor
mov
mov
mov
or
fisttps
loop
orb
ljmp
sub
mov
insb
aad
and
cmc
imul
lret
push
out
popa
cwtl
fdivrl
notb
push
outsl
movsb
in
popf
mov
jb
cmc
int
ds
sub
xlat
sub
pop
outsl
pop
or
fcmovu
lods
cmp
mov
lahf
rol
jbe
mov
sub
jo
and
ja
xor
jge
jecxz
or
cmp
mov
cmp
cmc
push
outsl
dec
pop
cmp
jb
adc
pop
idivl
notl
pop
xchg
test
xor
mov
js
jl
cmc
and
movsl
add
mov
push
test
popf
jmp
or
inc
lret
jnp
cs
push
nop
xchg
aad
dec
add
lret
cmp
add
dec
mov
outsl
pusha
ss
add
xchg
mov
popl
cmc
sbb
xor
xor
and
dec
je
push
and
loope
adc
xchg
push
adc
push
out
mov
and
rclb
mov
adc
pop
cmpsb
sbb
mov
dec
in
xor
mov
lret
addr16
popa
jnp
in
jns
repz
xchg
sti
add
sahf
or
jg
mov
and
aam
push
scas
shll
jle
inc
insl
xor
dec
rol
push
adc
pop
mov
out
push
jecxz
xlat
mov
add
clc
push
or
sbb
movsb
dec
stos
test
push
jg
xor
cmp
insl
xlat
das
dec
fldenv
adc
setbe
jae
jge
gs
jmp
std
inc
dec
data16
adc
flds
cmp
add
cmc
sub
add
fcomi
imul
wrmsr
aad
sub
lcall
imul
ljmp
aaa
into
xchg
mov
mov
mull
push
cmc
cld
or
in
leave
xchg
xchg
leave
ja
idivl
test
testb
inc
into
cmp
jbe
outsl
fldcw
sub
mov
mov
sbb
xchg
addr16
nop
aam
jns
nop
and
and
out
xchg
repnz
jp
jmp
xchg
pop
dec
ljmp
fstpl
popa
aam
jle
xor
adc
loop
push
jmp
arpl
or
mov
aas
and
pop
int
jb
inc
jbe
or
es
lcall
sar
popa
lods
mov
adc
jns
jbe
adc
mov
in
xchg
mov
pop
cmpl
in
dec
adc
mov
imul
mull
add
mov
hlt
pusha
xchg
shlb
mov
rep
or
lret
inc
jmp
fwait
dec
aad
sub
cmc
sbb
in
sub
mov
adc
cwtl
jmp
addr16
ss
add
sub
inc
pop
xchg
mov
mov
idiv
push
aad
jl
aam
sub
cmpl
jle
mov
xchg
fs
shrd
popf
xlat
cmc
fcoms
dec
mull
pop
arpl
daa
dec
fsub
clc
adc
aad
xchg
jp
call
lret
in
pop
add
icebp
aad
pusha
imul
enter
push
daa
out
or
mov
inc
and
push
les
decl
dec
jmp
arpl
push
sbb
nop
outsl
cwtl
inc
std
push
cmc
add
adc
stos
ficomps
into
adc
cmp
test
scas
dec
push
cmp
mov
mov
nop
outsb
js
lods
push
xor
fstpt
mov
dec
xchg
aad
lcall
aam
mov
mov
outsl
jge
cs
pop
xor
movsb
stos
push
cmp
insb
mov
pop
popf
mov
cwtl
or
les
jp
jnp
aad
popf
jmp
or
je
fstpt
cmc
add
sbb
xchg
inc
fstpl
clc
orb
pop
clc
clc
rep
sbb
sahf
int3
rcr
in
jb
xchg
sbb
fstpl
pop
sub
daa
mov
sub
subb
imulb
fstl
dec
leave
push
mov
in
sbb
fidivrs
sbb
jl
cmp
or
jl
cs
pop
pop
add
arpl
popa
jns
and
stc
mov
pop
and
outsl
xchg
mov
adc
stc
mov
xor
xchg
or
cmp
xor
sbb
cld
cmc
and
in
sub
or
inc
test
mov
les
nop
in
cmpsl
in
jae
mov
outsl
push
outsb
push
mov
cmp
push
dec
mull
ljmp
sub
mov
mov
jo
inc
aad
mov
push
cld
xor
imul
lahf
pop
push
adc
lea
mov
xchg
adc
cmp
push
jge
lahf
inc
mov
leave
xor
push
add
push
ret
repz
jmp
inc
sub
fwait
scas
cmpsb
dec
jmp
sub
inc
or
cwtl
sbbl
cmp
mov
push
jo
xor
inc
loope
js
mov
mov
inc
xlat
leave
jecxz
inc
mov
mov
rorb
inc
and
jo
das
mov
adc
inc
enter
jge
xchg
jl
inc
aad
fbld
xchg
mov
adc
rorb
mov
test
mov
dec
xchg
in
js
mov
and
mov
test
movsb
cltd
mov
test
aad
mov
pop
mov
cli
and
adc
das
lods
and
dec
pushl
pusha
aad
lcall
mov
cmp
int
mov
outsl
clc
lret
mov
lcall
sub
xchg
int
pop
out
adc
outsb
cmp
mov
aad
dec
imul
out
jmp
lods
and
stos
xchg
sbb
pusha
and
hlt
mov
mov
loopne
gs
jp
and
xlat
mov
nop
jmp
xchg
iret
cmc
dec
insl
sub
movsl
adc
dec
adc
jl
popa
or
arpl
lcall
xor
jmp
mov
xor
stc
out
into
xchg
pushf
jl
nop
jns
aad
iret
mov
mov
in
aas
les
dec
or
jecxz
sub
leave
iret
add
dec
jmp
jmp
loope
inc
fucomip
mov
repnz
jle
int
sti
push
rsm
push
mov
les
dec
push
cli
mov
sbb
js
mov
or
test
add
test
into
cltd
out
dec
shrd
push
cmp
and
jmp
inc
pop
stc
aad
pop
jmp
and
sbb
mov
sbb
into
je
mov
or
inc
fwait
or
push
push
mov
addr16
and
clc
imul
fucomip
daa
jmp
test
xchg
in
xor
jle
xchg
xchg
inc
sbbl
sbb
lret
ds
in
mull
test
sbb
cwtl
push
xchg
push
inc
and
or
hlt
xchg
mov
ret
ficomps
jmp
cmp
and
mov
test
pop
repnz
push
cs
add
scas
lahf
jmp
cltd
cmpsl
in
cmpsb
mov
stos
push
imul
pop
and
cmp
into
or
cmc
int
mov
lods
sti
dec
or
aam
inc
fdivs
out
cli
enter
push
mov
in
aaa
ds
xchg
inc
sti
mov
cmp
call
push
sub
sub
je
out
inc
popl
mov
xchg
jge
imull
dec
in
mov
jmp
mov
out
fstpt
cs
sbbb
jo
jl
adc
and
or
jg
jns
je
pop
fscale
push
cmpsl
int
inc
xchg
lahf
cmp
test
xor
and
jmp
push
arpl
nop
iret
xchg
loop
add
push
fldcw
xchg
bound
adc
fisttpl
cmp
gs
lods
pushf
jle
mov
cli
int3
cmp
stc
or
inc
jo
add
push
aad
jg
cld
dec
bound
adc
add
rcrl
sti
adc
dec
je
faddl
add
mov
call
out
lahf
cwtl
out
mull
mov
pusha
pop
lret
inc
pop
testb
or
fbstp
out
sub
sub
xor
xchg
add
das
lcall
push
mov
xchg
xor
cmp
mov
outsb
mov
mov
jge
or
jmp
pop
pop
dec
sbb
das
jmp
jne
lea
into
lahf
mov
shll
pop
daa
outsl
popa
sbb
or
movsl
adc
jl
out
mov
arpl
shr
hlt
add
inc
gs
imul
sub
inc
incb
je
or
movsl
gs
jmp
adc
test
in
cmp
and
pop
mov
mov
xchg
push
fisubrl
js
pusha
cmp
push
gs
cwtl
pop
xor
aad
test
cmpsb
aam
pop
cld
clc
cltd
mov
xchg
mov
xchg
xchg
cli
xor
ja
in
lcall
pop
dec
push
loope
stc
jle
cmp
fsubrp
mov
andl
repz
gs
pop
std
shrl
iret
ja
and
in
xor
dec
adc
movsb
dec
test
dec
addl
nop
mov
cmpsb
or
mov
pop
repz
mov
imul
int
iret
jmp
cld
cmp
int
dec
mov
aad
fldenv
ret
std
dec
cmp
xchg
jmp
or
cmp
sub
lods
mov
sub
add
sub
dec
sbb
cwtl
imul
js
iret
shll
fwait
lds
dec
adcl
adc
cmp
jns
into
cmc
ja
mov
bound
pusha
fnstsw
xchg
les
int
and
pop
out
div
fsubr
jmp
mov
iret
mov
mov
xor
mov
dec
lock
maskmovq
testl
inc
idivb
in
es
movsb
add
aad
stos
js
cmp
sub
and
js
scas
mov
xchg
fdivrl
imul
push
mov
sbb
inc
loopne
jl
pusha
cmp
or
std
jmp
dec
iret
fildll
loope
outsb
jne
adc
lods
pop
xor
push
fisubs
out
xorb
cmp
pop
dec
jmp
push
mov
loope
push
pusha
dec
push
fwait
ds
ljmp
dec
or
xchg
jnp
mov
xchg
ret
adc
xor
movsb
cmc
fsubrl
mov
call
inc
sub
add
xor
sub
les
dec
movsl
andl
lret
xor
repz
xchg
popa
jge
jge
jnp
repnz
loope
pop
sub
flds
sub
out
push
ret
or
aad
sbb
in
int
sbb
shlb
ficompl
mov
daa
loopne
aad
out
cmc
mov
add
aam
sbb
add
js
pusha
pushf
xchg
jle
call
jg
jns
and
and
stc
cmp
std
sub
pop
add
push
mov
clc
xchg
imul
testl
icebp
inc
push
into
xchg
sbb
fucomip
pop
test
inc
mov
orl
mov
and
add
iret
pop
and
or
iret
scas
sub
gs
pusha
orb
xor
arpl
pop
sar
jecxz
xorl
cmp
subl
mov
or
jp
aam
sub
jae
imul
adc
sahf
inc
icebp
into
fs
test
div
fisttps
sub
xlat
push
cmp
add
aad
cmp
adc
stc
xor
insb
popf
mov
ljmp
mov
ljmp
xor
adc
je
push
pop
mov
pop
add
and
ja
scas
fsts
lds
popa
cmc
pop
pop
cmp
inc
and
jns
dec
push
xchg
mov
or
out
jae
andb
push
jnp
lock
repz
jo
test
ja
sbb
fisttps
test
add
fcmovnu
xor
mov
inc
dec
dec
mov
mov
gs
lea
dec
imul
xchg
outsb
mov
out
iret
dec
lret
fs
push
cmp
push
gs
lods
in
shlb
mov
push
or
sbb
aad
and
adc
add
push
data16
mov
mov
add
lret
cs
adc
adc
jge
add
rcr
std
icebp
rol
mov
push
add
jnp
repnz
popf
or
or
sub
jl
rolb
mov
push
cmc
rorl
out
ret
pusha
mov
mov
aad
push
sar
inc
dec
jnp
into
pop
loope
fnstsw
sahf
xchg
adc
push
sbb
dec
dec
add
popa
in
int
call
xchg
rcrl
call
add
repnz
lret
inc
jge
lcall
aam
fs
jg
inc
jg
out
add
mov
arpl
cld
push
negl
insb
arpl
mov
pop
outsb
stc
mov
dec
sbb
cmp
xchg
int
push
std
pop
lock
mov
insb
add
push
mov
fdivrl
sahf
outsl
lods
xor
pushf
xchg
pop
push
out
cmp
cmpsb
or
pop
xchg
mov
lahf
movb
dec
mov
add
mov
das
add
fs
add
jb
cli
mov
je
add
jbe
pop
sbb
add
jmp
popf
xchg
mov
fs
lods
or
lcall
jne
inc
lods
clc
xor
imul
mov
jo
cmp
and
stc
outsl
xchg
pop
mov
or
lds
push
cs
dec
xchg
bound
rcl
test
cmp
insl
sub
xchg
dec
call
cmp
lods
dec
test
mov
pusha
xor
cmp
sub
scas
push
push
in
pop
cmpl
dec
or
aaa
cmp
dec
mov
jno
xor
xchg
inc
sub
lods
xor
mov
fiadds
mov
jmp
loope
leave
arpl
mov
out
mov
test
scas
push
jbe
orl
loop
inc
filds
adcl
cmp
les
in
cmp
cmp
cld
dec
int
push
push
call
ljmp
addr16
cmpsb
push
xchg
pop
mov
jo
mov
pop
pop
sub
sub
sbb
jecxz
sub
rcrl
and
jmp
inc
movsb
jae
mov
call
adc
addr16
nop
cld
ja
or
sti
imul
sub
jae
inc
mov
push
pop
cmpsl
fbstp
data16
fsubrl
cmc
dec
je
xchg
je
test
mov
lahf
jmp
push
jns
xchg
cmpb
popa
out
imul
sahf
notb
and
imul
das
les
add
cmpsb
repnz
out
int
out
cmp
xchg
jo
imul
stos
lods
les
out
lea
repnz
cmp
cmp
mov
lock
mov
xchg
cmc
out
cli
je
or
xchg
cmp
popa
ret
repnz
inc
les
test
push
and
and
mov
push
clc
hlt
inc
sbb
pusha
cli
jns
mov
aad
mov
jo
ret
adc
sahf
enter
in
jge
pop
add
mov
pop
cmp
xchg
ja
and
lods
xchg
out
scas
cmp
or
mov
dec
mov
pop
loope
popf
fmuls
pop
push
jbe
mov
dec
dec
xchg
and
lods
inc
mov
pop
dec
inc
loopne
pop
dec
js
mov
mov
insb
dec
xor
add
icebp
cmp
mov
iret
fnstsw
ljmp
iret
adc
arpl
popf
mov
pop
cwtl
cld
xor
push
sub
and
call
ja
inc
enter
pop
clc
push
sbb
decb
mov
sahf
bnd
int
gs
cs
mov
scas
ljmp
or
dec
es
insl
sarl
adc
loopne
xchg
lods
int3
pop
dec
js
cwtl
stc
unpcklps
mov
xchg
negl
xchg
mov
shrb
lahf
xor
cwtl
mov
pmullw
neg
sbb
adc
outsl
and
popa
adc
xor
sarb
pop
shl
cmp
repnz
jmp
cmp
dec
mov
sub
sub
mov
pop
bnd
mov
and
xchg
mov
cld
into
cmc
dec
sbb
sbb
ror
fistl
xor
fimuls
or
pusha
or
jb
xchg
inc
cmp
jmp
imul
jl
mov
neg
xlat
xor
pop
sbb
rcr
outsb
aad
push
add
sbb
jg
and
cmp
rol
popa
wbinvd
movsl
add
fcmovnb
sub
or
cld
sub
fwait
in
fmuls
movsb
into
inc
imul
cltd
push
cld
out
mov
cmc
xor
add
xor
push
xchg
ret
in
loopne
dec
dec
pop
rcl
cli
or
mov
jno
mov
jo
adc
inc
loopne
mov
push
cmp
inc
gs
jo
imul
leave
out
dec
test
jo
lea
sub
std
cmpsb
decb
push
and
push
cmpsl
fwait
push
cmc
popa
jg
mov
push
sbb
loope
cmp
dec
cmpsb
loopne
pop
xchg
mov
mov
xchg
adc
sub
ret
pop
jle
imul
pop
and
loope
rcrb
mov
fincstp
sub
adc
in
lret
cmp
pop
xchg
xchg
fidivl
icebp
adc
loopne
and
xor
jns
ss
shll
add
std
loopne
bswap
test
push
sub
jo
pop
lcall
inc
jne
mov
aad
add
sbb
or
push
int
jge
cmc
cli
mov
add
fnstenv
mov
repz
or
push
subb
sub
push
adc
pop
mov
into
popa
xchg
add
push
cmp
int
out
int
fcmovb
mull
call
cmp
lds
daa
sub
xlat
shll
xor
es
stos
repz
popf
push
jno
test
adc
mov
int
jg
jle
outsl
pop
sahf
mov
call
adcb
xchg
and
sub
addb
mov
xchg
arpl
push
int3
dec
shrb
cs
jne
sarb
movsb
sub
fimuls
xchg
sbb
jg
mov
mov
mov
test
aas
mull
movsb
gs
adc
jl
push
or
mov
add
jns
pop
dec
cmp
insl
or
jecxz
xchg
cmp
and
mov
jae
lds
cmpsb
mov
and
mov
and
and
inc
xor
cs
add
jmp
dec
push
inc
mov
adc
out
jmp
das
jle
pop
psraw
mov
jae
test
mov
clc
cmp
sti
stos
or
mov
xchg
das
lods
or
jns
sub
dec
add
jmp
xor
lahf
fidivrs
fbstp
mov
pop
aas
shr
les
shlb
jmp
add
lods
push
push
call
mov
cmp
imul
xchg
in
jmp
movsl
dec
jno
sub
jmp
aad
cmc
push
jle
dec
rol
faddp
cmp
xchg
mov
lods
mov
ja
or
cmp
lock
inc
sub
inc
into
mov
loopne
inc
jns
adc
push
outsb
xor
push
or
orb
dec
push
mov
lods
sbb
mov
pop
fsubp
test
rep
cmp
xor
cmp
add
andl
push
jno
add
mov
cli
mov
jge
mov
fs
cmp
pop
mov
scas
divb
mov
add
push
and
or
add
int3
cmp
movsb
adc
movsb
and
les
cmp
sbb
mov
imull
xor
adc
hlt
das
inc
jae
sbb
or
fs
aas
int
push
push
fnstsw
push
adc
jnp
mov
xchg
decb
incb
sub
mov
sub
add
xchg
subl
dec
xchg
dec
sub
popa
insb
test
or
outsl
imul
insb
jb
stos
cld
loop
cmp
xchg
mov
or
popa
mov
xchg
mov
push
sbb
jns
cmpsl
pop
inc
pushf
jl
cmp
int
cmp
cs
mov
stos
and
push
cld
js
cmp
mov
push
jle
imul
xchg
inc
dec
into
test
or
pop
cmpsl
lret
sbb
inc
mov
out
lods
and
mov
imul
dec
mov
mov
push
pushf
sbb
popf
xchg
xchg
pop
pushw
out
adc
xchg
mov
mov
lods
aad
lds
mov
cmc
jae
ljmp
jp
out
inc
imul
or
in
xchg
sub
push
add
shlb
prefetchnta
out
arpl
pop
mov
clc
arpl
lcall
int3
dec
push
lods
push
inc
xchg
push
popa
push
sbb
and
dec
sbb
xchg
or
adc
loope
shrl
and
nop
xchg
inc
xchg
ds
adc
add
mov
and
arpl
les
jne
mov
and
std
lock
je
jg
or
out
sbb
cmc
push
dec
push
movsl
adc
pop
fwait
push
test
jo
push
and
and
mov
cltd
and
push
or
frstor
test
or
fimull
cwtl
lea
push
jg
mov
cmp
iret
cmc
lds
shl
pop
add
les
std
popf
adc
js
xchg
ja
scas
repz
xchg
repnz
adc
movsl
lahf
lahf
out
push
fimull
and
inc
popa
cmp
shr
aam
and
inc
aaa
jge
pushf
scas
and
test
add
cli
push
and
mov
mov
shl
adc
adcl
xchg
aam
mov
adc
fdivrs
ja
sbb
or
cmp
fcompl
jp
jae
push
lods
or
in
cmp
paddsb
lea
dec
popf
mov
push
pop
mov
clc
xchg
jns
in
mov
mov
push
mov
in
mov
xchg
cmpsb
outsl
pmaxub
rclb
push
loope
xchg
mov
inc
in
pusha
inc
in
mov
out
repnz
aaa
ja
das
push
jl
in
out
adc
aad
and
mov
repnz
dec
mov
cs
sub
adc
subl
mov
gs
inc
mov
scas
sbb
push
arpl
mov
mov
jge
aad
add
fimuls
jmp
pop
push
or
inc
jns
adc
or
loope
pop
cmp
and
shlb
psllw
mov
or
jecxz
mov
lcall
gs
fistl
out
or
sarl
lock
adc
mov
lods
jno
cld
push
mov
inc
pop
sub
mov
and
popa
push
sub
nop
aad
mov
mov
repnz
clc
clc
mov
sub
cmp
inc
mov
jp
cmp
popf
ror
imul
xor
lds
sub
int
pop
jg
mov
mov
ds
nop
call
cmc
xchg
xlat
mov
call
jns
push
in
and
mov
mov
mov
mov
cli
mov
mov
mov
dec
out
call
mov
out
inc
flds
adc
pop
cmp
cltd
cmp
cmp
out
outsl
pop
scas
dec
mov
mov
xchg
push
jmp
jns
cmp
cmp
fimuls
mov
fmul
add
xchg
jg
mov
inc
mov
lcall
stos
imul
add
adc
adc
pusha
ljmp
lock
subl
sub
pop
nop
cmp
cmp
stc
push
push
mov
ret
cltd
iret
push
push
xchg
into
mov
lock
ret
in
mov
mov
inc
repnz
push
mov
mov
loope
rcll
dec
inc
scas
xchg
inc
arpl
fcoms
aaa
sub
xchg
xchg
in
adc
mov
int3
sbb
sub
xchg
insb
cmp
cmpsl
dec
test
push
or
cwtl
xchg
fiadds
lahf
xchg
test
xchg
xor
xchg
mov
xchg
push
add
scas
ja
sbb
arpl
arpl
and
pop
aad
sub
ficomps
push
cwtl
subb
loope
inc
into
xchg
sub
lret
stc
mov
mov
rcll
mov
adc
inc
add
ficoms
jge
loopne
sbb
mov
popf
leave
fs
js
adc
jmp
cmpsb
jg
icebp
sahf
scas
jae
or
pushf
cli
mov
testb
popf
mov
push
cld
outsl
xchg
adc
sarb
pop
cmp
shrb
shlb
jmp
xchg
add
cmp
mov
cmp
mov
movsb
icebp
cmp
pop
cmpsl
mov
push
mov
icebp
inc
and
jle
nop
loope
xchg
pusha
jae
mov
test
inc
xlat
es
cmp
push
lock
jns
inc
repnz
loope
fbstp
scas
jne
jmp
jo
imull
sbb
scas
jb
mov
or
out
shl
mov
rolb
dec
popa
js
push
addr16
mov
rcll
cld
movsl
imul
lcall
adc
sub
loope
cs
shrb
and
adc
cmc
dec
push
leave
inc
adc
or
xchg
aam
pop
lock
inc
xorl
stos
add
aas
iret
gs
stos
sub
test
inc
xorps
std
psubsb
push
jg
loopne
ficomps
cltd
jno
push
sub
lret
jmp
xor
fs
push
call
jno
ret
loope
mov
push
adc
out
pop
xlat
outsb
xor
clc
daa
not
pop
lods
test
fsts
mov
pop
inc
xchg
jo
fs
insl
ljmp
fsub
scas
pop
aad
clc
xchg
pushf
into
bound
pushf
cmp
into
pop
in
adc
mov
sarb
adc
xchg
dec
dec
testl
fistl
or
iret
inc
xchg
jl
dec
into
or
and
adc
roll
xchg
mov
neg
add
jg
mov
adc
int
xlat
pop
push
sbb
test
fstpl
popf
aam
pop
sti
mov
push
in
fdivrl
and
out
jg
mov
clc
xchg
aad
aad
inc
xchg
lcall
jae
ja
pop
mov
scas
sti
js
cmp
in
insb
jo
inc
push
sbb
cmc
int3
js
cmpsl
loopne
mov
pusha
or
int3
mov
mov
orl
shld
into
push
jbe
stc
cmp
adc
jge
in
jl
cwtl
fs
sbb
inc
dec
shl
imul
leave
fwait
jl
mov
mov
shll
mov
cld
add
shl
lods
ds
in
sbb
out
mov
popa
pmaxsw
mov
add
adc
jmp
xchg
js
mov
xchg
xchg
aad
mov
inc
aad
insb
inc
sub
test
sbb
fadds
repnz
ret
cmpsl
aam
cmp
adc
loopne
cmp
sub
iret
mov
into
inc
into
inc
fstps
imul
add
mov
pop
test
shlb
hlt
inc
das
mov
lods
sahf
sahf
inc
and
test
iret
lcall
into
push
sub
int3
sub
or
rcrb
cmp
xlat
hlt
rolb
or
and
push
in
in
gs
aad
in
jns
add
sub
sarb
xchg
cmp
xor
fstpt
fisubl
sub
ljmp
sbb
bound
add
push
cmpsl
jmp
loope
push
icebp
or
mov
xchg
leave
ss
sahf
jbe
add
jecxz
lret
in
mov
out
lods
dec
xchg
aad
cltd
cmpsl
jge
adc
scas
pusha
cmc
scas
mov
test
sub
lods
hlt
inc
push
xlat
add
mov
popf
out
in
or
out
mov
mov
mov
movsb
ljmp
in
lret
scas
or
jmp
stos
cwtl
mov
push
cmpsl
dec
out
loope
or
pop
dec
sub
inc
out
aas
stc
dec
in
mov
or
pusha
mov
push
bound
es
daa
jns
popa
mov
imul
jns
dec
xchg
mov
lods
mov
cwtl
shlb
dec
das
mov
cmp
mov
mov
outsb
jb
or
call
or
mov
dec
dec
arpl
mov
bswap
xor
stos
and
sbb
aas
pop
push
mov
movsl
push
or
add
in
xchg
out
mov
cmp
dec
test
leave
push
add
mov
jle
jmp
loopne
and
mov
mov
adc
jo
mov
push
push
loop
add
adcl
movl
rolb
outsb
fsubs
mov
test
jge
cmp
outsb
jae
popa
push
call
pushf
cmp
arpl
mov
mov
popf
mov
sub
pop
jl
in
cmc
xor
dec
cltd
xchg
arpl
shr
dec
sti
inc
arpl
jmp
scas
or
sbb
sti
in
clc
add
jge
pop
scas
cmp
pop
fldenv
clc
add
test
inc
add
fldt
int
data16
mov
dec
cmc
mov
pusha
jnp
arpl
push
out
add
dec
jecxz
imul
pop
call
adcl
mov
into
sbb
mov
cs
ffreep
movsl
xor
hlt
sub
and
xchg
cmpb
gs
lret
fwait
dec
sbb
pop
mov
inc
test
mov
xlat
lods
outsb
or
mov
jle
addr16
in
sub
pop
je
js
test
repz
pop
jl
cmpsb
push
lret
dec
mov
call
jmp
xor
insb
lds
cli
mov
notl
lret
mov
sbb
leave
lcall
imul
cmpsl
cmp
imul
mov
push
mov
push
adc
xchg
popa
push
lods
lods
imul
adc
out
movsb
mov
push
daa
mov
cmpsl
adc
xchg
xor
cmp
push
mov
out
arpl
mov
mov
and
inc
notb
adc
add
xor
mov
aas
fcmovnb
inc
jne
sbb
fcomi
andl
jl
fsubrs
xchg
call
sarb
push
adc
and
xchg
adc
inc
imul
ret
pop
mov
in
and
push
popa
test
aad
shlb
out
or
test
dec
jecxz
ljmp
subl
mov
test
mov
ja
pop
xchg
dec
xor
adc
mov
es
mov
inc
repz
shrb
nop
fimull
sbb
int
popf
push
jl
daa
cli
sub
xchg
adc
sar
xchg
fsubr
jge
mov
xor
cmp
mov
cmp
imulb
sahf
or
into
dec
dec
jmp
fdivrs
scas
out
sbb
aad
mov
push
int
or
adc
xchg
adc
sarl
movsl
pop
jne
outsb
stc
cli
jl
loop
xchg
cmp
shrb
in
fidivrl
loop
rorb
mov
pop
mov
inc
and
mov
cmp
lahf
inc
jbe
pop
and
out
push
jle
repnz
cld
iret
jne
idivl
arpl
mov
aad
int
rorb
iret
in
sub
xor
data16
cmc
enter
divl
pop
in
push
ror
jne
scas
leave
jne
sbb
fists
and
enter
repnz
cmp
xor
popa
fstpl
sub
leave
dec
sub
mov
pusha
rcrb
sahf
add
gs
mov
enter
test
sahf
mov
jecxz
loope
push
dec
aas
jmp
add
cld
sub
mov
xor
pop
dec
repz
packuswb
andb
movsl
sti
adc
mov
push
adc
xchg
jno
push
add
cmc
shl
cmp
or
shlb
jb
cmc
fadds
sbb
mov
ja
insl
add
mov
mov
push
xchg
pop
sub
sub
sbb
lret
fisubrl
test
sbb
rolb
cmc
dec
adc
aad
mov
jmp
insl
dec
insl
addb
xabort
ss
add
pop
int
xor
cmp
sbb
xchg
adc
orl
sub
div
data16
outsl
imul
cs
popf
cmp
cmp
mov
jbe
pop
inc
decb
pop
cli
idivb
rcr
dec
jge
out
cmc
iret
in
or
stc
nop
add
lds
mov
gs
fld
rolb
rclb
enter
push
rorb
nop
test
fmull
cmp
jmp
orb
mov
mov
mov
pop
sbb
fbstp
mov
sub
popa
xchg
int
xchg
sub
and
roll
iret
inc
push
addr16
or
push
ljmp
loop
mov
push
loopne
push
sbb
fnsave
cmp
arpl
inc
add
pandn
mov
push
jns
jmp
xor
mov
js
xlat
fs
sbb
add
popa
inc
cwtl
jp
in
fwait
bswap
cmp
std
aam
jmp
add
gs
mov
lret
adc
dec
push
inc
xchg
pop
sbb
mov
mov
add
mov
inc
mov
je
fxch
jge
jle
mov
rcrl
xchg
cmp
nop
and
push
lods
movsl
testb
and
push
mov
es
pop
decl
jnp
loope
mov
in
jne
stc
adc
mov
data16
lret
pop
push
fdivrl
shrb
out
jle
mov
inc
popf
xor
or
cmc
xchg
data16
call
dec
into
lea
in
ficoml
sbb
outsl
xchg
enter
iret
add
xchg
jge
mov
rorb
rclb
stos
or
scas
or
sub
fucom
pop
cs
stos
fnsave
cmpl
mov
adc
mov
inc
imul
xchg
push
adc
or
sbb
aas
xor
fmulp
cmp
inc
push
fsubr
or
add
sbb
lods
scas
xor
aad
xchg
sbb
les
dec
xchg
adc
lds
jns
jmp
or
hlt
js
adc
jne
clc
mov
cmc
inc
xchg
cmc
dec
add
push
mov
mov
stos
pop
ret
cmp
ljmp
xlat
movsl
stos
mov
cmp
xchg
fsubrl
and
les
outsb
and
jp
xor
les
lret
mov
gs
iret
or
out
cmp
test
dec
insb
scas
cmp
test
cmp
push
and
inc
sbb
loope
ja
push
das
mov
cltd
addr16
movl
sub
lods
sbb
and
push
shl
cs
ss
fwait
shl
mov
stos
sti
inc
lcall
pop
sbb
inc
jge
testb
push
add
das
jmp
push
jb
adc
inc
xchg
adc
loope
fcomps
cmc
xlat
mov
mov
js
and
dec
push
aam
js
movsb
fwait
mov
std
mov
daa
pop
mov
sub
aam
lea
loope
pop
popf
shll
es
cwtl
xchg
aas
aad
sbb
lock
xchg
dec
lods
xchg
insl
mov
inc
call
pop
push
xlat
cmp
fwait
push
mov
or
jl
scas
testl
xor
jmp
imulb
leave
ljmp
mov
enter
cmp
mov
dec
and
inc
idivb
jnp
inc
std
cmp
dec
icebp
imul
hlt
add
jp
shrl
xchg
cmp
faddp
lret
inc
mov
in
cmpsb
arpl
jl
jecxz
mov
jp
inc
lods
mov
adc
into
adc
mov
mov
cwtl
or
les
or
icebp
dec
cmc
cmp
jo
test
pop
push
aad
mov
xor
rcrb
pusha
or
pop
pop
xchg
ret
cli
push
cltd
in
outsl
pop
pop
loope
dec
nop
jle
std
repnz
lcall
cmp
ret
fstl
xchg
dec
adc
inc
dec
imul
test
repnz
mull
dec
int3
add
or
das
pop
pop
jns
dec
and
adc
mov
out
clc
xchg
xor
loope
pop
cmp
xchg
ja
mov
inc
xor
out
pop
pusha
xchg
outsb
adc
adcl
xor
dec
aad
xlat
loope
in
bound
bound
or
rorb
adc
mov
insl
insl
pushl
dec
les
addr16
cmp
xchg
push
sub
jecxz
xor
pcmpeqw
shr
cmc
and
mov
mov
and
adcl
and
dec
dec
or
and
lret
or
pop
into
sarb
fwait
inc
pop
maskmovq
imull
cmc
movl
sti
das
lret
imul
into
push
dec
test
jb
lods
lret
aad
out
sbb
out
inc
or
stc
mov
movsb
mov
dec
pop
leave
xchg
dec
adc
sbb
shll
outsb
dec
sbb
mov
mov
cmp
adc
out
xor
push
aad
leave
icebp
push
add
dec
mov
mov
adc
adc
shrl
pop
imul
sbb
paddusw
arpl
and
mov
jb
cmp
pop
lods
or
ret
adcl
mov
stos
int3
and
xor
push
mov
push
cltd
inc
pop
cld
push
std
rorl
jg
and
or
or
icebp
ret
mov
testb
sub
sub
dec
mov
fildll
lods
stc
pop
fwait
dec
gs
nop
popf
sbb
and
pushf
add
or
cmc
and
mov
add
stos
and
repnz
xchg
xor
inc
push
sub
sub
xchg
dec
pop
and
movsb
ljmp
les
std
xor
dec
popa
ret
jg
fstp
or
fyl2xp1
rcl
aas
inc
out
cmp
sub
in
adc
nop
adc
adc
mov
int3
xchg
adc
push
pusha
cmp
xchg
or
fdivp
cld
stos
pop
xor
call
push
cmpl
inc
lods
shll
shr
or
sti
aad
je
hlt
sub
or
incl
mov
int
ret
mov
int
aad
call
faddl
mov
push
out
cmp
jo
je
loope
xor
mov
mov
mov
mov
into
jmp
mov
xchg
and
outsl
push
pusha
mov
sub
jbe
push
imull
insl
adc
push
dec
xchg
adc
adc
push
pushf
xor
inc
or
xchg
lods
ret
das
cmp
ret
ljmp
loope
das
loope
lds
cmp
ja
imul
stos
inc
shr
addr16
jmp
inc
jge
jp
push
cmp
adc
int3
jp
pop
mov
inc
pop
pop
mov
inc
test
jae
mov
add
mov
mov
in
out
jnp
ja
push
arpl
inc
and
push
cmp
movswl
nop
sti
into
loope
jge
scas
mov
or
fst
stc
js
les
mov
nop
imul
arpl
addl
lret
push
std
adc
xchg
cmp
push
push
or
mov
lret
xor
out
rcrl
pop
add
mov
rcl
xchg
pop
mov
sti
dec
lock
and
mov
popf
out
inc
and
cmpsb
mov
lods
pop
dec
call
test
rolb
jo
xor
addr16
and
in
cmpsl
insl
test
pop
push
sbb
fwait
cmpsl
int3
xchg
addl
add
clc
cltd
dec
cmp
xor
mov
data16
das
dec
mov
sbb
scas
pop
call
xor
add
add
mov
imul
inc
aam
das
movsl
cli
fnstsw
mov
mov
xor
in
dec
in
mov
cmp
repz
inc
cmp
stos
sbb
cmpsl
das
mov
repnz
xlat
dec
cmp
cld
shl
out
push
jae
outsb
adc
push
add
dec
aam
insl
xchg
push
xchg
add
cli
idivb
xor
in
into
aad
sbb
add
imul
mov
pop
shl
cli
lahf
js
push
icebp
fdivl
and
sub
lahf
jae
jge
data16
cli
outsb
call
aad
or
xchg
cmpsb
or
mov
lret
ret
rorb
or
cs
les
shrl
fidivrs
push
jp
jo
and
push
sar
in
or
adc
rclb
jmp
aad
and
setge
and
outsl
sti
cmp
bound
xchg
pushl
movhps
lock
or
jecxz
cmp
cmp
and
je
push
gs
sti
inc
adc
lret
cli
cmp
and
cmp
jnp
mov
or
inc
push
sub
push
pop
out
mov
jl
sarb
int
jne
or
outsl
lcall
cmp
fistps
add
in
hlt
inc
loop
sub
int
inc
mov
cmp
scas
sub
push
add
mov
sbb
arpl
aad
pop
scas
and
mov
std
jns
xor
das
test
xchg
mov
and
dec
add
jle
adc
dec
cld
orl
mov
psubusw
sub
and
les
mov
jg
mov
push
dec
jmp
push
inc
ds
out
aad
dec
cmp
xchg
std
fistps
jb
int
testb
out
push
aad
pop
std
rclb
out
cmpsl
das
shrb
cs
jl
inc
xor
lods
and
xlat
cmp
enter
sahf
adc
adc
ret
pop
mov
inc
dec
rorl
xchg
dec
aam
add
and
test
jbe
sub
sbb
repz
add
push
cmp
lods
xor
test
and
xchg
lcall
in
enter
out
xchg
addr16
mov
cmp
push
int3
nop
cli
fisubrl
lds
loop
mov
lods
push
cmp
inc
mov
andnps
add
adc
leave
popf
cmp
jl
insl
or
jmp
xor
outsl
je
notl
nop
jmp
or
into
js
push
ret
movsl
insl
cli
inc
ficomps
lret
cmp
outsl
lcall
pop
fildll
jnp
xchg
mov
in
testl
dec
jno
imul
arpl
push
out
sub
jecxz
rorb
mov
mov
int
mov
fsubrp
je
cmp
jns
cld
mov
mov
rcrb
mov
ficoml
fildll
mov
mov
jmp
dec
test
shlb
mov
sub
jecxz
pop
cmp
dec
fists
jmp
popf
aad
xchg
mov
andb
cwtl
push
sub
gs
xchg
fisubrs
jg
dec
or
mov
cmc
dec
std
imul
or
adc
cs
stos
sub
inc
adcl
call
dec
stos
pop
cmp
mov
int
lcall
jbe
cltd
add
cwtl
xchg
mov
mov
cs
and
fucomi
fimull
and
test
mov
nop
mov
adc
mov
aad
jge
adc
jns
insb
cs
fs
dec
or
cmc
int
xor
stc
lods
dec
xor
rcrl
roll
hlt
mov
add
mov
repz
sub
lods
inc
cmp
fcmovnu
mov
in
push
adc
push
fisttps
mov
cmp
lcall
pop
adc
pusha
in
cmp
testl
fldl
mov
jge
pop
pop
xchg
cmp
mov
lret
mov
or
hlt
aas
lahf
std
lahf
xchg
jecxz
stos
popa
in
popa
ljmp
jle
ret
cmpsb
xchg
dec
push
pop
imul
andb
fsubrp
mov
or
enter
lock
pop
ss
subb
iret
int3
inc
xchg
lahf
jmp
mov
mov
xchg
jae
inc
mov
or
out
xchg
add
dec
sub
fs
xchg
xor
xlat
lods
cmp
push
out
dec
test
inc
jo
dec
nop
jge
int
call
int
cmc
mov
xchg
cmc
andb
xchg
cwtl
pcmpeqw
int
mov
aam
inc
push
jmp
fstps
push
push
inc
push
cld
addr16
mov
fidivrl
pop
data16
pop
adc
subl
sub
pop
cmp
fildl
outsl
outsl
inc
stc
push
std
mov
xor
and
pop
movsb
test
inc
std
push
sub
bound
ret
pop
nop
out
push
imul
rclb
mov
pushf
call
fdivrs
jmp
and
cmp
outsl
xorb
not
loope
ret
in
jo
fdiv
call
filds
sti
cmc
int
mov
mov
jecxz
or
xchg
cmp
xor
mov
test
mov
pop
mov
fildll
in
cmp
divl
inc
mov
ds
sbb
jle
or
stos
mov
cmpsl
lods
test
enter
addl
sbb
out
out
arpl
mov
xlat
ljmp
inc
jne
outsl
fists
lcall
cld
shrb
enter
inc
daa
push
ja
xchg
lcall
jnp
jmp
shrd
mov
sub
sub
xorb
mov
xchg
inc
mov
push
xor
inc
cmp
xor
and
rcl
xor
or
xor
mov
push
jbe
xchg
and
xchg
fists
push
add
ljmp
sub
push
imull
addb
lds
arpl
sbb
clc
outsl
mov
xchg
dec
std
jbe
fwait
xor
lods
add
andb
mov
test
sub
mov
sbb
jp
jmp
imull
dec
shrl
cmp
outsl
dec
push
lret
in
sub
mov
insl
cwtl
sub
inc
sbb
push
ret
pop
xchg
adc
into
add
or
dec
xchg
push
mov
into
lcall
scas
cld
xchg
sbb
into
lods
pop
mov
cli
inc
incl
movsl
cmpsl
lock
sbb
jmp
movsb
lds
pop
lea
dec
push
dec
xor
push
out
add
or
cmc
pop
and
mov
pop
and
pop
movsb
ret
fistl
dec
mov
repnz
and
ljmp
push
addr16
sub
cmpsb
xchg
adc
std
shlb
jecxz
add
test
push
insl
or
lahf
out
sub
insb
jecxz
icebp
xor
mov
cmp
dec
imul
enter
jae
cmp
sub
shlb
jmp
into
cli
cmp
xchg
pop
push
popf
sbb
sub
popa
insl
mov
pushf
push
outsl
test
call
mov
outsl
mov
imul
movsb
adc
mov
xor
or
xchg
aaa
fcomps
adc
inc
cmp
sbb
mov
jecxz
mov
push
xchg
sbb
js
ja
scas
scas
cwtl
imul
or
push
aad
push
push
pop
mov
xchg
lds
push
sahf
or
roll
aad
out
adc
jb
jmp
xor
enter
add
aad
iret
add
fxch
jge
add
aaa
mov
popw
adc
fsubp
mov
nop
pop
mov
or
or
mov
cmp
mov
mov
xor
cmpsl
arpl
repz
jge
lcall
out
add
cmp
lds
js
pushf
repz
out
jnp
sub
jb
out
pusha
subl
fwait
pop
xor
daa
dec
xor
icebp
int3
ss
popa
push
xchg
out
xor
les
inc
outsb
jl
int3
addl
jae
out
lods
outsb
mov
stos
nop
lret
dec
loope
in
lods
jle
shl
cmp
data16
sub
cmc
les
xchg
out
jnp
jp
out
xchg
mov
fsubs
push
lods
push
bnd
notl
fildl
sti
aad
push
ret
xchg
lcall
dec
dec
pop
xor
or
ds
or
mov
loope
sbb
outsl
ljmp
in
push
jne
shrb
repz
add
mov
and
in
aad
hlt
fcomps
or
adc
pop
and
outsl
xchg
pop
cmp
iret
mov
lret
sti
repnz
into
xchg
mov
nop
add
push
and
mov
mov
les
jnp
xchg
sbb
dec
xchg
push
arpl
int3
stc
aad
testb
loopne
js
pushf
popf
sbb
mov
lsl
es
xchg
ja
neg
inc
push
mov
pop
mov
xchg
int
cli
out
popa
dec
insl
fistpl
or
add
or
rolb
leave
notl
lcall
push
mov
sbb
repnz
inc
mov
iret
push
xor
lea
ja
mov
or
pop
cmp
idivb
mov
arpl
or
in
jbe
xchg
or
repnz
add
fnstsw
or
mov
jl
and
lods
lods
in
sub
or
cmc
out
les
xor
mov
mov
les
and
fsubp
mov
mov
popa
rcr
out
cmp
adc
imul
iret
bound
cmp
cmp
or
lods
shll
inc
add
jo
subb
mov
decb
mov
add
xchg
pop
call
xchg
or
dec
jge
dec
mov
bound
in
scas
sbb
pop
inc
into
leave
sub
ljmp
in
add
mov
jne
sahf
dec
bound
cmc
iret
fdiv
stos
js
icebp
stos
adc
out
ljmp
clc
or
jecxz
cmpsb
loop
decl
leave
jo
mov
stos
fs
push
pop
ror
in
fsubr
ljmp
cmpsb
lcall
fmul
jg
mov
add
out
jne
sub
cmp
cmc
dec
arpl
jno
popf
fnstenv
pop
jae
loope
dec
test
adc
xor
mov
in
inc
adc
out
mov
jns
iret
push
stos
nop
and
cmp
mov
dec
int3
inc
xchg
mov
adc
movsb
jg
cs
push
mov
or
xor
mov
and
lahf
cmp
repz
cmp
jg
mov
aad
mov
orl
mov
fwait
inc
sbb
mov
cmc
pop
stos
xchg
sub
mov
sub
inc
fmul
andl
mov
mov
cltd
insl
jns
idiv
in
test
mov
cmp
sbb
jno
jecxz
bound
enter
mov
loopne
and
jnp
inc
fadd
jns
outsl
xchg
sbb
data16
nop
fwait
sbb
arpl
jns
mov
js
fbstp
dec
pusha
xor
adc
dec
sahf
add
shrb
bnd
lods
xchg
fdivrp
fsubrp
insb
and
add
inc
mov
hlt
cmp
cmp
dec
inc
inc
aam
add
jns
pop
insb
and
ror
cmp
xlat
gs
dec
mov
mov
cs
lods
adc
sub
mov
aad
stos
out
jmp
iret
and
ljmp
sub
int3
mov
nop
ret
cmp
mov
add
ds
push
jmp
addr16
stc
jmp
addr16
mov
arpl
les
std
out
dec
fisubrl
sbb
jns
iret
jmp
sub
cmp
mov
push
in
adc
push
sbb
mov
mov
sub
jge
int3
fldl
inc
data16
lods
sbb
pop
and
mov
jnp
push
sub
cmp
in
fwait
stos
push
mov
jecxz
jnp
sub
xchg
cmp
popf
lds
pushf
lea
jo
push
or
jne
inc
cmp
or
add
stc
in
adc
iret
jbe
cltd
daa
lcall
sbb
xor
adc
sbb
xor
or
or
in
cld
mov
jmp
or
push
sbb
and
repz
mov
push
scas
enter
sti
fisttps
jb
push
cmp
mov
inc
insl
cmp
mov
cwtl
inc
or
rorb
shl
pop
jns
xchg
jecxz
dec
test
and
andb
outsw
icebp
sarb
cli
fmul
dec
js
lahf
xchg
popa
lea
push
xchg
int
lods
dec
mov
jge
mov
test
popf
les
adc
adc
mov
pop
neg
jge
aam
pop
fnstsw
sbb
stos
mov
sub
mov
cltd
push
icebp
dec
inc
push
push
movsl
xor
fwait
sti
inc
pop
push
cmp
sub
cmp
incb
dec
sub
jmp
inc
dec
mov
aam
dec
xlat
lret
adc
sahf
pop
pop
rol
jne
outsl
arpl
flds
adc
fsts
mov
dec
and
fisttpll
addr16
shlb
lods
dec
mov
in
jmp
adc
testb
mov
jns
mov
outsl
push
stc
fucomi
aam
mov
push
xor
loop
rcrb
push
scas
adc
ffree
cmpl
icebp
call
cmp
cmp
nop
leave
pop
xchg
jecxz
xchg
cmp
rolb
cltd
sbb
loope
dec
lods
cs
lahf
sbb
int
pusha
or
cmp
push
xor
jle
andl
dec
out
cli
lret
push
xchg
sbb
lahf
adc
mov
test
inc
movsb
mov
and
mov
mov
adc
push
aad
inc
jbe
ljmp
fmuls
push
lods
popl
mov
mov
ss
shl
nop
enter
inc
inc
sbb
daa
mov
cmc
cmp
mov
mov
imulb
mull
add
add
push
shr
int3
xlat
out
dec
aaa
dec
sub
arpl
adc
js
out
arpl
mov
fdivrl
lcall
and
cltd
cmc
jae
xor
div
mov
test
lods
imul
mov
and
stos
jmp
shrl
adc
push
mov
repnz
out
lods
xchg
xchg
pop
shlb
popa
sub
mov
sub
or
cmc
mov
pop
mov
add
sbb
xchg
mov
mov
scas
lods
rclb
cmp
or
pop
loop
nop
fs
adc
cmpsl
mov
repnz
fldz
sti
jmp
leave
sbb
lock
xor
push
aam
nop
and
cmp
insb
jmp
packsswb
adc
jns
adc
dec
daa
sbb
jp
scas
lea
push
lea
xchg
add
mov
rclb
lcall
mov
lds
adc
cmc
dec
lret
shrl
loopne
icebp
loop
push
xchg
jno
jns
mov
or
loop
imul
sub
xchg
cs
fimuls
aad
xorb
jnp
mov
test
test
imul
add
into
cmc
movsl
mov
and
mov
push
dec
into
sti
movsb
push
jl
dec
adc
dec
adc
add
cmpsl
fistps
lods
jno
push
filds
cmc
push
xor
jmp
mov
test
adc
fildll
jge
dec
mov
je
push
xchg
scas
adc
mov
ret
ret
pushf
filds
push
lea
dec
mov
pop
push
xchg
popf
test
hlt
jge
cltd
sub
and
std
inc
fisubs
push
fiadds
stos
xchg
mov
in
adc
add
jecxz
fstpl
pop
jle
movsl
inc
mov
mov
mov
inc
outsl
mov
cmp
push
adc
or
into
cli
adc
out
xchg
mov
adc
lods
std
dec
push
fucompp
lods
das
aad
cmp
lods
scas
xchg
dec
not
mov
mov
movsb
les
xorb
lahf
andb
imul
in
repnz
pop
cwtl
fistpll
dec
ljmp
sahf
jno
fsubrl
inc
js
fs
addr16
cwtl
push
dec
dec
xchg
and
jecxz
xchg
sahf
cmp
push
jl
hlt
jae
notl
fs
dec
fwait
sub
test
aad
js
cmpsb
dec
add
and
nop
popf
outsb
add
jge
push
pop
scas
cmp
rcr
cmp
sti
push
cmp
lods
push
jo
cmpsl
push
jle
jl
and
cmp
and
sbb
jp
sbb
cli
pop
dec
pusha
shrl
cmp
dec
jno
js
push
popf
clc
cli
inc
test
and
in
fsubl
fidivl
jp
mov
pop
add
cli
in
xor
fbstp
xor
vmread
inc
lods
dec
push
lods
and
aad
pop
cli
mov
bound
xchg
jp
lock
sbb
sahf
jl
jno
jnp
into
lods
pusha
dec
push
test
push
ret
mov
imul
jns
dec
sti
jle
loopne
pop
insb
rcrl
jle
dec
popa
lcall
dec
aad
imul
or
sbb
sub
aad
shrb
xchg
push
not
sub
mov
adc
jns
sub
sahf
lcall
cltd
and
mov
pop
lds
call
push
sub
scas
pusha
int
and
sbb
jge
cld
stos
lock
jle
sahf
mov
cmp
arpl
jl
enter
rcll
leave
rcrl
xchg
sbb
add
cmc
adc
and
jbe
xchg
out
mov
outsb
call
jl
es
mov
in
adc
aaa
xor
rcl
je
out
cmc
stc
cs
scas
jmp
sub
mov
les
inc
jecxz
cli
rcl
mov
out
movsb
lahf
mov
shrb
mov
cli
dec
xchg
fistpll
xchg
mov
aam
scas
psubq
dec
mov
jle
xchg
lcall
int
and
add
adc
xchg
xorl
mov
lret
jecxz
call
jo
aas
push
mov
sbb
ret
imul
insb
pop
movsl
add
in
out
neg
scas
dec
arpl
inc
sarl
into
cmpsb
xchg
and
mov
dec
aad
movsb
subb
pop
push
jbe
adc
jmp
enter
inc
mov
pop
add
cmc
lods
sub
sub
cmpsl
loop
out
or
dec
cmp
dec
dec
aad
pop
imul
fs
xorps
mov
in
int
in
adc
or
xchg
sub
cwtl
je
mov
sbb
jmp
adc
xchg
icebp
xchg
nop
mov
loope
scas
xchg
jecxz
cmp
div
sbb
pusha
xchg
jmp
push
imul
ss
cs
jge
or
insl
adc
and
push
sbbl
lods
dec
call
ror
ss
xchg
add
mov
cli
cmp
fwait
inc
mov
sbb
xchg
lret
sti
dec
int
aad
mov
pop
or
mov
pop
es
out
xchg
sbbl
or
std
mov
push
dec
mov
jnp
dec
jge
and
jne
icebp
sbb
in
sbb
and
fsubp
adc
mov
inc
mov
outsl
mov
outsl
loopne
push
sbb
sub
cwtl
pop
push
mov
dec
ljmp
out
mov
sub
repnz
clc
cmpb
into
push
loope
enter
into
rcr
in
mov
sub
cltd
dec
addr16
dec
out
mov
outsb
xchg
mov
testb
idivb
push
les
xchg
out
push
sub
scas
pop
pop
cltd
adc
out
sti
mov
fs
rolb
repz
mov
cwtl
dec
loopne
inc
lods
aad
mov
add
push
lahf
mov
mov
jmp
pop
mov
or
xor
fcomp
xor
mov
pop
loope
jb
rorb
cmc
fs
icebp
stos
js
frstor
xchg
outsb
mov
xor
fcos
cltd
sbb
mov
in
js
sub
dec
or
sbb
jmp
sahf
loope
sub
xchg
jg
or
test
jmp
aad
jae
jge
mov
xchg
push
js
aaa
mov
orb
mov
cmp
mov
cmpsl
dec
out
fmuls
push
xchg
rolb
jb
popa
xchg
aad
loopne
fst
mov
popa
addl
lds
mov
push
aad
mov
pushf
xor
test
cmp
fcoml
sub
adc
jns
rcll
xchg
js
sarl
inc
jecxz
jae
cmc
lds
jg
push
sub
push
inc
push
rclb
nop
loope
int
sbb
enter
sub
dec
or
pop
repnz
dec
loopne
xchg
cmp
xchg
fidivrs
int
cmp
and
mov
movsb
lahf
loop
ret
xchg
jo
xchg
call
xor
dec
cwtl
mov
push
xchg
push
popf
sti
test
out
jnp
mov
mov
mov
add
aaa
sti
sbb
sub
cmp
sahf
arpl
xchg
incl
jae
xor
loopne
push
push
pop
movd
out
cltd
dec
scas
inc
mov
xor
pmaddwd
lods
xchg
lret
out
inc
imul
xor
imul
fildll
out
shrb
mov
jge
dec
aad
vpor
xchg
test
repz
imull
test
sub
aam
pop
out
inc
lods
imul
sub
adc
movntq
dec
add
pop
adc
pop
xor
or
or
in
push
cmp
xchg
push
ret
imul
add
sbb
ljmp
faddp
cs
push
cmc
insl
popl
shll
add
lods
mov
xchg
or
rorb
dec
bswap
mov
or
test
gs
mov
idivl
push
test
mov
jne
rcrl
inc
xor
mov
sti
cs
sub
ss
sarl
cld
shr
je
cmp
psubsb
hlt
pop
and
mov
mov
popf
and
and
icebp
pusha
stos
aaa
sbb
test
xor
lahf
inc
pop
sbb
out
cmc
xor
cld
imul
and
out
push
push
pop
mov
mov
cmp
test
push
sbb
mov
mov
add
repnz
mov
icebp
add
cs
nop
mov
push
adc
push
in
cmp
jmp
dec
jmp
rolb
mov
movsl
pop
dec
js
lods
or
movsb
add
sbb
lods
mov
sbb
jne
or
jmp
adc
sbb
jbe
add
cmc
cmp
pop
or
leave
roll
jo
jmp
cmp
or
sub
aaa
cmp
xchg
lods
sub
push
cmp
aad
movb
outsb
xchg
xchg
add
lret
aad
jae
mov
popf
mov
aam
std
fs
mov
out
popa
fnsave
xor
cmp
lods
repnz
das
sahf
xchg
repz
and
inc
int
jmp
inc
push
rorl
popa
test
lea
mov
or
mov
push
xchg
adc
in
imul
lcall
ljmp
inc
call
mov
mov
xchg
leave
jge
shll
arpl
js
aas
fisubrl
xor
sbb
pusha
inc
mov
mov
push
xor
push
imul
pop
scas
sbbl
sub
push
lods
filds
and
mov
clc
stos
int3
mov
loope
ja
pop
sub
aad
rcrb
and
sahf
icebp
or
or
cmp
fldcw
sbb
or
scas
dec
stos
pop
xchg
stos
or
stc
loope
pop
stos
jg
push
les
cmovno
arpl
cwtl
inc
cmp
sbb
js
inc
push
cmpsl
jo
mul
pop
lret
sbb
jbe
xor
jp
pop
jle
jmp
repnz
add
cmp
jmp
add
mov
insl
jae
sub
push
xor
inc
imul
iret
in
mov
pop
xor
sbb
sub
mov
push
mov
repnz
adc
movsb
push
cltd
loop
pop
cmp
data16
cmc
data16
stc
adc
cli
jmp
adc
insl
mov
jb
push
cwtl
leave
push
adc
add
std
sbb
fnstenv
sub
jnp
in
xchg
mov
mov
ret
add
lret
icebp
cmc
adc
dec
imul
shr
or
or
mov
push
jg
aad
je
notl
out
add
jnp
pop
adc
hlt
jne
xchg
dec
mov
fs
and
ja
adc
filds
cmc
iret
repz
rcl
arpl
xchg
out
cld
or
mov
cmp
aam
fistl
ljmp
ljmp
jecxz
mov
add
add
lret
lcall
mov
or
xlat
int3
lods
dec
and
stos
or
push
and
lcall
lahf
in
xor
xor
xchg
mov
out
adc
stos
int
xlat
xchg
andl
mov
psllw
lret
and
decb
jecxz
es
icebp
mov
push
lret
lea
pop
stos
xor
push
push
ja
cmp
xchg
cmp
ja
push
into
or
push
jo
xchg
out
add
iret
mov
pop
cmpsl
cmp
notl
adc
lea
adcb
cmc
cmp
int
sub
fimuls
dec
fidivs
dec
mov
ficoml
int3
cmp
int
fnstsw
cmp
xchg
push
inc
lcall
jle
sarl
ret
mov
ljmp
pushf
adc
xchg
pop
int
mov
clc
mov
or
mov
dec
sub
jl
filds
lea
mov
add
xchg
andl
add
rorl
jp
pop
fwait
add
pop
cli
mov
jno
xchg
hlt
stos
sbb
add
cwtl
imul
imul
loopne
int
cmpsb
clc
stos
outsl
lcall
mov
xchg
fincstp
adc
arpl
mov
mov
cmp
iret
mov
mov
dec
cmp
mov
pmullw
sub
and
add
mov
pop
pusha
stc
xchg
push
cmp
mov
test
iret
scas
test
xlat
adc
movsl
stc
es
into
jmp
push
dec
jmp
or
outsl
enter
jmp
inc
add
xchg
dec
inc
xchg
into
lock
mov
scas
scas
jge
rol
aas
pop
xlat
aaa
hlt
or
dec
popa
inc
shl
or
fistpll
pop
jp
subl
iret
add
lods
sub
test
mov
push
mov
cmp
inc
push
roll
nop
cmpsl
or
ja
hlt
aaa
std
mov
jle
loope
mov
in
ds
cld
xorps
rolb
inc
push
cltd
jnp
mov
xchg
xchg
dec
pop
xchg
or
cs
insl
or
test
ret
popf
fwait
dec
lret
dec
subb
mov
shrl
mov
in
cmpsb
and
jns
fiadds
ja
add
loope
sub
xchg
loop
repnz
or
je
mov
xchg
xor
addr16
pop
jmp
xchg
mov
mov
xchg
ljmp
mov
lods
pop
jmp
sbb
mov
xlat
pop
hlt
cmpsl
jo
loopne
imul
sbb
lahf
call
imul
pop
cwtl
sbb
sbb
mov
adc
lods
pop
fwait
iret
push
loope
jecxz
aad
mov
push
xchg
add
inc
sbb
imul
mov
loopne
sub
sub
push
clc
cmp
hlt
or
pusha
ret
xor
ret
ficompl
sub
jmp
not
das
repz
neg
inc
lea
or
ja
pushf
call
mov
cmc
cmp
lcall
fucomip
mov
xchg
add
divb
pop
add
movb
xchg
jae
rolb
loope
pop
jmp
jns
fcmovnbe
push
inc
mov
push
fmull
lods
mov
arpl
or
dec
in
cmc
add
cmp
xor
cld
aas
aaa
cmp
jmp
into
dec
fistpl
pop
mov
aam
lea
mov
aas
inc
sub
cmp
mov
inc
scas
aad
inc
sarl
add
loope
adc
aad
xchg
lock
push
call
jmp
mov
arpl
cmp
test
ret
dec
mov
test
je
mov
lock
jg
test
dec
ffree
sbbb
jns
and
push
mov
movsb
inc
and
imul
testb
mov
or
ret
ljmp
rep
lahf
call
fisubrs
xchg
or
aam
inc
adc
and
test
inc
pop
mov
cwtl
adc
js
xchg
mov
imul
sub
mov
push
add
insl
inc
or
mov
stc
add
cmp
mov
in
sub
rcrl
lods
scas
push
popf
sub
insl
mov
rorb
mov
adc
dec
xchg
pop
mov
imul
dec
imull
xchg
adc
scas
dec
loop
mov
mov
pmaxub
push
test
vpmullw
sarb
xchg
jmp
cmpsl
sti
mov
shrl
adcl
outsl
add
lock
push
cli
imul
pop
mov
stos
nop
adc
jecxz
mov
jle
imul
aad
lods
test
cmp
pusha
sub
fmulp
jns
mov
in
cmp
out
pop
ror
ja
divl
and
adc
xchg
and
dec
imul
dec
xor
scas
pop
pmulhuw
mov
ja
pop
dec
mov
jecxz
push
movsl
xchg
xor
stos
push
mov
cmc
lcall
push
push
pop
imul
add
shr
or
fidivrl
stos
aas
out
aad
scas
int
xchg
test
adc
mov
xor
push
out
idiv
cmc
hlt
pop
xor
sbb
push
scas
jg
xor
das
out
ret
and
aad
idiv
imul
test
movsb
popf
jmp
loope
jns
lahf
ljmp
insl
sub
jno
mov
xor
loopne
and
test
gs
roll
lock
aad
fmul
dec
rcr
fstpl
adc
adc
pop
movsb
test
call
add
leave
cmpsl
cwtl
je
push
sub
sahf
mov
out
pusha
dec
mov
std
xor
push
cli
or
out
or
lret
sub
scas
lret
cli
shl
fcomi
pop
and
cwtl
hlt
repz
mov
fdivl
loope
dec
andb
not
sub
outsl
aad
outsl
xchg
push
pop
mov
lret
aad
ficoml
leave
mov
or
jbe
mov
jge
popf
inc
inc
nop
xchg
lsl
mov
mov
andb
and
or
lcall
adc
fldt
fcoml
sub
js
fmul
pop
jmp
mov
inc
mov
adc
mov
out
out
or
imul
dec
sub
iret
mov
arpl
fildll
jo
xchg
push
sub
js
or
jbe
dec
xchg
nop
cmpsl
cmp
cmpsb
or
xchg
paddsb
dec
iret
gs
jnp
jnp
int
sbb
popa
mov
mov
and
rclb
popa
or
popa
jno
cmp
or
call
add
sti
pop
pusha
pop
in
in
incl
push
into
mov
sbb
loope
pop
mov
cmp
popa
xchg
lret
adcl
outsl
loopne
jmp
mov
ret
sbb
outsl
push
cmpsl
insb
test
and
call
iret
push
seto
xchg
fcmove
xchg
sar
or
sub
std
inc
sbb
add
mov
scas
cmc
mov
scas
jnp
jo
pop
lahf
mov
push
dec
xchg
xchg
lret
pop
sarb
mov
mov
jmp
pminsw
and
pop
pop
mov
ljmp
sti
mov
cmp
or
dec
mov
cmpsl
mov
lahf
adc
jle
ss
test
je
int
push
push
pop
out
xchg
push
or
loope
sti
and
sub
nop
or
sbb
and
and
sbb
les
stos
inc
imul
jne
pop
fisttpl
cmc
loop
inc
xor
pop
mov
pop
call
aad
jnp
xchg
jb
jno
fildll
aam
cmp
add
push
xchg
ljmp
fwait
jp
sbb
repz
lds
lahf
inc
orl
xor
rorl
xchg
stos
notl
test
mov
nop
push
out
aaa
and
push
repz
jg
in
fnstsw
std
lahf
adc
mov
adc
mov
push
xorb
cmp
sub
rorl
mov
gs
pop
test
pop
leave
mov
mov
test
lret
cmp
fildll
loope
andb
cmp
cmp
adc
fldt
push
dec
pop
mov
int3
stc
int3
jmp
mov
mov
cmp
int
pop
lcall
cltd
inc
adc
decb
aas
push
sbb
popf
std
aad
stos
dec
in
loope
sti
cwtl
jge,pn
loope
mov
aaa
add
sub
das
flds
shrl
mov
and
push
movd
pusha
arpl
cli
xchg
inc
jnp
mov
jmp
ficoms
sbb
stos
sbb
pop
int
js
adc
or
inc
sub
mov
jae
push
pop
les
movsb
aad
or
dec
xchg
aas
ret
fcoms
mov
cli
xchg
icebp
mov
iret
sub
scas
js
xor
fidivs
adc
add
in
int
hlt
lret
loope
inc
sbb
fwait
enter
lods
int3
rol
mov
popa
push
push
mov
outsl
popf
btsl
push
mov
push
insb
push
jb
out
scas
jne
sarb
jmp
dec
notl
negb
cmp
pop
jg
pusha
push
sub
mov
or
call
push
adc
js
shr
jno
hlt
mov
push
pushf
sti
repnz
dec
adc
repz
inc
ldmxcsr
inc
jmp
test
or
or
jne
stc
arpl
cmp
jp
popf
leave
ja
mov
or
add
lds
adc
mov
add
xchg
notb
aad
fdivrs
inc
push
and
addr16
mov
stos
inc
cltd
aad
xor
test
sbb
sub
xchg
cmp
mov
xchg
xchg
sub
xor
roll
notl
test
fucompp
cmc
dec
iret
push
cmp
sti
hlt
iret
jns
jo
adc
lds
and
adc
popa
xor
jecxz
pop
cwtl
jo
lods
sti
out
pop
imulb
in
rorb
or
mov
stos
shll
loope
jl
or
cmc
xor
xchg
mov
and
jo
hlt
sub
mov
imul
or
or
push
cmpb
pop
mov
dec
popf
cs
scas
sbb
arpl
sub
mov
adc
idivb
dec
mov
jecxz
in
stc
arpl
gs
lcall
sub
mov
test
je
sub
mov
ret
pop
int3
ljmp
in
scas
and
or
or
cld
xchg
into
inc
movsl
int
mov
cs
movsb
sbb
popa
notl
lods
repz
fcoml
je
repnz
adc
dec
add
fs
inc
in
xor
ffree
add
pop
adc
and
xchg
xchg
mov
mov
lds
in
sub
adc
xchg
inc
mov
mov
sbb
inc
jo
sbb
cmp
rclb
repnz
cmp
hlt
and
sub
fildl
sbb
cmc
cmc
inc
mov
shrb
sbb
lss
pop
cld
scas
inc
cmp
sub
jo
mov
add
fists
test
fsubrs
xchg
jo
out
xchg
out
mov
inc
int3
and
mov
aas
stc
jb
cmp
jl
movsb
out
or
cmp
mov
idivl
dec
daa
cli
pop
jmp
hlt
addr16
icebp
or
fidivl
dec
fldl
fisttps
cmc
push
jge
mov
pushf
pop
cmp
popf
cmp
sub
popf
imul
lret
and
cvtpi2ps
aas
pop
adc
xchg
jnp
xlat
mov
pop
sbb
sub
cltd
mov
xor
push
movsb
mov
cmp
cmc
dec
pop
les
mov
xor
jg
lock
xchg
jo
or
test
xchg
shrl
imul
fiaddl
mov
push
shr
bound
push
xor
jmp
jae
add
inc
sbb
into
popa
mov
sub
jl
cltd
inc
mov
testb
loop
pusha
mov
cwtl
cmc
jb
into
fwait
and
out
aad
inc
cli
jle
and
pop
mov
cmp
inc
and
lret
mov
cwtl
pop
xchg
fbstp
mov
lcall
dec
gs
imul
jmp
jmp
scas
emms
or
mov
push
ljmp
lods
pusha
inc
jg
dec
fsubs
scas
jb
gs
pop
push
adc
orl
sbb
pop
lahf
ja
popf
or
data16
cmpsb
pop
jle
outsl
icebp
pop
or
call
mov
frstor
push
push
into
xchg
jb
imul
aas
in
mov
push
cltd
into
cmc
aam
je
push
push
lcall
push
fnstcw
fisttps
lret
cli
xor
or
sarb
dec
sarb
xchg
out
out
push
sub
outsl
jecxz
xchg
xorl
rorb
fdivr
aas
in
cmp
insb
pop
into
dec
mov
testl
lods
call
add
int
push
les
loopne
cmp
jle
dec
xchg
jmp
lea
push
xchg
push
int
pop
popa
neg
push
xchg
xor
repz
xchg
add
add
aad
jns
xlat
insb
push
mov
rorl
xchg
cld
fwait
xchg
mov
mov
jp
data16
add
mov
push
or
mov
es
mov
in
mov
iret
mov
out
xlat
in
add
xor
test
cmc
in
and
lcall
stos
sbb
insb
into
inc
clc
add
pop
and
stos
rcrb
sbb
xchg
xlat
or
and
jb
std
sbb
scas
aad
cmp
cld
mov
jl
mov
sub
int
fmuls
xor
lret
xor
sub
jmp
push
jl
pushf
ficompl
and
scas
xlat
pop
xchg
jno
gs
aas
sub
ljmp
add
or
cmp
mov
jg
jle
repnz
mov
aaa
push
mov
jecxz
pop
push
add
xchg
js
dec
jg
push
lods
dec
push
or
add
loope
jg
imul
mov
mov
sbb
in
shrl
and
arpl
out
hlt
int
loope
sti
clc
lcall
xchg
das
arpl
and
sub
sti
lcall
sahf
mov
and
push
aad
jl
dec
les
lea
mov
xchg
jne
dec
int
dec
fbstp
out
cld
xchg
pop
sub
cmp
push
cmc
xor
xchg
adc
sahf
sahf
outsl
mov
adc
cltd
jmp
push
repz
in
adc
fbld
aad
sbb
and
adc
outsl
repnz
mov
and
jp
leave
ss
xchg
mov
sti
xor
pop
dec
lcall
call
stos
jo
pushf
into
out
cmp
out
xor
lea
mov
xchg
push
sarb
adc
mov
pop
sub
pop
sub
push
mov
arpl
or
in
data16
mov
xor
mov
notl
dec
xlat
fsts
cltd
dec
mov
sarl
popf
fdivr
cmp
or
jmp
lock
int
push
xchg
lock
dec
movsb
push
andb
and
sub
xor
scas
fbld
sahf
and
shr
add
mov
stos
and
ss
mov
es
lea
and
push
daa
loope
xor
adc
sub
cmp
dec
outsl
sti
ret
nop
jno
or
dec
cmc
out
jg
add
jne
sub
push
jg
jmp
lds
cmp
cmp
aad
lcall
cmpsl
sti
xor
jmp
push
jne
dec
ja
lahf
xchg
lahf
cmp
cmp
push
aaa
push
xadd
lock
test
dec
add
jnp
dec
pop
imul
and
push
pop
hlt
dec
adc
rorl
or
sbb
adc
notl
js
add
les
imul
ficoml
cmpsl
mov
mov
xor
nop
push
ret
add
mov
out
nop
push
push
dec
cmpsl
add
push
stc
orl
mov
jb
insb
adc
std
adc
ss
imul
xlat
sub
mov
pop
sti
loope
xor
cmpsb
and
xchg
add
and
fadd
loop,pn
dec
les
dec
inc
out
or
maskmovq
idivl
mov
push
in
dec
arpl
fwait
mov
or
xor
jge
cmp
cmpsb
fs
cld
mov
xor
mov
aaa
pop
and
sbb
xchg
movsl
jl
fsubl
xchg
xchg
jle
addr16
lret
out
mov
inc
cmp
mov
stc
loope
mov
js
bt
sti
das
cmpsb
rcr
mov
sbb
xor
ret
sub
or
mov
jne
sub
inc
jns
push
add
aad
into
mov
clc
ja
or
dec
cmp
jno
sub
insl
scas
add
xor
mov
lock
clc
xchg
in
les
loope
jb
inc
je
loope
test
out
and
push
cmp
shrb
jl
mov
hlt
push
repnz
inc
fucom
sarb
insl
cmp
shll
and
arpl
das
cmc
test
ja
add
inc
mov
fsts
or
scas
into
jmp
or
lods
mov
in
repz
mov
movswl
stc
dec
leave
loop
popa
jl
adc
mov
inc
dec
jl
adc
imul
decl
mov
cwtl
mov
jnp
ret
mov
outsl
push
and
jle
and
xchg
incl
add
popf
addr16
jle
mov
scas
jo
sbb
outsl
cmp
xor
xchg
enter
and
xlat
jp
sub
test
in
pop
outsl
nop
clc
ja
sti
pop
enter
cmp
stos
jo
loopne
push
addb
push
fxch
mov
jbe
in
push
xchg
inc
fwait
xchg
inc
sub
arpl
adc
cmp
or
in
or
loope
add
pop
call
sbb
fwait
xchg
ror
cmp
xchg
mov
or
jecxz
ret
cmp
stc
test
mov
shr
sub
pop
jg
sbb
fcomps
loope
xchg
test
push
mov
pop
push
adcl
pop
out
stos
bnd
mov
dec
arpl
dec
push
aad
insl
and
mov
in
inc
insb
popa
push
clc
sub
lock
xor
int
mov
push
mov
xchg
dec
pop
fs
inc
push
jg
xor
jns
mov
or
loop
fldpi
or
aad
out
jg
sahf
mov
jbe
fistps
push
stc
es
push
xor
imul
xchg
dec
loop,pn
ja
in
ja
push
and
repz
ret
nop
js
dec
or
push
adc
imul
lret
pop
call
inc
and
loope
and
call
pop
push
mov
dec
sub
dec
cmp
push
js
push
add
scas
popa
sar
dec
xchg
dec
push
cmp
movsl
dec
movsb
pop
idivl
aad
inc
bnd
dec
or
icebp
mov
pusha
stos
jg
mov
pop
int
and
jb
push
add
inc
popa
or
scas
sub
addr16
sbb
cli
push
sbb
push
or
in
cmp
xchg
add
add
inc
push
and
into
fdiv
jmp
push
test
loop
dec
and
ds
mov
push
std
cmpsb
push
int3
clc
out
int
in
mov
subl
push
xor
or
lock
stos
dec
pop
mov
gs
cmpsb
lods
insb
sub
outsl
cli
cmp
pop
jnp
dec
sub
lea
cmp
insb
jmp
xchg
or
mov
int
push
lods
ret
push
inc
mov
shlb
add
xor
mov
mov
maxps
pop
lods
push
popf
sub
jmp
mov
mov
fimuls
sub
outsb
mov
mov
out
fsincos
cmp
push
stos
cmc
or
aad
addl
mov
mov
test
mov
loop
nop
popa
dec
and
push
xlat
push
das
mov
fisttps
adc
xor
aad
cltd
sub
ljmp
cmpsb
pushf
int
mov
cmpsl
insb
mov
mov
dec
pusha
sbb
cltd
not
sbb
notb
mov
in
shrl
adc
dec
inc
and
outsl
mov
inc
push
jge
popa
jnp
popl
fistpl
fnstsw
popf
popa
push
xor
cmc
pop
mov
lods
ljmp
cmp
fistpl
push
sub
xchg
subl
mov
push
cmp
push
cli
or
fldcw
int
pcmpgtw
imul
js
iret
jnp
or
loope
cmp
idivl
inc
aam
sub
jae
pop
repz
pop
and
cmc
mov
xchg
jle
xchg
popa
add
stos
xchg
test
mov
bound
sbb
loopne
jmp
stc
out
mov
icebp
pop
std
mov
fdivrp
adc
push
mov
mov
add
sti
inc
cwtl
xor
daa
test
mov
sub
adc
aad
jge
arpl
push
pop
cmc
mov
xchg
and
lret
pop
inc
js
sbb
cmp
push
ret
push
xorl
clc
or
std
jnp
jo
mov
mov
sti
sahf
mov
scas
dec
gs
xchg
daa
es
imulb
scas
sub
adc
aaa
fucomp
jp
aam
clc
jns
scas
mov
add
insl
in
mov
sbb
sbbl
out
adc
mov
mov
mov
fistpll
movsl
pop
jno
mov
loop
sbb
stos
sub
fcoml
popa
out
push
or
jne
lods
push
xlat
inc
fisubrl
ucomiss
sub
popa
mov
std
push
push
or
call
sahf
addr16
nop
pop
pop
dec
xchg
xor
nop
inc
mov
mov
adc
inc
loop
in
out
or
aad
sbb
jno
andb
push
sub
sub
lcall
mov
sahf
mov
sbb
outsb
adc
fmuls
outsb
xchg
jmp
xor
imul
jo
pop
pusha
dec
xchg
mov
arpl
loopne
insb
mov
mov
dec
push
pop
mov
add
push
decb
jo
inc
mov
lahf
mov
int3
xchg
xchg
in
sub
dec
stos
fbld
imul
pop
xor
jno
pop
outsl
sub
cmpsb
movsl
test
cmpsb
insb
sbb
rcr
jl
iret
aad
movsl
scas
in
xchg
inc
bound
and
jae
pop
popa
xor
fisubrs
rorb
jge
xlat
aam
dec
sub
leave
stc
test
xor
pop
dec
jle
rclb
xor
adc
add
les
and
aam
imul
outsl
and
fcoms
mov
call
adc
clc
jl
push
jmp
test
push
add
jmp
test
hlt
cli
push
incl
mov
jmp
or
jmp
lcall
and
ud0
mov
movl
push
ret
lods
jl
lea
nop
mov
cmp
mov
adc
icebp
aad
and
cmp
mov
xchg
into
into
xchg
xor
push
inc
push
mov
loope
mov
cmp
cmc
ret
xchg
lret
inc
push
pop
inc
add
adc
scas
sbb
notb
add
int
xchg
fiaddl
and
popa
andl
xor
out
push
jg
shrb
push
fwait
xchg
movsl
inc
jg
adc
jb
sub
lret
jmp
test
adc
cli
popa
arpl
movsl
dec
lea
mov
mov
push
stos
mov
aad
mov
pop
or
stos
cwtl
or
or
cli
push
lahf
outsb
push
imul
iret
mov
ret
inc
ljmp
or
int
cwtl
pop
je
roll
xchg
mov
or
fcmovne
hlt
mov
sub
sbb
and
into
push
stc
out
sar
cmpsb
mov
sti
adc
lret
add
enter
and
shrb
lret
idiv
aad
test
fistpll
push
jns
cs
sub
popa
loope
sarl
mov
or
cmp
insl
cmp
mov
jno
inc
add
xchg
sbb
addl
jb
inc
inc
jmp
inc
push
cmp
mov
stc
cmc
xchg
inc
pop
xor
in
mov
cmpsl
out
or
push
and
andl
imul
push
jmp
out
call
inc
lods
es
xor
dec
xchg
leave
mov
test
mov
mov
ljmp
mov
adc
enter
mov
aad
pop
dec
xchg
andb
ret
sti
les
fwait
imulb
ja
cmp
adc
imull
ds
xor
sub
fcmovu
out
mov
lock
int
cwtl
jmp
ret
std
pop
add
add
and
dec
loopne
lret
dec
xchg
sbb
mov
push
mov
pop
jnp
fimuls
add
add
iret
pushf
sahf
fmull
iret
decl
sub
add
aad
sbb
popa
mov
stos
jmp
aad
outsl
pusha
andl
lahf
fs
daa
test
pop
sub
aas
inc
loope
xor
or
call
xchg
test
and
rol
or
push
mov
mov
or
lcall
rorl
js
add
mov
push
inc
mov
idivb
in
sti
rorl
scas
nop
push
jp
cmp
cmpsb
jno
fdivl
ficompl
pop
xchg
inc
jnp
stc
out
pop
inc
and
add
jp
fwait
cmp
getsec
adc
adc
push
or
outsl
xchg
mov
fxtract
out
scas
test
fistpll
and
inc
call
outsb
cmpsl
and
dec
xor
xchg
dec
in
pushf
repnz
out
cmpsl
int
push
mov
daa
mov
std
mov
pop
rcrb
xor
pusha
daa
inc
mov
push
arpl
andb
into
loope
loop
add
mov
dec
lahf
inc
in
das
cmpb
cmp
sub
and
dec
repnz
and
push
inc
adc
out
pop
rclb
and
in
adc
xchg
sbb
js
popf
push
orl
xchg
xchg
into
loopne
dec
out
in
jns
jmp
push
sub
mov
push
jecxz
mov
shll
loop
stc
test
mov
dec
lret
in
push
je
loopne
push
aam
mov
sbb
mov
mov
jb
add
aaa
icebp
jae
insb
push
repnz
imulb
jnp
and
sti
or
mov
lahf
mov
out
test
nop
jae
jmp
dec
sbbb
adc
add
nop
jge
and
mov
cwtl
push
nop
lods
js
xor
ja
clc
popf
movsb
mov
xor
fwait
mov
cmp
add
xlat
lods
cs
mov
ret
imul
mov
sbb
inc
nop
ja
jmp
push
lods
psubsw
lret
orb
fadds
test
stos
xchg
mov
fcomip
out
and
pop
hlt
pop
jne
push
imul
cmovbe
fwait
xchg
mov
pop
and
jg
mov
je
pop
ljmp
addr16
negb
inc
add
ficompl
push
arpl
call
inc
or
cmpsb
ds
int
sbb
jae
pmullw
lea
xchg
adc
push
cmp
push
int
popa
clc
js
ljmp
mov
lock
out
or
pop
in
dec
fsubl
popf
push
fsts
push
inc
aad
xlat
dec
cmc
js
dec
es
cmpsb
mov
jecxz
ss
loop
mov
xchg
leave
or
pop
jns
push
hlt
sbb
mov
cmpsl
adc
pop
je
or
bswap
aad
inc
xchg
adc
or
ret
dec
or
jle
out
dec
fsubp
out
cmp
div
jmp
movsl
inc
cmp
out
fadds
fstpl
fsubr
xchg
into
adc
orl
aad
adc
add
inc
jmp
mov
loop
popf
or
fwait
pushf
test
pop
jg,pn
in
cmp
out
fildll
xlat
js
aad
fsubrl
fisttpll
inc
test
imul
fstps
out
js
in
lods
rcr
lods
pop
call
fadds
rcrl
decl
xchg
xchg
or
add
insl
lock
mov
shlb
sub
fnstcw
sub
xchg
adc
cld
cmc
inc
stos
xchg
sbb
inc
aaa
rcrb
loopne
cmp
mov
mov
xchg
pop
pop
fs
sbb
pop
xchg
sbbb
scas
push
and
xchg
sbb
xchg
fs
popa
pop
dec
ds
in
pop
sahf
push
mov
jno
cwtl
mov
cvtps2pd
jb
movsl
add
movsb
rcrl
iret
xchg
push
dec
xchg
pop
xchg
movsb
stos
add
push
push
into
nop
iret
out
cmc
ss
jecxz
cs
mov
mov
lods
push
mov
jne
loope
test
push
push
outsb
int
pushf
call
jl
fisttpl
sub
push
loope
ret
dec
cmp
es
out
loope
xor
notl
or
jmp
aad
mov
jl
popl
movsl
iret
fldt
pop
cs
cmp
mov
imul
rcrl
shll
xchg
mov
pop
mov
lods
inc
push
adc
push
ljmp
xchg
mov
and
jae
int
aad
imull
popf
mov
shl
cmp
fdiv
or
inc
mov
rorl
push
or
les
jno
popa
sub
ds
std
mov
mov
fstp
test
jge
in
jae
iret
movsl
icebp
jnp
dec
mov
mov
push
iret
ljmp
mov
loope
cmp
scas
out
ror
push
je
test
jmp
mov
lahf
and
cltd
pop
inc
inc
mov
nop
scas
push
jnp
call
pushf
cmc
jle
movsb
les
aad
aad
jl
dec
jns
sbb
fptan
push
xchg
dec
subb
mov
hlt
dec
das
dec
sbbb
cmp
aad
icebp
rol
dec
aad
aas
jecxz
jnp
pop
pop
inc
push
xchg
xor
push
xlat
mov
imul
filds
xlat
or
add
inc
sahf
imul
mov
imul
inc
dec
call
pop
out
xchg
mov
mov
hlt
and
div
movsl
pop
lret
or
mov
sbb
loopne
notl
jmp
cmp
cwtl
sahf
mov
add
mov
in
or
int
jno
ds
jg
out
jg
pop
push
fs
pop
jmp
or
cmp
jge
cmp
add
xchg
loope
push
mov
loope
and
cli
mov
dec
jl
pop
pushf
xchg
repz
mov
mov
js
fisttps
pop
lret
lret
xchg
out
xor
fcomps
inc
aad
fisubl
mov
sti
cmp
jne
push
inc
ja
add
notl
fbstp
jo
pop
xchg
sbb
call
ss
xchg
negl
insl
cmp
shlb
out
testb
jl
mov
and
std
inc
adc
idivl
add
aaa
stos
cmp
sub
add
cmp
pop
aad
dec
jb
inc
adc
aas
cmpsl
popf
jns
aas
daa
mov
xor
addr16
cmc
push
jmp
mov
loop
ja
fstps
cmp
inc
cmp
jne
xchg
rolb
add
jp
sub
int3
mov
dec
add
daa
xchg
loope
jns
into
lret
xchg
mov
xor
aad
aam
insb
imul
push
aam
insl
lds
mov
ret
movsb
cmp
cmc
inc
or
push
cmp
in
pop
dec
call
and
lods
mov
dec
and
jbe
or
cmc
push
push
aad
xchg
test
pushf
fidivs
movsl
test
daa
fcmovbe
or
or
inc
enter
out
jmp
lods
outsb
vsqrtss
inc
ja
shll
jnp
dec
push
fistpl
fists
hlt
sbb
in
test
ret
adc
js
js
mov
mov
mov
adc
ret
jnp
clc
mov
sbb
sbb
cmp
ss
and
maskmovq
imull
aad
inc
jg
ffreep
in
scas
iret
xor
push
push
fisubrl
out
or
mov
mov
pop
push
popa
mov
or
movsl
or
mov
sar
outsl
pop
mov
sub
aam
js
data16
inc
pop
hlt
mov
mov
stos
xor
arpl
pop
and
loope
fidivrs
xchg
inc
inc
xchg
cmp
push
jg
lea
push
push
arpl
cmp
and
mov
cmpsb
adc
sub
frstor
repz
gs
pop
push
mov
insb
mov
aam
sbb
out
loope
jl
xlat
lds
sbb
mov
imul
cmpsb
js
mov
fsubrs
loope
xor
mov
loopne
scas
in
xor
nop
pop
aaa
dec
aad
in
int3
xchg
jp
fld
mov
dec
pop
popa
ret
pop
jge
push
push
into
inc
aam
test
pop
push
push
in
pop
loope
mov
push
cmpsb
cli
mov
mov
or
cmp
das
or
fucomip
loope
jno
xchg
std
sbb
fdivrs
xchg
mov
jge
xor
arpl
lret
and
ret
outsb
mov
adc
xchg
cmpsb
std
les
stos
dec
and
stc
loope
push
adc
sbb
jmp
dec
in
pop
or
pop
push
ja
jns
push
out
cmpsb
loope
xchg
push
mov
lret
or
cmc
js
in
nop
adc
dec
mov
sub
out
or
rolb
xchg
mov
mov
shlb
xchg
cmp
leave
lea
popa
cmp
andl
stos
pushf
jnp
push
pop
push
xchg
movsb
inc
cltd
cmpsb
or
adc
xchg
jo
mov
cmp
lds
aad
in
enter
mov
repnz
lahf
xor
dec
or
xchg
or
ret
pop
lea
xlat
mov
loope
xchg
or
cmc
in
pop
xchg
jo
add
roll
inc
push
jecxz
ss
aam
sub
inc
jl
repz
mov
inc
push
xchg
ja
pop
sub
adc
or
adc
lahf
out
cltd
xor
hlt
mov
push
mov
out
jmp
and
repz
pop
das
fcom
mov
icebp
and
mov
mov
aam
aam
data16
xchg
icebp
insl
ljmp
test
adc
iret
or
in
dec
jno
shlb
xchg
mov
aad
push
mov
sbb
ficoml
ljmp
xor
test
pop
aam
out
add
rclb
jnp
cli
test
add
jb
sub
not
outsl
js
in
cltd
push
cld
inc
or
mov
push
mov
jl
clc
test
outsl
imul
lods
and
adcl
in
xor
push
testl
sbb
push
shr
pushl
shl
out
jge
push
xchg
and
push
inc
fdivrl
jle
int
xor
push
pushf
lods
test
add
mov
ljmp
sti
jae
mov
lahf
xchg
and
and
fadds
jnp
outsb
fistpll
jmp
xor
mov
jmp
adc
pop
add
fisttpl
and
lcall
sbb
out
cmp
cmc
mov
movsb
addb
sar
hlt
xchg
push
pop
sub
cmp
xchg
push
adcl
ljmp
call
pop
fld
pop
pop
movsb
cmp
rcl
jg
lahf
aad
push
leave
hlt
jecxz
loopne
fisubl
hlt
jmp
sbb
int
sti
xor
std
js
lods
into
add
jmp
bound
dec
pop
cli
add
inc
or
mov
jnp
jmp
mov
std
aaa
sbb
mov
repz
mov
dec
mov
mov
je
scas
mov
sub
sbb
add
and
mov
fimuls
shll
mov
xchg
mov
les
call
jb
loopne
mov
xor
negl
xchg
loope
repz
or
les
push
outsl
pop
lcall
xor
xor
jge
mov
shlb
pop
sbb
les
call
testl
stc
in
cmp
fnstcw
popa
inc
scas
fimuls
movsb
push
sarb
enter
mov
mov
xchg
or
test
shrb
sbb
je
and
stos
fnstsw
sbb
jge
loope
xchg
mov
cmp
loopne
lods
jp
out
mov
pop
std
push
cmpl
scas
and
and
push
add
dec
aaa
mov
jl
in
sub
cmpsl
out
sbb
xchg
inc
or
mov
ljmp
mov
andl
jge
inc
xchg
enter
fs
in
jle
js
out
inc
dec
ficoms
mov
inc
push
enter
scas
push
stos
dec
inc
cs
mov
popa
jnp
or
aad
repz
xchg
jo
shl
mov
push
enter
jmp
push
shll
sahf
sarb
push
aad
xor
int3
mov
cmpsl
rcl
flds
push
xor
outsb
xchg
int
fmulp
dec
jbe
cmpsl
movsb
sub
or
jb
aad
xchg
out
roll
mov
mov
and
out
dec
or
cld
or
xchg
cmc
cwtl
pop
cmp
loope
xchg
xbegin
pusha
cltd
mov
xlat
jge
into
jne
adc
mov
cmc
arpl
cmp
rcl
std
jl
push
inc
mov
add
pop
in
lods
jecxz
fadds
loopne
xor
mov
fbld
xchg
push
aas
sub
enter
mov
test
int
add
push
out
out
ror
lods
mov
nop
fdiv
enter
inc
sarl
pop
into
aad
pop
rclb
jne
xchg
mov
and
iret
add
cmc
pop
ror
cmp
fs
xchg
movsb
and
cmp
xlat
ljmp
and
inc
jne
scas
stos
cmp
or
jmp
pop
aad
orb
clc
and
hlt
bnd
movsl
pop
pop
xchg
mov
mov
sti
pop
mov
sub
lahf
mov
mov
push
push
push
sbb
fmull
dec
shll
mov
aam
ljmp
sub
push
cmp
or
xor
lcall
cmp
jmp
sub
sub
lahf
aad
push
imull
stc
sbbl
jg
loop
scas
dec
aad
mov
shll
orb
or
fiaddl
adc
inc
cmpsl
adc
orb
mov
subl
push
psubusw
dec
and
inc
push
aad
movsb
jno
add
fldcw
mov
xchg
jle
out
sub
lret
push
pop
xorb
fwait
in
add
enter
jno
mov
push
pop
incl
push
mov
xchg
fnstsw
adc
aad
mov
jg
xor
adc
test
icebp
cld
cmc
mov
and
jp
paddq
xchg
mov
imul
shr
add
dec
xchg
and
push
push
xor
psubusb
jb
xor
daa
pusha
cmp
push
cmpsb
mov
push
mov
popa
add
xchg
mov
je
mov
into
mov
adc
jg
pop
push
push
sbb
push
loopne
aad
and
push
cmp
bound
lods
movsb
xchg
pop
cmpsb
dec
les
dec
fiadds
test
daa
xchg
mov
outsb
int
adc
adc
pop
jns
aam
dec
lods
in
push
fldcw
mov
xchg
push
mov
movsb
and
lret
cmpsb
and
cs
fwait
popf
cmpsb
cmp
push
pop
mov
test
jbe
mov
dec
jge
faddp
pushf
lret
inc
cmp
aad
dec
data16
test
iret
orl
pop
jg
out
cmc
dec
icebp
xor
inc
shl
mov
fidivrs
lods
and
and
js
pop
mov
lock
mov
jl
ljmp
stos
js
popf
add
bound
mov
cmp
jge
push
sbb
mov
outsb
scas
mov
mov
popa
in
int
imul
xlat
das
and
stc
outsl
xchg
and
mov
jno,pt
stc
int3
jno
pop
ljmp
incl
aad
fisubs
or
js
mov
or
cmp
shrb
dec
aaa
mov
xchg
jne
mov
jg
add
pusha
divb
or
jmp
mov
aad
mov
in
and
and
cmpsl
std
sti
aad
xor
jns
cli
dec
paddsb
daa
cltd
mov
and
and
out
sbb
into
cmc
call
inc
add
pop
cmp
xchg
mov
insl
add
push
lods
lds
popa
adc
rolb
cmpb
sbb
push
outsl
imul
mov
fs
inc
pop
dec
cmp
aad
xchg
sti
or
daa
sub
loop
mov
rorb
and
xor
cli
add
adc
rcrl
and
imul
cmp
dec
push
loopne
jg
cmp
xor
popa
int3
loope
xorl
mov
mov
xchg
and
int
adc
jle
lods
aad
push
mov
xor
fs
dec
hlt
adc
xor
jmp
imul
mov
mov
in
fmuls
push
mov
lods
bndldx
repnz
mov
jo
push
sti
adc
xchg
sbb
xchg
movsl
sub
aad
test
or
mov
xor
iret
lret
cli
dec
scas
pop
popa
lcall
loopne
pop
std
or
push
fwait
sbb
cwtl
and
lods
or
add
call
mov
add
push
sub
les
mov
ljmp
and
mov
push
sbb
mov
fildl
or
hlt
dec
and
ficomps
cs
mov
imul
stc
aad
ja
int
mov
inc
cmp
cmp
jno
cmp
stos
push
loopne
dec
cld
out
outsb
test
mov
lret
inc
mov
popf
decl
sbb
cmp
iret
or
cmp
add
pop
ficoms
fldt
xchg
adcb
stc
mull
mov
sub
cmp
add
scas
jmp
lds
int
repz
sahf
jns
cmpsb
sub
fiaddl
push
test
xchg
je
cwtl
and
cli
cmpsl
scas
dec
and
jbe
xchg
test
orb
test
sub
inc
into
xchg
add
aas
clc
xor
sub
xchg
rclb
aad
cmc
lds
into
out
mov
pop
dec
outsb
add
repz
xchg
xlat
pop
jg
sbb
mov
xor
pmaddwd
push
hlt
xchg
cmpsl
pusha
jg
cmc
out
sub
out
pop
test
lods
push
and
sub
pop
out
jg
into
push
in
scas
or
outsb
push
insl
fs
fcoms
iret
cltd
imul
inc
sar
pushf
adcb
jmp
sbbb
incb
and
jg
shlb
pmullw
xor
jg
test
fs
fcom
jp
imull
cltd
jb
cmp
scas
cmc
xchg
fwait
xchg
out
mov
xchg
repnz
int
xchg
mov
push
das
popf
das
pop
push
xor
and
or
xchg
or
fnstcw
lcall
idivb
imul
outsl
jbe
js
cmp
mov
pop
and
jp
adc
pop
pop
dec
cli
jmp
mov
stc
sub
arpl
in
rcl
adc
or
jmp
jle
dec
lods
sub
add
push
dec
stos
daa
jge
sub
movsl
addr16
add
fists
mov
into
cmc
jae
push
daa
out
adc
movsl
sub
call
sub
pop
dec
add
ret
imul
jp
push
loop
enter
xchg
lds
adc
clc
div
cmp
idivl
lods
dec
das
ds
hlt
cmc
xor
cmpsl
fcompl
pop
inc
data16
stc
jle
and
xchg
lea
sub
fisttps
xchg
sbb
loope
cmp
xchg
in
cld
push
push
call
lock
xchg
stos
in
ror
das
popa
imul
mov
fbld
negl
cmp
out
aad
cld
xchg
add
int
imul
or
rorb
ret
lcall
nop
ljmp
shrb
sbb
push
and
into
adc
adc
inc
sarb
cmpsb
and
cltd
pop
in
int3
mov
xlat
sbb
cli
arpl
fisttps
ret
xor
mov
pop
insb
fcmovnu
xor
mov
imul
add
js
push
addr16
push
into
xchg
test
imul
cmc
inc
mov
sub
dec
adc
clc
pop
out
ljmp
dec
jmp
addr16
push
popa
and
adc
aad
sbb
imul
loopne
lods
sub
push
xchg
or
sbb
cmpsl
or
sbbb
sub
movsl
push
and
subb
and
sahf
mov
dec
btc
inc
fcompl
mov
push
repz
fisttps
sub
mov
std
and
mov
frstor
js
sub
lods
insl
mov
cld
out
into
popa
mov
cmp
mov
xchg
out
mov
sub
mov
arpl
xchg
cmc
es
sub
sbb
pop
pusha
stc
add
jge
aad
mov
aas
dec
cld
xlat
pushf
and
les
lcall
jecxz
pop
mov
adc
pop
ffreep
divl
xchg
test
out
or
scas
test
sti
or
jg
cmc
add
into
rcl
lret
faddl
imul
dec
xorb
sub
xchg
or
mov
imul
rcll
sbb
cmp
inc
daa
jle
push
xor
fcmove
xchg
jl
repz
std
test
cmc
dec
dec
cmp
mov
stc
pop
xor
movsb
es
outsb
cmc
xor
xchg
mov
clc
push
push
push
call
push
mov
mov
xchg
insb
fsincos
aas
dec
lods
das
orb
mov
mov
or
cmp
dec
or
mull
cltd
xchg
das
enter
push
mov
and
mov
jge
sub
shlb
jmp
pop
por
lahf
enter
aad
adc
aad
cmp
es
adc
and
stos
sbb
push
cmp
ja
push
inc
fucomp
ds
push
insl
mov
out
jle
push
or
pop
adc
das
dec
mov
mov
rcrb
pop
gs
cmpsb
xor
arpl
push
pop
cmp
aad
mov
cmp
int3
or
push
xchg
mov
pop
in
fcoms
push
stos
testl
lret
out
pop
jge
xor
push
mov
push
loopne
add
dec
jge
jo
jmp
data16
dec
add
leave
cli
pop
add
or
adc
js
lods
mov
call
jg
or
scas
add
popa
aad
cmpsb
xor
jecxz
fwait
aad
add
and
add
or
mov
inc
push
push
cmp
or
fiadds
call
mov
cmp
or
pop
pop
outsl
movsb
jbe
mov
and
mov
add
pop
cmc
rorl
jmp
fbld
and
in
pop
sbb
je
mov
inc
stos
jbe
aam
push
sbb
fdivs
add
jp
shrl
in
sub
lahf
xlat
pop
sti
mov
adc
sbb
into
mov
mov
xor
int3
addr16
add
inc
mov
lock
cwtl
mov
dec
push
sub
scas
pushf
fldl
leave
into
pop
mov
mov
inc
sbb
inc
scas
call
loope
adc
xchg
sub
jns
vpsadbw
aaa
cmp
out
push
enter
adc
out
add
adc
js
sbb
imul
out
std
pop
or
mov
sub
out
xor
dec
push
pop
cmp
jnp
sub
mov
or
jge
sti
scas
mov
sahf
xchg
mov
lret
setg
sahf
in
sub
je
xchg
jle
loopne
adc
pushf
push
outsl
mov
into
push
movsl
jb
and
in
out
sbb
int
pop
leave
mov
sbb
in
shll
cmp
bnd
mov
fidivl
jecxz
cmp
pop
cmpsl
mov
icebp
dec
xchg
ja
leave
iret
fimull
cmp
insb
or
lea
add
mov
cmp
lock
decl
cmc
mov
adc
push
or
popa
cmpl
inc
dec
js
addr16
ds
aad
pop
popf
das
out
cmp
idivl
shlb
nop
jecxz
mov
push
in
xor
mov
add
rcr
or
dec
mov
cmp
or
out
add
or
cwtl
add
aas
andl
jl
xor
adc
inc
ficoml
sbb
dec
xor
adc
rclb
fwait
jbe
jle
lea
inc
xchg
push
sub
idivb
imul
movsl
adc
fdivrl
and
clc
fsubrl
sbb
dec
ds
mov
jno
mov
les
iret
xchg
or
rol
xchg
fs
ret
fidivs
push
and
and
xlat
test
mov
je
sub
fs
sarb
addb
mov
ljmp
xchg
dec
pop
sti
xchg
arpl
stc
leave
mov
into
fdivrl
mov
fisubrl
clc
cmp
mov
push
mov
dec
push
stc
mov
iret
sub
sbb
ss
mov
mov
cli
or
inc
xchg
fs
jno
imul
lret
mov
fsubrl
mov
xchg
shll
inc
inc
test
fcomip
sarb
adc
adc
and
iret
pop
fistl
jne
push
sti
test
stos
push
add
mov
mov
sahf
and
nop
iret
adc
cmp
pop
sbb
fs
xchg
clc
jg
jg
iret
jecxz
cwtl
aad
lds
xchg
jnp
adcb
movsb
xchg
mov
jns
loopne
cmp
movsl
mov
pusha
stos
add
icebp
add
jmp
cmp
loopne
arpl
or
movsb
jno
sbb
or
xor
pop
call
push
and
xlat
repnz
jl
and
rcl
dec
and
std
dec
mov
xor
in
sub
xor
push
push
mov
xor
outsb
inc
dec
dec
xchg
or
aas
pop
xchg
inc
mov
cwtl
adc
or
xor
inc
pop
out
push
pop
test
dec
lds
xchg
stos
push
cmc
jmp
cmp
test
xchg
xor
sub
test
push
and
out
jbe
in
test
mov
cs
xchg
or
sbb
dec
cmp
add
jp
sub
out
adc
aaa
aad
mov
scas
pop
push
int
out
lods
push
lret
xchg
pusha
addr16
cmp
mulb
out
lcall
repnz
mov
pop
rcll
xor
push
dec
cs
testl
test
imul
shr
mov
pop
loopne
inc
and
pusha
jecxz
push
xlat
mov
jecxz
jl
in
mov
jp
and
in
std
sub
test
mov
insl
je
dec
jno
in
lahf
add
loop
dec
nop
shufps
cmp
jmp
jl
push
fistl
or
mov
inc
cmp
lods
pop
seto
inc
add
adc
les
mov
add
ret
mov
dec
push
lea
stc
push
fidivl
xor
inc
mov
aad
cmp
inc
cmp
ljmp
mov
jnp
and
clc
and
mov
popf
fcmovu
int
mov
stos
xchg
pop
mov
jp
push
lret
inc
ds
xchg
iret
sub
mov
mov
cmp
xor
lret
out
xchg
xor
adc
jne
cmc
xchg
push
inc
shrb
scas
std
imul
lods
mov
mov
jmp
bound
sub
divl
je
cmp
in
lods
xchg
shrb
loop
inc
test
fcmovb
mov
inc
loope
mov
pop
mov
and
and
iret
fcoms
aam
jae
into
dec
imull
int
sub
stos
jge
iret
cmpsb
mov
cld
insl
shll
js
cli
inc
nop
shr
xchg
outsb
loopne
lods
xor
outsl
aad
add
or
aad
cmp
dec
sub
sub
jnp
mov
mov
inc
jnp
add
jp
nop
jl
loopne
cwtl
jle
push
adc
add
loope
insb
jmp
pop
test
lock
add
mov
jnp
shlb
idiv
nop
mov
push
sbb
cs
stos
jge
sarb
pop
add
adc
inc
int
dec
mov
rcl
sbb
and
shll
das
xor
ja
test
bound
int
jo
std
cmp
fildll
mov
jmp
or
shll
arpl
jb
mov
testb
jns
aad
mov
scas
push
pop
adc
int3
jmp
mov
pushf
pop
stc
shr
das
sub
mov
sub
imul
loopne
jl
adc
std
decl
cli
pop
outsb
sti
jmp
jmp
ja
cmp
mov
in
div
mov
inc
aas
inc
cltd
push
les
pop
popa
or
fisubl
inc
pop
mov
dec
subb
rcll
mov
movsl
leave
cmp
test
inc
in
mov
out
aas
pop
or
mov
pop
roll
addr16
push
or
pop
add
add
or
mov
popf
xchg
ficomps
rol
inc
fcom
mov
and
imul
push
lcall
xor
mov
leave
imul
frstor
scas
movsl
stc
push
mov
sub
ss
inc
rcll
imul
sahf
loopne
out
add
or
inc
fstpt
dec
dec
pusha
add
mov
dec
mov
and
lea
xor
dec
cmp
mov
int
jnp
scas
fcom
jle
fs
bound
cmp
mov
jmp
jns
jnp
mov
pop
jno
mov
popf
sub
mov
push
test
jnp
mov
mov
or
sbb
idivl
sahf
nop
mov
je
scas
mov
rorl
pop
cmp
cld
cmp
frstor
mov
scas
aas
or
cmp
sti
fsubrs
decb
and
jp
sub
xchg
jle
pop
push
sbb
movb
pop
cli
roll
sbb
ret
sahf
pop
inc
push
sarb
in
ret
or
push
dec
mov
stos
repz
stc
in
xlat
push
jl
dec
cmp
push
mov
xchg
and
sub
mov
mov
adcb
push
lret
idivl
mov
adc
ss
test
dec
scas
mov
sbb
test
popa
or
fcmovne
mov
imul
in
loopne
jge
jmp
cmpsb
mov
lock
prefetch
sarl
pop
mov
xchg
sti
xchg
fcomip
loopne,pn
xlat
movsl
fwait
or
aas
cmp
loopne
icebp
mov
adc
add
sbb
add
add
jl
sbb
cmp
xchg
popf
or
imul
les
and
out
in
jge
mov
dec
lods
outsl
mov
cmpsb
xchg
xor
fildll
cmc
pop
jnp
js
adc
pop
adc
dec
sahf
cmp
cs
mov
dec
sub
das
in
loopne
xchg
pop
jle
test
ret
cmp
cwtl
or
dec
aad
cmpsl
cmc
xchg
cld
stos
mov
push
adc
jp
sub
and
test
push
jbe
push
addr16
dec
push
jg
sbb
add
fsts
cmp
sbb
jg
imul
jmp
lods
mov
daa
jge
repz
cmc
dec
push
pop
lds
mov
pop
push
scas
mov
loop
aas
fsubr
adc
or
mov
loope
cwtl
aad
mov
dec
das
mov
enter
inc
in
lea
cld
cmp
inc
icebp
arpl
inc
push
jmp
mov
adc
fwait
xchg
ljmp
insb
mov
sbb
and
jns
push
notb
inc
adc
enter
xor
dec
xchg
cmpsb
cld
test
cmc
fimuls
push
lcall
rclb
and
cmp
mov
clc
sub
popa
pusha
idiv
inc
inc
dec
imul
adc
loopne
mov
loopne
pop
sti
cs
lcall
jg
nop
inc
add
lods
jp
cltd
jbe
mov
sub
mov
add
cmc
inc
je
inc
data16
out
addr16
mov
fists
cmp
movsb
lods
out
pop
or
push
mov
aad
xchg
nop
fiaddl
push
xchg
dec
push
push
je
dec
ja
adc
or
add
hlt
cmc
mov
adc
sbb
push
pusha
and
jno
or
pop
push
cmp
pop
xchg
adc
in
lock
loop
cmp
in
push
mov
pop
scas
scas
cmp
faddl
jge
push
xchg
in
iret
shll
dec
mov
lahf
sti
cli
jge
and
jle
lock
in
xor
dec
mov
or
sub
fisttps
xor
lods
aad
mov
ss
jae
or
cmp
push
pop
dec
das
mov
nop
sbb
out
sbb
add
loop
push
mov
add
pop
dec
movsb
adc
sbb
xor
mov
or
xor
sub
or
jmp
inc
mov
stos
mov
cwtl
cmp
dec
inc
sub
ljmp
movsb
in
or
int3
rcll
mov
xchg
test
or
int
adc
add
push
cmp
idiv
jmp
inc
cmc
pushf
enter
aas
scas
adc
cltd
sub
push
sbb
std
pop
outsl
jge
adc
mov
push
test
mov
push
out
mov
mov
pop
pop
mov
push
xor
sub
sahf
mov
icebp
dec
ljmp
and
mov
out
js
std
push
mov
arpl
xchg
or
cmc
lcall
cmp
xchg
mov
lods
sub
mov
loopne
setne
out
adc
mov
mov
xor
fmulp
jnp
push
orb
aad
lds
jge
outsl
jae
cld
pop
lret
dec
hlt
movsb
mov
cmp
mov
push
add
push
aad
mov
jle
stc
jge
fdivrl
fisubl
cmp
addr16
jg
inc
cmp
cwtl
push
push
outsb
push
sub
out
mov
test
pop
mov
cltd
cwtl
ret
fs
testl
sbb
jns
add
xchg
inc
pop
sbb
rcl
pop
xchg
out
add
not
jno
imul
outsb
mov
repnz
cltd
mov
cmpsb
push
outsb
mov
cmovb
jns
loopne
cmp
adc
inc
add
scas
inc
adc
fs
push
adc
into
fidivl
jecxz
push
fildll
sub
mull
dec
call
xlat
popf
sub
in
mov
adc
dec
and
call
and
scas
and
push
jp
loope
push
xlat
and
std
xchg
jg
fistps
cmpsl
adc
orl
daa
mov
sbb
fstp
inc
push
pop
push
push
ds
and
call
push
inc
into
int
cmp
sub
int
std
and
test
ss
jne
jg
fmuls
movsl
dec
pusha
popf
lret
sub
jecxz
out
test
and
call
call
insb
pop
cmp
jg
enter
add
add
sbb
mov
mov
test
pop
orl
outsl
xchg
iret
lret
loope
mov
fmuls
pop
xchg
jp
mov
jecxz
addr16
add
aam
pop
jnp
sub
mov
in
push
cmc
xchg
add
fistps
jg
xchg
mov
mov
or
jns
push
and
mov
jp
les
pushf
dec
mov
sub
movaps
jnp
and
pop
into
cmp
mov
dec
pop
shll
mov
sub
jb
cmp
outsl
cmc
lods
mov
dec
pop
cmp
out
inc
mov
js
push
test
xchg
stos
test
xchg
pop
xlat
adc
testl
and
ljmp
mov
jle
cli
andb
aaa
repz
test
out
js
loopne
fidivrl
add
inc
jns
sub
leave
jae
imul
hlt
pop
push
pop
lods
add
fs
outsb
andl
mov
popa
lds
xchg
testl
pop
cmp
test
add
and
dec
cmp
mov
jae
aad
dec
pushf
push
add
fistl
lret
xor
jmp
movsl
inc
into
push
pop
push
stc
adc
cmp
mov
adc
xor
sub
mov
fnsave
lods
fisttps
push
aad
std
jg
js
mull
out
push
stos
push
and
test
stos
xlat
pusha
dec
mov
add
and
xor
popa
add
xlat
inc
or
xor
cmp
outsb
hlt
pop
push
pop
fisttps
lret
jnp
mov
imul
cmp
pushf
out
shrl
pop
inc
or
xor
fcmovbe
arpl
push
pop
dec
mov
mov
push
xchg
dec
push
sahf
lods
dec
pop
call
jecxz
fst
data16
lcall
xchg
xchg
sub
je
cli
pop
lahf
mov
pop
pop
adc
push
sbb
cmp
jnp
mov
mov
int
scas
xchg
dec
cmp
test
or
jg
mov
ja
pop
into
add
rolb
lods
or
mov
xchg
mov
fistps
mov
inc
loope
add
imul
cld
mov
xchg
pop
adc
xor
jp
lods
das
sub
test
xchg
adc
xchg
mov
mov
mov
lahf
jno
hlt
rcl
int3
push
into
xchg
adcl
jge
aad
xchg
pop
xchg
pop
into
pop
loope
dec
jle
cmpsl
cli
inc
out
xchg
push
insl
lret
pop
ja
xchg
int3
jbe
inc
and
addl
cmp
mov
add
mov
mov
or
xlat
push
test
aad
imul
sbb
andb
adc
push
dec
sub
push
and
lock
sub
add
push
adc
cwtl
ja
xchg
sub
pop
push
je
add
movsb
cmp
lds
push
xor
add
or
in
pop
adc
jns
mov
sti
pop
jo
lock
lea
dec
or
and
adc
push
mov
or
insb
out
ljmp
push
push
imull
aad
sbb
xchg
push
xchg
pop
and
cmp
cmp
paddsw
std
dec
pavgb
push
jne
int
loope
or
pop
stc
pop
aam
scas
stos
or
mov
ja
or
es
mov
iret
ja
cs
xchg
jbe
jo
test
ljmp
and
movsb
sbb
mul
fisubrs
jns
and
jg
mov
pop
inc
xchg
addr16
jle
flds
add
xor
stos
mov
jl
aad
iret
cmc
in
mov
fs
push
dec
fisubrs
mov
inc
add
loope
or
push
nop
aad
xchg
adc
aas
xchg
mov
mov
ret
mov
adc
into
shlb
mov
sub
cmp
shl
adc
add
fsub
ret
mov
xchg
dec
cld
xchg
insb
addl
jge
add
xchg
xchg
por
adc
push
pushf
push
inc
loop
jno
pop
out
into
mov
std
cmc
ss
mov
jmp
xchg
xor
mov
or
pop
movsb
adc
lock
ret
inc
dec
adc
loopne
loop
push
mov
pushf
subl
ljmp
fnstcw
and
dec
push
adc
cmp
mov
imull
xor
pmaddwd
shlb
cmp
pop
sbb
adc
sar
mov
in
stos
sbb
sbb
or
cmp
push
loop
adc
jae
int
inc
lds
and
std
xchg
aad
mov
mov
jecxz
adc
test
imul
sarb
xor
mov
mov
pop
adc
inc
jnp
daa
mov
push
dec
les
cmpsl
or
push
push
xor
sub
jmp
fists
movsb
mov
adcb
test
jle
add
lods
or
fildl
mov
sar
jae
out
or
push
jl
mov
cmp
jns
fsubrl
sub
fdivp
subb
rcl
filds
out
daa
push
xlat
jmp
jl
gs
je
aad
cmp
cmp
mov
xchg
pusha
fstp
or
jmp
or
and
dec
add
addr16
imul
xchg
sub
je
stc
jmp
xchg
pop
push
nop
and
jnp
test
sub
pop
aam
add
push
jmp
lods
imul
add
jbe
aaa
cmp
ja
lods
xchg
pop
cltd
mov
jne
inc
pop
fs
push
mov
push
inc
jmp
imul
gs
js
xlat
stc
mov
lcall
xor
insb
lret
lods
outsl
aad
clc
cmp
outsb
repnz
xchg
mov
mov
or
decb
nop
pop
xor
int
pushf
jbe
data16
xchg
sbb
jno
insb
jecxz
sub
push
popl
and
lret
sti
adc
pop
outsb
cmpsl
add
mov
fldcw
push
cmpsb
bnd
jmp
outsl
mov
in
jg
cli
adc
das
outsl
jmp
jmp
push
shrb
loopne
ljmp
stc
out
mov
xor
inc
push
sub
cmc
sub
test
and
sub
int
mov
cld
mov
jmp
stos
loop
mov
test
or
repnz
adc
xor
mov
xor
sub
iret
roll
lods
jle
in
dec
xchg
into
cli
neg
xor
call
mov
adc
test
rcrl
and
xlat
mov
sub
scas
movsl
push
mov
jne
sub
sbb
adc
cmc
fildll
add
es
pop
aad
xor
loop
xchg
mov
xchg
imul
adc
mov
pop
imul
aad
lcall
lods
xorb
add
sub
xchg
outsl
push
cwtl
dec
ja
push
ret
dec
and
xor
dec
jp
push
into
js
ja
sub
popf
stc
cmc
add
push
or
inc
sub
sub
jmp
aam
adc
jo
mov
arpl
xor
xor
mull
lahf
xchg
cmp
fucomip
cmc
inc
in
iret
aam
sub
neg
aaa
mov
mov
mov
xor
jb
gs
aam
popl
push
aas
and
and
mov
sar
stos
sahf
push
or
push
ljmp
in
div
pushf
xchg
in
scas
cmc
mov
in
push
aas
dec
adc
xchg
cmpb
dec
sub
pop
mov
inc
aad
push
sbb
rolb
int
pop
or
fadds
incb
fistpll
repz
mov
pmaddwd
cwtl
ja
mov
mov
outsl
lods
bound
sub
push
xchg
xor
lods
insl
dec
into
test
out
aad
icebp
aam
cmp
jnp
out
lods
jg
in
loopne
and
jnp
rcrb
xchg
imul
push
mov
out
sarb
imul
or
imul
sti
and
mov
mov
push
xor
mov
mov
int3
int
cmpsb
in
in
pop
cmp
pop
lods
mov
xor
pop
and
add
jl
jo
mov
xor
add
jne
xchg
in
mov
repnz
and
pop
shll
xchg
imul
or
jge
add
cld
dec
lods
call
divl
sahf
movsb
or
cmc
sbb
jl
in
pop
sbb
repz
jmp
push
mov
aad
xor
pop
cmc
pop
loopne
mov
mov
mov
stc
mov
in
ret
sub
clc
pop
cmp
xchg
xchg
lock
movsl
int3
scas
jb
dec
mov
inc
or
mov
pop
push
cwtl
xlat
in
dec
aad
cwtl
loopne
cmc
rcrl
pop
loopne
sub
shrl
or
inc
xor
and
jb
repnz
adc
imull
call
sti
cmp
fidivl
xchg
out
enter
outsl
xchg
mov
scas
lods
cmpb
aad
arpl
add
inc
mov
mov
inc
cmpl
mov
xchg
pop
gs
sti
mov
dec
cmc
adc
cmp
jmp
adc
mov
jmp
clc
mov
loope
cli
jp
pop
or
scas
dec
out
jb
adc
cmp
addr16
pop
and
jl
push
mov
aad
lea
push
loope
aaa
repz
stos
mov
mov
test
stc
cmp
sbb
sti
lds
add
add
fbstp
add
inc
mov
mov
and
jnp
and
dec
sub
ljmp
lods
frstor
inc
jmp
rclb
cmp
into
dec
sub
dec
and
rorb
dec
scas
dec
push
and
or
push
out
pop
dec
or
mov
and
mov
js
std
xchg
std
sbb
mov
in
icebp
negl
dec
cmp
addr16
mov
jmp
add
sti
fnstenv
insl
or
xchg
lds
lea
push
ret
les
add
imul
jae
stc
aas
or
dec
sahf
cmp
sbb
loop
fcoms
out
lds
xchg
inc
lcall
decb
push
mov
sti
add
jp
pusha
int3
lret
leave
fildl
jmp
les
clc
ds
cld
das
pop
sti
jp
into
add
or
sbb
jno
cmpsl
xchg
cli
adc
adc
jnp
jb
adc
aaa
ficoms
push
cmp
cmc
jnp
push
adc
jl
pop
stos
or
aam
and
les
xchg
jo
lds
or
sbb
push
push
imul
jnp
cld
repz
out
pushf
fisttpll
mov
pop
pop
jne
test
add
stos
pop
sub
inc
in
mov
jg
out
xchg
mov
outsl
fwait
sub
jae
push
inc
xchg
movsl
mov
aad
int
jmp
push
insl
push
sbb
jle
push
or
call
dec
shr
das
mov
call
bound
sub
int
sti
arpl
into
cmp
sar
push
fimull
fidivs
add
dec
or
fcomip
cmc
fmul
mov
das
js
out
fcomip
adc
testl
xlat
test
mov
cs
sub
jl
xchg
in
xlat
mov
and
hlt
jg
hlt
test
out
lgs
jmp
mov
push
notl
loop
pop
adc
filds
xor
mov
popa
popf
or
push
aam
mov
outsl
mov
cmc
sub
test
imul
jne
cmc
mov
cmpsl
jo
push
sub
xchg
outsb
fdivrp
push
pop
arpl
scas
outsl
scas
and
lods
test
in
jmp
repz
pop
sub
js
ljmp
xchg
cmp
mov
out
out
jle
loopne
dec
adc
dec
stos
mov
lahf
movsb
inc
dec
andb
hlt
or
sub
ret
sbbb
enter
sti
sub
or
adcb
mov
push
popa
push
mov
xchg
sbb
call
call
jmp
lods
mov
mov
popf
add
loope
sub
arpl
jb
movsl
lahf
fmulp
add
pop
je
adc
dec
bound
dec
fldl
ds
vmread
gs
mov
lds
jmp
hlt
push
iret
or
adc
jle
int
fsubr
mov
mov
lea
int3
cmp
ja
jae
mov
jmp
xchg
push
fidivl
out
gs
or
mov
aas
loope
xchg
xchg
lret
std
sbb
cwtl
jbe
loop
or
dec
inc
iret
into
jmp
add
add
inc
int
push
bound
cmc
lods
loop
push
call
inc
push
rcrb
out
or
push
add
cmc
lret
sbb
andl
inc
sti
rol
adc
arpl
add
xchg
mov
xchg
and
inc
push
out
std
popf
mov
xchg
roll
dec
inc
dec
aad
outsl
cs
push
sar
sub
sub
rcr
pop
dec
or
mov
xor
out
call
mov
shrb
mov
and
popa
mov
fadds
add
call
in
sbb
jb
negl
daa
xor
lret
stc
sbb
icebp
xchg
test
add
popf
jge
nop
sahf
fnstsw
in
xchg
mov
dec
fstpl
scas
push
add
aad
in
jl
xchg
jmp
mov
pop
scas
cmp
pusha
fisttps
in
sbb
mov
xchg
jge
xchg
dec
aam
lret
int
aad
cmpsl
mov
fisubs
out
mov
pop
fstl
stos
jmp
or
nop
xorb
sbb
addl
inc
rol
enter
es
outsb
push
jns
or
fsubrp
lock
insb
mov
ret
into
pusha
cmpsl
sub
jne
dec
inc
bound
pop
inc
mov
test
movsb
stc
pushf
jmp
not
fnsave
addr16
sbb
sarl
mov
hlt
call
pop
ss
loope
dec
scas
xchg
mov
xor
int
mov
mov
push
jmp
mov
lods
push
and
push
mov
pop
cmp
add
aas
add
mov
ss
test
and
mov
pop
and
leave
xor
sub
add
mov
loopne
jmp
add
sub
xchg
cmp
push
leave
push
inc
and
repnz
adc
mov
scas
xchg
fwait
popa
lods
jno
scas
scas
xchg
adc
les
fadds
js
incl
cmc
iret
sub
xor
inc
push
fistpll
das
and
xchg
mov
sahf
or
cmp
lea
subl
inc
xlat
idivl
add
xchg
pop
in
sahf
jae
inc
scas
notl
lret
xor
xor
or
int
jbe
or
jmp
adc
dec
inc
cwtl
out
imul
into
sbb
out
lock
decl
push
adc
add
push
jne
int
stos
xchg
or
jo
mov
xchg
lcall
imul
xchg
cmp
jg
pop
rcll
pop
mov
cmp
cmp
push
sbb
outsl
mov
pop
outsb
aad
xchg
aam
sub
sub
jmp
movsb
dec
push
push
popf
rolb
push
popf
jecxz
dec
sti
mov
push
xor
int
jnp
mov
bnd
mov
push
jge
pop
push
jns
lods
enter
test
add
and
loopne
or
pusha
cmp
sbb
xchg
jp
ja
or
movsl
cmpxchg
xor
xlat
stc
out
mov
roll
xchg
pusha
jno
cmpsb
dec
fwait
mov
inc
repz
int3
mov
mov
les
push
push
mov
and
sar
or
sub
add
loope
sbb
mov
repz
testb
xor
xchg
mov
jg
cmp
xor
cltd
inc
aam
fwait
lahf
fmuls
sub
xor
pop
arpl
mov
dec
out
cld
rcr
aas
pop
das
sbb
adc
adc
sbb
mov
adc
xor
or
inc
inc
test
cmp
sub
jno
mov
cs
ljmp
imul
mov
jnp
std
mov
jmp
sub
xchg
enter
outsl
pop
daa
outsb
aad
inc
notl
dec
adc
mov
int
orl
dec
sub
ljmp
clc
je
in
repnz
and
cmpsb
repnz
ja
clc
xchg
dec
mov
and
out
sub
mov
clc
leave
xor
pusha
testb
xchg
aad
popf
add
xchg
fstl
std
adc
data16
adc
cmp
inc
xchg
popf
cmp
add
sub
mov
inc
xchg
aas
mov
call
filds
dec
testb
and
clc
and
test
jl
flds
inc
pusha
pop
dec
sarb
popa
in
push
cmc
int
cli
and
push
dec
adc
vmwrite
mov
inc
cs
loop
clc
fdiv
cmp
mov
inc
jae
xor
int3
les
inc
xchg
jbe
xchg
out
adc
das
lods
mov
rclb
jns
mov
pop
pop
aad
and
adc
sub
movsb
sarb
sbb
cwtl
dec
out
in
pusha
or
test
sub
xor
and
jmp
loopne
jb
mov
fyl2x
pop
push
pop
or
jg
cli
fstl
mov
pop
rorb
icebp
call
int3
cmp
mov
popa
test
andl
sarb
rolb
daa
and
call
mov
fimuls
pop
out
cmp
add
stos
mov
stc
loope
mov
or
dec
push
rorl
xor
inc
les
jnp
mov
loop
cmc
or
add
mov
xchg
inc
or
push
call
mov
mov
iret
mov
in
and
pop
flds
mov
sti
gs
sbb
andl
jno
mov
push
push
in
test
mov
cmp
leave
orl
mov
icebp
pusha
adc
fdivs
sub
scas
mov
fistpl
xchg
enter
xchg
xchg
mov
in
loope
fldl
aad
pop
cld
push
cs
add
jae
mov
fbstp
out
sub
aad
or
xlat
or
fmull
mov
iret
cmp
and
or
in
lods
or
mov
and
fstl
out
push
mov
xor
jg
xchg
mov
js
xchg
orl
mov
scas
mov
iret
cmp
iret
add
and
mov
iret
sub
enter
push
pushf
ret
cmp
sarb
jmp
pop
loop
jae
std
xor
cmp
cmc
aas
loope
xor
pop
lahf
xchg
mov
dec
cmovge
and
icebp
jp
aam
stc
pusha
imul
adc
add
add
leave
or
fnstsw
push
imul
inc
shll
sbb
sbb
or
jecxz
out
arpl
in
mov
mov
leave
cmp
into
int
popf
push
xchg
popa
lahf
push
inc
and
stos
aad
push
adc
adc
jg
lods
xchg
jmp
sahf
push
lcall
pusha
add
sahf
insb
vunpcklps
mov
cltd
ficoml
das
mov
or
mov
inc
or
add
ret
push
sbb
sub
int
cmp
daa
addb
push
or
cmp
out
dec
insb
dec
mov
adc
pop
jecxz
sub
push
into
pusha
aam
mov
dec
call
xchg
xchg
fnstcw
mov
decl
nop
xchg
mov
leave
imul
mov
lds
and
add
popa
addr16
jne
pushf
mov
cmpsl
sbb
popf
jmp
jge
mov
fimull
jl
in
ret
jmp
dec
aam
push
adc
cwtl
xor
pop
adc
push
sbbl
xor
xor
mov
fcomip
xor
xchg
ljmp
les
test
mov
fdivl
mov
mov
maskmovq
and
add
int3
outsl
lock
push
rcr
int
sbb
pop
arpl
push
test
outsb
adc
lahf
cmp
in
xor
nop
inc
out
push
cld
xor
lock
mov
dec
rclb
cmpsb
xchg
scas
outsl
sub
pop
iret
lcall
mov
dec
pop
pop
xor
push
lds
jnp
add
xor
mov
ja
mov
dec
loope
xor
pmullw
out
in
iret
pop
dec
pop
popa
insl
jnp
shrl
data16
cmp
xchg
and
jno
or
cli
shrb
fucomip
cmc
test
imul
mov
or
shlb
imul
xchg
sbb
pop
or
sub
arpl
push
pusha
int
adc
mov
mov
dec
sahf
test
xlat
dec
mov
adcl
pop
mov
and
das
mov
aad
cltd
fcmove
cmc
sti
jl
push
sub
test
cmpsb
movsb
jge
outsl
cmpb
or
iret
aad
in
out
insl
mov
adc
cmp
jns
scas
not
std
sahf
into
daa
in
cltd
push
jg
sar
pop
idiv
push
lods
sbbl
push
inc
push
out
push
adc
or
hlt
mov
filds
jnp
add
iret
mov
nop
jge
or
xchg
lods
mov
std
sti
test
aam
testl
mov
adc
cmp
pop
and
fistps
xchg
mov
sub
or
jle
inc
aad
fistpll
jg
out
pop
inc
scas
push
cmc
jb
jg
xchg
mov
jge
or
sub
shll
in
fiadds
cmc
xor
sbb
idivl
push
jns
pop
inc
jnp
cld
ljmp
add
jbe
popf
inc
add
inc
inc
mov
jo
shll
and
fisubl
mov
sub
push
push
sarb
pop
std
jmp
push
mov
mov
mov
stos
mov
iret
outsl
pushf
inc
or
and
cli
sbb
push
stos
xlat
shl
or
enter
iret
and
xor
ds
rol
jnp
cltd
pop
add
cmc
pop
loop
mov
inc
mov
mov
sub
or
orl
dec
subl
xchg
fs
iret
sbb
jo
mov
and
int
inc
inc
dec
mov
mov
shrb
push
lcall
sahf
ljmp
icebp
xchg
test
aaa
insl
lahf
nop
adc
jae
lret
mov
inc
fwait
mov
dec
lock
cmp
loop
pop
inc
lret
fcomi
filds
jp
in
int3
into
sub
loopne
lahf
xchg
lock
sbb
cs
cld
mov
dec
cltd
mov
cmp
jp
dec
sarb
divl
sbb
sub
cmpl
inc
ds
in
add
dec
pop
push
or
call
and
rol
cmp
jmp
outsb
shrd
ds
cmp
jnp
push
xchg
jmp
pop
ljmp
ret
js
cmp
inc
pop
sbb
jnp
stos
xor
and
or
lds
dec
clc
es
mov
push
addl
outsl
sub
stc
xchg
pop
jb
or
push
lods
push
ss
push
xchg
in
je
std
cmp
pop
test
and
pusha
div
test
push
je
xchg
pop
or
frstpm(287
sbb
and
mov
mov
xchg
mov
loopne
int
stc
clc
xor
inc
fwait
push
cmovs
xchg
and
push
adc
in
outsl
aad
mov
scas
jb
mov
adc
ret
iret
or
or
push
lahf
add
out
inc
fldenv
test
push
enter
xchg
lds
lcall
xor
dec
rclb
imul
not
sbb
cmp
movd
and
sbb
mov
stos
sahf
lret
push
pop
cli
rcrl
mov
ret
mov
adc
adc
sbb
inc
inc
xor
push
and
ds
adc
addl
sub
aad
arpl
jecxz
jl
popf
pop
sub
sub
or
fs
rcl
push
pop
sub
popa
test
cld
push
add
lods
and
add
les
out
imul
jnp
cmpsb
cmp
sahf
lea
into
dec
mov
mov
and
mov
aad
jl
cmpsl
jne
loop
xor
sub
and
push
xchg
aad
xchg
je
out
loop
cmp
aaa
std
das
dec
in
push
cwtl
adc
inc
int
decl
jnp
aad
jno
testl
jmp
popf
xor
xchg
cmpsl
lods
out
or
lea
or
mov
adc
jb
dec
lahf
or
aad
pushf
popa
or
int
sub
lock
cmc
dec
pop
outsl
xor
test
dec
push
popf
inc
hlt
fldl
lret
add
inc
sti
adc
repz
into
cwtl
dec
pop
mov
xchg
in
inc
jp
aad
mov
leave
aam
pop
in
jge
ret
mov
sbb
pop
incl
and
push
out
lock
lcall
xchg
adc
mov
in
insb
in
adc
shl
sub
sub
ficoms
and
add
add
or
in
sub
mov
sub
sahf
jl
ss
adc
mov
add
out
aas
jl
cmp
xchg
ja
cmove
and
sub
sbb
popa
jg
outsb
popf
loopne
lods
pop
out
add
inc
mov
cmp
xchg
ret
or
dec
adc
or
mov
xor
ds
lahf
mov
pop
xchg
xlat
loope
inc
jns
cmp
fwait
jle
push
dec
cltd
mov
fnstsw
mov
mov
pop
lret
lock
xchg
or
sbb
lea
call
lock
adc
cltd
mull
inc
fnstcw
inc
out
mov
adcb
loop
fcmovb
pusha
sti
mov
sub
jnp
mov
les
popa
ja
int3
mov
sub
testb
std
out
pop
out
pop
mov
xchg
jecxz
cwtl
xor
daa
bound
mov
push
bound
mov
fs
sbb
fs
jecxz
movsb
push
cmp
hlt
jg
jae,pn
inc
xchg
xorl
sub
loopne
fdivrs
mov
pop
sub
pop
mov
notl
ljmp
mov
cmpl
ljmp
in
adc
mov
cmp
fildl
repz
or
push
fisttps
push
push
popf
cs
push
inc
int3
mov
sub
adc
sbb
fcompl
mov
dec
xchg
dec
pop
cmpsb
adc
pop
das
lods
adc
jo
loop
push
in
dec
fstpt
in
lods
adc
push
outsb
sub
rorb
psubusb
or
insl
adc
loopne
out
inc
cmp
fwait
nop
xor
cmp
out
jns
lods
das
in
xchg
add
aas
rorl
arpl
popa
mov
xchg
outsl
adc
cmpsl
out
sti
negb
xor
int
divl
xchg
out
fwait
stos
test
adc
neg
cmp
ss
jae
mov
push
fiadds
sbb
setp
mov
jp
das
inc
aad
xchg
out
sbb
push
mov
cmc
int
outsb
mov
mov
scas
xor
adc
pop
lret
adc
xchg
sahf
fcoml
add
lods
outsb
jns
inc
xor
mov
mov
jne
jl
fimuls
fimull
and
call
xor
int
xchg
mov
outsl
and
into
xchg
loopne
adc
movsb
loop
dec
xchg
sbb
nop
adc
or
call
lcall
cmp
insb
sub
mov
xchg
je
jecxz
adc
dec
sti
aad
test
mov
loope
enter
cmp
cmc
inc
xor
sbb
std
int3
mov
adc
xor
jmp
lods
adc
sub
sub
movsb
xor
mov
and
in
push
and
pop
jge
mov
xchg
sbb
ret
xor
add
push
adc
mov
sbb
sub
xchg
mov
and
mov
in
cmpsb
adc
mov
push
mov
fcomp
jae
inc
lds
data16
xchg
inc
shl
imul
fimull
mov
into
mov
or
cmc
or
mov
add
clc
decl
pop
testb
dec
scas
xchg
mov
lahf
sbb
xlat
add
iret
mov
and
dec
inc
pop
ja
inc
fs
popf
das
mov
mov
or
jmp
add
mov
daa
xchg
push
cmp
jnp
int
cli
out
outsl
pop
fwait
imul
xchg
cmp
repz
add
adc
and
jns
jnp
out
or
or
add
or
push
sub
jl
adc
cmpsl
pop
int
cs
dec
aad
add
movsb
mov
lds
or
add
cmc
pop
adc
mov
sbb
rorl
lods
pushl
loop
fs
clc
push
mov
dec
xchg
xor
int
les
ja
jb
pop
shlb
xorl
out
testl
stos
mov
repz
push
dec
gs
mov
pop
cs
js
ds
aad
call
xor
stc
out
insb
dec
or
aas
inc
imul
add
shll
add
adc
sub
push
mov
pop
push
lret
add
xchg
push
inc
or
inc
add
push
adcb
xlat
aad
jl
and
xor
cmp
out
aam
or
pusha
sub
sub
sti
subb
movsb
cmp
loope
fidivrs
imul
mov
add
stos
dec
pop
iret
jge
movsl
mov
xchg
aam
iret
stos
adc
pop
mov
ficomps
xlat
sbb
xchg
push
dec
cwtl
fwait
and
movsb
pop
inc
or
or
adc
sbb
add
jbe
push
jecxz
cmp
test
pop
mov
or
into
dec
call
add
cld
xor
mull
bnd
jp
or
fisttpl
aad
add
cmc
cmp
outsb
sub
mov
call
pusha
movsl
loope
adc
outsl
lret
jmp
int3
movswl
rcrl
dec
mov
in
mov
sub
jb
ret
jmp
pop
ljmp
xor
mov
pop
mov
jp
call
inc
in
sub
mov
mov
add
icebp
and
sub
cli
xchg
andl
loop
push
mov
aad
call
sub
jbe
clc
call
mov
and
and
sub
mov
or
stc
xchg
pop
dec
pop
insl
imul
repnz
cmp
jmp
add
leave
lods
shrl
jne
or
divl
scas
jnp
xor
or
adc
int
jl
push
pop
popa
dec
add
and
sbb
jo
inc
call
out
jp
push
adc
mov
sub
cltd
inc
push
icebp
push
push
lea
xor
xor
dec
repnz
or
jns
pop
push
jmp
cmp
in
mov
cmp
pop
fstl
jo
out
or
fists
xor
fists
cmp
in
fdiv
mov
les
imul
pop
rclb
pushf
pop
jp
mov
xchg
adc
xchg
rclb
xchg
jo
call
push
sub
fbstp
add
das
enter
cmp
sbb
push
iret
cmc
xchg
leave
cmp
cld
add
scas
iret
mov
ds
mov
test
push
cmp
mov
mov
cli
dec
scas
test
mov
push
dec
push
jo
mov
mov
je
push
negl
push
push
xor
aad
adc
std
xlat
mov
out
mov
jge
in
push
adc
cmp
mov
and
cs
inc
imul
adc
and
cmc
xor
test
xor
lcall
sti
fcoml
xchg
ffree
movq
cmc
inc
and
fiadds
aad
cmp
imul
popf
cmpsl
or
lret
mov
cmc
xchg
les
pop
cli
stc
mov
push
and
xchg
push
mov
lods
out
xor
or
iret
test
add
aad
pushf
repz
sub
lcall
cmp
mov
jo
scas
in
push
add
faddl
rorb
jp
jle
aaa
inc
jb
dec
jb
push
insl
decl
cmc
out
xor
mov
in
pop
push
outsl
sub
and
pop
and
ja
ja
mov
jle
stos
sbb
popa
jg
push
int
leave
mov
add
cmp
gs
inc
inc
xlat
sbb
testb
jnp
xchg
movsb
cmpsb
cmp
inc
icebp
fs
aad
movsl
scas
popa
pushf
mov
lahf
cmp
mov
mov
mov
pop
push
fistps
push
int3
xor
adc
movsl
add
push
and
pusha
push
and
fistpl
jmp
lods
je
jae
add
sahf
dec
sub
repz
jnp
xor
pop
pusha
inc
mov
jg
mov
xchg
xor
push
cmc
out
fnstsw
lcall
xchg
sub
fildl
jg
ret
mulb
and
jecxz
rorl
test
add
and
fisubrl
and
and
loopne
gs
push
dec
nop
mov
aam
popf
mov
pop
in
pusha
orl
pop
nop
push
repz
lods
fdivl
cld
aam
sti
pop
mov
dec
icebp
push
dec
repnz
fstps
mov
cwtl
out
mov
scas
cmp
sbb
sub
cmp
push
test
fwait
jg
in
aad
pop
je
and
into
sbb
call
push
jnp
xchg
out
cmpsl
or
insl
jnp
mov
and
into
sub
or
outsl
notl
mov
and
xchg
xchg
test
mov
movsb
xchg
mov
sbb
push
stc
or
mov
aad
xor
int3
sub
popa
outsb
clc
pop
sti
std
stos
or
rcrl
sahf
lds
lea
mul
xchg
pop
inc
out
mov
or
lods
xorl
jecxz
or
add
testb
setnp
mov
ffree
cli
in
inc
testb
push
mov
aam
dec
cmc
test
loope
int
scas
jne
mov
mov
mov
pop
outsl
jmp
aad
scas
cmpsl
push
push
test
adcl
sbb
notb
adc
and
jno
int3
cmp
mov
fst
mov
in
dec
xchg
add
jmp
lds
mov
cwtl
popa
xchg
out
mov
jbe
insl
sbb
imul
pop
das
jge
pop
mov
mov
cmp
adc
inc
out
jne
xor
cmc
and
imul
and
xchg
cmp
ret
cmp
sbb
mov
rcrb
into
negb
insl
das
xor
aad
lcall
rol
imul
movsb
cld
add
add
cs
dec
jecxz
mov
fildl
mov
pop
out
aad
mov
das
or
or
sub
shr
cmpsb
xchg
sahf
loop
lock
mov
cltd
and
xchg
push
cs
popf
or
decb
and
xlat
push
fstpt
bswap
jle
push
jne
sub
stc
sti
outsl
std
xchg
dec
mov
imul
sarb
lret
xchg
test
shll
mov
adc
cld
xchg
jle
test
stos
js
pop
pop
or
mov
cmp
cmc
rcrb
push
rcr
mov
das
sbb
cmp
mov
cmp
out
xchg
mov
jmp
jle
xchg
aad
sbb
insl
lods
xchg
js
xor
mov
testb
sti
mov
inc
arpl
pop
xor
or
outsb
cmpsl
dec
stc
jns
into
mov
shrb
and
outsb
jge
stc
cmp
or
call
xchg
pop
xchg
leave
nop
xchg
iret
sbb
sub
stos
fiaddl
mov
jns
call
enter
aam
sti
or
jecxz
xchg
xchg
int
and
ret
stos
popa
cmp
negb
mov
and
cltd
cmp
pop
popf
out
push
cmp
es
cmp
lcall
mov
mov
jle
jmp
xchg
cmp
mov
pop
sub
ds
je
or
imul
clc
pop
jle
push
or
xlat
test
jl
jmp
aas
jmp
push
jmp
jg
sahf
test
sub
je
adcb
jnp
cmpsb
mov
dec
push
jnp
cltd
adc
xor
out
pop
add
adc
mov
je
cld
push
or
xor
rorb
nop
testl
add
shll
mov
fs
movsl
lret
xchg
add
loop
ret
cmpsl
mov
sub
xchg
sub
mov
mov
fstl
sub
test
jnp
loope
or
hlt
jne
and
insb
xchg
in
stc
push
mov
jnp
mov
pop
in
data16
hlt
cmpsl
leave
imul
lods
test
push
sbb
sti
xchg
lods
and
or
jp
aad
mov
aam
pop
and
pop
aad
cmp
and
sub
push
xlat
gs
cmp
xchg
stc
and
push
fs
fs
add
pmaddwd
mov
popf
push
add
sbb
sti
lods
push
pop
mov
addl
pop
loope
lods
xor
cmc
push
mov
add
fimuls
mov
incb
and
dec
push
arpl
and
cli
mov
and
hlt
test
mov
outsl
mov
test
dec
and
adc
xchg
add
aam
out
xor
int
sbb
mov
pop
sub
xchg
jmp
and
adcb
dec
sub
and
les
adc
ret
push
lahf
inc
dec
mov
jns
lock
mov
in
data16
mov
jg
incl
cmc
fstps
jns
loopne
push
cmp
and
push
dec
add
cmp
testb
cmp
dec
pop
xchg
dec
popa
xchg
adc
or
fsubrl
cmp
xchg
or
out
mov
pop
or
and
sbbl
sti
popf
xor
jno
xsaves
int
repz
fstpt
shlb
mov
jp
push
sbb
xor
out
test
or
or
lcall
xlat
je
cwtl
sub
cmpl
pop
js
and
dec
sub
addb
into
cmc
enter
hlt
loopne
inc
in
pop
jb
inc
sub
das
int3
add
mov
loope
inc
loop,pt
mov
inc
inc
aad
fcomps
pop
inc
xor
scas
xchg
add
decl
arpl
negl
aas
xchg
push
ss
pop
js
cmp
lahf
sub
daa
rolb
stos
mov
fs
mov
jmp
rclb
jp
loope
sbb
mov
sub
ret
cli
arpl
fidivl
mov
movsl
sub
or
jae
and
lds
iret
mov
pop
ss
out
mov
add
dec
add
jmp
popl
adc
aam
les
sub
hlt
adc
cmpsl
dec
sti
adcl
inc
sub
push
mov
and
cmp
in
insl
xorl
xlat
cmc
jl
mov
addr16
mov
lret
aad
mov
loop
and
inc
fcmovbe
jle
ret
mov
and
int
xchg
mov
pop
mov
cmp
sub
icebp
imul
mov
xor
xchg
lret
testb
and
test
fsts
cmp
popf
int3
decl
xor
repz
and
adc
outsb
scas
cmc
fwait
dec
imul
sbb
mov
in
push
dec
lods
mull
or
bnd
and
cld
mov
xorl
xchg
pop
nop
xor
add
xchg
mov
sahf
out
push
xchg
xor
btcl
cwtl
test
dec
push
loopne
mov
scas
shll
je
jecxz
xchg
xor
xchg
ss
xchg
push
push
xor
jns
or
dec
push
adc
and
adc
or
mov
ds
repnz
sub
dec
ss
in
cmp
adc
add
sub
push
inc
lock
cmc
sub
js
cwtl
or
xchg
and
daa
cmpsb
xor
mov
les
jle
or
jnp
sub
dec
loope
js
cli
cmp
int
mov
notl
nop
outsb
scas
or
inc
outsl
cmpb
repz
cld
jb
or
daa
push
aad
mov
inc
into
insb
adc
test
sbb
mov
mov
adc
fcoms
add
xlat
inc
fnstcw
hlt
mov
and
jmp
cmc
mov
mov
push
add
loopne
sbb
sahf
push
xlat
fwait
jmp
push
test
imul
or
push
mov
lea
jo
push
lds
add
repz
pop
ds
lcall
push
inc
xchg
xchg
bswap
xor
pop
sarb
add
cmp
cmc
aam
jg
mov
xorl
popa
daa
ss
call
rclb
stos
dec
paddq
xchg
cmp
movsb
in
and
repnz
adc
ret
hlt
cmpsl
lcall
aad
mov
stos
add
shl
adc
xor
xor
int
push
mov
add
adcb
ret
dec
rcrl
and
test
inc
push
adc
add
jp
cld
stc
add
jecxz
inc
mov
andl
movsl
out
stos
xor
out
scas
dec
rep
xchg
xor
ja
cmp
das
sub
push
mov
adc
dec
xor
cmp
xchg
repz
fldl
xor
mov
imul
sbb
out
aad
mov
in
pop
inc
xor
sbbb
mov
cmp
cld
movsb
xchg
push
repnz
aad
push
decl
shrl
aam
inc
cs
add
outsl
push
pop
aad
lahf
rcr
dec
out
push
dec
in
pop
xlat
mov
fwait
test
imul
into
or
and
cmp
jno
sub
ds
leave
inc
mov
aad
scas
aad
jb
jge
pop
push
push
sbb
test
xor
mov
loop
aad
sbb
push
jle
cmp
jo
jp
cmovbe
inc
inc
push
gs
sub
hlt
pop
fcomip
mov
cs
ficoml
or
mov
lods
adc
aad
pop
stos
mov
out
div
shr
xchg
sub
xlat
in
mov
lods
cld
test
scas
dec
ret
ja
negl
mov
out
cs
pusha
shr
cmc
int
repnz
mov
and
aad
push
arpl
or
ja
push
mov
dec
jle
ss
cmpb
loope
scas
aad
jecxz
xchg
inc
popl
icebp
adc
pop
mov
xchg
out
mov
lods
stos
pop
xor
pop
xlat
mov
push
jg
ljmp
cmc
or
loope
rcll
push
mov
mov
mov
adc
adc
cld
ds
lret
nop
push
loope
addr16
sbb
xor
push
fnstsw
fdivrp
aad
pop
dec
lea
xor
test
test
aad
in
dec
mov
fcomip
gs
xor
stos
shlb
or
jbe
popf
adc
xor
fs
jmp
dec
sahf
jge
shlb
pop
inc
clc
notb
popf
enter
dec
rcrl
cli
loopne
mov
aad
add
fwait
dec
iret
cli
xchg
aas
adc
lods
roll
push
jl
sbb
shlb
fmull
push
out
cmp
xchg
psubsb
mov
js
ror
daa
push
cld
cmpsl
pop
aad
jno
mov
dec
jp
imul
or
testl
mov
adc
push
js
add
stos
jae
loope
cmc
imul
cmp
or
push
stos
sarb
hlt
subl
xchg
test
cmp
es
ds
push
inc
jecxz
pop
dec
popf
mov
or
mov
loop
decb
and
aad
xor
jmp
inc
dec
stos
rcll
in
pop
sub
stos
push
into
fs
nop
mov
mov
je
mov
cmpsb
fdivrs
cmp
sub
pushf
push
sub
cmc
das
mov
cltd
pop
int3
rclb
add
aaa
jno
pop
sti
gs
xchg
mov
xchg
or
dec
sub
cmpl
mov
or
and
aad
cmp
jle
cli
scas
or
ret
andl
xor
mov
fiadds
or
aas
lahf
stc
mov
mov
nop
into
adc
push
icebp
sbb
bound
sbb
or
mov
aad
icebp
dec
sub
mov
xchg
aam
jmp
dec
or
mov
es
inc
aad
push
push
sti
mov
data16
loope
sarb
dec
cmp
and
je
add
bound
int3
loope
mov
sub
jbe
adc
push
ja
mov
iret
push
fldcw
outsl
rolb
push
adc
mov
mov
cmp
pop
xlat
pop
dec
scas
sub
popa
popa
out
mov
sub
or
lods
and
mov
dec
or
arpl
cmp
add
in
loop
sbb
jmp
in
adc
pop
aad
outsb
jns
and
dec
sub
add
imul
js
xchg
jmp
out
int
out
sub
xor
imul
jge
cmc
repnz
js
mov
cmp
ds
test
stos
add
ret
mov
cmc
lret
cmpsl
mov
js
push
jecxz
pop
cmp
cwtl
sub
jno
divb
ficompl
dec
inc
clc
xchg
cs
lret
jmp
push
xchg
cmp
inc
jecxz
or
cmp
mov
add
jo
sti
movsl
jmp
cmpsl
sti
test
pop
xchg
cmp
mov
out
shlb
les
movsl
xlat
lods
jne
fsubrp
and
fucom
leave
sbb
mov
out
xchg
and
push
repz
aad
pop
stos
dec
cmp
push
nop
sub
leave
dec
push
mov
jb
push
push
mov
lock
mov
lock
mov
imull
fcmovb
jge
dec
add
shlb
pop
lods
push
cmp
jmp
mov
aad
mov
dec
popf
dec
leave
adc
xchg
fsubl
inc
pusha
add
stos
cmpb
repz
jns
pop
and
popa
dec
cmc
clc
int
xchg
cmp
add
in
inc
int
loope
insl
clc
mov
adc
adc
dec
push
les
push
mov
fwait
mov
je
and
lods
mov
movsl
pushf
push
mov
xor
loope
xchg
dec
jmp
push
pushf
cmp
sbb
int3
cmpsl
xor
jae
insb
mov
mov
mov
xchg
xchg
mov
jmp
loopne
sub
sub
ret
adc
cld
xchg
bound
adc
fisubs
cld
test
cli
dec
cltd
sub
cmp
repz
mov
lahf
adc
dec
cmp
xchg
into
out
adc
ja
sub
out
aad
bnd
rol
jmp
pop
popa
or
mov
jno
sti
repnz
pop
push
dec
jecxz
fildll
or
xor
xchg
lea
into
cmp
and
fs
in
jecxz
jo
sub
dec
lods
in
ljmp
push
addr16
aaa
sbb
mov
sti
mov
dec
push
inc
push
sti
imulb
inc
lcall
scas
fsubs
pop
push
int
cmc
fmull
add
mov
addr16
sbb
jne
pop
sbb
test
mov
dec
sub
int
sbb
test
dec
test
stc
jl
dec
cmp
sub
int
aad
mov
jnp
fldt
jp
std
insl
inc
adc
outsb
xchg
in
out
mov
lds
into
iretw
push
loope
jno
add
adc
shrb
dec
es
xor
test
push
adc
int
cmpsl
mov
clc
pop
mov
jg
xlat
jnp
jl
scas
xlat
adc
add
notl
pop
ljmp
lds
and
movsb
shlb
sub
cmp
lods
sahf
scas
xchg
sbbl
int3
mov
iret
loope
sbb
ror
jno
cmpb
mov
push
stos
lods
dec
push
shll
les
mov
das
jmp
jecxz
std
adc
fnsave
cltd
cmp
push
pusha
and
stos
daa
or
lea
arpl
mov
jle,pt
cmp
nop
iret
inc
jnp
aas
cmc
repz
xchg
inc
dec
iret
mov
repz
cmc
ja
pushf
mov
fwait
cmpsb
inc
push
ret
inc
cwtl
xchg
fidivrl
fists
sbb
fildl
cmc
rcll
out
aad
cmp
rcrl
sbb
jmp
movsl
imul
fimull
pop
lea
mov
push
dec
mov
and
out
ficoml
jge
fidivs
jnp
jb
pusha
mov
xchg
clc
dec
movsb
rorl
pop
xchg
adc
xchg
add
or
in
push
jg
adc
int3
dec
xchg
lahf
xchg
xlat
sbb
adcb
jl
scas
fadd
lock
xor
inc
or
cld
and
dec
sbb
sub
out
xchg
push
loopne
lods
notl
shll
gs
imull
inc
jno
dec
mov
inc
ljmp
shrb
ds
add
cmpsl
ja
xor
dec
pop
test
loopne
imul
jle
mull
loope
jge
and
loopne
icebp
push
and
dec
mov
jne
sti
or
mull
add
push
test
or
pop
inc
imul
scas
test
pop
in
cli
jp
mov
xor
mov
add
inc
cmp
mov
push
cmc
mov
andb
clc
mov
fistps
fcmovnu
mov
pusha
adc
jns
add
adc
ficoms
and
dec
push
jmp
into
insl
arpl
arpl
push
add
ja
clc
cmp
sbb
aad
pushf
push
dec
bound
aam
xlat
cmc
or
gs
outsl
adc
adc
jecxz
hlt
xchg
mov
sbb
aad
push
scas
cmc
test
loope
std
sbb
and
mov
push
mov
and
scas
dec
cmc
das
out
xor
or
push
mov
jae
int
and
cmp
and
orb
in
mov
jg
in
psadbw
clc
push
add
cmp
jo
dec
xlat
in
mov
fnstsw
lcall
xchg
test
scas
bound
js
mov
repnz
add
cmp
mov
stos
xor
pusha
sarl
call
jo,pt
push
mov
and
fnstcw
nop
pusha
inc
pop
add
aad
inc
int
mov
dec
mov
incl
xchg
mov
jns
xor
jmp
mov
sub
stc
inc
fcmovnbe
cli
inc
into
ljmp
sti
jb
mul
out
movb
cltd
cmp
pusha
mov
dec
inc
add
sar
dec
aad
dec
push
loopne
dec
cmp
and
cmp
sub
mov
sbb
jae
insb
out
lods
sub
test
filds
push
sub
imul
pop
cwtl
sti
int
fidivs
fs
dec
sub
in
sbb
test
cmpsb
in
aaa
cmp
jge
fcoml
int
add
mov
push
xor
outsb
stos
adcl
push
sarl
fistpll
xorl
sub
jp
push
mov
test
adc
ret
pusha
int
xchg
or
cmp
mov
fwait
fs
aam
roll
test
jmp
pop
xchg
cmp
scas
fwait
out
das
cli
aad
sbb
mov
lret
aam
popf
lds
mov
push
or
sbb
and
pop
xchg
or
mov
mov
mov
mov
cmpsb
or
inc
ret
xor
fwait
bound
or
and
fstpt
aad
rclb
cwtl
incb
roll
pop
mov
xchg
out
fisubrs
movsl
lods
mov
inc
xchg
lret
lock
repnz
sar
out
cmc
testb
push
mov
lods
inc
push
testb
pop
sub
stc
xor
sub
push
jnp
js
pop
out
paddw
loope
cs
lock
into
lods
jns,pn
sbb
lock
fcmovnu
mov
ds
jmp
in
and
xor
ja
sub
std
cmc
dec
stos
sar
xchg
mov
aas
cli
mov
nopl
iret
lods
sub
iret
in
imulb
jmp
xchg
hlt
jne
xchg
sbb
das
andl
das
repnz
jle
add
pop
push
inc
lods
or
add
popa
push
std
add
xchg
and
sbb
fldt
stos
rclb
add
cmpb
jp
sub
and
mov
xchg
shrl
loope
sbb
jnp
cmc
int
sub
inc
les
adc
jmp
into
cmpsb
das
out
adc
push
and
cmc
adc
movsl
stos
nop
imul
mov
cmp
fistps
rsm
or
xlat
aas
outsl
pop
adc
add
jg
and
or
cmpxchg
push
mov
xchg
sbbb
push
fbstp
jle
xchg
shll
in
pop
nopl
aam
fildll
cmc
and
nop
sti
jecxz
adc
inc
mov
into
stc
adc
mov
push
aaa
out
imul
xchg
loopne
outsl
xchg
push
and
dec
dec
bound
insl
inc
jg
cmp
cli
popa
addr16
push
call
push
mov
test
jmp
in
divl
cmp
sti
add
out
push
and
jae
push
test
xor
push
xchg
xchg
xor
mull
push
mov
in
dec
adc
add
mov
mov
jo
ja
aam
pop
ljmp
and
cmp
push
mov
xlat
into
stos
sub
pop
and
dec
push
mov
adc
stc
dec
sub
repnz
inc
mov
sbb
test
call
sbbl
pusha
cmp
lock
lret
jecxz
pop
add
jge
add
cld
lods
stos
into
aaa
lret
cmp
sub
mov
hlt
lret
roll
jp
xchg
add
jmp
out
shlb
mov
push
push
jnp
sub
mov
stos
add
or
mov
js
lret
or
push
popf
adc
popa
dec
pop
mov
scas
mov
test
dec
jne
stos
mov
mov
test
xor
testb
and
xor
jmp
lock
or
cld
aad
shlb
test
or
mov
jmp
cmp
outsb
mov
in
cmp
push
outsl
jge
add
cwtl
ja
mov
fsubl
psadbw
out
dec
test
fwait
xchg
pop
inc
shrb
cmp
loopne
cmc
in
scas
mov
push
mov
add
scas
xchg
dec
xchg
sub
jl
adc
mov
nop
lcall
ds
jl
aad
pushf
inc
shll
mov
xchg
xchg
scas
push
sub
pop
mov
dec
popf
cmp
lock
jae
push
jg
in
mov
xchg
xlat
jne
mov
pop
notl
and
neg
iret
aad
test
sbb
lods
mov
aad
fisttpl
dec
cmc
xor
fcoms
adc
int3
data16
sbb
push
leave
jl
gs
aad
imul
out
fndisi(8087
mov
jle
rolb
or
push
jmp
enter
movsb
cmp
lret
roll
inc
sbb
add
out
pop
push
and
loop
aad
xor
push
pslld
dec
and
mov
inc
iret
lods
les
jg
xchg
loope
hlt
pop
jl
xlat
xor
mov
lods
fstpl
sub
push
iret
test
cmpsb
inc
mov
aad
sti
push
insl
cli
test
or
add
aad
jno
add
mov
adc
insl
imull
loope
mov
arpl
inc
push
cmc
daa
dec
push
inc
repz
sbb
or
aam
mov
inc
into
bound
add
inc
jo
mov
sbb
popa
add
sbb
test
mov
push
push
nop
mov
and
adc
jo
xor
dec
sahf
jp,pn
stos
push
or
fstl
xchg
nop
mov
lock
mov
pop
daa
ds
test
sub
or
cld
lret
mov
ljmp
sbb
shll
popf
sub
mov
sub
mov
pop
in
push
pop
stos
adc
les
cmpsl
add
push
loopne
pushf
arpl
pusha
or
sub
dec
mov
fs
shr
insb
inc
test
mov
sub
push
inc
stos
adc
pop
dec
inc
in
pop
cmpsb
jns
mov
cs
test
lds
lea
iret
mov
inc
xchg
outsl
jne
inc
jmp
xor
jp
outsl
add
imul
inc
mov
aad
push
cwtl
xchg
lret
xchg
cmc
jno
dec
cli
in
push
fildl
mov
xchg
les
mov
or
adc
dec
lods
pop
mov
mov
jnp
xchg
mov
aad
rcr
jbe
test
mov
call
jge
sahf
popf
fnstsw
add
call
sub
mov
lods
jbe
cltd
rol
test
fcoml
in
lret
mull
jnp
mov
sbbl
sbb
add
repnz
mov
and
ds
push
or
rorb
and
mov
js
jmp
jbe
pushl
pop
or
add
push
mov
cmp
aam
mov
jmp
xlat
outsl
xor
gs
or
or
cld
adc
testb
pop
dec
stc
testb
mov
push
adc
mov
arpl
pop
enter
xchg
or
jl
das
xlat
cmc
sarl
scas
or
mov
mov
data16
cmpb
inc
pop
mov
aam
mov
adc
dec
cmp
jl
lods
add
jecxz
sti
mov
arpl
fistl
inc
push
pushf
out
jp
pushf
cmc
jnp
pop
jmp
pop
sub
jle
dec
mov
mov
les
or
test
jmp
xchg
xchg
testb
pop
xchg
mov
rcl
outsl
mov
fists
sar
sub
aaa
mov
adcl
cmpl
inc
or
cmp
out
cmp
xchg
ret
or
dec
push
aas
dec
xlat
jp
arpl
or
shrb
or
aam
pop
jl
cmp
insl
ss
std
js
fisubs
test
inc
mov
jecxz
sub
aas
icebp
popa
test
jmp
xchg
mov
and
jmp
movsl
dec
mov
aad
and
jecxz
xor
lahf
xor
pushf
xchg
dec
movsl
push
pop
mov
test
sub
inc
mov
sbb
mov
jl
in
mov
int
and
lcall
cltd
out
add
js
pushw
sahf
addr16
cltd
cmpsl
leave
adc
imul
or
pushf
mov
jge
mov
push
or
add
mov
or
lret
mov
xchg
and
jp
push
sub
decl
pop
fidivrs
das
sub
pop
dec
dec
pop
arpl
mov
or
stos
or
lods
dec
push
inc
xchg
adc
mov
addr16
dec
adc
out
fildl
and
inc
or
jmp
xor
dec
cs
add
testb
cmp
popf
bound
mov
jecxz
mov
add
test
cmp
xchg
lods
in
int
mov
lods
pop
xlat
and
scas
adc
push
xor
xchg
rcrb
hlt
stos
out
mov
je
por
sarb
lea
pusha
je
cltd
lock
sahf
js
pop
mov
jmp
xor
xchg
aad
xchg
mov
cwtl
inc
inc
cmp
rcrl
mov
pusha
add
pusha
fcomps
mov
stos
dec
filds
mov
test
fwait
mov
fidivs
adc
ss
or
adc
test
aaa
sti
mov
into
int3
dec
lcall
adc
das
xlat
mov
mull
je
mov
dec
pop
mov
inc
mov
cs
dec
out
in
mov
inc
mov
jg
mull
mov
cmp
add
sbbb
lods
cli
push
call
in
lods
push
sar
notl
inc
movsb
cmp
cmp
sbb
imull
cmp
mov
es
movsb
mov
sbb
enter
in
cwtl
sahf
imul
push
inc
js
out
sti
cli
in
cmp
add
and
or
outsb
adc
aaa
pushf
pop
push
dec
cmp
out
inc
xchg
push
xor
lods
aad
xor
in
lds
mov
xor
pop
fwait
scas
inc
xchg
lret
std
push
int
popf
sub
jno
and
jmp
movsb
outsl
loopne
gs
jo
cmp
cmp
dec
xchg
fcmove
rcll
stos
mov
bswap
push
jo
cltd
dec
div
mov
jae
sub
or
dec
imul
lret
es
data16
mov
jl
xchg
addl
and
jge
rcl
mov
mov
mov
pop
rcl
pop
adc
xchg
loopne
pop
in
and
popf
mov
lods
outsb
out
adc
andl
push
nop
and
inc
push
int
push
cmp
out
int
cmpsb
scas
push
add
xchg
cmpsl
movb
aam
ret
jecxz
lea
pop
pop
nop
scas
or
jge
cmc
movsl
xchg
xchg
push
dec
rcll
adc
mov
stc
imull
ss
fimuls
lret
xchg
test
gs
inc
inc
cmp
lods
inc
idivl
dec
out
mov
xchg
push
js
mov
mov
jmp
mov
std
iret
gs
dec
test
aad
adcb
dec
inc
stos
cmp
les
js
rcrb
jnp
mov
xor
aam
or
or
pushl
xchg
inc
xchg
pop
jp
paddd
push
xor
aam
aad
data16
mov
lock
fistpll
inc
das
jne
cmp
cwtl
mov
out
stos
sbb
lock
test
jg
gs
lods
lea
pop
mov
int
mov
xor
push
pop
sbb
lds
mov
lret
ds
ljmp
ds
inc
push
and
lea
out
inc
aad
pop
scas
repz
inc
mov
cli
mov
cmp
adc
pop
hlt
xlat
jmp
mov
jp
adc
xchg
xor
jb
jp
je
scas
orb
jae
pop
xchg
lret
icebp
or
gs
and
and
icebp
and
or
outsb
jge
mov
pop
jb
nopl
or
add
push
in
add
stos
push
cmp
repz
push
test
arpl
cmc
nop
and
cli
hlt
loopne
sub
sub
and
cltd
fnsave
push
jns
in
rcr
ret
cli
call
call
pop
icebp
into
cmc
roll
mov
jns
add
sbb
push
aas
fmull
dec
outsb
adc
inc
addr16
cmpsl
pop
idiv
jnp
faddp
xchg
cli
lods
lds
inc
loopne
sahf
jns
popa
jge
in
cltd
cmpsb
jo
mov
adc
or
add
xchg
xchg
cmp
and
into
adc
repnz
jg
xchg
adc
loope
aad
add
inc
mov
mov
or
aad
shr
push
push
jns
scas
mov
xchg
xor
fst
fxam
movlps
pop
mov
call
mov
mov
jne
dec
jmp
fwait
cmpsb
xchg
stos
lock
add
add
mov
dec
jle
fs
insl
outsb
adc
sub
pop
mov
filds
sbb
in
and
mov
sti
pop
es
or
push
mov
jg
dec
xchg
popa
filds
out
maskmovq
negl
jbe
test
imul
push
sarl
fldl
cmpsl
enter
cmp
mov
and
push
sbb
and
cmp
xchg
push
iret
gs
add
outsl
mov
repnz
push
xchg
adc
push
das
js
lds
mov
les
ss
mov
adc
lahf
push
cmc
adc
ljmp
mov
neg
rcll
and
push
setle
push
shrl
or
cltd
fisttps
repnz
adc
loop
pop
call
sub
leave
cmc
mov
pop
mov
jecxz
cmp
sub
add
push
push
std
pop
jnp
sti
into
add
mov
mov
in
and
mov
pop
repnz
cmp
jne
lret
std
iret
leave
or
jns
std
pop
sar
pop
inc
stos
cld
pop
add
mov
lret
and
cmp
adcl
fsub
ljmp
iret
test
popa
in
out
jg
aad
sbb
push
mov
dec
cmpsl
movsl
sahf
adc
test
jae
or
sbb
jns
adc
cmc
or
cmc
push
pop
divb
decb
test
scas
cmp
sti
das
pop
lea
sub
mov
mov
xchg
loop
movsb
mov
fisubrl
iret
adc
jo
test
inc
out
push
fcomp
ja
sbb
adc
fnop
mov
lea
lods
sub
pop
fucomip
jmp
outsb
sub
mov
aad
fmull
jge
dec
jp
rcrb
in
push
rolb
sub
mov
orl
cmp
and
and
jp
xchg
dec
or
loopne
mov
fidivl
push
xchg
mov
cmc
cmp
xor
add
or
xchg
sti
pusha
fisttpll
inc
ja
cmpb
jns
jns
xlat
lret
scas
pop
cmp
push
insl
cs
dec
xchg
repnz
out
cmc
rol
cmp
std
outsl
cwtl
xchg
sub
xorb
cmp
sbbb
imul
jge
inc
adc
add
xchg
mov
arpl
cwtl
jle
sub
int3
int
or
or
jge
cmp
ljmp
je
cwtl
pop
lahf
cmc
push
cmp
aam
popa
push
inc
jle
cmp
push
aam
les
adc
sub
push
jecxz
mov
test
or
pop
in
cmc
pop
xchg
and
xor
sahf
mov
cmpsb
in
stos
xchg
lret
lcall
nop
imul
ja
jnp
repnz
loopne
pop
add
mov
outsl
aad
stos
fucomi
xor
sub
xchg
aam
into
cmc
xchg
daa
push
pop
movsb
in
mov
out
in
iret
inc
repz
rclb
sbb
dec
mov
lret
xchg
cmp
cli
push
sub
fldcw
loope
imul
pop
loope
jmp
pop
jbe
mov
mov
movsb
outsb
popf
pusha
xor
or
and
mov
setl
inc
int3
mov
pop
sbbb
adc
mov
adc
cmpsl
mov
mov
xchg
jp
xor
into
aad
lds
and
out
lods
insl
add
jae
int
mov
jp
imull
aad
mov
cmpsb
mov
and
lock
aaa
cld
fisubrl
push
sbb
jbe
repnz
movsb
mov
testl
lcall
add
jecxz
andb
xchg
orl
int
add
fsubrp
in
mov
jl
fisubrs
aad
stos
jno
dec
orl
test
cmp
adc
movsb
enter
sub
pusha
pushf
sahf
shr
xor
je
mov
hlt
inc
in
pop
orl
mov
inc
in
lret
mov
or
xchg
lcall
nop
jnp
add
lods
jmp
dec
and
aas
mov
jmp
cmpsb
mov
lcall
mov
adc
dec
das
mov
hlt
xchg
xchg
cwtl
stc
nop
lods
or
int
sub
in
jle
ja
movsb
or
clc
dec
xchg
push
aad
fldl
cmp
mov
repz
out
add
sub
cmp
add
subps
lret
sub
adc
mov
fmulp
scas
stc
jg
in
add
test
sahf
aad
mov
push
imull
iret
or
lods
out
push
xor
mov
adc
movsl
jecxz
add
mov
mov
aad
sub
out
mov
rorl
dec
movsb
sbb
adc
push
int3
lods
lahf
idiv
jmp
icebp
adc
out
sub
cmp
jp
mov
cltd
jns
iret
mov
leave
add
mov
sti
into
test
js
mov
xor
int
div
cltd
sbb
jmp
test
cld
add
rcr
mov
mov
aad
out
aam
pop
dec
int
sbb
mov
push
mov
or
jb
mov
das
cmp
fstl
sti
int3
add
mov
mov
and
xchg
cmp
or
shr
cwtl
sub
jne
imul
int
pop
cmp
insl
add
or
sbb
test
outsb
pop
and
mov
cmp
inc
push
out
iret
adc
sbb
lods
jl
inc
xchg
sub
pop
xchg
jge
js
fwait
add
aad
push
jge
mov
push
dec
mov
sbb
scas
or
sbb
imul
cmp
add
xchg
insl
int
xchg
pushf
mov
mov
push
incl
aad
movsl
xchg
adc
ljmp
jo
testl
pusha
cli
mov
pop
or
iret
je
add
jle
mov
push
mov
jecxz
invd
jmp
sbb
out
mov
xchg
jmp
push
adc
pop
aaa
out
call
clc
aad
adc
sbb
sbb
imul
in
outsb
cmc
sub
js
loopne
add
not
mov
push
adc
ljmp
pop
nop
jge
lahf
mov
push
das
mov
inc
in
out
or
cld
mov
adc
sbb
jo
dec
outsl
rolb
mov
das
test
out
in
xlat
dec
loope
add
xlat
roll
dec
mov
scas
sbb
rolb
dec
sub
push
inc
jg
and
dec
mov
clc
push
mov
and
mov
xchg
aad
xchg
out
dec
mov
cmpsb
push
fs
mov
cmp
out
push
lods
in
push
mov
lret
inc
adcb
mov
inc
push
and
adc
jno
adc
push
jo
mov
add
mov
pop
mov
dec
int
adc
dec
test
dec
xchg
pop
jge
rcr
scas
fs
fistpl
jb
push
call
loope
cmpxchg
inc
add
das
sub
lahf
xchg
bound
dec
sbb
inc
mov
stc
adc
repz
add
nop
cmpsl
jp
or
cmp
jle
mov
push
inc
jbe
pop
xchg
or
cmp
jle
sub
add
divb
push
mov
sub
and
xor
inc
push
fldt
leave
fs
aad
jnp
dec
dec
fstl
fistpl
add
mov
dec
xchg
addr16
mov
in
lock
push
sbb
int
test
adc
ljmp
push
xchg
inc
movsb
cmp
add
aam
ret
sbb
rcll
xor
scas
out
dec
dec
xchg
aas
and
repz
rcrb
es
das
cltd
jp
aad
mov
xor
rcr
fisttpl
jge
pushf
cmc
jmp
pop
cmp
pusha
mov
arpl
inc
nop
call
movsl
jg
inc
in
imul
ja
subb
mov
or
lahf
out
dec
pop
enter
test
adc
jb
cmp
gs
xchg
aas
fnstenv
loop
mov
and
cmp
outsl
test
inc
sub
adc
sub
cmp
sbb
mov
xchg
in
stc
or
leave
test
outsb
es
mov
cmp
adc
ret
movb
sub
push
sbb
aad
fisttpl
adc
or
psubsb
and
repnz
jl
out
sub
mov
std
sbb
adc
js
in
cmpsb
ja
test
xchg
dec
cmpsl
jnp
mov
push
push
add
dec
sub
mov
sub
push
cwtl
mov
ret
stos
add
or
stc
pop
aad
test
imulb
cltd
push
popa
jge
jle
test
pmuludq
pop
or
xchg
imul
jmp
imul
adc
mov
xchg
cmp
out
jp
push
xchg
addr16
jmp
or
lods
or
ja
mov
clc
mov
dec
xchg
aam
std
call
add
adc
add
xor
sahf
bound
push
aad
xor
and
mov
mov
mull
int3
iret
mov
sti
repnz
xor
xor
or
pop
or
shl
fisttps
mov
popa
adc
dec
outsb
cmpsb
cld
out
inc
inc
push
frstor
mov
stos
negl
inc
jmp
sub
mov
lods
das
fsubr
jnp
loope,pn
xchg
jg
test
mov
or
test
sbb
inc
mov
inc
clc
xchg
stos
cmc
dec
orb
and
shlb
jge
cmp
pop
pop
sti
fldcw
in
lahf
xor
inc
sbb
std
pop
lahf
dec
xchg
jp
inc
adc
dec
punpckhdq
sahf
lcall
je
pop
mov
or
imul
fwait
and
mov
sub
push
nop
push
je
jmp
rcrb
push
xor
aaa
aad
pop
push
sti
decb
jl
out
cli
ljmp
lcall
cmp
iret
jmp
mov
mov
or
clc
cmp
fiadds
ret
xor
test
add
xor
inc
leave
or
cmp
mov
sbb
push
sahf
adc
mov
sub
rorb
and
xchg
fs
fsincos
jmp
pop
cltd
and
dec
lock
imul
pop
sub
pop
cli
cltd
sbb
adc
hlt
daa
jl
shll
jmp
ror
push
mov
mov
int3
loop
scas
loopne
mov
push
rcr
mov
inc
add
add
mov
jno
fbstp
add
aaa
push
inc
jno
call
stos
adc
or
pop
div
pop
daa
or
cmp
dec
jnp
aad
lret
dec
cmc
testb
stc
sahf
mov
movsl
cmp
adc
rep
and
shlb
cmpsb
ds
cmc
mov
jb
sbb
lea
pop
mov
rorl
ja
lods
cmpsl
sub
and
dec
push
aam
sub
xchg
ja
imul
mov
xlat
push
call
or
call
mov
rolb
cmp
rorb
cmp
lahf
cs
lret
xor
or
into
adc
mov
inc
and
fstpt
dec
cli
dec
out
in
push
dec
jnp
mov
mov
cmp
les
lcall
mov
xchg
sbb
jmp
pop
jecxz
sbb
out
cmc
adc
jns
add
add
xor
pop
in
push
pop
ljmp
lock
and
es
dec
testl
cmpsb
sub
std
dec
repz
dec
or
out
dec
out
jno
ja
pushf
pop
cmc
mov
mov
xchg
fldcw
iret
adc
loop
mov
mov
inc
xchg
jae
loopne
add
cmp
add
sarb
lahf
out
cs
cwtl
adc
cmc
pop
push
inc
mov
out
jle
jge
lods
pop
hlt
sahf
mov
dec
mov
xchg
jo
data16
rcll
and
pop
js
sbb
adc
push
dec
jge
pmullw
movsb
out
rorl
or
sbb
pop
repz
add
aad
popf
pop
ret
jmp
rcrb
cmp
test
push
add
add
into
push
in
decb
scas
adc
and
std
cld
pop
das
xchg
jl
fs
aad
scas
lock
inc
mov
test
lds
les
in
add
repz
sti
cmp
repz
jb
push
movsl
dec
fiaddl
addr16
cmp
sbb
stc
push
fistl
vmulss
movsl
adc
ds
into
out
cmp
gs
mov
test
icebp
dec
loope
and
loopne
faddl
pop
add
mov
divl
cmp
pop
packssdw
xlat
aad
mov
pop
push
nop
mov
popf
inc
test
jge
dec
movsl
aad
mov
and
jge
mov
fiaddl
shll
pop
into
cmc
push
cmp
addb
and
daa
cwtl
popl
aad
pop
rorb
mov
push
mov
fisubs
test
and
jne
std
loopne
push
iret
push
lds
jbe
iret
divl
jae
mov
pop
fwait
out
xchg
mov
aam
mov
jecxz
push
push
notl
outsl
es
arpl
add
jnp
cmp
add
cld
dec
int
sub
sub
daa
pop
aaa
jns
add
fistpll
loopne
push
ds
int
movsl
out
pop
loope
and
out
mov
out
dec
imul
gs
out
fisttpl
mov
fmul
push
xor
emms
pop
fcomps
inc
mov
lahf
xchg
inc
cs
jo
lret
fwait
xlat
call
insl
fidivrl
rorl
loopne
or
imul
in
fistl
sub
das
nop
ffree
mov
cs
cmc
in
pop
rol
es
mov
cmp
repnz
and
and
dec
xchg
jne
mov
add
sub
lret
xchg
push
sbb
lcall
mov
mov
mov
aad
and
je
lcall
mov
cmp
mov
xchg
mov
rcrl
xchg
cmp
mulb
jns
lahf
enter
repz
jmp
das
sti
leave
insl
mov
sbb
push
sbbb
ret
pop
sub
add
add
iret
mov
shrb
cmp
mulb
sbb
lods
movsl
shrb
add
jge
xchg
add
push
fcomps
out
cli
cmc
and
sub
popa
xchg
test
test
or
and
dec
insl
pop
jecxz
mov
cmp
xlat
adc
out
and
bound
wbinvd
mov
push
cmp
push
xchg
rol
xchg
jns
iret
test
mov
add
sbb
mov
fimull
push
add
imul
cli
mov
sub
pop
clc
sbb
push
push
sbb
or
xchg
aad
push
fbstp
hlt
aam
pop
lods
adc
xchg
andl
fucomip
cmc
fwait
dec
fidivrl
jp
jae
adc
push
jge
sahf
test
xchg
pop
push
idivb
dec
pusha
adc
sbb
ds
sub
cmp
call
jecxz
jnp
aam
daa
cmp
testb
clc
icebp
pop
or
fwait
in
jbe
ja
loope
pop
idivb
in
in
pop
lods
shll
ljmp
int3
add
shrl
sbb
fisubrs
pop
stos
xchg
test
mov
pop
loope
imul
inc
cmpb
bound
enter
js
sub
push
daa
jnp
push
mov
adc
sti
fldcw
sub
lret
cmp
cmp
fwait
in
mov
push
dec
mov
pushf
fstps
mov
jnp
lods
notb
mov
adc
cli
ret
pop
push
fistps
push
sub
daa
pop
je
stos
pop
outsl
xor
xchg
and
cmc
push
mov
popa
inc
mov
roll
sbb
shll
out
sub
sub
imul
xchg
add
xchg
loop
lahf
or
pop
push
jns
rcr
iret
mov
xor
cmp
xor
scas
add
ret
and
lods
cmpsl
jg
adc
sub
lods
or
mov
cmp
cltd
btc
xor
cltd
sub
in
or
or
subb
mov
or
cmp
dec
sbb
xchg
add
mov
lock
ja
fcoml
xor
iret
and
cmp
jle
jle
insb
mov
mov
call
popa
ret
mov
gs
jmp
jge
sbb
js
in
dec
and
repz
in
cli
aas
dec
sub
or
cli
cmp
insb
int
mov
mov
mov
xchg
cmpl
sub
fsubrl
add
sti
int
lcall
js
pusha
jbe
decb
mov
push
popa
jno
ret
popa
pushf
rorl
nop
stos
pop
cld
inc
mov
mov
mov
cmp
adc
jmp
ds
fdivrl
cmp
stos
test
or
sbb
mov
ror
aad
dec
rcrl
xchg
jmp
aam
push
mov
cs
push
int
in
iret
and
pushf
fnstsw
push
out
or
jae
pop
test
hlt
dec
out
in
push
rcl
jns
mov
pop
sub
shrb
and
adc
mov
test
inc
negb
lret
cmp
aam
sub
and
mov
aad
fs
jl
es
call
imul
push
dec
mov
sub
xor
imul
cmp
sbbb
mov
insl
jb
fcomps
sub
xchg
lods
sub
popf
sbb
jmp
int
imul
sub
loopne
imul
sbb
add
imul
ss
call
adc
sub
iret
out
push
in
sub
sub
jl
cwtl
scas
lcall
outsl
cmp
adc
jb
xor
sbb
or
popf
fmuls
or
mov
lods
outsl
nop
clc
arpl
dec
lds
cld
lds
mov
pop
mov
xchg
imulb
pusha
adc
xor
xchg
jg
inc
sbb
fucomip
fnstsw
insb
aam
cmc
ficompl
and
mov
aad
into
push
push
xchg
rorl
jbe
jns
in
imul
scas
lods
js
pop
call
lea
popf
cmpsb
adc
dec
stos
push
and
std
outsl
or
xchg
push
mov
pop
dec
mov
ljmp
std
adc
test
into
movsl
or
cltd
outsb
jns
and
movsb
xchg
mov
cmc
mov
pusha
repz
cmp
out
dec
mov
aad
mov
out
xchg
scas
popf
negl
neg
xchg
imul
mov
dec
movsl
mov
xor
sbb
sbb
mov
inc
or
in
mov
dec
add
xchg
int
mov
fildll
pop
int3
cmp
shl
ficoms
addr16
or
jmp
lahf
mov
icebp
pusha
ret
sarl
jmp
pop
push
cmp
fiadds
pop
push
dec
jae
and
test
cmp
addr16
mov
dec
xchg
mov
jecxz
imul
mov
mov
xchg
pop
in
es
bound
shll
mov
aad
clc
pop
mov
pop
test
inc
and
pushf
jne
push
icebp
psubusb
or
pusha
add
ds
jge
xchg
xchg
mov
push
add
jnp
and
cmp
dec
dec
shlb
pop
or
call
popa
es
shrl
lret
int
lods
push
mov
jl
adcb
mov
sbb
aaa
jl
mov
dec
mov
aad
sub
xchg
inc
lock
cmp
notl
ljmp
enter
cld
jmp
pushf
aas
ret
fbstp
cmp
sub
jne
and
dec
mov
sbb
enter
xchg
rcrb
jae
jmp
cmp
fucomip
xchg
dec
pop
cmp
test
sub
mov
lock
lahf
lods
xor
pop
mov
jns
add
cmc
mov
lds
les
je
inc
jg
scas
mov
test
push
xchg
xchg
pop
clc
repnz
pop
addr16
jns
push
cmp
adcl
out
in
jg
aad
notb
outsl
call
scas
test
andl
std
mov
pushf
mov
dec
xchg
ljmp
data16
insl
cmp
jge
test
out
test
fistpll
dec
aas
xchg
out
test
mov
jecxz
les
jb
ss
fistl
iret
cmp
stos
jge
or
xchg
into
xchg
lock
mov
in
into
aad
in
push
movsl
xchg
mov
mov
ljmp
adcl
push
out
xor
filds
arpl
cmpsb
call
cmc
sbb
subb
dec
repz
inc
sbb
push
pop
fisubl
pop
xchg
mov
mov
es
bound
pop
das
mov
mov
mov
imul
xor
stos
xor
cltd
outsl
xchg
lock
mov
dec
popf
mov
mov
dec
mov
leave
lret
enter
sbb
int3
mov
test
cmc
dec
rolb
xor
pop
fidivl
jb
mov
out
decl
cmp
jge
imull
and
ja
jbe
inc
jecxz
cld
mov
cmc
or
shlb
mov
xchg
test
inc
call
push
enter
and
imul
cmp
rorb
or
inc
addr16
jl
fmul
inc
adc
dec
pop
or
mov
stos
cmp
cmc
leave
outsl
inc
aaa
loope
dec
mov
popf
mov
repz
fisubrs
add
lcall
aad
sbb
out
pop
and
pop
lds
mov
loope
xchg
adc
push
stos
jmp
jmp
and
add
dec
or
test
fisubs
into
dec
sub
aad
fldt
ds
mov
repz
and
and
aad
dec
fmuls
xchg
out
mov
sahf
insb
int3
adc
or
cwtl
das
les
setne
ret
shlb
shrb
lods
push
push
rol
orb
into
out
sti
dec
mov
lock
mov
incb
jl
nop
adc
and
mov
pushf
pop
stc
dec
rcll
or
dec
xchg
mov
rorb
adc
adc
cli
mov
sti
inc
pop
hlt
imul
or
xor
push
das
mov
jge
push
sbb
in
jge
mov
push
call
imul
xor
imul
sbb
call
and
jecxz
ja
js
into
insb
dec
pop
aam
mov
addr16
aam
lods
mov
pop
outsl
jns
aam
data16
jno
out
je
push
jl
dec
fiadds
cmp
ljmp
mov
xchg
shll
popw
inc
stos
adc
mov
cltd
and
pop
jl
ret
mov
subps
aad
sub
imul
xlat
and
dec
cs
arpl
pop
bound
mov
adc
mov
subl
push
add
aad
cmp
repnz
mov
and
mov
leave
inc
pushf
repnz
mov
and
jnp
sahf
into
cmp
and
data16
mov
pop
mov
fsubs
inc
xor
js
jbe
lods
mov
dec
enter
pop
sbb
jns
push
pop
testl
dec
std
push
loope
lods
wrmsr
push
stos
xor
cmpsb
add
dec
push
cltd
dec
into
or
and
xchg
sub
jmp
pop
mov
xchg
out
and
xchg
test
sub
popf
mov
mov
xchg
mov
or
lahf
jb
mov
popa
rolb
popa
mov
jmp
xchg
add
sub
inc
fstps
cmp
adc
cmc
jg
and
ret
inc
jg
pushf
rol
inc
mov
pop
arpl
sbb
std
cltd
and
int
xchg
lret
lret
test
lret
cmp
cmp
andl
mov
fwait
and
popa
rorl
sar
mov
cmp
movsb
mov
or
cmc
mov
xchg
jns
loopne
lock
iret
xchg
sub
fwait
leave
std
scas
dec
loop
es
mov
and
je
sbb
mov
nop
sahf
mov
sar
scas
dec
aad
lock
in
fisubl
dec
mov
stos
lods
sub
fnstsw
pop
outsl
xor
sub
xchg
or
dec
xchg
mov
iret
aaa
adc
mov
mov
jb
jno
jns
popa
inc
ret
adc
into
mov
mov
cmp
push
ss
push
mov
aad
or
test
jnp
fistps
xchg
cmpsb
ss
mov
jne
and
jne
mov
dec
xor
rcrb
or
dec
inc
dec
mov
fucomip
pop
mov
out
xchg
cmp
decb
movsb
lods
ss
mov
outsl
out
mov
dec
imul
out
insl
pop
xor
outsl
pop
jmp
out
xchg
cmp
mov
jmp
lea
cs
fcompl
xchg
add
stos
jns
fstl
movntq
aad
push
dec
xchg
inc
int
pop
xchg
add
dec
arpl
popf
cmp
fiaddl
xor
mov
subl
std
sub
or
or
push
dec
mov
sbb
aam
stos
cld
sarl
and
pop
jne
mov
push
sub
push
out
fidivrs
jge
or
in
std
mov
sbb
mov
fcmovbe
and
fwait
idivl
movsb
add
xchg
popf
push
out
mov
jno
jmp
into
and
das
ret
out
push
mov
ljmp
lods
fsts
jno
inc
pusha
or
mov
std
and
sbb
lahf
lahf
shll
stc
test
sbb
pop
dec
pusha
inc
int
mov
out
cltd
jge
gs
xlat
faddp
push
test
xchg
push
in
lcall
mov
or
dec
dec
mov
pop
sub
push
or
jmp
insb
aaa
lds
or
daa
jnp
inc
add
mov
testb
je
cmp
out
cmp
fidivrs
cmp
outsl
and
movsl
outsl
or
xchg
ds
arpl
movsb
jl
inc
inc
data16
jns
popa
sub
inc
clc
jle
sbb
ljmp
mov
arpl
push
icebp
xchg
mov
lods
sbb
adc
inc
pusha
mov
xor
push
jmp
cmp
js
mov
push
mov
mov
push
pop
cmpl
stos
xor
mov
rclb
mov
xor
js
scas
pop
addr16
mov
push
test
int
mov
out
and
das
sarb
dec
clc
iret
inc
cmpsl
cmp
pushf
into
inc
adc
xor
dec
lods
inc
push
lahf
cmpsl
jmp
xchg
jno
gs
aas
or
not
jl
push
mov
and
cwtl
xorb
es
cmp
fs
pop
xchg
fcmovbe
xor
add
or
cmp
jp
and
ja
cwtl
or
flds
movsl
push
clc
add
fs
jp
xor
and
aas
call
fidivs
stos
je
adc
jmp
adc
and
dec
pusha
or
in
out
test
xlat
test
cli
clc
or
pop
enter
adc
dec
mov
adc
push
ficoms
cmpsl
ljmp
stos
cmp
cmp
insl
xchg
mov
popf
jmp
filds
mov
mov
and
pushw
dec
in
sbb
fldenv
xchg
cmp
ret
push
and
mov
and
loopne
shl
mov
rclb
or
xchg
jo
setb
lock
adc
xchg
lret
in
mov
lods
fisubs
dec
xchg
adc
mov
cmc
and
ficoms
add
jae
out
scas
cmp
xor
scas
outsb
adc
out
or
inc
mov
cmp
fisttpl
xchg
test
pop
call
cmp
or
mov
cmp
mov
jp
or
pop
testl
mov
fistpl
call
stos
repz
pop
sbb
pop
ja
rorb
push
sbb
pop
sar
mov
dec
or
cltd
jl
movl
cmp
ret
into
dec
push
mov
iret
lret
mov
sti
xor
imul
push
sbb
aam
add
repz
fwait
aad
mov
aas
pop
bnd
pop
adc
dec
dec
arpl
mov
sti
sti
mov
rcl
xchg
call
movsl
push
dec
aad
cmp
push
and
adc
movsl
pop
or
adc
test
bound
dec
punpckhwd
fwait
arpl
fwait
in
test
xchg
mov
cmp
outsl
daa
dec
into
add
cmp
hlt
and
ja
and
lcall
int3
xlat
aas
testl
icebp
xchg
or
add
mov
popf
adc
or
xchg
jno
mov
jge
sub
adc
cmc
int
sbb
or
xchg
cmp
dec
aad
adc
pop
enter
sbb
loopne
aas
pop
dec
or
mov
stos
mov
aad
mov
test
lods
push
stos
xor
aad
cli
xchg
dec
cmp
xchg
jns
movb
mov
jmp
or
mov
pop
and
xchg
sbb
mov
ret
xchg
add
mul
push
dec
les
cmp
dec
or
inc
push
std
add
xlat
popa
dec
stc
fdivs
ret
jl
or
sbb
repnz
pop
aas
sbb
xchg
mov
and
mov
jae
push
mov
lods
xchg
sbb
adc
inc
pop
int
or
adc
call
test
or
and
dec
dec
push
popa
in
push
pop
xchg
jp
or
cld
add
fcoms
and
or
cmpl
and
xor
and
add
sti
loope
and
dec
push
sbb
out
cmp
and
sub
stos
mov
and
xlat
stc
push
lea
add
stos
imulb
test
movsb
cld
add
lock
ret
nop
mov
fisubrs
inc
aad
rol
push
xlat
out
ja
repnz
mov
jb
add
push
sub
inc
in
sub
cmc
out
xor
test
arpl
cmp
mov
stc
shlb
scas
aad
adc
xor
daa
sbb
adc
mov
mov
xor
loope
jl
jb
daa
movsb
xchg
jl
dec
push
xchg
or
xlat
mov
fmull
loope
cmp
and
push
fs
xor
xchg
in
pop
cmpsb
dec
and
mov
sbb
mov
or
rorl
stc
xor
add
inc
test
mov
mov
sub
push
and
aam
inc
jb
mov
jno
adc
push
aas
outsb
fmuls
rep
mov
mov
call
lcall
add
fdivs
pusha
rol
adc
dec
cmc
sar
hlt
out
popf
lcall
nop
out
jb
jmp
pop
inc
in
mov
out
pop
jmp
xchg
inc
out
stos
mov
adcl
xchg
jmp
add
dec
loop
dec
dec
xor
loope
push
aas
xchg
sub
sub
adc
rcll
mov
mov
jae
adc
in
scas
out
rol
dec
add
popa
fstpt
push
adc
xor
xor
cli
dec
sub
push
mov
jmp
mov
out
dec
push
dec
cmp
repz
lcall
test
out
jne
mov
jg
mov
bound
mov
andb
sbb
pop
cwtl
hlt
adc
pop
out
add
fldt
sub
mov
lret
loope
jo
push
cmp
in
xchg
mov
sub
add
mov
dec
mov
js
pop
push
or
cwtl
mov
push
lahf
std
adc
test
or
cmp
rorl
and
lret
inc
adc
mov
sub
xchg
clc
sub
nop
cld
mov
lods
jo
icebp
andb
idiv
not
xchg
xor
ret
push
dec
push
pop
jbe
int
fnstcw
cmpsb
andb
inc
insl
xor
mov
mov
inc
sub
fnstcw
cmp
repz
jns
pop
mov
sub
inc
int
xchg
loope
push
dec
mov
es
rorl
xor
dec
xchg
or
int
pushf
andl
add
out
and
add
or
int3
inc
push
jmp
int
aam
lret
out
std
inc
jge
stos
popf
popa
mov
mov
inc
and
dec
sti
xchg
and
out
xorl
cmc
hlt
mov
or
and
and
mov
dec
xchg
mov
inc
mov
loope
mov
cwtl
push
mov
dec
mov
test
mov
lods
cmp
mov
mov
or
idivl
aam
mov
insb
jmp
cmp
clc
ss
xor
cmpsl
or
add
jg
xchg
pop
pop
inc
jge
clc
cli
repz
jns
daa
int
or
outsl
mov
mov
call
xchg
mov
xor
std
aad
sti
sub
push
and
xlat
xchg
xchg
insl
adcl
sti
mov
jmp
push
pop
fnstcw
cli
jge
setp
aad
xchg
xor
jnp
pop
inc
std
aas
sbb
lds
jb
popl
cmc
stc
dec
lods
adc
xchg
inc
sahf
push
lret
ds
scas
adc
inc
aad
les
lock
mov
mov
mov
std
fsubl
jge
sub
jns
sbb
jne
stos
inc
pop
idivl
jp
pusha
data16
nop
test
mov
cmc
xchg
std
sub
stc
popa
in
pop
mov
shrb
mull
pop
idivb
dec
cli
push
adc
jmp
into
into
and
xor
sbb
out
mov
push
int
stc
xchg
xlat
out
adc
in
mov
roll
jnp
addb
subb
lds
xchg
lahf
movlps
dec
or
or
out
mov
dec
and
out
xchg
je
dec
jbe
sahf
aad
inc
fstl
or
imul
mov
or
sbb
lahf
stc
push
rep
sub
jne
mov
mov
xchg
lds
jmp
outsb
adc
mov
xlat
aad
cmp
xor
dec
imul
xlat
pshufw
fidivrs
mov
das
fistps
lahf
je
mov
mov
test
repz
or
sub
xor
sbb
icebp
add
hlt
sahf
cwtl
add
sbb
adc
mov
icebp
int3
out
mov
cmp
xchg
mov
fbstp
mov
xchg
mov
cmp
dec
cmp
aas
daa
shlb
dec
mov
roll
and
inc
icebp
jmp
mov
repz
inc
fcom
push
mov
test
xor
inc
mov
add
aad
ud1
das
mov
adc
nop
xlat
in
add
mov
aad
divl
fldt
stos
pop
xchg
mov
xchg
imul
cmp
jns
xchg
ret
jge
jmp
aad
lds
in
add
jmp
sbb
mov
push
out
jge
aad
pop
and
js
stos
loope
js
rorb
dec
repnz
movsb
mov
or
cwtl
cmpsl
shlb
repz
sbb
inc
mov
jmp
hlt
in
lds
int
push
dec
and
xchg
inc
dec
push
jg
scas
or
icebp
xchg
imul
lock
mov
loop
pop
mov
lcall
cwtl
sub
sub
jge
dec
jb
push
dec
rcrl
mov
stc
loope
loopne
xchg
add
adc
cmc
aas
aam
cmp
pop
test
pop
aad
mov
pop
xchg
sbb
pop
and
jnp
sub
mov
dec
nop
mov
cmc
add
repz
les
add
cmp
push
jge
outsl
dec
cmp
test
inc
cmp
pushf
cmc
add
dec
and
jmp
cmpsl
in
pop
shrl
mov
or
aad
mov
push
mov
or
dec
in
movsb
or
in
fbld
and
stos
jecxz
jnp
add
xor
out
mov
push
or
sub
jl
sti
lea
sbb
inc
ds
sub
leave
mov
enter
push
repnz
fdivrp
xchg
nop
idivb
add
xchg
test
xchg
in
sub
clc
testb
adc
pop
outsl
lret
loop
mov
inc
jns
imul
jmp
out
mov
mov
in
cmp
out
or
xchg
pop
mov
inc
cmpsb
leave
in
je
gs
sub
pop
imul
outsb
ja
loope
mov
pop
adc
int
ret
jo
xchg
sarl
and
mov
or
dec
push
or
test
xchg
cld
sbb
pop
pusha
sbb
test
out
jecxz
jno
or
sub
mov
inc
push
pop
push
in
shl
cs
aad
adc
push
xlat
daa
and
scas
and
idivl
jmp
pop
and
stc
sbb
negb
mov
imul
sahf
or
sti
in
notb
jnp
cltd
push
enter
inc
repz
jecxz
outsb
in
cmp
movsb
stc
hlt
mov
std
mov
pop
mov
nop
insl
mov
mov
pmulhuw
push
ud0
jmp
mov
imul
dec
cli
xchg
dec
jmp
in
xor
sub
mov
dec
aad
pop
dec
pusha
pop
jl
out
lahf
cld
inc
shl
cmc
aas
pop
fwait
sti
pop
xchg
jge
pusha
pushf
cmp
cmc
mov
fmull
jge
mov
scas
cmpsb
cmc
stos
fdiv
cmovge
sub
jmp
push
dec
sbb
cmp
ljmp
popa
sbb
lods
mov
adc
lods
aam
pop
mov
jne
dec
push
fstl
addr16
sbb
inc
in
gs
xchg
stos
add
out
std
xchg
mov
push
push
mov
popa
add
push
testl
int
sbb
xchg
sbb
mov
cmp
and
iret
jne
or
pop
nop
fwait
push
mov
mov
shrl
inc
lods
ret
sub
sbb
mov
sbb
insb
xchg
inc
push
pop
inc
fisttps
popa
jp
ret
dec
or
test
mov
leave
lcall
sub
pop
aam
popf
loope
push
push
icebp
fwait
js
addr16
or
and
pop
ret
imul
jmp
jecxz
and
and
movsb
add
rcr
sarb
cmp
jp
add
fistpl
mov
mov
js
cmpsl
in
rolb
fsubrp
add
loop
mov
push
inc
movsl
sub
or
and
xchg
mov
rcrb
test
shll
and
push
push
adc
lods
add
iret
mov
gs
mov
out
jl
adc
fisttps
or
test
arpl
xchg
movsl
mov
dec
cs
add
lods
test
push
cmc
adc
push
xor
cmp
popa
xor
add
mov
mov
test
sbb
pminsw
add
sarl
js
aaa
sub
jp
mov
out
inc
jno
push
scas
aas
push
jbe
mov
arpl
adc
lret
sti
xchg
jmp
js
sbb
outsl
pusha
ret
fnstcw
mov
xchg
xor
test
cmp
sbb
mov
andl
pop
inc
mov
in
out
lahf
cli
gs
int
dec
cmp
dec
into
push
xchg
cmc
push
push
rcll
adc
cmpsl
out
imul
loop
cwtl
pop
sbb
and
je
ja
sub
test
jb
jg
xor
rolb
sub
loope
cmp
pop
ja
mov
rcrb
jns
loope
sub
pop
jmp
outsb
sbb
push
hlt
push
add
scas
cmc
std
int3
imul
adc
pop
xchg
loope
inc
jnp
mov
jmp
sub
pop
lret
test
mov
pop
rcr
xchg
cltd
mov
cwtl
jno
imul
out
jge
in
sahf
fwait
push
sbb
push
sbb
adc
sbb
and
mov
push
out
mov
js
xchg
cmp
repnz
sbb
jmp
mov
pop
sbb
out
gs
daa
scas
and
stos
mov
sti
dec
loope
xchg
ds
add
or
out
and
test
mov
cs
cmc
dec
icebp
push
mov
into
push
sbbl
ljmp
ja
test
imul
sbb
xchg
jge
imul
shl
scas
jp
sub
or
movsb
ss
jae
cmp
xor
inc
mov
or
adc
dec
add
mov
les
test
jmp
movb
push
mov
pop
adc
push
ficoml
add
sub
out
inc
mov
or
push
dec
mov
mov
fidivrl
mov
add
dec
and
imul
dec
test
and
and
clc
mov
mov
mov
mov
ljmp
push
push
stos
popa
ret
dec
mov
adc
jmp
or
add
or
xor
popf
add
dec
inc
ljmp
inc
stos
sub
jbe
popa
popf
pop
testb
stc
or
sbb
xor
sarl
and
cmp
into
es
cwtl
jne
cmp
dec
and
cmp
lea
int3
dec
cmp
and
in
mov
mov
stc
adc
mov
outsl
adc
sbb
xor
cwtl
mov
dec
rol
or
sbb
addr16
pushf
push
push
daa
mov
push
sbb
inc
xlat
xchg
adc
push
out
incb
adc
jb
add
push
mov
xchg
test
mov
adc
ret
mov
stc
out
int
sti
jmp
xchg
dec
test
shll
mov
outsl
std
lea
push
push
cmp
xchg
aad
or
stos
inc
pop
inc
adc
std
push
mov
and
mov
std
arpl
popf
mov
mov
pop
fiadds
add
xchg
pushf
test
or
decb
int
aad
inc
mov
add
xchg
mov
or
pop
adc
pop
xchg
sub
fstpt
repnz
xor
into
test
xchg
adc
or
adc
sub
and
inc
les
insl
pop
clc
rcrb
dec
repnz
shlb
and
add
movsb
movsb
cmp
int
inc
aam
les
imul
and
lods
fidivl
jge
test
fmull
fstpl
cmp
jecxz
and
pop
and
lret
dec
xchg
sub
cmp
decl
mov
cmp
cmc
sbb
stos
cld
arpl
add
mov
movsl
pushf
xor
lea
dec
rorb
cs
and
cwtl
cmc
ret
jle
dec
mov
test
fistps
shrb
je
scas
jecxz
jecxz
jo
xor
add
dec
movsl
push
cmpsb
adc
inc
enter
jl
sbb
mov
mov
idivb
mov
dec
or
inc
adc
pop
repz
stos
inc
mov
stos
mov
mov
imul
or
or
mov
cli
pop
aad
bound
cmp
jecxz
inc
mov
popa
cmpsb
and
push
aad
push
movsl
outsb
fmuls
sbb
lahf
cmc
dec
and
hlt
or
lods
add
inc
fisttpll
loope
xchg
in
add
push
cmpsl
cmp
mov
or
xorb
js
lods
dec
insl
lret
or
sahf
xor
leave
aam
sti
stc
fisubrs
adc
adc
lods
adc
jns
rcrb
out
push
fucomi
inc
inc
pop
jmp
outsl
add
adc
xor
loope
xchg
inc
cmpsb
jg
push
imul
cld
xchg
ljmp
testl
ret
fsts
push
jmp
rolb
add
pop
ljmp
dec
mov
mov
daa
test
call
add
mov
addr16
dec
adc
sub
jno
mov
or
lret
shl
test
out
mull
into
jb
nop
orl
cmp
jmp
inc
push
fiaddl
mov
imul
jecxz
xchg
jmp
sbb
scas
sti
das
rcl
lods
add
mov
adc
pusha
scas
pop
push
mov
inc
jecxz
sbb
mov
jmp
sub
js
sahf
js
insl
xchg
test
cmp
add
ja
push
sbb
cmp
rol
int3
int3
pushf
pusha
mov
aad
das
push
add
add
in
and
mov
add
icebp
roll
cmc
lea
dec
xor
inc
mov
out
or
test
mov
sarb
push
gs
mov
push
cmc
jae
test
std
mov
shr
cmp
sbb
jle
arpl
repz
test
stos
in
into
pop
jno
fs
or
mov
iret
ljmp
mov
rcrl
add
xchg
jns
lret
cmp
xlat
dec
jnp
in
jl
xor
out
pop
stc
dec
ljmp
call
pop
vpmacsww
and
movl
mov
shl
add
int
and
into
stos
adc
mov
and
iret
shrl
loopne
frstpm(287
dec
inc
add
pop
stc
fs
popf
xchg
dec
outsb
repz
pop
and
mov
jp
mov
stos
popa
sbb
mov
out
fsubr
ds
icebp
push
mov
jnp
and
mov
pop
out
lods
sahf
test
test
mov
jp
daa
shl
in
loope
inc
cmp
jecxz
mov
push
adc
jge
in
test
loop
stos
cmp
int
data16
js
jnp
pop
adc
or
mov
mov
jo
mov
pop
push
fstpt
and
jl
ljmp
outsl
jge
sbb
nop
cld
loopne
mov
imul
xor
jge
push
or
pop
push
test
imul
outsl
mov
rcrb
stc
out
into
ljmp
xchg
push
sahf
sbb
or
xchg
inc
jnp,pt
mov
and
mov
jmp
and
push
push
pop
in
nop
scas
and
aam
scas
push
sti
cmpsb
xor
sbb
mov
or
and
adc
inc
scas
cmc
decb
push
std
mov
andb
cmp
jg
cmp
lcall
sub
in
push
mov
adc
inc
cli
out
lods
out
cmp
js
xchg
cs
test
sti
aad
xor
xor
insb
arpl
push
or
jbe
mov
pop
cmp
ret
lret
adcl
mov
cmp
push
cmp
clc
rcl
mov
into
dec
dec
push
faddl
pop
fildll
xchg
xor
push
push
mulb
aam
dec
and
mov
out
test
push
lods
pop
xchg
pop
leave
push
dec
cmp
jecxz
cmp
and
sarb
pop
in
lret
xor
cld
ficoml
or
rorl
es
pop
mov
out
movsb
cmp
in
inc
out
mov
je
add
movb
popf
das
cmp
pop
pop
cli
cmpb
adc
aad
rclb
scas
imul
sarb
int
cmp
dec
jmp
lahf
aad
imul
imul
pop
cmp
jp
call
push
gs
pop
and
lds
inc
popa
pop
int
lds
pop
xlat
or
xchg
ljmp
mov
push
into
push
mov
std
pushf
cmovnp
negl
insl
mov
jb
jp
cmp
js
ficoms
rcll
int
or
and
cmp
test
test
mov
out
add
popa
adc
cmp
cmc
cwtl
cmp
mov
lods
or
rcr
jbe
sub
lcall
movsl
xchg
pop
jno
sti
mov
or
push
add
cmp
ret
sub
and
subl
leavew
push
push
notl
arpl
ljmp
ljmp
lcall
push
out
cwtl
pusha
loopne
mov
cmpsb
bound
jb
insl
shlb
add
push
xlat
fbld
mov
mov
xlat
cmpsb
jns
out
xchg
or
sbb
jmp
pop
jmp
cmp
pop
ja
add
sahf
cwtl
rcrb
xor
sbb
popl
dec
out
sbb
lahf
das
cmp
fwait
andb
dec
shrb
push
sar
fbld
packsswb
popa
popf
int3
and
sub
test
mov
xchg
notl
jb
xor
pusha
into
jnp
lods
cmp
push
outsb
inc
push
fcoml
add
mov
popf
dec
mov
int
ficomps
and
jae
add
sub
insl
xor
scas
adc
lods
jns
insl
mov
insb
clc
dec
pop
daa
pushf
scas
loopne
pop
xchg
jae
nop
or
mov
inc
aas
cmp
adc
and
fisubrs
pop
xlat
jne
jle
int
xor
mov
scas
shl
sub
adc
loop
bound
push
leave
ljmp
loope
jns
sbb
add
or
jecxz
jp
mov
cmp
int
and
xchg
lods
pop
and
push
iret
out
lcall
cmc
dec
mov
pop
or
mov
push
iret
out
dec
sub
pop
fstpl
and
jne
cmp
fs
sti
adc
sti
dec
rcr
adc
in
mov
js
pop
je
xchg
jns
test
lcall
xor
xchg
jg
clc
cmp
xor
ss
jnp
pop
or
sarb
loop
test
ds
mov
icebp
jge
mov
jbe
add
loope
mov
xor
mov
add
jecxz
std
cmp
sub
enter
mov
cmp
mov
ljmp
xchg
aad
stc
add
inc
js
ds
jns
adc
dec
jnp
dec
xlat
mov
fwait
out
out
sti
into
cmc
pop
dec
fcompl
mov
and
jle
cltd
imul
bound
mov
xchg
jl
push
ret
pop
sbb
dec
cmp
dec
push
ret
lds
testb
dec
xchg
jl
aam
sbb
xlat
mov
sbb
jg
shlb
fsubr
mov
mov
cmp
call
loope
imul
nopl
js
inc
lahf
mov
ret
inc
pusha
dec
std
frndint
pmaddwd
and
push
jmp
inc
sub
mov
add
dec
data16
movsl
push
sub
cli
mov
daa
insl
icebp
push
out
push
test
test
nop
or
outsl
push
add
jo
lret
outsb
mov
ficompl
rcrl
sub
push
xchg
mov
mov
lods
xor
mov
inc
cmpsb
adcl
fisttpll
scas
cmove
cli
mov
push
inc
loopne
sbb
les
js
popf
or
mov
pop
jae
pop
inc
popa
lahf
adc
scas
cmp
mov
cmc
int
outsb
xor
hlt
xor
stc
cmp
mov
pop
cmp
adc
repz
in
out
lods
outsl
sub
or
movsb
sbb
jbe
add
pop
xor
cmp
enter
outsl
popf
std
jecxz
jae
imul
inc
into
lea
out
jmp
add
add
lods
dec
clc
in
scas
outsb
rorb
jle
test
iret
mov
pop
mov
jmp
imul
add
mov
jl
rol
jl
push
sahf
mov
test
xor
in
addr16
jg
test
xor
or
mov
cmp
add
out
cmc
sub
mov
dec
inc
ds
inc
push
loopne
lahf
add
adc
cmp
aad
cmp
push
push
xor
jnp
push
shl
scas
pusha
xchg
push
jle
jmp
jb
hlt
js
out
mov
mov
mov
mov
fisttps
fcmove
xchg
pop
icebp
adc
push
in
jb
xlat
cld
aad
adc
cmp
mov
int
xchg
les
stos
mov
or
inc
fisttpll
int
and
enter
push
mov
add
sbb
xchg
mov
cld
pop
push
nop
mov
idivb
push
lods
mov
sarl
jmp
sub
mov
int
add
out
sbb
nop
xor
xor
int3
int
leave
icebp
aad
js
into
push
pop
inc
add
cli
mov
adc
push
outsl
insb
push
or
jnp
ds
jae
scas
cli
loope
or
lahf
popf
out
jg
sbb
int3
push
movsb
sub
xor
push
aam
xchg
mov
test
lds
sbb
push
stc
dec
mov
adc
add
fsubp
sbb
mov
xchg
dec
dec
aad
lods
lods
inc
lret
xchg
inc
cmp
inc
aam
fnstenv
cmp
je
ret
jnp
mov
out
inc
std
rclb
push
adc
xor
and
test
cmp
pusha
lds
icebp
mov
lods
adc
int
lahf
or
adc
and
dec
xchg
inc
ja
js
cmp
lahf
xchg
mov
add
aam
out
sbb
popa
andb
pop
fcomip
push
fs
and
dec
jne
fs
dec
dec
jnp
jg
sbbb
jnp
jmp
aad
sbb
or
pop
mov
mov
push
fmuls
xor
mull
add
dec
idiv
aad
xchg
pop
aad
shrl
ljmp
jnp
xchg
lret
jb
ljmp
sarl
nop
aaa
sub
stos
push
sbb
lcall
xchg
stos
adc
mov
into
xchg
leave
andl
js
fdivrs
adc
iret
pop
int
fwait
popf
cmp
or
or
pop
mov
les
icebp
sub
push
add
es
in
sbb
dec
aad
xor
add
adc
ret
aad
nop
popa
outsl
mov
dec
insb
push
push
dec
stos
adc
mov
fmuls
mov
aaa
mov
ret
daa
lcall
adc
cmp
enter
into
sub
xchg
xchg
fisubs
enter
mov
mov
push
dec
lea
addr16
jmp
js
xorl
push
mov
std
das
testb
shlb
add
mov
jbe
xorl
or
shlb
fsubrs
rclb
ret
cs
jbe
dec
push
push
cli
cmc
imul
stos
xlat
jns
popa
loopne
xchg
leave
adc
lods
add
or
loope
inc
mov
adc
out
pop
lods
or
scas
repz
push
add
adc
inc
dec
in
shrb
nop
jecxz
aad
jl
and
cmp
aam
out
dec
jmp
jmp
nop
imul
cmp
outsl
xchg
dec
leave
clc
push
inc
push
sub
add
cld
and
sub
mov
mov
leave
inc
loope
es
adc
inc
scas
xchg
in
jmpw
call
push
jo
cmp
jp
jl
aam
out
cld
mov
mov
sbb
mov
shll
test
gs
iret
cli
dec
lods
jb
imul
out
hlt
mov
sub
repz
in
push
sbb
xor
loop,pt
push
scas
insl
fucomi
ror
cmc
mov
push
adc
adc
flds
imul
shl
aad
test
inc
int3
jecxz
in
jae
add
aam
dec
in
addr16
pminsw
mov
mov
loope
fnstcw
lahf
jp
int
push
mov
xchg
jecxz
cmp
pop
loopne
es
cmp
clc
idiv
loopne
xchg
fcmovbe
push
cs
mov
cld
sub
testl
lods
in
aaa
sbb
insl
iret
mov
packsswb
scas
cmp
jnp
jmp
push
inc
fs
or
mov
mov
or
imul
call
call
sar
cmpsb
pop
mov
jae
and
ljmp
imul
jmp
out
aad
push
xchg
lock
cmp
jle
imul
orl
jl
adc
addb
push
push
mov
fistpl
cmp
inc
dec
imul
clc
push
and
sahf
syscall
insl
testl
jecxz
jne
mov
arpl
sub
bound
lods
fs
data16
jmp
addr16
cmp
xchg
int
leave
les
cmp
mov
pop
xchg
xchg
sbbb
pop
out
add
pop
jne
or
mov
mov
inc
lret
sbb
lock
cmc
push
mov
mov
cmpsb
mov
int
mov
cmp
pushf
movq
fmulp
notl
adc
cmp
aas
sub
fisubrl
nop
fdivl
inc
stc
jae
xchg
sbb
pop
mov
push
jl
push
call
xchg
jmp
movsb
cmp
fldt
loope
scas
jb
in
dec
or
jo
xor
sbb
mov
outsb
in
cld
jmp
inc
mov
fildl
push
dec
push
or
lret
dec
notl
ss
mov
sbb
dec
and
fisubrs
mov
out
rol
add
xchg
xchg
add
cmp
and
out
pop
dec
lahf
cmp
jmp
sub
sbb
pop
cltd
push
pop
sub
repnz
cmpsl
or
in
out
push
jmp
notl
or
xor
test
aaa
adc
adc
test
xlat
iret
jl
xchg
fsts
roll
popa
xchg
push
mov
sbb
je
pop
shlb
pusha
lock
mov
pop
pop
inc
das
dec
or
scas
shlb
insl
pop
mov
lods
mov
dec
popa
divl
cmpsb
in
inc
out
stos
outsl
adc
adc
fsub
pusha
mov
test
call
mov
call
xor
cmp
lods
mov
push
popa
xlat
pusha
mov
or
mov
jns
dec
fldenv
push
stc
mov
in
out
loopne
shrl
push
mov
and
pusha
xchg
inc
icebp
xchg
cmc
aad
and
repnz
mov
outsl
xchg
cmp
xchg
sbb
lods
scas
stos
fstl
push
cwtl
jecxz
aad
jns
fwait
sub
in
jne
inc
pop
adc
clc
cmc
jp
jb
jmp
xchg
aaa
push
and
pop
sub
rclb
xor
ljmp
sub
test
and
cmp
or
add
fcoml
ja
scas
repz
loopne
maxps
popf
aad
mov
dec
ljmp
push
into
sti
xchg
int
gs
or
cmp
out
inc
andb
dec
or
arpl
cmc
out
pop
notl
push
sub
test
subb
sbb
cld
sub
in
sahf
sub
mov
cmp
mov
mov
cmp
rcl
out
push
cmc
dec
inc
sbb
fs
idivl
call
subl
add
cltd
aad
lea
adc
xchg
fcmovnu
subl
inc
pop
loope
loope
stos
in
mov
rolb
jmp
icebp
dec
stc
popf
iret
adc
dec
fdivp
shr
or
lcall
negl
pop
iret
mov
call
jae
sub
pop
sub
mov
and
movb
mov
pmullw
jp
cld
pop
push
rcl
jnp
pop
test
arpl
lods
push
mov
xor
das
test
pop
test
mull
cmp
mov
sbb
cld
cmp
in
bound
mov
dec
mov
repz
sub
clc
jl
sub
push
mov
dec
rcr
push
js
mov
mov
test
outsl
cld
cmp
into
cmc
test
and
push
jb
sbb
adc
fucomi
lods
or
push
popa
mov
filds
test
int
pop
pop
push
outsb
add
add
cmp
or
fmull
lahf
dec
subb
int
loope
xchg
cwtl
mov
fiaddl
adc
fbld
arpl
lods
fstpl
mov
ret
inc
pop
cltd
or
test
lret
sub
out
pop
mov
movsb
adc
mov
arpl
ljmp
push
and
or
shl
arpl
pop
testb
movsl
in
sahf
push
xchg
nop
pop
insb
sbb
pushl
into
add
nop
xchg
mov
push
mov
pop
mov
fimuls
sub
imul
sti
dec
dec
outsl
ljmp
add
mov
mov
add
leave
repz
out
push
out
cmp
adc
adc
pop
negl
sahf
enter
inc
mov
inc
add
or
xchg
jg
cs
push
inc
cld
mov
rorb
mov
xchg
inc
imul
call
dec
or
mov
sub
iret
jno
pusha
mul
adcl
adc
scas
ja
pop
or
jnp
xchg
or
pop
mov
test
jns
adc
iret
out
adc
mov
jns
out
xor
pop
lret
xor
ds
out
sub
xchg
mov
jmp
pop
or
mov
out
xchg
daa
add
sub
movsl
jmp
pop
aam
or
stos
repnz
jmp
adc
ja
je
pop
hlt
or
lods
loope
add
and
xchg
dec
les
lea
jmp
bound
and
mov
inc
shl
std
and
outsl
xchg
add
push
fbstp
push
lock
dec
inc
pop
jg
xor
mov
out
pushf
push
jg
movsb
xchg
add
call
mov
je
or
out
sub
push
and
jns
les
fsubrs
mov
xor
mov
lea
or
mov
into
lea
insl
dec
xor
jmp
xchg
sbb
popa
mov
pop
push
fidivrs
jbe
push
bound
pop
dec
aas
cltd
and
cld
aad
leave
in
ja
push
imul
and
jbe
cld
fwait
jge
push
jae
jg
dec
add
jnp
in
mov
lahf
mov
sbb
les
test
pushf
shrl
and
sub
mov
dec
in
pop
cmc
dec
cmp
sub
mov
lea
ss
or
sarl
popa
add
sti
or
sub
popf
mov
mov
mov
inc
lret
fmull
dec
jg,pn
push
test
dec
pop
stos
pop
jnp
out
sbb
and
jl
push
xor
xchg
loope
or
cld
aad
adc
cs
mov
out
sub
jns
aam
pop
cmc
outsl
mov
push
incl
cmp
fistps
xchg
loopne
and
xchg
and
imull
fcompp
fucomp
push
fiadds
xchg
leave
inc
push
popf
cmp
out
push
jecxz
inc
dec
push
sbb
inc
xchg
movb
cmc
idivl
test
xchg
dec
rcr
dec
stc
mov
int
cmpsl
mov
lcall
or
sub
add
lds
addr16
xchg
loopne
mov
nop
pop
scas
sbb
add
das
xor
repz
pop
push
push
push
lods
add
cmc
fildl
push
pop
cmp
aad
es
push
add
jmp
pusha
mov
mov
dec
inc
in
fbld
mov
leave
loopne
jge
push
mov
inc
js
mov
xchg
lods
je
jle
shll
into
mov
push
rcl
arpl
call
jle
std
push
cs
shr
inc
push
mov
dec
pop
aam
jno
leave
mov
sub
xchg
in
imul
add
fs
fildll
jmp
lods
dec
xor
lret
pop
mov
imul
inc
cmp
jecxz
pusha
cltd
cmc
sub
xor
aam
xchg
test
mov
shll
mov
mov
setno
les
xchg
shll
loopne
cmpsb
mov
stos
pop
cmp
in
ds
aam
in
mov
and
jns
inc
jnp
mov
aad
jmp
test
fcoml
mul
and
sbb
mov
or
pushw
xchg
out
mov
mov
xlat
pop
dec
and
in
xor
fnstsw
or
rcll
imul
sub
sti
sbb
nop
xor
mov
testb
repz
pop
fdivrs
fldl
mov
int
sahf
nop
aad
fadd
sbb
dec
nop
inc
sub
jb
jne
adc
scas
push
fwait
stos
push
ds
inc
jae
shrl
rorl
xor
xchg
push
fldcw
add
daa
std
cmp
movsb
ror
ret
jnp
ficoml
pusha
ror
scas
test
and
push
addr16
cmp
sub
push
gs
jb
adc
aas
mov
adc
ret
inc
push
int
xchg
push
jmp
xchg
inc
and
mov
inc
inc
push
xchg
pop
fisubrl
imul
iret
jnp
jg
aad
jno
jp
xor
jl
sub
rcl
and
in
scas
jl
add
and
push
sti
dec
xchg
push
leave
pop
in
sub
xor
setne
out
cmp
pusha
adc
mov
les
or
cld
cmp
pop
fst
pop
test
push
adc
out
out
test
mov
mov
push
fdivs
jne
pmaddwd
xor
mov
xchg
dec
int3
push
rcrl
xchg
outsb
out
dec
fnsave
pop
add
push
sub
push
rclb
and
adc
imul
nop
ja
repnz
or
push
dec
sub
mov
jb
mov
or
xchg
dec
pushl
femms
xor
jge
mov
imul
pusha
sub
enter
shrl
pop
test
popf
loopne
pop
pop
fisttpl
movsb
dec
test
push
add
jns
adc
rcl
incb
shll
inc
shl
loope
pop
arpl
call
jbe
xlat
add
xor
or
cmc
test
jns
lods
mov
mov
in
and
aad
subb
pusha
xchg
push
or
fcmove
fs
fldenv
fidivrl
andb
push
testl
xchg
xchg
in
lods
jbe
xor
ljmp
xor
and
or
mov
roll
cld
lods
xchg
or
pusha
mov
pushf
mov
sahf
movsl
mov
mov
fimuls
add
call
bound
inc
mov
pusha
jmp
push
sub
dec
push
jns
inc
jge
js
xor
aaa
lods
das
movsb
sbb
cltd
ret
aad
sbb
push
lods
push
iret
divl
add
sub
lds
imul
inc
jl
cwtl
iret
cmc
pop
sub
mov
and
ss
jbe
call
xchg
in
add
xor
loope
ret
cmp
xchg
xor
sbb
imul
jl
stos
jp
mov
mov
int
mov
cwtl
pop
lock
xor
add
clc
sbb
xchg
scas
les
fidivrs
push
mov
outsb
jle
xchg
push
hlt
shl
dec
mov
add
cmc
push
decl
and
outsb
rcll
or
xchg
mov
sub
ds
jp
mov
sub
scas
shr
ficoml
xor
outsb
dec
jg
nop
push
popf
aaa
out
mov
jle
and
jbe
les
ja
pop
cmp
jl
ret
push
cmpsb
dec
add
jge
pop
ss
movsl
in
add
pop
data16
sahf
jns
out
add
aad
and
in
push
mov
call
sarb
stc
xchg
out
cld
hlt
js
insl
rol
pop
fdivrs
or
push
cmp
or
and
bnd
shr
sub
test
scas
and
jp
cli
xor
scas
out
xchg
lret
sti
dec
das
lods
xchg
outsl
dec
ficoms
add
inc
nop
xchg
nop
and
cmp
in
dec
das
mov
dec
mov
pop
jl
pop
insb
int
push
jmp
inc
sbb
or
jbe
add
pop
cmp
aam
cmc
aad
sahf
mov
jb
das
cmp
pop
push
pop
pop
sub
adc
sbb
sbb
xchg
xchg
dec
mov
out
xchg
pop
cmp
push
pop
inc
mov
dec
pop
stos
sub
frstor
pop
mov
mov
jnp
fwait
lock
xor
jecxz
test
aad
jge
jb
mov
dec
sahf
pop
stc
cli
lock
and
int3
xchg
adc
xchg
or
stc
jecxz
mov
mov
jge
in
shlb
imul
das
mov
xchg
popf
mov
pop
adc
push
adc
mov
xchg
ficomps
xchg
add
push
or
xor
inc
jmp
adc
pop
mov
insl
insl
out
cmpsb
cwtl
mov
jb
jecxz
push
aas
lcall
mov
inc
inc
fbstp
mov
lret
cmp
or
cmp
in
push
push
jb
inc
fisttps
xchg
and
stos
fwait
mov
mov
adc
in
mov
and
cld
and
push
cmp
cli
jne
aad
jge
adc
cmp
cmp
jns
or
cli
lods
ljmp
in
xchg
xchg
loope
jbe
jbe
dec
xchg
outsl
or
dec
jnp
mov
adc
lcall
cmc
xchg
push
jl
test
xchg
jae
push
dec
sti
pop
les
movsb
mov
dec
iret
aad
xchg
popa
xchg
inc
jnp
jg
pop
fcmovne
push
shlb
xor
jae
xchg
outsb
dec
outsl
and
xor
aam
xor
cmp
pusha
bound
cmpsb
jg
mov
push
sti
pusha
pextrw
hlt
push
es
or
jns
sete
int3
adcl
sub
jmp
lret
jle
imul
push
cltd
jge
imul
cmpsb
ja
and
sub
aad
inc
int
pop
jb
jp
icebp
into
in
dec
rclb
add
lahf
push
fucom
xor
jno
mov
mulb
mov
and
mov
dec
fidivrl
jnp
call
push
cmpl
add
push
mov
sbb
je
xchg
int3
jge
stc
test
adc
jmp
sub
out
mov
lods
add
test
lods
in
sarb
cmc
dec
push
idivb
mov
ret
movsb
stos
push
jp
repnz
jmp
sti
jp
dec
add
fwait
loopne
iret
sbb
fsubr
xchg
pop
js
out
dec
js
stos
into
xlat
fidivrl
stos
cltd
or
stos
xchg
adc
stos
cmp
icebp
aaa
ficompl
aas
pop
cmp
jnp
adc
lcall
inc
adc
sbb
aad
adc
iret
add
mov
cli
cmp
test
loop
add
int
sub
add
sbb
imul
push
inc
push
stc
cmp
mov
scas
cs
or
gs
fmulp
clc
add
cmp
pop
in
mov
add
ja
in
cmp
mov
cmpsb
adc
or
mov
in
mov
cmp
lea
dec
pop
cli
dec
popa
into
mov
or
clc
test
jae
fiadds
cwtl
int
mov
mov
dec
or
or
fidivs
push
mov
fldcw
mov
stos
pop
jmp
in
rorb
popa
aam
outsl
mov
pop
or
ljmp
shlb
ljmp
out
testl
test
fstpl
fiaddl
lret
xchg
cmp
daa
cwtl
gs
push
mov
in
or
xor
out
or
jp
ja
fildll
or
push
cmpl
or
ret
or
mov
ja
mov
adc
or
pusha
cmpsl
jmp
dec
push
mov
in
out
pop
jmp
cmp
cmc
or
orl
dec
jmp
popf
fwait
add
jns
data16
imul
dec
mov
jp
pop
loope
pop
dec
cmpsb
addr16
fbstp
fcmove
movsb
xchg
aaa
cwtl
bound
out
cmpsl
pop
shll
cmp
jmp
push
aad
je
add
mov
lretw
jmp
mov
bound
jne
cmp
and
pop
popf
sbb
mov
leave
ret
cmp
bound
fdivrs
negb
mull
cmp
iret
cli
xchg
int
das
outsb
xlat
dec
push
adc
test
jmp
xchg
ret
mov
das
push
dec
sub
cmc
sub
pop
jns
pop
jae
cmp
mov
mov
dec
push
stc
xchg
es
xchg
inc
cmp
lods
das
sbb
rcr
cmp
imul
lahf
mov
int
sti
mov
mov
inc
xchg
cld
cltd
pop
and
xchg
and
ficomps
popa
out
jge
jg
xor
insb
lret
jl
jmp
adc
sub
stos
lret
dec
sbb
xor
or
add
test
lea
cmp
xchg
pop
xchg
push
call
aad
mov
push
in
sbb
and
pop
cli
call
fsubs
sub
movl
mov
decl
push
add
addr16
dec
sbb
psraw
adc
mov
adc
mov
mov
mov
shll
mov
push
and
arpl
cmp
out
adc
mov
pop
sub
dec
push
jp
mov
in
cld
inc
and
inc
mov
std
xor
lcall
dec
dec
push
jb
push
out
or
faddl
loopne
arpl
mov
je
xchg
cmc
dec
mov
jmp
xchg
adc
fcmovbe
xchg
jp
push
ret
mov
mov
cltd
push
sarb
jle
lret
adc
nop
notb
push
in
jle
adc
and
mov
test
inc
in
push
orb
inc
loop
pop
sahf
rorb
loop
or
ret
adc
mov
loop
das
iret
lahf
hlt
inc
pushf
mov
sbb
fcmovnbe
adc
lret
push
fisttpl
cmc
orb
int
sub
dec
lods
aaa
out
nop
add
mov
xor
aas
mov
or
xlat
mov
push
push
lret
dec
scas
aad
iret
cmc
adc
sbb
aad
ja
aam
push
out
jl,pn
pop
ficoml
mov
loop
xchg
ret
or
sub
or
es
aad
repnz
andb
inc
jp
mov
and
or
add
xchg
sub
mov
out
sbb
xchg
mov
push
jecxz
mov
gs
push
int3
cld
add
xlat
jns
arpl
push
js
popa
jge
inc
inc
popf
or
lcall
push
flds
cltd
mov
lret
and
add
xchg
aad
xor
mov
popa
mov
jg
popa
fcmovnb
inc
iret
ficomps
loop
xchg
sub
add
das
xor
push
pop
mov
in
and
add
mov
scas
in
and
add
icebp
pop
scas
push
xchg
daa
pop
bnd
not
fsubs
jmp
aas
and
push
mov
stos
je
sbb
add
loope
sbb
stc
addl
and
cmp
clc
jp
arpl
out
movsb
and
dec
mov
jnp
cmp
or
outsb
ret
jne
and
inc
add
dec
inc
call
jnp
push
scas
icebp
xchg
jno
adc
mov
or
lcall
adc
insb
mov
inc
out
pop
dec
int3
pop
fimuls
lcall
jecxz
dec
mov
mov
jl
cmpl
stc
lds
add
mov
lea
lahf
xchg
sub
pop
shrl
js
les
jl
jns
push
adc
cltd
sbb
pop
pop
mov
cmpsl
and
mov
cmp
mov
mov
or
frstor
and
and
leave
inc
jb
testl
or
clc
andl
push
xchg
repnz
mov
inc
push
aam
mov
movsl
aas
cmp
mov
pop
mov
orl
add
ror
cli
xor
cmpl
inc
and
and
stos
shll
cmp
nop
das
dec
jmp
jnp
frstor
testb
lret
xor
testl
rol
mov
push
je
cmp
and
push
push
imul
dec
add
sbb
push
enter
mov
mov
or
push
cmp
mov
push
pop
and
lret
and
inc
cmp
sub
clc
leave
push
std
or
dec
cmp
insl
nop
jge
cmpsb
in
test
iret
pand
sbb
adc
adc
or
inc
pop
aad
shrb
es
inc
adc
and
and
fldt
cli
mov
testl
call
pop
pop
imul
jns
cwtl
stos
fwait
xor
and
sub
add
imul
xchg
jae
cmp
cmp
mov
loope
ret
sti
cwtl
cltd
pushf
pcmpgtb
mov
xor
jnp
mov
adc
imul
push
sbb
jge
test
and
js
push
push
pop
push
sub
push
faddl
cmp
in
mov
jmp
xorl
jl
jmp
pop
adcb
es
push
insb
add
mov
or
sahf
les
stos
neg
pusha
mov
xchg
jge
push
clc
add
test
and
adc
lock
hlt
lahf
aad
xchg
xchg
inc
aam
pop
xchg
test
sti
push
add
xorb
push
ss
mov
sbb
nop
cmp
outsl
not
push
clc
sbb
jp
inc
mov
ss
cli
sub
stos
add
xor
inc
and
jno
inc
test
stc
mov
push
xor
cmp
les
mov
incb
std
or
jmp
outsl
popa
lcall
xchg
lea
hlt
mov
test
mov
jnp
in
outsl
stos
jmp
or
adc
adc
cmp
fcoml
fnstsw
lock
scas
arpl
mov
xor
ja
mov
adc
mov
push
jp
jecxz
mov
icebp
addr16
nop
jo
in
out
mov
lods
sub
pop
notl
in
es
cmc
int
push
test
sbb
and
and
xor
cmc
sbb
in
roll
jg
call
xor
cs
mov
and
sub
dec
xchg
rcrl
in
lods
lods
dec
mov
mov
cmp
push
dec
cmp
test
call
rclb
std
dec
inc
imul
jmp
addr16
xchg
gs
imul
cmc
test
and
imul
pop
jo
sub
aam
jl
push
pop
add
mov
xchg
push
inc
and
cmp
addb
nop
adc
mov
popa
repz
cmp
rorl
shl
xchg
loop
dec
addb
or
or
sar
rcpps
cmp
jp
sarl
rorb
iret
mov
mov
xor
inc
jecxz
in
and
test
jg
rcrb
pop
or
rorb
idivl
pusha
mov
fidivs
gs
stos
cmp
lret
push
or
sub
inc
cmc
inc
ljmp
scas
aad
mov
dec
js
in
out
push
cmp
gs
mov
cmc
inc
aas
aaa
xor
jmp
loop
aad
sbb
fists
outsb
jbe
rcll
adc
lret
mov
mov
movsb
adc
arpl
push
mov
push
mov
insl
hlt
lock
mov
loope
repnz
or
adc
icebp
cmpsb
mov
lret
addr16
and
jno
sub
mov
in
mov
dec
mov
das
icebp
leave
jl
adc
push
dec
mov
mov
cltd
imul
mov
inc
adc
mov
imul
adc
mov
xchg
scas
enter
andb
les
jp
arpl
add
cs
xchg
mov
or
aad
cmp
jg
mov
cmc
rcrl
aad
das
iret
and
mov
xchg
inc
mov
add
add
jl
push
xchg
mov
xchg
rolb
add
mov
mov
or
popa
lock
mov
into
stos
mov
outsb
call
mov
pop
aad
dec
and
mov
lock
xor
push
into
adcb
icebp
test
and
xchg
out
ja
mov
cmc
push
push
fnstcw
test
xor
adc
dec
push
xchg
xchg
mov
cld
jne
ficoml
hlt
das
mov
ss
push
not
mov
add
xor
jl
push
stos
jl
and
jae
push
cmp
cmc
mov
mov
add
les
xor
dec
or
cmovp
stos
leave
repnz
inc
aaa
mov
movsb
ret
and
cld
sarb
inc
scas
lods
add
pop
dec
lods
or
in
cwtl
xchg
xchg
cmp
mov
inc
sub
sub
add
push
in
fisttpl
out
outsl
lods
setp
repz
cmp
shlb
daa
cmp
bound
cmc
adc
and
push
mov
out
lret
imul
addr16
or
jbe
jns
mov
and
cmc
les
lds
cmp
and
xchg
call
cmc
fchs
jmp
int
mov
bound
outsl
push
mov
xchg
and
js
sub
decl
sbb
bound
lods
or
insl
call
pusha
hlt
cmp
out
dec
cmp
push
dec
inc
pop
dec
aam
insl
dec
popa
sahf
movsb
daa
xchg
add
lock
addr16
in
add
enter
arpl
test
not
call
jp
lahf
add
pop
cmp
xorb
fs
mov
xchg
jne
cmc
sbbb
iret
sub
jp
mov
cmc
adc
jno
pop
mov
and
js
addl
ja
and
ret
jo
nop
ror
jbe
jae
dec
add
cmc
jmp
add
pop
push
test
sbb
add
dec
xchg
dec
ret
sbb
das
pop
pop
insb
cmc
test
je
pop
out
pop
scas
dec
test
shlb
adc
pop
mov
mov
xchg
push
cmp
push
aas
lock
and
fldcw
popa
mov
mov
jb
pop
push
mov
jmp
xchg
mov
shl
in
stos
xor
pop
clc
mov
lds
jle
inc
push
rcrl
repnz
loope
pushf
filds
mov
xchg
xchg
les
popa
mov
sarb
mov
fs
xchg
dec
popf
out
movsl
frstor
jge
dec
hlt
and
test
arpl
mov
mov
jb
out
dec
dec
jg
movsb
mov
add
incl
mov
mov
popf
cmp
dec
push
xor
dec
imul
cltd
dec
int
xchg
test
in
and
push
xchg
into
mov
xchg
test
and
push
ljmp
add
cmovbe
pmaddwd
inc
imulb
push
mov
sbb
xchg
jge
in
orl
mov
push
jle
push
xchg
jg
jns
inc
xchg
ret
dec
and
mov
mov
test
and
mov
and
and
mov
roll
rep
sbb
clc
popl
mov
scas
mov
cmpsl
fs
mov
or
mov
sbb
sahf
xor
adc
and
add
cmp
in
mov
aad
icebp
arpl
hlt
ret
push
cmp
out
and
inc
xchg
inc
push
push
cmpsb
out
lret
sub
pop
fbld
scas
xchg
into
sahf
rcl
mov
dec
push
das
push
mov
popa
out
punpcklwd
xor
fs
mov
mov
inc
or
cmp
dec
int
xchg
xchg
cmp
adc
xor
sub
dec
into
adc
int
dec
fisubs
sbb
scas
mov
fsubrl
aad
int3
arpl
jno
jmp
out
gs
push
push
pop
les
push
loope
mov
shrl
push
pop
dec
jns
lahf
cwtl
xchg
jno
ds
dec
jmp
insb
imul
sti
ffree
mov
fsincos
cmpsl
inc
das
cli
rcl
jp
aad
inc
mov
jo
pop
outsl
shlb
fwait
ljmp
adc
sbb
lret
rorb
cmp
dec
pop
pushf
cli
push
jl
bound
aas
stos
dec
mov
fwait
ja
push
push
sbb
stos
fwait
jp
rorl
mov
sub
out
mov
push
ret
aas
xchg
addr16
push
repnz
ja
xchg
cmp
inc
daa
jo
jmp
addr16
jecxz
xchg
shr
push
xchg
ja
sub
lcall
shrb
cwtl
jmp
mov
sub
scas
add
arpl
sub
aam
cli
mov
and
inc
mov
adc
popf
and
cmp
adc
ficoml
and
into
inc
std
adc
or
cmc
out
ja
mov
push
mov
insl
mov
loope
mov
pop
or
ds
lock
outsl
lods
mov
or
fistps
jle
mov
repz
mov
rcll
jge
adc
and
aam
add
jns
jge
xchg
fcom
inc
sub
stos
imul
les
lods
adc
xchg
imul
lret
test
lcall
sysret
push
int
sbb
jmp
dec
dec
out
movsb
mov
out
add
loope
clc
dec
pop
iret
cmc
push
sti
loop
mov
or
pop
int
lock
jmp
xchg
in
jecxz
and
jne
rcl
cld
aam
cwtl
push
sbb
inc
sub
lods
in
leave
jns
shll
and
data16
pop
leave
cmpsb
mov
inc
cmc
mov
and
sbbl
sub
xchg
jnp
loopne
lods
popf
xor
push
leave
rcrl
in
into
cmc
sub
sbb
cwtl
subb
roll
inc
fidivs
push
jge
adc
out
cmp
sbb
xchg
pop
ds
pop
jmp
cwtl
stos
aaa
test
sub
mov
inc
mov
and
stc
int
sub
imul
testb
push
and
cwtl
arpl
clc
out
popa
mov
rcrb
dec
pop
hlt
call
inc
cmp
in
in
push
sub
xchg
push
bound
cli
push
mov
inc
mov
push
push
jno
pop
mov
adc
and
decl
pop
mov
push
and
fists
adc
lods
std
jbe
jo
xor
jecxz
outsb
jo
popf
jp
clc
pusha
jge
in
sbb
idivl
xor
test
ss
int
shlb
add
pop
or
jge
inc
sub
push
or
mov
call
iret
xor
add
popa
mov
sti
xor
lretw
cli
xchg
jns
dec
jmp
xchg
inc
mov
add
sbb
ljmp
adc
inc
fs
ss
aaa
mov
sbb
popf
test
cmc
mov
cwtl
push
call
insl
insl
mov
imul
jbe
push
out
std
adc
mov
cld
cmp
dec
out
adc
add
es
and
jp
cmp
inc
test
lds
xchg
inc
daa
mov
xlat
test
insl
frstor
repnz
or
cmp
or
sahf
cmp
push
add
lods
sub
jmp
adc
or
pushf
and
test
in
sahf
adc
lods
or
stos
push
mov
jg
and
dec
lcall
sahf
push
dec
cwtl
les
mov
js
idivl
xchg
loope
lahf
fbld
aad
jbe
stos
cmovp
and
adc
lds
xchg
js
cmp
outsl
ljmp
xor
iret
xor
mov
mov
call
sub
fcmovnb
jl
pop
ret
cmp
jle
jl
xchg
or
mov
in
or
push
loope
jnp
jnp
testl
divl
cmc
js
push
jl
jnp
xchg
jle
outsb
loop
stos
dec
xor
iret
aad
mov
xchg
fs
out
les
mov
scas
cmc
sbb
sbb
rorl
mov
jb
and
sub
neg
mov
sar
out
or
stc
std
sarb
lea
sbb
outsl
add
jb
call
pop
lret
mov
call
cmp
aam
sub
mov
mov
and
and
fcoms
and
icebp
push
rcl
and
call
aad
out
popa
pop
add
xchg
sub
idivl
mov
outsl
mov
pushf
std
faddl
or
imul
int
iret
clc
mov
popa
jns
cmp
mov
xchg
cmp
leave
stc
jl
int
mov
adc
jo
inc
or
sbb
icebp
out
push
lods
mov
push
inc
js
adc
cli
ja
pop
fs
outsb
jecxz
and
adc
cmc
push
sub
sub
push
int3
ja
repz
or
outsb
mov
xor
cli
mov
mov
jmp
sti
add
call
lods
add
frstor
loop
fucom
nop
ja
idiv
cld
cmc
and
jge
adc
sub
and
or
in
dec
leave
cmp
cmp
popa
imul
xchg
jmp
mov
or
and
push
xor
dec
push
pop
jmp
sub
push
out
jl
aaa
xchg
xchg
xchg
ja
pusha
fistl
pusha
les
sbb
adc
dec
call
dec
push
scas
scas
mov
sub
test
jne
lahf
call
ds
dec
xchg
sbb
out
mov
push
mov
push
cs
xchg
or
or
mov
cmp
sbb
and
movsl
int
inc
adc
mov
dec
push
push
imul
and
cmp
push
cli
xor
dec
fldl
adc
inc
cmc
nop
or
and
push
mull
ret
stos
cmp
jecxz
mov
call
pop
aam
adc
daa
xor
adc
or
xor
add
push
cmc
push
repnz
xchg
cmp
mov
sub
xchg
or
dec
ljmp
cmpb
xor
push
jne
mov
test
out
push
popa
pop
out
cmp
sub
jns
rcll
imul
addr16
inc
outsl
mov
xor
test
mov
mov
ljmp
repnz
xchg
bound
into
popf
cli
mov
xlat
cmc
or
fcomip
xchg
pushf
shll
in
mov
aad
lret
cli
inc
push
ret
ud1
and
cmp
adc
adc
notb
xchg
inc
or
rorb
insb
cmc
les
mov
popf
and
mov
push
jmp
inc
stc
jns
pop
ud0
cmp
push
jae
nop
push
add
mov
and
push
cmp
ret
ja
jo
sub
mov
js
lret
lods
add
shlb
pop
jbe
inc
xchg
loop
or
fisttpl
sub
xlat
sarb
inc
jb
xchg
lock
scas
fcoms
popf
or
inc
outsl
rorb
ja
lods
sahf
xchg
pop
inc
cld
pop
dec
push
mov
fcompl
sub
adc
mov
jmp
repnz
iret
cmc
andb
or
mov
inc
sub
xor
jo
adc
mov
adc
jecxz
sbb
sahf
add
cmc
push
leave
test
aad
stos
cmpsb
pop
push
add
sub
inc
mov
addl
or
or
sub
test
push
outsl
push
pop
xchg
cmp
pop
and
in
testl
push
jne
int
std
mov
les
int
mov
mov
out
or
dec
insb
cmp
test
dec
hlt
mov
xor
mov
mov
jns
enter
lods
aam
int
cmp
mov
cmc
pop
jecxz
inc
call
fimuls
add
xchg
in
in
rorb
hlt
out
xor
inc
push
in
pop
outsl
sbb
out
xchg
pop
ficoml
xchg
jg
cli
jb
adc
fs
mov
repz
out
aad
lret
cld
xor
stc
int
sub
cmp
xchg
imul
push
loopne
dec
lods
jnp
out
shll
or
or
ret
inc
movsb
or
in
mulb
or
adc
sub
jg
lods
fidivrs
adc
fldcw
xchg
arpl
mov
popa
jg
xchg
jge
sbb
cmpb
push
add
ja,pn
cld
add
negb
cmpsl
aad
push
das
rclb
push
ljmp
push
and
movsl
idivl
enter
sub
pop
mov
cmc
std
inc
jle
push
fwait
jne
mov
movsb
in
shr
jmp
pop
mov
pop
inc
dec
inc
es
sub
out
mov
adc
adc
jbe
test
lods
add
or
jecxz
jmp
push
leave
pop
dec
mov
lock
imul
push
insl
inc
cmp
popa
jmp
xchg
pop
xchg
lcall
roll
adc
fdivs
mov
adc
not
pop
scas
push
pop
mov
push
lods
inc
je
mov
jne
les
pusha
jns
aas
or
inc
add
stc
mov
sbb
cmpsl
cmp
aam
aad
cld
xchg
cwtl
into
cwtl
push
sahf
nop
or
repz
lret
mov
jns
dec
das
jecxz
sub
ja
int
push
aad
mov
jmp
lods
inc
jmp
and
mov
and
mov
in
mov
in
and
pop
andb
cmp
fnstcw
notl
jle
or
lods
dec
aas
jno
dec
aam
out
sub
xorps
fdivrp
imul
pop
nop
addr16
fidivrs
cmp
lret
mov
cs
mov
dec
jo
xor
ss
pusha
leave
dec
gs
xor
mov
push
cmc
xchg
cld
lcall
rcrl
je
sbb
pushf
pop
idivl
mov
test
fdivrs
clc
and
in
jge
into
sbb
dec
add
mov
test
jo
push
xchg
adc
xchg
gs
por
js
fwait
xchg
cmp
cmp
xchg
popf
int
bound
mov
inc
push
sub
shll
sbb
in
loope
xchg
mov
lods
shrl
jns
xchg
sub
push
dec
test
jmp
or
int
push
icebp
xchg
aam
jl
adc
pop
adc
push
lods
insl
rorb
jmp
out
mov
nop
decb
adc
out
cmc
ss
cmp
and
push
xchg
add
out
jmp
nop
out
dec
mov
jns
add
ss
shl
aaa
dec
sub
stos
add
mov
push
icebp
lcall
subb
push
mov
sub
cmpb
pop
cs
mov
and
mov
out
aad
out
mov
int
pop
jbe
nop
jmp
xchg
jle
scas
mov
xor
fadd
dec
jns
xchg
mov
int3
and
pusha
out
sub
xor
and
pop
int
and
adc
or
mov
popf
cli
scas
inc
add
les
mov
adc
mov
shll
adc
sbb
int
loop
std
mov
imul
dec
push
mov
int
push
pop
mov
sbb
inc
je
jno
jge
mov
mov
adc
jno
add
and
mov
loop
int
sub
mov
sub
jmp
jmp
mov
scas
lcall
pop
pusha
xor
test
xlat
fucompp
mov
jnp
rol
and
loopne
mov
xor
repnz
cmp
mov
inc
mov
mov
sub
loope
cmpl
ds
icebp
inc
in
cli
mov
repnz
aad
push
iret
push
test
jne
sbb
pop
sbb
cmc
daa
or
and
mov
mov
lods
hlt
test
cmp
inc
mov
addr16
jae
jmp
lret
roll
jge
pcmpgtd
mov
push
mov
jl
stos
repnz
iret
and
je
jmp
and
mov
enter
cmc
pop
lret
inc
fsubr
test
inc
adc
lods
notb
xor
cmp
add
mov
add
inc
inc
mov
ljmp
mov
sbbl
mov
dec
in
adc
mov
int
sub
mov
std
mov
cmp
mov
aad
mov
out
out
sub
dec
stos
cmc
popf
sub
pop
mov
and
lods
xor
adc
pcmpgtw
cwtl
mov
or
mulb
pop
imul
les
or
cmc
inc
dec
sbb
push
cmpsl
into
aas
aaa
loope
push
xchg
cli
xlat
int
iret
stos
aad
push
sbbl
rorb
or
xchg
cld
sbb
imul
flds
mov
dec
out
mov
mov
or
push
pop
dec
call
cmc
add
or
test
xchg
into
dec
call
or
and
xor
mov
sbb
imul
std
xchg
push
pop
ljmp
dec
push
cs
outsb
aas
jns
mov
into
pop
cs
in
in
pushf
icebp
sub
xchg
test
aas
push
stos
inc
ror
lea
push
pop
xor
cwtl
cmp
mov
push
mov
not
push
or
dec
mov
jecxz
sbb
int3
push
cmc
stos
add
sub
and
incb
sti
xchg
lret
xchg
push
int
mov
jo
push
mov
mov
pop
pop
mov
in
imul
add
cwtl
mov
cwtl
dec
mov
test
pop
jge
fwait
sbb
call
mov
xchg
aam
decb
push
jge
add
mov
pushf
sub
jle
cmp
push
jge
into
sbb
ljmp
cmp
popa
call
push
pop
xorl
mov
push
dec
jl
push
sbb
add
push
fistl
sub
cld
aad
sub
push
adc
jge
sub
repz
push
pusha
or
pop
mov
or
loopne
mov
xor
jbe
es
mov
rcrb
xor
xchg
sarl
push
or
lods
std
adc
or
les
decb
adcl
lea
sarb
repz
call
mov
push
hlt
pop
lods
or
fwait
mov
aam
xchg
dec
push
sub
outsb
pop
add
sub
xchg
push
jg
in
adc
hlt
subl
xor
push
xchg
sbb
movsl
nop
push
aad
sbb
mov
lahf
ja
ja
cli
hlt
mov
mov
stos
add
xor
jg
sub
adc
std
imul
lods
push
out
sub
aam
fdecstp
ret
adc
ja
adc
add
les
xlat
lock
pop
xchg
aaa
repz
jge
mov
or
into
adc
loopne
sub
sbb
sbb
xchg
ss
inc
call
or
stos
lea
pop
or
push
and
insl
and
jb
adc
adc
add
loope
stos
scas
inc
xor
arpl
cmp
jne
add
add
sub
or
adc
insb
sahf
sbb
loope
lea
push
lret
ret
sub
pop
leave
mov
push
pop
movsl
mov
imul
test
xlat
addl
in
cmpsb
inc
cmp
fbstp
aad
sbb
test
fwait
or
test
or
inc
mov
push
js
or
cmp
cmp
add
add
int
aad
mov
dec
insb
xor
test
sbb
mov
push
adc
clc
mov
repnz
adc
imul
cwtl
and
add
clc
adc
lds
mov
pop
adcb
int
inc
clc
shll
mov
mov
rcll
push
mov
in
jle
into
inc
fnstsw
pusha
add
push
lods
inc
mov
gs
into
js
mov
imull
sbb
jecxz
push
out
push
stos
repz
stos
pop
mov
les
xchg
sbb
jns
cmp
pusha
push
adc
jge,pn
cmp
lret
mov
xchg
mov
div
ja
cmpsb
out
filds
or
popf
sub
or
cmp
push
lods
arpl
test
sub
out
enter
mov
lcall
pop
and
push
jge
and
mov
fsts
aam
or
and
and
cmp
and
test
lds
xchg
xchg
and
or
test
js
and
mov
and
test
lcall
into
cmp
lock
xchg
xchg
dec
out
xor
jl
xor
inc
push
jns
adc
sbb
jle
ficoms
push
in
in
repnz
xchg
lods
push
jl
jp
es
mov
std
repz
fwait
cmp
in
fisubrs
mov
adc
push
and
cmp
push
notb
ret
ja
std
cmpb
xchg
add
ljmp
dec
add
mov
pop
sbb
and
xor
cmc
in
mov
push
inc
out
je
loopne
stos
lcall
mov
push
inc
cmc
out
fstps
mull
sbb
cltd
and
inc
shlb
cs
adc
jae
jle
jns
stos
pop
mov
outsl
mov
dec
scas
es
test
sbb
push
aad
in
in
aad
out
out
scas
cmc
mov
adc
hlt
insb
in
add
call
mov
or
sub
add
pop
jecxz
mov
addr16
shrd
mov
and
sbb
push
call
into
and
dec
orl
jo
dec
mov
dec
nop
inc
xor
or
inc
jne
jle
dec
in
mov
push
xor
adc
mov
mov
jns
jmp
pop
fidivs
mulb
js
push
xchg
test
fsubrs
pop
or
dec
mov
insl
pop
inc
loop
or
jnp
loope
push
inc
jl
cmp
xchg
div
push
imul
cmp
dec
adc
xlat
rorl
xchg
jp
xor
orb
jg
ss
pop
fisttpll
cmpsb
add
jg
stc
aad
gs
adc
jecxz
iret
mov
add
fs
das
or
mov
mov
dec
neg
shll
xor
push
repz
jb
mov
stos
cs
xchg
inc
cmp
into
scas
xchg
sub
mov
or
jmp
sbbl
mov
xor
sbb
loop
rorl
out
mov
mov
imul
push
call
mov
jo
mov
jg
int
data16
je
xor
sti
sub
jno
mov
or
lahf
imul
addr16
out
lods
scas
pop
stos
imulb
xlat
clc
push
mov
mov
dec
in
xchg
addb
in
das
mov
jge
das
lock
jge
and
or
xlat
or
jnp
je
fcoms
cltd
mov
sbb
mov
je
jns
sub
rcl
and
rcll
lods
and
les
jl
fucom
xchg
pop
repnz
xor
out
imul
into
jmp
dec
test
je
fwait
sub
mov
or
iret
or
sub
xchg
dec
add
push
icebp
cmp
adc
push
jge
pop
enter
xchg
cwtl
pop
add
iret
scas
and
test
push
and
cmp
movsl
cmp
out
pop
sbb
sbb
in
js
push
mov
enter
lea
push
out
sub
inc
or
pop
mov
jae
pop
aad
mov
lcall
push
adc
dec
out
add
sub
and
or
clc
outsl
mov
mov
leave
sub
xor
cwtl
imul
test
test
cmpl
jmp
int
push
rcrb
testl
xor
into
pusha
xchg
sar
loope
das
mov
sahf
cmpsb
in
into
sub
cmp
outsb
mov
out
stc
hlt
mov
mov
or
jae
sub
stc
or
sub
xchg
push
test
jle
and
ja
in
cltd
dec
or
fldl
xchg
inc
fs
iret
cmp
les
mov
pmullw
adc
xchg
sub
incl
push
push
mov
stos
cmp
sbb
pop
xchg
cmp
lods
push
jge
xor
cmc
xchg
js
jns
call
fstl
lea
shlb
fdivp
mov
stos
rcrl
lds
jmp
push
inc
aas
xlat
repnz
mull
aad
mov
push
rcrb
imull
dec
cwtl
xchg
mov
aad
in
xchg
or
xor
xchg
mov
cmp
scas
add
nop
test
fs
dec
sahf
out
jmp
ljmp
sar
sub
and
int
bnd
ljmp
jge
test
and
decb
adc
test
rcl
xchg
or
mov
xchg
je
or
xchg
lock
sub
test
test
iret
adc
mov
orb
cltd
and
in
in
push
lea
scas
xchg
scas
pop
xor
push
xor
fidivs
dec
je
pop
arpl
cs
fs
adc
jmp
lods
xor
pop
cmc
in
dec
test
jno
cmp
addr16
xchg
std
sub
xor
scas
lock
mov
xorl
push
mov
je
push
push
paddsw
enter
in
lods
int
cmp
push
outsl
sub
mov
icebp
push
shll
mov
mov
pop
jo
subl
fwait
dec
mov
pop
scas
cltd
out
jmp
jnp
mov
cmp
stos
push
cmp
jae
inc
add
adc
and
ljmp
aas
lods
add
fdiv
and
aad
sbb
dec
and
idiv
mov
push
and
push
aad
fbld
movsb
mov
add
cmp
sub
sbb
shr
loope
and
cld
adc
mov
xchg
lock
sahf
or
mov
je
stc
movsb
or
dec
add
inc
lods
mov
imul
std
or
stos
andl
or
not
push
ret
inc
in
pushf
sub
xchg
lahf
add
push
stos
aaa
or
and
fsubp
lahf
add
aad
add
fbld
nop
lods
imul
xlat
test
js
jg
pop
pop
push
les
jns
adc
jno
nop
popf
orl
or
push
es
das
aam
mov
sbb
stc
cmpsl
adc
cwtl
push
pusha
pop
jmp
std
jbe
ret
jmp
arpl
mov
and
stos
push
mov
jno
jg
scas
ja
mov
sub
in
fstl
jmp
addr16
stos
xor
std
movsb
outsl
xchg
fcompl
jne
pop
addl
sbb
xchg
jb
aam
ljmp
insl
shr
les
or
fwait
xchg
jmp
adc
clc
fsubp
sbb
dec
jge
int3
add
idivb
shrl
inc
inc
add
lods
popa
popf
test
jnp
push
push
and
and
lea
mov
pop
jp
aad
or
cmp
sub
idivl
call
xor
push
or
nop
mov
mov
shl
popf
mov
and
imul
pop
adc
mov
lret
out
mov
jp
loopne
and
push
adc
ss
ret
rcrl
push
les
sub
sub
negl
je
jmp
push
sub
jmp
pop
add
fidivrs
aam
shlb
push
sti
in
dec
xchg
enter
sti
sub
mov
test
sbbb
push
pushl
xchg
dec
push
out
mov
xor
aas
dec
insl
scas
and
add
cs
insl
add
pop
inc
add
hlt
insl
shll
cmpsb
and
sahf
or
cwtl
mov
push
imull
mov
pusha
xchg
or
jl
add
fildll
loopne
scas
xchg
popf
jl
sub
pop
out
dec
jns
cmp
in
or
mov
and
sub
cmp
mov
movsl
cmp
adc
mov
lds
push
inc
mov
or
mov
pop
xchg
out
ror
lods
int
sbb
cld
stos
lret
test
cltd
push
jnp
gs
mov
cmc
and
xchg
or
js
push
inc
lods
lea
mov
dec
or
insl
pop
loope
into
cmc
notb
mov
and
sarb
jmp
mov
or
shl
push
xlat
out
mov
pop
or
cmc
mov
popf
es
fadds
aad
mov
xor
imul
movsb
lcall
xchg
shll
stc
cmp
in
and
paddsw
push
rcr
out
out
or
daa
push
inc
testl
les
and
or
inc
mov
mov
add
into
cmc
sarl
cmp
mov
std
sub
dec
lret
data16
ret
dec
mov
push
jmp
jns
ror
out
iret
mov
dec
orb
xor
cwtl
mov
cmp
ljmp
inc
negl
sbb
jl
xchg
pop
pop
cmp
lea
push
mov
xchg
shll
and
js
or
lahf
cmp
cld
dec
aad
cli
xchg
pop
pop
xor
ds
loop
negl
dec
lret
push
jb
jmp
pop
push
out
jb
mov
push
xchg
imul
mov
stos
call
adc
xchg
fs
mov
push
xchg
push
adc
push
push
fimuls
mov
fwait
loope
cmp
movsb
mov
lret
mov
je
loopne
sbb
pop
pop
sbb
mov
adc
sti
mov
int
adc
jnp
cld
enter
or
rcrb
inc
aam
mov
xlat
cmc
push
push
cwtl
enter
mov
mov
leave
push
xor
cld
imul
inc
add
mov
inc
cmpsb
imul
mov
fmull
mov
mov
jb
jns
mov
xorl
xchg
mov
sub
fmuls
dec
or
inc
xchg
je
movsl
imul
sarb
data16
push
pop
notl
test
sub
es
pop
idivl
xchg
xchg
lcall
mov
pop
cmp
repz
mov
adc
out
add
pop
xchg
pop
dec
cmp
cmc
sbb
test
jecxz
mov
add
or
fisttpll
push
xor
push
xor
push
cltd
out
inc
fists
jl
xor
data16
cmp
hlt
in
push
sub
fisttpl
mov
mov
dec
adc
mov
and
cmp
js
leave
into
popa
cmp
mov
cmp
daa
push
sbb
mov
loop
mov
dec
mov
idivl
sbb
lock
scas
cltd
nop
aad
adc
dec
push
adc
dec
nop
cmp
sbb
out
push
stos
inc
std
sbb
or
sti
lret
data16
cmp
les
int
cmp
ss
testl
ret
mov
in
or
mov
gs
push
mov
sahf
mov
mov
adc
adc
sbb
or
jl
sar
pop
fcmove
mov
aad
clc
jne
gs
les
jo
mov
push
movsb
inc
xchg
sub
mov
sti
pop
std
jge
sub
mov
cmp
xchg
jge
scas
inc
xor
jl
sar
pop
and
inc
int
popa
mov
pop
and
push
sub
insb
cmpsb
jne
icebp
cmc
lret
fsubr
xor
inc
mov
fdivr
mov
add
mov
in
pop
das
mov
xchg
add
addl
pusha
movsb
imul
mov
insl
ja
imul
or
mov
stos
inc
push
fnstsw
and
xor
js
cld
in
out
movsb
xchg
dec
lods
push
into
out
ljmp
insb
sbbb
jo
std
std
mov
sub
fistps
scas
int
pop
loope
lcall
mull
jg
push
rcrb
and
sub
outsl
jp
cmc
mov
cmp
and
jo
xor
dec
mov
or
jne
push
mov
es
push
adc
sti
cmpps
ss
lods
inc
stos
jb
push
add
sahf
cmpsb
mov
pop
dec
dec
push
inc
and
pop
lret
vshufps
idiv
test
fs
or
cmp
stos
pop
xor
sub
xchg
push
imul
xchg
dec
sbb
adc
add
repz
movntps
push
fists
inc
ret
sub
lock
xor
movsl
dec
dec
mov
jp
mov
sbb
lret
faddl
cmp
sbb
or
leave
ja
or
and
fsubs
adc
cmp
push
inc
push
xchg
and
or
sub
sub
mov
scas
aad
mov
incl
aaa
pop
mov
mov
jecxz
push
sarb
dec
sti
rclb
cmp
pop
sbb
mov
scas
push
push
jp
lret
cmpsl
call
pop
or
and
cld
aad
xor
imul
mov
xor
jmp
out
aam
js
mov
adc
test
dec
sub
xchg
test
mov
jo
jg
test
fnstenv
hlt
enter
and
popa
fbstp
mov
adc
and
scas
xchg
and
lcall
inc
andl
loope
cmpsb
popa
fcompl
cmp
rorb
int
aad
xchg
mull
negb
cs
cli
adc
filds
mov
dec
lcall
mov
mov
loope
stos
bound
and
xor
repnz
mov
les
pop
and
or
push
mov
sub
sbb
mov
mov
test
hlt
int
add
mov
jge
mov
shr
js
movlps
pop
mov
push
jmp
push
arpl
push
adc
lock
push
int3
out
inc
or
shl
notl
cmp
dec
cs
lods
insb
jb
sti
cmp
loopne
mov
dec
jmp
sub
rorl
loopne
loopne
sbb
cmp
cli
in
adc
lret
cmp
ljmp
ficoml
jmp
clc
jecxz
pop
loope
fs
push
inc
ret
out
push
fucomi
sub
mov
call
test
je
mov
stc
mov
bound
aam
lds
or
push
cmp
fs
jl
adc
mov
roll
das
sbb
scas
adc
push
les
lods
icebp
dec
lods
add
sbb
push
jb
mov
push
push
shlb
xor
add
std
mov
mov
aas
and
push
arpl
cmp
mov
rolb
or
icebp
int
mov
outsl
out
mov
sti
mov
lret
mov
jnp
push
pusha
push
repnz
add
pusha
jb
and
inc
sbb
sub
imul
test
divl
sahf
lds
pop
int
inc
out
dec
xchg
sahf
jle
sbb
add
inc
push
lods
sub
lret
inc
cmp
pop
pop
jl
mov
jnp
iret
jmp
clc
iret
stos
stc
or
cmp
sti
dec
scas
out
jecxz
xchg
js
fnstcw
jge
jp
lcall
mov
lods
mov
hlt
jle
jmp
jge
lret
add
jns
arpl
cmp
xchg
cli
test
push
testl
scas
cmpsl
xchg
mov
mov
or
push
mov
outsb
ficomps
xor
daa
and
jne
leave
dec
cmp
into
pop
aad
push
xchg
push
shl
cli
gs
mov
push
add
sub
pop
push
outsl
loope
sti
and
dec
mov
icebp
pop
inc
loop
fdivrs
andps
sbb
jmp
sbb
inc
fcoml
xchg
mov
into
sub
stc
int
call
not
iret
mov
push
mov
pop
mov
add
iret
adc
xor
dec
inc
js
push
dec
or
testl
pop
repz
pop
or
xor
iret
addr16
aad
test
sbb
jp
int3
in
ds
fiaddl
push
vpmulhuw
jbe
std
test
aad
test
pop
mov
jmp
mov
out
or
sbb
rcrl
pop
xchg
dec
std
mov
and
pop
aaa
andl
xchg
or
cmp
imul
mov
in
adc
subl
dec
jmp
jmp
adcl
mov
in
cmc
aam
xor
and
mov
jbe
adc
push
sbb
int
int
sbb
or
push
mov
inc
or
push
mov
mov
test
shrd
sub
sub
out
clc
cmc
lret
fisubl
int
inc
aad
adc
je
in
mov
jo
lret
cwtl
jae
repz
mov
hlt
setae
data16
jns
adc
add
ds
mov
les
test
cmp
adc
fsubs
push
jae
pop
test
xchg
lret
or
mov
pop
mov
xchg
xor
mov
and
xor
push
and
enter
mov
sbb
negl
das
inc
push
sub
ja
xchg
dec
mov
in
mov
mov
daa
or
mov
call
leave
test
fisubrs
pop
adc
rcl
and
sbb
xor
inc
fs
add
xchg
push
sub
inc
testb
hlt
or
dec
stos
fidivs
xor
add
adcb
sub
mov
xchg
mov
loopne
mov
lret
mov
js
fistps
cmc
data16
pop
shll
ds
js
cmp
lcall
popa
call
cmc
shlb
popa
pop
stc
std
cmp
nop
or
int
xchg
fs
dec
out
mov
outsl
mov
bnd
adc
cli
xchg
push
or
mov
dec
mov
xchg
and
lock
or
daa
negl
or
cmp
push
add
push
push
es
push
mov
jns
adc
loopne
xchg
dec
test
cmp
jo
mov
ljmp
out
mov
or
xchg
inc
mov
xchg
sbb
push
inc
add
in
daa
jae
sbb
loop
out
lret
in
cmp
sub
sbb
in
mov
in
add
sbb
cli
cltd
test
in
and
add
orl
mov
mov
repnz
xor
mov
aad
and
inc
sbb
inc
aam
mov
loop
xchg
add
adc
lods
sub
xchg
incl
test
pop
or
mov
aam
aad
test
add
call
pop
jmp
rorb
lcall
and
lods
xchg
out
xchg
mov
jp
mov
shll
nop
xchg
sub
stos
cmp
repnz
cmp
mov
adc
shrb
mov
sbb
test
dec
out
loopne
jp
leave
enter
xor
push
pusha
in
lcall
xor
add
and
fstpt
or
pop
je
pop
popa
sbb
repnz
stc
mov
repz
pop
dec
cmp
mov
or
mov
inc
and
jbe
pop
imul
jnp
xchg
cmp
fdivs
xchg
rorl
fcom
jmp
sti
jge
gs
xchg
cmpsl
aas
nop
andl
and
xor
int
int
xchg
in
dec
adc
xor
cmp
stos
ljmp
cli
add
lea
jae
aad
insb
das
mov
xor
rorb
arpl
mov
jb
sub
inc
dec
cmc
aad
push
cmp
sti
push
lods
push
inc
sti
lcall
add
xor
fcmovnbe
jns
out
outsl
movsl
bound
ret
dec
jecxz
mov
jmp
or
dec
aad
add
mov
arpl
xor
xchg
repz
xchg
shlb
push
xchg
loopne
xor
es
mov
lock
into
and
add
lock
mov
add
scas
dec
inc
sahf
cltd
and
test
dec
cmp
scas
add
add
lahf
lret
into
cmpsb
mov
movsl
ljmp
mov
fnstsw
cmp
or
idivl
jns
out
cmc
mov
xchg
mov
push
es
dec
data16
sbb
sub
lods
add
adc
lock
bound
adc
xchg
dec
and
rorw
pushf
lcall
fadd
ja
lock
iret
dec
mov
popa
xchg
cmp
repz
sti
insb
adcl
scas
xchg
sub
fbld
push
lock
sub
or
or
rorb
mov
sar
adc
sbb
add
cmc
je
fists
xchg
push
xchg
stc
in
pop
mov
scas
in
test
js
minps
sbb
fdivrs
test
aam
cmp
out
aaa
mov
cmc
fs
jp
fdivrl
add
add
push
adc
repz
adc
cmc
int
mov
cltd
inc
xor
inc
call
add
cmc
sarb
fdivrl
adc
inc
mov
mov
popf
and
jle
jge
adc
cmp
mov
cmp
loope
mov
sub
mov
dec
cmp
inc
dec
sti
and
push
pusha
sbbb
ja
jmp
out
xchg
test
xchg
add
xchg
inc
shll
sbb
mov
jg
pop
mov
and
rcll
pusha
in
pushf
cmp
loope
daa
out
cmove
shlb
mov
pop
not
xchg
cld
outsl
les
pusha
pop
mov
inc
hlt
xor
js
or
xchg
and
mov
xor
cli
sbb
das
dec
adc
mov
fldt
int3
mov
aad
scas
out
data16
and
pusha
stc
dec
stos
add
inc
cmp
push
in
in
es
inc
cli
aam
push
add
lcall
mov
jmp
loop
sub
je
fstpt
call
jne
stos
push
mov
int
wrmsr
lret
xchg
xchg
xchg
inc
scas
mov
loope
std
cmp
iret
icebp
cmp
into
bound
sub
out
cmp
and
repnz
xchg
cmp
mov
xor
decb
scas
or
test
ljmp
out
test
or
test
pop
jge
pusha
fisttps
pop
xchg
mov
cli
xchg
mov
pushf
adc
lods
test
xchg
and
dec
inc
jp
xchg
add
fldt
aad
lds
adc
out
mov
cmc
dec
mov
sub
repz
jp
dec
inc
mov
stc
mov
lods
int
inc
cmp
pop
cmp
xchg
lods
jb
and
cmp
dec
scas
imul
pop
shrl
jl
sub
data16
shr
sub
popa
mov
sbb
push
loop
sbb
mov
aad
fmuls
push
subb
in
xlat
lock
into
mov
adcb
xchg
jge
and
xor
sub
cmc
or
and
stos
add
dec
pop
loop
sub
or
cmc
jns
ret
adc
pushf
mov
scas
jl
pusha
and
and
or
add
orb
sqrtps
out
insb
popa
pop
daa
jge
sbb
mov
dec
cmp
jmp
pop
ss
cmp
push
inc
out
cli
pop
jp
dec
dec
lods
in
mov
call
cmp
cmpsl
mov
dec
outsl
pop
fsubrs
push
dec
insl
xchg
inc
call
cltd
lods
out
lods
or
mov
mov
int3
add
mov
mov
mov
cmpsb
mov
aad
ds
fmulp
sub
cmc
dec
hlt
push
int3
mov
jle
add
or
or
outsl
push
rorl
je
out
jmp
inc
stc
mov
sbb
mov
in
fucomip
xor
popa
cwtl
pop
out
imul
and
cmpsb
cmp
scas
xorb
mov
or
das
fstpl
adcl
faddl
sub
cmpsb
imulb
int3
sbb
fdivl
cmp
xchg
pop
sbb
pop
daa
mov
jns
jmp
repz
and
jl
fsts
fwait
xchg
pop
inc
adc
inc
mov
xor
aad
xchg
nop
scas
jbe
xchg
inc
movsb
sub
mov
push
imul
cmp
mov
fildl
in
or
mov
jle
arpl
in
xor
xchg
jecxz
mov
or
dec
pop
jecxz
pop
clc
xchg
addb
lods
fucomp
int
adc
mov
push
frstor
into
into
dec
jbe
in
fs
add
inc
xchg
sub
jb
sub
sbb
stc
loope
add
frstor
jl
out
adc
stos
jns,pn
pusha
or
xor
xchg
outsb
pusha
loop
push
inc
in
mov
shrl
icebp
rcrl
out
jbe
pop
out
test
mov
xacquire
jmp
pusha
mov
mov
and
mov
xchg
xor
mov
pop
jbe
jnp
stos
jg
std
jmp
arpl
js
ljmp
xchg
fsts
out
jmp
jl
push
mov
mov
ja
sarb
mov
je
das
and
enter
mov
jle
pop
in
enter
pop
lods
push
inc
sub
filds
jb
push
out
mov
and
add
pop
xor
test
add
mov
mov
xlat
rolb
cmp
mov
jbe
popf
bound
xchg
mov
lret
mov
push
sti
stos
mov
jo
aaa
push
out
dec
push
push
jecxz
aad
mov
sarl
adc
mov
sub
add
fldcw
imul
cmp
and
scas
mov
push
jle
dec
mov
mov
dec
aad
sbb
and
xchg
sub
dec
addl
jecxz
insl
movsb
imul
fs
xor
dec
or
mov
js
lahf
pop
in
dec
cmp
jle
aad
outsb
shll
movsb
repnz
cmp
mov
das
mov
jmp
mov
cmp
jne
popf
adc
add
iret
outsb
mov
gs
sbbb
mov
mov
or
adc
mov
sti
jge,pn
test
lds
mov
int
or
jbe
jge
loope
pop
mov
and
dec
fcoms
aaa
sbb
push
mov
dec
stc
dec
rcll
or
rcrl
jno
push
je
dec
bndstx
notl
dec
adc
aam
jbe
xchg
bound
xchg
add
jns
addr16
test
shrb
repz
push
jno
into
loop
push
pop
leave
mov
fnstsw
cs
push
fldenv
int3
into
bound
cmp
lahf
mov
fidivrl
rsqrtps
cmp
rorl
jnp
mov
jmp
aad
cmp
aas
and
cltd
les
add
xlat
inc
lock
cli
cmp
shlb
cli
dec
push
adc
out
xchg
fwait
lds
cmpsl
add
cs
jl
ja
divl
jle
jge
adc
sbb
ds
xor
mov
cld
mov
stos
or
sahf
jp
ljmp
cmp
xchg
lahf
sbb
pop
xor
pop
cmpb
mov
dec
adc
fisubs
dec
sub
shlb
dec
outsl
push
sub
push
jns
sub
jge
dec
adc
fistpll
sub
adc
and
fnstcw
and
ret
sub
and
mov
or
cmc
sarl
int
fwait
into
test
repnz
xor
mov
test
adc
test
jno
cmc
mov
jnp
test
pop
lods
dec
jle
imul
out
push
cmp
jg
and
repz
and
std
push
fistpll
popa
mov
push
mov
cmp
int
push
leave
je
roll
ret
das
adc
out
or
sub
sub
adc
inc
dec
outsb
movsb
lret
sbb
sub
inc
hlt
mov
jno
jo
ds
jecxz
dec
mov
cmp
xchg
inc
push
jae
and
xchg
les
adc
pmaddwd
mov
adc
push
and
out
cmp
mov
push
push
stos
mov
cmp
inc
in
pop
jge
out
mov
cmp
add
add
lahf
mov
roll
xor
sub
js
rorb
in
scas
call
push
scas
icebp
popa
mov
shrb
lcall
sub
cmp
jo
xchg
xor
inc
in
notl
call
inc
adc
gs
cmp
xchg
test
push
mov
mov
mov
fcoms
je
aad
push
scas
lds
aaa
in
int3
mov
mov
mov
or
or
lcall
loope
sahf
inc
mov
and
cmpsb
cmc
gs
cmp
sub
out
fdivrp
dec
loope
fnstsw
inc
sbb
stos
xchg
mov
or
scas
sahf
iret
push
int
pop
ja
lcall
push
inc
dec
sbb
xlat
sbb
es
adc
dec
mov
jbe
mov
xchg
int
sub
cli
sbb
insb
cmp
out
clc
mov
les
iret
sbb
jno
xchg
xor
lret
dec
psubw
mov
faddl
lods
movsb
data16
out
jbe
addr16
dec
sub
jo
xor
add
sbb
pop
pop
and
mov
cwtl
jecxz
rcpps
test
adc
cmp
push
jnp
inc
mov
xlat
push
xor
mov
sbb
jnp
mov
mov
sub
sti
mov
es
mov
pop
sub
lods
cmp
out
lahf
jl
cmp
push
loopne
sbb
jne
fs
in
adc
xor
push
mov
repnz
fnstenv
jno
inc
mov
aad
nop
shlb
push
jp
fidivrs
addr16
or
and
test
rol
or
mov
jmp
fbstp
js
out
sub
mov
or
mov
filds
xchg
or
pop
mov
scas
lock
fsubl
test
ja
fstps
cmc
cli
sbb
sbb
pop
sub
lret
pslld
repz
int
pusha
ret
incb
rorb
cmp
xchg
sub
cmp
mov
inc
in
jb
cltd
hlt
into
outsb
mov
inc
repz
insb
fistps
dec
and
nop
push
sbb
test
and
ret
jecxz
in
rol
adc
push
lds
sti
pusha
push
dec
jmp
mov
push
stos
int
add
cmp
cmp
xchg
clc
inc
push
cmp
push
dec
push
jg
cmc
inc
cli
xchg
int
push
add
jecxz
insb
xchg
and
insl
test
fimull
jnp
push
mov
xorl
addr16
sbb
pop
xchg
int
sar
sub
sbb
shlb
sub
aam
mov
dec
mov
shrl
add
call
xor
cmc
push
mov
mov
aad
fdiv
pmaxub
mov
call
daa
sub
sbb
outsl
jns
fstps
xlat
xor
shll
add
cld
jge
jg
pusha
in
or
cmp
mov
icebp
pusha
sub
pop
int
loop
dec
mov
mull
scas
pop
in
inc
movsl
jo
add
sahf
pusha
xchg
leave
std
ds
int
repz
iret
mov
push
test
mov
outsl
push
out
xchg
sbb
jl
jp
dec
xor
sub
jmp
push
push
shlb
movsb
xlat
int
mov
mov
push
pusha
mov
sbbb
pop
rcll
sbb
fistpl
mov
mov
in
mov
test
fwait
xlat
xor
pusha
loop
mov
add
jbe
pop
xor
scas
and
fisubs
mov
and
popf
in
in
bswap
stos
ds
push
pop
xor
cmp
dec
popa
popf
xchg
mov
popa
adcb
xchg
jmp
scas
adc
lret
out
pop
cmc
push
or
clc
sti
mov
mov
push
add
fs
xchg
adc
jnp
mov
rcl
pop
inc
mov
add
aad
jge
in
cmp
inc
pop
pop
in
sbb
jnp
push
sub
jo
xchg
push
mov
clc
int
aad
popa
inc
sbb
jb
test
arpl
add
push
fwait
jmp
sbb
mov
or
add
adc
xchg
std
int
loope
rclb
in
out
xor
shll
test
insl
adc
ss
adc
push
push
insb
sub
cli
mov
dec
aad
cmp
shlb
lea
push
loopne
scas
shll
adc
xor
jns
push
nop
pop
and
sbb
stc
cmp
cmc
mov
jnp
cwtl
addl
inc
xchg
out
cmpsb
out
adc
or
repnz
inc
xchg
dec
jmp
sbb
stos
addr16
cmp
fisttpl
or
data16
mov
loop
aam
jge
mov
test
fld1
and
movsb
sti
and
ficomps
adc
or
hlt
sahf
xchg
or
rorb
mov
aaa
add
jo
mov
arpl
cvtps2pi
fwait
push
mov
out
sub
sub
or
pop
test
pusha
jp
outsl
pop
inc
adc
sbb
inc
mov
cmp
out
call
mov
addl
aas
push
pop
imul
push
aaa
fildll
add
in
sti
daa
mov
pop
sti
and
xor
mov
mul
sbb
mov
les
aad
popa
std
jmp
add
cmp
and
xor
mov
cmp
jno
dec
aad
scas
add
imul
dec
addr16
cmc
xchg
add
cli
jbe
jmp
icebp
sub
aad
and
xchg
mov
filds
outsl
and
push
movsl
jle
xor
unpcklps
or
push
push
or
cmc
iret
loop
push
outsl
xorb
je
cmpxchg
shl
das
subl
mov
add
addr16
popf
xchg
mov
adc
add
xchg
mov
stos
push
mov
shrl
int
pushf
daa
push
mov
mov
lods
pusha
adc
ljmp
sub
push
js
in
scas
aad
push
xchg
test
dec
jle
cmc
js
rolb
std
pop
insb
push
incl
jo
sub
jae
in
out
jmp
stc
cmove
add
call
ret
sub
inc
nop
cmc
popf
sbb
push
pop
adc
and
jecxz
dec
nop
addr16
xchg
jge
imul
push
pusha
jle
jg
imul
jbe
add
xlat
dec
dec
out
test
test
xor
fisubrs
fcompl
adc
sub
add
iret
xchg
fisttpll
loopne
movsb
mov
sti
aam
outsl
mov
fimull
das
je
mov
sahf
push
mov
and
lds
out
idivl
mov
xchg
and
add
cmc
cmpsl
dec
xor
or
jmp
sbb
xchg
sub
and
mov
cmp
stos
push
push
pop
aad
outsb
add
lahf
jge
add
cmc
cmpsb
jl
fucomi
mov
push
mov
ja
decb
dec
stc
in
or
cmp
adc
and
outsb
pop
jae
fucom
cs
icebp
into
mov
loope
mov
mov
cmpsl
pop
adc
mov
incb
or
xchg
cmc
pop
fcomps
push
out
insb
mov
lock
or
push
jecxz
cmp
adc
sbb
negb
rcl
jl
test
lock
jnp
dec
sbb
sbb
lock
notb
mov
push
jne
je
std
mov
and
in
nop
inc
jge
sbb
xor
repz
jbe
inc
jl
jmp
cmc
arpl
xorl
push
xor
add
je
outsb
test
dec
sub
repz
psadbw
xchg
inc
sbb
mov
call
scas
clc
addr16
push
adc
xchg
imul
cmp
and
cmp
cmp
xlat
mulb
push
sti
push
into
fsubrs
ret
ljmp
sti
mov
xchg
inc
cs
imul
push
cld
aad
insb
sub
dec
jbe
lret
popf
out
cmc
scas
idivl
jmp
push
sarb
and
sub
js
adc
sub
cmp
test
cmc
jno
sub
sub
pusha
adc
mov
shr
das
shl
loope
xlat
lret
jmp
push
dec
xchg
cmp
jnp
dec
addr16
push
sub
sub
movaps
dec
xchg
mov
jb
add
mov
pop
or
lahf
mov
push
aad
inc
jo
imul
push
add
sub
das
adc
xchg
mov
mov
stos
add
daa
sbb
cmpsl
outsl
lock
xchg
or
lret
mov
dec
js
or
jl
ret
push
daa
push
mov
cltd
cvtps2pi
outsb
ljmp
cwtl
cld
sbb
cmp
dec
and
sbb
mov
pop
push
test
stos
sbb
cld
and
inc
push
cmp
aam
test
clc
mov
out
cmpsb
dec
test
dec
pop
push
test
pushf
add
fildll
cmp
rcll
cmpsb
dec
push
out
ficoml
dec
push
fiadds
in
cs
dec
mov
sub
jp
cwtl
cld
xchg
or
dec
out
push
fwait
popf
in
mov
bound
xlat
call
lds
xchg
dec
push
test
test
xchg
and
scas
scas
cmpsl
adc
fisttpll
movb
pop
inc
les
mov
addr16
loope
les
pop
out
or
jno
add
hlt
pop
pop
lods
stc
fabs
inc
mov
repnz
or
push
add
pop
ss
mov
popl
cld
mov
dec
paddsw
leave
adc
andl
push
cwtl
out
into
imul
dec
push
xchg
cmp
aad
push
and
sub
inc
js
xchg
incb
cmpsb
sahf
and
mov
aad
jnp
shll
loope
fs
out
cmc
out
or
call
lcall
and
jb
jg
insl
jp
iret
cmc
lret
loopne
and
imul
push
imul
leave
lock
sbb
movsl
push
cmc
inc
in
stc
les
mov
dec
jns
stos
fbld
mov
test
insb
mov
repnz
lds
repz
pushf
push
popf
test
arpl
popa
push
sub
in
jge
adc
stos
sub
push
xor
out
pop
inc
push
xlat
xor
mov
fsub
stc
loope
push
and
mov
cmp
mov
fdivs
jg
addr16
jnp
pop
cmp
sub
movsl
push
push
or
cmp
add
lea
jecxz
add
mov
movsl
movsl
cmp
dec
xor
push
cmc
int
out
ss
mov
adc
jecxz
in
sbbl
hlt
jbe
cmp
pop
cs
mov
test
jge
mov
xchg
and
lock
adc
add
mov
sub
xchg
cmpsl
fdivrl
xchg
test
inc
sub
jmp
inc
push
jl
mov
outsl
imul
cltd
xchg
fdivrs
xchg
scas
push
cwtl
imul
int3
cld
mov
push
js
lock
inc
sbbl
aaa
fwait
jns
cmc
push
and
mov
imul
aam
jno
outsl
jecxz
das
js
in
loop
or
mov
xor
icebp
insb
mov
mov
ret
mov
sti
cmc
pop
push
inc
pop
mov
mov
xchg
adc
or
or
mov
out
loopne
out
cmc
enter
mov
sbb
or
cmc
dec
pop
mov
jb
shrl
push
lahf
push
dec
ret
sub
int3
or
into
movlps
adc
into
xchg
add
sar
dec
aad
into
inc
adc
lock
fsubs
frstor
shlb
test
pop
or
push
repnz
push
fcoml
stos
cmp
ds
push
imul
dec
ja
in
outsb
fstps
adc
je
or
xchg
arpl
mov
stos
inc
xchg
sbb
clc
loop
add
int
out
and
loop
dec
cmp
lahf
push
sbb
iret
push
pop
add
int
ja
cmp
adc
jne
pop
pushf
jne
stos
aad
test
inc
in
xor
inc
dec
adc
arpl
sbb
mov
dec
sub
int
xchg
mov
push
add
dec
pop
sub
push
jg
jne
aam
xchg
ja
int3
in
adc
stos
cld
cltd
mov
mov
add
push
xchg
cmp
shl
ret
push
jo
jno
cmp
jmp
dec
mov
testb
xchg
push
add
cld
or
or
and
xor
mov
dec
mov
pop
stc
dec
push
mov
into
dec
cmc
scas
or
pop
stos
mov
mov
negb
movsb
and
push
inc
fnstsw
int
sbb
inc
adc
fistpl
fucomp
cmp
inc
pop
stos
pop
adc
mov
xor
sbb
sub
mov
xor
shll
sbb
push
pop
lret
push
into
rolb
xchg
pusha
shl
aad
bound
ljmp
into
mov
adc
fidivl
sbb
js
test
imul
jmp
mov
xchg
pushf
sub
ljmp
faddl
data16
adc
xchg
mul
fldt
int
mov
dec
jecxz
aad
jne
mov
int
mov
stos
ds
jo
adc
push
ror
jns
neg
and
inc
repz
test
imul
pushf
jns
xlat
push
jbe
jmp
imul
lahf
xor
mov
lods
aas
dec
fisttpl
sbb
in
sahf
xchg
shll
mov
movsl
mov
mov
xor
cmpsl
mov
cwtl
popa
ret
push
sub
aad
adc
cld
sub
mov
xlat
ret
aaa
add
jp
in
mulb
xlat
push
iret
fsub
rcrl
loop
into
push
out
jns
mov
adc
lods
jp
pop
sbb
cltd
jge
outsl
and
dec
sbb
cmp
jmp
xor
enter
test
and
jae
jge
jne
jae
dec
lret
mov
mov
lock
cmp
fsubrl
pop
addl
call
call
out
cmc
mov
in
insl
sbb
push
xor
mov
pop
scas
mov
popf
cwtl
mov
imul
adc
scas
stos
cmpsl
into
rcl
jecxz
fwait
outsl
jl
inc
and
call
mov
mov
cmp
adc
sub
xchg
dec
aad
jl
sub
rcll
adc
inc
pushf
xchg
dec
or
lods
push
lods
xchg
dec
push
inc
int
push
stc
jo
mov
mov
jb
sbb
loopne
int3
loop
or
and
push
jg
pop
fstl
fildll
and
adc
xchg
mov
mov
mov
out
mov
dec
add
aad
call
out
mov
inc
movsb
xor
iret
jno
bound
mov
bound
sbb
jne
out
out
mov
adc
outsb
pushf
test
or
fisttps
and
cmc
es
mov
sbb
fwait
cli
idivb
dec
dec
xchg
call
mov
cld
rorb
dec
ret
cmp
mov
pop
add
sub
or
out
std
ja
movsl
pop
dec
and
jg
mov
push
mov
add
ljmp
dec
xchg
icebp
jle
inc
daa
and
ret
sub
out
dec
out
mov
mov
mov
rorb
or
sti
xchg
or
out
pop
jbe
push
cmc
stos
xlat
dec
rcrl
jg
cld
xchg
xchg
nop
cltd
pushf
sub
test
fdivl
cmp
rorb
jae
out
jg
push
jmp
pop
xchg
aaa
or
jns
add
dec
cmpsb
inc
repnz
mov
call
jmp
mov
int
dec
cwtl
sti
dec
leave
jl
loopne
cmc
movsb
mov
ret
cwtl
cli
xchg
cltd
xchg
or
bound
sbb
dec
sub
dec
mov
mov
aad
push
fldl
sbb
pop
call
rorl
xor
aas
cmp
push
cmp
stos
outsl
and
push
adc
jnp
push
sbb
std
sbb
or
xchg
ret
andl
stos
xor
sarb
fwait
divl
scas
mov
lcall
stos
int
jne
cmp
jp
sbb
push
fwait
pop
sahf
mov
aam
cmp
lahf
jnp
js
rolb
jnp
jp
lcall
mov
sbb
ret
jle
sub
xchg
adc
dec
mov
push
pusha
mov
loope
je
clc
int
mov
movb
cmovo
jae
test
out
clc
and
in
cmp
sub
adc
repz
clc
xchg
mov
xchg
add
mov
out
mov
sbb
mov
test
jmp
xchg
pop
mov
movsb
dec
cmc
arpl
enter
es
or
or
dec
dec
out
cmpsl
leave
dec
mov
mov
pusha
lods
roll
jbe
dec
adc
lods
mov
or
out
shrl
imul
lahf
icebp
inc
out
xor
scas
lahf
test
xor
mov
pop
adc
les
pop
pop
or
pop
mov
push
fnsave
into
sbb
stc
jb
shll
movsb
jg
bound
or
pop
scas
cmp
sbb
les
adc
imul
or
sets
dec
out
push
add
in
jg
add
mov
arpl
adc
sbb
movsl
cmpsl
jg
popf
mov
in
inc
pshufw
jecxz
fs
scas
movsb
jp
dec
enter
loope
outsl
into
nop
adc
cs
xchg
popf
mov
xchg
and
push
imul
int
jbe
inc
test
pusha
mov
cvtps2pi
sub
jno
mov
mov
xchg
int
movsl
push
cmp
mov
push
jae
lret
xlat
inc
add
inc
inc
sarb
push
dec
ret
jp
push
mov
pop
inc
or
jge
dec
mov
loopne
push
js
fwait
dec
dec
inc
jle
jae
test
sbb
icebp
mov
or
iret
incb
scas
add
aas
aas
ror
outsb
fiaddl
iret
sub
dec
or
pop
mov
sub
adc
insl
or
int
pushl
push
fs
or
dec
repz
jmp
rolb
add
adc
pop
outsb
cli
jo
aad
mov
shlb
inc
lods
xchg
sahf
pop
inc
lea
movsl
shll
cmp
jmp
movsb
push
dec
inc
icebp
push
xchg
insl
ffree
or
lds
lcall
inc
pop
push
jb
cmc
out
sahf
mov
mov
dec
pop
lods
pop
fimull
xchg
loop
jnp
jge
or
inc
cwtl
or
mov
or
push
imul
sub
int
add
test
js
pop
xchg
xchg
dec
repz
movsb
rcrb
aad
push
into
jecxz
call
xchg
imul
enter
mov
push
clc
imul
or
std
push
rorl
mov
fs
pop
pusha
dec
loopne
and
mov
jmp
outsb
add
mov
push
sub
xor
add
shrd
popf
ss
or
pop
test
fisttps
mov
cwtl
xorl
xchg
stos
inc
cmp
nop
int
aad
pop
jne
loop
mov
or
cltd
out
cli
jmp
inc
sahf
lds
mov
lcall
cli
push
test
add
in
mov
mov
dec
or
rcr
nop
jb
inc
bound
insl
popf
or
push
pop
lods
dec
cld
dec
sub
lahf
jg
sbb
mov
cmp
add
add
inc
pop
mov
popa
mov
arpl
pusha
imul
jmp
stos
divl
or
int3
jns
and
dec
ljmp
ljmp
stc
sti
idivl
fwait
xor
ja
add
inc
movsl
cwtl
dec
stc
jmp
das
es
cmc
pushf
push
jne
xor
cli
in
ljmp
xlat
sub
add
shr
or
cmp
jmp
cmp
dec
sub
mov
aad
fadds
daa
imull
cli
inc
in
ja
xor
mov
mov
mov
or
cmc
inc
shll
jle
xchg
hlt
iret
mov
test
jne
scas
scas
pop
push
fstpt
call
imul
jmp
inc
pop
push
dec
test
fsubp
daa
orl
cmp
mov
in
outsl
lds
xchg
call
xlat
mov
js
pusha
insb
mov
xchg
hlt
iret
xchg
or
mov
roll
cmpsb
out
mul
push
js
mov
fwait
in
stos
and
inc
leave
movl
mov
aad
dec
cmpsb
mov
mov
test
push
aad
mov
push
adc
dec
cltd
arpl
aad
mov
adc
dec
pop
cmp
cwtl
xchg
into
test
xchg
cmp
popa
xchg
jo
push
fdivrl
mov
or
adc
lds
lret
mov
dec
xchg
cwtl
push
xchg
pop
les
lahf
cwtl
pop
cmp
mov
sbb
popl
mov
and
xchg
in
dec
push
push
dec
mov
imul
and
lea
cmp
mov
test
subl
or
cmp
out
lods
mov
bound
adc
cld
jg
jb
bound
loope
mov
xchg
std
shl
adc
scas
test
data16
sub
inc
out
repz
stc
add
in
iret
fisttpl
jp
push
cmp
push
fmuls
add
imulb
push
push
in
xchg
js
fcmovnu
nop
test
insl
or
jmp
jo
pop
push
in
out
ljmp
cmc
jl
cmpsb
pop
push
call
pop
shlb
lahf
xchg
out
push
sbb
pop
rclb
inc
mov
mov
dec
divl
cs
mov
stos
push
movsb
repnz
fdivrp
es
or
mov
push
or
imulb
cmp
out
push
enter
adc
xchg
jb
add
icebp
test
mov
sub
aas
mov
aad
imul
imul
inc
fwait
or
xchg
sarl
xchg
sbb
pop
es
sbb
and
cmpsb
and
or
cs
pusha
jns
iret
pop
adc
xlat
jp
bound
push
fucomip
cmc
cmp
mov
or
or
dec
mov
les
int
popa
aaa
mov
cmp
jnp
pop
jo
sbb
xor
mov
and
add
dec
push
push
jmp
inc
test
scas
or
cmp
mov
add
popa
scas
pop
mov
add
in
lods
mov
nop
mov
mov
push
aaa
inc
fs
mov
jp
imul
aam
test
sub
sbb
push
dec
call
push
imul
sub
sbb
dec
stc
cmp
pop
bnd
inc
and
jg
xchg
fs
push
jle
pop
jge
iret
dec
aad
push
mov
or
popa
mov
js
or
fwait
cltd
pop
popf
ja
das
icebp
jae
cltd
sub
ja
or
or
pop
sti
nop
mov
int3
adc
in
inc
rorl
and
addr16
call
addr16
in
xchg
addr16
test
cmc
test
adc
fwait
jo
jae
testl
mov
int
addr16
divl
rcrl
xchg
test
push
into
int
pop
dec
sbbl
push
aad
rcrb
lea
pop
inc
psllq
cmc
push
and
dec
arpl
sub
lods
gs
scas
inc
clc
mov
jae
fnstenv
dec
stos
test
dec
ds
add
js
fcompl
outsl
pop
or
cmpsb
mov
ds
mov
mov
xchg
out
repz
in
roll
mov
enter
push
mov
std
in
mov
jmp
scas
mov
rcrb
arpl
xchg
clc
cmp
add
popf
jl
in
add
mov
repz
mov
es
daa
sbb
iret
scas
cs
popf
jge
or
mov
or
cmp
dec
xchg
cwtl
mov
lahf
in
repnz
push
dec
cld
dec
ss
sub
out
movsb
loopne
mov
sbbb
inc
cmp
mov
addr16
sub
ja
inc
idivb
into
cmc
nop
mov
mulb
mov
fs
outsl
aaa
push
pop
shl
inc
adc
pop
aad
test
adc
jp
push
cmp
xor
imulb
psubusw
mulb
and
outsb
xchg
sub
mov
ret
daa
cs
lock
and
xor
idivl
sub
xor
sub
int
jne
sbb
mov
dec
das
xchg
adc
mov
push
ret
and
aas
aam
pushf
push
test
testb
jne
push
in
xchg
cmp
xchg
mov
dec
shll
cmc
inc
mov
in
dec
cmp
stos
dec
inc
inc
mov
fnstcw
out
dec
imul
sahf
dec
das
mull
add
ljmp
xor
fs
adc
es
or
add
cltd
dec
mov
scas
jmp
mov
cmpsl
xchg
push
push
or
cmp
fwait
push
insl
pop
inc
and
outsb
testl
clc
cltd
sub
mov
dec
mov
imul
sub
xor
fsub
pop
fs
mov
test
ljmp
add
adc
dec
mov
inc
in
jnp
mov
loope
popa
xor
or
adc
iret
dec
test
add
out
aam
pop
outsl
jge
cmp
mov
adc
cmovl
cwtl
lcall
dec
sbb
xor
mov
adc
dec
mov
push
rcrb
scas
xor
ret
subb
sub
aad
lods
add
jmp
adc
les
sti
out
sub
add
inc
push
lods
clc
scas
pusha
cmp
decb
adcb
ficoml
icebp
cltd
push
popl
add
mov
loopne
jb
fdivl
inc
sbb
xchg
xchg
mov
pop
pushf
fldt
sbb
mov
dec
dec
stos
pop
push
sbb
xor
pop
das
dec
aad
xchg
adc
dec
pop
jns
repz
mov
subb
scas
sbb
jge
and
push
negb
mov
mov
jo
and
mov
sub
in
fstpt
out
push
xor
pop
fldcw
ret
inc
jns
jns
aam
sti
xchg
and
adc
and
aam
xchg
mov
pmaddwd
jle
enter
dec
dec
sbb
lret
scas
cli
insl
mov
ja
call
andl
std
inc
push
pop
sub
pmullw
mov
incl
cli
daa
loope
dec
xchg
and
push
cmp
sbb
in
dec
in
mov
inc
fld
xor
pusha
or
imulb
sub
mov
lds
lcall
and
lods
push
and
mov
ds
push
sbb
xchg
fnstsw
push
scas
and
test
dec
push
stos
int
outsl
div
outsl
mov
sbb
lods
pop
dec
pop
adc
sti
nop
xchg
into
not
aaa
mov
sub
push
xor
jle
fcompl
mov
dec
in
jge
in
int3
std
xchg
test
cmc
dec
cmp
sub
sub
mov
pusha
fiaddl
lcall
inc
and
shrb
jb
and
push
fstpt
nop
enter
xlat
loopne
std
jmp
enter
in
fistpl
jns
sbb
ljmp
pop
addr16
daa
dec
sbb
inc
in
sbb
adc
lea
loop
arpl
push
lods
cli
sbb
mov
inc
popl
stos
xchg
cli
lcall
jge
test
shll
sub
push
idivl
out
lods
pop
scas
sti
ret
mov
js
or
cmp
call
jecxz
sarb
arpl
loopne
fidivs
ljmp
jge
rcr
outsl
insb
aad
adc
ja
sub
cmc
or
pop
fstps
and
inc
flds
push
or
pmaddwd
push
mov
repz
mov
jbe
jecxz
add
jns
mov
and
imul
and
mov
xor
jbe
stc
out
jecxz
repz
and
ds
xchg
or
mov
jns
out
mov
cmpb
leave
cld
repnz
mov
fimull
sbb
stc
mov
aad
popf
ror
and
inc
arpl
sar
push
ret
adc
dec
cmp
pop
mov
xlat
cmp
inc
out
adc
sub
mov
out
popa
cli
movsb
lods
iret
fstl
mov
or
add
sbb
jp
jmp
inc
xchg
hlt
push
add
std
out
jmp
or
lret
sub
aad
lcall
popf
shlb
mov
ss
out
jge
loopne
cmc
fildll
mov
aas
scas
xchg
das
sbb
cmpsb
cmp
stc
push
out
hlt
inc
mov
movb
xchg
adc
mov
out
push
leave
aad
adc
out
pop
in
or
sub
loope
mov
mov
mov
push
push
outsb
cmp
inc
push
dec
add
mov
in
fiadds
push
xchg
popa
cmp
mov
push
and
jne
mov
scas
xchg
sbb
mov
sub
aam
repz
mov
stos
loope
in
movsb
jo
sub
int
jp
jns
out
ds
sbb
outsl
sti
arpl
dec
js
scas
out
sub
dec
andl
jne
and
cwtl
or
out
mov
out
lea
roll
pop
and
jns
add
pusha
sarb
push
into
mov
mov
inc
out
inc
jns
into
stos
ja
mov
pop
mov
aam
dec
xchg
jp
adc
cli
aaa
xor
add
and
cltd
mov
jle
ljmp
jmp
std
sub
jo
testl
js
mov
imul
test
lock
jns
jle
cld
inc
jle
and
push
nop
pmaddwd
mov
pop
rcll
cmp
std
lahf
push
xchg
lods
push
test
pop
sub
and
xchg
mov
xchg
mov
mov
sub
lea
jmp
xchg
pop
cmp
add
jno
stc
in
sti
mov
lods
adc
xor
add
jl
jecxz
popf
mov
jo
push
jmp
add
lods
fsubrl
cmp
add
test
aad
xlat
incb
outsl
aam
mov
stos
push
ret
imul
je
out
adc
mov
or
out
fistpll
test
xor
sbb
mov
dec
iret
push
scas
fists
inc
loop
js
jecxz
xchg
mov
jo
pop
adc
int3
aad
jns
add
fiaddl
test
and
dec
ja
jnp
cmp
add
int
or
lcall
sub
popa
push
mov
stos
rcrb
mov
or
aad
jg
mov
shr
in
pop
aad
mov
mov
lahf
and
mov
aad
xor
arpl
punpckhbw
rcl
les
testb
xchg
mov
out
mov
cli
jl
sub
iret
push
out
cmc
addb
sarl
inc
lods
or
aam
jle
xor
xchg
pop
inc
push
repnz
push
dec
mov
daa
in
sti
push
mov
mov
ljmp
fwait
xchg
push
out
mov
rclb
pop
pop
pop
xor
and
mov
pusha
dec
data16
mov
sbb
cli
sbb
in
cmp
es
or
sub
mov
cmp
sahf
xorps
shrl
fcomi
pop
in
test
arpl
out
jb
ja
mov
xor
test
cmc
jge
xchg
xchg
jmp
adc
and
nop
gs
push
and
push
sub
dec
sti
xchg
push
aaa
repz
cmpsl
sub
mov
jp
xor
cmc
fadds
les
mov
jg
push
iret
into
pusha
es
dec
aad
les
aad
cmc
imul
mov
imul
cmp
aam
call
pop
sti
out
int
hlt
nop
and
mov
bound
mov
jns,pt
pop
shr
out
jmp
xchg
xor
into
mov
jo
dec
xlat
adc
mov
loopne
pop
cmc
pop
hlt
mov
cli
cmpsl
jl
mov
jp
adc
insl
les
ss
cwtl
dec
out
jo
ljmp
lods
jmp
in
bound
dec
scas
mov
push
movb
cmp
jo
cmp
cmp
imul
sub
push
jae
and
movsl
inc
repz
movsl
imul
js
jmp
cmp
imul
jno
ret
mov
mov
dec
scas
sarb
out
push
push
sub
xchg
mov
dec
add
xchg
jae
fnstsw
lret
or
xchg
out
fsqrt
pop
fisttpl
push
sbb
in
mov
lea
insl
in
mov
pop
adc
dec
adc
inc
adc
dec
xchg
in
popa
or
dec
pop
aam
out
faddp
filds
or
inc
adcl
push
test
pop
lods
mov
push
jmp
dec
daa
scas
mov
pop
xchg
mov
adc
fstps
loope
ret
call
nop
sar
lods
punpckhdq
push
pop
adc
mov
fstl
sahf
dec
xchg
leave
aam
jge
loopne
push
adc
cmp
iret
sbb
adc
xor
adcl
cwtl
and
and
adc
cli
inc
and
test
mov
mov
and
fs
fistpl
cli
mov
mov
xchg
xor
mov
mov
adc
enter
adc
push
push
push
sti
popa
das
rclb
jbe
mov
lahf
xchg
push
pop
or
push
cmc
fldl
jl
mov
popa
pop
xor
adc
mov
aam
adc
mov
mov
shrl
cmp
add
push
stc
test
clc
lcall
lahf
aad
aad
cmp
subps
mov
inc
or
adc
dec
scas
mov
add
pop
lods
mov
cltd
xchg
mov
repnz
shlb
pop
pop
test
pop
add
iret
enter
mov
or
dec
xchg
push
xchg
mov
dec
jg
fadd
imul
inc
mov
push
mov
int
js
jnp
mov
and
outsb
cmpsb
pusha
inc
dec
aam
xchg
inc
div
inc
xchg
mov
and
inc
jne
xchg
outsb
sbb
mov
loop
jge
jg
not
lods
jo
and
loopne
and
push
les
out
jg
or
loope
mov
jno
ret
popa
dec
dec
fwait
or
cmp
jae
lahf
test
and
jae
into
dec
jmp
xchg
clc
jnp
jmp
stos
loope
push
jnp
mov
pop
mov
mov
mov
mov
push
aad
sub
mov
sub
xor
cmp
sub
push
in
js
jge
push
movsl
xor
loope
cmp
jnp
mov
loop
mov
test
jmp
inc
jge
mov
stos
call
push
push
mov
fdivrs
test
rorl
sub
dec
push
outsl
lods
xor
or
sahf
mov
pop
scas
push
pushf
dec
out
xor
xor
stos
sub
sbb
lret
mov
sbb
call
cmc
fldt
and
out
adc
sub
sahf
leave
sub
rclb
out
jbe
mov
stc
push
xchg
pop
cmc
lods
aam
dec
sub
shrl
or
mov
jge
dec
fxch
ljmp
add
inc
fisubs
sub
mov
dec
out
imull
imul
jmp
or
ljmp
aad
outsb
int
sbb
cmp
call
mov
inc
aad
lahf
aad
notb
mov
shl
imul
mov
test
mov
mov
inc
mov
cmc
out
pop
cmpsb
int
add
push
or
ja
add
xor
clc
pop
or
cmp
outsl
mov
loope
dec
cmp
mov
lret
out
or
dec
ffreep
and
add
loope
in
in
dec
enter
push
aad
pusha
dec
mov
inc
mov
movsb
pop
das
adc
jno
int
insl
sub
and
cvtps2pi
cmp
into
jp
outsl
shll
negb
repnz
cmp
lahf
xchg
cmp
repz
sbb
fbstp
leave
cmp
sti
iret
insb
sahf
iret
dec
lods
out
lret
ficoml
push
notl
insl
mov
mov
inc
out
mov
mov
aam
outsl
aad
add
push
cmp
mov
data16
mov
out
push
hlt
push
out
push
daa
fildl
pop
jmp
loope
xor
scas
shrb
test
fs
mov
fimull
call
jnp
dec
cli
mov
lods
and
fcoml
mov
sub
test
ss
outsb
scas
pop
divl
xchg
xchg
sbbb
sub
cmp
or
jle
cmp
xchg
inc
call
jo
dec
mov
loope
cmp
loopne
dec
mov
sti
push
pop
jmp
aaa
scas
repz
lods
in
add
cld
lahf
or
cmc
push
jmp
enter
xchg
or
test
fimuls
and
mov
inc
pop
pop
push
or
or
popa
arpl
jl
fsubrl
mov
mov
mov
or
imul
in
pop
out
pushf
cmpsb
shlb
xor
cs
xchg
repz
push
mov
paddsw
jmp
jb
cmc
cmpsl
adc
inc
mov
and
fldl
in
adc
push
pop
mull
shr
inc
mov
adc
pop
sahf
jg
call
cmp
adc
in
pushf
add
jnp
sub
add
pop
call
aaa
mov
cmc
adc
rorb
sbb
and
rcrl
jns
xchg
xor
push
pop
sbb
aaa
jns
fdivrl
mov
cld
out
les
cmp
adc
add
stc
lods
shld
mov
aam
inc
mov
es
cmp
lock
xor
cmp
push
notl
add
test
aad
mov
sbb
int
push
scas
push
test
leave
fistl
inc
cmp
jg
aad
xor
in
ds
out
mov
loope
jmp
hlt
mov
lods
pop
fdivs
subb
movsl
mulb
pop
in
add
add
ret
fmuls
sub
cs
sub
add
xor
adc
mov
mov
lock
cli
xchg
enter
jp
testl
sub
leave
in
cmpsl
or
pop
iret
cli
testb
bound
push
sub
loop
gs
xor
jg
shl
jl
mov
cmc
lret
stos
test
mov
xchg
mov
jg
gs
inc
pop
and
pop
movsb
notb
popf
sbb
bound
or
bswap
addr16
jb
xor
sar
xchg
or
xor
subb
gs
arpl
dec
pop
mov
xor
push
ja
inc
cli
mov
push
mov
jl
pop
push
sti
cmp
and
mov
icebp
adc
jmp
xchg
mov
iret
cmc
fsubrl
add
xchg
popa
loope
sti
and
inc
subl
sbbb
push
int
iret
mov
add
push
jecxz
jb
iret
insb
movsb
test
lret
mov
jae
pusha
fnstsw
adc
nop
insb
cli
test
jb
dec
mov
xchg
and
inc
mov
notl
mov
sbb
aad
shlb
add
sahf
ss
mov
cmp
outsl
mov
pop
cmp
inc
jbe
sbb
das
sub
fildl
aaa
in
cmp
sbb
sti
cmp
out
aas
rolb
sbb
add
mov
add
pop
rclb
push
mov
pusha
popa
orl
sub
lea
out
pusha
mov
pushw
xchg
adc
jp
inc
jne
daa
stos
add
xchg
sub
popa
jmp
cmp
icebp
mov
fcmovu
sti
cmc
rorb
push
pop
and
xchg
adc
jno
jmp
or
lods
iret
iret
inc
xchg
xchg
outsb
push
je
cmc
xor
subl
dec
mov
ds
dec
add
shlb
mov
dec
pop
loop
push
sti
lahf
std
mov
ja
test
push
sahf
daa
fbstp
sub
cmc
and
mov
xor
gs
test
test
mov
and
mov
out
lods
push
adc
movb
or
fsts
aas
outsl
mov
mov
add
inc
add
aad
mov
out
loop
push
insl
iret
inc
in
inc
mov
jbe
inc
jmp
cmc
les
mov
mov
push
sbb
cmpsl
push
sbb
lahf
inc
cmp
adc
pop
pmaddwd
xchg
jo
in
pusha
xchg
not
xchg
mov
xchg
inc
jg
cld
cmpsb
test
repz
mov
aad
in
and
pop
insl
fdivl
mov
je
cmc
adc
sub
inc
push
push
les
or
mov
movsl
or
mov
or
ret
rorl
sbb
jno
popa
sarb
loope
cld
jnp
dec
int3
sbb
popf
jge
adc
adc
fsubl
data16
aad
aaa
stc
lods
imul
into
loopne
xlat
push
aad
ja
xchg
adc
enter
dec
cmp
in
aam
lods
stos
lock
xchg
cltd
stos
or
imul
dec
mov
clc
dec
nop
push
jl
test
sub
call
pusha
out
repnz
nop
and
adcb
pushf
add
ss
fidivrs
loope
and
mov
outsl
mov
test
lahf
popa
jg
adcl
or
shlb
aas
add
fldcw
movsl
iret
and
incb
inc
aad
sub
ja
mov
fucomi
sti
mov
cwtl
xlat
mov
jno
fcmove
stos
sub
popa
mov
aad
cmp
cs
mov
scas
loop
add
js
out
push
test
pmaddwd
pop
adc
pop
adc
mov
jge
js
pusha
cmpsb
sarb
fildll
mov
pop
out
in
pusha
dec
adc
mov
std
xor
xchg
push
fistpll
out
jb
ja
push
flds
movsl
add
or
adc
xor
inc
and
out
cmpsb
dec
lock
and
loopne
mov
int
jae
jge
adc
cli
inc
jae
push
or
or
mov
ds
xchg
fistpll
mov
cmp
and
inc
sub
lods
outsl
lcall
inc
pop
pop
adc
lock
movsb
lods
xor
out
mov
sub
fwait
divb
lods
arpl
outsl
sub
mov
xchg
test
pusha
iret
rcll
and
in
icebp
dec
mov
fidivrl
mov
or
jge
add
xchg
sbb
test
and
sbb
mov
push
lret
cwtl
xor
inc
jp
xchg
cs
sub
cmp
add
fistpll
mov
mov
mov
sbb
inc
ficompl
xchg
inc
sarl
out
xor
push
xchg
mov
dec
repz
fstl
mov
xlat
movsl
iret
xor
push
inc
mov
lds
je
test
shlb
iret
cmp
xchg
ljmp
xchg
adc
rcrl
pop
cmp
dec
sub
push
or
or
fldt
mov
orb
push
xchg
push
int
iret
jmp
sub
shl
cmp
in
enter
mov
inc
lea
push
test
out
outsl
push
idivl
enter
bound
dec
cmp
sub
inc
sbbb
jg
jp
push
test
lods
mov
jmp
cmc
lds
stos
mov
fistpl
repz
ret
mov
call
enter
add
and
test
jns
lds
push
decl
test
test
adc
dec
jmp
adc
adc
pop
nop
sbb
jns
fstps
fst
loope
mov
repnz
stos
cli
je
pop
fcoms
or
push
in
sbb
popa
mov
insb
icebp
rorb
aam
sub
jl
lea
test
sbb
ficompl
ljmp
in
push
rorl
inc
call
test
xchg
ret
adc
in
in
lret
idiv
loope
mov
sub
mov
pop
sbb
test
sub
mov
jnp
aad
jne
sub
call
popa
mov
sbb
mov
cmp
lods
test
mov
mov
dec
outsl
dec
sub
and
stos
xor
outsl
mov
push
int3
mov
dec
cmc
insb
lods
inc
movsb
mov
or
xchg
inc
lcall
and
and
mov
or
jne
rclb
mov
stc
jmp
mov
sti
stos
add
ljmp
arpl
xchg
int3
shlb
push
or
add
sub
xchg
xchg
cltd
cmp
stc
jne
inc
mov
pop
in
testb
inc
insb
mull
enter
push
ret
or
cmc
add
call
std
dec
xchg
into
dec
out
xor
xor
mov
adc
adcl
aad
or
add
cmpsl
add
jle
lods
call
inc
fldl
pop
shl
pusha
lret
jecxz
adc
xchg
sub
pop
int
push
fmulp
pop
inc
cmp
jmp
arpl
int
aad
rcrb
fcompl
add
aas
je
cs
sti
orb
cmp
jg
and
inc
add
and
stos
adc
out
or
push
push
loope
xchg
xchg
jne
aad
jge
pop
insl
out
enter
int3
aad
sbb
jle
jns
or
ret
inc
mov
pushf
mulb
or
lock
or
fcmovb
pop
mov
lods
in
test
iret
movsl
adc
xor
pop
mov
inc
push
data16
inc
xor
imul
leave
or
roll
or
xor
hlt
dec
jl
in
arpl
sub
out
xor
imul
mov
jl
repnz
fnstenv
mov
xchg
ljmp
adc
mov
aad
add
scas
call
iret
bound
mov
mov
xchg
in
rorl
cmc
mov
and
add
push
xchg
call
lcall
lods
dec
jno
cli
xor
dec
sti
scas
cmp
push
test
sub
stos
mov
or
movsb
cld
aad
pushf
pop
adc
ret
inc
mov
cwtl
pop
fiaddl
loopne
jp
scas
lock
mov
sti
addr16
cmp
sbb
sahf
pop
push
out
js
mov
push
cmp
mov
mov
test
clc
cmp
xchg
mov
cmp
dec
sbb
shll
adc
into
jne
aad
sbb
stos
inc
push
repz
sub
push
pop
shlb
aas
lahf
xchg
dec
xchg
inc
cmp
push
popl
ret
shll
fmull
out
lods
jmp
mov
jecxz
js
or
int
arpl
mov
cs
xor
push
fdivrs
jp
aad
jo
pop
mov
adc
xchg
fadds
sbb
dec
xchg
aad
cmc
xchg
insl
je
ljmp
loope
rcll
pop
sbb
push
and
sbb
stos
pop
lret
mov
ljmp
in
fisttps
shrl
icebp
cmpb
sub
das
adc
mov
andb
push
out
jge
add
push
int
div
pop
out
and
loope
call
popf
fisubrs
xchg
mov
aad
jmp
loope
pusha
scas
add
or
out
adc
mov
nop
popf
outsb
mov
add
ret
out
sbb
dec
int3
repnz
dec
or
ja
mov
mov
dec
dec
xchg
mov
out
xchg
cli
cmpl
cmc
dec
sbb
hlt
adc
sbb
adc
nop
cmc
sar
gs
iret
mov
mov
or
les
mov
dec
and
iret
into
repz
mov
stos
lahf
adc
dec
mov
lods
filds
mov
les
repz
icebp
mov
scas
xchg
adc
jg
lcall
int3
push
aad
push
add
int
add
sub
mov
pop
aad
push
jmp
mov
xchg
sub
sbb
loope
pop
ja
mov
xchg
adc
cs
repnz
cld
dec
jmp
sub
popa
inc
call
push
mov
movsl
xchg
inc
inc
push
add
jmp
popa
push
fucomp
cmp
and
fidivs
pop
xchg
test
clc
dec
bswap
repnz
into
pop
movsb
aad
or
pop
mov
pop
mov
in
add
scas
rorl
sarb
sbb
loop
and
dec
dec
sbb
push
xchg
xor
ficoms
cmpsb
and
rclb
jmp
inc
and
mov
or
je
cld
data16
imul
dec
outsb
and
fiaddl
mov
iret
gs
lods
enter
sbb
xchg
rolb
and
cltd
sub
lds
nop
dec
push
fincstp
cmc
ror
movb
inc
xchg
jl
movsb
sahf
pop
xchg
mov
insb
mov
subl
or
jecxz
xchg
data16
int
jbe
mov
pop
in
idiv
jl
or
push
and
fistpll
outsl
jmp
clc
in
pop
sub
pop
mov
add
xor
jnp
jmp
ljmp
inc
xchg
push
mov
pop
iret
cmc
mov
sub
lock
xchg
cmp
dec
push
adc
add
cwtl
mov
aad
repz
clc
xor
stos
pop
mov
jnp
imul
xchg
sbb
out
and
cmp
and
fisubrs
das
mul
add
xor
movsb
outsl
test
dec
and
pop
popf
iret
popa
pop
pop
cmp
in
dec
adc
idivl
fucomip
xchg
insb
data16
dec
mov
idivb
push
xchg
fwait
add
xchg
sub
mov
pop
push
lret
nop
jbe
clc
call
insl
cmpsb
xor
dec
ljmp
inc
icebp
repnz
jecxz
mov
mov
dec
pop
movsl
xor
ret
dec
lds
cmp
int
nop
push
xor
mov
fbld
popf
inc
cmp
sub
loopne
fsts
xor
out
aad
cmp
scas
xor
sahf
arpl
pushf
fst
xchg
outsb
or
dec
xchg
and
out
popa
push
inc
mov
shrb
ds
aaa
mov
lods
xor
cmpl
jecxz
xor
inc
xchg
add
insl
adc
xchg
outsl
jne
arpl
fstpl
loop
repnz
inc
test
cmp
in
loop
rcl
inc
imull
cmp
add
fistl
sub
pusha
lods
xor
cmp
or
loop
xchg
movsb
pop
add
push
cltd
xchg
adc
push
push
cwtl
cmp
sub
enter
popa
fcompl
stos
cmc
push
movsb
int
mov
xor
mov
sbb
pop
outsl
gs
jp
divb
jecxz
les
push
lods
and
jl
mov
cs
dec
hlt
cltd
leave
test
in
mov
xor
cmp
xchg
pop
push
scas
jmp
aad
dec
or
fcompl
fwait
stos
adc
xchg
movsb
or
jmp
fisubrs
hlt
pop
inc
jge
in
stos
cs
notl
inc
jmp
jecxz
rclb
lods
fcmove
nop
or
cmc
inc
lret
adc
jge
dec
dec
andb
insl
sbb
jg
cmc
ja
loopne
jae
or
jg
adc
jns
xchg
jae
xor
jns
sti
cli
cld
loop
jecxz
add
jo
adc
int
mov
sub
push
fistpl
mov
jo
sub
cli
aad
push
ljmp
aad
lahf
insb
movsb
push
popl
jae
test
dec
jp
and
leave
cmpl
or
mov
dec
xchg
push
scas
mov
or
std
sub
out
cmpsb
jl
out
add
sub
loopne
out
dec
push
jns
push
notb
lahf
pop
or
inc
dec
fsubrp
sar
jl
movsb
inc
jl
mov
sahf
inc
lods
cmc
lds
dec
pusha
pop
pop
lahf
inc
cltd
scas
jp
stos
add
imul
inc
push
lret
xchg
cwtl
and
pop
mov
loop
rcll
inc
dec
into
lcall
mov
dec
aad
jge
and
cvtdq2ps
push
cmp
out
call
jnp
xor
jo
xor
push
or
nop
adc
push
sub
loopne
sub
cmc
dec
cmpsb
push
mov
add
sub
mov
sbb
dec
add
lods
add
jo
lea
and
push
push
rcr
leave
xchg
sub
jns
mov
push
mov
xchg
aad
lods
addr16
fsubrs
add
xchg
sub
xchg
sbb
call
sbb
jge
movsl
outsl
sbb
or
jb
out
dec
popa
in
xor
aad
rcrb
adc
insb
jge
push
xor
cmp
ret
dec
sbb
push
add
aad
cwtl
sbb
test
jns
and
sub
clc
pop
xlat
inc
nop
popa
aaa
mov
call
lahf
lds
fsubrp
sarl
divl
sub
jmp
out
inc
cmp
add
and
cmp
or
repnz
fbld
insb
cmp
jb
or
adc
push
push
cmc
xchg
ds
add
push
mov
and
jge
aam
sub
xchg
jl
mov
pop
hlt
sub
mov
xchg
dec
add
mov
mov
add
imul
not
jno
sub
hlt
mov
and
lahf
jmp
xadd
addr16
and
jne
rcll
lods
daa
inc
pop
mov
sahf
sti
aad
or
xchg
sbb
imul
movsb
test
sub
add
enter
adc
adc
iret
sub
vmread
push
popa
jl
adc
sbb
adc
or
xor
rcrl
lds
stos
adc
adcl
jmp
dec
xchg
iret
js
fidivrl
sub
je
push
imul
or
int
out
and
add
out
sti
lret
std
cli
mov
sbb
out
jl
mov
jmp
push
inc
mov
push
cltd
imul
mov
xchg
mov
push
adc
lahf
or
sub
dec
fistpl
cmp
movsl
fnstenv
out
aad
add
mov
adc
xor
fwait
sti
xchg
cli
sti
and
and
jl
mov
and
add
ret
iret
je
addr16
add
mov
loope
and
shlb
cmp
out
popa
jae
or
in
push
jmp
cmp
lock
inc
jno
test
fsubr
jp
cli
adc
xor
jecxz
test
and
repnz
add
mov
aad
or
das
in
test
pusha
add
aad
jb
sub
or
inc
jne
movsb
push
and
cld
ds
fists
stos
xchg
sbb
xor
mov
push
js
iret
push
ja
cmc
lret
pop
pop
lahf
or
xor
fnsave
jmp
jl
mov
jg
jle
mov
iret
cmc
inc
jl
push
divl
repz
mov
outsl
nop
xchg
push
lahf
je
adc
cmp
push
mull
mov
lock
popf
lea
nop
out
push
or
popa
dec
sbb
pusha
jg
das
dec
mov
jb
out
divl
shl
mov
insb
and
lock
sbb
sbb
lods
fidivrl
xor
cltd
scas
dec
xchg
jne
int
sbb
xor
adc
gs
sub
inc
out
and
data16
cld
cld
sar
xor
loopne
imul
push
aam
pop
cli
aad
aad
stc
movsb
scas
inc
sti
fcoml
jle
and
or
ficoms
inc
mull
data16
cmp
gs
aad
sbb
mov
test
outsl
cs
and
test
mov
mov
lods
rdmsr
hlt
repz
insl
je
dec
sbb
add
jnp
into
cmc
cmpsl
ret
add
not
push
js
fwait
pop
push
mov
loop
out
test
cli
setne
out
outsl
and
aam
out
lods
bsf
inc
orb
cmp
cmp
ja
mov
inc
loope
mov
mov
and
loop
fs
inc
popf
cwtl
cmp
scas
lods
and
mov
call
mov
push
pop
in
aad
in
stc
push
or
adc
lods
rolb
or
jecxz
outsl
mov
pop
nop
mov
dec
shrb
xchg
cmovae
js
ljmp
movsl
mov
and
cmp
push
cmp
mov
xor
inc
stc
lahf
std
push
mov
mov
pop
pusha
mov
dec
cmpsb
cmpsl
adc
cmp
or
outsl
mov
xchg
fbld
mov
push
jge
rcr
push
stos
xchg
mov
loope
fcomi
andl
shll
imul
and
sub
add
mov
push
lock
and
hlt
and
dec
daa
arpl
jp
add
movl
dec
cmp
or
fwait
push
lods
outsl
gs
jmp
dec
pop
pop
popf
sbb
xor
adc
mov
je
cmpsb
jmp
cmp
adc
jnp
cmp
dec
int
ror
jp
xor
subb
outsl
push
call
repnz
mov
popa
stos
les
add
jmp
fldt
and
popf
sbb
push
add
xlat
dec
je
dec
lret
pop
pusha
clc
mov
dec
jl
enter
scas
push
js
fucomi
sbb
nop
mov
imul
xchg
scas
or
inc
in
cmc
fdivs
sti
shll
cmc
sbb
mov
les
jge
daa
mov
int
repz
cmp
js
test
mov
pusha
data16
lea
lret
add
popa
sub
or
in
jbe
sbb
add
les
xchg
cs
mov
or
shll
xchg
sub
inc
mov
in
sbb
pop
and
xchg
inc
shll
sub
out
add
sub
cmp
idivl
shrl
sti
call
rorb
mov
xchg
lods
lret
adc
add
push
and
negl
cmp
rclb
xchg
cld
add
pusha
pinsrw
ljmp
stos
add
mov
mov
pop
in
popf
int
cmp
cmc
xor
mov
mov
fisubrl
cld
cmp
in
pop
cs
mov
stos
dec
jns
cmp
cmp
popa
stc
jno
cld
psubw
jge
jmp
cmp
and
cmp
pop
push
clc
pop
xchg
mov
add
icebp
lods
push
sbb
cmp
dec
setne
push
dec
popf
scas
inc
push
cmpl
out
cli
loope
pop
jge
pusha
pop
sti
iret
add
xchg
in
xchg
jne
loope
cmc
mov
out
push
dec
insl
and
push
xchg
mov
pop
mov
out
inc
dec
mov
aad
das
xchg
add
sub
lcall
jnp
xor
mov
xor
out
mov
or
shll
xor
in
loopne
sbb
and
pop
mov
jmp
into
lds
decb
bound
and
cmp
mov
rcrl
in
in
nopl
push
in
dec
aas
mov
jmp
rcrb
jle
sarb
pusha
stos
sub
cmc
in
icebp
push
jo
nop
adc
pop
dec
or
fmulp
sub
in
lock
and
mov
rcrl
shll
dec
or
lahf
inc
imul
xchg
pop
and
in
xchg
cmp
cmpsb
movsl
mull
stos
aas
sbb
fisttps
adc
out
sub
xor
out
mov
xchg
mov
lret
push
sub
xor
pop
aad
loopne
lcall
das
xchg
nop
movsb
and
dec
loopne
and
xor
in
and
sbb
fsubs
pusha
inc
mov
mov
jae
or
cmp
call
outsl
or
sbb
daa
xor
mov
es
adc
out
hlt
lahf
je
dec
out
or
sti
mov
popf
jno
fisubl
xlat
adc
in
or
dec
sahf
test
xor
imul
mov
sbb
dec
out
idiv
mov
aad
jae
test
mov
fmuls
into
popa
push
push
js
and
mov
xchg
stos
nop
jns
cmp
cmp
or
add
mov
ret
clc
mov
mov
lahf
mov
mov
in
inc
push
popa
xor
cmc
add
mov
lock
push
inc
adc
nop
push
loop
jae
imul
sbb
jp
push
inc
xor
int3
nop
push
inc
fildl
jno
iret
jmp
cmc
inc
in
test
rclb
push
or
inc
dec
in
das
mov
lret
in
jge
scas
dec
stos
adc
jl
xchg
push
dec
or
mov
call
vucomiss
addl
pop
cmp
mov
roll
jge
mov
dec
or
lds
pop
sub
ficoml
scas
and
int
rorl
sub
outsl
xchg
push
sbb
mov
mov
out
push
or
jo
cmp
adc
push
or
or
fwait
push
jnp
aam
inc
loop
push
mov
rclb
shl
cmc
add
and
cmp
call
adc
repnz
mov
outsb
lahf
push
pop
add
mov
in
xchg
xchg
insb
xor
in
sahf
mov
xchg
int
sbb
cmp
lea
mov
push
movsl
iret
or
insl
out
mov
pusha
in
fisttps
mov
cmp
gs
pop
inc
rolb
mov
lret
sub
aad
cmp
arpl
dec
clc
dec
in
adc
push
jmp
sub
fildl
outsb
cs
aad
jecxz
imul
fwait
mov
add
and
pop
jns
and
sbb
in
aaa
add
adc
loope
out
and
in
ret
iret
test
test
pushf
mov
push
sub
and
jae
repnz
push
dec
out
cmpb
xchg
lods
jns
loop
popf
mov
add
push
mov
jbe
xchg
pop
mov
dec
scas
jmp
push
rcrl
mov
add
es
mov
sbb
and
call
leave
test
popa
push
push
mov
jo
jg
cmp
outsl
cs
nop
jbe
pop
pop
aad
pushf
jp
test
stos
adc
shr
pcmpeqw
ja
cmc
fisubrl
negl
rcll
out
cld
mov
scas
cmp
pavgw
jl
push
cwtl
rorb
ret
lea
out
aam
sub
in
mov
rclb
add
inc
inc
push
orl
enter
nop
xor
mov
xchg
jmp
mov
mov
push
ljmp
in
cs
popf
sti
rcll
into
stc
arpl
clc
jno
nop
testb
rcll
sbb
sti
pop
push
fdivs
fisubs
lods
test
or
pop
setne
das
sub
ret
sbb
nop
rcrb
ja
icebp
xor
addl
push
dec
lods
xchg
arpl
jge
test
jmp
test
cld
cmp
push
or
or
sub
ret
icebp
cmpb
rorb
aam
lret
and
adc
std
push
jge
out
insb
push
adc
jmp
push
mov
jae
add
insl
movb
mov
pop
push
xchg
cltd
mov
add
add
mov
pop
imul
sub
pusha
popf
in
push
std
mov
pop
inc
shrb
pop
aas
scas
clc
js
loope
dec
pusha
inc
jo
mov
fucomi
and
mov
cld
rcrl
cmp
cli
test
inc
cmpsl
stos
mov
clc
cmp
sub
sub
push
arpl
jns
jg
or
add
cli
inc
jne
out
fsubrl
dec
stc
and
stc
xor
xor
inc
mov
inc
dec
pop
imul
cmp
dec
leave
and
xor
aaa
cmp
int
rcl
pop
dec
movsl
pop
repnz
leave
xlat
sarl
and
stos
aad
imul
jle
sbb
push
sbb
cmp
dec
mov
sti
xor
aas
adc
xor
or
xchg
lock
push
dec
and
dec
mov
jecxz
or
stos
xor
scas
pop
in
in
into
cltd
pusha
loop
mov
sub
sahf
shrb
popa
arpl
test
sbb
sarl
imul
jbe
mov
movsl
sub
dec
movsb
pusha
mov
dec
adc
fsubrs
pushf
stos
mov
dec
xchg
sub
cli
fwait
jbe
push
lret
adc
mov
nop
add
pop
mov
inc
frstor
cmpsb
loope
dec
fwait
shll
outsl
das
pop
int
add
push
notl
push
xchg
lods
rorb
xchg
sbb
sti
jmp
fninit
aad
mov
cmpsb
std
roll
imul
add
sahf
outsl
mov
dec
xor
push
mov
daa
xorps
idivl
lea
cli
cmp
pop
dec
int
cmpsl
lock
xchg
inc
lea
jge
xor
shrl
xchg
daa
jge
leave
rcll
lret
daa
xor
or
sub
xor
xchg
stos
push
rcl
hlt
cmp
iret
dec
inc
stos
iret
sub
cmpsl
dec
pusha
inc
in
cld
dec
mov
cmp
mov
adc
push
pop
dec
stos
into
test
pop
lods
cmp
mov
and
das
adc
fidivs
int
je
or
dec
and
add
or
lea
cmpsl
bound
out
test
xchg
sub
nop
fimull
cmp
lret
dec
adc
push
mov
sbb
mov
adc
pop
adc
add
cmpsl
aad
das
push
neg
push
or
add
sub
jb
lahf
jg
outsl
movsl
fwait
push
pop
sbb
lods
add
or
jns
rol
mov
jne
xchg
push
or
mov
mov
xor
xor
push
ss
mov
push
aad
dec
mov
push
neg
add
add
xchg
shlb
repz
das
cmpsl
fists
aad
rcrb
push
outsb
andl
cwtl
push
fstl
ljmp
les
push
fsubrl
jno
xchg
fisubrs
mov
ffree
pusha
push
mov
adc
ds
fisubs
push
out
xor
mov
push
push
scas
or
aad
mov
sbb
adc
cmc
outsb
dec
mov
cmp
cmp
in
xchg
icebp
push
inc
in
push
call
aas
int
xor
stc
sub
int
sub
mov
or
jns
jmp
jle
imul
adcl
nop
xchg
jnp
jle
psubw
add
cmp
stos
movsb
lcall
call
and
shrb
xor
stos
bound
cli
cs
ficomps
subl
adc
add
push
psadbw
sub
cs
jle
push
pop
cmc
sbb
cld
fisubrl
mov
jl
scas
or
or
test
mov
outsb
test
push
cli
hlt
data16
mov
inc
pop
adc
cmpsl
mov
add
out
add
adcb
mov
xor
cs
loope
xor
sub
or
popa
call
daa
xchg
and
xchg
insb
test
mov
idiv
cmp
popf
jnp
adc
xchg
aaa
lods
mov
std
add
cmpsl
add
xchg
cld
fcompl
ud0
inc
loopne
mov
add
lcall
sub
fbstp
mov
adc
xor
xchg
lcall
cmp
xor
inc
lcall
xchg
in
push
mov
adc
and
and
adc
push
mov
push
mov
or
jmp
pop
gs
pop
inc
cmp
iret
out
cmp
adc
pop
in
jl
fstpl
shlb
mov
ret
jg
imul
mov
jmp
push
sub
cli
dec
sub
pop
and
scas
cmp
enter
lret
out
xor
jl
mov
push
dec
mov
add
mov
and
or
dec
test
outsl
inc
popf
popa
xlat
call
and
shlb
sti
ret
mov
bound
gs
dec
pop
ss
mov
push
pop
cmc
scas
fldt
mov
dec
or
mov
inc
popa
mov
jmp
sub
jmp
in
outsl
add
sub
pop
adc
mov
cli
lahf
into
sub
push
ss
in
mov
cmp
fiaddl
pop
leave
lods
mov
popa
out
jmp
add
cmp
and
push
add
rclb
incb
jmp
out
sub
int3
mov
nop
je
dec
xchg
in
dec
fwait
cmpsb
cld
push
cmc
fimull
xlat
push
push
les
lock
scas
cmc
mov
lods
adc
lods
mov
xchg
pop
shl
enter
adc
daa
out
cmp
cmpsb
fstl
popa
shlb
lea
mov
lock
popa
xlat
out
cmp
dec
jp
cmp
push
sarl
dec
lock
jl
push
push
mov
mov
ja
decb
sti
aad
cmp
cmc
mov
and
cmp
and
dec
mov
and
sti
sahf
adc
out
xchg
pop
out
xchg
stos
jo
fimuls
clc
mov
inc
scas
jg
sub
cmc
out
add
js
fdivrl
clc
ds
cmp
jno
pushf
sbb
movsl
cli
sbbb
inc
fiadds
loop
jge
loope
ficomps
imul
mov
inc
jno
adc
into
pop
insb
cmp
or
cmp
or
clc
sub
sub
stos
inc
push
mov
mov
lret
loope
or
jp
repnz
adc
sub
xchg
icebp
aas
adc
ljmp
nop
mov
in
jb
pop
cmp
adcb
or
dec
call
int
xor
mov
or
xlat
jge
xor
push
ret
sbb
jb
dec
enter
sahf
movsl
inc
push
push
xor
js
addr16
dec
sub
orb
in
xchg
or
mov
and
dec
push
and
jno
lods
inc
inc
cmp
movsb
inc
push
inc
fdivrs
sar
cmp
mov
or
jno
popa
lahf
popf
xlat
push
sbb
pop
dec
aad
test
pop
and
sub
inc
decl
pop
ficomps
loope
add
cmpl
stc
inc
and
loopne
xorb
inc
pop
cmp
lea
adc
inc
outsb
ficompl
mov
inc
jo
dec
sahf
dec
xchg
ljmp
pop
into
cmp
xchg
lea
pushf
test
test
jp
mov
jge
and
cmp
and
int
jle
inc
cmp
stos
je
or
imulb
sub
xor
shl
pop
outsl
out
cmpsb
xor
fstp
arpl
push
loopne
ja
nop
mov
mov
cmp
xchg
cmc
imul
arpl
cld
pop
out
adc
in
sbb
sub
xchg
cmp
pop
adc
push
insb
idivb
xchg
and
mov
inc
inc
pushw
jecxz
ret
sub
pusha
xchg
fbstp
inc
aam
sub
fisubrs
into
inc
push
pop
mov
fldt
bound
pop
imul
sub
push
sbb
add
and
jbe
negl
add
dec
test
and
and
jl
pushf
dec
xor
xchg
data16
iret
adc
pusha
dec
fisubl
inc
js
add
int
test
dec
in
pop
mov
add
inc
mov
repz
push
jp
jg
sbb
mov
int
mov
shr
mov
inc
push
js
aaa
dec
or
jnp
adc
xchg
inc
loop
mov
sbb
dec
and
jmp
adc
loope
les
jge
mov
xor
push
jmp
mov
movsl
xchg
and
sbbb
dec
or
inc
jnp
xlat
out
mov
sbb
jmp
mov
add
lods
jo
jecxz
cmpsl
mov
jno
scas
mov
call
dec
imul
and
push
out
push
in
jp
out
adc
jo
mov
pop
out
inc
add
cmp
adc
in
lods
pop
cwtl
mov
out
xor
das
pusha
js
cmp
scas
mov
dec
sub
in
jge
gs
test
test
fxrstor
inc
pop
inc
stc
orb
mov
lods
fsts
inc
inc
sub
cld
jge
sti
lds
mov
dec
out
pop
cmc
sbb
scas
cld
cmp
mov
or
xlat
push
dec
jo
add
aad
shrb
aaa
in
sbb
xchg
jne
repz
mov
jp
mov
mov
or
les
in
inc
or
mov
xor
sbb
aam
or
or
dec
stos
mov
jecxz
cmpsl
jmp
pop
push
or
dec
dec
or
adc
mov
push
fdivs
mov
cmp
sbb
xor
mov
pop
clc
jecxz
mov
jmp
cmpsb
imul
sub
cmpsb
aaa
andb
int3
jle
mov
pop
jnp
lock
add
cld
push
rolb
add
xor
fistpl
mov
call
xor
lods
loopne
xchg
or
mov
mov
cld
adc
mov
popf
fcmovne
aaa
fucomip
add
sub
inc
sarb
sub
xorb
in
jecxz
not
test
cmpsl
push
inc
outsl
enter
mov
adc
lcall
push
push
test
mulb
sahf
rorb
loopne
pop
loope
cs
ds
lret
jp
adc
rorl
cmc
sub
cmp
mov
js
mov
cmc
stos
daa
ret
dec
mov
into
das
loope
and
mov
dec
cmc
int3
or
or
sub
cmp
cmp
mov
mov
xor
out
iret
xor
cmp
xchg
sub
mov
mov
div
dec
icebp
add
orb
sbb
mov
pop
mov
cmp
int
cmp
cmp
pop
mov
orb
mov
test
xor
incl
pop
rep
pop
inc
sub
test
push
cmc
cs
xor
inc
cmp
out
in
xlat
bound
jnp
in
xchg
xchg
cwtl
test
jl
mov
cmc
mov
test
mov
aam
repz
jmp
js
push
sbb
lods
vdivss
mov
sub
fwait
lods
ljmp
std
cmp
cmp
jge
and
shrl
out
mov
int
aad
sbb
push
mov
mov
dec
pop
xor
xchg
in
test
mov
inc
xchg
push
push
out
fstl
shrb
shrb
je
fidivs
lcall
cmp
sub
in
loope
test
mov
into
popf
inc
mov
rclb
sarl
xchg
or
fcomp
ds
xchg
iret
std
add
mov
cs
xchg
push
int
cli
cs
arpl
add
cmp
or
sub
dec
mov
mov
out
cmc
and
cmpsb
sbb
inc
leave
jnp
imul
lcall
lods
push
push
add
aad
icebp
mov
cmpsb
popf
cmp
xor
mov
or
repz
cmp
negb
mov
inc
mov
ror
cld
orb
xchg
cmp
lea
ljmp
out
into
addr16
and
sub
idiv
stos
jp
aad
and
xchg
cs
xchg
inc
and
jmp
or
pop
enter
jg
jne
jmp
out
mov
dec
xor
mov
or
jno
outsl
push
dec
push
shlb
pop
add
loope
loope
mov
lods
fildll
mov
out
mov
enter
and
lock
jmp
cli
xchg
shrl
rorl
test
cmpsb
adc
xchg
mov
cmc
mov
xchg
sbb
dec
aad
xchg
rcrl
mov
clc
lret
sub
scas
mov
cmp
call
mov
shlb
xchg
cli
lock
pop
inc
or
lcall
jbe
mov
pop
es
out
cmc
cmp
add
adc
cmc
xchg
adc
lahf
inc
mov
jae
cmp
sbb
adc
add
jmp
dec
push
lods
mov
xor
or
xchg
mov
mov
hlt
push
std
push
cwtl
stos
repnz
mov
push
pushf
cmp
out
push
mov
fs
jbe
lcall
mov
in
lret
in
or
push
scas
and
jno
rcrl
rcl
add
test
xchg
aaa
mov
sti
fcmovb
inc
dec
sahf
pop
jns
push
mov
dec
insl
lea
jmp
mov
pop
xor
fstl
out
push
scas
ficoms
xor
je
mov
xor
call
das
inc
xchg
and
call
mov
fcomi
inc
aad
pop
dec
dec
push
sub
faddl
mov
lods
cmpsl
daa
fistps
insb
stos
in
jo
sub
adc
add
int3
out
mov
adc
out
sub
mov
push
lds
idiv
ljmp
movsb
bound
iret
or
nop
hlt
xchg
fisttps
shl
xchg
cmp
adc
inc
stos
cmc
fs
lcall
imul
in
scas
sub
data16
xchg
add
rcrl
lods
dec
loope
mov
and
cmp
dec
jnp
loopne
data16
scas
mov
jb
sbb
add
xchg
jmp
push
iret
aam
adc
aad
enter
sti
mov
jmp
or
les
mov
stos
int
sbb
fldt
push
sbb
xchg
pop
ficoml
out
push
lds
add
out
int3
das
add
aad
lea
dec
xor
or
lods
add
xchg
repnz
jne
dec
outsl
xchg
push
repz
cli
fnstenv
stos
and
jbe
je
cmc
ss
iret
imulb
cli
jno
or
rcl
out
push
xchg
xor
les
dec
ss
and
fists
mov
call
fcompp
js
lods
xor
subb
dec
pop
decb
jmp
aam
mov
pop
popl
cmp
push
es
sbb
cmp
dec
stos
cmpsb
add
add
shrl
xchg
call
cmp
jg
pop
xor
aad
pop
xor
out
adc
aaa
ds
mov
add
mov
in
inc
movsb
imul
dec
adc
add
sbb
rorl
ss
and
lds
nop
mov
test
inc
arpl
inc
in
insb
out
aad
test
inc
cltd
mov
mov
pop
outsb
lahf
add
imul
imul
dec
mov
insl
popf
fisttpl
mov
jno
fmull
or
sbb
fmuls
xchg
lret
sub
outsl
inc
adc
test
std
pop
mov
repz
dec
xchg
mov
test
les
push
sbb
inc
frstor
das
lret
ljmp
inc
fwait
or
sub
push
adc
cs
mov
pop
dec
imull
les
push
cmp
pusha
insb
xchg
leave
sbb
pop
or
call
sbb
aaa
or
dec
out
dec
aad
fcoml
aaa
pop
icebp
stos
lcall
in
cld
or
mov
push
lea
mov
pop
popa
mov
adc
xor
jge
clc
mov
cmc
xchg
inc
ficomps
adc
fwait
jge
in
sbb
adc
dec
rcll
leave
loop
fbstp
or
fdivrs
js
int
lods
adc
int
ljmp
xchg
mov
addr16
std
and
dec
cwtl
jnp
pop
scas
or
adc
stos
call
call
cmp
fcmovnu
mov
mov
add
mov
jmp
xchg
xchg
rclb
out
aam
ret
push
fs
mov
mov
je
int
lcall
mov
fstpt
mov
mov
or
jo
cmc
push
sbb
dec
push
cmp
lods
add
jns
pop
pop
iret
orb
xchg
jb
repnz
iret
cli
cmc
loopne
and
int
jmp
xchg
mov
push
lahf
in
jmp
das
dec
mov
adc
std
push
jp
push
push
testb
movsb
xor
push
fldenv
xchg
jle
cmp
in
jmp
cmovbe
pop
or
paddsw
xor
es
sub
xlat
daa
and
std
out
cmp
mov
in
mov
lret
jb
mov
in
or
add
shr
xchg
pusha
aas
adc
mov
in
mov
sti
sub
insl
outsl
xchg
push
fst
mov
imul
add
jmp
pop
enter
jbe
cmp
fs
aaa
cmp
cmp
jo
jns
loopne
dec
idivl
jg
inc
sub
inc
sub
jmp
lcall
dec
push
fwait
mov
sub
cmp
cli
fisttps
ljmp
sarl
xchg
hlt
pop
andb
mov
scas
xchg
mov
mov
int
pop
cmp
int
pushf
push
dec
lret
cmp
sbb
pop
das
nop
stos
mov
push
rcll
imul
cmpb
dec
and
icebp
inc
push
pop
jg
mov
es
in
or
cmp
test
scas
dec
and
jns
fwait
mov
aad
ret
jge
xchg
xchg
inc
stc
or
or
dec
xchg
hlt
sbb
std
adc
test
clc
popf
adc
pusha
add
or
iret
stos
mov
lods
add
js
xchg
cmp
frstor
fstpt
mov
rclb
call
fildl
xchg
add
jbe
xchg
movsl
pop
sub
movb
roll
adc
std
cwtl
push
orl
cs
mov
xor
cmp
out
push
stos
test
push
cmp
or
fidivrs
mov
sub
or
sub
aaa
orl
out
xor
iret
ret
jbe
xchg
ljmp
xchg
push
adc
leave
adc
scas
scas
jnp
setg
cmpl
push
push
pop
in
jecxz
aas
mov
mov
ja
adc
aam
push
push
pushf
pop
push
jl
dec
mov
in
xchg
or
add
sbb
xorps
mov
shll
xchg
dec
es
mov
and
xchg
fs
sub
fisttpl
lahf
mov
xor
cmp
jecxz
dec
inc
int3
mov
or
inc
aad
cltd
xor
cld
push
arpl
movsb
pop
test
pop
xor
ud1
fidivl
popf
in
divb
sahf
mov
adc
jae
ds
mov
jns
popa
pop
jl
mov
dec
lds
jo
sub
mov
mov
dec
xlat
inc
outsb
int3
xchg
push
xchg
add
subl
out
cmpsl
loope
dec
aas
call
sub
xchg
sbb
lods
sub
sub
lret
add
cmpsl
shl
jle
les
aam
int
xchg
jmp
sub
or
in
lods
jmp
xchg
adc
mov
xchg
push
push
adc
mov
jle
leave
add
sahf
mov
jp
iret
mov
xchg
call
or
lcall
int
lret
inc
int
xchg
mov
or
mov
and
sub
push
dec
lcall
and
rorb
lcall
push
daa
push
adc
xor
or
movsl
fnsave
push
or
imul
push
inc
int
ds
ljmp
arpl
push
mov
loope
lds
fmull
js
xchg
mov
int
mov
push
cmp
push
xchg
sahf
out
xlat
mov
fadds
in
jg
mov
cmp
xor
xor
jbe
dec
testl
jmp
mov
dec
jge
nop
mov
sti
or
js
subl
ja
mov
mov
and
push
or
mov
cmpsb
fisttpll
outsb
mov
cs
mov
fists
negb
in
cmp
sub
mov
xchg
inc
inc
add
aad
mov
cmp
insl
add
enter
bound
cmc
cmc
cld
mov
add
pop
cwtl
aam
mov
adc
adc
std
cmp
mov
cmp
and
fcompl
xor
jnp
mov
cwtl
jmp
imul
jmp
xor
outsb
push
cmpsb
inc
fstpl
enter
or
outsb
cmp
dec
cmp
sti
out
daa
adc
mov
push
xchg
loope
fisttps
xchg
es
adc
movsl
sbb
jb
or
enter
mov
mov
adcb
sti
push
imul
sub
xchg
sbb
repz
rcr
xchg
add
adc
cs
inc
cmp
out
lds
loope
xor
lahf
mov
xchg
and
shlb
and
movsb
cmpsb
lea
stos
or
in
jge
pop
mov
jl
scas
cmpsl
push
jl
out
mov
and
push
out
xchg
mov
mov
mov
mov
xchg
push
iret
fcomi
mov
push
mov
rorb
dec
pushf
pop
or
dec
jns
rcll
shlb
dec
cmp
xor
push
outsb
or
cmp
sub
xchg
inc
fnstenv
int
cmc
dec
push
jp
xor
add
dec
dec
out
mov
cmp
adc
mov
call
dec
aad
cmp
daa
inc
nop
test
in
xor
imulb
aad
ljmp
int3
jmp
jl
pop
divl
and
lahf
xchg
mov
push
cmc
jnp
or
aaa
dec
dec
mov
js
fs
cli
out
push
setno
sub
outsb
cmp
ficompl
fmull
pop
mov
mov
jmp
push
enter
or
dec
lods
in
out
in
icebp
mov
nop
xchg
push
pop
cli
jae
loope
push
stc
out
test
out
adc
jnp
add
push
in
sbb
stos
xchg
rorl
idivl
jge
sbb
xchg
adc
inc
xchg
cmp
jae
or
pslld
push
sub
setne
or
or
arpl
mov
sub
and
cmp
sti
jge
pushf
and
xchg
popa
jle
lahf
aam
cmp
fisttpl
cmc
iret
imul
ret
test
loope
add
xchg
lea
pop
and
mov
mov
cld
in
int
mov
out
and
cld
sarb
dec
movsb
enter
cmpsb
outsl
js
mov
lods
xchg
jmp
hlt
add
cmp
loop
aad
mov
hlt
les
sub
rol
jecxz
mov
sub
lahf
fadds
jmp
fldt
in
std
sbb
mov
add
lea
jnp
xor
mov
mov
push
push
push
add
ljmp
stc
mov
xchg
mov
xor
sbb
shlb
test
in
or
jns
lods
sbb
pushf
cli
sbb
push
jmp
out
mov
fwait
testl
lret
inc
or
scas
dec
xchg
cli
jecxz
cmpsb
xchg
add
add
and
xchg
pop
adc
xlat
or
in
shl
mov
into
cmp
and
aad
insl
insb
jo
pop
adc
mov
idiv
push
lods
cli
lahf
iret
fiaddl
push
add
mov
inc
adc
outsb
mov
dec
lcall
repnz
stc
dec
mov
js
mov
xchg
push
andb
les
jl
dec
cmc
jge
mov
test
xchg
hlt
js
and
sbb
jbe
cmc
movsb
xchg
mov
cltd
rolb
mov
xor
or
sti
test
std
es
cmp
insb
arpl
jge
lock
jmp
icebp
stos
dec
fcoms
idiv
inc
shr
clc
dec
in
enter
movl
sbb
into
xchg
fs
shll
inc
cmp
mov
push
das
fstl
into
cmc
cmp
popf
lock
in
ss
cmp
adc
push
pop
loope
fistl
dec
out
push
iret
mov
in
int
add
adc
dec
mov
push
dec
and
xchg
lds
test
push
or
mov
cmp
and
cmc
jge
lea
push
pop
lods
stos
int
xchg
xor
and
in
push
mov
jmp
xchg
cltd
andb
adc
push
or
mov
out
sbb
dec
int
int
add
sbbl
ret
push
sub
xor
or
popf
test
cwtl
jle
cmpsl
mov
push
inc
mov
mov
or
lods
call
fwait
and
inc
scas
arpl
lret
push
mov
adc
fcoms
popf
mov
or
push
xchg
dec
data16
push
out
dec
adc
int
shll
xor
test
and
jns
xor
adc
cltd
iret
setne
mov
or
lret
pop
nop
notb
push
mov
mov
aad
and
fldcw
dec
jmp
jne
fsubrs
call
sub
push
mov
sub
psubsb
mov
rcrl
outsl
scas
add
stc
pusha
testl
test
jbe
cmp
out
sub
cmc
xchg
mov
iret
inc
mulb
int
cmp
sbb
testl
mov
cli
call
mov
outsl
or
std
dec
and
sub
out
aad
cmp
lds
scas
repz
push
clc
sub
fmull
xchg
or
fists
movd
rorl
loop
mull
inc
outsl
aad
sti
mov
lret
test
sub
icebp
mov
cwtl
popa
and
cmc
sahf
xor
jbe
or
add
dec
jmp
jmp
out
inc
gs
out
mov
clc
pop
arpl
sub
mov
and
es
cs
std
loop
loope
filds
push
lcall
xchg
push
lods
leave
shr
cmp
arpl
push
add
rcrb
lahf
test
xor
xchg
lret
repz
scas
and
mov
xchg
cmp
std
dec
xchg
lahf
push
shll
mull
mov
xchg
out
jecxz
scas
stos
xchg
in
testl
movsb
jge
cs
lods
ja
mov
xorl
popa
cmp
push
stc
jecxz
imul
cvtdq2ps
loopne
mov
sbb
cmp
addr16
fsts
pop
mov
mov
jo
ret
mov
aaa
adc
loope
or
mov
or
mov
mov
cwtl
lods
scas
dec
xchg
mov
stos
repnz
mov
mov
fs
setge
mov
in
add
xchg
cmpsl
lcall
mov
sub
sub
imul
push
lahf
insl
lods
xlat
xor
xor
popl
je
out
pushl
testb
adc
into
inc
aaa
jp
sbb
dec
add
aad
and
popa
mov
adc
incl
popa
outsb
cmc
idivl
add
mov
cmp
push
fiaddl
push
stc
add
lahf
push
aad
inc
test
pop
push
rol
or
cmp
pop
cmc
int
cld
push
out
mov
out
mov
les
xor
dec
test
push
mov
mov
xchg
push
mov
mov
fsubp
xchg
mov
cmpsl
stos
sub
pop
or
mov
sub
push
jno
test
or
push
jbe
or
and
into
xchg
cld
call
and
adc
fcoml
scas
jbe
add
gs
adc
rolb
pop
cmc
int
mov
les
inc
xchg
jg
std
scas
scas
adc
cmp
pop
fsub
repz
adc
pop
ss
add
lcall
sti
leave
jmp
xchg
jle
int3
xchg
stos
jmp
in
ljmp
ja
xor
push
cmp
movsl
cmpsl
test
out
fidivrl
mov
xchg
cmpsb
test
js
mov
dec
pop
cltd
jne
jae
cmpsl
scas
bound
ljmp
fs
das
pop
and
add
pop
mov
outsb
or
in
sub
in
aad
adc
push
arpl
jbe
ljmp
lods
test
push
data16
push
mull
xchg
cmp
mov
inc
aas
mov
mov
aad
in
push
push
cmp
adc
gs
jmp
fists
push
push
in
pmaddwd
aam
pop
push
in
push
sub
jno
jns
rep
dec
out
push
adc
cs
xchg
xor
mov
roll
push
outsb
insb
aad
xor
rorl
call
jne,pn
cmp
pop
dec
aad
fisubl
inc
aaa
insl
add
cmpb
or
xor
scas
scas
shlb
dec
imul
jo
aad
sbb
outsb
inc
jge
in
sub
push
ret
dec
lods
stos
mov
cmpsb
incl
mull
iret
fnstsw
andl
mov
andb
aas
insb
or
adc
aad
test
ja
lahf
jmp
xchg
decl
js
loop
ret
xchg
lock
stc
imul
sub
shlb
adc
mov
cmc
or
jbe
lock
in
lcall
stos
in
or
pop
pop
sar
mov
scas
and
push
mov
mov
sub
aad
lea
inc
push
pop
dec
int
pusha
jb
mov
out
ja
adc
cmc
int
add
nop
cld
stos
cmp
iret
jmp
rcl
and
jbe
cmovo
loopne
test
mov
dec
jae
xor
into
or
stos
pop
pop
sub
imul
ss
adc
sbb
jbe
push
pusha
out
pushf
cmc
mov
push
dec
lahf
aad
dec
push
insb
xchg
xlat
xor
mov
or
xor
add
jbe
rorl
xchg
push
and
dec
mov
or
sub
fdiv
jmp
cmp
mov
out
in
cld
test
xchg
add
data16
push
xchg
fsubr
out
sub
push
push
pop
jl
idivb
sub
pop
sarl
in
loope
decl
push
jnp
push
xor
repnz
or
mov
aad
cmp
add
leave
lea
sub
lahf
lods
fistpll
int
loope
pop
shll
mov
dec
dec
ss
xor
dec
movswl
pop
popf
popf
mov
imul
outsl
neg
popa
adc
jae
scas
mov
and
clc
fwait
mov
cmp
lods
jp
sti
cmp
lahf
mov
imul
mov
faddl
push
mov
in
or
or
std
mov
sbb
mov
dec
xchg
xor
rcl
cmp
out
mov
addl
and
scas
push
adc
inc
cld
stc
cmp
inc
dec
jmp
add
js
jmp
add
aad
sub
es
lods
stc
jmp
fs
outsb
add
negb
repnz
cmp
ds
pushf
jle
mov
jmp
mov
mov
mov
sti
and
popf
cmp
lret
sub
in
jae
dec
xchg
sbb
xchg
fbld
dec
divl
mov
sarb
sbb
sub
lcall
and
push
add
sbb
out
xchg
dec
and
xchg
xor
out
push
push
xchg
cwtl
push
mov
sub
or
test
xchg
fsubp
gs
repnz
shrl
adc
lods
dec
dec
mov
jae
inc
sahf
shlb
push
push
call
dec
and
or
addr16
enter
cltd
inc
stc
adc
jns
add
mov
add
jnp
out
aam
xchg
dec
mov
add
aad
aas
jle
mov
movsb
and
int
inc
jecxz
push
xchg
or
loop
push
ja
cmp
mov
int
sub
out
and
dec
cltd
fildl
adc
rcrb
andb
imul
add
jnp
imul
xchg
inc
jp
ja
out
icebp
int
lods
jecxz
iret
adc
pop
or
out
mov
popf
sbb
push
mov
test
jecxz
jmp
int
mov
or
scas
adc
pop
sub
mov
pop
sbb
cs
mov
mov
xor
clc
aam
mov
or
add
xor
mov
xor
jle
sahf
cld
enter
mov
jmp
cs
add
inc
test
int
jb
jnp
mulb
push
gs
adc
dec
jmp
sbb
loopne
inc
mov
imul
ja
shl
fwait
cmp
dec
inc
in
ret
and
shlb
xchg
leave
xor
mov
jae
mov
jne
fidivs
out
mov
inc
shlb
mov
mov
inc
cmp
jg
dec
cmp
outsl
jae
hlt
int
pop
mov
xor
mov
or
mov
test
jns
incb
vshufps
popa
inc
outsl
and
jo
dec
sti
add
fistpl
outsb
rorb
fmull
mov
into
mov
out
repz
daa
sub
loop
push
filds
pop
push
push
and
adc
cmp
mul
cmc
std
sbb
pop
fldcw
leave
jae
pop
int
pop
xchg
push
sbb
sub
lods
cmp
xor
cmpsb
dec
js
push
mov
xor
arpl
cmp
call
adc
roll
cmp
mov
fcoms
mov
mov
add
xor
dec
xchg
pop
stc
lock
aam
out
and
test
lret
add
ss
dec
mov
aad
pusha
jle
cmp
sub
mov
mov
xchg
inc
stos
cli
adc
mov
dec
into
mov
jmp
aas
mov
fdivrs
fnsave
shrb
push
pop
mov
push
imul
pop
and
shll
and
dec
push
fwait
out
xchg
lcall
les
sub
lea
xchg
fisubs
jo
dec
test
sub
xlat
jno
mov
js
mov
scas
inc
xchg
mul
in
sbb
jmp
call
and
xchg
or
push
xchg
jnp
or
push
or
or
pop
and
push
xchg
imul
pop
das
lock
add
pop
stos
std
stos
add
pop
sub
dec
inc
mov
or
jb
out
clc
cmp
push
decl
sbb
dec
pop
fldenv
rcrl
mov
mov
mov
pop
jp
jbe
add
aad
lock
cld
push
inc
cmp
and
aad
pop
in
inc
push
repnz
mov
add
daa
cmp
imul
and
or
sub
jl
add
test
les
fnstcw
popl
mov
psubd
jae
loope
sbb
cmp
mov
hlt
hlt
mov
push
inc
shrd
mov
fidivrs
adc
in
cmc
pop
mov
test
rol
jl
or
cmp
fistpll
fwait
int3
xchg
cltd
xchg
inc
imul
lret
cli
add
cmp
sti
push
repnz
mov
adc
and
xor
outsl
jno
add
push
xchg
jle
mov
inc
jbe
mov
ja
push
and
aad
subb
and
xchg
mov
and
xchg
xor
lods
mov
fisubl
mov
shlb
jb
loopne
cli
fs
loope
sub
inc
mov
icebp
add
lods
jno
mov
enter
int3
jmp
add
lahf
dec
xor
ret
jnp
cmc
jae
andb
cmp
aam
or
push
cmc
mov
scas
dec
gs
fstps
incb
or
int
test
xchg
test
addr16
movsl
insl
dec
xchg
dec
lcall
inc
pop
addr16
sti
pushl
mov
pop
cli
jp
out
or
dec
inc
cmp
hlt
bound
xor
mov
sub
lds
in
inc
lcall
cmp
clc
pop
dec
mov
inc
mov
lods
fsubrs
add
mov
aad
push
test
cs
sub
lea
js
mov
xchg
mov
inc
mov
stos
mov
ret
gs
pusha
xchg
lods
xor
inc
pop
sarb
dec
arpl
or
js
jmp
cli
mov
imul
jp
jns
or
call
mov
push
pop
jecxz
add
mov
adcb
movsb
ja
add
push
sbb
push
mov
pop
adc
cmp
bound
cli
jg
pop
ljmp
lea
dec
fidivrl
loop
add
dec
fwait
sti
jne
push
mov
xchg
jae
into
pusha
shrl
or
add
cmc
repnz
mov
lods
gs
scas
adc
dec
bound
cmp
mov
jp
sub
inc
dec
sbb
push
add
imul
out
out
fsqrt
aad
jnp
cwtl
add
jge
cli
push
mov
xchg
outsl
pop
mov
dec
loop
roll
inc
and
mov
add
testb
addr16
iret
sti
cmp
out
ds
outsb
std
ljmp
adc
pop
rorb
mov
mov
mov
cmp
pop
sbb
and
push
mov
lods
add
push
jmp
aad
fistpl
in
dec
scas
sub
dec
test
js
mov
dec
addb
cmp
xor
js
xchg
insl
mov
ror
inc
lcall
sbb
and
aad
movsl
add
mov
ret
or
and
dec
cli
push
insl
cmp
into
sahf
inc
pop
adc
cmp
and
decl
jns
in
push
icebp
loopne
cmp
push
jecxz
xchg
cmp
nop
jmp
or
fnstsw
pusha
dec
or
mov
jo
push
stc
or
mov
mov
mov
fimuls
mov
out
jnp
testb
aad
mov
dec
gs
jbe
rorb
pop
in
sbb
out
cs
and
add
rcrb
scas
lds
dec
and
movsb
call
clc
enter
sub
sbb
dec
insb
jl
adcl
cmp
test
adc
iret
mov
mov
lea
and
or
cmp
jae
inc
mov
jno
mov
sub
xor
xor
jmp
dec
xor
outsl
cmp
gs
dec
xchg
inc
ficoms
mov
push
add
aaa
sbb
pop
xchg
insl
adc
js
jo
mov
mov
aad
jmp
xlat
pop
in
mov
out
sti
notl
mov
jnp
pop
dec
into
aad
mov
dec
xchg
xor
push
gs
pop
test
int3
cmp
add
jno
push
int3
js
out
or
sub
repz
outsl
aaa
jns
enter
mov
test
pop
adc
cmp
mov
adc
insl
pop
movsb
add
inc
inc
outsb
jp
mov
push
cmp
add
scas
mov
into
aad
jmp
mov
les
fnstsw
lea
imul
jp
sub
fisttpl
outsb
outsl
divl
dec
cmp
push
call
xchg
sahf
mov
adc
std
dec
pop
push
aad
cwtl
rorl
or
dec
xchg
xor
jp
jg
jp
jno
dec
cmp
les
sbb
movsl
sbb
inc
bound
lods
or
mov
mov
call
sbb
or
and
xor
dec
push
and
dec
insl
inc
out
repz
aam
call
jl
adc
jle
out
aad
imul
mov
pop
mov
sbb
sbb
lods
into
add
push
cmc
lods
sti
push
in
loop
sbb
mov
insb
or
dec
jns
and
outsl
push
dec
sub
outsb
stos
cwtl
add
adc
add
ret
xchg
and
divw
add
stc
xchg
ljmp
shll
sub
sub
push
ljmp
cmp
fucomip
pop
pop
cmpsl
bound
outsb
icebp
fnstenv
inc
jmp
jno
dec
xchg
jge
nop
adc
repnz
xchg
cmpsb
repnz
pop
mov
call
jae
push
sahf
sbb
js
cmp
jns
add
cmp
aad
jmp
push
mov
aad
jo
or
jmp
rcr
ljmp
sbb
imul
lret
push
movsb
sub
pop
insl
push
std
int3
js
in
inc
test
cmp
add
sub
inc
popa
fmuls
mov
in
push
lea
mov
pop
inc
imul
jb
push
xchg
add
std
fsubl
daa
cs
and
mov
push
jns
lar
push
scas
mov
fisubl
jbe
mov
mov
loope
jecxz
stos
jp
sub
sub
add
inc
dec
clc
fcmovnbe
pop
scas
sahf
into
hlt
aam
xchg
mov
cld
mov
sub
bound
lcall
je
and
into
call
inc
xlat
add
mov
mov
test
xchg
loope
adc
shl
out
mov
pop
lcall
lds
and
icebp
jno
cwtl
sbb
and
or
and
add
stc
mov
jg
sub
ss
add
push
fimull
pmaddwd
aad
xlat
inc
imul
ret
outsw
cmp
push
xchg
add
pop
scas
sarb
mov
scas
arpl
shl
cmpb
push
cli
sub
dec
xchg
and
fidivl
nop
pop
arpl
sti
lahf
jmp
stos
sti
test
adc
jp
mov
cmp
xor
in
cmpsb
jmp
cmc
push
dec
push
push
aaa
push
sti
cmp
shlb
and
fs
dec
loopne
scas
pusha
lds
jb
sub
jmp
cmpsl
add
xchg
inc
in
push
pusha
xchg
lods
movsb
sbb
out
rcr
pop
and
pop
push
and
lods
popa
xchg
mov
int
jno
mov
cmp
dec
aaa
pushf
stos
inc
mov
jnp
nop
gs
cmp
in
adc
fdivrl
jl
and
jecxz
xlat
inc
fidivl
inc
inc
into
and
xor
xor
cmp
mov
stc
push
inc
lea
rcr
imul
std
adc
popl
das
xchg
inc
cmp
mov
pop
shlb
rclb
or
mov
adc
mov
add
xchg
dec
xchg
push
mov
call
pop
clc
jmp
js
cmpsb
fbld
xchg
std
outsl
sahf
add
jmp
iret
mov
popa
pop
adc
outsb
stc
xor
mov
loop
cmpsl
stos
or
aad
fiaddl
jp
xor
je
repz
mov
adc
aad
dec
rdpmc
into
cmp
inc
pop
icebp
rorb
pushf
cmp
shrl
xlat
stos
mov
adc
ja
movsl
push
repz
cmc
xlat
testl
mov
cmp
pop
pop
insb
mov
mov
pop
js
outsl
jmp
lock
mov
in
inc
cld
cmp
repnz
bound
imul
in
mov
dec
pusha
or
jbe
sub
xchg
repz
cltd
mov
ja
lods
data16
fcomip
inc
inc
ret
inc
cmp
sbb
jns
scas
insl
xchg
xchg
cmpsb
xchg
in
push
stc
jmp
add
aad
outsb
add
sub
stos
scas
ss
test
sbb
aad
xchg
cmp
xchg
jns
lods
pop
add
test
test
lock
xchg
test
and
call
movl
push
ss
lret
dec
mov
out
xchg
test
cmp
std
add
aad
and
mov
dec
pop
push
jbe
scas
xchg
inc
bound
or
mov
jne
jg
jge
decb
push
icebp
rcrb
inc
bound
lret
push
rcrb
jle
popf
jl
or
xor
out
adc
aad
leave
jle
and
call
sub
inc
add
popa
scas
mov
fndisi(8087
sti
dec
stc
jnp
insb
jnp
aaa
dec
fldcw
jg
jmp
push
fwait
jge
mov
fldcw
imul
andl
jl
addb
mov
mov
imul
xchg
in
je
inc
mov
roll
outsb
fiadds
mov
imul
jo
xchg
pop
jns
jno
xchg
lds
loope
jne
stos
push
xchg
fstl
cmc
iret
sbb
loop
mov
test
pop
jl
cli
mov
pop
push
push
dec
call
je
mov
cmpsl
in
popa
call
push
dec
in
ds
das
xor
add
int
loopne
scas
adc
int
adc
loop
jp
fdivl
dec
sti
cmc
lahf
cmp
lcall
scas
or
mov
movsl
cld
test
push
mov
imul
and
jl
mov
push
and
add
mov
test
gs
ret
fwait
adc
bound
jne
int3
sub
fisttpl
setne
out
jbe
jns
push
jns
rcll
xor
and
in
imul
sti
pop
jmp
jns
xchg
shl
aad
ljmp
push
stos
in
ljmp
aad
leave
stos
cmp
inc
mov
push
out
gs
and
pop
hlt
pop
in
iret
popa
cli
leave
call
lea
mov
or
mov
stc
xor
mov
jbe
push
fsubrs
loope
jp
aad
cmc
call
aad
sub
inc
lcall
push
fcmovbe
jmp
lods
out
shll
clc
jmp
dec
cmp
xor
inc
mull
loop
lods
add
icebp
ljmp
sbb
aas
mov
seta
adc
pop
scas
or
fs
test
dec
push
adc
mov
and
cld
cmc
jecxz
jge
adc
adc
lds
shlb
pop
fimuls
fnsave
fildll
or
sbb
cmp
dec
jns
inc
psubw
xlat
lds
and
mov
stos
clc
jle
cmc
and
inc
loope
repz
mov
adc
popa
add
sbb
jnp
les
sbb
push
mov
mov
rclb
mov
dec
mov
xor
movb
inc
pop
jo
test
ljmp
jl
jmp
push
dec
fisubl
xchg
enter
cmp
add
or
xchg
imull
xchg
adc
negb
add
cmc
pushf
inc
cmp
fsubrl
push
enter
fsubs
inc
repz
mov
mov
adc
imul
je
push
test
xlat
lea
push
ja
dec
or
lock
fisttps
gs
les
adc
adc
inc
jecxz
out
scas
adc
and
shrl
lods
adc
add
xchg
cmc
adc
jbe
subl
xor
jne
mov
adc
pop
test
and
in
lods
xor
xor
stos
sbb
rolb
jne
jmp
ret
mov
cmp
mov
push
repnz
cmp
push
fistpll
cwtl
jno
clc
std
dec
std
hlt
dec
es
jecxz
stos
mov
cmpsl
add
add
dec
or
xchg
pop
push
gs
movsl
fdivrs
pop
das
pop
sbb
divl
shl
punpckhbw
fdivrs
push
pop
jle
cmp
xchg
fs
cmpsl
inc
popa
cmp
test
fdivrs
jge
sub
cmpsb
pop
or
or
sti
mov
mov
out
adc
jecxz
iret
fistpll
iret
nop
push
mov
xchg
nop
and
adc
sub
mov
les
iret
ljmp
mov
mov
daa
arpl
jmp
test
jb
out
cmp
popf
sahf
in
push
xchg
xor
mov
into
add
lahf
jbe
in
fnstcw
out
push
cld
dec
hlt
fcoml
pop
jnp
jbe
push
pop
adc
xor
mov
mov
jb
xlat
sbb
in
pop
cmp
scas
inc
fwait
and
xchg
outsl
rcll
dec
sub
pushf
push
dec
call
in
leave
aas
sub
enter
das
enter
iret
xchg
cmpsb
dec
inc
out
sbb
jl
mov
mov
sbb
pushf
aam
jnp
int
mov
pop
call
pop
popa
daa
jge
push
add
and
cmc
jo
xchg
sbb
sub
iret
scas
test
pusha
sub
adc
xchg
sbb
icebp
rcrb
test
xor
mov
aad
out
popa
loopne
xchg
pop
shl
imul
mov
cmpsb
dec
inc
les
push
and
js
popa
ja
mov
aad
iret
lea
jmp
out
dec
xchg
and
sub
cmpsl
push
aad
fucom
outsb
aas
lea
sarb
xchg
or
testl
mov
dec
inc
movsb
adc
test
cmp
cmp
xchg
xchg
cmpsl
adc
jns
popa
jg
push
nop
lock
pmullw
lods
jp
fwait
xor
sbb
leave
fwait
and
mov
jnp
mov
jl
in
imul
push
jmp
adc
jbe
notl
pop
imul
cs
sarb
xchg
lahf
aad
dec
inc
loop
testl
xchg
inc
int
jnp
js
push
into
fwait
jmp
inc
repnz
mov
aaa
fchs
push
fldenv
aad
popf
cmp
scas
cmc
fisttpll
add
addr16
sahf
sub
sub
xchg
adc
xlat
and
jns
int
arpl
sbb
xchg
inc
adc
fimuls
push
adc
inc
mov
mov
xchg
sub
pop
adc
mov
cmc
dec
adc
xlat
sub
or
ret
xchg
mov
and
inc
stc
mov
call
lahf
mov
mov
mov
sbb
fwait
je
jl
push
lods
popa
xor
scas
dec
pushl
ljmp
les
xlat
ficomps
call
mov
xchg
call
add
shlb
xchg
aaa
mov
arpl
aad
push
popf
cs
aaa
and
cmc
lret
mov
pop
xchg
pop
sbb
pop
loope
push
sub
pushf
sub
push
mov
mov
mov
mov
mov
ds
mov
mov
negl
pop
decl
inc
movsb
xchg
fs
mov
adc
int
add
jecxz
xchg
jge
sahf
dec
mov
mov
jne
popa
ja
jecxz
adc
lods
and
sbb
ret
and
pusha
mov
in
or
add
sti
cli
push
repz
or
mov
xchg
mov
mov
shll
lods
cld
cmp
pop
hlt
mov
shrb
sbb
cmpsb
out
movsl
jge
dec
xchg
jp
dec
out
fcoml
or
push
jge
mov
or
push
jb
cmp
xor
test
cli
add
jmp
sbb
xor
dec
mov
jp
aad
dec
cmp
sbb
dec
lods
push
inc
cs
mov
pop
fisttps
std
add
cltd
jl
aad
jl
push
xor
scas
loopne
aad
daa
add
push
lods
jg
dec
lods
or
mov
jno
inc
imul
xchg
mov
push
lods
xlat
add
ret
les
mov
push
mov
icebp
clc
jmp
in
adc
int3
stc
cmc
jo
cmpsb
loopne
xchg
xor
jne
fcoms
xchg
subb
cmc
push
lret
xchg
rcrb
lcall
cltd
sub
inc
adc
push
cmp
into
aas
icebp
jmp
and
dec
jl
std
mov
into
pop
pop
daa
xchg
iret
mov
mov
mov
test
cmpl
fdivrs
sbb
dec
pop
jns
cld
ljmp
mov
gs
movsl
jnp
jbe
stos
xchg
cmp
loope
lea
fldcw
cmc
test
aaa
lcall
gs
jns
aad
sub
loop
and
xchg
xchg
mov
sti
jne
mov
maxps
fldl
stos
decl
push
add
into
mov
xchg
push
pop
sahf
and
cmpsl
mov
add
cltd
xchg
push
inc
add
cmc
lds
cmc
repz
dec
jge
ret
and
lods
xor
dec
scas
jge
mov
aad
cmc
dec
jmp
in
insb
test
sahf
arpl
and
xchg
jae
xlat
mull
repz
int
jbe
mov
test
pop
test
lock
das
mov
inc
adc
add
popf
pop
or
sub
adc
mov
les
in
dec
aad
xor
xchg
pop
sub
lahf
sti
and
cmc
int
jbe
imul
aas
sub
enter
lock
test
pop
mov
sar
movsb
cmp
sub
scas
cmc
iret
movsl
and
loope
testl
popa
test
inc
or
je
inc
ss
xchg
js
and
pop
iret
ds
pop
adc
pushf
jmp
cmpsb
arpl
in
and
sbbl
aad
enter
inc
jecxz
xchg
ds
outsl
inc
xchg
cmp
cmpb
xor
roll
push
push
push
cli
iret
fisubl
dec
rcrl
jae
adc
dec
vdivsd
dec
clc
sbb
mov
lods
lcall
das
and
cmp
inc
call
xor
push
xchg
push
les
adc
roll
test
test
test
mov
xchg
pop
xor
pop
js
jg
sub
push
pcmpgtd
xchg
mov
pop
out
call
mov
mov
dec
push
scas
pop
and
js
xor
adc
cld
jo
decl
in
test
add
or
sub
out
mov
or
push
or
cmp
sub
nop
mov
push
lret
mov
adc
or
int3
cli
aad
mov
int
dec
or
mov
mov
jle
jge
scas
cmpsl
jnp
inc
cs
mov
xlat
xor
push
xlat
xor
outsb
xchg
cmp
xor
jmp
pop
mov
lods
scas
std
jle
dec
mov
test
inc
and
adc
jo
push
ret
and
add
nop
cmp
or
ret
cmp
xor
xchg
sbb
or
push
jns
sub
mov
push
cmp
das
sbb
cli
cmp
lds
es
mull
inc
rolb
outsl
sub
push
jo
fdiv
call
in
sbb
jp
xchg
lock
setb
aad
mov
inc
out
mov
jo
in
mov
cmp
fistpll
inc
sbb
jecxz
cmpsl
cld
enter
mov
into
stos
das
adc
jge
adc
dec
xor
dec
or
stos
ds
cltd
cld
fs
pop
ss
jl
out
cmp
and
and
cmp
adc
imull
or
mov
loope
pop
outsb
jmp
andl
lods
push
and
test
xchg
cld
inc
outsl
jp
jo
shll
jl
cmp
cmpsl
push
sbb
scas
repz
cmp
cmpsb
pop
jp
popl
sub
stos
fcmovnbe
jnp
in
scas
cld
jle
xor
lock
pop
fldl
or
cli
stc
dec
sub
add
sti
pop
out
cltd
dec
sub
sti
mov
push
push
fxch
cmc
sub
loope
mov
das
pusha
in
dec
xor
nop
scas
fs
je
nop
push
int
fsubl
or
bound
inc
pusha
inc
outsl
sbb
push
lcall
in
outsl
roll
cld
test
arpl
ficomps
xchg
push
sahf
repz
sbb
lods
movsl
cwtl
ljmp
lock
add
scas
xor
outsl
pop
nop
or
popf
lock
xor
mov
add
push
push
xchg
xchg
inc
push
nop
sub
jns
adc
xchg
dec
mov
in
or
mov
mov
test
sub
repz
loope
xchg
rorl
sub
jo
or
inc
jne
sub
fisubrl
mull
addr16
xor
xchg
fsubrs
out
pop
push
rolb
or
sub
arpl
les
and
push
pop
loope
or
pop
add
loop
aad
popa
cwtl
roll
jle
stc
pop
sbb
sub
outsb
popa
sahf
mov
insb
scas
sbb
scas
or
jecxz
xchg
inc
fcmovbe
pop
cwtl
mov
jbe
jne
arpl
test
scas
sti
xor
jle
stos
outsl
fwait
mov
cmpsb
add
mov
xchg
imul
in
sub
adc
enter
cwtl
movsb
inc
test
cmp
xor
das
shl
fcomp
sub
push
fwait
pop
or
cmp
sub
adc
push
outsb
and
stos
lods
xor
mov
push
sub
add
stos
fidivrs
test
or
adc
and
es
sub
mov
jg
push
stos
pop
push
mov
cltd
lods
push
xchg
adc
sarb
or
xor
xchg
rorb
insl
mov
or
adcl
ror
cli
out
fstl
test
push
pop
stc
and
jl
call
in
into
out
in
popa
out
das
aad
lret
cmp
and
insl
add
sub
sarl
call
lahf
ds
aas
jno
mov
lret
test
lcall
mov
xchg
push
iret
ja
jl,pn
movsb
push
imul
push
push
inc
mull
xor
adc
jge
xchg
pushf
and
test
icebp
into
cs
roll
std
enter
sub
sbb
cmp
aad
insl
mov
fwait
dec
test
adc
jmp
sub
push
adc
scas
ja
xchg
into
push
pop
mov
mov
cltd
js
scas
aad
call
stos
push
fldl
xor
js
push
cld
mov
sbb
out
cmp
lods
orl
fadds
mov
lea
addr16
pop
popf
jp
out
rcrl
daa
aas
cmp
rcrb
inc
fistps
loope
and
loopw
cmp
adc
addr16
das
sbb
cmp
in
jge
pop
iret
mov
pop
push
dec
pop
xor
subb
fisttpll
lret
inc
test
add
in
loop
push
cmp
testl
push
cwtl
out
mov
cmpsl
xchg
jmp
ret
add
jne
mov
push
sbb
lret
push
fstl
mov
dec
flds
aad
ss
adc
add
ljmp
vmwrite
int
xor
pop
push
jge
imul
out
into
cltd
and
stos
cmp
lahf
cli
and
out
les
negl
aad
cld
rcl
sub
dec
fmull
push
rolb
shlb
fbstp
js
or
or
inc
into
or
dec
gs
push
lock
xor
jmp
stos
fsubp
dec
push
scas
dec
or
xchg
shl
outsl
cmp
and
mov
jecxz
cmc
addr16
int
inc
into
mov
and
rcrb
cmp
fstps
mov
add
push
xchg
dec
sbb
test
mov
data16
xchg
cmp
sub
lds
jns
push
iret
je
or
clc
popf
mov
testl
or
xchg
dec
and
lods
dec
add
bound
sti
imul
lret
fmull
mov
sub
jae
add
push
or
hlt
or
nop
xchg
push
in
arpl
xlat
push
mov
mov
out
scas
inc
hlt
shl
cmpxchg
fucomp
cmp
fucomip
xor
cmp
cmpsb
test
inc
push
sub
mov
nop
jl
mov
sarb
or
push
push
out
std
popa
ret
or
jmp
fstl
add
or
add
insb
out
pop
shr
push
or
int3
mov
popf
push
test
add
loope
lods
jecxz
call
fdiv
mov
lods
inc
add
lods
or
pusha
pusha
filds
sub
or
shr
cmp
les
mov
mov
popa
dec
or
into
jp
mov
stos
add
sbb
fdivl
js
idiv
gs
loopne
sub
push
push
lahf
sbbb
loope
popf
loop
sbb
sbb
cld
xchg
imul
subps
jl
mov
out
insl
cmp
add
or
popf
jmp
jns
xchg
dec
pop
aad
lret
inc
cld
jmp
call
mov
rcll
adc
aas
ret
or
pop
fisttpll
pushf
push
imul
hlt
xchg
js
dec
jne
jo
fcoml
mov
out
bound
popa
push
inc
push
lock
out
into
xchg
dec
mov
jb
mov
scas
or
and
sub
fdivrl
push
mov
fnstcw
jp
adc
call
and
test
jo
push
lods
mov
faddl
out
es
lahf
add
fistps
into
ljmp
fcompl
lret
add
shlb
arpl
decl
imull
cmc
or
dec
cmp
aad
jmp
push
inc
mov
shrb
test
dec
lret
or
sbb
jmp
xchg
repz
inc
push
jo
ret
jne
fwait
shll
sbb
lahf
jbe
aad
push
xor
les
xchg
push
push
mov
aad
hlt
jns
int
ret
clc
push
jmp
xchg
dec
mov
orl
imulb
xchg
cmc
mov
mov
movsl
sar
add
sbb
not
popf
enter
jns
xor
stos
and
lock
add
sub
into
stos
int3
mov
in
arpl
mov
mov
xor
push
or
or
pop
xor
xlat
push
dec
ljmp
or
xchg
lahf
add
xchg
push
aad
mov
shll
rclb
push
out
jmp
mov
push
ret
into
xchg
xchg
nop
xcrypt-cbc
cmpsl
aad
adc
dec
or
mov
cmpsb
fisttpll
adc
dec
sbb
and
and
fwait
aam
mov
dec
jnp
lea
sub
subb
into
leave
push
addr16
jl
rorl
cmp
movsb
cmp
cwtl
nop
popf
out
cmc
jecxz
jb
dec
aad
lcall
hlt
iret
add
mov
mov
pop
test
mov
ret
push
in
ficoml
xchg
xor
xchg
mov
jo
mov
pop
mov
mov
shrb
arpl
icebp
mov
std
xchg
outsl
sbb
push
adc
stos
lock
mov
add
and
cmc
jno
inc
pop
cld
inc
scas
jp
pop
mov
aad
jl
jno
and
pop
mov
les
push
les
iret
imul
push
dec
roll
or
cmp
xchg
fimuls
cmp
and
sbb
push
xchg
divl
sbb
fst
cs
mov
jg
inc
shrl
mov
shll
cmp
fidivs
jl
xchg
imul
rclb
scas
lods
inc
mov
pop
out
push
test
daa
outsl
cmpsl
aad
inc
repnz
mov
imul
sub
movsb
or
jmp
sub
lret
in
pop
mov
jmp
push
push
mov
push
lea
and
cmp
lods
shll
scas
cmc
dec
or
outsb
mov
repnz
in
sbb
pop
push
sub
ror
mov
daa
or
mov
xchg
outsl
dec
outsb
sub
out
mov
aad
icebp
scas
dec
cli
call
je
dec
cmpsl
xchg
mov
into
cmc
push
mov
sahf
ret
sbb
jl
dec
scas
movsl
xor
mov
adc
fmulp
fs
inc
lcall
inc
mov
sub
subl
push
les
adc
cmp
test
ds
push
push
cwtl
imul
rcr
daa
pushf
sarl
mov
jbe
pop
cltd
jg
mov
cmp
cmc
mov
mov
mov
cli
fildll
cmc
push
ljmp
hlt
jno
xchg
xor
mov
icebp
xor
cmp
call
repnz
mov
pop
outsb
idivb
cli
jne
lahf
outsl
xor
cmp
rol
mov
and
jecxz
stos
inc
xor
push
dec
inc
stc
outsl
add
pop
inc
push
xor
jmp
sub
call
mov
dec
push
lret
dec
call
mov
jl
scas
sarb
cld
cmp
jl
sub
or
insb
pop
out
jg
jp
nop
lds
subl
icebp
mov
push
xchg
dec
dec
sub
sub
imul
push
jl
xchg
add
push
insb
into
mov
dec
xor
cwtl
xchg
aam
icebp
sbb
mov
jbe
int
add
js
addl
add
test
out
xchg
add
pop
jo
inc
mov
imul
movl
aad
jl
mov
int
faddp
pop
jb
adc
fs
ss
out
scas
xchg
test
test
sysret
jno
cmp
mov
je
sub
mov
pop
into
insl
in
jg
imul
sub
and
jbe
xchg
movsb
and
rcl
jmp
pandn
call
sbb
lret
or
and
fs
sub
inc
imul
fildll
sbb
ret
push
inc
dec
mov
dec
push
shlb
adc
outsb
mov
mov
jns
or
hlt
or
jl
cmpsl
jg
xchg
icebp
mov
movsl
jb
ja
jnp
pop
int
ret
mov
outsb
mov
inc
mov
pop
aad
lods
sbb
pop
icebp
jl
cmc
mov
push
shll
in
js
cmc
scas
jmp
bound
js
cmc
jecxz
fbstp
aad
cmp
inc
adc
sub
out
out
and
cwtl
jo
add
xor
inc
loop
sti
ret
inc
xlat
jno
mov
in
stos
mov
jecxz
shl
pop
rorl
test
iret
add
ja
test
stos
cmp
sub
inc
lahf
cmp
xor
scas
clc
negb
mov
jg
push
mov
in
cmpsb
push
dec
pop
push
in
lock
inc
mov
xchg
test
xchg
in
sti
cmp
jg
das
mov
xlat
hlt
mov
jnp
ja
xchg
pop
or
sub
scas
clc
gs
cmc
ljmp
xchg
das
push
sub
movl
inc
mov
lock
jmp
adc
adc
ficomps
mov
mov
aad
sub
jmp
sub
adc
sbb
sub
and
add
fisubs
dec
sub
bnd
pop
mov
mov
imul
and
dec
and
iret
sub
je
pop
xchg
mov
std
adc
insb
pop
push
xor
ret
and
or
add
aad
pop
test
in
mov
xchg
dec
dec
xor
gs
aas
imul
repz
push
inc
scas
and
mov
mov
testb
inc
and
sub
aad
pop
cs
mov
adcb
mov
out
mov
fisubrl
sub
or
movsb
imul
xor
iret
test
shlb
ficompl
scas
mov
repz
mov
cltd
push
sahf
lahf
addr16
and
mov
insb
icebp
inc
xor
orb
xchg
mov
cmp
call
mov
insl
or
call
aas
add
fildll
enter
subl
fmuls
into
sahf
andl
pop
jg
mov
xchg
mov
sub
cmp
mov
std
inc
sbb
mov
jns
notb
scas
shrl
mov
call
or
sbb
enter
mov
iret
mov
sub
mov
pminsw
adc
das
and
in
sbb
aad
mov
push
push
cmp
sbb
inc
nop
scas
pop
or
and
pop
insl
arpl
movsb
in
addr16
sub
les
repz
sbb
mov
rol
shll
iret
or
dec
pop
cli
fsubs
outsl
xchg
pop
xchg
scas
dec
jl
mov
pop
adc
cmpsb
std
lea
rcrb
and
add
jl
mov
or
jmp
mov
pushf
push
fucomip
addr16
cmp
push
dec
cmc
push
int
sub
cli
dec
ljmp
dec
jmp
pop
sub
outsb
mov
cmp
cld
and
mov
inc
aad
pop
cs
mov
or
ljmp
sub
xchg
mov
lea
push
sub
movsl
icebp
cmp
mov
sub
dec
mov
fwait
jp
xlat
sub
out
xchg
mov
push
aas
idivb
inc
fsubrl
std
push
sbb
int
fsts
scas
std
rorl
es
lods
or
into
lds
bound
iret
sbb
xchg
sub
push
sub
or
lods
popa
mov
add
add
into
fstl
sbb
sbb
xlat
shll
insb
nop
xchg
rcrb
subl
fnstenv
jns
shr
dec
mov
fldz
push
out
std
mov
mov
cli
in
das
aad
mov
insb
call
shl
je
movsl
lret
sub
into
sub
popa
pop
jp
in
repz
es
cmp
jo
jle
jmp
or
mov
or
mov
mov
cmc
ret
scas
stos
add
xlat
pop
xchg
push
mov
orb
sti
hlt
mov
mov
adc
or
movsl
lock
movsb
mov
pop
in
mov
and
movl
or
mov
mov
leave
data16
jnp
data16
cmpb
inc
fcoml
int
xchg
and
cmp
out
push
xor
or
bound
icebp
cmpsb
push
inc
jecxz
or
xlat
les
and
mov
jmp
inc
mov
sub
push
push
push
into
jle
stos
inc
xor
test
mov
lcall
sbb
in
mov
mov
outsb
fidivl
mov
mov
xor
lds
popf
sbb
xchg
call
movsb
cld
dec
jno
les
xchg
xchg
mov
xor
sub
or
sbb
lock
dec
cli
xor
xchg
and
mov
jae
dec
sub
xchg
dec
mov
leave
mov
fldt
adc
popf
or
in
jge
xor
dec
addl
test
nop
push
por
adc
imull
or
sbb
cld
jne
repnz
cwtl
bound
shlb
sti
dec
sub
repnz
cmpsb
cmp
or
lods
add
scas
out
xchg
jo
mov
mov
xchg
adc
cld
out
les
mov
scas
notl
mov
loope
outsl
scas
adcb
lahf
clc
leave
mov
push
pop
loope
popa
cli
mov
adc
add
call
test
lea
test
or
sbb
jne
xchg
pop
push
cmpsl
xchg
ljmp
lret
jo
inc
scas
jle
cmpsl
jp
lahf
cmc
xchg
out
sbb
adc
push
push
sub
ljmp
jl
popl
test
fwait
cmp
inc
cmc
int3
sahf
insb
adc
inc
out
loop
pushf
mov
aaa
add
pusha
xchg
rcrb
push
aam
and
or
xchg
insb
jmp
test
fwait
out
or
and
jnp
imul
cmc
ja
inc
cli
les
mov
xchg
rorb
mov
outsl
mov
int
or
mov
insb
adc
inc
fs
jno
or
jno
jae
jns
loope
cltd
aas
push
add
mov
cmpxchg
sub
and
adc
pmullw
cmp
aas
aam
adc
out
sbb
fucomip
push
lret
jno
jmp
mov
divps
lods
and
stos
std
push
stc
push
into
or
gs
add
fwait
dec
sub
inc
inc
mov
out
bnd
lahf
insl
xchg
fisubs
or
adcb
cmp
lahf
daa
scas
jmp
lea
jns
stos
test
aad
pop
and
sub
lea
xchg
je
mov
sbb
sub
mov
ljmp
add
fildl
add
lods
in
xchg
push
mov
es
cmpsb
lret
and
mov
mov
js
pusha
push
std
mov
xchg
jge
iret
mov
push
not
ret
jmp
in
jne
aam
loope
out
cmp
lds
int3
xchg
mov
pop
lahf
mov
pop
cwtl
out
js
stos
and
je
add
push
sbb
and
ja
adcb
inc
jp
negl
lock
outsl
imul
or
test
dec
xor
dec
xlat
in
sbb
sbb
add
cmp
sub
add
popa
aaa
lea
jno
mov
cli
inc
jl
lahf
dec
out
mov
ret
arpl
inc
sub
lods
sub
sub
xchg
xlat
cmc
dec
push
ret
add
addb
hlt
cmp
or
push
iret
dec
aad
jbe
jae
push
repz
pusha
jge
fldcw
push
rcl
imul
pushf
repnz
out
fmuls
xchg
mov
pop
xchg
bound
adc
aad
pop
mov
je
jns
arpl
xchg
out
cmc
imul
rcl
cwtl
cmp
ljmp
aad
inc
push
and
cmc
cmp
mov
js
adc
mov
ret
xor
les
jb
into
push
rclb
call
mov
sub
push
xchg
xchg
adc
mov
lods
xor
push
movsl
cmp
rep
mov
mov
sti
imul
xchg
fwait
test
push
orb
pop
popa
pop
jns
sqrtps
mov
fdivrp
pop
sub
in
aam
cmp
cmp
push
jb
setne
mov
test
int
push
aad
and
cmp
mov
scas
add
in
sahf
cmp
popa
dec
shll
dec
xchg
xor
mov
push
je
mov
mov
pop
sbb
orl
pusha
lcall
shlb
mov
add
pop
movsl
insb
jl
pop
pop
push
in
rclb
icebp
ds
sub
out
in
fldl
or
xchg
cmp
push
arpl
out
js
adc
pop
out
push
bound
jg
ret
in
test
sub
pop
push
imull
add
jmp
cmp
dec
adc
dec
fwait
cmp
lods
mov
int
call
or
int
jo
sub
dec
stos
mov
cmp
ds
xchg
arpl
add
out
in
hlt
mov
data16
cltd
add
popf
add
push
push
imulb
add
addr16
aad
jge
int
mov
push
dec
mov
lds
xchg
int
jnp
pusha
push
sbb
sbb
lcall
pop
sub
xchg
xchg
dec
push
mov
adc
jns
push
inc
loope
sahf
xchg
push
popw
mov
scas
jnp
iret
xor
shlb
fldl
into
jnp
xchg
sub
inc
cwtl
rcrl
cmc
outsb
loopne
jge
mov
xchg
add
push
jmp
fbld
in
pusha
pop
aad
out
mov
inc
cmp
mov
and
enter
and
adc
insb
dec
and
sub
inc
scas
cli
fsubrs
test
loopne
or
sub
inc
push
ret
lock
mov
mov
mov
pop
adc
inc
xchg
jmp
or
dec
add
jecxz
fildl
int
sub
test
push
add
sub
pop
dec
orl
jge
cmp
mov
scas
add
jmp
jecxz
push
cmp
sarb
sub
pop
cmp
sbb
fs
cmp
out
stos
adc
jnp
jnp
xlat
pop
mov
shrl
xchg
push
flds
mov
aad
xchg
insl
inc
cmp
xchg
inc
imul
mov
scas
testb
outsb
cmc
int
es
stos
jle
pop
xor
stc
jmp
add
mov
popf
mov
adc
lcall
push
dec
xchg
cmpb
bound
pushf
in
sbb
in
imul
int
push
mov
pop
les
inc
test
pop
psubb
cmp
push
ret
xchg
pushf
int3
and
jns
pop
jmp
ret
sbb
stos
and
addr16
xor
fiaddl
std
fwait
xchg
add
nop
pop
push
pop
leave
jns
sub
movsl
aad
adcl
ja
mov
sti
push
jns
aam
push
cmpsl
mov
test
aad
stc
shlb
pop
pop
ret
rcll
mov
aad
push
jb
jp
pushf
movsb
jnp
lcall
scas
movsb
and
out
mov
js
cmp
mov
iret
movups
out
pop
js
arpl
sub
fsubs
xchg
add
mov
mov
mov
xchg
xchg
add
imul
icebp
cmp
mov
dec
js
cmp
aaa
enter
fisubrl
sub
or
cmc
nop
je
add
mov
imul
or
lahf
mov
adc
js
fs
loope
pop
mov
out
xchg
test
loope
test
clc
data16
cltd
int
cmp
xchg
jnp
iret
pop
pop
cld
aad
dec
xchg
pop
nop
je
arpl
stos
mov
cmp
mov
jbe
pop
sub
fs
jge
sbb
cmp
xor
out
adc
stos
das
mov
test
or
push
leave
out
xchg
out
lods
stos
iret
xchg
div
popa
mov
pop
lods
mov
push
test
mov
jo
or
add
or
lods
cltd
test
sub
lcall
js
test
ja
jg
scas
inc
aam
daa
pop
insl
lahf
jmp
sbb
push
xor
stos
lds
mov
dec
addr16
enter
sub
dec
repnz
arpl
clc
sbb
test
fsubrl
jns
les
movsl
nop
cld
mov
lods
mov
pop
xlat
xchg
out
lret
and
mov
inc
push
lret
mov
pop
outsl
dec
sti
call
or
inc
sub
mov
stos
dec
fistpl
loope
jne
jnp
mov
scas
rcrl
xchg
cmpsb
lcall
add
dec
js
pusha
mov
repz
nop
or
mov
jecxz
adc
popf
in
cmc
stc
adc
into
std
xchg
sbb
int
push
xor
adc
lods
outsl
push
sti
cmp
cmp
push
sub
mov
movsl
adc
add
scas
in
cltd
cmp
xchg
dec
popf
imul
stos
lret
adc
pop
lahf
or
or
scas
pushf
sub
or
sub
rorl
jae
mov
ljmp
cltd
xor
testl
aaa
or
adc
push
lods
cmp
xorps
mov
jmp
sarl
aad
dec
sub
xor
dec
loop
mov
dec
imul
testb
push
pushf
jp
add
push
jl
mov
adc
fcoms
int3
xchg
out
dec
add
mov
aad
shll
rcll
dec
add
fcmove
int
cmp
mov
mov
adcl
cmp
lahf
test
test
ja
push
and
mov
xchg
mov
mov
add
dec
rorb
inc
xor
aad
and
imul
or
outsl
pop
lret
jge
lock
addb
dec
inc
pusha
dec
sub
and
adc
mov
mov
cli
pop
sar
xlat
jns
rcll
or
jle
test
mov
xchg
inc
cmp
pop
fldenv
push
lds
fdivrs
and
jae
mov
lods
int
jns
lods
aas
or
xor
adc
test
sbb
mov
imul
rorl
xor
mov
aad
cmp
adc
fmuls
out
xor
mov
shlb
stos
sub
xchg
or
repz
mov
sbb
imul
xor
andb
sub
push
fwait
inc
fstps
movups
loopne
int
outsl
repz
inc
out
sarl
aas
sbb
test
mov
popf
mov
add
add
mov
btc
outsb
rcrb
stos
int
fadds
fs
in
adc
jnp
je
cld
cld
pop
cmc
sti
add
dec
xchg
and
iret
cmc
push
bound
pop
xchg
pop
push
dec
cmpsb
iret
cmpsb
cltd
add
adc
sub
jmp
mov
jae
ret
pop
loope
cmpsl
mov
mov
mov
fucom
add
sti
pop
int
stos
int
xor
sbb
jnp
adc
scas
dec
out
jmp
adc
faddp
add
aad
add
sti
sti
mov
fsts
out
les
jecxz
stos
into
or
aad
out
loopne
xchg
cwtl
push
mov
imul
cmp
in
int3
cmp
imul
push
push
cmp
xchg
push
cwtl
push
test
test
push
mov
cmp
filds
push
rorl
aas
adc
and
xchg
mov
stos
jg
xchg
inc
sbb
pop
mov
nop
add
and
outsl
sbb
lret
jne
lods
add
decb
rolb
mov
aad
sub
lcall
lods
mov
mov
dec
add
sub
mov
jl
loop
aad
pop
jle
push
popf
adc
iret
rcr
jo
or
and
push
outsb
cltd
insb
outsl
and
mov
out
xor
cmp
sub
into
or
sub
sbb
cmc
pop
cltd
push
in
dec
and
ficompl
repz
scas
outsl
sbb
mulb
mov
xlat
cmc
inc
cs
cmp
out
dec
std
xor
pop
int
jg
ds
sar
dec
mov
push
fildl
fs
shlb
add
adc
xchg
pop
out
shrb
push
loopne
inc
jmp
in
xchg
popf
out
jno
sub
sub
xor
jge
xor
in
sbb
mov
xchg
xchg
push
pop
cld
mov
adc
or
jmp
pushf
push
int
arpl
out
pop
mov
mov
jae
xchg
mov
pop
out
or
out
movsb
dec
dec
test
stos
cmp
push
aad
mov
sub
pop
iret
adc
imul
adc
stc
add
inc
shl
imul
ficompl
or
inc
or
fidivrs
jno
mov
mov
pop
out
and
inc
jne
add
inc
mov
mov
xlat
iret
and
lahf
mov
aad
loope
cmp
and
mov
test
clc
gs
shlb
fcmovne
sbb
loope
insl
dec
sub
jecxz
sub
imul
sub
test
sub
sahf
lods
movaps
lcall
dec
lret
icebp
push
or
clc
cmpsb
nop
and
jnp
push
aad
xchg
or
dec
imul
jne
sub
mov
addr16
lahf
xor
and
loopne
mov
xor
cmp
cwtl
in
xor
dec
cmpsb
xorps
push
je
aad
dec
adc
pop
cld
call
repz
ret
imul
mov
mov
cmp
test
or
pop
push
cmp
inc
cmp
mov
xorb
mov
aad
adc
ja
adc
inc
inc
or
cmc
movsl
scas
sub
jp
nop
arpl
xor
fisttpl
add
mov
sbb
js
dec
fstpt
cmpsb
add
or
cmp
or
pop
or
fstpt
cli
xchg
aam
dec
outsb
imul
and
stos
lock
scas
cld
sub
movsb
out
std
pop
or
xchg
sub
dec
push
adc
movsb
icebp
stc
js
js
insb
push
and
jae
cmpsb
or
jmp
test
xor
push
xlat
iret
and
enter
push
ret
push
adc
rcll
jmp
adc
mov
out
roll
enter
mov
inc
mov
dec
sub
rcrb
scas
inc
ret
xchg
test
push
jge
ficoml
cmp
jle
aam
dec
iret
aad
insb
pop
jne
out
imul
mov
std
mov
cmp
inc
and
outsb
xchg
pop
arpl
inc
pushf
fadds
adc
stos
cmpsl
jmp
scas
sbbl
imul
sub
xchg
outsb
lcall
arpl
lods
fdivl
mov
les
cli
cli
pop
in
or
es
lret
push
stos
mov
dec
pop
sar
aas
xchg
sub
push
dec
dec
das
pop
jle
jge
dec
sahf
or
cld
or
lods
sti
nop
push
cmc
int
lahf
mov
out
mov
gs
test
pop
movsl
shld
pop
aad
pushf
cwtl
imul
mov
dec
or
addr16
adc
nop
pop
mov
jmp
popf
or
lcall
dec
ss
xor
mov
popf
cmp
call
push
push
and
dec
int
mov
mov
ficompl
pop
or
mov
jmp
pop
cmp
xchg
mov
fcmovne
push
cmpsb
push
sub
repnz
jae
insl
sahf
jg
repz
dec
lss
mov
jmp
push
sub
pop
sahf
fldcw
andb
add
xor
cli
rcr
cmp
push
inc
pop
testb
rcrl
shlb
pop
fnstcw
movsb
iret
mov
rorb
ret
mov
add
aad
mov
into
push
jbe
int
cmp
test
nop
ljmp
mov
imul
xchg
leave
pop
push
pop
jle
aad
loopne
cwtl
inc
jp
sbb
aad
out
push
xchg
data16
xchg
xor
fptan
xchg
scas
xchg
dec
or
jbe
mov
dec
in
or
push
pushf
cmpsl
loop
es
sbb
int
dec
xlat
lods
mov
mov
icebp
sub
lcall
push
adc
jge
mov
xchg
nop
cli
outsl
xchg
dec
and
xchg
push
out
cmc
and
jge
mov
sahf
rolb
enter
loopne
arpl
ret
icebp
pop
into
cmc
xor
xchg
adc
xchg
aad
mov
xchg
in
jb
js
jmp
or
ss
in
and
adc
mov
xchg
mov
sub
in
es
into
mov
jbe
xchg
popa
jg
mov
test
decb
or
jmp
mov
iret
cltd
je
push
fisttps
mov
xor
out
shlb
je
js
mov
add
nop
push
dec
cmp
xchg
testl
in
dec
push
pop
mov
mov
adc
xchg
sbb
shrb
xchg
scas
xchg
dec
in
push
mov
pop
jmp
int
adc
movsl
mov
in
adcl
push
lods
xlat
adc
or
cmp
dec
inc
loopne
lods
loopne
cli
xchg
test
pop
scas
push
add
pop
xchg
shrl
fnstcw
dec
adc
pop
push
adc
insl
fidivrs
mov
jl
in
or
mov
add
cmpsl
mov
popa
pop
test
shl
fisubrl
xchg
mov
or
aad
cli
rcrb
test
inc
sub
sti
xor
je
sbb
jne
xor
dec
sti
cld
decb
sub
test
fwait
mov
aaa
or
xchg
ja
xor
int
push
test
xor
outsb
push
les
popa
mov
test
mov
and
mov
dec
and
movsb
jge
mov
popa
push
mov
cs
icebp
push
add
aad
das
cmp
test
push
mov
sbb
and
mov
mov
divl
int
ret
rolb
ret
call
push
cmc
outsl
int3
push
xorl
xor
inc
je
shl
sub
out
sbb
fcoms
cmp
cmp
push
fldenv
dec
lret
movsb
in
adc
jbe
cs
mov
int
ret
and
mov
jp
xchg
cmpsl
jns
imul
cltd
xchg
add
les
daa
xchg
imul
mul
mov
jnp
and
xchg
lret
adcl
or
inc
mov
insl
aam
mov
inc
scas
out
outsb
cmp
loope
lods
push
xor
dec
cmp
or
xchg
xchg
movsl
notl
repz
mov
or
jo
popf
lods
or
mov
sti
cmc
dec
cmp
jp
mov
mov
sbb
pop
dec
cltd
and
mov
push
call
mov
hlt
dec
jmp
mov
jg
sahf
inc
test
mov
mov
and
in
sbb
dec
mov
outsb
xchg
inc
and
mov
add
dec
adc
mov
out
fldl
into
cmc
aaa
pop
dec
das
nop
ret
pusha
repz
nop
test
add
push
pop
popa
ljmp
xor
aad
and
les
mov
into
xchg
xchg
mov
jns
xchg
sub
insb
std
xchg
cmp
cmp
mov
icebp
shr
jns
in
arpl
pop
and
cmp
dec
or
add
cmpsl
roll
xchg
scas
loopne
sbb
and
push
fisttps
int3
dec
insb
inc
outsl
fbstp
adc
sti
repnz
mov
bound
mov
sbb
sbb
adcb
cld
xchg
or
popa
xchg
mov
xchg
xchg
mov
jp
xchg
ror
sub
addb
mov
cmpsb
and
dec
and
inc
jg
xor
cmp
dec
mov
adc
out
push
xchg
int3
push
das
and
hlt
lret
arpl
mov
xlat
inc
mov
and
or
loope
jg
lcall
mov
lods
ret
out
inc
pusha
mov
and
clc
or
pop
jg
jno
mov
data16
popa
das
pop
xor
adcl
lock
mov
jmp
pop
add
loopne
sub
cmp
add
xor
lods
aam
enter
popf
in
add
mov
mov
jge
dec
add
dec
xor
or
cmp
dec
cmpsl
les
mov
or
mov
and
jmp
dec
fnstsw
or
add
adc
sbb
xor
and
test
outsl
cmp
shl
pop
xchg
adc
add
js
repz
mov
inc
mov
gs
jmp
sub
lds
mov
stc
jmp
ret
jle
ljmp
pop
and
rclb
sbb
add
push
ret
adc
jmp
jne
sbb
cmp
mov
ljmp
rcrl
pop
sub
sub
cmp
and
mov
pop
dec
or
dec
or
push
sbb
xchg
jl
sub
repnz
ljmp
mov
mov
sar
jbe
or
cmc
add
pop
dec
cmp
mov
mull
adc
mov
repnz
int
adc
pop
mov
lock
dec
inc
loopne
xor
aad
xchg
jne
fildll
sub
out
push
sarl
jecxz
insl
cmc
cmp
int
fldcw
inc
mov
movsb
sbb
jl
iret
cmc
outsl
and
cwtl
in
sbb
mov
adc
imul
mov
loopne
fisubs
and
cmc
lds
lods
sti
jmp
call
nop
ficoms
and
mov
and
mov
xchg
mov
sahf
xor
xchg
and
jbe
cmpl
fstps
das
call
jns
mov
push
fsubl
idiv
loope
push
mov
fnstsw
loope
cld
les
cs
pop
or
dec
and
jnp
jecxz
lahf
cmp
and
mov
sahf
add
lcall
imul
mov
sub
push
testl
lods
sub
in
jmp
iret
push
cmc
inc
adc
adcb
cmp
cmc
jge
mov
or
and
cld
push
and
jl
pop
mov
mov
imul
xchg
adc
fcomps
add
mov
stos
lret
sahf
add
xchg
lea
nop
cwtl
sbb
test
mov
inc
sbb
js
pinsrw
mov
incb
stos
dec
mov
fmull
scas
fists
xchg
jns
aaa
xor
inc
dec
add
outsb
aas
fiadds
cmp
ret
pop
pusha
sbb
out
push
aad
arpl
test
mov
les
sub
and
aaa
cmpsl
lahf
fnstenv
mov
jmp
adc
jne
mov
jo
xor
push
nop
inc
and
lock
leave
sbb
repz
mov
bound
add
in
and
inc
sti
loope
sbb
or
adc
dec
adc
fcoms
adc
insl
lods
sub
stc
cmp
inc
push
add
test
lcall
dec
sbb
or
or
sub
add
stos
jno
into
adc
fildll
in
jo
xlat
xor
aam
cmp
insl
loop
jge
repnz
popa
push
inc
pop
push
int
pusha
lcall
in
mov
cmp
or
xchg
push
adc
bound
inc
push
or
call
mov
xor
and
leave
cmc
jle
mov
mov
jmp
jo
shrb
mov
mov
pushf
jmp
adc
aas
push
push
jb
xor
rcrb
inc
int
les
stos
rcll
sahf
std
out
cmp
scas
pop
adc
cmp
sub
mov
mov
inc
fs
mov
cltd
pushl
fsubrl
ja
fcmovu
mov
mov
call
aas
pop
sbb
das
pop
nop
inc
push
mov
jmp
outsb
lea
shrb
inc
xchg
pop
scas
aas
dec
cwtl
adc
lret
out
mov
gs
push
jl
das
pop
cmp
pop
pop
in
imul
outsl
movsb
out
fists
enter
mov
nop
jnp
addr16
jecxz
mov
sbb
fcmovbe
fdivr
add
pop
fsubp
add
jl
cmp
sbb
mov
jmp
lods
sub
ljmp
in
andnps
push
or
inc
pop
sub
incb
xor
cmc
in
xor
cmc
int
fsubl
add
cmp
fldenv
mov
sti
ret
pushf
dec
mov
xchg
and
xlat
pop
and
lea
out
aad
repnz
xchg
andl
sbb
cld
scas
fmull
fldenv
push
or
and
xchg
xor
cmp
out
cmp
int3
gs
cltd
and
or
push
aam
btc
lods
or
aad
stos
pop
addr16
push
mov
movb
pusha
loope
es
movsb
sub
and
stc
mov
sbb
scas
jns
pop
adcl
and
mov
and
fwait
aad
stos
adc
and
cmp
and
jle
or
dec
int3
daa
pop
sti
aas
mov
pop
adc
std
xchg
in
lock
aad
ljmp
popa
sarb
mov
int3
stos
fs
mov
xchg
cmc
push
into
cmc
int
fisttpl
inc
add
xchg
jl
stos
xchg
mov
dec
pop
fs
mov
inc
sub
loope
je
sbb
sub
adcl
mov
loopne
andl
scas
xor
jmp
fs
clc
inc
cld
cltd
mov
xchg
decl
dec
adc
cmp
mov
setne
jns
movsl
fisubrl
or
scas
mov
add
dec
xchg
xor
or
push
xchg
mov
test
int3
dec
out
sub
push
fldcw
dec
dec
cmp
cmp
outsl
inc
sub
fmuls
lods
sbb
mov
int
mov
imul
gs
push
popf
xchg
or
aad
je
push
daa
add
sbb
mov
lahf
test
push
fildll
mov
sahf
rclb
jle
or
in
int
in
ljmp
call
ret
dec
das
mov
mov
aas
push
aad
mov
xor
mov
pop
js
mov
mov
lock
test
cmp
sub
cmp
imul
and
sub
insb
cmp
pop
sbb
or
pushw
into
out
push
cmp
cmc
dec
push
and
call
daa
push
call
add
jl
leave
and
adc
mov
out
imul
subl
int
sbb
mov
ljmp
jo
jae
adcb
ret
xor
in
sbb
mov
mov
nop
out
int
mov
mov
mov
mov
sub
ret
das
ljmp
pop
or
jns
test
xchg
mov
mov
sub
jne
imul
nop
and
adc
cmovl
scas
aas
fs
cmpsb
inc
decb
faddl
aaa
movsb
push
mov
sub
outsb
sub
aad
in
mov
jecxz
in
jns
adc
push
test
mov
in
cmp
jp
push
lcall
adc
adc
inc
mov
dec
jne
in
fistpll
fwait
mov
mov
popf
sub
cwtl
dec
mov
ljmp
pop
mov
mov
mov
jb
xchg
cmp
mov
std
ljmp
xchg
fmul
shrb
pop
aad
add
ja
adc
push
jns
addl
lcall
out
mov
leave
xchg
jl
pop
call
ret
ja
sub
lock
and
jp
fpatan
xor
jo
mov
push
loope
test
scas
sbb
pop
cmp
jmp
adc
inc
and
cmp
nop
daa
mov
mov
sbbb
divl
xchg
mov
sub
int
clc
adc
jmp
pop
mov
clc
clc
mov
and
pop
bound
mov
jns
shl
mov
jo
sub
mov
xchg
ss
fistpl
mov
stos
cwtl
xchg
push
nop
pop
out
mov
xchg
aam
mov
mov
cmc
dec
shl
aam
add
xchg
dec
cli
jle
mov
outsb
jp
push
push
mov
and
inc
aad
aad
add
call
add
push
lcall
mov
fimull
adc
mov
addl
loop
sahf
sub
or
inc
daa
xchg
sbb
stos
mov
xchg
into
popa
iret
ds
aad
push
push
fidivrl
or
es
jnp
mov
test
xlat
jg
ja
pop
popa
xchg
cltd
jmp
dec
scas
cmp
lahf
int
fstpt
dec
test
xor
or
addl
or
js
and
adc
incl
cmc
mulb
adc
push
jge
call
mov
out
loope
out
or
cmc
outsl
pop
ret
arpl
aaa
roll
aas
mov
in
sub
sahf
call
or
aad
and
mov
mov
cmp
mov
and
stos
stc
in
mov
sti
in
or
lret
cmp
jo
xchg
fiaddl
ss
xor
out
aad
cmc
jno
loop
xchg
dec
push
insb
out
xchg
and
push
cmp
dec
imul
fwait
cmpb
not
mov
xchg
xchg
icebp
xchg
pmaddwd
add
and
xchg
leave
adc
mov
fbstp
movsb
out
loop
push
cmp
and
pop
push
adc
movsb
add
in
out
pop
cmp
ds
leave
scas
stos
pop
out
push
jecxz
push
cmc
jmp
sbb
xchg
popa
mov
rcrl
adc
add
or
mov
xor
push
push
outsl
pusha
test
jg
or
xchg
jmp
add
lea
lcall
push
in
lods
cld
pop
lahf
fimuls
mov
iret
inc
jo
aad
aad
xlat
std
leave
dec
and
xor
inc
dec
xchg
inc
lret
xor
jno
loope
stos
xor
out
clc
add
cmc
rorb
sub
stc
lcall
ljmp
es
test
int3
pop
sub
xchg
dec
and
cmp
aad
xor
xchg
sub
or
adc
sbb
cmc
rcll
inc
fbld
or
cs
bound
jnp
push
test
sub
aad
sub
or
jns
jnp
add
adc
xor
dec
mov
into
int
test
out
adc
sub
pop
or
cld
adc
cwtl
sbb
mov
arpl
ljmp
inc
cmp
imul
lret
rcll
push
cmc
pushf
mov
sti
add
xchg
xor
sub
dec
sbb
shlb
stc
xchg
and
mov
sub
pop
scas
test
gs
push
popf
js
adc
jne
shrl
push
mov
pusha
aad
or
cmp
leave
jmp
cmpsl
mov
cwtl
nop
and
mov
test
mov
lea
icebp
sbb
test
push
dec
or
mov
sti
inc
lods
adc
stos
bound
flds
aas
dec
cmc
enter
dec
je
or
inc
inc
push
sub
roll
xor
cmp
popf
pop
inc
pop
mov
mov
sub
push
rorl
pop
dec
int
pusha
push
outsl
lods
clc
sbb
cld
adc
jl
loopne
jno
cmpsl
sub
cmp
push
push
add
jo
pop
xchg
out
out
stos
jae
jo
stc
sti
or
std
jp
xor
setne
clc
push
mull
pop
or
pop
xchg
mov
lea
lods
movlps
sub
test
jbe
adc
cmc
xchg
into
popf
addr16
stc
icebp
mov
std
adc
mov
mov
adc
xchg
lcall
or
inc
movsl
mov
push
aam
adc
jnp
jae
push
mov
int
push
mov
mov
stos
mov
lods
mov
popa
iret
pop
orb
jns
add
cmp
call
cmp
loop
fwait
imul
je
and
or
cmp
ret
lret
or
ja,pn
ss
std
addl
mov
test
sub
dec
outsb
cmp
fbld
mov
xchg
lods
inc
jb
pop
add
std
pop
add
fimuls
in
xor
mov
into
mov
fistl
test
and
cmpsb
hlt
mov
jmp
xor
push
sbb
push
test
lret
orl
fsubp
test
rorl
and
or
sub
icebp
mul
xchg
push
jge
push
mov
stc
mov
test
fs
je
scas
pop
ljmp
repz
mov
aad
mov
and
sub
addr16
addr16
adc
shrb
rclb
add
aad
fldenv
popf
addr16
mul
les
int
mov
cmp
jne
bnd
dec
push
xchg
and
js
sub
or
add
lods
popa
inc
and
aad
sbb
xchg
daa
popa
fdecstp
cmpsl
js
mov
enter
shlw
mov
mov
sbb
mov
add
aad
push
shrb
xor
xchg
arpl
jnp
out
mov
mov
cmp
push
jmp
inc
pop
outsb
sti
aam
addr16
sar
mov
adcl
lcall
cli
adc
xor
stc
adc
pop
xchg
add
xor
call
ret
dec
xchg
lret
push
call
out
mov
cmp
adc
mov
out
jge
lcall
and
jnp
out
push
testb
daa
cmp
push
cmc
jg
mov
sub
push
cltd
mov
popa
out
rcrl
jnp
mov
dec
inc
test
sub
mov
jnp
mov
roll
aad
and
sub
adc
jmp
lea
mov
out
pushf
push
dec
mov
lret
xchg
jae
cmp
test
mov
test
pop
xchg
mov
loop
mov
xor
int
call
addb
add
xor
in
cli
das
push
jno
xor
cmp
into
or
aad
jle
xor
mov
adc
mov
aad
inc
rcll
pop
cmc
out
loopne
jae
das
stos
xchg
ljmp
call
ljmp
add
cmpl
mov
dec
push
mov
dec
cmc
or
push
xchg
cmova
cmp
xchg
inc
push
sbb
imul
xchg
mov
ljmp
dec
shlb
ret
sub
movsl
cli
aas
jns
ljmp
mov
mov
xchg
cmp
jns
int
inc
ffreep
cmp
cmp
xchg
clc
or
add
cmpsl
cmp
pop
test
push
lods
fsubr
hlt
cmp
or
and
leave
add
pop
inc
mov
shll
js
jmp
mov
cmp
mov
inc
enter
dec
lret
inc
repnz
lret
or
outsl
in
mov
fwait
or
cwtl
es
out
inc
stos
adc
mov
jne
pop
sahf
and
ljmp
add
sbb
dec
in
imul
ret
iret
mov
and
jae
mov
ja
shrl
jno
test
sti
imull
aad
cwtl
stos
test
adc
sbb
clc
xchg
fists
xchg
fs
repz
or
insb
cmc
loopne
xchg
inc
in
cmpsl
cmp
xchg
aad
jbe
loopne
pop
scas
adc
push
outsb
scas
jge
lret
and
mov
jp
aad
or
inc
cs
and
mov
mov
mov
mov
sti
mov
pop
sahf
mov
faddl
xchg
add
orl
mov
push
loopne
les
scas
fdivl
pop
les
in
add
push
aad
std
cwtl
push
jp
das
in
int3
xchg
xchg
lods
or
gs
pop
repnz
push
iret
arpl
pop
push
sbb
mov
mov
scas
jae
repz
js
ja
or
xor
xchg
outsl
xor
jmp
jmp
outsl
or
mov
inc
test
xchg
ret
adc
imul
testl
imul
cwtl
jge
mov
aad
xor
or
cmc
in
jno
das
push
imul
out
jl
xchg
sub
nop
test
dec
mov
mov
fbld
or
repnz
cwtl
mov
adc
dec
outsl
add
rcrl
inc
lods
add
sarb
jb
pop
cmpb
loop
sub
arpl
cmpsl
dec
gs
fstps
pop
test
aad
xor
popa
or
test
les
stos
cld
xorb
jmp
inc
and
incl
sti
mov
imul
int
aad
push
adc
jno
and
inc
incb
or
ds
pop
stos
dec
fwait
lods
stos
xor
out
mov
dec
push
movsb
lret
cmp
xchg
adc
out
sub
and
not
lods
xchg
lods
push
jmp
sub
fs
push
pop
xor
and
and
stos
lcall
cmp
psrlw
outsl
popf
sub
call
push
cs
add
inc
fistl
dec
push
jge
push
lods
jg
and
out
jne
out
call
xor
cmp
pop
dec
sbb
mov
mov
lret
in
in
sub
mov
cmpl
adc
mov
pop
and
imul
scas
pop
mov
xlat
insb
cmp
mov
cs
test
lds
lods
andb
push
es
stos
cmp
xchg
hlt
shlb
xchg
xor
and
sti
mov
aad
jns
lock
imul
repz
bound
call
js
sbb
fistpl
dec
pop
shlb
dec
clc
insb
into
push
mov
sub
adc
in
xchg
arpl
call
push
sub
insb
adc
frstor
sub
lods
jne
dec
and
arpl
fimull
lahf
lods
loope,pn
rsqrtps
mov
pop
imul
aam
dec
test
push
das
jge
adc
mov
xor
sbb
mov
xchg
sbb
aad
xchg
lock
xchg
push
jnp
cvtps2pi
nop
mov
outsl
aad
xor
xor
mov
lods
repnz
scas
add
jp
pop
mov
mov
push
inc
xchg
sub
mov
arpl
imul
rcrl
icebp
sbb
add
cmp
fildl
xchg
pop
jl
loopne
out
mov
aad
testl
mov
aaa
out
sbb
sub
pop
stos
shrb
movsl
mov
mov
inc
push
ficompl
out
pop
loope
lahf
aaa
cmp
hlt
out
jmp
adc
repz
gs
cmc
adc
lret
cmp
lds
clc
jae
push
repnz
arpl
and
adc
mov
jmp
sahf
gs
push
mov
data16
jge
pop
jecxz
add
inc
cld
pop
sarb
cmp
imul
cmp
inc
pop
shlb
cmc
addr16
mov
mov
inc
xchg
and
stos
lods
push
mov
push
or
xlat
mov
push
add
jge
movsb
xchg
cmp
inc
push
fs
jns,pn
pop
ficoms
mov
insl
shrb
ljmp
ficomps
sub
mov
adc
jmp
outsl
fisttpl
mov
pop
negl
push
add
aad
add
test
fiaddl
loopne
dec
pop
add
cltd
sti
pop
test
shlb
xor
mov
div
cli
pop
cmp
fdivs
cwtl
or
cli
aad
or
mov
test
adc
outsl
cmpb
lcall
jp
sbb
push
cld
mov
rcrb
cmp
aad
add
jecxz
test
jge
xchg
xchg
data16
pop
mov
jge
popa
xchg
cmc
mov
imul
pop
lods
and
mov
mov
xchg
jo
fimuls
pusha
pushf
push
imul
push
int
jnp
adc
sbb
ljmp
or
mov
and
outsl
imul
mov
aad
fsubl
lahf
mov
mov
ret
jecxz
pusha
add
ljmp
mov
icebp
lea
push
adc
or
icebp
push
cmp
sahf
fildll
test
stos
fistpl
dec
mov
mov
push
cli
stc
pop
jns
rsm
test
popa
jecxz
pop
inc
lods
lret
nop
jmp
cs
xchg
inc
arpl
ljmp
mov
add
mov
dec
cmpsb
push
jmp
mov
and
std
addl
xchg
mov
inc
fs
dec
bound
int
xchg
and
addr16
mov
fmuls
sbb
add
xchg
addr16
testl
mov
add
jecxz
inc
pushf
stos
cs
mov
mov
adc
ds
dec
or
mov
insl
pop
movsl
xor
arpl
lea
push
xchg
add
jo
sbb
add
jns
mov
mov
sbb
or
jns
not
jb
test
sahf
cmp
pop
mov
dec
xorl
shlw
push
iret
dec
insb
shrb
sbb
and
enter
and
or
pop
lock
dec
jmp
test
mov
add
scas
dec
fistps
fisubrs
mov
scas
jecxz
stc
aad
mov
loopne
imul
sti
test
cmpl
push
in
mov
imul
bound
dec
int
je
pop
lods
xchg
mov
push
adc
out
xor
xchg
loope
es
cmc
fwait
aad
insl
xchg
or
cmc
int
cli
cmp
add
movsb
sbb
add
enter
repz
xor
lahf
dec
aad
mov
loopne
in
incb
insb
out
movsb
sub
mov
test
sbb
into
mov
loopne
and
cmpsl
ja
push
aas
lret
inc
mov
add
scas
out
cpuid
add
cmp
popa
jge
in
sbb
push
dec
inc
inc
mov
out
frstpm(287
lock
pop
xchg
out
mov
scas
push
ljmp
call
mov
std
pop
pusha
ss
clc
mov
pop
idivl
in
mov
aad
repnz
bnd
xchg
mov
jne
mov
push
or
push
inc
inc
push
push
mov
repz
pop
xchg
test
jmp
push
fwait
sub
lods
in
lock
repz
cmp
xchg
mov
lcall
jae
push
loope
adc
add
fcomps
pop
mov
xor
mov
jnp
pop
test
repnz
ret
xchg
dec
or
sub
sbb
fwait
xchg
jl
jge
loope
push
addr16
jp
outsl
jmp
movsb
nop
out
xchg
leave
inc
xchg
pop
les
mov
mov
adc
dec
sub
cli
or
adc
push
in
xchg
dec
or
pusha
xrelease
imul
cmova
dec
sub
mov
jl
aad
rcrb
push
add
fbld
aam
cmovl
iret
ret
rcrb
aad
lret
xchg
mov
mov
decl
mov
jno
sti
adc
fidivl
mov
dec
loope
inc
call
ret
jp
in
jne
leave
dec
and
into
jb
cmpl
jmp
pushf
dec
cld
push
xchg
or
repnz
adc
pop
cmp
test
enter
push
mov
movsl
jge
lods
xchg
les
pusha
lods
adc
sub
and
lods
pushf
or
test
into
xor
or
imul
fisttps
cs
notl
jmp
or
out
std
ret
jnp
xor
mov
mov
sub
js
and
cmc
jg
sbb
fisubl
fsubs
xchg
in
outsl
aad
mov
dec
out
imul
test
and
nop
lods
hlt
inc
xchg
out
popf
pop
lea
add
xchg
cmpsb
pop
cmp
xchg
es
ss
jns
imulb
mov
sbb
dec
scas
ds
or
push
sub
mov
sbb
push
sub
insb
out
xchg
lock
push
or
daa
lret
mov
inc
aam
cmp
jecxz
jb
into
stos
xchg
fs
stos
repnz
call
xor
testb
das
pop
cmp
push
les
dec
adc
iret
scas
pusha
test
mov
iret
and
popf
cltd
pop
pop
pop
adc
push
hlt
jb
lcall
dec
sub
fisttpl
jle
cli
dec
sub
faddl
cmp
fmull
call
cmp
ja
call
or
jge,pt
call
xlat
test
pop
dec
mov
xor
scas
add
pop
mov
adc
push
xchg
vmovhps
adc
and
push
mov
push
pushaw
dec
add
loopne
loopne
sbb
mov
addb
or
pop
vrcpps
sbb
mov
out
outsb
inc
clc
pop
cmp
push
add
pushf
and
xchg
and
mov
shlb
popf
les
movsl
pop
repnz
popf
cwtl
and
lret
stos
mov
decl
push
adc
xchg
dec
cmp
add
mov
aam
mov
sub
cli
mov
test
cmp
ja
out
stos
gs
adc
sbb
or
clc
mov
das
insb
or
sbb
or
push
dec
out
jmp
sbb
push
inc
pop
into
aas
fsubr
sbb
fcmovu
fs
push
test
dec
jnp
hlt
je
aad
pop
out
xor
mov
out
cmp
adc
mov
cmp
mov
and
into
fsubs
lods
push
mov
push
jecxz
jl
stc
lds
and
push
gs
popa
or
test
mov
lret
push
jns
push
xor
mov
add
icebp
mov
in
adcl
mov
imull
inc
call
gs
cli
cmp
and
push
in
mov
mov
xchg
and
jno
or
adc
push
test
lcall
test
movsl
scas
inc
or
int3
les
sub
dec
xlat
cmp
dec
aam
sub
mov
sbb
jb
mov
cwtl
xchg
jmp
insl
or
cmp
xchg
push
adc
imul
sub
test
dec
sti
xlat
gs
dec
xor
and
jae
cmp
addr16
addl
cmc
dec
aam
mov
cmp
or
push
jo
mov
stos
ficompl
cmpsb
cmp
scas
into
fld
call
into
cmc
pop
fstpl
sarl
test
bound
cmp
loop
xchg
jae
dec
dec
cmpsl
nop
xchg
clc
out
mov
ja
inc
aaa
inc
lods
das
lret
jg
outsb
jmp
adc
cmp
repz
jno
xchg
stos
lret
pop
jmp
out
push
lock
les
lods
imul
ret
add
jne
cmc
ret
into
inc
fs
scas
push
decb
cli
mov
std
mov
jne
adc
jge
sub
into
std
daa
sahf
cs
mov
push
sub
dec
gs
fcmovne
mov
out
enter
mov
hlt
pushf
or
fmul
mov
sbb
inc
pushf
mov
mov
xrelease
add
jnp
out
xlat
add
pop
and
mov
lods
inc
cmpsl
ds
orb
and
push
sub
jle
scas
stc
pop
add
cmp
mull
add
into
lret
mov
adc
dec
jge
mov
imul
sub
lds
or
push
inc
mov
push
scas
rorl
pop
jno
loop
sub
or
mov
and
out
jp
pop
out
cmp
das
or
inc
mov
add
lock
cltd
arpl
dec
pusha
mov
roll
add
mov
mov
dec
push
cmc
push
xlat
inc
sub
stos
push
push
out
dec
popa
fisubs
fists
lods
popf
outsl
loope
subl
add
bound
or
xchg
cmp
pop
add
mov
and
ffree
je
adc
test
mov
mov
add
mov
lods
shrb
aad
push
std
out
xchg
push
mov
mov
int
popa
mov
sub
out
adc
subb
or
push
mov
push
adc
sub
cltd
xchg
test
xor
inc
mov
or
cltd
repz
xchg
repz
mov
sub
int3
out
cmp
xchg
pop
cmpl
dec
movsl
push
pushl
mov
pop
mov
fbstp
aaa
mov
lock
pusha
imul
cmp
dec
xor
mov
dec
inc
addl
sub
scas
cmc
sub
insb
gs
pushf
sbb
push
inc
cltd
xlat
cmp
outsb
mov
pop
cwtl
mov
stc
jne
mov
adc
inc
dec
pusha
aad
add
mov
mov
xor
push
stos
xor
test
ja
imulb
outsl
scas
xchg
rcrb
fistpll
inc
insb
sbb
push
and
ds
jp
aam
xchg
lea
testl
ret
xor
nop
out
call
stos
nop
mov
sti
mov
or
and
xchg
cmp
dec
adc
mov
aad
or
test
mov
xchg
add
das
in
int3
push
aad
add
or
repz
jl
xlat
testb
adc
test
push
inc
push
in
jno
sub
mov
movsl
sbb
es
int
adc
mov
mov
jb
sti
aad
adc
test
fnstsw
lods
rorl
sub
jne
loope
jbe
scas
cli
sti
orl
cs
xchg
jl
jno
cmp
pop
arpl
inc
adc
sub
xchg
lock
cmp
inc
adc
in
fcoml
push
aad
mov
and
dec
or
das
iret
push
mov
jge
cli
jnp
add
sub
push
xchg
pop
pusha
addr16
jmp
mov
out
mov
out
cmc
dec
ja
mov
stos
pop
jmp
gs
xor
imul
push
xlat
pushf
outsb
jp
fisubs
jl
cltd
mov
cs
ficoms
jmp
adcl
push
mov
cld
sub
mov
scas
dec
rcll
cwtl
out
fstl
mov
int
icebp
je
pop
jnp
imul
pop
mov
xchg
scas
shlb
pusha
pushf
jne
js
xchg
hlt
stos
cld
jns
rclb
cmpsb
pop
flds
leave
je
test
jmp
outsl
push
popa
jg
repz
push
stc
loop
aam
add
mov
dec
sub
out
ret
jbe
adc
cmpsl
out
xchg
testl
mov
push
sti
int
adc
cmp
mov
xlat
repz
jnp
inc
fwait
xor
sub
fdivr
outsl
lahf
inc
mov
repnz
mov
pmaddwd
mov
aad
imul
sti
mov
lods
dec
cmc
outsl
cmp
mov
xchg
lret
push
outsl
aad
into
sub
scas
add
mov
int
xchg
ja
lcall
in
mov
pop
gs
pop
lds
dec
int
adc
rcl
push
and
xchg
mov
mov
push
test
jbe
ret
pop
scas
outsb
push
stc
sub
in
dec
jge
negl
addl
fisttps
rclb
xor
rcl
imul
arpl
pusha
adc
jg
aad
adc
scas
push
aad
outsb
scas
call
iret
add
xchg
sbb
inc
in
sahf
mov
call
or
adc
lret
test
fisttps
and
call
adc
jns
pop
cmc
into
xchg
int3
inc
adc
fldcw
daa
es
jne
dec
mov
push
adc
mov
push
dec
ret
adc
jmp
xchg
add
faddl
adc
out
add
dec
sarl
scas
push
negb
popa
aad
filds
mov
sub
dec
jnp
cmpsl
ret
shlb
push
jae
sbb
pop
cltd
inc
xor
add
or
pop
xor
pop
pop
push
mov
and
add
repnz
mov
add
pop
pop
mov
jmp
or
mov
xor
test
xor
mov
in
push
movhlps
fdiv
push
test
push
mov
nopl
dec
sti
fisubrs
inc
fwait
imul
sbbb
movups
imulb
aad
sub
jnp
or
out
out
xchg
mov
xor
push
sub
jp
mov
jnp
mov
ja
sub
mov
clc
dec
mov
jecxz
jb
lock
cmp
push
sbb
in
and
hlt
jmp
mov
sbb
arpl
sbb
scas
outsb
iret
sub
movsbl
xor
or
adc
xchg
push
scas
or
mov
sub
xchg
xchg
mov
adc
fcomp
jne
and
sbb
icebp
scas
sub
into
cmp
mov
push
and
ljmp
xchg
int
adc
shrb
or
jne
les
add
stos
call
push
xchg
into
jl
sbb
cs
push
sub
lods
add
sub
sub
mov
cli
testb
movsb
cmp
clc
sbb
loope
nop
adc
stc
sbb
rclb
fimuls
and
and
rcrl
arpl
sbb
mov
pop
leave
push
xchg
dec
mov
add
add
pop
mov
xor
mov
jg
out
sub
mov
nop
test
cmp
push
notl
into
pusha
daa
push
aas
movsb
pop
or
add
jmp
cmc
jnp
mov
and
cltd
xchg
add
jl
cmc
mov
cmp
xlat
dec
fidivs
dec
xchg
stc
push
xor
mov
mov
ds
sbb
mov
mov
jp
jne
lcall
jno
repz
push
cltd
fstpt
and
leave
mov
cmp
jge
popf
xor
sub
adcl
xchg
xlat
ret
xor
lds
xchg
dec
or
ret
cmpsl
cmp
sbb
cmp
jnp
leave
xchg
push
push
vmwrite
in
pop
push
mov
ds
mov
adc
imul
scas
std
stos
and
mov
addl
sti
adc
shll
fnstenv
outsb
dec
mov
testl
mov
es
cmp
push
stos
dec
add
les
mov
ror
mov
pop
mov
les
pop
cmp
sub
pushf
sub
hlt
aad
cmp
int
pop
jno
pop
lds
in
mov
push
jmp
paddd
push
cmp
mov
popa
out
or
cmc
ret
inc
push
bnd
lods
or
aad
out
lods
and
neg
sbb
test
aad
xor
jnp
fs
les
push
sti
lods
xchg
int3
jne
jns
cwtl
outsb
push
adc
lea
cmp
push
inc
lock
and
imul
cmc
or
push
imul
xlat
xchg
push
mov
jmp
mov
int
cmp
mov
mov
sbb
jmp
lods
mov
jbe
arpl
sti
pop
fs
push
test
call
or
arpl
scas
add
je
pop
inc
xchg
adc
pop
jns
xchg
shll
xlat
lds
int
test
cltd
sbb
adcl
das
mov
jge
mov
mov
stos
pushf
xchg
lcall
xchg
stos
int
push
insl
mov
in
add
cmc
enter
mov
push
loop
fwait
mov
in
sbb
mulb
stos
or
bswap
aad
icebp
and
xor
cmp
pop
mov
in
and
inc
xchg
push
daa
lods
pxor
cmc
push
popa
lods
or
sbb
lahf
pop
and
fstps
add
jae
shrb
fsts
int
sub
scas
std
xchg
cmpsb
mov
or
jb
add
mov
dec
lods
mov
aad
xchg
push
xor
int
pop
mov
ss
lahf
pop
mov
mov
xor
pusha
mov
sahf
or
aad
shrl
out
icebp
jp
add
out
push
stos
loope
arpl
inc
outsl
mov
jmp
jmp
stos
lock
jns
sub
repz
fwait
inc
and
xor
cmp
into
sti
dec
dec
outsb
jbe
popa
scas
popf
in
pop
aad
xchg
cmp
jmp
push
lods
loope
iret
xchg
adc
and
jg
push
jae
hlt
lret
jne
add
jmp
xor
jbe
dec
dec
cmc
aam
scas
dec
lods
lods
std
lret
adc
xchg
sub
in
push
fnstsw
and
xchg
iret
add
in
das
stos
out
xor
nop
push
cld
xchg
sti
pusha
mov
shr
in
pop
cmp
movsl
popf
jae
movsl
jl
add
dec
scas
sub
movsl
fistpl
addr16
dec
in
das
not
xlat
cs
add
clc
pusha
inc
inc
sarl
xor
pop
out
pop
mov
cli
mov
shll
sub
push
inc
movsl
ud2
jnp
cs
lods
pop
fstpl
xchg
xchg
add
lods
cmp
cs
ficoml
loop
inc
stc
cmovo
add
fnsave
dec
mov
loope
jnp
bound
hlt
das
dec
jo
xchg
add
cmp
cmp
loope
and
jg
rep
adc
test
mov
sbb
gs
jne
cmp
pop
test
addr16
scas
js
fs
mov
hlt
cmp
mov
jg
lods
cli
adc
sti
or
out
std
or
pop
xchg
stc
push
mov
repz
jo
leave
sbb
mov
pop
push
fisttpll
cmc
dec
out
adc
sub
outsl
push
mov
jae
call
into
test
xor
fisubs
test
xor
pop
pop
jae
dec
cmc
mov
outsl
pop
sbb
into
sub
idivl
inc
cmp
pop
es
cld
mov
sub
sub
sub
add
push
xchg
jle
stos
jmp
fisttps
aad
jne
sub
gs
add
sub
xchg
mov
sbb
rcrb
cmp
mov
push
adc
cmp
and
lods
push
xchg
aad
mov
add
mov
lods
pushf
adc
je
stos
fwait
jecxz
xchg
inc
call
aad
div
mov
out
sti
sub
cmp
nop
or
into
cmc
fdiv
pop
jmp
not
push
jmp
cmc
push
mov
lret
shll
push
mov
adc
rcll
adc
push
xchg
inc
pop
adc
enter
push
mov
push
sub
push
push
sbb
and
add
adc
dec
xchg
outsl
outsl
stc
pop
cmp
repz
decl
mov
dec
test
xchg
pop
mov
filds
cmc
pop
rcrw
jmp
lret
inc
jmp
aad
inc
mov
dec
jp
dec
cs
iret
daa
fcmovnbe
inc
in
enter
scas
mov
jp
sti
lcall
ficompl
idiv
int
aad
movsl
mov
fisubs
aas
fwait
test
sub
xor
test
stc
sbb
mov
xchg
bound
cwtl
mov
clc
setp
cltd
xor
add
ljmp
jo
dec
jbe
jle
int
xor
xor
add
xchg
adc
in
in
bound
ss
add
mov
mov
idivl
add
sub
push
imul
nop
das
outsb
pop
sub
fsubs
iret
into
popf
push
dec
test
lock
int
push
dec
call
in
xor
add
pop
mov
sahf
pop
aad
shlb
les
js
pop
jbe
push
jle
ds
jge
push
jecxz
rorl
xchg
imul
dec
fst
xor
fwait
jg
lods
imull
loop
hlt
xchg
rclb
pop
adc
out
cmc
xchg
lahf
fnstenv
mov
jnp
imul
mov
movb
and
sub
int
mov
rolb
xsha1
cmpsb
leave
aad
jecxz
cmp
xchg
movsb
test
and
mov
loope
test
inc
out
add
cmp
jecxz
aad
jge
sbb
out
ja
mov
shlb
cmpsl
mov
pop
mov
test
sbb
out
or
rcll
pop
pop
int
pop
mov
out
mov
pop
xchg
mov
mov
xor
adc
mov
inc
jge
ljmp
pop
mov
flds
test
or
xor
sub
add
insl
cmp
pop
or
and
adc
stos
push
int3
or
gs
out
and
popl
sahf
xchg
pop
loopne
pop
loope
dec
mov
mov
jb
movsb
lcall
jbe
popl
cmp
aas
cmp
push
push
int
xchg
outsl
cwtl
jl
and
and
mov
or
push
aam
jbe
sub
add
scas
add
int
and
xchg
inc
repz
iret
sub
mov
mov
andl
jmp
scas
adc
jne
fnstenv
push
xchg
jae
mov
cmovl
mov
fwait
pusha
cli
stc
add
mov
push
xchg
sti
cmc
sbbl
lea
mov
mov
stc
scas
xchg
mov
or
pop
popa
cmp
mov
mov
iret
stc
pusha
dec
or
xor
cmc
mov
xlat
mov
push
leave
insl
adc
pop
mov
add
jecxz
movsb
stos
cmp
inc
add
adc
cmovge
stos
or
out
dec
popl
std
xor
mov
jge
cs
mov
imul
or
or
jbe
test
cmp
push
popl
push
mov
lret
addr16
testl
push
xor
pop
nop
sub
mov
nop
mov
arpl
scas
arpl
sahf
jle
rcl
das
push
pusha
sarb
sub
leave
xchg
in
inc
cli
rcrl
xchg
inc
ja
cmp
adc
clc
mov
lock
pop
test
repnz
mov
rclb
mov
pusha
pop
insl
mov
cmpsl
iret
notl
xchg
mov
jecxz
aad
jp
fildll
mov
movl
scas
xchg
or
push
lods
add
pop
int
jg
imull
sub
repz
push
jmp
sar
sub
adc
or
loop
push
pop
shrb
sbb
cmc
mov
scas
mov
movsb
fs
and
dec
movsb
add
adc
mov
scas
xchg
cld
and
and
mov
aaa
fcoms
aad
inc
cli
cmovbe
pop
ret
jmp
or
lods
shrb
cmp
xor
pop
xor
fcomp
adc
hlt
jmp
negl
jb
xlat
imul
fldenv
popa
aad
cltd
popa
mov
addl
push
xchg
lret
pop
nop
or
mov
add
cmp
pushl
out
mov
sub
dec
pop
nop
test
mov
or
dec
aad
push
sbb
push
jns
adc
in
aam
sub
mov
cli
push
inc
jl
imul
jg
mov
imul
cld
push
and
mov
jl
pop
scas
es
xchg
push
xchg
push
stc
push
movd
scas
push
add
sbb
inc
divl
push
rcrb
jo
add
ljmp
int
xchg
cs
adc
inc
mov
dec
cltd
jle
fstl
xor
inc
cli
lcall
andb
or
jp
xlat
jg
icebp
mov
mov
cmp
xchg
ret
jne
fnstcw
jmp
jns
aad
mov
pop
jp
les
arpl
rcl
sbb
in
lock
cmp
cmc
cmp
jne
jmp
mov
mov
imul
xor
ret
loopne
xor
jge
rorb
push
mov
repz
mov
lds
mov
jecxz
or
aaa
pop
xrelease
out
faddp
mov
push
push
jns
push
cvtps2pd
adc
mov
push
cmp
mov
cmp
imul
push
pop
mulb
filds
jno
cmp
mov
mov
mov
add
cltd
push
inc
push
hlt
int
bswap
test
mov
xor
pop
push
or
xchg
aaa
pop
data16
ret
xchg
hlt
imul
filds
daa
in
or
mov
adc
jge
ljmp
aad
stos
xchg
sub
lret
std
insb
mov
xor
ss
dec
xor
mov
inc
inc
lcall
push
fwait
daa
int
mov
movsl
inc
xchg
rclb
stos
lds
popa
nop
scas
mov
adc
jg
push
or
mov
int3
adc
out
mov
sti
test
ljmp
pop
mov
xchg
rcrl
xchg
scas
nop
call
add
xchg
add
fwait
shll
mov
push
movsb
jbe
sub
xor
addr16
gs
int
cmp
pop
cli
push
jp
and
jl
into
add
aaa
imul
incl
iret
mov
arpl
dec
cltd
test
pop
fcomps
or
idiv
adc
pushf
and
aaa
or
adc
mov
dec
or
dec
out
adc
mov
push
test
int
xchg
sbb
movaps
ret
popa
cmp
fmuls
cltd
or
popa
sti
addr16
in
cmp
mov
jp
cmpsb
sbb
xchg
adc
or
jae
imul
inc
repnz
mov
ljmp
mov
cmp
ss
les
scas
fidivrl
xchg
xor
outsl
movsl
fmulp
xchg
jo
or
out
mov
sub
jge
add
in
jnp
fcoml
daa
loop
out
aad
mov
jns
or
lods
push
cli
sub
ret
push
push
fimuls
pusha
in
mov
xor
mov
imul
pop
dec
xchg
icebp
and
cmp
push
les
jo
mov
pop
mov
cwtl
mov
mov
fcompl
jnp
adc
and
scas
bound
out
aad
push
in
fidivrl
jl
stos
and
lds
push
orl
pop
cltd
jmp
pusha
adc
aad
xchg
xchg
ljmp
ss
mov
push
adcl
pop
iret
or
dec
xchg
int
pop
mov
jo
jno
cmp
cli
cmp
pop
mov
xor
out
std
inc
xor
pushf
sti
adc
xchg
jmp
aad
shll
adc
mov
popl
push
cmp
mov
mov
pusha
push
mov
clc
cmp
jl
insl
mov
cld
xchg
fsubl
inc
sub
js
xor
xor
inc
into
aad
jge
lahf
fldenv
xchg
mov
sub
mov
or
xchg
adc
ret
out
jg
cwtl
jae
punpcklwd
xchg
loop
and
dec
int
imul
cmc
fbld
cmp
sar
sbb
sub
stc
push
into
pop
aas
push
in
inc
mov
lcall
mov
and
adc
mov
movsl
add
pop
xchg
aad
das
fisttpl
xchg
sahf
aad
mov
or
nop
push
out
lock
stos
cs
pop
cs
inc
sarl
pushf
fnsave
or
push
add
shll
mov
push
cmp
add
leave
dec
aad
out
sti
pop
in
notl
div
fst
cmp
sbb
fiadds
or
movsb
mov
mov
cmc
lock
cli
mull
lods
pop
push
pop
and
push
gs
js
cli
js
lahf
sub
lret
mov
jp
lea
mov
out
fs
test
push
arpl
scas
sarb
sti
out
cmp
test
xlat
lods
push
and
xchg
pop
nop
pop
out
cmp
xchg
repz
fucom
fbld
cmp
add
add
adcb
jl
fnstcw
loopne
jl
iret
movsl
or
mov
fwait
inc
rorb
pop
insb
lcall
aam
sbb
jo
testl
sub
out
or
or
or
jmp
push
aad
scas
xchg
push
ja
or
jl
jne
shll
sbb
push
fidivrl
push
xor
loope
mov
cwtl
pop
cmp
mov
push
sub
sub
mov
xor
inc
jo
mov
in
inc
idivl
or
jmp
mov
sbb
sub
push
in
mov
mov
pusha
pop
loope
mov
xchg
es
clc
cmp
out
push
dec
das
lcall
mov
popa
lods
adc
and
call
cmpsb
es
mov
into
inc
cmp
pop
stc
ljmp
aam
lahf
add
daa
and
dec
jb
dec
add
popa
les
insl
dec
or
add
and
push
sti
jbe
test
stc
fsubs
les
xor
int
fcom
clc
out
insb
mov
scas
push
repnz
sbb
and
mov
inc
push
ja
mov
sub
push
shll
in
sarl
push
xor
lock
shrb
aam
es
xchg
test
rclb
pop
mov
mov
or
leave
stos
pop
test
xorps
jle
add
pusha
leave
xchg
notb
cmp
roll
lret
cs
loopne
jmp
inc
leave
mov
nop
dec
mov
daa
scas
pop
cmc
inc
aas
sub
xor
mov
pusha
in
dec
dec
adc
cmp
mov
roll
jmp
mov
xchg
int3
sbb
pop
jg
mov
ret
testb
in
pop
xchg
popl
dec
sbb
iret
out
gs
popf
adc
mov
jae
imul
outsb
mov
sbb
ljmp
push
or
call
mov
icebp
jl
or
add
int
mov
dec
sub
pop
add
stos
sub
shrb
out
pop
push
scas
rcrb
movsb
add
xchg
mov
jmp
insb
inc
cmc
loopne
push
or
ljmp
lods
in
cmp
mov
loop
pop
mov
mov
scas
xchg
leave
mov
iret
dec
js
sbb
sahf
icebp
rcrl
mov
push
adc
movl
xor
xor
scas
and
sub
sub
mull
mov
cmp
jbe
dec
xchg
mov
sub
sub
rclb
pop
pop
dec
inc
mov
inc
insb
mov
fsubrl
push
lret
icebp
sbb
movsl
sbb
jns
jp
mov
dec
or
mov
and
sub
and
repz
mov
xor
das
stc
int3
dec
lods
outsl
jl
fistps
stc
loope
repz
or
mov
lret
test
mov
push
rorb
fmuls
lods
lock
cwtl
pusha
dec
xchg
xor
and
inc
das
xchg
mov
push
dec
mov
notb
movsb
cmp
cmc
call
out
insb
mov
cmp
aad
xor
cmc
int
les
lds
pop
lods
mov
mull
aaa
cmp
push
xor
test
ret
pushf
mov
stc
iret
adc
aad
and
faddl
imull
jg
push
scas
in
cli
dec
or
sahf
sti
mov
lods
push
outsl
cs
sub
lods
sub
dec
dec
aam
xor
or
sub
into
mov
mov
lahf
shrl
or
xchg
add
sub
cmc
loop
jo
mull
mov
sub
cmp
inc
dec
mov
rorl
mov
push
popa
cmc
iret
push
xchg
sub
or
jge
in
push
inc
data16
jmp
out
fnsave
mov
scas
dec
pop
xchg
jmp
cld
jmp
and
xor
push
mov
jae
jecxz
fwait
dec
mov
fnsave
push
pushl
dec
ss
into
mov
push
rorl
fnstcw
std
jb
jnp
int3
mov
push
mov
stos
mov
pop
push
hlt
cwtl
add
ljmp
faddl
into
sbb
push
es
cmc
iret
iret
mov
push
aad
xchg
inc
dec
pop
call
mov
sub
add
outsl
lock
cmp
push
or
mov
inc
gs
or
adc
jp
mov
xchg
inc
jg
mov
arpl
adc
lcall
or
add
jmp
movsl
sbb
and
jmp
aad
cmp
outsl
sub
js
popl
clc
aas
fwait
push
adc
rclb
or
and
jmp
xchg
lcall
cmp
push
sbb
xlat
cmc
test
xor
ret
mov
dec
aaa
aad
stos
fdivl
jbe
out
gs
sbb
test
mov
and
es
xlat
js
cltd
in
movsl
adc
insl
pop
push
or
cmp
xor
fsubrl
outsl
mov
lahf
cmp
fs
cli
sbb
outsl
into
aad
data16
add
pusha
mov
lcall
nop
idiv
outsb
cmp
loopne
sbb
jo
mov
mov
int
call
loop
xchg
mov
lock
push
mov
lds
dec
adc
cmp
enter
or
leave
jae
movb
xchg
les
mov
pop
push
cmc
xor
inc
adcl
dec
jns
fstpt
dec
out
test
add
jns
xchg
stos
push
and
cwtl
lret
aad
shl
dec
in
push
fnstenv
out
add
sub
stos
sub
jg
nop
je
outsl
ret
ljmp
aad
xchg
push
lods
mov
bnd
repz
loope
aam
xor
push
popa
push
fdivs
push
cmp
ja
or
push
jmp
fiadds
sub
int3
adc
andb
sbb
stc
outsl
xchg
pop
loopne
loop
lods
push
rolb
std
and
push
xchg
add
aas
inc
imul
sbb
dec
add
data16
mov
mov
push
jg
push
ja
dec
inc
stos
lock
and
popa
jns
jle
inc
mov
jne
fisubrs
insb
fwait
stos
inc
fimuls
cmc
jp
xchg
stos
mov
push
pop
je
mov
pusha
push
and
mov
jmp
mov
push
jmp
push
je
fs
sub
loopne
outsl
ss
mov
adc
test
cmc
int
inc
lahf
pop
jb
jnp
fnsave
mov
pop
les
mov
or
mov
cwtl
pop
testl
cmc
adc
jp
pop
jmp
xor
in
cld
mov
pop
mov
sub
jns
arpl
lods
adc
les
mov
imul
or
pop
dec
xchg
cmpb
test
jmp
sub
mov
out
inc
dec
dec
mov
nop
sub
jl
mov
jo
add
push
push
shr
int
ss
mov
pop
jecxz
cmp
fdivs
mov
dec
out
cmp
in
sub
mov
stos
daa
mov
loop
rcrb
lods
not
xor
xlat
mov
repnz
push
mov
pop
push
mov
sub
mov
sbb
jecxz
iret
or
push
aad
fcoml
push
cwtl
or
mov
cltd
mov
int
sbb
cmc
lret
stos
mov
pusha
or
mov
adc
out
jb
lds
repz
dec
xor
inc
mov
jne
popf
into
loopne
jo
pop
shll
cmp
ret
push
sub
cmpsb
daa
inc
mov
stos
pop
cmc
int
mov
test
jo
sub
scas
mov
nop
fimuls
scas
pop
rcll
int
mov
push
add
ss
xchg
nop
xor
mov
int
mov
fidivs
les
in
es
js
loopne
fiaddl
mov
out
and
xchg
call
and
xlat
out
aad
pop
je
xchg
outsl
scas
xchg
pop
xor
mov
mov
out
in
dec
addr16
jg
push
std
xchg
mov
test
aad
test
mov
sti
std
push
fisttpll
pop
cli
jnp
jbe
loopne
addr16
cmp
cltd
xor
adc
mov
ljmp
or
ds
or
clflush
mov
cmp
int
mov
or
out
xchg
jns
push
xchg
lret
imul
sub
int
push
push
negb
dec
out
jge
dec
cmp
xchg
lods
insl
push
orb
mul
push
jg,pn
scas
or
adc
mov
dec
mov
jbe
aad
imul
or
adc
es
fidivrl
fistl
and
xchg
mov
js
mov
jmp
push
hlt
or
fwait
adc
adc
mov
popf
sbb
outsl
and
xor
push
sarb
scas
xchg
sbb
insl
into
mov
cmp
adc
testb
mov
jbe
and
fmuls
out
xor
inc
or
push
jp
pop
loope
jo
divb
imul
fidivrl
sbb
adc
fs
jmp
pushf
jmp
fs
movsl
fs
jmp
add
ret
aad
imul
in
cli
sarb
scas
hlt
mov
or
and
jecxz
scas
ret
xchg
fst
aam
and
stc
ret
sbb
xor
scas
test
sub
push
stos
jns
iret
fadds
or
idivl
outsl
int
cwtl
or
popa
int3
push
ds
inc
jg
sbbl
sbb
sbb
lret
fldl
xchg
cmc
cli
repnz
imulb
xor
push
and
sub
popa
mov
repnz
int
cmp
into
aad
mov
or
aam
cmp
ficoml
imulb
sbb
scas
popa
adc
push
in
inc
in
or
xchg
stos
and
xor
add
push
mov
jns
fldcw
sub
ljmp
jo
or
lods
mov
out
cmp
lret
cmp
and
or
in
out
mov
push
cmp
cwtl
outsl
inc
or
push
mov
cmpsl
adcl
jmp
push
lds
xchg
push
push
movsl
dec
add
mov
stos
test
sub
into
cmp
iret
stc
popa
ja
call
movl
push
aad
hlt
mov
or
mov
or
push
aad
lret
cmp
dec
ja
mov
pop
dec
and
pop
jg
cmp
sub
stos
aad
test
mov
fsts
adc
push
das
jns
add
jae
mov
rcrb
popa
jne
pop
loope
pmulhuw
or
or
out
add
imul
cmc
dec
sub
dec
jle
mov
dec
fwait
pop
push
lock
mov
je
or
pop
mov
dec
je
or
std
sbb
dec
mov
jb
sbb
sbb
mov
mov
cmpsl
add
ja
clc
and
mov
out
dec
or
or
js
mov
add
ret
xchg
pop
jl
lds
testb
adc
cs
xchg
or
mov
jno
mov
mov
lods
pushf
lret
pop
popl
push
pop
dec
stos
cwtl
or
addr16
and
int
xchg
sbb
fucomip
aad
out
fs
inc
scas
xchg
test
push
pop
xor
cs
pop
xlat
movsb
sub
or
sbb
cld
mov
lret
cmp
jb
sbb
iret
xchg
jae
jne
loope
out
sbb
fsts
xchg
sbbb
pusha
addr16
sahf
fs
mov
test
mov
pop
arpl
push
add
fimull
sti
push
cmc
dec
mov
stos
sub
popf
xchg
or
das
inc
or
sbb
scas
and
mov
inc
in
mov
push
aam
cld
fcomps
outsl
int
pushf
mov
fnstsw
test
mov
pop
scas
stos
insb
pop
mov
pop
daa
das
loop
sbb
pop
push
fcomps
insl
mov
pop
jmp
xor
mov
popa
jns
cmp
xchg
inc
mov
cli
adc
xchg
in
dec
sbb
sub
out
nop
xor
lds
jne
lahf
dec
pop
jno
mov
inc
jg
dec
es
ret
cmc
jnp
jecxz,pt
inc
xor
jge
popa
pop
hlt
inc
decb
lock
cli
cmc
dec
lds
ret
mov
or
mov
push
test
jns
fstl
mov
addr16
test
xchg
pop
sub
bound
inc
js
cmp
xor
pop
push
lcall
std
nop
dec
stos
and
jge
shlb
aas
xchg
negl
repz
out
sbb
and
ficoms
xor
cld
and
add
clc
adc
test
nop
jno
and
pop
movsb
push
addr16
nop
cmpsb
fcomps
xchg
jo
push
test
xchg
sbb
or
fcompl
add
test
sub
clc
scas
bnd
push
or
jmp
lods
jecxz
mov
outsb
jbe
jo
mov
push
pusha
mov
mov
dec
out
sbb
inc
into
dec
aad
push
js
inc
xor
dec
sti
pop
sti
hlt
xchg
sahf
xchg
sbb
test
mov
call
pop
test
push
mov
addr16
mov
lar
inc
lods
popa
stos
push
inc
test
inc
out
cs
mov
aad
cmp
inc
or
pushf
push
lcall
mov
clc
mov
out
ss
xor
out
jge
mov
fs
rorb
mov
mov
sbb
scas
sub
idiv
xchg
push
cwtl
push
push
and
xchg
adc
mov
inc
push
clc
mov
push
mov
and
orl
mov
test
sbb
dec
cmp
inc
fstps
xchg
push
xor
scas
cmpl
aad
mov
jno
or
aad
test
cmp
stos
cmp
add
pop
xor
or
pop
dec
sub
pop
mov
addr16
hlt
fdivl
pop
movb
fstl
out
int3
aas
cmp
into
scas
fsubrl
mov
fildll
or
lods
out
test
arpl
mov
jns
shl
sahf
call
sub
shr
fstpl
mov
xor
pop
pop
xchg
popa
mov
fimull
loopne
scas
cli
aad
jno
popa
negl
cmc
sbb
mov
roll
and
push
cmpb
aad
lret
ljmp
in
setp
movsb
clc
outsb
cmp
bound
into
cmc
jmp
shr
fsubp
mov
push
adc
sbb
mov
pop
jae
add
testl
or
xchg
and
insl
sbb
js
push
lcall
outsl
mov
and
enter
pop
outsl
adc
pusha
adc
mov
arpl
imul
adc
or
push
push
sbb
jmp
dec
jp
arpl
dec
ljmp
out
ljmp
int3
test
adc
xchg
add
dec
cs
inc
arpl
adc
es
cmp
out
jbe
out
sub
imul
idivb
xchg
stc
push
scas
andl
fidivl
cmp
in
or
jnp
mov
mov
pop
in
sbb
mov
mov
sbb
aaa
mov
xchg
cmp
xorl
add
or
adc
mov
mov
xor
mov
pop
test
dec
jns
fs
pop
flds
ret
mov
stos
and
loopne
arpl
adc
or
sub
outsl
js
jle
decl
xchg
pop
cmp
loope
lahf
sbb
lods
mov
fadds
repz
pop
push
mov
sbb
shlb
lret
pop
das
fs
cwtl
test
aad
and
xor
add
imul
inc
std
sub
pop
fldenv
xchg
mov
inc
push
sti
inc
lea
pop
ja
lret
popa
lret
ret
call
movb
jbe
pop
das
fimuls
and
and
scas
roll
jbe
ds
test
and
adc
aad
or
sub
insl
dec
xor
cmpsb
lret
sarb
mov
xchg
lcall
addb
cmc
popf
ret
cmpsl
or
push
jmp
jecxz
clc
or
popf
xchg
dec
pop
nop
or
call
sbb
mov
push
sbb
add
and
cmp
mov
cmp
aad
in
mov
lods
mov
nop
ljmp
cmp
aad
cmp
cmpsb
xchg
aad
mov
lock
or
addb
lea
push
lahf
sub
inc
in
ljmp
and
filds
mov
js
mov
les
ja
xchg
and
cmp
jnp
dec
popf
or
scas
jno
mov
add
sbb
sub
testl
or
mov
test
aad
jp
dec
sub
dec
cmp
sbb
cmp
incb
sarl
inc
movsl
into
shlb
vpmaxub
mov
xlat
xor
lret
sti
fdiv
xlat
inc
inc
sbb
andb
mov
inc
jl
cwtl
aad
enter
cmp
mov
aad
xor
iret
cmp
loope
insl
jp
ja
out
ret
mov
or
adcl
push
stc
loope
inc
cmp
sbb
jae
in
inc
fiaddl
mov
and
pop
aad
mov
imul
push
xchg
sbb
rcr
shrb
imul
mov
pshufw
cli
pop
sub
mov
call
or
push
cmpl
lea
push
push
pop
fidivrs
lahf
sahf
mov
adc
inc
repz
sbb
mov
fisttps
xchg
loop
incl
cmp
and
jp
xor
fstpl
jo
mov
dec
jne
dec
sbb
pop
dec
dec
sti
fcompl
fiadds
xchg
add
insl
mov
xchg
cmp
fcom
cmp
xchg
mov
or
stos
adc
and
scas
in
int
lock
cmpsb
stc
mov
cs
shrl
pusha
pop
and
cmpsl
inc
jo
or
gs
add
push
cli
mov
sub
popf
or
xchg
xchg
out
jbe
push
or
mov
cwtl
les
mov
outsl
push
es
jb
dec
icebp
mov
mov
jno
in
outsb
cmpb
arpl
aad
repnz
add
outsl
pop
xchg
and
dec
sub
mov
jbe
pop
mov
out
pop
mov
lret
rcrb
or
mov
pop
movsl
fcomps
popa
adc
punpckhwd
adc
int3
lea
cmp
adc
inc
mov
push
and
sbb
loope
dec
movsb
add
sar
and
cmpsb
addr16
shlb
das
shll
cmp
addr16
adc
repz
shr
mov
in
add
xchg
test
adc
pop
stos
and
lods
mov
les
ljmp
sub
xor
fstpl
dec
adc
jle
jmp
adc
cmp
movsb
dec
test
mov
sbb
mov
push
push
sti
adc
xchg
cmp
add
leave
pop
or
cmc
xor
mov
aam
and
mov
clc
xlat
aam
stc
cmp
dec
aad
add
stos
mov
out
cld
ret
movsl
pusha
lahf
dec
mov
mov
push
cmp
out
xor
imul
dec
movsb
pop
pop
jge
mov
jp
jo
mov
mov
jne
mov
pop
mov
or
andb
xchg
test
clc
icebp
lock
adc
ds
movsb
mov
mov
push
jmp
lods
push
out
into
cmc
sub
jl
and
aaa
mov
jge
mov
sub
out
sbb
cmpl
sbb
pushf
shrd
inc
add
sub
ja
add
or
sub
sahf
push
dec
jg
stc
addr16
add
cmp
mov
stos
cltd
jge
ror
out
imul
loop
dec
or
inc
xor
xor
adc
scas
int
aam
xchg
stos
icebp
inc
inc
jo
mov
fdivrl
push
and
add
xchg
or
inc
test
mov
and
cmp
add
sbb
dec
test
dec
imul
filds
stos
add
pop
test
ja
testl
inc
je
or
push
push
jmp
push
sbb
push
mull
andb
push
fisttps
mov
xchg
jle
sub
scas
repz
cmp
std
xor
fucom
inc
aad
mov
mov
inc
mov
sbb
and
adc
push
or
ljmp
cmp
outsl
movsb
gs
xchg
push
imul
mov
cltd
mov
dec
xchg
mov
jmp
into
mov
push
mov
enter
adcb
andl
sub
jp
fildl
nop
push
and
fdivl
in
in
cmpl
mov
rep
mov
mov
insl
cmp
nop
mov
lret
cmp
or
movsb
movsb
fidivrl
push
das
stc
cmp
fdivrs
pushf
mov
repnz
rclb
xor
sub
and
add
lahf
idiv
mov
mov
fs
jp
jp
aam
xchg
cmc
imul
in
lods
add
cmp
mov
cmc
in
out
sub
lret
in
or
inc
push
pop
mov
icebp
aad
aad
jo
mov
add
das
orb
int
jg
fcmovnbe
fistps
or
cli
adc
xor
lods
add
mov
stc
loope
pop
sti
cmp
or
mov
pop
lcall
iret
push
push
xchg
push
dec
lock
cmp
xlat
lcall
sub
sbb
pslld
add
stc
jmp
ja
xchg
pop
sti
imul
cmp
mov
faddp
jl
negl
pop
pop
dec
xchg
sti
mov
dec
xchg
jge
xchg
sbb
fnsave
or
xchg
or
xchg
sbb
iret
pushf
adc
sbb
sub
sbb
inc
out
push
mov
cmc
nop
cmpsb
cmp
cmp
iret
pusha
iret
cmp
insl
sub
repz
or
or
cli
fdivs
push
icebp
or
orl
in
push
pop
iret
jnp
adc
icebp
dec
xchg
inc
push
jg
dec
iret
xchg
add
fiaddl
pop
and
sub
insl
sarb
xchg
cmc
mov
cli
popf
xchg
std
aam
outsl
sub
in
aam
cmp
push
cmp
dec
or
add
cltd
cwtl
and
adc
in
push
in
push
mov
xor
cmp
push
pop
in
inc
repnz
dec
roll
out
mov
ret
or
push
cmp
test
aas
and
push
cmc
lea
mov
sbb
loope
pop
pushf
xchg
fistps
movsl
out
cvtps2pi
xchg
popa
dec
loope
xlat
and
dec
lods
xor
outsl
jmp
out
cmp
jbe
test
inc
clc
or
divl
shl
mov
adc
sub
repz
inc
jns
push
cmc
popa
mov
mov
lods
jl
sbb
repnz
aad
jecxz
loopne
push
jle
xor
mov
xchg
cli
fcmovnbe
bound
or
test
aad
leave
in
js
mov
push
add
cli
and
shlb
mov
cmp
call
pop
imul
mov
mov
pop
packuswb
outsl
add
ret
and
jg
push
icebp
es
cli
fisubl
outsl
lahf
outsl
inc
adc
in
cmpsl
xor
dec
mov
int3
out
jecxz
push
jns
adc
cmp
fwait
add
pushf
and
mov
dec
cmp
outsb
mov
fisubrl
lock
in
jl
and
cli
dec
sub
test
sbb
jo
mov
push
mov
aad
pusha
xlat
add
xlat
cmp
test
outsb
nop
jge
cmp
movsb
stos
nop
mov
ja
or
lods
adc
adc
dec
mov
xlat
cmp
enter
loop
mov
or
cmp
mov
inc
and
mov
cmc
lock
repz
popf
inc
idivl
cltd
xchg
hlt
xchg
cmp
test
andl
cmp
xchg
and
xchg
fildll
rcrl
lods
bound
add
pop
mov
outsl
std
repz
shll
orb
and
push
mov
cmp
popf
mov
jmp
push
inc
sbb
jnp
add
xchg
pop
popa
in
cwtl
imul
rorb
fisttps
stos
scas
call
loopne
xchg
aad
jg
xor
mul
mov
sbb
scas
pusha
cmovbe
jg
push
ljmp
adc
push
pop
popa
mov
inc
in
pop
sub
popl
pusha
pushf
adc
out
mov
pop
adcl
sbb
xchg
and
xchg
insl
std
fidivrl
fidivrs
push
adc
or
push
fcoml
sbb
jae
pop
jns
pusha
mov
out
inc
aad
lods
add
jl
jge
or
js
daa
out
dec
movsl
out
adc
adc
or
sbb
inc
inc
jns
int
inc
cs
aad
pop
or
inc
jo
lods
add
jnp
cmc
or
xor
jle
xchg
mov
dec
or
stos
data16
int
icebp
dec
jae
jecxz
mov
mov
vmulps
int
pop
mov
repnz
push
in
imul
or
ss
xor
shr
adc
movsl
les
das
jge
jnp
mov
mov
xor
add
enter
xchg
nop
cmp
test
lods
mov
mov
push
imull
mov
test
add
notl
push
mov
push
stos
cmp
push
stc
jnp
sarb
push
loope
jns
fnop
or
out
xor
inc
cltd
jne
xlat
jno
mov
jne
stos
sub
das
cmp
dec
scas
mov
push
and
in
aas
fnstenv
cmp
sti
popf
jmp
lods
out
push
ja
pop
in
mov
and
push
jno
test
vshufps
lea
loope
repnz
mov
xchg
jno
push
and
insb
popa
repz
cwtl
lret
jo
jns
mov
and
cld
pop
pop
cmp
mov
mov
adc
add
sub
pusha
mov
rcll
sbb
iret
mov
cli
jl
mov
pop
jb
mov
popf
and
jb
aam
into
cmc
adc
ja
bound
push
inc
aad
fisttps
dec
das
inc
inc
jmp
xor
mov
jmp
je
out
xor
aad
mov
mov
in
xchg
push
lds
lcall
pop
or
das
xor
shrl
mov
cmp
rcrl
mov
jae
clc
hlt
mov
jecxz
loope
mov
call
movsl
pop
jns
jno
cmp
or
idivb
cwtl
ljmp
loop
adc
aaa
iret
push
push
aad
aas
scas
push
dec
ja
loopne
jns
int
lods
sbb
cmc
mov
xchg
inc
ret
or
and
dec
sub
and
divl
les
pop
imul
ds
fisttpll
xor
enter
aas
inc
cwtl
dec
jb
xchg
mov
dec
loopne
imul
mov
xchg
ffreep
lods
inc
xchg
pop
xchg
sbb
and
xchg
cmpsl
cmp
lahf
iret
sbb
and
push
or
xor
andb
out
jns
sbb
xor
fildl
xchg
pop
inc
mov
dec
outsl
push
xor
jae
xlat
inc
loope
mov
mov
and
add
mov
dec
and
and
loop
call
lahf
and
mov
inc
cmp
and
rclb
cmc
cmpl
fcmovbe
fdivrl
fwait
sbb
repnz
mov
push
out
std
loop
outsl
fs
mov
xor
int
clc
push
enter
in
mov
xchg
lret
push
pop
popa
cmp
out
into
scas
xchg
or
rol
xchg
or
mov
out
mov
mov
sti
loope
and
lock
cmpsb
jno
mov
sahf
roll
dec
fldlg2
int
jae
imull
mov
mov
jle
and
mull
jno
frstor
jle
test
into
xor
cmp
push
fnsave
jno
notl
jnp
repnz
push
dec
xchg
jle
xchg
cwtl
int
mov
cmp
and
aas
push
decb
pop
imul
jbe
pop
jno
adc
hlt
setne
jle
jnp
xchg
loopne
loope
sub
shrb
pop
adc
add
imul
out
das
xchg
dec
mov
mov
pop
js
in
into
cmc
out
adc
fwait
sub
mov
mov
inc
or
pop
in
push
pop
add
xchg
jne
gs
cld
mov
dec
mov
add
fwait
mov
mov
pop
test
cmp
xlat
in
pop
jns
lcall
push
or
js
sbb
lods
add
inc
ret
dec
xchg
pop
inc
pop
dec
cmp
sub
in
and
mov
pop
roll
mov
jl
dec
mov
push
mov
or
inc
inc
xchg
lods
sbb
leave
inc
daa
mov
cmc
int3
jge
out
push
sub
push
or
mov
add
cmp
xor
push
fwait
lods
sub
rcrb
stos
xchg
mov
add
xchg
jns
or
lods
mov
push
cmp
mov
out
out
cmp
fstp
push
push
push
xchg
ficoms
inc
lcall
call
mov
je
adc
out
add
sub
and
xor
jmp
push
xchg
shlb
push
idivl
aam
cmp
push
pop
nop
inc
call
sti
adc
mov
inc
xor
cltd
mov
shll
jecxz
das
cmpsb
jge
pop
das
sbb
jo
and
lret
scas
scas
mov
cmc
sub
xor
loop
cmpsb
int
nop
jl
test
mov
inc
mov
sbb
add
lcall
shlb
inc
mov
sbb
arpl
cli
mov
dec
cmp
adc
popa
call
mov
xor
xchg
add
int
xchg
xor
xchg
adc
add
ljmp
loop
jbe
xlat
xchg
xchg
popa
shlb
ljmp
sub
jp
push
cmp
out
decl
fidivrs
jmp
cmp
je
and
imul
xor
lock
jno
divb
scas
mov
push
or
push
push
outsl
jg
mov
js
or
cld
cmp
stos
inc
cmp
push
mov
dec
sar
sbb
or
sbb
or
ret
add
or
cmpsl
dec
dec
dec
leave
sbb
cmp
xor
cmp
or
icebp
sbb
cmp
aad
mov
pusha
add
pushl
pop
cmpsb
mov
mov
std
push
cmpl
pop
adc
push
mov
call
pop
imull
popa
stos
clc
push
cmpsl
popf
inc
mov
enter
lds
cmp
adc
popf
pusha
icebp
pusha
bnd
jmp
add
push
jb
fs
jne
outsb
fnstenv
into
and
inc
sti
jle
add
xchg
cs
dec
mov
or
cmp
dec
dec
rcrb
in
frstor
adc
lret
mov
sub
or
stos
mov
push
lcall
adc
lods
sti
iret
mov
inc
fsubr
add
das
or
int
and
ret
add
mov
cmc
aam
pop
loopne
das
mov
insl
mul
mov
jp
pop
xor
jge
xchg
lods
sub
dec
xchg
mov
push
test
and
inc
pusha
push
cmp
or
add
js
scas
xchg
or
loope
sub
movsl
mov
add
dec
sbb
insb
les
into
sti
imul
loopne
mov
iret
std
bound
xor
add
cwtl
add
sub
fidivrs
cmpsl
push
cld
lret
loop
dec
lcall
sub
add
fwait
mov
push
aas
out
xchg
pop
std
add
dec
mov
pop
ss
cmpsb
or
cmpsb
rcr
cmp
cmpsb
idiv
es
push
mov
imul
fwait
imull
addr16
insb
mov
jne
fwait
orl
inc
cmp
iret
fldt
stc
dec
jb
outsl
xchg
outsb
mov
and
les
sti
rorl
popa
push
imul
add
push
xchg
add
ja
add
pop
xchg
aad
add
enter
jp
push
mov
data16
xchg
xchg
and
out
aad
sbb
sti
cld
pusha
push
mov
out
test
dec
fimull
jg
xchg
lcall
mov
or
push
pop
adc
jge
inc
mov
jo
inc
lds
repnz
cmc
aad
les
add
pushl
pop
push
sbb
jge
fnstsw
loope
push
ds
add
push
lahf
mov
jecxz
inc
adc
sti
scas
inc
xchg
push
inc
cmp
push
call
imull
adc
adc
stos
sahf
dec
test
or
std
aaa
jle
mov
mov
fsubrs
cmc
lock
inc
mov
jmp
dec
or
fldcw
xchg
out
push
lcall
dec
fldenv
aam
bound
pop
cmpsb
test
cs
das
lcall
inc
sub
xor
jmp
dec
outsb
xchg
clc
push
and
cmp
loope
inc
scas
or
cmp
aad
sub
lret
pop
lret
sub
sub
imul
in
ss
outsl
icebp
inc
cmpsl
and
jno
cmp
pop
in
push
and
pop
lods
loopne
loope
cmpsl
mov
dec
mov
xchg
lcall
xchg
cmpb
sbb
fwait
mov
int3
dec
aad
push
jnp
filds
std
call
adc
loope
xchg
imul
mov
cli
mov
jge
push
inc
cmp
add
inc
fidivrl
ja
loope
push
mov
gs
rcrb
mov
clc
xor
imul
pop
int
loope
dec
push
sti
ljmp
mov
out
aad
clc
or
dec
mov
or
mov
add
daa
stos
xchg
sbb
pop
pop
cmp
add
add
cmpsb
cmp
outsl
aad
push
cmp
cmp
testl
sbb
jmp
aad
jno
add
dec
pop
sarb
je
xor
push
int
jmp
test
xchg
mov
sub
pop
lods
mov
fistpl
mov
cmp
cmp
movsl
xor
mov
call
pop
scas
test
lods
or
and
cltd
dec
cmp
cltd
mov
xchg
test
push
sahf
mov
fmull
sub
push
mov
add
mov
lret
notl
sti
xchg
clc
sub
outsl
xchg
lea
cmp
shl
jle
xor
lds
nop
push
jae
sub
hlt
sarb
adc
test
enter
sbb
data16
cmp
fs
lods
dec
cmpsb
shlb
mov
mov
dec
sbb
jo
sub
imul
inc
out
sub
push
xchg
out
mov
cld
mov
gs
add
or
jo
pop
fwait
jge
imul
jecxz
mov
sahf
fisubrs
cmp
bound
xchg
or
or
xchg
sub
ss
sub
xchg
jnp
adc
insl
ja
jns
aam
mov
adc
cmp
mov
sbb
or
inc
cmp
fnstcw
xor
mov
out
out
xchg
cmp
shll
into
mov
es
sti
fistpl
aad
andb
ret
rolb
dec
xlat
jl
sarb
jno
mov
cmp
add
ja
cli
jmp
clc
push
es
pop
mov
pop
cmp
or
adc
int3
mov
loope
sub
and
iret
nop
out
sti
cmc
dec
rcrl
dec
inc
jns
popa
jne
xchg
andl
mov
and
out
in
dec
cmp
ds
push
mov
call
inc
cli
mov
out
out
test
adc
mov
fisubrs
add
jbe
dec
movsl
dec
idivl
movsl
and
xchg
mov
test
push
jmp
addl
mov
push
pop
sti
sbb
shl
push
and
sub
push
shll
xchg
adc
pop
cmp
lret
xchg
repz
mov
xchg
lea
dec
xchg
mov
xchg
inc
push
add
and
cmc
fcmovbe
mov
and
push
mov
flds
add
outsb
push
xor
insl
idiv
push
push
dec
sbb
and
mov
and
das
mov
and
lods
icebp
inc
mov
shlb
xchg
loop
push
imul
dec
pop
pop
add
adc
dec
lcall
andps
cmp
or
sub
and
push
jp
lods
jns
aad
sub
fldt
jp
shll
adc
test
addr16
pop
xor
xchg
into
or
push
cmp
fs
ficoms
std
jp
jmp
test
movsl
jns
lea
add
pusha
add
sbb
iret
sbb
adc
fistpl
sbb
imul
fimuls
test
cltd
inc
dec
in
rclb
xchg
push
int
mov
mov
pop
in
mov
ficompl
test
in
outsl
adc
push
fsub
xor
inc
stos
jecxz
jl
push
popf
mov
push
xor
sub
stos
lret
inc
jno
jmp
dec
scas
jbe
pop
sub
fwait
ret
shl
inc
into
cmp
mov
sbb
jae
push
sub
aad
addr16
imul
mov
mov
in
pop
es
xor
xchg
aas
pop
shll
jge
xlat
dec
call
imul
out
ret
jne
daa
into
idiv
loope
sahf
addr16
int
cmp
mov
xchg
pop
lret
inc
mov
and
jle
in
jne
add
pop
or
iret
lods
or
push
cmp
xchg
push
nop
test
into
mov
adc
xor
dec
pusha
xor
adc
sub
cmpsl
faddl
nop
mov
xor
je
push
sub
cmp
mov
aam
out
loop
es
not
leave
out
jmp
cmp
dec
fwait
ds
xchg
inc
addr16
cmc
fisttpll
push
mov
dec
daa
push
fimull
pusha
jl
addr16
scas
sub
in
xchg
mov
inc
jl
sbb
mov
jle
xor
sbb
inc
sbb
js
push
popf
mov
out
mov
jnp
xlat
mov
clc
pusha
hlt
mov
bound
out
das
ret
and
addl
xchg
jns
cmp
mov
pop
lahf
inc
dec
setne
cmp
mov
clc
mov
dec
xchg
xlat
unpcklps
mov
into
cmc
inc
jns
fnstsw
or
test
lock
lods
stc
xor
jmp
cmpsl
add
lods
and
scas
add
aad
mov
rolb
pop
and
jno
add
push
jae
popf
imulb
out
test
jbe
sub
mov
adc
inc
add
cmc
adcb
xchg
repnz
jb
inc
stos
aam
ja
roll
mov
jg
loop
lods
sub
sbb
sbb
insb
scas
sbb
pusha
xor
lods
add
shl
adc
dec
or
cs
xchg
jns
loope
jge
jmp
clc
pop
jns
pop
pop
popa
inc
jmp
ret
inc
sbb
mov
dec
xchg
and
sbb
int
xchg
sbb
imulb
iret
add
mov
inc
cs
push
lds
insl
xchg
cmpsb
pop
inc
out
je
shr
aad
inc
mov
fisttps
xchg
mov
lret
iret
add
lret
jae
gs
lods
inc
inc
push
mov
mov
cmp
mov
in
hlt
mov
ss
insb
pop
push
test
mov
pusha
push
std
push
pop
std
mov
cmp
xchg
dec
push
imul
dec
enter
fdivrl
int
pop
xchg
filds
out
call
push
xchg
iret
cmc
dec
push
add
sub
test
js
je
mov
call
xchg
jo
clc
and
ds
push
lea
loope
fmuls
mov
insb
cmc
dec
xchg
int3
xor
les
push
cmpsb
sub
pop
mov
hlt
lahf
and
sub
push
aad
dec
enter
negl
jmp
sub
test
add
je
sub
mov
push
inc
cli
or
mov
push
pop
cmp
subl
mov
pop
pop
inc
mov
or
lahf
push
loopne
add
out
lods
test
or
repz
bound
es
clc
popa
dec
lods
popf
stc
mov
inc
lods
push
cmp
sub
rcll
xchg
je
jl
cmp
mov
xor
pop
leave
add
dec
test
sbb
xor
jge
adc
push
and
adc
les
xor
xlat
jne
push
lock
rolb
out
aad
and
pusha
sbbl
pop
or
mov
xor
aad
add
outsl
lea
pop
push
outsl
cmp
aad
dec
inc
jno
popa
in
in
aad
scas
pop
xor
push
dec
out
push
popf
popa
repnz
out
jg
loopne
outsl
jmp
insl
xor
jo
sbb
rclb
arpl
lods
pusha
loope
push
and
mov
out
xor
mov
movsl
out
xchg
seta
fstps
adc
int
jno
clc
cmp
or
iret
sub
stc
loope
and
jecxz
inc
nop
and
push
dec
int
lcall
push
adc
cmc
mov
cmp
adcb
mov
int
add
outsb
inc
pop
pop
push
icebp
inc
test
inc
add
xchg
into
cld
xor
push
or
stos
into
outsl
outsb
movsb
xor
mov
inc
in
cld
mov
in
out
in
ficoms
lret
imul
aad
dec
test
in
imul
aad
mov
pop
mov
stc
and
aad
jns
xchg
rclb
pop
push
das
jp
scas
adcb
and
add
imul
xchg
pushf
xchg
mov
inc
adc
push
jle
inc
adc
test
cmc
inc
xchg
stc
les
pop
pop
ret
testl
idivl
mov
or
add
mov
xchg
inc
lods
mov
daa
fimuls
cli
jge
mov
adc
gs
int
mov
rcll
in
dec
testl
push
test
jl
xchg
xor
lods
gs
in
es
and
mov
jnp
pop
test
and
lcall
push
stos
fdivrp
sarl
jl
mov
xchg
pusha
mov
xchg
idivl
lods
pop
inc
stc
mov
cli
lods
or
cmpl
and
push
mov
cmp
sbb
jp
setne
rcll
cld
adc
dec
pop
dec
mov
and
mov
push
cltd
sbb
push
or
pop
clc
lods
fldenv
fildl
fsts
or
leave
sub
jmp
aad
cmp
pusha
adc
es
xor
mov
popf
dec
jmp
or
getsec
cmp
rorl
int
jb
xor
push
lret
jl
les
andl
lcall
cmpsb
hlt
filds
cmc
lds
xor
xchg
xchg
jae
push
popa
lea
mov
jno
stos
pop
int
mov
stc
xchg
outsb
sub
add
xlat
cmc
mov
enter
fstps
mov
out
dec
jge
mov
push
cmp
movsb
mov
xchg
lahf
insl
mov
aam
sub
dec
lahf
adc
les
nop
add
aad
jge
adc
jge
pop
test
pop
sub
dec
outsb
fwait
int
aad
test
stos
cmp
ljmp
jle
pop
mov
popf
stos
imul
and
imul
dec
int3
mov
insb
add
dec
adc
daa
arpl
mov
sub
dec
sti
jp
mov
fwait
clc
loopne
mov
roll
xchg
in
sahf
es
and
cmp
std
pop
cmp
cmp
mov
adc
out
int
mov
mov
pop
out
mov
fcompl
jno
xchg
mov
lcall
mov
adc
xchg
and
bound
mov
imul
sub
cmc
bound
addr16
jns
lods
in
add
orl
in
sub
or
call
int
arpl
nop
sub
fwait
je
push
popl
xor
or
sub
cmp
cmc
add
pop
and
dec
mov
ljmp
stc
fistpll
sub
shlb
mov
xchg
xchg
cmc
mov
in
mov
test
into
dec
cmp
or
pop
int
fs
xlat
dec
aad
into
out
sbb
loope
cwtl
xchg
faddp
sbb
outsl
cmp
sub
cs
rcr
cmp
inc
and
and
lret
lret
scas
add
popf
sub
push
xor
in
roll
dec
mov
outsl
add
mov
mov
jl
adc
ljmp
jne
mov
mov
aad
ficoms
imul
movsl
push
mov
cmp
and
mov
aad
sahf
out
inc
pusha
fimuls
lds
jnp
jle
jge
into
jmp
mov
dec
imul
aad
mov
scas
mov
dec
adc
arpl
push
pusha
mov
push
arpl
push
xlat
out
xchg
jl
mov
loop
sti
jmp
idivl
aad
sub
jo
or
popf
cwtl
jo
ja
mov
hlt
inc
out
mull
sub
imul
pop
push
push
or
pop
xor
and
les
cmp
pop
mov
mov
test
shlb
or
ljmp
ret
xchg
fisttpll
xchg
daa
insb
leave
lcall
mov
pushf
in
data16
mov
add
or
movsb
mov
mov
fisttpll
pop
mov
in
xchg
mov
jle
pop
sbbb
out
dec
int
ljmp
inc
dec
mov
out
dec
dec
test
jb
xadd
dec
pusha
or
cmc
ds
test
in
sub
jge
loopne
in
out
pcmpeqd
xor
jns
call
push
inc
mov
adc
loop
add
jne
sar
sub
adc
popa
in
rorb
add
scas
mov
adc
int
lods
adc
add
sbb
add
leave
ljmp
mov
add
push
adc
push
xchg
mov
mov
call
daa
ja
mov
lods
testl
add
cmp
adc
cmc
sarb
push
jnp
lahf
mov
imul
ret
aas
pop
movsl
and
push
sub
cmovl
sbb
add
jmp
jle
cmpsb
lret
pop
fdivs
test
xchg
pushl
or
movsb
lahf
ficomps
xchg
cmp
scas
rcll
pop
popf
jmp
xchg
shl
aam
jnp
mov
inc
cli
push
icebp
cmp
push
cmp
movsl
cmpb
lods
pop
xor
nop
dec
cmp
iret
lret
popfw
fnsave
das
fwait
test
cmc
and
fistpl
jo
dec
sbb
into
aad
in
push
in
sub
cmp
xchg
push
scas
pushf
mov
pop
scas
pop
jge
mov
add
cmp
pushf
inc
add
sbb
jecxz
aad
add
adc
sbb
aad
fstl
cmc
cmp
cmp
cld
bound
push
xor
jl,pn
sti
mov
mov
add
pop
cmc
ret
dec
pop
das
xchg
mov
in
or
fs
add
xor
add
loope
inc
fnstcw
xchg
int
mov
xor
test
pop
sub
jmp
in
cmp
push
xchg
test
cwtl
inc
data16
aam
dec
mov
adc
adc
or
push
aad
pop
sub
sbb
icebp
or
lds
sub
pop
lock
dec
loopne
je
push
push
cmpsl
lcall
jns
shll
out
or
or
pushf
rcrl
or
mov
inc
mov
xor
loop
xor
repz
lret
and
inc
add
into
movb
enter
int3
notl
add
lods
hlt
sub
cmp
in
mov
pop
stos
call
dec
mov
dec
dec
pusha
pop
out
stos
pop
sahf
mov
xchg
jl
cmc
jg
adc
movsl
scas
cmp
jb
aam
mov
imul
cmp
ss
push
adc
lahf
dec
cmp
mov
push
lock
mov
push
xchg
xor
jg
cli
mul
dec
fisubrl
jmp
test
jb
xchg
leave
hlt
lret
cmc
adc
cmp
or
test
cvtdq2ps
cmp
sub
sti
or
insb
popf
dec
dec
or
pslld
lahf
xchg
mov
add
cmp
lds
test
xor
and
xlat
insb
popa
xor
cmp
dec
shlb
mov
loope
loopne
sub
ret
popa
out
or
movsl
lcall
outsl
int
idivl
popf
aad
xchg
push
mov
jge
js
xchg
xchg
push
in
dec
sahf
int
cmpsl
push
push
fdiv
mov
or
leave
dec
inc
test
dec
jo
mov
sahf
jbe
dec
jge
jnp
aad
jge
roll
loope
insl
or
loopne
cmp
ret
lods
or
mov
sbb
xchg
scas
repz
out
adc
add
cmp
mov
mov
sbb
pop
sub
stos
inc
push
xor
or
fistl
jae
adc
scas
cmp
inc
mov
push
and
inc
enter
push
mov
call
inc
xchg
jp
ja
jmp
data16
adc
aad
xor
push
push
jl
mov
pop
imull
fcomps
arpl
orb
call
dec
clc
jnp
out
jo
adc
out
negl
test
out
or
adc
mov
insl
icebp
rorb
in
pop
xchg
mov
call
test
call
cld
or
daa
mov
in
adc
addr16
inc
or
xchg
sti
fadds
lods
and
in
xor
lcall
inc
stc
std
out
aas
cld
and
movsl
inc
lods
add
int3
daa
xor
insl
cmpsb
pusha
es
lods
lcall
cmp
jge
lods
dec
outsl
insl
push
mov
cmp
cltd
sub
and
pop
in
fwait
push
insb
ja
aad
jp
inc
cmovs
shlb
sarb
push
shl
sti
idiv
movsb
push
shr
dec
cmc
add
imul
push
jp
fnstcw
add
push
pushf
sub
mov
call
sbb
add
dec
and
pushf
xchg
dec
int3
ror
imul
cltd
mov
push
push
and
out
stos
fimuls
and
cmp
imul
adc
xchg
test
fistl
loopne
pop
push
bound
cmp
pop
outsb
xchg
gs
mov
std
orl
icebp
adc
fs
aas
pop
cli
cmpsb
clc
js
nop
xchg
repz
iret
test
lcall
test
pusha
idivb
aas
pusha
in
adc
xchg
mov
jae
xchg
push
add
xor
lcall
outsl
cmpsb
pushf
push
iret
loopne
nop
std
gs
test
stc
je
mov
jge
sub
sub
std
mov
sbbb
push
add
sub
cmp
mov
out
sub
dec
push
rorl
jmp
js
fiadds
dec
xor
popf
mov
adcb
imull
loope
dec
mov
and
int
xor
inc
leave
jge
push
or
sarb
jp
cs
outsb
inc
lret
loope
subb
cwtl
jecxz
xchg
or
mov
pusha
idivb
das
mov
test
and
mov
fisubrs
jmp
jl
aam
push
ja
mov
loopne
fiaddl
xchg
cmc
push
adc
popf
or
lret
aaa
cmp
enter
into
cmc
popf
mov
jmp
out
aad
dec
imul
rep
nop
add
call
and
inc
iret
xchg
push
and
les
jge
int3
mov
xor
movsl
mov
out
inc
cli
movsl
mov
lods
out
arpl
lock
stos
std
ljmp
rclb
std
mov
pusha
dec
or
addr16
mov
daa
cmp
xchg
lahf
sahf
ficoms
outsb
js
fnstenv
mov
and
mov
jbe
fsubl
sbb
popa
pop
stc
pusha
mov
mov
cmp
cmp
jne
mov
mov
addr16
addr16
jge
jg
in
shl
jge
mov
sub
clc
lcall
jae
es
lea
data16
mov
mov
pop
lea
cmp
sahf
popf
rorb
hlt
ret
sub
dec
or
xchg
pop
cmp
jg
sub
movsl
push
scas
mov
in
mov
push
aam
push
and
adc
pop
sub
push
cmp
mov
sub
push
out
pop
repz
pop
outsl
lcall
mov
adc
call
mov
outsl
jne
insb
and
mov
cmpsl
dec
add
or
arpl
fs
and
fnstsw
add
in
jle
negb
stc
fisttps
data16
sub
sarb
cmp
imul
mov
mov
fiadds
adc
and
cli
mov
mov
and
mov
ret
fs
js
out
fisubs
and
arpl
adc
loopne
cmp
imul
dec
add
xchg
outsb
and
test
jge
shll
inc
or
sbb
aad
jl
add
mov
das
lock
ja
iret
mov
pusha
inc
sbb
jns
cld
xchg
adc
xrelease
in
or
leave
inc
jb
dec
inc
adc
mov
inc
and
in
pop
xchg
sub
jnp
jno
adc
aad
jle
ficoms
insl
lcall
sbb
les
and
lret
sbb
sub
aam
out
int3
sbb
sub
movsl
lret
in
jp
scas
pop
stos
and
out
inc
pop
mov
je
sti
mov
push
mov
fwait
test
inc
negl
test
push
pop
addl
lahf
sbbl
mov
pop
dec
push
adc
fsubl
popf
xor
mov
dec
pushf
cli
clc
jmp
pop
adc
cmp
sub
in
xchg
out
cmp
dec
aad
cmp
and
cmp
push
mov
sub
push
in
xchg
in
out
fistpll
cli
add
mov
rcll
stos
mov
push
or
mov
movsb
nop
int
js
adc
mov
jo
xchg
xchg
sub
aam
cmp
or
les
push
hlt
inc
xor
clc
leave
aad
mov
call
js
adc
inc
push
fiadds
dec
xchg
js
fstps
push
mov
pusha
aad
sub
rclb
inc
in
pop
data16
pop
add
mov
pop
mov
or
xchg
cmp
pop
sarb
mov
outsb
popa
and
mov
stc
test
cmpsb
mov
mov
in
adc
loope
jecxz
cmc
mov
hlt
jmp
popa
push
lcall
cmp
mov
jb
call
jge
scas
std
cmc
icebp
mov
push
xor
in
inc
xchg
popa
mov
cmp
movsb
test
lret
jle
and
popa
fcmovu
aad
and
add
shr
negl
xor
xchg
loop
or
inc
fwait
gs
push
cltd
adc
or
mov
loope
loopne
ds
fmull
hlt
xor
sbb
pop
jmp
mov
xor
dec
mov
inc
cmp
enter
or
lea
xor
add
adc
out
sub
int
jno
xchg
xchg
push
cmp
adc
out
push
aas
pop
loope
and
in
jmp
sub
fnstenv
scas
js
and
jne
jl
push
mov
push
mov
enter
aad
jb
stos
jne
jno
movsl
mov
and
in
xchg
cmp
inc
hlt
in
mov
add
mov
cmp
sub
imul
lcall
xchg
aad
stos
dec
loopne
data16
sar
ficompl
mov
push
mov
in
or
int3
addl
push
clc
lahf
ret
sub
cmc
inc
popf
push
push
sub
push
shlb
inc
mov
aam
jg
cmp
xor
testl
inc
movsl
ja
cmpsb
push
rclb
andb
cltd
or
jge
imul
neg
pushf
stos
stc
xchg
cmp
or
push
xchg
clc
out
xor
das
ror
ret
iret
mov
dec
repz
scas
push
shl
cli
mov
sub
pop
jecxz
test
fs
cmp
jb
in
add
lret
adc
call
int
cmp
cmp
ret
push
ja
lock
xlat
xchg
xor
push
pop
or
pusha
std
test
xlat
das
mov
in
scas
cmc
shl
lret
inc
repz
mov
or
mov
push
pop
dec
cmc
popf
int
je
call
bound
lret
sbb
jne
mov
cmp
xchg
dec
pop
mov
pop
aam
sub
dec
aad
fcoml
insb
aad
jmp
scas
dec
cmp
jnp
mov
jmp
popf
inc
incl
mov
mov
push
test
addr16
subb
push
cmp
bound
call
cmc
mov
xchg
lret
mov
fstl
subl
add
pop
aad
add
dec
xor
nop
mov
cmc
addr16
mov
ficoms
leave
unpckhps
xor
sbb
mov
orb
add
add
push
and
mov
jecxz
enter
sbb
cld
movsl
and
sti
sub
mov
mov
mov
fcmovnb
outsl
inc
pop
cwtl
test
adc
sub
stc
inc
add
popf
xchg
aad
stos
repz
cmp
sbb
push
js
push
cs
xchg
pop
xchg
js
mov
cmpsb
mov
je
cmp
lret
idivb
rcll
dec
hlt
in
shlb
sti
fisubs
ja
mov
mov
adc
imul
subb
xor
and
mov
mov
notl
push
shrl
pop
js
lods
shl
inc
xorl
sbb
rol
mov
cmc
pop
push
rolb
adc
sub
clc
adc
lods
adc
add
std
in
cli
or
pusha
movsb
add
add
or
cmp
popa
push
lods
in
mov
aad
xchg
xchg
fstl
sub
ret
and
sub
cmpl
cmp
dec
pop
cld
pop
mov
in
add
mov
mov
xor
jp
push
push
cmp
sar
ds
lret
pusha
movsl
fisttpl
mov
sbb
cmc
pop
cmp
pop
or
out
cmp
bound
andnps
cmpsb
jge
xchg
fldt
mov
jne
inc
pop
popa
scas
push
jno
aam
jns
and
ret
int
ficoml
and
repnz
cmp
scas
loop
adc
or
outsl
cmp
pusha
inc
loopne
fwait
aas
push
xor
rcll
repnz
fiaddl
pop
lods
jmp
lret
adc
cltd
adc
mov
push
bound
jmp
aad
sahf
daa
out
or
xlat
adc
xchg
nop
inc
arpl
lea
jg
mov
int3
mov
shl
jmp
xor
stos
xchg
push
xor
test
xchg
enter
or
and
cmp
test
je
cli
aad
pop
movsl
imulb
add
shll
bound
inc
and
or
lea
adc
test
ror
mov
into
bound
lods
icebp
decl
test
in
pop
adc
xchg
lcall
mov
jecxz
mov
dec
or
iret
cltd
adc
enter
push
cmp
arpl
jo
bound
or
jns
test
aas
xor
mov
fs
aad
pusha
cmpl
push
dec
or
repz
inc
cli
mov
std
push
mov
mov
shufps
xchg
mov
cs
adc
adcl
push
int
mov
add
addr16
cmp
std
or
xchg
mov
adc
mov
sub
stos
iret
iret
int3
cmc
jb
ja
inc
pop
inc
cmp
and
or
xchg
iret
gs
push
adc
cld
add
sbb
mov
xchg
rolb
scas
lock
iret
lahf
bound
inc
repz
dec
cmp
fidivrs
pop
enter
pop
jne
pop
outsl
outsl
sub
insb
and
push
cld
imul
cltd
dec
mov
test
ljmp
and
clc
sti
outsl
mov
push
xchg
or
scas
cmc
scas
sti
arpl
fldenv
or
xchg
cmp
gs
fs
imull
ja
sub
mov
inc
fstl
aad
xchg
icebp
sarb
jg
in
test
mov
push
xlat
jle
sarb
push
pop
sbb
fwait
jno
or
pop
iret
pop
int3
mov
rcrl
inc
sbb
cmp
mov
sub
add
icebp
rclb
xchg
call
dec
js
dec
test
std
mov
mov
inc
and
xchg
and
mov
xchg
adc
out
rclb
dec
cmc
xor
xchg
push
paddd
xchg
lahf
push
sbb
xor
lock
btc
out
dec
adc
dec
and
adc
addl
push
popa
scas
pop
clc
fwait
pop
jnp
mov
cmpsb
mov
fs
mov
push
cs
lcall
in
xchg
mov
cmp
rolb
std
sbb
dec
jecxz
aad
pusha
sub
push
fbstp
ss
push
inc
cmp
jb
int
out
sub
push
fwait
xchg
pop
test
adc
cmpsb
mov
andl
push
sbb
and
push
mov
pop
push
sub
outsl
xlat
mov
xchg
xor
or
lods
pop
jnp
dec
aad
leave
lahf
scas
sbb
popa
int3
enter
loope
arpl
lock
aad
xchg
pop
sbb
add
bnd
adc
loope
xchg
push
divl
push
enter
das
and
mov
xchg
sahf
push
cmp
aad
out
jns
test
and
jo
dec
cmp
lret
mov
outsb
fstl
rclb
push
or
mov
test
shrd
jmp
dec
adc
push
push
mov
inc
fsubl
sub
test
mov
push
cmp
mov
arpl
jns
pop
jns
or
and
jb
movsb
push
mov
or
inc
dec
or
adc
faddp
cmp
jl
into
dec
out
mov
aaa
jmp
aad
lret
and
hlt
jmp
adc
xor
aas
std
fistps
pop
shrl
cmp
mov
jle
filds
xchg
mov
mov
std
mov
mov
fsubrl
or
push
lahf
int3
das
pop
inc
push
inc
je
inc
jg
mov
or
inc
imul
cmp
mov
jl
popa
fs
xchg
cmp
mov
out
xchg
xchg
jns
gs
je
and
jg
pop
cmp
jmp
rcrb
dec
stc
cmp
xchg
cld
mov
lahf
mov
decb
fisttps
fiadds
cmp
inc
rcrl
ljmp
add
mov
mov
in
gs
adc
mov
sar
push
cmp
movhlps
jp
dec
test
mov
and
or
test
fnstcw
or
icebp
mov
cmpsl
or
mov
push
xchg
or
daa
jl
or
fidivrl
aad
mov
adc
mov
into
cmc
push
bound
gs
mov
and
adc
xchg
mov
lahf
pop
popa
sahf
fwait
mull
cmp
js
adc
dec
in
sub
cmp
push
and
mov
aad
cli
dec
cmc
outsb
imul
jmp
jo
jl
mov
inc
pop
push
jp
je
sahf
das
or
int
mov
or
sbb
pop
imul
je
cli
ror
push
or
addr16
int
jb
sbb
push
ret
outsl
xchg
xchg
addr16
into
aad
mov
xlat
jo
imul
push
jge
xchg
int
cli
cmp
int
cmp
push
aad
scas
stos
jno
or
mov
in
or
xchg
loopne
push
mov
aad
lret
xchg
and
inc
dec
es
inc
loop
pop
mov
rcrl
das
movsl
shl
mov
pop
push
fnstenv
push
inc
rol
or
sti
adc
fcoml
lea
loopne
xchg
js
cmp
repz
sahf
popa
std
xchg
sub
pop
mov
and
dec
and
imulb
mov
dec
scas
pop
mov
in
fsubrs
daa
sbb
loope
pop
mov
shlb
mov
jo
in
ljmp
mov
aad
arpl
fildl
sub
mov
orl
jmp
adc
dec
cmp
ljmp
adc
cmpsl
jg
xchg
jno
arpl
add
je
cmc
or
pop
mov
dec
js
iret
inc
jbe
cmp
icebp
mov
sub
mov
lahf
add
sti
mov
sbb
add
inc
and
dec
imul
in
or
xchg
mov
sbb
push
push
mov
push
test
lea
aam
jnp
push
lods
cmc
cwtl
int
mov
fistpll
push
aaa
into
je
in
fists
movb
stc
fs
cs
adc
and
xchg
or
inc
addr16
js
mov
push
cmc
xchg
jae
in
xchg
js
ret
jne
xor
rep
xor
jno
adc
cmp
mov
clc
out
or
xchg
xchg
arpl
push
or
lods
and
or
inc
jbe
sub
into
scas
arpl
jp
loope
sbb
rolb
iret
cmp
in
int
push
xchg
or
std
aad
subb
jmp
sbb
in
add
sbb
fs
aad
sub
jp
lahf
leave
sti
cld
xchg
xor
adc
pop
notb
movsb
adc
insl
xchg
int3
nop
cmc
jo
out
mov
loopne
loop
cmc
shrb
adc
mov
mov
cs
scas
out
mov
jns
movsl
in
cs
in
aam
stc
aad
lret
imul
pusha
and
pop
movb
faddp
iret
arpl
test
dec
xchg
sub
outsl
test
mov
aad
mov
xchg
fdivrp
push
leave
and
insl
rcrb
int
adc
mov
xor
xlat
mov
sub
andl
push
cmc
xor
movb
fsubrl
push
push
mov
push
pop
push
call
jp
xchg
mov
sub
xchg
jo
or
sti
mov
fucomp
mov
jge
aaa
out
test
dec
test
xchg
mov
scas
std
adc
inc
or
push
fbstp
pusha
das
repz
mov
xchg
xchg
call
dec
dec
mov
pop
push
fwait
jo
jbe
in
and
fimuls
ja
idiv
xor
mov
jnp
dec
pop
jge
mov
inc
jne
repnz
sub
mov
adc
xor
fadds
lret
dec
fmuls
ficoms
adc
lock
in
sti
iret
adc
add
and
pop
or
call
mov
aad
test
dec
in
clc
sub
push
sbb
and
repz
clc
call
stos
sbb
das
int
imul
movsl
dec
adc
stc
adc
inc
or
mov
cmc
inc
jmp
mov
das
cmp
jno
push
out
dec
push
arpl
stc
cltd
scas
mov
jmp
push
pop
lods
in
int
mov
mov
xchg
faddl
fimull
cs
add
mov
das
and
or
fstl
push
adc
imul
mov
imul
mov
cmp
push
sarl
fsubs
repnz
mov
movsl
add
test
jge
adc
cmpsb
mov
push
or
push
xchg
jnp
shll
or
mull
call
push
sti
mov
dec
lods
jmp
push
das
xchg
add
ret
cmc
subb
push
add
test
mov
mov
arpl
testb
mov
sbb
push
cmp
mov
xchg
dec
fdivrl
fsubrs
and
pop
push
jb
aad
cmp
lahf
push
call
xor
inc
aam
int
push
mov
push
icebp
dec
test
mov
stc
add
fidivrs
lods
outsb
lret
adc
jmp
jae
mov
mov
xchg
cmpsl
es
push
push
xor
in
sub
roll
mov
xchg
jecxz
xchg
repz
mov
popf
outsl
hlt
movsb
psubw
fwait
lods
cmpsb
sbb
inc
fsubrl
mov
aas
cld
push
pusha
mov
sub
xor
mov
mov
xchg
or
roll
test
stos
shl
cltd
sub
pop
jnp
xchg
fbstp
aad
xchg
insb
stos
xchg
outsl
stc
pop
loopne
les
dec
cmp
cmp
xchg
arpl
push
or
mov
and
les
pop
jp
mov
aad
cmp
xchg
fs
inc
fisubrs
jne
cmp
cmc
je
stos
and
sahf
push
and
and
push
cli
pushl
cmc
clc
int3
mov
push
jne
add
repnz
in
sub
fnsave
push
xchg
mov
shrb
cli
jo
or
maxps
and
fdiv
icebp
and
addb
cmp
arpl
jae
js
fidivrl
test
clc
mov
das
xlat
xchg
arpl
mov
mov
xchg
sbb
sbb
adc
xchg
mov
and
dec
mov
jp
dec
idivl
hlt
mov
mov
dec
inc
and
push
in
insb
hlt
push
xchg
add
cmc
pop
add
xchg
add
idivl
nop
lret
mov
les
jl
das
push
adc
mov
adc
call
stos
dec
stos
out
mov
enter
fcoml
pmaddwd
cmp
gs
repnz
cmp
icebp
loop
lods
or
and
lea
aas
lahf
dec
gs
incl
jno
inc
shr
xor
sub
aaa
mov
xchg
test
jmp
cmpl
int3
and
inc
iret
xchg
push
xor
iret
loop
out
lret
nop
mov
jp
and
insb
and
mov
out
or
push
clc
testb
cmp
and
xchg
nop
popa
shlb
or
pusha
lods
add
or
ljmp
adc
lea
loope
jge
add
jae
mov
into
inc
adc
jb
pop
sub
test
and
xchg
dec
push
mov
rclb
cmp
fs
out
lds
pop
xchg
cmpb
or
mov
mov
jle
popf
sbb
ljmp
adc
mov
movsl
add
mov
sbb
fcmovnb
xchg
push
push
or
aad
fwait
push
push
jbe
mov
push
xchg
adc
cld
mov
dec
test
cmp
cmp
add
mov
jg
dec
addr16
loope
xor
mov
jge
mov
popa
push
mov
jl
and
aaa
add
jmp
sbb
stos
std
in
into
xchg
xor
pusha
insl
lea
pop
pop
stos
fsubs
inc
or
mov
add
mov
in
inc
fiadds
repnz
stos
setbe
bnd
adc
pop
insl
and
fbstp
out
aas
int
insl
jnp
fdiv
stc
fdiv
lea
mov
xchg
or
in
add
dec
dec
adc
cmp
cld
push
add
test
sti
or
inc
sub
cmp
inc
inc
int3
sub
mov
aam
divl
subl
jmp
test
xor
adc
xchg
daa
les
call
mov
lds
stos
push
cld
adcb
pop
mov
into
pop
aad
cli
pop
push
adc
clc
ret
sbb
enter
int
shrb
cmp
test
add
and
cli
pop
sbb
mov
test
pop
pop
out
aad
in
fstl
test
xchg
xor
repz
push
gs
hlt
addr16
adc
iret
sub
jne
cmp
mov
and
adc
lock
adc
outsl
push
sbb
mov
pop
lahf
nop
fs
fwait
inc
daa
cld
aad
fpatan
mov
mov
fdivrl
ss
mov
xchg
call
and
cltd
sbb
jbe
or
mov
and
incl
xchg
mov
mov
or
jo
inc
mov
sub
inc
add
pushf
or
cld
or
mov
jae
outsl
cmc
dec
adcb
mov
jp
aad
inc
scas
and
pop
lea
add
pop
and
gs
dec
cvtdq2ps
nop
sbbl
rcr
scas
fbstp
cmp
push
mov
les
xor
inc
add
ss
push
out
mov
mov
call
jne
and
rorl
dec
in
cmp
xchg
push
movsl
pop
andl
push
mov
jnp
ret
scas
and
lahf
iret
mov
fstpl
xchg
outsl
js
nop
pop
xor
leave
dec
imul
fwait
jecxz
insl
insl
gs
sub
mov
in
add
sub
out
in
popa
add
jge
fldl
and
xchg
fiadds
dec
xchg
nop
bound
mov
cwtl
dec
loop
pop
test
sub
dec
faddl
jmp
cmc
nop
int
add
ficoml
mov
sti
and
fnstenv
cmp
adc
int3
inc
scas
inc
push
push
out
test
scas
dec
out
and
mov
shlb
or
aad
or
outsl
push
xor
into
shr
sub
aam
shll
out
xlat
jg
mov
sbb
shll
fsubrs
cmc
and
sahf
cmpl
sub
cmc
inc
mov
lock
inc
mov
cli
cwtl
pop
scas
or
fwait
push
or
in
dec
cmc
ja
add
cs
imul
pusha
and
arpl
adc
sar
and
pop
out
int
icebp
cmp
sbb
jle
aaa
adc
fistl
dec
repz
cltd
out
mov
jl
into
icebp
push
ficoml
lds
daa
mov
fwait
adc
in
jne
pop
ljmp
stos
shld
out
loopne
loop
outsl
jnp
cmpsl
mov
std
mov
popa
aas
dec
or
and
sbb
ret
cmp
and
lret
xor
xchg
jmp
loop
or
sbb
movsb
xchg
repz
push
mov
sub
cmp
popf
cmc
addl
pop
push
data16
add
jl
mov
xor
call
jnp
loope
mov
mov
filds
cmp
lea
jnp
adc
ja
dec
or
test
ss
popf
cmpb
in
dec
push
mov
mov
jne
nop
cwtl
mov
jnp
adc
add
in
lods
ss
loopne
jns
or
sub
dec
mov
jbe
sbb
imul
inc
cmp
mov
movb
xchg
out
fmul
cmc
push
mov
and
sub
aad
punpckhbw
aad
aaa
push
lea
lret
int3
or
int3
or
mul
push
inc
clc
jle
xor
add
lea
pusha
jno
clc
dec
lods
mov
jo
sub
rcrl
icebp
fisubs
arpl
push
cld
das
sbbl
pusha
iret
fdivs
push
push
sub
out
xchg
subl
push
aad
sbb
repnz
mov
jo
popf
jnp
jmp
sub
stos
xor
push
pmullw
push
std
repz
xchg
scas
lea
stos
cmp
testl
sub
pop
test
inc
loop
sub
cmp
dec
je
rcl
mov
scas
pop
cld
mov
vmovups
cwtl
mov
dec
out
addr16
or
stc
mov
jmp
out
push
mov
mov
add
js
add
xorb
inc
jp
into
clc
mov
daa
add
jo
out
xchg
ficoml
xchg
inc
inc
enter
mov
jo
out
cltd
mov
mov
out
imul
jnp
fiadds
rorb
push
sub
inc
add
mov
or
pop
push
jl
fisubs
js
dec
jecxz
cmp
sub
pop
ret
push
cs
fisubrs
test
movsl
aaa
jns
pop
call
call
loope
xchg
push
adc
add
push
jl
and
inc
cmp
lods
cmp
pop
mov
sbb
and
icebp
sti
mov
pop
pusha
lahf
and
mov
popa
hlt
jo
lock
aam
push
xchg
mov
clc
jbe
or
or
movsb
mov
dec
or
test
sub
or
xor
pop
pop
jecxz
lock
mov
sahf
cmp
xchg
xchg
mov
out
and
pop
out
loopne
out
les
sub
mov
jne
xchg
in
roll
cmp
xchg
into
inc
and
es
mov
jb
push
push
cmc
iret
or
push
mov
cmp
adc
mov
sbb
shlb
mov
mov
enter
mov
push
add
call
add
mov
mov
lods
add
nop
xchg
test
out
fwait
xchg
or
loope
addr16
mov
xchg
insb
xchg
dec
sbb
call
dec
adc
int3
icebp
inc
stos
repnz
jno
or
mov
dec
xchg
rorl
add
enter
xchg
loope
pop
jb
test
rorb
lods
cmp
call
lret
jg
repz
sbb
pop
xchg
jg
icebp
jo
cmp
fldt
sub
test
loop
dec
mov
push
stc
add
add
jne
cmp
out
jl
push
sbb
xor
je
rcll
cmp
sub
into
mov
xchg
fdivrl
pmaddwd
shl
add
repnz
je
or
notb
push
push
dec
imul
or
cmp
out
cmp
cmc
sub
adc
or
aad
hlt
shll
mov
test
xchg
icebp
mov
add
insb
mov
sub
scas
addr16
nop
push
stc
cmpsl
lea
pop
and
hlt
dec
jp
jnp
mov
lods
adc
jl
imul
sbb
cmp
inc
imul
mov
sub
std
and
cmp
bound
jae
inc
and
arpl
jl
fsubrp
test
icebp
aam
cwtl
fwait
push
loop
ljmp
mov
mov
out
or
xchg
adc
rorb
mov
fucomip
test
push
aad
cmp
adc
rorb
inc
sahf
jmp
cmp
or
sub
adc
cmp
into
mov
fmulp
jp
fsubl
into
dec
jmp
dec
jns
into
pop
inc
frstor
insl
das
sub
mov
add
sbb
mov
enter
adc
leave
sub
xchg
cmp
or
jmp
sbb
jns
in
and
int
pushf
repz
add
cs
jnp
pop
fldt
ret
lfs
adc
daa
push
ljmp
icebp
loope
in
jp
dec
mov
jmp
cli
dec
int
stos
xor
in
jbe
or
fistpll
mov
xchg
xchg
daa
lret
je
mov
adc
vpor
xor
xor
push
inc
sub
and
cwtl
and
cmp
in
gs
xchg
adc
inc
fisttpl
out
mov
inc
mov
sbb
jmp
divl
daa
or
mov
fcmovu
movsb
je
jl
popl
les
xchg
sbb
xchg
mov
fdivl
ret
out
dec
add
add
arpl
stos
ljmp
cli
aad
sarl
pop
mov
mov
xor
xorl
stos
pop
or
shll
sbb
jmp
repnz
imul
inc
jge
lods
clc
je
jl
mov
cs
and
into
ret
cmp
scas
cmp
sub
cltd
cmc
mov
jo
or
mov
adc
jle
pop
and
repz
mov
dec
std
mov
xchg
dec
icebp
les
js
mov
and
sub
ja
pop
jmp
roll
pop
nop
jl
prefetch
mov
jge
xchg
jo
popf
or
out
cvtps2pi
stc
dec
and
adc
dec
push
loope
idivl
and
and
cld
mov
stc
call
mov
mov
inc
xchg
mov
cmp
das
mov
out
fcoms
inc
sti
push
push
add
mov
jno
push
adc
out
scas
pushf
sbb
lea
js
aam
cmp
test
jg
ret
cmp
fs
add
andl
nop
cmpsl
es
cmc
icebp
pusha
cmp
inc
jnp
aam
stc
dec
fldcw
push
lds
cmp
fxch
mov
aas
pusha
lahf
aad
iret
hlt
xchg
lahf
das
aad
dec
xchg
push
xor
or
test
mov
mov
mov
into
leave
in
pop
shrb
add
sub
mov
push
pop
jge
adc
lods
stos
pop
cmp
jb
data16
mov
and
loopne
movsb
mov
jb
xchg
in
push
cli
divl
cmp
push
mov
sbb
addr16
or
jp
and
mov
loopne
cmpsb
clc
shlb
cmp
je
out
jl
cld
out
jo
push
cmpsb
cmp
pusha
mov
js
sub
bound
mov
inc
test
inc
nop
jo
fucom
sub
mov
and
or
push
jmp
nop
dec
push
int
test
test
adc
int
mov
daa
mov
out
jnp
xchg
sbb
mov
or
add
movsl
mov
mov
lcall
push
jmp
mov
paddw
adc
pop
and
push
inc
fnsave
lds
push
daa
cmp
mov
ds
sbb
inc
notb
hlt
cld
cmp
inc
push
sbb
pop
test
cmp
mov
fdivrs
inc
lds
dec
out
cmc
dec
stos
xor
inc
xchg
and
cmp
in
mov
rcrl
push
sub
jnp
mov
jge
and
fdivp
stos
sub
adc
mov
fstps
out
call
or
lock
cmpsl
lea
cmc
andb
inc
xchg
add
sub
gs
andb
pop
or
clc
out
sub
dec
sub
cli
adc
aas
pmaddwd
jecxz
pop
xchg
ljmp
testw
adc
int3
sti
shll
or
cmc
add
test
push
aad
mov
frstor
sti
or
jg
cli
xor
jl
loopne
add
xchg
add
push
fwait
int
popa
test
adc
or
fnsave
in
cmp
sbb
mov
popa
jle
dec
xchg
mov
push
std
mov
lcall
sbb
push
mov
lahf
xchg
js
fistpll
nop
mov
cli
xchg
mov
insb
or
jecxz
add
mov
push
sub
cmp
xchg
repz
js
loop
jp
push
sub
and
cmpsl
cmc
inc
adc
divl
cmp
addr16
or
xchg
inc
cmpl
negb
mov
pop
leave
sbb
jg
cli
repz
cmc
xorl
movsl
dec
lods
add
add
adc
lcall
jo
test
bound
sub
xor
stc
jp
popf
sbb
xchg
adc
cmp
jl
repnz
repz
sbbb
adc
inc
sub
repz
test
jp
mov
sar
out
sub
adc
imul
jmp
xchg
add
cmpsl
inc
mov
mov
mov
cmpsb
sub
fwait
xor
mov
test
mov
push
inc
movsb
pop
fisttpl
or
in
mov
and
xchg
push
scas
popa
pusha
sub
out
or
mov
ljmp
mov
call
sbb
or
fwait
mov
push
lret
adc
fdivs
mov
popf
es
pop
or
add
bound
and
insb
enter
je
fnstenv
cli
call
mov
popa
sub
mov
push
mov
in
xchg
adc
scas
cli
inc
push
scas
push
mov
pop
inc
mov
mov
decl
pusha
mov
rol
sbb
repnz
decb
cmc
xor
fsubrl
notb
or
xchg
dec
mov
pop
add
call
iret
pop
adc
fdivrs
out
dec
aad
cmpsb
xorb
cmc
dec
int3
inc
cmpl
xchg
jo
les
loopne
sarb
and
sahf
scas
and
pop
cmp
cld
sub
mov
mov
pop
cmp
push
inc
faddl
inc
scas
shll
int
mov
imul
out
js
adc
mov
or
ljmp
les
xchg
cli
mov
mov
shl
push
jbe
adc
in
lods
std
aaa
in
xchg
xchg
stc
push
adcb
les
sbb
dec
pushf
mov
mov
cmpsl
das
aad
scas
xchg
dec
arpl
fnstenv
mov
into
and
in
or
inc
dec
dec
jg
mov
dec
mov
inc
xchg
xchg
adc
in
add
mov
mov
enter
out
mov
lret
mov
pop
out
sub
and
push
shlb
inc
push
jp
int3
sub
ss
js
sub
add
dec
js
fistpll
cmpsl
xchg
xorb
xchg
cld
nop
cmpsl
in
sub
cmp
mov
out
pop
aad
icebp
ja
lea
lcall
xchg
in
aaa
test
mov
test
dec
pop
mov
pop
data16
adc
aad
js
cmpsb
aam
outsb
mov
add
cmc
jmp
mov
lret
and
push
or
test
xorl
data16
lds
call
inc
jbe
into
call
sub
cmc
and
push
mov
stos
pusha
sbb
jl
cmpsb
popf
mov
ja
pop
js
add
imul
sub
imul
inc
arpl
jnp
push
inc
shlb
aad
mov
or
sbb
pusha
loop
in
adc
jge
stc
out
loope
sbb
push
mov
and
stos
and
lss
mov
test
stos
sbb
inc
mov
and
adc
add
xchg
jns
mov
sti
and
jb
adc
mov
mov
out
xchg
and
cmp
sub
add
loop
or
jo
es
fimuls
clc
out
aad
and
mov
push
call
or
push
push
push
dec
add
test
and
cmp
cli
cmp
add
and
fstpl
in
imul
jecxz
push
push
popf
pop
notl
jb
sub
adc
xchg
sub
stos
mov
rcrl
dec
inc
outsb
lret
std
lahf
aad
cmp
aam
out
pmaddwd
jb
inc
cmp
into
xor
in
ret
mov
add
cmpsb
inc
aam
sti
xchg
gs
imul
lahf
inc
xlat
mov
mov
mov
dec
cmc
clc
nop
xlat
sbb
jg
cli
mov
inc
cwtl
push
cli
sbb
xchg
loop
popa
xor
sub
and
dec
test
jg
cmp
xchg
xchg
or
out
sub
lret
insl
sbb
mov
mov
fstl
int3
mov
sub
aad
jge
lahf
test
mov
sbb
in
mov
dec
ss
aam
outsb
out
pop
jmp
and
sub
mov
lds
std
mov
aad
dec
pushf
inc
cmpsb
out
cmc
outsb
pop
xor
js
and
shrb
dec
pushf
cmpsl
roll
test
into
mov
sbb
mov
xchg
hlt
daa
out
push
fsubl
das
lahf
movb
cmc
mov
ror
in
xchg
sub
jp
ret
bound
adc
jp
lcall
cmp
sub
jb
push
in
xorb
int3
andb
mov
xchg
ss
adc
push
daa
add
cmp
mov
cmp
idivb
pusha
std
dec
movsb
idivl
call
aas
sub
sub
add
xchg
xor
ja
in
add
fwait
lahf
push
mov
jo
xchg
pop
test
popa
xchg
mov
add
out
mov
pop
stos
js
push
jbe
insb
popf
xchg
sti
cmpsl
jp
sub
rcrl
jg
fmul
call
call
out
sub
sub
xchg
cmp
jmp
je
int
pop
repz
adc
jnp
adc
andb
aaa
cmpsb
rol
mov
jmp
test
xchg
xchg
les
in
clc
stos
call
adc
xchg
imul
add
push
cmc
push
lea
lea
adc
and
mov
in
aaa
xor
pop
cwtl
icebp
jno
dec
xor
and
mov
sarl
xor
mov
adc
pop
add
cmp
or
adc
cmp
cmpsl
jmp
sub
mov
pop
jl
push
adc
cmc
push
cmp
dec
add
sahf
test
lahf
inc
sub
insl
xchg
dec
jle
shll
mov
push
loopne
popa
pop
push
lahf
lock
test
jo
mov
or
or
xor
flds
mulb
jecxz,pt
adc
jp
ds
mov
daa
enter
jmp
in
loop
push
adc
sub
inc
inc
shlb
pop
fdivl
jle
push
in
and
lods
pop
or
adc
sub
or
dec
xlat
dec
sub
cmc
mov
mov
out
shr
test
jo
mov
call
fists
jnp
sub
fsubp
les
and
or
aad
js
movntq
xchg
out
icebp
jge
inc
movlps
and
sarl
scas
mov
jmp
xchg
shl
lods
stos
cltd
int3
hlt
dec
xchg
dec
sbb
push
lods
xchg
jo
std
push
push
js
popa
mov
out
fisubrl
in
push
mov
pop
ja
xchg
xor
sti
add
test
ror
jp
dec
das
in
lret
mov
cmc
int3
leave
mov
sub
sti
test
rcrb
testb
jnp
jge
int3
adc
lock
ja
sub
aad
pop
jp
into
cmpsl
cli
iret
push
idiv
push
in
in
jg
mov
cmp
imul
push
bound
mov
cmpsl
test
sti
fs
gs
lahf
xchg
inc
pushf
cmc
sbb
ljmp
push
out
aas
dec
fsubl
add
aad
adc
add
mov
icebp
std
pop
jp
mov
push
imul
push
test
adc
dec
jo
xor
push
xchg
mov
adcl
adc
sbb
adc
addr16
ficoms
and
stos
push
lahf
repnz
jno
hlt
and
insb
loopne
or
push
fmuls
push
adc
push
aad
xlat
cmc
mov
xchg
leave
mov
or
sub
sar
ret
mov
lahf
inc
test
outsb
pop
sbb
imul
out
dec
adc
sti
push
enter
sub
xchg
inc
jnp
jb
iret
pusha
xchg
test
sub
lret
jnp
addr16
pusha
xchg
mov
xor
jmp
lahf
push
cmc
int
xor
pop
shlb
dec
cmp
mov
out
mov
or
rorl
sbb
lods
scas
jg
shlb
sub
jecxz
mov
add
mov
sbb
sub
fcmovnb
rcll
jnp
mov
sbb
xchg
adc
or
push
imul
and
fucom
cmc
mov
or
inc
repnz
js
mov
cmp
les
loope
popf
test
sbb
cltd
dec
psubsb
mov
sbb
scas
cmpsl
bound
pop
inc
gs
xchg
sbb
mov
mov
or
pop
adcb
call
mov
xchg
movsb
je
fistl
aad
loopne
lret
mov
rorb
add
scas
cltd
add
jne
jbe
pop
mov
fcmovnbe
cmp
in
insl
dec
enter
pop
xor
mov
lods
inc
xchg
adc
mov
paddw
subl
push
xor
in
aaa
ja
sti
imul
add
add
call
cld
push
cmp
clc
adc
ljmp
sub
add
addl
or
lea
jbe
or
xchg
and
mov
sbb
mov
xchg
push
push
sub
inc
xchg
add
in
lahf
insb
xchg
mov
add
jb
jo
sub
fmull
test
mov
lcall
in
jge
push
fdivrs
imul
out
icebp
repnz
outsb
adc
shlb
jp
out
notb
inc
inc
or
scas
jnp
in
add
mov
cmc
dec
lahf
imull
pop
mov
bound
xchg
aad
repz
push
jg
or
sbb
mov
gs
cld
or
dec
pop
sub
ljmp
xor
js
dec
mov
cmp
aas
data16
jo
test
mulb
and
dec
jp
out
add
leave
iret
jns
cs
cmc
lret
xchg
inc
out
das
scas
pop
xchg
and
lods
addr16
outsb
aad
push
xchg
imul
gs
sti
mov
out
add
or
sahf
inc
jmp
out
dec
popa
jno
cmp
nop
ds
sbb
je
mov
incl
shll
jb
ljmp
bound
das
mov
fbld
push
aad
dec
ja
jnp
xchg
push
fcmove
scas
add
add
pushf
popa
pusha
ljmp
sub
sbb
add
cmc
mov
xchg
fisubrl
aam
test
sarb
stos
jo
sub
aad
sti
into
fcoms
dec
outsl
pop
out
iret
clc
pop
push
adc
jmp
dec
cmp
push
outsl
jb
sub
mov
mov
lods
int
cmp
xor
cld
push
add
popf
mov
pop
sti
xor
shl
and
mov
xchg
xchg
xchg
stos
or
or
dec
notl
pop
popa
jle
ds
fwait
jp
fcom
fidivs
push
pop
mov
inc
jnp
fs
push
int
aad
lahf
cmpl
cmpsb
dec
lods
outsb
iret
mov
pop
mov
rcl
pop
gs
xchg
cmpsb
cmp
sbb
cmovge
testl
sarb
or
jb
jl
pop
fcomps
or
lock
pop
pushl
xchg
fcmovnb
inc
dec
negb
inc
xor
sar
jl
rorl
sub
xchg
sbb
and
xchg
adc
sahf
mov
push
ds
stos
push
cs
adc
das
xor
test
loope
xchg
mov
pop
xchg
out
or
adc
ja
push
sbb
sub
cli
dec
inc
adc
pop
jns
add
decb
pop
xor
inc
outsl
ja
dec
jne
inc
jne
int
dec
xchg
sub
mov
jecxz
scas
mov
mov
int
aad
dec
mov
jecxz
jo
jmp
jmp
fsubr
pop
jae
jl
popa
jnp
dec
repnz
out
cmc
cltd
jb
cli
sahf
aad
and
mov
inc
into
enter
and
or
mov
orb
test
scas
xchg
lret
aad
mov
popl
sub
mov
nop
stos
mov
xor
jg
lcall
push
xor
imul
cmc
xor
movsl
jae
pop
push
or
push
ss
push
pop
sti
mov
mov
mov
pop
iret
cmp
shrl
loope
fsubl
lds
les
jo
xchg
scas
sbb
jmp
cs
and
mov
aad
push
shl
fmuls
jns
cmpsb
cmp
jnp
and
pop
mov
inc
adc
cwtl
vmovupd
out
xchg
nop
jmp
xor
inc
lahf
in
or
sbb
xchg
jecxz
pop
jl
daa
mov
push
stos
cmp
or
or
lods
jns
fisubl
xor
daa
scas
mov
sub
add
ss
and
lcall
filds
gs
adc
xchg
xchg
mov
dec
inc
and
movsb
jmp
push
mov
add
outsl
adc
fwait
popf
pusha
insb
outsl
arpl
icebp
cmc
in
cbtw
inc
addr16
mov
fdivrs
cmp
mov
pop
js
pop
mov
addr16
sub
jmp
shlb
lods
mov
mov
or
adcb
cmc
pushf
int
das
mov
pop
sti
adc
fwait
pop
pop
xor
cmp
jg
cltd
sbb
xchg
xor
sbb
xchg
xlat
out
xor
mov
dec
int3
cmp
pop
fiadds
in
pop
aad
jae
dec
mov
test
adc
mov
mov
pusha
dec
mov
notl
and
loop
lods
cmc
fxch
icebp
test
loopne
jmp
shlb
lods
jns
fsubs
add
push
mov
push
cmp
dec
push
sub
jae
stos
sub
adc
test
adc
je
bound
arpl
popf
dec
nop
and
mov
insb
sub
scas
xor
stos
mov
in
inc
and
jmp
rolb
insb
cmc
jae
xchg
es
add
push
rcrl
sar
lock
orl
dec
add
idiv
jmp
test
inc
movsb
pop
fisubl
mov
inc
lar
fucomp
add
jmp
pop
xchg
imul
lds
test
cmc
inc
js
push
imull
mov
xlat
outsl
insl
push
pop
pop
add
sti
and
push
add
in
xor
and
jns
dec
in
cmp
and
ficoml
pop
or
cmp
pusha
mov
movsl
stos
into
pusha
cmp
fbld
sbb
xor
sbb
xchg
int
test
stos
sub
pop
adc
hlt
out
cmp
adc
xchg
or
inc
mov
lret
pushl
je
fidivrl
std
jmp
jmp
inc
lods
push
pop
xor
lcall
dec
les
insl
lock
or
imul
mov
sahf
shlb
repnz
movsb
jb
jecxz
inc
icebp
and
enter
xchg
dec
pop
push
shl
pop
movsb
inc
push
mov
mov
cmp
fwait
imul
lods
idivl
push
adc
cltd
stos
js
lcall
in
pop
out
cmpsb
cmc
push
ss
hlt
out
popa
jbe
mov
add
or
cmp
mov
mov
test
call
ret
lods
cltd
fsubs
jp
mov
aad
dec
mov
lea
or
and
xchg
popa
fmull
inc
in
pushf
adc
cli
xchg
sbb
fcmovnbe
mov
cwtl
mov
push
xchg
imul
ficomps
sub
loop
andb
jnp
in
icebp
lret
in
hlt
lds
sbb
out
xchg
sub
mov
push
lods
std
sbb
jle
out
adc
or
lods
pusha
mov
xchg
adc
les
ja
xor
jg
add
xchg
lock
xor
fdivs
jnp
fcmovnu
xor
inc
or
enter
cwtl
mov
mov
jo
loop
add
push
dec
push
test
xor
mov
cmp
ljmp
mov
xor
dec
sbb
push
and
xchg
outsb
jl
jns
mov
or
pop
and
test
mov
mov
mov
sub
and
mov
push
fwait
sub
mov
cld
out
cmp
mov
insl
add
xchg
xchg
punpcklbw
pop
shll
sub
mov
jno
add
stc
jl,pn
arpl
pop
xchg
dec
sbb
jle
cli
nop
cmpsb
pusha
mov
and
sti
adc
test
dec
stc
xor
clc
mov
adc
leave
xchg
sub
cmp
xor
dec
xchg
push
scas
int
mov
cmc
jecxz
icebp
cmpl
lea
add
add
sub
sbb
push
lea
mov
jl
jmp
jbe
into
inc
lret
notl
rcr
shrb
aam
leave
outsl
pusha
push
jge
loopne
jmp
and
test
inc
fstpl
sarb
shll
cli
inc
adc
mov
out
or
test
cwtl
push
into
pusha
add
std
push
cmp
sub
push
mov
push
insl
jnp
pop
xor
xor
in
and
xlat
repz
and
push
rcr
xchg
sub
mov
sub
xchg
mov
imul
inc
aad
inc
loope
sub
adc
sub
xchg
or
cmp
pop
repnz
push
ret
movsl
mov
scas
ds
pusha
bound
sub
ja
hlt
sti
sub
arpl
push
imul
xchg
imul
xchg
test
std
inc
rorl
lea
jge
adcl
mov
mov
xchg
xchg
adc
dec
dec
push
gs
mov
in
cmc
and
fwait
mov
scas
stos
and
int
jle
setne
and
cwtl
out
ret
or
cli
div
cmc
adc
cmp
sbb
lods
adc
mov
outsl
rorb
adc
dec
inc
fs
sbb
pop
clc
jnp
test
jp
inc
test
jle
mov
cmp
aad
cs
rcr
xchg
dec
loope
mov
por
mov
outsb
mov
dec
lods
mov
mov
nop
cmp
adc
hlt
mov
push
imul
cld
shr
fisubl
shl
push
push
xor
imul
out
jl
repz
cwtl
ljmp
lcall
outsb
stos
push
add
test
push
jp
cwtl
leave
cwtl
roll
inc
mov
lcall
clc
xor
mov
mov
pop
jl
sub
sub
xchg
push
sarl
rclb
popa
rcl
stos
inc
hlt
jl
loop
es
pop
int
mov
sub
icebp
addl
jecxz
repz
inc
nop
lock
jmp
mov
add
cmp
or
mov
popf
jbe
push
xchg
sarb
jbe
xchg
test
mov
into
inc
xchg
movsb
clc
les
add
push
push
popf
int
jmp
std
jnp
stos
inc
cmp
int
mov
aad
adc
pop
add
mov
js
xchg
aad
lsl
xchg
jno
mov
ror
js
or
cmp
add
js
mov
std
sbb
js
lahf
xchg
ds
out
cmp
mov
dec
int
cmpsb
or
aad
mov
pop
dec
out
call
mov
and
mov
pop
out
push
cmp
adcb
push
push
push
not
neg
add
lahf
xchg
pop
jnp
dec
iret
mov
mov
iret
xchg
and
ret
jns
stos
inc
and
scas
xor
lods
mov
mov
and
aaa
or
add
push
clc
adc
aas
xchg
ljmp
add
jecxz
in
sub
cmpsl
es
adc
das
fistpl
scas
jmp
jl
mov
outsb
or
mov
aad
cmc
mov
imul
ret
in
sbb
movsb
aad
mov
pop
add
shll
mov
add
jl
into
cltd
arpl
xchg
mov
sarl
cmp
dec
mov
ret
fisubl
xchg
call
aad
jl
roll
fistps
sub
pop
sub
jns
mov
sti
imul
fists
cmc
orps
and
mull
arpl
inc
xchg
adc
in
push
in
lea
xchg
cmpsl
addb
mov
in
lds
lods
dec
push
loopne
lahf
xchg
rcl
loopne
dec
dec
xchg
adc
inc
test
stos
clc
sub
pop
dec
pop
les
imul
sub
fiaddl
cmc
addr16
push
popa
nop
sbb
xchg
xor
sub
pop
ljmp
into
aaa
lcall
push
in
sbbl
jmp
pop
lock
daa
es
aad
or
fwait
pop
jo
dec
scas
push
pop
sahf
into
lds
movsb
adc
and
test
mov
testl
popa
push
cs
out
fs
fldl
jg
lea
cmp
jo
loopne
dec
xor
mov
into
sub
lea
cmc
iret
shlb
das
inc
pop
pop
inc
add
jle
sbb
shrb
jb
sti
cmc
test
mov
pop
movsl
in
push
cmp
pusha
fwait
mov
aad
jp
adc
lods
add
clc
cmp
mov
std
jnp
and
in
int
and
rol
lea
rorl
push
xlat
pop
fimull
lcall
dec
inc
add
cld
cmp
xchg
cs
pop
cmpsl
adc
pusha
jo
jg
in
call
popa
sbb
and
xchg
aaa
mov
push
nop
xchg
mov
pop
add
mul
jno
into
xchg
push
shl
dec
sub
out
test
cmc
test
sub
adc
mov
and
mov
xor
mov
cmp
xor
cmpsl
mov
test
das
out
cmpsb
or
loope
out
push
repz
cmc
mov
nop
out
cmpsl
fisubrs
repz
mov
or
jbe
and
sahf
int
ret
push
mov
add
insb
decl
or
or
out
divl
cmp
fstpt
sahf
add
add
cmp
and
addr16
sarl
mov
jecxz
xor
ljmp
das
or
std
jecxz
dec
loopne
fdivp
adcl
mov
lcall
or
pop
cmp
sbb
cmp
loope
out
add
xchg
icebp
or
and
dec
add
cmp
push
cli
jno
jmp
inc
sti
jp
adc
aad
sub
repnz
push
dec
pop
cwtl
mov
add
movsl
loope
into
cmc
push
and
xchg
xor
cwtl
popf
sub
les
adc
inc
mov
adc
repnz
sbb
pop
pop
es
cmp
or
loopne
xchg
aad
adc
lods
mov
push
rorl
jne
inc
cmp
push
fsubl
ret
pop
aad
add
adc
rolb
adcl
stos
aad
std
mov
inc
movsb
pop
pop
into
aam
pop
repz
cmp
fcoms
jmp
dec
lds
and
jl
sti
das
mov
push
fnstsw
hlt
xor
inc
push
gs
sahf
cmc
outsb
sbb
adc
test
js
shl
dec
dec
shlb
cmc
mov
flds
stc
fs
jb
mov
cld
pop
add
pop
jecxz
jge
fsubs
cmc
int
movsb
sbb
mov
sbb
addr16
mov
xchg
xchg
sub
dec
cmp
jl
adc
and
nop
inc
adc
cmp
mov
cwtl
pop
cmp
sbb
sbb
notb
jmp
xor
outsl
in
add
test
cmp
jmp
or
aad
jl
test
mov
fstl
inc
stc
add
mov
cli
in
xchg
pop
mov
sub
push
sti
call
shrl
stos
sub
inc
div
inc
pop
xchg
push
sub
decl
pop
lods
or
bound
push
sub
je
xor
mov
push
icebp
lods
test
jecxz
insb
outsl
ljmp
mov
fdiv
fldcw
or
and
popa
clc
mov
or
mov
mov
jge
and
les
add
sub
or
stc
and
ss
das
xchg
xchg
mov
lods
fisttpll
into
push
jo
lahf
and
daa
and
adc
mov
cmc
inc
mov
mov
mov
cmp
mov
mov
jne
mov
mov
sbb
or
jo
lods
scas
sub
insb
inc
fucomip
sub
rcll
ss
shrl
mov
mov
repz
or
scas
mov
push
std
rclb
sub
and
fbld
add
loope
inc
insb
mov
mov
inc
aam
cwtl
int3
dec
test
out
xchg
mov
xchg
mov
dec
divb
xor
inc
sub
cmp
xchg
rolb
jge
cs
das
daa
xor
mov
ss
fisubs
push
inc
stos
subb
scas
jnp
adc
pushl
xchg
or
add
js
ret
mov
loope
cwtl
maskmovq
or
gs
pop
rdtsc
and
iret
cmp
jmp
jnp
cmp
or
mov
xchg
xlat
pusha
sbb
out
sarb
popa
cltd
mov
jl
adc
lock
leave
cld
loop
push
fndisi(8087
int3
lahf
fsubrl
aad
or
and
movsl
js
sbb
addr16
cmp
jl
adc
pop
mov
aas
pop
aad
mov
push
data16
add
fbld
pop
jl
push
cmpb
xchg
cmp
out
fldl
out
out
jge
shrl
dec
jns
into
push
xchg
push
adc
popf
clc
std
fstp
dec
call
aam
cwtl
sahf
or
popa
out
insl
iret
xchg
and
push
mov
in
outsl
lods
mov
iret
aad
dec
lods
xor
or
add
mov
push
inc
push
cmp
outsl
js
inc
in
xor
cmp
iret
xor
and
add
sub
xchg
cmpsl
pushf
out
cmp
cmp
push
add
arpl
and
iret
lock
xchg
popf
mov
rol
sbb
sub
jl
stos
int
mov
push
mov
cmp
imul
xor
iret
or
loopne
enter
pusha
and
mov
sub
and
icebp
js
outsb
scas
movsl
mov
dec
sbb
scas
sbb
test
cmp
or
ficomps
lock
jl
jg
add
shrb
cltd
xor
scas
cmc
inc
roll
xor
adc
in
cli
insl
imul
jo
pop
mov
xchg
movsb
pop
clc
mov
insb
cmc
push
cmpb
xchg
fwait
pop
inc
push
aad
lods
insb
cmc
out
ret
fwait
dec
cld
jnp
push
cs
rcll
xchg
sub
repz
sub
sub
jmp
ret
lods
cmpsb
fdivl
out
add
std
jecxz
inc
stos
pop
cmp
in
cmp
or
addr16
jnp
or
cwtl
xchg
shr
mov
shrb
shll
and
out
xchg
and
dec
cmp
inc
jg
mov
mov
pop
je
mov
xor
aaa
mov
notl
scas
sbb
and
in
in
rep
sub
dec
aad
cmc
mov
sub
out
ds
repnz
jge
mov
into
mov
adc
add
aad
jge
loop
imul
fbstp
and
data16
mov
pop
mov
cmc
add
popa
mov
cmp
mov
divl
xor
dec
pop
inc
cli
mov
in
std
dec
mov
cmc
dec
fnstcw
cmpb
jae
dec
fcoml
sti
nop
sub
adc
adcb
dec
aad
dec
test
fiadds
popf
sbb
inc
sti
mov
adc
adc
adc
movsl
push
add
clc
or
pop
xor
dec
mov
aad
adc
into
jns
in
sub
mov
js
push
add
insb
outsb
jecxz
push
or
push
dec
inc
in
repz
out
push
shlb
popf
jge
pusha
dec
xor
cmp
popa
adc
out
cmpsl
dec
ja
popw
cltd
jp
iret
pushf
ret
dec
xor
scas
leave
rorb
add
xor
add
js
bound
jb
xor
inc
aaa
dec
cmp
cmpsl
and
add
out
mov
addl
mov
fs
or
test
aam
xchg
mov
and
ss
in
adc
lret
pushf
stos
adcb
dec
mov
cmpsb
pop
push
movsl
stos
test
sub
push
push
call
xor
test
and
pop
rclb
inc
xchg
push
notl
jae
sub
stc
scas
sti
and
add
int
fcoms
loope
or
push
sub
mov
ret
and
aas
mov
sub
pop
pop
mov
push
fldcw
sbb
ja
insl
ljmp
jmp
mov
sub
pop
sub
mov
out
cli
lahf
in
push
jnp
lods
dec
fldenv
cmc
xor
sti
mov
mov
add
dec
jmp
or
popf
or
xchg
cmp
rcll
cld
or
pusha
fucomi
jns
push
out
arpl
iret
and
dec
inc
xlat
test
cmp
dec
cmc
ficomps
mov
dec
xchg
inc
shr
xchg
dec
es
ret
xchg
divl
daa
ljmp
je
cltd
mov
xor
pusha
fildll
mov
mov
loope
scas
movsl
ffree
or
push
filds
loop
cmc
adc
xor
cmp
std
in
cmp
push
mov
lods
je
rcr
cmp
fldenv
clc
aad
cmp
repnz
sbb
cwtl
into
fdivr
adc
or
mov
and
clc
sub
lods
dec
mov
sbb
fisubrs
add
aad
fwait
pusha
out
push
cmp
dec
rol
pop
insb
sbb
cmpsb
or
cli
pop
mov
sahf
pop
cmp
cmp
jp
out
cmc
xor
xor
add
adc
xor
movsl
or
lds
out
xor
add
repnz
nop
sbb
inc
cltd
push
pop
cmp
decb
pop
push
sbb
js
hlt
popa
in
inc
std
jl
aad
pushf
or
fadd
iret
js
mov
dec
xchg
nop
je
lret
push
test
add
or
popa
sub
ss
xchg
sahf
jg
into
cld
or
mov
int
iret
sub
push
pop
jge
cltd
imul
jg
mull
or
loop
out
outsl
out
jmp
pop
sub
fldt
stos
iret
jmp
aad
mov
xor
sti
cmp
and
mov
jl
inc
popf
out
xchg
sahf
cmp
aam
add
fmul
push
adc
sahf
and
mov
jl
adc
inc
sahf
ss
loop
push
mov
jb
loopne
scas
cmpsb
clc
in
jl
ret
loopne
in
cmp
jbe
sbb
lret
out
jno
std
mov
int
cs
inc
or
jb
adc
jbe
or
or
adc
lcall
mov
aad
bound
inc
mov
mov
sub
int
filds
dec
hlt
mov
inc
cmc
iret
mov
dec
shll
out
repz
les
add
ret
xchg
in
stc
in
sbb
xchg
mov
in
hlt
andb
adc
cmp
or
dec
xchg
adc
mov
push
mov
add
jle
inc
movsb
enter
insl
mov
push
lret
in
push
ficomps
arpl
test
lds
in
push
shlb
adc
or
push
std
mov
aaa
lods
loop
out
jns
negl
inc
mov
std
cmc
cwtl
int
lods
sbb
dec
clc
mov
push
cli
push
and
sub
push
out
rcrl
out
inc
or
sub
sbb
mov
test
mov
les
mov
arpl
xlat
call
je
mov
xchg
std
rolb
inc
ja
inc
and
mov
notl
lret
mov
ljmp
jo
jge
in
nop
in
sub
mov
mov
movsb
cld
pop
xchg
pop
fsts
lock
fdivrs
hlt
lds
sahf
jle
es
and
jp
xchg
fdivr
mov
mov
adc
or
jbe
push
mov
jo
loop
mov
mov
xchg
addr16
inc
cmc
and
lock
sbb
insb
xchg
xchg
adc
les
std
call
shrb
imul
cltd
in
mov
or
dec
lret
mov
add
mov
push
sub
xchg
push
or
push
fdivrp
add
xor
xor
stc
adc
loope
jecxz
or
push
dec
cmc
jne
imul
mov
pop
or
push
int3
aad
clc
outsl
sbb
daa
sub
cmp
mov
inc
sahf
mov
inc
adc
jns
in
jno
stos
das
mov
ljmp
in
xor
push
jmp
clc
aas
dec
xlat
mov
lcall
add
add
filds
das
cmp
leave
and
push
cmpsb
push
mov
mov
mov
add
nop
mov
mov
rcr
sub
jg
and
adc
es
mov
rcll
mov
cmpsl
push
loope
fcompl
cmp
xchg
pusha
repnz
pop
xchg
arpl
hlt
xchg
inc
sbb
push
fidivrs
aad
mov
mov
mov
mov
loopne
lods
add
lods
mov
aad
sub
in
mov
out
push
mov
imul
cmc
sahf
pop
add
and
loope
jmp
inc
xor
je
xchg
xchg
or
pop
aas
jl
lcall
insl
mov
dec
xchg
adc
ret
sbb
sub
popa
dec
lcall
inc
or
push
rcrl
cwtl
cmp
mov
cmp
jnp
push
nop
dec
or
xchg
cmp
scas
sub
push
aam
push
xchg
test
jmp
push
and
aad
mov
shl
jge
jp
cmp
movsl
push
fwait
pop
inc
aaa
add
icebp
orl
cld
pop
mov
sub
frstor
in
jge
push
sbb
sti
scas
into
int
push
jp
lea
pop
in
push
mov
mov
int
jge
jno
push
jg
cli
nop
mov
or
aaa
jnp
pushf
sbb
not
mov
imull
cmp
fidivrs
mov
mov
fwait
jecxz
or
sub
pushf
jmp
and
sar
into
dec
pop
adc
loop
xchg
jl
cmp
int
sbb
pushf
lret
mov
out
in
cld
add
add
xchg
push
push
mov
leave
sbb
out
push
mov
dec
in
into
movb
aam
dec
xchg
dec
and
imul
inc
out
iret
add
pusha
fsubr
ljmp
push
pop
sub
icebp
cmpsl
dec
lret
inc
jp
shld
imul
jg
cmp
mov
lcall
jecxz
aam
xchg
mov
push
fdivrs
imul
or
call
inc
leave
cmpsb
mov
scas
jo
sub
out
cmpl
iret
sbb
cmc
fcmovu
xor
cmp
test
push
or
fidivrl
and
call
adc
cmp
dec
inc
repnz
mov
call
xchg
rorb
pop
in
or
popa
rcll
jecxz
cmp
add
mov
cmc
dec
fnsave
dec
js
or
dec
pop
stc
mov
push
mov
cmp
xor
push
sub
mov
pop
sbb
mov
js
dec
fcom
mov
fs
ja
sbb
sub
and
push
jb
or
cmpsb
fcmovbe
jns
xor
loope
pop
cmc
fiaddl
mov
mov
jp
and
sub
mov
sti
xchg
or
mov
or
push
xchg
inc
js
adc
adc
dec
fcoml
aaa
int
scas
pop
xchg
aad
fs
xchg
sbb
out
jge
out
fstpl
fs
icebp
sub
xchg
cmp
cltd
push
inc
aad
cmp
dec
cmp
fidivl
mov
out
or
std
or
out
add
xor
jg
aad
ja
xor
xlat
jg
jle
and
ret
xchg
sbb
sub
loope
sbb
in
dec
push
mov
xchg
xor
mov
cmp
shr
mov
xor
movsb
add
into
or
fs
movsbl
popa
cltd
movb
inc
xchg
jge
gs
ret
pop
push
fmulp
or
fnstsw
jns
dec
mov
fs
xlat
push
aad
rclb
cmp
fwait
mov
xchg
xchg
cltd
jae
std
popf
mov
clc
sbb
sarb
and
lods
hlt
mov
in
addr16
testl
mov
xchg
adc
jne
sub
push
inc
sub
jno
cmp
or
daa
cmp
pushf
and
repz
loope
clc
aam
dec
mov
and
mov
xchg
test
sbb
in
fcomps
aad
ja
jg
lcall
scas
scas
or
adc
pushf
loop
loopne
scas
mov
clc
iret
cmc
push
jl
sub
data16
sbb
pop
cmp
mov
mov
pop
mov
mov
pop
jns
dec
push
mov
movsl
push
cwtl
std
xchg
push
push
les
push
jo
dec
out
mov
test
aad
stos
add
jmp
mov
cmp
xchg
loop
lods
pushl
jne
dec
xchg
jmp
fidivl
jg
add
push
in
in
rorl
notl
xchg
aad
lea
mov
pushf
ss
mov
out
addr16
nop
and
int
sarl
lahf
xchg
xchg
movb
mov
test
pop
lds
sbb
xorb
loopne
lahf
popa
sbb
outsl
sti
jb
cld
jmp
mov
sbb
cmpsl
mov
sbb
and
push
in
aaa
popf
dec
bound
lcall
clc
stc
adc
push
sub
jns
mov
int
cmp
fcoms
mov
push
fstpt
mov
sub
aad
sbb
loop
call
scas
jae
das
imul
cltd
ret
pop
fidivrl
ret
sub
cmp
jae
and
cmp
outsl
sti
mov
fmull
jp
nop
dec
mov
inc
pop
lods
daa
popa
cmc
mov
push
adc
inc
pusha
jge
out
xchg
mov
pop
or
adc
jmp
out
dec
and
or
and
dec
and
sub
push
push
movsb
aaa
mov
xor
xlat
adc
sub
lods
insl
rorb
mov
into
cmc
mov
inc
push
addr16
sahf
popa
adc
add
jno
and
ss
add
enter
mov
xchg
movsb
ss
mov
sbbb
test
cmc
in
rclb
aad
fs
jae
iret
in
push
shll
in
dec
out
add
mov
cmp
pusha
dec
fnstenv
add
stos
xchg
dec
bound
xor
push
pop
xor
scas
fldenv
inc
sub
lods
cmp
jne
mov
lds
xchg
cmpl
mov
push
mov
arpl
sub
mov
negb
dec
stc
test
push
fwait
adc
daa
xchg
lock
mov
cmp
aad
inc
push
xchg
add
outsl
addr16
or
jnp
aad
cmc
push
or
rclb
sti
pusha
or
mov
mov
pusha
pushf
fs
aad
lock
outsb
inc
int3
sbb
sub
mov
push
or
adc
add
xchg
cmp
rcrb
inc
push
mov
roll
pop
sbb
out
shrb
lock
or
idiv
cmc
push
push
and
das
push
pop
lods
ljmp
pop
ds
cli
into
les
lods
xchg
or
loop
cmc
adc
jns
test
mov
lods
loope
rcrl
call
mov
lock
stos
scas
out
insl
inc
lret
into
jns
in
dec
inc
aaa
cmp
add
movsb
js
int
cmpsl
pop
or
imul
sbb
das
shl
fisttps
and
in
addb
xchg
mov
icebp
add
stos
out
mov
shrd
out
mov
jnp
aam
jmp
sbb
xchg
sahf
testb
adc
xchg
cmp
and
orl
stos
stos
inc
test
dec
xchg
mov
sub
cltd
cmpsl
mov
xchg
loopne
lahf
push
mov
aad
inc
or
mov
ja
mov
test
push
pop
cli
sti
inc
xor
push
or
clc
sar
jl
push
out
aad
adc
adc
inc
sarl
jmp
xchg
push
jge
sbb
mov
mov
shl
mov
jecxz
mov
dec
js
dec
movsl
cmc
aaa
shll
cltd
les
add
adc
fwait
std
fstpt
popf
add
cmp
push
cs
xor
out
aad
popf
mov
out
adc
jecxz
add
inc
pop
cmc
inc
scas
out
aad
pop
adc
jl
dec
movsb
and
add
push
clc
mov
or
andl
out
bound
in
or
cmp
adc
js
ret
cmpsb
xchg
xchg
jne
ds
mov
in
xchg
xchg
adc
push
lcall
vprotq
lret
cmp
shlb
xchg
out
xor
loop
or
mov
orb
adc
loop
xchg
mov
filds
sbb
dec
push
aam
mov
call
or
xchg
iret
lahf
loope
scas
orb
js
std
sbb
popf
mov
leave
rorl
cmc
xchg
fbld
lock
sbb
cmc
dec
jg
dec
mov
add
or
ja
js
xchg
or
xor
sbb
pop
mov
ret
ficoms
rorl
dec
popa
jb
ds
jle
inc
out
inc
xchg
out
stos
cmp
cmp
out
push
adc
cmp
mov
inc
sti
xor
cmp
lcall
mov
cwtl
inc
cmpsb
add
add
stc
inc
cmp
dec
adc
xchg
cmp
adc
jmp
xor
mov
pop
fimull
mov
in
pop
add
test
mov
mov
into
xchg
cmc
or
adc
or
xor
fcmovnu
jno
aad
imul
orl
cwtl
mov
xor
sbb
dec
mov
inc
mov
pop
inc
mov
or
cmc
call
imul
mov
or
jmp
cmp
mov
sbb
xchg
mov
fcoml
xchg
add
pslld
int
jp
sahf
fbld
dec
pusha
push
fs
fsubrp
push
arpl
int
cmp
sub
dec
xchg
outsb
and
stos
call
mov
xchg
out
add
and
sub
jp
dec
dec
fwait
rol
js
cmpsl
xchg
rorl
xor
jmp
xchg
ds
or
inc
dec
aad
dec
test
sub
popa
sbb
xchg
mov
mov
mov
or
jb
and
int3
or
pmaddwd
or
jge
loope
sbb
in
pop
test
mov
mov
out
call
sbb
xchg
inc
out
pop
out
push
dec
mov
call
xchg
lds
xor
in
inc
into
rcl
cmp
mov
pop
cmp
rcll
push
or
fsubrl
rcll
push
in
xor
mov
pop
arpl
mov
sbb
or
push
mov
xchg
jo
xchg
fbstp
imul
mov
push
rcr
cwtl
das
cltd
xlat
pop
cld
and
inc
mov
incl
cmovb
and
sbb
or
push
and
mov
addr16
nop
jmp
xchg
jne
and
out
dec
adc
push
shll
mov
jmp
enter
popa
out
add
push
mov
out
jl
inc
mov
divl
lods
and
dec
sbb
jo
into
cmc
pop
fsubrs
sarb
repnz
mov
andnps
xchg
adc
stc
sbb
mov
ret
dec
fdivrs
movsb
loope
imul
jg
xlat
jne
lock
movb
add
jp
arpl
cmc
lods
imul
jmp
stos
mov
in
mov
test
cwtl
paddd
unpcklps
mov
mov
sub
inc
das
popf
cmp
incl
cmp
imul
test
dec
pop
inc
mov
in
movsb
imul
dec
test
lds
test
mov
je
loop
imull
testb
stc
or
push
xchg
sub
inc
push
jecxz
roll
dec
sub
ret
aad
ljmp
ret
lea
adc
mov
nop
xor
pop
dec
aad
push
repz
pop
rcrl
inc
jge
fsubrl
add
ds
pop
in
mov
enter
jmp
mov
mov
clc
iret
in
inc
test
js
mov
mov
adc
dec
sbb
mov
rclb
loopne
call
pop
mov
mov
push
out
dec
push
enter
xlat
pushf
mov
in
loope
dec
aam
call
mov
and
sbb
inc
out
cmp
not
stos
cmp
lds
pop
push
jnp
sub
ficoml
fstpt
and
ljmp
xchg
push
xchg
or
or
pop
mov
jno
cmp
sbb
adc
ja
fwait
sbb
dec
xlat
jp
dec
sub
in
push
in
lahf
jmp
test
adc
cli
test
lret
pop
mov
fcom
jmp
xlat
repz
or
cmp
dec
cmp
cmp
sbb
lret
inc
pop
jb
sub
pop
mov
xchg
adc
xor
pop
decb
sub
and
and
divl
shrl
sbb
cmp
out
ds
mov
mov
out
fisubs
mov
dec
lcall
cltd
into
popa
in
pusha
push
push
shl
mov
scas
mov
iret
insl
sbb
rorl
sar
or
push
pop
mov
sub
push
movl
or
aas
push
push
int
mov
movsl
dec
pushf
jae
lods
jmp
sarb
out
pop
loopne
lods
rorb
popa
and
jle
jae
jecxz
pop
mov
mov
repnz
imul
fildll
dec
inc
lods
sar
push
lods
test
out
push
popa
daa
mov
push
mov
or
sti
loope
outsl
addr16
push
adc
out
cli
jl
adc
sti
xchg
test
jns
hlt
and
call
lods
sti
mov
not
movsb
les
stos
lahf
sti
in
sub
or
sbb
xor
adc
push
aaa
fisubrs
test
rcll
sbb
fcoms
cmc
xlat
and
repz
cwtl
add
sbb
push
or
call
or
cmp
addr16
repz
lods
and
dec
mov
mov
jl
mov
sarb
dec
mov
xor
and
enter
sub
das
sub
push
stos
nop
pmullw
adc
inc
sbb
arpl
and
out
in
aad
inc
dec
imul
fwait
xor
xchg
add
jg
xchg
xchg
add
aad
cmp
das
test
ret
and
ljmp
inc
dec
test
inc
out
xchg
push
or
shll
xor
mov
rcl
outsl
ljmp
mov
clc
sub
iret
xor
icebp
cmp
lods
inc
movsb
shrb
cmp
out
out
jmp
push
dec
push
push
mov
sbb
out
fstl
out
or
jo
push
sub
pop
mov
xchg
adc
cmp
pop
adc
int
push
ss
xchg
cld
fisttpll
add
or
adc
mov
mov
or
lds
push
mov
sbb
in
sub
and
and
fxch
popa
jecxz
fnstcw
aad
pop
out
mov
mov
push
sti
stc
or
cmp
mov
lods
add
leave
jg
xchg
pushf
paddq
mov
pop
mov
sub
mov
mov
stc
test
jb
inc
test
fs
mov
push
or
jp
in
sbb
add
xchg
jb
stc
cmp
fmull
or
lret
mov
movsl
fidivrs
call
dec
fs
jecxz
int
xor
cmpsl
cltd
sbb
add
xor
jnp
push
cmp
loopne
inc
xchg
mov
xchg
pop
into
insl
shlb
mov
dec
fistpll
aad
add
ss
adc
sti
jno
insb
mov
pusha
push
mov
pop
jmp
mov
push
adc
out
add
sbb
push
push
xchg
or
fisttps
out
adc
push
jne
sbb
jecxz
fwait
cmp
iret
in
inc
xchg
jnp
test
xchg
push
mov
inc
mov
rcrl
dec
xor
xchg
mov
mov
in
sub
ljmp
jmp
imul
es
mov
add
punpckhdq
dec
xchg
std
dec
setle
xchg
adc
xchg
sbb
sti
rcrb
pop
mov
leave
cwtl
adc
jbe
push
push
fisttps
lret
push
cmc
jns
movb
out
inc
aam
loopne
push
orb
jne
cltd
stos
gs
iret
lods
mov
lods
sub
xchg
stc
sbb
cmp
cmp
fwait
dec
and
test
dec
sub
jl
loope
mov
add
mov
out
fwait
push
mov
subl
jb
packssdw
push
ss
cmp
dec
aad
xchg
cmp
dec
xchg
sarl
outsl
mov
decl
mov
test
and
xor
mov
imul
xabort
mov
mov
push
std
dec
mov
enter
sti
out
movsl
mov
loope
cmp
jg
lahf
xchg
cs
jne
fildll
lods
hlt
sbb
xchg
and
stos
jnp
cmp
fidivs
push
sbb
jnp
and
pop
dec
xor
push
lods
in
xor
mov
xchg
lock
enter
pushf
sub
scas
or
roll
adc
xchg
adc
xchg
popa
jg
lret
and
pop
stos
divb
shl
aad
mov
mov
lret
popa
add
mov
xor
and
cmp
rcl
scas
push
cmpsl
test
mov
adc
jmp
dec
insl
das
movsb
shrl
in
aad
std
add
or
ds
push
iret
pop
test
lods
ljmp
rcl
inc
adc
mov
mov
pop
out
xor
je
mov
jge
mov
cld
sub
xchg
sarb
mov
xor
xchg
mov
mov
repz
fcomi
push
adc
sub
ficompl
xor
test
mov
lret
loope
fidivrs
jne
mov
call
pmullw
test
into
pop
mov
adc
test
lcall
xor
xor
mov
ja
mov
adc
jmp
xor
stos
fdivl
nopl
jge
xor
xor
ja
and
inc
out
xchg
insl
adc
jb
jecxz
or
mov
ret
jnp
inc
pop
add
sbb
dec
adc
fstps
test
pop
in
shrl
xchg
push
popl
ljmp
aad
mull
cmp
loope
cmp
cmc
add
mov
inc
lahf
scas
das
lods
jno
adc
in
testl
fisubs
push
outsb
inc
jp
lds
jns
les
dec
jnp
or
jo
fucomp
cmpsb
shrl
outsl
adc
inc
stos
cmpsl
push
lret
add
int
hlt
int
test
sub
jmp
xchg
inc
popf
sbb
mov
lods
aad
addl
lods
mov
imull
fisubrl
leave
push
cmpsb
sub
gs
adc
jo
cwtl
jecxz
adc
mov
or
cmp
ljmp
xor
lods
and
sub
into
iret
cmc
adc
ja
repz
idivl
or
mov
adc
adc
inc
pop
adc
mov
jb
and
dec
and
xchg
loope
mov
push
rcll
xchg
dec
das
fsubl
cli
insb
fmuls
imul
add
xchg
push
rcll
sahf
pop
pop
xchg
shrl
popf
pop
ds
pop
adc
cli
lods
xchg
add
in
add
mov
sbb
scas
pop
cli
xchg
jmp
pop
xchg
mov
ret
mov
jb
in
loopne
sub
mov
in
add
fldenv
push
mov
fldln2
push
fistpll
mov
nop
mov
sub
or
jmp
fmul
xchg
repnz
jge
sti
or
or
cmp
sti
push
xchg
mov
shl
pop
aad
lea
push
lods
mov
outsl
sub
or
aad
scas
cmpsl
inc
mov
pop
sarb
std
or
cli
stc
mov
dec
sti
movsl
pop
xchg
les
mov
arpl
ret
mov
or
loope
loop
sahf
je
dec
testl
fimuls
add
rcrb
subl
ret
mov
aas
test
int3
jo
mov
mov
jecxz
mov
fstpt
int3
xlat
jbe
push
xor
dec
push
lock
in
aad
test
mov
sahf
adc
in
lock
add
mov
dec
push
test
out
sahf
loopne
outsl
aad
xchg
xor
daa
js
push
les
mov
mov
sti
mov
cmc
int
pop
mov
loope
test
subl
stc
mov
adc
mulb
in
mov
or
push
add
mov
pop
adc
push
out
cld
ficomps
pusha
pop
mov
mov
push
leave
cmp
notb
call
outsl
xchg
aad
push
leave
insb
std
dec
addr16
dec
rcrb
dec
dec
notl
mov
xor
push
sbb
inc
dec
dec
xchg
pop
in
ror
cltd
sbb
in
mov
push
js
ja
adc
imul
pop
lods
push
in
jne
inc
mov
push
mov
xchg
dec
cli
mov
cmc
js
ss
or
add
jns
pushl
jmp
jno
ret
je
hlt
and
das
jnp
jecxz
jmp
pushf
lahf
stc
dec
iret
cmp
adc
push
pop
push
data16
xchg
inc
movb
push
xabort
sbb
jno
in
js
loope
adc
ficoml
sbb
or
lcall
loope
nop
js
push
inc
jmp
rclb
pop
fcomip
xchg
xor
adc
insb
and
ljmp
push
rclb
test
push
xor
cmc
iret
pop
out
rcll
jb
les
adc
aad
testl
xchg
jl
lods
into
mov
scas
xor
bound
dec
or
scas
cmp
mov
and
pop
les
add
dec
incl
push
and
lea
pop
xor
addl
lods
xchg
ds
dec
xchg
sub
mov
test
stos
jp
out
jg
cmp
add
mov
lahf
sub
xor
xor
and
jmp
loope
cmp
sbb
and
or
jmp
icebp
or
jo
stos
pop
jae
adc
arpl
mov
sti
call
add
mov
add
and
out
jae
cwtl
dec
mov
jns
arpl
mov
pop
cmpsb
scas
shr
jg
xchg
in
stos
or
inc
idiv
nop
test
imul
aad
push
xchg
fidivrs
test
and
dec
aas
idiv
jae
pop
cmp
mov
xchg
pop
dec
jmp
arpl
popf
dec
test
ror
mov
sub
cmpsb
ret
xchg
adc
sbb
adc
ljmp
xchg
scas
sti
mov
iret
cmp
insl
or
dec
leave
cmp
dec
lods
data16
jmp
out
lods
adc
sub
sbb
cwtl
aas
sub
cmpsl
xor
ds
mov
add
daa
jl
jl
out
stos
lock
jl
adc
xchg
popf
popf
jp
cwtl
ret
push
loope
mov
aad
mov
call
mov
aad
shrl
ss
or
sbb
mov
clc
scas
cld
xchg
xchg
in
inc
push
mov
fsubp
xor
and
aad
ds
addr16
adc
sub
mov
mov
or
loop
hlt
pop
cmc
dec
mov
sbb
leave
and
dec
fsubl
arpl
sbb
sbb
push
mov
xchg
push
ja
xor
daa
repz
je
mov
push
ret
inc
in
mov
out
mov
sub
popf
mov
sbb
xor
cmpsb
nop
or
xor
jnp
shlb
cmp
test
and
xchg
xchg
dec
pop
cltd
nop
pop
cmp
mov
fwait
ret
jg
loope
pop
add
call
aad
lods
mov
inc
in
test
dec
cmc
nop
dec
push
lods
or
stos
mov
outsl
xchg
or
aam
cmp
sbb
addr16
adc
xchg
jmp
pop
repz
cmp
or
int
into
pop
outsb
scas
stos
clc
outsl
dec
testl
lcall
out
scas
clc
jle
out
out
and
mov
cli
dec
gs
flds
jmp
mov
mov
fsts
sub
test
cmp
movsl
add
stc
sbb
lods
sub
pop
dec
and
popf
cli
jnp
add
jbe
cmp
in
out
xchg
int
mov
sbb
xchg
xchg
dec
lcall
aad
and
int
push
rcrl
xchg
fiaddl
dec
sub
mov
roll
imulb
outsb
mov
test
or
and
cmp
idiv
push
lods
xchg
imul
xlat
cmp
or
sub
lods
dec
or
dec
or
popa
sbb
std
scas
int
push
cwtl
mov
jp
inc
fnstenv
and
test
or
clc
lods
xchg
test
push
xor
cmp
push
adc
push
movsl
movsb
das
imul
mov
addr16
dec
testl
lods
imul
nop
pop
fucom
push
sahf
inc
fldcw
and
mov
cmpsl
jb
ss
int
sub
data16
fidivrs
cmpsl
sbb
cmpsb
mov
dec
dec
xchg
aaa
xlat
addr16
jge
out
ffreep
pushf
push
and
scas
out
nop
jp
or
push
cmc
cmp
lock
push
cmp
js
data16
mov
adc
sti
mov
sub
jno
sbb
mov
sahf
pusha
jno
popf
jle
ja
mov
sub
cld
in
in
popf
bndldx
jge
lea
cmc
jb
sbb
or
cmp
lcall
cmp
mov
popf
dec
outsl
or
enter
jmp
cmpsl
jns
cmp
out
lret
pop
into
adc
js
daa
shlb
mov
negb
repz
jmp
adc
push
jbe
xchg
push
cld
cmp
or
ja
mov
pop
xor
mov
pop
jno
jae
mov
and
pop
mov
sahf
jo
mov
les
and
sbb
xor
clc
cmc
in
scas
bnd
inc
jmp
jnp
add
or
xor
cmpsl
jo
mov
loope
sub
in
sbb
jbe
out
test
inc
mov
xchg
and
ljmp
cmpsb
push
lods
xchg
jo
sub
subl
les
jno
mov
dec
lcall
xchg
das
xor
pop
push
adc
lahf
lods
decl
sub
hlt
cwtl
loope
xchg
add
cmp
jl
or
sub
pushf
add
leave
mov
jnp
sub
divb
out
shrl
cmp
out
sub
cmp
mov
xlat
mov
shrb
lods
stc
test
popa
xchg
popa
hlt
push
std
jbe
add
cmp
jp
arpl
jge
push
fs
dec
or
adc
sub
mov
cvtpi2ps
xchg
pop
jp
inc
or
mov
xchg
or
loopne
popl
pop
jns
push
mov
pop
jne
fisubs
jmp
aam
mov
jp
mov
and
mov
test
or
push
xchg
cwtl
push
pop
sahf
mov
jno
mov
scas
hlt
push
xchg
pop
and
dec
push
stos
push
jle
pop
popa
enter
aad
pop
xor
push
in
std
xchg
or
xchg
mov
out
or
cmp
rcrb
adc
adc
fistpl
into
pusha
sbb
jg
ds
jnp
cmp
in
inc
je
jge
push
inc
rcll
out
das
add
xchg
in
fwait
xchg
and
inc
loopne
scas
lahf
test
inc
dec
iret
test
mov
faddl
push
adc
mov
push
lods
jle
sub
dec
test
and
lock
push
mov
scas
jecxz
ja
cli
aad
bound
add
adc
inc
cmp
mov
popa
int3
or
rcll
stc
and
and
or
cmc
out
loope
fucomip
sbb
stc
bound
cmp
jne
cmc
stc
or
push
jecxz
sar
out
movsb
vmread
out
jne
add
push
lea
cmp
cmp
lods
aad
lds
aam
sub
divl
mov
or
loopne
shrl
lods
jmp
out
out
pop
and
mov
pop
in
jp
fcmovnbe
mov
gs
adcb
or
lods
jecxz
xchg
fs
mov
adc
sub
jb
xor
add
xchg
adc
rcll
mov
mov
pop
mov
or
add
mov
mov
test
out
xor
xchg
mov
test
xchg
push
xchg
push
repz
out
cmp
cs
xchg
push
loopne
jae
xchg
mov
pop
dec
pop
push
fistl
iret
xor
xchg
jg
jo
je
xchg
sbb
add
call
repnz
dec
int
cmp
mov
imul
movsb
mov
leave
mov
mov
mov
jo
xchg
aam
idivl
xor
inc
add
mov
pop
cmc
insl
mov
mov
adc
jnp
sub
pushf
push
push
push
adc
push
sbb
test
fldl
fidivrl
adc
stos
std
aas
and
pop
pop
dec
dec
into
lret
inc
adc
adc
push
cwtl
test
or
cmp
ja
ljmp
push
stos
pop
jne
mov
call
adc
jmp
lcall
sbb
xlat
push
or
mov
push
inc
inc
pop
and
mov
pop
nop
mov
out
jbe
scas
pop
aad
sub
push
jle
dec
xchg
ja
push
xor
scas
cmc
mov
pop
scas
or
or
xor
sti
adc
cmc
ret
inc
push
subl
dec
gs
fstpl
sub
sbb
aad
mov
out
pushf
dec
jl
mov
xchg
scas
jo
jnp
les
lods
nop
or
pusha
cwtl
popl
xor
jno
stc
jns
scas
mov
xor
sbb
negb
mov
rorb
pusha
popf
call
lcall
sbb
es
inc
int
jno
mov
sub
repz
ja
mov
mov
sub
or
inc
into
call
inc
pop
cmp
and
dec
cmc
add
push
lock
xchg
dec
lcall
testl
xor
cmp
insl
inc
pop
mov
dec
push
jb
sub
sub
cmc
push
aas
rclb
mov
outsl
js
mov
in
ret
enter
in
push
inc
pusha
sub
cmpsb
fadds
imul
inc
jg
jl
movl
inc
push
cmc
adc
pop
ret
fstl
fmuls
push
xchg
test
sbb
in
dec
or
sbb
fidivs
or
popa
fs
ds
outsl
pusha
scas
xchg
push
push
jb
out
aas
dec
aad
cwtl
jg
ret
add
or
or
dec
fcoms
or
inc
in
add
mov
lods
divb
jl
mov
sub
mov
jle
addl
push
negb
adc
jo
dec
and
lcall
dec
push
out
and
and
xchg
scas
ja
ret
mov
lret
stos
or
mov
and
sbb
ret
or
sub
pop
xchg
add
mov
push
inc
call
push
push
push
push
jge
sub
mov
mov
cli
je
daa
iret
fs
jmp
jp
sbb
cmpsl
repnz
sbb
mov
mov
aad
cmpsl
jb
call
mov
and
pop
incb
or
shrb
movsb
nop
cmp
add
xchg
rolb
mov
stc
aad
mov
fwait
aam
mov
out
add
xchg
dec
dec
jmp
pop
mov
iret
aas
push
iret
cmc
xchg
lds
loope
sub
jae
or
loopne
int
popa
push
insl
cmp
fdiv
mov
popf
or
cmc
dec
xchg
pop
sub
xchg
and
daa
clc
or
loope
repnz
ja
daa
loope
aad
mov
ss
pop
adcb
add
les
xchg
jp
dec
adc
aad
cmpsl
mov
dec
lods
add
xor
xchg
addl
sbb
cwtl
or
pmaddwd
cmpsb
push
inc
push
push
bound
outsl
ret
mov
xor
and
add
dec
jae
movsb
aad
or
xchg
stos
cmp
mov
loop
pop
cmp
xor
pusha
fucom
add
stos
ljmp
lcall
ret
mov
mov
mov
dec
lcall
dec
mov
in
mov
xor
movsl
jno
outsl
mov
xor
stc
ljmp
roll
rorb
lret
xchg
inc
int3
jno
out
or
ljmp
outsb
xchg
cmp
jp
stc
jp
stc
pop
insb
cltd
cmp
push
pop
imul
movb
jbe
adc
xor
cpuid
insb
jmp
jl
cs
fnstsw
xchg
popf
mov
ret
or
push
xchg
sub
in
arpl
cmp
xchg
sub
cwtl
xchg
cmc
out
imul
arpl
push
lret
push
in
push
add
sar
stc
inc
dec
jl
in
lcall
fcoms
mov
sbb
push
stos
jle
std
dec
or
sbb
or
imul
js
adc
mov
in
adc
push
cmc
mov
mov
ljmp
out
jecxz
mov
jp
xchg
mov
mov
mov
or
push
les
xchg
xchg
outsl
cmc
jmp
xorb
scas
pop
outsb
imul
jno
sub
add
insl
or
pop
lret
jg
inc
mov
aad
pop
ficoms
xchg
out
je
pop
xchg
outsl
lcall
sbb
sub
dec
or
inc
and
jecxz
test
cmp
aad
js
iret
sbb
jne
aad
shlb
dec
push
push
adc
loopne
jb
jmp
int
pop
jecxz
mov
or
sub
inc
idivl
adc
xchg
mov
jns
dec
sub
mov
cmp
mov
test
cltd
div
scas
dec
jmp
packssdw
adc
xor
pop
cmp
call
cwtl
ds
movsl
pop
push
aad
dec
fisubl
lods
dec
cmpsb
cmpsb
push
and
inc
dec
pop
mov
vmwrite
shl
aaa
orl
popa
movb
repz
les
mov
inc
or
adc
or
inc
sti
adc
sti
mov
cmc
fsts
and
shrb
aad
imul
lcall
dec
cmp
mov
stos
leavew
adc
fdivrl
jae
inc
or
jmp
dec
out
add
int
movsb
adc
pop
xchg
pop
lods
mov
pop
sub
stos
mov
mov
fisttps
test
xchg
mov
imul
jl
xchg
cmp
mov
xor
shl
cmpsb
divb
lahf
jle
jge
adc
orb
pop
cmp
xchg
jmp
fwait
cmpsb
orl
fnstenv
inc
push
sti
cli
jecxz
sahf
cmpsb
jmp
in
dec
sbb
popf
or
call
lods
sbb
mov
add
fidivs
arpl
leave
pop
enter
pop
out
daa
xlat
jl
mov
sub
insb
add
pop
stos
mov
lret
sub
std
add
xchg
shlb
incb
or
xchg
jne
mov
inc
lret
mov
outsl
xor
scas
dec
movsb
jns
xor
dec
xchg
adc
mov
int3
cmp
loop
out
or
xchg
nop
sbb
sub
inc
adc
daa
jns
pop
in
test
push
aad
sub
mov
xlat
sahf
push
cmp
and
mov
mov
stos
flds
jle
mov
sti
mov
push
bound
xchg
inc
cltd
sarb
imul
mov
insl
mov
cmp
jge
decl
cli
xchg
adc
shrl
fsubr
xor
bound
cmp
cs
inc
sti
aad
jecxz
imul
popl
cltd
inc
add
xchg
repnz
adc
jae
lahf
mov
add
cmp
enter
push
mov
int
in
mov
leave
jg
fbld
das
in
roll
inc
mov
push
xor
push
and
inc
cwtl
push
into
push
or
inc
loop
inc
cld
scas
popa
leave
xor
sbb
sysenter
jns
popf
lock
sub
add
jno
mov
outsl
push
stc
push
loope
loopne
data16
add
sbb
jg
inc
shlb
negb
mov
dec
jge
jne
dec
cmpsl
add
popf
mov
test
js
xchg
jns
out
fwait
add
pmulhuw
add
cmp
xchg
daa
out
cli
mov
shl
jno
inc
jns
frstor
divb
xchg
jb
ret
cmpl
mov
popa
ret
fistps
push
shlb
sbb
test
jb
inc
into
or
cmp
insl
sti
cli
jbe
dec
pop
pop
pop
arpl
xchg
clc
xor
int
xor
jbe
jbe
test
rorb
sub
dec
movsb
lret
hlt
test
lock
int
insl
jns
adc
lret
decb
lds
icebp
outsl
lods
cli
adc
daa
pop
mov
mov
pop
ss
rcr
loop
aad
lock
pop
mov
dec
aam
dec
adc
and
jg
pop
dec
in
mov
movsl
subb
or
popa
fabs
jno
les
pop
loope
fmull
cmc
clc
jl
into
sbb
inc
scas
jp
data16
cwtl
push
cmp
les
jecxz
pop
push
inc
pop
mov
notl
mov
sub
shlb
add
insl
out
cmc
in
in
xchg
mov
push
leave
in
and
sub
jle
inc
roll
jno
pushf
cmc
repz
rorl
mov
int
mov
cmc
jp
add
andl
faddl
xor
mull
sbb
pop
or
adc
aam
cmp
push
fdivl
fisubs
ja
mov
sbb
or
jg
jl
mov
das
inc
roll
or
xor
mov
mov
pusha
fwait
jns
int
aad
cmp
dec
mov
jns
xchg
sub
sub
femms
jns
cltd
pop
jecxz
xor
in
xor
sub
xchg
fcmovne
mov
inc
xchg
int3
mov
ljmp
imul
jmp
pop
in
pop
scas
loopne
pop
aad
aaa
mov
test
sub
xor
dec
sbb
lret
xlat
icebp
push
fisttps
adc
cmpsb
and
xchg
call
xor
jl
inc
push
test
fwait
jecxz
dec
mov
je
insb
xchg
jmp
sub
mov
rclb
pushf
inc
lods
test
filds
or
dec
push
xchg
rcll
andb
out
push
call
push
cmp
and
cli
out
aad
mov
mov
pop
out
lcall
dec
aad
aad
mov
add
or
push
stos
mov
add
mov
repz
cmp
xchg
adc
out
xor
sbb
xchg
mov
jns
jo
or
and
int
jae
lods
sbb
add
add
cmc
int
repnz
sub
ret
out
sbb
adc
mov
rolb
iret
xchg
call
pop
lahf
inc
or
mov
sti
or
idiv
int
out
jae
or
cmpsl
je
shr
sahf
mov
push
scas
jl
push
push
jb
jne
int3
sbb
insl
adc
es
out
out
mov
mov
mov
in
iret
lcall
sbb
push
cmc
icebp
push
decb
out
icebp
outsl
popf
xchg
loopne
xor
mov
mov
pusha
or
fdivp
jne
shrb
cmp
test
lods
add
and
js
mov
sub
fwait
adc
addr16
push
imul
adc
jae
mov
dec
jmp
add
lods
imul
dec
fisttps
push
cs
pop
push
stc
jo
add
fnstenv
mov
repnz
mov
arpl
lods
rsm
add
cmc
into
aad
sbb
xchg
lock
sub
pop
fidivs
xchg
and
loope
cmp
add
mov
adc
popf
es
sahf
iret
std
jecxz
pop
sbb
out
lods
and
addb
xor
adc
fwait
mov
jbe
popa
out
cwtl
mov
repz
dec
fucomi
js
fsts
mov
test
ljmp
xor
pop
cmp
add
and
test
mov
xor
fs
xchg
sub
decb
xchg
mov
mov
movsl
inc
outsb
sahf
mov
mov
cmp
out
cmp
push
test
repz
imul
sub
das
call
pop
test
xchg
cmp
out
mov
aad
testl
sbb
into
mov
sbb
jecxz
repz
bnd
adc
sbb
hlt
xor
mov
fdiv
mov
std
mov
jecxz
xchg
add
mov
jae
mov
and
das
and
popa
inc
nop
adc
push
ret
jae
repz
repnz
xor
cmp
sbb
into
insl
mov
mov
inc
into
cmc
sbb
xchg
fmul
cmp
lcall
lcall
xchg
aad
iret
sub
adc
mov
jmp
mov
loopne
std
jnp
dec
mov
xchg
mov
stos
sbb
mov
sub
cmp
and
cmp
jmp
punpckhbw
in
sub
out
add
pop
pop
mov
or
push
js
cmp
jmp
or
sub
imul
fwait
add
push
dec
and
jb
cltd
mov
sub
cmp
fwait
aad
xchg
addl
and
cmp
cltd
ljmp
sub
push
adc
xchg
xchg
xor
mov
fst
jo
xchg
and
xor
es
mov
mov
sbb
push
push
push
add
mov
rcr
lea
sbb
and
xchg
mov
popa
cmpb
cmp
int
sti
and
nop
and
mov
fst
je
mov
sub
lods
data16
out
in
sbb
sub
pop
lods
bound
lods
sahf
jmp
loop
dec
enter
aas
loop
xchg
pusha
mov
rolb
cmpsb
in
test
mov
push
je
movsl
std
xor
fistps
cmpsb
adc
sub
daa
jl
push
cmp
aad
push
loop
int3
imul
xor
inc
aad
mov
out
mov
and
hlt
popf
jge
fs
jb
out
jbe
push
xchg
mov
dec
mov
and
jge
aaa
jge
mov
and
or
rclb
lds
ret
rcll
mov
mov
lea
aad
xchg
mov
pop
mov
push
adc
fs
dec
lret
rorl
ret
push
out
das
les
and
repnz
js
fbstp
rcrl
cld
dec
aad
fs
jecxz
inc
mov
fcom
mov
inc
in
out
popl
aad
pop
jecxz
push
xchg
std
sahf
lds
push
jl
mov
xchg
imul
and
jecxz
outsb
and
bound
aas
cld
add
cli
test
xchg
incb
into
adc
xor
in
ffree
loope
shlb
mov
jecxz
call
pop
cld
mov
and
jmp
inc
jae
push
out
or
dec
dec
jnp
xor
xchg
int3
jl
out
push
lea
mov
addb
stos
mov
test
cmp
mov
push
arpl
outsl
push
rcrb
cmpsb
loope
gs
mov
mov
or
js
and
scas
out
out
pminsw
xlat
dec
sub
in
ja
pop
roll
or
addl
cmpsb
popa
sub
sub
movsb
lret
xchg
mov
dec
jo
ret
inc
lahf
int
cmp
js
std
shl
push
cmp
scas
cwtl
and
xchg
and
loop
dec
dec
jmp
in
scas
stos
xchg
jmp
shl
or
movl
popf
cwtl
fwait
inc
add
inc
pop
in
dec
or
scas
mov
dec
popl
ljmp
ret
cmc
or
arpl
dec
lds
mov
push
inc
shlb
cmp
xor
icebp
sti
cmp
sti
sub
jmp
sub
mov
or
pusha
pop
icebp
or
push
daa
add
rcrl
jge
aad
cmp
ror
sub
insl
je
leave
out
fwait
cmp
mov
mov
scas
push
add
xchg
movsl
pop
fcmovu
lods
mov
xor
pop
xchg
pop
icebp
jge
jo
add
insl
xchg
sbb
add
arpl
pushf
add
xchg
add
cmc
mov
bound
test
ds
outsl
mov
sbb
shl
jge
in
dec
loop
pop
push
ficoms
fstpt
push
stos
mov
add
dec
test
scas
call
fiaddl
add
lahf
test
inc
mov
lret
mov
cmc
xor
outsl
push
mov
sub
inc
xor
ror
or
xor
popf
movsl
fs
bound
dec
xchg
mov
dec
loopne
fs
mov
xchg
out
loope
subb
push
push
jno
cld
cmc
ljmp
push
das
mov
pop
subl
outsb
dec
icebp
xchg
mov
fmull
fcoms
ljmp
ljmp
inc
sbb
les
std
dec
aad
testl
je
sub
ja
call
das
imul
scas
inc
into
cmpsl
mov
or
jae
sub
fwait
push
add
push
jnp
int3
jo
ljmp
cmp
inc
mov
jmp
imull
js
jge
jp
sub
fcmovnu
mov
inc
cli
cltd
lods
loopne
test
pop
mov
enter
mov
pop
nop
fdivrp
jmp
jns
aas
push
iret
sbb
sarb
inc
aad
add
lods
mov
mov
out
leave
dec
xchg
adc
lods
arpl
xchg
add
mov
push
aas
pop
xchg
sub
clc
or
mov
repz
and
lahf
std
sarb
dec
aad
arpl
pop
push
jb
shufps
int
add
mov
fwait
push
mov
mov
enter
repz
stc
jmp
repnz
test
stc
shlb
lods
movsb
or
jns
or
mov
lods
les
out
dec
add
pusha
adc
imul
mov
cmpb
inc
cmp
out
cmp
andl
dec
jg
push
adc
add
mov
sub
repz
loope
out
orl
jae
in
idivb
push
cmpsb
int
pop
push
adc
fmulp
icebp
jne
movswl
fcomps
inc
mov
jae
call
repnz
movmskps
inc
xchg
fisubrs
pushl
pop
rcl
sbb
in
mull
or
mov
mov
arpl
xchg
aad
outsb
xchg
or
pop
fimull
shlb
pop
mov
push
adc
adc
adc
mov
jg
mov
xchg
movsb
out
inc
pop
and
or
xchg
jl
sub
mov
jo
int
sbb
pusha
fdecstp
loope
pop
scas
aad
sub
mov
mov
jge
imul
test
cmp
imul
decb
and
dec
sub
call
jmp
into
pushf
or
gs
mov
dec
mov
mov
scas
pop
fidivrs
add
cs
cmp
adc
rcr
fistl
and
ret
lret
adc
jmp
and
sbb
adc
lods
mov
or
sub
ljmp
lcall
lock
jbe
imul
insl
cld
in
div
stos
jp
cmp
jbe
xor
push
mov
inc
or
test
int3
cmp
jmp
loopne
pandn
mov
orl
xlat
adc
adc
mov
cmc
sbb
popa
popf
lcall
dec
xor
xor
mov
sub
push
adc
jl
pusha
ret
jb
cmp
jnp
adc
lods
and
jl
aad
aam
mov
rcll
add
aad
adc
gs
lret
or
add
rcll
test
xor
cli
push
mov
ja
adc
mull
add
stos
add
call
adcl
or
jl
shrb
arpl
xchg
outsl
fnstsw
push
pop
xchg
cmp
mov
xor
rol
aaa
cld
jbe
and
das
and
xor
jl
lcall
call
addr16
aad
push
testb
pop
push
pop
jno
cli
neg
rclb
outsb
lea
xor
sub
push
or
and
cmp
movsb
cmp
add
sarb
xchg
or
inc
mov
dec
and
mov
negl
imul
jle
out
pop
pop
push
adc
mov
push
pop
jbe
cmp
loope
popf
std
cwtl
mov
inc
cs
inc
sbb
jecxz
pop
test
into
in
and
aam
dec
jae
push
mov
cmc
and
aaa
repnz
inc
xor
popa
mov
bound
or
sub
int
xchg
cmpsb
pop
imul
imul
fmull
je
lea
js
ljmp
cmp
xchg
mov
fimull
in
aam
jmp
rcl
js
inc
cmp
mov
sbb
inc
icebp
jmp
pop
adc
push
clc
pusha
xchg
in
jo
fs
add
in
fisttps
cmc
es
mov
scas
setle
or
dec
mov
dec
push
ret
bound
sbb
std
loop
int3
push
fdivs
and
cmp
dec
movsb
jns
popf
inc
push
cmpsb
push
in
xor
sbb
add
add
mov
xchg
and
adc
inc
add
add
cmp
xchg
sti
and
fs
mov
popa
imul
cld
call
mov
adc
mov
cwtl
loopne
test
mov
jecxz
js
fistpll
xchg
pop
cmp
sub
std
push
xor
fstpt
arpl
out
movb
pop
or
adc
pop
sub
xor
aad
jno
xor
pop
pop
js
lret
jl
xchg
cmc
insb
popf
xor
add
sub
add
imul
jge
pop
lods
add
lahf
enter
dec
int
pop
mov
adc
aad
jbe
and
test
and
push
mov
je
roll
jecxz
lcall
stos
pusha
testb
cmp
fldt
dec
cmc
ds
out
fcmovnb
sub
out
mov
loopne
fisttpll
add
stos
or
cmp
out
push
or
add
add
sub
xor
dec
lods
arpl
pop
lock
sbb
mov
lcall
loop
xor
fmul
ss
or
or
loop
jl
add
into
shll
sub
lock
sbb
aaa
sbb
pop
rolb
pop
test
cmp
jp
rcll
pop
aad
mov
fcomi
push
lock
addr16
stos
rcl
stc
or
cmp
mov
es
adc
push
loope
enter
jo
les
std
xor
cmp
cmp
sbb
ret
pop
sbb
gs
cmpsl
mov
aam
incb
mov
jmp
dec
sub
lea
push
adc
mov
mov
cmc
stos
adc
int
aad
int
incb
sub
faddl
adc
mov
insb
inc
pop
mov
mov
mov
mov
stc
or
out
mov
and
add
xchg
sti
xor
xchg
pop
nop
lea
aad
adcl
dec
push
pop
call
cltd
lea
aad
aam
or
iret
pop
jmp
jnp
out
leave
xor
loop
jb
push
push
out
add
rorb
rcr
fmul
pop
outsl
enter
jecxz,pn
mov
jecxz
notl
cmp
dec
dec
clc
mov
test
push
adc
int
insl
cmp
pushf
sahf
loop
mov
jecxz
jl
fistpll
mov
mov
in
lret
pop
mov
jl
adc
aad
mov
jno
jle
adcl
loope
mov
aam
sahf
aad
and
fimuls
push
rorb
ss
in
add
jae
test
std
sub
adc
hlt
cmp
lahf
out
arpl
jno
pop
and
into
xchg
clc
xchg
cli
and
aad
icebp
sub
sti
jg
xchg
sbb
stc
andl
call
jne
add
push
jge
sahf
mov
mov
rclb
cmp
push
mov
gs
rdpmc
xchg
or
outsb
cwtl
sub
adc
mov
lods
fisubl
mov
or
cmpsb
jg
xchg
mov
shrl
aad
cmp
aad
or
jge
mov
mull
icebp
xor
dec
popf
jge
mov
xchg
push
fdivs
mov
dec
add
dec
jle
in
cld
out
and
sarl
dec
iret
test
dec
mov
ret
pop
dec
test
pushf
scas
cmc
pop
lret
xchg
ror
adc
xchg
gs
lahf
ret
adc
or
lahf
jns
xchg
sub
xor
xchg
aam
push
push
in
aad
add
sub
xchg
jb
adc
out
add
out
mov
jno
aaa
setbe
pop
lods
je
std
lret
stc
sbb
pushl
mov
push
popa
and
sub
sub
xlat
pop
mov
xchg
data16
mov
movsl
insl
mov
dec
mov
mov
arpl
rcrb
add
ds
jns
mov
dec
fstpl
int
mov
fdivrl
sub
decl
xchg
jae
addr16
push
gs
aad
xlat
out
popa
je
aaa
sti
aam
mov
loope
cmpsl
fldl
or
sub
gs
mov
pop
adcb
mov
jb
divb
lret
xchg
xlat
push
nop
aam
and
dec
inc
testb
or
push
cmp
mov
push
dec
pop
scas
cmp
mov
xor
mov
mov
popf
push
mov
addr16
pushf
or
xchg
lret
or
jl
aam
dec
pop
stc
fildll
bound
cmp
aad
popf
jb
fcoml
cmp
test
jmp
fwait
cmp
repnz
and
sub
cmc
movsl
push
mov
ljmp
jnp
mov
add
in
pop
js
dec
pmaddwd
pop
adc
in
and
xchg
xlat
adc
repnz
out
sti
jns
fs
and
dec
lea
mov
mov
test
push
lods
sub
mov
xchg
out
aad
jmp
pushf
mov
sbb
or
push
dec
std
jg
outsl
xchg
cmp
pop
jns
andb
push
mov
inc
aaa
xor
bound
mov
lods
cli
test
jge
shll
add
push
jno
lret
fdivs
push
fsubp
mov
pusha
movb
mov
lret
out
jmp
jecxz
lahf
dec
mov
mov
rcrl
fsub
int
dec
shlb
int
jns
jge
push
int
xchg
stc
jo
and
outsl
popa
xor
jp
pop
mov
std
jno
sub
aad
xchg
cmp
inc
pop
mov
sarl
mov
fsubrs
sti
or
cwtl
inc
pop
push
xchg
jg
xorl
adc
mov
pop
loopne
dec
jmp
xchg
sbb
xor
mov
mov
add
das
add
sbb
mov
jge
jge
adc
das
inc
mov
mov
outsb
idivl
icebp
adc
jmp
fdivl
ret
and
push
sub
add
pop
scas
jle
and
jge
cmpsb
mov
cli
repz
out
cwtl
push
and
jb
cmp
xor
mov
mov
push
mov
daa
loope
out
cmc
movsl
add
push
rclb
aas
mov
fmull
or
cmpsb
int
xor
dec
or
cmp
jge
sahf
push
pop
lret
xorl
xchg
testl
ja
or
shl
js
cmp
jle
iret
mov
test
movsb
xchg
fiadds
mov
adc
inc
sbb
jge
mov
fwait
cmp
adc
popa
imul
out
jle
and
arpl
pop
xchg
xor
mov
test
mov
rorb
stos
in
shlb
stc
xchg
test
mov
out
stc
or
int3
cmp
push
jg
xchg
xchg
xchg
xor
mov
dec
cmc
dec
mov
mov
jns
adc
mov
lcall
mov
cmp
test
xlat
into
jae
lret
out
mov
fnsave
imul
and
in
fisubl
loopne
jns
xchg
or
in
mov
push
std
imul
testb
push
insl
mov
mov
out
jmp
aam
jae
pop
push
or
test
push
cmp
push
xchg
jno
popf
loope
pop
pusha
sub
inc
insb
les
mov
and
pop
adc
cwtl
cmpsb
fsincos
dec
aas
in
jmp
pop
loope
cmp
bound
lods
sub
mov
cmp
bound
xchg
lret
sahf
out
mov
rorl
mov
pop
imull
or
or
jmp
jmp
pop
and
das
and
adc
push
xor
and
push
lcall
or
push
cmp
mov
clc
pop
lcall
cwtl
aam
loopne
arpl
or
push
push
rorb
add
call
aam
loop
scas
aad
int
int3
push
xor
cmp
gs
pusha
or
addr16
add
scas
xchg
sahf
sub
imul
rcll
out
loope
into
mov
mov
in
and
and
inc
daa
xor
loopne
sbb
cmpsl
mov
sub
sahf
divl
or
xor
xor
lds
push
fisttpll
imul
addr16
jl
stos
pushf
pop
mov
adcb
cmp
popa
out
cwtl
jecxz
dec
xor
mov
sub
lahf
add
sub
andb
shrd
sbb
xchg
loope
std
fdivr
stos
fimull
andb
fucomp
je
jge
aad
xchg
sub
nop
inc
outsl
xchg
mov
fdivrs
icebp
jl
sub
mov
arpl
loop
push
repnz
jge
xor
xchg
aaa
dec
push
into
or
mov
rcll
adc
mov
xor
sbb
dec
fmull
loope
js
xchg
addr16
push
adc
mov
in
ja
aam
les
fisttps
cmc
out
xor
cmp
iret
mov
mov
inc
pusha
fisttpll
fs
push
dec
adc
outsb
dec
push
dec
mov
adc
aaa
push
aas
jle
mov
call
rcl
data16
scas
mov
dec
add
sbb
jo
or
ljmp
or
add
pusha
pop
or
xchg
pusha
jne
mov
cmc
int
mov
cmp
pop
rcll
dec
lods
int
jp
mov
and
sbb
lods
popf
push
pop
sarb
xor
xchg
pop
les
out
hlt
gs
pop
popa
addr16
iret
pushf
cmc
lock
or
int
adc
pop
sub
push
in
stos
imul
int
nop
iret
js
push
fists
sbb
xchg
ret
adc
iret
roll
es
sub
mov
sub
pmulhuw
and
ss
cs
in
jmp
flds
xchg
dec
scas
decb
in
testl
pop
or
test
test
es
ret
xor
jmp
push
jecxz
push
mov
cmp
push
cmc
mov
out
aad
cmp
fbld
hlt
aaa
adc
add
rcll
push
add
ret
arpl
scas
mov
ret
pop
or
jmp
or
sub
aaa
insl
cmc
mov
lahf
outsb
jecxz
ror
xor
call
iret
push
inc
mov
jno
ljmp
sbb
sbb
mov
into
add
sti
adc
adc
outsb
aad
xor
sbb
xor
mov
sub
and
cltd
jae
mov
insl
jbe
fisubl
adc
je
addr16
jmp
das
jmp
stos
jbe
clc
push
inc
dec
cld
es
ja
add
lock
pop
adc
fisttpl
ds
shl
xor
dec
cmp
mov
mov
scas
cmc
push
cmpsb
adc
inc
daa
pop
int
js
adc
test
outsl
rorb
fisttpll
pop
int
imul
sub
sbb
movsl
cmpsb
jne
arpl
cmp
out
push
mov
cmp
fs
aas
js
jne
push
dec
js
clts
mov
pusha
xchg
je
addl
fucomi
js
push
mov
js
sub
jo
xchg
and
mov
lock
add
out
pop
jl
dec
loop
jmp
jmp
push
cmpsb
je
sub
push
cmc
dec
leave
add
aad
lods
ret
movsb
jno
jbe
pop
pop
xchg
cltd
movsb
roll
or
mov
mov
jne
scas
pop
xchg
gs
and
into
mov
mov
cmp
cmp
out
mov
and
mov
mov
mov
fimull
sti
das
or
scas
test
int3
xor
mov
push
outsb
push
fimuls
ja
push
sbb
add
inc
mov
popf
lret
pop
pusha
push
mov
int
popf
sbb
rorl
xchg
jmp
sahf
inc
rol
mov
adc
sub
sbb
inc
fwait
inc
test
dec
imul
xchg
mov
nop
jbe
iret
cmc
lcall
jmp
ret
jno
mov
fisttpll
imul
dec
cmp
cmp
cmp
test
jb
push
shll
mov
jbe
sub
shrl
mov
aad
mov
jne
and
sti
adc
adc
sbb
push
cmp
sti
or
div
xor
mov
cmp
jl
imull
pminsw
xor
std
hlt
jp
dec
popa
in
sahf
mov
inc
cmp
repz
testl
insl
fstpt
sub
out
add
imul
out
push
mov
mov
xchg
inc
adc
addl
xor
jmp
js
notl
fwait
mov
rcr
pop
loope
mov
sub
xchg
shr
imul
jl
dec
xchg
xchg
push
xchg
cwtl
adc
and
lock
ret
adc
xchg
pop
mov
cli
jg
push
jmp
pop
jbe
pop
stos
mov
xor
pop
sub
xchg
lcall
cmp
or
arpl
insl
les
push
mov
stos
and
pop
jmp
inc
dec
adcb
xchg
xor
loop
fs
dec
xchg
imul
mov
subl
mov
add
jmp
or
aad
test
test
test
mov
sbb
add
mov
pop
in
ror
mov
jp
push
mov
push
iret
sub
or
setne
push
jnp
sarl
test
cmp
jno
xorb
call
xchg
and
xor
inc
dec
aad
outsb
rorl
in
or
je
ss
push
sti
jmp
or
imul
fsub
aad
sbb
adcl
cltd
jnp
into
in
add
gs
or
aam
cmp
sbb
pushf
xchg
push
hlt
insl
push
cmc
mov
push
pop
cmp
sub
in
push
push
jge
and
adc
out
or
sub
push
shl
adc
cmp
lods
into
add
xor
or
icebp
mov
nop
xor
in
pop
or
std
sub
push
mov
lock
inc
fisubl
push
mov
push
shl
pop
mov
pop
xlat
popa
in
sub
xchg
mov
scas
push
dec
fldenv
lahf
lods
movsl
mov
rcll
cmp
cmc
sahf
mov
ret
adc
mov
movsl
adc
fildl
or
add
sti
fildll
int3
pop
std
test
sub
int
add
jnp
sti
into
cmc
mov
jle
test
rcr
dec
jecxz
stos
lret
sti
in
and
inc
je
call
inc
sahf
xchg
std
adc
xor
xchg
cmc
je
cmp
daa
cmpb
and
adc
mov
xchg
jbe
pushf
xchg
aas
imul
mov
testl
lods
daa
mov
notl
popf
inc
jno
cmp
daa
inc
add
call
mov
sub
lahf
and
iret
push
mov
in
mov
xor
mov
clc
loope
aad
lods
xchg
test
pusha
jnp
ss
add
jnp
adc
inc
scas
and
cmpsb
push
add
test
js
mov
lret
pop
adc
ret
leave
or
lock
outsl
lods
xchg
mov
hlt
scas
aad
pop
xchg
inc
xchg
cwtl
scas
std
xchg
test
in
jecxz
imul
adcl
jne
mov
pusha
inc
pop
fwait
lahf
test
call
mov
mov
push
fidivrs
sub
pop
jmp
scas
pop
or
push
imul
out
addr16
mov
mov
call
cmp
dec
fistl
or
aad
pop
sbb
mov
shll
cmc
sub
dec
aaa
cltd
cmp
pop
sbb
movsb
sar
fstpt
inc
cmp
jo
idiv
push
fnstsw
lret
pop
int
sub
pop
jle
pop
jns
ficomps
push
sahf
insl
rorl
insb
pop
adc
je
les
in
fisttps
adc
add
jecxz,pn
lock
add
subl
push
add
dec
pop
xchg
push
xor
aad
lock
lds
in
out
push
lcall
int3
cmc
cmp
in
fsubrl
loope
es
mov
mov
jp
call
lods
add
test
lds
xchg
pop
add
xchg
and
ficoms
mov
xchg
frstor
int
cmp
cmpsb
negb
or
push
cmp
pushf
popf
add
outsl
cmp
push
mov
lret
mov
aad
mov
dec
and
das
pop
pop
sahf
cmp
js
divb
faddl
js
addr16
pop
add
in
call
ss
icebp
out
or
pop
insl
xchg
outsb
push
cmp
stc
adc
lret
out
push
popf
or
add
aad
sbb
hlt
jns
out
fiaddl
add
cmp
loopne
testl
inc
repz
insb
insl
add
sub
ficompl
mov
adc
sbb
jbe
orl
xor
nop
mov
jecxz
cmp
insl
pop
std
mov
leave
add
pop
iret
or
cmp
xchg
jae
and
pop
aad
sub
call
push
dec
pop
imul
int
out
jp
sbb
lods
dec
or
adc
sub
fldcw
outsl
xchg
imul
inc
in
inc
and
out
arpl
jb
add
mov
mov
dec
les
out
out
xor
mov
aam
add
cmc
pop
hlt
nop
mov
pop
xchg
ret
or
int
xchg
sbb
cmp
pop
cmp
jg
sbb
push
mov
xchg
mov
scas
idivb
xlat
mov
xchg
int
xchg
xchg
xchg
push
ss
cmc
enter
notb
pop
and
push
mov
int
movsl
jmp
and
fistpll
ret
and
das
outsl
push
xchg
dec
sti
adc
sahf
shl
jecxz
test
push
mov
bound
cwtl
popa
mov
add
sti
dec
add
jl
lcall
mov
gs
clc
ja
aad
xchg
lret
out
or
cmovp
xchg
xor
sub
adc
test
jp
xchg
add
aad
jl
fisttpl
scas
mov
addr16
xor
scas
fldenv
repnz
dec
ljmp
and
mov
jmp
sub
int3
and
stc
sbb
and
and
cli
out
mov
in
mov
mov
scas
adc
push
lcall
adc
xchg
cmpsb
test
cmp
push
addl
sahf
cmc
mov
cs
int3
push
lock
aad
pop
xchg
sahf
and
add
mov
adc
adc
js
adc
test
shr
adc
test
add
cmpsl
nop
xor
and
testb
stc
jo
inc
jo
mov
cmp
dec
sahf
and
or
je
adc
push
adc
mov
shll
repnz
xchg
outsl
inc
or
into
dec
mov
mov
popf
xor
mov
xchg
add
xchg
cli
fwait
jge
push
fcomps
xor
xchg
xchg
or
daa
jbe
and
or
aaa
dec
jns
adc
push
cwtl
mov
add
scas
int
inc
cmpsb
idiv
fisubs
mov
sbb
jg
fcomi
or
sub
dec
mov
lret
cmpsb
add
inc
gs
hlt
sbb
jmp
jmp
push
scas
xchg
cwtl
test
cmpb
test
fwait
add
stos
jo
outsl
sub
or
outsl
aaa
jns
lods
hlt
inc
cmp
adc
pmaddwd
mov
adc
jns
cmp
ss
push
jmp
test
cmp
jle
push
inc
bound
mov
cmp
push
ds
movsb
push
test
xor
in
sub
sub
xchg
int
sub
and
cltd
xchg
mov
lods
scas
imul
mov
lods
xor
cmp
into
mov
rclb
fbld
pop
imul
or
mov
lcall
loop
repz
or
push
dec
dec
sti
adc
push
push
iret
cmc
fs
dec
repz
out
dec
mov
and
dec
mov
mov
scas
or
lea
add
repz
lret
int3
mov
and
lds
addr16
aam
mov
and
xchg
or
xor
xchg
cmp
add
mov
das
push
pop
aam
xchg
or
mov
add
pop
add
movb
in
enter
sub
dec
or
fcomip
bound
dec
out
jmp
jno
push
addr16
add
mov
repz
xchg
mov
stos
sub
cmc
pop
or
add
call
arpl
cmp
xchg
popf
mov
cltd
sbb
sbb
mov
or
mov
add
jb
mov
mov
xchg
ret
or
xchg
mov
xor
ljmp
iret
lds
dec
and
add
add
xor
cs
mov
xchg
hlt
outsl
pop
xor
inc
lods
mov
lahf
xchg
scas
imul
rcrl
loope
cmc
mov
aad
push
mov
hlt
or
dec
stc
dec
xor
shl
adc
mov
or
dec
xchg
cmc
repnz
lock
sarl
mov
push
cmp
sti
js
iret
adc
push
popf
and
fnstcw
leave
lods
pop
fisttps
push
jle
decl
sbb
cmpl
cmpsl
push
jo
negl
stc
xchg
insb
imul
lahf
sbb
push
pop
mov
dec
scas
pop
mov
adc
movsb
adc
mov
or
cmc
or
xchg
inc
xor
xlat
loope
es
sbb
cmp
lahf
push
stos
xchg
sub
add
arpl
mov
mov
jp
jmp
je
mov
faddl
sbb
clc
push
xlat
xor
sbb
scas
sarb
fnstenv
cs
mov
sbb
insl
scas
sar
shlb
add
mov
fisubl
pop
inc
int
rcrb
mov
stos
and
scas
loope
fstps
jp
mov
adc
or
cmc
int
cmp
or
es
test
jmp
lods
lcall
arpl
lock
iret
sub
sti
sub
sub
scas
xor
nop
ljmp
leave
jb
add
push
lahf
jns
je
inc
call
add
xchg
xlat
push
ficomps
sub
rclb
and
adc
stos
inc
out
adc
and
push
je
push
sub
xchg
into
sub
or
push
add
std
xchg
pop
mov
sub
lret
hlt
sub
cmp
out
cmp
imul
dec
mov
cltd
addr16
lods
jo
xchg
jnp
dec
xor
dec
jmp
mov
mov
add
rclb
mov
inc
xor
scas
shl
xchg
or
jmp
and
sbb
mov
pop
mov
ss
mov
cwtl
int
mov
jo
jp
out
push
daa
xchg
jge
imul
testl
iret
cwtl
xchg
mov
cmpsb
jbe
out
cltd
push
std
jge
adc
dec
xor
sub
jmp
cmp
pusha
mov
into
shll
clc
std
cmpb
outsl
pop
cmpsl
lock
out
xlat
icebp
inc
test
loope
adc
sub
shl
aad
jecxz
mov
mov
jmp
in
arpl
adc
sub
adc
cmp
jmp
cmc
cs
jns
enter
mov
frstor
sub
xchg
idivl
rcr
sub
push
fistps
je
xchg
jo
negl
sub
dec
or
xchg
xchg
and
outsl
or
stos
mov
iret
outsb
jb
fidivl
shrl
sub
mov
xchg
jne
xchg
cwtl
push
aam
call
adc
cmc
cld
sbb
inc
or
xchg
mov
pop
stc
je
adc
xor
fdivrs
jns
rcl
comiss
push
push
shll
insl
mov
and
cmpsl
gs
daa
add
cmc
push
call
mov
rcr
or
popa
xchg
out
sub
push
enter
stc
jmp
mov
mov
pop
movsl
or
xchg
push
cltd
cmpsl
dec
or
dec
mov
mov
out
xchg
ret
lcall
mov
adc
ja
cli
cmp
cmp
out
jbe
leave
add
aaa
xlat
shrb
gs
inc
cli
jb
or
jo
out
les
int
jmp
clc
out
mov
jge
pop
imul
ja
mov
popl
lods
aam
cmp
jmp
add
btc
push
fwait
jmp
sub
scas
dec
jo
xor
jnp
xchg
jmp
std
aad
pop
jmp
int
loope
rorb
jbe
xchg
les
cmp
push
jne
mov
aas
jo
cmp
lds
testl
les
sub
xor
cmp
shll
and
pusha
add
adc
out
mov
out
and
les
in
ja
adc
mov
lods
loopne
push
rcrl
lods
jg
xchg
sub
cmpsl
push
mov
rolb
adc
lock
jnp
mov
inc
mov
or
repnz
or
push
stos
or
arpl
iret
fs
sbb
cli
xchg
xchg
pop
push
iret
xchg
jmp
fdivp
mov
call
mov
aas
repnz
mov
sub
cmpsl
cmc
gs
cs
cmp
push
jge
jmp
push
daa
and
jo
decb
mov
add
pop
repnz
test
push
mov
mov
test
add
cmp
fwait
xchg
adc
dec
add
inc
xchg
xor
adc
sub
and
push
sub
stos
aam
mov
cmc
sub
loopne
mov
in
sahf
inc
gs
movups
das
cmc
pop
rcr
mov
sahf
int
lret
cmp
mov
push
jae
dec
xlat
cmp
or
jno
sahf
iret
cmc
popa
hlt
aaa
jmp
inc
movntq
fdivrl
xchg
icebp
sub
xlat
scas
cmc
dec
inc
fdivl
jmp
or
xchg
mov
xchg
inc
ret
push
lods
out
add
stos
pop
cld
cld
and
lret
adc
fiaddl
mov
push
out
push
push
movsb
jne
sub
scas
push
outsl
jbe
rolb
incl
aad
shl
sti
jnp
aam
or
or
add
pop
punpcklwd
les
scas
xlat
ja
xor
or
fs
jbe
into
adc
stos
add
xlat
mov
push
outsl
xor
je
xchg
cmp
cmp
popa
test
mov
fildll
mov
sarb
fbld
jge
shl
pop
aad
gs
cltd
repnz
adc
mov
mov
rcl
int
cmp
cld
ljmp
loopne
fs
inc
sub
cld
xchg
mov
lret
popf
mov
shl
fcmovne
jg
push
and
jne
adc
push
push
lds
loopne
gs
mov
mov
ja
lret
cmc
dec
inc
xchg
push
ret
das
or
mov
and
cld
pop
out
xor
adc
cmp
adc
sub
lods
xchg
pop
mov
fistps
adc
push
jb
add
cmc
mov
jnp
cltd
push
lds
aad
ljmp
jmp
outsb
inc
adc
jmp
cmc
pusha
push
into
xor
or
shll
xchg
enter
dec
aad
icebp
adc
cmc
repnz
into
pop
xchg
jp
mov
addr16
push
xchg
lret
push
adc
cmp
lea
and
leave
enter
lods
dec
add
test
mov
mov
in
stc
cmc
rorl
and
sub
stos
into
into
push
into
pop
sub
mov
lods
iret
lcall
pop
xchg
repz
push
fcmovbe
xlat
lea
jo
jbe
sti
testl
sbb
sahf
in
ljmp
hlt
adc
testb
xlat
adc
movsl
fstl
push
andl
cmc
ret
insl
test
adcl
test
sbb
mov
mov
cmpsl
cld
jns
loop
test
inc
fisubrl
jmp
sub
ret
push
add
enter
das
dec
push
insb
pop
sub
ret
fcomip
inc
stos
mov
jp
xlat
loope
scas
push
in
dec
das
push
lock
mov
sub
mov
pop
and
dec
stos
test
test
mov
mov
jl
fs
fwait
add
or
mov
sbb
loopne
cmc
dec
push
pop
adcl
leave
dec
cmc
dec
clc
or
sub
jmp
int
popa
push
aad
shl
cmp
cmp
inc
out
ret
push
enter
and
push
jl
push
mov
lahf
pop
aam
xchg
add
repnz
push
es
loop
scas
xchg
and
push
mov
pop
and
push
cmc
lcall
mov
test
xchg
xchg
aam
add
push
adc
xor
es
dec
in
cs
and
lcall
adc
popaw
fimuls
pop
mov
jnp
sub
out
adc
jno
loopne
mov
lcall
inc
notl
rcl
ljmp
push
outsl
subl
and
pop
movntps
xchg
adc
emms
sahf
int3
cmp
imul
pop
lods
mov
inc
lods
push
inc
cmp
mov
cmp
pop
aad
fidivs
xlat
in
insb
fstpl
shrb
dec
pusha
jmp
aad
jne
dec
push
sbb
lcall
mov
dec
add
dec
add
push
or
lret
or
insl
imul
aaa
scas
jno
cmp
out
in
push
mov
mov
testl
dec
aad
dec
jp
dec
ret
pop
btc
nop
mov
aad
idivb
cld
pusha
xchg
addl
lahf
xchg
inc
sub
mov
fildl
adc
cmp
ljmp
adc
xchg
insl
sbb
dec
cmp
popf
lret
rcll
test
inc
and
jp
pushw
popa
push
jmp
add
add
cmpsl
test
fmull
mov
sub
pop
dec
gs
push
mov
or
das
push
insl
inc
cld
mov
aam
mov
call
or
mov
aas
jmp
and
frndint
icebp
cmp
pop
leave
roll
cmp
stos
cmc
mov
xchg
mov
adcl
mov
fwait
jb
lret
push
cmp
sub
lahf
or
add
shl
dec
ja
mov
dec
and
inc
inc
xchg
jmp
fstpl
cmpsl
mov
and
adc
dec
fldenv
jg
mov
mov
in
xchg
cmpsl
fmuls
fdivs
push
repnz
add
and
dec
inc
or
and
pop
xchg
sub
lods
arpl
enter
ja
faddl
push
gs
push
mov
and
stc
push
adc
xor
popf
jne
ss
aaa
sub
lock
inc
xchg
repnz
inc
hlt
lea
xchg
and
mov
pop
lcall
cmp
and
insl
cmc
jecxz
in
mov
insb
push
ret
outsl
aad
adc
jnp
dec
sbb
lcall
or
mov
jl
sarl
fcomip
jg
jbe
push
adc
mull
mov
cmp
push
imul
mov
inc
lahf
icebp
pop
imul
or
rcrl
add
or
ret
outsb
add
fwait
pop
adc
aad
mov
in
imul
cmpl
aad
jl
cwtl
movsb
sub
mov
jp
andb
xor
pop
sbb
gs
gs
lret
sub
adc
bound
mov
sbb
call
push
push
pusha
dec
push
mov
cmp
mov
outsb
int
popa
push
and
mov
aad
dec
ror
sarl
cmp
cmc
arpl
lret
es
call
add
in
dec
mov
mov
jb
lea
jo
sbb
cmp
repnz
push
out
iret
jmp
fucom
jnp
push
pop
in
push
inc
jns
outsl
nop
mov
inc
rorb
sub
adc
or
dec
shr
sub
cmp
clc
rol
ljmp
push
stos
test
in
movsl
test
and
lods
dec
scas
mov
jb
mov
outsb
std
sbb
outsl
aad
push
rcl
iret
cmc
lret
jl
arpl
inc
sub
push
xchg
lods
xor
shlb
jg
cltd
test
xchg
dec
add
inc
ja
push
and
inc
int
dec
mov
jl
psubsb
lea
mov
in
sub
adc
jno
sbb
pusha
addr16
push
cmp
adc
mov
mov
push
pop
repnz
repnz
pop
scas
jmp
sbb
hlt
or
std
mov
or
cmc
push
test
pusha
dec
push
in
fld
jae
pop
iret
push
and
call
or
addr16
push
cmp
mov
cmc
ljmp
fs
enter
add
and
mov
div
mov
aaa
jbe
fbstp
cmp
jg
fistps
xor
push
into
iret
sti
fildll
add
xchg
sbb
call
jge
sbb
and
sbb
hlt
nop
enter
add
lret
cmp
mov
les
scas
pop
mov
seto
inc
out
iret
xchg
in
inc
divl
cmp
addr16
sbb
jl
mov
std
mov
xchg
shll
xchg
mov
sar
out
xchg
popf
js
add
mov
or
sti
cmc
mov
cld
outsb
or
std
sub
push
lcall
out
dec
punpckhbw
mov
mov
je
sbb
les
js
xchg
outsl
push
mov
pop
jp
aad
aad
std
nop
cmp
jae
stc
fildll
inc
incl
into
out
mov
fsubs
mull
mov
jo
mov
fisubrs
sbb
sti
push
sti
xor
xchg
in
mov
jo
mov
mov
xchg
mov
int
xchg
and
sti
xchg
xor
lret
arpl
leave
into
mov
mov
fstpt
ljmp
rorb
into
jb
jecxz
or
lds
dec
stos
push
xchg
or
push
aad
cld
push
push
dec
inc
push
js
movsb
jg
pop
pop
fadds
cmp
xchg
mov
movsl
sub
pop
cltd
mov
rcll
or
mov
push
idivl
fadd
xchg
sub
cmp
mov
movl
jg
xor
or
testl
inc
notl
into
popf
mov
pop
push
xchg
and
mov
and
add
cli
sti
cmc
xchg
int
jp
jb
rol
or
xchg
sub
or
mov
and
lret
call
scas
cmp
out
xor
mov
out
loope
aad
adc
inc
ret
jl
inc
notl
andb
or
test
pop
sub
idivl
add
rolb
fstpl
add
movsb
fisubs
clc
lods
cmc
sub
lods
cmp
dec
loop
dec
cwtl
mov
test
cmpsl
sub
or
seta
mov
cmc
dec
add
test
mov
push
call
lds
mov
popa
into
inc
aam
mov
adc
cld
cs
cmc
mov
push
aad
push
jb
outsl
and
pushf
pop
adc
push
mov
arpl
pop
cmp
adc
stc
mov
rorl
ss
in
stos
rcr
jmp
divl
jne
loop
pop
push
cmp
jg
cli
fmulp
clc
cmp
imul
sbb
mov
xchg
movsb
jae
sub
aaa
mov
stos
cmp
cmp
xlat
pop
mov
push
sub
es
jo
sbb
addr16
mov
andl
lods
aad
mov
iret
jge
dec
ds
lods
fisttpll
cmp
xor
push
mov
mov
out
dec
pop
dec
les
fsubs
cwtl
cli
or
or
push
push
adc
sub
data16
cmp
push
jbe
push
fisubrs
cmc
xchg
push
xchg
or
xor
sub
cmp
xor
repz
imul
js
in
aad
cmp
add
xchg
in
imul
test
cwtl
cmp
fcomi
fld
xchg
push
mov
data16
aad
in
add
cmc
cltd
ret
setge
jl
movsl
fidivrs
lret
adc
mulb
xor
jmp
sahf
and
popa
testl
pop
add
push
and
cmp
inc
fcomps
dec
and
dec
jg
sbb
outsl
add
cmc
mov
scas
lret
mov
out
imul
mov
cmp
test
imul
jae
aas
sub
push
pop
xchg
cmp
xchg
mov
sbb
cmp
adc
sti
xrelease
xchg
lcall
jg
repnz
and
pop
sbb
out
out
frstor
dec
pop
aam
pop
mov
popa
arpl
pop
push
push
pop
jge
insl
mov
mov
xchg
inc
bound
jo
mov
faddl
leave
push
mov
mov
lea
fldenv
rorl
mov
sti
mull
scas
adc
jmp
or
ficomps
mov
or
xchg
sub
xchg
lcall
mov
jp
push
in
cwtl
movsl
fidivrl
andb
das
xchg
sbb
mov
ror
cmp
je
mov
daa
aad
cli
lods
sub
cmp
rcll
sbb
xchg
xchg
cs
adc
mov
scas
je
jl
inc
mov
imul
dec
scas
xchg
aaa
or
xchg
add
cs
mov
push
cmp
adc
add
sub
sub
out
lods
or
mov
cli
call
xor
xchg
fdivl
mov
fstpt
outsl
aad
in
xchg
arpl
jbe
pop
mov
mov
stc
loope
mov
ja
scas
shlb
push
inc
xchg
jl
fsubrs
add
in
mov
stc
xor
mov
xor
xor
and
dec
insl
out
fldcw
add
mov
fimull
movsb
scas
xor
pop
xchg
add
sarl
addr16
bound
arpl
mov
call
fbstp
xchg
push
rclb
mov
jmp
mov
jns
rcrl
int
cltd
out
dec
sub
sub
insb
loop
out
out
adc
adc
mul
das
in
into
mov
cmp
cmp
xchg
mov
mov
inc
cli
pop
arpl
mov
and
or
lahf
ret
and
push
movsl
dec
fnstsw
mov
push
movsl
stos
sub
cmp
mov
cmp
cmp
lods
in
and
pusha
outsb
aad
and
div
inc
lds
shl
es
outsb
or
push
nop
repnz
xcrypt-cfb
cmpsl
outsl
push
aam
lahf
and
cmp
mov
mov
pushf
jnp
cmp
lods
sbb
xor
rcl
sbb
jecxz
and
out
int
jmp
xor
mov
aad
cmp
mov
imul
incb
mov
dec
inc
dec
call
lods
mov
leave
mov
fidivl
hlt
dec
inc
add
or
call
jge
iret
shr
mov
cld
out
or
and
or
loopne
inc
mov
pop
cmp
aam
aad
jno
xchg
lea
mov
pop
gs
dec
inc
cs
add
mov
stos
int
adc
dec
aad
lcall
and
in
mov
mov
out
push
adc
cmp
xchg
mov
push
stos
xchg
pop
sbb
push
mov
pop
out
sub
push
into
push
dec
jmp
lods
es
and
jb
sub
adcb
and
xlat
xor
cmc
or
cmp
imul
aad
pop
out
lea
mov
int3
add
mov
roll
inc
jg
call
mov
add
lret
inc
mov
in
in
cmova
aam
out
ficompl
and
sub
adc
and
xchg
and
les
push
xor
push
add
cs
andb
leave
xchg
aad
or
dec
movsb
pop
gs
xchg
push
je
push
aad
repz
call
lea
mov
aad
and
mov
cmc
xor
mov
fadd
decl
cmp
xor
jns
iret
mov
mov
push
outsl
fwait
sub
xor
fiadds
mov
shll
adc
out
pop
mov
arpl
cmp
add
xor
dec
or
mov
sti
jge
repnz
imul
mov
dec
fsts
jno
inc
std
xchg
pop
stc
repz
popf
sbb
adc
test
int3
jecxz
jl
push
stos
out
jecxz
test
mov
movsl
pop
xchg
mov
mov
xchg
std
cmc
fcoms
ss
test
sbb
push
fwait
mov
arpl
cmc
add
cbtw
andl
add
incl
int
sub
rorl
dec
stos
inc
outsl
jne
mov
jo
into
enter
jecxz
out
fadd
js
adc
aad
xchg
or
call
andl
xchg
stos
mov
jl
push
faddl
pmaddwd
sbb
adc
add
mov
adc
xchg
add
push
mov
and
cmpsb
xchg
mov
divl
jecxz
aam
xor
lock
shrl
xchg
push
les
jne
rsm
push
lods
push
out
scas
inc
push
add
or
inc
pop
cmp
call
xchg
ficoms
jne
mov
or
out
sbb
push
stos
stos
cmp
and
hlt
adc
rclb
fcomps
mov
fsub
and
push
or
int3
sbb
rorb
sbb
ds
mov
shll
and
or
sub
pop
insl
jns
push
mov
xchg
scas
or
and
mov
xchg
test
std
ja
or
jmp
cmc
mov
mov
cli
adc
and
cmovnp
cmp
xor
and
xchg
andb
jb
cmpsl
dec
ja
push
and
add
add
aam
push
ffreep
lock
dec
movsb
into
imul
and
lods
sub
je
cmp
scas
add
fucomip
push
and
stos
mov
mov
adc
jl
and
sub
mov
mov
inc
movsl
xlat
or
xor
mov
stc
push
xchg
dec
hlt
popf
xlat
cmp
xor
add
int3
bound
inc
aad
cltd
sbb
xchg
cltd
ret
push
lods
adc
xor
xchg
or
adc
aas
dec
jno
nop
lods
in
xor
shrl
or
xor
jmp
adc
and
xchg
outsl
popf
inc
jbe
shlb
and
add
pushf
imul
push
or
dec
mov
pop
adc
mov
pop
xchg
xchg
sti
adc
or
gs
lods
bound
lock
repnz
mov
aas
test
divl
hlt
and
xchg
or
div
out
push
shrl
pop
arpl
and
orb
xchg
or
or
or
push
fimull
pop
loopne
jl
jne
sarl
mov
mov
adc
fdiv
pusha
popf
mov
add
outsl
push
test
cwtl
cmp
call
jp
ja
shrb
pop
andl
call
sbb
rolb
rcr
stos
andb
cmp
xor
push
push
mov
mov
add
mov
or
pop
sti
or
inc
dec
xchg
lahf
je
dec
movsl
mov
adcb
dec
dec
cmpsl
lret
jle
rcll
or
jb
daa
xchg
dec
and
lahf
mov
jp
or
mov
mov
je
or
in
mov
xchg
add
outsb
test
out
shl
pop
mov
mov
rolb
jne
data16
sbb
push
mov
ja
std
xor
lret
jecxz
addr16
call
mov
mov
cli
mov
and
dec
add
cmc
iret
outsb
dec
dec
pop
aad
xchg
outsb
mov
sub
test
cmp
leave
fcoml
cli
les
lcall
xchg
add
inc
ret
mov
fldenv
notl
xchg
lds
jp
jnp
hlt
push
push
lods
mov
sub
fists
testb
cmp
xchg
arpl
dec
nop
cmp
sti
or
push
ret
rorl
divl
cmp
cltd
iret
dec
mov
or
cmc
lea
mov
and
roll
add
push
inc
jns
stos
daa
loopne
mov
out
push
xchg
jge
adc
push
fs
cld
into
aad
mov
push
in
push
int
xchg
mov
push
ljmp
adc
cmp
sub
sub
les
xor
jno
lods
mov
lahf
and
imul
and
mov
jmp
lcall
fdivl
xorl
mov
pop
cltd
lock
cs
mov
or
fistl
mov
inc
ljmp
cmp
iret
bound
aad
rclb
dec
add
mov
pusha
or
jmp
pop
xor
pop
movsl
call
xchg
mov
inc
sbb
adc
xlat
mov
xor
sub
jle
inc
orl
pop
mov
mov
and
mov
mov
jp
je
aad
dec
les
dec
daa
jl
xchg
popf
xor
and
movsl
push
mov
mov
adc
sub
loope
scas
stos
ja
lahf
int3
inc
cvtps2pd
inc
adc
outsl
call
push
inc
outsl
aad
push
adc
in
pushf
mov
ret
loope
jnp
in
mov
inc
es
mov
and
xchg
sub
lock
outsl
xor
jmp
xchg
or
movsb
stos
fmuls
ljmp
in
xchg
cmpsl
adc
sbb
aad
push
fstps
js
xlat
cmp
subl
sbb
mov
mov
repnz
mov
push
jg
sti
jl
shl
cmp
sti
lods
or
sarl
mov
and
inc
popf
jmp
jle
int3
call
js,pt
xor
and
mov
push
insl
cwtl
popf
mov
add
or
fmuls
aaa
jg
or
xor
or
mov
lahf
daa
ror
ljmp
xchg
jae
outsl
mov
cmpsl
bswap
in
gs
push
int
pop
nop
cld
adc
push
cli
cmp
sti
push
sbb
lods
shr
arpl
add
loopne
adc
fmul
cwtl
imul
xlat
xor
jnp
call
and
mov
in
and
testl
repnz
ret
movsl
xchg
push
cmc
shrb
aad
fs
loope
outsb
test
mov
dec
mov
nop
lock
or
enter
sub
pusha
or
pop
dec
xchg
push
jmp
rcl
lods
cmpsl
adcl
loopne
or
scas
fcom
loopne
dec
add
testl
arpl
aam
test
sbb
leave
sbb
push
aam
mov
push
nop
divl
dec
mov
enter
cmpsb
cli
push
pop
ficomps
inc
fs
shlb
sbb
xor
push
scas
pop
cli
jle
pop
push
pop
call
jbe
lods
stos
std
mov
mov
add
fwait
sbb
cmp
gs
xchg
inc
ds
add
sahf
mov
cmpsl
cmp
xchg
or
dec
addr16
inc
imul
mov
fidivs
les
cmc
lea
inc
nop
inc
mov
jno
les
jmp
xor
outsl
fbstp
push
mov
pandn
pusha
data16
mov
jl
mov
sbb
loop
gs
or
out
push
pop
popa
xor
jmp
aad
loope
push
rcrl
mov
mov
mov
xchg
daa
int
gs
mov
outsb
test
xor
add
ljmp
cwtl
mov
pusha
pop
incl
je
add
in
or
sub
lahf
loopne
adc
sub
cmp
jl
std
mov
dec
clc
jp
imul
dec
mov
lahf
std
cmc
in
xor
into
inc
xchg
enter
mov
sbb
cld
or
xchg
push
push
lret
mov
insl
mov
jp
add
imul
cmp
cwtl
and
xchg
jmp
xchg
xor
jge
xor
xchg
loop
loopne
iret
dec
repz
call
ljmp
lds
xor
sti
inc
daa
add
inc
cli
jmp
fisubs
stc
sbb
das
into
cltd
jmp
mov
pop
and
ja
scas
or
mov
dec
adc
adc
or
pop
dec
and
ja
clc
insb
push
push
xchg
and
lods
mov
movaps
loopne
das
mov
popf
call
mov
in
sbb
mov
push
xchg
mov
sbb
popa
dec
pusha
in
jnp
test
jmp
xchg
xchg
inc
jmp
push
adc
xlat
es
add
in
enter
ret
sub
stos
cmp
sub
pop
movsb
adc
cmp
xchg
push
adc
cmpsl
cld
or
les
shl
shlb
out
adc
dec
mov
orl
xor
pop
jne
cmpb
push
mov
int
aad
xchg
mov
mov
pop
mov
int3
adc
les
push
sarb
cmp
testl
add
adc
jae
sbb
push
sti
divl
jg
fwait
mull
adc
push
pop
and
fstl
andl
push
dec
push
cli
mov
pop
decl
popf
add
fs
in
jp
mov
rcrb
jmp
leave
imul
sbb
mov
movsl
mov
xchg
dec
xor
cwtl
cld
jmp
fs
in
mov
daa
fcoms
adc
int3
pop
inc
adc
jge
in
shlb
push
movsb
psrld
sti
pop
loopne
or
inc
mov
test
jb
adc
pop
mov
push
ja
inc
cmc
repz
xchg
nop
adc
inc
nop
imul
repz
sub
push
xchg
hlt
out
gs
fmulp
nop
push
mov
mov
in
test
sub
fcoms
fildl
movhps
xchg
jp
into
and
cmpsb
fs
aad
insb
cmp
notl
xchg
cs
adc
sub
out
fisubl
mov
out
jg
xorl
lcall
push
mov
aas
mov
clc
mov
stos
mov
outsb
xchg
or
shl
imul
mov
jle
ret
loope
xchg
testl
lret
push
mov
loop
in
cmp
inc
pop
scas
mov
ror
std
les
sub
pop
and
outsl
out
sbb
push
sbb
aad
xor
dec
jmp
cltd
pusha
pop
mov
inc
jnp
push
push
add
scas
fcmovbe
jge
repz
dec
mov
icebp
xchg
rcrb
ret
sbb
outsb
andl
xchg
cmc
mov
inc
lods
bound
lretw
cmp
mov
cmpl
or
loope
mov
ds
in
mov
fsubr
in
cmp
dec
xchg
lea
loopne
mov
xchg
xor
jno
int
cli
scas
lret
xor
out
pop
push
jns
xchg
popa
pop
aaa
sar
cmp
outsb
inc
fwait
inc
das
cmp
adc
arpl
stos
mov
test
inc
stos
xchg
jle
out
aad
and
stos
imul
push
xor
mov
dec
dec
imul
fstp
andl
movsb
mov
movsb
and
xchg
pop
in
out
jg
push
test
mov
ret
rol
xchg
xchg
test
out
adc
jl
cwtl
xor
push
mov
out
addr16
jmp
mov
movsb
test
xchg
sahf
jb
xor
mov
mov
jae
arpl
or
rcrb
in
aas
arpl
adc
xor
stc
or
adc
notb
add
mull
mov
inc
adc
les
push
int
sahf
pop
loope
pop
aad
test
lods
lea
or
imul
fstpt
mov
sub
incb
mov
inc
out
jns
out
in
cmc
mov
jmp
pop
push
repnz
mov
lret
popa
jle
xor
fisubrs
lods
repz
xor
int
insl
sbb
sbb
cs
iret
add
sar
pop
and
negl
cmc
and
sub
scas
sbb
stc
mov
push
xor
cmp
aas
dec
popa
out
or
fyl2xp1
push
and
mull
xchg
repz
or
into
cmc
mov
jp
and
repnz
lods
cmp
fadd
adc
out
stos
ja
rolb
push
fwait
adc
inc
pusha
push
test
push
lcall
imull
cli
pushf
lods
test
xchg
arpl
outsb
std
popa
pop
xchg
inc
mov
insb
sub
or
stos
mov
in
pusha
loop
push
std
xchg
insb
push
push
adc
call
xchg
lods
xchg
addr16
fstl
mov
in
movsb
adc
loope
scas
sub
xchg
push
xor
sbb
xor
jle
loope
push
ret
jp
dec
out
mov
xchg
jge
pop
cmp
jne
aas
cmp
mul
stos
aad
std
rcll
testb
mov
and
fimull
xchg
hlt
ja
dec
imul
aam
mov
test
scas
xchg
aad
dec
and
and
enter
jmp
jge
out
fdivrl
pop
adc
push
repnz
pop
xor
je
jmp
adc
ss
jno
out
add
mov
mov
xchg
add
cmc
mov
sub
jg
xchg
in
nop
fsubrp
add
pop
js
mov
and
cld
int3
jge
add
pusha
jmp
sub
mov
idivl
mov
repz
jne
or
imul
inc
jnp
jbe
lea
out
pop
sub
jo
adc
jmp
jmp
fbstp
and
jmp
sub
lods
inc
mov
stos
jge
push
out
and
popf
sbb
test
jmp
adc
cmp
adc
out
shrb
inc
or
xchg
dec
cmp
adc
mov
movb
xor
jge
inc
out
xchg
fildll
xchg
ljmp
push
test
push
sub
mov
outsl
jae
aas
das
mov
mov
xchg
mov
sub
dec
sub
xor
mov
jae
icebp
jge
ficoml
xchg
cmpsb
jb
sbb
xor
pusha
pop
decl
jmp
jnp
mov
sbb
mov
mov
mov
div
mov
test
lods
sbb
sub
xor
dec
inc
adc
mov
mov
inc
push
jno
sub
jns
ffreep
inc
pop
sub
mov
push
call
cmp
add
decb
stos
or
mov
outsl
int
js
fimuls
testl
add
ds
sarl
jae
nop
or
add
cmp
push
mov
pop
pop
xchg
xor
das
add
jns
movsl
pop
in
outsb
and
ficompl
dec
xchg
test
jecxz
cmpsl
mov
jbe
adc
xchg
or
push
xchg
stos
xor
xor
mov
call
call
mov
fstl
mov
add
pop
mov
xchg
in
mov
frstor
xor
pusha
lods
es
jne
call
sar
imul
fcoms
mov
and
das
cli
sub
out
push
cmp
mov
pushf
push
jbe
jge
out
loop
dec
nop
lcall
cmp
xlat
aas
out
js
jecxz
cmpsb
push
sbb
test
shll
cmp
movq
pop
pop
int
xor
push
loope
fnstenv
push
dec
cmp
cmpsb
inc
ss
cltd
scas
popf
adc
and
mov
mov
and
mov
repnz
stos
mov
jae
fcoml
sub
test
pop
imul
sbb
negl
jmp
ror
sbb
mov
daa
xor
arpl
insb
or
sbb
xor
sbb
mov
sub
push
sbbb
adc
lods
out
push
mov
cmp
jne
xchg
push
lea
jne
lods
and
dec
adc
mov
cmp
mov
imul
fwait
or
test
int
cs
add
or
mov
rclb
insl
push
jge
adc
mov
dec
out
adc
sahf
imul
push
cmp
jne
aas
aam
out
or
iret
and
add
int
xor
fildll
fisttps
push
les
jns
pushf
mov
dec
and
mov
adc
test
adc
ss
jl
mov
mov
shll
inc
lods
ss
fildll
sbb
and
xchg
rol
ss
pop
pop
xchg
sbb
call
jmp
inc
sub
ja
mov
xor
xor
and
mov
loopne
cmp
cmp
mov
and
ret
sbb
adc
cld
mov
mov
mov
loop
in
xor
sti
adc
rolb
dec
pop
xchg
mov
cmc
dec
lret
or
push
xor
pop
mov
sbbl
lret
jle
sbbl
mov
out
stos
cmp
push
xchg
fnsave
adc
dec
push
sub
loope
bound
scas
xor
xlat
add
mov
cwtl
add
cmc
je
popa
jmp
test
sub
insb
nop
xor
fstpl
pushl
iret
jecxz
cltd
scas
shlb
add
lahf
xchg
movsb
mov
arpl
ficompl
stc
mov
mov
cmp
dec
add
sub
cli
jmp
out
stos
clc
mov
or
jmp
stos
aaa
cmp
in
cmp
addr16
ret
add
cmc
cmpsb
push
icebp
or
lcall
jp
mov
pusha
mov
mov
cltd
fdivl
aad
stos
imul
jg
lret
in
push
and
mov
mov
cmpsb
std
mov
pusha
xchg
stc
nop
inc
and
dec
insb
mov
maskmovq
idivl
lahf
mov
xor
test
insb
adc
add
popf
js
in
stos
popf
jl
mov
jecxz
and
repz
mov
inc
mov
call
data16
sub
js
out
cmp
imul
sahf
je
push
mov
xchg
xlat
push
das
mov
mull
pop
push
mov
xchg
push
or
pop
cmp
lcall
inc
js
shrl
int
arpl
mov
xchg
cmp
jmp
mov
fwait
xchg
lcall
lods
add
mov
dec
scas
cmpsl
xor
lock
push
and
inc
sub
cmp
push
mov
les
leave
cmc
inc
inc
cwtl
cmpsl
jnp
daa
fiadds
pop
and
insb
test
repnz
and
push
mov
mov
sub
jb
xor
sarl
out
mov
iret
jp
cmp
rolb
jecxz
pop
insl
test
std
lcall
test
hlt
orl
imul
lock
inc
or
jle
imul
pop
push
cmp
xor
cmp
jp
icebp
ljmp
rorl
push
arpl
push
call
pop
adcl
mov
lods
test
mulb
arpl
js
jb
or
data16
out
dec
sbb
and
in
faddl
scas
les
jb
imulb
and
xchg
aaa
xchg
loope
jecxz
out
sub
cs
push
shll
stc
adc
lods
pop
mov
pop
xor
aas
add
push
aad
repnz
cmp
jmp
test
test
dec
adc
movsl
cmp
jl
add
sbb
bound
adc
lods
int
cmp
iret
subl
lock
lock
mov
cltd
imul
inc
and
jle
sbb
int
or
or
fdivp
xchg
pcmpgtb
and
push
sub
out
mov
mov
enter
and
jle,pt
inc
clc
push
dec
sbb
xor
dec
pop
not
in
int
popf
lret
cmpsb
test
out
pop
cltd
lods
add
inc
mov
sbb
into
sbb
cmp
fldl
mov
jnp
in
fisubrs
mov
mov
add
mov
scas
repz
mov
fisttps
mov
xchg
outsl
movsb
movsb
data16
stc
insb
fisttpll
inc
mov
out
xchg
jns
xchg
cld
into
sbb
test
pop
loop
fcmovnb
jnp
or
xor
push
fdivrs
adc
cwtl
xchg
xchg
lahf
cmc
push
and
mov
jne
jns
mov
lods
sbb
fidivrl
and
mov
lods
sbb
fdivp
insl
sub
popa
jg
sti
xchg
xchg
sti
iret
inc
lahf
sbb
lods
enter
and
lods
mov
in
dec
pop
pop
push
bound
ss
push
push
jae
push
int3
and
call
mov
jl
aad
fcoms
or
push
xchg
cltd
and
adc
aad
mov
in
fiadds
inc
pop
rcll
lcall
fisttpll
std
cmp
cmp
sbb
cmp
sahf
mov
daa
addr16
push
fistps
or
cld
dec
mov
cmp
cmp
dec
push
mov
popf
push
jge
cwtl
int3
mov
popa
lods
lods
and
pop
shl
push
pop
push
decb
notl
cmp
rorb
sub
inc
jmp
sub
add
fdivrl
rcll
mov
mov
cmpsl
scas
aad
and
divl
push
cld
mov
xor
call
mov
mov
or
scas
and
sbb
mov
dec
mov
call
xchg
pop
cmpsl
pop
bt
dec
mov
lods
notl
add
pop
mov
cld
cmp
int
mov
in
repnz
sbb
pop
mov
sti
xor
mov
ljmp
pmaddwd
lds
and
jge
jge
lcall
or
popa
xchg
insl
out
jo
nop
cld
xor
lods
push
aas
lea
in
pop
sbb
out
cmc
and
std
mov
or
decl
cmp
lahf
lods
add
adcl
sub
addr16
xor
inc
lods
and
lahf
aaa
sub
popf
or
xor
push
imul
or
sub
iret
mov
dec
inc
pop
or
add
roll
pop
cmc
xchg
cmp
addr16
add
jg
adc
inc
or
push
xor
xchg
adc
aad
mov
or
xlat
fisubs
lret
jnp
psrad
lret
cmpsl
popa
mov
mov
inc
dec
pop
test
xlat
pop
xchg
or
push
lods
add
inc
roll
jne
outsl
imul
insb
sbb
outsb
mov
and
mov
les
and
add
out
push
or
jge
or
loop
leave
in
pop
cmp
inc
jg
insb
lods
icebp
stc
push
pop
dec
jns
xchg
sub
jnp
add
and
pusha
sbb
xchg
imull
dec
jl
mov
test
daa
add
fs
pop
and
adc
push
sbb
xchg
fisubrl
call
enter
jp
mov
pop
call
cmp
hlt
in
add
inc
aad
xchg
push
fs
enter
ret
add
bound
mov
inc
bound
mov
cmp
lret
cwtl
dec
mov
dec
dec
jg
or
adc
and
xor
fdivrl
xor
jmp
negb
pop
ss
sahf
mov
jnp
xor
xor
negl
jmp
or
jp
push
mov
mov
cmp
dec
bound
outsl
popf
cld
xor
xchg
sbb
mov
scas
adc
lret
sub
jae
cli
cwtl
ret
imul
out
jge
push
and
bound
sbb
in
call
lahf
jnp
add
retw
movsl
mov
les
pop
mov
dec
xchg
addr16
aam
pop
xchg
jb
imul
mov
cmp
push
xchg
mov
movsl
xchg
dec
ja
and
lea
lds
lcall
mov
fsubrl
jne
mov
aad
out
add
mov
jne
shrb
sbb
mov
cltd
fldl
dec
push
cmp
fucom
mov
pop
rcl
jge
push
xor
and
add
iret
and
xchg
jns
jb
insl
adc
data16
cmc
scas
repz
xchg
jnp
dec
into
adc
mov
mov
dec
int3
lret
dec
or
and
xchg
jae
inc
jl
popf
push
pop
das
fbstp
mov
inc
bound
adc
shrl
or
cld
fists
cmc
add
push
int3
push
fisttpll
inc
inc
xchg
or
cmp
cmc
pop
pop
fs
jge
mov
sbb
adc
mov
popa
mov
in
or
iret
rolb
adc
cmp
and
pop
js
sub
jmp
push
mov
cmp
adc
std
and
inc
mov
lret
loop
cmp
repz
dec
and
inc
rcll
dec
fdivrp
cmc
inc
jg
aad
aad
data16
xchg
in
ret
sub
sbb
aad
std
orps
sti
or
xor
filds
sbb
jmp
pmaddwd
testb
lret
mull
cmp
fists
out
jbe
push
das
mov
cmp
and
lcall
xchg
xchg
test
adc
in
in
jecxz
sub
cmp
dec
xchg
ds
xchg
enter
dec
stc
jl
das
out
or
test
orl
imull
xchg
jae
stos
je
lods
cmp
out
das
and
data16
mov
call
notl
pop
mov
mov
aaa
cmp
lret
call
insb
mov
jecxz
or
int3
lods
push
xchg
cmp
xchg
std
or
stos
arpl
mov
test
setne
sbb
pop
xor
sub
mov
cmc
ja
ret
aad
imul
fsts
jl
and
xor
mov
sbb
dec
push
mov
cmp
cli
or
mov
lcall
test
mov
fldcw
and
xchg
add
cmpsb
mov
cmpsb
cs
mov
and
add
jp
fsubr
push
movsb
test
cs
js
stc
jns
adc
repz
push
mov
outsl
mov
lods
lret
subps
push
int
adc
cmpsl
mov
test
inc
xchg
inc
sbb
mov
cmp
mov
popf
inc
add
xchg
std
mov
test
mov
inc
psllw
mov
jl
push
mov
loop
cmc
dec
fucomip
mov
inc
out
fstps
inc
insb
cmp
fidivl
std
inc
into
jbe
dec
jp
adc
jp
nop
das
movsl
lret
jnp
mov
cmp
shl
inc
jmp
xchg
nop
mov
cmp
aam
ficompl
ret
inc
or
gs
xor
mov
ret
xchg
mov
int3
shr
mov
out
insl
pop
hlt
loopne
xchg
mov
cli
test
add
sub
ljmp
aad
xor
jmp
cltd
fwait
push
pop
push
idivl
test
ror
jae
sbb
xlat
add
dec
xchg
ret
xor
jns
xchg
roll
push
lcall
jge
nop
leave
cmp
cli
inc
and
std
pushf
jb
jge
in
shlb
cmpsl
inc
out
mov
shlb
and
or
movsb
cld
sbb
add
pop
aad
adc
cmp
push
jae
cmp
negl
mov
mov
fwait
repnz
jbe
sahf
mov
scas
mov
mov
stos
scas
js
xchg
sbb
clc
push
scas
sbb
cmp
cmp
push
out
aad
cmpsb
xlat
lods
add
add
sbb
cmc
mov
mov
add
jle
mov
xchg
cmpsb
dec
mov
test
xchg
mov
inc
add
cmpsb
addr16
popa
mov
adc
stos
fwait
imul
or
mov
push
cmp
jmp
mov
test
mov
sbb
add
jb
js
aad
sub
push
mov
shl
cmc
adc
or
int
cmp
aad
mov
pop
fisttpll
pop
mov
or
repnz
clc
negl
inc
mov
je
ficomps
stos
sarb
cs
lea
mov
mov
mov
mov
mov
ja
loop
std
les
lcall
lods
movsb
xchg
add
xchg
add
loope
repz
xchg
test
dec
out
jbe
int
cs
mulb
out
fiadds
std
outsl
xor
les
cmpsb
and
lods
mov
sahf
push
and
ret
mov
andps
imul
cmc
push
pop
in
and
stc
scas
xchg
iret
adcl
mov
xlat
pusha
mov
in
or
addr16
adc
push
sbb
stc
and
ds
jge
add
lcall
scas
fnsave
mov
jmp
jp
in
inc
push
push
xor
shll
rclb
mov
xor
js
outsb
xchg
in
push
mov
mov
push
mov
pop
add
add
mov
jmp
ret
dec
fstpt
push
std
xor
xor
mov
sub
mov
aas
sub
ss
dec
pop
sti
mov
fimuls
or
add
rcr
loopne
sbb
repz
xchg
mov
dec
cmp
sub
mov
fisttpll
cmp
adc
inc
push
lcall
sbb
int
mov
pop
test
lods
adc
or
jle
push
cwtl
cmp
xchg
gs
mov
loopne
dec
add
push
filds
sub
dec
push
outsb
dec
test
iret
cmc
loopne
adc
std
fsubr
sub
jl
mull
iret
mov
adc
cli
popf
xchg
xor
xor
repz
fwait
cld
cmp
in
inc
pop
je
and
pushf
mov
jge
or
movsb
pop
js
lods
cmp
ljmp
xchg
dec
orl
inc
adc
in
lret
call
inc
cmp
in
inc
xor
pop
fstpl
add
cmp
and
stos
std
in
out
cmc
and
popa
ds
and
cmp
sub
xchg
xchg
push
cltd
dec
cmpsb
mov
mov
jne
out
pop
sti
sub
inc
sbb
jp
xor
mov
mov
lods
andb
bound
jo
cmp
sti
push
lcall
nop
sbb
xor
jmp
lods
out
mov
xchg
cs
sub
jb
cmc
lea
outsl
stos
mov
stos
push
test
mov
dec
add
ljmp
cld
cs
andl
int
jle
shrl
sub
mov
imul
gs
les
stc
or
repz
xchg
aas
icebp
clc
roll
out
or
lods
pusha
fisttpl
dec
imull
push
adc
mov
add
jne
cmp
aaa
xchg
mov
fnstenv
pusha
mov
inc
into
sub
jle
movsb
inc
shrb
xchg
movb
dec
dec
div
jno
ret
clc
xchg
inc
mov
test
jmp
jmp
mov
sub
popa
lock
jle
lods
int
mov
dec
xchg
int3
scas
jne
mov
xchg
ljmp
jmp
fstpl
fucomp
jge
loopne
shrb
sahf
sub
aad
lds
mul
cmc
cmc
pop
vphaddbq
loopne
jnp
lock
sarl
xchg
cmpsb
mov
push
xchg
push
fists
sbb
scas
jmp
jnp
mov
push
ds
or
jl
mov
inc
testl
dec
aam
sahf
ret
and
imul
out
in
seta
sub
mov
jp
or
int
ret
mov
dec
out
mov
imul
fidivrs
dec
pop
ret
jne
cmp
lds
jmp
sbb
clc
mov
sub
rorb
xor
push
sub
add
mov
out
div
jnp
call
mov
mov
xchg
dec
cli
shlb
mov
or
or
in
jo
dec
fwait
jne
fcmovnbe
adc
mov
sub
cmp
ficomps
ja
or
rorb
mov
jmp
xor
pop
xchg
sub
in
adc
xchg
xchg
mov
jbe
jno
in
fisttpl
sub
sarl
push
mov
push
aas
sarl
cmp
inc
or
out
cmc
popf
insl
data16
mov
fdivp
int
pusha
lods
xchg
in
pop
inc
push
mov
cli
cld
ljmp
int
popf
es
push
jmp
stos
dec
lea
mov
sbb
mov
ret
stos
fsts
cwtl
call
dec
cmp
inc
mov
dec
lock
adc
clc
stos
fstpt
dec
arpl
rolb
subl
xor
add
or
nop
insl
mov
or
fstp
cmc
dec
shl
gs
outsb
in
je
rorb
inc
sarl
ja
out
mov
pop
cmp
sar
jl
jl
push
sub
sbb
adc
repz
aad
mov
popa
loope
iret
add
push
xchg
out
lods
sti
call
push
scas
dec
push
hlt
jo
xchg
mov
jnp
or
dec
test
popa
or
mov
mov
jp
dec
sti
xchg
loopne
mov
les
cmp
xor
lcall
mov
jb
test
add
aad
sbb
or
jge
xchg
sar
in
pop
scas
xchg
pop
stos
cmp
sub
push
out
dec
push
push
cld
pop
sub
clc
mov
sbb
jg
xor
neg
stc
sub
rolb
pop
int3
xchg
xlat
stos
aad
pop
jo
sti
xor
ss
xor
sub
xchg
or
pushf
ja
shr
lods
pop
mov
or
popf
sbb
xchg
mov
xchg
testb
rorl
inc
jno
lcall
cli
jbe
outsl
push
or
cmp
adc
lods
das
inc
dec
ljmp
adc
dec
lods
outsb
adc
cmp
mov
lcall
lahf
inc
pop
rcr
mov
movsb
cli
mov
and
cmc
cmpb
add
add
cmp
out
mov
ret
loop
add
rcrb
pushf
or
push
lock
jne
addr16
dec
icebp
push
or
push
pushf
ds
pop
inc
jae
inc
outsl
sbb
lret
mov
int
mov
fcompl
adc
into
adc
pop
sub
mov
mov
cmp
inc
adc
and
and
mov
mov
xor
mov
sbb
jl
adc
push
lods
hlt
mov
push
aad
push
cmp
lds
sarb
andb
sarb
icebp
mov
and
cs
cmp
fs
outsb
add
movsb
jne
push
call
clc
fcomps
and
mov
pushf
and
mov
ror
cmc
mov
dec
scas
lcall
enter
mov
push
out
sub
push
xchg
sub
movsb
jo
jmp
xor
std
rcl
or
push
jle
daa
pop
rcll
bound
mov
repz
push
fsubrs
cmpb
out
imul
xor
js
mov
adc
js
jo
mov
sub
stos
pushf
sbb
cmp
dec
lds
into
adc
add
popa
jmp
out
adc
int
enter
inc
into
mov
fstpl
call
movsb
lods
inc
cmp
lret
aam
std
sahf
xchg
or
rcll
push
dec
cmpsb
popf
nop
out
shlb
lcall
aam
mov
xchg
jno
jns
jbe
test
xchg
dec
jl
stos
push
idivl
aad
mov
fmuls
stos
call
push
jb
movsl
fwait
cli
dec
mov
inc
jno
leave
sar
cmp
lcall
in
push
in
push
into
iret
and
repnz
cmpsb
cmp
cmp
mov
sbb
sbb
add
push
mov
pop
loopne
sub
insl
or
in
lods
insb
iret
and
jecxz
lods
cmc
xchg
cmp
call
sbb
decl
push
jl
xchg
cmpsl
dec
or
scas
inc
mov
inc
pop
sub
jns
pop
jl
arpl
and
cmp
mov
loope
test
icebp
xchg
ja
cmpb
push
cwtl
lock
xor
stos
cmpsb
push
lcall
mov
xchg
cli
and
mov
xchg
movsb
fnstcw
fcomip
xor
out
cmp
fisttps
push
pop
xor
mov
push
xchg
add
lods
push
dec
xchg
sub
pop
sti
xchg
or
dec
scas
aad
repnz
and
pop
jp
mov
cmp
add
mov
sub
fldenv
sub
outsl
jae
aam
pop
loop
aam
shrb
call
ljmp
test
xchg
loopne
je
ja
test
mov
and
adc
sti
negl
shr
call
arpl
sbb
js
repz
fstp
test
scas
or
and
mov
and
cmp
loop
or
dec
jge
pop
stos
mov
push
or
pop
add
mov
push
testl
xor
fisubl
adc
or
mov
cmp
stos
adc
fimull
bnd
push
jmp
or
lock
xchg
aad
xchg
movsb
adc
add
sbb
loop
out
inc
sarl
jo
ljmp
cwtl
shll
push
xchg
and
fisubrs
gs
sub
sbb
jno
xchg
xor
sub
test
outsb
add
jp
push
repz
mov
bound
sub
repz
cmp
sahf
adc
xchg
popa
cli
mov
pshufw
cmp
cmpl
sbb
jmp
cld
stc
xchg
test
pop
imul
lds
push
rcrb
int
adc
adc
xchg
add
adc
jle
cmc
pop
sub
fcmove
sbb
or
test
or
add
and
dec
or
test
pop
mov
mov
jmp
aad
scas
setne
cli
scas
pop
aad
pop
push
xchg
add
sti
outsl
mov
popf
cwtl
mulb
clc
cli
outsl
xchg
pop
mov
push
test
adc
lds
fnstsw
mov
aad
dec
mov
enter
mov
lods
lahf
aad
sti
popa
jb
int
in
xchg
add
jg
xor
and
roll
out
popa
cs
call
and
xchg
mov
aad
mov
rcll
jo
mov
mov
das
mov
xchg
hlt
fcmove
mov
mov
mov
mov
sbb
inc
loope
movsb
orb
cmpsb
or
pop
push
sbb
je
cmc
into
push
cmpsb
int
sub
sbb
mov
aad
and
sbb
clc
xchg
test
dec
das
jno
int
cmp
dec
jmp
pusha
shll
insb
js
lods
std
loope
ret
aas
cli
ror
dec
pop
push
test
dec
fwait
inc
or
dec
in
pop
mov
mov
mov
jo
sbb
into
fs
lret
fisttpl
iret
inc
or
int3
xchg
lods
cs
cld
scas
rcl
xor
nop
ja
sbb
int
leave
xchg
xchg
inc
pop
hlt
push
pop
xchg
jg
ret
adc
notl
xchg
push
and
mov
cmp
addr16
dec
or
cmp
jns
in
sbb
lods
add
imull
or
xor
mov
movsl
lods
arpl
jp
cmp
stos
lcall
sbb
daa
sub
dec
mov
or
adc
xchg
scas
in
fistpll
inc
jmp
leave
adc
cwtl
scas
cmp
pop
pop
packsswb
rcll
mov
pop
or
inc
rol
imul
xchg
out
repnz
in
jns
pop
fwait
sbb
sub
cmp
repnz
xor
dec
fldcw
in
mov
lods
in
test
push
test
divl
test
gs
lds
rcr
imul
cmpsl
xchg
mov
mov
jle
fucomi
jo
sub
shll
lds
xchg
cmpsb
push
mov
mov
movsb
mov
insl
jecxz
mov
std
jle
mov
fwait
cmp
nop
fdivr
lea
mov
lods
jmp
and
add
sahf
xchg
gs
fimuls
cmp
xchg
sbb
push
add
subl
into
mov
shlb
lcall
aad
xchg
mov
arpl
fistpl
test
cmp
aas
nop
add
and
and
cmc
sbb
clc
pop
mov
mov
jecxz
dec
aaa
cld
mov
cmp
in
lods
push
jp
cmp
add
insl
jo
sbb
adc
scas
adc
aad
adc
and
xchg
sub
jl
fs
push
rcll
out
bound
scas
cld
jns
imulb
sti
and
adc
ja
loope
jp
out
mov
fistpl
dec
hlt
jns
and
rep
sub
bound
jecxz
xchg
mov
add
add
mov
cld
cwtl
push
cmp
das
pop
push
pop
dec
sbb
in
cmpsb
mov
ds
inc
dec
negl
iret
ret
jp
fwait
imul
push
xor
ds
shll
jae
jecxz
sub
pop
mov
and
into
popf
js
adc
sub
arpl
clc
lcall
pop
dec
mov
popa
pop
jg
pop
or
shr
lahf
loope
xor
pop
jno
and
stc
leave
dec
enter
xlat
rclb
fstpl
fwait
sti
inc
lahf
pusha
movsb
xor
sar
test
roll
cltd
fucomi
or
sti
pop
mov
aam
aad
mov
and
jb
repz
dec
push
pop
mov
loop
movsb
jg
jl
rorw
adc
push
sub
lock
stc
lods
std
fsubrs
mov
mov
and
xor
les
aad
imul
or
mov
and
lods
mov
pushf
push
daa
inc
iret
pmaddwd
pop
pushf
fadd
nop
push
add
iret
inc
jl
es
push
stc
adc
jp
jmp
lahf
negl
ret
jl
mov
bound
repnz
mov
cmp
mov
fcmovnbe
pop
mov
cmc
popf
pop
call
cmp
or
aam
dec
sub
xchg
lcall
push
mov
movsl
aad
js
jg
or
mov
and
insl
sub
mov
insl
mov
inc
jmp
adc
imul
leave
mov
adc
add
std
adc
dec
dec
cmpsb
or
add
push
movsl
int3
out
cmc
adc
pop
inc
ret
push
mov
inc
push
rorl
aad
cmp
pop
xchg
scas
stos
insb
and
add
cmc
cmp
jp
adc
push
mov
fisubrl
loop
gs
mov
jbe
mov
jmp
add
adc
dec
dec
xchg
jnp
bound
into
repnz
cmp
add
push
outsl
mov
scas
push
insl
or
push
jns
cmp
mov
sbb
scas
pusha
fimull
js
in
jne
ja
xor
jl
jbe
std
pop
jns
nop
scas
xchg
push
push
mov
pop
push
and
push
int
mov
in
push
aad
stc
cwtl
or
imul
or
gs
xchg
loop
orl
sti
mov
pop
int3
push
mov
jno
fistpll
jp
sub
hlt
les
les
inc
sub
mov
dec
push
mov
and
movsl
stc
sbb
cmp
outsb
stc
or
jg
push
addr16
pop
imul
inc
jb
mov
aam
sbb
sbb
push
pop
faddp
push
jl
int
or
into
mov
out
aad
out
and
out
jnp
cmp
in
gs
push
rcll
or
mov
test
mov
fs
dec
out
sahf
pop
stos
add
sahf
push
dec
lret
inc
in
pop
cmpsl
dec
xlat
repz
or
mov
or
xchg
jl
cmp
xchg
ja
sbb
jb
push
data16
and
call
xchg
cltd
push
imul
mov
loop
cld
ljmp
stos
mov
shufps
sub
cs
xchg
mov
enter
dec
xchg
sub
lock
cmp
in
sbbl
test
cmp
mov
out
in
mov
int
aas
mov
xchg
adc
add
cld
dec
js
cmpsb
test
test
dec
testb
lcall
ret
out
pusha
and
push
cmp
cmp
push
jge
lods
clc
xlat
lahf
daa
popa
ja
cmp
sub
pop
pop
popa
sub
jge
xlat
mov
lea
scas
or
dec
mov
fldl
lock
mov
push
imul
cli
sti
or
xor
xchg
push
cmp
push
mov
jmp
sub
cmp
cmpb
out
dec
push
push
xchg
jae
dec
adc
gs
rolb
dec
sbb
insb
cmp
push
int
es
int
and
or
loopne
clc
inc
mov
push
daa
sub
mov
dec
jnp
or
push
cs
mov
push
and
and
cmc
mov
movsl
adc
sbb
sahf
push
push
push
mov
mov
dec
fildll
arpl
jl
std
sti
cmpsb
sbb
je
gs
push
test
aad
out
mov
aam
pop
das
push
dec
mov
imul
es
xchg
enter
cmp
jl
inc
out
loope
fnstcw
je
insb
cmpsb
pop
in
dec
push
out
ret
ds
out
and
decl
sub
xor
push
lock
lcall
insl
nop
pop
jmp
jae
dec
shrd
dec
jae
mov
mov
or
pop
sbb
sbb
in
das
outsl
les
push
or
or
shrb
sbb
loop
icebp
push
inc
std
cmp
in
inc
or
mov
loop
sbbl
aam
outsl
inc
pop
repnz
cmp
cli
sar
mov
xor
jmp
adc
test
cmp
js
add
mov
in
setae
iret
adc
fs
mov
cwtl
into
and
mov
add
imul
or
inc
or
lahf
or
dec
jb
and
int
push
jae
mov
aas
adc
out
push
aam
negl
add
fidivrl
inc
decl
and
jae
pushf
push
jmp
mull
mov
inc
and
test
push
and
lret
ret
ret
jnp
ljmp
mov
mov
xor
mov
jg
push
and
lods
sbb
shrb
imul
pop
sbb
adc
mov
mov
iret
cmp
mov
test
jle
sub
inc
jmp
xchg
mov
push
iret
and
xchg
add
pop
je
push
testl
mov
das
and
cmp
adc
or
fldl
dec
cld
xor
call
xchg
mov
xchg
loope
rol
lods
add
cltd
jo
add
push
sub
mov
mov
mov
popa
xchg
repnz
add
mov
pop
or
cwtl
mov
cmp
rcl
popa
arpl
pop
out
inc
or
jecxz
cs
add
push
adc
and
fldt
adc
jmp
int3
sub
les
ljmp
int
xlat
pop
sub
push
pop
xor
mov
cmpsl
adc
roll
in
jbe
mov
mov
sub
cmp
xor
lahf
sub
int3
mov
sub
ljmp
mov
test
jae
push
outsl
popf
add
ds
push
mov
pop
inc
ret
stos
or
shrl
mov
cmp
call
cmc
mov
mov
lds
sbb
cmc
in
icebp
int
jmp
pop
jns
mov
stos
add
loope
pusha
mov
push
jnp
sbb
cmp
scas
inc
xchg
dec
inc
in
mov
and
sub
out
push
cmc
mov
dec
or
ret
mov
mov
insl
in
mov
add
das
lea
jmp
push
fistl
inc
testw
mov
cmovl
jmp
xchg
aad
push
insb
mov
dec
mov
lahf
pop
incb
jl
into
mov
inc
sub
in
mov
cwtl
xchg
adc
xlat
dec
es
shl
pop
js
mov
cld
adc
push
inc
es
das
xchg
mov
rcrb
cli
pop
mov
pmullw
push
ror
bound
sbb
cwtl
leave
pop
or
pop
imull
jns
data16
xchg
ret
in
popa
sbb
aad
out
xchg
xor
popl
dec
cs
adc
aam
jo
dec
loope
fs
cmp
fcmovnb
jp
inc
lahf
pop
push
wbinvd
test
inc
mov
pop
loop
rcll
sti
lahf
mov
push
insb
shl
imul
lcall
or
push
mov
sub
and
test
and
push
xor
mov
sbb
xchg
data16
nop
hlt
adc
iret
pop
fsub
cwtl
lods
sub
popa
das
cmc
inc
in
pop
lret
in
xchg
cmp
cmp
in
inc
pop
xor
cmp
aas
push
incl
jle
rorl
jmp
adc
scas
jbe
out
inc
mov
push
lods
dec
or
pop
pop
cmp
stos
scas
cmp
inc
mov
mov
xlat
inc
xchg
mov
fs
dec
cmp
sti
cmpxchg
stos
rcll
cld
add
or
std
xor
aad
push
out
shll
jge
jecxz
add
ja
int
jp
ja
jne
dec
fistps
jne
jle
inc
cmc
adc
cmp
fwait
out
pop
adc
adc
cmp
add
jo
push
mov
mov
or
testl
jbe
sahf
adc
arpl
das
ficoms
inc
repz
dec
dec
cld
in
stos
in
adc
out
aad
adc
jmp
into
test
sub
inc
rolb
or
dec
scas
xlat
enter
and
adc
pop
mov
pop
das
lcall
lds
int
and
ret
movb
stc
cmc
stc
xor
ret
dec
cmp
pop
xchg
ficoms
mov
aad
mov
cmpsl
cmc
add
ret
xor
or
popf
add
stc
loope
xchg
pop
ds
jmp
xchg
adc
xor
cmc
xchg
dec
push
hlt
lea
aam
jle
int
fdivl
jo
mov
dec
jno
inc
rorb
nop
xor
subb
iret
inc
mov
mov
movsl
repnz
or
mov
push
lock
shrl
std
cmp
into
stos
scas
jo
out
dec
adc
jl
jae
jnp,pt
fnsave
xchg
cmp
sar
lahf
shr
xor
jp
and
out
aas
lcall
jge
push
or
jle
sub
fcmovbe
and
inc
ds
push
pop
popf
inc
cli
mov
sbb
xchg
ja
inc
or
repz
loop
cmp
push
enter
shrl
cmp
popa
mov
sub
out
jp
lods
jno
mov
dec
push
and
push
lock
hlt
or
inc
add
movsl
cmc
jno
sbb
push
pop
cltd
inc
and
jne
incl
and
add
scas
or
mov
xchg
pop
cmpsl
lcall
jmp
inc
in
jo
or
aad
call
fldt
adc
imull
push
cltd
cld
addr16
jl
fidivs
shrb
push
jmp
iret
out
ljmp
lahf
and
inc
xor
testl
jp
test
jae
fld
test
push
mov
into
fwait
stos
adc
xor
and
mov
or
cmc
mov
push
sub
repnz
or
sbb
adc
fisubl
insl
lcall
pop
in
or
push
call
test
cmp
pop
cmp
repnz
jo
mov
jge
xchg
push
lock
add
rclb
mov
mov
popa
ds
cli
in
sub
jg
pop
pop
into
aam
or
sub
cmp
xchg
mov
mov
xchg
out
dec
pandn
pop
adc
in
ret
xchg
addr16
sub
xchg
notb
sub
ss
cmp
mov
inc
sub
insb
out
sub
lods
add
jecxz
add
aaa
lea
call
stc
int
int
addr16
frstor
fidivl
adc
mul
scas
imul
lea
into
jb
aad
mov
aaa
dec
cmc
addr16
push
xor
nop
xchg
jp
in
fs
pop
stos
add
cmp
add
imul
sub
xor
push
and
dec
seta
repz
jl
insl
repnz
rorb
aam
lock
lcall
push
xor
adc
cmp
mov
mov
xchg
sbb
adc
test
cli
psraw
in
dec
jmp
and
rorb
insl
in
mov
mov
popl
xchg
jmp
sub
jae
clc
stos
and
xorb
xlat
adc
test
loope
adc
shll
push
and
sub
test
mov
out
xchg
orl
add
iret
mov
sarl
mov
sbb
xchg
cld
into
xchg
mov
sub
cmpxchg
stos
sub
orl
fildll
shrl
mov
daa
insl
inc
jae
pusha
fbstp
enter
or
shrl
adc
lahf
movsl
mov
mov
in
dec
mov
loop
aad
cmc
add
push
lods
cmp
mov
jge
push
mov
arpl
shll
xchg
inc
cmpsl
push
push
mov
out
jo
mov
add
inc
movsb
sbb
jecxz
leave
movsb
jle
sub
lea
inc
call
popf
dec
sbb
fcoml
mov
nop
inc
cmpl
inc
lds
jmp
inc
add
and
add
jecxz
inc
fadds
data16
lahf
xchg
in
test
shlb
add
cmc
testb
js
push
adc
or
sub
nop
jne
adc
xor
bound
sub
out
fwait
xor
xchg
popa
sarb
sbb
push
ljmp
scas
cmp
das
jge
scas
leave
fbstp
out
mov
cmpsl
push
scas
mov
push
loopne
dec
fisttpl
idivb
stc
iret
cmpsl
inc
mov
cld
lods
pop
nop
popf
fistl
and
repnz
rorl
lea
lcall
jne
jns
mov
loop
push
mov
je
add
mov
jg
cwtl
std
hlt
roll
mov
jne
xchg
jb
insb
fnstsw
cld
cmp
or
fcompl
push
out
xor
cmc
ficoms
xchg
xchg
cmp
imul
negl
push
mov
jg
inc
gs
and
jnp
sarl
mov
pop
mov
mov
sub
inc
cmp
mov
fs
push
std
jmp
cmc
int
mov
dec
mov
and
add
add
popf
and
shlb
mov
mov
jecxz
sub
aam
mov
pop
ret
sub
ljmp
push
aad
das
xchg
fisttps
sub
xchg
pop
int
inc
xchg
fcomps
in
ljmp
mul
xchg
jp
stos
cmpsl
addb
push
cmp
repnz
dec
cli
cmc
sbb
lahf
out
pop
cmp
stos
xchg
jbe
sbb
xchg
jmp
andl
or
scas
iret
leave
push
jne
pusha
inc
repnz
push
into
aad
test
inc
scas
jae
ret
pop
out
xchg
sub
inc
lret
fistpl
jg
jg
dec
out
push
in
mov
stc
mov
les
repnz
pop
test
xor
or
xchg
xchg
cmp
fs
pop
js
or
xchg
mov
loope
das
aad
add
scas
fnstenv
mov
and
pushf
aad
jp
shlb
fwait
gs
frstor
fdivp
or
jb
packuswb
movsl
shr
cmc
dec
adc
fstpl
sbb
jbe
pop
push
repnz
lods
dec
mov
mov
jnp
jbe
mov
fildll
popa
add
mov
aad
cmp
jp
or
call
pop
aam
add
mov
in
dec
push
pop
jmp
pop
insb
mov
mov
data16
outsl
in
shlb
jnp
xchg
or
popa
cmp
cwtl
dec
out
jo
enter
cmp
push
xchg
jmp
xlat
insb
jmp
adc
jle
loop
mov
fnsave
xchg
insl
lcall
int3
sahf
inc
jb
or
cmp
push
jnp
cmpsb
dec
mov
xchg
imul
jns
popa
loope
add
add
das
loopne
loopne
sub
aam
ja
addr16
push
adc
and
mov
out
jmp
bnd
lods
jge
cmp
adc
dec
and
jns
mov
jb
aaa
push
lcall
add
je
or
sub
mov
cmc
pop
and
call
dec
addr16
aas
pop
aad
mov
add
in
mov
cmp
repz
jmp
pop
shll
je
mov
or
fs
cmp
sar
jp
and
cmp
xchg
dec
inc
arpl
into
aad
mov
scas
lock
xchg
adc
add
cmc
hlt
dec
stos
aaa
outsb
cs
stos
xor
loop
jmp
sti
mov
sub
adc
repz
sarl
push
mov
idivl
stos
pop
out
push
mov
fisubrs
incl
pop
xchg
mov
xor
sbb
mov
and
in
xchg
push
dec
notl
leave
hlt
and
jl
int
shrl
stc
fs
repz
xchg
into
rcll
call
lret
or
xlat
push
cld
xor
push
dec
insb
in
jge
cmp
in
xchg
lods
cld
in
xchg
sub
mov
sbb
pop
sub
sub
jnp
jb
adc
sbb
xchg
imul
dec
or
push
add
pop
xlat
inc
mov
jns
out
clc
inc
xchg
push
loope
mov
and
or
in
iret
fdivl
scas
mov
xchg
test
hlt
jno
and
xchg
pop
scas
cmp
movsb
out
push
jae
jl
fnsave
andb
and
xor
nop
mov
repnz
in
xor
mov
shrl
pop
into
xchg
daa
xchg
push
push
test
enter
cvtps2pi
mov
popa
mov
mov
cld
mov
adc
push
out
stc
sub
test
jnp
loope
push
jecxz
mov
fldcw
nop
stos
mov
xchg
sub
scas
mov
fwait
pusha
lock
out
push
cmc
jbe
pop
add
in
cmp
daa
hlt
add
jle
and
jne
adc
gs
testl
inc
add
leave
test
imul
cmpsl
add
cmpb
cmpsb
outsl
lock
jno
stc
push
daa
lods
movsl
mov
std
lahf
dec
jno
xor
mov
mov
push
nop
mov
stc
repz
xchg
out
arpl
adc
dec
arpl
lar
js
lock
and
push
ja
icebp
mov
adc
ljmp
aad
subb
cmc
int
call
or
call
dec
or
aas
or
xor
movsb
mov
cmp
pop
sbb
lcall
fnsave
shll
fdivrs
rcl
jo
dec
pop
fcomip
in
mov
shrb
xor
loopne
push
loop
mov
test
mov
and
fsubrs
xor
add
mov
fstps
aad
jno
gs
push
push
pusha
adc
mov
jge
lret
sub
repz
pop
mov
test
inc
push
hlt
lahf
xchg
push
cwtl
popa
or
fisubs
ja
lea
jp
cmpsl
cmp
sarl
dec
xor
jmp
out
cmp
xor
mov
in
fiaddl
repz
mov
sub
rolb
xor
fstpl
sbb
jnp
shrb
mov
jmp
fimull
and
call
push
jno
xor
jmp
xchg
adc
sbb
test
rorb
cmpsl
mov
mov
insb
mov
addr16
and
and
into
or
jnp
inc
daa
outsl
push
jbe
mov
mov
cmp
in
cmc
cmpsl
js
or
clc
or
decb
dec
fwait
xor
push
cltd
jae
xchg
in
out
outsb
adc
shrb
loope,pn
imull
sahf
push
out
cmc
dec
popf
xor
call
lret
cmpsb
xchg
pop
mov
je
sub
xor
fst
mov
push
cmpsb
adc
mov
outsb
test
adc
addr16
sti
decb
adc
bound
cs
arpl
cmc
roll
inc
gs
adc
shrl
pop
dec
jg
cmp
aad
cmp
push
fndisi(8087
and
cmp
testl
adc
cmc
xlat
hlt
add
mov
xchg
or
clc
push
nop
int3
pop
lahf
mov
popa
cmp
pop
aad
pop
jno
call
jp
jg
push
out
mov
and
std
cli
push
add
fwait
jo
xchg
jbe
sub
std
or
cmc
dec
jg
ror
adc
sbb
or
push
jnp
cmpsl
adc
xor
movsb
ja
sbb
dec
sbb
or
push
cwtl
cmc
jns
loop
movsb
in
cltd
add
stc
xchg
xor
sub
xor
out
push
cmc
nop
aad
and
aas
cmpsb
lahf
lahf
fisubrs
push
mov
sbb
clc
outsl
in
jae
out
out
push
mov
pop
dec
add
scas
in
xchg
cmp
adc
dec
into
rcl
les
loop
es
aaa
std
jmp
xchg
leave
loopne
cmc
push
cmp
jb
adc
xchg
mov
fcoms
adc
jnp
into
dec
mov
repz
cltd
cmp
mov
adc
loope
sahf
int3
pushf
int
mov
dec
mov
loope
push
fwait
into
jnp
out
mov
js
mov
xchg
adc
push
addl
in
adc
arpl
mov
loope
sarl
dec
sahf
out
xorb
jno
mov
or
or
sub
xchg
push
mov
lods
stc
adc
int
dec
mov
clc
es
sub
xchg
sbb
lock
pushf
mov
loop
dec
mov
aad
lahf
rolb
nop
or
dec
jge
dec
insl
xchg
sahf
rol
lods
add
movsl
pop
pop
xchg
cmp
orb
lahf
cmpsl
jbe
into
into
jge
xor
mov
faddp
or
movsb
inc
lds
inc
aad
aad
jl
and
stc
push
sub
repnz
out
aad
orl
push
lods
movsl
add
imul
lret
loopne
and
xor
xchg
pusha
jp
scas
mov
iret
cmp
xchg
ds
aam
lahf
cmp
jp
aad
inc
out
jns
sbb
mov
adc
pop
in
nop
adc
arpl
shl
cmc
jo
push
push
sub
jnp
mov
cmp
scas
addr16
sahf
leave
push
add
sub
jno
or
cmp
mov
inc
fldl
cmpsl
xchg
test
or
pushf
mov
aad
sahf
sbb
add
sub
sub
test
or
xchg
push
fnstsw
cmp
call
xor
pop
emms
jb
xlat
adc
add
gs
sub
mov
add
mulb
mov
cmc
jge
fildll
lcall
daa
push
popf
out
dec
scas
mov
outsl
int
dec
or
mov
push
inc
jns
pop
or
cmc
std
insl
xchg
ds
or
jmp
push
cmpsl
add
push
ss
mov
dec
mov
xchg
mov
and
add
arpl
push
adc
xchg
stos
in
jg
push
popa
test
sbb
push
rolb
mov
xor
outsb
pop
pop
mov
aaa
xlat
push
xchg
pop
adc
xrelease
push
bound
pusha
dec
adc
mov
enter
push
cmp
mov
add
clc
dec
jo
jbe
push
jnp
pop
andb
cmp
nop
mov
inc
mov
scas
mov
xchg
cmp
push
lods
jno
mov
jns
lea
adc
xchg
cmp
rolb
hlt
stos
mov
rorb
popf
fwait
movsl
dec
mov
cmp
loopne
imul
xchg
pop
cltd
cmp
pop
cmc
or
inc
bound
push
into
mov
shrb
jnp
push
add
out
sub
in
stos
push
test
dec
fwait
cmc
mov
aam
cli
jmp
mov
fldt
inc
loop
loope
aad
mov
adcb
ret
jmp
cmp
dec
into
ljmp
adc
das
xor
orl
outsl
and
mov
movsb
rcll
adc
mov
pop
fnsave
cmp
call
xchg
pop
add
loope
nop
lret
lret
push
pop
xor
mov
add
out
xchg
stc
loopne
stos
xchg
or
mov
mov
mov
aad
int
aad
adc
orl
scas
push
fldcw
jbe
add
lods
mov
sub
pop
xchg
xchg
stc
jns
cmp
pop
fcmovne
pushf
loopne
lods
cmpb
sub
sub
inc
inc
test
scas
call
std
push
xchg
cmp
or
mov
xchg
out
push
lahf
aas
mov
push
push
sbb
mov
mov
into
scas
adc
loopne
xor
sub
jnp
int
cmp
xor
or
push
xchg
punpckldq
fwait
mov
das
nop
scas
push
rcrl
cmp
jecxz
sti
push
pop
rorb
dec
dec
in
sbb
inc
pop
adc
xchg
stos
xchg
and
clc
mov
inc
daa
add
jo
out
dec
sbb
push
or
neg
jl
xchg
lahf
pop
out
stc
jp
pop
mov
or
test
je
sub
and
pusha
pop
es
repz
and
push
clc
cmp
je
jmp
add
inc
ljmp
cmp
cmp
in
ss
sti
dec
push
int
cs
decb
and
sbb
xchg
push
loope
push
popa
mov
jnp
pop
jg
mov
sub
pop
fnstsw
xchg
std
inc
out
out
sbb
popf
imul
inc
stos
sub
xchg
push
out
push
sub
xlat
inc
popa
cmp
mov
sub
sub
scas
xchg
leave
pop
xchg
inc
ret
mov
fdivl
xchg
jno
xorb
mov
sti
bound
ret
and
or
loop
repnz
in
or
fldenv
xchg
inc
cmp
iret
shlb
push
test
aad
xchg
mov
ljmp
rclb
arpl
jns
out
cmc
aam
fnstenv
enter
mov
adc
loop
movsl
cmc
sub
mov
pop
ljmp
xor
jmp
subl
popf
stc
imul
sub
or
gs
xchg
into
subl
cmp
pop
test
xor
cmpb
dec
popa
xor
mov
or
aad
xchg
mov
popa
push
movsl
mov
cltd
push
pushf
or
jo
in
fs
add
and
mov
rclb
sub
cmpsb
in
in
imul
testl
adc
xchg
mov
test
shrb
aas
sarb
rcl
adc
popf
or
in
fsub
cmp
sbb
jg
mov
repnz
sti
xor
testb
fidivl
popf
add
cmp
mov
es
jecxz
jmp
xchg
cli
cmp
movl
mov
mov
int
push
jne
cmp
fisubrl
inc
lcall
rorl
mov
xchg
cmp
dec
sub
adc
nop
test
add
in
test
popa
inc
mov
je
mov
or
sub
jg
leave
mov
ljmp
sbb
xor
icebp
pop
call
jg
mov
js
adc
jge
repz
mov
fstpt
inc
mov
test
jbe
mov
gs
aad
mov
movsl
inc
adc
es
inc
pop
lods
or
movsb
dec
dec
jmp
lret
adc
sti
out
pusha
add
lods
negl
and
pop
or
fdecstp
ss
out
mov
pop
scas
cmc
bound
cmp
cmpsl
mov
ds
imul
inc
rclb
mov
adc
subl
test
mov
ja
push
mov
mov
int3
xorl
mov
xchg
sbb
sbb
mulb
test
xchg
or
and
push
sub
adc
push
cmc
mov
aad
xor
inc
add
popf
and
jp
xchg
pop
lcall
loop
mov
ds
sarl
adc
xlat
xchg
popf
pop
xcrypt-ofb
cmpsl
sub
push
cmovs
in
or
lods
cmp
cmc
cmp
mov
push
lcall
out
push
or
lret
mov
adcl
insl
add
push
add
insl
lods
sbb
shlb
aam
mov
out
cmc
je
jg
and
mov
lods
push
ja
add
cmp
addr16
test
lea
aad
call
popa
mov
push
cli
dec
test
xchg
pop
call
fldt
mov
xchg
movsl
cmp
imulb
and
xor
xor
mov
test
enter
iret
cmp
xchg
mov
jp
aad
stos
outsb
jl
loope
pop
or
sti
fs
pop
sub
fisubrs
add
call
fisubrs
aad
push
cmp
adc
or
mov
into
insl
jg
test
or
loope
cmc
hlt
or
mov
jp
cwtl
jmp
add
push
cmp
scas
popa
jnp
add
rcl
sub
jg
lods
add
or
icebp
or
mov
shr
mov
testl
xchg
mov
cmpsl
sub
adc
add
inc
sub
in
push
imul
fnstcw
in
stos
clc
xchg
mov
sarl
hlt
add
movsb
fidivrl
xchg
cmp
push
int
lcall
mov
iret
dec
lea
loop
sbb
push
mov
cld
sub
rsqrtps
testb
pusha
push
inc
loope
out
mov
int
and
cli
popa
inc
xor
push
jmp
sub
call
std
jns
cmp
push
fwait
fwait
dec
pushl
adc
out
inc
inc
push
mov
outsb
int
pusha
inc
fstpt
mov
aad
repnz
sbb
fucomip
xchg
push
sarb
pop
jle
jmp
sti
jbe
dec
cmc
mov
ds
adc
sub
push
jns
and
add
int3
cli
call
sahf
push
push
mov
sbb
shlb
push
mov
mov
enter
call
psrlw
xlat
rcr
jno
stc
shl
push
faddp
das
imul
jne
mov
jae
flds
push
push
mov
adc
pop
cs
daa
cmp
cmp
gs
ljmp
mov
je
dec
cltd
add
das
ds
cmp
pop
imul
leave
in
inc
dec
mov
aad
sbb
movsl
ret
cmp
sti
invlpg
arpl
inc
push
adc
insb
ljmp
nop
sahf
pop
aad
sbb
fiadds
lea
sti
in
dec
cli
popf
dec
bound
fisttpll
jmp
lods
pop
mov
aas
dec
or
sub
test
pusha
add
push
arpl
in
inc
cld
cwtl
mov
movsl
sub
or
sub
mov
pop
xchg
and
adc
mov
push
gs
in
dec
cmc
iret
dec
sahf
sub
mov
xor
sbb
or
out
push
jns
mov
mov
loope
pusha
stos
in
mov
pop
insl
cmp
push
outsb
push
inc
dec
or
xor
inc
xchg
mov
or
sahf
and
push
stos
mov
out
jmp
shll
inc
mov
and
lcall
cmp
cli
mov
cmp
add
push
dec
repnz
in
aaa
add
sub
inc
movsl
push
and
std
add
testl
in
push
mov
dec
daa
cmp
dec
inc
outsl
jmp
lcall
or
hlt
in
cmp
cmc
sahf
ret
xchg
push
and
pop
dec
fmull
rcl
jnp
push
cmp
fwait
mov
popa
mov
repz
iret
sbb
outsl
pop
xor
popa
cmp
jno
les
aad
rorb
inc
int
or
add
pop
addr16
xlat
icebp
xor
xchg
push
xchg
mov
xchg
xchg
sub
xor
data16
dec
adc
add
mov
cmp
testl
add
sti
xchg
ret
push
in
ret
int3
jnp
add
mov
xchg
ds
jbe
js
lret
lcall
pop
dec
lock
cmp
in
add
lea
orl
movsb
pop
mov
sub
por
mov
cmc
dec
mov
and
jle
pusha
mov
sub
or
mov
stc
pusha
movsl
std
inc
adc
mov
imul
mov
pop
inc
fwait
je
test
popf
xor
mov
int
xchg
cmpb
add
mov
loope
dec
imul
adc
fdivp
or
sbb
aad
pop
movsl
in
scas
pop
xchg
inc
or
push
jnp
jecxz
movsl
mov
xchg
insl
cmp
mov
cmpsl
adc
and
test
cltd
cwtl
decb
int3
cld
pop
aad
shlb
out
jg
repz
shl
push
adc
out
test
mov
jnp
fidivl
test
adc
mov
cmc
les
push
and
push
jbe
cmp
and
test
idivl
orb
push
jno
sbb
ljmp
daa
dec
clc
mov
add
add
push
cmc
inc
pushf
xor
ret
mov
aas
push
lds
mov
insl
mov
js
sarb
xchg
and
adc
imul
loop
sbb
fdivrp
mov
popf
lods
or
or
fwait
adc
mov
hlt
lret
enter
mov
aad
pop
dec
ja
xorl
cmp
test
dec
mov
mov
xchg
dec
in
sub
push
and
cld
sbb
enter
mov
dec
inc
daa
sub
or
jg
out
mov
jno
xor
jbe
aad
fildll
jnp
pop
out
popa
je
fldlg2
clc
pop
or
fidivrs
ret
rcl
sub
xchg
and
and
xor
gs
cmp
inc
jge
dec
xlat
lods
icebp
out
stos
in
pop
mov
push
add
jg
out
cmpsl
in
popa
loop
sub
or
xlat
or
les
in
and
and
lods
paddw
out
push
mov
mov
cmpsl
add
push
fdivrs
xor
inc
xchg
pop
ficoms
insl
xchg
pop
and
stos
cmpsb
adc
gs
mov
in
sti
dec
jle
xchg
mov
pop
jne
adc
add
and
inc
xor
ljmp
push
mov
cmc
inc
xchg
mov
jbe
mov
or
mov
fildl
stc
aad
cmp
lock
stos
pop
stc
jne
sbb
outsb
push
rorb
xchg
iret
mov
cli
imulb
xchg
inc
outsb
mov
mov
jmp
shll
flds
push
sbb
int3
test
loope
mov
test
cmp
mov
inc
xchg
int
jp
ja
dec
stos
cltd
or
negb
jle
inc
scas
stc
dec
xchg
adc
mov
add
mov
jns
mov
pop
inc
out
pushf
jge
fcomp
dec
mov
pop
cmp
enter
and
sub
add
loope
jl
aam
js
lahf
inc
enter
dec
xchg
push
sub
lret
repnz
inc
or
push
mov
popa
sub
lods
cmp
push
jno
cmp
aad
push
jmp
dec
or
sbb
add
ljmp
shl
shll
jb
out
push
xchg
mov
clc
fistl
ja
xchg
popf
leave
or
cli
nop
pop
xor
in
jmp
jno
sbbb
test
mov
or
xor
and
and
sub
sub
mov
test
push
jns
mov
ret
lds
xchg
andl
jne
outsb
int
test
adc
nop
inc
fsubl
test
pop
push
mov
dec
out
add
jl
out
test
rcrl
fiadds
sub
vpmacsww
sti
jecxz
mov
push
xor
test
cwtl
push
dec
jo
cmp
in
jl
fldt
pusha
in
add
imul
lcall
xlat
adc
scas
jge
xchg
add
adc
push
movsb
inc
cmp
pusha
cmp
aad
icebp
clc
adc
sub
cmp
lcall
and
cltd
sub
mov
lock
clc
inc
pop
les
push
out
adcl
jns
xchg
dec
dec
pusha
push
je
cs
cmc
shrl
cmp
pop
jno
out
aaa
les
mov
cmp
outsl
xchg
divl
fiaddl
and
push
xchg
ret
lret
and
sahf
std
dec
movsb
leave
mov
adc
cld
sti
in
cmc
push
mov
lahf
dec
push
push
and
rorb
divl
movsb
xchg
leave
and
push
mov
sub
icebp
repz
les
mov
xchg
add
into
cmp
add
push
sti
fwait
inc
mov
push
aam
xchg
cmp
jl
aas
lea
jl
aad
cmp
cmp
movsl
or
sarl
cmp
fcmovbe
mov
rcll
cmp
stos
mov
js
xchg
arpl
repnz
jmp
xchg
arpl
dec
ss
push
dec
fadds
jb
cmpsl
xchg
sbb
mov
pop
mov
inc
adc
adc
xor
jecxz
stos
add
xchg
je
lods
pop
xchg
nop
push
out
pusha
cmc
dec
lcall
push
test
jmp
adc
sbb
ficoms
sti
in
cli
xchg
add
inc
in
cmc
cmp
mov
xor
or
sub
mov
adc
jecxz
cmp
push
divb
or
data16
and
shrl
sub
movsl
mov
adc
ja
loop
aad
lock
push
cmp
xor
int
mov
sub
leave
and
out
hlt
inc
cvttps2pi
fisubl
lret
xor
repnz
xor
push
or
sub
jp
adc
push
cmp
inc
mov
loop
in
and
adc
push
sbb
loopne
jg
jo
sbb
inc
jmp
mov
add
jne
stos
cmc
iret
push
and
outsl
push
in
or
inc
aad
pop
test
cmpsb
pop
jmp
mov
int
push
jae
stos
adc
int
cmp
pop
into
xor
and
xchg
or
adc
inc
cmc
mov
add
xor
jo
imul
xchg
call
xor
fildll
jp
pop
mov
int
imul
jp
or
jns
out
jge
dec
mov
inc
dec
adc
popf
rcl
and
ljmp
push
icebp
mov
in
lahf
dec
push
jbe
loope
pop
loope
adc
scas
popa
cli
rorb
or
sbb
imul
loope
jl
lcall
jae
adc
xor
and
sub
cmp
mov
out
ret
adc
inc
xchg
or
aad
cmp
out
fisttpll
add
dec
rorb
xlat
nop
and
daa
xchg
imul
loopne
imul
sbb
mov
push
mov
cli
push
addb
and
sbb
mov
aad
inc
inc
imull
xchg
repz
stos
add
and
dec
out
mov
jle
push
sbb
divl
cmp
dec
xchg
jg
imul
lcall
ror
mov
shrb
hlt
or
xchg
mov
sti
jmp
push
rcr
dec
loope
or
and
popa
sub
jg
aad
lods
adc
push
push
mov
cmp
dec
dec
pop
rorb
aad
cwtl
or
cmp
cs
pop
mov
mov
xor
sub
mov
jge
pushf
cmp
rcl
loopne
inc
mov
push
fistpl
test
jmp
mov
xor
lret
sub
pusha
inc
cmp
into
or
aas
and
xlat
pop
xchg
cwtl
jmp
iret
push
mov
cli
or
jmp
andl
mov
stos
or
setne
test
fstpt
bound
xor
rcll
std
mov
sbb
aam
ficoms
lock
or
sahf
sub
mov
in
lods
xchg
xor
mov
out
fsubp
and
test
cmp
idiv
mov
enter
mov
aad
dec
lods
lahf
push
data16
xchg
in
in
sub
pop
aad
xchg
rorb
out
adcb
sub
repnz
lods
setne
dec
loopne
inc
cmp
add
pop
and
or
mov
cmp
sub
lock
fimuls
sti
vaddps
inc
inc
pop
int
sti
popf
clc
int3
sti
les
fwait
xchg
ljmp
shrl
dec
movsl
jle
and
add
inc
adc
shl
dec
imul
loope
cmpsl
mov
sbb
jmp
je
pop
les
adc
mov
rcl
or
pushf
dec
sbb
loopne
mov
std
nop
iret
pop
fimuls
idiv
add
ror
fld
cli
dec
mov
ds
scas
cmc
stos
sbb
mov
pop
stos
das
and
xor
cmc
fldcw
add
in
ljmp
fstp
cmc
dec
mov
jae
inc
leave
insl
loope
iret
jge
fstps
add
shlb
mov
mov
dec
test
or
out
mov
test
mov
add
adc
jle
mov
shrb
ficomps
je
push
add
divl
negb
daa
jne
stc
mul
lods
das
dec
mov
push
fwait
negb
out
inc
cmc
jle
jmp
loopne
jmp
out
cmp
int
imul
jmp
push
fwait
mov
insl
stos
clc
ljmp
fidivrl
ficompl
je
outsl
jne
push
nop
sbb
push
pmulhw
mov
out
mov
jb
xor
imul
jmp
or
cs
push
scas
repz
imull
fsts
inc
dec
lret
sahf
int3
aad
repz
imul
add
sub
add
call
push
sub
push
jnp
int
in
idivb
lret
pop
addr16
mov
sbb
stc
or
test
repnz
fwait
ret
popf
or
iret
cmp
pop
xchg
xor
mov
or
les
jge
adc
bound
push
jnp
xor
out
notl
xor
fsubr
xchg
ss
jl
sarb
inc
pop
pop
cli
cmp
gs
leave
dec
sub
idivb
dec
insb
sti
mov
adc
cmp
leave
push
add
and
inc
outsl
sub
pop
jo
jp
dec
fidivrl
pop
in
cmc
or
je
iret
lods
and
call
out
shll
fmul
aad
pop
out
sti
mov
mov
push
clc
mov
and
lcall
push
lock
cwtl
xchg
mov
or
lcall
push
jo
nop
mov
addr16
rclb
outsl
cli
enter
push
call
xchg
or
popl
or
rcr
mov
sub
imull
in
repz
inc
pop
cmp
dec
lds
outsb
imull
mov
jbe
rcl
mov
into
dec
clc
xor
iret
ja
sub
and
iret
scas
xchg
stc
dec
adc
test
sarl
pop
scas
adc
cmp
mov
popf
lods
sbb
mov
cmp
mov
jne
test
xchg
push
add
lahf
inc
and
cmp
push
out
mov
mov
adc
mov
lahf
cmpsb
fsubl
shll
in
inc
dec
mov
jns
imul
push
cmp
mov
loopne
xchg
add
adc
add
cmpsl
lods
cmpsl
hlt
mov
push
arpl
setne
stos
xchg
stos
leave
jmp
jno
mov
sub
xchg
inc
jl
and
sbb
jg
or
xlat
or
sbb
mov
rorl
in
mov
ljmp
test
xchg
jmp
cmc
jbe
test
mov
sbb
js
jecxz
rolb
fdivl
mov
sub
int3
imul
aas
outsl
fs
cmp
adc
outsb
cld
mov
cmp
out
pop
aad
mov
jge
out
cmp
jp
mov
divl
or
imul
pop
xchg
push
das
jbe
or
push
jmp
jecxz
movsb
cmc
mov
jg
and
push
add
leave
hlt
adc
xchg
popf
pop
rol
lods
mov
popa
mov
add
push
in
pop
in
inc
inc
fisubrl
mov
scas
ja
ljmp
adcl
fisttpl
outsb
push
repz
jle
loopne
pop
rorl
inc
movsl
xlat
aad
dec
jge
iret
mov
scas
mov
adc
das
xchg
repnz
push
pusha
lahf
xchg
jo
and
pop
mov
or
sub
add
xchg
xchg
mov
getsec
pop
and
xchg
bound
pop
cmp
push
mov
jnp
in
pop
xchg
int
push
jns
fwait
mov
decl
ljmp
pop
pop
xchg
sbb
hlt
rcr
pop
dec
mov
rolb
int3
mov
jno
mov
pop
sbb
and
or
lods
push
rolb
inc
dec
aaa
dec
push
or
xchg
incb
dec
mov
cmp
cltd
jmp
mov
cmp
je
xchg
js
sbb
jo
add
jp
sbb
cmp
dec
add
push
movb
xor
test
rcl
int
cmc
adc
pop
das
add
imul
pop
fnsave
popa
inc
sub
loopne
mov
test
mov
fwait
push
push
stos
cmc
scas
inc
rcl
push
xor
in
fucomip
xchg
je
jmp
sbb
adc
rcll
test
and
ret
outsl
sub
add
mov
sub
cmp
jo
inc
jns
inc
cs
scas
inc
cmp
idivb
mull
xchg
xor
or
in
or
mov
in
hlt
push
pop
and
arpl
xor
scas
mov
outsl
stc
sub
jbe
std
sub
sub
xchg
xchg
sbb
rcr
adc
enter
movsb
mov
je
sub
add
outsl
adcl
sbb
xlat
dec
in
mov
mov
inc
rol
lds
testl
fmull
sbb
test
cmp
idivl
push
das
test
daa
mov
int
aad
fnstenv
fbstp
sarl
loope
jns
rolb
fcoms
jg
hlt
cmp
aam
fcomip
out
sbb
push
sbb
jge
js
int
mov
notl
jae
enter
and
pop
ljmp
pop
add
mov
scas
stos
mov
mov
xchg
mov
out
push
hlt
jp
cmp
dec
sub
loope
xchg
dec
in
jl
int
cmpb
xchg
inc
jmpw
lea
and
aaa
loop
sub
inc
clc
mov
jp
shll
ret
out
mov
or
pushf
testl
jp
aad
jle
out
add
pop
negb
out
popf
lock
lods
les
xlat
lahf
sub
pop
and
mov
in
or
icebp
cmp
clc
out
jnp
stos
and
cmpsl
stos
mov
sbb
fisubrl
aad
sub
aad
int
push
movsl
dec
xchg
sub
or
insb
mov
movsb
and
call
jecxz
mov
or
mov
cs
mov
sub
insl
sti
xor
sahf
int3
test
mov
xchg
addl
pavgw
pop
dec
sahf
or
push
lods
nop
popa
add
fiaddl
inc
imulb
jge
in
sub
mov
daa
push
repnz
aas
dec
mov
mov
jno
inc
lcall
adc
arpl
mov
add
cmc
push
push
sub
cmp
out
popf
mov
loope
cmpb
scas
outsb
xchg
dec
jl
add
jmp
test
or
ds
xchg
xor
in
in
sub
cmp
test
sti
cmp
mov
cmp
mov
lahf
outsl
aad
les
mov
js
cmpsl
push
jno
mov
jmp
or
push
imull
mov
sub
xchg
out
aad
pop
sar
sub
mov
in
cmp
std
cmp
gs
movlps
mov
test
pop
int
sbb
add
mov
jnp
cmpsb
repnz
mov
jo
fdivr
or
cmc
out
popa
imul
cmp
dec
std
ret
mull
adc
jg
stc
outsl
lods
push
cmp
fstpl
rcll
jl
dec
jne,pt
jbe
fwait
dec
loopne
les
mov
mov
pop
jne
rolb
jae
rcrl
lahf
out
dec
push
mov
nop
jne
das
dec
popa
xchg
cmp
push
cs
lods
repz
movb
sbb
ret
adc
hlt
push
jns
and
or
int3
mov
adc
cld
leave
mov
pop
xor
push
lods
movzbl
sub
fdiv
xchg
addl
xlat
mov
and
fimull
aad
jg
lcall
dec
xchg
int
ficoml
xchg
xchg
and
and
inc
sahf
adc
insb
dec
xchg
xchg
cmc
xchg
or
or
sbb
mov
sbb
cli
movsl
lods
icebp
mov
jno
adc
sbb
and
arpl
add
adc
mov
aad
inc
adc
adc
rolb
mov
mov
xchg
std
jne
add
jmp
adc
pushf
out
dec
js
nop
cltd
sub
clc
ja
add
pop
test
jp
jns
ret
xor
inc
xchg
gs
es
lret
xor
shld
inc
orl
popa
movsl
mov
push
loop
or
sub
add
loope
jge
nop
mov
clc
test
xchg
mov
scas
not
mov
out
scas
int
xor
cmp
dec
and
adc
mov
xor
cld
sub
or
sbb
inc
cli
inc
add
sti
pop
sub
cs
adc
mov
mov
clc
cmp
or
mov
and
nop
adc
sbb
add
jecxz
cmp
add
adc
in
lods
mov
int
jmp
sbb
mov
in
jge
and
fsubr
aad
prefetch
mov
mov
pusha
mov
jmp
adc
nop
sarl
dec
aad
mov
sub
idivl
mov
fmull
and
into
loopne
mov
lret
or
add
mov
or
adc
xchg
imul
aad
jl
mov
fdivs
xchg
and
push
xchg
mov
dec
divl
and
jmp
aam
pusha
jl
xor
pop
sub
cmp
repnz
jl
pop
jmp
xor
clc
dec
dec
mov
jns
push
add
sbbb
mov
and
aad
cmpsl
push
adc
outsl
cld
int
negl
test
mov
jae
aad
adc
jmp
or
aad
jns
push
or
xchg
gs
movsl
hlt
adc
sti
cmp
jmp
jg
fldt
shrl
inc
out
xchg
cmp
jb
push
in
adc
inc
xor
jp
scas
popa
dec
jl
pusha
xchg
js
ret
push
negl
mov
mov
mov
inc
pop
bound
or
shrb
cmc
adc
divl
cmc
sub
cmp
mov
shlb
jne
dec
xchg
scas
stc
mov
cld
mov
sub
lods
dec
add
dec
popa
lahf
sbb
imul
lods
or
xor
inc
cwtl
ret
sub
fnstsw
iret
lock
xchg
je
adc
ss
div
pop
xor
adc
push
push
aam
push
mov
xchg
int
cld
sub
stc
stos
lcall
mov
cmp
and
push
and
in
lea
cmpsl
pop
arpl
cmp
lods
sub
jp
mov
adc
adc
mov
pop
dec
test
lahf
cmpsl
or
or
leave
pop
pop
out
aad
mov
jp
push
sti
mull
xchg
inc
and
daa
lock
cmp
sbb
sbb
out
or
mov
jp
add
cmc
and
mov
into
xchg
je
popa
dec
sbb
mov
adcl
add
les
cmpsb
loop
fdivrp
out
mov
lcall
mov
dec
sub
pushf
push
hlt
std
jo
testl
and
aad
xchg
arpl
sbb
les
bound
jb
cltd
dec
xchg
push
sti
pop
or
leave
imul
pop
xchg
rol
jle
sub
jnp
insb
dec
mov
sub
xor
and
cs
xchg
cli
sub
fwait
call
cwtl
lods
add
sub
mov
imul
fwait
sqrtps
hlt
cmpsb
push
xchg
mov
imul
push
aad
out
shll
sbb
scas
xchg
addr16
xchg
jg
mov
mov
cs
xchg
inc
sub
imul
cmp
inc
aam
pop
bound
xor
movsb
dec
shr
out
xchg
or
imul
push
shrl
cmp
or
dec
push
xor
lock
dec
sub
ss
popa
or
imul
cmp
bswap
mov
add
xchg
mov
sub
xlat
xor
roll
lods
sub
adc
test
dec
cld
ds
lods
inc
push
adc
lods
dec
test
fwait
lods
dec
std
lods
push
enter
mov
loopne
jp
psubsw
rolb
push
fidivrl
sub
pop
jmp
xor
cli
dec
jmp
stos
fnstsw
movsb
pop
add
sti
cmc
lds
push
imull
test
jb
add
jmp
fdivp
out
sub
mov
aad
mov
leave
insl
in
jno
sarb
inc
fiadds
das
loop
scas
pop
daa
jge
push
mov
dec
outsl
and
leave
mov
inc
into
cli
cmp
mov
insb
pushl
dec
cmpsl
sahf
loopne
mov
cmpsb
cmp
cld
add
lods
mov
out
dec
sbb
lea
push
push
into
bound
pop
adc
jmp
dec
and
jl
out
pushf
lcall
in
jmp
jo
cwtl
in
fsubr
mov
xor
loopne
cmp
dec
sarl
sarl
sub
push
cmc
jl
adc
test
ja
sub
and
or
outsl
pop
and
stc
imul
stos
push
pushl
add
jg
daa
gs
data16
mov
sti
aad
inc
out
movsl
cmc
mov
mov
stos
loope
fdivrs
rorl
mov
sub
cli
adc
hlt
pop
scas
outsb
pop
push
push
pushl
cli
decl
jl
xorl
mov
jb
mov
or
outsb
pop
fcmovu
ret
dec
imulb
btc
or
psubsw
push
sbb
xor
repnz
into
adc
cmc
push
push
std
jnp
lock
sbb
in
jno
arpl
aam
jns
push
hlt
add
mov
mov
xchg
jle
rcl
add
mov
add
push
jg
and
xor
or
leave
and
xor
add
jge
pop
stc
inc
dec
pop
dec
push
in
loop
sub
sbb
push
es
mov
popa
stc
xchg
aas
pop
and
xchg
andb
pop
in
jbe
rol
outsb
sub
mov
mov
mov
mov
xor
aad
add
xor
mov
xor
aas
pop
jnp
loopne
jns
cmc
adc
add
outsl
sbb
in
jmp
xchg
mov
popa
mov
sub
and
mov
jae
mov
ss
mov
test
jl
dec
addb
imul
out
fnstcw
loopne
or
sub
or
mov
xor
insl
dec
push
push
cli
into
test
fisubrs
or
mov
loope
push
inc
xchg
jnp
jg
test
sub
mov
and
push
outsb
aad
mov
cld
jmp
mov
loop
out
push
stos
int
aaa
outsb
ja
imul
sub
mov
push
cmp
shrl
sub
dec
cmp
xor
stos
pushf
push
xchg
xchg
fldenv
lock
data16
mov
mov
push
mov
aas
mov
incb
in
fsubrl
rcll
lcall
sub
pop
insl
sub
jnp
mov
and
or
inc
lcall
arpl
clc
mov
or
mov
adc
dec
and
jp
gs
and
imul
mov
stos
xchg
test
cld
push
inc
shrb
cmc
add
es
aad
lcall
or
push
mov
mov
in
fistpll
and
push
mov
fprem
leave
sub
outsb
movb
pop
ss
popf
or
lods
test
cs
add
dec
fnstenv
out
shlb
cmpsb
jge
cltd
jp,pn
int3
push
sbb
or
loopne
adc
sbb
icebp
imul
ret
outsb
xchg
fdivrp
inc
adcb
inc
or
lock
mov
cmp
xchg
jnp
int3
mov
and
movsl
xchg
sbbb
js
dec
push
cmc
sti
cli
lds
push
xor
in
inc
jne
mov
rcll
aad
lods
cmp
jbe
clc
fstps
cmp
outsl
cwtl
cmp
mov
sub
mov
gs
mov
data16
fmul
push
jp
cmc
icebp
ja
movsl
xor
push
xchg
inc
xchg
and
data16
das
cmpsl
nop
inc
aad
or
sub
out
jecxz
adc
xchg
add
push
adc
lods
fdivrl
and
xor
shlb
out
lods
jmp
popl
scas
push
cmp
mov
shl
cmp
mov
mov
enter
nop
mov
sarl
insl
add
adc
dec
loope
sbb
fnstcw
scas
shlb
mov
xchg
stos
dec
cmpl
jmp
cmp
fsubrp
cmp
and
adc
loopne
mov
nop
iret
add
ret
or
push
les
lock
pop
adc
push
pop
sbb
cmc
shlb
xchg
mov
jge
inc
das
mov
mov
sbb
sbb
add
dec
loopne
scas
in
jl
fimuls
xchg
out
mov
xchg
dec
testb
mov
fdivrl
pop
sub
mov
lods
pop
mov
out
mov
fs
mov
arpl
movsb
movsb
scas
lret
xchg
xchg
mov
xor
xor
popf
test
xchg
push
cmp
cld
xor
lods
inc
or
and
cmp
pop
jmp
push
scas
int
cmc
popa
xchg
sbb
jns
jecxz
jns
jnp
sarl
mov
idivl
mov
je
add
aaa
lods
and
mov
sub
adc
xor
pusha
jmp
sti
xchg
in
outsl
mov
popa
out
adc
jmp
sub
mov
cmp
jno
aad
or
push
xchg
jns
push
pop
jmp
clc
scas
or
mov
cmc
xchg
in
sarl
std
or
lds
cmp
push
inc
test
mov
rclb
xlat
int3
jmp
jp
mov
out
cld
addr16
repz
outsb
push
adc
call
xchg
xchg
adc
cli
inc
fnstcw
or
mov
xchg
jo
mov
or
sahf
repnz
cmp
aad
adc
mov
dec
mov
in
xchg
mov
scas
xchg
add
shll
cmc
stc
push
pusha
int
or
jle
jb
xor
out
in
lcall
push
lods
jmp
jns
aam
stos
dec
ljmp
jecxz
lret
roll
scas
xchg
jnp
fsubrs
pop
dec
lds
fidivrs
pop
mov
xchg
dec
and
mov
inc
add
aad
js
sarb
cmp
popf
cmpsb
decl
aas
cmp
mov
imul
imul
popa
mov
lea
sub
and
cmp
pusha
cmp
addb
cli
rol
in
jl
push
repnz
jp
push
jno
mov
popa
push
call
mov
in
leave
jns
cltd
push
dec
cmp
sbb
test
ljmp
clc
push
and
jae
cmc
dec
dec
xlat
mov
cmp
aam
test
sbb
ljmp
and
cmp
push
mov
out
jbe
dec
lods
fs
lods
sbb
and
fcoml
jl
push
test
xor
scas
lcall
xchg
push
xlat
mov
les
xor
pop
gs
or
inc
xchg
xchg
in
aad
sub
jmp
or
push
popf
out
mov
fists
gs
xor
fiadds
popa
fidivs
into
ss
xlat
clc
dec
mov
mov
lret
aad
xor
and
push
mov
fs
sbb
adc
imul
nop
repnz
mov
pop
data16
jmp
inc
or
popa
repz
xchg
popf
lea
push
and
xchg
xorl
lahf
mov
repz
push
sub
or
nop
cmc
loope
jge
scas
sub
pop
dec
cmp
inc
cmp
sbb
pop
unpckhps
xchg
pop
or
cli
dec
xor
xchg
into
aad
xchg
xchg
out
mov
inc
out
inc
cmc
mov
lea
shr
mov
popf
sbb
loop
pop
lock
cmp
scas
test
or
cmp
add
mov
adc
sti
cmc
je
js
outsb
mov
in
cmp
dec
cmc
jo
int
into
xor
dec
or
sub
pop
sbb
pop
and
mov
fcomps
or
inc
adc
inc
in
adc
dec
icebp
imul
fisubl
push
imul
aad
mov
xlat
push
mov
adc
fstl
jnp
ret
add
add
dec
or
loopne,pn
scas
js
adc
testb
jnp
mov
fnstsw
and
push
aad
inc
mov
mov
hlt
push
aas
push
das
push
or
jne
fwait
mov
pop
jmp
out
mov
jne
mov
mov
call
pop
jnp
inc
push
stos
fwait
js
or
jb
pop
out
loopne
push
scas
call
stc
stc
pop
out
icebp
mov
sbb
xchg
xor
arpl
mov
xchg
push
and
adc
cmp
push
push
push
shrb
inc
pop
out
stc
test
mov
cmp
sub
in
sarb
push
inc
cltd
fstps
mov
push
xchg
inc
sub
test
mov
daa
ss
ljmp
mov
rclb
and
cmpsb
pop
pop
cmp
push
std
dec
xchg
stos
fldt
pop
and
mov
mov
xlat
push
xchg
jmp
adc
js
inc
lret
cmp
mov
out
es
pushl
cmp
jbe
mov
push
and
jbe
movsb
jge
rcll
lret
imul
and
std
jnp
loope
stos
mov
mov
xchg
push
cmpb
jbe
mov
lock
imul
fldcw
adc
sbb
std
dec
cwtl
shrb
popl
push
fildll
adc
stc
adc
mov
psubb
mov
push
mov
in
xchg
cwtl
ljmp
dec
jg
addr16
or
xchg
and
add
aad
mov
test
repz
les
mov
sti
adc
push
xor
push
xchg
mov
xor
ret
cmp
jns
mov
and
jbe
aam
dec
push
sub
jge
adc
push
and
ficoms
pop
fnsetpm(287
cmpsl
insb
adc
mov
adcl
push
dec
int
mov
aad
push
jg
mov
lea
jp
xor
dec
mull
pop
shll
sbb
loope
xchg
sbb
scas
stc
cwtl
pop
ljmp
mov
cmp
data16
push
pop
dec
mov
shrl
xchg
mov
int
and
daa
xchg
mov
pop
push
push
insl
movsl
mov
pop
call
test
cmpsb
cmp
mov
cmpsb
cwtl
out
scas
push
mov
jmp
stc
cs
xchg
pusha
int3
aad
imul
inc
adc
mov
test
testl
push
lcall
inc
push
cltd
jg
add
push
aas
int
rcrb
fdivs
das
xor
or
aaa
push
outsb
xlat
fsubp
inc
in
iret
ficoml
cli
faddl
push
aad
popf
clc
mov
xchg
data16
sub
or
mov
cmpb
shlb
fiadds
xchg
int
imul
loop
xchg
hlt
add
jmp
sub
js
sub
jmp
inc
pop
cmp
xchg
outsl
or
out
add
push
jns
out
add
dec
add
xor
mov
pop
and
or
sbb
or
jnp
out
rorl
push
pop
push
or
nop
adc
dec
jecxz
mov
lret
inc
sahf
sbb
add
sbb
inc
imul
inc
push
repz
mov
add
or
and
cmpsb
dec
sbb
cld
mov
gs
sub
ljmp
xchg
test
push
and
int
movntps
gs
jg
xchg
xor
stos
push
adc
pop
in
dec
ret
cltd
fnstenv
add
or
decl
mov
iret
loope
stos
ret
sub
clc
movsl
or
jne
roll
dec
loopne
lret
pop
inc
adc
cmp
scas
gs
cli
cmpsb
imul
fdivl
dec
stos
dec
cmpsb
adc
fcmovnb
jnp
push
push
push
add
mov
popf
xchg
push
daa
jl
out
pop
pusha
mov
rcl
repz
insb
lods
ja
jne
inc
adc
push
std
pop
push
mov
mov
push
xchg
push
ljmp
cmc
inc
xchg
and
pop
add
out
sub
mov
test
and
fs
out
mov
dec
fwait
ljmp
lods
add
inc
cltd
xchg
addr16
dec
lods
ds
cmpsb
loope
adc
mov
mov
pop
aaa
test
dec
ja
sub
pop
sub
xchg
cmpsb
jno
mov
cmc
aad
dec
fidivrl
mov
jnp
fdivl
lods
sub
fsubs
pop
popa
shr
std
aas
cltd
bswap
inc
xor
xchg
out
std
xor
inc
popa
or
insl
aad
shll
or
movsl
orb
lahf
xor
flds
stc
sarl
cwtl
cld
cmp
rcrb
add
dec
sbb
lds
jecxz
leave
mov
jo
jne
fcom
into
pop
add
and
mov
sahf
xchg
jl
adc
das
pop
push
xchg
inc
push
into
pop
push
gs
gs
lret
bound
or
cs
pop
pop
xchg
lcall
inc
jmp
ret
lea
fcmovbe
out
je
inc
cmp
mov
push
or
aaa
sub
aad
xor
sbb
add
jle
shl
mov
in
fsubl
mov
mov
xchg
adc
repnz
test
xchg
ret
arpl
pop
or
sbb
cmp
inc
mov
das
psubq
xlat
push
xor
pop
shr
ret
mov
or
mov
lgs
sbb
sbb
xor
jnp
xor
imul
push
pcmpeqw
dec
sbb
push
orb
cmp
sbb
lret
les
mov
push
adc
dec
lcall
push
fucomp
outsb
jge
dec
jmp
jno
popf
push
testl
push
aam
loop
or
mov
jno
lods
sub
cmpsl
mov
cmp
sub
aad
and
pop
cmp
test
dec
rcll
in
mov
sbb
sub
shr
cmp
pause
jmp
rcll
sbb
int
js
and
inc
jmp
sub
jo
sbb
and
loopne
out
mov
sub
insl
jnp
jp
dec
test
aam
dec
dec
cli
push
mov
add
and
out
mov
int
lds
add
dec
loop
and
cmp
gs
mov
inc
xchg
gs
add
stos
inc
inc
sbb
fs
pusha
xchg
push
pop
ficompl
push
xchg
pop
insl
enter
push
push
push
add
ror
push
popf
cwtl
jnp
fsubrp
and
mov
dec
nop
jno
or
jae
or
daa
cmp
mov
imul
outsb
jne
ljmp
aad
xor
jp
xchg
inc
xor
mov
add
pop
xchg
js
loope
cmp
cmp
cli
loopne
out
wrmsr
sub
es
push
das
mov
hlt
add
out
out
dec
data16
dec
pop
aam
inc
dec
das
mov
and
or
push
xchg
out
aaa
fnsave
or
aad
insb
pusha
pushf
call
and
lods
mov
repnz
pop
rclb
sarl
rol
rclb
xchg
mov
dec
pop
popl
xchg
aam
mov
pop
lds
dec
xchg
inc
stos
scas
ret
lret
rorb
call
cmpsb
xchg
add
outsb
repnz
push
pusha
fdivs
or
xchg
gs
mov
xor
mov
icebp
or
nop
aam
and
pop
sbb
fdivr
rorl
jmp
pop
cltd
test
iret
pop
xor
adc
adc
scas
push
cmp
xchg
mov
pop
sub
fsubs
std
aad
shrb
push
pushf
and
mov
cmp
jmp
lahf
xchg
pop
xchg
iret
xor
call
cld
mov
outsl
mov
sub
stc
iret
lods
or
ret
jp
mov
divl
pop
jl
mulb
cmp
push
aad
mov
jmp
cwtl
fs
test
mov
xchg
mov
sub
dec
dec
sbb
aad
mov
jnp
inc
and
test
popa
xor
cmp
in
xchg
test
es
js
rorl
lods
mov
or
adc
dec
inc
xchg
push
div
and
xbegin
inc
push
adc
aas
imul
pop
sub
mov
mov
ret
cmpsl
jnp
fsubrl
mov
and
cmp
and
pmaddwd
cltd
pushf
xchg
subl
repnz
cmpsl
nop
das
lahf
xchg
dec
or
in
inc
push
insb
aad
adc
xchg
aam
push
jns
mov
and
dec
out
int
lods
push
ljmp
inc
fmuls
fldenv
out
pop
daa
lahf
push
cmc
push
and
cmp
lods
lock
adc
mov
fildl
mov
adc
in
xor
data16
cmp
sbb
shll
push
add
or
stos
mov
jge
fs
lods
inc
jo
pop
cwtl
mov
xchg
dec
into
or
mov
in
fcmovnbe
enter
punpckhbw
push
push
inc
xchg
int
jmp
mov
jbe
inc
in
decb
test
xor
call
xor
mov
loopne
jns
adc
sti
aad
lcall
push
mov
std
xor
and
adc
fwait
fcoml
and
jp
mov
lcall
xor
xchg
aad
sti
pop
jmp
js
push
xorps
out
add
push
ss
pushf
push
test
in
ljmp
push
ljmp
push
cld
daa
adc
jle,pn
or
pop
xor
xchg
jg
or
jl
or
into
sbb
rclb
fdivrs
fsubs
stos
pop
outsl
loop
xchg
cwtl
push
mov
or
adc
adc
cmp
push
imul
pop
push
test
mov
adc
push
pop
dec
and
loopne
cmp
cltd
sbb
test
outsl
mov
jg
cmp
jl
and
sub
jae
cmp
movsl
cmp
mov
adc
mov
aas
aad
jnp
pop
mov
push
in
push
pop
adc
into
cmc
or
mov
sub
out
inc
or
adc
es
add
mov
fucomp
mov
push
test
cmp
rolb
or
es
jns
push
and
ficoml
setne
lock
push
inc
clc
jb
and
lcall
cmc
jmp
jp
mul
pop
sbb
int
es
jo
cmp
mov
mov
out
in
xor
push
jl
sub
divl
lahf
cmp
cmp
push
and
mov
scas
add
xor
mov
sub
jns
sbb
cmp
out
cmp
or
cltd
xchg
xor
push
xor
or
jge
movsb
pop
cmpsl
movsb
int
inc
into
and
mov
and
pushf
test
push
das
push
mov
xchg
pop
mov
fcmovb
mov
fisttps
adc
jp
jno
lds
clc
lahf
neg
and
outsb
je
cmp
mov
sub
maxps
mov
pop
and
dec
out
push
aaa
jl
or
out
add
daa
nop
fsubrs
and
inc
push
bound
fsubp
push
sub
insb
lods
cld
xchg
jmp
lret
xlat
jnp
or
adc
js
mov
dec
and
es
inc
inc
filds
out
gs
jns
loopne
mov
aad
adc
jns
and
mov
loop
cmc
cmp
mov
popa
dec
es
movsl
out
cmp
and
mov
push
push
jmp
aad
enter
loop
adc
loope
sarl
stos
fmull
loop
loope
cld
mov
and
rol
out
xor
loope
push
jg
xchg
aad
jg
ss
push
sti
fwait
repz
push
mov
out
in
or
xchg
inc
mov
enter
cmp
adc
mov
dec
pxor
fcoms
cli
mov
and
jle
outsl
out
dec
jmp
into
lods
pusha
mov
decl
add
stos
sub
push
adc
ss
cli
es
in
nop
push
inc
push
je
xchg
mov
outsb
mov
mov
pop
cmpsl
adc
and
test
imul
jmp
and
shll
and
stos
cmp
xor
push
into
sub
roll
push
sbb
cmc
add
aaa
out
stos
xlat
push
les
jl
xchg
dec
mov
xor
dec
mov
mov
cmp
cmpb
xchg
jge
lcall
pop
xor
pop
or
mov
out
dec
cmp
loopne
pop
adc
pop
je
mov
in
push
pusha
cmc
shrb
mov
pop
clc
jnp
imull
cmc
lea
out
or
call
or
jl
jae
sbb
mov
orb
jmp
fwait
mov
clc
lret
dec
stos
sahf
rclb
push
ret
or
xchg
rclb
jp
adc
pop
shlb
repz
fwait
sub
mov
sbb
cmp
push
mov
lods
loopne
das
xor
mov
xchg
sbb
and
sti
push
or
mov
int
sti
vmwrite
arpl
stc
add
add
and
les
insb
push
add
das
scas
leave
inc
psubsw
mov
dec
sbb
jnp
sbb
lods
js
lods
fisttpll
clc
pop
xchg
lods
in
lahf
or
pop
pop
add
cmp
cs
and
hlt
dec
push
add
in
sti
movsb
cmc
movq
jle
cs
push
adc
pushf
stos
inc
gs
mov
int3
sub
add
jnp
adcl
outsl
inc
cmp
out
cmpsb
test
scas
scas
repnz
mov
negl
ja
jmp
pusha
cmp
mov
adc
orl
dec
sub
sub
dec
insl
cmc
mov
fisubs
bswap
add
mov
inc
ficoms
sti
inc
lock
jmp
add
loope
mov
dec
cmpb
call
movsb
cmp
fdivrl
dec
insl
mov
push
mov
into
mov
les
xchg
aas
out
jge
push
loope
ret
xchg
cmp
push
mov
in
push
js
xor
sub
mov
shrb
rorl
mov
push
and
mov
xlat
stos
push
adcl
sbb
jne
shl
sti
pop
pop
filds
lods
or
rol
sub
ljmp
adc
inc
xchg
cli
int3
mov
sbb
and
fwait
mov
shrl
fwait
ljmp
icebp
xchg
mov
and
mov
mov
or
jge
sbb
decb
jno
jge
loop
xchg
adc
in
sub
mov
leave
push
jp
mov
xor
call
js
aam
pop
cmp
mov
jp
mov
addr16
and
mov
push
cmp
imulb
or
mov
les
stc
test
add
xchg
imul
or
testl
jns
mov
out
jmp
in
jge
and
or
std
xchg
inc
out
repnz
or
mov
jmp
mov
or
xor
lods
fucomp
imul
loope
jns
out
pushf
pop
sub
lcall
mov
mov
or
inc
pushf
jl
lahf
pop
ja
pop
sahf
jp
xchg
adc
dec
cmc
lock
nop
fsub
loope
jle
jle
in
push
arpl
cwtl
mov
imul
jnp
cmp
cmpsl
mov
ficomps
call
arpl
mov
xor
pop
pop
inc
aad
out
adcb
clc
add
std
out
ds
das
push
jno
rolb
pop
xchg
adcl
jl
cmpsb
jb
push
push
lds
popa
enter
std
adc
inc
xchg
inc
or
in
ret
es
stc
insl
out
pop
test
and
sarl
loope
out
cmc
sbb
aad
sbb
mov
in
cmp
pop
dec
dec
dec
sub
sti
call
cmc
out
jbe
inc
mov
sub
sbb
pop
xlat
pusha
xchg
aam
ffreep
cmpsb
clc
int
mov
loopne
imull
adc
call
lds
fs
adc
dec
lret
cld
mov
lcall
add
mov
int
jmp
loope
cmc
dec
xchg
push
cmpsb
xchg
sbb
xor
fadds
jae
push
mov
mov
adc
out
das
int3
lcall
push
jno
out
cmc
add
dec
stos
xchg
cmp
xchg
fdiv
and
pop
roll
sbb
jae
jno
mov
test
push
pop
inc
addb
imul
mov
push
xchg
shr
xchg
lds
pop
mov
mov
and
push
fisubrl
mov
int3
push
rcrl
jl
sub
jae
arpl
or
lock
lds
xchg
push
mov
lcall
test
sbb
xchg
and
cmp
sub
test
sbb
jnp
out
daa
shrb
std
add
push
les
xor
shrl
push
arpl
add
jmp
push
outsl
pusha
xchg
mov
mov
or
cltd
data16
mov
aad
pop
adc
and
inc
mov
pop
cmp
sub
in
jge
mov
inc
lds
addr16
cld
mov
jo
xchg
xchg
inc
out
ss
pop
mov
xlat
adc
inc
sub
mov
push
nop
or
cmc
sub
push
or
sbb
ja
xor
lods
outsl
int
iret
rcrl
and
call
pushf
jne
or
aaa
testl
addr16
sti
std
ret
push
or
sub
add
xchg
push
out
cs
jl
push
clc
sub
lret
rcll
test
jge
xchg
xor
xor
push
ret
add
pop
xchg
fadd
lods
add
rclb
push
cmpsb
pop
negl
fwait
out
mov
in
mov
das
sbb
call
cld
ss
cmc
jle
add
push
mov
mov
mov
aad
dec
xchg
adc
es
sub
in
rcl
idiv
xor
inc
adc
stos
xchg
inc
int
jp
icebp
mov
or
jmp
cld
dec
add
xchg
out
add
nop
push
pop
xchg
les
mov
xchg
fisubrl
dec
test
imul
push
xchg
dec
mov
sub
add
aad
pop
rcr
mov
mov
std
jg
aad
inc
lock
xchg
pop
daa
push
pop
lock
and
mov
dec
and
cltd
cltd
fidivs
inc
adc
sbb
mov
cmp
dec
int
jns
pop
jp
pop
stos
mov
xchg
or
je
push
sub
pop
adc
jge
and
aad
cmp
setb
fisttpl
dec
push
mov
das
push
push
mov
sub
inc
and
and
shlb
ljmp
jne
ret
in
jb
cld
inc
or
int
lods
lahf
jne
pop
add
xchg
clc
add
adc
cs
aam
cmpl
lods
testl
dec
mov
xchg
bound
xor
test
fsubrs
adc
jae
aam
inc
xchg
xchg
cld
stc
mov
sar
mov
mull
aad
jge
push
rcrb
and
into
fwait
xchg
pop
mov
dec
inc
lahf
mov
push
jo
aad
or
xchg
mov
sub
mov
and
mov
mov
cmp
or
insb
pop
inc
fisttpll
movsl
pop
hlt
jno
icebp
icebp
dec
aad
daa
test
lahf
sub
out
push
adc
xchg
push
jle
sbb
and
mov
push
push
inc
aad
or
push
frstor
cltd
push
lods
mov
fld
pop
mov
mov
mov
mov
sub
cmc
lds
movl
icebp
in
scas
or
mov
inc
push
adc
in
and
sbb
dec
sar
lcall
xchg
or
sar
xor
fimull
in
repz
xchg
xchg
jns
mov
cmp
xchg
xchg
popf
sbb
sub
ret
xchg
cmp
or
push
idiv
arpl
cmp
mov
repz
and
imul
addl
stos
sub
int3
add
pushf
and
mov
sti
stc
sub
imul
push
cmpsb
adc
movsb
sti
pop
xchg
and
insl
int
lea
popa
je
push
movsl
pand
jmp
enter
dec
add
xchg
aas
scas
mov
or
cltd
es
xchg
gs
repz
inc
push
xor
daa
scas
insb
lock
push
cli
pop
sub
lahf
gs
add
addr16
cmpb
mov
in
cmp
sbb
sysret
xchg
jbe
cmpsb
push
push
outsl
aam
jne
imul
js
popa
decl
loopne
xlat
lods
or
adc
into
sbb
push
pusha
cltd
fistpl
jle
push
push
xor
jp
int
aad
adc
push
addl
adc
and
clc
sub
cmp
mov
scas
in
cmp
inc
push
mov
test
pop
fwait
aaa
imul
inc
sti
ja
push
mov
xchg
mov
push
cmp
cmp
clc
and
out
add
dec
mov
pop
cmc
in
sbb
jmp
inc
jne
add
sbb
mov
fsts
sub
mov
push
add
sbb
mov
fwait
jmp
lcall
loop
imul
cld
repz
sti
popf
sub
into
stc
mov
sbb
in
clc
call
sti
lods
gs
hlt
stos
mov
jmp
cmpb
pop
shlb
push
mov
test
mov
inc
add
push
dec
push
xor
lods
mov
pop
adc
imul
loopne
and
add
in
in
push
push
mov
frstor
or
clc
stc
add
loope
mov
loopne
scas
cmpsl
mov
jg
outsl
cmp
outsb
aad
stos
jl
fsubp
jl
mov
rcrb
mov
test
jbe
aad
clc
sarl
sbbb
pusha
pop
sbb
pop
fdivrs
loope
cmp
inc
movsl
jl
fcom
jmp
jns
roll
scas
add
mov
int
nop
imul
bound
mov
cmp
cli
mov
mov
xchg
jne
xchg
pop
cpuid
push
sub
or
xchg
sbb
pop
adc
cmc
dec
jae
mov
push
mull
lret
jle
test
shl
add
fwait
jnp
rcrb
xchg
int3
cmc
xchg
test
cmp
outsl
xor
sub
outsb
decl
cmc
pop
inc
les
lcall
cltd
xor
out
xor
push
push
pop
lcall
mov
lret
int
aad
mov
into
aaa
xor
in
fidivs
iret
xorl
pop
push
cmpsb
pop
push
into
push
cmp
xchg
add
ret
dec
mov
jge
fsubrp
ret
xchg
jmp
shr
sub
cmp
mov
inc
dec
inc
iret
ljmp
push
mov
cmp
mov
dec
push
lcall
cmp
mov
mov
cmpsl
inc
inc
inc
or
int
fadd
cmp
mov
or
into
lods
add
mov
ret
jnp
cmp
jmp
mov
jmp
and
bound
out
and
push
xchg
frstor
sbb
out
mov
sub
rolb
or
enter
cmc
dec
iret
jns
mov
push
arpl
xlat
hlt
repz
push
dec
divl
cltd
lods
test
and
fsts
cmp
mov
jb
pop
insl
and
jno
sahf
mov
fcoms
jmp
push
jp
xchg
inc
xchg
push
int
das
push
sbb
add
sub
dec
loope
cmp
das
lret
add
dec
shrb
push
mov
pop
hlt
jno
xlat
sbb
inc
adcl
jp
scas
xchg
scas
push
mov
adc
dec
dec
jmp
rcrb
shrl
sub
cmc
dec
push
test
cld
pop
pop
mov
mulb
mov
pop
popf
jmp
test
jl
add
dec
xor
push
lods
jmp
testl
negl
loope
cmp
mov
fisttps
mov
push
jno
jp
repnz
aam
jb
sub
sbb
filds
stos
scas
sbb
clc
dec
jo
js
aam
sub
fisubs
orl
jle
sub
shrb
fbstp
sub
dec
pusha
fistpll
cltd
jecxz
or
repz
jne
into
jb
in
cmp
and
popa
sahf
adc
stos
adc
cmp
or
xlat
sbb
xchg
mov
out
into
dec
jecxz
cs
divb
imul
xor
fadd
mov
dec
push
mov
dec
sar
cmp
xchg
shl
dec
push
add
push
outsl
add
cmc
inc
xlat
iret
cli
out
adc
lods
mov
pop
int3
and
insb
pandn
mov
mov
add
push
mov
jbe
and
sub
push
mov
mov
cli
inc
pop
xchg
add
jmp
lcall
jge
push
cltd
mov
lcall
sbb
xchg
pop
outsl
pop
cmp
or
mov
and
rcl
addl
jl
es
fbstp
imul
call
push
or
aad
in
fnstsw
scas
pop
inc
aas
or
out
imul
movsb
sbb
shrb
bound
cmp
imul
out
xchg
bound
sbb
xchg
cmpsl
sti
scas
xor
or
andnps
cwtl
sub
mov
imul
xlat
and
xchg
or
fmull
xchg
js
jecxz
xchg
push
shl
pop
les
rol
mov
cmp
jnp
sub
hlt
rol
adc
jle
shl
into
loope
icebp
sahf
testl
test
fstpt
cmc
bound
push
pop
jae
rcl
or
mov
lods
incb
and
jg
daa
pop
lret
xchg
pop
cli
mov
mov
fisttpll
enter
mov
mov
icebp
push
jl
adc
push
clc
cmp
jmp
cld
lods
btr
call
dec
push
das
push
cmp
shll
shlb
jnp
cmc
in
nop
or
fadds
lea
sub
and
sub
or
push
push
mov
in
xchg
xchg
cld
mov
out
sbb
gs
xor
jmp
aad
cmp
jne
sbb
lock
cli
adc
test
cmc
mov
adc
sbb
mov
sahf
int
sti
jl
and
jl
std
mov
lcall
sbb
cmp
popa
add
xchg
frstor
xor
fwait
push
les
jmp
and
out
clc
sti
push
imul
jecxz
lods
test
xchg
sbb
in
jae
mov
push
pusha
fdivl
cmp
iret
mov
xor
jno
test
fsubrl
dec
pop
out
rcll
stc
cwtl
pop
add
push
xor
mov
pusha
mov
xchg
lods
les
or
push
mov
adc
dec
test
imul
mov
pop
add
cmp
or
dec
punpcklwd
adcb
repz
xchg
daa
jno
mov
mov
pushf
xlat
cmp
aas
cwtl
pop
add
roll
out
jmp
xlat
stc
aad
sarb
addr16
dec
fucomip
and
jns
sub
repnz
mov
push
lret
push
pushf
jo
sub
loop
xor
cmp
out
adcl
jg
adc
rorl
adc
mov
adc
add
iret
cmp
sbb
jns
jns
movsb
or
orb
imulb
iret
dec
test
and
sub
testl
mov
testb
and
xor
mov
dec
jmp
inc
test
dec
stos
ficomps
loope
loopne
fiadds
scas
iret
movl
dec
cltd
aad
shlb
mov
adc
packssdw
mov
popa
mov
mov
xchg
mov
adc
pop
cmp
and
mov
xchg
ret
pop
aad
sub
ss
jo
insb
in
cmpsl
roll
jmp
cmp
xor
inc
scas
sub
nop
push
pop
andb
shll
jg
das
dec
insl
ret
fiadds
dec
ret
xchg
cmp
xchg
cmp
mov
sub
jmp
pop
mov
jle
or
ja
into
push
clc
inc
sahf
out
pop
pop
fistl
cmp
push
or
or
nop
adc
clc
out
or
pusha
push
push
cli
or
add
or
mov
mov
mov
push
add
dec
or
scas
push
mov
xchg
jne
mov
cmp
push
adc
mov
stos
sbb
mov
std
xchg
sarb
or
aad
inc
rorl
lret
dec
jne
das
insl
cmp
test
mov
xchg
jbe
int
mov
out
scas
lock
call
adc
xchg
loop
fcmovbe
and
imul
sub
lock
jge
insb
sbb
sbb
pushf
push
adc
subl
pop
jg
test
mov
dec
imulb
lods
add
and
int
cmp
mov
push
xlat
sbb
out
dec
and
enter
out
pop
jp
orl
pop
xchg
mov
mov
out
mov
paddsb
outsb
fxch
pop
xchg
cmp
in
cmp
mov
jl
pop
or
dec
xchg
stos
fnsetpm(287
lcall
jg
xchg
out
negl
cmp
frstor
daa
or
push
push
jg
test
imul
or
outsb
mov
lock
out
in
daa
sbb
jmp
das
dec
pushf
pop
xor
xor
sbb
int
dec
sbb
xchg
push
fs
adc
jg
roll
xor
ret
push
pop
or
xchg
xchg
dec
cli
mov
push
test
aam
outsl
sbb
and
pop
stc
add
pushf
jl
pop
mov
adc
andl
cld
adc
or
or
push
nop
cmp
cld
fwait
or
call
push
dec
testl
and
std
out
xchg
daa
outsl
or
xchg
sti
adc
inc
pop
dec
jae
lods
adc
out
negb
mov
cli
mov
mov
imul
cmc
mov
jne
adc
pushf
aad
call
pop
xor
mov
mov
mov
push
push
adc
dec
int3
mov
pop
pop
adc
js
xchg
cmp
cmp
xchg
inc
cmpsb
leave
adc
xchg
cli
jp
sahf
push
push
data16
jb
imul
test
add
jl
shll
and
cmp
pop
push
lds
mov
or
repnz
xor
inc
ss
test
jo
faddp
sti
pusha
mov
cmpsb
and
fldenv
js
adc
adc
es
jae
lret
and
mov
fistl
pop
arpl
pop
xchg
add
mov
jnp
repnz
fadds
adc
cmpsb
outsl
xchg
jns
scas
repz
mov
mov
dec
or
sahf
cmc
in
dec
loopne
and
adc
iret
fcmovbe
xor
andb
xchg
insl
jae
dec
mov
mov
push
stos
mov
cmp
stos
adc
mov
lods
xor
mov
or
mov
jbe
lods
aad
pop
loop
movsl
movsb
pop
out
popa
mov
mov
push
cmc
call
stos
mov
es
in
push
cmp
cltd
add
mov
and
fwait
outsb
aad
jmp
dec
sub
ds
mov
sarl
int
pop
adcl
mov
dec
pop
dec
cmp
aad
pop
fistpll
sbb
rol
inc
call
arpl
aam
cmp
jmp
push
cmp
xor
xor
aam
in
cmp
jl
mov
out
insb
mov
int3
jno
shrb
popa
jmp
sub
fistps
dec
outsb
xor
jnp
inc
jge
jo
cmc
fcoml
das
out
or
mov
jns
sbb
xchg
sbb
sarl
out
mov
aad
xor
push
cld
stc
mov
cmc
scas
sub
ret
inc
and
int3
mov
mov
dec
pusha
ret
cmc
sbb
mov
imul
int
stos
int
lods
dec
or
sbb
insb
sbb
sbbb
push
cmp
dec
pop
xchg
rorl
or
xchg
jne
and
adc
xchg
jmp
xchg
and
int3
mov
xor
lods
dec
test
jmp
les
cmp
add
es
sbb
popf
dec
and
test
push
pusha
enter
sub
scas
stos
sbb
js
add
mov
mov
mov
sbb
fisttps
hlt
shl
push
pushf
mov
or
sub
dec
fmul
add
cmp
lods
out
clc
inc
call
fbld
sub
mov
sbb
xchg
lock
or
jge
cmc
xor
cmpsb
jae
clc
push
sub
adc
movups
sarb
test
xor
push
dec
popa
add
xchg
inc
mov
jno
pop
int
or
pop
rcrl
xchg
mov
sti
add
lret
cli
add
scas
or
cmp
jl
fs
jge
inc
and
inc
inc
mov
repz
jmp
push
push
lock
push
xchg
test
push
loope
xchg
jge
out
jae
scas
nop
and
jg
addr16
or
or
out
xchg
repnz
les
fsts
sahf
fsubs
cltd
push
shll
in
inc
mov
imul
sti
xchg
cmp
pop
push
lcall
pop
int
inc
mov
scas
xorb
pop
cs
add
pop
mov
xchg
nop
cmp
add
sbb
and
hlt
fsubrl
mov
inc
scas
popa
or
bnd
jl
scas
dec
sub
add
sbb
inc
add
cltd
aas
std
test
test
loopne
add
jl
incl
sti
out
repz
dec
xchg
jae
jecxz
dec
add
shl
jl
push
mov
pop
rorl
add
xor
and
pop
cwtl
xchg
jg
and
push
out
mov
lock
cmp
outsl
pusha
cmp
jge
or
inc
ret
daa
add
sub
cmpsb
cmc
push
sub
dec
rorb
xchg
push
push
xchg
les
fcmovne
fldl
lcall
lods
mov
jmp
xchg
push
mov
sub
lods
cmp
add
jnp
sbb
or
mov
push
or
mov
aad
inc
test
insl
stos
mov
fcomp
pop
pop
mov
pop
lock
call
push
mov
sarl
fdiv
sbb
and
popa
mov
xchg
pop
inc
ficoms
add
add
filds
shl
shll
enter
fnstenv
jle
add
jnp,pn
cmc
popa
mov
jo
in
adc
jp
js
mov
inc
pop
rcrl
xor
aad
hlt
loop
test
in
dec
xlat
imull
mov
xor
xchg
ja
loopne
in
inc
add
push
and
lret
pop
xlat
xchg
fiaddl
popf
xchg
add
add
punpckhwd
push
jp
sbb
jbe
repnz
mov
and
mov
or
leave
dec
dec
pop
mov
pop
jmp
xchg
popa
in
cmp
push
xchg
cmpl
pushl
cmc
sahf
dec
scas
shlb
rcll
repz
push
mov
fcoms
popf
mov
mov
push
push
fisubs
or
jge
dec
xor
sub
xchg
xchg
test
mov
fimull
mov
jno
roll
in
mov
cli
les
sub
jle
cmp
xchg
out
jg
push
out
xchg
lods
mov
mov
lcall
jbe
imull
xchg
nop
fistpll
mov
push
stc
push
sbb
iret
inc
lahf
repz
mov
scas
aad
imul
btsl
push
mov
pop
fwait
sbbl
das
imul
or
popa
adc
aas
out
sub
aas
pop
add
inc
or
sub
je
insb
les
cmp
iret
cmc
mov
and
scas
stc
icebp
sub
mov
pusha
sbb
dec
into
xchg
rorb
stos
sbb
test
or
or
xchg
push
fstps
inc
add
shll
pop
sar
jne
cmp
dec
lds
inc
cli
xchg
cs
ss
xchg
push
xchg
jge
aam
fisubl
sbb
adc
xor
sahf
or
lret
add
dec
mov
mov
notl
roll
test
xor
add
loope
sarl
test
mov
leave
xor
add
pop
decb
xchg
xor
loope
jl
in
test
lea
cmp
adc
mov
and
cmp
scas
or
outsl
inc
cltd
adc
lea
js
sti
mov
mov
jle
push
addb
xchg
repz
aad
xchg
pop
cmp
mov
imul
xchg
ja
sbbl
sbb
daa
cld
or
pop
xchg
dec
jns
mov
jmp
cmc
xlat
cs
add
jmp
hlt
int
cmc
mov
popl
ds
mov
sbb
xchg
and
scas
ret
pop
int3
pop
mov
lods
inc
lret
jmp
mov
pop
sub
or
mov
clc
loope
sbb
js
mov
arpl
sahf
lea
pusha
loop
inc
inc
test
maskmovq
dec
out
lods
add
push
test
pusha
mulb
inc
shrb
imul
std
imul
lret
fs
xchg
push
enter
jg
jle
movsl
out
or
aas
jne
jo
pop
icebp
push
mov
lcall
mov
lods
fdivrp
cmpsb
add
pop
das
js
addr16
mov
add
push
add
xor
xchg
mov
imul
mov
enter
sarb
cwtl
mov
mov
push
jno
xchg
aad
pop
out
or
mov
insb
xchg
iret
cmc
jl
xor
pop
test
pop
push
push
cmc
out
xor
push
ljmp
sbb
dec
xor
push
movsl
out
cmc
cmp
sbb
leave
es
cwtl
add
pop
stos
sysenter
cli
xchg
adc
mov
mov
fcoms
icebp
hlt
js
in
leave
mull
dec
test
or
cmpsl
lret
dec
jmp
add
cld
cmp
out
insl
mov
es
pop
add
in
xchg
dec
sub
sahf
mov
push
push
fs
xlat
rclb
int3
int
in
or
rorb
stos
imulb
jmp
nop
fucomi
sti
cmp
adc
jo
out
mov
sub
and
or
sub
ljmp
add
sub
sbb
xchg
inc
aad
cmp
or
les
mov
clc
lock
insb
sbb
in
sbb
popa
jo
inc
push
mov
shl
loope
or
jecxz
or
neg
imul
rcll
mov
stos
jl
xchg
aad
mov
js
jle
push
out
shl
mov
sub
cmpsl
cmc
adc
roll
mov
cmp
gs
and
aad
enter
push
jmp
jb
or
aam
mov
popa
mov
mov
ja
fwait
sub
inc
shll
cmc
xchg
xor
test
enter
stc
push
adc
push
test
push
dec
ret
dec
aad
stc
out
arpl
dec
or
mov
cmc
mov
cmp
lods
mov
fcoml
std
mov
mov
mov
jmp
or
xchg
and
out
sbb
dec
cmpsw
dec
jbe
dec
mov
lods
xchg
push
push
pop
into
out
pop
adc
inc
push
jmp
rorb
movsl
mov
pop
and
jne
psubsw
stos
dec
pop
fcompl
gs
mov
xlat
add
sbb
sub
inc
std
in
fdivl
mov
add
cmp
pop
scas
test
inc
and
and
dec
ret
out
inc
push
es
cmpsl
rorb
sti
xlat
rcll
lods
notl
loope
xchg
push
sub
adc
js
pop
sub
pop
into
jp
in
sti
daa
dec
comiss
dec
adc
testl
cmp
loop
jge
fs
adc
cmp
stos
or
add
sub
cmp
mov
cli
pop
bound
in
loope
lcall
ds
insl
xor
loopne
pop
push
outsl
scas
imul
or
test
push
pushf
or
inc
sub
jecxz
jl
sub
filds
xchg
mov
xchg
rsqrtps
xchg
fildl
aad
fmull
daa
les
sahf
sub
jae
leave
aad
movsb
shr
ljmp
sti
push
push
not
cmp
xchg
jae
push
out
scas
in
and
and
add
adc
xchg
xchg
mov
icebp
sub
sbb
repnz
mov
mov
cmp
cmpsb
push
pushf
clc
inc
movsb
sbb
lock
cmpsb
negl
add
cmp
pop
notl
xchg
jns
addr16
cmp
xchg
sbb
jnp
ljmp
or
adc
mov
mov
mov
adc
outsl
lcall
in
inc
pop
stos
sbb
or
xor
enter
aas
mov
jg
push
jns
aam
mov
sub
imul
call
jo
stc
add
adc
mov
repnz
or
mov
dec
or
sub
jp
stos
call
push
aam
popa
into
mov
das
jnp
jle
sarb
mov
into
test
rcl
pop
stos
call
std
repz
sub
outsb
adc
inc
xchg
mov
mov
cmp
aad
sbb
xchg
in
out
add
push
lods
mov
divl
mov
icebp
cmpsl
mov
imul
mov
sub
std
xchg
in
pop
mov
inc
int3
mov
lret
cwtl
adc
shlb
fcompl
jnp
xlat
xchg
sub
aas
clc
int
lock
adc
push
cmp
clc
clc
jno
pop
and
mov
shl
roll
sarb
mov
sbb
sub
push
idivb
jle
stc
clc
jnp
sbb
push
insb
lock
in
cmc
xor
or
or
sub
leave
cmp
icebp
xchg
sub
or
sub
cmp
cmc
jp
xchg
subl
sbb
mov
loop
rclb
iret
pop
xchg
nop
test
aaa
mov
fs
incl
push
mov
adc
or
test
lea
jns
movsb
in
sbb
lahf
int
push
aas
int
popa
rcr
es
mov
sbb
or
hlt
es
add
mov
in
cmpsl
mov
mov
insb
jg
out
popf
and
loopne
cmc
lahf
and
xchg
mov
js
push
xor
or
push
lock
mov
xchg
in
xlat
inc
sbb
pop
push
sub
es
sbb
or
scas
cmpb
mov
sbb
addl
or
and
jmp
push
dec
push
cwtl
sub
mov
xor
mov
dec
fstpt
adc
xor
push
out
into
add
and
int
dec
xchg
rolb
add
xchg
out
cmp
in
sbb
and
mov
mov
adc
jecxz
cmp
into
ret
xchg
sub
stos
fcoms
jne
repnz
cmp
call
loopne
mov
inc
push
xorb
aad
lret
cwtl
cmp
in
addl
add
notl
ret
lock
mov
cltd
jg
or
jnp
adcb
mov
dec
int
and
sub
int
pusha
mov
rep
jmp
int
shll
adc
jnp
stos
dec
cmc
sahf
sbb
lret
dec
sbb
mov
aam
cs
fcomip
pop
cmpsb
sti
jge
rorl
pop
adc
das
lods
cwtl
ds
lods
mov
or
push
dec
cmc
imulb
mov
divl
cltd
mov
rolb
fucomip
push
add
mov
or
fnstenv
mov
inc
wrmsr
arpl
andb
push
xchg
adc
push
xor
jno
stc
inc
pop
imul
inc
shrd
rcrl
jecxz
std
or
fimuls
inc
dec
push
push
add
into
imul
out
mov
scas
cmp
orl
imul
mov
dec
push
pop
in
xor
pop
cmp
call
addr16
stc
jae
adc
insl
in
add
es
cmp
add
xchg
call
jmp
push
mov
cmc
sbb
cmpsb
or
cmp
mov
loope
mov
enter
adc
jne
jl
and
inc
mull
aam
pop
rcrl
cmp
sub
arpl
rclb
js
mov
sbb
dec
push
jno
dec
jno
aaa
inc
jg
testb
and
cwtl
hlt
sahf
clc
ljmp
pop
stos
push
pop
mov
xchg
push
pop
test
push
adc
js
movsb
and
pop
dec
test
and
push
rolb
cs
popf
jmp
ficoms
mov
inc
into
sbb
outsb
push
fcoml
mov
inc
lods
ljmp
and
sbb
bnd
or
dec
aad
and
movsb
shrb
or
cmp
loop
test
or
add
jmp
aad
mov
xchg
xor
int3
jecxz
stos
cmp
xlat
push
aam
cwtl
loop
repz
push
jp
sti
and
xor
dec
addr16
inc
xor
fcmovbe
dec
pop
xorl
xchg
pop
out
fimuls
pop
jnp
mov
repnz
test
xchg
push
mov
inc
push
loop
addl
adc
clc
fisttpll
push
adc
xchg
jp
xchg
mov
jmp
loope
scas
add
xchg
mov
and
scas
test
rep
xchg
leave
fcoml
test
rolb
xchg
mov
insb
mov
lret
cld
movsl
sub
test
sbb
repz
cs
push
adc
jo
xchg
and
sbb
jle
call
mov
cltd
cmp
sbb
fsubrl
adc
xchg
test
idivl
push
dec
mov
adc
push
dec
or
fidivrs
cld
cmp
test
or
mov
jmp
popf
sbb
jp
or
xchg
lret
mov
jmp
rcrb
mov
jno
push
sub
int
mov
lock
mov
pop
dec
fidivs
sub
jl
dec
and
cs
xchg
sti
push
fdivl
and
aad
out
jmp
jl
push
imul
inc
out
push
lods
xor
sub
insb
inc
mov
inc
fs
aad
jmp
mov
std
cmpsb
sub
lret
cld
dec
mov
insb
push
loope
pop
int3
pop
jmp
or
clc
sbb
xchg
arpl
xor
loopne
incl
sbb
xor
mov
push
adc
aaa
inc
pop
je
or
fwait
ret
pop
dec
add
and
xchg
or
pmullw
rclb
call
ljmp
inc
mov
std
fisubs
shlb
jl
push
cmp
out
push
int
clc
ficoms
cmp
inc
out
xchg
pop
inc
mov
sbb
sti
orl
push
fisubl
cltd
jno
nop
pop
push
cmp
mov
stos
mov
loopne
jbe
test
in
pop
bts
mov
inc
sbb
rcl
movd
icebp
pop
cmp
dec
aad
pusha
jl
lods
mov
fisttps
pop
popf
or
jno
push
std
mov
sbb
jp
dec
xchg
sahf
repnz
or
out
push
add
and
or
adc
xchg
push
ja
xchg
jg
cmp
push
cmp
arpl
inc
lock
fbld
adc
xchg
pusha
add
sub
call
and
int
mov
sub
mov
mov
adcl
mov
sub
sti
add
out
xor
xchg
cmp
out
lock
ljmp
push
mov
xchg
fisttpll
lods
mov
jno
add
std
fnsave
xchg
cmp
add
mov
loope
xor
xchg
mov
xchg
ss
mov
pop
negl
and
cmp
dec
xchg
mov
cmp
sub
dec
movb
sub
sbb
jno
xchg
push
xchg
fisttpl
push
xchg
inc
pop
faddp
or
adc
mov
jae
jbe
std
add
scas
mov
inc
jne
ret
lods
add
fsubrl
jnp
repnz
in
mov
pop
cmpsb
push
aam
fdivr
mov
cmc
loop
daa
int
aad
into
mov
jp
sarl
pop
jo
psubw
int
mov
stos
out
add
loop
pop
les
sti
jge
push
inc
or
scas
lods
adc
adc
xchg
mov
fsub
sub
roll
xchg
jo,pt
inc
mov
mov
sbb
ds
sbb
data16
idivb
imul
push
arpl
shll
xchg
and
and
mov
scas
cmc
inc
adc
scas
movsl
adc
pop
lods
cmp
stos
mov
dec
cmc
arpl
sarb
lahf
outsl
dec
mov
jo
cmp
ja
pop
clc
cmp
cltd
mov
ret
ja
or
sub
cli
jecxz
mov
or
mov
add
dec
inc
call
sub
sbb
jne
hlt
aad
insl
pop
pop
dec
test
xor
stos
sub
mov
xchg
inc
jge
ficomps
add
sub
mov
scas
testl
cmc
rol
xchg
jl
fucomp
lods
sub
mov
jb
push
push
sbb
jns
and
push
mov
shll
xor
mov
sbb
xchg
mov
js
ficoml
sahf
jl
neg
adc
lods
test
sub
xchg
popf
pop
ds
jnp
test
lret
jns
leave
pusha
mov
xchg
ss
cmp
addb
stc
jmp
mov
aas
dec
out
cmp
pop
add
inc
mov
mov
test
loop
sub
or
les
and
scas
and
div
addr16
ja
xchg
adc
push
inc
mov
cmpb
sbb
jno
mov
fwait
jge
lahf
ret
cli
daa
and
push
pcmpgtw
ja
jecxz
dec
ds
into
fstpt
pop
mov
movsl
or
jbe
sub
push
xchg
sbb
pusha
lea
js
push
clc
scas
pop
insl
lods
jno
mov
stos
mov
mov
pop
imul
movsb
xchg
and
jge
push
jmp
xchg
mov
in
sbb
jno
rcl
sbb
movsl
add
mov
stos
cmp
incl
dec
ret
ja
push
inc
cmp
fs
add
cmc
lea
add
nop
mov
andb
int3
adc
push
clc
xchg
sbb
pop
ss
push
xor
iret
xchg
in
scas
test
stos
jno
mov
xchg
xor
push
fidivl
fldl
jbe
test
mov
add
cmp
ds
push
jle
sub
pop
aad
int
cltd
sbb
or
sub
in
jl
pop
lcall
out
cs
and
int
lock
jg
insl
mov
sahf
jno
adc
inc
add
jl
pop
adc
sti
mov
pop
loope
or
pop
out
cmc
aaa
push
inc
dec
mov
lock
dec
in
push
lcall
lret
int
xchg
xor
push
scas
or
xchg
movsb
mov
mov
test
cmp
add
int
scas
addr16
cld
js
push
mov
dec
cli
orl
xchg
movsl
jg
int
mov
cld
scas
fnstsw
call
jbe
add
imul
inc
enter
call
jb
dec
jle
ja
cli
in
jnp
mov
jmp
mull
mov
shll
popf
or
pop
insl
imul
xchg
adc
aaa
mov
ret
aad
into
dec
inc
rcrl
cli
mov
cmc
push
call
pop
js
xlat
aad
and
sahf
pop
jne
jp
dec
dec
adc
cmp
push
jo
push
jns
rol
mov
loopne
push
leave
dec
daa
cmc
mov
mov
mov
clc
les
nop
jg
lock
rorl
in
out
scas
inc
jmp
xchg
or
push
popa
pushf
cmp
or
shl
mov
mov
sub
sub
jmp
out
inc
add
pusha
repz
rclb
push
cs
je
scas
jae
or
sbbb
shr
pusha
mov
push
sub
jle
mov
loope
shr
jecxz
mov
imull
push
sub
mov
or
xchg
les
dec
sbb
cli
jecxz
aad
mov
xlat
or
jns
push
or
mov
mov
adc
push
lcall
cltd
sbb
pop
pusha
push
or
bound
add
jl
aas
in
fucomp
jmp
test
mov
shl
jl
mov
push
bound
lea
cmp
xchg
pop
lret
jbe
insl
clc
hlt
test
sub
lret
mov
stos
sbb
pop
lcall
jae
or
push
and
cmc
fwait
pusha
in
jl
mov
int
test
mov
cmp
sbb
cld
jne
int
cli
lods
cmp
scas
sub
mulb
outsl
push
cs
cmp
movsl
nop
sub
adc
and
insl
push
pop
mov
inc
popa
aaa
mov
or
pop
lea
mov
push
test
add
setl
test
test
lds
mov
fnsave
arpl
xchg
popf
rorb
and
xor
sarl
cmc
inc
push
negb
cmpsb
jmp
icebp
decl
mov
pushf
scas
daa
jns
xor
push
add
mov
mov
in
mov
clc
repnz
mov
fstps
mov
stos
cmp
aad
mov
call
and
mov
fistpll
push
addl
pop
popa
jle
lcall
dec
fstpt
std
sti
cltd
add
add
out
jo
ja
test
sbb
pop
stos
sti
test
push
es
pusha
dec
dec
push
mov
fiadds
add
lock
in
mov
rolb
icebp
cmp
iret
adc
add
inc
std
xlat
es
sarl
dec
ljmp
add
out
mov
sti
push
push
jno
adc
mov
sub
arpl
sub
iret
inc
ljmp
jns
in
dec
vmread
nop
add
sub
lret
jge
lods
mov
jne
pop
inc
dec
out
aad
pop
pop
jmp
sarb
inc
add
insl
in
repnz
cmc
mov
test
fldt
mov
and
in
rcll
test
sti
loop
push
and
arpl
adc
jmp
movsb
mov
clc
sbb
out
push
mov
push
lds
cmc
or
stos
insb
out
out
ja
test
dec
pop
mov
push
call
aad
in
xchg
xorl
scas
test
fcompl
fdivrl
xchg
aad
loope
fistpll
inc
add
test
jae
cmp
adc
ja
xchg
outsl
pop
ljmp
xchg
mov
xor
push
stc
cmp
sub
arpl
aad
aaa
cmpsl
loope
xchg
add
les
cmpsl
mov
enter
pop
in
add
xchg
pop
pop
fistpll
jmp
or
mov
test
inc
inc
xchg
xchg
jb
and
add
lea
es
std
xchg
lds
fistpll
mov
fisttps
lds
sbb
int
pop
outsl
test
divb
push
mov
outsb
int
sbb
xchg
inc
out
xor
test
dec
out
mov
or
mov
into
icebp
sti
addr16
aad
notl
sbb
rcll
mov
aad
add
and
and
xchg
jle
in
das
and
pusha
rcll
iret
scas
mov
aad
pop
xchg
cwtl
and
push
out
mov
fdivs
outsl
lcall
jle
sub
mov
into
xor
lret
add
mov
iret
add
mov
ficoms
std
and
mov
into
xchg
mov
das
bound
xchg
cmc
repnz
insb
shlb
rcrb
xor
xchg
repnz
in
test
loop
mov
icebp
or
lahf
xchg
inc
push
dec
rclb
cmp
cmp
xchg
outsb
sub
imul
pop
sti
and
in
fbstp
mov
pop
xor
stos
insl
adc
ficomps
clc
gs
test
mov
mov
push
push
out
je
sbb
mov
lods
xchg
cmc
sbb
jno
incb
push
adc
add
in
cmp
sub
dec
mov
ret
cld
in
mov
mov
imul
or
xchg
fs
adc
add
push
mov
inc
add
loop
or
clc
dec
jmp
or
or
and
pushf
sbb
xchg
into
ficoml
cmc
sub
mov
insb
sti
aam
and
insb
dec
stos
pop
xchg
mov
mov
in
cmp
mov
popa
test
cmpb
xor
push
fwait
jno
and
dec
in
lds
shrb
in
cmp
lcall
jmp
out
push
out
pop
daa
push
cmp
mov
mov
in
clc
xor
sub
pushf
scas
push
mov
jmp
sub
xchg
out
cwtl
mov
lods
andb
mov
xchg
mov
or
mov
arpl
popf
aas
call
mov
outsb
lahf
ror
adc
jae
mov
jns
ret
ja
cld
cwtl
les
jl
jnp
xchg
les
imulb
xor
xlat
pop
xchg
addl
adc
jnp
pop
roll
pop
fisubrl
lret
mov
pop
mov
int3
int3
jp
xor
mov
pop
dec
fsubl
sbb
push
cmp
push
mov
cs
sub
adc
add
and
add
cmp
inc
mov
mov
jmp
sub
imul
cli
mov
mov
adc
sbb
mov
dec
out
das
mov
out
test
push
push
cmp
jecxz
orl
test
mov
in
sbb
sbb
push
lods
sbb
lea
or
push
add
mull
test
or
xchg
cmpsl
mov
jmp
adc
cmp
paddsb
int
in
adc
xlat
fwait
dec
jg
sarl
pop
xchg
sti
sub
jae
mov
xchg
and
adc
sub
cmp
and
scas
sub
inc
add
push
adc
xchg
push
mov
in
jnp
jnp
jmp
enter
dec
std
incb
jl
xchg
int
popf
jecxz
mov
sar
cld
test
mov
mov
popl
push
mov
mov
cli
add
rolb
std
daa
incl
xor
ss
subl
arpl
repz
sub
js
jbe
jmp
clc
jnp
into
jns
test
sarb
jl
out
jp
jmp
jnp
aam
mov
cmc
cmp
adc
loop
or
rorb
inc
xchg
jle
adc
cmc
into
idivl
xchg
arpl
mov
filds
or
stc
jmp
les
cmp
push
les
aad
mov
add
xor
roll
and
movsl
or
push
fistpll
cmc
sbb
addr16
mov
mov
mov
and
ror
dec
out
inc
movsl
xchg
mov
inc
pop
roll
dec
xchg
icebp
imul
lcall
repnz
jns
loope
imul
xchg
xlat
out
fcoml
add
xchg
icebp
pop
imul
adc
decl
dec
scas
xor
ret
jne
rol
cmp
inc
cmpsb
loope
js
mov
imul
mov
popa
jp
push
ja
or
in
lods
xchg
loopne
xchg
test
insl
jnp
fistpl
rcr
repz
gs
jmp
es
jp
pop
mov
push
ret
mov
roll
mov
shrb
daa
or
scas
call
jl
movsl
xchg
testl
cmp
dec
xchg
mov
aad
das
and
mov
pop
mov
and
push
jo
sbb
add
mov
sar
aad
movsb
xor
rcll
aad
adc
fsubp
sbb
pop
dec
mov
fidivl
imul
and
test
inc
decl
jecxz
cmp
dec
addr16
add
sbb
cli
stos
scas
cmp
lods
incl
test
or
mov
out
in
cmc
jle
sarb
sub
adc
aad
xor
mov
into
add
iret
and
sub
inc
mov
test
lret
in
lods
je
pop
xchg
movsl
pop
add
cltd
ret
mov
and
pop
imul
mov
pop
dec
push
push
dec
xchg
sahf
or
lret
and
jns
in
ret
daa
test
push
xchg
repnz
adc
pop
dec
adc
bound
jecxz
test
adc
aaa
pop
xchg
cmp
xchg
test
stc
push
add
mov
adc
xchg
sbb
leave
dec
cmp
lret
push
fs
sub
xor
mov
sub
sub
dec
dec
jno
shrl
div
out
or
cmp
xchg
popf
add
das
jge
sti
jns
sarb
mov
cmpsl
fst
in
push
subl
int
push
jne
je
dec
xchg
sti
jg
jno
push
js
pusha
inc
dec
fs
mov
dec
sub
push
pop
lods
imul
xchg
das
outsl
adc
lret
int
pop
movsb
fisubs
push
ret
test
cmp
arpl
in
arpl
pop
aad
xor
stc
jecxz
jge
aam
lock
push
bound
imul
imul
test
idiv
gs
lcall
fildl
add
les
adc
mov
mov
decl
xor
sahf
inc
stos
jo
pop
push
xchg
icebp
sbb
jnp
mov
fwait
xor
ja
leave
addr16
cld
in
cmpsb
nop
pop
les
dec
ret
movsb
call
data16
fistps
pop
loop
pushf
js
imul
inc
cmp
clc
aad
pushf
add
or
nop
xor
fidivl
int
jae
mov
movsl
cmp
in
outsb
aad
out
andb
inc
cmp
addr16
loopne
pinsrw
cmpsb
enter
push
int
push
call
adc
orl
dec
sbb
aam
setae
aam
loope
gs
jnp
in
cmp
xor
xchg
jae
popf
xchg
mov
and
aad
std
xor
push
int
cmp
imul
mov
arpl
int
mov
sbb
test
aad
lock
fnsave
mov
jmp
mov
in
push
aam
movb
pop
add
jns
cmp
js
stos
int
icebp
fnstenv
out
mov
sbb
loopne
jle
mov
cmp
or
out
mov
cli
out
dec
push
pop
or
arpl
out
in
add
andb
popf
or
push
imul
mov
sub
lea
or
lret
fcom
sub
push
jg
or
mov
gs
std
jns
xor
dec
inc
sub
adc
aad
jge
into
movsl
movsl
in
int
sub
mov
out
cmc
stc
outsb
or
aad
dec
repz
pop
xor
push
jne
subb
or
pop
push
popa
pop
icebp
jge
adc
shlb
or
aad
adc
pop
pop
rcll
arpl
or
pop
cmp
aam
outsl
insl
aad
ja
adc
mov
mov
dec
popa
push
xor
add
pop
xchg
mov
adc
jl
dec
pop
and
cmp
or
adc
and
pusha
out
lds
fsubp
int
aad
jae
adc
add
lods
adc
testb
bound
clc
dec
rorb
jecxz
xchg
jmp
test
add
sub
dec
pop
les
sbb
testb
mov
fists
nop
xchg
stc
popf
fwait
mov
xchg
int
shrb
cmp
mov
and
js
dec
imul
into
outsb
pop
cmp
push
imul
aad
jo
fisubrs
arpl
aam
add
in
shrb
push
pop
popa
in
aas
out
pop
cltd
in
nop
int
xchg
in
mov
push
sbb
stos
xlat
push
ret
jbe
call
xlat
jl
and
fdivs
dec
dec
or
mov
push
adc
xchg
outsl
imul
rcrb
pop
jmp
loopne
outsl
hlt
test
xor
shlb
out
adc
movsl
or
lods
mov
inc
addr16
imul
mull
sbb
push
loopne
mov
sbb
adc
or
sub
imulb
in
out
lret
call
and
or
lods
arpl
loope
cmp
add
add
dec
xchg
stos
and
imul
adc
xchg
mov
sti
xchg
xchg
inc
in
add
or
iret
mov
adc
fisubrs
push
nop
cltd
out
sbb
jmp
or
or
in
push
sbb
in
jne
mov
jmp
out
movsb
mov
rcl
and
xchg
aas
mov
cld
inc
pop
pop
sbb
cmpsb
mov
loop
int
xchg
adc
stos
jp
scas
cmpsb
popa
scas
xor
push
je
lds
push
cmpsl
push
dec
mov
inc
out
adc
mov
dec
jmp
outsl
lahf
push
pop
or
pop
cmp
jecxz
xchg
adc
dec
aam
inc
pusha
jecxz
lods
out
sbb
xor
mov
cmp
inc
xchg
add
insb
repnz
dec
aad
cmp
dec
cmpsb
xchg
test
cld
cld
dec
add
lods
push
lods
and
jle
daa
dec
pusha
adc
lahf
jbe
add
in
in
xchg
push
hlt
lods
inc
aad
rolb
lods
movsb
sub
aas
jnp
ret
cmp
mov
mov
int
jecxz
imul
das
xchg
pusha
in
fs
and
jns
fdiv
rorl
insl
add
mov
in
add
ja
or
out
fidivrs
stos
adc
xchg
adc
fwait
xor
mov
inc
xchg
add
je
repnz
jecxz
loop
das
roll
xchg
push
stc
adc
or
into
mov
fnsave
bound
mov
idivl
sti
aad
cmpsb
cmp
push
cwtl
or
dec
or
scas
outsb
cld
sub
cmp
mov
mov
loope
mov
mov
cmc
jae
pop
loopne
cmc
sbb
xchg
sub
fistpll
aad
pop
mov
mov
cmc
cmp
xchg
nop
loopne
fwait
pop
lret
dec
dec
or
cltd
pop
insb
pop
push
dec
xchg
dec
loopne
or
cmp
push
mov
sti
sub
dec
jl
loopne
scas
fs
loop
fstps
daa
jmp
mov
aad
dec
inc
stc
or
push
fldt
dec
jmp
xchg
adc
loopne
cmp
movl
inc
sbb
xchg
leave
cwtl
out
jne
jg
rorb
sahf
and
cmc
xchg
fs
out
fbld
clc
push
jge
and
sbb
test
push
pop
and
adc
aam
xlat
push
leave
hlt
add
out
or
mov
fildll
loop
dec
call
sbb
or
aad
xchg
loop
sahf
rcll
add
and
mov
push
scas
push
cmp
in
fsubs
and
lahf
sahf
in
fisubl
xlat
jl
mov
inc
les
aad
pop
adc
aad
pop
sub
js,pt
or
pop
ds
or
mov
jno
push
test
adc
lods
or
xchg
enter
mov
mov
aam
aam
jecxz
cli
aad
xlat
jnp
inc
sti
push
jne
push
mov
mov
push
cmpb
cmpsl
xchg
jp
or
jmp
sub
adc
in
adcb
pop
adc
cmc
xchg
shll
ud2
aad
and
fcmovnu
js
sbb
mov
pop
out
jge
xlat
iret
call
xor
add
aaa
or
add
cmpsb
sbb
int
xchg
test
inc
pop
test
lret
fdivs
out
mov
push
or
cli
mov
arpl
sbb
inc
stos
imul
xor
vcvtss2si
cmp
data16
iret
jns
into
popf
cld
inc
lret
or
or
adc
sbb
in
into
sub
jmp
and
mov
inc
roll
sub
mov
test
cmpl
test
cli
pop
fisubrs
out
push
or
add
loope
push
or
dec
outsl
stos
sbb
add
dec
rorb
imull
jg
mov
adc
xor
sti
or
mov
jp
add
outsl
lahf
cmp
or
rcll
mov
loop
stos
push
dec
daa
and
fs
notb
decl
add
sub
sbb
push
xor
inc
pop
shll
xchg
mov
jae
test
iret
jae
or
imull
add
adc
iret
adc
gs
push
stos
sub
sub
pop
aad
shrl
push
test
bound
push
sub
xchg
mov
ret
psllq
cltd
aas
cltd
out
push
rol
cmc
mov
int3
add
shl
aad
stos
aas
adc
jl,pt
xor
and
repz
orl
or
and
jmp
jne
scas
xorb
pop
sti
sarb
or
mov
fisttps
or
cmp
lds
mov
push
mov
and
inc
shl
mov
adc
push
lret
aam
cmp
pop
mov
cmpsb
jecxz
mov
mov
loope
adc
sub
add
add
xor
ljmp
fdivrl
int
xor
lahf
pop
sbb
stos
fiaddl
call
mov
iret
imul
fstl
lock
xchg
xchg
iret
push
aad
rcll
imul
or
sbb
mov
push
pushf
cmpsb
or
dec
icebp
lret
gs
add
inc
pop
ficoml
dec
ljmp
nop
mov
dec
pop
repnz
push
dec
pop
xor
cmp
hlt
push
jno
std
mov
lods
push
cwtl
aad
inc
jne
insb
scas
repz
pop
cmc
fstp
sbb
js
les
push
pop
les
incl
mov
pop
mov
pop
cmpsl
inc
loop
mov
pop
clc
cmp
push
push
mov
mov
sub
loope
fsubrl
mov
cmp
insl
orl
loop
mov
dec
test
xchg
adc
leave
iret
jmp
pop
jns
or
cmc
cmp
popa
inc
inc
jo
cmpsb
push
inc
jmp
sti
xchg
mov
push
cld
xchg
loopne
mov
shlb
or
popf
or
loop
sti
fcomps
cltd
ret
fsub
inc
jns
mov
stc
jae
lret
into
loope
in
mov
xchg
pushf
xor
cmp
aam
mov
pop
fnop
mov
xchg
push
pop
lods
mov
sub
int
int
ffreep
jno
mov
in
xor
jo
xchg
inc
imul
popf
push
lahf
fwait
movsb
popa
jno
fcoms
sub
int
aad
xor
push
pop
fnstcw
mov
cmc
popf
push
mov
mov
mull
cmc
imul
jo
popf
cmpsb
aaa
icebp
fldt
cmp
xor
lcall
jmp
ret
mov
sub
bound
push
cltd
arpl
fndisi(8087
sub
loop
imul
mov
push
mov
test
xchg
loopne
xor
cmp
jae
inc
in
jge
fcmovnbe
aad
dec
cmp
add
cmp
aaa
push
in
xchg
sbb
rcl
cltd
sub
jmp
test
adc
call
cmp
dec
xor
notl
imul
dec
sarl
mov
fidivrs
test
and
int
mov
mov
icebp
sub
pop
aad
test
aam
jecxz
mov
push
push
testl
mov
sbb
jnp
mov
push
imul
movsl
add
dec
outsb
dec
xchg
shrl
nop
movsb
or
xor
mov
lcall
mov
aad
adc
add
cmp
xchg
xor
xchg
cmp
test
jno
dec
je
rorl
insb
lods
xchg
push
or
imul
aad
lret
xor
pop
out
jb
sbb
or
int
sbb
fidivl
mov
xor
mov
pop
lock
push
lret
sbb
lret
les
push
jl
popa
clc
adc
xlat
adc
pop
push
flds
hlt
les
subl
adc
push
cmc
lea
scas
sub
jmp
andb
addr16
fsubs
stos
mov
cmp
mov
call
push
data16
xor
cli
fdivrl
jmp
lahf
outsl
pop
lods
sub
dec
test
mov
stos
mov
imul
into
insl
fs
mov
xlat
lods
stc
pop
inc
xchg
popa
mov
outsb
push
icebp
inc
stos
fcmovb
jnp
lret
cmp
into
sahf
or
pop
adc
push
scas
xor
fsubs
shlb
notb
cld
les
cmc
push
push
pop
pop
xchg
aaa
mov
test
xlat
pusha
loope
dec
sub
es
or
cmc
sub
lret
pop
mov
inc
aad
jns
xchg
bound
test
in
cmp
in
dec
dec
push
cmc
mov
xor
das
mov
testb
outsb
into
mov
sub
push
inc
bound
push
and
jb
lods
dec
rcrl
rcrl
stos
sti
xchg
fiaddl
mov
pop
in
mov
push
clc
jecxz
add
jno
sub
dec
std
jge
cmc
xlat
aad
jl
adc
subl
adc
mov
dec
iret
ljmp
or
mov
push
dec
inc
imull
jl
mov
nop
ret
inc
ljmp
fcmovu
scas
call
xlat
pshufw
add
bound
sub
lea
call
scas
cmpsb
pop
addr16
push
out
aad
pop
lret
lods
filds
add
shrl
aas
int3
lret
inc
repnz
dec
push
cld
mov
pushf
rol
nop
sti
jp
stos
das
ljmp
stos
sti
or
out
out
add
sbb
ja
cwtl
scas
stos
loope
push
icebp
les
pop
mov
iret
xchg
push
jg
push
cmp
rorl
pop
jecxz
push
aad
or
add
cmp
xlat
inc
sbb
push
not
xchg
mov
testl
sub
test
push
fdivrs
xchg
sub
aas
xchg
insb
out
cmpsl
push
pop
pop
cltd
inc
mov
xor
cwtl
ss
lahf
div
addr16
dec
mov
lods
xchg
mov
testb
and
ret
ret
test
jl
pop
mov
xchg
adc
lret
cmp
dec
cmpsb
sarb
dec
mov
jmp
iret
outsb
sub
icebp
insl
test
push
scas
or
sub
stc
xor
adc
scas
jb
lds
and
mov
outsl
cmp
fidivrs
adc
mov
in
push
adc
pusha
aad
xor
sub
cmp
xchg
pop
xchg
rep
push
inc
or
sub
aad
mov
add
std
ret
mov
sbb
mov
iret
movsb
jae
les
and
xor
mov
dec
and
xor
xchg
mov
out
sub
cld
cli
cs
nop
sub
mov
xor
sbb
or
int
pop
and
fidivrs
sub
push
ret
jne
pop
int
cli
out
fmull
fisubrs
mov
sbb
mov
mov
push
push
mov
js
aad
je
mov
push
xor
sbb
aas
push
jp
push
in
fisttpl
xchg
pop
hlt
push
and
stos
sub
xor
cmp
lock
rolb
dec
ror
cmpsb
mov
add
scas
js
inc
mov
push
in
jg
cmp
mov
jmp
les
cmc
xchg
cmp
and
jno
dec
dec
sbb
sbb
sbb
push
xchg
push
inc
arpl
pop
mov
or
push
mov
push
fnstcw
xchg
lock
outsl
jg
mov
and
sbb
jns
lea
sub
sbb
sbb
in
adc
int
add
aas
cmc
mov
jg
fcompl
push
push
mov
sub
sbb
xchg
test
mov
fdivrs
loope
jnp
push
pop
cmp
dec
imul
loope
loopne
lods
mov
ds
jae
sti
cmp
adc
pop
test
mov
add
push
mov
js
and
jg
push
lret
scas
cmc
inc
sarl
andl
jge
jg
aam
cltd
xor
lea
jge
aad
stc
ss
sub
int
hlt
mov
iret
lret
aaa
mov
sbb
cmp
add
out
scas
lock
xchg
les
mov
out
jle
cmp
fnstcw
jl
xor
loop
scas
dec
or
nop
sbb
xor
adc
repz
cmp
sub
imul
xor
in
mov
pop
sti
sbb
into
jbe
adc
mov
sub
aam
lods
add
int
iret
sti
xchg
lcall
mov
add
and
div
sub
subb
in
out
jae
rorl
daa
fsubp
pop
push
fistps
out
or
sbb
test
fcmove
iret
jmp
mov
subb
out
xor
push
out
cltd
test
xchg
cmp
jno
repnz
sub
xchg
pop
cmpsl
rclb
out
dec
xchg
movb
add
sub
push
pop
fistl
sti
mov
mov
std
nop
test
add
sti
shlb
add
or
cmpsb
jns
and
sub
xchg
fstps
jle
in
fcoml
aad
mov
popa
frstor
add
cmp
sub
mov
mov
sbb
into
jecxz
sarb
adc
rorb
imul
dec
jae
dec
int
xchg
js
loop
jg
push
pavgw
sub
or
sbb
test
push
pop
or
pop
mov
dec
push
movsl
add
nop
xor
sbb
adc
loope
sti
pop
sbb
push
pop
adc
jle
dec
call
aad
cmp
jb
jge
and
scas
leave
or
cmp
jns
mov
mov
rcrl
adc
fbstp
jns
push
push
inc
in
in
add
mov
ljmp
sub
dec
cmp
sbb
sub
dec
cmpsb
psrlq
xrelease
push
lahf
decl
out
cwtl
dec
push
aad
mov
iret
push
jno
movsl
mov
out
insl
push
sub
jmp
adc
daa
int
jae
std
push
out
mov
ja
rorl
std
add
repz
mov
pop
shrd
dec
out
add
dec
push
pop
pop
push
repz
push
cmc
jb
xchg
cmp
scas
jmp
std
lods
cmc
loop
mov
data16
fucomi
aad
xor
xor
imul
call
xchg
lcall
test
adc
pop
hlt
pop
xchg
test
sub
fiaddl
adc
xchg
sti
fiadds
loope
inc
pop
decl
mov
andb
add
repnz
sbb
mov
dec
push
fcom
shll
nop
or
adc
xchg
icebp
movsb
adc
pusha
mov
mov
cs
dec
lret
or
cwtl
pop
xlat
lods
xchg
pop
shl
jmp
sbb
pop
pushf
mov
push
sub
lods
loopne
mov
incb
mov
push
pop
shll
out
xchg
mov
cmp
and
pop
jmp
insl
xor
pop
jge
add
sti
movsl
and
add
adc
push
je
notl
cmc
in
inc
mov
or
bound
lea
jne
inc
fldt
pop
push
sbb
cmp
js
inc
jb
add
stc
sti
jns
sub
xchg
int3
dec
arpl
not
mov
imul
aam
sbb
dec
or
xchg
xchg
fwait
ljmp
cli
mov
push
inc
adcl
leave
aaa
inc
dec
icebp
out
mov
push
lds
fisttpll
nop
jbe
lods
sti
test
add
sub
cli
stc
es
or
aad
cmp
shll
in
lods
shrl
add
mov
or
add
xchg
scas
ficomps
jne
pop
loope
or
xchg
fsubs
sar
push
rcl
rol
adc
imul
pop
in
lods
sub
mov
push
js
mov
out
cmpsb
pusha
test
imul
sub
mov
push
dec
data16
popf
sub
pslld
fs
mov
sub
gs
dec
dec
rcll
jg
int
adc
fstps
sub
xor
loopne
stc
clc
aas
loope
mov
ss
insb
rcll
scas
imul
push
iret
and
mov
inc
xchg
xchg
dec
push
shrl
scas
pop
insb
xchg
in
dec
cmc
ret
je
sub
dec
dec
pop
inc
shr
scas
xchg
mov
pop
lea
sbb
enter
cs
aaa
mov
or
mov
push
jge
cmp
aam
popf
jl
int
sbb
adc
pop
adc
stos
mov
pop
push
xor
leave
mov
loope
sub
adc
fildl
xchg
js
adc
cmpsb
xchg
jmp
cmp
fisubrl
and
pop
push
jmp
sbb
inc
fcmovu
mov
push
ljmp
test
loope
out
in
xchg
mov
aas
sar
out
rcll
xchg
pop
sbb
imul
xchg
dec
cmp
push
imul
scas
dec
cmp
aaa
repz
pop
cltd
push
iret
out
nop
arpl
push
add
mov
cld
aaa
shl
inc
push
or
sub
cli
cmp
jae
dec
test
adc
and
xchg
test
scas
add
rolb
push
xor
jbe
dec
in
in
adc
sbbb
cmc
sahf
in
or
out
inc
mov
lret
testl
bound
adcl
or
mov
adc
xor
negl
out
dec
and
mov
into
pop
mov
push
pushf
stc
cmpb
popa
aad
vpunpckhqdq
sub
push
mov
jle
dec
iret
aad
int3
fistpl
cmp
jle
mov
call
mov
shll
push
jle
cmp
sub
aad
inc
repnz
add
nop
xchg
push
js
jbe
dec
or
shrl
xchg
mov
jnp
fsubrs
cmp
fwait
jp
clc
jg
js
sbb
dec
rolb
mov
mov
jmp
fistpl
pop
int
out
fwait
sbb
mov
xchg
mov
shlb
clc
pop
outsb
aas
jge
mov
mov
push
in
jge
add
leave
fwait
pop
inc
push
jl
dec
aad
mov
push
pop
cmp
aas
xor
push
es
fistpl
mov
and
cmp
filds
sub
mov
inc
incl
dec
daa
fcoml
lea
std
pop
int
inc
iret
adc
sub
cli
mov
cmc
int3
xchg
iret
or
inc
testb
mov
pop
in
and
jmp
stc
loope
cmp
sbb
mov
add
imul
imul
loop
push
outsl
jmp
aas
ret
div
xor
adc
and
pop
pushf
sub
xor
cmc
in
push
sub
cmpsb
adc
repnz
ja
mov
jbe
pusha
lahf
and
jnp
call
popa
rcrb
ret
loopne
cmp
xlat
mov
aad
mov
push
jbe
dec
out
and
push
pop
lcall
pop
outsl
push
sahf
adc
stos
cmpsb
popf
scas
repz
dec
scas
out
cmc
fdivl
sub
cwtl
inc
cld
inc
cltd
aam
inc
xor
test
adc
mov
adc
outsb
aad
xor
subl
imul
dec
das
daa
mov
lock
aam
loope
mov
test
jle
repnz
cmc
jmp
dec
mov
enter
push
in
loope
or
sub
jnp
dec
inc
aas
fsqrt
lret
jns
add
xchg
pop
and
popa
add
lret
test
cmpsl
mov
mov
dec
mov
xchg
mov
rcrl
repnz
pusha
iret
xchg
cmc
out
and
xchg
loopne
push
loop
decl
jmp
dec
mov
sub
mov
adc
xchg
mov
push
or
fmul
ljmp
pop
scas
aad
and
xchg
push
lcall
repnz
mov
xchg
inc
lock
lahf
test
or
lds
mov
push
jle
xor
mov
sbb
test
push
stc
cmp
mov
cmpsl
faddl
cli
outsb
fidivs
repnz
cwtl
je
pop
out
mov
push
repnz
jp
inc
int
lret
mov
and
or
jmp
aad
sahf
fcomi
dec
xchg
jmp
fwait
jle
sbb
adc
std
add
mov
mov
xchg
dec
shlb
fcomps
jge
scas
xchg
inc
insb
add
pusha
lods
cmp
stc
jmp
movb
in
lock
jns
or
loop
dec
out
mov
inc
push
cwtl
lret
lock
mov
jnp
arpl
inc
push
stos
lret
sbb
ret
inc
add
xor
flds
cli
loope
ds
push
add
cmc
add
push
rcll
sub
cmp
leave
imul
lahf
push
sbb
add
aad
movsl
mov
das
sbb
cmpsb
cmp
es
js
push
popa
pushf
mov
js
mov
aam
mov
add
or
mov
mov
insl
mov
shr
out
stos
cltd
int
fstl
mov
das
push
lods
shr
iret
jge
pop
paddusb
popf
sbb
add
push
pop
xor
xchg
rorb
shlb
and
mov
imul
dec
insb
mov
cmp
jmp
outsl
dec
insb
cmpsb
xchg
rcll
mov
push
mov
aas
sbb
in
pop
pop
in
mov
mov
jge
gs
mov
push
or
adc
repz
mov
loope
xchg
add
push
pusha
aad
jl
adc
scas
xchg
inc
or
repz
cld
inc
fstps
pop
idivb
jp
adc
rclb
inc
out
pop
xchg
mov
cmc
rcrl
fimull
pop
xchg
scas
int3
dec
std
pop
cli
ljmp
lcall
loope
mov
dec
out
xchg
cmp
inc
xchg
testb
lods
fidivrs
call
data16
adcl
test
stos
mov
mov
in
scas
push
cmp
jo
push
aad
arpl
pop
jge
lcall
dec
pop
sbb
lock
pop
or
testl
inc
fisubl
cmp
test
int3
call
imul
xor
jns
and
fistpll
out
mov
add
cmp
pop
gs
sahf
jae
mov
mov
outsl
pusha
push
mov
enter
mov
scas
xchg
sub
xlat
test
sub
clc
addr16
jno
scas
dec
or
jnp
cmp
xchg
in
iret
lcall
xor
xchg
shll
mov
push
mov
pop
pop
jbe
out
mov
jnp
push
stos
pop
sub
shll
loop
cmc
out
mov
mov
addr16
xchg
mov
rcl
push
ror
jl
outsl
pop
sbb
jle
jbe
out
push
rol
std
int
out
jp
ja
in
nop
mov
and
stc
jne
sub
popa
enter
aam
jl
jae
add
fnstcw
jp
lret
mov
sbb
ljmp
lcall
sti
stc
xchg
mov
shll
cs
shrl
add
sbb
stos
imul
call
sub
sbb
cmp
xlat
gs
and
std
mov
out
and
daa
or
loopne
sub
mov
fisubs
push
loope
dec
rcrb
mov
and
out
aad
dec
outsl
lods
js
jle
popf
mov
outsb
in
pop
jb
imull
jl
scas
cwtl
insl
std
ljmp
ror
or
mov
cmpsl
dec
jmp
xchg
lods
pop
cmp
dec
mov
xchg
jns
xchg
jb
ret
push
jbe
fsub
fdivrp
cmpsb
push
cli
out
pop
or
pop
jnp
cs
xchg
iret
jae
inc
push
cmp
pop
js
shl
xor
incb
stos
aad
popa
push
pop
sar
jb
pop
lods
and
aad
push
ja
cmp
mov
fidivl
push
xor
sub
add
popa
movb
inc
jg
mov
loopne
aad
or
inc
js
pop
aad
lods
nop
cmp
lds
cld
rol
jns
lahf
mov
push
add
cmp
ret
test
mov
mov
jne
hlt
lret
cmp
xchg
mov
push
mov
hlt
js
sub
hlt
fwait
push
xor
psrad
mov
xchg
orb
je
mov
jne
nop
cmc
rolb
not
pushf
jge
addr16
aaa
dec
or
xchg
subl
mov
lods
dec
out
push
mov
repz
xchg
hlt
inc
mov
out
shll
ljmp
inc
cld
mov
sti
or
mov
icebp
mov
xor
stc
stos
cwtl
mov
imul
add
cmp
rolb
call
movsb
ret
dec
push
jl
pop
out
imul
pusha
sti
ret
rclb
adc
rclb
movsb
ds
sub
inc
add
call
das
push
ror
scas
mov
mov
push
stc
out
inc
add
aad
jge
xchg
lds
iret
insl
mov
xor
loopne
adc
pushf
dec
jmp
add
in
in
sub
jmp
sbb
push
mov
jl
clc
movsb
jg
inc
xlat
push
shlb
mov
cmp
cmpsl
add
leave
lods
push
popa
jmp
ja
dec
clc
cld
xchg
pop
add
popa
mov
cmp
jmp
mov
aad
clc
xor
in
cmpsl
inc
sti
jnp
cmovbe
fcoml
jl
ljmp
cmp
mov
push
les
lcall
fcmovu
fs
mov
adc
pop
inc
sub
ret
pop
add
mov
and
sub
shrb
sti
mov
sbb
lods
add
push
xor
xchg
push
fcompl
movb
movsb
adc
pop
aad
int
sub
sub
pop
pop
std
dec
cmpsl
movq
inc
lods
cwtl
sub
sbb
mov
mov
dec
pop
imul
sti
les
inc
mov
cmc
mov
ja
xor
mov
inc
popa
add
shrb
pop
pop
pop
jno
cmc
dec
or
in
lods
cmp
lds
push
lcall
xor
jno
ret
je
movsb
jge
inc
orb
cltd
push
out
mov
dec
push
inc
fisubrl
test
cmc
mov
push
or
in
sub
in
mov
xchg
sub
dec
out
pop
es
push
or
mov
pop
xchg
stos
push
test
decb
test
jl
imull
paddd
adc
int
mov
mov
jnp
jge
in
mov
xchg
push
testl
out
cld
push
pusha
bnd
roll
sbb
xor
int3
inc
outsl
cli
push
movsl
fwait
mov
xchg
leave
sub
adc
ljmp
add
sbb
xchg
into
outsl
jl
nop
push
dec
ds
sub
mov
inc
pop
adc
call
push
out
fisubs
and
dec
repz
lcall
outsb
xchg
sbb
iret
xchg
aad
out
shlb
out
cmp
aad
dec
lods
hlt
rorl
scas
adc
cmc
cmpsl
add
divl
pop
pop
cmc
aad
lds
push
pop
dec
mov
cmp
mov
sbb
and
xchg
dec
gs
mov
push
and
pop
call
iret
pusha
xchg
daa
lods
cmp
lcall
hlt
xchg
stos
mov
sub
aad
push
call
jecxz
xchg
jae
stc
int
mov
or
clc
dec
mov
sbb
jecxz
insl
or
subl
lea
pop
test
cmp
fadd
jl
into
pop
or
add
jno
pop
jbe
out
loope
sub
and
cli
jmp
nop
mov
shll
xchg
dec
lods
sub
xor
sbb
dec
cmp
or
and
jle
lcall
lods
scas
jo
mov
call
push
add
daa
std
add
iret
shrb
test
int
cltd
cmp
mov
mov
ja
jae
cltd
dec
int3
pushf
adc
push
or
xchg
out
ja
inc
in
adc
dec
popa
sbbl
lods
cltd
xlat
xchg
mov
std
cmp
jnp
pushf
jns
add
or
test
test
pop
jnp
shlb
jnp
and
pop
lock
leave
rclb
mov
mov
lods
or
std
mov
loopne
lahf
movsb
xchg
jno
dec
loope
xchg
jmp
adc
rorb
dec
mull
insl
cli
jg
dec
xor
adc
pop
xchg
cmp
ss
push
mov
mov
int
xchg
cmp
jbe
or
in
or
pop
out
sbb
sub
mov
push
aad
add
in
mov
mov
add
add
sbb
sbb
in
dec
add
inc
js
adc
rcl
xor
in
mov
adc
rclb
jbe
cwtl
sbb
in
push
mov
lret
sbb
arpl
mov
fistpll
mov
adc
push
or
xchg
lret
insb
adc
imul
fildll
mov
shr
dec
inc
mov
xlat
rcll
pushf
out
jp
imul
xor
push
cwtl
leave
movsb
sbb
popf
cmpsl
mov
xor
mov
stc
pop
sub
ds
push
aad
arpl
out
iret
push
ljmp
neg
jg
frstor
xchg
lea
mov
cmpb
push
cmpsl
mov
adc
pop
mov
lahf
push
cmp
gs
mov
jne
lock
lods
push
jl
inc
imul
pop
push
adc
pop
lret
mov
scas
rcl
loopne
clc
add
insl
mov
repnz
inc
imul
lahf
and
ljmp
and
jnp
fs
mov
adc
int3
addr16
jbe
mov
idivl
mov
aad
inc
pop
mov
andl
pop
movb
fcoms
mov
fsubs
fucom
ret
fimull
jb
adc
mov
xchg
push
lods
js
inc
scas
dec
loopne
outsl
pusha
test
cwtl
fldcw
inc
loopne
lods
clc
flds
add
push
jns
stos
or
sarl
ljmp
or
dec
cmp
nop
add
stos
icebp
iret
ljmp
add
insb
cmp
cmc
mov
xchg
jns
loopne
out
or
in
arpl
mov
push
hlt
sub
xchg
mov
sub
iret
les
imul
sbb
adc
jbe
dec
dec
mov
inc
shrl
cmp
push
push
negb
imul
and
push
xchg
xchg
sti
cmc
out
pusha
or
shrb
and
xchg
std
mov
jnp
out
pop
out
sbb
and
call
sbb
js
scas
popa
or
les
clc
mov
push
mov
and
out
sub
or
xchg
xchg
mov
push
aaa
repnz
in
mov
int
rcrb
push
mov
into
mov
or
pop
inc
dec
ljmp
cmp
jl
cmc
dec
mov
and
mov
or
xchg
and
pcmpgtw
cmc
jbe
pushf
lret
mov
js
adc
xchg
je
and
data16
cmp
fimull
dec
scas
mov
imul
jmp
mov
push
daa
std
sti
cmp
mov
or
wrmsr
aad
in
pusha
or
pusha
push
mov
cmc
xchg
xor
stos
mov
xchg
inc
outsb
repz
cmc
popf
iret
jne
aad
adcb
mov
sub
je
out
add
xchg
pop
arpl
nop
sub
mov
or
mov
mov
xchg
cwtl
imul
idivb
fldt
push
adc
mov
les
or
insb
loop
jae
inc
push
scas
add
sbb
or
add
mov
jne
jp
xchg
dec
jno
arpl
cltd
les
cmpsl
push
bound
std
mov
sub
into
das
in
adc
cmp
sbb
xchg
and
jle
inc
in
fs
and
fadd
jp
outsl
jp
into
clc
mov
sub
xchg
add
lahf
movsb
clc
jno
or
jns
cmp
scas
jmp
add
imul
push
out
cwtl
movsl
js
push
nop
mov
popa
pop
push
sbb
cmc
adc
cmp
in
les
pop
cmp
iret
pop
ficoms
call
out
push
push
dec
repz
and
pop
movsl
xchg
addl
lods
add
mov
daa
repnz
jno
daa
inc
mov
nop
stos
pop
mov
jg
sub
das
adc
mov
test
imul
shlb
adc
andb
mov
mov
jnp
xchg
stos
lods
les
aad
dec
sarb
push
lods
in
outsl
iret
xlat
icebp
xchg
cmc
jle
inc
fisubs
mov
push
and
shrl
mov
das
mov
mov
loope
movsb
pop
jge
aam
push
jle
in
xchg
lret
lods
add
push
movl
out
in
push
cmp
sub
push
jnp
cmpsl
iret
cmc
leave
pop
adc
cli
inc
xchg
dec
add
mov
repz
sub
xchg
dec
mov
push
hlt
cmp
popa
lods
mov
or
pop
jmp
xchg
pop
fcoml
loopne
es
stos
mov
sahf
mov
loop
lret
sub
inc
push
jb
test
lods
lcall
out
push
mov
cmpl
xchg
jno
divb
mov
out
aam
and
mov
outsl
xor
popa
in
in
jno
sub
add
cwtl
das
lock
or
xchg
icebp
dec
scas
pop
in
mov
je
jb
or
fucom
stos
mov
jl
insl
mov
push
lea
add
adc
lret
xchg
fildll
repnz
push
sub
aad
les
sub
lret
out
cld
rclb
mov
mov
out
mov
xchg
lahf
mov
fisttps
aad
push
sub
bound
push
cld
add
mov
push
xchg
push
lcall
sbb
cmp
cmp
inc
ljmp
mov
rcrb
je
dec
out
aas
push
stos
mov
out
adc
into
mov
mov
or
dec
out
out
adc
test
pop
cmpsb
adc
iret
add
inc
pop
and
dec
mov
adc
mov
push
popa
pop
cmp
push
jne
jecxz
in
mov
push
fnstsw
aad
mov
stos
push
sub
or
mov
mov
jnp
test
mov
cli
icebp
mov
xchg
and
jecxz
lock
lahf
lods
rcll
add
inc
cmp
out
or
push
sbb
icebp
mov
fs
adc
mov
add
push
test
xor
daa
pop
and
jbe
fsts
lea
push
popa
mov
jae
pavgw
cmc
or
jg
notl
mov
jnp
mov
and
xchg
outsl
lret
xor
loop
push
jmp
cmp
cmp
mov
xor
js
adc
mov
int
xchg
ds
jmp
xchg
sbb
dec
inc
mov
or
or
push
xchg
in
clc
mov
mov
or
lret
jo
adcb
lea
into
out
sbb
dec
adc
dec
xchg
lcall
daa
mov
lahf
pop
aam
pop
daa
psrad
les
adc
push
cmc
ret
or
in
dec
aad
xor
mov
xor
fisttpll
add
ret
arpl
jo
mov
lret
adc
imul
movsl
mov
cmc
int
hlt
add
sub
insl
xchg
rorl
push
fsubp
xor
dec
in
mov
lods
shll
push
stc
mov
aas
mov
push
dec
popf
jmp
jnp
xchg
sbb
cmpsl
sbb
lcall
mov
andl
lcall
xchg
dec
repnz
nop
mov
or
loope
add
out
mov
shrb
gs
cmc
jns
pusha
push
push
pop
lahf
out
xchg
push
ja
mov
cmpb
pop
inc
sub
push
es
rcrb
dec
das
inc
imul
je
or
in
push
or
xor
inc
xchg
push
sbb
movhps
jmp
ror
aas
pop
les
mov
es
and
jmp
test
cmc
or
movsb
iret
popa
add
jbe
push
inc
and
push
push
aaa
fsubr
addr16
jno
stos
or
fldenv
imul
push
leave
dec
jae
mov
adc
fs
or
notl
mov
sub
xlat
int
into
rcll
push
nop
popf
sti
orb
push
addb
sbb
call
idivb
mov
push
inc
loopne
lcall
andl
sbb
push
xchg
and
jecxz
loope
fwait
icebp
cmp
pop
lahf
shrb
std
outsb
xor
xchg
cli
pop
inc
jnp
jecxz
not
mov
xchg
ret
and
push
hlt
inc
out
xorb
jnp
xchg
fcoml
lea
lcall
push
jnp
mov
mov
push
int
inc
cmp
push
mov
mov
mov
loope
aad
and
pop
xchg
gs
pop
inc
into
cmc
adcb
push
xlat
leave
pop
std
sbb
insl
popf
jl
xchg
sbb
loope
aaa
mov
cwtl
push
stos
add
sbb
into
out
jg
push
push
fdivrl
pop
xchg
jge
loope
mov
scas
jp
out
push
loopne
insb
jmp
pushf
lods
cmp
jg
adc
out
jnp
push
sar
push
jecxz
fs
std
pushf
loopne
jg
stos
jge
push
hlt
jns
in
sub
movsl
inc
push
mov
jb
and
and
rolb
cmc
mov
sub
std
xchg
lcall
mov
enter
js
push
add
addr16
cmc
in
insl
cli
lods
adc
shlb
fildll
scas
insb
sbb
lahf
out
xlat
inc
into
in
pop
and
xchg
and
test
cmpsb
repz
jo
rorb
sbb
loop
aad
jge
loope
scas
fucom
repnz
clc
out
stos
push
mov
mov
mov
adc
repz
stos
or
or
sarl
popl
mov
mov
outsl
push
pop
adc
push
mov
loop
jp
sbb
lds
fdivr
push
rclb
push
jae
dec
mov
mov
lods
mov
rolb
push
mov
add
add
xchg
jp
scas
pop
inc
decl
out
xchg
out
push
jg
cmp
sub
mov
or
shrl
mov
xchg
cmc
jno
cli
xchg
rorl
int
jp
or
add
dec
cmp
out
pushl
es
icebp
cmc
mov
adc
insb
hlt
lods
cld
cmp
daa
stos
cmp
dec
incl
add
or
and
pop
cmp
mov
sbb
mov
xchg
cmp
cli
pop
imul
ljmp
mov
out
cmpsl
stos
inc
inc
cmp
lcall
lods
sub
xchg
stc
xchg
adc
mov
imul
es
out
loope
jg
pop
bound
lock
jns
cld
or
mov
pusha
cmpl
dec
push
into
insl
inc
or
mov
aaa
fisubrl
sub
mov
xor
xchg
sarl
movsl
bound
xchg
loopne
adc
xchg
dec
pop
jge
push
jne
and
and
cmpsb
push
fdivrs
psubsw
push
inc
into
push
xchg
icebp
mov
add
or
ret
in
fwait
jnp
fwait
add
es
mov
jg
mov
cmpsl
out
push
adc
fildl
aaa
test
mov
pusha
fsubrs
testl
stos
pop
movsb
push
and
cli
cwtl
je
dec
pop
das
shl
jge
push
fwait
js
mov
in
lea
sub
push
jecxz
jl
mov
les
inc
test
inc
bound
pushf
dec
testl
pmaddwd
pop
add
cmpsb
ret
push
sbb
adc
repnz
popa
xchg
cmp
imul
push
out
sbb
in
cmp
fcoml
jnp
stc
ja
mov
std
xlat
xchg
scas
les
das
mov
pop
cs
lcall
testb
cmpsl
inc
andb
jmp
sub
push
arpl
pop
mov
pop
mov
pop
mov
mov
das
and
sti
outsb
mov
and
aaa
mov
dec
jns
dec
jg
outsl
xlat
push
pop
movsb
not
push
enter
add
push
xor
movsb
sbb
jl
jbe
sbb
in
mov
mov
mov
testl
cli
shlb
dec
sub
lcall
cmc
xchg
fistl
pushf
pop
shr
adc
shrd
lcall
or
mov
aad
mov
js
aad
lret
nop
cmpsl
xor
fs
adc
mov
xchg
adc
out
loop
pushf
pop
lret
enter
inc
les
or
sub
enter
sbb
xor
push
clc
imul
int3
dec
pusha
sti
fwait
paddsw
test
sbb
fisttpll
popa
dec
jle
pop
push
stos
dec
or
fwait
addr16
sti
dec
xchg
xor
pop
int
andl
adc
adc
add
inc
jg
gs
aas
xor
ljmp
lcall
xchg
mov
cmp
mov
rol
xor
push
aas
mov
and
imul
jnp
fs
cmc
ljmp
aad
lds
roll
cli
popf
or
ljmp
pop
jns
mov
lock
push
sti
call
pusha
ds
mov
xor
xor
cmp
adc
mov
arpl
ret
lods
and
xchg
jp
add
das
imul
arpl
in
inc
cmp
cmpb
lahf
xchg
in
filds
cmp
jl
nop
subl
pop
fisubrl
aam
stc
das
outsl
popf
test
div
sbb
int
aad
lcall
test
jg
ret
fbstp
outsb
pop
pusha
mov
and
ror
int
mov
mov
cmc
je
dec
xchg
test
jmp
jge
adc
fidivs
push
divb
popa
cmp
cli
loopne
push
jmp
cmc
cwtl
test
enter
int
rcrl
dec
es
pop
and
fiaddl
sub
outsl
xlat
sahf
push
iret
xchg
cmp
xor
xlat
jle
outsl
cmc
leave
lods
or
add
scas
pop
cs
pop
fnsave
xchg
xchg
in
subl
repz
ss
nop
lcall
push
popa
inc
push
xchg
adc
lea
inc
mov
push
test
cli
sahf
std
jge
in
testb
dec
jle
aaa
rorl
add
sti
mov
scas
sub
cmp
pop
lods
mov
pop
xchg
stos
push
lea
test
dec
pop
push
rorb
xor
dec
mov
addl
outsl
rcll
scas
cmp
jp
inc
shl
in
hlt
iret
lods
and
inc
dec
test
js
push
sub
dec
int
aad
sbb
xlat
imul
wbinvd
stc
insl
adc
aad
dec
mov
push
xor
dec
insl
mov
mov
jmp
sub
inc
mov
adc
pop
xchg
les
add
pop
sub
out
mov
testl
jecxz
push
pushf
jne
arpl
je
xchg
or
popf
adc
aad
hlt
push
popa
lret
cmp
or
cs
int3
xchg
xchg
sbb
inc
dec
push
lods
jle
mov
movb
sarl
and
jnp
scas
andb
aam
test
inc
cli
cs
mov
inc
add
out
jg
push
or
jmp
aas
add
cmp
arpl
imul
lcall
out
adc
stos
mov
mov
dec
adc
stc
testb
shrl
scas
ret
xchg
pushf
mov
sbb
shlb
xchg
fwait
insb
inc
idivl
mov
call
mov
movsl
xor
or
mov
loop
cmc
push
bound
mov
push
stos
dec
out
mov
and
movsl
sbb
cmc
inc
cmp
xor
jge
mov
push
add
mov
inc
ds
lds
inc
mov
and
mov
inc
jnp
mov
out
sti
popf
aad
std
outsl
or
leave
cmp
mov
cltd
sub
aad
xchg
push
jbe
cmp
inc
cmp
leave
inc
push
xor
jmp
jmp
xchg
out
cmpsl
cmp
or
ret
lods
adc
or
mov
sub
or
sbb
xor
xchg
ror
cmp
cmc
cmp
fucom
add
call
push
or
lret
bound
sub
into
cmc
xor
push
data16
push
push
mov
subb
and
mov
loope
sti
cmp
nop
cmp
or
cmp
sub
mov
push
fistps
jg
js
adc
dec
inc
loope
and
cs
fs
jnp
jns
rorb
push
jle
xchg
adc
sahf
lret
jbe
push
jo
mov
fisttps
jg
stos
jnp
sbb
std
dec
in
pop
mov
adc
hlt
and
dec
jno
mov
mov
jp
outsb
pushf
pop
jne
lcall
and
cwtl
sbb
lods
add
pusha
push
pop
sbb
seto
push
rorl
jl
in
cli
sub
sbb
jo
xchg
jo
icebp
push
pop
sbb
stos
jne
adc
jmp
sub
cmp
mov
add
xchg
data16
xor
dec
jecxz
mov
dec
mov
addr16
movsl
das
mov
lea
repnz
pop
mov
and
sahf
pusha
dec
ret
adc
int
xchg
movsb
dec
ds
dec
jo
mov
dec
not
int
mov
iret
or
mov
xchg
and
rorb
jge
aas
pop
xlat
das
mov
inc
lods
pop
lods
mov
push
cmp
inc
xchg
inc
movsb
aam
iret
cmc
pop
sbb
adc
call
shlb
negl
cmc
nop
and
mov
icebp
jo
jb
mov
sub
cli
inc
movb
aad
pop
maxps
cmp
lods
call
push
mov
sub
cwtl
cmp
nop
vpsignw
int3
fstps
add
inc
lea
lods
or
jmp
or
ds
push
sub
rolb
cmc
jle
push
mov
fistps
or
sub
jne
scas
cli
fndisi(8087
adc
xor
or
aam
mov
inc
cmp
insl
xlat
aad
push
or
jbe
add
jl
mov
jbe
push
callw
push
movsl
add
cmp
mov
test
fwait
mov
or
cmp
xchg
add
ljmp
insl
sbb
call
xchg
and
jge
lret
rorb
xor
repnz
and
or
sub
mull
mov
clc
add
outsl
inc
xchg
pop
and
cmp
dec
xchg
aaa
xchg
mov
loop
and
mov
fdivrl
shll
mov
sbb
in
cld
cmp
pop
fiadds
add
mov
rcrb
stc
push
ds
lods
clc
or
fnstenv
data16
jnp
xor
fistps
mov
mov
popa
xor
cs
mov
inc
mov
leave
xchg
in
xor
imul
fs
or
loopne
jmp
pop
xor
mov
pop
sbb
add
shlb
enter
add
stos
ficompl
std
ja
fcmovbe
cld
cmp
dec
fs
and
jo
cmp
fisubs
and
int3
aad
roll
mov
addr16
sbb
or
add
pop
xlat
mov
cmp
fildl
notb
or
je
addr16
adcl
jecxz
push
jl
jg
xchg
pop
repnz
out
dec
dec
push
ja
jno
icebp
les
in
adc
ret
and
dec
or
pusha
push
mov
or
or
fstpt
decl
sahf
aad
shl
jne
pop
mov
cmp
pop
lods
sub
sbb
fstl
cmpsb
negb
xchg
ret
out
mov
dec
push
aad
cmp
ljmp
rcl
int
sub
shll
sti
out
les
xchg
std
frstor
jl
mov
lods
rsm
mov
and
lcall
addl
out
iret
mov
dec
nop
sbb
lock
ficompl
movsl
lcall
mov
cmp
dec
jge
add
add
clc
mov
cltd
dec
adc
ret
imul
jl
ficompl
in
jmp
sar
mov
xchg
hlt
or
mov
test
jmp
jge
mov
imul
push
sub
fistpll
or
push
dec
and
xor
sub
push
sub
xchg
out
movsl
push
push
shl
mov
insb
mov
add
notb
mov
and
pop
cmp
or
mov
ror
notl
loopne
bound
cli
cwtl
cld
xchg
or
jnp
jno
pop
fwait
dec
dec
in
push
negb
mov
les
shll
adcb
mov
xchg
fwait
push
push
test
xchg
xchg
push
nop
lods
push
or
add
into
mov
out
movsb
or
jnp
jp
ja
xor
adc
push
jl
mov
int3
std
push
cmp
in
out
call
lods
lock
fisttpl
rcrb
and
mov
adc
test
mov
jae
add
cmp
or
inc
jnp
in
int
mov
rcl
ljmp
out
mov
mov
icebp
sub
xchg
xor
dec
dec
or
sahf
sub
xlat
mov
cmpsl
fcomp
leave
inc
jge
pop
add
inc
mov
xor
pop
loope
xchg
mov
sbb
or
sub
adc
inc
mov
in
sub
xchg
sub
faddl
or
cmp
in
out
cmc
out
add
stc
fst
out
jnp
mov
es
adc
cmp
loope
lock
add
sahf
or
test
out
aad
mov
imul
inc
fcoms
add
fildl
adc
mov
out
int
jl
cld
adc
and
pop
out
cmp
je
call
pop
xor
adc
sub
cli
xor
fcmove
notl
std
dec
and
rclb
ja
fisubl
sub
jmp
xchg
pop
xor
inc
mov
xor
out
sbb
nop
pop
cmpsb
lods
xor
sbb
bound
mov
mov
cs
inc
mov
jg
push
push
jg
xchg
nop
les
add
movsl
rcr
mov
es
adc
call
push
xchg
fisttps
mov
mov
popa
sarb
jne
imul
decl
loop
pcmpeqd
push
mov
cmp
xor
adc
repnz
xor
xor
mov
push
jne
mov
dec
or
xchg
xor
xchg
stos
mov
xchg
in
xchg
ja
shr
add
lret
inc
in
sub
insb
popa
icebp
and
mov
shr
dec
pcmpgtw
or
dec
test
aad
jo
pop
push
and
mov
push
pop
int
inc
dec
cmc
add
xchg
add
or
lock
les
int
add
rclb
imul
imul
push
add
mov
add
aaa
sahf
push
mov
mov
jmp
mov
cmp
lods
add
xchg
mov
repnz
jp
push
inc
mov
and
out
addr16
adc
push
hlt
adc
stos
adc
jge
push
and
sub
loope
fnstsw
je
shl
jecxz
mov
cmc
nop
pop
test
push
out
movsl
fsubrl
xchg
stc
dec
cs
fstl
xchg
push
ds
js
jns
mov
in
add
cmc
sbb
in
mov
sbb
xchg
xchg
adc
xor
jno
sub
or
dec
shl
les
stos
cmp
pop
lock
shr
adc
jae
xlat
add
lret
test
pop
outsb
inc
divl
stos
movsb
ret
push
push
inc
or
inc
push
mov
or
cmp
add
icebp
cmpsl
mov
stos
das
mov
idivl
mov
insb
xorl
pop
sbb
iret
dec
lcall
push
xchg
insl
imul
pop
pop
mov
loope
lcall
lods
inc
adc
out
inc
mov
jns
adc
ret
dec
dec
add
cli
adc
dec
jae
cwtl
fsubrp
dec
sbb
faddl
mov
pop
mov
loopne
and
in
js
jp
and
push
pmaddwd
lret
adc
cmp
cltd
inc
jl
addr16
or
lods
in
stos
fnstenv
arpl
stc
mov
in
cli
sub
jge
adc
push
add
lcall
dec
xchg
in
push
sti
jl
enter
out
fsts
stos
mov
xchg
into
mov
fstpt
mov
dec
int
mov
mov
daa
push
movsl
sub
je
cmpsl
ror
popf
call
jle
cli
aad
push
pop
mov
mov
jbe
arpl
or
out
test
push
es
jmp
hlt
jge
inc
jns
mov
fdivrl
ss
incl
sub
rcl
cltd
shll
pop
cmpsb
and
fisubs
mov
pop
or
dec
cmc
inc
rcrb
loope
stc
jno
cltd
fnstcw
iret
wbinvd
adc
lret
push
cmpsb
xchg
mov
hlt
or
mov
sarb
bound
xchg
sbb
push
cmc
inc
dec
cmp
and
addr16
cld
scas
out
sub
push
stc
push
mull
mov
fwait
sbb
gs
mov
lret
ror
sub
arpl
test
aad
dec
pop
into
mov
xchg
dec
inc
arpl
aad
int
push
xor
jo
cld
arpl
dec
jb
fisttps
jl
dec
xchg
shrb
or
xchg
sarl
and
icebp
dec
or
jg
inc
outsl
stos
stc
imul
cmp
pop
fdivr
xchg
jnp
imul
sub
or
cmp
add
sbb
sub
fcmove
pusha
mov
xchg
inc
dec
xchg
sub
add
orb
mov
dec
popf
and
jp
xchg
sub
add
mov
add
inc
imul
jmp
aam
fistps
arpl
mov
and
push
xchg
jl
push
cmpsb
push
and
mov
out
imul
iret
stos
xor
imul
loop
mov
ror
aad
mov
xor
mov
out
sbb
cld
mov
push
int
pop
sub
jecxz
clc
popa
data16
pusha
ja
dec
repz
mov
dec
xor
outsl
aad
jg
dec
movsb
in
ja
lods
cmp
pop
int
cmp
pop
test
imul
aad
scas
add
sbb
sub
jne
movsb
div
jl
sar
mov
mov
cmp
std
cltd
and
pop
mov
mov
orb
shlb
pop
and
cmp
jg
cmc
out
push
push
cmc
sbb
xchg
cld
xor
mov
ds
sub
jne
add
mov
pop
or
mov
int
mov
push
call
xor
sbb
popa
ret
test
mov
into
imul
lret
in
popa
sbb
push
adcb
cmp
and
mov
aad
mov
imul
push
pusha
jns
out
add
jg
mov
imul
hlt
fsts
stos
push
cmp
xlat
lret
sbb
push
movsl
xor
adc
fwait
cltd
outsl
sti
xchg
dec
mov
out
pop
repnz
mov
adc
stc
pop
mov
idivb
push
test
jmp
jg
rcrb
idivl
sub
add
lods
sub
or
lcall
mov
cmp
in
scas
call
mov
scas
or
or
pop
sti
aad
negb
sarl
popa
pushf
leave
jno
aad
and
into
testl
popa
push
or
add
adc
add
adc
incb
aad
jmp
bound
mov
xchg
dec
mov
xchg
xor
cwtl
movsl
and
pusha
xchg
inc
jne
pusha
clc
cmp
int
stos
sbb
testl
leave
push
sbb
mov
aam
addr16
mov
adc
adc
mov
lcall
or
mov
out
loope
push
test
hlt
sub
aad
insb
jg
xor
es
adc
add
sbb
pusha
cmp
mov
es
mov
dec
std
aad
iret
adc
cmp
pop
mov
int
rorl
lds
push
or
cli
sub
ljmp
je
and
stos
sti
inc
dec
aad
pop
jecxz
jp
adc
aam
sti
push
cli
sub
pop
into
lahf
xor
iret
add
mov
call
cmp
sahf
and
stos
into
insb
in
add
dec
adc
jmp
jmp
cmc
ret
dec
jo
clc
divl
and
xor
cmp
nop
sub
mov
dec
psraw
subb
test
pop
add
push
and
sbb
nop
dec
out
bound
test
aad
pop
jb
jle
ret
arpl
inc
mov
cmc
fwait
addr16
and
sbb
pop
rorl
imul
add
and
sti
idivl
push
and
les
sub
add
xchg
dec
std
lods
sbb
add
aad
les
push
push
sub
dec
cmpsl
push
push
push
jle
mov
xor
mov
addr16
call
pop
loop
mov
push
loope
mov
xlat
in
xchg
mov
jg
push
mov
xchg
xchg
in
in
add
roll
cmc
ja
dec
pop
and
dec
ss
add
scas
roll
cwtl
jle
inc
push
jnp
lahf
push
sbbl
gs
sub
sub
mov
pop
inc
add
mov
cmpsb
jns
dec
call
inc
fildl
mov
or
lret
or
xor
pop
cltd
jno
idivl
sub
push
lods
xchg
sbb
or
dec
jl
fnstcw
out
ds
xchg
mov
aaa
pop
dec
int
scas
rolb
pop
inc
femms
and
dec
in
sti
or
jo
dec
jmp
mov
fs
cmp
icebp
in
jns
test
add
fs
sub
push
adc
jns
int
lea
xor
xchg
mov
and
mov
shr
sbb
jge
popa
mov
iret
popa
test
loop
mov
cmp
in
sub
xchg
cmp
push
add
jmp
add
mov
jle
lcall
cmc
fnstsw
fbstp
fs
aam
push
enter
ret
fmulp
xchg
out
inc
stos
popf
xor
inc
xchg
dec
jns
dec
inc
fcmovnu
mov
mov
lea
push
dec
pop
mov
dec
mov
js
dec
pop
jo
jae
cmp
or
mov
sub
jl
mov
inc
push
div
mov
lods
mov
fmull
jb
jle
inc
int
dec
fld
xor
mov
ret
pop
add
fldcw
mov
pop
test
xchg
and
das
out
pusha
push
mov
adc
push
or
in
xchg
push
xor
add
add
pushl
xor
addr16
mov
out
pop
decb
mov
std
and
aaa
shlb
dec
stc
loop
dec
mov
cld
mov
push
add
test
stc
test
inc
add
cmp
insl
sbb
rolb
sti
imul
dec
lds
xor
cmp
fmull
outsl
jne
lods
sti
dec
mov
popa
add
stc
hlt
mov
jp
popa
inc
cmp
fsincos
add
mov
imul
push
cmp
sbb
adc
xor
ss
sbb
push
int
daa
js
dec
sub
jno
leave
mov
ret
dec
jg
cmp
ds
jne
cld
out
sbb
popf
orb
movsb
add
mov
aaa
xchg
mov
mov
inc
or
cmp
sub
push
decl
mov
inc
mov
lds
out
iret
cmc
mov
mov
scas
or
in
push
push
int
xchg
mov
aad
dec
rcrb
jbe
cmc
mov
push
in
xchg
or
and
jp
xchg
cmpsl
and
fstps
aad
push
shl
pop
je
aad
cmpsl
push
aam
out
pop
bound
jns
rclb
inc
dec
dec
testb
jmp
mov
dec
cmp
lret
mov
aas
cmp
or
jl
jp
mov
sbb
out
cmp
sub
sbb
cld
repz
sbb
xchg
add
xor
mov
sbb
inc
add
adc
out
jmp
cmc
aam
mov
insb
std
jecxz
mov
gs
and
dec
or
jns
jecxz
or
jmp
in
mov
ret
pusha
popf
push
inc
pop
cmp
repz
cmp
int
or
ficompl
push
ljmp
jb
lds
into
xchg
cmp
ret
cltd
inc
push
sub
cmc
pop
mov
push
push
xor
xchg
test
push
cmpsb
cmp
sbb
push
repnz
lcall
sbb
pop
cmp
mov
divl
int
out
sub
or
mov
fisttpll
mov
xor
pop
push
cwtl
inc
xor
lds
lods
fisttpll
stc
and
adc
cmc
int
sahf
xlat
sarb
popa
idiv
inc
push
lahf
call
jecxz
add
jp
and
sbb
cmp
dec
cmp
test
fs
cmpl
jg
les
jne
push
push
hlt
inc
in
add
icebp
loop
mov
adc
and
and
icebp
adc
bound
push
loope
mov
outsb
es
pop
inc
mov
int3
das
xchg
sbb
ror
push
dec
negb
test
mov
in
cmp
lcall
adc
inc
idivl
inc
shll
push
dec
cs
push
xchg
cltd
sub
pusha
inc
sti
xor
push
ja
add
cmc
mov
sbb
adc
or
rorl
xchg
mov
mov
jmp
adcl
js
addr16
in
cmpsl
decl
dec
imul
add
inc
scas
icebp
fimull
inc
fcomps
jmp
inc
mov
mov
cmc
sub
call
stc
lods
mov
lods
repz
jnp
bound
push
icebp
fmuls
mov
dec
mov
fwait
jmp
shl
rcrb
sub
pop
or
in
stos
loopne
fnstcw
repz
adc
cmp
negb
mov
sbb
mulb
inc
fucomip
xchg
aam
popf
imul
out
add
pusha
push
pusha
cmc
dec
add
xchg
cmp
test
shlb
nop
mov
pop
aas
cmc
ficoml
leave
cmp
sti
aad
fistpll
mov
xlat
out
push
imul
xor
aad
out
es
mov
xchg
push
mov
push
mov
pop
popa
lcall
cmpsl
adc
pop
arpl
push
outsl
dec
divb
push
or
into
push
adc
dec
push
out
enter
jne
pop
loope
dec
cmp
push
and
and
and
imull
data16
xchg
mov
cmp
push
push
aad
fdivs
in
sub
adc
dec
jb
mov
pop
xor
mov
push
mov
xchg
xchg
scas
fldenv
ret
cmp
dec
ret
push
pop
jae
cmpl
dec
fsub
fstpl
or
sub
and
into
mov
mov
addr16
push
or
jbe
dec
das
inc
add
scas
sub
push
adc
mov
xchg
addb
stc
rorl
add
push
roll
imul
adc
push
pusha
jns
jp
or
dec
add
pop
sub
rolb
and
iret
adc
dec
roll
cld
mov
int
mov
fildl
fsubs
enter
pop
outsb
pop
fstl
adc
push
adc
jl
pop
popa
lods
fidivl
xchg
aad
lahf
jp
xor
test
cli
insb
icebp
pushf
mov
in
add
orb
xor
jecxz
ljmp
aam
xor
jmp
or
mov
stc
call
push
cmp
add
notl
xor
xchg
test
shl
test
data16
jecxz
mov
outsl
pop
xchg
mov
ljmp
cwtl
xor
fidivrl
xchg
pop
pop
rcrb
xchg
mov
jmp
sbb
sub
and
lea
into
ja
mov
pop
sti
ja
sub
cli
les
fwait
ret
cmp
push
stos
popa
mov
push
std
into
pop
or
jno
or
push
lods
mov
aad
fsubr
dec
sbb
jl
out
jge
les
aad
aad
inc
shll
xor
inc
sub
push
js
sub
out
adc
sub
lret
bswap
aam
sbb
inc
pop
xchg
out
hlt
std
jmp
push
scas
popa
dec
mov
pop
mov
and
ljmp
dec
pushf
mov
push
jns
stc
gs
xchg
inc
jge
add
fstpt
and
stc
mov
sti
dec
popa
std
mov
push
push
push
out
cmp
mov
mov
mov
sub
sub
xor
pop
mov
mov
mov
fbld
daa
cmpsb
xchg
or
xchg
lods
mov
and
jl
adc
push
mov
xchg
xor
push
aad
vucomisd
bound
lret
test
mov
mov
xchg
push
cmp
adc
push
hlt
and
xor
push
inc
arpl
mov
pop
xor
pop
sbb
lods
test
jl
or
aad
sbb
pop
sarb
pop
mov
mov
js
aas
insb
jl
push
mov
aad
inc
push
inc
push
add
push
call
mov
adc
clc
gs
jg
push
push
mov
xor
sti
mov
mov
xchg
or
push
xchg
ljmp
leave
jle
ss
or
xchg
mov
sub
call
push
nop
jbe
adc
aam
aam
ja
in
mov
cmp
push
pop
mov
jl
jge
jae
cld
adc
inc
jmp
fsubrl
jg
nop
push
or
pop
pop
jle
inc
gs
or
data16
jecxz
cmp
ficoml
std
addr16
add
std
cmp
nop
dec
xchg
js
loopne
lods
push
adc
push
aaa
aas
inc
jmp
lahf
es
push
sarb
pop
cwtl
icebp
inc
in
mov
iret
push
jmp
jne
mov
mov
dec
and
or
and
nop
stos
cwtl
imul
lea
jbe
aam
imul
loope
xor
mov
or
negl
xchg
cmp
sbb
cmp
mov
jne
imul
inc
mov
or
cmc
punpckhwd
jp
repnz
push
leave
insl
shlb
cli
out
les
jo
das
and
mov
add
lret
mov
sub
addr16
repnz
dec
push
shl
fsts
sub
sbb
xchg
les
xchg
cmp
movsl
lock
pop
push
mov
imul
xchg
ss
stos
shl
jg
or
jbe
cmp
pop
xchg
out
inc
or
inc
xchg
add
xchg
dec
clc
nop
in
fists
movsl
mov
loop
inc
fimuls
addr16
leave
add
fs
or
test
mov
mov
outsb
ds
bnd
jae
pop
bswap
lock
test
xor
in
xchg
or
xor
sub
adc
or
jge
mov
sub
rcl
mov
js
iret
jmp
mov
push
mov
sarl
stos
imul
in
sub
in
mov
mov
cmpsb
movsl
and
mov
int3
xchg
pop
mov
push
rol
push
add
test
cli
adc
add
push
and
fstpt
je
icebp
mov
ljmp
cmp
jecxz
sbb
mov
sti
lds
test
push
mov
mov
lea
ja
pop
mov
test
add
inc
xchg
xor
add
js
sarb
jnp
out
push
les
mov
sub
enter
pushf
mov
lahf
test
jmp
les
sbb
cmc
into
dec
std
lret
mov
arpl
pop
dec
pop
xchg
daa
shll
and
cmp
pop
mov
ret
or
shll
out
adc
lcall
std
jbe
and
imul
popa
rol
cmp
rcl
sub
lods
mov
icebp
xlat
dec
xor
arpl
lret
testb
mov
pushf
adc
mov
movsl
push
into
cs
inc
push
pop
push
or
popf
or
je
lods
xlat
mov
dec
mov
mov
loop
repnz
jle
adc
mov
sub
push
stos
lock
and
mov
cmp
int
mov
mov
jge
leave
fisubs
inc
pop
xchg
push
pop
popa
or
cmpl
call
stos
cmc
push
lds
or
rcrl
or
mov
jmp
aam
push
jecxz
jbe
mov
lcall
xchg
fsubs
icebp
cmp
hlt
and
lock
in
mov
aad
push
jle
mov
and
fdivl
in
js
mov
mov
into
jne
mov
add
cmp
cwtl
mov
filds
addr16
or
rcll
dec
call
xchg
xor
xor
or
out
into
aad
pop
adc
pushf
jnp
jge
sbb
mov
sahf
mov
xchg
adc
stos
sbbl
in
cmp
or
jns
aam
lods
pop
ret
shll
push
cwtl
jecxz
or
sub
in
ss
popf
jb
add
sti
inc
mov
ret
pop
add
jp
adc
fndisi(8087
shlb
mov
xchg
sbb
push
shll
push
push
jb
dec
or
mov
push
lcall
imul
jmp
mov
add
ss
ret
loope
jl
adc
fisubs
or
sti
aad
imul
add
ljmp
jge
movl
jmp
insl
sbb
pop
js
cmc
push
cmp
int3
push
aad
jl
fimull
stc
rorb
push
mov
shl
lea
xor
das
inc
pop
pop
mov
leave
call
jnp
pop
xlat
or
rcrb
push
pop
ret
mov
ror
pop
sub
arpl
shlb
js
pushf
popf
xlat
xchg
pop
mov
or
ss
mov
and
cmc
sub
xlat
icebp
aad
mov
jb
loop
or
xchg
jle
sub
cmp
jp
cmp
pusha
ljmp
xor
adc
jo
cltd
jne
aad
push
test
lods
into
push
sbb
lods
push
jno
arpl
jl
roll
pop
cmp
arpl
mov
in
notb
or
out
pop
in
shl
add
pop
ret
sbb
ljmp
in
clc
mov
repnz
pop
imul
fists
or
enter
adc
cmp
pop
cltd
popf
stos
iret
xor
or
mov
mov
fs
gs
and
sbb
cmp
mov
mov
mov
inc
cmp
test
xchg
mov
adc
loopne
popf
push
out
jnp
insl
sub
je
push
dec
lods
loop
and
mov
leave
fucomi
or
repnz
cmp
and
test
aad
or
mov
inc
mov
lea
pop
or
clc
outsl
mov
out
pushf
scas
xor
fnstcw
stc
in
hlt
cmp
lods
or
sub
mull
scas
fnstsw
or
mov
fdivrp
push
pop
stc
xchg
push
dec
adc
mov
test
sbbl
test
leave
mov
fisubrs
inc
not
sar
cmc
pop
xor
lcall
test
jle
pop
add
xchg
test
jnp
pmaddwd
rorb
mov
mov
add
lds
stos
jne
xlat
icebp
cmpsb
adc
test
adc
dec
loope
jl
iret
cmp
adc
adc
rcrb
sbb
std
daa
adc
mov
xor
gs
pop
sahf
mov
ficoms
aad
xchg
xchg
push
out
or
cli
adc
js
push
aaa
jns
pushf
and
inc
mov
adc
js
mov
js
xchg
lods
jo
push
sbb
out
movl
pop
mov
sahf
into
mov
jmp
or
adc
dec
ljmp
out
pop
inc
outsl
mov
xchg
repz
add
add
jp
call
popf
xor
pop
xchg
orb
ret
popa
sbb
les
dec
ja
fsubl
fsubrl
sarl
imul
inc
pop
inc
je
ljmp
cmp
mov
adc
xor
push
cmp
ljmp
sbb
cmp
and
pushaw
inc
es
fidivrs
pusha
fucomi
into
movsw
xor
aas
gs
mov
lret
hlt
testl
xchg
push
test
cld
sub
sbb
jecxz
dec
in
hlt
xchg
mov
pop
jmp
and
aaa
jae
aad
dec
lret
mov
movsb
pop
mov
dec
icebp
jne
inc
inc
cmp
bound
icebp
add
mov
push
lods
scas
jnp
frstor
adc
fcoms
movb
adc
push
xor
insb
dec
into
xchg
test
mov
jl
fnstsw
push
push
jbe
jb
jl
push
jmp
mov
adc
in
jecxz
jl
test
ds
enter
fisubrs
stos
push
test
dec
scas
into
jae
scas
xor
das
aaa
mov
dec
out
mov
xchg
iret
jo
repnz
mov
cwtl
loope
xor
imul
lcall
mov
jle
inc
mov
orl
mov
push
in
mov
les
fistpll
mov
cmc
add
xchg
sarb
mull
lret
cmp
in
cmc
xor
scas
movsb
rolb
in
notl
into
push
aad
pop
fidivs
fimull
leave
cwtl
cmp
pop
push
addr16
push
call
push
cmc
aad
mov
stos
mov
out
xchg
sub
popf
in
cmp
out
cltd
push
jmp
or
xchg
iret
adc
jmp
shll
jmp
or
inc
fdivp
mov
test
or
insl
jnp
cmp
jge
imull
jmp
jle
mov
cmp
sar
fmul
rcr
add
sub
aad
mov
adc
pop
mov
ja
dec
js
lahf
aad
or
fs
xchg
pop
hlt
ja
out
mov
jnp
add
or
push
jns
fcos
aad
sub
and
clc
shrb
jle
loopne
rorb
jnp
out
xor
pop
cs
ficoms
add
sub
enter
or
cld
pop
or
and
jl
movsb
cmp
lret
cmp
push
cmpsl
movsb
aad
sbb
pop
mov
inc
repz
jg
fidivl
lock
xchg
jmp
add
xchg
xchg
and
aad
xchg
in
fcomip
cmpsb
es
push
ficomps
cmpsb
test
pop
and
mov
int
mov
lods
mov
mov
aad
aad
sub
in
mov
lcall
cli
dec
sbb
pop
aad
push
aad
ret
inc
xor
shlb
mov
sbb
sub
or
loope
dec
xorb
xchg
aad
or
push
test
cmpl
push
jge
clc
fidivrs
xor
mov
xchg
dec
and
dec
mov
nop
adc
xor
sarl
ljmp
xchg
pop
add
jae
dec
movsb
into
pusha
rorl
xor
imul
mov
cmp
jmp
getsec
aad
xor
es
movsb
mov
dec
sahf
int
xor
mov
jl
pop
mov
int3
jmp
jmp
adc
dec
xor
in
sbb
cld
sbb
inc
cli
stos
and
cmpsb
lret
pop
pop
mov
dec
loop
lret
enter
xor
cmp
bswap
pop
push
or
std
mov
sahf
or
dec
sub
xlat
sub
and
mov
pmullw
pop
jae
imul
stos
aad
inc
mov
xlat
jno
cltd
incl
std
sub
fwait
mov
jns
mov
push
jb
mov
cmp
dec
xchg
lods
jns
xor
jecxz
pop
add
inc
push
cmp
rcrb
adc
jge
and
inc
fwait
sahf
mov
mov
push
inc
in
pop
incb
cwtl
push
adc
dec
scas
mov
xor
popa
lcall
cmpsl
fnstcw
test
loop
xor
pause
fbstp
inc
cmpsb
rcrb
adc
mov
pop
stos
jbe
or
leave
dec
sbb
popf
cmp
aad
and
in
in
fcompl
loope
scas
sti
or
ret
jmp
push
mov
int
in
or
mov
movsl
mov
jl
in
adc
repz
mov
cmp
xor
mov
sbb
push
stos
rcr
xor
popa
test
push
mov
jns
mov
or
ret
jl
psrlw
mov
mov
mov
cmp
push
adc
cmc
sahf
fdivs
xchg
fiaddl
jns
mov
add
cmp
sub
pop
movsl
outsl
mov
stos
les
mov
push
or
jg
lods
or
aam
sti
adc
repnz
jnp
fcmovnu
lods
add
and
push
lock
aad
pop
mov
mov
cld
xchg
jbe
adc
cmc
push
sbb
idivl
stos
mov
pushf
addr16
mov
push
mov
push
lods
sbb
mov
pushf
rolb
adcl
sti
lods
xchg
fcoml
pusha
adc
int
in
jns
hlt
fsubs
jl
in
out
sti
and
cmp
or
pop
xchg
xor
fdivp
cmp
imul
ret
jno
or
popa
add
push
loope
addr16
fdivrs
ret
out
cmp
daa
notl
fwait
out
mov
int3
fbstp
addr16
fcomps
jnp
ljmp
test
jmp
push
divl
pop
or
movsb
ret
fs
xchg
aad
mov
sbb
cli
iret
cmp
jmp
push
lcall
ficompl
int3
rolb
and
inc
cs
fisttps
cmp
xchg
mov
mov
push
orl
int
outsb
call
cmp
jns
push
andb
and
std
test
out
in
fcomip
push
ljmp
fwait
pop
int
pop
stos
push
xor
frstor
add
aad
out
xchg
mov
adc
fstl
data16
xchg
filds
jo
push
or
pop
cs
lods
jo
mov
jle
ret
and
cmp
mov
xchg
and
xor
sbb
and
push
fwait
jmp
dec
mov
in
cmp
fnstcw
push
or
or
push
xchg
xchg
cmp
push
xor
cmp
mulb
outsl
jnp
xor
xchg
andb
mov
lret
cmp
jbe
sti
xchg
outsl
iret
inc
psrlq
test
adc
sub
por
cmp
push
cmp
lret
mov
or
lock
push
or
popf
push
push
or
das
pop
cli
cmpsl
rcrb
ss
lret
xchg
adcl
mov
mov
fwait
out
inc
iret
push
pop
push
into
iret
cmp
lahf
jl
fst
pusha
jbe
mov
call
mov
dec
ja
pop
iret
aad
aam
jl
add
pusha
push
ljmp
idivl
cmp
ljmp
push
xchg
cmp
into
lods
adc
std
add
sti
adc
outsb
and
decb
popf
aaa
inc
addr16
pop
adc
sub
push
sahf
ljmp
lods
mov
mov
movsl
adc
xchg
xchg
sbb
and
js
mov
mov
pusha
mov
leave
mov
addr16
add
mov
dec
dec
cmpsb
arpl
popa
test
test
js
cmc
dec
push
or
pop
cmp
aas
mov
jl
jmp
pop
shld
or
imul
pop
xchg
fimuls
xor
or
lret
dec
aaa
sub
ds
mov
xchg
das
or
jno
jo
js
adc
xor
mov
mov
inc
loop
movsb
push
imul
std
xchg
lods
ljmp
call
cmp
or
leave
dec
jnp
push
mov
xchg
aad
daa
cmp
movsb
stos
jno
test
iret
ds
or
add
hlt
fistl
imul
arpl
sub
popf
adc
pop
clc
pop
js
or
popf
ljmp
ret
pop
testb
pusha
add
repnz
mov
inc
sbb
mov
fs
adc
xchg
scas
sub
mov
cmp
dec
dec
loopne
mov
and
mov
sbb
xor
jle
or
dec
cltd
pop
mov
inc
pop
mov
in
aad
push
std
jbe
out
fadd
icebp
rcrl
push
xchg
das
lds
mov
mov
test
mov
mov
imul
cmc
mov
mov
dec
or
imul
mov
insl
sarb
mov
push
cmp
push
int
mov
cltd
mov
cmp
out
pusha
gs
push
or
loop
adc
cmc
sti
out
movsl
lods
cmp
sub
outsl
sti
cmp
cld
mov
mov
jo
cld
out
cmc
cmpsl
xchg
and
stos
push
lret
xchg
int
scas
flds
pushf
movsb
adc
xor
xchg
sub
inc
out
in
das
rorb
daa
test
push
push
aas
pop
xchg
loope
push
push
bound
push
push
cmp
enter
adc
and
sbb
add
fisttps
cmp
test
in
mov
aad
pushf
push
xor
fistpll
mov
fdivrs
cmpsb
sbb
inc
inc
mov
and
aad
shr
mov
jmp
jle
test
cmp
push
fs
and
mov
popf
xor
sti
test
mov
sub
loope
mov
pushf
mov
adc
pop
sahf
outsl
or
xchg
sub
decl
stc
mov
scas
jecxz
mov
and
div
and
lcall
inc
ljmp
inc
mov
les
repnz
xor
sar
cmp
sub
enter
jle
xor
repnz
pop
test
and
cs
sub
loopne
repnz
sti
and
dec
mov
cli
stos
mov
aad
test
ret
call
test
sbb
test
stos
cmp
shl
fucomp
xchg
adc
pop
idiv
mov
adc
jmp
stos
das
cmp
popf
xor
aam
push
stos
push
and
repnz
cmp
or
les
mov
out
xor
jle
not
aad
jle
decb
into
jne
add
in
inc
push
ja
cmp
jg
add
xor
lods
shll
inc
sub
arpl
push
jbe
mov
jle
mov
adc
aad
stc
jg
divl
scas
cwtl
and
xchg
into
sub
fisttpll
mov
movsl
jno
or
sub
mov
push
pop
cmp
mov
jno
mov
loope
cmc
or
ret
push
divl
pop
add
pmaddwd
stos
mov
dec
adc
loopne
outsl
in
aam
adc
push
imul
dec
cli
loop
or
sbb
sbb
repz
inc
imul
and
pop
sahf
in
cmp
imul
add
xsaveopt
add
push
sbb
sbb
jo
movsb
icebp
sbb
cmp
mov
je
adc
adc
xor
lods
test
loope
mov
mov
adc
jmp
pop
and
out
xchg
mov
adc
ds
add
pop
cmc
dec
fwait
cmp
in
scas
les
cmc
adc
cmp
and
and
int3
add
push
inc
fimuls
sub
sti
scas
pusha
push
out
cmovnp
pop
push
pop
add
fisttpll
and
ljmp
shlb
add
push
int
sub
mov
push
arpl
pop
sub
dec
or
filds
cltd
dec
inc
fcomip
aad
fdivl
rorl
pusha
and
sbb
aam
adc
js
stos
cmc
jp
cmc
shlb
mov
out
or
cld
or
mov
sbb
cmp
dec
adc
jno
in
cmp
jb
sub
iret
out
cmc
aas
pushl
pop
xlat
push
sub
xchg
idivl
rcll
mov
out
pusha
aad
mov
push
jmp
sbb
push
test
jae
test
xchg
stos
rep
sahf
test
ljmp
adc
das
push
adcl
xor
aad
lods
cmp
sub
lret
add
call
add
in
xchg
mov
mov
loopne
cmp
add
xchg
gs
xor
xchg
mov
cmpsl
mov
mov
sbb
jecxz
xchg
adc
popa
dec
jnp
sub
inc
sub
cld
xchg
outsl
out
fldenv
sub
stos
popf
lea
mov
add
test
call
sti
leave
and
les
mov
testb
mov
add
adc
repnz
cli
adc
dec
xchg
or
lods
je
imul
inc
scas
add
jne
in
divl
ret
jns
pop
invd
xchg
aaa
dec
sarl
mov
jmp
jbe
andl
push
mov
stos
pusha
push
dec
int3
shrb
mov
jmp
idiv
pop
adcl
fwait
cmpsb
faddl
xchg
inc
sbb
jg
jp
outsl
lods
js
repz
mov
xlat
jae
mov
cli
rep
add
push
jp
sub
xchg
addr16
rcl
pop
pop
or
imul
sub
jnp
mov
fs
inc
sahf
pop
rclb
ja
xchg
popa
fcoml
mov
insl
xchg
sahf
movsb
jmp
rep
js
dec
or
mov
push
inc
and
mov
and
mov
pop
add
mov
xchg
lcall
sbb
das
aad
mov
out
fninit
sub
mov
mov
lcall
pop
push
and
stos
shlb
int
xchg
cwtl
gs
fucomip
idivb
in
pop
inc
jecxz
in
or
icebp
filds
inc
xchg
imul
mov
pop
test
fcom
and
or
into
ret
jmp
push
mov
cs
mov
rorb
loope
xchg
add
adc
lock
dec
stos
hlt
rclb
adc
int
rcrb
jo
out
pop
mov
cltd
xchg
repnz
pop
adc
lea
cmpsl
leave
jg
lods
push
into
mov
lahf
int
aam
sarl
adc
xchg
stos
stos
fwait
mov
sti
stos
mov
iret
cmc
dec
ss
xchg
jp
cwtl
cli
inc
out
insl
aad
xor
jecxz
jnp
and
lret
xlat
cmp
sahf
inc
pop
lret
or
ret
cmpsb
inc
iret
and
adc
xchg
int
inc
mov
imull
cltd
xlat
push
xchg
rorb
jecxz
fwait
or
and
insl
fistl
pusha
dec
cmc
mov
repnz
pop
mov
shlb
imul
push
mov
lahf
push
sub
pop
out
scas
dec
jbe
mov
sub
icebp
imul
jnp
push
lea
inc
jb
mov
push
movl
into
or
lea
fidivrl
lea
add
cmc
daa
enter
jg
jle
mov
or
loope
jmp
scas
dec
pop
and
sahf
and
mov
push
ds
jnp
push
sarb
cmp
dec
je
add
xchg
call
add
or
push
aam
out
or
or
cmp
incb
js
or
rcl
lds
test
fwait
rcrb
xchg
stos
int3
daa
mov
ret
arpl
fmull
pop
mulb
sub
popa
nop
sbb
shlb
xchg
jno
mov
cltd
bound
dec
xor
sbb
mov
fldl
push
fwait
add
push
inc
jbe
xchg
dec
aas
xchg
xchg
in
push
cld
mov
mov
mov
sub
pop
xor
jecxz
in
cli
xor
in
cmc
mov
repz
jl
inc
dec
aaa
jp
adc
dec
testb
adc
nop
xchg
icebp
test
xor
bound
mov
push
test
les
rcr
xchg
lock
cmp
adc
jae
and
jno
movsl
add
and
mov
jecxz
ffree
add
jbe
adc
push
xchg
in
mov
push
inc
mov
xchg
add
or
or
mov
jmp
cmp
push
mov
aaa
or
add
sbb
mov
pop
mov
mov
test
mov
dec
xchg
jmp
push
mov
and
xor
jmp
inc
mov
sub
pop
adc
negl
loope
lahf
aad
les
lods
pop
sbb
and
aad
mov
xchg
sub
jb
nop
iret
push
pop
scas
test
mov
iret
mov
popf
mov
xchg
movsb
and
std
push
mov
jp
into
aad
xchg
xor
adc
xor
add
int
adc
outsl
cmovae
adc
sub
lock
decl
and
int3
rcrb
or
pop
push
cld
nop
inc
sub
xlat
adc
inc
out
popf
mov
mov
test
orb
cmp
jns
iret
loop
aad
rolb
repnz
dec
push
adc
popa
mov
test
sti
in
sub
adc
int
mov
mov
cmp
ja
xor
lods
inc
mov
sub
or
and
xor
adc
pushl
sub
popa
repz
movb
movsl
ljmp
loope
mov
push
or
pop
cmp
pusha
inc
xchg
dec
mov
movb
xchg
les
sub
pop
xchg
inc
ja
jnp
sbb
dec
out
and
cmp
inc
sahf
jle
xchg
jnp
pop
call
pop
cmp
pusha
pop
xchg
jmp
pop
push
cltd
pop
inc
int
adc
jno
sbb
lea
mov
lods
dec
inc
pushf
mov
xor
cwtl
cs
inc
addr16
or
xchg
or
xchg
out
fimuls
aad
dec
ret
fimull
mov
int3
insb
mov
push
mov
scas
int
xor
insb
xchg
mov
fisttpll
incl
push
dec
aad
fldt
cwtl
cmp
mov
aad
or
mov
fldcw
mov
out
xor
mov
mov
and
cmp
jg
adc
mul
mov
dec
stc
sub
gs
scas
into
cmp
pop
aam
jno
push
les
inc
push
add
aad
cmp
scas
mov
xor
mov
add
jl
jp
xor
mov
loop
fisubrs
adc
jnp
js
inc
pop
stc
add
inc
cmp
int
lds
and
xor
jnp
or
sbb
jns
notl
shlb
cli
push
and
loope
mov
fucompp
rcr
and
icebp
rolb
cmp
mov
jp
jmp
popa
jge
dec
mov
lahf
mov
add
rolb
sbb
movsl
mov
xchg
lea
dec
ficompl
cmp
rorb
sub
stc
mov
xchg
into
mov
push
out
inc
mulb
incl
or
mov
and
mov
cmp
aam
lahf
aad
icebp
adc
cmpsb
popf
fiadds
add
stc
fcomp
daa
les
sbb
jg
pushf
call
mov
out
jne
test
stos
call
ret
push
out
add
sub
sbb
notl
xchg
jge
int
adc
rcl
or
cltd
mov
mov
out
aaa
mov
cmpsb
adc
hlt
out
shrl
mov
inc
lret
and
cmp
in
or
mov
dec
dec
jmp
adc
jno
jmp
jns
es
into
iret
stos
or
inc
repnz
gs
and
adc
xor
aas
mov
push
aaa
popf
mov
cmp
sub
mov
push
and
jo
inc
insl
add
ffree
mov
aad
mov
mov
dec
ljmp
insb
mov
sub
enter
and
mov
cmpsl
add
mov
cs
adc
repz
mov
loopne
andl
cmp
xchg
cwtl
add
fdivrs
xor
xor
cmp
sub
mov
clc
jmp
jmp
int
inc
inc
lret
sub
xlat
inc
dec
sub
xor
dec
push
push
xchg
divl
dec
jp
dec
push
dec
sub
cmpsb
popa
xchg
adc
jb
pop
jg
xor
hlt
mov
test
dec
stos
xchg
popfw
sub
ss
popf
test
imul
das
repz
dec
mov
cmp
scas
bound
xchg
push
aam
in
jl
adc
sub
cmc
push
mov
arpl
es
iret
js
lods
into
mov
dec
jg
out
dec
sti
pop
lods
xor
cmp
aad
mov
scas
jae
test
sbb
repz
mov
rolb
jb
out
daa
into
jnp
push
idivl
stos
fsubp
push
lcall
xchg
xchg
inc
jo
ljmp
pop
int
cltd
and
sbb
ret
cmp
mov
xor
js
mov
leave
out
out
cmc
jecxz
adc
stos
das
sbb
sub
in
cmp
push
mov
testl
and
testb
mov
adc
dec
das
sbb
and
push
push
sbb
sti
int
mov
jne
scas
inc
js
outsb
js
leave
call
aam
push
jo
lea
cmp
pop
cmp
das
adc
loop
xchg
pop
call
inc
cmp
out
loope
or
push
shrl
es
shr
shlb
or
lods
inc
insb
rcl
out
cwtl
push
lods
cmp
imul
mov
not
lret
lea
xor
push
aad
aad
mov
mov
and
cmc
enter
push
outsl
pop
mov
aad
or
mov
arpl
cmpsl
jmp
sub
pop
push
xor
outsl
pusha
dec
lods
fimull
cmpsl
arpl
pop
xchg
push
xchg
mov
gs
xchg
hlt
add
dec
sub
or
mov
push
xchg
push
cmp
sub
gs
repz
push
dec
sub
test
mov
fnsave
jmp
leave
pop
jmp
fdivrl
pop
cli
pop
and
or
xor
int
es
popa
or
sub
mov
push
pop
jns
out
es
imul
push
jne
sbb
dec
inc
rorl
add
push
stos
cmp
lret
scas
push
negl
xor
or
mov
cmpsl
pop
adc
jno
ret
sub
fst
inc
sub
rcl
and
test
jbe
inc
sub
push
inc
xchg
xchg
into
shlb
out
pop
push
lahf
jle
or
ss
in
lds
mov
aaa
ljmp
rcl
dec
or
pop
mull
ret
cmp
pop
xchg
lds
addr16
mov
mov
pop
sahf
adc
push
adc
or
js
cmpsl
scas
movsb
adc
outsl
cld
mov
adc
cmp
and
shrb
jb
cmp
pop
cwtl
cmpsl
ds
pop
int3
mov
arpl
cmp
mov
pop
andb
mov
lret
push
fcomi
dec
push
sbb
out
in
inc
adc
jnp
bound
xabort
pop
push
xchg
cmp
gs
adc
or
or
gs
aad
add
push
pop
pop
pop
std
shl
lea
adc
and
push
mov
xor
cmc
pop
dec
cmp
shll
pushf
inc
imull
stos
adc
out
mov
mov
pop
push
or
fdiv
mov
mov
add
cli
shrb
frstor
popf
add
rorl
pop
in
xor
add
add
xchg
dec
pop
std
addl
cmc
push
cli
jge
fs
mov
je
mov
mov
shr
ret
push
fdecstp
adc
stc
add
out
adc
dec
dec
cmp
mov
cmovbe
popa
stos
lret
aad
mov
add
lods
arpl
fnstenv
mov
adc
xor
icebp
push
pop
mov
call
adc
out
sbbb
lcall
in
cmp
sbb
insl
and
mov
sub
mul
negl
stos
add
test
jb
cs
stc
inc
xchg
lds
int
mov
mov
outsb
lcall
int3
fwait
dec
out
mov
xchg
test
rorl
cld
clc
outsl
iret
mov
inc
jmp
sti
into
out
mov
enter
xor
or
nop
push
into
xchg
mov
movsb
mov
dec
dec
push
loope
std
fcoml
fwait
cltd
nopl
adc
les
cmp
dec
pusha
mov
loop
mov
xor
bound
jbe
push
mov
out
popa
aam
cmp
stc
and
jnp
mov
popf
xchg
pop
jl
clc
push
push
mov
xchg
icebp
data16
xchg
and
rcrb
xor
cmp
adc
mulb
sub
dec
cmc
mov
mov
imulb
int
adc
cmpsb
gs
push
cmp
cmp
mov
or
sti
push
cmp
dec
ljmp
and
mov
push
push
stc
or
aad
xlat
cmp
mov
cmc
xchg
test
xchg
mov
mov
and
mov
or
data16
cmp
xchg
or
cmp
add
xchg
sub
dec
roll
mov
cmp
inc
scas
xchg
pop
imul
rcll
pop
dec
jg
sub
les
add
xchg
in
imul
dec
push
adc
pop
sahf
cmc
lods
shrl
jno
push
mov
pop
fsts
mov
cmp
sub
shrb
adc
stos
push
out
push
daa
sti
lahf
mov
add
push
aad
sahf
push
mov
or
xchg
jmp
jnp
xchg
mov
ljmp
adc
fucomip
enter
sub
mov
js
xlat
rcll
out
add
popa
bnd
enter
cmp
frstor
fimull
mov
push
fwait
mov
mov
jecxz
js
cwtl
decb
outsl
xchg
shrl
xchg
pop
data16
push
int3
out
sub
xchg
dec
xor
mov
idivl
in
stos
pop
jmp
in
std
fs
jp
ret
xlat
mov
cs
punpcklbw
test
xor
pop
mull
fcomps
xchg
adc
and
push
mov
sbb
dec
sti
and
fbstp
inc
lods
adc
testl
jl
lock
mov
stc
xchg
inc
andl
jp
mov
sub
sub
nop
pop
mov
je
fsubl
jb
xchg
out
mov
mov
in
inc
insb
adc
inc
aad
mov
mov
stc
aad
mov
in
adc
shl
cmp
movsb
inc
pushl
lods
xor
dec
sti
jecxz
push
xor
fnsave
adc
mov
fidivs
push
roll
inc
shlb
xchg
das
add
xchg
cmp
adc
orl
iret
imul
repz
mov
bound
dec
sbb
cwtl
adc
aam
cmpsl
dec
cmp
es
jnp
mov
cld
add
lea
daa
mull
jge
mov
dec
jne
mov
dec
xchg
and
cs
push
pop
into
pusha
out
jnp
mov
into
gs
mov
testl
jmp
fidivrs
ljmp
test
ljmp
push
mov
das
sub
sub
test
clc
jo
aaa
jecxz
pop
add
mov
lods
cs
jno
sbb
cli
cmc
out
test
loop
out
dec
stos
push
lods
imul
imul
outsl
ss
and
data16
shrl
aad
dec
out
xchg
scas
push
push
fidivl
std
outsb
dec
outsl
xchg
pop
add
or
lahf
out
pop
out
das
push
in
and
add
add
in
jmp
test
call
andl
cmp
mov
cmp
sarl
aam
les
push
dec
popl
mov
sbb
adc
arpl
inc
pop
imul
sub
xchg
sbb
pop
sub
cmp
mov
js
and
lods
pop
popa
xor
in
iret
dec
sub
xchg
into
cmpl
cmp
leave
mov
pushf
and
movsb
xchg
ret
cmp
pusha
adc
xchg
jecxz
mov
imul
and
stos
xlat
cmp
rol
scas
fisttpll
loopne
cs
in
cltd
mov
and
and
jbe
cmc
int
into
or
pop
clc
dec
jbe
sbb
xchg
pop
mov
push
adc
add
sti
push
push
add
mov
aam
test
dec
popf
lret
in
add
sbb
inc
iret
cmc
pop
insl
es
frstor
fmuls
push
call
or
sub
cmp
pop
outsl
dec
adc
mov
out
divb
cmp
xchg
emms
xchg
mov
cmp
ret
jp
mov
hlt
arpl
imul
and
es
push
or
sti
sub
cmc
test
mov
in
scas
popf
sub
xchg
jg
js
jb
jno
xchg
mov
sbb
cwtl
push
mov
push
arpl
mov
cmpsb
fcmovbe
popf
jmp
hlt
mov
loopne
sti
xchg
add
mov
cmpl
mov
mov
xchg
push
nop
int3
jns
subl
pop
add
aaa
call
sbb
sbb
jns
aad
roll
out
div
shr
mov
mov
movsl
cmp
int
into
adc
fistpll
add
sti
cmpsb
cltd
jp
mov
jmp
add
adc
inc
sub
mov
add
lea
xchg
scas
mov
dec
ret
arpl
pop
or
js
cmp
dec
sbb
loopne
lods
aam
fists
jns
cmp
jo
and
push
dec
rcll
pusha
adc
lcall
pop
push
cmp
shll
mov
clc
addb
rcrl
dec
nop
rorb
push
sahf
mov
xchg
mov
gs
sbb
jne
mov
xchg
cmp
nop
pmaddwd
test
fs
inc
sub
rorl
dec
mov
fucomip
xchg
sub
dec
cmpsb
mov
xorl
push
xchg
flds
aad
jbe
je
movsb
test
push
jle
jmp
fcmove
mov
in
in
hlt
test
mov
sti
pop
loop
sub
and
or
stos
repnz
out
dec
rclb
xor
push
lods
adc
mov
mov
xchg
pop
mov
repnz
pop
jns
repz
sbb
adcl
inc
cli
popa
pop
sbb
aad
push
ljmp
xchg
sub
inc
scas
cli
adc
lods
out
addr16
cli
or
nop
mov
cld
js
inc
jp
jle
xchg
dec
jne
sbbl
inc
out
dec
push
mov
adc
leave
inc
decb
int3
jl
jmp
jne
mov
pop
jo
andb
scas
in
in
or
pop
fwait
in
cmp
xchg
xlat
aaa
fbld
cli
rcrl
lods
dec
xchg
push
enter
movsl
cmc
cs
std
mov
push
push
push
insb
ljmp
or
or
cmc
js
pusha
push
repz
rorb
and
xchg
cwtl
jbe
lock
les
inc
sub
jnp,pt
jnp
stos
clc
or
cmpsb
addr16
rorl
fdivrl
pop
push
jnp
into
lods
fldenv
adc
adc
nop
sub
mull
sbb
cmp
prefetch
ficoml
adc
pop
mov
jle
roll
sti
hlt
xchg
sub
sbb
jge
faddl
iret
imul
das
xor
push
xor
cwtl
push
imul
dec
les
jl
inc
dec
sbb
inc
in
ret
and
aad
or
enter
out
out
xchg
and
int3
ja
jp
sbbb
pop
pop
sbb
dec
insl
xchg
push
push
sub
pop
fsubr
pop
cmc
scas
lea
dec
aad
dec
push
lock
jmp
stos
mov
inc
jg
cwtl
or
cmp
movsl
mov
bound
mov
cmp
int
in
jle
testl
sbb
jge
cli
jmp
ret
ds
or
out
push
movsl
mov
sub
cmp
mov
cli
jge
or
jmp
int
repnz
mov
in
icebp
dec
mov
ljmp
outsl
pop
xchg
dec
inc
mov
movsb
clc
sti
js
mov
cmpsl
roll
mov
test
popa
call
movsb
adc
inc
push
jb
out
sti
cmp
cld
dec
cmp
xchg
hlt
scas
negl
push
fadd
fsubs
mov
int
arpl
or
xlat
sarb
cltd
es
adc
mov
jmp
rolb
xor
fiadds
fdivs
cmp
repz
in
xchg
pop
call
movsb
loop
das
dec
mov
cmpsb
add
xor
or
xchg
insb
jge
adc
mov
sub
leave
adc
adc
jbe
lret
bound
and
loopne
lds
or
add
adc
outsb
loop
xchg
sti
jo
or
dec
sbb
ljmp
lret
pop
lcall
lods
mov
jae
mov
xor
mov
lock
int3
icebp
roll
push
insb
mov
inc
lahf
cmp
jmp
mov
xchg
adc
push
mov
lahf
sbb
inc
inc
cld
cmp
xchg
add
and
test
lahf
fmull
addr16
pusha
iret
pushf
popa
pop
inc
insl
mov
sbb
cmc
push
mov
test
add
enter
aam
pop
mov
cmc
ficoml
jg
das
or
xor
cld
dec
mov
jg
and
lcall
lahf
adc
push
ja
call
jne
shll
test
xchg
jbe
into
cmp
ljmp
and
out
pop
sub
sub
cmc
out
lahf
push
sub
mov
imull
sbb
sub
xor
dec
sbb
mov
jg
lea
sub
lea
divl
shrl
xchg
add
or
aad
inc
pop
adc
fistl
push
jnp
jnp
loop
xchg
aad
inc
push
inc
int
jmp
fisubs
aad
aad
je
or
or
pop
pop
mov
leave
mov
repz
lods
fstps
pop
jmp
fcmovne
aad
outsb
sub
mov
clc
mov
cmp
xchg
ljmp
leave
or
mov
push
sbb
mov
jns
je
push
cmp
std
jmp
add
jns
out
or
std
cltd
xor
or
cmp
test
or
pop
or
pop
rdpmc
dec
mov
xchg
xor
mov
adc
popl
mov
lahf
cli
push
sub
jno
mov
pop
or
xchg
sbb
or
aad
add
adc
les
out
and
pop
hlt
inc
fldt
dec
and
rolb
sub
mov
mov
mov
int
xchg
cmc
mov
or
popa
mov
jp
dec
inc
out
into
push
sbb
and
cmp
sbb
jecxz
jge
dec
aad
cmpsl
xchg
pop
sbb
xchg
sbb
je
dec
xchg
shr
push
adc
mov
sbb
adc
push
mov
cmp
leave
shrl
shll
inc
dec
inc
shlb
repz
and
mov
les
sbb
add
adc
jmp
push
das
add
imul
aad
mov
lret
xor
fdivl
jmp
and
sti
aam
call
jns
addr16
or
push
push
pop
repnz
adc
xchg
lcall
popl
dec
pop
testb
inc
xor
addr16
xchg
pop
hlt
aad
fcomi
int
cmpb
adc
and
out
mov
rcl
int
imul
inc
xor
mov
subl
or
pop
push
es
out
setl
je
mov
cs
jg
insl
adc
loop
and
adc
call
ret
outsb
push
incb
or
sub
sti
add
adc
xchg
adc
adc
scas
xchg
cmp
or
inc
mov
iret
cmc
iret
add
xor
pop
cmp
stos
testb
xchg
push
sbb
fnsave
ja
sub
out
xchg
fs
aam
add
lock
movl
sahf
rcl
mov
cli
or
or
add
xor
inc
xor
jmp
push
aaa
loopne
mov
dec
push
adc
add
jecxz
push
les
idivl
or
mov
push
aam
push
mov
mov
pop
int
leave
or
xchg
inc
or
fcmovb
push
hlt
sbb
cwtl
push
fdivl
pop
dec
mov
lcall
outsl
test
pop
mov
adc
cld
mov
testb
hlt
cs
inc
xor
push
inc
push
inc
or
ret
lret
ret
sub
mov
into
pop
movsl
jg
sub
push
cs
or
push
pop
iret
pop
lods
scas
sbb
call
or
fbld
lcall
test
push
jne
mov
test
cs
xor
fists
cld
lret
enter
scas
loope
add
jle
push
jmp
dec
or
sbb
dec
mov
jmp
and
lahf
cld
setg
leave
insb
sub
mov
push
sti
cmp
cmc
xchg
pop
adc
test
imul
loope
mov
les
pop
dec
push
xorl
xor
je
push
gs
adc
xchg
clc
dec
dec
xchg
test
pop
repnz
loope
pop
inc
sbb
out
jo
pop
lods
lods
les
lock
xor
dec
hlt
loopne
jne
aas
js
cmp
sub
loope
out
lods
in
scas
imul
mov
xchg
das
idivl
imul
aas
fsts
cmp
cltd
or
sbb
rcrb
lcall
push
jge
pop
mov
push
mov
sbb
scas
inc
test
dec
loopne
dec
call
jbe
inc
push
mov
in
adc
adc
sbb
pop
jb
repz
cmpsb
mov
pop
mov
dec
shlb
push
pushf
mov
pop
xchg
add
xchg
jmp
das
pop
jge
mov
sub
pop
stos
shl
xchg
mov
jge
aaa
cmpsb
repnz
jnp
dec
jecxz
outsl
cmp
jmp
mov
or
idivb
inc
fsts
jle
mov
xchg
dec
jmp
fsubp
decb
jnp
dec
pushf
test
push
push
shlb
push
movsb
les
push
into
mov
fsubl
mov
mov
adc
mov
push
mov
fdiv
and
loopne
inc
push
inc
idiv
sub
imul
aad
js
imul
test
clc
into
aad
sbb
sub
inc
pop
decl
jnp
es
faddl
mov
jne
adc
movsb
xchg
inc
hlt
mov
test
xchg
shl
pusha
gs
rorl
xor
add
int
movsb
imul
or
jge
gs
jg
popf
repz
jmp
cmp
imul
cmp
insl
cmp
clc
sbb
imul
sub
stc
into
jb
insb
mov
popa
cmp
and
xor
push
adc
rclb
adc
push
sub
out
cmc
lcall
mov
or
test
xchg
xor
adc
aad
mov
mov
cmp
adc
xor
testb
aad
fsubrp
cltd
loopne
cmc
pushf
lods
pop
cmp
repz
push
push
aad
popa
mov
mov
jo
scas
rorb
push
movsb
mov
cmpsb
xchg
xor
in
rolb
sahf
or
dec
test
movsb
repnz
adc
movb
push
mov
jl
mov
in
cli
scas
cmp
xor
jg
mov
push
mov
popa
cmp
adc
cmp
sbb
stos
mov
popf
mov
xor
dec
sarl
push
inc
in
out
push
outsb
and
push
arpl
mov
pop
movsl
cmpsl
imul
inc
bnd
testb
sar
popf
iret
scas
jg
into
push
xor
adc
dec
add
in
adc
in
dec
mov
push
stc
arpl
xchg
shll
or
rorl
mov
pusha
imul
and
fxtract
outsl
push
ljmp
pop
add
inc
call
ds
dec
jmp
mov
fs
and
push
iret
sub
xchg
scas
xor
pop
xor
mov
inc
mov
jo
mov
or
inc
test
mov
lds
mov
repz
sub
push
pop
adc
sub
fistpl
or
jns
sti
cmpsb
or
push
lods
arpl
lret
sarb
pusha
jl
pop
jg
out
mov
cmp
in
sbb
mov
inc
outsb
or
mov
cmp
outsb
xchg
leave
mov
ljmp
push
push
mov
sub
pusha
seta
or
into
out
cmp
scas
xchg
jb
push
test
or
jmp
jmp
iret
push
aad
pop
fimuls
mov
sbb
loope
push
mov
jp
push
add
and
sbb
and
dec
shl
decb
in
je
push
cmp
pop
call
insb
inc
lret
xchg
mov
movsl
pop
pop
mov
inc
lods
js
stc
cmc
pop
enter
jg
push
dec
pop
cwtl
jmp
movsl
push
rcrb
enter
mov
push
and
sbb
and
popl
mov
mov
unpcklps
jno
dec
push
xchg
cmp
scas
push
icebp
push
fisttpl
cmc
dec
xchg
inc
xor
jle
push
outsl
or
xchg
mov
fldl
dec
pusha
pop
cmp
and
sti
aad
cmp
sbb
clc
jo
inc
cmp
fldcw
in
stos
mov
push
movswl
mov
movsb
jp
rcrl
inc
lock
aad
cmp
imul
std
out
push
add
scas
lods
cmpsb
mov
lods
dec
xor
xchg
cmp
cmp
cmc
test
inc
repz
cmp
adc
mov
gs
stos
xchg
dec
mov
dec
data16
fucomi
nop
lahf
xchg
cmp
es
adc
neg
nop
jns
jne
js
mov
sbbb
and
ret
xchg
stos
int
aad
jne
mov
mov
xor
outsb
add
mov
jge
pusha
add
enter
stos
or
movsb
sti
add
or
or
adc
rorl
fstpt
mov
popa
lahf
lret
call
push
push
sub
push
push
jmp
cs
mov
xchg
jmp
lock
in
xchg
mov
jge
sbb
aad
and
int
xor
push
jns
push
in
fimuls
dec
and
mov
cmp
mov
adc
repz
imul
pop
cmc
mov
daa
mov
std
js
mov
pop
xor
adc
pop
sti
jnp
negb
sub
jecxz
aad
jnp
pop
lock
jmp
and
scas
dec
rclb
xlat
inc
mov
add
movsb
fdivr
xor
mov
test
fcoml
cs
adc
mov
fwait
pop
jmp
into
push
xor
inc
pop
dec
dec
fsubl
cmp
push
fistpl
ljmp
daa
sub
fdivl
clc
sub
shrl
sbb
sub
cmc
cmp
pusha
xchg
push
std
xchg
ljmp
cs
push
xchg
fs
jecxz
iret
loopne
or
rclb
push
add
mov
stos
jmp
pop
inc
cwtl
mov
jg
jge
push
rclb
cmc
les
jno
popa
stos
or
push
imul
mov
aad
cli
cwtl
jnp
fst
fsubs
mov
inc
out
imul
sbb
jg
xor
add
cmp
out
push
jl
xlat
jo
cli
int
jge
cmpsl
mov
jo
dec
add
push
or
int
movsb
add
sbb
mov
mov
negl
push
in
cmpsl
mov
les
mov
pop
jnp
dec
aad
mov
test
inc
xchg
paddsw
or
push
testl
cmp
cli
xchg
jae
shlb
hlt
mov
mov
fs
sbb
scas
lcall
mov
je
call
sbb
out
insl
cs
testb
mov
lods
push
xchg
mov
xor
dec
mov
mov
push
add
pusha
into
mov
jp
movsb
repz
push
cmp
and
add
mov
cli
mov
mov
mov
xchg
cmpsl
std
lcall
mov
int3
adc
pop
loopne
pop
lret
rcrb
std
sub
jne
mov
mov
icebp
or
xchg
cmp
or
pop
cmpsl
js
rcll
lcall
das
or
test
test
mov
jo
mov
mov
push
rclb
rcl
fcomip
cmp
dec
les
cmpsl
fimuls
lds
or
lods
scas
mov
scas
cltd
xchg
and
mov
sub
fwait
or
and
arpl
inc
adc
in
dec
push
mov
aaa
jmp
cmpsb
mov
lods
fdivp
cmpsb
add
jnp
sub
cmp
adc
and
pop
aad
lahf
jno
lcallw
in
testl
sub
xchg
ljmp
xor
je
mov
fldl
jmp
sbb
sti
shlb
jp
inc
push
mov
scas
mov
cmc
rorb
mov
movb
xchg
or
cmc
xchg
cli
adc
nop
xor
addr16
mull
jns
jmp
aad
mov
mov
out
rol
dec
ja
outsl
pop
pop
push
mov
mov
cmp
sbb
sahf
pop
int
inc
cmp
cmc
into
js
mov
in
popa
push
mov
in
in
call
fs
or
inc
push
iret
ret
cld
rcr
xor
push
dec
je
scas
mov
mov
nop
aad
sub
push
js
xchg
inc
fildll
fistl
xchg
mov
jp
sub
push
jl
mov
inc
out
outsb
mov
mov
push
fwait
push
sbb
mov
jmp
jnp
into
ffreep
fwait
repnz
xor
xchg
mov
shrb
or
out
mov
movsl
cli
or
xchg
sahf
adc
add
cmpsl
sub
mov
in
fdivl
cmc
sub
roll
xor
movsb
sti
add
cmp
pop
xchg
mov
insl
fbstp
in
out
shrl
or
clc
or
pop
int
mov
cmp
arpl
jnp
xchg
add
jb
cmc
in
mov
shr
cli
pusha
add
testb
or
in
imul
mov
into
je
rclb
xor
mov
pusha
setne
outsl
jecxz
aaa
jl
inc
push
add
notb
lods
outsb
dec
sahf
shlb
loope
cmc
mov
gs
daa
and
inc
and
add
and
fwait
daa
sahf
mov
pop
iret
call
add
sbb
subl
sub
sub
arpl
cmp
fwait
cmp
aad
mov
push
ss
imul
mov
lahf
xchg
mov
sahf
mov
mov
pop
cmpl
js
mov
notl
jle
dec
pop
aad
mov
push
ljmp
cmc
push
stos
mov
push
pusha
add
sti
cmpsl
insl
scas
inc
xchg
jo,pt
cmp
mov
mov
stos
xchg
out
pusha
mov
xchg
fistps
test
mov
fs
jge
aas
pop
sbb
or
out
bound
xchg
or
cmpsb
add
fwait
mov
outsl
sub
into
pop
push
mov
and
sub
pusha
cltd
inc
jmp
daa
fnstsw
mov
mov
idiv
push
pop
sbb
and
lcall
dec
aad
stc
outsb
fiaddl
test
adc
repz
mov
mov
add
cmpsb
sbb
xor
scas
and
sbbb
sub
cmp
gs
mov
icebp
xlat
or
icebp
dec
push
cmc
aas
mov
sub
sub
nop
dec
dec
aad
push
imul
nop
cld
dec
push
nop
popa
or
aad
mov
out
jmp
xchg
dec
lock
mov
out
insb
pop
mov
jmp
aas
in
fbld
pusha
jge
cmpsl
xchg
and
sbb
arpl
push
jg
sub
jnp
push
pusha
jl
and
rcll
sbb
cld
repnz
sbb
aad
loope
ljmp
divl
jmp
jnp
add
jmp
inc
cmp
push
test
fsincos
stos
mov
mov
rolb
cmp
iret
sub
sub
enter
jae
sbb
mov
push
dec
push
cmp
xchg
lahf
cld
inc
jl
mov
xchg
jb,pn
sahf
pusha
imul
aam
sbb
mov
adc
call
mov
test
out
sub
sbb
sbb
push
cs
pop
outsl
aad
jl
mov
pop
shlb
cmp
cmp
cld
add
jbe
popa
pop
bound
add
mov
shlb
fdivp
xchg
dec
loope
cli
out
xchg
inc
mov
cmp
sarb
jge
sub
dec
cli
repz
imul
addr16
das
or
aam
mov
push
aam
mov
out
out
idivl
repz
jge
loopne
cmp
or
and
dec
mov
jp
int
cmp
pop
insl
out
aad
dec
fistpl
jmp
jle
inc
push
not
lods
cmp
dec
outsb
sub
rclb
outsl
cmc
lds
adc
xchg
sbb
cmp
inc
and
in
inc
push
xchg
mov
loopne
mov
jg
cmp
pop
addr16
jmp
push
in
adc
in
loop
dec
push
cli
sub
xlat
mov
jle
pop
lock
fsubs
cmp
into
mov
sub
push
popa
mov
mov
aad
xor
mull
jb
mov
mov
push
lahf
aad
fwait
lock
movsl
cld
test
add
je
or
test
mov
shll
mov
xchg
push
mov
xchg
sub
xor
and
in
mov
mov
mov
xor
mov
and
jecxz
jnp
xchg
push
arpl
repnz
testl
mov
daa
dec
nop
cmpsl
push
test
xchg
inc
push
cwtl
mov
xchg
mov
push
xchg
sbb
push
mov
push
fs
aad
mov
add
test
or
test
fdivs
inc
sub
popa
xlat
mov
adc
and
push
lea
pop
xchg
mov
cmpsb
daa
xchg
push
stos
rcll
scas
lock
sub
adc
aas
lods
xor
push
lahf
push
shll
test
mov
sub
ret
push
push
xchg
cmp
out
sub
dec
pop
test
mov
xor
mov
and
mov
inc
fisttpl
xchg
test
dec
int3
jbe
add
lods
pop
adc
mov
and
push
in
sub
xor
stc
aam
inc
jmp
es
mov
test
sbb
scas
addr16
stos
cli
es
cmpsb
std
mov
and
dec
push
aad
aam
mov
push
stos
mov
jnp
jb
out
cmc
pop
inc
test
aad
mov
mov
in
js,pn
fsubl
mov
in
jle
dec
ds
movsl
aam
dec
icebp
xorl
pop
pop
inc
nop
push
add
adc
fsubs
subl
es
std
in
add
xor
and
mov
xor
divl
push
cmp
in
lahf
addr16
mov
mov
jns
pusha
pop
jmp
loope
stos
ja
hlt
movb
aaa
pop
imul
out
push
add
jle
rcr
ja
jmp
add
pop
jae
fisttpll
sbb
sub
cld
rcr
add
sub
lcall
out
test
xchg
movsb
xchg
sti
mov
fmul
push
inc
adc
mov
dec
jmp
int
adc
jge
imul
adc
adc
in
inc
cli
add
pop
cmp
test
cmc
arpl
aaa
inc
cmpsl
call
and
outsl
xchg
popa
cmp
or
push
mov
out
and
cmc
jge
jmp
imul
outsl
xor
lahf
stc
and
test
mov
aam
mov
rorl
adc
dec
xchg
pushf
xchg
cmp
fdivr
lock
pmullw
fs
aad
add
loope
dec
or
adc
mov
mov
pop
cmp
mov
add
sub
fistpll
icebp
inc
push
aad
fisttps
lods
push
sahf
sbb
dec
test
scas
std
loopne
jns
mov
data16
scas
inc
push
mov
mov
rcrb
xchg
dec
inc
loope
sbb
imul
not
xor
push
xor
test
inc
cmpsb
dec
hlt
dec
pushf
test
xchg
andb
or
jnp
push
addr16
dec
xchg
mov
in
pop
adc
cmc
psubsb
popa
adc
lods
mov
lods
call
inc
xchg
push
and
adc
dec
dec
aad
mov
shrl
scas
into
jae
jmp
add
aaa
or
dec
add
int3
aad
or
js
or
dec
insb
leave
movsl
imul
sub
ficomps
cmp
cmp
cmp
jmp
loope
int3
mov
and
rcll
inc
mov
lds
je
sbb
and
dec
stos
aad
test
imul
int3
lcall
arpl
into
jl
push
mov
xchg
push
fcomip
cmc
mov
jb
aad
or
out
fidivs
mov
in
rol
shr
inc
xor
inc
dec
aad
lahf
adc
pusha
push
mov
xchg
pop
cmp
in
ljmp
dec
push
push
cltd
ficompl
mov
fstpl
repnz
mov
inc
and
cmp
aam
sub
push
sub
and
inc
cmp
inc
cmp
call
inc
cmp
push
cld
mov
mov
xor
stc
inc
sbb
mov
js,pt
fdivrl
lret
out
and
lahf
dec
cmp
push
aad
cs
pop
std
jbe
imul
mov
fistpl
cmpsb
xor
pop
lea
fiadds
int
dec
sub
imul
xchg
je
xchg
mov
push
dec
test
xor
js
sti
sub
notl
push
cmp
adc
popa
bnd
jecxz
and
xchg
pop
fstl
iret
je
push
pop
cmp
fistpll
sub
rcr
out
stos
mov
dec
or
sub
and
push
mov
outsl
scas
dec
aad
pop
dec
mov
ss
cmp
mov
mov
xchg
cmpb
add
mov
fndisi(8087
fs
mov
cmc
inc
mov
mov
inc
add
fldcw
xchg
push
bswap
call
test
bound
aas
pop
aad
inc
cmp
imul
rcrl
jmp
dec
dec
push
in
mov
jnp
int
inc
ficoms
inc
fmulp
popf
jne
cmc
lea
loope
stc
mov
inc
lods
rolb
jmp
cmp
sbb
cmp
xor
jge
fbstp
xchg
aaa
or
cmp
mov
jns
and
scas
xor
scas
js
cmp
data16
or
aad
inc
xchg
inc
mov
add
mov
in
leave
mov
inc
out
das
out
testb
cli
popf
sti
adc
fisttps
int3
cmp
out
fisttps
les
test
ljmp
lea
dec
repnz
adc
jecxz
cmp
mov
pop
lcall
sub
inc
sbb
cwtl
ds
nop
test
pusha
xchg
js
jmp
jl
push
push
into
scas
movsb
adc
bound
cmp
hlt
mov
fs
scas
int
push
dec
xchg
cmc
cmp
fstpl
lcall
stos
sub
and
or
xor
clc
nop
and
push
xchg
sbb
repz
enter
pop
pusha
sbb
jp
loop
roll
or
cmc
aaa
das
loop
addl
jecxz
mov
cmp
lods
add
fwait
pop
add
cmp
lods
cs
or
dec
xchg
mov
pusha
mov
fwait
mov
or
xor
mov
or
loope
stos
outsl
gs
sub
test
mov
out
cmp
int
aam
sub
jl
imul
dec
and
clc
in
mov
rorl
or
mov
xchg
adc
dec
aad
jp
lret
aad
sahf
adc
cmpsb
popa
push
call
adc
in
sub
mov
shrb
cmp
or
jno
or
mov
or
mov
sub
xchg
pusha
mov
call
sti
lcall
out
or
cld
sarb
xor
mov
in
and
gs
pop
xlat
js
int
cmp
jnp
and
sub
mov
loopne
jne
fbld
xchg
popf
pop
incb
mov
out
inc
sbb
cmpsb
ja
jle
jns
fucomp
repz
imul
inc
gs
hlt
fists
bound
sbb
mov
cli
cmc
xor
xchg
inc
imul
mov
je
outsl
mov
insb
inc
xor
cmp
movsb
ret
mov
out
or
jbe
sbb
push
fimuls
cmp
scas
scas
xchg
icebp
jbe
push
or
js
xlat
xor
fbld
and
dec
dec
cs
xor
pushf
in
xchg
fistpl
js
mov
loopne
int3
jb
and
jge
arpl
int3
and
xchg
xor
or
imul
test
loop
popf
inc
notb
mov
in
pop
or
into
inc
mov
mov
or
adc
cmp
xchg
jns
lock
push
or
push
fwait
push
push
add
repnz
push
xor
xchg
test
vaddpd
mov
scas
or
mov
inc
cwtl
push
sbb
dec
stc
shl
dec
inc
sub
jmp
ret
add
out
cmpsb
inc
inc
lahf
push
mov
push
mov
mov
out
cmp
bswap
lds
subl
sarl
mov
pop
adc
rorb
cmc
sub
add
pop
adc
mov
sub
std
hlt
mov
dec
xchg
add
and
xor
sti
push
cmp
and
mov
xchg
les
jmp
inc
and
pop
sti
aad
lcall
cmp
adc
jmp
sub
xchg
mov
xlat
jmp
and
sbb
sti
push
cmc
loop
sbb
push
repz
scas
sbb
jmp
push
out
push
repz
pushl
dec
insl
jnp
jecxz
inc
icebp
and
mov
inc
or
cmp
popf
xchg
nop
negb
imul
das
jl
or
das
and
sub
xor
popa
inc
pop
in
dec
inc
mov
out
jno
loope
dec
fs
arpl
fistl
into
mov
into
jns
imull
pop
dec
movsb
arpl
dec
adc
js
dec
xchg
dec
bound
cs
fistl
leave
mov
shll
jl
mov
lea
xchg
sbb
xor
mov
adc
pop
and
pop
rep
jge
jae
sub
and
sbb
insb
inc
sub
cmp
dec
rcl
out
mov
adc
scas
repz
jl
ret
out
push
sbb
pop
test
fsubs
add
xchg
sub
pop
sbb
pusha
lds
stc
pop
or
fcoml
add
and
mov
or
fcoms
cld
adc
jmp
mov
jp
mov
js
or
ret
int
clc
jo
mov
mov
xor
shr
sub
pop
adc
shl
mov
pxor
es
test
mov
movsb
cwtl
cmp
imul
out
xchg
adc
pusha
xchg
sti
std
sbb
gs
cmp
mov
xor
cli
mov
push
lods
sti
out
cmp
lcall
xchg
dec
hlt
pop
lcall
mov
imul
mov
jg
cs
gs
clc
fdivrp
cmc
pop
movsb
cmpb
imul
stos
cmp
inc
in
bound
mov
fwait
shrb
inc
adc
fcos
je
xchg
or
in
xchg
cmp
lret
xor
in
testb
hlt
sbb
mov
dec
mov
adc
lods
or
out
out
jmp
pmovmskb
stos
aam
cmp
jge
mov
into
outsb
xchg
pop
add
mov
stos
mov
outsl
mov
bound
into
or
jnp
repz
or
pop
popa
loopne
sti
fistpll
or
xchg
out
insl
sub
xchg
xchg
cwtl
les
xchg
pop
pop
or
mov
insb
lcall
lods
sub
shlb
mov
jne
sbb
fists
nop
out
lea
cld
shl
aad
nop
sub
aam
in
pop
loopne
jl
mov
std
sub
pop
test
adc
in
mov
or
dec
test
push
clc
cvtps2pi
rorb
cmpsl
lcall
jns
loope
lret
stos
ljmp
nop
xor
outsb
aad
hlt
out
adc
xor
lcall
aam
xchg
xchg
lea
cmpsl
dec
sub
push
mov
adc
dec
jns
cmc
int
popl
addr16
fdivl
lock
cwtl
fwait
push
movsb
repnz
jg
mov
sbb
test
push
iret
jmp
andb
sbb
cmp
and
les
fs
popa
and
dec
mov
lret
out
mov
cmp
pushl
scas
cmc
push
inc
xor
jmp
mov
outsl
add
push
inc
pop
fstpt
sbb
fwait
popa
push
test
movsb
scas
sti
fstl
fucom
push
mov
es
xor
jl
fcomps
inc
adc
cmp
lret
fmuls
push
maskmovq
sbb
xchg
loop
jns
aad
int
aas
inc
movsb
fsubrl
setae
xchg
shrl
mov
push
shlb
leave
fstp
cmp
jb
jmp
lret
notl
call
aad
gs
leave
jns
loop
in
or
insl
call
inc
jl
movl
push
popa
dec
in
inc
push
mov
imul
pop
dec
into
cmp
pop
mov
jl
and
inc
sar
aad
imul
fwait
rcl
daa
adc
sub
jne
outsl
cmc
mul
inc
inc
sub
jo
lret
jae
popa
fneni(8087
out
add
push
adc
and
add
sbb
mov
mov
and
jl
and
lret
mov
mov
repnz
popf
mov
inc
sti
cli
outsl
mul
pop
or
neg
sti
cmc
cmpsb
xor
repnz
and
jmp
cmc
mov
add
outsb
iret
fidivrl
call
sub
mov
fs
cmc
adc
pop
xor
mov
and
test
in
sub
mov
in
cmp
adc
and
pop
outsl
pop
lock
push
adc
inc
aad
into
jmp
mov
jae
push
lcall
loopne
enter
add
inc
lea
mov
push
adc
out
xor
jmp
sbb
mov
neg
push
aad
out
clc
adc
pop
popa
inc
insb
mov
imul
in
rcl
sub
mov
repnz
aad
mov
sbb
lcall
push
and
adc
sbb
sbb
sbb
mov
adc
xor
aad
push
rcll
cmp
mov
stc
sub
inc
pop
xchg
xchg
fwait
mov
stos
xchg
xor
fdivrs
rolb
fsubrs
add
shrl
push
out
dec
rcrb
popf
mov
adc
lret
xchg
call
lahf
out
imul
pop
dec
mov
cmc
divb
pop
js
jno
mov
add
xor
imul
xchg
adc
mov
cmp
xor
and
int
scas
stos
push
adc
jp
dec
xchg
or
negb
xchg
es
add
lock
cwtl
movsb
cmp
cmp
mov
sub
lcall
pop
xchg
or
aad
popf
jae
arpl
repnz
les
lahf
and
push
std
out
jo
fmull
stos
and
mov
adc
pop
and
imull
nop
mov
jg
cmp
mull
mov
addl
out
jl
xor
push
mov
jmp
jle
dec
cmp
scas
je
sub
shrl
mov
repnz
add
aaa
xchg
push
cs
mov
cmc
ljmp
les
addr16
adc
pop
inc
mov
cltd
xor
outsl
insl
sub
int
bswap
nop
xchg
mov
inc
pop
pop
jns
xchg
jbe
arpl
dec
mov
push
pop
punpckldq
and
out
movsb
leave
aam
into
xchg
out
bound
pop
mov
insl
mov
sub
jo
loop
clc
mov
pop
xchg
sub
rcl
push
push
lods
jnp
aam
pop
jge
imul
sub
mov
add
mov
icebp
cmp
mov
sub
jns
and
sbb
arpl
mov
mov
xlat
push
or
rcrb
stc
or
sar
push
add
stos
inc
cmp
into
sub
popa
or
mov
inc
js
mov
in
pop
and
dec
lahf
cmc
inc
sbb
mov
fnstsw
pop
dec
mov
and
je
dec
sbb
jl
les
xor
or
iret
dec
pop
cmc
out
adc
or
jmp
bound
mov
inc
dec
push
push
xlat
sbb
stc
aam
jl
aad
insl
rclb
mov
xchg
mov
int3
mov
int
inc
stc
pop
stos
shll
add
cmp
dec
pusha
movsb
scas
aas
mov
pop
pusha
push
incb
sbb
jp
dec
and
adc
or
ds
das
sub
lret
cmp
inc
inc
jbe
lahf
mov
xor
cmp
test
mov
arpl
sub
xchg
in
inc
ret
push
out
xchg
cmp
in
jl
sti
les
jl
pop
xor
xchg
movb
push
cmpsb
push
gs
ret
in
call
jnp
jnp
aam
cld
jle
jb
xchg
dec
aam
mov
mov
or
das
nop
inc
mov
movsl
ljmp
xchg
inc
mov
dec
sbb
adc
in
sbb
imul
inc
xchg
ficompl
and
sahf
push
dec
int
cmp
and
setno
call
js
lahf
aad
popa
insb
insl
cmp
push
imul
clc
cli
rcrl
cmp
clc
fsubrl
sti
aaa
push
sbb
add
cmc
mov
mov
inc
daa
mov
ljmp
sub
cmpsb
cvtps2pd
gs
mov
notl
xchg
test
cwtl
lods
lods
fs
loopne
jl
arpl
add
push
nop
pop
mov
das
lahf
pop
cvtdq2ps
pop
aam
imull
sbb
sarb
dec
aad
jecxz
jae
adc
shl
iret
cli
pusha
cmp
in
inc
mov
divl
jecxz
xchg
and
fidivl
imul
int3
cltd
dec
xchg
ror
hlt
adc
lds
adc
jmp
imull
scas
inc
pop
fsubp
xor
push
cmc
add
push
clc
dec
icebp
mov
fstps
pop
jl
adc
jl
lods
or
sbb
jg
cmp
into
inc
nop
mov
inc
imul
xor
dec
adc
mov
ror
mov
xchg
leave
and
sbb
sbb
jmp
jecxz
mov
mov
mov
into
dec
lcall
andl
xor
aaa
inc
push
icebp
mov
iret
cmc
sahf
je
dec
div
fcmovnb
add
nop
arpl
add
or
stc
hlt
popa
sbb
cli
cmc
ds
jno
rorb
add
sub
int3
jnp
push
mov
ja
mov
imul
or
xor
repnz
and
xor
push
rol
das
iret
mov
cmpsb
cmp
into
cmc
mov
xorb
outsl
movsl
not
push
in
and
hlt
cmp
cmp
jecxz
pop
cmp
scas
das
xchg
nop
cld
arpl
mov
jns
xor
cmc
xor
sub
push
addb
mov
mov
cmp
push
mov
pop
in
or
inc
loope
out
imul
std
adc
iret
popa
int3
push
lea
out
jge
pop
fldcw
dec
push
aam
ljmp
insb
cmp
sahf
dec
pushl
mov
cmc
push
sti
xchg
mov
pop
mov
or
jl
adc
dec
adc
adc
loopne
pushf
sub
and
inc
cmp
adc
jno
jl
mov
xchg
mov
add
lods
mov
stos
push
es
and
cli
test
dec
and
out
mov
mov
pusha
push
mov
lret
cmpsb
xor
ja
fdivrs
sbb
int
in
cmp
cmp
and
pop
fistpl
mov
jnp
mov
sub
dec
fs
loope
xchg
into
xchg
jno
movsb
sub
repz
imul
imul
rorb
or
fstl
inc
xchg
sbb
imul
mov
aas
push
add
pusha
cmp
fdivrl
dec
scas
aam
shll
or
sub
jp
out
pop
addl
gs
jne
xchg
daa
mov
popa
jg
push
mov
mov
into
int
adc
xor
inc
int
movsb
or
imull
sti
clc
jg
movsb
adc
xor
jg
xchg
mov
out
xlat
pusha
pop
mov
pop
fwait
mov
in
push
push
test
pop
sarb
decl
push
pop
jge
aad
clc
cmpsb
mov
or
push
jge
mov
cmpsb
lahf
xor
enter
add
lret
sbb
push
xchg
rclb
sub
mov
lcall
push
or
sti
lcall
shl
fsubrp
push
lds
mov
call
aad
or
dec
arpl
pushl
mov
xor
dec
test
jp
mov
mov
pop
jns
mov
jne
pop
cltd
xchg
test
mov
in
adc
mov
and
popl
pop
mov
sbb
sbb
js
xchg
stos
rcrl
aad
xchg
ret
test
in
mov
xchg
icebp
xchg
call
sub
inc
jnp
adc
sbb
popl
aad
nop
push
mov
push
pop
adc
ret
pop
pop
sbb
mov
sub
mulw
xchg
outsl
stos
and
adc
clc
mov
mov
cltd
pushf
outsb
xchg
cs
lods
pop
mov
ds
push
jl
bound
fists
mov
xor
arpl
test
push
rorb
out
xor
mov
and
mov
or
out
inc
cmpsl
sbb
scas
jg
flds
adc
aad
fdiv
xchg
jl
pop
out
std
and
fistl
or
xchg
mov
cmp
push
nop
xchg
adc
shll
sbb
fsubs
push
clc
cmp
jns
xor
xchg
nop
aam
jns
push
ss
dec
lods
in
cli
dec
ja
shl
or
xchg
jmp
subb
add
test
push
into
call
popa
jnp
jmp
rcl
bound
mul
aaa
cld
pusha
stos
inc
js
mov
dec
mov
repnz
and
stos
sbb
jbe
ljmp
fsubrl
cmp
test
mov
lcall
xor
lea
push
movsb
mov
fisubrs
mov
mov
jnp
cmp
jmp
push
adc
xchg
bound
add
or
into
mov
pmaddwd
pop
fidivl
lcall
imul
inc
mov
jae
adc
lahf
fistps
movsl
out
pop
cmc
sbb
add
mov
ret
sub
lea
cmp
cltd
into
rcl
imul
cmp
mov
or
inc
daa
ljmp
fmull
repnz
mov
or
insl
dec
push
mov
or
sub
xchg
bound
out
dec
pop
jp
inc
xchg
add
cmc
jle
push
fdivrs
movsl
std
cmp
outsl
push
aad
popa
fnstenv
xorl
into
jmp
pop
add
adc
xor
or
sbb
outsl
sbb
lcall
inc
sub
push
fucomi
gs
arpl
add
loope
cmc
pusha
popa
aas
adc
repnz
arpl
xor
jp
jmp
rcl
daa
sti
mov
jmp
stos
std
imul
lret
xchg
movb
xor
pusha
loope
inc
call
push
add
rcrl
idiv
xchg
sub
out
lret
push
lock
sbb
leave
push
push
roll
push
pop
push
sub
mov
and
push
adc
loope
xchg
or
imul
inc
std
in
push
lods
notrack
lret
sahf
push
mov
scas
adc
pop
lock
sub
fmulp
push
mov
mov
int
mov
xor
aam
and
lret
jmp
es
test
in
mov
cmp
sahf
xchg
in
rolb
sbb
xchg
dec
push
fdivs
movsl
mov
ffree
push
inc
push
ficompl
mov
cli
sub
mov
and
ljmp
sub
ret
std
adc
in
add
or
sti
cli
stos
div
inc
pop
cmp
fsubr
cmp
pop
test
cltd
or
out
aam
sbb
rorl
prefetch
or
or
nop
or
shrl
mov
sti
inc
sti
mov
jg
cmp
inc
scas
jle
jae
push
test
ret
lds
and
adc
sub
cmp
shrb
push
cmp
pop
jge
decb
ljmp
mov
shlb
rorl
arpl
push
push
lret
les
in
adc
adc
sub
rolb
sbb
loope
das
sbb
xchg
dec
push
decl
int
mov
bound
rep
push
sti
or
jp
pop
mov
push
shrb
push
ret
rcrb
push
jno
aad
cmp
repnz
jl
adc
jmp
cs
lcall
xor
mov
shlb
xor
inc
or
jbe
pusha
outsb
cmc
movsb
iret
test
jne
adc
ljmp
add
xor
add
and
movsb
inc
add
mov
or
movsb
cwtl
fimuls
jmp
enter
cmp
or
psllq
iret
out
ret
adc
and
out
dec
pop
mov
in
pop
in
push
cmp
sub
int
ret
xchg
fdivl
sbb
and
in
ja
mov
loope
mov
inc
jo
add
jmp
popa
in
xchg
popf
xor
inc
sbb
mov
call
push
and
or
xchg
lret
lods
es
les
inc
xchg
addr16
jmp
rorl
xchg
push
jmp
pop
inc
mov
iret
imul
xchg
les
or
mov
mov
jge
push
ja
in
ja
cmp
in
mov
mov
inc
clc
fwait
lcall
js
das
sbb
lods
mov
mov
shlb
mov
cmp
cmp
xchg
adc
fistpll
inc
lahf
stc
mov
xchg
icebp
jmp
aad
and
cmp
daa
jecxz
test
int
cmpsb
call
push
mov
cmp
lods
fsubrs
rclb
dec
aaa
mov
push
call
mov
xchg
push
xchg
dec
push
cmp
loopne
insb
push
pusha
popf
jg
stc
stc
sub
or
js
add
push
out
jg
ret
popa
adc
pop
and
xchg
scas
adc
xchg
mov
and
push
in
int
mov
das
dec
in
sub
clc
sbb
jmp
or
sub
mov
divb
jg
jno
push
and
xor
stc
or
int3
data16
and
push
in
cmp
popa
inc
push
jg
popa
dec
cmp
int
fcmovne
fstpl
fmuls
xchg
sbb
adc
or
sbb
dec
xchg
pop
pop
ljmp
test
push
fdivrp
fs
lret
xchg
adc
jecxz
ja
lock
cmp
jecxz
fiadds
push
outsl
cmp
pop
jle
lds
das
xchg
jp
adc
vmaskmovdqu
stc
negl
test
es
mov
iret
dec
or
push
inc
fmull
repz
incl
cmp
dec
pop
adc
pushf
inc
lahf
and
jl
loop
mov
out
jno
mov
shlb
cmpsl
adc
adc
adc
mov
mov
dec
or
enter
jg
cmp
and
mov
lcall
push
stos
imulb
inc
lahf
hlt
jmp
or
daa
lret
xchg
int
sub
lods
jge
jg
mov
iret
inc
add
outsb
xchg
mov
pcmpeqw
and
cli
push
xchg
movsb
inc
pop
cmp
mov
daa
shlb
repnz
int
aad
xchg
roll
cmpsl
test
push
addr16
mov
mov
adc
mov
push
cmp
jl
push
jmp
daa
aad
test
mov
mov
and
jns
mov
cmc
ja
add
lahf
out
or
loopne
or
or
add
shll
scas
pop
sub
xor
dec
popa
xchg
dec
dec
aad
sar
int3
out
adc
imul
dec
scas
scas
or
cmp
cwtl
push
jp
pop
aad
or
ljmp
loopne
test
jnp
mov
sbb
cmc
loop
jg
stos
push
mov
out
arpl
inc
or
mov
cld
popa
and
push
xchg
xchg
jo
ficoml
mov
fisttps
dec
push
lock
cmp
out
pop
xor
cld
adc
or
imul
testl
adc
subl
pop
in
jae
repz
aad
std
sbb
sub
mov
mov
out
scas
rorb
xchg
pushf
xorb
inc
add
outsl
sub
pop
pop
add
lock
push
int
inc
push
xchg
insl
sub
call
mov
faddl
dec
dec
stos
sbb
cmpl
pop
dec
cli
cmc
std
push
outsl
adc
and
sbb
rcll
lahf
lods
pop
add
sub
and
imul
mov
pop
mov
cmp
sbb
jecxz
dec
mov
adc
stos
xchg
and
mov
xchg
pusha
cwtl
cmp
xchg
in
push
inc
pandn
and
out
cmp
add
or
in
mov
fwait
or
sbb
jno
jg
outsb
xor
arpl
rorl
loopne
push
test
xlat
pushf
lahf
xchg
inc
cmp
into
movsb
pop
cltd
std
mov
cmp
push
lret
lea
in
add
popf
testb
mov
mov
sbb
imul
pop
mov
adc
mov
adc
lret
dec
xor
ja
adc
in
xchg
arpl
enter
ss
sub
into
sti
leave
cmc
fistl
mov
stos
or
inc
fdivrs
out
pop
sbb
pushf
adcl
push
jb
jns
enter
push
mov
lods
and
mov
addr16
push
mov
in
jmp
lods
xchg
les
xlat
or
orb
jecxz
cli
push
stos
mov
repnz
icebp
lods
int
pushf
xor
fildll
mov
stc
rsm
xor
mov
mov
in
movsb
int
out
dec
mov
cs
adc
cmp
mov
inc
pop
rcr
cmc
lret
cmp
pushf
fwait
icebp
or
sbb
add
xchg
dec
jmp
xchg
mov
or
cmc
sub
jp
popa
push
cltd
xchg
sbb
sti
call
in
inc
mov
jl
cmpsl
push
inc
pushf
push
lods
or
cmp
cmpsb
jmp
xchg
stos
inc
push
xchg
sar
push
adc
cmp
xchg
daa
ss
int3
lods
mov
mov
jmp
jae
and
mov
aad
pop
popf
jo
lds
jge
outsb
and
divb
mov
sub
sub
lods
gs
xchg
inc
js
iret
add
jge
push
lcall
movsl
sub
jmp
cmc
or
lock
mov
ds
in
test
push
into
xchg
jp
jecxz
aad
adc
and
dec
mov
dec
mov
lock
in
out
or
insb
cmp
mov
inc
cld
pmaxub
mov
mov
adc
add
cmp
xchg
fsts
outsl
aad
loope
es
sbb
add
cmp
sub
push
std
cli
sub
dec
insl
mov
pushf
sbb
ret
mov
xchg
push
cmp
loopne
imul
jns
das
das
mov
add
xor
push
vmread
daa
and
stos
loopne
adc
inc
call
dec
add
mov
in
loope
jnp
imul
stc
lcall
mov
insl
or
arpl
add
push
cli
mov
stc
fwait
jle
movsb
inc
add
loopne
lea
sahf
mov
cmp
fistl
negb
int
pop
mov
imul
cs
cmp
and
add
call
movsb
stos
dec
sbb
lcall
sbb
test
js
dec
int3
mov
test
sub
mov
rol
jnp
jo
mov
and
xchg
push
sub
xchg
xor
mov
imull
je
in
or
je
mov
adcb
subb
cmc
mov
aas
dec
cmp
push
jne
pop
and
jg
jge
lcall
push
subl
into
in
push
fs
jbe
or
rcl
mov
leave
push
lods
stos
inc
arpl
into
test
mov
jl
out
dec
loope
scas
cmp
push
or
cmpsb
fstps
mov
xor
ja
lret
cwtl
addr16
in
sbb
dec
mov
cmc
rcl
inc
outsb
mov
dec
push
aas
cwtl
cmp
sub
or
mov
call
jmp
and
das
cmp
xchg
sti
fisubrs
popa
push
aad
xchg
cmp
adc
mov
mov
xor
cmp
in
mov
push
add
push
shl
inc
sub
cltd
sub
mov
je
lret
sbb
out
sahf
aad
mov
jmp
add
dec
sub
adc
mov
or
call
test
testl
movsl
nop
pop
jno
add
lcall
scas
and
inc
lahf
and
fs
fwait
push
into
pop
iret
push
pop
decb
pusha
and
jnp
divl
push
pop
or
xor
xlat
fbld
vpsadbw
fistpll
pop
aas
sahf
dec
imul
mov
sbb
stc
push
sar
pop
fldcw
orb
xchg
add
push
adc
sti
aas
adc
test
xor
outsb
xchg
mov
sbb
shlb
cmpsb
outsl
sbbb
dec
pusha
dec
cmp
dec
loope
addr16
dec
or
push
cmpsb
fnstcw
ljmp
jbe
outsb
xchg
mov
mov
xchg
mov
sti
aad
shl
pop
daa
daa
cld
cmp
xchg
movsl
mov
in
jmp
arpl
inc
loopne
dec
std
mov
lock
rorl
inc
jne
fwait
and
call
add
lock
daa
or
inc
push
ss
mov
aad
cli
pusha
into
jmp
stc
mov
icebp
jmp
jg
in
aad
aad
jl
aam
pop
lods
mov
dec
dec
xchg
shll
mov
das
or
xchg
or
cs
push
and
inc
adc
xor
cmp
and
dec
push
adc
sub
cmp
lar
adc
and
mov
jno
inc
rcrl
sbb
jb
sbb
out
and
cld
mov
mov
inc
add
daa
and
jge
jl
out
push
push
jns
push
mov
add
jae
adc
lahf
std
xchg
mov
or
or
pushf
jmp
xor
lea
sbb
inc
std
leave
hlt
ljmp
mov
aad
sub
sub
leave
arpl
cmc
adc
ds
pop
add
sbb
push
lcall
inc
popa
scas
add
imul
mov
aam
pop
jmp
loopne
test
cmp
push
lds
push
sbb
pop
pusha
push
dec
mov
scas
add
cs
xchg
or
sbb
lret
push
out
mov
into
pop
loope
xchg
lahf
cld
xchg
in
js
add
pop
or
mov
sbb
xor
jb
and
std
cmp
xchg
imul
sub
cmc
ljmp
icebp
shl
pop
sub
pop
sahf
leave
and
mov
ret
imul
pop
lods
sbb
movl
rcl
sahf
call
cs
pop
and
cwtl
cmp
cli
xor
into
cltd
sub
aad
in
cmp
push
or
jbe
adc
sub
iret
jl
loopne
imul
dec
sahf
mov
inc
movsb
dec
std
or
cmc
repnz
lods
push
mov
cmp
je
data16
lds
cmp
je
sbb
or
test
ja
or
cmpsb
adc
in
xchg
sub
pop
loopne
out
push
adcl
mov
push
jmp
das
add
or
aad
inc
les
xchg
sahf
fnsave
lods
xor
or
stos
push
mov
lock
fsub
in
icebp
or
mov
pushf
jo
pop
dec
dec
int3
enter
add
mov
shrl
pushf
cltd
fwait
sub
sti
mov
stos
pop
push
fildl
sub
cmc
das
imulb
pop
sub
je
lock
rolb
or
call
pop
add
mov
notb
dec
cmp
sarb
cld
in
clc
stos
push
sbb
loop
adc
xlat
cltd
xor
lods
mov
scas
iret
pop
aad
stc
xor
imul
jae
push
sub
scas
cmc
dec
dec
xor
push
cmp
mov
repnz
lods
xor
call
outsl
cmp
sub
adc
out
jnp
lahf
call
add
and
mov
sarl
lahf
cmc
fwait
mov
pop
cwtl
mov
xchg
fyl2x
mov
dec
add
in
std
push
lret
sbb
lcall
adc
aad
push
xchg
jp
in
jns
inc
or
fisubrs
pop
xchg
sub
js
jecxz
xchg
xchg
xor
mov
scas
mov
into
rcll
testl
pop
or
fimuls
xchg
pmullw
lcall
movsl
dec
add
jno
pop
cmpsb
popf
mov
call
divl
test
jo
xchg
mov
xor
mov
pop
sub
ljmp
les
or
nop
sub
ja
xchg
aaa
out
dec
or
clc
int
push
cmp
cwtl
push
filds
dec
daa
pop
fwait
out
push
mov
mov
mov
mov
popa
daa
add
rcll
sti
dec
cs
cmp
stos
xchg
sub
or
loope
nop
jge
jge
imul
scas
add
xchg
jb
push
cmc
cmpsl
mov
movsl
test
jl
xchg
mov
push
lods
jle
lock
dec
push
out
js
push
push
lods
lret
xchg
testl
subb
loopne
jmp
cmp
fidivs
test
rorl
mov
mov
push
shr
fldz
in
jge
shrl
jnp
xchg
xchg
pmovmskb
pop
and
pusha
leave
lods
repz
and
int3
mov
repz
into
xchg
pusha
popa
aam
call
dec
sub
xchg
cmp
cld
or
add
psraw
add
push
xchg
pop
fimuls
in
loop
call
xchg
ret
add
mov
add
out
sbb
add
jmp
mov
fiadds
jno
scas
icebp
push
dec
aad
mov
xchg
loopne
sahf
or
test
test
sbbb
lahf
fsts
push
popf
cs
push
fldcw
loope
mov
lahf
jle
lret
mov
out
sub
inc
ret
repnz
aam
inc
push
repz
cmp
scas
fwait
push
inc
leave
rolb
shr
rcrl
shll
push
push
mov
aad
add
jns
sub
call
aad
sub
clc
sub
push
pop
mov
cmc
xchg
fnstsw
aad
arpl
cmpsb
and
add
scas
or
mov
mov
adc
fwait
mov
out
xchg
dec
xor
lds
in
out
cmpsl
inc
insb
pop
in
cmp
addr16
stc
iret
push
and
push
inc
push
mov
add
push
aad
jnp
mov
int3
rcll
aam
mov
loopne
testb
push
in
or
pop
les
cmp
jg
push
adc
jo
and
mov
js
and
mov
sahf
or
add
sarl
push
dec
jmp
ljmp
movsl
fwait
addr16
and
push
js
inc
shl
dec
and
les
jae
test
inc
into
or
pop
imul
int
cs
stc
js
fdivrl
dec
xor
lret
jmp
jmp
aad
add
nop
xlat
or
out
inc
push
mov
sub
dec
cmp
jl
imul
mov
je
lods
test
lock
add
loopne
pusha
adc
test
jbe
mov
int3
lret
shlb
mov
jns
lret
cmp
ret
or
js
pushf
push
xchg
loopne
test
sti
xchg
ret
cmp
dec
fidivrs
pop
dec
add
and
xchg
mov
jge
adc
adc
cmpl
stos
cmp
out
mov
cmp
jns
inc
test
sub
loope
mov
jb
push
rolb
sahf
push
mov
sahf
dec
in
fcmove
add
fidivrs
lret
and
arpl
fcmovu
mov
rcll
mov
xchg
inc
xor
mov
push
mov
sub
adcl
bound
stos
rolb
add
sub
xchg
imul
jb
or
test
dec
fstp
xchg
movsb
and
aam
ss
testl
push
cmp
pop
sub
and
insb
jl
fwait
adc
loop
cmc
mov
inc
push
int3
xor
sahf
jno
insb
mov
iret
call
xchg
loopne
scas
insl
cmp
idivl
jns
push
pop
call
jbe
xchg
and
pop
dec
sbb
cmp
out
sub
push
sub
leave
mov
movsl
mov
jl
adc
sahf
jp
ss
in
sti
test
jae
jle
mov
xchg
leave
scas
or
clc
in
xor
xor
and
cs
or
xor
inc
dec
push
adc
mov
test
dec
out
jne
xchg
xor
aad
mov
mov
jne
js
and
push
push
adc
adc
nop
xchg
aam
sub
gs
pop
mov
addr16
jns
fmull
adc
mov
pop
mov
into
pop
mov
mov
nop
jmp
icebp
out
iret
cmc
push
mov
movsw
into
aad
adc
inc
dec
pop
push
cs
pusha
fcoml
push
imul
xor
in
pop
or
add
sub
push
add
push
mov
movsl
cmp
movsl
pop
and
add
and
cmp
mov
cmp
dec
sub
ret
test
sub
xchg
cmpsl
in
push
test
add
and
stos
mov
insl
arpl
jmp
jne
fimuls
push
push
mov
stos
in
imul
int
sbb
sbb
or
xchg
pop
repnz
sub
out
cmpsl
push
lahf
loope
mov
or
rcrl
push
pop
out
or
sub
mov
add
pop
sbb
mov
movsl
mov
dec
sub
adc
movsl
mov
mov
dec
aad
jo
in
jp
jo
jle
out
or
das
pusha
gs
paddusw
int
sbb
push
add
sar
shrb
sbb
fbld
cmpsb
mov
in
aam
ds
pop
int
adc
fs
jnp
push
jmp
test
scas
les
pop
jo
iret
cmc
daa
mov
fistpll
jns
or
xor
jno
pand
push
xor
lds
stos
push
xchg
pop
jno
pop
inc
xchg
cs
xchg
sbb
test
fdivrl
arpl
xchg
cmp
jle
fistps
shr
std
sbb
sbb
mov
shl
fucomi
in
fmuls
push
mov
push
sbb
cltd
sahf
adcl
outsl
lcall
scas
mov
adc
cltd
cli
xchg
push
shll
pop
mov
fwait
mov
pop
andb
fs
jmp
and
cmp
sub
pop
stc
add
jne
xchg
add
add
and
movsb
adc
repz
cmc
sbbb
mov
adc
bound
pop
mov
sbb
fisttpl
cmp
push
add
int
imul
and
in
mov
and
test
push
pop
fnsave
mov
jb
mov
jle
cmp
jae
cli
loop
mov
insl
pop
and
cmc
jbe
mov
addl
adc
aas
sbb
gs
add
or
xchg
out
aam
push
add
mov
jecxz
inc
jae
cmp
cli
push
popa
shr
lock
push
dec
jmp
scas
xor
add
fld
jo
jbe
dec
aad
aam
jl
pushf
cmp
into
mov
xor
pop
add
cmp
push
lods
dec
xor
xor
push
xor
fistps
cmpsl
sub
jne
testl
fldcw
fsubp
into
test
sbb
or
xorl
cmp
mov
test
sbb
pop
push
into
lods
jae
push
mov
ret
rclb
lds
mov
inc
fwait
arpl
call
inc
adcb
cmp
xadd
jne
xor
test
xchg
dec
bound
fwait
mov
add
notl
es
mov
xchg
arpl
mov
mov
adc
cmp
push
aad
js
push
arpl
or
int
cmp
mov
jle
mov
adc
ficomps
xchg
lds
cli
mov
sbb
xor
and
push
jo
mov
lea
mov
adc
xor
shlb
fcmovnbe
lods
call
sbb
sub
and
mov
lahf
popf
mov
dec
cmp
popa
or
insl
insl
mov
xchg
movsl
push
sbb
movsb
push
mov
mov
stos
iret
bound
dec
mov
xchg
sub
xchg
shlb
mov
rolb
xchg
aad
aam
jecxz
or
test
enter
lahf
scas
das
jmp
cmc
xchg
aad
mov
cmp
mov
mov
lahf
xorb
lahf
insl
es
aam
gs
test
movsl
pop
push
lret
in
cmp
pop
pop
cmp
stc
dec
mov
cmc
iret
mov
shrl
add
enter
testl
lds
and
arpl
jp
mov
stos
nop
jmp
cmp
daa
ljmp
cmp
popf
mov
fwait
test
jns
xchg
subl
jg
sub
fmuls
jle
ret
sub
or
orb
xchg
imul
iret
pop
lods
cmc
lock
outsl
inc
jp
cmpsb
mov
in
ja
fsts
es
in
aaa
adc
stos
gs
push
sbb
and
xor
cli
test
outsl
dec
ja
cmp
mov
adc
rorl
sub
sub
cmc
icebp
push
jo
pop
aad
clc
int
cmp
xor
cmc
dec
inc
ret
lcall
int
cmp
dec
cmc
or
sbb
cmpsl
push
pop
mov
cmp
inc
lret
cmp
sub
movsb
fimuls
shll
arpl
cwtl
inc
pop
std
mov
push
sbb
xchg
xor
fs
pusha
setp
test
fimull
mov
xchg
mov
mov
and
sub
shrl
imul
fstpl
out
adc
and
xor
cld
and
fs
dec
mov
sub
aad
pop
xor
xchg
jge
jmp
pop
mov
and
fisubrl
dec
out
fst
xchg
hlt
push
inc
jp
xor
jmp
xchg
or
inc
imul
sbb
sub
dec
mov
mov
fldl
xchg
mov
dec
shrl
mov
cmpsl
cmp
jo
jns
mov
dec
pop
jns
iret
or
jnp
mov
decl
push
mov
jl
sti
mov
inc
jno
mov
int
loop
sarl
aam
dec
sub
and
sbb
push
jne
cwtl
jns
testb
js
int
cmpxchg
push
and
mov
in
aad
fwait
xchg
test
xchg
insb
aas
adc
lds
xchg
pop
leave
xchg
xor
sbb
nop
popl
lods
push
cmp
and
das
and
jle
jae
into
dec
sub
in
aad
movb
jnp
sbb
insl
or
movsl
cmp
mov
mov
in
into
int
cmp
pop
test
push
pusha
mov
rcl
push
negl
aam
fcmovb
pop
negl
mov
ljmp
cmc
mov
jnp
xor
push
nop
xor
mov
out
mov
xchg
in
nop
out
test
adc
cld
out
push
out
adc
and
stos
out
xchg
fdivl
push
adc
dec
lods
sti
jmp
shlb
shrb
xor
fadd
mov
dec
hlt
sbb
sub
in
dec
sbb
adc
inc
stos
adc
loopne
jmp
lahf
and
mov
pop
outsl
xlat
loopne
fcomp
insb
mov
outsb
int
jg
lock
mov
pop
pop
push
jnp
inc
or
push
hlt
xor
pop
cmp
sti
das
sbb
sahf
fxch
add
fstpt
ljmp
xchg
in
mov
hlt
xchg
cltd
pop
add
lods
scas
ds
mov
ret
mov
shlb
hlt
ss
lcall
xor
hlt
aad
push
cmpsl
xchg
xchg
lods
out
push
mov
mov
fbstp
in
pop
inc
fbstp
or
aaa
outsl
lods
jmp
repz
rcrb
pusha
daa
fidivl
subb
dec
add
and
jge
xchg
sub
frstor
pop
mov
jmp
insb
jnp
in
cmpsb
add
aad
cli
xchg
je
hlt
cld
mov
out
fistps
dec
bound
add
fwait
sbb
inc
adc
dec
pushl
push
imul
xchg
nop
jl
mov
js
dec
popa
adc
and
inc
jno
in
lahf
xor
popa
adc
push
add
jmp
int
test
lds
mov
push
push
lcall
dec
jmp
pop
sbb
int
cmp
cmpsb
add
inc
or
movsb
fsubl
cmp
mov
sub
push
inc
lods
or
in
jno
xchg
es
mov
mov
adc
aam
push
add
aas
mov
lods
sete
jns
loopne
loope
add
out
add
out
stos
cmp
mov
push
in
mov
int
cmp
out
xor
and
leave
adc
jns
cmc
xor
inc
mov
out
fisubrl
out
add
fistpl
adc
sub
popa
sti
lahf
and
loop
or
mov
xor
jecxz
mov
stc
cmc
int
dec
ljmp
in
jmp
insb
into
xor
cmp
mov
fcmovnbe
sbb
xchg
scas
lods
xchg
mov
sahf
movsl
mov
add
cmp
popa
mov
mov
lea
in
adc
mov
jno
loop
imul
je
aaa
and
xchg
fs
xchg
shr
dec
ror
push
jbe
mov
adc
pop
psubsb
dec
repz
call
fildl
pop
pop
fcmovbe
iret
les
movsl
ret
insl
add
gs
aaa
fwait
mov
pop
dec
rcrl
andb
jp
push
ljmp
outsl
iret
loopne
out
jo
jp
mov
sub
subl
or
xchg
sti
fwait
imul
lods
fisubs
dec
mov
fidivl
cwtl
pop
mov
dec
push
push
add
jbe
push
lcall
xchg
sbb
pop
int3
jmp
dec
mov
movsb
int
stos
cmp
outsl
cmp
mov
ret
cmpsb
das
mov
lcall
loopne
or
sarb
cld
cwtl
jl
or
mov
stc
stc
cs
mov
shrb
push
jp
pop
fistps
mov
inc
adc
adc
adc
cmp
mov
dec
jl
sti
add
test
mov
and
in
fstps
les
sbb
cmp
jmp
push
ja
pop
pop
roll
icebp
mov
jo
mov
xchg
mov
adc
lahf
jb
inc
xor
test
cmp
out
sub
int
push
jecxz
dec
push
pop
call
aad
cmp
rcrb
out
add
inc
jo
lret
scas
mov
lcall
test
testl
lea
cmpsb
rorb
hlt
cmp
fs
imul
daa
push
rcll
add
mov
push
fwait
cmc
xchg
movsl
fcomps
mov
int
jge
inc
sbb
push
add
cmc
leave
fiadds
cli
call
ljmp
mov
cmp
stc
pushf
aad
enter
pusha
jb
or
test
dec
aad
pop
push
push
mov
fs
jns
xlat
int
pop
push
add
inc
xor
pusha
push
jg
aad
adc
cmp
xchg
loop
push
test
adc
jno
push
or
sahf
icebp
add
hlt
in
push
mov
push
push
imul
and
xchg
inc
dec
in
xchg
sbb
aam
cmc
cmpb
xchg
and
out
cmp
clc
into
cmp
xor
and
add
jge
sahf
test
shrl
xchg
andl
dec
notb
jbe
sub
js
add
xchg
nop
sub
cs
sbb
push
pushf
daa
pop
cli
push
xchg
jle
push
sub
pop
xlat
arpl
andb
lods
mov
rcrl
aad
movsb
xchg
jns
addr16
rcll
cmp
in
inc
or
dec
push
jge
mov
push
hlt
push
test
or
mov
cmp
or
add
inc
mov
addr16
filds
test
cmp
xchg
xlat
shlb
ficomps
or
aam
mov
xchg
inc
inc
push
add
fimuls
sbb
filds
xchg
movb
orl
iret
mov
das
out
xchg
mov
cmp
mov
pop
imul
nop
and
dec
sti
xchg
inc
mov
push
lret
pop
add
or
jns
mov
jnp
cmp
iret
js
push
scas
lea
jge
rcrl
sub
inc
adc
scas
mov
push
and
dec
arpl
push
fdecstp
cld
and
cli
jne
inc
cmc
int
js
sbb
cld
imul
cmpsl
pop
outsb
enter
mov
popf
add
repnz
lcall
sub
inc
mov
aad
mov
je
enter
dec
rcrb
sub
test
popa
jmp
xchg
testb
dec
ja
fisubrl
loop
add
test
xor
out
xor
cwtl
or
out
inc
sub
std
dec
dec
jno
into
sbb
cmc
aad
pushf
jmp
test
add
fistl
call
repz
repnz
xchg
and
push
add
inc
test
lret
loopne
enter
xchg
aam
adc
lock
xchg
daa
or
mov
mov
lods
xchg
add
mov
and
loopne
inc
mov
mov
sti
add
xchg
or
sub
fstpl
out
cli
inc
mov
aad
push
add
mov
aad
dec
out
fidivrs
rclb
jmp
out
pop
add
cmpl
in
movsb
enter
adc
xchg
jb
xchg
adc
inc
test
outsl
int
stos
les
cmp
sub
sarb
cli
push
sarb
xor
mov
pop
jl
jmp
pop
xchg
outsl
adc
cmp
aas
jg
enter
aad
or
loope
in
adc
cmp
loopne
dec
sub
popa
dec
rcll
add
ret
lods
mov
pop
cmovs
vmulss
jg
stos
add
inc
in
mov
sbb
in
sbb
push
mov
pop
daa
lahf
jp
outsb
add
test
add
notl
sbbl
fsubr
sbb
mov
stos
inc
es
and
mov
stc
jge
adc
mov
mov
and
cmp
cmpsb
or
jl
mov
mov
pop
push
cmp
mov
idivl
adc
sbb
mov
inc
cld
pop
lds
inc
aas
xchg
push
sarb
sub
sbb
push
dec
repnz
mov
mov
sbb
scas
ror
cmp
mov
sbb
dec
cmp
outsb
jg
dec
out
push
sub
js
cs
and
mov
sti
mulb
adcl
cmp
pop
arpl
mov
inc
fistl
jecxz
jbe
xchg
dec
xchg
xor
xor
aad
cmc
jecxz
ja
aaa
insl
fstps
lahf
jmp
mov
nop
sub
and
push
pop
inc
popl
dec
outsb
push
add
and
out
aad
add
push
fwait
rcl
pop
cmp
fmuls
xchg
dec
fbld
push
xsha256
cmpsb
push
data16
adc
xchg
cmp
adc
faddl
push
ficomps
xchg
imul
loop
jmp
jbe
mov
test
js
jb
iret
mov
xchg
or
mov
or
shr
aaa
insl
mov
inc
xorl
subb
mov
mov
cmp
mov
inc
adc
out
xchg
push
aaa
xchg
or
mov
mov
and
arpl
or
lods
imul
gs
in
jns
dec
xchg
mov
lock
int
push
outsl
mov
push
in
idiv
or
and
cmp
jo
pop
jns
jae
lds
inc
adc
leave
mov
jmp
fcmovnbe
fistpll
into
mov
push
scas
xlat
fsub
mov
xor
xorb
or
push
daa
movd
movsb
sub
cmp
push
das
cli
mov
mov
jp
mov
cmpsl
pop
test
test
fidivrl
stos
jo
les
stc
dec
ljmp
in
jns
lcall
cmc
int3
adc
test
enter
sub
sbb
fildl
popl
push
xchg
add
mov
daa
std
leave
pmaxsw
test
fcomi
dec
push
sub
jmp
xchg
xlat
fcoml
jne
mov
mov
lahf
sub
xchg
jnp
and
fwait
xor
in
dec
sarl
out
loop
imul
sbb
nop
mul
rorl
sbb
inc
push
and
sbb
ret
test
mov
mov
aad
dec
adc
les
or
into
xchg
inc
adc
lcall
rorb
mov
fisttps
std
idivl
cli
xchg
jo
xchg
xchg
or
divb
mov
outsl
out
dec
and
rorl
push
icebp
test
mov
mov
inc
mov
or
jg
out
push
push
stos
pop
mov
sti
dec
inc
sub
add
adc
cmpsb
inc
iret
push
daa
cmc
dec
movsl
cwtl
or
push
push
sbb
jmp
test
enter
bound
into
push
clc
enter
in
imul
pop
or
mull
xchg
sub
push
dec
and
mov
dec
out
and
jmp
ds
shrb
lret
out
aam
faddl
loopne
cmp
pushf
pusha
stc
xchg
flds
repz
xor
and
pop
int
dec
push
movsb
or
pop
push
cmp
inc
rol
fcmovbe
sub
sub
iret
mov
stos
add
xor
mov
sbb
in
in
push
iret
outsb
sub
xor
or
lods
out
test
cs
pusha
loope
repz
lcall
rorl
mov
rorb
idivl
in
in
cmc
dec
dec
dec
stos
dec
mov
stos
xchg
out
cmc
and
xor
inc
adc
fwait
int
push
cli
dec
out
mov
inc
sub
or
pop
and
icebp
aad
dec
repz
push
test
xchg
dec
dec
mov
out
mov
and
cld
mov
arpl
dec
adc
push
gs
push
enter
fisttps
adc
cmp
cmp
int
xor
clc
test
dec
mov
jo
cmp
jne
jb
dec
jl
jecxz
mov
testl
xor
or
test
or
xor
fildl
cmc
rol
pop
mov
mov
adc
or
inc
jb
or
adc
adc
xor
jbe
xor
mull
pop
les
dec
cmp
push
imul
push
in
mov
cmp
enter
dec
jl
jnp
cmc
fisubs
dec
int3
pushf
ds
in
mov
in
cmp
shll
daa
adc
ljmp
and
xchg
outsb
or
and
ds
in
mov
imul
repz
out
cli
push
daa
out
dec
xchg
fwait
jl
sbb
sti
lods
mov
int
add
jmp
add
dec
cld
pop
sahf
bound
push
out
fistpll
loopne
out
or
pop
inc
aas
mov
xchg
xor
jbe
cmp
or
jg
add
out
dec
stc
adc
pop
jno
scas
jge
sbb
mov
sti
aad
test
cmovle
test
or
stc
idivl
mov
imul
sbb
mov
mov
fldl
lods
aam
pop
xor
and
iret
ret
push
jno
or
or
xor
cmc
or
scas
push
dec
ret
adc
cmp
shrl
sbb
mov
lods
push
stc
mov
das
sbb
fildll
cmp
sub
js
adc
sbb
fiadds
int
xor
jne
pop
push
jp
sahf
or
adc
push
adc
mov
xchg
out
inc
arpl
mov
aam
sub
mov
fdivrs
xchg
mov
fs
movsb
xchg
fwait
inc
into
sub
ss
arpl
int
sub
and
inc
stos
sbb
orl
les
scas
loope
mov
xor
pop
add
imul
push
adc
lahf
push
xchg
cmp
out
pop
mov
cmp
mov
add
jns,pt
scas
fsubs
lods
or
xlat
adc
jle
mov
je
sbb
dec
cwtl
jo
mov
lods
mov
sub
jp
in
jo
add
in
add
int
negl
sahf
into
arpl
push
in
out
jle
stc
out
or
mov
cld
pop
jle
cmp
sub
scas
or
ret
aaa
xchg
xor
fnstsw
add
sbb
data16
adc
cmpsb
out
test
arpl
adc
in
add
orl
pushf
pop
dec
push
aad
jp
insl
lret
shrb
cmc
push
push
xchg
outsl
scas
cmp
mov
inc
lret
mov
lcall
jno
jle
aam
cld
jg
jg
outsl
imul
pop
mov
cmp
and
push
xchg
xor
dec
xchg
jns
mov
sahf
cld
sahf
mov
push
bound
xor
pop
pop
jmp
xchg
jg
movsl
jnp
imul
mov
push
imul
cmc
mov
xchg
sti
ret
pop
sbb
fldcw
fidivs
and
stc
cmp
mov
sub
jb
adc
loop
sbb
jg
repz
inc
aaa
or
xchg
pushf
mov
dec
int
cmpsl
icebp
rol
inc
sbb
mov
push
xchg
sbb
fcoms
sbb
mov
mov
jmp
inc
int3
pmullw
xchg
and
loopne
xor
pop
sbb
cmp
mov
mov
mov
lods
icebp
pop
out
push
loopne
mov
sub
nop
or
dec
shll
cmpsb
notl
mov
mov
push
test
in
cmp
and
add
out
fldz
arpl
jg
xchg
push
test
push
popf
xlat
lcall
push
xor
pop
cmp
fs
push
dec
or
into
xchg
mov
rorb
hlt
subb
repz
mov
popf
push
daa
jb
jnp
dec
mov
jmp
loope
xchg
shlb
addr16
xchg
dec
int
sarb
pop
dec
xor
aad
enter
xchg
cltd
and
aaa
ror
pop
cmp
xor
imul
push
or
pop
lods
push
jnp
mov
filds
mull
lret
cmp
cld
in
int
cli
lret
imul
sti
inc
daa
sahf
das
jl
mov
mov
push
jl
idivb
inc
jle
shl
xchg
aad
adc
or
stc
imul
dec
and
iret
mov
mov
or
mov
test
mov
push
mov
jmp
or
sub
jae
mov
jbe
sub
lahf
cmp
jae
popf
mov
loope
mov
fsts
fistpl
imul
push
xchg
push
adc
aam
cld
and
popa
and
mov
divl
out
adc
sub
jge
rorl
outsl
dec
into
inc
shll
xchg
or
jp
outsl
lret
jb
xchg
xor
std
push
ljmp
push
mov
sarb
lds
shlb
sub
dec
pop
ficoml
and
or
sbb
and
popa
push
in
xchg
inc
sti
in
xor
mov
mov
dec
mov
mov
cltd
xabort
inc
stc
inc
orl
dec
mov
dec
xchg
repz
in
and
mov
jl
push
mov
loopne
or
fdiv
lds
xor
xchg
notl
push
mov
xor
cld
sbb
cli
test
pop
fstpt
or
and
pop
aas
xchg
mov
xchg
test
outsb
dec
sbbb
push
sub
imul
out
int
or
rolb
cmpsl
es
dec
loopne
adc
cs
rcll
inc
dec
xorl
push
fnstenv
js
and
xchg
leave
imull
and
mov
hlt
inc
out
pop
in
ljmp
inc
pop
sarb
and
stc
mov
imul
fidivl
stc
mov
pmaddwd
addr16
jmp
stc
aaa
or
xor
xchg
xor
xchg
call
das
notl
adc
jae
jmp
push
xchg
out
out
pusha
pop
stc
popf
std
inc
addr16
sub
inc
popa
addr16
adc
sahf
ja
xchg
bound
xor
les
repnz
pushf
lock
adc
or
aad
outsb
jmp
outsl
mov
pop
call
mov
jp
dec
mov
or
sbb
out
push
jmp
out
jecxz
inc
mov
sbb
call
jecxz
cmp
pop
cmp
cmpsb
and
push
inc
jne
sub
insb
sbb
subb
dec
or
pushf
rolb
jno
out
andl
aad
and
pushf
and
sub
xchg
jge
mov
popl
cli
bound
sub
mov
xchg
outsl
shrl
imul
iret
sub
loope
or
out
push
cmp
pop
or
incb
sti
push
add
or
in
cwtl
rorl
sbb
lahf
or
test
hlt
cmp
adc
pop
sub
cmp
xchg
mov
xor
or
or
lcall
push
mov
out
sbb
sub
comiss
sub
nop
sbb
fisttps
in
in
and
and
adc
mov
loopew
repz
dec
jb
xlat
jnp
mov
and
sbb
es
js
xor
cli
rol
inc
mov
pop
push
sub
clc
testl
int
adc
push
adc
sbb
push
sbb
mov
jge
pop
pop
xchg
and
mov
xor
outsl
fimull
das
mov
cmp
push
pandn
mov
mov
fxch
cltd
and
cmp
outsl
push
and
out
xchg
inc
imul
mulb
movb
daa
mov
xor
gs
jg
mov
mov
or
sub
cwtl
aam
arpl
stos
and
cmc
jmp
data16
xrelease
std
inc
pusha
pop
pop
cmpsb
sete
rolb
mov
imul
push
hlt
pop
inc
arpl
add
push
lcall
or
inc
jmp
fwait
pop
loop
or
fwait
aad
popa
testl
pop
add
lods
js
xchg
insb
insb
das
mov
xchg
cwtl
int
push
cwtl
rorl
mov
js
mov
fstpt
shlb
fwait
mov
loope
pop
out
xchg
jns
push
dec
mov
enter
xchg
or
pop
popa
or
std
jle
dec
les
sbb
cli
test
fldl
and
fisttps
stos
addr16
int
out
test
ja,pt
shrl
bound
and
cmc
mov
and
je
pop
push
insl
jb
loope
cmc
and
cmpsl
cs
out
mov
xchg
movsl
sub
jecxz
push
dec
push
or
xor
mov
js
and
insl
jge
cld
push
add
xchg
popa
mov
test
adc
adc
movsl
and
jnp
movsb
lods
push
mov
clc
or
jle
fimuls
jp
sahf
test
ljmp
mov
cli
xor
mov
xchg
or
sti
mov
fsubrl
xchg
xchg
mov
ljmp
cmc
int
push
mov
sbb
test
in
lcall
fnstenv
xchg
loope
xor
out
cld
cwtl
ret
inc
jle
cmpsb
jmp
std
mov
std
mov
push
pop
ja
scas
or
popa
jl
loopne
or
push
or
mov
iret
pop
int3
cmc
sarb
sti
repz
leave
push
add
push
pop
rolb
push
pop
loope
mov
je
pop
sub
adc
dec
or
mov
stc
mov
jae
cmpsl
bound
ljmp
nop
cld
mov
rclb
testl
in
push
cmp
or
les
wrmsr
imul
mov
imul
shrl
jbe
jbe
dec
sub
jle
xchg
mov
dec
call
shrb
jmp
ret
insb
inc
loop
jnp
adc
xlat
cmc
decb
jl
test
xor
les
xor
push
lods
testb
cvttps2pi
pop
pusha
in
jle
test
push
pop
sahf
add
sub
outsb
lods
mov
test
xlat
in
jmp
pusha
sbb
cli
jnp
pop
mov
shrl
out
sub
in
push
and
and
push
sub
stos
aaa
pop
fnstcw
lods
in
aad
push
push
sub
cmpb
cmp
xor
or
fimuls
in
dec
cmp
faddl
and
cmp
add
mov
add
push
das
cmp
push
cmp
lahf
push
fldt
mov
mov
test
imul
sub
cwtl
sbb
test
mov
iret
lahf
aad
dec
rolb
mov
cltd
fidivs
stos
rcrb
cmp
fisubrs
xchg
movsl
gs
mov
repz
xlat
cmp
daa
sbb
scas
nop
int
scas
sbb
xchg
das
adc
outsl
icebp
add
aad
jg
flds
dec
jp
leave
ret
out
and
mov
xor
mov
sbb
xchg
je
aas
out
pop
in
and
lods
mov
mov
or
nop
bound
sbb
sbb
cmp
xchg
inc
popa
mov
and
das
call
icebp
fsubrs
lock
cmp
int
loope
in
rorb
jae
push
out
pop
ja
call
cmpsb
inc
jmp
inc
movsb
mov
cmp
lret
or
lea
adcb
pushf
inc
xchg
sarb
repnz
inc
mov
std
cmp
xchg
mov
jp
in
cmpsl
mov
movb
jl
les
cltd
ljmpw
shrb
mov
xorb
ja
lods
int
dec
push
mov
or
cmp
out
mov
int
loop
out
xchg
stc
push
filds
cmc
stos
xchg
movsb
js
xor
mov
push
sti
jge
adc
jmp
sahf
shrl
sub
inc
and
cmp
js
lods
add
jbe
loop
aad
xor
cltd
pop
fbld
sahf
sbb
mov
arpl
shrl
dec
outsb
stos
dec
popa
adc
inc
aad
mov
lds
inc
cs
pop
repz
lock
out
and
sarl
iret
cmp
popf
mov
push
push
pop
adc
adc
push
sub
div
cmp
jns
int
lea
nop
addl
mov
push
pmullw
and
mov
or
cld
ret
sti
xchg
test
jbe
mov
lret
xchg
loopne
imul
jne
int
data16
rsm
icebp
push
arpl
cmp
push
jle
adcl
mov
shll
iret
cmc
xchg
mov
js
add
add
pusha
sbb
call
imul
int
mov
inc
mov
jmp
js
inc
lahf
or
fdivs
adc
js
cmp
add
or
push
mov
scas
repz
inc
pop
in
or
cmp
arpl
push
cld
add
notl
and
xchg
adc
dec
mov
test
jns
sbb
test
or
mov
push
out
lcall
adc
inc
fcom
divb
add
rcll
or
jle
xchg
and
mov
int
fildll
cmpl
ret
xor
cli
nop
aad
or
fs
pop
cld
daa
adc
and
xor
and
out
push
cwtl
pop
mov
xor
xlat
add
lds
jmp
int
mov
dec
xchg
sub
aad
loopne
adc
xor
popf
sarb
push
ljmp
ljmp
decl
pop
loopne
rcll
in
into
loope
mov
out
insb
cmp
adc
xor
sbb
dec
ljmp
lods
xor
xchg
out
jp
add
xchg
int
outsl
adc
mov
test
bound
aas
sub
or
aad
and
fistps
sub
stc
inc
jg
pop
adc
cli
dec
pop
js
cmp
lods
loop
xchg
inc
xchg
mov
out
pop
add
mov
cli
cmp
xchg
out
in
std
push
rol
jp
mov
cmc
xchg
inc
xorl
mov
lcall
mov
xchg
mov
mov
outsl
and
push
out
sub
inc
sub
mov
lods
stos
stc
leave
or
cmp
mov
cmp
cld
pop
adc
dec
les
xchg
orl
push
das
lods
xchg
xchg
orb
in
aad
loope
adc
mov
inc
sub
mov
call
aad
push
in
xor
out
cmc
push
cmp
inc
aad
mov
dec
pusha
jecxz
push
repnz
adc
into
xchg
andl
int
aad
adc
mov
outsb
pop
xor
xlat
in
pusha
sub
adc
jnp
sbb
fstpl
inc
inc
decl
adc
out
cmp
sbb
stos
sub
mov
push
fistl
aad
mov
inc
xchg
push
and
nop
in
cwtl
aas
jmp
add
cwtl
or
xor
or
popf
jmp
cld
scas
popa
pop
es
imul
imull
dec
mov
out
push
pop
aad
sbb
fstps
jl
movsl
xor
pop
outsl
int
orl
inc
popa
push
adc
in
scas
gs
addr16
out
mov
mov
cmp
loopne
arpl
dec
in
jmp
icebp
or
js
clc
pusha
adc
aaa
aam
xor
sbb
xchg
cmp
mov
add
cmp
outsl
popa
aas
cmpl
cmc
inc
push
inc
mov
and
iret
rcrb
cmp
testl
mov
sbb
or
lret
xlat
cmp
aam
mov
adc
cmp
adc
scas
push
cmp
jmp
dec
in
adc
sar
and
dec
call
jnp
int
pop
sahf
loopne
push
cli
and
rcrb
push
and
or
mov
and
sub
std
mov
xchg
popl
xchg
mov
aad
mov
test
cmp
inc
xor
dec
dec
sti
jbe
xchg
or
cmc
and
sbb
xor
inc
sub
into
cmpb
aam
out
loope
push
adc
les
dec
adc
sbb
roll
loop
dec
push
push
nop
inc
ja
jge
adc
gs
sbb
dec
ja
push
and
test
inc
jecxz
jl
mov
cmp
jge
cld
xrelease
lock
dec
or
loope
mov
jmp
mov
jp
call
lret
out
pop
cld
adc
dec
jle
or
mov
xchg
nop
lret
pop
es
punpcklbw
sahf
js
dec
mov
fadd
pushf
adc
mov
inc
into
shl
lret
lds
popa
stc
jge
mov
cltd
xor
addr16
out
add
and
mov
pusha
rcll
xor
into
or
daa
mov
xor
xlat
lahf
jge
jl,pt
or
push
int
pop
pop
push
jns
push
sub
movsl
xchg
cmp
ljmp
rorl
mov
mov
jns
fcmovne
or
sub
in
stos
inc
push
adc
mov
inc
xor
mov
mov
mov
and
mov
jne
jl
sti
jmp
or
adc
pop
aas
xchg
jmp
cs
pop
test
push
out
push
int
pusha
out
icebp
repnz
loopne
je
cmpb
lcall
out
scas
sub
ret
scas
sub
xchg
or
or
jne
ja
jo
and
les
xor
xchg
mov
out
mov
mov
dec
rcr
aad
outsb
and
jns
fists
xor
idivl
fcom
iret
insb
mov
int
sti
jbe
push
push
in
cmpl
cli
xchg
adc
rclb
dec
push
xor
sbb
movsb
dec
imul
cmp
adc
dec
int
cmc
and
and
adc
add
in
mov
adc
jmp
adc
jne
push
sbb
add
in
mov
out
cmc
sahf
and
xor
jmp
out
xchg
and
xor
subl
pop
pop
mov
sti
sbb
int
test
jb
testb
fistl
stos
wbinvd
test
dec
cmc
aaa
mov
dec
xchg
jp
loope
mov
out
cmp
addb
mov
or
test
repnz
loop
pushf
div
cltd
or
and
testb
or
or
dec
xchg
pop
cmpsb
jmp
aas
adc
sarb
add
cmc
int
or
dec
js
loopne
iret
xor
loopew
push
mov
cmpsl
or
test
inc
inc
adc
out
notl
shlb
mov
push
sbb
int
cmp
pop
jo
mov
cmp
or
xor
test
fstl
testl
cmp
add
push
push
fdivl
sub
std
pop
sbb
fiadds
rolb
std
std
or
out
cmp
and
mov
insb
ss
xchg
into
mov
ret
inc
adc
adc
out
not
push
pop
mov
rcll
cmp
dec
or
out
lcall
xchg
movsl
push
lcall
out
pop
jb
dec
xchg
cmp
add
and
fcom
ja
jmp
hlt
imul
stc
xchg
call
add
out
ret
sbb
loope
test
aam
and
sub
lret
pop
out
out
call
push
adc
adc
push
popf
cs
mov
inc
mov
fdiv
cmp
data16
or
cmpsb
mov
dec
mov
jl
push
int
cmp
fsubs
aaa
into
movsb
sub
xor
cmp
add
xlat
adc
aad
xchg
ljmp
rclb
ret
inc
pop
ljmp
jmp
cli
mov
ret
nop
in
jmp
jb
lods
bound
mov
stos
and
fcomi
push
faddl
stos
clc
add
nop
xor
lret
push
mov
js
popa
not
pop
add
push
test
popf
jmp
mov
bndldx
jle
mov
sbbl
out
test
dec
xchg
fmulp
and
xchg
setb
cwtl
xchg
inc
movsb
push
bound
xchg
nop
lods
adc
mov
cltd
jge
lret
das
test
or
mov
and
jecxz
cmp
jnp,pn
push
adc
inc
jmp
pop
and
shr
jmp
insl
fists
popa
sbb
bound
push
add
sbb
fistpll
cmc
call
xchg
dec
in
xchg
dec
andl
pusha
xchg
add
leave
shlb
xchg
lret
lret
ror
mov
test
pop
jp
mov
repz
nop
cmp
lret
aaa
push
xor
or
inc
decl
push
mov
jbe
adc
and
dec
loopne
and
test
push
cmpsl
loop
pop
adc
je
mov
jns
idiv
dec
or
sti
mov
cmpsl
inc
pop
fwait
sbb
insl
push
std
and
popf
ss
popa
jecxz
jnp
sub
cmp
sub
stc
sub
ds
or
or
outsl
idivl
xchg
xor
jecxz
cmc
add
mov
push
aam
cmp
hlt
lock
add
push
sahf
jmp
jns
xchg
mov
cmpsl
fstl
vmovss
iret
push
xchg
mov
push
jne
mull
enter
jg
and
jnp
xchg
cmp
or
lret
mov
lahf
inc
test
hlt
insb
dec
xchg
jecxz
sbb
inc
imul
scas
mov
pop
lods
enter
push
push
adc
inc
idivb
jae
ret
xchg
inc
cmp
xchg
mov
cmp
mov
lods
add
xlat
jecxz
push
sub
jecxz
xchg
repz
xchg
arpl
push
enter
adc
andl
ds
out
in
in
dec
fucom
fwait
enter
fs
fsubl
adc
outsl
sbb
xchg
aad
jcxz
adc
mov
scas
testl
add
mov
aaa
adc
dec
sbb
inc
js
fsubp
cmp
mov
inc
pop
ret
pop
aad
mov
inc
imull
mov
push
shl
and
and
inc
push
sub
pop
or
je
stos
testb
call
jb
pop
enter
add
or
sub
iret
cmc
in
adc
in
outsl
add
jnp
xchg
or
rclb
lock
mov
jns
pop
mov
sbb
clc
adc
hlt
int
cmp
xlat
jae
cmc
int
test
mov
adc
fiadds
mov
aad
dec
mov
scas
add
roll
push
les
add
inc
in
scas
mov
mov
cmpsl
lahf
leave
or
lds
out
insb
cmc
lods
lret
sub
pusha
call
sahf
bswap
xchg
jns
and
jne
mul
loop
cmp
or
stc
in
jmp
inc
cmc
and
mov
add
and
aad
bound
mov
cld
sub
std
outsl
push
scas
jnp
xchg
mov
into
ret
mov
call
jp
adc
addr16
inc
repnz
jb
sbb
aas
movsb
xlat
out
int3
ficomps
xchg
rcrb
lods
or
int
xchg
enter
dec
cwtl
inc
popa
fidivl
cmp
add
cmc
stc
out
pop
sbb
mov
or
aad
aas
adc
leave
sub
pop
repnz
add
gs
mov
mov
aad
insl
aam
in
scas
sub
stc
rcll
pop
fimuls
xor
out
mov
xchg
ss
int
aas
aas
mov
push
or
ja
and
enter
xchg
loop
shl
pop
movsl
jmp
cmc
idivb
jp
and
pop
sbb
call
bound
stos
mov
test
or
push
mov
xlat
ds
hlt
inc
dec
movsb
pop
lahf
push
adcl
mov
push
jge
jnp
pusha
xchg
add
or
cmc
push
mov
shrb
movsb
outsl
sbb
fimull
adc
int
and
lcall
shr
jns
and
popa
xchg
cmpsb
lods
cmp
cwtl
cmp
cmpsb
hlt
push
or
pop
cmp
fildll
jge
sahf
ss
mov
push
dec
roll
push
rcrl
stc
or
push
mov
pop
dec
outsb
push
lcall
in
dec
loopne
cli
inc
jg
lcall
ljmp
mov
push
into
mov
add
push
out
pop
jecxz
push
outsl
and
pop
cmpsl
dec
repz
aaa
mov
jnp
sti
inc
jmp
cmp
add
and
int
popa
jmp
cmp
add
fistl
fiadds
xchg
mov
mov
in
out
mov
gs
fisubrs
sti
loope
pop
pusha
mov
fdivs
decb
cltd
addr16
dec
mov
cmpsl
int3
mov
mov
cld
ficoml
sub
or
outsb
push
jl
push
cmc
lret
aam
hlt
in
xor
cmc
int
out
and
xchg
aas
mov
outsl
and
sti
cld
loop
sbb
shl
int
mov
mov
jb
cli
les
pop
lea
into
pop
or
insb
inc
loope
dec
mov
aaa
push
arpl
inc
adc
sbb
js
cmpsl
mov
jo
adc
jmp
out
lret
push
mov
xchg
int3
mov
sbb
notl
inc
lds
mov
sbb
pop
mov
fsts
xchg
aad
sbb
or
and
scas
fbld
lret
xchg
pusha
push
les
scas
aad
jecxz
cli
aam
mov
nop
adc
into
lcall
lret
mov
inc
push
xchg
mov
stos
jecxz
mov
pop
mov
add
or
mov
loope
sub
dec
jns
mov
sub
dec
dec
gs
sub
stc
jecxz
jns
dec
mov
cwtl
cmc
sti
loope
push
sbb
aad
add
lock
jnp
dec
sub
into
add
add
mov
push
xchg
icebp
cmpsb
jae
das
push
insb
nop
jge
pushl
icebp
shrb
cmp
mov
mov
out
push
mov
or
adc
int
xchg
and
push
imul
into
jmp
adc
or
test
aaa
cmp
cmp
push
fimuls
shr
push
push
setb
daa
push
aad
lcall
in
daa
roll
mov
loope
sub
mov
int3
nop
aad
dec
add
mov
push
les
xchg
add
test
mov
ja
test
xlat
ret
ljmp
add
outsl
icebp
hlt
nop
je
inc
sub
cmp
int
cmp
into
call
int
ficoml
sub
push
push
dec
adc
cmp
sahf
insb
xchg
lret
xchg
jnp
int
and
or
in
or
sarl
mov
mov
adc
int
jmp
xchg
imul
fsubrs
out
popa
sub
mov
pop
jns
in
lret
mov
lahf
aad
adc
sbb
test
mov
rcll
push
cmp
cpuid
shlb
mov
and
cwtl
mov
jecxz
cld
adc
repnz
sahf
ja
in
loopne
lods
pop
iret
icebp
popa
mov
aad
mov
and
jmp
push
jecxz
mov
cld
mov
jbe
ja
jle
jb
ss
add
sub
popf
repnz
adc
dec
imul
adc
jge
add
lods
rclb
test
cmp
mov
loope
cmpsl
mov
xchg
imul
imul
scas
scas
notl
push
xor
jno
je
lds
mov
stos
jmp
punpcklbw
mov
mov
fs
aad
mov
daa
int
sahf
cmpsb
fwait
cltd
lret
divb
push
or
adc
pop
mov
lahf
cmc
mov
mov
fsubrs
and
std
adc
cmp
jecxz
dec
sti
movsl
push
mull
jmp
adc
lret
cmp
sbb
adc
push
and
push
popa
imul
pop
adc
cmp
or
aad
inc
out
inc
imul
vandnps
mov
and
stc
xchg
sti
lods
cmp
dec
sbb
aad
cli
test
stos
jae
fcomi
jecxz
mov
xor
fimull
jns
sahf
mov
or
outsl
test
repz
scas
popf
loopne
ljmp
mov
aas
fsubrs
mov
call
scas
repz
cmpb
dec
iret
inc
shll
shrl
lods
imul
dec
call
mov
enter
aaa
loopne
mov
aad
cli
lds
lock
fstpl
dec
jecxz
mov
jne
mov
xorl
aad
mov
cmp
enter
or
fisttpll
idivl
outsl
bound
call
mov
mov
cld
sbb
stos
lahf
dec
mov
movsl
cmpsb
jnp
pusha
cmp
mov
sbb
negb
fabs
and
sti
out
in
xchg
fs
pop
or
mov
and
sub
aam
pop
cmpsb
lock
fdivrp
dec
insl
stc
cmp
cltd
mov
negb
fsubrl
mov
jmp
mov
or
popa
jecxz
scas
data16
sub
sahf
cmc
int3
dec
arpl
and
loop
lods
or
or
mov
lret
loopne
lods
or
fs
stos
adc
arpl
push
roll
sarl
imul
xor
push
and
and
xchg
xchg
sbb
clc
mov
xchg
outsb
and
xchg
sbb
push
mov
aaa
popf
fdivp
xchg
add
push
add
into
and
jl
mov
cmp
pop
push
test
inc
shr
pop
and
push
shrl
in
fdivrs
mov
mov
pop
xchg
mov
adc
shll
xchg
mov
or
cs
push
enter
mov
mov
fisttpll
fstl
lcall
adc
movsb
dec
inc
loop
jbe
mov
into
cmp
jae
mov
dec
or
cvtps2pi
sub
inc
ret
push
mov
adc
or
loop
clc
frstor
or
hlt
push
rcrl
xor
les
dec
aam
test
or
andnps
xor
pop
mov
push
es
or
popf
xchg
adc
jle
cmp
mov
ret
into
mov
jmp
dec
decl
sub
push
jecxz
mov
mov
lret
cld
insl
aad
shrb
add
lods
push
fdivr
adc
jmp
aad
add
push
push
adc
push
std
add
imul
mov
jle
adc
push
add
push
jmp
paddusw
dec
sarl
mull
into
pop
mov
enter
shl
push
fiaddl
dec
xchg
dec
out
sti
xchg
sub
arpl
mov
xchg
test
iret
lea
pop
testl
cmc
push
jno
int3
inc
xchg
mov
call
lahf
xchg
in
sahf
fisubl
dec
and
push
mov
imul
adc
mov
imul
sbb
js
call
div
jl
scas
popf
movsb
add
nop
mov
aas
sbb
push
sub
lea
ja
pop
fmulp
stc
fcomps
adc
inc
outsb
inc
ja
fwait
jnp
sbb
mov
mov
cli
xchg
or
cmp
push
xchg
adc
rorb
pop
sbb
sar
push
test
mov
mov
into
xchg
cmp
mov
enter
rorl
push
push
push
dec
aaa
sbb
loope
shrb
outsl
test
xor
lods
arpl
icebp
mov
in
ja
into
mov
and
push
out
push
cmp
or
std
inc
and
mov
ds
xchg
jmp
mov
pop
popf
fildll
inc
adc
aas
xchg
repz
add
testl
mov
push
jne
das
or
xchg
mov
pop
mov
movsb
dec
cmp
nop
fidivrl
stos
cli
mov
jg
cmpl
and
outsb
cli
in
xchg
push
jo
xchg
stos
xchg
fisubrl
lahf
sub
mov
ret
xchg
cmpsb
push
cli
inc
sub
nop
fisubrs
les
mov
popa
sub
cmp
and
or
and
shlb
push
sub
comiss
push
adc
popa
mull
test
push
pop
jns
popa
jle
jg
inc
mov
lret
cmp
jge
gs
jecxz
into
aad
push
mov
mov
and
pushf
mov
cmc
sbb
adc
xchg
mov
push
mov
push
push
call
rolb
shlb
shrb
add
aad
sbb
or
or
nop
int
cmp
call
push
arpl
or
js
pusha
cmp
aad
lock
cmp
pop
push
pop
je
pushf
filds
or
outsl
aam
xchg
bnd
cmpsb
rcrb
sbb
dec
cmc
movsl
dec
cltd
mov
aam
mov
dec
fcomps
movntq
imul
cmc
add
lahf
or
sbb
mov
enter
sarl
lahf
mov
jbe
dec
outsl
das
cmc
or
pop
inc
inc
cmpsb
or
lods
mov
ss
xlat
dec
testb
cmp
push
push
sub
cmp
pop
loop
push
jo
filds
fdivrl
adc
test
loope
out
lret
divl
test
stos
jns
aad
xchg
setp
and
sub
mov
iret
stos
and
cmpsb
pop
pop
int
jg
pushf
cmp
scas
lahf
cmc
sub
dec
imul
es
lods
jmp
and
outsl
out
les
stc
aad
test
sub
cmp
ret
dec
es
jns
ja
scas
and
xor
sub
mov
loope
icebp
aas
and
gs
dec
sub
adc
das
mov
popf
int3
add
mov
inc
jns
xchg
test
push
mov
mov
jo
mov
fs
inc
mov
jmp
jecxz
cwtl
call
jbe
mov
int
sbb
ds
and
das
nop
test
outsl
pop
adc
push
jbe
or
cli
xor
cmp
out
or
mov
iret
lods
push
mov
call
dec
fwait
or
stos
adc
lods
dec
movsl
inc
es
adc
cmpsw
adc
fcomi
in
jmp
mov
in
mov
or
nop
jo
jmp
ljmp
jno
pusha
shr
ds
xlat
into
inc
mov
subb
or
jmp
aad
pop
insb
adc
xor
cs
imul
mov
cmp
fmull
outsb
xor
mov
and
sbb
push
jo
adc
cmpsb
xchg
lods
add
add
adc
mov
mov
movsl
ja
ss
cmc
loopne
fisttpll
or
icebp
mov
aad
and
push
lods
mov
insb
rorb
xchg
lcall
lods
jmp
rol
into
pop
repz
arpl
sbb
sub
jbe
iret
or
aam
and
or
xchg
subl
push
pop
fisubrs
push
mov
insl
dec
cmp
rcpps
add
sbb
lods
push
jmp
iret
cmc
popf
fbstp
lea
clc
in
jp
xchg
jno
stos
pop
popa
adcb
aad
js
in
inc
xorl
jo
subb
mov
push
loop
mov
jp
add
jmp
aad
cwtl
loopne
int
inc
cmp
cmp
dec
lods
mov
ficomps
or
jmp
cmp
push
shlb
jge
mov
mov
cmpsl
cwtl
leave
cmp
pusha
cmp
aad
inc
push
xchg
shlb
sti
xor
shll
xchg
and
sbb
mov
in
lret
sbb
xchg
pop
jno
or
xor
lods
test
xchg
fisubrl
adc
sbb
mov
jp
sub
stc
jmp
loopne
mov
inc
pop
leave
cmpsb
xchg
iret
xchg
dec
sub
jb
xchg
sti
icebp
popf
aad
nop
and
pop
addr16
iret
mov
in
sbb
je
test
ljmp
mov
xchg
mov
cwtl
or
or
pmaddwd
addb
adc
pusha
pop
cmpsb
sbb
cltd
add
aad
xchg
ds
and
mov
popf
xchg
loop
xor
sub
icebp
rorl
cli
push
adc
jae
sar
mov
push
cmp
lods
insl
ljmp
xchg
dec
push
mov
int
xor
xchg
enter
mov
mov
out
fistl
enter
inc
or
xlat
sub
out
notl
pushf
cmc
dec
pop
jge
outsb
mov
out
loopne
sub
scas
mov
xlat
add
or
or
push
jno
in
test
aad
sahf
xchg
mov
jl
loopne
sbb
mov
lahf
and
ret
xchg
xchg
loope
sarl
iret
and
xchg
jle
jmp
sub
scas
sub
mov
movsb
lock
xchg
xchg
mov
or
les
mov
cmpps
ds
lret
dec
lcall
out
inc
xchg
jne
out
pop
pop
aad
out
js
notl
jmp
cwtl
cmp
into
push
pop
xchg
repz
xchg
or
xchg
dec
push
pop
clc
rol
lods
sti
nop
sbb
fwait
mov
xchg
aaa
shll
int
xchg
pop
xchg
pop
lods
and
inc
xchg
push
inc
pushf
or
test
scas
mov
aad
shl
lock
jmp
daa
cmp
sbbb
gs
sub
lods
sub
fiadds
add
sub
mov
dec
pusha
jle
push
adc
dec
fildll
mov
mull
std
jge
pushl
jne
mov
sbb
in
xchg
sub
pcmpgtb
mov
aad
popl
xor
iret
jmp
pop
xchg
push
les
movzbl
pop
xchg
and
aas
pop
mov
dec
outsl
rcrb
mov
push
test
add
int3
sub
sti
icebp
cmc
dec
cs
jae
mov
mov
popa
rorb
ljmp
add
mov
lods
mov
test
inc
mov
xor
movsb
mov
mov
xchg
fwait
and
mov
leave
pop
out
mov
les
ljmp
sbb
jl
scas
jp
pushf
mov
sbb
or
lahf
fists
fwait
jge
mov
aad
push
nop
and
sbb
std
and
mov
or
mov
mov
xchg
push
flds
mov
adc
stc
outsb
jg
xchg
xchg
inc
inc
pop
ljmp
adc
out
lods
mov
out
imul
in
sub
movsb
sub
adc
xor
call
popa
ljmp
xor
mov
inc
mov
movsb
bound
or
movsb
xchg
cmp
repz
test
sub
call
push
mov
jp
sbb
daa
or
les
je
fimull
jg
or
test
call
adc
lds
xchg
int
fisttps
fucompp
push
ja
jp
sti
mov
xchg
lahf
cmp
or
sbb
in
cs
or
pusha
outsl
cmp
xor
pop
int
arpl
dec
cmp
addr16
jno
stos
xchg
in
mov
lock
pop
jl
sub
lcall
test
mov
adc
and
ret
stos
sub
mov
adc
inc
sub
adc
dec
outsl
mov
in
inc
jecxz
cmpsl
inc
clc
push
cld
dec
nop
jo
rorb
testb
repz
arpl
jmp
jae
mov
in
push
or
cmp
movl
mov
sub
adc
lods
mov
sub
adc
inc
test
shlb
popf
xchg
pop
mov
icebp
mov
mov
cmp
out
jl
jo
pop
fwait
imull
cmp
in
scas
or
subl
call
mov
rolb
lcall
out
lret
insl
mov
addb
int
mov
popf
dec
and
decb
shl
hlt
insb
push
pop
and
mov
es
lahf
xchg
andl
sbb
pop
adc
add
jnp
pop
iret
out
lret
rcl
stos
and
ds
sahf
idivl
nop
in
movsb
cmp
repz
add
add
inc
fsts
pop
ret
push
inc
xchg
fucomip
or
repz
int
add
fstps
or
je
sbb
and
fisubs
fildl
mov
lahf
xor
pop
jge
pop
hlt
and
js
jp
adc
xchg
sub
divb
shlb
dec
pop
and
mov
push
shrl
jle
jne
rcl
lcall
hlt
cwtl
das
test
xor
cld
shl
das
cmpsl
daa
lret
jg
adc
pop
aad
jge
xchg
jmp
pop
sahf
and
sbbl
cs
push
adc
mull
les
pop
push
iret
mov
adc
loope
dec
mov
and
std
jge
jb
push
out
sub
jnp
shll
ret
sahf
mov
dec
sub
movsl
dec
push
test
cmp
adc
arpl
sub
in
punpcklbw
jmp
mov
les
in
pop
xchg
inc
jle
cltd
cmp
cmp
aaa
sbb
add
je
xchg
cwtl
push
imul
mov
cmpsb
jp
in
das
and
stos
sarb
cmp
rclb
jge
and
jnp
ret
shl
pop
or
out
dec
loope
dec
mov
pop
cmc
lods
in
xchg
scas
cmp
popa
faddl
popf
fmull
fwait
xchg
sar
mov
imul
adc
leave
mov
call
bound
jecxz
inc
sbb
mov
das
pushf
jmp
cltd
mov
or
push
repz
pop
mov
out
int
mov
stos
sub
xchg
adc
xchg
inc
and
imul
mov
sbb
data16
xchg
in
sbb
lods
fistpll
sahf
movsb
cmp
lods
out
andl
aad
shrb
and
push
fbstp
js
adc
inc
ja
pop
or
aam
sbb
cmp
mov
test
add
lcall
por
jecxz
fildl
pop
imul
cmp
add
jmp
aam
pop
adc
int
nop
push
fnstcw
xchg
or
xchg
imul
enter
cli
or
and
push
outsl
xchg
aad
movsl
or
xchg
push
jo
xor
mov
cmp
xchg
pop
mov
cmp
shrd
or
jge
adc
cmp
lock
adc
xchg
sbb
mov
xor
xchg
ja
std
sub
nop
push
mov
push
sbb
rclb
enter
inc
test
notb
popa
test
and
lods
cwtl
sbb
dec
not
add
sbb
cwtl
push
sbb
xor
xchg
sbb
add
add
fisubrs
loop
popa
dec
movsl
insl
mov
int3
ss
lcall
es
ret
fcmovb
lret
insb
add
jge
sbb
nop
mov
sbb
jecxz
fmulp
into
rcrl
outsl
jne
mov
push
sbb
inc
adc
sbb
fistl
or
into
stos
repnz
aad
jp
insb
aaa
cs
jb
pop
fdivrp
xchg
iret
lods
adc
and
xor
rclb
and
pop
cmp
dec
aad
mov
mov
inc
add
add
pop
gs
mov
rcrb
pop
cmp
dec
shlb
ja
int
mov
pop
mov
and
insl
lods
jae
shl
cmp
inc
jl
mov
jo
mov
xchg
rorl
mov
xchg
add
pop
cmp
mov
sub
outsl
jmp
mov
stos
lods
pop
call
mov
adc
or
fdivl
xor
ror
mov
les
mov
dec
mov
popf
cmp
std
fnstsw
fistps
mov
jbe
pop
jecxz
jb
inc
sub
fildll
negb
push
pop
mov
push
idiv
and
lds
test
nop
cmp
popa
cmc
pop
int
mov
lods
cltd
cltd
dec
push
aam
xchg
push
jmp
std
lods
jmp
or
sub
jnp
mov
push
xor
xchg
dec
mov
dec
add
push
pop
call
pop
ds
or
scas
cmc
bnd
push
jbe
fs
pop
sbb
pop
push
aam
or
jbe
cmc
cwtl
jns
into
sbb
push
push
xchg
xchg
sbb
sti
aas
xchg
jne
mov
ficompl
add
sahf
scas
scas
dec
aas
xchg
in
mov
cmp
fucomip
rorl
jecxz
xchg
cld
cmp
aaa
pop
rcrl
jg
imul
adc
push
xor
scas
mov
mov
loope
ja
adc
lea
pop
sbb
dec
in
ljmp
clc
out
push
cld
adc
repz
inc
pop
xchg
dec
push
nop
mov
mov
or
adc
pop
add
xchg
lods
xor
lret
add
lods
ds
mov
and
call
fcom
out
or
cs
sti
js
cmp
loope
insl
push
cs
arpl
xchg
sub
notl
arpl
mov
cld
mov
mov
in
bswap
into
test
and
cmpl
mov
mov
aad
push
arpl
inc
fcomp
cvtdq2ps
test
insl
mov
push
inc
jnp
mov
xchg
dec
fmuls
call
shlb
inc
mov
add
popa
or
gs
cld
or
inc
out
jbe
stos
movsb
lods
pop
mov
adc
and
push
fdivrl
and
add
jmp
xchg
mov
push
aaa
jno
or
lods
in
pop
popa
xchg
add
insb
ret
notl
pusha
insl
push
ss
adc
int
lods
mov
lock
xchg
cmp
movsl
outsl
mov
loope
stos
jnp
lea
inc
pushl
cmp
cmp
adc
sbb
cli
insl
push
dec
dec
inc
stos
adc
outsl
call
in
nop
mov
ror
addr16
sti
push
cli
push
in
nop
cmc
dec
mov
mov
mov
mov
jbe
or
sub
jno
popa
addr16
loope
jg
jle
add
lods
outsb
mov
fidivs
in
filds
fstl
shrb
mov
outsl
shrl
mov
mov
repnz
xor
cmp
xchg
mov
in
ds
pop
ljmp
fcmovnbe
imul
fs
dec
push
dec
fdivrl
sarl
cmp
and
std
mov
dec
movsb
aas
push
scas
mov
and
lods
and
mov
mov
sbb
insl
or
push
ret
pop
lock
xlat
xor
mov
cmc
inc
mov
cli
mov
jmp
lock
xchg
dec
test
adcb
xor
mov
negl
push
sub
pop
sbb
inc
shlb
sub
inc
or
fcomip
sbb
test
pop
jle
in
cmp
fildll
xchg
test
out
call
lods
arpl
push
and
push
stos
and
mov
push
mov
fcoml
stos
js
es
mov
lock
mov
jo
or
inc
cmp
push
pop
cmc
lcall
and
ljmp
jge
addr16
xor
sbb
sub
push
jae
lock
jmp
pop
mov
xor
js
stc
adc
add
stc
sub
push
fwait
jns
add
shll
mov
loope
sub
mov
lds
faddl
pop
xlat
push
cmpsb
jmp
or
int
ja
and
iret
lcall
pusha
mov
cld
push
or
sub
or
push
pop
or
sub
fidivrl
inc
out
shll
outsb
int
fwait
and
xor
sahf
out
imul
mov
test
mov
enter
cmpsb
hlt
cmp
xor
movsl
cmpsl
pop
dec
dec
inc
dec
adc
mov
mov
adc
cmp
mov
push
dec
xchg
les
cmp
aaa
mov
orl
jecxz
or
sub
insb
xchg
jg
enter
jno
push
sbb
test
jl
and
ljmp
fs
add
xchg
mov
cmpsb
xor
dec
addr16
or
dec
mov
add
lods
or
jbe
sahf
mov
das
lea
cmc
jge
pop
les
popa
xor
cmp
dec
mov
xor
inc
or
and
xchg
nop
push
cmp
decl
jmp
aam
dec
mov
mov
jne
push
stos
arpl
fcmovbe
sahf
aas
and
fisubl
sub
rcr
sarl
in
xor
in
lds
out
mov
xchg
jnp
xor
cmp
push
mov
lods
imul
mov
test
cs
out
adc
movsb
popa
sbb
cmp
mov
arpl
out
gs
je,pt
and
mov
mov
xchg
out
mov
iret
dec
aad
cld
push
pop
js
mov
inc
xchg
test
adc
sub
and
inc
xor
push
shlb
jno
lods
cmp
jmp
cld
xchg
hlt
and
jl
sbb
add
pop
rclb
jge
in
mov
mov
inc
sbb
push
pusha
cltd
and
movsb
xchg
adc
out
nop
and
loopne
cmc
adc
dec
xor
test
mov
rcl
insb
cmp
fmuls
jnp
adc
jle
movsl
in
cmc
add
out
sti
mov
sub
ret
test
lcall
ss
fwait
sub
dec
test
iret
sbb
xchg
ja
insb
cs
dec
xor
stos
lods
scas
sub
gs
adc
add
cmc
mov
ljmp
hlt
or
cmovne
lcall
xchg
test
dec
aad
push
fistl
push
mov
aaa
scas
ss
xchg
cmc
ja
xchg
test
pushf
pop
xchg
out
std
pop
sbb
pop
cmp
adc
popa
push
lahf
adc
ds
rcr
push
cmp
mov
fdivs
mov
cmp
mov
dec
dec
mov
push
jb
loopne
sub
mov
push
mov
mov
adc
call
arpl
and
cmp
cvtps2pi
dec
movsl
shrl
mov
aad
sti
adc
jmp
scas
push
xchg
adc
add
out
filds
sub
popa
aad
or
xchg
pop
scas
mov
and
loope
js
call
xor
std
add
iret
cltd
outsl
imul
dec
stc
out
mov
arpl
ds
mov
shll
xchg
int3
or
in
mov
ret
mov
push
daa
add
aad
loope
js
xchg
push
push
jge
jmp
push
xchg
sbb
cmp
nop
xor
outsl
or
push
out
sbb
pop
cmp
jecxz
mov
sub
adc
dec
dec
pop
roll
or
nop
divps
jns
int
and
mov
call
mull
and
mov
xor
addr16
ljmp
in
repnz
or
mov
pop
outsb
adc
scas
and
dec
aad
mov
xchg
dec
sub
dec
gs
jge
orl
call
push
mov
add
mov
xchg
xor
push
int
fadds
push
lahf
shl
or
or
lock
jns
jp
mov
into
aam
xchg
loopne
ljmp
cmp
inc
mov
movb
sub
and
sbb
clc
push
pop
jecxz
inc
xchg
cmpsb
dec
and
in
mov
adc
cmovo
lods
clc
sub
daa
stc
stc
jge
inc
push
pop
sub
jne
adc
out
xor
sbb
pop
pop
xchg
imul
jmp
mov
ret
sub
test
adc
fsubp
clc
adc
cmp
outsl
mov
mov
xlat
mov
jnp
mov
in
sbb
or
aas
jp
mov
jg
mov
add
cmpsb
scas
ficompl
repz
clc
repz
in
push
shrb
sarb
mov
fs
sub
fmul
cmc
pop
sub
testl
repnz
shl
idivl
fidivs
jg
pusha
push
dec
inc
mov
int3
fadds
fcomip
inc
aaa
shlb
cmp
lahf
push
pop
jns
mov
lret
jno
and
daa
jbe
loope
iret
xor
bound
lret
adc
sub
push
or
adc
dec
xchg
loope
sub
xchg
push
aam
andb
arpl
test
push
jecxz
dec
sub
pop
mov
push
aad
and
out
and
inc
push
xchg
and
xchg
dec
dec
dec
adc
jnp
pop
xchg
jle
mov
push
in
loop
jae
insl
mov
sbb
ss
fstp
mov
and
ret
iret
or
add
inc
sbbl
ds
into
adc
call
sti
aam
imull
mov
test
sbb
xlat
popa
jp
in
aas
jl
sub
cmpsl
je
out
or
jbe
inc
fistps
sahf
lds
out
cmpsb
jmp
imul
jmp
inc
shr
push
test
je
add
pusha
cmp
dec
cmp
loope
imul
orb
push
push
lock
adc
xlat
popf
mov
adc
xchg
xor
std
jecxz
movsb
mov
out
lods
lods
in
mov
mov
out
lock
iret
push
add
jge
je
pushf
or
popa
in
mov
push
std
pop
xlat
ss
les
inc
notl
in
psrad
insl
add
adc
cmc
daa
lds
fisubrs
mov
pop
fsubrl
shrl
adc
icebp
jo
aam
pop
aad
mov
push
push
mov
and
mov
arpl
or
fisttpl
mov
jmp
dec
jl
out
ljmp
mov
fmull
hlt
and
ret
mov
sbb
push
les
adc
pop
mov
jecxz
cmc
dec
cmp
push
or
push
popa
stos
dec
adc
arpl
out
push
and
mov
cmp
aad
fwait
addr16
add
or
sbb
lods
mov
repnz
sub
cmp
xchg
aam
imul
shll
mov
jmp
ficompl
stc
in
push
js
dec
into
insl
loop
rorl
popf
jg
and
push
inc
cmpsl
jle
adc
mov
shrl
jo
movsb
jp
das
aad
icebp
adc
dec
psubusb
mov
repnz
outsb
add
mov
fxam
sub
dec
int3
jo
aad
inc
jb
push
out
sub
mov
or
stos
hlt
jmp
mov
jb
sahf
sbb
jmp
mov
jp
dec
and
icebp
ja
pop
and
xorb
sahf
or
out
mov
dec
popa
push
cmc
leave
ret
out
fldt
lcall
sub
mov
int
sbb
outsb
mov
rcll
mov
mov
out
enter
aas
xor
seto
ret
pusha
rclb
dec
cs
cmp
add
pop
mov
in
fildl
out
add
dec
imul
mov
push
xlat
pop
cmc
sub
arpl
adc
cld
std
push
push
out
dec
and
lods
xor
aas
push
cmp
jle
push
dec
inc
inc
insb
int3
adc
ja
pop
adc
jmp
adc
out
adc
xchg
incl
cmc
xchg
enter
leave
pusha
roll
lods
xchg
cmp
inc
dec
jmp
or
insb
dec
ret
mov
dec
imul
outsl
shlb
inc
enter
ds
push
out
push
cmc
les
jae
sti
mov
test
add
pop
xchg
xor
sbb
jecxz
test
pusha
cmp
lock
cmp
or
or
stc
jmp
jecxz
cld
and
mov
scas
into
aad
in
jno
addr16
mov
push
and
out
sar
popf
pop
jnp
test
and
std
std
adc
mov
aad
mov
mov
jmp
mov
jb
icebp
repnz
repnz
xlat
xchg
int
push
loope
loopne
mov
clc
pop
xor
lods
std
stos
jp
pop
les
aad
out
repz
cmc
je
in
jae
push
cld
inc
xchg
lods
ja
cwtl
jnp
dec
aad
and
add
rorl
adc
add
loop
movsl
out
les
pop
fs
jnp
insb
xchg
inc
dec
inc
xchg
dec
inc
pop
scas
jmp
jecxz
inc
fwait
hlt
sub
mov
in
inc
adc
and
stos
cmpsb
sub
xor
rcrb
loope
inc
and
daa
ret
mov
add
jmp
test
push
pop
cmp
stos
mov
cli
and
push
jnp
aam
arpl
or
push
popa
cld
fnstsw
frstor
imul
xchg
rcrb
jnp
out
fs
push
outsl
out
insb
ret
aad
pmaddwd
roll
xor
or
pusha
sbb
int3
sahf
fstl
test
aad
ficompl
dec
test
out
pop
push
push
lods
pop
mov
call
adc
cmp
push
loop
adcl
lods
cs
loopne
mov
in
jg
jmp
popf
mov
lods
aas
inc
or
mov
aas
jge
or
repnz
or
aaa
ret
cmp
xor
mov
cmp
pop
xor
sti
xchg
add
popa
pop
popa
lds
in
repz
shr
dec
mov
jbe
jl
xchg
lods
fwait
jmp
pop
or
scas
mov
insl
pop
dec
shlb
sub
mull
pop
js
jmp
push
test
cmc
or
lods
or
pop
lods
movsb
push
repz
dec
in
fisttpll
ror
out
rol
stc
enter
push
out
xchg
pop
mov
int
xchg
popa
stos
sar
in
insb
mov
jns
pop
fdivs
cmp
in
test
mov
test
or
test
icebp
loope
and
pop
mov
or
push
pop
dec
cltd
inc
push
pop
pand
cmp
push
mov
sbb
mov
aad
fbld
jmp
lods
out
jns
add
mov
xor
mov
inc
mov
add
or
out
int3
imul
and
icebp
int
decl
sarb
stos
mov
loope
pop
mov
je
loopne
jne
in
sti
nop
or
repnz
cmp
adc
jg
mov
xchg
jmp
jmp
dec
into
in
adc
xor
rorb
dec
mov
sti
cld
dec
cmp
xor
shll
and
ja
divl
pop
pop
les
clc
push
decb
jmp
mull
popf
jns
jecxz
lcall
scas
in
test
and
or
test
int3
or
push
adc
imul
pop
or
cs
sbb
sti
sub
cltd
insb
inc
aaa
xchg
imul
adc
mov
mov
sub
jmp
push
or
sti
cmc
mov
jo
cmpsl
out
jmp
add
aam
mov
mov
in
rcl
push
mov
scas
and
inc
or
pop
lsl
mov
mov
sti
mov
std
sub
pop
es
jge
push
dec
mov
mov
icebp
add
mov
ret
cmp
popf
xlat
sbb
loopne
or
shlb
test
clc
or
test
arpl
fisubs
add
add
jmp
das
mov
bndstx
lds
cmp
inc
jge
dec
ljmp
mov
rolb
int
mov
push
push
mov
pusha
sarl
mov
mov
push
cmc
decb
inc
loope
push
cwtl
cmp
insb
jbe
sub
out
sti
lret
push
stc
sub
fdiv
aad
arpl
cmpb
inc
lods
adc
mov
aad
jns
and
pusha
and
pop
pushf
cmp
add
cli
adc
cmp
aad
mov
lods
shrl
lahf
inc
into
mov
xchg
out
in
les
push
cmp
or
jbe
lahf
dec
daa
cmp
xchg
inc
mov
jno
mov
jg
dec
jnp
xchg
mov
xlat
and
cmp
stc
mov
xchg
jle
xchg
jo
sub
mov
pop
cmp
pop
lods
mov
and
xor
sub
rorb
mov
fdivrs
movsl
and
test
push
imul
fimuls
adc
push
out
sbb
jmp
sub
adc
or
mov
fnstcw
testb
shlb
out
outsb
outsb
clc
andl
push
mov
mov
sbb
and
jbe
cli
xor
mov
rcrl
stos
xchg
das
sub
mov
and
shrb
and
add
adc
jl
stos
fnstenv
cmp
out
inc
in
rcll
mov
mov
mov
popa
jmp
mov
dec
inc
arpl
out
notl
add
fsubrs
add
leave
xchg
push
cmp
jmp
daa
push
ret
into
pop
aad
pop
jg
mov
or
test
pusha
dec
lea
call
cmc
or
popa
es
leave
dec
mov
in
sub
push
add
sbb
add
ljmp
mov
jl
call
push
lcall
movsl
cmp
mov
xchg
out
out
push
fs
icebp
pop
cmp
lds
nop
adc
push
int
std
aad
in
push
cmc
xchg
mov
push
and
adc
cwtl
and
fcmovne
pusha
mov
out
testl
pop
mull
std
mov
sub
push
call
aam
fsubp
mov
rcll
out
dec
jmp
mov
jg
loope
push
rol
cmp
jecxz
cmc
mov
jb
mov
or
stos
std
loopne
roll
aad
test
jbe
frstor
popaw
icebp
cmc
push
in
and
and
mov
cmp
xor
or
aas
inc
cli
pushf
popa
insl
test
in
mov
nop
push
jl
test
push
fistl
stos
sub
cmc
cmp
in
icebp
mov
push
pop
movsb
mov
ud0
enter
push
das
mov
cmp
xlat
mov
aad
out
shr
mov
repnz
sub
sub
xchg
jge
adc
jl
out
adc
and
sbb
addl
stos
in
ret
pop
sub
outsl
test
stos
dec
cmp
xchg
iret
cmc
pop
mov
lods
ja
jl
jns
jg
push
cmpl
jle
or
jo
and
or
mov
mov
adcb
add
ficomps
add
push
mov
pop
xchg
add
xrstor
push
stc
jmp
rorb
fcomps
mov
test
add
gs
and
dec
scas
insl
aas
xchg
sar
or
icebp
mov
shrl
aad
cs
and
mov
mov
outsb
les
lahf
dec
add
cmp
inc
lods
fistps
cmp
and
cmc
inc
or
shl
mov
cld
test
inc
push
mov
int3
pop
mov
es
or
jecxz
sbb
cs
mov
xchg
cmp
push
and
sbb
jle
pop
cmc
xchg
xor
popf
lea
dec
jg
mov
sub
leave
push
in
jnp
cmp
push
jmp
add
and
js
insb
leave
jl
cmpsb
loopne
push
sbb
cmp
pop
insl
adc
imul
lock
lea
mov
adc
pop
sahf
iret
jnp
pop
dec
jno
cmpsb
lret
imul
rcrb
mov
rcll
sub
pop
stos
fdivrs
mov
add
lret
stos
pop
cs
inc
pop
out
mov
mov
inc
push
pop
pusha
data16
sbb
out
lret
adcl
les
cmc
fistpl
idivb
push
scas
gs
xchg
adc
mov
repz
addr16
push
cld
sbb
sub
dec
mov
lods
iret
xor
or
xor
ret
mov
data16
cmpsl
jno
jns
sub
enter
aad
pop
mov
fdivrs
sub
jge
imulb
mov
inc
pop
jp
cld
movsb
iret
call
dec
add
cmc
lret
out
push
pop
lretw
sbb
pusha
sbb
inc
or
jnp
mov
mov
jmp
sub
adc
pop
pop
ljmp
jge
paddw
push
sarl
jno
push
or
cmc
sub
xchg
adc
xchg
and
inc
jecxz
cmpsl
sbb
data16
or
dec
lods
nop
jmp
test
out
enter
sbb
icebp
imul
pop
test
or
mov
adc
pop
jno
std
stc
mov
loope
xlat
scas
jg
aad
sarl
or
or
xchg
and
add
mov
iret
push
lods
in
dec
mov
cmp
out
lret
int
dec
punpckhwd
and
push
fbstp
out
push
push
dec
ret
test
std
adc
xor
aam
fdivrs
sub
xchg
or
out
and
push
out
andb
dec
lods
add
sub
aad
mov
rclb
xchg
or
mov
dec
jnp
lret
pop
or
mov
cmp
sub
lods
cmpl
lcall
das
or
loope
daa
rcrl
fdivl
jmp
andb
subb
dec
xchg
jae
mov
push
das
int
jnp
mov
arpl
dec
call
aad
or
mov
dec
lret
mov
push
dec
lahf
repnz
pop
and
pop
stos
xchg
incl
andl
pop
cld
add
cmp
and
jmp
adc
xchg
ror
mov
nop
or
divl
cmp
adc
xor
ret
xchg
cmp
sarb
sub
aas
cmpsl
push
popa
dec
popa
cmp
imul
cmp
or
xchg
adc
in
xchg
mov
sbb
outsl
stos
hlt
cmp
jo
notb
sbb
add
mov
dec
mov
mov
jnp
push
push
jno
pop
das
ljmp
test
jge
adc
pusha
sti
jge
adc
jp
jp
cmpsb
lock
pop
popf
add
shr
enter
cmc
push
cmp
mov
add
mov
movsl
adc
mov
xor
and
rolb
imul
pusha
mov
or
pop
xor
sub
jno
pop
aaa
push
ljmp
inc
cltd
mov
cmp
outsl
lock
sarl
fdivl
sti
pop
scas
add
xor
mov
shrb
sbb
std
daa
pop
push
rcrl
shlb
test
stos
sub
in
arpl
scas
xchg
xchg
das
out
imul
addr16
wrmsr
add
icebp
add
js
shll
and
xchg
add
sti
aad
xor
sub
sub
sub
jmp
dec
mov
loopne
sub
xchg
das
pop
sbb
nop
jno
xor
mov
or
xchg
cli
push
pop
movsb
xor
sub
rcl
xchg
inc
push
sti
enter
adc
add
fdivrs
sub
stc
lods
push
iret
mov
cmp
mov
sub
into
xor
or
test
and
call
imull
sub
rcrl
popa
nop
adc
shrb
arpl
sub
or
lods
or
and
outsb
out
rcr
pusha
fiadds
repnz
xchg
jecxz
mov
adc
push
out
push
push
fistps
movsb
cld
dec
or
and
mov
sbbb
sahf
shr
jae
mov
call
xor
pop
fabs
or
cmp
aam
pop
lret
xor
inc
stos
rcrl
mov
xlat
dec
scas
mov
push
xchg
sub
inc
aad
sti
ja
inc
popa
cmc
sub
scas
sub
fs
cmp
inc
dec
inc
xlat
sarl
xor
xchg
or
mov
icebp
dec
cs
scas
push
fst
cmc
cmp
mov
cwtl
faddl
sbb
cmp
loope
aam
lret
aam
push
cmpsb
stc
nop
jmp
pop
pop
shlb
jns
adc
fcoml
and
push
addl
out
shrd
mov
dec
pop
loope
jle
outsl
lock
cmp
jne
loopne
push
mov
pop
and
or
cltd
xor
mov
mov
popl
pop
popl
lahf
jno
dec
outsl
notb
jl
jmp
jb
sbb
jno
imul
cli
test
xchg
cmpsl
ret
mov
lock
scas
xchg
add
mov
inc
fnsave
push
adc
or
hlt
push
ja
and
jbe
mov
lods
sbb
sub
adc
or
pop
rcrl
ret
sbb
fisttps
xchg
cs
rol
popa
dec
sub
sbb
sbb
outsl
jbe
mov
rcrb
jecxz
jnp
ret
lock
add
js
mov
lcall
inc
cli
inc
and
sbb
cmp
mov
mov
sbb
pushf
out
imul
pop
out
and
xchg
and
es
inc
inc
jp
and
stc
mov
aam
and
xor
push
outsb
ja
test
xor
mov
addr16
pop
inc
loope
addr16
push
push
mov
cmc
mov
mov
inc
inc
dec
shr
mov
ret
pop
mov
cmp
sbb
adc
mov
mov
xchg
xorl
adc
notl
adc
xor
enter
jbe
sub
arpl
lahf
sub
xchg
test
jmp
out
cli
inc
mov
sbbl
mov
sbb
ret
xor
stos
stc
jo
xchg
mov
in
arpl
aad
in
mov
lods
adc
stc
fldenv
mov
mov
in
sub
mov
loopnew
repnz
sbb
fimull
out
enter
loopne
pop
sti
xor
mov
pshufw
addr16
dec
inc
push
pop
jge
out
push
jnp
sub
subb
push
aas
adc
inc
jecxz
shrb
mov
push
jge
loop
or
jg
xchg
in
in
cmp
cld
mov
or
insb
in
rclb
pop
sti
dec
loop
leave
cmp
mov
sbb
scas
xor
scas
mov
in
dec
fidivs
pop
or
sub
call
fsubp
adc
and
adcl
js
in
js
cli
lds
adc
sub
sbb
cmp
addr16
adc
imul
btc
cli
loope
int
lahf
adc
orb
cmp
aam
jecxz
xor
sti
jmp
dec
jo
xchg
fbld
ficoms
cli
mov
push
or
sbbb
loop
or
idivb
jbe
xchg
movb
stc
jnp
iret
cmc
movups
cli
out
aad
lret
arpl
sbb
inc
dec
clc
test
mov
adc
add
shrb
add
xchg
in
adc
push
inc
pop
jge
push
cmovs
lret
mov
clc
mov
adc
or
and
dec
sbb
lods
loopne
pushw
jecxz
pop
aam
xchg
mov
push
cmp
stos
repnz
jne
cmp
add
pop
call
popa
movsb
ret
out
mov
lods
cmp
inc
lcall
cwtl
push
dec
aad
sbb
rolb
insl
cmc
clc
stos
int
shll
adc
nop
push
adc
test
rcrb
adc
loopne
xor
lock
cmpsb
mov
jmp
xchg
sbb
test
push
jb
mov
xchg
nop
add
fwait
jnp
iret
aaa
jp
mov
push
and
sub
push
add
inc
mov
xchg
outsl
cmp
sahf
push
pop
jecxz
iret
rcl
dec
cmpsb
xchg
jo
xchg
int
xor
nop
jmp
shll
push
cmp
ss
aam
jl
add
lods
push
fcomps
adc
sti
into
push
pushf
stc
pusha
and
jne
xchg
jmp
and
cs
xchg
cwtl
pop
adc
push
sar
shrl
adc
js
inc
push
mov
packsswb
or
xor
push
negb
test
xchg
iret
add
xor
rorl
aaa
push
movsl
lea
shlb
call
pusha
inc
cmp
das
aaa
andb
rorl
decl
push
or
cmp
mov
sub
inc
addr16
testl
bound
or
shr
stos
xchg
sub
dec
loopne
mov
in
lahf
xchg
jge
int
inc
addr16
mov
fidivs
jmp
aad
push
notb
cs
or
pop
repnz
jl
jb
sti
in
and
xchg
enter
pusha
mov
hlt
pop
dec
sub
test
ss
mov
ja
repnz
insb
outsb
cmpsb
cwtl
js
das
fdivrl
notl
inc
xchg
cmc
mov
xlat
inc
and
pusha
jl
jns
jecxz
hlt
nop
js
cmc
fisttpll
cmp
jno
iret
bound
leave
sbb
or
rcrl
pop
jne
sti
into
jno
test
mov
inc
lods
incb
and
xchg
push
gs
cmp
push
repz
aad
sub
cmp
mov
mov
imul
push
and
jne
pop
mov
int3
jg
lods
xchg
cmp
sub
outsl
out
lods
popa
dec
xchg
cmpsl
fs
add
cmc
dec
sub
jb
neg
add
cmp
cmc
dec
or
dec
pop
mov
in
cmp
cmc
ror
addr16
and
repz
xchg
dec
fisttpl
je
cmp
inc
call
aas
or
and
sub
stos
xor
mov
test
imul
lcall
xchg
lret
cmovg
xchg
push
cmc
dec
not
outsb
mov
or
pop
jb
xchg
popl
lods
push
and
es
jmp
xor
xchg
jne
sbb
addb
push
lretw
mov
cmp
into
scas
ficoms
push
inc
lods
pop
mov
sub
cmp
push
aad
stos
testl
in
inc
cmp
mov
loopne
dec
push
mov
cld
adc
enter
jmp
out
cmp
mov
ljmp
aaa
clc
and
mov
into
ret
dec
sub
cwtl
gs
jl
cmpsl
mov
xlat
aas
mov
push
stos
xor
sti
push
int
xlat
scas
dec
jp
rdpmc
dec
mov
cwtl
int
cwtl
mov
xlat
xchg
or
jmp
sub
and
sbb
aad
arpl
popw
lods
dec
cwtl
mov
dec
ss
xchg
stc
push
adc
lock
push
mov
adc
in
mov
pusha
fucomip
inc
faddp
test
imul
out
mov
in
fsub
xchg
adc
mov
repnz
mov
xchg
mov
dec
movsb
inc
mov
mov
add
clc
into
outsb
popf
fsub
lea
jmp
fwait
call
mov
xchg
jle
sub
or
test
and
lea
pop
jae
cmpsl
pop
sbb
je
jge
adc
mov
pop
push
daa
and
int
or
les
fcomip
and
cmp
in
push
pop
mov
xchg
xchg
pop
or
jge
test
mov
filds
hlt
aam
cltd
add
mov
jl
or
xor
scas
enter
jg
int3
cmp
pusha
loop
fucomp
mov
fcmovnb
lahf
xor
mov
dec
cmp
push
les
xchg
sti
xor
xchg
shrb
or
addr16
scas
or
test
inc
cwtl
inc
scas
outsb
cmc
in
pusha
leave
les
mov
xor
popf
or
jno
mov
cmp
repz
cmpsb
adc
jecxz
movsb
clc
aam
fdivrp
mov
sbb
inc
and
cmp
das
push
pop
xchg
adc
scas
and
popa
cmpsb
mov
xchg
push
xchg
push
cmc
sbb
inc
mov
lcall
push
std
test
pop
dec
dec
mov
mov
insb
add
pop
in
ficoml
dec
into
and
in
loopne
sub
mov
cmp
cmp
inc
and
ds
imul
mov
or
push
inc
ja
jg
fs
gs
dec
int
rolb
pop
xchg
imul
rcrl
cmpsl
mov
fstl
pop
jbe
xchg
test
or
nop
xchg
dec
loope
adcb
cli
adc
dec
fs
aad
rep
dec
pop
stc
add
fimull
ja
xchg
cmp
mov
xchg
cmpsb
clc
test
lcall
push
mov
aad
inc
push
push
xchg
loope
lods
sbb
mov
loopne
int3
test
inc
out
popa
in
sbb
loopne
adc
and
outsl
jne
das
sbb
call
push
data16
inc
push
push
mov
jo
add
lds
jnp
pop
push
xchg
mov
mov
and
test
scas
pop
push
inc
xchg
lea
and
fnstcw
mov
push
out
pusha
inc
inc
ljmp
adcb
fmuls
pop
rcl
fabs
je
mov
imul
iret
mov
sti
dec
adc
lods
cmp
push
or
inc
push
arpl
neg
pop
scas
sbb
sbb
lea
mov
mov
and
nop
pop
inc
in
lcall
in
adc
adc
xchg
nop
and
and
and
add
and
bound
mov
das
and
aam
dec
cmp
push
cmp
lahf
fisttpl
mov
dec
test
xor
in
push
or
and
xlat
jmp
push
push
das
xor
xor
icebp
mov
add
aad
loope
cmp
test
mov
lahf
cmp
imul
cmp
push
cmc
dec
add
imul
xlat
cltd
lods
test
sub
call
cli
out
test
lahf
xor
mov
stos
mov
push
repnz
in
mov
push
and
add
cmpsb
xchg
jno
clc
xchg
xor
pop
mov
or
sti
jmp
sub
cmp
lods
push
cmc
push
xchg
push
pop
xlat
sub
adcb
stc
inc
cmp
mov
mov
rcll
ret
mov
jp
mov
insb
push
mov
lods
and
es
test
fwait
push
add
cmc
daa
rcl
int
and
mov
add
cmpsb
push
xchg
mov
testl
sub
add
aad
jge
in
pop
push
cmc
mov
insl
mov
bnd
sar
lcall
shrb
dec
push
push
cmpsb
push
dec
jge
nop
aas
hlt
sub
sbb
cmc
push
dec
iret
mov
data16
adcb
sbbl
jg
mov
jle
in
idivl
mov
sbb
cld
pop
cmc
dec
test
dec
push
push
jo
sti
insl
dec
push
xchg
mov
xchg
leave
pop
lea
jg
cmc
mov
bound
mov
fistps
shrl
cmp
and
dec
cmpsl
xchg
jmp
add
pop
rclb
lds
adc
out
es
dec
pusha
lds
lea
cli
sarb
xchg
in
cmc
mov
mov
jle
xchg
jp
or
and
dec
push
ret
push
rorl
or
loope
out
sub
aad
xchg
ret
aam
iret
and
ljmp
pusha
mov
cmpsb
xchg
jecxz
cmp
aad
addr16
and
pop
sbb
mov
xchg
cmpsl
ficomps
lds
ret
mov
mov
and
add
pop
pusha
imull
lcall
mov
xchg
aad
xchg
inc
in
xlat
lock
sbb
jg
inc
outsb
cmp
rcrb
idivb
mov
adcl
and
das
add
jle
pop
xchg
jge
xchg
insb
in
ret
inc
pop
or
mov
and
dec
adc
sbb
jo
sub
nop
pop
mov
lahf
pop
mov
add
and
aad
std
xchg
mov
gs
cmp
out
inc
push
mov
jg
inc
push
jg
std
cmp
movsl
cmp
daa
xor
pop
mov
sbb
js
add
cmc
xlat
jl
pop
fldpi
pop
fildll
and
das
in
repnz
movsl
dec
jae
pop
outsl
and
in
or
jne
adc
cli
fiaddl
int
or
pusha
cld
or
adc
js
push
xor
sub
push
xchg
mov
jae
cmp
popf
mov
out
mov
jecxz
add
xchg
mov
push
and
add
sti
seto
stos
pop
ficoms
adc
dec
dec
dec
push
out
fwait
mov
test
jle
mov
or
sahf
inc
cltd
scas
nop
mov
out
out
shll
cmp
leave
addr16
mov
add
mov
sub
rcll
sub
sarb
rorb
sbb
xchg
adc
fcoml
xchg
out
aad
push
popa
jno
or
mov
aad
sub
push
mov
pop
mov
aam
pop
not
dec
fdivr
pop
dec
xor
data16
clc
jne
cld
mov
dec
pop
ss
mov
fwait
shlb
add
loope
push
cmpsb
jl
adc
into
adc
fsubr
icebp
aad
sub
ficomps
sbb
out
cmc
gs
add
mov
mov
mov
lahf
cmc
not
cli
push
js
jecxz
mov
jle
xchg
mov
mov
sbb
stc
push
cmc
testl
xor
cmp
movsb
push
ffreep
outsb
aad
fsts
xchg
and
popfw
mov
mov
popa
push
test
stc
or
fmuls
xlat
push
test
push
pushf
lret
push
dec
imul
call
mov
outsb
cmc
stos
fldl
test
shlb
mov
adc
out
data16
mov
jp
jmp
jbe
aad
adc
je
stc
or
popf
loope
mull
lahf
xor
xor
mov
jp
cmp
sub
push
cmp
or
in
aad
and
out
mov
mov
fs
rol
pop
imul
nop
test
adc
andb
scas
inc
movsb
cld
pop
push
mov
stc
mov
sahf
jno
push
dec
sub
mov
sbb
test
cld
lods
int3
movsb
aaa
mov
data16
push
mov
dec
and
jge
scas
mull
or
xor
add
or
andl
push
xchg
xor
jnp
jo
popa
dec
dec
and
ss
pusha
adc
jb
andl
lods
or
mov
jl,pt
add
popf
mov
sbb
scas
cmpb
or
push
adc
out
cmc
pusha
insl
sahf
stos
dec
xchg
fcmovne
arpl
and
outsl
add
imul
aad
aad
out
xchg
stos
adc
test
mov
loop
lock
test
imul
outsl
or
mov
out
adc
add
ret
mov
cltd
mov
xchg
add
cli
movsl
or
xlat
iret
xchg
mov
xor
push
js
fldl
mov
jmp
push
sub
out
out
cmc
out
push
iret
out
or
jp
popf
stos
lahf
cmp
pop
xchg
sub
test
call
dec
btc
nop
jne
lea
adc
mov
mov
push
pop
scas
rolb
or
add
ret
jne
xor
or
iret
sbb
pusha
cmp
push
aad
jge
iret
iret
cmc
mov
pop
adc
push
fneni(8087
lcall
jg
stos
inc
mov
adc
test
mov
cli
and
shrb
inc
add
push
inc
cmp
out
inc
adc
adc
mov
or
fidivrl
xor
sbb
xchg
sbbb
xor
lea
xor
pop
jge
lcall
popa
adc
mov
stc
out
adc
mov
insl
or
pop
test
lret
push
cmp
pop
mov
jmp
mov
sub
push
inc
fldt
cmp
sarl
pop
lods
pop
test
cmp
psubb
stc
xorl
cmpsl
sbb
mov
decb
jecxz
add
dec
lock
mov
fwait
xor
or
push
out
insb
mov
cli
pusha
push
imul
fs
bound
inc
dec
xlat
lods
lds
sbb
ja
sti
mov
ret
fmul
fsts
imul
add
xor
xchg
jno
int
es
jno
jle
mov
xchg
test
push
xor
jnp
stos
dec
lods
js
mov
je
sub
sti
jmp
push
fstpl
cmp
call
mov
aam
jo
sub
xchg
mov
jae
pop
pop
popf
cmp
or
in
xor
push
pop
mov
in
push
mov
pop
aaa
dec
imul
cmp
mov
push
and
aas
inc
testl
adc
jg
add
sub
mov
aas
ljmp
add
add
mov
loope
loopne
add
pop
sbb
mov
adc
int3
mov
in
pop
or
add
daa
sub
les
push
int
and
mov
sarl
pop
sbb
lock
fbld
jb
dec
add
xchg
es
mov
fmuls
lods
scas
add
push
jecxz
sarl
aad
inc
std
jg
lods
negl
pop
test
mov
cmp
lret
mov
mov
cmp
jo
or
outsb
adc
loop
sub
imul
sbb
pop
cmpsb
fisubrl
adc
mov
sbb
in
icebp
arpl
push
mov
ret
sbb
ss
add
xchg
gs
hlt
jl
xor
popa
mov
or
xchg
and
dec
sbbl
pop
lret
adc
jl
or
mov
popf
mov
outsl
aad
pushf
jl
push
mov
sub
xor
cmc
dec
fcompl
sbb
fsubp
ret
into
dec
pop
jge
loopne
mov
cmp
dec
mov
push
or
dec
cmp
repz
sub
rorl
pop
js
jmp
in
dec
fildll
aad
testb
mov
and
xchg
adc
mov
pop
lods
fldl
mov
xor
fadd
mov
sub
sti
hlt
fldln2
or
dec
imul
je
inc
pop
imul
dec
fimull
rclb
push
jmp
lahf
ljmp
and
sbb
mov
jns
fidivrs
and
subl
mov
jo
xor
xor
mov
js
xlat
push
xchg
mov
dec
mov
xchg
push
cltd
fdivrl
sub
rol
pop
mov
call
dec
cmp
cld
adc
push
fistpl
adc
cmp
aad
scas
rcll
dec
jnp
sarb
jae
mov
xchg
add
or
lods
or
mov
push
sbb
and
in
add
fnop
and
mov
jmp
add
mov
into
icebp
les
out
lret
jmp
xchg
sbb
cmc
movsl
popa
xchg
mov
scas
dec
pop
mov
jecxz
sub
iret
pusha
pop
cmc
mov
xchg
data16
or
es
int
test
dec
or
lmsw
jmp
jge
fnstsw
out
mov
sub
cmc
call
lret
jp
or
fstl
jb
in
push
cli
or
xchg
loope
and
jo
ds
and
or
mov
mov
aad
pop
mov
jmp
jg
cmp
jne
jle
dec
inc
or
xor
fisubl
aas
add
decb
sbb
jle
xchg
mov
or
push
sbb
call
jecxz,pn
es
jae
js
daa
gs
out
shrl
sbb
pop
outsl
and
xor
inc
scas
das
inc
cs
cld
into
imul
or
jns
icebp
xor
xchg
xchg
jle
push
rorl
add
outsb
adc
in
mov
sti
mov
mov
popa
in
cmp
in
lret
arpl
rolb
add
or
mov
jg
cmp
shrb
ljmp
int3
jp
ja
addr16
cli
arpl
xchg
push
dec
mov
and
dec
aad
inc
sub
cli
jl
lock
mov
mov
push
push
dec
xor
call
lcall
push
pop
adc
fisubs
fnstenv
dec
push
xchg
pusha
daa
test
push
outsb
dec
xor
aam
pop
cs
jae
dec
shll
pushf
mov
aam
mov
sbb
cld
movsb
fwait
adc
push
mov
fdivr
mov
out
clc
into
mov
add
repz
imul
inc
lahf
mov
xchg
push
xor
push
mov
mov
dec
movsb
iret
push
sbb
cmp
lods
mov
loope
sti
pop
loope
sbb
xor
lret
fsubl
push
sarl
cmp
imul
mov
pop
fdivrs
sbb
jnp
and
shlb
lahf
and
rorb
add
mov
rorl
or
dec
imul
inc
loop
loope
das
icebp
jle
cwtl
push
jmp
divb
mov
add
add
insl
inc
out
add
dec
rclb
add
push
jl
addl
fiaddl
js
sbb
mov
lret
pop
inc
out
xor
xor
xchg
add
add
jecxz
aam
mov
movsb
sarb
das
add
xchg
jae
repz
jle
ljmp
imul
jl
jae
clc
lret
pop
adc
cmc
lret
jg
or
repz
jno
xchg
add
pop
mov
pushf
add
lret
mov
add
sbb
call
cs
adc
movd
add
lahf
out
fstp
mov
addr16
fdivrs
leave
sub
xor
mov
xlat
mov
add
enter
fwait
dec
out
adc
mov
out
dec
sbb
xchg
icebp
mov
iret
inc
fidivrl
clc
pop
out
fcoms
test
shrl
pop
push
out
aam
add
mov
dec
dec
repz
mov
add
pop
cwtl
bound
add
stc
mov
scas
sbb
push
pop
outsl
xlat
or
or
add
pop
loop
pop
shr
jae
add
and
or
jne
repz
ds
jg
add
outsl
xor
xchg
mov
xor
ds
pop
xchg
fmuls
js
add
sub
add
xchg
les
dec
cwtl
dec
loope
scas
jle
mov
or
decb
insl
pop
aad
imul
jmp
ror
fwait
cld
imull
imul
loop
pop
cmp
xor
push
loope
mov
iret
ss
mov
xor
imull
adc
shlb
jl
jnp
loope
cmp
lret
dec
jp
out
out
ljmp
lock
push
lahf
adc
jbe
out
cmp
xor
scas
pushf
in
or
cwtl
mov
outsb
mov
loop
pop
movsl
fisttpl
push
sub
mov
adc
xchg
dec
add
fstpt
int
xchg
xchg
stc
add
movsb
pop
sbb
cld
movsl
add
sub
out
add
cmpsl
lods
push
fwait
jo
xor
sarb
push
xchg
rolb
sbb
out
pop
icebp
int3
or
nop
out
fmull
pop
fcomp
sub
imul
ljmp
popf
adc
pop
xor
stos
fmul
xchg
xor
mov
lahf
std
push
loope
and
sbb
jnp
in
cltd
inc
out
stos
mov
ljmp
aas
insb
fisttpl
sbb
lret
fcomps
das
mov
mov
stos
fstps
icebp
lret
cmp
test
add
pop
inc
insl
dec
jge
loop
jne
add
jb
or
popf
fisttpll
inc
mov
dec
xchg
mov
dec
sti
push
xor
xchg
xchg
cmpsl
in
fadds
pop
mov
aad
xor
call
adc
int3
sub
dec
sub
ljmp
fisubl
scas
pop
push
push
gs
fs
or
xlat
pop
movsb
add
je
dec
add
ljmp
cmc
test
inc
lahf
cmpsb
xlat
imul
jae
add
mov
mov
mov
xchg
jno
sub
dec
adc
ljmp
lcall
not
jb
loopne
das
mov
test
mov
gs
aad
sbb
pop
pop
mov
insl
sub
inc
mov
repnz
stos
imul
push
lcall
loop
inc
aas
pop
sub
mov
push
lahf
adc
sti
icebp
aaa
adc
lock
test
ficompl
dec
outsl
pop
xchg
andb
xchg
sahf
mov
xlat
cmp
add
rolb
push
ret
cmp
pop
push
add
in
push
add
les
xor
add
xor
add
inc
add
jns
imul
pop
add
sar
jmp
xchg
lret
mov
test
dec
out
or
pop
cmp
std
xlat
mov
mov
xor
mov
ds
jecxz
sbb
dec
cmc
les
fsubp
jp
mov
stos
mov
push
decl
pop
cmpsb
mov
ss
dec
and
stc
mov
shlb
aaa
add
iret
dec
movsb
jb
ljmp
cmp
mov
mov
clc
dec
addb
test
xchg
mov
jmp
les
push
sbb
jne
inc
push
push
or
adc
jae
jg
cmp
popf
add
shrb
add
jns
sahf
ja
add
stos
mov
lahf
xor
adc
outsb
sbb
add
and
push
xchg
ret
mov
or
dec
add
sbb
jl
outsl
add
push
test
stos
pop
add
jle
and
add
test
jg
inc
xchg
or
xchg
sub
std
cmp
inc
push
scas
loope
lds
add
dec
cmp
fs
push
inc
lea
pop
call
call
out
or
aaa
jge
sub
jne
xor
add
fimuls
jae
push
imull
xor
add
repz
mov
test
mov
jp
test
fldl
dec
push
cmp
popf
dec
iret
pop
mov
or
in
mov
enter
mov
leave
add
adc
adc
out
add
lcall
jae
out
xlat
push
or
test
leave
jnp
mov
cmc
pop
sbb
mov
inc
sub
adc
xor
cld
data16
aam
pop
add
clc
adc
rcll
inc
lea
cs
fwait
or
add
mov
xchg
in
addb
js
aas
adc
pop
push
stc
pushf
mov
mov
pop
push
aas
xchg
ja
test
add
sub
xlat
in
add
out
dec
xchg
in
outsl
addl
in
sub
add
int3
adc
push
dec
jo
push
outsl
psubq
adc
out
lods
or
nopl
stos
mov
out
rsqrtps
jne
jne
add
adc
add
mov
insb
cmp
lods
ss
dec
or
pop
xchg
fistps
cmpb
add
ret
dec
std
iret
xor
and
cwtl
cmp
daa
xchg
clc
pop
fucomip
add
cmp
movsb
imul
dec
push
sbb
mov
loop
imul
add
popa
jl
mov
jne
add
ds
or
xlat
push
into
cs
and
addb
outsb
movsb
jns
sbb
shld
inc
sub
sbb
add
cmp
mov
in
rolb
add
into
mov
scas
add
adc
in
pop
inc
and
push
shr
pop
outsb
jle
and
add
test
sub
out
cmp
adc
push
inc
int
lahf
jmp
dec
out
ljmp
nop
mov
inc
mov
mov
das
sbb
fsubrl
pop
add
adc
lea
add
pusha
dec
pop
fcompl
xlat
std
cwtl
xchg
jg
xor
lods
mov
push
mov
jb
sbb
xlat
xor
ljmp
sub
dec
jmp
out
cltd
sti
shlb
mov
add
shll
jno
or
dec
cs
adc
and
js
mov
jl
lcall
mov
outsl
pop
repnz
mov
ds
int3
cs
gs
pop
push
scas
es
dec
adc
xchg
iret
inc
cmp
push
repz
aaa
add
xchg
push
inc
pop
std
jmp
aam
cmp
daa
dec
add
mov
aad
scas
jl
cld
shr
xchg
lahf
cmp
xchg
rcrl
mov
sbb
shrl
dec
push
sub
iret
in
mov
mov
adc
repz
sub
push
add
lods
mov
jl
das
imul
add
xchg
xchg
jb
add
imul
jecxz
iret
pop
dec
jae
or
mov
imulb
lahf
out
repz
fs
dec
dec
in
jmp
mov
sub
std
popa
add
das
cmp
faddl
test
jecxz
xchg
sbb
nop
or
jns
cmp
mov
test
aam
ret
lcall
mov
bound
dec
pop
lahf
subb
mov
stc
xor
mov
xchg
in
iret
test
sbb
orb
outsb
add
orb
aad
add
mov
mov
inc
imul
sbb
out
iret
sub
movsb
pop
xlat
mov
cmp
stos
dec
push
les
aaa
iret
insl
cmp
dec
jg
mov
jmp
mov
aaa
out
or
dec
mov
out
jmp
xor
fxch
xor
mov
out
mov
mov
scas
movsl
jle
lcall
call
xchg
add
rol
iret
push
mov
add
clc
jo
stos
hlt
dec
adc
xor
push
std
pop
out
std
or
scas
mov
fbld
jae
xchg
lahf
cld
addb
test
imul
xchg
mov
jp
popa
push
pop
loop
pop
sbb
lret
lret
mov
xlat
fsubs
add
mov
xor
mov
cld
test
lret
jmp
and
dec
inc
push
xchg
daa
fstl
mov
call
xchg
cmp
shll
rcrb
pop
addb
jle
ljmp
mov
jnp
and
push
adc
jl
jge
dec
jle
std
sub
mov
std
dec
dec
inc
aas
mov
nopl
movaps
push
aam
pop
mov
cmpl
pextrw
inc
inc
adc
mov
adc
out
stos
movl
orl
dec
mov
test
push
fxch
dec
mov
out
pop
dec
pushl
add
dec
xchg
add
cmp
mov
lcall
cmc
int
roll
pop
mov
es
invd
fidivrl
jns
adc
and
xchg
cmp
hlt
iret
imulb
mov
shrl
or
in
mov
in
xchg
loope
push
scas
sub
daa
mov
in
jbe
mov
orb
pop
cmp
bound
sbb
ljmp
addb
dec
sub
shr
orb
test
xor
cld
loope
add
push
xchg
push
push
scas
pop
std
sub
pop
sbb
stos
repz
or
jge
es
test
stos
adcb
xor
xchg
xchg
js
adc
fisttpl
or
incb
xlat
mov
out
cli
or
dec
ret
sub
mov
dec
iret
por
pop
scas
les
sbb
dec
mov
lret
add
shlb
inc
push
test
add
mov
mov
ret
jae
repnz
mov
cs
pop
mov
movsb
fisttpl
das
push
cwtl
jmp
inc
cmp
scas
rol
sbbl
jmp
add
jp
lods
aam
mov
inc
xorb
stos
insb
loopne
fadds
mul
jecxz
jmp
rcl
shll
pop
aad
roll
clc
add
aas
cld
ret
inc
inc
rcl
roll
mov
xorl
inc
lahf
sub
test
in
aam
filds
cld
fisttps
aas
es
jmp
ret
fwait
dec
roll
jecxz
rorl
addb
cs
inc
xchg
mov
fisttpl
shll
push
jnp,pn
pop
inc
push
sbb
mov
inc
fsubrl
or
add
xchg
aad
aam
and
outsl
inc
adc
add
xor
and
mov
test
es
jmp
lods
sbbl
pop
repnz
iret
icebp
add
lea
push
flds
xlat
iret
push
add
ret
fs
xorl
test
or
test
dec
addl
mov
popf
pop
fwait
adc
js
jae
repnz
sbb
or
outsl
inc
dec
cmp
mov
roll
hlt
add
xor
sahf
test
enter
sbbl
ds
push
add
mov
dec
dec
ret
pop
out
adcb
das
add
aas
and
push
stos
ljmp
mov
icebp
sub
ljmp
or
add
test
mov
xorl
inc
push
add
ret
test
inc
clc
add
icebp
sar
cli
mov
mov
inc
test
adc
add
pop
roll
jmp
fcomps
jae
or
cmpsb
test
push
sbb
fcomp
push
add
push
shll
scas
sbbl
in
imul
sbb
dec
roll
inc
cmp
and
outsl
or
std
aas
iret
add
jmp
ret
xchg
jnp
sbbl
inc
mov
jl
mov
cmc
jl
sub
push
icebp
inc
adc
pop
repnz
aas
lods
subl
inc
and
scas
popl
ffreep
enter
std
std
mov
xorb
or
jp
push
xor
mov
mov
popf
xchg
dec
xor
jmp
add
lock
jg
fwait
inc
dec
add
mov
rol
lea
lahf
fidivrl
add
pop
aad
roll
inc
fstpt
leave
add
sub
mov
fcmovbe
sti
mov
daa
insb
push
pop
popf
add
cmc
pop
cmp
test
adc
sti
shlb
mov
fucomp
out
mov
imul
out
addb
cs
pop
mov
push
sub
and
sbb
xorl
scas
push
add
shrb
lahf
jbe
fisttpll
pop
insl
neg
out
cli
cs
add
inc
jmp
and
repnz
or
fsubrs
cmp
mov
push
mov
cltd
xorb
xlat
inc
jmp
or
enter
int
xchg
inc
push
fst
add
xor
xor
xor
sub
inc
sti
xchg
repz
lret
xor
add
dec
movsb
ret
enter
jmp
add
xchg
mov
ret
arpl
cli
orb
jp
hlt
aad
aam
sarl
repz
cld
mov
jae
or
sbb
add
popf
fstp
inc
sarb
mov
lods
mov
fwait
sahf
fnstenv
jae
repnz
xor
clc
inc
out
inc
pop
mov
je
stos
bnd
roll
aas
insl
add
jmp
shr
xchg
imul
xor
mov
fisttps
sub
mov
add
roll
xorl
cmovne
jmp
or
mov
dec
andb
enter
or
or
inc
sidtl
xchg
lock
enter
add
cltd
lcall
mull
xorl
add
sub
sbb
mov
cmc
repnz
or
add
imul
rorl
movsl
aaa
roll
sbb
cmp
cld
jmp
iret
dec
add
ret
xor
push
adc
mov
sbb
cmpb
rcl
fwait
aad
roll
cmp
insb
gs
or
test
into
int3
cmpb
hlt
xor
jle
mov
int3
jl
lods
mov
pop
xchg
jmp
add
loopne
ret
orb
insb
lret
mov
pop
fsub
mov
movsl
add
rorb
jp
mov
insl
icebp
adc
inc
adc
jmp
loope
xlat
out
mov
cmp
jbe
fcmovbe
xchg
rcrl
add
mov
ret
jecxz
les
imul
int3
add
repnz
dec
mov
cmp
test
out
cwtl
add
jmp
inc
fucompp
xlat
in
dec
stos
add
ret
pop
or
add
ret
jb
xchg
frstor
push
or
xorl
pop
mov
nop
out
andb
aad
mov
inc
add
inc
pop
mov
mov
movsb
pop
add
mov
add
ret
sbb
sub
xchg
sub
aaa
mov
jbe
mov
inc
cmp
inc
and
sub
mov
pop
dec
out
dec
xorl
push
cmpsl
push
inc
or
jmp
enter
iret
push
orb
repnz
add
int
add
ret
inc
or
sbb
cmp
test
imul
cli
inc
add
ret
xlat
sub
sbb
lret
jl
insb
push
fmull
stos
sbb
dec
cld
test
dec
inc
inc
sbb
mov
stos
popf
out
adc
aas
sarl
test
insb
in
jl
insb
in
ljmp
xchg
fdivrp
filds
inc
and
jnp
cli
mov
xor
add
sub
jmp
add
movsb
or
inc
jae
repnz
or
adc
rcr
es
sti
addl
jno
pop
enter
rcrb
jae
bnd
pusha
cli
add
decb
fistpll
push
xchg
mov
xor
into
add
sub
ret
subb
and
adc
int3
shl
dec
movb
mov
outsl
repnz
pop
icebp
aad
js
imul
ljmp
xchg
addr16
stc
in
repnz
add
xor
daa
cs
inc
mov
ja
add
and
aam
inc
add
jmp
shll
inc
ffree
loop
movb
outsl
sti
mov
or
add
test
add
jmp
add
mov
cs
add
cmc
ret
stc
xorb
xchg
jb
mov
test
out
shl
adcl
add
jmp
shrb
rorl
insl
imul
jne
mov
fdivl
add
mov
ds
subl
cmp
out
rcl
jne
add
fisubrl
dec
mov
pop
fistpl
daa
inc
inc
ljmp
ret
insb
rorl
dec
daa
ljmp
dec
push
lahf
lods
xchg
mov
add
orl
scas
in
dec
rclb
or
sbb
add
andl
xor
ret
iret
lret
ror
add
aad
insb
and
inc
lret
or
or
mov
roll
sbb
subl
add
mov
inc
shr
mov
inc
sti
test
dec
lods
add
inc
shrb
and
xchg
aam
stos
or
xchg
xchg
xlat
pop
sbb
addr16
scas
jle
stc
inc
sub
ja
rol
xchg
cmpl
push
scas
faddl
orb
fwait
add
rol
cmp
push
lcall
dec
inc
ret
ds
ss
out
insl
addb
mov
incl
xchg
mov
inc
push
popf
mov
popa
sbb
in
imul
cmp
scas
iret
pop
ret
sub
mov
fnstsw
sarb
mov
insb
lods
in
jg
inc
sahf
mov
jns
mov
int
shrl
sub
rclb
cld
test
enter
dec
add
hlt
inc
test
popf
pop
fildl
jnp
out
fisttpl
lahf
mov
mov
mov
addl
insb
mov
xlat
inc
push
add
push
aam
roll
lea
sbbb
insb
xchg
pop
int
push
imul
je
inc
clc
ret
jne
in
mov
sarb
dec
andb
push
adc
sahf
jp
xchg
in
test
or
repnz
or
fs
mov
popf
sbb
xlat
rorl
subl
mov
xlat
jmp
loop
or
insl
shr
lahf
test
pop
xchg
fsubs
cwtl
ret
or
andl
enter
inc
sub
and
cwtl
icebp
xlat
xorb
add
sbbl
loop
stos
or
jg
add
in
inc
rol
lds
dec
pop
icebp
pop
cmc
jge
into
ret
or
addl
inc
jno
out
dec
stc
add
test
test
lods
mov
xor
test
mov
out
pop
cmpsl
int
testl
sub
adcb
decb
ret
in
push
xlat
jle
xchg
leave
rol
sbbl
sbb
jmp
pop
xorl
shrb
inc
xor
mov
ljmp
jmp
js
inc
jbe
jae
outsb
sti
push
je
inc
adc
and
add
rorl
inc
push
sti
cmp
jbe
jb
ror
cmpl
cmp
inc
fcomip
or
and
push
ljmp
sahf
jecxz
jl
adcl
add
outsl
adc
inc
xor
test
shrl
jge
dec
cmp
sub
add
test
dec
rolb
xlat
pop
jno
mov
out
decl
shl
xlat
enter
ret
xchg
jmp
and
imul
inc
adc
rolb
into
roll
mov
clc
call
jle
sbb
jae
repnz
inc
or
mov
orb
jno,pn
lock
cld
fdivrp
clc
je
fadds
aas
popf
add
cmp
jae
repnz
push
jmp
repnz
sub
subl
mov
mov
mov
inc
mov
fnstcw
dec
loop
inc
mov
fstps
jns
xchg
in
cli
xor
add
jmp
subl
fists
popa
fldpi
push
repnz
jb
dec
iret
ret
or
sub
fdivl
xor
out
add
int3
inc
pop
enter
ljmp
outsb
pusha
out
xchg
dec
imull
jmp
sub
out
add
imul
lods
andb
outsl
pop
test
mov
popf
cltd
add
or
rclb
lock
sti
or
xchg
iret
and
cmpl
or
add
sub
leave
inc
ja
mov
call
orl
jno
mov
test
cmp
daa
leave
out
out
push
dec
mov
sub
or
inc
ss
add
imul
sbbb
call
push
jl
outsl
mov
inc
clc
lods
loope
das
cli
add
stos
mov
push
pop
xor
push
jmp
sub
or
inc
adc
jb
cs
dec
stos
dec
pop
pop
xchg
in
adcl
mov
imul
push
pop
or
in
fucomip
or
sub
cmovno
add
sti
std
mov
add
idivl
aas
xchg
out
sbbl
add
ljmp
pop
clc
sbbl
roll
sub
pop
ss
fs
sbb
faddl
mov
imul
push
mov
js
loop
aad
rol
sbb
aas
std
inc
repz
daa
adc
fucomp
push
cmpb
popa
pop
imul
bswap
sub
rorl
roll
stos
cmc
inc
cmc
rolb
negb
roll
add
je
pop
pop
cmp
pop
enter
push
shll
add
jecxz
ret
andb
mov
adcl
roll
pop
mov
xlat
or
inc
ret
testl
out
loope
int
add
pusha
xor
outsl
inc
mov
fisttps
aam
or
pop
movb
or
and
add
jp
enter
andb
aaa
inc
bound
out
or
push
imull
pushf
orl
dec
and
aad
movl
fistpl
or
inc
dec
test
dec
mov
sbb
stos
cli
jmp
leave
inc
inc
ficoml
sbb
les
outsb
jmp
aas
iret
addl
xlat
ljmp
test
in
enter
or
sub
push
loope
jge
movsl
stc
rorl
sar
push
pop
mov
in
add
fisttpll
push
ret
roll
nop
aad
xor
stc
aad
aam
mov
fldenv
insb
adc
dec
jecxz
mov
rolb
adc
xchg
into
inc
add
fs
or
mov
cmpb
pop
mov
add
sub
pop
ret
inc
movb
and
lahf
add
out
cltd
adc
jae
orl
hlt
add
adcl
sti
div
mov
aad
xchg
push
sti
test
or
sbbl
jb
aam
roll
inc
or
lret
sbb
inc
ss
or
pop
scas
ret
rorl
les
addl
dec
xchg
shlb
push
sbbb
mul
cli
sti
cmpsb
iret
test
in
mov
fnstenv
xchg
jge
iret
jo
ret
or
iret
fildl
mov
bound
mov
sbb
shr
sahf
jnp,pn
mov
mov
loopne
add
push
pop
aad
cmp
aam
mov
loope
aad
mov
mov
das
repz
pushf
jmp
add
jle
shll
pop
jmp
sahf
mov
sar
push
enter
andl
imul
out
jmp
sbb
out
pop
ljmp
add
jle
and
lahf
popa
jp
call
inc
or
mov
sub
inc
sahf
push
sti
out
decl
fs
addr16
aaa
pop
jmp
inc
cwtl
inc
push
dec
mov
aam
mov
bound
pop
shrl
fldl
pop
aam
movsl
insb
mov
xor
icebp
popf
or
xchg
jae
cmp
jecxz
add
in
adc
ja
xlat
add
orb
inc
jmp
and
pop
pop
pusha
and
jle
cld
aad
aam
sub
fldl
jecxz
add
push
repz
mov
subl
add
mov
iret
or
push
add
cmc
lods
arpl
mov
test
mov
inc
sub
roll
jecxz
fadd
insb
pushl
add
jne
imul
inc
roll
inc
add
nop
jmp
or
loopne
add
inc
das
loope
addr16
push
sti
jg
into
fadds
sub
cmp
lods
daa
test
sub
pop
push
mov
arpl
out
roll
in
add
cli
cmc
sti
pop
add
mov
or
pop
and
sbb
ljmp
jo
rol
andl
scas
jo
xor
dec
add
arpl
repnz
or
inc
gs
jb
cmp
mov
aas
jl
das
movl
lea
ret
js,pn
dec
je
int
mov
fbstp
jl
mov
popa
jmp
rorl
out
cmp
dec
dec
orb
cmp
stos
mov
add
addl
repz
shll
filds
pop
aad
popf
add
xorl
shlb
jp
fidivs
decb
leave
in
decb
roll
xor
jg
sbb
mov
and
ret
pushl
push
jb
or
out
in
shl
jmp
jae
sbbl
stos
jecxz
std
add
scas
pop
cmp
scas
or
test
jnp
mov
bnd
arpl
ret
pop
mov
add
shr
mov
popa
std
aas
leave
add
out
xor
shl
js
imul
add
movsl
ret
stc
sti
loopne
fcoml
jnp
movb
sbb
rcrb
sub
sti
std
das
jle
cmc
jmp
ret
scas
mov
subl
popa
dec
adc
rcr
in
cmp
mov
loop
and
inc
adc
sub
loop
jl
mov
popf
leave
testb
iret
add
repnz
cs
test
add
int
adcb
add
or
dec
jno
add
jnp
dec
rcrl
enter
pusha
enter
test
stos
jmp
jbe
mov
or
out
sbb
in
cwtl
imul
mov
inc
mov
add
aas
xlat
rcll
pop
aam
in
enter
mov
sbb
out
out
loope
mov
in
jmp
jmp
in
fdivrl
fimuls
pop
push
xchg
shll
data16
int
rolb
fimull
aas
add
js
mov
cmp
sarb
inc
enterw
imulb
jmp
int
jmp
push
and
aas
inc
out
fistpl
add
inc
jno
roll
push
add
adc
rclb
dec
add
ljmp
roll
jmp
pop
inc
or
dec
out
aas
lret
sbbl
mov
cmp
jae
cmp
cmp
adc
mov
add
lods
shrb
xchg
test
test
les
jns
sahf
sti
or
test
jmp
jae
cs
adc
xchg
mov
push
or
push
adc
or
out
roll
test
sub
inc
cmpsb
jo
or
pop
popa
mov
roll
push
pop
aam
imul
dec
push
popa
inc
adc
andb
shll
xor
aad
add
mov
daa
sub
repz
xlat
lret
xorl
ja
mov
divb
push
aad
xor
out
clc
sub
js
jnp
mov
shlb
rorb
push
fistpl
push
leave
fsubr
rol
dec
push
orl
fdivr
stos
inc
cli
or
stos
outsl
decb
rcrl
xor
dec
inc
jge
pop
pop
xchg
jmp
rorb
test
inc
inc
test
add
std
or
sub
xchg
mov
inc
mov
or
mov
stos
rcrl
lret
roll
jl
mov
cmp
add
call
pmaxub
std
sub
inc
sub
out
jne
pop
adcl
ja
push
mov
mov
jecxz
sub
cli
lods
push
xchg
mov
inc
mov
stc
roll
or
ret
sub
mov
add
rol
dec
pop
ja
insb
pop
inc
dec
dec
add
shr
mov
jmp
push
out
cmp
ja
insl
stc
hlt
in
cld
lods
mov
in
orb
lods
std
popa
stos
iret
in
orb
int3
repz
movsb
cmp
inc
xchg
test
rcl
or
jp
dec
ror
mov
jns
and
mov
add
cmpsl
test
roll
inc
loopne
jmp
cs
adc
scas
addb
in
sar
mov
xor
mov
jecxz
jae
jns
outsl
fistpl
fs
jmp
icebp
aad
fildl
call
shll
movsl
ficompl
lock
shll
jae
mov
xor
fmull
mov
xchg
divb
mov
mov
mov
jmp
int
add
outsl
mov
scas
out
jae
filds
roll
cmp
mov
rep
add
fadds
mov
sarb
std
in
cli
addl
test
push
jl
jnp
das
sub
or
fcompl
icebp
mov
jns
into
lahf
pop
loopne
repnz
mov
js
popa
pop
scas
xlat
out
popa
inc
insl
imul
add
cmp
mov
inc
jecxz
hlt
add
or
sti
outsb
test
inc
js
mov
movl
jp
fnstenv
out
mov
add
sub
push
jmp
aas
stos
cs
neg
shr
add
mov
jae
mov
xchg
lcall
inc
jmp
pop
shlb
inc
imul
test
add
rol
andl
sbb
mov
je
and
push
jecxz
andb
shll
xchg
insb
aas
add
mov
gs
jl
js
rclb
sbb
mov
shlb
out
mov
in
adc
movnti
pop
inc
dec
rol
test
pop
cmp
ja
fnsave
jle
je
mov
mov
jae
mov
mov
in
inc
sub
inc
roll
pop
push
call
pop
push
shrl
jne
or
add
les
xchg
pop
adc
ret
ror
andl
ljmp
mov
mov
jge
imul
sti
hlt
add
pushf
or
sbb
icebp
or
ret
push
inc
into
pop
in
out
div
add
sbb
fisttpll
pusha
mov
in
push
out
sbb
outsl
roll
fidivs
cmpb
push
fiadds
aam
mov
ret
jge
test
add
aad
les
fstpt
push
orb
dec
add
insb
jecxz
icebp
inc
test
in
in
mov
xchg
xchg
sti
fnstsw
xorb
xchg
in
call
cmpl
or
xchg
shrl
xchg
lea
push
incl
loopne
push
shll
push
jl
push
push
roll
imul
je
out
sub
xlat
out
std
pop
ja
insb
sti
push
dec
filds
mov
jae
cmp
outsl
push
outsb
imul
pop
jecxz
aaa
inc
add
insb
out
loopne
and
repnz
pop
test
or
testl
loopne
sti
pop
inc
and
rol
xorl
cmc
push
sbb
lahf
fwait
jno
test
pop
test
ljmp
jl
adc
stos
lret
decl
cld
or
add
loopne
or
roll
adc
loope
mov
cmp
or
cli
rol
andl
cmp
mov
out
sbb
mov
or
add
mov
sti
test
out
mov
pop
adc
fstl
fcmovne
ret
arpl
xlat
fst
jne
sub
lock
sub
cwtl
sub
inc
clc
pop
sub
jmp
xchg
sbb
sti
cmp
fisubrl
add
hlt
imul
xor
cwtl
rclb
cmp
xlat
test
repz
fadd
push
dec
test
add
xorb
cltd
mov
in
outsl
outsb
jp
push
or
inc
pop
and
rol
in
enter
mov
dec
jle
inc
shlb
fsubrp
decl
aad
mov
ret
sarl
sbb
dec
test
loopne
pop
jne
out
mov
jb
dec
test
push
add
mov
inc
push
xlat
mov
ljmp
mov
popa
dec
cld
shrb
dec
lahf
sbbb
out
dec
fsubrp
cmpsl
push
ljmp
das
ret
jmp
cmpb
pop
popf
aad
bound
cmpsl
xlat
pop
aam
out
xorl
inc
vmwrite
add
mov
lahf
lcall
xchg
lcall
shl
enter
dec
mov
jb
int
sti
pop
or
add
aaa
shll
addr16
dec
cmp
cmp
out
sti
repz
cli
leave
jecxz
fnstsw
ret
mov
mov
js
out
mov
ss
sub
mov
outsb
mov
mov
arpl
popf
rcrl
ljmp
idiv
imul
pop
pxor
rolb
test
hlt
fld
cltd
into
rol
sahf
push
inc
add
xorl
cmovl
dec
inc
lret
shrb
aaa
test
popf
ja
popf
push
mov
or
gs
add
ret
mov
test
cmp
or
aad
and
imul
inc
mov
leave
cmc
pop
addb
icebp
dec
fldcw
ds
out
fs
inc
test
jle
stc
pop
arpl
add
mov
add
clc
out
inc
ljmp
or
cli
loop
scas
outsl
pop
cmp
jae
push
inc
dec
cmpb
insl
scas
or
cmp
movb
pop
jg
scas
or
das
or
mov
or
lock
je
mov
jmp
cmp
inc
cmpb
incl
imul
leave
add
sub
push
dec
stos
mov
jae
pop
push
roll
adcl
xorb
ja
adcl
xor
imul
add
or
dec
roll
insb
fisubl
lret
int
inc
push
jp
mov
jge
dec
push
in
xchg
xlat
out
jge
xchg
jbe
addl
test
push
das
addr16
orb
loopne
enter
sbb
cmp
arpl
ja
pop
decb
hlt
sub
dec
mov
icebp
inc
fwait
xchg
fisubrl
stc
out
stos
pop
push
add
into
dec
inc
cmpsb
in
shr
leave
shl
jns
mov
sub
dec
in
scas
hlt
int
cmpb
addr16
mov
repnz
jb
or
adc
xchg
mov
add
mov
ret
jns
push
out
and
xchg
aam
roll
jp
lods
call
mov
ljmp
into
or
sti
mov
sar
jae
bnd
sbb
adc
hlt
cmp
or
test
das
add
je
push
inc
xchg
sbbb
or
cmpsb
addr16
dec
ret
pop
inc
xor
fwait
add
xorl
imul
loope
inc
out
std
xorb
roll
bound
mov
lret
push
filds
test
insb
jge
int
out
jmp
mov
sub
add
inc
dec
add
jmp
cmp
ss
jo
lods
ljmp
lret
push
rcrl
add
repz
cmp
popf
inc
stc
jae
repnz
mov
jp
sub
daa
and
push
icebp
mov
or
in
lods
sub
rol
xchg
addb
clc
les
imul
aad
aam
js
icebp
adc
add
jg
shll
test
jne
push
je
into
add
cmpsl
sti
sti
inc
lea
popf
sbb
cmp
imul
push
int
aad
jb
or
fisubrs
jmp
call
dec
inc
add
out
xchg
add
inc
mov
sbb
dec
les
jb
popf
scas
jnp
push
shll
push
int
jmp
out
mov
fmull
mov
in
movb
dec
add
pop
addb
ret
popf
subl
testb
and
jb
lods
ja
popa
sub
out
popa
sbb
dec
ret
add
pop
popf
aam
inc
movsl
scas
out
addb
or
adc
add
cmp
inc
shrl
jae
cld
mov
mov
fiaddl
loope
xchg
pop
out
sub
jnp
push
icebp
jmp
xor
or
add
sarb
cmp
xchg
jge
add
aam
xchg
push
mov
roll
add
testl
xchg
xlat
dec
xchg
nop
jbe
outsl
mov
xorb
incb
sub
cmovno
sbb
bound
pop
mov
inc
stos
pop
or
jl
test
push
es
ljmp
inc
outsl
jns
pop
sarb
testb
mov
xchg
pusha
loopne
mov
in
jmp
ret
sub
jno
call
int
enter
ljmp
sub
dec
jnp
repz
mov
hlt
orl
jecxz
nop
aad
inc
cmp
out
fucomip
push
inc
inc
ret
jno
push
incb
fisttps
xor
mov
aad
pop
mov
mov
xlat
inc
sar
pop
or
mov
into
aas
sub
jmp
bound
mov
add
out
push
ljmp
sub
imul
out
xlat
cmp
push
fldt
jl
popf
es
push
inc
dec
shll
mov
pop
aam
add
jae
jmp
push
jge
pop
cld
insb
stc
stc
repnz
sbb
mov
mov
pop
mov
xorl
xchg
popa
out
push
aam
jmp
sahf
loope
push
inc
fistpl
and
add
stc
and
jno
cld
sar
mov
mov
mov
mov
jmp
mov
out
add
rcll
stos
xchg
pop
pop
fneni(8087
inc
mov
outsl
popa
adc
or
cs
and
xlat
enter
ret
rcl
testl
jnp
stos
lahf
push
dec
orb
mov
jno
loope
fbstp
ljmp
hlt
out
or
push
pop
inc
shr
pop
sbb
add
imul
mov
dec
jl
sub
jmp
dec
add
xchg
testl
adc
idivb
push
int
lret
subb
out
outsb
or
add
sub
rcll
add
sub
mov
shll
cli
subl
add
pop
xlat
push
sarb
mov
fmul
add
lods
pusha
sti
or
lods
filds
mov
add
aam
ja
imul
inc
add
sbb
rcrl
add
mov
popf
mov
fnstsw
xchg
mov
aaa
in
imul
cld
jg
add
fst
add
jae
cmp
out
std
das
add
es
mov
orl
mov
shl
js
outsl
fldt
hlt
mov
out
int
lock
sti
ja
add
jae
stc
adcl
and
daa
mov
jo
jmp
repz
int
mov
aad
push
jmp
sbb
cmpsb
popa
div
in
sub
loop
pop
cld
sub
out
jns
or
mov
imul
in
into
faddl
sbb
pop
cmp
loop
xorl
aam
bnd
cmpsb
mov
shlb
pushf
add
popf
repz
testb
mov
ret
test
dec
int
jmp
mov
insl
lret
sub
push
cld
add
jmp
cmpl
decb
shl
icebp
dec
imul
push
out
lret
add
jae
mov
jg
cmpl
loope
aad
arpl
fisubrs
add
out
test
fs
shll
jmp
sbb
add
test
lods
push
je
loop
mov
pop
cmp
je
negl
add
pop
or
filds
test
mov
movsl
arpl
rorb
add
popf
push
jge
mov
in
and
out
das
rolb
inc
add
mov
sub
push
inc
mov
push
mov
dec
jle
cmc
add
int
ss
jp
inc
js
popf
jmp
ret
wbinvd
subl
cmp
iret
rcr
add
icebp
stc
les
paddb
mov
pusha
hlt
enter
sar
sub
cmp
add
inc
scas
test
push
push
add
cmpsl
cld
jmp
add
addl
fildll
inc
rcrl
mov
inc
mov
std
inc
sub
push
dec
icebp
in
sbbl
decb
add
imul
lcall
add
outsl
in
jne
js,pn
imulb
repnz
sbb
jle
xlat
add
mov
out
push
dec
add
rorb
add
gs
pop
arpl
lahf
insb
lock
xchg
imul
jnp
jl
lods
lods
repz
sub
mov
fs
loope
inc
mov
push
cmc
ja
mov
in
outsl
dec
sub
out
xlat
scas
loopne
jbe
ret
add
mov
mov
mov
loop
mov
int
fwait
rorl
dec
push
xchg
test
mov
ret
test
adc
fbstp
jl
mov
dec
mov
arpl
mov
mov
and
inc
stc
jo
stc
jne
add
icebp
jg
and
mov
xor
jnp
test
jnp
mov
xchg
clc
roll
sub
test
jmp
pop
int
subl
ficompl
jmp
xor
mov
scas
jg
or
popa
movb
jmp
mov
dec
inc
jae
repnz
sbb
adc
or
loope
shrl
stc
or
xorb
pop
fwait
or
rcr
int
ret
aaa
mov
mov
mov
dec
xlat
mov
in
cld
subb
sti
jne
or
popf
out
cli
testb
orb
jmp
mov
in
sar
ljmp
cmp
test
sub
mov
add
jecxz
outsl
aad
fidivl
xor
jmp
pop
roll
pop
jmp
sti
out
add
add
push
pop
enter
ret
push
dec
cmpb
or
in
shl
jbe
ficompl
in
and
arpl
xchg
push
imul
stos
xlat
or
inc
inc
mov
pop
inc
cmovle
movsb
test
adc
loopne
leave
pop
adc
cli
mov
push
jnp
pop
sarl
int
mov
test
shl
mov
dec
mov
jne
jns
add
sub
mov
jno
cmp
pop
ret
in
in
out
mov
jp
decb
sti
cmc
jl
pop
add
jmp
lahf
jnp
jno
orb
mov
cmp
int
into
stc
mov
enter
outsl
xchg
push
jmp
lret
jne
aad
dec
xor
in
inc
andl
mov
add
add
aam
rol
xorl
cs
xchg
xchg
jle
popf
jl
dec
testb
cmp
out
mov
push
mov
jge
lahf
mov
popf
and
shll
popa
sbbb
cmpsl
repz
jae
add
subl
adc
fstpt
in
push
fwait
cmpsl
xor
jg
inc
sbb
das
setp
inc
xor
insl
imul
or
call
inc
jmp
or
rcrl
testl
sar
pop
pop
sbb
repnz
cmp
repnz
js
add
ret
cmc
std
jns
jl
loopne
add
push
negb
clc
inc
movsb
xchg
jp
pop
shlb
outsb
scas
iret
cmpb
mov
testl
and
mov
imul
pusha
lret
jne
pop
shrl
aam
jle
push
cld
add
int
add
jecxz
loopne
mov
or
std
outsl
lret
push
push
into
out
inc
stos
in
dec
leave
ret
pop
xchg
divb
in
andl
push
rcl
and
in
into
repnz
and
aam
lods
and
or
testb
in
int
ret
cli
repz
xorl
int
inc
pop
cmovnp
mov
ljmp
gs
push
sahf
jl
jmp
dec
out
mov
loopne
mov
addl
mov
pop
fcmovnb
in
int
add
push
pop
out
repnz
in
insl
out
mov
out
test
subl
outsl
scas
add
pop
in
sbbl
sbb
dec
jmp
sar
scas
decl
jne
cmpsb
add
jecxz
or
decl
out
jl
aam
xor
test
ja
sub
test
faddp
jne
add
xchg
inc
int
push
add
xlat
movsb
cmpb
inc
sub
je
jno
test
divb
cmpsl
int3
shll
aad
aam
mov
xlat
repz
clc
lcallw
fistpl
das
imul
loop
imul
inc
sti
pop
jae
mov
lods
fistpll
inc
jnp
mov
outsl
jbe
and
or
push
scas
dec
ret
inc
xlat
in
pop
aad
addl
in
dec
jne
mov
loopne
mov
addb
cwtl
shll
pop
push
cmpl
cs
jns
sub
imul
incb
mov
cmp
insl
mov
subl
push
inc
xchg
jl
inc
das
out
imul
mov
sbb
dec
aam
cld
or
into
rorl
cmc
out
inc
sbb
cld
jne
mov
or
xchg
inc
pop
shrl
fisttpl
cmp
mov
add
rolb
push
or
outsl
push
imul
fldcw
xor
sbb
dec
or
cwtl
pop
add
push
test
addb
inc
iret
add
cmp
addr16
fcomp
dec
and
out
inc
imul
fnstenv
jae
roll
dec
cmc
rcrb
insl
add
inc
add
sub
jns
out
insl
clc
inc
jmp
dec
sub
ret
outsb
inc
popl
inc
inc
cmp
int
or
into
shll
xchg
mov
jl
sub
jnp
push
out
out
push
not
dec
xchg
add
jo
mov
mov
les
sbbl
ret
dec
jecxz
imul
cld
clc
jns
xchg
jecxz
shll
icebp
mov
in
imul
addb
mov
sbb
loope
or
out
sub
pop
mov
mov
orb
pop
or
add
cmp
test
jbe
int
mov
imul
jge
int
pop
pop
add
dec
inc
pop
rorl
test
enter
cmp
popa
les
pop
sbb
pop
inc
xchg
cmp
in
subl
add
int
mov
push
xor
out
dec
hlt
add
jl
outsl
add
cmpsl
or
inc
icebp
ret
cld
int3
lea
mov
stos
fisttps
jno
push
sub
imul
stc
leave
fucomi
cld
lret
es
pop
inc
outsl
icebp
sbb
or
insb
shr
dec
enter
orb
jae
rcrb
stc
sbb
mov
loop
shr
fistl
inc
lock
mov
popf
fwait
test
xor
mov
imul
sub
cli
movl
out
sub
cmp
xchg
idiv
scas
out
outsl
movb
jb
popf
pop
jp
sti
jge
rcrl
aad
sub
call
lock
lods
push
xchg
insb
cmp
sbbl
pop
out
sub
popf
stos
or
rolb
add
cld
in
jl
sti
dec
stos
pop
stos
outsl
jecxz
rolb
dec
and
outsl
mov
int
push
xchg
popf
out
scas
inc
mov
jg
pop
sbb
leave
icebp
decl
add
sub
imul
sysret
add
jge
jae
repnz
inc
mull
add
mov
mov
stos
call
dec
jo
dec
inc
incl
repnz
jo
cmpb
mov
mov
add
inc
push
lcall
sarl
lock
pushf
iret
sti
mov
rcrl
bnd
inc
cs
pop
xchg
xchg
xor
cli
xor
jmp
add
es
int
mov
int
pop
adc
fisttpl
pop
imul
ljmp
mov
jmp
mov
addr16
inc
shll
std
and
out
lret
test
arpl
mov
dec
call
add
sti
out
cmp
popl
adc
insl
xchg
jnp
pop
repz
xor
aam
outsb
mul
sbb
data16
iret
or
insb
xor
aad
add
testl
mov
push
cmpsb
ret
pop
cmp
icebp
xchg
movl
iret
rcrl
jle
adc
into
fildll
pop
cmp
subb
mov
shl
in
sub
dec
mov
addr16
pop
mov
xchg
pusha
adc
fimull
adc
jnp
repz
arpl
inc
sbb
cli
in
outsl
test
mov
mov
ret
rcr
gs
js
pop
mov
mov
out
fwait
outsl
jmp
into
mov
test
and
sarb
add
jmp
in
sbb
sub
or
jae
mov
inc
sbb
push
add
scas
arpl
inc
sbb
pop
add
mov
push
mov
xor
mov
rcrb
cmp
out
xor
inc
int3
lahf
imul
inc
outsl
scas
add
add
mov
ret
xchg
push
cmp
mov
incb
push
mov
lret
fadds
fwait
rol
movsl
imul
js
dec
pop
add
not
inc
add
mov
icebp
push
cmc
repnz
outsl
repz
fiaddl
xchg
gs
adc
xchg
outsb
jb
pop
fistpl
push
out
fstps
mov
ror
shrl
stos
xlat
xlat
pop
aad
stos
popf
in
fildll
shrb
jg
mov
mov
pop
lock
jg
jnp
push
jg
add
fucomi
cmp
sarl
add
fcomi
jge
dec
leave
out
rcr
or
lock
imul
out
pop
popf
aad
les
test
mov
repz
mov
js
pop
ret
loopne
les
repz
jecxz
imul
not
xor
sub
jl
ret
dec
psubq
aad
add
imul
mov
inc
cmp
out
loope
xor
xor
lds
sub
out
testb
jnp
les
orl
pop
xchg
in
xor
out
ja
pop
rcl
repnz
fldt
andb
jecxz
arpl
and
pop
jb
dec
mov
int
ret
xchg
out
inc
stos
aaa
insl
mov
push
fcomp
or
sub
push
aam
xchg
push
cmp
or
add
inc
ret
movsb
mov
jbe
add
scas
lock
mov
in
data16
push
mov
punpckldq
int
fsubrs
xor
out
or
js
dec
bound
repz
bnd
fbld
inc
sbb
scas
jl
pop
jecxz
mov
hlt
ljmp
lret
pop
fdivp
in
cmp
ljmp
shl
fiaddl
in
sbb
mov
xlat
arpl
or
xor
mov
fsubrs
dec
out
ja
sar
jecxz
push
cld
or
push
jecxz
scas
mov
inc
and
jnp
cmp
ja
mov
jp
cmpsb
dec
pop
outsl
sarl
pop
mov
cli
hlt
mov
push
pop
mov
insb
insl
enter
mov
in
scas
stos
mov
popf
repz
imul
dec
add
jle
cmp
enter
outsl
repnz
jns
fadds
sub
mov
xor
dec
xor
fisttpll
add
pop
or
aad
pop
out
or
dec
imul
test
sarl
lea
sbb
inc
out
ds
mov
movsl
repnz
insb
fdivrl
gs
mov
aad
aad
xchg
push
loope
call
dec
sub
dec
std
subl
inc
pop
pop
mov
fists
inc
mov
das
movsl
add
sbb
out
sub
pop
sbb
or
aam
push
xlat
jge
cmp
xor
inc
inc
sbb
mov
push
rcl
or
push
jmp
clc
aad
mov
inc
int3
scas
outsb
gs
popl
mov
mov
stc
test
lock
shr
mov
or
pop
xchg
popf
add
imul
dec
xor
mov
or
hlt
cmp
or
or
stos
aad
aam
call
dec
imul
les
roll
jl
jecxz
dec
rol
dec
xchg
mov
punpckhbw
loope
stc
mov
test
shll
clc
push
cmc
lcall
test
aas
es
xchg
lret
add
repnz
xchg
push
push
je
push
pop
inc
dec
xchg
or
aam
cld
or
sarl
xor
cmpb
mov
into
or
ret
iret
inc
arpl
nop
out
jo
push
mov
popf
xchg
mov
les
cmp
jo
mov
scas
repz
out
cmc
std
shl
sub
ja
sbb
cs
adc
int
jno
mov
add
outsb
pop
in
mov
inc
sarl
jne
dec
icebp
cli
repnz
nop
xor
insl
lret
add
aaa
sarl
shr
sub
mov
xlat
mov
and
add
roll
icebp
push
cmp
pop
adcl
and
xchg
pop
mov
in
lods
ljmp
xchg
mov
clc
popf
insl
out
xchg
sub
jp
adc
jb
mov
ja
jp
mov
xor
fisubrs
sbb
jno
xor
out
xchg
sub
push
mov
addb
cmp
outsl
clc
jmp
pop
mov
cli
or
nop
in
add
jg
push
adcb
addb
xlat
dec
ret
jns
lahf
std
mov
and
test
aam
mov
inc
jg
gs
jl
adcl
add
add
cmp
dec
push
dec
and
std
or
mov
ja
dec
mov
pop
dec
dec
ret
je
test
aam
imul
addr16
push
je
add
into
dec
add
data16
int
cmpl
fs
sub
inc
jns
pop
mov
and
cld
xchg
jb
into
je
jmp
xchg
repz
cli
rorl
mov
int
add
mov
and
decl
pop
add
jecxz
pusha
mov
pop
loope
push
scas
icebp
repz
ja
mov
pop
je
loope
repz
jge
int
dec
enter
sub
fistpll
mov
in
inc
dec
sar
imul
popa
test
shlb
push
shl
jmp
imul
ss
fldz
push
scas
pop
jg
fstps
sti
add
loopne
int
sarl
xlat
rolb
stc
or
hlt
out
push
add
adcl
cmp
pop
jecxz
imul
sti
mov
out
in
add
pusha
mov
mov
adcl
aad
inc
shl
pop
cmp
cld
in
add
in
testl
ret
in
inc
popa
add
les
pop
rcll
xlat
jl
ret
aam
push
add
lods
repnz
or
into
inc
out
shl
out
stos
rorl
sahf
mov
test
fmulp
xrelease
int
add
stc
pop
jae
cmp
lea
pop
les
push
mov
sub
lock
inc
pop
pop
mov
in
mov
out
testl
jmp
and
sub
jmp
scas
jmp
or
loopne
repz
test
daa
or
pop
lahf
out
inc
dec
shr
xchg
je
fucomip
push
in
idiv
jmp
xchg
addl
enter
loopne
mov
ret
xor
cmp
out
add
push
mov
out
outsb
js
cmc
call
jp
outsl
xchg
js
inc
outsl
mov
repnz
std
incb
das
xor
fidivrs
mov
sub
inc
pop
icebp
jae
loope
push
addb
in
cmc
push
xlat
test
sbb
inc
jecxz
dec
les
push
popf
jmp
leave
in
pop
aam
in
ja
cmp
outsl
xchg
repnz
jecxz
in
aad
fmuls
pop
andl
rorb
mov
cmpsb
mov
mov
and
repz
popf
imul
xchg
lock
and
hlt
not
xchg
add
lock
imul
cmp
out
adc
xchg
pop
push
js
inc
outsb
int
sbbl
mov
push
loope
cmc
mov
popl
sub
imul
cmc
outsl
pusha
xor
push
mov
aas
or
das
ljmp
add
fiadds
inc
cmp
jp
fcmovnb
divb
cld
mov
scas
cs
test
xor
push
xlat
rcrb
mov
dec
add
out
add
rcrl
insl
imul
jmp
jnp
in
jmp
mov
fisttps
mov
add
andl
cmp
add
pop
fildl
bswap
inc
mov
add
sub
test
jnp
lods
inc
xchg
pop
jnp
push
cwtl
push
mov
cmpsl
orl
idivl
dec
insb
outsb
jb
mov
xchg
inc
mov
psubd
out
sbb
xor
loopne
fucom
std
out
or
loopne
inc
pop
les
cmp
nop
aam
call
ja
inc
and
orl
shl
jno
out
add
pop
iret
xchg
add
or
aad
inc
add
and
xorl
aas
sti
add
js
dec
mov
inc
dec
push
add
lods
popa
clc
push
jecxz
inc
inc
cmpsl
xchg
jns
mov
jo
push
gs
fnsave
cmp
repz
push
es
stos
decb
int
out
jmp
jg
jmp
fidivrs
add
and
bound
loopne
push
push
in
pop
test
inc
ljmp
jp
dec
push
xchg
clc
dec
add
lahf
out
call
ficomps
fidivrs
clc
mov
xchg
jb
or
mov
inc
cmpsl
fisubrs
jne
jnp
fiaddl
sbbl
outsl
scas
in
aam
mov
sti
jp
mov
dec
aad
out
clc
loope
or
div
out
aas
sbb
jmp
ret
push
and
pop
jmp
sbb
pop
addr16
loope
cmp
int
sbb
mov
cmp
pop
push
outsl
sub
xchg
pop
push
cld
ret
fiaddl
outsl
or
mov
test
lds
sub
push
dec
pop
aam
test
sti
stos
cli
les
sarl
jo
cmpl
nop
xor
jno
add
sar
mov
pop
in
js
popf
cmc
stos
jmp
into
js
das
jl
jmp
inc
out
popa
fdivrs
cld
rcl
subb
dec
mov
into
inc
mov
xor
imulb
inc
xchg
or
rcr
jl
fistpll
add
iret
imul
inc
pop
sarb
in
test
jb
or
cli
xorl
pop
in
add
ficomps
mov
mov
rorl
push
popa
enter
aam
mov
add
mov
jl
outsl
push
imul
pop
lcall
sbb
adcb
insb
sub
xlat
in
aad
imul
mov
repz
scas
orb
inc
icebp
pop
or
push
xlat
mov
stos
scas
fmuls
mov
shrb
notb
pop
xlat
jecxz
fnstcw
sub
outsl
or
add
push
sub
dec
shll
xor
div
testl
outsl
cli
shrl
stos
in
ljmp
jl
gs
leave
or
cld
mov
fsub
dec
and
dec
arpl
push
ja
sbb
data16
or
insl
xchg
jne
rcr
dec
push
cmp
leave
or
push
stos
outsl
mov
stc
insl
jae
js
out
std
mov
fmull
cld
dec
dec
add
filds
lods
aad
aam
int
sti
inc
cmp
lea
out
pop
out
stos
int
cmc
add
jae
mov
mov
add
aam
aad
pop
cmpsl
dec
call
mov
hlt
test
div
mov
jecxz
inc
sub
cwtl
popl
dec
sub
pop
dec
xlat
aad
and
orb
adc
mov
stos
lahf
cli
mov
mov
ja
ret
jb
enter
rcr
lret
enter
add
in
fstpt
imul
stos
jecxz
mov
xchg
das
repz
repnz
enter
jl
inc
mov
xor
and
in
gs
call
cld
sarl
mov
inc
xchg
xor
orl
je
inc
and
addl
fldl2e
test
in
shl
scas
jmp
jns
and
fdivrs
mov
xlat
outsl
pop
sbb
sbb
cs
pop
cmp
pop
sub
in
add
sarl
and
add
rolb
or
repnz
inc
jecxz
outsb
mov
or
add
rclb
bound
add
pop
aad
aam
test
jbe
and
mov
xor
or
shl
iret
inc
mov
xchg
fimuls
gs
fidivl
out
fists
ret
sub
cmp
out
push
push
outsl
cmovle
cli
xlat
push
jmp
inc
mov
ljmp
jmp
jno
cmc
mov
push
pushf
ljmp
adcb
pop
dec
cmpsb
jle
dec
xor
sysenter
sti
add
out
pop
das
in
xchg
addr16
adc
popf
jbe
sbb
out
into
mov
repz
clc
inc
jecxz
cmpsl
shr
sub
out
loop
cld
inc
idiv
test
add
jecxz
daa
stos
xchg
add
inc
dec
imul
mov
lock
loopne
out
dec
leave
xlat
popa
aam
lock
stc
out
mov
int3
xor
out
imul
aam
icebp
adc
dec
push
add
sub
fldcw
xchg
in
div
in
or
cmp
scas
jbe
ret
adc
mov
inc
xchg
or
jg
mov
scas
pop
icebp
jecxz,pn
in
adc
popf
cmp
or
out
push
jmp
int
sbb
in
and
into
or
addr16
shrl
mov
fcmovu
xchg
jae
jns
pop
jl
sub
and
loope
cmp
mov
data16
push
pop
add
bnd
cld
je
add
pshufw
insb
mov
inc
stc
mov
dec
add
ror
ret
xor
les
and
add
add
in
cld
outsl
shr
cmc
fnsave
lret
popa
dec
imul
cli
jg
mov
jl
mov
jg
jecxz
cmp
pop
enter
das
pop
cwtl
out
add
fwait
or
add
lods
fnop
xchg
aad
lea
lods
sub
xchg
xlat
fisubl
sub
in
inc
scas
xor
fnsave
mov
bound
fdivrl
into
hlt
test
stc
adc
xor
test
dec
rcr
mov
in
lcall
add
lock
pop
inc
mov
incb
cmp
repz
aas
inc
mov
jp
mov
cmc
xor
fldcw
push
scas
pusha
mov
icebp
testl
test
ljmp
ljmp
cltd
mov
leave
xor
add
pop
int
dec
cmpsb
std
repnz
les
fnstenv
inc
enter
out
and
sbbl
dec
scas
add
pop
mov
sub
addl
aas
loopne
sbb
xchg
in
lea
jnp
out
mov
cld
adc
faddl
test
mov
out
fsubl
sub
push
push
repnz
push
dec
mov
or
jp
movsb
mov
pop
xor
mov
ds
int
rcl
shll
repnz
cli
dec
call
cmp
mov
adc
jnp
insl
cmpb
in
sbb
fdiv
push
loopne
push
test
push
test
out
fsubl
cmpl
xor
js
jno
in
enter
cli
push
pop
dec
mov
mov
fisttpl
insl
mov
in
clc
or
cmc
outsb
inc
mov
mov
stc
sbb
mov
cmpl
jbe
orb
out
and
test
dec
jae
ror
jge
shll
outsl
or
test
stc
jg
or
sbb
cmp
pusha
call
xlat
push
inc
movb
pop
imull
or
add
mov
js
int
lock
dec
insb
loope
lcall
mov
lds
out
out
cmp
lods
in
in
jne
xor
xchg
pop
es
pop
inc
jne
pop
jl
lods
lock
pop
cmp
push
je
loop
push
inc
imul
inc
or
arpl
fucomip
inc
inc
or
vmwrite
test
orl
out
dec
jno
xlat
jge
inc
jns
out
sti
cld
out
clc
add
in
inc
popf
inc
push
lahf
test
inc
dec
mov
andl
pop
mov
shlb
arpl
popa
inc
push
jmp
add
stc
aad
cmp
push
xchg
cmpsl
pusha
xor
jae
repnz
jmp
add
jno
pop
jl
pop
jg
xorl
out
inc
imul
inc
test
jp
out
fwait
sbb
add
gs
mov
mov
dec
xorl
fmuls
repz
add
das
aad
imul
push
dec
cmp
in
out
out
out
push
add
jl
test
fsubr
jb
imul
aaa
xchg
negb
jae
gs
pusha
push
js
xlat
jmp
jb
stos
sbb
sub
addl
push
out
jmp
mov
out
xchg
cmp
fisubs
int3
mov
loope
outsl
test
stc
enter
dec
dec
jl
loopne
cmc
sar
enter
rolb
adcl
mov
add
fdivrl
adc
sub
ja
dec
xor
pop
outsl
loope
fidivrl
out
insb
add
mov
adc
and
rorl
addr16
mov
jge
in
mov
lret
shl
jo
add
inc
pop
sub
imul
pop
stos
add
loopne
sub
cmp
out
andl
test
fs
pusha
pop
aad
aad
imul
lahf
push
out
repnz
push
addr16
mov
js
das
jle
jmp
inc
and
shlb
or
outsl
loopne
shrl
adc
shrl
inc
int
imul
push
sbb
stc
lret
push
jbe
or
xchg
jne
dec
shrb
jne
shll
mov
pop
mov
sarl
inc
shll
cmpsb
out
or
subb
mov
cmp
dec
in
loopne
jp
jl
and
xorl
popf
test
add
jmp
jg
pop
in
mov
lock
xor
rcll
mov
sbb
movsb
mov
or
inc
add
pop
push
imul
or
fs
push
imul
jns
xor
or
orb
clc
dec
mov
xchg
xchg
fwait
aad
or
scas
pop
or
shll
aas
sbb
push
test
pop
xchg
adc
mov
xchg
aad
repz
pop
jl
pop
insb
repnz
jge
jmp
mov
adc
jge
add
sub
rcr
ss
in
or
mov
add
hlt
jo
not
push
inc
mov
aad
mov
mov
fiaddl
jbe
je
subl
lods
push
jno
mov
mov
xchg
add
pop
cld
pop
cli
mov
jl
push
adc
jbe
rol
inc
mov
or
cmc
rcrl
rcrb
pop
fstp
roll
adc
cmp
jecxz
out
add
push
mov
and
loope
cs
pop
rcrl
and
fisubrs
call
outsl
in
xchg
pop
mov
rolb
loope
or
mov
mov
popf
movsb
fwait
cltd
fiadds
sub
push
or
in
cmp
jo
aam
and
out
push
jnp
xchg
out
adc
sub
pop
enter
jecxz
clc
ljmp
shrl
je
xor
mov
inc
jne
push
outsl
into
add
jecxz
aam
mov
stos
iret
fisttpl
repnz
mov
repnz
inc
cltd
jo
ja
xchg
fisttps
push
out
mov
lock
pop
fdiv
int
pop
xor
sarb
inc
scas
sub
mov
push
aaa
mov
cmp
mov
pop
sbb
scas
xchg
or
out
repz
shll
mov
sub
add
sub
cli
xchg
popf
inc
rcrl
sbb
and
cmpb
enter
inc
roll
xchg
jmp
ss
lea
shlb
inc
add
and
mov
push
adc
lock
and
or
jns
outsl
mov
adc
pop
pop
mov
inc
jecxz
jo
outsb
jae
cmp
cs
sbb
dec
in
call
adc
and
int
add
icebp
jbe
dec
cmc
lods
jo
mov
shr
sbb
push
cmp
imul
fdivp
mov
sub
pop
sbb
add
pop
xlat
cmp
inc
js
add
or
shl
add
add
cmp
out
orb
int
inc
cmp
dec
jns
int
test
test
call
push
ret
sub
bound
icebp
cmp
addr16
pop
jmp
mov
outsb
test
dec
jno
cmpsl
xor
add
mov
flds
test
mov
cmc
mov
jecxz
insb
sub
test
mov
or
pop
filds
cmp
jne
fs
fldz
jge
xlat
sti
repz
enter
push
imul
filds
xchg
push
fnsave
fs
js
std
push
int
inc
cmp
fldl
sarb
mov
add
adc
fiaddl
in
bound
shl
lea
addb
shrl
push
addl
push
and
adc
icebp
add
pop
rcrl
dec
daa
out
mov
data16
xchg
add
iret
roll
enter
inc
mov
pop
mov
sar
push
jmp
std
shrl
cmc
dec
bound
jp
lahf
in
fwait
mov
cmp
bnd
loop
cmovp
jno
loopne
cld
add
add
faddl
cld
xchg
imul
mov
addr16
int
mov
jecxz
or
xchg
or
dec
inc
push
imul
ja
cmp
fs
mov
test
pop
add
insb
pusha
fsub
or
jmp
mov
jnp
sarl
xorl
dec
add
xor
repz
nop
imul
push
sub
inc
stc
shll
push
or
loop
leave
rcll
or
arpl
pop
or
dec
or
loope
jno
adcl
notl
jae
mov
mov
test
fdecstp
and
ja
add
and
iret
inc
inc
jl
repz
xchg
fdivl
cli
lock
ud0
push
mov
arpl
inc
cli
jnp
les
add
mov
imull
xor
gs
sarb
std
add
jns
das
jns
pop
jmp
pop
sbb
sbb
sarb
scas
fisttpll
sahf
xor
cmc
mov
cmp
shlb
push
xchg
out
stc
and
add
ja
mov
lods
shlb
mov
fdivl
aam
sti
jmp
addr16
inc
sub
pop
sti
pop
shll
mov
hlt
push
rorl
push
out
xlat
dec
shlb
psrad
icebp
test
cmc
fstps
push
bound
dec
or
fidivl
test
jecxz
xchg
inc
cmp
je
in
mov
sub
clc
inc
fbld
or
mov
mov
ljmp
add
xor
or
push
repnz
xchg
sub
enter
mov
int
xlat
mov
pop
lahf
scas
scas
popf
add
inc
mov
popa
cmp
lret
out
sub
and
rcl
jge
xor
pop
outsb
push
rclb
into
aam
sub
out
cmp
mov
outsl
fstpl
out
and
pop
push
or
inc
jl
sub
adc
mov
push
arpl
jge
jecxz
mov
ret
jb
sbb
push
jae
push
shll
fildll
jbe
insb
dec
outsl
loop
nop
jl
loop
out
add
sti
add
lock
lea
idivl
stc
mov
test
jae
add
lock
pop
sahf
and
loope
shlb
jge
pop
mov
lock
arpl
inc
mov
dec
push
push
jb
or
jmp
xor
xorb
ja
aad
lret
mov
mov
gs
mov
sti
mov
xchg
lret
popf
out
mov
ret
cmp
push
imul
cli
xchg
test
sub
shrb
xorb
xchg
subb
pop
xlat
imulb
sub
mov
push
mov
rorb
pop
jle
mov
jae
cld
or
hlt
sub
call
xchg
stos
out
mov
fisubrl
xor
add
inc
aaa
in
outsb
in
roll
addl
jecxz
mov
out
cld
cld
cli
pop
cld
mov
imul
mov
xchg
lret
pop
jb
or
imul
pop
and
mov
in
test
lea
fnstcw
shll
mov
std
jne
add
stc
push
cmp
out
mov
imul
scas
jmp
addb
inc
inc
fdecstp
mov
js
outsb
loopne
outsl
ds
pop
rcr
jmp
jl
and
stos
popa
push
inc
repnz
jmp
outsb
add
mov
xlat
test
cmc
addb
inc
ret
fcomip
mov
jl
aad
ret
das
mov
sub
int
imul
fcomip
subb
dec
add
cmp
mov
xchg
mov
pop
push
gs
es
mov
loop
mov
jg
pop
sti
je
and
clc
push
fcompl
xchg
loopne
rcrl
push
scas
out
or
ret
lock
pxor
inc
xchg
inc
cld
outsl
cmp
or
repnz
sub
les
lret
inc
cld
popf
jp
xor
pop
test
sub
fs
inc
rcl
gs
mov
ret
pop
mov
inc
dec
sti
div
in
push
outsl
test
mov
or
ljmp
adcb
push
flds
or
psubd
and
data16
test
movl
lea
out
and
adc
insb
lods
mov
cmp
ss
mov
imul
sbb
lret
cmp
fbstp
inc
ljmp
arpl
shlb
sub
je
jle
mov
jns
pop
sub
fidivrl
in
sarl
in
add
ds
adc
pop
inc
sti
movntq
clc
mov
movsl
xor
pop
lock
lret
jecxz
push
adc
and
inc
int
sub
out
jge
lea
stos
ljmp
inc
bound
jecxz
dec
add
jae
jno
mov
cmp
pop
dec
dec
ret
jle
daa
repnz
sub
xlat
aam
fisttps
cmp
mov
daa
loope
test
clc
cmovp
outsl
xor
mov
sti
out
test
out
mov
adc
test
repz
push
pop
mov
lea
scas
or
add
jns
or
mov
jecxz
pop
addl
jge
das
add
cmp
pop
sarl
mov
mov
insb
fnstenv
ds
fldt
and
shrl
or
add
push
add
pop
jo
xchg
clc
fdivrs
outsl
icebp
sahf
push
push
dec
loop
pop
dec
in
andl
adc
inc
adc
insb
jl
in
lcall
ret
addb
jge
push
mov
out
jl
outsb
inc
ret
rolb
rol
push
insl
pop
or
loop
cmc
push
mov
add
lret
push
push
call
in
shll
mov
jge
add
mov
test
inc
add
js
xor
loope
mov
gs
out
shlb
sub
mov
aam
inc
cmp
or
das
nop
into
negb
and
std
adcb
lock
xor
jl
in
dec
repnz
fisubl
shrb
sti
dec
or
sbb
in
xchg
out
gs
das
std
das
imul
jmp
flds
jae
cmp
jecxz
ja
test
cmp
rcr
push
aad
mov
data16
fwait
cmpb
push
and
push
sub
repz
das
add
jmp
imul
mov
lock
shrl
outsb
mov
sbbb
test
xchg
inc
outsl
or
push
sbb
loope
inc
jle
mov
out
shll
mov
repnz
int
xorl
push
dec
xlat
push
imul
cs
and
loop
stos
fldt
out
push
sub
jge
pusha
ljmp
outsb
cmp
psubd
push
outsl
testb
adc
arpl
mov
std
insb
popa
fucomp
or
incl
push
cmp
repnz
scas
cld
lock
push
pop
sub
out
dec
push
subl
fnsave
mov
lods
add
mov
loop
mov
notl
aad
mov
lea
sbb
pop
jne
sti
outsl
jecxz
mov
stc
in
repnz
cmovno
fimuls
cwtl
dec
loop
mov
jmp
lods
inc
add
inc
data16
jno
push
jne
or
andl
rorb
arpl
jae
dec
mov
push
sti
std
cmp
jecxz
cmpsb
aam
rcll
hlt
stos
mov
faddl
cmc
dec
inc
subb
popa
adc
inc
sti
out
in
mov
jno
adc
dec
xlat
int
jno
ja
test
out
out
sbb
jbe
imul
xchg
mov
lock
mov
push
int
xor
mov
rcl
jecxz
ljmp
jge
xlat
xorb
push
mov
sbb
xchg
cmp
inc
shr
mov
pusha
mov
inc
sar
sar
sbb
mov
dec
xchg
not
mov
cmc
movw
shrd
cmp
mov
btc
mov
and
xchg
mov
rcr
jmp
add
inc
gs
outsl
fs
gs
imul
add
or
jmp
push
rol
push
call
bt
jmp
add
add
pop
jb
push
sub
fidivs
repz
movsl
sahf
cwtl
imul
dec
pop
pop
add
fisubs
jl
add
add
fisubs
insl
xchg
loop
pop
inc
inc
ds
push
int
jns
pop
xchg
mov
push
imul
daa
sbb
lret
out
lcall
jae
popa
push
dec
inc
ret
push
xor
mov
bt
pusha
rol
clc
push
pushw
popfw
jmp
lods
lock
loop
stos
sar
jns
adc
mov
into
add
xor
jns
and
jmp
mov
adc
int
shl
push
out
jns
and
mov
aam
xchg
add
arpl
add
lret
inc
dec
sbb
sub
or
mov
jae
sub
or
mov
outsl
sbb
sbb
sti
dec
cmpsl
xchg
push
in
sub
lahf
lret
dec
inc
aad
fcoml
inc
lock
mov
test
dec
negb
lods
pop
clc
adc
jne
or
mov
push
or
pop
sub
and
push
psubb
mov
daa
dec
in
int
xor
adc
fildl
dec
push
icebp
dec
sahf
orb
inc
dec
lcall
sahf
xor
and
pop
into
nop
adc
mov
rcrb
sbb
dec
in
xchg
and
scas
and
pop
arpl
ficoms
test
pusha
jmp
aam
shll
pop
and
lahf
ja
sub
jne
sub
pop
jp
mov
leave
cltd
push
rcrb
sub
sbb
shll
in
loop
pop
aam
int3
jp
daa
cli
test
cs
cltd
sbb
mov
mov
cmpsb
xchg
cwtl
setb
imul
ljmp
jae
and
or
xchg
inc
mov
in
stc
lcall
enter
shl
or
pop
mov
rcrl
rcll
in
fnstenv
lcall
jle
fdivl
or
fs
jnp
xchg
sbb
and
and
adc
or
xchg
es
inc
xor
sub
mov
roll
mov
pop
push
ds
pushf
movl
pushl
push
pusha
pushf
lea
jmp
xor
adc
pop
popa
and
ds
shlb
insb
inc
ficoml
sbb
call
sub
push
mov
pop
dec
cmp
mov
lret
mov
inc
jmp
pop
mov
mov
push
imul
fdivl
cmpb
xor
pop
push
dec
inc
cs
or
lds
movsl
ret
add
shrb
fdivrs
and
or
pop
lock
push
push
sbb
cli
lahf
jp
jp
imul
add
ja
cs
xor
stos
jo
inc
pop
push
or
xchg
test
in
std
je
push
jno
inc
data16
mov
push
pop
push
popf
and
pushl
dec
pop
fucomi
or
pop
hlt
ret
inc
or
bound
dec
inc
cmp
and
sahf
ljmp
xor
pushf
movl
mov
movb
pusha
pushf
lea
jmp
dec
je
xor
push
jp
inc
sbb
dec
xor
lods
jle
repz
aam
xchg
xchg
xchg
or
in
jecxz
scas
test
xor
mov
sbb
mov
cmp
mov
enter
ja
lods
lcall
mov
cmp
imul
lret
dec
jl
sti
jmp
arpl
jae
fcmove
aas
sub
push
dec
and
or
or
out
in
inc
ljmp
jmp
push
cmp
mov
inc
cmp
loope
pushf
outsl
push
cmp
mov
xor
clc
mov
hlt
mov
push
inc
je
sub
rol
sbb
mov
ja
adc
and
push
jne
mov
inc
sub
lds
cwtl
push
sub
out
movsb
in
xchg
or
xchg
rclb
sub
aas
add
jae
or
cld
push
sbb
jp
div
hlt
out
in
imul
sub
mov
adc
cmpsb
sbbl
loope
mov
dec
cmp
xchg
adc
mov
lods
sbb
xor
xor
outsl
ret
fs
dec
adc
and
aam
jecxz
in
pop
jnp
jno
dec
out
dec
movsl
xchg
in
imul
cmpsl
stc
fidivs
xor
pop
test
jns
gs
aam
ljmp
fs
je
pushf
pusha
pushf
lea
jmp
call
pop
sbbb
xor
jnp
cmp
call
pop
in
ret
les
inc
icebp
mov
dec
outsb
int3
xchg
nop
in
ret
lds
lahf
leave
jbe
sbb
jecxz
fs
scas
xor
sbb
or
cld
cld
repnz
dec
rcl
dec
ljmp
bsr
shl
ror
shrd
mov
shrd
mov
test
jmp
lods
jmp
std
es
push
aad
mov
push
sub
shll
fidivl
add
test
insl
pop
push
and
inc
cmp
dec
add
push
aaa
sti
insb
mov
hlt
add
sahf
xchg
or
xchg
pop
iret
jl
test
rolb
aam
sub
lea
pop
fsubr
pop
pop
sbb
mov
decl
add
call
call
jmp
btc
push
rol
mov
bt
push
shrd
cmc
movzbl
bts
push
neg
sbb
bts
push
xor
lea
movzbw
push
movsbl
movsbw
not
sub
push
clc
setb
mov
call
call
bswap
mov
movsbw
call
inc
imul
leave
scas
rcrl
ret
push
aaa
push
fidivrs
jb
inc
std
and
push
xor
das
sahf
push
sbb
aas
inc
adc
cltd
mov
inc
sbbb
outsl
cmp
ret
mov
cmpb
int
pop
sub
pop
mov
popl
jno
rclb
mov
dec
inc
inc
ret
ljmp
sbb
leave
inc
mov
push
inc
cmp
add
dec
and
in
xchg
jo
arpl
jmp
mov
mov
popf
jo
and
jne
rcl
jmp
subl
and
push
jge
jbe
jns
dec
add
vdivpd
xchg
int3
vprotw
movsb
xor
mov
xor
add
or
stc
repnz
dec
pop
ljmp
call
sbb
out
insl
mov
adc
pop
mov
pop
cmp
out
lds
xor
jl
xchg
pushf
call
lret
addr16
lcall
pop
pop
inc
out
pop
xchg
xor
mov
xchg
shll
sub
mull
scas
push
imul
jl
push
rcll
xchg
fidivl
xchg
test
insb
bound
ljmp
mov
push
lea
jg
pusha
lea
call
push
movl
mov
mov
pushf
pusha
mov
push
lea
jmp
push
jmp
leave
ljmp
int
call
sbb
aad
mov
pop
adc
test
add
or
loopne
mov
ljmp
test
stos
xlat
in
push
add
mov
push
push
or
mov
push
andb
int
rcrb
xchg
les
xor
push
imul
shll
sarl
push
xor
adc
div
movl
or
mov
mov
mov
xor
enter
pop
jo
in
dec
pmaxsw
sti
push
hlt
test
lock
jo
push
mov
movsb
inc
mov
out
push
loope
and
sti
dec
push
rcll
mov
pop
mov
add
xor
das
scas
mov
jmp
orb
movsl
scas
aam
pop
scas
andl
xor
sub
adc
cwtl
ljmp
jmp
xchg
aas
divb
sti
movsb
outsl
inc
pop
std
aad
lea
pop
mov
cltd
inc
cmp
or
xorb
adc
push
scas
jl
ja
and
jb
fmul
xor
sarb
xchg
mov
mov
jge
lods
test
and
pop
sbb
pop
sub
mov
into
in
pushf
mov
prefetchwt1
or
loope
sbb
fcmovu
mov
or
xchg
ss
icebp
repnz
adc
dec
jb
fs
cmpsl
sbb
cmpsl
test
ljmp
scas
sub
cli
mov
cmpsb
mov
stc
enter
jge
pop
push
inc
mov
dec
cs
loopne
cwtl
insb
push
mov
mov
cmp
and
adc
rcrb
xor
sub
pop
dec
dec
dec
inc
inc
mov
mov
jecxz
xor
sbb
dec
and
loopne
lea
shr
jecxz
aad
shrb
int3
inc
adc
in
jecxz
jg
jns
lds
enter
lret
mov
ss
cld
push
xor
and
sbb
ljmp
call
cmc
shrb
xchg
jne
and
shrl
imul
mov
xor
dec
aas
aam
std
hlt
aad
push
and
data16
addr16
scas
sub
sahf
pop
sub
adc
ljmp
inc
leave
dec
popa
lods
movsb
xchg
mov
stos
das
dec
mov
xlat
enter
mov
cmp
fwait
test
sarl
ret
outsl
shll
jo
pusha
pop
dec
aas
cmp
pop
pop
ds
pushf
stos
pushf
mov
jmp
pushf
lea
jae
pusha
cmp
test
cmp
pusha
movw
lea
ja
mov
jmp
aas
push
push
or
dec
push
pop
dec
push
or
pusha
or
pusha
push
dec
or
pop
or
or
dec
dec
pop
push
dec
or
pop
push
push
or
pop
dec
pop
push
dec
or
pop
push
or
dec
pop
dec
pop
or
pop
jmp
not
push
bt
push
cmp
movzbl
lea
call
pusha
pushl
adc
pusha
pushl
pushl
ret
cmp
add
pusha
movw
movb
pushf
lea
jmp
mov
mov
jmp
mov
call
or
or
jp
lods
and
aad
sbbb
add
mov
mov
push
mov
add
rclb
jmp
adc
pop
fistl
lock
rcll
and
mov
add
ficoms
call
enter
or
cmpsl
out
gs
sub
mov
stos
insb
sahf
push
in
jns
leave
cmp
push
fdivrp
cmp
xchg
mov
xchg
push
imul
pop
fdivrl
out
dec
fcoms
xor
sbb
or
cld
incb
lock
pop
pusha
xorl
loopne
xor
ja
push
add
mov
gs
sub
hlt
cmc
push
dec
mov
adcb
int3
jle
xchg
dec
add
lds
gs
sbb
sub
lcall
mov
cmpsb
cwtl
xchg
cltd
data16
ljmp
fs
je
pusha
test
cmc
cmp
push
call
call
jmp
add
cwtl
inc
rdtsc
pushf
cmp
pushl
cmp
sub
call
test
sub
bt
pushf
movb
cmpl
lea
jnp
pusha
pushf
pusha
mov
pushf
call
dec
push
call
mov
movw
movb
lea
jmp
bt
test
sub
movb
call
das
movsbw
shl
sar
mov
clc
test
jmp
pushf
pushl
popl
movb
lea
jmp
movzbl
cmp
push
cmp
cmp
xor
pushf
ror
pusha
dec
call
call
sbb
btr
rcr
rcl
mov
clc
push
movb
call
pushf
mov
call
movzbw
jmp
btr
mov
call
sub
test
pushf
jmp
call
jmp
mov
pushl
mov
movb
lea
jmp
add
cmc
stc
sub
ja
mov
pushf
movb
add
pusha
pusha
pushf
lea
jmp
pushf
pushf
mov
push
pusha
lea
jmp
add
mov
cmc
pushl
popf
mov
mov
pusha
lea
jmp
mov
stc
shl
lahf
mov
btc
xor
bswap
mov
cmc
bt
bt
not
stc
bt
test
not
stc
pusha
cmc
add
jb
sub
pushf
and
push
movw
mov
pushf
pushf
popl
pusha
pushl
popl
pushf
pushf
lea
jmp
clc
stc
xadd
mov
shl
mov
clc
push
pusha
pusha
add
call
mov
pushf
pushf
popl
call
mov
mov
movw
pushf
lea
jmp
cmc
sub
pushf
call
mov
lea
jno
dec
jmp
mov
movb
lea
jmp
push
movw
mov
push
jmp
test
call
not
not
mov
pushf
pusha
mov
mov
lea
mov
mov
mov
pushf
push
lea
jmp
push
test
and
call
push
mov
mov
movb
mov
lea
jmp
stc
and
jmp
bt
cmp
and
mov
shld
clc
inc
not
mov
cmp
jge
add
call
inc
push
pop
bswap
shl
lea
movzbw
add
rcl
pusha
movzbl
call
jmp
cmp
mov
stc
add
push
pushf
popl
jmp
jmp
push
xor
mov
cmp
mov
bt
pushf
cmp
cmc
sub
push
mov
pushf
pushf
lea
jmp
push
lea
mov
jmp
sub
call
inc
pushl
clc
sub
test
pushf
stc
cwtl
test
jmp
push
lahf
not
inc
mov
btc
mov
test
pusha
cmc
add
movl
push
mov
jmp
inc
mov
lea
jnp
pushf
mov
not
push
pushf
inc
call
pushf
pushf
mov
pushf
movb
push
pusha
mov
jmp
clc
jmp
mov
mov
jmp
pusha
jmp
mov
pusha
mov
movw
pushf
mov
push
call
mov
push
push
lea
jmp
mov
pushf
lea
jmp
clc
cmc
rol
movzbw
movzbl
pushf
neg
xor
push
pushf
inc
movsbw
setg
bswap
not
not
inc
btr
adc
sub
xor
shr
not
pushl
movb
mov
clc
jmp
call
pushf
mov
movb
pushf
jmp
sub
clc
bt
push
mov
neg
call
pushl
popl
pusha
movb
pushl
lea
jmp
push
mov
movb
push
lea
jmp
jmp
mov
pushf
lea
jmp
mov
mov
pushf
popl
call
jmp
cwtl
test
jmp
pushl
popl
push
mov
movb
mov
lea
jmp
movb
pushl
popl
movb
pushl
pushl
mov
lea
jmp
dec
pushf
add
mov
pusha
push
mov
mov
pushf
push
pushl
lea
jmp
pusha
mov
movzbl
cmp
sub
jg
pusha
xor
lea
ja
inc
pushf
pushl
pusha
not
pushf
push
inc
push
pushf
dec
cmc
call
pushf
mov
movb
mov
pushf
pushf
lea
jmp
push
mov
push
pusha
pusha
movb
pushl
ret
add
mov
shl
or
mov
bt
sub
bt
cmc
jmp
sub
jmp
shl
mov
mov
or
mov
cmc
stc
cmc
sub
test
stc
shl
pushf
jmp
sub
pusha
not
clc
bt
cmp
mov
add
pusha
call
sub
mov
cmc
stc
bswap
jmp
mov
call
mov
dec
cmp
xor
movl
pushf
mov
sub
jle
bt
stc
sub
pushf
mov
jmp
mov
mov
pushl
ret
bsf
mov
pusha
pushf
call
mov
movw
lea
jmp
add
pushf
lea
jmp
lea
jne
call
mov
pushl
pusha
movw
lea
jmp
clc
lea
jmp
sar
bsr
shl
mov
stc
pusha
shl
sub
mov
pusha
add
call
movsbw
bsr
aaa
mov
ror
cmp
call
pusha
mov
pushl
movb
mov
lea
jmp
cmp
add
push
push
mov
mov
call
pop
lea
push
movsbw
repz
lea
xchg
movsbw
pushl
jmp
mov
pushf
mov
movl
lea
jmp
pushf
sub
jae
cmp
pusha
and
pushf
push
pushf
pushl
mov
jmp
pushf
popl
jmp
mov
jmp
pushl
push
mov
pushl
pushf
popl
movw
call
add
movw
mov
pushf
push
push
lea
jmp
mov
mov
call
pusha
movl
pushl
popl
pushf
mov
lea
jmp
ror
pushl
pusha
cmc
call
push
call
mov
pushf
push
jmp
mov
jmp
xchg
pushl
call
pusha
push
pushf
mov
pushl
lea
jmp
mov
call
mov
lea
pusha
jmp
jmp
cmp
lea
jg
push
sub
pusha
call
stc
clc
sub
call
sub
pushf
pushf
pushf
pushf
mov
movb
movb
push
push
lea
jmp
lea
jo
mov
push
lea
jmp
dec
push
neg
push
inc
jmp
pushf
mov
pushf
pushf
mov
mov
pushf
mov
pushl
pushf
pushl
lea
jmp
mov
push
pushf
pushl
pushf
lea
jmp
jmp
push
mov
pusha
pushl
movw
jmp
bt
neg
movzbl
call
pushf
popl
pushf
pushl
pusha
call
mov
push
jmp
pop
mov
push
pusha
mov
cld
mov
pushf
jmp
call
pusha
mov
pusha
mov
pushf
pushf
lea
jmp
mov
jmp
mov
movzbw
bswap
bswap
xchg
lea
push
mov
setno
pushf
movsbw
mov
jmp
push
jmp
mov
bswap
xchg
pop
mov
lahf
cwtl
pusha
mov
mov
lea
mov
push
mov
pushl
ret
movb
push
mov
mov
push
push
pushf
lea
jmp
mov
pushf
mov
pushf
lea
jmp
jmp
clc
ror
mov
stc
call
pusha
push
jmp
pushf
lea
jne
stc
sub
push
pushf
call
setnp
mov
mov
stc
clc
sub
test
push
bt
add
pusha
jmp
call
add
call
pop
setl
cwtl
pop
sete
call
push
jmp
pushl
popl
mov
lea
jmp
pushf
mov
push
pushf
push
movb
lea
jmp
push
rcl
xor
btr
movzww
pushf
mov
pusha
movb
xchg
test
bt
jmp
stc
add
call
clc
lea
xor
push
mov
sbb
shr
mov
rcr
test
mov
pusha
add
movb
movl
pusha
stc
shld
call
pushf
rep
rcl
add
mov
bswap
mov
std
bt
pushl
popf
pushl
pushf
movw
lea
jmp
push
call
pushf
jmp
jo
push
call
pushl
pushl
mov
pushl
call
add
add
mov
push
movb
jmp
mov
cmp
sub
pushf
jmp
mov
jmp
push
pushf
popl
pushf
pushl
popl
movb
movb
movl
mov
lea
jmp
adc
not
mov
shl
inc
add
test
add
mov
mov
push
call
cmp
shl
pusha
jmp
mov
pushf
pushf
pusha
lea
jmp
add
jmp
mov
jmp
pusha
mov
call
push
mov
mov
push
pushf
movl
mov
lea
jmp
pushf
pushl
mov
pusha
push
mov
lea
jmp
movzbw
pushf
mov
lea
mov
lea
pusha
bswap
mov
pushf
push
push
divl
call
rol
pop
and
clc
dec
rcr
shl
mov
push
push
sub
pushf
jmp
pusha
pushf
mov
call
clc
pushl
call
movl
call
jmp
pusha
mov
movb
lea
jmp
pusha
mov
call
mov
cbtw
clc
cwtl
cmc
call
mov
movl
mov
movb
lea
jne
mov
bswap
adc
sub
mov
pushf
call
mov
push
lahf
pushl
pusha
mov
pushf
lea
cpuid
jmp
jmp
call
call
movzbw
inc
cmc
ror
rol
dec
pusha
movsbw
and
shr
jmp
jmp
movb
inc
stc
clc
cmc
ror
test
sub
pushf
bt
pushf
sub
call
call
and
mov
jmp
movb
mov
push
lea
jmp
mov
push
pushf
push
lea
jmp
cwtl
mov
cmc
mov
sbb
rcr
setl
mov
push
add
jmp
pushf
mov
clc
pushf
sub
test
jmp
rol
movzbl
bt
call
pushf
call
neg
lea
js
pushf
pushf
inc
cmp
push
sub
mov
clc
sub
mov
jmp
jmp
jmp
pusha
mov
jmp
lea
je
stc
xor
cmc
bt
cmc
xchg
jmp
call
movb
call
call
pusha
movl
lea
jne
pusha
mov
push
pusha
pushl
ret
call
mov
pushf
mov
movl
lea
jmp
movw
pusha
dec
cmp
xor
jmp
rol
clc
add
movb
mov
pushf
pushl
pushf
pushl
ret
jmp
pusha
movw
cld
jmp
pusha
mov
pusha
pushl
pushf
mov
call
mov
push
shl
movb
shr
jmp
pushl
popl
pushf
pushf
pushl
pushf
lea
jmp
dec
dec
ror
rol
jmp
mov
pushf
lea
jmp
jmp
call
push
jmp
pushf
pushf
call
mov
mov
jmp
aad
rcr
movsbl
mov
jmp
call
pushf
movb
mov
call
pushl
mov
pushf
pushl
push
lea
jmp
call
mov
test
movw
pushl
sub
pushf
pushf
mov
push
lea
jmp
call
push
mov
not
notl
mov
bsr
aam
mov
cmc
clc
sub
cmp
call
and
cmc
bsr
mov
bt
add
pushf
movb
not
setge
mov
pushl
mov
push
mov
lea
jmp
call
xor
jmp
lea
ja
xadd
mov
aad
shl
aad
pushf
lea
das
test
rcr
sub
bt
stc
shrd
push
lea
cmp
stc
shrd
cmp
and
bswap
cmp
shl
sub
call
mov
pusha
call
call
pushf
pushl
inc
push
jmp
movb
mov
pushl
lea
jmp
neg
setnp
lea
xchg
setl
adc
sub
test
dec
inc
mov
xadd
rcl
mov
xchg
push
add
lea
bsf
bt
btr
bswap
mov
bt
movsbw
add
movzbw
call
pushf
mov
call
call
call
sub
call
pusha
pusha
pushf
not
movb
pushf
pushf
inc
call
dec
movb
neg
call
rol
jmp
sub
call
mov
jmp
lea
jne
lea
push
bswap
jmp
pushl
popf
movb
mov
lea
jmp
push
mov
call
mov
movb
inc
push
pushf
decl
pushf
lea
jne
pushf
mov
mov
pusha
pusha
push
push
lea
jmp
call
mov
stc
bt
stc
add
jmp
pusha
adc
neg
mov
not
jmp
pushf
push
pushf
mov
call
movb
mov
pusha
lea
jmp
std
push
pusha
call
pusha
cmp
pushf
shrd
pushf
pushf
jmp
pushf
movw
call
jmp
jmp
call
pusha
pusha
mov
pushf
lea
jmp
call
cmp
bt
test
or
mov
xor
mov
jmp
inc
mov
dec
pusha
xor
cmc
bt
cmc
jmp
movb
call
pusha
dec
pusha
rol
dec
sbb
push
xadd
neg
bsf
rcr
lea
btc
inc
sub
lea
sbb
mov
shld
cmp
rcr
movzbl
mov
rol
add
sub
clc
movsbw
cmp
mov
push
dec
dec
clc
add
inc
setge
bswap
inc
neg
ror
xor
lea
inc
pusha
neg
ror
lea
btc
bswap
btr
sar
add
pusha
rcr
pushl
bts
movzbl
btc
push
mov
mov
push
rol
call
call
push
mov
movw
movw
lea
jmp
pop
add
rcrl
add
rcrl
rorb
rorb
dec
pop
add
iret
pop
add
pop
rclb
pop
rcrb
pop
adc
pop
cmp
pop
add
xlat
pop
add
rcrl
adcb
pop
adc
pop
sub
pop
sub
pop
rorb
add
rolb
cmp
pop
sarb
pop
add
into
pop
rolb
pop
rolb
pop
rolb
pop
add
into
pop
cmpb
pop
sarb
pop
rolb
pop
addb
pop
rolb
pop
add
pop
xorb
pop
rorb
loopne
pop
rcrb
pop
sarb
pop
orb
pop
xorb
pop
add
pop
add
into
pop
addb
pop
cmpb
rorb
inc
loopne
pop
cmp
pop
add
pop
cmpb
pop
add
pop
cmpb
sarb
pop
sarb
pop
addb
pop
add
into
pop
addb
pop
add
aam
or
pop
rclb
pop
xor
pop
rorb
sub
pop
inc
add
pop
sbbb
rolb
pop
cmpb
pop
add
pop
rolb
pop
add
into
pop
inc
and
pop
rcrb
pop
orb
pop
shlb
inc
push
pop
sbbb
add
pop
sarb
pop
rolb
add
add
rcrl
rolb
rolb
pop
rcrb
pop
shlb
pop
add
xorb
pop
sub
pop
add
rcrl
sbbb
xor
pop
andb
pop
cmpb
shlb
addb
pop
or
pop
adcb
pop
add
iret
pop
add
pop
adc
pop
andb
pop
adc
pop
rolb
rorb
pop
pop
add
pop
inc
and
pop
add
sub
pop
shlb
pop
rclb
pop
cmpb
or
pop
inc
add
pop
rolb
pop
shlb
pop
rolb
rorb
sarb
pop
rorb
xchg
aad
rolb
pop
add
rcrb
inc
push
rcrb
shlb
rorb
clc
rcrl
shlb
pop
add
pop
rolb
pop
inc
jmp
pop
add
pop
cmpb
cmp
pop
shlb
pop
shlb
pop
add
into
pop
rclb
pop
inc
add
pop
add
rcrb
inc
xchg
into
pop
andb
pop
inc
add
pop
xor
pop
cmpb
pop
shlb
inc
xchg
into
pop
add
pop
inc
add
pop
add
iret
pop
sarb
pop
cmpb
add
iret
pop
shlb
pop
xorb
pop
xor
pop
add
rorb
add
pop
add
pop
inc
push
rcrb
xorb
pop
sub
pop
rolb
add
rcrb
add
rcrb
add
rcrb
add
rcrb
add
rcrb
add
rcrb
add
rcrb
add
rcrb
add
rcrb
add
rcrb
add
rcrb
add
rcrb
add
rcrb
add
rcrb
add
rcrb
add
rcrb
sub
pop
add
rcrb
addb
pop
add
xlat
pop
inc
xchg
into
pop
or
pop
add
iret
pop
rolb
pop
add
rcrl
add
pop
andb
pop
adcb
pop
rclb
pop
add
rcrl
add
rcrl
add
rcrl
add
rcrl
add
rcrl
add
rcrl
add
rcrl
add
rcrl
add
rcrl
add
rcrl
add
rcrl
add
rcrl
add
rcrl
add
sar
xor
pusha
mov
pushf
mov
pushf
movl
jmp
pushf
mov
call
pushf
pushl
popl
pushl
pushf
lea
jmp
bt
call
inc
mov
clc
sub
cmp
sub
call
mov
pushl
lea
jmp
mov
pusha
pushf
pushf
lea
jmp
mov
pushl
sub
push
jmp
jmp
add
pushf
pushf
lea
jmp
bt
test
add
pushf
pushl
pushf
ror
cmp
xor
jmp
push
clc
neg
jmp
movw
mov
jmp
pusha
lahf
pusha
mov
pushl
movl
cmc
xchg
cmp
pushl
lea
sub
jno
clc
bt
push
sub
jmp
mov
push
pusha
mov
pushl
jmp
mov
movb
pushf
mov
lea
jmp
das
neg
neg
lea
cmp
cmp
jmp
rol
pusha
mov
bsf
inc
clc
btc
add
shrd
xor
rcr
not
ror
neg
sar
adc
add
bt
movzbl
ror
bts
inc
xor
ror
bswap
movzbl
cmp
mov
bt
or
mov
pusha
pushf
jmp
movsbw
cmp
test
mov
movsbw
adc
or
add
rcr
sub
dec
test
setle
call
stc
clc
and
stc
cmp
cmp
push
pushl
movw
lea
jne
dec
xor
pushf
xorb
lea
seto
movsbl
movsbw
not
pop
pusha
push
pusha
lea
jmp
push
lea
jb
pusha
mov
jmp
pusha
jmp
mov
push
mov
movb
pushf
lea
jmp
popl
pushf
movb
pushf
lea
jmp
call
jmp
push
call
pusha
mov
pushl
lea
jmp
call
call
mov
pushf
mov
jmp
pushf
push
pushf
mov
pushl
pushl
pushf
push
lea
jmp
movzbw
rcr
rcl
aad
mov
shr
mov
call
mov
push
call
push
sub
test
pusha
and
pushl
mov
push
pushf
popl
pushf
pushf
pushl
popl
mov
pushf
lea
jmp
mov
cmc
pusha
pusha
rcl
mov
stc
cmc
sub
call
mov
pushl
pusha
pushf
lea
jmp
pusha
mov
mov
mov
mov
call
pusha
push
mov
pushf
pushf
mov
lea
jmp
call
cmc
bt
push
and
movb
pusha
cmp
pushf
push
lea
jne
call
mov
clc
neg
rol
mov
mov
stc
sub
stc
stc
stc
bt
shr
push
pusha
call
pushf
jmp
pushl
pushl
movzbw
mov
mov
mov
pushf
std
bswap
lea
lea
push
cld
pushf
mov
not
pop
movsbw
not
lea
cld
ja
pushf
xchg
std
mov
jmp
pushf
mov
pusha
push
lea
jmp
jmp
jmp
mov
test
stc
sub
mov
shl
pusha
mov
pushl
pushf
popl
pushf
pushf
push
pushl
pushl
popl
push
mov
lea
jmp
pushl
pushf
mov
jmp
mov
mov
pushf
movb
mov
lea
jmp
bt
add
jmp
or
add
mov
ror
test
mov
jle
cmp
cmp
add
pusha
jmp
test
movb
cmp
xor
clc
pusha
test
mov
test
sub
call
call
call
push
pusha
pusha
call
jmp
pusha
pushl
call
call
pushf
popl
push
jmp
xor
mov
cmc
ror
movl
pushf
add
jmp
push
pusha
push
push
mov
movb
movb
mov
pusha
movb
lea
jmp
mov
push
mov
call
cmc
mov
clc
add
pushf
movw
movw
push
lea
jmp
call
pushf
popl
push
movl
pushl
popl
push
lea
jmp
mov
push
mov
pushl
pushf
jmp
pushf
lea
je
pushf
mov
pushf
pusha
lea
jmp
rol
jmp
mov
mov
jmp
push
cmc
bt
stc
sub
call
pushf
popl
pusha
mov
call
pusha
mov
call
jmp
pusha
call
mov
mov
call
push
test
call
call
bswap
shr
movsbw
movzbl
shl
xor
movsbw
bt
movzbw
ror
shrd
shr
movsbw
cmc
sub
movsbw
cmp
inc
bt
neg
stc
not
sub
movzbw
xor
dec
pushf
movsbw
jmp
mov
movl
pushf
push
lea
jmp
pushf
rep
neg
ror
mov
mov
mov
jmp
lea
not
inc
not
bswap
not
jmp
cmc
push
add
jmp
mov
pushf
push
pushf
lea
jmp
pushf
popl
jmp
jmp
pushl
not
jmp
pusha
pushf
popl
mov
pushl
lea
je
pusha
pushl
popl
movb
pushl
pushf
pushf
lea
jmp
call
shr
movb
mov
pushf
pushf
popl
call
dec
cmp
jmp
pushf
clc
xor
clc
call
bts
jb
aaa
cmp
mov
call
stc
mov
ror
cmp
sub
mov
cmp
sub
bt
pusha
cmc
mov
shr
pusha
mov
pushf
push
jmp
stc
add
mov
jmp
mov
call
pusha
mov
jmp
lea
movzbw
push
pushf
repz
popl
movsbw
dec
pusha
pushl
popl
not
inc
movl
lea
inc
lea
mov
lea
call
jmp
movb
pusha
jmp
push
pop
mov
call
pushl
mov
call
mov
push
push
stc
clc
add
push
jmp
jmp
pushl
inc
call
pushl
popl
pusha
lea
jmp
mov
pushl
pushf
lea
jmp
pusha
sub
call
bt
push
xorb
not
mov
pushf
pushf
movb
pusha
lea
jmp
mov
movb
mov
pusha
lea
jmp
movw
movb
pushf
popl
jmp
call
mov
pushl
popl
mov
lea
jmp
movb
sub
test
xor
mov
ror
call
mov
test
not
pushf
not
test
clc
pushl
lea
jne
and
call
call
pushf
pushl
popl
pushl
push
lea
jmp
jmp
push
inc
shl
shl
xor
jmp
rdtsc
clc
daa
mov
sbb
pop
inc
rcl
aas
lea
pop
das
cld
popf
movzbw
cltd
jmp
jmp
pushf
movl
pushf
popl
push
push
push
push
pushl
popl
mov
lea
jmp
clc
pusha
xor
call
mov
mov
push
pushf
lea
jmp
mov
sar
call
jmp
jmp
lea
not
setno
push
mov
call
cmp
clc
add
pusha
call
pushf
jmp
jmp
sub
clc
push
movb
bt
sub
pushf
mov
mov
lea
jmp
jmp
cwtl
mov
setb
mov
pusha
jmp
bt
sub
pusha
movw
call
