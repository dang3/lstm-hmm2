nop
push
add
dec
fidivrl
in
sbb
aad
sub
shrb
scas
bound
arpl
xchg
fimull
jecxz
push
lcall
test
out
ret
out
sahf
jl
mov
inc
scas
and
je
inc
xchg
int
jnp
mov
iret
and
lret
inc
jg
out
dec
mov
xlat
mov
loopne
imul
xchg
movsl
in
adc
cmp
popf
and
push
dec
mov
push
jo
mov
mov
sbb
dec
mov
decl
sbb
loope
inc
scas
xchg
fs
mov
jbe
loopne
mov
sub
mov
xor
mov
insb
loope
inc
inc
xchg
adc
mov
jmp
int3
imul
dec
stos
pop
cltd
pop
sbb
test
jo
xchg
dec
popf
and
outsb
into
rorb
jae
mov
mov
jmp
ret
jae
dec
stos
push
dec
pop
or
cmp
jbe
fwait
cmpsl
jo
popf
mov
sub
aas
xchg
test
les
lahf
shr
in
xchg
pop
cmpsl
xchg
inc
mov
sbb
loop
push
movsl
dec
sub
adc
inc
sub
movsl
pop
shrb
sbb
or
rorl
movsl
adc
mov
mov
xor
mov
test
jge
gs
lods
xchg
addr16
jnp
out
jb
inc
mov
lret
xchg
push
or
sbb
pop
out
adc
inc
mov
cmpsl
mov
add
aam
inc
mov
add
stc
dec
cmp
test
pushf
out
cltd
mov
dec
lahf
imul
daa
outsb
adc
fsubp
xchg
cwtl
repz
lret
inc
jl
mov
jmp
cli
fisubrl
out
mov
js
mov
pop
inc
mov
pop
mov
adc
movsb
mov
pop
repnz
mov
loope
mov
mov
push
push
mov
or
mov
mov
cmp
mov
jb
cmp
jb
cmp
jb
cmpw
je
cmp
jae
mov
mov
cmp
jne
pop
pop
ret
int3
push
mov
sub
andl
push
push
push
pushl
call
cmp
jb
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
add
cmp
mov
mov
jbe
cmp
movswl
mov
jae
mov
cmp
jae
mov
cmp
jb
mov
add
cmp
jb
mov
mov
add
mov
lea
mov
mov
mov
movzbl
mov
movzbl
sub
jne
mov
mov
mov
sub
mov
cmpb
je
incl
mov
mov
mov
movzbl
mov
movzbl
sub
je
test
jl
jle
xor
inc
test
je
mov
inc
cmp
mov
jb
mov
pop
pop
pop
leave
ret
mov
mov
add
mov
jmp
xor
jmp
push
mov
sub
push
xor
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
mov
push
push
mov
mov
mov
pop
pop
lea
mov
cmp
jb
lea
cmp
jb
lea
cmp
jb
mov
push
pushl
call
mov
lea
push
pushl
call
mov
lea
push
pushl
call
mov
mov
cmp
jbe
mov
lea
push
push
call
push
pushl
lea
push
mov
lea
call
add
xor
lea
mov
add
mov
inc
add
cmp
jl
cmpl
jbe
mov
lea
push
mov
sub
push
push
call
mov
mov
lea
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
mov
push
sub
push
push
call
push
push
pushl
call
push
push
call
push
mov
push
push
call
push
pushl
push
call
mov
movzwl
push
pushl
lea
push
call
add
pushl
mov
push
push
pushl
mov
pushl
pushl
call
pop
pop
mov
pop
leave
ret
add
add
xchg
inc
cwtl
mov
or
xchg
lahf
out
mov
mov
push
xchg
stc
push
scas
pop
or
rclb
in
inc
mov
pop
cmp
mov
fwait
jl
mov
nop
inc
shrb
nop
pop
scas
xor
lcall
mov
jmp
stc
push
repz
mov
mov
stos
inc
and
xor
cmp
sub
mov
iret
shrb
inc
mov
sti
js
add
inc
movsl
shlb
stc
lahf
sbb
mov
stos
sub
cld
popl
popf
sar
pop
cmpsb
xlat
daa
out
sahf
and
out
dec
subl
stc
repnz
inc
xchg
fdivs
xchg
outsl
mov
xor
sub
daa
lcall
jge
push
popf
mov
into
mov
lret
push
icebp
gs
and
cli
mov
inc
xchg
sti
int
aad
dec
call
cmpb
push
ret
cmc
leave
enter
add
dec
dec
mov
es
mov
push
xchg
mov
fwait
testl
out
xchg
outsl
shl
aas
ret
mov
ja
out
inc
add
add
add
mov
dec
add
pushf
push
add
ret
add
sbb
add
cmp
dec
push
push
add
sub
daa
mov
fsubr
dec
mov
lcall
fnsave
jbe
push
dec
loopne
repnz
mov
cmp
sub
mov
les
sarb
lret
insb
sub
and
pop
loopne
loope
inc
fistl
or
dec
cmp
mov
xor
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
ret
lret
jno
stos
fsts
in
stc
ja
pushf
outsb
std
aam
mov
inc
nop
sub
js
mov
sub
push
cld
cli
xlat
sub
xchg
std
jne
xchg
xchg
or
add
and
gs
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
test
jle
test
stc
or
jne
test
sahf
dec
insb
loop
or
jne
test
lahf
pop
or
out
lods
xchg
dec
lds
inc
lods
dec
dec
pop
fisttpl
addr16
xor
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
jno
cmpsb
jns
popa
xor
push
addr16
negb
adc
hlt
sbb
or
fwait
pop
add
pop
enter
pop
jne
jl
fiadds
push
and
mov
cld
shrl
iret
mov
mov
daa
insb
stos
jl
jns
repz
adc
mov
cmp
push
pop
out
in
cs
outsb
bound
jae
outsb
mov
dec
sahf
sbb
jl
gs
dec
mov
enter
jmp
pop
leave
jge
xor
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
or
scas
push
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
popf
outsb
sbb
sbb
gs
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
ficoms
push
jl
mov
jg
or
xchg
jecxz
pop
enter
jecxz
xorl
inc
dec
mov
enter
mov
daa
scas
outsl
mov
pop
dec
dec
or
xor
sub
or
test
pusha
xor
dec
mov
enter
xchg
jle
pop
dec
in
dec
adc
and
pop
fbstp
addr16
jmp
gs
dec
mov
enter
cmc
or
cmp
dec
rcll
xchg
ret
mov
pop
test
dec
jp
or
shrb
inc
xor
dec
mov
enter
and
in
push
add
xchg
cmc
fnstenv
xchg
rcrl
pushf
popf
xchg
inc
mov
in
adc
inc
dec
mov
enter
in
mov
xor
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
ss
sbb
cmp
pop
sbb
in
cli
pop
adc
stc
int
inc
clc
daa
dec
mov
dec
and
xor
jne
arpl
add
mov
mov
aaa
test
call
mov
shrl
pop
xchg
mov
lds
add
dec
jle
cmpsl
daa
push
adc
mov
mov
or
dec
sarb
pop
dec
sub
rcll
xor
dec
jns
add
sahf
add
insb
jbe
sub
add
repnz
jae
rcl
rcll
imul
pop
mov
popaw
jge
adc
orb
movsb
push
std
rcll
jno
dec
dec
jle
push
jb
mov
mov
shll
and
dec
xor
inc
arpl
cmp
or
stos
fidivrl
push
mov
pop
push
loope
jl
mov
jecxz
ret
inc
ss
adc
mov
pop
inc
pop
fwait
xor
adc
inc
ret
xor
adc
xchg
ret
ds
in
mov
sahf
loop
gs
inc
and
and
lea
cmp
jmp
cwtl
ljmp
xor
imul
and
fs
orb
push
xor
push
cmp
mov
mov
push
rolb
mov
jno
inc
xlat
mov
je
outsl
push
cmp
outsl
cltd
push
nop
shll
jb
je
pusha
mov
es
outsl
ss
push
jmp
bound
push
sti
js
mov
rclb
and
pop
pop
iret
fwait
and
or
lcall
out
mov
cmc
jmp
gs
pushf
int
bound
ss
jecxz
shlb
inc
loope
ljmp
scas
daa
lret
in
inc
stos
sbb
fdivs
lock
dec
movsl
sbb
sbb
push
roll
push
lahf
cs
mov
jge
push
les
faddp
dec
dec
aaa
insl
js
je
xchg
pop
orl
rorl
dec
add
mov
push
pop
push
inc
push
rorb
xchg
or
ljmp
inc
js
std
adc
data16
add
cmp
pop
cmp
mov
outsl
out
rclb
sti
push
pop
lods
aas
not
mov
orb
mov
outsb
or
xchg
into
das
inc
push
loopne
mov
cmpsb
test
mov
je
cmp
inc
shr
mov
out
daa
add
mov
sbb
data16
dec
inc
inc
hlt
and
int
or
hlt
xchg
sub
fsubs
cmp
mov
clc
and
loopne
jae
push
adcl
stos
pop
popa
xchg
xorb
pop
popa
sbbl
add
fsubrl
adcb
dec
int
loopne
cli
mov
fisttpll
mov
mov
fdivs
dec
lret
cmp
sbb
mov
divl
sbb
cwtl
ret
stos
xor
dec
jmp
insl
ret
adc
dec
inc
cmc
adc
subb
inc
xchg
push
mov
gs
push
icebp
xchg
shll
xlat
xchg
into
dec
inc
das
jno
hlt
and
xchg
pop
pop
into
adc
sarl
data16
push
mov
test
clc
cmp
repz
das
sbb
xor
jns
sarb
push
test
sbb
sti
scas
fs
rcr
xor
add
mov
dec
push
mov
pop
jl
testb
imul
adc
ret
sub
stos
and
ret
imul
pop
in
je
out
roll
test
dec
xchg
inc
xorl
inc
dec
add
outsl
cwtl
jno
mov
xchg
lcall
cld
stc
mov
push
stos
fdivrp
xlat
lock
flds
adc
mov
sbb
push
sub
mov
inc
je
cmp
fchs
mov
movsb
out
mov
fnstsw
push
cwtl
idiv
mov
sub
pop
ret
xchg
fcompl
leave
mov
outsb
mov
shll
pop
xchg
mov
mov
jnp
xchg
je
push
je
lods
mov
aad
sahf
loopne
push
xor
int3
sub
cs
cwtl
in
fldenv
cmc
leave
cmp
out
mov
inc
push
fisubrs
or
mov
rclb
jno
loopne
mov
or
jle
xchg
rcr
sub
jb
inc
mov
sub
cld
clc
jl
xor
adcb
pushf
pop
sub
repz
or
out
insb
stc
popf
in
leave
ja
cwtl
adc
jecxz
mov
mov
out
push
xor
test
loope
push
mov
ja
sbb
shr
pop
jge
cmp
or
sub
shrl
popa
addr16
add
sub
dec
adc
cmpsl
mov
cld
cs
sbb
push
out
sub
and
sbb
shlb
in
leave
in
out
in
sti
inc
ds
test
push
data16
mov
and
ficoms
jle
clc
push
mov
imul
xor
fwait
pusha
mov
or
push
mov
mulb
xchg
daa
xor
pushf
or
ret
fnstsw
pop
adc
mov
pop
add
popa
in
inc
lods
out
das
loope
leave
insb
adc
inc
outsl
push
fwait
mov
xchg
js
in
dec
out
scas
imul
enter
pop
xor
pusha
mov
call
gs
inc
dec
sysret
dec
mov
stc
jg
lock
int
mov
mov
pop
push
daa
popf
pop
inc
daa
push
lods
les
adc
fwait
out
push
xchg
pop
push
mov
sbb
push
insb
cmpsb
addr16
sub
cmc
stc
xlat
push
dec
and
test
mov
mov
inc
repnz
mov
gs
enter
mov
stos
adc
nop
jo
xchg
jne
loope
inc
inc
xor
mov
xchg
pusha
fistps
addr16
leave
popa
mov
inc
xchg
ljmp
out
mov
and
mov
jp
movsl
push
mov
jle
jo
enter
mov
aaa
cmp
cmp
insl
mov
sbb
sub
jp
fisttpl
test
aad
aas
mov
mov
callw
cmc
ds
int3
out
fidivl
mov
ret
scas
test
imul
mov
pop
push
sbb
xchg
cmp
std
push
push
add
clc
and
insl
jbe
jecxz
add
sub
shll
mov
jbe
in
mov
call
xor
ret
mov
cld
repz
shll
dec
rolb
lods
lcall
into
popf
lahf
pop
pushf
imul
clc
mov
add
add
pop
outsb
mov
jae
and
xor
xchg
sub
push
pop
bound
sbb
jns
lret
lret
lahf
cmpsb
stc
pusha
lock
adc
push
popf
ss
aad
push
shll
int
ret
out
hlt
mov
mov
sbb
clc
xchg
test
scas
sbb
popf
wrmsr
cmc
repnz
test
int
out
lods
rcll
cmp
xchg
push
jl
lods
jb
mov
jne,pn
mov
jno
inc
mov
jnp
sbb
jns
aaa
sbb
cmp
xor
les
fwait
jecxz,pn
nop
lods
pop
xchg
popf
cmp
dec
inc
aaa
scas
es
fmull
popa
cli
in
push
mov
xchg
jmp
lods
inc
sub
and
dec
and
push
scas
dec
push
add
jo
mov
sub
outsb
cmp
cld
mov
xor
inc
pop
andb
mov
adc
mov
xchg
idivb
lock
stc
sub
inc
loop
cld
push
or
dec
push
and
mov
sub
xor
aas
icebp
int3
xor
inc
cmp
stc
sub
xor
xor
nop
mov
mov
mov
filds
jae
xchg
push
jns
rorb
lret
in
xchg
adc
insl
pop
add
divb
jno
lock
aaa
divb
sbb
pop
jbe
jne
adc
mov
sarb
lcall
hlt
xlat
xor
cli
sarl
xor
cmpsb
or
imul
daa
add
xchg
ds
jns
cmpsl
and
push
push
enter
xchg
ljmp
addr16
adc
arpl
std
push
cld
loope
stc
jbe
ds
mov
test
or
push
out
mov
daa
and
leave
cmp
incb
jne
aas
push
inc
js
pop
std
jg
gs
jmp
aad
pop
or
dec
push
sbb
and
cmp
das
scas
push
arpl
rep
ret
nop
cli
inc
sub
loopne
je
sbb
or
sti
in
xchg
mov
xor
int
jne
push
aam
mov
test
pusha
les
jnp
jns
push
push
out
push
lods
pop
rcll
xchg
ficoms
pop
mov
in
ds
andl
out
xorl
adc
push
test
push
hlt
push
roll
sub
cmc
cli
mov
sub
ljmp
push
in
mov
dec
cmp
or
or
dec
arpl
mov
mov
jl
pushf
iret
inc
pop
pop
lds
and
in
jnp
xor
pop
std
dec
outsl
jmp
add
add
mov
cs
adc
pop
mov
popf
sbb
jbe
jne
or
out
dec
stc
in
mov
out
jb
dec
cmp
pop
sub
sub
sahf
mov
mov
aas
iret
xlat
enter
stc
fwait
pop
mov
test
sarb
fsubrs
aad
in
mov
jg
add
scas
pusha
les
out
xchg
jo
mov
mov
in
lret
add
sahf
cwtl
stc
mov
fwait
adc
lret
sbb
icebp
sub
jl
pop
pop
lods
push
adc
or
sbb
arpl
pop
je
pushf
lock
cmpb
pop
lds
popf
aam
fwait
lret
std
fwait
rorl
enter
xor
popa
lods
icebp
add
mulb
idivl
inc
jp
arpl
ds
pop
mov
popf
sahf
dec
xchg
add
push
and
xor
xchg
cmp
ljmp
fstpt
adc
inc
adc
add
outsb
es
fidivrl
mov
adc
std
adc
xchg
push
xchg
push
scas
mov
add
mov
fs
sbb
mov
push
repnz
lret
test
add
push
mull
push
repz
mov
or
aad
mov
inc
adc
add
sbb
lcall
sub
sbb
lock
lds
and
add
out
push
test
xchg
leave
push
xor
inc
inc
mov
add
xor
or
sub
push
mov
jne
scas
xchg
div
pop
mov
das
out
and
in
mov
daa
adc
cltd
in
dec
fnstsw
dec
push
jbe
cmp
sub
sub
loop
mov
lretw
mov
pop
out
es
addr16
repnz
lret
xchg
lods
sub
test
insb
inc
mov
pop
mov
sub
faddl
jge
pop
es
mov
jp
push
dec
cli
adc
fsubrl
std
js
roll
push
cmp
adc
add
xlat
push
clc
daa
push
rcll
cmc
jecxz
mov
pop
inc
jmp
arpl
fnsave
movsl
imul
xor
dec
xchg
adc
stos
mov
adc
mov
idivl
jmp
dec
and
rcll
xchg
repnz
cmp
sbb
cmpsl
sti
sahf
out
mov
inc
and
dec
cmp
popf
xchg
xchg
jl
or
es
inc
mov
loopne
rclb
xor
addb
in
jle
push
imull
jg
mov
dec
test
test
jo
stos
push
xor
dec
scas
fs
addr16
jp
fwait
or
jg
ret
mov
mov
lods
shlb
fisttps
push
pushf
clc
adc
movsb
aas
data16
cmpsb
mov
mov
push
enter
sub
mov
es
shlb
and
cwtl
jge
dec
cmpb
cmpsb
push
jb
xchg
add
jp
sub
sbb
out
push
addr16
push
push
test
adc
mov
out
jmp
mov
imul
mov
stos
xchg
jo
add
pushf
sbb
add
adc
xor
adc
pop
or
push
subb
pushf
inc
icebp
dec
mov
je
cmc
mov
out
pop
sti
pop
sbbl
xor
arpl
test
iret
xchg
jo
and
cmc
mov
out
jmp
ds
mov
subl
rcrl
fs
adc
mov
sbb
lret
rcrl
ret
push
xchg
and
insb
xchg
insl
test
imul
sahf
loope
pop
push
xchg
xorl
cmpsl
inc
xchg
popf
in
cmpsl
fsubr
fwait
lock
push
xchg
mov
lods
and
jl
clc
inc
mov
mov
xchg
inc
data16
pop
in
pop
jp
pop
mov
sub
sub
inc
mov
outsl
mov
push
or
test
add
fcmove
cmp
pop
jl
mov
fs
mov
adc
adc
aad
shrl
add
mov
leave
sub
add
jp
scas
push
mov
out
push
mov
std
mov
scas
dec
insl
dec
sarl
mov
dec
adc
mov
in
fmuls
pushl
pop
pop
mov
in
xor
jnp
out
jecxz
lods
mov
daa
xor
or
mov
mov
fsub
sbb
lcall
imul
sub
dec
andb
mov
jecxz
mov
mov
mov
adc
lret
not
push
icebp
mov
movsl
ret
pop
fisubrs
cs
sbb
push
enter
js
mov
mov
ret
aas
or
in
cmp
enter
jb
add
add
stc
push
es
std
mov
dec
mov
dec
gs
cli
loopne
iret
sti
enter
xor
fists
ret
sub
dec
dec
js
jle
mov
sbbl
jge
call
outsl
test
nop
js
fwait
pusha
fwait
mov
or
lods
or
orb
mov
lahf
and
mov
fnstsw
rorb
xor
sbb
add
out
aas
ret
sub
fistl
push
jcxz
ret
pop
sbb
cli
push
dec
xor
rcll
and
push
mov
jg
pop
mov
sub
xchg
daa
loope
sti
mov
pop
jmp
stc
ds
dec
mov
das
push
lods
fs
enter
insb
sarl
stos
cltd
inc
cmp
adc
outsb
xlat
push
dec
data16
and
imul
fs
pop
mov
dec
mull
addr16
clc
xor
pop
mov
sub
in
filds
enter
pusha
xorl
je
jg
std
sbb
adc
int
dec
test
dec
mov
movsl
xor
jl
sbb
leave
and
out
pop
frstor
cltd
dec
sahf
mov
clc
icebp
inc
outsb
mov
cmp
or
push
cmpsl
mov
or
sbb
mov
test
fisubrl
mov
je
int3
jg
xor
adc
aas
fwait
sti
xchg
fldenv
and
adc
rorl
push
cmpsb
inc
shll
es
mov
jg
sbb
or
popa
push
sbb
ds
stos
xor
lods
mov
mov
test
arpl
lods
mov
or
js
jbe
out
movsb
leave
std
repnz
sub
hlt
jl
outsl
jge
out
and
scas
xor
imul
imul
push
xor
repnz
mov
movhlps
sub
sbb
stos
push
mov
enter
fcomps
xchg
js
icebp
push
stos
std
es
mov
fisttpll
loope
jnp
fs
or
mov
fbstp
cmp
loope
adc
dec
pop
ja
es
ja
lret
dec
or
sbbl
jge
repnz
xchg
scas
or
cmp
jp
ss
test
xor
cmp
sbb
fmulp
dec
gs
ja
es
ja
pop
or
bound
subb
push
pop
or
cmp
in
push
cmp
cmp
das
mov
adc
scas
mov
loope
insb
lods
dec
sub
xor
push
int
aaa
and
sub
fwait
mov
enter
or
nop
mov
mov
dec
int
xor
fbstp
inc
fstpl
cmpsb
and
or
push
call
sub
movsb
jne
hlt
std
fistps
test
mov
adc
pop
nop
pop
shlb
mov
xor
fadds
outsl
sub
scas
cmp
push
addb
jnp
push
and
jle
mov
outsl
fcmovu
adc
dec
rorb
les
cwtl
sub
aas
mov
lea
jns
mov
lret
cli
adc
cltd
nop
cld
filds
add
push
scas
stc
xchg
xor
pop
inc
sub
test
push
mov
call
pushf
mov
mov
pop
lret
jge
in
inc
out
cmp
call
loopne
sti
sbbb
jnp
lods
mov
cwtl
arpl
and
iret
or
lcall
mov
jnp
icebp
add
mov
mov
lods
adc
leave
mov
and
loopne,pn
scas
lahf
fsubl
insb
inc
cmpsb
mov
pop
out
scas
gs
and
jmp
mov
jnp
mov
out
sarb
cltd
push
mov
jbe
mov
inc
stos
data16
push
inc
or
sbb
mov
sbb
pop
jbe
test
sub
add
xchg
sbb
int3
or
mov
lcall
test
cmp
in
cltd
lock
mov
cmpb
xor
inc
addr16
insb
pusha
inc
add
mov
push
push
adcl
aaa
jge
and
adc
sub
cmp
xor
ja
mov
cmp
arpl
in
mov
test
lahf
ds
call
jl
mov
push
cwtl
aam
cwtl
sbb
jb
lods
and
fildl
scas
and
movzbl
xor
xchg
adc
push
js
push
repz
int
push
shll
int3
je
decl
cmp
cld
mov
or
movsb
aam
int
add
xor
cmp
push
jno
cmpsl
dec
or
inc
in
xor
insl
add
hlt
dec
xchg
sti
jge
arpl
sbb
rcr
rorl
mov
mov
fwait
in
pop
loop
fwait
aaa
out
cmpsl
cwtl
scas
cmp
lods
arpl
jle
xchg
mov
push
push
push
xor
out
cmp
mov
xchg
cltd
out
jns
in
cmpsl
cltd
pusha
mov
pop
int
add
dec
in
adc
cwtl
adc
and
or
or
out
shlb
popa
and
jp
pop
pop
and
adc
pusha
out
lcall
int
or
push
inc
xchg
push
repnz
fs
shlb
mov
jmp
or
add
fdivrs
jp
push
push
mov
push
jge
outsb
xchg
rolb
mov
clc
jmp
push
and
push
and
fimuls
push
dec
inc
jecxz
cmpb
add
xlat
and
popf
sub
dec
push
inc
add
sbb
pop
mov
shrb
mov
add
mov
dec
jbe
pop
pop
es
xor
jmp
in
cmpsl
sub
xor
int
and
mov
sbb
mov
das
mov
jbe
inc
inc
mov
nop
pop
popf
jl
mov
movsb
xlat
ss
cmc
push
push
loopne
out
mov
loop
push
pop
xor
shlb
adc
mov
je
and
imul
fwait
movsl
pop
or
mov
or
jb
rcrl
mov
lcall
add
aaa
adc
test
int
push
mov
cmc
or
pop
ja
mov
pop
xor
pusha
mov
jne
xor
lea
jne
pop
scas
mov
add
in
push
std
cltd
fnstsw
xlat
mov
jno
outsb
js
jmp
xchg
fiaddl
jge
in
xchg
pop
pop
shlb
mov
add
loopne
shrb
xorl
jnp
add
mov
or
xchg
or
pop
push
sub
loope
or
add
mov
mov
notb
dec
mov
call
rolb
int3
inc
clc
jmp
add
push
scas
aam
push
xor
test
test
xchg
je
sbb
into
movb
xchg
movsb
mov
mov
jge
mov
out
inc
stos
test
outsb
in
test
jp
pop
fucomi
jmp
test
xor
or
gs
sbb
cwtl
lret
pusha
repnz
mov
jmp
and
jo
adc
test
mov
out
cli
pusha
fisttps
add
loopne
ret
in
out
add
stos
es
fsubrp
in
inc
es
hlt
leave
xor
lds
push
pop
add
or
outsl
dec
push
sub
or
inc
outsl
sarl
inc
daa
imul
cmp
inc
sub
lcall
push
movsb
stc
mov
cmp
cmpsb
into
shr
sbb
mov
out
or
sti
sbb
jbe
ds
fiaddl
cmp
mov
jecxz
dec
mov
nop
sub
mov
add
add
mov
cmp
fdiv
or
inc
lods
mov
loop
adc
dec
xor
or
aad
pop
cmpsb
out
cmp
dec
stos
test
mov
mov
js
call
out
push
into
push
clc
adc
and
push
pop
jnp
xor
cwtl
push
out
inc
in
pop
sbb
pop
out
inc
xor
dec
mov
enter
mov
ret
push
stc
les
sub
cmc
or
pop
in
aas
movsb
adcb
into
lahf
int3
xor
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
ret
call
rcl
movsb
stos
lds
les
sub
sbb
pushf
lods
sbb
mov
mov
mov
lret
push
popa
cs
add
lahf
les
gs
imul
mov
pusha
push
fucomp
out
aas
lret
cltd
lods
xor
cmp
loop
stos
ds
lds
hlt
rep
incb
or
hlt
cmpsb
pop
sub
and
loope
in
mov
pop
add
and
arpl
icebp
xchg
or
lock
sub
stos
sub
adc
movsb
mov
xchg
cmp
or
insb
orb
out
lahf
in
and
bound
jbe
push
in
xor
popf
inc
sub
push
dec
stos
out
mov
fmuls
pop
fs
jae
sbb
fists
jecxz
aas
pop
cmpsb
int3
mov
je
sub
sub
repnz
sub
and
sub
or
outsb
adc
push
fidivrs
mov
pop
xor
pop
adc
imul
out
mov
or
mov
jnp
dec
mov
mov
pop
dec
add
test
pusha
or
xor
out
xchg
push
add
inc
sbb
ficoms
andb
xor
imul
je
mov
push
in
and
xorb
ds
and
pushf
xchg
das
mov
mov
push
fbld
pop
negl
cs
int
call
ss
rcrl
inc
pop
adc
sahf
add
pop
das
xor
adc
insb
add
xchg
fsts
fiadds
or
pop
adc
out
inc
cmc
push
icebp
call
mov
das
or
cltd
enter
divps
or
and
loop
mov
jle
aas
cmp
inc
xchg
mov
push
inc
shrl
cmp
jno
jbe
nop
dec
push
xchg
sbb
pop
jb
test
call
inc
daa
pop
xchg
jnp
cmpsb
pop
inc
jp
insl
or
xchg
xor
scas
and
lods
adc
add
btc
adc
or
push
adc
push
adc
mov
out
sub
lds
cmp
in
loopne
fldenv
and
push
mov
push
cmpsb
scas
push
shrl
jb,pn
mov
pop
adc
lods
mov
call
and
adc
enter
fbstp
mov
dec
pop
sti
rcrl
addr16
pop
mov
shll
xor
mov
rolb
mov
sub
in
aad
jge
pop
ljmp
and
mov
cmp
fmuls
push
mov
push
jl
and
pop
mov
leave
out
mov
test
ljmp
loop
fst
jno
jb
pop
xor
data16
and
mov
fisubl
jns
dec
jecxz
fs
mov
xchg
shrl
fdivs
xchg
push
push
push
add
push
sub
add
jnp
pop
sarb
pop
add
xchg
iret
addr16
and
push
rcl
xchg
sbb
mov
dec
mov
jo
test
add
mov
xchg
pop
popf
imul
aad
cmp
add
popa
push
cmp
movsb
sahf
fs
pop
xchg
faddp
sub
fsubr
or
push
jmp
xor
fwait
jb
cs
lcall
stc
pop
push
jno
fistps
jl
dec
dec
mov
push
dec
divl
clc
jno
xchg
cmpsb
push
adc
xlat
push
je
pop
xor
outsb
jmp
loope
sti
push
enter
fcmovnbe
jecxz
call
push
sbb
scas
out
stos
xor
mov
cli
mov
sbb
push
mov
call
mov
mov
pop
out
scas
out
je
loop
sub
aad
xchg
lcall
stos
sub
popa
cmp
cmp
add
dec
rclb
xchg
fs
sub
xchg
mov
sub
stos
jns
adc
jne
jp
shrb
test
ljmp
jl
out
mov
aam
lret
xor
mov
ljmp
pushf
inc
mov
aas
xor
sub
jno
mov
add
mov
call
xor
dec
dec
pop
mov
psubusw
stc
cmc
fstl
mov
mov
sbb
cmc
mov
jne
dec
inc
cmp
pop
in
jo
leave
xchg
inc
jo
push
mov
push
ret
cmc
shrl
and
dec
sbb
mov
test
or
jnp
sbbl
sti
data16
leave
mov
jecxz
or
add
sbb
and
mov
popa
sub
push
sbb
add
sub
xor
sub
pop
mov
fdivs
fisubrs
jl
add
xchg
out
adc
xor
push
push
cmc
in
or
mov
pop
push
ljmp
adc
fcoms
in
jbe
aad
outsl
adc
jge
arpl
fistpl
int3
lea
mov
push
pop
mov
mov
adc
mov
adcb
sbb
xchg
push
cltd
jp
pop
add
push
push
sub
in
movsb
dec
iret
mov
pop
mov
addl
mov
adc
sub
mov
xchg
adc
movb
scas
mov
fstp
xchg
adc
pop
mov
xchg
insb
movsb
fmul
sub
add
repz
pop
dec
inc
ja
les
cmc
xchg
sti
std
pop
stc
imul
loope
add
lret
or
push
push
dec
pop
outsb
dec
mov
jnp
stos
xor
std
stos
fimuls
je
mov
pop
add
dec
mov
fdivr
cld
out
add
cmp
or
lcall
sub
fcmovnu
add
popf
lds
mov
sub
lcall
in
pushf
cli
cmp
scas
push
pop
imul
mov
push
data16
aad
push
xchg
mov
cmp
arpl
inc
sbb
add
mov
sub
mov
and
arpl
or
jmp
push
mov
add
cmp
enter
int3
test
scas
in
sbb
xchg
outsb
aas
icebp
add
ss
xchg
lret
das
jmp
out
cld
daa
mull
sub
mov
popf
mov
cmc
lret
insb
rol
xchg
pop
icebp
pusha
inc
sbb
mov
sbbl
cmp
into
sti
adc
jp,pt
shll
ja
bound
cmpsb
aaa
test
in
div
or
xchg
aad
inc
in
or
inc
ja
mov
mov
ficomps
movsb
xchg
jmp
jne
insb
loopne
in
dec
push
add
mov
mov
add
aad
out
sub
dec
jle
loope
mov
xchg
ds
inc
popf
in
icebp
lcall
sub
fmul
cmpsl
mov
int3
adc
jle
lret
xchg
rcrb
xor
pop
xchg
or
gs
sub
mov
negb
jbe
bnd
fdivs
add
mov
or
xor
nop
scas
pop
sub
dec
jle
fldl
ds
shr
bound
roll
decl
xchg
mov
pop
inc
icebp
xor
mov
and
rorb
lret
or
int3
sbb
cmp
das
popa
push
dec
mov
rorb
popa
mov
push
bound
cmpsb
mov
cmp
out
mov
addr16
aaa
std
in
pop
mov
pushf
mov
mov
fldl
push
sub
xchg
xchg
sbb
and
fistpl
ud0
pusha
sti
cmp
and
jmp
pusha
mov
adc
pusha
sub
popa
push
jb
jg
adc
push
jae
cmp
push
fs
sub
clc
sar
sbb
mov
jns
jb
inc
xchg
mov
stos
add
lret
mov
insb
sar
dec
add
add
push
rorl
stc
loop
stos
jo
cld
add
dec
xchg
and
pusha
mov
xor
push
jle
push
sub
sbb
add
cmc
jno
sahf
adc
cld
jmp
mov
fcoml
sub
enter
sbb
xor
lea
or
les
popa
jae
sbb
lods
dec
xor
mov
pop
fdivl
xlat
xor
xchg
push
dec
and
pop
mov
scas
sub
and
pshufw
movsb
orl
or
mov
dec
movsl
addl
add
add
shlb
sub
mov
jecxz
xchg
loopne
push
fs
sbb
mov
imul
mov
mov
sti
imull
lahf
aad
in
sbb
adc
xchg
mov
push
adc
scas
fdivrs
cmp
rcrl
push
dec
inc
das
mov
fidivrl
ret
xchg
clc
test
aaa
and
mov
push
pushf
pop
push
out
push
pop
and
pop
sbb
ret
ja
xor
andb
or
hlt
js
fwait
xchg
je
adc
mov
pusha
in
and
call
or
or
mov
jge
sbb
xchg
hlt
jno
out
fs
test
add
sub
outsl
adc
jg
add
iret
maxps
hlt
sub
cvtpi2ps
cs
push
call
inc
int
pop
adc
mov
das
sbb
and
jbe
stos
mov
mov
pop
inc
pop
ljmp
movsl
fistpl
dec
js
js
dec
xchg
fcom
scas
aas
xchg
insl
xlat
icebp
lds
in
push
test
shll
fsubp
xchg
lods
sub
cld
fcmovbe
and
push
ljmp
nop
mov
lret
xchg
shrb
xor
pop
in
pop
adc
add
pop
push
imul
sbb
ds
fdivrl
push
adc
xchg
push
pop
add
inc
add
subb
dec
cmp
hlt
jne
jg
out
pop
daa
dec
and
movsb
scas
push
mov
sub
lret
iret
jb
push
jb
cmp
push
cli
std
ljmp
push
push
das
xor
inc
setne
cli
xchg
cmp
fnstcw
push
adc
test
dec
scas
sbb
insl
in
rcll
gs
sbb
and
stos
push
sbb
push
std
mov
cmpsb
adc
xchg
mov
sarb
cltd
mov
sub
movsl
push
add
in
xchg
daa
sti
cwtl
cmpsl
scas
sbb
sbb
mov
and
add
xchg
insb
jl
popa
mov
push
bound
cmpsb
lret
jmp
fsubrs
pusha
nop
gs
mov
clc
mov
cwtl
imul
xlat
std
or
out
push
imul
repz
mov
jle
repz
push
outsl
sbbl
mov
push
adc
xchg
pop
dec
xchg
and
mov
rcll
dec
lahf
sub
adc
cmp
sbb
sbb
pusha
lcall
loopne
push
jnp
xlat
fisubl
push
push
inc
xchg
xor
shrl
cmc
aaa
scas
pop
xor
xchg
ja
sbb
lods
ror
lret
pusha
dec
or
das
bnd
add
js
push
rcrl
cmp
das
imul
daa
jnp
gs
adc
ds
fidivrl
mov
pushf
jbe
lods
leave
xchg
cs
leave
imul
or
not
out
fsubl
xor
js
subb
dec
add
fimuls
test
fdivs
lock
jmp
adc
fisubl
bound
add
imul
es
jl
dec
stos
ljmp
jae
ret
mov
addr16
xor
out
out
jnp
loope
push
adc
sbb
andb
leave
scas
push
aam
ds
adc
mov
testb
shll
inc
sbb
inc
mov
loopne
pushf
incl
add
mov
gs
cmp
inc
hlt
xchg
cmp
xchg
mov
mov
adc
dec
jno
in
push
mov
lods
sbb
lock
mov
orl
jle
mov
push
cmp
stos
mov
aaa
lret
dec
xor
sbb
aam
out
mov
lret
push
add
test
lods
jo
push
cmp
cs
sub
add
call
in
sbb
pushl
fisubrs
or
xchg
inc
aad
mov
adc
xlat
adc
stos
xlat
xchg
xchg
sahf
sbb
ret
add
mov
and
imul
jmp
mov
push
adcl
mov
test
out
pop
nop
lcall
or
fcmove
arpl
and
mov
enter
jecxz
sub
adc
pusha
arpl
mov
mov
ja
sbb
in
daa
mov
fs
out
jne
xchg
loope
or
mov
addr16
pop
adcl
aaa
loopne
inc
mov
scas
sub
jmp
mov
cli
xor
cwtl
bnd
mov
push
sahf
mov
insl
sub
cli
mov
loop
mov
je
jge
mov
jmp
ss
cli
inc
push
in
cmp
push
jb
leave
dec
sub
sub
into
or
mov
xor
cs
ss
js
pop
xor
nop
pushl
pop
mov
mov
add
hlt
pop
mov
aaa
cmp
pushf
mov
jae
and
and
jae
scas
mov
aad
cli
push
sahf
adc
out
rcl
lret
dec
repz
dec
add
and
loop
jb
jmp
xlat
js
negb
test
and
lahf
das
add
lahf
adc
loopne
xchg
mov
insl
mov
jp
popa
push
xchg
jns
rcrb
pusha
lods
cmp
cmpb
mov
push
adc
add
jg
mov
or
lods
adc
cmp
mov
jl
loopne
push
adc
dec
test
or
jne
in
out
ljmp
imul
repnz
cmp
and
test
int3
lods
push
dec
pop
data16
movsl
ret
and
dec
lahf
faddl
adc
jnp
shrl
dec
cld
xchg
es
loop
sbb
iret
jne
pop
push
test
loop
shrl
xchg
lock
in
pushf
inc
sbb
sub
xchg
or
popf
loopne
sti
add
xor
xor
xor
cmc
sub
pop
xor
push
out
pop
xor
aam
es
pop
xchg
and
int
sub
shlb
mov
test
mov
push
pop
xchg
pop
cmp
pop
add
push
dec
in
adc
test
pop
test
inc
test
lods
ja
push
push
xor
stc
mulb
push
mov
mov
sti
lret
pop
dec
inc
sub
xchg
dec
popf
cli
xchg
les
addr16
sarl
es
and
jle
ret
repnz
orl
pcmpeqd
jecxz
lret
nop
mov
mov
xor
push
dec
xchg
cmpsb
test
loop
imul
out
pop
adc
adc
fnstcw
cli
xor
add
addr16
into
insl
lahf
popa
call
sub
enter
pusha
or
push
mov
jbe
cmc
out
mov
jb
inc
movsb
jle
and
dec
xchg
adc
stos
ret
das
pop
push
in
add
data16
in
jne
xchg
and
dec
movsb
enter
mov
jno
test
jmp
adc
lret
or
cwtl
pop
gs
mov
jge
cltd
push
mov
lret
test
xor
xor
or
mov
stos
sarl
lret
cwtl
push
mov
fdiv
rcr
fidivrl
outsb
and
pop
stc
hlt
das
imul
push
pushf
mov
sbb
mov
jnp
outsb
xchg
jl
test
mov
xor
shrb
mov
and
jge,pn
dec
or
sbb
add
inc
sub
call
jl
push
dec
lods
cmp
jmp
lcall
and
jns
sti
dec
jl
or
fistps
sub
adc
or
adc
insl
mov
adc
test
in
jae
addl
es
xchg
add
mov
lahf
sub
dec
gs
mov
sub
cmp
adc
clc
faddl
push
test
jmp
ficomps
mov
imul
mov
sub
push
repnz
mov
jbe
jg
popf
pop
int
adc
add
push
lock
dec
fwait
mov
xor
repz
scas
test
lds
pop
pop
leave
cmp
dec
push
in
scas
lahf
lods
cmpsl
aam
pop
mov
xor
fidivl
adc
jmp
bound
jmp
mov
lret
pop
inc
addb
or
mov
dec
lods
into
mov
mov
cmpsb
lock
or
insb
push
cmp
push
cltd
test
sub
int
imul
mov
in
jae
mov
xchg
sub
stos
adc
sbb
xor
aas
popf
inc
nop
popa
xchg
je
push
xor
pop
in
sub
pop
lret
fwait
xchg
ja
shrb
pop
adc
pop
repnz
push
sub
shll
test
pop
xor
enter
mov
insl
mov
shll
pop
xchg
aam
add
adc
xchg
cli
cmc
fcoml
xchg
sbbl
push
add
lea
adc
sub
popf
xchg
sub
test
scas
push
addr16
cmpsl
int3
ficompl
int
std
and
ret
mov
sub
outsb
jbe
pop
scas
push
in
rorb
les
outsl
cmc
sub
fwait
mov
rcl
pop
jg
add
jno
test
cmp
jg
xchg
mov
jnp
ljmp
cmp
insb
mov
popf
xchg
out
std
lret
test
fimull
arpl
dec
loope
outsl
pop
sbb
add
jne,pt
and
mov
jno
scas
jecxz
lods
xchg
sbb
cmp
lret
xor
jge
movsb
and
mul
mov
fimuls
adc
sbb
aas
lret
add
sub
mov
test
mov
mov
and
iret
cwtl
dec
xor
icebp
mov
push
pop
pop
jbe
in
cmpsb
inc
inc
mov
mov
cltd
and
pop
inc
movsl
add
push
sbb
mov
sahf
cmp
sub
adc
sahf
push
dec
jl
shrb
jecxz
lahf
xlat
pop
jne
cmpsb
lods
idivb
lods
pushf
sub
out
ret
rolb
mov
mov
out
test
and
xchg
aam
mov
inc
gs
aad
shrb
cwtl
push
aaa
mov
mov
add
inc
inc
or
push
stos
xchg
ja
xchg
test
rolb
inc
sti
in
jno
leave
insl
jmp
mov
and
mov
jmp
add
repnz
push
sub
in
pop
rcrl
hlt
test
cmp
xor
lret
repnz
lahf
push
push
jns
mov
rcll
bswap
push
pop
fsubl
pushf
je
mov
xor
jge
mov
faddl
aam
lods
mov
mov
xor
dec
or
lds
into
mov
sbb
test
icebp
je
or
cmp
pusha
mov
sub
xchg
fstl
mull
inc
lock
mov
inc
incb
jge
es
cmpsb
in
enter
mov
push
cmp
sarl
adc
jg
sbb
lret
or
test
rcll
dec
pop
sti
add
xor
mov
dec
stc
pop
mov
movsb
cmpsb
fidivs
push
adc
and
out
pop
fcmovb
fisubrs
add
xor
xor
mov
test
pushf
mov
push
xchg
rcrl
jae
in
scas
and
xchg
out
xchg
insb
out
dec
xorb
cmpsb
push
imul
int
repnz
je
es
add
xor
add
sbb
mov
cld
inc
lahf
dec
loop
push
es
sub
jle
mov
sti
fdivs
repz
jb
sbb
idivb
mov
adc
test
loop
divl
inc
sti
jo
test
pushf
cld
push
cmpsb
out
dec
inc
xchg
dec
or
ja
bound
cmpsb
insb
rcrl
or
cs
lds
test
push
cmp
pop
jo
int
add
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
push
push
jmp
out
cmpl
addr16
inc
dec
mov
enter
inc
dec
mov
enter
addl
xor
cmp
mov
jecxz
dec
mov
nop
sub
mov
add
add
mov
cmp
fdiv
or
inc
lods
mov
loop
adc
dec
xor
or
aad
pop
cmpsb
out
cmp
dec
stos
test
mov
mov
js
call
out
push
into
push
clc
adc
and
push
pop
jnp
xor
cwtl
push
out
inc
in
pop
sbb
pop
out
inc
daa
mov
push
in
hlt
jne
dec
daa
jo
sahf
stos
pop
mov
jecxz
dec
sub
les
fdivrl
lock
outsl
mov
sub
repnz
jp
inc
scas
lret
loopne
in
adc
jae
imul
stos
aas
inc
xchg
dec
cld
and
ja
mov
mov
inc
int
push
stc
fldl
lret
mov
nop
inc
and
inc
xchg
movb
mov
insb
pusha
out
dec
fistpll
out
cwtl
pop
dec
sti
mov
lcall
int3
rol
dec
mov
bound
pop
shlb
leave
adc
jp
pop
dec
mov
call
enter
mov
inc
mov
cltd
gs
mov
aas
test
lock
push
sbb
ret
push
in
loop
dec
mov
mov
aad
test
xor
pop
and
jbe
aas
dec
mov
loop
adc
pop
outsb
or
jae
sub
daa
repnz
cld
lcall
insb
or
popa
call
sub
sarl
das
mov
lds
fucomi
cmpsl
push
push
add
inc
pop
adc
test
jno
imul
ds
adc
je
jg
movl
xchg
out
dec
inc
insb
mov
push
dec
mov
cltd
fcmovnb
pushf
adc
mov
adc
push
lcall
jp
arpl
loop
imulb
add
add
push
addr16
idivl
mov
mov
pop
pop
adcb
fwait
jl
repz
incl
pop
aad
xor
cmpsl
cmp
pop
in
xor
cmp
xchg
jno
xchg
jne
insb
jo
notl
xchg
add
in
popa
jle
add
dec
bound
pop
movntq
out
mov
xor
xor
cli
andb
sar
sbb
in
mov
fsts
pop
fisttpll
lret
gs
mov
pusha
cmp
out
and
shrl
xchg
daa
ret
xchg
mov
push
loop
inc
sbb
add
jb
jns
loope
sub
sbb
insl
or
sub
xchg
fwait
xchg
mov
mov
adc
insb
stc
test
cmp
iret
aam
int
push
idivl
arpl
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
jge
sub
mov
pop
dec
cmpl
cmp
inc
leave
pop
repnz
and
sar
es
fwait
pop
push
jno
fldl
lcall
lret
into
dec
les
cmpsl
or
push
pop
ljmp
icebp
daa
ret
addr16
movsl
cmc
xchg
cmp
cmc
int3
andb
lcall
popf
rcrb
mov
push
push
clc
jmp
stos
aas
jle
and
clc
std
cmp
cmpsb
sub
out
insl
or
jbe
push
jge
and
insb
rorb
dec
sub
or
in
adc
sbb
xor
mov
addr16
addr16
sbb
arpl
pop
loope
add
or
jmp
je
jge
pop
pop
movsb
aad
pop
pop
cmc
cltd
or
hlt
imul
mov
fnsave
xor
lret
cmpsl
fidivrs
mov
repnz
sub
jl
xchg
mov
leave
andl
mov
mov
adc
stc
mov
mov
pop
dec
add
popa
xlat
mov
insb
add
int
in
jne
out
rep
jg
cmpb
sub
pop
and
cs
int3
push
cmp
push
xlat
aam
mov
xchg
lea
pop
cmp
in
cwtl
lods
sub
jle
xchg
movsb
jae
lock
cmp
ljmp
shrl
and
enter
inc
or
ds
push
std
pusha
xchg
add
mov
add
orb
mov
lods
and
jbe
ror
and
clc
mov
sub
cltd
negl
fstpl
add
into
jg
repz
xor
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
inc
dec
mov
enter
mov
sahf
repnz
je
movsl
dec
jb
test
cli
cwtl
jnp
sti
arpl
fstps
add
jbe
lret
mov
movsl
leave
xchg
dec
out
leave
outsb
pushf
mov
outsl
ja
mov
inc
ret
xchg
sbbb
das
pushf
repz
xchg
add
inc
aas
stc
lret
fidivrl
sbb
sub
cmp
cmc
mov
pop
ljmp
testb
aad
clc
inc
movsb
jp
dec
pusha
mov
xchg
pmulhuw
out
stos
jb
fmull
faddl
mov
pop
or
das
shl
repnz
mov
lcall
fs
add
dec
and
pop
xor
xchg
fwait
push
sahf
xor
pop
in
inc
mov
scas
push
leave
sbb
aaa
cmp
divl
mov
and
repz
stos
jnp
mov
mov
ljmp
div
adc
in
mov
int3
popf
into
sub
adc
inc
pop
xchg
aaa
sarl
fistps
xchg
pop
fdivs
int
loop
cmp
gs
test
adc
test
sub
mov
scas
out
cmp
pop
and
adc
mov
sbb
movsl
xchg
andl
jle
jne
fs
or
imul
push
shl
test
fisttps
scas
fwait
or
pop
in
push
mov
imul
in
pop
inc
xor
add
out
mov
sahf
xlat
aam
movsb
out
dec
call
add
mov
xor
rorl
xchg
sub
stos
lret
rcrl
mov
push
cmp
jl
dec
and
movsl
cmc
je
pop
stos
nop
mov
xchg
in
data16
roll
iret
mov
test
outsl
lahf
aas
push
movsl
jo
mov
sub
std
cmc
dec
repnz
movsl
in
sub
push
and
push
push
int
inc
lcall
leave
imul
sbb
outsl
cmc
jae
adc
test
pop
aas
sub
mov
iret
mov
add
loope
adc
pop
jne
data16
fidivl
or
pop
add
inc
insb
cs
lahf
sub
cmp
xor
jmp
int3
stos
dec
rclb
adcb
pop
sub
cs
fwait
das
lret
bound
or
andb
ficompl
pop
mov
pop
fldl
xor
jb
jno
pop
repz
cmpsb
decb
repz
xor
js
cltd
mov
cltd
xchg
mov
je
lods
ss
jle
scas
jl
loopne
filds
inc
insb
inc
add
and
mov
lret
xor
mov
cmp
ficoml
mov
sub
test
and
bound
push
testl
fidivl
mov
jmp
int
or
add
dec
xchg
outsl
cmpsb
cmp
stos
push
jnp
and
adc
xor
nop
enter
xor
mov
sub
cmp
jno
jecxz
jnp
inc
addb
xchg
adc
shlb
and
test
jg
xchg
mov
pop
or
cltd
and
dec
cmp
cmpsb
prefetch
ljmp
roll
jo
mov
das
jmp
inc
or
fdivrs
mov
aas
jae
shlb
mov
shrl
addl
dec
pop
pushf
jnp
aas
les
repz
cmpl
cmp
add
jge
xor
adc
dec
mov
pop
mov
sbb
mov
and
mov
push
xchg
orl
mov
and
std
mov
test
mov
idivb
xor
jo
stc
gs
pop
cmp
mov
xor
hlt
mov
fbld
lock
in
dec
jl
jp
and
xchg
pop
inc
in
mov
rolb
addl
or
and
pop
adc
add
mov
push
jecxz
cmp
adc
jmp
dec
fdivrl
add
mov
lds
ror
scas
mov
xchg
xchg
mov
jae
ds
inc
push
out
mov
lock
xchg
lcall
popa
and
std
ret
clc
pop
data16
xor
cmp
pop
lds
mov
pop
sbb
fists
fcmovne
xchg
sub
fstpl
jb
stc
dec
movsb
lods
movsb
xlat
mov
mov
loope
xchg
xchg
divb
mov
xor
out
xchg
mov
cmp
cmp
cmp
sub
jae
dec
xlat
pop
xor
out
mov
xor
adc
xor
es
sbb
pop
mov
out
mov
jle
xor
rcrb
dec
xchg
insl
aas
cld
or
or
xchg
subb
xchg
mov
in
sub
adc
movsb
sbb
andl
stc
stos
div
cmp
mov
push
adc
push
test
icebp
mov
and
mov
jno
lret
enter
xor
xor
fwait
jb
shrb
pop
add
jle
push
outsb
adc
shll
and
pop
shl
aam
lcall
and
ljmp
cmp
inc
aaa
inc
out
sbb
test
mov
lret
push
pop
insl
mov
push
mov
xlat
or
addl
adc
or
sub
pop
stos
shll
icebp
test
ss
mov
ljmp
in
sub
mov
add
push
imul
and
push
bound
ja
fidivrs
xlat
push
ds
mov
das
ss
cs
sbb
xchg
bnd
fnsave
xlat
adc
insl
adc
lds
cmpsb
mov
xchg
pusha
adc
andl
shr
push
pop
xchg
test
and
mov
cmp
mov
xchg
dec
pop
push
rolb
in
push
pop
fcomp
jb
pop
pushf
push
cmp
movsl
les
sub
lahf
arpl
xchg
pop
cmp
pop
sub
mul
idiv
lock
enter
rolb
in
sbb
cmpsb
out
mov
push
sbb
mov
cmp
lds
mov
jle
mov
and
mov
enter
rolb
add
push
push
cmpsl
or
or
repz
sarb
jne
mov
fimull
dec
mov
jg
lods
test
adc
fnstsw
add
add
in
cmp
lods
ret
nop
sub
popf
popa
xchg
jle
mov
mov
dec
pop
and
and
shrb
int
mov
mov
and
xchg
scas
add
cmp
cli
and
push
shll
cltd
fimull
mov
dec
cmp
int
jne
outsl
mov
add
mov
jbe
mov
mull
mov
movsl
jmp
adc
push
cmp
je
pusha
sub
mov
mov
sub
sbb
mov
dec
xor
in
jl
das
adc
bswap
test
sbb
lahf
pop
mov
popa
sub
js
jns
push
dec
add
data16
add
movsl
jmp
mov
mov
ljmp
lea
lahf
ja
xchg
xor
and
mov
push
mov
xor
imul
clc
and
setbe
and
mov
pushf
pop
fwait
cmp
xchg
sbb
lods
icebp
mov
push
add
pop
stos
add
shlb
dec
cli
data16
outsb
mov
daa
jp
cwtl
ds
pop
push
test
nop
lret
push
pop
mov
push
loop
xor
loope
add
cli
push
dec
xor
xchg
pop
or
xchg
pop
pop
and
cmp
lods
mov
aad
push
mov
in
mov
fidivrs
call
int3
inc
dec
pop
jns
aas
mov
std
and
call
fcmovu
xchg
cmp
out
pop
repz
rolb
repnz
inc
mov
dec
and
mov
in
ror
pop
jmp
in
fwait
mov
or
popa
aas
clc
loop
jl
jo
push
cmp
in
gs
fists
mov
adc
lods
aam
loope
out
insl
xchg
cs
ljmp
cmpl
outsb
add
les
lds
mov
jge
call
dec
xchg
dec
xchg
pop
xor
push
lahf
scas
mov
sti
add
dec
sub
push
jge
add
psllq
jp
les
xchg
pop
and
shl
aam
jae
push
sbb
xchg
lret
xchg
xor
xor
jno
out
sbb
sub
imul
popa
xchg
xchg
push
sub
ficomps
test
or
jmp
into
out
lret
iret
js
je
jb
jg
loope
cmp
push
mov
push
mov
cmp
mov
jl
mov
push
shr
push
mov
push
mov
mov
mov
movl
movl
mov
mov
mov
shr
add
shl
add
xor
mov
add
xor
sub
mov
shr
add
mov
shl
add
xor
mov
addl
add
xor
sub
decl
jne
mov
mov
mov
add
decl
jne
pop
pop
pop
leave
ret
int3
insb
xor
or
cltd
outsb
mov
mov
shll
add
call
sub
repz
xchg
insl
cli
mov
dec
call
pushf
xor
loopne
push
mov
jg
or
shlb
mov
fwait
cmp
push
sbb
popa
mov
leave
ds
loope
mov
aaa
xor
jne
movsb
daa
push
dec
sbb
jno
cmpsb
stc
dec
negb
xchg
mov
add
lcall
pop
cmp
lea
stc
fcmovbe
jl
movsb
inc
sub
setae
cli
fistpll
pop
stc
mov
sub
scas
jnp
dec
lcall
inc
sub
and
imul
mov
cmp
mov
xlat
dec
je
fldt
fsub
and
mov
das
xor
and
or
xchg
dec
out
cli
in
dec
subb
inc
jae
pop
scas
imul
jmp
mov
sbb
lea
sbb
sbb
sahf
add
imul
jl
inc
mov
roll
mov
sbb
insl
rclb
xchg
mov
push
out
pop
cmp
clc
inc
scas
push
mov
push
iret
lahf
add
ret
mov
insl
jmp
jle,pn
sub
rorl
xor
sbb
inc
mov
imul
xchg
or
addl
stos
xchg
das
cmp
in
ds
mov
inc
nop
mov
lcall
out
inc
xchg
xchg
xchg
in
xchg
pop
or
roll
adc
mov
mov
dec
xchg
out
hlt
push
jp
ficoms
push
lahf
mov
jecxz
cltd
icebp
dec
fists
mov
dec
shl
sbb
jp
scas
cmpsl
ljmp
mov
testb
mov
push
jne
movsb
xor
jae
mov
xchg
push
rcll
lods
add
mov
inc
xchg
xchg
ja
ret
dec
mov
aaa
ja
pop
call
pop
js
outsb
lret
jg
mov
and
xchg
popf
cmp
bound
dec
lods
sahf
loope
in
inc
test
mov
xchg
pop
add
pop
mov
inc
mov
mov
fnstenv
add
enter
jle
mov
stos
cld
cwtl
push
ret
xchg
inc
mov
mov
das
mov
or
or
and
movsb
daa
xchg
cmpsl
jae
iret
xor
xchg
mov
pop
pop
cld
mov
arpl
cwtl
into
dec
pop
push
in
push
mov
add
add
or
push
pop
dec
scas
andb
fcoml
inc
out
insl
sub
mov
jle
xchg
pop
inc
imul
.byte
inc
xchg
