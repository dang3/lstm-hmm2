xor
rol
push
mov
call
mov
mov
xor
ret
sub
hlt
psubusw
data16
inc
addl
cld
rep
cltd
fistpll
sub
outsb
gs
clc
push
daa
xchg
out
inc
or
test
leave
je
cmpb
aam
dec
arpl
push
jne
jge
cmp
inc
shl
ret
mov
cmp
mov
or
cmp
and
popa
adc
lret
in
sbb
call
add
push
sub
push
add
ret
movsl
rorb
sbb
loopne
aas
add
inc
mov
fildll
popa
adc
lahf
js
pop
push
and
inc
int
lret
popa
les
adcl
rorl
pop
mov
hlt
cmpsl
rcrl
push
call
out
add
add
fstpl
in
jae
sbb
insl
hlt
adc
fdiv
iret
jne
jg
outsb
fmuls
jne
ss
call
push
clc
xor
rcrb
pop
mov
cmp
and
loop
push
inc
imul
xor
push
adcb
arpl
inc
fistpl
push
inc
or
fmull
push
push
inc
push
push
call
xchg
mov
xchg
sbb
loop
pop
mov
or
pop
and
jae
pop
jno
push
inc
or
std
shlb
or
sete
cmp
pop
push
add
popa
jge
je
ja
movsl
push
adc
mov
out
inc
and
mov
js
add
inc
push
leave
push
lcall
jmp
or
and
adc
jo
addl
add
and
mov
sbb
sbb
xchg
xor
jne
gs
lret
imull
jge
and
mov
inc
pop
test
sub
sysret
jne
mov
mov
hlt
rolb
ret
test
call
dec
es
cmp
test
pop
jle
mov
pop
int
inc
into
sub
cmp
or
xchg
bound
sbb
inc
loopne
pushf
ret
and
pusha
sar
mov
jne
mov
push
add
push
call
add
sub
pop
ffreep
les
jmp
stos
mov
add
pop
lea
push
mov
mov
push
xor
repz
push
dec
lahf
jo
pop
pop
jg
or
test
cld
dec
dec
adc
mov
push
incb
jns
int
dec
insb
gs
lea
data16
out
popa
call
cmp
je
sub
cmovne
es
sub
jp
out
add
and
push
push
test
pop
and
or
add
mov
sbb
fdivl
sbb
mov
cmpsb
inc
scas
in
shlb
fisttps
repnz
aas
inc
cmp
in
test
cli
sbb
gs
pop
sub
and
test
or
sbb
jmp
add
aam
dec
cmp
mov
dec
add
scas
adc
or
lds
lret
or
decl
hlt
adc
xchg
xchg
xchg
or
jne
mov
mov
jae
adc
xchg
adc
sub
divl
pop
adc
stc
cwtl
jge
jb
pop
and
dec
pop
add
pop
js
cmp
add
xor
enter
adc
mov
dec
ret
inc
jmp
mov
loopne
test
adc
aam
loope
sbb
dec
ficoms
mov
or
sub
xchg
pop
and
adc
cmpsl
outsl
icebp
int
pop
or
sbb
mov
adc
mov
cwtl
lea
lods
and
into
test
xchg
inc
or
or
nop
into
cmpsb
sbb
or
xchg
fisttpll
push
mov
sbb
psubsb
pop
add
pop
mov
xchg
cld
sahf
imul
jne
lods
jl
cmp
sub
enter
test
popfw
lods
fdivr
dec
dec
inc
xor
outsw
lods
shl
or
inc
fidivrs
test
add
mov
cld
pop
inc
testl
mov
push
mov
jae
sub
or
mov
add
pop
dec
cmpsl
aam
cld
mov
push
inc
add
adc
pop
in
add
popa
inc
push
sbb
test
push
and
and
adc
es
jno
push
je
popl
adc
mov
cmp
adc
xchg
or
push
adc
xor
sub
cmc
mov
enter
or
aam
jmp
pop
xor
xor
ret
xchg
cwtl
sub
adc
adc
popa
inc
in
arpl
aas
jne
push
cmp
nop
xchg
jo
mov
mov
or
xchg
mov
cmp
dec
cmp
mov
push
enter
jl
sbb
rcll
or
jns
or
push
sbbb
sarl
and
mov
add
pop
pop
xchg
leave
cmpl
jg
sub
test
mov
lcall
adc
inc
mov
mov
adc
imul
xor
in
lds
xchg
leave
clc
sarb
mov
movsb
cmp
xchg
sbb
dec
inc
pop
in
dec
aas
xor
les
xchg
pop
clc
xchg
xchg
or
fldt
lcall
push
mov
xchg
cld
cmp
mov
in
imul
add
pop
in
mov
adc
mov
sub
call
mov
xor
test
sbb
pop
pop
and
inc
hlt
test
jp
and
cmp
or
es
jp
mov
nop
dec
mov
jb
rclb
outsb
xchg
dec
mov
xor
bound
stos
and
mov
pop
add
bound
and
cmpl
pop
stos
xor
xor
adc
fistpl
xchg
cmp
and
sbb
loopne
les
fiaddl
jmp
xchg
jno
jmp
inc
sbb
jbe
and
cmp
test
lds
inc
les
mov
mov
adc
mull
iretw
loop
shlb
ds
mov
mov
ret
adc
xorb
sbb
popa
cwtl
add
adc
inc
fildl
or
loopne
out
push
rolb
add
ret
push
call
mov
fs
icebp
sahf
sbb
les
mov
mov
or
insb
adc
mov
push
mov
into
emms
test
ret
test
push
ja
cltd
add
mov
gs
adc
adc
test
push
repnz
test
lret
inc
and
imul
mov
cmp
gs
inc
test
add
and
push
das
stos
es
xor
push
adc
sahf
jns
aam
push
int3
and
sub
pop
and
mov
stos
push
push
push
or
cmp
fs
mov
cltd
jne
nop
call
dec
shr
fld
pop
and
pop
pop
lahf
test
loop
or
sti
je
repz
mov
pop
ss
orb
rcrl
push
inc
fistpll
cmp
ss
and
es
adc
sti
or
adc
stos
adc
or
in
adc
or
fwait
cltd
pop
out
stc
dec
nop
xchg
and
and
cs
pop
sub
loopne
sub
mov
in
js
mov
or
jmp
dec
xlat
or
sbb
cmp
sbbl
xchg
cld
or
sbb
mov
pop
pop
and
or
sqrtps
dec
or
xchg
and
in
adc
lea
and
mov
daa
or
dec
in
push
test
or
mov
sbb
push
xor
adc
mov
stos
add
fisttps
insl
test
mov
pop
pop
out
mov
sbb
jbe
inc
mov
push
jne
lret
dec
cmp
xchg
push
xor
mov
insb
push
daa
xchg
jb
jmp
adc
adc
iret
add
call
clc
pop
push
dec
lock
rcll
or
push
sbbl
dec
in
pop
movsb
bound
mov
or
inc
scas
clc
push
cwtl
hlt
insb
jge
lods
insb
pop
push
and
dec
or
pop
mov
imul
inc
xor
out
cmp
movsl
lcall
psubsb
or
mov
xor
js
add
push
pop
test
inc
hlt
or
mov
bound
fstl
dec
adc
int3
iret
ss
and
mov
or
fs
add
push
pop
daa
loop
xor
add
xor
add
jne
aad
cmovne
jns
or
pop
in
daa
add
add
es
mov
nop
lods
push
lahf
scas
loope
mov
adc
mov
xor
mov
lods
sub
popa
nop
and
and
cmp
adc
mov
insl
or
xor
add
add
out
inc
sub
dec
mov
mov
pop
jmp
pop
sub
push
clc
push
gs
pop
aas
mov
call
aaa
and
push
scas
jno
inc
jg
fstps
loopne
inc
addl
popa
xchg
mov
rorb
sbb
adc
jmp
xchg
dec
scas
inc
xor
mov
or
cwtl
push
cld
idivb
repnz
test
dec
dec
call
cmp
call
das
xor
inc
sub
in
daa
xchg
std
push
adc
sub
in
mov
push
push
popa
mov
xor
dec
mov
mov
xchg
fcoml
xor
fnstsw
push
push
das
fiaddl
inc
cmp
inc
in
jge
loop
mov
mov
mov
mov
jmp
call
pop
xor
adc
in
push
sti
mov
mov
push
pop
adc
testb
or
sbb
push
push
movsb
cli
adc
das
lret
insl
and
sbb
js
and
rorb
js
or
stc
ret
and
dec
mov
inc
aaa
push
jp
rorb
enter
pop
mov
add
pop
clc
jbe
cmp
movsb
sbb
inc
xchg
adcb
scas
mov
push
inc
add
adc
mov
sbb
pop
pop
push
dec
nop
loopne
xor
repnz
or
bnd
jmp
push
cmpl
or
dec
inc
leave
clc
mov
popl
xor
pop
mov
data16
dec
es
cwtl
imul
xor
outsb
mov
or
push
dec
pushf
sti
and
add
push
cmp
movaps
aad
ret
jmp
movsl
cmp
add
jbe
inc
mov
adc
xchg
sar
outsb
xor
sbb
inc
add
aaa
add
push
jmp
push
inc
dec
xor
sbb
pop
add
adc
lret
lds
shll
pop
adc
add
and
lahf
sahf
jnp
in
loopne
jns
fsubrs
cld
push
xchg
loope
ds
and
shr
testb
jmp
cmp
add
fsubr
clc
loop
addr16
mov
push
sbb
mov
push
pop
aam
fnstcw
dec
adc
push
push
xchg
push
sbb
pop
pop
pop
in
jp
dec
fimuls
dec
out
push
mov
push
add
xor
mov
xor
enter
xchg
add
mov
iret
push
push
inc
pop
dec
mov
push
xchg
dec
adc
mov
dec
mov
push
and
lds
inc
je
mov
lret
push
add
movsb
and
inc
sub
xor
sbb
and
push
xor
call
pop
nop
mov
jne
mov
pop
inc
cwtl
pop
xchg
mov
jno
les
ret
cld
pop
int3
dec
or
cmp
jecxz
cmp
test
les
adc
xor
mov
sti
les
sbb
sub
pusha
movsl
jmp
gs
dec
push
pushf
mov
test
insb
or
xchg
and
xchg
int3
add
or
push
je
add
clc
push
mov
xchg
clc
and
test
test
add
cmp
repnz
repnz
add
pop
not
mov
cmp
ret
push
jns
mov
clc
dec
pop
cld
mov
jmp
cmp
fs
sub
call
and
or
psrlw
add
dec
jno
cmp
push
push
add
sub
cmc
das
xor
add
sbb
adc
add
add
out
pop
mov
mov
adc
add
adc
xor
or
pop
cmpl
xchg
out
xor
xchg
push
pop
lcall
popf
test
add
push
cmp
lea
in
mov
repnz
or
add
orl
jo
mov
fsubrs
push
jg
push
xchg
call
lock
lock
mov
loop
add
and
xchg
pop
pop
je
inc
adc
pop
fwait
leave
adc
ja
push
arpl
int
and
or
mov
pop
sbb
sub
cmp
sub
dec
pop
mov
in
xchg
cmp
lahf
mov
in
in
xor
push
dec
pop
mov
add
push
adc
mov
repnz
orl
addl
and
and
and
ret
mov
movsb
push
add
push
out
in
xchg
hlt
test
mov
test
jle
push
mov
lea
hlt
movb
out
dec
aaa
pop
xor
xor
jmp
arpl
or
and
dec
ljmp
ret
fnstsw
mov
adc
or
inc
xor
dec
mov
push
add
mov
mov
push
ret
xor
mov
jne
pop
dec
push
or
ret
cmp
ljmp
jg
dec
call
sub
roll
push
and
dec
adc
adc
cld
pop
jo
jp
push
mov
mov
movl
cmp
notb
pop
inc
or
bnd
jae
push
pop
ret
loopne
popa
xor
push
sub
enter
add
xor
sbb
or
jmp
in
add
rolb
dec
and
clc
repnz
pop
mov
jg
jmp
sbb
xor
mov
and
cmp
xchg
into
jl
lea
sbb
xor
or
push
cmp
add
call
xor
ret
inc
pop
idiv
xor
add
and
inc
andl
mov
cmp
pop
popa
jle
push
mov
sbb
and
je
fadds
jne
or
jo
daa
dec
push
mov
push
std
xchg
and
xor
fmuls
sbb
and
add
jl
cwtl
xchg
sub
mov
xor
mov
xor
xor
adc
xor
sbb
or
pop
mov
adc
push
enter
add
mov
cli
add
int
and
add
and
push
call
adc
shlb
test
adcb
mov
adc
fisttpll
push
push
add
sbbb
sbbl
sbb
mov
icebp
jnp
rcll
add
outsb
movapd
sub
push
pop
or
inc
je
xor
sbb
test
dec
mov
test
inc
push
sbb
inc
jne
nop
sbb
sbb
inc
fldcw
push
out
je
xchg
push
mov
sahf
xchg
push
push
pop
add
call
mov
and
and
std
fnstenv
sbb
jne
mov
push
sbbl
mov
inc
cld
mov
test
je
push
orl
mov
jne
cmp
push
inc
mov
cwtl
lock
dec
enter
lea
pop
pop
and
sub
outsb
or
rol
sub
add
jb
jp
dec
ret
lock
popl
push
push
inc
mov
or
xchg
imul
fwait
pop
or
add
or
mov
lock
jecxz
cmp
test
sbb
test
adc
add
pop
nop
dec
and
les
add
or
dec
mov
sub
adc
test
adc
and
and
or
inc
and
push
push
xchg
add
or
in
mov
pop
imulb
stc
adc
jl
daa
and
dec
and
adc
loope
mov
xor
pop
aam
push
sbb
sub
add
jb
jns
pop
fucomi
inc
cld
cmc
sub
adc
shll
sub
pop
cmp
jge
mov
int3
fnstenv
rorb
jle
mov
aaa
lea
shll
lret
add
xchg
aad
sub
push
outsl
clc
decl
aaa
andl
mov
movsl
add
or
jl
inc
sub
or
lcall
push
sbb
lds
lea
push
and
xorb
jns
sbb
push
icebp
or
push
sub
xor
cld
cmpsl
and
lcall
mov
test
or
dec
jns
out
cmp
jle
add
movsl
aam
add
or
jge
push
sbb
nop
into
and
std
and
inc
lock
cli
sub
mov
lock
icebp
and
bound
fdivrl
push
and
push
or
call
js
in
je
mov
enter
mov
repz
xchg
enter
sub
inc
cmpsl
cltd
adc
jae
pop
inc
dec
cmp
jg
sbb
add
xchg
adc
int
sub
divb
dec
push
sub
inc
xor
inc
adc
add
pop
shr
stos
testb
inc
sbb
mov
bound
shlb
into
push
add
ret
add
mov
xor
lret
stos
pop
lcall
adc
add
sbb
pop
xchg
jecxz
outsb
je
sbb
mov
mov
jl
push
mov
or
adc
add
rorb
mov
inc
test
lret
push
or
sub
mulb
and
jne
and
addl
leave
xchg
adcb
push
xchg
scas
sub
xor
mov
adc
aaa
mov
jmp
dec
outsb
scas
lret
dec
mov
scas
or
frstpm(287
pop
cld
and
je
mov
pop
idivl
push
mov
stc
inc
jne
mov
bound
dec
ret
inc
jl
adc
push
test
outsl
adc
adc
stos
sbb
push
jmp
xchg
into
add
jne
jl
fs
and
psubsw
test
dec
sbb
add
bts
cmp
cltd
roll
cmp
sub
js
sahf
adc
je
adc
inc
and
and
dec
inc
push
inc
add
adc
add
push
sbb
mov
mov
into
xchg
pop
or
push
bound
nop
cs
push
call
test
add
je
in
lods
push
adc
inc
sti
adc
ja
movsb
adc
pop
testb
call
movsl
inc
imul
jno
mov
add
gs
push
sub
stc
scas
mov
xchg
clc
mov
repnz
sub
add
lods
call
mov
jl
dec
aaa
xchg
in
jbe
sbb
aaa
scas
pop
add
fwait
inc
sbb
sbb
push
or
or
mov
cmp
adc
je
out
adc
pop
mov
cld
daa
popa
loopne
dec
sub
ret
mov
or
xor
adc
mov
sbb
xorl
add
inc
dec
or
nop
lret
xchg
pop
add
xor
inc
cwtl
fisubrs
jo
mov
dec
sbb
in
and
push
push
mov
mov
shll
loop
rolb
inc
or
jo
adc
movsb
aad
cltd
int3
sbb
or
cltd
cmpl
mov
xor
push
dec
mov
mov
adc
add
sub
pop
dec
aam
xor
push
sub
pushf
sbb
xchg
call
adc
mov
adc
jae
adc
xlat
cmp
mov
push
xlat
int3
mov
daa
je
pusha
arpl
mov
pop
adc
and
das
into
call
jge
cmpb
lret
hlt
mov
in
inc
xchg
lock
loop
pop
dec
mov
call
sub
sarb
dec
aas
rorl
mov
push
xor
iret
cmpsb
add
rorl
sub
adc
out
xor
inc
or
add
loope
pusha
jbe
inc
inc
xchg
fdivs
or
adc
or
push
mov
dec
sarb
movsb
pop
cwtl
negl
cld
adc
rclb
mov
mov
ret
jne
cmp
inc
jp
mov
cwtl
fsubl
sbbb
cmpb
pop
mov
adc
mov
push
xchg
loope
or
jle
pop
and
inc
jne
fs
repnz
in
push
dec
xchg
and
mov
mov
lds
ss
ss
or
push
adc
jmp
xor
xchg
orb
jno
sbb
push
cmpsb
inc
xchg
adc
pop
daa
cs
adc
fs
jb
adc
jbe
jae
mov
cmp
cmp
jl
adc
add
sub
les
jg
ret
imul
js
test
lea
mov
pop
addl
cmp
jge
in
das
or
clc
or
mov
or
xchg
push
dec
push
pop
jno
mov
cmp
sbb
push
bound
sub
cs
pop
jne
push
push
xchg
adc
add
inc
inc
stos
cmp
cwtl
dec
and
out
push
ret
or
clc
jb
out
xchg
xchg
cli
jae
lock
sub
cmp
cltd
mov
adc
add
roll
dec
test
pop
decl
inc
add
loop
dec
out
imul
rolb
cmp
jb
adc
or
add
xchg
aas
sbb
pop
mov
and
cmp
add
inc
sbb
inc
cmp
pusha
inc
sub
sarb
push
jnp
mov
or
pop
cmp
add
add
xor
jo,pt
mov
mov
lods
push
and
or
in
fwait
sbb
add
pop
loopne
push
adc
cmp
and
or
gs
and
test
dec
or
push
cmp
scas
roll
cmp
jbe
ror
call
push
and
sbb
outsl
cmpl
ret
jp
jle
imul
aam
mov
das
rorl
inc
or
sub
jbe
sub
aad
cmp
dec
xor
mov
adc
daa
push
jg
inc
cld
push
add
cmp
sub
xchg
aas
add
mov
test
sub
sub
lret
sbb
jp
jle
mov
pop
inc
xchg
pop
popf
les
lcall
lods
and
daa
mov
mov
jecxz
and
aad
xchg
insl
insb
pop
mov
movsl
or
add
jb
cltd
cmpsb
jns
push
inc
sbb
push
clc
cmp
rorl
adc
test
lds
repnz
hlt
sub
jecxz
bound
std
sbb
dec
int
adc
or
jmp
fiadds
mov
fs
inc
and
mov
js
call
ja
xchg
push
mov
pop
pop
and
ljmp
scas
mov
testl
pop
shlb
lock
push
aam
push
jg,pn
adc
mov
dec
add
xor
dec
adc
adc
push
sub
sbb
mov
out
dec
popf
add
ljmp
add
dec
imul
insl
int
sub
and
test
and
or
sub
data16
movsb
or
pop
adcl
inc
loope
jne
jae
enter
or
stc
das
adc
sub
xchg
adc
xor
sbb
cmp
xchg
movb
adc
and
and
jne
dec
sbb
pop
lea
jge
cmp
repz
push
das
push
mov
sbb
xchg
push
adc
xchg
adc
outsb
add
adc
sahf
adc
jle
cmp
ds
stos
stc
sbb
fdivrs
add
test
push
je
subl
aas
sub
pop
dec
aad
es
adc
dec
rclb
inc
push
xlat
jbe
sahf
push
lods
and
jecxz
cmp
xchg
sbb
and
jb
pop
jge
sbb
sub
mov
jmp
push
aas
push
cmp
rolb
mov
or
and
in
adc
and
add
mov
inc
inc
fimuls
lea
lea
adc
push
cld
cmc
or
call
push
test
test
xchg
mov
shrb
aaa
add
or
sub
xchg
rclb
pop
icebp
mov
fildll
adc
jne
movsl
inc
jmp
js
insl
aas
mov
sub
movsb
cmp
dec
call
or
adc
pop
mov
aaa
jge
push
out
push
cmp
enter
rol
push
addr16
movsb
fiaddl
cmpsl
sbb
dec
fldcw
pop
sub
clc
mov
test
and
push
cmpsl
sub
push
lcall
xchg
or
ret
pop
push
or
cmpb
imul
pop
and
dec
fimull
dec
mov
or
xchg
and
adc
adc
push
adc
es
outsl
ss
push
mov
mov
xor
stc
shlb
add
jmp
mov
add
movw
lods
or
imul
add
pushf
stos
mov
sub
sbb
inc
daa
popa
sbbb
nop
cmp
ret
dec
adc
push
hlt
mov
mov
test
icebp
cmp
push
cmp
jne
outsb
xlat
fs
push
mov
or
pop
jge
cld
sub
pop
cmc
adc
add
mov
or
and
mov
cmp
xchg
or
or
incb
xchg
add
mov
cmp
loope
adc
push
das
push
dec
movl
xor
jbe
xor
stc
jne
push
call
push
or
or
jle
sbb
outsl
lock
push
push
cltd
or
sub
cmp
mov
pop
xchg
mov
jmp
outsl
inc
mov
xchg
fsts
mov
adc
test
ljmp
push
mov
dec
xchg
sbb
and
insb
push
in
and
jmp
lods
test
push
rorb
popf
mov
fmull
add
add
call
push
push
sbb
std
dec
mov
push
xchg
push
sti
or
push
cmove
call
xor
xchg
jbe
dec
xor
and
xor
or
subb
dec
rorl
rcll
mov
and
js
into
fisttps
lret
jp
inc
add
xor
adcl
ja
sub
mov
cmp
add
jmp
cmp
adc
sbb
hlt
mov
mov
push
push
aaa
push
push
jmp
push
cli
sbb
jae
ret
lea
inc
fwait
dec
enter
pop
and
nop
fiadds
sub
push
stos
or
lahf
movsb
inc
cmp
push
inc
pop
push
add
jb
cs
mov
mov
cmc
mov
pcmpgtw
lea
movsb
push
rep
push
push
xor
add
sub
daa
sub
pop
dec
adc
and
cmp
mov
leave
push
bound
ret
pop
cmp
mov
mov
and
fsubrs
cmp
leave
cmc
lret
pop
cmp
dec
or
mov
pushl
push
push
push
cmp
pop
leave
and
sarb
mov
sbb
test
sub
pop
js
mov
mov
and
and
or
adc
adc
inc
pop
or
addr16
arpl
shl
jbe
inc
adc
push
dec
push
rorl
popa
xor
add
push
in
pop
or
sub
sbb
push
push
push
out
adc
and
inc
and
mov
or
dec
lea
pop
rcll
sbb
orb
test
inc
shlb
rcll
inc
push
test
adc
ret
adc
jecxz
inc
mov
mov
dec
adc
data16
mov
fs
xchg
push
push
setae
adc
xor
arpl
movsb
cmp
gs
out
and
inc
sub
pop
cmp
pop
ss
rorl
mov
ror
pop
aam
bound
je
push
scas
addb
xchg
mov
out
and
jno
mov
cltd
in
cmc
adc
cld
in
inc
out
and
nop
add
and
inc
mov
outsl
jne
add
inc
sahf
lcall
adc
pop
xchg
mov
das
xchg
mov
jecxz
test
adcb
loop
sub
or
imul
mov
inc
adc
xchg
inc
test
dec
cmp
fidivl
cmpl
inc
sbb
sbb
sub
jle
daa
inc
mov
sqrtps
adc
lds
push
mov
push
lahf
add
jl
push
adc
jge
push
arpl
lret
test
hlt
inc
jne
iret
adc
dec
test
push
adc
sub
js
ret
jl
add
invd
adc
mov
adcb
push
adc
loopne
lock
cmp
sbb
in
lret
push
sbb
push
jnp
pop
push
mov
enter
outsb
call
push
and
push
xchg
pop
popa
pop
pop
pop
sub
rorb
mov
xor
push
mov
aad
notb
in
sub
inc
fcoml
cmp
add
setge
dec
test
push
or
es
sub
jns
rcrb
lret
add
and
xchg
rorb
dec
and
je
fistl
dec
push
lahf
adc
ljmp
shl
push
mov
pusha
and
lock
paddq
dec
xlat
add
mov
xchg
out
inc
outsl
sarb
repz
xor
adc
rcl
cmp
lret
jne
test
fists
vpcomud
daa
push
inc
out
sahf
sub
fdivl
jmp
repnz
jo
cmp
xchg
jns
or
ret
insb
mov
imul
call
sub
add
inc
js
cmp
lea
les
das
push
js
testl
and
nop
and
ret
daa
push
std
in
and
aad
mov
pop
scas
adc
cmp
incb
enter
adc
mov
xor
sub
xlat
inc
dec
push
pop
sub
adc
mov
xor
sub
xlat
jecxz
pop
in
xchg
mov
add
es
outsb
xor
bound
pop
test
inc
mov
imul
sbb
mov
les
aad
xchg
mov
popa
mov
mov
sub
push
jne
and
adc
and
xchg
push
push
aad
loop
ss
sbb
dec
imul
inc
cmpsb
push
xor
ja
xor
clc
cld
out
and
xchg
inc
adc
nop
mov
dec
repz
fcoml
sbb
shll
or
imul
cld
cmp
sub
in
sahf
or
push
ret
rcrl
mov
adc
pop
ds
pop
aaa
xchg
pop
cmp
sub
das
inc
jo
add
jmp
jo
pop
dec
ret
into
inc
sbb
loope
xorl
notl
inc
push
cld
sub
push
imul
ficoms
and
mov
push
mov
push
push
insb
add
jae
adcl
push
add
leave
cmp
sete
dec
mov
call
inc
inc
add
push
jp
dec
push
lock
cmp
in
iret
rcl
jge
ret
ret
xchg
outsl
push
mov
sub
or
pushf
cmpsb
mov
daa
mov
cmpsl
push
mov
push
mov
pop
sub
movl
add
sub
mov
mov
nop
mov
sub
sub
dec
inc
mov
nop
mov
push
add
fs
mov
mov
repz
push
pop
and
ljmp
or
xorb
out
dec
sub
jbe
jp
add
dec
rorb
xchg
and
pop
xchg
adc
adc
mov
xchg
lcall
mov
jo
out
mov
out
testb
aas
dec
sub
xchg
mov
push
rcll
daa
push
pop
pop
dec
test
adc
sub
dec
xchg
push
test
xor
jb
inc
js
jb
nop
test
or
test
clts
jl
or
jle
pop
add
or
or
pop
or
cli
sub
sbb
xor
cmp
adc
cmp
ja
add
cmp
and
add
or
or
rol
pusha
sti
ret
ja
fsubs
in
pop
jmp
cmc
fstps
pop
in
cmp
push
adc
and
out
lea
jle
mov
test
sbb
xor
fsubs
xor
sbb
jae
cmp
lret
pop
or
and
adc
sub
jmp
or
inc
mov
sub
pop
add
mov
add
pop
mov
add
push
sbb
and
mov
jae
mov
push
nop
out
ss
push
xor
sbb
push
mov
or
cmpsl
rcrb
xor
push
sahf
xchg
mov
sub
adc
jmp
inc
adc
and
xlat
out
movsb
pop
adc
dec
or
pop
add
pop
inc
jl
xor
push
fstpl
jno
or
inc
mov
or
bound
int3
subb
les
push
data16
inc
jne
fstpl
js
ret
push
scas
pop
inc
jg
or
sbb
sbb
push
test
sbb
jne
mov
sahf
xchg
popa
sbb
jecxz
hlt
outsb
inc
dec
sub
mov
or
pop
and
fs
or
inc
adc
or
dec
pop
nop
icebp
sbb
xchg
or
push
mov
jecxz
and
mov
fisttps
push
mov
or
in
dec
lcall
mov
adc
cmc
lds
fdivl
push
xchg
mov
and
and
je
mov
mov
call
mov
call
inc
ret
mov
cwtl
mov
mov
pop
sbb
scas
lcall
mov
lea
jl
mov
adc
ljmp
xchg
dec
call
loopne
mov
mov
push
and
sahf
sbb
pop
inc
mov
enter
es
inc
adc
daa
add
or
cltd
lea
xchg
push
mov
es
sbb
cltd
roll
and
rcrl
sub
and
cmp
push
in
xchg
movsb
sbb
test
ficoml
sahf
out
jb
mov
inc
scas
cs
mov
pop
fists
enter
sub
inc
insl
cmp
add
rcll
xchg
jno
je
or
pop
fadds
call
int3
dec
dec
jo
inc
push
pop
add
adcb
xlat
je
loop
xchg
or
add
push
mov
test
lret
push
inc
lea
inc
mov
add
in
pop
sub
mov
or
xchg
xchg
push
repnz
xchg
pop
add
adc
dec
fildl
js
call
sbb
std
xor
pop
mov
dec
ret
jmp
lods
pop
add
movsl
mov
sbbl
jns
jb
aaa
inc
jo
dec
mov
or
adc
lock
mov
loop
mov
push
pop
shlb
leave
push
sbb
or
arpl
es
shlb
push
ficompl
bound
mov
inc
sbb
xor
call
pop
cmpl
ret
mov
bound
adc
pop
lcall
adc
jns
and
les
mov
lock
subl
test
ret
call
adc
mov
xor
dec
mov
jmp
sub
insl
adc
cmpl
push
test
jo
add
or
push
cli
cli
sub
dec
push
jg
xor
gs
push
xor
rolb
mov
sbb
jns
adc
and
xor
sbb
mov
sub
mov
je
shll
out
insb
call
pop
pop
lods
cmp
cmp
push
lea
call
sar
mov
and
or
inc
adc
jge
xor
adc
lods
xlat
adc
fisubs
or
and
push
jo,pn
inc
push
xor
push
pop
sub
pop
xor
pusha
and
insb
add
sub
cmp
je
and
mov
pop
push
and
mov
push
push
push
and
imul
sub
adc
jbe
cmp
adc
xchg
es
out
shlb
cmpl
insb
mov
jmp
adc
push
in
lock
jp
std
in
pop
jae
jae
test
add
adc
in
dec
adc
sbb
or
xor
or
sar
in
push
push
cmp
add
fnstcw
push
add
and
stos
es
mov
and
jno
push
and
mov
jp
pop
shll
add
rorb
inc
aas
xor
and
push
adc
addr16
pop
sbb
sbb
sbb
adc
cwtl
adc
adc
jno
icebp
pop
jmp
push
cmp
loop
sub
dec
je
mov
add
sub
popa
imul
sub
mov
cmp
mov
popf
lock
push
in
mov
mov
jmp
xor
push
mov
push
es
sub
mov
cmp
push
add
sbb
and
pop
jbe
cmp
xor
mov
push
inc
lock
add
push
test
push
test
aas
inc
in
rcr
hlt
inc
mov
lcall
pop
push
into
aaa
adc
sub
push
lret
or
and
shlb
push
cltd
subl
lahf
adc
inc
xor
pop
movsb
adc
scas
les
data16
or
int3
and
sub
push
jp
dec
js
mov
and
jge
push
pop
aas
out
mov
imul
inc
call
mov
ret
xor
push
dec
repnz
out
mov
mov
dec
or
mov
in
frstor
cmc
xchg
lea
test
push
cmp
adc
ffree
outsl
adc
adc
lock
jb
lahf
dec
daa
je
inc
aad
push
cmpb
jecxz
inc
cmp
sbb
test
clc
lods
pop
adc
movsb
mov
mov
sub
mov
ljmp
adc
aaa
push
sbb
sarb
mov
ss
push
pop
and
push
adc
pop
or
and
mov
mov
jmp
mov
adc
mov
pop
mov
rcrb
fstpt
sti
jne
imull
cmp
call
xchg
push
mov
adc
xchg
add
mov
aas
lea
jo
push
rorb
dec
push
sub
push
andb
rclb
dec
mov
scas
sub
and
xor
inc
push
inc
sub
push
sbb
and
dec
push
jg
cwtl
xchg
and
push
push
ret
call
xchg
jnp
pop
cmpsl
shrb
sub
loop
movsl
shll
add
jge
movsl
cmp
dec
movsl
int
xor
xor
inc
cs
inc
cmp
pop
lret
aaa
add
push
and
lea
pusha
add
inc
push
xchg
dec
test
push
je
mov
mov
repz
rorb
xor
push
or
adc
or
cltd
sbb
cmp
push
pop
in
mov
inc
pop
arpl
cmc
add
lahf
mov
test
inc
and
xchg
add
and
cmpsl
mov
dec
icebp
nop
or
or
movsl
dec
pop
aad
jg
daa
xchg
jbe
aad
xchg
cmc
fwait
and
in
and
mov
sbb
test
adc
xchg
or
inc
pop
push
push
sahf
int
call
cli
mov
mov
jb
xor
push
jo
lea
mov
adc
imul
and
dec
lock
insb
adc
jg
lahf
out
mov
insl
sbbl
jmp
aas
jmp
cs
lahf
fsubl
cld
outsl
pop
sub
mov
cmpsb
outsl
cwtl
and
shrb
out
adc
jb
jno
test
mov
shlb
xor
arpl
jmp
icebp
dec
insb
jg
jae
xchg
xor
sub
aas
inc
cmp
sub
les
jecxz
adc
adc
inc
and
sbb
flds
fucomip
push
push
cwtl
cmp
pushf
pop
and
test
lods
bswap
mov
inc
pop
add
jmp
outsb
and
xor
or
push
and
xchg
fmull
mov
push
inc
imul
mov
dec
push
test
jmp
dec
lea
adc
mov
jbe
jns
or
js
jp
inc
sub
adc
or
sahf
sub
inc
adc
es
adc
mov
test
xchg
clc
aas
loopne
or
push
mov
sti
and
dec
mov
lock
pushf
mov
lahf
sub
pop
jne
mov
dec
and
mov
imul
mov
mov
mov
test
call
or
inc
add
cwtl
xchg
and
dec
mov
adc
shl
lret
add
call
push
bnd
mov
pop
popf
dec
mov
push
mov
sub
xchg
call
jo
daa
jae
sar
xor
or
xor
and
dec
and
jo
inc
shrb
insb
in
mov
cs
dec
or
jp
ret
adc
inc
imul
xchg
push
jo
outsb
pop
xchg
or
xchg
rorl
loope
aas
mov
aaa
xor
shlb
inc
push
mov
call
movl
sbbl
call
js
xor
scas
push
adc
xchg
jg
or
adc
adc
sub
sbb
pop
aaa
je
cmp
mov
fwait
push
test
jp
add
nop
adc
scas
cmp
xor
sahf
pusha
fists
push
and
cld
jl
xchg
test
repz
add
sarb
xchg
daa
cli
loop
iret
repz
xchg
push
adc
movb
gs
aam
lahf
push
add
scas
int
sbb
add
fwait
int
mov
mov
mov
push
xor
imul
divb
mov
ret
stos
imul
loope
push
pusha
les
mov
sbb
lock
pop
mov
sub
daa
push
jne
add
pop
jbe
sti
pop
adc
add
add
sbb
and
push
and
mov
daa
sub
sbbb
adc
lea
mov
or
dec
into
jb
icebp
cmpsl
pop
cmp
cmp
push
popa
clc
or
add
mov
push
or
push
add
jg
xchg
add
mov
outsb
ret
ja
incl
rclb
pop
push
xchg
jo
dec
inc
shlb
imul
push
or
ror
ret
dec
jno
inc
push
jmp
imul
push
add
push
adc
lods
mov
or
sbb
int3
xchg
adc
mov
dec
inc
xchg
les
mov
mov
mov
mov
mov
sub
pop
xchg
outsl
mov
loope
dec
push
mov
mov
lods
add
rol
out
pop
jno
and
push
enter
or
xchg
dec
and
add
pop
sbb
push
push
pop
insb
aam
ret
add
es
test
pusha
out
and
dec
push
inc
movsl
push
cld
andb
cmp
or
sub
push
into
sub
mov
mov
nop
and
pop
dec
push
dec
inc
add
js
push
js
int3
xchg
js
or
fldl
inc
ds
adc
mov
js
xchg
jg
ret
shrl
rdtsc
das
lock
mov
push
cmp
jl
or
fdiv
or
sbb
je
cmc
mov
aaa
dec
lods
mov
push
sbb
sbb
pop
call
sbb
iret
push
mov
data16
sti
mov
jg
jmp
ret
sbb
or
inc
push
outsl
dec
xlat
pop
jbe
or
test
xor
hlt
repnz
adc
adc
jl
out
dec
and
loop
xor
mov
cmp
adc
sub
addr16
sub
xchg
and
jbe
adc
stc
test
fadds
adc
jmp
cmp
paddb
sar
mov
sbb
cli
leave
and
add
lcall
dec
xchg
cmpb
push
inc
mov
sbb
xchg
and
push
stos
pop
outsl
sub
mov
xor
and
mov
add
pop
push
add
test
test
inc
xchg
stc
xor
lret
pop
je
repnz
cmp
js
test
push
gs
inc
sub
pop
movsb
cmpsl
test
je
mov
dec
mov
mov
cmp
xchg
or
ljmp
mov
jmp
dec
cld
xchg
stos
stos
lea
shll
pop
les
mov
les
push
mov
outsb
inc
push
mov
movsl
cld
pop
push
inc
pusha
call
divb
push
in
lock
call
sbb
std
jge
cmp
dec
mov
testb
dec
in
in
sbb
xor
lods
or
sbb
mov
push
adc
add
push
pop
sbb
xchg
push
fsubrs
mov
call
addr16
xor
fstpl
pop
in
jmp
mov
js
push
and
out
inc
aam
mov
call
jne
rorb
neg
add
test
test
cld
jmp
jae
push
add
pop
mov
mov
call
jb
or
pop
clc
inc
pop
pop
pop
insb
mov
es
dec
lea
cltd
fwait
push
xchg
pop
fs
sbb
xor
out
inc
icebp
xor
sbb
mov
dec
push
xchg
fcoml
out
cmp
or
scas
dec
inc
jne
mov
jle
mov
add
movsb
mov
push
and
les
push
mov
xor
in
dec
xchg
push
test
push
sbb
loope
and
nop
mov
xchg
lcall
mov
sub
and
xchg
out
push
mov
es
roll
pop
int3
bound
rclb
iret
movsl
rclb
mov
adc
into
ret
push
add
sub
adc
push
xorb
dec
mov
orl
rcll
icebp
iret
sub
and
test
cmp
loop
push
fnsave
icebp
or
ret
push
pusha
add
xor
imul
adc
mov
lcall
jmp
pop
sbb
push
jno
jo
call
fwait
adc
rorl
adc
mov
rorb
aas
rcrl
push
xchg
inc
pusha
and
and
sub
adc
rorb
mov
or
pop
push
mov
adc
fmuls
adc
test
iret
pop
pop
jno
jmp
jp
rolb
in
mov
adc
sbb
sub
pop
sub
mov
or
mov
inc
inc
test
cmp
pop
imul
and
mov
leave
xchg
test
sbbb
dec
outsb
insb
cmp
xor
jmp
dec
inc
inc
xor
ds
and
arpl
mov
sbb
bound
xor
jae
adc
add
push
dec
in
pop
fdivrs
pop
and
adc
cli
cs
lds
dec
loop
mov
xchg
inc
data16
mov
mov
and
mov
out
das
cmp
add
or
les
adc
pop
sub
leave
in
and
nop
cmc
inc
push
sub
push
stc
xor
inc
inc
xchg
mov
push
push
nop
mov
fstpl
loope
pop
ret
mov
xchg
bound
sub
mov
ja
push
and
sub
and
push
and
mov
jns
pusha
js
insl
notl
je
lcall
aaa
and
mov
test
stc
std
xchg
sbb
mov
add
add
call
inc
dec
dec
sub
lret
xchg
popa
xor
push
and
fstpt
popf
or
inc
call
ficoml
adc
pushf
or
pop
mov
aad
lea
popa
shlb
loopne
cmpsb
sbb
sub
js
mov
xchg
mov
push
jno
xchg
mov
and
adc
test
inc
insb
jnp
dec
clc
call
pop
out
lock
add
sub
dec
dec
push
push
pop
call
and
sub
mov
mov
add
and
push
and
adc
mov
mov
adc
mov
inc
std
jl
inc
push
lret
repz
pop
aad
inc
pop
sub
push
add
cmp
jne
jo
mov
sub
neg
push
cmp
or
neg
inc
add
movl
lret
inc
dec
sub
inc
and
shlb
mov
xchg
ficoml
jg
or
mov
psllw
fimuls
xchg
push
loopnew,pn
inc
and
rcr
push
enter
nop
mov
movsb
mov
xchg
and
pop
push
add
push
mov
lret
inc
imul
pop
mov
filds
or
in
cmp
jne
and
pop
mov
sub
push
ds
jns
pop
inc
lret
add
movsb
mov
sbb
jbe
push
push
or
or
lods
cmp
lods
into
mov
mov
rolb
and
adc
xor
dec
add
push
dec
sbb
mov
cmp
lea
iret
add
shll
xor
sbb
xchg
fcom
or
mov
inc
inc
outsl
add
push
or
inc
lea
rolb
or
inc
sbb
loopne
or
scas
inc
pusha
sub
mov
int
add
xor
push
push
xchg
and
hlt
or
cltd
fmul
jg
xchg
sbb
add
xchg
call
shrl
push
mov
in
jb
mov
and
xlat
mov
cmc
fistps
test
jne
push
cmp
loopne
test
jo
pop
xor
lcall
mov
add
lea
add
ss
xor
jno
sbb
or
out
and
xchg
inc
xchg
lock
push
jo
xchg
rorb
out
fnstsw
inc
mov
mov
jnp
enter
dec
dec
cs
and
outsl
cmp
out
sub
stc
xor
loop
pop
ret
cmpsb
les
inc
cmp
mov
mov
in
mov
sbb
fisubs
xchg
insl
adc
pop
cmpsb
pop
add
mov
mov
lea
bound
or
aad
xor
xchg
xor
jecxz
mov
jp
call
mov
or
les
ficomps
pop
mov
test
mov
xor
dec
add
call
inc
xor
and
xor
sahf
adc
push
sbbb
jae
cmp
sub
cmp
and
push
mulb
mov
adc
or
inc
sbb
sub
sbb
sbb
out
xchg
add
test
and
mov
test
push
and
mov
es
push
in
add
or
sbb
add
in
andl
mov
inc
cld
add
dec
loop
push
xchg
lea
into
and
pop
inc
xchg
inc
mov
mov
jae
loop
mov
nop
fimuls
or
sbb
sbb
mov
or
inc
test
test
pop
mov
imul
pop
jecxz
in
rolb
mov
loopne
fsts
cld
pop
mov
dec
inc
loop
inc
hlt
add
cmp
mov
fcompl
jle
xorl
inc
sbb
jle
xchg
mov
mov
pop
cmpsb
aad
mov
movb
xchg
or
add
mov
xchg
dec
stos
cmp
cmp
ret
jmp
test
sub
mov
loopne
test
pop
pushf
fsubr
xor
mov
lea
lahf
sub
or
call
cli
add
xor
fcmovnbe
jnp
mov
mov
push
and
cmp
inc
das
lock
pop
xchg
and
sub
add
mov
mov
loopne
mov
and
jo
lea
sub
adc
and
and
loopne
xor
loop
cmpsb
pop
subb
inc
push
xchg
rcrb
mov
lahf
je
cltd
or
xor
test
pusha
lods
jle
dec
sarl
outsl
and
dec
xchg
cmp
inc
add
loopne
xchg
cmp
jnp
adc
mov
mov
inc
adc
mov
fdivl
xchg
rcrb
xor
inc
fisttps
mov
inc
xor
xor
icebp
repz
or
sub
xchg
test
test
xchg
inc
movhps
test
nop
test
mov
xor
xchg
dec
ret
xor
or
call
lcall
adc
add
je
mov
xor
xchg
fwait
rorl
sub
std
pop
gs
movb
adc
cwtl
jo
inc
aam
cmpsl
aas
iret
pop
lea
push
mov
cmc
nop
inc
and
inc
outsb
into
push
shl
icebp
or
inc
sbb
inc
adc
mov
mov
scas
outsb
push
inc
xchg
add
jmp
lcall
aam
sbb
arpl
inc
push
mov
push
ret
in
es
inc
adc
cwtl
adc
and
mov
cmpsl
mov
mov
and
fucom
jmp
loope
gs
call
push
push
cmp
sbb
or
pop
mov
sbb
push
popf
sub
xlat
sbb
pop
sbb
mov
xchg
inc
loop
push
adc
enter
push
sarb
or
lret
adc
jnp
xor
jne
and
std
rorb
push
lock
jl
pop
clc
and
xor
push
je
or
push
outsl
repz
mov
fs
icebp
adc
loopne
cmp
inc
dec
fdiv
das
pop
mov
mov
test
add
add
add
or
in
lret
icebp
cmp
mov
clc
jnp
push
jmp
dec
mov
jp
mov
dec
sub
sbb
dec
xchg
xchg
rorb
add
pop
inc
dec
jmp
push
dec
push
inc
add
neg
sbb
and
push
pop
push
lret
sbb
test
std
add
dec
xchg
or
sbb
cmp
xlat
and
sub
sub
sbb
rcrb
mov
sub
xor
add
aam
sbbl
incl
push
or
push
inc
xchg
inc
and
cmp
sahf
cmpsl
in
mov
push
sub
mov
iret
push
xlat
and
cmp
ret
push
icebp
out
push
push
fistl
je
adc
in
sub
and
jg
add
xorl
jge
dec
sub
icebp
and
adc
inc
push
jmp
xlat
xor
sbb
mov
add
add
leave
js
dec
bound
rorb
int
sbb
add
call
mov
lods
aam
cli
dec
dec
insl
repnz
dec
mov
imul
jne
jg
sahf
shll
inc
int3
xchg
pop
daa
mov
jle
xor
adc
jmp
or
adc
pop
cvtps2pi
jl
and
dec
and
pop
pop
inc
sub
mov
addr16
adc
hlt
xor
das
faddl
xor
add
out
roll
cli
mov
shr
add
stos
adc
lret
scas
adc
jle
mov
xchg
fstpl
add
les
push
inc
adc
jmp
imul
mov
repnz
add
adc
sbb
sbb
inc
fs
adc
xor
cmp
push
jg
lahf
test
and
loop
cltd
ss
push
xor
xor
and
lahf
mov
mov
dec
add
jae
aaa
dec
lods
mov
test
mov
out
frstor
and
xchg
enter
xchg
jge
je
xchg
movsl
xor
dec
sub
movsb
inc
adc
aas
inc
cmp
call
dec
enter
jl
shl
cmp
push
add
mov
adc
mov
je
mov
mov
jl
insl
nop
inc
push
cwtl
jns
pop
pusha
pop
divb
loope
mov
adc
stos
sub
cmp
sub
popa
or
movsb
nop
sub
dec
xchg
add
loopne
xor
and
pop
hlt
sub
out
sub
iret
out
mov
scas
lret
movsb
nop
inc
jae
das
dec
jl
mov
inc
std
cmpsl
ds
nop
nop
imul
lea
and
mov
sub
sbb
sti
xor
sbb
xor
or
mov
pop
rcrb
push
sti
inc
daa
lods
stc
test
and
cmp
jg
sti
or
rcll
nopl
pop
ja
pop
xchg
mov
add
push
pop
mov
ret
ja
loopne
popf
fs
cltd
ds
inc
lock
ret
repnz
jo
add
or
adc
decb
addl
or
outsl
push
je
mov
sub
pushf
cmp
dec
enter
xlat
es
add
pushw
and
jle
rcl
adc
ja
add
testb
pop
or
push
movsl
fisubrl
sbb
or
inc
and
xchg
dec
xor
test
cwtl
or
loop
out
in
adc
and
dec
rcll
push
les
pop
cmp
lcall
sub
inc
aaa
cmp
inc
adc
and
test
test
or
loopne
test
sbb
scas
je
test
sbb
xor
jge
push
enter
dec
fisubs
mov
fdivr
es
push
sub
adc
sbb
pop
into
or
adc
and
pop
xchg
lret
pop
in
gs
add
and
jo
je
faddl
movsl
sub
or
stc
adc
pop
jns
punpckhbw
pop
add
mov
and
loope
cld
pop
loope
les
sub
test
mov
les
mov
js
mov
pushf
mov
rorl
nop
mov
add
xor
movsb
int
jb
mov
lock
dec
fdivrp
nop
push
mov
inc
stc
adc
cwtl
xchg
icebp
clc
mov
xchg
mov
vfnmadd132ss
and
or
mov
pop
ror
pusha
and
mov
pop
add
xchg
cmp
sbb
or
cld
add
jecxz
int3
faddl
mov
sbb
fbld
jo
orb
pop
xchg
inc
int
icebp
call
and
add
fs
mov
jecxz
jne
mov
mov
or
pop
push
cld
sub
sti
or
mov
les
and
aad
sti
sub
dec
std
push
fadds
cltd
pop
xorb
lcall
mov
jge
test
pop
das
stc
sbbl
fs
jp
sub
and
mov
lahf
aam
push
lock
dec
or
shll
pop
out
inc
mov
and
gs
imul
aam
adc
outsl
adc
xchg
ficoml
jmp
mov
push
inc
test
fistl
pusha
add
sub
rcl
add
push
or
pop
sub
jecxz
sbb
push
push
mov
mov
jl
or
push
jae
push
dec
addr16
pop
or
cmp
or
ljmp
enter
outsb
stos
ficomps
stc
popl
sarb
add
pop
xor
dec
stos
cmc
mov
adc
lods
andl
or
inc
push
add
es
dec
xchg
inc
jne
cli
add
adc
loopne
add
push
or
dec
mov
mov
adc
sbb
xchg
ret
call
test
je
pop
and
or
aaa
popa
pop
and
xor
cltd
push
push
adc
fs
xchg
and
sahf
test
xchg
jmp
push
mov
pushf
and
mov
push
adc
xchg
mov
stc
in
pop
mov
lods
push
fs
sub
sub
push
test
rclb
adc
push
ljmp
jl
jbe
adc
aam
dec
xor
jns
int3
sub
test
mov
cltd
js
cmp
mov
adc
push
add
add
inc
add
lock
mov
and
sahf
test
loopne,pn
cmp
mov
loop
adc
or
jno
ds
ds
add
stos
adc
add
xchg
push
outsb
add
fs
jb
xchg
lock
inc
fisubs
jmp
xchg
das
pop
add
dec
das
data16
popa
push
add
adc
int
insb
sub
adc
xor
ja
mov
call
adc
int3
sbb
push
sbb
push
ret
pop
sbb
xlat
lcall
icebp
dec
and
push
pop
dec
mov
ret
nop
movsb
inc
cltd
cmp
dec
dec
lret
xchg
je
dec
cmc
data16
jmp
pop
cmp
push
sub
sub
in
or
adc
sub
leave
mov
jle
rorl
mov
shll
push
call
xor
jo
push
add
sub
je
pop
inc
xchg
sub
mov
xchg
popf
sbb
push
push
and
ds
popf
add
push
dec
inc
dec
xchg
sub
xor
inc
xor
insl
insl
sbb
inc
add
inc
push
push
scas
and
push
inc
xor
out
xchg
movsl
scas
pop
enter
xor
jne
or
sarl
hlt
adc
ljmp
or
jmp
add
cld
sub
mov
lea
push
inc
dec
imul
andl
jne
pop
inc
sbb
mov
mov
inc
push
jne
add
push
add
xchg
or
mov
and
orb
cld
mov
and
push
push
dec
push
mov
popa
push
or
inc
pop
call
cmpb
lods
xchg
or
shrb
push
cmp
xchg
jo
pusha
jl
push
jno
or
dec
push
jns
setae
xchg
leave
cmpb
adc
movsb
movsb
out
and
jecxz
movsl
fwait
mov
fdivrs
das
mov
adc
lods
iret
jp
std
or
inc
cwtl
jmp
cld
add
popf
and
xor
dec
xor
jo
gs
loopne
dec
popf
rcll
or
lock
mov
es
in
jge
or
mov
or
xchg
fisttpll
xchg
fnstcw
mov
add
cmp
jl
ja
jbe
push
cmp
in
gs
adc
mov
loop
xchg
pop
and
ja
xchg
mov
lcall
and
inc
dec
dec
pop
call
inc
ss
fstl
add
push
pop
cmp
jns
add
xchg
add
clc
loop
cmc
add
and
adc
xor
jns
pop
push
inc
jle
xchg
lods
xchg
jns
pop
cmp
call
lcall
icebp
xchg
sbb
stc
test
xchg
adc
les
dec
push
std
jns
fstps
out
nop
orb
fs
lods
xchg
jg
and
dec
adc
ret
and
jl
sarb
lret
jbe
adc
cmp
mov
jae
mov
and
inc
dec
sahf
repz
push
sub
mov
inc
xchg
add
sub
push
push
push
jl
dec
jmp
mov
dec
or
or
adc
add
inc
cmp
add
inc
pop
subl
nop
xchg
sti
mov
test
adc
mov
inc
into
aam
cli
dec
dec
sbb
lea
push
bound
xlat
dec
adc
sbb
mov
and
jmp
jo
aam
sub
sub
or
inc
push
lods
popa
sbb
mov
push
out
sub
cmp
adc
xchg
scas
gs
test
xor
aas
ret
call
mov
add
jo
inc
repnz
push
mov
leave
sub
cmp
or
xchg
sahf
rol
push
pop
adc
or
ss
lock
jo
je
adc
jmp
adc
dec
lock
or
out
pushl
or
clc
add
inc
movb
cmp
push
sahf
xor
push
loop
cmpsb
push
push
movsl
in
or
shr
inc
lahf
ret
nop
aaa
xacquire
mov
cld
cmp
mov
iret
sbb
ficoml
push
rorb
pop
loop
int3
add
arpl
lret
int
pop
mov
mov
rol
dec
sub
sbb
popf
cld
sarb
push
adc
add
mov
sbb
stos
imul
add
and
fwait
mov
movsb
imul
lds
jae
cmp
push
je
outsl
lret
rolb
aas
sbb
das
je
adc
mov
add
dec
pop
push
and
fbstp
faddp
lahf
cmp
pop
pop
jmp
sbb
push
jecxz
jbe
pop
dec
stos
cmp
push
pop
jnp
pop
arpl
push
test
xchg
mov
pushf
dec
add
icebp
insb
cmp
dec
push
ret
fnsave
jnp
jns
dec
sbb
mov
sub
adc
mov
sbb
push
aad
movsl
inc
inc
shrb
and
xor
ja
sub
loopne
call
xchg
or
aam
or
add
adc
je
or
xor
xor
dec
mov
ret
pop
dec
out
and
das
dec
repz
das
fnstcw
das
adc
loop
popf
ret
add
push
loop
push
outsl
icebp
lds
dec
fs
sub
xlat
or
inc
add
mov
mov
shl
test
or
cmp
sahf
stc
cli
loope
jne
mov
mov
pop
add
mov
sub
imul
xlat
sbb
popa
adc
cmp
vpcmpgtd
cmp
sahf
inc
data16
xchg
icebp
repz
ret
loopne
mov
in
outsb
cli
pusha
pop
dec
leave
jmp
inc
inc
mov
push
call
iret
popf
xchg
adc
cli
sub
test
test
cltd
cs
pop
jmp
ja
popf
push
bnd
cmp
dec
sbb
aaa
sub
push
jge
mov
adc
dec
push
lock
shrl
sbb
dec
stos
xor
sbb
cmp
jge
mov
push
sub
push
cmp
sub
jne
adc
adc
leave
mov
or
inc
fisttps
or
inc
inc
cmpl
lock
add
call
cmp
jle
icebp
xor
adc
cmp
aas
stc
dec
add
lods
sub
or
adc
orb
lret
inc
push
hlt
push
inc
mov
push
and
push
xchg
dec
inc
push
sub
call
inc
lret
daa
mov
push
ficoms
push
add
sbb
imul
pusha
inc
dec
out
add
adc
add
or
xor
jnp
add
dec
aad
adc
inc
mov
push
movsb
dec
dec
inc
mov
push
jbe
cld
sbb
or
inc
orl
jl
and
mov
jbe
or
add
scas
movsl
popa
inc
dec
push
scas
jnp
inc
jmp
pop
dec
xchg
loopne
sbb
test
mov
push
movsl
dec
dec
pop
cmpsb
pop
shl
daa
mov
add
insb
push
leave
or
aas
ficoml
lret
call
into
sub
cld
std
jle
and
call
bound
pop
inc
mov
adc
cwtl
stos
and
jb
sbb
rcl
adcb
or
mov
jl
test
pop
push
dec
inc
inc
stc
xor
into
mov
enter
enter
jecxz
or
nop
push
cmp
dec
bound
mov
repnz
inc
ret
cmp
test
imul
add
dec
das
sub
test
jmp
jmp
mov
inc
loop
push
and
xchg
xchg
lea
rcl
lock
pushf
enter
pop
xchg
push
movl
movsb
push
xchg
es
into
xchg
add
inc
xor
add
sub
dec
or
pop
push
call
push
test
shll
inc
cmp
cmp
push
loop
xchg
ss
xchg
mov
shlb
in
fwait
mov
test
sub
cmp
mov
mov
lret
fs
xchg
inc
das
adc
xchg
mov
inc
pop
lret
mov
test
adc
add
dec
scas
adc
or
lock
dec
add
leave
add
sub
nop
aas
add
iret
adc
sub
sub
push
int3
andps
dec
popf
xchg
repz
inc
push
mov
adc
pop
in
addr16
arpl
add
sub
push
shlb
stc
lock
and
xorb
fs
sub
xchg
cld
dec
add
lock
hlt
inc
add
add
adc
xchg
adc
mov
aas
sub
lret
jb
popf
lock
out
leave
adc
adc
jo
xor
pop
subb
rcrb
test
imul
inc
xor
lea
cld
cmpsb
loope
dec
mov
enter
cmp
pushf
les
pushf
bound
mov
cmp
sbb
sbb
stos
stc
sub
les
pop
mov
add
and
adc
cwtl
add
fsts
scas
in
ljmp
out
and
push
sub
in
aam
in
leave
push
addb
push
inc
add
and
leave
je
pop
gs
int
sahf
nop
push
xchg
inc
push
scas
pusha
jne
cmpl
push
pop
stc
or
push
cmp
jl
cld
sar
sub
lea
pop
add
push
in
or
movsb
xchg
movsl
sub
inc
push
and
in
push
mov
xchg
jl
leave
pop
outsb
imul
insl
enter
cmp
and
addb
sbb
fidivl
int
aam
and
jl
push
mov
push
ss
rolb
cmpb
hlt
test
gs
cmp
inc
pushf
xor
movsb
adc
lods
mov
pop
inc
cmp
add
add
or
xchg
pop
in
rorb
cmp
jl
mov
jle
xor
fs
cmp
or
in
and
mov
adc
sub
ret
sbb
push
mov
xor
ficoml
jp
pop
mov
xchg
push
mov
mov
aad
les
xchg
shll
and
push
inc
cmp
jl
push
xor
pop
lahf
xor
negl
mov
pop
loope
xchg
aas
lock
xchg
push
mov
pop
mov
xor
cmp
jne
je
push
adc
loopne
filds
sbb
xor
and
adc
jle
arpl
shl
jne
inc
aam
jl
ljmp
out
inc
mov
orb
dec
or
sub
rclb
in
sub
push
gs
pop
inc
pop
pop
test
inc
js
push
popa
call
adc
xchg
pop
sti
hlt
aam
cmp
push
cmp
cwtl
js
inc
and
leave
nop
cld
stc
inc
js
out
bound
cld
mov
xor
cmp
mov
jp
mov
jns
or
jns
mov
les
les
sub
jp
xor
in
int
adc
adc
pusha
cld
test
inc
js
es
jbe
sbb
xchg
or
push
pop
pop
mov
push
mov
mov
mov
pop
adc
aas
mov
fimull
out
mov
add
xchg
push
mov
les
bound
mov
add
sbb
fdivl
loopne
add
data16
xor
inc
stos
lock
pop
pop
clc
or
and
pop
cmp
idivb
js
mov
inc
add
sbb
inc
and
sub
adc
or
pop
cmp
cmp
inc
inc
and
enter
dec
notl
pop
xor
fs
add
xorb
inc
mov
inc
je
daa
js
jmp
cmp
addb
and
pop
ret
xlat
xchg
add
hlt
add
loopne
stc
or
and
push
call
mov
test
dec
dec
pop
jmp
and
dec
aaa
add
lea
xor
inc
cmp
and
mov
add
mov
cltd
sub
cmp
and
inc
mov
cmp
cmpsl
push
js
pop
push
lods
repnz
pop
lds
mov
stos
daa
inc
and
fdivrl
gs
inc
xchg
enter
sbbl
mov
sub
test
sbb
ret
push
je
cmc
loopne
inc
aaa
dec
xchg
stos
jb
sbb
or
xor
mov
or
inc
pop
into
or
mov
cmp
add
insl
adc
sbb
and
outsb
xor
popa
pop
in
or
lods
cltd
dec
loop
adc
xchg
cmp
gs
ficoms
push
jbe
sub
dec
repnz
inc
int
pop
push
repnz
xchg
stc
fwait
or
cmp
ret
xchg
jo
stc
mov
pop
adc
cmp
mov
push
negb
inc
sub
mov
inc
sbb
xor
daa
jo
aad
hlt
and
test
out
mov
jno
testl
adc
xor
adc
xchg
and
push
adc
sbb
dec
dec
add
or
in
xor
mov
sti
sbb
and
pop
add
adc
pop
lods
inc
fsincos
rorb
push
sbb
cmpsl
cmp
mov
insb
inc
movsb
xchg
inc
sbb
adc
and
std
pushf
push
jecxz
aaa
cmp
lods
xor
cmp
test
mov
call
cmp
repz
mov
je
inc
mov
jl
xor
xlat
out
mov
and
loop
push
test
cli
pushf
fstpt
push
jmp
in
mov
sbb
push
mov
add
xor
mov
loope
push
je
xor
into
call
stc
loopne
dec
sub
dec
insb
push
shlb
or
sbb
cli
test
push
add
gs
mov
pop
mov
scas
fldcw
jle
aas
push
and
inc
push
mov
andl
push
aam
pop
ds
push
inc
mov
mov
fs
dec
push
aad
cwtl
outsb
push
jg
mov
sbb
lds
sbb
xchg
mov
sbb
push
mov
add
xchg
push
idivb
mov
or
cmp
add
xor
roll
and
mov
outsb
in
push
movsb
nop
and
cmp
fwait
fwait
or
je
movb
push
add
outsb
dec
pop
sbb
mov
pop
cmp
dec
mov
imul
arpl
add
adc
je
xor
in
and
cmc
test
pop
je
mov
rol
mov
sbb
and
imul
add
xor
push
mov
jne
and
movsl
jle
and
popf
pop
sub
pop
scas
data16
adc
xchg
lcall
in
cwtl
and
dec
cli
or
add
jle
pusha
add
jmp
ds
add
ret
int3
enter
rclb
sub
add
mov
and
xor
inc
and
mov
xchg
lods
cli
xor
push
push
and
xchg
add
mov
inc
push
int
adc
int
sub
inc
adc
and
stos
push
daa
and
dec
and
sbb
cmp
push
inc
pop
and
mov
add
in
mov
xlat
xor
hlt
dec
jl
add
mov
xchg
sub
and
nop
adc
ret
mov
jle
fs
iret
outsl
adc
aas
in
mov
dec
lods
daa
push
and
mov
cmp
test
inc
movb
call
dec
sub
les
dec
pop
xchg
flds
add
dec
mov
add
pushf
pusha
and
xchg
hlt
mov
cmp
pusha
push
sbb
push
cmpsb
jae
pop
sbb
xor
adc
cmpsb
aas
lret
pop
inc
adc
jmp
push
xchg
mov
loop
mov
pop
fbld
cmpb
mov
clc
aam
pop
and
fs
mov
or
clc
adc
mov
cmp
or
sti
enter
into
or
mov
ret
lret
in
inc
adc
jo
test
sbb
adc
mov
pop
sub
or
fs
xchg
pop
push
or
icebp
adc
out
jne
shll
fs
push
lock
sub
jbe
pop
jp
call
cmpsl
decl
sub
xchg
inc
dec
adc
mov
rorl
xor
call
or
fistps
cmpsb
mov
xor
mov
mov
dec
adc
call
scas
mov
sbb
add
sub
push
adc
adc
daa
mov
jl
push
test
pop
push
add
sub
mov
push
lret
or
shrb
les
and
cwtl
and
mov
leave
jge
inc
adc
add
inc
jl
cmp
adc
test
inc
mov
mov
nop
xchg
sbb
inc
pushf
and
inc
stos
icebp
mov
add
and
mov
mov
adc
aam
fcoms
fmull
test
movl
call
adc
es
and
and
adc
sub
or
in
inc
dec
push
int3
and
test
adc
push
sbb
and
sbb
push
and
sub
sub
inc
xor
cmp
cmp
cmp
inc
or
xor
mov
jb
xchg
scas
sbb
mov
and
mov
test
pop
push
push
add
pop
jne
pusha
adc
inc
insb
bound
sbb
and
jl
orb
mov
mov
and
test
push
lods
sbb
test
and
les
enter
rorb
fmull
call
test
and
adc
bound
scas
and
loopne
add
and
adc
inc
adc
addr16
inc
adc
sbb
sbb
and
sub
xor
cmp
cmp
adc
bound
push
mov
rcl
xor
xor
cli
cmp
std
or
test
pop
dec
movb
pop
punpckldq
mov
test
dec
mov
lds
mov
add
dec
add
push
sub
xchg
xor
dec
cmp
add
popa
gs
jmp
pop
fcoml
mov
gs
filds
inc
pcmpeqb
sub
mov
into
jne
test
gs
xchg
popf
rorl
inc
cwtl
sahf
add
or
and
xor
inc
fcom
dec
mov
pop
lods
inc
inc
clc
push
dec
out
push
call
dec
cld
mov
loopne
pop
and
sub
enter
inc
mull
push
xchg
mov
fnsave
and
jmp
lcall
sahf
rclb
jl
pop
int
mov
clc
ficompl
clc
pop
movl
push
adc
fstpt
adc
inc
cmpl
xchg
cld
jmp
add
mov
adcl
sbb
dec
inc
stos
adc
add
sub
sub
je
mov
mov
sti
bound
pop
shlb
popf
orb
pop
push
xchg
cmp
call
int
orb
call
mov
das
sub
inc
mov
ss
push
lods
dec
or
sub
xchg
cmp
jo
xor
push
bound
jbe
jge
cli
and
clc
pop
and
ljmp
xchg
ret
mov
or
xor
push
xor
or
sbb
xchg
push
inc
sbb
jge
push
jmp
dec
and
xchg
test
sbb
dec
sub
fsubp
imul
dec
inc
sub
add
dec
dec
add
shll
dec
in
adc
push
std
popf
cmp
pop
pop
pop
je
icebp
inc
xchg
sbb
enter
fdiv
scas
aas
stc
in
mov
daa
adc
and
mov
out
dec
xchg
pop
popf
ret
lock
adc
push
jnp
jo
mov
pop
js
or
jnp
jne
fwait
imul
dec
insl
cmp
mov
insb
dec
adc
and
add
rclb
mov
pop
ja
cli
add
xor
movb
dec
fldt
xor
pop
dec
inc
cmp
scas
out
or
mov
popl
mov
cmp
insb
and
leave
inc
inc
cld
and
nop
dec
mov
inc
jo
sub
lods
inc
lret
dec
inc
lock
mov
call
or
push
pop
insl
ja
or
or
iret
scas
mov
addr16
xchg
or
shl
add
jne
add
or
shl
mov
into
lock
push
push
dec
out
lret
inc
movsl
pushl
dec
push
or
adc
adc
sbb
mov
xchg
sub
sub
movsl
jle
or
mull
push
mov
adc
idivb
sti
jle
push
ret
or
lcall
bound
jl
mov
in
add
adc
out
cmp
mov
sub
sbb
lock
inc
inc
push
jmp
outsl
je
dec
lahf
mov
xor
lahf
cltd
mov
add
daa
adc
call
mov
movsl
lds
xchg
pop
mov
jne
mov
in
jnp
adc
dec
adc
push
adc
or
popf
jb
cmp
push
mov
push
mov
dec
sti
out
xor
adc
loop
cmp
or
dec
and
call
and
imul
loop
sbb
adc
movsb
xchg
test
rcll
cmpb
inc
cs
or
bound
or
shrb
mov
mov
repz
test
inc
xchg
mov
fsubs
sti
fmull
sub
jmp
push
int
xor
outsb
inc
movsl
jge
or
pop
les
inc
mov
push
adc
adc
mov
stos
out
cwtl
dec
into
pop
push
mov
dec
xor
jns
bound
jno
jecxz
fisttpll
notb
jbe
dec
punpckldq
adc
call
jbe
stc
mov
adc
stc
je
jo
xor
push
cltd
mov
xor
adc
sub
jecxz
pop
imul
les
push
add
jl
adc
xchg
xor
sub
repz
test
loop
adc
cmp
and
sub
push
inc
sub
cwtl
lcall
call
cmp
push
outsl
sub
popa
sbb
addr16
adc
add
in
movsb
cs
shrl
sbb
cmp
mov
mov
cmp
mov
test
jecxz
push
sub
add
push
ds
inc
ret
push
add
shl
pop
in
jbe
outsl
ret
adc
sbb
jbe
mov
and
sbb
mov
mov
sbb
and
adc
flds
aad
adc
inc
into
add
jl
lods
in
mov
pop
ret
or
pop
mov
arpl
jmp
xchg
jle
inc
std
les
mov
pop
jne
sbb
leave
je
ret
push
add
sbb
lcall
mov
repz
dec
pop
sub
add
jmp
popf
pop
pop
mov
repnz
sub
mov
pop
je
or
jno
iret
rclb
dec
and
adc
iret
and
jnp
add
scas
inc
or
das
test
xchg
mov
fstpt
pop
ljmp
push
mov
test
push
xor
dec
cmp
pop
or
push
push
push
call
push
pop
xor
ror
cmp
cmp
dec
mov
xchg
jmp
jno
dec
dec
jmp
cmp
push
mov
and
adc
cmp
add
push
push
push
call
shl
movsb
scas
es
sub
add
adc
fidivl
dec
add
sbb
jp
mov
jl
fiaddl
push
push
dec
cltd
jge
push
mov
ja
mov
and
lds
popf
and
into
mov
bound
add
cmp
sub
adc
jg
subb
xchg
cltd
push
loopne
add
adc
sysenter
fcoml
in
loopne
daa
push
imul
xchg
add
rorb
ljmp
pusha
pop
push
cmp
call
rcl
cmpb
push
ret
jecxz
or
dec
jmp
std
or
inc
adc
cmpsl
dec
push
scas
or
or
push
xchg
sbbb
movsl
xchg
or
adc
data16
fcoms
sarw
jbe
sbb
fsts
or
jl
adc
pop
inc
pop
add
xor
ret
pop
cmp
jge
ret
push
adc
ret
or
icebp
inc
das
add
mov
mov
xor
mov
mov
cmp
fsubs
and
and
incb
scas
or
xor
addb
or
push
xchg
loopne
or
daa
aaa
push
adc
jnp
in
fisubrl
inc
nop
iret
jns
dec
xchg
ss
mov
mov
cmp
test
jne
lds
adc
push
lods
lea
add
les
inc
and
add
mov
adc
adc
inc
repnz
mov
scas
int3
out
je
popa
sbb
or
bound
inc
sar
out
aaa
jno
inc
adc
sub
sub
outsl
insb
cmc
leave
adc
sub
mov
sub
sbb
aaa
and
hlt
popa
adc
popf
adc
ja
call
inc
xor
push
aam
or
mov
push
jge
fs
cmpsb
test
insb
dec
add
mov
out
xor
or
xor
adc
xchg
pop
lods
lahf
loopne
push
sub
add
mov
or
scas
or
mov
mov
push
add
incb
fsubrs
adc
mov
mov
add
mov
jecxz
adc
es
xchg
xor
dec
push
cmp
mov
aad
mov
add
mov
aas
add
push
push
mov
cmp
and
add
xchg
add
subps
mov
dec
dec
ss
dec
les
pop
dec
push
dec
rclb
loopne
sub
adc
jmp
and
dec
push
adc
dec
fidivs
mov
pop
pop
pop
movsl
push
imul
arpl
pusha
xchg
ds
sbb
or
mov
or
hlt
jle
or
movsl
sbb
and
jecxz
sub
pop
mov
add
push
push
enter
mov
push
clc
xor
sbb
or
cmp
stos
adc
rorl
or
sub
mov
adc
fisttps
mov
push
push
jge
jl
adc
rcrb
or
rolb
mov
jl
xchg
jb
pop
push
sbb
or
mov
add
call
add
cwtl
daa
add
pop
je
pop
fadds
mov
xor
lods
daa
aam
mov
mov
add
shl
xor
xchg
notl
adc
mov
cmp
stc
ds
sub
dec
shll
loopne
sub
push
push
les
movl
lds
inc
adc
ljmp
xorb
int
and
ds
dec
aam
mov
fistps
dec
ljmp
adc
imul
mov
pop
lea
mov
sbb
inc
ds
dec
or
sub
out
sbb
add
push
sbb
cmp
pop
sub
push
sub
adc
xchg
outsl
push
xor
scas
push
or
jno
pop
shr
xlat
push
call
lea
push
mov
push
adc
into
outsb
xchg
mov
pop
xor
mov
mov
pop
push
les
int
sub
daa
mov
out
push
loope
stc
call
jle
jbe
stos
out
cs
push
cmp
clc
es
xchg
movl
inc
pop
lcall
push
shl
cmp
and
sbb
sub
cmp
adc
add
pop
pop
xchg
adc
push
inc
pop
push
and
or
rcll
les
jge
mov
or
repnz
test
dec
pusha
jge
lea
out
clc
mov
cs
or
insb
inc
and
clc
sub
or
clc
arpl
xor
jns
or
cmp
add
push
cltd
mov
pop
push
inc
push
fst
mov
push
icebp
jno
outsl
int
aam
sahf
mov
iret
ror
repz
lods
push
mov
push
push
out
pop
daa
es
mov
leave
inc
mov
shlb
call
cmp
test
incl
jne
adc
cmc
divb
hlt
mov
shll
jle
xlat
loop
pop
xor
sub
inc
ja
decb
decl
inc
sahf
pop
je
sahf
cmp
adc
push
xchg
inc
ljmp
jno
mov
dec
xchg
add
mov
popf
pop
or
pop
in
and
cmpsl
sub
mov
inc
in
add
bound
pop
and
xchg
xchg
xor
mov
add
inc
xchg
inc
scas
mov
adc
add
insb
cli
les
insb
or
cmp
test
mov
xchg
loop
xchg
or
sbb
push
arpl
test
lods
dec
jmp
in
jle
cmp
test
gs
cltd
adc
dec
dec
ljmp
scas
pushf
arpl
mov
addb
xor
mov
xor
out
std
or
mov
sbb
and
push
push
lock
test
and
testb
inc
rolb
pop
cmp
dec
dec
mov
ficompl
sbb
lret
and
jmp
mov
add
shll
or
lea
idivl
sbb
adc
jne
dec
pushf
inc
daa
pop
xor
dec
sub
pop
xchg
jo
mov
add
test
outsb
clc
ljmp
dec
mov
cwtl
sub
sub
insb
enter
mov
or
je
imul
and
fidivl
jmp
daa
subl
xchg
push
sub
insl
sbbl
fwait
mov
cmp
xor
and
jl
xor
or
cmp
imul
mov
mov
imul
jp
inc
and
and
xchg
in
mov
loope
hlt
and
les
les
inc
xrelease
xor
mov
jle
xchg
insb
fstl
rorl
dec
in
dec
push
pop
mov
fxtract
adc
xchg
dec
xor
lea
lods
push
mov
and
and
daa
notb
repz
xlat
add
mov
orl
fistpll
andb
sti
mov
adc
or
mov
rcrl
sub
testl
rcll
js
pop
test
or
add
fsub
inc
xor
push
xchg
addr16
call
pop
lcall
imul
inc
rep
mov
out
bound
push
mov
jmp
lea
mov
sbb
inc
cmp
xor
imul
pop
outsl
dec
lds
in
adc
je
out
pop
adc
and
sub
mov
push
or
mov
loope
xor
pop
nop
jg
jmp
fcmovb
mov
or
inc
lcall
std
shll
mov
call
jbe
cmp
and
pop
dec
mov
or
ret
ss
inc
cmp
add
movl
jno
mov
sub
lods
testw
dec
stos
sub
test
sbb
rorl
mov
fnstenv
outsl
lret
sub
pop
push
fisttps
dec
xchg
dec
gs
fildl
sub
popf
sahf
call
jg
jl
rcrb
jns
shr
std
dec
adcb
stos
mov
loopne
mov
pop
push
jno
mov
es
cmpsb
sbb
cli
lock
scas
jb
push
bound
sbb
je
dec
jb
lahf
inc
xchg
das
push
arpl
lds
sbb
push
sub
xchg
enter
inc
loop
and
or
ret
xchg
mov
nop
xchg
test
popf
mov
repnz
stc
stos
sahf
and
call
clc
or
cmp
xor
and
add
rcll
into
test
xchg
je
dec
inc
push
cmp
inc
pop
pushf
out
les
dec
mov
pop
das
mov
fcoml
jl
or
jb
or
push
ficoms
les
cmp
mov
ret
push
dec
pop
push
and
adc
jmp
je
push
popf
pop
push
outsl
test
add
sub
jns
xchg
pmaddwd
or
movsl
call
mov
sarb
lds
pushf
mov
in
shll
or
adc
sbb
add
jge
mov
and
adc
xor
std
in
add
call
sbb
or
rcrb
adc
call
es
lea
or
inc
flds
pop
ret
sub
icebp
jno
jnp
xorb
call
dec
adc
iret
and
mov
xchg
xor
pop
repnz
cmp
call
into
scas
xchg
lock
bnd
ss
dec
mov
cmp
or
adc
add
mov
inc
nop
mov
leave
out
xchg
cmpsb
pop
loopne
sbb
inc
je
dec
cld
call
decl
inc
ja
sbb
pop
insl
adc
xor
cmpsb
call
xor
cltd
xor
dec
cmp
xor
cmc
ds
sbb
call
cmp
std
js
adcb
jne
ret
dec
js
dec
xchg
roll
push
inc
sti
cld
add
jne
sbb
js
push
orl
adc
and
or
dec
push
shll
in
mov
adc
dec
ss
push
pop
cs
push
pop
lret
out
xchg
jns
inc
adcb
push
jge
fisttpll
sbb
cwtl
jge
call
nop
sub
fimull
mov
stc
and
stc
lock
xchg
or
inc
test
fcoml
rcl
nop
inc
loop
mov
out
adc
andb
add
push
push
jle
sbb
add
and
test
lret
mov
jo
or
inc
mov
sarl
dec
mov
push
push
mov
xchg
inc
int
sbb
mov
add
aaa
or
push
call
outsb
lock
mov
add
popa
mov
and
dec
stc
or
fstpl
imul
lea
je,pn
xchg
ret
mov
ret
fcmovnu
mov
fmull
call
push
lock
out
fimuls
dec
push
lea
repz
sahf
and
add
insb
enter
and
push
inc
pop
and
push
inc
test
imul
bound
inc
lods
and
mov
add
push
je
mov
sbb
inc
fcoml
jo
or
add
clc
inc
aas
mov
in
cmp
push
mov
and
pusha
test
and
enter
xor
call
jns
add
inc
sbb
xor
cmpb
cmpb
jl
test
mov
inc
nop
and
enter
sbb
push
mov
push
call
jno
sbb
or
xchg
adc
lds
in
bound
hlt
in
dec
mov
lcall
xor
movsl
adc
dec
push
in
fs
or
inc
add
xor
mov
loop
nop
test
xchg
mov
adc
push
and
nop
sbb
les
mov
fs
xor
aam
outsb
into
dec
stos
adc
scas
cmp
dec
xor
jae
aad
jo
lret
inc
pop
mov
daa
add
sti
popf
jmp
mov
pop
and
aas
loope
jp
andb
inc
jle
inc
js
inc
add
adc
pop
cmp
lea
mov
clc
push
inc
cwtl
sahf
adc
sahf
xchg
pop
or
or
lcall
inc
xchg
sub
fdivrs
shrb
scas
sub
sub
jo
fisubl
popa
sbb
adc
stos
into
push
clc
mov
inc
cli
rol
xchg
pop
loop
xor
and
es
jle
jl
jmp
adc
xchg
ret
push
mov
aad
sbb
and
or
rclb
xchg
push
add
fcom
pop
subl
xchg
adc
sbb
or
xorb
sbb
jl
mov
cmpb
pushw
test
and
mov
pop
cmp
pop
out
jo
pusha
in
jb
sbb
mov
and
xchg
adc
add
and
cmp
cmp
inc
or
adc
mov
in
xor
cmp
inc
cmp
push
and
or
call
sub
sub
cwtl
in
xor
sbb
and
or
cmp
or
aam
dec
cmp
sbb
xchg
and
mov
cmp
push
cmp
or
xchg
dec
in
mov
and
call
pop
cmp
aam
adc
and
mov
arpl
sbb
cmp
arpl
mov
dec
adcl
add
adc
add
jb
rcrb
xlat
xor
in
jmp
or
je
popa
call
or
aas
add
adc
mov
mov
movb
add
jge
movsb
adc
mov
in
adc
push
inc
adc
pop
and
pop
xor
mov
hlt
jo
sub
inc
cmp
loop
mov
sbb
jae
ljmp
jmp
inc
mov
mov
js
cmp
pop
stos
mov
pop
push
leave
lods
sbb
or
sub
push
cmp
orb
rcrl
or
push
incb
out
shlb
adc
sbbb
jbe
xchg
cli
mov
dec
shll
adc
lea
xlat
adc
jmp
add
push
mov
aad
cmp
xor
add
mov
sbb
add
push
sarb
cli
push
or
dec
andl
sub
cli
inc
sub
xchg
sub
xlat
and
in
xchg
test
repnz
imul
mov
sti
jns
xor
lahf
dec
mov
or
call
push
and
call
fidivs
out
mov
sub
xor
loope
incb
adc
or
mov
sub
sub
push
adc
out
cltd
push
and
frstor
loop
and
rorl
add
pusha
sub
movsl
sbb
popa
jmp
dec
shlb
or
sbb
lahf
mov
mulb
xchg
nop
dec
insl
dec
push
inc
int
dec
inc
cmp
add
insb
movsb
and
jmp
push
or
aad
lds
sbb
dec
push
inc
cmp
mov
xchg
or
sbb
pop
push
das
bound
push
push
push
decb
xor
or
sub
cmp
push
imul
filds
adc
xchg
xchg
enter
filds
mov
xor
clc
imul
jge
loope
sub
mov
movl
or
jae
leave
icebp
push
add
fisubrs
ud2
cmp
push
pop
movl
test
push
clc
sub
sub
cwtl
icebp
lea
dec
push
or
pop
xchg
lea
rol
cmp
stc
in
sbb
and
addr16
jne
ljmp
mov
adc
int
adc
jmp
test
fsubrp
mov
out
int3
adc
xor
sbb
push
ds
sub
aas
push
adc
int3
pop
mov
or
std
xlat
mov
rcr
clc
in
inc
sub
adc
pop
or
sub
inc
dec
and
dec
mov
cmpsl
imul
stos
lds
out
div
imul
mov
dec
test
xchg
fstl
sbb
fnstcw
sbb
dec
xchg
pop
dec
xchg
or
mov
mov
xor
adc
jl
fwait
or
lcall
movsb
sub
mov
adc
ja
xchg
es
sub
dec
mov
adc
mov
movsb
inc
pop
pop
into
jecxz
adc
push
xchg
mov
inc
push
sbbb
in
ds
push
in
scas
cmp
nop
inc
pop
lds
ucomiss
mov
loopne
jmp
push
mov
adc
or
int3
lock
mov
divb
leave
pop
and
push
inc
dec
aam
push
mov
mov
adc
xor
out
mov
out
nop
int
pop
xor
mov
push
and
jp
mov
idivl
jge
mov
and
leave
dec
ficoms
push
test
or
lcall
dec
push
push
sub
sbb
dec
hlt
iret
sbb
sub
push
jnp
mov
add
push
xchg
sbb
loop
or
lock
aam
sbb
adc
add
jne
shrl
jge
movsb
loope
pop
adc
roll
xor
sub
mov
push
out
lds
das
lods
imul
xchg
and
dec
pop
inc
xchg
sub
ret
pusha
inc
mov
dec
mov
sbb
sub
jg
pop
xor
push
gs
fstpt
inc
sti
adc
cmp
sub
add
lcall
push
nop
jb
test
sahf
das
rolb
and
inc
or
pop
sub
fs
or
stos
mov
jg
inc
sub
add
pop
adc
pop
jmp
repnz
jle
push
mov
and
add
and
or
and
test
push
sub
test
inc
int
mov
lret
push
push
sub
dec
movsb
clc
fbld
sbb
ucomiss
and
inc
inc
jle
or
scas
push
lock
dec
jne
loopne
adc
movsl
and
dec
jne
push
setl
mov
add
push
push
jne
xor
sbb
inc
mov
jmp
scas
sub
xor
jg
jmp
call
test
adc
jmp
cmp
mov
and
push
inc
adc
dec
add
adc
cld
inc
enter
adc
and
les
and
lcall
and
pushf
pop
jmp
lock
push
mov
mov
add
and
repnz
faddl
inc
cld
out
or
cltd
popl
xor
mov
and
push
mov
or
test
xor
nop
pop
leave
movsb
push
shrb
or
push
mov
or
jmp
adc
adc
sub
jmp
and
xor
dec
dec
or
lea
mov
adc
or
add
cltd
mov
js
inc
xor
cmp
push
push
push
call
jmp
jbe
or
insb
iret
stos
add
roll
xchg
mov
in
sbb
xlat
adc
lock
xchg
mov
repnz
enter
testb
fnstcw
dec
and
jmp
test
dec
or
xchg
fnsave
fldt
pop
mov
adc
sub
enter
out
mov
inc
icebp
sub
dec
je
inc
dec
cmp
fimuls
and
sub
popf
jmp
jns
add
int3
xorl
xchg
or
inc
adc
aad
ljmp
inc
cmp
sub
clc
or
loope
sub
sbb
push
cmp
xor
and
sub
xor
cli
pop
push
or
test
in
aad
insl
mov
lea
icebp
cli
or
pop
xchg
add
pushl
mov
mov
jnp
xchg
adc
jae
sbb
test
fsub
mov
mov
cli
xchg
mov
cmp
inc
and
cltd
stc
lods
pop
sbb
dec
or
fildll
push
sbb
inc
cmp
or
das
aam
imul
lds
out
push
sti
pop
inc
push
adc
or
mov
adc
or
or
xchg
dec
cmpsl
xchg
call
ljmp
sub
adc
or
mov
sbb
inc
or
mov
add
inc
adc
or
dec
and
mov
jno
sbb
xor
xchg
and
dec
stc
xor
int3
adc
or
inc
adc
int3
mov
or
push
jl
and
inc
xchg
shrl
push
jo
icebp
arpl
idivl
xlat
inc
add
ficompl
or
xchg
and
dec
push
into
cs
adc
xor
inc
sbb
pop
mov
mov
movsl
cwtl
or
inc
xchg
push
stc
push
sub
and
js
pop
fcom
add
xor
push
mov
xor
pop
sub
mov
dec
xchg
gs
mov
stos
in
sub
in
push
inc
nop
push
movsb
jo
mov
in
mov
dec
push
sub
adc
push
mov
shl
mov
xor
shl
cmp
cmp
stos
andl
mov
in
ds
aas
stc
ficoms
xchg
adc
negl
loope
aas
in
dec
lret
sbb
fwait
jo
pop
and
xor
pop
mov
jne
jns
aas
push
cmp
jg
mov
sbb
xor
lods
aam
xlat
pop
pop
subb
mov
nop
mov
nop
mov
test
pop
dec
sub
pop
rorl
mov
lock
dec
pop
test
in
inc
in
scas
rcrl
fidivl
xor
orl
xchg
in
xchg
push
stos
mov
sbb
adc
and
dec
cmp
fsubrl
mov
cwtl
jnp
ret
fisttps
jle
out
imul
enter
cwtl
sub
fidivl
les
jmp
and
mul
arpl
bound
in
inc
mov
and
pop
inc
fs
dec
and
sub
popf
xlat
out
sub
or
mov
xchg
les
sbb
sub
push
movsl
jge
dec
push
test
and
popf
mov
inc
sbb
adc
push
add
cmp
sbb
fiaddl
mov
jg
andb
fs
jns
lods
js
shr
or
add
inc
xor
mov
jne
stc
push
mov
out
sub
pop
fstp
push
dec
cmc
mov
and
adc
inc
xchg
out
lret
lods
adc
mov
mov
mov
leave
adc
cld
test
dec
jg,pt
scas
sbb
and
lahf
je
insb
inc
jo
lods
enter
xchg
adc
pop
js
add
cmc
xlat
rcll
test
call
hlt
and
sub
fmuls
insl
cmp
test
sub
stc
xor
dec
jns
sub
inc
loop
or
lea
xor
sbb
arpl
call
out
and
imul
adc
sub
push
push
push
popf
insl
stc
pusha
xor
xor
into
jbe
mov
mov
pop
sub
jnp
push
iret
push
jl
fisubrs
adc
adc
jne
test
test
das
arpl
les
mov
jp
enter
add
and
inc
xor
out
add
cmpl
mov
test
and
inc
sbb
mov
iret
iret
daa
gs
les
jno
push
or
cmpsb
and
test
cmova
jmp
flds
sub
lea
cmp
dec
scas
stos
pop
push
cmp
push
and
cmpsb
pop
dec
pop
inc
bound
or
mov
call
push
sub
mov
and
mov
aam
adc
mov
fcomi
fdivs
stc
addr16
sbb
jle
imul
sbb
jl
inc
sbb
push
jae
out
leave
sbb
addr16
sti
ja
sbb
and
movsb
mov
call
je
sub
mov
sub
aam
lds
cmp
jge
popf
addr16
pop
call
pop
in
mov
and
xorb
jo
and
sub
mov
mov
push
les
sbb
and
int
cmp
inc
imul
xchg
lods
inc
nop
mov
push
cwtl
push
adc
loopne
push
ljmp
mov
lock
and
push
or
sub
mov
inc
mov
in
and
xor
push
mov
push
or
mov
outsl
dec
mov
push
mov
gs
lds
cwtl
push
in
mov
addb
mov
mov
das
das
sarb
xchg
pop
jae
sbb
and
or
sbb
je
pop
inc
xchg
or
int3
add
orl
jno
and
and
push
mov
and
and
mov
push
dec
and
test
popf
pop
sbb
adc
xor
es
inc
lods
and
dec
push
xchg
pop
push
push
xchg
decl
or
jge
and
push
sbb
daa
cmp
adc
add
sub
fwait
inc
jmp
movsl
xchg
mov
test
push
pop
xor
xor
lods
dec
and
cmp
out
enter
and
push
push
push
lahf
or
dec
xchg
sub
pop
in
pop
pop
dec
aas
and
sbb
scas
push
jge
and
rclb
adc
and
inc
std
test
push
cmp
sbbl
jg
pusha
cli
clc
pop
sti
movsb
fisttpl
sub
stc
test
adc
mov
lret
pop
mov
ja
mov
and
jl
outsl
sub
repz
push
std
lret
mov
add
adc
shrl
arpl
sub
aam
sub
jmp
push
dec
push
mov
aas
add
and
cmpsb
push
push
sub
jmp
sbb
jge
push
xlat
jmp
jl
in
arpl
push
pop
sbb
outsl
stos
inc
cwtl
and
call
test
push
xor
push
sub
jno
mov
xchg
sub
mov
test
or
xor
mov
xchg
outsb
lods
xlat
in
fisttps
add
jmp
mov
push
lahf
adc
insb
aas
mov
mov
sub
lcall
mov
pop
jle
cmp
and
dec
mov
sub
daa
and
mov
adc
and
fdivrl
mov
mov
jne
loope
and
dec
and
lods
jmp
test
shrb
leave
mov
inc
ja
jb
adc
lahf
or
fdivs
push
adc
rcr
pop
or
sbb
sti
lahf
add
push
ret
test
and
sub
pop
jl
dec
push
fmuls
pop
hlt
xor
hlt
enter
inc
adc
or
outsl
sbb
add
test
adc
test
incl
pop
sub
adc
fnsave
lea
mov
sbb
shr
fwait
loope
pop
pop
mov
xor
push
jmp
mov
ficomps
and
lea
adc
add
inc
rorb
pop
lock
or
push
pop
fs
push
clc
jmp
or
xor
jl
lods
inc
xchg
lret
movsl
adc
pop
mov
ss
cmpsl
and
or
movsl
daa
aam
xlat
dec
or
inc
pop
sbb
or
jae
mov
push
cld
push
dec
adc
cwtl
lea
cmp
sbb
or
inc
daa
cmp
push
call
in
sbb
mov
test
fnstsw
jmp
push
int
xchg
xor
xor
and
cmp
jle
arpl
pop
bnd
lea
mov
lock
lret
ficompl
rolb
sbb
movsb
inc
push
sbb
cmp
jl
and
in
add
data16
and
pop
sub
mov
or
das
sbb
mov
mov
dec
mov
pop
aas
aas
lods
sub
pop
adc
mov
in
pop
fisubl
ret
mov
push
inc
add
stc
dec
push
movl
add
push
aaa
adc
rolb
mov
les
enter
cmp
js
leavew
fnsave
mov
jp
push
xor
cmp
hlt
pop
dec
or
cmp
jne
int3
mov
mov
test
shll
xor
mov
inc
fcom
and
mov
icebp
ss
mov
into
arpl
in
fwait
add
jne
xchg
fstps
es
cltd
popf
inc
das
xor
iret
xlat
loope
add
pop
jg
pop
pop
push
and
pop
pop
mov
imulb
xchg
xchg
jecxz
into
add
les
dec
sbb
and
rol
dec
and
in
and
push
cmp
adc
push
sub
pop
movsb
aad
movl
sbb
sti
in
iret
xlat
mov
fidivrs
dec
mov
add
fcoml
push
test
out
icebp
jne
and
aas
or
mov
sbb
daa
pusha
daa
inc
mov
mov
and
adc
add
movl
jo
mov
fcoms
mov
cmpl
icebp
xchg
jecxz
test
mov
dec
pop
in
addl
sub
push
lds
jbe
adc
rol
or
add
fimull
dec
shl
jle
orl
fwait
pop
leave
adc
aad
lods
test
push
jbe
dec
movsb
mov
sbb
and
js
mov
test
xchg
es
inc
sbb
movsb
aas
cmp
and
jmp
jmp
adc
cmp
and
sahf
ja
cld
cmp
pop
in
xchg
in
loopne
push
test
xor
sbb
nop
sub
loop
xchg
add
pop
adc
imul
dec
inc
aam
std
les
ret
mov
icebp
sub
mov
xchg
mov
pusha
mov
push
mov
pop
in
imul
loop
movsb
ja
push
or
shl
cltd
lds
pop
out
enter
or
xlat
mov
xchg
loopne
popa
mov
xchg
mov
add
sbb
jle
adc
or
inc
and
mov
adc
jnp
or
ja
shll
mov
pop
mov
and
jbe
pcmpeqb
xorl
lret
dec
icebp
jl
inc
out
adc
je
push
lea
lea
sbb
push
and
adc
pop
pop
pop
nop
jp
sbb
call
dec
jnp
xchg
xchg
out
insl
testb
nop
mov
and
mov
scas
or
jo
mov
fs
add
lret
fbld
test
mov
push
add
sub
inc
and
push
lods
mov
push
inc
xchg
xor
subb
xchg
adc
inc
dec
xor
inc
pushf
out
lds
movsb
push
mov
roll
cmp
push
pusha
ret
add
jnp
loope
sbb
or
lahf
lahf
and
cwtl
mov
imul
push
test
xor
clc
inc
incb
les
pop
push
fidivrl
adc
pusha
das
scas
lea
push
mov
or
or
std
push
test
jne
jmp
pop
hlt
or
sbb
mov
mov
xor
sub
es
pusha
or
pop
call
mov
inc
enter
and
hlt
les
mov
xchg
mov
mov
push
dec
lret
int
xchg
mov
js
add
jo
fst
mov
and
mov
btc
out
sbb
jl
sub
or
inc
and
test
xchg
std
xor
or
push
push
ds
xor
iret
stos
adc
add
pushf
mov
inc
xchg
xor
push
adc
and
jns
pop
push
aad
loope
xor
cmp
clc
sbb
movsb
popa
cmp
push
xor
add
in
aam
pop
pusha
out
aam
cmp
xor
add
cmp
sbb
rcll
ljmp
sub
adc
adc
adc
xlat
lcall
mov
insl
and
push
mov
or
push
lods
sarl
fcompl
mov
push
or
push
pop
pusha
sarl
add
adc
rolb
inc
adc
orl
mov
push
pushf
pop
pop
push
push
scas
or
mov
adc
movsl
sbb
jne
mov
xchg
in
arpl
js
sub
push
leave
and
sub
addb
pop
pop
in
jb
mov
push
js
addr16
jg
or
jge
xor
add
mov
mov
xchg
pop
dec
adc
sub
inc
xchg
sbb
inc
inc
lock
sarl
sub
cs
mov
jmp
push
push
cmc
mov
jne
aad
sti
sub
cld
or
pop
jb
mov
mov
mov
scas
xchg
jp
nop
mov
das
lock
popa
pop
dec
cmp
cmp
cs
stos
or
ljmp
xchg
movsl
mov
mov
dec
cmp
jno
sub
pusha
mov
dec
mov
mov
rcll
adc
loope
lock
mov
sbb
and
lcall
push
subb
dec
and
movaps
adc
xor
jno
gs
sti
mov
dec
movsl
sbb
shll
add
mov
dec
clc
pop
cmp
mov
lret
mov
sbb
rclb
sbb
sbb
or
inc
imul
ret
dec
cmp
adc
inc
jp
xor
mov
adc
aam
mov
cwtl
rcr
jmp
dec
clc
nop
mov
adc
or
outsl
cwtl
sub
cmpsb
out
jne
ss
mov
sub
xor
mov
lea
add
push
push
orl
lea
pop
xchg
xor
rcrl
push
jns
adc
shlb
call
jo
nop
pop
stos
mov
cmp
lds
jmp
push
mov
loopne
sbb
ret
pop
pop
cmp
mov
ret
outsl
das
xchg
les
lcall
mov
and
cmpb
es
mov
push
sub
pop
add
push
mov
pop
mov
mov
les
push
rcll
xchg
sub
mov
xor
dec
enter
aas
lea
ja
inc
jne
out
pop
mov
call
dec
mov
imulb
inc
lock
pop
idiv
ss
adc
lea
loop
sbb
ja
adc
ffree
push
add
inc
imul
push
push
dec
or
mov
or
bound
push
mov
fstpt
dec
sbb
and
adc
xor
bound
test
xchg
inc
shr
cmp
xor
pop
mov
or
pop
mov
push
loopne
mov
mov
cmp
push
inc
pusha
cmp
jge
inc
xchg
and
xchg
and
cmpl
jne
sub
lds
std
clc
test
sbb
cltd
jg
mov
mov
mov
pop
cli
inc
pop
rclb
pushf
lahf
jne
push
std
sub
push
ljmp
lret
push
xor
xor
add
in
ret
mov
je
je
dec
pop
inc
daa
fistps
push
push
xor
xchg
fwait
rcll
add
adc
and
jae
cwtl
or
addb
test
neg
gs
cmp
in
fs
mov
mov
inc
lods
ret
dec
imul
pusha
or
pop
or
lcall
adcb
and
sbb
xor
sub
push
movl
loope
adc
add
sbb
or
cmp
lea
call
jg
test
rolb
stc
mov
mov
call
pop
rclb
and
ds
sbb
push
fsubr
adc
loope
and
dec
sbb
stc
adc
or
test
mov
push
call
clc
int3
inc
xchg
jge
sub
mov
mov
add
dec
sbb
add
xchg
mov
mov
dec
imul
cmc
outsl
loopne
aad
xor
lret
or
movl
addl
inc
mov
test
adc
xlat
adc
dec
daa
out
jge
jmp
and
add
fs
mov
push
jge
mov
cmc
push
dec
sub
jecxz
add
lret
pusha
je
add
enter
or
sub
jo
add
or
mov
ret
jp
or
cmpb
xchg
jp
push
add
sub
adc
icebp
bound
jb
dec
jbe
in
mov
jmp
cs
hlt
mov
push
dec
push
out
sub
movsb
es
fidivl
imul
jne
inc
mov
mov
add
xchg
cmp
je
es
idiv
xlat
sub
cmp
or
hlt
mov
pop
mov
bound
push
call
cmpl
and
scas
je
repnz
cmp
xor
push
or
daa
in
or
push
lea
cmpsl
shr
xor
sar
push
scas
dec
jne
or
mov
sub
shl
je
xchg
or
es
das
jp
rcl
cld
out
mov
push
dec
stos
and
ja
loope
xchg
mov
daa
sbb
ret
mov
leave
movsl
push
pop
orps
sub
push
psadbw
movsl
aaa
mov
adc
ja
xchg
adc
push
ja
rcrb
or
push
add
or
cmpb
mov
mov
lret
push
xor
pusha
push
mov
and
rcrb
mov
pop
lahf
mov
daa
or
mov
test
adc
jns
add
cld
call
imulb
jp
pop
imul
andb
cmpsl
add
rdpmc
jnp
xchg
or
and
push
push
nopl
adc
dec
in
mov
test
jmp
xchg
jecxz
popf
mov
sub
push
popf
xchg
add
fnstenv
mov
lods
cld
subl
jno
bound
jo
repz
sub
in
dec
loopne
xchg
pushf
gs
inc
mov
jnp
or
dec
inc
or
mov
jne
popa
adc
rclb
lret
arpl
push
push
push
call
sub
add
je
cmp
jp
faddl
mov
pop
pusha
jp
sub
or
mov
cmp
hlt
subb
mov
std
cs
in
mov
loop
movsb
mov
xchg
sub
adc
mov
faddl
scas
outsl
ja
stc
cld
lock
iret
addb
inc
jmp
fcompl
jl
out
insl
sub
xchg
divb
cltd
ret
add
js
aaa
add
push
inc
or
jle
adc
ret
push
fiaddl
mov
mov
orb
shlb
dec
scas
lds
push
stos
lret
in
cmp
cltd
inc
clc
add
jl
test
test
dec
or
sub
out
add
jp
pop
and
pop
and
pop
fsubr
and
jns
inc
cltd
xchg
data16
pop
jmp
xor
adc
sub
cmp
cmp
sub
or
jbe
push
cs
mov
mov
xor
push
fmuls
and
rorl
cmpsb
fbld
mov
leave
jg
into
jo
les
add
icebp
push
fsubrs
cld
pop
dec
push
xchg
inc
push
dec
mov
cmp
pop
mov
loopne
xchg
mov
inc
xchg
clc
out
mov
xchg
sahf
shrl
and
maxps
sub
dec
add
aaa
std
jo
or
into
and
inc
pop
lods
adc
lock
aas
sub
push
sbb
addb
xchg
cmpsb
movsb
cwtl
shrb
push
push
jns
inc
into
test
loope
call
xchg
aas
and
clc
xor
xchg
fs
xor
dec
cld
shr
add
adc
mov
mov
adc
and
sbbl
rcrl
notl
js
add
outsb
and
mov
mov
sub
sub
sub
pop
pop
xchg
nop
addb
dec
sahf
or
dec
dec
mov
pop
out
pop
dec
cmp
add
jge
mov
jnp
sarl
testl
push
inc
mov
adc
pop
jmp
repnz
xchg
addr16
add
adc
xchg
push
pop
daa
jb,pt
repnz
scas
and
or
and
adc
ljmp
add
lock
sub
nopl
fwait
cmpb
mov
sbb
xor
xchg
add
subl
mov
and
jle
test
sbb
or
cmp
filds
adc
push
in
push
mov
insl
pop
mov
mov
pop
sahf
mov
sub
push
movsb
cmc
ret
pop
jle
sbb
mov
fdivrl
orl
jecxz
out
push
sub
or
mov
dec
nop
dec
jne
xchg
pop
jns
cmp
lods
push
xchg
or
adc
rclb
jg
cmpsl
cmp
xchg
loopne
fadd
or
aad
ljmp
xor
fwait
fmull
mov
and
adc
mov
adc
dec
bound
testb
or
mov
xchg
out
jne
hlt
call
lret
or
jns
pop
and
test
xchg
mov
dec
ret
or
dec
add
in
xchg
push
imul
addl
and
call
fisubs
push
adc
xchg
dec
cmp
jl
outsl
jne
mov
stos
mov
inc
mov
jecxz
dec
adc
in
jne
jbe
daa
call
divl
xor
test
jecxz
adc
out
cmp
add
pusha
sub
addl
ja
or
mov
and
or
mov
test
mov
stc
cmpsl
sub
mov
pop
jns
pop
arpl
jnp
dec
daa
or
int
test
jns
dec
pop
jno
pop
out
push
movsl
shrb
mov
adc
jge
mov
daa
ss
jns
jg
dec
push
mov
sub
inc
dec
xlat
repz
pop
es
sti
dec
push
push
push
inc
shlb
jne
mov
add
add
jo
xchg
add
clc
add
xchg
push
shlb
mov
loope
stc
sub
push
aas
pop
sbbb
xor
jnp
pushf
or
daa
shrb
push
hlt
pop
das
and
inc
adcl
pop
daa
jnp
negl
ror
dec
enter
jno
icebp
jnp
or
dec
sbb
scas
aaa
lods
out
inc
sbb
lahf
adc
pop
or
int3
stc
add
rcll
mov
fmull
inc
push
mov
jmp
adc
fcom
mov
daa
or
push
call
not
push
pop
or
dec
push
xchg
jns
xchg
leave
pop
test
jle
leave
push
sub
sbb
xor
enter
cmp
pop
iret
mov
adc
mov
sti
or
adc
mov
sahf
test
popf
mov
int
rcrb
lahf
xchg
inc
loopne
mov
adc
xchg
sti
popa
cmpsb
cmp
and
andb
xor
lret
lds
shll
jl
push
adc
inc
sti
add
bound
repnz
cmp
nop
cmpsb
push
sbb
jne
popf
jge
mov
sub
sub
out
stos
ss
daa
inc
and
fcmovnb
mov
mov
ja
test
sub
add
dec
jo
add
in
gs
mov
fwait
lret
push
pushf
hlt
xchg
push
les
jge
sbb
cmp
mov
jnp
lds
mov
pop
fs
push
adc
or
js
xchg
lret
add
int3
adc
and
push
fs
xchg
insb
push
xchg
je
xchg
push
cli
mov
jns
xchg
ljmp
lock
push
rcl
inc
test
push
adc
aad
sub
jmp
bound
call
xchg
xchg
andnps
push
shr
jo
es
sub
dec
cmp
out
movsb
xchg
push
gs
or
sub
out
cwtl
lret
int
repnz
sbb
lods
adc
push
insb
cltd
mov
cli
fisubrs
ljmp
pop
inc
jae
xchg
xlat
pop
adc
js
jmp
or
sbb
or
adc
and
jno
inc
sbb
inc
add
and
xchg
dec
pop
movsb
mov
and
or
ror
xor
mov
adc
rcll
sub
jmp
or
dec
js
mov
xor
mov
cs
and
push
clc
cmpsl
out
dec
mov
arpl
xor
fstl
in
jle
dec
sub
pop
rclb
inc
or
add
and
and
xchg
mov
jmp
in
xchg
dec
cmp
stos
mov
xor
add
inc
out
and
fisubs
inc
stos
mov
inc
jmp
xor
sub
jne
mov
jmp
in
dec
xor
cmp
inc
fstpl
jmp
inc
inc
add
jle
repz
mov
sub
int3
ds
mov
mov
and
jo,pn
je
xor
xchg
decl
cmp
hlt
into
imul
je
inc
push
push
aad
xlat
popf
rcr
sub
pop
adc
pusha
fldt
movsl
daa
jmp
fbld
mov
xchg
adc
sub
push
push
and
xlat
fwait
add
inc
dec
adc
les
cltd
idiv
test
jge
and
shll
cwtl
xor
cmp
and
add
idivl
addb
dec
add
sarl
add
sub
daa
pop
aas
ss
jmpw
adc
inc
jmp
ret
inc
jmp
mov
dec
jle
and
sub
adc
orb
push
xchg
jge
xchg
jne
dec
mov
cmp
push
adc
jl
adc
inc
mov
das
loopnew
js
sbb
jmp
dec
sbb
and
je
xlat
daa
femms
and
sti
push
xor
lock
std
jne
clc
cmpb
xchg
and
sbb
int
jl
push
dec
push
push
inc
repnz
xchg
test
pop
in
pop
push
repz
idivl
inc
and
xchg
xchg
xor
xchg
in
push
mov
in
and
cmc
add
jmp
test
mov
sbb
mov
bound
mov
push
xor
and
push
sbb
jo
jp
inc
adc
clc
fildll
int
cmp
ret
push
inc
sbb
or
adc
inc
add
lcall
add
add
xor
inc
push
pop
pop
jp
or
sbb
dec
and
cmp
inc
dec
mov
popf
sub
adcb
dec
aam
stos
sub
mov
sti
es
cltd
or
mov
test
cmp
inc
xchg
in
arpl
aad
mov
pop
jmp
out
dec
jo
cmp
mov
sete
xor
sbb
pusha
sub
ljmp
add
out
rcrb
lock
clc
std
xchg
jmp
pop
es
or
ret
hlt
xchg
ds
push
jbe
push
push
outsl
bound
push
sti
arpl
pop
clc
adc
push
push
call
lcall
stos
ss
fs
pusha
pushf
cwtl
or
arpl
andb
adc
xor
daa
outsl
lcall
add
add
fstps
push
dec
loope
sbb
insb
inc
aas
mov
mov
call
add
lock
jne
jl
es
adc
testb
push
sarb
add
test
movsb
dec
push
incb
push
out
in
adc
cld
dec
adc
leave
push
pop
popa
sbb
and
mov
sbb
sbb
aad
jo
sbb
rcrl
sub
sbb
xchg
mov
repnz
dec
or
jnp
adc
sub
and
adc
push
mov
dec
dec
adc
mov
cs
js
fnstcw
je
repnz
pop
mov
and
dec
add
xchg
mov
sub
sbb
cmpsb
or
inc
cmp
adc
mov
adc
nop
and
mov
cmc
adc
dec
add
lods
fsts
mov
lods
orl
repz
negl
mov
push
rclb
in
arpl
pop
adc
imul
je
cld
fs
enter
sub
mov
sbb
fwait
xchg
jne
mull
mov
jecxz
xchg
mov
sbb
inc
or
pushf
add
or
cmp
add
jmp
push
test
rcr
xchg
aam
testb
adc
lret
incl
push
seta
mov
lcall
adc
mov
ss
movsb
and
jb
sub
popf
mov
sbb
dec
xor
or
rclb
mov
cmp
ljmp
sarl
leave
lds
ljmp
mov
adc
hlt
in
pop
xchg
scas
mov
into
mov
lcall
xor
inc
xchg
es
and
dec
cmc
pop
loopne
pop
sub
pop
ds
mov
adc
pop
sbbl
xchg
adc
pop
mov
sbb
cmp
and
call
lds
or
push
mov
push
mov
das
je
test
test
push
push
adc
stc
movsl
and
test
stos
jecxz
dec
or
ret
add
mov
ret
filds
mov
dec
in
int
mov
mov
pop
movsl
and
pop
jnp
push
js
dec
push
jmp
push
push
xchg
aaa
int3
cwtl
dec
std
adc
test
and
int
repz
jmp
mov
push
and
push
movsb
inc
addl
fdivrs
mov
js
push
jl
mov
stc
xor
sub
insw
pop
or
scas
pop
loop
add
ja
or
pop
or
inc
add
sti
cwtl
push
jo
popa
dec
add
xor
test
clc
incb
push
daa
cmp
sbb
mov
repz
push
xchg
push
jle
call
or
std
rorb
ja
push
into
jnp
rolb
xchg
pop
lock
fs
pop
sar
mov
push
je
and
das
stos
sti
adc
movsl
dec
loop
ljmp
les
adc
pop
popa
les
aam
adc
lcall
inc
dec
xor
aas
pop
fwait
std
push
and
adc
xchg
adc
jbe
mov
mov
hlt
ret
inc
jp
jns
mov
in
sub
xor
testl
gs
je
push
mov
shr
nop
shrl
mov
imul
jl
leave
cmc
ret
push
test
push
out
add
or
sub
and
cmp
mov
adc
or
mov
inc
push
add
add
fdivs
sti
idivb
jbe
mov
enter
mov
mov
push
in
mov
movsl
pop
adc
push
cmpsl
mov
push
mov
insl
add
xor
je
or
movsb
pusha
and
imul
mov
cld
icebp
es
push
or
add
mov
lea
outsb
mov
cwtl
dec
jmp
incl
add
lcall
inc
push
ror
cmp
rorb
call
loope
or
repnz
and
or
test
cmp
sub
popf
adc
jp
inc
xchg
mov
and
scas
push
addr16
push
dec
add
push
std
dec
mov
std
mov
sbb
es
ja
mov
sub
push
xchg
sbb
call
es
add
jb
pop
add
je
push
xchg
addl
cli
mov
push
and
rorb
and
dec
jmp
xchg
jb
test
adcl
cmp
and
call
cmovae
repz
mov
and
xor
leave
add
xor
aaa
js
xchg
mov
or
xchg
push
in
repz
xor
mov
fidivrs
xchg
mov
push
sbb
xchg
add
lock
adc
scas
popa
sbb
sbb
out
sbb
push
sub
lcall
imull
test
mov
sbb
mov
cmp
or
cmp
pop
pop
mov
out
enter
popf
lcall
jbe
add
fimull
out
xor
popa
insb
rorl
xchg
scas
mov
inc
jnp
movhlps
in
or
jnp
xchg
loopne
js
mov
mov
pusha
sbb
cmp
dec
adc
pop
push
cmp
dec
and
add
sbb
jne
xchg
in
les
push
xlat
jmp
or
sbb
sub
mov
adc
cmp
xchg
add
jg
jmp
sbb
imul
std
add
adc
adcb
mov
or
push
push
popa
ret
repz
xor
jmp
arpl
push
lcall
es
and
imul
add
clc
loope
cltd
inc
in
je
loope
inc
imul
sbb
dec
cs
add
xor
mov
cld
out
call
in
inc
lcall
out
shrl
push
pop
subb
neg
jb
es
popa
and
pop
mov
cmpsb
out
mov
stc
shrl
or
repz
js
pop
jo
push
mov
ficoml
jecxz
mov
sub
imul
xor
push
sub
pop
push
push
push
loopne
mov
ret
loopne
sbb
push
push
outsl
sub
divb
add
mov
lds
push
mov
test
push
scas
jmp
rorb
movswl
orl
xor
rorb
mov
push
mov
dec
iret
jmp
leave
ja
sub
sti
add
movsl
test
pop
in
xchg
ss
sub
and
inc
mov
mov
dec
xlat
add
in
mov
jmp
add
cmp
lret
cmp
cmp
mov
inc
mov
push
mov
inc
in
nop
mov
push
fs
aas
pop
insl
adc
movsb
inc
mov
inc
pop
mov
repz
push
push
cmp
lahf
pop
cmp
je
nop
sub
or
fstps
xchg
arpl
rcrl
jmp
sbbb
test
or
pop
adc
jmp
dec
popf
popa
in
adc
sub
pop
or
fstps
movaps
ds
mov
mov
mov
popf
or
inc
inc
cld
lcall
pop
pop
adc
push
inc
popa
xor
sub
sbb
loop
jb
inc
xchg
insb
enter
jl
test
push
lret
xor
inc
sub
and
lret
inc
das
pop
cld
daa
push
xor
sub
inc
cmpsb
mov
into
and
and
adc
dec
stos
xor
ficoml
sub
dec
dec
es
out
cmp
clc
inc
call
std
rcll
push
int
mov
mov
das
push
adc
test
push
bound
into
xor
mull
cmp
jns
bound
mov
stc
jnp,pt
xor
xlat
inc
in
add
push
mov
adc
inc
cs
adc
or
je
ds
test
adc
mov
mov
xchg
pop
xchg
pop
and
and
ljmp
aas
fnstsw
sub
adc
xchg
je
pop
mov
xchg
lahf
xchg
push
mov
mov
adc
or
adc
int3
or
sub
sub
or
push
sbb
pop
or
dec
xchg
clc
icebp
mov
sub
mov
pusha
pop
jle
adc
jb
mov
imul
lret
cmc
insb
aad
inc
popl
cmpsl
pusha
xchg
mov
push
jecxz
test
push
push
or
addl
adc
inc
or
adc
or
adc
call
xor
push
sub
xor
push
xor
cmp
lods
xor
cs
inc
fs
fwait
adc
data16
js
pop
jl
out
inc
psubusw
adc
or
adc
popa
lcall
fdivrl
dec
test
jp
inc
and
adc
pop
mov
xchg
loop
push
adc
and
stc
lock
sub
or
push
sub
add
loopne
ret
lock
inc
sub
mov
imul
inc
xchg
xor
or
test
and
enter
xor
pusha
adc
dec
adc
arpl
jl
and
dec
ss
and
out
jb
jg
xchg
xchg
adc
xor
cmp
xor
sub
adc
add
xor
xchg
push
addb
jle
mov
pushf
out
dec
das
add
xlat
add
lret
jp
clc
dec
adc
xchg
std
stos
clc
incl
adc
and
pop
sti
push
or
fnstcw
xchg
dec
in
and
push
sbb
push
pop
sub
xlat
or
mov
pop
inc
xor
fnstenv
je
mov
inc
clc
xchg
and
push
inc
insb
loop
sbb
inc
mov
js
adc
xchg
cmp
jae
sub
gs
enter
cmp
in
mov
xchg
jecxz
dec
pop
mov
sbb
call
es
bound
push
adc
sub
add
adc
jmp
mov
push
inc
add
dec
loopne
lea
stos
xchg
pop
bound
cmp
testl
adc
adc
cmp
inc
jmp
cmp
aaa
or
ficoms
pop
add
mov
and
xor
ret
cmp
fisttpl
daa
or
flds
dec
xchg
and
loop
leave
test
xchg
and
sahf
movsl
jne
stos
int
clc
xchg
cmovl
aad
pushf
xchg
aam
or
orb
or
jne
mov
add
ret
sub
push
fwait
shrl
scas
or
xchg
out
dec
mull
xor
ja
inc
daa
fists
push
xchg
sahf
sbbb
mov
xchg
add
cmp
sub
mov
push
mov
sub
nop
jge
pop
xchg
pop
push
push
ds
fldlg2
ret
lahf
cld
jecxz
jne
std
shll
xchg
out
outsb
and
aam
jmp
ja
mov
dec
out
mov
push
and
dec
adc
xchg
das
jb
mov
jo
mov
xchg
repz
adc
mov
pop
ficoms
dec
sub
test
push
adc
in
sub
call
mov
pusha
leave
push
push
mov
add
das
in
push
push
jne
push
push
push
push
xchg
jbe
iret
add
lea
dec
lcall
int3
fstps
adc
cld
subl
pop
sbb
and
fs
scas
pop
fsubr
ret
outsl
xor
or
inc
sub
popf
call
nop
in
mov
shrl
mov
jno
cmc
push
xchg
dec
inc
add
and
mov
leave
jmp
and
jg
icebp
jmp
into
fs
pop
dec
pusha
pop
pop
rorb
adc
das
mov
pushf
add
ret
cwtl
cmp
cmp
fisubrs
cmp
mov
push
jne
popa
sbb
xchg
push
shlb
lods
inc
insb
cs
pop
sbb
subl
adc
jmp
setnp
or
sbb
loopne
add
xorb
adcb
add
and
adc
adc
icebp
int3
add
mov
fs
sbb
add
dec
imul
mov
jo
dec
je
push
sbb
data16
sub
dec
cld
cmp
xchg
cmp
push
xor
jo
and
sub
inc
call
sub
nop
xor
dec
ret
shrl
push
xchg
pop
mov
jmp
or
sub
sti
adc
out
adc
lea
mov
xchg
daa
inc
mov
es
adc
xchg
xchg
aas
xor
or
cmp
push
add
cmpl
pop
push
mov
mov
xchg
dec
andl
gs
ret
repnz
and
xchg
daa
dec
loope
inc
xchg
push
push
adc
out
mov
or
push
cmp
xchg
push
pop
adcb
cld
ja
and
loop
adc
pop
in
jg
push
xlat
lcall
ffree
sub
push
dec
add
insb
nop
adc
lret
adc
ss
test
pop
sub
cmp
je
inc
or
andl
pushf
dec
push
out
xor
adc
cld
mov
aad
cmp
xchg
jnp
lods
stc
cli
xchg
add
cmp
xchg
divb
movsl
push
jge
inc
xor
dec
vpunpckhqdq
lock
lock
xchg
inc
repz
out
mov
and
cmp
pusha
pusha
mov
cwtl
andl
int
aad
cld
rcl
add
inc
mov
dec
mov
and
dec
insb
adc
mov
and
orl
cmp
add
pop
push
cmpsl
jge
scas
cmpsb
test
pop
fcoms
push
sbb
xor
and
inc
or
stos
dec
stc
les
inc
push
pop
xchg
inc
bound
push
mov
mov
add
cmp
movsb
psllw
mov
jae
jg
jl
xchg
dec
popf
cmpsb
push
add
jae
mov
push
lock
add
pcmpeqb
lods
daa
adc
adc
stos
push
sbb
dec
lcall
push
or
aaa
aas
push
push
and
das
sbb
in
dec
mov
push
rcrl
cmp
add
dec
push
je
les
cmp
mov
xchg
mov
lahf
dec
ds
inc
inc
push
enter
scas
sbb
xchg
stos
mov
push
adc
cwtl
jns
pop
xor
sbb
aas
out
inc
cmp
jno
sub
adc
test
lea
sbb
inc
inc
jp
es
cmc
imulb
jno
sbb
lcall
mov
pop
ljmp
lret
icebp
cmpsb
pop
adc
pop
insb
call
mov
adc
into
and
add
push
sbb
push
and
and
lcall
pushl
rolb
scas
pop
nop
enter
jle
add
push
jns
sub
std
inc
mov
and
jnp
mov
jmp
dec
mov
add
clc
call
in
lods
js
leave
jge
int
fldcw
iret
aad
ret
daa
adc
and
cmp
or
adc
adc
mov
adc
push
xchg
sub
daa
cmp
inc
xchg
pop
shll
cmp
xchg
pop
pop
push
lret
rorl
xlat
fs
mov
xchg
or
cmpsb
or
xor
adc
ljmp
sbb
mov
mov
or
pop
pop
fldenv
test
mov
xor
and
aaa
test
mov
mov
mov
sbb
mov
adc
outsl
vmwrite
movsb
dec
addr16
dec
jmp
and
rcrb
popf
les
sahf
cmovs
fnstsw
enter
sub
scas
adc
pop
mov
fldl
adc
in
fdivrl
clc
dec
lds
inc
call
jns
inc
inc
sub
fcomi
mov
jg
mov
fdivr
iret
mov
je
jno
insl
sbb
clc
in
scas
shrl
les
cmp
mov
mov
xor
enter
or
ss
lcall
and
inc
int
inc
insl
jle
mov
movd
sub
dec
arpl
adc
xor
andl
mov
and
iret
out
pop
cltd
test
insl
and
dec
jp
test
mov
scas
or
lret
fwait
add
mov
or
sub
sahf
inc
xchg
pop
mov
and
fs
inc
dec
dec
dec
divps
fs
sub
js
and
add
pop
mov
cmpsl
dec
adc
push
sbb
mov
dec
push
adc
in
or
rclb
sub
insb
dec
aad
fs
inc
push
mov
sbb
xor
lods
jg
test
or
pop
std
xchg
xchg
cmp
inc
je
xchg
mov
inc
push
mov
dec
sbb
inc
xchg
shl
test
or
mov
mov
call
cmp
ror
push
mov
repnz
sti
nop
adc
or
inc
out
inc
jae
mov
xchg
dec
stos
xchg
mov
je
push
mov
nop
and
dec
mov
inc
stc
push
inc
jne
mov
adc
bound
push
sti
ss
popf
jp
xchg
pop
scas
aaa
dec
pusha
adc
push
dec
mov
mov
repnz
leave
or
lods
jl
inc
in
adc
and
mov
adc
cmpsl
push
inc
adc
push
pop
inc
mov
inc
push
or
fldcw
mov
mov
inc
push
call
mov
out
loop
fdivrl
das
jge
and
popa
mov
jne
in
rcrl
and
test
test
push
cmp
dec
lods
adc
and
enter
push
xchg
push
in
test
adc
sub
nop
aaa
psllw
jnp
hlt
sbb
call
or
xchg
xor
and
or
push
rclb
xchg
shrl
adc
pop
jbe
pop
bound
test
mov
dec
cs
xor
xchg
das
test
adc
adc
popa
push
inc
adc
push
ret
jmp
xchg
inc
or
push
test
push
adc
push
mov
leave
adc
jo
or
lock
pop
bound
jo
testl
xor
xchg
cmpsb
or
out
xor
rep
test
es
fldenv
aam
push
pop
cs
mov
xchg
push
xchg
ja
dec
xchg
pop
push
push
test
add
movsl
fistpl
xchg
adcb
fmull
pop
mov
xor
int
cmp
inc
xchg
sti
fs
push
push
and
fstps
pop
add
fcmovbe
decb
and
jo
loope
cmp
jmp
dec
jbe
gs
cli
testb
jbe
mov
gs
or
inc
sub
pop
mov
sub
cmp
js
call
add
ljmp
call
xchg
mov
aam
push
lods
movsl
shrb
sbb
imul
add
addr16
cmp
jge
xchg
ja
add
pop
dec
mov
or
in
lock
je
movsb
mov
test
or
ss
aas
lods
lea
push
pop
mov
js
inc
pop
arpl
popa
subb
sbbl
xor
and
mov
ja
cli
inc
shll
fisubs
sbb
or
or
or
imul
dec
je
mov
xchg
arpl
add
cld
mov
sbb
xchg
or
xchg
or
data16
movl
shrb
aam
inc
loopne
fcoml
mov
or
sbb
call
fmull
xchg
mov
jl
stos
cmpsb
inc
adc
xlat
pop
mov
or
jne
adc
add
pop
mov
dec
lret
sub
fcmovnu
xchg
and
cltd
enter
jmp
int3
dec
stos
pop
cld
ljmp
pop
jbe
or
repz
sub
insb
add
test
sbb
das
mov
jmp
add
dec
icebp
daa
test
and
push
mov
stos
and
out
push
jae
adc
or
pop
pusha
or
out
stos
or
aam
jno
les
adc
pop
les
sub
inc
push
adc
lret
mov
clc
cmp
mov
sbb
jb
inc
mov
adc
mov
dec
std
pop
and
xlat
xchg
repz
incb
loope
cmpl
pop
test
dec
xor
xchg
inc
mov
loope
xor
add
lcall
cmp
cs
pop
or
pop
rolb
subl
sbb
and
adc
push
pop
jge
lods
mov
inc
push
push
cmc
scas
adc
ret
hlt
or
aad
lcall
ja
mov
cmp
jg
gs
cld
add
add
jnp
inc
mov
mov
dec
sub
pop
jns
push
aad
xor
lret
or
jp
inc
mov
pop
test
push
mov
stos
popf
fnstenv
sub
rclb
fs
mov
repz
inc
xchg
jbe
jbe
hlt
xchg
dec
mov
and
xchg
cmp
daa
push
aad
jnp
sub
adc
idiv
dec
call
dec
rorl
pop
xchg
je
test
enter
xor
fs
adc
in
mov
mov
push
test
add
ljmp
mov
xchg
xchg
pop
xchg
push
aam
dec
dec
inc
pop
loop
je
mov
push
cmp
mov
xchg
xchg
rcr
daa
dec
cmc
mov
stc
xchg
call
lea
ss
enter
fwait
mov
jl
or
push
fdivrs
sbb
movb
cmpl
cli
pop
jne
dec
aaa
jecxz
out
pop
cmp
push
test
ja
add
push
xchg
dec
jg
insb
push
or
push
popf
lock
dec
push
and
dec
xorps
testb
call
cltd
mov
outsb
sub
and
pop
gs
inc
jmp
xor
jne
adc
shll
insb
orb
nop
cmp
dec
movsb
lods
mov
or
enter
insb
nop
scas
sbb
push
push
jo
push
cmp
push
add
add
nop
or
stc
jae
jae
cmp
jmp
push
and
xchg
push
pop
lahf
mov
repz
in
push
add
lods
xchg
cmp
lret
inc
push
pop
outsl
adc
and
dec
mov
outsl
cmp
and
stos
mov
pop
or
or
xor
adc
mov
fdivrl
enter
fs
mov
and
nop
and
xchg
xchg
adc
daa
jg
sbb
fwait
nop
and
or
pop
rclb
movsb
mov
mov
jo
loope
adcl
xchg
lret
sbb
sbb
xchg
adc
or
insb
xchg
fnstenv
decb
icebp
lods
dec
jmp
daa
sbb
sbb
data16
sti
pushf
push
cmp
in
and
dec
cmp
adc
in
sub
mov
stos
sti
int3
and
adc
pop
pop
fwait
inc
js
mov
adc
mov
adc
adc
push
push
mov
out
push
daa
inc
add
jmp
ficoml
cmc
dec
das
cld
add
pop
call
sub
add
sub
shrb
sub
mov
push
xor
notb
pop
mov
mov
mov
pop
jp,pn
mov
adc
jmp
punpckhwd
inc
add
shrb
push
pusha
mov
pop
not
mov
hlt
loope
jge
push
lret
imul
add
add
enter
fdivrp
push
jbe
call
adcl
mov
xor
or
inc
dec
cmp
mov
xor
lcall
add
cwtl
adc
mov
and
inc
xorl
push
pusha
aad
xor
and
adc
stos
or
mov
in
push
outsb
jne
lds
leave
mov
mov
push
loop
mov
int
add
mov
cmp
das
xor
popa
fbstp
jecxz
xchg
adc
ljmp
jmp
mov
inc
sarb
mov
mov
repnz
sub
in
inc
lea
push
rorl
lret
cld
xchg
shl
je
bound
shlb
or
mov
push
pop
cmpsb
lods
fs
ds
cmp
test
pop
stos
cld
leave
in
inc
mov
fwait
loope
jp
adc
cli
out
or
outsb
stos
cmpsl
xlat
push
clc
mov
ja
xor
sub
cmp
push
push
or
push
jmp
adc
xchg
dec
test
dec
add
sarb
scas
lods
enter
xchg
sar
insb
cmp
popa
adc
das
xchg
sbb
icebp
or
in
imul
dec
and
cmpsl
fsubs
and
or
sbb
dec
cmp
ljmp
mov
adc
dec
lcall
add
inc
dec
push
cld
enter
imul
cmpsl
cld
inc
sub
sub
add
mov
sbb
dec
ljmp
cltd
ret
lcall
aam
popf
xor
pop
out
roll
cmp
fsts
dec
ret
vmovdqu
jo
lcall
jo
jl
lds
ss
push
fistpll
test
add
call
push
adc
jge
cmp
fstl
test
mov
cmp
xchg
iret
dec
add
xchg
test
pop
and
mov
inc
add
cmp
jb
or
ret
subb
flds
xchg
mov
xchg
inc
mov
cmp
xchg
jecxz
push
bound
dec
out
fistps
dec
out
mov
mov
jge
lret
das
jno
mov
pop
fiadds
mov
jl
out
notl
mov
popf
inc
test
mov
pop
imul
iret
jnp
fsubs
adc
mov
lods
fnstcw
vmovntdq
das
mov
cmpw
push
push
jle
popa
jnp
fstpt
movsl
mov
dec
shlb
call
adc
pop
and
das
stos
pop
aam
and
repnz
mov
test
rcll
jg
loopne
loop
sub
in
pop
push
mov
lds
push
test
adc
rorb
pop
sbb
movhps
repz
mov
pop
or
das
push
cwtl
jae
jb
pop
test
pop
mov
pop
pop
in
testl
push
add
push
pop
dec
adc
push
mov
adc
adc
jns
jne
xlat
movsl
fsubs
or
fldl
mov
push
sahf
ficoms
add
xor
fildll
movsl
hlt
mov
sti
cmp
xchg
repnz
sbb
jp
mov
mov
and
push
mov
fs
sarl
aam
xchg
pop
lcall
sub
mov
push
frstor
insb
popf
jnp
je
sub
bound
sbb
mov
adc
lret
cli
push
pop
jg
dec
adc
jmp
outsb
nop
mov
adc
cmc
fisttpl
xchg
and
in
sub
cmp
xor
dec
cmpl
outsb
in
push
add
pop
pop
lods
in
mov
xchg
dec
push
pop
aam
enter
add
fisubs
outsb
repnz
mov
and
sub
icebp
scas
pushf
add
xchg
flds
je
loop
movsb
cld
cltd
mov
mov
sti
lcall
pop
cli
bound
jno
ds
movb
imul
cs
sub
pop
leave
jns
movsb
inc
push
pushf
pop
inc
aad
dec
push
inc
or
push
or
mov
mov
sbb
sub
leave
test
sub
std
mov
sub
shlb
xchg
pop
pop
cli
ja
rcr
out
dec
push
and
sbb
lea
pop
sbb
adc
jmp
xor
adcl
loopne
xor
loope
js
inc
outsl
and
test
arpl
mov
loop
sbb
cmp
cli
push
es
inc
bound
adc
and
imul
xchg
orl
sbb
ljmp
xor
pop
xor
or
add
outsb
xchg
jmp
push
inc
xchg
test
int
das
out
incb
call
pop
lret
mov
adc
cmp
test
mov
dec
pop
sub
add
shl
jno
js
loope
mov
in
pop
sub
es
push
cmpsl
jmp
mov
inc
inc
ja
xchg
cmpl
repz
inc
popf
aad
xor
jle
add
jne
push
pop
sub
test
push
or
inc
dec
push
push
inc
lock
jmp
push
ja
push
call
flds
and
adc
dec
push
dec
xor
adc
mov
das
lods
cli
lea
xor
out
repz
nop
xlat
and
xor
inc
scas
xchg
mov
int3
mov
pop
pop
cld
push
outsb
push
lcall
adc
or
loop
scas
sbb
das
test
lret
sbb
ljmp
lock
popf
ja
cmp
cmp
cwtl
jns
adc
adc
iret
cmc
sub
shll
jge
push
mov
int3
scas
xlat
pop
inc
pop
fs
xchg
enter
addr16
fidivrl
add
pop
shll
mov
jg
loope
push
in
xchg
pop
push
and
ss
sahf
push
push
rcrl
hlt
jecxz
pusha
sub
mov
jg
xorb
adc
dec
and
inc
je
ret
mov
jae
je
and
mov
mov
or
mov
scas
std
push
mov
les
stc
lods
and
pop
push
jl
push
in
adc
adc
sbb
idivl
ret
add
cld
inc
lds
mov
pop
mov
cs
mov
mov
ds
or
mov
fld
mov
mov
pop
movsl
xchg
push
ss
sub
cmp
in
cmp
xor
adc
add
cli
pop
daa
mov
dec
inc
or
push
add
dec
push
sbbl
mov
push
xchg
imul
loop
imulb
sahf
push
xchg
cmp
cmp
sbb
mov
mov
xchg
test
leave
and
mov
pop
cmp
lods
push
mov
dec
js
scas
cmp
sbb
loop
jmp
hlt
push
mov
inc
pop
fdivrs
xor
outsb
mov
mov
add
adc
fs
data16
rorl
inc
adc
sub
dec
mov
popl
mov
inc
push
lds
loopne
mov
aas
rolb
int3
mov
cmp
fnstsw
movsb
add
dec
cwtl
cld
sbb
rcll
call
inc
pop
inc
xor
xchg
lea
sub
flds
adc
ljmp
inc
jge
dec
jmp
push
add
and
out
push
call
jge
adc
jne
je
push
call
adc
mov
push
cmp
sub
lcall
enter
jns
jmp
ja
jle
mov
sub
cld
pop
pop
sbb
fsubr
leave
sbb
jne
jne
cmp
cltd
dec
gs
inc
movsl
dec
add
addr16
mov
mov
pop
sbb
icebp
pusha
pop
jo
and
adc
rorb
mov
sub
pop
call
add
jmp
test
nop
es
fs
call
pop
fwait
adc
push
ret
xor
fcom
xor
cmp
pop
mov
pop
ss
adc
pop
inc
mov
and
fmull
sub
loop
jg
mov
dec
sub
fimuls
adc
xor
xor
jnp
pop
cmp
push
inc
push
call
das
cmp
xlat
incl
add
xchg
push
mov
in
xor
je
xchg
xchg
mov
mov
inc
ret
mov
adc
call
mov
xchg
sbb
pop
push
mov
adc
lahf
jl
popa
jg
js
dec
cmp
cwtl
es
adc
push
movsb
nop
push
scas
hlt
jne
out
cmpsb
xchg
pop
mov
xchg
daa
pop
jae
dec
sbb
adc
imul
add
lahf
push
push
pop
outsb
lods
jb
cmc
cmpsl
pop
sbb
mov
andb
mov
sbb
and
pusha
divl
mov
mov
mov
pop
lods
lods
adc
dec
testl
test
add
aas
push
call
cmpsb
pop
lea
je
sbb
sahf
jne
pop
xor
sbb
adc
dec
mov
ret
and
jecxz
shrb
add
cmp
sub
scas
cmpsl
fists
lahf
jle
jns
jge
test
daa
add
cwtl
cld
mov
adcb
sbb
xchg
xlat
and
pop
cmp
sub
inc
fsubs
or
stos
fwait
jbe
xchg
repz
cmp
test
push
sbb
push
sbb
loop
pop
jno
out
cmpsb
dec
lods
adc
or
std
lret
inc
out
out
lea
mov
pop
xchg
pop
xchg
pop
cli
and
push
outsl
mov
orb
sbb
fstps
cmp
rolb
popf
cmpl
lret
insl
daa
test
fimull
fidivl
mov
mov
stos
mov
test
daa
xor
or
stc
add
push
pushf
and
adc
xchg
insb
push
or
inc
sbb
jne
mov
and
test
xchg
pop
sti
arpl
sub
adc
mov
dec
add
sbb
aas
je
sub
clc
rcrl
push
xchg
adc
inc
pop
pop
int3
test
js
jl
sub
ret
adcb
adc
je
xor
jne
movsb
mov
xchg
stos
pop
sub
jo
sbb
push
scas
movhps
mov
test
and
pop
cmc
inc
cmp
xchg
lea
es
and
adc
leave
and
popa
repz
movsb
mov
and
test
out
mov
push
hlt
jae
scas
cmp
inc
xor
jbe
dec
push
sahf
les
or
test
icebp
jnp
dec
sti
bound
fcompl
cltd
mov
cmp
pop
sti
arpl
popf
push
push
xlat
das
movsb
aam
jb
pop
decb
in
or
jns
out
stos
jg
shrb
xchg
or
cwtl
and
add
arpl
dec
ja
adc
pop
or
inc
fdivl
mov
push
dec
sbbb
and
int
fwait
sub
xor
push
dec
enter
mov
xchg
push
test
mov
jmp
aam
pop
sbbb
fcoms
adc
jecxz
les
dec
cmovge
outsl
dec
push
ds
push
bound
fadds
mov
and
push
mov
push
enter
push
loop,pn
dec
push
adc
dec
dec
adc
in
fnstsw
aaa
jne
mov
push
dec
stos
fcompl
mov
and
lea
push
adc
jns
ljmp
dec
mov
inc
hlt
repnz
je
stos
test
popf
insl
in
dec
movsl
lret
cmc
and
mov
sub
and
xor
mov
xor
orl
add
les
xor
xchg
sbb
aas
pop
xor
emms
pop
jb
test
and
out
jge
inc
mov
jno
int3
sub
scas
and
test
jne
andps
jmp
lcall
cwtl
lret
sbb
lahf
adc
fildll
fldl
hlt
jne
mov
gs
mov
test
dec
mov
cmp
jecxz
call
and
lret
push
nop
callw
dec
mov
mov
jnp
add
js
pop
dec
adc
outsl
mov
in
adc
jle
mov
xchg
sbb
adc
or
or
inc
or
mov
lret
aad
std
mov
in
xor
or
cmpl
repnz
push
sbb
adc
jp
add
cmpsb
mov
xor
cmpb
test
sti
xchg
inc
cmp
inc
cld
xchg
sahf
in
jmp
and
cmc
push
push
enter
xor
pop
fstps
movsb
and
pushf
sub
xchg
mov
hlt
push
les
lock
or
and
mov
mov
movsb
sahf
inc
pop
sbb
fidivrs
mov
mov
test
cmc
in
or
sub
ucomiss
add
daa
in
and
mov
mov
pop
or
jle
dec
or
mov
cmpsl
pop
dec
add
fcomps
and
rcrl
add
in
ret
xor
adc
mov
pop
inc
in
xchg
hlt
popa
jg
cmp
orb
or
mov
jg
push
sbb
and
push
or
mov
cwtl
aaa
sub
aam
icebp
sub
and
dec
orl
inc
stc
adc
repz
loopne
sub
and
xchg
inc
mov
flds
cmp
jl
or
cmp
add
mov
jle
dec
pop
pop
xor
adc
and
jp
shlb
inc
push
xor
stos
dec
repz
mov
sbb
mov
or
sarl
repnz
loope
push
mov
pusha
in
mov
sbb
sbb
enter
sub
sbb
jle
imul
ret
cwtl
xchg
inc
xchg
and
in
pop
mov
fsubl
mov
dec
mov
iret
cmp
popf
lret
sti
cmpsl
repz
lock
arpl
addl
movsb
inc
daa
jg
std
gs
adc
pop
adc
daa
insb
sub
dec
rcrb
loop
jno
jne
and
fs
xor
out
inc
push
loope
nop
sbb
test
xlat
dec
sbb
or
dec
shll
int
pop
nop
fstpt
dec
and
lahf
inc
mov
cltd
pop
xor
add
sub
imul
jb
xchg
mov
mov
outsl
cmpsb
xchg
add
rcll
adc
mov
or
dec
inc
and
je
fs
xchg
and
dec
pushf
jecxz
fs
mov
sbb
pop
jmp
jecxz
and
icebp
xchg
add
fdivr
jmp
or
fldt
rclb
adc
dec
addb
add
sbb
add
ret
add
inc
jbe
fildll
into
int3
jns
mov
cmp
ds
scas
repnz
and
shr
test
int3
mov
enter
xlat
and
push
rolb
mov
adc
daa
enter
xchg
stos
rcll
push
mov
lea
push
arpl
mov
int3
fstl
fistps
pop
inc
std
mov
cs
dec
aam
mov
lcall
push
inc
cli
dec
pop
pop
push
clc
adc
arpl
and
push
sub
add
loopne
inc
incb
das
mov
pop
push
test
arpl
xchg
cltd
inc
push
sub
xor
add
std
add
sti
add
mov
cli
xor
dec
mov
pop
mov
add
lods
aaa
xor
imul
inc
inc
enter
mov
mov
test
aaa
push
cltd
add
cli
push
push
xchg
lcall
leave
ror
cmp
inc
jb
mov
aad
enter
fisubrs
pop
add
add
sub
mov
adc
mov
call
mov
in
and
out
sbb
enter
jle
test
or
adc
or
jge
clc
decb
scas
mov
dec
lea
or
call
mov
cmp
xchg
jb
mov
mov
imul
sbb
cmc
dec
dec
fldl
and
mov
push
push
push
faddl
mov
cmp
or
dec
out
std
inc
or
inc
ror
cwtl
push
mov
enter
int3
scas
xor
or
xor
push
data16
sbb
cmp
test
shr
adc
dec
scas
int3
pusha
dec
daa
call
test
daa
fcomi
or
das
add
add
dec
lret
js
dec
push
cwtl
mov
push
stos
out
cmp
adc
or
push
mov
mov
and
shrl
mov
mov
int3
stos
sbb
sub
mov
push
mov
sbbb
dec
lods
ficoml
mov
sub
xchg
test
je
mov
sahf
movsb
inc
sub
mov
fistpll
movsl
mulb
cmpb
push
xor
cmpsb
push
cmp
mov
adc
sbb
and
mov
adc
xor
sub
daa
sbb
std
js
dec
inc
mov
and
and
pop
mov
das
push
mov
mov
cmp
sub
loopne
jle
jne
xlat
lds
push
fsubrl
adc
inc
fidivrl
dec
inc
stos
mull
mov
push
inc
dec
lret
xor
inc
pusha
xchg
jbe
jae
mov
and
outsl
in
adc
sbb
add
and
mov
dec
out
leave
mov
sub
cs
lret
jae
imul
jbe
jmp
mov
fs
test
stos
faddl
push
popf
pop
lock
fwait
xchg
cmp
or
adc
call
loop
movsb
test
daa
lock
rclb
mov
adc
cmp
inc
add
nop
fld1
inc
pop
xchg
lret
lret
jle
push
and
sub
ss
mov
fs
or
gs
adc
xor
xor
in
pop
xchg
mov
daa
ljmp
push
shr
dec
test
jo
cmpsb
popf
and
push
cmpsl
mov
in
scas
mov
test
add
loope
add
xchg
adc
fwait
inc
call
inc
jmp
add
adcb
dec
pop
repz
push
jno
dec
js
cmp
int
sub
in
cmpsl
dec
mov
ret
inc
arpl
sbb
clc
pop
cmp
je
ja
lea
pop
dec
mov
jge
fdivs
int
shlb
xor
ds
dec
sub
sti
dec
out
lods
adc
jb
cmp
xchg
xor
clc
fs
fisttps
jg
jb
pop
repnz
daa
jle
fdivp
sbb
aaa
and
mov
jp
sub
mov
dec
test
subl
rclb
xchg
mov
stc
cmp
and
and
jno
or
hlt
cmpsl
jp
shlb
adc
shl
push
jo
dec
rorl
and
shlb
repz
dec
add
or
pushl
add
mov
mov
mov
xchg
push
dec
xchg
xchg
movsl
movsl
jnp
xor
mov
pusha
cld
ret
adc
adc
mov
or
mov
mov
cs
and
add
xchg
cmp
mov
add
dec
cmp
adc
push
outsl
adc
pop
sbb
sub
ficoms
jp
sbb
xlat
mov
call
lds
stos
mov
sbbb
dec
jecxz
daa
push
hlt
cwtl
ret
or
pop
pop
movsl
bound
dec
mov
jge
mov
scas
or
stc
jle
and
mov
dec
aad
push
in
subb
mov
in
dec
adc
or
ja
mov
mov
movb
inc
or
out
shr
adc
rcl
adc
pusha
and
mov
adc
adc
dec
mov
push
add
inc
and
sub
push
pop
adc
ret
jne
push
gs
cmp
lods
push
pop
stos
jnp
push
ljmp
fdivrl
and
in
call
ret
or
int3
dec
and
inc
adc
nop
scas
inc
add
mov
loop
push
adc
push
mov
frstor
out
subl
push
sub
orl
xor
jmp
daa
xchg
cwtl
push
or
int
cli
fst
imulb
push
sbb
xorb
cmp
rclb
mov
cmp
mov
shll
scas
and
ret
xchg
in
lods
adcl
dec
xchg
mov
mov
or
inc
outsl
jg
xchg
or
in
loopne
adc
dec
add
cld
aaa
dec
cmp
dec
or
xchg
mov
or
shr
mov
sub
pop
sub
mov
or
push
sub
das
jle
repnz
dec
call
imull
and
jae
out
xlat
movsb
ret
adc
daa
jno
frstor
or
mov
orl
add
dec
fwait
cwtl
jmp
jo
jl
cmp
cmp
es
pushl
jmp
mov
int
push
dec
pop
hlt
pop
clc
sarl
movl
je
pop
dec
inc
sti
es
testl
sub
inc
mov
inc
outsl
icebp
in
int3
adc
rcrl
inc
fwait
mov
in
mov
loopne
xor
mov
inc
inc
hlt
shl
add
test
adc
fadd
test
cmpb
add
push
or
mov
jmp
sti
push
xchg
xor
jp
mov
in
sub
es
int
hlt
data16
sbb
xchg
bound
adc
mov
xor
push
or
cmp
mov
or
fs
adc
or
add
or
add
add
sub
or
test
jmp
jg
outsb
cmpsb
dec
mov
stc
cmc
or
jle
popf
xor
cmpl
popa
cmp
mov
js
push
xchg
into
inc
in
and
adc
inc
out
sub
push
sbb
mov
sub
add
jae
xor
sub
decl
je
push
inc
and
dec
push
push
sub
je
adc
lcall
lock
fsubrl
int3
scas
and
jae
add
mov
adc
mov
and
int
dec
push
mov
bound
fmull
pop
cmp
popf
or
jg
les
mov
xor
int3
test
mov
mov
pop
mov
adc
inc
or
cmpsb
dec
sub
pushf
hlt
fildl
push
in
pop
shlb
test
jb
mov
or
xor
enter
pop
inc
mov
jae
shlb
or
popf
andl
and
or
test
sbb
cld
std
in
pusha
mov
nop
test
inc
xchg
jne
nop
pop
test
mov
sbb
push
ffree
loope
xor
lea
inc
test
mov
xor
pop
or
sbb
or
cmp
and
sub
mov
or
hlt
pop
hlt
lret
sub
movsb
movsb
xchg
jge
fistpl
or
rclb
out
cmp
mov
sub
dec
notb
sub
xchg
mov
shrb
and
push
xchg
daa
jp
adc
in
scas
into
std
daa
ret
je
cli
jg
js
dec
int
sar
sti
sbb
clc
adc
sbb
inc
jno
lret
lcall
hlt
add
test
xchg
push
jmp
xchg
js
ljmp
pop
adc
mov
les
cmp
arpl
push
pop
dec
push
push
jnp
ja
cs
sbb
popa
adc
xor
cmp
jle
lea
clc
push
ret
stc
int3
add
loope
lock
xchg
adc
push
sbb
repz
fwait
int
sbb
or
pop
fstpl
dec
jmp
pop
adc
ret
daa
cltd
xchg
and
cmp
cs
aam
inc
cmp
mov
repnz
sub
push
xchg
adc
pusha
xchg
or
cmp
dec
or
cmp
jb
orb
rcr
sub
adc
je
xlat
xchg
mov
shll
adc
inc
sbb
pop
dec
jno
adc
in
xorl
mov
fwait
outsb
sbb
and
aam
and
push
and
jl
cmp
jle
mov
daa
jge
stc
sar
mov
mov
cmc
or
jl
or
inc
loope
add
jns
es
and
and
mov
pop
pop
call
or
jge
movsb
push
and
sbb
pop
cmp
cs
mov
addb
pxor
icebp
ss
and
add
inc
jne
ret
cltd
mov
pop
pop
and
mov
std
incb
and
lods
mov
xchg
dec
subb
or
jb
movl
xor
sub
push
add
xchg
cmp
out
sub
or
inc
adc
pop
or
inc
or
inc
cltd
inc
sarb
int
pusha
fldlg2
fldl
cmp
icebp
push
adcb
mov
loopne
xchg
sub
cmp
psrlw
add
movsbl
mov
pop
cld
notl
xor
sbb
lock
mov
add
jb
mov
xor
xor
fnstenv
test
dec
loope
pop
fdivl
jmp
scas
dec
mov
mov
jnp
fldl
or
adc
mov
adc
sbb
mov
jbe
cmp
inc
fsubrp
push
pop
fucomp
in
fcompl
movsl
imul
dec
inc
mov
xor
subb
pop
pop
xor
jle
mov
popa
add
int3
pushf
js
fmulp
xchg
push
mov
stc
sub
xor
xor
ret
jo
in
jge
sbb
mov
sbb
and
outsb
mov
jno
divl
jns
enter
call
xchg
pop
and
xchg
sub
mov
test
call
xchg
ds
cmp
ljmp
mov
pop
aad
jle
xor
mov
xchg
or
adc
negb
xor
and
ret
lods
and
inc
xchg
inc
inc
jns
sbb
inc
fildll
or
andl
adc
pop
cmp
cld
and
cltd
dec
dec
aas
dec
cs
xor
aad
or
xor
sub
call
or
mov
pop
or
or
movsl
or
rcrb
cld
lret
or
mov
pop
out
ds
sbb
pop
push
scas
xchg
das
and
mov
loope
pop
repnz
adc
adc
sbb
pop
hlt
je
shlb
leave
sub
mov
enter
rcll
sbb
inc
sbb
je
cmp
add
xchg
xor
call
test
xchg
movsb
xlat
inc
pop
ret
mov
pop
aam
inc
mov
pop
int3
adc
rclb
push
mov
mov
jae
mov
dec
jnp
cmp
inc
ss
dec
lock
mov
dec
or
js
mov
hlt
cmp
call
icebp
jle
ja
int
add
xlat
xchg
cmp
push
xchg
add
lods
je
dec
cmp
mov
cltd
mov
adc
out
sub
mov
dec
scas
and
adcl
negb
out
inc
cmpsb
je
add
call
mov
cmpsl
push
mov
aaa
add
push
cwtl
and
xor
in
xchg
repz
sbb
push
fisttpl
test
test
inc
lods
xor
lret
or
jbe
or
and
pop
and
inc
pop
dec
shr
filds
jle
inc
xor
dec
das
pop
and
sub
inc
fdivrs
or
mov
cltd
icebp
xchg
push
add
mov
ljmp
add
lds
pusha
or
fists
dec
sub
xchg
and
sub
sbb
ret
jne
arpl
jmp
dec
lds
shll
cmp
xchg
test
inc
xor
and
scas
dec
push
insl
and
rcl
jne
nop
insl
fistpll
fimull
or
adc
scas
inc
loop
lret
in
fsts
and
daa
mov
inc
sbb
ret
insb
sbb
push
or
mov
xor
lea
int
and
xchg
push
add
ret
jne
data16
pop
repnz
jmp
int
out
adc
ret
ja
incl
sbb
cmp
jne
xchg
pop
or
jl
iret
clc
push
pop
sbb
lds
mov
ljmp
icebp
cs
fbld
adc
push
push
lret
ret
add
cmpsb
mov
and
scas
std
fwait
xchg
mov
call
mov
dec
ret
dec
xor
jne
cmp
lods
or
pop
jo
adc
mov
dec
pop
add
xor
pop
fidivrs
jae
out
je
repnz
pop
mov
and
add
pop
jmp
repnz
das
mov
jge
xor
push
daa
mov
adc
cmp
adc
jne
ja
ret
add
jmp
or
pop
pop
fadd
push
data16
mov
sbb
mov
ret
sti
nop
mov
out
scas
sahf
out
ficoms
sub
inc
mov
jbe
call
and
ret
xor
out
andb
adc
mov
xchg
adc
inc
repz
out
xchg
inc
sbb
or
push
dec
pop
push
add
jle
push
fidivs
in
pusha
xchg
lret
or
add
mov
jmp
loope
pop
fwait
mov
mov
shlb
push
in
iret
sti
add
in
popa
lods
adc
pusha
test
or
dec
insb
xchg
pop
inc
push
mov
fsubl
rorl
scas
or
push
push
test
lcall
add
mov
or
loope
rolb
jmp
hlt
pop
roll
add
add
pop
movb
dec
loop
bound
xor
lods
and
jge
pop
mov
and
add
mov
fnstcw
fbstp
and
testl
add
jge
call
push
push
push
and
inc
cli
pop
data16
decl
xor
cs
outsb
cmp
pop
or
jle
jg
mov
adc
fiadds
mov
out
push
les
int
movsl
leave
fbstp
xor
and
les
fwait
jno
dec
adc
and
enter
pop
pushf
out
push
fdiv
jp
xchg
shll
add
cli
sub
ret
cmp
xchg
pop
inc
mov
sub
jge
mov
sti
nop
cmp
clc
lcall
inc
pop
push
push
aas
add
call
push
lds
enter
das
adc
sub
mov
pop
ret
add
ljmp
xor
push
sbb
cmp
ss
mov
leave
rolb
xor
mov
add
jne
popf
ja
in
mov
aam
cmpl
jecxz
lods
stos
and
push
jg
or
and
fwait
cmp
adc
adc
dec
jmp
lea
push
push
cmp
loope
push
xchg
sub
mov
add
lods
or
jl
xchg
mov
testl
dec
inc
or
das
jle
ret
fbstp
jl
adc
mov
sets
dec
rorb
daa
cli
cli
inc
ss
and
lea
ss
leave
inc
sub
adc
mov
xchg
push
inc
jns
mov
test
pop
out
fdivrs
mov
cmc
or
inc
inc
addb
je
push
call
fnstcw
mov
adc
dec
xor
adc
rol
imul
call
pusha
push
push
jl
jmp
outsl
mov
ja
je
dec
add
jg
icebp
inc
outsl
sbb
push
leave
inc
add
mov
ret
sbb
jmp
hlt
add
std
rolb
add
dec
and
movb
shlb
enter
or
sti
adc
andb
dec
cmpsl
push
aam
pusha
sarb
mov
xor
add
ret
scas
std
inc
movsb
mov
and
jae
jns
outsl
test
add
or
insl
clc
mov
or
mov
stc
mov
ds
dec
mov
imul
cmp
jl
cmp
call
rcrb
cmp
decb
subl
push
sbb
ret
mov
cmpsl
cmp
push
push
inc
and
or
dec
ret
movsb
orb
adc
sti
jbe
push
daa
clc
add
inc
push
cld
lret
ja
sbb
jg
push
xor
pop
xchg
push
in
lods
imulb
push
jmp
jnp
sbb
add
cmovs
pop
push
fisubrs
inc
or
push
xchg
ret
push
cld
lods
jle
add
sub
adc
or
sub
push
or
cmpsl
sbbl
cmp
lret
sti
aaa
lds
mov
test
ret
sub
ds
mov
pop
sub
orb
mov
jne
xlat
jb
and
sarl
fldt
xchg
push
adc
mov
ret
out
xchg
inc
inc
push
or
or
dec
jbe
mov
in
xor
mov
rcrl
add
sub
pop
or
adc
adc
dec
push
pop
or
repnz
test
pop
push
add
clc
add
dec
je
add
inc
add
or
push
call
and
push
jnp
cmpsl
orb
jns
dec
dec
pushf
insl
push
lea
xor
adc
nop
dec
in
jnp
jne
call
push
mov
push
pop
ja
cld
xchg
mov
mov
push
rcl
add
test
mov
mov
cmp
je
or
mov
leave
or
pop
sub
cmp
mov
nop
and
sub
add
pop
cltd
add
adc
or
mov
or
mov
or
mov
or
mov
cmc
and
push
sbb
incl
dec
or
push
popf
sti
and
push
notb
jns
dec
add
pop
xchg
push
sbb
lret
stos
fsts
inc
mov
jnp
mov
push
and
push
lea
cwtl
insl
or
arpl
and
rep
inc
lea
mov
stos
mov
and
in
and
ret
sub
sbb
cli
scas
pop
mov
test
pop
stos
je
cmpb
je
push
sti
mov
push
mov
dec
stos
stc
movsl
push
jnp
push
cltd
adc
push
pop
sarl
or
movsl
movsb
sbb
stos
pusha
lret
xchg
and
stos
leave
cli
jnp
push
test
sub
adc
mov
add
ljmp
lods
incl
cmc
das
or
rclb
jbe
dec
insl
push
push
dec
mov
pop
enter
sbbb
lock
push
sub
shll
fs
ret
jg
dec
mov
dec
sbb
mov
pop
jbe
jb
aaa
adc
call
int3
ret
pop
xor
push
loop
and
fildll
add
push
out
das
push
pop
push
push
xchg
movsb
cmp
jg
mov
jg
mov
cld
jno
xor
test
icebp
jno
sub
lods
mov
pop
lds
and
adc
jne
pop
cwtl
mov
inc
mov
jl
repnz
adc
xchg
gs
sahf
mov
xchg
and
or
cmpl
lock
leave
lahf
stos
inc
outsl
test
and
faddp
lret
fidivrl
test
or
int
or
cmpb
sub
enter
dec
dec
mov
xor
mov
push
int
fmuls
negl
imul
ja
stc
mov
and
add
loopne
mov
clc
sub
movsb
mov
inc
psrlq
pusha
stc
pop
jecxz
sti
push
pop
pop
jne
mov
jle
inc
xchg
xchg
rolb
dec
cmp
outsl
inc
cmp
inc
out
in
icebp
xchg
push
xchg
aas
insl
jle
jo
xchg
out
mov
insb
fisttpl
test
jge
enter
enter
or
sbb
xor
inc
nop
cld
out
cmp
outsl
ljmp
dec
sbbb
mov
or
xor
leave
xchg
clc
xchg
pop
mov
mov
mov
and
clc
mov
xor
jle
pop
lret
popa
lea
and
ss
repnz
mov
dec
and
pusha
fmuls
push
sti
or
mov
adcl
sub
cltd
sub
sar
or
into
adc
pop
icebp
outsb
daa
rorl
jb
pop
cli
xor
or
sbb
push
xor
setno
dec
in
shl
inc
js
push
je
push
lea
and
push
push
pusha
or
ret
push
dec
push
ret
push
pop
sbb
std
xor
dec
out
test
and
test
test
push
test
add
lea
repnz
sub
mov
push
out
and
rcrb
aaa
ret
test
fs
std
mov
sub
lret
cld
xor
rcrl
ja
fisubrs
dec
inc
push
ret
jo
jmp
sub
sub
cmp
push
push
shrl
push
sub
push
jg
sub
cltd
mov
cli
lods
dec
and
inc
adc
aad
push
leave
inc
mov
inc
mov
leave
mov
push
xor
ret
cmp
push
dec
adc
cmp
sub
dec
pop
mov
int3
sub
adc
inc
dec
sub
jl
mov
daa
ficoms
and
xor
cmp
cli
add
add
xor
cmp
xchg
adc
jne
mov
sbb
jne
ja
push
call
in
repnz
mov
adcl
shll
fistps
mov
push
cltd
sbb
sbb
sub
cwtl
pop
call
rcrl
es
add
call
sub
pop
repnz
aam
xchg
cwtl
in
ror
out
xchg
xchg
push
xchg
pusha
add
jle
mov
roll
mov
adc
es
push
mov
add
fs
cli
loop
mov
adc
fnstenv
pusha
pop
pushf
loopne
or
fwait
cmp
pop
or
cli
dec
xor
sbb
push
xor
stos
loop
xlat
ljmp
clc
lea
dec
inc
xchg
cmp
lret
out
push
es
xlat
mov
fwait
mov
les
add
xchg
insl
mov
mov
push
cmp
adc
call
or
fsubrs
icebp
jbe
daa
std
xchg
aam
sbb
and
pop
xor
out
movsb
mov
inc
mov
das
test
pop
test
sbb
cltd
subl
push
mov
jno
cmp
lret
repz
das
ljmp
dec
cmp
jne
jbe
push
inc
es
inc
hlt
mov
xchg
fstpt
fdivp
mov
or
out
pop
and
push
push
sti
xor
pop
fsubs
dec
cmc
outsb
test
sti
test
mov
lods
or
std
jbe
jnp
sub
je
xchg
nop
add
rcrb
flds
adc
sti
sub
stos
rolb
dec
adc
dec
pop
ds
repz
daa
arpl
cmp
std
adc
call
arpl
ds
lret
push
sub
arpl
cmp
mov
and
mov
scas
push
nop
jge
sbb
emms
aam
inc
cmp
daa
sub
xor
daa
sub
pop
xor
and
ljmp
jle
add
icebp
inc
push
mov
fs
clc
sub
xor
cmp
sbb
mov
lahf
das
push
dec
in
dec
dec
fildll
std
ds
lods
sub
and
sbb
sbb
cs
mov
loop
inc
pusha
pop
xor
out
enter
mov
push
xor
rolb
or
rclb
pop
adc
dec
pusha
xchg
punpcklbw
dec
movb
adc
add
mov
adc
push
sub
sbb
xchg
out
cmpsb
cmp
dec
popa
jge
or
sbb
mov
xor
scas
xor
inc
dec
sbb
fisttpl
leave
jo
repnz
add
inc
ss
test
adc
inc
push
mov
dec
rolb
push
into
dec
dec
push
movsl
mov
in
rorb
or
or
add
dec
into
or
xchg
xor
mov
push
rcrl
stc
sti
xchg
and
mov
push
push
sub
dec
jae
pop
cmpl
out
rcll
adc
xchg
pop
mov
orl
inc
mov
push
xor
mov
xchg
in
mov
or
pusha
cli
mov
leave
cmp
xor
and
movsl
cmc
into
lea
push
inc
add
call
cmp
pop
inc
pop
pop
loop
xor
call
lret
and
int3
out
dec
add
pusha
fsubr
mov
inc
pop
jno
jmp
push
rorb
lret
addl
gs
jge
adc
pop
mov
jl
add
inc
pop
das
xor
leave
nop
insb
adc
inc
gs
add
and
mov
adc
adc
adc
mov
jne
inc
adc
jmp
sbb
popf
rorl
daa
out
push
xchg
ret
xchg
movsb
and
mov
push
dec
mov
xor
ds
jne
sub
rcl
xorb
fldenv
jge
call
inc
sub
or
bound
fsubr
cwtl
xor
inc
add
repnz
in
inc
pop
sub
sbbb
scas
mov
shld
pop
aas
nop
or
dec
lock
nop
daa
jge
dec
adc
aad
int3
jg
and
ret
lods
sub
mov
mov
stos
dec
xor
inc
adc
and
sub
mov
inc
andl
pop
ss
mov
push
dec
push
and
xor
adc
rcr
push
testl
sbb
sbb
pop
pop
push
pop
movsb
and
out
sbb
outsl
stc
aam
and
jnp
push
stc
roll
jmp
dec
cmp
and
xchg
addr16
push
cmpsl
or
dec
stos
dec
addr16
jmp
jne
mov
sub
xlat
clc
loopne
jl
sti
rclb
add
inc
xlat
mov
sub
sub
rorl
push
dec
mulb
and
xor
or
loop
mov
jnp
push
fstl
push
mov
add
mov
andl
aam
loopne
sbb
lock
or
repz
je
imulb
mov
xor
dec
inc
xchg
xchg
push
mov
out
push
mov
xchg
and
jg
arpl
cmpl
mov
addr16
pop
dec
jge
xchg
and
adc
cmp
adc
call
test
xchg
shrl
cld
sub
in
call
push
pop
test
lods
xchg
test
arpl
out
cmp
xchg
popa
call
dec
mov
mov
popl
jae
in
lret
shlb
pop
fmul
adc
mov
imul
arpl
jmp
aas
nopl
xchg
xchg
rorb
jge
test
push
sub
test
pop
pop
push
pop
rcrl
icebp
jns
inc
xor
scas
int3
call
xchg
add
hlt
push
call
lahf
sbb
ds
dec
fisubs
rorb
lea
mov
xchg
xchg
inc
rolb
je
or
jne
outsb
leave
jbe
andnps
fwait
in
dec
nop
add
sti
mov
sbb
pop
in
xorb
dec
inc
imul
cmp
test
ret
sbb
adc
and
mov
lods
cmp
push
inc
inc
mov
das
arpl
inc
jmp
sbb
pop
nop
pop
call
ljmp
and
push
fsubrp
push
fdivl
xor
xor
mov
fs
jnp
dec
push
push
push
ds
and
hlt
std
dec
aas
cmp
dec
loope
lahf
pop
add
xchg
inc
inc
call
adc
movsb
shl
pop
pop
dec
mov
out
add
xor
push
push
stos
loopne
mov
inc
ds
jne
add
shl
sub
xor
pushf
mov
cld
popf
lcall
xchg
inc
ljmp
mov
cltd
inc
mov
insb
shlb
mov
cmp
lea
dec
jae,pt
mov
addr16
xchg
into
dec
cmp
imul
pop
add
arpl
adcb
call
and
adc
mov
mov
call
add
cmp
sub
dec
in
ret
in
xchg
xor
cli
mov
adc
outsb
es
lret
es
dec
push
pop
in
les
out
push
clc
jle
adc
inc
pop
or
push
outsb
test
imul
mov
mov
rorb
and
cld
push
js
pop
mov
xchg
and
dec
sub
add
push
xchg
adcb
push
rcll
and
pop
push
sbb
cmpsb
dec
loope
or
xor
popa
pop
loope
mull
add
sarb
mov
cwtl
stc
into
push
test
pop
adc
xor
call
add
movsb
call
in
mov
add
inc
fsubl
push
movsb
push
or
adc
sbb
and
adc
adc
adc
and
imul
or
add
mov
and
or
or
push
test
push
add
in
mov
repz
mov
stos
hlt
fnstcw
jl
in
clc
popa
int
mov
clc
push
dec
jno
cs
cmp
or
or
mov
sub
pop
pop
and
test
test
leave
mov
or
jecxz
xchg
mov
mov
lret
jns
fdiv
cmp
jg
cmp
call
mulb
leave
inc
jns
in
push
cmp
in
mov
es
daa
je
inc
or
and
mov
mov
mov
cmp
cmc
inc
jp
testl
xchg
xchg
rclb
push
hlt
add
push
mov
ret
aam
sub
arpl
mov
jne
divb
lret
push
pop
je
fwait
insb
testl
addr16
sti
testl
nop
js
int
xchg
pop
dec
inc
adcl
ds
cmp
fs
sub
mov
loope
jmp
add
xchg
pop
add
movl
push
xor
add
mov
xor
lret
outsb
call
enter
scas
and
rcrb
scas
daa
rclb
imul
add
add
mov
adc
daa
adc
add
pop
test
ljmp
pop
mov
loopnew
idiv
ret
or
es
add
push
push
adc
roll
inc
call
pop
adc
jg
subl
mov
scas
int
fisubl
in
scas
imul
inc
adc
inc
inc
xorb
xor
in
adc
mov
repnz
jne
lret
insl
repz
idivl
adc
test
mov
or
jmp
lret
jb
in
xor
lock
push
pop
test
lret
mov
jmp
dec
xor
jle
enter
jp
and
xor
xchg
sub
xchg
lret
dec
xlat
sbb
and
daa
shl
or
ss
inc
addr16
inc
jl
jg
sub
mov
dec
imul
daa
sbb
mov
iret
fsts
add
pop
sub
push
push
xor
dec
sub
adc
cmc
sub
push
inc
leave
fsts
mov
mov
rorl
or
popa
adc
fsub
enter
dec
jns
or
sbb
fidivrl
add
pop
ret
sub
or
inc
roll
sub
rclb
lcall
jle
adc
je
sbb
push
mov
lret
jne
push
je
sbb
sbb
imul
mov
push
mov
sub
arpl
aam
rcrl
std
test
lret
rol
ds
lds
clc
sbb
push
std
fs
push
add
pop
mov
xor
mov
adc
fcoml
inc
out
mov
out
sahf
dec
rorb
sbb
test
xor
je
mov
jne
lock
xor
mov
fisubs
and
out
push
out
sub
xchg
xchg
cmp
sub
and
scas
jmp
testb
dec
popf
pop
cmp
repz
rcr
sbb
sbb
or
fistps
fisttpl
icebp
out
xor
pop
loopne
mov
cmp
mov
fsubrs
adc
or
jne
negb
add
rcrb
mov
mov
xor
mov
pop
dec
inc
dec
and
inc
loope
mov
jbe
mov
cmp
push
clc
push
push
movsb
mov
push
popf
adc
push
add
push
nop
pusha
jecxz
enter
pusha
mov
push
dec
push
ret
push
or
push
icebp
adc
and
mov
or
cld
add
call
mov
add
cmpsl
cmp
movsb
movl
xchg
xor
mov
sub
push
popf
pusha
or
push
jo
jmp
fadds
jmp
jl
push
into
xor
push
rol
call
mov
leave
mov
addb
xchg
popa
mov
call
movsb
xchg
adc
and
pop
pop
sub
or
shlb
icebp
and
push
push
cltd
pop
popf
pusha
dec
outsb
je
cmp
mov
mov
mov
mov
inc
ljmp
call
push
enter
dec
and
adc
inc
add
xchg
mov
jl
fildl
sub
je
dec
jne
adc
shrb
sbb
push
mov
nop
cmp
inc
add
hlt
and
jle
xlat
loopne
or
push
cmp
jg
push
mov
push
sub
cmp
mov
cmp
push
sysenter
push
repnz
lret
cmp
lahf
jno
push
mov
out
xor
cmp
or
pop
pop
jge
je
or
and
pusha
mov
add
inc
cmp
jl
repz
cmp
shrb
sbb
fmull
cmpsb
push
inc
subl
test
stos
xchg
inc
sub
and
sub
fnsave
fsts
cmp
pushf
les
inc
dec
pusha
out
and
pop
call
mov
push
push
pop
test
cli
test
push
cmp
or
pop
xor
sbb
mov
popa
pushf
stos
outsl
mov
adc
cmpsl
xchg
or
push
loopne
mov
test
or
jecxz
cmp
aas
mov
call
push
adc
rcrb
and
pop
incb
pop
pop
sub
in
pop
pusha
pop
repnz
dec
or
mov
addb
jle
jmp
mov
test
pusha
in
enter
dec
mov
sub
rcll
pop
and
xchg
and
jne
test
mov
das
cmp
jne
xor
mov
enter
ficoms
stc
xchg
and
and
and
fisttpll
dec
mov
or
cmp
mov
jne
push
xor
leave
das
dec
fildl
xchg
add
bnd
sub
pandn
and
cmpsl
sbb
loop
xchg
clc
cmp
test
jno
je
je
bound
inc
add
mov
mov
adc
add
push
xchg
mov
lods
into
inc
fs
xor
cmp
lahf
jge
add
popa
mov
out
add
fmull
sub
ljmp
mov
xchg
cmp
imul
push
subb
outsl
xchg
in
inc
fcoml
cmp
call
fs
sbb
dec
xchg
mov
mov
sub
add
lea
mov
add
gs
mull
popa
jne
adcl
cmp
pop
cmp
mov
xor
and
cmpsl
sub
push
push
sti
cmp
sub
fcoms
call
clc
ja
and
or
les
and
mov
sub
mov
popf
inc
fistps
xchg
push
clc
stc
lds
and
dec
add
push
inc
add
push
add
mov
pop
ret
call
jno
or
imul
outsl
inc
icebp
mulb
ljmp
inc
lcall
lods
mov
mov
xor
xchg
arpl
pop
and
xor
adc
aad
push
push
in
fucomp
sub
xlat
and
mov
stc
cld
cmp
jnp
fistpl
cltd
loop
push
fnstenv
mov
xlat
push
jo
mov
push
stc
sub
pusha
mov
mov
cmp
cmp
loop
loop
adc
cmp
rcll
pushf
and
push
mov
lret
stc
mov
pop
mov
sbb
sbb
xlat
push
dec
pop
push
neg
mov
add
sbb
ret
rcr
mov
mov
add
xchg
rorb
inc
adcl
mov
cltd
add
call
mov
cmp
popf
pop
cmp
sub
out
ss
pop
mov
mov
jb
cwtl
jge
lea
mov
inc
in
push
ljmp
cmp
lds
in
inc
inc
jmp
dec
adc
stos
outsb
cli
or
push
sti
sub
jg
dec
xor
jmp
inc
bound
dec
movsb
adc
cmp
pusha
jne
and
int
mov
leave
push
push
imul
shrl
push
adc
call
jns
adc
dec
jecxz
ret
divb
and
adc
call
dec
inc
adc
or
xchg
and
ret
mov
or
add
pushf
inc
add
pop
push
int3
mov
nop
xchg
xchg
jmp
aam
jecxz
xchg
cli
loopne
pusha
dec
or
jl
jne
sarb
je
fldt
orb
insb
push
inc
loope
lds
mov
fs
into
xor
fwait
repz
notb
ljmp
adc
jo
ret
or
inc
and
lahf
mov
mov
and
mov
ret
lcall
scas
jnp
jne
mov
mov
push
cmpsb
pushl
into
mov
insb
push
mov
mov
je
inc
add
sbb
jns
mov
adc
push
dec
xchg
xchg
mov
repnz
push
pop
pop
call
inc
dec
and
sub
dec
push
imul
fst
fcoml
dec
test
test
fs
adc
inc
decl
adc
cmc
notb
into
fcoms
loopne
loope
or
push
xor
push
pop
or
hlt
mov
imul
push
repz
mov
jns
andb
mov
int3
mov
mov
xor
sub
or
call
sub
inc
xchg
mov
clc
gs
xor
pop
jmp
sbb
sbb
dec
jp
movsb
dec
adc
test
mov
adc
les
pop
cmp
cmovs
dec
xchg
dec
mov
lods
sub
dec
lret
sub
aad
mov
inc
loope
iret
pop
sub
sub
insb
inc
or
je
push
and
pop
pop
addr16
dec
push
and
push
call
pop
std
push
xor
dec
dec
dec
pushf
stc
adcl
push
jle
lea
jg
dec
pop
fwait
lods
mov
push
popa
stos
mov
dec
or
dec
add
xchg
idivb
mov
sub
cmp
or
or
dec
mov
jae
js
or
aas
dec
jne
lock
sub
pop
dec
mov
clc
pop
mov
sub
mov
das
mov
sub
hlt
repz
jg
jnp
or
jae
jb
hlt
ret
dec
arpl
mov
jo
and
ds
sahf
ret
mov
bound
pop
add
sbb
or
cld
enter
fcmovnb
dec
add
iret
adcb
push
push
stos
arpl
rcrl
call
enter
rolb
and
or
sbb
rclb
cmp
cmp
ret
adc
aam
and
adc
aas
sub
pop
xchg
cmp
inc
mov
sbb
cltd
inc
xchg
push
dec
mov
add
mov
cmp
aam
sub
or
add
xor
or
mov
scas
mov
inc
test
movsl
and
shlb
lods
pop
sub
jle
dec
popa
inc
lods
add
or
mov
ret
dec
mov
cmovs
adc
sub
dec
pop
dec
and
dec
sbb
inc
scas
cmovg
mov
in
and
jno
les
fcoms
mov
fimull
xchg
sub
push
inc
xchg
pop
testb
adc
sub
dec
sbb
sub
cmp
and
leave
dec
cltd
inc
xchg
push
sub
insb
std
and
adc
lret
fadd
jge
dec
jmp
or
add
pop
in
jmp
jle
jp
outsl
adc
xchg
push
stos
lods
pop
test
in
sbb
int3
jne
sub
ret
pop
imul
and
lock
jbe
pop
cmp
cmc
imul
dec
jbe
adc
sbb
outsl
out
or
add
or
add
pop
inc
push
jbe
in
adc
aaa
outsb
xchg
shl
mov
dec
rcl
in
push
and
mov
in
xchg
jge
movsl
cwtl
test
test
je
mov
xor
test
and
jmp
push
push
fildll
dec
adc
push
push
jl
push
fcoms
je
imul
into
pop
loop
out
push
je
shrb
dec
mov
bound
es
scas
adc
cmp
inc
das
cmpsl
or
jne
cs
ljmp
inc
sbb
je
and
insl
lea
sbb
loopne
push
cmpsl
jl
idivb
and
push
test
push
push
xchg
xor
sub
or
xchg
mov
dec
fsts
push
push
int3
inc
insl
mov
sub
push
xchg
insl
jb
cmpsb
and
dec
pop
sbb
mov
aam
and
scas
mov
jg
lock
imul
insb
xlat
push
xchg
fistps
cmp
adc
jnp
jle
jl
std
add
xor
rcll
pop
or
daa
dec
add
and
push
jne
jns
xor
mov
fisubrl
sub
mov
pop
or
lret
mov
or
adc
call
loop
dec
std
xchg
adc
push
push
call
jbe
fs
and
sub
add
jne
ds
pop
push
push
push
dec
jmp
lea
dec
push
int
mov
test
jb
push
mov
jbe
fwait
push
push
dec
outsb
pop
mov
xchg
sub
push
push
mov
dec
iret
dec
aad
fisttpl
scas
stos
rol
sahf
pop
std
loopne
lock
xor
mov
leave
xor
push
add
shr
inc
mov
xchg
or
lea
push
mov
insb
inc
inc
pusha
lahf
push
add
out
mov
sub
xor
push
mov
sbb
inc
cmc
jne
cmpsb
inc
and
jo
call
and
xchg
ret
sub
push
push
hlt
cmpsl
pop
cmp
or
dec
cli
push
add
xor
pop
pop
mov
sbb
cltd
pop
pop
inc
fsts
in
gs
sub
inc
push
ljmp
fidivs
pop
out
xchg
add
sub
mov
mov
dec
push
shl
pop
sub
add
push
retw
inc
dec
je
ret
aad
mov
inc
andl
mov
daa
push
push
jmp
pop
in
loop
loopne
inc
add
rclb
and
scas
mov
daa
decb
rcrb
lahf
ret
lds
in
mov
xchg
cs
movsl
jne
cli
push
ret
das
inc
and
jb
jo
inc
std
sarb
daa
les
push
mov
pushf
stc
je
xor
fnsave
add
jmp
sbb
jge
neg
sbb
add
pop
push
dec
push
in
fcomps
lcall
neg
cmp
push
mov
pusha
jmp
push
pop
inc
add
and
cmp
aad
mov
aam
out
adc
inc
cmp
test
ljmp
ror
push
notl
inc
stc
cmp
xor
sbb
add
sub
add
cltd
testl
leave
push
push
and
add
adc
push
sbb
mov
aad
jbe
sbb
addb
hlt
push
dec
mov
mov
add
mov
pop
sbb
adc
pusha
mov
rcrb
add
das
mov
fnstcw
adc
or
mov
adc
das
push
xor
das
push
dec
pop
push
xchg
aas
leave
clc
adc
bound
cmp
pop
aas
adc
mov
cmp
call
test
imul
push
mov
push
mov
outsb
in
lret
sub
push
or
add
pusha
xchg
lcall
lret
pushf
pop
adc
mov
and
nop
and
shlb
and
sbb
push
jnp
cmp
test
lock
test
iret
add
add
shrl
bound
insb
das
add
inc
or
mov
icebp
je
adc
call
fsubrp
mov
push
add
dec
pop
pop
or
push
call
inc
inc
into
addb
sub
mov
mov
in
ljmp
add
enter
aam
add
xchg
sub
jb
push
dec
or
xchg
les
cmpsb
mov
or
adc
mov
call
mov
ret
cmp
imul
push
call
or
negl
sub
orl
push
out
je
fsub
mov
push
and
xor
stos
lods
jg,pn
cmpsl
fsubr
pop
cmp
xor
mov
adc
cmp
negb
dec
xor
cmpsl
into
xchg
leave
or
sbb
sub
sub
cmp
add
fimuls
je
xchg
pop
xor
je
or
js
sub
mov
push
push
mov
mov
es
hlt
sub
add
daa
test
add
push
adc
or
inc
inc
dec
adc
push
jg
loop,pt
dec
popa
sbb
jl
ret
pop
inc
pop
mov
xchg
or
insb
and
cmp
popf
push
push
dec
xchg
mov
push
scas
fprem
cli
not
dec
test
jecxz
nop
decb
and
sub
shll
cmp
add
or
inc
dec
adc
mov
inc
insb
push
push
cmp
rcl
pop
add
adc
lods
cmpb
inc
cs
jo
mov
cmp
loope
push
adc
mov
cmp
jnp
xchg
xor
push
jecxz
jns
fimull
mov
test
xchg
nop
adc
jo
xchg
inc
ss
mov
iret
adc
cli
adc
dec
es
into
jl
cli
or
xchg
and
aad
fcoms
push
inc
fs
pop
add
cwtl
xchg
sahf
and
ja
jmp
push
and
and
addb
mov
call
popf
lret
repnz
lds
jne
jge
sub
adc
data16
fstpl
mov
mov
mov
xchg
test
cld
adc
rclb
pop
enter
loope
cmp
mov
push
cmp
lods
mov
dec
es
mov
adc
pop
dec
je
push
or
repnz
jp
clc
xchg
nop
cmp
mov
mov
notb
lea
nop
mov
xchg
cmp
cmp
xor
or
ss
mov
loop
push
cmpsl
negb
call
leave
mov
cltd
pusha
rcll
jmp
push
addr16
clc
mov
test
and
xchg
les
and
pop
add
jb
pop
and
fdivr
cwtl
cmp
inc
je
rolb
xor
ljmp
cmp
incb
in
es
daa
je
pop
add
bound
jl
push
or
insb
icebp
sub
jl
gs
pop
fwait
and
test
and
push
xchg
push
sbb
dec
jge
aas
inc
xchg
les
add
outsl
or
mov
ss
or
or
push
jo
rcll
add
jmp
lret
notb
mov
mov
lods
sbb
lea
pop
inc
xchg
imul
test
adc
and
enter
sbb
push
shl
push
push
call
xor
xchg
add
cmp
call
mov
add
mov
xor
je
ficompl
sbb
lcall
dec
nop
xor
js
fdivs
push
push
lahf
push
sbb
adcb
and
andl
cwtl
insb
in
xchg
cltd
cmp
sub
push
leave
fldcw
ret
out
pop
in
add
daa
aam
push
sub
xor
xor
rcrb
mov
xor
dec
xchg
mov
inc
lea
dec
xchg
add
inc
add
stos
subb
push
push
push
add
and
adc
int
shr
icebp
jl
loop
inc
inc
add
sub
clc
arpl
sarb
and
push
mov
push
or
dec
fs
fcmovb
adc
cmp
mov
pushl
lret
add
loope
incl
clc
add
rolb
popa
mov
test
push
inc
movsb
push
ret
cmp
minps
mov
sub
fmuls
repnz
fiadds
movl
adc
push
test
rcrb
jl
cld
repz
fwait
inc
add
mov
mov
sarb
shrb
jbe
out
pop
test
jo
or
add
cli
fistl
rcrl
xchg
out
push
xor
and
xor
mov
call
dec
adc
push
pop
out
sub
inc
fisubs
xor
adc
aaa
add
xchg
sub
dec
call
cmp
push
bound
sbb
lcall
lds
mov
pop
clc
jl
rcrb
sub
add
fiaddl
bound
adc
jne
int3
ljmp
cmp
ret
xchg
add
xchg
sub
push
adc
mov
and
xchg
xor
push
sub
dec
add
out
dec
add
xor
pop
clc
in
dec
jne
jne
int
xor
sub
push
sbb
pop
loop
cmpsb
adc
fmuls
bound
add
sub
dec
inc
mov
adc
cmp
ja
cli
loopne
lret
xchg
mov
xchg
gs
sbb
js
and
xor
inc
xorl
int
mov
stc
inc
mov
leave
and
jge
or
lahf
out
lret
xchg
mov
pusha
adc
push
stos
push
int
xor
out
jle
xor
xchg
dec
dec
ss
mov
insb
or
cs
dec
mov
jge
push
loop
popf
adcb
or
or
or
dec
inc
or
enter
push
sbb
shlb
repnz
push
iret
daa
push
push
jmp
fmuls
idiv
mov
das
aad
in
call
cltd
daa
pop
clc
lcall
subl
xor
mov
pop
mov
inc
or
xchg
js
jge
or
add
data16
flds
es
push
and
sbb
dec
inc
fcmovbe
or
adc
inc
dec
jle
rclb
imul
sub
mov
xchg
mov
sbb
enter
sbb
sbb
loope
or
stc
fimull
lahf
push
or
adcl
shrb
shrl
mov
fnstsw
ret
cmp
jnp
flds
inc
and
ljmp
popf
or
push
jmp
push
push
pusha
sbb
insb
sarl
adc
mov
pushf
xor
inc
mov
lahf
add
xor
push
or
and
push
or
gs
add
mov
das
add
nop
mov
adc
mov
das
dec
call
nop
fdivl
pop
pop
mov
cwtl
call
fistpl
pop
add
cmp
and
cmc
add
cs
jg
dec
mov
cmc
add
fbld
push
sbb
inc
jne
push
ja
es
inc
jge
call
and
das
je
outsl
xchg
fld1
inc
and
cmc
inc
and
jb
fdivrl
or
fmuls
xchg
lock
mov
pop
scas
fxch
sbb
push
push
or
jg
nop
adc
xlat
or
cmpsl
push
clc
mov
mov
cs
fwait
je
pop
xor
leave
stos
int3
or
into
sbb
adc
and
jo
jle
mov
sbb
outsb
sub
notb
mov
dec
sbb
or
dec
repz
outsl
subb
cmp
or
std
sbb
adc
and
ret
push
jg
jmp
jno
call
fsubrs
add
jb
cmp
jle
mov
push
push
push
push
scas
mov
fcoml
jb
daa
sub
bound
xchg
adc
sub
and
sub
repnz
lods
mov
sub
push
roll
push
adc
test
mov
aad
cld
cltd
imul
mov
mov
xchg
sub
push
pushaw
inc
dec
js
xor
mov
sub
mov
stc
and
pop
sub
lds
hlt
push
fldenv
dec
pop
in
cmpsl
lahf
cld
test
push
in
xchg
mov
pop
cld
sti
je
loop
das
ret
jp
and
lcall
shll
arpl
jge
cld
inc
xchg
stos
lret
ret
fsub
das
jg
and
cmp
xchg
push
inc
or
shlb
lods
pop
stc
xchg
add
std
add
dec
xor
cmpsl
fcoms
cmpl
dec
lods
adcb
add
sti
inc
mov
pop
cmp
aas
cld
int3
fstp
iret
push
sar
popa
jge
sbb
add
sub
push
or
inc
adc
xchg
xor
sub
inc
aam
aaa
mov
mov
adc
push
push
inc
and
inc
or
push
sub
loop
insl
or
or
and
das
pop
lea
scas
aaa
dec
pop
pop
mov
adc
scas
fs
orl
mov
xchg
and
scas
fs
fcoml
test
loopne
ret
adc
int3
ret
les
and
subb
add
xchg
pop
cld
push
fsub
icebp
ret
fnstenv
sti
jne
jmp
jnp
cmpsl
nop
loope
mov
push
inc
or
mov
and
xchg
pop
sub
dec
sub
pop
adc
push
sub
mov
cs
add
cmp
cld
xor
sub
test
lahf
dec
pushf
mov
and
cli
mov
xchg
add
jp
add
lea
incl
xor
int
pop
add
inc
inc
sbb
push
fimull
dec
jne
jmp
sbb
out
mov
adc
cmp
out
adc
inc
pop
jle
movsl
rcrb
mov
xor
jmp
cmp
xor
loop
sub
dec
scas
dec
je
sub
outsb
cmp
mov
push
mov
push
sbbb
call
xor
and
mov
dec
je
inc
sub
test
sub
push
popa
aaa
pop
push
aas
hlt
out
mov
ret
xor
mov
dec
add
dec
add
xor
std
repz
movsl
xlat
xchg
dec
sub
inc
mov
je
insb
les
xor
stos
testb
pop
inc
aam
fisubs
nop
bound
inc
inc
xchg
div
mov
subl
push
dec
pop
jo
add
pop
add
add
iret
icebp
shl
sub
daa
mov
rep
aaa
out
test
notl
push
rcll
push
daa
push
push
mov
mov
sub
andl
lret
xchg
jmp
xchg
cmp
lea
out
cld
add
cmp
mov
mov
std
mov
js
jne
and
test
out
or
add
push
or
dec
push
push
push
test
hlt
and
sub
mov
inc
repz
inc
xchg
rep
adc
push
push
and
iret
push
clc
repz
call
inc
cld
adc
dec
movsb
dec
adcb
push
ss
bnd
daa
xchg
dec
loopne
call
inc
jle
push
dec
pusha
xor
shrw
dec
decl
pop
dec
in
add
ljmp
dec
add
push
jp
pop
add
arpl
adc
pop
cmc
jnp
mov
add
movsb
icebp
in
jg
or
mov
adc
nop
jmp
out
dec
invd
mov
minps
mov
sub
cltd
in
std
shlb
testb
lock
dec
testb
add
lock
lds
loopne
or
sbb
lahf
pop
mov
test
push
jne
or
sub
dec
ret
inc
fcoml
mov
inc
xchg
mov
dec
mov
pop
ss
test
pop
out
inc
sti
jne
ret
outsb
lods
dec
daa
and
xor
mov
shr
and
jg
cmp
push
sub
pop
std
lock
xor
int
loopne
imul
dec
movsb
negb
inc
lock
and
jecxz
and
xor
sar
adc
pusha
push
cmc
sbb
enter
xor
testl
andl
mov
xorl
jne
adc
jnp
and
out
xor
pop
addr16
out
push
iret
push
call
or
mov
lea
mov
xor
call
xchg
repnz
jmp
in
rclb
and
pop
fdivl
mov
popf
push
xchg
push
pop
push
cmc
sub
cmp
aam
xchg
inc
or
or
dec
sbb
inc
or
stc
repz
push
sbb
adc
sub
inc
stos
shrd
push
pop
lock
or
inc
jbe
mov
mov
sti
leave
sarb
into
ret
mov
mov
add
push
fbstp
bound
dec
or
xor
lock
les
sbb
and
test
jmp
xchg
pop
add
out
xor
jp
xlat
mov
adc
sbb
mov
and
lea
sarl
pop
and
sub
or
call
lds
enter
cmp
jmp
pop
inc
inc
scas
xor
and
das
daa
adc
inc
xlat
dec
cmp
fs
mov
pop
add
fnstsw
mov
inc
mov
push
inc
adc
or
or
push
mov
cli
inc
dec
add
push
dec
xchg
xor
push
or
and
adcl
add
les
add
mov
cmp
mov
dec
cmp
xchg
push
xchg
pusha
and
jmp
andl
push
mov
or
ss
push
leave
xor
bound
push
or
into
xor
mov
sbb
sbb
push
push
add
cmp
jle
cmp
push
jae
les
push
adc
cmpsl
xor
xchg
incl
cmp
pusha
dec
cmovns
imul
push
add
push
and
xor
pop
inc
xor
xor
push
xchg
inc
and
xor
pop
lret
lret
push
hlt
mov
dec
xchg
repnz
das
inc
lcall
or
out
xchg
and
sbb
scas
push
pop
pop
fsubrs
xor
sbb
or
cmp
or
inc
mov
dec
mov
ret
push
push
fucomp
adc
fists
rorl
out
xchg
mov
outsb
pusha
je
or
call
fldenv
outsb
mov
out
cltd
push
pushf
push
js
ret
cmp
pop
or
push
rolb
loop
jg
lock
mov
jge
mov
mov
cmc
push
popa
inc
das
in
in
sahf
call
cmp
mov
adc
aam
pop
mov
call
rcrb
ret
pop
adc
jb
or
mov
lea
mov
push
dec
dec
cmp
push
push
push
mov
inc
mov
dec
jmp
xchg
push
push
aas
jecxz
lret
mov
fnstsw
inc
inc
or
test
xor
insb
call
mov
fs
arpl
and
sub
jmp
push
ret
cmp
mov
popf
mov
push
test
or
mov
cld
into
adc
insb
ss
mov
out
sahf
je
adc
push
push
sub
fldl
add
ljmp
aaa
shrl
ss
or
loop
inc
mov
cmp
imul
lret
insb
loop
cmpsl
cmp
je
jb
push
out
sahf
add
inc
sub
in
or
cmp
pop
mul
iret
sub
sbb
or
sbb
or
and
js
call
add
sub
jecxz
pusha
and
sbb
dec
push
cmp
jnp
fs
cld
sbb
mov
outsb
mov
inc
mov
push
mov
fists
sub
push
out
sub
fs
push
dec
inc
pop
inc
je
pusha
inc
pop
imulb
push
aam
adc
push
aas
repnz
xor
dec
pop
loope
ffree
aas
stc
ss
scas
dec
add
push
adc
or
nop
pop
out
in
and
lahf
mov
add
pop
dec
pusha
push
call
inc
sub
loop
dec
adc
dec
mov
cli
pop
sub
xchg
mov
arpl
xchg
or
xor
cmp
jge
call
adc
aaa
inc
inc
mov
mov
lahf
clc
pop
leave
xor
pop
sbb
push
int
js
stc
xchg
or
push
inc
push
dec
mov
fucomi
dec
ljmp
push
jl
adc
test
pop
jb
std
xor
add
add
or
loop
jecxz
call
adc
ja
hlt
lods
inc
or
and
dec
jmp
loope
repz
jo
xor
xchg
sbb
das
rcl
xor
loop
ret
decl
xor
jl
mov
call
subb
dec
pop
gs
ret
cmp
jg
push
jp
sbb
pop
adc
popa
adc
in
or
call
rcrb
loope
adc
fldl
xlat
inc
adc
pop
lds
dec
andb
adc
icebp
jmp
sub
fsubs
push
adcb
xchg
inc
adc
pop
lahf
xor
mov
outsb
mov
add
call
scas
xlat
jnp
lds
bound
or
push
and
in
inc
xor
jnp
in
dec
add
lds
sub
repz
or
adc
adc
jns
adc
icebp
jae
pop
add
sub
bound
push
addl
jne
cmc
and
and
and
js
dec
outsb
push
test
jnp
outsb
mov
mov
shrb
push
dec
aas
repz
outsb
add
add
sbb
adc
adc
push
scas
pop
movl
lea
pop
sbb
fs
jnp
mov
add
xchg
push
icebp
icebp
mov
add
add
add
idivb
dec
sarb
adc
or
jl
pusha
inc
add
cmp
or
dec
or
call
nop
jg
add
pop
jp
mov
clc
inc
test
mov
and
cmc
inc
adc
dec
decl
test
adc
sti
push
lea
es
mov
dec
aas
cmc
enter
dec
andb
outsb
sub
lock
test
rolb
bound
add
sub
adcl
jnp
mov
sub
add
mov
cmp
jne
mov
sub
mov
inc
sub
or
mov
or
dec
mov
ss
add
dec
add
inc
add
gs
sbb
jne
adc
sub
or
inc
adc
pop
add
or
stc
aaa
mov
dec
push
cmp
popa
pop
fidivl
out
in
inc
add
insl
or
daa
add
push
jp
enter
std
inc
jmp
sbb
fmuls
enter
or
xorb
sbb
push
push
repz
push
jle
rcrb
push
push
xor
xor
in
lea
push
cmp
les
cmpb
jmp
jg
lock
xor
adc
adc
jg
ret
adc
jg
or
mov
movsb
mov
movsl
or
jg
or
in
inc
xor
adcb
and
jle
and
cld
and
shlb
push
test
push
jns
mov
inc
call
fisttpl
aaa
or
out
loopne
pop
mov
xor
push
xchg
lock
and
cmp
or
mov
sbb
cmp
leave
dec
mov
loope
jmp
sub
in
sub
lret
push
aaa
sbb
cwtl
adc
jo
pop
dec
or
jne
mov
mov
dec
adc
jmp
or
dec
xchg
fildl
loop
add
lods
test
fsubr
ret
cmpb
mov
mov
mov
push
push
push
ffreep
sbb
sbb
push
cmpsb
bound
sbb
push
leave
pusha
cltd
cmpsl
je
lcall
sbb
in
pop
cwtl
ds
orl
jmp
movsl
mov
rorl
out
dec
mov
push
jg
mov
xor
add
jg
adc
lcall
cmp
dec
adc
jb
dec
sti
mov
ds
dec
mov
jne
outsb
je
xchg
sub
inc
jge
outsl
pop
fidivs
adc
pop
mov
mov
call
mov
in
fdivrs
mov
addr16
test
push
push
add
and
jge
cmp
inc
mov
xchg
rorb
imul
or
dec
dec
loopne
mov
and
lea
push
and
popa
pop
xor
adc
mov
inc
lcall
scas
arpl
je
adc
shrb
pop
je
nop
pop
and
daa
and
and
push
mov
add
aam
push
jecxz
and
iret
mov
or
fwait
das
clc
out
jo
dec
cmp
inc
and
cld
fsubs
je
jb
daa
jae
loope
mov
leave
jo
cmp
inc
out
xchg
push
add
rcll
arpl
push
fsubs
sub
es
xor
adc
push
add
and
mov
call
adc
adc
sub
mov
inc
and
and
mov
aam
mov
and
cmp
roll
jge
xor
and
sbb
xchg
sub
lds
jne
test
cmp
inc
cmpl
aad
jns
outsl
jns
cmc
jne
push
sti
hlt
push
stc
lahf
and
adc
push
xor
sbb
adc
cmp
clc
add
pusha
inc
sahf
loopne
mov
xchg
test
mov
push
inc
sub
adc
clc
xor
fisubrl
loop
daa
shlb
js
dec
dec
mov
dec
mov
ficomps
imul
jne
mov
push
pop
push
sub
push
test
fisubl
std
jne
or
mov
int3
mov
movsl
pop
sub
push
out
xor
pop
incb
in
movaps
in
cmp
inc
and
push
movsb
cmpsl
mov
xchg
lret
jg
icebp
ret
aas
loopne
shll
adc
sbb
fistpl
sub
or
mov
push
adc
fidivs
popa
ja
adc
ret
mov
enter
stc
jno
cli
ret
movsl
loop
push
data16
push
shrb
leave
sbb
push
push
sarl
pop
mull
in
jle
dec
xor
out
and
adc
fisubl
call
das
push
sbb
cmp
or
mov
cli
call
or
dec
dec
mov
fists
es
push
imul
add
add
ret
jecxz
xchg
sti
leave
xor
xor
test
nop
cmp
or
jb
and
jo
es
sub
out
hlt
pop
call
or
add
xlat
cmp
xchg
ficomps
js
pushf
gs
imul
jbe
push
push
sub
sub
fldenv
pop
dec
xor
iret
cmp
or
push
push
aad
xchg
dec
and
mov
xchg
sub
fsts
call
mov
cwtl
sub
cwtl
xchg
mov
outsb
jno
dec
or
mov
xchg
pop
mov
ds
cmpsb
das
pop
pop
loopne
and
lret
jp
pop
inc
mov
or
dec
out
ret
mov
sbb
inc
stos
das
out
loop
out
push
push
les
sbb
call
push
sti
push
adc
rorl
movsl
lods
mov
inc
pxor
aaa
dec
inc
clc
imul
jmp
mov
repz
aam
sub
dec
testl
outsl
mov
pop
in
inc
dec
pop
adc
mulb
test
mov
jmp
push
xchg
das
idivb
jmp
jae
stos
jl
insl
scas
push
pop
mov
repnz
nop
or
adc
cmp
dec
inc
jmp
xor
dec
adc
xor
in
ss
sub
jmp
aam
pop
fsubr
mov
xor
sbb
es
inc
add
aas
mov
imul
pop
mov
inc
or
inc
out
jmp
stos
mov
push
shlb
stos
fsubrs
mov
mov
pop
int
inc
mov
mov
aaa
leave
insl
jo
js
sub
xor
jge
lock
cmp
dec
pop
pop
pop
out
or
insb
sti
fdivrs
mov
call
pop
push
idivl
inc
mov
loopne
sub
call
mov
mov
xor
xchg
adc
daa
sub
dec
mov
push
sbb
test
xor
jp
das
in
push
jecxz
mov
imul
adc
sahf
aad
dec
orl
in
test
push
and
push
cvtps2pi
pop
sub
mov
cmp
or
xchg
cmp
pop
cmp
and
jnp
xchg
mov
scas
nop
push
or
inc
and
in
xchg
ds
flds
outsb
and
inc
dec
out
bound
inc
sub
imull
nop
and
adc
sbb
adc
adc
jmp
push
inc
cmpsb
or
adc
sub
adc
insb
mov
lret
and
add
cmp
xchg
int
pop
ret
icebp
lea
lea
xor
shr
cmp
ret
lds
sub
sub
push
mov
mov
lea
pop
push
test
jmp
inc
inc
mov
imul
jge
neg
mov
jo
mov
mov
dec
mov
push
js
fcompl
sbb
bound
adc
pop
mov
xor
repz
jl
dec
mov
mov
jp
dec
stos
jne
lods
inc
xchg
das
and
mov
cmova
shrb
cmp
or
cli
ljmp
sub
inc
mov
sbbb
ds
pop
scas
mov
hlt
sub
mov
shr
sar
loopne
rcrl
adc
out
mov
jb
int
clc
mov
stos
mov
sub
add
ret
cmp
jg
mov
sub
sub
mov
xor
daa
loopne
and
and
imull
jnp
mov
jno
call
test
aas
lds
test
into
and
mov
xorb
add
mov
adc
push
sbb
push
or
cmpsl
push
sti
jecxz
incb
lea
sahf
sbb
in
ljmp
cs
push
popa
adc
sbb
or
mov
adc
or
cmp
icebp
pop
ljmp
test
inc
xrelease
cwtl
dec
dec
push
test
sarl
and
push
shlb
sbb
inc
push
dec
sbb
sub
or
inc
sbb
push
lret
pop
pop
in
lds
adc
imul
inc
push
cmp
jnp
xor
dec
lret
test
lea
and
sub
call
inc
idivb
mov
cmp
shlb
sti
sub
ljmp
jle
pop
fwait
into
inc
dec
adc
std
dec
dec
adc
adc
lret
dec
adc
or
fbld
ds
inc
insb
or
rorb
mov
cmp
inc
jae
xchg
push
sbb
bound
and
dec
dec
xchg
mov
arpl
jle
int
jnp
nop
jmp
adc
cmp
or
lret
sbb
cmp
dec
push
mov
bound
xchg
and
push
xorl
or
adc
jnp
std
fcoml
cmp
test
xchg
mov
push
ja
test
add
pop
mov
mov
pushf
mov
leave
adc
in
mov
in
popl
dec
jnp
aad
out
jne
adc
dec
mov
dec
adc
clc
test
push
push
lods
aam
or
lret
mov
jbe
pop
aad
xchg
stos
ret
cli
sub
push
loop
imul
or
xor
enter
inc
pop
xchg
jle
stos
enter
hlt
or
mov
insb
stos
dec
bnd
js
mov
leave
pop
xor
jl
push
stc
jb
mov
xchg
sbb
jo
cwtl
mov
dec
xor
mov
push
mov
negb
gs
loope
std
xor
repz
not
inc
mov
addr16
mov
mov
push
dec
pop
inc
xchg
outsl
cmp
imul
lahf
outsl
dec
xchg
call
lret
pusha
jo
pop
adc
push
test
adc
clc
mov
leave
mov
push
inc
dec
pop
jmp
xor
xchg
mov
pop
into
jnp
mov
into
movsl
push
mov
xchg
stos
or
roll
push
sbb
sbb
and
and
sub
xor
adc
xor
mov
pop
cmp
cmp
in
and
mov
dec
and
dec
inc
push
ljmp
push
cmp
push
jge
or
imul
mov
ret
pop
es
and
arpl
jo
je
xchg
addb
nop
les
stos
jmp
pop
mov
dec
or
push
inc
nop
push
test
aaa
mov
mov
enter
xor
xor
mov
nop
sbb
cmpl
mov
stos
sub
pop
pop
sub
add
adc
out
cmp
dec
push
mov
pop
ficompl
mov
cmp
stos
ret
shlb
xor
inc
jle
lahf
rorl
gs
testb
cmp
imul
test
or
sbb
loop
and
adc
or
out
sub
cmp
outsl
lea
mov
leave
adc
push
imul
mov
dec
adc
add
jb
call
cmp
mov
xchg
adc
dec
add
inc
adc
pop
xchg
or
inc
adc
mov
andl
push
mov
pop
xor
pop
lds
call
dec
sahf
lods
sahf
fadds
int
push
call
sbb
push
push
push
pop
adc
or
sub
mov
imul
ds
and
cmp
jae
xor
mov
sub
mov
adc
mov
and
or
cmp
sub
add
adc
push
rorb
jmp
adc
adc
push
mov
adcl
push
adc
orl
inc
push
sbb
and
gs
inc
push
rcll
dec
in
sub
push
cvtpi2ps
cmp
adcb
orl
sbb
sbb
test
ds
insb
xchg
inc
and
fdivr
cmpb
leave
cmp
and
nop
xchg
insb
icebp
dec
inc
push
ret
or
int3
ret
imul
pop
lods
xchg
sbb
fiaddl
inc
jns
cmp
fstl
adc
ret
push
sar
mov
test
or
adc
adc
lods
adc
and
mov
mov
xchg
imul
add
fadd
dec
sbb
pop
rorb
je
decb
call
data16
add
mov
inc
dec
cwtl
cmpsb
and
out
mov
pop
popf
cli
xor
push
jne
push
xor
push
in
mov
jno
nop
dec
sbb
push
mov
or
xor
cmp
lods
jle
cmp
punpckhdq
and
cmp
leave
test
cmp
mov
lds
rolb
ja
xchg
popf
push
pop
xchg
mov
fsubrp
sbb
pop
fiadds
lods
icebp
jle
push
scas
dec
je
repnz
mov
out
jne
cmp
xchg
sub
nop
or
adc
pop
ja
imul
sysenter
shrb
in
andb
jb
sbb
or
cmp
push
pop
xchg
loopne
ja
sub
pop
or
xchg
bound
ret
ret
clc
jbe
dec
out
pusha
add
out
notb
mov
pop
push
adc
out
jne
or
dec
push
sbb
push
sbb
or
icebp
mov
adc
push
stc
adc
cltd
inc
add
in
call
pop
sub
inc
ret
cld
mov
flds
cmp
push
test
mov
je
lea
xchg
push
repnz
inc
fs
or
and
pop
dec
sbb
and
sub
mov
test
cltd
sub
add
adc
xor
lock
imul
cmpb
inc
inc
sub
sub
xchg
fldl
std
cwtl
jne
dec
jl
push
or
dec
stos
cltd
into
cmpb
je
cmp
inc
add
push
or
inc
lahf
mov
adc
dec
xor
mov
dec
push
mov
xor
fstpt
daa
cwtl
insb
lock
jecxz
dec
dec
fs
sbb
jae
xchg
xor
xchg
inc
or
shll
xchg
pop
shll
in
repnz
sarl
test
pusha
add
mov
or
cli
movsb
sub
adc
cmpsl
ret
pop
call
cmp
sub
or
lcall
sub
add
pop
inc
add
sbb
xchg
add
inc
pop
pop
and
pop
cmc
out
inc
xchg
push
lods
pop
cltd
jl
xor
aam
cmpsl
push
adc
cld
inc
add
or
or
push
lcall
push
mov
rorb
shrl
shll
pop
xchg
or
inc
test
pusha
fidivl
cmc
aam
test
movsl
xor
shll
pop
dec
add
rol
or
inc
fadds
pushl
jns
adc
jmp
scas
cmp
xchg
sub
add
sbb
insb
push
or
push
mov
enter
lock
int3
je
mov
into
adc
leave
inc
lock
lds
sarb
jmp
ficompl
push
rolb
push
mov
clc
enter
arpl
mov
test
push
lods
lock
mov
jbe
aas
adc
sub
sbb
mov
imul
inc
mov
pop
or
js
mov
aaa
insl
pop
lahf
cwtl
cmp
or
push
xchg
xchg
xor
rolb
or
or
daa
outsb
rcrb
loope
insb
mov
movsb
dec
inc
mov
cmp
inc
or
mov
movl
dec
mov
push
push
call
adc
push
in
mov
inc
sub
je
test
fdivs
orb
inc
sub
xchg
int
push
call
push
mov
push
fisubrl
or
fldenv
ds
mov
mov
add
or
adc
push
push
cmp
inc
out
add
dec
mov
imul
shl
pop
push
or
testb
pop
test
mov
pop
pop
cltd
jno
mov
ror
inc
dec
lock
inc
pop
loopne
jb
nop
leave
adc
push
jne
add
mov
mov
sub
jle
sub
cmp
jbe
add
push
push
je
pop
mov
cmpsb
cwtl
cmp
mov
clc
sub
jo
cmp
cmp
js
or
pop
loope
jae
pop
sub
je
mov
leave
push
xor
add
adc
in
ret
push
divl
or
dec
popa
mov
aaa
ret
int3
push
mov
dec
or
int
cld
sub
scas
push
mov
dec
ljmp
push
add
enter
pop
and
cli
mov
cltd
jnp
pop
mov
orl
add
rorb
jmp
je
sbbb
in
inc
cmc
sbbb
sub
jbe
push
inc
mov
jecxz
push
arpl
xchg
scas
test
dec
stos
or
mov
jnp
inc
xchg
daa
inc
push
add
add
add
push
lea
dec
adc
lods
and
data16
cmp
sbb
push
sbb
lea
rclb
mov
pop
sbb
lea
cmp
push
jge
jp
cs
jecxz
push
rclb
imul
lret
push
adc
jne
lods
lret
pushf
mov
pusha
and
dec
push
imul
lea
pushf
add
orl
iret
aam
adc
test
scas
xchg
push
popf
and
enter
or
xor
add
adc
pop
subl
and
outsl
cli
sbb
lds
push
and
adc
sbb
jbe
popf
ja
mov
stc
cmp
test
inc
lock
mov
lahf
dec
xor
lcall
mov
mov
or
mov
shll
mov
mov
push
xchg
test
and
or
movsl
and
ljmp
xchg
shll
in
not
pushf
aaa
nop
sub
pop
xorl
faddl
xchg
push
xchg
sub
shlb
lods
pop
sub
xor
inc
mov
push
adc
push
jmp
repz
cltd
maxps
idivl
rol
loope
call
xor
jne
pop
pop
push
jge
fimull
sbb
fstp
push
adc
in
jne
das
in
xchg
shlb
inc
testl
loop
andb
aam
push
stos
nop
sbb
push
mov
push
sbb
xchg
add
movl
cmp
mov
add
out
xor
push
jl
mov
and
cmp
push
push
call
dec
and
inc
sub
rclb
pop
add
mov
push
cmp
pop
shr
adcb
stc
aad
mov
jne
cwtl
repz
orb
push
xchg
adc
repnz
movsb
push
push
scas
out
push
sbb
fs
dec
sub
int
push
push
and
js
and
loopne
add
xor
stc
inc
sbb
adcl
js
xlat
adc
push
scas
orl
adcl
dec
jbe
xor
jl
into
lods
xchg
xor
mov
bound
push
icebp
sub
cmp
dec
nop
pop
scas
sbb
imul
repz
loop
mov
clc
push
adc
pop
push
mov
mov
cwtl
inc
jae
les
and
mov
pop
xor
das
pop
dec
pushf
stc
sbb
or
sub
pop
or
jmp
adc
dec
add
lds
neg
and
shr
add
ret
or
loope
pop
xor
pop
mov
xchg
dec
inc
mov
aas
inc
adc
or
mov
ss
data16
lea
adc
in
cwtl
add
push
push
shl
xchg
sbb
movq
mov
mov
rolb
add
and
and
inc
mov
fbld
or
push
xor
movsl
xor
dec
push
push
xor
cmc
cmp
push
ss
jns
cmp
xchg
or
adc
push
mov
mov
fsubl
call
aas
imul
pop
pop
mov
stc
iret
cmp
dec
gs
in
push
or
xchg
sti
popf
or
lock
and
or
sub
push
jge
aad
andl
ja
imulb
lock
lret
test
sub
movsb
and
lahf
arpl
ljmp
nop
popa
shr
adc
sahf
mov
sti
enter
add
xor
call
jbe
imul
and
xchg
sbb
push
adc
lock
rep
mov
sbb
sarl
jecxz
in
mov
fildll
ret
adc
jne
test
pop
insl
scas
pop
jecxz
cmp
sti
std
adc
sub
ret
fadd
add
jnp
into
adc
add
add
jne
inc
nop
xor
dec
cmpsl
mov
mov
adc
jae
sbb
icebp
cmc
inc
sbb
ljmp
jnp
cmp
rol
dec
out
cmp
das
fisttpl
pop
and
pop
and
ljmp
and
pop
rep
jl
jl
je
test
sub
test
or
shrl
cmp
stos
lret
call
jle
mov
nop
jb
or
xchg
or
push
mov
cmp
je
push
cmp
add
notb
jmp
int3
fiaddl
dec
mov
xor
push
in
sub
dec
rcr
and
inc
adc
fildll
jnp
push
lock
sub
jae
cmpsl
adc
sub
icebp
mov
cs
xchg
sbb
and
cmp
outsl
xchg
jp
mov
push
jno
push
mov
pusha
or
push
aas
adc
test
dec
add
aad
jmp
jl
sbb
les
mov
jns
imul
lods
mov
imul
push
jo
outsb
and
incl
sub
cmp
jmp
fbld
test
xchg
lret
pop
dec
lea
pop
test
xlat
and
call
enter
es
xchg
xchg
and
js
adc
js
jle
imul
movsl
insb
sbb
jmp
les
add
add
rorb
inc
into
andb
dec
inc
dec
jl
xchg
lock
sbb
lret
dec
or
clc
and
fwait
sarb
mov
or
iret
mov
jl
and
sti
movb
or
mov
cmp
sti
imul
in
cmp
inc
inc
or
adcb
cmp
or
shll
mov
aam
adcb
in
jle
mov
add
fsts
mov
clc
adc
xchg
mov
je
stc
push
das
mov
fwait
mov
outsb
jp
sub
xor
add
test
fistps
clc
mov
adc
ret
pop
imul
mov
inc
hlt
mov
dec
sti
fidivrl
dec
cmp
and
push
cld
push
adc
sub
bound
adc
sbb
aam
insb
xchg
lods
push
pushf
out
xor
jbe
mov
sub
mov
mov
jno
daa
push
mov
daa
lods
jle
pop
imul
js
fs
cld
and
sahf
sti
xchg
add
jg
stos
inc
sarl
xchg
lods
inc
xlat
mov
das
enter
out
push
add
call
imull
push
popf
pop
int
adc
push
popa
push
pop
and
push
sti
jb
decl
jle
push
sub
mov
stos
inc
seto
addr16
notl
movsl
jne
into
adc
and
add
and
bound
insb
xor
sub
mov
pop
out
imul
mov
sub
inc
inc
loope
and
les
dec
xchg
push
push
and
xchg
mov
stos
pop
add
jge
cmp
or
mov
leave
das
add
lcall
loop
mov
xchg
les
je
xchg
or
pop
sub
dec
sub
cmp
mov
jmp
mov
mov
push
loop
sub
jg
mov
jmp
sub
jle
adc
lahf
je
push
pop
xchg
shll
scas
or
pop
fsubl
fistl
add
cli
xor
dec
pop
sub
cld
mov
adc
sub
repz
mov
mov
stc
sbb
imul
inc
sbb
push
and
andb
fistps
adc
jns
nop
adc
push
push
inc
scas
into
adc
xchg
push
pop
mov
xor
xchg
popa
jo
ljmp
jne
out
jbe
xchg
dec
pop
pop
cmp
fwait
xor
adc
popa
negb
les
pop
mov
mov
and
dec
adc
je
je
dec
pusha
jecxz
cmp
lret
cmp
jne
leave
sbbl
push
push
jge
inc
pop
jle
test
call
jo
dec
add
adc
lock
hlt
xchg
lret
xor
mov
je
test
dec
negl
mov
in
scas
add
dec
pop
push
xor
movsb
cmp
jb
jbe
add
xor
je
and
push
enter
hlt
xor
mov
sti
adc
test
mov
push
xchg
test
leave
dec
jmp
sbb
aam
adc
adc
inc
cli
or
aaa
jecxz
inc
add
call
cmpb
cltd
loop
and
js
call
ret
cli
mov
xchg
and
iret
jno
mov
and
je
inc
xchg
jmp
sub
pop
push
pusha
lods
xchg
or
aaa
and
aam
sub
add
add
xchg
call
ljmp
pop
loopne
cmp
aaa
add
mov
out
adc
mov
and
inc
mov
xor
mov
pop
mov
cmp
dec
push
cmpsl
fstpl
sbbb
lahf
je
lcall
test
nop
lods
mov
cmpsl
jg
cmp
insb
pop
and
ss
mov
nop
sub
lret
fistpll
or
sub
or
dec
sbb
lock
int3
shr
cmp
fdivr
or
jecxz
sub
jle
push
and
insb
add
daa
pop
adc
mov
sub
push
addl
aam
fsubs
jmp
mov
xorl
sbb
xor
stc
sbb
sub
adc
xchg
push
hlt
jmp
xchg
xchg
es
aad
mov
adc
inc
ret
les
ret
or
push
adc
ds
cltd
and
in
and
cmp
jmp
push
and
popa
pusha
push
pop
or
push
clc
cmp
inc
or
sub
data16
loopne
add
push
sub
mov
mov
jne
jmp
jmp
inc
sbb
dec
xchg
lods
daa
ss
add
lea
popf
loope
mov
xor
arpl
es
enter
lahf
and
out
clc
xchg
lea
aad
int3
add
subb
scas
daa
popa
vpunpckhdq
fwait
sub
roll
or
dec
adc
inc
bound
mov
or
lea
push
test
pushf
aas
sbb
iret
dec
lods
push
cld
adc
in
mov
gs
xor
xchg
add
sub
push
int3
bound
jno
call
lods
outsb
imul
xchg
add
pop
fs
js
inc
gs
and
clc
rolb
cli
and
or
mov
cwtl
cmp
rorl
xchg
sbb
jl
insb
js
sahf
cmpsl
push
aaa
loope
mov
jae
adc
mov
jmp
ljmp
push
call
sbb
or
je
mov
hlt
and
mov
or
into
nop
aaa
mov
cs
and
mov
adc
enter
nop
push
jae
mov
rol
pop
mov
out
sbb
mov
push
sahf
xchg
xor
mov
ja
or
xor
notb
enter
add
fidivrl
movl
and
jnp
lods
or
leave
je
xchg
jns
mov
fwait
repnz
lock
negb
xor
addb
xchg
push
fidivs
dec
mov
adc
cmp
xchg
or
loop
sub
push
add
sbb
dec
xor
mov
push
cmp
jg
in
jl
bound
adc
rcll
je
adc
jbe
pop
adc
adc
out
sbb
mov
ficoms
push
xchg
mov
insl
or
adc
call
jnp
add
mov
je
dec
rolb
sub
cmpb
rcrl
dec
leave
push
cs
adc
repnz
mov
adc
jg
out
and
fs
repnz
add
mov
inc
or
dec
adc
or
and
inc
sbb
call
sbb
inc
pop
outsl
add
cmp
and
pop
inc
inc
pop
jbe
outsl
adc
sub
pop
movsl
xlat
xor
cld
pop
sbb
push
mov
lea
in
push
popa
in
push
stos
xor
scas
sbb
popf
jo
lods
pop
lret
or
pop
jne
in
push
adc
sbb
bound
mov
incb
je
inc
and
sbb
aaa
call
pop
lret
cmp
mov
nop
inc
int3
sbb
adc
xchg
mov
or
pop
or
add
cmpb
mov
outsl
sub
and
inc
xchg
push
cmp
push
repz
das
or
daa
clc
insl
shl
push
ljmp
clc
cmpsb
adc
xchg
movsb
dec
sbb
sbb
and
xor
push
repnz
mov
imul
fwait
add
cli
lret
sub
data16
push
lret
movsb
inc
push
jp
xor
mov
mov
adc
cmp
test
frstor
mov
add
std
jmp
push
lret
pop
mov
push
mov
aas
jmp
cmc
loop
std
int3
aam
into
mov
scas
dec
es
jne
test
call
into
pop
adc
in
cmc
les
push
cli
add
vmread
lock
dec
jnp
and
mov
outsb
repnz
xchg
jns
push
lahf
aam
jno
sub
jnp
mov
pusha
and
mov
mov
pop
je
push
push
aad
xchg
xor
lods
mov
jnp
sarl
pop
sbb
push
sbb
dec
cmovl
mov
dec
pop
cmp
or
lock
lret
inc
xor
js
xor
mov
roll
lock
sti
test
xchg
negl
lcall
xchg
dec
fs
jge
sub
jl
jle
sarl
xor
jg
sub
decl
inc
in
adc
push
xchg
jecxz
loop
popa
cmpsl
test
mov
pop
xchg
pop
add
xor
incb
iret
stos
and
or
sbb
sub
pop
decl
ds
cli
dec
xchg
sbb
test
lcall
movsb
mov
xchg
in
addr16
push
adc
push
stos
mov
test
fs
pop
lea
xor
sbbl
add
js
sbb
pop
push
in
adc
adc
inc
divb
dec
sbb
das
cmp
rcrb
in
lret
imul
jnp
cld
push
pop
aam
stos
ret
les
adc
sub
inc
in
jmp
adc
inc
add
and
inc
testl
pushf
imul
jp
cli
inc
call
scas
outsb
scas
aad
jl
push
test
push
scas
xor
jnp
push
stc
push
test
push
push
mov
or
mov
not
sbb
icebp
push
and
fsubl
nop
push
and
or
sub
out
jbe
or
call
enter
into
dec
adc
mov
push
imul
xchg
orl
xor
cmpsb
cmpsl
icebp
or
cmp
lahf
into
das
lret
jns
jo
out
add
xor
movsl
push
or
add
ficoms
fprem
mov
fsubl
xchg
sahf
xchg
das
fsubs
lret
push
add
xchg
daa
push
daa
int3
xchg
test
jne
rcrl
adc
xor
pop
inc
push
pop
jle
jmp
decl
jnp
out
or
jge
pop
mov
xchg
mov
sbb
bound
mov
add
inc
data16
push
inc
into
and
push
shr
pop
jmp
or
add
mov
pop
daa
lock
lahf
adc
jo
in
daa
xor
les
add
add
mov
nop
repz
aad
mov
je
or
int3
add
fnstcw
in
inc
xchg
pop
sbb
mov
imul
and
insl
movsb
pop
lahf
pop
lahf
push
adc
mov
cmp
cmp
sub
sub
adc
adc
adc
add
adc
nop
mov
adcb
jl
pop
push
add
call
sbb
adc
push
sub
call
adc
psubsb
push
sub
loopne
call
add
fwait
popa
and
sbb
or
dec
mov
call
movsl
adc
or
and
mov
sbb
add
call
and
call
sbb
add
adc
add
call
popa
add
add
pushf
xchg
call
or
adc
dec
inc
iret
adcb
pop
scas
pop
push
and
stc
imul
xor
xor
or
sbb
test
and
add
call
xor
or
mov
add
call
sub
add
call
sub
fnsave
push
mov
sub
call
adc
imul
adc
inc
mov
and
test
mov
and
cmp
mov
mov
test
xor
adc
adc
and
leave
cmp
pop
call
add
call
sbbl
mov
sbbl
add
call
dec
ds
movsb
pop
imul
or
das
loop
lcall
rcrb
sub
xchg
je
aam
and
inc
xor
sub
lea
daa
addl
or
adc
jle
dec
adc
add
mov
mov
add
adc
push
test
jb
inc
scas
mov
adc
sub
push
and
mov
movsb
cmpsb
adc
push
pop
adc
mov
push
pop
adc
inc
add
sub
pusha
push
mov
pop
push
sub
adc
pop
dec
sub
adc
pop
dec
adc
mov
adc
call
inc
add
sub
pop
sub
cmp
push
xor
sbb
scas
mov
movsb
adc
cwtl
mov
xchg
je
fmuls
test
pop
adcb
jae
pop
loopne
fildl
inc
jno
sarb
jo
call
lods
je
loop
pop
ljmp
sbb
call
movl
xchg
mov
pop
or
jl
xchg
or
inc
lds
xor
fsts
sub
jb
push
and
sub
incl
mov
xchg
and
stos
adc
mov
push
xchg
shll
dec
stos
and
call
and
jmp
sbbl
lods
sub
xchg
sub
sub
push
pop
gs
xor
adc
or
or
in
xchg
les
test
xor
push
mov
mov
push
call
clc
ds
sbb
mov
xchg
cmp
in
je
push
inc
dec
lods
fldt
in
movsb
xor
jmp
xchg
mov
pop
push
jp
in
std
scas
inc
shrl
push
mov
imul
adc
push
and
mov
ds
xor
ljmp
xchg
cs
mov
xchg
je
add
aad
sbbl
jbe
lds
ja
mov
dec
cmp
jle
es
jp
lahf
dec
adc
aam
loope
sbb
xor
adc
mov
nop
push
test
shlb
je
add
aas
push
repz
notb
adc
lock
jge
sbb
out
fdivrp
lea
aas
xor
xor
inc
add
push
sbb
pop
fs
std
fists
xor
pop
xor
and
pop
mov
rorb
sti
dec
pop
std
ja
push
lock
pop
addr16
xchg
icebp
sbb
add
int3
pop
jmp
sbb
bound
sbb
pop
in
sarl
mov
sbb
push
push
push
mov
scas
lds
stos
mov
stos
jl
mov
lods
imul
sbb
leave
sub
or
push
sti
test
sub
jnp
lret
cmc
movsl
or
mov
les
cmp
cwtl
shrl
gs
adc
add
int3
es
in
mov
mov
idiv
sub
leave
xor
add
filds
xchg
pusha
call
enter
stc
pushl
or
jne
loopne
adc
push
push
mov
sub
adc
repz
sub
cltd
idiv
mov
ror
int
pop
fisubrs
xchg
ficompl
adc
popf
mov
call
add
jns
pop
add
lea
jle
xor
sbb
push
jl
or
pop
adc
pop
out
inc
cli
sub
rcll
or
jg
mov
popa
ret
cmp
dec
fs
push
int3
sub
rcll
pop
dec
gs
add
lock
sbb
cli
inc
repz
imul
pop
sbb
mov
imul
mov
pop
mov
in
xor
jne
cltd
mov
ja
mov
inc
inc
cmp
imulb
lds
cmpb
mov
cmp
cmp
cmp
jmp
fs
xor
mov
iret
mov
enter
dec
rorb
mov
jg
mov
inc
insl
test
adc
inc
xor
jns
inc
or
sbb
xor
leave
dec
ja
inc
mov
jle
jle
push
push
sarl
and
aam
jne
jbe
repnz
add
clc
sub
adc
scas
hlt
test
jno
les
in
lock
pop
pop
mov
mov
add
and
xor
or
or
les
sub
je
cs
cmp
roll
sbb
pop
and
or
jb
add
pop
add
jno
xorl
push
movl
and
add
ret
push
pop
test
ret
mov
pop
dec
out
lcall
jg
push
pop
adc
hlt
pop
pop
xchg
fmul
pop
xorb
lea
lcall
loop
push
sub
or
lea
shl
mov
arpl
lds
pusha
mov
jb
adc
xchg
push
add
pop
add
xchg
or
or
and
dec
subl
cmp
sub
xchg
mov
pop
ljmp
movsb
xlat
push
mov
jne
or
cld
inc
cmp
inc
ret
sbb
imul
fsts
adc
pop
mov
stos
xchg
out
jecxz
out
xchg
sbb
add
xchg
mov
add
cmp
xchg
enter
lock
jg
push
call
and
adc
daa
or
jo
into
ror
mov
push
dec
test
cmpsl
mov
imul
mov
add
cmp
jne
test
je
adc
push
add
push
scas
in
incb
sub
loopne
mov
pop
fcoms
adc
sub
cmc
adc
call
cmp
and
sub
sub
fucomip
inc
cwtl
fnstenv
mov
lods
sahf
gs
push
mov
clc
testb
inc
and
jnp
or
push
lods
aaa
fdivs
jne
xchg
lods
xchg
or
iret
jl
movsb
and
jg
or
imul
dec
add
scas
cs
inc
and
fs
xor
out
add
clc
and
xchg
xor
xchg
sbb
cmpsl
dec
mov
cli
and
mov
popf
push
or
add
stos
sub
imul
test
pusha
mov
push
push
mov
je
mov
push
xor
and
jg
imul
jno
into
lock
lea
inc
and
push
sbb
inc
cmp
mov
fnstsw
into
sbbl
jnp
in
loope
test
into
mov
scas
in
lods
sar
int3
lock
mov
leave
sbb
mov
test
cld
push
push
push
inc
lods
or
scas
negb
mov
and
pop
dec
sub
sbb
and
cmp
and
std
mov
xor
or
call
shl
inc
mov
and
add
pop
push
movl
add
inc
dec
pop
pop
add
jl
cmp
push
mov
and
xchg
mov
cmp
jle
ret
cs
add
rcl
fld
test
test
andb
dec
xchg
push
jbe
or
xchg
sti
inc
iret
jecxz
cmp
dec
cld
push
push
rcll
inc
inc
les
mov
and
dec
mov
xor
and
xor
cmp
aam
push
enter
shlb
or
adc
mov
out
push
cmp
out
mov
add
call
add
inc
ret
push
std
jge
or
adc
jae
sbbl
jg
insl
loopne
xchg
add
push
mov
imul
sub
loopne
mov
aas
xor
mov
movsb
ljmp
push
sub
ret
sbb
lds
sub
adcb
xor
push
sbb
mov
jae
lret
or
xchg
je
xlat
xchg
pop
inc
sbbb
push
je
and
lock
dec
add
push
in
push
add
pop
add
sub
xor
mov
and
pusha
lea
push
xchg
jg
sub
and
fisubs
pop
aad
addb
pop
adc
cs
jge
or
and
lahf
shll
mov
pusha
add
cmp
pop
cmp
adc
push
xor
int3
enter
jmp
xchg
je
enter
rclb
es
lock
jne
cltd
ss
mov
cmp
jne
and
aad
mov
xchg
lock
test
jp
jns
dec
fnsave
aas
mov
outsb
and
add
dec
pushf
xchg
push
push
mov
or
sti
add
adc
push
sub
inc
les
cli
cmpsl
jae
adc
xchg
jl
rol
repnz
and
push
outsb
mov
rolb
sbb
ja
lds
cli
clc
loop
or
mov
inc
push
mov
mov
cs
ror
pop
out
bound
aad
mov
or
mov
inc
cs
and
and
and
xchg
ja
mov
mov
nop
adc
mov
sub
cmp
insb
xchg
movl
es
push
sbb
sub
arpl
mov
cld
sti
call
dec
cs
or
imul
cmp
std
rep
movsb
movsl
popf
sbb
add
and
test
fimull
sbb
add
cmpsb
dec
sbb
fimuls
jmp
mov
inc
jmp
dec
in
cmp
pop
leave
lds
and
mov
or
mov
cmpl
int3
and
mov
int3
dec
sub
add
test
aam
xchg
imul
cs
lret
inc
xor
data16
out
dec
int
push
pop
imul
mov
shlb
cld
cmp
movsl
xor
jg
and
rcll
jle
or
aaa
mov
imul
xchg
sbb
adc
mov
mov
cltd
inc
push
cmp
in
or
mov
shlb
je
jl
inc
jecxz
push
imul
pop
mov
out
xchg
out
mov
cmp
and
pop
cli
clc
xchg
pop
and
jb
pop
inc
sub
inc
es
popa
pop
mov
and
mov
push
sbb
mov
je
shll
adc
repz
js
rclb
push
cmp
jg
fistl
push
push
ljmp
push
mov
ljmp
lea
pop
insb
dec
add
add
ljmp
mov
je
xor
jle
mov
push
cwtl
xchg
push
iret
jne
fs
aas
popf
sub
push
push
or
jle
mov
and
jmp
pop
cmp
adc
je
pop
cmpsb
xor
push
mov
jle
repnz
push
or
addr16
dec
or
cld
jmp
inc
dec
dec
stc
inc
into
and
repnz
jo
sub
rcrl
sbb
push
std
je
test
adc
push
mov
dec
and
into
inc
inc
out
leave
xor
adc
nop
adc
xor
ret
fwait
mov
out
or
add
mov
pop
xchg
sbb
arpl
int
pop
push
out
adc
xor
cmp
push
mov
cmc
inc
or
aam
mov
out
add
adc
adc
lea
cmc
mov
cmp
sbb
fistpl
dec
adc
pop
mov
mov
add
inc
cmp
pop
xor
insl
ficoml
into
fs
xchg
adc
xlat
push
push
mov
jne
or
stos
sbb
mov
inc
cmp
and
insb
loopne
jl
xchg
lahf
xchg
pop
scas
mov
jae
adc
repnz
mov
or
out
lds
push
adc
cld
subl
cmp
or
mov
ret
push
xor
push
and
insb
xor
cmp
mov
or
adc
lahf
push
xchg
aas
adc
jne
in
pop
mov
sahf
out
or
inc
out
xor
mov
push
xor
pop
xchg
adc
cld
popf
mov
std
pop
mov
out
loopne
push
call
sti
xchg
sbb
adc
cmpsb
pop
loop
movsl
cmpsl
inc
shrl
dec
imul
mov
repnz
out
in
or
call
subb
imul
sub
sbb
xchg
add
pop
imul
mov
dec
add
inc
and
mov
or
push
push
adc
lea
jmp
push
push
bound
or
pop
push
cmpsl
cmp
fwait
loope
sbb
cmp
or
add
inc
sub
jle
push
pop
mov
in
repz
sub
sbb
pop
insl
test
jo
add
push
push
or
mov
and
inc
pop
jle
and
adc
repnz
ss
pop
add
mov
inc
add
xor
jb
rorb
cmp
pusha
sti
xchg
dec
xor
adc
mov
out
push
and
push
ja
shll
dec
outsl
jecxz
and
lret
push
xchg
mov
mov
test
outsl
mov
scas
xchg
add
ret
gs
lea
push
mov
xor
and
cmpsb
test
mov
outsl
inc
add
push
fists
xor
gs
ljmp
or
sub
stos
mov
add
xor
pop
adc
call
push
push
push
sbb
test
mov
adc
and
adc
imul
jns
inc
sub
lcall
call
and
and
jnp
ljmp
rcll
imul
or
inc
adc
adc
cmp
jnp
xor
adc
jp
hlt
dec
adc
andb
sub
std
jnp
mov
inc
insb
push
mov
jle
roll
loop
push
mov
lock
push
mov
cmp
loop
mov
movsl
dec
repnz
adc
adc
mov
test
movsl
lock
cltd
test
inc
sbb
sbb
or
repz
and
xchg
jmp
pop
mulb
pushl
and
fbstp
sahf
imul
les
and
mov
mov
and
jg
jno
fildl
mov
mov
sbb
cmp
adc
mov
shll
test
xlat
mov
push
inc
push
add
adc
cli
push
stos
ja
movsl
data16
lret
push
jmp
addr16
movsb
sar
sbb
mov
scas
or
outsl
add
jl
cmpsb
xor
sbb
add
jmp
test
rolb
xlat
cmp
cmp
lahf
push
push
cwtl
lcall
mov
sbb
jb
mov
mov
pushf
loopne
pop
pop
and
mov
mov
and
bound
pop
mov
sub
cmp
sbbb
fs
ds
sbbb
cmp
fdivl
leave
mov
imul
mov
popa
dec
push
push
call
enter
jns
add
popf
fsts
in
and
mov
gs
pop
adc
pop
add
and
cmp
pop
iret
cmp
ret
xchg
add
sub
mov
clc
rcr
iret
add
scas
loopne
sbb
bound
lds
mov
jg
and
sub
dec
leave
movsb
push
mov
in
push
sbb
jmp
cmp
mov
mov
mov
test
jge
dec
cmpsb
and
adc
or
xor
adc
xchg
or
sbb
xchg
adc
or
push
imul
std
ds
mov
subl
lds
adc
or
dec
sub
test
and
icebp
xor
fists
push
pop
sub
gs
xor
js
stos
or
mov
xor
push
xor
mov
mov
mov
xchg
and
jp
dec
out
scas
adc
int
cltd
or
dec
movntps
and
dec
fucomip
jo
push
int3
adc
fdivrl
aam
mov
xlat
pop
jne
mov
imul
test
adc
dec
daa
in
aaa
add
xchg
repnz
cmp
and
js
hlt
jl
cmp
adc
je
inc
dec
dec
rorb
jmp
jp
mov
leave
pop
push
scas
dec
icebp
dec
jnp
xor
cmp
push
bound
stos
or
adc
adc
sbb
sub
sti
aas
push
sbb
pop
sub
dec
clc
jnp
mov
sbb
sbb
ljmp
add
mov
push
push
sbb
inc
rorb
adc
sub
and
pushf
ja
lret
mov
bound
int
mov
push
ss
dec
sub
push
pop
jmp
dec
cs
xor
out
mov
jb
add
cmp
mov
mov
psubd
push
test
inc
pop
mov
push
dec
lock
mov
sbb
out
push
scas
mov
inc
out
inc
push
sahf
fbld
adc
repz
inc
enter
movsl
mov
inc
sub
adc
jbe
and
shlb
sub
mov
or
dec
jg,pt
cltd
inc
xor
and
fstl
and
adc
pop
inc
mov
mov
lcall
dec
aas
push
add
pusha
adc
jne
mov
cmpsl
push
dec
cmp
sbb
pop
push
test
fisubrs
dec
pop
xchg
movsb
pop
lock
nop
or
jmp
ljmp
adc
pop
mov
sbb
dec
out
repz
mov
insb
pop
inc
inc
pop
dec
dec
push
xchg
push
mov
pop
lret
loopne
fs
or
sbb
popa
push
dec
pop
sbb
fcmovbe
adc
jb
pop
or
cmp
stos
adc
xor
sbb
adc
repz
movsl
movsl
cmp
fidivrs
lods
cmpsb
xchg
cwtl
les
call
xchg
shlb
or
push
aad
or
insb
pop
add
push
pushf
addb
outsb
iret
mov
je
and
or
call
add
daa
xchg
sbb
call
pop
inc
rolb
mov
fs
mov
fidivl
push
jl
pop
inc
test
sbbb
out
in
inc
mov
out
cs
mov
movsl
fdivrs
cmp
push
cmp
call
jb
push
cmp
mov
cmp
out
mov
dec
mov
push
stos
xchg
mov
loop
pop
xor
add
jnp
scas
xchg
outsb
addl
mov
inc
adc
or
sub
mov
or
pop
inc
lods
pop
js
and
pop
xchg
ret
into
xor
dec
mov
lds
out
lock
enter
repz
sbb
mov
sbb
nop
cmpsl
clc
push
xchg
arpl
and
cli
jae
dec
mov
xor
sbb
ret
cs
jmp
xchg
xchg
mov
fwait
mov
call
std
call
xchg
leave
mov
sbb
fs
call
dec
pop
cmpsl
pusha
sbb
fisubrl
dec
push
mov
jnp
cmp
int3
sbb
adc
sub
sub
dec
test
and
push
push
pop
or
jns
pushl
cmp
js
sub
js
cmp
cli
xchg
jp
arpl
jmp
adc
cmp
inc
jl
addl
or
add
insl
sbb
fdivrl
mov
inc
cmp
stc
add
pop
dec
mov
call
xchg
push
adc
icebp
scas
mov
sahf
pop
es
push
mov
pop
int3
push
mov
inc
sub
xor
fcoml
rclb
dec
mul
sahf
push
es
stos
rolb
rcll
mov
sar
xchg
nop
test
dec
cmp
psubsw
mov
dec
adc
lcall
cmpsl
int
ds
push
push
pop
out
push
push
pop
in
push
xchg
mov
data16
in
push
and
ljmp
mov
test
cmpb
jno
bound
xor
lds
or
and
add
inc
push
pop
xchg
divb
mov
push
imul
jp
call
jno
inc
lea
imul
sbb
adc
inc
push
cmp
push
or
sbb
mov
push
dec
fs
push
dec
and
in
push
sub
mov
jb
and
cld
cmp
cmpsl
cwtl
pop
or
sub
jge
pop
mov
mov
in
mov
dec
je
mov
push
push
add
xchg
mov
test
scas
inc
imul
lret
xor
dec
or
push
cmp
xchg
pop
add
inc
add
test
push
push
xor
insb
aad
push
sub
inc
inc
push
call
pop
and
inc
aam
arpl
or
push
push
adc
fsubl
add
lods
cld
jmp
push
je
sub
rorb
push
push
mov
mov
mov
fnstcw
push
push
push
mov
dec
dec
push
nop
popfw
mov
xchg
or
ljmp
loop
out
push
jbe
arpl
out
push
push
das
daa
cmp
mov
push
mov
xchg
ficompl
and
jne
je
mull
mov
add
and
sbb
jmp
jl
push
pop
and
fcmovnbe
mov
sar
mov
sub
insl
clc
jge
popa
jmp
dec
cmp
mov
cmp
popf
daa
inc
cmc
and
je
dec
fnstsw
shll
sbb
and
add
ljmp
cmp
cs
sub
cmp
dec
jl
and
sbb
xchg
push
dec
mov
dec
inc
stos
and
push
scas
push
popa
sub
cs
jnp
rclb
test
dec
insb
daa
pop
mov
xchg
call
fbstp
mov
jb
hlt
xor
out
or
ds
pop
std
jnp
arpl
push
stos
and
adc
inc
or
js
ret
mov
insb
xchg
ja
fcoms
or
call
cmpsl
sub
ss
xor
sub
fdivl
cmpsl
sti
sub
push
call
inc
sub
test
fisttps
adc
sub
push
sub
int3
mov
adc
push
dec
frstor
aam
repz
sbb
lcall
jno
adc
enter
adc
je
cmp
and
imul
inc
pop
test
xor
lods
fmuls
pop
shlb
leave
test
mov
or
mov
hlt
test
in
and
inc
push
or
mov
fs
adc
pop
xor
pushf
pop
negl
adc
test
testb
stc
out
popf
daa
lea
leave
jmp
jmp
inc
add
imul
and
call
in
aas
pusha
adc
inc
ljmp
pop
imul
pop
les
xchg
sub
push
out
int
inc
in
incb
call
or
and
cmpsl
daa
adc
mov
push
push
jmp
add
adc
rcrb
ljmp
je
jmp
dec
mul
adc
jl
pop
xchg
xor
adc
add
sbb
mov
sbb
ja
fidivs
add
hlt
insb
out
xlat
dec
fdivp
and
pusha
aas
mov
gs
adc
dec
aaa
imul
test
pop
push
sub
pop
add
je
sub
fs
test
dec
xor
inc
out
stos
repz
dec
mov
out
push
out
dec
scas
xor
jne
mov
and
adc
sub
pop
inc
dec
and
mov
add
push
xlat
addb
cltd
jne,pt
mov
pop
inc
out
xor
scas
ret
dec
pop
jl
gs
popf
push
jo
inc
popf
cmpl
rolb
xchg
loope
and
ss
mov
aas
jl
fdivr
adc
inc
jo
inc
push
push
jg
call
sub
xor
sub
scas
and
mov
gs
or
loop
xchg
jg
xor
sub
cmpb
jne
jne
xor
jmp
sbb
shl
pushf
ljmp
shr
or
xlat
pushf
fs
sub
dec
jae
xor
xchg
in
push
xchg
or
stos
mov
arpl
dec
mov
xchg
test
sub
sbb
xor
mov
cmp
cmp
rcr
es
iret
pop
lret
adc
outsl
data16
popa
jmp
mov
mov
push
mov
in
and
pop
loope
inc
inc
and
inc
add
dec
lcall
push
push
jmp
push
pop
dec
adc
pop
dec
pop
iret
ljmp
stos
and
cld
test
test
aaa
mov
in
rorl
mov
sub
xchg
push
mov
imul
cmp
or
jns
or
xchg
jge
fistps
push
push
push
sub
mov
push
icebp
mov
fstps
dec
lds
push
jle
in
push
xor
bound
insl
pop
cmpsb
mov
pop
sub
mov
cmp
inc
pop
and
xchg
cltd
flds
or
call
test
sub
stc
rcl
fsubs
js
xchg
or
mov
sub
xchg
mov
outsb
les
mov
push
adc
fs
add
or
out
push
sub
test
inc
xor
xchg
xor
sbb
and
call
test
push
dec
imul
adc
and
in
sub
mov
sbb
or
sbb
js
sbb
and
arpl
sbb
loop
sub
lock
loopne
bound
cmp
dec
int
inc
sub
fs
bound
and
adc
sub
fcmovnbe
lods
lods
xchg
mov
push
fsubrp
fcmovb
add
subl
adc
xor
inc
lock
js
insl
cmc
add
ljmp
flds
and
or
movsb
cld
sbb
in
stos
push
mov
xor
nop
jle
loope
pop
sub
add
stos
xchg
push
xor
and
xor
test
and
xchg
sub
push
bound
sub
sub
adc
jl
rcr
call
sbb
cmp
adc
mov
dec
mov
ja
push
out
adc
mov
or
add
je
pop
loopne
add
cmpsb
cld
fs
mov
das
outsb
dec
sub
les
dec
cltd
loope
clc
push
xor
sbb
scas
jg
pop
inc
jl
inc
pop
popa
mov
cmp
push
icebp
fnstsw
inc
call
iret
or
jbe
pop
in
pusha
fists
pop
sub
or
inc
mov
pop
push
js
mov
xchg
add
lods
repnz
int
mov
mov
cmp
fldcw
pusha
push
dec
cmp
and
xchg
xor
nop
cmp
icebp
push
xor
rcrb
pop
cmp
jae
iret
mov
das
dec
pushl
dec
insb
ljmp
in
sub
pop
icebp
adc
mov
pop
sahf
push
cmpsl
push
xor
pusha
out
mov
daa
rcll
jb
inc
outsb
inc
mov
pop
das
inc
call
int3
push
push
sub
or
push
sub
adcl
call
push
xor
or
sarl
cwtl
jl
xchg
sbb
sub
lret
or
xor
jge
es
add
loope
sbb
add
sub
mov
push
lret
shr
add
jnp
xor
icebp
jnp
cmp
mov
or
aad
or
rclb
ret
idivl
cmc
sub
push
inc
mov
inc
push
and
dec
mov
repz
push
or
jmp
add
push
xchg
lds
mov
push
imul
daa
sar
cmp
movsl
jns
stos
and
fs
xlat
and
lea
pop
push
xchg
xor
push
lods
fcomp
dec
mov
je
dec
jle
test
pop
scas
and
push
push
dec
pusha
mov
pop
call
repz
sbb
add
xor
and
mov
cli
and
or
hlt
cltd
push
pop
cs
xor
xchg
xchg
fistps
xchg
add
das
fstl
xchg
insb
std
lods
fists
mov
add
xor
das
movsl
push
pop
xor
pop
inc
in
in
sub
lods
inc
in
sbb
loopne
xchg
add
cmp
push
add
xchg
mov
mov
cmp
ret
jle
pop
orb
jmp
shl
sbb
lds
lea
jmp
hlt
pop
flds
or
push
adc
nop
adc
bound
sbb
adc
pop
inc
or
cmpsl
mov
addl
jo
lcall
movsl
mov
jge
pop
lcall
jb
jne
popf
mov
sbb
aad
icebp
adc
rcrb
push
push
sub
inc
and
xchg
outsb
pushf
xchg
and
popf
je
pusha
cmp
ret
sbb
insb
pusha
pop
cmp
xor
xchg
fstpt
jg
and
scas
sbb
xchg
loop
pop
rolb
inc
mov
insl
push
idivl
cltd
and
pop
jl
sahf
mov
jge
cmp
ljmp
jp
std
jnp
fs
scas
pop
jne
aad
jbe
push
cmp
outsb
or
xchg
mov
lcall
fadds
cld
lcall
adc
lods
sub
loop
ss
sbb
mov
sti
jae
adc
push
and
add
sar
xchg
insb
push
inc
adc
adc
xor
pop
xchg
lahf
jg
mov
aaa
push
out
into
mulb
inc
mov
adc
repnz
dec
in
inc
pop
push
in
leave
hlt
cs
mov
adc
test
adc
test
fwait
mov
mov
xor
add
mov
mov
repz
fsubs
push
mov
mov
mov
push
push
call
xchg
loopne
adc
test
test
xor
add
stos
and
fimull
or
scas
or
jle
mov
fdivl
test
insb
or
nop
mov
inc
insl
fcoml
cmp
or
int
loope
and
daa
out
push
mov
lret
adc
cmp
fwait
cli
dec
mov
lret
cmp
adc
push
lods
jecxz
push
rcr
or
push
adc
pop
je
jp
xchg
sub
mov
in
stos
pop
std
and
xchg
popa
sti
and
adc
push
leave
lcall
sub
mov
push
lcall
nop
push
adc
imull
or
dec
mov
enter
in
push
xchg
in
je
push
xchg
or
rclb
push
mov
ljmp
nop
loopne
pop
pop
mov
int
lret
call
jo
daa
add
push
aam
inc
int3
scas
aam
mov
pop
mov
sub
inc
rolb
iret
pop
in
mov
pop
jne
mov
cmp
out
dec
or
adc
mov
xor
jnp
cltd
push
add
jmp
mov
lods
xor
es
cmp
jge
dec
into
push
mov
and
out
popa
inc
jg
push
ret
jmp
and
add
add
dec
test
stos
or
jmp
aaa
pop
dec
jnp
stos
shl
sub
push
call
es
and
sub
popa
daa
sub
dec
outsl
push
lock
jb
jg
mul
std
push
push
hlt
int
jle
sbb
in
inc
or
dec
iret
iret
lock
mov
jmp
adc
mov
mov
and
mov
shlb
jg
call
xchg
pop
stos
out
xchg
lcall
cmp
sub
xchg
adc
je
push
jbe
pop
imul
out
and
mov
popf
int3
inc
xchg
mov
or
sub
pop
fisubrs
or
ss
mov
jnp
je
push
sub
stos
add
test
test
dec
dec
jecxz
test
je
out
xchg
and
xor
andb
mov
movsl
sub
fistl
daa
and
movsb
jne
and
pop
push
add
mov
cld
jmp
and
cmp
sarl
dec
fisttps
pop
jl
or
popf
fldcw
adc
cmp
xchg
xchg
push
or
push
sub
sub
es
fsts
add
sbb
call
inc
pop
xor
inc
pop
in
mov
xor
fnstcw
add
pop
mov
test
cltd
lahf
xchg
fbld
mov
xor
push
stos
pop
add
jl
adc
ficomps
in
mov
rorl
daa
inc
aas
xchg
test
mov
xchg
clc
xor
dec
flds
cmp
sub
sar
jae
addb
fs
cmp
pusha
mov
sbb
xor
inc
lret
push
push
and
adc
insb
and
cmp
xchg
fstpl
mov
lds
or
cli
in
cld
fstl
push
es
push
ret
xchg
mov
push
shl
lds
leave
jmp
mov
jge
fucomp
xchg
pop
fcmovu
mov
push
pusha
mov
call
enter
push
mov
xchg
js
mull
je
jb
loop
dec
fldt
push
mov
test
cli
adc
sahf
jmp
pop
sbb
mov
test
cwtl
std
pop
pushf
xor
mov
mov
mov
xchg
js
lea
adc
test
cmc
incb
sbb
enter
es
test
push
lods
adc
push
push
and
inc
push
stos
add
icebp
mov
or
stc
mov
cmpsl
xor
inc
dec
add
and
imul
and
dec
sbb
xchg
or
sub
les
jl
stos
mov
outsl
aad
push
pop
mov
and
outsl
cltd
mov
arpl
enter
rcrb
cmp
loopne
mov
cmp
jmp
dec
cmp
fstps
xchg
jmp
add
cli
mov
dec
je
scas
test
cmp
dec
loop
and
ret
mov
stc
insb
or
cld
shrb
jge
inc
push
adc
test
shll
sbb
dec
mov
adc
mov
inc
adcb
push
pop
jle
lea
mov
and
jne
pop
cmp
and
mov
fsts
jl
lea
add
aas
icebp
hlt
ds
mov
xor
outsl
mov
adcl
dec
add
int
cmc
sti
jne
int
jnp
notb
or
outsb
lahf
sbb
pop
add
adc
xchg
inc
and
inc
cmpsl
aad
cmp
enter
xchg
sub
and
dec
dec
dec
adc
and
xchg
mov
add
sub
out
insb
imul
int3
mov
cmp
lea
push
dec
mov
xchg
gs
je
call
dec
mov
rclb
nop
jp
add
xor
add
or
jo
test
fsubrl
hlt
mov
frstor
pop
sbb
or
lock
pop
enter
mov
loope
xchg
ret
ds
ret
add
mov
mov
rcll
clc
xchg
jae
add
lea
fcom
push
dec
push
dec
test
inc
movsl
andl
jne
cmp
mov
iret
clc
mov
xchg
jmp
mov
aas
movsl
or
lods
inc
and
test
push
outsb
cmp
out
call
push
insb
sti
mov
push
addb
fsubp
cs
repz
or
repnz
mov
and
push
or
cmp
pop
in
cs
mov
insb
testl
xor
test
test
jl
sub
in
mov
mov
lds
ja
pop
stos
or
mov
addl
and
out
push
add
sti
sub
fmull
mov
mov
adc
pop
je
insl
xor
in
daa
rcrl
enter
addr16
jmp
stos
jg
ljmp
idivb
clc
pop
adc
mov
fcmove
js
fsubrl
or
xor
repz
idivl
push
setne
dec
mul
dec
add
mov
dec
jmp
xchg
add
push
inc
loop
and
gs
pop
inc
in
jmp
into
ljmp
add
or
and
rcll
cli
xchg
push
add
xor
jmp
and
push
inc
and
lds
dec
xlat
fwait
les
cmp
mov
adc
push
push
imul
jle
xor
gs
dec
dec
adc
push
jg
dec
sti
aaa
lds
pop
xchg
adc
pop
sub
mov
cmpsb
mov
push
ljmp
rcrb
add
push
dec
jo
xchg
std
mov
js
mov
adc
xchg
push
jns
movsb
ljmp
cmpsl
cli
cltd
jg
mov
das
mov
mov
inc
jle
and
sahf
nop
push
aas
add
pusha
or
jne
mov
pop
adc
mov
pop
push
or
sbb
adc
pop
sub
ja
int
jmp
add
add
or
test
das
stos
mov
xchg
in
xchg
pop
inc
je
stc
insb
mov
test
popa
adc
sub
or
or
ds
adc
push
xor
shll
push
xor
push
push
in
push
notl
sbb
and
loopne
call
imul
call
jmp
pop
cli
adc
dec
aad
mov
fidivrl
add
into
and
lds
test
sub
push
movsb
xchg
dec
sbb
bound
arpl
cwtl
fcoms
mov
mov
test
dec
sub
neg
pop
sbb
inc
dec
insl
cmp
dec
cmp
sub
or
sub
pop
cmp
hlt
repnz
inc
push
sbb
xchg
shrb
fs
xchg
jo
dec
shl
call
gs
cmp
sub
ret
pop
out
sbb
sub
xchg
enter
pop
pop
je
imul
ljmp
push
in
je
push
push
jmp
or
sahf
adc
jl
mov
or
stos
nop
or
mov
enter
mov
sbb
pop
sub
iret
push
dec
jmp
movsl
test
dec
ret
mov
lahf
mov
icebp
sub
push
adc
sbb
movsb
fbstp
ljmp
daa
pop
dec
push
into
daa
xchg
mov
je
jmp
pop
jb
int
mov
fistl
daa
fidivrl
lahf
jo
mov
sub
lods
dec
and
lahf
push
notb
imull
scas
inc
sbb
flds
or
addr16
pop
mov
call
or
adc
push
ljmp
or
push
fstl
sub
or
lahf
pop
cmp
and
pop
mov
iret
xchg
push
lods
aaa
adc
test
sub
std
lock
mov
lcall
jl
jmp
aaa
mov
xor
add
push
add
mulb
jle
lds
push
lea
stos
push
call
cmp
adc
and
orl
es
into
lahf
dec
mov
sahf
inc
sub
push
push
fildll
sub
ljmp
cmp
call
fwait
mov
mov
mov
daa
push
mov
das
lea
push
adc
mul
lcall
jne
jle
fwait
notb
inc
add
fists
shrb
push
stc
or
mov
jo
mov
xchg
mov
mov
stc
paddq
mov
leave
in
shll
cmp
hlt
loopne
or
not
imull
lret
cmp
sub
or
push
inc
inc
adc
test
sub
popf
sbbl
lea
call
pusha
add
push
push
call
addr16
inc
mov
pushf
pop
mov
sbb
adc
int
sbb
cmp
enter
test
out
add
call
in
mov
mov
mov
in
sahf
stos
pop
aaa
adc
dec
pop
pop
or
icebp
lds
cmp
and
popa
or
enter
fisttpll
jae
jmp
test
inc
inc
cmpsb
xchg
sbb
ja
divb
cld
adc
mov
mov
gs
push
pop
aaa
xchg
ret
and
xchg
push
stc
add
popf
arpl
or
push
scas
popl
daa
or
cmp
mov
push
cli
leave
jle
and
sbb
and
in
mov
pop
cmp
jb
push
inc
fisubs
adc
jg
push
push
jnp
lea
cmp
cmp
sub
and
cwtl
push
push
bound
orl
in
inc
mov
fsts
sub
pop
test
mov
fcmovne
je
or
adcl
pusha
pop
in
popf
out
fisttps
rolb
sbb
xchg
ljmp
mov
inc
mov
sti
jecxz
pop
mov
ror
sub
aaa
and
lods
adc
xor
loop
lret
cmp
ds
shll
and
xchg
pop
xor
repnz
dec
repz
aam
aaa
and
je
cmp
fwait
dec
lcall
lahf
mov
sbb
or
lret
pop
adc
je
push
sub
xchg
shlb
sbb
dec
adc
popf
mov
data16
xchg
sub
enter
xor
call
mov
mov
or
push
lret
shr
imul
xor
mov
jmp
push
hlt
ds
xor
dec
cwtl
dec
push
sti
dec
and
inc
mov
notl
and
enter
or
push
or
jno
inc
lahf
das
int3
sti
and
jno
mov
xchg
rorl
jne
adc
outsb
sbb
arpl
push
mov
push
adc
dec
and
adc
popa
insl
out
sub
cmp
jno
fisubrl
adc
ficoms
and
adc
and
add
bound
xor
push
mov
imul
pop
shr
in
mov
and
xorb
jb
pop
pop
mov
sti
sbb
mov
xchg
repnz
dec
mov
ret
daa
enter
stos
pop
ss
jmp
push
repz
fisubrs
jb
xchg
lods
cmp
add
test
loopne
sbb
adc
push
sub
ret
or
mov
inc
pop
mov
out
fimuls
shlb
cmpsb
and
sub
mov
and
rcl
fimuls
or
rcl
lock
clc
and
mov
testb
test
movups
inc
and
mov
mov
int3
xlat
nop
or
cmp
mov
add
out
mov
stos
mov
enter
sbb
pop
ret
je
adc
pop
adc
pusha
inc
sbb
mov
out
adc
add
dec
xchg
sub
inc
add
inc
sub
push
add
dec
cmp
pop
leave
xor
in
lods
push
and
mov
pusha
adc
and
lea
xor
dec
daa
jp
lahf
sub
xlat
pop
fstps
in
movsb
sub
pop
fmul
add
mov
jge
dec
add
push
sbb
sarl
enter
lock
call
adc
sub
mov
mov
jl
xchg
add
mov
adc
int
popl
push
imul
mov
addr16
popf
xor
inc
cmp
pop
leave
mov
mov
cld
js
call
pop
mov
mov
iret
xor
in
enter
adc
cmp
sbb
sti
push
mov
adc
shrb
and
add
sbb
aas
adc
adc
leave
nop
sub
add
adc
rclb
and
pop
adc
ljmp
pop
sub
dec
aas
and
inc
jg
inc
inc
and
cmp
and
aaa
add
push
fnsave
jecxz,pn
sub
enter
sbb
or
test
jp
es
jnp
cltd
inc
imulb
xchg
mov
dec
hlt
xor
adc
inc
push
dec
mov
push
xacquire
or
jecxz
and
repnz
dec
xor
shrl
divl
xor
mull
fdivs
lea
lea
xchg
push
pop
mov
clc
push
mov
xchg
sbb
leave
adc
pop
outsb
and
adc
fs
cmc
out
adc
shl
and
mov
inc
pop
scas
push
mov
ljmp
popf
sbb
xchg
push
jo
add
push
and
xor
xchg
mov
and
adc
and
adc
mov
nop
insb
inc
xor
dec
into
loope
mov
mov
xchg
inc
and
mov
or
xor
dec
or
jmp
and
mov
bound
adc
cmp
inc
inc
sbb
fcoms
addl
jmp
mov
test
sub
dec
movsb
jns
cmp
loop
ja
adc
dec
mov
sub
inc
dec
jge
xchg
notl
pop
sub
cmp
mov
push
push
ljmp
aad
cmp
mov
and
adc
insb
mov
adc
out
mov
sbb
mov
gs
push
test
add
add
testl
call
jbe
dec
cmp
sub
jo
xchg
and
adc
cmp
xchg
and
sbb
or
adc
imul
adc
pop
inc
jno
mov
sub
push
push
icebp
adc
push
jnp
sub
or
jecxz
jle
jp
jg
pop
aas
sub
in
mov
jge
push
fisttps
push
stc
add
sub
insb
adc
call
cmp
jnp
push
mov
lods
outsb
insl
idivl
out
icebp
mov
xor
std
inc
push
cmp
orb
das
xor
les
jge
adc
xor
xor
xchg
fwait
pop
mov
xchg
fnsave
jmp
cmc
mov
sub
mov
mov
fidivl
adc
popf
mov
add
fwait
cwtl
sub
xchg
cmpsb
xchg
enter
mov
sbb
xchg
divl
test
sbb
out
push
pop
push
jecxz
push
pusha
pushf
push
mov
fnstenv
dec
pop
ret
mov
xlat
adc
cmpsb
push
call
pop
mov
fmull
jmp
xor
dec
push
push
rcll
push
sbb
xchg
sub
cld
mov
adc
bnd
sti
xor
or
lds
dec
or
loop
or
rcrb
jmp
and
je
mov
add
mov
adc
adc
dec
arpl
faddl
dec
cltd
ret
inc
lods
mov
ret
lcall
in
out
add
clc
inc
xor
ja
fs
fisttps
mov
jl
out
mov
mov
jg
popa
and
sub
sub
lods
and
add
clc
adcl
push
sbb
adc
or
dec
lea
xchg
cmp
adc
pop
dec
test
ret
or
cmp
aad
dec
in
adc
scas
shll
lret
dec
xchg
dec
xor
in
imul
pop
pop
mov
mov
lock
test
jne
mov
test
jo
cli
cmc
lods
mov
pop
scas
cmpsb
rcl
mov
scas
iret
and
repnz
adc
fisttps
dec
cmp
sarb
mov
and
add
inc
push
dec
call
repnz
sub
lret
shr
mov
mov
les
add
add
cli
aad
xorb
ja
adc
xchg
inc
adc
cmpsl
leave
mov
ret
ljmp
inc
sub
fisubl
dec
fadd
fbstp
inc
jo
mov
mov
cmp
movsl
dec
adc
jbe
and
sbb
mov
imul
popf
push
movsb
je
pop
fisubs
xor
jge
sub
fcoms
mov
push
xor
jp
repz
les
scas
nop
and
add
or
xor
popf
lret
jb
and
mov
inc
insb
mov
inc
mov
xor
lds
pop
jbe
push
fwait
mov
clc
mov
in
insb
test
xor
ror
ret
inc
jmp
inc
in
pop
jle
mov
mov
int3
ret
enter
jg
push
mov
pop
lcall
or
cmp
sar
add
test
imul
ja
jle
lods
in
jb
sbb
push
push
or
inc
or
push
mov
xor
cltd
and
jno
outsb
stc
daa
js
jg
repnz
repz
aas
jle
push
repnz
xchg
cltd
add
pop
in
mov
sub
les
pusha
cmpsl
dec
mov
fnsave
lret
xor
popf
jbe
jb
xchg
les
mov
mov
clc
out
sub
leave
add
jno
out
shl
adc
nop
outsb
pop
or
leave
popa
push
xor
pop
mov
jge
dec
push
jb
hlt
mov
mov
cmp
mov
mov
pushf
jo
push
or
inc
dec
in
aam
dec
shll
add
xor
leave
or
pop
push
sbb
enter
mov
jecxz
cmc
adc
mov
jg
xchg
adc
adc
or
xchg
addb
cmc
sub
jns
and
sahf
idivb
mov
add
cmc
xchg
idivb
movsb
xor
out
out
in
shlb
push
loopne
inc
pop
push
push
adc
dec
pushf
insb
in
and
pop
push
xor
xorb
lods
les
xchg
divl
jmp
outsl
mov
cs
add
ljmp
push
push
inc
sub
icebp
adc
inc
cmp
xchg
push
lret
xor
jl
or
jne
sbb
scas
mov
push
and
dec
jg
push
test
jle
out
pushf
pop
inc
inc
mov
cmp
cld
pop
xor
sub
jl
fnsave
mov
enter
mov
and
jmp
je
cmpsb
out
xor
jbe
jle
test
inc
jne
cmp
cwtl
imul
sahf
xlat
adc
sbb
sub
lods
outsb
dec
sub
ljmp
int3
aaa
clc
pmaxsw
mov
js
inc
jo
cmp
push
or
mov
popa
pop
xor
into
adc
sub
mov
cmp
and
int
adc
sbb
pop
push
test
cmp
inc
sub
inc
xor
in
sub
loopne
push
push
push
lods
movsl
lcall
xchg
push
inc
adc
or
daa
outsb
cltd
xchg
mov
mov
push
out
mov
add
jle
shll
adc
and
neg
dec
inc
rcll
mov
loop
pop
cmp
pushf
call
or
fcompl
mov
aad
rcll
les
cmp
je
dec
pop
sbb
add
ja
imul
sarl
fnstenv
orb
xchg
je
sub
dec
or
inc
jmp
lcall
mov
je
test
xor
je
call
out
mov
pop
mov
xchg
or
fs
jmp
and
cmp
jmp
inc
fistl
test
in
add
jge
and
sub
and
aas
ret
dec
pop
mov
push
jae
adc
or
or
dec
in
push
ds
call
cmpsl
jp,pn
xor
mov
sub
je
mov
xor
sub
add
cwtl
lret
js
ret
xor
adc
or
pushl
es
xor
pop
js
neg
jns
push
je
sbb
inc
pop
sbb
sbb
adc
dec
data16
js
inc
sbb
mov
lods
mov
jmp
call
push
sbb
jecxz
test
push
scas
out
adc
mov
mov
add
adc
stos
sub
xchg
mov
push
inc
mov
push
jge
lea
inc
lea
mov
je
mov
push
and
call
pop
mov
fst
mov
inc
shll
cmp
les
xor
loope
hlt
iret
call
lds
or
and
sub
cmp
or
add
xor
shrl
add
adc
xchg
cmp
push
test
cltd
cmp
es
sub
lea
jbe
inc
lret
jl
rcrb
ficoms
mov
sbb
and
in
jne
jno
mov
push
add
jne
pushf
inc
push
inc
jge
mov
or
in
daa
adcb
rcrb
add
add
cmpsb
push
bound
mov
add
or
push
cmp
call
adc
push
rolb
pop
and
out
jl
jo
or
jge
nop
mov
iret
cltd
fisubl
fbstp
jmp
cmpsb
jno
and
pushf
sbb
sbb
jge
sub
mov
test
jmp
iret
sub
add
add
cmp
lret
movsb
stc
test
and
fsubrs
inc
out
push
ss
mov
adcl
inc
cmp
cmp
or
pop
and
ficoms
dec
push
clc
sahf
shlb
test
hlt
fistl
dec
or
sti
push
adc
fs
adc
int
xchg
in
popf
adc
jno
pop
lock
fdivl
dec
nop
push
mov
xchg
sbb
test
enter
pop
mov
add
adc
pusha
add
pop
ja
aam
pop
lahf
jnp
adc
adc
clc
rcrb
inc
pop
pop
push
ds
xchg
pop
jo
jbe
mov
enter
dec
sti
jb
icebp
jb
ret
mov
out
inc
loope
jne
mov
mov
inc
or
and
syscall
shll
fadd
add
push
cmp
scas
movsb
sbb
add
repz
les
pop
or
mov
push
or
push
int
sub
jns
mov
clc
push
push
lcallw
dec
shrb
mov
aas
add
push
shr
leave
adc
and
and
sbb
paddusw
and
gs
ret
jb
sbb
call
pop
das
jecxz
push
and
sbb
xchg
rcrb
mov
call
cmp
popa
mov
pop
adc
hlt
popa
and
repnz
and
neg
loopne
dec
inc
mov
imul
insb
daa
fsubl
mov
mov
lahf
outsl
adc
lret
sbb
mov
cmp
push
mov
jo
xchg
push
xchg
orb
lds
inc
jg
test
cld
cmpsb
sbb
je
add
inc
mov
fsub
aad
cmc
ficoms
push
sbb
and
xor
mov
or
into
sbb
or
inc
push
sub
push
push
dec
sub
repnz
jl
mov
xor
pop
dec
xlat
insl
out
adc
jb
dec
inc
push
push
push
jg
repnz
inc
fs
dec
or
pop
mov
call
mov
cmp
cld
fnstenv
aas
xchg
ret
adc
jl
ret
mov
xchg
mov
mov
jne
adc
cmp
lahf
lret
out
lods
clc
pop
ja
dec
inc
xor
adc
dec
xchg
movsl
addb
push
xlat
roll
adcl
jg
dec
fcoms
scas
mov
cmp
cmp
and
movsl
or
int3
or
sbb
es
out
jb
nop
xchg
in
push
test
ja
insb
mov
and
daa
jecxz
adc
cmpsb
xchg
aad
cwtl
pop
adc
inc
cmp
dec
push
mov
jmp
js
lahf
cmpsl
enter
xchg
lcall
repz
popa
inc
call
gs
add
int
leave
daa
xchg
sti
cmp
and
sahf
xchg
lods
inc
pushf
sbb
hlt
addl
jl
mov
adc
cmp
cmpsl
jl
dec
push
cmp
aam
mov
add
aas
sub
aad
lea
sub
fyl2x
sub
imul
gs
cmpsl
flds
xchg
pop
sti
popf
movsb
jne
xlat
pop
inc
push
xchg
pop
sub
mov
and
mov
mov
hlt
in
push
clc
bound
aad
mov
es
xchg
ret
fstl
addb
xchg
rorb
insb
xor
dec
sbb
out
add
shll
adcb
loope
xor
leave
xlat
xchg
cwtl
push
xlat
mov
push
imul
adc
push
ljmp
andb
add
es
cwtl
xchg
shll
negb
xchg
je
jl
push
dec
js
clc
and
aaa
movsb
jecxz
adc
jns
ljmp
std
sahf
cmpb
push
mulb
add
clc
pop
movsl
pop
push
or
dec
mov
ja
or
fistl
pop
in
push
inc
xchg
add
add
cmpsb
lods
mov
rolb
mov
sub
scas
sub
dec
mov
lahf
repz
ljmp
push
inc
add
pop
add
xchg
aad
lds
dec
je
adc
rep
les
test
pop
stos
lcall
jl
int
cmp
jle
push
icebp
push
cs
dec
out
fldenv
sbb
push
popf
inc
mov
jns
dec
rorl
inc
or
cmp
add
aas
push
cmc
xchg
pop
stos
add
adc
cli
in
cmp
mov
iret
roll
or
sbb
or
mov
jmp
imul
and
jmp
std
inc
sbb
stos
mov
ljmp
sarb
aas
mov
neg
lret
mov
sbb
sbb
xor
mov
push
lods
jp
loope
or
fistpl
repnz
divl
inc
adc
sub
in
movsl
sub
imul
pop
fwait
and
movsl
clc
mov
leave
cmp
scas
push
or
inc
jl
enter
lret
sbb
jno
aas
lock
test
dec
and
jge
out
adc
pop
cmp
add
push
add
je
dec
inc
mov
push
push
xchg
aaa
lds
lock
hlt
mov
pop
sub
jmp
lea
sbb
ret
push
nop
imul
rcll
or
jo
das
neg
fcompl
lea
jl
ds
pusha
push
add
sub
dec
push
test
push
xor
test
inc
daa
sub
imull
inc
adc
bnd
mov
imul
into
pop
xchg
mov
aas
jmp
inc
or
or
aam
add
or
sbb
push
jg
jae
call
push
xchg
jae
call
dec
lds
hlt
shrb
xor
lcall
sbb
call
sub
push
jle
jae
push
sub
insl
lds
jno
or
sbb
and
shll
add
imul
mov
rcll
cmpsl
cld
lods
data16
xchg
sbb
sbb
scas
inc
imul
inc
inc
and
popf
jo
enter
into
cmp
jmp
sti
dec
sub
mov
lret
push
pop
sub
movsl
xchg
mov
jno
cmpsb
sbb
loopne
test
in
in
imul
add
inc
push
push
or
cmp
out
cld
aas
mov
in
nop
fistps
subb
outsb
idivb
add
or
fs
jg
dec
pop
test
pop
in
sub
mov
xchg
xlat
add
adc
cmpl
divl
pop
add
call
adc
adc
add
dec
jl
push
push
repnz
lock
mov
ja
lcall
add
rolb
inc
cs
add
jmp
movsl
out
lahf
adc
push
dec
movsl
ret
mov
xor
std
out
ficoml
and
adc
scas
dec
add
xchg
fs
dec
mov
sbb
test
insb
push
int
inc
das
or
push
pop
and
das
shlb
or
adc
je
add
inc
cmp
jl
mov
ret
mov
out
notb
in
jge
or
adc
mov
adc
xor
sti
xor
dec
stc
les
pop
arpl
or
notl
or
notb
or
cmc
adc
and
adc
repz
push
mov
icebp
std
cmp
adc
lea
sahf
or
inc
inc
mov
stos
sbb
or
xchg
stos
icebp
pop
das
mov
add
xchg
pop
sbb
and
cltd
adc
cmc
xor
mov
push
dec
xchg
sub
mov
sbb
inc
jl
sub
hlt
adc
aam
repz
lea
mov
rcl
andb
adc
shlb
jmp
pop
and
sub
adc
or
ja
inc
ret
test
test
js
jecxz
mov
add
jae
test
stos
add
or
mov
in
out
and
adc
rcl
xchg
pusha
imul
add
or
das
sub
cmp
mov
sub
cmp
pop
or
pop
rclb
push
dec
or
inc
lea
adc
xorl
or
scas
xor
adc
out
add
add
xor
inc
push
test
mov
jb
aas
add
cmpl
aas
or
or
add
jl
jmp
mov
dec
jle
fmulp
cmp
loope
push
and
jmp
mov
xchg
xorl
jmp
jbe
dec
mov
or
das
pop
in
add
push
push
call
or
shr
adcb
push
sarl
add
adc
cwtl
or
add
jns
adc
sub
and
daa
jbe
arpl
sbb
and
neg
sbb
stc
call
xor
xor
inc
and
dec
movsl
ret
out
dec
inc
test
jmp
stos
mov
push
and
repz
and
pop
enter
cmpsb
and
jne
jle
test
cmp
sbb
xchg
lahf
mov
sbb
sub
lds
jmp
mov
repnz
orb
jae
push
movsl
loop
ret
inc
cmp
dec
fidivl
and
xorl
shll
orb
outsl
cmp
enter
xor
xor
adc
imul
adc
pop
and
inc
mov
cmpsl
push
fs
sub
js
sbb
test
jmp
mov
dec
fmuls
leave
or
dec
pop
push
pop
movsb
js,pt
mov
cmpsb
ret
add
cmp
pop
and
inc
push
pop
push
inc
cltd
push
inc
adc
cmp
aam
fadds
cmp
call
inc
add
xchg
cld
call
xchg
in
ret
push
adc
sbb
inc
fdivl
sbb
push
shl
sti
xchg
cmc
mov
sbb
stos
int3
mov
dec
mov
adc
add
in
lods
push
jmp
push
stc
inc
mov
mov
push
or
lods
add
in
sub
push
mov
fsubrl
addl
fcompl
dec
ljmp
js
ficompl
rcll
std
sti
sahf
adc
and
push
xchg
add
call
mov
xlat
lss
add
decl
and
roll
mov
inc
push
insl
popa
imul
ret
push
adc
lock
xor
mov
call
popa
jle
fidivl
iret
lods
and
jge
xor
rolb
jo
and
repz
jno
movsb
xor
imul
xor
jl
push
das
mov
cli
mov
arpl
je
mov
jne
mov
lahf
sbb
or
mov
out
adcb
sbb
inc
mov
lock
or
mov
lahf
loop
cmp
and
and
jne
mov
or
pop
daa
in
out
jns
or
sbb
push
pop
or
or
mov
push
mov
xchg
sub
cld
scas
mov
stc
cmpsl
mov
orb
ljmp
push
daa
push
mov
add
ret
pop
shll
add
in
push
and
nop
icebp
pop
pushf
je
push
data16
daa
inc
add
insb
cmp
iret
jp
adc
adc
jne
subb
aad
jae
add
add
stos
ljmp
push
int3
inc
push
leave
push
mov
pop
mov
call
xor
xchg
je
es
mov
mov
add
test
loope
test
imul
int3
movsl
add
push
mov
adc
cmpsl
and
lea
push
out
mov
lcall
in
lds
inc
jne
xor
enter
int
int3
push
sub
aam
adc
sbb
or
repz
and
fmull
push
mov
les
lahf
iret
add
xor
add
lcall
push
notl
or
push
call
lahf
roll
data16
out
orl
int3
xchg
and
mov
or
or
jg
je
cmp
push
aam
mov
mov
add
push
cwtl
inc
test
mov
mov
test
js
cmp
add
sub
inc
cmp
xchg
lock
cwtl
sarb
gs
sub
adc
icebp
xchg
stos
jne
or
xor
jmp
mov
cmp
aaa
inc
enter
fldenv
xchg
adc
adc
std
sub
mov
xchg
enter
cli
jmp
mov
xchg
or
les
jg
fst
xor
dec
mov
push
lds
pop
mov
clc
pop
mov
cmpb
lds
mov
lods
sub
stos
enter
adc
jns
cmp
leave
faddl
mov
dec
dec
adc
mov
dec
pop
xor
push
push
add
xlat
sti
push
adc
push
cltd
mov
mov
jns
rolb
js
xchg
inc
add
jne
aad
lahf
cmp
and
js
movsl
push
pop
sbb
dec
aad
mov
popf
inc
movsb
xor
inc
insb
dec
mov
sub
insb
or
fdivs
jecxz
negb
fs
sbb
into
inc
fcmovbe
ret
rclb
dec
aaa
push
or
and
enter
add
and
push
jne
int3
lock
or
mov
dec
lock
scas
mov
xchg
cld
jl
mov
lret
fscale
ret
fs
and
loopne
dec
ja
jmp
hlt
jne
nop
dec
sub
lret
adc
pop
adc
cltd
pop
jmp
stos
and
mov
cmp
cmp
jne
daa
xor
dec
push
xchg
jnp
or
sahf
dec
enter
out
push
inc
pop
inc
aaa
adc
fdivrs
mov
dec
dec
stc
push
or
ljmp
das
ljmp
cmp
sbb
xchg
inc
add
pop
lods
jae
jb
lcall
jbe
dec
cwtl
jb
cmp
cs
nop
jl
cwtl
adc
sub
jp
adc
pop
inc
xor
sub
call
push
pop
adc
negb
inc
shrl
pop
add
sbb
adc
paddq
sarl
orl
es
out
xor
adc
in
imul
test
pop
mov
push
mov
sbb
jle
xchg
sub
mov
stc
inc
jg
xchg
add
inc
or
das
push
aaa
int3
stc
adc
mov
mov
mov
mov
test
stos
mov
xchg
shl
sahf
pop
and
ss
fucomp
inc
test
stc
sub
call
ljmp
cltd
fistpll
add
xchg
push
ljmp
cmp
sub
loop
icebp
push
les
jecxz
mov
shlb
stc
adc
imul
push
xchg
repz
movsb
add
addb
adc
add
or
pop
fidivl
mov
push
in
aaa
mov
add
imul
cmp
jnp
fbld
push
and
ds
mov
flds
jmp
mov
js
push
xchg
cmp
test
outsl
lods
adc
push
cmp
pop
cmpl
adc
movnti
iret
in
movsb
popf
push
inc
adcl
js
add
jne
sub
and
lods
mov
leave
sub
mov
out
test
or
or
dec
loopne
inc
int3
jp
fcoml
push
inc
enter
adc
push
cmp
stos
jnp
xchg
pop
mov
repnz
ret
mov
dec
inc
nop
bound
rclb
rolb
inc
cmc
dec
or
mov
or
add
push
int
xchg
sub
add
call
dec
jg
push
cmpsb
push
lret
xchg
cmc
lea
out
pop
inc
popa
xlat
cmp
xor
mov
lods
jb
mov
stos
dec
sbb
mov
mov
inc
adc
fs
mov
and
pop
or
call
or
jbe
test
dec
in
jmp
fs
adc
mov
test
jno
repnz
jns
jae
pop
push
push
and
cmp
inc
movb
test
mov
add
add
sub
xor
out
loop
pop
out
dec
cld
cmp
mov
push
sub
out
nop
mov
call
mov
cli
cmp
inc
jns
and
lea
aam
sub
xor
movsb
push
sub
mov
mov
call
leave
in
xor
cmp
dec
cmp
mov
xchg
leave
inc
xor
or
and
xchg
push
jl
jne
pop
je
sub
push
mov
sub
in
cmp
mov
adc
adc
dec
hlt
fdivs
je
push
cmp
mov
or
daa
dec
leave
nop
pop
sub
xor
push
xchg
xorl
fldenv
jmp
mov
inc
fwait
push
repz
es
and
popf
pop
mov
popa
test
testb
loope
mov
and
jle
xlat
adc
roll
or
jmp
clc
push
xor
pop
xchg
es
mov
aam
call
out
sub
adc
and
xchg
xor
adcb
sub
cltd
outsb
call
xor
pop
inc
lock
add
push
rcll
popl
push
mov
jmp
js
lea
mov
pop
mov
pop
xchg
sahf
add
sub
dec
and
jle
adc
dec
ja
cld
test
cs
mov
and
dec
push
sub
lret
inc
cmp
xor
ret
xchg
into
dec
sub
test
shrb
popf
xchg
xor
ljmp
test
jg
pop
xor
fldt
xchg
adc
repz
cs
push
je
roll
and
movsbl
in
adc
cmpsl
xor
add
sub
or
aam
lret
xlat
shll
sbb
xchg
adc
nop
jge
adc
add
push
and
pop
sub
cmp
inc
sub
jl
shlb
jnp
mov
lock
xsaves
push
je
pop
in
pushf
mov
sub
in
jb
and
or
into
dec
xor
lret
push
adc
pushf
test
sbbb
rcrl
mov
fldenv
inc
pop
adc
adc
mov
mov
ret
jmp
mov
and
pusha
and
stc
add
push
repz
mov
hlt
gs
lock
daa
je
mov
and
jbe
and
xchg
cltd
jb
inc
xor
adc
ljmp
inc
adc
loopne
int3
sub
adc
mov
push
call
mov
fwait
jle
aas
dec
mov
mov
rcrb
inc
orl
pusha
add
test
addb
mov
call
les
hlt
jno
mov
and
das
sbb
cmp
cwtl
dec
push
push
xchg
sbb
dec
call
xchg
jmp
push
mov
and
fmull
dec
adc
xlat
clc
ficompl
les
jmp
push
in
rcrb
push
sub
lds
into
stos
dec
mov
ja
out
xchg
push
mov
dec
sti
inc
jo
adc
inc
or
testb
push
pushf
sahf
jbe
lock
cmp
sbb
xor
and
push
and
sbb
push
sti
pop
cmp
xor
imul
or
push
call
push
adc
in
iret
movb
dec
sub
or
adc
and
push
mov
or
addr16
or
push
inc
out
data16
or
jle
or
mov
add
mov
or
aas
jmp
nop
popa
cmp
shll
mov
inc
inc
jmp
mov
push
push
in
cmp
cmp
adc
adc
xor
pop
cmp
sbb
add
fs
hlt
cs
lock
mov
or
rcll
mov
and
and
aas
sbb
frstor
or
pop
fcomps
push
repnz
test
lfs
bound
mov
fldl
fsubrl
add
xchg
mov
nop
stos
or
ret
movsl
push
sbb
and
jmp
imul
sti
sbb
jnp
push
jbe
iret
jp
aad
xor
or
call
shll
sbb
call
push
xor
ja
sub
sahf
add
sbb
fmuls
movsw
pop
add
sbb
pop
cmp
add
and
dec
in
inc
mov
xor
and
dec
or
mov
mov
in
arpl
and
xchg
mov
adc
mov
inc
movsb
out
push
mov
sub
inc
xchg
adc
nop
pop
add
testb
pop
jp
jecxz
subb
andl
fdivs
adc
cmp
ljmp
cmc
pop
das
roll
int3
sub
dec
push
mov
mov
adc
sbb
mov
mov
std
adc
add
stos
and
dec
mov
and
inc
xor
sub
mov
les
xchg
sub
mov
stc
das
xchg
and
test
clc
push
mov
push
push
lea
out
cmp
dec
popa
mov
push
or
mov
adc
or
inc
and
lods
pop
sub
test
je
cmp
imul
or
cmp
icebp
jno
cmp
je
cmp
cmp
add
push
add
cmpb
cmp
xlat
adc
xlat
xor
loopne
sbb
mov
fcoml
push
push
ret
fdivrl
mov
mov
test
sub
cmp
xchg
and
jge
push
sub
mov
dec
shl
sub
and
add
jo
icebp
jl
jle
mov
int
xor
jae
test
je
stos
or
jg
adc
pop
push
sbb
cs
sub
or
es
adc
leave
mov
sub
dec
pop
xor
pushf
clc
mov
adc
call
mov
pop
pop
add
fmul
and
hlt
cmp
xor
push
adc
lods
into
sub
fldl
gs
sub
lds
and
aad
xor
pop
push
xchg
xchg
pop
sbb
dec
outsl
mov
test
pop
adc
or
hlt
or
or
and
adc
mov
call
daa
push
adc
sbb
xchg
pop
mov
lods
mov
jnp
lock
and
mov
js
or
or
xor
and
stc
ljmp
movswl
hlt
cmpl
loopne
pop
repz
xchg
cltd
pop
lret
incl
cmpl
dec
jmp
sbb
ret
jns
ret
push
aam
repnz
stos
inc
dec
xor
test
scas
aaa
arpl
stc
mov
iret
xchg
pop
xor
stc
and
idiv
jbe
adc
leave
and
inc
jg
lret
test
jne
adc
mov
push
movsb
and
aas
loop
adc
clc
jl
dec
lcall
or
testb
or
mov
scas
in
in
shll
jmp
scas
xor
sbb
fdivs
xchg
adcl
test
fs
scas
mov
xchg
fld
subb
je
jb
cmpsl
das
nop
es
sub
int3
jns
push
je
adc
inc
pusha
mov
jne
mov
lods
mov
or
sub
adc
inc
inc
cmp
or
sbb
mov
mov
adc
pop
mov
inc
or
out
add
mov
xchg
jo
mov
xchg
aam
xchg
or
stc
adc
mov
mov
xor
movsb
adc
fsts
xchg
mov
push
inc
or
out
fbstp
loop
je
pop
out
lret
xor
pop
es
dec
cmpl
pop
sbb
push
push
addr16
orb
sbb
leave
jne
adc
insb
std
xchg
jle
fs
xchg
xchg
push
adc
mov
sub
cs
and
mov
les
insb
cmp
xor
je
mov
jmp
xchg
jp
cwtl
cs
fstps
sub
jno
mov
dec
push
or
jno
mov
and
push
outsb
shll
in
pop
shll
dec
mov
aad
loop
ss
mov
jae
push
push
mov
and
cmp
sub
mov
and
inc
lea
pop
repnz
jle
lahf
inc
jl
xchg
inc
cmp
test
cld
cmp
cs
xchg
dec
in
lea
or
insl
sti
xchg
cmp
mov
mov
push
data16
movl
add
movsl
dec
out
in
or
mov
les
inc
mov
movsb
stc
pop
push
inc
loope
and
lea
and
imul
bound
cli
sub
out
cwtl
fs
push
cmc
call
or
add
bound
or
jae
fs
lea
ret
adc
sbb
sbb
aas
inc
mov
xor
jle
xlat
jb
xchg
mov
sub
das
scas
mov
dec
cmp
mov
dec
pop
adc
out
mov
xlat
push
popf
sub
jg,pn
pop
push
cmp
adc
gs
push
inc
pop
add
push
push
mov
mov
sub
and
xchg
adc
aad
stos
or
xchg
test
sub
push
or
cltd
xchg
push
jo
lret
or
call
stos
push
lock
lods
inc
cmpsb
mov
mov
lea
jg
push
adc
cmc
sub
mov
inc
cltd
sub
das
push
movb
mov
push
call
jmp
mov
sbb
data16
pop
nop
jg
inc
adc
mov
movsb
stc
sub
inc
dec
mov
inc
addl
jle
jp
dec
push
sahf
or
clc
xchg
iret
out
xchg
mov
mov
popw
fnstcw
inc
cmc
test
xor
sub
fisubrl
xabort
daa
xchg
jmp
icebp
nop
sbb
push
jne
adc
cmp
xlat
jmp
jge
sbb
xchg
push
push
dec
popa
mov
test
push
out
es
nop
cmp
xchg
jl
sub
push
add
xchg
bound
inc
mov
dec
mov
jne
xlat
inc
lods
mov
push
push
pop
xor
out
lods
mulb
cmc
lret
xlat
iret
rclb
add
call
aam
hlt
and
mov
sub
mov
xchg
xchg
dec
rcl
and
mov
sub
lret
jle
sub
ret
sahf
in
ja
lahf
push
and
mov
adc
add
dec
and
xor
les
ljmp
dec
add
jo
idivl
jo
pop
ret
cmp
jb
repnz
in
adc
stc
and
or
out
mov
insb
lds
imul
jb
in
std
test
inc
lret
sbb
and
cmp
push
test
add
dec
cmc
mov
call
jbe
inc
mov
jle
out
lcall
test
lea
mov
mov
call
inc
cmp
fildl
into
mov
inc
jmp
xchg
inc
mov
push
stos
xor
pop
movsb
dec
inc
dec
cwtl
dec
cmp
pop
lea
xchg
jmp
imul
pop
cmpsl
aas
aas
push
jg
cs
das
inc
or
std
aas
adc
xor
nop
sub
xchg
or
pop
lds
mov
push
dec
lods
cmpsb
pop
subl
pop
inc
push
sub
mov
scas
lret
mov
mov
inc
jp
sub
sbb
sbb
sbb
mov
sti
fxch
or
push
mov
dec
and
adc
and
ficoml
mov
mov
or
jge
mov
cmp
sub
std
mov
aaa
push
push
aaa
add
jmp
push
orl
xor
out
mov
xor
cmp
add
in
dec
sbb
inc
je
sahf
ljmp
inc
adc
je
mov
pop
scas
je
mov
mov
ds
xchg
adc
and
mov
xor
jp
push
push
incl
lds
dec
jnp
adc
iret
jge
cmpsb
xchg
and
test
out
mov
lcall
clc
add
sbb
lock
je
jo
jmp
pusha
xor
pusha
sbb
in
fnstenv
popa
mov
mov
clc
and
dec
push
insb
or
jne
jno
insl
cmp
lds
mulb
dec
cmpsl
aam
xor
fidivl
test
jmp
jno
jmp
adc
xchg
lcall
push
pop
and
pop
repnz
arpl
mov
lea
sbb
and
push
cmp
push
dec
inc
mov
ja
jnp
dec
dec
mov
adc
inc
add
dec
movups
jge
test
xchg
scas
clc
mov
inc
fwait
push
sbb
push
push
inc
sbb
xchg
xor
stos
or
mov
or
popf
cs
in
mov
daa
pop
clc
fsubs
bound
shrl
adc
xlat
daa
fwait
data16
sbb
mov
cmc
or
sub
mov
shll
in
mov
sub
mov
add
and
movsl
sbb
test
mov
cmp
push
mov
xchg
and
xor
xor
push
mov
cmp
mov
lahf
mov
clc
jl
hlt
test
mov
jp
cld
pop
movsb
mov
xchg
stos
add
test
xorb
jae
or
adc
ljmp
lock
pop
stos
xor
je
adc
sbb
push
push
lock
mov
loop
lret
and
sbb
test
and
push
call
js
imul
repz
cmpsb
mov
push
sub
push
or
inc
insb
jecxz
data16
jl
adc
mov
sbb
sub
or
cmp
push
mov
jp
and
mov
mov
icebp
cmp
sub
mov
imul
inc
dec
outsl
dec
adc
dec
pusha
sub
dec
lea
aam
iret
addb
rcll
dec
push
inc
std
dec
mov
jne
adc
dec
ret
push
call
lret
movsl
inc
add
decw
in
push
std
das
xor
jmp
into
fdivrs
jecxz
or
push
pop
inc
jge
rcrb
dec
cmp
push
xor
addb
das
fs
or
adc
and
xor
inc
mov
insb
sub
out
dec
jnp
inc
mov
fisttpll
xchg
mov
mov
addl
sub
mov
sub
mov
and
push
dec
leave
insl
mov
push
dec
bnd
jno
pop
jg
hlt
stc
int
lcall
and
jo
and
jnp
sbb
ret
jns
dec
mov
xchg
inc
fmuls
mov
dec
jbe
pop
inc
jle
rclb
std
mov
push
push
dec
pop
pop
out
xor
addr16
cmpsb
cwtl
push
pop
fidivs
sbb
ret
shll
add
push
xchg
popf
dec
addl
in
leave
or
mov
mov
pop
sub
mov
push
movsb
jmp
xchg
pop
mov
xor
jne
cmp
and
loopne
cmp
bound
sbbb
push
mov
mov
adc
sub
das
adcb
out
pop
cmc
lds
push
cmc
dec
cltd
sbb
sub
pop
xor
xchg
and
mov
and
or
test
cli
in
sbb
push
mov
cmpsb
popf
gs
loop
dec
jmp
imul
je
inc
push
inc
fldcw
inc
test
mov
outsb
call
push
test
sbb
lahf
inc
fcomi
xor
xor
sbb
sarb
push
mov
xchg
adc
pop
in
xchg
xor
cmp
xor
aad
in
out
popf
mov
dec
jp
mov
jle
pop
in
and
das
sub
dec
lret
rcll
xor
sub
cltd
inc
inc
aam
mov
or
loope
pusha
imul
inc
mov
sbb
mov
loope
and
movsb
rclb
pop
mov
data16
pop
mov
inc
ret
dec
adc
call
xor
cmp
xchg
scas
jmp
rol
inc
cli
dec
inc
fsubrl
fyl2xp1
outsl
loop
bound
jne
cmpsb
sub
jmp
insl
mov
pop
scas
pop
push
and
xchg
mov
cmp
add
adc
sbb
mov
inc
dec
add
push
pop
pop
jecxz
xchg
dec
push
cmp
cmpsb
or
xor
dec
stos
xchg
adc
adcb
mov
das
mov
sbb
push
xor
lds
dec
mov
call
ljmp
arpl
jp
sbb
subb
dec
or
sbb
add
inc
add
lods
add
fstpl
xchg
xchg
aad
and
aaa
adc
xor
test
mov
mov
dec
and
popa
mov
and
push
mov
imul
sbb
pop
sub
push
aaa
or
inc
add
fucompp
negl
fildl
call
push
add
and
pusha
jb
lea
sub
jg
sbb
push
push
xchg
int
or
jmp
xor
pop
dec
enter
or
add
lret
ret
push
mov
clc
je
test
lods
and
sbb
jg
inc
jg
daa
dec
adc
mov
mov
push
sub
adc
daa
call
aas
add
pop
sbb
cmp
scas
das
sub
adc
push
call
fmull
ficoms
jmp
add
fstl
mov
adc
and
pop
jmp
xor
xchg
or
cmc
xor
outsb
mov
insl
or
inc
inc
xor
jb
mov
push
aas
fadds
dec
bound
shlb
sahf
cli
adc
inc
or
cmpsb
xchg
and
xchg
lds
mov
pop
mov
dec
mov
call
movsl
les
outsl
lods
push
and
push
jb
jae
sub
scas
bound
nop
dec
mov
iret
and
inc
or
loopne
xchg
sbbl
dec
xchg
or
jne
rcll
jl
or
lret
cltd
mov
inc
data16
dec
test
push
es
into
mov
mov
rorl
add
inc
cwtl
sub
rorb
jmp
mov
movsb
inc
test
sbbl
cwtl
notb
mov
cltd
and
push
pop
jne
sub
mov
adc
adc
out
pop
in
mov
dec
sub
aad
adc
out
scas
popl
jmp
mov
sahf
push
pop
inc
pop
lret
sbb
fs
xorb
dec
or
mov
and
push
pop
xor
pop
jecxz
pop
dec
xchg
xor
adc
or
imul
or
or
push
push
jne
xor
rcr
push
mov
pop
daa
int
push
pushf
pusha
inc
or
cmpb
shrb
adc
rolb
or
sub
ret
mov
ror
cmc
adc
lea
loop
xchg
jbe
js
mov
adc
push
mov
leave
push
arpl
xchg
mov
aas
mov
fs
pop
push
push
aas
adc
cmpsl
cltd
and
jb
popf
leave
mov
out
popa
mov
or
sbb
cmp
shlb
or
in
sbb
and
dec
and
xor
lcall
lods
pop
add
mov
sbb
je
or
adc
hlt
aas
clc
fildll
pop
push
out
fcoml
and
adc
sub
popa
or
imul
mov
lea
mov
nop
das
mov
shlb
jb
push
leave
xchg
dec
test
xchg
sub
cmpsb
jne
push
mov
inc
loopne
in
or
fistpl
adc
lock
push
pop
push
mov
loopne
ljmp
int
fsubr
out
fcoml
jge
arpl
mov
repz
das
mov
lea
orb
imul
sub
imul
lret
push
add
arpl
dec
xchg
push
cmp
xchg
ljmp
sbb
mov
pop
push
adc
popf
pop
sbb
and
inc
pop
stos
push
arpl
fstpt
push
cmpsb
push
jns
dec
je
adc
add
mov
aas
and
sub
in
jbe
sbb
dec
mov
out
adc
and
mov
dec
push
out
adc
jbe,pt
inc
inc
and
cmp
imul
fwait
ret
xchg
cmp
clc
mov
outsb
push
mov
in
sahf
mov
jne
pop
inc
clc
rcrb
lock
mov
sbb
test
call
jp
sub
sahf
mov
adcl
inc
inc
and
out
bound
je
push
test
testb
sti
xchg
mov
loopne
pop
mov
mov
adc
pop
mov
cmp
movsl
jl
inc
push
sub
movsb
push
push
dec
dec
fyl2xp1
and
jle
pusha
xchg
scas
enter
fxam
adc
in
xor
xor
ficoml
call
shrl
or
xor
icebp
test
mov
mov
pop
lock
lock
icebp
dec
das
into
xor
mov
add
adc
adc
cmpsl
jns
ret
and
xor
inc
pushf
aam
push
push
stos
sub
xchg
repz
push
push
popf
icebp
push
inc
pop
mov
mov
decl
std
sarb
dec
les
push
mov
mov
sar
mov
inc
dec
cli
mov
push
aam
jb
push
dec
dec
lock
cmpsl
pop
and
and
iret
or
dec
clc
movsb
lods
test
fcoml
inc
jo
pop
add
push
sbb
add
dec
inc
xor
add
mov
fs
call
ret
mov
jle
add
or
ret
jmp
and
dec
ror
inc
jo
xlat
and
mov
xlat
jne
add
or
push
pop
jmp
adc
xor
mov
adc
scas
xor
jmp
mov
je
mov
dec
daa
jne
loopne
call
sub
and
bound
lods
ljmp
lock
ja
mov
mov
mov
outsb
dec
scas
sbb
push
mov
enter
lods
sub
sub
or
push
pop
add
shrb
xor
iret
mov
dec
push
add
fsubr
xor
insl
adc
hlt
std
dec
xor
pop
dec
pop
lret
adc
fs
std
xchg
add
xor
jmp
lea
dec
divl
imul
fs
pop
sbb
scas
into
mov
nop
rorl
outsb
push
push
mov
call
cltd
inc
mov
iret
out
cpuid
or
pop
pushf
mov
inc
lds
pop
shl
in
scas
stos
ffreep
lahf
and
jge
mov
ja
sub
adc
sub
jo
lods
daa
dec
inc
or
jmp
push
push
call
sub
and
in
and
push
xchg
ja
rcrb
outsl
adc
cmp
inc
jmp
cmpsl
test
pop
fiaddl
leave
inc
orl
cmp
cmpsl
out
lcall
int3
lods
inc
in
pusha
pop
pop
pop
scas
insl
xlat
push
out
into
pop
nop
and
in
dec
dec
or
pop
cmp
or
sbb
lods
and
mov
dec
mov
xchg
call
cld
inc
out
xchg
cmp
sub
inc
xlat
dec
aaa
push
and
push
dec
or
push
es
leave
inc
jp
in
test
stc
xlat
call
xchg
dec
loop
inc
int3
and
js
jecxz
add
std
push
popf
pop
jb
push
xchg
xlat
and
xchg
and
nop
stos
ja
dec
sbb
push
and
pop
dec
in
sub
mov
sub
out
popa
aad
sbb
mov
sbb
or
fsubr
push
lock
pop
inc
adc
mov
das
inc
pop
push
daa
push
cltd
or
jp
cmpsl
out
inc
imul
pop
cmpsb
cmp
nop
sbb
sub
movb
repz
add
cmp
stc
xor
adc
or
mov
xchg
xor
out
andl
push
jle
xchg
xlat
sbb
cli
gs
dec
adc
mov
add
rol
addl
fwait
push
push
xchg
xor
pop
cmp
mov
dec
mov
lods
jae
or
adc
inc
mov
add
push
sub
fimuls
push
pop
jno
sbb
ret
nop
out
mov
mov
add
inc
inc
cmp
add
jae
rcl
mov
imul
shll
xor
and
sahf
dec
add
push
cmp
or
jg
pusha
mov
xchg
pop
add
pop
addr16
push
clc
or
mov
adc
push
ret
push
and
leave
sbb
dec
leave
cmp
dec
std
fidivrl
sub
cmc
adc
rcrl
aam
mov
push
incb
in
mov
xchg
pop
jge
inc
adc
push
xor
push
fstpt
pop
mov
popf
dec
les
xchg
dec
push
dec
mov
jne
ljmp
dec
mov
dec
stc
push
ja
sub
cmp
call
lods
addr16
mov
and
pop
inc
scas
jge
cmp
and
ret
cmpsl
popa
add
pop
xchg
pop
sub
dec
fisubs
jl
ds
or
inc
dec
mov
push
push
add
int
fs
fs
adc
pop
add
sub
nop
xor
dec
adc
bound
dec
lcall
and
or
lea
or
cmp
jle
sbb
jmp
mov
or
lock
loope
xor
div
popa
adc
enter
add
dec
pop
xchg
adc
lea
jno
bound
jle
push
iret
add
call
inc
leave
push
arpl
pop
adc
int3
xlat
mov
mov
sub
aad
push
sti
outsl
das
popa
lret
add
push
fadd
push
dec
cmp
dec
push
cld
loop
adc
sub
add
push
test
inc
lea
mov
pusha
mov
xchg
xor
jge
mov
mov
or
je
dec
test
mov
and
negb
or
and
push
scas
je
nop
and
xchg
jl
mov
or
or
xor
push
push
scas
sub
lods
dec
ljmp
dec
or
aas
pop
scas
orb
outsl
das
outsb
fsubl
cmc
add
pop
dec
xor
inc
cltd
mov
icebp
adc
or
pop
add
push
call
sahf
inc
pop
enter
add
out
pop
stos
adc
rol
sbb
push
sub
jmp
or
les
pop
stos
pop
mov
jmp
aam
mov
inc
inc
xor
dec
test
jo
mov
imul
repnz
test
add
or
xchg
out
mov
leave
mov
mov
iret
mov
push
jnp
push
mov
push
or
aaa
and
inc
push
rcrl
fsubrs
mov
push
test
lahf
mov
push
or
hlt
jmp
lcall
adc
cmp
je
mov
mov
rorl
sbb
push
or
inc
inc
inc
adc
es
sub
and
mov
jl
adc
je
pop
out
cs
xchg
aas
adc
mov
int
push
jo
adc
mov
mov
xchg
sarb
nop
cs
je
ljmp
add
push
push
dec
inc
imul
out
push
lret
cmp
mov
jmp
lret
and
or
mov
inc
add
call
clc
push
ss
push
cmp
addb
pop
sbb
jbe
sub
mov
je
mov
rclb
inc
cmpsl
jp
mov
aam
call
adc
bound
mov
mov
adc
jp
xchg
and
dec
push
in
sbb
or
mov
adc
nop
scas
mov
add
pop
mov
mov
sbb
jg
leave
lds
mov
adc
push
sub
in
jne
aaa
ja
and
push
mov
adc
fs
and
dec
dec
or
inc
jp
pop
movl
push
pusha
sbbl
xchg
or
xchg
and
nop
test
mov
inc
je
adc
nop
test
inc
pushf
xor
les
enter
ret
mov
outsl
lock
jnp
pop
lock
enter
xchg
lret
push
and
add
ljmp
pop
movsl
pop
out
lock
pop
stos
cmpsl
leave
jo
jns
bound
roll
outsl
test
mov
sub
and
cmp
xchg
outsl
mov
sbb
test
xor
aam
jne
sarl
xchg
and
adc
mov
rorl
add
lret
sub
fdivrs
lret
idivl
push
aam
insl
inc
add
daa
sbb
adc
xchg
mov
or
fs
sbb
icebp
or
pop
fldl
dec
scas
cmp
notb
jl
in
add
xchg
mov
fildl
adc
rcll
test
stos
cmpl
cli
ret
repnz
pop
lcall
pop
aaa
pop
inc
popf
add
cs
mov
test
repnz
push
popa
push
cmp
sbb
xchg
push
adc
lahf
inc
sarl
and
sub
jl
xor
inc
das
mov
push
daa
cmp
jle
and
mov
pop
push
jmp
movsb
inc
cmc
pop
out
test
xor
pop
mov
movb
xchg
fbld
mov
fs
daa
mov
sbb
jne
mov
imul
jno
ljmp
mov
add
std
dec
mov
push
arpl
std
jmp
pop
cmp
xorb
xchg
xor
and
mov
rclb
inc
mov
jmp
adc
stos
lret
mov
ret
mov
or
jmp
and
sub
mov
or
faddl
push
sub
sbb
jo
mov
mov
outsl
cmp
push
jl
pop
call
adc
fnsave
mov
adc
aas
dec
sub
dec
mov
jns
adc
dec
sbb
and
cmc
jnp
mov
dec
dec
push
push
inc
xor
test
repnz
fs
add
xor
push
push
mov
add
adc
mov
rolb
cmpl
push
jbe
dec
out
dec
jmp
inc
push
mov
and
cmp
pop
pop
je
pop
xorl
scas
lods
aam
mov
js
sti
mov
scas
cmp
and
and
test
add
nop
in
mov
mov
dec
out
pop
les
xchg
mov
dec
jl
add
cmpsb
mov
clc
jge
cmp
inc
pop
push
inc
dec
mov
dec
pop
and
dec
adc
ret
es
cld
or
cmpsb
jmp
dec
mov
cmc
cli
mov
sbb
lret
mov
push
cltd
mov
adc
xchg
into
daa
jp
mov
xor
shrl
in
movsl
pop
test
hlt
daa
ja
imul
xchg
faddl
adc
xlat
fs
movsl
sbb
or
sbb
xor
div
adc
cmp
xchg
adc
sub
stos
xchg
sub
popf
cmp
sub
nop
mov
les
mov
ja
mov
push
cmpsl
scas
dec
fwait
mov
push
mov
pop
insb
rclb
notl
sub
mov
jno
push
lret
fldl
call
xlat
cltd
mov
cmp
lods
and
xchg
loop
cmp
fisttpl
mov
cmp
testb
mov
xchg
mov
xor
xchg
jecxz
ja
jnp
aas
mov
cmp
jb
rcrb
xor
push
pop
pop
push
jb
in
movsb
dec
xor
lret
sbb
xor
loopne
mov
and
push
fdivl
ja
add
ficoml
mov
sbb
mov
aam
lods
add
push
mov
shr
mov
push
xchg
pop
push
inc
cmp
pop
mov
cmp
xor
lds
push
push
adc
xor
adc
xchg
push
mov
mov
test
xor
mov
sub
mov
inc
outsb
repz
xchg
fcom
in
rep
ja
inc
lret
xorb
dec
in
sub
test
out
cmpsb
adc
xchg
ljmp
mov
sub
cmp
das
and
push
loope
sbb
mov
hlt
nop
mov
add
lea
shl
mov
imul
pushf
add
inc
jmp
scas
mov
sub
enter
or
test
fs
xor
arpl
addb
sbb
xor
inc
popf
xchg
scas
push
push
sub
push
cmp
dec
add
fidivl
mov
ret
xchg
aad
xor
call
mov
sub
into
xchg
xchg
sub
inc
shrb
jo
mov
sbb
cs
lret
sbb
add
jle
adc
cmpb
insb
lahf
sbb
xchg
xchg
add
mov
add
and
cmp
je
or
jne
sub
xor
mov
push
adc
mov
dec
or
sub
or
push
jo
add
test
je
and
sbb
inc
shll
adcb
push
mov
sub
out
test
jae
add
cmp
jg
and
popf
sbbb
mov
push
jmp
jne
mov
divl
inc
or
lds
sub
test
repz
add
sbb
ja
push
in
insl
or
test
popl
jmp
scas
inc
mov
jne
js
push
inc
push
lret
xchg
jb
jge
jnp
xchg
notl
rclb
sbb
dec
insl
enter
sub
xor
rorl
mov
sub
or
cmpsb
cltd
clc
xchg
mov
in
lahf
dec
roll
cmp
push
jmp
push
nop
and
dec
fistpl
cmp
push
jg
js
das
in
imul
and
lea
stos
cmp
mov
inc
sub
add
inc
sbb
xchg
je
pop
inc
jecxz
and
rsqrtps
cwtl
push
inc
dec
movsb
sub
in
xchg
xor
and
mov
inc
and
pop
and
notb
add
lds
or
adc
nop
mov
movsl
adc
lea
mov
inc
jns
jmp
cmp
pop
mov
inc
popf
insb
dec
call
and
and
add
mov
sbb
push
xlat
clc
or
sbb
mov
jne
add
or
enter
sbb
fs
ret
loope
mov
pop
pop
out
bound
inc
inc
aas
pop
adc
or
es
or
mov
or
adc
pop
ret
call
pop
mov
sbb
or
adc
roll
add
mov
fmull
push
sbbb
stc
dec
push
add
add
pop
add
mov
xor
mov
jnp
dec
flds
and
or
or
fstps
pop
mov
xor
pop
push
loop
pop
mov
testl
push
in
add
adc
add
dec
insb
inc
xor
pop
pop
xor
adc
jo
adc
scas
sarl
mov
push
cmp
loop
mov
mov
mov
mov
push
loopne
mov
xor
lret
scas
inc
mov
dec
jl
out
pop
jns
sbb
xrelease
out
les
imull
jg
pop
movw
or
pop
adc
adc
sbb
sbb
pusha
and
and
dec
cmp
mov
sbb
adc
sahf
mov
stos
mov
and
sub
adc
push
push
dec
dec
add
les
xchg
mov
jg
sarl
sub
mov
cmp
mov
mov
xchg
push
arpl
insb
or
std
lret
inc
mov
mov
xchg
dec
cld
adc
and
sub
inc
test
arpl
push
mov
mov
popa
jle
xchg
dec
mov
lea
adc
add
xchg
aam
andb
sub
jle
xor
inc
fiaddl
test
or
adc
movsb
and
inc
inc
push
add
fsubl
pusha
xchg
jno
or
dec
iret
lcall
add
jmp
call
ret
sbb
push
push
cltd
push
dec
or
xor
jl
js
xor
adc
inc
xchg
call
ljmp
inc
fs
add
shll
push
cmp
mov
shl
or
pop
sbb
lret
popf
jge
lods
and
arpl
dec
dec
jmp
add
rorl
xor
sub
sub
iret
jge
adc
jb
cmp
adc
mov
data16
sbb
push
add
dec
in
ret
add
lds
mov
cmp
add
sub
dec
or
nop
and
jmp
xor
dec
movsb
sub
out
leave
or
insb
mov
stos
adc
inc
fwait
sub
lock
mov
inc
cvtpi2ps
movsb
rorl
and
sbb
push
mov
rcrl
add
fstpt
stos
adc
ret
or
rcr
jbe
sub
imul
inc
shrl
inc
add
jnp
in
out
lea
push
jecxz
mov
sbb
adc
lret
dec
push
dec
lret
ret
xlat
inc
jbe
dec
std
dec
xor
cmp
and
adc
roll
sub
cmc
lret
adc
aam
lea
dec
or
jb
shrb
mov
dec
lock
loope
in
popa
inc
pop
dec
leave
adc
sbb
jp
mov
adc
adc
jb
xchg
sbb
cli
and
fbstp
or
add
dec
rclb
sbb
cld
pop
cmp
jb
scas
mov
or
and
nop
cwtl
dec
or
leave
das
decl
daa
pop
sub
lcall
inc
xor
xor
out
mov
rolb
lret
loop
sbb
lret
or
mov
and
fisubl
sbb
inc
or
out
xchg
or
push
adc
das
or
xchg
sub
and
xchg
mov
ljmp
dec
mov
cwtl
adc
sbb
shr
sub
jle
add
mov
scas
mov
mov
push
ljmp
xchg
aad
inc
cmp
nop
adc
inc
mov
fs
cmpsl
sbb
dec
popf
add
cltd
push
and
mov
mov
dec
inc
adc
and
repz
push
stos
in
js
imul
inc
or
mov
pop
js
jmp
das
cmp
fcom
jne
add
je
add
add
insb
add
xor
adc
test
mov
arpl
cmp
jne
pop
add
xor
sti
or
jne
lea
pusha
jbe
adc
out
jo
dec
mov
ret
jae
xor
cmp
jae
xor
adc
xor
push
push
xchg
shll
push
add
or
cmp
sahf
popa
dec
jmp
jle
add
jl
inc
daa
add
add
xor
pop
or
shll
push
push
adc
xchg
lock
std
cli
inc
xor
jb
lret
adc
pop
insb
push
jg
or
andl
and
or
inc
push
jl
or
leave
dec
sbb
inc
les
rorl
sbb
les
inc
jns
mov
daa
les
movsl
das
rol
inc
inc
push
mov
add
jae
cmp
and
sbb
movsl
inc
and
int3
push
hlt
daa
in
or
dec
xchg
pop
inc
and
test
xchg
sub
fwait
mov
pop
aaa
add
sti
aad
jp
jmp
jle
sbb
mov
xor
inc
pop
mov
sub
lds
or
ret
jno
xor
nop
and
mov
nop
jbe
dec
xor
loopne
push
and
repnz
adc
adc
add
pop
push
jb
in
xlat
test
sub
xchg
cmp
mov
mov
and
mov
cmp
jne
adc
sbb
iret
adc
mov
adc
mov
add
bnd
std
scas
jge
add
mov
inc
cmpsl
push
je
inc
std
inc
into
dec
mov
lods
xchg
aad
push
enter
dec
je
mov
std
int
and
fcomip
aaa
or
dec
add
sub
pop
and
call
cs
repz
stos
gs
mov
adc
ljmp
xchg
stos
push
xchg
inc
enter
and
adc
dec
repz
mov
inc
inc
push
cmc
clc
mov
pop
xor
call
cmpsb
jge
push
and
mov
mov
mov
jne
inc
call
mov
jmp
stos
test
lock
loopne
setge
dec
or
pop
jne
dec
das
pushf
push
add
mov
and
pop
pushf
popa
cmp
push
jge
das
sbb
and
test
fucompp
test
scas
cmp
mov
cmpsl
or
shll
sbb
repnz
imul
or
and
inc
arpl
insb
and
or
enter
and
sarl
xchg
fstpl
gs
pop
je
pop
std
in
mov
jb
cmpsl
adcb
popf
sbb
xchg
sbb
popl
movl
and
add
jns
cmp
jle
xchg
inc
bound
mov
sub
adc
push
push
push
push
sub
add
test
inc
std
push
jne
cwtl
mov
pop
xor
and
mov
aaa
mov
or
cmp
dec
mov
xchg
pop
pop
mov
adc
call
ss
pop
hlt
xchg
int3
xor
dec
and
xchg
push
fidivrl
iret
pop
rol
loope
mov
push
mov
insl
add
dec
jne
pop
mov
pop
push
out
pop
shl
gs
jmp
sbb
jg
dec
lods
inc
pop
mov
out
inc
and
add
divl
imull
ret
jne
call
insb
mov
xchg
jcxz
sbb
sar
lods
test
sbb
inc
xor
push
sub
xor
ss
mov
je
mov
sar
add
jae
or
add
and
push
arpl
pop
call
jmp
into
inc
or
aad
orl
inc
movsl
xchg
jge
push
je
jmp
or
cwtl
jo
subb
popf
notl
lds
lods
icebp
mov
mov
cmpsb
cmp
push
push
cmpsb
mov
adc
push
push
pusha
fsubl
in
push
adc
xchg
jns
push
jl
sbb
pop
out
and
xchg
sub
adc
adc
push
call
cmp
lcall
adc
test
icebp
jns
xor
xchg
mov
and
jns
mov
mov
pop
test
ret
cmpsb
xor
jne
pop
testb
pop
mov
rcrb
inc
lea
in
fucomi
mov
rorb
jl
or
mov
iret
xor
movsl
cmp
je
mov
add
jbe
push
call
cmpsl
pushf
jp
push
add
ss
add
mov
and
cmp
imul
push
mov
mov
push
mov
sbb
dec
sbb
lret
xchg
js
xchg
jbe
add
popa
testb
xchg
adc
aam
popf
inc
adc
sub
mov
insb
int3
push
inc
jl
cmpsb
sbb
ljmp
cltd
clc
push
and
inc
stos
fwait
hlt
or
rcl
mov
leave
push
add
push
mov
cmp
push
adc
mov
in
cmp
rolb
lock
sbbl
adc
jecxz
enter
dec
js
sub
or
jmp
loop
pop
out
scas
push
ds
sar
add
mov
loop
adc
pop
push
cmp
aaa
int
pop
cmp
iret
repz
call
push
push
mov
push
mov
jbe
ret
in
xchg
inc
call
ret
inc
sbb
enter
insb
mov
push
testl
cmp
mov
mov
lds
lea
and
out
call
test
adc
popf
lock
fisubrl
into
out
jae
lea
push
xor
add
xchg
das
and
push
dec
xor
xor
popf
dec
jb
mov
je
xchg
ret
adc
lock
sub
jmp
test
push
inc
inc
or
lock
inc
adc
loop
sarb
dec
adc
popa
push
add
mov
add
fwait
out
dec
mov
and
xchg
daa
dec
test
div
dec
cmpsb
or
dec
sub
ss
sub
test
pop
push
arpl
je
or
add
aam
jge
mov
mov
push
sbb
movb
shl
or
jecxz
aas
add
pop
inc
adc
pop
mov
inc
or
and
and
or
cmp
push
mov
inc
adc
dec
inc
inc
frstpm(287
cmp
mov
inc
add
sbb
enter
push
push
and
lea
push
cwtl
pop
jge
hlt
dec
jne
jmp
push
inc
sub
mov
idiv
mov
leave
adc
sbb
pop
icebp
inc
ljmp
dec
jg
cli
push
jo
nop
sub
adc
mull
pop
je
push
push
mov
jmp
push
add
fs
jle
xchg
clc
lahf
lea
adc
and
mov
jo
or
fldpi
and
or
testb
dec
adc
pop
and
xor
dec
in
xchg
xchg
pop
mov
adc
xchg
cmp
jae
cmp
sub
je
inc
jmp
jle
and
into
xchg
inc
add
pop
std
pop
mov
xor
inc
daa
adc
inc
inc
cld
sub
mov
rorb
sub
out
push
pop
or
sub
xor
jbe
xchg
inc
xchg
push
cmpsl
clc
movb
or
dec
daa
sub
cmc
mov
sbb
xchg
fistps
xchg
pop
mov
mov
sub
push
cmp
movsl
popf
add
sub
jg
mov
xchg
bound
push
add
cmp
add
adc
mov
mov
daa
stc
xor
insb
xor
stc
xchg
xor
std
stos
dec
and
int
mov
add
pushf
mov
xchg
and
xchg
xor
mov
fwait
mov
cmpb
pusha
shll
mov
jbe
xor
pop
je
xchg
ds
adc
inc
dec
cmp
jg
or
cmp
mov
mov
push
lock
add
or
ret
pop
jno
movsl
jge
fstl
call
shll
sbb
lea
sub
addb
dec
js
dec
pop
jo
cmpb
mov
xor
mov
jns
cmp
add
lea
test
into
sub
mov
cmp
mov
mov
add
ljmp
push
jmp
clc
mov
or
dec
jne
nop
insl
ret
cmp
dec
pop
push
jno
es
cmc
imul
shlb
in
xchg
dec
sbb
sub
scas
movsb
inc
testb
push
mov
shrb
lds
jo
jecxz
and
jmp
jne
or
sub
wrmsr
rdmsr
mov
cmpsb
addr16
std
xchg
ret
das
push
xor
dec
cmp
scas
xor
imul
pop
icebp
add
mov
repnz
shlb
dec
loopne
pop
jmp
mov
inc
jp
mov
jl
push
sub
rcrl
mov
or
mov
les
ret
call
adc
das
mov
xchg
and
int3
pop
daa
jne
cmp
cwtl
fisubrs
test
lahf
push
mov
pop
push
inc
add
add
sbb
repnz
shr
mov
or
jmp
sbb
test
push
call
jp
pop
cmpsl
iret
push
loope
bound
add
out
pop
sbb
nop
or
out
inc
les
iret
cmp
sub
mov
add
mov
push
push
push
inc
dec
loop
inc
imul
xchg
mov
adc
sub
dec
cld
loope
adc
sbb
ret
adc
adc
lods
add
int3
bnd
in
push
sub
jo
call
dec
push
test
add
call
scas
xchg
mov
and
xchg
loopne
mov
sub
push
jl
shlb
shr
mov
lods
and
inc
inc
adc
sub
jl
ja
aam
ret
xor
out
add
dec
push
push
aad
push
rcrb
sub
data16
mov
mov
popw
out
inc
popa
js
adc
iret
lret
pop
sub
shrb
cmp
cmp
jl
mov
sub
loopne
push
adc
mov
int
mov
or
cld
arpl
and
xor
outsl
or
cmp
xchg
add
leave
push
ljmp
in
mov
lret
sub
push
xor
bound
mov
cmpsl
xchg
and
inc
push
push
mov
push
cmp
aaa
lahf
das
enter
push
nop
mov
mov
xor
or
psubsb
clc
lahf
push
or
and
fisubrl
rorb
adc
jmp
push
daa
lea
mov
adc
pop
cld
jnp
cmp
mov
movsb
jnp
mov
call
js
jne
xchg
iret
ss
jb
adc
jp
fisubl
pop
cmp
jle
std
or
lock
lea
or
insb
test
fisttpl
call
orps
lea
push
cmp
ds
fbstp
add
adc
je
jecxz
xor
mov
or
or
sbb
adc
cli
inc
push
jne
ret
std
insb
mov
cmp
cltd
mov
jo
daa
mov
lret
fdivl
jle
mov
jne
xchg
lea
push
ret
sub
adc
lret
and
mov
lahf
mov
std
mov
inc
or
push
dec
int3
call
and
push
ljmp
mov
insb
dec
jns
or
lea
out
adc
int
sub
scas
push
mov
add
inc
fisttps
stc
lock
lea
mov
and
das
or
adc
push
inc
orb
adc
scas
push
adc
repz
mov
repnz
mov
add
mov
inc
leave
lahf
or
jns
or
add
push
push
cmpsl
sub
push
inc
dec
and
dec
or
add
cmp
jb
dec
sub
add
in
push
xor
push
cmp
dec
jge
xchg
or
jp
popf
out
dec
pop
stos
push
mov
adc
js
pop
push
enter
mull
lret
cmp
ret
or
or
jne
push
add
adc
lea
out
out
jecxz
sbb
incb
ss
pusha
adc
clc
divl
lret
push
int
jle
push
add
out
pusha
daa
adc
loop
or
insb
push
not
and
push
stc
aad
dec
sub
or
add
and
cmc
rol
mov
or
add
dec
fisubl
testl
inc
pop
out
xor
mov
push
fsubr
or
adc
cli
mov
negl
xor
loope
adc
lea
cmc
sar
shr
sahf
loopne
add
and
xchg
push
xor
ret
sub
xchg
adc
or
cli
sbb
ret
and
shll
lds
inc
xor
bound
sbb
ret
cmp
inc
roll
inc
std
adc
fwait
sahf
movsl
fsts
pusha
inc
mov
sahf
inc
movsl
jo
mov
subb
repnz
sahf
out
ret
add
data16
repnz
clc
std
mov
and
test
or
cli
jg
push
dec
sbb
and
mov
inc
adc
add
inc
xchg
pushf
cmpb
inc
inc
sahf
js
fcomps
xor
cltd
sahf
push
mov
push
aaa
push
ljmp
adc
add
and
dec
fsts
push
mov
jno
std
test
or
cmpsb
mov
cmp
sti
and
ljmp
mov
inc
jns
mov
adc
xchg
dec
dec
ljmp
shll
pop
sub
add
out
std
pop
add
mov
add
sbb
push
notb
aas
mov
adc
fs
and
jmp
mov
mov
rclb
and
hlt
shrb
add
mov
fwait
je
dec
inc
mov
mov
adc
inc
mov
dec
mov
and
push
cltd
mov
icebp
sub
out
call
and
dec
mov
rcrb
ds
mov
pop
mov
and
ret
pop
movl
pop
mov
adcb
add
pop
add
cmovb
add
inc
xchg
pop
test
dec
mov
and
xchg
int
add
outsb
jl
aad
lret
fisubl
push
mov
shl
stos
fmul
push
loop
out
orb
arpl
shll
adc
jecxz
aas
filds
jne
cmp
out
loope
and
sub
inc
shrl
sub
xor
pop
aaa
ret
or
orl
inc
jl
test
inc
sub
cmpsb
add
xchg
inc
shll
adc
test
int
repz
xchg
sbb
pop
adc
inc
aad
sub
cmpsb
inc
ljmp
sbb
movsb
pusha
cmpsb
adc
or
insb
sub
mov
mov
sub
test
add
mov
adc
xor
sti
outsb
test
sbb
add
addr16
inc
shll
adc
mov
stos
cmpsb
inc
pop
mov
test
sub
sub
push
xorb
enter
movsb
or
cmp
incl
jmp
and
filds
xor
sub
and
xor
andb
movsl
and
cmp
dec
mov
pop
ds
or
popa
popf
insl
or
test
adc
lcall
xor
push
in
fwait
and
add
inc
mov
inc
inc
aam
sbb
pop
add
xlat
xor
and
xor
inc
ljmp
add
aas
test
xor
adc
fimuls
pop
xor
nop
clc
jecxz
stos
mov
add
gs
pop
lret
add
mov
inc
fists
mov
xor
fistpl
add
mov
pop
orl
lret
xor
cmp
jle
pop
sub
inc
loop
scas
mov
add
shlb
ljmp
mov
push
pop
aad
jl
test
out
aam
adc
fisttps
ret
cmp
pop
mov
jl
add
cmpsb
add
movhps
dec
dec
cmove
adc
aam
xor
lock
sahf
lods
dec
aaa
scas
fnstcw
subps
and
and
push
mov
js
xchg
inc
sub
ffreep
aas
ret
push
cld
dec
push
movsb
inc
sub
inc
loopne
sub
xchg
ficoms
enter
xchg
pop
outsl
push
pop
and
sbb
movl
push
inc
call
xchg
adc
sub
push
adc
push
xor
scas
mov
mov
xchg
or
inc
adc
cvtps2pi
mov
fbld
shrl
push
sub
imul
push
popf
xor
push
gs
roll
ja
aad
stc
out
jle
mov
int3
or
push
sub
push
push
cli
mov
fs
enter
dec
stc
popf
shrb
out
ljmp
adc
dec
add
loop
adc
test
and
negb
sub
mov
fdivrs
outsl
pushf
and
and
inc
push
and
adc
push
or
pop
sub
jne
xchg
jl
push
add
aad
sub
jne
push
cli
int
add
outsl
int3
notb
sti
pop
xor
fnsave
fnsave
jle
testl
outsl
repz
xor
and
sbb
xor
cwtl
stos
push
sub
sub
imul
pushf
add
jne
ret
and
xchg
inc
cwtl
inc
pop
dec
cmpsb
in
xor
arpl
add
mov
das
arpl
jae
shlb
roll
out
inc
and
mov
test
sarb
or
pop
push
movsl
dec
add
rorb
jle
push
xchg
xor
jp
repz
sbb
mov
sub
shl
push
mov
add
pop
adc
jbe
and
dec
or
movl
sbb
sti
mov
add
xor
push
push
call
push
adc
mov
pop
xor
jp
push
mov
or
lock
or
repnz
rclb
mov
mov
pop
push
or
and
sbb
cmp
out
mov
jb
pop
pop
jmp
adc
or
jle
mov
pop
mov
add
and
fwait
clc
loopne
add
sub
push
push
rclb
fstpl
outsl
adc
gs
rolb
imul
cmc
or
popf
push
xor
fidivrs
fwait
jmp
sub
ja
ljmp
adc
dec
or
dec
jmp
into
dec
sbb
stos
sbb
test
sti
jmp
pop
push
lret
gs
lods
adc
mov
adc
jl
jl
in
push
scas
repnz
inc
repnz
ret
int
in
sbb
lret
cmp
push
mov
jae
lcall
mov
mov
sbb
cmp
mov
es
decb
sbb
in
mov
dec
icebp
cld
ljmp
call
cmc
jae
test
rol
adc
rorl
cmp
out
xor
out
inc
cltd
mov
and
xor
lea
xchg
push
das
cmc
cmp
mov
cltd
or
or
bnd
and
pop
je
sbb
xchg
xchg
scas
mov
xor
notb
sub
add
popa
add
jbe
imul
jo
jg
mov
inc
cmp
stc
sbb
call
pop
jmp
aam
push
sbb
call
or
mov
xchg
push
and
outsl
or
outsb
inc
stos
sub
pop
push
mov
mov
add
push
adc
shll
and
jne
aaa
xor
pop
pop
jb
out
rorb
adc
inc
mov
mov
lods
cmpsb
dec
sarl
push
movsb
imul
and
xchg
mov
xchg
and
cmp
jae
test
push
push
lea
pop
sub
sub
cmp
daa
push
notb
pop
inc
jge
dec
sbb
xor
mov
nop
pop
shll
addb
pop
cmc
ret
mov
and
adc
push
add
pop
nop
icebp
hlt
sub
rcl
sub
loopne
ret
and
imulb
xchg
sub
cmp
mov
mov
mov
push
push
dec
cmp
inc
cmp
sti
jne
aam
jne
fistps
ret
push
lock
lods
push
inc
add
xchg
dec
movsl
jg
pop
outsb
or
dec
mov
mov
jl
xchg
loop
jle
fprem
or
mov
test
decb
jl
add
mov
push
fcoml
out
std
nop
xchg
mov
and
pop
dec
ret
call
dec
call
repz
test
xor
push
inc
mov
or
mov
call
sbb
adc
mov
jl
and
fldenv
and
out
in
stc
test
call
clc
jne
cmpb
enter
dec
sub
push
mov
cmpsb
xchg
xchg
xor
subl
jae
lcall
xor
adc
xor
sbb
leave
push
mov
ljmp
lret
shl
xor
repnz
out
int3
inc
out
clc
add
ja
mov
fldcw
xchg
in
cmp
call
mov
sub
rclb
out
mov
or
pop
inc
sbb
stos
fdivrl
flds
call
insl
inc
sub
lea
inc
jb
push
and
icebp
or
mov
xor
xor
add
dec
dec
in
aas
fwait
jl
sub
pop
loopne
jle
xchg
push
call
mov
in
rclb
aaa
les
jge
ret
loope
and
adc
popa
push
push
sti
adc
ja
rorl
std
mov
xchg
fists
loopne
das
xchg
dec
xor
mov
mov
shr
mov
pop
les
cs
adc
fs
xchg
xor
int3
popa
aam
fdivr
jne
fmul
or
imul
cltd
sbb
mov
mov
adc
adc
sbb
or
rcll
fmul
sub
dec
sub
dec
add
shlb
jg
dec
into
pusha
jl,pt
sub
out
ds
push
rcll
adc
inc
int
xchg
out
jle
xor
mov
mov
mov
jno
dec
enter
pop
add
loope
out
jg
popf
mov
dec
roll
sarb
aaa
dec
pop
xchg
dec
xchg
add
std
cmp
inc
cld
push
shrb
jb
or
pop
push
stos
ret
int
in
add
scas
mov
inc
pop
or
and
add
fildl
mov
bound
or
test
je
inc
sub
testb
fmull
negb
enter
imulb
fisttpl
push
loopne
in
cmp
ret
jne
mov
dec
mov
mov
jmp
lds
or
rol
mov
mov
cltd
sub
push
call
mov
jge
mov
test
pop
out
in
xchg
fildl
shrb
movsb
ljmp
xor
adc
add
push
add
test
cmc
xlat
sbb
mov
mov
in
sbb
or
push
push
negb
shrb
inc
add
dec
sub
mov
push
xchg
mov
xrelease
add
popf
cltd
push
int3
call
je
inc
mov
sbb
push
jmp
xchg
xchg
add
stos
mov
or
movsl
ja
pop
xor
cs
xchg
mov
jg
mov
xlat
scas
sbb
imul
icebp
in
dec
adc
hlt
divl
mov
lea
or
add
add
or
loopne
rol
mov
mov
cs
mov
inc
push
in
cmp
in
cmp
js
inc
daa
pusha
sbbl
and
sub
inc
mov
sbb
xor
and
xchg
add
xor
add
and
cmp
mov
movsl
dec
xchg
mov
enter
sub
jl
adc
sbb
mov
pshufw
and
xor
inc
or
enter
enter
dec
jne
lock
mov
sbb
add
or
inc
enter
dec
sub
mov
movups
sub
sbb
sbb
mov
or
sbb
adc
sbb
rclb
xor
mov
movsl
sbb
and
and
cmpsb
sbb
xchg
mov
loopne
call
xchg
std
adc
add
sbb
pusha
ljmp
nop
cmp
inc
pop
cmp
adc
sub
adc
lea
xor
notb
push
push
in
xchg
aam
push
push
or
cmp
inc
add
push
adc
mov
and
pushf
enter
xor
dec
xor
cmp
adc
xor
js
adc
push
xchg
and
inc
enter
xor
sbb
test
test
jge
or
test
movsb
in
inc
sbb
xchg
test
sub
jecxz
mov
ss
push
adc
adc
aas
nop
iret
xchg
nop
mov
mov
rcrb
dec
or
xchg
or
adc
mov
add
mov
push
push
mov
mov
test
loop
xor
sbb
insb
sbb
test
push
scas
jp
and
pop
xchg
pop
and
inc
lds
imul
dec
cmp
push
push
shll
add
adc
push
xor
cwtl
mov
mov
adc
mov
dec
ret
mov
cmp
pop
pop
rclb
clc
pusha
mov
mov
mov
int3
pop
push
dec
test
push
mov
xor
clc
mov
xlat
sbb
sti
test
sbb
repz
add
add
call
inc
mov
xchg
adc
outsl
push
jle
push
sbb
inc
sub
xchg
inc
sbb
push
cs
add
scas
and
es
aaa
sbb
xor
push
mul
mov
xchg
aas
or
dec
scas
sahf
and
push
sub
xor
fmull
loope
lods
cld
push
and
punpckhwd
mov
adc
push
jmp
fistl
cld
jo
mov
and
or
ljmp
and
pop
fstpl
add
or
cmpsl
jne
add
test
mov
out
movsb
loop
jmp
movsl
adc
call
push
bound
jmp
pop
adc
jne
adc
push
ljmp
cs
dec
call
roll
in
call
call
cli
lea
mov
inc
out
mov
xchg
push
leave
fs
fldl
and
stos
sub
inc
call
fists
adc
push
incb
int
outsb
test
xor
scas
xor
cld
add
sub
test
mov
rolb
setle
dec
roll
sub
or
jge
shl
inc
cs
inc
aam
es
and
cld
push
inc
sub
stos
cli
xor
inc
test
pop
nop
fnsetpm(287
in
mov
xor
bnd
adc
mov
fwait
push
outsb
jne
stos
push
add
cmpsb
in
test
call
sti
jg
add
pusha
test
test
push
ret
jg
mov
sbb
in
shl
popa
sbb
and
adc
pop
sub
and
push
and
add
enter
std
test
push
inc
lock
xor
les
xor
js
mov
test
push
dec
sbb
and
lock
sub
fcoml
mov
push
and
popf
hlt
andb
pop
push
loope
or
pop
pop
dec
sub
js
adc
nop
insb
and
mov
hlt
and
mov
jle
movsl
aad
sub
sub
test
jle
push
pop
test
enter
pop
stc
pop
and
xlat
lock
push
pushf
push
xchg
pop
adc
mov
mov
sbb
icebp
jo
hlt
add
sbb
push
scas
cmc
cmp
pushf
sub
pop
subb
and
mov
pop
dec
leave
and
bound
je
hlt
mov
int3
cmp
push
call
dec
das
push
xchg
adc
scas
and
xchg
add
xchg
ds
sbb
dec
mov
movsl
mov
xchg
dec
sub
or
xchg
sub
push
and
inc
xchg
push
or
aad
xor
fisttpll
scas
dec
xchg
sbb
addl
jne
mov
push
roll
jae
mov
push
inc
enter
xchg
inc
mov
add
mov
bnd
xchg
pushf
and
test
dec
inc
fs
add
mov
dec
and
lret
sub
and
dec
and
pop
add
mov
pop
gs
subl
cs
ffree
sub
inc
ds
push
data16
cli
inc
out
sub
xchg
es
lea
aad
outsb
mov
jne
push
sbb
jne
push
and
push
push
push
loopne
mov
sbb
cmp
cmp
xchg
call
js
inc
push
in
lock
xchg
sub
sub
dec
or
add
jae
mov
push
jmp
data16
cmpsl
jno
data16
mov
lods
xchg
mov
clc
mov
add
and
mov
inc
push
pop
and
bound
push
call
cmpsl
push
dec
movsl
pop
mov
sub
test
add
lods
fs
fisttps
imul
les
mov
xor
call
push
jo
test
add
notb
in
mov
mov
push
rorl
pop
rcll
or
inc
add
dec
and
push
mov
enter
dec
jge
inc
sbb
mov
xor
jns
inc
push
cwtl
inc
call
mov
dec
xchg
mov
sbb
jne
sbb
push
sbb
xchg
std
cs
movsb
push
arpl
push
adc
sub
dec
pop
je
add
push
mov
mov
mov
xor
ret
inc
push
adc
xchg
pop
aas
adc
pusha
mov
out
lcall
cmc
xchg
add
pop
xor
mov
ljmp
mov
shrl
out
mov
movb
jns
leave
sub
push
leave
mov
test
dec
dec
cmp
pop
jns
fwait
push
jle
jg
mov
test
inc
adc
les
dec
push
jmp
fcoml
or
add
sbb
xor
adc
cmp
jb
lds
js
shrl
add
or
or
push
test
mov
popa
push
mov
or
lea
stc
or
enter
pop
jb
pop
pop
in
insb
stos
inc
or
leave
mov
mov
inc
add
mov
xchg
push
xchg
sbb
push
xor
sbb
pop
lods
mov
call
gs
sbb
int3
or
mov
ljmp
sub
sbb
dec
mov
jns
cmp
or
cmp
and
aas
je,pt
es
fcoms
pop
fstpt
addr16
xchg
lea
sub
jae
std
lahf
or
adc
sub
add
call
aaa
push
push
lret
jnp
scas
mov
push
xlat
adc
clc
push
inc
or
sub
and
mov
inc
push
or
mov
xor
adc
and
push
stc
std
loop
hlt
or
or
inc
sub
loop
es
ret
or
mov
jmp
jne
movsb
bound
sub
shlb
xchg
stc
inc
sub
in
adc
imul
mov
or
jge
dec
mov
and
das
push
adc
aad
sti
jmp
sub
sub
stc
inc
nop
push
loop
ss
and
xor
inc
mov
es
xor
or
pop
and
pop
fbld
mov
inc
adc
sbb
jge
gs
push
call
popf
lret
dec
in
popa
xchg
insb
cmpsb
es
inc
and
sarl
dec
xor
incb
movsb
mov
push
add
fadds
xchg
fcoms
ja
test
cmpsb
dec
xchg
inc
mov
test
and
push
push
ret
or
push
sar
cmp
inc
and
inc
enter
adc
xchg
cmp
jo
adc
ja
imul
mov
xor
mov
mov
push
movsl
pop
pop
xor
aas
or
mov
outsl
cltd
or
and
in
inc
cli
loopne
add
cmpsb
pop
and
mov
dec
das
icebp
sub
xchg
lea
adcb
jl
nop
cs
and
popa
sti
push
clc
cmp
test
fdivrs
mov
sahf
add
dec
scas
or
sub
das
adc
fdivl
jge
movsb
sbb
xor
and
fs
add
dec
cltd
adc
cmp
jne
sbb
ljmp
add
aas
test
push
addb
dec
jo
mov
clc
add
sbb
xor
subl
push
daa
cmpl
and
sbbl
lret
push
dec
test
push
push
mov
call
in
sub
pushf
mov
test
enter
test
push
mov
pop
das
lods
cs
mov
fstpl
call
sub
out
dec
cld
ljmp
cmp
dec
dec
test
repnz
lock
adc
rorl
pop
pop
fbstp
lock
sub
cmp
adc
cltd
insl
movsl
in
push
daa
frstor
push
scas
dec
int
or
sahf
adc
je
shl
les
xor
jp
sbb
fcoms
mov
xlat
imul
cli
lea
fists
shll
pop
add
sbb
or
pop
pop
mov
shlb
sti
push
bound
jg
and
push
leave
inc
sub
adc
pop
and
lds
add
out
icebp
xchg
jge
dec
mov
mov
cwtl
pop
jl
movsb
ds
lods
pop
add
fadd
sbb
mov
ret
shr
and
inc
fldcw
adc
test
dec
loopne
call
and
mov
and
push
sub
fistl
std
and
cmp
push
gs
adc
mov
jp
imul
dec
xchg
jl
adc
shll
test
mov
rolb
inc
aas
pop
mov
adc
jb
jg
sahf
inc
test
das
sub
cmpsl
fnstsw
cmp
mov
std
popa
call
xor
mov
push
push
bound
pop
mov
or
gs
lea
adc
negl
sub
enter
dec
repz
pop
cmp
pop
sub
movsb
das
inc
sub
xor
mov
inc
sti
ds
xor
inc
or
pop
fnstenv
mov
or
sub
ss
or
cmp
cmpsb
cwtl
jg
dec
in
loop
cwtl
cmp
fcoms
inc
mov
add
xchg
sub
add
mov
test
movsb
cs
rorl
dec
xorl
push
jle
push
call
lods
fstl
ja
dec
adc
pop
pop
aam
pop
in
ret
rclb
cmpb
jo
xchg
jo
or
test
pop
ds
call
mov
call
adc
lock
iret
dec
inc
push
push
dec
cmp
add
mov
outsl
cmpsl
mov
dec
adc
fbstp
cmp
jo
andl
out
xchg
fisttps
outsb
push
and
scas
aad
sub
sbb
or
push
out
push
push
repz
je
stos
cli
pop
leave
sub
or
aad
roll
xchg
adc
outsl
aas
nop
shll
enter
push
pop
sarb
push
movl
mov
lsl
clc
push
fs
pusha
or
ret
and
aaa
push
jmp
and
mov
pop
jnp
filds
push
lret
and
sub
scas
enter
ret
and
add
shlb
pop
pop
cmova
repz
insb
leave
lret
loop
jge
lret
push
push
mov
jmp
adc
or
dec
int
das
fnsave
push
adc
rorl
inc
jne
pop
pop
pop
mov
test
rol
out
lea
in
xlat
pop
scas
pop
scas
sub
and
sbb
shrb
rorl
sqrtps
push
lret
dec
test
fs
movsl
cmp
movsl
sarb
push
test
or
cltd
cmp
sub
xchg
pop
scas
mov
ljmp
les
dec
mov
int
pop
repz
push
mov
adc
mov
loop
leave
adc
cltd
mov
jg
ficomps
xchg
in
pop
cmp
push
stos
mov
je
jmp
cmp
add
ret
push
push
dec
hlt
lods
add
add
cmp
fnstsw
nop
fistpll
add
test
call
push
xlat
stos
cmp
pop
stos
jno
test
adc
pop
xchg
sub
fdivp
sub
jbe
insl
xchg
jae
push
xchg
jo
push
call
pop
pop
add
mov
ret
xor
add
stos
mov
sub
or
shrl
fists
mov
push
lret
dec
pop
test
xlat
mov
out
mov
xchg
mov
enter
cs
ja
daa
add
jl
add
repnz
and
btc
pop
push
dec
mov
inc
lock
sub
pop
cmp
xchg
adc
sbb
cmp
mov
jmp
daa
lock
je
inc
test
xor
push
imul
sub
or
xor
mov
mov
mov
ret
rclb
cmp
pop
cmp
sbb
jmp
push
testb
inc
fisubrs
mov
push
adc
push
cmp
test
add
je
icebp
cli
mov
pop
push
dec
mov
aad
mov
shll
mov
fdivs
or
push
and
add
dec
inc
mov
jmp
sub
rcrl
mov
xor
or
push
push
xchg
negl
in
xchg
cmc
pushf
sub
scas
mov
mov
aas
dec
popf
add
mov
or
push
xabort
js
cmp
loope
neg
shl
call
mov
sbb
sub
push
neg
mov
jge
pusha
cli
ror
add
pop
add
jl
je
cwtl
jno
push
add
mov
push
jl
jno
jnp
push
or
xor
inc
nop
cltd
cs
jnp
mov
xlat
xor
ret
pop
leave
and
lcall
inc
push
inc
jg
inc
push
aas
jo
push
inc
xor
das
lcall
int3
mov
mov
jo
pop
mov
popa
push
or
jge
sahf
cmp
xor
jle
mov
iret
mov
and
cs
out
fmuls
call
xchg
sbb
jne
and
lea
orb
pop
data16
mov
ret
push
cwtl
test
xchg
popf
pop
rolb
dec
xor
or
pop
jmp
nop
fcom
and
jg
or
mov
xor
inc
add
jo
push
add
insb
imul
or
jo
pusha
mov
std
push
and
insb
dec
pop
scas
xor
pop
push
sub
xchg
int
dec
je
xor
fs
xlat
or
or
and
lcall
cli
sub
insl
mov
lock
lds
icebp
xchg
jle
dec
rclb
xchg
sub
std
scas
outsl
and
data16
inc
call
dec
sti
xor
sarb
js
sub
mov
test
pop
and
xchg
xor
inc
push
cld
mov
js
leave
adc
cwtl
and
fst
adc
fmuls
fcompl
int
je
add
test
and
cmc
sub
or
xor
ss
cmpsl
clc
je
mov
sub
add
icebp
xchg
cli
push
xchg
push
insb
dec
mov
add
incl
jle
bound
nop
dec
pop
mov
xor
icebp
dec
sbb
call
sbb
pop
add
adc
loop
jno
in
loop
iret
mov
or
cli
or
popa
lods
adc
or
inc
addl
adc
leave
lret
mov
sub
xor
ss
adc
enter
sub
dec
sbb
xor
lods
and
mov
jb
mov
xchg
stos
cwtl
jg
pop
call
jle
outsl
cmpsl
and
aaa
stc
repz
rclb
xchg
mov
inc
cmp
mov
jnp
mov
jo
mov
xchg
mov
dec
iret
and
xchg
fisttps
inc
mov
shl
pop
pusha
sub
xchg
pop
pop
mov
sub
push
mov
imul
dec
pushl
cltd
xor
pop
outsb
loop
and
or
jecxz
das
enter
add
andb
pop
daa
jmp
fwait
pop
and
push
inc
mov
popf
cltd
insb
inc
cs
leave
aas
push
decl
mov
sub
dec
adc
clc
jmp
push
adc
xchg
add
mov
mov
mov
mov
push
mov
addr16
call
push
enter
sbb
and
mov
outsl
pusha
add
clc
sbb
push
cltd
add
sub
adc
je
pop
inc
pop
add
das
sub
stc
add
sub
dec
add
or
jne
sub
xor
sub
add
mov
add
test
pop
stos
cmpsb
shlb
cmp
push
stc
jb
lcall
cmpsb
push
pop
das
and
or
jne
and
push
push
sbb
push
or
fisttpl
gs
xor
pop
jmp
hlt
je
xor
addr16
add
push
xorl
push
shl
add
sbb
pop
push
mov
push
push
and
das
pop
fsubl
lea
mov
out
xchg
xchg
cmp
add
in
sbb
out
popa
arpl
pop
push
adc
daa
jl
cmpsl
push
fisttps
das
adc
cmp
movsl
add
inc
jmp
adc
loop
aam
loopne
inc
cmp
sahf
js
jg
sub
xor
jmp
test
je
rorb
add
pop
pop
test
mov
iret
or
xor
int
testb
ljmp
test
push
fsubr
addr16
bound
in
push
cmp
rolb
fsubrs
lds
inc
ljmp
clc
enter
push
pop
sub
cmp
sub
inc
imul
or
roll
jle
out
repnz
and
ja
rorb
add
and
xchg
push
adc
add
add
shl
lret
push
lea
ljmp
or
xor
xchg
cli
xor
mov
inc
mov
lret
cmp
and
pushf
push
test
mov
aad
das
sub
mov
sets
and
sub
outsb
and
ret
rorb
sbb
lcall
shll
mov
mov
and
pop
repz
outsb
jl
add
mov
out
lods
cmp
mov
add
push
add
cltd
add
or
sbb
xchg
js
or
stos
add
out
push
xchg
lods
adc
inc
add
movsl
out
sbb
mov
pop
adc
push
push
lods
pop
add
inc
ds
add
ljmp
mov
adcb
xchg
xchg
or
into
jbe
movsb
popf
push
push
mov
test
or
push
adc
das
xorb
arpl
and
xchg
stc
cmp
dec
and
xchg
and
jne
scas
into
push
adc
enter
inc
sub
adc
push
push
push
dec
fmull
inc
and
mov
out
push
pop
sub
jge
rcrb
sub
pusha
hlt
pop
mov
outsl
or
sub
pop
lahf
push
adc
sub
pop
pop
push
dec
mov
or
sub
inc
mov
scas
sub
outsb
test
lds
scas
sub
imul
sub
xchg
pop
sahf
imul
mov
ret
pop
scas
pusha
clc
clc
ss
jmp
and
cwtl
jecxz
jecxz
inc
arpl
push
dec
mulb
push
mov
iret
imul
test
stc
clc
sbb
in
mov
sub
xor
push
xchg
mov
mov
into
push
fs
push
les
add
ret
les
inc
in
mov
jnp
push
popf
ret
jle
dec
inc
inc
xor
mov
mov
outsl
ffree
mov
sbb
loopne
fdivr
enter
call
mov
or
push
push
or
mov
pusha
and
dec
test
xchg
mov
cmpsl
test
stos
bound
aam
arpl
push
pusha
jnp
jmp
imul
or
pop
dec
adc
adcl
xorl
inc
lret
inc
inc
push
add
adc
pusha
sbbl
sub
lret
lret
lret
iret
dec
mov
stc
sbb
or
jge
cmp
push
push
push
cmc
cs
and
adc
jecxz
nop
roll
inc
in
subb
out
in
sysret
xchg
enter
in
inc
sub
es
xor
in
cli
xor
sub
stc
dec
xchg
inc
fbstp
adc
dec
stos
add
adc
push
inc
ret
dec
out
addb
sub
push
push
mov
test
rorl
jle
mov
push
sbb
popf
movsl
or
sbb
sbb
les
imul
out
rclb
dec
cmp
jle
mov
sub
xchg
push
pop
sbb
cmp
faddl
sub
push
fdivp
ret
push
mov
adc
push
stos
loopne
call
add
jge
push
dec
push
inc
and
in
mov
mov
pop
jns
jne
and
sub
dec
fwait
mov
out
dec
hlt
xor
adc
inc
movsl
jne
ljmp
mov
xor
loop
data16
xchg
adc
xor
lods
mov
cmp
out
cmp
pop
cmpb
scas
stc
mov
mov
mov
arpl
shll
inc
cwtl
xchg
aad
je
or
loop
mov
push
lret
out
int
in
add
jne
movsb
je
mov
push
dec
mov
push
mov
imul
lret
inc
test
mov
std
jnp
outsb
clc
mov
into
and
mov
and
inc
push
lea
add
out
lahf
test
pop
xor
call
lds
ret
dec
push
xchg
loope
in
daa
sbb
xchg
repnz
je
jno
das
lea
pusha
int
mov
inc
les
in
pop
add
ret
je
sub
mov
cmpsl
clc
sub
aas
adc
loop
inc
sub
pop
leave
call
mov
add
movswl
jnp
cmp
ja
push
adc
sti
inc
dec
aam
inc
cmc
push
je
pop
icebp
test
push
mov
movb
and
push
int3
sbb
ret
sub
in
incl
daa
cs
nop
cmp
jne
pop
subl
or
push
call
lea
sub
push
or
pop
gs
jmp
mov
fs
jecxz
mov
out
sub
icebp
clc
loope
xor
push
out
cmp
sahf
call
cwtl
mov
push
xchg
inc
lds
xchg
inc
cmp
or
mov
push
adc
cwtl
inc
adc
scas
sub
or
lods
mov
std
adc
and
es
lahf
and
out
jecxz
sub
std
inc
add
cmp
xor
push
xchg
mov
jmp
sub
dec
push
xchg
jbe
push
add
icebp
xor
cmpb
cmp
stc
mov
repnz
rcrl
fildll
lahf
inc
mov
addr16
sbb
lahf
out
adc
inc
mov
cwtl
fidivrs
adc
push
pushf
jl
popf
pop
int
and
test
inc
mov
jmp
push
add
rcrb
jmp
and
rcrb
ljmp
mov
fstp
fnstsw
jmp
movl
inc
adc
xchg
leave
cmpsl
adc
and
ficoml
cmp
mov
test
test
dec
subl
sub
pop
xor
ret
pop
jno
dec
mov
clc
jb
movl
mov
addb
sbb
or
or
sbb
inc
sti
cmp
lea
std
adc
sub
adc
xor
sti
dec
xor
xor
xchg
pop
mov
xlat
mov
movsl
popf
rorl
or
call
call
push
push
push
comiss
xchg
je
movsl
cmp
xchg
mov
in
jecxz
cs
movsb
incl
movl
mov
push
inc
es
pop
adc
adc
icebp
mov
and
or
cmp
sub
pop
test
cli
add
test
or
sbb
xor
cltd
dec
dec
sub
xor
push
mov
push
movsb
add
pop
push
cmpsl
js
repz
inc
and
data16
sbb
and
push
or
mov
push
adc
sbb
and
xchg
clc
sahf
rcrb
inc
adc
fistpll
dec
or
pop
and
test
sahf
pop
scas
insb
adc
push
mov
push
leave
or
test
mov
data16
sub
sbb
dec
or
in
das
sub
inc
bound
push
popf
enter
pop
add
cmpl
mov
loop
cli
out
pop
adc
sbb
push
ret
mov
and
cmp
push
bsr
and
xchg
jb
rorl
pop
les
sbb
cmc
pop
jbe
stos
je
jle
divl
xor
popl
add
xor
nop
fists
sub
pop
inc
sbb
jo
shlb
pop
shrb
jnp
stos
flds
repnz
in
les
add
cs
enter
call
jmp
mov
lcall
sub
adc
outsl
repnz
fsub
imul
inc
mov
movsl
mov
and
push
out
movsb
cmp
fsubl
dec
sbb
test
dec
lods
int3
mov
nop
inc
daa
inc
inc
outsl
icebp
xchg
insb
sbb
es
xor
xor
xchg
jecxz
and
sbb
lcall
add
ss
xchg
fldl
adc
lock
push
outsl
sub
pop
fsub
push
sub
mov
push
mov
cmp
mov
stc
dec
push
stos
arpl
cmp
movsb
push
sbb
ss
std
cmp
mov
jle
popa
or
decb
mov
pop
out
jo
movsl
inc
adc
jbe
or
in
and
arpl
push
dec
push
call
jle
adc
push
jmp
jle
dec
pop
test
popa
mov
jo
xchg
jne
inc
push
scas
shll
es
adc
je
inc
mov
dec
jnp
mov
inc
out
sahf
push
mov
jge
mov
les
pop
js
pop
pop
mov
mov
loop
daa
and
adcl
loop
outsb
xchg
mov
jmp
sbb
dec
push
jmp
rcrb
xlat
mov
cs
inc
dec
xchg
push
inc
insb
enter
das
mov
sbb
dec
inc
in
push
sbb
mov
fcom
push
nop
add
add
out
add
dec
xchg
inc
popf
or
fsubr
pop
xchg
xchg
ficompl
data16
push
mov
sbb
xlat
mov
push
movsl
je
cld
mov
add
cli
xlat
movsb
and
xchg
fiadds
sbb
mov
adc
das
jg
pop
xor
push
test
adc
std
in
sub
cmp
sub
daa
push
xor
test
mov
pop
push
das
jmp
adc
cmp
test
xor
add
cmp
icebp
cmp
and
arpl
or
call
pop
lock
test
jne
mov
popa
into
dec
sub
sub
adc
adcl
mov
dec
mov
add
push
popf
jecxz
cmp
push
push
cmp
or
mov
out
dec
jmp
roll
cli
sub
xor
or
je
jl
cmp
sbb
or
popf
pop
movsb
mov
push
sbb
pop
stos
in
add
lods
mov
cmp
xchg
jg
lock
lahf
and
inc
cmpl
push
mov
adc
jecxz
cs
clc
adc
dec
dec
adc
fwait
loop
xchg
pop
dec
pop
enter
jg
jo
icebp
in
cli
push
jne
mov
adc
in
test
js
out
adc
push
mov
inc
push
pop
inc
pop
sub
jl
cwtl
call
inc
jge
inc
js
ja
imul
pop
cmp
into
out
jl
call
pop
mov
adc
cmp
fs
dec
dec
cmp
mov
adc
inc
and
or
daa
xor
jmp
adc
enter
sbb
push
inc
or
mov
pop
push
pop
cld
mov
adcl
jmp
inc
sbb
and
push
add
je
xchg
jl
push
push
inc
inc
fsubrl
test
rcr
cmp
je
push
inc
hlt
jge
in
imul
cwtl
adc
xor
mov
sbb
jmp
sti
pop
incb
jmp
adc
xchg
adc
add
dec
jp
sub
adc
adc
add
or
jne
imul
mov
push
adc
shrl
mov
jnp
push
pop
dec
sbbb
push
cmp
sarl
and
shrb
lret
lahf
pop
jle
push
adc
adc
rcrl
jl
dec
aas
stc
mov
sar
inc
adc
cmc
sub
sub
sub
addl
jne
lds
je
xor
loop
cmp
xchg
nop
mov
or
push
push
adc
and
xor
xor
adc
mov
pop
pcmpeqb
pop
in
int3
dec
adc
xor
lret
inc
shrl
loopne
cmp
jle
les
adc
or
push
mov
dec
aam
lea
stc
dec
fsts
mov
sub
flds
dec
cmp
xchg
fmull
popf
push
inc
pop
mov
dec
into
adc
orb
inc
rcll
stos
fidivs
push
mov
stos
sub
inc
faddl
shrl
stos
push
pushl
jb
outsl
adc
lds
jmp
loopne
push
push
nop
xchg
pop
setae
cmp
jle
loopne
lock
xchg
xorb
lea
mov
pop
mov
flds
lret
xchg
sbb
push
push
fstpl
xchg
dec
inc
movl
daa
adc
pop
xor
xchg
adc
pushf
mov
outsl
add
aaa
pop
pusha
mov
and
dec
aad
rclb
iret
mov
inc
push
dec
adc
mov
imul
or
out
or
loop
pop
mov
dec
out
xor
inc
mov
in
jg
dec
add
xor
popf
push
outsl
mov
pop
test
jge
adc
push
shrb
fcoms
adc
mov
rcrb
fstl
add
scas
jne
repz
xchg
stos
imul
stos
mov
adcl
inc
adc
sub
cmpl
idivb
sub
pop
xor
push
add
and
add
jge
inc
mov
ret
or
xor
pop
stc
mov
sub
add
dec
push
cwtl
lds
daa
int3
aaa
leave
inc
cmp
aam
das
cmp
ja
pusha
jle
dec
mov
jne
cs
cmp
add
mov
imul
add
or
mov
cmp
outsl
and
mov
mov
test
xchg
mov
sub
mov
adc
xchg
leave
or
sub
int
in
aam
lods
inc
sbb
mov
mov
jb
aaa
mov
mov
call
rclb
imul
pop
ljmp
incb
je
push
mov
cmp
jo
add
pop
xchg
jb
nop
mov
pushf
inc
shr
mov
repz
in
jo
mov
arpl
push
pop
adc
dec
nop
mov
or
add
outsb
pop
adc
dec
gs
mov
mov
inc
adc
mov
mov
pop
das
frndint
or
adc
jbe
jmp
mov
mov
sub
adc
stos
or
inc
xor
je
cmp
pusha
pop
adc
fdivrs
mov
and
sub
aaa
push
or
mov
pop
rcrb
mov
sub
or
pop
rcrl
sub
xchg
jno
sub
fs
les
rorb
sub
add
push
jmp
pop
roll
imul
inc
outsl
cmp
inc
cmp
mov
out
and
cmp
push
ret
add
adc
adc
push
dec
mov
cmpsb
jmp
mov
nop
inc
and
push
jne
jecxz
inc
cmp
xor
sub
push
inc
adc
sub
inc
pop
adc
js
push
pop
mov
and
cs
jbe
fdivrs
subb
and
push
xchg
push
jmp
fstl
inc
je
fs
or
nop
jp
push
mov
int
ficoms
xchg
add
add
inc
mov
adc
sub
outsl
and
or
dec
push
leave
mov
inc
adc
insb
daa
sub
rcrl
or
mov
test
pop
sti
scas
xor
cli
shrl
xlat
pop
sub
pop
neg
fcoms
das
fld
mov
adc
mov
mov
or
popa
sub
pop
push
cmp
lret
pop
ja
movsb
leave
leave
std
dec
jg
jecxz
push
notb
xor
or
jno
push
push
test
inc
push
and
push
in
in
sbb
repnz
rolb
jbe
loop
lea
inc
cmp
test
sub
scas
cmc
xor
dec
add
pop
jmp
or
push
loop
notb
test
push
imul
pop
in
push
cwtl
or
pop
int
dec
std
imul
aam
lea
in
adc
xchg
dec
popa
testl
inc
and
push
aam
pop
inc
repz
and
adc
mov
pop
add
xchg
cmp
mov
mov
sub
adcb
and
or
shrl
xchg
sbb
pop
shrb
cmp
test
adc
adc
push
sbb
and
lret
je
out
sub
xor
mov
add
fsubrs
adc
cs
jbe
cmp
inc
mov
enter
test
mov
jge
push
xchg
inc
daa
add
push
adc
sub
or
icebp
lea
in
xor
or
jo
test
xchg
ja
test
or
push
push
imul
scas
bound
add
out
xor
or
jmp
call
in
lds
mov
cmp
push
and
push
xor
lods
and
js
aad
lea
or
cmpl
call
mov
mov
lahf
push
in
cmp
pop
sub
xlat
sub
jae
stos
fmul
or
xor
cmp
mov
testb
push
and
lods
loopne
adc
inc
add
lock
es
mov
daa
push
js
mov
inc
or
mov
mov
rolb
data16
sbb
and
dec
pop
lock
aad
push
cmc
push
sbb
aad
and
dec
or
or
pop
xchg
xor
pop
jmp
cmp
ficomps
incl
push
sbb
and
mov
out
sub
add
ret
ljmp
sbb
ficoml
or
mov
loop
inc
xor
mov
push
ret
mov
mov
mov
scas
in
sub
adc
mov
dec
inc
lret
push
adc
mov
adc
or
insb
push
sbb
iret
and
testl
mov
cmp
cmp
mov
and
movsl
inc
add
push
jae
or
jmp
jno
mov
dec
sub
or
out
sbb
cs
or
add
and
adc
or
or
imul
sub
mov
cwtl
sbb
pop
pop
push
adcb
push
and
xor
sbb
inc
adc
add
fs
popf
inc
adc
sub
push
daa
jnp
cmp
stc
push
lods
sbb
ljmp
adc
push
nop
or
xchg
or
push
clc
outsb
fdivrl
dec
add
cmp
daa
push
xor
jbe
aas
fidivrs
push
dec
shlb
out
jecxz
xor
xor
pop
xchg
adc
mov
and
push
xchg
addb
pop
mov
ljmp
fldenv
je
shll
ret
outsb
rcrb
dec
add
sub
cmp
adc
xchg
mov
sbb
scas
pop
dec
adc
and
pop
mov
jge
jne
jne
sub
ret
pop
xchg
imul
push
push
xchg
dec
test
mov
inc
push
jne
outsl
adc
xor
or
mov
dec
aaa
out
clc
dec
add
add
int3
push
xlat
sbb
mov
int
out
or
mov
mov
mov
pop
test
or
lods
lods
xchg
out
mov
push
xchg
test
call
cs
cmpl
je
cmp
xchg
cmpsb
loop
repz
mov
and
lea
lods
out
mov
push
inc
cmc
inc
mov
sub
pop
outsl
push
test
pop
pop
sub
fwait
cmp
push
jb
mov
pop
ja
ret
dec
repnz
dec
pop
or
xchg
daa
mov
dec
orl
int
push
adc
sub
shrb
fwait
bswap
push
outsb
mov
stos
andb
dec
test
mov
addb
push
or
and
test
aam
jmp
mov
add
add
adc
cld
mov
sbb
pop
test
movd
add
pop
stc
xchg
or
movl
outsl
push
push
popa
adc
out
or
and
call
adc
scas
insl
push
push
xchg
jne
and
ja
push
add
cmp
and
mov
insb
push
mov
ja
sub
fsubl
fiadds
push
xchg
daa
adc
push
sbb
movb
sahf
ret
fsts
aaa
js
pop
jae
cmp
pop
mov
xchg
mov
jp
jnp
imulb
cmp
mov
call
out
fyl2xp1
hlt
jg
cmc
insl
push
add
into
sub
mov
push
cli
fidivs
leave
adc
call
pop
or
inc
jle
or
push
ljmp
and
pop
jl
mov
sub
and
dec
mov
test
push
cmpb
sti
test
lods
rorl
divb
loop
adc
jne
push
adc
adc
sarl
dec
mov
and
popf
in
and
enter
popf
out
or
fsubl
jmp
jae
xor
mov
adc
hlt
lds
and
cli
pop
nop
aaa
dec
mov
lds
aam
cmp
add
pop
and
ret
xor
call
sbbb
loop
push
ficoms
add
int3
stos
cmp
clc
jge
leave
jmp
pop
inc
stc
push
stos
adc
sbb
or
mov
mov
cmp
push
jno
sub
pop
ret
add
cmpsb
shl
sbb
sbbb
or
mov
in
data16
mov
bound
in
sbb
cld
adc
pop
pop
sbb
movsb
push
push
ss
mov
ficoml
test
jmp
movsb
sbb
dec
jne
or
push
sub
push
push
dec
inc
mov
pushf
push
jp
dec
fadds
mov
push
subl
int3
inc
adc
sbb
shl
jge
pop
xor
cmp
cmp
lock
pcmpeqw
mov
repnz
lcall
fs
leave
test
sbb
lods
jecxz
mov
test
or
shl
jle
xor
sbb
ffreep
lcall
lds
jg
inc
lds
mov
loopne
mov
mov
fisttpl
xchg
or
imul
dec
sub
aas
adc
or
jge
fnsave
jns
sub
mov
mov
mov
int3
mov
inc
add
cmc
movsl
adc
pop
ret
rolb
mov
mov
rorl
clc
and
inc
mov
push
mov
jp
adcl
adc
and
das
jne
roll
jne
pushf
pop
jle
pusha
adc
mov
sub
push
aad
pop
xchg
jno
in
lahf
adc
das
dec
andb
push
testl
scas
mov
xor
inc
mov
add
incb
mov
pop
xchg
mov
call
inc
inc
xor
sbb
push
and
mov
sub
add
movsl
mov
pushl
push
cmpsb
repz
popf
and
or
jl
pop
push
movsl
adc
mov
mov
lret
aam
les
cltd
adc
xchg
pop
repz
daa
fsubr
lret
sub
mov
je
xor
sbb
sbb
out
ja
sbb
mov
push
sbb
sub
push
ret
movnti
fisttpll
or
sbb
mov
pop
call
shrb
dec
pop
aam
test
push
sbb
jo
push
cmp
jg
or
sbb
mov
out
cmc
out
dec
and
inc
cmpsl
iret
dec
lret
push
cwtl
mov
or
mov
pusha
pop
push
lea
js
lea
jmp
pushf
clc
push
jg
mov
xor
xchg
mov
xor
dec
cld
add
or
lahf
jecxz
unpcklps
inc
add
cmp
fdivrs
inc
leave
js
cmp
pop
adc
out
xchg
push
in
or
or
les
push
xor
lahf
sub
pop
xor
xchg
decw
xor
inc
lods
in
aam
add
xchg
dec
xchg
outsl
xor
push
sbb
xchg
sbb
pushf
fs
pop
push
icebp
xchg
xchg
adc
push
mov
and
fcmovbe
adc
mov
rclb
and
pop
cmp
pop
incl
cli
fsubrl
xcrypt-ecb
cmpsl
mov
hlt
ret
std
mov
inc
cmp
ja
pop
dec
xor
pop
pop
xchg
push
lret
lcall
mov
mov
stos
mulb
mov
inc
insb
mov
arpl
push
cmp
xchg
nop
mov
inc
ret
pop
mov
push
rclb
jl
xchg
adc
add
lea
and
pop
push
rcll
add
je
lea
and
and
popa
bnd
outsb
movsb
cmc
loopne
pop
add
mov
sub
push
add
add
inc
das
sbb
sub
adc
dec
push
call
repnz
or
fildll
stc
and
pop
pop
shrb
dec
scas
psubb
insb
jae
idivb
vrcpss
fldenv
cmp
mov
pop
inc
cmp
mov
pop
jne
or
cmp
lods
inc
jbe
aaa
mov
lock
mov
xchg
cmp
dec
stos
test
inc
pop
fadds
jle
cmp
push
subl
mov
jmp
repnz
sub
xchg
push
rorb
push
sahf
rclb
or
sbb
hlt
pop
adc
or
inc
popf
or
pusha
xchg
adc
push
inc
es
int3
lods
or
outsb
adc
div
push
adc
or
push
inc
or
cmc
shlb
test
bound
rclb
clc
sbb
cld
mov
xor
jo
inc
test
adc
xor
hlt
ja
insl
movsl
shlb
adc
cmpsb
push
jne
jge
enter
nop
clc
movsl
movsb
adc
fwait
sub
cmp
daa
inc
push
mov
stos
outsb
fidivl
pop
pop
add
dec
add
inc
das
adc
sub
sub
mov
xor
sub
je
jae
add
mov
dec
mov
inc
push
inc
xor
notb
xchg
mov
sub
cmp
mov
xchg
pop
push
outsl
sbb
inc
cmp
sbb
adc
enter
cmp
xchg
adc
bound
test
inc
sbb
je
enter
shl
cvtdq2ps
mov
cwtl
xchg
sbb
aaa
sbb
jbe
sub
pop
push
xchg
sbb
pcmpgtd
enter
negl
xor
xchg
sbb
mov
das
int
and
subl
sub
and
out
add
sbb
mov
mov
jmp
ret
mov
or
sub
and
pop
and
and
ffreep
mov
adc
je
ret
sub
mov
adc
movsb
andl
dec
or
jle
push
push
adc
pop
imul
xchg
sbb
mov
jae
pop
ljmp
mov
movsl
and
ret
jb
loop
movsl
and
sahf
mov
add
add
and
in
cmp
daa
mov
adc
xor
mov
pop
sub
xchg
or
mov
inc
popa
jl
fidivl
cmp
mov
jne
and
adc
movhps
inc
and
cmp
sbb
xor
mov
pop
push
jno
jno
rorb
jp
popf
lods
push
inc
sbb
aam
adc
adc
sub
adc
test
movsl
jle
sbb
cs
adc
pop
inc
jg
mov
push
push
test
jb
and
pop
and
repnz
mov
inc
xchg
pop
movsl
dec
adc
push
aas
xchg
adc
lock
push
add
js
mov
in
dec
inc
adc
jb
push
test
mov
cli
mov
bound
xor
cmp
loop,pn
push
out
push
rclb
pop
sete
sub
jge
pushl
enter
add
lea
cmp
xchg
cmp
clc
sbb
testl
push
popl
push
push
pop
mov
add
cmp
push
inc
adc
and
out
inc
adc
pop
lds
or
sbb
adc
mov
test
xchg
xchg
fs
or
shl
in
incb
jo
xchg
adcl
mov
sub
ljmp
and
xor
push
dec
sbb
jnp
mov
ja
cmp
lret
dec
stc
fldl
or
mov
and
cmpb
cmp
and
mov
cltd
adc
and
dec
fmull
enter
xchg
and
inc
cmp
mov
add
and
rcpps
add
or
or
mov
movzwl
stos
imul
lret
pop
jae
pop
cmc
je
cmp
mov
xchg
xorb
pop
cs
push
cmp
push
inc
lea
sbb
xor
sahf
push
adc
imul
push
sub
and
jl
xchg
push
andb
push
out
enter
cmp
xchg
xor
in
push
mov
scas
arpl
push
call
jne
mov
cltd
repnz
add
jg
in
sub
mov
add
outsb
pop
adc
add
sub
nop
cmp
movq
jno
and
sbb
and
dec
sbb
outsl
sti
pop
daa
and
push
dec
sbb
cmp
dec
mov
jmp
lret
ficomps
loopne
orl
fisttpll
pop
dec
push
mov
out
pop
xchg
mov
dec
arpl
enter
push
sbb
push
jbe
enter
pop
and
fs
or
adc
lea
movsl
xor
and
cwtl
and
cmp
imul
adc
add
push
in
adc
mov
xchg
xor
jle
add
je
push
fsubs
rep
test
stos
gs
add
rolb
cli
dec
cmp
or
or
leave
inc
jns
mov
lcall
push
fldcw
dec
jg
jns
inc
adc
push
stos
dec
and
mov
dec
ds
dec
cli
xor
jae
push
cltd
xor
jle
popf
pop
adc
rcrl
loop
push
fmuls
jp
shll
add
inc
testl
adcl
je
xor
xor
sub
sti
pushf
sub
mov
push
mov
xor
cmp
jne
add
add
xchg
mov
pop
out
pop
inc
mov
xchg
mov
fimull
mov
adc
xor
sub
in
bound
inc
das
les
clc
rcl
xchg
bound
inc
std
lcall
cmpl
inc
inc
mov
lret
in
adc
xchg
rorb
loopne
jmp
push
push
adc
sbb
in
sub
mov
enter
mov
lea
dec
mov
adc
je
mov
inc
nop
enter
xor
pop
mov
and
push
mov
cwtl
adc
into
mov
movl
mov
or
out
or
dec
rcl
decb
pop
jp
jmp
xor
sbb
mov
sbb
pop
gs
dec
mov
inc
cs
jmp
repnz
cld
mov
add
add
inc
fmul
sub
leave
or
xor
pop
and
dec
mov
pop
add
add
inc
cmp
jns
mov
xchg
std
and
add
push
je
imul
das
mov
rorl
cmc
add
sti
add
xchg
das
in
and
into
cmp
push
sub
jge
jo
or
adc
inc
inc
icebp
mov
adc
or
sub
movsl
mov
adc
mov
and
lret
adc
pop
mov
xor
out
dec
das
dec
pop
xchg
gs
inc
ds
pop
sub
and
push
fs
dec
test
and
inc
inc
mov
jmp
fstpt
pusha
flds
mov
inc
loopne
dec
push
iret
insl
sub
and
pop
pusha
cmp
pop
cmp
test
inc
test
sti
lea
xchg
add
xor
inc
add
inc
mov
adc
jne
and
les
in
inc
jle
mov
cmp
sbb
push
outsb
or
imul
movsl
pop
test
xor
mov
push
pop
adc
push
or
int3
and
popa
sbb
into
jg
gs
mov
call
adc
xor
mov
sbb
test
aas
sub
aas
mov
jnp
ds
out
or
andnps
loope
sub
adc
ja
sub
dec
xorl
adc
pop
adc
movsl
xchg
aas
sbb
imul
jnp
add
inc
or
xchg
inc
push
lret
stos
inc
jge
cmp
lahf
pop
mov
mov
cmp
ds
aas
sbb
nop
push
and
cwtl
ja
fldpi
sbb
inc
pop
adc
inc
xor
fistl
xor
pop
mov
pusha
ret
cli
ret
pop
inc
sar
cld
pop
shrb
and
cmovnp
lea
out
shrb
loope
adc
jge
mov
jne
push
call
mov
cltd
mov
xchg
push
and
std
inc
ret
stos
jmp
nop
mov
add
sub
scas
inc
fbld
jmp
insb
and
iret
fbstp
and
popf
testb
ds
lock
dec
adc
mov
mov
add
add
repz
inc
xlat
dec
in
sub
and
dec
jne
cmp
jle,pn
jmp
mov
flds
fistpll
inc
cmc
fsubr
hlt
clc
test
mov
nop
mov
push
add
hlt
xor
inc
out
xchg
cmpsl
clc
push
out
or
adc
aad
cmp
xchg
sahf
movsl
insl
inc
xchg
pop
in
cmp
inc
dec
mov
xchg
push
clc
jns
lods
aas
mov
adc
stc
or
add
adc
orb
push
or
or
test
fbld
loop
adc
sar
shl
mov
push
jg
in
and
cli
add
pop
addl
mov
test
jno
xchg
orl
pop
or
mov
adc
loopne
je
fisubl
sub
adc
mov
fwait
or
xor
mov
out
or
ret
sahf
push
dec
and
testl
inc
push
mov
jl
sbbl
cmp
jne
push
lock
cld
call
push
loopne
inc
push
ret
sahf
ljmp
or
inc
or
adc
shlb
sbb
and
loop
add
and
les
sub
adc
dec
sub
icebp
cmp
das
mov
inc
call
adc
push
ja
or
movsb
push
pop
fs
test
scas
lods
mov
or
push
push
push
mov
jle
push
je
adc
xchg
jbe
pop
ds
rorb
adc
loop
imul
and
pop
jnp
addr16
pusha
rcll
es
inc
movsb
cmc
inc
jbe
leave
push
pop
call
mov
mov
testl
cs
je
inc
inc
and
jno
xor
data16
or
fcmove
add
cmp
jae
fisttpll
jmp
gs
in
adc
xor
mov
daa
cld
inc
sub
adc
mov
cmp
jbe
add
or
push
mov
ret
jg
shr
adc
xor
and
inc
pop
inc
aam
gs
sbb
sub
jns
add
jb
jbe
repnz
aam
out
xchg
in
int3
add
jo
jne
out
mov
add
add
les
cmpl
cmpsb
ret
or
icebp
mov
push
pop
ret
dec
mov
pop
xor
sub
incb
jno
sub
or
hlt
sahf
bound
fdiv
lea
inc
adc
out
insb
xchg
cmpb
mov
inc
add
push
xchg
ret
mov
push
mov
xchg
lcall
pop
adc
mov
mov
xrelease
insl
sahf
sub
imul
add
adc
add
cmp
mov
call
lods
mov
leave
or
cmp
dec
or
js
pop
lret
xorl
and
into
mov
lret
add
decb
out
pusha
xchg
mov
add
dec
jne
cmp
sbb
lahf
nop
cwtl
mov
mov
and
or
adc
loope
xor
test
and
mov
adc
add
mov
jle
scas
pop
pop
adc
loope
cmp
xchg
push
xor
imul
and
ret
fistps
sbb
sub
inc
repnz
inc
adc
or
or
add
cmp
mulb
scas
rclb
adc
mov
enter
andb
xchg
dec
inc
and
das
pop
mov
inc
pop
sub
adc
add
repz
add
push
push
call
orl
lret
jmp
cltd
and
xchg
jg
aaa
mov
jne
xor
insl
cmpl
popa
icebp
inc
sub
mov
inc
aad
cli
aas
dec
cmp
fdivrl
push
in
xlat
adc
lea
or
call
push
push
xchg
inc
data16
push
shr
call
mov
pop
mov
mov
cld
sbb
push
sbb
and
jbe
leave
dec
xchg
xchg
call
fs
push
jo
sub
push
outsb
inc
jmp
test
out
inc
inc
mov
fucom
rclb
inc
ja
test
xchg
mov
jle
rep
adc
sub
cmp
sbb
push
add
scas
nop
adc
into
jmp
push
ljmp
ljmp
and
loop
adc
push
lea
mov
adc
or
cmp
jbe
mov
or
jns
stos
test
push
mov
or
sti
jae
mov
jb
lock
dec
pushf
es
adc
xchg
pop
fsubs
add
jp
xor
sub
xor
jno
pushf
push
int
add
divps
or
cmpsb
inc
lea
jb
xchg
xor
xchg
or
jmp
jl
push
pop
push
gs
and
push
mov
dec
call
stos
and
xor
cmp
xchg
bound
jg
loop
adc
lret
push
addl
pop
pop
jle
mov
adc
dec
cld
loope
push
add
sbb
iret
sub
cs
aaa
aam
add
or
jle
jbe
negl
push
mov
mov
ljmp
push
push
lea
inc
aad
mov
pop
mov
xchg
mov
stos
jmp
fs
mov
inc
test
lea
add
outsb
sub
fcoms
push
enter
or
cmp
push
and
sar
in
or
test
fisttpl
in
and
call
rcll
jb
and
insb
fisttpl
adc
xor
gs
ljmp
dec
jmp
xchg
stos
cmp
mov
jns
pop
inc
push
iret
and
lret
in
xchg
mov
push
daa
dec
fistpl
or
adc
xlat
xor
dec
and
shlb
cmp
xchg
jo
aaa
dec
xor
xor
push
cmp
xor
out
lahf
loop
push
and
push
and
lret
xchg
dec
inc
stos
adc
aad
repnz
mov
add
mov
call
jne
jmp
sbb
sbb
mov
mov
and
sbb
or
into
dec
push
daa
adc
dec
sub
jno
int
pop
xchg
fidivrl
mov
iret
repnz
sarl
cmpb
mov
inc
add
push
cmc
and
mov
fsub
fs
nop
nop
mov
pop
into
xor
popa
cmp
testb
movsl
push
add
jle
pop
stos
mov
in
mov
rcll
out
les
shlb
les
add
add
mov
jg
mov
sub
mov
lds
pop
shll
lcall
inc
push
lcall
jo
mov
je
scas
push
lea
add
out
jo
pop
pop
pop
sbb
mov
and
add
push
fs
xchg
or
inc
stos
mov
dec
pushf
jg
dec
pop
pop
pop
icebp
push
add
movl
cmpsb
sbb
cli
dec
pop
cld
or
add
jecxz
fistpll
ja
and
call
in
jmp
pop
add
popa
jl
mov
gs
call
push
test
hlt
jl
lods
cmpsl
cmpsl
pop
cwtl
and
dec
add
fcoms
adc
movsl
stc
aas
mov
dec
repz
outsb
sub
inc
icebp
inc
add
or
cli
pop
dec
mov
inc
mov
inc
xlat
adc
cmp
add
xchg
movlps
sub
xchg
dec
mov
lds
jne
adc
rolb
adc
adc
push
cmp
fadd
or
pusha
sub
sarb
repz
fidivrs
lahf
jae
subb
sahf
imul
pop
cmp
aam
sbbl
sub
fsts
js
dec
mov
mov
jbe
jns
and
fs
lods
iret
xchg
pop
xor
xor
ret
sub
jg
jecxz
pusha
and
mov
sbb
dec
and
test
or
ljmp
push
pop
das
adc
add
mov
jecxz
cmp
or
pop
inc
call
pop
fdecstp
or
adc
imul
call
repz
pop
xor
mov
testb
xchg
notb
push
dec
pop
push
jb
cwtl
jns
add
or
je
push
inc
push
je
cs
inc
xor
xchg
xchg
adc
mov
mov
mov
xchg
push
pop
or
insb
fwait
add
sbb
adc
cld
mov
or
enter
dec
adc
cs
jne
push
push
xchg
adc
push
sbb
or
mov
or
push
inc
sbb
jmp
mov
and
and
icebp
xor
or
daa
xlat
fwait
sub
pop
inc
repnz
jmp
mov
pop
call
add
ljmp
adc
inc
stc
pop
movsb
mov
test
inc
inc
scas
insb
jl
bound
lods
add
sbb
mov
mov
and
inc
mov
cwtl
mov
sarb
out
loopne
inc
das
add
sub
test
mov
mov
sbb
and
pusha
xchg
rcrl
stc
or
out
scas
or
push
sub
shlb
jle
dec
roll
jecxz
sbb
rep
mov
je
inc
jle
cmp
pusha
mov
test
push
mov
popa
add
mov
jmp
and
dec
cmpsl
rorb
sarb
sub
xchg
test
cmpsb
aas
ret
lcall
and
enter
inc
out
popa
lea
xchg
and
mov
adc
outsb
mov
ss
xor
mov
ss
jmp
sbb
xchg
data16
scas
dec
pop
mov
pop
push
jg
mov
or
or
push
ja
stc
gs
push
xchg
mov
pop
dec
in
mov
jo
or
rclb
and
ret
cmc
sbb
pop
iret
movsl
inc
adc
and
xchg
push
data16
imul
xchg
adc
push
hlt
lea
mov
sahf
push
push
or
dec
imul
sub
inc
and
xor
cli
rcll
ret
mov
push
mov
xor
and
jle
jo
mov
inc
xchg
jmp
int
shrb
jne
cmp
aaa
dec
scas
and
in
mov
pusha
adc
add
rol
jb
sub
clc
sub
mov
adc
inc
and
xchg
xor
inc
ja
xor
nop
mov
dec
inc
mov
inc
and
mov
jle
das
sbb
fldenv
xchg
rcrb
cmc
add
sub
jge
push
les
in
cmp
add
sarb
inc
jmp
adc
lahf
lds
in
push
mov
js
subl
jbe
and
push
mov
xor
inc
clc
sub
dec
or
or
add
adc
jl
mov
cli
cld
pusha
and
or
push
imul
or
xchg
cmp
jle
pusha
sub
mov
dec
nop
cmpsb
mov
sbb
cltd
pop
and
test
or
mov
mov
and
adcl
das
adc
lahf
inc
int3
jbe
mov
xchg
dec
cmp
cmp
mov
mov
mov
pop
mov
push
hlt
and
mov
movsb
and
iret
je
sbb
and
pusha
and
adc
and
or
push
push
push
sub
xchg
lret
xchg
incl
dec
add
or
mov
sbb
and
pop
sub
jle
loopne
cltd
test
mov
sbb
movsl
push
fcomps
jle
in
int
and
pop
mov
stos
test
imul
ret
inc
sbb
repnz
mov
stos
mov
test
sub
and
call
xchg
out
pop
fsubrl
jmp
sub
mov
sub
push
mov
dec
sbb
insb
addr16
xchg
adc
lock
inc
cwtl
mov
fists
rorb
cmp
xor
push
add
add
test
dec
jne
fs
lock
xor
mov
sbb
cmp
leave
add
cmp
jne
fstp
out
je
shrl
inc
pop
sbb
push
mov
jne
adc
clc
daa
jl
pop
aam
xchg
and
out
rcrl
adc
lret
xchg
push
push
incl
add
pop
mov
xchg
inc
push
stc
scas
cmp
mov
jns
push
insl
push
outsl
mov
or
jb
sbb
lds
or
jo
mov
cld
pushf
sar
mov
adc
test
push
test
jns
mov
mov
inc
das
inc
fs
loop
dec
int
int3
jne
std
mov
inc
mov
push
xor
push
dec
xchg
cmp
jp
movsb
movsl
or
jb
mov
cmp
adc
sbbl
xor
push
mov
push
or
sahf
mov
enter
jb
lret
cmpsl
xchg
js
daa
dec
sbb
and
aad
ficompl
lcall
xchg
xchg
fucomp
adc
mov
rcll
xor
in
lea
jnp
mov
and
adc
pop
or
or
shrb
inc
push
xor
mov
sbb
xchg
or
daa
out
xlat
xor
sub
adc
xchg
xor
mov
and
inc
cmp
fildll
shrl
mov
cmpsb
push
imul
mov
daa
ljmp
adc
xor
pusha
add
push
jecxz
xor
add
cmpl
or
mov
bound
jbe
dec
int
inc
push
mov
sar
sbb
ret
inc
call
or
das
mov
cmpsb
or
daa
or
bndstx
push
fcmovu
xor
or
movsl
cmp
pop
lret
mov
bnd
inc
js
sbb
xchg
jno
push
adc
negl
push
inc
push
nop
cmp
push
test
mov
aaa
or
nop
mov
xchg
push
dec
jne
and
test
and
ficoml
mov
adc
mov
dec
or
test
mov
insl
icebp
cmp
loopne
xrelease
stc
pusha
outsl
mov
inc
or
and
cmpl
test
fimull
cltd
or
or
fildll
pop
ror
je
mov
add
test
jp
sub
cld
andb
call
testb
mov
xor
inc
sub
mov
inc
loope
lea
mov
and
sub
pop
and
daa
roll
mov
mov
add
push
repz
sbb
into
fistpll
cmp
sbb
cmp
sahf
rcr
and
mov
cmp
and
jg
call
mov
cmp
or
sbb
jae,pn
loop
dec
aam
sbb
and
jae
sbb
mov
xor
cmc
mov
xchg
adc
loopne
push
call
scas
adc
or
loopne
rorl
adc
lret
nop
xlat
out
inc
inc
fstpl
push
adcl
dec
push
test
aam
xchg
cmp
inc
ret
pop
mov
jle
pusha
adc
lea
xchg
testb
xchg
and
lea
shl
and
pop
mulb
xchg
mov
xor
push
push
inc
mov
ljmp
xor
dec
fdivrs
dec
sbb
mov
int
sub
mov
inc
mov
or
dec
cmp
or
iret
inc
xor
inc
cmpl
es
insl
sbb
or
xchg
xchg
mov
mov
lods
jmp
enter
aad
mov
gs
ljmp
xor
xor
inc
stc
jb
jmp
mov
or
dec
jge
pop
sub
inc
jle
lret
pusha
cmp
mov
push
push
push
push
push
push
call
idivl
stc
in
cli
lcall
sahf
and
mov
mov
pusha
mov
insb
pop
xchg
hlt
xchg
repnz
xor
repz
pop
pushf
xchg
ficoms
pop
xchg
mov
aad
inc
inc
pusha
jp
inc
xchg
popa
cmp
xchg
inc
adc
movb
rcl
test
jo
xchg
sti
jl
mov
jbe
in
testb
inc
mov
enter
add
push
call
mov
bound
cmp
adcb
ja
mov
in
sub
cli
cltd
mov
lahf
or
sub
inc
loope
in
xor
daa
inc
cld
add
rorl
int
aad
fsubp
jle
pop
jmp
add
sbb
add
xchg
dec
addl
lock
and
jmp
dec
jl
pop
and
shrl
adc
ret
pop
rclb
xchg
cwtl
mov
enter
inc
fcompl
mov
popa
xchg
or
jmp
fiaddl
mov
ftst
cmpsl
mov
cld
fmul
mov
mov
nop
insl
mov
lds
pop
cmp
xchg
adc
ret
gs
cs
sbb
pop
rorb
lea
test
push
jns
add
adcb
mov
jmp
gs
inc
push
stc
fisttps
mov
mov
and
rcl
mov
xor
pop
sub
les
push
je
lret
pop
mov
xor
clc
orb
outsb
push
mov
mov
adc
push
adc
ja
or
and
mov
leave
xor
fmull
and
gs
nop
sub
mov
out
xor
nop
xor
jl
jne
and
xchg
adc
sub
bound
jmp
jo
nop
jo
mov
subl
out
test
mov
add
out
insb
jnp
sbb
lcall
arpl
pop
push
aad
sub
fnstenv
bnd
jns
maxps
push
inc
xchg
inc
stos
dec
mov
rcr
mov
shll
lret
push
aam
mov
xor
imul
or
insl
loop
or
cmp
pop
xor
mov
push
iret
and
dec
test
cmp
orb
cmp
mov
sti
or
mov
dec
notl
cwtl
adc
jne
mov
sbb
cmp
and
cmp
adc
push
inc
out
add
pop
mov
ljmp
pop
sbb
pop
loope
pop
cmp
adc
call
into
inc
xlat
xchg
pop
clc
add
lahf
mov
or
jo
outsl
and
bound
or
mov
or
xchg
inc
lret
mov
orb
aam
push
lret
sbb
cmp
add
inc
xchg
adc
je
mov
mov
inc
add
sub
mov
lret
add
lea
add
mov
mov
xlat
or
cwtl
sub
pop
sub
jbe
popa
push
out
fs
and
inc
xchg
add
inc
inc
fldcw
lcall
or
cmp
in
pop
jmp
lods
pop
lcall
push
mov
xchg
stc
nop
call
xchg
inc
incl
and
scas
mov
and
lods
gs
sbb
sahf
mov
ja
push
test
mov
or
jp
mov
lods
lcall
bound
push
xchg
mov
and
push
iret
lea
pop
mov
jmp
mov
add
das
mov
sbbl
lock
adc
dec
cmp
inc
or
shr
hlt
arpl
or
jl
pop
lods
mov
out
daa
adc
xor
add
push
dec
add
mov
jmp
cmpsl
fwait
adc
mov
test
lea
orb
jmp
lods
and
inc
jmp
mov
push
mov
xor
inc
inc
out
rcr
push
pop
mov
ds
mov
pop
and
xchg
xchg
xchg
mov
jae
xchg
or
sub
cli
shll
sbb
adc
dec
call
loop
push
test
nop
pop
daa
or
outsb
fstpl
sub
adc
cmp
inc
ret
push
jnp
fsubrs
ds
pusha
pushl
or
sbb
sub
jns
cmp
movswl
imul
cmp
sbb
xor
rorl
adc
test
or
xchg
fnsave
jo
ret
fs
in
insb
mov
dec
xor
push
pop
jg
movsl
inc
cwtl
jle
cmp
daa
sub
into
mov
test
and
pop
push
daa
pop
aam
mov
cmp
push
mov
fldenv
mov
cmc
jmp
and
lcall
pop
sub
xor
outsb
xchg
sbb
xlat
icebp
push
xor
add
js
add
add
cltd
in
in
xor
std
data16
js
xchg
loop
xorb
pop
inc
sub
neg
mov
scas
inc
dec
xor
repz
test
addr16
mov
pop
jl
xlat
xchg
test
ljmp
and
orb
add
mull
and
call
jl
xchg
mov
xor
inc
sub
add
dec
mov
sub
jns
add
aaa
mov
add
stos
mov
jae
jns
pushf
xchg
jle
adc
pop
pop
push
test
xor
mov
mov
lea
push
dec
push
movsb
cmpsb
lret
imul
adc
int3
xor
pushf
orb
xchg
xor
xchg
cmp
leave
cmc
icebp
shlb
repz
jne
adc
enter
xor
xor
and
push
fbld
les
xchg
lret
xchg
jecxz
and
dec
adc
sar
add
fwait
sub
xchg
divb
dec
pop
xchg
ret
ret
pop
push
lds
xchg
int
mov
inc
mov
mov
fwait
xor
pop
jno
bound
in
sbb
xlat
mov
je
xchg
sbb
sbb
aam
std
movsl
push
fldcw
pushf
push
sub
mov
shlb
xor
sti
or
or
fcomip
cmp
jl
jae
aas
add
cmp
dec
xchg
cmp
cmp
and
mov
adc
or
int
pop
cs
xchg
mov
add
cmp
jle
out
jbe
mov
test
push
movsbl
je
or
sub
jne
nop
ret
pop
test
and
and
cwtl
inc
cmp
je
mov
shll
loope
pop
jne
xor
idivb
dec
cmpb
sub
xor
push
mov
sbb
repnz
dec
cli
dec
adc
add
cmpsb
jbe
cli
jg
dec
xchg
and
push
jecxz
mov
subl
push
pop
jmp
mov
xchg
sub
xchg
cmp
jbe
mov
jecxz
mov
add
cltd
mov
push
rolb
scas
ret
ja
add
inc
into
or
add
sub
add
or
cmp
cltd
cli
aaa
aam
cmp
inc
mov
inc
xchg
test
push
sbb
subl
push
push
jle
mov
dec
pushf
pminsw
push
lcall
pop
xchg
cld
dec
adc
adc
sbb
pop
add
lea
dec
insb
adc
jnp
adc
hlt
test
push
hlt
imul
and
scas
pushf
pop
enter
je
cmpsl
sub
lds
or
xor
mov
cmp
jge
sbb
mov
push
mov
push
cmpsl
es
push
dec
add
pop
mov
enter
sub
dec
fst
mov
sub
ljmp
adc
lret
sbb
mov
cld
jns
push
call
xchg
cltd
xor
imul
jmp
mov
or
test
in
mov
inc
dec
and
repz
cmp
out
or
inc
popf
test
inc
dec
mov
dec
sar
jae
in
add
adc
sub
dec
cld
inc
mov
cmc
scas
fs
cmp
pop
push
push
mov
or
jmp
push
orl
pop
xlat
jg
aaa
mov
sarb
cli
sub
cmp
add
mov
test
ss
orb
sbb
aas
pop
cld
cmp
push
das
ret
xor
xchg
aas
scas
mov
sbb
aas
leave
adc
in
mov
cwtl
sub
mov
xchg
lcall
jle
jae
dec
xchg
xchg
sbb
je
imul
iret
mov
mov
jl
decb
sub
adc
enter
sahf
call
mov
lea
cmp
cltd
and
lea
cmp
add
sti
jge
mov
jno
sbb
sbb
cld
into
xchg
stos
loop
and
bound
rcrb
push
inc
pusha
add
pop
jmp
or
adc
pop
rorb
aam
mov
ret
test
inc
bound
rclb
sahf
mov
dec
je
push
bnd
cmpsb
pop
mov
xlat
jmp
adc
loop
xchg
mov
dec
sub
xchg
cltd
cmp
inc
bnd
out
cld
jl
dec
popa
push
push
add
xchg
sbb
cvttps2pi
repz
dec
xor
jmp
pop
add
scas
push
pop
lea
cmp
adc
xor
sbb
jle
xchg
stc
inc
cltd
dec
inc
push
lahf
es
mov
ret
sub
xchg
inc
add
call
mov
pop
cmp
mov
jbe
mov
jge
sub
jmp
lea
mov
daa
sar
fsubrp
push
or
lock
fildl
insl
or
jp
and
lock
push
mov
movsl
inc
mov
je
push
cmp
jge
push
xchg
addl
mov
pop
jle
imul
shl
ret
pop
mov
inc
mov
sbb
dec
shrl
aas
xor
sbbb
mov
xor
mov
push
mov
lea
inc
arpl
xor
xor
inc
adc
inc
xor
push
out
mov
sub
les
js
test
pop
sti
js
std
xchg
fistpll
or
jmp
mov
or
jp
shr
daa
xchg
pop
push
add
dec
jmp
cmp
pushf
test
and
lock
clc
push
ljmp
mov
push
and
std
jge
dec
cli
js
cld
test
sub
mov
xor
inc
aad
or
das
insb
fsts
movsl
test
ljmp
mov
dec
xchg
mov
push
int3
loope
jbe
mov
mov
sub
dec
dec
fcoml
or
lods
es
das
jl
sub
dec
xor
ds
stc
sub
push
and
xor
sbb
adc
adc
loopne
dec
sbb
pop
sub
out
imull
mov
or
movsl
sub
mov
addb
fisttps
push
pop
sar
loope
mov
imul
add
ret
mov
std
cli
outsb
or
lea
mov
mov
or
jl
mov
and
and
lret
dec
test
les
cli
bound
adc
mov
cmp
add
outsl
dec
insl
add
or
pop
cs
push
lds
adc
mov
imul
mov
mov
and
rep
aas
cmp
or
push
push
sub
sub
sbb
in
dec
data16
mov
cmp
cmpsl
xchg
outsb
ret
loop
fisttpll
add
scas
pop
jb
pop
jmp
adc
or
jg
add
pop
fwait
shlb
sub
enter
dec
jmp
and
and
jg
adc
out
cmp
inc
mov
mov
mov
scas
inc
adc
push
std
xor
pop
add
add
icebp
loopne
pusha
aas
sub
test
push
test
mov
xchg
cmp
push
icebp
hlt
enter
je
xor
xchg
aaa
xchg
nop
js
jle
sahf
xchg
clc
int
mov
push
adc
adc
and
je
or
fwait
push
adc
adc
adc
and
js
cmpb
loopne
pop
dec
mov
mov
pop
stos
mov
lea
dec
outsb
jne
mov
jbe
inc
jmp
and
dec
lods
inc
inc
pop
cmp
pop
mov
push
mov
adc
orl
mov
add
cmpsb
xchg
sbb
mov
or
testl
mov
mov
xor
and
push
sar
dec
test
mov
clc
test
mov
and
in
sbb
push
call
call
rclb
dec
lea
into
fdivl
jl
push
pop
lds
lea
les
push
pop
incl
or
dec
mov
mov
jg
lods
in
fsubrs
pop
cmp
adc
jle
pushf
lods
cltd
or
and
pop
stos
or
or
jmp
test
push
push
call
push
mov
pushf
mov
sub
cmp
push
lods
inc
repz
pop
push
mov
jmp
xor
cmp
push
mov
in
dec
pop
push
xor
out
adc
xor
jmp
popf
sti
popa
push
pop
cmp
arpl
sarb
lods
and
cmp
lea
mov
or
cmp
jno
lods
out
and
sub
jne
mov
cmp
push
pushf
sub
fwait
cmpsb
add
jmp
pop
stos
dec
mov
and
push
cwtl
fsubl
inc
jne
push
push
inc
sbb
popa
call
adc
cld
cmp
or
mov
dec
adc
sbb
ljmp
lret
sbb
push
xlat
popf
pop
sub
push
test
cmp
jne
outsl
imul
adc
and
dec
mov
adc
adc
adc
and
icebp
test
and
jno
push
and
les
xor
adc
push
mov
gs
mov
sar
ss
mov
add
mov
mov
push
push
xchg
cmp
lret
push
enter
ret
enter
daa
xchg
pop
push
js
add
or
add
stos
push
mov
mov
pop
or
mov
push
addr16
pop
jl
pop
add
je
cmp
jge
mov
inc
sub
sub
xor
xlat
xchg
cmp
and
add
pop
dec
cltd
dec
lods
push
xchg
clc
pop
mov
out
mov
dec
or
in
xchg
shrl
daa
sub
cmc
inc
add
clc
loop
push
pop
push
push
dec
and
xor
xchg
push
fs
mov
xchg
inc
imul
inc
sub
inc
mov
in
std
jle
pop
test
fstp
jns
shlb
inc
xchg
mov
cmp
and
mov
sbb
mov
xchg
cmp
jle
add
dec
dec
rclb
or
data16
fstl
in
xor
push
dec
inc
inc
pusha
fimull
sbb
rclb
pop
and
push
into
dec
mov
or
adc
stos
into
pop
pop
lahf
iret
dec
ret
hlt
mov
pusha
or
mov
sub
outsl
sub
push
cmp
cmp
sbbb
call
or
inc
mov
in
out
push
dec
jmp
sub
or
je
inc
mov
or
mov
pop
or
inc
push
out
cmp
clc
dec
mov
call
lea
std
je
repnz
cmp
sbb
inc
push
pop
cmp
mov
push
push
push
call
xor
add
decb
fs
rcrb
mov
and
icebp
popf
subb
ljmp
cmpsb
popf
pop
push
out
push
mov
and
in
add
add
repnz
in
das
adc
int
mov
in
daa
shlb
mov
and
lods
sub
roll
jl
sub
sub
xchg
mov
cli
mov
nop
sub
push
xchg
adc
icebp
jg
push
adc
sbb
inc
sub
push
sub
or
xchg
push
inc
adc
dec
xchg
leave
sub
mov
fwait
mov
mov
jle
rcll
add
jno
aam
adc
das
sub
dec
mov
loope
jb
popf
push
sbb
jo
sbb
mov
in
jbe
adc
and
cmpsl
pop
nop
fsubrl
dec
jle
bound
pop
inc
pop
xchg
shr
and
test
les
test
jmp
xor
out
leave
add
je
cmp
jge
daa
push
push
mov
stos
jmp
xchg
sbb
cmc
mov
ret
ficompl
sub
repz
pop
pop
mov
mov
jae
roll
and
mul
inc
shll
xchg
inc
je
je
push
xchg
loope
pop
nop
or
add
sbb
push
mov
xchg
push
imul
hlt
daa
push
adc
adc
mov
inc
movsb
mov
jns
iret
addr16
inc
pop
add
sub
add
jg
push
imul
xor
add
mov
mov
inc
push
cmp
jne
push
add
jge
mov
or
inc
dec
popa
mov
leave
jne
sub
push
push
push
and
lea
mov
jae
add
inc
clc
mov
arpl
stos
movl
mov
cld
mov
jl
pop
pop
mov
xchg
in
out
scas
addr16
xlat
repnz
or
movsl
aam
adc
jno
stc
mov
mov
add
push
sbb
bound
pusha
dec
imul
ljmp
adc
xchg
sbb
jge
dec
xor
addb
ss
rorb
adc
mov
sbb
mov
jmp
das
mov
sahf
adc
mov
jge
adc
sub
sbb
lds
insl
mov
xchg
sbb
data16
pushw
dec
or
fnstcw
ds
fidivrl
mov
lret
add
mov
jecxz
out
movsb
or
jno
fildll
push
jl
movsb
push
daa
pop
xchg
bound
clc
rorb
pop
cld
jl
mov
adc
rcrl
inc
sub
pusha
mov
mov
shlb
pop
sub
sbb
mov
sbbl
sti
jbe
pop
cld
cmp
xor
cmp
ret
fucomp
cmpsb
xor
popa
add
out
pop
rcll
test
adc
jp
notl
adc
in
ret
rol
or
push
mov
bound
fists
mov
xor
sahf
mov
pop
mov
daa
push
xchg
fwait
cmc
xchg
and
inc
inc
in
je
cwtl
popf
call
push
ds
js
mov
loop
jo
push
push
push
mov
dec
data16
cwtl
pop
mov
int
push
cmp
repnz
lret
lock
xchg
in
inc
js
pop
sbb
icebp
dec
cld
and
adc
mov
ja
adc
adc
xor
inc
adc
es
inc
jae
and
pop
dec
push
xorb
or
lock
dec
lcall
xchg
and
mov
fistl
adcb
je
inc
or
repnz
fstpl
cld
add
cmp
movsb
cli
sub
mov
cmp
or
push
ficoms
insb
xchg
sub
jbe
movsl
nop
mov
inc
jmp
or
cmp
mov
jge
xchg
or
adc
sbb
test
pop
bnd
xor
inc
lods
pop
and
adc
mov
nop
adc
mov
or
inc
in
test
cmp
jge
and
and
test
or
or
cli
in
imul
adc
enter
push
jne
cmp
cmpsb
jmp
xchg
xchg
sti
jae
add
push
add
cmp
pop
jb
lret
mov
inc
dec
pop
push
mov
sarb
mov
mov
inc
cmp
push
les
outsb
sbb
adc
std
enter
pop
and
clc
pop
mov
cld
ret
mov
cli
xchg
nop
stos
push
lea
or
mov
icebp
inc
scas
adcl
test
mov
lods
in
fbstp
negl
mov
pop
mov
fidivs
mov
push
mov
rorl
movl
jb
loopne
mov
sub
inc
sub
dec
mov
das
sub
sti
cli
xchg
xor
bound
out
lahf
and
xor
aad
pop
add
filds
xor
lock
inc
in
pop
or
ss
inc
inc
mov
fdivs
dec
cmp
outsl
mov
lds
test
daa
and
adcb
push
cmp
pop
clc
jne
inc
lret
loopne
ficomps
ljmp
pusha
adc
leave
cwtl
gs
add
jbe
adc
pop
push
and
xchg
lret
pop
mov
imulb
cmpsb
xor
xor
sbb
lret
inc
fsubrl
ja
dec
jge
scas
popf
popa
push
cmp
adc
and
shrl
push
mov
stos
test
inc
daa
ja
dec
adc
inc
xchg
jp
call
arpl
dec
xchg
dec
adc
push
imul
mov
pop
push
test
jl
incb
mov
idiv
sbb
rorb
in
inc
sub
gs
xor
and
mov
jl
mov
inc
push
adc
and
lea
sub
add
and
adc
lret
dec
cli
sub
aam
adc
mov
pop
repz
pop
iret
push
push
pop
stos
xor
add
cs
pop
bound
xor
sub
aaa
cmp
daa
dec
dec
mov
push
imul
xor
or
movb
lock
pop
sub
jge
fcoml
cli
xchg
cmp
fcomps
push
adc
scas
mov
ret
ret
mov
xor
loop
jne
cmp
subl
dec
decl
add
rclb
nop
mov
mov
mov
sbb
loope
xor
cli
gs
cmc
test
jg
mov
push
inc
es
adc
ss
cmp
jae
mov
inc
xor
jle
scas
or
iret
xchg
rol
pop
push
mov
push
test
mov
scas
xor
cld
arpl
sub
idivl
loop
add
cmp
jle
and
jo
dec
push
mov
sahf
movsl
cmp
sub
mov
adc
push
adc
dec
add
inc
insl
adc
testl
bound
push
jmp
mov
stc
adc
mov
into
or
and
jle
mov
or
or
out
ret
lea
test
or
mov
pop
sbb
repz
fdivrp
sbb
jl
iret
pop
fadds
sub
inc
xor
das
mov
and
push
mov
adc
icebp
push
xor
cmp
pop
inc
cmp
add
or
push
mov
inc
call
stos
test
push
dec
add
add
or
mov
jmp
mov
mov
lods
out
mov
outsb
subl
mov
sub
sarb
lock
adc
mov
sbb
inc
lea
cmp
cli
mov
test
shll
push
xor
or
lea
adc
decb
add
push
push
inc
sbb
jne
fcomps
push
enter
mov
mov
dec
or
or
jmp
lds
loopne
mov
pop
pop
je
push
subl
and
pop
jns
and
jno
adc
fiadds
cld
pop
cltd
pop
sbb
stc
push
sub
mov
mov
pop
jne
cmp
cld
insb
and
or
inc
adcl
xchg
pop
movaps
ljmp
adc
lds
leave
or
jle
inc
mov
xor
adc
popa
daa
push
mov
mull
sbb
test
pop
mov
jbe
pop
pop
adc
lret
xor
add
xorb
cmpsb
ret
orb
push
push
addr16
push
adc
xchg
test
xorb
imul
and
mov
adc
inc
in
and
test
ret
jmp
sub
ret
jl
pop
sub
jmp
xchg
xor
xchg
icebp
sub
mov
cld
add
je
jmp
sahf
adc
adc
leave
and
sbb
mov
jge
or
jge
push
sub
xchg
rcrl
adc
lret
je
fbld
and
jne
add
inc
inc
mov
movsl
rcrb
mov
lock
and
gs
ljmp
pop
xorb
outsl
test
mov
or
les
test
add
mov
adc
nop
inc
pop
mov
add
cmpsb
aas
cld
push
xchg
jecxz
dec
dec
jae
dec
add
inc
push
dec
js
ljmp
les
pop
lods
mov
sub
jle
mov
mov
or
xor
sub
mov
or
sahf
cmp
out
js
mov
jno
adc
add
xchg
fidivs
cmc
jb
mov
jmp
jmp
inc
icebp
adc
mov
or
jmp
mov
test
mov
dec
mov
imul
mov
pop
mov
sbb
fcmovb
arpl
scas
sbb
pusha
push
xchg
filds
rclb
leave
push
adc
add
adc
jmp
mov
pop
or
and
sbb
adc
lret
stc
enter
cltd
mov
jge
xchg
xchg
mov
les
inc
adc
nop
fdivp
rorb
sti
ja
int3
inc
adc
xor
sub
sub
mov
cld
xchg
push
adc
cmp
sub
cmp
pop
dec
mov
adc
jmp
dec
xchg
xor
dec
cld
inc
pop
and
jno
mov
icebp
sub
and
push
icebp
or
hlt
lods
push
or
mov
repz
adcl
in
add
add
std
leave
push
lcall
adc
xchg
sub
stc
add
mov
fs
dec
xor
xlat
pushf
xor
xor
and
aam
sub
and
or
and
push
xor
jp
lock
jo
pop
push
popl
imul
push
shrl
add
mov
lock
xor
pusha
push
sarb
xor
mov
and
or
sbb
jbe
add
sbb
test
jne
fists
add
repnz
lcall
sbb
rcl
js
push
cwtl
test
jne
movsl
jne
jo
add
mov
adc
mov
mov
xor
jmp
cmc
xchg
sbb
je
lock
or
mov
movsb
cli
fsubrs
xchg
lock
add
dec
out
adc
lock
pushf
xchg
and
daa
inc
mov
push
stos
sbb
nop
inc
cmp
cmp
fstpl
cmp
push
cld
xchg
pop
inc
jne
and
scas
icebp
adcl
mov
mov
xchg
xor
xchg
cmp
inc
add
ja
sub
xchg
xchg
movsl
ret
cld
mov
sbb
xor
dec
ljmp
mov
nop
cli
nop
xor
fisubrl
pop
mov
inc
les
sub
pop
push
jmp
and
mov
and
imul
jne
add
jle
ret
in
adc
ljmp
rorb
and
mov
xchg
scas
inc
jo
dec
sub
xor
jecxz
hlt
stos
xchg
rolb
push
or
pop
or
ds
xchg
mov
and
call
mov
into
push
xor
iret
jo
push
or
call
lods
mov
inc
shlb
adc
sbb
adc
adc
mov
dec
mov
inc
filds
push
dec
ljmp
nop
pop
mov
dec
jns
add
mov
mov
je
out
dec
push
push
sub
imul
and
adcb
call
popf
cltd
xchg
pop
jmp
xchg
pop
sub
stos
or
jae
inc
mov
mov
add
inc
stc
mov
mov
sbb
jbe
adc
call
popa
leave
icebp
das
test
inc
inc
pop
push
add
dec
fsubp
push
bnd
and
sbb
pop
sub
mov
xor
xchg
fsts
dec
in
popf
stc
push
cltd
push
jnp
sub
fidivrs
and
jmp
sbb
adcb
mov
mov
out
cmc
sub
mov
inc
and
push
lea
in
push
adc
and
push
adc
sbb
popl
adc
rcl
les
xor
cmp
push
jb
outsl
push
xchg
and
pop
push
cmp
shr
je
sub
rclb
orb
or
dec
inc
push
mov
xchg
xchg
inc
cltd
repz
mov
xchg
mov
xor
stos
mov
xor
ffree
pop
adc
add
inc
mov
std
ljmp
sub
sub
sub
cmc
cmpsb
sbb
pusha
mov
push
out
das
push
xchg
mov
xchg
xor
add
testb
je
push
fwait
push
lcall
mov
adc
sub
and
xchg
xchg
or
mov
dec
mov
orl
add
add
sub
test
and
push
aaa
mov
loopne
sti
mov
sub
push
add
out
into
jmp
das
sbb
sbb
ja
jl
or
cs
xchg
adc
addb
inc
jno
sbb
add
adc
into
pop
leave
push
rolb
mov
and
pop
jae
fs
pushf
ficomps
fadd
repnz
sbb
xchg
xchg
add
imul
mov
int
xor
sti
and
adc
scas
add
sub
mov
sub
adc
test
sub
test
mov
sbb
or
inc
pop
sahf
arpl
push
cmp
push
cli
sub
push
imul
and
shlb
adc
xchg
sub
testb
das
ja
lret
pop
leave
pop
ret
lcall
and
cmp
dec
and
ljmp
dec
repnz
ror
add
addl
adc
daa
fscale
test
popf
mov
aas
imul
mov
xchg
stc
mov
sub
mov
mov
imul
xchg
adc
inc
in
mov
inc
pop
and
clc
out
sub
cmp
mov
cld
jl
fstpl
sbb
fcompl
or
adc
cmp
andb
cs
pop
mov
cltd
mov
loop
dec
mov
cmp
mov
pop
jo
popf
sti
ja
and
test
rorl
jb
call
mov
std
pop
mov
sbb
dec
mov
jge
sub
pop
les
lock
sub
adc
adc
and
mov
out
out
add
jne
lea
int3
js
xor
inc
fidivs
fidivrl
rcl
test
add
mov
subl
fsts
push
sub
mov
cld
mov
mov
mov
cltd
push
adc
imul
mov
ljmp
jns
movsl
lret
or
pop
sbb
and
insl
mov
jmp
mov
jne
les
gs
sub
nop
or
mov
je
dec
inc
inc
sub
nop
jl
inc
andl
jne
push
cmp
scas
dec
add
mov
xchg
mov
inc
sub
popa
setp
cld
add
dec
lods
es
adc
xor
mov
daa
or
cmp
ljmp
mov
scas
dec
in
inc
fisttps
push
jno
cmpsb
jle
jb
adc
enter
test
jbe
jmp
and
mov
add
add
ljmp
jecxz
xor
add
mov
cmp
pop
xchg
ds
ficoms
xchg
xchg
mov
enter
scas
addr16
das
inc
mov
push
pop
inc
pop
adc
push
nop
xchg
test
mov
inc
push
pusha
jo
or
mov
push
sub
push
movsb
xchg
pop
sub
ja
repz
loop
jbe
pop
popf
push
rorb
dec
dec
xchg
inc
inc
mov
cmp
je
jge
stc
mov
mov
lret
add
cwtl
inc
jnp
inc
jae
pop
test
sub
call
jo
dec
loopne
xchg
jns
xchg
lods
cmpsb
adc
sub
rorl
or
xchg
jne
jecxz
and
sub
cmp
cmovae
sub
lods
popf
ljmp
mov
sti
and
lret
push
decl
push
movsb
mov
jle
jecxz
sub
add
std
or
add
iret
push
push
push
push
xchg
pop
scas
push
xchg
pusha
daa
adc
pop
cltd
mov
adcb
shlb
mov
xor
mov
aam
icebp
rolb
dec
loope
cmp
adc
jg
push
mov
dec
cmpsb
add
lea
mov
and
inc
aaa
into
mov
push
ret
mov
inc
jmp
push
outsl
addb
inc
in
inc
add
daa
adc
jbe
test
sub
jnp
mov
or
dec
mov
jg
mov
jg
outsl
sbb
xchg
inc
test
pop
imul
pop
inc
mov
cli
pop
push
dec
out
sbb
je
or
je
xor
cs
cmp
cmp
push
push
and
xor
adc
cmpsb
add
adc
pop
mov
cld
jmp
lods
arpl
jae
cmp
pop
sbb
sarl
shrb
rol
loop
sub
out
and
pop
pop
test
or
shl
rolb
iret
jge
mov
sub
popf
mov
add
clc
int
jmp
and
or
or
dec
les
cmp
jg
test
jle
nop
gs
repnz
pop
bound
and
pop
bound
sarl
jge
xchg
gs
jns
mov
movsb
insb
pop
and
clc
add
jmp
and
sub
jle
fwait
push
push
enter
xor
fsts
outsl
jmp
xor
xor
icebp
dec
lret
out
in
negl
ret
outsb
gs
orl
adcl
and
adc
cmp
mov
push
inc
xor
sti
sub
jne
adcl
lds
fcmovb
mov
repz
fimuls
shrb
jnp
xor
dec
adc
xchg
popf
inc
mov
jp
push
sub
mov
pop
or
cld
imul
adc
mov
dec
sub
adc
inc
aam
jnp
stc
and
movl
out
pop
insb
jbe
cli
shll
xchg
dec
mov
or
sub
cmp
add
jl
sub
jmp
enter
cmpsb
sbb
mov
cs
xchg
int
mov
jmp
pop
pop
mov
sbb
inc
inc
sbb
jne
mov
add
outsb
mov
insb
dec
dec
lea
xchg
scas
xor
fmull
and
add
daa
pop
push
sbb
nop
inc
insb
inc
leave
adc
sbb
fs
test
jp
sub
jo
int
sub
pop
sbb
fsts
nop
lea
addl
lcall
sub
mov
stos
add
and
jbe
xor
cmp
pop
cmp
je
fiaddl
xorl
adc
stos
mov
adc
dec
ljmp
dec
jle
mov
dec
pop
add
inc
in
ja
xchg
xchg
adc
push
add
stc
ds
rol
loopne
xor
je
mov
idivb
lret
das
xor
nop
mov
lds
push
mov
js
mov
jns
xor
push
das
cltd
je
mov
or
mov
adc
mov
sub
or
ret
sub
or
cmp
sbb
idivl
push
push
mov
jo
pop
or
dec
pop
add
pop
mov
pop
outsl
es
fsubrs
test
cmpsb
mov
xchg
aas
dec
add
jg
push
sbbb
dec
or
mov
push
jne
aad
xor
js
mov
fs
xor
sarb
mov
inc
pop
pop
imul
subps
repnz
or
cli
xchg
lea
cli
mov
into
add
popa
or
push
ret
dec
sbb
repnz
xlat
or
dec
sub
inc
mov
sbb
sub
fcom
inc
add
sub
daa
int
loope
shrb
cmpsl
xchg
mov
xchg
or
and
imul
add
dec
cmp
add
gs
aam
adc
xchg
inc
or
std
sbb
cmp
mov
adc
test
mov
xchg
pop
mov
mov
daa
pop
ret
jle
leave
xor
dec
xor
ljmp
or
pop
daa
icebp
xchg
ja
pop
stos
int
push
dec
mov
and
mov
pop
push
push
sti
jle
mov
mov
bound
or
sub
adc
push
inc
push
stos
enter
and
jmp
dec
adc
bound
cmpsb
orb
add
and
fnstsw
movsl
mov
fbld
inc
adcl
mov
push
sbb
jge
aam
inc
mov
sub
sub
cmp
idivl
or
and
add
leave
cmp
xor
call
jg
les
add
int
adc
inc
test
fistps
lds
push
pop
cmp
pop
dec
incb
dec
lock
stos
inc
add
sbb
daa
fcompl
push
adc
pop
icebp
fwait
test
flds
pusha
addr16
mov
ljmp
adc
orb
jl
dec
adc
push
or
mov
inc
fsubs
sub
aad
inc
push
loop
pop
and
jg
or
jge
les
sub
dec
testl
add
add
cmc
shr
dec
repnz
jg
mov
icebp
movl
add
xchg
or
jle
push
sub
lret
mov
push
inc
xchg
mov
je
mov
in
xchg
jle
jmp
test
out
addb
cmp
jle
loop
cld
stc
mov
sub
mov
sbb
push
out
mov
sbb
rclb
lock
jo
xchg
dec
ds
and
xchg
lcall
iret
shr
push
jecxz
fiaddl
sbbl
adc
jg
jmp
outsl
jne
inc
test
dec
adcl
mov
jno
xor
enter
and
xor
jle
add
inc
dec
mov
adc
add
enter
negb
out
jl
or
mov
sub
adc
stc
outsb
mov
adcl
push
imul
push
icebp
or
add
repz
push
daa
xchg
cmp
repz
xor
jge
lret
hlt
jb
inc
push
inc
das
test
sub
cmp
xor
cwtl
dec
mov
in
jnp
int
inc
dec
icebp
inc
aam
dec
push
add
cmp
or
dec
jne
clc
dec
and
xchg
fdivr
loope
and
daa
sbb
jne
das
jmp
xor
imul
cmova
stc
lock
pop
adc
aad
lahf
clc
nop
divl
aas
lahf
adc
lea
inc
xchg
pop
jbe
rclb
push
or
push
aas
mov
idivl
inc
faddp
sub
jo
clc
popf
fldl
ja
sbb
adc
mov
ja
adc
fcmovu
xor
add
mov
cli
push
pusha
popa
jns
ljmp
mov
lea
cmp
and
cmp
jle
clc
dec
dec
xlat
loopne
mov
mov
fwait
sbb
lahf
or
add
ja
sbb
mov
or
xchg
push
fbld
cld
jmp
inc
aas
imul
faddl
jle
insl
push
and
cmpsb
xchg
fildl
push
and
xor
pusha
jl
pop
movsl
jo
dec
sti
dec
jle
pop
insl
andb
aad
sub
aam
pushf
mov
add
add
faddl
inc
in
repnz
inc
fucomp
pop
pop
cmc
dec
pusha
and
sbb
jg
sbb
jb
je
jmp
cmp
add
dec
sbb
mov
and
push
or
or
fnstenv
push
es
cmpsb
decl
gs
cld
inc
hlt
and
mov
mov
enter
sub
mov
pusha
ret
mov
cmp
daa
push
cmpsb
stc
push
xchg
dec
int3
push
sbb
push
add
sbb
dec
test
shrb
movsl
or
push
cmc
inc
mov
and
or
je
in
lret
push
adc
and
jmp
fcmovbe
jg
pop
sbb
ret
out
aaa
sbb
orb
jne
xchg
adc
sub
icebp
xchg
sub
xor
les
popa
jle
cmpb
push
mov
imull
je
mov
jle
adc
xchg
and
sub
dec
cwtl
adc
test
sti
adc
repz
mov
movsl
adc
push
add
inc
sbb
rcll
add
push
or
sub
jecxz
and
daa
movl
jns
leave
add
xor
test
jp
mov
cld
mov
dec
xor
xor
push
mov
cwtl
jns
in
pusha
cmp
fsubr
and
add
movsl
push
hlt
les
mov
xchg
stos
sub
repnz
orb
push
dec
sbb
push
inc
lods
je
dec
and
aaa
inc
mov
push
inc
adc
push
outsl
adc
jns
jle
stc
or
sbb
ffreep
push
xchg
mov
inc
std
jle
pop
jno
ljmp
dec
ret
xor
inc
inc
fisubrs
cmp
int3
mov
sarl
lret
test
popf
loopne
das
add
jmp
subb
hlt
push
mov
or
shrl
inc
sub
sahf
jg
test
dec
in
icebp
or
js
cmp
popf
push
xor
pop
inc
jmp
jns
jbe
push
jb
xor
dec
inc
fidivs
mov
nop
mov
and
inc
push
repnz
jg
out
sbb
cmp
jmp
es
fnstcw
hlt
jmp
or
xchg
data16
divb
sbb
loopne
repz
inc
loopne
inc
scas
cmp
mov
outsb
adc
cmp
inc
sub
test
or
adc
in
test
pop
arpl
ljmp
add
rorl
rcr
pop
daa
mov
push
stc
or
jns
adc
cmc
xchg
mov
jl
lods
jmp
mov
jmp
jg
adc
adcb
xor
mov
or
rcr
push
inc
push
add
pop
shrb
stc
ret
data16
push
mov
pop
pop
dec
pop
push
sahf
and
lods
inc
mov
jne
and
jle
jge
and
aas
sti
jnp
lahf
out
xchg
inc
push
push
mov
inc
dec
sbb
cs
adc
fcoms
test
cli
xor
lea
sahf
cmpsl
jno
daa
sub
lcall
int
je,pn
out
pop
pop
xor
int3
add
and
test
dec
mov
lds
stos
repnz
cwtd
nop
mov
out
push
icebp
jle
jne
sub
push
call
int3
adc
jg
jmp
testb
push
inc
cmp
aaa
addr16
or
out
popa
lea
cmp
xchg
inc
pop
adcb
sub
out
movsb
cmp
push
loope
les
mov
xchg
incb
lea
cltd
pop
lret
inc
mov
stc
mov
mov
and
pop
jp
ljmp
test
pop
mov
jne
pop
std
nop
lds
in
lods
mov
inc
subb
mov
addr16
pop
mov
in
push
and
inc
arpl
popf
test
adc
jg
mov
xchg
pop
data16
dec
xchg
mov
inc
nop
ret
inc
adc
and
push
out
or
mov
pop
xchg
mov
xor
jo
sbb
mov
sbb
outsl
jle
fs
sbb
stos
xor
sub
mov
sbb
inc
jnp
repz
cmp
jge
add
xchg
scas
sbb
je
jle
jle
mov
inc
test
lods
dec
test
sub
pop
addl
lock
cmpsl
lods
lds
mov
adc
mov
jmp
add
hlt
fimull
pop
push
jge
dec
loopne
xor
loopne
sti
push
lret
sbb
mov
cwtl
push
pop
fstps
std
and
mov
push
push
push
loop
into
js
xor
mov
adc
mov
ret
mov
fldt
push
nop
ret
fldenv
jmp
lock
xor
je
dec
xchg
ja
xor
dec
jle
jl
inc
sbb
loope
pop
test
loopne
adc
dec
jne
clc
sbb
inc
fdivrs
xor
int3
cmp
dec
jecxz
cld
and
jne
popa
fstpl
mov
adc
mov
jo
dec
roll
jle
lea
jle
iret
xor
jns
loope
sbb
sub
xchg
les
std
dec
pop
xor
adcb
aam
les
cmc
dec
push
jmp
js
aam
scas
dec
sub
dec
das
lret
inc
leave
insb
adc
sbb
mov
scas
mov
pop
dec
xor
leave
mov
dec
mov
and
and
inc
or
adc
sbb
popa
dec
repz
sub
inc
mov
or
pop
or
ret
pop
bound
imul
loope
bound
addl
dec
es
lcall
aad
and
mov
ret
xchg
cmp
xor
shll
adc
xchg
or
add
cs
out
add
js
xchg
das
add
ret
inc
rcl
cmovp
cmp
push
test
mov
xchg
je
das
inc
sbb
aaa
repnz
inc
mov
dec
sub
xor
out
xchg
mov
mov
mov
inc
jp
test
mov
xor
jo
cli
sub
fsubs
test
fldl
sub
push
xlat
dec
inc
stos
mov
cmp
push
adc
inc
xor
jp
or
or
jb
pop
shl
add
and
test
not
into
xchg
cmp
cmpsl
push
int3
dec
stc
daa
sbb
dec
clc
out
lahf
data16
and
and
leave
sbb
aad
loope
sub
movsl
sbb
dec
xor
leave
inc
inc
and
adc
mov
mov
sbb
sub
out
loopne
mov
cmp
popf
xor
cmp
ja
int
mov
inc
cwtl
sbb
jo
decb
push
addr16
fs
and
and
inc
sub
add
lahf
fs
lock
mov
addr16
outsb
mov
mov
fsubl
divb
lea
dec
insl
push
jnp
in
push
cmp
and
je
cmp
sub
jne
jle
mov
cmp
jmp
dec
pushf
ret
daa
mov
mulps
inc
sbb
repz
push
pusha
daa
inc
imul
and
xchg
fwait
sbb
sbb
mov
adc
lahf
daa
mov
in
dec
movsl
mov
dec
xor
out
pop
enter
dec
dec
mov
or
mov
rorl
movl
loopne
lea
das
xchg
fsubr
dec
mov
push
out
dec
mov
lret
mov
and
mov
xor
jle
jne
mov
stos
bound
testl
jl
push
push
mov
and
mov
add
xor
sub
and
xor
outsb
push
sub
push
cmp
adc
mov
push
sub
mov
outsb
inc
add
mov
push
es
ljmp
or
inc
pop
xor
inc
mov
push
in
ss
cltd
inc
xor
pusha
scas
minps
xchg
or
add
pop
adc
and
inc
andl
movsb
push
shlb
sub
mov
gs
imul
sbb
sbb
lea
sbb
inc
loopne
add
data16
push
push
sarl
sub
icebp
insb
lods
ret
sbb
push
out
adc
out
sbb
out
dec
clc
or
sub
movsb
mov
or
mov
repz
pop
sub
xchg
sub
test
mov
ds
aam
mov
sub
mov
xor
loopne
xchg
mov
stc
repnz
lock
xor
or
ret
nop
pusha
cmp
das
pop
inc
jo
adc
push
sbb
fistps
adc
nop
movups
push
das
and
push
lcall
adc
testb
pop
jno
pop
push
inc
imul
test
mov
ret
mov
stos
pop
ret
ret
and
add
or
shr
or
sub
and
add
repz
imul
inc
or
mov
inc
dec
shlb
testb
or
xchg
inc
arpl
add
dec
xchg
int
add
imul
lods
cmc
das
pusha
mov
mov
mov
sbb
xor
adc
inc
dec
add
xor
adc
jge
push
pop
ret
dec
jle
lods
sbb
leave
ja
adc
adc
or
cltd
aas
cmp
std
xchg
sbb
and
and
lea
and
sti
testb
lds
sub
mov
mov
push
dec
sbb
sar
or
jns
jg
xor
jo
subb
or
ds
and
cs
push
iret
mov
push
pop
or
adc
daa
push
inc
add
add
inc
xchg
popa
or
pop
add
or
push
nop
sub
jp
dec
shll
fiadds
add
es
pop
inc
add
cmp
add
jmp
or
enter
loop
rcr
das
push
insl
nop
push
inc
fnstsw
xor
push
inc
test
out
insb
testb
ret
or
loop
dec
loopne
adc
faddl
decb
movsb
adc
sub
mov
js
mov
nop
adc
fcomps
movsb
mov
lcall
es
rorl
xor
push
and
mov
data16
shr
xor
mov
xorl
outsl
cmp
dec
icebp
pushf
testl
adc
adc
ret
dec
jecxz
xchg
roll
mov
cwtl
mov
dec
adc
pop
push
pop
lea
add
or
sub
push
mov
push
clc
fwait
stos
cmp
xor
adc
pop
ret
stos
push
hlt
and
pop
sub
add
sbb
or
movsl
fs
dec
out
mov
cs
mov
mov
scas
pusha
add
std
popf
sti
mov
add
in
xor
cmp
xchg
and
stc
dec
push
jl
and
sub
cwtl
cmp
push
out
push
daa
in
sub
jp
or
mov
sbb
or
inc
adc
adc
adc
pop
gs
mov
sbb
xor
in
inc
adc
dec
or
push
nop
sub
or
dec
cmpl
lods
cmp
scas
cmp
dec
add
int
cmpsb
push
loop
mov
and
xchg
loopne
fs
push
cwtl
addb
mov
mov
xchg
lods
nop
and
adc
cltd
sbb
push
adc
jl
fnsave
adcl
sbb
push
mov
sub
lcall
or
int
stos
and
and
dec
dec
push
sub
xor
push
and
pop
mov
jns
push
fdivs
nop
int3
loopne
ds
pushf
xor
adc
ret
jno
sbb
lea
xchg
hlt
fcmovb
mov
nop
or
insb
clc
push
adc
cmc
imul
cmp
mov
test
sbb
test
add
pushf
pop
jg
into
jecxz
mov
notb
xchg
fildll
pop
clc
dec
repz
adcb
call
push
sub
xor
cwtl
pop
loopne
cwtl
and
dec
sbb
shrb
push
pop
nop
mov
pop
or
sub
and
dec
adc
aam
mov
dec
stc
movsb
or
out
push
and
fidivrl
fstl
mov
pop
or
pop
sbb
adc
push
filds
imul
in
cli
adc
jmp
pop
mov
ljmp
adc
jne
repnz
popa
adc
mov
xor
add
add
add
add
jmp
in
adc
lret
push
lock
mov
or
push
leave
add
xchg
rcl
loope
stc
nop
sub
mov
pop
gs
pop
adc
adc
fwait
push
sbb
lcall
popf
popa
cmp
aad
roll
mov
or
dec
and
adcl
jecxz
xor
sub
loop
pushl
pop
dec
xor
bound
sub
stos
push
data16
mov
sti
arpl
and
out
aaa
in
fiadds
cmp
sub
inc
pop
addr16
daa
inc
dec
dec
cld
sahf
gs
cmp
add
cli
push
mov
inc
loope
or
push
in
lret
sub
jnp
std
fildll
adc
sahf
push
adc
push
lcall
lcall
movsl
test
xchg
divb
jp
mov
sbb
mov
and
xchg
cwtl
leave
mull
or
ret
xchg
popf
leave
test
pop
pop
in
and
dec
push
inc
or
jo
push
test
out
enter
xor
dec
data16
fmuls
js
in
and
inc
punpcklbw
push
xor
sbb
or
inc
pop
jmp
bound
push
jae
inc
movsl
adc
bound
movsb
repnz
inc
sbb
pop
shlb
and
shlb
dec
and
cmp
rcr
and
mov
jae
loope
fst
in
dec
test
sub
cmpsl
sbb
or
cmp
lcall
cmp
xor
roll
mov
and
mov
pusha
push
sbb
sub
notb
xchg
or
sbb
cmc
push
insl
pop
xchg
test
xchg
push
jmp
sub
push
adc
gs
xor
add
sarl
dec
fs
sbb
stc
mov
jnp
sbb
and
adc
sbb
cmp
ret
repz
mov
pop
push
stc
orb
bound
mov
dec
ret
mulb
sbb
movsl
pop
inc
xor
cmp
xchg
mov
cmp
mov
or
lret
data16
mov
scas
cmpsb
pop
sub
leave
push
sahf
pop
xor
lahf
xchg
and
xchg
push
jno
pop
pop
mov
cltd
je
lods
add
push
sub
cld
push
cmp
fbld
push
shrl
sub
dec
rcll
mov
jmp
loope
push
xchg
jbe
xchg
push
stos
jo
pop
sub
call
sub
add
adc
mov
pop
call
adc
pop
jns
shr
mov
adc
dec
add
enter
push
and
push
push
call
gs
pop
add
call
sbb
fsubs
pop
add
repnz
push
test
adc
sbb
movsb
out
pop
dec
and
test
mov
cwtl
pusha
mov
or
leave
rcpps
xor
in
push
cs
jno
iret
fdivrl
pusha
sub
fadd
pop
ljmp
adc
je
adc
std
mov
cmp
rolb
nop
mov
adc
sbb
ja
or
cli
cmpsb
or
les
push
lock
xchg
fiadds
xchg
xsave
subb
loopne
adc
or
push
inc
sub
push
lcall
cld
lods
aas
addl
push
pop
ret
and
add
adc
jmp
or
or
jecxz
sub
add
outsl
add
push
sub
into
jb
mov
xor
mov
decb
push
mov
sahf
inc
pusha
lret
adc
ljmp
shr
arpl
movsl
int
je
ljmp
inc
push
ror
dec
sbb
pushf
add
cmc
test
push
and
sbb
insb
in
loope
xchg
out
and
rcrl
push
push
mov
pop
push
movb
add
cmp
xchg
pop
or
subb
lret
fimuls
adc
push
cwtl
rcrb
mov
inc
loopne
adc
add
adc
add
cli
cmp
and
jb
lahf
loope
add
loop
jae
dec
into
test
add
es
lods
dec
mov
popaw
imul
dec
aas
and
aas
les
inc
push
pop
sbb
add
push
adc
into
sub
or
fldcw
shl
outsl
sbb
jge
repz
push
jne
test
adc
adc
cmp
fiaddl
cs
mov
xor
dec
mov
ror
or
loope
enter
or
pop
push
loop
add
shl
or
ret
cmp
xor
mov
jb
dec
jecxz
mov
and
xor
int
in
and
cmp
cwtl
and
cmpsl
push
dec
fnsave
icebp
mov
mov
outsl
pop
dec
jns
rcrb
stc
mov
push
nop
test
pop
or
inc
stc
adc
mov
push
std
xor
push
jno
andps
sub
sub
jmp
cmp
push
push
and
push
mov
adc
push
add
fsts
jg
fs
stos
imul
or
jo
test
aam
daa
fistps
push
aam
notb
or
mov
mov
cmp
pop
movsb
jp
add
cmp
ja
or
rorl
or
js
dec
push
or
test
xchg
es
pop
or
fcoml
pop
clc
mov
inc
push
add
jmp
cltd
add
repnz
cmp
or
in
adc
rclb
das
xchg
out
gs
rclb
xchg
pusha
push
ljmp
adc
ds
shlb
icebp
xchg
into
pop
xor
fnsave
push
loopne
lcall
stos
xorl
into
mov
or
sub
nop
push
sub
xor
pop
fstpl
pop
test
mov
dec
popf
jns
fadds
pop
test
out
xor
enter
mov
das
xchg
inc
pop
add
jno
xchg
push
push
cmp
ret
push
movb
lret
ret
sbb
les
filds
jmp
mov
add
popf
repnz
stc
sbb
mov
xchg
and
shld
push
lcall
js
popf
test
mov
dec
sbb
aas
or
imul
xchg
cmp
insl
test
lcall
sar
xor
sub
dec
mov
mov
push
mov
mov
jne
rolb
inc
jp
xor
add
pusha
mov
or
scas
mov
cli
pusha
ds
push
data16
jge
cli
sbb
fs
push
pop
add
adc
adc
pop
sub
inc
cmp
jne
test
push
cltd
pop
cs
cltd
and
xor
mov
mov
adc
adc
movsl
jno
in
jmp
jg
mov
cltd
cmp
jmp
movsb
mov
mov
adc
insl
call
sbbb
add
rolb
hlt
sbb
pop
out
nop
dec
or
inc
cmp
ja
outsb
or
ja
sti
movsl
into
push
call
es
hlt
insl
mov
pop
idiv
lea
iret
shrl
ja
mov
add
inc
adc
out
sbb
cmp
add
sub
xchg
jns
fildl
or
jge
fchs
push
mov
mov
sbb
sbb
adc
add
ret
dec
lock
pop
fcompl
sub
and
cmp
stos
or
dec
jns
push
jbe
fldl
push
adc
aad
addl
shr
adc
inc
push
orb
adc
test
jnp
xor
adc
fsubrl
pop
movb
loop
adc
inc
jnp
ljmp
mov
cltd
pop
and
fisttps
add
push
dec
sbb
fs
xchg
jo
lcall
inc
xor
adc
dec
js
lock
mov
add
push
and
adc
pop
aam
adc
and
pop
cltd
repnz
push
push
fdivs
decl
lea
repnz
and
dec
push
add
xorb
addl
ficompl
pusha
xorl
jne
cmp
push
clc
je
addr16
cmp
adc
sbb
pop
enter
fisubs
dec
ret
mov
cmp
in
mov
or
inc
int3
es
add
xor
test
mov
or
mov
push
jmp
or
in
mov
jae
daa
jne
movsb
cmpsl
add
or
and
out
mov
or
lock
sbb
inc
sub
sahf
or
push
ficoms
or
cld
mov
inc
cmp
sub
add
xchg
sbb
fcmovu
adc
iret
mov
xchg
add
data16
dec
scas
mov
add
adc
adc
fisubl
xor
loope
lret
sub
or
xor
les
lea
mov
out
or
cmp
jge
xor
add
push
dec
dec
cli
push
hlt
inc
inc
push
lock
addb
xchg
cmc
scas
aas
out
dec
adc
jo
sbb
sub
fs
adc
push
and
loopne
or
faddl
pop
dec
mov
fstps
loope
lea
lods
lds
test
fadds
mov
fdivrp
dec
push
dec
push
scas
popf
sbb
pushf
int
inc
enter
lcall
lock
ret
sti
xchg
or
in
in
sub
mov
aas
nop
xor
mov
cmp
pusha
pop
jae
xchg
cmp
call
push
pop
mov
xchg
push
push
push
or
add
mov
inc
jge
jg
pop
add
or
lods
add
pop
pop
or
testl
add
clc
inc
movsb
adc
push
es
fnstcw
enter
pop
inc
ror
jne
sbb
sbb
adc
adc
or
iret
aam
cmpsl
mov
sbb
push
and
andl
or
popf
pop
adc
movl
rcl
call
adc
push
or
mov
dec
test
or
push
sbb
jo
mov
adc
lods
leave
inc
add
fs
subb
inc
andb
add
jno
lea
outsl
and
jae
and
sahf
add
sbb
and
sahf
jb
and
cltd
sbb
and
and
dec
pop
shll
dec
loope
repz
jns
dec
inc
jge
stos
push
test
dec
jmp
fdivl
cmp
push
pop
in
inc
jnp
add
es
inc
enter
fstpt
sbb
push
out
je
inc
enter
setne
jmp
insb
push
inc
adc
sti
je
in
xor
cs
adc
or
ret
mov
pop
push
inc
dec
push
add
push
ljmp
sbb
or
or
sub
in
sbb
or
xchg
and
mov
sub
stc
or
call
aam
loop
cmpl
inc
push
jne
stos
cmc
pushf
add
shll
mov
mov
jle
sbb
jge
cli
jle
cmp
pusha
inc
jmp
mov
adc
or
pop
xchg
push
jb
adc
aas
testb
mov
sub
mov
aad
aam
adc
and
adc
lret
int3
and
fstl
adc
dec
inc
imul
idivb
push
fidivs
mov
push
lock
xor
push
mov
daa
push
or
stos
mov
inc
xchg
fmull
jne
movsl
add
outsb
dec
xchg
popa
adc
jb
add
push
jne
xchg
push
xchg
dec
push
test
movsb
jne
xor
mov
ds
push
fcompl
jmp
sbb
lret
and
mov
mov
push
fwait
sub
jo
enter
add
dec
dec
xor
movsl
push
mov
sbb
add
dec
lock
in
inc
sbb
je
rorl
dec
out
lret
bound
std
jns
adcb
popa
mov
clc
sbb
testb
push
push
ja
xchg
je
js
pop
xchg
daa
push
and
mov
fiaddl
lods
ret
les
pop
in
out
sbb
add
leave
adc
pop
mov
inc
or
adc
inc
sbb
pop
inc
push
lea
jmp
or
jge
push
inc
add
xchg
lods
or
mov
or
sub
ss
stos
psllw
lea
dec
mov
jne
addr16
mov
jbe
pop
adc
inc
push
xchg
dec
inc
rorl
scas
push
and
nop
in
push
inc
pop
adc
sub
fidivrl
into
outsb
push
popl
ficompl
mov
and
pusha
adc
enter
xchg
sub
dec
adc
lret
loope
sbb
jecxz
jle
mov
insb
fs
mov
mov
adc
or
cmp
inc
cld
and
call
adc
dec
and
jmp
jecxz
sbb
fisttpll
subb
lock
jbe
in
inc
scas
negl
pop
loop
test
call
ss
adc
xchg
out
mov
mov
sbb
lret
call
in
adc
sub
jl
jl
outsl
ret
pop
popf
xchg
push
mov
fidivl
xchg
idivb
inc
pushf
sti
mov
mov
mov
adc
aas
jg
sub
jne
popa
mov
ds
rolb
push
sub
inc
aam
add
pop
pop
xor
push
insb
das
push
or
lcall
out
inc
or
cwtl
ljmp
and
cwtl
popa
xor
cmpl
add
mov
out
sbb
xor
cmp
pop
dec
xchg
adc
pop
ret
stos
pop
lret
dec
lds
loop
mov
repz
mov
bound
sbb
push
and
and
dec
sub
sub
mov
ret
int3
add
mov
xor
sbb
jb
mov
inc
in
int3
add
lea
push
add
fnstcw
add
add
fists
lods
xor
lock
push
stc
or
jecxz
sbb
hlt
aaa
push
cld
outsl
inc
test
ret
push
leave
and
jmp
fstps
lret
and
mov
ret
or
sub
jmp
and
push
imul
mov
int
call
jmp
faddp
scas
mov
push
sbb
and
or
push
push
leave
out
rorl
adc
inc
inc
push
repz
or
and
test
cmp
or
pop
mov
and
mov
push
mov
sbbl
pop
popa
iret
in
add
je
push
cmpsl
push
jmp
or
jno
test
fmul
sub
sbb
call
and
rcrb
pop
imull
pop
das
inc
je
fldt
test
dec
sbb
neg
jae
out
and
shl
lret
decb
push
int3
adc
adc
sbb
mov
jo
mov
in
mov
xchg
scas
nop
inc
popf
sub
cld
fdivrs
push
jne
fmull
inc
push
cmp
aam
add
sbb
outsb
into
icebp
arpl
mov
insl
bound
pop
push
mov
push
out
xor
or
dec
jmp
aad
dec
cmp
push
fldl
mov
jl
pop
ljmp
mov
xchg
add
aaa
push
dec
and
dec
xlat
and
pop
ret
lea
or
push
mov
sub
rorl
jmp
ret
add
push
pop
outsb
ss
je
js
adc
pop
push
or
inc
mov
in
dec
or
das
jmp
cltd
dec
or
les
fidivl
mov
sub
das
push
and
mov
adc
or
push
dec
mov
jnp
pop
clc
loopne
in
push
push
xor
flds
scas
cs
int
movsb
flds
pop
adc
mov
and
repz
mov
sarl
into
pushf
dec
sub
fldl
leave
xchg
fwait
dec
xchg
push
nop
lock
ficompl
lahf
push
adc
xchg
pop
adc
call
enter
and
sbb
and
jo
xchg
xor
jmp
pop
ficompl
cwtl
and
push
sub
push
pop
push
xor
xor
and
or
sbb
aas
or
call
dec
rcll
imul
push
or
ficomps
aas
mov
hlt
or
sbb
clc
neg
sbb
mov
ss
fs
divl
std
mov
shlb
shll
push
insl
mov
iret
inc
push
pop
jb
cmp
imul
ret
popl
jmp
cs
cmc
mov
ret
mov
rol
divb
imul
push
andl
xor
pop
mov
pop
stos
xor
mov
cmc
mov
jne
sbb
inc
ss
or
add
call
xchg
scas
or
adc
add
leave
std
inc
add
xorl
call
ret
push
push
or
pop
push
adc
and
lock
and
pop
xchg
xor
and
xor
push
je
mov
out
cmp
or
pop
call
push
push
push
bound
je
ja
xor
out
pop
sub
aam
aaa
inc
repz
push
sti
loopne
pop
cmp
pop
jbe
add
cmpb
jne
push
gs
sub
push
ja
dec
sbb
sarl
lea
add
adc
adc
adc
xchg
je
fs
sbb
mov
sbb
arpl
cltd
add
mov
add
rcrb
sub
aad
dec
add
lods
inc
ljmp
mov
aam
xchg
inc
bound
sbb
inc
mov
dec
mov
aad
lods
mov
mov
ss
add
push
rcrl
and
adc
addr16
int
ljmp
cmpsl
lret
inc
inc
xor
lock
cli
inc
cld
dec
fcmove
lcall
out
mov
push
test
sbb
rcrl
push
test
out
movsb
rcl
adc
lret
mov
fcom
pop
or
aad
inc
ljmp
or
add
or
and
push
hlt
enter
cld
pop
lock
mov
clc
sahf
mov
inc
and
add
mov
adc
and
xor
stos
cmp
clc
push
int3
push
mov
and
mov
sub
outsl
or
sub
int3
mov
aad
xchg
or
push
or
and
or
or
adc
nop
adc
add
imul
sub
or
imul
fstps
aas
xor
push
push
dec
sbb
inc
pop
lcall
or
cmp
sub
inc
jle
dec
lea
sbb
push
pop
push
add
push
es
cmpsb
dec
imul
ss
lds
pop
inc
mov
or
inc
or
jle
daa
rcr
mov
mov
xlat
test
xlat
sub
into
rcl
cli
push
movsb
shll
rorl
scas
cltd
xor
negl
cmc
lret
int3
mov
mov
daa
push
or
push
pushl
aam
or
stos
push
je
cmp
testb
es
or
jmp
cmpl
and
shrl
repz
inc
outsl
call
jmp
fs
push
cmpsb
imul
jns
mov
push
sti
push
outsb
cmp
or
and
hlt
shll
or
and
xor
inc
loopne
imul
pop
out
fidivs
cmp
add
les
into
jno
lock
bswap
adc
ret
add
popa
add
adc
inc
jmp
rcrb
adcl
push
push
push
in
pop
inc
fldl
add
adc
test
popf
lea
push
and
adc
clc
push
inc
inc
popf
sub
movsb
push
add
xorb
add
adc
fistpl
xor
lret
inc
inc
or
dec
xchg
or
pop
inc
shlb
push
jmp
cmp
add
fsubr
and
insb
sub
enter
loop
pop
xchg
push
ss
in
lods
fwait
mov
lea
lock
push
add
bnd
sbb
enter
cld
out
dec
mov
nop
clc
rol
mov
aad
shlb
add
push
inc
aad
imul
sub
xor
divb
pushf
arpl
jno
xchg
or
or
sub
mul
mov
push
fisttps
fcomps
jle
popa
and
dec
or
lock
lea
aam
andb
sbbl
inc
insl
mov
mov
repnz
mov
xor
pop
push
mov
roll
insb
or
and
outsb
add
je
mov
test
jo
es
xchg
rolb
icebp
and
mov
and
sub
inc
daa
add
mov
pop
and
das
sarb
inc
in
incb
pop
stos
cmpsl
hlt
shrl
and
scas
xor
sub
sbb
mov
mov
cli
lds
and
mov
bound
push
sbb
jns
lret
addb
inc
or
adc
orb
int
je
cmp
push
jmp
push
and
mov
outsl
lds
push
push
mov
in
cwtl
jb
outsl
ljmp
cld
jmp
stos
dec
fwait
test
xor
inc
std
jle
stos
clc
fnstsw
or
sub
jae
jae
xor
inc
mov
test
inc
hlt
and
andl
cmpb
inc
imul
popa
or
jne
adc
lds
or
mov
adc
xor
jmp
inc
xchg
push
cmp
test
xor
outsb
roll
pop
jmp
inc
adc
pusha
and
ret
sbb
notl
adc
leave
xorl
clc
or
sarb
sub
or
pop
roll
ret
cmp
mov
jno
pop
cld
xor
jle
jp
adc
or
mov
xchg
shr
inc
sbb
adc
jmp
fldenv
fistl
cmpsl
aad
fs
add
jb
cmp
js
js
ret
pop
jbe
dec
or
and
cmp
push
push
divb
scas
clc
push
or
and
call
sbb
mov
lret
nop
nop
scas
fidivs
jge
pusha
ret
jns
jmp
push
mov
cmp
lds
mov
mov
xchg
mov
mov
mov
lock
mov
pushf
mov
mov
dec
adc
shl
add
inc
rorl
clc
cmp
cmpb
ficomps
orl
fbstp
stc
int3
add
rep
jmp
or
mov
push
jb
dec
loopne
sbb
push
push
xor
adc
sub
adc
and
mov
cmp
mov
scas
fsts
mov
add
movsb
pop
int3
sub
push
dec
sub
es
mov
popa
adc
inc
xchg
inc
inc
sbb
mov
mov
movsb
dec
pushf
xchg
xchg
and
pop
mov
inc
lea
jmp
and
jmp
and
jmp
lea
lret
sbb
push
icebp
xor
or
cs
jge
sub
cli
enter
stos
push
push
mov
xor
cmp
or
jo
std
mov
pusha
mov
data16
lcall
sub
push
es
fs
or
pop
faddl
and
mov
dec
test
cmp
movsb
out
push
dec
out
jle
mov
pop
nop
dec
sub
lods
jno
inc
lods
out
xchg
scas
inc
inc
pop
jne
sbb
nopl
or
sub
mov
call
sbb
cmpsb
adc
shlb
pop
and
shlb
pop
and
shlb
pop
and
repnz
jo
or
pushf
sub
mov
adc
mov
lcall
or
inc
or
jae
add
mov
testb
les
sbb
je
jnp
sar
or
add
sub
xlat
ret
test
and
inc
add
call
push
sbb
sbb
and
cli
jbe
les
jne
add
mov
inc
test
ja
jg
in
fucomi
les
andb
dec
loope
push
lret
mov
lock
cmp
test
jb
mov
ret
cli
rolb
or
mov
shrl
ljmp
movsl
call
dec
aad
sbb
movl
mov
pop
test
test
outsl
cmp
decb
iret
sub
push
sbb
jmp
push
cmp
add
or
inc
add
jae
xor
mov
xlat
shrb
push
stc
cmp
inc
ljmp
xlat
dec
aas
ficompl
push
push
jo
out
xchg
push
cmpsb
mov
mov
pop
pop
mov
sub
sub
mov
add
jmp
bnd
add
sbb
jge
test
or
in
sbb
loope
sbb
and
pop
cmp
lods
psubq
cmp
fimull
push
xlat
add
jp
aad
pop
or
add
stc
jbe
es
mov
cli
inc
mov
sbb
xchg
pop
sbbb
cmpl
je
and
cmp
push
and
fdivrs
je
adc
inc
dec
mov
cmp
cmp
pop
cli
mov
arpl
adc
pop
call
mov
jnp
lock
xor
xchg
push
mov
add
shlb
push
test
or
xor
jne
mov
cli
mov
push
cs
add
push
push
mov
or
pop
inc
pusha
jne
push
mov
test
movsb
imul
or
bswap
sbb
pop
in
or
nop
adc
call
push
out
jnp
icebp
dec
lds
push
roll
ss
jno
push
inc
push
jge
push
jmp
gs
xchg
daa
ret
cmpsb
loop
sbb
scas
out
loopne
sbb
ja
mov
jge
fcompl
xor
fmuls
nop
or
faddl
sbb
xchg
ds
pop
push
dec
in
and
ja
dec
loop
lock
jns
dec
or
ss
test
jl
loopne
and
push
es
out
cmp
je
inc
adc
jnp
fidivs
dec
daa
inc
and
inc
and
cmp
xor
xchg
sarl
mov
sub
inc
insb
inc
lret
cs
push
inc
insl
jmp
test
fbstp
jo
lret
out
js
adc
pop
mov
push
mov
ja
push
and
push
inc
jb
add
adc
ja
mov
adc
jne
push
jmp
pop
xchg
imul
jne
das
sbb
and
lock
cmp
sub
xchg
sub
adc
adc
mov
dec
mov
mov
out
add
movsb
xor
es
mov
sbbb
add
sbb
add
push
shlb
rolb
pop
lods
sub
adc
lea
rcll
ljmp
add
mov
shlb
add
jmp
xchg
popf
xor
sahf
pop
or
ret
cmp
rcrl
popa
cmp
or
sbb
jmp
imul
and
pop
cmp
sub
add
movsl
push
lea
dec
push
mov
or
adc
or
nop
xchg
sub
pop
and
mov
jmp
push
inc
xor
pop
or
and
ja
xor
pop
sub
aad
add
cmp
cmp
xlat
dec
adc
sub
inc
sub
adc
add
mov
jmp
pop
adc
or
add
mov
pop
mov
jmp
dec
ret
push
nop
jmp
push
push
pop
dec
jne
or
in
and
adc
dec
ret
mov
dec
adc
aaa
popa
jl
push
jp
push
call
pop
mov
jle
xchg
push
pusha
js
mov
mov
xlat
push
dec
push
xchg
xlat
mov
pop
mov
test
out
das
mov
test
adc
jno
cmpl
add
inc
add
mov
fwait
push
adc
jmp
or
jge
pop
icebp
pop
add
lcall
inc
mov
jmp
imul
test
rorb
adc
inc
dec
sub
subb
mov
pop
or
fstpl
shll
push
jp
add
popf
or
push
in
jg
dec
popa
and
add
frstor
jmp
int
std
or
or
mov
adc
mov
jg
divl
adc
pop
inc
cmp
cli
adc
aam
or
or
push
xchg
adc
lock
lea
mov
and
mov
leave
inc
add
or
fucomip
insb
mov
imul
mov
mov
or
out
test
jp
and
inc
or
jp
arpl
add
xor
push
je
or
adc
adc
mov
rorb
test
cmc
sarl
out
ficompl
push
inc
fbld
jae
int
push
and
js
add
lea
push
stos
movsb
push
adc
fs
inc
mov
inc
icebp
jge
es
adcb
or
ja
push
roll
jne
or
push
xchg
stos
sbb
adc
rorl
cmp
lahf
scas
inc
lret
insb
addb
icebp
jmp
inc
iret
cld
lahf
loopne
and
sbb
loop
sub
pop
cli
popa
sbb
add
pop
pop
pop
pop
and
inc
cld
cmp
and
cmp
daa
push
sub
es
fsubl
push
and
jmp
mov
jo
pop
std
cld
and
or
neg
dec
mov
and
rcll
pop
je
test
test
cld
mov
dec
hlt
cmp
push
rcrb
cmpsb
aas
and
mov
or
push
xor
push
push
clc
testb
loope
inc
sub
adc
cli
fs
pop
movl
cmp
add
outsb
icebp
inc
in
lds
sbb
out
push
or
lcall
shrb
inc
sub
shr
mov
lret
daa
clc
push
call
push
mov
lea
mov
rep
xor
dec
mov
jns
adc
iret
add
add
jecxz
inc
push
add
mov
xchg
sti
mov
or
jl
push
push
lock
into
pop
push
roll
jecxz
out
add
test
dec
sbb
jmp
mov
inc
xchg
pop
push
and
push
dec
pop
sub
loopne
cmp
jne
cmp
mov
out
ret
and
popa
aaa
jnp
nop
cs
dec
sub
pop
dec
push
xor
adc
dec
movsb
fdivl
out
mov
adc
lahf
sti
pop
cmp
add
pop
adc
add
pop
pop
add
pop
or
adc
notb
leave
sub
jmp
push
imul
dec
xchg
je
sbb
pop
and
jmp
sbb
xor
adc
or
add
enter
sbb
adc
pop
leave
or
push
jb
fsubs
mov
and
inc
cmp
andl
xor
dec
push
add
out
jge
fs
sbb
sub
rorb
cs
and
or
dec
mov
inc
ret
adc
and
and
pop
mov
mov
jp
in
stc
push
jbe
add
movsl
inc
ds
xlat
cld
mov
mov
sbb
leave
aam
cmpsb
sbb
int3
scas
daa
movb
sbb
xor
adc
clc
or
cmp
shll
rol
mov
sahf
fnstenv
push
adc
pusha
jmp
pop
shlb
add
rcl
cmp
addr16
fs
dec
and
out
dec
xchg
repz
mov
or
add
lea
mov
jg
into
sub
xchg
xchg
and
call
popa
lahf
clc
and
or
adc
cmp
or
xchg
and
enter
enter
cltd
fisttps
int3
xchg
or
and
adc
call
or
or
and
lret
negl
les
adc
loopne
jnp
push
or
push
or
push
sbb
or
dec
dec
xchg
push
and
ja
pop
and
and
nop
or
dec
mov
mov
cmp
inc
add
jnp
addr16
vpshaq
sub
rcl
dec
and
call
ret
xchg
and
data16
push
lea
sub
movsl
adc
and
jbe
push
insl
dec
xor
push
ret
mov
je
and
push
sbb
xchg
cs
das
mov
or
sbb
out
and
sahf
inc
sbb
mov
mov
sub
fs
fistpll
sbb
jo
or
pop
subl
daa
and
xchg
xor
pop
xor
shlb
sub
jo
es
adc
sub
pop
jno
jne
mov
fcompl
pop
adc
es
sti
or
ja
and
xchg
xchg
jp
or
icebp
mov
inc
lock
jmp
ret
subb
mov
rolb
push
pop
in
bound
inc
sub
scas
lock
or
andb
leave
ret
pop
add
jae
mov
and
aam
xor
pop
decl
inc
inc
sahf
cmc
mov
rorl
xchg
inc
jne
test
out
jne
rcr
pusha
sbb
fs
pop
xor
movsl
and
test
movups
pop
int
xor
dec
xor
adc
push
inc
std
enter
jb
jmp
push
hlt
dec
in
loop
insb
aaa
mov
test
movsl
push
add
stc
pop
xchg
test
mov
push
cmpsl
dec
mov
mov
mov
dec
or
call
inc
or
enter
mov
push
repz
gs
or
cmp
push
js
dec
push
cwtl
test
adc
iret
notb
jne
xor
loopne
call
sub
pop
dec
sbb
xor
xorl
xlat
lcall
sbb
mov
add
pcmpeqw
inc
dec
xor
mov
shrl
push
cmp
cmp
mov
lcall
repz
pop
daa
xchg
dec
push
dec
push
jns
adc
cmc
and
ljmp
test
lret
fsubrs
std
les
cmp
jne
enter
out
fs
adc
push
mov
push
cmp
push
dec
mov
push
outsl
mov
mov
dec
push
sub
and
push
in
dec
loopne
popf
in
mov
popf
push
push
sysexit
sbb
addr16
adc
push
mov
cmp
rcll
and
inc
pop
ss
push
adc
sub
adc
call
mov
inc
cmpsl
ret
pop
cwtl
mov
loopne
sub
sub
cltd
jbe
push
sbb
push
push
mov
push
jp
loop
mov
stc
and
pop
mov
popl
xor
sub
and
xor
pop
or
mov
xor
mov
push
mov
or
lock
cmp
clc
xor
ljmp
sbb
call
adc
and
and
and
dec
rolb
loopne
rolb
por
test
mov
cmp
mov
dec
into
lret
dec
aam
mov
sub
call
push
test
subb
xchg
add
pop
mov
lock
push
cld
add
and
adc
nop
mov
je
dec
xchg
jp
jo
mov
xor
scas
dec
jge
or
mov
pop
adc
or
test
pop
cmp
jle
jno
or
int3
jge
aas
sub
jmp
push
js
nop
or
popa
cmpsb
test
pop
sub
push
or
xchg
imul
mov
pusha
adcl
inc
and
sub
stos
das
push
dec
adc
sbb
dec
in
jae
into
aaa
inc
insl
dec
sub
cmp
pop
cltd
mov
mov
mov
sub
cmpsl
movb
cltd
sub
inc
insb
add
adc
aas
push
cmpb
ret
adc
test
push
stc
pop
inc
stc
or
jge
test
and
xor
stc
out
adc
sub
inc
shrl
inc
out
or
inc
or
xchg
sbb
add
jge
stc
and
and
adc
decl
ljmp
mov
loope
add
divb
andb
sub
cmp
jne
shl
call
add
out
scas
and
cmp
movsb
or
adc
dec
popf
fwait
cmp
pop
adc
loopne
xchg
cld
jno
mov
mov
push
or
inc
fdivrs
movl
les
mov
pop
jmp
mov
and
cmp
adc
je
sub
jnp
das
jb
popa
sub
xchg
cs
cltd
ss
cmpsb
inc
pushf
mov
cmpl
cli
jne
mov
loopne
or
add
faddl
iret
ds
test
out
repz
push
insl
push
adc
xchg
jmp
fdivs
and
test
push
push
loop
mov
adc
adc
jmp
inc
sbb
mov
ss
ret
fwait
add
sub
fldl
xchg
int3
ds
aad
aas
sbb
fdivs
repnz
mov
fwait
dec
or
mov
mov
loopne
aam
mov
pusha
repz
clc
pop
rolb
dec
stc
aam
jae
mov
shr
add
jne
aam
enter
mov
cs
inc
popa
cltd
jbe
sub
shl
lret
int3
cmp
pop
xchg
lahf
andb
repnz
dec
outsb
sbb
lods
xor
adc
xchg
cmp
test
xchg
inc
ljmp
jne
cwtl
push
je
pop
push
adc
enter
dec
xor
sbb
inc
lock
dec
sbb
mov
mov
mov
inc
sbb
jne
je
movsb
bnd
add
cmp
xor
push
jbe
leave
lock
test
lods
mov
outsl
jae
mov
stc
pop
mov
or
in
add
mov
imul
cli
movsb
mov
adc
fsubr
popf
out
push
adc
or
mov
insb
lahf
adc
and
jne
cmp
mov
shll
inc
adc
sbb
inc
dec
mov
push
lea
cld
cmp
popf
addl
and
pop
push
rclb
inc
lret
icebp
fadds
rclb
xor
pop
call
js
jnp
ficoms
sbb
scas
cmp
test
jae
or
lods
test
cwtl
push
sbb
les
add
lods
in
adc
call
xchg
mov
inc
sbb
push
xor
sub
lret
adc
lret
add
sub
out
loopne
jmp
pop
sub
jnp
fldcw
aaa
mov
push
negb
cmp
jns
fmull
adcl
pop
mov
and
push
xor
ja
roll
add
call
dec
lea
sub
xlat
in
pop
aas
into
andb
adc
test
xor
out
sub
fwait
mov
jp
push
enter
cmp
mov
loop
orl
sub
nop
add
outsb
cmp
insb
push
and
fstpl
dec
cmpsb
adc
dec
pop
daa
repnz
sbb
push
push
and
add
scas
pop
dec
cmp
lock
sub
jns
dec
xchg
cmp
xchg
lods
adc
push
movsb
cmp
ja
out
popf
lock
repnz
lods
cmp
sub
lock
add
inc
jmp
cmp
mov
aas
adc
xor
xor
inc
js
rorb
mov
leave
test
mov
cmp
testl
push
dec
or
xor
je
pop
test
xchg
rorb
pop
jne
push
adc
add
popl
inc
pop
add
fs
xor
mov
add
call
push
or
movsbl
jmp
sbb
push
push
or
jae
mov
and
dec
ret
add
mov
inc
lock
jmp
jae
or
out
cmpsb
sarb
hlt
jb
test
lret
add
mov
dec
lahf
popa
dec
decl
imul
adc
lret
lds
ret
and
inc
addl
mov
sbb
pop
mov
jge
xor
xorb
jge
sub
cwtl
jbe
call
mov
add
xor
adc
jmp
mov
and
mul
mov
push
shrb
repz
mull
clc
xor
or
jne
addl
or
mov
cmpb
xchg
je
mov
fcomps
cmp
adc
push
and
sbb
test
gs
stc
xor
je
std
xorl
mov
adc
adc
call
into
cmc
or
ret
adc
pop
aad
add
jmp
aad
fsubs
out
inc
inc
adc
outsl
lods
rorl
and
mov
ss
push
stc
adc
mov
jmp
adc
mov
add
jge
add
or
adc
xchg
or
pop
add
push
mov
inc
add
insl
aas
cmp
ret
dec
and
out
xchg
das
shlb
push
out
leave
call
cmp
jmp
sub
sub
pop
cmp
sbb
adc
and
sbb
setne
jns
xchg
js
mov
mov
cmc
gs
and
xor
ret
arpl
add
cmp
dec
std
sbb
or
xchg
stos
mov
adc
pop
dec
xchg
or
xchg
js
aas
push
jmp
pop
pop
adc
ds
mov
popa
pop
jg
jg
pushf
je
and
filds
js
sarb
mov
push
or
or
sbb
stos
lret
mov
movsl
inc
or
cmp
call
imulb
in
jecxz
imul
push
call
mov
mov
add
out
mov
scas
shlb
imul
clc
add
int
test
mov
add
push
sbb
mov
adc
mov
or
add
sbb
mov
adc
xchg
aaa
test
add
cmpb
push
add
add
jne
mov
sub
cmp
das
jge
je
mov
mulb
dec
rclb
pop
sub
inc
cwtl
or
ret
sub
adc
xor
push
cwtl
pusha
or
scas
leave
jns
and
adc
or
popa
and
nop
sahf
mov
bnd
or
xchg
enter
pop
cmp
pop
loop
sbbl
sub
push
adc
sahf
cmp
jno
shl
inc
cmp
sub
mov
pop
adc
test
pop
je
or
mov
dec
call
mov
jbe
jge
adc
mov
cmp
jne
daa
in
mov
inc
decl
out
xchg
in
xchg
add
jmp
out
pop
or
push
movsl
mov
sahf
lock
mov
sbb
nop
mov
cli
cmp
ja
mov
mov
nop
dec
sbb
jbe
jno
lahf
jmp
push
gs
jbe,pn
add
shl
add
bound
nop
movsl
call
mov
jns
rcrb
rorb
push
push
andl
incl
lods
mov
mov
dec
adc
sub
mov
sbb
and
stos
add
scas
cmpl
psubsb
or
mov
les
int
xor
int
cltd
repnz
add
ds
dec
pushf
or
movsl
adc
mov
sbb
add
and
or
inc
cwtl
ret
mov
adc
adc
and
mov
mov
xchg
rcrl
out
rcrb
add
adc
daa
xchg
push
push
jl
push
test
movsl
and
mov
sub
add
flds
rolb
aaa
push
push
lea
nop
mov
cmp
ja
sub
push
mov
and
mov
out
stos
dec
sub
mov
jne
rcrb
push
nop
mov
dec
fwait
dec
inc
push
push
lahf
mov
and
std
nop
push
sub
mov
sub
nop
cld
mov
sub
les
mov
decb
jl
mov
adc
cli
nop
inc
loopne
popa
sbb
add
and
mov
test
add
xchg
inc
out
or
inc
dec
cmp
sahf
shll
push
dec
pop
ret
xor
adc
or
push
dec
int3
cmp
ljmp
mov
in
and
push
std
call
std
in
inc
test
mov
call
pushl
add
add
mov
adc
jmp
stc
sbb
and
xor
jmp
loope
loop
adc
push
mov
mov
pop
rcrl
mov
popa
call
or
roll
jmp
xchg
mov
ja
lds
cmp
inc
add
fistpll
sarl
sub
dec
mov
jp
test
nop
mov
orl
inc
test
ds
subb
lea
orb
cmp
push
and
mov
stos
rorl
jmp
dec
jmp
ret
inc
push
sub
adc
or
test
std
test
or
cmpl
push
repz
lea
dec
push
mov
jae
add
xor
sbb
and
mov
or
jne
and
xchg
movl
stc
mov
add
inc
imul
aam
jmp
dec
ja
mov
cltd
ds
or
and
pushl
ss
push
fs
jmp
mov
push
push
and
jge
xor
push
cmp
push
je
cmp
test
inc
xor
incb
clc
jmp
flds
loop
arpl
fcmovu
pop
pop
lock
stos
pop
sbb
mov
rclb
inc
add
pop
je
push
push
xor
pop
jne
mov
inc
andb
and
movsl
adc
ret
or
push
das
nop
mov
and
jge
xor
std
jo
leave
pop
push
incl
inc
mov
or
push
and
and
cltd
cld
sbb
mov
add
push
sub
sub
adc
cmp
and
clc
jno
into
clc
mov
sub
call
clc
clc
incl
mov
inc
xlat
adc
sbb
xchg
mov
dec
xchg
mov
cs
ss
adc
xchg
mov
lahf
inc
popf
mov
mov
outsl
lock
andl
jne
fcoms
cmp
pop
out
dec
mov
cs
bound
cmpb
pushf
inc
jg
xchg
inc
repnz
nop
mov
pop
jbe
iret
orb
rorb
dec
push
hlt
sbb
inc
or
xchg
jmp
or
repnz
jmp
inc
adc
inc
mov
repnz
sbb
and
or
enter
adc
dec
adc
mov
sahf
pop
jmp
into
mov
sub
lret
sbb
mov
repz
inc
fisubl
nop
sub
jne
inc
adc
jmp
xchg
subl
and
dec
jge
prefetch
adc
xchg
and
dec
rcrb
pop
sbb
xchg
ret
rcrl
incb
je
inc
nop
mov
push
sub
lahf
bound
or
cmpl
cmp
push
sbb
push
xchg
and
sbb
inc
add
sub
fists
xor
bswap
add
andl
cli
push
xor
adc
add
mov
mov
dec
inc
dec
inc
ror
not
imul
dec
dec
jl
push
jg
jmp
mov
ljmp
sub
and
or
inc
mov
cmp
popa
je
in
inc
mov
adc
jne
pop
xor
mov
movsb
xchg
ljmp
push
pop
imul
and
xlat
shlb
jmp
je
xor
jb
leave
aam
cwtl
and
push
push
mov
jne
in
dec
push
mov
pop
aam
mov
jle
into
lock
inc
lahf
push
cs
mov
xchg
popa
or
aad
jge
clc
in
pop
add
and
or
aas
and
fidivs
mov
xlat
test
pushf
insl
sbb
dec
adc
je
call
xchg
or
xchg
sub
sbb
addb
sub
lock
push
jo
orb
pop
mov
or
sub
shll
subb
repz
faddl
xchg
rolb
and
dec
cmp
jg
push
movsb
scas
push
loopne
rorl
jge
mov
and
mov
test
or
jae
loope
adc
push
icebp
and
mov
test
and
shll
loopne
xchg
dec
jl
mov
out
or
and
or
negb
cmp
jb
mov
and
add
cs
daa
into
lock
dec
stc
mov
adc
pop
scas
addb
dec
mov
in
mov
add
cwtl
popa
sub
cmpl
dec
test
leave
push
negb
xchg
adc
dec
scas
cmc
mov
mov
pop
push
push
jno
lods
sbb
mov
inc
in
push
orb
pcmpeqb
cltd
or
or
testb
add
inc
mov
dec
pop
cmp
mov
inc
loop
jmp
pop
push
cmp
jne
inc
sbb
icebp
aad
sbb
sbb
rolb
pop
fwait
cmp
push
pop
push
sbb
push
in
xchg
push
adc
sub
stos
test
mov
and
push
sub
test
test
dec
jmp
pop
sbb
mov
push
inc
es
dec
pop
add
mov
test
jo
add
mov
inc
sbb
add
inc
mov
push
inc
iret
lea
stos
or
daa
adc
or
cmpl
adc
jb
jp
je
adcl
aam
or
nop
adc
push
in
loopne
and
cmpsl
push
xchg
mov
and
cmp
pop
add
jl
inc
jp
add
and
and
push
jle
mov
fistpl
rorw
or
inc
jmp
sbb
fs
add
mov
xor
sbb
mov
or
push
inc
dec
out
aad
cli
xorl
inc
gs
stc
xor
enter
push
cmpb
add
mov
jmp
cmp
push
mov
lcall
dec
mov
aam
clc
call
jge
push
pop
and
repz
push
sti
xchg
fcompl
push
sub
je
repz
outsl
gs
hlt
mov
or
ja
decb
ret
jne
sbb
das
repnz
sub
jbe
push
inc
xor
dec
jge
data16
push
pop
aas
and
inc
jne
dec
lods
add
inc
inc
jae
jnp
mov
fdiv
jl
into
jp
inc
push
push
add
call
pop
pop
test
sahf
xor
xchg
dec
push
or
out
inc
add
bound
xor
adc
mov
jns
aaa
call
pushf
lods
or
jns
bound
jmp
pop
cltd
dec
repz
inc
pop
push
mov
repnz
daa
or
insl
push
push
inc
dec
push
in
fs
sbb
and
sbb
int
in
jo
mov
pop
daa
nop
mov
cmp
mov
jg
adc
pop
xchg
push
push
pop
imulb
mov
push
and
cmp
adc
cmp
push
mov
rorb
jb
fisttps
out
cmp
xchg
mov
daa
das
fiadds
and
adc
jno
in
mov
cmp
lcall
cltd
fldenv
adc
inc
call
in
adc
push
inc
mov
fisttpll
repnz
xor
or
cmp
cmp
std
sbb
cmp
push
lock
adc
js
enter
mov
xchg
adc
cmc
mov
test
cmpsl
mov
mov
inc
aam
pop
and
xchg
push
sub
or
sub
pop
jmp
xchg
cmp
lcall
faddl
mov
in
jmp
push
or
mov
dec
jo
sbb
add
fdivrs
jae
aas
fdivl
dec
push
insl
sbb
call
sbb
mov
mov
enter
cltd
dec
adc
push
add
rol
jmp
mov
mov
push
outsb
mov
add
pop
pop
xor
sub
dec
xor
inc
mov
inc
jne
aam
or
ret
fiadds
ds
nop
test
jne
xchg
lea
adc
je
cmp
lret
hlt
add
cmp
stos
sub
or
xor
or
sub
dec
idivb
jnp
je
push
adc
scas
fcoml
lock
push
testb
adc
sub
jb
bound
fiaddl
jne
sbbl
and
call
fdivrl
and
cld
aad
das
test
inc
mov
sub
cli
or
xor
fcoms
jmp
adc
rcrb
lea
cmpsb
adc
push
jge
push
add
imull
mov
std
jge,pn
lahf
roll
enter
call
loopne
pop
mov
push
aad
or
pop
stos
popa
lock
and
xchg
adc
xchg
push
movsb
nop
mov
pushl
mov
add
inc
cltd
jbe
outsl
leave
jge
and
pop
mov
dec
jle
loope
out
inc
xor
add
gs
popf
jb
jbe
dec
mov
and
and
xchg
enter
add
add
inc
mov
gs
add
jns
neg
and
sub
jl
mov
fidivrl
rorl
push
fisubrl
or
push
xchg
pop
imull
jbe
mov
lock
and
add
daa
jno
sbb
pop
les
push
dec
jns
xor
jge
shlb
jne,pt
mov
push
mov
cmp
or
andb
daa
icebp
sti
and
add
loope
popa
repz
les
cs
cmc
das
cmp
or
add
fsqrt
jp
jle
sbb
xchg
xor
pop
in
daa
or
inc
rcr
sub
jmp
pop
or
add
scas
and
pop
stc
ret
push
xor
push
fsub
adc
and
enter
inc
push
mov
test
pop
cli
pop
outsb
inc
sub
and
sahf
sbb
cmp
lock
fmul
cmp
jge
mov
and
stc
and
mov
mov
cwtl
xchg
jmp
movsb
adc
push
mov
mov
lods
xchg
mov
adc
sbb
or
or
popf
in
lock
dec
inc
out
mov
movsb
mov
cmp
add
push
fmuls
mov
jb
jns
call
inc
mov
add
push
pop
push
ret
shlb
test
mov
or
jne
dec
fxch
test
jmp
xor
xor
cld
ljmp
jnp
or
sub
sbb
sub
sbb
daa
ret
mov
std
mov
loopne
mov
bnd
unpcklps
not
mov
jmp
add
mov
mov
jno
ret
xor
in
dec
in
fisttpll
pop
jno
jno
inc
jne
or
cmp
ret
or
push
pop
in
cwtl
sbb
dec
jmp
test
pop
sub
push
fldz
in
in
xchg
xchg
xchg
inc
nop
jae
sbb
in
inc
jmp
in
add
aaa
popf
lret
push
lret
stos
push
push
dec
or
xlat
add
pop
push
add
movsl
push
shl
push
dec
cmp
xchg
sub
cld
outsb
inc
mov
mov
js
lock
adc
fsubrs
sbb
or
push
je
mov
iret
clc
test
inc
icebp
push
jne
jne
movsl
or
xor
sub
data16
adc
je
shll
jmp
aad
cmpb
add
popf
pop
stos
sub
incb
mov
jmp
mov
mov
xchg
push
lods
push
mov
in
xchg
push
cmp
lret
lea
loope
stc
movsl
fisubs
and
xlat
enter
xorl
adc
jmp
stos
aam
inc
push
sub
lods
jns
in
std
jl
in
push
loopne
xchg
in
add
les
jp
not
mov
adc
xchg
ljmp
bound
test
mov
pop
aaa
or
add
add
movsl
sub
lahf
xor
les
push
sub
aas
aam
pop
xchg
bound
jg
dec
jg
orb
mov
mulb
inc
sbb
lock
hlt
jmp
pop
pop
cmp
adc
addr16
cmp
cld
dec
loopne
or
fcompl
pop
add
fldcw
je
repnz
mov
loope
xchg
loopne
lods
and
in
std
mov
add
cmp
or
sbb
xor
insb
or
test
in
mov
inc
xor
sub
dec
mov
ja
inc
push
cmp
add
and
pop
or
add
dec
jg
lcall
movsb
enter
cmp
mov
les
cmpsl
lret
test
mov
inc
pop
add
pop
fnsave
pop
sbb
loop
addr16
loopne
fsts
or
in
dec
call
sub
xchg
xor
inc
les
push
jmp
sub
je
insb
mov
in
and
or
sbb
add
mov
insl
movsl
gs
add
leave
mov
bound
or
xchg
jns
out
xchg
xchg
jae
pusha
in
pop
and
mov
xor
add
jbe
or
dec
sarb
jecxz
adcl
xchg
mulb
push
jae
sub
adc
scas
mov
inc
adc
xor
push
adc
addr16
ja
pushf
push
daa
jb
je
leave
or
fdivs
aad
ds
movsb
cmp
inc
and
push
fs
imul
xchg
clc
xor
ret
sub
adc
cwtl
mov
jae
mov
ss
mov
pusha
cmp
aas
xchg
aam
or
les
ficoml
adc
jmp
push
repnz
mov
dec
out
in
adc
stos
rorb
int
rcpps
mov
les
mov
adc
call
in
shrl
mov
push
and
insb
mov
fs
and
mov
push
cmp
daa
jne
or
sub
fdivrl
cs
int3
add
xchg
mov
adc
daa
and
int3
pop
sbb
inc
cmc
jae
sbb
and
sbb
mov
daa
inc
gs
push
outsl
int3
fbld
sahf
sub
cld
call
sbb
icebp
add
add
je
sub
adc
rolb
sub
add
mov
jns
out
xchg
sahf
jg
push
xor
and
mov
scas
testl
or
adc
cmp
push
or
in
outsb
out
pop
or
pop
sbb
pop
add
popa
dec
push
dec
adc
add
test
push
xchg
sbb
iret
jnp
hlt
sub
xor
xor
not
and
lret
and
addb
lret
rcr
push
mov
ja
out
ss
jmp
jl
or
add
iret
adc
lods
add
pop
call
test
test
inc
jmp
test
add
jg
ficoml
add
sti
push
pop
or
cltd
and
mov
pop
mov
je
xor
dec
popa
ja
pop
push
or
cmp
jne
iret
inc
andl
stos
mov
fmul
sub
or
cmp
mov
mov
or
xchg
add
cltd
and
and
jecxz
sbb
out
leave
add
or
or
or
dec
adc
jl
adc
pop
lods
cmp
pop
mov
rcll
adc
pop
jecxz
and
sbb
dec
pop
adc
nop
push
frstor
inc
add
fldl
or
inc
call
add
push
jmp
sarl
pop
and
testb
add
jge
test
test
test
sub
cmpsl
sub
mov
sbb
shlb
push
or
mov
jmp
cmp
push
in
ror
sbb
test
inc
testl
and
insb
ljmp
adc
bound
sub
jmp
dec
and
cmpsb
dec
cmpsl
adc
or
out
xchg
stc
bswap
sahf
mov
push
adc
sub
mov
rcpps
jnp
mov
jmp
fsubs
push
divb
or
push
call
jmp
setp
pop
xchg
xchg
adc
stos
enter
out
aas
and
mov
sbb
enter
cmp
adc
jmp
test
add
loop
push
sbb
jmp
and
push
mov
and
test
cwtl
lea
jo
cwtl
adc
adc
adc
add
cli
hlt
les
lret
add
fstl
xchg
jno
inc
push
and
xor
aaa
add
pop
lea
add
mov
sti
or
or
bound
pop
jae
sub
mov
inc
cli
adcl
adc
mov
sub
sub
imul
insl
lret
sbb
rorb
sbb
dec
jne
hlt
std
sbb
cltd
adc
test
pusha
imul
xchg
mov
std
into
dec
mov
adc
cwtl
mov
or
adc
pop
mov
jle
add
pop
pop
test
dec
cltd
push
je
call
inc
xchg
insb
je
fs
popf
icebp
jno
adc
adc
pop
cmp
leave
push
mov
mov
dec
mov
sbb
fimuls
fs
movsb
xchg
pop
xor
mov
push
call
test
pop
pop
push
cli
cmp
jle
push
add
sbb
fstps
sbb
ret
icebp
mov
jbe
or
bound
enter
lea
and
cwtl
arpl
jl
sub
cmp
cld
push
add
adc
loope
jecxz
push
bndstx
pop
xor
add
leave
mov
pop
lods
jae
lahf
jae
lods
add
push
mov
add
push
loope
dec
adcb
cld
mov
or
and
scas
cmpl
or
cmp
adc
nop
arpl
sub
stos
and
data16
xor
xor
cmp
add
add
pop
pop
push
dec
nop
mov
sbb
pushf
outsb
xchg
or
xor
addb
leave
data16
gs
jl
orb
xor
mov
aam
negb
xchg
shll
adc
or
xor
sbb
dec
jmp
out
fmull
out
cwtl
arpl
nop
in
and
lea
fisttps
loopne
mov
cld
add
push
and
lock
sbb
push
fwait
dec
jge
cmp
push
sbb
fnclex
cmovns
or
cmc
das
push
inc
enter
aad
cmc
or
mov
fldcw
jl
mov
mov
adc
sahf
add
fldt
pop
in
mov
adc
cmp
sbb
xchg
xor
popa
lods
xchg
xchg
je
sub
sbb
lods
rorl
inc
push
test
sahf
adc
inc
popa
repnz
orb
sahf
scas
xor
dec
jp
jl
push
adc
ds
pusha
cmp
icebp
mov
ljmp
inc
nop
inc
nop
cmp
scas
leave
out
loop
movb
movsb
push
xchg
dec
or
movb
fnstsw
pop
mov
push
mov
jne
rol
push
and
or
inc
inc
decb
add
mov
pushf
jnp
mov
inc
pop
mov
and
and
inc
or
jp
lods
sbb
mov
std
cmpsl
cld
mov
shr
jp
add
sub
mov
fldl
pop
jae
or
dec
sbb
push
sub
and
xchg
xor
and
jbe
addl
jb
cmp
mov
dec
pusha
jne
cld
lea
cmp
movsl
xchg
cmpb
mov
adc
jge
push
sbb
mov
push
popa
jmp
push
inc
inc
mov
push
idiv
or
inc
pushf
mov
push
xor
jb
mov
out
jmp
mov
dec
mov
hlt
push
data16
mov
loop
push
sarb
pop
mov
lods
movsb
fmuls
xchg
mov
and
fldt
fcoms
cmp
incb
nop
scas
add
rdpmc
addl
test
fdivrp
ret
rorb
pop
mov
push
bts
addr16
pop
jl
and
and
xor
mov
scas
xor
push
lea
or
push
hlt
pop
mov
aad
xchg
jne
repnz
outsb
bound
lcall
jae
jmp
and
jb
push
mov
clc
cltd
fistl
fwait
add
jmp
jge
test
roll
in
xor
ret
or
push
xchg
or
daa
pop
lret
lods
or
les
ret
adc
call
icebp
sbb
and
cmpl
inc
pop
inc
pop
or
dec
mov
push
inc
rclb
es
and
test
mov
nop
lret
js
call
mov
test
std
sub
xchg
pushf
push
rcrl
mov
lret
push
lret
lret
insb
movsb
lret
dec
pop
jnp
mov
jns
cli
push
test
js
mov
push
adc
lret
pop
mov
sbb
movsb
enter
or
lods
pop
testl
orb
movsb
nop
aas
mov
js
adc
jae
sub
int3
pop
mov
fxch
pop
movsb
and
xchg
add
sahf
loope
push
push
inc
adc
sti
movsb
sub
or
mov
mov
adc
mov
push
int
mov
int
gs
insl
movsb
ficompl
pop
pop
pop
out
push
rcll
inc
loop
push
test
js
mov
inc
hlt
cli
sahf
sub
into
pop
mov
sbb
movsb
enter
or
lods
pop
testl
xchg
or
nop
aas
popf
and
push
push
scas
sub
lahf
mov
inc
cmp
xor
mov
bound
xor
loopne
sbb
push
xchg
or
mov
xchg
pop
push
mov
cmp
adc
inc
mov
les
sbb
or
or
sbb
test
mov
adc
gs
pop
dec
and
scas
mov
adc
inc
fistl
sti
out
inc
out
ds
add
lret
mov
mov
decb
les
jl
xchg
pop
mov
mov
daa
icebp
adc
or
cwtl
adc
divl
loopne
xor
test
cmpl
repnz
roll
and
jmp
or
test
cs
push
dec
mov
sbb
sub
push
or
and
xor
or
aas
pop
inc
addb
sub
sbb
cvtdq2ps
sub
outsl
int3
lret
cmp
add
xlat
iret
pop
sub
insb
dec
dec
pop
adc
adc
mov
jle
sbb
mov
dec
sub
dec
adc
xchg
pop
cmp
jmp
fs
mov
adcl
loope
movsb
adc
shll
inc
jmp
add
or
sub
sub
cmp
sbb
sub
push
xchg
sub
je
rcrl
imul
fnsave
sbb
mov
rcrb
nop
fcomps
stos
sbb
call
popl
xchg
inc
shll
andl
or
std
stos
loopne
sbb
pop
pop
push
sbb
adc
jns
test
or
aam
xor
pop
cltd
cmp
jne
jns
stc
xchg
je
lret
mov
adc
je
and
sbb
push
add
ss
sub
and
inc
and
bound
adc
cld
clc
stos
pop
dec
mov
mov
aas
xchg
cmc
mov
popf
inc
mov
push
ds
or
jmp
fpatan
xchg
push
repnz
cld
lahf
jg
test
outsb
int3
adc
and
scas
pusha
mov
test
mov
jne
push
filds
cwtl
and
test
aaa
xchg
jl
int
lret
mov
in
push
jne
or
jge
cmp
push
xchg
push
test
lea
ss
sbb
loop
mov
pop
dec
push
dec
std
mov
adc
outsb
aas
cmpsl
add
outsb
fdivr
in
jo
mov
call
mov
or
push
ffree
in
pop
mov
aas
dec
lods
sbb
add
cmpb
adc
add
pop
test
arpl
sbb
push
push
inc
or
push
out
add
adc
sbb
ljmp
push
jne
jg
mov
cmc
mov
cmpsb
lods
push
cmpsl
aas
or
cmp
push
add
fbstp
cmp
clc
mov
add
add
xchg
ret
cld
add
pop
jg
sbbb
sbb
mov
inc
mov
cmp
das
xor
inc
and
shll
cmp
loope
or
test
adc
cmpsl
mov
fisttps
adc
xor
sub
mov
sub
sbb
daa
repz
das
dec
ds
mov
cmp
call
inc
adc
inc
aas
mov
mov
jbe
adc
fnstsw
jmp
mov
lock
jl
jp
xchg
js
aas
fimuls
bound
push
sub
dec
ja
ljmp
int
ret
notl
xchg
push
sub
xor
out
movsb
inc
out
enter
clc
xchg
shl
push
inc
neg
sbb
shll
fadds
mov
xor
xchg
pop
jmp
dec
sub
push
inc
mov
push
cwtl
or
cmp
sbb
adc
sub
jmp
add
xchg
adc
clc
mov
jge
fistps
xchg
sbb
sbb
mov
mov
fildl
nop
add
adc
aad
outsb
enter
mov
pop
stc
fists
adc
dec
ret
pushf
adc
mov
add
jmp
lahf
loop
pop
repnz
int3
add
push
push
notb
adc
bound
dec
in
mov
and
pop
jns
mov
or
rorb
pop
std
hlt
add
ret
or
pusha
adc
mov
cmp
test
inc
xor
jmp
lahf
icebp
les
push
push
adc
popa
xor
div
daa
lahf
sti
adc
movsl
jb
fbld
and
movb
pop
or
shr
xor
sbb
adc
add
fldl
sub
add
lock
cmpl
stos
outsl
or
sbb
add
call
cltd
imul
stc
add
mov
fadds
push
cmpl
loopne
sbb
js
push
mov
imul
sub
and
std
sbb
mov
je
das
jmp
hlt
mov
and
sbb
jo
mov
push
pop
cwtl
sbb
orb
repnz
dec
inc
in
pop
sub
jle
xor
cmp
loop
stos
or
push
mov
push
popf
adc
lcall
adc
pop
mov
and
shl
js
insb
andl
pop
mov
ret
or
call
aaa
in
sub
add
les
stc
inc
jae
inc
or
jb
cmp
adc
rolb
xor
ret
adc
dec
out
sbb
fmuls
mov
dec
jmp
cmp
repz
xor
add
ja
inc
adc
daa
ret
jle
std
shlb
js
dec
add
clc
jle
ss
xor
mov
or
sbb
dec
clc
cmpsb
and
xor
push
hlt
fiadds
loope
ret
and
std
mov
push
push
xor
mov
push
add
stos
movsl
std
adc
adc
xchg
imul
movsl
push
mov
jno
sbb
outsb
lock
fsubl
inc
sub
push
push
add
push
movsl
xchg
push
iret
mov
and
lret
pushl
mov
mov
fdivs
push
clc
jae
mov
ret
mov
mov
adc
incb
movsb
ret
push
jp
push
es
or
movsb
imul
scas
outsl
or
add
push
jmp
xchg
cli
insl
mov
inc
jl
dec
cmpb
lea
push
inc
mov
outsl
adc
inc
je
or
xchg
std
dec
push
or
and
stos
cmc
push
dec
lods
pop
dec
jnp
inc
pushf
or
or
xor
pop
pop
jg
xor
imul
pop
xor
bound
in
aas
subb
cmp
pusha
in
jle
hlt
ja
fistpl
xor
scas
shl
inc
adc
inc
lock
orb
stos
push
fstps
push
fmul
jmp
dec
loopne
das
pop
movsl
test
nop
adc
push
xor
push
aaa
xor
mov
jmp
jmp
and
fwait
mov
fld1
push
jmp
and
leave
sbbb
popa
add
xor
jp
aas
adc
sbb
xchg
add
call
loop
cmp
xchg
mulb
mov
sub
inc
xchg
or
push
adc
adc
xchg
mov
pop
imul
mov
jbe
out
jmp
fsubrl
mov
inc
add
call
inc
insb
push
in
pop
or
and
nop
pop
cwtl
in
testb
jg
mov
std
out
sbb
mov
rclb
ss
outsb
push
aam
dec
inc
call
and
outsb
mov
aam
jne
sbb
xchg
test
add
fmuls
int3
inc
jns
or
adc
aas
mov
sub
cmpl
and
mov
ja
popf
out
shrl
mov
sub
or
jno
std
fidivl
or
ror
xchg
js
je
or
pop
inc
decb
jne
and
fs
mov
pusha
or
shll
jg
cwtl
out
sub
jbe
xchg
adcl
mov
push
mov
push
sub
adc
cmp
xchg
fwait
sarl
jmp
les
sub
ret
dec
jae
xor
aas
or
shlb
sub
pop
xchg
mov
aas
jle
add
test
and
xor
or
push
jmp
xor
ret
jne
lret
inc
lds
je
shrb
loope
push
addr16
pusha
jmp
hlt
mov
ss
cmp
cli
aas
mov
cmp
pop
clc
xchg
imul
and
int
mov
xchg
jmp
pop
sbb
cltd
in
and
rcrl
mov
cmc
and
xchg
push
jmp
adc
ret
pop
call
push
stos
push
push
pushl
push
nop
sbb
mov
js
gs
pop
push
add
push
add
push
shll
das
xor
sahf
and
dec
in
mov
mov
cld
inc
cmpsb
lcall
rorb
mov
out
aaa
rcl
jecxz
pop
sub
mov
add
xor
xor
pop
inc
xchg
or
fistps
adc
leave
shrb
je
mov
test
shll
or
pusha
cmp
dec
or
shrl
xor
inc
inc
mov
inc
aaa
mov
sti
inc
push
lret
shr
pop
push
pop
imul
lcall
ds
rorl
roll
xchg
fadd
int3
test
sbb
push
movsb
hlt
push
sbb
jmp
inc
lds
and
inc
add
inc
add
lcall
comiss
and
iret
xor
or
mov
outsb
mov
pop
pop
mov
inc
xor
pop
test
mov
add
jmp
push
enter
xadd
idivb
push
add
aaa
sahf
xor
aad
mov
add
mov
and
cld
cmpsb
sbb
call
ss
test
inc
or
adc
test
loope
push
outsl
mov
inc
cmp
add
inc
mov
xchg
jns
jns
pop
sbb
inc
enter
adc
mov
sahf
fwait
ret
hlt
shrb
mov
lcall
add
sbb
adc
add
mov
inc
arpl
lea
mov
add
rorb
inc
leave
dec
rcll
dec
sarb
pop
add
rorb
add
push
inc
inc
push
cli
sub
or
mov
enter
sbb
push
xor
pop
mov
std
cmp
adc
adc
int
cmc
mov
sbb
adc
fidivrs
inc
and
xor
mov
cwtl
mov
or
stos
and
pop
dec
in
pop
test
add
sbb
popf
and
or
cmp
scas
popa
outsb
jmp
aaa
stos
inc
icebp
mov
jb
mov
mov
pop
inc
cmc
dec
shl
sbb
sbb
je
testb
add
sbb
xchg
repnz
cmp
sub
xor
and
rorb
cmpsb
inc
call
xchg
loopne
mov
push
in
cmpsb
mov
std
fbstp
xchg
lret
in
icebp
je
push
nop
push
mov
add
sub
push
lea
push
push
cs
mov
jno
jmp
leave
adc
add
ljmp
mov
dec
mov
pop
mov
push
ret
rcrb
mov
and
dec
pop
adc
sub
cbtw
daa
inc
cmp
pop
repnz
cmp
adc
and
mov
sahf
fsubs
rclb
test
js
out
add
cmp
lahf
shr
xor
adc
rcl
out
mov
add
out
xchg
mov
daa
test
fadds
loop
push
jp
pushl
xchg
fcmovbe
xor
mov
mov
xor
or
mov
aas
mov
jl
das
inc
je
push
cmc
fsubrs
mov
repnz
cmc
out
sbb
nop
fcmovne
leave
test
mov
es
inc
inc
stc
out
repz
mov
repz
lret
push
fstpl
scas
pop
dec
les
popa
jmp
push
outsl
adc
dec
or
enter
xchg
or
insb
lret
or
xor
xor
and
pop
mov
fsincos
push
test
lods
xchg
mov
call
mov
sbb
nop
or
jl
imul
orb
mov
subb
or
lods
dec
push
sbb
add
push
xchg
clc
adc
jmp
mov
outsl
jl
test
or
in
push
lock
jns
shr
clc
iret
imul
mov
add
mov
jle
xor
cld
shll
xor
aas
out
hlt
xchg
push
cld
aas
or
jecxz
test
cmp
mov
add
adc
jbe
add
pop
mov
cmp
jne
add
mov
lret
lea
add
shlb
mov
jne
xor
jle
cwtl
in
loopne
sbb
pushf
ss
push
sbb
or
mov
or
sbb
jmp
hlt
cmc
clc
xchg
sub
xchg
decl
xor
pop
orb
jecxz
xchg
hlt
inc
mov
pop
fwait
sub
and
ss
loope
dec
pop
cmp
jbe
mov
mov
sub
inc
mov
cmp
and
arpl
mov
cmp
cmp
sbb
xor
shr
or
and
dec
add
mov
or
pop
mov
push
pop
xchg
int3
lock
cmp
and
dec
iret
cmp
lret
hlt
xor
cwtl
lcall
in
scas
rolb
roll
mov
mov
pop
jo
mov
or
or
jne
mov
and
mov
inc
xlat
pop
sbb
cmpb
push
xchg
pusha
insb
in
or
outsb
loop
scas
out
sbb
sub
add
mov
cmpsb
mov
sarb
push
push
inc
xor
cmp
mov
movsb
mov
mov
shl
add
dec
cmpsb
push
add
rclb
push
call
and
or
or
push
or
xchg
mov
mov
pop
and
dec
inc
or
call
pusha
add
push
adc
jmp
jo
mov
adc
adc
in
testb
cmp
dec
xchg
out
xor
in
push
xchg
dec
adc
mov
mov
or
and
dec
or
adc
das
push
lds
cmp
das
pop
pop
dec
dec
adc
pop
arpl
cmp
push
adc
subb
and
mov
xadd
add
pop
add
jge
mov
jmp
inc
lock
sahf
cmp
not
call
mov
inc
cwtl
or
sbb
jl
and
pop
in
push
lea
jmp
jb
adc
jns
fcmovbe
fsubs
and
out
repnz
dec
jae
in
mov
push
jmp
test
sub
out
dec
push
cmc
fisubrl
clc
test
inc
je
push
sti
fidivl
pop
pop
mov
stos
or
sub
sub
mov
cs
mov
pop
dec
mov
mov
aaa
movsb
adc
push
adc
pop
push
imul
dec
or
outsl
sbb
pop
cmpsb
xchg
test
xchg
or
pop
pop
js
cmp
xlat
je
lea
jmp
orl
mov
jne
arpl
daa
lret
pop
pop
sbb
add
mull
inc
push
stc
push
mov
sub
icebp
pop
xor
cli
dec
je
sub
jle
xchg
pop
xchg
cmp
repz
adc
decl
test
xor
iret
bound
push
mov
inc
hlt
in
push
and
clc
or
jne
call
and
jmp
lret
adc
sbb
push
outsl
adc
mov
shlb
push
jp
or
mov
sbb
adc
cmpsl
adc
icebp
rolb
inc
out
push
lret
aaa
or
sahf
in
add
add
inc
or
ret
xchg
mov
mov
out
or
pop
or
nop
in
add
sub
and
movsb
pop
lea
scas
imul
xchg
aaa
sub
test
push
or
cld
dec
xor
xor
mov
adc
cld
mov
lea
and
les
cmp
mov
adc
cltd
jo
and
add
or
test
imul
push
mov
les
jmp
je
mov
movsl
adc
sbb
add
push
dec
mov
inc
xor
xor
xor
mov
je
push
jb
and
jbe
test
inc
or
or
adc
loope
xor
mov
jle
flds
andl
stos
jnp
mov
jno
push
es
push
dec
adc
inc
push
loopne
dec
ret
xchg
imul
stc
xor
inc
or
push
nop
and
pop
xchg
sti
xchg
shl
fnstsw
jns
xor
orb
pop
outsb
cmpsb
rorb
xchg
sbb
sahf
cli
cmp
lock
ret
repz
cmc
std
mov
movl
push
out
pusha
inc
dec
add
movl
sub
mov
and
xchg
dec
insb
inc
dec
outsb
or
rolb
xor
mov
mov
inc
inc
cmpsb
enter
shlb
add
adc
mov
not
and
retw
into
mov
or
les
push
in
lcall
pop
sub
ljmp
cmpps
dec
cmp
cmp
cmp
mov
in
dec
les
add
mov
cli
sbb
mov
orl
adc
popa
dec
sub
jae
bound
lea
repnz
push
sbb
iret
cmc
sbb
mov
push
jg
xor
adc
into
imul
sub
sub
or
incl
mov
xor
mov
pop
xor
add
adc
orb
cmp
push
jne
orb
dec
in
and
or
mov
jmp
dec
and
mov
outsl
dec
adc
mov
movsl
orb
les
cmpsb
je
add
stos
mov
stc
inc
mov
sub
jmp
ja
inc
jge
fildll
mov
movsb
bound
pop
xor
movsl
in
mov
and
scas
lds
pop
mov
push
jne
xor
cmp
jne,pn
and
je
and
push
inc
insb
nop
dec
loop
inc
ja
out
dec
jp
xorl
popl
fsubp
je
cmp
jnp
dec
outsb
jnp
pop
jno
xor
pop
jb
rorl
pushf
scas
imul
mov
mov
inc
mov
inc
and
bound
and
mov
dec
adc
cld
scas
mov
xchg
jo
adc
push
push
push
repnz
ret
mov
sbb
pop
cs
maxps
js
mov
lds
sub
mov
aad
lret
xor
sub
add
cmp
jge
out
mov
jne
mov
adc
or
xor
mov
mov
in
push
xor
lea
push
xor
adc
test
sub
mov
sub
std
add
popf
ret
rcrl
dec
and
jl
push
xchg
clc
out
inc
in
add
cmp
jae
sbb
jbe
inc
cmpl
orl
jae
cs
push
cmp
subps
imul
outsl
and
cmp
testl
and
int
cltd
xchg
mov
insl
cmpsb
inc
stos
push
push
dec
mov
imul
pop
push
ret
jno
cmpsl
adc
mov
push
movsb
mov
sub
fbld
scas
mov
stc
add
les
out
shlb
or
xchg
shlb
xor
sub
add
and
push
sub
in
lock
dec
push
lea
and
cmp
inc
push
inc
cli
xor
xchg
or
push
mov
mov
movsl
je
lods
jle
dec
push
daa
loop
mov
lret
adc
lds
adc
maskmovq
testl
jmp
test
es
push
adc
out
cmp
bnd
push
dec
fldcw
push
inc
sbbl
jmp
mov
mov
add
icebp
or
jge
cltd
popf
and
stc
or
cs
lsl
and
cmp
inc
movl
pop
incl
or
and
jbe
stos
mov
dec
imul
stc
mov
test
inc
lahf
lock
cwtl
push
sbb
adc
sub
cmp
add
loopne
mov
lock
mov
js
clc
lret
add
pop
add
adc
mov
lods
or
cmc
dec
inc
sub
enter
orl
es
lds
xor
sbb
fldcw
dec
es
cmpsb
cmp
jb
xchg
inc
ss
mov
adc
xchg
mov
aad
jmp
dec
xchg
pop
andb
lret
cmp
dec
ret
lods
aas
dec
fdivrl
lds
fcomps
sub
movsl
out
or
adc
and
add
cmp
adc
stos
or
sub
sub
rcrl
mov
test
clc
negb
lods
sarl
mov
clc
shrl
shlb
sub
jle
es
hlt
mov
fwait
push
sbb
xor
adc
inc
popf
stos
push
lods
ret
xchg
jne
mov
aaa
cmpb
jae
mov
cmp
repnz
sbb
cmc
dec
scas
test
mov
inc
inc
sbb
pop
mov
xchg
jnp,pt
jbe
call
mov
mov
xor
jbe
ficoml
jbe
shrl
and
sub
lea
das
cmp
sarb
and
cmp
lea
ret
add
pop
pop
and
add
popa
sub
les
pop
pop
mov
cmp
add
testl
adc
repz
mov
test
jne
mov
jae
pop
pop
cmpb
mov
mull
popa
clc
sub
jle
mov
xchg
cmp
mov
cltd
out
or
jmp
mov
cltd
jne
mov
divl
int
push
push
push
jne
inc
movsl
pop
xor
and
sbb
js
adc
sub
out
xor
cwtl
daa
add
inc
add
jb
xor
rolb
jbe
jo
push
and
push
inc
roll
or
andps
jns
and
and
dec
or
or
add
add
adc
xchg
sub
mov
add
rsqrtps
loope
pusha
jae
gs
sbb
rolb
andb
lahf
or
sbb
inc
insb
mov
mov
in
shlb
sub
mov
jae
into
decb
inc
cmpb
movsb
stos
inc
arpl
add
sub
sar
cmp
pop
push
xor
jg
xchg
push
maxps
mov
jnp
sbb
repz
push
lods
jle
mov
adc
push
sar
dec
sub
adc
das
mov
les
or
adc
in
fmull
sub
or
and
js
jg
aam
jle
adc
sub
loopne
cs
and
scas
lds
pop
add
les
xchg
push
sbb
push
bound
mov
sub
loope
ds
push
fadds
aam
insl
lds
pusha
insb
and
je
or
stos
sub
dec
out
sbb
aas
je
cwtl
imul
cmp
mov
mov
and
orb
bnd
or
sub
jge
mov
aaa
or
jge
cmc
jmp
das
das
mov
inc
inc
shr
jmp
cmp
add
pop
push
cmp
test
or
mov
adc
ja
and
add
js
test
dec
or
repnz
mov
ss
adc
jle
xor
push
inc
xor
cmp
jmp
les
xlat
sub
mov
mov
imul
xor
dec
jb
insl
push
sbb
scas
das
jmp
clc
addr16
xchg
sub
adc
xchg
ret
pop
and
rclb
les
sbb
inc
adc
jo
insb
movsb
and
add
push
add
testw
movsl
inc
mov
dec
cld
stc
pop
icebp
push
push
adc
add
pushf
pop
enter
pusha
sbb
mov
dec
daa
mov
mov
dec
mull
lock
sbb
out
inc
addl
and
add
xchg
push
inc
dec
int
or
popa
jg
mov
and
push
jne
push
add
xchg
add
mov
sub
xor
sbb
jle
add
pop
je
popf
or
dec
lds
add
add
call
mov
push
lock
dec
xchg
jmp
es
add
insb
orb
in
orb
lar
shr
lods
in
sbb
jmp
insl
sub
pop
mov
lcall
push
sbb
int3
jo
pop
xor
add
addl
and
sbb
dec
addb
pop
fisttps
hlt
jmp
mov
lock
sarb
mov
mov
inc
dec
dec
mov
mov
jb
adc
icebp
pop
lock
push
and
andl
and
and
pop
mov
or
notb
nop
sbb
aas
sub
add
push
call
jmp
imul
push
icebp
or
mov
xor
sub
loop
or
jmp
fbld
jae
int
xor
mov
cmp
je
in
cmpsb
jge
xchg
adc
sbb
or
ds
pop
js
and
xchg
xchg
adc
pop
mov
xabort
sbb
add
and
add
inc
dec
and
test
cmp
push
fs
sub
xchg
and
mov
xlat
les
or
add
ret
add
mov
jns
push
imul
jmp
push
je,pt
or
or
cmc
and
pop
xlat
add
cltd
jmp
loop
cmpsl
or
iret
push
and
or
aam
jmp
loopne
int3
or
push
rcrb
je
sbb
jl
outsb
sub
in
or
ret
mov
push
sbb
add
in
dec
mov
xchg
test
mov
daa
int3
or
mov
mov
push
jmp
mov
sbb
je
adc
cltd
clc
cli
std
aam
push
mov
mov
or
xor
fsincos
cmp
mov
aaa
hlt
mov
mov
jmp
int
sub
mov
fistpl
pop
or
les
or
aaa
add
mov
xchg
pop
cld
notb
in
es
or
or
sub
or
and
add
cli
int3
push
lock
adc
or
sub
adc
or
ffreep
int
nop
cmc
es
pop
jmp
xchg
or
mov
call
mov
inc
lret
or
add
cmp
push
test
addr16
xchg
mov
sub
xor
and
call
push
dec
cld
adc
loope
hlt
call
and
push
inc
rorb
mov
daa
sbb
or
push
rclb
mov
ds
cmp
push
cmp
inc
test
mov
cltd
and
or
fsubrl
pop
adc
add
push
inc
adc
add
lods
inc
call
shlb
clc
lahf
adc
lcall
dec
xchg
out
int
or
xor
or
adc
lods
test
sbb
pop
and
lock
xchg
cmc
adc
leave
gs
stc
notb
push
inc
jge
nop
adc
aaa
and
ss
outsl
inc
loop
xchg
jno
mov
sbb
inc
sbb
cmp
and
or
scas
add
in
stos
lcall
mov
dec
ret
cmpsl
or
jo
loopne
ja
loopne
mov
in
cmp
jl
or
shrl
jmp
das
dec
inc
jge
sahf
movlps
adc
pop
inc
cmc
jmp
xchg
mov
mov
outsb
repnz
sub
cmp
jl
shl
repnz
dec
xchg
dec
leave
adc
jmp
mov
insl
and
or
push
pop
daa
stos
sbb
add
jle
sub
xor
jne
xor
mov
xchg
rorl
mov
inc
lock
push
push
push
call
add
inc
rcll
mov
test
lahf
ljmp
and
test
outsl
pop
xchg
inc
jle
adc
sub
sub
adc
xor
int
jns
adc
orl
add
mov
pushf
in
test
lahf
or
pop
and
mov
ss
inc
or
adc
lds
sbb
leave
mov
mov
test
and
stc
pop
add
test
stc
xor
inc
jmp
dec
push
and
aad
xchg
jne
push
pop
test
je
and
test
pop
clc
add
dec
cmp
sbb
jmp
data16
inc
push
popf
shrl
and
pop
xor
add
cli
cli
push
push
inc
negb
xor
in
and
adc
add
out
jae
or
or
shll
out
daa
cmp
mov
adc
jmp
push
pop
mov
fs
repz
inc
mov
inc
cmp
jl
and
aad
xchg
jne
add
test
out
test
je
and
orl
push
mov
inc
and
mov
or
mov
jmp
add
sbb
pop
sbb
imul
repnz
and
adc
and
popf
leave
in
outsl
push
push
push
push
inc
add
dec
adc
leave
test
mov
cltd
loope
loopne
mov
or
jle
xchg
mov
add
loope
and
into
hlt
or
jle
imul
push
orb
je
lds
dec
jmp
sub
sbb
push
inc
iret
push
lcall
movsb
xchg
mov
loop
leave
test
jmp
pop
sub
inc
mov
mov
pusha
lea
mov
or
call
push
rcrl
jb
mov
out
clc
enter
movb
xlat
xor
rclb
mov
incl
flds
fnstenv
lods
push
pop
adc
les
out
int
sub
dec
lret
mov
pop
mov
sbb
je
xchg
lock
mov
mov
test
sbb
aad
adc
test
jb
shl
mov
pusha
shrl
mov
out
dec
pop
sub
adc
pop
stc
sbb
mov
mov
inc
in
mov
loopne
fsubs
xor
rcrl
mov
inc
andl
leave
mov
sub
mov
and
or
or
cmc
inc
sbb
rolb
rorb
push
lea
or
or
xchg
ret
push
imul
pop
mov
pop
pop
push
xchg
dec
push
inc
adc
dec
rcll
fsts
nop
xor
or
and
dec
repnz
icebp
sub
fsubs
or
xorl
inc
repz
push
rorb
mov
add
cmp
inc
out
xchg
adc
jp
jb
dec
and
jmp
gs
jg
je
lret
push
sub
mov
inc
rcll
dec
mov
xor
enter
xor
add
leave
jl
jg
cltd
jge
adc
inc
repnz
and
push
getsec
ja
or
icebp
sbb
jns
push
lock
cli
dec
icebp
pop
addl
and
xchg
jae
push
mov
jnp
fisttpll
dec
adc
ljmp
mov
lcall
js
jmp
in
cmp
lret
ret
push
add
sub
jne
fs
jnp
cs
jge
sub
or
inc
push
scas
dec
in
add
cmp
nop
adc
shll
pop
push
data16
adc
or
mov
adc
and
add
xor
jle
or
je
jecxz
fwait
push
add
dec
ds
loope
push
fs
cwtl
push
in
imulb
test
jmp
sub
lea
sub
popf
or
push
sbb
sub
pop
push
dec
adc
cmpsl
or
xor
sub
or
jnp
test
add
mov
test
cmp
insb
pop
lahf
push
call
xchg
fsubl
insb
push
fsts
mov
jo
mov
mov
jb
pop
scas
and
mov
sub
outsb
icebp
out
xlat
push
loop
push
mov
jmp
repnz
shlb
test
jbe
movb
aaa
lret
xor
sub
test
lods
sub
sub
movsl
lods
cmovs
cmpsl
and
adc
and
and
jb
lea
testb
adc
es
xchg
and
adc
mov
aam
test
and
xchg
movsb
call
jne
incl
adc
jle
cmpsb
ljmp
jmp
mov
mov
jle
cmp
push
xchg
adc
adc
xlat
xchg
cmp
cmpsl
cli
aas
adc
sub
mov
ret
add
xchg
and
jmp
push
or
inc
mov
cmpb
into
dec
cmpsl
adc
lea
jne
lea
xor
test
inc
lock
icebp
add
adc
push
push
sti
xor
je
add
and
inc
arpl
cmp
pop
aad
xor
testb
outsl
pop
jmp
cmp
ss
or
std
add
or
mov
iret
inc
adc
call
mov
mov
jge
jnp
lahf
aas
pop
aam
mov
inc
les
and
decb
jle
sbb
ss
sbb
cmp
ss
jae
xchg
jmp
jbe
cmc
lock
and
xor
push
lock
sbb
mov
xchg
ret
std
mov
scas
negb
pushf
pop
inc
dec
jne
xor
inc
enter
mov
pop
lock
shr
inc
cltd
add
test
inc
test
xchg
sbb
shrb
in
mov
in
dec
push
xor
mov
sbb
or
inc
pop
je
mov
push
add
pop
shrb
sar
adcb
or
adc
je
and
jne
cltd
or
xchg
inc
sub
pop
xor
add
add
jge
dec
xor
jl
and
and
es
popa
adc
mov
sahf
aam
loop
addr16
test
dec
push
push
cmp
lret
jg
shl
pop
jecxz
jb
xchg
mov
andl
adc
adc
pop
int3
mov
test
leave
xor
add
out
xchg
aad
mov
adc
jne,pt
sub
cmpsl
imul
inc
aaa
cmpsl
shll
and
das
xor
push
fsubl
pop
sub
pop
hlt
dec
push
mov
clc
jge
add
push
int
mov
je
pop
lock
jne
inc
mov
push
inc
add
mov
cmp
jns
fsubr
or
xchg
inc
adc
enter
in
add
in
ss
jmp
call
cmp
nop
in
and
sub
loope
rcll
mov
jmp
mov
or
cmp
bound
mov
inc
insb
shl
add
aas
lea
rol
jg
sub
pop
shr
jp
mov
inc
add
inc
lea
scas
fimuls
pop
add
movups
mov
fisttps
int3
into
ret
es
push
imul
sub
fcompl
jmp
repz
cld
cmp
dec
stc
pop
or
xchg
dec
inc
ljmpw
bound
inc
leave
cmp
sar
xchg
or
test
mov
sbb
loope
sub
push
enter
lahf
mov
push
shl
mov
out
xchg
mov
outsb
cmp
lods
lock
adc
pop
rolb
inc
in
cwtl
es
sbb
push
mov
adc
lcall
mov
scas
cltd
pop
jbe
das
jle
stos
je
mov
pop
xor
dec
aaa
ja
out
adc
pop
in
lods
dec
mov
xor
ljmp
push
call
inc
jl
daa
je
fbstp
add
xchg
add
adc
and
test
mov
dec
lds
icebp
clc
imul
add
xor
scas
push
mov
or
clc
add
pop
inc
bts
jmp
mov
and
inc
bt
jae
les
adcb
lret
daa
icebp
xlat
xchg
idivl
stc
je
dec
sbb
add
mov
xchg
pop
sbb
daa
inc
idiv
ljmp
ret
aas
jo
lea
sbb
sub
pop
inc
jae
scas
bound
push
idivb
ret
hlt
adc
xchg
scas
pop
cmc
xlat
cmp
mov
decb
pop
arpl
xlat
add
repnz
loopne
cmp
int3
or
adc
jne
or
push
sbb
ja
js
and
xor
push
or
push
and
xor
mov
dec
test
or
out
sbb
fprem1
and
ss
mov
sub
nop
xchg
aad
cli
add
and
add
fs
cmpsl
mov
dec
jmp
pop
arpl
pop
adcb
adc
push
movlps
push
in
and
test
ficoms
xchg
mov
mov
cli
movsl
out
inc
mov
in
pop
pop
push
repnz
jbe
lds
sub
popf
and
into
adc
inc
pop
enter
sbb
xchg
add
xlat
push
xchg
mov
mov
adc
mov
mov
xor
sbb
arpl
in
daa
or
push
shlb
gs
add
push
fwait
jbe
test
in
mov
call
aad
mov
xchg
loopne
pusha
lcall
adc
push
ds
fbld
int3
jge
xor
cmc
mov
adc
push
test
or
mov
or
call
or
movsl
std
addb
push
inc
loope
addr16
push
ret
mov
aas
mov
and
pop
insb
dec
cmp
out
mov
dec
mov
xchg
popf
inc
add
mov
movb
add
inc
call
aas
lea
stos
and
mov
icebp
add
nop
xor
lock
ret
sbb
or
out
enter
adc
std
add
add
inc
push
or
jle
fs
dec
push
sbb
lea
cmp
mov
adc
scas
int
std
pop
xor
aas
add
int
mov
push
enter
test
fdivl
push
iret
adc
mov
bound
adc
cld
clc
incl
cmp
xchg
out
or
mov
pop
push
andb
or
prefetchnta
sbbb
call
cmp
mov
insb
sbb
inc
xchg
and
adc
or
add
cmp
pop
mov
mov
icebp
and
testb
adc
inc
mov
je
mov
xchg
sub
push
test
lret
call
sbb
sub
and
cmpsb
xchg
add
mov
or
mov
jo
lcall
xchg
sub
jl
add
push
subb
mov
inc
inc
ds
push
adc
mov
add
dec
add
and
adc
in
in
cmp
pop
push
les
out
xchg
rcrl
sbb
pop
scas
sbb
cmp
dec
popa
sub
and
mov
push
xor
popf
mov
mov
leave
iret
lret
jns
add
stos
add
add
hlt
in
scas
jmp
fimuls
movb
fs
fbstp
imul
dec
sub
xchg
sub
ret
cmp
pop
add
jg
inc
jmp
mov
pop
ss
daa
adc
sub
or
sub
mov
xchg
enter
sbb
cs
mov
add
call
xor
push
out
mov
inc
and
adc
jmp
xor
vpand
xor
sbb
or
and
fnstcw
pop
inc
dec
movsl
adc
pop
loope
adc
add
adc
push
loope
mov
pop
adc
inc
int3
fdivs
push
and
mov
push
mov
nop
mov
inc
mov
mov
mov
nop
and
jmp
adc
push
adc
mov
adc
enter
push
and
mov
sbb
adc
adc
sbb
std
or
stos
mov
jmp
inc
pop
sub
mov
mov
push
or
mov
lcall
push
test
movsb
inc
inc
jnp
pop
mov
sub
or
jge
inc
lret
mov
pusha
leave
mov
or
jle
sub
jge
imul
dec
cwtl
adc
test
jg
add
xchg
movsl
or
sub
out
adc
push
cs
aad
call
paddb
add
shll
test
xor
pushf
and
jge
add
inc
push
adc
ss
jp
adc
sbb
lds
cs
or
inc
fs
cmp
xor
inc
addl
stc
push
add
pushf
mov
mov
ja
add
push
add
sti
aam
add
stc
jmp
mov
inc
movsb
add
sbb
cwtl
or
mov
popa
xor
adc
cmp
jle
pop
sub
aad
mov
cmp
adc
test
mov
dec
rolb
add
leave
inc
and
shlb
sub
insb
stos
sub
sub
dec
stc
jmp
push
sub
imul
or
inc
dec
push
or
add
ret
or
xor
sub
lret
ficompl
sahf
ds
cltd
dec
and
jg
int3
push
jne
ret
push
out
das
js
sub
and
ljmp
mov
xor
cmc
nop
sub
inc
push
adcl
sub
in
dec
adc
fadds
mov
jbe
mov
dec
stos
mov
push
sub
push
adc
insb
pop
mov
and
inc
jmp
pop
pop
dec
push
jmp
sub
adc
shlb
popf
invd
jae
or
ret
push
lahf
into
xchg
cli
adc
flds
cmp
jno
repnz
push
and
mov
clc
movsl
lahf
jno
push
imul
shl
or
push
pop
cld
push
test
or
std
ljmp
jo
adc
add
and
pop
sub
inc
fwait
lret
push
mov
mov
mov
mov
popf
out
lock
adc
movsb
repnz
sbb
push
sbb
add
aas
pop
je
cmp
sbb
add
pop
pop
or
adc
mov
sub
ljmp
adc
add
inc
and
ljmp
mov
mov
mov
sub
pop
cwtl
or
or
je
xchg
mov
cmp
or
push
pop
jne
or
sbb
push
and
adc
push
nop
sarb
mov
mov
jecxz
xchg
adc
int3
push
adc
mov
mov
adc
mov
jge
cmp
cmp
mov
sub
mov
and
jne
imul
out
stc
insl
adc
popf
insb
and
shlb
dec
cld
popf
push
push
push
ljmp
repnz
gs
mov
ret
outsb
pop
ljmp
pop
push
sub
addl
loop
rolb
ds
cmp
add
std
pop
icebp
jle
adc
sub
mov
movsb
inc
and
dec
mov
mov
pop
pop
mov
movsb
shl
xor
aaa
push
call
dec
js
sarl
mov
and
xor
or
xor
mov
pop
add
iret
ret
pop
cltd
mov
enter
add
pop
pop
mov
add
repnz
mov
mov
and
scas
dec
sub
mov
adc
push
mov
sub
adc
adc
andb
andb
cmp
mov
enter
sbb
stos
ja
inc
sub
push
push
mov
cmp
mov
cmp
out
aaa
adc
add
daa
add
leave
xchg
or
ret
std
cmp
or
iret
adc
jge
pop
mov
jecxz
lret
les
dec
stc
mov
xchg
sub
jno
out
fcmovb
test
add
call
pop
cmpsb
imul
ret
out
jne
es
hlt
sbb
or
push
inc
imul
cmp
adc
addr16
mov
push
jmp
push
push
and
dec
or
fldenv
mov
cs
add
ret
daa
mov
pop
and
jmp
aas
push
sub
sti
add
popf
stos
fwait
aam
and
add
cmp
pop
mov
sbb
outsb
sub
adc
sub
rcll
push
out
dec
imul
or
pop
pop
push
mov
bound
sub
test
and
sbb
cmp
fdivrs
aas
sub
sub
xor
pop
adc
cs
dec
pop
aam
adcl
inc
and
xchg
pop
xchg
and
cmp
in
sub
or
dec
nop
and
insl
inc
mov
push
mov
pop
cmpsb
and
and
add
mov
mov
cmp
inc
xchg
lock
jge
adc
xchg
jmp
stos
incl
or
clc
sti
sbb
in
sbb
and
jne
add
add
mov
dec
and
orb
push
mov
xchg
jns
ds
aad
xchg
sub
and
leave
sub
xchg
shr
lods
xlat
hlt
test
out
pusha
push
jle
add
push
xor
pop
cld
shll
lret
sub
sbb
icebp
push
pop
mov
pop
inc
loopne
jne
jmp
push
jl
out
sarb
or
fistpll
xor
push
mov
sbb
incl
add
push
call
js
push
and
push
fldt
pushf
fistpl
popf
sub
sbb
and
adc
or
sbb
out
pop
adc
xor
rclb
jne
scas
push
enter
out
inc
lea
test
mov
fidivl
adc
push
data16
mov
enter
dec
shr
and
pop
sbb
xor
ror
mov
aam
adc
mov
xchg
push
cmp
adc
sub
mov
rorl
pop
push
lret
or
jmp
dec
dec
add
cmc
xor
add
sub
dec
jnp
mov
into
sub
jbe
add
add
shr
or
lea
adc
call
lret
jmp
lcall
or
cmovp
cs
dec
inc
fnstcw
call
mov
inc
cmpsb
sub
arpl
adc
iret
mov
ds
xorl
adc
icebp
movl
clc
adc
out
adc
ja
add
cmp
mov
cltd
popf
pop
dec
xchg
inc
leave
xchg
mov
push
or
sbb
jbe
movsb
push
mov
fldl
cmp
jecxz
pop
rorb
lea
cwtl
xchg
cmp
xchg
xchg
lcall
lods
jbe
rclb
hlt
popf
lret
and
mov
je
mov
loope
adc
mov
negl
je
mov
sub
xor
das
push
mov
mov
mov
jo
fadds
enter
daa
je
lea
adc
adc
cmp
jle
push
and
dec
mov
pop
sbb
xchg
jns
test
sti
mov
dec
mov
sbb
mov
mov
cs
enter
rolb
je
cmpsl
xchg
xor
mov
fstl
daa
xor
sarb
cmp
and
inc
or
push
pop
pushf
bound
or
add
ds
pop
das
je
aam
or
rorl
cmp
mov
sub
adc
mov
and
mov
stc
mov
jmp
roll
mov
call
add
int3
mov
dec
push
stc
ss
adc
fisttpl
push
stos
pushf
jne
scas
lea
mov
xor
push
data16
lods
dec
mov
jp
loopne
xchg
popa
mov
mov
and
ficompl
mov
sti
je
sub
in
mov
in
or
adc
push
mov
push
test
adc
sbb
or
jbe
mov
clc
dec
cmp
xchg
and
hlt
pop
or
push
popf
rcll
pop
pop
mov
mov
mov
mov
rolb
or
adc
ljmp
adc
and
or
add
inc
jmp
or
push
inc
lcall
mov
add
ret
or
jg
sbb
jmp
lea
lahf
push
add
sbb
movsb
and
and
add
call
or
push
and
sahf
lahf
add
movsl
jle
dec
xchg
mov
mov
cmp
sub
inc
push
inc
or
mov
jle
or
sbb
xchg
pop
nop
popf
push
jmp
loope
loop
or
jg
in
pop
pop
mov
popf
or
mov
mov
mov
adc
rolb
or
lret
adc
jmp
jbe
jp
or
sbb
xchg
xchg
leave
jge
jp
xor
jge
mov
push
dec
clc
sub
mov
leave
add
jb
fcompl
mov
or
sub
jno
lret
mov
and
adc
and
and
sub
aad
out
pop
push
outsb
dec
ljmp
lea
mov
xchg
enter
xchg
jmp
lret
int
add
stos
es
imul
bound
and
rolb
std
xor
inc
jmp
shrl
ss
mov
shlb
out
pop
mov
or
arpl
jmp
loope
movsl
sbb
es
fstpt
sbb
mov
jo
gs
jg
ret
mov
icebp
fistps
dec
and
and
rorb
call
jge
jle
cmp
and
push
pop
dec
cmp
jge
add
notb
dec
stos
and
sbb
jg
xlat
xchg
cmp
sub
repnz
rol
movsb
pop
xchg
xor
cwtl
or
dec
popf
in
mov
mov
add
adc
or
adc
sbb
cmp
xor
mov
pop
adc
movsb
faddl
push
lahf
out
pop
pusha
enter
inc
les
les
add
pop
cmp
dec
adc
rolb
sahf
sub
call
push
jb
ret
or
sti
jmp
mov
dec
rorb
or
stc
rcll
mov
xchg
or
jno
arpl
mov
mov
xchg
or
subl
push
push
and
inc
and
pop
xchg
mov
insb
data16
adc
cmp
cmpsl
enter
pop
in
and
lea
mov
inc
mul
imul
xchg
xchg
lcall
cmp
gs
push
and
cmpsb
insl
sub
shr
enter
sbb
or
jge
cmp
inc
nop
add
hlt
pop
int
stos
aam
scas
xor
dec
fcmovnbe
lods
cli
cld
jg
lret
icebp
sub
push
xor
add
rcrl
jg
shlb
inc
into
dec
data16
jmp
push
call
imul
inc
clc
icebp
xor
xor
xor
mov
aad
in
adc
lock
dec
out
out
add
inc
sbb
or
out
addr16
lea
cli
and
dec
pop
xor
sbb
push
jae
jb
mov
bound
xor
and
inc
daa
xor
adc
push
call
pop
adc
imul
lock
sbb
test
insb
call
aas
invd
cmc
or
lods
outsb
roll
dec
sbb
test
xor
sub
inc
and
lea
sbb
xchg
sub
ja
fisttpll
dec
loopne
mov
fadd
pop
andl
data16
push
jmp
sub
std
xor
lret
push
lock
leave
adc
sti
push
or
sbb
sbb
add
and
push
and
jno
pop
mov
and
rcll
sbb
or
adc
or
ljmp
or
rorl
ljmp
inc
mov
add
sub
lret
stc
jl
int3
rorl
cmp
adc
inc
clc
add
push
cmp
outsb
in
xor
lds
lods
pop
xchg
add
test
adc
lret
or
testb
push
add
dec
call
lods
pop
mov
mov
adc
push
push
mov
enter
adc
rolb
cmpsl
dec
sub
in
imul
sub
cwtl
and
pusha
in
xchg
bound
movsb
outsl
sbb
adc
jmp
shlb
movsl
lock
and
imul
mov
jmp
inc
lea
push
push
rorl
popf
mov
in
lds
xor
add
add
sbb
dec
std
dec
ja
cmp
pop
adc
add
sub
sub
add
jmp
or
cs
push
xchg
mov
dec
andb
push
test
clc
sbb
xchg
and
hlt
jns
push
dec
mov
fsubp
xor
dec
nop
pop
dec
mov
test
mov
addb
add
push
jne
and
mov
dec
jae
js
mov
cmp
adc
or
mov
outsl
scas
sbb
or
inc
ljmp
jmp
cmp
sbb
xchg
ret
jge
adc
jmp
movb
inc
fimuls
pop
jne
mov
rclb
pop
dec
in
inc
aam
cli
xchg
pop
sbb
mov
pop
popl
mov
inc
mov
jmp
sub
jno
jne
cmpb
enter
jmp
push
xchg
leave
nop
cmp
sbb
je
js
shlb
jb
and
je
hlt
push
test
inc
in
js
sub
jge
xchg
std
cmp
push
inc
xor
bnd
cmpsl
ja
outsb
rorb
pop
push
jns
push
sbb
push
sbb
ds
xor
adc
movsl
scas
adc
dec
mov
and
mov
pop
ret
jne
test
and
mov
and
rolb
add
mov
push
scas
stc
repnz
mov
sbb
xor
xor
sarb
add
pop
jmp
push
sub
in
dec
mov
sub
int3
jl
xor
scas
mov
sub
add
push
mov
shrl
jb
mov
dec
hlt
xchg
adc
mov
into
cmpl
mov
inc
hlt
test
hlt
shr
daa
leave
int3
pushl
adc
movsl
ret
sbb
jl
fcoms
inc
loop
and
scas
or
push
std
xor
jmp
add
cmpl
pop
movsb
sub
ret
pop
mov
or
add
adc
mov
mov
or
decl
xor
js
imul
ret
push
adc
add
dec
out
mov
jge
ret
mov
ja
and
rorb
xchg
out
sbb
outsb
insb
push
mov
jne
aad
sub
jmp
mov
xchg
cld
sub
adc
pusha
ror
mov
lahf
into
out
out
insb
and
fs
std
push
test
push
pop
dec
dec
jae,pt
ret
mov
add
inc
lahf
imul
pop
push
negb
bound
lods
jmp
sbb
or
inc
sbb
or
adc
call
xchg
jl
in
push
mov
lcall
sbb
add
int
sub
sti
fsts
insb
les
xor
leave
stc
jle
outsb
fnstcw
adc
je
inc
call
fwait
xchg
cld
xchg
lret
clc
push
lea
or
inc
add
mov
and
dec
iret
out
sbb
pop
movl
hlt
xor
xor
dec
inc
popa
mov
rcll
sub
notl
lahf
pop
shl
fs
xchg
jle
les
or
iret
jl
add
setb
mov
leave
lcall
push
adc
mov
sub
sub
clc
and
push
pop
faddl
icebp
sub
sub
outsb
ret
xchg
jle
jo
cmp
hlt
mov
cs
fstpt
mov
xor
cmp
jp
into
stos
mov
cmpsl
xor
adc
jne
jmp
adc
sub
fsubrs
fmuls
call
icebp
xor
mov
adc
cwtl
cli
push
or
std
ja
and
lahf
out
jno
mov
sub
xor
js
in
into
add
test
add
shr
or
cld
dec
mov
cmpsl
scas
ljmp
sbb
push
fbstp
mov
repnz
mov
cmp
or
mov
sbb
jae
pushl
cltd
and
dec
or
dec
sub
and
add
addb
jbe
push
xlat
mov
lock
dec
call
int
or
push
add
pop
mov
xlat
fstpt
movsbl
loope
je
sbb
cmp
pop
jne
enter
xchg
pop
fldt
les
mov
mov
mov
cmp
incb
jmp
xchg
pop
xorb
hlt
mov
mov
out
clc
mov
inc
sbb
pop
jp
sub
mov
insb
and
push
test
push
mov
or
inc
out
mov
adc
and
dec
jmp
in
and
and
sti
das
out
aas
jae
xchg
sar
ljmp
pop
or
cwtl
shlb
xchg
or
inc
jl
adc
mov
or
inc
add
xor
imul
in
mov
cs
xchg
clc
jmp
maskmovq
lahf
sub
pop
push
jmp
xchg
or
xchg
clc
shlb
and
push
and
cmp
mov
outsb
in
pop
roll
outsb
mov
push
jb
inc
pop
loope
or
push
jmp
adc
or
cmpsl
or
sub
add
dec
subb
cli
imul
dec
pop
jge
dec
mov
in
mov
inc
fdiv
movswl
neg
mov
sub
jge
jmp
aas
jb
sub
inc
xchg
sbb
cmpsb
jmp
push
neg
sbb
nop
xor
or
insl
add
sub
jge
les
pop
add
ret
or
or
mov
push
cmpsb
or
jne
lock
fiadds
push
or
movsb
outsl
or
fisubrl
jle
lods
scas
ret
bound
adc
or
cld
mov
lret
or
bound
adc
lret
xchg
movlps
addr16
mov
mov
cmp
xor
xor
ljmp
or
icebp
and
add
data16
cmp
decb
sub
sub
mov
push
or
or
add
gs
popa
or
xor
xchg
pop
hlt
flds
nop
xor
loop
shrl
add
cmp
mov
in
sub
or
xor
and
adc
and
mov
or
mov
popf
jg
inc
lods
psubd
mov
movsl
aas
aas
cmpsb
es
dec
cmp
mov
jg
jne
fs
sub
jecxz
sti
or
mov
and
xchg
outsb
push
test
push
add
cmp
cmp
cmpsb
add
jecxz
jl
in
push
pop
jmp
xchg
cwtl
and
lods
or
sarb
inc
sub
lods
hlt
lds
decl
in
mov
scas
rcrl
push
mov
cli
in
jg,pn
cld
sti
xchg
push
je
cmp
jp
dec
call
fistl
mov
sbb
sub
pushf
int
or
rorb
nop
in
jle
cwtl
pop
sub
add
fs
or
ljmp
loop
pop
cmp
sub
mov
into
or
push
inc
mov
dec
mov
dec
ljmp
sarb
pop
iret
js
sbb
mov
fisubs
sbb
jne
xor
sub
movsb
xlat
ret
inc
loop
adc
in
ret
xor
out
mov
cmp
push
jmp
sbb
adc
fimuls
sbb
pop
ds
or
push
push
push
adc
or
sbb
push
xchg
jmp
cmp
fbld
push
je
xlat
les
fmuls
andl
push
bnd
mov
push
insb
leave
jmp
test
mov
xchg
repnz
push
pop
adc
stc
shlb
inc
and
adc
cmp
xchg
loopne
add
mov
cmp
mov
popf
dec
sub
hlt
in
idivb
call
pusha
leave
mov
mov
sbb
pop
lahf
out
mov
pop
sub
testl
loopne
fistpl
jnp
xchg
sbb
das
mov
jge
dec
je
cmp
dec
into
je
clc
cltd
cmp
adc
movsb
shlb
dec
les
xor
mov
push
call
mov
das
fsts
les
jns
sbb
jbe
or
or
idiv
inc
pop
hlt
dec
cld
rclb
outsb
test
or
jae
daa
roll
inc
shl
or
aaa
xchg
rclb
popa
pop
pop
xchg
sub
into
adc
or
adc
hlt
arpl
es
and
or
mov
or
dec
movsb
aas
push
xchg
adc
sub
testl
push
jae
pop
mov
aam
fistpl
aam
fmuls
pop
or
sub
and
xchg
xor
les
hlt
iret
movsl
shl
mov
and
jp
xor
fisubl
or
adc
ja
inc
js
pop
add
dec
lods
jg
cltd
mov
decl
das
jge
push
and
lret
xlat
dec
push
push
call
ret
inc
mov
inc
leave
mov
mov
in
pop
push
pushf
dec
inc
mov
int3
or
cmpsl
test
dec
jo
mov
in
lock
arpl
lods
ds
inc
cwtl
pop
loop
mov
repz
lcall
iret
cmp
or
sub
mov
pop
imul
sbb
xor
imul
cld
xor
pand
xor
jmp
xor
and
xchg
shll
xor
cmpb
dec
incb
push
fimuls
adc
pop
rclb
sub
icebp
movhps
sbb
and
notl
mov
ss
and
popa
lcall
pop
stos
int3
push
xchg
inc
andl
or
push
sub
sarb
mov
call
clc
jl
sub
orl
push
inc
sahf
add
jne
movsb
inc
clc
mov
sub
fimull
es
call
dec
and
push
addr16
jae
lock
shlb
push
inc
pop
cmc
jns
push
jl
cmpsl
and
inc
mov
mov
inc
mov
adc
inc
movsl
repz
xor
js
and
ficomps
fs
cmp
mov
cli
rolb
push
cmp
jg
mov
xchg
sbb
add
push
pop
cmp
loope
and
cld
rclb
in
mov
pop
repz
or
jecxz
scas
mov
fmull
xor
test
adc
neg
rclb
inc
cmp
and
sahf
sub
xlat
cmpsl
clc
cmp
cmp
je
jg
mov
sahf
fs
lcall
subb
cld
movsl
rclb
xchg
daa
enter
call
inc
inc
mov
loope
scas
xchg
push
jne,pn
and
push
inc
insb
sbb
aaa
test
jb
nop
cmp
sub
add
push
mov
sub
xor
movl
add
pop
xor
test
mov
hlt
inc
inc
arpl
pop
xor
je
xchg
or
jae
mov
push
dec
add
fnstcw
or
mov
lock
xchg
jg
or
inc
test
sub
xchg
or
xchg
enter
sar
or
adcl
cmp
imul
je
adc
adc
pop
xchg
sbb
inc
cmp
ss
popa
in
bound
cmc
or
sbb
sahf
adc
sbb
pop
shll
pop
push
push
pop
push
sub
in
inc
push
xchg
es
cltd
daa
lock
jge
aam
out
xchg
and
aam
call
repz
mov
adc
mov
xchg
out
outsl
es
cmpl
pop
or
idivb
adc
popa
mov
ret
push
jge
ret
push
fisttpll
nop
popa
sbb
push
decl
pop
inc
sbb
inc
xchg
adc
jmp
mov
lahf
aam
mov
push
xchg
and
addr16
add
or
jmp
mov
leave
in
jmp
jl
js
xchg
push
in
out
cmp
in
push
add
or
lods
mov
jecxz
adc
inc
xchg
mov
hlt
cwtl
lock
decb
jne
xchg
inc
pop
and
hlt
inc
in
cmpb
push
pop
xor
movsl
ss
popa
test
mov
add
mov
inc
adc
imul
or
or
lock
adc
jg
push
and
pop
je
lret
lock
cmc
mov
adc
sbbl
mov
imul
sbbb
push
pop
push
lock
nop
jl
int3
push
aaa
push
rcrb
into
dec
ret
ss
sbb
fcoms
mov
clc
inc
adc
loope
sbb
pop
inc
inc
call
xchg
and
push
lods
ret
push
push
push
movb
adc
inc
stos
fstpl
nop
inc
test
mov
inc
mov
jo
mov
test
cmp
scas
xchg
mov
pop
pushl
subb
xchg
hlt
add
mov
dec
or
jl
add
mov
xchg
cmp
mov
xor
sub
adc
pusha
xchg
pop
or
xchg
inc
pop
xchg
inc
mov
inc
punpckhbw
fidivrs
sbb
add
lods
or
call
push
adc
and
daa
add
push
sbb
mov
and
inc
fwait
add
mov
or
ljmp
insl
call
pop
adcb
loope
dec
lret
xor
push
pushl
js
int3
dec
pushf
sub
enter
push
stos
inc
jae
inc
xor
sbb
mov
scas
sub
push
loopne
cmp
sub
cwtl
sub
notb
jne
mov
pusha
imul
add
xchg
mov
add
jae
jmp
inc
test
cmp
cmpl
push
cwtl
push
call
jge
adc
andl
fstl
cwtl
dec
movsl
shrl
inc
or
push
and
push
stos
xchg
jg
minps
cs
add
mov
cmp
lret
inc
ljmp
add
dec
in
push
xor
inc
jnp
in
bound
dec
mov
test
cmp
rolb
xlat
and
fs
mov
or
call
add
fs
mov
xor
fbld
inc
push
pop
cmp
adcl
sbb
js
cwtl
sbb
adc
jo
mov
pop
inc
or
adc
and
push
inc
adc
sbb
sbb
js
pushf
push
push
lret
test
lcall
and
xchg
out
add
xchg
inc
push
xchg
or
xor
mov
xor
adc
push
add
ret
mov
or
lds
dec
or
cmp
ljmp
xchg
mov
movsb
inc
pop
movsl
inc
sub
cmpsb
and
cli
cmpsl
adc
mov
jl
nop
fsubl
imul
sbb
test
inc
or
test
rclb
xlat
inc
clc
cmp
push
push
push
adc
and
dec
stos
jmp
add
push
push
inc
and
adc
or
call
clc
mov
adc
mov
pop
or
add
pop
mov
push
or
pop
dec
add
and
push
pop
mov
lods
addl
dec
or
mov
outsl
cmp
adc
xchg
imul
ljmp
push
add
in
inc
add
lea
pusha
cs
pop
jo
aad
adc
xchg
arpl
mov
adc
cmp
cwtl
mov
push
adcl
jo
pop
fisubrl
adc
adc
sub
or
roll
inc
push
aad
bound
or
movsb
cltd
pop
daa
jne
test
mov
sub
jmp
and
movsb
out
inc
and
dec
sbb
or
dec
into
ror
daa
fdivs
or
and
jp
mov
push
out
nop
add
pop
xor
cmp
cmp
scas
sbb
add
inc
push
sbb
push
pop
das
xor
jb
sti
jne
xor
xor
or
js
mov
or
adc
bound
sbb
test
addr16
adc
mov
or
out
add
and
jmp
cmp
dec
testb
and
mov
ja
sbb
and
xor
inc
nop
dec
lret
lea
gs
mov
cltd
imul
jp
xchg
adc
jl
xchg
xchg
mov
fs
dec
or
or
shr
aam
aaa
adc
dec
jnp
dec
nop
fsubrs
dec
loope
jmp
push
pop
les
idivb
pop
movsb
cwtl
into
pop
xchg
test
push
repnz
adc
dec
int
adc
shr
sbb
clc
pop
xlat
or
popf
pop
cmp
enter
insb
or
adc
adc
repz
faddl
inc
pop
lock
sbb
dec
and
cmc
fwait
scas
addr16
in
data16
shl
push
adc
jae
mov
lret
push
popf
push
push
sbb
or
or
push
fbstp
or
fimull
ss
lcall
add
clc
test
repnz
cltd
pop
clc
das
sub
insb
ret
xor
xchg
leave
or
aam
or
sub
aad
push
shlb
and
pop
mov
idivb
enter
pop
cld
and
aam
or
sbb
sub
adc
or
sbb
sub
or
ljmp
scas
sbb
gs
jge
lahf
leave
popa
adc
out
das
addr16
fsubs
or
fdivrl
lea
std
adc
adc
adc
inc
hlt
xor
fsub
loope
and
in
fldcw
inc
push
loopne
mov
leave
inc
clc
bound
mov
fsubs
mov
sbb
and
loope
or
or
jmp
pop
sub
xchg
or
adc
or
add
lds
sbb
or
cli
cmpsb
inc
bound
call
lahf
dec
shlb
xor
pop
mov
push
jno
dec
movswl
mov
test
xchg
add
adc
adc
aaa
pop
jle
jno
insb
sbb
fadd
loope
out
xchg
mov
pop
stos
cmp
mov
test
mov
and
push
dec
xchg
lods
sbb
mov
dec
or
dec
pop
pop
test
jno
pop
and
sub
inc
push
push
insl
adc
xchg
dec
ret
inc
jbe
adc
test
cli
push
cmp
mov
add
mov
push
mov
call
es
sbb
cmp
cmp
sub
sbb
adc
adc
jno
mov
sbb
ss
std
jno
in
mov
jle
sub
and
xchg
add
lea
repnz
or
aaa
data16
jne
cmp
jns
adc
pushf
sub
sar
mov
adc
in
fisttpl
add
xlat
pop
or
dec
inc
xor
es
pushf
inc
bound
shrl
sahf
or
xchg
mov
rorb
rcrb
test
mov
or
xor
cmp
negl
xor
adc
push
imul
fldt
or
xor
push
stos
lret
in
xor
sbb
je
pusha
cmpsb
pop
dec
ja
adc
aam
xchg
inc
dec
mov
jl
cmovno
xor
cmp
mov
or
xor
cmpb
pop
test
push
and
iret
into
cmpsl
sbb
in
scas
int3
push
pop
sub
and
call
lea
rep
pushf
push
xchg
je
mov
insl
jae
jae
push
jae
cli
lea
xchg
sbb
mov
sbb
sbb
and
aam
inc
fldenv
sbb
push
dec
mov
dec
mov
mov
xor
mov
maxps
pop
dec
inc
inc
out
mov
insb
bound
mov
and
add
scas
and
jmp
add
or
adcl
ja
je
push
stos
push
xchg
mov
push
xchg
jb
test
sbb
jl
ss
mov
push
arpl
testl
in
lods
clc
pop
push
mov
mov
in
popf
adc
pop
mov
xor
call
pop
mov
scas
xchg
jg
repz
cmp
imul
push
add
jle
or
or
cmc
adc
pop
lds
jne
cwtl
adc
jg
sbb
pop
push
or
loope
or
adc
adc
xor
test
push
daa
cmp
inc
pop
test
xchg
xor
jbe
pop
lcall
pop
daa
pop
xchg
add
pop
cmpsb
fisttps
dec
mov
push
add
jo
movsl
inc
add
or
jne
push
aam
jle
adc
add
adc
scas
and
lock
lret
pop
dec
mov
add
or
int3
adc
divl
jp
mov
jne
push
out
inc
push
call
fisttpl
jle
enter
push
stos
jg
mov
rol
rcll
push
movd
sub
cltd
and
enter
push
test
insb
mov
push
jnp
out
mov
ret
imul
shlb
outsb
movsl
dec
cmp
and
adc
lock
fdivrs
push
and
xchg
pop
arpl
mov
sub
rolb
push
cmp
out
sub
mov
push
mov
lret
pushf
aas
inc
and
icebp
je
faddl
movsb
dec
pop
add
in
dec
in
lock
sarl
cltd
pop
inc
lahf
sub
adc
add
jge
sub
int3
xchg
xchg
mov
stc
pop
ret
mov
add
sub
sub
nop
test
inc
jnp
imul
loope
add
ret
fnstenv
cwtl
adc
push
xchg
adc
sub
sub
or
lcall
shr
or
es
orb
jg
sub
push
adc
add
jns
inc
cmp
sub
inc
mov
adc
sub
jp
xor
test
sbb
test
sub
test
jge
lcall
xor
lea
loopne
jecxz
mov
mov
test
dec
mov
mov
inc
and
shll
lea
xor
aas
add
xlat
shl
push
dec
jno
pop
mov
or
test
dec
dec
jb
stos
xchg
loopne
jne
mov
or
addr16
insb
dec
test
pop
call
jl
ja
push
sub
xor
mov
pop
mov
pop
movsl
cmpsl
xchg
icebp
sti
ss
sub
ret
je
sub
and
xchg
jbe
sbb
sub
inc
pushf
dec
adc
enter
push
cmpl
loope
jb
fs
enter
lds
push
mov
repnz
imul
pop
mov
adc
les
lods
inc
sub
pop
xchg
filds
lea
sbb
aas
mov
push
testl
mov
nop
jg
shl
xor
sub
std
mov
jno
shl
ss
adc
jg
inc
rorl
fstl
mov
xor
or
call
and
xor
movsb
xor
jns
lods
xor
out
pop
jl
xchg
adc
sbb
or
arpl
jns
adc
bnd
push
xor
dec
inc
pop
inc
test
dec
cli
pop
sub
mov
push
adcb
jo
popf
inc
shll
sub
cmp
movl
shrb
or
add
add
dec
mov
and
jne
mov
xor
adc
aas
sub
test
xchg
pop
mov
cltd
push
xchg
adc
dec
imul
lds
adc
add
cmp
adc
sbb
icebp
xor
stos
cwtl
cld
call
aad
lock
sbb
lret
shrb
sub
gs
pop
push
arpl
inc
sbb
sbb
lods
test
lea
dec
mov
hlt
jl
and
daa
pop
shrb
dec
jne
pop
inc
iret
or
fmulp
mov
sub
push
dec
adc
xor
aad
pop
divl
mov
inc
adc
mov
mov
push
stc
and
jge
mov
mov
push
je
and
jo
cwtl
cmp
lahf
hlt
pop
jp
jl
adc
inc
or
pop
leave
das
xchg
mov
in
pop
and
dec
loope
sub
movsl
mov
push
push
stos
or
xchg
jmp
or
test
mov
cli
xchg
addl
dec
xchg
lea
cmp
shlb
xchg
or
call
adcl
xorl
ret
ret
nop
shlb
xor
jne
inc
dec
arpl
cli
popf
pop
cwtl
jle
leave
inc
sub
fistl
pop
or
repz
cmp
jae
dec
push
dec
cmp
inc
inc
sub
mov
gs
push
imul
inc
jmp
and
stos
test
repz
cmp
aas
repnz
mov
decb
cmp
rorl
les
xor
mov
jecxz
push
cmp
cmp
mov
or
stos
int3
cmp
sub
adc
mov
inc
cmp
data16
pop
adc
xor
les
call
idiv
inc
nop
inc
rorb
rclb
inc
sub
test
push
int3
shll
jne
test
dec
cld
push
std
loope
loop
data16
adc
outsl
lock
fmull
pop
inc
add
frstor
clc
jne
cltd
mov
sbb
mov
dec
test
pop
dec
lsl
rclb
jmp
nop
rcll
scas
inc
pop
shlb
clc
rorb
cmpsb
xor
push
cld
mov
mov
ss
std
mov
jns
movsb
mov
fwait
cltd
and
dec
mov
stos
mov
and
jns
jg
or
call
jmp
push
icebp
dec
out
inc
popf
cmp
add
dec
sbb
mov
sub
push
and
xor
push
scas
cld
fucomi
mov
xor
lea
outsl
in
mov
mov
push
mov
mov
xchg
add
xchg
sbb
out
sub
and
adc
mov
data16
and
scas
addb
sbb
mov
jmp
jecxz
or
pushl
and
jmp
dec
iret
jmp
inc
and
or
sarl
add
xor
inc
pop
jmp
adc
mov
mov
movsl
das
or
insl
cs
gs
inc
push
and
int
mov
add
and
les
fwait
cmp
pop
out
sbb
push
mov
shrd
dec
popa
mov
mov
xchg
xor
mov
les
adc
cmp
mov
sbb
inc
mov
inc
sub
or
scas
jbe
cmp
pop
add
inc
jo
pop
inc
adc
outsb
mov
cmp
push
imul
or
jne
addr16
call
push
add
aam
or
shll
jg
lock
jle
dec
nop
addr16
int
pop
pop
mull
sub
mov
fisubl
adc
mov
push
xchg
xchg
cltd
jle
stc
xchg
aaa
psrad
mov
lods
push
mov
movsb
int
push
adc
dec
mov
int3
and
out
mov
add
psubusw
int
jb
cmp
ror
mov
pop
push
mov
adc
inc
push
push
add
mov
jne
into
bound
adc
in
imul
pop
inc
pop
push
add
adc
mov
pop
pop
les
movsbl
fildl
sbb
ret
aad
mov
push
or
mov
popa
inc
push
add
and
sbb
push
adc
adc
std
js
push
mov
xchg
es
adc
call
inc
fs
ret
push
sti
imul
andb
cmp
mov
cmp
xor
mov
outsl
and
mov
stc
xsha256
cmpsb
rcrb
jge
jne
fwait
and
out
mov
jb
daa
xchg
xor
or
push
je
or
imul
into
or
push
mov
and
dec
stc
popf
inc
in
loop
fnsave
mov
scas
push
cld
icebp
and
and
push
sbb
sub
data16
ss
pop
lret
sub
mov
add
jecxz
mov
in
mov
and
rorb
pop
pop
test
negb
jmp
cmc
push
mov
sti
sbb
mov
cwtl
adc
leave
std
xchg
mov
jnp
inc
mov
inc
and
repnz
sbb
cmpsb
clc
fstps
notb
je
xchg
js
and
or
mov
shrb
mov
js
out
push
mov
mov
dec
pop
xchg
sti
dec
add
cld
fisubl
shll
and
sbb
rolb
mov
adc
stc
push
cltd
gs
and
bound
flds
xchg
inc
mov
js
dec
fiadds
xor
leave
aam
and
or
xchg
iret
jge
fbld
decb
lea
push
mov
ja
sbbb
push
gs
stc
cmp
mov
and
dec
jge
dec
cwtl
push
sbb
dec
out
fwait
enter
lret
mov
les
ret
add
add
movzbl
incb
imul
lds
pop
pop
xlat
pop
cltd
adc
adcb
repz
mov
sbb
push
push
nopl
loopne
ret
jle
or
xchg
mov
push
mov
push
sub
aam
sbb
ja
jb
dec
mov
inc
stc
mov
or
push
mov
or
mov
dec
push
jne
clc
fucomp
test
cld
push
sbb
jge
sbb
mov
addr16
lea
aas
daa
js
rclb
jmp
and
inc
mov
lock
or
test
jbe
xchg
fwait
mov
pop
test
or
lods
push
mov
xchg
inc
jg
xchg
addb
inc
testb
cmp
ja
cmp
imul
iret
fnstenv
aam
fidivl
sub
inc
xor
je
ss
push
or
push
sbb
mov
sbb
sbb
insb
fsubl
je
repnz
mov
in
lock
push
fimuls
and
popf
xchg
jl
iret
inc
enter
imul
test
dec
pop
out
jmp
jae
rclb
dec
sbb
xor
mov
shl
sub
jno
in
dec
add
faddl
jae
mov
sub
out
cltd
and
scas
movsb
inc
dec
cmpsb
lea
and
lret
call
inc
lret
push
xchg
push
hlt
or
cmp
xchg
enter
inc
loopne
sub
repnz
or
and
fldl
xchg
pusha
dec
jo
je
xchg
jp
inc
sbb
hlt
adc
inc
jne
jmp
inc
fmuls
cltd
mov
mov
rol
ljmp
or
std
jg
cmpsb
dec
mov
cmp
out
imul
jmp
jle
or
aam
pusha
push
hlt
push
push
and
dec
xchg
mov
insb
mov
repnz
clc
inc
dec
adc
ficoms
pop
push
sbb
mov
das
xchg
aad
loop
push
xchg
push
sub
inc
dec
das
or
xchg
push
xchg
lods
leave
bound
cmp
cmp
bndldx
cmp
cltd
cmp
lret
push
sub
leave
or
xchg
jg
aad
mov
pushf
push
fnsave
dec
mov
xor
scas
loop
inc
sub
mov
cwtl
sti
test
out
dec
dec
ret
cwtl
dec
inc
test
in
jbe
cltd
and
movsb
leave
fs
leave
lods
jo
je
gs
addb
enter
pop
and
mov
lea
or
mov
dec
mov
cs
adc
cmp
pop
movsl
sub
in
movsl
sbb
push
mov
xor
adc
into
test
or
clc
xchg
rclb
add
mov
dec
sub
ds
push
push
iret
das
pop
push
or
mov
test
push
stc
adc
jmp
out
gs
dec
testb
in
jp
das
push
pop
jb
xchg
lret
cmpsl
xlat
mov
inc
testb
iret
sbb
sub
ja
dec
push
push
pop
inc
pop
jbe
inc
aam
in
daa
or
jle
imul
or
outsb
xchg
addr16
daa
jns
cmp
push
inc
mov
in
fildl
mov
inc
adc
orb
lret
je
cmp
pop
jmp
mov
dec
add
fwait
imul
dec
inc
sbb
leave
adc
inc
and
adc
add
aas
pop
sbb
or
jmp
pop
repnz
add
and
adc
jp
orb
xchg
test
in
lock
mull
sub
push
mov
add
je
dec
ja
xchg
and
lret
fcoms
fs
pop
and
dec
sub
mov
push
push
or
fstpl
jbe
mov
pop
flds
and
jno
dec
ret
pop
push
fwait
adc
imul
push
daa
adc
loope
pop
mov
dec
pop
sbb
aam
add
aaa
mov
test
movsb
out
inc
or
ds
in
mov
in
xchg
stc
add
shl
mov
xchg
inc
or
inc
shlb
loope
je
xchg
cli
pop
pop
sub
jge
adc
sarb
lret
pop
test
test
in
add
adc
cmp
jae
push
aam
adc
adc
stos
add
xchg
jns
sbb
repz
sbb
sbb
and
pop
xchg
out
lcall
push
and
mov
xchg
daa
xchg
or
sbb
inc
jo
push
adc
and
test
pop
push
scas
movsl
mov
ret
sbb
gs
fmul
or
jle
inc
in
dec
inc
or
scas
test
inc
call
xor
rolb
in
movsl
adc
mov
dec
dec
int3
movsb
pop
nop
pop
mov
push
scas
mov
mov
push
sbb
insl
imul
in
loopne
ds
pop
call
das
push
mov
push
daa
push
push
dec
pop
cmpsb
adc
mov
inc
mov
or
and
fnstenv
xor
or
adc
cld
sahf
xlat
dec
mov
and
or
call
ficoml
daa
mov
hlt
mov
cmp
push
or
mov
orb
dec
rcrl
mov
leave
orl
or
leave
xlat
add
scas
pusha
incl
push
push
push
ljmp
in
xchg
mov
lock
aaa
dec
mov
mov
sbb
mov
ret
movsb
lret
mov
xchg
cmp
adc
sub
xlat
and
push
fs
icebp
pop
int
cmp
adc
inc
inc
xchg
mov
out
mov
and
push
popa
stos
lds
aad
es
call
neg
adc
cmp
and
xchg
insl
add
xchg
adc
sub
mov
push
adc
roll
in
fld
mov
test
movsb
in
or
and
repz
push
js
jge
imul
and
jae
xor
mov
les
adc
lcall
pop
bound
add
and
dec
test
xor
adc
mov
testb
dec
inc
xchg
outsl
jno
sub
or
push
ljmp
xchg
mov
xchg
sahf
popa
and
push
notb
in
jge
xchg
fdivl
adc
sub
movaps
lret
and
jge
inc
cltd
adc
push
dec
stc
dec
lea
and
dec
dec
or
or
push
pop
sub
pop
cld
add
je
push
lds
es
pop
call
sti
adc
lahf
jge
push
dec
push
sub
pusha
call
xchg
push
sti
outsb
ja
mov
sbb
int3
fdiv
jbe
repz
mov
lds
outsl
mov
xor
or
mov
xor
or
movsb
push
arpl
daa
scas
jo
ds
sub
in
mov
jae
dec
inc
or
test
inc
cmp
daa
hlt
dec
ds
in
pop
pop
dec
mov
push
in
push
adc
test
fldl
dec
rcll
sub
inc
jecxz
push
jp
or
push
sbb
adc
cmc
and
and
outsl
sti
insb
fwait
mov
mov
es
adc
add
lcall
daa
inc
xor
mov
jne
cwtl
and
add
js
enter
add
xchg
mov
add
clc
push
and
enter
push
call
mov
fisubrl
xchg
dec
and
and
mov
mov
enter
int
mov
push
out
sub
imul
mov
sub
loopne
push
sub
adc
orb
fsubrs
mov
dec
push
rclb
lahf
adc
cmpl
dec
ja
adc
add
lock
push
pop
inc
outsb
lret
pushf
negb
je
cmpw
push
ds
rorl
fcmovbe
sbb
or
xor
or
add
add
jne
stc
mov
pop
int3
fs
out
fnsave
add
and
xchg
pop
dec
ret
icebp
cmp
lea
cwtl
mov
fadds
adc
and
dec
xor
daa
adc
jle
outsl
je
cmp
sbb
test
ret
lods
jle
or
jns
xchg
push
add
jns
and
xor
mov
or
or
jnp
mov
push
in
push
and
dec
xor
ds
mov
and
cmpsb
idivl
jmp
adc
mov
cltd
daa
push
test
jmp
push
call
and
and
nop
sbb
sub
and
and
pop
mov
lcall
and
inc
mov
xchg
or
fdivl
js
adc
not
and
or
cmp
arpl
sub
icebp
inc
sbb
aad
shll
push
push
jecxz
add
jg
jg
push
or
ret
sbb
xchg
dec
fsubrl
adc
sub
mov
cld
iret
jmp
out
adc
push
mov
inc
jb
test
pop
mov
cmp
or
cmp
lock
pop
test
mov
out
inc
js
add
sub
leave
pop
jge
lods
mov
mov
mov
push
jb
pop
jne
pusha
sub
inc
incb
sbb
jge
inc
dec
iret
jno
sahf
sbb
insl
or
test
dec
clc
rolb
xor
jmp
inc
std
mov
int
outsb
clc
push
dec
repnz
xlat
or
adcl
inc
or
mov
jbe
mov
pop
mov
dec
int3
and
mov
xchg
sub
test
add
cmp
je
push
sahf
loope
push
xor
repz
xchg
sbbb
mov
or
inc
adc
insb
dec
adc
jns
out
wbinvd
fsubrs
hlt
pop
sbb
lret
inc
xor
xchg
pop
into
add
xchg
dec
jmp
fucomi
prefetch
add
cmp
inc
out
cmp
mov
xor
xor
test
cmp
clc
aad
cli
pop
out
les
iret
fstpl
pop
nop
sbb
daa
dec
add
jne
xchg
sub
sub
mov
xor
test
push
imul
mov
das
push
adc
push
insb
lea
add
fs
call
out
mov
pop
mov
jnp
shrb
shlb
outsb
mov
mov
inc
movswl
cs
xor
dec
or
aaa
inc
jl
mov
push
mov
inc
cmp
pop
cmp
and
mov
inc
or
xchg
cmc
dec
jnp
shll
adc
pushf
jecxz
ds
rorl
roll
adc
inc
sbb
pop
aaa
ror
rcl
mov
adc
scas
sub
imul
repnz
adc
cld
data16
jno
fildll
jno
dec
js
pop
fcomi
fildll
push
inc
xor
clc
negb
lea
jnp
pop
add
jle
push
add
dec
jle
hlt
je
cmp
dec
idiv
and
xchg
imul
dec
in
cmpsb
rolb
aam
pusha
add
mov
das
xor
test
cltd
and
es
cmp
aas
cmpsl
adc
jp
push
enter
dec
adc
fwait
hlt
pop
mov
mov
push
or
shr
inc
cld
call
inc
xor
dec
fisttpll
cs
push
imul
scas
ljmp
lods
sbb
mov
bound
sub
inc
and
adc
addr16
dec
mov
sbb
icebp
fwait
dec
adc
sub
and
dec
in
fwait
jo
adc
call
xchg
cmpsl
mov
mov
aas
out
test
adc
mov
push
xchg
ret
jmp
std
xor
or
or
push
and
pop
pop
inc
mov
mov
and
cmc
fidivl
mov
jl
adc
shr
sub
mov
fs
mov
cmp
stc
inc
mov
mov
mov
test
jg
lods
dec
and
inc
cmp
and
or
cmpl
or
xorl
popf
add
xchg
call
xchg
sbb
xor
sub
sub
mov
loope
repz
je
or
inc
and
sub
xchg
sub
jmp
or
call
mov
stc
std
pop
push
sti
clc
js
jae
aas
inc
and
loop
imul
adc
xchg
jnp
dec
dec
sub
jecxz
xor
inc
inc
mov
fstl
sub
dec
jne
and
mov
fisubrl
std
fucomi
xor
dec
paddusw
imul
xor
mov
mov
int3
std
mov
cmc
dec
popa
jmp
mov
xlat
cmp
or
jg
push
dec
lods
jno
outsl
add
and
mov
es
adc
or
mov
push
neg
sbb
inc
cwtl
sbb
xchg
push
rorl
jmp
jne
and
les
jno
cmp
and
add
push
jmp
scas
sbb
mov
mov
xor
push
call
shll
dec
jne
cltd
into
jno
mov
adcl
cwtl
push
mov
imul
add
inc
icebp
pop
push
adc
or
aam
mov
dec
outsl
push
repnz
push
jl
dec
lock
jle
sbb
push
jne
cmp
mov
jecxz
inc
mov
clc
iret
dec
ret
pop
mov
and
jnp
scas
cmp
jg
js
adc
gs
call
aam
test
imul
xor
rolb
rol
mov
notl
gs
sub
mov
jne
adc
sbb
sub
mov
shrl
pop
jnp
imulb
dec
loope
clc
cmp
mov
testl
and
pop
in
pop
adc
scas
leave
mov
cld
outsb
fucomp
cs
and
in
inc
mov
orl
shll
fimuls
pop
xchg
xlat
push
cmp
movl
jnp
inc
add
push
mov
and
mov
outsl
stc
inc
dec
mov
sub
pop
mov
or
push
nop
faddl
mov
daa
loope
aam
mov
sbb
adc
fsubs
nop
push
loope
cmp
sbb
add
and
ret
jp
xor
sbb
mov
inc
and
mov
jno
shll
outsb
lret
xor
cmp
pop
int3
lods
and
pop
mov
xor
ja
clc
mov
je
cmp
ja
jne
call
cmp
sahf
sbb
aas
cmp
xor
add
and
js
xlat
or
xor
lret
mov
sti
leave
negl
jmp
fsubrp
pop
gs
and
xor
pop
and
push
sbb
mov
push
sbb
cmp
push
fbld
aam
cmp
fistpl
dec
jge
mov
das
movl
add
cs
add
pop
mov
icebp
testl
mov
mov
test
xchg
push
push
add
sub
xchg
add
pusha
pop
xor
xor
xor
push
ficompl
or
xlat
test
cmp
scas
pop
and
add
dec
fdivrs
cld
outsb
push
jno
enter
arpl
out
mov
adc
push
cmp
movsl
adcb
inc
sub
or
xor
hlt
mov
das
sarb
imul
sub
call
pop
mov
pop
mov
cmp
sarl
and
idivl
aas
movsl
call
push
inc
lods
jno
adc
xchg
xorb
mov
dec
cmp
rorb
adc
out
add
mov
inc
sbb
add
mov
and
jle
xchg
jle
jle
idiv
adc
les
inc
pop
orl
das
pop
jg
test
dec
jmp
shll
and
sbb
jns
push
push
sub
add
sbb
out
sub
fidivrs
sbb
jmp
mov
nop
mov
pop
popf
xchg
and
ds
xchg
or
jns
pop
mov
mov
jns
mov
adc
ja
sub
jmp
stos
cmp
pop
inc
dec
icebp
pushl
call
stos
and
jmp
inc
repnz
add
mov
or
sub
inc
roll
dec
or
je
inc
test
dec
mov
mov
inc
int3
and
adc
rcr
cmp
bound
sbb
adc
cs
sbb
adc
sub
xchg
pop
adc
sub
or
sbb
mov
call
lock
dec
inc
cmp
mov
adc
fmull
repnz
sub
push
jno
cs
pop
mov
sub
xchg
imul
mov
or
push
adc
repz
mov
push
dec
scas
fdivrs
filds
cmpsb
cmp
jle
xor
movsl
xchg
xchg
xchg
ss
pop
xorl
sub
jo
mov
cld
xor
add
mov
jnp
sbb
and
popa
sub
jecxz
or
call
push
jl
jl
arpl
jl
test
pop
pushf
leave
sahf
cmp
xchg
js
ret
ficomps
mov
or
adc
push
pusha
cmova
sarb
and
push
sbb
xor
sbb
xchg
repnz
xchg
loop
inc
scas
and
mov
mov
push
mul
pop
clc
pop
mov
pop
clc
movsl
inc
loopne
adc
mov
std
cmp
pop
fisubl
xchg
sub
leave
fcompl
cmpsl
pop
cmp
jae
and
call
inc
cmp
in
dec
push
dec
mov
sbb
add
test
mov
pusha
arpl
inc
outsb
inc
addr16
lock
push
or
mov
ret
dec
jnp
jbe
pusha
leave
insb
push
lock
sti
inc
dec
push
sub
or
sub
es
sbb
cmp
jle
aas
mov
push
sbb
fisubrs
cmpl
into
out
repnz
std
bound
push
push
call
out
insl
mov
daa
or
mov
ret
cmc
xor
xchg
cmpl
add
add
add
add
clc
dec
or
adc
or
in
and
jmp
cltd
dec
arpl
pop
jns
xchg
ror
lea
mov
push
mov
out
fsubr
scas
and
pushf
ffree
push
or
adc
ss
adc
rclb
adc
push
sub
pop
cmp
jne
sbb
pop
mov
dec
xchg
push
push
jmp
sti
dec
out
subb
aas
icebp
pop
inc
mov
push
cmp
push
jl
pop
xchg
cmp
and
mov
orb
call
inc
inc
cmp
fsts
and
push
cmp
push
shll
sub
shrb
mov
enter
into
fdivrs
xchg
and
or
pop
xor
call
mov
jo
clc
dec
pusha
lods
stc
inc
pop
jl
add
cmp
stos
daa
rcrl
test
xor
push
bound
pop
movsl
lcall
mov
lods
mov
mov
int
mov
in
pusha
je
jmp
jns
cmpsl
mov
jae
mov
inc
push
jo
ret
mov
insl
jmp
xor
or
cmp
xlat
jmp
mov
push
or
adc
shlb
sbb
dec
pop
adc
mov
test
inc
clc
pop
call
sub
shlb
jge
out
inc
dec
pop
cwtl
and
jns
sbb
mov
aas
sub
cmp
add
shlb
and
push
ja
xor
add
inc
fmuls
xchg
xchg
testl
push
sar
idivl
add
scas
xor
push
xchg
push
mov
ljmp
mov
ds
int3
push
sbb
mov
push
jg
and
add
into
push
cwtl
adc
scas
and
faddl
xchg
loopne
jb
loopne
lods
push
cwtl
rorb
adc
mov
test
gs
loopne
jnp
fcoml
mov
inc
mov
jae
sub
test
add
pop
nop
aam
add
mov
add
movzwl
push
lcall
call
push
and
dec
sbb
mov
sub
icebp
sbb
jmp
mov
push
or
jle
pop
jecxz
adc
ja
sete
jmp
outsl
xor
data16
sub
lock
test
dec
fwait
popf
pop
add
mov
repz
out
or
push
sub
and
fisttps
xor
push
jmp
and
test
sbb
pop
jbe
dec
push
xor
mov
in
into
es
inc
fs
dec
pop
push
or
xor
test
jmp
push
cmp
jno
test
negl
sbb
aam
mov
inc
xchg
mov
fs
mov
inc
mov
dec
les
jnp
loopne
lea
xchg
sub
ds
dec
xor
jo
es
rcl
sbb
ja
pushf
and
rolb
dec
pop
mov
adc
mov
andl
inc
fsubrp
mov
cltd
or
sub
xchg
or
and
std
adc
pop
jb
and
push
pop
xor
add
mov
addb
xchg
sub
sub
rolb
adc
inc
movsb
repz
cmp
adc
sbb
cmp
in
out
popf
inc
jl
push
inc
xchg
cmp
xchg
add
aam
inc
mov
xchg
ret
push
push
or
fdivrs
add
je
mov
xor
jecxz
std
jns
push
sub
aaa
jns
ret
and
je
cmc
shrb
test
ror
adc
xor
jge
mov
pop
fistps
dec
pop
adc
dec
inc
or
call
imul
dec
inc
xchg
mov
das
daa
or
or
leavew
xor
jno
hlt
mov
mov
jnp
ljmp
cld
mov
inc
sbb
pop
inc
iret
xchg
ror
or
je
sub
jbe
mov
lods
adc
xor
sub
lret
incb
daa
clc
mov
and
push
in
pusha
cmpsl
add
or
repnz
add
inc
jno
inc
mov
es
push
call
cmpsb
sbb
sbb
push
push
mov
nop
push
xchg
push
lods
lea
das
std
pop
mov
lret
inc
inc
push
adc
out
stos
and
in
jae
sub
notb
fs
xchg
leave
mov
dec
pop
sbb
mov
sub
mov
mov
cs
das
xlat
adc
rorb
divl
call
ja
ja
stos
pop
je
mov
dec
cmp
xor
sahf
pusha
or
inc
fisttps
adc
jo
cmp
mov
sub
push
jb
stos
push
or
jo
add
pop
enter
sbb
mov
loopne
rorl
sub
dec
popf
mov
inc
push
inc
stos
pop
fucomi
push
lods
repnz
push
lret
cs
sub
pop
push
pop
adc
adc
push
adc
xchg
xchg
stc
dec
sbb
and
push
in
loopne
xor
movsl
mov
adc
dec
pop
das
add
int
inc
pop
sbb
mov
cs
adc
mov
fdivr
out
or
jmp
ficoms
pop
pop
test
and
pop
inc
adc
inc
shll
xchg
test
lds
inc
icebp
xor
clc
mov
jae
insb
jp
das
jo
enter
cltd
push
lahf
pop
and
rcll
je
adc
hlt
pop
lods
dec
in
int3
xor
dec
jg
and
loop
adc
lds
dec
aam
in
addr16
push
lea
pop
xor
aas
out
jecxz
out
jge
bound
je
aam
jmp
rorl
push
cmp
enter
ja
adc
dec
adc
call
adc
scas
ljmp
push
add
je
orl
sub
or
or
das
jbe
or
nop
or
jge
hlt
mov
dec
add
pop
and
rol
inc
stos
dec
mov
adc
std
insl
cmp
mov
mov
and
jo
into
pop
dec
push
cmp
jbe
jbe
pop
movsl
fsubrs
sub
popf
jmp
dec
hlt
and
cmp
cltd
loopne
loopne,pt
add
jge
adc
cmc
mov
into
push
lahf
or
adc
pop
jne
imul
add
inc
sti
je
sbb
psubq
loop
sti
imul
out
adc
mov
pushf
testb
xorb
addr16
js
push
mov
xor
mov
fsts
xchg
pop
pusha
mov
lret
clc
and
subl
push
adc
adc
cmp
sub
aas
lea
adc
rcl
fiadds
jecxz
jbe
xchg
push
imul
push
sub
add
pop
cmpsl
je
xchg
rcrb
fidivrs
add
js
shl
sbb
jge,pt
test
rclb
adc
xchg
sub
rorb
fwait
jl
pop
inc
aam
stc
fldt
jo
lods
sar
dec
mov
jne
into
cld
pop
scas
das
jl
push
pop
ret
arpl
cmp
cmp
jmp
or
repnz
daa
xchg
inc
xor
scas
out
gs
aas
cmp
bound
and
cmpsb
in
sbb
popf
loop
ss
push
imul
sti
ja
or
adc
cltd
sti
cltd
xor
push
xor
sbb
cmp
and
dec
mov
in
adc
push
mov
push
ficomps
arpl
lods
inc
frstor
xor
jbe
jp
lods
inc
jge,pn
std
loope
adc
cli
mov
test
das
cmp
arpl
orl
jg
jno
push
inc
mov
adc
pop
jae
mov
popa
jp
ds
dec
repnz
xor
arpl
sbbl
out
iret
addr16
adc
dec
pop
or
xor
cmp
adc
sbb
clc
je
jns
inc
push
push
adc
sbb
lret
ds
sahf
adc
xchg
lcall
xor
arpl
cli
pusha
dec
sbb
cmpsl
lock
xchg
inc
pop
jge,pt
lods
and
in
call
insb
sub
scas
negl
jns
daa
adc
ret
push
xor
lret
adc
xchg
frstor
inc
push
decl
fwait
ret
mov
sti
pop
mov
cld
cwtl
xor
cmp
in
das
bound
mov
jmp
test
inc
jbe
mov
leave
stc
fsubs
imul
add
sbb
xchg
fwait
pop
out
mov
mov
push
mov
or
je
pop
sbb
insb
jl
cmp
mov
cmp
jl
jmp
mov
pusha
mov
and
add
pop
mov
cltd
or
dec
or
mov
push
mov
push
mov
xchg
and
leave
test
mov
inc
and
fiaddl
sbb
pop
cmp
loopne
cmp
sub
cltd
out
ret
fdivl
ja
push
push
aam
stc
dec
clc
cmp
adc
jmp
sub
cmp
loopne
xchg
or
jmp
lea
jns
fists
jne
mov
or
adc
fdivp
pop
hlt
xor
sbb
sub
ljmp
lcall
add
push
jo
fs
shlb
xchg
notb
leave
fstpl
fnstenv
cmp
lock
leave
adc
out
pushf
cmp
push
push
or
enter
inc
stos
push
push
dec
inc
push
adc
sub
addr16
cld
subb
mov
inc
push
inc
shlb
es
xor
push
or
cmp
je
push
adc
fildl
jne
sbb
syscall
test
mov
dec
fdivr
jmp
ret
inc
dec
insl
sub
jmp
inc
push
pop
das
jne
test
pop
shl
cmp
mulb
mov
or
adc
je
jle
lock
movsl
adc
cld
push
daa
call
cld
fs
enter
jg
mov
ja
mov
or
mov
iret
bswap
or
ja
or
xor
mov
divb
jle
cli
out
sub
push
shr
test
sbb
call
mov
subl
bound
dec
scas
adc
inc
pop
sbb
add
xor
push
add
mov
sub
repnz
adc
scas
xor
rorl
lcall
aas
dec
sbb
addr16
or
and
sbb
sub
add
icebp
inc
sbb
or
inc
push
sti
ljmp
jmp
aad
mov
ja
xchg
inc
movsb
ja
test
inc
out
jne
mov
push
cmovp
cmp
inc
test
and
dec
out
adc
jns
in
movswl
popa
stc
sbb
cmp
mov
out
sub
pop
in
dec
adc
loopne
jno
push
mov
sub
test
nop
adc
out
jns
xchg
lds
dec
mov
jmp
movzwl
add
or
mov
or
pushf
aam
and
push
std
sbb
or
call
cmova
push
cmc
jmp
mov
cmp
xor
mov
adc
xor
sbb
jp
or
xor
imul
sbb
rclb
xchg
cmp
jg
out
fdivrs
lret
bound
lock
pop
sub
xor
adc
inc
rolb
shlb
xchg
mov
jns
push
xchg
add
addr16
sub
adc
call
leave
sarb
lret
fsubs
xchg
inc
pop
in
shrl
mov
test
pop
mov
pop
insw
movl
adc
mov
call
add
rcrb
enter
xor
mov
and
inc
mov
mov
in
mov
mov
xchg
mov
push
cmc
adc
stos
xchg
mov
lret
xchg
jp
pop
lock
int
push
pushf
imul
data16
es
xlat
add
and
cmpsb
aaa
push
push
cmp
sub
movsl
jmp
push
rclb
call
and
sbb
aas
rolb
inc
adc
out
inc
and
mov
popa
inc
xor
push
add
sbb
mov
inc
je
push
mov
cmpsl
clc
call
mov
fs
and
out
or
rcll
das
push
push
jle
ret
cmpsl
sbb
jge
push
and
lods
or
add
dec
sbb
mov
inc
insb
stos
jge
pop
dec
sbb
xor
adc
dec
movsb
and
call
ds
add
xchg
push
or
ret
gs
push
clc
and
cmp
addb
mov
and
scas
sub
mov
scas
sarl
adc
cmp
mov
cmpsl
es
fcomps
clc
mov
das
mov
dec
cmp
lds
mov
xchg
dec
sub
xor
js
dec
popf
mov
cwtl
int
xor
pop
add
xchg
push
mov
jle
xor
nop
push
adc
xchg
mov
jmp
mov
pop
mov
sbb
pop
sub
or
pop
insb
ret
stos
jb
lret
pop
nop
and
push
jp
push
xchg
push
cmpl
mov
jg
out
inc
and
lods
imul
cmp
call
and
enterw
bnd
or
and
adc
push
scas
mov
cwtl
mov
inc
in
mov
dec
push
in
or
rcl
shll
pop
push
pop
js
ljmp
xor
mov
setae
jmp
inc
push
xchg
and
sub
or
xor
mov
cli
xor
mov
imul
stc
and
and
sbb
fldcw
sbb
rclb
dec
shlb
inc
inc
loop
xor
adc
xor
call
jecxz
and
inc
cmp
cs
dec
push
xor
mov
and
pop
aas
lea
pop
out
mov
aas
mov
dec
fbstp
movsb
daa
jns
scas
jns
cmpsl
js
das
adc
pop
les
es
pop
clc
cli
sub
push
mov
out
inc
lret
pop
test
das
stos
jno
jl
sub
cs
or
and
fcompp
nop
ret
mov
addl
inc
mov
jbe
mov
jnp
mov
push
push
push
test
jbe
jp
rsm
shll
repz
mov
pop
dec
fs
in
push
ret
lea
mov
adc
ja
cmp
inc
add
or
ljmp
call
js
mov
imul
lds
mov
punpckhbw
mov
data16
cmp
and
mov
cmp
call
xchg
and
mov
push
sbb
idiv
inc
mulb
add
dec
mov
mov
dec
lds
or
mov
ret
jle
loope
call
pop
pop
mov
bound
inc
incl
or
or
mov
fcompl
mov
ficoms
flds
test
aas
daa
insb
pop
je
into
mov
inc
add
dec
je
pop
sub
test
mov
rorb
pop
stc
stc
inc
cs
mov
push
loope
je
icebp
dec
out
push
outsl
xor
sbb
adc
sbb
xor
push
xor
push
or
push
es
or
and
loop
fisubs
jg
inc
call
pop
xchg
or
scas
lahf
pop
cmp
jp
dec
sbb
push
jle
pusha
xchg
push
mov
cmp
or
mov
iret
push
inc
jmp
pushf
es
sbb
push
push
push
insb
iret
mov
xchg
or
movl
aas
rorl
add
push
insb
xor
jo
into
push
adc
popa
test
mov
sbb
push
pusha
js
cs
push
jg
popa
cmp
push
ja
sub
cwtl
repnz
push
adc
test
adc
push
ret
add
xor
stos
adc
roll
push
iret
xor
push
or
adc
inc
adc
pop
ret
mov
cmp
and
test
movsl
push
xchg
cld
sbb
sub
and
xchg
cmp
mov
movsl
xchg
shll
stos
jmp
sbb
mov
ja
and
dec
jecxz
push
in
call
adc
adc
push
push
jne
xor
insl
pushl
cmp
push
adc
push
adc
adc
or
inc
dec
adc
jg
or
and
xor
sub
arpl
cltd
loopne
push
adc
push
and
jne
sbb
sub
inc
cmp
push
push
push
dec
pop
xchg
adc
pop
test
sub
jmp
sbb
out
sti
repnz
jns
pop
arpl
pop
ret
out
mov
orb
adc
shrl
mov
sbb
mov
push
std
or
pop
sub
cmp
in
les
sub
add
push
inc
dec
ret
cltd
out
bound
cmp
cmp
or
jge
popf
pop
fs
push
sbb
and
roll
or
sbb
add
sbb
fisttps
sub
mov
adc
mov
int3
leave
inc
fdivs
jge
dec
adc
dec
repnz
mov
dec
push
rcl
dec
hlt
sarb
movsb
push
in
cs
jo
push
fisubs
xor
jne
insb
xor
ja
push
push
and
pushf
add
sbbb
dec
insl
inc
pop
mov
fmulp
popa
ret
call
xchg
jo
mov
mov
or
jmp
xchg
jle
mov
xor
aas
out
xchg
clc
cmp
js
push
inc
add
push
cli
addr16
mov
adc
and
sub
dec
sbb
dec
int3
or
es
jno
push
jl
pop
mov
std
cwtl
incl
or
push
shlb
jo
test
jmp
fmulp
inc
push
ljmp
inc
add
pushl
leave
inc
loop
add
add
dec
lods
inc
sub
adc
adc
idiv
mov
sbb
inc
daa
sbb
jns
dec
or
les
xor
mov
mov
das
push
adc
fldl
frstor
je
cmp
sbb
adc
sbb
cmp
push
push
mov
je
or
adc
mov
or
or
inc
or
push
adc
clc
in
movsb
xor
faddl
lret
call
sti
mulb
or
popa
lcall
enter
adc
sub
xchg
es
fsubrl
inc
test
fwait
jnp
sub
inc
stc
dec
imul
and
decl
outsb
sub
push
call
je
test
mov
sub
push
or
call
xor
push
cmp
or
pusha
popf
sub
sbb
push
add
sbb
movsl
mov
or
pusha
sub
pop
xlat
fadd
pop
mov
mov
jae
test
fs
icebp
mov
dec
rcl
jmp
sahf
xor
push
insb
cmc
mov
clc
cltd
sbb
mov
ret
por
dec
sbb
dec
aaa
mov
js
cmp
pop
jne
sub
pusha
loop
cmp
je
inc
adc
lahf
in
out
inc
imul
xchg
add
xor
push
cmp
push
jg
jns
mov
cmp
ret
fdivrl
mov
mov
jbe
push
push
lcall
div
push
push
push
aad
mov
inc
cs
mov
xor
gs
jmp
cmp
adc
je
sbb
scas
xchg
pop
adc
pop
les
sbb
push
xor
xor
xor
call
xchg
mov
adcl
xorb
push
jmp
call
enter
push
adc
mov
xchg
mov
movups
clc
and
fs
setl
or
add
cli
in
fs
adc
mov
enter
call
cmp
jae
push
sbb
xchg
sbb
and
jae
ss
mov
jmp
xchg
mov
xor
ret
cmpsl
sbb
xor
or
sub
in
dec
jae
in
adc
test
jbe
inc
ret
sub
xchg
inc
cmpl
adc
aas
cltd
data16
test
mov
fsubl
push
cli
scas
jae
and
mov
push
lret
fbld
push
xchg
xchg
mov
dec
test
mov
aam
enter
icebp
ljmp
sbb
push
sub
inc
inc
int3
push
popf
mov
mov
orb
xchg
push
mov
xchg
add
mov
jo
jmp
pop
js
loope
cmc
xchg
add
scas
sub
cmpl
inc
lcall
xchg
iret
xchg
xor
mov
mov
adc
add
das
mov
movsl
push
test
and
sub
daa
je
xorb
dec
jns
adc
sub
add
push
enter
pop
push
movsb
push
dec
clc
and
adc
roll
aad
stc
push
push
aam
ret
loope
add
mov
or
mov
jg
sarb
xchg
cmp
xchg
jae
int
sbb
push
jmp
cmpsl
cmp
sub
jmp
cmp
pop
jbe
push
imul
ret
les
pop
and
nop
sti
fadds
add
push
lea
pop
sub
orl
push
or
movsl
jl
and
icebp
imul
pop
orl
or
dec
jno
cs
das
mov
out
lea
dec
insb
pop
lea
dec
mov
nop
shll
jle
jns
inc
fldenv
mov
cmp
ret
sub
icebp
rorb
add
imul
mov
adc
add
push
push
insb
sbb
call
shrb
xchg
mov
and
insl
mov
icebp
mull
enter
cmpsb
aas
movsl
pop
xor
je
fcomip
out
and
or
das
iret
and
mov
jmp
mov
jae
mov
cmp
je
xchg
mov
inc
adc
dec
movsl
and
dec
stc
mov
jne
push
sbb
shlb
lret
jno
xchg
sub
stc
push
dec
push
repz
subl
ja
sbb
push
pushf
outsl
notb
mov
push
call
lock
mov
push
or
arpl
cld
lret
test
mov
jg
dec
in
adc
add
pop
pop
inc
fcoml
mov
inc
notb
pushf
or
mov
sbbb
pop
enter
or
xor
mov
test
push
sahf
or
sbb
xor
sbb
mov
adc
inc
inc
mov
mov
mov
pop
add
scas
push
sub
ja
mov
and
and
push
and
mov
icebp
iret
movsb
test
fmuls
test
xchg
push
jmp
rorl
sarl
inc
and
push
add
dec
test
and
jmp
sbb
xchg
repnz
mov
push
jmp
mov
mov
imul
cli
ret
mov
inc
xor
xor
push
pop
imul
pop
stos
dec
xor
dec
sbb
mov
jmp
xchg
or
add
xchg
test
or
push
je
sahf
jne
mov
add
test
xchg
cmc
mov
pushf
adc
push
jmp
call
cmp
xor
out
push
nop
cs
and
push
jmp
pop
add
je
sub
sub
pop
ljmp
xor
jne
jmp
out
fs
push
repz
adc
sub
mov
and
or
jno
pop
jne
jmp
add
pop
xchg
pop
sbb
xchg
adc
dec
push
jmp
nop
inc
xor
std
or
adc
or
adc
lea
inc
sub
adc
adc
or
push
cmp
insb
add
cmpsb
pop
jmp
cmp
nop
pop
dec
in
ret
mov
movsb
mov
popf
fdivs
popf
adc
xor
adc
sub
loopne
jbe
add
ret
lret
xchg
rcrl
push
mov
aaa
add
xor
aaa
pop
push
cmovno
and
pop
fadds
sub
ret
jge
jle
mov
push
cmp
ja
shll
cmp
add
or
mov
and
mov
add
fsubrs
call
js
xchg
adc
pop
add
call
call
mov
test
dec
repnz
inc
loop
mov
mov
mov
pop
adc
cltd
push
call
mov
sbbb
pusha
mov
dec
mov
sbb
cmp
dec
mov
adc
cmp
and
icebp
mov
push
jge
incl
mov
pop
hlt
fdivrs
pusha
pop
pop
cwtl
sbb
mov
cmp
and
shlb
sahf
mov
or
add
jg
rolb
shl
sbb
leave
push
or
ret
sub
or
inc
mov
out
les
js
jecxz
test
mov
mov
xlat
decb
loop
add
dec
cmpl
aas
mov
nop
inc
adc
shl
jbe
lret
jne
inc
ficomps
pop
jg
mov
cli
and
xchg
lcall
xorb
or
dec
adc
roll
pop
setne
add
mov
inc
leave
push
xchg
pop
lods
cld
push
xchg
add
add
or
cltd
jb
jno
cmp
and
stos
push
jb
cli
in
and
fisubs
mov
mov
std
scas
out
mov
inc
sub
jno
jno
mov
loopne
pop
lret
jo
push
push
orl
lahf
fs
fs
and
cmp
inc
mov
add
add
fdivrs
jmp
ret
jnp
push
cmp
mov
lahf
std
pop
cld
hlt
sub
xchg
mov
mov
mov
cmpsl
mov
inc
jnp
and
ret
mov
mov
sub
mov
fistps
fcomps
das
inc
sub
inc
negl
cld
aas
aam
and
or
sarl
lahf
adc
xlat
sub
adc
pop
sub
bound
test
test
aam
ljmp
or
inc
jmp
test
fcmovne
add
lahf
and
pop
dec
gs
mov
add
cmp
fcomip
mov
fsubp
mov
and
mov
call
jg
push
loopne
or
test
mov
mov
loopne
mov
les
jbe
sbb
andl
mov
nop
test
in
sbb
imul
or
cwtl
sub
sub
sti
xchg
and
sbb
divps
aad
aaa
ljmp
sbb
jne
imul
jbe
outsb
outsl
jnp
mov
mov
pop
scas
inc
dec
add
mov
int3
push
add
inc
lea
and
push
pop
popl
pop
loope
scas
dec
ret
test
or
in
and
add
adc
mov
jmp
popa
out
xchg
mov
mov
or
movsb
mov
inc
movsl
xor
pop
cmp
imul
sub
mov
and
add
xor
decb
sar
sub
sarb
inc
inc
mov
xor
xchg
sub
push
and
dec
les
dec
push
pop
add
inc
je
arpl
pop
add
aad
or
mov
xor
mov
stos
adc
dec
push
push
pop
jne
xchg
mov
mov
test
inc
push
roll
push
cld
pushf
and
add
mov
and
inc
je
push
cmp
lods
adc
lret
jne
cwtl
mov
test
and
pusha
sbb
push
test
mov
clc
xlat
sarb
je
xor
ljmp
inc
les
cmp
jmp
pop
out
cmc
pop
dec
nop
push
xchg
or
insb
jmp
or
mov
pop
add
mov
mov
xor
dec
push
or
push
add
add
xchg
push
call
mov
pop
jge
dec
and
pop
jle
or
test
gs
push
inc
jmp
mov
ret
negb
lock
jge
dec
xlat
cwtl
test
mov
cmp
adc
cmp
add
jb
inc
lret
clc
add
adc
push
cmp
dec
inc
adc
and
fcomps
mov
pop
mov
pop
pop
loopne
lret
jge
jg
lods
cmpsl
jb
and
xchg
lahf
add
mov
adc
sub
adc
dec
push
adc
push
cwtl
xchg
or
adc
and
or
dec
nop
push
inc
inc
cwtl
inc
xchg
and
inc
or
add
push
sbb
pop
xor
mov
test
repz
push
jmp
add
jne
push
sbb
out
mulb
jno
push
pushl
pop
xor
mov
add
gs
incl
and
or
push
or
sub
jmp
mov
sarb
cmc
sub
pop
or
push
mov
in
jae
ret
dec
ret
cmp
adc
add
mov
lahf
rcrb
call
mov
xor
sbb
test
sub
add
rolb
pop
sbb
pop
cmp
sub
enter
insl
push
xchg
lret
dec
bound
push
lea
jle
dec
cwtl
shl
inc
repnz
dec
cmc
or
pushf
scas
mov
inc
xor
adc
pop
stos
adc
icebp
mov
in
add
or
call
sti
inc
iret
test
stos
cltd
stc
mov
mov
lret
hlt
lock
jae
jmp
push
cmpsb
mov
sbb
add
push
aam
sti
xor
add
mov
cld
test
dec
mov
or
lods
movsb
xor
xor
in
mov
rcrb
dec
xlat
std
aam
repz
cmp
cmpsl
loop
or
dec
hlt
and
dec
mov
inc
arpl
fnstenv
je
sbb
pop
mov
scas
jb
popf
and
cltd
push
push
pop
cmp
xor
test
popf
subl
xchg
jnp
and
mov
or
mov
xor
mov
pop
mov
push
jg
test
aam
hlt
popf
jp
bound
push
ds
movsb
cmp
adc
test
cmp
mov
les
cs
out
or
adc
xchg
scas
xor
mov
test
xchg
out
daa
xchg
dec
or
and
push
lcall
ret
dec
inc
sbb
and
nop
and
adc
pop
push
adc
sbb
adc
movsb
mov
gs
lock
mov
push
push
lds
clc
push
movsb
sub
xor
xchg
and
inc
push
sbb
mov
pop
and
sbb
pop
xchg
and
ljmp
bnd
mov
hlt
adc
cmpsb
add
cmp
test
push
cmp
lods
call
push
gs
add
sbb
jmp
adc
xchg
inc
mov
adc
mov
lea
push
stos
or
cwtl
dec
xor
inc
xor
nop
or
push
pop
mov
push
test
fldcw
mov
mov
and
xchg
shr
stos
lds
in
mov
icebp
hlt
add
or
sub
sub
sahf
lock
push
rolb
test
inc
adc
call
dec
pushf
or
daa
stos
mov
xchg
or
lock
and
les
push
lea
xor
sbb
dec
mov
fwait
dec
imul
xor
lock
sbb
push
dec
pushf
inc
daa
pop
push
sbb
adc
or
movsl
pusha
push
push
sahf
xor
mov
lahf
repz
pusha
xchg
sbb
jo
inc
mov
sbb
or
cltd
xchg
out
arpl
dec
sub
inc
inc
xchg
sbb
out
cmc
mov
loope
js
mov
mov
je
lods
xchg
les
rolb
mov
sbb
xor
lea
adc
push
scas
mov
cmc
in
cs
clc
xchg
cmp
test
xchg
mov
xchg
mov
and
sub
lahf
pop
sub
inc
and
dec
insl
out
inc
test
and
in
inc
push
or
call
outsb
pop
or
mov
sbb
pop
loop
es
cmp
fsts
cli
nop
hlt
xor
xor
adc
mov
mov
aas
pop
inc
cmp
mov
mov
cld
push
and
mov
or
sub
adc
and
jno
sub
xchg
les
adc
mov
adc
inc
push
clc
cmp
jge
ret
mov
filds
xchg
jmp
sbb
cli
loope
push
jge
popa
imul
imul
testl
sub
push
cli
or
or
or
cmpsl
jo
mov
xor
negl
dec
cmpb
push
xor
mov
jmp
push
sbb
add
lods
call
movsb
stc
jl
sbb
push
and
jns
movsb
nop
jmp
movzwl
pusha
jmp
or
call
imul
mov
lea
imul
das
and
sbb
lcall
jmp
cs
push
pop
add
mov
iret
mov
xor
sbb
dec
ret
mov
jg
scas
sbb
adc
sub
repnz
xchg
notb
add
xchg
push
jae
sub
test
out
cmp
mov
mov
aam
dec
pusha
push
add
stos
sbb
pop
push
adc
or
sbb
lea
xor
pop
sahf
rcrb
popa
cmpsl
cmp
test
add
cmp
scas
leave
xlat
xchg
adc
jmp
data16
adc
mov
inc
mov
or
push
cmp
scas
movb
cmp
sub
data16
add
lret
lcall
push
das
sbb
lea
jecxz
sbb
sbb
adc
testb
push
shll
push
mov
mov
cltd
cmpsl
leave
aad
cmp
add
es
xchg
xchg
bound
sbb
jmp
nop
ja
shr
pop
shlb
addl
call
cmp
mov
adc
adc
stos
fadd
movsl
lcall
stos
repz
dec
call
enter
xacquire
es
sub
sub
jae
sar
out
xor
mov
add
nop
xor
pop
pop
dec
inc
mov
mul
cmp
mov
lock
arpl
push
es
sub
ja
jbe
nop
dec
ja
movntps
cmp
jne
pop
jne
addb
and
dec
adcb
push
add
lea
adc
outsb
cmp
sub
sub
cmp
jmp
gs
pop
movsb
or
adc
aam
lock
int
pop
inc
or
les
xor
enter
fld
jle
sub
pop
lods
out
iret
jp
cmp
es
push
fnstenv
popa
dec
push
or
inc
push
push
inc
add
push
dec
cmp
imul
push
inc
sub
mov
adc
pop
idivl
mov
pop
sub
mov
sub
mov
je
call
sub
sub
sub
movsb
pop
pop
pusha
or
jne
cmp
sub
cmp
sbbl
daa
xchg
and
sub
sub
stos
pop
xchg
xchg
sub
xchg
cltd
pop
movsl
pop
xor
xchg
and
fldenv
or
sub
iret
sub
cmpsb
inc
or
subl
mov
jmp
pushf
push
xchg
lahf
or
add
add
iret
push
and
add
push
mov
fsubs
or
data16
push
cmp
jb
dec
testl
or
je
mov
stos
sbb
sbb
add
push
mov
jae
jge
loopne
leave
xchg
xlat
push
std
adc
scas
xchg
jae
or
xchg
addb
sub
mov
xchg
cmp
cli
dec
lret
rorb
inc
repnz
adc
xchg
xchg
ss
jmp
scas
enter
sub
or
mov
mov
int
aas
inc
loop
sbb
stos
test
inc
or
testl
adc
sub
inc
nop
enter
jp
js
adc
mov
mov
sbb
cmpsl
add
test
in
xor
adc
mov
add
or
and
and
and
push
mov
daa
sbb
mov
repz
jmp
sub
loopne
pop
mov
mov
sub
loope
xchg
add
sub
cwtl
leave
inc
xlat
cmp
xchg
push
mov
push
fildll
sbb
pop
pusha
xor
push
mov
cli
sub
movsl
push
repz
cmp
mov
xor
cmp
inc
mov
add
or
xchg
push
jno
in
mov
mov
mov
daa
arpl
or
test
mov
imul
pop
pusha
repz
call
sbb
stos
adc
inc
aaa
aas
push
mov
mov
and
aad
and
idivl
jge
and
pop
mov
mov
lcall
sub
cmp
rorl
and
and
pop
dec
jne
push
pop
or
pop
insl
repnz
stos
xchg
cmp
or
mov
or
ja
rolb
xor
loopne
mov
cmp
sar
add
adc
sbb
push
ds
js
xchg
mov
mov
add
xchg
fists
cld
and
and
mov
call
aaa
xchg
popa
adc
ds
mov
xor
push
jl
and
in
push
lcall
fists
mov
push
sbb
pop
sti
adc
xchg
push
push
xchg
xchg
into
dec
mov
lods
add
scas
movsl
push
movsb
lret
adc
je
sbb
mov
sub
mov
lahf
push
out
cld
mov
call
mov
out
or
gs
mov
push
add
movsl
decl
ffreep
aad
cmp
mov
inc
inc
jmp
popf
inc
scas
add
jge
out
cmp
jbe
aas
mov
add
mov
jae
ffreep
dec
clc
mov
jb
push
and
xor
xor
xlat
jl
push
dec
pop
cmpsb
xchg
js
gs
jae
cmp
ss
outsl
push
fs
adc
add
mov
and
adc
cwtl
dec
push
and
xchg
pop
std
bound
mov
jl
shll
shl
push
pop
add
test
xor
jl
add
cmp
test
rcrl
cmp
jo
push
insl
clc
jb
into
cmp
jbe
rorl
mov
dec
cmp
loope
xor
imul
or
int
cmpsl
sub
dec
or
dec
mov
push
call
pop
xor
mov
or
push
lds
or
sbb
pusha
and
push
movsl
psubusw
call
jno
cmp
or
xlat
mov
sti
add
int3
incl
adc
lods
mov
in
roll
mulb
or
push
or
sub
leave
dec
enter
lods
xor
in
jmp
add
jne
xchg
cmc
sub
enter
scas
cmp
and
mov
into
sub
jle
mov
push
das
mov
fistps
jecxz
lahf
pop
xchg
ljmp
mov
ffreep
push
mov
cld
pusha
push
xor
mov
call
and
push
shr
or
sti
add
lea
mov
ja
shr
sti
addl
push
addl
les
icebp
not
add
adc
cmc
dec
xor
jg
js
sbb
sub
mov
push
in
hlt
dec
imul
mov
dec
ja
imul
cld
aam
sbb
in
jmp
into
call
rclb
out
loop
adc
leave
adc
pop
jno
cmp
xchg
push
test
outsb
xchg
xor
fistl
add
or
mov
loop
xchg
mov
daa
imul
push
insb
and
lahf
in
clc
cmc
jne
and
push
out
jl
loop
dec
test
call
sbb
lret
daa
notl
or
xchg
fcompl
dec
inc
inc
daa
cmp
jle
das
cmp
std
sub
inc
popa
int3
loop
adc
and
mov
jno
das
mul
mov
in
and
inc
pop
pop
fs
xor
scas
inc
adc
sub
and
mov
data16
xor
dec
out
mov
adcb
repz
sub
pop
xchg
enter
jns
xchg
mov
pusha
and
stc
stos
sub
test
sub
sbb
mov
pop
jne
pop
nop
jmp
xor
jmp
xor
dec
pop
sub
push
adc
std
adcl
in
lock
inc
pusha
mov
jl
pop
mov
das
into
pop
xchg
pop
clc
dec
dec
dec
pop
cli
decb
add
ljmp
add
sahf
movsl
or
loop
mov
ss
hlt
dec
jne
cmp
cmp
cmp
sbb
gs
arpl
adc
sbb
or
mov
xchg
cmp
dec
push
fdivrl
push
adc
or
ss
mov
leave
mov
xchg
and
or
adc
pop
sub
add
in
mov
push
fcomp
aam
mov
mov
repz
loope
nop
es
mov
adc
sbb
cs
repnz
xchg
add
cmp
je
jg
xchg
inc
add
jl
jmp
out
xchg
rcrl
sbbl
xorl
jmp
push
or
jno
add
inc
adc
and
rcr
add
xchg
iret
sbb
mov
std
mov
add
push
pop
mov
mov
pop
push
cmpsb
and
std
pop
add
mov
outsl
cmp
inc
inc
inc
pop
loope
inc
daa
jl
movb
inc
sub
ret
add
repz
pusha
add
jmp
movsl
jge
mov
mov
cmp
ljmp
xlat
cmp
scas
popf
fsubrs
jl
dec
or
daa
movsb
out
or
shr
mov
inc
mov
aam
push
out
adc
mov
nop
xor
sub
rcl
mov
outsl
dec
push
fadds
nop
pop
mov
fists
stc
push
lret
sub
or
mov
push
fsubrs
daa
jl
cld
inc
out
dec
xchg
adc
xchg
mov
aad
mov
je
dec
mov
push
or
mov
xchg
shlb
adc
or
ljmp
add
sub
adc
cmpsl
mov
inc
mov
arpl
test
les
mov
fidivl
lods
and
cmp
shl
or
mov
popa
mov
push
jl
jmp
adc
test
xchg
mov
and
pop
push
add
arpl
mov
xchg
mov
mov
push
pop
sub
aam
add
sub
inc
cld
push
mov
push
dec
mov
ljmp
pop
insb
aaa
mov
clc
dec
dec
ljmp
dec
jo
mov
movl
or
push
out
add
mov
pop
and
les
vpor
inc
pusha
sub
push
mov
rcl
push
push
xchg
push
jp
int3
xor
popf
lret
ret
out
mov
sbb
xor
jnp
adc
xor
lahf
adc
pusha
nop
or
jae
cmp
sbb
add
divl
push
cltd
inc
dec
inc
push
push
mov
mov
mov
mov
cmp
jne
mov
call
mov
sarl
push
adc
clc
fimuls
mov
test
mov
sbb
add
cmp
adc
xor
ds
xchg
xchg
jmp
or
inc
adc
into
dec
adc
adc
inc
hlt
push
in
mov
fs
jg
push
mov
dec
xchg
dec
or
cld
data16
pop
cmp
cmp
fsubl
jp
mov
and
inc
ss
cwtl
pop
push
leave
loope
mov
or
ret
imul
adc
mov
cmp
sub
mov
jge
add
hlt
mov
lock
or
in
xchg
or
add
jne
out
js
test
xor
mov
xchg
or
test
lds
in
pop
hlt
test
jb
add
sbb
shr
bound
pop
jns
pop
adc
inc
xor
shl
popf
jle
inc
imul
push
adc
cwtl
inc
sub
mov
popf
dec
std
je
mov
in
cs
mov
add
dec
dec
jne
pop
gs
pop
call
dec
dec
into
push
adc
call
fsubs
push
movsl
dec
push
push
stos
mov
dec
push
pop
sbb
sbb
pop
adc
leave
inc
push
jmp
or
ret
mov
jle
std
push
pop
shl
out
mov
cld
sbbb
add
sbb
jo
push
adc
call
mov
mov
test
sbb
xchg
cwtl
lds
mov
adc
mov
es
sub
push
bound
lret
pop
dec
sub
movsl
call
out
sbb
mov
mov
inc
adc
sbb
mov
push
push
lods
mov
and
ret
jbe
test
lods
push
xor
push
and
lahf
lret
adc
ljmp
mov
add
sbb
loop
push
dec
push
xchg
fsubr
adc
add
or
jne
int
and
push
add
adc
pop
pushf
call
lds
ja
sbb
sbb
pop
mov
and
jno
es
xor
fisubrl
xchg
insb
loopne
call
pop
insl
and
into
stos
ljmp
enter
sub
das
jns
or
std
adc
and
mov
push
aas
pop
adc
fstpl
inc
mov
or
jmp
inc
xor
mov
sbb
sti
dec
adc
mov
and
nop
fwait
mov
in
jmp
call
test
sub
push
je
push
and
in
dec
or
sbb
dec
in
push
xchg
scas
sbb
jecxz
scas
and
clc
out
or
xchg
cmp
add
popf
push
lcall
and
mov
aas
mov
push
ljmp
pop
xchg
gs
lcall
pop
pop
es
push
test
icebp
pop
std
dec
call
xor
jmp
movsl
xchg
int3
pusha
sub
addl
mov
mov
mov
loop
ja
das
or
mov
and
pop
ret
inc
pop
and
out
jmp
and
xor
jle
mov
mov
popa
test
test
and
lea
push
mov
dec
shrl
shl
sahf
in
xchg
jno
push
inc
fcoms
inc
loopne
push
sahf
jmp
pop
mov
addr16
pop
in
scas
imulb
aas
dec
enter
dec
mull
aam
or
lods
mov
cmc
sub
mov
mov
call
push
ret
negl
cltd
xor
sahf
in
or
inc
aaa
xchg
fisttpl
icebp
pop
imul
imul
jno
dec
jle
and
movsl
repnz
repnz
ret
hlt
mov
nop
sbb
movsl
test
xchg
push
dec
movsb
ljmp
ljmp
jo
add
sbb
dec
in
repnz
mov
jo
adc
mov
fsts
jg
imul
ljmp
mov
pop
je
jb
mov
jle
lret
nop
sbb
pop
leave
mov
loop
or
addr16
sub
out
test
mov
fistpl
jmp
and
ret
call
or
dec
sub
push
jne
call
xor
mov
dec
stos
sub
xor
jne
ja
xor
xchg
pop
mov
sbb
pop
pop
sub
imul
mov
and
adc
mov
fs
and
inc
imul
xchg
add
mov
or
and
cmp
inc
lods
loope
testl
mov
fcomps
add
js
and
enter
bound
icebp
fldcw
js
cmp
and
inc
mov
mov
jno,pn
adc
outsb
fs
sti
shll
shll
pop
mov
xor
nop
or
loopne
dec
push
jl
das
cmp
dec
xchg
add
jno
or
pop
xchg
and
movsb
fnstenv
or
int
pop
insl
scas
sub
mov
loopne
mov
mov
sbb
or
mov
jmp
inc
push
mov
mov
dec
xlat
inc
int3
and
rclb
insl
mov
mov
xchg
addb
call
adc
jbe
jbe
jns
pop
xchg
sub
pop
aaa
inc
mov
stc
pop
jg
jg
or
daa
jmp
sub
lea
in
imul
mov
add
jns
daa
mov
or
mov
push
push
jae
push
jl
iret
push
test
adc
cmp
repz
daa
push
pop
mov
aad
mov
cmp
or
mov
mov
jge
call
adc
insb
sub
adc
dec
or
test
movsb
sub
jmp
jp
test
pusha
popf
sub
inc
daa
jmp
xchg
mov
lods
fs
or
lods
dec
ja
mov
pop
adc
or
mov
adc
push
test
bound
cmp
mov
xchg
fidivl
jmp
dec
mov
dec
jo
out
xchg
and
adc
mov
cwtl
and
push
add
mov
stos
call
das
lret
jo
xchg
sarl
dec
fnstenv
dec
xor
sbb
int3
daa
push
and
mov
adc
test
paddusw
xchg
xorb
imul
mov
push
add
divb
mov
mov
cmpsb
pop
adc
inc
inc
cmp
or
and
or
rorb
mov
push
inc
and
sub
adc
push
add
jmp
cmp
or
stc
or
and
push
test
sub
push
and
adc
insb
sbb
dec
sbb
mov
orb
and
clc
add
sbb
sbb
imul
push
or
enter
ss
ljmp
popf
mov
dec
loop
sbb
pop
stos
and
lret
outsb
or
nop
push
shrl
movsb
inc
and
repnz
pushf
scas
inc
pop
pop
insl
xor
xchg
iret
das
jbe
fs
sbb
jb
sbb
inc
and
and
cmp
pop
cmpl
mov
call
sub
jge
xor
jmp
xchg
or
bound
push
pop
lcall
cmp
inc
cmp
mov
mov
or
sub
psraw
push
mov
aad
dec
add
cmc
mov
lahf
lea
and
gs
mov
imul
jge
int3
ret
xchg
cld
ja
hlt
xchg
dec
and
jg
fistpll
daa
adc
add
std
in
loopne
xchg
pop
fidivl
or
lock
dec
addr16
mov
pop
or
dec
daa
lcall
xchg
xor
jge
sub
daa
adc
and
cmp
leave
adc
incb
xor
inc
jmp
cmp
je
sar
cld
cmp
mov
xlat
pop
repz
or
test
mov
adc
bound
rclb
inc
popf
fstl
push
dec
fnsave
inc
or
shll
push
shl
movl
insb
adc
inc
add
or
mov
mov
inc
sbb
scas
xor
or
mov
mov
flds
rclb
push
movsb
push
cld
jae
rolb
pop
mov
mul
sbb
push
pop
mov
or
std
xor
xchg
mul
out
mov
cmp
pop
cmp
jle
sub
add
notb
sbb
sbb
repz
mov
xchg
arpl
lds
adc
push
jne
js
shl
punpckhbw
xlat
mov
adc
and
mov
xor
jne
cli
mov
sbb
outsb
movsb
sbbb
inc
cld
mov
pop
and
jne
call
add
shl
ljmp
jb
mov
je
cvtdq2ps
jle
jl
lea
jmp
mov
inc
aaa
pop
lea
jg
jp
inc
test
adc
stc
cmp
stc
cmp
test
inc
pop
pop
call
jae
pop
xchg
in
mov
xor
dec
jbe
xor
inc
popf
push
std
cld
and
fdivr
enter
cmpsl
pop
hlt
jo
ss
mov
dec
pop
dec
and
inc
adc
jb
and
inc
pop
rorb
orb
lret
and
pop
xchg
je
inc
andl
movsb
sbb
mov
test
and
aad
fists
adc
mov
lahf
or
add
xor
push
xchg
jnp
dec
add
fimull
in
dec
pop
mov
add
pop
pop
push
mov
push
add
fwait
je
push
aam
cmp
mov
nop
popf
ljmp
jno
mov
mov
das
fstps
mov
shrl
sbb
stc
add
cmovno
mov
and
je
icebp
repnz
vpmaddubsw
lea
fsub
push
imull
lock
out
out
mov
or
add
xor
xchg
repz
js
inc
xchg
push
sbb
xchg
pushf
sub
push
mov
push
jmp
bound
mov
test
jmp
xor
mov
mulb
pop
inc
ja
lds
mov
roll
and
leave
mov
mov
or
aaa
mov
cmp
or
jmp
fnstcw
inc
sbb
dec
push
popa
mov
xchg
mov
std
das
mov
dec
outsl
push
adc
in
and
push
jns
or
pop
shl
out
lock
cmp
test
xorl
push
sbb
cmp
dec
xchg
lods
xchg
xor
adcb
push
xchg
test
adcb
jge
sbb
test
jbe
cwtl
mov
fisubs
pop
nop
imul
xchg
sub
sub
or
repz
push
mov
mov
adc
ret
push
imul
cmp
cmp
add
lods
mov
jge
jle
je
movsb
cltd
push
dec
xchg
in
movsl
mov
add
clc
mov
cmp
lea
enter
lahf
mov
out
gs
sub
sub
aas
sarl
jae
sahf
push
dec
mov
nop
push
jl
adc
and
bound
lods
mov
fldl
mov
mov
xchg
ljmp
cmp
leave
pop
jns
loop
pusha
push
in
adc
rolb
pop
cmpl
adc
ljmp
and
sub
or
inc
ret
push
dec
xor
add
mov
push
xchg
dec
mov
and
cld
in
pop
sub
mov
add
outsl
notl
decb
cs
cwtl
pop
aaa
les
cmp
adc
xor
ret
adc
fdivr
ds
inc
adc
mov
and
das
fidivl
fiaddl
sub
mov
cmpsl
popl
add
loopne
add
js
rorl
je
fcomps
cli
jno
xchg
jmp
add
mov
ret
in
fs
or
inc
dec
xor
je
les
dec
pop
sub
call
aad
fwait
push
or
lret
fimuls
ja
xchg
mov
mov
jle
sbb
mov
xchg
adc
stos
cmp
mov
cld
mov
xor
dec
adc
mov
and
or
mov
jns
adc
sbb
xor
fistpl
inc
mov
dec
sbb
mov
movsb
pop
dec
adc
add
sbb
xor
scas
insl
test
sbbb
outsb
repnz
add
cmc
and
testb
sub
daa
mov
xchg
inc
mov
nop
and
and
xor
stc
pop
enter
mov
jle
add
pop
lea
in
por
add
incb
xchg
jg
mov
lret
or
inc
popa
pop
dec
pop
cmp
xchg
adc
scas
sbb
sub
xor
lret
sar
mov
sar
imul
xor
das
sahf
pop
xchg
sub
mov
movzbl
sarl
rclb
leave
not
mov
int3
mov
popa
or
ljmp
loopne
loopne
push
pop
push
in
pop
lahf
mov
push
outsb
imul
mov
ljmp
xchg
iret
ret
cmp
mov
rolb
ja
xchg
repnz
dec
cld
sahf
adc
insl
inc
dec
add
sub
dec
mov
lea
inc
pop
pushf
das
cmp
and
sub
adc
xchg
push
fs
negb
dec
push
mov
dec
test
test
ret
cmc
mov
mov
sahf
add
sbb
and
pop
jbe
push
and
xchg
xchg
decl
sti
pop
loop
sbb
dec
popf
adc
and
inc
and
cmp
sbb
js
dec
imul
test
xchg
ja
shrb
out
fmuls
pop
mov
mov
or
push
loop
pop
push
imul
and
mov
pop
mov
jo
out
adc
or
push
rolb
xchg
pop
mov
lock
and
jnp
mov
pop
adc
xchg
adc
inc
xchg
cmp
xor
popf
js
or
add
add
ss
mov
pop
or
cmc
icebp
das
pop
inc
pop
in
imul
cltd
dec
insb
fwait
adc
adc
je
lcall
pop
mov
or
test
int3
cmpsb
js
or
imul
push
cwtl
pop
or
mov
inc
or
or
add
hlt
std
sub
and
push
xor
scas
and
mov
cld
sub
testb
xchg
ds
cmp
adc
xor
xchg
jne
pop
dec
cld
cmpsl
andb
call
push
or
or
push
dec
stos
push
mov
inc
push
js
into
push
adc
cwtl
inc
jne
mov
cld
push
push
mov
or
adc
and
and
sub
push
call
imul
and
fstpl
das
sahf
add
cmp
sbbl
sub
adc
insb
push
lret
or
adc
xchg
inc
sbb
push
pop
mov
jecxz
push
and
mov
mov
dec
icebp
rclb
mov
cmp
movsb
mov
inc
mov
sbb
mov
inc
or
sbb
jp
es
sub
ss
and
xchg
inc
or
xor
xchg
mov
and
xor
or
ljmp
sbb
sub
das
inc
pop
inc
push
fldl
add
imulb
fmull
dec
lds
mov
add
xor
lods
sub
push
sbb
aad
or
push
call
add
mov
mov
cmc
pusha
idivb
add
pop
sbb
ret
inc
xor
pop
xor
push
or
pop
adc
adc
cmp
dec
inc
cs
push
adc
stc
and
xchg
inc
test
sub
pop
add
jo
or
push
cmp
or
cmpsb
rorb
push
inc
pop
setne
adc
and
xchg
cld
mov
jge
gs
cs
inc
ret
call
mov
and
jge
xor
dec
pop
mov
rol
or
pop
adc
bound
or
and
pusha
inc
je
call
or
xor
xchg
and
cmpb
call
push
add
ret
sbb
sti
xor
pop
scas
dec
je
fidivl
sbb
idiv
sbb
mov
mov
lea
sub
ljmp
mov
cli
add
xor
add
sub
push
or
cwtl
or
sub
inc
cmp
add
adc
ja
subl
pop
add
jmp
je
cmp
jge
mov
jbe
push
cmp
sbb
pusha
push
fcomps
pushl
jl
adc
sub
sar
jns
sbb
inc
hlt
mov
inc
mov
cmc
in
mov
xchg
or
and
mov
hlt
sub
je
ror
idivb
lods
push
clc
pushl
in
jae
push
push
jbe
mov
push
or
and
in
fnstcw
jp
mov
adc
add
adc
nop
int3
fwait
adc
call
jmp
push
mov
cmp
mov
jb,pn
jno
push
sbb
inc
sub
jns
int3
jmp
cwtl
aam
ljmp
inc
sahf
rolb
ljmp
out
subl
cmc
loopne
and
push
push
call
out
jnp
imul
rorb
fisubrl
call
sub
aam
or
imul
stos
lret
sub
mov
jb
jmp
repnz
xor
jg
and
dec
les
outsl
pop
and
xchg
cmp
add
jmp
adc
xchg
into
les
call
scas
push
xchg
or
pop
jmp
clc
and
jmp
adc
es
adc
mov
fnstenvs
in
mov
adc
movsb
jl
xchg
loope
inc
mov
imul
inc
and
mov
dec
and
aas
adc
xchg
pusha
movb
xor
adc
pop
loopne
or
push
and
mov
test
test
or
and
push
sbb
test
mov
loopne
enter
test
inc
sub
push
test
jo
push
dec
loopne
mov
call
inc
pop
xchg
pusha
ret
cli
es
push
imul
cltd
adc
fisttps
cmp
sub
adc
test
or
adc
and
lret
mov
inc
mov
inc
or
xchg
push
aas
or
push
jae
xor
lods
sbb
test
inc
arpl
icebp
or
push
test
and
pop
mov
nop
jnp
sbb
inc
nop
fsubp
jb
movsb
test
mov
stc
xor
cltd
adc
adc
push
test
push
enter
push
mov
push
adc
pusha
cmpl
out
lods
shll
daa
xlat
and
sub
test
call
lds
xor
push
dec
push
loopne
fcomps
loop
call
xchg
nop
test
clc
push
leave
nop
jo
out
xor
jp
xor
or
mov
in
or
sbb
loopne
fwait
sbb
cwtl
cs
mov
and
lods
or
stc
les
ret
push
push
and
adc
sub
xor
push
mov
add
inc
inc
stos
and
icebp
cld
test
pusha
out
mov
push
and
inc
mov
mov
enter
adc
sub
aam
mov
pusha
and
push
pop
mov
cmc
xchg
cs
nop
cmp
and
jmp
pop
jmp
in
aas
cli
mov
or
sbb
fnstcw
xchg
mov
xchg
loope
aaa
push
adcb
mov
shrb
inc
xchg
cs
mov
dec
push
sub
inc
push
out
inc
decb
jmp
push
jns
add
imul
test
push
or
nop
pop
or
shl
mov
jns
inc
inc
inc
sub
inc
mov
dec
or
adc
mov
push
mov
inc
js
in
and
dec
push
adc
idiv
and
or
dec
sub
mov
out
dec
call
mov
loopne
push
inc
jecxz
inc
inc
fsubrl
clc
cmp
mov
cmp
push
or
sahf
jbe
sbb
js
jle
sti
jmp
or
mov
enter
inc
pop
mov
fisubl
jbe
dec
cmp
inc
incb
mov
fiadds
loopne
pop
and
daa
mov
aam
push
inc
in
fsubs
test
inc
sahf
pop
lods
pushf
and
mov
xchg
scas
sub
cmp
enter
cmp
push
xor
shlb
inc
adc
and
or
and
inc
inc
scas
dec
inc
push
movsb
mov
and
imul
xor
push
inc
dec
testb
jo
pop
xor
sub
mov
test
and
mov
shl
lods
cwtl
push
sub
notb
mov
enter
test
add
or
pop
nop
lock
pushf
mov
fmuls
mov
nop
sbb
jne
push
subb
lcall
adc
popf
or
mov
testb
cmc
push
cmp
jo
cli
and
adc
dec
push
enter
sub
test
mov
inc
pop
cmp
pushf
and
mov
dec
les
or
xlat
stc
push
inc
xor
mov
stos
inc
pop
and
inc
test
adcb
and
lods
and
rclb
mov
add
fwait
dec
jb
adc
sub
test
dec
push
push
les
and
adc
cmp
dec
test
jb
adc
or
je
fsubs
and
popa
pusha
add
out
pushf
cld
mov
and
xor
nop
inc
push
ret
mov
enter
cmp
les
cwtl
adc
push
push
out
inc
enter
mov
and
dec
inc
and
dec
fcmovne
inc
push
in
jmp
mov
loope
xchg
dec
xor
aam
aas
or
fcoms
xor
mov
and
dec
sbb
les
and
inc
xor
cwtl
inc
dec
and
jl
jo
outsb
adc
test
pusha
inc
cwtl
and
inc
lods
and
and
push
jnp
dec
and
adc
clc
adc
cmp
and
aam
enter
sub
test
mov
mov
and
mov
and
mov
into
inc
lcall
mov
mov
adc
add
enter
cmp
les
js
and
adc
adc
adc
adc
dec
aaa
inc
shrb
lods
mov
push
push
inc
loop
mov
clc
or
or
icebp
ret
cmp
mov
jl
icebp
enter
dec
adc
repnz
inc
inc
xchg
rep
or
and
sahf
call
js
jns
push
lods
fstl
sbb
push
cs
mov
push
stos
push
and
or
and
sub
dec
mov
dec
adc
dec
jl
mov
or
and
and
cwtl
inc
jle
and
inc
fcmovb
test
mov
and
mov
mov
ds
ret
mov
adc
mov
push
mov
adc
les
adc
mov
lret
push
sbb
test
push
dec
add
cs
sbb
in
rcrl
in
push
frstor
adc
loop
sbb
mov
cli
inc
adc
and
pop
dec
jmp
frstor
fadds
enter
outsl
pop
or
test
je
lods
dec
and
shld
xor
inc
mov
push
sub
lock
js
mov
and
pop
cmp
mov
rorb
or
xchg
and
nop
adc
test
fsubs
clc
test
jl
je
gs
fldl
aad
or
xchg
shlb
icebp
popf
dec
adc
inc
push
or
sbb
and
mov
das
mov
add
xor
or
pop
pop
mov
mov
lea
push
and
jne
out
loope
aaa
inc
and
and
or
stc
inc
test
push
cli
inc
or
cwtl
fstl
xchg
call
out
xor
push
scas
repnz
jl
xor
mov
sbb
xor
pushf
dec
push
and
ss
mov
sub
inc
push
icebp
inc
dec
cmp
mov
mov
sbb
roll
and
adc
nop
lds
inc
mov
js
inc
cmp
xor
mov
shll
loopne
icebp
cmp
fs
inc
jbe
jo
inc
lret
sbb
pop
dec
gs
or
pusha
inc
cmp
mov
pop
addl
cs
xor
jnp
dec
test
call
or
pop
inc
aaa
movl
je
mov
lods
mov
push
and
or
pop
inc
or
push
pushf
in
out
vmwrite
jno
adc
inc
and
inc
push
mov
nop
mov
lock
mov
imul
call
inc
call
filds
xor
mov
add
push
and
push
call
xor
and
dec
aam
adcb
lds
or
mov
enter
inc
cld
cmp
cmp
xchg
arpl
cld
dec
mov
test
je
dec
les
inc
sar
pop
loop
xor
adc
xor
dec
cmp
pop
inc
xchg
aas
cltd
or
int3
mov
movl
adc
or
sub
int3
dec
inc
lahf
lock
stc
xor
mov
in
or
scas
cli
insb
mov
movsb
stos
inc
cwtl
adc
popf
dec
sub
lret
inc
imul
or
lret
pop
adc
ds
cmp
mov
mov
mov
add
shll
inc
pop
or
hlt
std
and
or
dec
cli
dec
clc
inc
push
sub
in
jno
mov
insl
and
sub
test
mov
adc
inc
outsb
lock
jmp
cmp
pop
test
and
cmpsl
and
pop
sub
xchg
js
jo
test
push
das
sub
je
xorl
cli
push
mov
clc
sahf
sbb
js
lock
and
lock
and
mov
addr16
fcomps
adc
pop
and
jno
adc
add
dec
and
mov
pushfw
push
mov
inc
xchg
leave
pop
pop
push
js
mov
lds
es
sub
js
mov
jo
in
and
and
push
mov
leave
loop
test
clc
movsl
mov
pop
movsl
or
cld
and
dec
ret
add
rcll
sub
pop
and
clc
rolb
test
hlt
mov
test
hlt
xchg
and
cmpb
and
cld
add
adc
faddl
imul
test
add
mov
inc
call
rcrb
adc
out
inc
push
mov
call
lcall
mov
cmp
nop
xor
jne
push
and
test
test
loopne
pop
dec
hlt
pop
adc
cmp
adc
sub
pop
adc
cltd
and
lret
cmp
sub
cmp
call
cmpsl
mov
or
inc
sub
inc
inc
cmp
mov
aam
icebp
sbb
enter
and
enter
sahf
pop
mov
mov
jle
and
inc
mov
sub
into
xchg
cmp
push
push
lock
and
and
into
sub
and
or
jg
mov
mov
and
shlb
cmp
or
mov
dec
test
iret
mov
shlb
movsb
and
and
fisttpl
je
adc
cmp
or
test
adc
std
and
mov
and
fmull
in
mov
sbbl
or
test
test
xchg
mov
push
inc
inc
test
adc
call
adc
test
aaa
testl
pop
jo
mov
ret
mov
lret
mov
iret
jge
mov
fsubrl
testl
push
jo
aad
or
jae
mov
mov
cmp
jo
ud1
cmp
adc
lea
fstpt
in
dec
inc
sub
daa
cwtl
adc
jle
jns
pop
push
adc
rclb
dec
and
inc
mov
mov
sbbb
cmp
sub
js
mov
or
cmp
sub
push
or
mov
push
sub
inc
add
sbb
add
inc
mov
pop
adc
push
adc
inc
pop
popa
push
or
adc
inc
dec
sub
and
adc
cmp
dec
mov
lcall
in
nop
mov
or
mull
inc
sbb
and
or
and
nop
xor
and
and
sub
sub
push
je
jo
mov
out
cmp
add
decl
cmp
mov
lea
cmp
sub
and
adcl
cmp
inc
adc
sub
jns
or
test
mov
adc
push
test
adc
lods
rclb
addb
mov
and
mov
clc
cmp
mov
adc
mov
pushf
push
xor
sahf
jno
or
test
or
adc
pop
rcrb
or
or
inc
scas
and
adc
fsub
repnz
test
inc
push
and
or
mov
sub
sbb
hlt
xor
push
mov
or
sub
rcpps
icebp
sub
pop
in
inc
rolb
dec
push
les
pop
scas
out
adc
movsl
mov
cwtl
mov
push
adc
push
ja
pop
adc
push
test
and
cmp
push
jo
mov
and
cli
mov
or
leave
fxch
xchg
sub
adc
adc
cmp
mov
jl
sub
pop
cmpsl
pusha
lods
test
es
push
xchg
rclb
xor
inc
lea
adc
adc
mov
add
movsb
test
js
addr16
push
and
add
cld
test
loopne
mov
push
test
mov
push
pop
push
push
cmp
mov
xchg
mov
aam
stc
pop
or
movsl
aaa
or
pop
and
xchg
stos
sbb
pusha
jne
loope
pop
dec
and
repz
or
clc
inc
push
xor
add
mov
jns
cmove
push
fs
stos
xor
sbb
inc
pop
and
sahf
test
adc
in
push
lcall
adc
mov
and
enter
xchg
jo
and
push
and
movsl
or
xor
or
mov
mov
add
fidivs
flds
rorb
cld
xchg
rorb
imul
dec
mov
adc
adc
pusha
repnz
mov
repz
fwait
mov
add
push
call
js
xor
test
adc
dec
shll
fdivrl
js
andb
push
push
ss
push
mov
xchg
cmp
pop
xor
decl
xor
cmp
adc
and
scas
cltd
ret
sbbl
adc
int
mov
scas
sbb
dec
cmp
and
mov
xchg
fcomps
adc
lret
mov
cmp
imul
js
cmp
das
and
inc
ret
push
test
cmc
orl
nop
xor
dec
xor
sbbb
adc
enter
pusha
inc
sbb
jo
inc
scas
aam
loop
jb
push
loopne
mov
mov
mov
sub
adc
cmpsb
mov
sbb
or
xor
mov
aaa
nop
subb
outsb
and
xor
adc
pop
rol
add
push
xor
inc
inc
cmp
sbb
out
xor
and
adc
into
jbe
clc
mov
or
adc
enter
inc
push
xor
stos
mov
push
inc
and
pusha
pop
inc
js
push
fisubl
sub
inc
adc
dec
inc
enter
and
out
lea
and
adc
push
nop
inc
and
inc
insl
dec
push
js
scas
push
dec
mov
imul
xor
pusha
mov
inc
cmc
sub
xchg
jno
pop
imul
out
inc
stos
lret
adc
xor
jno
or
pop
sbb
inc
inc
ja
and
inc
dec
push
fdivrs
mov
xchg
pop
xchg
les
pusha
or
and
or
adc
jb
scas
xor
loopne
xchg
or
sub
dec
repnz
xchg
inc
push
adc
roll
mov
adc
sub
nop
mov
dec
xor
ds
and
adcl
and
xor
adc
test
cmp
adc
mov
loop
and
dec
adc
lcall
enter
or
test
inc
jae
movsb
pop
mov
rcr
adc
cltd
mov
movsl
and
sbbb
nop
mov
sub
je
inc
or
adc
mov
shrl
nop
repz
push
fwait
inc
test
stos
imul
sbb
aam
test
test
lahf
jg
pushf
icebp
mov
std
sbb
jb
test
test
mov
test
test
leave
std
sbb
mov
push
mov
loope
cs
pusha
push
imul
fs
mov
push
cs
sti
decl
lds
pop
adc
and
pop
push
shlb
xchg
test
rcrb
sbb
fidivl
jle
cmp
add
inc
cs
add
xchg
mov
pushf
call
pop
xor
jae,pn
adc
mov
inc
or
das
xor
fisubl
push
nop
cmp
dec
sub
xor
test
enter
mov
clc
jbe
sub
and
sahf
hlt
add
adc
out
repnz
cli
or
xchg
mov
pop
mov
or
test
fs
pop
inc
nop
and
scas
lock
aas
and
push
sbb
sub
nop
sbb
es
inc
and
sub
push
lock
sbb
js
fimuls
dec
fiaddl
and
arpl
cmpsb
and
adc
daa
add
repz
sub
sbb
push
jnp
mov
or
xchg
xchg
in
adc
adc
fs
inc
in
xor
mov
mov
nop
mov
rcrb
stc
lock
cmp
inc
test
push
adc
enter
shr
xor
cmc
inc
push
and
rolb
negl
xchg
sbb
icebp
sub
cmp
pusha
mov
es
loopne
stc
or
jns
sahf
dec
sub
mov
and
sub
je
je
inc
js
pop
das
pop
or
mov
dec
and
ds
adc
or
test
mov
lcall
outsl
jo
mov
sbb
adc
or
xor
xor
clc
mov
sbb
inc
inc
mov
enter
mov
inc
xchg
dec
enter
sarb
sub
pop
mov
mov
jbe
push
jmp
call
inc
adc
and
lds
daa
mov
dec
or
sub
cmp
rcll
insb
push
adc
adc
inc
adc
jp
loop
cmpsb
movb
sub
stc
push
xchg
push
xor
adc
outsl
sub
enter
pop
xor
xor
pop
sub
inc
xchg
mov
pop
xchg
mov
rcll
lock
test
loopne
or
test
or
imulb
inc
add
xor
loop
inc
cmpsb
nop
sub
into
pop
fmull
addb
and
pop
xchg
push
nop
mov
sub
hlt
stc
or
dec
xchg
cmp
aam
or
jg
push
nop
adc
push
test
adc
rcll
xchg
vhsubpd
or
insb
js
mov
or
push
xchg
cwtl
inc
add
clc
push
ljmp
out
test
push
js
adc
or
into
addr16
mov
test
adc
faddl
pop
xor
push
movsl
inc
and
and
xchg
and
mov
dec
adc
xchg
xor
sub
and
popa
inc
adc
push
bound
adcb
cltd
push
adc
adc
cmp
stc
jne
adc
dec
enter
push
mov
test
es
icebp
inc
inc
fsubs
ljmp
pop
aam
cmc
sub
lods
test
test
sub
and
mov
and
mov
pusha
test
es
fcomps
in
bound
adc
mov
dec
std
mov
jo
add
and
lea
inc
repz
and
adcb
push
inc
adc
inc
mov
adc
inc
and
sub
cmp
add
or
push
xor
xor
mov
and
out
xchg
cmp
pop
xlat
and
sub
xor
sbb
js
sbb
add
push
xor
nop
adc
insb
adc
sub
push
repz
daa
and
push
das
push
and
xchg
dec
hlt
test
push
add
xor
hlt
aam
mov
jl
leave
loopne
test
pop
adcl
pusha
test
and
sub
xchg
push
jecxz
sub
inc
fsubs
cmpsb
mov
in
call
dec
pop
gs
mov
and
inc
sbb
jle
je
movsb
push
push
movsl
xchg
adc
and
jl
sub
inc
inc
xor
or
xchg
sub
mov
pop
dec
or
and
and
push
stc
sbb
dec
and
sbb
adc
fidivrs
enter
dec
mov
ret
fsubl
sbb
adc
sbb
inc
inc
mov
and
mov
mov
sti
sbb
xor
push
insb
adc
dec
addr16
adc
push
sub
or
inc
pop
and
mov
add
add
cwtl
or
mulb
fs
sbb
repz
xor
mov
enter
or
mov
inc
shlb
pushf
sub
aaa
pop
imul
and
adc
bound
add
jg
add
pop
push
sub
add
inc
shlb
shl
scas
mov
dec
sbb
add
je
int3
sbb
adc
inc
xchg
cmp
xchg
or
mov
mov
mov
adc
and
dec
loop
out
and
and
cwtl
inc
push
and
dec
dec
push
xchg
and
jl
mov
dec
mov
inc
jmp
sbbl
push
xchg
bound
je
mov
and
dec
rcll
pop
enter
and
pop
jae
push
imul
or
imul
jle
xor
adc
or
das
movsb
sub
popa
stos
jbe
or
push
je
push
outsl
dec
outsb
pusha
ss
js
inc
push
dec
jo
ret
push
jb
arpl
mov
imulb
jmp
std
xchg
dec
popa
outsb
jo
and
jb
imul
inc
adc
addr16
sub
push
outsl
imul
cmc
or
add
pop
dec
repz
push
push
imul
je
mov
and
arpl
fs
lret
mov
jne
jb
das
shlb
or
repnz
xchg
testb
hlt
bound
inc
push
andb
daa
dec
outsl
push
call
inc
xchg
mov
inc
push
lret
shrl
pop
inc
mov
jne
sbb
imul
fldenv
fcomp
pusha
mov
leave
je
and
rcrb
jne
mov
cmpsb
add
aam
push
sub
adc
loopne
inc
cmp
pop
dec
or
sub
cmp
adc
sub
adc
xor
push
or
dec
adc
xor
cmp
add
data16
xor
cmp
in
out
imull
popa
jp
jno
adc
gs
outsl
xor
mov
pop
lret
rol
cmpsl
jle
mov
mov
and
loope
add
aaa
add
add
add
jle
xor
adc
insl
xor
or
xor
push
cmpsb
mov
shrb
push
adcb
and
popa
movsb
dec
push
jp
sub
out
mov
sub
add
dec
push
mov
loopne
and
je
icebp
sbb
jb
pop
popl
div
lods
lods
mov
repnz
or
mov
jmp
mov
mov
xor
cmp
jmp
mov
bnd
in
cmp
adcb
adc
stc
pop
push
icebp
cmp
add
and
jns
push
lret
pop
mov
sub
pop
mov
repnz
mov
int
push
lods
mov
arpl
dec
js
out
mov
jp
jmp
in
sub
cld
xorl
popa
bound
out
or
cmp
push
cmc
fs
inc
xlat
incb
hlt
jle
mov
cmp
add
mov
roll
call
mov
or
mov
mov
xor
push
or
and
add
mov
inc
adc
and
inc
jo
jg
fimuls
cmp
mov
or
adc
iret
jmp
repz
xor
xor
imul
les
pop
xor
push
cmovb
jge
inc
pop
xor
sub
and
dec
scas
mov
jp
adc
aas
ja
icebp
pushf
aas
popa
arpl
loope
mov
inc
dec
xor
push
gs
popf
xchg
clc
mov
adc
adc
lahf
xchg
cld
dec
stc
enter
mov
stc
movsb
sarb
push
lahf
popf
mov
leave
add
sbb
mov
mov
push
mov
or
push
sbb
add
xchg
je
xor
adc
mov
or
push
sbb
fisttps
xor
adc
add
test
xor
mov
push
add
mov
or
mov
push
dec
add
push
lcall
push
add
push
xchg
or
sub
or
ret
xlat
inc
negl
dec
adc
sbb
xor
mov
add
or
pop
call
stc
or
ret
mov
rcrb
inc
jb
fisubl
add
loope
push
push
js
data16
dec
push
sub
into
push
push
cs
outsb
add
pop
or
or
sbb
cmp
sbb
push
or
push
and
daa
andl
and
adc
aaa
sub
xor
xor
add
daa
cmp
xor
inc
add
sbb
sbb
dec
add
inc
or
cwtl
add
add
add
cmp
push
inc
sbbb
xlat
add
jle
add
add
mov
or
or
sbb
adc
pop
call
shrl
pop
lahf
adc
push
adc
push
popa
pop
and
xor
and
rcll
xor
push
pop
sbb
sbb
sub
xor
ss
add
cmp
inc
inc
inc
inc
inc
add
push
scas
rcrb
pop
pop
add
gs
mov
add
ja
jns
addl
mov
xchg
xchg
cwtl
cltd
lcall
cmpsl
test
stos
add
mov
mov
enter
rcl
aam
xlat
add
loope
jecxz
in
out
call
repz
cmc
div
clc
stc
cli
dec
fadds
sbb
add
fcoms
xlat
xor
push
ja
adc
inc
xlat
add
adc
pop
popa
jno
adc
adc
adc
fiaddl
or
xor
adc
and
loope
icebp
dec
fisttpl
xorb
fdivs
push
or
push
mov
add
jmp
add
mov
pop
fldpi
in
cmpsl
pop
add
lret
xlat
jo
stc
xchg
add
mov
add
icebp
ret
adc
add
add
xor
add
add
jns
lods
add
inc
sar
stos
and
jne
loop
setp
mov
mov
lods
sub
xor
dec
lock
fisttps
int
add
nop
add
add
call
sbb
mov
sbb
add
es
dec
or
cs
sbb
iret
dec
mov
out
in
or
mov
add
add
dec
jp
pop
sub
cwtl
inc
sbb
imul
sti
lock
shlb
adc
push
repz
push
add
std
cmp
add
sti
lea
mov
xchg
int3
loopne
shrb
out
add
dec
nop
jecxz,pt
push
cmp
xchg
sbb
add
fadds
sahf
aam
insb
out
iret
add
mov
jbe
add
pusha
mov
ljmp
jae
push
dec
sbb
sub
adc
push
add
mov
push
mov
mov
add
arpl
add
sahf
pushf
lods
rclb
daa
ljmp
in
movsl
mov
add
in
fidivl
add
les
sar
jns
add
push
stc
push
mov
out
cmp
add
lods
andb
or
fcmovbe
add
adc
out
repnz
pop
jmp
add
xchg
adc
push
push
jmp
loope
scas
cwtl
je
or
testl
jno
mov
inc
or
push
inc
xchg
dec
iret
cld
pop
mov
sbb
add
push
orb
mov
jnp
add
leave
cmp
add
iret
lret
mov
lods
repnz
sub
cmp
add
lcall
sub
add
cmp
fstpl
sbb
fidivs
ja
mov
push
and
popa
inc
into
sarb
mov
jmp
shl
cli
imul
cmpsb
imul
mov
ljmp
cmp
cmpsb
jns
mov
stos
int
add
in
lea
cld
ds
and
push
jmp
scas
loopne
stos
pop
mov
pop
movsb
int3
xlat
or
jp
jg
sub
jne
inc
adc
dec
ds
test
cmp
cmp
add
inc
jmp
or
stos
add
mov
es
je
xchg
int
and
mov
out
xchg
mov
push
xor
adc
pop
data16
add
push
mov
test
movsb
mov
add
sub
and
fildl
and
sbb
jns
add
push
add
cmp
mov
mov
lcall
xchg
out
fsubs
and
jae
push
add
mov
imul
add
add
push
fsubl
ror
hlt
cmp
sahf
fistl
jmp
sbb
test
fistps
shll
jns
ficoml
xor
xchg
xchg
add
mov
jg
pop
repz
or
pusha
add
subb
test
mov
outsb
cs
sysret
lods
pop
push
shll
and
mov
mov
cltd
inc
or
and
add
arpl
add
aad
aam
sbb
insb
add
ss
popa
mov
add
sbb
push
jmp
jae
pop
add
mov
pop
push
daa
pop
jnp
jge
dec
sbb
lcall
in
add
jb
sbb
stc
inc
add
mov
add
int3
aam
adc
mov
xor
xchg
lret
sbb
adcl
jne
add
mov
pop
in
pop
out
cmc
xor
lods
adc
and
cvtps2pd
adc
sub
aad
adc
mov
aaa
adc
xlat
daa
cmp
movsb
xchg
sbb
pushf
andb
and
test
xchg
cmpsl
jbe
add
out
sub
dec
sbb
jbe
addb
add
pop
mov
jns
call
fidivrs
xor
jnp
mov
les
inc
stc
std
add
lds
adc
add
scas
imul
add
jge
nop
mov
jg
sbb
jmp
push
mov
add
subl
insl
insb
hlt
mov
andl
sbb
push
rolb
divb
jae
jbe
imul
lcall
in
push
outsl
cltd
lret
fnstsw
mov
add
leave
xchg
jg
add
in
lret
add
enter
add
xor
jbe
dec
inc
jno
scas
addl
jp
aas
out
repz
fidivrl
fwait
cmp
sub
jecxz
shrb
faddl
sbb
ss
mov
xchg
lods
add
sub
mov
push
add
mov
sbb
pop
xor
fildl
xchg
sub
jae
sbb
loopne
data16
aam
std
add
ret
mov
and
fnstsw
sub
push
mov
popf
mov
add
pop
aam
add
test
outsl
fwait
addl
push
cmp
mov
insb
cli
add
mov
xchg
daa
jnp
pop
aam
sbb
das
xor
stos
mov
mov
fcoms
mov
mov
outsl
inc
add
push
cwtl
sub
adc
or
andb
cmc
scas
dec
shll
pop
xor
out
lahf
add
inc
popa
rorl
sbb
lods
sbb
add
cmpb
jne
pop
in
add
mov
mov
or
loope
sub
dec
and
das
repnz
pop
xor
stc
mov
in
mov
xchg
mov
sarl
imul
rolb
and
divb
add
insl
and
push
out
push
xchg
shll
pop
mov
out
sub
aad
dec
ja
sbbb
cmp
mov
add
or
inc
jp
add
inc
cmp
or
pusha
pop
dec
hlt
jge
dec
loop
testl
sub
xchg
jne
pop
test
roll
pushf
lcall
and
add
mov
sbb
orb
push
pop
loop
pusha
repnz
dec
pusha
fiadds
sub
ret
rcrl
adc
jmp
or
cwtl
sbb
push
push
lret
adc
idiv
cwtl
add
sti
lods
and
mov
add
inc
scas
pop
pop
mov
push
pop
xchg
rclb
movsl
xchg
sbb
lcall
add
mov
xchg
adc
pop
xor
cmc
lds
call
adc
push
loopne
jne
add
xchg
mov
pop
jnp
adc
sbbb
mov
fcmovb
dec
inc
xchg
sbb
adc
xor
icebp
cmp
in
inc
mov
add
push
xchg
add
sub
pop
or
and
jge
fwait
mov
outsb
jb
orl
cmp
add
cwtl
imul
lsl
repnz
push
fmull
push
inc
leave
mov
xchg
and
scas
fiaddl
addr16
push
pop
clc
inc
jl
jg
xorb
cmp
sub
clc
or
clc
add
hlt
aad
cmp
sub
test
pop
rcrl
cmc
out
stc
stos
push
mov
mov
add
pop
cli
mov
mov
rol
cwtl
scas
stos
je
aad
adc
adc
fadd
inc
pop
xchg
andb
adc
add
pop
pop
xor
cmp
dec
add
aam
cmp
add
and
jge
or
cmp
orb
cmpsl
mov
aas
dec
adc
jo
int
dec
and
js
sbb
addr16
jno
add
mov
pop
sub
in
add
fisubl
jmp
add
push
ret
pusha
pop
dec
ja
imul
add
shlb
mov
testl
xor
adc
pusha
stos
sbb
fxch
lret
mov
cmpsl
add
bound
nop
jne
xor
lods
mov
je
subb
xchg
mov
add
push
in
stos
hlt
fistpl
add
cmp
add
loop
dec
aad
adc
cmp
aam
out
adc
cmp
xor
rcrl
mov
testl
mov
add
out
popa
in
cmp
jl
add
movsb
imul
and
xchg
ds
scas
aas
mov
jae
fimull
mov
and
push
inc
jge
sub
mov
lahf
jnp
mov
inc
xor
mov
jbe
jae
mulb
dec
fstps
aam
dec
mov
pop
nop
test
or
lahf
add
adc
or
adc
int3
and
xor
cmc
test
add
cmp
xchg
fwait
inc
push
fnstcw
daa
add
mov
int3
in
xor
enter
pop
cmp
jp
stos
lahf
fs
and
add
cmp
xchg
add
push
adc
mov
int3
aam
adcl
ret
push
out
in
sbb
push
xchg
stos
pop
sbb
inc
jae
rorb
pop
ret
mov
fs
loop
fucomip
mov
mov
dec
sbb
mov
or
lods
leave
push
push
inc
mov
xor
cmpsb
aaa
adc
lret
xor
and
cmpsl
ljmp
push
enter
push
aaa
movq
ja
fidivs
ja
inc
sbb
sbb
out
mov
inc
add
sbb
pop
cmpb
nop
sbb
mov
imul
jl
add
or
dec
loopne
jecxz
xlat
add
cmp
in
stc
jle
nop
dec
ss
pop
lret
enter
sbb
push
jnp
repz
xlat
sub
push
and
ds
xor
movsb
mov
mov
xchg
add
sahf
cmpsb
mov
imul
jb
pop
sub
into
lds
push
cmpsl
out
sbb
push
add
xchg
aas
sub
lds
cmp
jno
dec
call
rolb
jecxz
mov
mov
mov
push
lock
cmc
hlt
lds
dec
sub
mov
lcall
fwait
mov
inc
add
cwtl
add
xchg
cmp
enter
popa
jnp
test
push
mov
and
aas
call
push
loopne
aam
out
dec
sub
daa
jle
add
leave
loopne
stc
test
mov
add
lahf
push
dec
arpl
dec
addl
cmc
sbb
push
pop
imul
pop
or
add
cmp
jg
pop
ret
or
rol
andb
xchg
lods
sub
xchg
cmp
movsl
xchg
mov
cmp
xchg
scas
inc
xor
out
cmc
lods
sub
pushf
mov
dec
addb
adc
lahf
sub
scas
jno
add
movsb
jbe
scas
push
lahf
pop
add
xor
cmp
cmpl
jp
xchg
pop
add
mov
fwait
dec
dec
inc
imul
push
ret
loop
push
mov
cld
push
sub
hlt
add
fisttps
out
ljmp
mov
mov
inc
sub
add
inc
and
sbb
add
jmp
rcrl
or
rorb
or
je
imul
inc
xor
cwtl
cmpsl
fstl
mov
cltd
sbb
into
jge
movsl
xchg
add
add
jo
and
cs
add
push
add
inc
sbb
push
rcrl
mov
sbbb
fistl
add
mov
nop
and
inc
push
arpl
inc
sbb
stc
mov
add
add
pop
inc
sahf
add
out
leave
in
sub
out
inc
push
cmp
add
sub
add
jae
jp
fidivl
rcrl
xchg
enter
and
lahf
outsb
mov
mov
add
cmp
test
pop
adc
in
lret
jp
add
jns
sub
scas
sub
bnd
dec
aas
pop
addb
std
pop
jno
insb
xchg
rcll
les
xor
or
dec
or
cmp
dec
sub
jecxz
shr
cmp
lret
push
sbb
mov
adc
sub
and
sub
test
add
gs
div
jg
xor
scas
imul
mov
adc
add
sub
sub
orl
add
cmp
xor
je
and
imul
loope
aaa
repnz
xchg
dec
xor
xlat
mov
rolb
add
lock
add
mov
sub
call
adc
mov
inc
or
mov
xchg
cltd
fwait
add
iret
shrb
adc
mov
lcall
pop
sahf
xor
add
pop
aad
dec
call
and
cmpsb
dec
rolb
lds
pop
sarb
adc
adc
cmp
in
loopne
mov
adc
xchg
sub
sbb
loopne
psllw
xlat
iret
rcrb
inc
or
adc
jne
or
subb
call
ds
rolb
sub
add
jg
sub
add
cmp
sbb
sub
ja
imul
lret
pop
pushf
testl
adc
in
pop
add
mov
lret
xchg
cmp
lods
sarb
out
jg
cmc
pop
aaa
loope
pop
scas
mov
mov
add
push
cmp
xchg
lret
add
jne
lret
mov
loope
pop
cld
cli
aad
pushf
jo
jge
jae
popa
std
cmpsl
das
mov
lcall
adc
shll
cmp
sbb
xor
fs
outsb
push
xlat
add
aas
mov
movsb
lock
jmp
add
out
add
shlb
in
dec
xorl
add
movsl
jb
loopne
push
push
pushf
cwtl
or
sbb
add
ja
rorb
ljmp
push
xchg
int3
ljmp
in
add
out
int
add
cmp
dec
dec
shl
jne
into
sbb
adc
push
fdivrs
sub
int
movsl
pop
rorb
repnz
cmc
loop
fsubrs
cmp
movsb
js
add
int
mov
nop
xor
outsl
cmpsl
sbb
pop
lret
pop
mov
lds
dec
add
and
fdivrs
movl
ret
push
mov
add
jmp
pop
add
cmpsl
int3
or
jbe
pushf
add
jecxz
dec
imul
add
and
push
cmp
fidivs
add
mov
mov
or
pusha
jp
call
lahf
push
mov
and
inc
xchg
mov
int
add
sbb
and
add
pop
data16
ret
sahf
push
popl
xlat
call
pop
js
mov
dec
fadd
jbe
sbb
mov
pushf
xlat
imul
out
cmp
out
jl
or
pop
mov
daa
lds
repnz
add
pop
fisubl
cmp
or
sarb
shll
add
outsb
cld
and
fs
pop
xor
adc
into
jns
push
test
sysenter
xchg
sar
add
and
inc
sbb
jno
cmp
cmc
cmp
test
repnz
mov
addr16
push
add
les
mov
jp
fcmovu
cmp
pop
xor
xchg
pop
insl
push
cltd
hlt
stos
repnz
xor
mov
pop
pop
add
mov
fcmovbe
adc
add
sbbl
fcoms
adc
arpl
add
rorl
dec
sub
push
add
gs
daa
lcall
pop
mov
sub
inc
add
add
jecxz
push
popf
add
add
add
je
xor
xor
sbbb
fnstcw
repnz
popl
movsb
or
or
and
aas
ds
xchg
jo
xor
adc
mov
std
jnp
das
jo
inc
nop
dec
jo
js
loope
jl
xor
and
rorl
inc
xchg
inc
aas
fisubrs
fs
or
and
pusha
xor
cmpl
or
sbb
add
push
into
mov
ds
es
xor
pop
push
pop
aam
inc
add
in
and
scas
sbb
mov
shll
into
int3
inc
or
sbb
xchg
inc
push
adc
mov
add
xor
inc
ror
mov
std
cmpsl
stos
sbb
or
mov
sbb
rclb
mov
leave
adcb
adc
xchg
stc
adc
xor
xor
and
push
inc
inc
pop
or
and
jl
mov
and
icebp
adc
or
push
mov
add
adc
pop
enter
adc
mov
inc
or
lods
sbb
inc
or
inc
push
or
xor
push
xor
mov
push
lds
outsl
subb
xor
rclb
or
sbb
es
fnstcw
bound
sbb
lcall
adc
pusha
mov
xor
xor
mov
icebp
rcrb
xchg
cwtl
cltd
mov
cmp
cmp
and
inc
lea
jmp
xor
loop
xchg
dec
inc
add
and
adc
test
int3
adc
call
stc
shll
loope
je
lea
and
fsubrl
push
in
xchg
push
mov
nop
mov
adc
mov
loopne
mov
jne
clc
js
into
cmp
pop
and
xchg
loopne
loope
iret
add
mov
add
jl
mov
nop
xor
mov
mov
push
mov
lcall
das
and
push
cmp
iret
add
adc
cltd
pop
adc
inc
and
loopne
and
fwait
push
adc
adc
fwait
mov
ds
sub
jo
data16
clc
inc
adc
and
sub
pushf
xchg
push
pushf
pop
sbb
xor
lahf
add
ror
les
jl
dec
lahf
add
sarb
sahf
mov
or
push
mov
shlb
add
loope
add
sbb
test
jl
push
inc
cwtl
jecxz
dec
mov
cmpsl
ds
shlb
add
sbb
test
add
adc
shlb
dec
enter
test
cwtl
ret
adcl
mov
jo,pt
stos
in
dec
adcl
inc
stos
jecxz
adc
add
loop
es
mov
andb
lock
mov
mov
rcll
adc
js
lods
addb
xchg
or
mov
clc
adc
mov
and
sub
push
pusha
cmp
out
mov
ret
sbb
jl
nop
lret
sar
mov
mov
shlb
lahf
add
enter
mov
test
mov
xor
mov
push
mov
pusha
mov
xchg
mov
add
sbb
mov
test
mov
mov
mov
loope
mov
test
dec
mov
fsub
nop
shll
rol
je
jo
clc
rcrb
call
adc
cmp
mov
clc
inc
dec
lds
pop
adc
sub
xor
enter
insl
mov
popf
adc
mov
aas
add
ror
repz
mov
sbb
mov
jge
fstpt
sub
pop
fistpll
adcb
fstpt
loopne
push
test
inc
in
sbb
loop
aaa
xchg
inc
and
pusha
sbb
cwtl
nop
mov
orb
mov
pop
loopne
clc
and
jno
inc
loop
jb
pop
pop
loop
mov
frstor
lahf
adcb
in
test
loop
in
call
inc
or
jecxz
cs
jecxz
jle
jecxz
add
and
lock
in
cmp
nop
rcrb
or
out
aam
push
test
sub
and
nop
sub
inc
jle
jno
loopne
enter
and
out
cld
push
mov
inc
call
push
pop
adc
lret
inc
out
clc
shl
inc
sbb
mov
andl
xchg
lock
or
aaa
adc
jo
and
inc
sbbl
icebp
and
and
out
mulb
nop
aas
push
cmpb
or
cmp
cmp
sbb
sub
add
cmp
sbb
sbb
adc
xor
and
add
jl
xchg
or
call
adc
orl
push
push
mov
jne
pusha
cmp
mov
mov
lea
movsl
enter
test
nop
xor
dec
int3
adc
les
and
lock
mov
jbe
mov
cmp
inc
jmp
push
mov
dec
and
out
add
clc
add
inc
lock
push
loopne
sub
dec
sbb
jo
mov
add
add
fptan
je
inc
push
scas
in
adc
test
mov
adc
rolb
adc
out
sbb
sahf
mov
mov
and
pop
or
push
inc
and
cltd
adc
shrb
add
ret
inc
aas
pop
push
test
mov
sti
or
add
and
jmp
testb
add
pushl
sbb
dec
inc
sub
in
shll
inc
cmp
loopne
mov
pop
add
push
adc
sub
mov
ds
sbb
inc
cwtl
and
test
adc
mov
inc
and
inc
mov
test
das
stos
inc
sbb
inc
repz
and
pop
sbb
add
xchg
xchg
sub
cltd
lock
gs
sarb
push
push
bound
adc
pusha
jl
sub
lock
lock
loopne
addl
adc
xchg
xor
adc
fwait
inc
lods
xor
addl
das
xor
jecxz
mov
and
bound
cwtl
stc
addb
inc
mov
gs
loop
sarl
pop
mov
mov
or
inc
test
cmp
mov
loopne
scas
rol
jmp
scas
mov
fdivrs
jbe
jmp
mov
in
hlt
sub
popa
sub
push
int
sarb
cmp
mov
ljmp
out
cmp
cmp
push
inc
sbb
add
mov
add
xor
lcall
sub
add
or
xor
cwtl
mov
jmp
hlt
mov
add
jmp
loope,pt
inc
or
pop
mov
loopne
lds
mov
or
pusha
out
jo
sbb
nop
notb
mov
rcrb
sub
lock
les
pop
in
mov
xor
sbb
sub
sbbb
or
push
les
mov
add
push
add
push
adc
mov
adc
in
fcomp
data16
fmuls
dec
js
mov
cmp
adc
clc
jo
pop
loop
and
das
adc
rcrb
adc
inc
gs
cwtl
mov
rcll
ja
loop
inc
add
cltd
or
jns
cmpsl
xor
push
mov
mov
popa
jo
inc
cmp
call
sbb
xor
test
and
push
adc
mov
nop
loopne
mov
sub
add
pop
adc
sbb
mov
pusha
dec
fstl
in
pop
movsb
or
add
es
pop
mov
stc
add
jo
out
jle,pn
and
adc
inc
mov
int
xor
and
cmp
and
xor
inc
aam
je
cmpb
dec
pop
in
dec
dec
icebp
mov
sarb
push
sub
jge
sbbb
dec
je
shlb
fcom
pusha
cmp
xor
pop
inc
lock
or
cltd
xor
push
inc
shl
lods
cmp
inc
in
mov
inc
inc
popf
cmp
dec
daa
inc
inc
sbb
shlb
lods
mov
cwtl
icebp
repz
loop
dec
add
call
inc
lods
loopne
dec
inc
cmc
test
inc
sub
adc
mov
mov
bnd
add
add
pop
inc
xchg
inc
mov
pop
inc
popa
rclb
xchg
inc
je
and
sub
pop
inc
pop
dec
in
sub
dec
mov
jmp
mov
nop
cmc
mov
xchg
jo
add
add
js
xchg
sbb
and
xchg
aam
inc
sbb
xor
dec
pop
and
xchg
enter
pop
dec
in
cmp
mov
sarb
push
cltd
xchg
pusha
je
inc
and
xchg
inc
push
adc
inc
cli
ret
inc
aaa
popa
sbbb
test
mov
sahf
pop
mov
stos
push
popl
push
fdiv
adc
or
jmp
cmp
jbe
cmp
shl
aaa
out
ds
jl
xor
add
cmpsl
dec
aaa
pusha
push
lret
sbb
push
inc
sarb
add
mov
daa
shl
roll
push
mov
and
jnp
scas
cmova
jp
adc
add
dec
inc
mov
pusha
stos
mov
mov
test
movsb
add
loopne
cmp
jno
lods
push
dec
mov
mov
pop
pop
pop
dec
push
stos
push
dec
and
rol
shrb
bound
pop
add
mov
jmp
mov
mov
testl
lods
inc
jl
pusha
mov
sub
loopne
inc
in
mov
jbe
adc
inc
mov
enter
inc
mov
cmpb
popa
add
adc
mov
les
rclb
add
mov
rol
outsb
adc
cmp
mov
pop
cmp
mov
shl
movsb
mov
dec
stc
mov
call
adc
sar
loopne
outsl
test
shll
andb
inc
cli
mov
mov
rorb
test
sarb
adc
sar
rcl
mov
xchg
add
and
loopne
add
add
sbb
xor
xor
inc
xchg
xor
push
and
push
fstpt
mov
sub
int
lock
mov
dec
sub
cld
inc
fwait
test
loopne
test
jmp
lock
jmp
nop
pop
inc
push
lcall
movsb
or
cwtl
in
adc
pop
and
xchg
or
and
inc
adc
popf
mov
je
call
and
sub
dec
sub
adc
mov
popf
mov
push
adc
test
aaa
loopne
cmp
cmp
dec
sub
dec
fmull
mov
and
cmp
sub
or
xchg
mov
xor
cmp
aaa
adc
and
sub
sub
xchg
adc
dec
inc
and
xchg
andb
ret
add
stc
dec
icebp
xchg
loope
roll
inc
cld
mov
adc
and
dec
rclb
inc
lds
push
xor
adc
mov
sbb
jnp
cld
jae
push
or
jle
cmp
sbb
insl
push
bound
sub
cmp
pop
adcb
cmp
inc
ss
fistl
adc
or
fistl
sbb
adc
mov
adc
xchg
sbb
mov
add
aas
out
popa
dec
mov
cmp
testb
outsl
dec
xchg
scas
out
lock
add
insb
out
shl
lds
cmp
and
add
cmp
loope
pop
stos
jb
push
test
add
add
or
cmp
add
xor
repz
sar
inc
mov
mov
dec
mov
jae
add
jg
loopne
shrb
in
sbb
and
adc
das
add
pop
fbld
add
mov
add
pop
or
cmp
add
les
or
cmp
pop
add
aaa
testl
mov
jnp
add
ja
call
in
aam
jmp
add
pop
xlat
test
cwtl
pop
movsb
add
stos
imul
push
add
xor
push
add
incb
shll
or
addb
mov
dec
mov
jno
add
jge
loop
shrb
add
push
fisubs
loope
shrl
mov
add
pop
mov
add
pop
or
cmp
push
add
testb
cmp
add
mov
jp
add
jbe
dec
mov
mov
sub
sbb
es
push
sub
sbb
and
stos
push
pop
cmpsb
add
push
test
push
gs
push
add
lret
cmp
aam
mov
jne
daa
cmovo
in
add
add
in
or
rolb
inc
mov
mov
shrl
pop
add
mov
jnp
bound
mov
subb
mov
sbb
cmpsl
inc
mov
push
mov
cs
test
dec
ss
adc
or
mov
inc
not
inc
add
dec
add
je
jne
addr16
gs
js
arpl
ja
mov
faddl
dec
xor
mov
or
dec
lret
xor
and
sub
ljmp
inc
nop
cmp
xorl
and
add
mov
inc
fisttpll
inc
negb
or
cmp
pop
inc
jle
sbb
push
mov
inc
dec
shlb
cli
inc
sahf
ljmp
xchg
or
add
sub
sbb
xchg
xor
and
movsb
xor
pop
repnz
sbb
or
xchg
mov
nop
and
and
dec
popa
xchg
mov
and
in
or
or
add
into
ss
inc
add
push
push
nop
jo
punpckhwd
push
arpl
call
mov
add
and
sar
dec
push
addr16
in
sub
clc
push
push
popa
cmc
je
into
or
shrl
loopne
imul
and
inc
bound
sub
jb
dec
jae
xchg
mov
mov
cmp
xor
rolb
xor
push
push
xchg
dec
movsl
adc
inc
mov
push
and
mov
dec
sub
mov
movsl
push
mov
sbb
push
or
add
testl
mov
jae
outsl
jne
inc
sub
lock
and
addr16
pop
nop
test
rorb
or
sahf
mov
or
or
popa
and
or
mov
or
and
lahf
xchg
or
and
inc
fs
mov
sub
clc
adc
nop
jae
lods
adc
mov
cld
and
inc
pop
mov
cwtl
and
lock
sbb
mov
inc
mov
popa
and
add
daa
mov
jo
and
aaa
inc
ljmp
test
enter
fmul
adc
enter
inc
imul
into
jo
inc
mov
xchg
pushf
idivl
sbbb
inc
jbe
je
and
gs
jo
gs
xchg
sub
and
pop
mov
adc
adc
mov
dec
js
inc
ret
and
test
mov
or
fs
aas
mov
inc
rorl
jbe
fmull
push
and
pusha
repnz
push
into
inc
mov
or
call
divl
inc
push
dec
inc
rclb
fs
loopne
and
and
push
and
xchg
dec
cmp
mov
xor
fnstenv
inc
repnz
nop
aaa
std
das
mov
repnz
adc
int3
dec
or
sub
das
mov
les
lret
aam
insb
js
mov
fldl
mov
repnz
pop
sub
das
sbb
jns
cs
sbbb
and
add
mov
adcl
fstps
adc
sub
mov
pop
and
inc
dec
cmp
shrb
sub
outsb
das
enter
jle
clc
loop
fisttpll
or
bnd
mov
clc
add
js
insb
fs
xor
adc
and
sbb
push
inc
xchg
sbb
daa
xor
dec
inc
dec
jg
adc
push
dec
push
imul
cmp
inc
and
je
jb
cmp
scas
inc
je
pcmpeqw
loopne
jo
popa
jns
sbb
dec
or
mov
xlat
lret
lcall
imul
mov
mov
andl
arpl
push
push
inc
push
xor
outsb
jb
pop
push
inc
cmpsb
addr16
fdiv
lret
loopne
in
fsts
mov
into
leave
testb
rcl
bound
cmpsl
add
cmp
push
adc
sub
add
dec
xchg
cmp
adc
inc
inc
js
cs
dec
jecxz
dec
mov
mov
sbb
shll
mov
mov
in
push
std
inc
push
or
jns
pop
les
cmp
or
shlb
adc
sub
loopne
and
out
loop
lds
adc
sub
inc
jne
aaa
addb
and
push
je
sub
inc
or
in
xchg
mov
les
add
cmp
inc
cmp
mull
pusha
movsb
rclb
call
mov
sub
inc
push
stos
xchg
in
les
jmp
mov
shl
sub
popa
das
inc
jle
rorb
call
inc
cmp
fdivs
inc
icebp
inc
xor
mov
cltd
js
xor
nop
cmpl
xchg
mov
add
pop
dec
xor
das
imul
ret
xor
and
add
sarb
call
add
loope
or
cmp
cmp
and
cmp
jno
xlat
or
testl
nop
andl
inc
adc
or
jo
lock
cwtl
rclb
cmp
cmp
add
outsb
dec
addr16
sbb
cld
sub
sbb
aaa
and
inc
dec
pushf
pop
dec
mov
rclb
xchg
sub
inc
jo
and
pop
add
cmp
movsb
add
inc
test
jo
shrb
add
inc
shrb
and
mov
dec
pop
pushf
mov
mov
sub
xchg
jae
lds
push
ret
les
inc
xor
in
cmp
mov
arpl
mul
xor
repnz
std
inc
sbb
enter
test
sbb
fildll
gs
sub
bound
pop
cwtl
dec
sbb
rcrb
addr16
xor
pop
lds
shlb
shl
call
mov
pinsrw
outsb
adc
cmp
pop
mov
lock
sub
inc
jns
push
xchg
inc
xor
or
mov
shl
jp
push
arpl
imul
cmp
js
mov
sbb
or
test
xor
and
add
fdivrl
pusha
addl
in
dec
inc
xor
jmp
cmp
add
mov
mov
push
mov
js
paddusw
cmp
pop
imul
fdivrl
pop
dec
xor
movsb
jns
push
adc
mov
in
pop
sbb
jns
add
arpl
das
jno
popa
adc
pop
and
clc
xor
or
mov
nop
and
test
add
repz
inc
dec
push
pusha
pop
jbe
clc
rcrl
jno
dec
xchg
cmp
fdivl
adc
repnz
hlt
jo
test
or
cmp
lock
xor
fisttpll
adc
sahf
pop
je
sub
jne
push
sbb
movsl
loopne
and
push
mov
mov
dec
sbb
arpl
outsl
lret
inc
jle
and
or
enter
leave
rcll
xchg
or
movsb
xchg
cmp
inc
popf
jge
sahf
cltd
add
cwtl
adc
push
dec
test
fcomps
popa
jo
xlat
sub
fs
call
les
inc
push
pop
xchg
sub
fs
insb
or
dec
daa
mov
fwait
sub
mov
xchg
adc
jecxz
and
add
iret
xchg
adc
mov
sub
out
mov
adc
mov
mov
dec
je
je
jae
ja
jne
in
xor
fs
pop
orb
test
cmp
sbb
xor
clc
dec
shrb
mov
aaa
cmp
push
sbb
inc
mov
adc
inc
inc
or
pop
lret
push
daa
mov
rclb
or
inc
stc
std
subl
dec
xchg
push
adc
dec
push
mov
sbbb
xchg
test
xor
and
es
in
mov
pop
mov
inc
lods
push
push
jo
xchg
push
adc
and
dec
dec
mov
xlat
push
outsb
imul
inc
mov
outsb
fistpll
dec
outsl
cmp
data16
jae
in
mov
and
fdivl
cmp
mov
mov
adc
movsl
or
decb
nop
cmp
add
or
push
and
jae
loopne
ret
cmc
mov
and
add
cmp
push
add
sub
dec
jne
or
add
das
in
shld
inc
dec
inc
or
test
in
adc
bswap
aam
cs
in
mov
sub
dec
loope
js
cwtl
adc
test
inc
jo
mov
and
lock
bound
mov
add
adc
inc
dec
add
sbb
inc
inc
adc
inc
xor
dec
xchg
jle
pop
xor
inc
mov
es
adc
inc
fwait
inc
cli
or
xchg
icebp
or
adc
dec
or
or
sub
and
and
ret
sbb
stos
xlat
ret
xchg
or
out
popa
pop
and
dec
inc
inc
jmp
push
cwtl
push
jmp
mov
fstpt
xor
push
mov
push
sbb
mov
xchg
lahf
push
sbb
jl
xor
mov
inc
inc
xchg
push
cmp
dec
push
push
sbb
xor
adc
bound
cmp
lret
mov
or
inc
cmp
aaa
test
insl
jl
inc
jae
fdivs
popa
data16
icebp
cwtl
and
ja
cmp
add
cmp
sbb
or
fs
inc
xor
pop
jbe
inc
aad
push
repz
rclb
lret
jle
pop
push
sub
mov
inc
fisttpll
jecxz
pusha
xor
clc
pushf
popf
jo
mov
cwtl
lahf
iret
and
in
sub
mov
mov
orb
sbb
rolb
aaa
jl
stc
sub
jns
push
dec
and
mov
and
push
inc
jb
and
jo
mov
cld
test
jns
lds
dec
push
fisubl
lods
inc
push
insl
int
je
adc
xor
or
jae
pusha
mov
sbb
ffreep
or
push
and
dec
and
lods
ret
and
jns
stos
inc
sub
in
push
aaa
popf
pop
lods
adc
pop
adc
mov
and
aad
cmp
fstp
inc
push
imul
add
cmpsl
adc
dec
inc
les
jae
push
int
xor
xor
jnp
jae
mov
dec
inc
push
jae
dec
dec
xor
jl
lock
jg
add
fimull
pop
leave
ds
mov
dec
jg
fimull
ret
or
lock
jg
or
jns
or
mov
movsb
data16
and
fs
push
es
and
pop
push
adc
push
adc
mov
mov
ss
jb
fwait
or
sub
or
jle
dec
xor
push
or
xor
xchg
or
and
in
dec
cs
mov
or
xchg
adc
lcall
and
adc
sbb
jmp
and
sbb
push
and
xor
push
sbb
outsb
and
xchg
xchg
adc
or
or
sbb
push
ret
cli
add
add
inc
add
les
push
and
cmp
pop
pop
or
xor
iret
lea
in
pop
dec
pusha
push
jo
js
std
inc
ret
ja
icebp
mov
daa
push
sub
add
mov
je
push
inc
mov
or
inc
push
pushf
dec
lock
push
int
inc
or
sbb
adc
test
mov
adc
test
enter
test
jns
mov
dec
insb
adc
test
mov
pop
loope
push
pop
mov
addl
mov
jb
stos
adc
adc
cmpsb
lds
pop
mov
inc
pop
fnstenv
call
sub
push
xor
push
dec
inc
lret
xchg
js
jo
mov
sub
js
push
aad
pop
sbbb
scas
sub
adc
adc
jmp
adc
or
icebp
and
and
in
jl
loope
adc
mov
rclb
pop
xchg
loopne
add
sub
add
cs
mov
sbb
dec
sub
jo
inc
mov
dec
sub
loopne
enter
inc
add
cli
add
inc
in
sbb
and
sub
sub
dec
inc
cmp
sub
fldcw
enter
cmp
inc
nop
xor
lahf
lock
push
rolb
adc
nop
mov
mov
sub
cmpsb
adc
test
mov
aaa
xchg
jo
or
sarb
and
inc
shlb
cld
clc
cmpsl
push
clc
sub
repnz
adc
mov
inc
js
inc
sub
loopne
mov
push
adc
lahf
mov
add
jns
inc
adc
lds
das
outsb
fsubrs
push
push
push
iret
test
sbb
mov
scas
sub
mov
jbe
loopne
clc
mov
adc
lock
jl
adc
sub
mov
push
cmp
test
inc
xor
mov
shlb
jl
xchg
sub
pop
push
lock
xchg
fmuls
clc
sub
nop
inc
sub
adc
js
cld
pusha
inc
xor
dec
push
nop
adc
cmpsl
shl
aas
and
je
xchg
call
cltd
adc
dec
push
lds
xor
jns
inc
sub
call
xor
mov
mov
pop
adc
scas
and
call
lret
jbe
and
pop
and
xor
dec
adc
adc
xor
inc
js
nop
mov
jp
xor
repnz
mov
clc
adc
jo
rclb
and
call
sbb
test
in
jo
in
jge
inc
cwtl
cltd
adc
xchg
sbb
fmul
push
adc
rorb
js
push
mov
pop
js
push
adc
adc
loopne
jle
cmp
and
adc
push
push
rorl
add
and
lock
mov
pop
mov
inc
movsb
jbe
add
ss
testb
mov
pop
jno
pop
push
inc
inc
mov
push
mov
sub
aam
loopne
rolb
adc
enter
inc
aaa
loope
aaa
push
inc
inc
inc
cmpsb
adc
call
pop
or
or
push
cwtl
jo
dec
adc
adc
and
inc
fsubs
test
lods
pop
mov
inc
iret
inc
xchg
sbb
xor
outsb
mov
sbb
jmp
sbb
inc
test
adc
cwtl
mov
addl
rclb
mov
add
rolb
and
or
mov
cmp
dec
push
cmp
je
xor
adc
or
call
xchg
insb
adc
adc
and
jle
loopne
enter
push
cwtl
mov
cmp
stc
cmp
enter
pop
mov
adc
repnz
cmp
cli
ss
addl
in
outsl
and
call
lret
jbe
and
jo
cmp
adc
cmpsl
push
fs
and
adc
enter
push
sarb
call
add
call
cmp
add
cmp
call
or
cmp
sub
mov
mov
int
push
mov
cmpl
repz
cmp
cmp
dec
adc
push
pop
cwtl
loope
cmp
fiaddl
in
pop
inc
and
mov
inc
pop
sub
in
cmp
inc
loop,pt
cmp
inc
sub
adc
or
lock
adc
notl
in
inc
call
subl
test
enter
push
js
inc
push
loop
ds
in
imul
sub
push
aas
clc
loop
cltd
pop
cmp
mov
and
inc
jo
jo
sub
repnz
push
inc
shl
push
inc
call
adc
lock
js
push
xchg
and
pusha
imul
xor
add
mov
push
fisubl
and
xchg
in
adc
mov
add
nop
bnd
mov
enter
inc
fwait
add
adc
push
mov
push
rcl
sub
dec
xchg
out
icebp
push
inc
push
mov
sbb
icebp
dec
xor
mov
sbb
xor
cmp
or
fs
dec
sub
adc
call
adcb
dec
sub
adc
or
xchg
push
cmp
mov
xchg
lock
sti
or
push
xor
adc
and
jb
cmp
aaa
cmpsb
sub
mov
or
sbb
and
dec
les
adc
inc
adcb
cmpl
nop
inc
inc
loop
sahf
mov
sub
enter
icebp
xor
lock
push
lock
xor
inc
fsubl
adc
sbb
les
and
xchg
cmp
push
xchg
cmpb
andw
jl
insb
mov
test
mov
clc
in
xor
sub
js
fisubrs
lret
pushl
sub
push
dec
cmp
pusha
inc
mov
mov
jo
out
fdivs
xchg
nop
test
cwtl
mov
and
jo
jnp
sub
in
jb
and
outsl
adc
pop
ja
mov
pusha
cs
or
cmpsb
and
xor
pop
jbe
nop
fadd
adc
scas
adc
inc
jecxz
push
adc
cmp
sbbb
inc
sub
repnz
cwtl
repnz
inc
shl
pop
cmp
in
cmp
inc
dec
loop
push
inc
cmp
pusha
push
stc
sbb
sub
and
loopne
clc
mov
rol
subb
dec
pop
loopne
jmp
xor
rorl
adc
or
arpl
lds
push
sub
and
xchg
cmp
inc
inc
fs
push
mov
xchg
pusha
iret
push
inc
dec
hlt
sub
enter
jb
and
outsl
sub
adcb
sub
lock
xchg
xor
icebp
adc
mov
add
xor
xor
shlb
add
es
data16
sbbb
inc
xchg
or
movsb
icebp
es
push
inc
into
push
mov
adc
and
dec
or
push
pop
inc
or
or
and
dec
xor
push
dec
mov
adc
adc
xchg
adc
jbe
adc
adc
mov
inc
push
mov
and
dec
fcoms
sbb
mov
adc
pop
add
adc
xchg
push
je
sub
pop
and
push
lret
dec
jo
pop
xchg
mov
inc
imul
subb
and
push
loopne
dec
cmpb
js
mov
mov
mov
mov
mov
or
sbb
push
and
xor
push
inc
and
push
and
clc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
push
adc
push
and
push
xor
push
and
dec
and
pop
and
adc
add
push
cwtl
test
pop
push
mov
or
sbb
mov
cmpsl
xor
cmp
xor
sbb
add
sub
ret
pop
inc
mov
sub
adc
loopne
pop
sub
cwtl
lods
sub
pusha
lock
xor
adc
sbb
push
pusha
jae
dec
aaa
adc
pop
movsl
adc
sbb
push
inc
pop
orb
push
nop
jns
mov
jns
sbb
mov
push
xor
clc
ljmp
adc
mov
andl
and
inc
pop
push
and
inc
mov
xchg
pusha
push
push
and
lds
or
sub
icebp
loop
add
mov
add
imul
add
dec
or
mov
or
popf
adc
and
xor
xchg
adc
ret
inc
adc
mov
sub
inc
adc
jo
inc
ja
in
or
fsubl
and
sub
mov
push
inc
fdivrs
pop
sub
mov
dec
fs
jnp
xchg
sbb
dec
movsb
adc
adc
mov
loopne,pn
push
fcoml
arpl
loop
push
dec
sbb
mov
xor
push
adc
and
mov
sbb
mov
adc
or
push
adc
xchg
or
mov
or
icebp
insb
xorb
push
lock
clc
cmp
adc
call
pop
push
imul
vprotb
dec
cmp
cmpsb
xor
mov
jb
pusha
xchg
or
out
mov
enter
xchg
inc
mov
insb
add
push
aaa
adc
js
call
lods
xor
sub
sbb
and
sbb
inc
jns
sbb
pusha
in
dec
clc
fiadds
add
adcb
mov
or
rcrb
fcoms
sub
or
add
add
movups
xchg
pusha
lods
xor
push
xchg
sbb
mov
sbb
mov
or
pop
push
push
lock
mov
xor
scas
call
js
fsubs
lock
adc
sub
fs
or
mov
mov
jo
shll
loop
mov
je
dec
loop
dec
push
clc
shl
adc
adc
inc
cmp
inc
cmp
pop
pusha
cmp
mov
inc
dec
inc
push
loope
sbb
push
inc
jae
jle
mov
pushf
add
sub
cwtl
loopne
in
jb
cmp
push
js
mov
aaa
or
xor
dec
loop
push
loop
add
cmp
push
mov
mov
sub
adc
pusha
lret
gs
push
sub
lock
in
cmp
inc
pop
loope
imul
sbb
mov
add
orb
mov
cwtl
pop
sahf
pusha
push
and
call
or
enter
dec
pusha
js
adc
mov
nop
xor
cwtl
cltd
sub
call
inc
shlb
push
push
sub
adc
clc
sub
mov
lahf
sbb
lea
xor
call
cmp
jo
sub
xchg
or
out
mov
and
push
jo
jo
push
jo
pop
mov
sub
pusha
mov
rclb
call
test
pop
arpl
les
and
pop
and
in
lahf
das
bound
js
cwtl
pop
mov
imul
sbb
mov
xor
mov
pop
fsubl
xor
jo
pop
in
in
add
pop
cmp
adc
scas
and
push
nop
outsl
mov
nop
pusha
sahf
fwait
and
push
enter
cmp
sbb
cmpsl
clc
mov
sbb
mov
pop
sub
adc
sahf
sub
jp
xor
mov
inc
icebp
jae
sarl
lods
pusha
cmpsb
push
inc
shl
xchg
sub
repnz
jno
mov
jns
mov
jnp
insl
jno
les
addr16
mov
insl
add
sub
adc
pop
test
lret
js
lock
and
dec
outsl
adc
pusha
in
or
mov
mov
aaa
enter
add
arpl
mov
cmp
inc
cmp
pop
xor
lds
cmp
dec
mov
mov
sbb
icebp
xor
iret
in
out
adc
outsb
arpl
les
les
les
les
les
les
les
les
les
lds
jnp
clc
lock
xchg
xchg
adc
adc
adc
adc
and
dec
and
hlt
and
and
outsl
add
dec
adc
inc
sub
mov
adc
das
xchg
and
sub
mov
dec
bound
xor
xor
subl
dec
xor
adc
mov
mov
mov
loop
iret
loop
fucom
xor
loop
stc
loop
mov
xor
loop
xor
xor
loop
dec
loop
pop
loop
imul
test
xor
xor
xor
loop
xor
scas
adc
add
or
and
aaa
mov
add
arpl
push
jno
imul
jo
fs
cwtl
sub
sbb
icebp
jle
add
cmp
shl
cmp
mov
sub
sbb
adc
push
aaa
nop
and
js
nop
inc
repnz
enter
repnz
nop
mov
mov
jns
sbb
loopne
sbb
dec
lods
cwtl
es
js
jae
jo
icebp
sbb
icebp
sbb
pop
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
sub
lret
shll
pop
fcompl
repnz
mov
cwtl
adc
adc
enter
mov
jo
mov
pop
pop
cltd
jo
cmp
sbb
pop
add
dec
mov
loopne
mov
cltd
pop
mov
addr16
xor
sub
push
jo
lods
inc
outsb
or
or
pop
xor
and
sub
mov
cmp
push
jb
cltd
sbb
or
inc
js
cmpsl
loopne
lock
cwtl
or
mov
inc
js
xor
and
jne
pop
imul
loopne
xchg
call
mov
and
mov
sub
call
dec
out
jno
sbb
pusha
mov
arpl
inc
adc
orb
jo
mov
mov
xchg
mov
add
sub
enter
add
arpl
les
les
and
lds
adc
inc
dec
ja
pop
mov
mov
pushf
nop
push
subb
sbbb
scas
mov
add
inc
pop
rcrb
push
shll
lock
adc
adc
mov
inc
xor
add
add
mov
mov
inc
mov
inc
mov
call
cltd
enter
addr16
mov
and
orb
ja
adc
fbstp
add
mov
nop
adc
enter
and
add
sbb
insb
mov
mov
call
repnz
jb
sbb
loopne
inc
or
shrl
icebp
or
insl
repnz
and
or
loopne
out
and
sub
nop
nop
mov
subb
ja
setl
inc
call
adc
loope
outsb
or
adc
push
push
mov
xor
dec
out
hlt
add
mov
scas
insl
subb
outsb
leave
xchg
adc
adc
inc
je
or
mov
xlat
adc
or
outsl
fsubl
and
pop
jo
and
nop
mov
jns
in
jb
and
outsl
and
and
sub
or
loope
jp
sub
sub
adc
add
adc
push
pop
pop
mov
enter
sub
mov
cwtl
cmp
call
mov
adc
into
pop
mov
push
lock
clc
inc
mov
jnp
add
cmp
jnp
js
sahf
add
xor
xchg
pusha
enter
mov
mov
and
test
sub
and
in
outsl
and
xchg
add
cwtl
js
jl
int3
lock
inc
and
pusha
rorb
clc
in
jb
das
or
enter
cmpb
adc
nop
and
cwtl
sbb
mov
stos
adc
mov
icebp
enter
mov
aaa
or
jl
add
sbb
jmp
clc
mov
lret
push
mov
arpl
adc
jge
sbb
mov
lods
cwtl
inc
je
test
push
and
and
inc
rclb
mov
fdivs
xor
cmp
cwtl
mov
sub
lcall
mov
push
call
clc
sahf
xchg
and
xchg
sbb
mov
pop
sub
mov
sahf
iret
and
mov
mov
mov
pop
jle
adc
and
mov
mov
mov
mov
mov
aaa
or
incb
jb
xor
adc
popf
pushf
add
loope
jle
inc
sub
js
sub
and
xor
xor
push
sub
adc
mov
dec
into
add
mov
cltd
push
sbb
lds
in
ja
xchg
push
push
call
xchg
sbb
or
dec
bound
xorb
dec
xor
loopne
inc
sbb
xchg
pusha
and
add
inc
jns
dec
pop
and
mov
push
cwtl
in
xor
lret
sub
shlb
or
in
add
testl
orl
dec
push
cmp
sbb
das
mov
adc
jns
jo
push
inc
js
adcl
xor
mov
fstpl
push
inc
jns
sbbb
jns
sbbb
jp
sbbb
jp
addb
push
sub
mov
nop
test
lret
addr16
push
add
add
enter
outsl
sub
pop
bound
jnp
adc
lret
pop
cmp
les
andl
cmp
in
jb
push
inc
cwtl
bnd
mov
jns
sbb
mov
push
push
scas
insb
pusha
add
add
xor
rol
jo
and
dec
inc
fldcw
and
add
cmp
or
xchg
clc
fsubrs
fcomp
loop
jl
aam
ret
dec
xchg
mov
add
adc
xor
sub
push
add
xor
and
and
pop
sbb
and
fdivrs
pshufw
push
push
inc
sub
push
jl
inc
js
nop
push
inc
mov
enter
inc
lock
push
and
jg
loopne
and
hlt
mov
js
test
sbb
jo
pop
test
fdivs
sbb
scas
sub
xorb
or
xor
sbb
cmpb
push
pop
mov
sub
mov
push
mov
nop
pop
mov
and
and
incb
rclb
add
subl
inc
push
addl
loopne
adc
and
aaa
nop
test
sarb
pslld
ds
les
inc
int
sbb
add
inc
sub
adc
cmp
pop
add
imul
fsub
loop
xorb
loop
les
dec
enter
fs
rol
push
mov
inc
xchg
lock
in
inc
filds
mov
adc
xchg
pop
aaa
nop
and
xorb
cmp
test
nop
dec
repnz
nop
pusha
repnz
aaa
nop
je
test
and
pushf
adc
add
inc
cmp
sub
sbb
mov
sbb
call
roll
sub
add
outsl
and
addl
cmpb
sub
test
fs
andb
inc
add
icebp
jae
clc
clc
dec
test
cld
add
xchg
adc
mov
pop
xor
mov
mov
sub
fmuls
test
xchg
sbb
sbb
xor
mov
xchg
sub
repnz
push
inc
xor
push
inc
test
sbbb
shl
cwtl
sahf
clc
inc
clc
repnz
mov
jnp
pop
add
mov
pop
push
add
inc
mov
cmpb
fldl
movsb
imul
hlt
add
xor
jno
sbb
sbb
enter
enter
inc
enter
pop
enter
insb
enter
or
fiadds
les
mov
test
cmp
mov
jns
adc
add
adc
loopne
mov
fisubrs
jo
jle
nop
mov
fdivs
cmc
in
lcall
xchg
add
mov
enter
pop
enter
cmp
dec
ds
pop
lods
pop
sub
and
pop
je
inc
inc
les
testb
or
mov
test
inc
ror
mov
lock
mov
mov
mov
sbb
sbb
call
cld
mov
sbb
movsb
inc
sbb
or
ja
jo
or
add
cmp
cmp
shl
adc
adc
cmp
cmp
cli
and
xor
subb
inc
loopne
leave
or
add
inc
rclb
adc
jo
and
clc
xor
cmp
push
sub
and
or
daa
cmp
xor
cmp
ror
or
mov
test
and
cmp
loop
aad
push
inc
sbb
adc
add
cld
mov
mov
pavgb
pop
xchg
loope
add
xlat
xchg
adc
sbbb
or
mov
sub
add
or
or
aam
stos
push
mov
add
lret
fld
cmpsl
int
repnz
push
shl
mov
std
lret
into
in
stc
fbstp
sbb
repz
push
adc
mov
dec
nop
into
jmp
loop
fidivrs
mov
enter
lret
fnsave
ror
mov
sbb
cmc
jl
arpl
or
or
ret
aad
xor
lret
or
adc
pop
sub
and
adc
push
jmp
lods
cmp
movsl
and
cmc
lds
mov
push
movsb
test
jae
leave
iret
mov
in
adc
jo
jb
and
repnz
into
les
sub
sub
lret
adc
pushf
test
out
shrl
push
add
mov
inc
into
mov
mov
out
fisubl
push
in
test
enter
jl
fs
dec
or
in
subl
sbb
scas
fucomp
or
in
test
jmp
lret
je
andb
jns
dec
sub
stc
adc
inc
cmc
rolb
jmp
pop
jmp
mov
mov
add
leave
das
adc
jmp
push
add
in
or
mov
or
cld
pop
in
movsb
dec
ja
popf
xchg
adc
jg
inc
add
inc
je
or
mov
nop
cwtl
inc
add
or
add
sub
adc
les
add
sbb
mov
xchg
push
jge
bound
aaa
mov
je
pop
xor
sub
js
movsl
aaa
dec
scas
cld
pop
push
notb
testl
xor
push
or
mov
xchg
pop
in
fisubs
aam
iret
push
stos
dec
add
adc
dec
jmp
jmp
jbe
std
pop
push
movsl
jp
mov
sbb
add
lods
nop
frstor
loopne
jmp
add
xchg
cwtl
cmc
dec
push
sub
push
mov
sub
adc
cmc
dec
fs
mov
insb
lcall
adc
pop
inc
ljmp
jg
lret
frstor
repnz
sub
pop
outsl
mov
push
add
lods
lahf
pusha
jle
clc
dec
sub
mov
in
lret
pushf
in
adc
mov
dec
cli
repnz
enter
call
mov
mov
mov
cmc
in
sbb
xor
flds
std
ljmp
push
adc
icebp
inc
sbb
mov
pop
adc
adc
aad
mov
add
mov
cmc
jle
xchg
mov
add
xor
shlb
aad
in
sub
cmpb
mov
jno
pop
push
rorl
lret
hlt
cltd
fs
in
adc
test
jmp
mov
dec
add
popf
dec
stc
call
fistps
adc
xchg
pop
mov
or
dec
fisttpll
pop
push
adc
push
inc
push
cmp
inc
mov
dec
or
add
mov
int3
add
add
or
or
or
adc
int3
jo
jo
inc
data16
stc
or
jl
clc
cmp
cmp
cmp
cmp
or
sub
fldl
mov
xor
or
cmp
cltd
lods
add
mov
dec
mov
inc
les
cltd
wbinvd
jg
add
mov
mov
daa
sarl
nop
shll
ror
dec
shl
jnp
or
call
pop
and
outsl
jg
pop
cmp
lea
stos
add
aad
jne
push
mov
loope
add
ss
icebp
cwtl
push
mov
push
or
pop
loop
adc
pushf
in
add
divl
adc
pop
or
popf
cmpl
adc
push
roll
or
mov
cmp
aaa
xor
xor
js
mov
dec
jmp
loope
adc
jecxz
sbb
adc
dec
cmpsl
lock
add
add
mov
ja
mov
flds
cmc
jp
pop
frstor
addr16
jns
imul
cmp
pop
jno
js
xor
je
jae
jbe
ja
cmpsb
mov
mov
adc
mov
mov
mov
mov
xchg
in
testb
repnz
xor
in
ljmp
xor
xchg
or
mov
clc
ljmp
icebp
ret
jb
or
cld
xchg
out
pop
push
mov
dec
sbb
xor
lret
stc
int3
pop
loope
test
jmp
clc
mov
iret
shrb
mov
test
in
xlat
jmp
cld
shr
xor
into
lods
inc
push
out
xor
mov
rolb
jmp
repz
shl
jge
bound
push
dec
enter
rorb
out
aam
icebp
inc
or
add
shlb
lods
js
push
lret
mov
frstor
or
mov
mov
rol
mov
add
adc
addr16
xlat
ffreep
out
mov
mov
mov
fsubs
fisttps
mov
fst
add
stc
sub
es
and
mov
inc
dec
sbb
mov
add
in
into
push
decl
dec
dec
xor
sbb
movsl
pop
sbb
leave
sub
mov
js
ret
mov
xchg
xor
inc
adc
and
cmp
jl
js
stos
xor
shlb
les
mov
adc
and
mov
les
shr
test
test
jns
dec
xor
xchg
addl
inc
dec
push
test
or
adc
rol
into
add
cmp
pop
adc
hlt
notl
and
mov
adc
push
popf
lods
ja
adc
insl
mov
push
adc
imul
jo
add
pop
inc
mov
lods
mov
cmc
inc
and
push
pop
inc
popa
je
bound
stos
xchg
repz
inc
outsl
outsb
pop
outsb
arpl
mov
adc
lods
inc
fists
cld
aam
popf
fstl
jmp
loop
mov
mov
jns
mov
jle
pop
loop
mov
adc
mov
and
push
rclb
push
hlt
sub
cmpsl
test
push
nop
pop
addb
ret
mov
xor
push
inc
add
adc
es
adc
and
fcmovb
sub
and
rol
iret
mov
or
adc
adc
ret
aam
rorb
movsb
pop
inc
addb
or
push
push
jbe
adc
push
adc
add
inc
push
dec
push
pop
dec
sbb
dec
dec
and
jp
rolb
or
popa
adc
push
pop
inc
mov
into
int3
in
xor
ret
xor
pop
repz
push
push
sarb
fcompl
stos
mov
fs
rcll
popa
jns
mov
cmpsl
or
sub
pop
hlt
out
mov
adc
mov
repnz
clc
add
stos
mov
jmp
inc
notl
jmp
mov
aas
or
add
stc
pop
ficompl
and
std
mov
mov
stos
push
jo
sub
test
das
stos
push
push
adc
xchg
mov
fidivs
or
inc
jl
bound
outsl
cmp
jmp
add
push
lods
daa
pop
dec
sub
arpl
adc
pop
and
or
xor
add
xor
dec
inc
inc
or
adc
insl
or
movsl
inc
adc
aaa
in
lock
xor
push
inc
das
mov
sbb
push
dec
pop
and
pop
sbb
adc
and
pop
paddusb
int3
sub
loop
popf
push
stc
add
push
inc
and
push
sub
lods
addr16
int3
pop
movsl
jg
mov
test
cld
jns
sub
cmp
jo
and
push
jge
xor
cmp
inc
mov
inc
es
cmp
js
mov
enter
or
data16
pop
fistl
roll
imul
outsl
pusha
pushf
hlt
loopne
scas
pop
ss
in
nop
rorl
shlb
adc
jae
cmp
lods
inc
rclb
dec
mov
cwtl
push
pop
xchg
sbbl
lock
popa
and
inc
lods
sbb
pop
xor
mov
sub
cld
and
and
dec
orb
dec
data16
and
outsb
int
mov
xor
xchg
mov
mov
xchg
sub
rolb
add
push
loop
mov
mov
push
iret
aad
nop
ds
daa
dec
fidivl
sbb
shrl
lods
pusha
movsb
and
jb
or
fs
and
push
fimull
and
push
test
add
xor
es
sbb
push
push
or
xchg
test
test
rorb
ds
bound
pop
mov
sbb
jns
nop
mov
add
in
insl
sub
cmp
add
push
push
data16
pushf
ret
enter
jb
push
stc
js
scas
push
ja
lret
adcl
xor
and
push
mov
ret
cmp
test
adc
push
add
or
and
dec
mov
xchg
and
dec
add
mov
emms
and
test
xor
repz
loope
ret
adc
mov
or
aad
or
add
in
cmp
add
xchg
add
xor
mov
adc
and
dec
and
or
and
mov
adc
and
dec
adc
or
adc
repnz
dec
or
adc
and
inc
cld
cmp
adc
hlt
adc
lock
xchg
call
sbb
fmull
xchg
fsubs
sbb
mov
adc
xchg
enter
les
mov
adc
and
dec
and
mov
mov
es
pushf
and
inc
cwtl
sub
nop
dec
sub
mov
test
sub
xchg
jl
das
inc
js
mov
and
dec
xor
push
xor
xchg
pop
and
inc
pop
and
arpl
fisubrs
insb
insl
outsb
jo
jb
jle
lret
adc
pop
or
add
prefetchw
push
or
or
add
adc
and
fsubl
gs
outsl
cmp
insb
aaa
mov
jae
pusha
cmp
add
sbb
sbb
and
push
sub
xor
sub
ja
dec
and
insb
imul
data16
outsl
sbb
sbb
sbb
and
xchg
push
sti
dec
add
sbb
sbb
sbb
pop
add
add
sbb
loop
xchg
push
aaa
sbb
sbb
pop
sbb
enter
push
push
add
lret
inc
pop
orb
xchg
or
or
mov
xchg
pop
enter
or
or
or
dec
add
sub
sub
cmp
mov
pop
and
test
subb
adc
add
adc
in
xchg
adc
sbb
sbb
adc
or
and
push
xorb
or
add
xor
pop
add
movsl
or
sub
sbb
add
push
add
push
adc
mov
sbb
inc
movsl
and
and
add
and
add
dec
adc
sub
xchg
sbb
or
iret
sub
sub
adcb
daa
sbb
nop
sub
xor
add
sub
enter
jl
xchg
mov
and
sub
fstps
or
or
push
das
adc
scas
add
repnz
xor
add
lock
xor
sahf
sbb
add
sub
das
dec
add
and
mov
jle
inc
sub
dec
or
sub
add
sub
push
adc
add
add
cmp
call
add
test
push
push
inc
into
and
loop
xchg
adc
push
push
add
pop
and
inc
cmp
xor
adc
and
stc
pop
push
enter
inc
orb
inc
cmp
xor
sbb
add
mov
xor
lret
add
sbb
orb
and
adc
addb
dec
nop
dec
rolb
mov
pop
enter
sub
enter
aaa
loope
orb
xor
sub
sub
shl
sub
sbb
mov
xor
xor
and
sbb
xchg
sbb
push
gs
xor
or
push
adc
or
pop
inc
add
cmpsb
add
enter
xchg
dec
sbb
or
loop
pop
push
xchg
add
pop
je
int3
add
or
mov
add
sbb
sub
or
arpl
xor
sbb
add
cmp
lea
push
add
xor
mov
or
imul
cmpsl
add
insb
andb
and
js
outsl
pop
adcb
mov
or
data16
jae
inc
je
std
dec
sub
add
jbe
pushf
push
inc
ja
js
jns
out
mov
add
jp
daa
pop
add
es
xchg
aaa
jecxz
jle
cmpsl
add
bound
sub
jge
and
jle
xor
jg
sbb
add
iret
cmpb
hlt
sbb
test
xor
and
test
pop
xor
sbb
enter
insb
xor
xchg
sub
sub
sub
xor
add
or
and
or
add
lea
sbb
enter
or
mov
or
gs
or
push
xchg
cltd
or
add
cld
sub
in
cmp
sub
adcb
add
xchg
and
jno
xchg
mov
push
inc
aaa
loopne
sbbb
sbb
in
dec
xor
or
xor
mov
and
popf
sub
add
sbb
add
push
push
in
push
or
mov
mov
pop
nop
sbb
add
or
sub
inc
cmpsl
test
enter
test
pop
add
das
inc
xor
daa
jns
stc
and
stos
push
addb
mov
lods
je
cld
aaa
lods
add
or
scas
xorb
or
enter
sbb
sbb
sbb
and
add
ss
sbb
and
lret
add
stc
daa
mov
nop
sub
or
push
in
and
and
and
sbb
mov
enter
xor
sbb
mov
add
or
pop
xchg
sbb
mov
sub
nop
daa
aaa
mov
mov
shrb
push
jle
push
aaa
add
arpl
jecxz
repz
lock
rorb
add
enter
adc
lret
add
loop
movsb
add
int
cmp
add
push
push
shlb
roll
sub
orb
das
shl
aam
and
add
mov
add
lea
cs
aaa
fldl
xchg
orb
add
int3
sbb
add
inc
sbb
sbb
and
das
and
jle
inc
sub
sbb
sub
fiaddl
sbb
add
testb
xchg
sbb
and
cmp
stc
pop
clc
sbb
lock
add
or
sbb
add
sbb
loopne
loope
sbb
add
rcll
inc
pop
mov
sub
add
and
cltd
or
pop
add
addb
out
call
add
ljmp
xchg
add
adcb
in
sub
adc
adc
xor
sub
mov
dec
and
sub
xchg
inc
xor
repnz
xor
hlt
xchg
adc
pop
add
sbb
push
orb
test
xor
idivb
movsb
add
or
or
orb
lret
stc
sbb
jecxz
sub
sub
sbb
add
cli
orb
and
sti
xor
dec
add
sub
sub
and
nop
daa
mov
jb
sbb
or
orb
xor
xchg
or
adc
and
and
inc
sbb
sbb
adc
dec
add
and
sub
adcl
xchg
add
and
or
pop
aaa
sbb
push
cmp
add
adc
cmc
pop
pop
orl
or
or
add
sub
push
sbb
test
xorl
subl
dec
adc
das
add
sub
adc
or
in
xor
adc
sahf
add
mov
push
mov
or
adc
sub
sbb
push
xor
sbb
sbb
and
and
sbb
orl
and
push
inc
sbb
and
pop
sbb
gs
aaa
pop
cmp
add
and
add
and
cmpsl
add
iret
and
sub
orl
aaa
push
and
and
sub
xchg
add
adcl
jmp
cmp
xor
test
and
sbb
sub
inc
sbb
sbb
sub
aam
mov
cltd
add
sbb
sub
jbe
sub
and
inc
xor
sbb
enter
xor
dec
add
sbb
inc
sbb
xor
cwtl
and
add
repnz
lods
loop
add
call
aaa
and
sub
cmp
sbb
and
insb
add
popl
adcl
add
xchg
or
add
aas
and
sub
xor
mov
inc
adc
pushf
add
adc
andl
in
pop
add
mov
or
inc
sub
cmp
add
aaa
pop
mov
sub
and
inc
cmp
add
add
xor
inc
bound
fmuls
icebp
cwtl
cwtl
jo
dec
sbb
xchg
js
loopne
dec
clc
adc
popf
add
jle
pop
mov
dec
add
or
xor
test
and
pop
or
or
xchg
js
xchg
loope
add
sbb
je
mov
or
dec
daa
insb
adc
and
aaa
adc
push
xchg
ret
movl
dec
loope
xor
xchg
mov
sbb
xor
sub
sbb
rorb
sub
test
or
lea
sub
pop
sbb
sub
xor
xchg
or
sub
or
aam
adc
das
push
test
call
add
or
roll
pushf
and
mov
sbb
xor
shlb
adc
and
xor
sub
push
enter
imul
jb
mov
and
leave
mov
push
sbb
lods
or
add
in
and
xor
hlt
das
dec
adc
sub
addb
lahf
or
mov
add
sbb
sub
inc
adc
or
push
orl
in
adc
cmovl
inc
xor
aaa
inc
sub
hlt
add
lods
fdivs
cmp
cmp
adc
and
movsl
in
mov
jnp
mov
pop
add
push
and
sbb
xchg
inc
ret
xor
rorl
call
outsb
mov
add
daa
add
push
xor
push
pushf
mov
sub
xor
das
mov
sub
push
and
sub
fcomps
adc
loopne
sbb
pop
adc
daa
xor
and
mov
dec
aaa
mov
test
xor
mov
dec
scas
or
sbb
sub
inc
cs
or
fidivl
mov
and
adc
push
sbb
adc
sbb
cmp
dec
sbb
stos
das
adc
push
out
and
push
mov
xor
or
movb
add
mov
xor
test
rclb
inc
mov
xchg
subl
adc
pop
std
xor
dec
sub
dec
and
or
pop
leave
or
and
xor
add
lcall
cmp
sbb
pop
xorb
adc
sbb
xchg
dec
or
mov
mov
xor
inc
sbb
inc
push
mov
jecxz
xor
pop
lcall
lds
push
add
xor
dec
inc
clc
ret
and
movsb
adc
cmpsb
adc
and
insl
daa
mov
sub
pop
outsl
add
pusha
xchg
popa
mov
bound
lods
aaa
pop
sub
insb
add
sub
push
or
adc
sub
and
test
andb
dec
enter
sbbb
aad
andl
adc
adc
nop
sbb
and
cwtl
fisubl
nop
pop
mov
sub
pop
xchg
addr16
lock
movsl
push
rol
je
aam
adc
pop
mov
push
nop
push
adc
push
cmpsb
xchg
adc
or
test
mov
inc
mov
insb
sbb
push
sbb
insl
inc
fsubp
inc
testb
and
push
les
fs
add
adc
adc
ljmp
dec
sbb
sbb
xchg
mov
sbb
popa
adc
mov
cli
and
cli
sbb
dec
inc
hlt
adc
cwtl
pushaw
inc
pop
aam
bound
adc
movsb
int3
mov
inc
aam
xchg
pop
ss
or
push
pop
movsb
sbb
lcall
or
push
sub
js
test
insb
sbbl
enter
or
fsubs
rcrb
subl
dec
sbb
cmp
sub
mov
add
or
iret
imul
fwait
add
jp
into
or
cs
adc
int3
adc
sub
lea
loopne
adc
jp
add
adc
add
repnz
roll
fidivrl
adc
or
clc
jno
orl
mov
nop
and
mov
test
sbb
or
mov
and
xchg
adc
rclb
xor
daa
or
imul
or
adc
mov
sbb
dec
lods
fs
orl
sbb
insb
sbb
sub
mov
test
test
clc
js,pt
fmull
test
sbb
jbe
push
adc
push
inc
mov
and
push
sub
insb
add
ja
es
add
sub
sub
mov
pop
enter
jns
jp
push
les
or
psubusb
leave
or
sub
jnp
xchg
pop
lock
jl
inc
test
dec
inc
mov
inc
cwtl
scas
sbb
les
jge
out
ret
or
nop
dec
jp
fisubs
mov
add
adc
sub
and
add
mov
mov
fcoml
dec
mov
sbb
sbb
xorb
xlat
xor
rolb
mov
sahf
les
or
add
test
aam
sbb
js
mov
dec
lea
mov
push
fcoms
and
sbb
int3
xchg
add
js
cwtl
sub
dec
rclb
scas
cwtl
in
jbe
sbb
adc
adc
cmpsb
sbb
add
xchg
sbb
test
jge
pop
add
mov
sbb
xor
adc
jo
rclb
mov
mov
and
and
enter
adc
xchg
insb
adc
push
jle
mov
in
jmp
sahf
bound
bound
inc
inc
test
and
xor
lds
add
js
fs
nop
pop
or
or
mov
mov
in
lods
mov
cmp
lds
xlat
hlt
and
incl
xor
xchg
or
adc
std
xor
ss
lock
adc
mov
and
cmpl
inc
sub
adc
in
or
push
sbb
and
mov
clc
enter
mov
mov
adc
fimull
sbb
bound
dec
mov
xor
pop
lods
push
es
or
dec
sub
fsubl
test
pop
andb
mov
fdivs
clc
ss
or
mov
xchg
pusha
aam
je
and
cs
sub
sbb
dec
ret
movsb
popa
xor
pop
andb
or
sbbl
hlt
dec
xchg
out
xor
push
dec
pop
das
sahf
xchg
push
pop
push
push
fsubl
xchg
mov
mov
or
sbb
aad
pop
adc
push
cmpsb
sub
mov
jo
pop
xor
xchg
xor
aam
aas
adc
or
lret
xchg
mov
sub
mov
sbb
add
and
les
jp
hlt
imul
pushf
pop
pop
pop
sub
shlb
inc
scas
bound
scas
cwtl
adc
cmpsb
test
or
adc
lret
push
in
scas
sub
adc
aad
xchg
push
xor
pop
rcrb
lock
test
push
sbb
movsl
or
lret
or
cli
nop
mov
sahf
sub
rcrb
test
test
les
test
push
test
sahf
aam
adc
push
xchg
push
rorb
sub
fs
sbb
sub
daa
ud2
xchg
or
mov
or
shll
push
xchg
lcall
movsb
or
xchg
pop
pushf
sub
or
add
inc
adcb
push
sub
add
sbb
mov
adc
push
or
daa
pop
pop
mov
lea
xchg
cwtl
add
lock
or
js
or
loop
and
jle
push
and
push
push
mov
lret
pusha
mov
test
push
testb
dec
sbb
pop
push
and
loope
xchg
sub
xor
sub
inc
shlb
mov
xor
in
sbbb
sub
and
mov
test
es
sub
dec
jo
xor
cwtl
sahf
mov
aas
add
dec
loope
xor
cmpsb
nop
push
xor
mov
fsubrs
xor
aam
subb
js
and
nop
mov
cmpb
movsl
push
lock
aam
lods
mov
dec
or
add
sbb
adc
adc
test
ficompl
cld
add
les
mov
dec
adc
lcall
clc
xor
ror
mov
lods
test
mov
mov
test
jb
mov
adc
or
mov
jmp
jecxz
movsb
subl
mov
add
nop
pop
das
and
inc
or
push
mov
mov
lods
xor
xor
aam
push
adc
mov
imull
adc
dec
pop
sub
test
fs
loopne
sbb
lret
popa
mov
sub
mov
add
rclb
stos
pop
pop
mov
insl
clc
mov
sbb
jle
in
mov
mov
adc
dec
scas
and
daa
rolb
mov
xor
push
inc
data16
or
lods
adcl
mov
xor
push
into
pop
xor
daa
mov
push
pop
xchg
mov
xor
ret
ljmp
shlb
sub
fcoml
sbb
and
push
in
lods
or
icebp
xchg
add
fadds
ds
push
shlb
ret
or
push
push
xor
push
xor
push
push
shl
outsb
pushf
add
sbb
jo
loopne
jle
jnp
stos
and
loope
rcl
mov
xor
movsb
mov
shrb
sub
jmp
xor
adc
cmpsl
clc
rcrb
scas
push
addl
push
xor
and
test
mov
mov
aas
pop
ljmp
adcl
mov
mov
adc
sbb
cmp
sbb
or
mov
aam
or
fldcw
cmp
in
xor
push
and
sub
pop
xorb
mov
pusha
mov
sahf
add
or
mov
or
add
mov
or
xor
mov
push
pop
popf
or
adc
sub
rclb
adc
repnz
inc
mov
stos
inc
sahf
es
inc
sub
push
addb
inc
pop
and
jle
lcall
nop
or
jle
jl
mov
es
es
cmpsl
mov
push
dec
popf
mov
inc
xor
push
fiadds
das
les
push
lea
sbb
add
imul
or
stos
sub
movsb
xor
sub
adc
mov
enter
dec
mov
cwtl
or
dec
mov
xchg
adc
hlt
cmp
mov
pusha
sub
es
and
add
dec
sbb
jp
or
xor
or
adc
push
adc
loope
and
jo
inc
loopne
dec
sbb
lock
out
sub
ret
in
gs
mov
mov
mov
push
dec
icebp
xor
test
push
loope
and
mov
or
add
sbb
insb
push
push
sbb
mov
add
mov
mov
cmpsb
xorb
int3
test
jle
shlb
pushf
lret
adc
cli
fisubl
push
adc
mov
adc
in
nop
dec
xchg
xchg
test
push
icebp
xor
or
sub
push
push
lods
movsb
sbb
cs
sbb
test
adc
mov
cmp
jb
xor
and
mov
push
mov
adc
add
or
or
add
adc
hlt
sti
imul
or
mov
sahf
sub
sbb
mov
add
adc
sbb
push
push
dec
adc
pushf
jb
aam
xchg
jmp
xlat
and
lods
incb
sete
es
mov
mov
lds
jnp
mov
xchg
cmp
push
sbb
nop
adc
mov
jmp
or
or
in
pop
or
add
and
sub
pushf
and
adc
push
je
cmpsb
in
and
xor
scas
and
and
mov
dec
adc
and
sub
scas
push
push
loop
inc
xor
push
dec
or
sbb
cmpb
adc
addb
cmp
push
stos
orb
insb
mov
js
fistpl
pop
sahf
data16
mov
lods
xor
cld
adc
sbb
inc
pop
push
dec
mov
push
or
adc
pushf
jmp
mov
adc
nop
jle
adc
or
and
leave
pop
orl
fdivrp
and
pop
add
and
adcb
test
fs
dec
sub
loop
push
cmc
cmpsb
and
pop
outsb
stos
ret
pusha
mov
dec
mov
push
stos
xchg
orb
inc
inc
mov
mov
mov
adc
sbbb
add
mov
cmp
dec
adc
hlt
xchg
inc
push
mov
in
and
mov
sub
scas
es
or
aam
mov
xchg
es
sbb
inc
xor
orb
dec
adc
mulb
add
mov
movsb
xor
or
adc
mov
dec
adc
push
or
xor
mov
inc
dec
addb
aas
ret
test
adc
and
push
in
or
adc
and
sub
lods
xchg
add
roll
mov
adc
adc
adc
jl
test
ljmp
lret
sub
cmp
ss
lcall
push
inc
sub
push
sbb
pop
pop
rcl
lock
movsb
adc
push
cmpsb
divb
or
popa
or
push
aad
call
sbb
and
push
pop
lea
adc
xchg
je
and
sbb
push
adc
ljmp
or
mov
rolb
scas
nop
test
test
fs
and
push
xor
add
cmpsb
insl
sbb
and
sub
shlb
or
nopl
movsl
mov
js
dec
sbb
sbb
shlb
push
push
out
mov
adc
xlat
ret
test
xchg
and
scas
xchg
or
push
sbb
push
mov
in
lret
dec
sbb
dec
and
adc
cmpsb
mov
aam
adc
cwtl
daa
sub
sub
jb
loopne
nop
add
xchg
add
das
adc
sub
sub
pushf
inc
and
cmpsb
ret
fimull
sbb
mov
rcrb
je
jno
sub
insl
mov
mov
aam
push
sbb
sbb
adc
adc
and
and
cli
push
loop
pushf
out
and
mov
sbb
adc
and
and
les
add
add
and
xchg
mulb
sbb
pushf
in
xchg
out
or
mov
je
xchg
cmovo
adc
xor
push
sub
dec
add
push
jbe
inc
cmpl
xor
pop
ss
inc
mov
aam
sbb
pop
push
in
and
xor
orl
and
lcall
or
int3
stos
mov
and
push
sub
mov
imul
lret
sub
or
mov
ficoms
faddl
pop
mov
sub
repnz
call
adc
sub
push
inc
mov
mov
pop
mov
fnsave
clc
pop
pop
or
clc
daa
or
ljmp
sub
lcall
sub
psrad
and
dec
movsb
mov
je
xchg
daa
pmaxsw
cmp
inc
xor
mov
or
js
or
andb
cld
jl
xor
mov
pop
movsb
aas
imul
shrb
mov
inc
sub
movsb
xor
orb
add
pop
mov
loop
imul
push
or
add
pushf
xor
call
jl
lcall
mov
sub
or
and
movsl
ret
out
dec
test
dec
xchg
add
js
js
dec
xor
pop
push
lods
push
mov
es
sbb
ss
sbb
mov
mov
adc
pop
adc
push
mov
sbb
es
push
ss
add
nop
adc
sbb
pushf
mov
out
lods
or
js
push
mov
sbb
repnz
cs
pop
sbb
hlt
test
push
push
mov
or
aam
push
adc
cld
sbb
dec
xchg
and
or
and
call
xor
inc
push
sbb
xchg
pop
shrl
lods
test
push
repz
test
dec
icebp
mov
adc
sbb
adc
push
insl
pop
or
adc
push
rcrb
clc
icebp
or
mov
insl
test
push
mov
adc
test
adc
je
ss
or
or
icebp
mov
or
or
iret
and
movsb
push
or
push
xchg
ret
out
dec
icebp
lret
xor
cmc
sub
mov
aaa
cs
jb
or
sbb
mov
or
adc
xchg
xor
sbb
stos
push
inc
and
clc
daa
mov
add
push
dec
mov
outsb
cs
mov
nop
and
sbb
jecxz
imul
and
push
and
mov
and
inc
or
hlt
xor
cmpsb
adc
sbb
icebp
test
decb
or
or
ret
xor
xchg
xor
popf
test
push
push
mov
xor
or
add
or
aaa
mov
adc
adc
jl
mov
xor
es
and
push
inc
add
aaa
push
dec
inc
adc
test
adc
or
sub
or
loop
clts
enter
inc
or
pop
mov
inc
ds
cmp
sbb
push
sbb
mov
or
scas
adc
push
jl
shll
mov
or
adc
push
insb
cwtl
or
sub
xor
push
xchg
lahf
popa
sbbb
mov
rcll
push
sub
mov
dec
xor
push
pop
nop
or
in
or
push
stc
sbb
sbb
sbb
or
enter
push
push
add
push
push
sub
and
sub
js
je
push
and
pop
or
push
xchg
xor
and
sub
or
mov
xchg
or
mov
sbb
ljmp
sbb
les
jb
push
testb
repnz
add
in
and
pop
sbb
mov
dec
lock
mov
and
dec
aam
mov
mov
xor
and
das
jmp
mov
xchg
push
push
or
and
popf
mov
daa
mov
mov
stos
or
xchg
clc
xchg
xor
lods
inc
push
jmp
mov
add
add
dec
sbb
xchg
mov
mov
mov
mov
daa
js,pt
jo
or
and
inc
or
aaa
enter
sub
push
cmc
add
sub
inc
outsb
je
test
adc
inc
add
xchg
cs
or
out
sbb
or
or
xchg
icebp
ss
dec
cmc
sub
clc
loopne
push
mulb
or
je
bound
push
adc
add
or
dec
aaa
and
sub
push
push
mov
les
mov
in
movsl
xchg
arpl
lds
sub
jb
and
loop
sub
pop
push
sbb
inc
psubsb
push
and
daa
dec
in
or
and
orl
xor
fmul
push
and
repnz
pop
xor
push
add
sub
mov
push
or
daa
xor
sbb
in
insl
or
or
push
mov
icebp
xor
push
imul
in
and
adc
dec
sbb
xor
adc
xchg
xor
int
xchg
or
push
dec
pop
or
imul
es
dec
into
and
icebp
jb
addl
mov
jl
test
push
sbb
in
sub
icebp
adc
push
test
pushf
lods
aam
fcmovu
or
sbb
aam
mov
dec
mov
push
cmp
and
aaa
xchg
push
sub
jbe
lahf
push
imul
mov
push
std
inc
dec
pusha
dec
mov
cs
sub
dec
mov
or
pusha
and
insb
cs
mov
aam
mov
mov
ds
dec
dec
jb
sbb
or
sub
xchg
sub
push
mov
mov
aam
pop
xchg
push
push
fs
sbb
and
xchg
sbb
cmp
pop
or
push
jo
or
or
sbb
and
loope
sub
jbe
loop
adc
mov
js
inc
sbb
dec
das
and
jbe
or
and
fs
jle
lcall
mov
in
or
xchg
adc
lock
sbb
lock
aam
mov
pop
mov
ljmp
fidivrl
lcall
les
sub
and
or
dec
loop
push
sub
sbb
push
adc
sbb
test
adc
push
lock
sub
dec
dec
xor
stos
adc
lret
push
sub
pop
pop
add
popf
and
mov
xchg
add
dec
aaa
mov
sub
sbb
test
dec
daa
and
es
sbb
outsl
xor
adc
adc
lcall
pusha
adc
mov
pop
test
movsl
xor
scas
push
inc
or
or
adc
lret
adc
xor
or
xor
in
push
pop
jbe
aam
lret
and
cmp
add
stc
lret
jle
ss
in
test
jp
push
pop
test
flds
xor
add
sub
mov
sub
xor
jbe
movsl
lock
dec
xor
es
mov
popa
adc
cmp
mov
jne
imul
sbb
outsb
adc
adc
add
dec
enter
aaa
or
lea
mov
in
inc
add
or
and
ja
scas
adc
adc
sub
xor
or
pop
or
ja
jns
or
arpl
jp
jb
mov
push
push
fs
or
je
and
insl
jo
bound
jae
pop
arpl
jp
gs
xchg
repnz
pop
or
adc
inc
and
add
mov
rorb
pushl
and
fs
mov
cld
test
sub
jg
cmpsb
sub
or
xorl
xchg
ficomps
or
adc
push
add
mov
mov
out
push
movsl
xor
aam
jno
movsl
orb
mov
in
mov
cmp
xchg
fmulp
pop
roll
sbb
leave
adc
push
inc
push
cmp
dec
test
pop
sbb
xor
xor
mov
popa
sbb
adc
cmpsl
xchg
sub
dec
aad
add
inc
push
dec
in
xchg
or
and
inc
or
and
inc
add
dec
call
inc
ror
mov
adc
xchg
mov
mov
jo
push
inc
push
push
mov
xchg
inc
jg
cmp
cmp
dec
xor
and
mov
adc
adc
clc
aas
and
inc
call
enter
mov
movsb
and
je
push
xchg
inc
and
inc
sub
mov
cld
ds
and
dec
int3
xchg
mov
mov
push
adc
sbb
or
inc
and
dec
inc
xchg
inc
and
dec
dec
mov
dec
and
dec
dec
xchg
dec
and
push
push
mov
push
and
dec
push
xchg
push
and
pop
pop
mov
outsb
sub
stos
in
pushf
mov
pop
xchg
ja
mov
jnp
jo
inc
jno
mov
je
jne
jbe
ja
js
jns
mov
pusha
add
pop
mov
jl
in
and
pop
enter
mov
mov
jl
in
and
push
add
mov
pop
gs
sbb
push
sub
imul
loope
adc
xchg
xor
cmp
repnz
xor
pop
and
in
push
mov
test
loope
stos
jo
cmpsl
mov
lahf
out
adc
testl
xchg
ret
mov
sti
mov
lds
xor
cmp
aaa
sbb
mov
and
xor
xor
scas
add
adc
inc
fiadds
inc
into
inc
movb
mov
scas
inc
cmpsb
jl
int3
inc
pop
xor
pop
cmp
push
mov
and
push
enter
jb
cmp
dec
mov
and
dec
enter
jb
cmp
inc
mov
and
inc
fbld
inc
enter
test
fisubs
cmpsb
aam
push
adc
imul
inc
dec
sti
or
out
xchg
ljmp
mov
inc
inc
inc
jbe,pn
pop
push
fwait
pop
inc
sub
fildl
push
insl
pop
sub
pop
insb
es
ljmp
lret
es
mov
test
jae
out
in
outsb
outsl
pushf
and
lods
ja
loop
js
adc
xor
pusha
sahf
inc
xchg
jl
testb
or
enter
inc
push
mov
cmp
dec
and
fs
inc
std
jno
mov
rcrb
icebp
les
fmuls
xchg
enter
mov
sti
and
dec
cli
xchg
mov
stc
inc
js
mov
mull
dec
notb
and
mov
repz
dec
add
dec
in
xchg
icebp
and
inc
lock
mov
xchg
in
and
inc
in
sbb
jmp
or
inc
lock
or
xchg
mov
out
hlt
dec
out
xor
in
sbb
mov
adc
and
dec
loop
in
dec
adc
and
inc
loopne
mov
adc
frstor
push
inc
fsubrl
fistl
add
fimull
lock
inc
aam
mov
adc
and
dec
xchg
andb
inc
fs
push
adc
and
dec
rclb
and
mov
iret
and
inc
add
dec
fcoml
int3
mov
lret
adc
xchg
leave
and
enter
adc
and
dec
adc
and
inc
in
mov
adc
and
enter
mov
mov
and
dec
mov
inc
pop
mov
and
dec
mov
and
inc
inc
mov
mov
dec
nop
xchg
mov
pop
inc
mov
mov
pop
and
jmp
push
sahf
fmull
fidivrs
adc
mov
cld
rcr
inc
ss
lock
dec
mov
bound
inc
sub
mov
lret
stos
push
je
cwtl
push
mov
jl
jge
sub
out
cmpxchg
or
sub
daa
int3
shl
je
popf
fdivl
mov
add
cmc
mov
mov
push
in
mov
sarl
xor
shl
jecxz
adc
movsl
in
and
xor
mov
std
inc
dec
mov
cmpsl
xor
loopne
mov
call
mov
shlb
add
sti
mov
aad
or
popa
xor
mov
mov
aas
mov
mov
or
mov
enter
sub
pop
and
and
dec
sbb
and
lods
xor
subb
sub
ret
jb
and
mov
jle
and
add
sub
sub
mov
aam
mov
sub
xchg
cwtl
mov
or
repz
movsl
fbstp
dec
xchg
mov
dec
or
int3
mov
pusha
or
rcrl
add
mov
xchg
inc
xlat
dec
xchg
xor
jb
movl
jo
es
push
inc
jp
push
and
push
pop
frstor
push
ds
rolb
rorb
mov
jmp
adc
mov
nop
adc
cs
adc
push
mov
sbb
rclb
xor
lahf
jp
test
push
mov
sub
dec
jo
inc
hlt
lahf
jb
xchg
and
mov
push
sub
stos
push
mov
sahf
cmp
repnz
test
mov
push
and
stos
mov
inc
mov
mov
and
jns
stos
xor
ss
push
es
lock
sub
fiaddl
adc
in
adc
mov
je
fmul
lods
rolb
jl
xchg
adc
mov
inc
sahf
xchg
adc
outsb
test
xchg
shl
push
push
ds
add
dec
or
xchg
xchg
fs
mov
adc
mov
adc
mov
or
sahf
adc
xchg
xor
lock
adc
mov
xchg
pop
mov
push
ljmp
lea
add
mov
sti
xchg
and
mov
mov
enter
dec
ljmp
mov
adc
std
mov
lcall
xor
pop
add
mov
repz
add
rolb
leave
and
adc
add
adc
in
nop
dec
pushf
test
inc
out
xor
popf
adc
in
push
jae
dec
cld
pop
lods
inc
and
sub
xchg
arpl
repnz
xchg
loop
pop
daa
rol
adc
cld
mov
or
mov
cli
jb
xchg
bound
pushf
sbb
mov
pop
sbb
aad
sbb
adc
push
je
adc
cli
dec
aam
leave
shrb
push
xchg
inc
test
sbb
test
and
mov
pusha
mov
jb
xchg
and
mov
cld
pop
sbb
mov
stos
fisttpll
jne
push
imul
addb
rcl
leave
stos
jbe
movsl
frstor
add
insl
in
xor
lock
mov
inc
test
pushf
cmp
mov
clc
pop
mov
lret
and
or
xlat
xchg
out
adc
or
mov
adc
in
sar
adc
inc
ljmp
enter
cmp
mov
xlat
push
repz
inc
pop
inc
pop
rcl
rsm
ret
testl
pusha
mov
loopne
mov
push
out
sbb
lds
arpl
mov
adc
cmp
or
lock
mov
sbb
and
mov
jno
xchg
pop
mov
jge
call
shlb
add
pop
dec
sbb
or
adc
and
dec
mov
inc
mov
nop
push
adc
or
popa
or
lods
es
sbb
out
test
mov
xchg
xchg
pop
fs
sub
pop
adc
sub
std
call
movsb
das
inc
sub
ror
jae
fs
adc
ret
scas
cmp
mov
sbb
cmp
shll
test
int3
dec
movl
or
adcb
or
testl
lods
or
pusha
rclb
xor
or
mov
adc
add
inc
push
adc
push
cmp
loope
push
or
loopne
stos
or
and
sbb
adc
adc
or
or
adc
push
push
pop
xor
leave
jbe
mov
icebp
adc
pusha
cwtl
push
fcoms
ljmp
jge
and
fwait
in
add
adc
mov
adc
test
or
adc
adc
mov
add
fdivrl
int3
cli
xor
add
loopne
mov
adc
sub
adc
xlat
iret
or
inc
cwtl
cmp
les
xor
push
inc
outsl
sbb
inc
dec
cmp
or
mov
fadds
or
dec
jl
dec
mov
mov
xor
and
rcr
mov
adc
sbb
push
mov
push
and
andb
test
les
mov
outsl
es
adc
loop
js
arpl
or
in
enter
and
stos
cltd
sbbb
xor
jge
insb
mov
push
inc
cmp
repnz
js
loopne
xchg
enter
jg
and
pop
xchg
or
daa
pop
in
ds
xchg
mov
aam
or
adc
add
xor
stc
dec
xor
pop
mov
dec
push
out
mov
pop
sbb
imul
and
out
mov
aas
cmpsl
pop
fs
ljmp
nop
aas
scas
dec
scas
sub
mov
in
das
or
sarl
mov
cmp
inc
in
es
ja
push
int
sbb
dec
ljmp
popa
imul
ret
push
int3
inc
xor
mov
lods
mov
repnz
add
mov
xchg
mov
mov
rolb
aas
adc
mov
addr16
sbb
sti
repnz
push
push
dec
xor
jae
sbb
cmp
das
nop
add
arpl
push
insb
inc
pop
out
je
ret
jp
xor
mov
or
cli
jne
push
leave
adc
int3
test
leave
aad
add
fdivrs
jle
push
in
or
inc
xor
dec
inc
cltd
cmp
out
xchg
sub
jo
push
addr16
dec
mov
dec
cmpb
push
dec
push
jnp
xchg
xor
and
pop
dec
dec
inc
push
and
inc
push
jl
and
js
sub
dec
push
addb
loopne
scas
fwait
and
jo
mov
test
xchg
call
jno
dec
adc
or
dec
ss
inc
call
daa
push
lret
cwtl
daa
push
addr16
sub
jmp
leave
mov
popf
push
cmp
xchg
jo
aas
and
push
inc
and
pop
push
incl
sarl
cmp
inc
dec
xchg
pushl
repnz
sbb
dec
pop
movsl
inc
add
adc
sub
mov
dec
aaa
push
mov
sub
std
xchg
roll
or
inc
dec
dec
dec
push
lahf
cmp
pusha
jns
outsl
icebp
fiaddl
xchg
test
and
add
cwtl
and
jae
push
cmpsb
and
add
add
loopne
jge
mov
cmp
and
xor
add
int3
and
or
sbb
add
sub
adc
repz
add
cmp
je
jns
gs
or
out
addl
movsl
dec
dec
fisttpll
push
add
mov
push
jge
push
inc
ret
add
pop
push
xor
and
mov
and
jo
insb
push
and
dec
push
xchg
dec
and
xor
mov
sbb
dec
adc
add
and
and
dec
hlt
xchg
lock
inc
in
mov
adc
sub
sbb
adc
movsb
inc
pushf
nop
mov
je
pusha
sub
pop
jmp
test
imul
int3
add
sbb
push
dec
or
or
and
xchg
or
or
dec
cmp
and
cltd
adc
adc
lcall
cltd
adc
inc
mov
xor
push
sbb
gs
xor
sbb
and
mov
sbb
scas
enter
pop
mov
cmpsb
or
and
adcl
sub
lret
cmpsl
jb
mov
xlat
mov
pop
or
add
add
loope
movsb
add
pusha
cmpb
fwait
inc
mov
movsl
xor
add
jle
xor
fimull
lahf
orb
jb
xchg
xor
mov
iret
mov
in
call
nop
sub
or
pop
lret
cmp
pop
cmp
and
jo
fcoms
fsubp
stc
adc
jle
cwtl
pop
rorb
sbb
sbb
push
inc
lea
mov
enter
mov
in
cmp
xchg
dec
loopne
je
ss
inc
and
xchg
or
pop
es
mov
sbb
sbb
and
and
icebp
loop
and
xor
adc
mov
and
rcrl
shlb
dec
cwtl
xchg
sbb
pusha
inc
sbb
mov
sub
dec
sbb
cld
cwtl
inc
mov
mov
and
add
jmp
ja
mov
cmpsl
xlat
mov
mov
inc
xchg
fadd
adc
ss
or
add
notb
and
or
adc
mov
pop
xchg
bound
push
mov
xchg
std
mov
aad
inc
lock
rcrl
or
add
add
inc
inc
in
mov
or
arpl
adc
and
daa
sub
hlt
mov
and
in
adc
and
dec
or
inc
aam
mov
adc
xchg
shlb
inc
mov
or
mov
or
mov
sbb
dec
adc
adcb
js
pop
and
dec
and
push
jne
jno
clc
ljmp
cmp
daa
adc
leave
sub
push
dec
leave
sub
fwait
or
push
push
lcall
and
dec
out
jo
inc
cltd
or
sbb
cmp
adc
enter
and
mov
inc
and
dec
arpl
lcall
out
dec
xrelease
xor
mov
xchg
and
dec
mov
mov
inc
ljmp
adc
and
dec
pop
xchg
jp
mov
mov
adc
and
dec
decb
or
pop
inc
jle
mov
dec
xchg
out
adc
or
and
mov
data16
dec
xchg
mov
dec
or
push
nop
and
test
fnstcw
out
cli
inc
add
dec
push
add
rcrb
add
sub
scas
mov
outsl
add
test
and
add
add
inc
lds
cli
xor
insb
jo
mov
pushf
enter
dec
add
mov
cmp
sub
push
push
push
xchg
enter
ret
adc
addl
inc
rclb
and
aaa
or
fs
adc
adc
xchg
pop
cltd
adc
out
adc
pop
mov
pop
mov
roll
adc
or
scas
jno
fimuls
ja
xchg
and
dec
rcll
das
dec
mov
insl
add
and
enter
or
inc
cld
add
test
mov
xchg
es
aam
or
pusha
orl
lcall
add
enter
inc
or
dec
pushf
or
push
ret
inc
cmpps
adc
adcb
and
leave
sbb
in
int3
into
arpl
rorl
and
sahf
add
lds
pop
std
and
sbb
jmp
add
xlat
xchg
inc
push
add
sahf
cmp
mov
adc
sarb
pop
js
shrb
mov
jmp
xchg
test
add
testl
sbb
fdivrp
popf
add
jmp
stos
push
inc
mov
int3
repnz
test
adc
stos
clc
scas
ljmp
jmp
aam
not
loope
add
iret
inc
gs
xchg
add
cmpsb
scas
mov
jge
pop
pop
or
addl
in
xchg
cmp
xor
push
mov
lds
pop
jp
add
push
movsl
mov
aaa
popa
sar
mov
fsubs
xchg
clc
repz
mov
subb
add
push
pusha
les
and
int3
add
add
add
jno
or
mov
loopne
cmp
fisttps
xchg
outsb
adc
shrl
mov
shl
add
mov
inc
sbb
lods
lds
cmpsl
out
add
mov
insb
scas
add
jmp
xor
in
xchg
mov
std
into
popa
add
loopne
dec
pop
add
dec
les
clc
xchg
lock
pop
cmp
int
jecxz
scas
loopne
addr16
lods
push
mov
fnstsw
and
aas
loop
cmpl
popa
mov
inc
push
pop
sarl
push
jl
mov
das
add
adc
xchg
ljmp
lods
mov
inc
add
fstl
arpl
int3
add
push
ja
call
add
sbb
and
lods
cmp
mov
cmp
add
xlat
cmp
mov
add
mov
jecxz
cmpsb
add
movb
jne
fildl
cmp
jno
shlb
loopne
out
add
pop
cmp
push
fisubl
xor
push
push
lahf
inc
pop
mov
adc
xor
dec
push
scas
into
imul
rcr
jge
call
out
pop
push
xchg
cmp
add
and
dec
dec
bound
add
adc
pop
ficomps
frstor
cmpsb
fdivr
jle
sbb
or
inc
sbb
adc
cmp
push
hlt
add
lods
out
add
adc
cmp
adc
add
dec
adc
add
dec
adc
add
jae
lret
add
adc
xchg
add
adc
cmp
adc
add
cld
mov
ret
xor
xor
dec
xor
xor
sub
push
and
dec
pop
in
jge
aaa
mov
mov
or
inc
jg
subb
xorb
jne
subl
sub
lret
xor
or
pavgw
push
bnd
adc
push
lahf
lret
insb
inc
jg
aam
jb
push
jg
int3
adc
aad
cmp
scas
jns
cltd
sbb
adc
and
push
imul
xchg
add
jo
push
jg
outsb
sbb
mov
mov
push
lret
push
popa
roll
and
aaa
adc
insb
sbb
fs
inc
and
imul
and
inc
aas
xchg
imul
inc
std
push
dec
mov
dec
mov
or
mov
cmp
daa
jecxz
and
cmc
pusha
or
or
or
jne
jp
jp
sbb
sub
adc
pop
adc
add
orb
bound
xor
dec
jg
in
xor
dec
adc
sub
cmp
inc
xor
loopne
mov
add
or
outsb
inc
jb
mov
add
add
cmp
cmp
and
inc
jecxz
push
lahf
push
es
and
insb
out
pop
adcl
or
inc
test
outsl
cmpsl
add
adc
dec
or
test
aaa
pop
sbb
lea
dec
cmp
test
xor
jae
mov
dec
or
mov
sub
adc
and
push
xor
inc
xor
push
xor
add
test
xchg
mov
mov
mov
mov
fsubrl
add
fstpl
