adc
and
loop
loope
call
stc
and
cmc
shl
mov
test
and
out
push
lahf
jmp
sbb
jecxz
and
mov
mov
xor
mov
incb
in
dec
jle
pop
dec
push
sub
in
pop
sub
add
mov
outsb
insb
adc
jp
out
addl
out
xchg
outsb
rcrl
dec
and
mov
push
push
mov
or
mov
mov
cmp
mov
jb
cmp
jb
cmp
jb
cmpw
je
cmp
jae
mov
mov
cmp
jne
pop
pop
ret
int3
push
mov
sub
andl
push
push
push
pushl
call
cmp
jb
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
add
cmp
mov
mov
jbe
cmp
movswl
mov
jae
mov
cmp
jae
mov
cmp
jb
mov
add
cmp
jb
mov
mov
add
mov
lea
mov
mov
mov
movzbl
mov
movzbl
sub
jne
mov
mov
mov
sub
mov
cmpb
je
incl
mov
mov
mov
movzbl
mov
movzbl
sub
je
test
jl
jle
xor
inc
test
je
mov
inc
cmp
mov
jb
mov
pop
pop
pop
leave
ret
mov
mov
add
mov
jmp
xor
jmp
push
mov
sub
push
xor
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
mov
push
push
mov
mov
mov
pop
pop
lea
mov
cmp
jb
lea
cmp
jb
lea
cmp
jb
mov
push
pushl
call
mov
lea
push
pushl
call
mov
lea
push
pushl
call
mov
mov
cmp
jbe
mov
lea
push
push
call
push
pushl
lea
push
mov
lea
call
add
xor
lea
mov
add
mov
inc
add
cmp
jl
cmpl
jbe
mov
lea
push
mov
sub
push
push
call
mov
mov
lea
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
mov
push
sub
push
push
call
push
push
pushl
call
push
push
call
push
mov
push
push
call
push
pushl
push
call
mov
movzwl
push
pushl
lea
push
call
add
pushl
mov
push
push
pushl
mov
pushl
pushl
call
pop
pop
mov
pop
leave
ret
add
add
mov
push
enter
mov
mov
js
dec
sbb
jno
mov
jle
out
test
mov
xor
enter
mov
popa
xchg
movsb
je
ljmp
sub
mov
jmp
dec
hlt
sub
lret
cmpsb
shlb
add
js
add
push
cmpsl
pop
ljmp
mull
jb
std
clc
cs
or
jb
adc
in
push
sbb
push
xor
sub
jl
and
xor
cmp
shll
test
mov
xchg
pop
push
xor
sub
outsl
add
bnd
mov
dec
adc
movsl
mov
ja
xchg
jge
add
js
test
add
mov
lods
mov
sbb
addl
and
push
inc
jns
sub
mov
xlat
push
push
add
cld
aad
xor
scas
inc
xor
jb
inc
xchg
sbb
add
sub
inc
icebp
fiadds
hlt
xor
mov
dec
inc
scas
into
cmpsl
dec
xchg
add
add
mov
dec
add
pushf
push
add
ret
add
rol
orl
rcrl
push
push
add
jle
and
mov
or
mov
fstpt
mov
aaa
cmp
pop
pop
xchg
aam
pop
xchg
fimull
aam
loope
pop
lock
pop
repz
loope
js
das
loop
push
stos
daa
fbld
rcrb
cli
scas
aaa
lret
cmp
sbb
loope
add
loope
add
loope
add
cld
int
and
cmp
mov
push
mov
pop
movb
inc
jbe
scas
popa
jb
pushl
jne
add
add
push
xchg
pop
std
mov
xchg
data16
jecxz
cmc
xor
sti
sahf
fsub
std
int3
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
mov
movsb
in
dec
cmp
lret
sahf
leave
or
or
stc
jp
movsl
mov
fdivrs
stc
push
push
aas
loop
scas
sbb
bnd
push
or
jmp
loope
add
loope
add
loope
add
sub
arpl
out
addl
mov
call
lods
loop
push
xlat
lahf
aas
xor
jecxz
cmp
mov
shr
and
cmp
mov
clc
sbb
mov
int3
repnz
and
sahf
sbb
push
repnz
int
shll
mov
push
adc
sbb
add
push
or
mov
inc
into
hlt
into
call
aad
or
imul
cmp
or
loope
add
loope
add
inc
push
pop
push
pusha
sbb
add
loope
add
loope
add
loope
add
loope
add
loope
add
movsb
roll
lds
call
addr16
shl
add
loope
add
movsl
addl
mulb
cli
xchg
cmpsl
popf
fcompp
insb
cmpsb
les
dec
loope
add
mov
push
cmp
out
mov
ss
push
jnp
clc
or
mov
loope
add
je
addr16
aam
mov
aam
test
aas
push
xchg
movsl
cwtl
push
add
jne
cmp
aaa
pop
loope
add
xchg
jne
rcrl
jbe
jno
jl
cmp
test
jecxz
inc
jg
jae
fldenv
adc
loope
add
cmc
or
movsb
jb
fsubrs
mov
sub
arpl
push
sbb
and
dec
dec
xchg
mov
addr16
sarl
into
add
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
sub
cltd
sbb
leave
out
cmpsl
dec
int
movsb
dec
andb
outsl
test
push
dec
sbb
push
and
push
ficoms
pop
dec
mov
shll
lods
cmp
imul
lea
or
mov
in
add
in
add
aaa
fadds
mov
add
dec
into
rcrb
adc
mov
rorl
dec
lret
addl
mov
jne
shll
push
ja
int
icebp
mov
and
jg
ss
mov
push
lods
add
sbb
jmp
arpl
jno
imul
icebp
stos
push
sbb
enter
mov
sub
pop
add
or
jmp
or
jmp
adc
bound
addr16
mov
pusha
push
rol
imul
insb
mull
xchg
loope
cmp
aad
pop
mov
pop
cmp
or
nop
mov
cmp
mov
dec
das
mov
jge
fiadds
daa
push
mov
pop
mov
je
loope
mov
cld
into
sbbl
leave
push
cmp
or
std
dec
push
std
xchg
mov
pop
push
and
and
out
mov
pop
cmpsb
fiadds
dec
sub
push
sub
cmpsb
subl
adc
flds
mov
fs
adc
aam
lret
test
rcll
iretw
lret
pop
jo
enter
ror
pop
imul
sub
sbb
jae
pop
push
and
mov
cmp
cld
outsb
or
add
inc
add
xchg
hlt
repz
and
jo
outsb
aas
add
push
pop
pop
pop
sub
or
inc
mov
jmp
mov
inc
sub
or
nop
sub
and
jmp
mov
fcomip
dec
out
out
or
cmc
cmpsl
dec
mov
xchg
mov
icebp
push
pop
jecxz
loopne
or
outsl
fcomps
sub
insb
dec
cwtl
xor
sbb
adc
ficoml
les
adc
rorl
test
stc
lret
or
push
cltd
xchg
inc
loop
subl
mov
dec
xor
lret
mov
jo
jl
pusha
jle
sub
jns
push
mov
push
and
adc
push
ljmp
test
sarb
loope
jb
cmp
pop
dec
lahf
incl
loope
pop
push
pop
mov
or
into
not
fisttps
push
and
fsubr
scas
roll
sub
mov
cli
dec
or
xor
sbb
push
push
pop
rclb
sub
stc
push
mov
push
adc
ss
inc
stos
inc
mov
push
fdivs
mov
xor
cmpsl
inc
pop
and
add
cmpsl
sub
sub
fwait
call
and
xchg
cmp
sub
shll
ja
dec
pop
dec
lock
std
cmp
sub
add
xchg
dec
lret
mov
or
cli
roll
fcomps
xchg
mov
out
cli
add
push
mov
add
and
xchg
cmp
mov
xchg
insl
je,pt
out
mov
cmp
loop
out
aam
push
mov
lret
arpl
mov
xchg
add
les
lds
sub
dec
inc
jle
push
sbb
and
or
rcrl
mov
push
mov
xchg
repnz
mov
inc
dec
mov
scas
push
dec
xchg
mov
sbb
cld
stos
fldz
lock
lahf
and
fnstcw
add
lea
lret
adc
adc
addr16
rcl
cmc
repz
js
xchg
popa
testl
out
orb
mov
shrl
in
jmp
cmp
push
dec
mov
and
fnsave
xor
push
mov
in
sbb
pop
jno
in
xor
and
adc
mov
dec
lret
es
mov
mov
enter
adc
jae
stos
ds
mov
loopne
ss
add
xlat
repnz
jmp
mov
add
mov
cmp
clc
in
push
hlt
das
lea
mull
cmc
jge
dec
push
lret
push
int
adc
fbstp
mov
xchg
hlt
mov
ss
mov
addb
out
ficoml
ret
ds
movsb
mov
add
xor
mov
adc
inc
mov
pop
lahf
mov
imul
xor
imul
out
pop
ss
scas
cld
fsubp
lods
xor
rolb
call
outsl
push
mov
fildll
inc
push
ficompl
pop
out
inc
mov
and
mov
or
xchg
jno
mov
aam
fldenv
cmp
aam
cmpsl
ror
icebp
mov
mov
daa
cmp
push
mov
repz
pop
xchg
call
ficoml
movsbl
sbb
fstps
cmp
clc
in
pusha
xchg
xor
imul
sub
mov
in
stos
insb
cwtl
cmp
imul
inc
mov
dec
out
and
mov
and
dec
aad
lds
pop
stos
cmpsb
or
inc
pop
icebp
pop
dec
es
inc
mulb
mov
aam
jle
mov
call
outsl
inc
xor
cmp
jg
pop
inc
fbstp
xchg
in
dec
stos
push
xor
mov
cmc
or
call
fistpll
stc
hlt
out
repz
push
jecxz
xor
addps
pop
daa
xorl
imulb
scas
lock
cwtl
in
cmc
mov
dec
pop
outsb
cmp
mov
bound
mov
in
and
pop
xor
mov
adc
data16
call
mulb
adc
cmpsb
sbbb
ss
mov
jle
mov
xchg
aas
lods
jle
mov
bound
int3
ret
xchg
pop
lahf
lock
lods
mov
ds
adc
adc
scas
popf
movsl
push
loopne
jne
into
test
cwtl
sbb
cmp
enter
int3
mov
xlat
mov
push
repnz
dec
adc
into
push
outsl
mov
test
outsb
xchg
and
insl
push
or
out
mul
or
xchg
add
inc
or
in
sub
jge
gs
int3
push
inc
adc
mov
shll
nop
daa
push
xchg
js
xor
aas
sub
pop
out
ljmp
xchg
mov
rcrb
mov
sbb
sub
sub
mov
pusha
mov
iret
icebp
test
dec
dec
enter
or
nop
aad
or
das
pop
fimuls
sbb
sarl
leave
xchg
ret
xlat
sahf
inc
loop
inc
mov
mov
jno
lea
fisubs
and
lds
rorb
inc
add
mov
aad
pusha
mov
pop
cmc
jle
dec
ja
popa
pop
sahf
es
xor
fstps
sbbb
add
icebp
or
repz
cmp
mov
daa
mov
xchg
pushf
xor
cmp
xchg
shlb
pop
pop
push
cmp
xchg
cmp
mov
mov
pop
fbstp
xor
fldt
mov
dec
in
mov
jecxz
or
jb
call
out
sub
xor
fsubs
arpl
mov
xchg
popa
mov
mov
and
jo
mov
popa
mov
mov
pusha
pop
mov
stc
jne
adc
andl
mov
ret
inc
pop
jno
mov
clc
fdivl
scas
push
or
sbb
dec
jmp
inc
inc
dec
jno
jge
mov
sub
mov
arpl
jl
xchg
rcrl
lret
add
xchg
push
xchg
es
and
xchg
or
cltd
negl
nop
inc
jae
dec
mov
dec
insb
inc
test
cs
mov
add
sbb
lock
lods
cmp
pop
in
cmp
or
mov
in
stos
ret
dec
test
adc
ds
add
adcl
cmp
xor
adc
sub
mov
mov
cwtl
or
inc
sub
test
hlt
std
push
inc
lods
xor
incl
and
lea
and
test
ja
xchg
roll
xor
sbb
xor
ds
aad
sub
neg
and
fcoml
in
xchg
push
iret
xchg
dec
fisubrs
dec
mov
push
push
nop
xor
mov
jae
test
fcoms
lds
shlb
mov
mov
cmp
xchg
or
fs
add
pop
outsb
fidivs
jnp
test
dec
in
dec
clc
loopne
jnp
lods
or
mov
jns
jno
push
mov
cmp
jmp
test
and
inc
inc
pop
arpl
inc
jp
mov
push
sbb
mov
scas
adc
call
mov
clc
and
out
aad
int3
push
mov
add
push
loope
cmp
mov
jnp
inc
repnz
test
inc
lcall
out
jmp
add
or
js
sub
jge
push
dec
jg
mov
jecxz
out
push
mov
push
not
shrl
mov
jl
lret
cmc
fisttps
ret
mov
push
pop
pop
push
in
fldcw
mov
lea
inc
pusha
je
jmp
cmp
mov
inc
xor
mov
das
fldenv
sbb
cli
pushf
push
sbb
dec
and
mov
mov
test
inc
fildl
cmp
bound
int
sub
or
mov
insb
mov
push
subb
clc
fisttpl
push
mov
sbb
dec
xchg
inc
fs
mov
sub
sbb
fidivrl
sbb
test
adc
daa
repz
push
mov
aam
or
pop
mov
js
jl
jne
aas
pop
mov
out
add
shrb
dec
mov
cwtl
pop
lds
push
and
fisubrl
fwait
mov
pop
mov
mov
push
imul
cmc
mov
std
push
mov
xchg
mov
mov
aam
loop
imul
mov
jb
pusha
out
movsl
imul
arpl
inc
pop
push
out
inc
push
push
loop
xchg
xchg
sbbl
add
xor
add
jbe
js
push
lock
in
mov
movsb
mov
out
pushf
pop
xor
dec
or
sbb
into
dec
mov
js
inc
adc
pop
sbb
mov
stos
imul
sbb
cmp
repnz
les
push
add
ret
xor
sub
fadds
inc
mov
scas
cmp
push
aaa
push
push
fwait
xor
imul
arpl
dec
push
lock
inc
ljmp
xor
xor
pushl
test
fcom
mov
push
nop
mov
js
out
mov
mov
mov
mov
inc
cmpsb
test
fisubl
lds
or
stos
rorl
aas
dec
fbld
in
adc
sbb
aaa
loop
pop
or
ret
andl
cmc
lds
mov
dec
or
pop
push
cmp
nop
inc
or
dec
xchg
add
dec
loope
testb
popa
push
sbb
add
dec
dec
lods
mov
daa
xor
nop
inc
lahf
dec
out
arpl
mov
or
js
idiv
mov
nop
xor
out
xchg
inc
test
fucomp
sbb
ss
xchg
jecxz
sbb
lea
bound
sbb
iret
fidivrs
popf
cmp
dec
fwait
outsl
jae
iret
cs
inc
loop
test
lcall
ret
adc
push
jae
push
inc
add
fcoms
out
mov
movsb
pushf
cmpsl
std
mov
sti
in
insl
mov
xor
int3
shl
popf
insl
mov
lret
sbbl
je,pt
movsb
lcall
and
cmp
shll
jmp
das
or
enter
aam
adc
mov
mov
mov
imul
dec
in
push
mov
fwait
movsl
out
inc
sahf
mov
push
andb
mov
imul
sbb
idiv
outsb
pop
loop
int
bound
out
dec
sub
push
xchg
mov
cmp
xor
inc
push
pushf
subw
push
jle
jnp
push
push
rep
das
mov
sbb
mov
cs
or
inc
out
and
pop
dec
cltd
ljmp
cmp
add
and
fists
dec
not
popf
arpl
mov
sub
sub
fdivs
rorb
xorl
lahf
sub
ret
push
data16
lret
mov
ret
test
pop
pop
leave
mov
data16
xlat
add
je
shll
jmp
xor
mov
sub
add
and
stos
pushf
in
fistps
mov
arpl
das
push
fcoml
ds
pop
das
sub
pushf
cmp
lahf
dec
popa
pop
int
jle
add
cmc
xor
adc
jg
dec
in
scas
add
bnd
rcrb
addr16
xlat
lds
call
sub
lods
jns
cmp
inc
iret
mov
mov
das
push
push
lods
repz
inc
scas
dec
xor
ret
and
push
xor
lret
aaa
aam
int3
ret
int
mov
push
xchg
pop
pop
stc
pushf
pop
xchg
mov
push
test
cmc
xchg
push
and
push
cmp
rclb
dec
outsb
jg
pop
pop
push
jo
repz
andl
dec
mov
ja
adc
ja
mov
cmp
cmp
mov
adc
rorb
fdivl
mov
call
dec
mov
sub
dec
add
mov
and
xor
cmp
pop
into
imulb
cs
jo
stos
dec
push
lods
rcrb
outsl
sahf
and
test
sahf
outsl
mov
fwait
mov
cmp
idivl
add
lds
xor
in
lahf
jecxz
sbb
pop
adc
push
cltd
or
inc
cmp
cmc
jnp
in
iret
out
mov
insl
cmp
cmp
push
push
mov
inc
pop
and
xchg
test
xchg
aam
in
cmp
shlb
cli
jns
pushf
mov
pop
cmp
mov
sub
in
pop
ficompl
arpl
add
mov
in
and
mov
enter
push
xor
negl
sbb
insl
push
push
mov
test
jns
or
mov
jb
outsb
sub
into
outsl
adc
adc
mov
lret
dec
mov
in
xchg
movsb
std
jg
add
pop
xchg
mov
shlb
xchg
stos
leave
adc
inc
in
test
inc
arpl
shl
mov
ds
adc
out
add
cltd
jl
outsb
stc
sbb
mov
add
repnz
pusha
add
pop
es
cltd
sub
std
mov
pop
pop
sbb
lods
jmp
pop
adc
mov
addl
lods
sar
add
and
sbb
jns
repnz
fimull
xor
aas
mov
add
gs
push
jecxz
mov
xor
push
fcmovu
pushf
xor
jmp
clc
imul
roll
add
test
movsb
jo
lahf
es
xchg
test
fwait
cmpb
sub
jg
jle
push
mov
cld
mov
lret
or
fwait
mov
outsb
xchg
mov
sbb
mov
mov
dec
cltd
stc
popa
dec
push
sub
and
fsubs
mov
outsl
cmpsb
fsubs
cmp
push
test
loope
mov
movsb
insb
mov
mov
mov
xchg
mov
xor
mov
and
int
mov
data16
ljmp
fmuls
sahf
lret
xor
xor
leave
mov
fidivrs
adc
cmpsb
jno
xor
push
scas
lret
mov
ror
mov
insl
xchg
dec
push
insb
cmp
scas
cltd
or
loop
cmp
popa
cltd
inc
lock
hlt
adc
cmpl
push
push
loop
ret
es
jmp
mov
mov
xor
mov
add
dec
mov
cltd
lcall
or
add
inc
xchg
jmp
jnp
popf
into
and
fisubrl
xor
push
add
jns
fdivp
stc
pop
sub
jge
cmc
mov
fidivl
imul
scas
mov
inc
in
jecxz
push
mov
movsb
jg
and
push
lods
add
inc
adc
fistpll
scas
popa
xlat
insb
adc
scas
push
mov
push
ret
inc
mov
xchg
xchg
ret
xor
imulb
jmp
xchg
inc
es
jno
xor
inc
push
popa
adc
addr16
jnp
mov
leave
pop
or
fildll
frstor
scas
fldenv
cmp
cmc
lea
pop
pop
jp
testl
xchg
in
pusha
addr16
lods
xchg
mov
mov
xlat
push
pop
mov
jmp
ljmp
push
and
inc
lret
ret
jp
test
push
dec
call
cmp
cmp
mov
dec
repnz
repz
shll
outsb
iret
mov
sbb
xchg
daa
or
imul
inc
jno
lahf
push
jne
rcrl
mov
mov
xor
mov
sub
data16
ja
push
hlt
mov
pop
popf
lds
inc
mov
insl
js
adc
pop
jo
sbb
testl
rcl
mov
loope
push
sbbb
cwtl
mov
jb
jle
into
xor
cwtl
das
movsb
jl
dec
fwait
push
cwtl
or
out
mov
in
push
rep
fstps
mov
xor
lret
fwait
xchg
dec
xor
dec
ret
fbld
lcall
and
mov
insb
xor
lcall
and
sbb
pusha
cwtl
mov
jb
jle
mov
out
test
dec
lea
cmp
lcall
cmp
adc
push
sbbb
cwtl
mov
jb
or
jnp
fsub
imul
xorb
pop
leave
out
or
sub
add
imul
in
scas
cmpsb
xchg
and
int3
mov
cmpb
mov
subb
fwait
push
aam
int3
lock
int3
adc
mov
jne
int
ja
dec
add
lock
scas
and
hlt
sub
xchg
outsb
mul
loopne
and
cld
mov
mov
xor
sub
test
jno
pusha
jno
pop
pop
call
pop
mov
cmpsb
int
inc
movb
pop
es
push
lods
mov
jne
inc
push
repnz
xor
leave
roll
test
leave
push
dec
sbb
stos
clc
mov
enter
inc
mul
mov
mov
xlat
mov
cltd
push
push
mov
sub
inc
mov
pop
jecxz
jns
daa
adc
sti
movsb
enter
add
lods
sub
imul
fcomip
sbb
fcompp
je
mov
cs
mov
sarl
lea
je
add
sbb
push
pop
xlat
cmp
mov
clc
push
neg
jle
push
dec
adc
mov
lods
jne
jbe
ffree
fcompl
rorb
shlb
xlat
adc
or
sarl
orb
sub
jb
mov
jno
jnp
outsl
xor
orl
mov
arpl
adc
outsb
dec
inc
mull
repnz
jle
fsubl
xor
mov
jno
push
cld
sahf
rolb
inc
arpl
mov
lods
mov
or
push
adc
lods
inc
mov
loope
xor
mov
ss
pslld
sub
cmp
into
pop
rol
sbb
pop
pop
lods
sub
cli
jno
xchg
mov
sbb
jno
lock
in
jb
push
or
lret
aad
or
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
mov
ds
and
adc
pop
jg
fisubrl
rorb
or
dec
jg
loope
lock
dec
daa
cs
mov
fucomip
ja
xor
inc
sbbb
outsb
pop
jg
cmpsl
dec
ficoml
frstor
stc
fwait
int
movsl
jp
shlb
testb
sub
pop
cmpsb
inc
mov
shlb
cltd
mov
test
inc
mov
loope
add
in
mov
xchg
xor
sbb
es
pop
mov
rcrb
ret
ret
jo
aad
or
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
aas
frstor
inc
cwtl
test
mov
roll
inc
add
cmp
adc
cltd
push
fwait
jl
cwtl
js
push
gs
lods
add
mov
bound
mov
mov
and
or
push
imul
lea
test
out
mov
call
mov
or
cli
mov
imul
loope
leave
pop
test
test
daa
rcr
scas
into
mov
pop
mov
add
jno
sbb
inc
add
sbb
sti
xlat
push
add
sbb
jle
sub
test
push
fimuls
shl
cld
xchg
lods
xchg
movsl
imul
cmp
cmpsl
mov
adc
jae
insb
mov
arpl
xchg
ficompl
popf
sub
std
punpckhbw
ss
sbb
or
xor
cmpxchg
xchg
jbe
push
push
and
jp,pn
lds
push
out
jnp
stc
xor
pusha
leave
mov
lods
aad
fcoms
ds
cmpsb
cmp
aam
mov
dec
inc
fidivrs
repz
ficoms
inc
pop
int3
mov
adc
rcrl
sub
fidivrl
push
xor
xor
mov
nop
fwait
xlat
bound
ss
push
xchg
arpl
dec
fnstenv
pop
ljmp
xlat
in
out
xchg
pop
xor
fistl
jle
ds
sbbl
cld
pop
mov
add
sub
push
pop
jge
mul
or
add
or
js
rcll
add
lcall
cmc
or
arpl
pop
movsl
jg
movsl
push
sub
stc
jbe
mov
xor
add
std
xchg
cmc
pop
inc
push
xlat
incl
outsb
stc
data16
scas
sbb
inc
fwait
mov
adc
data16
and
in
ret
adc
das
cmpb
push
push
fisttpll
imul
mov
and
test
cmp
lods
call
xchg
jge
loope
xor
out
incb
js
mov
jmp
rcrl
orb
push
inc
add
adc
jecxz
mov
fwait
int
add
call
clc
jns
jl
add
loop
into
xor
iret
lcall
icebp
jnp
dec
or
push
mov
mov
mov
mov
data16
scas
rolb
mov
and
es
sarl
jnp
cs
outsb
or
or
dec
jns
stos
dec
add
pop
stos
sub
lcall
pop
add
loope
sbb
bswap
or
outsb
stos
out
sbb
or
icebp
in
imul
movsb
mov
xchg
ljmp
dec
xchg
xchg
mov
adc
mov
jmp
aad
pop
dec
mov
daa
lods
out
jl
test
sbb
xchg
inc
pop
xor
push
xchg
out
inc
pop
enter
pop
aad
in
mov
adc
mov
in
xchg
cltd
dec
pushf
pop
dec
pop
std
push
dec
gs
imul
lcall
mov
int3
push
mov
movsb
lahf
fwait
xchg
push
dec
loopne
xor
inc
add
adc
aam
out
cmp
push
cmpsb
mov
push
mov
out
jno
fnstcw
and
imul
je
mov
packsswb
dec
jecxz
dec
pop
push
add
into
sbb
test
or
xchg
or
icebp
pushf
iret
pop
dec
mov
dec
pop
out
adc
and
push
fdivl
lahf
cmovl
test
push
cmp
mov
or
popa
cmpsl
outsl
in
test
inc
in
mov
sub
xor
out
idivl
inc
fsubr
in
or
dec
cmp
popa
sub
les
shll
test
sarb
cwtl
pop
test
adc
xchg
imul
clc
int
rcr
in
test
inc
mov
add
mov
lret
push
adc
jno
insl
cmc
inc
or
or
mov
sbb
int
xchg
fs
shl
out
mov
adc
hlt
cli
pop
or
xchg
mov
pop
cld
out
lods
push
int
sub
and
call
jp
pusha
mov
out
and
push
fsubrs
mov
jo
or
sar
loop
cmpsb
aas
add
mov
test
fcomi
fwait
imul
nop
nop
jnp
pop
mov
push
jl
lds
or
jmp
dec
jns
sarb
pop
insb
cmpsl
pop
add
push
inc
add
jo
push
lret
pop
adc
pop
add
cwtl
sbb
xor
dec
push
jle
add
jp
push
cmp
inc
push
jnp
jmp
cmpsb
mov
dec
repnz
cmp
mov
add
add
out
mov
repnz
cmc
push
and
xlat
fbstp
pop
inc
push
jg
xor
push
fiaddl
xor
xlat
lret
sub
sbb
repz
xchg
stos
jle
jp
mov
jmp
xorb
mov
ret
test
sub
lods
dec
ljmp
ja
test
aad
arpl
mov
gs
fdivs
pop
out
test
out
mov
inc
cmp
stos
push
in
dec
mov
lock
push
or
push
inc
pop
jecxz
mov
lods
cmp
out
mov
loop
mov
xor
stos
les
pop
jg
hlt
push
sar
lcall
fucomp
push
jl
xor
mov
test
push
jle
pop
adc
and
pop
mov
push
push
loop
iret
mov
push
aam
xor
jbe
add
push
in
sub
ss
mov
adc
xchg
mov
pop
jne
add
xchg
xor
aaa
loopne
enter
and
sbbb
hlt
lret
nop
rcrb
insb
sahf
or
xchg
subb
stc
jle
mov
mov
xor
cmp
jle
add
cmp
in
push
fidivrs
lods
mov
cmp
sahf
int
fwait
out
xchg
xorl
cmp
xor
hlt
jbe
mov
ss
jne
adc
shrl
and
xor
or
dec
mov
mov
pushf
je
lock
stos
je
jecxz
js
sub
dec
fidivrl
add
loope
inc
jno
cmp
cld
push
aaa
ror
lods
cwtl
sub
xchg
mov
inc
mov
addr16
cmpsb
adc
out
outsb
aas
repnz
movsl
cwtl
aaa
test
xor
fcmovu
and
sbb
push
push
push
enter
mov
jge
add
cmpsl
jae
or
test
loope
lods
and
jnp
fcmovu
stos
jno
push
lods
data16
mov
jp
test
xchg
stos
mov
mov
subl
stc
imul
lret
js
ss
mov
push
adc
fcoml
cs
push
lea
movsl
mov
and
push
pushfw
and
pshufw
loopne
add
xchg
iret
and
fdivs
xchg
adc
lods
push
repz
inc
js
dec
add
aad
push
inc
jp
mov
loop
mov
loope
mov
rcrb
scas
out
test
dec
cmp
sbb
add
cmp
in
jae
xchg
cmp
and
mul
gs
add
dec
add
jne
addr16
sub
jp
add
lea
ja
clc
dec
mov
insl
dec
dec
jp
add
jbe
jnp
fcmovu
stos
jno
ja
fs
scas
lcall
sti
and
cld
inc
mov
mov
mov
sub
inc
pop
dec
int
mov
idivb
xor
xor
outsl
pop
push
push
mov
jne
cmpsl
fldl
fdivs
dec
add
push
jecxz
jl
in
repz
push
push
jne
mov
test
xorl
jne
add
pop
jb
imul
sub
movsb
xchg
movsb
jmp
loope
icebp
roll
fwait
cmp
dec
add
dec
pop
inc
mov
insb
sbb
lret
mov
shlb
push
stos
shlb
sbb
lods
mov
adc
movsb
out
aam
out
lea
inc
push
shl
test
dec
cmp
movb
xor
idivb
mov
movsb
imul
cmp
push
andl
or
push
cmc
js
add
push
addr16
pop
jecxz
inc
insb
jg
mov
fucomp
adc
xor
stos
sub
shll
icebp
test
sbb
pop
idivb
jo
mov
xchg
add
cmpsb
mov
xchg
jmp
in
jo
out
mov
jle
push
bound
test
xor
push
or
popa
insl
push
lahf
stc
and
shlb
sbb
in
pop
jmp
inc
dec
ja
jns
addr16
outsl
movsb
and
pop
out
xlat
mov
icebp
mov
xchg
xor
lahf
notb
add
xchg
data16
lret
inc
aas
lahf
mov
dec
lret
push
out
push
call
adc
stc
sbb
and
xor
push
sahf
aad
ja
jecxz
mov
push
sbb
sbb
in
rcrb
repnz
in
push
mov
inc
cmpl
ljmp
int
cmp
addr16
add
sub
add
in
adc
aad
xor
cs
test
ss
jge
cmpxchg
ffreep
les
loopne
cmp
aad
sbb
jnp
mov
inc
in
cmpsl
xor
lea
jae
out
xor
cmp
or
or
inc
pushf
cmp
aad
mov
sub
and
decb
push
sbb
ficompl
xchg
test
cmc
mull
inc
mov
fs
pop
push
xor
inc
sbb
rorl
sub
mov
pusha
lods
fnsave
nop
or
divb
in
in
xor
rcrb
loopne
cmp
lea
inc
sbb
jmp
mov
inc
sahf
mov
idivb
or
imul
cmp
repnz
jge
in
jg
push
rcll
imul
popf
add
sub
cld
pop
jbe
xor
xchg
popa
mov
lods
and
stc
mov
stc
hlt
stos
push
jae
mov
push
cmp
movsl
push
xor
cmp
ret
out
sub
dec
inc
dec
in
enter
imul
push
mov
cmp
xchg
jmp
push
ficomps
add
shlb
cmp
xchg
mov
mov
sbb
aas
lahf
int
je
adc
jo
ss
or
lods
dec
mov
in
pop
inc
cmp
push
out
mov
loopne
jmp
clc
xchg
jbe
jnp
fcmovu
stos
jno
jg
or
sbb
cli
dec
pop
xor
mov
dec
xor
adc
std
mov
loop
jae
jae
lock
loopne
cmp
movswl
adc
lds
stos
cwtl
das
cmp
jp
sahf
mov
cmp
repz
idivl
test
xchg
adc
ljmp
aaa
test
pop
lock
xchg
das
out
add
aam
addr16
sbb
std
push
andl
js
mov
lds
mov
pop
das
push
dec
push
bound
std
fdivrl
inc
fisttps
shlb
dec
arpl
mov
loop
fwait
cmp
adc
jg
loop
lcall
pop
mov
call
shlb
lods
aad
push
pop
push
push
mov
or
pop
adc
cmp
leave
popa
dec
cmc
push
divl
daa
add
mov
xchg
xchg
dec
dec
xlat
dec
aad
push
sbb
push
xchg
sub
pushf
lock
cld
leave
or
imul
push
clc
cmp
xchg
add
or
push
jmp
cmpsb
mov
add
out
aam
mov
jo
loop
mov
xor
movsb
fldl
pop
mov
xchg
mov
divl
enter
or
cld
xchg
sbb
mov
mov
movl
jmp
add
pop
inc
negb
inc
test
call
ror
int3
xchg
push
lock
jp
aaa
and
fisubrs
idivl
xchg
mov
lcall
add
sar
int
in
inc
push
daa
roll
mov
gs
gs
cmp
stc
lret
add
out
jp
dec
icebp
jbe
inc
inc
add
sbb
cmp
xchg
mov
mov
dec
cmp
dec
jg,pn
jnp
inc
mov
je
mov
mov
pop
sub
xor
insb
mull
fdivl
clc
add
sub
push
mov
jmp
mov
popf
fisubrl
enter
out
xlat
ss
add
push
mov
adc
jmp
pop
add
add
mov
sub
xchg
fists
shrb
mov
stc
mov
sub
add
enter
cwtl
dec
ljmp
mov
inc
mov
jne
cmp
jb
xor
mov
jmp
clc
or
adcb
xlat
fldl
jecxz
cmpsb
ret
and
fchs
cmp
inc
arpl
rcll
or
aam
sub
jbe
leave
ja
shlb
xchg
pop
and
push
xor
lret
cmpsl
pop
lods
and
pop
adc
fsubrs
in
call
gs
cmc
or
pop
popf
movsl
sub
add
push
punpckhdq
ljmp
sbb
test
testl
mov
into
jp
mov
sub
gs
imul
mov
leave
inc
les
sarl
mov
in
push
ds
adc
in
push
call
pop
pop
scas
xchg
jo
aaa
iret
stc
and
jne
pop
and
push
sahf
arpl
scas
jne
outsl
repz
pop
mov
lcall
lods
test
aas
cmpsb
rcrl
adc
test
xlat
pop
aaa
filds
inc
and
adc
cmp
shl
cmp
scas
arpl
and
clc
insl
subl
das
mov
push
and
mov
and
add
xchg
pop
inc
push
loopne
cld
bound
dec
out
sub
cli
or
cmp
out
add
adc
push
in
pop
stc
mov
xorl
xor
mov
pushl
daa
mov
nop
pushf
sbb
cs
inc
and
pop
push
addr16
aas
dec
mov
daa
scas
push
iret
fwait
imul
lock
fsubl
fmulp
sbb
jp
pushf
lods
add
lret
ljmp
pop
push
je
inc
mov
mov
cmp
cs
or
scas
push
inc
add
and
mov
cmp
mov
xchg
fucomp
mov
pop
shr
mov
adc
fisubs
sub
mov
mov
fldcw
cmp
js
xchg
int
sti
std
repz
push
icebp
sub
push
shlb
repnz
dec
mov
nop
xchg
dec
jne
adc
jl
xchg
mov
or
rcrb
jo
aad
sbb
test
repnz
xchg
in
dec
es
icebp
push
daa
fisubs
test
std
jne
pop
movsb
or
jno
sbb
fisubs
dec
inc
pop
mov
cmp
cmp
popf
adc
xchg
mov
dec
aas
push
add
mov
loopne
inc
movsb
in
cmp
or
psrld
lods
or
fnstcw
pop
mov
shll
push
pop
xchg
cmp
in
lret
sbb
push
inc
bound
int3
dec
push
testl
arpl
and
mov
cs
push
ret
daa
mov
scas
jle
push
lcall
rcr
sbb
popf
in
loopne
test
addr16
addr16
jae
push
addb
fnstcw
mov
mov
in
or
addl
xchg
ficomps
push
xor
movl
sub
enter
cmpsl
test
add
or
cmpsb
mov
jnp
out
sub
jecxz
loop
das
lock
repz
sbb
or
popw
rcll
paddw
ds
subl
int
cmpsb
insb
cmpsl
push
jns
sub
dec
adc
pop
or
pop
scas
sbb
xor
adc
enter
sub
push
pop
pop
mov
mov
adc
shlb
loopne
push
cwtl
fcmovne
hlt
call
ljmp
cwtl
and
in
push
fidivrs
mov
xor
xchg
mov
cmp
loope
jecxz
clc
mov
mov
xchg
mov
sub
jmp
xor
fs
test
mov
and
mov
or
rorb
imul
lcall
sub
cmp
std
add
lods
jg
mov
shl
fsts
xchg
sub
push
xchg
int3
xor
pop
aam
inc
repz
mov
mov
lret
push
out
sbb
les
xor
push
in
add
adc
and
cli
jo
push
add
cmc
dec
or
push
push
cld
pmuludq
gs
dec
insb
xchg
and
add
cmp
aas
ja
mov
addl
je
fistps
or
ret
mov
inc
test
pop
xchg
test
push
jbe
adc
out
pop
jnp
push
inc
and
cli
add
adc
sbb
push
fwait
jae
into
sub
icebp
push
sbb
gs
adc
push
xchg
outsb
cmp
loope
xchg
mov
test
cs
mov
push
lahf
mov
scas
mov
insl
rcrb
inc
push
lods
scas
ljmp
pop
scas
xchg
mov
mov
mov
push
mov
ret
sbb
dec
out
daa
mov
push
loop
fsub
mov
imul
push
mov
in
dec
sbb
ss
xlat
mov
xor
rclb
stc
loopne
roll
int3
jle
add
mov
arpl
xchg
cmpl
push
addr16
fdiv
mov
jp
jne
dec
rclb
sbb
or
sub
cmp
sti
iret
jecxz
pop
js
movsb
es
nop
int3
imul
sbb
pop
daa
outsl
pop
mov
mov
inc
sub
jle
in
pop
aam
aad
and
mov
pop
and
shrl
lods
fsubs
xlat
stos
sbbb
into
and
and
fisubrs
xor
mov
rep
fsubrs
nop
loop
fmuls
sub
jne
mov
adc
fildl
push
xor
sub
push
mov
iret
jge
push
jmp
aam
adcb
lcall
std
push
xchg
les
clc
jno
xor
jno
insl
sub
stos
inc
push
ja
in
xor
in
shlb
push
add
and
adc
push
jle
dec
imul
jg
xor
mov
sti
nop
or
arpl
pop
or
ds
mov
insl
cs
shl
push
cmp
adcl
mov
cli
pop
addr16
ret
push
add
cwtl
mov
test
or
mov
pop
mov
inc
pop
mov
aad
repnz
xor
shll
push
pop
enter
jo
je
push
cmp
int
inc
pop
lcall
adc
mov
pop
jne
adc
mov
test
fcoml
es
lcall
add
andl
cmp
jb
mov
and
jge
jl
jmp
fiadds
test
sbb
and
int3
iret
int
repz
inc
xor
add
xor
popf
lds
icebp
data16
pop
out
adc
mov
push
jne
shlb
arpl
std
mov
hlt
fisubrl
aas
lret
pop
inc
cmp
push
aas
cmpsl
stos
js
fidivl
jae
adc
js
push
push
cmpsb
pop
sbb
xchg
cmpsl
add
add
cltd
mov
inc
or
xchg
int
gs
setg
xchg
jmp
lods
sti
ret
test
stos
xor
mov
call
roll
popf
xchg
cmp
stos
pop
cmp
jae
mov
addl
stos
insl
adc
bound
and
jl
push
adc
fistpl
pop
pop
loop
lcall
jae
mov
scas
inc
hlt
icebp
cmp
mov
or
and
and
insl
or
stos
cmp
popa
cmp
add
adc
cmp
inc
xlat
inc
xchg
inc
adc
adc
push
and
mov
dec
inc
mov
pop
push
mov
push
fmulp
jns
dec
jnp
fcmovu
stos
jno
or
or
mov
ds
adc
jge
leave
mov
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
jmp
jne
scas
mov
xlat
call
mov
aam
xlat
imul
or
shl
add
mov
ds
and
adc
pop
jg
fisubrl
rorb
or
dec
jg
loope
lock
dec
daa
cs
mov
fucomip
ja
xor
inc
sbbb
outsb
pop
jg
cmpsl
dec
ficoml
frstor
stc
fwait
int
movsl
jp
shlb
testb
sub
pop
cmpsb
inc
mov
shlb
cltd
mov
test
inc
mov
jnp
popf
mov
inc
sbb
out
add
pop
cli
cs
adc
pop
sbb
mov
or
inc
pusha
pusha
fstl
add
loopne
repnz
cmpsl
test
mov
cmp
dec
lea
ffreep
cmp
sahf
insb
pop
into
dec
jnp
adcl
cmp
or
pusha
adc
rorb
out
push
loope
fcmove
fidivs
jae
fwait
mov
stc
mov
xor
aad
mov
jge
jno
fwait
add
xor
pavgw
aad
jmp
inc
scas
jae
pushf
cmp
xchg
clc
jle
popa
xor
imul
repnz
jae
hlt
or
frstor
xor
xchg
iret
mov
jg
inc
dec
mov
jne
loopne
push
add
mov
test
and
jo
and
insl
enter
sub
mulb
mov
stos
lret
push
popa
jno
out
imul
dec
pop
cmp
out
sub
xchg
lahf
mov
sub
cmp
and
adc
pop
shll
xchg
enter
mov
ret
roll
mov
ret
mov
adc
mov
out
out
rcl
movsl
jmp
fbld
jl
and
pop
xor
mov
jmp
insl
movsb
incl
dec
pop
adc
mov
pop
and
dec
aad
lods
xchg
cli
push
test
xor
data16
js
jb
popf
adc
pusha
push
add
push
mov
js
imul
out
jo
cmp
mov
shlb
ret
xadd
dec
dec
cli
pusha
stos
jp
jae
dec
jmp
sub
mov
mov
les
sub
mov
gs
xor
std
push
in
and
fxrstor
loopne
in
adc
mov
iret
aaa
sbbb
add
jae
in
mov
les
add
inc
push
dec
adc
int3
xchg
and
iret
ret
sbb
jl
mov
inc
aam
test
jae
adc
inc
adc
cli
inc
repz
jbe
pop
outsb
mov
test
fxam
adc
mov
out
and
jl
fildl
jecxz
fdivs
dec
add
inc
enter
xor
outsb
jo
nop
rclb
mov
push
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
mov
push
mov
mov
roll
arpl
inc
jo
push
jae
into
gs
push
xchg
xchg
inc
or
sbb
inc
mov
mov
dec
cmp
lock
jnp
push
lds
fnsave
add
dec
push
sbb
pop
aaa
xor
xor
add
mov
mov
shlb
addr16
push
mov
or
jae
pop
aam
push
mov
out
jge
out
lods
sub
mov
lods
dec
jge
addr16
cs
xchg
ret
testb
xchg
jmp
jecxz
mov
mov
pusha
dec
add
ret
es
sbb
mov
in
cmp
jge
sub
shrl
mov
pop
scas
add
insb
dec
test
fucomp
cmp
idiv
nop
lods
rsqrtps
push
andb
sbb
dec
iret
inc
fcoml
in
xorl
jmp
mov
inc
pop
call
cmpsl
cmp
add
repnz
es
ljmp
mov
rcrl
mov
mov
leave
pop
fcoml
pop
fidivrl
ljmp
outsl
test
mov
xchg
into
js
jle
mov
pusha
sti
hlt
mov
push
shlb
pop
cmp
clc
std
in
jg
cmc
and
gs
jo
and
mov
repz
xor
lods
cmpsl
sbb
push
fildll
ret
fcomps
jl
mov
ja
jo
mov
adc
xor
movsl
popf
jo
int
adc
mov
xor
and
mov
add
scas
sbb
xchg
adc
mov
test
jmp
addr16
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
popl
xchg
leave
xchg
mov
adc
fsubr
loop
push
mov
inc
jbe
cmp
shll
stc
and
or
popf
pop
pop
pop
dec
pushf
andw
outsl
cmp
mov
inc
sub
xchg
adc
or
in
add
pop
and
lods
mov
cmp
dec
in
sub
lcall
or
aas
inc
insl
add
icebp
and
sbb
xchg
icebp
adc
and
lret
jb
push
daa
push
adc
outsb
test
fdivr
loop
jnp
mov
bound
cmp
lahf
jle
jne
and
adc
fpatan
mov
dec
cmp
bound
loope
dec
icebp
jmp
pop
or
add
aam
aam
rcrl
ljmp
int3
loope
mov
push
pop
daa
neg
mov
and
inc
inc
pop
xchg
jmp
outsl
xor
pop
inc
jb
push
sbb
and
shr
ret
arpl
int3
or
shl
mov
scas
pop
dec
hlt
mov
jg
mov
mov
sbb
in
aad
loope
add
fdivl
addr16
xor
lret
xor
inc
mov
sbb
js
mov
add
mov
sbb
sbb
sahf
push
idivb
mov
ss
inc
test
mov
arpl
js
ret
push
imul
or
sahf
lea
enter
push
xor
add
fidivs
movsl
cmc
sub
sahf
or
xlat
pusha
outsb
push
loopne
imul
mov
jno
mov
push
push
orb
mov
jmp
aam
push
xchg
sub
inc
outsb
aaa
icebp
popa
jmp
stos
nop
push
fnsave
cltd
mov
pop
out
repz
mov
std
and
test
enter
mov
pop
mov
fld
arpl
in
jns
add
and
insb
pop
dec
or
jle
les
mov
out
mov
pop
or
popl
xchg
ret
leave
inc
sbb
adcl
add
pop
loopne
xor
and
xlat
ljmp
out
nop
dec
inc
pop
sahf
into
mov
test
out
jae
imul
jo
test
add
push
leave
add
shr
int3
push
nop
clc
or
daa
push
out
jns
adc
je
scas
pusha
pusha
jo
push
andl
dec
push
test
and
popf
ds
or
shl
mov
ror
mov
lea
outsl
mov
mov
mov
sbb
or
clc
test
add
jp
inc
out
mov
movl
pop
outsl
nop
pop
and
push
inc
push
mov
push
mov
scas
out
imul
or
cmp
test
stos
sbb
dec
xchg
xchg
xor
pop
movsl
out
push
inc
jmp
xlat
hlt
sub
inc
xor
fmull
mov
mov
in
add
dec
unpcklps
push
cli
mov
jmp
mov
xor
dec
scas
jmp
andb
xchg
rcr
leave
lods
add
ret
pop
jg
sti
push
out
out
sbb
inc
stos
mov
icebp
sub
cmp
mov
cmp
leave
xor
or
pop
and
push
in
xlat
bound
pusha
mov
sarl
cmp
stos
add
cmc
in
mov
lret
pusha
orl
out
clc
pop
lret
fcmovnbe
push
addb
jmp
fs
or
or
sub
cld
xlat
inc
push
jp
mov
jns
dec
sbb
add
or
cld
and
xor
aaa
lcall
sbb
ja
xor
into
pop
addl
jne
mov
lods
xchg
mov
hlt
mov
repnz
jbe
inc
repz
xor
incl
mov
ret
inc
out
sbb
jno
fs
les
mov
sahf
cmc
adc
outsl
mov
sbb
xchg
sub
mov
pop
leave
shr
jmp
aas
xchg
in
icebp
and
popf
negb
sub
mov
mov
sub
cli
clc
pop
ss
adc
xchg
adc
jb
push
or
stos
outsb
jecxz
sub
rorb
ficompl
fildll
into
mov
inc
push
pop
inc
pop
push
ror
test
in
loope
adc
or
mov
js
xor
seta
cs
loop
xor
mov
mov
dec
sbb
inc
ds
mov
out
jmp
mov
sub
cmp
jge
out
mov
and
les
jmp
in
outsl
mov
sbb
out
add
out
xchg
or
jnp
pop
in
into
inc
imul
inc
or
cmp
push
fnsave
bound
mov
mov
aas
mov
inc
push
mov
xchg
dec
sub
fldl
nop
les
or
or
jo
push
xor
stos
daa
push
push
add
mov
imul
daa
lods
jne
lret
vphadduwd
pop
sbb
and
xchg
fidivs
aas
mov
push
rorb
aad
mov
sub
ds
push
std
addr16
inc
aad
popa
xor
fstpl
sbb
cmp
and
std
cs
jbe
adc
push
fdivs
rcll
push
cmp
jnp
cmpsb
push
mov
cli
or
xchg
push
sti
sbb
adc
stc
inc
sub
jne
jle
mov
lret
push
mov
pop
xor
cmp
inc
call
rcr
jmp
test
fnsave
add
mov
insb
je,pt
jl
js
push
out
pusha
andb
dec
xchg
stc
cld
push
pop
jg
les
push
pop
mov
fs
fists
pop
jnp
lods
test
mov
and
das
add
jmp
les
cmpsb
fdivrp
arpl
loop
pop
xlat
imulb
pop
cmp
xchg
jne
dec
repnz
sbb
loopne
cmp
jg
xor
add
jmp
mov
test
hlt
lcall
sub
div
es
lret
push
in
cltd
xchg
xor
cmc
imul
cmc
cmp
cwtl
pop
or
popf
pop
cmpsl
sbb
jg
cltd
insb
icebp
push
sbb
cmpsl
testl
outsl
jno
add
fs
cmp
sub
mov
jge
pxor
cmp
adc
mov
call
loop
push
in
fyl2xp1
mov
xorb
push
jo
repz
repz
inc
je
sub
lret
pushf
fisttps
out
mov
lret
xor
add
jmp
roll
lcall
aad
xor
int
cmp
push
sarw
andl
dec
loopne
xchg
mov
inc
icebp
bound
mov
mov
in
iret
int
xchg
in
lret
inc
fsubrs
mov
daa
js
sub
mov
mov
cmp
push
pop
shr
add
loope
into
fcmovu
sub
push
sbb
inc
jnp
cmp
mov
je
loopne
lcall
mov
lahf
loope
dec
mov
test
in
cld
fcoms
adc
notl
loope
mov
push
sar
mov
lahf
inc
mov
add
adc
adc
sbb
xchg
in
fs
cltd
sbb
mov
icebp
movq
and
mov
mov
jno
sti
mov
inc
jmp
insb
jb
cmp
mov
mov
aam
pusha
mov
lods
push
push
or
add
xchg
loop
xchg
dec
lret
cld
and
nop
fsub
inc
test
stc
mov
es
xor
xor
and
inc
xor
dec
jecxz
insb
push
push
jl
inc
in
in
ret
int3
jle
and
jmp
aaa
roll
jecxz
enter
cli
fcomp
sbb
repz
daa
je
sbb
sahf
insb
iret
jp
out
mov
ret
push
jge
jb
cld
jg
test
ss
mov
dec
test
aad
cmp
jno
cmp
push
cli
jno
jns
fbld
ljmp
xchg
dec
pop
mov
jg
mov
push
push
or
loopne
xchg
mov
mov
mov
outsb
shld
cmp
scas
lret
fcmovnb
sub
cmp
std
push
jl
fsts
cmp
pop
addr16
aam
mov
mov
push
aad
inc
fisttpll
cmp
jns
sub
idivl
mov
popf
rcl
and
add
leave
aad
sahf
jb
adc
add
out
test
fldt
stos
lock
adc
cli
dec
mov
add
lret
insb
repz
movsl
daa
jle
dec
xchg
xchg
mov
sbb
push
push
and
mov
push
mov
cmp
mov
jl
mov
push
shr
push
mov
push
mov
mov
mov
movl
movl
mov
mov
mov
shr
add
shl
add
xor
mov
add
xor
sub
mov
shr
add
mov
shl
add
xor
mov
addl
add
xor
sub
decl
jne
mov
mov
mov
add
decl
jne
pop
pop
pop
leave
ret
int3
or
xchg
cmp
repnz
test
inc
dec
and
out
sub
jae
imul
cli
sbb
and
aas
into
ret
pop
out
sbb
lds
push
pop
mov
mov
cmpb
movq
xchg
push
adc
mov
je
test
ret
dec
or
sbb
sbb
fwait
jmp
scas
add
add
aaa
pop
add
bts
aad
mov
inc
lcall
mov
repz
push
jns
mov
pushf
push
imul
push
pop
mov
sahf
repz
mov
add
ja
hlt
in
test
xchg
movsl
cli
cltd
dec
repz
repnz
stos
dec
pop
out
push
les
sti
add
push
add
hlt
jg
aas
push
jbe
out
dec
aaa
jmp
pop
and
fs
aaa
inc
imul
lahf
jno
jnp
ja
cmp
test
add
dec
rcrb
jge
popf
cmp
cli
sarb
stos
cmp
mov
push
cmp
shrb
jg
add
ret
jg
jmp
stos
ret
xor
addb
.byte
