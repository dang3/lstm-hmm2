cmp
repz
sbb
xchg
pop
rolb
imul
test
jle
outsb
test
xchg
mov
and
notb
push
mov
movsl
push
sbb
dec
aad
push
sti
push
or
out
int
dec
mov
cmc
test
sbb
test
push
clc
mov
scas
orl
cs
out
lret
cmc
or
cmc
imul
loop
inc
out
jg
push
mov
mov
leave
push
mov
test
and
incl
lock
pop
fistl
push
push
popf
mov
clc
ljmp
or
or
push
hlt
xchg
cmp
fdiv
add
call
cs
outsl
mov
sub
gs
mov
sub
rcrl
jno
loop
and
push
out
fidivrl
pop
mov
insl
push
push
cs
out
jbe
jg
test
xchg
pop
mov
js
shl
sub
cmp
or
ja
add
push
sub
inc
mov
scas
pop
dec
xchg
xor
mov
out
add
xor
pop
fimuls
dec
push
stc
addr16
push
test
xlat
lods
add
add
lea
cmpsb
mov
lcall
jae
mov
add
clc
adc
popa
mov
jmp
mov
add
shl
cmc
inc
mov
push
mov
push
jmp
cmpsl
lods
sub
push
mov
or
push
fistpl
gs
jl
jg
mov
lret
test
lahf
loop
or
imul
dec
ret
outsb
and
adc
vrcpss
mov
jle
negb
je
test
ljmp
jle
shrb
jmp
jmp
inc
es
aaa
fisttps
das
sub
jecxz
testb
hlt
adc
fsub
cmpsl
mov
mov
sti
gs
add
notb
xchg
ljmp
inc
sti
icebp
stos
add
and
mov
repz
mov
sti
popf
ds
xchg
cmp
adc
arpl
cmc
mov
push
fistpl
es
int
idivl
push
lea
xchg
pop
cltd
and
and
jbe
fdivrl
imul
sub
enter
cmp
fiadds
cmp
pextrw
sub
jo
ret
jle
ss
fs
or
jns
pop
das
hlt
mov
pop
xchg
xchg
hlt
mov
or
les
push
push
lods
dec
sub
xor
or
int3
jecxz
in
das
sarl
fstpl
jge
xchg
ss
addl
test
repz
pushf
test
and
sbb
push
mov
pop
scas
pop
cli
cltd
inc
in
xchg
jecxz,pt
adc
arpl
jb
sbbb
add
xchg
add
shll
movsb
jecxz
mov
call
mov
movsb
ss
movsb
xchg
xor
cmp
pop
in
negl
mov
aaa
mov
cmp
xor
push
push
dec
repnz
in
call
subl
inc
sti
adc
or
mov
fiaddl
inc
mov
sub
xor
rclb
cwtl
rclb
push
test
insl
jno
mov
sbb
xchg
std
adc
push
testl
cmpsb
sub
jmp
fldl
mov
in
lcall
xor
adc
and
push
push
inc
stc
cmp
inc
iret
pop
ljmp
mov
fistps
mov
cmpsl
sub
mov
xchg
cmp
cld
out
jae
sub
ljmp
xlat
outsl
aaa
popa
jl
sbb
xchg
repz
jl
mov
scas
ret
ss
lcall
jg
dec
pop
cld
jne
leave
test
pop
sbb
rolb
mov
roll
adc
iret
or
das
jb
sahf
stos
push
fwait
inc
push
out
jno
ss
xchg
cmp
pop
add
in
mov
flds
pushf
adc
movb
pushf
pusha
push
lea
jmp
fsub
fs
xchg
call
imul
icebp
jg
mov
popf
pop
stos
xor
pop
sti
sbb
fcompl
stos
dec
aad
dec
jle
movsl
dec
imul
push
mov
enter
xchg
jo
xchg
je
xlat
cmp
pop
cmpb
sub
pop
add
pop
bound
sbb
xor
fdivrl
jle
or
dec
insl
dec
lds
xchg
inc
out
icebp
das
sub
jne
arpl
daa
mov
inc
repnz
out
hlt
xchg
sbb
jae
shrb
cmpsl
dec
out
lea
jmp
mov
pushf
mov
call
pushf
pusha
mov
lea
jmp
pusha
lea
jb
stc
cmc
call
push
xchg
add
dec
flds
mov
dec
aad
in
jns
test
js
sub
xchg
add
inc
in
or
push
js
xor
xchg
push
imul
mov
sbb
push
lret
cmp
and
cmp
and
xchg
cmp
ret
dec
lea
test
mov
mov
xchg
inc
dec
std
cltd
push
cli
test
push
mov
add
out
sub
pushf
xchg
movl
cmp
jb
mov
xchg
pop
cmpsb
sub
loop
sarl
es
add
mov
jns
fnstcw
and
add
adc
xorb
sbbb
inc
lds
pop
pop
stos
push
add
push
cmc
xchg
inc
adc
data16
push
cltd
push
push
inc
push
dec
cs
dec
dec
add
jmp
popa
mov
mov
dec
rcrl
jne
ja
test
mov
lea
add
mov
outsb
mov
mov
pop
pop
pop
fwait
xchg
fs
push
dec
call
inc
dec
subb
push
pop
test
add
xchg
ss
jbe
hlt
jle
add
out
xchg
fisttpll
int
sbb
jne
jmp
cmpb
call
mov
rcr
daa
divb
bnd
jge
xchg
sbb
cmp
insb
push
and
mov
mov
xlat
cmp
out
jb
mov
fsubs
shrl
mov
mov
pop
idivb
int
jg
or
sub
cltd
inc
mov
xchg
pushl
xchg
ror
mov
lds
arpl
lods
inc
mov
xchg
xchg
mov
xlat
jnp
iret
je
les
lods
dec
out
popf
inc
adc
push
inc
enter
push
dec
sub
gs
jge
test
or
aam
cmpsb
mov
dec
in
mov
lds
jb
xor
dec
dec
loop
lods
add
or
add
lret
test
enter
lea
loopne,pt
sub
jp
shrl
imul
mov
sar
sbb
inc
mov
jmp
pushf
jmp
mov
imul
clc
bt
mov
add
pushf
lea
jmp
and
data16
and
push
fistpl
arpl
sarb
std
stos
adc
out
stos
push
fcompl
push
xor
jne
std
jnp
cmp
aaa
add
or
xchg
sub
imul
cmpsb
xor
inc
imul
dec
or
cltd
popf
inc
lcall
push
mov
adc
add
outsb
xchg
inc
jmp
or
xchg
mov
mov
int
adc
adc
push
inc
leave
dec
jmp
xor
xor
adcl
and
bound
inc
jmp
cmpsl
rcrb
test
in
mov
fadds
sub
lret
dec
loop
leave
cmp
popa
movsb
mov
mov
mov
cs
or
xchg
cmp
jmp
lea
ja
call
shr
jmp
bswap
pop
mov
ja
push
call
push
jne
xchg
stos
pop
aam
add
loope
pop
es
jo
arpl
dec
test
call
call
mov
loop
pop
push
out
orb
in
loop
xor
sti
and
sbb
jmp
xor
mov
sarb
cmp
add
cmc
jecxz
repnz
shll
xor
and
pop
mov
push
arpl
call
lahf
mul
mov
push
jp
xchg
divl
clc
pusha
and
inc
inc
xor
test
xor
sbb
jo
inc
sub
jo
cltd
sub
pusha
pusha
call
cmpsl
pusha
xor
mov
and
jge
inc
jbe
fwait
inc
loope
js
inc
push
fwait
loopne
out
ljmp
lea
js
es
ss
test
dec
loope
sbb
mov
sub
insb
sub
adc
jp
pop
mov
mov
ret
inc
lods
enter
push
jo
xor
xor
xor
hlt
pusha
push
arpl
jo
nop
out
leave
push
adc
pop
mov
pusha
mov
sti
es
mov
and
inc
repnz
add
clc
pop
stc
lret
loope
fs
sbb
ret
and
mov
aaa
xor
pop
push
stc
mov
adc
notl
sar
rol
inc
push
ret
jbe
xchg
insl
movsl
mov
aaa
and
es
sbb
int
addl
jge
ret
addl
xor
imulb
ret
xchg
sahf
lahf
test
aaa
scas
and
aas
cld
stos
lahf
jo
xchg
arpl
test
mov
mov
xchg
cltd
je
adc
movsl
repnz
faddl
sub
fldcw
dec
inc
loope
outsl
push
data16
push
ljmp
mov
pop
lcall
jb
sub
mov
push
je
adc
or
mov
cmp
lcall
or
cmpsl
jns
cmpl
lcall
out
shll
cld
xchg
push
add
mov
dec
inc
test
xchg
imulb
xor
movb
xor
dec
repnz
push
mov
rorl
lods
je
xchg
movsb
mov
push
pop
cmpsl
push
repz
push
int3
xchg
iret
or
push
inc
cmpsl
jae
xchg
jo
dec
and
sub
add
in
scas
rcrl
jl
push
xchg
ret
andl
cltd
and
repz
push
push
repz
add
ljmp
movntps
inc
cli
sbb
pop
push
lret
repnz
repz
add
sub
mov
or
mov
test
in
imul
adc
shrb
arpl
and
cs
jmp
jo
inc
testb
pop
and
lcall
leave
inc
les
addl
lock
mov
je
mov
loopne
push
dec
adc
and
mov
out
rol
arpl
xor
add
bound
rclb
test
mov
das
mulb
xchg
xor
pusha
roll
orb
jno
sarl
pushl
xchg
xor
test
push
arpl
mov
push
or
mulb
or
inc
cld
jl
out
test
or
out
es
push
call
cwtl
pop
push
shll
rcrl
ret
enter
dec
inc
leave
sbb
and
lret
mov
shlb
lcall
mov
mov
adc
xchg
push
sub
dec
dec
xor
push
rol
ret
stc
mov
xchg
xchg
and
xchg
mov
cmp
and
pop
stos
mov
mov
imul
pop
loope
repnz
cltd
aam
loope
xor
jg
mov
push
hlt
in
mov
sub
push
jno
add
add
jbe
into
push
out
std
sub
loop
inc
les
movsl
dec
xchg
mov
mov
and
arpl
inc
or
sbb
pop
ret
enter
or
push
jp
mov
rol
mov
push
dec
dec
dec
nop
and
xor
adc
mov
shlb
loop
mov
and
rolb
and
loop
inc
jle
sti
insb
mov
gs
mov
fwait
ljmp
xor
jo
push
or
loop
scas
mov
fst
pop
xchg
loope
in
lock
lods
jp
and
ja
xchg
rorl
and
or
ds
push
shll
loopne
lea
loop
insb
mov
adc
ret
fcmovb
add
xchg
daa
std
pop
sub
hlt
adc
xchg
mov
mov
rol
add
repz
jecxz
mov
fidivs
xchg
pusha
stos
inc
loop
sbb
jb
sbb
loop
lea
inc
push
jmp
ret
sahf
jne
addb
les
inc
mov
addr16
popa
push
arpl
daa
rol
shlb
mov
js
xchg
std
pop
sub
hlt
mov
xchg
mov
cmpsl
add
push
pusha
sub
mov
ret
and
subb
and
push
inc
mov
sub
inc
add
add
sub
pusha
aaa
pusha
mov
lret
inc
adc
push
push
mov
in
std
test
test
sti
push
into
mov
inc
mov
leave
ljmp
jne
dec
lret
sub
mov
mov
and
adc
loop
xchg
ss
ret
sub
mov
je
inc
sub
ret
loop
mov
and
push
and
push
push
sub
jbe
push
inc
imul
jge
enter
push
and
pcmpgtd
loope
sbb
sysenter
sbb
pop
lahf
aad
push
std
fs
add
aaa
enter
inc
mov
pusha
mov
shlb
cmp
and
pop
bound
dec
push
push
inc
pop
push
add
movsl
inc
adc
fs
bswap
test
or
loop
inc
mov
sub
adcl
dec
loop
xchg
push
xchg
xchg
mov
xchg
fwait
int3
ret
mov
mov
loope
pop
or
out
enter
and
mov
xor
ret
inc
and
loop
inc
pop
test
or
and
dec
movsb
loop
sbb
fstl
loope
mov
lea
push
cmpl
xor
sarb
sub
pusha
push
xchg
test
lea
dec
push
fbld
xor
mov
mov
dec
dec
loope
and
shll
ljmp
jecxz
mov
stos
mov
fisubl
cmc
int
loop
push
sub
fists
jg
xchg
xchg
push
push
or
outsb
popf
iret
icebp
aam
rcr
and
hlt
pusha
mov
sbb
ret
subl
pop
shlb
inc
mov
into
inc
sub
push
shll
mov
mov
sbb
pop
call
aam
loope
ret
jecxz
aam
loope
sbb
rolb
ret
stos
mov
dec
fld
ret
pop
leave
fsubrs
sub
sub
das
popf
push
mov
and
and
dec
shlb
hlt
add
add
xchg
cltd
ja
mov
cmpb
imul
sub
and
lret
sub
mov
xor
ljmp
ret
add
mov
push
xchg
add
sbb
jbe
pop
pop
sub
sub
adc
or
cld
pusha
cmp
divl
push
aaa
cs
popf
arpl
cmpl
mov
arpl
dec
test
xor
jecxz
loope
stc
leave
and
fistl
fld
xchg
inc
cmp
out
adc
imul
jecxz
and
mov
ret
xchg
jbe
jne
xlat
push
out
stos
mov
push
in
mov
sbb
ja
mov
or
lea
add
add
cld
mov
sahf
mov
xchg
sub
scas
and
xchg
lock
out
test
pusha
loope
dec
sub
clc
shll
mov
vandps
imul
mov
fbld
out
inc
or
xchg
mov
subl
mov
call
test
out
jne
dec
push
add
push
push
cmp
xor
call
daa
mov
fisubs
lods
xchg
adc
mov
dec
mov
add
test
insl
add
daa
insb
mov
les
test
addr16
push
lea
ret
xchg
xlat
lods
es
popf
xchg
insl
pop
push
push
lods
addb
lods
sub
xor
test
or
sub
and
inc
insb
fistpll
jl
mov
xchg
mov
das
repnz
add
sub
jb
sub
inc
and
insb
xchg
lahf
popl
jp
pop
xchg
xchg
xchg
jecxz
pusha
cmp
test
push
scas
insb
push
push
or
push
mov
aad
sahf
loop
xchg
cmp
xor
ds
mov
push
xchg
push
add
inc
dec
adc
ret
les
mov
mov
stos
inc
push
xchg
in
or
sbb
xlat
sub
mov
les
fwait
add
ret
dec
jo
mov
mov
cs
mov
fnsave
das
sbb
stos
ret
fnsave
ret
pop
mov
sub
fldl
mov
outsl
pop
shlb
jne
rclb
pop
mov
xchg
loope
je
addb
pusha
jp
and
pop
inc
mov
imul
sbb
xorl
fwait
int
xchg
cmp
sbb
and
push
leave
scas
pusha
mulb
es
stos
push
pusha
popf
xchg
or
add
lret
in
push
lds
cmp
mov
loop
andb
ljmp
loop
jle
fildl
mov
mov
rcl
ja
or
lds
dec
sub
js
and
sub
push
loope
sar
push
dec
shrb
je
data16
insb
jne
sbbl
cltd
les
stos
data16
jecxz
adc
or
mov
pusha
xor
adcb
xor
sub
cmp
and
inc
and
sub
cmp
sbb
cmc
sti
faddp
lret
stc
pusha
add
aad
mov
andb
xchg
inc
mov
ret
dec
push
mov
test
ret
insb
imul
inc
leave
and
addr16
push
not
out
loop
dec
lret
mov
fimull
repnz
pusha
loop
push
dec
int
dec
xor
loop
jecxz
pusha
js
xchg
mov
adc
add
je
call
repnz
adcl
loop
das
adc
push
xor
sub
fcompl
adc
pop
ljmp
xchg
push
loop
xchg
jae
sub
arpl
repnz
roll
sub
jecxz
ret
loopne
in
loopne
add
shr
push
and
call
js
cmc
loope
pop
enter
sub
pop
test
or
es
hlt
mov
add
clc
popa
lds
mov
or
xchg
sub
or
or
dec
pop
out
shlb
out
mov
mov
dec
out
mov
js
cmc
out
out
sbb
aaa
push
pop
sahf
out
lret
idiv
dec
andb
roll
push
jmp
adc
cmp
outsb
out
add
push
and
sbb
sub
inc
mov
das
mov
shlb
notl
inc
xlat
lods
xor
ficoml
out
stos
dec
ret
rolb
jecxz
rolb
out
mov
pop
inc
cmp
push
jo
mov
or
movsb
cmp
clc
orb
nop
pop
or
int3
outsl
cmc
lods
inc
push
push
pop
mov
sub
sbb
mov
lahf
xchg
mov
or
lds
cmp
jae
adc
mov
dec
pusha
iret
add
pop
lock
adc
cmp
out
jecxz
daa
push
push
dec
arpl
mov
mov
sub
add
adc
sti
movsb
std
ret
sbb
test
inc
in
cs
fwait
mov
in
cmp
cltd
out
mov
push
mov
icebp
cmpsb
mov
push
add
sub
lahf
mov
cld
out
popa
test
and
cli
out
inc
shrb
jl
sub
or
push
dec
popf
outsl
addr16
dec
xchg
out
fucomip
add
lock
mov
jne
cmpsl
out
sbb
pop
in
fisubrl
mov
mov
pop
cmp
lds
js
pop
jmp
mull
sub
dec
cmp
fcomp
add
hlt
je
sbb
ja
sub
jle
jno
in
pop
enter
xchg
add
cmp
not
std
cmp
sbb
inc
lock
xor
jecxz
xchg
shr
push
loop
in
pop
mov
out
pop
pop
cmp
adc
sbb
sbb
add
lret
push
or
jmp
popl
out
addl
mov
xor
pop
xchg
xor
or
mov
cmp
pushf
mov
out
incl
push
rcl
mov
push
add
fstpt
jmp
mov
jo
rcr
inc
divl
adc
cmp
pop
ljmp
jmp
push
icebp
out
jg
sti
mov
out
loope
pop
sbb
movsl
jbe
or
xor
xchg
jmp
or
out
push
or
mov
movlps
in
and
xchg
test
pop
pushf
and
mov
ja
adc
pop
ds
jnp
dec
xor
jae
pop
das
popa
out
mov
ljmp
cmp
test
mov
jae
dec
loopne
xchg
imul
push
dec
sub
rdtsc
inc
jnp
or
movb
aas
mov
xor
out
inc
fldenv
out
mov
jne
xchg
out
scas
cwtl
pop
sub
jns
gs
cmp
mov
into
xor
out
rorb
xchg
repnz
scas
xchg
out
fmuls
add
daa
xchg
mov
je
xor
ss
mov
and
xchg
out
xor
inc
pop
out
add
sub
jge
dec
loop
shrb
lret
inc
lds
add
mov
or
cmp
mov
jne
jecxz
pop
cmp
je
pop
mov
rcrl
mov
enter
sbb
mov
fsts
cwtl
dec
out
fcompl
cmp
adc
es
lahf
push
inc
out
sbb
arpl
shlb
cwtl
shll
inc
xchg
xor
mov
std
not
ret
out
test
sub
and
mov
or
mov
mov
js
out
sbb
hlt
je
and
push
out
mov
aad
jle
and
aas
mov
lods
str
out
loope
std
jge
mov
dec
lret
fidivs
mov
mov
fdivrs
inc
fld1
loopne
jo
sbbl
imul
cs
jecxz
test
in
cwtl
out
out
das
pusha
jb
jae
mov
insb
jecxz
mov
out
popa
ret
fdivrs
jo
mov
in
xchg
aam
cltd
out
pop
fsubl
mov
mov
into
mov
push
push
xor
jne
leave
and
xor
movsb
inc
aaa
mov
nop
xchg
movsl
xor
push
out
les
push
pop
out
and
popa
mov
out
xor
mov
jl
cwtl
push
sbb
push
xchg
out
push
fdivl
out
mov
das
nop
int3
mov
or
add
sbb
fnstcw
mov
out
push
les
mov
mov
out
inc
mov
aad
ret
cmc
inc
pop
lods
mov
xor
hlt
mov
mov
pop
cmp
jp
or
dec
pop
int3
lcall
outsl
jbe
pop
jmp
xchg
stc
sub
fucom
adc
std
jo
mov
imulb
fcmovnb
mov
jle
out
ror
pop
pop
mov
scas
into
mov
mov
or
adc
pop
jecxz
loopne
mov
xchg
imul
sti
out
outsl
inc
sbb
mov
out
aaa
and
pop
dec
out
cmp
jbe
xor
gs
repnz
jmp
push
cmp
jg
lret
fistps
out
addr16
pop
adc
mov
scas
fbld
fwait
stc
inc
dec
and
shrb
bound
jmp
loop
rorb
out
call
fs
jl
inc
xchg
movsb
cmp
fsubrs
xor
sti
out
dec
and
sub
inc
push
out
sahf
mov
mov
adc
iret
mov
leave
out
into
dec
aad
in
xor
xor
pop
cmpsl
xor
jl
out
push
ror
rcpps
rorb
sbb
jno
test
out
lods
mov
repz
xor
jmp
in
inc
je
jo
xchg
mov
jmp
out
xchg
lret
cmc
ficomps
jo
testl
rcrb
stos
lock
and
pop
in
inc
and
cwtl
outsb
xor
mov
ljmp
in
mov
adc
ret
outsb
adc
xchg
jo
sahf
mov
xor
push
cmc
js
scas
mov
xor
icebp
cmp
popa
sti
aad
loop
aaa
jle
and
mov
out
mov
lahf
das
push
mov
adc
imull
add
mov
mov
xor
repnz
pop
shl
cmpsb
sbb
mov
gs
jnp
les
xchg
ror
out
push
mov
mov
out
enter
jns
out
xchg
xor
xchg
out
mov
fmuls
insb
fmulp
out
test
out
cwtl
mov
loopne
push
xor
rcll
dec
out
out
loope
push
xor
out
pop
inc
xchg
inc
jne
jp
jbe
mov
mov
xchg
jge
jno
sbb
out
xchg
jmp
stc
out
test
cmpsl
repz
mov
add
mov
jmp
enter
testl
mov
pop
push
xor
in
ss
fistl
push
dec
testl
pop
ret
push
shr
dec
sbb
push
add
xor
ss
out
jecxz
xlat
or
pop
cwtl
loopne
div
adc
sub
jbe
fs
roll
mov
add
out
mov
mov
inc
cld
rcr
popa
out
pop
sub
jne
imul
shlb
push
cmp
sbb
test
cmp
out
imul
adc
aad
pop
frstpm(287
out
add
lods
mov
adc
sub
dec
sbbb
jle
push
lret
push
testl
leave
out
pop
in
imul
data16
cmp
jecxz
mov
loope
mov
inc
mov
hlt
sbb
mov
mov
sti
iret
xor
cli
sub
lcall
push
into
outsb
sub
std
add
and
in
add
pop
pop
inc
lret
insb
inc
lock
ljmp
ja
push
cs
bound
fistpll
out
mov
in
cmp
sarb
lret
movsl
out
inc
mov
shr
rorl
stc
adc
jae
fnstcw
out
xchg
das
lods
ss
push
repz
or
out
fistl
inc
mov
add
sahf
shlb
lea
jne
pxor
mov
push
je
loop
add
dec
jmp
xor
sub
dec
xor
out
mov
xchg
rcrl
cli
jp
xor
adcl
jg
ret
iret
jmp
push
shrl
aaa
call
rclb
loop
out
das
mov
add
adc
call
scas
es
iret
push
xor
sub
mov
addr16
mov
shll
xor
cmp
je
popf
push
data16
pop
sbb
pusha
out
sbb
aaa
cwtl
add
inc
int3
adc
je
andl
jmp
xchg
inc
jae
pop
push
push
pop
sub
xor
jo
xor
call
out
cmp
mov
out
pop
pop
insb
rolb
sub
cmpsb
cmc
add
xchg
popa
pop
pushf
out
sbb
jns
lods
out
xlat
dec
mov
in
jge
mov
mov
dec
out
push
jns
adc
sub
mov
out
or
push
sbb
sar
xchg
mov
out
jno
outsb
push
adc
jns
jo
xchg
jle
pop
jmp
iret
lds
cmp
adc
dec
jae
cmp
mov
loop
or
in
jmp
adc
in
jg
or
lock
jbe
mov
in
out
xchg
gs
or
out
test
inc
inc
pushf
xchg
les
cmp
mov
adc
lahf
out
jge
push
and
aad
fs
sbb
ja
push
cmc
inc
fsubrp
pop
jl
iret
cmp
repnz
push
aas
pop
cmp
mov
shr
or
in
adc
pop
cli
out
test
out
stc
sbb
aaa
push
mov
dec
xor
and
in
push
mov
jp
out
jmp
out
fstl
shr
mov
sarl
sbb
aas
movsb
js
push
into
mov
cmc
aas
sub
cmp
lods
out
fucomip
std
ljmp
ret
add
cmp
xchg
roll
and
lea
loope
adcb
shll
push
push
scas
mov
pop
loope
aaa
out
pop
jecxz
pop
sbb
jmp
ret
mov
imul
sub
stc
mov
jecxz
push
add
dec
xor
stc
loopne
mov
aaa
and
clc
sub
or
inc
pop
add
cmp
jb
xor
xchg
push
add
fnstenv
stc
iret
ret
push
dec
mov
jmp
imul
bound
and
pop
out
push
fsubp
out
imull
mov
dec
sarb
shlb
xchg
fstpt
out
fimuls
js
inc
inc
out
jmp
jg
pusha
rclb
sahf
mov
sbb
out
lds
clc
fwait
jle
xor
xlat
jg
insb
out
rorb
push
fidivrs
sub
movsl
testl
inc
psraw
dec
sbb
inc
lea
mov
and
xor
add
push
cmp
out
lcall
fbstp
and
fwait
in
out
jmp
popl
pop
push
lock
out
inc
jnp
mov
sahf
fwait
lea
es
in
nop
fs
mov
leave
mov
testl
into
sbb
add
dec
mov
jmp
or
dec
mov
or
mov
movsl
and
add
or
xor
xor
aam
in
int
mov
jle
xchg
out
adc
clc
mov
imul
cmc
out
out
or
jge
addl
jg
xchg
cmp
or
add
test
out
jmp
push
lods
in
cmp
jb
data16
push
or
out
in
and
lcall
lds
imul
xchg
cmp
ret
and
xor
scas
fadds
les
out
movsb
das
call
mov
sbb
in
inc
clc
or
icebp
adc
js
push
mov
adc
lods
push
inc
lock
out
xor
fnstcw
inc
je
xor
out
inc
and
out
and
cld
pop
cmp
push
sbb
pop
lcall
out
xor
aam
pop
mov
pop
xor
lret
cmp
arpl
adc
sti
xchg
inc
in
jle
out
movsl
xchg
pop
cwtl
bound
sbb
push
adc
stos
out
fwait
inc
mov
arpl
int
int3
mov
xchg
out
outsb
out
inc
inc
or
sub
repnz
mov
out
xor
out
mov
mov
mov
cwtl
mov
loop
dec
test
jecxz
cmp
sub
or
or
fisubs
clc
testl
mov
out
mov
xchg
hlt
shr
or
in
add
add
pop
jl
mov
or
out
int
and
out
outsb
pop
fnstenv
in
push
ljmp
loope
fisttpl
out
push
sub
sbb
in
mov
orb
xor
cmpsl
add
add
xor
xchg
rcrb
jns
prefetch
dec
push
inc
xchg
cmp
in
mov
repz
cltd
loope
call
in
add
ficoml
cmc
leave
lret
arpl
mov
dec
lock
xor
cltd
and
das
xchg
in
rol
lret
out
pop
leave
xchg
pusha
into
out
out
data16
in
fistl
out
ja
dec
mov
out
inc
or
ret
int
dec
fwait
cmp
jno
cli
out
push
fistpl
lea
inc
xor
lret
push
mov
dec
cs
aad
push
arpl
roll
mov
repz
mov
divl
xchg
psubw
adc
sub
jb
repz
not
daa
and
xor
mov
add
cli
lret
sbb
lock
xchg
in
pop
js
jmp
push
pop
push
or
out
cmpsl
mov
repz
repnz
cmpsb
or
jo
mov
movsl
shll
ljmp
or
xchg
jp
inc
and
sbb
add
jae
xor
mov
pop
ss
dec
scas
popf
out
in
mov
out
cltd
daa
sub
push
mov
adc
adc
push
inc
add
fdivp
push
jo
cmp
cmp
cmpsl
mov
sub
jp
sbb
sbb
out
mov
push
push
jne
jle
cmc
out
or
xor
fidivl
pop
fsubrs
movsl
mov
xor
flds
incb
es
jno
pusha
adc
psrad
in
cmpsb
pushf
out
dec
add
mov
cmp
fldcw
in
dec
lret
loopne
sub
nop
loop
stc
sub
into
mov
pop
mov
lods
pop
mov
fucomip
sbb
call
mov
mov
jge
lods
xor
stos
movsl
xchg
mov
jb
mov
ret
jg
jmp
mov
loope
or
out
adc
jle
mov
xchg
xchg
adc
pop
stos
int
out
jecxz
out
jo
fiadds
pxor
sub
lret
test
add
dec
xchg
subl
sub
loope
fs
inc
xor
pop
mov
shr
push
into
aaa
jmp
inc
pop
lcall
jmp
out
fldt
add
cli
push
mov
cmp
adc
in
mov
nop
jl
jbe
cmc
ds
icebp
jns
call
xchg
lcall
sbbb
mov
adc
xor
clc
rorb
popa
in
pop
test
out
xchg
lahf
dec
lcall
orb
out
ret
scas
nop
push
movsb
xor
dec
mov
push
in
and
loopne
mov
pop
ja
out
ret
loope
stos
mov
push
mov
cmc
mov
cmc
add
dec
pop
mov
pop
xchg
inc
push
and
pop
mov
movsb
sub
scas
adc
mov
push
test
popf
add
lcall
push
movsb
scas
adc
jge
ret
add
gs
jae
outsb
lea
es
adc
xor
mov
subb
sub
loope
icebp
xchg
out
xchg
insb
jb
lods
xor
popf
inc
xchg
aam
rcrb
loope
inc
out
fdivrl
jae
add
xchg
add
ds
rcl
lds
jmp
movsl
and
xor
sbb
dec
leave
out
cmc
jmp
dec
xchg
test
and
stos
xchg
jmp
mov
lret
xor
scas
stos
repnz
xchg
jns
jmp
cwtl
mov
lahf
out
popa
xor
call
add
or
sti
jecxz
cmp
test
adc
mov
cs
inc
out
and
adc
out
mov
dec
mov
mov
push
push
cmp
iret
pop
es
mov
out
cli
sti
mov
xor
dec
imul
xor
out
out
lea
lcall
pop
adc
les
adc
fsubp
sahf
enter
out
rorb
add
inc
add
sbb
imul
daa
inc
jns
push
xor
push
or
fsubrs
cmpb
mov
mov
cmp
lea
dec
sti
inc
out
stos
lock
fs
sahf
mov
xchg
mov
adc
fldcw
push
popa
xor
and
and
out
fstl
lods
imul
add
aad
jae
sbb
xchg
jns
mov
and
ds
pop
out
push
leave
jmp
fwait
rcll
notl
fdivs
scas
out
cld
clc
xchg
pop
aaa
sti
cmp
rol
pop
cs
out
sbb
bound
add
fisttpl
out
dec
jne
loope
inc
push
out
cwtl
add
into
test
ror
and
jg
sbb
out
or
ss
sbb
xchg
andl
out
rorb
xchg
lret
xchg
sbb
pop
xchg
fcomps
js
scas
out
stc
jns
call
test
movsb
xor
xchg
or
lahf
mull
out
jmp
sbb
jae
out
mov
mov
adc
pop
loope
stc
inc
add
mov
mov
loopne
call
xchg
out
inc
sarb
sub
out
in
mov
fsubrl
mov
jns
mov
sbb
test
sbb
in
icebp
jae
adcb
fistps
and
clc
or
inc
ljmp
cmp
in
aad
sub
mov
out
mov
jge
mov
outsb
mov
dec
pop
adc
cmp
sub
popf
jge
dec
jo
stc
ret
xor
mov
mov
push
pop
out
jo
cmp
ljmp
cs
rcr
mov
out
arpl
pop
jbe
inc
cmp
out
jne
xchg
loope
xchg
shl
xor
pop
jb
push
mov
fimull
push
test
add
dec
xchg
movsl
mov
mov
cmc
push
jmp
pop
cs
bound
mov
in
imul
xor
lods
mov
jmp
loope
fisubrs
or
xor
sar
mov
out
mov
inc
enter
mov
mov
out
jns
inc
aam
out
out
cmp
sahf
call
je
mov
pusha
adc
mov
and
out
dec
jae
xlat
xor
push
sarl
fs
inc
xchg
dec
idivb
push
out
int3
imul
bound
jg
pop
sti
sub
in
out
add
push
adc
pop
ljmp
sbb
jnp
or
out
cmpb
sub
fnstcw
jle
mov
jae
loop
xor
and
sbb
push
mov
mov
mov
jp
cmp
xor
or
mov
movsb
xor
dec
ljmp
xchg
enter
iret
or
mov
incb
stos
pushl
jl
repnz
mov
adc
push
add
fsubrs
lret
popf
sub
imul
xchg
lahf
sbb
decl
dec
cwtl
mov
jecxz
add
xor
enter
lret
pop
out
fiaddl
adc
add
ja
testb
and
ret
add
js,pn
inc
out
push
sahf
mov
out
add
push
sub
jmp
lea
dec
cmp
out
test
xchg
mov
lret
scas
push
leave
mov
mov
lcall
in
gs
nop
cltd
leave
out
fisubl
sub
inc
sarb
mov
mov
pop
in
cmc
out
daa
add
or
xchg
xchg
push
dec
iret
pop
adc
add
mov
mov
imul
sub
xchg
std
out
xchg
loope
pop
shrb
mov
push
jmp
out
insl
and
jg
pop
push
mov
add
xor
cmp
pop
adc
xor
mov
sti
data16
mov
jmp
sbb
lods
clc
pop
push
das
inc
rol
inc
out
int
subb
loop
mov
imul
dec
cmpsb
loope
sbb
out
sbb
iret
in
xchg
sbb
out
cmp
xor
test
out
stc
rol
mov
inc
cs
rolb
out
loop
mov
jnp
hlt
movsb
add
push
ret
testl
add
inc
xor
push
out
adc
syscall
jle
dec
xor
scas
pop
das
pop
testl
add
mov
pop
inc
sub
out
mov
xor
addr16
stos
and
enter
out
jg
mov
cmp
mov
fnstsw
sbbl
das
enter
fistps
or
out
push
lods
addps
idivl
add
ja
in
sbb
cmp
pusha
movsl
rorb
pop
cld
repnz
and
cmp
xor
cltd
sub
ret
push
xchg
out
xchg
test
js
std
inc
pop
testl
insl
nop
cli
cltd
cmc
fucomip
loop
in
and
lret
in
push
mov
push
popa
dec
jmp
movsl
test
cwtl
adc
int
out
insb
roll
push
sbb
adc
daa
cli
adc
out
addb
ja
mov
adc
xor
xor
sub
std
xor
addr16
push
icebp
aas
test
pop
adc
push
or
pop
sahf
xor
mov
inc
mov
jbe
mov
mov
pusha
aas
test
repnz
mov
lds
pop
cs
mov
add
js
adc
inc
hlt
sti
inc
mov
mov
je
mov
mov
add
sahf
in
rclb
sub
sbb
out
movsb
jns
imul
insb
xchg
cmp
xchg
fwait
pop
arpl
inc
or
push
shlb
sti
incb
push
aam
or
mov
loope
jl
pop
xchg
btc
loope
out
rcrl
mov
out
in
popf
pusha
in
add
mov
adc
push
mov
push
lock
fnstenv
mov
push
fdivr
jo
push
cmp
push
ret
pop
roll
cs
jb
cltd
lods
call
out
xor
loope
mov
cwtl
cltd
out
int3
rcr
shll
add
insb
sbb
and
mov
lret
add
into
negl
add
sub
addr16
jl
xor
int
jo
nop
scas
in
ljmp
sbb
data16
or
mov
sbb
adc
ss
in
or
cmp
xchg
jns
imulb
push
pop
push
call
pusha
and
sub
xor
sbb
pop
xchg
std
or
cli
aam
lret
shll
inc
outsl
movsl
xor
jmp
mov
fcoml
mov
push
test
push
push
or
out
sahf
push
inc
rcll
dec
jo
mov
idivl
mov
jl
repnz
mov
inc
bound
mov
xchg
je
fiaddl
xor
push
lea
dec
daa
scas
jle
mov
push
inc
cmp
out
and
xor
cmpsb
mov
adc
out
push
push
sahf
dec
jg
xchg
cli
out
dec
repnz
test
xor
or
xor
out
mov
das
in
jecxz
and
out
inc
ds
fsubrs
dec
lcall
push
sysenter
out
loope
mov
out
add
cmp
lret
adc
imull
pop
out
pop
out
and
dec
xchg
sbb
push
sbb
cmp
shrl
inc
xchg
call
mov
inc
mov
out
mov
xchg
das
lock
in
notl
dec
inc
and
stos
dec
sub
negl
or
outsl
sub
divb
in
mov
xchg
out
and
dec
inc
out
push
aam
cmp
les
je
cmp
cmpps
out
js
lea
inc
xor
jo
outsl
test
pop
or
stc
mov
sub
xor
xor
mov
xchg
out
ja
int
jmp
jp
out
lea
sbb
dec
jecxz
xor
jb
push
fs
xor
cld
lea
xchg
adcl
push
lcall
stos
sbb
and
adc
adc
cmp
sbb
push
popf
jns
outsl
out
mov
push
test
dec
fldl
or
dec
hlt
shlb
addr16
out
inc
mov
pop
in
out
inc
and
mov
popf
gs
out
jbe
es
mov
popa
sub
mov
push
out
jne
fildl
xchg
or
hlt
adc
jno
mov
inc
jle
push
out
out
xchg
jbe
lahf
jb
ss
mov
mov
inc
and
dec
xor
push
cmp
push
inc
mov
xor
push
loope
cmpsl
or
fiadds
pop
out
sub
jmp
dec
out
jns
ret
lahf
jne
icebp
ret
lock
jmp
and
xor
test
push
xor
loope
lock
cld
sbb
lret
loop
push
xchg
movsb
insb
cmp
out
sub
aaa
shr
ss
ret
jb
ficoms
sbb
mov
and
inc
iret
pop
inc
out
enter
cmp
aaa
pusha
sbb
gs
pop
cli
adc
pop
inc
pusha
out
pop
sub
or
xor
movsb
push
out
ss
xchg
cld
mov
fidivrs
mov
jle
jecxz
out
mov
mov
jg
add
imulb
adc
mov
jl
push
out
cmc
ljmp
ror
dec
mov
mov
push
xchg
jns
out
dec
out
cmp
inc
sub
out
popf
add
xchg
xlat
jo
or
cli
jns
and
dec
dec
mov
test
jnp
in
fs
adc
jle
jecxz
sbb
push
jg
out
cmc
mov
imul
ljmp
inc
push
adc
mov
adc
sub
lret
lods
loop
test
adc
outsl
jo
xor
sub
cld
lret
ljmp
lcall
daa
out
push
in
sahf
jno
test
shlb
jnp
test
or
xor
ret
push
or
adc
out
cld
sahf
xlat
sub
aad
aaa
push
push
mov
fdivs
mov
pusha
imul
bound
jge
push
mov
push
orl
pushf
loope
iret
cmpl
loope
dec
jmp
jge
mov
loop
test
sub
push
ljmp
addr16
xor
imul
mov
mulb
push
dec
dec
out
xchg
and
jge
cmpsb
test
fsubrl
out
fstpl
xor
add
mov
fmul
int
jecxz
in
es
mov
scas
je
xor
jns
jl
push
popa
inc
push
mov
aad
inc
xchg
add
xor
push
movb
ret
shll
andb
lods
push
jmp
repz
gs
ljmpw
xchg
dec
out
call
xor
mov
sub
out
mov
movsl
jge
movsb
pop
mov
fldcw
data16
popa
aad
out
push
js
int
cwtl
shrl
pop
and
xchg
into
adc
mov
aas
dec
out
fsubrs
aaa
in
es
out
mov
fisttpll
sbb
mov
lret
xor
xchg
mov
mov
cltd
repnz
loope
add
es
loopne
iret
repz
sti
mov
inc
test
out
or
cli
and
xor
rorl
sub
mov
mov
roll
pop
ljmp
dec
inc
mov
pop
xchg
pop
out
scas
xchg
add
and
inc
pop
mov
jo
out
and
mov
andl
mov
pop
xchg
cmp
pop
mov
ljmp
fiaddl
icebp
sbb
adc
cmpsl
push
xlat
iret
daa
and
jge
fldl
out
out
pop
jle
in
hlt
sbb
or
xor
and
jge
dec
jno
inc
ljmp
jnp
fbstp
jne
add
ret
xchg
mov
lods
jo
mov
mov
add
push
push
out
out
jle
ds
out
adc
adc
inc
je
sub
xor
in
mov
outsb
out
adc
mov
cwtl
cmp
loopne
xchg
xchg
out
rcl
movsb
xchg
add
mov
jne
imulw
int3
mov
clc
and
out
push
dec
mov
jo
lods
insb
ret
daa
incb
adc
test
or
xlat
insb
jle
dec
dec
ds
sub
mov
cmp
mov
sub
xor
mov
iret
sub
dec
lcall
pop
push
or
or
add
mov
xchg
stos
out
jmp
mov
aaa
cmc
ficompl
mov
ljmp
std
adc
sarb
shl
sti
arpl
adc
lret
xor
addl
mov
in
jmp
mov
ficoms
inc
stos
mov
ss
lods
cld
mov
xchg
pop
out
sar
leave
pop
imul
jecxz
jnp
movsl
jae
xor
jmp
rdpmc
inc
xchg
xor
arpl
popa
mov
inc
lret
fwait
pop
in
out
sub
jge
out
xchg
std
cmpsl
fdiv
negl
mov
jmp
dec
iret
inc
jo
std
scas
ja
mov
sub
push
pop
repnz
jns
jmp
cmpsl
popf
outsl
inc
ds
xchg
jne
jae
cmp
arpl
jno
vucomisd
sbb
cmp
out
pushf
clc
mov
lock
jns
push
and
inc
push
inc
xchg
out
test
adc
cmp
out
add
jne
arpl
push
mul
inc
test
fldt
xor
push
mov
cwtl
test
shll
stos
xchg
out
jge
mov
jne
shlb
imulb
out
jb
in
mov
aaa
lods
out
jp
inc
pop
xor
sbb
stos
sbb
jg
loopne
out
dec
lahf
hlt
je
jle
xor
mov
daa
cmp
out
mov
mov
or
cltd
test
sub
shrd
scas
in
mov
out
push
test
add
popa
push
out
ror
sub
push
mov
inc
cmp
iret
add
ror
and
clc
mov
push
pop
pop
test
hlt
addr16
popa
mov
stc
fisttpll
inc
js
out
popf
xchg
das
add
aad
sub
mov
lahf
mov
push
dec
cli
clc
stc
mov
mov
out
out
outsl
stos
add
sti
jns
ret
push
mov
add
mov
push
or
xor
mov
out
xchg
mov
pop
jg
negl
fisttps
loopne
sub
sub
int3
pop
mov
mov
out
jl
out
mov
js
out
pop
add
cltd
mov
inc
data16
out
adc
aas
addr16
jge
push
jecxz
cmp
out
sbb
adc
lea
and
out
mov
jl
mov
dec
imull
addr16
decb
and
mov
imul
xor
stc
jae
inc
fnstenv
inc
popa
repnz
out
aas
and
pop
movsb
mov
push
fistps
cmovl
pop
les
jmp
ror
mov
imul
insl
fdivp
fucomi
sbb
movsb
addr16
adc
add
es
shr
and
mov
in
jmp
test
in
mov
movsb
cmp
iret
mov
xchg
xchg
sbb
pop
bnd
scas
mov
sbb
mov
lcall
test
sti
mull
out
xchg
adc
jae
lahf
stc
dec
cmp
and
xchg
cmp
or
loop
not
insb
jo
xor
lods
aas
add
aas
pop
pop
or
xchg
push
push
jb
movsb
mov
sbb
dec
dec
out
or
push
lods
xchg
gs
jo
cwtl
xorl
xor
and
mov
mov
mov
mul
popa
imul
sbb
fucomp
mov
jecxz
out
adc
mov
push
sub
mov
and
mov
stos
inc
loopne
sbb
sti
or
loope
inc
push
imul
add
mov
rclb
out
jns
mov
mov
add
out
imul
lret
add
fisubrl
orb
out
lcall
stc
call
gs
push
mov
nop
out
addr16
or
adc
or
inc
inc
sti
shr
fmull
insl
out
push
jne
sahf
andl
jo
ret
mov
in
push
push
out
aaa
nop
jg
stos
push
in
jmp
movsb
les
dec
repnz
lcall
and
sbb
loop
cmp
add
movsl
stos
pop
pop
push
inc
xor
or
xor
insb
fisubs
out
rcrb
mov
addb
gs
lds
add
inc
icebp
xor
out
mov
adc
sbb
hlt
notb
iret
push
les
push
dec
lcall
out
mov
loop
push
imul
mov
in
idiv
cmpsl
fcmove
inc
out
daa
icebp
dec
mov
ljmp
pop
out
stos
rclb
je
sti
and
add
pop
scas
out
push
xor
pop
and
test
hlt
cltd
out
mov
add
pop
ja
adc
push
insl
sbb
and
and
sub
pop
push
jmp
gs
add
inc
scas
dec
incl
shll
sti
es
mov
sbb
push
or
xchg
stc
out
push
js
push
cmp
repz
cmc
lret
pushf
add
or
xor
and
sub
insl
adc
and
add
sti
jge
mov
aaa
out
fisttpl
or
hlt
push
out
jnp
icebp
fstpl
add
subb
aam
jge
and
cmpsl
out
pop
mov
scas
incb
in
popa
push
cmp
fstpl
jne
mov
mov
int3
add
mov
stos
out
inc
and
out
push
and
sub
or
xchg
push
mov
adc
iret
inc
pop
sbb
testl
sahf
popa
jbe
xor
frstor
out
adc
mov
push
and
mov
push
jge
jle
sbb
pusha
out
and
pop
adc
xchg
out
loope
xor
jmp
cmpl
push
inc
mov
push
cmp
out
pop
faddp
mov
int3
push
lods
push
add
dec
inc
sarl
out
push
jle
rcrb
xchg
mov
and
jg
push
add
aam
dec
arpl
out
outsb
inc
jne
cmp
std
jno
sti
add
stc
out
push
mov
push
xchg
and
lahf
out
pslld
popa
mov
xor
cld
jbe
out
jge
pop
out
inc
in
sbb
push
lcall
popa
cmp
mov
adc
sti
out
or
cltd
out
hlt
stos
outsb
popa
fsubp
test
mov
xchg
std
and
test
shrb
sub
fs
or
imul
scas
out
lock
sub
loopne
xor
mov
mov
add
inc
out
cli
pop
dec
jl
andl
in
andb
sub
push
out
sub
ja
rcll
or
pop
pushf
mov
out
out
jl
popa
inc
leave
sub
jno
aam
inc
push
ja
loopnew
out
les
cmp
out
xor
mov
out
push
adc
insl
rcrb
out
es
push
pop
dec
in
jp
push
push
jae
into
hlt
or
cmpsb
mov
outsb
pop
out
inc
and
call
mov
mov
mov
push
fldenv
adc
addr16
mov
je
lods
pop
inc
sub
sub
xchg
jmp
dec
jp
mov
out
sub
aad
sbb
loopne
inc
cltd
pop
lcall
lahf
mov
inc
mov
pop
mov
iret
xchg
fmul
mov
pushf
mov
mov
loop
sbb
and
cmc
addr16
out
adc
rclb
add
push
jmp
adc
insb
lcall
mov
shld
mov
push
mov
fsub
jl
adc
aaa
cmc
js
roll
pop
daa
push
out
test
cmpsl
sbbl
inc
fbld
sbb
mov
jae
mov
mov
mov
out
icebp
clc
pop
cmp
mov
insb
mov
enter
mov
mul
cmp
hlt
out
aad
aas
xchg
push
xlat
jmp
out
pop
lods
cmp
sub
cmp
pusha
popf
or
push
inc
scas
arpl
xchg
lock
dec
lods
mov
outsb
aad
pop
dec
dec
xor
loop
mov
pop
sarl
mov
shrl
test
repnz
push
pushf
jmp
aaa
mov
mov
int3
and
or
dec
jmp
aam
pop
out
es
adc
outsl
add
mov
cmp
movsl
xor
adc
mov
pop
lret
xor
cli
out
sahf
cmpsb
inc
and
push
bound
mov
jae
xlat
out
pop
jp
inc
sbb
xchg
jmp
push
pop
pushf
mov
adc
and
push
xor
adc
push
and
sbb
add
push
in
pushf
push
add
mov
push
test
add
in
or
loop
add
out
mov
scas
jns
cmpsb
jp
out
dec
fs
or
loope
jge
mov
out
cwtl
and
sub
xlat
rorl
mov
in
aas
ret
adc
idivb
pop
out
jg
sub
out
xchg
push
imul
sub
test
push
push
cli
dec
sbb
and
mov
pop
jg
pushf
push
mov
push
pop
cmp
cmp
fcoms
xor
dec
std
jmp
mov
jne
out
fisubrl
sahf
repnz
cmpsb
or
dec
or
cmp
adcb
out
add
and
pop
push
adc
out
fidivrl
daa
and
adc
mov
out
cmpsl
and
add
xor
and
mov
dec
out
pop
lods
pop
inc
xor
or
movsl
ret
and
out
sbbb
test
cmpsl
sbb
push
out
stos
cmp
sbb
lret
sub
dec
push
fwait
aam
add
inc
xchg
push
mov
jg
lret
jbe
mov
fimull
pop
cmp
out
push
inc
cld
out
dec
sub
jno
int3
or
daa
out
xchg
cs
mov
inc
or
shll
pop
testl
jno
dec
cld
cmp
daa
out
das
fiaddl
mov
rcl
fnsave
aaa
pop
push
inc
inc
xchg
cmp
push
sbb
mov
cwtl
ja
out
xchg
arpl
cld
add
pop
adc
shlb
ss
xchg
out
xchg
lods
mov
loop
inc
add
sub
inc
out
iret
not
cltd
scas
push
sub
ret
push
mov
cmp
leave
out
pop
mov
dec
fcmovb
in
pop
stos
out
mov
sbb
jo
push
sahf
jno
out
ret
call
adc
push
jmp
imul
push
pop
sbb
mov
push
ret
sbb
insb
adc
out
or
inc
repz
fwait
inc
fstpl
push
out
iret
cmp
lods
xchg
fidivrl
sbb
xlat
jo
clc
mov
dec
ret
jns
outsb
mov
gs
insb
pusha
lret
fsubrp
inc
pushf
pop
das
cmp
mov
ss
insl
xor
frstors
lret
dec
mov
and
mov
sbb
addb
out
cmp
jmp
in
push
ret
sub
call
lret
call
out
xor
inc
outsb
loop
or
shll
push
out
cmc
fcmovnb
sub
mov
mov
mov
pop
negl
outsl
scas
jp
aad
lods
aam
pop
out
mov
cmpsb
inc
adc
out
sti
sub
call
pop
out
test
stos
jns
xor
bnd
mov
cmp
shll
or
pop
fcmovbe
aam
pop
sbbl
out
cmp
xor
sarb
pop
out
and
mov
ret
inc
mov
pop
negl
mov
stos
sarb
xchg
popa
fucomi
or
dec
push
push
mov
cmp
cmp
sbb
fwait
push
dec
stos
fisubrl
shl
sub
or
iret
lds
sti
xchg
push
inc
jne
cs
pop
in
xor
sub
ret
movsb
sahf
divl
scas
push
popf
out
out
and
mov
sub
and
cwtl
jo
pop
lret
outsb
inc
jmp
or
pop
imul
std
add
outsl
je
arpl
or
add
mov
jno
aaa
outsb
mov
xor
out
pop
repnz
or
jno
dec
imul
repnz
das
scas
cmp
lock
into
mov
xchg
fldl
inc
cmc
stc
xchg
dec
out
imul
xor
inc
sbb
lret
fwait
inc
out
sub
jp
out
push
sarl
push
out
xchg
dec
jnp
les
aas
pop
stc
xor
pop
out
pushw
dec
addl
sbb
dec
xor
stos
pop
in
lea
in
or
push
out
sarl
cli
dec
fs
cmp
out
jle
jp
mov
and
mov
add
dec
mov
cmp
xchg
mov
test
ljmp
jb
outsb
or
xor
sbb
shlb
loopne
out
leave
jnp
lret
push
jmp
jo
push
idivb
xor
aaa
ljmp
pop
xor
push
mov
xchg
cmpsl
pusha
adc
jo
shrl
inc
das
pop
or
mov
and
jnp
inc
ds
or
inc
repz
in
nop
lret
bound
adc
jb
lea
orb
and
js
jmp
out
das
shll
mov
insb
lods
lods
out
mov
jp
ljmp
jmp
sbb
aad
mov
cmp
dec
ja
lock
jns
push
subl
dec
sbb
scas
jno
les
std
push
out
push
or
test
mov
sub
cmpsl
add
mov
je
cs
dec
pop
mov
out
dec
mov
adc
add
bound
int3
xchg
xchg
icebp
es
daa
ret
out
xchg
nop
jo
fidivl
jno
and
mov
sbb
mov
pop
mov
xchg
jo
call
out
fisttpl
mov
ret
jbe
inc
ss
or
xchg
jb
sbb
out
mov
arpl
push
out
pop
jne
iret
mov
lret
jae
sub
cmp
dec
cmp
mov
pop
sarl
cli
insl
cmc
mov
out
aam
dec
inc
cmp
and
stos
jle
jo
int3
into
xchg
jns
cmp
xchg
insl
bound
out
cmp
push
lret
cmc
jo
outsb
add
hlt
js
aas
popf
in
out
dec
cmp
or
mov
jns
out
ficoml
adc
sti
popa
sbb
out
mov
adc
adc
mov
imul
jg
loopne
cmp
mov
xchg
sbb
dec
inc
repnz
enter
push
sbb
jo
addr16
mov
adc
lods
fcmovnu
cs
jmp
dec
jecxz
out
int
out
test
and
out
jns
cmp
mov
outsl
lret
insl
repnz
xchg
mov
out
ds
or
push
pop
icebp
out
push
jecxz
pop
scas
mov
mov
iret
cwtl
sbb
jnp
dec
scas
ficoml
in
mov
imul
inc
xchg
or
outsl
xor
fisttpl
sub
push
pop
lock
mov
mov
std
cmp
gs
mov
adc
loopne
sub
jmp
sbb
mov
jg
pop
push
pushf
inc
dec
mov
call
push
repz
mov
enter
out
call
out
cmp
int
test
ret
out
add
lods
int3
mov
pop
push
call
repnz
stc
iret
imul
repnz
in
pop
pop
push
jo
adc
sub
out
mov
lock
xchg
out
mov
cmp
adc
push
add
and
push
ja
mov
cmpsl
shlb
das
popf
stc
inc
push
jl
out
out
xchg
add
shll
jbe
cmp
jmp
jo,pn
jmp
add
pop
adc
pop
add
insl
or
enter
mov
push
out
jge
pusha
in
jnp
sub
fucomp
test
cltd
push
cs
jno
and
inc
cs
bnd
dec
mov
pop
push
out
mov
xchg
int3
iret
or
xchg
out
mov
aad
pushf
out
dec
mov
fmuls
loope
shrl
cmc
and
sarb
mov
lods
xchg
jns
stc
out
and
mov
pop
outsl
call
out
jmp
add
out
fists
pop
add
out
mov
out
cmp
clc
popf
scas
js
out
lret
cmp
or
ret
out
jb
fwait
mov
out
add
negb
mov
sbb
in
push
pop
sbb
cwtl
mov
and
adc
dec
insl
jp
push
add
scas
xchg
jmp
mov
aaa
test
add
in
sbb
or
out
add
mov
push
je
push
loopne
mov
icebp
jno
cmc
shl
mov
mov
out
out
out
jle
mov
inc
sub
fisubl
lret
pop
ljmp
xchg
call
aas
or
mov
out
daa
repz
pop
in
out
inc
stc
xchg
mov
pop
mov
mov
mov
jnp
into
rorl
push
inc
adc
xchg
movsb
mul
sarl
out
cmp
jle
mov
jg
adc
and
jmp
sub
out
sub
int
or
test
clc
test
sub
adc
lock
out
mov
ss
inc
jnp
int
lea
movsl
insl
add
pop
add
dec
aaa
pop
jo
call
mov
movsl
ja
call
jne
out
scas
cltd
inc
dec
push
jmp
ja
xor
mov
mov
mov
dec
push
pop
cmc
pop
shll
loopne
pusha
lds
xchg
pop
fwait
rorb
xor
pushf
jmp
out
xchg
dec
fiadds
mov
imul
push
sub
pop
add
call
add
test
loope
dec
mov
adc
mov
je
insl
sub
and
xor
ljmp
xchg
sub
js
xchg
pushf
adc
mov
cmc
mov
repnz
in
and
pusha
sub
xchg
jno
popa
ficompl
jno
push
mov
and
call
lock
mov
fdivp
test
or
imul
mov
pop
jp
inc
jns
out
inc
mov
imul
push
out
sbb
icebp
cs
test
test
lahf
scas
mov
leave
out
inc
cmp
cmc
mov
inc
jge
cmpsl
cltd
push
out
in
out
cmp
out
out
movsl
xchg
ror
dec
jae
fucomp
out
add
inc
or
insb
mov
std
clc
rorb
and
lods
lea
mov
outsl
sub
ja
out
xchg
in
adc
add
jp
cli
loop
shr
repz
fwait
addr16
mulb
scas
sub
sub
jecxz
cmp
shrb
cmc
push
xchg
cli
stc
add
cld
nop
gs
sbbl
dec
pop
cmp
outsl
mov
loope
lods
xchg
xor
out
aam
cwtl
cltd
mov
je
inc
in
arpl
aas
inc
data16
dec
xchg
xorb
out
cmp
cld
leave
sbb
add
das
adc
sbb
lahf
aam
and
mov
mov
push
std
push
stos
inc
xchg
cmc
out
aam
out
insl
or
push
outsb
jl
jge
scas
push
push
in
test
sbb
push
push
and
mov
xchg
cmp
das
jge
mov
pop
rolb
lods
aaa
out
and
push
jne
out
xor
jge
xchg
hlt
es
shl
pushf
adc
cld
call
sub
dec
imul
lahf
out
in
push
jmp
push
out
subl
adc
flds
shl
out
movsb
lock
xor
fsubr
cmc
add
mov
repz
fistl
repnz
and
lods
xchg
inc
mov
hlt
jg
cmc
adc
movb
add
and
mov
sub
scas
in
adc
or
xlat
jo
push
lock
outsl
out
cmp
lahf
adcl
out
push
mov
mov
mov
call
xchg
adc
ljmp
and
cli
jno
lcall
push
out
sti
add
out
scas
pop
push
mov
data16
fs
je
arpl
inc
jge
mov
mov
xchg
dec
mov
call
jl
in
insl
push
mulb
fs
mov
out
lods
std
add
jmp
push
enter
and
lock
jge
imull
sub
push
icebp
ret
push
pop
or
outsb
mov
pop
inc
out
aaa
out
jbe
scas
sti
outsl
xor
outsb
dec
adc
out
cmp
orps
movl
inc
in
out
and
jl
mov
addr16
dec
jmp
jbe
out
aam
or
icebp
out
mov
stos
test
rcll
mov
push
jl
testb
into
aad
and
jo
jno
and
call
out
mov
mov
jecxz
out
xorl
shrl
insl
out
nop
bound
push
out
jmp
cmp
ror
repnz
push
adc
pxor
in
xchg
xor
mov
repnz
outsb
test
mov
sbb
sti
out
cmp
jg
sub
ficoms
xor
comiss
sub
mov
outsb
shll
add
stos
ret
sub
mov
and
and
lods
out
mov
popa
dec
pushf
pop
out
je
xchg
xor
out
sub
pop
mov
xchg
inc
mov
test
sti
filds
rol
outsb
repnz
out
or
div
in
lods
or
adc
dec
sbb
push
and
add
mov
xor
lcall
mov
lock
scas
push
push
out
incl
loopne
imul
out
push
sub
in
cmpsb
out
int
call
jb
fcomps
xorl
ljmp
inc
xchg
and
lret
repz
lcall
mov
pop
lds
in
xchg
inc
dec
mov
or
push
hlt
dec
stos
pmulhuw
int
sbb
mov
ficoml
lods
jmp
icebp
das
or
inc
loopne
sbb
jmp
repnz
add
jb
sbb
xchg
cs
xchg
movsb
xchg
xchg
imull
jp
test
adc
push
outsl
and
fdiv
pop
inc
mov
mov
ja
out
das
push
out
add
sub
out
lds
pop
cld
ja
outsb
out
push
test
xchg
popf
pushl
or
sub
cmc
clc
mov
rolb
out
orb
dec
call
aam
cmp
sti
adc
icebp
fs
cmp
mov
sub
xchg
aas
out
sbb
mov
mov
fsubr
dec
cltd
sub
shr
cmp
lods
push
adc
mov
xor
lock
pop
fs
je
out
fadds
xchg
mov
repnz
iret
cmpsl
movsl
jmp
stc
ret
mov
mov
es
insb
aaa
jmp
iret
daa
cmova
loope
adc
out
test
int
call
call
ds
push
pop
nop
mov
and
mov
stos
call
out
jmpw
addr16
inc
pop
loopne
fdivrs
or
cmp
movsb
out
mov
mov
mov
fs
cmp
pop
xor
cmp
inc
loopne
jp
mov
jns
adc
pop
mov
loopne
dec
push
xchg
xlat
adc
adc
add
jmp
mov
add
fcompl
cwtl
arpl
add
loope
xchg
fidivs
mull
out
test
mov
add
and
mov
outsb
js
popa
cltd
dec
xlat
out
and
pushf
inc
rclb
hlt
push
cmc
out
popf
inc
mov
ficomps
out
mov
or
out
or
cmp
out
and
rcll
aas
add
movsb
pop
stc
out
push
or
shlb
xor
xchg
mov
out
xchg
mov
adc
test
repz
push
and
jmp
loope
xchg
out
pop
adc
cld
ret
ss
sub
cmp
push
int3
popa
loop
rcrb
aam
pop
ret
push
jno
dec
call
in
fsubl
jbe
xor
outsb
aad
adc
dec
out
pop
and
hlt
inc
mov
mov
mov
rorl
pop
loopew
popf
sbb
out
mov
js
out
aas
jmp
pop
ret
sub
pop
dec
dec
div
push
in
cmp
stc
test
sbb
xchg
cmpl
les
push
pop
fsubr
fwait
jae
gs
push
dec
movsb
or
scas
fiaddl
adc
jl
xchg
leave
out
xor
shl
pop
cmpl
out
mov
sub
push
jmp
rclb
enter
negl
mov
push
nop
insb
cmp
aas
out
pop
mov
lods
sub
into
popa
mov
sahf
cld
xor
outsl
fadd
in
daa
cmp
in
dec
in
xor
ljmp
into
jae
test
lods
out
and
mov
stos
repnz
mov
notb
dec
out
cli
cmp
dec
aaa
imul
movsb
ja
add
out
jg
into
mov
out
push
dec
pop
mov
fisubs
lret
mov
push
sbb
and
fmuls
addb
scas
mov
out
pop
fldcw
add
sbb
ds
and
inc
call
out
cmp
fwait
imul
mov
aas
jmp
sbb
das
fmulp
or
push
jo
xchg
dec
jle
push
aas
sub
dec
push
fsubrp
gs
fsubrl
ss
out
lcall
jo,pn
jmp
hlt
enter
adc
js
jb
pop
movsl
jns
push
jecxz
daa
ljmp
out
xchg
mov
sub
sbb
out
mov
pushf
out
js
mov
jl
xlat
mov
inc
xchg
out
lret
pop
sbb
ja
out
insl
jle
jmp
mov
lods
or
pop
push
ljmp
dec
es
adc
adc
jle
and
out
add
imul
daa
or
lea
popa
iret
lock
cmc
mov
cltd
xchg
out
fnstenv
xchg
or
inc
js
out
jnp
mov
mov
into
dec
push
out
dec
adc
out
data16
jmp
jne
testl
jo
or
push
sub
hlt
pop
aaa
mov
mov
ret
out
mov
cmpsb
adc
and
loop
push
push
gs
cltd
jp
scas
out
loopne
dec
adc
xor
aaa
out
sbb
jle
mull
mov
shlb
xchg
jbe
xor
dec
sbb
mov
pop
in
push
sbb
adc
mov
out
inc
leave
shl
sbb
or
out
add
dec
jo
ret
js
xchg
add
hlt
mov
xlat
out
sbb
xor
add
sub
jo
fnstsw
cs
cmp
leave
pop
cmpsb
jae
mov
shrl
cltd
loop
mov
sub
outsb
pusha
out
lcall
push
add
lock
lret
popa
out
inc
out
loop
pop
sahf
mov
jl
xchg
cmp
in
sbbl
or
test
daa
dec
out
and
xlat
test
out
dec
sub
pop
jecxz
je
add
es
mov
cmp
cmp
push
mov
lock
xchg
mov
dec
repnz
adc
jp
out
out
in
inc
out
dec
pusha
in
inc
xchg
jae
ja
gs
inc
clc
ret
dec
sbb
mov
pop
mov
mov
xchg
icebp
and
add
fdiv
cmpsb
dec
sub
out
int
xchg
jp
in
ret
aas
or
ds
add
sti
imull
push
xchg
sbb
out
xchg
add
loopne
xchg
sti
add
jbe
mull
rcrl
push
imul
mov
stos
sbb
cmpsb
in
lock
insl
rcrl
mov
mov
xchg
movsb
stos
enter
xor
cmp
imulb
mov
xchg
pusha
fstpl
mov
outsb
cmp
or
xchg
inc
push
xchg
insb
aad
out
cltd
pop
mov
aam
sbb
testl
xor
repnz
cli
stos
sub
enter
in
testl
or
shr
inc
jecxz
out
jo
adc
in
dec
xor
pop
cmp
ficompl
jb
dec
inc
insb
jbe
out
fsubrl
clc
lahf
lret
adc
fisubrl
dec
jecxz
mov
sbb
and
lock
pushf
jg
push
inc
mov
loopne
out
inc
aad
adc
out
add
inc
sub
adc
shrl
mov
xchg
xor
pop
in
insb
xchg
xchg
std
imul
shll
cmp
cmp
pop
dec
aaa
xchg
rol
and
mov
xor
div
cs
push
cld
hlt
cmp
jo
scas
aaa
sbb
jbe
mov
out
xchg
jmp
adc
out
sub
push
out
mov
jecxz
xchg
push
lds
daa
aaa
cmpl
push
out
rcrl
push
call
data16
imul
rclb
test
mov
xor
outsb
mov
lea
out
sbb
stos
dec
jg
leave
gs
aas
xor
xchg
pop
repz
out
movsl
rcr
outsl
jns
jo
add
insb
lock
or
xor
xor
mov
adc
sti
out
adc
movsb
mov
aam
ret
out
pusha
inc
lret
add
mov
in
shr
js
loop,pt
pop
cmpsl
out
iret
sbb
xchg
in
or
or
lods
loope
pop
aas
xor
cmp
addr16
sahf
pusha
push
xor
ss
push
loopne
call
fidivrs
andl
pop
movsl
rcll
das
sub
add
out
pop
into
dec
fldenv
and
sbb
push
aam
cmp
cmp
pop
add
jp
cmpl
aas
out
mov
es
out
rolb
sbb
in
repz
xlat
jge
xor
mov
cwtl
mov
mov
add
push
xor
cli
out
test
lcall
push
sbb
out
jae
stos
rcrl
pop
not
outsb
in
pushf
xchg
or
repnz
out
jmp
dec
inc
cmpsl
add
test
or
dec
sub
out
pop
jp
sub
push
mov
cli
popf
or
loop
in
pop
pop
out
mov
shr
jne
or
mov
ret
std
xchg
cmpsl
out
push
dec
out
add
and
push
xchg
sbb
push
inc
jmp
sarb
test
out
jae
and
sub
or
fdivs
mov
push
cmp
sub
cmc
sub
add
mov
jmp
insl
and
push
mov
fsubr
in
call
stos
in
cmp
mov
out
ds
mov
out
je
int3
sbb
xor
mov
jle
xchg
imul
adc
cmc
lahf
lods
dec
out
xchg
out
lds
dec
sub
ret
out
sbb
mov
shr
aad
cltd
mov
jnp
xor
sbb
insl
adc
sbb
push
hlt
loope
mov
jg
out
sub
clc
and
out
mov
xor
lahf
popf
mov
xchg
cmp
scas
pop
daa
xor
mov
fnstcw
adc
icebp
gs
lret
xchg
int3
pusha
out
lahf
or
sub
jmp
xor
jns
jmp
shlb
rcll
dec
out
sbb
jo
out
mov
dec
fsubrs
add
push
sub
push
mov
mov
out
sbb
out
fcmovne
mov
ret
jb
lahf
dec
pop
lcall
mov
push
fcomi
sub
out
lock
xchg
mov
and
shrl
in
jne
dec
jmp
popf
dec
notl
xchg
lcall
push
and
or
dec
repnz
mov
orb
and
hlt
xor
adc
mov
outsb
in
and
out
xor
mov
mov
pop
xor
out
adc
test
aas
dec
jmp
or
and
out
loope
inc
jmp
inc
int
out
xchg
loop
cwtl
add
sbbl
clc
dec
push
out
or
jmp
out
cmp
cld
inc
pop
mov
mov
xor
subb
jbe
out
adc
call
out
rcrb
dec
push
stos
push
mov
pop
in
xchg
test
scas
out
pop
cmp
xchg
inc
stos
push
fsubrp
insb
or
pop
in
out
out
test
ss
out
lods
mov
jp
adc
fucomp
nop
sub
scas
jmp
std
ljmp
test
fsubp
popa
mov
out
nop
xorl
sbb
cmp
sti
mov
rclb
in
cmp
mov
xchg
jb
ds
movsb
vphaddwq
test
jno
xchg
lret
sbb
and
sbb
out
mov
clc
mov
arpl
aad
pushf
push
fucomp
vpermq
add
out
nop
adcb
and
mul
lea
scas
cmc
pop
xor
out
pop
jle
mull
push
pop
out
in
leave
mov
in
int
out
fwait
divl
imul
sub
inc
cmp
jo
enter
pop
shlb
rcr
jo
filds
cmpsl
jecxz
std
jo
push
or
pop
in
ss
xchg
out
orl
xorl
sarl
dec
mov
push
xchg
in
out
imul
xor
ss
adc
popf
mov
arpl
sub
mov
dec
pop
sbb
jmp
xor
shlb
xor
out
adcb
adcl
fs
test
out
insl
mov
sub
out
sbb
inc
fistpll
mov
mov
leave
psadbw
fsts
popa
mov
mov
out
das
mov
out
stc
cmp
sub
shr
icebp
mov
cld
leave
scas
push
mov
xor
lret
xchg
ret
lock
out
cld
mov
test
xchg
out
mov
adc
pop
sbb
pop
in
outsl
mov
icebp
pop
mov
jle
dec
test
out
out
xchg
push
dec
sub
sbb
pop
adc
cmpsb
outsb
xor
dec
notl
imul
loope
add
and
test
out
xchg
mov
mov
dec
mov
pushf
out
aam
rcl
sti
rcrb
pop
add
inc
nop
in
out
or
enter
aam
cmc
popa
push
cmp
fdivp
dec
cmc
cli
xchg
out
and
popf
data16
test
push
jecxz
mov
popa
mov
jl
push
jne
push
out
or
outsb
xlat
inc
out
ss
aam
jle
stc
out
adc
inc
in
cmpsl
rcrb
xchg
shl
mov
adc
adc
lcall
jo
push
lahf
in
cmp
loope
sub
xor
or
push
leave
int3
outsb
mov
es
inc
xchg
icebp
dec
or
test
jl
in
inc
pop
jp
out
out
add
addb
mov
inc
lret
mov
jmp
insl
inc
dec
out
sub
jge
cwtl
cld
outsb
push
out
insb
sub
pusha
aam
sbb
dec
shlw
xchg
push
pop
cs
xor
pop
jmp
push
out
outsb
adc
xchg
sub
out
adc
adc
mov
call
and
cmp
out
adc
sub
push
push
mov
data16
andb
in
add
lcall
ds
pop
lock
leave
cld
adc
bound
xchg
jl
add
imul
cmp
xor
aad
std
cmp
cmp
sbb
mov
out
popf
and
ljmp
dec
jecxz
pop
fucomp
push
pop
adc
test
hlt
lret
in
aad
sub
xchg
sbbl
push
inc
mov
out
sti
fwait
mov
inc
je
xor
out
jb
xchg
cmp
lock
dec
sarl
sbb
pop
mov
sub
add
mov
out
mov
in
icebp
out
std
es
outsl
add
sub
pop
or
pop
jmp
out
and
mov
hlt
mov
shl
out
gs
int3
cmpsb
cmpsl
cmp
xchg
mov
imul
lods
xchg
dec
sub
scas
ret
mov
cmp
push
out
movsb
push
mov
xor
popa
arpl
mov
js
xorl
nop
inc
xor
xor
jg
out
aad
pusha
shl
or
out
sub
cs
pop
scas
mov
dec
arpl
data16
out
inc
adc
out
mov
loopne
fsubl
sub
icebp
shrb
sbb
ret
add
push
daa
and
mov
sbb
sub
sbb
mov
xchg
out
jg
mov
aas
pop
ficoml
xor
pop
lea
out
add
fldcw
mov
movsb
out
pop
mov
repnz
mov
shlb
outsl
loop
rol
movsb
in
stos
mov
imull
push
xchg
leave
popf
rep
jmp
movsl
out
pop
flds
hlt
out
push
and
fs
inc
inc
add
push
and
subb
andl
dec
mov
clc
enter
outsl
mov
inc
fldt
into
xchg
out
imul
out
push
sbb
ret
mov
mov
push
cmp
sbb
push
mov
out
scas
out
cmp
xchg
out
jb
lcall
push
hlt
push
imul
pop
stos
int
outsb
sbb
out
xchg
add
mov
out
mov
push
lds
scas
mov
fs
lods
jb
mov
fnstcw
rorl
loope
and
shlb
cwtl
test
push
jno
inc
jle
push
push
out
mov
mov
adcl
shlb
les
lods
sbb
add
sbbl
jmp
aam
imul
rorl
inc
aaa
pop
jmp
dec
sbb
out
xor
sub
scas
xor
out
sub
mov
or
out
int3
les
cld
in
lock
push
push
leave
fnstsw
repnz
movsb
jo
xchg
movsb
fxch
out
inc
rorl
or
push
and
or
jp
push
xchg
sub
sarl
out
jmp
sbb
int3
adc
mull
das
adc
mul
jo
stos
imul
aad
out
mov
mov
stos
pop
cmp
dec
and
pop
push
add
lods
jecxz
mov
xor
enter
sti
add
jge
rcll
shlb
cmpsl
lods
and
cld
pop
jecxz
adc
popa
push
notl
mov
movl
cmp
jbe
cmp
mov
xor
scas
lret
adc
xchg
fdivs
xchg
pop
push
repnz
mov
sub
mov
mov
cmpsb
jl
nop
or
mov
test
enter
testb
cmp
jae
call
out
test
push
add
out
ficoms
nop
dec
scas
pop
mov
sub
cmp
out
test
xchg
mov
movsl
clc
inc
cmp
pop
in
xor
fdivl
aaa
fs
dec
or
inc
sbb
inc
shr
cltd
imul
jbe,pt
test
push
inc
notb
jmp
sbb
dec
inc
lock
mov
popf
add
out
js
in
push
out
pop
out
lcall
inc
sub
jle
cmp
mov
movsl
push
sbb
cld
xor
imul
fldl
out
aam
clc
data16
out
cmp
inc
sub
sbb
jmp
repnz
jno
mov
xchg
into
add
mov
jmp
pop
repnz
popf
fcmovbe
loope
mov
clc
out
pop
pop
icebp
movl
or
sbb
or
jmp
push
push
cmp
mov
xchg
jecxz
pop
enter
cmp
mov
out
lcall
pop
outsb
pushf
out
fwait
or
pop
out
ficomps
stc
lods
pop
xor
adc
pushf
mov
out
inc
pusha
add
out
fwait
xchg
in
jecxz
icebp
mov
or
pop
hlt
dec
and
out
in
shll
dec
lret
test
and
jle
outsl
pop
out
popa
dec
lea
push
out
imul
out
stos
or
mov
cltd
ja
outsl
ljmp
jae
scas
jp
jmp
inc
xchg
in
dec
push
fwait
sub
fstl
inc
xlat
lret
jns
push
das
out
insl
xor
insb
xor
out
lods
dec
and
push
pushf
out
fcoms
dec
cld
jo
jo
cmp
inc
pusha
out
push
cmp
cmpsb
out
inc
sti
es
dec
jbe
mov
dec
int3
xchg
lcall
mov
or
stc
dec
out
push
insl
adc
mov
mov
or
jl
mov
addr16
cmp
adcl
adc
imul
rcl
push
outsb
xlat
ucomiss
stos
xchg
add
or
jp
dec
inc
adc
sbb
out
lret
cmc
shrl
mov
mov
adc
pusha
out
sub
cmpsl
push
mov
fnstenv
mov
jae
mov
out
test
sub
stos
lret
lods
push
push
push
mov
sar
popa
out
mov
out
fdivrs
clc
out
das
pop
ljmp
push
jmp
aas
add
or
inc
add
cld
pop
push
inc
cltd
dec
sub
test
and
jo
in
xor
data16
add
aam
cmp
shr
mov
outsl
movsb
out
add
pop
inc
jo
incb
es
dec
xchg
add
out
loopne
insl
dec
xor
lahf
out
ja
xchg
psubusb
outsl
fs
lret
stc
mov
or
in
or
push
lds
in
mov
out
movsb
shrl
enter
mov
call
out
jmp
push
mov
repnz
aam
jl
xchg
test
dec
test
out
out
dec
sub
push
push
ss
push
out
jo
movl
push
sbb
mov
lcall
xchg
or
out
pop
movsl
test
push
out
sub
mov
orb
out
mov
lds
jge,pt
jb
daa
sbb
cmp
or
pop
jo
cld
ret
sub
mov
test
dec
xchg
push
mov
add
out
inc
cmc
notb
ljmp
push
push
mov
out
ret
push
mov
mov
sbb
pusha
push
leave
inc
xchg
ret
out
lock
in
sbbl
into
insb
or
and
data16
test
jne
mov
jp
sub
out
clc
loop
fldenv
push
out
add
scas
jg
push
pop
shll
popa
data16
adc
out
shrl
or
mov
shl
out
js
adc
fcomip
adc
js
out
mov
or
loopne
sub
mov
sub
into
push
call
push
out
cmc
jmp
cmpsb
scas
and
in
cs
inc
fsubr
sbb
cmp
arpl
pop
test
jnp
pop
sbb
addr16
lods
cmpl
add
dec
pop
out
add
adc
lds
push
adc
cmp
mov
js
mulb
out
out
pushf
pxor
push
dec
stos
bswap
divb
jl
gs
rcrl
add
idiv
test
and
daa
jno
mov
je
imul
push
add
je
jmp
push
jb
add
cmp
lcall
test
cmp
ffree
xchg
push
cmp
xchg
cwtl
out
sbb
out
movsb
jns
mov
pop
jge
xchg
andb
imul
push
jmp
test
repnz
mov
out
cmp
pop
inc
inc
mov
mov
repnz
out
cmp
faddl
adc
mov
arpl
int
in
dec
or
inc
test
sti
ficompl
aad
jae
rcr
out
push
mov
mov
pop
sbb
les
and
mov
xchg
dec
pop
callw
fldenv
test
push
out
mov
sti
push
ljmp
imul
pop
imul
dec
das
sar
call
js
icebp
stos
inc
in
mov
loop
mov
in
imul
and
out
pop
sub
out
daa
xor
and
push
arpl
test
and
xchg
out
mov
dec
xchg
fwait
lret
adc
adc
mov
jne
out
insl
mov
cmp
repz
or
ret
adc
push
out
leave
sar
or
out
dec
icebp
insl
mov
out
aam
push
js
jns
xor
inc
adc
incb
adcb
jmp
pop
push
xorl
pop
push
mov
test
outsl
icebp
mov
movsl
cld
shrb
je
out
enter
xor
insl
dec
aam
out
mov
sub
test
push
insb
testl
push
bnd
pop
js
jb
or
xlat
jns
rcrb
sub
push
sbb
dec
insb
ds
push
sbb
xchg
mov
xor
cmp
fisttpll
mov
pop
mov
cmp
fs
cmpsl
shll
out
mov
cmp
mov
popa
sbb
out
shll
adc
test
out
and
jbe
mov
pushf
insb
cmc
and
adc
pop
int
adc
jo
ffreep
scas
in
add
mov
in
push
ficoml
xchg
jno
fcomip
sub
out
and
xchg
xor
and
mov
negl
dec
out
pop
add
adc
xchg
outsl
leave
pop
sub
out
cli
push
bound
lea
dec
lret
dec
out
mov
out
lock
sbb
jge
sbb
sbb
ljmp
testl
and
icebp
sub
jecxz
xor
into
iret
icebp
push
add
out
mov
jl
sbb
fcomi
js
lea
sub
or
ds
lret
je
test
out
lahf
ucomiss
xor
out
sbb
sub
bound
mov
ds
mov
add
mov
xchg
lret
dec
das
arpl
rcll
sbb
and
out
shl
scas
add
mov
loopne
out
stos
and
sti
xchg
rcrl
lret
cmp
jecxz
sub
mov
fisubs
xchg
or
add
out
minps
shr
std
fucomip
sbb
xchg
sbb
dec
mov
nop
xor
or
pop
cmp
xchg
mov
jecxz
sub
inc
outsb
out
mov
and
mov
out
lret
push
in
call
cmp
div
push
sbb
out
or
iret
pop
ja
movsb
or
cld
jne
out
lahf
ljmp
std
mov
out
push
mov
lahf
inc
rcrl
int3
ret
inc
sbb
mov
mov
and
mulb
jo
das
imul
lock
pop
add
rcr
rol
das
testl
scas
mov
stc
pop
pop
dec
mov
cltd
pusha
push
mov
mov
jmp
sbb
stos
out
xchg
cli
mov
cmp
test
adc
nop
xchg
inc
sbb
fdiv
jmp
das
pop
jp
aas
xchg
pop
push
popf
cmp
inc
bound
dec
add
std
adc
xchg
sub
aaa
jp
and
jge
ficompl
cmp
push
icebp
clc
inc
xor
push
jne
and
mov
mov
mov
popf
ljmp
testl
out
roll
sub
repz
mov
push
push
or
jle
dec
push
fistl
push
and
mov
out
mov
repnz
push
xor
out
xor
xchg
divl
outsl
add
or
scas
jnp
mov
outsb
insl
fidivs
inc
jb
push
xorb
stos
adc
xor
adc
inc
push
enter
cmp
fsubrs
scas
out
push
arpl
in
inc
test
cmpsl
xchg
idivl
pusha
dec
mov
push
mov
jne
ljmp
ret
sbb
add
outsb
std
addr16
fs
push
pop
cltd
jb
out
jmp
lret
cmp
sbbl
movsb
pop
das
out
sbb
ret
mov
lock
cmp
mov
inc
int3
xor
jl
in
sub
sbb
mov
xor
popf
add
negl
daa
and
out
pop
push
push
jl
ficoms
push
and
clc
mov
jp
out
cmpsb
lods
fldln2
dec
mov
push
mov
add
divb
and
push
dec
jmp
mov
aas
xchg
fnop
test
cwtl
xchg
adc
mov
and
xchg
out
rolb
popa
xchg
out
mov
jmp
out
movsl
dec
adc
pop
cmp
int
xor
xlat
cmp
jmp
jno
out
jge
movl
out
ret
and
pop
insb
out
pop
lret
mov
cmovs
lods
cmpsl
lahf
imulb
push
jbe
int3
pop
and
in
jmp
xchg
cmp
lds
jle
stc
mov
xor
out
lock
out
fimuls
mov
fisttpl
inc
scas
pop
jnp
xchg
sub
inc
pop
mov
test
test
xchg
mov
push
cmpsb
in
lods
jmp
ja
inc
xchg
or
jge
xchg
roll
adc
and
inc
mov
mov
pop
push
jmp
pop
notl
popf
push
in
mov
xchg
ljmp
rcl
inc
into
test
cmc
nop
aad
xor
lcall
mov
lods
loope
jb
repnz
popa
jo
cmp
int3
push
adc
push
pusha
mov
dec
insl
scas
std
jb
mov
xor
notl
ljmp
push
mov
cwtl
jne
or
ljmp
out
jmp
aaa
addr16
jnp
outsb
push
rol
cmp
add
fstl
pause
into
shlb
mul
jmp
mov
xlat
inc
cmp
add
cmp
fistpll
out
addr16
test
and
dec
jmp
sub
jle
jo
sti
loopne
push
cmp
and
addr16
mov
roll
mov
or
dec
icebp
jmp
inc
mov
fcompl
push
mov
sub
dec
iret
jle
out
les
xor
daa
aad
scas
movsl
out
dec
adc
or
mov
push
lods
imul
jo
stc
fisubl
mov
add
pop
sub
pop
mov
test
xor
push
stos
sub
out
enter
jo
push
add
add
xchg
cmc
je
in
and
jo
mov
inc
inc
mov
xor
fldenv
test
adc
and
cltd
mov
cmp
push
pop
scas
loopne
push
inc
movhps
out
sbb
push
std
fwait
push
dec
lds
mov
les
addb
out
xchg
clc
icebp
int3
inc
cs
shr
lods
out
lret
loop
lea
loopne
adc
inc
sub
out
nop
mov
fdivrs
jp
out
cwtl
sub
lds
xor
mov
pushl
clc
arpl
enter
popa
out
pop
mov
mov
lea
cmp
cmp
enter
sub
sub
orl
out
push
faddl
aaa
ret
xor
and
pop
cltd
shl
fwait
jne
dec
inc
arpl
clc
scas
lds
int3
mov
mov
js
add
scas
xor
mov
out
sbb
fs
insb
push
mov
xor
cltd
out
cmp
sub
aam
std
insl
dec
out
mov
mov
das
cld
shl
popa
mov
push
out
ja
inc
mov
loopne
out
sarl
pop
out
pusha
outsb
xchg
cmc
cld
pop
movsb
and
test
inc
mov
out
cmp
lods
sbb
jbe
jae
in
mov
and
mov
lea
cmp
pop
dec
lcall
iret
loopne
xor
sub
adc
popa
add
pop
sbbb
push
out
lea
insb
rcrb
clc
cmc
xor
iret
lret
into
mov
jg
out
add
aam
xor
hlt
je
inc
xor
out
jge
bound
aaa
pop
jae
dec
cmp
int3
dec
adc
mov
mov
jp
fldenv
in
xchg
sbb
bnd
frstor
sbb
jl
mov
push
pop
or
jge
push
adc
sbb
movups
cmp
out
cld
js
sbb
pop
mov
sub
pop
and
lcall
iret
push
in
out
insl
xor
and
sub
sahf
mov
out
jo
dec
pop
insl
stos
cld
jns
push
add
stc
in
sbb
int3
push
out
xor
in
mul
adc
jo
xor
jne
out
es
in
adc
test
sub
xchg
cmpsb
push
push
icebp
scas
or
outsb
sbb
cmpsl
clc
out
test
out
sbb
jne
nop
jp
cld
out
dec
push
sbb
sub
pusha
cwtl
test
push
cli
xor
stos
dec
leave
adc
ja
dec
movsb
jae
mov
lods
iret
pop
inc
push
xor
push
or
and
and
mov
out
or
xlat
pop
dec
add
inc
ljmp
int3
movsb
sar
xchg
jg
lcall
and
adc
mov
insl
ja
mov
in
inc
adc
dec
sub
or
xlat
sbb
shl
push
aas
in
out
out
adcl
popf
addb
insb
lahf
lret
out
shrl
js
ds
movsl
fisubl
mov
aas
aam
out
cmp
clc
xorl
daa
push
out
jmp
push
jmp
loopne
scas
inc
add
ljmp
mov
sub
negl
or
jp
fisttpl
out
cmpsb
ficoms
punpckhwd
icebp
xor
clc
pushf
ret
or
lods
out
lret
jp
mov
sub
adc
lahf
add
mov
xchg
out
sub
dec
lret
jp
jo
ret
es
and
jne
cmc
mov
popa
out
add
xor
xor
mov
mov
mov
jl
gs
cmc
test
xor
out
xor
xchg
out
pop
pop
fwait
scas
daa
pop
stos
push
out
cld
sub
xchg
push
loop
add
jmp
dec
movl
loope
mov
push
out
jb
pop
arpl
dec
mov
jg
pxor
test
add
add
test
lcall
imul
cltd
jno
jmp
cmc
dec
out
clc
and
aas
testb
add
test
punpcklwd
aam
push
xchg
sub
daa
ds
out
dec
push
add
pop
mov
xchg
outsb
and
adcl
xor
cmp
pop
lahf
adc
outsb
fstps
add
dec
iret
mov
add
mov
pop
and
mov
jne
sub
or
mov
jle
out
fisttpl
mov
cmc
xchg
xchg
out
mov
xchg
inc
out
adc
stos
xchg
or
shr
mov
mov
in
xor
inc
mull
push
leave
icebp
mov
in
mulb
stos
pop
pop
out
push
xchg
push
dec
lsl
out
inc
fwait
push
mov
adc
divl
out
dec
icebp
inc
push
out
iret
mov
fdiv
in
cmp
pop
out
sbb
xchg
mov
push
push
aas
lret
cs
xor
pop
jge
std
ljmp
push
mov
nop
inc
or
dec
out
xchg
loop
or
jne
mov
or
mov
insl
xchg
xor
or
xchg
icebp
aas
loop
mov
rcll
out
mov
mov
std
mov
jb
out
rcl
add
jmp
pop
out
push
out
rolb
jg
scas
cmpl
jno
test
sbb
ljmp
push
mov
mov
mov
dec
inc
lock
fwait
sbb
add
out
pusha
sub
pushf
adc
cmp
fldl
in
cltd
jmp
nop
adc
add
out
xchg
xchg
xor
jmp
xchg
je
mov
out
push
cmpb
das
mov
mov
out
fisttps
in
and
std
mov
sbb
jne
nop
testl
or
xor
aad
inc
je
loop
mov
dec
or
inc
loopne
inc
out
in
push
ss
jle
stc
outsl
out
xor
and
pop
and
out
cli
mov
out
lods
daa
dec
shlb
jge
rol
fstpt
out
stos
inc
dec
je
lods
jo
out
aad
jmp
fld
add
sub
scas
push
jb
xchg
cmp
xchg
addr16
sub
out
push
test
dec
jo
add
cli
xchg
mull
inc
gs
adcb
out
xchg
lods
add
es
test
push
or
mov
outsl
pop
idivb
in
out
add
jns
fstl
jge
xchg
sbb
adc
xor
out
movsl
or
cmp
push
lahf
mov
sub
out
cwtl
aam
dec
pushl
xchg
and
int
leave
cmp
or
out
xchg
pop
jne
pop
mov
stc
sbb
push
ret
loop
ret
jbe
daa
mov
movsl
pop
repz
xchg
xor
fcomi
sub
aam
out
pop
imull
stc
pop
jae
add
cld
jmp
mov
imul
scas
cltd
jne
cmc
mov
ja
shr
mov
jns
xchg
pop
add
sub
jne
dec
popf
add
into
mull
and
fs
inc
data16
mov
cmp
add
push
sarl
out
aam
je
mov
sti
cmc
out
test
shr
and
addr16
inc
push
and
pop
dec
jb
or
xchg
adc
lock
sbb
in
jge
push
jp
sub
xor
jle
flds
out
scas
movsb
sarl
out
gs
icebp
push
xchg
xlat
or
mov
inc
pop
dec
out
out
mov
lret
mov
ss
lea
and
repnz
add
mov
push
out
pop
add
lea
aam
jo
sub
test
add
jae
sahf
decb
sbb
out
hlt
mov
scas
or
sub
daa
fiaddl
lds
outsb
shlb
add
jmp
repz
out
mov
pop
mov
pop
stos
enter
jecxz
scas
cmp
push
sub
inc
jne
dec
add
testl
mov
inc
out
loope
cli
imul
adc
daa
xor
dec
jo
xor
pushl
out
outsb
adc
fs
push
shlb
cwtl
testl
addb
fcoms
ret
loopne
or
cwtl
pop
gs
inc
leave
add
popf
adcl
xor
inc
out
pop
dec
mov
jmp
ss
xchg
movsb
out
repz
aam
lret
dec
mov
inc
inc
pop
subl
cmc
sub
icebp
cltd
out
mov
pop
push
xchg
insl
ret
out
inc
int
pusha
sysret
pop
js
mov
mov
and
adc
fwait
in
data16
shlb
or
imul
jecxz
bound
rorb
lea
stc
movsl
shll
mov
xchg
ja
das
aaa
push
cmp
out
call
int3
mov
adc
divb
js
inc
push
test
add
inc
sarl
xchg
adc
or
bound
jns
out
loopne
cld
ja
je
push
out
jg
push
call
adc
cmpsb
bound
mov
out
enter
sbb
test
mov
push
adc
push
xchg
cmp
sub
div
popa
js
out
outsb
xchg
pop
jg
mov
and
mov
cmp
hlt
mov
notl
inc
add
icebp
adc
jmp
repz
jo
aam
mov
out
xchg
js
jnp
sbb
mov
mov
pop
sub
out
jp
push
mov
mov
out
mov
pop
loope
push
dec
sbb
pusha
fnstenv
out
ljmp
loopne
mov
jl
mov
test
xor
dec
out
jge
jle
ret
xorb
inc
mov
in
sbb
cwtl
loop
repnz
pop
xchg
and
push
adc
ljmp
cmp
shr
mov
cltd
fs
cmp
lcall
out
addr16
ffreep
lods
jmp
inc
movsl
loopne
and
int3
repz
xlat
js
flds
loop
sti
aas
inc
call
mov
or
and
out
jg
orl
mov
xlat
and
out
rorl
icebp
sub
jecxz
xchg
xor
mov
cwtl
pop
out
mov
push
xchg
dec
pop
push
jb
and
cmc
into
jp
sahf
outsb
mov
rcrb
loop
out
leave
pop
outsl
loopne
lea
sbb
sbb
out
jp
cld
loop
iret
in
icebp
adc
mov
mov
adc
push
imul
out
jbe
int
mov
je
cld
adc
cmp
repnz
bound
hlt
push
lahf
loopne
push
cmp
mov
out
mov
and
and
lods
lods
sbb
pop
out
jl
cmc
mov
sub
nop
xor
add
idivl
cmp
xchg
stos
lcall
xchg
add
out
mov
push
mov
add
es
nop
ljmp
or
ss
out
popf
xor
movsb
ret
outsb
cld
out
fs
hlt
add
pop
out
xchg
lcall
add
pop
leave
sub
repnz
rorl
xor
out
dec
xchg
test
xor
mov
xchg
popf
xchg
gs
push
mov
shrl
pop
xor
dec
jae
pop
jge
inc
inc
or
xor
pop
push
aam
lds
lret
std
mov
inc
out
pop
mov
fstps
mov
iret
aam
ja
daa
out
sysexit
clc
sahf
ret
rorl
mov
sub
shrb
nop
out
inc
pop
jmp
xchg
mov
mov
orb
xlat
ret
push
pop
outsb
dec
out
push
sbb
xchg
push
adcb
dec
lods
shr
mov
jg
ret
aam
insl
iret
mov
push
mov
xlat
loope
xorl
mov
shrl
sbbl
jecxz
cmp
out
jecxz
pop
outsb
pop
imul
cmp
xor
js
addl
arpl
pop
push
or
sarb
stos
jmp
inc
outsb
out
sbb
movsl
adc
out
jg
push
cmc
test
scas
add
add
ljmp
cmp
xchg
push
inc
or
in
xor
idivl
js
aas
inc
xchg
out
cmp
xchg
out
std
lret
sub
out
cmpsl
imul
test
inc
jbe
xlat
daa
or
int
clc
rcl
out
push
addr16
out
loopne
js
mov
outsb
lds
jecxz
and
sub
jmp
xor
imulb
cli
out
mov
sbb
jle
stos
mov
icebp
or
imul
push
rcrl
loopne
fisubrl
into
jecxz
xor
sub
out
push
push
loope
je
enter
mov
dec
mov
xchg
out
out
cmp
insb
out
test
out
pop
mov
sbb
push
add
test
out
xchg
negb
stos
loopne
inc
and
aaa
jae
iret
jp
sub
lock
out
pop
pop
mov
test
hlt
adcl
popf
jb
push
repnz
gs
xor
mov
sub
addl
ss
jo
pop
or
mov
pop
jp
jo
and
xchg
push
inc
stos
jne
popa
or
jo
jg
cmp
test
test
push
icebp
xchg
dec
dec
scas
mov
fs
xchg
in
out
xchg
and
jae
push
jo
sbb
pop
in
cmc
cmpsb
xlat
and
xchg
ljmp
mov
test
mov
mov
test
dec
sub
movl
outsl
mov
or
lods
pop
xchg
inc
iret
push
sub
jb
jmp
aas
xor
test
movsb
dec
mov
stos
fisubrs
out
in
pop
aad
stos
push
cmp
out
mov
xor
adc
adc
jl
pop
xor
add
ret
jecxz
sbb
icebp
popa
lahf
sub
out
testl
repz
repnz
cmp
adc
dec
in
mov
out
dec
mov
cmc
lret
out
adc
mov
pop
adc
lret
shlb
outsl
outsb
imul
rcrb
out
test
xor
loopne
lret
stos
movl
shrl
pop
outsl
cmp
jge
pop
push
ljmp
icebp
or
repz
fcmovnbe
shufps
das
sub
out
cli
jmp
outsb
cmp
inc
mov
cmp
jbe
mov
jmp
in
jns
out
mov
pop
sbb
out
les
call
mov
jnp
daa
mov
arpl
cmpsb
adc
ljmp
loopne
or
pop
je
jl
test
mov
fidivs
hlt
pop
inc
cmp
cmp
jge
sub
flds
dec
xchg
mov
and
xchg
out
mov
fidivrl
rcll
out
lahf
pop
out
inc
xor
out
add
jle
je
xchg
out
inc
jmp
sub
aaa
das
insl
cmp
imulb
fnsave
jb
call
dec
inc
cmpsb
mov
push
mov
in
pop
cmp
xor
mov
mov
push
and
lds
pop
out
cmp
stc
daa
jbe
mov
xor
add
jmp
aas
cmpl
out
push
pop
aad
int3
push
fs
dec
dec
js
or
daa
mov
cs
call
cld
xor
pushf
out
push
xor
scas
outsb
jne
sbb
fdivrp
dec
xor
rolb
je
out
push
mov
pxor
adc
mov
cwtl
hlt
inc
cmpsl
out
xchg
mov
sbb
out
xchg
rcl
lds
test
pusha
adc
jae
mov
outsb
out
ljmp
or
in
inc
sbb
fnstcw
daa
pop
dec
push
out
data16
jne
out
lea
adc
rcll
ss
cmp
xchg
mov
icebp
cmc
jle
cmc
cmp
fsts
ja
loop
sub
mov
push
ret
push
and
jo
jp
push
inc
hlt
in
sahf
stos
xor
fldln2
cmp
sbb
xchg
aad
popa
pop
add
aaa
and
nop
testl
jo
shrb
mov
dec
out
scas
sbb
or
icebp
enter
and
inc
out
push
jle
dec
rorl
xchg
mov
out
and
mov
xor
mov
mov
sub
fadds
lahf
xchg
out
push
jmp
fimuls
adc
out
sbbl
jb
mov
inc
pusha
xor
sti
popa
out
test
jl
aam
xchg
cltd
push
call
fiadds
cmp
jg
loope
lea
in
pop
nop
mov
cmp
std
sub
xchg
inc
aam
mov
imul
scas
adc
jo
decb
pop
cmp
js
sub
xor
loopne
fstl
push
pop
push
mov
jo
dec
aad
fsubr
push
cs
add
inc
andl
test
ss
clc
dec
out
inc
mov
sub
out
xchg
xor
mov
sbb
xchg
out
jmp
lock
outsb
hlt
xchg
out
pop
das
ds
mov
subl
add
xor
push
add
or
out
pop
testl
fistpll
cmc
sbb
sub
out
into
pop
jge
jne
iret
loopne
ss
imul
in
jo
sbb
mov
push
pop
out
ret
mov
out
ss
sub
xchg
out
ds
or
jle
mov
and
dec
loope
pop
mov
jecxz
push
xchg
in
loop
ret
push
aad
inc
movsl
mov
xchg
shl
in
xchg
or
in
out
out
mov
xor
adc
sbb
mov
popa
das
in
call
call
movsl
xchg
lock
xor
mov
jo
sub
out
sbb
sub
aad
out
mul
fidivl
sti
pop
hlt
jno
int
inc
out
xchg
mov
dec
sbb
jecxz
and
cmp
divl
xor
jo
not
dec
inc
and
lret
insl
popa
int3
xchg
icebp
cwtl
pop
mov
inc
rcrl
pop
inc
add
dec
loope
sbb
out
jle
shlb
cmp
pushf
lcall
cmpsb
inc
adc
sbb
out
dec
ss
xchg
adc
js
pop
mov
or
mov
lock
push
xchg
cmp
dec
mov
xchg
aam
adc
push
call
popf
out
ja
test
out
xchg
repnz
and
xor
lods
or
pop
mov
in
push
pop
cmpsb
sbb
jnp
sahf
fdivrl
inc
cmc
out
add
out
cli
xchg
jae
push
cmp
lock
cwtl
dec
mov
add
cmp
negl
out
repnz
xchg
and
bound
icebp
mov
sub
xorl
lcall
sbb
jle
fisubrs
test
and
es
push
out
icebp
int3
mov
and
mov
mov
xchg
je
loop
lret
mov
mov
adc
pop
out
out
cmpsb
imul
dec
cmpsl
inc
fstpl
out
rcr
repz
sbb
fdiv
imulb
lods
xlat
mov
xor
mov
jbe
and
insl
mov
push
xchg
out
jo
popa
xor
daa
lret
imul
subb
sbb
out
inc
add
repnz
sub
out
fucom
xor
ss
sbb
inc
dec
in
cmp
mov
leave
mov
dec
iret
jecxz
jmp
push
push
dec
ja
mov
data16
addr16
scas
jne
pop
flds
inc
add
cmp
jmp
jae
add
out
incl
fstpt
sahf
enter
jmp
cli
add
dec
jo
sbb
cmp
cmc
jl
xor
jns
adc
insb
les
nop
aad
hlt
lcall
pop
jle
ds
mov
mov
inc
repnz
and
mov
jo
mov
mov
inc
out
pusha
dec
add
sbb
jb
gs
in
jo
shl
out
pop
pop
push
outsb
push
jl
lahf
shr
repz
out
adc
test
mov
jmp
cmpsl
pop
std
and
add
ret
lea
adc
testl
iret
jb
test
out
push
sub
and
ds
mov
push
pop
lahf
out
push
adc
aas
xor
lret
inc
out
xchg
add
mov
xor
out
xchg
subb
jno
out
iret
dec
jnp
add
dec
push
dec
fs
and
aam
loop
fdivrl
jo
inc
mov
sub
xor
repnz
out
add
cwtl
popa
out
mov
mov
decl
out
and
xor
arpl
sub
inc
mov
out
mov
mov
and
add
sahf
pop
pushf
pop
jb
xor
out
dec
shrb
loopne
pusha
fsubrp
sbb
shr
std
dec
inc
push
out
push
pop
out
pop
mov
into
and
adc
dec
jecxz
rorb
add
lahf
in
jns
movb
pop
lea
lods
stos
ljmp
xor
sub
out
push
mov
sarl
push
pop
mov
jmp
popf
std
push
out
orl
inc
mov
xor
mov
mov
cmpsl
lds
stos
add
sub
outsb
jbe
jnp
adc
xor
xor
cli
and
and
leave
es
pop
dec
jp
cmp
movsb
pop
fbstp
out
mov
cli
rorl
add
dec
repnz
sti
sahf
ret
jo
add
loopne
jle
ljmp
sub
jbe
adc
adc
jb
gs
out
adc
dec
test
xor
lret
shr
outsl
adc
ret
push
gs
out
icebp
and
lods
scas
sbb
out
arpl
hlt
mov
mov
out
xlat
pop
and
iret
xchg
out
pop
cs
jnp
xchg
aad
jo
mov
dec
xchg
ljmp
scas
jno
adc
sbb
cmpsl
xchg
xor
push
das
adc
mov
lret
aaa
xchg
daa
mov
movsl
scas
adc
cli
not
fldcw
jo
out
xchg
push
cmpsl
ror
sub
fs
repnz
call
jne
pop
into
xor
sub
pop
repnz
adc
mov
js
lock
insl
insb
das
jo
out
sub
cmp
xchg
pop
jnp
sub
and
jo
xor
pop
xor
jnp
push
jg
ret
inc
out
push
push
fcomi
xor
sub
push
sbb
decl
out
sbb
gs
cmp
inc
cld
xchg
dec
pop
in
adc
aam
or
out
xor
lret
sub
es
fwait
xor
hlt
stos
fisubl
aas
ja
and
mov
lea
out
inc
sub
mov
jg
xlat
enter
nop
push
mov
repz
mov
jge
jo
adc
call
out
vorps
mov
mov
sbb
push
std
aaa
loop
push
xor
rclb
repnz
js
insb
mov
inc
push
gs
xor
xor
jne
movsb
jnp
js
sbb
aas
in
mov
addr16
xor
outsb
and
adc
push
insl
push
shrl
xor
xor
test
adc
push
out
imul
mov
out
dec
aaa
lods
aam
jbe
xchg
in
push
jo
mov
pop
adc
push
sbb
cmpsb
shr
xor
cmp
xor
addb
add
pop
out
lahf
mov
pop
int3
inc
leave
data16
lcall
pop
iret
push
shrl
aad
sbb
sub
hlt
push
rcrb
and
ret
and
mov
lods
inc
pusha
xchg
adc
ficoms
push
sub
mov
ror
xor
dec
sti
in
js
push
adc
jl
aaa
adc
mov
aad
lods
add
xorps
out
aaa
in
pushf
ds
imul
push
jne
inc
or
fsubr
test
les
mov
test
fcompl
mov
out
lds
lahf
dec
inc
and
xor
mov
jo
es
sbb
jecxz
pop
sub
inc
jecxz
out
int
pop
sarl
cmp
jmp
imul
mov
out
leave
movsl
mov
shll
add
test
test
jo
jne
lock
jne
fadds
in
movsl
sub
enter
out
aam
or
fdivr
cwtl
xor
fsubp
mov
js
jbe
xchg
dec
repnz
mov
push
jg
mov
inc
and
jmp
jl
ret
adc
pop
out
mov
mov
add
insl
imul
das
pop
int3
loopne
out
dec
loopne
jg
cmp
pop
add
in
fstpt
inc
clc
ja
out
fdivrs
xor
fs
xchg
cmpsl
loop
test
adc
out
popa
inc
test
mov
out
daa
mov
pop
mov
arpl
outsl
ljmp
lds
jge
dec
cwtl
push
mov
inc
jp
xchg
in
xor
insl
leave
push
adc
mov
push
inc
push
mov
xchg
outsb
mull
in
roll
or
stos
rcrl
add
popa
movsb
shll
mov
mov
mov
pop
jo
data16
mov
dec
stos
adc
cli
inc
out
lret
dec
pop
sti
gs
imul
push
stos
mov
ret
pop
in
jnp
clc
out
pop
xchg
mov
sti
cmp
push
cmp
cmpsb
xchg
je
rcr
inc
jmp
mov
or
add
mov
lods
mov
popf
out
pop
idivl
inc
jbe
adc
leave
dec
sub
outsb
orb
out
nop
test
mov
push
or
mov
out
xor
mov
shll
cmpsb
xchg
pop
hlt
dec
jmp
out
dec
dec
xor
out
adc
lcall
out
push
js
out
fstps
xchg
iret
jae
jo
pop
or
jo
fisubl
int3
out
mov
cmpsb
add
in
and
shll
out
out
testb
mov
std
aas
mov
out
fsubs
es
leave
lret
sub
arpl
out
pop
add
mov
out
rcrl
sbb
push
scas
lods
out
jae
adc
cmpsl
out
mov
pop
lods
lahf
out
cwtl
addl
push
push
aam
cmp
mov
sbb
lods
sti
or
mov
xor
inc
xor
rorb
jecxz
lahf
push
sbb
jnp
cmp
add
pop
add
mov
ss
add
movsl
push
fisubrl
into
fs
add
push
clc
and
shl
xorl
adc
test
insl
pop
push
imul
fsubr
sbb
sub
cld
test
sbb
pop
daa
out
hlt
pop
sbb
nop
loop
lock
fsubr
lods
and
xor
pop
or
out
in
push
pop
out
mov
xchg
jmp
out
lret
jbe
fsubs
jnp
mov
pushl
insl
jmp
das
xor
sub
mov
jp
mov
and
mov
jge
xchg
xchg
xchg
ret
xchg
mov
or
pop
add
xor
in
rcr
inc
adc
xchg
adc
adc
xchg
xor
lods
outsl
ret
out
sahf
cltd
popf
inc
push
andb
dec
and
sti
xchg
xchg
mov
out
push
jnp
add
adc
mov
push
out
call
adc
out
mov
in
adc
insb
jp
loope
outsb
incl
jmp
out
pop
push
pusha
out
adc
or
sub
mov
and
nop
push
jmp
mov
jo
and
or
adc
mov
ja
scas
inc
mov
lret
popa
adcl
out
test
add
xchg
out
movsl
jg
jb
imul
push
iret
cwtl
outsb
jno
adc
cmp
addr16
dec
shrl
mov
jns
pop
popf
les
out
and
jle
test
gs
sub
loope
icebp
add
pop
fidivrs
push
and
popf
nop
mov
in
push
ficoms
ret
mov
loopne
shl
pop
data16
test
cmpsl
add
cmp
in
inc
fldcw
cmp
cmp
aas
xor
data16
cmp
sub
and
jae
pop
xor
dec
repnz
mov
jne
inc
fwait
add
adc
out
mov
sub
mov
or
out
fstps
call
out
xorl
and
cmp
xchg
test
out
or
add
ljmp
push
loope
hlt
xor
cmp
adc
jbe
xor
pop
cmp
mov
out
inc
mov
repz
in
inc
push
imul
lcall
push
add
scas
mov
xor
ja
stos
add
shlb
jl
shr
imul
add
pop
outsb
or
or
popf
aam
ss
mov
push
pop
lret
jmp
push
dec
arpl
mov
jmp
sub
movsl
xchg
out
imul
push
divl
jae
pop
inc
mov
mov
fiadds
mov
jns
mov
subl
mov
repnz
into
jecxz
clc
dec
or
out
daa
int
cmp
xchg
fwait
pop
out
pop
cli
mov
xchg
and
out
push
dec
dec
arpl
out
mov
aad
lret
stos
aaa
enter
push
cmpsl
dec
and
cmpsb
call
rolb
test
out
mov
dec
sahf
pop
out
jo
mov
push
jmp
out
fistl
adc
sbb
in
out
jp
lods
scas
test
mov
out
ljmp
cmpsl
mov
add
decl
ret
out
out
mov
aaa
push
hlt
sbbl
xor
cli
push
mov
out
shlb
addr16
jmp
sahf
pop
sub
inc
pop
out
jo
ss
push
orb
inc
insl
jo
add
mov
pop
add
xchg
xor
adc
pop
leave
movl
shrb
stos
add
negl
mov
pop
loope
or
jmp
add
mov
scas
movl
in
rolb
outsl
addb
arpl
hlt
in
adc
call
jge
pop
pop
jb
push
pusha
mov
lock
xchg
mov
inc
popf
aas
mov
mov
push
ret
repnz
decb
sti
mov
std
subl
sub
push
out
jb
dec
adc
xlat
and
jo
dec
pop
lret
inc
jns
divl
adc
out
int
jbe
insl
clc
dec
insb
add
or
mov
and
mov
pop
lcall
or
dec
xchg
into
sahf
mov
mov
out
xchg
fsubr
int3
push
pop
aad
dec
movsb
push
out
cli
jge
scas
sub
and
rcll
cld
adc
cmc
repz
repnz
stos
and
negl
scas
jb
mov
mov
pop
out
pop
sar
inc
iret
jns
out
and
mov
fndisi(8087
xor
mov
sbb
sti
shrl
cmp
orl
sbb
bound
insb
and
jb
loope
shr
cmp
fnstsw
xchg
adc
std
add
mov
ret
inc
jecxz
and
call
scas
xchg
cmp
mov
or
mov
jo
or
testl
js
out
cmp
jae
and
xor
outsl
fbstp
sub
xchg
out
jnp
xor
cltd
pusha
xor
fwait
inc
bound
das
and
out
mov
mov
inc
and
out
pop
xchg
bound
xchg
dec
inc
mull
add
test
adc
rolb
inc
cmp
imul
add
jno
nop
es
push
icebp
jecxz
add
xchg
jge
inc
jle,pn
xor
add
push
add
pop
mov
dec
mov
es
out
mov
mov
mov
jl
sbb
mov
clc
inc
pop
adc
js
in
cmp
lret
push
inc
mov
mov
cmp
movsb
mov
or
outsb
mov
mov
movsl
shll
sahf
pop
and
arpl
jno
lret
push
push
xchg
adc
xor
out
in
add
mov
idivl
add
jno
or
mov
repz
or
ret
sub
call
and
jo
lret
jle
adc
hlt
fwait
out
lock
and
jmp
in
out
inc
xchg
jecxz
dec
data16
icebp
jo
jge
adcb
ret
jmp
inc
leave
or
jae
out
bound
nop
popa
stos
aad
shll
cmc
cmp
mov
push
mov
loop
gs
mov
mov
push
bound
rolb
repnz
daa
xchg
outsl
fmuls
out
jbe
sub
fwait
and
test
loope
or
pusha
out
sub
mov
pop
pop
inc
andb
aam
sub
out
out
insl
dec
aas
lret
push
out
jnp
mov
jo
push
idiv
pusha
call
shll
mul
rorb
jl
fistpl
mov
sbb
xlat
in
jne
ficoms
and
iret
outsl
shll
fldl
ds
loopne
imul
out
lods
js
dec
mov
out
testb
jno
out
xor
mov
out
lods
dec
cmpsl
mov
and
outsb
mov
loope
cmp
je
mov
ljmp
into
push
sbb
mov
out
dec
jnp
inc
and
or
int
mov
setns
loopne
and
aam
out
fsub
fwait
sbb
mov
push
out
and
sub
jo
inc
fildl
cli
hlt
adc
imul
mov
cmpsl
xor
xchg
mov
aaa
repz
int3
fucomp
sub
ret
out
sbb
loope
inc
imul
dec
clc
mov
test
loopne
decb
sub
divb
cltd
mov
aad
pusha
pop
fsubr
inc
or
sbb
mov
cmp
sbb
mov
jae
jns
jb
lods
out
mov
mov
and
hlt
mov
ret
pop
sahf
mul
cmc
push
aad
dec
pop
xorl
call
sarb
test
or
add
dec
add
mov
int
out
sti
out
xchg
cmp
cmpsb
push
jbe
sarl
jne
arpl
out
int
imul
jbe
pop
mov
cli
mov
mov
out
mov
jl
push
hlt
mov
mov
jo
nop
ret
es
inc
dec
out
mov
cmp
push
push
ss
mov
test
int3
out
daa
xchg
popf
jge
nop
ret
push
imul
push
fs
sub
jo
xchg
cmp
shl
jns
xlat
inc
or
out
mov
je
push
mov
dec
iret
cmp
inc
mov
inc
mov
shrb
cwtl
data16
xlat
mov
or
jge
fcompl
out
sbb
mov
mov
cli
or
dec
out
test
imul
fwait
divb
testl
out
xchg
push
dec
js
pop
xor
out
sub
xchg
cmc
mov
out
shr
pushf
push
inc
mov
xchg
mov
push
arpl
dec
mov
add
aam
loopne
cmp
mov
sub
je
mov
inc
pop
push
pop
daa
icebp
jecxz
mov
out
jg
fisubl
jo
fidivrs
call
xor
popf
adc
mov
out
adc
jecxz
sub
int
cmpsl
dec
aad
mov
pop
add
jns
clc
out
push
aad
push
push
movsb
jg
clc
lods
push
push
cmc
mov
and
icebp
fldt
repnz
jecxz
jo
adc
out
pop
xchg
nop
add
in
jecxz
push
shr
mov
push
sti
lcall
mov
ret
xorl
mov
ds
aas
int3
cs
sub
sub
out
out
jno
inc
pop
mov
divb
lahf
cmp
fsubr
adc
sbb
jle
mov
jmp
sub
push
out
test
pusha
add
mov
test
pop
xchg
xor
hlt
movsl
dec
mov
loopew
push
call
out
jbe
add
jg
je
out
sub
pop
out
daa
outsl
aam
push
dec
dec
push
out
sbb
jno
xor
adc
out
es
push
test
jecxz
jae
push
std
test
mov
lret
hlt
cltd
adcb
out
stc
mov
sbb
test
or
push
out
cld
adc
add
dec
fadds
jmp
sar
xchg
inc
sub
jp
jne
jg
add
mov
mov
or
in
inc
in
mov
push
ret
xchg
test
lods
out
ss
add
out
adcb
inc
jo
cli
pop
add
xchg
pushf
xor
call
iret
shr
mov
in
mov
test
dec
inc
fwait
iret
out
inc
loope
mov
pop
lods
out
jp
cmp
dec
movsb
mov
or
push
mov
mov
xchg
scas
mov
fs
mov
dec
inc
popf
sub
mov
out
mov
push
outsb
dec
mulb
fldcw
out
cmc
lahf
adc
iret
movsl
out
mov
in
test
loopne
sub
hlt
jp
inc
jnp
adc
in
nop
and
xor
cli
sahf
jns
idivl
push
adc
mov
mov
xchg
mov
call
and
pop
push
ljmp
out
shll
push
add
movsl
inc
adc
push
popa
out
idivl
pop
mov
and
hlt
push
out
or
sarl
es
xor
jg
cs
imul
pop
cltd
mov
out
fldenv
sub
movd
ss
inc
into
aam
pop
jae
push
pop
cmp
scas
shrb
dec
out
add
jns
pop
out
adc
enter
xor
jbe
xchg
out
and
pusha
dec
out
aad
repz
push
mov
imull
mov
out
sahf
adc
cmp
out
ja
imul
shr
and
pusha
inc
rorb
push
sub
aas
out
fstpt
jbe
rorl
inc
iret
pxor
mov
pop
push
sub
lods
out
fwait
cli
jne
pop
sbb
mov
xor
xchg
jp
cmp
out
repnz
pop
fld
scas
push
cmp
or
sub
test
xchg
std
shl
jno
mov
jmp
sub
cwtl
inc
aad
xchg
xor
out
push
cmp
xor
push
pop
hlt
xchg
xchg
out
fwait
jle
mov
out
cwtl
jg
add
out
push
pop
jmp
hlt
shll
idivl
mov
pusha
mov
xlat
push
pop
push
cltd
in
je
mov
and
xchg
adc
or
jmp
stos
leave
inc
jb
ss
out
mov
mov
out
jmp
stos
loope
or
inc
adc
pop
test
push
outsb
scas
out
and
orl
arpl
out
ret
in
sbb
scas
add
dec
push
inc
sar
arpl
cmp
lret
xchg
push
fldt
ficompl
sarl
mov
dec
stc
xlat
xor
dec
cs
dec
jnp
loopne
shlb
mov
inc
out
xor
insl
inc
jne
sahf
push
arpl
xor
ljmp
add
leave
adc
mov
pusha
pop
loopne
out
fdivp
notl
ja
sti
mov
iret
icebp
inc
cmp
xlat
sbb
inc
sbb
pop
add
addr16
mov
sbb
cmpb
cmp
arpl
leave
out
stos
pop
cli
test
add
jno
xchg
ret
jmp
sub
out
mov
inc
cwtl
sbb
xchg
in
add
or
sti
out
pop
fidivl
out
rdtsc
sbb
out
adc
loope
out
lds
rol
inc
sub
xor
stc
add
mov
in
xor
sbb
lods
jb
fimuls
xchg
jmp
push
mov
adc
roll
mov
outsl
jo
insb
ja
push
jmp
out
pusha
xchg
xor
pop
sbb
cmc
stos
cltd
jp
push
jecxz
jle
repnz
or
mov
pop
pop
out
push
xlat
inc
and
enter
cmc
adc
jno
sahf
xchg
sub
dec
xchg
insb
mov
jmp
adc
fadd
add
inc
push
insl
dec
out
xor
jg
cmp
mov
movsl
dec
mov
mov
out
je
aaa
pop
pop
test
jl
mov
or
mov
fistps
cmp
pop
scas
sub
cmc
push
mov
std
dec
push
arpl
cmp
lret
fsubrl
into
cltd
mov
ljmp
out
sub
lock
pop
testb
push
sub
pop
je
inc
mov
fcmovb
mov
in
fnstenv
call
mov
shr
andb
popl
les
into
jno
jge
mov
pop
shrb
add
call
shll
or
cmc
jge
popf
out
daa
stc
cmpsl
dec
leave
je
mov
sub
addr16
lahf
test
stos
es
pop
push
mov
out
jmp
subb
hlt
xchg
loope
inc
shr
cmpsb
cmp
sar
adcb
sub
xchg
out
jbe
das
bound
cmc
test
loopne
mov
test
push
mov
imul
push
int3
inc
jae
or
out
or
sub
lds
inc
mov
dec
inc
out
jmp
movsl
jle
imul
adc
xor
pop
xor
addr16
lock
add
out
xor
mov
imul
icebp
push
data16
out
out
inc
pop
adc
xchg
out
movsb
xchg
sahf
sub
out
stos
cwtl
test
jo
loop
clc
aas
in
push
insl
int3
mov
out
mov
pushf
rclb
loop
lret
adc
sub
jp
mov
popa
arpl
fidivl
aaa
xchg
push
lahf
test
imul
jl
out
roll
sbb
out
pop
in
xchg
push
scas
shlb
mov
xor
pop
cmp
les
fcmovb
inc
decl
scas
jns
out
nop
lods
mov
pushf
mov
inc
push
out
mov
mov
call
add
xor
cltd
lea
sub
or
out
add
loopne
rcll
adc
jne
repnz
sub
jl
inc
repz
imul
xor
loop
sub
mov
sub
and
lock
push
aas
mov
loop
out
bound
mov
mov
int
or
mov
inc
xor
xor
jle
and
fwait
stos
cli
sbb
bound
push
rclb
scas
ja
int3
sahf
out
pop
out
inc
rolb
ljmp
into
arpl
pop
lret
jp
int
jo
mov
aaa
mov
enter
mov
lret
out
pop
jge
daa
mov
clc
loope
in
adc
inc
cmpsl
jae
faddl
leave
cltd
outsb
xor
out
lahf
inc
pcmpeqd
in
push
jo
cmp
mov
mov
ret
jl
and
or
out
cmpsb
push
mov
mov
mov
es
outsl
xchg
sbb
xchg
ret
sbb
xor
sbb
jns
out
mov
into
clc
jle
call
xor
mov
mov
pop
out
adc
stos
repz
xor
jmp
xor
int3
aaa
inc
fimuls
jg
push
dec
add
xor
out
pushf
iret
in
jg
in
out
test
rorb
mov
repnz
call
sti
ret
jmp
jl
ljmp
dec
xchg
mov
push
scas
ret
mov
and
ds
mov
and
add
movsb
mov
sub
mov
inc
imull
bound
add
add
xchg
out
xchg
pushf
pop
outsb
icebp
add
es
test
jge
inc
int3
out
cmp
sbb
mov
dec
out
mov
in
cmpsb
ss
mov
push
pop
inc
push
xor
mov
dec
insb
aaa
push
pop
dec
and
test
loope
push
xor
in
divb
adc
xadd
inc
push
out
or
js
out
fs
outsb
mov
repnz
mov
out
jle
ret
outsl
mulb
into
xchg
sti
lret
jb
hlt
cmpsl
scas
lret
xor
outsl
fists
xchg
jo
out
mov
and
out
mov
repz
popa
int3
cmc
pusha
loop
jbe
sub
imul
ss
xchg
cltd
pusha
data16
dec
and
inc
adc
sti
aam
mov
jne
sbb
subl
adc
ja
push
int3
jge
sti
mov
fcmovnb
cli
mov
in
inc
inc
js
sub
jle
cltd
test
addr16
and
sub
pop
mov
push
pop
cmc
push
in
xchg
push
mov
cmpsb
mov
out
adc
ja
mov
xor
mov
xlat
jno
push
xchg
leave
mov
sub
cmc
rorl
test
ret
fdivs
lock
xor
js
jb
out
loop
ror
popf
sub
ficomps
sbb
xchg
add
ret
mov
pop
xchg
cs
pop
and
pop
xor
and
fsubr
mov
and
adc
inc
addl
shlb
add
sub
out
es
mov
fsubp
cmpsb
mov
out
add
into
dec
xorb
xchg
stos
out
xor
jg
shrb
shr
push
mov
adc
xor
sbb
cmp
add
addr16
fnop
enter
scas
gs
or
jle
cmpsb
xor
pushf
lock
mov
cwtl
fwait
iret
mov
adcl
ret
adc
cmp
out
sahf
and
test
outsb
push
cmc
cmp
out
cli
cld
test
sub
stos
sbb
adc
lahf
lret
test
out
cltd
mov
sbb
paddsw
and
test
data16
jmp
lea
push
repz
popa
jno
xlat
fstpl
mov
push
movsl
add
sti
inc
mov
xchg
fcmovnu
sbb
pop
insb
xchg
into
outsb
xchg
cmpsl
movsl
out
andl
test
insl
das
mov
out
jo
bound
pop
test
ljmp
mov
fnstenv
push
pop
add
or
cwtl
xor
mov
roll
or
xchg
dec
inc
and
cmc
xor
sub
jmp
or
and
jns
jl
idivl
enter
xorb
sbb
jmp
push
add
lahf
jmp
pusha
div
loop
jmp
push
aas
push
out
and
xchg
imul
pop
loopne
xchg
mov
mull
mov
sbb
int3
out
and
cld
std
dec
aad
mov
dec
inc
jmp
pop
in
sub
push
movsl
dec
out
push
stos
inc
mov
out
clc
sub
inc
fmul
aad
out
out
es
cmpsw
add
sbb
pop
sub
jg
aas
vpaddq
rol
and
jecxz
or
jno
cltd
inc
pop
int
xchg
mov
out
pop
jb
inc
adc
push
jo
mov
fmuls
pushf
out
adcb
cmc
test
jb
jne
daa
mov
js
lds
and
test
js
std
cli
hlt
icebp
sub
mov
out
sub
lret
fsub
sarb
xlat
shll
push
jb
cwtl
ds
icebp
push
into
add
popf
xor
and
shll
mov
out
adc
cmp
jb
fwait
pop
push
popa
push
sub
cmp
jmp
shr
dec
or
mov
xchg
pop
and
mov
leave
fnstenv
mull
out
push
cwtl
mov
ret
lret
dec
xor
out
icebp
rcrb
out
mov
sub
mov
xchg
pop
adc
test
inc
dec
sbb
lea
adc
popf
push
jno
jmp
loopne
enter
jnp
xchg
dec
add
xchg
outsb
mov
pop
adc
leave
mov
push
adc
mov
dec
fucomi
jmp
out
push
out
or
hlt
jnp
test
push
push
and
adc
cmp
or
jae
ss
xchg
das
std
push
out
rcll
shr
in
fwait
sub
mov
xchg
jo
enter
jns
shll
adc
jno
cli
loope
adc
pop
js
testb
pop
ja
scas
in
out
out
out
inc
xor
daa
cmc
xchg
insb
hlt
inc
cmp
out
jo
and
mov
iret
out
aaa
int
repz
dec
repnz
cmp
xchg
out
dec
outsl
out
faddl
mov
xor
notl
out
jo
mov
xorb
adc
arpl
roll
popa
or
mov
les
cmc
lock
insl
adc
lds
aas
lret
jns
out
frstor
dec
aaa
lock
lcall
stos
and
notl
dec
sub
test
dec
sbb
insl
push
adc
pxor
or
out
push
leave
adc
test
shr
cmp
lret
xchg
push
das
inc
shl
jb
fldt
pop
lahf
movsb
xchg
adc
arpl
clc
jle
mov
lret
push
lea
out
outsl
pop
iret
imul
movsb
mov
adc
out
push
std
or
cmc
pop
test
push
push
sub
out
test
and
push
leave
xor
mov
or
jl
pop
out
loop
lock
xchg
sahf
test
out
fidivs
jnp
xor
mov
add
test
imul
loop
fsubr
add
imull
dec
mov
pop
ja
add
push
mov
jge
out
cwtl
or
push
add
out
rcll
jmp
lcall
pop
mov
and
sub
out
sbb
cmpsb
xchg
xor
push
out
mov
iret
outsl
pop
mov
dec
inc
out
leave
jb
jno
js
out
mov
out
hlt
adc
jp
out
push
stos
lahf
cmp
mov
pop
out
dec
sahf
pop
inc
scas
jb
out
js
pop
add
out
lods
dec
add
stos
lret
and
out
rorl
pop
and
xor
mov
ret
les
jmp
out
push
xor
js
jp
xchg
popa
int3
test
push
aad
mov
fsubs
add
out
sahf
pop
out
adc
xchg
out
pop
mov
jae
add
stos
push
push
out
dec
pushf
ss
int3
xchg
mov
mov
repnz
pop
test
inc
dec
inc
in
adc
mov
int3
adc
out
pop
or
enter
add
push
mov
pop
daa
xchg
jnp
mov
out
inc
xchg
xor
aas
out
xchg
xor
shrd
xor
mov
out
jg
out
push
xlat
add
negb
mov
lahf
add
adc
xor
test
movsb
mov
lcall
ljmp
cmp
insb
movsb
jge
out
stos
inc
cmp
dec
xchg
mov
out
lahf
pop
mov
pop
and
push
and
sub
out
push
xor
outsl
dec
xchg
fucomi
pop
mov
rcrl
dec
ss
or
push
lcall
jne
and
fildll
cmpsb
je
outsl
out
pop
cmp
out
roll
sti
lock
cs
out
hlt
sbb
movl
inc
mov
jg
clc
fsubp
cmp
push
mov
push
ss
mov
cmc
shrl
loopne
inc
lock
mov
out
fmuls
mov
mov
iret
rcr
notb
dec
jmp
out
repnz
adc
fcomi
pop
push
testl
add
sbb
std
out
push
or
or
xchg
mov
out
xchg
mov
cmp
out
cmp
mov
lahf
jo
out
dec
sub
mov
sbb
xchg
xor
and
std
lods
mov
xchg
cmp
adc
int3
xor
xor
sub
mov
out
movsl
push
mov
and
fstpl
cwtl
mov
mov
jge
adc
bnd
push
jp
pusha
pushf
fiaddl
mov
dec
ljmp
lods
sahf
arpl
sub
add
iret
sbb
push
push
ret
sub
pusha
mov
mov
outsl
aad
pop
push
adc
call
push
xchg
jmp
and
ja
jp
mov
xchg
fdivrs
nop
dec
mov
out
sub
mov
xor
or
popf
into
jne
loope
mov
jle
scas
sbb
push
add
pop
inc
out
jno
cmp
aam
aaa
mov
repz
push
sbb
imul
ljmp
jnp
dec
mov
dec
ret
aaa
dec
xor
mov
rcl
daa
push
push
pop
jbe
out
and
flds
out
cmp
cmp
inc
jl
cmp
adc
in
jno
aad
notb
jmp
out
or
pop
decl
jo
push
mov
add
out
jo
and
pop
dec
xchg
out
movsbl
dec
adc
mov
sbb
imull
testb
xor
cltd
mov
pop
push
xor
lods
in
mul
sbb
out
pusha
aad
stos
or
repz
repnz
jecxz
inc
pushf
out
dec
bound
sub
push
test
jne
inc
shll
lock
out
mov
cs
jb
test
imul
mov
cmc
mov
mov
out
jl
shl
out
xor
mov
mov
pop
or
lahf
lods
scas
filds
xor
ror
and
sti
mov
push
sub
mov
adc
cmpsl
out
mov
pop
push
jmp
jge
out
ljmp
or
fwait
imull
cmc
scas
std
mov
mov
xor
cmp
es
out
ds
je
mov
adc
push
repnz
pop
mov
xor
inc
mov
dec
xor
negb
add
rclb
jecxz
pop
mov
sbb
or
jo
cltd
aas
lahf
repz
js
push
je
sub
sub
inc
out
lcall
lods
add
and
and
arpl
pop
adc
dec
mov
test
jnp
lcall
filds
fstl
mov
lods
das
dec
gs
adc
test
insl
fnstenv
cmpsl
test
loopne
out
mov
scas
add
xor
cmp
push
sub
inc
sti
sub
pop
ja
or
cmp
data16
xor
or
loopne
cmp
push
xchg
add
cmp
mov
mov
fistl
inc
cmpsb
cmc
mov
lret
out
sub
in
push
lods
sbb
add
jae
iret
mov
out
jbe
mov
incl
pop
push
insb
dec
loope
ret
lods
add
out
negl
sbb
xor
fwait
out
test
out
decb
lret
dec
cmp
xchg
add
mov
xchg
jp
dec
int3
pop
in
test
out
mov
pop
fwait
das
out
pop
aad
inc
lea
cmp
in
out
sbb
fdivl
jbe
ljmp
xor
out
outsl
xchg
hlt
out
in
aad
cmp
jae
sbb
js
pop
rcrb
sub
insl
sbb
adc
mov
movsl
outsl
int3
lcall
sub
insl
inc
sbb
das
repnz
push
ret
jmp
jmp
loop
les
adc
lds
out
jg
or
xor
imul
push
xor
js
push
stc
outsl
push
push
cltd
std
rcll
in
mov
xchg
in
sub
out
pusha
and
sti
lds
test
sub
out
sahf
push
in
and
dec
xchg
out
push
mov
adc
out
shl
ror
xor
out
stos
imul
dec
out
hlt
sub
xchg
lea
jno
out
mov
loopne
pop
repnz
sub
mov
icebp
inc
mov
call
pusha
movsb
adc
int3
inc
loopne
sbb
xor
test
pop
mov
push
cmp
xchg
bound
out
inc
pop
dec
pusha
fwait
xor
mov
sahf
jb
add
xchg
repz
ret
out
sbb
sbb
xor
jne
push
or
fs
mov
divl
fsubs
stos
cmpsb
sbb
cwtl
cli
push
adc
sub
aam
inc
cltd
mov
out
cmpsl
imul
test
sbb
in
sub
hlt
out
in
add
mov
cmp
cmpsb
fidivs
xlat
out
xchg
push
lcall
nop
or
push
ret
jle
pushf
inc
cmp
push
insb
inc
cmp
jmp
insb
rclb
out
mov
hlt
or
out
stc
adc
mov
dec
sbb
add
mov
shl
popf
lock
out
or
call
out
pop
adcl
out
cs
mull
mov
sub
ljmp
imul
inc
mov
sarl
xor
push
rolb
cli
inc
cmp
outsl
dec
and
jmp
add
xor
stc
scas
ljmp
push
fidivrl
add
movsl
and
jae
mov
out
mov
jle
repnz
cli
notl
scas
add
jp
push
mov
xchg
out
rclb
xlat
ja
jae
mov
mov
daa
notl
jns
call
xchg
out
and
mov
mov
pushf
xor
sahf
push
mov
push
mov
movsl
xor
cmp
add
push
call
jae
mov
out
jl
aad
jae
mov
test
lods
iret
ret
cmpsl
int
fdivrs
jns
out
jp
dec
sbb
pop
rclb
push
ljmp
out
cmpl
pop
sbb
push
add
jmp
push
sub
jp
lods
repnz
and
jmp
cmp
outsb
xorl
inc
imul
inc
rclb
mov
js
jno
xchg
push
loop
add
out
repz
and
in
nop
pushf
ja
adc
out
imul
jl
add
inc
jns
rcrl
sub
out
movsl
ret
jl
cmpsb
adc
fs
subb
test
subl
cltd
jo
mov
mov
sub
hlt
shl
out
xchg
dec
aam
cmc
outsl
ljmp
pusha
mov
js
dec
fsubrs
repnz
clc
or
jmp
or
fldcw
shlb
stc
push
in
cli
push
jmp
mov
mov
adc
les
rorl
outsb
out
out
push
push
sub
lahf
jo
ret
out
fdiv
lea
mov
cmp
lahf
xor
outsl
sub
jle
mov
jns
out
les
inc
fwait
sti
mov
das
pusha
fcoms
out
dec
mov
mov
xor
dec
jle
push
in
in
and
testb
into
pop
push
fildll
mov
xor
out
lret
sub
hlt
cs
mov
ret
pop
sti
out
pusha
and
ja
mov
scas
out
or
pop
test
out
mov
cs
jns
aaa
push
push
or
adc
rcrb
sbb
aad
mul
adc
inc
mov
pushf
ss
dec
nop
out
lea
movsl
loop
sub
mov
jle
xor
inc
out
jo
cmp
imul
mov
mov
out
js
dec
or
ljmp
cmp
aad
aas
hlt
out
ficoml
jne
cwtl
cmpsl
fwait
and
push
test
idiv
icebp
push
mov
jecxz
ja
rcll
sbb
pop
aam
xor
test
scas
mov
push
clc
out
xor
fcmovnb
jmp
imul
pop
xchg
out
jmp
in
dec
into
push
mov
mov
cmpsb
in
out
inc
mull
dec
aam
jge
mov
arpl
dec
into
outsb
cmpsb
in
out
mov
dec
rolb
jp
xchg
add
ficoms
js
sbb
xor
mov
enter
mov
push
and
out
mov
addr16
pop
out
push
inc
je
hlt
outsb
add
out
mov
mov
mov
jb
fisttpl
xor
jmp
inc
out
enter
adc
sbb
imul
or
jge
aad
dec
mov
dec
out
repnz
hlt
out
inc
ljmp
out
xor
fdivl
or
dec
mov
mov
mov
xchg
in
jo
repnz
loopne
cs
insl
bound
aad
sub
inc
cmpsl
cmp
adc
addb
sub
push
enter
stc
testl
push
stos
xor
sub
push
cmpsl
aad
mov
push
dec
test
xor
ja
xchg
enter
das
lahf
into
cmpsl
pop
shll
mull
outsb
pushf
dec
push
mov
ss
pusha
fists
aas
adcl
ljmp
jecxz
push
jne
popf
insb
cmp
and
ret
or
inc
xchg
andb
cld
adc
push
push
out
add
pop
and
popf
ja
fsub
out
dec
outsl
out
mov
push
or
out
cmp
jg
xchg
jnp
push
out
sbb
int3
xchg
out
pop
jo
or
clc
repnz
in
in
rorl
pop
das
inc
inc
mov
add
ljmp
adc
out
out
test
lret
out
and
mov
imul
mov
mul
lret
pop
ja
xor
daa
mov
and
ss
push
loope
xchg
nop
sub
negl
repnz
push
outsb
out
ja
lret
out
shl
mov
nop
or
cmp
pop
shlb
or
pop
lea
add
add
test
cld
xchg
pop
testl
dec
cmc
int
outsb
stc
cmc
pop
out
sub
mov
jns
jo
fsts
subl
out
push
mov
ret
mov
pop
data16
xor
cmc
jl
fsubs
pop
xorb
lods
mov
pop
rcrb
and
mov
out
stos
stos
adcl
mov
adc
cmp
enter
cmc
mov
leave
pop
mov
testl
call
je
jmp
push
jno
inc
out
mov
jae
test
push
std
ret
sbb
add
sti
repz
sub
orb
xlat
jmp
aas
push
in
cltd
xor
push
imul
adc
push
mov
divb
jecxz
or
push
sub
pop
mov
movsl
out
repnz
pop
cmc
test
push
pop
andb
pop
lcall
mov
insb
out
dec
push
add
out
cli
jbe
fnstenv
xor
cmpl
add
push
lods
or
xchg
mov
out
scas
aad
cmpsb
dec
lock
out
arpl
mov
push
cmc
movsb
and
mov
ljmp
mov
shlb
add
loope
mov
test
adc
scas
cmp
jecxz
xchg
hlt
add
mov
enter
stos
lock
cmp
imul
call
int3
mov
sbb
repnz
out
mov
mov
out
test
xor
adc
xchg
add
xchg
in
iret
sahf
out
jmp
inc
out
dec
rol
aas
cmpb
bound
or
out
lods
xchg
mov
out
stos
dec
movsb
into
fists
call
mov
push
push
jecxz
jg
jo
sbb
add
adc
mov
out
movsb
rcrb
out
cmp
push
or
andb
adc
fs
call
out
inc
inc
xchg
push
insb
test
mov
push
repnz
inc
dec
cmp
jo
repnz
rep
push
neg
sub
add
scas
iret
pop
mov
test
js
xor
xchg
push
or
push
addr16
adc
xchg
jmp
das
inc
subl
mov
xchg
out
pop
repnz
mov
cmpsb
pop
movb
mov
push
and
jp
mov
xchg
std
pop
xor
insb
imul
jo
mov
jns
xchg
std
out
out
mov
fildl
jno,pt
adc
jle
pop
loop
jmp
out
lods
mov
sub
in
or
pop
jl
sti
and
shl
jg
and
jae
pop
ficompl
out
stos
mov
xchg
shlb
inc
pop
mov
add
addl
or
mov
out
sub
cmp
xchg
sub
sbb
fcmovne
mov
js
pop
inc
and
out
add
sub
sub
push
fstl
rolb
arpl
fmull
sbb
out
into
mov
shlb
and
add
pusha
call
lea
mov
jle
stos
aad
xor
addr16
and
out
jbe
mov
inc
lret
cmp
cmp
mov
ret
mov
or
mov
jecxz
xlat
icebp
lods
push
in
outsb
dec
add
subps
loopne
sub
shlb
lret
mov
out
mov
pop
cmpsl
sbb
clc
je
xchg
and
movsl
xor
xor
cltd
in
shrb
sbb
ljmp
dec
push
add
fisubl
clc
stc
jecxz
pop
add
cs
jae
inc
lods
mov
lock
shlb
jo
repz
mov
in
xchg
aaa
out
out
fiadds
js
fisttpll
ret
jns
mull
lea
push
vpxor
scas
sub
mov
out
test
lea
out
adc
into
dec
aaa
mov
push
cmp
inc
jns
hlt
mov
or
fldcw
cld
mov
mov
fwait
xchg
nop
dec
loopne
xchg
out
dec
in
js
shrl
mov
lret
jb
stos
lea
inc
fwait
adc
popf
aaa
outsb
add
out
in
imul
dec
pusha
out
aam
jbe
cmpsl
out
mov
pop
inc
push
mov
dec
pop
xor
jno
mov
aas
jbe
xchg
dec
fistps
adc
mov
testl
nop
xorb
dec
shll
mov
aad
jl
adc
cmp
ret
shrb
mov
push
repz
bound
jmp
pop
xor
adc
es
jecxz
inc
or
dec
aas
out
jecxz
xlat
add
mov
pop
jns
fstl
out
rcl
clc
mov
out
out
sbb
xor
rcll
mov
test
repnz
jge
push
jmp
jecxz
daa
fnsave
das
aas
divb
add
sbbb
out
adc
sbb
std
sub
out
lock
icebp
jecxz
ret
xor
fisttps
lds
outsb
inc
test
out
mov
pop
jno
in
xchg
push
movsl
xchg
stos
mov
repz
cmpsb
mov
ljmp
mov
adc
inc
loopne
test
out
in
xchg
cmp
xor
je
rorl
icebp
inc
pop
pop
testl
sbb
xchg
or
rcl
out
jl
dec
in
imul
ret
xor
shll
push
inc
out
xchg
popa
pinsrw
imul
mov
pop
mov
test
cmp
call
loopne
cli
fisttpll
and
adc
mov
push
jg
push
popa
imul
insb
in
inc
push
or
mov
cmc
dec
mov
gs
addr16
iret
in
xchg
cmp
or
push
int3
xor
ret
add
out
pop
jo
xchg
cmp
stos
loopne
mov
mov
lds
lods
push
or
movsb
fadds
cmp
fldenv
jmp
sar
dec
cmc
pop
mul
inc
adc
adc
sbb
mov
xor
out
push
xchg
cmc
inc
mov
add
adc
or
and
aam
ljmp
out
rcll
push
cmc
dec
mov
jae
ret
mov
inc
scas
out
xchg
dec
mov
mov
pop
pop
imul
fimull
mov
inc
xor
pop
mov
movsb
mov
push
push
jg
mov
mov
push
out
scas
mov
mov
push
pop
add
mov
add
jno
out
dec
pop
out
dec
icebp
pusha
sahf
push
mov
fsubrp
xor
mov
mov
pop
cwtl
mov
imul
push
rclb
push
pusha
pop
push
or
lods
test
ret
mov
inc
es
jae
and
aad
into
inc
shl
cmp
mov
daa
xlat
mov
hlt
jmp
xchg
push
int3
loop
cltd
movsb
out
sbb
std
mov
repz
push
rcr
lods
cwtl
mov
loop
enter
add
jae
add
in
pop
mov
pop
jle
out
xchg
lcall
add
jmp
mov
out
lea
rclb
mov
jg
out
push
push
jb
pop
pop
je
inc
cltd
movsl
popa
div
ret
jmp
dec
out
and
mov
pop
out
xchg
cld
and
xlat
out
fcoml
lret
push
mov
repnz
sbb
out
dec
sub
push
daa
les
adc
jg
sub
push
out
or
test
xlat
jbe
pop
jb
xor
out
jae
test
lret
mov
cmp
push
loope
imul
mov
bound
and
out
ss
movsl
inc
movsb
add
cmc
xor
mov
adc
inc
out
scas
stos
push
jl
inc
push
loop
jae
lahf
add
xchg
jmp
movsb
out
mov
in
jp
js
sbb
xchg
and
std
push
out
pusha
insb
out
cmp
pop
dec
aas
sub
scas
out
add
shr
sub
and
data16
scas
in
lds
adc
pop
je
pop
sub
cmpsl
mov
sarb
out
pop
mov
flds
inc
xor
and
inc
xor
cmp
nop
push
fcomip
xchg
xor
inc
adc
mov
jns
add
dec
imul
out
mov
jge
out
push
xlat
mov
cwtl
out
jg
mov
jl
imul
lret
cmp
call
adc
adc
pop
inc
insl
jne
cwtl
push
adc
sar
jmp
arpl
push
jecxz
sarb
add
mov
in
push
mov
xor
in
pop
aaa
insl
sbb
int
dec
jb
and
adc
popa
pushf
cmpsl
xchg
add
bound
popa
out
jl
mov
loopne
out
ja
lret
dec
arpl
sahf
sbb
xchg
scas
push
lret
out
xor
cltd
out
or
pop
adc
sbb
loopne
pusha
rcrb
sub
sbb
pop
loope
insl
push
dec
push
rorl
pop
xlat
adc
xor
in
insl
dec
outsl
xor
sbb
dec
add
or
cmpb
and
les
insl
inc
out
divb
sbb
in
pop
lcall
jbe
mov
je
push
fwait
push
jecxz
push
cmp
out
rcr
pop
sahf
shlb
lret
or
fucomp
sub
xor
cmpsb
jg
out
xorl
inc
or
lds
mov
out
imul
ret
jo
add
movsb
out
pop
pop
adc
imul
aaa
push
inc
push
loope
jne
push
out
push
mov
mov
pop
add
xor
sbb
testl
lahf
pop
jecxz
and
test
or
cmp
call
imul
imull
hlt
in
xchg
popa
jo
jne
mov
iret
stos
cld
jb
dec
cltd
xchg
insb
nop
pushf
adc
leave
pop
add
fwait
mov
add
pop
jge
rclb
xchg
out
cmpsb
mov
dec
push
ret
divb
adc
out
cmp
xchg
outsl
popf
jle
out
xor
cmp
adc
bound
out
add
je
stos
add
pop
add
sbb
sub
out
cmp
xor
outsl
jo
xchg
xchg
pop
mov
movsb
add
out
push
lahf
mov
sbb
in
sbb
sub
outsl
icebp
push
cmpsb
ds
fdivrp
or
stos
xor
jle
mov
mov
jmp
stc
adc
outsl
ja
out
aad
lahf
ljmp
dec
mov
sub
outsl
jno
jecxz
jae
popf
xor
inc
insl
scas
imul
push
jg
push
sbb
insb
and
push
xchg
jmp
out
or
xor
cmp
jno
in
testb
out
scas
jecxz
test
add
and
pop
sbb
rolb
add
sbb
xchg
push
pop
outsb
sub
dec
into
push
outsl
xchg
mov
sahf
ret
or
mov
dec
je
aam
jae
sub
data16
fcoms
icebp
out
loope
ds
sbb
inc
xor
and
sub
out
push
cli
shr
lret
test
adc
ja
out
add
and
jns
loope
mov
sub
out
xchg
sbb
inc
dec
out
jo
dec
fnsave
clc
mov
shlb
lock
out
adc
jl
add
aas
xchg
mov
cmp
in
jo
xchg
jmp
adc
dec
icebp
stos
mov
divl
out
and
mov
arpl
xchg
add
push
jmp
cmp
and
cltd
jo
push
pop
fwait
adc
out
or
mov
push
stc
adc
in
mov
leave
out
sbb
mov
dec
out
xchg
add
mov
mov
out
jbe
pushf
pop
in
pop
out
sub
or
shll
loop
pop
out
aad
mov
xor
icebp
repnz
inc
push
jecxz
into
mov
fs
pop
cmp
test
test
xor
imul
addr16
stos
scas
out
pop
sub
cs
fsubl
test
dec
mov
sbb
out
or
in
sbb
aas
mov
rclb
sub
stos
or
outsb
add
xor
xlat
out
pop
mov
mov
in
xor
mov
hlt
movsl
sub
ret
cmp
jle
mov
push
lock
xor
outsl
lds
cli
pop
inc
out
test
cmp
xchg
daa
roll
push
out
jge
lock
mov
outsb
stos
hlt
add
ret
cmp
bound
push
repnz
mov
mov
mov
push
js
test
jecxz
sti
xor
rcll
cmp
xor
jle
inc
dec
mov
jmp
pop
add
ret
sahf
jg
sub
add
pop
inc
cmp
movsb
cmpsl
mov
inc
outsl
sbb
xor
cmp
inc
dec
inc
out
add
jne
jg
inc
out
lret
mov
lret
cld
sbb
jnp
out
popa
ljmp
mov
nop
fcoms
adc
cmp
stc
ljmp
das
test
push
sub
and
dec
sub
jns
mov
shl
cli
xor
push
pop
cmpsl
into
sub
aad
mov
outsl
popa
out
adc
test
jno
ja
xor
xlat
sub
and
sub
out
xchg
movsb
sub
fs
adcb
sub
cmp
scas
or
add
in
jne
sbb
mov
xor
add
inc
sahf
call
push
das
pop
sub
sbb
mov
insb
stc
fldenv
and
int
inc
and
mov
xchg
jecxz
out
sbb
inc
cmpl
hlt
inc
cmpsb
scas
jae
call
xlat
out
sbb
rcll
clc
mov
stos
mov
out
sbb
xchg
adc
lods
nop
call
out
push
pop
fcmovnu
aam
jmp
pushf
testl
mov
adc
dec
fstpt
out
test
lcall
popl
jbe
stos
imul
gs
push
add
in
out
sbb
aas
popa
sub
adc
lret
mov
mov
mov
cltd
pop
das
shll
sbb
mov
movsl
sub
out
out
or
cmp
fsubr
mov
sub
inc
out
mov
xor
out
dec
cmp
out
cmp
mov
or
mov
out
pusha
jno
mov
pop
pop
xor
cs
movl
inc
jnp
mov
sub
lahf
out
popf
cwtl
dec
aas
cmp
push
popa
lods
lds
decb
push
mov
jae
mov
aam
lea
clc
cmpsl
dec
push
out
scas
ljmp
out
lods
cmc
cs
les
repnz
out
inc
cmc
imul
insb
mov
xor
aad
dec
out
cmp
mul
arpl
std
and
cmc
es
dec
in
xor
push
out
lret
xchg
daa
jg
rol
add
and
out
shll
out
adc
ja
or
cltd
xor
lcall
inc
cld
pop
jp
mov
std
lds
bound
adc
lret
fldl
lock
aas
scas
fwait
loop
out
es
xor
inc
add
mov
push
ret
aaa
scas
push
les
loop
enter
mov
sahf
outsl
pop
stc
xchg
loope
xchg
idivl
iret
test
push
dec
lahf
repnz
pop
das
dec
adc
jmp
dec
pushf
out
jmp
xor
jge
and
imul
insb
mov
pop
lds
sub
aaa
fwait
jmp
xchg
jbe
adc
cmp
lret
pop
shlb
xchg
paddusb
mov
in
or
sub
fs
out
sbb
pop
mov
sub
out
inc
dec
fsts
and
ret
jae
divl
push
lods
push
inc
mov
shl
imul
shrl
cmp
daa
mov
xor
mov
xchg
sub
dec
repz
in
int3
mov
out
das
mov
jne
out
push
cmp
mov
cli
pushf
xchg
ljmp
ss
shll
out
cmp
jg
iret
sahf
add
out
leave
xchg
pop
adc
iret
cmp
add
ret
add
clc
push
push
inc
pop
dec
out
out
popa
and
xchg
ljmp
cmpsb
ds
and
pop
in
dec
fmull
xor
sahf
mov
mov
xor
hlt
test
ficompl
add
xchg
jecxz
fwait
rcl
es
push
sahf
nop
xor
inc
sub
stc
sub
push
sbb
adc
cld
pusha
loopne
or
lcall
or
lods
out
push
and
cmp
insb
out
aad
call
add
out
mov
inc
add
mov
pop
out
pop
jl
std
lock
mulb
out
push
je
lds
or
out
inc
dec
lods
jg
mull
int3
out
adc
cmp
dec
xor
jge
mov
idivb
gs
nop
enter
and
call
repnz
xchg
sbb
imull
and
mov
cmp
out
fbstp
or
push
gs
jp
push
jg
fsubr
xchg
aam
dec
and
out
mov
dec
iret
sbb
cmp
das
lock
aam
es
xlat
shlb
je
popa
inc
inc
inc
lret
out
sbb
mov
out
outsl
mov
jp
out
add
mov
lods
xlat
loopne
out
incl
stos
out
rcrb
dec
push
fsubrl
cmp
pop
out
fistps
jmp
loopne
bound
fimull
gs
xchg
pop
imul
mov
push
adc
and
or
ja
loopne
sub
les
gs
jmp
inc
out
mov
mov
cmp
sbb
sbb
insl
fdivrs
out
mov
out
add
mov
inc
push
in
stos
cmp
pop
or
mov
mov
popa
fnstsw
pop
pop
insl
out
jno
adc
cmpl
out
aam
cmp
ret
cmc
arpl
jno
sbb
cmp
mov
sub
out
sahf
push
gs
loopne
movsl
pop
and
out
arpl
das
xor
je
cmp
in
push
shlb
jne
xor
pop
je
xchg
out
jns
shlb
inc
mov
out
push
xchg
push
xchg
int3
or
mov
bound
xchg
movsb
pop
xor
pop
adc
cmpsl
push
push
out
add
test
jae
sub
add
mov
outsl
inc
repnz
out
mov
ret
mov
out
std
in
adc
xchg
mov
repnz
mov
mov
into
mov
add
scas
mov
out
cmp
out
test
sub
cmp
jl
mov
jle
out
cmp
adc
loop
loopne
add
outsl
sarb
lret
sbb
out
aad
xor
mov
out
int3
push
push
jmp
inc
mov
out
jae
jl
enter
out
imul
mov
out
ljmp
out
lock
xchg
das
push
jle
jmp
xor
cwtl
es
jns
mov
inc
hlt
fsts
inc
out
add
or
out
test
adc
testl
mov
jmp
mov
jmp
out
adc
into
push
and
scas
out
push
pop
sbb
mov
or
add
add
int3
shlb
pop
in
jo
rcrb
and
sub
jp
out
or
mul
ds
ret
mov
fdiv
fcoml
repnz
push
jns
loope
inc
sbb
clc
andb
aam
out
call
pop
mov
cmp
out
mov
mov
cwtl
push
repnz
dec
pusha
pop
pop
outsb
aad
cli
in
pop
xchg
and
or
out
loopne
loope
jbe
mov
les
jp
jle
aam
xor
sbb
das
cmp
out
test
xor
sub
repz
gs
and
push
loopne
jns
jae
inc
movb
aas
mov
adc
sub
add
mov
popa
dec
cmp
out
loopne
fldt
sbb
rolb
in
jo
lcall
loop
cmp
mov
aad
cmp
lock
mov
push
adc
mov
sbb
test
aad
xor
movsb
mov
cmpsb
adc
push
xchg
push
shlb
fistps
and
cs
decl
adc
je
out
fisubrl
out
call
in
push
out
mov
outsl
adc
lds
jmp
lock
loopne
dec
test
in
stos
adc
out
fbstp
imull
xchg
outsl
add
jp
dec
push
addr16
out
movsl
cmc
inc
jnp
jbe
cltd
out
popa
lock
or
bound
and
jo
icebp
rorb
mov
adc
lret
imul
out
pop
xchg
mov
push
mov
out
lcall
outsl
push
xchg
dec
mov
xor
sbb
neg
lahf
sahf
sub
and
cmp
imul
out
lret
stc
dec
or
insl
and
cmp
fs
cmpsl
out
adc
ds
lcall
sahf
push
enter
mov
jl
and
xor
inc
bound
jnp
mov
jns
dec
xchg
jbe
push
add
lret
ljmp
inc
fwait
pop
pop
sub
or
jg
iret
sub
out
test
je
inc
sahf
lret
cmp
mov
adc
jne
pop
or
out
dec
add
out
test
mov
pushf
out
loop
shlb
scas
rclb
inc
xor
and
mov
jbe
mov
add
nop
popa
mov
sbb
sub
xchg
lcall
dec
daa
mov
xchg
cmp
push
inc
or
lahf
cmp
adc
rcl
cmp
fstp
sub
mov
add
lods
or
pop
push
pop
jmp
inc
popa
iret
sub
jne
pop
mov
stos
mov
mov
fsubrp
mov
mov
pop
out
loopne
lcall
inc
test
ja
fs
push
jb
dec
xchg
dec
inc
int3
xchg
add
out
std
idiv
shl
sub
add
mov
dec
xor
lock
movb
mov
dec
scas
xor
xor
rolb
out
sbb
mov
aam
mov
rcrb
mov
pop
hlt
out
imul
in
cmp
mov
mov
or
push
xchg
out
xchg
fisubrs
adc
sbb
sub
outsb
loop
data16
xor
icebp
hlt
in
out
and
mov
jle
cld
test
and
dec
mov
out
fmuls
ror
jae
jecxz
xor
add
xor
ret
lods
ret
mov
cmp
push
pop
dec
out
xor
push
out
out
pop
mov
addr16
loope
inc
xor
enter
imul
sub
xchg
add
jbe
lahf
mov
fwait
test
stc
negl
out
mov
sbb
out
adc
mov
inc
out
orb
imul
dec
push
ficompl
inc
jge
xor
lods
pop
test
jp
sbb
std
xor
jo
sbb
pop
repz
icebp
mov
call
mov
add
out
das
mov
aaa
xor
or
ss
sbb
sbb
and
movsb
sub
xlat
out
rcrb
pop
cmc
out
pop
mov
cwtl
insb
sbb
es
adc
lock
xor
sti
aaa
sub
in
mov
leave
pop
or
jmp
lret
out
jne
inc
fwait
xor
sbb
arpl
lds
mov
addr16
push
dec
pop
out
cmp
jae
in
or
or
sbb
ss
push
sbb
mov
pop
stos
out
adc
stos
or
lahf
rcl
add
jmp
mov
out
mov
mov
xchg
test
out
adc
popf
icebp
pop
scas
xlat
imul
pusha
dec
mov
out
pop
jmp
jnp
dec
pop
push
out
testb
pop
data16
icebp
out
fmuls
popa
xor
aad
xor
mov
pop
jp
shll
sbb
in
int
call
jle
mov
push
sub
out
mov
cwtl
scas
out
sbb
jb
push
or
adc
out
xor
pushf
mov
xor
sti
push
fdecstp
add
cmp
mov
sub
cmpsb
stos
test
and
sub
mov
fdivl
int3
dec
fistpll
scas
scas
movsl
out
ja
xor
xor
mov
push
lcall
and
xor
xchg
insl
add
and
xchg
adc
enter
imul
hlt
out
inc
aam
insb
xor
fsubs
and
add
or
push
sub
test
shr
std
inc
jo
scas
out
imul
inc
add
aaa
pop
in
mov
out
insl
add
test
push
xchg
pop
and
push
mov
pop
adc
pop
daa
arpl
push
dec
mov
sbb
dec
mov
into
push
and
jle
and
mov
bound
add
mov
jmp
mul
popf
or
mov
mov
mov
mov
jecxz
mov
out
out
arpl
cmc
movsb
cld
add
push
shl
sti
mov
in
shlb
xchg
jmp
pop
push
incl
sub
mov
pop
out
stc
push
pop
sbb
jo
in
addr16
int
fdiv
cmp
mov
les
mov
insl
mov
cs
clc
cwtl
pushf
xor
pop
iret
lcall
popa
icebp
mov
popa
add
push
and
fcompl
loope
std
xor
sti
out
mov
andl
hlt
loopne
movsb
xor
fisubrl
notb
popa
ljmp
dec
out
inc
arpl
lahf
push
adcl
jmp
mov
mov
out
sub
xor
std
and
dec
jbe
cwtl
adc
mov
stos
sbb
push
mov
movsb
cmp
jo
pusha
clc
gs
mov
movsl
push
fcmovnb
sbb
adc
xlat
sub
test
ss
and
out
daa
lret
mov
out
filds
in
mov
jnp
pushf
and
out
subb
xor
mov
add
and
jo
push
out
fdivr
stos
xor
fisubrs
push
movsl
xchg
in
jae
cmp
arpl
adc
cmp
outsb
call
pop
stc
xchg
add
adc
mov
mov
mov
cmpsl
or
xchg
stc
jmp
or
pop
sub
test
sub
cmpsb
std
addr16
test
xchg
ss
adc
and
icebp
in
insb
cbtw
mov
testb
inc
or
cmp
loopne
add
add
mov
push
scas
or
in
cmpsb
lock
psllq
and
out
aad
sub
frstpm(287
out
sahf
sub
leave
add
xchg
out
sub
xchg
mov
or
inc
mull
stc
jo
es
les
cmp
addl
or
xor
leave
iret
out
test
jb
sahf
int3
bound
mov
push
sbb
pop
jecxz
xor
cltd
cmp
jmp
mov
subb
testl
int3
jg
or
pop
inc
sar
out
xchg
adc
xchg
out
add
dec
data16
fcomps
rorb
mov
pop
add
into
sti
cmc
cmp
andl
out
mov
mov
test
nop
pop
movsb
and
cmp
mov
cmp
pop
jo
push
ret
scas
mov
lods
out
sahf
outsl
xchg
cs
jge
jno
or
gs
pop
or
negb
dec
icebp
xchg
add
popf
xchg
sbb
sbb
jne
out
frstor
xorb
out
cmp
sbb
mov
pop
out
imulb
jne
rclb
out
inc
popa
imull
lea
add
out
jp
mov
mov
je
aam
jg
and
out
ljmp
pop
int3
cmp
sub
neg
mov
out
es
cmpsl
mov
sub
push
repnz
mov
pusha
mov
or
in
jecxz
adc
and
shll
outsb
es
xor
out
bound
dec
add
stos
inc
cmpl
ss
mov
dec
sbb
aam
in
pxor
popa
aad
inc
jle
out
cwtl
dec
ret
test
push
lea
pop
out
dec
sub
fcmovne
lods
out
xor
inc
or
cltd
andb
data16
ret
in
xchg
pop
out
or
sub
out
nop
inc
xchg
scas
and
in
jmp
lret
ret
rcrl
sbb
or
repz
xchg
sti
shrl
xchg
inc
ss
out
popf
jno
cmpsl
fsts
add
loop
in
out
pop
jb
mov
cltd
enter
out
mov
dec
and
sbb
movsl
mov
xchg
push
outsb
and
cmp
jne
inc
adc
mov
rorl
fnsave
insb
mov
dec
mov
lcall
sbb
les
push
cmp
add
out
and
leave
xchg
sub
dec
push
ja
mov
cmp
sbb
xchg
dec
hlt
test
jnp
xchg
dec
mov
call
cli
les
xchg
or
aam
sbb
gs
cmpsb
das
imul
and
adc
imul
xchg
int
xlat
loopne
sarb
cs
out
int3
xchg
mov
jo
fiaddl
shl
mov
cmp
xchg
or
jmp
lret
out
adc
test
in
popa
add
loope
pop
sub
inc
push
je
leave
sbb
pop
icebp
mov
inc
lods
xlat
out
xor
popa
xchg
cmp
mov
push
jge
test
lahf
imul
mov
je
lcall
sahf
loopne
out
fdivl
lods
cltd
dec
addl
cmpsb
out
stos
std
jecxz
lods
mov
out
out
lods
mov
jno
add
rolb
push
out
adc
push
cs
xor
out
mov
imul
xor
and
fldl
cwtl
imul
sbb
inc
leave
scas
arpl
insb
hlt
fsubrl
sbb
movsb
fsubr
add
mov
shr
mov
xchg
xchg
divw
xchg
outsb
dec
add
pop
jnp
scas
out
lods
shll
stos
insl
jmp
push
sub
std
xor
repnz
mov
popa
mov
ljmp
inc
rcrl
mul
or
clc
xchg
stos
sub
outsl
mov
aad
cmc
mov
ljmp
out
mov
out
add
cmp
push
repz
xchg
and
repnz
mov
out
sti
call
mov
ss
dec
in
mov
out
dec
nop
add
out
daa
imul
jle
jge
jecxz
mov
or
jbe
lret
imul
inc
repnz
imul
push
inc
sbbb
or
cmp
adc
cmp
mov
stos
les
push
mov
imul
pshufw
lcall
out
xchg
test
test
out
push
loope
add
pop
repnz
inc
js
div
push
mov
popa
push
ret
out
mov
fildl
xor
add
jmp
stc
mov
ret
cmp
pop
and
cmovo
cmpl
mov
add
push
adc
cmp
xchg
pushl
enter
fnstenv
notl
cli
shll
push
out
dec
frstor
push
lcall
out
aad
sahf
cmp
icebp
jno
jp
and
je
ja
add
mov
out
insl
xorl
mov
push
jecxz
iret
std
jae
pop
or
in
xor
mov
jmp
insl
les
jecxz
mov
in
rolb
icebp
lret
imull
push
mov
ret
jbe
cmp
call
inc
imul
and
orps
cltd
mov
js
aaa
out
in
sbb
sub
ret
jl
aaa
out
pop
aad
cmp
rcrl
stos
ja
dec
add
fadd
adc
jne
test
ss
loop
popa
or
loope
push
data16
and
loop
das
lds
lahf
jbe
xor
pop
testb
ljmp
add
or
in
and
loop
push
fs
mov
xor
pusha
pop
call
pop
mov
pusha
dec
loop
hlt
pop
scas
mov
daa
jbe
pop
ret
xchg
out
loop
je
xchg
ret
in
adc
cltd
imul
outsb
mov
lock
adc
sub
sub
jecxz
and
scas
jo
sub
movsl
mov
gs
jb
jmp
jmp
dec
mov
in
movsl
mulb
xchg
ja
aaa
ret
test
adc
jo
jb
movsl
mov
xor
loopne
dec
cltd
loop
clc
cmp
lds
jae
xchg
imul
mov
xor
mov
push
inc
loop
das
and
ljmp
mov
aas
xchg
and
inc
loop
mov
mov
jbe
jmp
and
inc
enter
and
push
mov
push
rolb
test
dec
sbb
sub
fmulp
ss
mull
or
ja
mov
ret
or
push
shll
loop
xor
mov
push
ljmp
jl
jecxz
daa
outsb
xchg
mov
mov
mov
xchg
test
jge
sti
stc
std
push
xchg
gs
mov
les
jl
jmp
je
inc
push
repnz
jl
into
mov
ret
test
xchg
outsb
xor
push
xorb
out
xchg
cmp
jb
mov
jecxz
fisubrl
pop
ret
repnz
lock
orl
mov
xchg
ficoms
mov
testb
pusha
jbe
push
or
jae
dec
xchg
movsb
dec
jl
pop
arpl
dec
adc
pop
dec
cwtl
mov
push
loope
lret
cmp
mov
sub
push
hlt
pushl
shr
in
mov
mov
cwtl
test
dec
add
sbb
add
es
pop
push
loop
mov
lds
jecxz
push
inc
insb
lods
inc
lret
pop
test
arpl
push
inc
clc
les
aam
inc
hlt
arpl
and
loopne
fisubrl
cmp
and
cmp
and
cmp
and
push
fs
les
sub
pusha
lret
bound
inc
add
dec
js
repnz
cli
dec
mov
xor
push
jno
mov
les
jg
sahf
mov
subb
ljmp
insb
ss
mov
push
inc
pop
pop
je
jl
repz
add
loope
rol
cs
jne
dec
notb
adc
repnz
and
and
xor
pop
test
or
cmp
cmp
jmp
mov
rolb
popf
cmp
into
cmp
xor
dec
push
sbb
shlb
xor
insl
dec
xlat
adc
loope
xor
adc
inc
mov
adc
roll
lock
inc
out
rcrb
sub
pop
shlb
out
xor
lods
fcomps
je
jb
out
pop
mov
mov
inc
mov
jmp
hlt
fwait
gs
cwtl
add
mov
xchg
jns
xchg
fidivrl
mov
decl
popa
inc
push
je
rcll
mov
out
ds
jecxz
lret
aam
ss
out
mov
xchg
in
mov
xchg
mov
iret
js
mov
and
inc
mov
pop
ret
lock
shlb
and
push
xchg
push
dec
aaa
sti
les
insb
dec
sub
test
push
add
xor
arpl
insl
out
gs
pop
mov
mov
inc
sbb
mov
idivl
mov
fistps
push
add
loope
shl
mov
fs
mov
cmp
mov
jae
arpl
jo
loopw
in
loop
adc
xor
push
push
jns
hlt
add
es
stos
jo
mov
xlat
mul
hlt
insb
xchg
xor
mov
arpl
jae
jecxz
loop
mov
cmc
imulb
scas
mov
push
fwait
loope
jmp
mov
xchg
shll
shlb
sub
adc
in
mov
jle
in
cmp
push
pop
andl
jg
icebp
mov
in
sbb
lahf
jge
push
outsb
in
adc
cwtl
nop
mov
in
jns
lahf
sbb
pusha
inc
add
mov
lahf
mov
inc
sbb
test
xchg
ret
mov
stc
and
xor
hlt
xor
lret
lcall
jecxz
mov
ds
dec
pusha
cmc
sub
add
ds
dec
xor
sbb
shr
into
push
mov
jo
aad
push
xchg
inc
jp
insb
test
mov
mov
mov
xor
pushf
mov
in
std
movsb
dec
cmp
mov
push
lods
jno
xchg
lods
mov
fiadds
inc
xchg
jo
sub
add
push
pop
fbld
dec
lea
mov
and
xor
into
mov
shlb
push
xor
jne
test
or
push
rolb
leave
mov
mov
fcmovbe
and
aam
mov
pop
ss
pop
movsb
cmp
mov
rorl
mov
mov
mov
sbb
jno
pop
add
rcrb
fisubl
stos
xor
dec
or
insb
jp
dec
cmp
push
xor
inc
mov
rcll
out
push
pop
aas
arpl
fldcw
inc
loop
repz
ret
lahf
xor
adc
outsb
test
and
aad
out
mov
dec
cmp
pop
mov
lock
je
lret
stos
pop
push
push
cmp
mov
int
inc
sbb
xchg
daa
xchg
cwtl
mov
jg
dec
jb
pop
pop
xchg
imul
xor
cmp
cli
pop
lods
mov
out
push
fsubrl
adc
and
ds
push
aas
jmp
and
push
dec
inc
mov
cmc
adc
mov
fidivrs
pop
pop
fldenv
add
xor
in
push
xchg
lret
scas
pop
sbb
gs
shrb
inc
add
loop
movsb
ror
ds
push
xor
push
xchg
hlt
xor
mov
ret
lcall
inc
test
and
pminsw
mov
pop
inc
je
aam
cmpsl
fs
decb
dec
out
pop
adc
jae
push
xchg
lods
mov
insb
mov
mov
popa
xlat
insl
sub
movsb
jno
sbb
dec
ficompl
mov
in
push
je
or
cmp
and
insb
rorl
ljmp
data16
mov
aaa
adc
push
aaa
jecxz
dec
xchg
rorb
mov
and
cmc
jbe
and
testb
sbb
pop
push
imul
test
loope
jb
inc
mov
jg
adc
lret
add
cmp
repnz
mov
sar
dec
or
loope
test
movb
imul
out
fadds
sbb
out
fwait
shlb
xor
and
mov
dec
push
pop
pop
pop
and
jne
fldenv
fstps
fsubrl
xchg
jecxz
mov
fadds
mov
jp
in
sbb
andl
xor
sub
jne
imul
insb
jno
and
sub
es
rorb
jo
dec
shrl
cmc
bnd
inc
xor
bound
ficompl
jae
out
push
imulb
inc
push
dec
cmp
add
pop
xor
lret
sahf
mov
xchg
ds
iret
enter
ficomps
mov
cmp
push
jmp
pop
das
cmc
je
lds
ret
les
xor
je
and
jmp
repnz
mov
popf
jmp
and
cmp
inc
sub
add
inc
dec
mov
arpl
xchg
push
je
repz
xchg
jb
in
xchg
push
imul
bnd
ljmp
fmulp
ret
add
add
movsb
sbbl
outsb
xchg
jnp
xchg
mov
adc
movsl
pop
and
jae
fists
sbb
shlb
lods
adc
adc
fidivl
push
cwtl
lret
pusha
mov
dec
mov
sub
test
mulb
pop
subl
mov
jno
out
mov
push
and
cwtl
mov
arpl
push
das
fldenv
or
xchg
pop
and
and
push
pop
inc
mov
fildl
fnstsw
push
mov
and
into
adc
push
adc
lds
ror
cmp
je
subl
je
inc
add
fs
or
adc
mov
push
inc
daa
ss
xchg
mov
ss
mov
je
push
andl
repz
outsl
mov
in
andb
outsl
xchg
sub
cmp
jecxz
mov
into
stc
test
out
push
pop
idiv
jecxz
xchg
ficomps
cwtl
mov
imul
and
rclb
push
aas
adc
mov
mov
fidivs
pop
push
xchg
fstpl
inc
aam
cmp
cmpsl
adc
dec
lods
and
incb
je
fisttps
les
imul
data16
iret
adc
mov
movsb
pop
jns
ds
scas
jno
popa
movsl
sub
data16
gs
negl
mov
cwtl
push
xorb
gs
hlt
push
push
lock
inc
movsb
into
and
cwtl
inc
arpl
je
cmp
addr16
shll
push
push
cmp
loop
pop
hlt
push
push
sub
lret
and
test
je
cmp
cltd
mov
fldl
sti
push
int
cld
ret
test
cmp
ja
and
sahf
sub
mov
inc
fiaddl
sahf
scas
inc
arpl
incl
xor
mov
mov
inc
jecxz
loope
pop
andl
and
xor
arpl
and
lea
cmp
xor
xchg
cmp
pusha
scas
clc
xor
ds
mov
or
xchg
test
cmpsl
and
xor
pop
iret
xchg
mov
stc
xchg
movsb
pop
aam
ret
mov
aas
lret
rclb
dec
jecxz
inc
lods
js
mov
sub
inc
pusha
sbbb
imul
push
hlt
fwait
jmp
daa
jo
shll
jno
adc
xor
call
in
outsb
mov
lcall
cltd
adc
push
jnp
and
test
aas
pop
sbb
sbb
cmp
rol
outsl
sub
cmp
xor
cmp
bound
leave
mov
dec
mov
stos
and
lret
lods
or
push
sahf
outsb
push
jl
mov
in
shll
adc
call
int3
testb
clc
push
jne
test
pop
dec
xchg
out
jl
jecxz
movsl
inc
pop
xor
push
xchg
mov
mov
mov
lahf
aaa
pop
and
xor
pop
xchg
pop
cmpsl
cmp
xchg
mov
fiaddl
add
and
xor
xor
jno
addr16
or
cmp
test
push
xor
mov
insb
pop
lcall
lret
sbb
mov
push
and
testb
in
xchg
shrl
je
test
loope
lea
inc
sbb
insl
xchg
rcl
lcall
rcrb
and
imul
mov
xchg
shlb
mov
sub
imul
test
jp
ds
test
aam
insb
fcomi
jge
sub
stc
sub
testb
cmp
out
lea
push
rol
lahf
jecxz
in
cli
call
mov
cld
inc
loop
lret
inc
sti
mov
inc
pop
push
scas
cmpsl
push
repnz
fdivrs
push
loope
rcl
je
mov
and
addb
xchg
dec
and
pop
sbb
lock
mov
inc
adc
insl
out
aas
stos
xor
inc
mov
insl
push
data16
mov
pop
aaa
loopne
cmp
fnsave
test
mov
dec
and
ja
idivb
test
pop
mov
xchg
cmp
lods
lods
lcall
insl
leave
mov
sub
cmp
cmc
xor
mov
add
and
push
sub
ljmp
mov
push
cs
int
mov
jl
ljmp
add
cltd
mov
clc
lds
push
addb
subb
mov
je
clc
icebp
jmp
sub
mov
in
pop
mov
sbb
filds
movsl
arpl
frstor
jbe
push
lcall
ss
ret
ficoml
inc
iret
dec
xchg
push
mov
dec
jg
xchg
mov
test
cwtl
fsubr
stos
mov
jmp
dec
in
dec
xchg
dec
mov
adc
pusha
in
jmp
movsb
divb
xorb
mov
inc
iret
and
jl
mov
je
and
pop
sbb
dec
aad
xor
mov
xlat
in
dec
xchg
xchg
jge
dec
repnz
and
je
xor
mov
ret
adcl
and
mov
jne
or
mov
mov
in
loop
cmpsl
jb
decl
aas
in
adc
xchg
outsb
pop
jo
xchg
and
push
push
pop
and
inc
pusha
xor
push
xchg
mov
and
xchg
add
lret
pop
push
push
push
pop
addr16
pop
ljmp
mov
inc
insl
rorl
xor
or
out
rcrb
sub
icebp
xor
insl
mov
inc
push
hlt
mov
cmc
test
test
mov
stc
bound
call
inc
push
outsb
jne
aas
mov
shrb
in
and
xchg
xchg
outsb
add
mov
push
repz
out
mov
xchg
call
xchg
inc
loopne
adc
push
xchg
jns
sub
loopne
xor
sbbl
sub
sbb
fmul
arpl
outsb
cmpsb
leave
jmp
sbb
xchg
mov
mov
in
jecxz
cwtl
pusha
in
insl
inc
adc
mov
lods
inc
in
push
call
lods
xor
sub
stos
fstl
pop
aas
fldl
mov
movsb
mov
rolb
lods
push
call
imul
ja
shlb
loope
sub
sbb
cltd
sbb
mov
mov
call
loope
push
jp
adc
xchg
jecxz
fsubr
sub
fiaddl
lcall
inc
or
pop
and
loopne
ljmp
movsb
cwtl
xor
xchg
or
es
xchg
push
sub
dec
jb
lds
shr
repz
inc
call
lcall
outsl
adc
mov
in
dec
cs
mov
movsb
loopne
mov
sti
adcl
pusha
negb
adc
adc
cwtl
leave
ja
imul
mov
pusha
jecxz
cmp
loop
in
js
push
inc
inc
cwtl
aad
cmp
mov
clc
shll
pusha
fildl
movsl
push
inc
xchg
enter
push
and
and
dec
daa
and
cmp
push
dec
aaa
fdivs
outsb
popa
daa
push
ret
jbe
adc
mov
add
cmc
lods
fs
ljmp
mov
test
pop
bound
repnz
sub
test
in
mov
fldl2t
mov
ja
mov
out
push
mov
xor
fidivrl
push
imul
jbe
out
ret
loop
test
inc
xor
ljmp
repnz
mov
jmp
mov
cld
test
sub
xchg
fwait
push
and
jno
pop
dec
loope
ss
lea
mulb
ret
xor
push
sub
dec
pop
ljmp
adc
sub
sbb
mov
cmp
sub
pusha
push
sti
out
pop
xor
cmpl
lds
je
mov
sub
push
add
cltd
pop
ljmp
mov
call
jno
fiaddl
test
mov
lahf
xchg
sbb
push
xchg
pusha
addr16
push
xchg
lods
sub
dec
or
mov
movsl
pop
or
stos
int3
sbb
cmp
mov
add
outsb
mov
dec
es
pop
dec
stos
dec
ljmp
scas
sarl
les
outsb
filds
es
shrl
xchg
adc
push
fdiv
es
pop
xchg
movsl
mov
test
nop
subl
pop
mov
movsb
test
xchg
push
inc
adc
or
inc
xor
movsl
outsl
mov
jmp
pop
frstor
mov
flds
mov
addr16
cwtl
push
ja
ret
xchg
es
push
loope
xor
inc
jbe
xchg
je
jb
mov
pop
xchg
les
xchg
jge
stos
sbb
jg
test
pop
cmp
dec
ret
mov
cmc
xchg
cmp
mov
daa
std
fcoms
or
movsl
dec
cwtl
enter
and
jbe
sbb
mov
shll
jae
fisubrl
xchg
roll
cmc
mov
hlt
negb
mov
insb
push
jecxz
test
imul
inc
jne
ljmp
rcr
push
mov
push
push
movsl
fwait
jbe
mov
arpl
pusha
sbb
push
loope
iret
push
nop
mov
and
jnp
andl
imul
mov
mov
push
adc
mov
icebp
mov
into
pop
add
adc
pop
cmpsl
mov
cli
push
outsb
aas
ss
stc
loop
lock
cmp
ret
xchg
mov
lods
in
push
sbb
mov
adc
xchg
add
cmp
pusha
mull
push
push
loop
mov
dec
dec
loop
mov
sub
inc
das
out
or
inc
hlt
inc
shll
jmp
push
aaa
outsb
in
jnp
sub
outsb
sub
fwait
mov
repnz
repnz
inc
xchg
imul
movsb
dec
pop
jno
out
pop
mov
into
ss
push
pop
test
ljmp
mov
xor
repnz
mov
outsb
mov
and
enter
loope
mov
push
inc
mov
mov
out
out
xchg
lods
ds
add
mov
xchg
jb
sti
pushf
push
jmp
popa
das
imul
aam
ficompl
add
scas
repnz
insb
xor
fnstcw
mov
mov
insl
inc
cmpsb
test
add
jl
push
inc
xchg
outsb
lods
repnz
stc
adc
mov
int3
jb
out
adc
mov
insb
and
out
and
shl
test
push
push
gs
lret
dec
shll
mov
fldcw
jmp
enter
pop
jno
xchg
idivb
pop
mov
aam
cmc
sbb
shrb
mov
movsb
push
imulb
or
inc
sbb
test
shl
dec
dec
je
andb
rcrl
mov
in
xchg
loop
ljmp
stos
add
jnp
aaa
enter
test
and
sbb
je
out
cmpsb
movsb
cwtl
add
imul
xchg
outsl
add
sub
pop
imul
sub
sub
mov
sub
add
dec
movl
std
dec
push
insb
sub
mov
inc
bswap
sbb
jmp
ret
pusha
xchg
and
mov
mov
add
sub
push
add
hlt
cmp
fcmovb
sub
rcrl
out
adc
jbe
push
and
rolb
test
xor
inc
xchg
je
call
loopne
roll
es
ret
or
mov
in
mov
arpl
mov
fwait
adc
mov
enter
cmpsl
aaa
repz
sarb
cmp
inc
and
mov
cwtl
dec
sub
mov
je
jecxz
or
imulb
xlat
mov
loope
mov
sub
sub
add
push
mov
leave
aam
ret
scas
dec
jne
mov
enter
pusha
add
stc
xor
xchg
dec
pop
inc
or
inc
outsb
xchg
idiv
jle
loop
sub
push
xchg
dec
paddusb
lret
and
dec
push
pop
loop
movsl
dec
sub
xchg
sub
inc
stos
add
jl
mov
fstps
loop
add
andl
mov
fs
incl
call
scas
inc
aaa
loope
sub
mov
sbb
jge
xor
mov
test
pop
mov
or
roll
insb
mov
out
lea
dec
out
fstps
loope
or
in
push
fs
outsb
pop
mov
add
inc
inc
or
xor
imul
loopne
fwait
movsb
xor
loope
inc
pop
push
jb
aaa
sub
jb
loopne
inc
push
mov
jmp
stos
stos
xor
xchg
addr16
inc
shll
aam
push
outsb
cmp
adc
hlt
enter
push
sahf
add
adc
aad
xor
and
mov
ds
sbb
pop
out
mov
negb
ds
mov
jns
jle
lea
xor
cmp
insl
push
sbb
lea
push
and
std
adc
xchg
jb
movsl
aas
dec
add
ret
mov
sbbl
rcrb
aam
push
inc
in
inc
fbstp
scas
mov
jbe
fstpl
jmp
pop
enter
push
mov
shl
add
sbb
bound
fs
mov
nop
adc
mov
cmc
xchg
inc
je
xchg
inc
jle
push
sbb
adc
test
out
ja
pop
push
xchg
sbb
hlt
mov
jl
xor
mov
mov
and
xlat
sbb
cmp
arpl
cmp
mov
mov
icebp
jmp
inc
adc
inc
mulb
and
test
fwait
lods
fcomps
sbb
mov
divl
inc
jmp
add
loopne
fwait
inc
jmp
inc
sub
and
xor
movsb
loopne
test
mov
mov
andb
cltd
shll
jl
repz
flds
and
sbb
fbld
lret
dec
xor
mov
daa
jmp
or
stos
sub
mov
data16
jmp
popa
pusha
pop
and
mov
add
mov
and
movsb
pop
repnz
inc
in
fcmovnb
fs
dec
pop
push
repnz
outsl
sbb
bound
les
pop
addr16
rol
loopew
negb
lcall
loopne
inc
add
outsb
pop
add
ficomps
push
adc
add
jmp
hlt
cmp
push
pop
sub
rcl
sbb
inc
fwait
jns
xor
push
movsb
iret
fcomi
out
sahf
ror
mov
testb
sarb
fisubrl
icebp
xchg
shlb
and
inc
cmp
cmpsb
jb
xchg
mull
cwtl
mov
cmp
dec
insb
cmp
dec
fists
and
movsb
into
nop
mov
outsl
push
test
enter
sbbl
int
cmpsl
dec
ljmp
pop
lret
dec
fsts
dec
push
sub
sub
or
lahf
sbb
adc
push
repnz
insb
inc
scas
add
and
xor
loopne
fwait
jbe
subb
adc
insb
mov
sub
mov
jbe
add
jecxz
jmp
fisubs
pop
std
in
subb
sub
cmpsl
and
add
or
pop
push
dec
jg
cltd
xor
inc
testl
jo
iret
xchg
insl
lret
xor
nop
popa
xchg
cmp
jle
mov
mov
push
mov
iret
jno
pushf
shl
cmp
aaa
rep
mov
rorb
cmpb
lock
pop
popf
jecxz
fildll
movsb
int
and
dec
out
sbb
jno
pop
sub
out
xlat
lock
lods
mov
es
pushf
shrb
popf
aaa
inc
shlb
or
imull
cwtl
dec
add
ret
and
mov
movsb
and
pextrw
xchg
adc
movsb
jl
fadd
or
adc
xor
je
test
movsb
outsb
inc
xor
repnz
mov
mov
insb
test
add
bound
loope
mov
stos
push
xchg
lret
dec
mov
push
xor
dec
cmc
daa
adc
fadds
insl
inc
xchg
pop
rolb
mov
sbb
test
sub
fidivs
add
leave
fisubrl
sbb
mov
leave
mov
mov
inc
cmp
sbb
fldenv
data16
call
dec
jns
aam
inc
mov
mov
test
imul
rcrl
inc
jae
mov
loope
mov
andl
jb
jb
pop
in
cmp
xchg
cmp
cwtl
jle
idivl
xor
inc
mov
je
loope
in
das
repnz
mov
test
ljmp
je
xor
mov
pop
psrlw
adc
xchg
cmp
fs
sahf
loop
popa
inc
xor
shll
rolb
ret
adcb
add
mov
out
jl
aam
lcall
jmp
cmp
mov
and
jnp
cwtl
shlb
push
mov
loope
inc
sub
xor
mov
in
inc
imul
scas
rep
pushl
push
cmpsb
push
push
mov
sub
push
pop
loope
or
mov
int
xchg
lods
add
or
push
mov
ja
mov
xchg
ss
or
pop
and
pop
fldenv
mov
imul
fsts
jecxz
outsl
xchg
xor
sahf
mov
fs
pop
mulb
mov
pop
leave
jns
movsl
sub
jne
popf
daa
call
mov
test
push
xor
divl
adc
dec
maskmovq
imull
push
inc
test
sbb
shl
push
int
pop
int3
inc
fildll
sub
movsb
inc
and
enter
push
jge
pop
jle
push
mov
fwait
push
movsl
adc
xor
push
mov
cmc
test
pop
out
pop
add
xchg
mov
fiaddl
ja
and
jg
jno
push
mov
ds
adc
sahf
dec
and
int3
inc
jecxz
and
sub
pop
test
cmc
xchg
insb
sub
mov
jmp
lods
je
loop
push
push
ljmp
and
inc
cmp
shlb
aad
or
mov
cmp
mov
outsl
push
cmc
inc
ret
pop
jae
stos
aam
pop
xchg
fld
je
mov
out
fisubrl
xchg
adc
or
out
cmpsb
mov
ret
and
add
fimull
jmp
mov
clc
mov
jb
sub
jb
iret
cmp
decb
mov
dec
mov
es
loope
in
ss
mov
jmp
loopne
sbb
inc
xchg
shrl
sub
popf
sub
repnz
ss
scas
aam
push
out
jae
call
aas
lret
xor
sub
sub
imul
mov
lock
dec
jg
push
ljmp
sbb
mov
pop
fbstp
push
dec
dec
sbb
mov
pushw
int
xor
xor
sbb
fiaddl
mov
fidivrl
inc
sub
mov
stos
jecxz
xchg
lea
loop
in
add
mov
out
mov
mov
jle
arpl
mulb
inc
inc
mov
fs
pushf
outsb
ljmp
push
push
leave
push
xor
xchg
sub
sub
aad
sahf
enter
ret
stos
dec
rcr
rcrb
fs
inc
mov
cmpsl
inc
and
push
mov
std
xor
pushf
adc
and
clc
das
xchg
repz
lret
push
imul
sbb
sub
pusha
add
jg
insb
imul
inc
push
movsl
mov
iret
out
fistps
sub
test
hlt
mov
sbb
addr16
movsl
push
fldl2t
mov
inc
adc
mov
xchg
jbe
dec
divb
pop
xchg
mov
lock
imull
adc
dec
push
shlb
jae
push
daa
stc
jbe
je
fistl
mov
fstpl
out
ja
aaa
xchg
inc
imul
mov
pop
es
inc
adc
pop
mov
mov
inc
xchg
xchg
mov
or
mov
lods
jg
scas
jae
jnp
dec
stos
fidivl
insb
testl
or
and
jb
es
xor
mov
cltd
push
lods
jg
mov
push
imul
pop
mov
popa
mov
add
fidivrl
push
out
insl
mov
arpl
mov
daa
mov
insb
insb
jns
aas
lods
lcall
add
xchg
out
push
idivb
int3
mov
scas
mov
push
push
inc
mov
out
call
xchg
test
sbb
in
outsl
fsubrs
lcall
inc
push
pop
xchg
sub
dec
mov
push
mov
test
jbe
je
cltd
adc
mov
mov
inc
enter
jle
ljmp
dec
rol
sub
out
fidivl
inc
xlat
pop
add
cld
mov
pushf
rcr
and
ret
add
pop
adc
out
push
shlb
pop
rclb
insb
xor
add
loope
adc
je
scas
fldenv
hlt
fbstp
sbb
loope
dec
lret
call
xor
sbb
ljmp
outsl
push
fldenv
mov
add
popf
xchg
pop
push
fwait
xor
fs
cwtl
adc
sub
jno
push
mov
cmp
and
pop
push
pop
push
rcrb
inc
inc
ficompl
push
adc
pusha
push
sahf
fs
popa
scas
repnz
xor
xchg
lock
jo
call
pop
mov
xchg
repnz
xchg
fmuls
jb
jge
insb
arpl
loope
mov
icebp
fldl
int
in
das
adc
subl
hlt
out
add
jae
xor
pop
mov
cmp
les
sub
and
iret
enter
insl
dec
imul
push
test
fdivrl
test
adc
sbb
jo
insb
movsl
rolb
outsb
js
jl
lock
leave
clc
mov
fidivl
pop
stos
jae,pn
sub
pushf
pop
aaa
outsb
mov
mov
and
mov
push
outsb
mov
sub
insb
xor
test
lret
mov
movsl
dec
push
sbb
outsb
movsb
or
int
pusha
and
das
loop
and
outsb
pop
xchg
push
inc
mov
jae
mov
jg
push
mov
ljmp
mov
scas
orl
inc
mov
cmc
add
lret
shll
into
xchg
sub
adcl
shlb
mov
mov
xor
fldenv
and
cmp
push
xchg
pop
add
xchg
popf
jne
sbb
inc
jbe
push
fstps
pop
mov
fldenv
mov
adc
sub
rorb
mov
push
mov
test
xor
pop
aam
mov
mov
mov
in
pop
rcrl
sub
xchg
adc
not
fisubl
fimull
mov
sti
xor
mov
jmp
push
mov
les
jl
das
xchg
es
push
xorb
mov
adc
pop
sbb
fwait
je
xor
xor
fdivrp
and
inc
or
jno
aad
push
fldcw
insl
idivb
push
fsubrl
mov
xchg
xor
cmpsl
sbb
negb
pop
out
jbe
or
sbb
enter
xor
xchg
sub
inc
jle
outsb
push
adc
mov
add
and
adcb
jge
xchg
outsl
insb
and
ds
jne
adc
out
xchg
in
and
andl
addr16
adcb
pushf
rolb
jb
adc
or
lcall
xchg
jl
pop
mov
addr16
sbb
mov
icebp
cmp
mulb
cwtl
push
mov
bound
je
mov
xorb
dec
loop
xor
mov
and
xchg
pop
dec
loope
insb
and
inc
jecxz
or
xchg
inc
xchg
cli
icebp
mov
mov
xor
into
inc
sub
ror
add
mov
fisubl
dec
data16
loopne
nop
push
call
scas
repnz
inc
push
insb
cli
dec
arpl
xor
aaa
xchg
dec
pop
xchg
dec
xlat
push
test
iret
inc
out
add
hlt
mov
jecxz
loope
sub
inc
sbb
jbe
sub
jo
popa
pusha
jo
push
inc
push
adc
insb
jmp
xor
rorl
jg
pusha
fmuls
dec
jne
jb
cli
inc
out
and
aaa
and
xchg
jecxz
mov
popa
out
mov
adc
cmp
test
scas
adc
mov
scas
mov
cli
call
daa
aaa
push
je
inc
mov
mov
mulb
ja
mov
faddl
das
jecxz
shl
jbe
outsb
dec
cmpsl
add
jl
and
push
mov
add
and
xor
xor
lock
xor
or
mov
push
inc
jl
and
cld
mov
xor
je
push
fstps
jmp
pop
clc
cmp
arpl
pop
in
jo
fisttpll
and
adc
stc
int
or
adc
xchg
xor
insb
mov
pop
fists
insb
jecxz
loopne
cmp
lods
push
sub
out
loope
xor
dec
jbe
jl
out
mov
pop
mov
cmpsb
es
loopne
in
sbb
neg
fidivrl
je
xchg
push
add
push
shrb
mov
mov
repnz
xchg
pop
jg
inc
es
inc
mov
or
xor
cmp
pop
loope
fmulp
dec
adc
jl
mov
insl
loope
pusha
inc
push
sub
push
pop
loop
xchg
out
mov
sub
xor
push
popa
cmc
mov
cmp
sub
mov
imull
push
test
hlt
int3
jp
lods
pop
push
or
ljmp
pop
adc
xchg
dec
push
dec
sbb
jb
cwtl
repnz
call
mov
push
cmpsl
push
push
pop
and
mov
cld
arpl
xor
imul
push
je
xor
mov
fbld
jecxz
push
push
ljmp
push
insb
mov
pusha
ret
imul
xor
stos
or
adcl
dec
arpl
int3
popf
ljmp
xor
lret
es
sub
adc
xor
rolb
mov
jae
push
ret
xor
cmp
and
out
and
and
mov
arpl
insl
push
jmp
add
pop
mov
fisubrs
mov
call
arpl
xchg
scas
jb
cmpsl
aas
or
fsub
mov
inc
arpl
test
mov
and
xor
lods
mov
fwait
insb
push
mov
testl
test
shll
sub
nop
bound
mov
inc
js
jae
xchg
add
inc
cmc
das
bound
push
jbe
movsl
and
xchg
dec
movsl
idivl
sahf
and
scas
cmp
push
fwait
mov
loope
inc
out
xchg
bswap
test
ss
mov
je
daa
fistps
dec
fistl
addr16
fs
rol
adc
sti
popa
mov
mov
jecxz
movsl
sbb
cli
xchg
iret
xchg
daa
cmp
push
and
ljmp
add
mov
dec
scas
push
xchg
inc
jp
jl
arpl
sar
dec
mov
cmp
addr16
xchg
mov
ret
push
adc
push
xor
push
stc
movsl
cmp
xor
push
imul
and
inc
les
cwtl
pusha
data16
jo
and
add
xor
jecxz
xchg
inc
outsb
mov
or
and
xor
bound
inc
insl
jbe
faddl
fdecstp
call
mov
jb
fidivrs
lahf
push
jb
fwait
dec
and
rcll
or
lret
ljmp
loop
mov
sahf
sub
loop
int
outsl
add
pop
pop
pop
push
stos
push
gs
arpl
test
mov
fsub
adc
add
mov
xchg
or
xor
mov
dec
sahf
sub
add
add
loope
dec
popa
mull
push
enter
pop
imul
jne
jbe
cmp
add
mov
sbb
fs
fimull
inc
inc
jbe
and
sbb
mov
dec
dec
xor
loope
inc
aad
enter
not
mov
lock
push
out
or
test
mov
and
outsb
cmc
loopne
xchg
xchg
rcr
xor
stos
xchg
xor
xchg
and
ror
rcll
lock
jae
call
mov
outsl
jnp
mov
push
jecxz
clc
jecxz
cmp
jp
stc
pop
insb
push
in
scas
cs
insb
mov
jp
push
mov
clc
testb
stc
lret
das
pop
mov
jl
jns
mov
pminub
jno
imul
pop
imul
into
rcll
aaa
ss
sbb
aaa
add
pop
push
ss
add
cmp
add
sub
call
test
repnz
ror
aad
xor
sahf
pusha
leave
cmp
push
ja
sub
dec
enter
jbe
and
sub
es
test
jecxz
pop
cmpsl
fs
ret
inc
push
pop
xor
xchg
dec
pushf
dec
sub
mov
ficomps
lahf
test
pop
mov
mov
gs
bound
flds
mov
imul
pusha
push
cld
sub
inc
jmp
sarl
and
dec
mov
iret
mov
adc
push
jp
push
cld
sub
aam
ss
xchg
dec
fdivs
popf
lret
aas
jnp
pushf
stc
sub
xchg
push
loope
mov
ja
les
das
cmp
shlb
fdivs
cmc
add
inc
jne
fimull
mov
notl
mov
cmc
pop
ret
xchg
mov
out
lods
popf
cmp
pop
inc
ss
mov
ret
pop
cmp
into
dec
dec
shlb
xor
and
sbbb
mov
dec
mov
sar
ds
inc
in
sub
cwtl
into
cmp
adc
cmp
mov
sbb
int
cwtl
and
into
dec
jns
inc
lret
loop
dec
mov
fcomps
movsw
addr16
sub
lahf
add
ja
cld
sub
push
outsb
popa
outsb
jnp
jl
jne
and
fcomps
mov
pop
test
push
sub
call
push
mov
jp
int
jl
jne
rclb
lds
insb
inc
push
mov
fwait
adc
arpl
fisubrs
push
adc
outsb
xor
mov
arpl
mov
ljmp
and
test
aad
jmp
arpl
mov
sbb
ret
inc
aaa
sbb
out
in
xorl
push
pusha
fisttpll
loop
mov
stc
out
push
cld
rcr
sbb
mov
inc
inc
fiadds
popf
jnp
nop
push
cmp
arpl
subl
loope
pop
lret
daa
mov
mov
pop
add
inc
sbb
push
jecxz
mov
and
push
cmpl
or
push
xchg
loope
clc
lea
push
inc
mov
sub
cmpsl
sub
push
xchg
pusha
test
int
mov
repnz
aas
cmp
icebp
xor
jo
jo
popa
mov
aaa
scas
jb
mov
adc
popf
dec
aaa
popf
loopne
inc
xchg
push
inc
lods
movsb
jl
out
mulb
andl
insb
and
loop
inc
testl
xchg
in
int
jecxz
xchg
or
xchg
rorb
fisubl
insb
mov
xchg
mov
lods
mov
cmp
loopne
movsb
fwait
adcb
dec
movsl
ja
loopne
mov
dec
or
xchg
add
outsb
fwait
adc
dec
repz
fsubs
xchg
cmp
popf
fldl
or
dec
mov
xor
outsb
test
std
shll
loop
call
sti
fs
inc
xlat
pop
scas
enter
cmp
jo
jmp
imul
test
pop
mov
stc
sub
jb
mov
dec
loope
pusha
daa
push
popa
pushf
xor
adc
or
lea
mov
leave
jns
mov
sbb
daa
pop
aaa
jmp
out
or
arpl
out
push
xlat
add
les
enter
xor
push
arpl
test
shl
out
add
fisubl
fisubs
and
daa
hlt
movsb
lahf
loop
cwtl
push
xor
psllq
push
rcrb
push
insb
push
movsb
dec
push
push
outsb
fmuls
xchg
mov
dec
in
inc
mov
andb
inc
mov
pop
pusha
pop
out
adc
ficompl
addl
jb
sahf
xchg
lds
shrl
push
jnp
push
and
pop
hlt
lock
mov
shll
cmp
inc
and
cmpsb
cwtl
addl
testb
xchg
inc
push
inc
daa
cwtl
jae
gs
insb
test
jl
push
xor
dec
aas
push
adc
lcall
xor
jg
rorb
loopne
cmpsb
xchg
inc
daa
dec
mov
push
cld
ret
jecxz
iret
xchg
push
push
pop
outsb
jp
out
pop
mov
sbb
mov
pop
sub
ja
movsb
loope
mov
xor
adc
or
inc
out
push
sub
sbb
and
mov
rcr
out
ja
push
insb
add
xor
ljmp
sub
xchg
push
pop
clc
mov
or
pop
js
cmp
das
sub
sahf
dec
shlb
mov
inc
daa
js
sub
je
sahf
imul
notb
pusha
adc
add
stos
stc
scas
pop
cmpsb
dec
cmp
add
mov
ljmp
mov
loop
mov
sbb
int3
push
lods
mov
add
popa
arpl
fmuls
loop
jb
loop
dec
lods
adc
push
jl
ficoml
addb
enter
fimull
xor
pushf
movsl
xor
test
or
xor
pop
fildll
push
lahf
adc
rorb
push
xor
jns
mov
into
aam
jle
sub
xchg
ret
or
push
in
testl
mov
pop
pop
jle
mov
jg
push
iret
inc
jne
pushl
repz
jno
adc
aaa
fs
adc
xchg
fwait
push
push
lcall
mov
mov
scas
addb
and
or
lock
lods
and
dec
push
pop
aaa
aaa
xchg
test
lea
mov
sub
stos
pop
mov
andb
adcb
sub
enter
mov
in
adc
pop
andl
mov
jb
mov
pusha
and
imul
fidivrl
dec
out
push
hlt
daa
inc
pop
ret
mov
mov
aam
lock
pop
adc
mov
push
adc
sbb
inc
mov
mov
iret
inc
imul
dec
sbb
loopw
stc
pop
movsb
mov
fwait
mov
mov
movsl
cmova
mov
mov
fwait
or
xor
mov
push
lock
inc
xchg
push
jne
mov
adc
test
test
adc
dec
push
ficomps
je
sub
jnp
add
cmp
pop
lcall
xor
bound
xchg
scas
enter
pop
mov
in
mov
xor
push
sub
dec
shl
movsl
inc
les
dec
xlat
gs
addr16
push
jecxz
fidivl
loop
shll
mov
lock
pop
je
ffreep
pop
inc
imul
push
pop
mov
mov
aam
dec
dec
or
fnstsw
mov
loope
pusha
mov
test
mov
mov
loope
pop
inc
in
popa
mov
daa
jnp
or
xchg
push
dec
jg
int
mov
scas
xlat
pop
xchg
and
xor
in
dec
xchg
cmp
into
mov
je
inc
cli
inc
jnp
adc
push
and
mov
jno
adc
inc
mov
pop
xchg
jne
icebp
hlt
loope
dec
pop
data16
and
je
sub
jb
xor
cmp
gs
xchg
mov
mov
lcall
cmc
aas
outsb
adc
add
sbb
cltd
ss
testb
pop
xor
jl
je
lea
loope
mov
dec
rcll
lods
out
mov
inc
and
insb
cmp
xchg
sub
jo
jl
ret
sbb
push
out
jmp
jbe
jmp
xchg
in
pop
and
mov
cmpsl
sub
movsb
imul
pop
jl
add
enter
sub
mov
push
adc
or
nop
xor
cs
es
fistpll
sub
out
xor
dec
mov
or
das
mov
or
jo
mov
and
aas
lcall
xlat
push
je
jecxz
mov
mov
push
xor
xchg
sub
mov
mov
xchg
in
popa
jmp
sbbb
inc
repnz
fimull
push
mov
sub
lds
mov
push
imul
enter
addb
test
cmp
jne
mov
xchg
jp
mov
xchg
loope
push
xchg
push
pop
pmaxub
inc
test
xchg
dec
imul
add
pusha
lahf
adc
xchg
push
mov
out
dec
mov
fistpll
lods
inc
pop
js
imul
aam
jnp
jp
inc
add
popf
dec
iret
adc
cli
lahf
mov
lret
hlt
inc
aas
rcll
jecxz
out
lods
loopne
dec
loopne
fwait
dec
mov
test
sub
push
mov
movsl
mov
outsb
cs
push
pop
in
xchg
push
dec
xchg
addr16
bound
push
pop
iret
mov
lcall
xor
cmp
xor
mov
loopne
sbb
aaa
cmp
pop
or
jbe
movsb
mov
sub
xchg
mov
popa
jp
outsb
mov
into
aas
push
es
ret
push
xlat
inc
xchg
dec
stos
inc
rclb
add
jns
lret
inc
mov
addb
rep
inc
test
cmp
sbb
repnz
xor
cmp
orb
mov
cmp
sub
mov
call
add
shl
and
fsubs
imul
and
or
inc
cmp
rolb
pusha
xchg
xchg
jecxz
jmp
xor
scas
dec
cmpsl
mov
icebp
dec
test
divl
and
mov
or
inc
mov
clc
push
add
int
ds
add
lods
out
dec
subl
cmpl
outsb
ret
roll
ret
jb
jp
xchg
arpl
cmp
int3
leave
mov
xor
das
mov
push
pop
sbbl
call
and
add
push
movsb
loop
es
inc
dec
out
incl
ss
movsb
or
push
aad
mov
mov
clc
and
sbb
jno
loopne
xor
out
xchg
cmp
test
xchg
int
sub
pop
jo
jo
rcrb
cli
outsl
fstl
xorl
sbb
addr16
in
lock
imul
mov
cld
xor
push
test
aad
lods
jo
mov
push
sbb
push
mov
mov
cmp
dec
pop
je
rorb
stc
inc
jmp
sbb
mov
xor
out
sub
sbb
lret
sbb
outsb
vmovntps
xor
popa
push
cs
push
in
and
add
cli
push
xchg
jmp
lret
shll
call
data16
in
and
leave
push
inc
stc
push
je
jae
cli
scas
xchg
inc
in
js
xchg
das
frstor
xchg
es
dec
sbb
loopne
or
sbb
das
test
popa
lods
xchg
roll
shl
push
mov
add
mov
xor
sti
repz
das
xor
ljmp
in
jl
stos
jb
push
and
cli
inc
dec
xor
add
add
xchg
adc
jge
repz
pop
and
pop
jns
fistps
flds
ret
xorl
sti
loope
sbb
jecxz
outsb
inc
push
lahf
xlat
mov
mov
ret
aas
hlt
sahf
lock
mov
movsb
mov
mov
shrb
cmp
dec
cwtl
xor
movsl
inc
pusha
jae
hlt
fmulp
or
jnp
mov
sbb
xorl
inc
iret
ja
adc
jae
mov
rcrl
hlt
mov
mov
mov
or
or
outsb
sub
push
ljmp
cmp
cmp
sub
jb
popa
js
jg
and
or
pop
sub
xor
and
into
pop
insb
mov
shlb
popf
cs
add
inc
lds
jae
xchg
daa
jge
std
lret
rorb
sub
jl
nop
push
lea
dec
fiaddl
pop
popf
push
mov
roll
mov
rcll
xor
xorb
mul
inc
outsb
jne
das
enter
ja
nop
add
sub
push
je
imull
sbb
and
mov
aad
add
xor
mov
dec
and
ss
cli
jne
sbb
mov
movsb
repnz
aaa
ljmp
dec
inc
rcr
testb
xchg
negb
adcb
jl
adc
push
mov
sarl
add
hlt
out
popa
jp
add
cmc
xchg
loopne
sbb
insb
jp
insl
xchg
jns
out
jae
jp
adc
pop
dec
cmp
notb
sbb
repnz
sub
roll
imul
dec
push
pop
jne
sub
es
aaa
sub
pop
adc
test
xchg
adc
fnsave
inc
out
repz
push
lds
xchg
push
sbb
lret
pop
adc
cmp
xchg
fidivs
dec
fwait
cwtl
out
dec
je
in
pop
pop
ljmp
or
push
jmp
or
cmp
shl
repnz
insl
lcall
cs
loop
inc
movb
adc
jae
loop
mov
loop
loope
aaa
mov
mov
sub
pop
jg
jmp
addr16
xor
or
cmp
inc
jne
cs
add
inc
pop
bnd
xchg
mov
mov
ret
dec
aas
xor
jnp
shll
and
das
es
and
adc
add
out
ljmp
popf
adc
inc
daa
and
add
testb
out
cli
adc
jecxz
mov
cltd
dec
sub
in
cli
pop
jb
popf
jnp
mulps
inc
into
push
sbb
push
in
mov
lds
leave
inc
jns
inc
pushf
inc
cltd
fsubrs
movb
loope
push
outsb
in
or
pop
adc
xor
mov
mov
sub
mov
fdivrs
ds
jl
sbb
xor
pop
push
outsb
and
shll
cwtl
movsb
nop
mov
inc
out
xchg
push
cwtl
loop
cmc
and
outsb
sub
cltd
sub
enter
mov
mov
outsb
and
or
xchg
ljmp
inc
insl
hlt
pop
and
insb
mov
mov
repz
xor
rorb
push
jge
out
inc
cs
inc
jg
jp
movsl
popa
fisubrl
mov
lcall
mov
test
xchg
mov
pop
ljmp
pop
les
fdivs
test
sbb
add
or
xchg
cld
shrl
es
mov
dec
push
push
movsl
insb
mov
cmpsl
arpl
cmpsl
sbb
inc
and
cmp
inc
ljmp
push
jbe
mov
das
loop
mov
ficomps
loopne
outsb
add
adc
jge
pop
pop
inc
aas
pop
inc
and
mov
xor
mov
or
in
add
xchg
fs
mov
jns
clc
repnz
xchg
sti
sub
inc
push
pop
cmpsb
and
loopne
pushf
cli
mov
test
xchg
push
in
stos
and
add
push
mov
mov
mov
adc
fwait
mov
mov
dec
xchg
loope
dec
inc
arpl
sub
xchg
inc
mov
jecxz
hlt
xchg
push
adc
cmp
xor
mov
sbb
push
sar
out
push
cmc
test
sbb
in
hlt
cli
ficomps
push
pusha
sub
ljmp
pusha
push
je
pop
or
je
xor
push
push
inc
jno
popa
mov
xchg
cmpl
sub
xor
push
in
icebp
jnp
jmp
hlt
pop
inc
fsts
cmpsl
mov
repz
mov
enter
add
les
outsb
inc
push
out
lahf
adc
out
mov
mov
sub
or
mov
xor
movsb
test
inc
sub
adc
div
in
rcrb
loop
ret
sub
insb
pop
mov
ja
adc
jp
lds
sbb
jnp
popa
inc
jae
ficoms
andb
in
aad
and
ja
and
fwait
mov
cmp
jb
sub
fiadds
add
andl
mov
das
jno
inc
and
jbe
lods
es
push
jecxz
sbb
lret
jbe
jo
mov
ficomps
push
dec
adc
xor
addr16
sahf
fldenv
in
loop
aaa
out
cmp
sub
lods
xchg
rclb
mov
fadds
test
fcmovbe
arpl
js
repnz
hlt
insb
ja
sub
inc
xchg
pusha
es
or
push
andl
or
xor
mov
testl
arpl
ljmp
and
popa
push
shlb
inc
mov
imul
out
xor
daa
aaa
insb
push
daa
and
movsb
dec
inc
push
cmp
pop
repz
jecxz
mov
and
les
scas
nop
aam
mov
sub
std
jb
adc
inc
stc
jle
fsubrl
jg
mov
xor
pop
into
divb
mov
pop
scas
xchg
and
sarb
mov
aas
xor
sub
insl
mov
or
xchg
and
lcall
sbb
shlb
into
nop
ljmp
popf
outsl
cli
jb
sbbl
js
addb
jecxz
je
in
cmpsl
push
loop
fnsave
xchg
bound
mov
mov
xchg
mov
mov
lods
jecxz
and
mov
test
cmpsb
mov
cmp
pop
mov
mov
lret
push
aas
jb
in
loope
adc
cmp
xor
xor
adc
outsb
cwtl
mov
aaa
das
loope
ds
pop
inc
repz
xor
xor
dec
orb
dec
inc
sbb
in
xor
mov
pop
out
xchg
shlb
pop
jle
mov
sbb
sub
fisubrs
and
and
mov
cmpsl
loop
or
inc
mov
add
lods
xchg
fiaddl
jmp
roll
jecxz
mov
add
add
movsb
pusha
shl
push
pop
mov
imul
mov
xlat
mov
pop
loopne
jle,pt
mov
fisubl
call
jle
popa
lahf
jnp
nop
ficompl
mov
test
into
jne
sub
jecxz
in
push
mov
sub
movsl
shll
inc
dec
lock
mov
xlat
icebp
hlt
mov
inc
movaps
leave
pinsrw
adc
pop
orl
pop
dec
jb
push
xchg
jmp
imul
shlb
outsb
loopne
or
push
ss
push
loopne
subb
aaa
sti
and
mov
inc
and
inc
pop
pusha
cmc
jne
xor
pop
das
test
push
out
outsl
rolb
idivl
inc
xchg
jmp
adc
outsb
movsl
lahf
lods
push
dec
adc
cltd
out
sub
aam
xor
testb
fidivl
xchg
in
addr16
sbb
setp
in
daa
loope
or
cmpsb
push
lods
add
jb
pusha
nop
add
in
jecxz
sti
pop
popf
xlat
fmuls
in
les
outsb
arpl
mov
mov
test
stos
push
and
mov
mov
in
sub
and
jb
repz
push
ljmp
pop
push
adc
loop
cmpsl
inc
mov
jnp
xchg
add
adc
xchg
pop
jge
out
aas
add
sub
in
test
sub
je
add
test
leave
or
or
or
bound
andb
pushf
mov
or
cltd
into
dec
cld
test
mov
xor
fiaddl
and
mov
leave
in
adc
xchg
ljmp
mov
cli
aas
mov
pusha
jbe
pop
mulb
add
out
movsl
loop
add
fldl
leave
out
in
xor
loop
pop
fdivs
aas
xchg
sarb
mull
jg
loope
xchg
mov
insb
test
and
lcall
jg
popa
outsb
sub
dec
mov
test
cmp
test
shrl
mov
inc
and
xor
mov
jne
ss
stos
xchg
addb
rcll
pushf
add
call
cmpsl
cmpsl
cli
addb
mov
inc
pop
scas
mov
test
mov
aaa
in
sti
fldcw
arpl
xor
shll
push
scas
dec
adc
push
loopne
decb
dec
inc
mov
movsl
and
xchg
inc
jl
jnp
pop
sarb
lds
sub
cmc
cmc
push
or
mov
cmc
cltd
xchg
jecxz
sub
mov
stc
cmc
pop
dec
jbe
dec
cmp
adc
xor
adc
push
xchg
ja
test
fldcw
inc
loope
adc
in
xorb
pop
icebp
hlt
push
push
out
ja
inc
push
daa
mov
repnz
je
and
rep
jecxz
ljmp
xor
hlt
js
mov
inc
jb
and
add
push
pop
mov
repz
pop
mov
jbe
fnstcw
adcl
outsb
paddb
ja
cmc
leave
and
jecxz
repnz
dec
rol
xor
push
call
push
jmp
jecxz
in
sub
cmp
hlt
xchg
add
repnz
xchg
ljmp
loopne
jns
mul
loope
mov
push
out
mov
sub
add
lret
loop
push
xor
mov
je
aaa
adc
or
in
lret
pop
stc
test
add
or
in
jmp
loopne
cmc
sub
sub
dec
jp
xchg
loopne
out
push
dec
inc
push
out
sbb
daa
xor
popa
fldl
sbb
jo
push
popa
jp
out
sbb
int
mov
lods
sete
sbb
stc
or
data16
popa
sete
pop
sbb
push
xor
popa
fnsave
sete
test
inc
xor
inc
cltd
movsb
in
sub
popf
fadds
mov
add
gs
adc
jg
outsl
dec
pop
test
mov
aaa
jb
xchg
cwtl
jnp
jmp
inc
repnz
adc
mov
bound
xor
sub
pushf
scas
jnp
movsl
lods
add
pop
inc
repnz
jmp
outsb
sub
pop
add
jmp
push
adc
mov
xchg
pop
fbstp
and
pop
outsb
adc
pushf
subb
inc
sbb
sbb
lcall
insb
cmc
inc
rcrb
cmpsb
and
repnz
mov
xchg
pusha
xchg
popf
jno
mov
pusha
cmp
inc
movsb
push
jae
arpl
nop
addr16
int3
inc
fdivs
out
add
fwait
jle
push
jns
in
pop
inc
shrl
push
pop
jbe
push
push
xor
cld
dec
movsl
xchg
sbb
std
lods
in
insb
gs
mov
mov
cmp
movsl
ret
cwtl
jae
fimuls
mov
test
sub
sbb
mov
jne
and
sbb
div
and
add
mov
add
pop
sub
adc
xor
dec
mov
leave
jmp
test
jmp
popf
fwait
cwtl
mov
pop
lret
dec
aaa
hlt
imul
imull
dec
and
or
inc
sub
mov
pop
xchg
popa
outsb
repz
mov
add
fisubs
xor
inc
shl
aam
push
sub
push
push
sub
add
leave
pusha
inc
inc
lods
ja
movsb
xor
sub
sbb
xchg
mov
and
fidivl
sbb
lea
loop
lahf
jno
das
add
lds
mov
lds
daa
in
xchg
jecxz
in
mov
add
xor
and
mov
add
xchg
cmp
inc
addb
xchg
inc
push
jo
scas
test
bnd
movsl
loop
punpcklbw
inc
insl
or
add
and
mov
inc
repz
sub
xchg
leave
xchg
push
out
mov
push
test
xchg
movsb
in
lods
pop
mov
sbb
inc
call
movsb
into
mov
and
and
mov
sub
xchg
cmp
inc
ret
and
push
sub
and
jmp
jl
jno
xor
roll
notb
loopne
jecxz
mov
cwtl
sbb
adc
scas
xor
lods
xchg
cwtl
add
mov
not
mov
arpl
into
stos
enter
xchg
in
andl
test
fmull
divb
outsb
push
in
popf
dec
jp
imul
fs
sub
outsb
mov
dec
cmpl
dec
test
shrl
add
xor
push
pop
jo
mov
fs
jge
js
arpl
cmp
outsb
movsb
aad
mov
gs
rol
cmp
sbb
pop
mov
inc
sbb
push
notl
nop
add
mul
dec
dec
adc
movsl
test
idiv
loopne
outsb
loopne
inc
aas
cmpsb
in
adc
lock
lock
addr16
nop
dec
pop
push
cmpsb
fistps
icebp
iret
les
inc
mov
mov
add
and
jae
push
jae
adc
and
and
or
sbb
out
mov
cwtl
cmc
and
xor
pop
xor
cs
lods
stos
inc
mov
cwtl
cwtl
es
or
inc
jl
add
dec
sbb
or
pop
push
mov
xchg
dec
test
es
push
das
loope
sub
es
in
push
outsb
pop
cmp
ret
mov
iret
mov
cwtl
aaa
add
mull
test
mov
outsb
push
push
in
rolb
test
jecxz
outsl
push
pop
add
adc
outsb
movsl
dec
in
mov
out
xor
in
mulb
call
add
mov
repz
sub
push
lret
lret
ss
jbe
sub
push
fs
pop
mov
inc
inc
mov
lock
enter
insb
xor
mov
xor
das
inc
cwtl
shlb
sub
xor
sti
test
lods
inc
xchg
lea
and
nop
add
int
inc
dec
ja
aam
rorl
xor
lahf
push
dec
xor
and
push
mov
jb
push
jnp
pop
es
sub
mov
cwtl
dec
jle
cwtl
sbbb
xchg
js
jg
sub
in
lahf
repz
xchg
iret
push
ret
icebp
arpl
popf
mov
cs
shll
push
fidivl
mov
xchg
adc
sbb
out
loope
fimull
ljmp
xchg
je
adc
jb
aaa
loope
inc
jb
ret
xor
sub
jecxz
mov
push
xor
sub
rcrl
cmp
jb
adc
push
pop
fucomip
adc
jl
es
sub
add
jae
ret
mov
sub
fucomp
stos
jae
mov
stos
jmp
inc
daa
and
inc
sbb
inc
sahf
inc
loopne
aaa
mov
rcll
push
outsb
fisubrl
arpl
aad
ljmp
mov
ljmp
sub
inc
jle
sub
cmp
adc
dec
dec
mov
stc
inc
push
lods
and
arpl
jns
scas
pop
pusha
test
mov
jns
in
pop
repnz
jmp
repz
jecxz
inc
out
jne
xor
aam
jo
xchg
dec
fisubl
xchg
jne
loop
xor
mov
xor
jmp
dec
es
xchg
addr16
popa
bound
push
lahf
outsl
pop
push
fnstenv
mov
push
scas
fiadds
mov
xor
divl
std
push
mov
mov
sub
out
xchg
cmp
pusha
test
outsl
jb
ljmp
mov
lahf
mov
mov
fimull
je
pop
inc
push
fistps
addr16
pushf
fstps
sbb
dec
pusha
inc
mov
ffreep
mov
loope
push
clc
sbb
test
xor
mov
push
or
aaa
lods
mov
dec
pop
mov
mov
loope
dec
mov
cltd
pusha
add
sti
scas
pop
je
into
sub
mov
xchg
push
hlt
jecxz
sub
add
inc
in
clc
xor
mov
test
pop
jb
stos
imul
test
cwtl
je
and
ljmp
in
lret
frstor
cs
shrb
nop
mov
enter
mov
push
jl
gs
imul
adc
jle
in
shlb
scas
push
xor
dec
sbb
rcrb
mov
pop
test
push
mov
xor
call
dec
movsl
aaa
push
cmpsb
fidivl
inc
lods
jecxz
gs
lods
shrb
ret
out
xor
in
xchg
aad
addr16
jae
push
sub
int
or
int3
es
push
pop
lret
les
frstor
inc
xchg
sahf
aas
movsl
dec
call
testb
test
in
in
loopne,pt
aam
cmpsl
sub
bound
aaa
loope
mov
xchg
fsubrs
cmpsl
pusha
push
daa
loope
mov
leave
ret
push
cli
fildll
insb
test
sub
xchg
outsl
ret
dec
and
lahf
mov
bound
in
xor
pop
sub
gs
cmp
sub
add
lret
sti
mov
cmpsl
xchg
in
jmp
das
repnz
imul
mov
jbe
dec
jl
sub
xchg
jg
mov
cwtl
cmp
sub
mov
xchg
imul
inc
or
jne
shll
add
test
xor
cmpsl
xchg
xchg
cwtl
insb
mov
xchg
pop
mov
or
popa
leave
or
mov
loop
inc
cmp
push
sub
cs
push
std
ds
lret
scas
adc
out
or
rorl
fcompl
dec
and
inc
jnp
xchg
jne
lods
xor
outsl
push
les
mov
jmp
int
push
clc
inc
add
nop
ds
jb
stos
lcall
sub
lret
adc
inc
push
cltd
add
rcrb
cwtl
into
add
and
je
cmpsl
pushl
mov
add
sub
ss
aaa
push
cmc
and
outsb
mov
fildll
cmpsb
push
addr16
aaa
shll
sbb
data16
add
xchg
leave
loopne
in
outsb
imul
dec
pop
popl
shll
sbb
enter
and
xor
jns
push
fld
daa
jecxz
mov
inc
fildl
movsl
outsl
ja
xor
in
adcl
mov
mov
or
xor
ret
dec
arpl
sub
jle
xor
sahf
arpl
sub
jo
movsb
int
inc
aaa
popa
pop
es
pop
jne
and
ret
inc
iret
dec
mov
mov
lret
and
test
imulb
cmpl
jbe
sub
adc
enter
jecxz
sbb
aaa
adc
jecxz
xor
stos
loope
cmpsl
aas
pop
scas
push
movb
and
rcrl
xchg
lock
out
xor
or
xor
xor
sub
pop
pop
mov
movsb
mov
insb
aam
lea
xorl
arpl
sbb
push
xchg
and
outsl
pop
adc
mov
repz
jge
in
sub
dec
dec
je
into
hlt
rol
ds
xor
outsl
stc
mov
xchg
aaa
arpl
shrl
loope
mov
dec
push
mov
pusha
imul
fnstsw
and
ja
sbb
pop
ret
inc
dec
jb
clc
fisubrs
adc
sub
mov
test
popf
incl
xor
out
movsl
into
dec
jae
mov
adc
arpl
and
jb
out
adc
add
je
push
push
jo
adc
pop
xor
jae
pop
adcl
jno
jne
push
jb
rcrb
loopne
rcll
orb
faddl
jns
xor
addr16
repnz
hlt
xor
adc
outsb
mov
pop
mov
mov
outsb
add
pusha
pop
mov
stos
jo
xchg
leave
push
sbb
pushf
push
mov
xchg
imul
rclb
add
outsb
pop
in
inc
push
jne
dec
sbb
hlt
cwtl
jno
insl
sarl
push
push
pop
xor
dec
fbld
addl
sub
sub
fisubrl
mov
loop
push
adc
and
jo
addr16
out
add
movsl
mov
pop
fsincos
loope
push
mov
pop
xchg
sub
mov
mov
pusha
mov
mov
dec
jg
icebp
cwtl
jb
es
pushf
rcrb
push
aam
repnz
ret
shll
loopne
pushf
cmp
jmp
ja
in
pop
inc
jns
in
js
stos
sub
push
scas
inc
add
ss
call
test
mov
xchg
repz
mov
jmp
sbb
jg
popa
lods
push
and
cmpsl
sub
iret
mov
push
imulb
mov
jae
es
and
insb
inc
inc
cmc
iret
ret
xchg
sub
jg
fs
push
pop
lds
push
dec
xor
push
or
cmpsl
movsl
insl
fistpll
hlt
fmull
sbb
adc
pop
hlt
rcrb
insl
jp
fiaddl
movsl
mov
mov
xchg
test
mov
lods
roll
orb
mov
adc
cwtl
pusha
sbb
in
jmp
mov
out
ret
or
bound
stc
jmp
sub
inc
mov
sub
sbb
or
xchg
mov
movsb
push
fidivl
lret
lock
mov
xchg
sub
mov
ljmp
jnp
inc
scas
xor
ljmp
clc
repz
inc
lcall
cmpl
cltd
inc
mov
add
push
push
add
mov
add
loope
inc
movsl
mov
add
xchg
pop
push
ret
xchg
xchg
insl
sub
ficoms
mov
aaa
xchg
push
loope
iret
scas
sahf
je
and
loopne
sub
xchg
loope
shlb
arpl
std
cmp
outsb
cltd
sub
dec
shrb
insl
add
and
mov
shll
xchg
sti
fcomps
inc
test
cltd
add
nop
clc
ret
fs
adc
sub
push
add
adc
es
sbb
push
inc
scas
movsl
shlb
ljmp
sub
clc
push
jbe
xchg
sbb
and
loopne
repz
cld
out
mov
jl
das
aad
loop
loop
and
mov
push
xchg
push
test
adc
jge
push
ljmp
cmpsl
mov
adc
xchg
cltd
hlt
fiadds
adc
test
mov
aas
out
cmp
fwait
bound
xchg
sahf
push
inc
inc
arpl
test
mov
loope
mov
lods
add
mov
shll
and
or
outsb
mov
inc
dec
mov
loopne
movsl
cmp
ds
mov
add
cmpsb
stos
or
mov
xchg
imul
and
lea
test
push
lock
enter
cmp
mov
add
aad
lret
in
mov
push
es
ficomps
repz
fidivs
mov
jnp
es
add
lods
into
jbe
negb
lret
sub
push
shlb
inc
das
ljmp
loope
jecxz
jb
loope
loope
and
jmp
arpl
loope
insb
pusha
pusha
jl
inc
mov
add
mulb
loope
inc
ficoml
xor
and
adc
or
cwtl
mov
ret
mov
jno
movsb
lahf
mov
mov
jae
loopne
push
repz
adc
sub
jmp
sub
sbb
outsb
out
das
in
and
xor
shl
xchg
mov
decl
stos
and
mov
loopne
rcll
lahf
aas
push
jmp
enter
mov
mov
jg
mov
in
das
jns
lds
and
mov
jbe
push
stos
aaa
and
or
hlt
inc
sti
mov
pop
insl
adc
inc
repnz
outsb
xor
jecxz
jne
inc
xchg
mov
xchg
mov
loope
mov
mov
and
out
xchg
mov
and
inc
loope
pop
fs
cmp
dec
popf
decl
mov
xchg
enter
mov
into
movb
mov
dec
jns
outsb
loop
lds
mov
inc
mov
lcall
cmp
rcrl
out
dec
loopne
fsts
mov
leave
push
fdiv
arpl
rclb
ret
mov
inc
jecxz
mov
shll
push
clc
ror
add
jecxz
mov
addb
dec
pop
mov
in
cltd
ljmp
dec
mov
imul
data16
mov
movsl
enter
outsl
aaa
ret
inc
outsl
repz
lods
pop
mov
add
mov
incl
adc
mov
outsb
add
test
leave
pop
adc
xor
loop
out
pushf
arpl
sti
test
jg
or
adc
ret
jecxz
pop
es
jbe
into
mov
xchg
pushf
xchg
and
hlt
mov
jmp
movsl
jnp
jne
fidivl
ja
mov
js
push
adc
mov
cmp
and
ja
ds
mov
movsl
mov
dec
adc
insl
incb
sub
pop
xor
mov
and
and
xchg
hlt
mov
mov
outsb
mov
pause
or
shrb
dec
cmpsb
lea
popf
adc
jno
add
xor
je
add
push
mov
push
or
sbb
inc
testb
negl
mov
mov
xor
enter
loope
mov
and
popf
ljmp
hlt
and
sbb
and
fs
mov
inc
hlt
loopne
jl
sbb
popf
dec
add
and
hlt
or
imul
outsb
inc
repnz
lahf
dec
in
iret
add
sbb
and
bound
in
cld
repnz
mull
daa
pop
mov
jb
pop
es
adc
stc
jae
fcomip
pop
ja
rcrl
or
out
jg
adc
push
imul
pop
sbb
cmpsl
push
cld
pop
nop
or
loopne
dec
add
cmp
repnz
loop
and
pop
inc
jns
mov
popl
cwtl
sub
cmp
push
and
movsb
cmp
ret
jo
add
call
pushf
pop
out
mov
adc
loop
push
popf
shlb
and
push
ret
cmc
adc
rorb
jecxz
movsl
in
cmpsb
inc
out
movsl
adc
sbb
cwtl
or
pop
mov
outsb
push
push
test
jno
add
outsb
mov
push
cld
push
fmull
dec
repnz
cmpsb
movb
jb
leave
ret
and
pop
hlt
and
jge
pop
push
xchg
fstps
mov
in
in
pop
test
sub
fcmovne
ss
push
add
hlt
rorb
mov
orl
pop
in
and
mov
inc
ljmp
dec
xor
xor
inc
addr16
loope
mov
xor
mov
gs
outsl
xor
cli
imul
mov
inc
xor
mov
pop
std
leave
insb
int
shlb
inc
jle
mov
jo
fcom
mov
test
movsl
pop
cmp
ret
jecxz
enter
movsb
lcall
adc
cmpsb
push
dec
pop
xor
fistl
popa
mov
and
scas
shlb
xor
jge
add
aas
loopne
xchg
jns
cwtl
adc
ljmp
and
xor
jb
aam
and
dec
xor
cli
mov
xchg
test
or
int
xchg
rcl
xchg
adc
nop
dec
addr16
cmpsb
xchg
insl
xchg
cmp
push
das
cmc
jecxz
movsl
xor
lds
insb
jge
rcrl
arpl
loop
jnp
inc
imul
dec
push
sbb
pushf
push
lds
push
mov
or
dec
push
pop
push
push
push
and
fisubrs
lahf
arpl
or
jne
insb
inc
test
mov
test
in
aad
xlat
push
aam
dec
sub
mov
mov
xor
sub
ficoml
and
mov
sbb
insl
inc
xor
div
pop
lea
cmpsl
test
xchg
dec
inc
ficoml
test
out
mov
movsl
lret
inc
cmp
pusha
jae
cmpsl
xchg
mov
adc
mov
push
sub
test
jmp
push
adc
mov
xor
mov
andl
mov
and
je
or
insb
sbb
ss
imul
subb
push
mov
ret
fcomp
adc
pop
jecxz
arpl
mov
je
stos
jg
insl
jg
lret
imul
test
out
jbe
into
je
dec
rcrb
call
mov
xchg
sub
cmp
and
push
shrb
into
xchg
mov
in
stc
xlat
dec
mov
rolb
cltd
cltd
cmpsb
push
pushl
mov
loopne
inc
loope
xchg
das
dec
jecxz
jb
add
and
xchg
mov
push
sub
push
push
loope
out
cs
cwtl
mov
jl
jne
add
aaa
mov
shrb
loop
lcall
addr16
lret
in
pop
in
test
pop
mov
push
jne
xlat
cwtl
repnz
ret
cmp
jg
sub
outsb
dec
cmpsl
xchg
push
out
subb
push
fwait
jl
insl
adc
dec
addb
mov
movd
ret
pop
push
test
cmc
andb
mov
mov
or
outsb
lds
cld
imul
sub
les
mov
addr16
or
push
xlat
scas
pop
inc
shrb
inc
mov
push
std
adc
sbb
jmp
scas
imul
mov
mov
daa
add
fstpt
add
and
cmc
das
push
xor
or
fisubl
stc
lds
ds
outsb
mov
sub
or
shlb
jno
loope
xor
push
jne
sbb
add
loope
jecxz
mov
mov
push
std
ret
nop
in
jb
mov
push
mov
pop
fisubs
fimuls
pop
mov
and
jbe
inc
mov
nop
stos
aam
xchg
daa
nop
xchg
and
jmp
es
jg
popa
aaa
std
pinsrw
je
pushf
fxtract
mov
or
outsl
test
xchg
jecxz
xor
mov
mov
in
nop
repnz
pusha
jmp
xchg
xor
stos
push
ds
cmp
cmp
cmp
mov
inc
mov
jb
mov
sbbb
adc
je
push
in
jno
cmp
fisubrl
dec
das
hlt
aam
cs
pop
xor
mov
jb
or
mov
add
test
sti
sbb
xchg
inc
lea
sbb
aad
sbb
pop
cmpsb
gs
call
pop
xchg
test
ss
and
jle
test
xchg
xor
sbb
in
push
dec
mov
sub
lahf
cmc
loop
addr16
push
push
fisubl
or
inc
imulb
mov
ficomps
loope
repnz
insl
clc
cli
xchg
pop
movsb
pop
cwtl
in
leave
push
js
pop
mov
sbb
mov
mov
and
push
push
add
jb
mov
jmp
inc
fisubrs
fisubl
lret
iret
and
mov
in
ds
rorb
inc
hlt
insl
adc
push
xor
movsl
push
insb
lret
je
cmp
mov
or
sub
mov
shrl
ret
sub
pusha
std
push
dec
xchg
std
pushf
adc
push
dec
clc
cwtl
pop
jno
mov
stos
shlb
xor
subb
loope
jnp
pop
pushf
sub
add
push
stos
std
sub
addr16
daa
les
fsts
push
je
repnz
test
sarb
jge
sub
sarb
jne
and
fisubl
loope
dec
sub
or
fucom
and
movsl
xlat
and
fwait
ss
popf
mov
xor
mov
mov
scas
and
and
arpl
aas
dec
push
cld
scas
adc
rcrl
scas
pop
stc
dec
jecxz
jb
mov
add
xchg
out
bound
or
ljmp
mov
mov
mov
out
lea
pop
inc
mov
mov
fldenv
mov
xchg
push
imul
mov
push
outsb
mov
pop
xchg
gs
cs
and
cwtl
out
lods
movsb
dec
add
inc
push
jb
jecxz
inc
push
and
mov
mov
sub
sbb
add
mov
mov
loopne
daa
dec
mov
pop
adcl
adc
ret
inc
popa
outsb
es
cwtl
dec
mov
xlat
jnp
pusha
add
sub
rolb
pop
mov
mov
inc
ljmp
subl
fildll
fwait
test
add
sub
xchg
rorb
jecxz
push
in
xchg
cwtl
xchg
divb
mov
fdivr
dec
mov
push
out
xlat
arpl
or
mov
hlt
dec
insl
fcoms
aad
adc
out
xchg
xchg
inc
scas
mov
scas
adc
inc
les
adc
aad
outsb
mov
incl
insl
lcall
sbb
fbld
push
jecxz
mov
sub
sti
lods
loop
stos
jmp
adc
and
aaa
sti
testl
xorl
cld
stc
pop
pop
pop
xchg
ljmp
ljmp
add
mov
jmp
add
jnp
test
push
sbb
pop
jo
adc
dec
or
arpl
movsl
inc
mov
into
mov
icebp
sti
add
mov
xor
jg
dec
sbb
jmp
hlt
jecxz
loope
int3
fadd
repnz
inc
pop
iret
mov
nop
nop
cwtl
dec
mov
xlat
ficoml
sub
sbb
pop
and
adc
cs
pop
fucomp
fdivrs
lods
push
sbb
pop
jnp
xor
pusha
sub
cld
fcmovu
cmpb
jecxz
outsb
gs
scas
ror
pop
mov
mov
aam
mov
lret
mov
shr
aam
mov
inc
dec
sub
sub
pop
fcomp
dec
xor
mov
loop
insb
sti
inc
pop
cmpsl
stos
mov
sub
and
sbb
or
push
mov
inc
and
test
push
push
xor
outsb
push
mov
arpl
incb
and
mov
fldenv
and
jne
sbb
ret
pushf
push
daa
mov
in
addr16
mov
rorb
xchg
inc
lea
inc
cmp
lea
stos
test
loope
addr16
sbb
jecxz
bnd
call
outsb
mov
push
push
mov
rcrb
jge
push
imulb
fsts
dec
sahf
int
cmc
push
jno
push
xor
jno
shrl
frndint
ja
lret
dec
stc
adc
push
jb
in
test
mov
mov
std
push
fidivl
cld
aad
in
ficoms
es
lahf
push
mov
shlb
cmpl
aas
xchg
mov
adc
not
aaa
pop
imul
setg
shll
sbb
mov
cvtpi2ps
cmc
cmc
pusha
cwtl
les
jbe
xchg
xchg
xor
push
bound
pop
dec
test
dec
out
scas
aam
mov
jne
sub
xlat
ljmp
addr16
je
mov
sub
test
xor
push
xor
mov
fisubrl
lods
scas
mov
ja
jecxz
push
mov
je
das
fidivl
pop
jns
in
mov
pop
add
mov
test
xchg
sub
push
sub
call
pop
fadd
inc
pop
jb
xlat
dec
call
addr16
dec
inc
xchg
sub
push
fiadds
add
lret
mov
iret
mov
fdivrs
dec
psubq
call
rcl
shlb
pop
sbb
mov
test
push
aam
lds
sbb
pop
adc
jp
push
dec
fcomps
sub
idivl
push
and
sub
mov
and
scas
lret
imul
mov
push
jmp
dec
jecxz
es
inc
mul
cmpsb
aas
or
fisttpll
mov
and
mov
ret
sbb
xor
js
and
cmp
pusha
xchg
movsb
aaa
repz
jecxz
rol
adc
pop
xchg
sub
test
inc
es
outsb
ljmp
pop
xor
cwtl
repz
movsb
nop
cmp
inc
pop
jne,pt
test
js
jecxz
jl
xor
aaa
andl
pop
push
and
stos
sbb
mov
out
fcompl
mov
dec
pop
jnp
and
inc
lret
arpl
push
cmp
pop
mov
mov
loop
or
sbbb
jne
push
cwtl
testl
frstor
xor
dec
xchg
insl
adc
jcxz
negb
cmp
push
pusha
andl
sbb
ljmp
loop
inc
push
inc
loope
into
push
pusha
push
loop
push
mov
mov
xchg
cwtl
outsl
js
pusha
addl
inc
je
push
dec
loop
call
sbb
xor
mov
xchg
mov
je
jb
jmp
mov
mov
test
adc
call
fistl
mov
push
xchg
dec
sbb
mov
out
mov
std
mov
sub
out
outsb
arpl
stos
and
sub
pop
jo
adc
mov
xor
or
push
cli
mov
test
outsb
cs
or
mov
mov
xor
stos
into
fxch
decb
loope
add
push
pop
add
repnz
imul
insb
cmpsl
das
arpl
add
sbb
scas
jle
ljmp
stos
std
push
cmpsl
into
push
mov
xchg
repnz
sub
jnp
sub
pusha
aam
js
jmp
sub
adc
xchg
pop
push
pop
and
sub
pusha
push
lcall
push
imul
lods
mov
cld
jno
jmp
jb
ljmp
xor
jecxz
inc
sub
aaa
xchg
jg
imulb
pop
xchg
sub
and
ljmp
adc
ljmp
int
mov
ds
dec
and
mov
push
or
and
push
imul
mul
jmp
pusha
sub
rcl
and
shrl
xchg
arpl
xorl
stos
repnz
test
or
imul
fsubrs
or
mov
jecxz
dec
jmp
pop
rcrb
outsl
inc
imul
leave
out
dec
in
aaa
test
sub
xchg
push
dec
inc
repnz
sub
and
rorl
shrb
jecxz
mov
jbe
cmpsl
pushf
pop
pusha
add
aam
mov
xchg
and
mov
mov
and
inc
jmp
sub
insl
dec
pop
sbbl
insb
iret
enter
xor
jle
sbb
cmp
sub
jne
sbbl
mov
mov
aas
test
loope
add
adc
xor
adc
aad
test
shlb
xchg
fmull
push
mov
mov
mov
dec
fldl
gs
aaa
mov
xor
lret
pushf
imul
pusha
push
and
iret
decl
mov
ret
and
sub
pop
sbbb
ja
popa
pop
mov
xchg
mov
idivb
mov
hlt
pop
sub
sbb
loop
lret
xor
jge
movsb
jmp
sbb
adc
jg
inc
lock
and
xor
and
mov
rorb
mov
dec
ret
push
mov
fstl
cwtl
fcoml
or
ljmp
popa
addl
cmpsl
mov
mov
outsl
push
test
pop
test
call
lea
mov
je
int
shl
and
pop
mov
test
inc
adc
bound
sbb
pop
dec
mov
sub
fwait
hlt
lock
push
push
fdivrp
and
push
test
mov
xchg
icebp
adc
mov
add
inc
aas
and
push
push
hlt
xchg
aaa
push
shr
cs
mov
jno
mov
push
aam
repnz
fnstcw
or
jo
xor
push
inc
mov
test
icebp
faddl
adc
loop
mov
xor
pop
test
add
imul
inc
into
dec
dec
hlt
loope
push
les
sub
roll
insb
push
xor
mov
sarb
aam
push
inc
addb
push
loopne
daa
sub
and
pop
xor
sbb
aaa
rcll
cmp
xchg
ds
scas
jg
popf
sub
and
lds
js
sub
dec
scas
mov
and
and
push
pop
xchg
sub
push
sub
pusha
add
lret
pusha
push
push
and
test
add
mov
ret
mov
shll
loopne
sub
je
repnz
push
cmp
add
test
jp
jbe
loop
inc
pusha
dec
pop
es
stos
mov
xor
dec
test
mov
fdivrp
inc
notl
repnz
sub
daa
mov
or
mov
adc
lret
xchg
dec
fcmovb
push
inc
int3
pop
in
push
sub
xchg
dec
out
mov
ficompl
sbb
out
leave
adc
ret
add
xor
fucomip
pop
outsl
and
inc
inc
ds
inc
popa
bound
adcb
mov
xor
hlt
xor
sub
mov
cli
ljmp
lods
loopne
fwait
adcb
sti
and
and
push
push
sbb
fistps
xchg
pusha
in
xor
push
idivw
or
bound
xor
mov
mov
into
mov
xchg
outsb
dec
in
cmpsb
adc
jb
adc
faddl
adc
mov
fsubrs
sbb
scas
dec
les
lret
adc
fsubrs
aam
xchg
insb
pop
rcl
addl
ret
addb
mov
mov
xchg
sbb
ss
and
aad
imul
inc
jne
ret
dec
adc
clc
xor
mov
lahf
mov
jbe
xchg
pop
shl
push
adc
sbb
and
jo
mov
xor
pushf
fucomp
xchg
out
xchg
sar
inc
addr16
push
addr16
testb
mov
mov
dec
lds
in
ds
test
jbe
out
repnz
dec
in
into
sbb
mov
xlat
notb
and
in
dec
mov
ss
sbb
test
subl
and
pop
out
and
add
inc
test
fwait
addl
sahf
push
dec
mov
sub
sahf
aaa
xchg
push
out
jl
cwtl
das
mov
les
bound
mov
mov
insb
test
pop
leavew
sub
imul
cmp
loop
inc
aad
and
or
xchg
stos
xchg
add
jg
sub
fistpl
adc
cmpsl
xchg
test
hlt
lret
add
pop
add
inc
ret
mov
cmova
push
aad
nop
push
or
mov
or
out
dec
das
sarl
sub
lahf
cmp
arpl
orb
inc
and
sub
es
adc
jae
imul
jl
andl
xor
jl
mov
sbb
out
insl
es
push
push
add
pop
in
xchg
jo
dec
je
arpl
outsb
rcrb
jmp
data16
fwait
adc
xor
mov
leave
dec
jge
push
imul
jnp
stos
push
adc
imull
sub
and
roll
cmp
xchg
neg
inc
adc
lods
stos
pop
lds
inc
loop
loop
loop
xor
cwtl
shll
add
mov
mov
shlb
outsb
rolb
std
test
ljmp
sbb
call
xor
jl
sub
xor
divb
and
ljmp
addl
jo
sbb
dec
fistpl
push
dec
push
repnz
inc
out
add
mov
mov
xchg
dec
xchg
ficompl
cmpsl
cmp
xchg
xchg
mov
mov
xor
mov
push
loope
shl
jbe
mov
shll
dec
jp
dec
mov
das
cli
push
arpl
jmp
xchg
pop
lea
adc
in
sub
lret
insb
sub
icebp
movsb
jne
and
mov
mov
xchg
fbstp
stos
mov
jecxz
sahf
mov
inc
mov
and
and
repnz
in
aas
mov
stos
push
lea
in
test
cmp
inc
xchg
and
shlb
ficoml
or
cmpsl
sbb
filds
insb
mov
faddl
enter
mov
aam
and
sbb
add
sub
arpl
movl
aad
xchg
pop
push
jl
es
push
hlt
jle
or
movb
imul
or
inc
mov
xchg
lret
mov
or
fcom
ret
push
movsl
in
aaa
aaa
mov
outsb
in
lods
mov
inc
dec
adc
push
jne
or
mov
ds
ljmp
std
push
push
xchg
test
push
in
inc
xor
and
inc
loope
sub
aaa
jle
lock
nop
push
push
cmpsl
loop
xchg
dec
outsb
xchg
fwait
jne
mov
lock
xor
push
in
lahf
cmpsl
sti
and
xchg
out
sub
mov
pop
fisttps
sbb
mov
xchg
dec
je
test
jae
mov
or
jecxz
movsl
sbb
pop
xchg
je
inc
loope
ds
bound
into
xchg
xor
or
push
push
mov
mov
push
mov
je
mov
lds
popa
movsb
pop
pop
notb
leave
mov
addr16
es
push
shlb
mov
loopne
push
xor
mov
mov
sbb
adc
xor
sub
mov
popf
add
into
push
mov
popa
imulb
lds
and
movsl
decb
scas
adc
add
int
dec
lcall
mov
mov
movsb
pop
repnz
test
push
cwtl
sub
dec
push
jbe
sbb
mov
push
test
push
add
test
xchg
sti
cwtl
cmc
dec
inc
pop
xor
call
xchg
pop
mov
fisubl
or
loop
mov
xor
loope
sub
ss
push
jmp
lods
jbe
push
cltd
or
xor
inc
inc
divb
xchg
xorb
push
insb
fcmove
sub
sub
dec
mov
mov
into
arpl
stos
adc
push
cmp
lods
adc
xchg
lods
insb
dec
xor
dec
aas
cmpsl
dec
sbb
xchg
inc
jne
idiv
repz
je
mov
test
jae
mov
ret
fisubs
int3
divb
xchg
jecxz
mov
jbe
in
lret
out
stos
mov
loopne
ror
fidivl
sub
xor
popf
mov
and
rcrl
gs
xchg
sahf
mov
arpl
out
mov
loope
es
lods
adc
xchg
push
jmp
push
shll
sti
xor
cs
jnp
sbb
pop
insb
sbb
mov
addr16
mov
ljmp
js
jmp
in
ret
andb
xchg
xor
mov
push
and
ja
mov
shrb
dec
push
rorl
nop
and
sub
mov
add
sbb
ljmp
lea
or
xchg
push
test
aaa
mov
jecxz
enter
out
sub
test
pop
jbe
or
fs
fildl
test
pop
sub
and
insl
cmpsl
or
jmp
int
pop
fwait
xchg
je,pt
loop
adc
push
movsl
mov
hlt
push
cmp
lods
sbb
in
loope
ss
clc
mov
mov
popa
mov
std
leave
mov
xchg
aaa
mov
dec
imul
xchg
test
push
inc
test
lret
les
test
mov
cmp
mov
enter
dec
and
imull
loope
xchg
les
push
xchg
push
in
mov
test
call
into
mov
sbb
jecxz
sub
lcall
shl
iret
and
dec
icebp
sub
loope
jle
shr
pop
sti
xchg
xchg
mov
in
inc
mov
mov
mov
outsb
inc
fisubl
ds
mov
sbb
add
jae
pusha
test
cmp
movsb
pop
and
loopne
in
mov
pop
shlb
jbe
inc
mov
xchg
addr16
adc
pop
mov
dec
fcmovbe
mov
fiaddl
push
jo
enter
imul
mov
shrl
movsl
call
xchg
je
jbe
loop
jne
and
call
lcall
lds
in
ss
dec
das
adc
pusha
lahf
jge
inc
sub
xchg
idivb
jae
cld
add
or
ror
jb
and
out
sbb
xor
and
or
pop
shlb
mov
adc
and
addr16
or
pop
ret
mov
cltd
mov
test
cmp
lcall
out
jge
clc
dec
dec
pop
adc
aam
cmc
and
insb
lods
pop
leave
out
icebp
push
mov
xor
jle
jle
stos
push
mull
xchg
push
movsl
push
pop
mov
movsb
popa
sub
push
dec
dec
xchg
push
hlt
pop
das
aaa
dec
xor
xor
dec
cmp
pop
pop
xchg
push
or
cmpsl
or
stos
push
push
sub
rcl
inc
cmp
out
ret
sub
lods
flds
stos
adc
fbld
fbld
pop
pusha
jg
test
xor
sbb
mov
jo
call
mov
xor
jg
mov
jbe
and
fildll
fwait
bound
into
shlb
jnp
jmp
in
lret
test
adc
adc
lret
hlt
xchg
mov
sbb
cmp
popf
stos
inc
and
push
cld
cmpsl
pop
push
dec
pop
xorb
or
fcmovbe
js
xchg
stos
out
sbb
xor
jle
pop
pop
mov
inc
pushf
push
pushf
and
cmp
outsb
cmp
inc
add
fidivrs
xchg
dec
icebp
push
xor
mov
mov
ja
push
xor
adc
test
xbegin
iret
rcrb
loope
inc
or
and
push
sbb
mov
sbb
push
in
addr16
or
mov
jg
sub
push
jmp
add
pusha
arpl
mov
push
jbe
je
xor
push
mov
pop
jmp
in
inc
push
or
fdivs
pop
jecxz
xor
xorb
jmp
movsb
push
out
mov
sub
and
sahf
sbb
aas
enter
leave
testb
xchg
dec
imul
nop
jb
lret
les
ficoml
movsl
sahf
mov
push
call
mov
cmp
aaa
xorl
sbb
inc
add
xor
imul
imul
lret
mov
outsb
mov
in
jbe
and
mov
test
dec
mov
test
dec
mov
std
dec
cmpsb
fldenv
rcll
addr16
pop
jp
inc
cltd
outsl
add
stc
mov
insb
test
xlat
es
inc
adc
cmc
xor
xlat
adc
mov
jg
std
dec
push
sbb
jb
and
bound
cli
dec
push
jecxz
addb
xchg
adc
mov
popa
push
out
movsl
push
add
ja
imul
cmc
aam
adc
imul
pop
fldenv
inc
mov
xchg
call
dec
bound
push
pop
stos
arpl
rclb
mov
mov
rolb
xchg
clc
ret
mov
or
sub
mov
sahf
lock
scas
movsl
scas
insl
mov
sbb
mov
or
outsb
push
dec
cs
inc
xor
jle
and
mov
aaa
cmc
push
outsb
dec
fdivrs
cmp
pop
mov
dec
push
push
sbb
push
cmpsl
add
int3
mov
or
sti
lahf
sarb
js
push
and
mov
jb
mov
pop
fimuls
cmc
fdivrl
xlat
loope
loop
xchg
mov
sbb
jle,pn
mov
bound
dec
imul
test
xor
push
imul
push
sub
push
in
dec
in
adc
das
addb
sahf
ja
leave
jecxz
fistl
outsl
jge
es
cmpb
mov
jbe
mov
adc
adc
inc
fiaddl
push
adcb
lods
arpl
pop
scas
jns
add
mov
iret
jnp
sbb
lea
mov
das
lods
leave
mov
jl
in
imulb
sbb
orb
add
outsb
mov
xor
fbstp
inc
sub
xor
ret
cmp
mov
je
add
mov
push
mov
push
jnp
ja
or
insl
cmc
rcll
xchg
ret
pop
mov
mov
pusha
loop
push
mov
and
adc
cld
sub
mov
shlb
leave
ljmp
xor
dec
das
sahf
fcmovbe
mov
hlt
add
sbb
js
pusha
dec
loop
add
push
push
in
push
mov
and
adc
enter
stos
std
jle
mov
addr16
icebp
cmpsb
xchg
or
and
push
inc
inc
mov
pushf
idivb
pop
adc
repz
and
fucomp
loop
outsb
jbe
ret
push
fs
push
rcr
mov
in
jg
mov
mov
mov
pop
push
popf
pop
test
imulb
push
and
push
in
jle
xor
jle
js
jl
jb
mov
jl
sub
cmp
dec
dec
xchg
sbb
sti
jl
rcrb
jne
scas
cmp
sbb
shlb
int
dec
jecxz
rclb
notl
bound
mov
cmc
xor
mov
lahf
dec
push
jne
xlat
daa
mov
mov
xor
pop
fdivs
xchg
push
test
hlt
pop
pusha
xchg
sbb
ds
push
enter
cld
push
cmpsl
adc
fcompl
clc
add
scas
movsb
rcll
loop
mov
and
mov
shlb
push
mov
jo
xor
jecxz
mov
and
hlt
adc
movsl
pop
inc
icebp
ljmp
imull
and
bnd
dec
arpl
add
inc
mov
mov
push
addr16
out
inc
movsb
ret
es
repnz
mov
rcrb
fs
push
lcall
test
rclb
mov
push
in
fisttps
add
cmp
adc
adc
push
stos
movsb
jno
jae
mov
ret
push
loop
xchg
test
add
or
cmp
cld
into
insb
fincstp
pusha
ret
dec
repnz
sub
aam
fldenv
arpl
sbb
or
lcall
lds
and
and
in
imul
or
xor
and
mov
push
jne
leave
cld
sahf
sbb
je
sub
div
sti
popa
jns
lea
addr16
fcompl
sbb
dec
push
add
cs
mov
mov
mov
sub
jo
adc
in
mov
in
fistpll
dec
add
inc
hlt
pop
popa
inc
xlat
movsl
and
mov
pop
sbb
aaa
popa
mov
sbb
and
es
dec
add
cmc
sahf
mov
xchg
ss
outsl
mov
out
mov
ja
cs
sahf
mov
dec
into
cmc
pop
sbb
loop
add
pop
inc
jae
inc
push
mov
out
dec
xchg
xchg
inc
jmp
ljmp
pusha
xchg
fwait
or
in
fldl
push
jb
push
cmc
out
mov
fmuls
add
insl
outsl
filds
push
and
mov
inc
adc
dec
dec
jp
jno
sub
fwait
stos
aas
cs
mov
aaa
je
sub
cmp
xlat
imul
les
ror
cltd
ss
hlt
dec
cmpsl
lcall
mov
or
push
sbb
inc
sbb
jp
divb
in
insl
jmp
jne
lods
bnd
dec
shlb
xor
mov
lret
sbbb
or
jge
cmp
dec
int
pop
ret
stc
jl
daa
jg
cld
out
add
push
je
xchg
test
outsl
sbb
cmpsl
fisubrl
enter
mov
sbb
add
xchg
es
mov
and
inc
dec
ss
cld
stos
aam
jge
lods
sbb
push
outsb
test
sub
jne
jb
std
xchg
hlt
mov
mov
enter
mov
js
repz
cmpl
or
sarb
or
jb
push
lds
movb
hlt
sbb
iret
cmp
jb
inc
movsb
iret
mov
push
cli
popa
lret
imul
lock
roll
addr16
cmp
ljmp
mov
fimull
push
lahf
pop
imulb
jmp
mov
inc
dec
push
add
jno
and
and
test
jle
sahf
jbe
mov
scas
or
and
inc
dec
je
xchg
mov
xchg
xchg
into
pusha
and
movsb
outsl
out
mov
xorb
push
sbb
adc
xor
jb
mov
rolb
dec
in
in
xchg
aas
pop
inc
and
cwtl
aaa
push
lcall
aam
jecxz
push
les
xor
pop
scas
mov
adc
subl
repnz
fwait
jnp
mov
mov
cmc
lea
repz
or
ss
pop
xor
movsl
xor
and
insb
inc
ss
cmpsl
daa
pop
bound
mov
and
xchg
xchg
out
ljmp
dec
loope
ja
pop
rclb
mov
insl
and
out
scas
rcll
add
jo
movsb
mov
or
ficoml
rcll
mov
dec
test
dec
inc
arpl
movsb
popa
arpl
jbe
movsb
jbe
add
inc
shll
aas
popa
adc
dec
ret
ret
cmpsl
xchg
xchg
cmc
out
cli
sub
aam
jbe
test
mov
xchg
lahf
lods
sbb
fmuls
inc
push
cmp
ja
std
cmc
in
jmp
and
xor
sub
push
addr16
notb
hlt
xchg
mov
mov
mov
xor
fwait
inc
push
out
mov
inc
popf
scas
fsub
mov
movsb
sbb
sti
enter
hlt
repz
hlt
and
jbe
add
stos
sahf
sub
jo
lahf
into
xor
mov
imulb
xchg
inc
mov
shrb
inc
in
mov
idivb
mov
or
or
pop
fwait
and
sub
incl
lcall
push
pop
mov
out
mov
movsl
cld
in
scas
mov
outsb
mov
dec
pop
mov
push
and
bound
cmc
div
sbb
loop
cmpsb
inc
sub
mov
dec
aaa
mov
xchg
cmp
enter
movaps
or
mov
inc
jnp
pop
add
scas
jne
loop
aaa
mov
add
sti
dec
mov
and
out
not
lods
or
inc
add
in
push
cmpsl
bound
mov
sub
insl
jbe
dec
in
and
mov
outsb
xor
int
sub
sub
dec
push
fninit
and
mov
rcl
jmp
jp
lock
stos
das
fs
int
push
stos
jmp
scas
in
push
test
sahf
sbb
in
outsb
pop
test
jl
inc
ss
rcr
inc
out
mov
adc
call
lcall
hlt
iret
cwtl
stos
mull
push
sbb
jp
stos
xchg
jle
sahf
dec
scas
cwtl
xor
xchg
fisubs
jge
ret
xchg
push
cwtl
jecxz
mov
jmp
sub
pop
in
rcrb
cmpb
mov
bound
test
xor
pop
push
dec
and
mov
fwait
loop
dec
pop
and
lods
loop
into
and
xor
int3
into
mov
xor
mov
and
mov
addb
std
jge
mov
test
gs
cld
sub
ss
xor
or
imul
jp
not
pop
mov
fcmovne
test
mov
fs
loope
push
mulb
xor
andl
mov
mov
push
xchg
pop
mov
pop
cmp
and
sbb
rcrl
add
jns
mov
aam
loope
jecxz
arpl
out
pop
hlt
inc
cmpsb
aam
ss
xor
jne
dec
lret
push
out
outsl
cmp
daa
mov
in
daa
test
repnz
addr16
test
push
fistl
pusha
or
mov
shrb
out
jb
arpl
sub
cwtl
add
jg
dec
imul
and
add
xchg
jno
daa
mov
push
std
lret
xchg
sub
mov
enter
lock
pop
xchg
addr16
mov
lret
pusha
ficompl
jge
das
popa
dec
sti
inc
inc
sbb
das
jne
cli
push
and
and
cwtl
fsubr
cmp
aaa
pop
mov
and
mov
push
sbb
add
inc
lods
and
add
push
cmp
dec
aaa
inc
sub
test
arpl
movsl
lcall
testl
or
int3
int
mov
stos
cmpl
loop
addr16
outsb
push
pushl
mov
fidivl
iret
addr16
and
mov
sub
pop
xor
and
imul
xchg
inc
loope
das
mov
addr16
cwtl
sub
jmp
je
xchg
pop
cmpsb
fcoms
jno
xor
pop
ficoml
aas
shlb
lret
mov
sub
mov
fs
dec
dec
jne
jno
xchg
inc
sub
mov
shlb
in
inc
and
and
and
mov
xor
pop
lahf
mov
add
imull
jmp
push
mov
ficompl
inc
and
and
test
mov
pop
cmpsl
arpl
int
xchg
imul
in
add
outsl
sbb
add
repz
add
outsb
sbb
aas
pop
jmp
cmp
xor
movsl
into
push
pop
jp
jmp
aaa
sbb
es
jp
dec
idivb
mov
and
sub
cmp
sahf
and
mov
int3
jge
cmp
inc
subb
bound
jno
nop
fldlg2
icebp
shl
faddl
pop
test
outsb
dec
adc
hlt
dec
in
xor
inc
push
mov
fucomip
mov
mov
xor
js
or
dec
sub
jg
lods
test
jno
jb
mov
pusha
arpl
repnz
jae
pushf
movsb
jne
mov
cld
mov
aam
xlat
dec
cld
in
and
pushf
out
add
sub
inc
or
aaa
outsb
dec
fisubl
pcmpgtw
inc
inc
xor
neg
sahf
mov
and
outsb
data16
mov
jmp
mov
aaa
inc
arpl
in
push
hlt
ret
lea
inc
mov
mov
push
push
addr16
push
dec
das
sarb
fdivs
mov
add
movsb
inc
add
loopne
js
pop
or
push
sbb
add
ret
test
push
les
andb
cld
jg
mov
cmp
inc
jg
dec
sub
outsb
jle
out
or
repnz
pushf
xchg
fdivs
jp
test
xchg
pop
add
je
mov
xor
cmp
sbb
sub
sub
imul
sbb
dec
movsl
add
cmp
idiv
pop
cltd
loop
and
or
out
push
movsl
jl
ss
test
jge
push
and
cld
pop
xorb
out
cmp
lret
mov
lret
sub
mov
shlb
xor
inc
movsl
dec
popa
sbb
mov
sbbb
jge
push
cmpsb
fsubl
ljmp
iret
fisubl
mov
dec
push
xacquire
cmc
rol
cmc
push
outsl
add
fbstp
mov
movsl
mov
dec
dec
mov
insb
and
rcr
lahf
inc
insb
push
inc
decb
jb
pop
arpl
movsb
pop
dec
or
xlat
jle
push
inc
test
hlt
sti
test
xor
ficompl
sti
sub
add
fbld
test
imul
ret
bound
jg
mov
outsl
inc
in
arpl
mov
sub
pop
scas
paddusw
add
adc
aaa
test
sbb
call
ljmp
je
cwtl
out
sbb
fistpll
jl
mov
ret
mov
sahf
sub
push
psubd
mov
sbb
es
xorb
sbb
push
popa
pop
dec
cmp
sub
pop
cmp
lods
jnp
add
pushw
dec
xorb
filds
test
insl
imulb
jge
mov
scas
jecxz
stc
xchg
sub
and
loope
mov
mov
pop
jecxz
movsb
cmpsl
insb
mov
push
sub
sub
push
lods
idivl
lahf
arpl
idivb
es
fists
jnp
push
bound
cmp
and
mov
pop
cmp
fcomip
data16
jp
and
mov
jge
sub
mov
mov
jg
or
push
roll
fistpll
mov
pusha
adcb
jnp
fwait
sub
inc
sahf
cmp
or
shrb
and
popa
stc
fbstp
push
push
sti
xor
push
mov
pop
repnz
movsl
sub
push
inc
div
sub
daa
addr16
enter
mov
sbb
mov
scas
and
bound
sbb
cmpsb
jb
cs
pop
subl
outsl
call
pop
int
cwtl
adc
lret
mov
in
addb
ljmp
movsl
xchg
adc
pop
xor
mov
outsl
scas
mov
je
dec
movsl
push
or
pop
adcb
lock
loope
and
loop
push
xchg
xchg
scas
mov
ds
out
dec
insb
div
add
repz
es
sbb
outsb
popa
add
divb
xor
push
cmp
loope
sub
in
mov
loop
sub
cmpsb
call
cwtl
sub
cs
nop
hlt
inc
es
and
inc
xchg
cltd
call
les
cmp
jp
mov
inc
lret
rorl
ret
es
cmpsl
pop
test
add
dec
xor
xor
negb
cmc
fwait
loopne
sar
cmc
sub
rcll
push
fisubrl
sbb
xlat
and
mov
ds
mov
push
add
cmp
jns
and
dec
in
and
inc
mov
pop
mov
xchg
inc
or
inc
dec
mov
aaa
outsb
inc
xor
ljmp
lret
add
inc
outsb
add
mov
xor
jne
push
mov
mov
jb
test
cmp
sbb
outsb
push
xchg
sbb
je
aam
test
pmaxub
loope
loope
adc
inc
cmp
jp
mov
push
push
push
mov
shlb
xor
loop
sub
sbb
hlt
ljmp
loope
add
out
and
shlb
adc
mov
arpl
adc
adc
pusha
add
stc
stc
scas
stos
jo
pop
pop
xor
idivb
mov
out
movsl
mov
xchg
adc
popa
pusha
sarb
and
jecxz
mov
cltd
iret
scas
dec
jnp
push
mov
clc
std
pop
movsl
mov
lods
adc
pop
mov
dec
mov
aaa
movsl
xorb
inc
mov
jb
adc
flds
ss
stos
sbb
loop
mov
sbb
inc
outsb
shrb
lret
lods
lret
into
sar
adc
dec
mov
inc
in
mulb
sarb
jns
jmp
mov
call
mov
pop
inc
jnp
les
add
test
mov
push
jo
lock
adc
sub
xchg
test
jbe
sub
inc
push
push
ja
daa
sub
ljmp
push
mov
push
es
lock
sbb
xor
jno
push
jns
outsb
outsl
out
sub
out
and
xor
clc
fistpll
pop
test
or
push
xchg
es
rorb
xor
jae
imul
jp
rcl
test
mov
dec
dec
stos
movsl
pop
and
mov
sub
shrl
jbe
and
jp
sub
push
and
dec
push
xchg
pusha
cmp
adcb
shlb
das
sbb
ret
insb
push
out
outsb
das
xchg
jp
inc
imulb
call
nop
popa
inc
cmp
xchg
dec
rcll
cwtl
ss
aad
and
cmp
adc
dec
push
loope
mov
sbb
icebp
mov
mov
inc
xchg
push
xor
std
daa
leave
test
push
jl
roll
sar
push
sbb
jle
into
es
dec
dec
jbe
stos
aad
xchg
clc
sbb
dec
mov
mov
enter
dec
andl
mov
jbe
data16
mov
das
mov
add
cmpsb
or
imul
sbb
push
xchg
test
inc
fdivl
mov
mov
mov
sub
sti
or
enter
jg
sti
cld
cmp
pop
hlt
nop
mov
mov
ljmp
fwait
bound
mov
fidivrl
mov
xlat
cmp
lret
rorb
pop
gs
push
jbe
and
mov
notb
pop
in
mov
adc
jae
add
movsl
and
notl
pop
mov
scas
inc
cmp
sbb
jecxz
es
mov
mov
fwait
adc
mov
xchg
add
call
lods
pop
loop
cmp
dec
sbb
push
sub
pop
lret
repnz
xchg
cmp
jno
xchg
mov
pop
lock
fldl
jmp
int
mov
fsubs
mov
inc
pop
mov
pusha
or
pushf
inc
push
push
pop
mov
movsl
fcompl
xor
movsb
std
sub
push
add
push
pop
and
nop
add
and
cmp
fisttps
lcall
sbb
xchg
mov
inc
cmp
loop
aaa
test
or
int
mov
pusha
pusha
fcmovb
pusha
jb
test
mov
sub
inc
mov
sbbb
aaa
mov
int
lret
aaa
push
cmovo
sbb
push
mov
and
pop
push
inc
push
xchg
loope
in
push
bound
xchg
and
das
test
out
iret
cs
cld
push
push
jecxz
push
xchg
adc
cld
stos
in
int
adcb
ret
lods
push
sub
sbb
push
cmp
push
mov
adc
aaa
ss
ja
sub
popf
out
pop
mov
lahf
arpl
enter
dec
test
push
xor
inc
inc
out
push
mov
sub
push
lret
scas
paddsb
xchg
ja
insb
xchg
push
sbb
sub
mov
movsl
sub
inc
cmpsb
fst
dec
pop
js
mov
dec
es
xchg
icebp
cmp
mov
mov
je
add
xorb
in
shll
rcr
les
sti
mov
xor
sarb
int3
cmp
cld
mov
mov
sub
das
and
sbb
push
fucomp
sub
mov
jns
xchg
icebp
mov
sahf
sub
and
outsb
dec
cwtl
lods
adc
out
xchg
inc
xchg
xchg
stc
push
jg
into
cmpsb
jle
pusha
stos
cmpl
incl
mov
arpl
adc
ljmp
inc
xorb
push
pop
inc
mov
into
ficoml
divb
add
rcrb
push
dec
mov
cmp
cli
aaa
jmp
fnstenv
xchg
in
lret
andb
aas
inc
outsb
repnz
adc
fpatan
and
adc
add
xor
inc
fcomps
stos
hlt
test
mov
mov
cmp
adc
hlt
je
sub
pop
mov
push
mov
and
imul
cmpsb
pop
das
fsubr
and
mov
sub
mov
repnz
lret
mov
mov
iret
pop
and
repz
jno
fiaddl
mov
add
enter
mov
jb
push
push
pusha
pop
or
or
push
push
pop
notb
push
push
mov
leave
mov
mov
das
test
push
mov
loop
popf
negl
insb
mov
mov
jmp
mov
cmpsl
push
shlb
jp
mov
divb
outsb
xchg
adc
aam
sub
movsl
das
ret
mov
or
cwtl
iret
xor
xlat
jg
jecxz
icebp
inc
loop
push
push
sub
daa
call
and
jnp
decb
ret
xlat
movsb
pushf
sbb
sbb
inc
fnstsw
loopne
clc
add
ja
lea
push
repnz
stos
adc
and
jb
je
push
jecxz
cwtl
inc
popf
retw
inc
push
push
xor
jne
mov
sahf
stos
jno
hlt
enter
or
push
ret
cmp
pop
repz
adc
add
test
pop
mov
or
dec
out
or
add
out
mov
add
adc
out
sbb
lods
and
out
and
cwtl
add
movb
je
stc
jae
or
ss
inc
notl
and
add
mov
aam
sbb
data16
hlt
jae
and
inc
iret
push
xchg
inc
xor
rclb
fndisi(8087
push
mov
loopne
ficoml
test
dec
pop
idivb
rcl
adc
je
add
loopne
cmpsb
lea
sub
insl
jae
gs
add
or
push
mov
jae
imulb
push
mov
sub
inc
sti
xchg
dec
push
pop
mov
xchg
test
push
test
push
dec
xor
push
and
jecxz
mov
fimull
dec
mov
mov
or
mov
in
and
mov
mov
jo
lcall
test
xor
outsb
enter
jmp
subb
ret
scas
push
out
aas
pop
shlb
jle
push
jle
inc
mov
popf
and
int3
das
test
hlt
push
test
mov
push
lods
mov
dec
mov
movsl
add
mov
les
rcr
jb
xchg
fwait
test
jnp
incb
cld
cmp
xor
xchg
out
cmp
xchg
lret
inc
daa
pop
cmpsl
in
xlat
mov
mov
dec
mov
sahf
xor
sub
test
cs
adc
ds
sub
jecxz,pt
and
adc
in
mov
sbb
movsl
dec
pop
ret
add
and
push
clc
jg
jp
dec
jnp
adcb
push
and
out
orb
pop
movsb
out
aam
stos
pop
aaa
ss
lret
mov
out
lods
mov
xor
mov
xor
test
shrb
push
aad
jmp
and
movsb
iret
aad
lea
ja
xchg
sub
mov
add
push
and
stc
mov
lahf
jne
lods
push
into
rcrl
mov
xchg
push
shll
lahf
xchg
xchg
cmp
jb
subl
in
push
add
add
xchg
cmpsb
sbb
shl
jns
mov
pop
xlat
mov
int3
pop
loopne
jne
sub
inc
stc
or
outsl
inc
adcl
jmp
xchg
sub
push
mov
push
pushf
mov
test
stc
push
push
shlb
ret
test
mov
xchg
lods
or
js
push
loope
xchg
stc
cmpsb
in
sub
push
push
bnd
add
add
push
add
mov
adc
ror
addr16
insl
mov
mov
or
in
shlb
and
mov
xchg
jne
decl
fisubs
jns
sub
iret
scas
loopne
lea
fisubrs
sub
dec
jmp
imul
icebp
jo
xor
lods
push
sbbb
je
adc
adc
jns
sarb
shll
inc
push
xor
xorl
add
lods
movsl
dec
sub
push
adc
subb
jge
sub
adc
jg
mov
sarl
insl
and
xchg
add
mov
push
xlat
shlb
xorl
push
add
mov
cmp
mov
stc
jns
leave
push
jno
nop
sbb
mov
fcmovnbe
lods
xchg
lods
xlat
shrl
cmp
push
cmp
and
sub
push
cmp
sub
loope
mov
mov
sbb
in
es
adc
pop
add
mov
popf
adc
stc
and
xor
xor
dec
inc
imul
rolb
ss
iret
stc
lds
das
adc
les
push
push
dec
outsb
les
sahf
adc
fisubrl
les
jo
repnz
dec
xchg
xor
or
xchg
negb
ljmp
outsb
jp
imul
and
lcall
push
dec
mov
sbb
jbe
js
repz
add
enter
mov
inc
inc
out
mov
jg
in
in
add
pop
pushf
fisubl
pop
inc
cmp
inc
jae
imul
stos
cltd
movsl
and
fiadds
fimull
aad
lock
in
test
push
aaa
movsl
fisubrs
cmp
jo
push
ds
fs
mov
popf
or
imul
test
push
pop
icebp
pop
ret
adc
and
pusha
sub
addb
loop
ljmp
inc
jne
mov
rolb
push
dec
iret
mov
addr16
cmp
or
xchg
mov
mov
aad
dec
pop
pop
rolb
jl
movsb
inc
and
pop
inc
push
mov
pop
test
inc
pushf
insl
xlat
cmp
mov
fmull
pop
repz
mov
push
rcl
repnz
pop
sahf
dec
arpl
les
jge
cmpsb
cld
sub
jp
xlat
js
jl
mov
dec
movsl
mov
fmuls
sahf
xchg
mov
push
and
aaa
xor
push
mov
fsubrp
cwtl
mov
push
jecxz
xchg
loope
sbb
dec
adc
jb
add
dec
adc
faddl
add
movsb
aaa
dec
movsl
jg
pop
faddp
outsl
mov
pop
arpl
mov
add
push
aaa
dec
adc
dec
lret
je
jae
arpl
fistps
mov
jnp
cmc
aaa
jo
sub
add
stos
jo
mov
pop
dec
dec
aaa
sahf
xor
mov
mov
push
xor
or
leave
aaa
lods
sbb
inc
mov
addr16
jmp
mov
insb
xchg
fldl
inc
xchg
xor
cltd
icebp
cmpsl
dec
pop
mov
daa
sub
iret
call
xchg
sti
cltd
sbb
ret
add
push
or
or
dec
or
mov
xchg
mov
data16
xor
fidivrl
cmp
aad
insb
sti
cmp
adc
inc
jecxz
lahf
sbb
cmp
xorl
int3
jb
cmp
add
mov
fimull
sbb
outsl
psrad
fisubrs
mov
xchg
dec
push
fs
rcll
xchg
subl
cmp
jb
and
add
pop
or
pop
sbbl
pop
sub
dec
cmc
in
loope
mov
cmp
dec
je
xor
sbb
in
cmp
mov
xchg
mov
sub
dec
inc
mov
popa
arpl
push
enter
stc
and
jl
sbb
xchg
inc
push
cltd
mov
dec
push
int
loop
mov
inc
push
and
pop
data16
push
jmp
pop
rcll
mov
pop
gs
cmpl
hlt
and
push
xor
mov
sbb
arpl
add
cmp
dec
ss
gs
mov
and
xor
jecxz
pop
mov
xchg
jmp
mov
insl
and
sub
xor
movsl
popa
test
dec
imul
imul
and
int3
xchg
lods
mov
and
push
mov
pop
sbb
xchg
adc
addr16
xor
fisubs
mov
pop
jo
dec
push
repnz
jno
mov
cwtl
ret
je
shlb
mov
cmpsl
jb
inc
mov
lock
sbb
shlb
or
mov
push
rcrb
ret
in
mov
fwait
mov
push
xor
jno
xor
jb
in
cmp
mov
xchg
cmp
iret
dec
or
and
repz
mov
and
daa
loope
adc
ljmp
sub
aad
push
pop
and
leave
inc
dec
dec
pop
push
inc
cmpsb
xor
repnz
jno
jl
hlt
arpl
dec
push
pop
mov
and
mulb
loope
pop
xor
repz
int
stos
rolb
xor
add
pop
cmp
fwait
loopne
cwtl
mulb
mov
xchg
wrmsr
sub
sub
jne
mov
xchg
jecxz
jnp
pop
and
mov
adc
ss
out
add
jno
inc
jp
sub
ja
xor
adc
adc
test
cld
jge
jnp
orb
movsl
pop
mov
cmpsl
and
or
lret
push
adc
sbb
ds
in
das
sub
jmp
cwtl
add
fcmovu
dec
out
nop
dec
mov
enter
mov
sub
lret
xchg
addr16
loope
mov
push
cld
dec
repz
fsub
mov
jbe
xorb
inc
mov
add
xchg
jecxz
push
xchg
lret
aam
test
mov
push
loopne
cmpsl
jns
xchg
jge
xchg
cld
inc
push
add
inc
push
sub
xchg
insb
xchg
sahf
jmp
mov
test
mov
inc
xchg
pusha
aas
mov
push
lods
aam
mov
pop
xchg
pop
inc
and
insb
or
insl
and
jecxz
in
jl
gs
xchg
aaa
mov
test
mov
and
pop
fistps
xchg
ficoml
test
hlt
push
sub
mov
push
test
data16
dec
fbld
pop
js
inc
out
mov
leave
jbe
and
pop
inc
pusha
cmpsb
push
jno
cmp
and
push
pop
push
inc
mov
mov
add
out
das
inc
repnz
testb
cmp
arpl
lcall
xor
dec
adc
sti
dec
call
movsb
inc
popa
cwtl
ret
cmc
add
dec
xchg
lock
sub
mov
mov
inc
mov
adc
in
leave
sub
add
inc
sub
fistps
ret
ffree
fwait
sahf
mov
lret
stos
negb
push
mov
fldl
sbb
adc
ss
inc
mov
ja
dec
mov
mov
xor
fwait
out
mov
jge
hlt
bound
out
jnp
mov
add
fiaddl
nop
fdivrl
mov
cli
in
es
lret
into
outsb
vpermb
test
sub
cmp
push
mov
push
pop
xor
xor
and
push
pop
in
push
xorl
inc
negl
aad
insl
arpl
cwtl
in
data16
push
push
xor
push
push
jne
decl
lea
fsubl
cwtl
test
not
push
jmp
push
and
mov
outsl
jb
loop
cwtl
jbe
lds
and
stos
adc
adc
lret
rcl
push
jae
int
pop
nop
cmp
shlb
xor
jl
fisubl
push
inc
out
cltd
jnp
mov
mov
sbb
adc
lods
dec
inc
in
in
call
lcall
xor
imulb
outsb
and
mov
or
push
arpl
dec
fs
xchg
loope
push
in
lahf
jne
sbb
aam
sub
shl
pop
lcall
sbb
fiadds
xchg
out
test
imul
pop
pop
shl
les
fldenv
xor
xchg
push
sub
inc
sub
or
inc
bnd
mov
negb
addr16
iret
sbb
add
and
sbb
cwtl
sarl
mov
pop
lahf
divb
xchg
fiaddl
movsb
pop
aad
mov
xor
popa
jmp
movsb
and
ret
xor
push
cwtl
je
pop
sbb
mov
jns
fldenv
leave
and
fwait
ss
pusha
jl
push
addr16
sub
mov
bound
cltd
out
dec
mov
ss
in
stos
aaa
sub
or
mov
insl
lahf
je,pt
hlt
fwait
es
pop
dec
adc
mov
and
mov
subl
mov
mov
dec
mov
and
lret
in
repz
test
fidivrl
std
add
popa
push
mov
fcmovbe
jno
bound
push
mov
push
pop
out
rcrb
test
ss
push
ja
dec
lea
outsb
out
inc
lods
push
push
inc
add
mov
mov
test
outsb
cld
mov
push
xor
out
out
loope
dec
mov
dec
add
popf
adc
mov
push
in
jnp
mov
nop
push
test
roll
push
dec
out
jne
mov
movsb
push
and
cli
test
ljmp
shl
into
inc
mov
dec
sub
mov
xchg
jbe
or
ret
sahf
inc
cmpsl
sti
in
cmp
test
push
shlb
daa
mov
repnz
stos
xchg
out
push
mov
orl
mov
or
mov
mov
and
sahf
sub
push
mov
push
dec
mov
pop
add
sub
fiaddl
test
xchg
cld
add
xor
inc
lds
inc
pop
out
and
test
shll
push
idivl
mov
test
ss
push
or
mov
das
in
sub
push
mov
xchg
test
add
xchg
inc
mov
mov
arpl
out
rcrb
rcrb
sbb
movl
adc
aaa
aad
mov
fistpl
js
movsb
lods
sub
xor
xchg
mov
int3
lcall
mov
enter
out
stos
dec
xchg
popf
ret
fs
jge
mov
push
pop
adc
xchg
pop
or
push
divb
pusha
and
mov
push
arpl
sub
ja
add
adc
je
mov
pop
aaa
and
xor
outsb
jnp
xchg
and
pop
add
int
test
or
repnz
and
xchg
or
cmp
insb
mov
cmc
xchg
arpl
sbb
jb
dec
jmp
mov
xchg
jns
sub
imul
sub
es
out
out
cmc
cltd
cwtl
push
or
outsl
ret
mov
std
mov
ss
cmp
ret
mov
loope
es
adc
int
xchg
ret
push
mov
jl
arpl
and
repnz
pop
mov
addr16
jl
mov
fbstp
fimull
jge
insb
mov
insb
xchg
xor
xchg
mov
out
repnz
sbbb
pop
mov
nop
test
stos
xlat
dec
out
ds
addl
outsb
call
sti
xchg
cmp
push
mov
xchg
xchg
inc
shrb
adc
or
test
xchg
shlb
and
aad
adc
dec
insb
sbb
shrb
fcmove
add
mov
lea
sahf
imul
fcmovbe
sub
fistpl
adc
loop
sahf
hlt
sbb
sti
and
xchg
inc
leave
and
jne
stc
xchg
and
jmp
insl
imul
fwait
jle
or
push
xor
ret
jle
push
mov
addb
mov
call
push
movsb
outsb
pop
addl
add
icebp
jbe
push
pop
inc
int3
adcb
pop
mov
sub
out
dec
cmpsl
sub
xchg
mov
ret
pop
mov
mov
pop
mov
dec
fidivs
add
sahf
loop
fwait
inc
dec
mov
aas
lods
ja
andb
inc
mov
loopne
jmp
inc
outsb
add
lds
in
cwtl
jne
dec
pop
jecxz
xchg
sbb
jne
or
lcall
lods
inc
daa
inc
mov
stc
push
add
mov
ret
faddl
mov
add
loope
ljmp
xor
add
sub
mov
loop
cwtl
cmpl
pop
fs
jb
das
cwtl
mov
sub
pop
sbb
inc
mov
xchg
lds
cmc
fs
loop
mov
scas
xor
lret
mov
adc
in
insb
push
es
xor
xchg
cmp
and
bound
psrad
test
aaa
sbb
je
dec
sub
push
add
lret
cld
insl
adc
push
inc
and
mov
pusha
test
movsb
and
xor
icebp
insl
test
jae
jecxz
inc
cwtl
adc
mov
xor
jno
and
divl
and
aaa
pop
aam
dec
pop
ljmp
mov
and
push
loop,pt
das
xchg
loop
rcrl
sbb
mov
sub
jne
fwait
sub
push
imul
xchg
xchg
or
sub
pop
dec
or
mov
daa
shlb
pop
dec
inc
loope
mov
aam
loopne
roll
sub
sbb
pop
enter
or
dec
or
roll
xorb
push
mov
loope
adc
ret
pop
mov
outsb
lods
in
ret
icebp
ficompl
lods
inc
enter
mov
stc
push
loop
hlt
push
dec
loop
loopne
pop
aam
pusha
dec
push
loop
sub
dec
mov
aaa
mov
shrl
sub
fstps
inc
adc
push
add
aaa
xor
rolb
shr
andl
inc
mov
pusha
mov
clc
pushf
fs
movsl
pop
jno
push
adc
jb
pusha
and
loope
stc
mov
andb
add
cmp
jno
inc
inc
outsb
mov
adc
or
out
es
adc
pop
loope
loop
inc
pop
lcall
or
add
popf
call
jb
fmull
mov
out
ja
xlat
fldenv
daa
stos
aam
addr16
and
inc
fndisi(8087
inc
outsb
les
pushl
outsb
aad
fmul
mov
xchg
jecxz
stos
push
sbb
aad
clc
lods
out
mov
jge
aas
cmpsl
fs
inc
movsb
aas
sub
lcall
loop
sti
mov
mov
loopne
xchg
jmp
arpl
loop
mov
mov
pop
loop
insb
arpl
sub
push
pop
shll
pushf
mov
mov
insb
sbb
hlt
or
loop
out
fiaddl
pop
inc
mov
dec
pop
sub
cltd
mov
inc
in
ljmp
cmp
es
mov
cmpsb
jbe
cmc
jnp
mov
push
jno
dec
mov
inc
rcr
cld
cld
add
loopne
aaa
mov
xor
and
test
mov
sub
out
lds
les
inc
xchg
push
inc
inc
pop
loop
push
push
lahf
push
outsb
add
mov
les
adc
or
and
sub
jb
dec
fnsave
xchg
fidivrl
inc
inc
repnz
mov
and
movsb
pop
add
shl
add
adc
cmp
insb
imul
inc
je
mov
or
lret
sub
sub
rcll
pop
pop
inc
das
test
adc
pop
push
outsb
ret
call
cwtl
push
aam
xchg
jmp
cmp
mov
dec
jle
cli
ret
popf
pop
lods
inc
rcrl
mov
lea
mov
fisubrs
fmulp
aas
bound
adc
mov
stos
loope
loop
in
loop
push
enter
mov
movsl
insb
xor
shrl
cld
cwtl
jge
xchg
lods
adc
arpl
mov
push
or
insl
jo
leave
sbb
subb
or
test
push
test
std
les
loopne
sub
lcall
inc
ficompl
loop
lds
and
sub
shr
je
sbb
jecxz
movsb
push
mov
or
scas
arpl
inc
lods
daa
xchg
push
ret
dec
lret
mov
push
xor
lods
pop
ljmp
into
xchg
mov
sbb
xor
loope
pop
or
adc
mov
push
inc
jmp
mov
mov
and
outsb
xchg
jbe
add
mov
push
sub
and
xchg
iret
dec
mov
fisubrs
daa
scas
test
test
loope
je
out
mov
js
adc
orl
aaa
mov
daa
in
movsl
inc
mov
nop
fnstenv
jmp
je
bound
jp
dec
cmp
and
cmp
add
or
cmpsl
adc
cmpsl
pushf
mov
and
daa
hlt
mov
int
and
or
repz
loope
pushf
jne
and
xchg
mov
aam
mov
dec
orl
lcall
mov
adc
movsl
out
xor
push
js
add
mov
sbb
dec
sub
cmp
inc
dec
sbb
jnp
jbe
lret
mov
mov
and
sub
mov
mov
adc
sarl
fadds
dec
xchg
mov
daa
js
repz
iret
or
ret
adc
push
addl
or
fdivs
cmp
xor
jbe
jbe
and
inc
xor
push
or
mov
shlb
outsb
xchg
or
add
jno
popa
inc
ss
mov
mov
daa
insl
cmp
pop
inc
dec
mov
mov
jb
mov
aaa
xor
cmpsb
dec
outsb
mov
lock
loop
es
push
shlb
repnz
fnstenv
fldenv
push
mov
scas
xchg
jecxz
mov
in
jo
fldt
jmp
pop
stos
xor
popf
xchg
mov
pop
verr
mov
jmp
sarl
ljmp
sub
xor
or
push
aaa
ficoml
pop
push
rcr
rol
out
sbb
dec
inc
cmpsl
incl
test
jno
jno
pop
dec
mov
inc
mov
xchg
mov
pop
jne
jb
mov
cmp
stos
shrb
ret
stos
out
jb
mov
dec
mov
adc
jecxz
jge
mov
jno
shlb
pop
mov
ret
and
imul
xor
test
cmpsl
sbb
jecxz
xchg
pop
out
lcall
mov
fidivl
mov
loop
jecxz
sbb
and
add
add
lods
mov
in
push
sub
push
cmpsb
stc
fwait
outsl
stos
mov
xchg
rcrl
push
ljmp
pusha
int3
lods
push
xor
sahf
dec
pop
mov
inc
mov
lret
cmp
jne
push
movsb
mov
xor
cmpsl
dec
imul
and
aam
sbb
jecxz
scas
loopne
jae
pop
andl
loopne
xor
inc
out
push
push
xchg
xor
loope
ret
shlb
sahf
les
lock
adcl
jno
mov
mov
lods
rcr
mov
xlat
js
inc
inc
mov
pushf
adc
sarl
sub
inc
mov
rclb
into
daa
ss
inc
dec
and
pop
dec
shrl
fmulp
jne
dec
jb
fcmove
push
jmp
frstor
in
sub
les
hlt
jg
jmp
and
add
loope
jne
cmp
pop
xchg
dec
xor
sbb
lret
pop
std
sub
xchg
dec
outsb
lock
paddusb
scas
sbb
sub
fwait
enter
in
popa
orps
repnz
filds
and
dec
push
adc
xor
mov
push
repz
mov
sbb
jne
adc
xor
add
sub
aas
mov
mov
mov
and
lcall
subl
or
jb
adc
push
add
xor
pop
outsl
repnz
and
addb
xchg
bound
pop
movsb
push
jae
repz
mov
sub
outsb
xchg
pop
adc
jns
loop
mov
sub
inc
mov
imull
xor
daa
mov
jb
jb
inc
insb
sub
loope
jecxz
add
jl
int3
cmp
ja
lcall
xor
mov
mov
mov
or
push
outsb
into
fildll
cmp
mov
push
and
add
fidivl
cmpsl
lods
rolb
shll
rcr
clc
aaa
popa
mov
xchg
lods
loop
inc
insb
mov
scas
add
adc
call
push
cltd
and
lods
push
push
jb
sub
sbb
outsb
repz
dec
ss
aas
dec
xchg
leave
scas
add
das
hlt
mov
fidivl
repnz
pushf
push
xor
inc
xor
test
test
xor
xchg
scas
mov
dec
aam
icebp
arpl
dec
xor
mov
test
arpl
lahf
shr
aas
je
push
mov
ret
repnz
xchg
dec
loopne
xchg
push
sub
mov
xor
loop
out
sub
add
sahf
and
pusha
addr16
dec
xlat
inc
xor
add
xchg
aam
pop
ja
xor
jge
mov
pop
je,pn
dec
ljmp
jno
add
mov
int3
jb
into
repz
lret
or
fs
cmpsl
out
aas
enter
stc
dec
das
ret
sbb
mov
cltd
adc
add
pusha
repnz
push
dec
lret
arpl
sub
lret
insb
lcall
pop
xchg
inc
mov
cltd
mov
in
addb
and
loop
dec
vpsrlq
sbb
test
add
hlt
stos
push
sbb
cmp
outsb
arpl
stos
adc
and
jb
fimuls
shll
js
adc
or
les
jecxz
push
mov
or
xor
cwtl
lock
sub
mov
inc
pop
mov
movsb
adc
xchg
shrl
adc
push
test
sub
adc
push
xchg
hlt
cmp
loop
ret
pop
loope
js
xchg
dec
rcr
bnd
sbb
shlb
aas
rcl
pusha
or
sbb
pop
jecxz
fnsave
inc
test
xchg
push
inc
cwtl
push
test
mov
push
cmpsb
addl
inc
mulb
shll
ret
fiadds
mov
lcall
stc
xor
push
int3
imul
mov
sub
imul
pusha
pusha
jb
pop
mov
pop
arpl
jp
xchg
jae
out
jno
scas
xchg
out
inc
ret
divl
adc
jnp
mov
mov
mov
push
mov
imul
popa
mov
pop
mov
pusha
add
aas
sub
sbb
push
in
and
test
inc
mov
cld
xchg
call
add
fs
arpl
mov
dec
mov
inc
mov
fsubs
ljmp
test
fwait
cmpsl
mov
xor
daa
pop
or
arpl
mov
and
xor
lods
dec
push
cwtl
mov
mulb
iret
sbb
rorb
mov
aaa
jne
fwait
sbb
jne
out
mov
adc
pop
mov
mov
fistpll
hlt
addb
xchg
je
cmp
sbb
hlt
sub
add
xchg
stos
cmp
pop
mov
xchg
cmp
rcrl
aad
mov
stos
jne
stos
les
dec
bound
ret
imul
ret
push
dec
mov
jne
mov
jb
loop
jbe,pn
shl
into
mov
push
das
outsb
push
sbb
push
push
dec
cmp
jg
jae
lock
sbb
mov
dec
mov
into
and
scas
loope
repnz
xchg
mov
or
fidivs
aaa
arpl
pop
ljmp
jae
pop
hlt
inc
xor
jne
mov
sub
jne
test
clc
pop
insl
hlt
fwait
das
hlt
repz
das
dec
hlt
shll
test
inc
cld
and
fs
movsl
int3
jg
movsb
in
mov
sbb
dec
aad
cmp
cmpsb
mov
and
cmpsb
add
mov
stos
cmc
and
add
test
shl
sub
ret
icebp
jecxz
add
jp
adc
jbe
push
cmpsl
mov
or
addr16
sbb
enter
fdiv
push
ljmp
inc
mov
mov
mov
fldcw
addb
loop
mov
inc
xchg
push
push
je
je
sub
xchg
bound
stos
fbstp
sub
sbb
inc
iret
rdtsc
rcrb
add
shll
cwtl
mov
pop
aam
mov
cmp
sub
cmpsl
ljmp
in
jle
adc
mov
or
jp
pop
pop
mov
mov
mov
cmp
push
fs
adc
cmp
out
cld
mov
and
jmp
sahf
scas
mov
imul
jl
je
sub
cwtl
das
int
mov
jmp
insb
mov
les
sahf
mov
hlt
rcrb
and
mov
xlat
mov
xchg
out
sub
push
loope
lahf
and
or
sbb
rcrl
mov
aaa
cmp
loope
inc
cmpsb
push
sbb
dec
dec
mov
rcrb
xchg
push
mov
test
leave
mov
and
cwtl
mov
icebp
ds
cli
leave
push
mov
adc
mulb
hlt
sbbb
std
adc
dec
fiaddl
xchg
xchg
xchg
jg
ss
lcall
add
mov
cltd
and
imul
out
fimull
pop
push
xorb
mov
adc
or
std
cmp
jmp
stos
xor
mov
push
push
push
add
lods
enter
cmp
pop
mov
cmpsl
movsl
mov
in
mov
jns
push
flds
inc
in
shl
ficompl
sub
xor
push
pop
jbe
xor
push
ljmp
into
cltd
or
mov
push
inc
mov
fistpll
daa
jne
xor
mov
jno
insb
or
adc
xchg
mov
and
jg
stc
adc
mov
scas
inc
arpl
inc
ret
mov
call
dec
mov
mov
cmpsl
pop
ret
and
mov
aam
inc
xor
shlb
mov
sub
or
mov
mov
cmp
loop
xchg
jmp
and
push
mov
pop
dec
pop
or
daa
xchg
pop
mov
push
imul
popl
push
dec
jmp
adcb
scas
sub
outsb
mov
inc
and
popa
insb
mov
in
insb
pusha
sub
mov
inc
loope
xor
push
hlt
shll
jne
daa
mov
jecxz
aaa
insb
je
mov
not
mov
enter
cs
popa
sub
ret
incb
push
xor
add
clc
loope
inc
xchg
mov
aaa
sbb
std
sub
push
xorl
adc
jp
call
pop
adc
fadd
jmp
xchg
repnz
mov
testb
dec
push
xchg
jae
iret
nop
loopne
add
bt
mov
or
inc
inc
ret
pop
or
xchg
mov
inc
fiaddl
shll
sbb
and
aad
xor
out
xor
stos
fdivrl
inc
nop
adc
push
div
loopne
imul
mov
cmp
adc
mov
subb
xor
dec
xor
sahf
repnz
fidivl
sti
sbb
rorl
orl
pop
sbb
aam
out
push
jno
arpl
push
xor
dec
push
mov
sub
fists
in
add
in
push
lcall
fiaddl
mov
sub
movsl
xor
into
and
fisubl
xchg
nop
inc
push
lret
arpl
mov
pop
dec
in
arpl
arpl
push
lods
pop
ret
dec
arpl
fimull
sbb
insb
cmp
pop
push
or
mov
jecxz
aaa
push
je
mov
jo
sbb
sub
push
xor
jne
mov
push
mov
loope
xor
and
mov
push
arpl
xor
mov
mov
sbb
sub
add
mov
andl
popa
mov
scas
or
ror
mov
aad
je
in
sub
push
outsb
in
hlt
loope
and
or
or
lcall
mov
fisubs
aaa
mov
bound
loop
repnz
sti
frstor
es
xor
sbb
mov
and
jge
movsl
pop
push
adc
aad
mov
shrb
cltd
inc
jb
jmp
inc
xchg
out
inc
leave
push
inc
aam
mov
test
sub
rclb
cli
stc
enter
fldt
mov
ss
insl
push
loop
dec
push
loop
sbb
push
pop
ret
divb
or
pusha
push
cmp
fwait
aaa
xor
es
int
add
push
aas
ficoml
scas
jb
and
push
xchg
push
jne
dec
insl
cli
ljmp
mov
shll
sub
das
add
pushf
and
aam
push
push
push
push
fwait
and
psubd
push
je
and
jge
xchg
push
and
sarl
pusha
lock
mov
insl
push
fwait
adc
in
mov
pusha
loop
push
fcomip
pusha
int3
pop
xchg
cmp
push
pop
jae
add
push
push
int
inc
cltd
js
xor
mov
sub
or
in
lea
loope
repnz
mov
mov
jbe
scas
fwait
xchg
and
push
fwait
ret
adc
mov
mov
pop
or
and
aam
sub
aaa
rcl
repnz
in
xchg
push
and
pop
push
pop
xchg
fs
insb
loop
mov
call
push
jl
add
movsl
ljmp
and
or
sub
dec
xchg
call
fwait
ret
lret
and
adc
subl
mov
outsl
add
inc
xchg
push
sub
or
and
and
push
inc
test
push
je
push
mov
push
pop
rcrl
push
icebp
push
sbb
push
push
adc
add
sub
push
push
loope
adc
jae
sti
stos
sbb
rcll
inc
push
push
sub
fwait
lret
add
shrb
pop
xchg
shll
xchg
je
or
push
push
cmp
rep
push
sar
loop
pop
loope
out
loop
mov
repnz
push
rep
sub
mov
mov
loopne
stc
call
psubusb
aad
addr16
js
popf
movsb
push
cmpsl
mov
or
mov
dec
scas
jnp
icebp
fwait
dec
cwtl
xorl
ret
and
ficoms
jne
adc
out
orb
lret
inc
fwait
pop
pusha
jecxz
das
jecxz
int3
jecxz
jecxz
test
shll
mov
inc
je
and
sub
imul
or
sub
jbe
sub
and
scas
les
cltd
push
mov
cltd
sarl
outsl
inc
loope
mov
adc
inc
pop
mov
stc
movsb
fisubrl
arpl
loop
sbb
in
ss
inc
sub
int
andl
add
outsb
pop
mov
divb
je
pop
popa
xor
js
jecxz
and
mov
icebp
jne
xchg
push
mov
bound
call
add
xor
or
adc
repnz
and
dec
and
cs
push
cmp
pop
mov
popf
bound
mov
aad
daa
scas
dec
and
js
push
push
mov
mov
and
js
jo
bound
lods
add
sub
mov
xchg
sub
lea
enter
bound
xchg
imul
pop
jbe
cmpsl
lret
push
add
add
push
inc
jecxz
loop
insb
jp
hlt
out
xor
outsb
jno
push
pop
xchg
into
arpl
daa
scas
shlb
inc
push
push
and
xor
mov
aaa
rclb
add
scas
pop
shlb
pusha
or
mov
mov
push
lret
xor
cwtl
repz
enter
push
enter
movsl
jbe
je
repnz
repnz
jbe
testb
bnd
dec
loopne
or
das
je
sbb
mov
push
nop
fsub
jg
cmpsl
add
cmp
mov
push
jae
sti
mov
jecxz
aam
cwtl
jne
inc
inc
add
or
sbb
fcompl
popa
js
divb
mov
icebp
and
loopne
or
mov
loopne
pop
sarb
push
popa
movsl
jp
xchg
repnz
fldl
lods
es
xchg
sub
es
xor
xchg
es
sub
stos
sbb
mov
mov
ljmp
add
dec
mov
xchg
sub
divb
cmp
enter
lahf
mulb
mov
movsb
sti
sub
xchg
push
inc
daa
and
lret
dec
push
sbb
xor
fadds
mov
xor
stos
in
xchg
and
dec
mov
jo
jmp
and
call
mov
xorb
jl
mov
mov
and
mov
jnp
jecxz
mov
jnp
divb
stos
insl
jge
mov
repnz
inc
out
hlt
pop
jbe
inc
xchg
cmpsb
xchg
mov
out
negl
in
rcrb
and
push
jb
insl
cltd
comiss
repnz
mov
xor
xchg
adc
pop
shll
mov
cmpsl
push
jp
pop
mov
loop
inc
in
mov
jne
mov
jno
mov
sti
sub
jecxz
fcomip
mov
iret
or
sub
out
gs
lds
push
test
sub
mov
jb
aam
test
sbb
ud0
mov
mov
sub
jecxz
je
sbbl
mov
xor
adc
je
xchg
data16
push
pusha
jmp
and
cmc
nop
push
bswap
jae
movb
loope
sbb
pusha
int
ljmp
push
fists
mov
fwait
pop
and
xchg
ljmp
iret
ret
mov
aam
in
in
aas
std
xor
add
cmc
mov
shll
addr16
and
xchg
mov
outsl
and
cmp
mov
mov
incl
inc
cltd
stos
pop
and
bound
das
lods
sarb
and
pop
dec
daa
insb
loopne
push
jns
xor
rep
outsb
jnp
jge
mov
fdivp
lret
sub
xchg
fsub
mov
loopne
insl
push
jb
std
adc
sub
fstl
insb
lock
cmpsl
sub
aaa
je
stos
jge
xchg
mov
imul
popa
adc
push
mov
es
push
icebp
in
stos
out
outsb
loopne
and
mov
pop
aaa
and
mov
test
out
dec
jmp
cltd
insb
cmc
adc
enter
xchg
outsb
jle
je
inc
ja
clc
lret
cmpsl
in
xor
mov
movsl
push
pop
sub
push
mov
push
inc
xchg
sub
dec
jecxz
scas
loope
mov
xor
jnp
in
or
int
add
sbbl
xchg
movsb
push
mov
add
xchg
mov
inc
movsb
lahf
sub
jns
xor
jnp
aad
mov
shll
xchg
add
mov
hlt
add
cwtl
mov
arpl
hlt
iret
rorl
subb
mov
addb
and
imul
mov
cmpsb
inc
cmp
fdivs
shrl
enter
pop
or
pop
mov
movsb
sahf
es
inc
and
jbe
repnz
jns
sbb
mov
bound
add
scas
jg
pop
imul
hlt
sub
adc
push
jbe
enter
mov
ds
into
ja
push
push
icebp
cmp
mov
int
xchg
and
nop
add
cwtl
loop
mov
and
or
pop
nop
xor
add
shlb
sub
je
ret
cmpsl
ficompl
sahf
inc
cmp
insl
fst
in
clc
and
cli
jo
push
adc
add
fldl
and
inc
inc
dec
mov
and
insl
dec
mov
in
sub
fstl
dec
mov
sub
add
sbb
je
scas
mov
inc
inc
cmp
xchg
add
and
jmp
pop
adc
jo
out
mov
cmp
imul
ljmp
addr16
push
dec
cwtl
fldl
in
add
mov
push
ret
sub
test
add
notb
mov
pop
mov
cwtl
add
cmc
loop
orb
adc
pop
pop
aad
xchg
cmc
outsb
mov
je
aam
push
pop
ljmp
jmp
stos
andl
data16
je
fisubrl
arpl
mov
sub
shll
push
mov
inc
lods
push
jp
adc
rolb
mov
idivl
notl
jl
jnp
xor
dec
cli
outsb
les
fdivs
clc
ret
loope
mov
inc
sbb
mov
push
mov
mov
mov
rol
pop
je
ret
lahf
sbbb
insl
push
pop
push
sub
lods
dec
hlt
mov
push
add
dec
out
sti
ljmp
sub
incb
enter
cmp
pusha
push
jle
addr16
push
neg
push
subb
out
iret
cmpsl
push
ds
inc
push
xor
cmp
outsb
push
in
dec
xor
lret
dec
mov
shrl
bound
subl
or
sub
rorb
sbb
pop
xchg
sahf
mov
loopne
dec
loope
cmp
sub
xor
insl
inc
fcompl
shll
dec
sub
inc
inc
lret
sbb
push
filds
nop
js
lret
dec
pusha
test
pop
jecxz
outsl
adc
lods
mov
mov
aam
rol
ss
aas
cmp
pusha
aam
xchg
aaa
call
fcomip
arpl
xor
ss
in
dec
and
xchg
xor
outsl
pop
cmp
mov
sbb
jl
or
fdivr
adc
inc
jmp
loope
jnp
frstor
fstpl
sbb
push
add
inc
aaa
xor
jecxz
and
jbe
or
and
or
iret
loope
sbb
inc
bound
sub
mov
xor
arpl
test
movsb
push
js
shl
adc
xchg
notb
lcall
cbtw
fdivr
addl
mulb
xor
xor
pop
outsb
push
enter
sub
jecxz
push
push
stos
mov
mov
mov
jmp
dec
inc
sbb
push
es
and
shlb
mov
jns
pushf
mov
aad
pop
pop
xor
xchg
pop
addr16
sub
imul
arpl
adc
pushl
stos
incl
jb
inc
ss
adc
repnz
icebp
cs
jmp
and
imul
decb
sarb
aas
inc
xchg
inc
and
int
imul
pop
push
sbb
repz
fnsave
adc
loop
and
push
add
aas
call
out
jne
out
or
shrl
call
and
and
hlt
es
dec
mov
popa
fidivrl
cld
test
es
cli
jb
jb
jmp
ja
insl
into
loop
push
push
ljmp
mov
es
or
data16
adc
hlt
je
jne
and
rorb
cwtl
sahf
xchg
push
pop
pusha
add
mov
movb
mov
jb
movsb
loopne
cwtl
xor
sub
hlt
sbb
dec
pusha
mull
setbe
loope
lcall
add
cld
inc
pop
sbb
inc
adc
in
fcmovne
inc
and
imul
xchg
mov
or
lock
dec
mov
jl
sbb
fisubl
adc
xlat
xchg
cmpsl
sub
jge
pusha
dec
and
push
pop
nop
push
sub
or
in
setle
inc
dec
push
mov
test
cltd
mov
loopne
push
fwait
inc
imul
stos
outsl
pop
jmp
bound
jbe
inc
pop
jp
dec
mov
leave
cld
das
das
mov
test
xchg
leave
insb
xor
insl
mov
push
mov
jbe
adc
and
mov
shlb
mov
push
adc
jbe
dec
rclb
mov
data16
out
cmp
int3
aam
inc
je
lret
dec
hlt
cltd
in
dec
pop
aas
or
icebp
push
je
test
int3
inc
bnd
and
mov
xor
stos
ss
bound
mov
and
mov
adc
lods
dec
fdivrl
in
and
scas
test
cmp
fdivrl
fstpl
inc
mov
push
neg
into
adc
jb
in
idivl
push
test
call
movsl
and
shll
cltd
fwait
cld
or
inc
jb
pop
mov
dec
xor
call
jb
mov
movsl
call
subb
enter
adc
daa
or
adc
inc
ds
ds
cwtl
in
leave
jb
cmp
ficoml
pushf
jnp
lcall
loope
mov
pop
pop
out
cmpsl
mov
mov
mov
andb
jg
aam
pusha
scas
rorb
stos
and
mov
xchg
data16
test
add
xchg
fisubl
clc
mov
pop
cmpsb
cwtl
and
mov
add
adc
pop
mov
mov
addb
or
jne
scas
inc
lret
leave
jo
adc
ja
and
jl
fsubr
mov
jle,pt
mov
push
mov
inc
aad
inc
dec
mov
test
sub
test
push
fldcw
mov
push
sub
lods
stos
xchg
in
jge
je
xor
inc
mov
je
jno
mov
in
jae
lret
mov
or
adc
mov
jb
cmp
cmp
inc
jb
outsb
xchg
or
out
push
lahf
sbb
mov
dec
aas
inc
cmp
or
leave
mov
xor
fidivrl
jb
push
fsubl
jno
cmp
mov
inc
scas
mov
mul
mov
ljmp
je
mov
pusha
xor
adc
aad
movsb
pusha
mov
push
mov
insb
mov
out
jne
push
jg
dec
add
shlb
sti
fwait
out
out
stos
sbb
pop
add
xchg
jmp
rcrl
pop
jge
push
lea
xchg
mull
xchg
sub
pop
cmpsl
mov
lcall
inc
movsb
inc
stos
pop
insb
push
data16
pop
stos
sbb
mov
sbb
hlt
xor
sub
fcmovb
nop
mul
push
xor
jb
and
les
dec
or
insl
push
adc
das
lret
addb
and
sbb
hlt
ljmp
aam
gs
inc
repz
ds
sub
gs
jecxz
roll
enter
dec
cmp
add
pop
aam
daa
xchg
das
and
insl
out
mov
pop
jbe
repnz
lods
pop
push
ret
out
loope
rol
imul
lods
push
jae
adc
lret
mov
xchg
add
in
testl
inc
cmp
iret
ljmp
fcmovne
push
out
in
lret
test
cmp
loope
dec
add
ret
loope
jbe
divb
cltd
fwait
popa
sbb
pop
icebp
pop
in
pop
not
popf
sub
mov
inc
jb
sub
or
xor
sub
fucomi
mov
pusha
dec
movsb
adc
cli
cmpsl
and
xchg
jo
nop
jo
xchg
lds
push
push
cli
outsb
orl
mov
mov
or
mov
push
fcomi
cs
mov
andl
mov
ja
push
adc
cmpsl
adc
dec
jmp
insb
and
addr16
mov
jne
lret
je
outsb
jge
icebp
pusha
in
imul
stc
in
in
xor
mov
sub
lret
lret
daa
loopne
test
lock
addr16
lock
xchg
aaa
rcrb
dec
adc
mov
xorl
sub
lret
stos
in
lcall
movsl
aam
out
pop
mov
sahf
sti
lret
icebp
movsb
sub
sbb
cmp
xchg
push
ja
add
shlb
mov
pop
data16
movsb
pop
cmpsl
subb
mov
aas
dec
adc
mov
inc
divb
push
dec
jb
rcrl
pop
xor
mov
mov
xchg
fnstenv
sub
and
jns
adc
sub
push
pop
sbb
stc
out
stos
sbb
jmp
dec
mov
sahf
xchg
jle
fwait
enter
scas
test
pop
int3
dec
fwait
cmpsl
xor
frstor
pmulhuw
inc
outsb
push
dec
insl
scas
mov
movsl
stos
mov
loop
cs
xchg
push
insb
movsb
mov
ljmp
sbb
fsubp
loopne
push
pop
loopne
cmovge
lcall
lcall
in
in
pop
mov
xchg
mov
push
into
push
cmc
pop
scas
ds
mov
add
sbb
sar
push
add
inc
insl
movsl
popa
push
mov
jns
xor
scas
push
adc
and
jmp
ljmp
ror
pop
shl
test
sub
fidivl
in
iret
imul
pushf
mov
fdivrs
imul
pop
fisubrl
adc
ljmp
xchg
and
ret
insl
push
mov
lods
aas
sub
pusha
sbb
pop
fidivrs
ret
push
ljmp
pop
xlat
inc
fisubs
pop
addl
and
das
clc
push
ja
dec
and
and
addr16
dec
js
pop
sub
int
push
cmpsl
mov
jecxz
sub
pop
ja
leave
mov
and
or
loopne
jle
icebp
sbb
ds
inc
or
mov
and
pushf
fimull
in
mov
fs
in
cmp
repz
lcall
call
xchg
test
cld
in
div
push
cltd
push
jb
push
add
or
sub
test
adc
jl
pop
xchg
rolb
jne
push
out
rcrl
adc
divb
repnz
dec
ret
sbb
push
sub
push
push
divb
enter
add
jae
pop
lea
test
lods
popf
test
out
movb
jge
das
pop
cld
jle
std
mov
add
dec
xor
in
push
hlt
or
jecxz
lods
insl
sub
pop
mov
adc
lahf
fmul
ljmp
jecxz
test
shr
push
ss
jbe
inc
jge
filds
cmpsl
push
lock
lods
int
in
push
sbb
int
lcall
mov
aas
or
test
jns
ljmp
scas
js
add
add
jae
bound
jg
adc
inc
add
add
and
cmc
mov
inc
loopne
mov
mov
scas
fistl
jnp
std
hlt
xor
adc
inc
pop
push
or
pop
mov
dec
out
push
jp
stos
in
stos
inc
das
mov
je
inc
in
shll
lods
mov
lods
and
push
bnd
in
pusha
ds
sub
mov
xchg
loop
aaa
mov
test
rol
mov
bound
mov
je
cmc
jnp
mov
stos
and
rolb
inc
pusha
fnstenv
sahf
not
in
jbe
xor
and
sub
and
sbb
cmpsl
sti
into
sarb
fs
inc
imul
push
mov
bound
cmp
mov
mov
addr16
sbb
orl
jns
hlt
testl
dec
pop
scas
popa
or
dec
dec
adc
in
sub
mov
and
mov
xchg
mov
aaa
mov
or
insb
lods
and
xchg
xchg
jae
cmpb
stc
mov
or
xchg
mov
lods
lret
xor
jge
aad
add
push
rcr
mov
push
jne
jne
lahf
adc
bound
and
inc
sahf
jnp
or
loop
arpl
orb
loop
adc
cwtl
movsl
adc
stc
adc
inc
inc
ficoml
in
jne
push
lret
push
mov
hlt
mov
bound
test
xor
inc
add
in
subb
push
jne
in
les
int3
cmp
jnp
push
mov
outsb
fbld
push
cmp
pop
fiaddl
lds
mov
push
push
lds
ds
xor
ficoms
divb
bound
adc
cwtl
push
arpl
scas
and
xor
cmp
pop
cmpsb
shll
fimull
hlt
sub
inc
push
mov
test
sbb
jns
mov
push
pusha
jne
add
rcll
jno
add
int
cwtl
xchg
insl
inc
jb
add
cmpsb
inc
pop
roll
and
cltd
inc
add
leave
shrb
and
sbb
inc
loop
nop
pop
in
mov
push
mov
and
testb
inc
loop
lahf
scas
adc
or
es
imul
test
push
dec
jle
loopne
ja
jnp
rcrb
dec
ss
imull
jne
fs
inc
popf
jecxz
sarl
idivb
gs
mov
or
aaa
xor
pushf
xor
les
sti
xor
pop
movsb
push
lret
cli
mov
insl
dec
pop
in
adc
mov
push
hlt
mov
or
daa
cld
popf
fs
std
sub
arpl
sub
mov
aam
add
bsf
push
sbb
ljmp
adc
mov
push
cmp
and
fcom
push
mov
push
je
mov
pop
and
lods
es
inc
dec
cmpsb
add
mov
jg
scas
stc
jae
pop
in
push
push
icebp
push
lahf
adc
push
xchg
mov
in
mov
fsubrs
movsb
lcall
dec
mov
lea
mov
sbb
mov
loopne
lcall
mov
sbb
hlt
mov
jo
xchg
jecxz
xor
sub
lahf
das
dec
mul
aad
bound
sbb
pusha
divb
add
mov
sbb
imul
popa
mov
fdivl
movsb
add
mov
fucomip
pusha
mov
dec
xor
fisubl
shlb
and
mov
cmp
cli
dec
or
not
pop
aaa
mov
dec
cmp
pop
jg
cmc
ljmp
inc
xor
stos
shll
aad
ret
movsl
test
test
jp
movsl
push
xor
mov
aad
mov
fadd
jns
pop
add
shrl
jbe
xchg
and
ja
xor
cmc
and
dec
lret
mov
ja
inc
cwtl
mov
inc
xor
shrl
push
sub
cmp
xchg
xor
repnz
idivb
push
out
mov
aam
mov
pop
mov
push
jae
iret
xor
insb
push
je
add
shrb
call
ds
push
outsb
push
fisubl
and
movsl
or
add
enter
cmp
and
jns
mov
negb
xchg
xchg
mov
sbb
inc
out
push
dec
mov
push
test
mov
pop
dec
sub
cmpsb
and
in
mov
pusha
dec
push
push
outsb
xchg
mov
aam
in
lahf
cmp
orl
loop
loope
repz
cld
mov
stc
loope
pop
imul
in
dec
pushl
loope
jne
push
jecxz
pop
jp
mov
js
dec
pop
lret
jl
and
pop
inc
cltd
pushl
cltd
jnp
push
ss
add
je
sbb
movsl
push
cmp
outsl
sub
add
lcall
xchg
shrl
jmp
testl
inc
jl
std
xor
xor
sub
sub
addb
jmp
loope
loop
mov
add
pop
stos
imul
outsb
pop
sti
inc
orps
out
pushf
add
stos
mov
jmp
mov
fcomp
ja
sbb
stc
mov
mov
xor
repz
idivb
mov
push
outsb
mov
jnp
push
mov
je
outsb
mov
shlb
or
popf
push
es
stos
movsl
adc
mov
push
xchg
outsb
inc
mov
and
pop
push
xchg
popfw
or
inc
mov
fstpt
es
mov
jnp
push
mov
jecxz
and
mov
xor
lock
inc
das
arpl
movsl
addr16
mov
push
gs
mov
push
repnz
out
add
scas
xor
pusha
mov
pop
xchg
ss
call
mov
sub
or
insb
jnp
pushf
mov
loopne
lcall
movsl
sbb
cli
sub
in
sub
popa
jg
int3
mov
fprem
jne
sub
scas
cli
enter
dec
and
mov
cmp
stos
xor
jl
push
push
frstor
xchg
es
pop
testb
sahf
lahf
das
pop
stos
xor
les
hlt
ja
nop
repnz
fwait
lods
jae
sti
dec
cmp
pop
addr16
sti
ss
pop
ljmp
dec
jmp
add
iret
dec
fmulp
fcoml
aam
adc
sub
je
sbb
sbb
js
inc
jnp
mov
insl
repz
mov
or
and
je
pop
jnp
push
ficoml
lods
int3
and
int3
sub
xchg
xor
cld
dec
in
les
push
pop
mov
roll
xor
arpl
outsl
aad
and
pop
sub
pop
inc
loop
mov
jne
jecxz
sub
aaa
psrad
jb
rcrl
lret
loopne
sub
mov
pop
out
shrb
sbb
stos
lds
pop
adc
inc
and
jmp
imul
gs
loopne
xor
pop
jne
shll
inc
xchg
repz
ljmp
sub
jmp
mov
mov
adc
push
or
push
addr16
lock
and
mov
xchg
lods
bound
lods
mov
cmp
outsb
push
out
push
repnz
mov
dec
shl
mov
ljmp
mov
pavgw
cmpb
loopne
rcll
mov
and
push
loop
mov
push
test
cli
jecxz
pop
pusha
mov
pop
xlat
das
cmpsb
aaa
lret
xchg
xchg
test
mov
cmc
mov
sti
loop
pop
pop
loope
inc
je
jb
dec
jecxz
adc
fisubrs
idiv
outsb
and
fldenv
mov
stos
dec
sub
sti
or
sub
je
popf
jp
andb
and
push
cltd
aaa
inc
and
lahf
ficoms
and
or
mov
fcompl
ret
in
sub
test
adc
ret
outsb
cwtl
ljmp
mov
push
adc
cmc
add
mov
out
test
aad
add
jp
movsb
arpl
add
jbe
xchg
push
std
pusha
cwtl
clc
mov
push
cli
pusha
out
adc
push
cmc
push
aaa
xor
and
jmp
mov
jecxz
loope
pusha
sub
int3
and
or
xor
jl
mov
push
lods
insl
pusha
mov
mov
mov
pop
push
inc
and
orb
test
rorl
mov
hlt
xchg
fs
popa
xchg
push
or
add
repz
sub
mov
and
xor
fiadds
mov
xor
xor
dec
dec
test
pop
inc
daa
cmc
dec
sub
sbb
test
in
push
mov
xchg
mov
and
xchg
sbb
sub
das
rolb
aam
adc
insb
aad
or
pop
xchg
aas
fsts
mov
out
movsl
pop
dec
popa
jns
mov
mov
popa
mov
mov
stos
dec
es
mov
mov
inc
into
push
stos
add
daa
and
push
movsb
aad
dec
jl
dec
addb
je
xchg
mov
enter
test
clc
stos
adc
push
and
cmp
and
xchg
xchg
and
rorl
pop
push
mov
loop
adc
push
shl
push
mov
sbb
inc
sahf
add
mov
cli
insb
in
lods
sub
aaa
mov
pop
test
hlt
mov
int3
in
xor
ja
inc
insl
ret
jbe
and
cmp
push
icebp
pusha
dec
int3
in
sbb
sbb
std
rcl
add
adc
rcpps
dec
xor
pop
pop
das
out
add
or
jmp
jne
movntps
jle
mov
sub
shlb
push
and
aam
cmp
aaa
icebp
inc
jno
cmpsl
lcall
inc
inc
stos
adc
jg
add
mov
rol
inc
lds
add
xorps
sub
push
inc
inc
ljmp
mov
les
aaa
jl
mov
into
shl
insb
sub
test
pop
frstor
sbb
pop
addr16
ljmp
dec
push
cld
movsb
popa
add
arpl
inc
jno,pn
mov
jecxz
mov
dec
push
and
mov
dec
inc
pushf
mov
lods
push
inc
add
mov
fldt
jbe
mov
cwtl
roll
leave
sbb
mov
arpl
cs
ja
loop
ret
add
dec
dec
push
xchg
sbb
movb
inc
arpl
aaa
rcr
dec
push
outsb
xor
jmp
and
add
add
ret
push
mov
shlb
mov
xchg
mov
cmpsl
push
stos
dec
shrb
fwait
adc
push
stc
mov
and
inc
movsb
out
xor
scas
sahf
push
push
push
push
adc
push
add
jg
jl
inc
cmc
cltd
negb
out
sbb
inc
and
mov
or
icebp
insl
sbb
movsl
movsb
inc
outsb
fdivs
or
ja
loope
jae
outsb
sub
inc
mov
pop
cld
loop
lret
loope
lock
aad
push
les
mov
cld
dec
std
imul
insb
push
mov
out
adc
jne
stos
fcoml
test
add
sbb
sub
push
rorb
xor
ljmp
mov
add
xchg
hlt
xor
lret
push
mov
xchg
pusha
push
inc
xorl
xchg
aad
mov
scas
mov
or
jne
rorb
jecxz
movsb
pop
sub
mov
and
xor
mulb
and
pop
sbbl
pop
rorb
push
dec
jae
mov
lods
xchg
pop
dec
test
xlat
int3
jecxz
push
imul
out
stos
push
mov
pop
inc
dec
les
rcrb
int3
rol
sbb
fisttps
add
sub
sub
mul
lret
adc
hlt
and
inc
inc
inc
rclb
insb
mov
fidivl
cli
xor
jnp
mov
xor
push
xchg
ljmp
les
adc
sub
stos
mov
repz
aaa
nop
mov
shrb
and
clc
push
lods
push
push
mov
pushl
outsb
sbb
in
loope
xor
bound
divl
push
addr16
xor
inc
ret
mov
lods
and
hlt
push
jbe
test
cmc
push
inc
and
nop
sbb
push
jmp
xchg
rcr
lock
jbe
inc
lret
es
and
in
sub
andb
jecxz
jle
push
inc
inc
sub
jns
lahf
test
popf
push
xor
add
loop
cwtl
mov
fldlg2
mov
in
dec
cs
inc
mov
mov
out
inc
pusha
xchg
divb
lcall
jns
lds
mov
push
jbe
add
sub
outsb
jl
in
mov
push
xor
ret
popa
in
lods
and
jecxz
je
mov
jae
mov
test
inc
sub
add
push
cmc
sbb
cmpsl
clc
ljmp
fimull
lods
pop
and
pop
fisttps
jecxz
add
jnp
dec
shrl
xor
movaps
dec
push
mov
imul
jb
in
xchg
mov
add
sbb
jb
or
stos
movsb
sbb
mov
fidivs
lret
xchg
mov
add
xchg
mov
pusha
imul
xchg
mov
sahf
dec
loope
xor
test
lcall
repnz
test
addr16
ljmp
push
cltd
jne
xchg
adc
sub
enter
sahf
decl
mov
mov
cmpb
mov
and
xchg
pop
pop
jbe
js
arpl
dec
mov
push
cs
dec
mov
test
add
cs
sub
dec
inc
fdivrs
inc
repz
fnstenv
cwtl
mov
dec
repnz
xorb
xchg
jp
push
ss
xor
xor
pop
mov
loope
sbb
jb
loope
imul
and
in
loop
mov
pop
cmpsb
cmpsl
dec
es
jae
inc
sbb
inc
stos
ljmp
stos
loop
inc
or
xor
jl
andps
int
movsb
outsb
repnz
ret
loope
or
bound
adcb
push
fwait
test
sub
and
xor
dec
inc
and
call
pop
insb
pop
jne
je
add
das
push
inc
dec
fidivrl
pop
popf
ja
sbbl
and
mov
sbb
daa
or
and
aaa
cmp
inc
filds
push
sub
rcll
sub
xchg
jecxz
and
xchg
mov
push
out
jns
scas
cmp
or
jp
and
add
sub
add
stc
push
jge
cmc
dec
test
les
pop
pusha
jno
dec
arpl
addr16
pop
sub
and
hlt
inc
sub
push
bound
xor
cmpsb
inc
outsb
jnp
outsl
das
sbb
xor
hlt
dec
scas
hlt
push
imul
inc
xchg
cwtl
add
inc
clc
lea
nop
ret
adc
lcall
mov
fnstsw
pop
repnz
sub
push
pusha
xchg
in
adc
cmp
mov
add
loope
outsl
bound
orl
jo
popa
jle
addr16
pop
popf
xor
jb
repnz
popa
jnp
sub
lods
ficoml
xchg
jb
test
lret
shlb
cmp
test
push
lcall
dec
sahf
fstpl
mov
add
aam
cmp
push
and
test
cmp
shll
sbb
daa
not
xor
rcrl
popa
fadds
es
aaa
xor
icebp
push
xor
insb
push
aaa
stc
in
jne
push
lcall
idivb
sbb
cmpsb
fdivp
clc
cs
shlb
cmp
push
xor
out
inc
dec
xor
es
and
icebp
insb
mov
mov
sbb
pusha
imul
cmpsl
jmp
inc
cmp
lahf
and
push
push
ret
test
repz
add
in
jb
call
loope
bound
arpl
sub
loop
adc
sub
loop
add
adc
sub
jb
push
cmp
insb
jecxz
adc
in
or
mov
mov
jecxz
gs
jbe
push
and
push
insl
out
div
pop
inc
scas
xchg
dec
and
or
in
jb
stos
push
es
insl
cmc
fcomps
pop
push
adc
xchg
movsl
mov
push
and
xor
or
hlt
mov
cmpsl
pop
xchg
sub
femms
imulb
cmp
inc
push
std
sbb
pop
jmp
adc
popa
jmp
push
and
or
movsb
mov
jns
loop
pop
xor
addr16
subl
fs
cmp
mov
or
xchg
je
outsl
cmp
shlb
movb
jns
sub
adc
push
clc
je
sarb
cmc
add
jge
in
cmc
pop
aaa
xor
faddp
mov
mov
mov
pop
adc
inc
lods
bound
add
pop
and
cli
je
cmp
mov
jbe
movb
cmc
in
mov
jmp
jbe
inc
xchg
or
sarb
and
fs
mov
jmp
shr
xchg
loop
xor
xor
aaa
fiaddl
xchg
jge
outsb
and
mov
fwait
adc
fildll
repnz
cmc
repz
loope
ds
jmp
push
mov
jno
pop
or
loopne
sub
rorb
sub
cmpsb
faddl
xlat
inc
mov
cmc
sar
movsb
sub
mov
nop
mov
pop
iret
fwait
push
sbb
push
push
xchg
iret
loop
hlt
shlb
jbe
arpl
adc
sbb
sub
hlt
and
cmc
sub
xchg
outsb
add
test
and
mov
rol
cmp
adc
cmc
mov
mov
jne
outsb
mov
pushf
jo
add
mov
decl
or
sbb
jnp
pop
loop
cmp
sub
in
add
std
and
push
stos
shl
popa
sub
pop
mov
xor
sub
in
xchg
dec
xor
imulb
mov
cmc
gs
rcll
pop
or
adc
addl
arpl
sti
adc
out
or
add
or
cmp
ss
pop
ljmp
xchg
xchg
mov
lcall
adcb
pop
xchg
push
cmc
inc
popa
xchg
and
push
jl
dec
xor
or
xchg
fisttps
push
arpl
lret
daa
mov
int3
cmp
jmp
aas
add
inc
mov
rolb
fists
cmc
jne
popa
lods
inc
je
inc
push
xchg
xchg
inc
cmp
dec
out
push
xchg
add
or
fadds
or
insb
outsb
das
sbb
ret
notb
xor
or
imul
test
in
sbb
xor
lock
in
inc
or
aam
jo
jg
insl
dec
push
icebp
stos
cwtl
lods
xor
icebp
hlt
sti
out
ds
fwait
xor
popa
xor
mov
iret
test
xchg
out
insb
iret
shr
mov
jae
aaa
icebp
cmc
fucomip
mov
es
inc
mov
pop
inc
jb
loope
push
mov
ret
fwait
in
xchg
rolb
pop
inc
jbe
mov
outsb
in
sub
shlb
loope
rcrb
push
cmp
addr16
push
lcall
dec
into
mov
sbb
sarl
push
push
or
adc
sbb
in
xor
lock
imulb
xor
loop
and
and
mov
repnz
out
jne
outsb
adc
mov
loop
cmc
loop
int3
nop
sub
mov
adc
pushf
sti
cmp
push
sub
jle
outsb
cld
push
in
mov
shr
sbbb
in
sub
xchg
xchg
inc
loop
jbe
rclb
inc
pop
ss
aas
pusha
lret
in
daa
in
push
sub
insb
cwtl
inc
ret
add
push
dec
bound
pop
ljmp
inc
mov
or
fcmovu
xchg
lcall
dec
inc
mov
mov
orb
das
notb
loop
push
insb
push
push
jl
sub
mov
fimull
or
in
push
sbb
incl
out
test
std
push
loope
dec
cmpsl
orb
in
jb
cmpsl
mov
mov
or
sbb
mov
inc
and
and
xchg
pop
xor
jo
xor
xchg
jb
lret
adc
cmp
arpl
shrb
dec
xchg
push
outsl
in
hlt
inc
call
hlt
and
div
es
ret
hlt
divb
popf
hlt
push
loope
push
jb
xchg
sub
inc
call
jae
popa
stos
loop
mov
lds
jbe
xchg
pusha
lret
clc
les
test
in
sub
and
aaa
dec
push
scas
fwait
shr
xchg
arpl
je
push
popa
rcll
push
mov
cmp
push
xor
scas
inc
pop
push
inc
jecxz
insl
sub
arpl
mov
mov
jne
in
push
loopne
cwtl
popf
hlt
push
jne
push
loop
xchg
sub
je
cmc
hlt
inc
arpl
lcall
imulb
insb
cld
hlt
jb
fs
cmp
sti
outsl
int3
push
pop
jle
push
arpl
mov
insl
push
hlt
dec
outsl
fwait
arpl
aam
adc
das
je
lahf
jbe
arpl
hlt
mul
inc
fisubl
arpl
push
jecxz
xchg
ljmp
xor
cmc
loop
sbb
sub
cmc
jae
loopne
push
push
jne
push
loopne
jmp
ret
loop
insl
hlt
aaa
subl
imul
imul
arpl
fwait
lahf
loop
imul
imul
pusha
jo
jmp
arpl
pusha
pusha
pop
xchg
push
imul
in
and
cmc
xchg
outsl
pop
ljmp
jp
ret
imul
xchg
jne
pusha
pop
jmp
sub
into
add
ljmp
in
sub
inc
insl
shll
jb
mov
mov
js
hlt
inc
insb
ljmp
out
sub
push
and
es
out
sbb
push
adc
adc
les
addb
mov
jmp
cmp
cmpl
mov
fs
in
cmp
jecxz
sti
adc
mov
scas
data16
rcrb
loop
lods
inc
mull
mov
addr16
call
push
sub
mov
aaa
xor
repnz
inc
mov
sub
movsb
bound
popf
push
out
sub
outsl
jmp
push
mov
dec
sub
add
popa
movsb
imul
lcall
lret
mov
es
ret
mov
xchg
bnd
jnp
stc
in
repz
jb,pt
jg
popa
jo
aam
stc
inc
jno
and
cmp
stos
sbb
insl
insl
and
mulps
es
cmpsl
and
sub
cmp
sbb
and
push
pop
pop
xor
iret
dec
repnz
nop
rorb
and
imul
jnp
jns
xchg
jbe
repnz
mov
std
add
insb
je
shll
bound
fcompl
mov
shlb
and
subl
inc
push
push
js
rcll
push
add
fs
testl
jns
mov
or
jl
nop
ja
mov
xchg
fadds
adc
movsl
aaa
push
or
mov
shlb
xor
jecxz
test
mov
dec
sub
repnz
sub
scas
aaa
out
and
xchg
daa
mov
pop
andb
dec
lea
ja
divl
rclb
xchg
bound
imul
sbb
fldenv
call
loopne
call
hlt
popa
hlt
lahf
adc
ret
push
sti
rolb
jg
cs
filds
call
loop
inc
insb
pusha
push
ds
sub
popa
in
ret
mov
scas
push
hlt
adc
lret
sub
sbb
adc
adc
mov
insb
pop
sbb
int
lea
dec
lret
ljmp
push
sbb
mov
and
mov
hlt
push
rorb
push
push
jbe
push
data16
std
add
stos
push
mov
sbb
dec
dec
xchg
jmp
push
loope
add
int
inc
je
sub
idivb
and
stc
aam
push
cmc
cmp
mov
insb
filds
scas
out
sub
or
inc
cmc
loopne
mov
loope
shll
dec
notl
or
sbb
push
fs
xor
test
or
out
cmpsl
and
test
sub
push
inc
and
inc
gs
pop
sbb
inc
or
mov
xor
inc
and
cmp
push
sub
sub
mov
jge
cmpsl
dec
or
dec
in
aaa
fdivr
xchg
xor
pop
inc
pop
sbb
and
sub
movb
stos
cmp
aas
inc
mov
rolb
pusha
test
pop
push
jb
pop
imull
repnz
lret
mov
fwait
mov
outsb
add
mov
adc
fldenv
rclb
and
stos
jae
insb
push
dec
pop
pusha
fimull
xchg
rol
dec
jp
xchg
mov
fs
inc
add
xchg
jb
add
cmp
xchg
aam
mov
and
or
subl
ret
mov
inc
andl
aad
push
push
hlt
push
and
rcrl
sahf
xor
adcl
fwait
and
arpl
jo
xor
inc
out
adc
cld
and
aam
and
cwtl
nop
loop
add
push
rcll
sbb
call
test
scas
adc
ja
mov
xchg
dec
push
rorl
les
adc
bound
fbstp
pop
ja
pop
inc
sbbl
loope
loop
cli
out
push
and
shlb
mov
loope
cmpb
pop
mov
lock
sbb
mov
movsb
js
aaa
loope
mov
jbe
inc
not
xor
jbe
cmp
xorb
outsl
sub
sbb
xor
inc
fadds
clc
stc
xor
fcomps
dec
call
insb
popf
sub
sub
dec
jo
and
notb
shll
aam
mov
jp
push
mov
push
and
fwait
cmc
in
xchg
sti
xchg
pop
icebp
lret
sbb
mov
jne
inc
or
ja
insb
out
repz
or
pop
sub
pop
cmpsl
xor
push
xchg
jecxz
pop
xchg
scas
arpl
leave
xor
push
fwait
in
inc
add
rcrl
imul
mov
and
jp
fldenv
add
mov
mov
cmpsl
loop
stc
push
out
movsl
pop
imul
sub
mov
sbb
sti
jp
loope
mov
add
fiaddl
xor
or
cltd
outsb
xchg
push
inc
icebp
sub
test
cmp
mov
std
sbbl
imul
push
pusha
lea
jne
in
xchg
mov
iret
in
loope
adc
add
das
scas
shll
push
or
mov
mov
mov
std
fdivs
inc
aaa
ss
pop
aam
les
pusha
xor
insb
mov
loop
pusha
and
out
add
mov
es
js
repnz
repnz
int3
mov
out
push
mov
dec
lods
icebp
mov
and
mov
ret
adc
das
xchg
lret
negb
jmp
es
loop
movsb
pop
hlt
ja
inc
mov
and
sti
jbe
test
push
mov
cltd
in
loop
xchg
jge
adc
pop
jmp
loop
dec
movsb
in
cwtl
lret
xor
pop
mov
and
das
fmulp
mov
scas
dec
add
das
jae
in
xchg
andb
push
mov
outsb
push
fcmovu
frstor
lret
ret
dec
xor
jae
test
ret
iret
decl
mov
cmp
imul
inc
mov
dec
xchg
jb
ret
loop
mov
popf
lret
ret
imull
and
push
xor
sub
call
mov
insl
cmp
ss
int3
mov
pop
in
cmp
or
daa
arpl
shlb
fsubl
push
cwtl
add
xor
sbb
push
mov
pop
movsl
mov
addr16
lea
adc
lods
sbb
sbb
int3
push
sbb
jne
movsl
out
in
cltd
imulb
stc
mov
sub
lods
outsl
xor
out
addb
push
mov
add
adc
movsl
pop
aad
std
jne
mov
xchg
and
jmp
shll
dec
enter
add
testl
arpl
xchg
xchg
push
test
push
cld
sub
test
lret
mov
rolb
addr16
in
popf
ljmp
mov
adc
and
push
neg
in
sub
fisubrl
jno
clc
enter
test
pop
lods
lds
pop
bnd
arpl
sub
arpl
adc
inc
call
enter
into
std
or
test
xor
jmp
pop
lcall
inc
lock
add
dec
jo
add
bnd
insb
cmp
popa
jnp
sbb
fidivl
aam
xchg
sub
test
enter
and
adc
sbb
enter
out
clc
and
ds
dec
jecxz
cltd
mov
daa
jle
loopne
outsb
jl
adc
out
outsb
call
insl
cwtl
les
shll
xchg
adc
adc
sti
xchg
pop
mov
pop
push
cli
loope
xchg
push
loop
mov
pop
popa
sub
cwtl
or
cld
jp
cmp
cs
mov
pop
pushl
das
lret
test
nop
mov
hlt
pop
enter
fbld
iret
fwait
out
xchg
ror
jae
jbe
addl
inc
ficomps
std
add
aam
dec
cmp
jo
mov
mov
js
jbe
lea
dec
outsb
or
inc
add
in
cwtl
fwait
cmp
sti
hlt
test
imul
ljmp
and
push
inc
lods
rolb
xor
cmpsb
jae
in
fimull
test
push
test
fiadds
scas
mov
data16
jae
mov
mov
sub
push
rolb
cmc
jne
aad
aam
inc
inc
iret
sahf
loope,pt
sub
push
inc
mov
mov
cwtl
test
pop
mov
push
inc
outsb
or
jno
sarb
cmp
add
sti
cwtl
mov
add
cmpl
cmc
jp
jbe
sbb
pop
pop
push
cmp
fwait
adc
shll
mov
loopne
xchg
or
movsb
mov
mov
negl
fidivl
mov
loop
hlt
insb
sbbb
mov
and
mov
movsb
aas
aam
jecxz
xor
test
cmp
outsb
out
dec
mov
pop
repnz
mov
std
pop
push
out
cld
inc
popa
lret
cmpsb
mov
mov
lods
inc
imulb
dec
stc
jbe
mov
mov
lock
stc
or
mov
aaa
sub
mov
test
jno
dec
fmul
dec
jns
je
and
mov
rorl
sub
pop
in
mov
pop
test
test
ljmp
in
out
xor
push
in
lcall
jmp
add
sahf
mov
je
inc
das
mov
mov
aaa
lods
lret
inc
sbbb
xchg
sub
or
aaa
pop
jae
testl
mov
ret
out
movsl
test
cs
sbb
lea
movsl
lea
addr16
xchg
sub
adc
into
inc
adc
cmpsl
xor
dec
lcall
mov
test
lahf
add
test
and
stc
testl
jecxz
loop
sub
mov
push
subps
shrb
aaa
dec
loopne
and
xchg
lcall
loop
in
lods
cmp
je
lods
mov
mov
ja
cltd
inc
and
mul
xor
inc
outsb
fwait
adc
sbb
push
insl
ja
inc
jno
and
or
pop
cmpb
sub
ds
mov
incl
es
lret
ja
hlt
repnz
movsl
xchg
adc
inc
add
xchg
jl
scas
ss
mov
test
jne
pusha
shrb
inc
lahf
movsl
mov
jge
mov
pushf
jle
jne
out
insl
dec
jns
push
lods
cld
popa
stos
and
movsb
pusha
lcall
inc
int
cmp
arpl
pop
sti
mov
into
jns
inc
inc
pop
or
addl
jo
ljmp
outsb
fcmovbe
mov
stc
sub
and
mov
outsb
push
int3
mov
in
lahf
push
cmpb
or
inc
sub
fists
fisttpl
pop
lcall
pusha
fwait
inc
jb
push
add
shll
push
add
or
das
mov
push
loopne
not
shll
ret
sub
lds
in
cld
popa
int3
dec
test
adcb
hlt
sbb
pop
lcall
pushf
and
xchg
add
and
sti
xor
and
movsl
movaps
fucomi
dec
inc
sar
imull
loope
cmc
fidivs
leave
sbb
jne
cld
dec
clc
std
or
or
fidivl
sbb
inc
dec
or
xor
cltd
in
js
fnstsw
cmpb
arpl
gs
sbb
sbb
xlat
inc
fs
hlt
fs
stos
lock
loopne
or
int3
mov
loop
sahf
fwait
jae
cld
std
out
in
jg
test
pop
vpunpcklwd
or
fisttps
xchg
repz
add
dec
add
test
cltd
push
sbb
adc
jge
pop
push
xor
pop
mov
movsl
push
mov
subl
dec
ret
loope
pop
aaa
jbe
movsb
test
mov
inc
pop
loopne
xchg
sub
cmp
leave
dec
and
inc
outsb
jne
inc
cld
pop
mov
and
popa
mov
int3
pop
xor
pop
push
xchg
push
cmpsl
ljmp
jnp
or
adc
add
jecxz
cmp
jae
adc
fcmove
inc
jg
jmp
adc
imul
mov
mov
jge
or
aam
jnp
rol
dec
les
jg
xchg
loope
insl
jp
dec
sub
sti
push
fnstenv
cmpsl
imul
lcall
push
xchg
loope
xor
ret
cltd
lea
xlat
lods
scas
cmp
and
orb
push
imul
inc
ljmp
sub
mov
mov
cltd
es
mov
and
mov
add
test
lods
push
insb
push
sbb
testb
fwait
cmp
inc
push
cwtl
daa
mov
sub
xchg
xchg
shl
mov
fcomi
or
popa
jno
hlt
xorl
addr16
push
jg
jmp
and
sbb
mov
jne
das
loop
and
push
push
cwtl
loope
je
imul
mov
out
popa
and
cmp
fwait
ror
sub
std
pop
jo
xchg
push
mov
xchg
nop
push
mov
inc
shll
pop
jle
xchg
mov
jg
test
pop
mul
jb
pop
mov
ficoml
push
rorb
sbb
push
mov
jbe
pop
icebp
outsl
insb
and
ret
or
jle
xchg
imul
je
test
jne
push
sar
mov
pop
ret
mov
add
sub
cmp
or
push
push
je
in
adc
fs
cmp
inc
xchg
lods
inc
dec
adc
mov
inc
push
ret
inc
and
cmp
fs
pusha
jo
mov
pusha
jo
xchg
sub
and
dec
inc
pusha
das
mov
jecxz
jb
jb
andl
sbb
inc
dec
mov
test
scas
int3
insl
outsb
dec
inc
lret
xchg
sahf
push
inc
imul
insb
sbb
jge
int
imul
pop
call
jne
xchg
and
aaa
inc
inc
sub
mov
add
cwtl
inc
sub
and
fs
mov
add
inc
push
outsl
pop
xchg
in
cmp
out
movsb
jns
orb
lds
stc
mov
xor
int
out
pop
testb
sbb
in
adc
adc
xchg
hlt
mov
je
mov
aaa
pop
outsl
sbb
jg
imul
movsl
adc
ds
push
jl
push
sti
pminub
testl
lds
push
fidivl
and
loopne
cli
dec
cmp
je
sbb
push
fwait
outsb
loope
imul
ljmp
push
fdivrs
mov
fstpl
push
mov
xchg
push
xchg
movswl
shlb
mulb
rcrb
aad
cli
cmp
push
and
in
push
shll
xchg
popa
push
data16
les
xchg
and
enter
jecxz
mov
mov
inc
movl
jp
sti
stos
cmc
push
pop
imul
fwait
adc
adcl
dec
sub
adc
dec
imulb
push
and
aaa
loop
add
fsts
jae
pop
cmp
popa
xchg
xchg
imul
dec
call
jl
cld
xchg
stc
dec
push
out
ret
popa
jb
or
out
adc
add
pop
rcr
xchg
mov
movsb
sbb
loope
fwait
dec
sbb
sub
push
or
jg
movsl
or
outsb
mov
imul
xor
aad
adc
mov
cli
adc
xchg
das
iret
ljmp
insl
mov
sti
xor
mov
or
sub
jo
sti
test
pop
addr16
inc
movsl
adc
sub
inc
sahf
inc
arpl
pop
in
cmpsl
cmpsl
lea
lds
dec
pslld
popa
movswl
jns
cs
loop
call
lods
hlt
jne
pushl
jg
shll
es
test
lods
shrb
arpl
scas
sub
lock
cmpsb
in
test
nop
testb
pop
fidivl
xchg
pop
push
aas
js
test
mov
in
rcll
pop
mov
mov
cmpsb
sbb
mov
adc
aad
adc
mov
inc
ret
lods
test
movb
bound
jp
jmp
sub
insb
dec
div
sub
loop
inc
test
sub
icebp
pusha
add
jmp
mov
add
xchg
call
mull
out
std
in
lcall
push
mov
fimull
addr16
faddl
or
inc
test
adc
mov
movb
pop
jmp
adc
icebp
sbb
jle
push
pop
mov
sub
xchg
mov
mov
ss
inc
inc
push
add
lea
pop
aad
addr16
sbb
mov
sub
push
jge
insl
push
sub
dec
outsb
jle
sbb
in
and
fbstp
mov
test
jmp
xchg
call
lret
lret
nop
shll
imul
fcmovnu
dec
ss
push
jp
imul
insl
pushf
fldl
pop
stos
addr16
xchg
inc
and
test
cmp
shll
rorl
sub
inc
ja
lock
pop
or
mov
pop
ret
adc
out
and
aas
inc
push
clc
dec
add
add
cwtl
adc
inc
sub
lahf
shl
mov
and
popf
aaa
aaa
lods
mov
jb
test
test
imul
movsl
sahf
insb
cwtl
sarb
xchg
bound
shlb
xchg
sbb
jns
xor
mov
push
loop
push
loop
mov
jg
lods
jecxz
cmp
pop
jae
aam
out
repnz
and
test
or
movl
pop
in
movsl
pop
nop
sub
lcall
scas
push
push
mov
sub
fidivrl
xchg
sbb
nop
jg
clc
out
xchg
mov
insl
test
mov
ret
pusha
mov
insl
shll
les
movsl
and
mov
insl
adc
mov
aam
or
iret
xor
test
loopne
push
sbb
xor
pop
fisubrl
movsl
std
pop
add
lret
in
cmc
lret
pusha
xor
into
cmp
dec
cld
movsb
mov
and
push
leave
out
sahf
in
shrl
ja
jo
mov
sbb
inc
pusha
pop
lret
cmp
adc
add
cmpsl
sub
jbe
mov
addr16
lds
ss
stos
hlt
inc
movsb
pop
pop
sub
insl
aaa
fiadds
sub
std
mov
add
push
stos
addr16
cmp
ret
das
in
dec
lods
push
and
push
or
mov
in
pop
jbe
lock
test
mov
call
sbb
jbe
and
mov
mov
test
fcoms
test
mov
sub
mov
dec
sub
jo
loop
fisttpll
iret
mov
push
or
jno
idivb
adc
sbb
test
push
xor
adc
in
pop
push
jne
in
adc
push
out
sub
mov
fwait
push
add
jle,pn
cmpsl
mov
fs
popf
dec
xchg
pop
jmp
lret
imul
dec
mov
shll
sahf
pushf
scas
fnstenv
movsl
sti
mov
movsb
pop
dec
adc
cmp
push
shlb
mov
jmp
xchg
and
jb
mov
cmpsb
dec
in
jle
sub
xchg
cmpsb
iret
mov
mov
adc
pop
ret
mov
shll
out
push
xor
or
out
jecxz
xchg
mov
fstpt
arpl
imul
lds
dec
xchg
inc
not
cmp
and
mov
xchg
jp
stc
out
jp
imul
xorb
push
fimull
sub
push
jmp
ret
shrb
xor
out
push
sbb
les
dec
les
bound
cwtl
stos
ds
ret
mov
push
lret
out
sub
iret
xor
dec
insb
das
shrb
jae
dec
in
pop
insb
jb
jp
xor
pop
push
pusha
cmc
or
std
inc
test
repz
testl
inc
mov
je
test
test
xor
in
jno
jbe
jb
nop
mov
adc
pushf
jae
ret
sub
aam
daa
lds
jg
aad
push
outsb
or
push
pop
inc
pop
push
mov
fadds
push
jmp
lds
sub
mov
enter
jecxz
es
js
mov
cmpsl
inc
fisubl
enter
push
daa
pop
pop
outsb
mov
dec
inc
fsubs
hlt
push
xor
mov
pop
aad
mov
cmc
into
adc
arpl
loopne
or
jno
pop
out
xor
jecxz
mov
adc
outsb
pop
shrl
jb,pn
or
mov
jo
mov
or
and
sub
adc
mov
mov
xchg
jnp
lock
aas
adc
repnz
aad
js
lock
shrb
jnp
adc
insb
dec
into
mov
cmp
xor
sub
xor
xor
stos
popf
and
pop
mov
jae
les
cmpsb
sbb
xor
add
jnp
lods
sbb
dec
and
push
rorl
sub
sub
lret
inc
xchg
xchg
push
mov
sub
and
addl
movsb
sti
rorb
leave
xor
pop
adc
stos
sbb
jb
hlt
lods
shrl
test
or
jge
pop
fwait
push
pop
mov
dec
cmc
icebp
inc
adc
mov
xor
mulb
addr16
push
inc
inc
mov
sub
mov
sahf
mov
les
notb
aas
sub
fs
mov
lds
ja
mov
pop
test
inc
cmpsl
movsl
xchg
lret
or
mov
adc
incb
jne
sub
ret
sbb
pop
popf
dec
cwtl
les
ljmp
jb
push
push
xor
mov
scas
adc
cld
push
call
mov
xor
cli
adc
in
rcr
pusha
cmp
pop
sbb
call
xchg
clc
loop
mov
call
inc
dec
arpl
xor
lock
clc
jns
inc
and
add
insw
outsl
mov
std
in
or
lea
shl
popa
dec
fwait
dec
in
jae
aam
adc
jmp
imul
inc
repz
ret
scas
push
adc
sub
sbb
xor
ljmp
mov
js
sti
stc
imul
fcomp
inc
inc
inc
aaa
mov
pop
adc
inc
inc
pop
out
jbe
jne
rclb
insb
pop
rcr
bound
sarl
cmpsl
mov
test
xchg
paddd
fs
fwait
scas
or
ljmp
mov
sarl
pop
jns
mov
je
outsl
sub
popf
jns
add
pop
in
dec
out
push
adc
subb
repnz
test
loope
jb
or
cwtl
cmc
loope
test
aaa
xchg
cmc
fcmove
inc
sub
mov
scas
shlb
roll
xor
xor
insl
mov
xor
and
push
mov
outsb
jo
andl
ret
push
jp
dec
adc
dec
push
bound
pusha
cmpsl
mov
bound
aaa
int
call
mov
push
daa
jb
sub
aad
add
cmc
or
xchg
movsl
sbb
mov
stos
cmp
xchg
push
cmp
mov
inc
jecxz
push
js
push
lret
lods
pop
inc
mull
shld
ljmp
fidivrs
pop
loope
jb
ljmp
inc
ds
push
xchg
inc
xchg
and
ret
pop
je
loope
jmp
outsb
andb
inc
or
adc
scas
cmpsb
nop
add
jmp
xchg
lret
scas
mov
xchg
and
jae
negb
leave
mov
cmpsl
and
hlt
arpl
mov
fbstp
cmc
fisubrl
leave
stos
in
hlt
push
loopne
mov
xchg
and
ffreep
je
repnz
dec
insl
and
cmp
jo
rcl
movsb
sysret
push
mov
or
rcll
leave
arpl
sbb
aad
dec
loopne
dec
mov
lcall
inc
sbbl
fwait
sbb
sub
negb
cli
int3
add
out
clc
test
mov
je
js
neg
inc
push
adc
in
mov
test
pop
jecxz
aas
ficoml
insl
setne
and
adc
mov
adcb
loop
jecxz
enter
subl
inc
stos
aas
fst
jbe
or
test
cmpsl
sub
outsb
out
sbb
loope
or
push
fidivl
push
in
movsb
push
or
or
sub
aam
fisubl
lret
push
push
mov
adc
dec
daa
call
mov
insl
or
cmp
fnsave
xchg
sbb
dec
lods
stc
inc
mov
cld
insb
lret
repnz
mov
stos
imul
repz
fld1
add
jns
arpl
enter
cmc
sbb
jecxz
sub
push
rclb
rol
in
addl
das
sahf
sarb
sbb
mov
int
arpl
jge
test
push
outsb
pop
jo
mov
or
mov
scas
mov
cmc
dec
lods
xchg
mov
jmp
pusha
push
lods
sarl
in
icebp
das
push
sub
pop
add
xchg
jge
pop
or
sbb
ljmp
out
sbb
mov
test
cmpb
adc
pusha
test
daa
push
out
ret
loope
push
xchg
mov
inc
std
dec
and
arpl
ret
popf
pop
loopne
lods
and
or
push
testb
int
daa
mov
xor
jl
call
jecxz
lods
jbe
mov
rolb
or
ficoms
movsl
pop
add
or
scas
lahf
cmpsb
fldcw
push
mov
dec
sub
push
mov
and
push
push
test
pmaxsw
adc
add
mov
dec
mov
jnp
add
nop
popf
fisubrs
dec
fwait
scas
je
out
aaa
mov
imul
inc
inc
je
or
aam
push
xchg
inc
and
ljmp
pop
add
mov
les
sub
xor
xchg
je
push
imul
dec
mov
imul
xchg
xchg
mov
out
push
lcall
xor
sbb
ret
rorl
lods
push
repnz
sub
les
xor
andl
loope
jae
push
out
out
into
cs
fiaddl
jb
pop
sub
and
inc
jecxz
ret
rcrl
jge
pop
and
outsl
sbb
inc
das
mov
into
sbb
aaa
jecxz
repnz
add
shll
mov
mov
loopne
ficoms
notb
push
push
arpl
daa
and
and
lods
xchg
lods
mov
inc
sub
nop
rolb
xchg
jge
popa
flds
sub
inc
cmp
sub
inc
jmp
pop
movsb
push
cwtl
cmp
add
mov
insl
cwtl
int3
push
les
cmp
out
into
pop
xor
cmc
out
insb
adcl
shll
scas
xorl
mov
mov
idivb
std
sub
mov
shrl
mov
call
jns
mov
mov
sub
mov
add
imul
test
mov
lret
out
adc
in
rol
ret
xor
sub
pop
or
mov
push
dec
mov
cmp
cmc
les
cmp
imul
lods
dec
cmpsl
dec
push
pop
mov
hlt
rcll
cwtl
shrb
lahf
xor
ret
xor
push
in
inc
shl
mov
pop
sub
mov
insl
mov
xchg
mov
or
pop
jnp
or
pop
mov
test
movsb
std
aas
push
mov
push
sti
xchg
aas
arpl
mov
sub
pop
jmp
mov
xor
sub
shl
mov
pop
inc
pushl
iret
lock
jge
xchg
sub
fwait
mov
pop
xor
les
or
sahf
shrl
loope
lods
xor
add
sbb
rclb
pusha
ret
scas
mov
sbb
leave
jb
xchg
movsl
aas
dec
xchg
mov
fs
inc
decb
and
or
out
push
pop
add
enter
mov
add
stc
fwait
mov
cmp
jne
sub
inc
js
lods
adc
shl
pop
bound
inc
fcmovbe
xor
cld
and
inc
adc
sub
adc
push
cmp
bound
rcrb
push
notb
arpl
dec
icebp
insl
sbb
jge
je
adc
scas
movsb
xchg
push
adc
sbb
jne
out
sbb
sub
call
les
dec
jp
cmp
aaa
sbb
jo
jne
and
cmp
sbb
repz
das
mov
inc
adc
notb
enter
mov
and
loope
cmc
jecxz
inc
negb
dec
test
sub
shr
lcall
xor
mov
jle
sti
test
les
sub
mov
inc
popf
iret
hlt
add
dec
je
shll
push
je
sbb
mov
out
test
dec
push
add
mov
and
inc
xchg
outsb
adc
clc
adc
sub
movsl
or
inc
imul
cwtl
push
cmpsl
and
addr16
adc
push
loop
xor
cltd
sub
call
aas
and
dec
in
test
out
aas
sbb
mov
inc
pop
iret
and
movsl
rolb
enter
mov
pop
ret
adc
jne
lods
aam
hlt
pop
orl
push
in
jb
cwtl
mov
fucom
push
neg
push
sub
lret
lret
adc
xchg
cwtl
dec
data16
out
loopne
ds
lcall
fwait
addb
xchg
cmc
mov
xor
mov
pop
pushf
pop
xcrypt-cfb
cmpsl
in
filds
ret
push
call
sbb
mov
je
sub
sub
roll
jnp
sarb
stos
loope
dec
sbb
lods
cmpsb
xor
xchg
adc
lahf
xchg
adc
imul
aam
les
leave
lods
fwait
mov
adc
test
rcrl
test
adc
add
dec
sbb
aad
negb
fldl
adc
test
fcmovnb
xchg
or
sbb
int
cwtl
es
mov
jg
out
jne
sub
pop
lods
mov
xchg
inc
xor
cli
scas
pusha
adc
int3
rcrl
cmc
push
je
inc
or
movsb
inc
inc
pop
and
sub
pop
pop
je
pusha
cmp
inc
ljmp
test
lock
jecxz
inc
movsb
lock
and
aaa
iret
xor
das
push
or
ret
andl
dec
adc
mov
lods
dec
and
sub
pop
enter
mov
jl
xchg
shll
inc
cmpsb
xor
fwait
cmp
inc
xchg
je
jae
pop
stos
xchg
lods
xchg
dec
shl
sub
sbb
aad
hlt
sarb
ljmp
kmovb
mov
jl
outsb
dec
jp
and
push
mov
loop
inc
popa
mov
push
dec
pop
outsb
adc
inc
test
into
and
hlt
sub
pusha
and
inc
stos
in
lds
xchg
inc
add
mov
mov
mov
sbb
push
rclb
iret
in
in
push
mov
mov
popf
hlt
pusha
pop
in
stos
loope
push
data16
cmpsb
fwait
pop
sarb
push
out
adc
lods
lds
popf
or
push
push
in
loop
vcmpsd
push
aad
out
es
hlt
aad
cli
shl
lock
icebp
xchg
sbb
inc
jno
sbb
outsb
or
notb
aam
and
xlat
aad
jecxz
loope
jge
lds
in
call
jg
cltd
outsl
aaa
sub
push
jecxz
aaa
xor
add
adc
dec
lods
imul
add
xchg
fwait
push
dec
arpl
mov
lret
shll
cmpl
adc
mov
mov
popf
adc
inc
jbe
mov
sub
bound
aas
icebp
and
rol
inc
aas
in
add
xchg
and
into
aad
adc
adc
pop
xchg
sub
repnz
movsl
rorb
cwtl
repz
aaa
add
mov
and
cmp
call
cmp
negb
jbe
mov
cmp
hlt
xor
lcall
adc
push
xchg
sbb
shlb
push
ret
lcall
pop
cmp
and
sub
jmp
adc
es
add
mov
mov
cmpsb
pop
and
rorb
shl
sahf
ja
adc
push
sub
pop
arpl
andl
out
xor
mov
adc
pop
jb
loop
arpl
mov
imulb
shufps
xchg
test
xor
addl
movsl
sub
loop
fnstsw
sub
ja
cmc
out
push
sub
mov
add
cmc
xchg
out
cmp
dec
mov
addb
jb
inc
add
or
push
icebp
andb
mov
adc
repnz
mov
in
sarb
push
push
pusha
xor
popa
pop
push
js
pop
iret
rclb
sub
inc
inc
pop
inc
xchg
sub
je
jg
mov
arpl
xchg
movsl
or
xchg
outsl
cmp
push
sub
mov
rol
mov
flds
xchg
ss
xchg
roll
xchg
stc
cmpsb
shlb
inc
sbb
sbb
scas
outsb
or
ljmp
mov
imul
ljmp
push
adc
push
and
dec
and
enter
andl
dec
xchg
mov
enter
sub
lods
adc
scas
push
dec
imul
mov
inc
ficompl
add
sub
in
add
or
cmc
andl
dec
out
imul
adc
leave
mov
in
sbb
push
aas
dec
scas
addr16
jb
jae
xor
and
je
sbb
aad
xor
loopne
inc
push
adc
mov
mov
out
scas
inc
xlat
ficoms
leave
aas
cld
pusha
jnp
add
pop
add
icebp
sbb
addb
xor
mov
into
mov
stos
sub
insb
in
popa
loope
xchg
repnz
test
test
xchg
loop
subl
xchg
pop
or
xchg
movsl
add
jne
mov
sub
jmp
in
push
mov
push
inc
push
dec
push
dec
inc
aas
push
cwtl
xchg
pop
xlat
dec
fwait
xchg
jmp
lock
test
mov
xchg
cmp
xchg
sub
jns
xor
adc
xchg
cmp
mov
stc
add
mov
sub
mov
fmuls
pusha
insl
mov
ljmp
call
and
jo
lret
jns
and
adc
outsb
loope
mov
out
outsb
fdivp
ss
movsb
xchg
and
enter
rcl
scas
dec
icebp
ljmp
mov
dec
stos
test
sub
lods
and
cmc
add
fstp
mov
pop
or
add
push
add
sub
movsb
and
jnp
scas
push
inc
push
push
adc
and
jl
jbe
movsl
sub
imulb
inc
pop
insl
aaa
fimull
arpl
aaa
stos
enter
cmp
jo
inc
popf
mov
inc
call
arpl
ss
dec
mov
icebp
enter
loop
inc
outsb
call
in
dec
and
mov
shll
mov
loopne
xchg
lods
lcall
stc
inc
ljmp
dec
mov
push
ret
push
mov
inc
inc
xchg
push
fadd
shlb
movsb
jo
xor
fsubs
sub
pop
loop
and
divl
mov
xor
mov
loop
rolb
jg
pop
subb
or
mov
cmpsb
sub
aaa
mov
lock
add
cwtl
cmpl
jne
push
in
lret
cmpsb
js
jecxz
inc
jmp
mov
fcmovb
int
loope
mov
pop
ljmp
cwtl
cmp
pop
jbe
mov
sub
loop
insl
jno
or
xlat
dec
loope
fbld
jns
outsl
and
lea
faddl
mov
outsl
jl
mov
fimull
pop
test
ljmp
dec
loop
in
leave
test
pop
outsb
pusha
icebp
mov
mov
pop
in
inc
sub
pop
mov
xor
mov
aaa
ret
repnz
icebp
call
dec
dec
mov
dec
stc
rcrb
stos
rclb
je
push
jae
mov
test
nop
push
mov
pusha
dec
xchg
es
mov
pop
mov
push
inc
inc
xchg
sub
ss
sti
les
sbbb
loop
push
xor
mov
xchg
pop
sahf
in
test
dec
push
icebp
inc
and
loop
mov
push
sbb
fisubl
xor
mov
lret
cli
add
loop
xchg
shrl
enter
and
clc
pop
cld
loop
cli
sbb
and
add
mov
mov
mov
lcall
sub
jp
ds
call
fcompl
data16
sbb
loope
jecxz
movsl
inc
daa
loope
inc
int
loop
lea
rcrb
jmp
lcall
push
push
sbb
sbb
rcrl
sub
shll
push
add
bound
add
outsb
xchg
jg
pop
shlb
stos
pop
repnz
shl
push
outsb
pop
loop
push
loop
mov
mov
aas
push
and
inc
pop
outsb
sub
mov
mov
mov
mov
ret
cld
adc
scas
inc
scas
add
jb
fidivl
mov
pop
rolb
dec
jo
pop
rcrb
daa
xchg
xor
lret
ret
loopne
jle
jg
lahf
pop
insl
cltd
shr
push
push
in
pop
xchg
js
mov
xor
push
push
xor
mov
iret
xchg
push
cwtl
cmpsb
xchg
loopne
rorl
inc
insb
cwtl
mov
add
and
loopne
inc
mov
xrelease
lods
jl
loope
mov
jmp
fcomip
ficompl
mov
mov
rorl
and
mov
mov
xchg
fbld
dec
incb
iret
rclb
add
inc
inc
or
mov
ja
movb
and
or
push
ffree
adc
xor
je
push
or
xorb
jae
mov
insb
inc
sub
xor
push
aam
pop
mov
sub
sbb
push
mov
out
push
les
lcall
imulb
loope
loop
push
and
xor
lods
pop
ficomps
inc
pop
cmp
push
sub
adc
popa
hlt
hlt
mov
sub
je
sub
inc
movsl
outsl
dec
adc
push
pop
sub
jecxz
inc
dec
jae
in
cli
pop
es
outsb
jl
lods
fdivl
sarb
fiaddl
pusha
movsl
push
das
add
and
cs
mov
arpl
jecxz
push
mov
dec
icebp
mov
inc
adc
loopne
hlt
push
lret
hlt
mov
inc
imulb
jle
loop
or
adc
mov
pop
insl
add
adc
xchg
mov
hlt
dec
pop
jae
adc
or
lds
cwtl
jb
mov
jb
lods
lea
ja
sbb
xor
xor
popa
or
loop
cmp
sti
inc
sbb
fadds
pop
sbb
push
jno
jae
jno
insb
loop
loopne
fists
mov
out
int
call
filds
push
mov
inc
mov
cmp
cmp
leave
dec
or
arpl
loope
in
repz
add
ds
mov
or
add
cmp
popa
loopne
cmp
imul
test
test
push
jmp
adc
mov
push
adc
jmp
cmp
mov
rolb
and
daa
loope
nop
xor
jns
cmp
sbb
sahf
inc
mov
je
sub
inc
jecxz
cwtl
pop
faddl
imul
xchg
fwait
je
ljmp
pop
push
jmp
cwtl
and
pusha
adc
dec
jmp
out
sbb
imul
inc
mov
aaa
add
movsl
mov
lods
ljmp
and
push
pop
mov
mull
ja
loope
pop
pop
xlat
xor
int
and
shr
loope
lret
inc
add
mov
daa
ret
jecxz
jbe
ljmp
je
push
sbb
mov
mov
insb
aaa
imul
xchg
adc
mov
lds
aas
insl
imul
outsb
mov
mov
inc
insb
pusha
outsb
sub
and
imul
xlat
aaa
cmp
loope
test
push
daa
and
jbe
inc
cmc
fwait
adc
stos
jmp
in
js
push
push
mov
jmp
arpl
jbe
pop
pusha
xchg
pop
jecxz
movsl
inc
in
sub
push
imull
loop
je
aad
loope
ss
jecxz
mov
inc
inc
jbe
mov
sbb
push
movsl
movsb
stos
testl
cmc
sub
outsb
and
push
lods
inc
lahf
pusha
loop
fidivl
rclb
jne
and
push
fucomi
insb
adc
fwait
cltd
push
cmc
ljmp
mov
loop
mov
pop
shll
fsubr
pop
sbb
les
sub
call
add
push
xchg
repnz
dec
jo
and
jecxz
dec
insb
sub
add
call
out
push
and
push
add
add
pusha
mov
pop
testl
jmp
add
in
push
imul
push
add
fcoml
scas
icebp
mov
cmp
mov
pusha
repnz
and
add
loop
push
jnp
loop
push
cld
push
jge
xchg
test
loope
in
test
dec
lods
push
pop
mov
filds
in
ljmp
ljmp
cltd
push
sub
push
in
xor
arpl
nop
mov
add
jle
inc
in
stc
fisttpll
call
sbb
mov
mov
jne
js
insb
dec
sbb
pop
stos
add
das
mov
js
call
aad
out
aaa
add
das
adc
and
adc
xorl
mov
mov
inc
pushf
dec
xchg
out
lea
dec
loope
adc
mov
aaa
xchg
jne
mov
orl
test
sub
rol
das
clc
push
mov
jmp
jecxz
push
sbb
mov
push
push
jmp
jmp
insb
inc
adcl
mul
and
imul
fwait
loop
pop
fidivrl
insb
ret
adc
ljmp
js
inc
sub
hlt
je
jmp
jbe
aaa
imul
xor
jmp
into
aaa
or
pop
addb
push
je
pop
push
push
dec
aaa
imull
fimull
inc
int3
xor
dec
push
and
inc
punpckhbw
pop
and
xor
je
ss
mov
fcmove
inc
imul
jecxz
or
aaa
mov
fimull
jmp
push
je
pop
mov
mov
adcb
inc
jecxz
push
je
pop
test
dec
fimull
dec
xor
mov
dec
mov
dec
scas
push
outsb
rolb
arpl
xor
push
push
aaa
xchg
sub
or
mov
into
rorb
sub
je
pop
into
push
int
shlb
rcrl
ret
aaa
xchg
push
ficoml
call
pop
ljmp
dec
inc
in
xor
push
add
xchg
jne
mov
adc
pop
lret
aaa
lea
or
loop
sbb
aaa
jb
fidivl
xor
notl
aaa
dec
stos
fisubrl
insl
xor
outsb
push
popa
loope
or
xorb
inc
push
xor
dec
push
test
lret
lea
xor
mov
xchg
pop
cli
inc
loop
mov
push
add
push
mov
test
je
pop
push
lret
aaa
scas
scas
fiaddl
inc
mov
arpl
xor
add
inc
push
mov
scas
or
jo
aaa
ret
cmc
loopne
loope
jmp
push
gs
pusha
jl
pusha
loop
pop
inc
call
pop
dec
jo
inc
nop
test
arpl
hlt
test
push
ret
divb
xor
in
pop
pusha
jmp
push
dec
mov
jmp
pusha
cmp
add
loop
or
adc
mov
loope
push
rcr
imul
mov
cmc
push
loop
ljmp
mov
loop
popa
popf
ljmp
add
arpl
inc
shll
imul
icebp
lret
loopne
mov
out
cmc
popa
test
out
ljmp
mov
call
in
xor
push
cli
movsb
lcall
push
push
mov
jecxz
mov
sub
sub
push
inc
not
roll
mov
in
clc
push
xor
pop
loop
dec
and
push
repz
cmc
cmp
dec
arpl
arpl
out
popf
or
fwait
in
mov
loopne
lahf
loop
insb
loop
into
and
mov
inc
imul
scas
popf
mov
cmc
shl
lds
fwait
push
and
pusha
stos
push
xor
rol
pusha
xor
ret
xor
jb
int3
ficoml
divb
or
and
xchg
adc
shlb
or
pusha
jb
lea
ret
sub
add
push
jmp
push
and
xor
and
les
sub
into
shll
rorl
mov
add
inc
and
and
or
mov
bound
aam
movsl
dec
mov
add
adc
fs
hlt
pop
inc
insb
push
and
xor
test
and
ret
and
add
fs
inc
insb
push
and
dec
aaa
roll
fs
xor
insb
mov
push
dec
push
shl
adc
inc
mov
and
xchg
and
ja
lds
and
adc
roll
push
xchg
push
and
hlt
cltd
fldenv
push
loopne
inc
push
loope
and
ja
push
mov
enter
cmpsb
push
test
pusha
or
fs
icebp
call
insb
dec
and
dec
sub
cwtl
mov
and
xlat
and
mov
movsl
imull
pop
jmp
dec
and
pop
sub
fwait
lea
mov
fisubl
lret
shrl
or
das
pop
dec
dec
sarl
mov
and
imul
pop
leave
in
sarl
pusha
sbb
jmp
mov
les
insb
lea
jp
push
arpl
xchg
adc
int3
arpl
mov
sbb
or
cld
mov
pop
pusha
and
sub
pushf
dec
mov
jge
insl
lea
lret
pop
mov
dec
or
sti
mov
pop
push
pop
jmp
lea
jb
jl
sub
fisubrs
into
mov
mov
and
lahf
push
push
loop
fldenv
mov
pop
lea
dec
and
into
sahf
pusha
mov
es
les
sub
pusha
insb
int
mov
mov
pusha
in
inc
push
sub
dec
shll
data16
and
xchg
pusha
insb
andl
inc
rcl
mov
mov
into
mov
pusha
add
lock
push
outsl
into
inc
loop
xor
and
jb
mov
sbbb
and
jmp
popa
arpl
fbld
iret
dec
mov
mov
punpcklwd
pop
in
out
loop
pusha
je
xchg
xchg
inc
pusha
addl
pop
testl
sub
mov
mov
pusha
add
push
pop
inc
insb
xor
and
roll
arpl
mov
mov
mov
xchg
sub
bound
rol
mov
and
adc
in
hlt
push
jb
inc
pusha
and
xor
test
fnstenv
mov
jne
shll
mov
adc
shl
mov
inc
pusha
and
aaa
and
mov
mov
mov
push
insb
push
and
jns
push
push
shll
mov
and
ja
lds
shll
add
das
cmc
push
inc
pusha
das
testl
cltd
pop
mov
jbe
fcom
enter
es
sub
arpl
clc
pusha
cltd
call
arpl
pusha
fs
sub
cwtl
pusha
insb
mov
inc
inc
imul
pop
test
pop
xchg
pop
push
jecxz
fldenv
jns
les
pop
dec
insb
cmp
sub
rorl
push
insb
mov
rorl
mov
push
dec
insb
cmp
sub
rorl
imul
and
mov
inc
push
pop
insb
dec
xchg
cmp
arpl
notl
imul
cmpsb
and
or
dec
movsb
das
jns
lock
or
or
push
lret
call
and
dec
or
sti
mov
les
aas
pusha
insb
das
and
mov
insb
or
fisubs
into
pop
mov
dec
push
sar
mov
pusha
cs
fs
push
adc
das
in
arpl
enter
and
insb
pop
xchg
dec
push
pusha
xor
arpl
mov
xchg
lea
andl
push
arpl
push
mov
pop
testl
testl
pusha
and
insb
nop
xchg
adcb
fldenv
mov
fisttps
mov
pop
mov
dec
inc
cmp
loope
cmp
push
cmp
lods
sub
pushl
sub
jne
jb
pop
enter
and
and
cmc
cmc
and
mov
mov
jmp
xchg
insb
inc
jmp
sub
loopne
xchg
inc
mov
imul
je
jb
loope
mov
push
imul
hlt
insb
out
or
pop
xor
xchg
dec
jmp
sub
or
xchg
jne
dec
out
or
xchg
cmc
jb
loopne
cmc
popa
cmpsl
ja
ljmp
insl
lods
hlt
js
in
lods
idivb
pusha
xlat
scas
daa
call
ljmp
testl
fdivl
sub
loop
es
mov
lret
insb
mulb
ja
push
xor
jb
push
and
clc
and
in
gs
loopne
das
loop
jne
sbb
hlt
jns
pop
imull
ja
in
inc
call
inc
ljmp
in
dec
insl
add
cmp
ja
mov
loopne
push
maskmovq
divl
mov
ljmp
xchg
and
sbb
sbb
ljmp
xchg
in
push
ss
jg
xor
xchg
inc
and
push
xchg
push
adcl
jo
fisubl
movsl
xor
imul
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
and
push
and
push
pusha
out
sub
xor
mov
pop
xchg
insb
inc
and
add
cmp
insb
fisubl
sub
ror
mov
and
pop
and
ja
adc
push
adc
loop
ficompl
testl
mulb
pop
lods
ljmp
in
dec
mov
push
pop
jbe
jmp
sub
jb
outsb
gs
pop
gs
inc
jne
ljmp
daa
and
mov
push
inc
jb
les
push
xchg
and
xor
push
mov
mov
aaa
addr16
pop
cmp
jno
cmpsl
xchg
imul
sub
shl
push
push
adc
test
mov
push
es
mov
push
ss
mov
lea
xchg
ljmp
dec
sub
clc
jle
cmp
aaa
fsubs
loop
out
cmp
or
sub
cli
adc
clc
bound
inc
out
cltd
inc
fs
fstpl
or
cmp
sub
cmpl
push
pop
inc
imul
mov
idiv
pop
jge
push
ret
inc
mov
add
xchg
pop
mov
push
xchg
cltd
aam
xchg
inc
sbbb
cmp
or
shl
inc
lret
loop
add
ret
es
or
mov
sub
push
dec
inc
push
clc
sub
sub
pop
or
cmp
push
lea
adc
push
test
xchg
add
daa
ss
mov
jb
xor
es
sub
ficoml
daa
fwait
insb
cmp
adc
jb
mov
or
xchg
test
xchg
mov
cmp
ljmp
arpl
aaa
mov
jns
sbb
xlat
dec
lahf
addr16
sar
jns
imul
out
data16
inc
xchg
mov
or
fsubr
div
into
jbe
loope
not
shr
push
cltd
jbe
enter
scas
sub
mov
add
push
inc
jl
mov
popf
pusha
test
cs
lahf
inc
add
and
jno
push
inc
stos
xor
call
sbb
dec
in
push
push
enter
jbe
lods
sub
adc
sub
push
imul
dec
sub
sbb
add
loop
enter
push
rcrl
add
les
xor
add
xchg
fs
jae
int
push
rol
push
fs
sub
cmpb
mov
lock
xor
test
sub
xchg
pusha
inc
sub
mov
stos
inc
xchg
pcmpgtd
xchg
dec
aaa
add
fcoml
jbe
call
test
dec
dec
mov
mov
sub
inc
fnstenv
scas
mov
fs
shll
mov
jne
sub
movsl
or
xchg
shll
lahf
imul
mov
push
repz
jecxz
inc
ja
testb
daa
pop
imul
xchg
daa
push
xchg
mov
mov
out
add
ret
mov
push
and
adc
ds
test
fs
les
sbb
push
pop
fmul
cwtl
sub
mov
dec
or
dec
loop
call
jo
push
out
jb
add
dec
inc
push
add
or
sbb
and
jbe
bnd
add
push
fmulp
xchg
cmp
int3
add
sub
adc
sbb
insb
aaa
or
and
les
cltd
int
sub
pop
je
ret
lret
push
fwait
mov
add
adc
rcrl
aaa
mov
mov
mov
inc
arpl
ret
les
aam
dec
add
and
test
loop
in
mov
es
mov
popf
fstps
push
sub
push
inc
xor
xchg
cmp
sbb
ss
mov
jge
mov
cmp
jge
jmp
sar
sub
movsl
inc
dec
dec
mov
lcall
xor
xchg
clc
fnstcw
insl
xchg
iret
int
xchg
inc
sub
das
es
add
imul
int3
stos
rolb
imul
lret
add
push
stos
and
mov
lret
xor
mov
outsb
insl
lea
testb
sub
test
mov
push
testb
xchg
divb
dec
mov
xchg
fs
cmp
sbbb
add
ljmp
or
sti
inc
sbb
mov
push
faddp
xor
xchg
in
into
outsb
movsl
loopne
leave
popl
xchg
inc
movsl
push
insb
into
popf
jg
gs
xchg
loopne
in
push
imul
push
inc
mov
imul
fcompl
push
std
xchg
lret
add
out
sbb
xor
test
dec
lods
mov
fldpi
sub
or
fcomps
fstpl
cmpsl
fsubrs
test
scas
adc
add
es
xchg
sti
adc
outsb
pop
out
imul
mov
mov
jbe
xor
fdivs
aad
mov
sub
arpl
adcb
add
inc
sub
dec
mov
insl
insl
and
cmp
dec
sub
je
push
or
jl
scas
jno
pop
std
fcompl
sbb
lds
loope
sub
mov
jbe
test
dec
jbe
fimuls
cmp
pop
push
mov
ljmp
dec
cmpsl
inc
insl
das
lret
cmp
and
sub
loop
inc
jmp
pusha
ljmp
rcl
hlt
pop
shl
loop
adc
aaa
ljmp
pusha
in
shr
scas
push
hlt
shl
jae
shr
insb
shl
pop
in
and
les
xor
lcall
ds
dec
xor
mov
push
rcll
aaa
ret
fiaddl
je
pop
dec
call
xor
jne
jne
jne
jne
jne
gs
mov
xchg
repnz
inc
mov
xchg
inc
adc
mov
int
ret
inc
bound
adc
rclb
fldl
adc
sbb
mov
cmpsl
loop
push
inc
lock
pop
mov
repz
inc
xor
das
test
ret
ret
test
jmp
adc
pop
sub
push
fdivs
mov
inc
lods
xor
inc
test
xor
loope
out
jmp
sub
mov
xor
push
push
scas
mov
filds
outsl
pop
sbb
mov
inc
ret
lods
jmp
aas
dec
mov
jp
aaa
adc
mov
add
xor
fwait
inc
pusha
mov
fldenv
mov
adc
sub
jmp
or
xor
mov
push
lods
pusha
xor
xlat
fwait
adc
jbe
push
stos
pop
xor
push
popf
ret
mov
jo
add
jbe
xchg
fwait
out
cmp
andb
mov
out
inc
xlat
pusha
jbe
aam
pop
gs
out
rcr
bnd
jb
call
lea
lods
sbb
xchg
lea
cmp
outsb
jo
icebp
push
sub
shlb
mov
aaa
mov
cltd
in
add
cmp
sbb
out
pusha
fwait
jne
loope
mul
mov
pop
push
jbe
in
mov
xor
sbb
mov
xchg
or
jge
xchg
inc
je
adc
lods
pop
dec
ja
aaa
mov
push
fdivs
and
clc
data16
fcmovnbe
cwtl
adc
push
xchg
xor
cltd
pop
lods
adc
je
test
cmp
add
push
push
push
out
aaa
int
mov
xor
jb
je
or
add
ss
push
xchg
daa
inc
stc
mov
out
jbe
xchg
lods
xor
in
out
sub
loop
aam
push
jo
push
pop
mov
sub
stos
add
in
adc
jne
pusha
sub
imul
push
and
pushf
dec
sub
fcom
imul
jbe
xlat
mov
xor
adc
push
addr16
push
push
hlt
addr16
das
fistps
loopne
dec
call
fucomp
xchg
dec
sahf
pusha
rol
lods
outsb
fs
mov
call
pshufw
push
adc
lods
inc
pusha
mov
xlat
aaa
ret
add
xchg
sub
and
and
loop
lds
push
enter
add
in
xor
lret
jmp
imul
push
mov
jmp
pop
cwtl
xor
jne
lods
nop
add
lret
fwait
adc
jno
mov
add
popa
and
or
iret
push
test
push
inc
jecxz
mov
lahf
push
sub
jecxz
lods
pusha
xchg
push
jp
arpl
je
popf
xchg
jecxz
out
loopne
or
scas
mov
rcll
arpl
je
stos
int
arpl
pop
jl
mov
or
in
mov
pop
pop
hlt
ret
inc
and
arpl
and
insb
ljmp
add
repnz
ss
sub
ret
jmp
loopne
jmp
push
push
mov
leave
dec
xchg
sub
mulb
cmc
xchg
adc
push
xchg
sbb
xchg
and
push
arpl
jge
pusha
push
stc
push
push
imul
jecxz
xchg
cmc
xor
sub
mov
leave
inc
aam
stos
push
out
pushf
jecxz
arpl
mov
je
push
imul
jo
push
lods
mov
lods
jo
lcall
xor
fwait
cmp
mov
push
in
call
arpl
dec
push
hlt
and
sub
ja
out
inc
and
xor
lea
xor
mov
xchg
xchg
mov
adc
xchg
roll
je
and
nopl
xor
pusha
and
sub
jo
jo
jo
andl
loop
adc
sar
adc
es
rcl
pusha
push
jmp
adc
sbb
stos
cmp
jecxz
add
mov
cld
int3
xchg
jb
push
push
repz
das
mov
adc
xor
sub
and
mov
push
push
stos
mov
ror
sub
sub
popf
push
loopne
jbe
pop
in
xchg
jns
adc
xchg
inc
les
dec
add
xchg
or
jne
xorb
ss
cmp
adc
push
xor
outsb
repnz
push
test
jb
xor
add
push
xor
push
push
mov
jb
ss
sub
cmp
mov
ja
lods
ja
lea
rolb
imul
pop
orb
inc
and
adc
fisubrs
lea
jecxz
mov
cwtl
ss
jle
xor
into
fisubrl
inc
mov
inc
mov
xorb
jl
sub
into
call
ss
adcl
dec
aaa
sbb
or
or
xchg
aas
push
cld
mov
xor
push
jne
lods
mov
cmpl
arpl
push
ror
les
mov
xlat
into
sub
int3
testl
add
int3
in
jmp
rclb
mov
mov
shrl
add
nop
loopne
inc
in
out
popa
fsts
xchg
add
stc
cmc
cmp
dec
das
mov
adc
dec
arpl
fistpll
ljmp
sbb
cmc
mov
cs
jne
cmp
mov
inc
cmp
sarb
mov
divl
xchg
lcall
lret
inc
xchg
add
and
xchg
stos
imull
out
mov
shlb
jo
pop
insb
jge
xor
and
popa
outsb
in
push
jno
adc
sbb
jo
scas
dec
adc
addb
xchg
jae
xor
adc
nop
and
inc
imull
mov
mov
mov
pusha
sarb
rorl
mov
stos
js
pop
adc
outsb
ss
or
and
push
push
clc
mov
shl
jmp
scas
fdivrl
pop
xor
or
lods
shl
pusha
int
sbb
inc
push
inc
dec
mov
push
ljmp
fcomps
cmp
gs
fmull
xchg
outsb
scas
mov
lods
xor
pshufw
mov
xor
fisubl
xor
mov
rorb
mov
inc
fbstp
pop
xor
and
mov
mov
test
dec
mov
push
xchg
rclb
xor
xor
cmc
xorb
push
cltd
stos
cmp
sti
sub
cli
inc
pop
sbb
mov
insb
hlt
sub
jo
push
hlt
mov
add
arpl
xor
mov
cmc
nop
pop
stc
jbe
or
mov
sub
sub
xor
jmp
in
and
cmc
cmpsl
shlb
fwait
inc
das
cs
mov
and
cmp
jbe
mov
sub
call
cld
add
dec
mov
push
loope
loopne
add
push
and
pop
jne
hlt
imul
loope
xor
xor
ds
add
rorb
enter
fbld
or
fadds
sarl
push
inc
nop
add
js
push
lcall
popa
dec
in
rcr
and
xchg
inc
push
outsb
dec
scas
dec
shr
cmp
insl
inc
xor
mov
push
xor
or
cmp
in
inc
jmp
inc
push
out
sbb
xor
subb
test
xchg
fs
sub
and
dec
mov
inc
je
sub
push
cmpsl
nop
lea
adc
out
jno
dec
sub
les
sub
loop
lcall
test
jbe
and
cmp
loopne
jp
xchg
fsub
cmc
lahf
lret
sar
rcrl
jnp
test
scas
jne
dec
je
stos
cmpsb
dec
popa
pushl
xchg
mov
mov
push
cltd
vaddss
and
sbb
and
inc
outsl
pop
aaa
sarb
dec
xchg
jb
dec
idivl
dec
dec
icebp
hlt
aas
repnz
jmp
mov
loop
imul
pop
les
ficompl
xor
mov
loop
mov
mov
pop
push
xchg
outsb
test
and
iret
shlb
jo,pn
insb
fidivl
loope
jbe
outsb
fnsave
mov
popa
push
push
pop
jmp
push
std
shr
jle
xlat
std
mov
insb
imull
cmp
lret
and
inc
dec
cmp
jge
xchg
xchg
mov
jbe
mov
addr16
mov
lods
mov
std
dec
push
push
fld
add
and
rolb
push
cmp
push
adc
sbb
data16
int3
jbe
xor
mov
jne
test
mov
cmp
push
sub
popl
xor
push
into
xchg
imul
mov
loope
cmp
pop
or
mov
or
fisubs
fucomip
dec
repnz
jmp
ljmp
loope
inc
xor
sarb
push
ja
and
sub
jecxz
push
ljmp
scas
jne
cmpsl
xchg
xchg
sub
xchg
sbb
fisubl
fldl2e
dec
lcall
popa
arpl
das
mov
xor
sub
ficompl
jmp
and
aas
jle
fsubp
mov
cmp
xor
pusha
push
bound
fnstcw
fbstp
fisubrl
out
scas
out
int3
pop
sbb
jecxz
jo
les
dec
adc
sub
xchg
popf
repnz
in
or
std
imul
jle
dec
aaa
insb
roll
in
loopne
mov
hlt
loop
ret
sbbb
sub
nop
mulb
orb
jne
sbb
cmc
fwait
mov
dec
mov
mov
dec
or
enter
xor
ret
nop
sub
inc
dec
xor
iret
addr16
jp
nop
cmp
mov
cmpsb
add
popa
je
pusha
shl
fidivl
cmovl
jmp
repnz
rcrb
test
cmc
push
push
mov
inc
jne
inc
jmp
iret
push
adc
dec
in
push
fcomip
add
fistpll
dec
outsl
lret
loopne
rclb
hlt
ja
adc
xchg
pop
cmpsl
cmp
pop
mov
insl
cmc
mov
xor
mov
adc
adc
cltd
pusha
ljmp
cltd
lods
or
xor
mov
xor
loopne
pop
scas
test
or
cmp
fidivrs
test
arpl
fisubrl
insl
cmp
mov
push
shrb
add
mov
and
outsb
shlb
inc
push
jmp
rorb
mov
xor
divb
ljmp
mov
shrb
sahf
or
rorl
cltd
lret
shrb
and
aas
adc
and
jmp
sbb
pop
mov
pop
outsb
add
jne
sub
stos
mov
das
pop
push
int
andl
add
sar
mov
and
into
add
push
mov
xor
dec
sbb
mov
push
xchg
adcb
push
fwait
lret
stos
stos
sub
jb
cmp
mov
xor
jg
push
mov
cmp
xor
repnz
and
xor
in
out
mul
popa
adc
arpl
xor
xchg
xor
mov
jns
fistl
jle
rcrb
cmc
and
test
inc
fsub
stos
add
and
ja
cli
fistpll
push
and
rcrb
test
cmp
test
pop
filds
adc
insb
outsl
cmp
jp
inc
fisttps
xor
hlt
or
pop
fsubs
outsb
and
add
aam
cmp
rorl
dec
sbb
stos
rcl
outsb
test
add
fsubl
xorb
adc
lret
pusha
loop
mov
pop
or
clc
pop
mov
jbe
std
cs
jnp
pop
sbb
fbstp
mov
outsb
xor
int3
sub
loope
sub
pop
sar
pop
shl
inc
cmpsl
cmc
xor
mov
enter
mov
subl
or
jbe
lcall
and
out
inc
cmc
dec
daa
push
jns
mov
xlat
aad
xor
mov
mov
jo
fbstp
dec
cmpsb
aad
adc
xchg
aam
popa
inc
cld
orb
stos
outsb
aam
and
cmp
sub
inc
insb
pop
xor
fidivs
cmc
pop
popf
mov
lret
inc
hlt
pushf
xor
std
jb
mov
xchg
and
mov
jne
arpl
adc
fnstsw
push
xor
jb
outsb
xor
nop
mov
clc
shrl
mov
iret
and
and
adcb
jecxz
sub
mov
push
fbstp
enter
mov
stc
push
mov
jbe
dec
insb
ljmp
out
sti
adc
les
cli
popa
int3
addr16
frstor
lahf
enter
mov
sbb
mov
stos
pop
mov
xchg
lahf
arpl
jl
jo
aam
fisttpll
test
jnp
imul
out
mov
aam
push
aaa
das
adc
pop
je
loop
jns
dec
inc
dec
mov
mov
mov
jne
xor
loop
jb
pop
subl
loope
loop
aam
xor
mov
inc
cmc
enter
xlat
pusha
jb
xchg
add
inc
aaa
mov
arpl
xchg
pop
std
mov
nop
pop
inc
xor
scas
pop
lcall
or
mov
jle
shlb
das
xor
mov
pusha
mov
jmp
jbe
inc
xor
jg
outsl
arpl
mov
dec
cmp
dec
fwait
mov
pop
add
add
popa
test
bswap
imul
adc
loope
mov
push
dec
dec
jle
ss
sarb
es
popf
cs
mov
shr
mov
movsb
xor
pop
pop
add
arpl
in
xor
xchg
fwait
push
push
in
mov
int
jbe
lret
sub
iret
cmp
push
int
and
inc
mulb
hlt
loopne
divl
jbe
dec
movsb
sbb
orl
sub
pop
xor
push
xchg
and
jp
sub
push
pop
add
jb
mov
iret
andb
dec
fmulp
push
cmp
pop
and
pushf
jo
ljmp
outsb
lea
inc
dec
aaa
lea
jecxz
aaa
lahf
aaa
pushf
and
clc
jecxz
shlb
mov
test
imul
pop
mov
sar
ds
fcmove
outsb
lock
sbb
cmp
jecxz
dec
ja
sarb
mov
and
inc
inc
xor
pop
sbbb
divl
jp
mov
push
inc
adc
or
add
sub
xor
lods
loope
into
jle
xor
cmp
in
bnd
xchg
jbe
outsl
dec
xor
rolb
inc
xor
lock
loope
xor
mov
push
and
cmp
push
pop
jecxz
mov
je
jbe
pop
clc
push
addr16
shll
shlb
scas
rcr
outsb
mov
aam
in
aaa
cli
xor
mov
lods
dec
inc
mov
push
mov
stos
xor
mov
push
jbe
push
fsubrs
js
outsb
out
in
int3
xor
jmp
sbb
insb
mov
das
add
inc
and
push
push
lcall
jb
push
imul
clc
jg
push
dec
aaa
adc
ficompl
jecxz
xchg
jmp
in
xchg
sub
fstps
dec
xchg
aad
idivl
hlt
ds
adc
xchg
push
into
lcall
popf
inc
push
mov
aas
sub
dec
ret
aam
mov
in
xchg
jbe
insb
rolb
push
bound
pop
mov
push
rol
jno
test
rclb
push
icebp
push
cmp
cmc
inc
arpl
fildl
xchg
xchg
dec
fwait
push
and
dec
cmpsl
xor
adc
cmp
inc
mov
fdivs
hlt
mov
and
jmp
je
ucomiss
dec
movsb
push
insb
sti
mov
jae
pop
into
pop
xchg
rorb
push
dec
add
adcl
sub
aad
std
dec
dec
mov
push
add
dec
jno
mov
aas
inc
das
popf
mov
ret
inc
add
cmc
jne
jbe
movsb
pop
iret
cwtl
in
rolb
sahf
call
aam
pop
push
sbb
mov
mov
cmp
in
outsb
or
dec
dec
in
rolb
adc
out
pusha
jbe
xchg
or
sub
dec
mov
xor
jae
mov
push
fidivrs
sub
inc
stos
negb
loope
test
pop
inc
ljmp
push
int3
xor
or
cs
sbb
movsw
inc
mov
outsb
stos
pop
jmp
ds
in
icebp
test
je
leave
sbb
push
jge
nop
dec
cmp
adc
pop
sarl
xchg
jle
out
mov
push
or
xchg
and
call
inc
insb
xorl
loope
loope
xor
psrld
adc
cs
xchg
mov
mov
mulb
jg
ss
std
insb
inc
xchg
push
jle
and
xchg
jne
imul
out
out
lret
mov
insb
add
lret
mov
and
pop
adc
shlb
pusha
and
jge
lds
sahf
outsb
ja
or
xorb
stc
dec
orl
and
adc
mov
out
test
fld
sub
test
repnz
adc
or
jno
mov
sub
cmp
push
mov
cltd
inc
fildl
lds
and
adc
push
les
sub
lock
add
push
and
lret
repnz
push
inc
push
sahf
mov
call
nop
fucomip
lds
pusha
push
inc
add
jmp
imul
addr16
ret
jo
cmp
lret
dec
rol
mov
outsl
outsb
jmp
mov
inc
aas
dec
cli
rcll
sarb
cmpsl
xor
fldt
add
adc
inc
dec
fisubrs
movnti
iret
jl
mov
pmaxub
dec
lea
pop
xor
cmpsl
mov
shl
push
or
insb
jne
loope
outsb
add
xchg
clc
mov
push
in
bound
sbb
leave
push
lahf
dec
jg
xchg
xchg
dec
lods
pop
bound
and
cli
mov
out
nop
cltd
and
or
lds
push
mov
sub
jae
mov
push
repnz
xchg
je
pop
mov
fsts
xchg
adc
cs
push
sub
jbe
mov
inc
cmp
repz
adc
out
cmp
mov
ret
mov
cmpsl
es
xor
pop
jle
es
push
lret
stos
push
inc
push
stos
sub
add
inc
and
add
mov
sub
xchg
add
aas
jecxz
jbe
les
sbb
mov
add
jo
pop
or
xor
jo
test
ret
imull
jbe
xchg
xchg
mov
dec
jecxz
cmp
loope
arpl
jg
and
addb
dec
jae
stos
inc
popf
jno
push
js
and
inc
fnstenv
sub
jb
jo
jno
adc
inc
test
out
test
lock
fsubl
aam
jge
mov
nop
adc
std
es
and
loop
shl
into
in
fildll
fsubl
int3
sbb
rclb
sti
push
fldcw
inc
cmc
and
mov
fwait
adc
sbbl
test
rolb
inc
cld
cld
xchg
lret
or
lds
test
push
bound
cld
popa
mov
add
xorb
sub
cmp
shll
incb
mov
cmc
aad
inc
out
in
xchg
xor
xchg
cmc
cmp
and
push
sbb
jbe
dec
and
and
sub
out
jge
or
add
imul
or
shlb
pop
pop
mov
outsb
xchg
xchg
fcmovbe
mov
xor
and
inc
shl
jmp
xor
mov
ja
sbb
mov
je
arpl
jnp
mov
xor
in
pusha
xor
add
adc
xchg
mov
cmc
rcl
lret
shr
shl
dec
mov
jmp
xchg
lock
fcompl
cmpb
shlb
scas
mov
test
fiaddl
shlb
cmp
ficomps
push
push
mov
sbb
scas
sbb
inc
push
inc
cmpsb
cmp
pusha
loope
ret
dec
into
xor
pop
enter
bound
nop
sbb
xor
ds
dec
daa
mov
fbstp
mov
loopne
popf
mov
cmc
outsb
enter
sbb
fstp
sbb
push
in
stos
adc
add
inc
mov
fnop
imul
in
xchg
lcall
sub
xchg
iret
jecxz
insb
popa
js
out
fmull
fbld
fstps
pop
mov
push
popa
nop
pop
xchg
aaa
jp
mov
mov
pushf
jo
mov
shrb
inc
insb
xor
movsb
fiadds
fstl
jne
xor
loop
sub
sub
jmp
pop
fidivl
sub
adcl
add
ss
hlt
adc
shlb
dec
scas
and
pop
dec
iret
test
pop
mov
jg
push
inc
xchg
lret
sbb
jo
subl
popf
stc
aas
adc
pop
mov
testl
cli
dec
rolb
pop
aad
inc
cmc
and
mov
mov
test
cmp
push
push
mov
test
iret
xor
fistpll
push
sub
into
xor
or
js
int
aas
adc
jle
aas
inc
xor
pop
jmp
insl
cmpsb
jecxz
loop
rcrb
stos
ret
jo
cmp
xadd
jmp
shrb
outsb
mov
setg
sub
jne
pop
call
jno
outsl
sub
lods
mov
add
jle
gs
or
mov
inc
xchg
pop
inc
jbe
ficompl
mulb
insl
adc
rorl
es
adc
outsb
lods
xorb
sub
mov
lods
or
mov
xor
addl
addr16
in
fisttpll
jmp
sub
add
les
sbb
cltd
xlat
shl
mov
int
pushf
dec
add
push
rolb
push
and
cmp
addr16
sbb
push
adc
dec
les
fistps
inc
mov
adc
rcr
nop
sub
jae
rclb
jecxz
mull
loope
fs
nop
rcrl
loope
pop
insb
push
dec
xor
jecxz
lcall
int3
jae
insb
bound
out
inc
jbe
icebp
jnp
outsb
inc
leave
cmpsb
out
sbb
push
xchg
xchg
jb
jae
fistpll
sbb
inc
divl
add
pop
fs
mov
out
xor
xlat
pop
mov
inc
mov
cmpb
mov
outsb
fisubs
or
jbe
sub
sbbb
jne
xlat
cld
push
stos
fimull
leave
xchg
ss
jb
mov
pop
loope
adc
popf
adc
nop
pop
imul
mov
xor
cmp
and
hlt
aas
or
popa
adc
xor
addr16
dec
loop
and
mov
adc
xchg
cmp
sbb
ljmp
and
xor
ror
cmc
mov
fbstp
popa
outsb
dec
fiaddl
les
cmp
fwait
inc
adc
push
fwait
and
movsb
pusha
dec
ret
and
sub
push
add
outsb
rol
cmc
inc
aaa
inc
pop
clc
bnd
or
xor
sub
sub
xor
sti
insb
cwtl
rclb
imul
ja
bound
enter
nop
inc
sub
outsb
or
shl
fimuls
xorb
rclb
test
sarl
ljmp
push
outsb
lret
push
mov
in
sub
sbb
add
daa
pop
iret
cltd
data16
in
jnp
hlt
divl
andb
aaa
pusha
cmc
stos
push
pop
outsb
jl
daa
mov
es
inc
call
sbb
push
lret
push
std
xchg
mov
repnz
inc
ficompl
sub
jae
xchg
bound
mov
dec
adc
call
push
shrb
adc
movsl
mov
cmpb
test
shrb
jo
cld
iret
jbe
mov
mov
fsubs
inc
outsl
ret
and
insb
dec
rolb
and
mov
push
push
mov
popf
out
mov
repz
cwtl
nop
dec
sub
das
cmp
mov
stos
popa
sbb
xchg
ss
lods
loopne
or
int
cs
ljmp
imul
int
inc
jno
stos
rcr
prefetch
fcomps
jl
mov
inc
xchg
xchg
stos
enter
push
sub
mov
mov
stc
hlt
sbb
inc
adc
sbb
test
dec
je
sub
mov
pop
mov
and
dec
loope
sub
mov
push
dec
pop
cmp
rcl
addb
ds
push
not
xor
sbbl
iret
inc
stos
stos
adc
jo
cwtl
jge
mov
sub
cmp
punpckhdq
adcb
stos
push
mov
dec
push
je
in
adc
mov
xchg
das
nop
ret
fmuls
sub
mov
and
mov
jnp
lea
jle
and
xchg
pop
ret
dec
inc
shrl
mov
loop
cmp
scas
add
ja
das
std
add
xchg
adc
pushf
rcr
pop
and
xor
jle
xchg
xchg
stos
test
popl
loop
ret
stc
sbb
jae
es
pop
stc
lahf
inc
jbe
ffree
in
inc
push
loop
lods
aaa
mov
dec
aam
adc
pop
mov
push
sub
test
test
test
xchg
imull
insb
mov
xor
dec
inc
sarb
cmp
outsb
or
mov
shll
mov
cmc
push
neg
cmp
jnp
add
into
sub
inc
push
sub
add
rolb
fwait
pop
push
lock
loope
and
inc
xor
sbb
enter
dec
mov
mov
fdivrl
daa
ljmp
jo
xchg
push
and
jbe
mov
pusha
cmp
shll
loope
jne
test
mov
idivl
dec
lds
push
dec
loope
push
movsl
ja
loopne
cmc
mov
jmp
hlt
insl
sub
loope
dec
les
pop
pusha
pusha
mov
pusha
and
push
and
xchg
loope
mov
stos
dec
push
loope
cmp
push
mulb
stos
jns
test
inc
arpl
loop
ja
push
sub
lds
jmp
and
cmpsb
fidivrl
xor
in
ss
imul
loop
sub
mov
mov
aaa
inc
pusha
mov
stos
and
push
xor
adc
and
inc
pusha
movsl
ja
cmpsb
xchg
fiaddl
push
lods
insb
lcall
jecxz
pusha
and
in
addr16
movsl
cmp
sub
dec
cmc
mov
stos
mov
xor
test
pop
dec
jne
sub
lcall
dec
mov
mov
loopne
cmc
sub
xor
test
push
negl
mov
ss
arpl
imul
jb
push
sub
and
shlb
inc
shlb
xchg
outsl
xchg
jmp
leave
out
cmp
fs
and
xchg
jmp
popa
push
mov
and
insl
push
mov
jbe
jb
jmp
mov
loope
arpl
jb
jbe
push
hlt
arpl
jbe
hlt
cltd
and
jne
sub
sub
mov
push
push
hlt
hlt
outsl
cmc
rolb
repnz
add
and
aaa
dec
xchg
sahf
mov
mov
pop
push
and
pushf
idivl
sbb
loopne
cli
jae
inc
push
cmpb
mov
lret
insb
popa
mov
dec
mov
into
outsb
inc
jp,pn
cmp
test
subl
adc
movsb
pop
mov
xor
cmc
jo
lds
pop
lock
loop
jge
xchg
push
adc
mov
fdivr
mov
test
ljmp
add
push
adc
dec
test
out
in
imul
dec
xor
and
stos
jb
add
inc
jmp
sub
xchg
stos
jb
out
sbb
xchg
adc
aaa
in
testb
dec
loopne
aad
popf
arpl
sarb
pop
mov
dec
loope
movsb
fmulp
or
cmc
fadds
or
movsl
loope
pushf
mov
adc
les
cmp
repnz
add
mov
shlb
ret
xchg
loopne
loop
mov
xchg
adc
xor
loopne
dec
xorps
shlb
adc
sbb
mov
ja
dec
inc
in
ficoml
cmp
dec
rcrb
cmp
mov
mov
movsb
into
lret
xor
lret
iret
ret
ds
insb
movsb
imul
por
loopne
mov
mov
in
into
hlt
outsl
cmovl
sbb
insl
or
sbb
sbb
sbb
out
out
push
xchg
sbb
mov
fldenv
add
mov
rorb
push
in
sub
pushf
ljmp
into
jmp
pop
pop
or
xor
ficoml
cwtl
sbbb
outsl
inc
xor
in
in
shl
inc
and
push
pop
mov
jnp
cmc
pop
cli
aam
enter
xor
mov
cmpsb
rcrl
movmskps
out
enter
dec
adc
and
sbb
jbe
push
movsb
idivb
sbb
jbe
lock
pushf
ljmp
repz
in
mov
pcmpgtd
stos
adc
or
pop
decb
iret
gs
jmp
popa
mov
xchg
stos
ljmp
out
repz
jne
call
inc
and
iret
aaa
mov
nop
hlt
scas
or
xchg
push
pop
pop
mov
shrd
inc
ret
in
cmp
mov
hlt
sub
pop
loopne
lods
in
movsl
aad
pushf
pavgw
or
mov
ljmp
loop
ret
xchg
test
mov
dec
cld
notl
cmp
inc
jne
data16
call
popf
out
sub
popa
mov
test
hlt
fdivs
in
dec
jecxz
aas
fildl
sub
pop
iret
aam
mov
xchg
push
loop
movsb
lret
push
jecxz
xchg
add
jns
loopne
lret
loope
mov
dec
and
xlat
jne
psraw
ja
dec
xor
sub
xchg
cmpsb
xchg
int
mov
loope
dec
repnz
cwtl
stos
jb
test
sub
outsb
cmp
inc
testb
pop
je
jmp
add
pop
xor
insb
xchg
inc
in
pusha
xchg
rcll
loopne
jecxz
push
sbbl
iret
inc
test
cmc
les
xor
sbb
xor
xor
sub
push
cmp
outsb
pop
loopne
lds
cld
inc
outsl
mov
dec
je
xchg
divl
shl
in
push
inc
jne
hlt
push
cmpsb
inc
popw
jg
nop
xor
add
and
repnz
jge
push
jo
inc
jno
imul
and
sbb
sbb
loopne
hlt
mov
xor
fadd
repz
push
aaa
in
jnp
fbstp
iret
loope
mov
or
jns
dec
mov
outsl
in
jnp
orb
sub
popa
push
loope
ret
aam
cmp
test
mov
xor
jno
inc
sbbb
add
filds
dec
cmpb
scas
arpl
fistpll
lods
inc
xor
mov
cmp
jg
mov
jmp
cmc
in
fstpl
inc
cmc
xor
popa
lock
push
push
push
mov
shl
add
orb
jmp
add
decl
leave
nop
adc
jno
sbb
test
xor
xchg
hlt
mov
pop
loope
outsb
sub
rorl
imul
add
dec
iret
add
cmpsb
and
movsl
push
mov
aas
or
cmpsb
insl
and
mov
andnps
add
negb
xchg
xlat
jecxz
inc
mov
inc
loopne
mov
push
iret
ss
addl
orl
xor
sub
or
sti
jecxz
xor
mov
pop
enter
loopne
inc
icebp
sbbl
pop
xor
jle
lds
popa
jp
mov
or
in
repnz
fidivs
inc
push
ss
decl
cmp
ja
xor
mov
xor
sub
and
out
filds
loope
sbb
negl
inc
cmc
bound
push
inc
and
scas
dec
pop
fldl
cmp
adc
jno
jmp
mov
and
cmp
inc
pop
jecxz
test
iret
hlt
xor
cli
jecxz
cmc
mov
xor
pop
inc
mov
fisttps
xor
mov
inc
ror
mov
sub
jl
fistps
pop
into
mov
iret
mov
xor
jnp
mov
nop
cmc
xor
cmc
scas
push
aad
xorb
sub
push
jnp
xchg
push
push
add
repnz
mov
xor
int
and
out
inc
inc
dec
jg
test
mov
push
pop
and
ss
cld
inc
mov
dec
inc
sbb
xor
xchg
xchg
cmc
xchg
xor
xorb
outsb
call
cmp
cmc
pop
pop
pusha
dec
loopne
fsubrp
cmpsb
stos
adc
xor
lea
test
loopne
out
push
or
sbb
aas
adcl
int
shlb
mov
mov
jo
in
and
shr
ret
in
pop
cld
pop
out
ret
mov
cmp
outsl
inc
jne
push
jo
lods
out
stc
leave
push
jae
in
or
out
mov
loope
pop
bound
cmp
mov
mov
push
fimuls
dec
jb
leave
int3
in
out
mov
xchg
out
jo
stos
loopne
jg
adc
jl
inc
dec
add
iret
in
pop
out
fisubs
in
out
mov
inc
push
xchg
jbe
mov
loop
lret
sahf
out
dec
sbb
ljmp
mov
ret
jl
push
insb
out
xchg
push
ljmp
mov
pop
addl
clc
test
out
iret
sahf
mov
nop
call
push
dec
es
loop
insl
lock
cwtl
push
bound
inc
out
scas
mov
lret
add
cli
dec
mov
pop
xchg
cmpsl
bound
outsl
mov
movsl
pop
fwait
push
cmpsb
jnp
out
inc
mov
out
out
xor
add
es
loop
addr16
xor
lret
dec
inc
lahf
loope
pop
and
imul
aad
xor
out
adc
popf
in
jl
mov
aas
pop
sahf
pop
jmp
out
rcrl
in
mov
push
cmpsl
js
cmp
jns
in
adc
sub
mull
xchg
lcall
xchg
in
mov
inc
ret
dec
inc
ds
sbb
cs
sbb
arpl
pop
aaa
mov
shll
testl
xor
lods
xchg
sbb
mov
mov
popl
dec
pop
and
fadds
jecxz
stos
and
pop
rcrb
jmp
mov
aad
xor
loope
or
and
fwait
addl
loope
fdivp
repz
mov
iret
push
testl
popf
add
das
jo
sub
aas
cmp
xor
or
repnz
jmp
outsb
sub
mov
jae
sbb
sub
in
inc
movsl
pop
push
xor
loop
sahf
pop
inc
and
dec
mov
mov
dec
push
fdiv
jmp
fisubs
mov
je
ds
jnp
cmp
push
inc
lods
out
cld
dec
adc
jg
sbb
data16
hlt
inc
jbe
mov
scas
jae
fimuls
out
push
xchg
push
add
sub
sub
divb
push
cs
into
jle
int
mov
arpl
adc
lds
xchg
push
and
das
jmp
push
loopne
pop
mov
inc
leave
jnp
mov
or
push
mov
lods
scas
dec
je
xchg
movl
inc
and
out
shll
sti
cmp
jae
arpl
icebp
push
push
inc
andl
sbb
neg
and
mov
lea
call
dec
or
pop
rclb
add
in
gs
insl
jg
push
insb
iret
out
shll
shl
xor
push
lcall
ret
arpl
and
add
loop
sbb
fistl
test
repnz
lods
mov
out
push
pop
add
scas
cld
dec
bound
es
out
mov
repnz
call
sub
das
shrb
shlb
sti
xchg
cmp
adc
out
mov
push
push
sub
ss
aad
mov
and
sub
inc
imul
in
das
ficompl
out
jl
adc
and
scas
jle
pusha
dec
jmp
pop
pusha
ss
shll
shll
dec
int3
out
push
sbb
pop
sysret
xchg
push
fidivrl
nop
lret
shlb
das
insl
cmp
xchg
out
mov
ret
sub
cmc
sahf
inc
insl
rcrl
inc
jb
push
sti
out
daa
dec
mov
pop
mov
ljmp
pop
mov
insl
inc
pop
push
cmc
push
and
addb
sub
jns
sahf
popa
pop
ficoms
or
pop
test
out
sbb
sub
sbb
and
es
cmpsb
js
out
push
mov
pop
mov
xchg
jmp
insl
cltd
adc
xor
jmp
add
test
cmp
inc
and
outsl
incl
lods
mov
jbe
outsb
jae
jecxz
fisttpl
data16
add
fucomip
push
xchg
sbb
push
mov
jmp
out
test
push
push
shrl
repnz
das
lret
sbb
fxam
idivl
jb
cwtl
push
out
pushf
movsb
sub
jg
jbe
out
js
jno
and
cmpsb
fistps
dec
and
scas
jo
leave
add
dec
loope
and
aas
adc
ja
lret
out
xsha256
cmpsb
adc
dec
fmuls
inc
orb
lds
adc
or
xchg
or
stos
dec
or
scas
loopne
pushf
inc
mov
imul
mov
cltd
loop
or
sub
xchg
das
adc
cld
out
fabs
inc
std
pop
push
mov
xchg
push
notb
or
xchg
mov
pop
cmp
out
pop
and
adc
out
rclb
pop
sub
fmul
test
inc
add
sbb
sub
icebp
xchg
add
or
xor
je
rorl
fidivrs
iret
and
orl
adc
adc
sub
out
fwait
cmp
cmpsb
out
scas
lds
pop
mov
sub
out
jb
pop
aas
push
bound
loopne
xchg
mov
adc
shl
rcrl
ret
xor
jno
or
push
subl
not
jl
dec
lret
push
xchg
int
sub
and
popa
jmp
mov
into
repz
nop
aas
push
xchg
data16
jl
sub
mov
cwtl
xchg
test
ljmp
call
std
cld
mov
sub
lods
cmp
out
push
dec
clc
mov
sbb
outsb
pop
loopne
xchg
mov
imull
inc
mov
add
outsb
and
mov
addr16
dec
aas
rolb
sub
movsb
lods
xor
jg
inc
inc
dec
push
arpl
jecxz
mov
cmp
xor
cwtl
into
and
insb
jmp
scas
and
inc
jl
andl
mov
js
out
inc
fildll
mov
sbb
out
dec
cmp
dec
ror
xchg
je
or
cmpsb
add
jecxz
loopne
cmpb
imul
mov
xor
pushf
rclb
std
out
cwtl
pop
and
sbb
repz
cmp
and
pushf
and
mov
out
mov
fcoms
and
in
repz
pop
and
or
testl
push
cwtl
lea
cltd
adc
add
adc
lds
cs
pop
jnp
jge
jmp
xor
xor
mov
mov
xchg
mov
out
and
lea
out
test
shlb
jne
outsl
insb
cmpsl
pop
out
in
or
push
mov
xor
ja
lods
cmpsb
or
push
ljmp
inc
in
lds
daa
lock
test
fs
in
jp
addr16
lods
jno
jmp
movsl
outsb
test
pop
jecxz
sub
pop
ja
mov
xor
adc
inc
mov
les
out
mov
jno
or
pushl
negb
cmp
subb
in
lret
mov
icebp
mov
mov
ljmp
movsb
dec
jno
aas
neg
pop
stc
sti
jmp
lahf
arpl
mov
out
fisubs
test
xchg
adc
xchg
mov
testb
sbb
fucomip
call
repnz
xchg
out
sar
cmp
out
mov
push
rcrl
or
or
dec
sub
arpl
jmp
lds
psrlq
cmp
push
mov
stos
xchg
xor
sub
test
inc
popl
add
out
xchg
shr
xchg
pushl
mov
dec
push
add
mov
in
into
fcom
pop
pushf
in
fimull
out
fisubs
outsb
cmp
or
loop
sbb
lret
mov
out
mov
test
out
int
data16
jge
mov
in
cmc
aam
adc
hlt
jae
rolb
sbb
and
add
cltd
push
cmp
dec
cwtl
addl
dec
mov
mov
xchg
rclb
out
pop
cld
int
inc
jae
xor
push
or
or
add
fdivp
out
xor
sbb
dec
scas
inc
aaa
sti
repnz
out
xchg
arpl
loopne
xor
inc
push
imul
lret
out
sbb
fbld
push
insl
repnz
out
add
and
ret
xchg
and
jg
es
ret
out
jecxz
dec
cmp
xchg
pushl
and
push
pusha
mov
ljmp
in
out
shlb
sbb
push
mov
lret
repz
and
mov
and
in
pop
and
cwtl
jmp
in
out
xchg
in
add
inc
push
out
lods
or
arpl
or
dec
ret
shrb
aam
add
and
or
push
in
xchg
mov
or
vxorps
out
jge
cmp
das
out
in
push
and
out
fdivrs
fisubrs
imulb
jb
push
xchg
lret
xor
fistl
mov
imul
adc
bound
pop
pop
mov
or
pop
mov
out
xchg
scas
jle
ds
add
push
or
sbb
daa
mov
cmp
arpl
data16
shlb
mov
insl
cmp
cmp
xor
pop
cmc
icebp
xor
sub
xchg
and
stc
ds
cli
popa
and
pop
push
daa
mov
pop
cmpsb
or
jecxz
mov
out
dec
xor
lds
ss
out
jb
inc
xor
sbb
push
out
je
rolb
scas
lcall
push
loope
cli
and
adc
bound
sub
nop
out
or
sbb
cmpsl
out
push
test
xor
push
inc
or
test
and
cmpsl
jb
lods
mov
leave
pop
push
es
jbe
mov
push
nop
mov
sub
out
push
cmpsb
out
sbb
and
xor
fnstenv
loope
mov
push
cmp
jmp
adc
aam
sub
mov
adc
dec
in
mov
test
out
xlat
fildl
jns
fisubl
adc
ja
aad
inc
call
imul
inc
jp
pop
mov
mov
cmp
shrb
jecxz
loope
lds
cmp
add
out
xor
loope
cli
repnz
data16
insl
adc
cmp
push
pop
out
call
enter
es
add
out
pop
flds
jmp
xchg
icebp
mov
add
sub
dec
popf
xor
xorb
mov
jnp
adc
sahf
dec
ljmp
jne
aad
sti
mov
or
nop
loopne
sbb
js
push
cwtl
push
add
dec
testl
ljmp
test
mov
call
in
mov
adc
shlb
iret
mov
sub
push
push
ja
inc
divb
rclb
ror
js
imul
sbb
mov
push
cmpsl
data16
std
repnz
mov
stos
jmp
push
ret
cltd
out
cmc
movsl
adc
test
jnp
cmp
aam
ss
out
loopne
sbb
enter
mov
cld
dec
das
out
push
inc
mov
ss
dec
movsb
add
and
or
sub
lods
insl
dec
jb
icebp
sti
inc
popa
rorl
into
in
inc
mov
mov
lahf
cli
sahf
outsl
mov
fs
scas
sbb
jbe
aad
and
mov
les
out
pusha
cwtl
inc
mov
shlb
clc
mov
negl
sub
dec
test
mov
sahf
mov
push
sbb
out
shl
lea
mov
popa
out
mov
mov
adc
xchg
mov
mov
leave
or
out
mov
ss
iret
pop
cmp
dec
rolb
jmp
idivl
mov
push
leave
push
cli
jle
adc
push
and
pop
out
jb
dec
pop
shlb
leave
inc
testl
arpl
idiv
jecxz
popl
add
xchg
stos
pop
sarl
mov
je
jb
test
mov
add
mov
cli
sub
in
or
mov
cmc
sub
pop
push
aad
mov
cmp
rorb
out
push
fdiv
xchg
fcomi
repnz
out
sub
lret
push
icebp
jmp
xchg
inc
push
lret
mov
das
movsb
adc
sub
sub
jmp
push
sub
mov
out
test
jp
mov
into
jg
adc
push
punpckldq
daa
js
fmul
jo
fcmovbe
dec
scas
out
mov
jp
jmp
adc
pop
fwait
push
scas
and
mov
out
lcall
sbb
popa
ret
cld
adc
pop
outsl
shr
sub
pusha
jecxz
sbb
out
lret
xchg
mov
test
push
clc
add
jbe
jmp
imul
ret
pop
dec
insb
jge
out
push
cmpsl
or
fsts
inc
orl
add
adc
divb
outsb
iret
push
out
adcb
test
mov
ss
out
and
xor
sbb
add
stos
leave
test
mov
ds
sbbb
shrl
pop
repnz
or
jno
out
je
std
les
and
out
into
lods
test
push
dec
push
scas
out
inc
mov
loopne
adc
adc
fsubr
pop
inc
je
xor
stos
out
fsubs
sub
imul
std
cmp
mov
adc
mov
add
sbb
inc
out
in
scas
gs
jbe
sub
sub
fsubrp
test
pop
cwtl
cli
sbb
add
mov
les
stos
insl
sub
out
pop
cmpl
out
stc
mov
ja
int3
out
sub
mov
mov
sub
idivb
dec
mov
out
dec
push
and
addr16
lock
adc
test
invd
add
stos
dec
mov
scas
push
jns
xchg
fsubrp
xor
ds
mov
mov
cltd
fbstp
out
or
insb
inc
popa
and
rclb
push
in
imull
std
imul
xchg
je
mov
shl
int3
in
fiaddl
loope
xor
jecxz
loopne
outsl
jle
sti
mov
adcb
mov
jne
loope
add
mov
jno
xchg
lea
dec
or
jae
sub
sbb
out
sbb
push
frstor
xchg
movsb
fsubrl
js
or
lods
xor
pop
mov
ss
adc
jo
imul
dec
js
mov
mov
aas
movsb
outsl
or
sbb
imul
dec
or
stos
dec
mov
movsb
out
lret
inc
enter
jo
pop
xor
dec
add
inc
cli
sbb
push
out
ljmp
out
in
inc
xchg
sahf
sub
imul
out
jge
clc
push
sub
mov
out
fwait
xor
push
cmp
inc
aad
xor
out
cmc
sub
idivl
arpl
jecxz
and
out
mov
jmp
nop
sti
xchg
cwtl
add
xchg
data16
lcall
test
out
repz
mov
sbb
loop
shll
xchg
add
gs
cmp
jmp
cld
lcall
mov
lods
jecxz
pop
imul
cmp
cmp
xlat
ljmp
pop
sarl
mov
jmp
ja
push
out
inc
lods
push
dec
jbe
cmpsl
dec
or
add
aas
pop
rorl
out
test
xor
xchg
adc
push
mov
sub
xlat
sub
outsb
sbb
popa
xor
inc
test
add
mov
mov
bound
jmp
insl
in
mov
xchg
int
jmp
cmove
imul
popl
push
sbb
aad
sub
mov
fcmovne
add
xchg
push
js
nop
sub
or
in
xchg
adc
fcomi
mov
add
gs
pushf
sbb
xor
je
adc
hlt
aas
sub
or
jbe
das
jg
lcall
pop
adc
dec
jo
fisttps
sub
movsb
cmc
dec
jo
loopne
call
data16
and
add
insb
push
lods
adc
rolb
mov
mov
fwait
and
jo
hlt
xchg
enter
add
mov
pusha
insb
and
jb
fucomp
aam
out
dec
insl
in
push
addb
testl
mov
imul
fwait
dec
mov
icebp
inc
aaa
pop
push
cld
out
aaa
xchg
clc
lods
sahf
ret
out
sbb
and
js
jae
out
jnp
mov
pop
out
test
fwait
shrb
loop
and
jmp
pop
adc
test
pushf
push
es
cli
xchg
rcl
cld
sti
arpl
sti
pop
dec
in
popa
xor
pop
mov
cmc
adc
or
push
inc
clc
std
cmp
cwtl
rolb
xor
push
popa
xchg
addr16
test
outsl
pushf
xchg
fdivrl
out
mov
dec
lret
ret
in
mov
in
aas
repnz
cmp
inc
cmp
xor
sub
fstpt
insl
sbb
sbb
cmp
out
push
pop
xchg
loop
push
add
pop
aaa
iret
outsb
les
divl
xor
adc
sahf
mov
push
ss
xchg
in
lret
fcomi
mov
test
fdiv
cmp
repz
and
out
or
notb
and
mov
pop
hlt
bound
incl
cmp
out
dec
push
sub
add
jbe
call
out
mov
das
xchg
ret
data16
insb
addb
and
jb
push
cs
fidivrl
imul
mov
jl
insl
aaa
int
adc
pop
out
xorb
push
test
aam
out
dec
cld
or
push
xor
and
mov
hlt
pop
fsubr
cwtl
fimull
nop
adc
les
adc
iret
out
lds
test
out
xor
push
imul
inc
icebp
popa
pop
sbb
pop
ret
out
iret
sub
jnp
in
out
out
jle
push
pop
les
add
loope
or
jge
outsl
test
xchg
adc
sub
xor
jb
inc
push
push
lods
cwtl
add
clc
fwait
or
xor
pop
push
inc
xor
lret
inc
lock
cmp
mov
xor
jne
in
mov
test
cmp
out
pop
lcall
repz
repz
pop
out
std
bound
xor
dec
nop
test
sti
loope
enter
inc
xor
test
jmp
out
aas
jb
out
and
sbb
shlb
lcall
cwtl
out
xchg
iret
add
pop
mov
xor
scas
rorl
in
jp
fdivl
rcrl
movsl
ja
stos
lock
xchg
repz
les
mov
leave
subl
int
inc
pop
out
jo
jmp
out
lock
cli
stc
scas
in
push
lds
test
in
mov
and
nop
dec
shr
stc
mov
pop
loop
adc
xchg
mov
lods
fdivl
or
mov
add
mov
cmpl
dec
jle
js
jo
mov
push
hlt
stc
pusha
sbb
jns
adc
js
daa
sbb
call
out
lea
pusha
hlt
jmp
je
xchg
dec
inc
insl
fs
loope
or
out
jns
lock
cmpsl
lods
out
mov
mov
sub
out
leave
lds
jno
mov
arpl
sbb
dec
lea
out
cmpsl
in
or
xor
lahf
icebp
mov
and
jne
and
out
jmp
repnz
dec
mov
out
mov
mov
jl
out
jle
inc
scas
fistpll
push
mov
sbb
cmc
jo
mov
pop
bnd
xor
scas
scas
mulb
out
jp,pn
out
inc
nop
cmp
out
shrl
imul
sahf
out
in
adc
mov
cmp
test
lods
insb
mov
sub
jae
aam
adc
out
fsubl
jmp
jg
ds
imul
into
sub
push
fcomps
pop
ds
mov
loope
mov
inc
in
das
leave
jmp
in
lret
into
or
popf
jnp
lahf
repz
mov
push
or
add
mov
pushf
xor
cmpsb
mov
sbb
sub
mov
xor
mov
out
cmpsl
ja
orl
sub
lret
icebp
fs
mov
clc
mov
sbb
cmpsb
jo
leave
jne
out
hlt
fstp
adc
inc
inc
xchg
ljmp
subb
hlt
pop
std
div
sub
mov
out
pop
cmp
jge
out
int3
popa
push
loopne
ljmp
ja
testl
jmp
lret
jecxz
out
out
dec
push
push
std
ljmp
out
sti
lock
adc
lods
mov
push
xor
inc
out
xchg
pop
in
cmc
pop
out
orl
inc
out
nop
lret
and
aad
lahf
out
fdivl
cmpsb
jle
dec
mov
push
loope
jo
inc
jecxz
adc
out
and
lds
outsl
subb
jmp
jne
inc
lea
mov
sub
lret
mov
and
fidivs
pop
jecxz
aad
movsb
push
out
dec
and
gs
lds
out
jp
mov
aad
idiv
testl
jnp
mov
and
cmp
inc
test
nop
and
mov
mov
out
cmp
or
mov
cmc
fcmovnb
jae
mov
lea
push
push
out
cmp
xor
inc
leave
pop
scas
in
push
push
stc
mov
or
sub
inc
pop
xor
inc
jecxz
push
aas
pop
inc
hlt
mov
cld
xor
test
loopne
xor
scas
insl
cmp
ss
out
mov
sahf
das
shrl
mov
inc
inc
popf
icebp
and
loope
aas
and
fwait
movsl
cltd
div
test
popa
cmpsb
out
sbb
mov
cmpsb
out
cmc
or
mov
xor
xlat
and
sub
rcll
out
lret
scas
shll
out
and
xchg
call
iret
and
xchg
push
test
out
mov
scas
fcoms
out
mov
mov
movsb
dec
das
inc
fisttps
jmp
adc
sbb
mulb
cmp
jge
lock
pop
test
xor
out
sti
notb
mov
int3
xchg
repnz
popf
mov
dec
jo
add
jns
push
popa
bound
clc
and
jmp
imul
stc
push
pop
imul
fnsave
out
in
xor
stos
pop
in
cmp
dec
out
push
pusha
sbb
xor
pop
out
data16
aas
mov
jbe
add
shr
mov
xor
aaa
sbb
fidivrl
mov
rolb
imul
jbe
cwtl
adc
outsl
inc
out
sahf
mov
cmp
xchg
sub
loop
xor
jne
sbb
jns
push
movsl
jg
mov
mov
jo
aas
mov
cmp
das
aam
lea
out
clc
lret
adc
in
out
stc
loop
mov
or
fnsave
out
add
out
pop
xchg
in
out
lcall
cltd
out
fisubrl
push
push
push
test
aas
pop
xchg
in
hlt
test
adc
movsl
mov
ret
jbe
pushl
mov
pop
insb
fldenv
int3
fadds
dec
dec
jmp
push
stc
fcoml
jecxz
jae
xor
loop
into
scas
out
bound
sbb
lcall
jno
mov
xchg
popa
jb
insl
out
sbb
dec
insb
out
mov
jle
imul
iret
jmp
loope
in
stos
notb
inc
xor
aad
je
addl
and
lock
xchg
addr16
out
xor
jmp
inc
out
or
pop
movsl
out
ja
jp
push
or
pop
sbb
popl
test
out
sbb
inc
sbb
dec
out
add
dec
sar
cmp
aam
insl
out
ret
outsb
push
ja
test
mov
cmp
mov
out
ret
mov
out
mov
sub
lcall
sbb
in
jl
jecxz
and
lret
mov
popf
mov
je
mov
stos
push
inc
insb
daa
pop
andl
add
out
inc
add
mov
xchg
out
mov
dec
aas
add
sub
ljmp
jbe
or
fdivl
rol
cmc
push
jmp
out
mov
ss
lods
addr16
idiv
and
inc
push
ret
inc
sub
dec
in
sbb
dec
mov
jl
jle
divl
shr
jmp
pop
inc
shll
mov
sub
xor
in
shlb
sub
push
ret
loop
jl
je
fwait
push
inc
loope
in
push
in
adc
out
out
negb
xchg
ds
push
test
mov
clc
lock
jae
mov
adc
pop
rcll
jo
xor
dec
mov
mov
jmp
xchg
stc
das
xchg
daa
jae
and
das
push
testl
xor
int
mov
testl
xor
lds
loop
xor
jo
jae
mov
adc
arpl
inc
lock
xchg
pop
add
pop
std
rclb
inc
sub
mov
xlat
mov
repnz
sbb
add
xchg
repz
bound
lds
js
jp
jl
jle
rorb
repz
repz
mov
nop
adc
pop
xchg
aas
and
cmpsl
adc
add
inc
dec
push
outsb
cmp
cmp
fs
xor
jle
popa
loopne
and
and
outsb
aaa
mov
dec
popa
leave
mov
xchg
mov
xor
out
ret
mov
jmp
roll
mov
adc
add
rep
repz
mov
xor
lar
xor
decb
cli
fsin
fdivr
ds
and
and
xor
cmp
inc
imul
pop
out
pop
jge
jl
cs
pop
pop
inc
mov
mov
xchg
or
add
stc
stc
cld
stc
pushf
stc
fdivrp
int
subl
test
mov
xchg
jb
sbb
push
out
hlt
mov
push
out
and
xchg
mov
and
outsb
stos
mov
pop
popa
dec
mov
test
ret
or
das
jmp
pop
stos
aam
hlt
inc
cmp
push
pop
ja
add
fildll
out
dec
es
cld
xor
mov
shlb
fs
jo
jmp
jle
jge
jg
jno
data16
jp
jl
jle
pop
movsl
rcr
fimuls
pop
sub
fstps
shr
push
nop
fbstp
bound
les
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
pop
and
fisttpll
push
add
adc
sub
mov
imul
xor
and
dec
inc
sub
xlat
scas
test
pop
pop
pop
ffreep
jmp
mov
shll
add
addr16
repz
repz
and
cmp
pop
xor
loopne
inc
push
and
loopne
and
popa
mov
test
push
in
cmc
movsb
dec
mov
adc
and
bound
test
mov
loopne
xor
and
loopne
and
or
pop
jmp
adc
outsb
lds
xlat
dec
test
pop
push
mov
andl
mov
ret
fisubs
pusha
rcl
xchg
je
movsb
cmpsb
mov
adc
rcll
ret
sub
pop
mov
movsb
insb
sbb
adc
mov
bound
js
jp
jl
jle
jle
jle
jle
jle
shlb
and
popw
js
jp
pop
cmp
ljmp
xor
dec
inc
pop
mov
repz
sub
js
or
stc
por
cmc
fwait
mov
and
dec
add
xor
fistps
sar
push
stos
fistps
fbstp
push
sub
jg
mov
inc
sub
mov
ss
popa
ret
push
ret
xchg
movsb
add
push
lock
or
add
test
int3
and
loop
and
outsb
ljmp
cmp
hlt
dec
adc
dec
mov
lret
mov
clc
adc
imul
aam
inc
inc
cmp
popf
cli
lahf
outsb
incb
aas
push
and
dec
ficoms
pop
shlb
mov
cmc
fildll
fbstp
jbe
mov
test
mov
out
lcall
push
pop
or
insl
repnz
out
cmp
cmp
and
ret
outsb
mulb
mov
cmc
mov
and
loopne
mov
jne
mov
inc
add
in
push
rcr
jp
push
bound
fidivrs
jl
mov
mov
or
mov
inc
adc
fisubrs
fldl
sub
push
cld
ds
push
ds
repz
jns
add
jge
add
rep
repz
adc
add
test
sbb
or
cmp
push
sbb
adc
js
inc
cmpsl
lds
lahf
js
pop
mov
pop
dec
shlb
mov
dec
cmpsl
lds
mov
adc
add
stos
loope
xlat
jo
test
bound
fs
clc
xchg
cmp
gs
lods
cltd
mov
jne
ret
in
test
jno
vmread
shl
xchg
test
inc
mov
movsb
dec
inc
sub
mov
or
xor
pop
sub
adc
or
adc
xor
dec
xchg
cmc
xchg
add
outsb
cmp
adc
test
mov
mov
stos
jnp
mov
inc
ljmp
xchg
inc
mov
sti
fisubrs
lods
repz
repz
insl
rep
repz
das
loop
rorb
mov
push
dec
sub
lret
mov
push
adc
enter
leave
aas
sub
cmc
xchg
and
and
pop
mov
xor
and
pop
or
push
test
fs
pop
pop
push
xchg
inc
fiadds
pop
fstpl
outsb
inc
gs
push
sub
mov
imul
pop
mov
call
scas
repz
cmp
sbb
dec
rep
repz
repz
stc
fisttpll
out
adc
jno
mov
movb
fnsave
xor
inc
stc
xchg
stc
cmc
stc
cltd
stc
pop
std
mov
ljmp
stc
or
cmp
sbb
dec
stc
scas
stc
pop
stc
mov
stc
lock
fbld
jne
enter
or
test
push
aaa
xor
xor
xor
push
xor
pop
xor
inc
cli
rorb
xor
dec
xor
xor
push
nop
aas
sub
cmp
pop
in
and
stc
jo
mov
fimuls
adc
sub
mov
lret
sbb
push
ja
and
hlt
jge
or
scas
inc
scas
and
push
arpl
pop
movsb
push
inc
push
mov
pmuludq
dec
clc
sub
and
test
dec
lahf
cmpsl
xchg
test
js
pop
js
jp
das
fsubrp
aad
mov
cmc
inc
xor
testl
ret
jb
sbb
jne
fidivrs
and
mov
repnz
xchg
int
out
lret
mov
fdivrp
cmpb
ret
adc
and
shrb
push
imul
mov
into
dec
sahf
cmp
jl
repz
dec
insb
and
in
sti
inc
imul
shlb
test
rcr
ret
jnp
jmp
je,pt
shll
ret
cmc
movsb
data16
adc
int3
add
jg
push
repz
jae
xchg
stos
pop
jns
mov
test
inc
mov
mov
xlat
divl
adc
inc
bound
push
test
popf
mov
int3
mov
xor
sub
jne
mov
fisubs
adc
mov
xchg
stos
mov
add
js,pt
push
daa
in
push
cld
in
sub
mov
dec
jo
movsl
mov
imul
pop
insb
pop
int
xchg
jnp
out
xor
xchg
shlb
js
sub
adc
aaa
lds
cld
adc
and
xor
out
pop
out
cli
push
jle
add
je
mov
jo
add
aam
push
pop
movsb
lahf
aaa
push
je
mov
notb
mov
loopne
shll
ret
in
push
add
or
add
out
aaa
clc
in
aam
hlt
jbe
lea
inc
mov
push
adc
mov
push
lods
ret
popl
jns
ja
cli
jg
adc
mov
xor
mov
adc
shlb
jo
dec
data16
js
cmp
adcb
in
fstpt
and
sarl
cmp
jmp
xchg
push
and
dec
call
jmp
dec
idivb
ss
ja
push
sar
and
rol
mov
mov
adc
mov
jo
jne
fs
js
jp
jl
jle
and
pop
movlps
mov
fnstsw
jp
jbe
arpl
sub
in
loopne
in
inc
and
fisubrs
pop
sbb
adc
add
or
cld
rcr
jmp
repnz
dec
mov
sti
dec
sub
inc
scas
and
xor
ret
pop
bound
or
push
bound
jnp
out
add
stc
shlb
xchg
adc
fsubs
js
pop
andb
test
fnsave
in
mov
dec
cmpsl
lds
mov
je
shll
ret
push
movsb
cmc
mov
jmp
ret
bound
fsubs
js
pop
push
movsb
xchg
fidivs
pop
pushf
shrb
rol
cmp
in
mov
jmp
xlat
and
aam
or
das
in
jno
hlt
call
mov
ja
mov
aad
outsl
daa
push
es
dec
ds
xor
push
pop
inc
push
push
or
into
sub
mov
xchg
and
js
mov
jp
lahf
int3
ljmp
shr
or
fimull
add
jne
push
aaa
or
out
cli
sbb
dec
sarb
js
shlb
push
out
add
mov
mov
cmp
cmp
push
addl
imulb
add
cs
or
cmp
cmp
sbb
aas
xor
jno
loop
mov
arpl
xchg
cmp
xchg
cmp
dec
cs
inc
ljmp
icebp
mov
ds
pop
sub
lret
pop
in
pop
fbld
lds
cltd
or
jo
xor
inc
and
pop
dec
test
sub
push
lods
jle
jle
pop
pop
xchg
mov
sub
push
nop
mov
adc
imulb
sub
cmp
enter
xor
inc
jnp
or
xchg
repnz
js
push
bound
pop
leavew
js
popf
lret
pop
adc
arpl
loope
xor
out
mov
lods
push
adc
pop
aas
lods
cmpb
sub
std
jmp
jnp
lock
lret
mov
mov
loope
push
jmp
out
push
in
aas
dec
ds
in
push
inc
cmp
mov
in
push
nop
cmp
and
cmp
aas
adc
inc
lret
outsl
out
add
fmulp
push
inc
xchg
mov
jmp
mov
js
xorb
pop
mov
imul
and
mov
cmp
pop
stc
pop
jae
or
jp
push
xchg
xchg
jmp
aas
mov
rclb
repz
mov
out
outsl
int3
psubsw
hlt
pusha
scas
or
js,pt
inc
bound
loope
imul
imul
or
inc
mov
xchg
push
xchg
repnz
jle
add
pop
loope
je
mov
cmc
sub
jbe
test
bound
mov
jne
ret
xchg
jns
rcl
cltd
inc
sub
fisttpll
in
mov
xor
adc
loopne
movsb
ror
xlat
mov
int3
xlat
dec
test
pop
pop
jae
ret
xchg
aam
mov
or
pushf
xor
cmp
aas
insl
lods
xor
xor
inc
insb
loopne
subb
imul
pop
scas
jecxz
sub
dec
mov
movsb
sahf
je
add
jo
aas
cltd
dec
out
mov
jg
push
xchg
xchg
pop
pop
sub
stos
insb
xor
aas
lea
dec
inc
push
dec
lret
xor
mov
imul
cmpsl
bound
xor
ret
mov
mov
adc
dec
mov
sub
add
adc
cmpb
ljmp
inc
push
loop
push
call
aas
stos
pushf
dec
and
bound
inc
sub
mov
cs
mov
cmp
loopne
ret
insb
or
xchg
je
enter
rcll
xor
jg
add
mov
pop
outsb
xchg
mov
fwait
ret
out
add
aam
mov
rcll
insl
ret
lods
movsb
jmp
das
inc
xor
xor
loope
fdiv
cmp
and
inc
mov
in
rep
push
mov
std
and
sub
adc
xlat
jp
pop
js
sub
dec
add
dec
push
dec
cmp
jp
pop
mov
rol
push
sbb
pop
and
jecxz
push
and
jae
les
lds
xlat
add
into
repz
test
jne
jb
and
jp
aad
push
jbe
cwtl
out
fcmove
sub
xor
ret
addb
fcomps
xor
xor
jo
dec
xchg
sub
mov
xor
xchg
addr16
or
sub
mov
xor
movsb
loopne
lret
not
cmp
mov
xchg
aam
cmpsb
cmp
pop
dec
pop
out
rcl
dec
lret
outsl
cs
loope
inc
rcll
ja
push
ja
add
mov
cmpb
dec
loopne
ss
icebp
pop
sub
ret
loop
mov
mov
mov
movsb
or
inc
xor
fldl
into
mov
inc
loop
push
and
mov
loopne
jno
pusha
push
cmp
cli
leave
ret
popa
test
sub
frstor
add
mov
cmp
shl
push
cs
dec
rcrl
js
cli
fs
shll
loopne
and
popa
popa
mov
pusha
mov
xor
jne
mov
jecxz
aaa
je
mov
push
mov
cmc
aam
xorb
bound
jle
jle
and
cmp
pavgb
add
aaa
stos
sub
stc
dec
icebp
dec
stc
fdivrp
in
jnp
dec
in
jae
mov
fldl
add
cmp
loopne
inc
mov
ljmp
adc
xchg
xchg
shrb
lret
mov
loopne
jmp
jae
hlt
int3
add
cwtl
popa
stos
or
cmp
add
inc
imul
jp
pop
andl
out
stc
enter
push
or
sti
loopne
xor
and
popa
add
xor
repnz
xor
sbb
pop
adc
push
sbb
cld
dec
roll
xor
lret
add
mov
xchg
inc
inc
punpckhwd
pop
in
call
xor
xchg
push
rclb
shlb
push
enter
sbb
sub
sub
into
dec
inc
mov
sub
test
dec
mov
repz
stc
adc
call
movsb
aam
add
fsubp
clc
ror
adc
xlat
and
imul
outsl
adc
repnz
xchg
dec
add
add
les
rorl
jecxz
inc
stc
xchg
inc
stos
out
nop
fiadds
cmpsl
mov
xlat
fwait
dec
dec
xchg
dec
icebp
pop
stc
jg
adc
daa
addr16
push
cmp
dec
sbb
sbb
cmp
fnsave
in
push
and
lret
push
test
add
repz
sbb
pop
or
xor
lds
lea
xchg
aas
ljmp
xchg
add
mov
gs
xor
pop
push
daa
loope
cmp
aas
das
dec
std
sub
jae
dec
adc
ja
sub
adc
mov
mov
or
mov
and
mov
adc
cmp
dec
sub
and
cmpsl
inc
add
and
add
pop
sub
pushf
out
fcmove
imul
int
dec
in
push
lods
loope
jb
out
dec
insl
cmc
je
add
pop
sub
push
ror
cwtl
pop
leave
cmp
rcr
push
out
shrb
pop
test
test
pop
bound
fs
dec
js
fdivrl
cmp
fs
pushw
adc
into
or
lods
shrb
jae
jo
ret
cmp
popf
push
pop
mov
push
dec
pop
shrb
insl
fucomip
xor
loope
cli
insb
pop
popa
shll
test
mov
dec
dec
int
ja
psraw
sub
mov
fbld
xchg
adc
out
push
sub
repz
fisubrl
mov
mov
pop
jle
push
shll
xchg
lcall
and
leave
das
adc
xor
test
sub
adc
or
icebp
std
cmp
lods
jecxz
js
je
mov
insb
loopne
out
sbb
lret
xchg
jne
loopne
xchg
rcl
rcll
imul
add
bound
cmp
mov
jo
pop
fs
sub
inc
ret
fiaddl
adc
test
add
fisubl
cmpsl
mov
push
stos
test
or
push
dec
pop
push
daa
dec
out
xlat
mov
jae
dec
inc
mov
xchg
call
imul
mov
adc
gs
test
dec
xor
out
or
aad
repnz
mov
rcll
and
aas
push
or
or
sahf
dec
int
popa
mov
and
mov
pop
icebp
in
stc
loopne
mov
icebp
iret
dec
sub
push
sub
adc
adc
or
add
stos
jmp
test
sub
dec
shlb
push
mov
mov
in
and
mov
fs
data16
pop
cmp
mov
mov
out
and
pop
mov
mov
and
cmp
dec
dec
loopne
xlat
std
cmpsl
rorb
pop
inc
jecxz
aam
or
scas
jae
mulb
bound
lods
and
add
dec
icebp
inc
hlt
jae
dec
mov
push
dec
xor
pop
loopne
lods
cmp
movsb
out
pop
xchg
aas
insl
cmp
cmpsl
lret
les
lds
pop
dec
mov
imul
jmp
add
stc
out
data16
out
jnp
cld
mov
jno
xor
stos
xchg
ficoml
loopne
pop
dec
int3
or
push
or
loopne
pop
xchg
fisttpll
pop
mov
or
movsl
mov
add
fiadds
adc
rcrb
lret
repz
ret
shlb
jp
repnz
loopne
sub
cmp
pop
mov
and
in
adc
sbb
pushf
cltd
mov
jno
adcb
pop
loopne
shll
test
js
popa
sub
test
inc
dec
fwait
jp
add
bound
pop
insl
rcr
push
subb
inc
loopne
lods
mov
mov
sub
jbe
test
div
sub
in
loope
test
fs
lret
sub
jmp
jno
and
add
inc
dec
cmp
int
lods
enter
or
in
lods
fsubrl
lret
ret
sbb
jo
jns
mov
push
mov
in
and
sub
jmp
lret
notl
das
dec
push
scas
insb
or
and
hlt
push
sbb
lods
lret
outsl
sub
adc
popa
pop
dec
pop
test
xor
xchg
decl
rclb
adc
andl
dec
inc
jne
fiadds
push
push
or
ja
in
imul
ror
and
enter
add
adc
dec
inc
in
xor
and
ljmp
dec
push
jmp
or
bnd
mov
loop
lods
lods
xchg
call
add
mov
inc
shll
sbb
movsl
repnz
mov
test
or
dec
popa
lds
mov
cltd
outsb
pop
mov
adc
mov
pop
fnstsw
pop
jbe
jecxz
inc
test
testb
fimull
push
jne
jmp
pop
or
mov
sarb
sub
outsb
cmp
outsb
and
lods
in
push
mov
and
shll
jmp
repnz
dec
in
add
je
repz
jbe
loope
insl
push
gs
xor
jns
mov
lods
rolb
pop
pop
add
push
dec
shrb
rol
mov
test
mov
mov
push
jmp
sbb
xor
sub
adc
jbe
cmpsb
cmp
push
orb
addb
dec
loopne
rclb
pop
ljmp
dec
add
ss
inc
mov
and
movsl
ret
inc
test
movsb
dec
ret
adc
mov
inc
push
out
push
jp
mov
jle
imul
jl
popa
pop
insl
imul
sub
mov
int
jns
pop
sbb
mov
imul
aam
jne
jo
mov
add
pop
mov
jmp
lret
adc
fldl
pop
or
mov
mov
bound
pop
insl
imul
xlat
repz
rclb
push
pop
cmc
sub
cmp
sarb
clc
mov
popa
testb
andb
adc
jnp
jne
popf
repz
in
xchg
xchg
loopne,pt
sbb
push
iret
jb
imul
and
and
in
push
icebp
outsl
stc
or
lret
dec
inc
push
fwait
outsl
pop
mov
loopne
dec
xchg
ljmp
mov
adc
leave
mov
push
scas
pop
fimuls
and
shl
inc
pop
and
pop
inc
aaa
leave
aas
ret
fidivrs
faddp
pop
sub
shl
lahf
jmp
and
shr
in
fwait
jb
dec
loop
cs
mov
push
ds
dec
frstor
push
mov
lods
imul
add
cmpsb
in
and
je
test
imul
jnp
notl
shll
cmc
das
outsb
ja
mov
call
je
mov
punpckhdq
mov
icebp
push
sub
imul
jmp
lods
in
sub
insl
fisubrs
jnp
cmp
cs
outsl
mov
mov
jmp
popa
leave
insl
mov
adc
cmp
mov
out
mov
jb
cmc
hlt
fldl
fbstp
imul
cmc
out
jbe
test
imul
lret
inc
push
enter
scas
xorb
lea
add
test
scas
xlat
mov
cmc
dec
xchg
jbe
push
call
xor
xor
jae
in
sub
or
in
mov
mov
scas
push
cs
cs
push
and
cmpsl
and
pop
mov
xor
push
out
mov
divb
pop
out
test
rorb
stos
fwait
push
cmp
sub
lods
inc
das
call
sub
mov
and
js
and
mov
mov
and
mov
subb
stos
leave
imul
and
out
and
bound
and
outsb
add
xchg
add
lods
mov
movb
test
xchg
sub
sub
lods
out
das
fisubrs
pop
and
ror
mov
xor
mov
xor
mov
aaa
lcall
sub
test
js
stos
jle
jle
and
in
sub
scas
jmp
sbb
and
mov
and
dec
xor
int3
xor
in
call
sub
ljmp
stos
mov
dec
imul
das
in
sub
and
mov
or
push
inc
aaa
and
xor
xor
xor
out
scas
pop
lods
cmpsl
sub
jne
inc
scas
sub
jae
dec
mov
mov
mov
mov
mov
push
jno
adc
mov
xchg
test
repnz
stos
sub
lods
aas
push
scas
xor
xor
xor
xor
xchg
call
loopne
and
mov
dec
jae
dec
sub
in
iret
test
ret
xor
sub
in
stos
scas
sbb
scas
and
insl
mov
out
stos
mov
dec
lret
bound
iret
aaa
or
in
ss
movhps
pop
test
sub
sub
stos
fildll
dec
lods
imul
scas
inc
and
scas
and
mov
movsb
pop
arpl
jb
in
inc
outsb
mov
aaa
sub
ss
jae
dec
jmp
popa
dec
aad
dec
jbe
ja
cmpsb
sub
aaa
pop
das
push
scas
dec
scas
call
test
loopne
inc
mov
pop
xor
repz
aaa
js
ss
jle
xchg
test
inc
icebp
stos
jnp
aas
mov
sub
scas
pop
das
pop
scas
out
dec
mov
ja
cmpsl
and
push
and
mov
cmpsl
xor
ret
aaa
jle
xchg
ss
sub
test
shrl
sub
lods
pop
cmc
scas
fildll
fildll
fbld
fbld
outsl
and
mov
xor
mov
push
mov
add
subb
add
cmpl
inc
scas
test
scas
dec
iret
mov
and
loopne
dec
mov
inc
mov
dec
mov
or
dec
mov
test
mov
push
mov
lods
cmp
xor
out
xor
and
ja
xlat
mov
mov
in
ss
scas
sub
outsl
sub
sub
lds
scas
mov
insb
ljmp
testb
pop
mov
out
aas
xchg
and
xchg
mov
xor
bnd
mov
outsl
inc
push
sub
sub
xor
sub
stos
mov
sub
lods
dec
testb
gs
and
cltd
push
dec
outsl
cmp
hlt
push
out
cmc
fmulp
push
or
dec
dec
ja
lods
mov
dec
jmp
mov
or
dec
push
cmp
outsb
push
call
je
mov
adc
insb
ficoms
mov
xchg
jecxz
jecxz
pop
lds
mov
adc
outsb
push
jb
ficoms
data16
in
dec
loop
mov
fisubrs
emms
lods
out
xor
and
sub
dec
mov
jecxz
outsb
jbe
dec
cmp
scas
out
popf
mov
push
xchg
loope
cmp
cmpsb
jmp
pusha
cmpsl
loope
xchg
adc
loope
and
lahf
leave
lods
dec
rcr
xor
mov
add
mov
dec
or
lret
jg
jb
jne
sbb
xor
addr16
jmp
mov
or
movsb
add
mov
hlt
mov
inc
mov
push
in
mov
xor
stos
sar
cmc
es
arpl
jecxz
xchg
hlt
arpl
add
lret
jle
sub
icebp
push
inc
insl
ja
ret
xor
cmp
sti
pop
outsb
inc
sbb
pop
or
fists
mov
cwtl
jg
fadds
negl
clc
sub
es
inc
rcrb
repnz
lods
lret
stc
int3
loop
lods
push
addr16
jae
mov
loope
adc
pusha
cmc
popa
sub
and
add
hlt
add
loope
aam
mov
cmc
push
fdivrs
jbe
call
xchg
mov
out
rcrl
or
lods
and
in
adc
mov
xor
add
jne
jo
insb
shl
jmp
mov
inc
ret
inc
pusha
stos
cltd
jecxz
and
ret
cmpsl
adc
jo
jns
sbbl
loopne
and
adc
inc
in
jecxz
and
push
sub
loope
lods
insl
jecxz
sub
inc
sbb
jmp
stos
cmc
orl
push
shr
fnstenv
inc
imul
or
loopne
and
adc
jns
out
rclb
push
hlt
stos
mov
sbb
dec
ret
and
mov
sub
cmpsl
mov
aas
loope
lahf
out
repnz
sbb
jecxz
fcmovbe
cmpsl
pusha
sbb
mov
xchg
outsb
xchg
es
popa
shl
test
arpl
fwait
lcall
out
clc
loope
dec
and
shrl
and
pusha
icebp
jecxz
notb
call
int
shlb
ret
and
in
sbb
push
mov
push
inc
dec
cmp
lret
xchg
lret
clc
sti
in
adc
jp
imul
outsb
xor
pop
fistpll
and
xchg
add
pop
push
shl
addr16
ja
aas
insb
sti
call
arpl
icebp
in
sbb
push
shlb
aaa
cmp
jl
mov
stos
les
and
ljmp
inc
sbb
mov
repnz
xchg
pusha
aas
adc
jo
add
mov
repnz
rcl
mov
mov
jbe
imul
insl
imul
push
loopne
in
js
outsl
loop
push
arpl
les
push
loope
xor
je,pn
pop
mov
cli
and
push
aas
outsb
push
xor
xor
cmp
loop
mov
cmp
xchg
mov
xor
add
xor
js
xor
cs
mov
sbb
push
jne
es
shlb
xlat
inc
inc
push
pop
pop
jmp
and
fisubs
cwtl
notl
fwait
jno
and
adc
movsl
movsb
xor
or
sti
fdiv
mov
and
dec
xor
cmp
popa
push
sub
in
pop
and
dec
mov
adc
pushf
mul
hlt
jo
cmpsb
sti
push
jmp
sahf
inc
adc
mov
add
in
adc
imul
ficomps
sbb
xor
mov
imul
movsl
out
testl
test
push
decl
scas
jne
leave
int3
movsb
xchg
xchg
inc
xor
es
xor
and
inc
push
or
cmp
inc
cwtl
mov
inc
outsb
popf
leave
inc
shrl
fiaddl
pop
loope
pop
shl
lds
mull
ljmp
out
out
mov
movsl
mov
sti
int
mov
shl
inc
sbb
andb
pusha
add
mov
add
test
rclb
fisttpll
push
shr
cmp
adc
push
jne
or
mov
mov
outsl
and
push
repz
push
daa
dec
xchg
xchg
daa
jb
sarb
daa
dec
ficomps
aaa
inc
xchg
pop
aaa
into
inc
mov
or
cmp
inc
push
xchg
ja
or
mov
fwait
jnp
xlat
add
inc
lds
inc
cmc
mov
es
pop
shlb
xchg
jo
adcl
outsl
or
loope
test
leave
cmp
call
call
cmp
sbb
clc
push
loope
push
and
scas
arpl
add
and
fwait
dec
mov
sbb
ret
test
mov
xor
cmp
rclb
sarb
rorb
mov
dec
push
jb
je
loop
or
push
inc
xor
mov
push
arpl
jbe
ja
icebp
movsl
testb
jnp
fsubl
mov
std
addps
xchg
ljmp
mov
and
push
insb
xchg
icebp
fwait
push
mov
jno
pop
iret
xchg
es
outsb
mov
push
cmpsl
pop
cld
stos
in
inc
adc
repnz
xchg
iret
xor
pop
add
and
cli
xchg
rolb
inc
mov
add
aam
mov
cmp
repnz
inc
test
sub
fucomi
flds
mov
aaa
je
sub
loop
daa
xchg
inc
mulb
cwtl
pusha
sub
addb
or
outsb
mov
arpl
pop
push
outsl
fidivs
movsl
iret
sub
pusha
jg
cmc
dec
loope
aad
scas
hlt
mov
aaa
jb
sbb
in
inc
mov
ljmp
add
push
push
outsb
add
loope
mov
sub
out
jne
and
mov
xor
imul
lcall
in
sbb
in
sbb
pop
in
sbb
pop
in
sbb
sub
sbb
popf
cld
mov
lds
sbb
sub
pop
xor
das
mov
and
xchg
fistpl
xor
inc
mov
xchg
shlb
push
jmp
push
shll
js
shlb
ja
dec
rcr
repz
shlb
dec
fsts
bound
in
add
add
out
nop
jbe
fdiv
xor
ret
xchg
add
dec
add
andb
flds
scas
jne
or
sub
arpl
or
in
mov
xor
enter
xchg
pop
fstpt
xor
fcoms
sub
arpl
stos
rcll
in
outsb
aam
inc
adc
outsl
mov
lds
add
xor
popf
push
mov
mov
aas
xchg
imul
fsubrl
adc
push
outsb
cltd
cmp
mov
or
xchg
bnd
mov
and
inc
mov
ret
push
pop
pusha
cmp
out
call
push
lock
testb
divb
cld
mov
xorb
out
pop
xlat
pusha
and
sbb
fisubrs
mov
push
inc
adc
shr
and
shlb
dec
push
sub
mov
mov
xchg
inc
repnz
clc
loop
push
push
dec
pop
push
push
push
arpl
mov
inc
insb
movsl
xor
lcall
push
xor
jnp
mov
ljmp
dec
fs
outsl
aas
pop
sbb
adc
mov
mov
cltd
cltd
rorb
xchg
mov
mov
pop
mov
adc
cli
clc
mov
lret
lcall
mov
pop
loop
jecxz
fbstp
mov
loope
sub
loope
lahf
and
push
mov
push
scas
push
xchg
fstp
int
arpl
dec
ss
xchg
pop
enter
xchg
cmp
jecxz
loop
into
frstor
enter
jb
outsb
inc
iret
in
xlat
stos
mov
mov
loopne
xor
pop
xchg
pop
mov
push
lcall
sbb
pop
shlb
jmp
sti
pop
push
cli
sub
into
lcall
inc
out
loop
lock
aad
xchg
repz
pop
push
push
dec
rcll
mov
xor
jae
ret
or
xchg
push
mov
inc
into
sbb
mov
pop
cltd
add
cmp
inc
es
in
out
mov
jmp
and
div
pop
mov
and
cmpsl
mov
mov
sbb
push
rcll
mov
out
jmp
aas
push
das
loope
ret
jo
pop
and
ja
xlat
sub
out
mov
mov
mov
xchg
and
sub
dec
sbb
js
xor
push
cwtl
lock
xor
mov
xor
sub
add
out
sub
in
xchg
cwtl
mov
addr16
pop
into
sub
push
sub
xchg
jmp
test
iret
mov
bndstx
push
fldl
and
add
dec
pop
pop
outsb
cwtl
push
and
lret
and
outsb
adc
push
ljmp
or
sbb
mov
cmp
add
out
test
add
and
jecxz
ljmp
or
or
adc
xchg
mov
jnp
out
cmpb
push
loop
out
loope
pop
dec
xchg
psadbw
mov
jne
mov
xor
mov
mov
stos
ret
cmp
add
subb
xor
nop
dec
lods
and
sub
mov
jae
pop
jb
stos
xorl
lods
pusha
aaa
hlt
and
subb
fcmovu
testl
cwtl
push
mov
ret
xchg
sub
insl
mov
or
aaa
sub
jb
in
lods
fidivs
pop
sbb
jecxz
movsl
pusha
push
notb
mov
push
adc
and
jl
fldenv
movsl
aad
xor
and
pop
ret
outsb
test
and
inc
shrl
arpl
movsb
ljmp
aam
xchg
dec
mov
fiadds
inc
jno
cs
mov
jns
pop
mov
andl
mov
ljmp
popf
loope
lock
mov
jl
stos
pop
push
xchg
hlt
hlt
aad
xchg
movsb
xor
dec
mov
rep
xor
ret
sub
lods
enter
add
jae
inc
loope
push
mov
mov
cwtl
pop
loopne
pop
das
fstps
push
call
loopne
hlt
jne
imulb
mov
lods
fldl
jl
and
jb
das
push
push
jb
cmp
xor
mov
shlb
aam
rcrb
ljmp
adc
rorb
mov
arpl
xchg
sub
cmp
push
andb
fchs
leave
mov
jecxz
jo
sub
mov
and
pop
divl
push
mov
loope
ss
inc
addl
sub
and
mov
dec
and
aaa
icebp
pop
fidivl
icebp
int
imul
hlt
pop
arpl
xor
jb
decl
shl
and
test
pushf
fsubrl
inc
fistl
aaa
movswl
inc
mov
in
sub
mov
mov
arpl
xor
jecxz
fbstp
ss
mov
aas
and
stos
xor
test
xor
push
and
and
fwait
das
xchg
je
mov
inc
je
insb
test
setge
xchg
jae
lret
jmp
mov
movzwl
ret
jbe
mov
fistpl
xor
inc
imul
mov
iret
addps
inc
mov
loope
add
ret
stos
inc
jb
ss
jae
aaa
stos
adc
mov
inc
push
rorb
test
aam
push
xchg
push
aaa
jle
pop
je
test
and
inc
loope
je
loope
insl
push
addb
xor
push
dec
filds
shll
adc
loopne
push
sbbb
cmp
mov
sub
cmp
push
sbb
jecxz
outsl
push
and
insl
xor
sub
mov
ljmp
add
pop
jge
push
adc
and
shl
cmc
mov
mov
or
fnstcw
mov
roll
pop
mov
shll
jge
push
cltd
mov
lds
push
adc
mov
inc
stc
hlt
loope
or
icebp
inc
and
mov
cltd
jno
sbb
or
push
loope
cmp
adc
jecxz
xchg
inc
fists
rolb
cs
into
pusha
jb
xor
rcr
xchg
mov
insb
push
lahf
mov
jmp
scas
pusha
and
ficompl
jecxz
leave
imul
mov
insb
mov
xchg
mov
in
stos
sbb
notl
cli
cmc
roll
and
pusha
loope
out
pop
fwait
xchg
fbld
fildll
imul
jno
sbb
icebp
shrb
je
fidivrl
push
andps
loope
xor
mov
es
imul
and
test
mov
xchg
repnz
sbb
cwtl
imul
sub
add
push
and
loop
mov
negl
mov
push
lret
mov
jmp
pop
jo
dec
sub
sub
sub
incb
pop
inc
inc
xchg
mov
pop
test
xor
mov
mov
negl
xchg
popf
ret
pusha
mov
adc
insl
push
icebp
inc
addr16
sbb
dec
lods
ret
fsubrs
gs
jecxz
and
jmp
adc
xchg
jp
jnp
or
xor
fisubrl
xchg
xchg
popa
cmp
inc
shrl
aaa
xchg
fmulp
inc
rolb
mov
pop
aas
cmp
lret
outsb
jbe
push
ds
mov
xchg
push
mov
inc
mov
sbbb
sbb
jmp
cmp
jo
jns
in
inc
mov
dec
pop
inc
popa
xor
loopne
repnz
xchg
in
inc
xorl
repz
jo
mul
fisubl
inc
cmpsl
pop
movsl
outsb
or
out
mov
adc
push
push
and
ret
pop
jecxz
lret
xorl
inc
in
mov
xor
mov
and
scas
ljmp
xchg
mov
pop
lea
test
or
jbe
adc
pop
push
sbb
jle
ds
mov
cmp
repz
add
mov
and
and
imul
repnz
sub
pusha
loope
pop
repnz
push
loope
cwtl
shlb
ret
mov
call
sub
and
mov
add
or
xchg
notl
jne
cmp
mov
daa
loop
fstpt
push
es
inc
andl
insb
mov
inc
cmc
push
inc
mov
loopne
outsb
test
sbb
and
fdivl
div
loop
mov
repnz
pusha
lcall
jb
adc
movsb
sub
lods
int3
mov
dec
push
arpl
inc
mov
adc
sub
rclb
and
add
stc
in
imul
and
inc
or
loop
sub
shll
push
enter
inc
pop
ljmp
inc
jmp
add
add
jbe
add
fisttpll
movsb
lahf
sub
pop
subb
or
dec
dec
adcl
sub
cmpl
push
repnz
mov
shll
roll
cwtl
addr16
pop
test
call
imul
xchg
insb
add
rolb
notl
xor
inc
in
sub
ret
sub
shl
pop
filds
push
jns
sub
inc
wbinvd
test
mov
xchg
pop
imull
fwait
mov
repnz
inc
push
xor
lock
lahf
mov
xchg
mov
mov
dec
loop
adc
insl
inc
ret
cmc
iret
add
leave
imul
ss
add
outsb
jge
test
inc
xchg
scas
push
mov
pop
inc
and
mov
insb
adc
and
inc
xchg
sbb
scas
xchg
ret
jmp
jae
xor
push
push
pop
ljmp
and
sub
mov
mov
inc
daa
negb
test
sarl
cmc
shrb
popa
mull
push
test
and
sub
addr16
call
push
sub
mov
mov
jecxz
cmpsb
jnp
inc
pop
pop
mov
adcl
mov
and
inc
sub
adc
or
add
mov
arpl
mov
aas
sub
arpl
xchg
loope
bound
sti
mov
push
add
and
flds
not
pop
movsb
call
jbe
dec
mull
pushf
bound
mov
outsl
aaa
inc
loopne
dec
inc
sub
aam
pop
lods
ret
and
sub
inc
jb
sub
pusha
push
jecxz
enter
out
insb
repnz
mov
popa
int3
mov
mov
ret
lahf
push
jecxz
fdivrl
adc
and
faddl
and
scas
push
loope
fisubrs
test
lret
cmc
add
divl
sbb
ljmp
out
outsb
scas
stc
and
repz
pop
cmp
movsb
jns
cwtl
sub
mov
xchg
adc
insl
es
sti
xlat
out
fistl
in
jl
push
loop
sub
es
enter
bound
test
push
xor
stos
cmpsl
or
and
outsb
add
xchg
fidivl
bound
sub
sahf
out
push
xor
wbinvd
push
mov
test
xor
imul
sbb
ret
lea
out
pop
mov
sbb
jecxz
lahf
outsb
xor
cmpb
dec
xchg
inc
mov
mov
sub
sbb
inc
cmpsl
loopne
mov
mov
jbe
in
gs
push
rclb
jb
xor
sub
adc
pusha
fld
ja
push
xor
ja
out
negl
pop
inc
sub
insb
stos
lods
negb
adc
jge
shl
nop
sbb
xor
and
iret
pop
out
adc
or
stc
orb
loop
jmp
jb
loope
sub
mov
jbe
ja
push
fnstenv
cmp
cltd
rclb
push
inc
xchg
gs
sub
ja
xor
icebp
and
divb
ljmp
pusha
scas
jne
cmpsl
push
mov
scas
mov
inc
or
jmp
data16
negb
cmpsl
dec
xlat
dec
jl
shll
dec
divl
jns
outsb
scas
je
pop
sbb
cmp
movsb
or
pushf
and
imulb
ret
aaa
and
call
ljmp
xchg
fwait
push
jbe
repz
adc
pop
loope
cmp
xor
outsb
aad
adc
aam
dec
jmp
mov
and
das
repnz
idivl
out
cmp
xor
icebp
xchg
flds
push
add
cltd
je
lods
fidivl
inc
mov
lret
add
push
loope
inc
idivb
in
sub
or
pop
in
cmc
sub
inc
int3
xchg
adc
ss
outsl
arpl
ret
insl
jge
or
sub
sbbb
aaa
mov
mov
xor
pop
push
cmp
ror
hlt
nop
mov
and
sbb
mov
outsb
movsl
xor
sbb
insb
roll
sub
cmp
push
pop
inc
or
les
cmc
mull
scas
sbb
xchg
rclb
div
dec
rcll
xchg
and
jle
and
xchg
in
into
xor
cmc
xchg
repnz
xor
mul
movsb
cmp
popa
repnz
add
dec
cwtl
testb
push
xchg
rcrb
aad
test
xor
push
shlb
test
push
add
in
adc
lcall
and
cmp
xchg
dec
push
mov
enter
push
and
arpl
dec
fistpll
out
and
push
and
insb
test
inc
repz
outsb
leave
shrb
inc
in
nop
xchg
fisubrs
jb
mov
xor
cmpsl
xor
cmp
loop
inc
ret
in
aaa
xorb
movsb
add
pop
push
and
pop
inc
pusha
loope
jbe
lret
adc
ret
mul
cwtl
push
cmp
inc
xor
sbb
js
push
xchg
cmp
adc
cmp
call
xchg
sbb
in
sub
jb
outsl
pusha
shl
movsl
xor
outsb
ja
add
xor
stos
pop
testl
shr
fdivr
lcall
jmp
adc
push
adc
loop
push
je
xchg
ret
neg
test
add
test
inc
cmp
mov
xchg
outsb
in
imul
ljmp
enter
mov
fdecstp
dec
popf
rcrl
test
push
xchg
or
rclb
fcomps
testl
stos
jg
mov
insb
jb
cwtl
outsl
cmpsb
lds
lock
pop
cmp
dec
aaa
clc
in
in
test
inc
xor
rcll
xor
add
mov
sub
jbe
and
leave
sub
push
fwait
jmp
mov
push
jecxz
icebp
inc
inc
repz
xlat
scas
es
inc
je
inc
jmp
pop
adc
mov
or
push
xor
jne
mov
jecxz
aaa
inc
lods
or
in
push
sub
insl
sub
jmp
das
jae
fdivrs
jb
lcall
leave
fwait
jbe
icebp
cmp
ss
daa
enter
fdivs
movsl
outsb
ds
aad
inc
sub
je
inc
mov
xchg
stos
inc
test
ljmp
mov
xorb
out
and
push
and
outsl
rcll
cs
loop
sub
inc
and
arpl
pop
mov
int3
push
xor
les
clc
mov
les
adc
shrl
xor
lds
in
xor
std
in
inc
subb
repnz
jnp
flds
mov
or
sbb
in
mov
sub
test
jb
push
andb
xchg
push
jl
faddl
aam
hlt
sub
inc
cmp
rcr
movsb
mov
les
ss
shlb
jne
mov
xor
fidivl
fwait
sub
xchg
jl
outsb
xor
out
frstor
mov
adc
hlt
in
je
or
nop
lcall
xchg
arpl
cmp
cli
xlat
and
mov
scas
test
mov
aaa
xor
pop
cmc
imul
cmp
lcall
adc
mov
mov
and
int3
call
inc
and
xchg
ja
pop
xor
xor
xor
inc
mov
lods
jnp
xlat
pop
cmp
sub
repz
lods
shll
sub
sub
cli
jbe
inc
push
inc
add
mov
call
inc
add
mulb
ljmp
je
xchg
cmp
and
mov
xor
insb
ret
bnd
jecxz
call
sub
mov
push
jne
sbb
mov
pusha
pop
test
idivl
scas
cmp
mov
mov
je
hlt
pusha
out
fcomps
ret
loope
and
stos
imul
push
sub
je
jo
into
pop
jb
aaa
loope
arpl
test
call
shlb
jbe
cmp
push
notl
sbb
mov
mov
arpl
fs
in
xchg
add
adcl
fldcw
lcall
out
inc
inc
xchg
jbe
mov
jb
inc
or
xchg
lcall
add
fadds
inc
lret
mov
loope
loop
add
jne
mov
mov
fucom
pusha
in
cmp
mov
repz
test
into
push
inc
xchg
scas
dec
loop
scas
or
loopne
mov
dec
ja
push
loope
and
push
ret
repz
loopne
cmp
adc
cmpsl
and
and
cmpsl
xor
mov
sbb
ret
lock
jmp
sub
nop
inc
lcall
and
jp
aaa
sti
xchg
je
cwtl
sub
and
loopne
outsb
xchg
pop
not
lds
xor
jmp
jb
mov
add
xor
jp
sbb
or
insb
shlb
add
mov
and
jne
loop
mov
push
aaa
jb
push
inc
cmp
sbb
fwait
mov
fs
sub
pop
aas
pop
mov
scas
pushf
adc
pushf
or
repnz
lods
inc
repz
out
sub
dec
sarl
hlt
mov
add
xor
inc
loope
scas
outsb
and
in
pop
popa
xchg
outsb
pop
aaa
jne
movsl
sub
and
jbe
sbb
outsb
jl
clc
push
popl
xchg
cmc
fdivrl
inc
aam
inc
cmp
stos
sbb
or
dec
mov
sub
mov
push
mov
ja
enter
in
inc
into
mov
mov
dec
stc
and
stos
inc
mov
xchg
cmp
mov
loop
pop
lods
pop
orb
rol
pusha
adc
repnz
inc
sub
imul
add
scas
add
push
xor
outsb
test
xchg
add
sub
mov
pop
inc
loopne
data16
sub
repnz
fstl
and
pop
mov
icebp
jb
push
mov
mov
popl
ficoml
arpl
push
jbe
das
mov
add
push
pop
mulb
rclb
dec
out
mov
inc
mov
xor
popa
pop
movsl
loopne
mov
or
xchg
sub
push
nop
aas
imul
outsl
jnp
inc
push
ficomps
outsl
shll
fs
fisubl
xchg
outsb
lock
dec
call
out
push
mov
mov
movsl
scas
push
ds
lcall
pop
jb
cmpb
enter
addl
xchg
add
inc
fs
arpl
movsb
jb
add
adc
jne
push
jno
or
imulb
push
xor
fldt
cmp
rol
rcrl
lds
aad
pop
add
pop
inc
push
dec
xlat
xor
xchg
sub
jbe
pusha
shrl
sbb
sub
push
test
mov
pop
rolb
mov
nop
cltd
mov
cmp
jecxz
pop
jbe
sub
mov
daa
mov
fwait
insl
rolb
mov
loope
sbbb
xchg
mov
jb
add
ret
push
loop
fdivl
mov
mov
mov
and
add
icebp
fcmovbe
icebp
xlat
out
jecxz
aaa
mov
inc
and
aaa
ljmp
xchg
mov
sub
push
nop
in
cwtl
push
xor
movsl
lret
pusha
push
sub
inc
xor
bound
or
fwait
push
or
sub
jmp
iret
out
jb
fsubrs
pushf
popa
ret
lock
cmp
adc
xor
sbb
xor
loope
push
inc
jns
enter
call
xor
mov
sub
dec
je
fsub
jnp
je
loop
mov
and
xor
pop
fmuls
imul
movsl
sbb
dec
mov
mov
jo
je
mov
jb
jae
jb
sahf
pop
dec
jecxz
outsb
mov
loop
mov
jbe
cmp
push
insb
lds
sub
inc
jbe
cmp
repz
inc
xchg
jg
mov
xorb
sub
daa
ret
xor
pop
mov
data16
inc
fcmovb
inc
mov
je
test
push
fwait
or
mov
xchg
adc
mov
imul
jg
loopne
mov
dec
mov
add
xchg
int
icebp
mov
add
and
leave
or
xlat
mov
xchg
pop
les
sub
mov
insb
out
pop
outsb
aad
inc
sub
std
pop
mov
test
stc
aad
pop
xchg
call
nop
daa
data16
loop
popa
jne
mov
fwait
dec
sbb
sub
imull
push
fs
jb
xchg
mov
xchg
jne
push
push
inc
push
adc
sbb
xor
and
in
jp
popf
add
jne
testb
or
jp
outsb
xchg
mov
mov
in
lds
jge
ja
pop
push
push
stos
cmpsb
jmp
sub
xchg
cld
dec
insl
push
out
cmp
or
test
cmc
pusha
pop
mov
dec
jae
ja
das
pusha
push
add
loope
rorb
pusha
sbb
sbb
repnz
xchg
cmc
mov
jp
fildl
pusha
jb
les
mov
mov
jmp
mov
inc
xchg
cmovl
ret
mov
jo
shl
popf
xor
adc
mov
pop
aaa
or
lds
mov
divl
cmp
and
cs
inc
call
loopne
add
push
jae
jl
enter
xorl
mov
sbb
aaa
in
xchg
stc
pop
icebp
sbb
jmp
cmc
test
hlt
jno
adc
jg
movsb
fwait
lret
psllw
ret
nop
sub
push
out
std
pushf
pop
orb
iret
push
stc
mov
inc
sub
arpl
push
jbe
mov
sbb
fstl
jbe
dec
icebp
aad
mov
adc
enter
push
test
or
push
sub
cmp
cmp
shrl
lea
push
xchg
mul
out
icebp
stos
push
mov
pushf
test
or
loopne
mov
pop
fdivr
cmpl
lret
subb
inc
out
jbe
rcr
stos
pop
or
dec
hlt
aas
aad
xchg
inc
out
stos
jmp
stos
iret
andl
lock
cmc
repnz
popa
outsb
xor
jnp
dec
notl
inc
shlb
call
pop
sub
and
pop
xlat
inc
stos
pop
and
push
cld
leave
sub
imul
or
insl
fists
into
fadd
call
push
lea
lods
lock
aaa
xchg
inc
jb
arpl
stc
into
pop
cld
sbb
aas
jecxz
in
imul
xchg
mov
fnsave
shrb
sub
sbb
xor
popa
jno
push
mov
pop
inc
inc
imul
jnp
lret
popf
out
ds
dec
popl
testl
mov
pop
cmp
iret
call
je
mov
and
dec
ja
jbe
jg
and
outsb
push
adc
add
xchg
pushf
mov
sysenter
sbb
push
jmp
sahf
stc
pop
test
not
scas
je
mov
mov
dec
lods
jno
out
mov
popa
adc
mov
lods
adc
ljmp
cs
lcall
fwait
xor
test
ja
movsl
scas
fwait
movsl
push
adc
in
aad
or
mov
in
dec
xor
jne
xchg
and
ret
shrb
xchg
and
subb
enter
in
cmp
imul
fs
dec
sub
pop
xor
cmc
shlb
add
jmp
test
jmp
pop
icebp
cmp
stc
and
jl
jle
jne
dec
fucom
stos
add
leave
fildl
mov
je
and
push
lahf
jb
jg
lock
xor
cmp
cmp
fdivrs
cmp
insb
pminub
das
xorl
rolb
mov
jmp
push
in
dec
mov
int
xchg
repnz
mov
sbb
jle
xor
sbb
mov
jle
shl
popf
dec
orb
mov
insb
cltd
jo
adcl
dec
or
pop
jns
inc
mov
jnp
and
test
cmc
test
adcb
pusha
push
test
rep
xchg
jl
sarb
int3
mov
inc
inc
mov
mov
mov
inc
mov
lret
xor
jg
jle
lret
iret
sbb
dec
lods
jle
lahf
addl
dec
dec
xchg
xchg
and
lock
adcb
gs
cmp
jbe
lcall
aas
mov
xor
jno
dec
and
incl
out
inc
fistl
pop
xor
pusha
cwtl
arpl
andl
sub
pusha
addr16
and
adc
pop
jge
lret
push
movsb
into
rcrb
lret
pop
adc
fstpt
dec
pop
loopne
sub
lret
es
inc
jae
xchg
lds
pushf
idivl
sub
ss
and
dec
roll
xchg
in
es
xor
cmpl
or
cmpsl
cmp
loope
pop
and
pop
xchg
or
insb
cwtl
shlb
rcrb
popf
daa
cmpsb
ret
pop
in
mov
jp
insb
outsl
sti
xchg
push
out
cltd
sub
ljmp
lret
lods
outsb
jmp
aad
js
sub
sub
ficoms
repnz
fisubrl
mov
inc
pushl
fadd
push
mov
nop
jbe
mov
outsl
mov
in
xchg
pop
jmp
loopne
pop
mov
sub
dec
inc
xor
imul
loope
mov
push
nop
push
cwtl
outsl
lret
mov
xchg
movsb
mov
xor
pusha
sub
cmp
loop
push
jne
or
mov
mov
or
sub
add
in
divps
hlt
push
sbb
mov
pop
adc
jmp
mov
jno
out
jmp
dec
mov
addr16
jbe
xor
push
rcrb
and
and
inc
jbe
fwait
push
stos
fwait
aad
cmp
inc
pusha
cmp
rolb
es
or
xor
fimuls
mov
push
stos
sahf
aad
in
orl
daa
mov
ja
push
sbb
push
adc
ficoml
repz
xchg
mov
rcll
fsubrp
push
scas
out
pop
gs
insb
sub
popa
inc
test
cmc
lret
pop
jge
mov
ljmp
psadbw
outsl
cmp
mov
jbe
adc
imull
aad
test
mov
fcoms
xchg
test
lahf
cli
mov
pop
pop
hlt
sub
mov
clc
dec
in
loop
sti
cmc
nop
ljmp
leave
data16
cmp
push
pop
je
xlat
jl
push
mov
add
dec
stos
scas
dec
pusha
pusha
shlb
push
jbe
js
fs
sub
inc
add
sub
out
insb
jne
ds
xchg
pop
es
pusha
jno
pushf
sub
je
pusha
mulps
icebp
or
in
loopne
js
xchg
fidivl
sbb
loope
inc
adc
adc
repz
arpl
inc
add
inc
dec
outsb
xchg
dec
out
mov
int3
jnp
lea
xorl
lret
adcb
and
out
stos
cmc
lods
jb
dec
inc
xchg
repz
cmp
icebp
cltd
pop
insb
jo
outsb
scas
out
fistpll
mov
xchg
jmp
mov
dec
int3
inc
fdivl
mov
fidivrs
mov
dec
in
xchg
pop
sbb
inc
dec
fistps
das
and
sub
jnp
fcmovnbe
mov
mov
dec
test
inc
shrb
outsb
adc
cli
dec
jno
push
pop
mov
dec
aad
mov
ss
dec
fcomp
push
push
loop
sub
mov
xor
ds
notb
dec
pop
dec
inc
mov
out
jmp
xor
xchg
bswap
jmp
addb
stc
mov
loope
inc
and
pop
pop
lcall
xchg
lods
sarb
pop
push
cmp
pop
sbb
mov
lea
and
pop
loop
and
inc
mov
lods
loope
fdivrp
testl
popa
je,pt
dec
inc
inc
mov
out
inc
mov
in
inc
insl
hlt
dec
int
or
dec
call
push
int3
repnz
mov
negb
push
add
in
cwtl
std
adc
aam
nop
push
and
mov
sbb
add
popf
jge
addr16
cmpsl
outsb
negb
inc
or
ds
inc
jle
popa
or
ja
mov
push
ds
cltd
dec
pop
mov
nop
push
in
loope
sub
ficoms
mov
call
lods
mov
pop
mov
mov
jg
les
aaa
xchg
out
sbb
fdivrl
cmpsb
sti
lea
and
dec
push
mov
ret
lods
jnp
mov
loope
cmp
imul
in
lods
nop
rclb
cmc
popa
loop
mov
sub
mov
jle
loop
stos
xchg
packssdw
and
out
rclb
addr16
aas
ficomps
adc
cli
movsl
movsl
rcrl
out
jbe
jb
xchg
bound
setbe
or
or
or
scas
clc
dec
arpl
shll
repnz
cld
stos
int3
or
aas
xor
stos
push
mov
jnp
pop
push
cmp
xor
ljmp
or
inc
notb
jmp
cmp
dec
cltd
cmp
push
and
es
pop
xchg
call
xor
movsb
arpl
and
stos
clc
pop
xchg
push
rclb
or
lock
ret
xor
and
jnp
push
adc
scas
je
loopne
dec
stos
mov
dec
pop
negl
cmp
je
cmpsb
inc
xchg
cmp
jb
pop
jmp
push
shl
inc
fwait
aas
pop
mov
dec
or
push
mov
jecxz
cmp
push
iret
dec
xlat
xchg
push
rolb
loope
ret
mov
aas
lock
hlt
neg
xchg
fiadds
das
ja
rclb
pop
stos
mov
and
jns
mov
cld
icebp
fcmovu
nop
cmc
jne
shlb
idivb
adc
ss
popa
iret
xchg
hlt
cmpsb
test
push
lret
inc
xor
dec
pop
pop
loope
insb
sub
aas
sub
cmp
psrld
insb
nop
imul
lret
mov
aad
lret
cmpsl
mov
outsl
mov
pushf
aaa
adc
jecxz
mov
lret
sub
add
imul
xchg
sahf
and
movsl
or
negb
dec
jo
filds
sbb
repz
outsl
outsl
jmp
outsb
jne
ret
lret
popa
mov
fiaddl
fs
mov
daa
and
pop
jns
sbb
dec
adc
rorb
push
and
movsb
sub
fwait
adc
push
ljmp
sbb
mov
imul
pop
rolb
sbbl
pusha
outsb
cwtl
mov
out
notl
loope
push
add
mov
xor
out
xor
sbb
out
cwtl
jo
movsl
rcl
lock
test
push
cmp
mov
ficoml
sbb
xchg
xchg
pusha
mov
aaa
popf
cmpsl
jo
mov
xchg
lret
fisubrl
pop
in
lea
not
jbe
leave
ljmp
imul
pop
outsb
xor
push
jge
jecxz
adc
bound
test
xchg
pop
adc
jae
inc
testl
sub
adc
dec
out
cltd
sti
cmp
aam
and
and
xchg
sbbb
sbb
ja
dec
xor
gs
addb
push
daa
add
xor
test
rol
iret
sahf
adc
movsl
insb
in
aaa
sbb
mov
sarl
adc
xchg
add
jae
xor
adc
dec
notl
jbe
mov
xor
xchg
push
dec
ds
sub
inc
loope
fnstcw
adc
sub
mov
mov
loopne
popf
arpl
leave
sub
xchg
cmp
int3
cmpsl
and
jbe
aaa
cmpsl
pop
or
jbe
push
dec
imul
jb
push
stc
sbb
pop
ljmp
in
push
shr
in
mov
cmp
lods
mov
arpl
outsb
xor
mov
and
insb
fwait
dec
inc
scas
neg
mov
dec
das
mov
pop
adc
sub
xchg
ficompl
adc
push
outsb
push
jns
imul
aad
sbb
outsl
dec
addb
pop
pop
and
shl
sbb
mov
les
faddl
inc
loop
loopne
inc
outsb
xor
xchg
mov
call
mov
xchg
repz
shlb
movsb
stc
pop
fsubr
lret
pusha
sti
lods
inc
repz
xchg
mov
inc
pusha
xchg
lods
dec
mov
mov
int3
pop
fldl
pop
jle
adc
in
add
ficoml
cltd
insl
and
push
test
xlat
xor
cmp
sub
jg
lods
mov
fnstcw
pop
mov
adc
mov
add
sub
mov
jb
daa
cmp
cmp
les
mov
insb
xor
push
inc
sti
popf
adc
mov
inc
in
sub
cmp
and
adc
in
testl
mov
push
push
sbb
loope
loop
cmc
pop
mov
fimull
and
pusha
add
sbb
mov
xchg
push
and
imul
leave
imulb
pop
shll
sub
pusha
mov
push
mov
mov
das
fcomip
loope
jb
mov
aaa
jne
mov
mov
xchg
mov
shll
int
dec
loop
js
outsl
sub
cltd
xchg
adc
cmp
jb
xchg
sub
pop
loop
lcall
jmp
fldl
mov
rcl
test
fisttpll
leave
xorb
xor
ret
test
outsl
outsl
dec
jnp
sub
and
sahf
and
pop
rolb
jmp
fbstp
fnstenv
dec
jb
scas
mov
jmp
dec
add
inc
out
mov
fidivrl
mov
in
jge
ds
jbe
fldcw
das
xorb
mov
mov
mov
xchg
mov
mov
outsb
dec
sbb
and
mov
out
pop
add
cmp
in
icebp
adc
inc
aam
out
pop
pop
aaa
mov
inc
es
xchg
push
in
pop
xor
inc
in
loop
and
mov
bound
sub
xchg
in
insb
cmc
or
mov
fs
adc
add
stc
or
testb
lret
sbb
mov
cmp
into
outsl
mov
inc
cli
es
fiadds
outsl
stos
loope
filds
lahf
pop
push
push
adc
inc
xchg
mov
push
outsb
loope
xor
dec
dec
jecxz
out
cmp
loope
xchg
cmpsl
mov
jecxz
scas
cmp
push
xchg
pusha
fnstcw
jmp
mov
das
push
insb
rorb
outsb
test
test
fmul
adcl
push
jecxz
fwait
inc
fcompl
shrl
push
inc
in
int3
fisttpl
notb
jecxz
inc
loope
mov
mov
insl
lods
ftst
fsts
call
mov
cmc
leave
in
or
xor
les
addl
sbb
test
jno
mov
add
into
in
out
idivb
and
pop
adc
push
int
loop
fstl
or
and
insb
in
pop
imul
push
mov
pop
aas
jmp
mov
pop
pop
push
imul
sub
loopne
pushl
adc
xor
insb
popa
pusha
repnz
push
fmulp
cmpsl
adc
and
arpl
sub
lcall
adcb
xchg
scas
test
push
out
mov
int
jb
lods
rolb
mov
movsb
pop
inc
push
add
push
sub
insb
sbb
out
out
je
xchg
in
out
adc
cmpsl
push
mov
and
pop
in
inc
inc
sub
push
ljmp
push
pop
jle
outsb
imul
lds
or
je
mov
arpl
or
cmp
inc
add
mov
xchg
xor
jns
adc
in
jge
or
sub
jp
sarb
rcl
inc
inc
test
mov
sub
mov
shrb
sbb
pop
fucomip
push
outsl
cmc
nop
push
pcmpgtd
repz
pop
jmp
fistpl
shll
sarb
sbb
mov
mov
cmpsb
push
cmp
stos
push
and
test
fwait
dec
cmc
jge
pop
pop
xchg
bound
inc
dec
adc
mov
fs
es
dec
loope
sbb
es
xorl
inc
or
sbb
pop
jo
mov
push
pop
jg
mov
lret
mov
in
inc
dec
hlt
add
aas
lods
pushf
mov
xor
lret
mov
push
shlb
sub
subb
sbb
filds
mov
xor
jo
ret
inc
and
hlt
rorl
xchg
push
scas
lcall
outsb
aam
les
mov
pop
sub
mov
insb
fwait
mov
jo
mov
test
jne
lea
or
ror
lods
into
adc
xchg
sbb
inc
mov
mov
cs
inc
mov
stos
andb
add
into
push
jg
addr16
and
fmuls
pop
call
mov
in
and
lea
mov
inc
pop
cmpsb
push
or
xchg
rolb
movb
xor
dec
popa
and
mov
stos
inc
lock
cwtl
cltd
xchg
popa
sar
aas
div
in
dec
rcrl
decl
je
psrad
mov
dec
clc
loope
jno
test
inc
std
lea
xchg
rolb
rcr
stc
out
aam
pop
in
adc
jmp
repnz
insl
push
dec
mov
push
lret
stos
outsb
push
call
xor
loope
aad
inc
xor
or
sbb
pop
jle
aam
in
popa
push
stc
enter
fisubl
repz
and
fimull
inc
inc
inc
push
pusha
ljmp
arpl
inc
loope
xor
dec
inc
bnd
pop
cmc
xchg
aad
fisubl
or
dec
cmp
xorb
popa
sub
xchg
xor
sarl
push
and
loop
jmp
xchg
push
mov
inc
inc
jp
inc
cwtl
in
test
xlat
repnz
lret
inc
xchg
mov
loope
xor
sub
dec
xorb
push
mov
hlt
test
jne
arpl
mov
and
xor
adcl
pop
xor
dec
jecxz
divl
jne
scas
or
mov
xor
shr
jo
or
outsl
icebp
pop
shll
cwtl
in
mov
daa
popl
jne
and
mov
and
jns
inc
mov
rolb
sub
repz
xor
mov
adc
dec
iret
xchg
sbb
aaa
loop
jmp
popa
mov
je
roll
loope
fcmovbe
mov
decb
out
mov
xchg
push
movsb
jno
and
mov
nop
mov
mov
jecxz
shrb
inc
mov
and
out
dec
sbb
ljmp
inc
por
dec
iret
and
mov
pusha
out
in
sbb
sbb
loope
out
jb
and
push
jo
mov
ds
in
aas
dec
int
mov
mov
insl
push
pop
jecxz
test
dec
jg
fs
out
sahf
daa
dec
sbb
in
imul
jecxz
cmc
adc
ret
push
lds
jbe
sub
pop
sub
push
lds
jecxz
enter
out
add
sub
pop
push
dec
adc
nop
stos
fists
jb
bound
std
xchg
loope
push
fisubrl
mov
push
sub
mov
cmc
mov
lea
xor
and
dec
mov
mov
daa
jo
call
lea
mov
inc
rclb
js
push
adc
jp
icebp
lret
or
rclb
and
neg
adcb
in
dec
out
ds
dec
and
adc
dec
cmp
movl
lcall
jbe
pop
nop
mov
andb
cmc
push
mov
dec
sub
nop
adc
dec
and
pusha
mov
and
lods
ret
dec
add
sub
jg
inc
add
popa
cmp
shrb
push
mulb
mov
lcall
jno
les
insb
arpl
mov
jae
jl
jmp
pop
std
adc
push
pusha
pop
jg
popa
xor
shrl
std
mov
mov
in
stos
lret
jge
xchg
mov
je
insb
dec
jmp
xlat
xchg
imul
loope
les
pusha
gs
mov
out
outsl
mov
xor
and
aaa
sub
cltd
mov
insl
push
and
inc
out
insb
outsb
or
sti
bound
xor
ljmp
pop
sub
xchg
cwtl
sub
movsl
and
xchg
ljmp
je
sub
mov
or
loop
or
mov
xchg
or
loop
dec
mov
test
push
cwtl
in
or
in
xchg
and
adc
pusha
les
and
lcall
xchg
pop
dec
ljmp
pop
xchg
fsubs
out
sbb
out
jbe
movsl
pop
test
mov
sbb
inc
jbe
test
cmp
cmc
sub
jmp
in
int3
loope
dec
leave
sbb
fists
div
sub
mov
fs
sbbb
xchg
je
jno
sbb
movsl
loop
mov
fildll
call
cmc
inc
cmpsl
movsl
les
sbb
insb
xchg
jge
mov
outsb
cltd
fisubrl
data16
loope
ret
xor
cmp
inc
xchg
jbe
iret
jecxz
outsb
out
lods
mov
loop
inc
cmpsl
leave
push
mov
in
sub
and
aaa
push
sub
sbb
arpl
jae
fimull
subl
jae
xchg
repnz
mov
mov
ret
rolb
or
mov
jecxz
cmpsl
push
mov
cmpsb
sub
lds
std
call
inc
mov
int
adc
adc
xor
cwtl
repnz
xchg
in
adc
cmp
stos
loope
outsb
sbb
and
je
add
adc
jecxz
icebp
mov
hlt
push
rcrl
push
out
or
jb
push
mov
pusha
pop
movsl
add
dec
adc
mov
push
push
arpl
mov
andl
ss
jg
notb
loopne
scas
ljmp
repnz
add
sbb
outsb
jmp
movsb
loope
mov
mulb
sub
xor
jmp
outsb
mov
shrb
inc
rcr
std
nop
inc
xchg
fidivrs
jo
pop
outsb
leave
lret
xchg
jle
sbb
rcl
or
pop
cmc
por
loope
nop
lret
into
add
test
loop
repnz
mov
add
mov
mov
shl
xor
mov
jae
dec
adc
mov
shlb
pop
dec
cmp
sub
rorb
outsb
mov
loop
cmp
and
xchg
pxor
enter
idivb
pop
sub
pop
fs
rcrb
lea
and
js
inc
loopne
cmp
outsb
adc
bound
test
insl
push
aad
add
repnz
stos
adc
add
jne
mov
cwtl
out
in
mull
xor
jl
cmp
inc
sub
inc
push
mov
sbbb
loope
cwtl
push
popa
add
std
out
mov
pop
push
in
scas
add
mov
sbb
ss
push
std
imul
mov
out
into
push
fidivl
lds
bound
shll
movsb
mov
ret
ret
dec
cmp
in
sbbb
jge
dec
and
xchg
shl
ret
call
mov
lret
je
xchg
push
inc
xchg
enter
jmp
inc
pop
pop
jns
xor
pusha
sub
jmp
es
icebp
xchg
push
out
jmp
inc
repnz
and
in
inc
add
imul
sub
sub
subb
jns
repnz
stos
adc
fisttps
shlb
gs
outsb
lahf
int
in
loop
xchg
test
mov
popf
push
pop
jne
pop
jo
pop
push
fcmovu
push
popf
xlat
xor
ss
push
push
cmp
add
fmuls
repz
push
cli
xlat
xchg
inc
jecxz
insb
jmp
stos
pop
xor
xchg
outsb
xlat
popa
push
or
js
andl
jo
push
shll
gs
xorb
push
shrb
adc
stos
mov
cmpl
shufps
pusha
xor
ret
das
fnstenv
mov
jb
push
jo
nop
or
xchg
divb
rep
ss
jbe,pt
add
adc
sahf
in
hlt
test
jno
mov
les
outsl
add
lcall
cmp
and
adcb
out
cmp
shrl
and
loop
sbb
cmpsl
fucomi
sub
mov
jl
pop
push
insb
les
sti
nop
mov
imul
bound
jmp
adc
dec
pusha
scas
pop
mov
hlt
sub
mov
subb
fs
imul
adc
ljmp
in
add
sbb
xchg
xor
inc
mov
dec
pop
mov
sub
jmp
mov
push
mov
in
sti
dec
xchg
cwtl
xchg
xor
fisubrl
rolb
inc
popa
negb
sub
push
dec
jecxz
or
push
cmpb
xor
sbb
int3
pushf
out
mov
test
outsb
cmpsl
inc
pop
lcall
jbe
in
aam
lcall
push
mov
cwtl
pop
dec
xchg
jg
inc
repnz
mov
cmp
loop
sub
xlat
loopne
out
sbb
dec
ret
push
pusha
rolb
pusha
or
mov
mov
sbb
outsb
sbb
inc
mov
inc
jo
mov
fcoml
inc
mov
lods
outsb
cmpsb
cmpsl
subb
iret
sahf
movsb
jmp
arpl
cmc
and
xor
sbb
mov
xchg
call
lahf
out
or
push
aad
pop
int
rcr
lret
dec
dec
jne
out
loop
sbb
dec
push
out
hlt
pusha
inc
mov
shrb
push
andl
cmp
pusha
mov
loope
mov
repnz
push
cmp
das
pushw
shlb
inc
in
dec
or
les
aas
push
clc
and
js
movsl
sub
mov
dec
ljmp
loop
fiaddl
sbb
popf
xor
jbe
insb
jbe
inc
push
imul
push
sub
pusha
mov
jo
mov
cmpsb
filds
inc
xchg
push
ljmp
in
enter
or
mull
xchg
xchg
leave
out
xor
jbe
xchg
pop
ljmp
je
ret
test
pop
jne
notl
and
push
shrb
sub
mov
mov
imul
loope
sub
ja
ljmp
inc
ficoml
or
push
push
sub
insl
testb
shl
hlt
pop
notl
inc
sub
outsb
xchg
hlt
ja
je
push
push
lret
lahf
and
sub
negl
ja
jne
push
jne
and
loop
xor
sbb
fbstp
je
push
cmpsl
jecxz
xor
push
xchg
lcall
test
test
cmp
xor
ljmp
mov
ljmp
enter
call
dec
dec
mov
imul
loop
push
loop
push
jmp
pusha
mov
dec
insl
inc
xor
imul
push
jbe
not
loop
jbe
xor
sub
push
and
push
cmc
pop
loope
mov
test
sbbb
loope
mov
push
popa
loop
ja
loop
sub
loop
ficompl
cmpsb
pop
sub
popf
cltd
inc
insl
loop
xchg
xchg
loop
jmp
aam
xor
ds
popa
inc
in
cmp
cli
xor
outsb
div
repnz
nop
movsb
inc
or
pop
outsb
lret
dec
mov
mov
insb
mov
cmovg
jmp
inc
addb
xor
cmpsb
dec
xchg
stos
nop
cmp
xor
sbb
ret
inc
lret
stc
loopne
stos
xchg
or
jnp
inc
sbb
pop
jne
popf
inc
je
sarb
jecxz
push
je
mov
dec
inc
rcll
mov
loopne
push
adc
dec
xchg
js
pop
outsb
in
sahf
fisttpll
test
mov
dec
insl
aaa
lock
test
xor
dec
xchg
sarb
pop
xor
xchg
mov
push
cmp
ds
lock
arpl
mov
arpl
je
mov
sub
pusha
mov
xchg
pop
lods
xor
push
cwtl
shll
jae
inc
sbb
arpl
mov
pop
jl
lret
mov
sbb
punpcklbw
idiv
inc
out
dec
aaa
inc
dec
rolb
xchg
mov
jmp
sub
loope
outsb
test
xchg
mov
loope
push
and
rcl
dec
sahf
xlat
sub
std
ss
loop
xchg
push
and
sub
inc
or
push
mov
les
sub
sbb
out
dec
icebp
in
dec
xchg
shrb
arpl
dec
clc
and
mov
add
fwait
mov
adc
pushf
fs
push
inc
inc
dec
fists
xor
xor
test
pop
imul
xchg
lcall
mov
mov
orl
rorb
es
enter
inc
adc
pusha
xchg
sarl
sarb
fcoml
sbb
adc
fisubs
mov
fnclex
je
test
arpl
push
xchg
xor
shl
xor
adc
mov
pop
addr16
pop
lock
sbb
es
ficoml
push
popf
adc
pusha
int3
sub
addr16
jo
pop
andl
das
pop
and
jecxz
inc
stc
insl
popf
xchg
xlat
lret
jb
inc
push
lds
in
js
jbe
repnz
arpl
lret
bound
push
lahf
ss
in
pusha
out
loop
mov
pusha
sbb
ss
push
or
sub
mov
dec
insl
shrl
push
test
xchg
outsb
xchg
pushf
inc
mov
inc
fistpll
int3
xchg
ljmp
dec
lock
sub
jmp
shl
sub
sbb
push
jnp
arpl
mov
sub
jg
imul
push
gs
ds
into
outsb
xchg
jbe
scas
aaa
cmp
mov
push
pop
sub
fsubr
push
sub
mov
inc
push
aam
test
cmp
mov
sub
je
mov
daa
aaa
push
divb
jae
popf
cltd
outsb
adc
not
push
lret
mov
pop
pop
lea
fcmovnu
xchg
and
jnp
popl
inc
sub
mov
aaa
movsl
outsb
in
push
adcl
das
sub
mov
loopne
sub
je
jnp
and
scas
sbb
xorb
ljmp
imul
mov
bound
scas
into
and
icebp
pop
jno
cmc
mov
cli
xor
fiaddl
mov
jo
push
sbb
mov
and
inc
jae
fistps
out
jnp
cmc
rolb
mov
ret
mov
out
jle
cwtl
adc
inc
xchg
int
xrelease
mov
in
fdivs
dec
push
adc
addr16
fistps
mov
fidivl
bound
sbb
dec
xchg
in
jno
dec
repnz
hlt
mov
push
add
inc
divb
xchg
in
inc
addr16
pop
adc
aas
adc
sbb
jl
mov
lds
and
adc
xor
push
and
ljmp
pop
loope
mov
pop
cmc
jae
jno
ds
das
dec
pop
cwtl
int3
popa
mov
lret
shl
jbe
and
cmc
mov
je
in
mov
mov
add
nop
mov
push
das
inc
ja
imul
popf
imul
mov
sti
rorl
shl
in
pop
fisttpl
push
aam
outsl
or
and
mov
cmpsb
mulb
clc
dec
pushf
ljmp
test
insb
mov
xchg
xor
or
stos
inc
push
rol
aad
js
pop
push
addl
inc
fisubrl
pop
adc
push
xchg
cmc
outsb
jbe
add
pop
leave
sub
push
xorl
mov
sub
hlt
mov
cmpl
or
jmp
andl
cmc
and
inc
js
xor
pop
lret
jmp
orb
sti
jmp
repnz
rclb
xchg
fnstenv
pop
adc
ds
jge
or
ss
pop
shll
lcall
nop
nop
jecxz
shrl
xchg
data16
nop
mov
sub
nop
loopne
pushf
lds
xor
in
xchg
xchg
pop
out
jbe
data16
outsb
dec
jnp
pop
in
repnz
insl
pop
negl
pushf
dec
pop
ja
test
sbb
leave
cmp
xor
jmp
and
insb
outsb
jb
dec
and
out
movsl
out
fiadds
testb
ljmp
cli
sti
out
insb
imull
mov
popa
cmc
lcall
cld
inc
mov
mov
es
int
push
loopne
in
push
in
aas
inc
add
and
mov
dec
mov
test
mov
xchg
add
mov
dec
jmp
sub
mov
aam
dec
inc
outsb
mov
push
and
scas
in
testb
cmpsl
pusha
sahf
jnp
sub
sbb
outsb
cltd
test
sub
pmaxsw
mov
call
outsb
xor
add
subb
pop
aam
or
outsb
xchg
and
js
scas
inc
sub
in
xchg
test
dec
or
adc
sahf
aas
mov
aaa
push
pop
js
mov
mov
or
push
ljmp
push
imul
js
repnz
lcall
xchg
jbe
add
jns
mov
dec
or
lds
or
xlat
cmc
xor
jne
and
in
xchg
ja
popa
sarb
push
sbb
in
add
dec
popf
nop
out
or
cmpsl
mov
mov
repnz
mov
enter
mov
incl
inc
xor
push
mov
mov
xor
imul
pop
shll
and
repz
cmpb
pushf
push
adc
jae,pt
cmpsl
fldt
ret
dec
cmc
dec
pusha
mov
or
loope
pusha
imulb
inc
inc
mov
add
scas
fstl
sub
hlt
testb
out
jbe
int
out
add
movsb
jb
mov
je
push
stc
inc
cs
lahf
adc
pop
xchg
jbe
das
add
push
mov
push
pop
dec
addb
sub
jae
lds
sub
mov
iret
cmc
seto
jmp
adcb
and
movsl
xchg
adc
aaa
jbe
mov
stos
inc
fildll
out
dec
mov
call
pusha
rcrb
mov
iret
aaa
imul
xor
jbe
daa
movsb
loope
std
loop
mov
ds
lret
lret
in
xor
push
push
cmp
pop
fiaddl
sbb
mov
push
cld
fidivs
aad
jbe
rcrl
loope
push
sub
ror
imull
aas
pop
cmc
loope
ja
lahf
xchg
std
push
push
inc
movsb
jg
out
repz
les
rcrb
cwtl
je
and
sti
cmc
sub
movsb
addr16
std
lea
xchg
or
fs
shlb
push
out
cmp
or
dec
dec
cmp
rolb
test
jb
sbb
repnz
repnz
sbb
lahf
cmp
outsl
push
pusha
mov
insb
leave
xchg
fwait
push
jbe
xor
mov
cmc
cmpsl
fnstsw
mov
add
repz
idiv
outsb
rcrb
cmp
shlb
ljmp
dec
ret
popf
popa
push
inc
rclb
movsl
ficoml
shr
or
lcall
jge
push
dec
adcl
push
mov
insb
aad
imul
pop
sbb
inc
test
pop
pop
popa
push
dec
nop
mov
testb
addr16
xor
outsl
test
lock
sub
stos
aam
test
popf
inc
sbb
fistps
insl
int
mov
adc
scas
shrb
mov
inc
jnp
mov
sahf
adc
in
dec
outsb
bound
inc
and
aaa
dec
add
mov
aas
mov
sti
mov
repnz
xor
jbe
pop
sub
mov
push
pushf
xchg
pushf
es
fsubrp
jecxz
mov
inc
dec
mov
and
push
std
pop
push
add
pop
outsb
mul
xor
dec
outsb
cld
mov
ss
ljmp
inc
or
push
stos
testl
mov
fistpll
iret
sbb
or
aad
sbb
daa
scas
mov
outsb
jle
loop
cmp
dec
mov
fnstenv
movsb
xor
sti
mov
and
lods
out
das
or
ljmp
into
out
sbb
imul
cmp
mov
dec
movsb
aam
mov
dec
pop
sub
cmpsl
mov
mov
cmpsl
and
mov
dec
mov
popf
subb
xchg
outsb
jns
sub
xor
das
dec
jmp
popa
jne
in
lcall
stc
sub
fadd
sub
inc
mov
fbstp
cmp
decl
rcl
xorl
mov
loop
fmulp
jmp
xor
orps
xor
inc
lahf
dec
jg
dec
pop
dec
xorl
cmc
insl
insl
mov
adc
ja
enter
pushf
xor
inc
jbe
shll
fs
in
cmp
mov
mov
xchg
adc
testl
lock
in
aaa
mov
notl
jns
dec
orb
fistps
cmc
push
sub
outsb
stos
sahf
add
xchg
sub
ja
hlt
mov
fistl
dec
ss
into
loope
shl
pop
sbb
inc
sub
das
fidivl
and
lcall
xchg
je
xchg
imul
adc
notl
sbb
mov
push
xor
adc
adc
popl
imul
ljmp
pop
pop
ret
lss
rcr
xor
or
gs
sbb
pop
ljmp
in
cwtl
mov
in
and
scas
imul
shr
iret
push
inc
daa
cmp
mull
loop
outsb
sbb
dec
fisttps
movsb
mov
jmp
sub
ljmp
iret
push
shll
dec
movsb
xchg
jp
ja
outsl
mov
inc
xorb
adc
outsb
xchg
std
sub
lahf
pusha
cmp
out
jecxz
movsb
outsb
out
xorb
mov
cmpb
rcrb
cld
add
cld
push
mov
pop
and
fisttps
xor
xchg
inc
xchg
pop
nop
outsb
inc
sbb
jae
enter
bound
cmc
ja
fstpl
dec
inc
pop
cwtl
and
mov
adc
popa
inc
pop
fcomip
jno
inc
xchg
outsb
dec
les
xchg
insb
dec
dec
inc
int
cmp
cmp
xor
cmc
inc
addr16
fmull
leave
scas
and
out
fnsave
test
repnz
mov
int3
sub
shr
inc
inc
cmp
stos
hlt
scas
outsb
fwait
jmp
jno
pop
adc
sbb
test
sbb
or
aas
mov
shrb
mov
xchg
pop
ficoms
push
loope
fwait
jge
repnz
iret
in
or
rcll
mov
fwait
mov
mov
daa
push
das
cwtl
mov
subb
cmc
imul
imul
dec
pop
mov
mov
fadds
cmp
add
mov
je
sbb
lret
inc
pop
pop
adc
cmp
std
aam
out
cwtl
dec
shlb
iret
lods
dec
ret
lods
mov
add
jg
inc
testl
mov
push
nop
dec
inc
cmc
push
repnz
inc
pop
popa
inc
fldt
mov
mov
out
mull
dec
jbe
mov
push
stos
inc
or
decl
scas
cmc
insl
mov
rcrl
insl
cltd
cmpsb
add
mov
cmc
in
mov
push
sub
jns
xlat
insb
sub
hlt
stc
es
mov
mov
in
push
outsb
ss
cmc
xor
mov
jnp
in
outsb
pop
add
mov
push
ret
sbb
mov
notl
mov
dec
mov
mov
xor
mov
add
es
mov
and
fmul
cli
test
fistl
jecxz
fmuls
dec
push
or
cmpb
fwait
in
pop
xchg
inc
jg
and
sbb
fsubs
add
outsb
dec
push
sbb
xchg
out
push
pop
insb
bound
jecxz
or
test
loop
shlb
sti
les
lret
nop
dec
cwtl
movsb
addr16
loop
pop
int3
lahf
loopne
test
sub
frstor
mull
outsb
mov
bound
loope
rcrb
mov
pop
jae
sbb
enter
imul
sbb
add
sub
xchg
negl
pop
int3
es
je
ficomps
dec
out
push
add
negb
mov
xchg
js
dec
mov
test
bound
adc
mov
cwtl
shll
pop
add
popa
pop
sti
in
lcall
int3
sub
inc
push
and
inc
ds
mov
add
push
repnz
imul
jle
jae
aad
lods
outsl
imul
mov
mov
arpl
stos
cwtl
loop
popl
je
xchg
ret
jmp
outsb
push
les
icebp
mov
aaa
sub
jo
sbb
inc
jecxz
push
orb
push
mov
cmc
in
adc
aad
lcall
rcrb
frstor
sub
inc
jbe
test
jne
lock
push
jmp
mov
movsb
mov
add
xchg
test
std
test
and
push
cmp
pop
fcompl
iret
scas
mov
jp
jle
ljmp
test
xchg
in
push
mov
mov
push
sbb
inc
and
fcoml
mov
testl
and
dec
ljmp
negl
je
insb
out
scas
push
lret
sub
dec
cwtl
fbld
lcall
outsb
adc
or
fidivl
inc
mov
pop
ret
add
mov
xchg
inc
jge
mov
add
lods
lret
mov
jns
sbb
movsb
pusha
mov
sub
stc
test
push
loope
loope
cmp
aaa
aas
sbb
lret
jbe
add
aad
jecxz
movsl
outsb
in
leave
test
negb
in
sub
and
mov
add
call
mov
sbb
xor
lcall
lock
loope
rcr
or
arpl
fcmovbe
mov
xor
mov
add
ljmp
mov
aas
xor
xchg
outsb
ds
fdivl
inc
adcl
mov
ljmp
mov
lods
push
pop
ss
cs
mov
jl
fnstsw
sbb
dec
xchg
shr
insb
stos
test
add
mov
sbb
push
testb
stos
movsb
push
outsl
sub
xlat
cmc
mov
cmp
lahf
jecxz
add
xorb
push
mov
shl
sbb
icebp
in
mov
jnp
hlt
add
pop
jbe
and
or
cli
dec
dec
testb
lea
ds
dec
arpl
outsb
lcall
dec
arpl
mov
dec
cs
aas
lods
mov
stc
fcompp
or
fdivr
cld
inc
xchg
sarb
or
das
pop
loope
jae
out
outsl
mov
push
pop
mov
cmpb
aam
xor
mov
jbe
xlat
inc
aad
fistps
loop
add
pop
test
adc
jns
cwtl
subl
jge
ret
xchg
jl
sub
mov
loope
adc
cwtl
adc
ljmp
mov
push
add
cmpsl
mov
pop
adc
test
and
sbb
pop
out
insb
jns
leave
cld
sbbl
xchg
out
pop
pop
int3
jecxz
xor
pop
mov
push
movsl
pop
sub
aam
out
push
loop
xor
jae
jmp
repnz
mov
and
cmp
orb
jbe
loopne
cmpsb
sub
loop
lret
jmp
negb
dec
inc
push
icebp
fs
aaa
mov
aaa
hlt
xor
jne
mov
jecxz
jg
mov
loopne
enter
mov
test
dec
sub
dec
test
loope
jo
and
jge
xchg
jmp
cmpl
addr16
ret
mull
roll
outsb
or
mov
fcomps
imull
dec
and
pop
dec
xor
dec
stos
cmc
sar
lds
xchg
pusha
shll
imul
in
in
lods
sub
inc
push
adcl
les
adc
mov
jo
sbb
xor
je
imulb
neg
adc
loop
imul
push
mov
mov
mov
addl
pushf
pop
addr16
sbb
add
mov
pop
inc
mov
jne
dec
loopne
bound
xchg
mov
nop
test
jp
shlb
add
mov
fistps
mov
pop
imul
fisubl
sahf
lcall
inc
lret
rclb
cmc
and
bound
test
rclb
inc
add
cmc
dec
cmpsb
mov
cld
cltd
fists
and
pusha
sub
mov
mov
pop
stos
sub
sbb
popf
fs
cmp
jne
test
sti
cs
xorb
loop
scas
pushf
loope
out
jnp
sub
jle
dec
in
iret
dec
dec
mul
dec
test
mov
xor
sub
mov
inc
gs
push
pop
xchg
ljmp
loope
and
imul
stc
mov
repnz
mov
jmp
push
out
movsb
jae
dec
and
dec
mov
ds
call
and
xchg
stos
or
mov
in
or
stc
or
insb
jmp
shl
shlb
jne
pop
in
push
imull
xchg
add
push
in
mov
rorb
test
ss
mov
icebp
jbe
imul
fimuls
imul
nop
pusha
test
xchg
add
adc
jbe
xor
das
lret
push
je
iret
cld
or
mov
mov
fisubl
sbb
hlt
or
repz
mov
sbb
mov
push
lods
push
pop
cs
mov
rcr
hlt
adc
add
and
orl
and
gs
jecxz
rol
xor
xchg
shlb
ret
mov
lcall
sub
push
in
incl
pop
nop
dec
sub
aas
adc
sub
and
adc
push
out
pop
sub
enter
pop
mov
outsb
and
fldcw
and
fcoml
bound
notl
ljmp
jecxz
loop
packsswb
inc
aaa
ljmp
loope
jmp
jne
shr
jnp
popa
lret
lods
push
cmp
sub
mov
mov
loope
mov
in
leave
adc
push
pop
aaa
cld
xchg
and
js
repnz
sbb
out
out
jbe
fs
pop
repz
je
or
and
xor
mov
outsb
inc
rolb
mov
or
ja
xchg
jecxz
and
xor
ficompl
idivb
adc
sub
mov
xchg
rol
lea
pop
inc
addr16
add
clc
aaa
cmpsl
mov
pop
mov
cwtl
sub
daa
je
mull
in
cmp
fsubrs
shlb
lea
jns
cmp
cwtl
movsl
insl
lods
jne
in
js
dec
mov
insl
cli
pop
jmp
dec
loop
iret
adcb
mov
ljmp
ja
loopne
mov
fwait
outsb
pop
inc
mov
mov
test
test
mov
enter
popa
in
out
insl
jge
test
jbe,pt
mov
lds
cmp
dec
pop
mov
mov
dec
je
cmc
in
test
dec
mov
xchg
je
jl
push
jmp
loopne
push
cmp
je
mov
imul
je
and
dec
ret
movsb
dec
lret
arpl
xchg
pop
inc
popa
mov
xchg
outsb
xor
lret
xchg
hlt
mov
mov
pusha
inc
xor
mov
mov
stos
push
push
testb
sbb
cmp
inc
fs
push
pusha
testb
aam
pop
cld
repnz
jno
out
pop
insb
arpl
imul
mov
fstpl
pusha
xor
sub
loope
les
arpl
xor
divl
shrb
inc
test
push
pusha
jo
pop
divl
jno
pop
das
push
pop
rclb
popa
dec
add
movsl
jmp
cmp
push
outsb
jnp
adc
flds
lods
jae
leave
xchg
cmp
es
xorb
add
lds
mov
mov
add
cmc
mov
loopne
and
xchg
test
fucomip
test
dec
inc
and
or
push
lcall
adcl
cmpsb
sarb
neg
mul
in
add
jp
sbb
je
hlt
dec
mov
xchg
add
sub
roll
add
addl
jl
arpl
lods
mov
sbb
mov
pop
pushf
fstpl
rorl
les
cmp
stos
xor
in
cmp
and
shlb
mov
ja
cmp
jns
push
push
xchg
shll
in
add
in
mov
repnz
insl
fcoms
movsb
pusha
mov
inc
ja
jmp
ret
push
dec
sbb
adc
push
mov
xor
loop
test
cld
add
popa
movsl
loope
pushf
mov
imul
das
hlt
loop
dec
std
pop
lahf
or
mov
jecxz
addr16
jge
jb
inc
in
pop
cld
jmp
in
inc
sub
adc
cmp
push
sub
mov
cmp
jbe
insb
cld
jg
imul
jmp
pusha
mov
and
add
lcall
mov
xchg
jbe
clc
cmpsl
insb
out
push
mov
ret
popa
loop
mov
aad
adc
aad
jb
fimuls
jecxz
sahf
xor
div
outsb
out
sbb
outsl
sub
insl
daa
mov
out
js
push
mov
push
push
add
cwtl
shlb
lea
sub
loopne
jecxz
push
outsb
inc
out
pop
sbb
mov
mov
dec
lods
sbb
inc
test
and
insb
call
mov
xor
shlb
cmp
dec
mulb
test
sub
je
loope
or
shrl
push
cltd
cmp
ja
adc
mov
jo
mov
js
es
mov
xchg
hlt
nop
idiv
setae
pop
ret
js
testl
jmp
add
outsb
shrl
pop
outsl
lcall
aas
sub
dec
dec
mov
outsb
sbb
aam
notb
test
in
lcall
push
adc
fiaddl
adc
or
mov
pop
lcall
clc
xchg
pushf
scas
call
gs
test
lods
mov
subb
dec
stos
cld
add
outsb
pop
adcl
pop
lret
in
popf
enter
sarl
out
pusha
mov
outsb
push
in
aad
orl
loop
xchg
imulb
cwtl
push
les
push
pop
jg
je
mov
imulb
xchg
call
fadd
into
aad
lret
or
ret
and
push
fisubl
subl
in
adc
movsl
push
mov
cmc
mov
and
jb
enter
loopne
xorl
add
and
xor
push
dec
or
and
jecxz
and
ja
adcb
xor
mov
xor
pop
jb
dec
dec
mov
dec
adc
mov
outsb
testb
push
jo
inc
and
jno
mov
inc
adc
xchg
jb
mov
aad
loop
push
cwtl
nop
inc
push
repnz
out
xor
xchg
movsb
lahf
jo
ljmp
rcrl
sub
hlt
ja
je
sub
loope
mov
sub
jge
das
mov
cmc
bnd
in
and
or
leave
movsl
fsts
loop
arpl
in
loope
in
jecxz
xchg
jnp
push
js
sbb
add
cmp
and
push
pop
in
cltd
push
cmp
dec
inc
std
adc
xchg
push
mov
or
lods
outsb
aad
inc
or
push
ret
call
lret
xchg
xchg
dec
fnstenv
and
pop
xorl
sub
cmp
adc
scas
icebp
in
lds
lret
sbb
and
movsb
bound
add
pusha
inc
sub
cwtl
add
in
ficoms
and
and
mov
jge
fcmovnbe
pop
push
mov
dec
push
addl
push
mov
inc
fldenv
mov
pop
inc
cwtl
icebp
subb
cmc
lods
neg
pop
imul
int
pop
repnz
jb
imul
push
lock
pop
js
inc
jp
push
jb
dec
bound
stos
div
mov
mov
sub
mov
outsl
fists
dec
xlat
adc
fdivs
mov
add
jmp
fistps
loopne
or
xor
in
repnz
push
sarl
mov
lret
out
xchg
cmp
cmc
jmp
pop
out
cwtl
mov
or
pop
jnp
leave
jl
mov
rcl
dec
aaa
cwtl
testb
adc
aad
add
xchg
aaa
pusha
bnd
pop
mov
fcomp
jnp
outsb
outsl
push
pop
xor
push
sbb
pop
jg
iret
ljmp
outsb
out
xor
fstl
fwait
out
pop
outsb
mov
insl
stos
stc
data16
repnz
clc
fwait
xlat
mov
test
lret
push
stos
cmc
xchg
add
pop
mov
inc
fisubrl
rcl
hlt
into
lret
or
jmp
xchg
das
cld
mov
add
test
test
and
dec
sub
cmpsb
sbbb
dec
or
sub
xchg
je
movsb
cmp
xor
jb
outsb
and
cmc
shll
sbb
mov
shr
loopne
and
pop
push
imul
adc
aad
pop
aaa
testl
dec
push
iret
push
hlt
cmc
jbe
outsb
cmp
sbbl
data16
and
xchg
iret
insb
and
jmp
cs
inc
mov
fucomi
popf
sahf
ljmp
mov
loop
mov
loop
insl
lret
ret
loop
test
sub
mov
test
mov
sub
mov
pusha
shlb
add
fbld
sub
stos
jge
in
stc
aam
vmread
xchg
mov
ljmp
sarb
sbb
addr16
in
xchg
jbe
imul
es
mov
mov
enter
fscale
push
and
mov
xor
mov
std
sub
loop
mov
pop
test
dec
add
mov
outsb
pusha
test
inc
leave
ror
nop
sub
dec
jmp
or
mov
mov
outsb
stos
or
not
pop
stc
sub
dec
push
inc
pop
into
jb
test
jecxz
pop
xchg
mov
dec
sarl
insb
outsb
push
rcrb
cltd
sub
dec
push
xor
jge
jp
jne
outsl
jmp
mov
xor
or
fbstp
ss
xchg
pusha
mov
push
push
sub
loope
faddl
xchg
popf
cli
xchg
scas
rcl
dec
xor
orl
xchg
cwtl
xor
cwtl
push
fstpl
in
test
mov
or
push
stos
dec
sarl
loopne
int
xchg
pop
dec
xchg
xchg
nop
sub
testl
loop
adc
mov
out
mov
adc
out
mov
cltd
popf
push
ds
pop
jbe
shll
lock
cld
sti
pop
lret
dec
cmpsl
and
xor
mov
push
popa
int3
out
stos
pop
add
mov
out
push
cmp
push
addr16
or
inc
cs
es
in
add
mov
xchg
jmp
pop
dec
xor
or
aad
or
inc
addb
inc
pop
fcomps
repz
cmc
xorl
stc
pop
add
sti
movsl
out
sub
jecxz
loop
aas
adc
out
xchg
sahf
sbb
and
adc
push
mov
and
lods
cmpsl
mov
aaa
mov
sbb
pusha
sbb
scas
leave
cmc
xchg
push
loope,pt
jbe
sub
repnz
outsl
dec
add
jno
test
dec
xchg
mov
scas
mov
out
sbb
cmp
imul
and
mov
inc
icebp
lret
and
inc
xchg
loopne
shr
inc
xchg
movsb
decb
adc
sbb
mov
push
pop
or
cmp
push
sbb
xchg
push
dec
xor
movsb
jg
jne
dec
in
or
jmp
push
cmp
and
mov
addl
pop
in
adc
xorl
xor
call
jbe
lock
push
lahf
rclb
mov
out
xor
mov
loope
adcl
scas
adc
jmp
int3
imull
push
outsb
outsl
cmc
cmp
push
inc
cmc
sub
xlat
xchg
sub
outsl
ja
or
mov
jnp
nop
pop
filds
adc
outsb
insl
jb
inc
loopne
int3
test
sub
aas
and
xchg
fldt
or
sub
popf
pop
and
and
mov
xor
xlat
iret
push
or
jno
imul
pop
mov
bound
mov
enter
pop
stos
cmp
mul
jo
mov
arpl
stos
cmp
lret
ret
aas
rorl
outsl
shr
pushf
add
mov
push
sbb
xor
push
push
cmp
ss
pop
mov
cmc
aaa
sub
in
outsb
add
adc
sbb
inc
shrb
inc
sarl
xchg
hlt
repz
inc
pop
andb
aaa
jmp
ret
in
pusha
nop
ds
xchg
dec
inc
and
xor
pusha
sub
inc
or
mov
adc
in
lods
xlat
cmp
ret
lret
jmp
imul
pop
das
bound
fists
je
jge
in
inc
ret
push
xor
xchg
adc
mov
addr16
and
popf
lcall
rorb
mov
jne
dec
aas
out
push
inc
lods
test
inc
dec
sahf
lods
push
hlt
filds
ret
jbe
mov
in
sub
shll
lea
insl
and
les
xchg
call
test
aad
xor
push
divl
push
xchg
mov
loope
pusha
mov
ss
push
enter
out
and
and
ss
lcall
mov
je
xchg
jmp
lods
xor
push
push
jnp
pop
pusha
lods
aaa
stos
xchg
rol
or
dec
sahf
add
scas
arpl
pushl
push
loope
daa
and
mov
or
sub
mov
jmp
add
xlat
rorb
in
call
or
cmp
test
fneni(8087
movsl
loope
insb
pop
jmp
lods
jne
subl
inc
mov
std
push
pop
inc
jp
cmpsl
cmp
mov
mov
mov
cmp
or
test
inc
hlt
lods
test
ret
push
fistps
push
shrl
cwtl
test
pop
sub
push
ljmp
jp
loope
bnd
stos
sbb
add
int
jnp
loope
jge
inc
in
out
mov
std
push
cmp
jmp
movsb
imul
mov
cmp
lods
loopne
adc
in
pop
dec
push
lcall
outsb
loop
loopne
mov
ret
dec
jmp
mov
push
imul
movsl
shrl
mov
cmp
sarb
push
shll
mov
jecxz
pop
lods
leave
jb
cmp
arpl
fcmovu
jo
cmpsb
jecxz
sub
ffreep
xchg
mov
and
jae
ret
add
ret
sbb
js
cwtl
xor
adc
out
stos
dec
in
xchg
dec
lods
xor
jb
es
inc
sub
icebp
movsl
xchg
insb
jae
icebp
mov
jl
mov
pop
add
cmpsb
aas
sub
sub
ja
cmc
push
push
inc
mov
ss
imulb
ja
test
mov
rorb
fcomi
xor
ret
lret
and
out
mov
add
std
repnz
lcall
popf
movsl
xor
in
mov
inc
loope
and
ja
mov
es
hlt
sbb
xor
outsb
daa
jmp
pop
mov
ret
in
pop
movsb
jmp
cmp
sarb
mov
xor
ret
mov
pop
inc
in
cwtl
loop
incl
mov
xchg
lahf
or
ljmp
push
cmp
xchg
test
cmp
xor
cmp
xchg
push
pusha
je
add
hlt
and
ficomps
adc
aas
or
iret
jmp
out
repz
add
lret
dec
std
push
outsb
cmp
push
movsl
push
rcl
push
jecxz
shrb
cltd
jbe
aaa
adc
outsb
pushf
push
bound
jo
fucomi
fmull
in
pop
sti
fstps
adc
sub
adc
xchg
outsb
push
add
out
adc
cmc
sbb
test
or
adc
add
jbe
cmp
mov
mov
push
and
and
mov
popf
scas
fcompl
inc
stos
cwtl
test
add
inc
into
in
aaa
push
outsb
sub
jo
sub
pop
mov
scas
les
call
cmp
loopne
and
adc
pop
sbb
mov
test
loope
leave
xor
stos
fdivp
je
mov
call
or
imul
ljmp
icebp
pop
pop
adc
mov
xchg
outsb
ja
inc
xor
loop
mov
lock
mov
in
sti
lds
ss
mov
jno
sub
in
push
mov
pop
inc
stc
lds
aaa
add
cmp
clc
jbe
ss
push
jne
cmp
and
xorl
test
iret
xlat
pop
mov
stc
xchg
jo
adc
and
pop
cs
stos
enter
push
jnp
std
cmpsb
fisttps
sub
dec
jne
jl
in
bt
rcll
aad
mov
mov
xchg
fwait
cmovo
pop
repz
pusha
add
stos
testl
test
inc
sbb
cmp
push
out
mov
test
xor
divb
xchg
sti
rol
inc
push
cmp
inc
aaa
orb
pop
xchg
adc
push
inc
sti
mov
sub
xchg
jnp
shll
adc
push
addl
and
and
add
and
add
shl
xchg
imul
jb
aaa
jge
bound
mov
vshufpd
insb
xor
ficoml
stos
jmp
inc
adc
pusha
test
push
adc
push
jo
stos
mov
imul
arpl
push
jmp
sub
and
je
mov
jb
loop
fwait
in
mov
mov
xchg
adc
fstl
jb
inc
rolb
jmp
and
ficompl
aaa
mov
scas
ljmp
cmpsl
test
pushf
in
lds
jbe
push
xchg
xorb
call
pop
and
push
jne
loope
xor
lods
faddp
notl
and
sti
in
inc
pop
inc
mov
mov
jl
add
sbb
sub
jne
jmp
ret
outsb
mov
push
mov
test
dec
inc
aas
pop
int3
aam
sbb
aas
inc
loope
sbb
or
add
add
xor
adc
and
fsts
out
xchg
stos
testl
scas
pop
aam
mov
aam
xor
sbbl
sbb
xor
add
mov
inc
mulb
add
insl
outsl
mov
inc
cwtl
sbb
das
les
enter
sub
jbe
loop
dec
mov
or
dec
sbb
pop
roll
repz
cmpl
ja
and
gs
movsb
mov
test
test
inc
pop
xor
ret
sub
fiaddl
pop
adc
iret
bound
shlb
xchg
sub
add
mov
in
mov
cld
dec
push
mov
in
loopne
mov
jae
adc
imulb
popa
mov
xchg
and
pop
stos
shrl
push
mov
sub
or
movsb
scas
mov
cmp
inc
mov
stos
dec
mov
sub
xor
adc
addb
test
rcrb
loop
adcl
sub
shrl
dec
add
daa
movsb
pop
shrl
push
adc
in
mov
and
mov
ret
hlt
out
mov
mov
push
notl
mulb
sub
ljmp
shlb
mov
inc
jnp,pn
jnp
sub
cmc
andb
sbb
and
pop
stos
push
aaa
dec
inc
xor
push
loopne
add
bound
repnz
ds
sbb
xchg
mov
mov
mov
sub
and
xrelease
enter
cmpsl
push
movsb
scas
pusha
cwtl
xor
not
loope
out
sarl
mov
movsb
and
inc
mov
aaa
psrld
shll
in
rcrl
das
dec
cmp
lods
mov
jp
cmpsb
inc
dec
mov
xchg
inc
xchg
jbe
jnp
fcompl
xor
push
ljmp
movsl
cwtl
pop
test
sub
movsb
or
sub
popa
xchg
imul
mov
sub
sub
cmp
shll
cmpsb
ds
outsb
inc
xchg
in
out
std
cwtl
xor
xchg
mov
sbb
or
gs
pop
dec
pusha
xchg
in
add
ficoml
mov
fdivs
mov
inc
push
in
repnz
out
pop
aaa
loopne
mov
xchg
adc
adc
movsb
xor
jecxz
push
mov
xor
mov
lea
xchg
xchg
mov
shll
push
arpl
faddl
xchg
test
xlat
shlb
insl
in
dec
fistpll
andl
loopne
pusha
pusha
xor
ficompl
leave
jg
pop
outsl
inc
adc
test
inc
jbe
int
push
pop
pop
repnz
push
pop
xchg
es
decl
mov
shl
pusha
pop
repnz
cmp
add
pcmpeqb
mov
adc
test
out
xchg
inc
xchg
imul
lock
mov
loop
movswl
and
mov
movsl
insb
pop
adc
inc
je,pn
shl
push
cmpsl
nop
pushf
pusha
test
dec
movsl
jb
xchg
mov
mov
mov
pusha
and
add
aaa
jmp
cmp
fidivrs
pop
mov
sub
inc
clc
loopne
xor
xor
mov
mov
loope
jl
dec
mov
xchg
push
loop
cmp
push
hlt
jbe
inc
ficoms
pop
sbb
xchg
loop
dec
sub
and
loope
xchg
push
decl
test
mov
loop
sub
adc
inc
in
ficoms
mov
xchg
mov
mov
into
pop
xchg
jl
mov
lahf
mov
mov
cmp
inc
jmp
out
out
mov
fsubrs
das
sub
xor
aad
jecxz
pusha
add
jmp
cwtl
and
push
pop
je
dec
mov
ja
pop
sbb
mov
cmp
sbb
add
jnp
ror
fidivrl
iret
jns
hlt
sub
mov
cmp
incl
sub
loop
lock
loopne
not
and
outsb
xor
adc
mov
popa
pop
into
jmp
je
jae
mov
xor
jecxz
sub
lods
dec
sub
mov
insb
and
sub
pop
mov
xor
shrb
xor
out
cmp
jno
mov
inc
xor
mov
fisubrs
push
xchg
mov
xor
mov
jg
inc
sub
ljmp
mov
movsb
ret
test
cmp
icebp
xor
repnz
jle
xchg
xor
movsb
xlat
xor
cli
mov
and
and
mov
call
mov
cmp
das
fbstp
hlt
lret
pop
ljmp
pop
and
stos
add
mov
inc
fcmovbe
stc
and
sbb
inc
movsb
movsl
push
push
lods
add
loopne
jnp
jmp
out
sar
and
lret
hlt
mov
insb
in
and
add
xchg
stc
mull
cmp
movsb
jae
cwtl
addr16
xchg
jo
xor
cmc
jecxz
mov
xor
adc
sub
xor
push
out
adc
sub
rcrb
push
pop
aaa
jmp
in
sti
xor
push
push
aam
adc
mov
add
repnz
mov
pushf
mov
aaa
cmpsl
or
mov
int3
repnz
mov
popl
and
adc
cmpb
pop
fistl
add
fcoml
movsb
push
lds
rsqrtps
push
sub
mov
andl
dec
sbb
jmp
ret
mov
adc
mov
cmpsl
xor
sbb
jle
push
fxch
push
andl
inc
pop
mov
sti
sub
push
rcll
repnz
fwait
adc
mov
push
js
xchg
lahf
xor
arpl
cmpsl
mov
mov
lds
cmp
xor
jae
pop
loopne
pop
push
or
jbe
xchg
movsb
pop
mov
push
ds
or
jns
into
xor
cmpsl
lods
in
add
fucom
arpl
jmp
xor
int3
xchg
fdivrl
and
push
mov
jp
adc
daa
xor
mov
mov
loopne
inc
dec
rorb
mov
xchg
outsb
jmp
outsl
test
rclb
shrb
mov
adc
cmpsl
lock
shlb
jg
imul
popf
or
cmp
test
mov
lret
test
fs
cwtl
les
inc
je
add
jnp
xor
sub
in
mov
mov
fmull
jnp
leave
mov
jmp
and
enter
jne
fisubs
dec
fs
out
ret
popa
xchg
push
repnz
aam
xor
pop
mov
pop
mov
mov
or
xor
jne
sub
outsb
mov
aaa
in
rorb
repnz
and
hlt
jle
filds
mov
dec
add
les
ljmp
mov
adc
pop
xor
bound
xor
repnz
jne
xchg
insb
push
daa
inc
xor
adc
mov
cli
cmp
mov
shlb
inc
fdivl
pop
xor
loop
mov
or
es
jg
mov
ret
push
leave
add
loopne
pop
push
outsl
cltd
bound
jg
daa
add
push
das
shll
jno
loop
xchg
push
cmp
jo
sbb
xchg
mov
movsl
shll
cwtl
inc
sti
cmp
and
mov
push
cmp
je
sbb
mov
jb
mov
mov
sub
mov
mov
scas
loop
outsl
sub
cs
pushf
out
pusha
sbb
scas
mov
loop
mov
fwait
das
mov
sbb
and
jmp
xchg
lds
outsb
mov
cmp
xor
jae
add
sub
and
push
inc
sbb
aam
push
sbb
fcomi
movsl
xor
in
test
dec
test
enter
rcll
jae
pop
daa
mulb
push
cmpsb
in
lcall
aaa
test
outsb
sahf
inc
cmp
in
out
repnz
add
movsb
and
call
xor
add
push
pop
repz
loop
jns
enter
sub
pop
inc
xchg
aaa
negb
movsb
insb
mov
and
xchg
outsb
fimull
insl
outsl
outsb
add
les
popf
vmwrite
mov
clc
xorb
jnp
inc
pop
mov
lods
lret
cmp
inc
stos
outsb
ss
aas
add
out
inc
sbb
arpl
cmp
test
ss
orl
and
push
sbb
test
adc
mov
mov
jno
push
xchg
pusha
pop
loop
rclb
and
pop
lds
popf
xchg
xchg
xor
rcr
cmpsb
mov
mov
in
sub
mov
mov
aad
mov
push
shrb
mov
pop
fsub
out
jmp
adc
fisubrl
xor
ffreep
stos
daa
xchg
and
outsb
rol
push
and
aas
mov
jecxz
pop
shll
pop
dec
adc
add
loope
inc
pusha
outsb
xor
insb
sub
sbb
inc
cmpsl
xchg
arpl
outsb
and
sbb
loopne
mov
jbe
inc
ds
jl
jae
ljmp
mov
dec
roll
pusha
dec
or
push
mov
arpl
outsb
push
pop
shlb
test
push
nop
loop
loope
incl
inc
pop
add
add
movsl
and
adc
adc
jecxz
in
imull
pop
mov
or
and
mov
data16
outsb
inc
ret
and
and
mov
mov
test
test
mov
push
js
cmpb
pop
mov
hlt
add
hlt
outsb
and
xor
loopne
push
mov
loop
inc
outsb
cltd
lods
xchg
jns
mov
lds
movsb
xchg
or
adc
popa
pop
es
loope
xchg
xchg
idivl
mov
add
mov
add
insb
jo
insl
sarb
sbb
mov
cmpsb
xrelease
and
dec
xor
sub
fimull
xchg
mov
pop
xchg
call
sbb
add
push
dec
stos
jbe
cltd
mov
out
outsb
in
bound
mov
xchg
jb
movsb
push
inc
pushf
mov
xchg
test
sbb
sub
or
push
xchg
shlb
ja
sti
jp
mov
cmp
jae
dec
sbb
mov
xor
jp
push
adc
imul
pushf
xchg
fmul
dec
stc
arpl
repz
push
imul
and
lods
lcall
jbe
aaa
xlat
xchg
bound
jle
xchg
cmp
mov
roll
mov
inc
and
mov
scas
push
jecxz
push
arpl
stos
mov
je
xchg
dec
inc
mov
xor
in
push
cmp
pop
out
dec
sahf
rorl
inc
xor
getsec
dec
jl
outsb
je
sub
mov
roll
test
aaa
mov
jb
pusha
jne
and
insb
sub
cmp
sbbl
add
loope
mov
sub
inc
mov
loope
decb
inc
jge
cmp
cmpsl
aad
mov
bound
inc
xor
pushf
push
stc
cmp
enter
inc
adc
aaa
mov
icebp
push
shl
imulb
ds
push
faddl
mov
fldenv
addr16
ret
out
add
je
xchg
loop
jecxz
and
aas
inc
push
jmp
cld
cmp
insl
jb
rclb
scas
and
push
pop
mov
jb
xchg
shll
das
popa
mov
insb
shll
jnp
xchg
xlat
sub
mov
mov
and
sbbb
int3
ljmp
sub
fwait
inc
arpl
and
cld
imul
rorb
jecxz
sub
mov
inc
xchg
cmpsl
push
cmp
mov
dec
and
iret
and
mov
imul
pop
inc
andb
adc
pop
jno
aam
sub
jno
daa
pop
xchg
mov
movsl
pop
insl
jb
pop
hlt
or
sbb
cmpsb
pop
pop
cwtl
gs
cwtl
dec
rclb
xchg
sub
pop
mov
mov
ljmp
pop
aad
retw
fistpl
pop
call
inc
adc
idivl
add
push
add
cld
das
clc
daa
inc
dec
cmp
sub
loop
and
inc
ret
inc
jmp
popa
bound
jb
pop
xor
sub
arpl
cs
mov
js
xor
pop
je
cmpsb
and
cmp
dec
jl
push
pop
sti
pusha
and
daa
mov
xchg
imul
aam
out
inc
sbb
mov
mov
push
outsb
enter
sub
xor
add
inc
ret
xor
movsl
std
popa
sub
jae
inc
or
out
inc
and
lahf
dec
adc
std
sbb
dec
jns
or
sbb
jecxz
cmp
ja
xor
sarl
outsb
dec
mov
popf
and
sub
sub
insb
add
push
lock
push
cmp
mov
negb
xor
imul
fwait
mov
fisubrl
adc
cmp
pop
xchg
mov
test
test
gs
int3
out
aad
xchg
dec
xchg
or
ja
xchg
xchg
pop
sub
inc
lcall
push
inc
test
addr16
or
pop
es
dec
jne
sub
mov
jge
jno
inc
mov
pusha
lds
lahf
and
push
push
xchg
and
or
mov
fisubrl
js
cmp
rcr
addr16
xchg
leave
in
mov
bnd
or
jge
stos
or
push
jno
and
inc
sbbb
pop
addr16
jecxz
and
xor
jo
popa
fnop
fsubl
clc
push
sub
ljmp
shll
pop
mov
adc
leave
notl
mov
fs
mov
mov
negb
ljmp
mov
cmp
les
testl
repnz
pop
cmp
cmpsb
add
xchg
cmpsl
shl
inc
dec
enter
push
sub
xor
mov
adc
inc
mov
je
jecxz
push
pushf
inc
cmp
jg
cltd
in
dec
cs
adc
dec
iret
jge
popa
int
jmp
mov
push
xchg
pop
iret
sub
cmp
mov
outsb
inc
cwtl
into
mov
xchg
xor
int3
fisubl
sbbb
aaa
aas
pop
mov
lds
les
push
mov
pop
lahf
addr16
adc
cmp
orb
jns
test
es
add
add
inc
xor
or
inc
cmp
ljmp
push
and
sub
jge
je
out
sub
std
xchg
mov
orb
lds
sub
in
and
xor
xor
lgs
push
movsb
push
dec
loopne
mov
xor
ds
loop
add
inc
pop
sub
sbb
in
inc
outsl
shll
loop
loop
dec
xchg
ret
xor
fisubrl
and
cmp
mov
enter
pop
push
jbe
fucom
push
insl
imul
mov
and
ret
mov
shlb
push
bnd
mov
and
jbe
loope
sub
push
scas
inc
mov
pop
jecxz
mov
ss
mov
ror
mov
push
cmp
inc
jg
cmovbe
mov
mov
imulb
or
outsb
mov
cmp
and
mov
cmpsb
shll
hlt
roll
jp
xorb
fiaddl
xchg
lret
shrl
xchg
cwtl
xchg
cmpsb
xchg
in
sub
mov
or
or
ret
jbe
dec
inc
sub
outsb
adc
jmp
inc
lods
loop
mov
icebp
lret
enter
fidivl
aaa
popa
les
lock
push
and
and
and
rol
sahf
inc
jb
les
push
punpckldq
pushf
push
cmp
cmpsb
inc
jecxz
inc
shrb
insb
mov
mov
and
lret
push
jo
add
shll
pop
pop
pushf
push
inc
je
cmp
and
jbe
out
cmp
add
lahf
sti
dec
mov
rclb
js
jecxz
loope
add
test
cld
and
cmp
add
jmp
sbb
das
out
bound
add
loope
xor
push
xchg
icebp
jne
xor
in
cmp
mov
pop
cmp
ljmp
ret
xchg
mov
xchg
and
or
cmp
test
mov
out
out
cmpsb
ljmp
ja
and
in
sbb
cmp
ljmp
pop
idivl
stos
loope
les
jecxz
xor
dec
decl
adc
test
sbb
push
in
xchg
call
jns
pusha
mov
mov
inc
lret
pop
cmpsl
out
pusha
cwtl
push
mov
jo
cmp
xorb
popa
xchg
cmp
xor
cmp
mov
xchg
and
mov
pusha
ficomps
ficoms
xchg
pushl
sub
test
pop
adc
cld
inc
orb
adc
xorl
xchg
enter
dec
mov
je
aad
nop
test
mov
daa
dec
test
rep
cmc
xor
add
mov
cmpsl
rclb
stos
mov
gs
sub
and
sbb
out
mov
stos
xchg
fnsave
dec
sub
jecxz
rcr
pop
clc
adc
pop
adc
cld
push
repnz
sbb
cli
rol
out
aas
imul
inc
mov
jl
mov
dec
insb
lea
add
and
lods
dec
or
call
cmc
mov
outsb
xchg
sbb
into
dec
mov
icebp
movb
cmp
fisttps
mov
sub
fcoms
ljmp
rolb
dec
inc
sbb
lds
ficoml
xor
xchg
jmp
mov
adc
popf
pop
outsl
daa
testl
in
jbe
outsb
repz
cli
push
xchg
inc
and
xor
repnz
pop
push
cmc
rol
jecxz
and
xor
pop
mulb
cmp
and
ficoml
sbb
out
mov
mov
xchg
mov
mov
test
es
notb
xchg
dec
jl
inc
jne
push
subb
pushf
js
loop
xor
mov
loop
rcl
cmp
xchg
fwait
bound
iret
loop
loopne
push
loopne
stc
call
outsb
das
mov
xor
lret
cmpsl
cmp
jo
xchg
push
xchg
mov
xchg
xchg
push
adc
add
stc
dec
lcall
push
int
stc
xchg
mov
and
imul
push
enter
out
test
pop
and
push
jg
hlt
fidivs
xchg
mov
fbstp
lcall
sub
jnp
divl
and
pop
ja
xchg
mov
xchg
inc
movb
inc
mov
pop
sti
sub
movsb
sub
sub
cmpsl
fbld
in
adc
je
cmpsb
and
xchg
jbe
ss
cmp
ror
outsb
lods
and
gs
pop
rclb
add
xor
rolb
push
movsl
dec
imul
mov
and
shll
sub
and
or
das
jecxz
push
xor
pusha
inc
xor
pop
mov
movsb
jbe
das
scas
cmp
cwtl
xor
add
inc
pop
addr16
mov
and
inc
pop
adc
hlt
adc
repz
jge
mov
mov
push
fimull
popa
bnd
in
orb
fwait
and
hlt
repz
notb
push
pop
pop
je
jb
push
dec
mov
ss
sub
lret
fstps
xchg
and
aaa
inc
fs
cwtl
adc
mov
ss
je
push
cmc
imull
mov
push
mov
subb
enter
cmp
push
out
lret
jnp
adc
movsb
and
iret
jl
mov
icebp
sub
jecxz
add
fbstp
push
scas
sub
mov
pop
popa
jecxz
mulb
sbbl
ret
and
int
nop
push
fst
mov
push
jnp
mov
xchg
mov
push
push
xor
dec
jecxz
mov
aas
mov
push
sti
push
and
arpl
and
xor
rcrb
test
movsl
popl
nop
cmp
aaa
cld
mov
cltd
rolb
inc
dec
das
rorl
mov
mov
push
add
or
cmp
test
push
cmovns
notb
test
adc
mov
outsb
add
rcll
rcll
repz
pop
mov
xorl
dec
add
shrl
fadds
aam
lods
fcomi
pop
ja
dec
push
sbb
mov
out
inc
xchg
ffree
jg
loope
rol
es
push
jne
or
xchg
add
mov
je
cmpsl
jmp
adc
mov
sub
xor
movsb
jg
xor
inc
pop
adc
shr
pop
push
icebp
inc
adc
pop
movsb
ds
test
incb
or
or
jl
xchg
lcall
lods
loop
pop
pusha
push
adc
sub
inc
adc
aaa
fwait
loope
adc
fwait
loop
dec
add
cli
and
add
dec
aaa
jo
lret
mov
insl
xchg
and
mov
je
inc
dec
rol
loope
inc
jbe
cmpsb
in
adc
in
les
aad
push
arpl
loop
xchg
in
dec
mov
mov
es
push
xorl
push
mov
xor
out
cmp
mov
push
stos
xor
scas
arpl
les
push
add
pop
ror
movsb
jno
mov
shll
adc
loop
lods
lds
jl
lret
adc
test
adc
mull
cmp
add
cs
rcrl
ss
jo
in
mov
in
repnz
and
ficoms
testl
and
in
loop
mov
movsl
inc
cltd
popf
enter
movsb
subb
sbb
test
push
mov
mull
xchg
shll
cmp
jae
mov
movsb
sbb
inc
outsb
leave
cs
insb
mov
test
fldenv
cwtl
add
dec
not
shll
push
pop
mov
mov
arpl
inc
jbe
aam
hlt
mov
sti
fbstp
jg
mov
repnz
lahf
adc
xor
adc
push
pop
mull
inc
xchg
dec
in
xor
jbe
les
mov
inc
aaa
jge
add
dec
cmp
aaa
push
jne
sbb
pop
sub
shll
mov
pop
and
cmc
jb
mov
dec
iret
inc
js
shll
xorb
inc
fwait
jae
fs
popa
mov
and
mov
sub
test
mov
jg
and
loope
cwtl
test
daa
rcll
lea
cmpsl
insl
push
subb
icebp
or
push
adc
ret
and
notb
ret
or
es
ss
addb
test
sub
inc
cwtl
icebp
jns
dec
xorb
pop
xor
inc
dec
push
cmpb
xor
popf
or
fcomps
pusha
inc
rolb
sub
mov
mov
fistpll
iret
and
dec
inc
jno
in
pop
xor
mov
mov
rorb
pop
add
sub
loop
into
cmp
shl
in
jecxz
cltd
mov
shlb
aas
in
adc
in
test
psrad
out
pusha
arpl
lods
or
ficomps
sahf
test
push
dec
hlt
mov
repnz
call
sub
inc
and
adc
mov
and
cmp
push
fidivl
call
jbe
lcall
pusha
outsb
sysenter
pop
fucomi
arpl
sub
add
mov
sub
xchg
dec
addr16
arpl
cmpsl
aas
add
and
test
jb
and
cld
sbb
call
push
decl
bound
aad
and
add
aaa
jl
roll
xor
and
mov
outsb
xchg
push
les
add
dec
mov
sarb
pop
cmpsl
cmpsb
insb
jbe
and
sbb
cli
push
sahf
cmp
dec
fiaddl
jno
xchg
loopne
ljmp
fidivrl
test
pusha
xchg
lret
cmovl
fucomi
push
rolb
and
ljmp
arpl
xchg
dec
mov
mov
jbe
subb
insb
bnd
and
mov
lods
bound
arpl
lcall
rolb
mov
ret
mov
jb
mov
and
pmaddwd
out
xor
sub
in
into
jmp
aaa
aam
imul
and
sub
lret
jecxz
mov
outsl
icebp
jno
mov
rolb
xor
mov
or
ret
mov
mov
sub
clc
adc
inc
jo
pop
jb
sub
insb
mov
popa
dec
ror
cltd
mov
movsl
mov
dec
push
sub
daa
fsubrs
test
inc
arpl
xchg
jae
shr
inc
aaa
xor
push
mov
mov
xchg
sti
not
movsl
jl
inc
mov
and
jmp
add
jle
js
sbb
adc
enter
or
mov
jmp
dec
jle
sub
pop
imul
arpl
ret
out
jb
push
pop
push
mov
mov
shll
fs
in
sub
mov
mov
mov
icebp
daa
idiv
mov
inc
stos
xor
outsl
rcll
lock
jecxz
adc
dec
sub
push
add
sbb
jnp
mov
push
mov
insl
lret
loop
aas
xchg
push
cmp
ljmp
out
mov
pop
xor
cmp
gs
jmp
mov
fidivl
pop
popf
sbb
shr
mov
divb
add
cmova
pmuludq
xchg
jb
pop
int
imul
aam
inc
arpl
gs
pop
stos
jmp
sub
push
cmp
test
cld
icebp
jae
into
dec
repz
cmpsl
mov
lahf
pop
movsl
jge
out
or
test
jmp
xchg
test
daa
jp
mov
xchg
inc
mov
addr16
xchg
sti
inc
cmp
add
mov
je
test
adc
je
outsb
sbb
insl
popa
mov
popa
pusha
sub
jmp
dec
push
push
mov
filds
jmp
insb
mov
ljmp
loop
adc
aam
adc
push
sti
rcll
lret
push
jno
sbb
sub
bound
mov
es
iret
inc
mov
dec
repz
fidivl
xchg
xchg
xchg
pop
and
xlat
push
jecxz
lret
sbb
push
loope
addr16
sbb
and
xorl
jmp
jecxz
cmp
sub
loope
je
outsb
test
cmp
lahf
mov
outsl
cld
test
sbb
and
xor
mov
add
xchg
addr16
or
out
inc
out
inc
scas
cmp
test
push
xor
xchg
cs
add
mov
adc
and
stos
xchg
arpl
inc
sub
loope
cmp
fsubp
in
pusha
aam
sub
pop
je
or
xchg
cmp
pop
stc
les
and
sub
icebp
repnz
loope
loope
mov
and
mov
pop
sti
dec
mov
pop
rolb
rol
dec
mov
dec
ja
or
in
pop
nop
inc
in
and
jl
and
push
xor
mov
and
cmp
inc
jae
jns
gs
sub
loop
mov
push
mov
mov
test
xchg
aaa
add
or
mov
stos
imul
test
xchg
fs
adc
clc
xchg
lret
test
or
cmpsb
scas
mov
xchg
mov
outsb
out
in
data16
test
mov
movsb
adc
ja
imul
mov
and
movsb
xchg
sbb
loope
push
sub
inc
jecxz
inc
cwtl
and
add
mov
pusha
pushf
jecxz
and
in
pop
inc
xchg
sbb
loopne
ljmp
sub
jl
xchg
mov
sti
movsb
pusha
in
inc
push
jne
mov
push
cmp
mov
mov
xchg
fcompl
push
mov
adc
shrb
adc
jnp
mov
imul
loope
gs
loope
xor
sub
popa
in
jl
nop
movsb
aaa
push
hlt
mov
sbb
aam
je
imul
pop
adc
lods
cmp
jmp
adc
jae
jle
ljmp
dec
arpl
shrl
and
jl
push
push
push
sbb
stc
shll
and
stos
mov
mov
mov
and
push
lock
or
xchg
mov
jl
pop
add
xchg
sbb
sub
rorl
xchg
in
jp
ret
jo
mov
push
faddp
and
sbb
outsl
and
xchg
push
xchg
lock
clc
add
in
lret
ret
movsb
pusha
imul
test
jle
mov
subb
cmc
and
dec
sarb
daa
pusha
lea
jecxz
sbb
mov
cmc
mov
aad
mov
jle
jecxz
cwtl
xor
into
mov
sarb
lea
testl
pop
and
xor
pop
das
dec
add
and
jecxz
cwtl
filds
outsb
ds
xchg
sbb
mov
ret
jnp
inc
mov
roll
pop
popf
sahf
xor
adc
das
inc
and
pusha
loopne
jg
push
or
leave
scas
inc
int
outsl
bts
jbe
mov
adc
movsb
and
push
push
jbe
sub
outsb
adc
mov
out
mov
jns
mov
xor
frstor
cmp
call
push
pop
fldt
loope
cwtl
jmp
jbe
fmull
adc
dec
cmpsb
ficoml
push
sbb
inc
jg
inc
rcrl
rcl
xchg
repz
push
sbb
xorl
in
in
cmp
pusha
dec
sub
mov
fcmovbe
in
popa
xchg
xor
mov
ret
pop
sub
outsb
mov
ljmp
arpl
sub
shlb
cmpsl
fwait
shll
shrb
jecxz
push
cmp
jnp
xor
mov
int3
push
or
cmpb
sub
insb
adc
cld
test
loope
push
mov
adc
outsb
inc
movsb
adc
mov
mov
sbb
mov
outsb
push
cs
pop
outsb
xchg
dec
inc
adcb
push
scas
stc
loop
movsb
mov
mov
outsb
push
rol
enter
xchg
and
test
lret
xchg
sti
jmp
and
or
pop
pushf
loop
xchg
ret
sarb
sub
out
mov
outsb
mov
vrsqrtps
in
dec
in
pop
jae
cld
cmp
repnz
push
imul
adc
addr16
aam
ja
push
adc
decl
cmp
cmc
int3
dec
das
cmc
and
js
inc
pop
sub
pushf
inc
mov
and
lods
xor
clc
repnz
inc
mov
sbb
mov
pextrw
pop
mov
mov
not
sub
dec
jl
inc
cwtl
xlat
lcall
jmp
lock
lods
cmpsl
mov
pop
inc
push
shll
mov
dec
repz
insb
pop
push
fildll
jno
cmpsl
popf
mov
pushf
push
ret
cs
mov
sbb
movsl
jb
and
jno
dec
xor
mov
inc
ret
push
adc
insl
imul
int3
jl
aas
inc
inc
xor
loope
push
xor
andb
xchg
rorb
dec
inc
jge
mov
pop
pop
and
push
lret
mov
scas
mov
mov
mov
and
push
push
add
sub
lahf
push
sbb
pop
loope
mov
dec
mov
decb
ret
pushf
frstor
jecxz
icebp
outsb
rcl
jno,pn
jb
push
xor
ds
aas
cmp
cld
push
mov
pusha
mov
mov
and
jbe
xchg
mov
in
jns
sti
dec
mov
addr16
cmp
movsl
jns
outsb
ret
cwtl
push
xor
sub
lret
test
ljmp
hlt
pop
int3
push
lock
nop
xchg
mov
gs
movsl
mov
adc
jmp
mov
mov
movsb
push
mov
not
aas
filds
loope
sbb
push
dec
mov
xchg
aas
out
adc
push
xorl
and
add
sbb
cmp
add
or
scas
in
out
mov
ret
xor
fs
cltd
mov
std
mov
adc
sub
aam
sti
add
sbb
rcl
pop
mov
and
inc
cmpsb
scas
add
inc
cs
push
xchg
icebp
aaa
sub
mov
inc
adc
not
and
cmpsb
and
stc
adc
bound
aad
imulb
push
or
mov
imul
push
ficoml
push
loope
mov
ja
jecxz
int
test
imulb
ljmp
xchg
add
mov
test
pushf
aas
jae
xor
std
jae
sti
fwait
dec
lods
mov
or
shr
pop
ret
lods
cwtl
test
jmp
mov
mov
cmp
outsb
mov
hlt
lods
mov
lret
scas
push
cwtl
cmpsl
xchg
andl
and
icebp
je
mov
insb
loope
push
das
in
mov
push
fists
adc
test
xlat
loope
inc
or
iret
xor
or
cld
loopne
in
addr16
enter
lret
bound
int3
jge
jb
iret
in
ljmp
fsubrs
sahf
cli
jecxz
fdiv
or
addr16
loop
cvttps2pi
mov
jbe
loopne
fwait
hlt
jnp
lds
sub
push
xchg
push
cs
outsl
addr16
sub
push
inc
mulb
sub
cmc
cli
mov
jae
adc
sub
add
mov
icebp
inc
sbb
mov
outsb
mov
jbe
notl
pop
cmp
subl
dec
mov
out
pop
cmp
jecxz
lds
aaa
pusha
sub
cwtl
aaa
dec
outsb
push
cs
sbb
jbe
rolb
jb
cmp
mov
jns
bound
shl
xor
and
das
aad
sub
outsb
repnz
movsl
and
scas
xchg
or
xchg
xchg
icebp
andb
mov
push
outsl
inc
xchg
daa
ret
and
xchg
das
jbe
pop
scas
iret
lds
cmpsl
leave
push
orb
loope
cwtl
jo
mov
mov
aad
dec
and
mov
xchg
sbb
and
add
or
adc
mov
stos
or
jge
in
push
aam
inc
ss
xchg
repnz
rcll
pop
shll
addr16
push
call
mov
xorl
xlat
and
pop
inc
xchg
lea
aaa
gs
fcmovnbe
jnp
inc
cmp
fsts
inc
mov
mov
sub
sub
outsl
rcl
inc
xor
sbb
lcall
repnz
aaa
outsb
pop
xor
add
lret
sub
ss
adc
inc
shll
ljmp
xchg
lea
push
sub
mov
decl
cmp
faddl
leave
test
push
loop
sahf
fcomip
dec
addr16
das
push
in
loop
inc
pop
xlat
push
outsl
movsb
js
dec
adc
inc
iret
loop
cmp
jle
cmp
pop
pusha
add
push
jno
das
repnz
sub
push
dec
aam
inc
popf
pushl
xor
cmc
jns
jmp
dec
insl
push
mov
push
fwait
arpl
mov
loope
push
imul
mov
shlb
imul
mov
inc
mov
ss
scas
fwait
sbb
and
mov
xchg
sub
jmp
sub
xor
insb
jl
adc
aaa
pop
mov
shrb
in
inc
outsl
xor
jmp
insl
cmpb
cli
push
push
outsb
adc
push
mov
pop
push
and
inc
popa
adc
push
mov
sub
or
loopne
popa
sbb
cmp
shll
les
rorl
ret
dec
je
dec
push
xadd
sub
mov
sbb
inc
cld
out
outsl
orl
xor
and
inc
jno
out
imulb
loopne
sub
inc
movsl
pusha
sub
andb
outsl
call
xor
dec
in
sub
lock
sbb
xor
xchg
inc
ljmp
add
lods
lock
mov
shll
repnz
shrb
push
test
sub
aam
pop
mov
lret
aaa
and
aaa
mov
lret
aaa
and
xor
push
shrb
cmpsl
ljmp
xchg
loop
push
jg
ja,pt
dec
lods
addr16
mov
or
pusha
cmpsl
movsl
dec
shll
arpl
sub
aam
add
mov
and
call
push
mov
fs
pop
aam
push
rolb
mov
mov
test
inc
and
in
hlt
scas
scas
mov
pop
insb
xchg
out
adc
fistpl
mov
lds
push
faddl
and
or
push
pushf
popa
inc
enter
mov
inc
jl
adc
dec
cwtl
rcrb
add
mov
pop
pop
sub
sarb
inc
mov
popa
pop
adc
inc
push
ret
sbb
ret
jle
outsb
pushf
arpl
std
fnsave
and
shr
cmp
gs
popa
call
push
arpl
jne
shrl
push
out
xlat
or
push
mov
insb
js
pushf
mov
outsl
shlb
add
inc
mov
loope
fisubl
idivb
push
data16
push
sub
jmp
and
pushl
repnz
pusha
jecxz
fsubrl
add
mov
dec
adc
push
jp
sbb
add
cwtl
pop
ret
ja
imul
jl
lods
test
movsb
pushf
popa
shll
push
movl
cwtl
and
mov
jo
ficoml
adc
pushf
pop
jg
dec
in
cmpsl
inc
and
lds
sbb
mov
imul
jo
repnz
lock
push
cmpsb
mov
loop
xchg
loope
hlt
push
jecxz
imulb
push
cmc
sub
inc
dec
add
out
mov
inc
loop
push
fstps
movsl
into
ja
dec
jo
insl
cmpsl
mov
cld
add
out
out
aas
movsb
into
sub
rcl
dec
push
and
sbb
in
js
js
jmp
mov
sub
xor
shll
cmp
out
adc
or
mov
movsl
add
push
in
das
pop
je
mov
mov
imulb
sub
jb
outsl
fidivs
adc
ret
jo
xchg
and
movsl
aam
inc
loop
sub
es
std
insb
andl
popa
pop
stos
ja
insb
test
add
sbb
aad
pop
sub
inc
push
lret
dec
add
add
jbe
sti
xor
pop
bound
cmpsb
jno
shl
and
add
mov
movq
sarb
bound
scas
xor
mov
ljmp
cmpsb
or
cld
mov
aaa
mov
dec
mulb
push
pusha
xor
dec
enter
xchg
lahf
bound
xchg
negb
imul
inc
imul
cmp
shl
xchg
dec
add
ret
mov
andl
dec
xor
mov
jmp
aaa
pop
sub
dec
in
mov
jge
jae
xor
loop
pop
and
xchg
pop
push
or
pusha
enter
jp
jnp
negl
mov
mov
mov
inc
daa
xor
ja
dec
add
sub
incl
adc
out
les
sti
adc
jge
mov
loop
jp
and
lods
adc
jnp
repz
int3
ljmp
xor
jb
imul
pop
cmc
mov
imul
je
xchg
jecxz
xorb
test
pusha
je
add
mov
test
pusha
ss
mov
daa
adc
pusha
pop
mov
push
jbe
dec
bound
sub
shrl
pop
sahf
mov
imul
out
cmp
lods
push
push
sub
mov
loop
insb
sub
notl
push
cwtl
mov
inc
jmp
aaa
ss
push
push
test
dec
dec
sub
add
test
mov
mov
mov
inc
and
incb
dec
inc
xchg
xchg
pop
jbe
pusha
sub
into
sub
xchg
push
push
inc
and
test
inc
call
cmp
dec
imul
imul
inc
or
dec
or
aas
adc
outsb
das
pop
jne
mov
es
mov
sub
push
push
pop
pop
shrl
shlb
xor
loopne
ds
jmp
mov
pop
cmp
je
push
test
mov
stos
inc
sbb
sbb
sub
mov
push
ret
add
mov
jbe
xor
pop
push
imul
jmp
lock
pusha
sub
pop
pop
repnz
repnz
xchg
aas
loop
jl
push
das
ds
arpl
std
xchg
xchg
add
loop
cmp
mov
fiadds
cmp
stos
mov
dec
jmp
out
xor
xchg
mov
and
inc
das
sub
push
push
jo
movsl
imul
ret
cmp
aad
js
sbb
fcmovb
sbb
or
push
enter
inc
add
inc
and
xchg
pusha
lock
outsb
test
push
add
and
xchg
mov
or
xchg
jnp
sub
add
jb
add
inc
push
inc
sub
loopne
lea
rcrb
and
sub
push
xor
push
mov
pop
sarb
mov
in
data16
loopne
fdivrp
xor
xorb
dec
or
outsb
sbb
inc
mov
aam
je
cld
fsubs
and
xchg
aad
mov
xchg
push
rcll
push
mov
popa
std
loopne
fnstenv
sahf
in
and
xchg
testl
daa
xchg
lahf
jl
xor
xchg
pushl
and
push
pushf
cmpsl
loopne
loop
jne
aad
movsb
xor
loope
movsl
add
mov
negl
fldcw
push
lods
push
inc
sub
shl
inc
xorl
and
das
loope
cli
aaa
push
daa
xor
in
and
ja
or
gs
cmp
xchg
push
in
and
dec
adc
add
or
stc
cli
enter
push
xor
loop
inc
dec
xor
shrb
and
mulb
fwait
sub
inc
push
cli
jp
cmpb
shr
loope
mov
push
push
roll
jne
outsb
jns
fisubl
xor
enter
sti
test
xorl
in
xor
inc
pop
dec
andb
popf
das
and
mov
stos
and
mov
and
push
pop
je
xchg
sub
pop
xchg
sub
js
mov
xchg
mov
test
xchg
or
and
outsb
ljmp
push
ja
xor
inc
test
xchg
pusha
inc
mov
je
mov
outsb
or
leave
add
cs
test
les
mov
adc
pop
hlt
pop
adc
in
jns
dec
xchg
mov
mov
jo
xor
mov
fcos
es
adc
std
pop
enter
or
and
mov
movsl
adc
ss
mulb
int3
mov
repz
xor
mov
andb
mov
dec
pop
test
cmc
jb
lret
outsb
ret
das
mov
mov
in
fdivl
fwait
push
xor
adc
adc
loope
cld
dec
ljmp
outsl
adcb
test
inc
ret
sahf
adc
push
mov
cmp
push
cmpsb
shll
jae
and
and
push
mov
push
mov
lcall
xchg
and
mov
add
jmp
add
into
ret
jl
jp
and
mull
xchg
add
lock
test
repz
mov
ds
or
loop
add
mov
repnz
clc
ja
push
loop
mov
loope
adc
out
addr16
in
clc
outsl
lret
dec
or
mov
and
cld
insl
sbb
jmp
cmpsl
add
jne
mov
lods
inc
ljmp
shlb
inc
cmp
xchg
inc
std
push
pop
iret
mov
inc
push
mov
outsb
movsb
push
sub
xor
ss
cmpsb
adc
cmc
jmp
ds
pop
or
add
fldl
sub
xor
movsb
cwtl
test
cmp
pop
loop
mov
ret
rcrl
pop
xor
push
add
mov
notb
outsb
mov
push
inc
jno
gs
dec
ret
jo
xor
xchg
pop
xchg
mov
jb
mov
pusha
pushf
xor
call
iret
mov
iret
cmpsl
inc
pusha
movsl
insb
jecxz
xor
mov
pop
stos
movsb
inc
pusha
subb
and
xor
inc
adc
adc
mov
fsubrl
inc
repnz
aam
push
iret
add
xchg
clc
dec
sub
pop
or
stos
sub
jnp
test
inc
and
out
jno
xchg
xchg
scas
xchg
lcall
push
mov
inc
sahf
in
jnp
cs
or
pop
add
outsb
inc
aad
in
lods
inc
lods
notl
cwtl
cmpsl
ja
jne
fists
frstor
jns
jl
cmp
outsl
outsb
push
adc
xchg
out
lds
pop
aad
push
cmc
and
call
cmpsb
outsb
mov
addr16
sti
scas
jns
das
cmp
mov
pop
loope
and
dec
mov
and
pop
mov
sbb
xchg
dec
incl
inc
outsb
mov
and
xchg
daa
shl
pop
sbb
out
jae
loopne
adc
fsubs
xor
xchg
sub
xchg
cmc
call
sbb
cs
sub
inc
fstl
mov
rorb
outsb
mov
adc
movsl
fs
test
in
outsb
jno
int3
xchg
fwait
xor
out
sub
sub
and
and
sbb
testb
xchg
mov
add
and
outsl
xor
pusha
push
cmp
xor
mov
clc
jb
pusha
mov
shll
xor
mov
mov
cwtl
and
push
and
xchg
pop
inc
xorl
repnz
mov
and
movsl
and
aad
lods
xlat
sub
int
outsl
cmp
mov
fldl
lock
push
mov
fidivrl
mov
jno
jbe
mov
sub
ds
and
mov
out
and
daa
cmpsl
push
dec
ret
inc
push
outsb
push
mull
xorl
fidivl
pop
jp
fnstcw
xor
arpl
inc
hlt
inc
lret
inc
push
ja
mov
and
out
cmp
addl
call
int3
mov
mov
nop
test
shl
test
ljmp
add
das
jno
and
loopne
cmpsb
pop
out
das
and
xchg
adc
and
jno
lahf
movsb
xor
sbb
div
and
pop
fwait
hlt
mov
xchg
addr16
pusha
adc
outsb
mov
les
inc
leave
push
mov
adc
dec
push
sub
dec
cmpsb
sub
inc
mov
mov
dec
jae
mov
ficoms
xor
or
lret
loope
pop
push
cmp
or
pop
jae
imulb
adc
pusha
popf
scas
push
push
enter
mov
es
push
cmp
fsubl
fs
notl
cmp
rolb
xchg
adc
mov
xor
cmpsl
outsl
scas
sub
push
shlb
es
mov
hlt
mov
ret
mov
lret
imul
xor
inc
ljmp
cwtl
xor
in
and
fs
cmp
cli
insl
decl
xchg
cs
mov
mov
xor
and
pusha
cli
or
cmp
mov
js
sub
jno
jno
and
rcl
inc
jns
xor
scas
pop
ficoms
shll
mov
mov
mov
lahf
pushl
in
in
loopne
jmp
rclb
int
leave
insb
sbb
sub
imul
xchg
repz
mov
mov
sti
add
xchg
and
pop
pop
pop
adc
add
jns
adc
mov
sub
push
xor
test
repnz
test
jne
ja
dec
xor
xlat
inc
jne
leave
xorl
mov
hlt
bound
arpl
divb
shll
jo
push
loop
add
sub
pop
test
dec
ret
sub
sub
out
mov
inc
cmp
mov
loope
ja
ret
sub
push
adc
dec
sub
adc
aas
out
push
in
cwtl
mov
test
pop
mov
pop
mov
inc
jno
adc
in
add
mov
cmpsb
aas
test
and
subb
test
shrb
xchg
lret
sub
mov
and
mov
addr16
pop
pop
xor
xchg
inc
dec
ret
add
into
and
adc
cmp
jmp
cmp
mov
pop
pop
in
mov
sub
shlb
pop
pusha
xorl
push
mov
jnp
mov
aaa
ds
xchg
mov
ret
xchg
pop
scas
push
add
mov
mov
sub
mov
stos
push
mov
push
mov
mov
in
mov
xor
fnsave
mov
mov
fnsave
out
pusha
popa
inc
pop
inc
add
push
loopne
jmp
jecxz
arpl
sti
call
mov
pop
push
nop
add
add
cld
leave
sub
push
ficoms
ficomps
cmp
pop
sbb
and
dec
ret
add
aaa
outsl
push
int
sub
inc
aaa
push
sbbb
sar
in
repnz
loopne
pop
fildl
jmp
push
int3
lar
push
mov
dec
inc
lea
lds
rorb
push
jne
aam
fisubl
mov
loope
imul
ss
test
rorb
mov
scas
loop
rol
fisubl
loopne
inc
in
xor
notb
aaa
sub
fcmove
inc
mov
dec
push
inc
aaa
iret
loop
addr16
mov
push
xor
call
push
push
or
dec
xor
sub
sub
aaa
push
push
ficoml
je
pop
loop
popa
cmpsb
and
pop
in
push
push
insb
shrb
mov
aaa
add
sub
outsl
push
inc
adc
je
pop
mov
aaa
test
fcmove
inc
int3
xor
in
push
loopne
mov
aaa
dec
test
shrb
test
shrb
lret
aaa
push
fisubrl
test
mov
aam
rcll
and
adc
shlb
mov
call
je
pop
in
and
inc
insb
popf
loope
push
js
mov
xor
push
testl
aaa
shlb
cmp
xor
and
rclb
ficoml
ret
xor
push
scas
fcmovb
push
and
mov
inc
xchg
test
fldcw
in
adc
pusha
enter
shlb
in
arpl
shlb
jecxz
push
pop
insl
dec
jg
adc
les
mov
or
clc
sub
sub
inc
xchg
inc
and
push
stos
je
clc
xchg
lcall
xchg
test
outsb
pusha
jns
icebp
sub
inc
fs
incl
jne
outsl
movsl
dec
into
divl
or
loope
imul
fdivr
and
xor
aaa
xor
cmp
ja
daa
push
clc
dec
xchg
sub
mov
push
pop
sbb
jecxz
jmp
xchg
or
imul
and
mov
pop
adc
sbb
daa
cli
insb
ljmp
cmp
fcomps
cltd
in
mov
lea
mov
jnp
push
xor
mov
sbb
push
pop
mov
push
inc
pop
xchg
inc
scas
inc
push
mov
roll
inc
call
dec
bound
sbb
sub
sbb
mov
jbe
pop
daa
popf
mull
push
mov
fiadds
in
inc
sbb
test
divb
mov
xor
notb
cmp
dec
insl
sbb
negb
rorb
fimull
adc
stos
cmc
and
inc
js
cwtl
jb
push
sbb
sub
fcomps
lods
outsb
push
adc
pop
pop
sub
fisttps
mov
dec
rcll
sahf
xlat
in
ret
cltd
jb
and
mov
cwtl
inc
faddp
clc
cmp
mov
sub
inc
mov
jmp
xor
int3
xor
sub
insb
add
lea
divb
mov
stc
fs
fcmovb
shrl
push
lcall
pop
sub
and
push
inc
fsubs
bound
ret
jbe
xchg
call
in
push
add
pop
mov
xor
ss
pop
rcrl
scas
fwait
stos
rcll
jmp
mov
push
push
jne
mov
ljmp
sbb
ret
mov
and
jns
dec
insl
out
jne
jne
pop
addr16
jne
test
dec
js
aaa
jp
into
xor
push
jb
stc
cmc
mov
add
inc
dec
jo
sbb
inc
rcll
mull
js
outsb
popf
mov
jne
or
and
pusha
xor
jns
mov
mov
lret
inc
jge
inc
test
inc
insl
mov
xchg
nop
ss
pop
cwtl
add
dec
test
pop
xchg
repnz
int3
and
xor
lahf
fisubl
xor
jae
and
mov
xchg
mov
scas
aaa
mov
jne
clc
mov
cmp
push
jae
cmpsl
lahf
sub
call
out
daa
sub
push
lret
enter
mov
daa
movsl
xor
mov
jb
add
mov
mov
or
cwtl
lds
stos
add
and
xchg
inc
mov
mulb
ret
loope
insb
push
out
inc
xor
xchg
xorl
out
ret
adc
repnz
out
inc
xor
xchg
xorb
out
shll
inc
out
push
and
jb
inc
aam
mov
adc
jecxz
push
and
xor
xchg
gs
ret
movsb
out
mov
add
jecxz
push
daa
out
aaa
xchg
cmpsl
out
mov
push
out
inc
push
cmpsl
ss
mov
ja
aad
mov
adc
and
cs
enter
jecxz
call
out
cwtl
mov
xlat
mov
out
adc
inc
fs
scas
mov
insl
seta
arpl
out
enter
mov
add
pop
push
imulb
fs
loop
fs
aaa
popf
inc
pop
mov
imul
insl
pop
mov
lcall
jb
pop
ret
dec
loop
ljmp
inc
sub
out
jecxz
dec
mov
inc
pop
arpl
jbe
push
popf
inc
inc
push
test
inc
clc
and
inc
jae
mov
push
inc
ja
js
push
push
lock
lret
pop
sub
movl
pop
dec
cmp
fwait
out
mov
fcmove
mov
cli
ljmp
mov
fxch
mov
stc
jmp
popf
out
lea
fmul
mov
cld
in
pop
dec
cmp
pushf
out
mov
fcmovne
mov
sti
jmp
dec
aas
das
lahf
out
jl
fmulp
mov
out
pop
dec
ds
out
mov
mov
std
in
pop
dec
xor
xchg
in
jle
pop
out
mov
adc
lock
push
inc
xor
nop
xorb
mov
pop
ud0
inc
dec
mov
idivl
loope
aam
mov
sbb
lds
loope
mov
xor
loope
in
add
icebp
div
fadds
xor
icebp
in
push
movsl
clc
mov
inc
mov
mov
and
bound
mov
mov
cltd
testl
inc
loopne
aaa
jbe
mov
push
sbb
inc
cs
pop
or
pusha
ja
loope
dec
je
aaa
pop
dec
aaa
pusha
jecxz
loope
std
je
int
mov
cs
xchg
pop
or
shll
jbe
cmp
out
iret
adc
push
clc
or
es
lea
push
hlt
loop
xor
fisubs
ja
in
cltd
shrb
jnp
mov
fidivl
mov
lahf
je
loop
mov
ss
out
sub
icebp
fucom
push
imul
sbb
inc
in
mov
ss
xchg
cltd
xchg
cmc
lds
and
data16
push
mov
sbb
loopne
loope
dec
dec
outsl
cwtl
in
add
int
in
push
gs
aam
pop
push
sub
popa
sbb
int
xchg
inc
adc
pop
xor
cmp
cmc
mov
ljmp
or
movsl
jne
negb
cs
add
lcall
add
push
rclb
int
inc
movsb
push
test
imul
mov
js
sbb
lahf
movb
sbb
sub
xchg
jge
mov
cmc
pop
add
add
popf
call
div
adc
inc
gs
je
mov
sub
stc
cmp
push
jmp
insl
int3
xor
cmp
aam
fwait
sub
inc
movsb
and
movsl
pop
repnz
jecxz
sub
mov
cmc
rcrl
sbb
arpl
dec
in
clc
mov
jge
shll
and
mov
fidivl
pusha
test
sub
rolb
movsl
pop
aam
test
mov
mov
jb
pop
mov
push
pushaw
insb
push
mov
aaa
test
js
add
adc
push
mov
mov
mov
data16
sub
jle
rolb
jmp
fadd
scas
jo
in
out
fwait
imul
add
shll
stc
cmc
pop
arpl
sbb
xchg
xor
movsb
loop
xor
mov
outsb
jecxz
push
arpl
inc
cmpsl
mov
xor
mov
sub
and
shrb
pop
in
push
sub
sub
and
xor
jmp
pop
mulb
shll
shr
aam
sub
push
shlb
testb
jecxz
mov
jne
xor
inc
mov
jb
xor
aaa
arpl
inc
mov
insl
aaa
mov
and
xor
and
aaa
scas
outsl
fisubrl
inc
out
xor
lods
push
in
aaa
push
fisubrl
inc
imul
and
das
jmp
xor
mov
shr
inc
lods
xor
push
xor
cs
push
stos
je
pop
aaa
push
arpl
xor
push
ss
mov
ficoml
test
mov
test
mov
lea
sbb
mov
test
out
push
jg
or
push
ja
int3
ror
scas
add
push
inc
and
lcall
daa
testb
inc
push
sub
or
test
xchg
ss
add
js
stos
es
add
jbe
cltd
sub
ljmp
rcr
data16
inc
je
add
inc
sub
clc
push
pop
or
imul
lock
out
inc
dec
in
loope
sti
jo
jmp
xor
jl
add
inc
pop
out
add
push
pop
mov
arpl
adc
rol
gs
adc
shl
xchg
push
adcb
testb
inc
test
out
aaa
sbb
arpl
jbe
mov
cmp
loopnew
imul
cmp
arpl
or
add
mov
jne
and
push
inc
xchg
addl
mov
inc
add
and
adc
xor
push
push
roll
les
icebp
jb
test
xor
jae
bound
xchg
and
and
mov
push
out
test
push
jne
adc
ret
add
es
jecxz
cltd
shl
fs
inc
and
xchg
dec
cwtl
mov
pop
fs
mov
cmc
roll
mov
fidivl
jne
repnz
out
adc
lds
pop
cli
cltd
inc
loope
push
mov
mov
cmp
loope
ljmp
mov
adc
aam
jbe
push
data16
or
in
xlat
sub
pop
push
in
and
lahf
push
std
push
push
push
test
and
jmp
sub
dec
sub
clc
ficoms
das
inc
out
scas
pop
shr
mov
jae
lds
dec
test
into
inc
cltd
add
mov
push
out
arpl
xchg
mov
into
push
cmp
push
mov
dec
jge
jne
jbe
xchg
xchg
xchg
xor
xchg
fcoml
arpl
cmpsl
and
add
imul
adc
test
add
cltd
pop
mov
repz
add
sub
mov
bound
in
xchg
pop
inc
outsb
push
cld
add
lret
out
jo
and
xchg
lods
mov
cmpsb
jecxz
shlb
push
and
ret
sub
dec
push
sub
int
jbe
sub
push
sub
dec
daa
imul
mov
ret
xchg
mov
gs
aam
bound
mov
mov
out
out
xor
les
push
xchg
imulb
rorl
fistl
bound
out
hlt
dec
push
sub
fsub
fcoms
stos
inc
call
scas
push
sub
dec
xchg
out
test
mov
cmp
inc
and
push
push
pop
pop
es
outsb
dec
mov
idivb
call
outsb
data16
lcall
and
dec
mov
push
mov
sub
es
int
push
xchg
mov
dec
push
jecxz
sbb
aam
add
cmp
xchg
xor
jns
out
imul
in
je
xchg
adc
imul
push
inc
xor
jae
loope
cwtl
sbb
and
hlt
mov
mov
pusha
testl
inc
push
add
inc
mov
ss
into
xchg
cs
mov
mov
mov
xor
add
stos
pop
jbe
sub
test
push
popf
ds
in
inc
das
pop
ja
daa
cwtl
ss
rcll
jmp
jmp
inc
mov
aam
push
aam
mov
dec
loop
cltd
fcom
jmp
je
pop
lods
test
test
add
sub
movb
call
out
test
inc
sub
sub
cmp
mov
arpl
pop
xor
push
add
mov
cmpsb
jo
cmp
sub
add
call
mov
cmp
lret
jecxz
jnp
fnstenv
scas
mov
or
test
cltd
cmpb
jb
push
xor
push
addr16
xchg
inc
and
stos
ss
xchg
push
mov
fsubp
loop
jmp
mov
sub
movsl
mov
push
test
lahf
iret
xor
sub
fbstp
imul
push
imul
mov
xor
xchg
ret
insl
cmpsb
imul
les
add
fnstcw
enter
add
jp
cmp
mov
fnstcw
or
cmp
lahf
mov
push
inc
inc
and
and
shlb
mov
adc
add
xor
clc
icebp
mov
lods
push
out
pushf
push
out
pop
stc
int
call
pop
rorl
dec
ljmp
mov
push
add
mov
adc
mov
mov
ljmp
xlat
jmp
add
mov
push
out
and
xor
adc
xorl
jns
out
cld
scas
inc
pop
push
jl
mov
sarb
loope
iret
mov
xchg
out
pop
xchg
jnp
adc
lock
insl
mov
adc
xlat
jnp
lds
mov
mov
jo
mov
out
xor
inc
ja
ret
push
shrb
test
fists
rorl
add
adcb
push
lods
mov
sub
push
sub
ret
shl
jbe
sbb
cld
jb
addr16
ret
les
test
aas
push
push
mov
inc
jns
push
or
mov
int
xor
sub
push
ret
pop
sub
scas
out
cs
inc
mov
aaa
dec
insl
sbb
push
push
loopne
lret
jb
xor
icebp
loop
fucomi
push
push
ja
sub
jecxz
mov
clc
mov
sbb
insl
mov
cmp
lock
jb
inc
adc
mov
or
ret
and
ret
sub
xchg
jecxz
dec
mov
shrb
nop
adc
mov
adc
mov
mov
rolb
and
ss
jne
popf
les
jne
sub
and
into
mov
daa
mov
call
cmpsb
es
push
fmul
mov
popa
mov
inc
mov
lcall
cmpsb
cmp
clc
orl
xchg
ret
adc
jne
js
inc
repnz
outsl
jb
hlt
and
outsb
xlat
dec
and
fwait
inc
pop
push
jl
sbb
and
xchg
es
addr16
fldt
mov
cltd
popa
call
mov
dec
mov
cs
mov
lcall
pushf
shld
mov
inc
negb
and
call
roll
cmp
mov
jb
push
add
push
divl
pop
je
dec
mov
jne
jb
sub
testb
adc
es
push
cmp
jmp
mov
fldenv
push
cwtl
and
popf
xor
push
push
sub
pop
push
call
push
inc
adc
cmp
rcrb
ljmp
sub
imul
ret
int3
aad
shll
add
fimull
es
mov
and
push
arpl
add
shlb
adc
je
in
frstor
fsubrl
mov
push
loop
mov
mov
pusha
testb
hlt
and
daa
pop
aaa
mov
jne
push
xchg
push
mov
sub
outsl
shl
jo
jp
pop
outsl
testl
or
addl
xor
out
sub
mov
pushf
xchg
mov
mov
jecxz
jle
movsl
out
cmpb
fimuls
in
out
fiaddl
out
push
imul
shrl
dec
in
xchg
stos
xchg
shlb
sahf
and
in
jmp
popa
push
mov
mov
mov
and
daa
pusha
inc
out
pop
loope
inc
and
dec
lahf
dec
mov
hlt
lea
sub
mov
in
xchg
push
ficoms
mov
arpl
je
push
push
addr16
and
xchg
inc
loop
push
es
insb
add
and
cmp
or
push
xchg
inc
dec
scas
add
mov
clc
dec
popa
rcr
loope
jno
ficoml
pushl
imul
dec
js
daa
fs
push
cltd
in
pop
out
mov
jp
pop
pusha
inc
and
cld
subl
iret
push
ss
pop
dec
push
xchg
jne
xor
loope
arpl
jbe
testb
xchg
jecxz
test
loope
test
adc
sub
cmpsb
je
push
adc
and
ret
sub
fsubs
adc
in
les
xor
push
and
shll
shl
mov
push
mov
loope
into
stos
cmc
push
cs
jbe
shl
pop
cs
xchg
gs
outsb
dec
push
lahf
mov
pop
mov
loop
jl
mull
shl
pop
sbb
test
and
fs
push
push
jne
rcl
jmp
sub
sbb
and
ret
jne
addr16
loope
push
mov
xor
addr16
repz
or
fwait
sub
dec
loopne
fs
sbb
sahf
iret
ret
jne
xchg
cmc
pop
fwait
stos
xor
cli
test
loope
xchg
andl
mov
mov
arpl
loope
jbe
popf
and
loop
inc
inc
and
xchg
push
inc
loope
mov
les
imulb
outsl
addr16
sub
sub
lds
push
out
inc
mov
negb
xor
mov
push
jns
sbb
pop
scas
out
das
pop
lock
jmp
cwtl
xlat
fsubl
fdiv
and
adc
jmp
inc
cmp
popa
cmp
push
movsl
daa
subb
outsb
shll
jbe
test
decb
push
test
push
scas
stos
dec
jo
lods
loope
xchg
mov
inc
testb
jmp
or
clc
pop
xchg
daa
mov
sbbl
sub
arpl
push
in
insl
jne
adcb
sarb
xchg
inc
push
ficompl
clc
outsl
ljmp
cmp
xchg
pop
inc
loope
inc
pop
push
lock
xchg
aad
xor
insl
jmp
mov
inc
jns
call
sub
int3
arpl
sbb
ljmp
add
inc
xchg
cmpsb
test
dec
into
rol
cmp
pop
and
or
push
jne
test
pop
jmp
xchg
ret
in
add
mov
in
cltd
push
pop
leave
and
jns
shll
cmp
sub
sti
xor
mov
lahf
and
aaa
sub
test
cmp
aaa
dec
mov
and
stos
dec
or
imul
or
sub
push
mov
cmp
and
mov
and
add
xor
cmp
and
xlat
and
or
pop
xor
adc
scas
ret
repnz
push
xchg
inc
aam
mov
push
lods
ja
fcomps
xor
inc
dec
testl
lods
roll
mov
xor
mov
xchg
sub
dec
jecxz
push
je,pt
jae
mov
aas
shll
or
cmp
je
jns
xor
push
stc
mov
loope
loope
test
push
ret
popf
push
loopne
fistpll
inc
adc
lahf
mov
sbb
lods
pop
cli
fdivl
adc
mov
aaa
xchg
outsb
dec
movl
sub
mov
out
sar
push
pop
cmpsb
call
fmul
push
cmp
jbe
leave
mov
cmp
hlt
test
inc
xchg
call
add
jbe
hlt
push
loop
cwtl
inc
pop
push
push
mov
hlt
shr
insl
inc
es
hlt
adc
mov
cmp
jae
inc
imul
shll
fadds
in
scas
mov
sahf
repz
ss
or
add
lods
je
loope
inc
idiv
mov
imul
fwait
pop
sub
push
fadds
in
xlat
in
jmp
into
movl
push
jg
pop
movsl
xchg
dec
insb
imull
cli
aaa
cmp
and
out
icebp
push
add
test
lea
push
sbb
cmc
fmull
fiaddl
cmp
push
pushf
in
sub
lahf
imul
dec
leave
and
dec
jecxz
and
dec
push
data16
pop
xor
adc
addr16
es
jb
ret
jnp
cmp
stos
adc
jne
sbb
push
test
adc
fucom
out
pop
aaa
xorb
scas
subl
inc
pop
add
repz
sub
mov
ja
add
sbb
test
popa
nop
sub
push
aad
pop
push
inc
movsl
sahf
xor
das
pop
lret
testl
sbb
mov
inc
in
hlt
lea
sub
cltd
ss
stos
pop
daa
fnsave
and
jb
add
cmp
push
inc
test
inc
imul
mov
sub
jns
jnp
out
mov
test
fbstp
out
hlt
push
lock
shlb
nop
shlb
js
xor
hlt
pop
jns
js
lea
es
lret
jmp
push
lods
popa
pushf
pop
jl
or
orl
and
inc
push
sar
xchg
pop
addr16
cvtps2pd
popa
pop
inc
jb
cmp
jge
inc
or
mov
or
or
notb
jmp
mov
fisttpll
inc
stc
leave
or
jmp
and
mov
mov
xchg
ss
xchg
xor
dec
sub
repnz
mov
sahf
cwtl
dec
test
inc
pop
sub
and
in
aaa
push
mov
test
stos
enter
or
and
cmpb
xchg
es
lods
jb
frstor
aad
addb
sub
ret
stos
sub
shlb
jge
and
dec
sub
add
lret
sti
lds
lret
dec
xor
and
push
pop
mov
pop
rorl
push
sarl
cmpsl
movsb
push
mulb
fidivl
xor
das
fdiv
pusha
aaa
xchg
dec
push
push
lahf
movb
je
ss
lcall
mov
outsb
sub
dec
sub
stos
aad
repz
inc
add
pusha
je
push
sbb
pop
mov
cmpsb
sub
inc
jae
mov
mov
xor
xchg
out
push
shlb
fdivrl
adc
mov
sub
ret
sbb
in
adc
pop
adc
dec
pop
test
dec
sbbl
daa
fs
and
testl
out
outsl
adc
sub
loop
inc
xchg
push
jecxz
or
cwtl
negl
out
lret
bound
mov
jecxz
pushf
push
pop
add
and
das
jle
sbb
dec
mov
repz
popa
push
movsb
hlt
out
and
push
and
repz
xchg
mov
jecxz
cmc
sub
lahf
in
inc
mov
pop
sar
aaa
sbb
and
arpl
js
inc
icebp
loope
push
jno
loop
inc
adcb
insb
and
xor
and
push
xchg
aaa
adc
test
lahf
pusha
push
pusha
rcl
ret
mov
sub
bnd
loop
insb
push
sub
out
arpl
insb
inc
and
dec
neg
xor
mov
lea
addr16
lds
sbb
push
call
lods
es
imull
pop
pusha
into
dec
loope
cmp
fnstenv
les
fucomi
sub
addr16
les
loope
jg
arpl
call
outsb
sub
in
pop
sub
insb
adc
loopne
test
dec
imul
inc
push
push
push
mov
shl
pop
jecxz
imul
jge
mov
push
mov
inc
arpl
xor
bound
pop
sub
shll
stos
rcr
inc
mov
mov
xchg
aaa
add
inc
call
pop
inc
loop
test
loope
xor
movl
pop
mov
ja
and
xor
adc
sbb
ss
cld
loop
loop
lret
adc
daa
arpl
mov
cltd
enter
loope
pusha
in
adc
out
push
pop
dec
shl
shrl
mov
loope
push
xchg
or
and
dec
enter
mov
loopne
pusha
pushf
xlat
jmp
sub
lahf
std
inc
pusha
pop
popf
arpl
stc
in
mov
shrl
inc
pop
cmp
pusha
pop
setg
push
pusha
pushf
jnp
sub
inc
decb
faddp
pop
xchg
cmpsb
shr
aam
ret
xchg
ror
adc
mov
inc
push
call
in
ffreep
inc
pop
sub
jecxz
loop
lret
xchg
dec
xchg
and
cwtl
add
imul
pusha
je
shll
shl
inc
mov
jne
dec
pop
inc
jb
loope
arpl
call
mov
je
pop
scas
push
outsl
aaa
cs
fisubrl
je
pop
lods
push
sub
push
fisubrl
hlt
ljmp
je
pop
cmc
push
ss
divb
xor
dec
test
loop
ss
int3
out
popf
movsl
stos
dec
test
je
mov
dec
xor
call
push
mov
testb
aaa
jecxz
aam
in
jbe
rorb
bound
mov
add
arpl
jnp
fisubrl
pop
shlb
aam
fisttpll
sbb
push
xor
mov
mov
sub
fiaddl
loop
inc
in
push
xor
stos
jnp
je
rcl
fwait
cmp
mov
rcrb
mov
sub
dec
shl
or
push
insl
daa
jnp
mov
xchg
push
js
or
mov
jp
or
pop
les
inc
inc
inc
inc
out
xorl
inc
jo
pop
and
push
pop
pop
pop
pusha
and
xchg
push
pop
loopne
and
test
divl
addr16
push
sbb
cwtl
xchg
sbb
pop
into
icebp
in
arpl
push
popf
mov
ret
xor
dec
pop
jg
jno
push
lea
add
jns
fildl
sbb
inc
inc
inc
jo
pop
xor
pusha
and
out
jge
and
xchg
pop
jmp
pop
test
ljmp
lret
mov
inc
mov
mov
cmp
hlt
sbb
out
push
xchg
insl
add
arpl
xchg
icebp
adc
mov
mov
pusha
test
cmpsw
insb
ds
sbb
mov
iret
xchg
ss
out
inc
test
xor
test
fcomip
push
and
jmp
cmp
jmp
add
daa
cmc
dec
negl
idiv
jl
pusha
jmp
mul
sbb
jb
repnz
cmp
loope
addr16
insl
les
and
inc
push
icebp
out
jb
inc
cmc
fs
movsl
jecxz
int
loopne
scas
dec
mov
pop
push
dec
push
xor
fnsave
loope
aaa
or
and
pop
dec
loope
xchg
jmp
sub
dec
sub
enter
pop
testl
loop
jnp
lret
xchg
and
hlt
in
jbe
and
loope
fiaddl
push
dec
pusha
leave
pusha
push
out
imul
cmc
cmp
xlat
test
sub
cli
and
out
xchg
dec
cmc
cli
and
sti
jecxz
inc
bound
fiadds
inc
loope
stc
jmp
and
int
cmp
loop
movsl
mov
dec
shlb
adc
incl
add
xorl
stos
xor
push
jne
xor
jge
and
adc
arpl
arpl
sti
mulb
ljmp
mov
and
shr
xor
call
inc
loop
dec
inc
int3
push
xchg
loop
and
inc
loope
repnz
pusha
ja
adc
push
xchg
add
jns
clc
ret
mov
pop
cmc
lret
xchg
xchg
ret
pop
push
add
std
lret
push
out
mov
ret
push
pop
add
xor
data16
out
add
xor
stc
mov
mov
mov
mov
add
mov
jnp
outsl
adc
cmpsb
xchg
ja
loopne
jns
shll
int
fs
inc
in
and
sti
clc
ret
mov
add
sbb
xchg
mov
addr16
lock
inc
sub
imul
cmp
hlt
adc
and
mov
rcrb
push
mov
mov
hlt
roll
mov
sbb
xchg
std
mov
push
dec
int3
insl
imul
inc
fldt
inc
mov
fistl
and
clc
and
sub
xchg
add
cmp
jmp
fildll
imull
mov
inc
hlt
test
mov
cmpl
int3
mov
push
push
adc
sbb
fwait
jecxz
add
jo
xchg
fistpll
push
test
sub
nop
inc
out
pop
cmpsb
and
xor
cmp
inc
sub
inc
loop
jecxz
mov
mov
lods
push
pop
and
mov
dec
les
es
and
les
insb
mov
xor
sub
clc
sub
test
mov
mov
or
test
movsb
jbe
adc
js
xchg
mov
fsubl
cmp
and
movsl
xchg
lock
shrl
mov
or
jbe
pusha
ret
data16
inc
inc
mov
mov
pusha
xor
pop
or
xchg
add
lea
mov
fwait
inc
call
les
popa
xchg
hlt
test
pop
fidivrl
pop
dec
cmpsb
jp
bound
fs
lock
imul
shl
les
cmp
scas
aaa
mov
ret
sub
push
js
fisttpl
or
xchg
lods
dec
lret
mov
mov
mov
in
mov
rol
sarl
mov
jge
xchg
sub
lea
pusha
mov
pop
pusha
xor
je
and
hlt
sub
fcoms
push
cmp
enter
leave
scas
inc
cmc
push
hlt
xor
xchg
or
in
xor
xchg
push
sub
inc
sub
fldenv
cwtl
outsb
and
xor
hlt
and
cmp
sub
jmp
jns
xchg
push
xorb
mov
adc
in
push
and
in
and
jns
in
cmp
cmc
sub
adc
loopne,pn
clc
cmp
inc
and
insl
les
out
mov
mov
fcmovnb
push
ljmp
sub
push
out
inc
lret
mov
fbld
add
and
ds
push
pusha
dec
in
daa
hlt
je
fdivrl
dec
addl
fxch
add
and
and
je
into
clc
mov
lcallw
sub
scas
test
addl
ret
sub
and
dec
jne
adc
mov
mov
aaa
fldcw
inc
shrl
outsb
mov
xchg
clc
scas
inc
loop
mov
mov
clc
ret
shr
and
dec
and
arpl
aas
and
lods
andb
mov
inc
xchg
mov
aad
sub
adc
iret
int
pop
mov
dec
mov
int3
out
sub
add
jb
add
mov
dec
fcmove
mov
stc
ret
xor
inc
inc
add
sbb
adc
hlt
adc
testb
adc
or
loope
cmp
xor
mov
loop
sub
fldcw
push
call
test
mov
sti
push
mov
and
xchg
add
and
es
sahf
orl
cmp
cmp
inc
inc
inc
sub
inc
mov
cltd
cmp
test
adc
jnp
test
or
mov
mov
les
test
je
mov
cmp
sub
dec
loop
and
add
sub
and
dec
shr
jns
aaa
ret
loopne
mov
mov
lcall
out
push
les
test
jb
dec
inc
loopne
inc
adc
lea
pusha
addr16
pop
roll
call
loop
xor
aad
xchg
jne
movsb
xchg
loope
ljmp
xchg
lods
test
test
push
inc
jae
pop
adc
pop
mov
sub
and
cmp
or
xchg
sub
ds
mov
aam
dec
inc
mov
int
std
xchg
dec
and
jne
mov
xchg
cs
push
loopne
add
xchg
repnz
jns
sub
in
sbb
ja
xor
repnz
push
inc
hlt
jmp
dec
and
out
arpl
jns
xor
inc
adc
fistl
add
es
mov
out
and
cmp
push
inc
nop
cs
push
cmp
fadds
scas
fcmove
and
testb
add
jmp
cmp
mov
scas
movl
xchg
shlb
cmp
push
pop
mov
xchg
sbb
add
sbb
arpl
mov
mov
out
testb
or
dec
push
enter
int
inc
arpl
xchg
inc
test
sub
inc
int3
push
inc
mov
cwtl
pop
mov
ss
xchg
mov
test
xchg
xchg
pop
sub
inc
or
xchg
pusha
sahf
inc
sub
and
roll
ss
aad
add
push
clc
repnz
add
jmp
cmp
cmc
rclb
dec
or
mov
lea
out
andl
test
imul
imul
push
call
ja
es
sarb
dec
push
inc
scas
mov
adc
test
mov
test
shrl
mov
xor
lret
mov
jnp
mov
mov
test
scas
fsubr
sub
rclb
test
or
int
and
push
scas
sub
inc
jo
test
lcall
sbb
mov
inc
lret
int3
out
mov
sahf
add
push
add
and
cmp
repz
test
xchg
inc
adc
loope
lock
and
xchg
pop
add
insb
insl
inc
test
aas
mov
shrl
jmp
stos
loop
and
adc
dec
pop
dec
sub
xor
dec
fdivs
mov
cmp
lret
inc
loopne
jge
push
adc
cmp
lods
popf
into
mov
ret
mov
cmp
lds
in
cmpsb
adcl
aas
cs
mov
gs
dec
les
rcll
jge
lret
repz
inc
notl
test
imul
test
cmp
push
or
mov
loopne
and
nop
test
xor
dec
jo
mov
fiaddl
pop
or
xchg
add
and
outsl
rcr
es
and
loope
add
push
jnp
jb
loopne
and
xchg
add
push
mov
adcb
dec
mov
push
aad
dec
xor
insl
test
add
jae
dec
scas
jge
and
pop
mov
and
lock
in
jl
inc
inc
ja
loopne
mov
mov
lods
loop
lret
and
add
mov
mov
in
mov
jmp
pop
mov
push
cli
arpl
dec
enter
rcr
in
test
test
pop
outsl
jbe
insb
mov
mov
aad
mov
nop
inc
leave
xchg
xchg
xchg
ret
push
scas
xor
push
out
dec
cmpsb
push
dec
roll
movsl
push
enter
inc
pop
outsl
mov
les
dec
cmp
inc
push
les
cmp
inc
mov
js
dec
xor
mov
subb
cmpsb
xchg
pop
data16
cmpsl
pusha
inc
test
xchg
xor
or
es
pushf
and
hlt
xchg
cli
adc
add
addl
adc
xor
rolb
sbb
shll
push
adc
add
push
jmp
ret
fsubrl
bound
push
jmp
sub
mov
push
push
nop
sbb
popl
mov
xchg
mov
pop
hlt
ss
mov
and
add
jg
dec
fdivp
pop
sub
add
scas
addb
loope
loop
adc
imul
pusha
nop
test
in
roll
mov
inc
hlt
and
mov
pop
enter
clc
test
pshufw
mov
dec
mov
fsubrp
and
push
mov
arpl
adc
inc
inc
popa
fmul
push
fsts
imul
xchg
dec
sahf
add
push
push
imul
rcrb
sub
mov
inc
mov
stc
cmp
stc
aad
enter
je
push
je
je
adc
inc
lcall
jb
cmc
lods
xlat
xchg
inc
add
hlt
inc
mov
aas
roll
pushf
inc
nop
xor
push
pop
arpl
add
movsl
push
loop
hlt
test
mov
and
or
rol
aad
and
hlt
inc
movntq
sarl
rclb
lret
jge
mov
cmp
aam
cmp
scas
daa
int
inc
jb
out
pop
cmp
call
iret
lods
pop
js
sub
andb
fstl
mov
xor
cmpsb
mov
dec
or
push
and
xchg
jno
adc
inc
testb
repz
mov
push
hlt
lea
les
dec
shrb
ljmp
inc
repnz
xchg
or
lods
xchg
ss
dec
int
pop
notb
ds
faddp
call
mov
stos
sub
mov
repnz
xchg
pushf
mov
inc
pop
pushf
hlt
mov
psrld
gs
es
push
mov
stos
and
push
xchg
add
stc
jb
ret
out
mov
roll
insb
stos
mov
imul
cmp
jecxz
xchg
mov
cmp
cmp
das
fimuls
xor
push
inc
insb
imul
jmp
mov
scas
inc
xor
lods
jb
inc
push
xor
and
enter
in
mov
imul
popa
xchg
imull
orb
push
add
xor
sub
pop
test
call
xor
cmpsb
dec
cwtl
and
jbe
and
imull
sbbl
add
cmp
pop
push
mov
mov
rol
push
push
push
and
ret
push
push
mov
sbb
and
mov
xor
lock
fbstp
shrl
les
mov
cli
rorl
or
mov
push
mov
into
cs
adc
inc
inc
shll
inc
bnd
inc
and
jmp
cmp
out
pop
sub
outsl
pop
xchg
lcall
dec
nop
mov
jb
mov
push
scas
lret
je
cld
push
xor
xchg
pop
clc
jbe
pop
faddl
xchg
dec
pop
and
and
mov
les
ja
and
adc
and
add
cmpsb
push
inc
add
shrl
jne
lret
push
jae
mov
adc
adc
mov
xlat
mov
adc
rcll
jecxz
push
and
shlb
jmp
arpl
cs
push
or
xor
insl
cmp
rcr
out
xchg
lret
adc
xor
xor
ljmp
and
add
leave
mov
cmp
mulb
stos
cli
nop
dec
data16
test
pop
xlat
gs
fsubrs
sbb
mov
xchg
push
add
popa
cltd
addl
int
rol
and
xor
cmpsl
ret
ja
inc
aad
mov
arpl
mov
rcll
sub
mov
sbb
fs
out
jecxz
bound
int3
fs
inc
and
int3
cmp
lahf
imul
push
or
fisubs
inc
ds
dec
out
and
les
inc
push
sahf
and
mov
xor
mov
data16
jnp
and
enter
add
and
les
mov
adc
add
adc
push
inc
push
push
pop
enter
lods
sub
test
jns
int
mov
dec
jne
mov
mov
out
clc
push
xchg
jbe
jle
adc
ds
ret
orb
inc
adc
and
pusha
xchg
xchg
lds
mov
mov
insb
arpl
fcoms
mov
iret
xchg
adc
test
fsubs
repz
adc
roll
test
add
insl
xchg
xor
lret
repnz
ds
and
jbe
sub
add
cmpsb
ja
pusha
scas
push
fldenv
xor
das
push
and
test
out
push
mov
je
push
jecxz
jne
hlt
inc
sti
sbb
test
loop
dec
fsubrp
stos
scas
stos
pop
or
xchg
jae
xchg
ss
xor
add
mov
sub
je
jle
add
inc
add
mov
xchg
mov
ficompl
fcmovnbe
cmpsb
ss
sbb
and
and
imul
and
and
int
outsl
dec
in
inc
mov
and
push
roll
ret
hlt
push
sub
mov
mov
inc
ret
dec
lcall
int
and
shlb
push
fidivs
sub
out
loopne
add
imul
pop
push
sahf
inc
mov
xchg
fldcw
and
or
les
cwtl
popa
inc
inc
inc
mov
jns
push
test
dec
mov
inc
mov
sub
and
cmpsb
sbb
test
adc
push
mov
lret
and
or
add
mov
xchg
jae
fstp
mov
addr16
push
xlat
push
in
xor
movsl
adcb
or
adc
in
pop
or
loopne
iret
jnp
xchg
stc
add
ret
mov
enter
lds
nop
mov
into
jp
add
sbb
jbe
jp
lahf
xorb
inc
ds
orl
and
subb
and
and
sub
mov
aad
stos
or
xor
lahf
int3
cld
aas
bound
aaa
dec
ljmp
mov
outsb
push
push
lcall
xor
or
into
adc
out
adc
and
sub
outsb
icebp
mov
push
rol
xlat
or
jne
or
dec
sbb
pop
int
push
test
shrb
lcall
fsts
mov
sti
inc
mov
es
xor
mov
mov
fmul
lcall
push
mov
sbb
add
jno
pushf
jb
push
dec
jb
lretw
push
out
or
add
jecxz
out
mov
test
inc
shll
push
mov
jo
loopne
orb
push
popl
add
ret
out
push
rcrl
ret
adcl
ljmp
dec
leave
das
repnz
and
fldln2
xor
mov
fists
shlb
fldenv
jb
call
push
test
call
ljmp
pusha
add
mov
faddl
lock
iret
push
es
inc
cmp
data16
and
fsubl
dec
mov
or
or
mov
stos
in
shlb
adc
adc
arpl
cmpsl
cmp
mov
je
test
inc
mov
push
stos
mov
push
pusha
jmp
xchg
fisttps
xor
dec
push
xlat
sahf
ljmp
sub
and
sub
or
jmp
adc
inc
push
and
cmp
add
inc
and
lret
popf
adc
add
push
mov
or
loopne
ret
out
out
sbb
popa
sbb
inc
shll
and
addr16
loop
sbbl
inc
mov
test
daa
xor
outsb
mov
cmpsb
add
and
mov
sbb
movsb
pop
mov
test
imul
mov
imulb
and
lcall
cmpsb
out
lods
jno
cmp
lea
loopne
cmp
pop
dec
movsl
inc
ja
stos
push
adc
mov
decb
lcall
mov
addl
test
stos
add
cs
inc
sub
out
idivl
mov
dec
push
ret
cmc
mov
das
and
inc
push
jb
arpl
test
xor
arpl
and
push
inc
fists
pop
in
sub
je
xchg
sbb
jne
test
cmc
xchg
rclb
sub
cltd
xor
loopne
je
leave
enter
inc
hlt
ljmp
imul
cmp
lods
aam
inc
push
jecxz
lea
inc
ret
aaa
sub
shl
pusha
ret
and
into
lea
insb
ret
xor
mov
shlb
mov
sub
and
and
out
imul
test
shrd
or
ljmp
hlt
xchg
subb
xor
sub
jns
adc
ds
mov
mov
sub
dec
sbb
leave
leave
push
xchg
mov
imul
int
es
sbbb
fisubs
push
mov
stos
add
lret
and
hlt
mov
mov
push
scas
not
inc
and
mov
push
outsl
xor
add
arpl
push
int3
inc
or
es
mov
imul
inc
mov
aam
je
cmp
xchg
xor
xchg
daa
loope
data16
jb
push
fstl
dec
lret
aaa
dec
mov
cs
fistl
bound
sbb
faddp
fists
and
push
dec
aam
sub
push
inc
xor
iret
cmp
and
arpl
cmp
inc
ljmp
inc
test
cmovno
aad
clc
push
mov
outsb
sub
insl
fcmovbe
aaa
insb
imul
pop
cs
sarl
add
ret
pop
and
xchg
push
sub
xchg
xchg
fists
xor
adc
test
mulb
push
outsl
xchg
ss
sbb
inc
sbb
sub
fldcw
inc
xchg
movb
mov
dec
xor
pop
mov
inc
ja
push
push
dec
int3
mov
int3
flds
xor
sub
mov
xchg
ss
jge
inc
adcl
out
inc
mov
orb
mov
imul
stos
push
insl
or
dec
jb
pop
insl
daa
mov
push
divb
stos
dec
mov
in
aaa
out
loop
inc
and
cwtl
insb
inc
and
imul
mov
mov
out
orb
and
mov
ret
and
and
add
rorl
dec
inc
and
add
and
shrl
inc
jge
jb
and
negb
adcl
mov
or
andl
arpl
loop
push
jnp
mov
loope
push
lret
mov
adc
stc
fisttpll
push
lret
cmp
pusha
stos
and
pop
lea
arpl
fcoms
je
push
addr16
mov
je
jmp
loop
lods
inc
test
dec
adcl
mov
jecxz
xchg
iret
inc
push
adc
lea
shll
fmulp
inc
loopne
insb
aam
or
mov
mov
jecxz
mov
stos
call
iret
mov
push
mov
sub
addb
and
outsl
pop
out
sub
mov
outsb
test
inc
insb
rolb
insb
test
pushf
test
cmpsb
inc
nop
push
xchg
dec
nop
dec
lret
push
cmp
shrb
adc
aaa
mov
jns
decb
je
jnp
push
shrb
stos
outsl
rcl
ds
push
xchg
lds
rcrb
lcall
cmc
or
push
aad
andb
or
leave
int3
dec
and
notb
dec
mov
cmpsl
leave
mov
ja
xor
inc
dec
push
jbe
ret
mov
xor
inc
loop
mov
push
push
rcl
sub
in
xor
loop
xor
arpl
dec
sub
ljmp
mov
sbb
sub
subl
scas
mov
mov
and
jle
mov
cs
loop
sub
test
or
test
cmp
and
loop
shr
mov
movsb
outsl
sub
and
js
rolb
sub
inc
inc
rol
push
add
xor
leave
fcmove
xchg
popa
in
out
mov
pop
dec
xchg
and
mov
aad
xor
and
mov
inc
sub
and
jecxz
dec
mov
xchg
je
test
sub
lret
imul
xchg
xchg
mov
push
gs
cld
testb
mov
sbb
mov
mov
and
add
je
je
ljmp
dec
ret
rorl
pop
lods
lea
push
out
mov
mov
addr16
xor
jb
ret
push
mov
and
mov
adc
dec
xor
and
mov
dec
xor
fsts
adc
and
fwait
lret
xchg
or
jl
out
out
xchg
cmp
dec
ret
ljmp
adc
xchg
dec
mov
scas
add
jns
aam
mov
fcoml
rcrl
and
xorb
mov
bound
inc
out
xor
xor
lcall
push
lcall
fiadds
mov
jnp
rolb
les
aad
shll
loop
aam
dec
cmp
sbb
insb
mov
hlt
mov
add
sub
std
xchg
outsl
loope
push
xor
mov
add
push
lret
cmp
add
mov
adc
push
stos
push
dec
add
iret
pop
in
dec
les
and
enter
hlt
push
xor
je
sub
ficoms
or
out
mov
repnz
movsb
push
and
repz
outsb
mulb
hlt
fildll
push
add
mov
mov
mov
fcmovne
cltd
and
sbb
add
adc
psllq
push
ja
inc
dec
lods
push
call
ja
mov
dec
sub
add
mov
mov
out
pusha
jns
and
js
xchg
iret
filds
xor
ja
dec
add
rclb
push
imul
mov
shrb
adc
or
loopne
or
mov
dec
rcll
add
inc
loopne
loop
jne
pop
inc
inc
push
mov
adc
jle
cmpsb
xor
rol
and
mov
loop
jbe
add
pusha
mov
dec
in
aam
xchg
push
je
addl
cmpb
or
lret
mov
leave
test
and
gs
cmp
mov
cmpsl
mov
inc
or
adc
push
and
adc
mov
xchg
rolb
inc
inc
imul
and
testb
je
hlt
jae
add
outsl
add
or
sub
scas
xlat
cmp
push
xchg
cmp
es
stos
and
dec
int
jge
xchg
dec
xor
aas
or
dec
pop
add
mov
mov
stc
mov
ja
sub
ret
addr16
lods
outsb
ljmp
dec
push
xchg
cltd
dec
xor
sub
fimull
loop
inc
pusha
or
mov
imul
aaa
dec
or
fsubs
shrl
rolb
fsubs
cmpsl
lods
inc
loopne
mov
inc
push
dec
enter
test
ljmp
xor
jno
je
sbb
icebp
push
inc
scas
sub
push
out
inc
pushf
cs
pop
and
sbb
mul
mov
and
adc
adc
inc
into
ss
xor
lret
je
leave
sub
ljmp
inc
dec
cwtl
sahf
xlat
gs
lock
stos
ljmp
testb
push
push
sub
cld
shrb
add
sub
inc
loopne
nop
add
or
rcr
inc
mov
stos
enter
and
xchg
and
push
jmp
mov
or
xor
dec
test
and
and
lea
xchg
in
sbb
add
and
outsb
and
adc
dec
mov
imulb
pop
stc
mov
and
push
in
xor
dec
add
mov
insl
insl
jbe
inc
sbb
push
xchg
pop
pusha
inc
test
hlt
mov
xlat
int
loop
inc
cmp
outsb
rcrb
push
xchg
cmc
mov
inc
mov
sub
cmpsb
pop
mov
mov
pop
mov
xor
cli
and
sub
xchg
adc
fsubs
pushf
leave
xchg
ss
insb
outsl
push
test
lods
or
dec
aam
cmpsl
or
or
and
jle
aad
ss
aad
inc
lods
xchg
and
jle
lret
daa
lret
test
and
dec
and
andl
and
sub
shrl
xchg
or
je
dec
mov
ret
pop
push
add
fsts
ss
adc
pop
mov
dec
sub
es
movb
dec
adc
dec
hlt
inc
test
aam
dec
aaa
and
jno
mov
dec
inc
dec
jb
out
mov
add
and
push
push
notb
pusha
mov
xchg
in
cmp
and
subl
daa
mov
test
and
stos
ds
mov
cs
cmpsb
clc
lret
xor
stos
sbb
xchg
or
add
xorl
insb
and
stos
pop
nop
xor
pop
mov
je
outsb
and
aaa
test
xchg
dec
ret
sbb
pop
ret
push
addb
or
stos
jmp
test
xor
int
out
adc
repnz
inc
adc
loope
int
insb
addr16
fisttpl
cmp
in
outsl
cltd
add
pusha
jne
repnz
lds
and
into
in
mov
jg
pop
and
fiaddl
xchg
mov
fildll
mov
jg
movsl
mov
outsb
dec
xor
push
jg
jb
add
fcmovnbe
in
push
inc
fdivs
iret
inc
cmpl
sub
jmp
adc
iret
push
mov
pop
ss
aam
in
push
popa
and
sub
test
add
dec
fs
fnstenv
repz
stc
mov
pop
out
es
mov
dec
in
mov
add
iret
stc
xchg
push
push
push
xchg
loop
loope
cmovg
rclb
sbb
out
shrb
fs
in
sbb
add
test
cmp
repnz
sub
jg
in
inc
pop
or
mov
test
fisubl
push
adc
fbld
aaa
and
loope
call
pop
jb
sarl
pop
add
inc
sub
add
inc
dec
inc
aam
test
test
insb
sub
test
add
mov
and
inc
mov
aam
je
cmovg
enter
mov
rcl
add
inc
andb
popl
lret
cmpsb
sub
or
out
loope
imul
jg
sub
xor
sbb
call
adcl
push
imul
lea
popa
insl
add
xchg
shrb
xor
arpl
xlat
icebp
ret
sub
xchg
shlb
jnp
dec
fsubs
lahf
xlat
cmp
sarb
or
and
dec
inc
das
inc
ret
lock
les
ss
hlt
xor
xchg
push
mov
addr16
scas
je
sbb
lods
lret
sbb
mov
ret
mov
mov
ret
cmpsb
add
stc
sbb
push
mov
xchg
mov
dec
outsl
insb
inc
dec
adc
and
and
inc
clc
and
and
add
jmp
xchg
mov
xchg
addr16
arpl
inc
dec
and
inc
jg
jmp
push
jno
xor
int
out
aad
call
xchg
cmpsb
clc
sub
or
or
imul
add
cmpsb
push
sub
mov
lret
scas
and
and
fidivrs
adc
in
xchg
andl
ret
cmp
loop
shll
lea
inc
shrb
insb
and
xchg
loop
inc
jp
mov
je
sbb
xor
push
mov
mov
dec
incb
je
dec
cmp
dec
push
stc
add
test
in
pop
mov
pop
dec
xchg
push
inc
divl
loop
mov
popf
cmc
sub
push
mov
test
dec
sub
idivl
dec
mov
arpl
mov
adc
fildl
dec
inc
imul
inc
shl
push
repnz
sbb
das
imull
push
loop
ja
push
int
ret
mov
cmp
mov
lock
adc
mov
adc
xchg
inc
shlb
jns
adc
sub
xlat
mov
call
dec
dec
fcmovne
pop
sub
or
push
inc
dec
sti
xchg
js
insb
jne
pushf
push
or
cmp
sub
pop
aad
daa
rorl
sub
movsb
inc
sub
or
xchg
cmc
roll
sub
xor
test
inc
jg
in
imul
inc
shll
out
mov
mov
mov
in
xor
clc
sub
shll
and
cld
xlat
jg
mov
adc
xchg
addr16
popa
sbb
xor
aad
subl
sub
mov
rolb
push
xchg
mov
push
fimuls
mov
inc
inc
repz
andl
push
dec
adc
and
ret
add
gs
cmp
fiadds
push
loop
push
jnp
ret
xor
int
std
lahf
rcll
shlb
mov
in
adc
adc
pusha
sub
jb
jle
dec
jo
jns
imul
push
out
or
out
or
pusha
aad
mov
push
mov
cmpsb
ret
mov
adc
int
jae
or
and
lds
mov
cltd
call
inc
push
push
cltd
or
in
dec
pop
hlt
and
fs
movsl
lods
mov
pop
cmpsb
sti
into
jbe
lret
add
arpl
mov
inc
roll
lock
dec
arpl
lods
loop
dec
cltd
in
push
stos
cmp
jmp
push
jo
xchg
sbb
bound
push
test
cmp
fsub
scas
mov
adc
fwait
mov
imul
xor
test
and
loop
adc
adc
dec
and
inc
and
and
mov
inc
mov
and
jnp
sti
push
mov
jmp
es
sub
and
ds
jg
dec
sub
inc
pushf
fs
test
adc
notb
outsb
sbb
inc
inc
lahf
add
lock
jp
push
and
add
inc
or
xchg
ss
aad
jp
ret
xchg
add
and
fcmovnbe
pusha
xchg
adc
mov
es
push
jecxz
sub
sahf
push
addl
adc
call
out
fdivrl
inc
adc
dec
xor
xchg
sbb
loop
add
stc
lods
dec
iret
cltd
lret
lea
mov
lcall
dec
dec
test
sub
mov
add
xchg
add
and
add
mov
loope
out
imul
adc
das
mov
in
stos
adc
imul
out
insl
adc
inc
xchg
cmp
dec
and
adc
mov
xchg
pushf
aad
test
inc
xchg
ret
lods
shr
or
mov
mov
or
stc
fsubrs
push
jbe
pop
and
adc
pop
add
movsb
sub
mov
out
ficoms
sbb
push
dec
rcrl
test
inc
in
mov
pop
cmpsb
push
imul
in
jp
call
pop
adc
aam
inc
mov
add
mov
mov
mov
mov
popf
mov
ret
ja
lock
ds
xchg
and
dec
dec
lds
scas
inc
fdivs
push
pop
dec
cwtl
lahf
or
push
sub
ret
ret
sub
scas
test
mov
ds
enter
lret
test
add
add
outsl
adc
scas
xchg
mov
in
adc
cmpsl
push
outsl
ss
xor
out
mov
jp
sub
mov
ljmp
inc
push
popa
cmp
jmp
stos
and
push
mov
js
cmpsb
loope
in
jns
jne
int
dec
iret
je
cli
gs
dec
pop
inc
push
xchg
in
lds
xor
rcrl
mov
sub
sub
rol
dec
mov
xlat
test
maxps
loope
popf
and
iret
es
sub
andl
sbb
imul
jae
lods
popa
je
fcomi
mov
fs
jns
int
lods
jae
xor
xchg
je
js
add
push
std
testb
xchg
xor
pusha
fstl
in
cmpsl
in
test
sbb
mov
inc
inc
xor
aam
xor
pop
sub
adc
xchg
inc
loopne
in
aam
pop
jnp
add
push
or
xlat
cwtl
je
std
data16
mov
xchg
dec
dec
cs
and
inc
pusha
shll
sbb
loope
jne
and
lret
pop
sbbl
dec
sbb
push
inc
addr16
rcll
xlat
sub
jb
dec
fwait
or
or
lcall
arpl
xor
aad
in
pusha
shl
jne
lret
sub
dec
roll
lock
and
mov
int
hlt
push
nop
bound
mov
or
xchg
push
mov
or
push
in
int3
adc
test
jae
test
faddp
mov
inc
add
arpl
cmp
mov
mov
and
mul
dec
add
add
mov
rclb
test
dec
push
adc
adc
add
inc
leave
hlt
inc
ret
xchg
push
and
in
xchg
dec
sbbb
add
mov
sub
sbb
icebp
push
mov
je
or
and
mov
mov
and
xor
and
mov
mov
jno
cmp
je
rorb
js
mov
enter
cmc
and
mov
and
and
adc
pop
enter
mov
enter
cmc
and
add
lods
scas
xor
sbb
arpl
xor
in
les
ret
lods
push
aad
cli
mov
int
mov
and
dec
push
fists
test
mov
lret
xchg
aam
pop
cmp
push
sub
dec
aad
andl
and
xchg
pmulhuw
and
inc
pushf
add
and
push
lock
jp
stos
push
cmp
int
xor
sbb
in
stos
sbb
orl
adc
sub
inc
hlt
mov
or
imul
and
rclb
xchg
sub
add
imul
out
push
lods
fcos
stc
sub
ret
scas
xor
jne
call
int
xor
outsl
arpl
xor
xchg
sub
and
fnstcw
cmp
in
int
aam
and
adc
loopne
push
mov
insb
fisubl
fildll
loop
popa
popf
and
outsb
mov
imul
addr16
fisubl
pop
mov
sbb
xchg
adc
xchg
movsb
adc
mov
pop
mov
fistl
or
mov
mov
and
dec
es
ds
in
loop
xchg
push
xor
loope
cld
inc
movsl
icebp
inc
mov
popa
hlt
test
push
shlb
xchg
outsl
xchg
ljmp
inc
shr
xchg
push
out
mov
jp
cltd
push
pusha
jl
aad
stos
jns
subl
dec
pop
mov
mov
outsb
lret
mov
outsl
aad
mov
add
and
int
sub
mov
jmp
dec
stc
dec
arpl
pop
sub
adc
jecxz
movsb
cmpsb
mov
add
mov
cmp
fdivrp
mov
jnp
xor
mov
scas
insl
aad
adcl
mov
test
xor
sub
push
into
pop
add
loop
push
cmp
add
mov
les
xor
and
cmp
jp
mov
sarl
lret
add
nop
lock
pop
jb
sbb
andb
xor
imul
or
mov
mov
add
int
in
push
inc
les
push
push
inc
and
test
jne
xchg
inc
push
adc
insb
mov
hlt
mov
notb
sub
add
mov
cmp
cmp
rolb
pop
push
xlat
push
cwtl
push
sbb
sbb
loopne
cmp
ret
mov
inc
add
sub
lret
inc
jle
mov
hlt
sub
and
aam
fs
lret
and
shll
scas
mov
arpl
and
or
addr16
inc
inc
fimull
sub
loope
push
rcl
sbb
mov
stc
stc
lahf
dec
push
xor
adcl
sbb
in
aaa
sub
cmpl
bound
int3
shlb
mov
cmpsb
push
fdivl
or
bsr
cmp
arpl
push
test
hlt
cmc
lods
cmp
jo
adc
clc
sbb
cmp
loop
pusha
inc
addl
and
test
pop
lods
hlt
push
and
lcall
and
lods
adc
mov
xor
test
jno
arpl
in
call
cmp
cmpsl
test
lock
test
pop
push
lea
sbb
xor
pop
gs
out
xor
dec
or
push
int
xchg
xchg
sub
xor
dec
les
in
test
push
mov
dec
sub
fwait
int
adc
test
dec
push
mov
mov
add
mov
sub
loop
push
mov
test
xchg
and
adcl
xchg
or
lods
ficompl
adc
xchg
je
je
push
dec
mov
inc
mov
adc
call
int3
pop
ljmp
or
int3
lret
jge
je
push
imul
push
test
dec
and
or
dec
push
and
outsb
scas
xchg
les
aad
lods
lock
push
rep
arpl
mov
repnz
movsb
mov
aam
sub
push
xchg
mov
cmc
add
add
inc
cs
sbb
sti
inc
mov
pop
cmc
outsb
mov
add
xchg
xchg
and
imul
mov
and
xor
stos
aad
cmpsl
es
sbb
and
pop
into
or
movsb
xor
mov
into
jnp
mov
sub
xlat
mov
fmuls
stos
std
lods
out
mov
pop
bswap
lds
add
mov
je
adcl
fiadds
and
mov
dec
imul
dec
inc
and
xchg
xlat
xlat
pop
and
test
pop
jbe
jecxz
pushf
add
ja
and
mov
test
out
shrl
and
ja
cmpb
and
testl
in
mov
arpl
cmp
xlat
jns
or
loop
pop
push
sbb
and
sbb
mov
mov
cltd
dec
addr16
push
stos
ss
sub
int
ljmp
mov
out
loop
mov
je
sub
or
and
pusha
sub
sbb
pop
mov
rcrb
ret
mov
cmp
sbb
push
dec
and
sbb
sub
ja
sbb
test
into
and
cmpsl
xchg
scas
xchg
add
in
or
lods
push
insl
int
xor
inc
mov
arpl
in
shlb
inc
mov
and
testb
popf
mov
aad
pop
mov
dec
aad
push
inc
xchg
inc
pusha
pop
jmp
and
mov
mov
fwait
mov
mov
xor
jne
rol
mov
push
adcl
and
inc
and
inc
push
and
hlt
mov
sub
or
push
es
mov
jb
mov
cld
test
aad
dec
xor
sahf
push
sub
push
cs
mov
inc
enter
test
mov
je
je
rcll
in
xchg
ss
pop
stos
mov
jb
mov
minps
dec
xchg
cmpl
lock
imul
and
push
inc
adc
in
jo
inc
or
int
adc
mov
and
dec
and
inc
mov
jbe
xchg
inc
push
xchg
ret
aam
sbb
dec
xor
xor
jae
add
xchg
jg
out
shll
and
call
dec
sub
push
outsl
je
ss
int
loope
and
or
xlat
ss
jbe
xchg
mov
jne
jne
cmp
cwtl
lds
dec
jnp
ret
jecxz
xchg
sub
mov
mov
ja
hlt
les
call
pusha
or
xor
into
and
xchg
int
aam
push
div
inc
xchg
dec
add
mov
xchg
outsb
arpl
inc
sub
call
jb
loop
xor
outsl
aad
sub
or
sarb
call
and
pop
js
xor
shlb
insb
sahf
sbb
or
lods
jle
popf
add
test
mov
pop
jge
aaa
inc
das
jb
add
ret
push
sahf
enter
sub
jb
ljmp
in
sub
popl
in
leave
fsubp
push
mov
mov
into
pop
pop
int3
adc
sbb
xchg
or
call
sub
push
push
xor
push
mov
dec
out
mov
out
pop
push
and
hlt
ret
mov
and
jb
aad
std
mov
push
mov
push
or
dec
xor
mov
insb
sub
add
dec
pop
mov
mov
in
test
test
mov
or
cmpsb
jmp
aam
and
aad
mov
test
test
xchg
adc
push
leave
ja
ljmp
shll
das
cs
dec
fsubp
out
ss
outsl
dec
popa
test
cvtdq2ps
rclb
xchg
push
inc
xor
pminub
xlat
push
sti
fiadds
add
in
mov
sub
cmp
outsb
dec
push
dec
lea
fnstcw
jns
inc
mov
mov
inc
mov
imul
mov
mov
dec
int
fildl
pop
sbbl
push
xchg
cmp
xchg
push
sti
sub
pop
test
inc
movsl
jmp
mov
cmpsb
les
xchg
fistl
or
xlat
inc
dec
addr16
ss
and
add
jnp
or
push
cmp
and
pusha
pop
add
cmp
mov
in
aaa
fsubl
sub
sbb
inc
or
pusha
shrl
in
dec
ror
adc
mov
cmpsb
stc
cmpsb
mov
push
mov
mov
cmpsb
pop
loope
ljmp
and
ret
fstl
and
sbb
adc
sub
into
pushf
in
in
push
out
inc
int3
push
lret
ljmp
int
aad
les
pushf
aad
push
jnp
mov
pop
mov
push
mov
push
jmp
inc
and
add
or
sub
sarb
mov
js
sub
or
popa
shll
cmp
mov
push
lods
or
mov
sub
stos
lret
loope
xchg
jg
mov
pop
and
in
sub
lret
insl
inc
xchg
push
ret
jns
push
clc
push
inc
iret
dec
loope
pusha
test
lret
dec
test
pop
mov
jae
or
fs
pop
jecxz
inc
movsb
mov
dec
out
add
sbb
adc
adcb
ret
nop
test
and
les
nop
int3
movsb
sbb
sub
push
inc
std
subl
insb
loopne
jae
push
adc
into
jno
loop
and
out
jbe
lret
int
sub
pop
push
inc
imul
jmp
mov
loop
jecxz
xchg
pusha
out
test
mov
je
enter
ss
push
inc
aad
dec
std
aaa
ljmp
lahf
into
mov
push
push
imul
xchg
iret
mov
stos
sub
pusha
sub
dec
sub
pusha
pop
and
test
scas
cmc
aam
inc
inc
pop
dec
loop
rorl
movsb
fldcw
out
jbe
add
inc
jg
and
in
data16
and
dec
jae
scas
inc
callw
repz
addr16
dec
test
leave
pop
push
in
adc
inc
add
xlat
jecxz
cs
aad
outsb
mov
cmp
test
and
stos
xchg
lret
pusha
inc
mov
aad
dec
out
and
add
or
outsl
outsl
in
inc
push
into
arpl
push
and
mov
xchg
mov
xchg
jp
aad
shlb
loop
xchg
iret
lods
out
or
mov
js
inc
jne
dec
dec
cmpsl
scas
mov
push
add
sub
inc
or
inc
inc
and
dec
mov
stc
mov
xor
push
cmp
scas
xchg
pushf
aaa
subl
mov
cmp
sub
lret
and
jmp
push
in
push
add
add
sbb
incb
sub
or
lcall
mov
daa
add
and
xor
stc
and
mov
and
imul
aam
outsl
test
xchg
iret
cltd
xor
dec
test
xor
push
mov
mov
mov
xchg
sub
push
inc
into
jns
sub
xor
xchg
pop
adc
push
dec
pop
js
or
mov
stos
mov
adc
cld
test
jns
clc
imul
xor
imul
shll
sub
aas
and
roll
outsb
sub
loope
and
js
and
clc
inc
xchg
in
nop
repz
mov
push
sub
push
test
fbstp
dec
xor
adc
xorl
adc
mov
xchg
ja
mov
inc
cmp
ja
pushf
cmpsl
mov
test
push
mov
jnp
sbb
popa
addb
std
gs
sbb
or
enter
test
out
lcall
fwait
ljmp
cmpsb
nop
in
stos
lods
push
test
pusha
sub
mov
arpl
push
les
in
push
in
dec
add
aam
jbe
cwtl
push
cld
sahf
call
lods
lea
psraw
cmp
daa
cwtl
push
cmp
mov
loop
stos
loop
push
push
repnz
push
jne
inc
add
imul
add
and
andl
sub
inc
lahf
dec
pop
arpl
xor
sbb
cmp
rclb
cli
push
and
inc
in
adc
mov
mov
bound
es
push
frstor
mov
mov
shlb
inc
addr16
mov
pushf
shr
jg
in
mov
sbb
mov
xchg
xor
and
insb
inc
fnstcw
adc
add
testl
xchg
pop
xchg
adc
inc
push
stos
dec
aad
jns
xchg
fwait
shlb
push
sub
push
push
dec
jecxz
in
test
in
mov
add
mov
repnz
and
hlt
fistl
cwtl
les
mov
cmpsb
xchg
and
adcl
sbb
sub
jno
jae
xchg
cmpsl
in
mov
sub
lret
and
ja
xor
out
inc
dec
loop
imul
dec
test
idiv
sbb
jnp
pusha
lods
or
popa
jo
push
sbb
jle
cltd
mov
mov
push
fnstcw
adc
into
or
adc
mov
xor
sub
jle
push
pusha
sub
sub
sbb
imul
mov
adc
sahf
test
imul
jnp
dec
lcall
outsl
rcll
push
test
add
fistpl
aaa
sub
mov
inc
sti
xchg
mov
sbb
test
inc
sti
xor
push
sbb
lahf
inc
movsb
pushl
push
arpl
scas
xlat
sub
cmp
xchg
lcall
aam
add
or
aad
sldt
push
out
sub
lcall
test
add
mov
fsubs
mov
jg
scas
orb
mov
in
push
add
test
ja
inc
cmp
movsl
test
ret
jnp
inc
mov
neg
aad
jns
call
and
push
sbb
iret
fisubrl
rolb
negb
test
adc
xor
pushf
test
adc
loope
pop
and
fs
mov
adc
les
fwait
mov
jmp
mulb
lcall
ret
imul
mov
scas
stos
movsb
xorb
hlt
test
jmp
add
aad
in
mov
cmp
adc
cs
fldl
les
iret
xlat
inc
imul
and
not
popf
into
loope
push
lods
xchg
shrb
aad
sti
inc
insb
lea
filds
outsl
pop
mov
dec
hlt
inc
sub
and
shl
jp
cmp
inc
arpl
dec
pop
outsl
mov
xchg
xchg
inc
mov
push
inc
shrl
je
gs
sahf
test
jg
shlb
dec
movsb
subl
cmpsl
in
repz
sti
and
cmp
inc
mov
and
add
dec
mov
mov
data16
or
pop
push
adc
jns
and
add
jns
mov
xor
or
sbb
stos
jg
into
lahf
xor
int
dec
out
sub
and
rol
add
pop
or
repz
xor
out
int
inc
std
jns
call
arpl
rcrb
psubw
mov
repz
pop
scas
inc
inc
repz
enter
inc
adc
lods
and
inc
fldt
adc
jns
test
xchg
adc
adcl
aad
ja
dec
into
xchg
pop
je
sub
hlt
xor
xor
xor
and
test
mov
dec
push
cmp
ja
je
cmpsb
jnp
dec
decb
outsl
xor
rcrl
adcl
mov
fisttps
jb
outsb
cmpsb
loope
sub
ss
and
mov
lea
inc
mov
mov
and
call
and
add
shrb
andb
adc
mov
fs
mov
pop
pop
ret
adc
sub
cmpsl
mov
push
scas
xor
scas
int3
adc
and
jae
sti
shrl
ja
inc
add
icebp
push
bound
push
sub
les
int3
sbb
add
inc
jbe
mov
insl
cwtl
add
pop
mov
ret
xor
xor
sahf
push
push
pop
sbb
mov
xchg
lret
negl
outsb
push
in
add
stos
pop
pop
and
sub
push
pusha
or
adc
dec
xor
sahf
into
push
mov
mov
sbb
xchg
pop
dec
push
test
test
negb
mov
jbe
push
call
push
add
out
loop
mov
lods
aam
pusha
test
xchg
ss
out
push
and
out
push
dec
les
sub
dec
mov
cld
inc
push
test
xchg
out
sbb
stos
add
repnz
js
jp
ja
mov
aad
ljmp
and
ds
pop
hlt
movsl
std
push
xor
adc
hlt
inc
mov
mov
pop
mov
jge
in
sub
aas
xor
and
inc
in
outsl
mov
movsb
cmpsb
xor
adcb
mov
test
sbb
mov
adc
mov
ret
dec
ret
in
iret
ja
cmpsb
fwait
test
mov
jne
jb
outsb
fsubrs
and
outsb
inc
ja
cmpsl
push
test
inc
arpl
push
cmpsb
sub
push
ds
lret
pop
cmpsb
je
push
mov
lock
jecxz
mov
jns
mov
xor
or
ja
adc
les
bound
pop
cs
or
stos
fadds
shlb
mov
jo
jo
inc
pop
aad
enter
fimull
sub
add
pop
enter
popa
dec
in
cwtl
fistpl
push
and
insb
repz
fdivrl
push
jle
je
je
je
lea
jge
lret
ljmp
or
mov
aad
lret
fs
scas
mov
loop
loopne
sub
push
ss
arpl
mov
push
add
push
div
pop
adc
sbb
mov
adc
and
inc
add
push
rorb
shlb
repnz
push
int3
stos
or
pop
adc
enter
jmp
in
jmp
out
clc
outsb
jns
addl
mov
adc
mov
les
xor
xor
mov
fistl
push
push
loope
xchg
lods
and
inc
inc
mov
and
sub
addr16
add
popf
inc
cmp
cmp
cmc
fcmovnbe
in
ds
les
dec
loop
xchg
ret
cmpsb
push
xlat
push
add
inc
sub
rorb
inc
xchg
mov
mulb
mov
and
aad
dec
loop
push
notl
mov
push
xchg
ret
xor
mov
mov
lea
mov
arpl
inc
add
sbb
test
cwtl
or
pop
inc
jg
push
xor
shl
adc
imul
out
jg
mov
fisubrs
dec
push
pop
cmpsb
add
mov
fldenv
jp
push
in
adc
adc
pusha
lret
jecxz
inc
rolb
jecxz
sbb
shrl
push
and
sarl
fiaddl
stc
adc
sysret
xor
roll
nop
sarl
or
fwait
inc
jecxz
add
pop
fwait
lret
rol
xor
int
dec
fadds
mov
cwtl
add
pop
enter
push
inc
mov
xor
addr16
int
sbb
sub
sbb
mov
call
imul
jbe
inc
or
cmp
ret
pushf
cmpsl
in
movsb
mov
sub
dec
enter
stc
xchg
ret
repz
cld
mov
jnp
or
les
andb
xchg
dec
and
les
sbb
repnz
movsl
ret
and
sub
and
les
out
or
test
repz
jecxz
popa
notl
adc
push
push
mov
lcall
and
addr16
and
iret
pop
ret
mov
aad
nop
test
jb
mov
inc
inc
inc
sub
fstl
fcmovb
mov
inc
insl
or
xchg
push
inc
cmp
and
xchg
add
inc
ret
and
clc
push
and
sub
sbb
out
fldt
ret
cmpsb
fisubl
sbb
out
and
and
popf
jb
out
hlt
je
rorl
leave
rolb
lcall
or
or
mov
fs
add
push
int
mov
add
sub
jne
imul
mov
enter
pop
lods
out
loop
cmp
test
stos
dec
out
dec
test
xlat
push
xor
dec
mov
into
imul
xor
es
in
popa
mov
hlt
das
jmp
sub
movsl
popa
mov
dec
push
out
xchg
xor
loope
loop
push
push
sub
add
cmc
mov
cmpsb
insl
pop
int
inc
aad
je
xor
mov
push
insb
and
sub
cmp
inc
and
das
and
orb
sub
sub
loop
mov
pushf
sbb
fsubs
xorb
adc
sub
sub
add
inc
mov
lea
fs
sahf
inc
rclw
pusha
aad
cld
cs
mov
ja
gs
inc
jno
test
adc
lret
aaa
xorb
inc
push
mov
iret
mov
sub
or
inc
fnstenv
pop
xor
pop
inc
test
adc
sub
inc
pop
loop
stos
aaa
ljmp
add
sub
and
inc
add
aam
push
sub
stos
pop
jnp
or
xchg
test
adc
mov
push
outsb
popa
andb
adc
out
aad
jb
ds
rclb
inc
addr16
dec
add
or
fstl
les
dec
xchg
movsb
in
push
hlt
cmp
inc
ss
aam
add
lea
sub
add
push
insl
leave
sub
mov
cld
inc
mov
adc
mov
sub
adc
shl
into
or
jmp
imul
loope
sbb
shll
cmpsb
rolb
mov
mov
xlat
sbb
stc
fsubl
jb
inc
push
adcb
loopne
mov
and
mov
shlb
push
push
jns
enter
pop
mov
mov
lcall
mov
add
imul
mov
insl
enter
test
xchg
ljmp
cmp
iret
rclb
sub
out
iret
aad
stc
and
push
nop
mov
jb
hlt
mov
cmp
xor
icebp
loop
push
sub
ds
sbb
rclb
push
cmc
mov
pop
shll
push
sbb
fstl
cmp
push
stos
subl
adcl
mov
cmp
int
jmp
leave
and
stc
push
mov
mov
ret
inc
clc
push
push
popa
jmp
adc
push
jge
and
adc
add
in
lahf
sub
movsb
inc
ret
inc
pop
xorb
mov
add
sub
add
addr16
xchg
andl
aaa
je
dec
test
pop
dec
imul
push
hlt
add
cmpsb
sub
fldenv
into
addr16
andb
sub
lock
xor
xchg
sub
xor
cmp
xchg
loop
push
cld
cli
mov
stos
loopne
xor
outsb
shrb
les
lock
adc
nop
fimull
push
loope
popa
inc
and
arpl
cmpsl
add
fdivrp
stos
and
lods
popf
lock
fisubrs
stos
inc
std
mov
add
lret
and
or
adc
je
ds
je
out
sbb
add
xchg
xchg
add
cli
in
push
and
fsubs
mov
fcoml
clc
mov
push
sub
inc
inc
push
mov
mov
sbb
push
xlat
das
push
sub
and
push
and
fldcw
daa
arpl
movsb
push
and
jg
jmp
enter
sbb
cmpl
push
not
jnp
dec
lret
pop
push
mov
sti
jmp
inc
in
in
scas
xchg
out
xlat
push
or
int3
cmpsb
jle
test
jg
ljmp
mov
add
rorb
pusha
shll
xorb
cmp
cmc
and
gs
insl
test
mov
andl
xor
and
adc
mov
into
clc
stos
pop
and
inc
ds
mov
test
ja
xchg
cmp
ss
and
mull
nop
mov
test
cmpsb
inc
push
add
sahf
mov
adc
mov
je
andl
push
or
lahf
in
iret
scas
jbe
xor
or
cwtl
in
mov
iret
cmpsl
fbld
imul
jnp
lods
aaa
push
xchg
cmp
enter
stos
sub
mov
or
mov
andb
test
inc
adc
popa
mov
xchg
jnp
ja
pop
mov
push
add
xchg
mov
sub
and
imul
xor
imul
xchg
pusha
and
jmp
iret
xchg
ss
call
sti
sbb
xchg
cmp
popf
loopne
mov
mov
sbb
orl
stos
lods
push
xchg
fadds
cmc
add
inc
int
pusha
xchg
cmpsb
mov
ficomps
ret
insl
xchg
ret
cs
and
adc
and
gs
dec
nop
push
dec
cwtl
dec
mov
inc
sub
testl
mov
mov
jle
xlat
int
ljmp
xor
addl
inc
repnz
xor
insb
mov
push
mov
lods
je
adc
sbb
lock
call
jg
cli
sarl
mov
outsb
inc
xor
repnz
jno
aam
rcll
lret
lods
scas
and
pushf
inc
inc
and
leave
mov
cmpb
ficoml
or
push
or
lret
insl
mov
push
and
push
adc
add
jne
add
add
les
inc
test
les
dec
rorl
adc
aam
adcl
jne
jno
mov
rclb
movsb
aad
mov
rcrl
inc
popf
jge
popf
sbb
push
mov
dec
ret
dec
sbb
adc
inc
stos
and
jl
xor
or
xlat
fisttpll
adc
jg
int
and
xchg
std
aaa
popa
pop
test
ljmp
and
int3
xchg
xchg
add
stos
and
or
dec
and
shll
push
fcompp
lcall
es
add
add
lret
sahf
add
test
xchg
mov
xor
dec
mov
adc
xchg
cmc
mov
fbstp
xchg
pop
or
mov
loopne
iret
out
lea
clc
iret
mov
ss
inc
mov
das
sti
mov
test
in
dec
out
inc
add
xor
aaa
and
and
sub
jbe
lods
fildl
xlat
cmp
lea
fidivrs
lock
test
jae
fildll
add
int3
hlt
popl
pop
mov
jnp
mov
xor
mov
clc
stc
xchg
xchg
sbb
loope
mov
out
sbb
out
pop
cmpsb
cmp
dec
test
lods
je
ss
insb
addr16
jae
push
pop
mov
outsl
dec
shrb
negb
test
arpl
pop
jne
push
test
sbb
aam
cmp
sub
jle
popf
aad
jmp
inc
inc
mov
push
shl
insb
popa
lods
ljmp
inc
cmc
test
ret
mov
or
jge
sbb
and
mov
es
lea
push
sbb
xchg
lods
mov
lahf
sub
or
sbb
dec
xlat
dec
in
xchg
push
pop
and
sub
pop
xorl
xchg
push
mov
call
dec
lret
call
test
call
xchg
decl
or
call
mov
xchg
jecxz
arpl
mov
dec
push
fisubl
scas
test
xor
pop
subb
jnp
mov
pusha
add
jno
aaa
or
stc
mov
xor
xlat
mov
sbb
fsubs
xor
inc
ja
lock
adc
arpl
mov
insl
mov
cs
out
iret
jle
outsb
pusha
or
mov
dec
sub
aad
adcb
sub
insb
xor
lret
adc
in
sub
loope
test
cmp
dec
push
test
mov
scas
rcrb
out
jp
stos
cmp
push
xchg
movsl
enter
push
into
aad
test
stc
es
fidivrl
test
enter
lods
push
lcall
pop
and
shl
call
out
xchg
stc
ss
xchg
dec
imul
lods
jg
pop
hlt
out
dec
hlt
adc
jle
js
push
and
sbb
notb
clc
and
or
loope
mov
das
es
add
call
lahf
sub
cmp
jne
add
movsl
push
dec
inc
lods
xchg
jge
pop
mov
popf
je
mov
xor
int3
pop
push
sbb
je
sbb
shlb
sbb
ljmp
aam
push
add
lods
cmpsl
push
push
inc
ds
sub
movb
add
ds
mov
je
fbstp
mov
ja
adc
sti
cwtl
insb
dec
mov
dec
adc
ret
xlat
dec
inc
pushf
jns
push
jg
pop
jecxz
inc
loopne
cmpsl
ss
imul
fistl
scas
rclb
fldenv
adc
or
mov
sub
mov
push
loopne
lds
push
lret
out
imul
test
push
push
arpl
and
inc
xchg
sub
push
or
adc
in
int3
subl
sub
jno
add
hlt
ficoms
xchg
inc
push
sbb
adc
or
mov
cmc
lahf
mov
sbb
clc
popa
fsubl
stc
xchg
or
xlat
jns
addr16
jmp
shll
rcl
test
das
insb
push
sub
dec
inc
add
mov
movsb
popf
jb
std
and
push
lods
inc
testb
push
cmpsb
in
dec
xchg
mov
dec
std
data16
lcall
sbb
sti
cmpsl
jb
mov
shrb
xchg
add
sti
pushf
es
insb
sub
dec
ds
xor
ret
stos
loop
test
fldenv
popf
pop
sub
jne
fistl
in
ljmp
push
je
mov
dec
cs
or
adc
sbb
lret
inc
sbb
mov
mov
dec
mov
xor
cmpb
lock
and
std
or
adc
stc
cltd
mov
ljmp
mov
and
test
les
lds
pop
push
mov
int3
mov
ljmp
xchg
and
and
repnz
jno
hlt
xchg
roll
movsl
add
insb
imul
xor
push
and
fiadds
jl
fbstp
cmpsb
xchg
or
cs
jp
jno
or
xor
jg
lods
and
jno
xchg
and
clc
lea
leave
sahf
pop
scas
addr16
scas
add
hlt
mov
test
subb
xchg
arpl
xchg
out
add
xchg
fisubs
popa
mov
sub
in
dec
push
pop
jno
or
cmp
inc
movl
jbe
add
push
inc
repnz
add
paddw
push
sbb
mov
push
scas
test
ss
je
loopne
xor
push
xlat
xor
iret
dec
or
fs
int
sti
jmp
inc
mov
cmp
nop
aaa
std
jno
cmp
sub
adcl
rolb
in
aad
push
cmp
adc
xchg
or
xor
add
into
dec
and
and
and
sbb
add
out
mov
or
push
adc
not
fimuls
shrb
or
mov
and
dec
enter
lret
sub
jbe
push
mov
jbe
jae
sub
sar
pusha
mov
push
int3
adc
and
xchg
std
lea
js
and
adc
rolb
inc
fsubl
and
test
push
pop
lea
jnp
outsl
xchg
pop
push
jecxz
lock
dec
xchg
sub
sub
mov
and
mov
nop
inc
xchg
dec
lcall
mov
insl
in
or
mov
sbb
sub
imul
inc
mov
cwtl
add
mov
inc
push
inc
ror
mov
fistl
in
jno
cltd
mov
ss
movb
jae
scas
lcall
aam
inc
pop
int
cmp
vorps
and
bound
sub
loop
ret
dec
or
adc
push
pushl
push
aaa
inc
and
adc
sub
sub
loop
incb
inc
mov
in
xchg
mov
loope
add
dec
aam
push
push
lea
add
int3
xor
imul
je
push
in
pop
mov
jne
mov
in
or
mov
cmp
cmpsb
mov
fisttps
mov
sti
or
sti
fisubl
lahf
lods
xor
jl
mov
cmp
and
add
aad
push
ret
add
out
push
mov
scas
jecxz
mov
adc
xor
add
cmp
inc
push
dec
mov
sub
sti
faddl
outsb
or
inc
sub
test
sub
sbbb
jns
pop
div
shlb
and
cmp
inc
sti
mov
shrb
sub
outsb
sbb
loop
inc
cs
cmp
test
ss
clc
inc
rol
pop
inc
sbb
notb
imul
xchg
cmp
jmp
xchg
dec
xlat
sub
pop
jno
sahf
adc
imul
rcll
aaa
and
ret
out
les
sub
dec
and
add
comiss
cmp
shl
jge
push
push
adc
jno
es
je
xorl
test
clc
or
pusha
out
out
mov
frstor
inc
imul
jae
aad
mov
pop
xor
inc
in
add
lods
dec
in
jns
je
cmpsb
enter
xchg
mov
push
xor
and
cltd
sub
lds
cmpb
add
xchg
ret
xchg
shll
mov
clc
and
stos
mov
shl
jecxz
aad
jnp
test
adc
dec
daa
inc
cmp
loop
cld
mov
jb
add
add
test
xchg
loop
dec
mov
mov
cmpl
sub
out
push
mov
sbbl
xorb
shlb
push
and
lcall
test
dec
pop
mov
and
dec
jg
cmc
sti
aas
dec
and
arpl
pop
ljmp
lods
mov
cmc
and
movsb
cmp
rol
mov
fisttpl
pop
sti
jl
add
in
lods
add
cmpb
popf
pop
divb
cmp
pushf
loopne
inc
adc
inc
mov
and
xchg
mov
lods
sub
push
out
loopne
sahf
bound
sahf
xor
pushf
add
mov
aaa
jns
mov
mov
jbe,pn
out
or
add
ret
sbb
out
lcall
and
adc
iret
dec
inc
or
dec
mov
xchg
insb
pop
sbb
into
dec
test
lret
ljmp
sub
add
inc
enter
adc
mov
xchg
mov
adc
xchg
rclb
mov
and
les
dec
bndstx
movsb
add
sub
and
inc
hlt
xchg
and
incb
in
hlt
ret
push
mov
aad
add
push
mul
and
add
bound
jne
and
push
loop
sbb
jp
jne
leave
xor
sub
pusha
mov
and
clc
adc
lds
sbb
mov
sbb
sub
idivb
iret
adc
les
add
lods
mov
mov
in
je
and
dec
push
test
std
sbb
mov
jns
xchg
and
and
out
jns
xor
inc
cmc
lods
or
push
xlat
popf
mov
aad
add
xlat
lds
shrb
inc
rorb
clc
fiaddl
ret
bound
adc
into
clc
and
idiv
fsubl
sub
out
add
add
arpl
mov
je
add
xor
aad
das
xor
xlat
dec
adc
in
loopne
and
add
lret
pop
and
mov
push
call
dec
cli
insb
mov
push
push
cmp
sbb
jne
seto
test
call
inc
inc
pop
mov
xchg
loop
out
sub
hlt
mov
nop
popa
iret
in
xchg
mul
xchg
mov
imul
sub
inc
xchg
clc
sbb
arpl
dec
cwtl
stos
out
push
dec
aam
mov
inc
dec
clc
or
es
xor
lret
sub
dec
inc
mul
xchg
sub
lods
sub
pop
dec
xchg
aaa
leave
jne
in
rolb
in
lods
aam
inc
pop
or
jg
dec
stc
dec
jmp
aad
push
adc
add
loope
enter
dec
adc
mov
sbb
mov
imulb
shlb
test
dec
jae
mov
mov
ljmp
mov
and
scas
inc
lret
jg
ds
xor
mov
sub
clc
orl
aad
enter
mov
add
sub
cmp
or
mov
iret
inc
into
je
adc
movsl
push
mov
sbb
and
filds
push
cli
dec
sub
int
xchg
out
nop
sbb
adc
das
lcall
popa
sub
punpckhbw
adc
dec
dec
or
push
push
cmp
lods
cmc
pop
push
pushf
inc
adc
rcl
orl
add
add
dec
jno
jecxz
push
sbb
ds
sub
jecxz
das
jg
dec
sbb
adcb
xor
mov
loop
mov
xorl
sti
imul
cmc
arpl
lret
inc
rcrb
sbb
pop
inc
setp
xchg
adc
in
aam
sbb
imul
mov
test
in
add
imul
int
inc
push
add
mov
xlat
jb
sub
push
shll
adc
mov
leave
xchg
inc
int3
cmpsb
test
int3
rol
push
inc
push
nop
jb
mov
push
inc
mov
and
test
iret
mov
and
sub
add
ret
and
pusha
xchg
aad
sub
pop
or
mov
pop
inc
into
sub
add
ljmp
insl
push
pushf
cs
lret
sub
sbb
fisttpl
shll
ljmp
mov
cmp
xor
es
and
outsl
or
mov
adc
andb
into
pop
mov
push
pop
loopne
push
mov
dec
sbb
mov
xadd
ljmp
mov
andps
in
push
lods
repnz
push
pop
mov
inc
in
jle
xor
out
jb
xchg
outsb
dec
jb
push
push
push
mov
pop
rorb
int
call
scas
cmpsb
xor
fldenv
aam
mov
cmpl
sbb
pop
jmp
xorl
jne
push
pop
add
xor
out
sbb
inc
std
or
lods
xchg
imull
test
leave
and
dec
popa
dec
mov
xchg
push
xchg
test
jg
and
and
hlt
test
out
cmpsl
fnsave
dec
or
loope
jnp
inc
out
ret
or
ret
sub
popa
lods
sti
sbb
jbe
mov
imul
sbb
or
rol
mov
mov
stos
loopne
sub
xor
clc
roll
dec
loop
mov
cmpsl
mov
and
mov
popf
hlt
push
int3
xchg
push
xor
filds
shrb
mov
fcompl
push
pop
mov
mov
and
pop
loop
pop
clc
clc
fists
dec
and
jmp
out
push
xlat
and
jae
cld
adc
push
mov
leave
xchg
lret
jp
loop
push
rorb
jns
lcall
cbtw
adc
mov
mov
cmp
lret
repnz
pop
xor
xorb
flds
loope
add
sbbb
cmc
je
sbb
dec
and
push
sbb
stc
lea
dec
adc
ret
inc
in
adc
and
xlat
enter
fildl
push
sbb
shrb
mov
xchg
test
pop
or
xor
lods
add
out
bndstx
xlat
int3
loope
mov
insb
push
mov
adc
jl
dec
rclb
rcl
outsl
in
rcrl
mov
mov
loope
mov
ret
add
in
mul
dec
mov
loop
scas
push
mov
xor
incb
out
inc
or
sti
adc
lea
mov
adc
ret
in
adc
popf
test
xor
cld
jmp
dec
or
rolb
xor
leave
dec
popf
mov
popa
fsubs
pop
or
xchg
push
xor
jmp
ret
rorb
mov
pop
push
arpl
stos
out
mov
jp
xor
xor
fbstp
les
aam
adc
push
inc
mov
negl
adc
test
ja
and
pop
addr16
ret
inc
xchg
clc
add
push
cmp
sub
pop
mov
lcall
outsl
fcmovne
sub
cmpsl
lea
push
push
insb
jno,pn
aad
loopne
shlb
repz
fsubrs
ss
faddp
sub
sub
xchg
inc
sub
pop
int
jne
cli
and
mov
xchg
xchg
out
ljmp
addr16
lds
push
inc
call
adc
cmp
int3
push
shll
adc
cmp
mov
hlt
push
insl
aam
rclb
push
add
test
rcrl
je
sar
jmp
loop
shlb
add
dec
lods
das
test
inc
xchg
sbb
dec
cwtl
dec
and
std
lret
loop
rorl
pop
xlat
xchg
add
push
lods
and
lods
add
mov
cmp
push
int3
and
fstl
add
add
jns
aam
ffreep
inc
dec
push
cmp
xlat
push
je
mov
xor
rcl
push
sub
imul
inc
out
scas
or
mov
stos
pop
aam
gs
dec
int3
pushl
push
push
jge
loopne
popa
mov
mov
and
and
xchg
inc
add
notb
add
sub
sub
test
pop
lcall
flds
out
int
lret
in
imul
test
imul
jne
mov
insl
fwait
outsl
or
popa
xchg
adc
pop
cmpsl
add
and
jb
or
shl
rcr
jae
sub
mov
stc
dec
cld
cmpsb
repz
std
ficoml
addr16
into
or
data16
push
dec
sub
pop
out
test
es
sbb
add
test
sti
pusha
dec
inc
sbb
push
inc
mov
iret
outsb
jns
inc
aad
and
test
aad
xor
rolb
das
mov
jb
repz
out
mul
sbb
push
inc
inc
cwtl
cmp
ss
pop
pop
cmp
je
mov
lods
call
add
xchg
mov
mov
adc
add
xchg
push
test
fbstp
push
int
test
pop
inc
pop
jge
jno
sbbb
and
pop
push
add
cmpsb
adc
loopne
stos
rol
or
dec
jecxz
hlt
test
je
pop
in
pop
cmp
jle
sbb
fisubl
or
out
cmpl
test
pop
imul
cmc
and
ret
push
test
adc
les
lret
push
xlat
xchg
insb
jno
adc
ja
lods
stc
clc
mov
jnp
ss
addr16
lcall
push
pop
fildl
out
lods
loop
inc
roll
sbb
or
cvtdq2ps
dec
push
dec
cmpsb
xchg
fbld
jg
into
roll
mov
out
filds
mov
push
fsubl
and
arpl
test
ror
scas
add
and
dec
lods
adc
cmp
mov
pushf
add
sbb
add
add
es
push
popa
push
push
push
aaa
pop
clc
mov
gs
inc
rcl
push
or
mov
sti
inc
mov
fdivrs
ret
dec
jg
cmp
je
mov
iret
into
test
mov
clc
jb
and
pop
popf
mul
or
pop
rclb
outsb
ljmp
out
push
jnp
adc
dec
je
out
inc
mov
xorb
push
xchg
lock
xorl
and
jl
cmp
jge
ljmp
lods
faddp
and
out
jb
aaa
dec
and
jge
jb
sbb
add
dec
sti
mov
outsl
add
jne
dec
add
divl
lret
pop
mov
divl
xor
std
rorb
enter
mov
pop
loopne
add
gs
pop
dec
imul
addb
jle
je
and
clc
xchg
ret
lret
and
inc
sbb
std
mov
stos
out
and
inc
and
iret
les
clc
jno
xchg
sub
pop
jp
sub
sub
xchg
dec
ss
neg
and
sub
xchg
in
inc
adc
add
es
loop
xlat
in
leave
ficoms
dec
repz
sbb
test
int3
je
sbb
aad
lea
sub
les
int
lods
sub
sti
cmp
sbb
inc
lock
sbb
clc
and
lret
les
or
add
iret
fstl
cmp
dec
lret
inc
dec
and
and
aad
and
orl
lods
push
mov
das
int3
or
leave
jecxz
aam
dec
and
stc
lret
and
xlat
shlb
cmp
mov
dec
push
mov
test
xor
or
rol
cltd
dec
mov
jae
cmp
aaa
adc
lods
fstl
mov
push
xor
and
jb
and
out
mov
cltd
lcall
sbb
nop
cmp
das
sbb
push
pushf
cmpsl
cmp
repnz
and
xchg
lret
adc
push
jmp
mov
adc
ljmp
inc
dec
ret
sub
push
movsb
cmp
inc
xor
rorb
jbe
add
xchg
add
or
sbb
out
or
or
std
test
jmp
xchg
xchg
loope
pop
and
in
outsl
in
mov
out
xchg
aam
push
and
inc
rorb
cmp
xor
jns,pn
jb
xchg
jbe
lea
popf
mov
das
add
mov
sub
fs
pop
pop
loope
adc
aad
jno
iret
jge
rcll
in
pusha
fwait
in
mov
lret
jo
xchg
sub
fsubrs
int
add
in
mov
sbb
lret
cmpsl
add
mov
sbb
inc
mov
sub
or
pop
jp
and
hlt
aad
and
and
cmpsb
push
pmuludq
inc
xchg
pop
push
das
loope
adc
loope,pn
mov
cmpsb
push
xchg
push
rclb
sbb
push
data16
outsl
adcl
pop
inc
add
xchg
mov
movsl
and
xor
xchg
inc
test
clc
inc
je
bound
bound
adc
ljmp
in
pop
or
pop
in
orl
jns
jbe
ret
add
test
xor
dec
stos
add
adc
or
dec
dec
int3
pop
and
movsl
int3
in
jmp
pop
cmpsb
or
inc
je
test
outsl
hlt
jne
addr16
or
aam
push
imul
test
mov
movsb
out
xchg
or
push
and
orl
mov
ret
or
mov
and
and
lahf
in
adc
mov
orb
inc
dec
ret
insl
jge
dec
andb
dec
jmp
and
adc
pop
and
mov
cwtl
roll
mov
dec
lret
push
add
push
pop
cmpsb
movsb
adc
jg
int
mov
pop
out
bound
dec
lea
xchg
shll
xor
cwtl
xchg
imul
fs
push
scas
mov
mov
addl
xchg
sub
cs
sub
mul
dec
xor
xchg
jge
mov
mov
jmp
mov
and
inc
aam
insl
adc
out
rcrl
and
cli
xchg
dec
test
sbb
mov
repz
pusha
dec
lcall
ljmp
inc
out
or
lcall
addr16
jmp
mov
push
loop
dec
fnsetpm(287
push
shll
sahf
fcom
dec
or
rcll
popa
jge
xchg
inc
sub
dec
mov
ret
mov
adc
test
iret
xchg
shll
push
jecxz
test
dec
xor
jbe
stos
xchg
rcrb
in
and
sub
mov
outsl
lods
pusha
test
into
or
hlt
in
push
roll
scas
imul
inc
adcb
and
xor
inc
cmp
xlat
cmp
push
iret
pop
ja
movsb
sub
int3
xchg
loopne
into
adc
sub
pop
and
stos
mov
negb
notl
mov
hlt
jnp
stos
ficoml
es
subl
cld
adc
enterw
sub
inc
sub
and
pushaw
adc
aas
mov
sub
mov
mov
inc
push
adc
xor
cmpsb
in
dec
inc
xchg
sti
xor
fldl
xchg
iret
cli
outsl
xor
mov
int3
fdivl
insl
int
push
stos
mov
aam
or
pop
push
dec
jbe
mov
hlt
sti
jne
inc
and
div
push
inc
lret
ja
sub
sub
adcb
jbe
mov
into
int3
mov
and
outsb
adc
or
orb
adc
std
mov
sysexit
mov
popf
mov
xchg
rcr
call
aam
mov
mov
push
dec
sbb
and
inc
push
call
xor
popa
push
or
mov
xchg
repnz
out
pop
je
mov
ret
aam
inc
lret
cwtl
mov
push
xchg
ss
divl
push
pop
jg
jge
push
dec
arpl
mov
ret
imul
dec
je
or
xchg
xchg
je
inc
add
and
xchg
inc
inc
xor
int
jecxz
mov
add
inc
test
popa
push
stos
rcll
push
and
out
inc
inc
dec
mov
stos
insl
lahf
and
inc
test
flds
les
rclb
dec
pop
cmp
xlat
pop
mov
dec
inc
enter
xrelease
fbstp
iret
lcall
cwtl
int3
sub
adcb
sub
jnp
in
xchg
ret
imul
movsb
cmpsb
add
sub
outsl
rcll
mov
xchg
scas
mov
and
jne
dec
pop
xchg
xor
lret
sub
adc
mov
mov
fists
push
loope
sub
push
and
jle
and
inc
lcall
mov
mov
inc
push
loop
inc
sbbw
sub
dec
xchg
mov
loopne
inc
and
jbe
xchg
add
pop
inc
cmp
or
push
push
push
push
and
out
xchg
lahf
dec
ficoms
arpl
outsl
in
mov
mov
cmp
dec
out
inc
xor
enter
gs
shll
dec
int3
sub
shll
dec
arpl
ss
pop
ja
test
and
lods
jae
insb
aam
inc
inc
andb
sbb
lea
push
test
mov
test
ja
adc
and
lea
dec
sahf
cmpsl
stc
insb
sub
cmp
repz
repnz
mov
and
cmp
add
leave
out
je
outsb
mov
add
movsb
outsb
mov
fistl
aad
sbb
arpl
sbb
inc
test
test
jbe
dec
inc
rorb
inc
inc
mov
jge
stos
push
hlt
aam
ret
imul
ljmp
test
xchg
xchg
jmp
shll
push
xchg
xor
dec
adc
fmuls
dec
xor
xor
lods
ds
mov
sbbl
inc
xor
outsl
mov
mov
push
stos
and
pop
dec
es
pop
dec
mov
pusha
xor
lcall
rcl
inc
cs
cmp
jnp
scas
lods
adc
jno
roll
enter
adcb
mov
test
clc
dec
and
and
pop
and
aaa
jge
add
icebp
xchg
inc
xor
je
je
inc
or
jp
sub
sub
and
jnp
xchg
xchg
jbe
and
pop
ja
outsl
add
pop
ret
aam
xor
fldenv
mov
loope
inc
adcl
and
in
sbb
and
cltd
jb
lret
outsb
adc
pusha
mov
inc
xchg
fsubrl
nop
hlt
and
shrb
notb
dec
daa
inc
cmp
sub
push
aam
loop
xor
push
cld
das
scas
or
add
in
je
in
push
inc
in
mov
fists
mov
jae
aad
ja
jge
iret
test
inc
scas
jecxz
cmpsb
mov
add
sti
les
and
xor
mov
pusha
mov
ret
jbe
sub
adc
xchg
push
roll
mov
repnz
mov
and
adcl
inc
ss
fadds
and
add
insl
add
or
addr16
push
or
add
std
test
lock
out
inc
movsb
cmp
pushf
mov
sub
or
cmp
inc
repz
hlt
movsb
addr16
xchg
lods
adc
push
and
cmp
out
rcr
int
in
out
lds
imul
and
cmp
lods
or
sub
xor
dec
sbb
xchg
test
push
fxch
or
insb
shlb
test
hlt
clc
in
je
push
cmpsb
lods
mov
imul
scas
inc
pop
or
push
add
addl
iret
push
mov
ret
sub
and
xchg
es
dec
and
clc
insb
and
inc
cmpsb
dec
mov
xchg
out
cmp
dec
stos
je
cmpb
and
fldenv
mov
mov
js
xchg
mov
fsubs
loop
dec
repz
call
pusha
lock
out
shlb
rclb
xlat
repz
pop
mov
ret
push
lret
adc
adc
sub
mov
inc
test
sub
pushf
mov
add
ret
sub
movsl
xchg
imul
sub
testb
outsl
add
mov
cmp
outsl
push
dec
mov
ds
mov
inc
and
dec
stc
and
out
mov
and
adc
dec
mov
xor
sub
add
and
or
and
data16
pusha
and
sub
add
shlb
gs
fisubl
push
mov
hlt
gs
add
push
push
adc
out
aam
fs
xchg
xor
xchg
enter
dec
mov
dec
dec
out
fisttpll
jns
sahf
enter
imulb
ljmp
push
decl
std
sbb
xchg
mov
loope
xchg
xor
xor
dec
enter
and
dec
and
int
cmpsl
pop
loopne
cmpsb
push
inc
cmp
dec
xor
shll
test
inc
mov
xor
xchg
xor
loope
or
outsb
daa
mov
xchg
cwtl
ret
dec
mov
mov
or
sub
lcall
xchg
shlb
dec
les
mov
ja
xchg
cmpsb
iret
xor
js
ds
xchg
cmp
mov
xlat
data16
jecxz
jns
jne
jns
sub
std
xchg
jmp
inc
in
sub
insl
or
or
dec
iret
notb
and
inc
and
cmp
shrb
push
lahf
in
fbstp
xor
ret
dec
mov
mov
xor
push
xchg
scas
pop
leave
mov
filds
rcl
loopne
sub
inc
sub
pop
sub
mov
sub
test
stos
xchg
jb
nop
mov
scas
sub
mov
jge
push
in
lret
push
push
ret
out
loope
pop
and
and
and
je
sub
inc
add
leave
incl
fsubr
jecxz
push
mov
sbb
in
cmp
mov
rcr
mov
pop
sub
or
push
and
ret
loopne
and
adc
inc
insl
xchg
lret
add
loope
int
mov
xchg
lea
loope
lds
rcl
int3
jae
sarb
sub
ljmp
je
leave
subb
or
ret
xor
mov
ja
mov
ret
or
push
sarl
xchg
test
leave
inc
das
mov
add
add
mov
sub
aam
add
rol
cmp
adc
sti
es
shll
push
out
ficoml
mov
iret
adc
std
or
stos
or
xchg
and
inc
mov
stos
inc
pop
xor
leave
push
and
and
push
addr16
cld
ja
sub
jecxz
push
inc
pop
push
push
jb
add
mov
mov
adc
and
xchg
jg
and
imul
sub
pusha
mov
sbb
shr
outsl
int
xor
dec
or
pop
sub
and
dec
pop
mov
inc
dec
jl
outsb
mov
insl
adc
and
adc
sarb
in
or
jmp
sbb
push
data16
outsb
orb
push
jnp
ja
sbb
out
dec
outsb
push
sub
sub
and
inc
xor
lret
and
je
enter
inc
ret
cmp
loop
loop
jge
xchg
inc
test
mov
lea
sub
add
cmp
push
add
stos
mov
insb
xchg
fucomp
push
dec
je
sbb
inc
popf
dec
repnz
mov
insl
push
out
dec
sbb
ret
in
cmpsl
lock
stc
or
mov
dec
movsb
lds
pop
jecxz
mov
psrld
test
sub
jp
stc
lods
cmpb
movntq
rolb
adc
pusha
pop
and
and
inc
or
lret
fwait
inc
xor
mov
mov
inc
push
imul
and
mov
test
mov
add
cmp
in
dec
aaa
cmpsl
das
test
pop
and
aaa
inc
loop
or
sbb
loop
leave
dec
dec
out
out
or
roll
mov
fnsave
lods
ret
mov
jecxz
xchg
dec
dec
and
push
add
sub
dec
push
aaa
mov
je
and
and
stos
sahf
adc
and
sub
cmc
or
and
pop
inc
imull
inc
les
dec
add
push
pop
mov
inc
adc
push
mov
jmp
sub
mov
push
xor
mov
dec
dec
stos
in
lods
push
mov
roll
out
inc
das
mov
inc
and
lods
cmpsb
leave
ljmp
adc
dec
add
dec
test
jne
push
jbe
hlt
adc
inc
test
loopne
jg
xchg
test
jne
add
mov
loopne
out
adc
int
add
push
sub
out
out
test
xchg
leave
add
inc
iret
jg
mov
mov
into
mov
mov
sbb
and
inc
sahf
or
addb
push
hlt
add
jo
in
test
inc
or
dec
and
aas
or
adc
add
push
mov
sbb
sbb
pop
inc
sub
negb
ret
mov
sub
dec
mov
repz
movsb
xchg
addr16
cs
add
cmp
and
mov
pop
shlb
jns
inc
out
inc
sbbl
sub
loope
push
push
lods
or
pop
fistl
xchg
mov
xchg
cmp
xor
xchg
test
xchg
add
imul
fidivrs
test
and
add
out
incb
mov
cmc
cwtl
adc
rep
jmp
pop
pop
shlb
and
cmp
add
xlat
mov
shrl
mov
enter
cld
xor
adc
rclb
out
dec
push
ds
test
rorl
stos
je
mov
aam
rclb
je
dec
icebp
imul
pushf
push
lret
mov
iret
mov
jmp
stos
pop
es
pusha
mov
cmp
out
lods
cmp
xchg
andl
test
cmp
push
lea
push
sub
shl
je
sub
into
inc
fadds
test
movsb
fisubrl
pop
push
jmp
inc
sahf
sub
or
in
cmpsl
pushf
sbb
leave
sub
jg
sub
pop
push
adc
add
xchg
fisubs
in
popa
hlt
in
cmp
or
mov
xor
stos
clc
daa
lods
inc
mov
dec
rorl
cld
push
sub
xchg
dec
sub
ss
mov
and
in
adc
jecxz
cld
ret
pushf
push
sub
stos
xor
lret
hlt
cmp
mov
je
mov
lcall
push
mov
adc
inc
push
in
test
xor
inc
add
xchg
pushf
cmpsl
adcb
push
fisubs
cmp
xchg
dec
jmp
in
out
xchg
xchg
sarb
dec
idivb
in
pop
push
test
push
adc
imul
inc
movsb
ds
push
ja
fstpt
div
inc
mov
inc
cmp
cltd
sbb
loope
adc
movsb
cwtl
dec
movsb
ret
mov
push
add
fmuls
pop
clc
and
xor
sub
adc
inc
push
loope
repnz
mov
dec
in
clc
imul
add
ret
mov
dec
cwtl
dec
hlt
or
and
jne
pop
fwait
cmp
xchg
loop
mov
push
cmp
not
hlt
mov
test
adc
xchg
imul
mov
int
or
js
clc
mov
cwtl
fadds
push
or
and
ret
in
es
jne
int
adcb
mov
mov
and
daa
push
fs
xor
repz
ret
addb
push
jmp
cmp
test
arpl
mov
sub
fcmovnbe
negl
arpl
stos
pusha
rcrb
push
loop
mov
loop
test
cli
ljmp
dec
lahf
loop
arpl
jecxz
lret
push
inc
loop
jmp
fisttpll
jmp
sub
loop
sub
push
hlt
or
pop
inc
sahf
jbe
loope
loope
pop
sbb
ljmp
insb
mov
je
pusha
clc
push
ret
loop
push
out
inc
sub
cmp
push
loope
xchg
sbb
sub
dec
test
pop
das
insb
in
out
sub
scas
jbe
jbe
jmp
je
push
imulb
push
fwait
lahf
pusha
cmp
xor
ss
cmc
cltd
je
xor
sub
push
lods
test
push
enter
je
shl
cs
enter
push
stos
popa
pop
popa
mov
push
jne
imul
mul
ljmp
call
xlat
xor
imulb
sub
push
mov
push
out
push
pusha
shlb
ss
nop
lds
and
and
daa
mov
stos
xor
loop
out
fnstenv
and
inc
loop
inc
sub
sub
sub
aad
les
push
out
mov
dec
sub
hlt
aaa
mov
insb
mull
daa
jb
xchg
pusha
daa
sub
sub
loope
outsl
loop
cmp
sub
je
int
in
push
loop
stos
stos
jmp
not
insl
pop
mov
inc
and
add
xchg
out
jbe
test
loope
sub
ljmp
cmc
pop
outsl
popa
dec
xchg
and
ljmp
xor
jmp
scas
mov
cltd
outsb
loop
sub
loope
pusha
xchg
xor
xor
scas
aaa
xor
adc
mov
arpl
sbb
mov
sbb
out
dec
repnz
xchg
fidivl
out
in
jno
popa
incl
cli
mov
mov
fildll
shl
add
rcl
inc
add
adc
ja
sub
adc
or
add
out
mov
sbb
adc
or
xchg
stos
sub
adc
adc
rclb
xor
repnz
in
repnz
pusha
addr16
stos
cmp
repnz
adc
push
mov
mov
loope
jo
mov
jbe
xchg
adc
stos
idivb
movsb
push
repnz
dec
cmpb
repnz
jmp
lahf
inc
outsb
lahf
push
pop
xchg
jg
test
xor
pop
fs
in
jg
ret
add
test
cmp
arpl
add
cmpsl
iret
fcoms
fbld
cmp
gs
mov
repnz
dec
outsl
mov
mov
enter
and
cmp
xchg
repnz
push
aas
pop
popa
xor
int
sahf
fidivrl
popl
and
mov
ss
jecxz
shlb
ret
jo
ss
sbb
loope
not
push
push
outsl
mov
and
xchg
jecxz
cmp
mov
add
imul
hlt
cmp
loope
xlat
cmpsl
push
xor
mov
xchg
popa
add
sarb
loop
dec
shlb
aaa
xor
xor
jecxz
stos
addl
push
pop
orb
and
jl
pop
xor
add
and
negb
int
mov
fucomp
inc
ds
aaa
and
inc
cmc
in
je
xchg
repnz
sarb
mov
out
mov
cltd
aaa
nop
mov
fimull
dec
xchg
adcl
lret
mov
push
popa
hlt
repnz
xchg
sub
mov
xchg
in
fstps
or
and
sbb
add
fisttpll
out
add
ret
dec
aaa
pusha
shr
out
es
arpl
nop
lretw
push
cmpb
in
push
inc
imul
test
test
jp
xchg
push
ja
sbb
xchg
out
push
mov
dec
fistps
push
addl
adc
jl
xchg
add
push
in
push
mov
sub
push
dec
xor
or
hlt
push
mov
jbe
loopne
mov
mov
mov
mov
mov
mov
ret
dec
xor
rcl
hlt
add
lods
fbstp
xchg
insb
popa
adc
test
test
mov
cmp
repnz
lret
rclb
cs
inc
into
mov
call
mov
fs
cltd
push
xor
xchg
mov
add
inc
mov
adc
imul
rol
dec
mov
popf
ljmp
out
jl
in
push
push
jecxz
mov
sbbl
sbb
jg
pop
mov
dec
sbb
fidivrl
inc
aas
push
xchg
fistpll
xor
dec
sbb
jge
repnz
out
dec
out
jl
push
jmp
xchg
aam
sbbl
sbb
jb
shll
shl
outsl
subb
inc
jne
dec
cmc
mov
dec
and
dec
sbb
imul
ss
in
popa
divl
lea
push
hlt
fisttps
out
jne
sub
je
mov
stos
adc
test
xor
nop
add
pusha
mov
rclb
pop
adc
addr16
push
cs
jge
pop
cmp
outsb
popf
dec
repnz
gs
imul
movsl
int
outsb
scas
out
cltd
and
outsl
fists
stos
sub
cmc
fs
and
push
subl
lret
xchg
imul
mov
push
mov
pop
outsb
jbe
test
add
xchg
push
out
sub
fisubl
cmc
aaa
testl
movsl
mov
sub
push
flds
cmp
orl
pop
inc
popa
jae
sahf
sbb
bswap
xor
xchg
orb
out
neg
xlat
stos
test
xchg
xchg
mov
jo
jl
les
cmc
scas
mov
xchg
cmpsb
test
test
lret
stc
jb
aas
stos
iret
mov
xor
add
ss
out
inc
inc
rorb
or
cmp
inc
mov
adc
pop
ret
lea
fwait
mov
pop
push
mov
adc
jbe
enter
fstps
loope
lahf
inc
scas
xchg
ss
outsb
shlb
fwait
xorl
outsb
pop
dec
aam
sub
mov
sub
sub
dec
cmp
shr
and
adc
lods
js
les
ja
xor
shlb
rorb
jb
je
or
ljmp
nop
jb
pusha
popa
cmc
xchg
outsb
pop
sbb
in
pop
jae
push
ds
insb
daa
arpl
sub
lret
mov
out
lret
jbe
pop
push
push
std
or
jbe
ds
pop
pop
mov
mov
sub
mov
inc
mov
cmc
sbb
jmp
add
pop
xor
sub
inc
and
xchg
lock
frstpm(287
jmp
nop
fldl
sub
enter
xor
in
iret
mov
mov
inc
setne
dec
cli
adc
xlat
xchg
and
div
add
push
jge
ficoml
ror
dec
lret
iret
adc
je
add
push
loope
imul
loop
or
ret
xchg
sub
mov
mov
ss
add
sbb
rcll
nop
adc
mov
sub
xchg
cmp
push
and
and
shlb
xor
ret
dec
adc
js
fbstp
jbe
sub
pop
or
xchg
loope
inc
sub
ljmp
fildl
pop
enter
pop
mov
xchg
scas
xor
hlt
out
pop
stos
nop
cmp
push
cli
subl
in
lret
icebp
ret
nop
rcrl
movb
pushf
jle
ficoml
cmc
ljmp
add
add
nop
lods
add
lcall
pusha
fcmovb
mov
ds
mov
mov
fsts
add
add
js
jl,pn
jl
sub
ficompl
test
dec
imul
adc
scas
hlt
addr16
xchg
push
ljmp
push
fbld
jnp
roll
sti
cltd
mov
pusha
das
dec
fiaddl
dec
fstps
mov
dec
jae
daa
cli
das
mov
divb
mov
jbe
cmpsl
mov
and
inc
inc
mov
outsb
jae
mov
gs
xor
xchg
es
xor
shrl
jg
das
lret
filds
xchg
insl
and
sbb
enter
outsl
xchg
pmaxub
xor
add
dec
xor
mov
push
cmc
inc
out
outsb
mov
pop
push
inc
push
push
mov
pop
adc
fwait
xchg
das
rorb
popf
arpl
bnd
pusha
lret
mov
fsubr
jmp
incb
xor
in
and
sub
mov
xor
idivb
fcompl
xchg
lret
mov
fwait
push
test
dec
mulb
cmc
mov
out
lahf
outsb
shr
add
mov
mov
fwait
into
nop
inc
dec
gs
cmc
into
outsb
pop
mov
sbb
repnz
es
into
sti
repnz
pop
jne
fwait
aas
les
push
je
push
out
jno
jbe
and
and
xchg
cmp
fimull
sbb
ret
shl
fwait
insb
jl
data16
adc
out
push
jbe
mov
shlb
and
iret
out
push
jbe
out
fisubrs
sub
cmpsl
loop
jbe
and
sbb
inc
mov
jae
jbe
sub
cmp
cmc
loope
jbe
jne
stos
pop
sub
mov
repnz
add
mov
jnp
movsl
xchg
popa
and
notl
or
stc
adc
jl
push
das
in
jl
cmp
frstor
fwait
cmc
push
rorb
jne
jge
jno
inc
sub
bound
inc
es
mov
dec
xor
sub
je
xlat
stc
lret
jb
inc
pusha
not
hlt
stos
and
out
xchg
nop
sahf
out
mov
sbb
pop
aad
aas
testl
addr16
pusha
insb
in
repz
cmp
bound
add
out
sbb
dec
lds
sub
xchg
fidivl
ja
push
or
dec
cmp
mov
es
mov
mov
pop
pop
movd
dec
jnp
jg
aaa
rcr
mov
hlt
xchg
cmp
jge
shrb
and
xchg
js
dec
sbb
and
dec
loopne
out
icebp
or
sbb
lahf
sbb
ret
inc
std
mov
dec
aam
jl
cmp
pusha
ret
xchg
in
cmp
lock
jl
das
xchg
jbe
push
test
and
loope
mov
and
push
cmp
outsb
lret
jecxz
jbe
mov
mov
push
movsl
sbb
sti
jmp
mov
outsb
xchg
test
pop
repz
fs
add
in
xchg
sti
in
jmp
shlb
insl
shrb
jge
and
jnp
jo
sbb
pop
shl
rcl
sbb
hlt
loopne
test
imul
mov
sarb
push
jecxz
pop
sbb
cmpb
inc
jo
inc
das
push
inc
loopne
mov
repnz
xchg
outsb
lds
xchg
popf
xadd
mov
stos
imul
cmc
fdivs
dec
in
insb
inc
and
jb
dec
cltd
rolb
mov
in
push
push
sub
pusha
adc
cwtl
inc
cmovns
jbe
xor
mov
mov
mov
sbb
outsl
jecxz
out
push
push
popa
mov
das
mov
add
pushl
repnz
negl
xor
pop
pop
dec
loopne
hlt
dec
jecxz
mov
outsb
bound
inc
repz
jle
in
fcoms
adc
scas
nop
and
mov
mov
ljmp
mov
push
stos
sub
addr16
push
in
div
imulb
fidivrl
jne
or
stos
outsl
mov
dec
adc
cmp
fidivl
xor
subl
enter
lcall
ror
fnstenv
aaa
nop
fidivrs
sub
loopne
mov
jbe
insb
inc
mull
inc
xor
ljmp
dec
and
cmp
add
aam
mov
xor
lods
inc
lret
add
adc
jecxz
adc
mov
inc
aaa
inc
mov
imul
mov
nop
addb
sbb
fbstp
fwait
div
leave
mov
or
mov
divb
push
sub
push
ja
inc
mov
subl
pushl
mov
mov
xchg
cmpsb
push
out
loopne
mov
cld
adc
cmc
mov
out
xchg
rcrl
mov
popf
jbe
notb
dec
pop
inc
mov
and
cmp
mov
repnz
ret
mov
fistpll
or
out
mov
sub
shll
in
js
shrb
dec
xchg
pushf
test
xchg
mov
imull
int
and
xor
push
lea
mov
mov
cli
and
addr16
int3
mov
mov
sbb
rolb
push
fisubs
sub
out
rcrb
dec
insl
jbe
adc
and
mov
mov
std
sbb
mov
add
loope
movsl
push
or
stos
into
inc
cli
add
ds
aam
fsubl
ret
stos
fisubl
and
adc
mov
je
push
es
ret
xor
and
adc
pop
cmp
addr16
xchg
sub
shl
fwait
popl
in
loope
sti
rcrb
hlt
fs
inc
mov
jg
aad
andb
sub
sti
jo
fcmovnu
jl
jg
sbbb
sub
mov
push
or
ficoms
idivl
sahf
ret
pop
fiaddl
jg
sbb
add
inc
xor
fcmovu
das
or
mov
xchg
stos
sbb
xorl
push
clc
fisttps
dec
ror
adcl
jmp
sub
outsb
or
rcrl
out
or
sbb
sti
mov
inc
mov
push
sarb
xchg
jecxz
mov
dec
insb
gs
cli
hlt
pop
pop
xchg
cmpl
popa
jne
mov
orb
test
cltd
xchg
cmc
jmp
ret
sub
xor
outsb
jb
push
mov
stos
stc
test
xchg
subl
bound
cmp
popf
fisubl
fisttps
add
push
jo
ss
dec
add
outsb
cld
pop
adc
in
out
jbe
jmp
insb
sbb
inc
push
mov
pop
inc
das
stc
cmpsb
loope
xor
pop
mov
dec
enter
jmp
popl
insb
sbb
das
clc
or
popf
push
lret
add
sbb
mulb
pop
cmp
jb
lret
cmpl
sar
movsb
mov
pop
or
xor
pop
xchg
and
idivb
push
fsubl
scas
cmp
insl
pop
push
testl
jmp
cmc
lret
pusha
rcr
sbb
icebp
jbe
out
xchg
xor
jbe
sbb
rolb
xor
in
mov
inc
rorb
jge
out
and
stos
add
inc
loope
outsb
and
mov
lock
ret
ds
fildl
xor
jg
lea
cmp
fbstp
pop
inc
inc
adc
add
loop
bnd
scas
dec
aam
mov
fistpll
inc
in
pop
mov
nop
das
lahf
aaa
sbb
test
imul
hlt
aaa
loop
and
jne
cmp
push
pop
or
and
xchg
in
rorb
cmp
insb
popa
shl
addl
js
xor
dec
pusha
push
hlt
scas
fcoms
lea
add
stc
push
outsb
and
ljmp
stos
cwtl
xor
jnp
jecxz
imul
fidivrl
call
lods
ss
sub
jne
outsb
fabs
bound
sbb
loop
and
inc
mov
add
push
inc
inc
lahf
pop
lret
jne
lret
mov
stos
mov
xor
sbb
push
jge
inc
popa
jbe
ror
adc
out
dec
cmpsl
sub
pop
or
sub
pop
mov
push
out
arpl
lahf
pusha
xchg
add
adc
pop
jg
dec
push
outsb
icebp
sub
cmp
leave
and
jns
xchg
xchg
cmp
insl
outsb
sub
bound
inc
push
xor
sbbb
in
mov
es
movsl
push
jbe
push
lcall
adc
dec
movsb
jmp
mov
cmc
adc
stos
add
or
int3
ds
js,pn
in
add
in
adc
sarb
add
test
push
sbbb
inc
fadds
lret
pusha
pop
out
sbb
test
xchg
shll
lds
test
in
mov
lcall
sbb
das
insb
into
aas
pop
sub
popf
es
in
adcl
ja
in
ds
mov
and
fisubrl
pop
fwait
xor
ja
mov
jl
jmp
sub
jge
xchg
mov
mov
lock
stc
lods
cmpsl
sub
rcrb
fmul
cmp
scas
outsb
jp
cli
mov
ds
inc
popa
repnz
hlt
xlat
jmp
std
lods
jno
inc
stos
outsb
sbb
in
mov
loope
mov
xchg
setg
xor
shr
push
and
jmp
pop
push
jl
popa
and
jmp
lods
jecxz
decb
xor
jle
cmc
jnp
testl
mov
adc
insl
inc
pop
adc
addl
decl
xchg
addr16
ja
xchg
ja
sbb
movsb
out
pop
popf
sub
push
lahf
dec
roll
push
sub
je
sub
aaa
push
xor
xor
inc
jbe
lock
out
insb
rcrl
dec
jne
xor
insb
sbb
jbe
mov
push
sub
out
jb
and
pop
inc
mov
mov
inc
or
mov
outsb
test
dec
push
in
pop
push
inc
js
cmc
rclb
mov
out
dec
sti
popa
pop
inc
jmp
jb
mov
mov
andl
stc
xchg
mov
push
repnz
mov
rorb
addr16
xlat
xlat
div
push
pop
jne
pop
or
fidivrs
lods
cmc
inc
dec
ljmp
ficoms
jbe
xchg
or
repnz
arpl
xor
jmp
sbb
add
test
into
sbb
cmp
push
cs
sub
adc
outsb
mov
mov
popa
jmp
repnz
outsl
pop
inc
dec
and
jbe
cmovge
cmp
aam
in
push
hlt
daa
push
push
xchg
stos
lcall
mov
pusha
nop
or
aaa
pop
add
addl
xor
imul
sarb
push
pop
jmp
das
cmp
adc
add
out
xchg
dec
bound
push
jge
xchg
dec
and
sbb
iret
nop
dec
mov
loopne
add
repz
jmp
xor
add
ret
and
inc
ds
adc
dec
mov
adc
mov
and
xchg
dec
ja
or
subb
rorb
outsl
jl
iret
adc
stos
cmp
insb
and
mul
jmp
hlt
aas
pop
push
rorl
dec
sub
xor
mov
hlt
gs
out
cld
cmp
mov
popa
sub
dec
pop
inc
test
stos
je
out
push
sub
inc
insb
rolb
pushl
add
xorl
push
orl
decl
data16
mov
ja
mov
jae
cld
outsb
pop
xor
sub
into
lea
jle
mov
inc
in
mov
lret
and
outsb
adc
sub
cmp
pop
in
pop
inc
int3
aas
sub
test
mov
out
cmpsb
outsl
and
sub
sbb
stos
imul
lock
sub
mov
cmc
outsb
and
imul
push
lahf
mov
std
loop
cmp
outsl
invd
add
popa
pop
jecxz
xor
fwait
and
psraw
imul
stos
insb
push
mul
push
andl
outsb
mov
dec
mov
movsb
scas
and
dec
sub
mov
mov
fbstp
mov
sub
or
test
xchg
xchg
ljmp
mov
jns
out
movsl
mov
xor
test
arpl
or
aaa
pop
add
xchg
shrb
ret
clc
cmp
mov
jl
xor
pop
mov
jo
cmp
mov
in
aas
inc
outsb
sbb
xor
fimull
bound
mov
jp
mov
push
cmpsl
xchg
pop
sub
daa
stos
testb
cmc
pusha
mov
mov
mulb
lock
mov
popa
push
or
xchg
loop
and
push
sbb
dec
xchg
loope
push
mov
sbb
pop
test
inc
idivl
jbe
test
adc
or
dec
out
fidivs
ljmp
push
mov
fcomps
cli
and
icebp
mov
fsubrl
fbld
nop
popa
or
push
stos
ja
in
dec
and
daa
or
mov
sbb
mov
push
and
xor
hlt
push
lcall
or
cwtl
loop
bound
jnp
subl
loope
shlb
mov
shll
adc
mov
dec
rorb
sbb
cwtl
or
repnz
push
cmpsl
nopl
pushw
xor
cmp
jbe
push
arpl
xchg
addr16
push
lods
xchg
cmc
dec
adc
hlt
xchg
mov
leave
ret
jmp
jne
inc
xchg
add
hlt
sub
imul
add
push
nop
push
jl
push
xlat
jmp
test
push
sbb
fisubrs
sub
testl
cmc
or
aad
sbb
popa
jmp
adc
imul
hlt
cwtl
roll
and
pop
jne
push
xor
pop
cmc
dec
lret
inc
hlt
dec
insl
pop
loop
testb
mov
pop
ret
hlt
xchg
outsl
and
fwait
jae
ss
mov
shr
and
and
pop
arpl
cmp
dec
and
notl
in
lds
sahf
outsl
inc
adc
jne
dec
icebp
ret
outsb
sbb
mov
sbb
out
aaa
pop
jb
bound
push
adc
rcl
or
push
mov
pushf
pusha
pop
shll
rclb
pop
sub
and
cmc
mov
pusha
pusha
outsb
adc
push
lret
js
mov
leave
loopne
mov
sub
outsb
xchg
pop
xor
jno
ds
sarl
das
or
hlt
stos
fcmove
icebp
xchg
cli
cmp
ljmp
test
inc
jmp
ret
scas
aaa
jecxz
jns
loopne
sub
adc
rcrb
xchg
mov
test
shrb
loope
and
aad
push
mov
repz
cmp
cmpsl
outsb
test
stos
in
repnz
addr16
gs
xchg
ret
jge
xchg
mov
sub
and
xor
loopne
lea
jae
sarl
cs
push
test
out
sbbb
js
and
dec
ljmp
and
mov
in
push
shlb
add
and
pop
push
pop
hlt
ss
insb
shlb
xchg
fs
cmp
outsb
pusha
dec
out
inc
pop
imul
out
outsl
dec
adc
xchg
outsb
push
cmp
cmp
and
jnp
pop
inc
and
icebp
xor
pop
movsb
mov
xorb
cmp
xchg
push
sbb
cs
xor
sbb
gs
and
cli
call
rcl
lods
incb
push
mov
xor
test
enter
push
mov
icebp
rcll
cld
or
int3
push
push
sbb
movsb
subl
fwait
iret
gs
shlb
das
mov
add
push
stos
and
mov
push
pop
mov
cmc
push
cmc
dec
jbe
int
jle
lock
sti
xor
pusha
imul
push
xlat
and
rolb
push
popl
out
les
outsb
pop
push
pop
dec
and
dec
mov
jae
inc
sub
xor
push
rclb
movsl
mov
xchg
scas
add
mov
jne
popa
movsb
mov
adc
push
and
mov
inc
add
pop
imul
push
xor
and
lcall
pop
jb
ljmp
jecxz
jbe
sbb
aaa
imul
dec
or
inc
ljmp
sub
movsb
push
das
sbb
outsb
daa
adc
daa
adc
enter
imul
int
dec
push
lock
movsl
test
mov
cltd
inc
je
and
aas
ljmp
testb
push
scas
and
inc
add
jecxz
repnz
pop
xchg
cmp
adc
dec
mov
lahf
mov
push
loope
fidivrl
add
and
lahf
mov
jge
inc
das
and
push
scas
or
cmc
outsb
and
cmpsb
stos
push
sub
or
pusha
sub
rolb
dec
cmp
jbe
nop
jbe
ret
xchg
dec
cli
arpl
mov
jmp
inc
mov
loope
es
mov
xchg
jmp
mov
scas
lcall
repz
cmpsl
in
loope
adcl
insl
sub
in
aaa
negb
shrb
cmp
insl
pop
test
cmc
xchg
outsb
cwtl
sbb
ss
scas
sahf
cltd
pushf
je
and
mov
pshufw
arpl
les
jmp
mov
cmc
lods
jo
jo
fisttps
in
pop
adcl
mov
sbb
pop
lock
ds
xor
push
sub
rolb
imulb
adc
shlb
sar
mov
hlt
popf
rolb
fwait
addb
testl
xor
loop
xchg
test
mov
mov
adcb
bnd
fistps
rorb
sub
js
mov
andl
enter
lcall
adc
xor
sub
jmp
das
cmovo
testl
jno
xor
mov
ss
mov
xchg
and
jmp
push
test
aaa
push
and
fs
and
out
sub
je
stos
arpl
jg
lds
xlat
mov
pop
jo
hlt
jnp
iret
in
and
aad
sub
shlb
push
pop
xor
mov
mov
lods
dec
cmc
mov
push
inc
push
hlt
xchg
jb
cmc
mov
cmpsb
fistpll
mov
push
popa
mov
and
push
push
jb
aaa
out
hlt
leave
shlb
jne
jecxz
lret
mov
stos
arpl
cmp
jecxz
popa
and
dec
push
arpl
es
insl
add
test
ret
test
xorb
das
jmp
mov
jbe
jne
insb
cld
mov
xchg
outsb
xchg
push
mov
bswap
in
add
insb
or
dec
jb
cmpsl
ficompl
and
xchg
adc
outsb
test
in
filds
fisubrl
and
xor
shlb
aaa
outsb
sub
ds
sub
jecxz
add
ss
js
push
push
push
jbe
bndstx
and
cmpsb
cs
dec
fptan
jge
cmp
dec
inc
leave
xchg
fnsave
add
mov
xor
fcoms
jb
or
and
leave
inc
decb
aad
push
xchg
mov
outsl
das
shll
jne
pop
addr16
jmp
pop
negb
push
aad
lret
cmc
rclb
cmp
xchg
adc
stos
stos
mov
sbb
fldt
push
xchg
fs
xchg
push
jge
dec
imul
jne
lret
pop
cmp
xor
cli
mov
or
pop
inc
sub
rolb
xchg
xchg
and
or
shrb
and
jae
cmc
cli
dec
sbb
inc
popf
lods
ljmp
mov
adc
xchg
in
insb
xchg
hlt
cmp
in
dec
aas
cmpsb
stos
cmc
pusha
jbe
loope
push
dec
mov
movsb
or
enter
push
mov
cmpsb
xor
mov
js
movsb
jno
or
fldcw
inc
mov
xor
jmp
mov
push
ljmp
mov
or
outsb
xchg
sbb
adc
jne
aas
xor
or
repz
xchg
arpl
mov
jg
adc
jl
jo,pt
jl
repz
cld
jg
inc
sub
push
add
push
ja
dec
pop
stc
fs
xor
cltd
mov
mov
cmp
shrl
dec
sub
dec
pop
push
mov
jp
xchg
inc
xchg
xchg
rcll
pop
inc
es
adc
mov
push
in
mov
push
xchg
ljmp
and
pop
xor
mov
ret
inc
sub
adc
xor
jl
daa
mov
pop
movsl
jl
pop
pop
adc
sbb
xor
and
dec
rcl
push
xchg
lahf
or
into
pop
cwtl
adc
rcr
notb
xchg
movsb
fucomi
out
xor
hlt
xor
sub
mov
xorb
inc
mov
leave
cs
mov
pop
mov
sub
sub
add
insl
negb
add
mov
loopne
and
cmp
inc
jbe
adc
xchg
jp
jnp
adc
inc
fidivrl
cmp
lret
mov
test
out
jbe
cmp
out
push
test
push
lcall
mov
push
imul
popf
hlt
xchg
test
loope
xor
inc
jbe
xchg
je
cs
push
test
cltd
dec
cmc
dec
push
pop
stos
aad
les
sbb
adc
sbb
dec
fwait
and
cli
fisubrs
add
insl
dec
loop
xchg
sub
sub
push
addr16
mov
fldcw
into
aad
ret
outsb
fwait
testb
pop
iret
aaa
mov
push
xchg
jecxz
fwait
pop
mov
or
jbe
call
push
jbe
icebp
add
ret
pop
or
shl
ja
dec
cmpsb
push
jae
jmp
rol
mov
cmc
andl
shlb
movsb
adc
cmpsb
inc
sub
xchg
jecxz
jmp
hlt
cmp
arpl
jb
sub
loope
stos
xchg
jnp
push
push
cmpsb
in
inc
inc
and
mulb
push
cmc
ja
sub
xor
bound
outsb
insl
cmp
push
xor
loopne
scas
sub
xchg
add
sub
scas
mov
jecxz
shl
int3
lret
lret
xchg
lahf
pop
pusha
stos
fidivl
fs
ljmp
inc
jae
pop
je
cmc
push
cmp
das
call
add
mov
rorl
mov
in
fcmovu
stos
ss
lret
dec
push
xor
sbb
pushf
inc
pop
dec
xor
pop
xor
je
test
jb
js
dec
fnstsw
cmp
add
jecxz
pusha
arpl
mov
jnp
dec
mov
cmp
std
popf
mov
dec
outsb
test
in
pop
xlat
cmp
arpl
cmp
test
rcl
jbe
loop
test
xor
les
das
out
jbe
push
sbb
sbbb
push
or
outsb
fsubrl
pop
jb
push
sub
cmp
stos
stos
popa
adc
pop
stc
je
mov
xor
iret
and
shll
xor
into
sti
sbb
pop
fisubs
xchg
loope
inc
cmp
mov
mov
sub
jbe
int
add
test
loop
mov
mov
arpl
jecxz
mov
cmp
je
mov
and
xor
push
hlt
nop
mov
aad
cwtl
and
stos
cwtl
cmp
imul
popf
pop
inc
cmp
mov
inc
mov
xchg
fldt
and
rcrb
cmc
cmp
mov
xchg
sti
pandn
ss
test
pop
add
jmp
imul
sub
cltd
push
xchg
and
cmp
aaa
shrb
xchg
mov
sbb
fs
mov
js
sub
mov
fiaddl
inc
test
sub
cmp
outsb
stos
fidivrs
jbe
das
mov
shrb
push
popf
ficoml
sub
xchg
pop
fisubl
hlt
xchg
jg
jmp
bound
scas
and
cmpsb
push
daa
inc
cmc
cmp
mov
aam
mov
addl
adc
pop
jno
insb
or
fdivs
addr16
js
dec
cltd
pop
es
lods
imul
jbe
adc
push
push
lods
inc
xor
sub
out
shl
mov
dec
pop
push
pop
shl
popf
and
test
pop
cmp
sub
shr
mov
daa
subl
and
mov
repz
std
ss
inc
jnp
fdivp
mov
fs
scas
or
ljmp
icebp
jno
imul
aam
rclb
sub
lcall
les
std
lods
test
lods
loopne
xchg
stc
loope
pushf
xor
inc
outsb
mov
xchg
mov
into
inc
lret
fidivl
mov
inc
adc
shlb
loope
popa
cmp
imulb
stos
cld
mov
lods
ds
jne
fcmovu
cs
mov
ja
lods
jo
sbb
fiaddl
sbb
loopne
nop
adc
push
shlb
loop
pop
or
inc
dec
xchg
adc
pop
push
test
mov
int3
pop
pop
pop
push
or
es
je
cmp
out
push
loopne
pushf
xchg
pop
inc
and
fdivrl
jg
pop
jno
fiaddl
mov
pop
mov
scas
xorl
inc
popa
div
rorl
cmp
outsb
mov
mov
mov
jno
sub
pop
popa
adc
adc
nop
test
adc
mov
roll
jmp
rcl
sti
push
jae
dec
mov
pop
push
add
add
sbb
loopne
sbb
push
xor
notb
hlt
push
jg
loop
sbb
xor
pop
mov
out
test
lea
into
hlt
out
pop
imul
sub
dec
popa
dec
arpl
insb
pop
stos
push
faddp
shl
inc
mov
add
dec
bound
pop
movsl
out
jecxz
or
jecxz
loop
mov
out
ljmp
mov
addr16
sbb
xor
fsts
lea
mov
jecxz
in
pop
push
pop
lahf
lods
dec
jb
nop
es
sbb
mov
push
dec
bound
xor
fsubl
cmp
fisubl
dec
je
mov
pop
jb
sub
stos
movsl
cmp
arpl
sbb
dec
lods
push
imulb
je
mov
jne
push
cld
fiaddl
cmp
lcall
jbe
or
mov
mov
test
sub
scas
mov
pusha
pushf
ja
mov
jbe
xchg
dec
mov
push
sub
out
cld
pop
mov
fwait
sub
nop
mov
loope
test
stc
dec
and
xchg
xchg
mov
dec
aad
dec
xor
and
mov
in
scas
inc
shlb
cltd
dec
shll
out
jmp
sub
fwait
adc
stos
ret
mov
pop
stc
subb
fisubrl
or
rcl
cs
ret
sub
dec
inc
lock
adcl
or
mov
out
mov
pop
push
cltd
call
and
adc
gs
adc
ss
mov
mov
lret
sub
scas
orb
mov
into
in
outsl
pop
mov
arpl
sub
divl
add
mov
dec
icebp
jmp
lods
dec
aas
mov
inc
inc
jne
sarb
enter
les
jecxz
jnp
int3
jl
pop
mov
ret
xor
lods
loope
pop
fldenv
aam
cmovae
mov
out
sub
lods
out
mov
push
scas
cmp
shl
cmp
adc
ja
xchg
inc
and
cmc
loop
shlb
bound
xor
shl
adc
shlb
pop
sbb
lret
jno
ds
shlb
pop
xchg
or
mov
sub
cmp
pusha
jbe
fcomps
inc
jnp,pn
inc
lret
add
icebp
fwait
gs
rclb
jno
notl
test
arpl
fists
xchg
lcallw
sbb
es
nop
xorl
inc
push
inc
mov
ss
sub
mov
cwtl
push
hlt
hlt
loop
mov
outsb
jl
pop
push
jecxz
and
mov
fisubrs
lods
test
jmp
add
sahf
sbb
adc
inc
or
test
sbb
fisubrl
mov
lods
repz
mov
aam
xor
sub
lods
test
pop
shll
jbe
inc
mov
fstpt
mov
xchg
mov
xchg
je
mov
rcl
xor
sbb
imul
lcall
jecxz
mov
pop
lcall
shlb
es
adc
mov
arpl
stc
imul
jmp
iret
rcr
test
push
stos
ficoml
cmc
je
enter
idivb
lret
aaa
pushf
outsb
mov
pop
sub
subb
das
in
push
cmpsl
outsb
lahf
push
ss
pop
outsb
cmc
cmp
push
cs
add
cmp
repz
mov
or
arpl
pop
adc
mov
ret
cmpsb
ljmp
das
repz
push
gs
test
inc
negb
rcl
push
pop
dec
arpl
insl
mov
nop
outsl
inc
and
adc
addl
adc
sub
mov
push
out
jno
in
jnp
pop
adcb
xor
sub
cltd
jb
sbb
aaa
pushf
ja
rcrb
in
fdivl
stos
insb
insb
cmc
pop
pushl
adc
mov
loope
aaa
push
arpl
pop
das
pop
dec
sbb
pop
mov
scas
or
pop
js
loop
loopne
pop
xor
orb
inc
adc
sbbb
sub
mov
stos
jbe
shll
call
xlat
sub
adc
mov
inc
clc
in
aaa
adc
lret
addb
mov
add
sbb
mov
call
rorb
fwait
pusha
outsb
inc
mov
sub
or
std
pusha
sub
outsb
mov
dec
sbb
mov
lret
add
cmc
fcomip
iret
add
jmp
fistl
shrb
jno
inc
aaa
jb
fwait
hlt
jae
imul
mov
and
xchg
je
pop
outsl
outsb
out
or
lahf
jnp
js
push
push
sub
push
push
outsl
fcmovne
push
stos
xchg
fs
testb
outsb
pop
jnp
in
cs
fdivrl
loopne
mov
call
aas
sub
lods
mov
and
cwtl
jecxz
dec
sti
idivl
push
repnz
fisttpll
loope
push
faddp
lock
clc
mov
jmp
or
jl
jecxz
loope
dec
jnp
stos
mov
pop
inc
repz
leave
movsb
daa
add
cmovg
popa
xor
jl
bound
fnstenv
dec
adc
sub
cmp
mov
shrl
test
cmc
fiadds
sarb
iret
push
aaa
jne
test
cmp
mov
loop
adc
lods
les
outsb
mov
repnz
sub
pop
repnz
insb
imul
ss
add
sti
cmp
in
das
jp
aam
stos
dec
imul
int
cli
sbb
rclb
ss
inc
jb
outsb
sbb
push
ds
or
pusha
and
pop
pusha
test
lret
repnz
mov
mov
sub
and
movsl
sub
fwait
lea
ljmp
pop
xchg
xchg
not
mov
popf
jp
cmpsl
inc
cld
iret
cmc
jbe
outsb
in
inc
mov
mov
inc
cmc
cltd
lcall
sub
jp
pop
fcomps
je
mov
sbb
push
lahf
pop
sbb
and
les
test
push
cmp
adc
mov
xchg
loop
sarb
repnz
inc
arpl
inc
cs
pop
and
pop
mov
jl
push
mov
jb
les
add
lret
sbb
das
mov
jbe
lods
imul
out
dec
push
and
ljmp
mov
mov
test
pop
cltd
shrb
mov
cmp
movsl
cmpl
je
out
mov
outsb
test
imull
popf
ja
shl
rolb
mov
add
in
or
faddp
inc
lds
jg
jns
mov
mov
test
fiadds
fildl
mov
mov
mov
cs
cmp
mov
sbb
cmpsb
mov
push
add
outsb
inc
in
and
scas
add
jnp
stos
jb
out
jbe
mov
movhps
or
rorb
fcom
loope
stos
dec
and
arpl
push
outsb
aad
mov
lahf
jne
icebp
jp
stos
cmpl
pop
rorb
repnz
nop
fidivl
mov
jmp
push
and
out
fldt
mov
mov
and
imul
loope
lret
fwait
popa
insb
rcrb
pop
aad
push
ss
mov
cmp
decl
clc
aaa
stc
pop
icebp
insb
popa
loope
repnz
push
mov
loopne
xchg
gs
sub
inc
loope
orl
incl
adc
pop
andl
ljmp
add
mov
iret
cmp
dec
mov
jbe
enter
call
clc
adc
adc
inc
das
sub
in
mov
in
inc
subb
loope
jg
lock
jecxz
jbe
shlb
cmp
popa
test
loopne
fisttps
adc
jo
movsb
cmc
std
lock
inc
outsl
xor
pop
shrl
mov
notl
mov
adc
adc
mov
pushf
cmp
sti
bound
mov
shlb
xchg
pop
test
jne
mov
xchg
xchg
inc
add
inc
not
fnstcw
cmp
insl
idivl
inc
inc
add
dec
lret
mul
dec
adc
incb
movsl
jg
and
inc
imull
int
rclb
xor
jnp
mov
jmp
mov
rcrb
ficoml
and
sbb
cmpb
inc
fnstcw
mov
shlb
cmp
or
xor
push
inc
xor
es
push
mov
shll
loop
fidivl
jle
xchg
shlb
jp
sbb
outsb
add
pop
add
addr16
mov
cmp
aaa
out
jo
popa
jno
jle
add
out
or
cmp
sarb
mov
pop
xor
addr16
xlat
aaa
or
cltd
pop
jb
adc
dec
pop
xchg
ljmp
imul
mov
xor
mov
sti
sbb
scas
into
push
mov
cltd
mov
lods
dec
sbb
sbb
testl
test
lock
out
fbld
cmp
xchg
movsb
dec
shlb
jmp
cmc
adc
dec
push
and
fldl
xchg
movsb
arpl
mov
jge
xchg
rorb
jecxz
or
jl
bnd
sbb
adc
rcrl
lahf
xchg
inc
js
cmp
jmp
fists
mov
lahf
jmp
repnz
and
dec
cmpsb
addr16
cmp
mov
sbb
mov
dec
scas
add
out
pop
add
lret
sbb
ret
ret
out
enter
orl
out
xor
dec
inc
pop
xchg
mov
pop
ljmp
out
xlat
mov
sub
dec
lods
popf
mov
inc
negl
push
mov
mov
insl
jo
dec
push
jmp
xchg
mull
loope
aad
stos
push
loope
sbb
into
xor
ja
add
pusha
dec
mov
fwait
push
out
cmpsl
rorb
sahf
mov
hlt
test
idiv
lret
in
cmp
add
aad
mov
and
push
es
je
loop
push
fidivs
xchg
add
inc
sbb
out
and
cmp
jae
cmc
hlt
mov
cmp
sbb
jl
push
pop
xor
mov
push
adc
subl
mov
dec
xchg
in
rcl
xlat
cmc
loopne
jbe
fbld
dec
data16
jp
ss
push
mov
fimull
push
cmpsb
mov
lret
xchg
subl
and
pusha
inc
mov
int3
in
jae
pop
mov
mov
fprem1
in
bound
lcall
mov
and
loop
dec
dec
sub
jmp
lret
or
out
loop
mov
dec
cltd
ret
or
aad
sub
jecxz
adc
ljmp
hlt
stc
sub
repnz
inc
insl
mov
faddp
in
mov
jbe
and
mov
aaa
jle
xor
inc
int
imull
cmpsb
ja
pop
outsb
push
inc
push
rcr
mov
add
jnp
out
pop
push
fadds
sbb
dec
mov
adc
insb
cmpl
cmc
cmc
mov
cmp
pop
inc
out
out
push
jbe
test
repnz
inc
dec
mov
xchg
aas
and
loope
xlat
add
cmp
cmpb
shrb
incb
or
inc
jl
mov
mov
ds
movsl
push
cltd
rolb
push
fnstcw
inc
cmpsb
repz
jb
inc
lahf
xchg
scas
bound
inc
pop
ss
test
pop
mov
icebp
sarb
cmpl
rcr
dec
jecxz
orb
push
cmp
shll
push
pusha
sbb
jl
mov
imul
xor
test
loop
or
dec
sbb
mov
xor
cmp
imul
daa
mov
out
add
xor
outsb
aad
add
inc
cld
sbb
repz
sub
test
lock
out
jp
adc
fidivrl
mov
imul
sbb
jmp
imul
lret
in
stos
paddsb
adc
test
jnp
sbb
cld
into
aaa
xlat
xor
push
fs
outsb
push
out
loopne
sbb
loopne
jmp
xchg
pop
cmc
mov
outsl
nop
cmc
xchg
fwait
mov
fisubrl
xchg
sub
mov
cld
pop
inc
std
dec
fdivl
mov
div
stc
insl
cwtl
jmp
aaa
in
rolb
mov
pop
inc
test
stos
psubd
push
ficoml
sub
fisubs
stc
insl
aaa
mov
not
ja
sub
push
ds
les
pop
insl
xchg
dec
lods
out
sbb
jmp
inc
mov
in
push
jbe
pop
sarb
mov
push
adc
fdivrl
test
cmp
pop
mov
xor
mov
mov
push
addr16
clc
je
xchg
xchg
aas
lods
or
jae
fistpll
add
call
push
mov
dec
add
mov
push
out
outsl
cmp
jo
mov
adc
cwtl
fnstcw
in
xor
testl
jmp
ljmp
lock
mov
xor
push
aad
leave
inc
daa
rcll
inc
fdivl
hlt
hlt
mov
jecxz
dec
mov
pop
in
inc
adc
andb
popa
fisttps
movsb
loop
adc
xor
arpl
outsb
mov
popl
push
incb
and
add
jmp
push
enter
rclb
and
or
jb
loop
sti
out
in
arpl
scas
mov
mov
xor
jl
fsts
fs
jbe
adcb
pop
push
and
lods
push
push
xor
mov
nop
jne
dec
dec
pusha
jb
pop
in
mov
out
aam
das
js
lods
xchg
notb
rorl
rclb
fsubrs
dec
out
sub
insb
test
pop
jns
popf
std
xchg
fadd
cmp
rcrb
fsubrs
lahf
pop
jnp
add
imul
bnd
imul
inc
mov
bound
lock
lds
ja
out
mov
popf
push
inc
sbb
jge
lahf
test
jecxz
add
jns
pusha
les
push
ja
bound
xchg
push
rorb
push
jge
icebp
outsb
fnstcw
inc
cs
adc
adcb
mov
lret
andl
pop
dec
sbb
sub
pop
rcrb
int
pop
mov
sahf
xchg
mov
lcall
or
out
mov
sub
mov
lds
push
jae
push
xlat
mov
in
mov
inc
fsubs
loope
hlt
scas
outsl
insb
push
sub
fdivrl
outsl
repz
addl
fidivs
popa
inc
pop
outsb
les
les
add
mov
cmp
push
loop
into
rorl
push
mov
mov
arpl
mov
pop
sbb
data16
xchg
sub
dec
xor
jmp
incb
add
inc
cvtdq2ps
push
xchg
cmp
lahf
cmp
jno
mov
jmp
sti
in
enter
mov
mov
cmp
inc
js
cs
insl
mov
rcr
sbb
cltd
add
dec
inc
in
push
in
mull
add
fisubl
or
je
stos
xor
cli
adc
loope
mov
xchg
fs
lret
jecxz
pop
ja
arpl
mov
jecxz
inc
push
fisubrl
mov
cmpsl
es
cmc
jbe
xchg
jnp
or
incl
adc
rolb
stc
orl
in
dec
push
xorl
scas
sub
mov
push
pop
cmpsb
les
xor
cmpsl
mov
jmp
mov
hlt
pop
add
ret
jmp
daa
pop
cld
push
mov
mov
adc
mov
clc
fs
pop
pop
pop
xlat
xor
push
mov
mov
out
ficoml
mov
mov
fcomp
jno
pop
and
xor
mov
test
mov
sub
xor
add
shrl
inc
sbb
pusha
push
mov
mov
imul
xchg
hlt
or
jns
xchg
pop
jmp
cmp
jmp
push
mov
rcl
outsb
sub
scas
or
mov
jbe
in
inc
cmc
mov
out
movsb
push
test
inc
and
stos
shrl
jb
xchg
orl
cmp
sti
adc
add
in
fidivrs
inc
shll
je
pusha
cmp
cmp
popa
mov
ds
mov
sub
cmp
les
es
cwtl
jbe
int
push
jl
cmp
xchg
fdivrl
jle
jp
imulb
push
jo
mov
shrb
test
popa
lods
adc
jl
pop
insl
addr16
mov
and
cmpsl
mov
sub
jg
fdivl
ret
shrl
add
mov
add
mov
jbe
pop
fisubl
ficomps
iret
jg
push
nop
pop
sbb
pusha
mov
pop
cltd
pusha
iret
cmp
decb
stc
inc
jge
and
imul
negl
mov
loope
test
std
dec
lods
adc
inc
add
cli
sarl
pop
loop
xor
push
pop
cmpsb
mov
mov
shlb
add
repz
push
push
inc
loop
insl
pop
stos
cmp
shlb
in
bound
call
jb
push
test
outsb
lret
fisubs
lods
mov
popa
mov
adc
out
inc
jmp
mov
xorb
adc
mov
lock
in
hlt
and
je
mov
xorl
xor
and
sbb
cltd
cmp
sub
mov
mov
insb
iret
dec
xor
and
out
lods
bswap
loope
lock
mov
inc
mov
out
sub
push
insl
add
nop
add
dec
inc
mov
out
cmc
orb
inc
lock
into
daa
daa
insb
outsb
arpl
jl
dec
adc
mov
je
stc
inc
xchg
jae
iret
push
testb
jbe
mov
sbb
add
adc
rcl
outsb
sub
jbe
popf
jae
xchg
out
mov
mov
das
push
inc
sub
divl
outsl
popa
sahf
push
pop
push
push
iret
shlb
mov
bound
push
xor
add
ja
xor
out
insb
insl
lods
imul
adc
insl
push
and
lcall
in
xor
inc
pusha
divl
add
inc
shrl
sub
xor
pop
jns
outsb
aam
fwait
leave
mov
pop
jae
call
and
popf
add
xchg
out
inc
push
sub
pop
outsb
js
or
stos
add
push
pop
filds
enter
ja
mov
push
inc
loope
jne
cmp
push
mov
mov
jg
shlb
xor
mov
mov
inc
pop
ljmp
stos
outsl
and
xchg
in
jno
aam
ret
dec
jp
cmp
into
cmp
lret
dec
pop
mov
adc
push
ds
jbe
pop
out
push
lea
ljmp
stc
dec
sub
mov
je
leave
xchg
sub
fcomps
cmc
repz
adc
jl
outsb
ret
xor
inc
xor
push
dec
fdivs
insl
test
stc
movsb
sub
dec
imul
mov
ljmp
jecxz
shlb
ret
iret
aaa
negb
inc
inc
cs
adc
mov
sbb
ret
jae
and
jg
fildll
push
inc
xor
xchg
jbe
sbb
lret
mov
mov
lods
mov
ret
pop
fisubs
cmc
enter
stos
enter
inc
stos
xor
shlb
lds
ljmp
cmp
push
lods
mov
stos
in
pop
lahf
arpl
jg
lods
add
loop
cmpsb
pop
mov
push
push
fwait
dec
jb
push
hlt
sahf
dec
fbstp
iret
jmp
mov
pop
xor
dec
xchg
sub
pop
sub
dec
insl
add
pop
ja
mov
pop
lods
xchg
call
enter
cmp
cmp
shlb
loopne
sub
iret
popa
outsb
and
mov
je
out
sub
cmp
mull
xor
testb
adc
push
jmp
jns
hlt
dec
add
mov
xor
push
hlt
and
shlb
rcr
ja
add
cs
xor
and
testb
int
inc
into
outsb
enter
inc
ret
cwtl
outsb
into
das
inc
fyl2x
mov
or
test
xchg
xchg
jbe
jae
cmp
push
sub
pop
inc
lahf
mov
mov
lahf
stos
mov
mov
ljmp
hlt
in
push
aad
xchg
pop
int3
add
sti
pop
or
push
lds
inc
stos
dec
scas
cmc
adc
cmc
in
xor
neg
or
outsb
cmp
aaa
jo
dec
pop
loopne
data16
add
mov
shll
divl
mov
js
cmp
notb
mov
subb
mov
push
add
push
daa
stos
jns
fisubs
adc
add
jmp
outsb
mov
leave
adc
pop
stc
outsb
sti
imul
fdivs
mov
hlt
mov
loope
jle
inc
jae
aas
inc
cwtl
cmp
pop
test
cmpsb
and
mov
mov
mov
call
repnz
ror
das
or
push
out
aad
mov
andb
lods
ja
stc
cltd
pop
hlt
cmp
outsb
push
push
sbb
out
lcall
in
xor
inc
aas
lods
movsb
and
mov
jmp
cmpsb
imul
adc
adc
cmpsl
mov
or
xor
filds
and
scas
outsb
mov
sbb
mov
xchg
and
lcall
push
add
ds
push
cmc
and
rcr
or
popa
dec
repz
loopne
repz
dec
movsb
xchg
loope
jbe
mov
scas
insl
sar
sub
idivl
push
xchg
lret
and
mov
enter
add
inc
inc
ja
inc
pop
add
out
ret
fisttpl
xchg
lret
add
push
jno
mov
hlt
test
scas
imul
je
cltd
sbb
xchg
jo
pop
loope
scas
jmp
xor
inc
outsl
push
mov
push
xchg
in
repnz
dec
popa
xchg
dec
dec
shl
jmp
das
mov
xchg
imul
or
jno
lods
sarb
imul
testl
push
addr16
cmpsl
ret
jge
xchg
movsl
or
gs
xor
xchg
inc
bnd
push
cmpsl
dec
ret
push
mov
shrb
or
jle
xor
dec
in
out
jnp
cmp
pop
dec
pop
jb
insb
test
rorb
test
jns
mov
fcomi
mov
push
jno
decl
push
outsb
rolb
mov
addb
push
and
nop
in
jecxz
mov
les
arpl
push
mov
dec
push
jg
mov
cmp
jbe
lea
push
adc
or
jo
das
mov
inc
xor
dec
push
mov
lods
nop
ret
inc
push
mov
jp
push
or
dec
pop
mov
ficoml
aas
push
mov
lods
and
js
push
in
lods
push
cmpsl
outsb
xor
xor
ja
adc
inc
testb
pop
fiadds
mov
add
fisttps
fiadds
out
fptan
pop
mov
rclb
sub
sub
mov
sub
and
push
pop
sub
mov
sbb
fnstenv
pop
rcl
je
in
ja
mov
fimull
pop
popa
loope
push
fbstp
sti
int3
ret
lahf
adc
jmp
and
fidivs
iret
popa
jg
movl
inc
or
or
fdivp
and
int3
inc
nop
adc
movsb
inc
jno
fidivs
movsl
fwait
pop
mov
mov
inc
jne
mov
sub
dec
xchg
push
cmpl
fcompl
aad
xor
mov
xchg
daa
rcrb
add
daa
xchg
mov
outsb
bound
lds
popa
pop
jne
sbb
repnz
and
fcmovnb
jbe
xorb
js
nop
cmp
sub
lret
sub
xchg
ja
xchg
fldln2
loop
and
push
enter
out
pop
pop
push
js
jge
sbb
cmp
outsl
dec
pusha
rorb
nop
popf
and
mov
cli
jne
cltd
sbb
jmp
lret
in
pop
sbb
lods
ljmp
jecxz
out
mov
pop
arpl
cmpsb
push
push
xchg
movd
mov
and
jg
mov
add
in
xor
fdivrp
fs
and
inc
rcr
rolb
aaa
push
inc
popf
test
in
call
and
dec
daa
sbb
sarb
rcl
xor
mov
bndstx
in
clc
mov
pop
jnp
inc
sub
scas
icebp
les
mov
ja
aad
mov
add
aaa
sub
add
and
push
and
outsb
pop
ljmp
addr16
imul
mov
inc
ss
mov
repnz
mov
push
out
rcll
shl
inc
inc
test
mov
and
add
addl
fld
inc
fcom
ret
dec
push
mov
add
imul
push
push
popa
lcall
cli
test
aas
xor
cmc
nop
mov
sub
lret
test
xchg
fcoml
fwait
stc
stos
lret
pop
push
or
pop
shlb
or
mov
inc
dec
pop
ja
fld
ja
lods
loop
leave
inc
jbe
dec
dec
push
and
in
cmpsb
adc
adc
ret
notl
scas
jle
shlb
loope
icebp
mov
mov
ja
rcl
daa
je
arpl
jae
outsb
push
and
mov
cmp
push
push
push
stos
jbe
mov
hlt
mov
nop
or
sbb
pop
xor
mov
adc
ljmp
shlb
popa
loope
in
insb
fs
mov
jle
mov
rorb
stos
fisttps
jmp
aad
xchg
pop
out
les
add
nop
push
sub
loop
call
nop
mov
pop
lcall
call
or
insb
inc
in
cmp
or
popa
loop
push
js
stos
xlat
addb
or
push
out
sub
rorb
punpcklwd
inc
mov
shrb
ljmp
outsb
sub
fdivs
fimull
dec
out
mov
rclb
mov
jbe
shlb
sub
mov
push
and
pop
test
pushf
inc
aam
jno
or
mov
fistps
clc
cs
cmp
jg
add
popa
in
xor
mov
push
dec
xor
jge
mov
jecxz
dec
in
push
bound
jae
in
movb
insb
or
push
jg
lret
inc
lods
inc
xor
pop
scas
inc
adc
mov
jnp
repnz
imul
mov
aas
popa
pop
sub
push
rclb
lret
cli
out
jbe
sbb
sar
pop
frstor
xor
sbbl
push
pop
pop
sub
dec
add
mov
lea
mov
mov
mov
dec
pushf
add
mov
pop
sbb
rcll
pop
push
outsb
hlt
in
pop
mov
lcall
jae
push
enter
cmp
scas
cmp
mov
pusha
loopne
adc
inc
fisttps
or
mov
mov
daa
pand
out
lahf
adc
ss
push
mov
or
scas
add
in
dec
dec
ja
sub
stc
jbe
sbb
nop
and
inc
outsb
ss
adc
push
inc
mov
push
ficoms
out
pop
or
push
pop
stc
ss
add
sub
mov
int
stos
xchg
jne
and
adc
inc
stos
arpl
lds
mov
ja
cmp
test
in
aas
cltd
push
sbb
pusha
cmp
push
xchg
jecxz
orps
dec
sbb
in
jecxz
mov
das
mov
push
inc
push
mov
cwtl
testl
dec
jbe
sub
pop
mov
push
pusha
push
lahf
xor
nop
mov
sar
pop
sub
push
shll
xchg
jbe
fs
lret
fisttpl
clc
clc
mov
sub
jmp
xchg
fildl
push
arpl
inc
mov
mov
pop
stos
mov
jb
cs
push
jecxz
lods
bound
bndstx
mov
inc
and
mov
call
cmp
mov
push
ret
mov
les
js
enter
jno
mov
in
mov
mov
shl
fstl
cmp
mov
mov
test
dec
fcomps
adc
inc
xchg
lods
mov
mov
push
and
stc
ret
xchg
sbb
jae
cmc
pop
push
sub
push
stos
mov
inc
sub
fwait
insb
stos
or
mov
cmc
aaa
lahf
into
or
mov
iret
mov
cs
icebp
inc
fldpi
imull
sarl
push
jmp
dec
sti
and
rolb
pop
or
mov
xchg
lds
sub
ja
in
lods
daa
xchg
jno
cmpsl
loope
jo
add
dec
flds
bound
lret
popf
int3
adc
loope
outsb
movsb
out
jmp
inc
and
and
dec
sub
outsl
or
stos
sub
mov
lcall
jae
and
xor
ret
icebp
inc
cmc
mov
imul
jae
inc
les
mov
cltd
lods
lahf
enter
sub
ds
outsb
lret
dec
lods
and
movsl
aas
cmc
fcmovnbe
xor
jb
dec
stc
push
jno
out
mov
in
jbe
xorl
ror
xchg
cmp
mov
mov
add
rorb
push
fwait
mov
cmp
jns
out
fbstp
outsb
push
out
icebp
xchg
aaa
aas
mov
sub
adcb
ljmp
orl
in
push
dec
pop
add
pop
dec
and
ftst
into
sub
push
dec
sahf
mov
xlat
jae
loopne
cmp
xor
rcr
repnz
pop
nopl
rolb
pusha
shrb
xor
mov
inc
or
inc
cltd
xor
jno
fisttps
mov
jbe
into
jb
xchg
push
jae
cltd
cmpsl
push
shr
xor
inc
sbb
inc
adcb
push
addr16
repnz
loopne
dec
xlat
xchg
test
imul
jmp
mov
test
nop
dec
jbe
pop
test
inc
clc
fdivrl
sub
mulb
xchg
stos
cmc
nop
push
mov
sub
movups
or
insb
push
mov
pop
pop
fidivrs
adc
movsl
ret
inc
sbbb
ds
jae
notl
shlb
xor
cmp
in
cmpsb
addr16
ficoml
mov
push
shl
andb
out
dec
std
jl
and
sti
pusha
test
shlb
movl
cwtl
inc
out
inc
mov
gs
aas
sub
cmp
pushf
push
loope
add
repnz
pusha
fdivs
pushf
sbb
ljmp
in
sub
cmp
in
xor
dec
in
cmc
fbld
adc
and
inc
sbb
orb
mov
leave
cwtl
and
mov
pop
xorl
inc
mov
push
jmp
lret
popa
popa
ret
div
pop
iret
outsb
push
imulb
xchg
adc
je
test
sub
out
imul
sub
mov
jmp
nop
cmc
enter
add
out
inc
jbe
out
dec
pushf
leave
call
rclb
sarb
cmpb
not
pop
stc
mov
rcrl
das
sbb
lcall
test
lods
ds
shlb
cwtl
loope
jae
pop
inc
lods
xchg
fisubrl
push
mov
inc
ficompl
lods
das
or
in
xor
out
out
aad
pushf
call
dec
popa
testl
and
push
mov
nop
or
repnz
jb
adc
sbb
mov
sub
outsl
negl
stos
cmp
les
dec
xchg
sbb
in
lcallw
jno
cmc
leave
jp
call
fsubp
fidivl
sub
cmp
push
mov
jbe
les
js
loope
pop
sbb
lock
stos
xor
fistl
push
inc
inc
mov
mov
sarb
in
popa
andb
inc
ljmp
das
mov
frstor
mov
loop
in
test
test
inc
enter
je
pushf
outsb
mov
pop
pusha
das
popa
dec
push
cmp
jbe
pop
inc
ret
mov
std
ret
cmp
outsl
cmc
xchg
imull
rcr
sub
jnp
inc
lret
popa
lock
rolb
es
test
mov
jmp
lret
sub
push
nop
sbb
sbbl
test
rorl
lds
xchg
leave
ljmp
pop
stos
mov
les
sub
outsb
cmp
cmc
mov
push
jmp
negb
ret
inc
inc
ret
pop
sbb
push
dec
leave
jmp
outsb
imul
mov
lods
xchg
lods
stc
mov
inc
mov
push
cmp
clc
loope
lods
pop
push
loope
jno
jl
xor
push
sbb
lcall
cmpsb
xchg
dec
les
iret
das
movl
in
test
lds
dec
aad
mov
and
mov
movsl
xchg
popf
insl
es
jae
shrb
inc
popa
lcall
inc
inc
je
adcb
add
jne
push
jmp
xchg
mov
xlat
sub
and
arpl
adcl
mov
loope
cs
push
adc
mov
out
imul
rorb
sub
int3
test
and
jbe
out
cmp
mov
rorb
xor
outsb
jo
mov
fs
stos
fistps
rcrb
ja
sbb
leave
sub
repz
push
push
sbb
jo
test
in
mov
setae
mov
cltd
push
iret
sub
cmpsb
imul
mov
pop
in
andb
adc
adc
sub
inc
adc
xor
adc
mov
jb
jmp
dec
scas
sub
fptan
loope
inc
mov
dec
sub
cld
test
pop
das
stos
inc
lcall
rcrl
lcall
scas
xor
testb
out
xchg
arpl
adc
push
stc
xchg
inc
stos
dec
push
mov
daa
testl
cmpsb
mov
sbb
cmp
lods
xchg
test
fcomps
sbb
jae
rcll
cmc
jnp
insl
arpl
jg
rcrb
ficoml
xorl
xchg
insl
je
inc
insb
mov
lea
dec
xchg
sti
into
rcr
pop
mov
leave
arpl
jno
stos
cmc
mov
leave
xchg
mov
and
jbe
mov
ret
les
xchg
data16
jecxz
test
mov
xor
ljmp
clc
pop
adc
mov
mov
outsl
push
pushf
inc
jg
mulb
imulb
xor
ret
repz
repz
js
jne
xor
rcrb
adcl
and
xchg
mov
xor
imul
mov
mulb
loopne
in
jmp
andl
into
jecxz
in
push
lcall
imul
jge
sar
call
imulb
inc
inc
push
sahf
sbb
ss
add
sub
dec
mov
stos
clc
and
sub
jb
scas
push
xchg
mov
insb
call
in
bound
xchg
cmpsb
sar
dec
xor
mov
xor
sbb
arpl
push
lahf
lret
pop
cwtl
mov
mov
ret
loopne
andb
xchg
cmc
repnz
inc
mov
xchg
jo
scas
pop
into
jae
lcall
mov
repz
cmp
push
xor
add
xchg
push
jne
cmc
loope
std
aam
dec
loop
xor
rcrl
or
push
mov
fcomps
sub
sub
lret
popa
ljmp
outsb
pushf
sub
and
in
inc
js
dec
jmp
nop
mov
mov
test
pop
jb
jb
test
dec
scas
dec
jecxz
mov
pop
mov
outsb
jmp
jp
flds
mov
insl
add
popa
repnz
lods
jg
push
mov
add
popl
xchg
jbe
repz
loope
pusha
sarb
pop
les
inc
int
pop
cli
xor
jp
xchg
sub
pop
mov
test
pop
lea
inc
arpl
jnp
sub
sub
or
outsb
inc
int3
loope
lds
or
cltd
pop
insl
mov
push
push
mov
imull
daa
nop
scas
out
ds
psrlw
xchg
push
push
xor
imull
nop
outsb
icebp
rolb
xchg
addr16
jge
xchg
sub
add
pop
clc
andb
es
push
push
repz
mov
aaa
adc
fistps
movsb
xchg
int
and
lods
adc
mov
fsts
add
pushf
xchg
fs
pop
cli
cld
xchg
inc
add
pusha
mov
adc
movsb
mov
sub
lret
mov
loope
mull
sbb
ja
sti
je
imul
out
mov
mov
idivb
mov
aas
int
xchg
lahf
rcr
scas
rorl
cwtl
les
push
out
outsb
and
adc
outsl
insl
push
push
lahf
call
fwait
pop
sbb
mov
xchg
and
int
push
jbe
loopne
bound
cltd
cmpsb
cmp
out
mov
sbb
pop
dec
mov
cmpsb
mov
outsl
inc
shrb
inc
jno
xchg
add
in
loop
push
insb
sbb
push
mov
daa
cmp
movsl
push
js
hlt
adc
sar
imul
dec
mov
aam
sub
inc
outsb
pop
je
jne
jl
out
pop
lahf
hlt
cmp
shrb
xor
sahf
push
pop
cltd
mov
xor
lcall
cmp
es
das
ret
push
dec
pop
inc
inc
idiv
dec
pop
push
dec
aaa
pop
adc
pop
cmp
cmp
jbe
outsb
icebp
lahf
ret
bound
xor
daa
nop
dec
in
test
cmpsb
ror
dec
add
pop
push
adcb
push
inc
loop
das
daa
add
pop
pushf
xor
adc
popa
fcmovu
movsb
jl
push
push
dec
jle
sub
dec
mov
cld
mov
pop
xlat
and
xor
xor
and
xchg
jecxz
add
add
out
push
mov
jo
cmp
popa
in
out
adc
outsb
xlat
jo
mov
jbe
fld
out
lods
push
faddl
test
jecxz
out
into
push
and
push
enter
cmp
pusha
dec
add
shlb
push
jle
pop
pop
jne
popa
mov
loopne
imulb
divl
mov
and
mov
ficomps
mov
lock
mov
jae
adc
inc
repz
outsb
jbe
push
and
lods
sbb
pop
adc
push
sub
inc
and
sub
sbb
test
aam
scas
subb
loop
divl
xchg
sbb
outsb
test
sub
xor
lds
dec
out
test
repnz
dec
mov
pop
sub
popf
ja
jb
enter
push
pop
add
sbb
scas
cmpsl
pop
into
push
mov
xor
mov
bound
xchg
sbb
inc
cmpsb
jnp
int
sbb
lock
sub
sub
int3
inc
in
xor
push
sub
andb
sub
pop
jecxz
sbbb
pusha
stos
stos
sbb
push
or
fldl
sarb
fstpl
lret
and
stos
inc
fbld
xor
and
cmpsl
inc
pop
out
cmp
cmc
cmpsb
dec
sub
rclb
lcall
fidivl
clc
sbb
call
inc
stos
imul
leave
pop
in
js
xchg
nop
sbb
mov
pop
aam
mov
mov
sub
jecxz
fwait
xchg
xlat
jb
xlat
pop
add
mov
sbb
inc
je
scas
aaa
cmc
jbe
test
xchg
js
imul
dec
loope
adc
add
fwait
test
push
daa
and
mov
sbb
dec
int
imul
push
xchg
cli
aad
cmpsb
repnz
lock
sbb
fldenv
into
add
mov
adc
ror
test
lds
shlb
jg
mov
ret
jb
imul
mov
jbe
xor
fstl
mov
filds
std
and
fcmovb
mov
mov
dec
adc
add
jl
jne
jmp
mov
mov
cmp
xlat
popa
mov
es
cld
hlt
or
sub
jmp
je
sub
cmp
and
xor
add
and
js
das
std
fists
dec
shl
jle
jmp
in
mov
sbb
cmp
xor
sarl
jae
inc
push
ss
icebp
mov
ljmp
shll
movsb
orl
push
mov
jb
jecxz
les
bound
adc
fidivl
fstl
mov
push
addr16
jbe
cli
insb
das
and
loop
imul
sahf
sbb
mov
push
lret
std
push
add
stos
sbb
clc
jecxz
movsb
lahf
jecxz
pop
aaa
lods
loop
stos
cmp
loope
adc
outsb
dec
or
mov
rorb
push
adc
addb
jmp
das
loope
jnp
mov
clc
imul
imul
ret
inc
push
outsb
jb
jbe
xor
das
rcr
test
shlb
ss
mulb
imul
mov
push
cmp
inc
pop
jp
jo
sbb
jne
es
push
mov
in
jge
pop
adc
rdmsr
jg
in
mov
jo
out
nop
stos
ffreep
mov
pushf
rcl
enter
adcb
inc
shrb
xor
iret
jo
popa
fidivrl
xchg
adc
je
cmc
stos
test
ror
bnd
cmp
rol
pop
clc
mov
push
test
dec
inc
jecxz
push
movsl
fistl
push
sbbb
test
inc
push
jne
fsubrl
or
out
mov
pop
es
fwait
rorb
inc
outsb
pop
mov
sbb
mov
inc
dec
and
scas
dec
cmc
dec
jnp
pusha
mov
outsb
cld
stos
push
adc
jle
ret
scas
cmc
divb
xchg
test
pop
and
sarb
movsb
and
or
xchg
imul
inc
aad
jne
xchg
cmp
cwtl
mov
movsb
dec
jge
movzwl
pop
clc
pop
sub
or
call
leave
mov
imul
adc
xor
shlb
or
xor
xchg
outsb
pop
xor
mov
dec
in
pop
ljmp
push
ss
or
inc
jae
xor
fwait
repnz
mov
mov
lcall
mov
jmp
add
arpl
xchg
or
shl
repz
notl
push
bnd
insb
test
pop
std
mov
shlb
dec
shlb
shlb
outsb
jmp
or
popf
enter
rorb
fisubrl
aam
jecxz
cmc
mov
inc
mov
call
xor
shrl
das
mov
cmp
fbstp
jl
test
xlat
mov
cmpb
pop
jbe
inc
in
xchg
pop
xor
xchg
andl
roll
pusha
mov
jge
push
out
sbb
dec
sub
insl
aaa
mov
fucomip
pop
sbb
sbb
subb
and
loop
add
ja
pop
mov
dec
aas
testb
rol
out
push
js
fiaddl
arpl
sarb
cltd
jbe
es
in
repnz
xlat
and
scas
pop
pop
mov
stc
das
dec
add
repz
and
mov
sub
sub
inc
imul
out
pop
xor
fistpll
jne
mov
mov
push
imul
aaa
push
jl
sub
mov
or
scas
lcall
lcall
push
lods
pop
mov
push
or
inc
mov
mov
push
sub
or
add
mov
in
push
test
lods
or
ds
pop
fs
push
sbb
jo
ret
stos
pop
sub
push
daa
mov
xchg
roll
jge
jb
mov
stos
mov
and
aad
aaa
xchg
sbb
jb
inc
push
jnp
push
mov
mov
push
and
dec
repz
push
jno
in
jb
jmp
sbb
xor
xchg
sbb
test
test
loop
adc
xor
mov
push
jbe
xor
xchg
fwait
adc
xlat
mov
sub
lods
loope
flds
stos
mov
dec
out
pop
sbb
loope
ja
imul
sbb
add
js
imul
xor
sub
outsb
test
imul
cwtl
scas
xrelease
imul
pushf
sub
inc
jecxz
mov
je
outsb
dec
sti
movsb
push
adc
or
stos
int3
jne
dec
cli
fwait
loope
popf
insb
lahf
dec
cmpsl
cli
dec
push
cmpsl
insl
call
xchg
mov
sbb
or
and
ljmp
in
fs
popa
push
jnp
cltd
and
aaa
cltd
inc
out
jmp
inc
jle
aaa
mov
rcrb
sub
xor
xor
inc
das
subb
inc
push
jmp
movsb
stos
xchg
dec
fdivs
addr16
aad
fisubl
mov
sub
add
dec
mov
sub
aam
push
out
and
iret
cs
outsb
cmp
cmpl
test
mov
or
sahf
xchg
push
je
loope
and
mov
xor
add
mov
jbe
mov
mov
loope
ja
enter
cmpsl
loope
jecxz
lret
repnz
icebp
fstpt
xchg
cwtl
imull
mov
inc
lcall
aam
push
add
ja
mov
jno
cmp
popa
fidivrl
ja
jl
in
cmc
cs
shlb
loopne
cmc
cmpsl
addr16
lcall
shrb
jbe
pop
cli
mov
pop
cmc
jg
push
bound
mov
adc
mov
mov
test
xor
cmp
dec
das
pop
inc
shrb
in
aam
xor
and
sahf
cmp
ljmp
xchg
shrb
stc
int3
aam
shlb
inc
mul
and
jg
loope
icebp
subl
dec
aad
cmpsb
shrl
arpl
gs
sbb
adc
inc
pop
mov
adc
add
faddl
jg
inc
and
daa
sbb
push
sub
push
rcrb
outsb
mov
out
fstpt
lds
or
mov
xor
insl
xchg
fisubrs
sub
dec
shrb
in
jb
mov
inc
popa
imulb
inc
push
pusha
negb
push
mov
adcb
es
movsb
dec
dec
cmp
mov
fdivrs
lods
cs
push
fcoms
mov
xor
out
lods
add
lahf
xor
rolb
loope
mov
push
pop
ret
add
cmp
cmpsl
ja
mov
sahf
out
jb
movsb
xor
cmpsb
fdivrs
lods
push
les
stos
hlt
or
sahf
fdivrl
sbb
and
hlt
mov
mov
xor
ret
pop
mov
add
and
icebp
xlat
mov
daa
jae
xor
out
aaa
rorl
mov
sub
cmpxchg
sub
shll
sbb
mov
outsb
arpl
pop
insb
jge
rolb
push
jbe
jo
shrb
arpl
and
lcall
cmc
sarb
andb
loope
or
jbe
fwait
ret
ljmp
pushf
cmc
scas
xchg
iret
std
inc
pop
js
cs
dec
lcall
mov
adc
out
aad
and
sbb
mov
or
das
push
inc
jmp
push
hlt
pop
ja
inc
rolb
inc
mov
pop
fidivl
dec
inc
fidivs
jbe
test
pop
fidivs
daa
inc
fiaddl
xchg
fcomip
mov
or
pushw
add
add
xor
mov
xchg
xor
inc
cmpsl
inc
in
cmpsb
mov
dec
xor
nop
xchg
subb
sbb
hlt
mov
dec
mov
iret
dec
xor
and
inc
int3
jnp
ret
mov
mov
mov
adc
sbbb
sbb
cmc
dec
sub
and
lret
jg
cltd
fadds
sbb
xchg
and
outsb
icebp
xchg
mov
dec
aaa
inc
inc
jbe
xchg
rcl
mov
mov
jge
mov
xchg
rolb
movsl
mov
out
movsl
outsb
mov
jecxz
sbb
sbb
cmp
in
xchg
cs
fstpt
scas
outsb
hlt
movsl
xor
pop
sbb
xchg
inc
ror
xchg
xor
outsb
addr16
rorl
mov
out
xor
fimuls
aad
mov
and
movsb
mov
mov
sub
loope
mov
inc
negl
pushf
dec
push
push
push
dec
je
pop
sbb
test
sub
pop
loop
push
jo
icebp
insl
jne
push
inc
jmp
add
int3
loope
mov
mov
lods
ja
in
jle
xor
outsb
fldenv
testl
and
dec
insl
std
mov
popa
adc
adc
les
insb
arpl
loop
cmc
jl
call
dec
sti
out
dec
jbe
and
xchg
sbb
dec
dec
daa
xchg
or
jmp
test
mov
aam
xor
rol
pop
and
sti
and
lret
and
mov
push
outsb
mov
mov
mov
sbb
jns
popa
jb
pop
sbb
push
cmp
inc
xor
fwait
ja
cmp
ja
negb
push
jb
addr16
ljmp
push
dec
or
sbbl
ss
sub
and
lds
sarb
mov
push
in
out
lods
popf
out
add
mov
popa
jge
stos
mov
lds
jl
pop
shl
xchg
cs
sub
push
mov
pop
faddl
jecxz
fcoms
xchg
out
enterw
sub
aaa
mov
add
loope
fs
jbe
ja
sbb
xor
jmp
scas
add
in
xchg
sub
mov
sbb
lcall
push
pop
bound
dec
lods
and
pusha
jb
inc
leave
sub
jge
in
repz
shlb
xor
xchg
cs
dec
lods
stos
xchg
pop
loope
inc
imull
sub
inc
xor
inc
je
stc
outsb
sub
pop
mov
lock
pop
pop
imul
lahf
add
pop
jl
mov
shll
fadds
into
jecxz
outsb
fcomp
dec
sub
and
std
inc
mov
jno
or
in
mov
lods
mov
jge
cmp
adc
pushf
adc
ds
out
pmaxub
pop
out
aam
sbb
adc
and
loop
jecxz
repz
or
and
jnp
mov
sahf
fcoms
xlat
push
sub
lods
faddl
pop
daa
insl
inc
jne
filds
mov
mov
lcall
jge
es
sbb
pusha
iret
jecxz
fwait
test
ljmp
mov
in
aas
lods
add
sarb
inc
sub
jl
bound
je
jno
out
inc
xor
cmpsl
sbb
ret
adc
xor
jbe
mov
lahf
sub
scas
xlat
cs
in
stos
cmpsb
xor
hlt
sub
mov
in
mov
jmp
notl
pop
subb
mov
aaa
clc
stos
adc
or
push
jp
xchg
int
addr16
pop
shld
jo
movsb
sbb
and
adc
sarb
fwait
push
ret
popf
push
dec
fidivrs
in
popa
xor
arpl
into
nop
dec
xchg
mov
sub
cmc
fldt
pop
dec
sub
dec
sahf
fisubrl
adcb
push
and
ss
and
decl
ljmp
imul
ja
mov
jbe
outsb
mov
push
inc
cmc
dec
loopne
adc
push
mov
aad
xor
sar
push
arpl
xor
scas
dec
shlb
subb
sub
negl
fildl
call
inc
mov
mov
sub
push
cld
sti
xor
shrb
dec
stc
mov
int
stc
daa
shrb
hlt
push
jbe
pop
lds
inc
xchg
test
mov
outsl
call
xchg
ret
lcall
jb
and
sub
int3
inc
lcall
lea
mov
adc
cmp
neg
outsb
xor
push
subb
out
pop
push
popa
jne
jbe
rorb
rol
aad
push
ret
adc
outsl
in
inc
sub
add
ret
and
push
and
sub
adc
mov
mov
adc
aad
loopne
xor
cmpsb
rclb
testl
stc
dec
imul
pop
dec
jecxz
mov
dec
push
sub
xor
xor
sbb
xor
pop
add
ret
mov
stos
jl
and
lea
fisubs
xchg
inc
in
insl
dec
rolb
or
xlat
xchg
mov
mov
xchg
push
mull
dec
push
pop
pop
cmc
loope
mov
push
mov
or
mov
mov
push
adc
and
test
jbe
leave
popa
mov
cmp
sbb
jo
aam
and
lods
dec
cltd
mov
mov
add
xchg
pop
dec
mov
sbb
push
in
mov
mov
sbb
in
lea
sub
fcompl
sub
aaa
mov
dec
jo
popa
imul
out
test
inc
lcall
sahf
push
cwtl
mov
cmp
lret
push
sbb
loope
push
push
or
aad
pop
sahf
sub
jnp
mov
push
das
and
or
inc
gs
stos
mov
dec
pusha
fadds
fmull
inc
fs
lret
jmp
movsl
mov
ja
cmpsl
inc
or
fists
je
pusha
loop
inc
cwtl
adc
jmp
aam
dec
push
push
and
daa
push
out
arpl
int
ja
inc
dec
sarb
cwtl
push
pop
cmpsl
icebp
mov
push
xchg
aaa
push
jbe
std
insl
jbe
test
sbb
in
pop
inc
mov
adc
cli
add
and
rorb
pusha
pop
test
mov
inc
cmpsl
cmp
add
shlb
pushf
loopne
pop
out
mov
aam
sub
dec
xlat
jmp
cs
outsb
jp
xor
cmp
inc
xorb
orb
add
div
fldl
testl
dec
imul
out
cmc
shll
xor
mov
jp
adc
fidivl
mov
not
sar
imul
in
xor
in
pop
test
loopne
dec
or
call
subb
addb
dec
nop
outsb
enter
sbb
pushl
xchg
push
pusha
sub
loope
cmc
and
mov
mov
ret
testl
jecxz
idivl
leave
imul
sbb
jnp
clc
push
push
sahf
sub
shr
lock
sbb
cli
jbe
enter
fcompl
push
cmc
and
das
hlt
mov
jbe
inc
out
xor
loopne
test
addl
sbb
out
in
sub
inc
sahf
cli
addr16
imul
jne
cmc
mov
sbb
scas
xchg
shlb
insl
lods
sub
inc
sub
rorb
fstpt
loop
rorb
daa
mov
mov
shlb
test
pop
mov
mov
adc
jmp
sub
cmp
pop
out
cmp
and
xchg
aas
rcll
xchg
sbb
int
mov
push
dec
cld
mov
movsl
xor
fisubl
fsubl
ret
xchg
inc
ljmp
rcl
lods
pop
pop
mov
andb
cmp
inc
out
jb
or
cmpsl
inc
inc
mov
pop
inc
frstor
outsb
dec
dec
fimuls
andb
cmc
outsb
out
inc
lcall
pushf
mov
mov
imul
push
insl
inc
cmpsl
mov
dec
mov
dec
call
scas
adc
dec
or
sub
test
repz
test
push
add
add
ja
mov
inc
stc
mov
or
sahf
shlb
fisubl
sbb
lea
push
xor
or
out
shlb
xchg
pop
pop
xchg
mov
xchg
pop
scas
sub
push
push
jb
inc
push
jbe
mov
sahf
clc
push
ret
testb
cmp
out
lods
and
lret
inc
mov
cltd
add
cmpsl
xchg
sbb
and
mov
jb
jmp
iret
add
out
xchg
mov
xchg
mov
cmc
adc
mov
jge
andb
adc
add
jne,pn
pop
xchg
push
arpl
pop
test
pusha
repnz
arpl
xlat
scas
mov
cmpsl
mov
xor
adc
stc
adc
jle
dec
cmpsl
test
outsb
in
movsb
cmpsl
sbb
mov
cwtl
xlat
ds
jbe
outsb
imul
divb
push
jae
xchg
pop
cmpl
xchg
inc
cmc
fildll
inc
cmp
sub
pop
in
test
test
into
cmp
add
push
fstl
push
mov
test
out
bound
lea
fisubl
inc
mov
xchg
xchg
lret
scas
fsubl
sti
repnz
stc
call
jnp
mov
stos
and
inc
ret
lcall
popa
jmp
std
and
outsl
addr16
div
outsb
sub
lahf
shlb
lret
add
movsl
lcall
jl
push
mov
hlt
mov
push
iret
mov
mov
mov
and
jbe
jecxz
inc
cs
mov
xorb
fimuls
dec
pushf
das
sbb
movsl
jp
mov
mov
xchg
pop
xlat
xchg
cmpsl
rolb
ror
outsl
xor
add
bound
push
mov
aaa
xchg
inc
adc
sbb
or
arpl
lds
xor
or
lods
call
rclb
imull
inc
sbb
and
adc
rcrb
daa
call
lcall
pop
mov
fildl
sub
arpl
andl
adcl
xor
in
sbb
inc
jecxz
out
shl
mov
cmp
out
xchg
dec
and
or
adc
ret
inc
aam
addb
test
in
pop
arpl
mov
mov
lods
dec
arpl
and
sti
push
fstps
jns
outsb
inc
arpl
push
xchg
mov
xchg
cltd
xor
fistl
mov
cs
jg
jbe
mov
loopne
rorb
loope
push
fimuls
mov
lret
popa
flds
jae
outsb
adc
jno
mov
sub
aaa
int3
fsts
mov
das
add
iret
into
inc
shl
xlat
jno
loop
leave
sub
jb
cmp
jnp
jecxz
jno
lds
lahf
mov
in
jbe
adc
xor
mulb
inc
cmp
hlt
inc
dec
movhps
stos
pop
fwait
call
test
or
daa
incl
cld
fwait
inc
ret
fists
icebp
mov
subl
xchg
xchg
orb
stc
xchg
mov
inc
mov
sti
xorl
mov
leave
dec
cmp
mov
les
mov
js
mov
adc
lret
sub
jnp
ret
dec
ja
mov
xchg
div
fbstp
fwait
mov
sub
shrb
xchg
into
cmp
xor
jbe
ret
add
pop
das
div
jp
fnstcw
cmc
and
pop
push
sub
and
out
outsb
lret
cld
jb
stos
push
mov
xchg
popa
jnp
cwtl
clc
push
in
add
outsb
push
int3
dec
mov
sub
push
imull
nop
sbb
mov
mov
inc
ror
jmp
scas
fdivp
in
dec
outsb
dec
dec
stc
jmp
sub
jne
and
idivl
push
call
mov
dec
testl
jo
aas
mov
jmp
push
mov
icebp
sub
jne
out
incb
fisttpll
xor
xor
lret
xchg
push
jb
cmp
out
pop
shlb
jno
mov
pushl
sub
mov
stos
cmc
lds
sub
xor
loop
inc
js
add
movsl
cmp
jecxz
idiv
das
daa
sbb
cmp
cmp
shlb
jp
in
adc
inc
shlb
cmp
inc
in
inc
rclb
aaa
cmpsl
addr16
xor
outsb
push
pop
and
in
out
stc
sti
subl
outsb
xor
xchg
sbb
mov
je
lock
push
jp
aam
mov
insb
loop
ljmp
add
dec
seta
and
stos
cmpb
add
sbb
pop
rcl
out
pusha
movl
out
in
sub
in
mov
sbb
ja
stos
mov
sbb
jle
jle
loop
repnz
imul
enter
xor
inc
mov
jo
je
push
rdtsc
or
pusha
dec
dec
cmp
adc
cmpb
arpl
imull
mov
add
lds
lods
mov
fistpll
adc
inc
std
or
cmp
fbstp
mov
shlb
cmp
xchg
fwait
sbb
mov
or
shlb
mov
aaa
divl
outsb
jge
mov
in
sbb
adc
insb
adc
scas
mov
cmp
aam
inc
mulb
add
sbb
push
sbb
lds
push
jbe
xor
dec
movsl
cmp
outsb
leave
xor
shl
in
in
outsb
dec
ljmp
imul
or
or
mov
decb
mov
std
mov
jl
into
subl
push
in
sbb
mov
aad
jb
mov
mov
in
mov
fwait
cmpsl
xchg
stos
inc
ja
mov
rcl
jle
sarl
test
sub
or
lea
jbe
adc
cs
mov
test
and
lret
mov
lret
jmp
in
jecxz
adc
out
out
push
outsl
movsl
mov
cs
out
jns
jmp
xchg
mov
mov
subl
out
pop
push
in
pop
movups
scas
xchg
mov
jmp
jo
pop
xchg
and
adc
pushf
shrb
fidivl
inc
lds
loope
pop
push
stos
pop
add
mov
jecxz
jecxz
xchg
subl
leave
popa
aaa
pmuludq
imul
mov
push
and
push
xor
mulb
and
lods
rolb
xlat
lret
stc
lock
repnz
push
mov
cmp
shll
jb
fs
jbe
cli
data16
jo
mov
inc
jno
rcl
movsb
dec
push
push
aaa
outsl
jge
push
ja
in
mov
xchg
mov
fildl
pusha
stos
dec
add
inc
ss
cmp
aam
and
mov
mov
sahf
sbbl
mov
xor
lret
jne
jnp
lret
cmc
sarb
stos
lds
orb
ds
cmp
shlb
sbb
inc
sbb
in
shrb
ljmp
fisubrl
icebp
adc
loope
add
repz
outsb
xchg
iret
cwtl
dec
out
inc
repnz
je
mov
adc
xor
jp
out
fisubrl
cmp
stc
repnz
pop
lahf
or
shl
mov
mov
pop
add
aas
adc
push
and
push
fcmovb
xchg
pusha
call
mov
pop
push
xor
rcr
sbb
outsb
rcrl
xchg
xor
leave
sti
mov
loope
cmpsl
rorb
inc
cmc
jmp
adc
xchg
push
xor
cmp
int3
stc
xorb
fstl
jle
inc
push
add
not
sbb
xor
fcomip
and
and
adc
out
xor
andb
divb
pop
fdivl
cmp
movsl
clc
fwait
iret
inc
adc
add
arpl
dec
stos
mov
inc
dec
or
sub
and
shl
cmpsb
mov
fisttpl
pop
shlb
mov
divl
xor
jp
mov
mov
cli
cmc
pop
sub
dec
out
ljmp
das
mov
loopne
ljmp
shlb
pop
sbb
cmpsb
icebp
sbb
or
jns
xchg
test
lock
mov
fists
in
xor
orb
inc
outsb
fs
out
movsb
cmpb
stc
push
inc
xor
insl
jge
and
pop
adc
and
mov
cmp
nop
mov
jg
inc
xchg
jbe
sbbb
or
ljmp
test
pop
int3
mov
loope
mov
push
push
mov
mov
jle
push
leave
mov
sarl
mov
ja
inc
add
xchg
enter
and
dec
and
div
scas
stos
adc
sub
lret
push
inc
out
sahf
stc
add
jmp
shll
pop
or
push
inc
popa
mov
or
pusha
das
sbb
dec
mov
pop
sbb
xlat
aaa
orl
cs
jl
outsb
daa
adc
outsb
lret
add
clc
inc
fsubr
loop
jbe
mov
mov
arpl
shll
and
pop
shl
outsb
stc
dec
outsb
xchg
dec
xor
ret
repz
jae
dec
pop
add
cli
aam
out
int
aaa
mov
sbb
cmp
xlat
jno
loop
sub
mov
push
enter
bound
pop
push
lods
shl
cli
push
jmp
jbe
inc
pop
push
jge
xchg
or
pop
outsb
cltd
lds
inc
pop
cmc
das
test
xor
pop
repz
lcall
outsb
mov
or
movsl
out
jecxz
xchg
fidivrl
inc
testb
loope
iret
push
pop
cld
test
dec
jno
jle
roll
daa
movb
sub
jle
out
adc
sub
iret
es
mov
int
sbb
mov
or
loope
jbe
ret
xchg
and
mov
outsl
out
stos
cld
jecxz
stc
dec
rolb
stc
mov
stos
jnp
jmp
das
arpl
jbe
in
fiaddl
cli
add
outsb
jecxz
push
movsb
xchg
push
imul
mov
shlb
mov
xor
insb
add
add
adc
jmp
pop
in
xlat
xchg
rolb
test
jo
testl
adc
in
test
nop
dec
xor
xor
push
dec
jg
pop
lret
pop
push
pop
sahf
xchg
dec
push
scas
in
jns
jb
jmp
xor
xchg
or
push
in
sbbb
and
outsb
out
sbb
cwtl
scas
insb
mov
adc
imul
xor
mov
repnz
leave
jl
sahf
std
sbb
adc
lods
sbb
cmp
pusha
mov
iret
aaa
mov
rolb
lods
jecxz
testl
and
aas
shll
jbe
rorl
hlt
pop
fs
push
jmp
test
mov
stos
sub
out
aam
dec
dec
and
shll
popa
jns
pushf
inc
adc
lods
xor
fdivl
jp
dec
stos
cmp
stos
mov
jmp
aam
cwtl
in
nop
aad
xchg
sub
push
mov
pusha
loope
subl
sub
ret
mov
cmc
dec
xchg
lret
cmpsb
mov
aam
fwait
jne
xor
mov
ss
push
ja
jae
pop
inc
cmpsb
repnz
divb
fs
mov
xchg
movsb
sbb
aaa
push
sub
test
pop
shlb
popa
sbb
adc
jge
push
pusha
jae
mov
shlb
pop
outsl
jp
test
aad
cmp
les
add
sbb
adc
push
adc
stos
lret
movsl
sub
je
outsl
out
dec
xor
pop
imulb
xchg
lcall
xchg
and
shlb
shlb
sbb
shlb
xor
hlt
cmp
or
jmp
hlt
iret
fdivp
and
filds
inc
jg
dec
mov
andb
lret
stos
imul
sahf
or
jb
pusha
xchg
bound
popa
std
arpl
shlb
pushf
iret
jecxz
daa
and
mov
in
cmp
movsb
in
pop
mov
sub
ret
fimull
lock
xor
outsb
or
pop
iret
pop
sub
jnp
popa
stos
cld
sbb
clc
out
mov
out
jbe
sbb
cltd
or
or
fwait
adcl
out
push
cmpsl
popa
sub
mov
aad
jo
or
mov
cli
fcmovb
loope
push
lcall
jne
in
aaa
neg
popa
bnd
icebp
xchg
cmc
sub
dec
or
in
jnp
idivb
sub
aam
xor
jae
sub
clc
dec
int
fs
lock
dec
mov
shrb
mov
xor
in
add
fdivl
pop
push
cwtl
pop
jns
imul
dec
lods
test
mov
imul
xorb
int
rclb
mov
push
fucomp
out
loope
and
jecxz
jbe
adc
into
lcall
ret
scas
inc
nop
pop
sbb
test
pop
inc
fsubp
das
dec
xlat
and
mov
lahf
pop
imul
mov
pop
sbb
and
cmp
pop
mov
popf
add
cli
mov
dec
push
dec
outsl
mulb
fcompl
mov
push
mov
pop
and
mov
push
or
or
out
jbe
call
cmpsb
ss
dec
shl
sbb
pop
xor
jmp
les
xor
dec
sub
cltd
aad
jg
and
jno
ficompl
sbb
or
jg
loopne
cld
decl
sahf
les
mov
fsubp
mov
push
test
ffreep
not
adc
add
push
repz
cmpsl
push
ljmp
movsl
sub
lods
popa
nop
push
scas
mov
inc
jbe
es
out
inc
scas
add
cwtl
jne
cmc
stc
lret
push
inc
outsl
subl
or
insl
push
fwait
mov
or
or
scas
cs
sbb
inc
hlt
sbb
data16
out
dec
mov
sarl
aas
jecxz
test
stc
cli
mov
shll
xchg
xchg
insl
lcall
loop
add
fadds
hlt
mov
and
jo
inc
push
js
jb
out
jb
mov
pop
call
mov
popf
cmpsl
mov
shlb
mov
mov
incl
addb
es
pop
cmc
sahf
outsb
fwait
or
mov
stc
addr16
call
cmpsl
xchg
and
stos
leave
adc
mov
fldl
pop
stos
call
scas
adc
inc
into
outsb
clc
int3
inc
dec
add
popf
scas
push
movsl
inc
stc
aas
cltd
sub
ret
divb
push
or
movzwl
xchg
inc
loop
add
rcl
shl
pop
imul
hlt
push
iret
sbb
adc
rcl
dec
cmp
or
dec
iret
pop
dec
shl
daa
inc
out
jno
dec
pusha
or
or
jne
fistpl
dec
je
or
outsb
cmp
push
lods
sbb
in
rorb
out
mov
jg
adc
in
lret
mov
inc
daa
nop
mov
add
int
xor
pop
daa
mov
pop
scas
je
bsr
mov
mov
push
xchg
cs
inc
pop
shrd
andb
jmp
rcl
inc
dec
movsl
filds
filds
hlt
dec
and
jbe
imul
xor
ljmp
ret
je
sub
stos
popf
dec
lret
jno
jecxz
jge
sbb
leave
aam
fldcw
push
call
xor
adc
mov
cmp
dec
pop
or
jno
cmc
dec
xor
or
xor
cmp
mov
sub
xchg
xor
dec
stc
jle
data16
sub
dec
sbb
and
out
bound
pop
mov
mov
xor
movsb
into
mov
cld
outsb
movsb
int3
pop
not
lret
scas
mov
andl
dec
pop
les
inc
pusha
ret
fidivrs
outsl
xchg
sub
cmc
jbe
xor
mov
xor
or
addr16
loop
push
loop
xchg
add
loop
leave
lcall
cli
sbb
sub
fwait
in
arpl
jp
push
pop
stc
ret
stos
inc
out
pop
jnp
add
inc
and
or
cmpsb
push
xor
loope
je
aad
sbb
clc
cmp
xor
dec
and
test
push
add
jp
fdivs
data16
pop
repnz
shlb
cmc
dec
ss
jbe
ljmp
fucomip
or
jbe
push
cmp
in
outsb
mov
pop
sbb
in
add
paddusw
movsl
sub
cli
push
clc
mov
jbe
and
je
shrl
adc
icebp
shr
pop
push
sub
shl
sub
shlb
xchg
jge
clc
jmp
ss
je
nop
hlt
sbb
cmpsl
je
mov
jno
adc
repz
lock
pop
test
call
rcll
mov
arpl
mov
adc
xchg
push
mov
pop
loope
movsb
out
scas
leave
xchg
lcall
and
int
rcl
cmc
addb
cltd
fstps
push
arpl
push
cmpsl
ja
faddp
arpl
inc
pop
imul
cmp
xchg
aaa
lds
cmp
mov
mov
mov
pop
add
sub
test
add
sub
adc
rcr
adc
rorb
andl
les
aam
mov
mov
mov
sub
lds
loope
mov
mov
push
negl
mov
aaa
idivb
unpckhps
cmpsb
filds
adcb
cmp
push
push
iret
mov
shlb
enter
add
cmp
aam
loop
mov
xor
add
pop
outsl
push
imul
insl
hlt
push
add
mov
dec
shrb
outsb
icebp
mov
add
cmpsl
sub
pop
outsb
test
adc
rcrl
inc
mov
js
loopne
daa
mov
add
push
daa
pop
outsb
dec
mov
lods
jae
add
bound
popa
roll
jg
or
adc
sub
cmpsl
mov
inc
shlb
adc
jle
notb
push
add
xchg
subl
jbe
pop
ficompl
mov
adc
jo
dec
mov
cmp
xchg
pop
sub
mov
pop
enter
jle
in
xchg
movsl
scas
outsl
mov
js
add
pop
enter
xor
xchg
inc
dec
addr16
mov
push
jp
push
jae
xor
movsl
mov
rolb
and
adc
push
fidivs
outsb
push
xor
jnp
fistpl
jbe
scas
aam
push
cmp
mov
enter
xor
test
and
aam
out
ret
sar
inc
imul
mov
dec
and
xchg
and
mov
inc
imul
jp
loopne
adc
adc
cmpsl
in
popa
add
xchg
xchg
cmpsl
xchg
xchg
es
subl
inc
xchg
gs
icebp
jns
and
mov
call
nop
pop
push
les
js
pop
rolb
icebp
aad
scas
ret
sub
dec
mov
mov
inc
jge
pop
mov
rolb
movsb
loop
xchg
jmp
pop
in
arpl
and
lds
jb
bound
mov
test
dec
dec
insb
movsb
ss
ja
fistpll
add
adc
adc
loop
lock
sub
ja
bound
mov
mov
push
fisttpl
xchg
lcall
push
xchg
scas
lea
push
out
and
ret
xchg
stos
or
fstl
inc
into
mov
cmp
pop
jecxz
inc
add
mov
mov
xchg
jbe
nop
mov
out
push
stc
cmp
jbe
stos
int3
mov
idiv
or
mov
test
leave
xchg
inc
ds
ss
stos
inc
fists
testb
pusha
mov
inc
in
sbb
pushf
mov
imul
jbe
mov
lods
ljmp
fdivp
push
sub
faddl
xor
jbe
adc
call
ljmp
sbb
push
dec
mov
and
dec
daa
rolb
loopne
loop
leave
inc
fisttpl
loope
shll
es
jecxz
cmp
aad
popa
mov
inc
add
in
push
dec
stos
ja
imul
notl
cmp
and
fisttpll
mov
addr16
into
ret
hlt
cmc
dec
pop
adc
test
mov
jg
adc
xchg
xchg
mov
loop
fildl
and
outsb
orl
loop
cmp
test
sbb
lea
pop
jmp
pushf
dec
repz
rcl
mov
std
in
ds
mov
test
xor
mov
ret
jno
loopnew
cmp
orl
dec
mull
mov
sbb
fldl
fisubrs
push
jecxz
jo
jle
and
pusha
push
jns
popf
sahf
jbe
jmp
inc
std
aad
scas
xor
mov
xchg
loope
clc
xor
jg
inc
andb
in
ja
add
adc
jl
mov
ret
arpl
adc
lds
arpl
add
orb
cs
xchg
jmp
loopne
in
das
mov
sarb
les
movsb
inc
mov
mov
jae
xchg
lods
lods
in
sub
cmpsl
mov
inc
mov
out
enter
dec
imul
orl
or
lock
loope
rcl
imul
lret
loop
inc
pcmpgtd
mulb
je
add
pop
stos
sub
dec
mov
les
out
inc
fldt
jne
inc
jbe
test
mov
test
mov
rorb
out
dec
jb
sbb
adc
jbe
jae
je
dec
and
mov
xchg
pop
mov
mov
bound
sbb
pop
xchg
xor
mov
dec
sub
test
jbe
add
xchg
faddl
xchg
movsl
roll
and
mov
xchg
sti
sub
sti
pop
fcomip
arpl
je
xor
cmp
enter
mov
xor
out
repz
daa
andb
lret
mov
sub
pop
lods
test
jmp
clc
setg
call
mov
push
cmp
pop
jb
std
cmp
jle
mov
jl
mov
jge
jecxz
in
add
sub
testb
bound
push
xor
push
cmp
aad
dec
outsb
inc
cli
lret
sbb
pop
add
ffree
pop
push
outsb
jge
mov
mov
push
inc
or
sahf
inc
lret
pop
rcr
cs
sbb
outsb
jns
adc
sub
rclb
arpl
jo
jecxz
icebp
xlat
movb
pop
fmuls
in
insb
cmpsl
jae
pop
push
outsl
inc
pop
loope
xchg
jbe
adc
and
loop
cli
and
bound
inc
mov
jbe
add
das
inc
das
mov
fildl
sub
push
jbe
addl
push
imul
xor
mov
frstor
out
jecxz
or
jno
sarb
mov
or
ret
in
mov
add
inc
rolb
jae
shl
add
push
mov
ret
sub
xchg
imul
sbb
clc
or
or
fldcw
mov
cld
aad
subb
jb
je
pop
bound
push
pop
cltd
imul
out
jnp
sub
mov
dec
outsb
xor
outsb
out
test
std
shl
jne
mov
push
xchg
mov
icebp
cmp
inc
sti
mov
aas
jl
adc
sbb
sub
sub
mov
inc
inc
mov
call
fdivrl
lret
popa
pusha
xchg
cmc
rclb
lock
xchg
xor
fcompl
pop
enter
mov
pop
sub
lods
push
xor
jle
and
add
loop
sbb
lret
jb
outsb
les
sub
cmpsl
lods
mov
xchg
loope
call
inc
jecxz
pushf
and
xchg
mov
cmc
cmpsl
es
jmp
jne
push
sbbb
in
repz
dec
xor
fstpt
push
mov
in
pop
push
dec
out
pop
mov
mov
dec
cmp
dec
fidivrl
inc
inc
inc
roll
bound
test
loope
cmp
repz
inc
bound
nop
inc
push
loopne
jne
add
int3
scas
jne
mov
push
inc
out
pop
imul
jge
mov
pop
push
mov
imul
and
jl
jbe
lds
xchg
cmp
cld
fildll
push
jbe
and
into
enter
add
movb
push
pop
inc
movsb
mov
in
mov
shlb
push
cmp
add
inc
cmp
jmp
ficomps
les
outsl
rolb
arpl
cmp
xchg
push
adc
mov
mov
pusha
sbb
fbstp
cmp
sbb
fsubrp
mov
pop
aas
dec
mov
inc
movb
test
sbb
adc
or
dec
cmpsb
bound
test
popa
sub
xchg
fistl
pop
xchg
jnp
or
sbb
fldcw
and
or
ja
notb
sahf
ds
mov
sub
cmp
inc
inc
pop
and
pop
imul
or
outsl
pusha
mov
sub
xchg
push
add
push
dec
fwait
inc
mov
loop
cmp
and
mov
cmc
mov
cmc
sti
jb
nop
jo
xor
je
aaa
pop
or
push
int3
dec
mov
lret
addl
add
std
daa
sub
inc
andb
push
xor
rcrb
xor
xor
jne
jmp
mov
imul
adc
cmp
mov
imulb
inc
call
stc
scas
push
sar
lcall
in
cmpsl
adc
and
sub
lret
xor
aaa
popf
cmpsb
inc
sbb
cmpb
push
pushf
fwait
pop
test
shl
mov
movl
mov
sub
hlt
shlb
imul
fbld
jbe
jmp
cmp
jge
ret
call
shrb
fsubp
lock
pop
push
add
cld
insl
repz
pop
cwtl
and
inc
cmp
cltd
fcoms
shlb
dec
push
xchg
fimuls
cmpsb
stos
push
mov
fwait
xchg
nop
movsb
pusha
int3
cli
out
daa
jbe
ss
mov
leave
ja
rsm
les
and
cmp
or
sub
rcl
mov
dec
ret
inc
jnp
or
pop
sarb
adc
outsl
mov
das
pop
hlt
and
jns
inc
push
cs
aam
sbb
nop
mov
adc
mov
push
dec
xchg
sub
sti
nop
outsb
xorl
push
add
jae
add
adc
cmp
ffree
in
xlat
shlb
mov
sbb
movl
push
sbbl
fisubs
mov
in
add
cmpsl
fldt
add
cli
dec
push
psllq
dec
pop
add
repz
dec
mov
dec
rolb
pop
or
repnz
push
sbb
sub
jne
loopne
sahf
sbb
in
xor
adc
aad
and
popa
mov
cli
sub
adc
mov
or
dec
mov
loope
add
push
cmp
pusha
add
mov
popf
inc
add
call
bound
outsb
cltd
adc
dec
iret
jb
out
pop
and
dec
sbb
push
mov
int3
icebp
mov
sahf
fsubr
out
cmp
sbb
rcl
in
xor
xchg
jmp
ret
pop
inc
shlb
je
arpl
sbb
repnz
or
mov
push
jo
push
pusha
shlb
lcall
xchg
popa
bts
mov
or
push
lods
add
outsb
cmpsb
into
jb
outsb
xlat
xor
les
ss
or
mov
or
fwait
call
enter
xchg
dec
pop
add
or
imul
fsubl
xor
arpl
or
push
pop
lods
dec
adc
call
sub
xchg
xchg
sbb
xchg
or
insl
rcrb
sub
cmpsb
push
cli
je
adc
and
testb
popf
inc
outsb
aam
movsl
push
sarb
dec
rclb
je
iret
jb
lret
popf
cmp
cmp
out
adc
call
mov
pop
in
adc
pop
outsb
cmpsl
test
pop
popf
shll
mov
cmpsb
xchg
inc
fs
mov
push
pop
adc
dec
pop
ja
sti
ja
test
push
insl
mov
mov
arpl
popa
rol
mov
pop
push
xchg
inc
pop
fnstsw
enter
into
jne
cmc
or
lcall
add
sbb
test
cmp
in
sbb
stos
adc
mov
xchg
adc
adc
mov
sub
aam
xor
inc
cwtl
mov
outsb
sbb
dec
pop
loope
sti
das
sub
jne
nop
pop
mov
jo
lret
popf
nop
stos
cmp
jle
xchg
in
cmpsb
hlt
lret
jmp
inc
jge
mov
repz
pop
pop
fdivs
cmc
lcall
addl
jbe
ja
cmp
pop
sbb
or
and
inc
bound
xor
inc
repnz
outsb
xchg
fdivs
sub
incl
sub
and
jb
dec
ja
xchg
fnstcw
lds
sbb
imul
fists
dec
inc
mov
mov
daa
or
sbb
push
dec
cmpsl
das
outsl
push
mov
dec
jae
and
call
stos
ja
mov
sbb
add
xchg
daa
push
adc
filds
add
jne
adc
test
mov
das
sub
ljmp
inc
mov
jo
jae
xchg
test
shl
sbb
xor
loop
cmc
adc
add
or
jle
cmpsl
cwtl
testb
pop
xchg
jns
and
pop
ja
mov
sbb
shrl
mov
adc
inc
into
or
fldt
push
dec
movsb
in
and
pop
push
fisubl
hlt
jo
sti
insb
insl
popa
xchg
jge
dec
mov
js
pushf
mulb
mov
fs
mov
rcrb
or
and
push
jae
out
adc
mov
mov
div
jbe
xchg
cld
mov
repz
xchg
jmp
out
loope
enter
mov
jae
shlb
pushf
cli
scas
cmp
cmp
dec
repz
mov
arpl
bnd
stos
add
mov
jno
dec
and
ss
rol
call
sbb
mov
sub
sbbb
pop
jne
sub
dec
or
xor
fisubl
mov
mov
pop
call
shl
sbb
xchg
push
iret
xlat
shlb
sub
loop
outsb
or
mov
mov
pop
jns
push
xlat
or
add
mov
inc
dec
into
enter
imul
mov
pop
adc
imull
rcl
sbb
arpl
sub
and
enter
stos
insb
mov
dec
das
not
bound
cli
fdivp
in
aam
repnz
sbb
pop
xor
inc
shlb
cmc
stc
mov
and
sarb
sub
bound
inc
mov
hlt
rcrl
inc
js
dec
fstpt
div
jge
cmp
dec
js
fs
adc
mov
dec
sbb
scas
out
dec
cmp
pop
int3
loope
jecxz
sti
pushf
jo
rol
sbb
push
cmc
cmp
lahf
sahf
fs
adc
dec
rclb
lcall
mov
and
xor
lret
cmpb
out
fcmovne
sub
pop
out
xchg
cmpsl
subb
pop
int3
bound
mov
xchg
and
fsubrl
je
loope
inc
fistps
xor
jl,pt
pusha
cmp
dec
and
testl
std
loopne
and
cmp
in
mov
adc
out
shrb
cmp
mov
in
mov
push
subb
call
jns
ret
shlb
dec
xchg
movsb
or
ja
dec
outsb
lcall
shlb
outsl
mov
cmc
dec
aam
jge
add
dec
mov
pop
jbe
mov
sti
insb
jg
in
ss
outsl
add
xor
decb
jbe
jne
jp
or
icebp
test
iret
das
inc
adc
movsl
out
sub
fistpl
jbe
pop
mov
pop
sub
mov
clc
pop
das
imul
inc
mov
xchg
stos
push
mov
sub
insl
pop
mov
dec
aas
shll
psadbw
ficoml
jo
in
cmp
mov
mov
popa
mov
movsb
out
dec
add
jbe
call
dec
aad
pop
sub
repz
arpl
inc
or
movsb
ljmp
int
in
popa
lahf
ficomps
loope
out
test
leave
push
shl
mov
mov
aam
jmp
dec
mov
lret
nop
shll
pop
pop
jae
mov
lock
in
hlt
push
jo
pop
lods
enter
ljmp
sub
in
insb
cli
aas
push
sbb
adc
insl
imul
and
hlt
xor
jne
inc
xlat
test
sub
push
cs
mov
in
sbb
mov
in
lds
and
stc
fwait
lods
lock
mov
jbe
cmp
cmp
in
aaa
hlt
lock
in
cwtl
sub
adc
and
mov
cs
and
mov
aad
les
adc
adc
sbb
pop
cltd
mov
lcall
add
mov
adcl
mov
scas
or
leave
jp
hlt
mov
xor
ds
inc
imulb
and
std
mov
rcrl
fcoml
jmp
mov
xchg
fs
push
dec
aad
xor
sbb
std
sub
or
loopne
pop
mov
scas
enter
jmp
mov
mov
sub
lret
push
adc
sahf
aaa
xchg
out
mov
mov
bnd
sbb
loope
sahf
inc
push
sarb
cmp
or
or
jecxz
mov
jnp
jns
clc
fdivl
movsb
stos
push
fsubrl
dec
jne
sahf
bnd
sub
dec
and
movsl
mov
pop
push
rcl
jnp
addr16
dec
jne
jns
mov
and
and
or
mov
jmp
dec
sar
dec
xor
xchg
outsb
icebp
out
xchg
inc
dec
aas
jecxz
fisttpll
lods
in
and
bound
cmpsb
mov
adc
push
lret
out
pop
pusha
xchg
nop
jne
outsl
push
rcr
or
popl
mov
outsl
inc
jns
xor
bound
mov
movsb
jbe
shll
popa
outsb
add
insl
divl
jbe
cmpsb
push
pop
inc
xchg
jne
pop
adc
jecxz
aaa
stos
pop
outsl
mov
pushf
icebp
mov
inc
dec
jl
in
sbb
lock
xor
inc
pusha
ret
add
push
mull
sti
rorb
ficompl
fadds
jns
icebp
inc
iret
sbb
sub
mov
jno
xchg
mov
repnz
aad
inc
rcrb
stos
mov
popa
or
adcl
pop
outsb
cmp
xchg
loop
add
pop
das
push
jnp
inc
and
das
mov
and
shl
jbe
je
inc
cmp
push
cmp
xor
and
sub
addr16
addb
cmpsl
popa
and
rorl
test
or
sbb
nop
pusha
bound
arpl
mov
cmpl
jae
mov
xor
shrb
pop
cmpsl
loopne
fsubrs
mov
out
dec
je
add
add
stc
sub
jmp
outsl
and
cmpsl
xchg
jae
int3
cmpsl
dec
mov
xor
test
cmc
xchg
cmp
or
sub
dec
mov
shl
jae
pop
cmp
mov
xorl
dec
cmovns
jbe
push
cmpsl
shrb
and
repz
pusha
int3
jo
fincstp
xor
mov
rcl
mov
pop
jge
add
dec
mov
ja
adc
push
push
and
out
insl
fidivrs
in
movsl
and
push
cmp
in
jbe
inc
cmpsl
in
add
jg
dec
sbb
adc
xchg
je
mov
push
xorl
push
fisubl
mov
test
rcrb
test
jae
adc
in
adc
push
subl
in
sbb
dec
ss
fidivrl
jmp
divl
sbb
xchg
mov
jecxz
clc
sub
les
add
lods
ljmp
sbb
insb
inc
inc
arpl
testb
outsb
popa
sbb
or
and
push
dec
adc
pop
add
outsb
negl
mov
out
adc
pop
xchg
mull
sarl
xor
cs
mov
sub
lret
xchg
cmp
push
pusha
and
mov
lods
inc
popf
out
and
jl
dec
sub
cltd
sahf
jmp
xchg
mov
arpl
inc
orl
inc
enter
sub
adc
rorb
and
add
aas
ds
add
mov
mov
outsb
jne
cmpsb
jge
xor
repnz
cmpsl
je
push
int
ja
lcall
arpl
es
loopne
lahf
test
repnz
int3
jmp
ss
in
push
shrb
pop
jg
addr16
aas
out
insb
sbb
loop
add
inc
data16
aaa
and
pop
test
test
mov
jmp
hlt
pop
cmovae
mov
push
fcmove
lahf
imull
enter
fidivs
jns
mov
lahf
add
mov
mov
shlb
mov
stos
mov
cmpsl
popf
fcoms
pop
aad
lock
bound
adc
sub
std
dec
add
fimuls
test
into
movsb
inc
mov
push
inc
or
out
mov
ljmp
or
lahf
xchg
jne
mov
and
adc
cltd
xlat
rcl
aad
rclb
imul
xlat
push
pop
sbb
in
pop
leave
jecxz
ss
sub
enter
adc
sub
or
jb
push
xor
xlat
popf
dec
mull
add
jmp
sub
iret
in
and
loopne
aaa
jno
jge
fbstp
add
imul
dec
push
jno
inc
jbe
imul
push
jo
popa
jne
testb
push
clc
and
jo
gs
and
sbb
sbb
jne
bound
add
inc
dec
cli
xchg
dec
flds
sub
lret
sti
in
mov
jmp
arpl
outsb
mov
in
adc
rcrb
cmp
cmp
sbb
mov
cmpsb
movsl
lea
mov
sti
and
jns
scas
and
bound
fisubs
xchg
xor
ss
xchg
stos
movsb
ds
sbb
inc
push
xchg
jbe
sub
mov
xor
repnz
aas
jns
rolb
add
adc
aaa
mov
add
mov
movsl
flds
stc
mov
jmp
sbb
push
imul
ljmp
sub
xchg
std
jbe
sub
xor
dec
cmp
rorb
lods
mov
les
dec
dec
bound
out
jbe
cmpsb
xor
pop
adc
ret
add
scas
arpl
lods
inc
xchg
xor
mov
mov
mov
and
and
adc
add
popf
ret
add
and
xorb
dec
sbb
test
cltd
inc
ja
lret
sbb
inc
fwait
test
cmpsb
lods
divl
mov
pop
je
jp
loop
cmp
jne
adc
popf
mov
insl
enter
or
outsb
mov
pop
mov
xchg
dec
push
int
mov
pop
jg
pop
mov
xor
adc
rolb
jns
push
jo
cmp
push
dec
in
out
call
shr
outsb
mov
lcall
lcall
jnp
and
and
push
popa
stos
lret
fisttpll
inc
adc
loop
loope
cltd
sarl
orl
inc
xchg
outsb
jno
mov
pop
fwait
push
mov
lea
add
outsb
dec
push
fisubl
or
pop
mov
popa
ds
cs
and
cmpb
push
push
fisubl
mov
rcll
sub
mov
bound
mov
dec
ret
loop
pop
adc
lea
fisubs
pop
test
dec
xor
out
divl
mov
xor
das
or
shlb
incl
fisubs
fbstp
cmp
mov
jbe
les
rolb
xor
mov
testb
mov
jecxz
sub
lcall
push
jno
lods
xchg
dec
dec
test
cld
sub
es
cmp
vpminub
fsubrp
sbbb
jb
jno
jbe
out
mov
inc
ficompl
out
jne
xor
push
movsl
sahf
xor
sub
add
pop
daa
loop
loop
aas
sbbl
xorl
push
sub
cmc
and
shl
xor
push
popa
repnz
add
adc
inc
jbe
mov
das
scas
lcall
hlt
sti
lods
fprem
fwait
loope
test
and
stos
jo
clc
dec
xchg
jns
jno
int
and
cmpsb
lahf
xor
mov
mov
cmp
xor
add
xchg
dec
mov
mov
cmc
outsl
loop
lcall
or
outsb
arpl
xor
imul
sahf
mov
pop
addr16
sub
outsb
in
mov
inc
test
pop
bound
jne
or
negl
mov
dec
mov
mov
loope
ficoml
pop
enter
loopne
test
mov
dec
mov
fidivs
push
add
push
sub
dec
outsb
mov
add
adc
xor
addr16
cmp
pop
pop
in
imul
mov
mov
pop
shrl
mov
mov
and
push
push
sbb
xchg
pusha
shrb
ret
or
ljmp
jge
mov
cmp
fstps
mov
rclb
testl
dec
xlat
sbb
fdivs
rcl
je
mov
or
lcall
mov
aad
les
xor
sbb
mov
ss
or
shl
outsb
subl
sbb
mov
popf
add
xor
ja
leave
popf
add
aam
addr16
lcall
int3
push
cli
and
nop
aas
insl
outsb
or
mov
lods
ja
pop
testb
xor
jle
xor
adc
insb
loop
and
cli
sti
mov
pop
subl
push
pop
lcall
test
dec
and
js
ja
ja
push
mulb
xchg
or
nop
popa
sarl
jmp
and
ljmp
imul
cmpb
pop
fbld
in
shrb
cli
dec
cmc
out
jae
lret
sub
scas
adc
mov
dec
les
repz
in
pop
sub
sbbl
jo
xlat
add
mov
fs
mov
xor
and
aad
pop
pop
loop
mov
loop
lods
cmp
ret
dec
aas
or
cld
mov
js
mov
xor
lds
das
outsb
sbb
dec
jbe
jmp
popf
cmpsb
lods
jb
sub
mov
jecxz
sub
sub
mov
out
cmovg
jge
jns
fldenv
popa
xchg
pop
sub
ja
loop
jne
adc
iret
push
incl
and
push
mov
fisubl
push
bound
sub
push
push
and
mov
dec
in
loop
cli
add
jo
nop
lcall
ret
push
addr16
xchg
dec
mov
andl
fcompl
xor
sub
in
imul
andl
nop
and
in
mov
jp
jns
jg
add
stos
jge
sahf
push
repz
dec
dec
xor
jp
xor
and
dec
mov
push
repz
jnp
mov
jmp
outsb
call
cwtl
jp
mov
clc
shlb
loopne
sub
jae
shl
bound
int
js
les
add
cltd
jns
nop
pop
insb
cmp
add
popf
pop
cmpsl
cmpsb
add
fldl
outsb
pop
jecxz
inc
add
push
repnz
mov
ror
shlb
inc
add
leave
xor
psubw
cmp
or
cmp
jo
test
adc
cmp
outsb
dec
cvtps2pi
mov
loop
fimuls
insl
sub
mov
outsb
sub
xor
mov
xchg
adc
je
push
push
hlt
jbe
xlat
ret
repz
mov
or
aas
inc
inc
add
in
cmp
adc
push
and
mov
jno
push
fwait
addb
xor
cmpsl
outsb
dec
jmp
mov
js
cmc
mov
sarb
mov
mov
lods
pop
aaa
imul
pop
adc
inc
outsb
pop
jecxz
xchg
jne
mov
push
inc
and
xor
dec
dec
adc
mov
sub
rcrb
stos
data16
jnp
nop
out
adc
dec
inc
xchg
mov
inc
test
dec
push
je
adc
inc
nop
in
push
movsl
sti
iret
pop
fdivr
mov
or
jae
xchg
push
jecxz
cmp
mov
js
repz
out
mov
pop
bound
andb
sbb
push
jne
fxch
jp
and
cmp
aad
jno
dec
adc
in
lret
fdivrp
aad
xchg
inc
xor
push
shrl
and
mov
out
adc
adc
repnz
test
mov
mov
cwtl
and
xor
fwait
repnz
mov
push
in
shll
xchg
das
sarb
das
lods
shlb
outsb
sub
pop
xor
or
add
into
mov
sub
xlat
rorb
loopne
outsb
test
es
pushf
popf
je
rorl
push
popf
je
and
jmp
adc
adc
jl
nop
hlt
mov
outsb
push
stos
push
pop
dec
push
rcll
pop
int
fsubrl
fsts
loop
mov
outsl
mov
bound
andb
stos
and
ret
fwait
insb
cmc
cmp
rorb
jmp
pop
sbb
mov
sbb
mov
leave
mov
sahf
sar
rclb
sub
jne
mov
mov
dec
inc
outsb
scas
dec
enter
xlat
cmc
jne
mov
inc
mov
aam
dec
lret
into
adc
add
push
sub
mov
icebp
fbld
mov
cmp
sahf
mov
push
xchg
inc
aad
xor
dec
adc
roll
arpl
mull
dec
mov
imul
inc
fisubs
mov
mov
jnp
outsl
add
pop
jecxz
mov
inc
sti
cmpsb
or
movsb
add
shlb
sub
mov
lods
ret
and
cmp
and
pop
xchg
jg
dec
sub
mov
mov
sbb
cmpsl
push
xor
and
hlt
xor
les
ret
ljmp
pop
push
push
push
mov
xor
cld
xor
sahf
add
out
fistpll
fs
mov
lds
dec
mov
push
lahf
bound
stos
inc
rorb
dec
mov
mov
lahf
and
inc
inc
or
in
jp
xor
xchg
das
jle
sbb
fisttpl
test
lds
push
rcrb
scas
xlat
in
loop
std
pop
pop
push
test
dec
xor
rcl
into
icebp
out
fidivrl
jmp
push
adc
stos
mov
insb
mov
adc
lahf
int3
or
or
xchg
xor
adc
add
mov
cmpsb
pop
lds
mov
push
mov
repnz
pop
das
addl
mov
mov
sbb
and
xor
or
mov
insb
aaa
mov
insb
dec
xchg
out
jge
inc
sbb
out
cwtl
cmc
iret
dec
jbe
ret
roll
stos
sub
dec
push
ja
sub
jbe
stc
pop
dec
outsb
jp
js
xchg
jmp
fs
iret
hlt
jb
outsb
mov
adc
test
jge
mov
negl
push
add
xlat
ficomps
loope
mov
jae
dec
out
ret
sbb
popa
stos
or
cmc
scas
dec
mov
jnp
adc
pop
push
mov
sub
jb,pn
dec
loopne
jbe
add
pop
pop
ss
pop
and
lcall
outsb
in
ret
or
movb
lock
adc
push
out
mov
jl
xchg
stos
mov
pop
cmpb
mov
pop
sub
repnz
jno
sub
lcall
repnz
dec
mov
ds
sub
pop
mov
nop
mov
pop
enter
out
js
jbe
mov
movsb
stc
pop
sbb
push
push
jg
movsl
push
xor
aaa
fwait
mov
aaa
mov
sub
pop
sbb
cwtl
pop
bound
and
nop
lea
mov
inc
test
outsb
pop
scas
pushf
xor
dec
sbbl
sbb
aas
mov
mov
jbe
cmp
iret
outsb
sbb
sbbb
push
insl
jo
ret
lahf
inc
push
sti
and
sub
jno
outsb
cwtl
add
inc
xor
or
sub
and
outsb
jbe
pop
stos
jb,pt
js
xor
divb
sub
arpl
hlt
and
adc
fdivr
jl
mov
shlb
xchg
stos
mov
jnp
rol
sub
mov
repz
jne
pusha
hlt
iret
push
mov
sahf
mov
push
popa
mov
mov
arpl
outsb
divb
mov
add
jne
insl
push
mov
out
jae
aas
sarb
insb
cmc
and
aaa
or
aas
out
outsb
icebp
dec
push
imul
and
xchg
shlb
out
xor
mov
and
bound
cltd
and
insl
lock
xchg
fs
pop
out
mov
pop
mov
shlb
outsb
mov
jecxz
xchg
sti
lahf
enter
test
push
or
jo
xchg
loope
sbb
adc
push
bound
cmc
jmp
lods
or
sti
add
stos
shll
mov
cmp
add
punpckhdq
add
and
fldt
and
inc
call
fsubrl
xor
sti
into
icebp
jae
fstpl
jmp
mov
shll
imul
mov
addr16
ret
in
xchg
jne
add
inc
insl
sbb
je
std
mov
xor
stos
push
imul
pop
fisttpll
lock
std
add
jecxz
popa
mov
xor
aas
or
sbb
push
out
aas
jbe
push
and
bound
dec
adc
test
cmpsb
ja
incl
sbb
mov
andb
movsl
jmp
unpckhps
jmp
mov
into
stos
ds
out
pushf
mov
push
push
mov
add
and
loope
es
or
or
mull
mov
gs
xchg
xchg
mov
loopne
addr16
lret
fldcw
or
jmp
mov
leave
adc
mov
and
leave
fbld
sub
dec
sbb
and
int
cmp
add
push
ds
loopne
jno
test
testl
push
cmp
in
inc
in
shlb
inc
stos
arpl
inc
lcall
dec
out
out
xor
fldl
xchg
push
cmc
lcall
mov
xchg
cmp
in
or
rcll
dec
dec
cmp
pop
jecxz
insb
repnz
cmpsl
imul
test
fnstsw
mov
ds
sub
scas
cmp
push
pop
test
jbe
pop
aas
sbb
cmp
loop
lahf
xor
test
pop
xchg
push
iret
nop
and
inc
cli
orb
imul
dec
pop
jne
jg
and
adc
mov
lods
ljmp
adc
les
mov
ds
repz
scas
sbb
fsubl
pop
hlt
test
insl
xor
stos
lods
aaa
mov
clc
xor
inc
jbe
jns
cld
outsl
dec
sub
cld
jmp
test
mov
testl
ret
imull
ss
mov
jle
inc
stos
fildl
divl
jns
dec
add
pushf
repnz
xor
mov
ja
sub
push
inc
jp
nop
in
in
and
lret
lcall
dec
cmpsb
mov
fmuls
ret
gs
mov
icebp
mov
in
dec
int3
testl
xchg
sub
dec
loop
fistpll
insb
add
mov
jbe
adc
iret
sbb
dec
inc
pushf
rcrb
in
je
jmp
lock
push
imul
fsts
or
loop
inc
lret
aam
mov
psubsb
mov
adc
jnp
cltd
loop
movsl
jb
daa
add
sub
into
popa
lock
mov
scas
xchg
pop
xor
outsb
gs
daa
popa
jmp
scas
fnstsw
mov
cld
es
popf
mov
into
imul
cmp
sbb
addl
ror
lahf
out
into
rcl
clc
fisubrs
cmp
in
jno
test
cmp
inc
lret
fildll
movsl
popf
in
mov
inc
lods
rcl
mov
lahf
in
pop
dec
loopne
sbb
aam
mov
bound
mov
push
cmpsb
push
outsb
mov
insb
adc
inc
or
iret
mov
lret
push
out
mov
and
sti
or
dec
call
stos
pop
stos
stc
cld
jle
sub
sub
test
cltd
dec
fmull
ljmp
xchg
push
mov
push
fistpll
or
inc
and
js
fisttpl
cmc
fbstp
in
or
andl
stc
cmp
lods
imul
outsb
repz
dec
icebp
std
outsb
ror
cmp
and
clc
or
push
lcall
jbe
mov
fwait
mov
push
dec
das
adc
ljmp
aas
out
dec
xorl
cmp
dec
and
int3
add
jmp
jbe
test
sahf
xor
rcr
outsb
stc
repz
stos
adc
jne
mov
sti
lret
shlb
jge
push
loopne
xchg
ljmp
arpl
mov
push
call
ret
adc
or
pop
repz
and
jmp
xor
outsb
adc
jbe
out
mov
inc
shll
ss
xchg
data16
outsb
pop
aad
std
aam
add
mov
outsb
les
adc
jmp
std
ds
inc
cli
int
fstps
push
adc
outsl
out
xchg
cmp
sar
gs
ljmp
sub
xlat
adc
add
rclb
leave
push
sbb
ja
bound
int
push
in
repz
xor
dec
fcmovnb
mov
xor
lret
out
fadd
pmaxub
dec
pop
rolb
clc
les
outsb
std
dec
sub
movb
std
loopne
inc
sbb
add
xchg
mov
fwait
inc
sbb
xlat
jae
push
add
mov
test
ret
insb
shrb
pop
das
fcmove
inc
dec
repnz
push
push
pop
and
loope
xor
xchg
jbe
and
push
xchg
sti
imul
or
xor
shrl
lret
ja
fadds
shl
mov
push
xchg
adc
mov
jg
xchg
das
jb
subb
jo
stos
inc
fsubrp
xchg
pop
pop
std
xor
xchg
pop
js
mov
lock
mov
fdivs
cli
lods
aas
hlt
and
stc
popf
out
push
jp
inc
imul
outsb
loope
aaa
pop
pop
or
les
adcb
std
dec
lock
negb
push
cmpsl
in
xor
call
jne
dec
mov
inc
into
sub
mov
rcrl
out
loope
adc
das
ds
push
adc
pop
mov
sbb
ds
pmaxub
pushf
push
test
bound
jbe
push
push
into
cs
mov
jae
scas
stos
mov
daa
add
adc
sub
mov
sbb
and
hlt
repnz
sti
fiaddl
fwait
das
call
stc
test
xchg
cmp
rolb
mov
sub
maskmovq
testl
pop
js
movsl
jg
bound
or
jae
pop
mov
rclb
mov
test
push
or
adc
in
dec
hlt
jmp
imul
xchg
rolb
sbb
lahf
mov
and
lret
jno
xchg
jno
jbe
test
out
adc
popa
pop
mov
jmp
xchg
data16
adc
sti
adc
and
sub
insb
dec
scas
adc
test
or
dec
jae
push
sti
xor
lods
iret
fnsave
or
insl
push
aam
sub
inc
shrb
inc
dec
dec
bnd
cmc
lods
mov
cmpsl
hlt
lods
popf
into
mov
cltd
jmp
xchg
inc
fninit
stc
mov
xor
dec
cmpl
inc
bound
push
add
pop
jmp
dec
jbe
sbb
js
mov
fdiv
ret
ffreep
adc
sbbb
hlt
cmc
and
add
mov
add
pop
pop
mov
fistl
in
pop
lods
push
repnz
sarb
adc
adc
jnp
bound
aam
push
mov
add
testl
fs
cs
jbe
inc
jno
mov
fwait
push
stc
pop
sbb
sbb
mov
mov
xlat
shl
sbb
push
aaa
add
mov
dec
xchg
mov
sbb
and
pushf
fisttpl
xorl
js
imul
pushf
add
imul
les
jbe
rcrb
mov
daa
jbe
imul
call
push
lret
dec
fwait
xchg
adc
out
shlb
leave
add
inc
imul
inc
into
js
test
xchg
sbb
jb
in
test
lods
ss
inc
xor
pusha
fildll
mov
aas
cmc
push
xchg
ss
xor
shrl
mov
mov
cmp
out
dec
adc
adc
les
jg
jo
outsl
cld
stos
lcall
mov
dec
iret
movsl
repnz
andb
mov
maskmovq
pop
loopne
je
mov
xor
and
adcb
xor
adc
xor
or
test
sub
add
and
adc
pop
push
jne
mov
pop
xchg
sbb
sub
inc
movsb
popa
ljmp
adc
pop
pop
fstl
push
sbb
jne
std
and
mov
inc
into
sub
cmpsb
fwait
pop
sahf
aad
int3
xor
loopne
sti
mov
push
mov
outsb
in
ss
cld
dec
push
in
loop
xor
imul
push
or
inc
jmp
mov
loop
jmp
jo
mov
je
sahf
test
jg
lret
cmp
data16
mov
xlat
mov
shlb
xor
and
ds
inc
js
out
test
add
fsubs
fdivrs
mov
data16
mov
and
ss
rcrb
test
xchg
popa
loope
mov
jae
mov
icebp
jmp
jo
xlat
lcall
jno
mov
nop
imul
cmp
inc
mov
add
popf
xor
insl
pushf
aam
push
pop
jnp
jbe
adc
movsl
lods
scas
ja
bound
stc
pop
movsl
push
pop
xchg
mov
xor
pop
sub
negb
push
jbe,pn
and
jmp
cmp
in
adc
sub
pop
push
or
cltd
loopne
push
ljmp
shlb
aaa
jg
pusha
testb
rcl
mov
push
fisttps
fiadds
fcompl
pop
cmpsl
lret
dec
je
arpl
jbe
jp
push
in
push
push
jnp
sub
scas
in
dec
mov
ficompl
lea
sub
pushf
shrb
xchg
cmpsb
inc
popf
shll
daa
mov
iret
mov
hlt
mov
jle
adc
pop
jne
push
inc
cmc
xlat
sub
cmp
or
cmpsl
jle
cld
mov
push
and
pop
add
fsubr
mov
jae
ja
mov
sbb
fidivrl
scas
sub
rclb
sti
ljmp
outsb
popa
dec
adc
cs
ret
std
pop
nop
add
adc
jo
bound
cmp
mov
jmp
popl
dec
adc
mov
neg
rcr
sub
push
sub
push
lock
sub
pop
mull
rcrb
mov
outsb
or
ljmp
push
and
mov
imul
sbb
xchg
int
inc
mov
mov
sub
dec
cltd
sub
xor
stos
out
rolb
inc
cli
bound
add
clc
mov
loopne
mov
or
push
fdivl
jbe
xor
jne
lds
not
ja
pop
xchg
mov
clc
das
cmp
mov
xor
mov
leave
mov
int
cmp
in
xchg
sbb
int
jnp
or
enter
sbb
xlat
and
inc
es
and
mov
testb
popa
lar
cs
test
push
xlat
mov
mov
and
sub
pop
lcall
push
or
in
shlb
fidivl
mov
mov
lods
dec
adc
mov
dec
scas
popa
test
incb
movsb
mov
mov
dec
inc
loop
push
adc
shl
dec
xchg
out
loop
add
stc
push
iret
ret
mov
inc
sahf
push
jmp
outsl
pop
cmc
dec
pop
aam
daa
dec
mov
sbb
push
mov
scas
fdivr
test
jecxz
sahf
push
ffreep
outsb
icebp
push
dec
mov
inc
cmpsl
xchg
bound
adc
adc
cwtl
bound
lds
add
mov
inc
pop
insb
in
movsl
lcall
mov
xor
insl
xor
mov
xchg
add
or
dec
pop
clts
and
xorb
lcall
mov
xor
inc
adc
sub
aaa
cli
mov
mov
pop
cmp
adc
xor
inc
ds
push
addr16
int
jecxz
pop
jns
in
mov
push
push
pop
shrb
frndint
shlb
in
cmp
repnz
iret
aas
fwait
arpl
js
mov
jae
jb
pop
out
and
xchg
dec
out
imul
das
mov
mov
mov
xchg
rorb
add
scas
loope
mov
testl
je
and
subl
imul
outsb
in
daa
les
or
sbb
cmp
imul
mov
stc
adcl
mov
xchg
out
dec
outsb
out
add
mov
push
mov
sbb
or
push
mov
sbb
arpl
fimuls
shrl
pop
mov
out
jmp
les
movsb
inc
out
jmp
sbbb
repnz
lahf
mov
jnp
pop
rcrb
repnz
adc
outsl
xor
sahf
xchg
dec
jno
dec
add
adc
cltd
int3
in
pop
adc
in
jbe
sahf
cmpsb
scas
popf
mov
packuswb
insl
jg
movsl
stos
pop
cltd
stc
xchg
leave
xchg
in
add
and
loopne
setno
cmpsl
sub
jl
mov
repnz
test
insl
icebp
xchg
sbb
aam
mov
test
divb
pop
test
arpl
hlt
jb
imul
stos
sub
pop
je
push
jb
vmptrld
xchg
int
out
sbb
xchg
add
nop
sub
jg
mov
add
xor
ds
xor
iret
mov
xchg
pop
xchg
adc
addr16
mov
or
jno
mov
mov
sti
jecxz
xchg
mov
sbbb
adc
push
pop
enter
gs
mov
sbb
xchg
cmpsl
rolb
insb
xor
pop
inc
daa
nop
rcrb
std
inc
push
xor
out
sbb
xor
imul
rclb
add
test
test
cld
fstpl
outsb
mov
mov
in
cwtl
in
call
cs
mov
mov
adc
sub
jb
mov
lods
rcr
xchg
adc
lret
cli
leave
push
mov
addr16
js
insl
sbb
push
loope
xchg
scas
sbb
hlt
cmpsb
sbb
mov
mov
cmp
jp
sub
lret
enter
jmp
adc
xor
mov
cmc
xorb
xlat
leave
add
push
lret
mov
arpl
mov
add
sub
stc
lds
mov
outsb
icebp
adc
xchg
mov
mov
jle
outsl
data16
pop
negb
jae
inc
fldt
stos
cmp
sarb
jnp
adc
mov
xor
mov
sub
mov
test
movsl
pop
lds
das
pop
jno
fcomps
sti
xchg
fcomi
xor
pop
fisubs
shl
les
xor
or
fs
dec
sbb
mov
loopne
daa
scas
sub
lea
xchg
push
adc
mov
jecxz
mov
test
ss
aad
xchg
jle
mov
sbb
or
xor
ds
stos
outsb
pop
into
cmp
bound
fisubrl
pop
mov
and
xlat
mov
rorb
xchg
cmpsl
push
in
pop
mov
in
js
jne
aam
mov
jg
mov
push
test
push
movb
addr16
movsl
sahf
out
adc
out
mov
fsubrs
jnp
add
dec
mov
je
out
loope
jecxz
loopne
in
test
mov
or
mov
imul
xchg
fdivs
and
aaa
dec
mov
fs
cmp
lret
push
mov
std
movsl
lods
repz
fnsave
repnz
cld
jns
stos
iret
pop
add
popf
jae
sub
push
jbe
inc
and
pusha
cmpsl
sbb
xchg
in
mov
in
and
mov
and
idivb
push
xor
fisubl
loop
in
sbb
jnp
mov
shlb
sbb
add
outsl
in
mov
lds
cmp
adc
jae
push
test
repz
sbb
sub
call
inc
in
cmp
in
or
loop
push
outsb
hlt
jmp
test
mov
mov
and
add
push
and
outsb
jl
lcall
lret
es
or
jl
popf
mov
adc
jo
outsb
fwait
ja
pop
sahf
sahf
dec
aad
cmpl
mov
imul
outsb
ret
in
sub
cmc
and
aam
lahf
mov
fidivs
sub
in
push
loope
adc
pop
jbe
lret
xor
mov
sbb
mov
outsb
add
cmp
divb
jbe,pn
addr16
leave
repnz
sub
sbb
push
pop
mov
mov
test
ljmp
adc
jns
shlb
dec
jbe
loope
cs
xorl
in
push
xchg
sbb
insl
xchg
pop
je
lods
test
hlt
je
push
push
sbb
addb
std
pop
jbe
insl
jmp
cmp
xor
fiadds
cmpsl
pushl
outsb
jo
outsl
inc
pushf
lahf
out
sub
xor
outsb
or
cmpsb
jmp
popa
repz
jge
imul
sub
fwait
jmp
lret
sahf
jl
jns,pn
sti
in
jg
sbb
add
mov
into
loope
in
xchg
clc
pop
roll
outsb
fimull
loope
fcoml
xchg
lahf
push
jmp
sbbb
shlb
jmp
setae
out
jl
js
cmc
push
xor
loopne
dec
ficoml
ret
lret
and
scas
out
jbe
pushf
mov
cmp
push
out
mov
stc
sbb
sub
dec
xchg
outsb
or
mov
adc
or
cmp
add
pushf
xchg
cld
inc
xor
aad
xchg
repnz
ret
add
add
jno
insl
ja
cmpb
das
imul
sarb
jb
lea
dec
into
ds
xchg
out
dec
cmp
movsl
addr16
shlb
scas
cmpsl
mov
rolb
mov
and
mov
ss
cmc
scas
ds
outsb
movsl
push
sub
fisubl
shl
mov
mov
mov
jbe
rcr
mov
es
sub
lcall
lock
xchg
xchg
sbb
js
jmp
je
mov
mov
ljmp
cmc
fwait
iret
adc
and
xor
jecxz
jbe
push
and
mov
cmp
lret
test
shrl
aaa
mov
sahf
shlb
jge
push
pop
mov
mov
imul
and
mov
pop
jmp
shlb
test
es
movsb
add
sub
jae
inc
jne
scas
dec
fwait
dec
xor
adc
pop
lea
jae
xor
lods
push
fwait
mov
add
push
repz
inc
xchg
cmp
adc
lcall
outsb
sub
jbe
jne
dec
push
mov
lods
negb
pop
mov
mov
lods
pop
push
pop
pop
or
packssdw
nop
and
test
jl
and
mov
dec
loope
rclb
sbb
jecxz
and
jo
cmp
add
cld
inc
ljmp
adc
aaa
stos
jg
in
shr
inc
sbb
mov
jo
mov
arpl
pushf
int3
bound
add
mov
inc
rolb
out
vphadduwd
mov
jbe
call
cmc
shrb
jne
es
int
inc
mov
jae
fcmovnb
stc
inc
mov
dec
mov
addr16
addr16
out
jl
add
pushf
arpl
mov
scas
xor
xchg
or
jbe
call
into
aam
push
cli
ja
dec
fidivrs
cmc
in
mov
std
fs
notb
enter
or
jg
jp
xchg
jle
xchg
pop
ss
push
and
aam
mov
mov
mov
inc
adc
adc
test
sbb
mov
push
pusha
cmp
cli
mov
notl
cs
dec
jb
pusha
ljmp
lahf
mov
mov
inc
pop
shr
lahf
adc
cmpsl
jp
fwait
js
sti
gs
inc
dec
lds
movl
sub
jne
call
mov
in
test
mov
push
test
dec
jae
daa
stos
sbb
xchg
cltd
add
mov
sbb
fdivrl
sub
outsb
scas
lret
inc
dec
fs
loopne
repz
push
sarb
dec
xchg
xor
addl
adc
cmpsl
in
cmc
xchg
cld
mov
cwtl
lahf
cmp
mov
repnz
push
push
repnz
jnp
in
add
xor
ljmp
sbb
mov
push
xor
push
cmp
xor
test
mov
std
addb
xchg
ja
mov
scas
iret
adc
add
or
xor
mov
or
divb
mov
mov
rcrb
in
sub
repnz
out
rcrb
mov
lahf
push
jecxz
rclb
xlat
ss
dec
sub
vshufps
jg
mov
inc
pop
jmp
mov
mov
sub
xchg
popa
mov
int3
repnz
cmp
xchg
push
jno
cmp
cmp
out
dec
adc
push
jbe
xchg
cld
add
aas
mov
fnstenv
jno
push
xorb
dec
addr16
loop
push
sub
sbb
ja
dec
pop
stc
cmpb
iret
mov
rorb
xor
stos
xchg
in
movsb
rorb
ret
lods
and
sti
push
jecxz
push
adc
xchg
push
lcall
js
mov
rclb
mov
leave
push
shlb
hlt
fwait
cli
and
xor
in
xlat
sbb
lock
arpl
arpl
cmp
aam
add
push
aad
fists
jb
xchg
cmpsb
pop
subb
mull
add
jb
dec
sbb
or
popa
shlb
dec
bnd
xor
xchg
es
xor
mov
add
mov
ret
mov
js
push
enter
pusha
cmp
test
cmc
adc
lret
popa
xchg
pop
pop
pop
stos
dec
outsb
ds
add
pop
xlat
cld
notb
pushf
xlat
call
mov
mov
mov
adc
dec
dec
arpl
movsl
mov
clc
mov
rcrb
or
mov
mov
outsb
dec
call
or
push
outsb
std
shl
subb
xchg
mov
xchg
arpl
outsb
jb
sbbl
jbe
inc
imul
outsb
pop
mov
int3
xor
inc
cmp
sub
lahf
inc
push
xchg
xor
out
add
inc
pusha
rolb
sub
js
push
rcrl
and
call
and
or
add
cs
ja
jge
mov
and
adc
xchg
jae
ja
sarl
lods
push
shrb
nop
jns
xlat
push
aad
das
ds
aas
adc
insb
jbe
mov
mul
inc
adc
jae
or
stos
cmp
hlt
bound
and
jbe
fdivrs
dec
fimull
push
adc
mov
mov
lcall
mov
jb
inc
fistpl
pop
push
push
fisubrs
lahf
add
or
inc
xor
push
mov
loopne
and
fwait
mov
repz
das
js
sbb
fldenv
or
stos
rcr
into
cmc
inc
jne
movsb
test
idivb
inc
mov
pop
fcomi
inc
xor
pop
jae
outsl
cmpsl
idivb
leave
mov
pop
divl
inc
adc
lods
loop
outsb
jo
pop
xchg
fisubrl
dec
testb
mov
jns
jae
and
fsub
loop
daa
mov
notb
pushf
dec
adc
lret
ljmp
mulb
inc
jmp
bound
fidivl
out
dec
pop
push
cmp
and
cmp
aam
cs
hlt
or
addr16
ret
rcl
scas
and
ljmp
push
dec
push
rcr
iret
fucomp
insb
xchg
in
aad
and
rclb
xor
incl
stos
pop
repnz
test
inc
imul
fildll
das
data16
jp
repz
loop
mov
lahf
sub
mov
outsb
mov
bound
popa
jne
push
fucomip
pop
iret
cmp
aas
bound
aam
cmp
xor
xchg
je
loope
cmp
cs
mov
popf
sahf
popa
addb
inc
sbb
fwait
divl
cmc
cltd
jbe
jl
call
notl
xchg
cmp
jecxz
subb
dec
push
ret
js
mov
sub
lock
pop
mov
test
ret
std
sahf
pop
push
xchg
xor
add
test
pop
das
loope
pop
add
cmc
mov
pushf
dec
arpl
and
mov
in
out
jmp
sub
xchg
push
sub
push
xor
ja
out
inc
pusha
enter
jne
adc
outsb
and
cmp
mov
inc
test
jle
xor
and
fnsave
dec
popa
mov
jecxz
stc
out
xorb
mov
testl
inc
popf
mulb
outsb
inc
xchg
int3
and
sbb
int3
aaa
inc
mov
cmp
loopne
stc
mov
outsb
add
dec
or
cmc
mov
add
shll
flds
hlt
pop
and
pop
shrb
cmc
xlat
adc
xlat
popf
and
std
daa
shlb
aaa
mov
mov
cmc
jg
dec
es
lret
cwtl
in
fistps
orl
loope
jbe
flds
and
leave
scas
in
mov
movsl
dec
mov
mov
loop
jbe
arpl
or
adc
dec
hlt
pop
xor
and
inc
inc
js
js
int
jne
pop
fst
gs
add
aaa
adc
rorb
sub
bound
dec
mov
mov
rclb
pop
jecxz
mov
sub
jb
adc
stos
xor
int3
fisttpll
xor
sbb
scas
inc
and
std
mov
fwait
rolb
jmp
pop
and
stos
jb
fisttps
insb
pop
cmpsl
je
sbb
popa
and
xchg
mov
mov
stos
out
push
test
fwait
outsb
inc
ja
add
cld
adc
xchg
pusha
ja
mov
pop
arpl
inc
ficompl
sub
push
or
sub
xor
bnd
and
mov
mov
ret
out
dec
int
lcall
fisubrl
push
arpl
or
push
inc
test
lds
inc
pusha
scas
mov
add
xor
fadd
pop
or
xor
jbe
addb
mov
sub
out
pusha
pop
xchg
jbe
das
and
loop
push
lret
add
pop
inc
unpckhps
push
rcl
or
cli
add
loope
je
aam
pop
add
xchg
outsb
mov
loop
dec
lea
push
inc
add
xchg
pusha
dec
dec
das
push
mov
popa
and
mov
xor
xchg
ss
mov
in
fiaddl
fistpl
in
push
and
leave
mov
idivl
into
jne
mov
push
xor
fidivrs
enter
or
push
push
jns
fcmovne
add
shlb
mov
jns
movsl
adc
shlb
xchg
jbe
push
lods
push
dec
fidivl
sub
shll
adc
cmc
or
out
sbb
loope
inc
pop
xchg
ja
xchg
in
sbb
xor
inc
xor
and
jl,pn
rcrl
xchg
mov
mov
ret
xor
xchg
jmp
outsl
push
jge
sbb
push
push
data16
xorl
pop
mov
pushf
dec
imul
ret
cmpsl
push
sti
cmc
dec
hlt
pop
lcall
xor
push
inc
cmc
out
cmp
mov
jecxz
into
popa
stc
fdiv
hlt
sub
push
stc
push
arpl
jmp
and
mov
xor
pop
test
je
add
fisubrs
lahf
xchg
pop
pusha
add
jle
ficoml
hlt
pushf
jnp
int3
cmpb
sbb
mov
sbb
shl
pushl
inc
inc
push
out
arpl
mov
mov
mov
cmc
jbe
in
nop
add
pop
fwait
stos
insb
dec
xor
jmp
test
mov
mov
push
mov
xor
dec
add
subb
push
mov
mov
sub
mov
addb
outsl
loop
xchg
movsb
sbb
inc
enter
shl
js
push
pusha
mov
cmc
hlt
test
stc
pop
lret
hlt
enter
mov
cmpsb
add
loopne
out
pushf
jle
shlb
subl
stos
movb
or
imul
xchg
sbb
mov
push
pop
mov
and
adc
xchg
dec
cmp
scas
mov
sahf
outsb
push
inc
enter
leave
pop
add
int3
hlt
push
loope
rcrl
fnstcw
and
or
mov
pop
xor
or
dec
xchg
arpl
sub
jo
push
xor
cli
adc
mov
sub
sbb
jecxz
dec
cmp
lahf
in
js
ds
inc
xor
inc
adc
arpl
inc
rcr
imul
adc
fistps
rorb
ss
ficoms
enter
pusha
sbb
aas
call
add
xor
mov
cmpsl
std
push
mov
xchg
lcall
inc
shlb
sub
popa
mov
nop
cmp
aaa
ret
mov
sub
push
xchg
std
iret
mov
mov
mov
mov
int3
es
pop
cmp
pop
mov
cmp
lahf
mov
jb
sub
adc
cmpsb
arpl
sahf
ret
outsl
sbb
div
sbbl
repnz
jbe
push
mov
pop
pop
aaa
movsb
call
punpckldq
les
hlt
jbe
xor
dec
in
in
fidivs
jle,pt
jle
mov
in
insl
fcoms
stc
jns
jecxz
shlb
and
stc
xchg
lahf
dec
and
fdiv
mov
sbb
mov
repz
daa
sub
imul
popa
lea
push
mov
outsb
inc
inc
jbe
xor
dec
fwait
push
loope
sbb
lret
sarl
dec
aaa
aaa
inc
repz
dec
push
jge
xorb
mov
xchg
into
dec
ljmp
addb
orb
sub
mov
fdivs
out
cld
mov
adc
sbb
jmp
dec
fneni(8087
icebp
jno
pop
out
mov
fcomip
outsb
sub
push
mov
outsl
mov
pusha
push
into
sti
popf
mov
inc
data16
jg
ret
xchg
adc
repz
dec
cmc
pusha
pusha
dec
cmpl
outsb
push
insl
hlt
ljmp
xor
pop
pusha
and
xor
aas
mov
ret
xor
push
shrb
inc
out
dec
xchg
lret
inc
out
rclb
daa
movsl
stos
out
rol
pop
dec
testl
je
lret
mov
mov
push
mov
jnp
dec
inc
jbe
movsb
adc
pop
xchg
dec
jge
mov
insb
test
dec
push
add
pop
add
jg
daa
les
sub
cmp
push
ds
mov
pop
nop
dec
jae
dec
scas
cmpsb
cwtl
mov
stos
mov
sub
arpl
jle
and
jb
repnz
nop
js
paddusb
or
dec
sbb
out
sbb
dec
sub
sub
dec
scas
jne
fbld
xchg
repnz
xchg
push
jmp
mov
hlt
arpl
gs
in
fisttps
jbe
pop
clc
shrb
out
push
ja
cmc
es
lret
or
jno
add
pop
push
repz
jbe
insb
in
and
dec
push
loope
daa
sbb
lret
cmpsl
add
adc
jecxz
jbe
mov
daa
icebp
mov
add
out
not
push
push
test
jns
or
mov
outsl
adc
test
push
lret
dec
fldcw
mov
cld
mov
inc
mov
adc
mov
out
mov
testb
pop
dec
fcomip
cld
loopne
pop
mov
pop
outsl
movsb
jmp
dec
jecxz
push
or
test
jnp,pt
rcll
jnp
jecxz
rcrb
in
mov
repnz
and
testl
xchg
rcl
outsb
pop
arpl
fs
popl
or
mov
aas
shlb
and
outsb
arpl
outsb
aas
pop
fildll
adc
ret
cmpsl
add
or
popf
push
cld
push
pop
mov
mov
in
ja
shlb
mov
inc
and
loop
pusha
push
mov
inc
loopne
pop
ret
mov
fmul
scas
in
push
rcrb
mov
notl
xchg
lods
addr16
idivb
mov
jbe
repnz
push
cmpsl
mov
imull
divb
and
pop
mov
data16
push
jle
xchg
test
filds
cmpsb
pop
or
stos
xor
clc
fidivrl
in
push
inc
push
and
push
xor
repnz
push
mov
jmp
out
aam
or
inc
sub
pop
aam
mov
xchg
lahf
imul
fbld
sti
lea
sarl
in
mov
inc
xchg
int
pop
nop
mov
cmpsb
jne
xlat
pop
outsl
shrb
push
xor
xchg
pop
and
cmc
mov
das
adc
std
or
ljmp
sti
mov
sub
mov
out
pop
pop
fimull
sbb
add
bound
push
inc
jns
and
adc
scas
loop
outsb
pop
mov
rorl
fsubs
fldpi
push
xchg
inc
rolb
pusha
fidivl
dec
pop
sbb
test
pushf
aas
or
in
mov
test
stos
push
outsl
ss
mov
pusha
fsubrp
xchg
sarb
cmp
insb
rclb
jecxz
and
fiadds
inc
pop
push
push
pop
std
and
cmc
xor
aaa
lcall
jle,pt
cwtl
xor
arpl
or
dec
mov
loope
pop
or
cmp
loope
push
adcl
and
iret
xchg
mov
lds
cmpsb
daa
popf
push
mov
pusha
addr16
std
cld
into
jnp
sub
mov
push
jmp
jnp
jbe
scas
mov
add
lret
inc
xchg
repz
rcl
mov
pusha
outsb
sbb
and
dec
je
mov
add
das
outsl
sub
int
adcb
mov
dec
out
jmp
mov
pop
psubsb
mov
and
jecxz,pt
xorb
jno
out
inc
rolb
push
cmc
repnz
insl
aad
sub
shlb
fwait
push
fwait
mov
mov
orb
divl
shl
mov
and
xor
ret
dec
call
mov
mov
ret
mov
xchg
int3
into
fdivs
test
push
repnz
xchg
repz
popa
inc
aaa
fstpt
mov
mov
test
les
xor
out
enter
sub
stos
pop
negb
push
cmp
mov
jnp
mov
scas
jecxz
mov
push
adc
or
and
push
sub
ja
jbe
inc
lods
lahf
xor
jbe
xor
out
int3
and
loopne
inc
shl
xor
xchg
jge
ljmp
pop
addr16
mov
frndint
mov
loopne
je
xchg
rclb
jle
and
pop
decb
xchg
aad
es
dec
les
push
not
aaa
inc
mov
add
push
mov
jnp
jb
push
jne
in
jge
imul
push
push
xor
xchg
adc
stos
jl
mov
aad
lret
outsb
mov
dec
cmpsl
sbb
lahf
mov
dec
inc
fcmovb
popa
pminsw
and
js
inc
sub
add
dec
nop
sub
mov
cmc
movsl
adc
adc
pop
xchg
push
xchg
pop
popa
sbb
es
mov
xorl
and
popa
inc
jbe
push
das
popf
testl
cmpsl
in
and
aad
adc
dec
inc
fnstcw
addr16
sub
sub
loopne
ljmp
insb
shll
cmc
aam
repz
fiadds
dec
lahf
sahf
push
or
push
pop
sub
shl
sbb
lcall
mov
in
inc
ss
pop
clc
lds
int3
movsl
xor
insb
dec
or
xor
add
push
mov
mov
lcall
jge
ret
pop
jns
mov
cmc
out
pop
repz
outsb
test
adc
xchg
pavgw
ficompl
xor
dec
xor
add
add
and
fadd
lcall
out
nop
fbstp
imul
and
fimull
xchg
adc
xlat
mov
push
outsb
pop
test
pop
stc
test
mov
fistps
into
pushl
stc
mov
push
lcall
xchg
ficoml
shll
mov
push
in
and
aad
insb
dec
sbb
lea
cltd
xor
sbb
or
subb
rcrb
movsl
call
testl
jae
stos
jno
ja
sub
sub
sahf
ret
test
in
das
mov
rol
bound
sbb
pop
das
dec
pop
insb
mov
lds
aad
and
sti
sbb
xor
jnp
jb
fiaddl
in
fsubrl
jae
ljmp
inc
lods
mov
xor
xor
mov
addr16
mov
xchg
jbe
orb
scas
ss
jno
lea
mov
adc
call
insl
adc
or
adc
lahf
mov
xchg
movsl
aad
loopne
push
ret
mov
in
sub
aas
mov
jmp
xchg
data16
pop
cwtl
outsb
cmp
pop
cwtl
bound
stos
jbe
push
dec
test
loopne
sbb
outsb
ljmp
lcall
mov
adc
jae
xor
int
addr16
cmp
fwait
sbb
and
movsb
push
push
stos
pushf
xchg
inc
sti
cmpsb
mov
sub
adc
lahf
pop
sahf
mov
jb
pop
mov
jno
rolb
stos
imul
add
bound
adc
dec
xor
das
out
xor
testl
stos
jmp
inc
daa
fs
outsb
pop
add
pop
jae
nop
xchg
and
cmc
mov
sbb
shrl
inc
shlb
imul
inc
js
jnp
mov
adcb
sbb
xchg
pop
dec
js
adc
fdivp
insb
idiv
jecxz
mov
cmp
in
sub
and
jmp
and
stos
jg
out
es
sub
aam
cli
lods
shl
cmpsl
or
push
mov
nop
xor
mov
or
and
icebp
popf
dec
xchg
orb
push
sub
or
pop
loop
push
aam
pushf
mov
sbbl
pop
int3
scas
mov
adc
shlb
stos
out
or
enter
scas
lods
iret
shrl
add
test
scas
fidivs
rcl
add
outsb
stos
in
push
negb
shl
pop
mov
sti
xor
shlb
idivb
cld
adc
xchg
jbe
cld
ljmp
mov
insl
ss
fcmovu
jnp
aam
push
icebp
inc
fimull
int3
sub
sub
in
shll
push
std
lahf
xchg
inc
xor
pop
out
adc
addr16
fs
cmpsb
loope
repz
arpl
lahf
inc
mov
sahf
pushl
fsubrs
mov
mov
pop
shlb
pop
popa
loope
loop
xchg
sbb
ss
cmc
jns
xchg
push
loope
xchg
jge
or
inc
inc
ret
push
jmp
scas
add
in
mov
inc
adc
jns
mov
fists
inc
adc
xchg
mov
scas
push
cmc
bound
xor
push
mov
pop
imul
mov
fcomps
outsb
cmp
cmp
scas
lret
test
mov
mov
loopne
xchg
ret
jnp
push
rorb
fistps
adc
movsl
dec
add
stos
pop
xorl
pop
in
in
mov
cmp
cmpsl
cmp
pop
cmc
mov
inc
jae
xchg
shlb
test
insl
test
test
clc
inc
shlb
mov
scas
push
aaa
pop
push
faddl
mov
jae
sbb
js
fimuls
lret
into
xor
fistps
out
sbb
xchg
xchg
int
adc
pusha
mov
outsb
shlb
sub
pop
sub
loope
mov
add
xchg
inc
inc
imul
pop
sub
sub
ds
add
adc
leave
or
shl
jmp
dec
jne
addl
jp
lret
cmc
cmp
and
test
add
iret
out
pop
dec
cmp
jae
stc
sub
hlt
imul
push
out
push
mov
inc
jbe
cmpsb
push
adc
test
ficomps
int
jb
sbb
xchg
pushl
adc
sbb
sbb
outsb
cmpsl
cmp
mov
push
xchg
lods
popa
jb
test
mov
jl
aaa
jno
popa
and
scas
xchg
shrb
push
cwtl
dec
sbb
movsb
sbb
orb
fadds
ljmp
jge
cli
mov
cltd
movl
icebp
das
fs
adc
outsb
ret
in
shlb
mov
imul
jne
mov
shufps
inc
and
movsl
outsl
sbb
rorb
fidivrl
std
shlb
iret
mov
sbb
jle
pop
xlat
xchg
ss
not
incb
cmp
jno
out
data16
xchg
mov
pusha
sbb
add
enter
xchg
xor
dec
lock
dec
into
pop
push
loop
mov
gs
pop
inc
mov
imul
jmp
fildll
add
lret
xchg
sub
les
loope
push
data16
xchg
dec
enter
push
aad
jb
into
mov
fmull
jns
xchg
cwtl
fisttps
iret
shr
mov
out
pop
dec
or
loopne
stos
mov
outsb
pop
pop
pop
cli
icebp
shrl
mov
mov
or
inc
xchg
push
xchg
enter
rcll
sbb
leave
inc
fidivs
mov
add
vpunpckhbw
popa
inc
not
inc
ret
insb
in
fdivrs
ret
mov
ja
inc
rcrb
test
inc
or
sub
mov
inc
mov
xchg
rolb
add
shll
lcall
rcl
sarb
outsb
add
and
pusha
inc
jns
mov
dec
or
rcll
outsb
xchg
fidivs
pop
or
mov
rorl
popf
adc
pop
in
arpl
add
or
mov
push
popa
xor
adc
adc
pop
enter
mov
lahf
push
repnz
insb
mov
iret
outsl
fcom
je
inc
cs
inc
shll
fdivr
inc
movsl
push
adc
popa
pop
in
inc
push
popa
icebp
mov
jmp
xchg
jo
out
int
mov
mov
mov
jo
mov
jmp
and
out
das
andl
test
repnz
inc
dec
cmp
fs
and
mov
dec
push
fbstp
sbbl
inc
pop
inc
mov
in
mov
movsl
and
pop
xor
xor
mov
pop
mov
jg
test
pusha
add
mov
lds
inc
fcomp
das
push
std
push
push
pop
inc
out
aam
hlt
stos
div
rorb
je
and
outsb
xchg
mov
in
jns
dec
cmpsb
call
sub
jbe
xchg
mov
pushf
outsb
mov
insl
adc
fmul
dec
xchg
aam
sbb
mov
add
xchg
sub
scas
stc
idiv
enter
inc
outsb
imul
push
leave
or
stc
cwtl
rcrl
lcall
inc
mov
mov
scas
je
inc
pop
mov
inc
push
rcl
add
scas
insb
pop
add
xchg
xor
cmpsb
cld
mov
mov
loop
test
adc
sbbl
test
shrl
mov
outsb
inc
inc
je
push
xorb
and
outsb
jbe
fwait
push
or
cwtl
jecxz
jle
xor
jmp
cwtl
into
leave
loop
das
mov
addb
xchg
mov
movsb
push
jb
sti
das
or
xor
dec
push
fistpll
shlb
in
incl
loop
repnz
nop
iret
in
xchg
shlb
pop
mov
cmpl
imull
movsl
lods
xchg
mov
xor
je
popa
pusha
rcl
outsb
repnz
mov
cmc
sbb
insb
jp
cmp
aaa
test
imul
ror
mov
stos
mov
push
pushf
xorl
or
inc
push
inc
cli
push
xchg
sbb
mov
push
jbe
and
pop
ja
mov
inc
lret
popf
dec
scas
in
cmp
shr
pop
fildll
stos
testb
dec
mov
pop
fsubp
xchg
push
sbb
loop
xor
xor
dec
dec
ret
mov
out
sub
xor
pop
aas
idivl
cmp
mov
negl
pusha
jb
mov
sbb
mov
shlb
sti
dec
push
xchg
push
sbb
leave
cltd
addb
mov
shlb
or
icebp
add
xor
pop
leave
adc
mov
pop
loopne
pop
pop
jnp
lahf
and
xchg
imulb
outsl
movsb
cmp
inc
ficomps
mov
jecxz
cmp
jmp
fisubs
subps
sub
push
add
push
lods
jnp
hlt
jbe
mov
lds
pushl
or
in
xor
loop
adcb
sahf
insl
std
es
jecxz
push
jbe
sti
fistl
sub
xchg
insb
ret
sbb
bound
and
push
enter
adc
jbe
inc
mov
stc
loop
out
xchg
push
test
add
xchg
sahf
andb
and
call
shl
sarl
in
icebp
xor
leave
pushf
lcall
mov
cld
xor
jne
testb
jo
mov
or
popf
and
dec
aas
push
mov
loope
std
je
and
or
xor
add
outsl
daa
jnp
aaa
insb
push
mov
sbb
fwait
ljmp
ret
cs
adc
ds
mov
shl
ret
inc
and
and
jbe
sub
adcl
fs
pop
mov
lea
lods
rolb
cmpl
je
mov
xchg
push
cwtl
inc
icebp
aad
outsb
dec
adcl
xchg
pusha
pop
aad
lods
sbb
mov
pop
push
fistpll
mov
aas
stos
cld
xor
dec
loopne
dec
cli
push
jbe
je
aas
xchg
jnp
jge
mov
jg
mov
ljmp
ljmp
bound
pushf
and
ljmp
faddl
and
and
subl
cmp
pop
dec
out
sbb
cmp
test
push
push
repnz
or
push
xchg
dec
out
mov
jecxz
inc
inc
imul
jmp
outsb
push
leave
push
aam
fisttps
outsl
inc
icebp
faddl
mov
je
mov
into
lret
mov
hlt
js
xchg
pop
in
mov
mov
loope
mov
mov
push
addr16
push
push
xor
nop
jnp
fst
cltd
adc
mov
or
push
jb
scas
push
push
or
into
sbb
lcall
movq
jbe
clc
int3
dec
lret
addr16
sbb
jae
or
or
fs
xor
push
mov
fldl
test
imul
popf
pop
iret
jp
xchg
add
sbb
in
hlt
not
jle
push
mov
ss
mov
insl
xchg
in
jne
add
xchg
int
insb
mov
add
dec
dec
xor
je
fisubs
ss
rolb
mov
push
sbb
in
mov
shl
and
ds
sbb
push
stc
out
xor
cld
dec
gs
outsl
mov
andb
insb
enter
xor
mov
xchg
adc
loop
in
out
fstpt
scas
push
outsl
jmp
adc
add
loop
jb
jbe
cmp
push
out
xchg
je
jbe
fdivr
test
xchg
adc
jnp
test
jbe
pop
insb
xor
stos
pop
shlb
jecxz
push
cli
pop
xlat
push
cmp
lahf
pop
inc
mov
pop
sar
in
xorl
jns
mov
loope
ret
fimull
iret
aaa
adc
push
add
out
loope
fsts
shlb
jno
push
outsb
xchg
call
loopne
pop
pop
sahf
jmp
xor
add
incb
repz
ja
mov
jg
rcr
movsl
dec
popl
lret
cmp
push
push
and
shrb
mov
sub
and
adc
lahf
loop
xchg
mov
push
cmc
movsl
loope
or
add
mov
jbe
fdivr
pop
fidivrl
push
test
out
out
repz
dec
lret
or
shlb
clc
icebp
push
js
and
add
mov
ret
cmc
jo
sarb
pusha
test
jle
push
loopne
ret
inc
outsb
bound
push
adc
loop
sub
mov
scas
data16
jb
xchg
ss
mov
jb
mov
xchg
inc
add
xchg
aas
add
rolb
and
xor
xchg
outsb
sbb
stos
dec
mov
jle
test
data16
js
popa
scas
bound
xchg
xchg
adc
xor
xor
or
sahf
dec
mov
fisubrl
inc
test
jne
mov
pop
loop
inc
fiadds
sbb
mov
mov
repnz
jmp
enter
imul
scas
clc
rcrl
lcall
repz
popa
cmp
icebp
movsl
lds
push
pushf
shll
in
aas
xor
nop
outsb
int
and
pop
and
out
pushf
mov
xchg
fucomip
cmpsl
es
jmp
popa
call
push
jno
popa
jne
inc
imul
inc
leave
cmp
and
and
sub
cwtl
fisubrs
cwtl
cli
add
lock
dec
push
xorb
mov
mov
and
scas
lret
add
adc
mov
mul
int
xchg
out
les
and
addr16
inc
adc
pop
sub
sbb
cwtl
sub
je
and
push
rclb
add
hlt
je
int
ja
push
inc
jnp
dec
mov
cs
bound
dec
mov
js
test
xor
push
mov
rorb
stc
insb
in
sti
jge
mov
das
nop
fcoms
jbe
sbb
fldenv
add
dec
mov
fucomip
loopne
into
outsb
cmp
std
adc
pop
mov
shlb
xchg
or
or
sub
jbe
xchg
adc
sub
jnp
inc
sbb
sub
jnp
pop
je
mov
push
adc
mov
push
negl
loopne
das
je
xlat
in
pop
cmpsl
push
jo
pop
lcall
hlt
out
sbb
nop
in
mov
in
stc
cmpsl
in
or
mov
dec
stc
mov
outsb
sbb
loopne
aad
and
pop
lods
pop
lahf
push
sub
int3
mov
push
or
or
jge
in
cmp
nop
pop
dec
lods
mov
dec
xchg
inc
xor
mov
mov
test
addr16
cmp
inc
push
repnz
lcall
ds
push
pusha
lock
loopne
insl
outsb
push
enter
sub
into
pop
jle
and
dec
mov
dec
add
mov
insl
call
jne
mov
rcrl
or
ficoml
sub
add
mov
sarl
fildll
mov
outsb
adc
mov
imul
pop
xor
xchg
cmp
and
es
sbb
lock
mov
popf
mov
ljmp
out
pop
xchg
inc
mov
add
inc
stos
rcrb
fisubl
mov
mov
scas
mov
ror
adc
rcrl
fdivrl
jl
jo
in
shlb
jo
jno
push
subl
mov
xor
icebp
bound
lds
mov
xor
out
sbb
lret
insl
gs
and
push
stos
mov
movsb
daa
jnp
pop
insb
das
arpl
lahf
outsb
sub
mov
lock
sbb
fsub
mov
inc
inc
or
mov
test
xor
mov
mov
enter
inc
out
imul
xor
test
inc
test
sbb
jnp
mov
outsb
imul
sbb
cmp
mov
jmp
xchg
jo
push
sbb
in
test
int3
jbe
mov
pop
cs
int3
adc
pop
loop
mov
aaa
mov
adc
cs
std
insl
mov
and
mov
push
add
mov
hlt
ret
cmc
inc
sbb
xchg
cltd
sbb
jle
outsb
add
add
xlat
xchg
jbe
sar
enter
loop
xchg
pop
bound
push
sbb
sbb
xor
data16
cmp
jbe
mov
repz
fidivs
mov
aaa
cmpl
data16
jbe
sub
dec
dec
xchg
sbb
ds
cld
ds
mov
fdivrp
xor
int
mov
add
adc
rcl
mov
mov
outsb
leave
test
pop
out
sbb
push
pop
mov
push
ds
and
push
rolb
add
mov
loop
in
cwtl
paddusw
out
cmpb
mov
inc
push
aad
repnz
inc
shrb
jg
push
rclb
xchg
es
xor
xor
pop
cld
cwtl
xchg
pop
mov
sub
xchg
push
inc
outsb
fsubs
and
ss
inc
notb
in
outsb
addr16
cwtl
cmpsb
mov
push
popa
pop
pop
fildll
dec
adc
jnp
mov
fstp
test
sahf
jl
dec
sub
jo
rcrb
mov
sbb
push
jbe
xchg
xchg
mov
xchg
dec
jg
and
lret
push
leave
push
jo
xor
jl
add
mov
in
lods
pop
sub
mov
inc
shl
fisubl
mov
mov
test
xlat
scas
push
nop
jecxz
sbb
pop
sub
fistps
mov
jbe
xchg
adc
cmpsl
aam
addb
mov
aaa
mov
fincstp
push
pushf
push
add
movsl
hlt
sbbl
push
adc
inc
rclb
loope
xchg
pushf
daa
adc
xchg
mov
sbb
cmc
repz
stos
shrb
mov
pop
lret
loop
repnz
ficomps
jo
sbb
dec
test
sub
inc
jne
cmc
rorb
xor
popf
insl
btr
mov
xchg
enter
and
pop
adc
js
movsb
jmp
or
outsb
mov
mov
cwtl
pop
adc
or
push
pop
inc
mov
int3
adc
mov
inc
stos
jbe
mov
dec
push
js
jno
dec
call
rcll
add
dec
fiadds
pop
ret
cmp
loop
mov
aaa
jbe
pop
push
into
stos
adc
and
pop
xor
xchg
mov
and
adc
lret
int3
or
mov
sub
push
adc
loop
push
imul
cwtl
hlt
add
insl
fwait
nopl
mov
mov
mov
sub
inc
fimull
mov
enter
shr
adc
cmc
and
in
ljmp
mov
dec
ja
adc
outsb
sar
iret
enter
mov
out
stos
sbbl
jnp
push
shll
sub
mov
sub
jmp
jbe
add
cmp
and
loope
xchg
insb
fsubl
mov
and
sbb
fs
mov
adc
inc
lret
jge
xchg
in
loopne
add
and
test
inc
daa
leave
mov
jno
shlb
test
push
xchg
stos
sti
mov
dec
rol
fcmovu
push
bnd
pop
outsb
xor
dec
es
inc
sub
int
pop
bnd
loopne
imul
inc
mov
add
xor
pop
or
xor
shlb
imul
ljmp
jnp
aaa
push
ror
lret
test
enter
mov
call
xor
fildll
fldcw
xchg
sbb
push
xchg
outsb
cmpsl
ror
cmc
mov
fcmovb
sub
in
in
mov
sub
dec
jne
add
sub
outsb
cmp
xor
push
sbb
imul
mov
lahf
aam
aaa
in
pop
lds
xor
mov
push
scas
pop
js
dec
mov
dec
push
inc
subb
lods
xchg
inc
lods
sbbb
inc
imul
shlb
cmpsl
arpl
lcall
in
mov
push
insl
jmp
dec
out
ljmp
pop
pop
das
cmp
lret
ljmp
pop
and
cmpsl
pop
and
lahf
jg
stos
cmc
and
xor
push
into
sbb
mov
testl
ds
jmp
das
mov
xchg
sub
loopne
dec
popa
push
lret
hlt
imul
mov
cmp
into
dec
adc
lock
ja
test
std
xor
sub
stos
inc
push
pop
add
in
and
mov
pop
lods
movsb
jbe
xchg
mov
sar
mov
inc
data16
stos
fsubrp
add
jge
in
out
cmp
adc
fsubrs
bound
andb
das
jecxz
je,pt
sub
ljmp
pop
fnsave
nop
popa
or
jbe
andl
mov
mov
cmc
jno
pushf
jmp
adc
mov
jecxz
sbb
adc
sbbb
or
jg
mov
or
mov
dec
mov
dec
in
stc
ficoms
jecxz
mov
cltd
nop
dec
jb
leave
mov
cmp
fidivrl
repz
push
inc
push
mull
adc
jg
mov
jmp
cmp
push
loopne
jno
jbe
in
and
push
and
jb
incl
outsb
or
mov
xor
mov
push
mov
les
enter
aad
cmp
cwtl
je
mov
fcmovnu
inc
cmc
outsb
sti
xchg
or
jmp
lahf
lods
xor
inc
cmp
mov
dec
ljmp
xchg
push
pop
xchg
gs
cmp
sbb
xchg
pop
inc
and
dec
pushf
xchg
jno
or
mov
jecxz
ljmp
mov
and
xchg
icebp
fs
decl
rcl
fwait
aad
pop
pop
loopne
add
cmc
repz
scas
cmp
cltd
cmp
xchg
fwait
stos
add
sub
dec
clc
jmp
call
out
inc
mov
inc
jle
jb
pop
cld
jb
sbb
add
cmp
in
ret
repnz
lock
sar
divl
in
sarb
loop
mov
sbb
or
divl
jns
mov
sbb
es
cmp
popf
xor
pusha
popa
sbb
scas
mov
int
inc
jp
push
fxam
dec
add
or
mov
xor
jl
mov
nop
clts
aad
shl
sahf
jbe
cmp
cmp
inc
jmp
nop
test
js
mov
jbe
pop
lea
in
cmc
mov
lret
fcmovnbe
sub
ficoml
int
adc
out
or
mov
das
jb
adc
ret
fldt
imulb
jno
ds
clc
xchg
lods
popa
sub
fmuls
sbb
adc
movntq
xor
xchg
cmpsl
rcr
fidivrl
inc
jns
sbb
cmc
sub
xor
jno
or
cmp
call
pop
push
arpl
adc
xor
repnz
rcr
xor
cmp
setae
jae
jmp
stos
adc
push
xor
or
jns
cmc
dec
inc
cs
fcmovbe
mov
dec
inc
and
in
inc
pop
loop
xchg
sub
inc
repz
fcoml
aaa
xchg
rolb
movsb
fsubrp
mov
pop
mov
jb
xor
dec
test
mov
sbb
pop
xchg
ss
imul
xor
in
and
xlat
aad
js
pop
rcrb
aam
imul
cmp
outsb
mov
sbb
mov
jnp
sbb
or
ret
adc
push
dec
xchg
xor
in
fs
sbb
mov
into
stc
repz
push
gs
cmp
xor
scas
into
xor
push
mov
cs
push
cs
mov
imul
adc
loop
in
out
divl
cmc
jbe
xchg
jno
sub
xchg
mov
and
lock
pop
mov
jg
cmp
xlat
addb
mov
shrl
shlb
xor
dec
imull
insb
fnclex
cmp
mov
repnz
inc
rorb
xor
cmp
jno
popf
rcrb
ficoml
push
cmpsb
sbb
mov
in
and
into
imul
push
mov
outsb
popf
movb
cmp
cmp
scas
pop
ds
sbbb
push
test
loope
lds
mov
movsb
or
cmp
or
daa
dec
rcll
mov
add
sbb
imul
sub
fbstp
mov
pop
jmp
xchg
jnp
sub
loope
mov
rolb
xchg
outsl
and
sbb
cwtl
stos
jle
or
jo
rcll
loop
rolb
jns
pop
jmp
inc
rcrl
das
jae
cli
imulb
out
popa
dec
sub
fadd
mov
jp
xchg
std
imul
jbe
fildll
ret
jecxz
pop
sbb
add
cwtl
idivb
sbb
repz
pop
jae
jmp
xchg
jbe
dec
cmp
test
mov
arpl
mov
std
push
fists
inc
inc
pusha
imul
xchg
sbb
jmp
stc
sti
cmpsb
outsl
and
jmp
sti
inc
das
mov
movsb
ds
leave
or
stc
push
sub
pop
inc
jmp
or
sbb
adc
cmc
or
jb
arpl
inc
jmp
sub
dec
int
jb
adc
mov
cmp
lcall
dec
inc
sarb
cmp
iret
bnd
mov
je
sub
cmp
inc
rcrl
jle
mull
leave
int3
ljmp
dec
movsb
popa
shlb
mov
or
cwtl
ret
daa
jns
and
outsb
push
add
adc
add
dec
dec
cli
adc
lds
mov
arpl
hlt
aad
test
fcomi
subb
in
ret
insb
lods
pop
lea
movsb
shrb
std
mov
sarl
inc
mov
div
inc
pusha
mov
pinsrw
popa
lret
mov
ds
outsb
or
shlb
mov
fists
mov
mov
jge
shll
xor
push
cmpsb
std
push
jnp
scas
cwtl
jbe
jno
in
fsubl
pop
les
enter
push
sarb
faddp
hlt
ret
push
jmp
jbe
inc
cwtl
push
arpl
call
sbb
nop
cmp
xchg
cmp
inc
sbb
add
jo
in
jbe
lahf
xor
fidivs
fiadds
popa
cmp
ds
cmc
and
iret
xor
in
es
sti
ficoms
xor
inc
bound
push
jbe
stc
lods
push
xchg
push
xor
rorb
imul
sti
cmp
stos
nop
scas
arpl
jne
dec
push
add
and
loopne
dec
in
mov
movsb
and
je
fldl
stos
pusha
movsl
xor
imul
cwtl
and
enter
filds
bound
add
sbb
mov
insl
push
push
fistl
xor
int3
sbb
inc
jmp
mov
call
mov
outsb
nop
dec
addb
sub
jns
int
xchg
lret
aas
ljmp
sbb
test
fwait
mov
shlb
push
push
test
loope
sbb
cmp
daa
nop
frstor
daa
je
nop
iret
add
jbe
rol
lcall
xchg
enter
jg
xor
fstps
cmpsl
imul
adc
sahf
xchg
cwtl
inc
mov
dec
adc
add
aam
bound
sub
xor
jp
aaa
mov
outsb
in
mov
rclb
inc
mov
mov
sbb
mov
in
dec
test
mov
movb
pop
outsb
or
sarb
dec
adc
cmp
ficoml
push
stos
jge
pop
neg
movsl
inc
sub
fldt
shlb
mov
jb
mov
xchg
jbe
push
add
imul
gs
bound
mov
sbb
int3
sbb
cmp
jmp
repz
pop
daa
sti
xor
add
jb
inc
xchg
sub
sahf
xor
push
ror
rcrb
shl
cwtl
loope
and
sub
jp
repnz
inc
adc
xor
ss
fildll
adc
loope
jecxz
mov
in
push
rcl
cmp
addb
out
js
cmc
jb
jmp
xor
cwtl
mov
insb
sbb
addb
pop
and
movsb
jne
pop
sub
lahf
jmp
push
xor
mov
mov
shrb
rcrb
xor
inc
ljmp
aad
cs
pop
das
mov
cli
outsb
fwait
dec
mov
mov
xor
mov
ret
jnp
pop
mov
mov
leave
cs
and
int3
cmpsb
mov
add
jo
cmpsl
add
outsb
out
das
ret
and
test
adc
or
adc
bnd
jecxz
outsb
and
cmp
shr
in
xor
jmp
add
lret
jg
sahf
push
ss
jbe
mov
ss
mov
ss
and
outsb
inc
aaa
popa
sbb
pop
sub
repz
js
and
lret
iret
or
sub
jne
daa
xor
imul
ds
rolb
sub
insb
mov
loopne
dec
add
fwait
lahf
test
jmp
sub
jecxz
mov
fwait
decl
cmp
mov
push
out
mov
mov
ficoms
xchg
xchg
mov
and
cwtl
mov
hlt
xor
mov
sti
mov
test
jae
outsb
inc
fwait
arpl
mov
test
push
pop
std
inc
mov
mov
fwait
insb
enter
and
add
js
add
hlt
ljmp
insl
insb
divl
xchg
pop
popa
pop
push
sbb
gs
push
in
jge
lcall
stos
lret
adc
cmpb
jbe
push
sub
adc
or
mov
mov
test
xchg
arpl
add
sub
int
pusha
cmp
dec
mov
movsl
mov
jnp
xor
jg
int
dec
sbb
rorl
cmovle
xor
in
negl
jnp
bound
pop
dec
mov
movsb
add
push
jae
orb
js
shlb
cmpsl
fimuls
clc
push
loope
mov
mov
jmp
jbe
pop
push
andl
mov
fsubs
cmp
orb
loopne
xchg
xchg
cmpsl
in
adc
mov
dec
mov
jecxz
sub
jo
repnz
fcmovb
or
inc
shlb
dec
lds
test
rclb
lcall
mov
popa
loope
mov
or
and
outsl
cmpsb
scas
jmp
xor
test
bound
or
jle
pop
jge
xchg
push
inc
neg
jecxz
xor
arpl
out
mov
rep
xor
push
add
sub
out
pop
imul
jb
pop
jo
cmp
call
loopne
sbb
stos
jne
inc
or
add
xor
ds
adc
xor
push
cmp
lods
sub
sbbb
or
aas
push
add
xchg
out
leave
jae
jmp
lock
sbb
lea
sti
test
xchg
jb
xchg
fldl
out
cmc
jbe
popf
mov
aaa
pop
mov
imul
jns
adc
nop
je
outsb
fwait
mov
xchg
mov
or
lcall
repz
dec
inc
inc
lahf
xlat
addr16
pushf
outsb
movsl
out
dec
jbe
imul
add
inc
sbb
mov
insb
loope
mov
icebp
xor
ret
in
pop
mov
icebp
mov
push
imul
shll
xor
in
and
inc
add
jl
cwtl
fisttpll
and
insb
sub
ror
lret
rcl
insl
pop
push
cli
jb
daa
out
test
testl
inc
dec
mov
jp
cli
push
hlt
adc
out
mov
aas
ficompl
jmp
fisubrs
cmpsb
xor
cld
cmp
dec
pop
push
mov
and
jecxz
pop
jmp
inc
or
sbb
movsl
cmp
shrb
push
lcall
daa
inc
lods
push
jge
mov
mov
arpl
xchg
fistpl
pop
sbb
pusha
pushf
sahf
xchg
mov
adc
cmp
push
fistps
and
addr16
lahf
popa
icebp
test
sub
lahf
fldt
add
test
lcall
in
cmp
xor
std
jmp
add
mov
push
cmp
jg
cmpsb
in
or
andl
iret
push
loope
lea
push
add
pcmpgtd
repnz
adc
adc
push
xchg
sbb
dec
std
outsb
cmp
sti
add
loop
pop
add
sbbb
push
mov
lods
and
and
dec
je
scas
xchg
mov
notl
add
outsb
pop
lcall
mov
loopne
add
les
and
mov
test
jae
inc
cmc
lret
cmp
unpckhps
push
sub
cmpl
add
push
mov
mov
and
mov
xchg
std
in
andb
mov
test
insb
mov
dec
pop
and
mov
ja
sub
lds
shlb
pusha
sub
dec
test
lret
add
inc
sarb
sub
cld
or
aad
nop
lea
ror
or
push
or
lods
inc
pusha
xor
lcall
dec
addr16
dec
add
sbb
mov
daa
outsl
adc
adc
jb
lock
dec
xor
jg
loopne
push
shrb
lds
adc
fildl
pop
inc
ds
imul
jnp
jg
out
bound
imul
jbe
fwait
mov
hlt
push
fs
sbb
jmp
mov
add
imul
mov
ja
xor
mov
adc
test
in
pop
seta
aam
cmp
sti
enter
sbb
jb
inc
rcl
shr
repz
inc
bound
aad
rolb
mov
cmpsl
lods
push
push
cmp
push
insb
shr
dec
sahf
mov
cmpsb
mov
pop
pop
push
push
mov
pop
insb
aad
lahf
dec
fsts
orb
pop
add
ljmp
jle
out
xor
sub
out
mov
je
fwait
mov
movzbl
dec
jmp
xchg
cld
jmp
push
jo
sub
addr16
push
ret
popf
pop
sbb
jno
xor
jmp
je
jbe
xor
mov
cld
mov
outsb
xchg
call
push
sti
sub
and
cwtl
in
or
ficompl
xchg
lret
addr16
loop
add
adc
xlat
enter
out
and
ljmp
je
cmpsl
jno
jae
jno
jl
out
mov
sti
or
cld
outsb
sti
imul
inc
push
pop
out
cmp
xor
add
pop
jnp
or
cltd
imul
jo
lret
mov
and
sbb
add
pusha
ret
stos
add
addr16
cmpsl
jo
inc
xchg
insb
in
pop
in
xchg
scas
xchg
mov
popf
in
xchg
cmp
gs
outsb
fs
sub
mov
mov
mov
lods
test
push
adc
int
mov
out
movsb
jl
fldcw
fists
cmp
shlb
cmp
imulb
rcl
rcrb
in
std
es
jns
sbb
js
lret
cmpsl
mov
mov
push
mov
push
pop
frstor
or
mov
push
in
push
jne
hlt
stos
stos
pop
lahf
sub
dec
lret
and
push
nop
sbb
push
sbb
or
popa
add
cmp
cmc
pop
loope
lret
nop
pop
jo
js
pusha
lahf
aam
inc
jecxz
test
and
imul
sbb
xchg
dec
test
mov
mov
inc
dec
jo
sarl
lock
lds
pop
jecxz
int
cmpsb
std
inc
xorl
in
jae
cmp
jle
xor
js
sub
shl
dec
sub
and
inc
popf
fsubrl
ja
xchg
repz
xchg
xor
pop
inc
test
push
imul
outsb
cmpsl
outsl
out
stc
mov
fstpt
mov
and
inc
xchg
dec
out
std
mov
aad
cli
fldcw
stos
mov
call
lods
jae
xor
scas
fsubs
in
jge
or
loopne
inc
sarb
repz
jmp
stos
jbe
adc
clc
into
dec
pusha
leave
jae
in
dec
loope
xchg
adc
mov
inc
pop
push
mov
fldcw
in
outsb
sub
loope
mov
cmp
dec
out
fucomp
mov
add
sub
ds
xchg
stc
std
inc
clc
es
test
fisubrs
cwtl
or
rolb
scas
imul
out
insb
movsl
addr16
xor
movsl
divw
addr16
add
pop
push
leave
enter
sti
repnz
test
stc
or
out
dec
arpl
xchg
xor
pop
adc
ss
mov
mov
daa
push
add
mov
dec
les
shrb
inc
jae
js
dec
xor
movsb
push
cld
jb
mov
push
pop
inc
arpl
lcall
mov
subl
ljmp
aas
sarb
rorb
add
fidivs
push
sub
mov
push
xor
out
subl
fwait
mov
shlb
pop
icebp
pusha
mov
popf
jns
push
xor
shlb
mov
es
mov
push
aam
test
cmc
or
jbe
lock
xchg
mov
bound
test
rclb
sti
lds
mov
mov
popf
aaa
mov
or
mov
cmpsb
mov
mov
sbb
sub
andl
sbb
ljmp
outsb
fisubl
add
data16
nop
test
inc
mov
mov
mov
movsl
mov
jle
movsb
fistl
dec
mov
inc
pop
movsb
out
lods
outsb
push
pop
scas
in
xor
jmp
test
mov
incl
stc
scas
fdivl
mov
xchg
xor
popf
inc
in
jno
popf
fs
int3
add
aas
inc
pop
add
mov
ljmp
xchg
xchg
mov
add
jg
mov
or
lea
loope
incl
call
mov
jmp
rcl
data16
outsb
iret
popa
js
iret
cmp
xor
adc
mov
pop
xchg
jno
es
jecxz
les
cmp
into
xchg
or
pop
hlt
sub
pop
mov
adc
in
fxch
mov
dec
imul
mov
mov
mov
fsincos
mov
or
adc
push
aas
fstps
pop
sub
adc
aam
repz
sub
jnp
pusha
dec
cld
scas
fcmovnb
or
xchg
pop
stos
xchg
fmul
and
in
jg
rclb
pop
inc
popa
pop
xchg
mov
xorl
jecxz
jbe
std
push
sbb
ja
mov
sub
imull
and
je
out
jmp
lods
adc
add
movb
adc
lods
scas
and
lahf
ret
jo
and
jl
lret
sub
das
and
adc
dec
inc
sub
and
rorb
lahf
or
jae
cs
loope
lcall
adc
sbb
imul
enter
dec
std
ret
adc
aas
lods
push
jo
movsl
push
das
mov
push
shl
test
test
cwtl
mov
mov
xchg
fidivrl
lods
dec
xchg
test
cs
lods
into
out
push
outsb
inc
ret
movsb
jl
popf
adc
and
inc
fisubrl
cmc
jbe
sub
xchg
mov
lcall
test
cvtdq2ps
mov
outsb
sbb
add
pop
imull
mov
or
xor
jle
cmp
xorb
inc
les
sub
fcmovnb
andb
inc
fldt
pop
arpl
movl
mov
sbb
icebp
mov
jbe
insb
cmpsl
pop
hlt
jle
add
arpl
stos
lret
sbb
mov
add
jge
mov
nop
inc
nop
aam
jb
sbb
and
inc
sub
xlat
fdivl
sbbl
pop
sbb
test
pop
cmp
fsts
fisubrs
pop
jge
shll
mov
mov
mov
mov
jnp
inc
xlat
sub
in
ret
adc
mov
popf
jnp
setae
adc
push
out
or
mov
lea
bound
hlt
and
adcl
pop
jmp
testb
mov
imul
pop
sahf
cmp
ficoml
sbb
lahf
pusha
mov
les
mov
dec
pop
mov
add
hlt
ret
mov
sbb
cmc
inc
mov
add
jbe
adc
pop
sub
fisttpll
js
scas
aad
jecxz
sbb
sub
mov
inc
pusha
xchg
sub
iret
mov
cld
pop
lea
aad
cwtl
test
mov
push
and
push
inc
shl
dec
fists
push
inc
jmp
imul
sbb
je
stos
insb
sbbl
ret
mov
nop
add
inc
fcomps
mov
vpcmpeqb
pop
push
int3
mov
arpl
outsb
bound
es
cmp
dec
stos
sbb
lcall
cmp
adc
fidivs
inc
repnz
test
mov
sub
lods
xchg
in
shlb
mov
mov
mov
movsb
leave
scas
in
add
imul
dec
mov
lea
aad
add
adc
and
fbstp
cli
xchg
sbb
pop
jb
mov
dec
nop
pop
mov
out
divb
in
dec
ljmp
shl
pop
mov
out
mov
push
test
push
nop
mulb
loope
mov
ljmp
shlb
sti
mov
mov
adc
call
das
icebp
xchg
jge
mov
les
rorb
outsl
xor
jno
and
push
ja
jns
les
inc
int3
jns
pop
cld
repnz
arpl
popa
rolb
scas
mov
aad
mov
cmp
cmpsl
cmpsl
lods
push
ss
bndldx
mov
pop
inc
in
jno
subb
daa
mov
popa
push
lahf
or
dec
data16
repnz
sub
cmp
negl
int
nop
dec
push
shlb
jle
ret
clc
iret
out
inc
neg
or
mov
lahf
es
scas
sbb
mov
adc
jno
sub
leave
and
xchg
mov
addr16
mov
dec
mov
add
dec
pusha
push
loop
mov
rcl
arpl
and
fildll
jns
test
insl
fldl
push
dec
ds
inc
add
mov
push
dec
bound
testl
leave
dec
mov
push
ret
hlt
mov
add
out
dec
loope
jmp
cli
mov
pusha
shlb
sbb
jg
mov
lods
es
paddd
and
or
inc
sub
ficoms
mov
shlb
insl
fsubrl
aam
push
pop
push
adc
cmpsl
pop
aad
sub
adc
leave
sbb
int3
ret
fldenv
ret
inc
rcrl
sbb
adc
mov
daa
cmovb
mov
xor
cmpsl
js
inc
or
push
outsb
ds
ljmp
pop
jbe
jecxz
mov
cmp
sbb
sub
enter
fcompl
aas
in
pop
push
cmc
xorl
xor
mov
pop
mov
push
xor
and
ret
mov
sarb
jmp
xor
arpl
pusha
jns
mov
pop
fwait
testl
xor
outsl
push
sbb
stc
ljmp
xchg
inc
push
add
inc
shrl
inc
sub
shlb
insl
mov
jne
jecxz
sti
mov
adc
dec
pop
test
mov
fistpll
adc
ret
lods
out
das
and
add
pop
outsl
call
lret
ret
pop
ret
hlt
jg
fidivl
cmpb
jge
jle
repnz
pop
clc
sbb
jae
stos
ljmp
in
cmpsl
scas
jl
mov
movsl
cmp
pop
imul
rolb
enter
jmp
rorb
lcall
fisubrs
push
inc
mov
mov
and
fstps
hlt
inc
insb
mov
in
hlt
ds
sbb
popa
notb
test
cltd
ds
out
fsubl
cmpsb
divb
sbb
cmp
pop
jnp
pop
sbb
mov
jle
add
mov
push
in
jge
or
lea
andl
nop
jne
pop
xchg
cwtl
xor
push
data16
dec
ret
popl
flds
inc
xchg
nop
adc
movsl
sbb
bound
ss
sti
xor
jmp
jbe
xor
in
inc
addr16
and
lds
lret
lock
and
cli
mov
inc
jg
xor
subb
leave
sub
rcrl
jmp
dec
adcb
stc
jmp
inc
aam
clc
ds
jbe
shlb
mov
outsb
cmp
leave
mov
test
pop
push
pop
hlt
je
push
stos
fs
scas
fisubrs
ss
imul
test
add
rolb
push
shl
mov
loope
ror
fiadds
rcr
dec
aaa
sbb
mov
addr16
hlt
iret
scas
mov
inc
imul
mov
outsb
in
pop
ljmp
xor
aam
mov
pop
jbe
das
sub
inc
mov
inc
movsb
in
xchg
pop
jp
jo
out
les
fsubrl
push
dec
pop
mov
inc
outsb
jmp
ja
lods
jecxz
andb
icebp
daa
aaa
cmc
xchg
out
fldenv
scas
pop
mov
aam
rol
aad
scas
pop
leave
xchg
in
add
mov
aaa
ret
in
fwait
fs
arpl
jb
add
dec
cs
fimuls
dec
clc
aaa
add
inc
mov
ds
fisubrl
testb
cmp
inc
inc
add
jb
mov
insl
add
fwait
inc
aas
sub
jns
or
fidivrl
into
mov
adc
and
xor
cmpsl
mov
push
mov
jns
jle
jnp
in
push
je
out
cwtl
jg
cs
lods
dec
aad
addr16
cmp
mov
mov
bound
nop
nop
dec
jle
stos
adc
pop
imul
enter
jns
clc
int3
adc
inc
sub
push
pop
daa
test
es
mov
jl
dec
rolb
jne
push
push
insl
pop
in
dec
jg
cmp
cmp
stos
add
test
xchg
icebp
push
inc
icebp
xlat
xchg
imul
int3
inc
test
pop
pop
lds
enter
xchg
rol
xor
ficoml
mov
icebp
cmpsb
sbb
sarl
mov
dec
addr16
or
inc
bound
mov
addl
leave
dec
loope
inc
cmp
jmp
nopl
in
testl
cmp
and
fwait
std
iret
dec
xor
mov
xor
je
mov
mov
std
cmc
inc
xor
arpl
iret
lahf
ss
jns
ret
mov
xorl
imul
enter
mov
mov
and
daa
or
jbe
push
pop
xchg
das
pop
aad
fcmovnu
frstor
call
sbb
add
aas
jae
js
pop
jg
popa
sub
inc
inc
mov
lahf
ret
jle
inc
adc
xor
das
sub
outsl
rorl
push
aad
mov
nop
push
sti
push
push
fidivs
cmp
stos
aam
or
inc
and
push
fwait
cmp
aad
xchg
arpl
sarb
je
pop
adc
out
hlt
mov
mov
jae
pop
mov
pop
movsl
jnp
push
shrb
insb
lret
in
aad
push
mov
mov
fsts
jns
and
cld
dec
jb
dec
imul
ds
add
dec
push
in
and
stc
mov
xor
xlat
pushf
push
enter
push
jbe
out
test
adc
idiv
test
inc
and
mov
mov
adc
dec
add
pop
int3
call
les
adcl
jb
outsb
inc
and
sub
mov
push
dec
add
push
dec
xlat
cs
jbe
add
test
sub
xchg
cmp
inc
popa
loopne
jp
mov
sbb
mov
cmpsb
push
rorb
adcl
dec
xor
popa
mov
sbb
xchg
int
div
dec
insb
ds
shlb
movsl
rcr
out
psubusb
in
mov
add
xchg
inc
rcr
mov
pop
and
fucomip
mov
xlat
or
mov
dec
pop
jp
insb
in
fidivl
xor
dec
sti
pop
sarb
dec
and
shlb
mov
ss
pop
sub
cmpsb
and
mov
into
pop
dec
xchg
jbe
ret
sbb
push
pop
jbe
shlb
fcomps
loop
icebp
inc
jbe
jae
cmp
jnp
mov
or
shlb
loope
sbb
jnp
icebp
sarb
out
cmp
xor
sub
and
lret
or
dec
add
mov
or
push
xchg
js
cmc
inc
pop
pop
aam
adc
rcll
push
outsl
mov
mov
cmpsl
imul
and
and
and
adc
push
test
bound
xchg
mov
cmc
jb
cmp
in
inc
stos
mov
and
shlb
push
es
push
fdivl
push
inc
inc
out
dec
data16
outsb
dec
and
ret
mull
movsl
mov
or
jp
cs
sti
cmpsl
or
outsl
dec
pop
xchg
add
inc
jae
dec
push
arpl
ds
lret
neg
add
inc
inc
lods
mov
and
mov
ret
mov
lock
jb
pop
jmp
mov
cmp
jb
lahf
clc
ss
sub
add
or
mov
xlat
hlt
adc
insb
and
inc
xor
popa
movsb
dec
int3
xchg
cmp
adc
add
loopne
rclb
jb
repnz
jbe
adc
jp
aaa
call
jge
push
clc
lea
mov
jae
mov
iret
call
lcall
inc
sti
mov
inc
nop
xor
outsb
xchg
andl
fimull
in
xor
adc
cmpsl
xor
out
dec
jp
sub
test
jnp
jno
sahf
outsb
pop
cmp
jbe
inc
sbbb
cmp
and
dec
imul
scas
mov
mov
mov
add
mov
xchg
xchg
jmpw
xchg
jecxz
aad
movsb
adc
out
sub
sbb
push
sbb
sub
xor
jecxz
fmull
sub
mov
xlat
adc
ss
pop
mov
adc
mov
dec
sub
arpl
jbe
add
movsb
in
sub
mov
xor
xlat
xchg
lods
repz
movq
mov
push
and
shlb
jns
and
aam
dec
add
mov
cld
inc
cmc
idivb
inc
jne
cld
jns
dec
adc
add
cmp
leave
cli
pop
mov
insb
push
lahf
adc
cltd
push
add
and
scas
mov
imul
rcl
mov
mov
imul
test
cmp
sti
fwait
pop
adc
lods
roll
mov
rclb
xchg
xor
test
dec
jo
gs
shr
sbb
pop
out
in
rcrl
aad
nop
aam
add
xor
add
adc
sahf
pop
lea
rorb
out
movsb
cmc
jbe
adc
leave
sbb
push
mov
add
fstl
ja
scas
mov
fcmovne
lock
and
push
or
lret
stos
adc
jns
add
int3
sbb
jbe
addl
xchg
mov
enter
lret
mov
mov
testl
outsb
jns
ljmp
sbb
pop
rclb
or
aam
sbb
xor
mov
and
push
and
hlt
jnp
inc
std
jle
insb
push
daa
stc
in
xor
pop
jecxz
sti
inc
and
je
jno
jmp
std
jmp
jl
mov
push
jecxz
aas
jbe
pop
cmp
sbb
mov
cltd
shr
repnz
lcall
leave
and
sar
mov
sub
jo
sbb
rolb
rorl
or
cmpsl
mov
xorl
imul
ljmp
mov
inc
fld
lods
sub
xchg
jno
pop
outsb
dec
repz
dec
add
out
mov
loopne
int
push
outsb
sbb
fmulp
outsl
inc
lds
mov
in
jbe
loop
push
xor
testb
adc
in
movsl
push
fisubl
pop
daa
test
mov
push
dec
cltd
stos
and
fistl
inc
or
sub
xor
pusha
mov
sahf
jp
inc
shlb
pop
jo
mov
dec
and
lock
cmpsb
outsb
cmpl
pop
out
outsb
cmp
sbb
mov
sbbl
ret
inc
jbe
outsb
aam
jmp
mov
jo
mov
cmpsl
mov
push
movsb
or
sbb
imul
outsl
lret
loop
es
neg
int3
sbb
inc
arpl
mov
fidivrl
scas
mov
cwtl
sub
shrl
pop
addr16
into
mov
testl
sbb
cmp
sub
in
sbb
cmp
pushf
or
lret
mov
mov
mov
mov
mov
mov
fistpll
pop
mov
push
out
loop
lds
cli
pushf
xchg
outsl
push
xchg
fists
jns
xor
rorb
or
ret
adc
and
fs
loope
in
mov
test
xchg
ret
js
das
xorb
ja
adc
stc
stos
jnp
repz
and
ficompl
ret
mov
inc
out
sarb
push
dec
xchg
jne
pop
in
pop
sub
idiv
fs
pop
mov
ja
cmp
dec
ss
icebp
pop
cmp
lock
adc
fdivrp
add
sahf
fs
mov
xor
xorb
shl
xchg
aas
or
jge
or
add
idivb
and
mov
cmpsl
cmc
cmovb
out
inc
cmp
outsb
rcrb
mov
sahf
mov
fadds
lods
test
cs
fsts
clc
mov
into
ljmp
inc
call
movsl
push
stc
mov
bound
into
jecxz
inc
test
push
pushf
ja
imul
fwait
arpl
mov
rclb
jnp
ficoms
sub
sahf
lea
ds
lods
ror
shlb
fs
and
es
pop
shrl
lea
sti
jae
pop
xor
xchg
lret
mov
test
sahf
cltd
movsb
dec
jecxz
lret
fisttps
sub
ror
andb
movsb
push
sbb
fst
addr16
repz
xchg
js
aad
mov
or
push
sbb
adc
sbb
iret
cmp
mov
xchg
cmpsb
divb
adc
mov
jmp
mov
add
mov
inc
sbb
push
xchg
mov
mov
xor
inc
mov
mov
cmp
mov
rorb
aad
insb
divb
mov
loopne
fcoms
dec
xor
pop
mov
stc
rcl
push
in
arpl
es
and
lret
and
repnz
sbb
into
lahf
xchg
xor
lock
aaa
outsb
xchg
hlt
or
ret
sbb
inc
fwait
in
out
sbb
adcl
icebp
mov
lea
ss
sbbb
mov
into
idivb
jbe
mov
jp
mov
mov
mov
jae
mov
popf
jmp
dec
cmp
xchg
jno
mov
mov
das
cli
iret
inc
inc
loopne
lods
in
mov
jne
fwait
mov
movsl
inc
aad
mov
shrb
and
test
test
push
and
setbe
adc
xor
rcrb
data16
nop
sbbb
mov
cmp
sub
push
idiv
push
outsb
inc
cmpsl
inc
mov
jnp
xchg
rcl
rol
in
stos
xchg
or
mov
adc
pop
addr16
xor
mov
packuswb
mov
mov
bound
nop
cmp
rcrb
and
cmp
in
sub
add
jo
and
outsb
sub
rol
cmpb
push
cmpsb
mov
cwtl
subb
and
shl
into
adc
mov
xchg
invd
inc
lret
adcb
or
or
xor
call
and
call
or
jmp
mov
inc
and
cmpsb
cmpsl
out
ret
pusha
ljmp
push
cmp
loop
xchg
outsb
popa
lret
and
mov
loop
ss
mov
pop
loope
call
sbb
xor
out
mov
cmp
jg
pushl
and
fistpll
sub
into
pushf
jl
cmp
mov
adc
xchg
dec
xchg
inc
inc
call
out
xor
scas
sbb
inc
rorb
insl
mov
in
and
sub
cwtl
xchg
stos
adc
loop
iret
push
fcomi
fwait
sarb
or
xor
pop
dec
stc
push
xchg
in
sub
out
orl
and
iret
int3
xor
into
and
aaa
pop
dec
into
loop
mov
mov
mov
fidivrl
xchg
mov
in
xchg
adc
pop
lret
cmp
fbstp
xchg
lods
lret
sarl
lods
es
cmp
or
jno
jns
cmpsl
in
pop
int3
jecxz
shlb
into
add
jb
popa
mov
inc
inc
and
jbe
push
ds
aaa
fiadds
lret
pop
cmp
stos
out
addr16
jne
sbb
shlb
cmp
inc
jmp
jg
pop
loope
pop
rclb
test
enter
mov
jl
lahf
jnp
ss
inc
sub
rcr
add
in
mov
lock
adc
loope
ficomps
lret
mov
loop
fstps
pop
std
cmc
jne
and
mov
dec
aad
dec
dec
inc
imull
neg
mov
jp
je
inc
dec
es
lret
in
movb
fistpll
adc
jg
flds
inc
movsb
ds
ja
lret
xor
fimuls
cltd
sbb
inc
jecxz
jne
outsb
mov
fs
or
jmp
and
movsb
xor
mov
div
cli
push
icebp
jb
xor
ret
out
pop
jno
mulb
mov
pop
pop
sub
sub
popa
loop
ss
and
cmc
mov
arpl
aaa
out
mov
je
mov
jae
movsb
nop
cmc
pop
cmp
push
xor
lds
xchg
adc
sub
fnstcw
push
cltd
aad
xor
or
ljmp
sbb
lock
pusha
push
in
out
mov
and
popa
roll
dec
fildll
pushf
scas
jne
xor
sarl
loope
icebp
jmp
dec
idivl
xchg
shr
xorl
outsl
jecxz
in
jg
mov
nop
shrb
test
movsb
or
xor
cwtl
cmp
cmp
nop
jbe
push
cltd
mov
jge
pop
outsb
dec
jge
addr16
inc
mov
loopne
outsb
shrl
sarl
ret
jnp
push
mov
scas
jne
enter
sub
xchg
insb
cmc
mov
push
cs
shlb
add
mov
jo
fisubs
inc
add
iret
out
mov
push
and
xchg
inc
mov
lret
adc
push
loop
aaa
dec
pop
push
cmovno
mov
push
add
adc
jae
fmulp
ret
mov
stc
jmp
jl
test
mov
test
push
orl
into
push
in
cmc
mov
les
arpl
jo
testl
out
les
pop
in
and
inc
pop
das
pop
adc
inc
das
mov
and
lock
dec
rorb
cmpsl
and
push
outsb
add
dec
or
mov
mov
inc
pop
push
or
in
xchg
aam
cld
inc
cltd
pusha
inc
loope
xor
adcb
pop
aam
pop
ficoml
jge
or
inc
fnstenv
inc
loop
push
insl
fisttps
outsl
and
push
lods
sbb
sahf
popf
pop
pop
sub
daa
push
js
in
stc
aas
cmp
out
or
cmpsb
add
dec
sti
repnz
lret
pop
and
pop
xlat
inc
les
mov
mov
fcoml
inc
cmc
shlb
mov
in
mov
mov
fwait
lret
ud0
mov
mov
scas
dec
sub
inc
repz
notb
push
aad
lods
dec
xor
daa
mov
shlb
aas
cmp
icebp
push
cmpsl
xchg
fisttps
cmp
add
gs
adc
call
mov
rolb
xor
out
movsb
repnz
jmp
int3
imul
jge
aaa
dec
shl
call
dec
mov
or
push
add
push
std
push
inc
xchg
aad
xor
addr16
out
negl
pusha
fucomi
jecxz
hlt
out
dec
in
movsl
arpl
xchg
add
lea
add
das
inc
and
repnz
daa
mov
lea
stc
and
inc
or
jo
test
insb
add
les
mov
adc
jae
mov
or
fiadds
cld
cmp
inc
jnp
shlb
addr16
ljmp
push
loope
int
mov
mov
dec
rorb
add
icebp
lahf
in
cmc
cmovge
inc
in
xchg
dec
push
ror
jae
pop
jl
sub
es
lcall
mov
std
shl
push
sub
ljmp
sbb
fwait
mov
add
xor
test
pop
jno
add
sbb
loopne
jno,pt
jle
sbbl
adcl
push
inc
arpl
add
out
popf
cmp
adc
mov
cmp
out
adc
sysexit
jl
dec
hlt
sub
and
jge
or
or
adc
inc
daa
adc
dec
not
add
in
stos
sbb
dec
sub
inc
mov
jb
jns
xchg
pop
scas
push
movsl
out
adc
das
sbb
or
add
dec
cmp
push
dec
inc
xchg
mov
jle
mov
xchg
ljmp
xor
call
sbb
dec
repnz
dec
jg
popa
jge
sub
jmp
mov
cmc
pop
fidivl
xor
mov
divl
popl
fidivl
pop
dec
and
scas
inc
mulb
int
xchg
pop
pop
rolb
push
cld
aad
scas
loope
decb
decb
or
mov
rolb
add
pop
dec
cmc
arpl
mov
sbb
adc
jo
stos
jno
dec
xor
inc
ljmp
mov
sbb
fwait
ret
sub
mov
mov
push
iret
scas
xchg
and
ja
bound
rclb
xor
ret
xor
xchg
cmpsb
cmc
fcoml
stos
xor
mov
cld
xor
push
inc
jmp
movsb
insb
movsl
add
je
cmp
jnp
sub
push
sub
lock
sub
fsubrp
inc
add
sub
popf
shr
rcrb
jg
jne
mov
pcmpeqb
mov
out
push
int3
sbb
jno
cmpsl
xor
shl
inc
cmpsl
adc
jmp
dec
sahf
rclb
in
push
lds
loopne
add
or
outsl
xor
inc
stos
sti
loopne
out
sub
cmp
sbb
mov
sbb
mov
cmp
inc
cmp
inc
push
sbb
loop
test
mov
push
push
ret
shlb
scas
stos
es
stc
jae
inc
mov
xorb
shrb
fisubs
std
insb
cmp
lret
bound
cld
adc
shlb
bound
sub
fcmovbe
jbe
jae
pop
nop
push
ret
iret
push
pop
je
add
xor
mov
lods
jbe
jo
rorb
call
in
movsb
fiaddl
out
fwait
mov
call
cmp
je
shlb
jb
jnp
and
in
loop
pop
shrl
dec
mov
dec
jno
je
or
in
and
cmc
aam
inc
add
jae
push
rcr
movsl
insl
int
inc
mov
sub
jge
sbbb
outsl
repnz
xor
sub
cmc
mov
jecxz
jns
flds
dec
pop
inc
mov
pop
sbb
pop
enter
arpl
mov
js
add
dec
mov
cmovne
fcmovu
gs
jge
dec
add
inc
mov
and
test
push
xchg
test
rcll
fidivl
das
ss
push
les
mov
shlb
sbb
ss
inc
lea
into
jnp
or
ja
mov
push
fbstp
std
pusha
xor
lahf
les
scas
out
in
cwtl
addr16
cmpsb
or
mov
or
jp
inc
and
push
mov
jbe
ror
lcall
fcoml
xchg
lcall
inc
jne
movsbl
and
sbb
bound
push
and
loop
hlt
in
loope
adc
cmpsl
mov
call
int3
jnp
fiadds
and
addr16
dec
xor
in
push
fs
scas
pop
pusha
iret
pop
cld
aaa
push
into
sbb
shrb
lods
lcall
mov
and
enter
cs
ret
fisubrl
inc
mov
movb
lds
sbb
xchg
out
into
inc
jecxz
daa
rclb
cmp
loopne
xchg
arpl
insl
inc
mov
mov
nop
xchg
cld
scas
mov
add
push
mov
inc
adc
lcall
pop
fucomip
insb
jae
test
mov
xchg
je
adc
sub
push
test
iret
loop
cmpsl
jp
or
jb
iret
adc
inc
cld
push
lret
int3
call
xchg
xor
aam
sbb
mov
in
movd
mov
jb
and
mov
mov
lahf
into
xchg
pop
cs
insl
out
and
unpckhps
insl
pop
or
mov
jl
fdivr
adc
stc
ds
inc
adc
push
push
in
sbb
sub
roll
and
sub
mov
inc
mov
repnz
nop
ret
dec
repnz
faddp
jmp
dec
inc
loop
cmp
xchg
ss
xchg
lret
sbb
int3
inc
xor
mov
mov
leave
sub
jbe
insb
inc
inc
insl
xchg
mul
fbld
test
xchg
out
sbb
mov
cmp
hlt
mov
pusha
jbe
inc
fisttps
pop
sub
out
test
shrb
scas
mov
xlat
shll
pop
inc
mov
dec
clc
xor
popf
adc
mov
jbe
inc
sbb
ret
xor
add
sbb
leave
sub
mov
fidivrl
out
js
nop
dec
push
jmp
stc
push
dec
xchg
jnp
jl
inc
imul
iret
cmc
adc
int3
push
xor
inc
cmpl
adc
jae
call
xchg
loopne
fbld
push
out
iret
mov
add
or
into
addl
aaa
dec
pop
and
xchg
imul
sub
mov
inc
xchg
inc
add
push
shll
lods
push
insl
test
mov
scas
lods
mov
sub
leave
fildll
notb
cltd
xchg
gs
sahf
inc
xchg
jae
or
test
push
pop
jbe
cld
mov
int
ja
int3
cmc
xchg
popf
sahf
push
lds
nop
pop
outsb
aad
repnz
xor
divl
movsl
out
arpl
rcrl
cmc
jg
lods
btr
xchg
in
dec
mov
decb
in
shr
rcrl
or
popa
jmp
pop
nop
arpl
jg
sub
jle
jbe
bound
cmp
shl
xchg
mov
mov
jno
in
inc
int
pushf
leave
pop
mov
test
outsl
add
add
dec
adc
dec
xchg
test
pop
bound
je
xor
sahf
inc
jge
aad
imulb
jno
scas
cmp
push
adc
sub
rol
insb
push
jnp
jb
or
sahf
lahf
jno
mov
imul
aas
lret
jg
push
insl
sahf
xchg
inc
cmp
ja
dec
jnp
and
sti
fistpll
and
mov
movsl
add
fimuls
stc
out
or
mov
negb
movsl
lds
stos
cmc
dec
inc
adc
mov
sbb
sbb
cmc
lods
push
aas
aaa
outsb
int3
mov
add
mov
fcomps
jle
in
jp
out
xor
fiadds
aad
push
and
ret
inc
fstl
lahf
adc
jo
gs
shlb
mov
dec
cltd
push
push
lcall
push
pmaxub
icebp
mov
pop
aad
outsb
fdivrs
aaa
loop
lahf
add
vunpcklps
test
out
dec
jl
mov
jne
stc
jno
gs
dec
lret
and
mov
xchg
jo
sbb
jbe
mov
mov
out
xor
stc
incl
mov
cmpsl
xchg
xor
xchg
aas
imul
push
or
dec
outsb
decb
adc
jnp
test
fucompp
ss
jne
mov
scas
sbb
sti
mov
jnp
xor
addr16
push
ret
test
xchg
and
jmp
subb
popa
inc
aas
cs
in
jb
mov
cmp
stos
clc
mov
testb
fisubs
fdivs
outsl
sbb
ljmp
in
ds
ljmp
jecxz
outsb
add
stos
inc
call
daa
mov
jo
fwait
sar
sub
mov
add
xchg
mov
adc
inc
or
jg
aaa
mov
push
jle
sbbb
lret
mov
mov
sbb
les
and
sbb
cwtl
rorl
inc
orl
fistpll
sahf
xorb
inc
add
nop
pop
mov
or
outsb
push
dec
stc
cmp
imul
mov
and
push
movsb
xorl
sub
adc
push
stos
cmc
test
cmpsb
sbb
jp
sarl
dec
push
mov
sub
pop
outsb
pushf
cmpsl
aad
jmp
jecxz
fbstp
mov
push
popa
clc
fsts
and
ret
into
jbe
jle
lcall
ljmp
aam
cs
mov
rclb
adc
and
fstp
inc
outsb
rorb
jns
fisubrl
hlt
xchg
jbe
add
jg
sti
fadds
xor
mov
bound
mov
aad
inc
jp
pop
mov
mov
xor
call
jo
fscale
lret
adc
push
add
or
sub
dec
xor
inc
sub
cs
lahf
jns
jbe
jnp
sarl
test
cli
in
scas
sbb
sti
sar
dec
ficompl
orl
cmc
xchg
add
sub
jb
xchg
bound
insb
insl
mov
jne
pop
div
stc
js
repnz
sub
sbb
mov
adc
dec
inc
jp
aaa
push
neg
mov
out
push
stos
lret
out
arpl
stc
push
aaa
mov
push
out
repz
ret
push
xor
xchg
stos
movsl
cld
aaa
sbb
xchg
mov
xor
jbe
loop
jnp
pop
push
fisttpl
mov
rorb
xor
push
and
sub
aad
pop
sti
lahf
cmp
mov
mov
lret
mov
add
xchg
pop
ret
or
cmc
dec
ret
add
mov
scas
adc
fwait
inc
ja
inc
cmp
mov
fwait
inc
xchg
shrl
inc
fwait
lahf
rclb
pop
cld
outsl
pushf
jmp
in
sti
and
inc
cmp
xorl
std
pop
add
push
sbb
mov
push
clc
daa
std
shr
mov
add
pop
push
jns
jb
mov
vphadddq
cltd
mov
xlat
outsb
lods
sbb
popf
movl
inc
out
popa
fistpll
dec
jmp
jbe
jns
pop
jp
in
fistps
or
das
pop
js
pop
jl
xor
sbb
out
lods
scas
hlt
ds
sub
out
rorb
aas
pusha
aad
and
jmp
in
dec
lods
cmp
mov
cwtl
adc
sbb
inc
shl
arpl
std
push
or
mov
popa
fwait
or
sarb
adc
fcompl
out
stc
and
inc
outsl
mov
pushf
pop
inc
push
into
adc
stos
pop
mov
xor
xor
dec
and
jo
shll
ja
not
sub
jne
in
mov
lret
jbe
sbbl
std
pop
aas
push
rcr
outsl
jo
pop
inc
sub
or
or
sti
comiss
int
cld
cld
sbb
cmp
cmp
repz
fimull
mov
int3
sub
sbb
movsl
sti
push
test
les
cmpsb
xchg
mov
adc
fdiv
cs
aad
xor
push
sub
int3
dec
xor
mov
in
aaa
and
xchg
idivb
stos
movsb
jnp
test
mov
nop
and
jb
mov
xor
gs
mov
jno
ja
imul
out
jbe
out
pop
rclb
movsl
pop
inc
sub
loopne
jge
cs
scas
add
xlat
fs
loope
popf
xchg
call
push
cld
cs
or
mov
nop
mov
and
mov
sub
in
or
shlb
mov
add
rclb
adc
fisubl
mov
cmpsb
fld
movsb
push
sub
test
fidivrs
add
shrb
and
mov
addr16
mov
fcoms
jmp
inc
test
es
jmp
jl
push
pushl
testb
fistpl
inc
andl
out
pop
sbb
lcall
mov
fwait
les
rolb
mov
pop
shr
xchg
mov
jg
das
pop
sti
push
lods
and
dec
cld
shrb
rcrb
push
jae
imul
adc
cli
les
pop
mov
cmpsl
inc
sbb
cmp
xchg
pop
lods
hlt
mov
mov
or
popa
and
lret
incl
dec
lret
jo
jnp
sbb
imul
dec
inc
rdpmc
push
jbe
shrb
mov
les
xchg
jbe
loopne
shrl
fistpl
jbe
jmp
in
mov
jecxz
and
arpl
out
scas
push
dec
les
fmuls
insl
xchg
cmp
cld
mov
or
or
push
dec
iret
repz
cmp
fidivs
mov
add
and
or
lret
dec
mov
pop
add
cmp
rcpps
xor
arpl
or
xor
shl
nop
data16
inc
jecxz
cmp
push
je
pop
inc
mov
stc
repnz
xchg
bound
jnp
mov
jb
repnz
ja
imul
dec
dec
out
rolb
sub
sarb
aam
pop
dec
outsb
adc
sub
sahf
bound
jno
add
nop
dec
mov
lods
sub
mov
cmp
loop
jno
int3
pop
addr16
shrb
cmc
or
outsb
out
push
icebp
test
push
jo
adc
pop
pusha
adc
pop
xor
into
data16
fbstp
jbe
inc
int3
mov
push
js
cmpsl
sbb
fsubs
pop
pop
repz
in
or
hlt
cli
test
inc
dec
rcll
mov
rol
shrb
dec
pop
adc
jbe
jmp
testb
inc
out
movd
outsl
jne
arpl
aaa
sahf
loope,pt
push
push
fsubs
xchg
xor
mov
stos
dec
mov
xor
inc
and
outsb
jecxz
adc
pop
pop
inc
inc
jbe
in
mov
xchg
or
scas
xchg
jnp
jecxz
lahf
int3
fcompl
outsb
or
in
sbb
shrb
test
adc
mov
in
data16
pop
or
mov
rolb
add
push
in
pop
pop
outsb
mov
aaa
and
in
add
dec
in
out
add
cmp
jge
pushf
dec
inc
dec
jbe
shl
int
into
adc
rclb
out
dec
mov
fisttpll
test
add
arpl
mov
ret
pop
outsb
mov
fistpl
fs
or
jns
cmp
pop
jne
shll
inc
inc
cmc
and
out
push
dec
pop
stc
jmp
negl
adc
popf
xchg
add
cmpsl
lods
roll
mov
in
xor
enter
mov
ljmp
sub
outsb
hlt
addr16
dec
rolb
lret
cli
mov
fucom
xor
push
jp
repnz
pop
jo
mov
sbb
inc
test
dec
neg
or
jb
xchg
and
mov
shlb
mov
sbb
sbb
dec
les
jo
cwtl
subb
lods
mul
jbe
bound
ret
shr
loope
lock
cmp
xchg
inc
and
lods
fcoms
mov
loop
mov
sbb
leave
jmp
scas
adc
add
mov
jp
dec
cmpsb
outsl
test
je
decb
cmpsb
sbb
xchg
sti
jmp
jo
lcall
and
jge
mov
inc
xchg
pop
cs
loop
dec
pop
add
hlt
and
mov
imul
lcall
xor
cs
xor
pop
sub
mov
xor
rcl
sbb
rcrb
dec
xorl
lcall
mov
xchg
movb
fstpt
cmp
push
lcall
pop
mov
in
cld
in
xchg
repnz
fsub
mov
dec
adc
lods
dec
push
sbb
sub
mov
clc
mov
mov
mov
ss
xchg
pop
fsubs
xor
into
cmpsl
sbb
in
inc
mov
rcr
dec
test
mov
xor
mov
out
sub
lods
jne
lahf
mov
push
ljmp
fisttpl
sub
divl
lea
movsl
sahf
movsl
insb
nop
imul
imul
mov
cmp
mov
aaa
cmc
sub
into
cmp
loope
mov
sbb
sbb
cmp
add
negb
inc
cwtl
push
pusha
loop
jnp
in
push
inc
adcl
push
xor
cld
pop
outsl
loop
scas
pminsw
adc
arpl
inc
jg
push
inc
sarb
mov
jle
mov
fsub
arpl
push
and
jno
int
lods
push
cmp
popa
xor
or
pusha
add
bound
test
mov
aad
imull
add
jae
sub
push
xor
hlt
xchg
mov
cmp
flds
inc
cmp
jmp
mov
sti
sbb
mov
adc
ljmp
mov
loopne
xor
and
minps
mov
sarb
xchg
sbb
mov
lods
dec
mov
adcb
cltd
bound
pop
in
pop
iret
adc
lock
pop
xchg
sbb
xchg
arpl
stos
rolb
add
mov
arpl
insl
cmpsb
out
xchg
movsl
xorb
add
test
pop
jno
aas
jnp
pop
fcoms
rorb
mov
daa
inc
fnstcw
push
nop
jmp
fs
cli
je
cmc
popa
add
outsl
movsb
popa
xchg
or
inc
mov
mov
aam
xor
fbstp
mov
pop
dec
mov
les
cmp
mov
pop
dec
and
jnp
shlb
pop
outsb
fnstsw
loop
lret
cmpsb
stos
jg
pop
mov
outsb
mov
std
jo
aad
pop
xchg
mov
aam
addr16
mov
xchg
outsb
sbb
es
xchg
out
mov
push
dec
mov
push
bound
jp
pop
repz
loop
sbb
mov
lds
add
sbb
inc
out
pop
and
sar
outsb
subl
xchg
stc
fwait
imul
lret
out
shll
ss
les
jno
jmp
int3
lret
add
mov
stos
push
xor
push
jecxz
inc
fmul
jae
aaa
mov
and
jne
loop
sahf
mov
scas
scas
mul
stos
cmp
sbb
arpl
mov
sarb
pop
xor
push
mov
jo
mov
mov
mov
cmpsb
hlt
aas
sbb
sbbb
popa
subb
adc
push
jns
sahf
fists
bswap
inc
xorb
push
or
daa
and
out
shl
aaa
mov
lcall
aad
xor
test
movsb
jo
es
fisttps
cli
rcrb
or
inc
xor
jl
and
dec
fwait
xor
int
cmpsl
test
push
fnstcw
add
addl
xchg
cmc
daa
orb
lcall
xor
sti
xchg
dec
and
rcr
pop
sub
rcl
jmp
fld
jb
sbb
test
and
rolb
inc
in
adc
dec
loopne
in
add
icebp
adc
aaa
rorb
mov
rcl
int
mov
inc
fwait
enter
mov
iret
fdivrl
and
outsb
out
and
sbb
mov
mov
mov
outsb
inc
dec
or
jo
ret
arpl
fdiv
out
adc
stos
shll
xchg
insl
loop
dec
in
lret
test
xor
ljmp
mov
add
gs
mov
mov
pushf
push
stos
mov
push
out
jns
test
mov
sbb
ljmp
mov
rep
mov
iret
aaa
push
rorb
sub
cltd
sahf
mov
inc
fdivrl
cwtl
in
out
enter
out
movsb
bound
or
insb
test
sbb
mov
dec
mov
sbbl
or
fisubrl
sub
ds
stos
shll
add
pushf
pop
mov
and
cwtl
lds
jbe
fldt
in
jmp
movsl
bound
das
mov
stos
cmp
je
outsb
adc
imul
add
mov
int3
jmp
ljmp
in
inc
mov
jg
adc
arpl
shlb
clc
rol
xchg
mov
mov
pop
sbb
pop
mov
sbb
out
sbb
pop
mov
insl
xchg
sub
adc
fcoms
pop
rclb
dec
cltd
cmpsl
fisubrl
addr16
inc
sub
mov
inc
jbe
rcrb
jmp
xorb
test
or
jmp
mov
out
mov
pop
cwtl
jbe
mov
jle
rcr
outsb
and
xchg
repz
stos
cmp
mov
outsb
insb
shr
dec
test
jo
pop
xor
push
push
or
out
imul
xchg
rolb
sbb
sub
jo
sbb
jnp
fisttps
aas
mov
je
cmp
and
outsb
pop
dec
or
cmpsl
and
addr16
outsl
inc
arpl
add
hlt
push
ror
push
out
ds
jbe
out
mov
insb
repnz
ljmp
mov
mov
es
scas
stos
shlb
popa
inc
jnp
sub
mov
cmp
pop
mov
das
lock
mov
testb
mov
inc
inc
push
mov
mov
adc
lock
adc
in
jae
pop
push
fwait
xor
insb
xor
je
push
jge
pop
mov
or
mov
pop
push
xor
xchg
xchg
sub
ficoms
and
dec
into
in
mov
push
pop
dec
fnstcw
fistps
fstl
add
sub
push
jg
mov
movsb
call
pop
mov
outsb
mov
nop
push
sti
inc
dec
mov
shlb
jb
push
ret
cmp
cmc
mov
mov
pop
movsl
lock
pop
inc
ja
shrb
repnz
add
lea
dec
pop
mov
div
jnp
and
and
stos
fmull
push
sahf
cwtl
bound
push
dec
test
dec
into
push
push
les
mov
and
and
call
pop
aaa
mov
sbb
push
cmp
in
dec
adc
orl
adc
push
sarb
pop
pop
addr16
loop
jle
sub
cmpsl
fisttps
dec
sbbl
mov
popl
cmpl
lds
cmp
enter
xor
dec
cmpsl
hlt
jmp
mov
xchg
sti
mov
push
inc
arpl
push
jno
mov
add
mov
ret
repnz
push
dec
negb
flds
sbb
lock
lock
jbe
xor
push
jge
adc
in
push
pushf
outsl
lods
adc
popf
cmp
ja
xchg
mov
push
push
and
inc
sub
fistl
inc
loop
dec
lds
das
int3
cmpsl
decl
aaa
popa
mov
popa
ss
inc
and
and
cmpsl
mov
push
sbb
in
test
jns
add
inc
sti
cld
push
aam
xchg
inc
cmp
ljmp
cltd
xor
mov
outsb
cld
out
mov
mov
stos
dec
mov
inc
mov
sub
das
and
inc
pop
int
add
jecxz
pop
adcb
dec
popf
addb
loop
outsb
dec
in
pop
lock
bound
popf
pop
jbe
cli
shl
push
sub
fcoms
cmp
adc
aas
outsb
and
test
scas
and
adc
mov
fidivl
into
outsb
test
mov
pshufw
mov
dec
push
and
mov
xchg
rcl
fisubrs
mov
aaa
dec
scas
sub
pushf
sub
xchg
mov
lods
mov
ss
inc
cs
and
jb
icebp
inc
and
xor
test
cmp
cmc
sarb
mov
dec
test
flds
mov
or
ljmp
xor
test
jno
cmp
push
sub
cs
rorb
add
dec
stc
xchg
insl
inc
push
aas
imul
jmp
pushf
inc
aaa
jae
pop
mov
adc
push
pusha
rorb
lret
js
outsb
mov
cmpxchg
adc
dec
mov
outsb
imul
insl
or
adc
or
testl
jnp
iret
popf
cmp
int3
stc
push
sbb
divl
mov
loop
inc
mov
or
icebp
shlb
mov
fwait
mov
lcall
xchg
aad
jge
test
rclb
imul
pusha
dec
mov
mov
bswap
cmp
jb
mov
outsb
mov
das
inc
in
or
jecxz
sub
scas
cwtl
cmc
ljmp
adc
icebp
add
xchg
xchg
mov
stc
inc
push
cmp
jbe
xchg
arpl
pop
mov
xchg
add
sbb
insl
and
je
insb
rcl
sub
repnz
dec
pop
mov
bound
or
and
or
stos
pushl
jle
sbb
shr
hlt
fstl
test
lret
cmc
adc
cs
jl
jle
insb
fwait
push
and
out
je
lahf
insb
fidivl
test
and
and
in
or
addl
jbe
out
pusha
scas
inc
cmc
je
xchg
ss
adc
mov
inc
test
xchg
loop
push
inc
jbe
cmp
xchg
pop
orl
insb
outsl
sub
and
adc
fwait
xor
outsb
or
mov
jmp
test
divb
ficoml
inc
push
adc
out
sarb
nop
fcomp
push
pop
jmp
push
mov
cmpsl
mov
mov
repnz
xchg
xchg
loop
adc
mov
push
pop
fwait
inc
ljmp
xchg
int
std
pop
ds
inc
jo
jae
pop
pop
aam
cmp
popa
push
aas
imul
lock
mov
xchg
xor
stos
movsb
sbb
clc
fiadds
mov
sbb
stos
ret
rclb
or
inc
testb
jmp
xor
sub
pop
mov
std
add
push
mov
inc
fistps
cwtl
pushf
leave
fdivl
aad
shlb
push
rclb
ds
pusha
imul
dec
mov
mov
pop
and
sbb
xor
and
loope
insb
outsb
mov
enter
ja
ljmp
test
fcomip
mov
je
sub
jl
lods
sub
pop
insb
add
mov
sti
jb
mov
rorb
or
leave
cld
sub
ret
insl
xchg
mov
add
or
movsl
adc
add
out
jle
cmc
stos
addr16
ja
push
negb
inc
inc
mov
jge
jecxz
mov
out
push
sbb
mov
testl
jnp
jmp
jns
fs
dec
mov
in
lea
sub
cmpsl
sub
or
frstor
and
mov
mov
bound
xchg
test
sbbb
inc
andb
sti
stos
mov
or
xor
dec
dec
enter
push
outsl
mov
shr
cmpsl
call
jge
ret
push
add
scas
scas
test
ret
bound
daa
loop
xor
rclb
lahf
dec
out
je
rorl
sub
push
jbe
jae
out
lcall
sub
movsl
mov
inc
movsb
fbld
sub
mov
xor
inc
enter
js
aad
out
lahf
sbb
mov
outsb
aas
imul
add
push
mov
cltd
sahf
inc
mov
jae
and
data16
cmc
mov
fwait
inc
lret
pop
sarb
pop
icebp
xchg
sbb
push
ret
int3
push
sbb
push
cmp
inc
jle
outsb
hlt
jb
rcrl
pop
add
pop
mov
xor
mov
shlb
insl
cwtl
arpl
pop
mov
cld
push
add
out
std
mov
jnp
jns
sbb
sbb
test
mov
je
push
cwtl
fdivl
jne
addr16
dec
cmp
mov
scas
out
and
js
outsb
dec
pop
xchg
sbb
jge
je
pop
pusha
xor
test
xchg
mov
pop
shrb
mov
jle
inc
decb
insb
push
loop
in
lods
cmp
out
jbe
mov
cmp
cmc
mov
aam
cmpsl
inc
int3
sbb
jo
jle
jle
mov
ja
push
mov
xchg
in
adc
dec
lods
fisttpll
jmp
pop
lahf
leave
xchg
ja
mov
jbe
ficompl
subb
stos
clc
inc
cld
pop
sub
out
rcrb
dec
sbb
or
rclb
cmp
lea
addr16
cvtps2pi
xchg
out
xchg
fistps
and
and
xor
iret
inc
jl
sarb
fwait
xchg
sarb
mov
repz
push
mov
dec
iret
xchg
jne
out
cltd
inc
mov
pop
je
dec
stos
mov
out
mov
inc
ret
aad
dec
fistps
outsb
repz
hlt
das
nop
jge
ss
popf
sub
dec
outsl
sub
enter
sahf
mov
loop
xor
sub
popf
ret
mov
popa
and
sbb
rcl
dec
in
enter
jns
cwtl
rcrb
iret
add
mov
jne
mov
loopne
push
jnp
dec
add
ds
es
test
xchg
arpl
loop
bound
jns
in
sbb
xchg
mov
pop
outsb
add
jb
aaa
movsl
jo
daa
cmpsb
push
xor
ljmp
test
mov
in
add
dec
jecxz
jmp
or
loope
movsl
jo
loop
fimull
ljmp
adc
and
loope
lahf
into
lods
dec
add
fsub
test
cmc
ljmp
jge
hlt
dec
mov
das
fiadds
dec
fists
cmp
xchg
shll
dec
xor
add
outsl
cmpb
arpl
scas
inc
inc
push
inc
jmp
add
adc
lods
and
subb
cld
mov
and
rolb
push
lods
pusha
or
lret
insb
adc
and
jne
iret
lds
inc
pusha
sbb
out
outsb
dec
std
lcall
fbstp
pushf
push
sbbb
xor
inc
pop
jecxz
push
jbe
ret
xchg
shlb
mov
cli
jg
cltd
repnz
mov
xchg
mov
dec
dec
incl
sbb
mov
and
in
xchg
xchg
clc
push
jnp
stos
cmp
in
shrb
push
jecxz
fildll
mov
in
xor
pop
sub
adc
inc
shll
add
out
mov
sbb
lcall
outsb
pushf
fcoms
mov
and
inc
sahf
mov
sbb
xor
fisttpll
mov
mov
rolb
stc
pusha
pusha
es
sub
out
call
in
inc
mov
testb
cmp
clc
dec
pop
push
mov
cwtl
jge
or
fdivl
lahf
pusha
je
mov
xor
xor
jl
mov
sbb
and
xchg
repnz
push
es
mov
shrl
add
jbe
cmp
div
lds
popf
rorb
aad
mov
jbe
outsb
xchg
jmp
sti
jbe
jae
and
fsubp
mov
and
and
outsb
shll
cwtl
insb
in
mov
mov
mov
in
cmp
popa
push
icebp
out
xor
mov
mov
fcomip
std
jae
and
sbb
scas
aaa
sub
inc
pop
inc
push
cmpsl
adc
cwtl
dec
fstl
push
loope
js
and
int3
cmp
aad
out
dec
sbb
pop
cmc
jp
add
xor
sti
dec
in
xchg
mov
mov
jo
or
sub
je
jbe
dec
pushf
xchg
cmp
fimuls
add
sbb
fwait
inc
hlt
jne
lret
cmp
stc
jnp
inc
pop
xchg
push
xlat
sbb
clc
cmpsl
mov
mov
je
jp
jo
pushf
outsl
mov
add
jne
lret
fstps
pushf
loop
inc
mov
loope
incb
push
in
inc
adc
adc
mov
ss
imul
scas
fwait
inc
std
sti
xor
mov
cmpsb
push
adc
popf
or
stos
cmp
push
add
jae
pop
add
jbe
fwait
lret
sbb
jg
repnz
repnz
sbb
out
clc
cmc
xor
mov
pushf
roll
dec
push
add
aas
jbe
jo
fcom
imul
mov
sub
pushf
ja
push
ss
cmp
and
dec
adc
shr
jp
lcall
or
mov
inc
lcall
adc
sbb
icebp
aaa
pop
aad
iret
hlt
shl
jmp
out
outsb
and
nop
inc
push
jno
dec
mov
ljmp
sahf
in
jae
xchg
insl
in
cmc
cmp
rclb
bnd
adc
adc
pop
cmpsb
mov
push
push
scas
cmp
lahf
out
pop
enter
shl
pop
out
inc
and
mov
and
loope
rorb
cmpsb
push
insb
rolb
out
lcall
adc
xchg
lods
in
mov
subb
insb
push
stos
sub
cmp
leave
sub
prefetch
mov
adc
divl
rcrb
aam
rcrb
mov
sub
or
dec
xchg
jg
add
ljmp
aaa
xor
stos
add
xor
iret
idivl
outsb
mov
fdivp
adc
test
xchg
adc
call
inc
repz
or
xor
call
xchg
pushf
loope
outsl
scas
jne
into
mov
adc
inc
sbb
sbb
andl
mov
orl
stos
dec
lret
fsubl
iret
into
xchg
out
jno
cmpsb
fdivp
push
mov
loop
sbb
lcall
repnz
dec
lock
lds
imul
aad
idivb
rolb
das
inc
and
rolb
loope
dec
inc
cwtl
lds
dec
mov
xchg
lock
outsb
adc
jbe
outsl
pop
iret
aaa
fcmovbe
lea
dec
aad
add
cs
mov
test
push
mov
xchg
xor
in
cli
dec
fwait
fdivrp
sbb
shl
sbb
outsb
pop
add
mov
jnp
pop
cmpsb
jp
out
sbbb
daa
js
mov
inc
jbe
iret
jle
mov
nop
mov
test
imul
cwtl
dec
push
cmc
inc
sbbl
pushf
roll
das
loopne
pop
std
stos
shlb
jecxz
push
lcall
push
adc
sahf
jmp
iret
je
in
popf
push
or
mov
inc
divl
push
add
jne
sbb
rorb
mov
testb
mov
add
dec
mov
pop
and
mov
fmul
and
mov
mov
in
push
imul
repz
push
pusha
ret
mov
ljmp
adc
outsl
in
xchg
jbe
xchg
mov
out
fwait
pop
je
jae
test
mov
aam
xchg
iret
insl
ficomps
outsb
adc
or
movl
getsec
lcall
popa
mov
scas
xor
cmpsl
fbstp
fxch
out
sbb
icebp
loope
stos
ret
shl
hlt
popa
push
mov
das
and
dec
dec
sub
jle
fisttps
jmp
lock
pop
je
jbe
push
sbb
jmp
cmp
and
inc
mov
pushf
rcl
outsb
daa
shrb
mov
loopne
rol
sbb
cmpb
loop
and
xchg
stos
ficoms
rcl
sub
mov
pop
shl
neg
xor
dec
daa
stos
dec
push
fcoms
xchg
ret
vpaddq
repz
and
dec
xchg
scas
out
aam
imulb
xchg
fcmovu
inc
pop
je
mov
sub
loope
test
in
hlt
inc
aam
out
push
xorb
add
sbb
fisttpl
cwtl
andb
rol
add
movsl
xor
adc
sub
filds
out
lea
adc
enter
sarl
sbb
clc
popl
outsb
lcall
pushf
or
outsl
or
push
decb
insb
sahf
in
jbe
ljmp
dec
hlt
inc
pop
inc
fs
stc
dec
and
dec
jle
cwtl
mov
shll
pop
cmpb
fcmovne
scas
jmp
iret
lret
fildll
mov
jno
data16
insb
sbbb
mov
pop
jbe
mov
mov
mov
add
popf
dec
jle
mov
iret
enter
cld
fstpl
movsl
int3
call
dec
jmp
or
loope
sti
ret
cmp
outsb
aam
rclb
cltd
or
lock
xchg
push
fwait
inc
das
pop
mov
fwait
jl
jg
pusha
or
js
enter
xor
and
dec
push
sub
ficoms
mov
fistps
jg
lret
or
cmovle
inc
dec
scas
call
cwtl
insl
jo
mov
xchg
lock
sbb
xor
pop
lods
pop
fdivl
push
and
fcomip
mov
nop
sbb
ss
push
popa
outsb
fistpll
mov
pop
cmc
sbb
inc
xbegin
adc
repz
xchg
mov
jp
outsb
inc
pop
ror
sahf
insb
dec
mov
lret
mov
inc
mov
pusha
jbe
push
jo
filds
in
mov
btr
repnz
das
mov
call
add
jg
xchg
adc
push
enter
mov
mov
inc
dec
or
sar
outsb
dec
dec
daa
in
mov
out
jno
jo
das
ja
and
lods
nop
roll
fists
aas
jbe
sahf
push
call
mov
fistl
insl
mov
jnp
clc
retw
dec
pop
push
and
mov
xchg
adc
fists
pop
cmc
popa
andb
jne
pop
push
and
push
outsl
xor
adc
fs
ret
dec
cmovle
das
cmc
inc
adc
push
and
inc
std
imul
je
ljmp
shlb
movsb
in
push
shlb
mov
pusha
shrl
sti
cli
adc
test
cmc
jbe
or
inc
daa
mov
and
fmulp
jnp
sub
cmc
icebp
jbe
shr
dec
icebp
aad
cmp
mov
jb
lods
out
imul
mov
adc
mov
icebp
jp
int
or
jbe
jmp
cmp
sub
dec
pop
cmpsl
js
in
cmc
and
arpl
shrb
inc
dec
or
jecxz
aaa
xchg
inc
cmp
or
insb
cwtl
addb
inc
mov
sub
mov
xor
jg
sahf
in
cmp
aas
sub
cmp
ret
lods
dec
jnp
loop
xchg
sbb
arpl
mov
loopne
iret
mov
or
cmp
jmp
inc
add
adc
ds
sbb
cmc
add
push
mov
outsb
sub
cmp
sbbl
les
dec
pop
cld
dec
out
repnz
mov
outsl
jmp
sti
cmp
in
packssdw
out
jae
push
mov
int
arpl
in
xor
and
push
popf
fwait
mov
and
inc
sub
repnz
jno
test
jmp
jno
lcall
mov
mov
push
ret
mov
pop
or
pushl
in
rcll
repnz
cld
data16
scas
insb
xchg
jbe
test
add
and
out
and
iret
inc
mov
adcl
jp
popa
and
pusha
mov
cwtl
leave
jl
mov
add
mov
sti
test
or
mov
inc
and
mov
lret
fidivl
jne
hlt
in
fsts
int3
jb
outsb
in
inc
xchg
push
sbb
nop
mov
cs
test
push
stc
insb
mov
outsb
inc
push
mov
dec
pop
pushw
mov
xchg
sbb
or
shll
and
ds
inc
inc
enter
adc
inc
ljmp
aaa
mov
or
popa
jnp
ret
mov
jbe
movsl
cltd
cmpl
sub
sar
dec
sub
lret
fsub
vmovapd
jae
add
jbe
fucomi
adc
cmp
loop
sbb
lea
outsb
jge
insb
lcall
and
pushf
lcall
sub
or
filds
pop
and
in
repnz
add
xlat
push
mov
dec
sub
jae
mov
insb
aaa
jecxz
sbb
push
adc
nop
add
test
mov
xor
ljmp
and
ss
outsb
xchg
movsb
cwtl
or
int3
inc
add
sub
adc
outsl
loope
xor
cmc
setle
fiadds
adcl
hlt
jecxz
xchg
jmp
adc
sub
loope
movsl
aas
outsb
add
cmp
pop
divb
iret
mov
jg
mov
in
test
dec
xchg
stos
sarb
cmc
ficoml
movsl
outsl
lahf
gs
inc
dec
fucomi
inc
xchg
xchg
adc
lcall
jge
lcall
or
daa
mov
test
jg
pop
sbb
push
pop
pop
stc
mov
ja
inc
loop
outsb
lods
sti
pop
daa
daa
outsl
test
jmp
mov
in
cmc
xor
call
or
filds
scas
mov
mov
xchg
push
shlb
movsb
lret
push
xor
std
ret
push
or
dec
pop
jne
imul
adc
and
das
cmp
testl
ret
vmaxsd
jbe
js
cwtl
outsb
test
sbb
test
test
roll
cmc
je
and
mov
jae
cmp
sbb
xchg
insl
or
lds
add
mov
mov
jno
push
sub
inc
mov
rcr
dec
pop
inc
cld
push
stos
imul
mov
mov
outsb
shl
fstpl
aad
cmpsl
test
dec
aad
xchg
sub
dec
jbe
dec
sub
xlat
addl
popa
pop
pusha
loope
das
cld
mov
jmp
movsb
mov
movsb
mov
lods
xchg
mov
jb
hlt
loope
loop
fstp
shlb
add
pop
ss
and
ljmp
mov
dec
test
testb
or
into
cmp
shlb
pop
adc
hlt
cmp
insl
and
in
sub
push
sub
xchg
or
cwtl
sti
lock
cmpsl
cmp
dec
stc
cmp
pop
ds
sub
xchg
in
and
ret
xor
rcr
adc
lods
test
movsl
out
rcrb
jl
pop
mov
cmp
stc
xchg
mov
push
icebp
lds
mov
sbb
jb
add
int
ds
lods
pusha
sahf
mov
dec
test
xchg
or
mov
cmp
aaa
cwtl
push
aad
popa
adc
cmpsl
xor
jae
rolb
bound
jo
ss
repz
insb
xor
movsl
push
shlb
icebp
bound
dec
pop
dec
fisubrl
out
mov
sub
ja
mov
ss
add
pop
and
iret
imul
mov
imul
push
mov
dec
ret
mov
mov
aad
lods
scas
loope
rclb
aaa
aad
cmc
les
dec
add
xor
mov
mov
mov
push
cltd
addr16
into
or
sub
or
shll
popa
imul
outsb
loop
jmp
jbe
pusha
cmpsb
mov
mov
fwait
pop
cmc
nop
stos
scas
and
dec
pusha
jmp
nop
pop
mov
cmpsl
xor
outsb
in
jbe
cmp
shlb
xor
cs
cmc
fwait
rcl
jns
jno
push
pop
outsb
sbb
stc
adc
ret
inc
nop
dec
jo
sahf
pop
paddusb
fwait
lret
int3
xchg
repz
jp
inc
cwtl
rdmsr
jecxz
outsb
mov
lcall
pop
iret
jbe
in
jb
pop
imul
shlb
inc
xor
lods
dec
xor
xchg
jecxz
mov
push
out
push
das
test
sbbb
push
push
push
dec
mov
cmp
nop
fbld
lahf
cmpsl
lods
out
shlb
fidivrl
std
push
adc
adc
imul
inc
jmp
and
cmp
das
call
insb
lods
fwait
test
push
ljmp
xchg
mov
dec
jle
lock
mul
jbe
add
pop
sub
fcom
push
popa
and
add
sti
adc
gs
sub
in
test
fnstsw
insb
pop
dec
or
add
popa
leave
pop
add
mov
test
sub
rcl
mov
and
sub
notl
xor
mov
push
loopne
jmp
fiaddl
test
lods
in
jo
adc
jcxz
cmc
push
sti
xchg
push
inc
lret
rcr
add
ja
push
inc
cli
or
add
js
xor
test
add
lods
sub
xchg
sbbl
test
mov
incb
pop
and
aad
lods
adc
movsb
mov
xchg
fadds
inc
stos
out
add
inc
pop
imul
loope
arpl
push
mov
fsts
mov
loop
aad
sbb
cmpsl
lret
out
jbe
cmp
sub
imul
adc
jge
dec
shl
cmc
and
push
shlb
inc
push
popa
fdivs
orb
movsl
push
sub
fbld
outsb
clc
dec
insl
or
pop
or
inc
dec
jp
or
add
popf
popf
cld
xor
ljmp
cmp
ss
adc
jne
nop
or
outsb
sbb
lods
test
sarb
sbb
imul
out
fisubrs
lds
cmp
andl
aaa
mov
outsl
jg
cli
icebp
mov
repz
cli
shll
les
addb
aam
pop
ficoml
xor
jbe
shl
pop
rclb
clc
push
xchg
aaa
std
pop
xor
and
xor
enter
dec
pop
ss
sbb
shlb
scas
scas
arpl
popa
mov
inc
outsb
call
aam
push
jmp
sub
loope
outsb
pop
test
notb
and
jo
cmp
fcmovbe
cmpsl
mov
mov
or
xchg
outsb
xor
nop
sub
das
or
and
dec
mov
nop
fidivrs
jae
mov
sub
sarb
jmp
cmpsl
sbb
dec
jle
arpl
inc
shl
test
xchg
shrl
mov
cmc
mov
mov
rclb
out
sub
ljmp
scas
or
pop
addr16
adc
mov
imul
pop
rclb
xchg
jecxz
jb
fwait
mov
add
popa
cmc
imul
lock
pop
jno
or
xchg
fiaddl
jecxz
jbe
inc
fnstsw
loop
rorl
cmpsb
cwtl
inc
lcall
into
jg
out
jno
dec
mov
xchg
dec
movl
jns
xchg
xchg
cmpb
nop
jae
mov
cld
orb
lret
movsb
outsl
shl
cmp
aas
mov
sbb
das
loop
push
jb
pop
add
sbb
addr16
xchg
test
mov
pop
sbb
jne
xchg
daa
jmp
movsb
ja
nop
jns
dec
in
xor
mov
ficoms
adc
inc
loope
shlb
mov
and
xchg
mov
sub
outsl
mov
in
inc
and
xchg
pop
add
jnp
pop
cld
fldz
int
and
imulb
into
pop
xchg
enter
pop
mov
fcmovne
sub
ds
rcrl
cli
sbb
mov
bound
pop
iret
xchg
daa
shrb
cmpsl
adc
stc
push
fidivl
push
cmp
test
aaa
push
or
push
test
rcrb
jnp
xor
dec
xchg
mov
jb
fsts
jecxz
jns
lea
arpl
cmc
arpl
orl
add
cwtl
imul
sbb
sbb
and
mov
mov
bnd
and
xchg
mov
sub
ja
loop
test
and
push
shl
shll
xor
jb
mov
shlb
fistps
push
jbe
xor
cwtl
scas
nop
stos
push
jg
sub
imul
mov
inc
mov
cmpsl
pusha
jbe
lret
js
mov
jmp
dec
and
mov
xchg
mov
ss
xor
jge
leave
outsb
sti
sti
outsl
fwait
mov
test
cmc
push
sbb
sub
jb
push
jge
pop
test
movb
out
jbe
mov
mov
inc
and
push
mov
das
mov
or
cs
fcmovne
sub
hlt
popa
mov
mov
mov
out
outsb
testl
sbb
stc
cs
and
ja
fldz
sub
jmp
pop
ds
inc
mov
scas
jno
repz
movsl
aas
fbstp
cmp
mov
outsl
dec
aam
and
mov
jns
fwait
push
insl
jp
shlb
mov
pop
pop
stos
ss
pop
repz
fwait
xlat
hlt
arpl
iret
pop
mov
fildl
lods
divl
jmp
xor
das
or
jns
gs
dec
inc
pop
in
mov
mov
test
dec
in
mov
jle
cmp
mov
xchg
jno
aas
fsub
repz
and
ljmp
sbbb
pop
fildl
imul
in
cmp
jb
iret
call
popf
mov
fwait
mov
aam
in
sti
inc
sbb
jmp
xchg
pop
dec
and
lret
cmp
pushf
hlt
subb
test
xchg
cwtl
push
mov
mov
mov
ret
cmp
push
out
cmp
cld
push
jge
loop
push
adc
sub
cmc
mov
or
pop
add
fcomps
jne
out
xchg
and
clc
lcall
ds
mov
lds
cmp
sub
mov
jbe
dec
lea
hlt
jne
leave
mov
push
loop
and
and
or
cmc
sbb
int3
je
pop
mov
lock
das
pop
push
inc
add
inc
xor
fstl
xor
mov
mov
nop
adc
push
int3
adc
mov
test
sbb
call
lock
sbb
rcrb
cltd
sbb
sahf
dec
fcomps
sub
and
sub
sbb
sbb
and
es
inc
xor
arpl
popf
push
sbb
mov
dec
mov
cld
scas
scas
inc
push
jnp
mov
mov
cli
ret
out
and
imul
jne
xchg
imul
jl
popf
icebp
mov
xchg
lcall
push
aad
cmc
outsb
push
loopne
dec
movsb
cmc
test
jmp
mov
push
imull
add
sub
loop
mov
je
dec
popa
shl
outsb
enter
fsubs
inc
xchg
fisubl
hlt
outsb
xchg
or
inc
dec
mov
leave
faddl
adc
addr16
sbb
sub
and
es
fimuls
add
mov
jne
jecxz
mov
lods
insl
inc
sub
sub
push
inc
lock
mov
int3
fs
rorl
aaa
test
hlt
mov
xchg
jnp
jge
jns
repz
pushf
sub
jbe
repnz
loope
inc
jae,pn
add
lret
pop
repnz
lret
call
or
loopne
cmp
push
mov
dec
fisubl
popf
shl
xor
popa
lcall
aam
cltd
dec
movb
mov
es
and
cmc
sbbb
mov
mov
lret
xor
in
aad
push
dec
outsb
es
add
jmp
xor
jne
inc
nop
jno
mov
cmp
in
and
xor
aad
lods
jne
xor
xchg
out
stc
lahf
ficomps
shr
mov
jbe
cmp
enter
movsb
testl
sti
dec
aaa
pusha
shlb
jae
push
jns
xlat
cmp
fidivl
arpl
pop
xor
ja
xor
lods
or
push
mov
cmp
mov
jae
jo
gs
gs
cmp
sub
int
mov
lret
add
dec
pop
js
jnp
ficoms
xchg
xor
out
push
mov
mov
lods
mov
call
push
jb
pop
or
rep
cld
xorl
aam
sbb
iret
jg
add
daa
xor
test
mov
lock
outsl
xchg
fwait
jg
jbe
popf
xor
cmpl
lret
jle
fmuls
cmc
fsts
das
and
insl
ficoml
movsb
loopne
add
cmpsb
arpl
bnd
xor
or
jno
mov
sub
fidivrl
pop
pop
into
push
mov
icebp
dec
fstps
inc
nop
iret
push
push
cmc
xchg
pop
arpl
adc
pusha
loope
pop
sbb
test
orb
mov
ret
and
fidivl
jg
mov
ret
jnp
cmp
fildll
outsb
das
lret
cmpb
push
stos
rolb
addr16
lods
mov
jg
out
mov
adc
clc
dec
inc
icebp
cmpsl
mov
xchg
pop
cld
xchg
mov
rcrl
mov
subb
push
xor
xchg
mov
sbb
xchg
aas
shlb
out
fcoml
or
mov
aad
cmp
jmp
outsb
in
rcrl
xor
dec
insb
jmp
add
xchg
and
mov
mov
add
in
into
xchg
pushl
or
xchg
and
es
adc
sahf
mov
in
int3
xchg
adc
outsb
aas
outsb
jmp
dec
imul
rolb
in
dec
movsb
into
mov
mov
jbe
test
cmp
sub
push
hlt
sub
cmc
es
mov
out
pminsw
cmpsb
sbbb
xchg
rcrb
mov
adc
xor
dec
ljmp
push
add
cmpsl
dec
jg
sub
sbb
lahf
jno
push
leave
xlat
xchg
stos
dec
nop
in
ret
rolb
rcr
cwtl
bound
fisttpll
mov
mov
adc
lods
cs
inc
std
imul
or
js
lods
mulb
les
int
mov
pop
push
push
fisubrl
mov
push
test
jmp
jecxz
ret
push
adc
loopne
jno
jns
adcl
sti
fdivl
in
cmp
lahf
stos
jecxz
xor
push
add
loop
push
pusha
push
nop
jno
sti
mov
mov
xchg
gs
pop
lcall
movsl
xor
xor
mov
lds
fstpl
mov
inc
pop
jmp
stos
and
nop
arpl
xorb
jae
fwait
or
in
mov
inc
mov
xor
mov
xor
rolb
inc
sub
mov
sbb
dec
shlb
fists
xor
jb
mov
push
jo
lret
clc
lock
mov
pushf
roll
dec
popa
mov
mov
rol
push
sub
and
push
fucom
push
push
pushf
adc
mov
fs
nop
xchg
in
jo
mov
pop
je
inc
sbb
and
orb
adc
push
mov
out
lods
xor
loop
dec
mov
fbld
xor
jbe
adc
sahf
jp
es
stos
push
pop
outsl
jb
aam
rcrl
dec
movsl
in
popa
stos
in
mov
cmp
jnp
rolb
rolb
fisttpll
push
xchg
fidivrl
and
push
jno
insl
stos
dec
xchg
push
sub
lods
es
pushf
push
xchg
xchg
pop
lahf
push
xor
into
inc
loop
xorl
mov
repnz
lahf
push
sub
ds
fidivl
in
fwait
dec
rcr
iret
xchg
or
add
jge
push
repz
shl
loope
and
test
pop
add
or
subb
mov
mov
xchg
xor
lret
popa
jle
ss
fisttps
and
jle
je
lcall
pop
fisttps
sbbb
xchg
test
or
cltd
push
push
ret
and
push
rclb
pop
mov
pop
pop
ret
insb
add
test
pop
mov
enter
adc
mov
sub
push
lods
push
stos
ficompl
xchg
enter
dec
jnp
push
jo
mov
jp
jno
pop
sub
mov
outsb
adc
mov
jmp
jne
xchg
mov
sbb
test
inc
pop
rolb
cmc
adc
pop
pop
push
mov
mov
pop
in
dec
pop
in
cmp
add
adc
inc
fcmovbe
test
nop
outsb
addr16
loopne
testl
push
push
rcr
in
add
jae
ds
lahf
ret
xchg
inc
push
arpl
idivb
nop
and
cmovl
cmp
mov
lds
call
lea
scas
xchg
push
rcrb
adc
pushf
pop
inc
outsl
sarb
jae
pop
dec
mov
adc
sbb
bound
in
pop
pop
rcrl
jg
sub
dec
add
add
xor
popa
call
inc
enter
shrl
scas
adc
xchg
push
push
loope
jle
and
push
mov
fwait
mov
scas
sbb
dec
das
jbe
jb
xor
push
and
push
pusha
and
outsb
cli
mov
cmpsl
aaa
or
lret
int
jle
je
jo
aad
and
je
mov
sub
shrl
in
xchg
inc
xor
jbe
push
jns
dec
lcall
and
mov
pop
fcompl
rolb
shlb
adc
paddd
insb
dec
or
shl
inc
adc
cmovae
mov
rolb
fcoml
loop
in
shl
inc
cs
dec
frstor
jno
jg
sarb
push
or
or
std
cmpsb
sbb
stc
fidivl
arpl
xchg
cmc
popf
inc
or
adcb
lods
ss
jbe
add
aad
lret
les
mov
out
xlat
add
sarb
mov
repnz
mov
mov
mov
scas
jbe
movsl
sub
jl
stos
outsb
fwait
mov
jmp
pusha
push
push
bound
hlt
mov
dec
mov
sbb
mov
addr16
dec
aaa
adc
outsl
faddl
or
mov
test
cmp
jo
adc
mov
out
scas
cmp
jmp
test
sub
inc
and
test
jbe
mov
inc
mov
rolb
jecxz
push
sub
inc
js
ljmp
push
sbb
test
shlb
mov
shll
mov
or
rorb
nop
and
in
out
mov
pop
xor
push
push
cltd
stc
sub
push
hlt
in
out
aam
ja
inc
fiaddl
repnz
xchg
loope
loop
xor
bound
jb
mov
mov
insb
movl
jno
sti
jnp
aaa
hlt
mov
fisubl
push
sbb
repnz
mov
pop
sub
mov
mull
dec
rorb
insb
rorb
lahf
add
bnd
fisubrs
fstp
jbe
add
hlt
cld
xchg
push
dec
insb
or
mov
cmp
mov
pcmpgtw
cmpsl
jmp
pop
mov
mov
mov
inc
dec
pop
repz
cmovbe
push
cmp
rclb
popa
ret
or
add
fwait
dec
add
inc
and
aam
out
sub
sub
sbb
inc
dec
or
shlb
shl
cmpsb
dec
or
mov
push
jge
sbb
je
enter
das
pusha
iret
cltd
cmp
xchg
inc
ss
sbbl
lods
sbb
test
js
shrb
cmp
jne
sub
cwtl
sub
vpsraw
cmpsl
sub
push
add
or
mov
mov
xchg
xor
arpl
jb
dec
fists
hlt
cmc
in
cs
das
jnp
and
push
mov
movsl
ss
dec
jae
ror
sub
xorl
sbbb
aas
xor
std
int
add
stos
sub
push
mov
pop
lcall
cwtl
push
rcl
jge
iret
aaa
cltd
in
lds
dec
loope
jecxz
repnz
arpl
mov
pop
ss
imul
iret
push
pop
mov
cmp
pop
mov
flds
dec
push
loope
sbb
push
sarb
mov
xorb
pop
andb
sbbb
jl
sahf
cli
and
mov
pop
pop
inc
loopne
js
cmp
out
shl
mov
test
mov
push
adc
outsb
imul
or
jo
jne
push
sub
mov
ror
jo
jbe
inc
cltd
xchg
inc
xor
and
mov
push
xorb
sub
or
add
jne
push
push
add
fiadds
scas
push
sub
pop
jnp
xchg
mov
daa
sbb
ficoms
int
xchg
ror
mov
mov
ljmp
sarb
pop
lcall
sti
les
int
jge
shld
and
sarb
hlt
add
inc
pop
adc
sarb
push
in
xor
js
jns
mov
in
addr16
sahf
mov
add
daa
jbe
push
sbb
pushf
ss
aas
push
cli
sarb
sbb
jno
xor
into
mov
ss
int
outsb
push
repnz
iret
mov
ss
xchg
fcom
jbe
dec
js
fcomip
inc
sub
dec
repz
aam
hlt
subl
fwait
aam
movl
out
sbb
das
add
jno
jnp
push
insb
aam
pop
mov
cmpsb
jmp
sbb
jo
sbb
jecxz
stos
push
jnp
xor
adc
std
mov
das
pushl
adc
xchg
xchg
lcall
cmc
aam
ds
sbb
pop
add
mov
out
jnp
mov
jae
mov
pop
outsb
popa
popf
iret
and
je
loop
jae
sbb
push
pushf
push
clc
je
cmpsb
and
cs
mov
mov
cmpsl
pop
push
aad
adc
shlb
loope
adc
nop
rcl
loop
push
out
inc
cmp
mov
xchg
lods
shlb
inc
or
in
add
call
jg
pop
gs
loope
out
je
inc
popf
push
scas
pop
inc
outsb
push
pop
stos
and
out
cmp
or
push
mov
mov
test
xchg
push
fwait
add
sub
sbbl
aam
mov
pushf
dec
cmp
je
push
test
cmp
push
fwait
or
jb
rolb
dec
stos
insb
ljmp
and
divl
adc
lcall
nop
xchg
adc
repnz
scas
lret
fiaddl
push
addb
mov
lods
jmp
popa
lods
fwait
insb
rorb
sahf
cmp
lock
sub
std
movsl
aad
xchg
shlb
push
test
mov
mov
aam
out
rolb
push
xor
filds
xchg
test
subl
mov
pop
lret
insl
lock
mov
lock
arpl
mov
pop
dec
xor
xor
adc
xor
inc
mov
xchg
rorb
repz
fwait
mov
push
rorl
popf
loopne
dec
push
add
jbe
fwait
dec
enter
and
cmp
stos
push
jno
in
movl
jmp
and
rorb
aas
es
outsb
jns
pusha
in
lds
jb
sub
inc
xor
rclb
pop
or
push
es
loope
rol
shl
jle
xor
inc
iret
es
daa
xor
sarb
lods
stc
or
int3
in
ss
jmp
inc
inc
aaa
popf
pop
fwait
and
jns
shrb
inc
pop
sbb
xchg
sarb
adc
repz
out
mov
rcr
sbbb
adcb
sbb
out
pop
divl
sub
adc
dec
inc
and
js
xchg
xor
repnz
imul
das
add
inc
rcrb
jo
dec
xor
cmpsl
loope
inc
inc
cs
mov
lahf
pop
mov
gs
outsb
jle
inc
pusha
mov
jne
jge
das
mov
jl
bound
test
add
add
mov
clc
cltd
push
in
jae
jne
cmp
int3
jb
mov
aad
add
and
jb
mov
cli
fnstenv
fidivrl
or
loop
lret
outsb
shlb
cmp
shl
das
outsb
push
sub
out
mov
popf
dec
fs
ss
pop
or
dec
sbb
push
adc
rol
xor
fwait
ss
inc
push
stos
insl
shrl
or
ljmp
mov
fcomps
push
inc
outsb
xchg
cmp
xlat
dec
xchg
fidivs
lock
dec
xchg
repnz
xchg
jmp
cltd
int
insb
dec
fwait
nop
addb
adc
outsb
push
dec
cmp
sub
xor
mov
out
dec
cltd
movsb
aas
rolb
or
ror
adc
pop
jmp
and
mov
sbb
fstl
cmp
int3
adc
out
jb
jmp
inc
bnd
pop
xor
cmpb
pop
int3
jp
mov
jecxz
mov
int
sahf
ljmp
iret
and
pop
cmp
add
loopne
jl
adc
outsl
dec
jne
in
jecxz
arpl
ja
faddl
popa
jl
movsl
hlt
xchg
push
pop
pop
shll
inc
std
scas
adc
xchg
out
les
popa
jbe
stos
insl
jle
ret
cmc
fwait
mov
cmp
and
ret
add
inc
lret
dec
mov
repz
stos
xchg
aad
mov
cmp
jbe
jne
pop
sbb
and
sub
jecxz
outsb
or
or
idivb
cmpsb
leave
cmp
sbb
hlt
icebp
cmc
mov
shrb
adc
or
adc
add
and
cmp
jns
hlt
inc
sub
xchg
not
pop
push
and
pushf
imul
aam
cltd
loopne
sahf
int3
aaa
xor
idivb
or
je
fcmovne
loope
and
mov
mov
jbe
aad
shlb
fisubl
bound
xor
daa
fiaddl
jl
or
cmp
adc
xor
into
push
cmc
pusha
lea
adc
scas
adc
mov
test
insl
popf
cmc
push
jo
test
xor
das
fisttps
jae
nop
xchg
insl
push
out
jb
icebp
pop
stos
sub
int
xchg
shl
inc
push
femms
testb
stc
stc
scas
push
xchg
js
pop
push
mov
dec
clc
jns
loop
aaa
in
in
push
jp
shlb
sbb
sbb
adc
lahf
daa
jmp
jno
stc
cmp
mov
and
scas
xor
mov
mov
xchg
cmc
outsb
test
pusha
fwait
andb
mov
or
lret
adc
sub
xor
leave
ja
sub
out
mov
int3
imul
dec
rcrb
or
popf
enter
pop
add
aad
lahf
mov
int
outsl
dec
sbb
adc
shl
loope
mov
test
loop
add
xor
insl
jmp
lahf
cmp
into
push
bound
mov
mov
jne
iret
into
dec
popa
sbb
movsb
mov
sub
adc
or
or
sub
add
adc
testb
lds
push
dec
clc
jg
repnz
adc
in
test
test
push
mull
jbe
daa
jmp
pop
xchg
dec
sub
jb
mov
stos
push
push
xchg
mov
mov
movsb
subl
and
popf
mov
call
and
cmpsl
inc
mov
neg
pushf
ljmp
jg
jecxz
lcall
sbb
stos
jnp
btc
jle
das
sbb
add
cli
adc
ficomps
and
bound
inc
jns
fstps
mov
test
enter
jae
inc
cmp
push
add
dec
xor
stos
dec
pushf
fldt
push
cmp
call
cmpsb
jg
cld
and
pop
jno
jecxz
sub
ljmp
xor
fistpll
scas
add
jmp
jbe
and
int3
icebp
pop
shrl
stc
cmpsl
lret
sarb
fdivrl
sbb
pop
push
popf
movd
fisttps
das
mov
pop
scas
jp
or
in
outsb
mov
or
loopne
insb
push
sahf
cmpsl
sbbb
xor
insb
push
jl
jmp
negl
push
lcall
rclb
jno
cmp
push
daa
out
cmp
cmp
xchg
pusha
mov
jmp
movsb
scas
pop
je
mov
dec
jno
or
mov
inc
sti
lret
in
cmpsl
lods
pop
pop
pop
idivb
mov
jl
mov
push
xchg
add
in
out
and
dec
repz
inc
jmp
shrb
cltd
cwtl
xor
push
mov
dec
sub
rcrl
mov
fwait
or
imul
testb
jnp,pt
inc
pusha
fbstp
in
mov
fadds
orl
daa
fwait
outsb
jge
cmpsb
mov
sbb
push
inc
call
or
orb
loope
shl
adc
xor
sub
sbb
out
mov
sbb
jnp
lret
bnd
xor
mov
in
sti
mov
inc
xchg
inc
mov
push
test
adc
push
mov
jmp
mov
inc
in
ds
pop
jbe
loope
test
stc
jbe
lahf
sub
sub
jae
mov
mov
sub
and
enter
xlat
out
rcr
jbe
sub
jle
xlat
push
into
call
ret
ljmp
xchg
outsb
mul
inc
out
mov
and
push
jp
hlt
mov
lret
adc
and
jnp
cltd
lds
lods
xor
int3
jge
push
call
aad
pop
dec
stc
sbb
clc
sub
sbb
lods
xchg
js
adcl
es
test
sti
jbe
pop
xchg
mov
jmp
mov
outsl
lret
push
lea
cwtl
mov
sbb
nop
push
cmovno
das
pop
push
pop
hlt
jo
pop
testl
out
pop
pop
out
pop
xor
cmp
sbb
je
jmp
dec
outsb
fidivrs
xchg
push
out
push
adc
mov
xchg
adc
pop
push
pushf
fsts
jmp
inc
mov
jmp
nop
dec
aad
dec
add
push
addl
push
jmp
jg
aas
cld
arpl
popf
adc
testl
mov
outsb
icebp
idivb
push
fdivrs
test
push
adc
cmpsl
xchg
add
stos
out
cmp
dec
pop
rolb
enter
syscall
test
dec
xchg
adc
idivl
add
mov
or
rcrb
add
xor
or
cwtl
rcr
push
in
fimuls
addr16
xchg
dec
scas
sub
pusha
insl
sbb
inc
ss
cmp
and
inc
ficoml
sahf
and
testl
iret
inc
addb
insl
dec
jb
mov
lcall
fdivrp
dec
push
dec
xchg
add
or
dec
lods
adc
outsb
xchg
add
ret
pushf
pop
mov
inc
mov
mov
addb
xchg
es
out
subb
je
imul
sub
cmp
int3
or
mov
inc
xor
cmpsl
dec
lods
and
in
mov
fsubrl
mov
xor
daa
dec
lock
pushf
and
pop
das
lock
mov
add
loope
ljmp
lcall
mov
push
jecxz
xor
jno
aas
sbb
arpl
int
loop
fildll
mov
shr
std
inc
cmpsb
xor
and
sti
scas
and
inc
mov
sbb
sub
js
jmp
mov
addb
out
xchg
test
or
fidivl
inc
and
stc
fsub
hlt
mov
xchg
shlb
data16
fbld
sub
loope
push
mov
js
push
bound
fnstenv
jne
ror
ret
sbb
cld
outsb
mov
sub
push
cld
jnp
sbb
enter
nop
mov
dec
fcoml
rcrb
xchg
inc
test
jecxz
mov
mov
fidivs
sub
sbb
loope
or
xchg
repz
sbb
shlb
pushf
paddusw
repz
sub
aad
add
movsl
sub
repz
dec
shrl
cmpsl
cmp
dec
test
je
inc
mov
subb
adc
shll
mov
subl
fldenv
scas
xchg
sti
push
adc
cmp
out
mov
iret
jne
enter
mov
stos
ret
and
mov
push
stc
enter
jmp
dec
mov
vaddsubps
mov
stc
mov
fistps
outsb
mov
mov
ret
ret
ds
cli
push
sub
nop
and
inc
pusha
sbb
jb
out
mov
scas
scas
or
cs
mov
jge
aad
xchg
pop
sbb
sbb
popf
cwtl
popa
jno
not
push
pop
mov
test
in
xchg
jl
les
outsb
push
cmpsb
in
pmaxsw
push
jbe
stc
pop
daa
inc
push
test
xchg
mov
xor
lods
push
dec
mov
inc
sbb
rcl
mov
lock
stc
faddp
jns
lret
push
sbb
push
fiaddl
xchg
jnp
mov
es
inc
repnz
cmpsl
cld
pop
fwait
pusha
lret
jecxz
mov
add
rcl
cmp
mov
enter
jg
fsubl
jnp
jmp
cmc
rorb
or
push
lods
inc
movsb
aaa
and
lods
add
dec
or
sub
js
dec
gs
xor
loopne
xchg
sahf
adc
aas
rcl
lcall
adc
xchg
ja
pop
loop
mov
xor
push
repnz
addr16
je
xlat
jbe
rorb
xor
dec
sbb
and
mov
mov
fildll
pushf
aam
pop
lods
test
nop
cmpb
addr16
mov
mov
mov
cmc
pop
jbe
push
test
jno
dec
idivb
out
repnz
jo
popa
pusha
out
scas
sbb
in
push
mov
mov
hlt
mov
add
mov
pushf
lods
jns
sbb
imul
rcr
mov
ljmp
orl
popa
sti
insb
mov
mov
sub
mov
loop
push
inc
cmp
adc
cmc
push
aas
jbe
mov
push
imull
out
fwait
mov
mov
test
mov
cmpsl
dec
mov
shlb
loop
mov
bound
imul
int
mov
or
xchg
sbb
les
or
sub
jecxz
push
test
es
push
add
pop
pop
dec
pop
outsb
aas
lcall
inc
xor
loopne
jmp
jo
test
xchg
lods
pop
dec
inc
test
dec
popa
sbb
iret
pop
pop
mov
add
jb
popa
jns
push
xchg
push
iret
lods
sbb
xor
sbb
jb
dec
call
cmp
mov
imul
outsb
push
push
nop
adc
loopne
xchg
jo
ss
out
dec
dec
inc
push
ja,pt
outsl
int
bound
inc
or
jp
and
pop
mov
xor
adc
loope
or
push
enter
iret
xchg
pop
sar
mov
mull
ds
clc
add
int
hlt
lahf
imul
hlt
lods
dec
dec
fisttpl
mov
lea
mov
add
in
into
cmp
xor
ds
das
aad
pushf
mul
dec
adc
cmp
jg
call
adc
and
inc
adc
jge
inc
fcmove
pop
adc
jbe
jbe
movsb
in
sub
inc
dec
outsb
sahf
sbb
push
cmpsl
iret
and
add
movsb
out
sub
or
sbb
sub
jmp
cmpsl
cmp
jge
mov
dec
sub
add
ror
loope
popa
pushf
ret
pop
push
mov
cli
sbb
leave
sbb
inc
into
addr16
lcall
jle
mov
jae
outsb
dec
orl
rolb
ja
sti
hlt
dec
fwait
out
mov
arpl
aad
push
push
mov
das
cmp
lret
mov
loop
push
inc
push
lret
hlt
outsb
dec
rcrb
lods
jl
sbb
pop
mov
sub
cmc
sub
jo
fidivl
iret
push
jne
mov
inc
rolb
mov
fidivl
std
int
shlb
mov
xor
rcl
mov
mov
pop
push
cmc
in
cmp
dec
dec
sbb
and
cmp
xchg
or
sbb
stos
xchg
fndisi(8087
mov
push
pop
dec
and
inc
shlb
fs
daa
xor
inc
iret
dec
gs
ds
mov
cmp
xchg
push
cs
subb
xor
leave
push
pop
or
les
jle
xor
inc
out
pushf
and
xor
sbb
sub
cmpxchg
jp
inc
push
test
lcall
stos
jae
sbb
mov
push
arpl
adc
dec
inc
fwait
xchg
adc
arpl
popa
push
loopne
inc
sarb
stos
fstpt
sbb
and
adc
lret
jns,pn
jnp
imul
xor
mov
ficoms
push
add
or
ljmp
into
fadd
ljmp
pop
aam
shrl
cmpsb
xchg
ljmp
inc
mov
mov
iret
and
pushf
pop
dec
cmpsl
mov
out
push
shlb
popa
in
cmovl
push
push
push
into
sarb
jmp
add
mov
into
rclb
popa
mov
mov
push
sub
push
cmc
add
pop
in
xchg
fiaddl
or
mul
sti
pop
fsubr
push
out
mov
or
lds
jne
les
test
arpl
movl
cltd
add
int3
jnp
inc
jno
daa
lret
and
dec
divb
je
mov
lds
inc
test
cmpsl
je
cwtl
sarb
sub
sub
xorl
adc
mov
inc
lea
les
movsl
add
adc
pop
in
or
inc
mov
mov
subb
push
jbe
sub
or
xchg
inc
xchg
jno
and
jo
mulb
loopne
dec
dec
pop
cmp
loop
test
lock
insl
arpl
sub
clc
jp
andb
aas
add
fbld
mov
mull
dec
sbb
das
fst
jb
call
add
fmuls
pusha
jbe
inc
lock
popa
push
in
mov
test
cli
fucom
test
dec
xchg
in
xor
xlat
iret
inc
in
aad
mov
sahf
xor
out
inc
loop
ret
ljmp
ds
sub
stc
adc
mov
nop
xor
inc
stc
pop
fistpll
fnstenv
and
and
testb
js
sub
lock
sbb
mov
pop
or
imul
fsubrl
jae
arpl
push
int
sbb
xchg
pop
sub
lock
aad
jbe
xor
nop
mov
fwait
in
loop
push
and
shlb
imul
cmpsb
fwait
cmp
loop
sub
mov
dec
sbb
jb
les
push
and
popa
shrl
bound
or
loopne
inc
rclb
xor
sub
andl
cmpb
push
xchg
in
rorb
sarb
mov
daa
pusha
stos
loope
cwtl
xchg
jbe
jb
sub
push
xor
pop
fimull
sbb
xchg
jns
dec
add
mov
dec
mov
pop
jo
cmp
loop
cmp
outsb
add
imull
mov
hlt
jmp
add
jno
ret
out
sub
mov
inc
popa
ljmp
imul
push
iret
stos
pop
insl
stc
push
and
dec
cmp
ret
scas
xor
jns
addb
adc
clc
xchg
cmp
xchg
push
push
push
xchg
jge
outsb
movsl
or
mov
xor
inc
pusha
and
dec
fmuls
adc
adc
hlt
imul
decb
insb
imul
mov
mov
and
loop
ret
xchg
and
and
xchg
pop
dec
insl
movsb
or
mov
dec
pushf
rcrb
sub
pop
int3
pop
orb
idiv
sarl
or
jmp
call
adc
in
sbb
cmp
cltd
sbb
in
xorb
lcall
sub
in
ja
or
cmp
stc
in
imul
mov
push
pushf
hlt
xor
add
loope
xchg
mov
addr16
and
or
clc
cmp
fisubrs
adc
mov
mov
scas
iret
push
sub
dec
sub
ss
outsl
mov
sbb
inc
divb
fidivrl
jg
or
or
scas
rcrl
sbb
adc
rol
or
popf
jbe
into
sbb
adc
sbb
pusha
stc
shlb
push
mov
mov
push
inc
pop
mov
test
popf
dec
pop
sub
xor
cmpsb
in
jle
icebp
pop
bnd
sarb
xor
and
dec
pop
and
mov
or
stos
cwtl
mov
inc
jp
mov
push
push
push
lret
call
test
mov
in
out
mov
ss
pop
and
mov
loop
mov
add
mov
xor
jb
pop
in
mov
je
xchg
cmc
jnp
in
cmp
sbb
insb
rcl
push
sub
add
push
pop
sub
and
outsl
adc
dec
mov
lds
and
cmp
scas
inc
les
and
and
not
pop
rolb
cmpsl
push
outsb
popf
cmp
xor
dec
int3
cwtl
push
dec
outsl
pusha
movb
add
dec
aam
xor
arpl
push
xlat
lret
popa
nop
sarb
add
jne
sbb
push
sub
inc
xor
xor
sub
imul
ret
cmpsl
lock
inc
shlb
je
sbbl
sub
jnp
sub
adc
jge
imul
es
adc
arpl
ja
pop
bound
mov
pop
mov
nop
outsb
dec
xchg
sbb
xchg
pop
out
jbe
mov
push
jo
sub
dec
sub
icebp
xchg
stos
inc
and
jg
in
fwait
leave
das
adcb
outsb
adc
pop
xlat
daa
in
and
cmc
jae
xchg
jo
sbb
mov
dec
nop
jmp
lods
or
clc
jecxz
dec
pop
pop
jne
stc
es
push
loope
icebp
mov
and
dec
push
daa
lret
cmp
addl
jb
and
rclb
ljmp
sbb
je
aad
imulb
jmp
test
les
cmp
push
jbe
pushf
push
mov
sarb
xlat
jnp
sub
jnp
arpl
aam
add
pop
fcoml
rcr
sub
rol
testl
je
jne
jne
push
mov
or
sahf
in
push
mov
shlb
adcb
iret
stc
jmp
push
adc
xchg
hlt
cld
adc
loopne
stc
test
fs
mov
xchg
outsb
scas
xor
pop
cld
scas
mov
xchg
jbe
xlat
mov
push
lods
dec
dec
dec
hlt
dec
adc
div
loopne
fnstsw
fcomi
sub
fildll
jbe
add
pop
ficoms
pop
dec
mov
ss
ljmp
repnz
insb
mov
push
imull
cwtl
std
push
in
pop
adcb
cmp
mov
pop
inc
mov
xor
push
imul
cs
sbb
and
outsb
aad
aam
push
xchg
das
dec
sbb
sub
cmp
pop
fidivl
sub
cs
jmp
rolb
ficomps
or
jo
pop
fucomip
mov
sub
xchg
pop
inc
int3
lods
outsl
and
scas
dec
adc
cmpsb
movsb
cwtl
jne
fstps
dec
lahf
pop
add
das
sub
sbb
aaa
or
or
jne
call
sti
lret
adc
test
and
rorb
and
cmp
push
sub
sbbl
aad
adc
mov
push
clc
xor
mov
pop
out
and
jge
cld
xchg
mov
mov
jo
int
iret
in
scas
sbb
adc
pop
cli
jge
enter
inc
pop
fucom
fnstcw
adc
mov
idivl
shr
insb
sbb
mov
jmp
sbb
test
daa
lret
test
mov
test
dec
dec
adc
and
xor
into
or
mov
out
fucom
add
bound
popf
push
pop
xor
fprem1
sarb
stos
lcall
lret
mov
ljmp
xchg
xor
mov
outsb
fdivs
jecxz
dec
mov
je
jbe
jle
xchg
fwait
lahf
stc
shll
sti
rcr
push
pop
jecxz
jg
rorb
fbld
mov
divl
pop
push
xchg
loop
adc
mov
rclb
mov
push
repnz
cltd
pop
jo
mov
outsl
test
xor
mov
adc
outsb
test
lods
shl
mov
dec
divb
das
lock
rorb
mov
in
call
aaa
fs
shlb
jecxz
jb
sub
cmp
add
popa
push
jecxz
jmp
shll
cmpsb
pop
hlt
dec
jne
stos
mov
out
jbe
test
cmp
xor
test
lahf
ret
jecxz
push
mov
mov
xchg
xor
test
xor
xchg
xor
sub
pop
popf
loope
and
dec
lahf
outsb
adc
in
cmc
mov
mov
sbbb
call
xor
repnz
into
xor
ficoms
aas
mov
pusha
scas
cmc
and
sub
push
mov
dec
mov
xor
loop
jbe
ljmp
cmpsl
aam
mul
mov
pmulhuw
sub
mov
rolb
cmpsl
adc
dec
decb
into
fcomi
test
push
fimull
sbb
mov
or
in
xchg
outsb
loope
sub
into
mov
push
in
repz
xchg
into
aad
ret
loope
mov
ss
bound
dec
outsb
cmpsl
sub
pop
stc
je
jb
mov
stos
mov
shrl
adc
jl
jo
dec
xor
out
dec
lahf
xor
aam
cmp
outsl
fnstsw
lock
pop
push
cmpsb
jno
push
outsb
dec
add
lods
pushf
bound
xchg
cmp
in
dec
mov
mov
outsl
cli
jne
mov
mov
mov
ret
xor
roll
in
xchg
ret
adc
fidivl
ja
aaa
imul
push
pop
jmp
aad
aad
sbb
call
aas
outsl
insl
push
push
inc
test
sub
sbb
sub
pop
inc
es
inc
xor
push
jp
hlt
sti
xchg
in
adc
ja
jge
rcrl
push
dec
rcll
push
test
std
arpl
add
pop
nop
adc
in
mov
add
js
adc
mov
dec
lcall
int3
xor
out
push
jmp
jbe
ljmp
xor
cli
repz
pop
cmc
imul
clc
cmc
jg
outsb
and
lret
cmp
movsb
imul
cmp
cs
fnstenv
arpl
mov
sbb
dec
cmp
pop
arpl
movsb
pop
sahf
stos
sub
outsb
cmp
xchg
lods
jnp
add
jns
pushf
lcall
fmul
nop
pop
aam
mov
adc
lcall
rclb
sahf
jne
cs
lahf
fsubl
inc
sahf
inc
push
push
outsb
lret
inc
stc
lahf
push
rcrb
int3
jae
add
sbb
and
in
lcall
je
fcompl
negl
fnstenv
cmovae
out
jmp
cmp
dec
xchg
cmc
jp
fisttps
inc
test
paddusb
sub
inc
cmc
negb
scas
je
push
mov
lret
push
shrb
add
iret
cmpsb
mov
test
push
outsb
decl
es
mov
in
jnp
mov
push
fsubl
pushf
in
mov
pop
divl
jns
inc
jge
lods
das
nop
adc
lret
mov
stos
int
xchg
or
enter
mov
call
ss
insb
popa
arpl
loope
nop
inc
out
jp
mov
movsb
adc
into
out
pop
push
xchg
cmpsl
lret
roll
and
jno
xor
mov
cmp
jns
sar
out
jbe
clc
das
enter
sub
inc
dec
scas
and
cmp
dec
lcall
fcmovnbe
imul
jb
idivb
jle
add
orl
stc
in
pop
leave
repnz
inc
test
mov
cld
fimull
sub
loope
gs
in
es
inc
shrl
adc
daa
repz
out
xor
push
inc
arpl
jno
sbb
cs
sarb
cmp
xor
sbb
add
jecxz
add
push
adcb
xor
mov
cmp
jl
ffree
loope
xchg
xor
mov
xor
lcall
les
sub
aaa
call
into
jne
loope
fwait
inc
int
cmp
addl
insl
sbb
addr16
cmp
fbld
pop
adc
insl
xlat
popf
rolb
test
mov
stos
mov
cmpsl
je
iret
hlt
movsl
and
dec
imul
sbb
loop
insb
adc
jbe
shlb
mov
cli
mov
cmpsl
outsb
inc
decl
mov
pop
sbb
jle
adc
mov
or
int3
outsb
int
dec
pushf
adc
popa
mov
dec
or
mov
xor
or
sbb
jb
rolb
inc
cmpsb
in
adc
sti
aas
shrb
pusha
jmp
xor
jb
idivl
aam
and
daa
cmpsb
push
inc
arpl
push
inc
mov
jg
xchg
cmp
shrb
inc
cs
mov
jno
add
mov
jnp
or
inc
jbe
and
or
jge
imul
push
xor
dec
cmpb
shrb
inc
imul
out
rcl
ss
sar
hlt
aad
push
mull
outsb
add
iret
jg
lcall
rcrl
loopne
mov
mov
jo
and
imul
sbb
mov
and
idivb
ret
xchg
iret
ror
test
mov
sub
adc
mov
mov
jp
sahf
in
fwait
aam
pushf
push
stos
add
push
iret
outsl
rcll
fbld
xlat
mov
scas
popf
ds
and
out
outsb
aas
ret
dec
ljmp
sub
jecxz
jl
dec
sbbb
mov
jmp
jnp
imul
mov
subb
into
push
mov
adc
xchg
mov
xor
push
pop
aam
call
fidivrl
cwtl
lret
dec
pop
shrl
addb
dec
xor
cwtl
or
lcall
negl
fwait
dec
ret
pop
ljmp
iret
bound
les
sbb
cmp
inc
pop
inc
xchg
out
fstps
mov
jbe
and
mov
std
dec
xor
lahf
mov
sub
inc
int
add
dec
jno
cltd
imul
lock
and
lret
iret
push
lock
jbe
ret
pop
cmovae
stos
enter
hlt
mov
imull
mov
cld
or
and
cltd
cmp
push
pop
mov
sub
mov
stc
das
adc
in
cmp
mov
jecxz
jbe
inc
repz
movsb
fwait
and
mov
and
imul
jmp
mov
xor
xchg
ret
mov
sbb
push
stos
xor
pushf
mov
in
pop
repnz
xor
jb
js
and
mov
addb
xchg
mov
and
mov
outsl
lds
repnz
mov
sub
push
jbe
jno
jge
stos
or
mov
mov
mov
push
cmpsl
int
xchg
pop
jbe
or
jb
dec
pusha
jge
scas
push
mov
aad
mov
nop
and
mov
push
movl
stc
movsl
test
mov
and
sub
inc
loopne
cs
movsb
nop
jle
cmc
mov
or
mov
cmpb
aad
movl
test
shlb
imul
jb
xlat
sub
xor
jno
push
ffreep
pusha
hlt
add
outsb
mov
xor
popf
std
mov
bound
pop
adc
xor
inc
or
mov
enter
mov
or
push
mov
push
jae
lret
inc
call
in
in
rorb
int
mov
lahf
mov
add
enter
call
mov
mov
pop
xchg
pop
mov
inc
arpl
jae
test
sti
fcomip
mov
sbb
adc
stc
das
cltd
loope
in
cmp
jecxz
xor
sub
jne
imul
jno
out
and
xor
iret
cmp
test
arpl
hlt
sar
sub
icebp
lds
pop
mov
adc
cs
mov
dec
insl
xadd
scas
arpl
daa
int3
shrb
mov
movsb
xor
hlt
jle
int3
sub
mov
pop
and
in
fsub
dec
fwait
cltd
mov
outsb
loopne
dec
fildll
sbb
adc
xchg
jmp
push
sbb
rorb
aam
mov
jmp
cmp
es
sub
aad
inc
popa
movsb
rclb
sub
jecxz
outsb
stos
jmp
std
cmp
inc
in
xchg
and
insb
orb
fistl
stos
imul
cmp
mov
xor
inc
sbb
xchg
jne
mov
in
stos
lods
push
inc
nop
aam
sub
bound
lods
cld
aaa
jno
jae
xor
popf
xchg
or
pop
jle
pop
stos
sub
hlt
testb
fistps
sbb
jmp
fbld
jno
add
sub
cmp
mov
bound
test
daa
dec
rolb
sbb
and
ds
call
and
insl
int
hlt
mov
mov
mov
nop
dec
rcrb
orb
lods
pop
cmpsb
dec
rcrl
mov
add
sub
outsb
add
mov
sub
and
outsb
je
mov
xor
sbb
push
cmp
insb
and
sbb
jno
loopne
xor
push
ja
out
cli
pop
or
rcrl
bound
and
fistpll
ror
mov
inc
ja
shrb
je
pop
arpl
inc
loope
adc
stc
dec
repnz
movsb
ss
fsub
ljmp
xchg
rol
inc
sub
pop
add
out
fldz
xor
subb
jne
sub
cmc
dec
mov
push
fldcw
bound
jb
push
not
in
out
dec
pop
inc
lahf
test
inc
jb
pop
jb
mov
add
jns
sbb
mov
shrb
mov
lods
cltd
jecxz
stc
insb
subb
jne
ljmp
loop
or
jecxz
mov
mov
fiaddl
cmpsb
pinsrw
test
and
and
scas
sti
test
dec
cmpsb
int3
sub
jmp
fxam
jg
int
mov
cmp
pop
push
cmp
fstpl
stos
loop
jg
mov
out
mov
xchg
inc
jmp
lahf
and
sbb
ljmp
test
or
sahf
aad
xlat
and
inc
int3
outsb
rol
pop
add
dec
loope
xchg
and
or
rcrl
rcl
xchg
xor
jbe
jno
sub
sbb
sbb
lcall
shlb
cli
pop
shrb
divl
jbe
nop
cmpsb
icebp
addr16
stc
xor
stos
xor
xchg
and
or
in
inc
inc
push
dec
mov
in
xor
dec
cmc
inc
icebp
jae
xchg
stos
mov
add
in
je
cli
repz
lahf
adc
push
in
iret
into
mov
outsb
mov
pop
lret
js
mov
test
sub
jne
or
scas
xchg
les
jmp
idivb
or
mov
lret
xchg
add
test
push
in
push
push
stos
pusha
push
aam
sbb
cmp
fldenv
xchg
mov
sub
sbb
sbb
iret
subb
hlt
sub
testl
loop
pop
pop
and
jb
outsb
fdivrl
xchg
stc
pop
sbb
rcrb
in
xchg
sub
fcoml
push
scas
out
movsb
push
add
jecxz
cmp
jnp
pop
das
mov
mov
jmp
inc
addb
add
ret
popf
outsl
test
mov
adc
sub
push
int3
mov
call
add
sub
sti
xchg
mov
or
xor
sarl
cmp
lods
mov
je
jle
adc
pusha
fbld
pushf
out
pop
sbb
aam
mov
xor
ds
mov
lcall
mov
mov
adc
sbb
and
and
mov
ja
jl
push
popf
cmp
sbb
and
pop
xchg
pop
add
or
inc
adc
sub
jno
adc
cmp
outsb
cmp
je
inc
mov
mov
fwait
sbbb
mov
call
inc
test
pop
aaa
loop
or
rorl
ret
or
das
cmp
push
adc
or
mov
sbb
in
cmc
addr16
push
dec
mov
pop
push
cwtl
cltd
and
jbe
jae
inc
aam
outsb
aam
xor
ret
xchg
ds
in
aam
push
test
pop
adc
test
ss
push
lea
shll
out
popa
push
ja
pusha
add
repz
jg
push
std
mov
pop
dec
xor
cmp
inc
inc
outsl
jl
push
sbb
xor
fwait
xor
popf
in
lock
lahf
mov
inc
cmp
adcl
jb
jmp
in
and
stc
jbe
bound
jge
mov
out
imul
sub
add
loop
loope
dec
aaa
mov
cmc
or
pop
push
arpl
call
xorb
sub
loope
jmp
push
shlb
movsb
in
lahf
inc
or
pop
xchg
push
addb
jmp
rcr
xchg
es
jae
or
call
push
insl
test
and
test
fiaddl
nop
movsl
jecxz
push
lods
sbb
sahf
movsl
ret
xchg
lea
add
cltd
out
stos
and
and
xchg
lods
outsl
dec
xor
aad
sbb
add
cmp
push
iret
xchg
jbe
xchg
inc
lret
rclb
cmpsl
mov
adc
pop
mov
sti
xor
mov
inc
cmpsl
or
push
xor
inc
cli
stos
jno
add
xchg
push
hlt
push
push
insl
sbb
lcall
mov
pop
inc
cs
test
ja
stos
lret
cmp
adc
cmpsl
mov
and
jbe
pushf
cmp
insb
inc
dec
in
adc
mov
out
popa
adc
jmp
bnd
repz
inc
dec
cltd
enter
aad
jp
out
push
mov
aaa
xor
pop
add
lret
inc
add
imulb
mov
xchg
lret
inc
imul
jbe
aad
movsl
call
and
xor
mov
addr16
shlb
cmc
and
push
test
jb
xchg
lock
loopne
les
add
rcrb
sub
push
pop
sub
mov
mov
add
sarb
mov
shlb
pop
lods
gs
jnp
int3
insb
ret
movsb
gs
xchg
outsb
push
cmc
inc
push
mov
xor
mov
sub
sub
sbb
jae
mov
adc
mov
cmpsl
rclb
loopne
xchg
ret
sub
adc
cmc
jae
jbe
mov
push
ret
popf
mov
xchg
lods
fiadds
or
out
adc
jmp
xor
bound
bound
fwait
add
jg
jmp
popf
pop
negl
ficomps
jae
das
mov
sarb
enter
stos
movsb
dec
xchg
ljmp
shl
das
outsb
js
cmp
mov
mov
push
sub
iret
jns
cs
cmp
and
xchg
mov
aaa
mov
inc
xchg
push
sub
lcall
aas
adc
mov
or
test
or
push
mov
add
sub
pop
adc
push
fcompl
rorl
fistl
mov
scas
repz
jbe
bound
mov
out
push
aaa
cmc
cmpsb
and
cmc
movsl
inc
ror
mov
repnz
xchg
and
or
mov
fldt
mov
stos
push
jbe
icebp
hlt
jmp
add
xor
push
add
mov
dec
lahf
je
movsl
test
pop
loope
inc
or
pop
xor
movl
fisttpl
adc
das
mov
push
and
push
out
push
shr
push
loop
jne
aad
dec
enter
xchg
shlb
mov
leave
cmc
add
cmpsl
addl
outsb
lret
xchg
cli
pusha
cwtl
aam
lods
dec
outsb
fwait
add
test
mov
jbe
addb
push
imul
outsb
inc
psubw
push
xchg
mov
aas
adc
int
leave
cli
sub
nop
out
fucomip
in
sub
or
lods
outsb
data16
lods
adc
loop
fcoml
inc
mov
enter
sbb
nop
and
stos
dec
cmc
xchg
fwait
mov
push
mov
push
add
pusha
cwtl
dec
std
pop
mov
rcr
xor
lahf
sub
stc
cmc
loop
jle
sarb
dec
dec
fidivrl
out
insb
repnz
outsl
les
xchg
not
lret
test
data16
outsb
jmp
adcb
nop
jno
int
add
stc
movsb
mov
push
loopne
and
ja
lret
fwait
test
in
inc
stc
rclb
aaa
push
cmp
insb
pslld
sub
or
divl
test
push
adc
jns
mov
dec
outsb
bound
scas
ret
xchg
imul
neg
sysret
fisttpl
jbe
movsb
nop
ja
es
outsb
mov
inc
and
add
sub
sbb
pop
inc
push
fsub
rcl
negl
mov
cmc
div
fisubrs
imul
push
mov
faddl
or
and
mov
test
ret
mov
pop
es
je
shl
and
xor
cmp
mov
add
nop
out
rol
or
repz
xchg
addb
cmp
aaa
mov
inc
inc
fbstp
outsb
xchg
or
dec
cmc
neg
cli
mov
xchg
push
ljmp
mov
push
enter
dec
pop
dec
dec
inc
or
pusha
ret
rorw
out
mov
insb
stos
pop
xor
testb
daa
mov
cmc
push
outsb
int
pushf
push
pushf
fcmovnbe
test
or
cmp
hlt
or
ljmp
dec
jecxz
push
pop
loopne
insb
arpl
push
dec
xor
pop
push
shll
jecxz
faddl
pop
inc
mov
sub
in
pop
stc
fists
sub
js
jno
insl
sub
insb
stos
jp
jnp
pop
and
jb
mov
lods
js
popa
mov
xchg
rolb
sub
mov
scas
pop
or
pop
cmc
mov
jb
and
fwait
inc
mov
in
shlb
xchg
popf
jnp
jmp
negb
sahf
mov
xor
shll
push
ret
cmp
imul
jmp
fisubrs
and
fwait
sbb
test
imul
sti
scas
or
pop
and
loopne
sti
loop
into
test
int3
inc
rolb
inc
out
mov
sbb
adc
and
xor
fildll
and
cmp
lds
in
adc
cmp
dec
mov
mov
enter
pop
and
pop
xor
and
in
inc
out
sub
pop
xchg
xchg
outsb
xchg
inc
fists
sub
faddl
pop
sub
test
bound
test
sbb
test
out
and
hlt
xchg
or
inc
in
das
repnz
push
int
and
test
data16
dec
fbld
sahf
inc
inc
je
jb
mov
fistps
nop
jmp
pop
invd
lahf
xor
enter
add
or
jns
dec
add
mov
and
mov
lret
sub
jmp
lcall
cld
jle
cmp
add
lods
or
aam
cmp
mov
pop
adc
and
xor
mov
add
movb
dec
inc
mov
data16
negl
bound
movsb
mov
xchg
int
pop
or
jno
jg
pusha
dec
lds
fsubs
push
in
sub
adc
hlt
cltd
pop
test
ss
jae
cmp
test
roll
repz
data16
mov
sbb
int
mov
shrb
mov
rolb
repz
cli
and
ret
mull
jbe
cmp
sbb
mov
pop
mov
jbe
xor
movsb
lcall
inc
shlb
rcrb
xlat
fstpt
xchg
loopne
cmp
insl
mov
lds
ss
outsl
movsb
xchg
nop
cmp
jp
add
xchg
dec
into
sbb
loopne
icebp
pop
and
call
sub
push
add
stos
xor
xor
push
shufps
in
fwait
aas
nop
lret
sub
xchg
fs
dec
divl
rolb
push
insb
cmc
ror
outsb
adc
sbb
push
and
les
jne
movsb
inc
rcrb
addr16
mov
sti
sbb
mov
lods
negb
lret
xchg
and
lea
int3
cmc
add
je
outsb
xchg
rcll
inc
sub
jle
inc
insl
lods
inc
fists
dec
popa
nop
imul
nop
loopne
pop
sbb
stos
xor
sbb
mov
mov
sbb
arpl
gs
inc
ss
inc
mov
sub
xchg
repz
stos
jge
loop
addr16
push
push
or
stos
and
je
lahf
incl
lock
shl
pop
pushl
jae
rcr
jmp
mov
mov
fldcw
int3
inc
and
push
jecxz
jnp
shlb
outsl
outsb
xor
dec
and
mov
testl
fwait
dec
popl
ja
scas
xor
std
scas
filds
hlt
addr16
push
dec
jl
fdivl
cmp
stos
daa
cmpsb
int
mov
jne
mov
lahf
mov
ja
stc
fcoms
nop
xor
inc
jb
mov
add
mov
data16
int3
sbb
add
sub
sbb
mov
cmp
jb,pt
bound
rolb
sub
inc
push
nop
ret
shlb
das
lock
fldln2
in
aas
daa
jmp
dec
int
rep
out
mov
ds
repnz
sbb
mov
xor
jmp
loopne
cmc
lahf
and
cli
xor
movsb
adc
lret
lods
aaa
int
adc
roll
pusha
push
or
ljmp
lods
enter
add
bound
call
popa
xchg
bound
sub
ret
cmpsb
sub
inc
outsb
cmpsl
xchg
dec
jl
add
enter
int
push
not
push
push
mov
cwtl
fmul
loopne
jbe
mov
adc
pop
icebp
iret
movsb
dec
dec
rcr
mov
mov
dec
push
call
aas
nop
adcl
adcb
imul
aaa
jmp
xor
cmpsl
xchg
and
mov
outsb
and
test
subb
prefetch
outsb
dec
fcmove
mov
push
js
adc
lahf
sahf
into
cmpsb
lock
cld
add
das
popa
ja
sbbb
mov
mov
jb
inc
in
cmp
popa
sti
imul
addb
jns
mov
mov
popf
cmp
in
lods
dec
sub
loope
inc
shrb
sbb
ja
shrb
pop
add
and
inc
mov
xor
dec
std
sub
xchg
cmc
iret
jo
leave
mov
clc
pop
shl
into
cmpsb
sti
or
imulb
test
std
cltd
dec
lods
fsts
imul
push
fisttpll
push
add
push
or
repnz
test
out
cmp
neg
test
insb
idivl
sarb
mov
lret
add
cwtl
les
xchg
popf
fwait
push
lcall
fnstenv
jmp
add
cld
xchg
push
out
lret
addl
dec
inc
mov
xchg
mov
ffree
xchg
dec
or
push
push
jbe
fwait
inc
dec
scas
enter
sub
and
adc
ljmp
mov
adc
add
lret
xorb
or
loope
dec
add
pop
push
pop
jbe
pusha
xlat
xor
sbb
mov
push
xor
subb
pop
xchg
int
testl
lods
decb
stos
shlb
movnti
loop
pop
push
mov
push
and
ja
into
mov
ljmp
inc
sub
mov
jg
mov
outsb
pop
inc
movsl
inc
fdivrs
jge
repnz
xor
add
jo
rclb
sahf
outsb
addr16
sbb
add
xchg
push
loopne
sub
adc
xlat
movsl
cwtl
insb
rclb
or
mov
jo
push
jnp
adc
ljmp
pop
aas
push
push
xor
add
movsl
dec
sahf
scas
inc
sti
sub
xchg
mov
inc
stos
daa
sarb
into
and
daa
and
pop
lret
inc
cld
out
jb
ja
sti
mov
test
push
icebp
sbb
pop
repz
stos
mov
and
sub
sbb
pop
aad
pop
orb
in
xchg
jmp
ds
outsb
icebp
adc
ss
mov
mov
sarl
loopne
shlb
push
pop
push
clc
dec
outsb
pop
dec
inc
repnz
mov
and
or
je
adc
loopne
xor
mov
nop
jbe
lea
xor
xor
les
pop
inc
cld
sub
push
or
cld
scas
test
ficompl
scas
pop
jnp
sub
ss
or
in
sub
hlt
outsl
xor
cmp
sti
mov
and
rclb
enter
orb
xor
push
addb
sti
fidivrs
imul
imulb
xor
mov
add
lahf
inc
pop
fwait
mov
pop
out
dec
or
pusha
mov
xlat
xor
int3
mulb
cmpl
fsubr
enter
ds
hlt
xor
inc
mov
sbb
shll
jmp
inc
mov
ret
xor
in
das
or
mov
shrb
mov
xchg
outsb
lods
xor
loope
push
int3
popa
fs
and
not
pop
outsb
jb
jbe
js
mov
jnp
xchg
mov
pushf
jne
das
lock
nop
subb
mov
sahf
push
push
mov
dec
xchg
negb
push
jmp
loope
imul
cli
or
pop
cmpsl
stos
cltd
pop
loope
outsb
psubusb
add
fisubrs
jp
mov
jecxz
push
dec
ds
xchg
imul
pop
andb
cmp
in
inc
or
fstps
test
pop
mov
mov
int
adc
lds
js
add
insb
xor
dec
push
out
mov
xor
into
outsl
mov
xchg
loop
bound
insb
add
cmpsl
lret
push
mov
rclb
loope
add
xchg
pop
xor
rclb
ds
stc
aas
push
xchg
negl
mov
icebp
jp
out
sar
jno
cmpsb
outsb
clc
mov
jae
mov
aad
in
xchg
jp
push
jnp
in
mov
cmpsl
dec
out
ret
push
inc
xchg
mov
push
and
repz
dec
ljmp
popf
in
aam
aad
xor
hlt
cmp
cmp
lret
mov
sbb
pushf
mov
mov
lds
cli
aas
shlb
mov
loopne
fcmovnu
push
cmp
rol
imul
mov
test
ret
push
stos
pop
xor
inc
adcb
cld
je,pn
dec
ret
xor
xor
adc
cmpb
jl
adc
or
fiadds
test
mov
das
rorb
inc
push
mov
xchg
dec
stos
sbb
inc
or
cmpsb
in
sbb
pop
popa
add
nop
enter
pop
jns
iret
inc
enter
inc
loopne
push
xor
mov
loope
and
sbb
test
push
and
nop
bound
sbb
in
adc
pusha
ds
std
xchg
jecxz
or
push
cmp
into
mov
test
adc
xor
fcomps
mov
mov
repnz
scas
inc
inc
push
mov
rcrb
cmpsl
fiaddl
xchg
les
icebp
out
rcrl
divl
subb
int3
mov
pop
imul
sbb
loop
orb
out
sbb
lcall
jle
jbe
outsl
addl
sbb
aam
ret
in
add
ljmp
or
in
test
sti
pusha
xor
sbb
push
cli
aam
movb
adc
sub
out
cmc
sarb
call
push
int
hlt
add
xor
mov
pop
sarb
adc
gs
fbstp
pop
xchg
mov
adc
mov
cmp
dec
push
sub
xor
popl
lea
inc
mov
shll
shll
cmc
mov
pop
add
jo
cmp
mov
xorb
push
repnz
jnp
imul
jmp
sahf
push
push
or
inc
repz
gs
test
inc
xor
mov
scas
lock
loop
daa
lods
adc
xlat
dec
sub
jnp
fcomip
add
test
jmp
iret
sbb
add
pop
ret
inc
dec
repz
push
cmp
sub
push
sarb
scas
mov
sahf
push
sub
inc
sbb
sub
bt
ret
lcall
loop
inc
sub
testl
push
xor
push
daa
cmpb
ljmp
lahf
aam
mov
pop
ss
dec
cmc
stos
add
jbe
add
mov
sub
std
call
inc
int3
shr
sbb
xchg
out
out
add
sub
jg,pn
out
jae
and
dec
dec
cmpsb
jmp
mov
jge
sbb
mov
jge
popa
cmc
add
sbb
outsb
ret
out
mov
and
ret
jo
in
mov
jmp
shl
shlb
cmp
dec
call
ljmp
xor
xchg
mov
js
sbb
loopne
bound
mov
hlt
inc
ds
mov
mov
push
and
in
outsb
imul
in
aad
fisubs
ja
arpl
sti
js
into
dec
ficompl
lds
mov
ret
xor
ja
sbb
pop
mov
in
xchg
mov
jb
mov
dec
scas
jnp
into
stos
sub
pop
lret
lret
into
mov
xchg
add
jns
nop
subb
nop
mov
insl
xor
xchg
fstpt
pusha
mov
mov
shr
dec
enter
pmaxub
daa
and
and
inc
xchg
ljmp
dec
jecxz
push
repnz
and
mov
inc
mov
jbe
lret
pop
enter
je
in
jge
pop
mov
outsb
sbb
push
dec
mov
ror
nop
stos
ljmp
repnz
lcall
push
mov
cmp
inc
push
cmp
push
xchg
pusha
pop
add
mov
int
jp
call
push
out
out
pushf
mov
inc
insb
adcl
jno
sub
cs
lahf
mov
sub
mov
xchg
xlat
or
shlb
push
addr16
xor
push
mov
std
push
cmpsl
into
push
repz
jae
cmp
push
ds
add
outsb
cmp
xchg
dec
pushf
call
mov
push
pusha
sub
negl
in
push
in
js
outsb
jp
mov
mov
pop
push
in
iret
xchg
int
add
sbb
pop
pop
sbbb
mov
ljmp
pop
outsb
xchg
or
jne
and
addr16
loop
jno
fstl
sub
push
sbb
outsl
in
pop
bts
mov
mov
in
jo
jbe
mov
or
mov
pop
cmc
or
testl
jae
insl
repz
adc
push
add
xor
out
inc
mov
dec
jae
fsubs
decl
mov
xchg
fcomip
popa
xor
rclb
aam
icebp
inc
lea
xchg
mov
sarl
rorl
add
pusha
ljmp
test
add
and
jg
cmc
adc
addr16
lcall
or
cs
jbe
inc
cwtl
cmp
lret
jno
mov
xchg
fstl
or
push
jb
ficoml
into
mov
push
leave
cli
pop
ds
mov
sbb
xchg
dec
mov
mov
push
jbe
xor
inc
cmp
scas
sbb
xchg
mov
mov
jns
sbb
sub
jno
sub
arpl
subl
adc
add
dec
inc
jae
adc
add
orl
shl
sub
or
fisubrs
jl
in
pushf
add
fcoms
stos
mov
outsb
mov
loopne
testl
push
and
mov
and
xchg
inc
test
xchg
mov
out
and
into
mov
jno
xchg
dec
xchg
add
rclb
leave
in
jo
ss
mov
dec
xor
sbb
push
outsb
jnp
or
das
or
movsb
push
outsb
xlat
cmpsl
sub
ret
or
int3
fld
xor
loop
jne
jge
xchg
xor
andb
in
xchg
inc
arpl
cmp
jo
dec
pop
inc
insb
push
aaa
stos
in
push
cmp
insb
andl
and
js
mov
and
fisubl
jecxz
insb
iret
jbe
pop
sbb
imul
mov
mov
sar
imul
cli
mov
push
jnp
mov
shll
std
adc
add
ffreep
scas
add
jg
gs
mulb
mov
shrl
sub
xor
xor
mov
in
fildll
mov
jno
xor
xchg
mov
pop
pop
pop
xchg
movsl
add
fbld
pushf
roll
xchg
jo
vpshufhw
je
inc
ficompl
xchg
sub
sbb
pop
inc
repnz
stos
fcomps
inc
les
lahf
jae
jb
jns
aad
outsb
lret
pop
fsubs
jmp
add
bound
jecxz
scas
inc
pop
clc
jbe
ljmp
lcall
popa
lret
je
add
out
inc
adcb
pusha
ror
dec
sarb
push
bound
sbb
xchg
cmpsb
dec
push
xchg
jne
adc
jle
xlat
xchg
outsb
inc
adc
fisttpll
adc
push
and
inc
dec
mov
xor
inc
andl
gs
cmpsb
ljmp
mov
fwait
sub
sub
popa
fsub
cmp
and
icebp
adc
dec
cmpsb
arpl
imul
sahf
mov
mov
pop
mov
stc
ss
pop
popa
in
addb
mov
mov
inc
add
pop
jns
mov
iret
dec
outsb
bound
add
xlat
icebp
and
push
sub
pop
daa
jno
push
fisubl
sbb
pop
cli
cmpsl
mov
mov
jle
ds
les
insb
nop
popa
push
and
fsubrl
xchg
sti
sub
rorb
lock
cld
fidivrs
test
push
inc
jle
daa
cld
xor
sub
outsb
xchg
mov
push
addr16
sbb
rcrl
loope
add
rorb
ja
inc
sbb
dec
int
jmp
or
rcr
sub
cmovl
pop
in
pop
cmc
movsb
ja
mov
jno
insb
test
mov
and
leave
sub
insl
es
mov
fstl
int3
fldenv
test
xchg
mov
mov
lret
pop
inc
cwtl
push
xchg
pop
je
fst
imul
or
push
inc
cltd
jns
cwtl
dec
mov
fidivl
in
mov
stos
add
jbe
add
enter
stc
roll
fbld
cmc
iret
jns
inc
push
pcmpgtd
mov
loope
cmp
outsb
loope
mov
stos
cli
push
mov
clc
adc
fwait
out
sub
lea
rorb
jbe
jo
inc
inc
outsb
mov
xorb
aam
lods
nop
popa
jle
leave
cmp
bound
pop
sbb
subl
aad
or
adc
adc
pop
and
xacquire
in
pop
imul
movsb
jle
icebp
jno
jmp
pop
push
inc
mov
xor
push
enter
outsb
pop
int3
lock
jbe
stos
addr16
jge
mov
repnz
in
xchg
mov
push
xchg
sbb
jbe
adc
xchg
sahf
enter
add
push
sahf
dec
fistpl
loopne
sub
lahf
mov
inc
cltd
movsb
cmp
mov
aad
push
push
push
lea
imul
mov
pushl
test
xor
imul
orb
enter
jmp
pop
stos
out
stos
dec
nop
mov
sub
cmc
imul
outsl
inc
pushf
test
jp
and
sub
fidivs
push
aas
in
xchg
push
mov
cmp
jg
les
movsb
sbb
bound
adcb
fsubl
cmpsl
loop
jle
xchg
push
jp
inc
jbe
gs
repz
mov
add
and
hlt
sub
jle
test
mov
bound
sbb
lret
xor
ljmp
loope
cmp
ja
es
setle
jecxz
iret
pushf
cmc
lret
jb
loope
jbe
aas
push
jle
into
push
mov
sub
rcrl
dec
ret
das
pop
mov
dec
outsb
or
testb
or
fidivrs
and
shrb
outsb
jae
es
cmp
xchg
mov
es
pop
mov
jnp
loop
outsb
sbbl
addr16
and
mov
or
jne
mov
xchg
mov
daa
out
rolb
jmp
mov
sub
imul
insb
lret
push
aad
sbb
cmpsb
aaa
out
hlt
jbe
mov
push
xchg
or
int3
jecxz
jbe
cld
ret
fiaddl
xchg
cmc
pushf
pop
neg
ss
lcall
mov
loope
ja
or
aam
sbb
mov
push
mov
movsl
loop
xor
cwtl
push
ja
imul
cmp
xor
outsb
inc
es
fsubrl
mov
mov
mov
push
add
dec
jnp
fnstsw
xchg
ljmp
lods
daa
xchg
and
jo
movl
fwait
dec
stos
fs
inc
arpl
mov
ljmp
push
adc
insl
shrb
in
cld
xchg
das
call
adcl
hlt
or
scas
rol
enter
fidivl
mov
sub
popa
mov
inc
or
lods
test
lods
cmc
rclb
cvtpi2ps
cmpb
test
cmp
cmc
lret
inc
frstor
push
mov
shlb
jnp
rolb
add
je
orb
leave
ret
mov
addl
dec
lahf
inc
jb
jns
incl
int
dec
js
ljmp
aad
inc
adc
jecxz
enter
mov
xor
out
cmp
push
cmc
shrl
fistps
pop
lret
in
divb
jl
xchg
dec
push
dec
outsb
push
sbb
add
xor
std
jbe
aad
jge
dec
or
pop
mov
lcall
adc
cld
fidivrl
cmp
in
dec
jae
xlat
cmp
sbb
pop
push
or
sub
xor
cmc
xchg
sbb
cmp
push
jmp
push
cs
mov
inc
sbb
xchg
or
scas
shr
cmpsl
and
adc
or
cmpsl
add
test
mov
push
push
ja
xor
dec
insb
mov
imul
iret
jmp
lods
lods
jge
dec
fmulp
xchg
incl
loope
push
xor
std
sarb
mov
inc
jg
clc
cmp
flds
ret
and
pushf
push
out
inc
popa
mov
and
in
fsubrs
insw
insb
test
adc
cltd
cmc
aad
adc
inc
loope
mov
xchg
and
add
cmpsb
cmpb
and
inc
aas
into
testb
add
inc
imul
loopne
lods
push
push
mov
sub
in
aam
lret
dec
xchg
cmc
stos
rol
loope
jbe
adc
rcl
mov
and
cmp
xor
mov
ret
sbb
xor
cs
inc
in
js
popa
pop
or
pop
xor
stc
push
loop
push
mov
rcrb
icebp
test
stos
sahf
int
stc
pop
aaa
loope
mov
repnz
push
mov
scas
pop
and
push
popa
adc
ret
cmc
mov
inc
fldenv
dec
pop
adc
add
cmp
addr16
repnz
mov
arpl
and
sbb
outsb
inc
inc
push
test
popa
xchg
pop
fildll
and
jb
pop
sbb
stos
mov
shrb
xor
outsb
ss
jne
sbb
dec
pop
adc
out
sub
pusha
lock
repnz
xor
inc
cmp
fisubl
jbe
aam
adc
rcrb
push
pop
pushl
ficoml
repz
les
cmp
pop
nop
pop
imul
int3
lds
inc
jmp
add
inc
dec
mov
test
popa
push
xor
push
daa
imul
pop
add
movsb
mov
jae
lods
insl
js
xor
sbb
lock
and
cmp
bnd
cmp
mov
cwtl
test
mov
imul
stos
cmpsl
jne
or
jbe
mov
push
insl
jp
cmp
loop
popa
pop
das
sbb
sub
pop
fidivl
inc
add
es
sti
in
mov
xchg
mov
mov
test
mov
loope
push
scas
imulb
hlt
das
jne
enter
nop
mov
hlt
dec
ds
jno
inc
inc
adc
inc
loope
int
movsl
pop
dec
cmp
loopne
cmovns
adc
inc
add
fstl
out
xchg
and
add
in
arpl
stc
lea
add
push
jbe
adc
cmc
adc
jecxz
mov
testb
mov
pop
stc
add
out
insl
mov
rorb
sahf
test
mov
cltd
push
xor
add
jnp
call
jp
negl
sub
xor
add
jae
mov
in
out
or
xor
loope
cmp
mov
mov
adc
add
sub
bound
fcomps
dec
imul
xchg
dec
int
mov
mov
cwtl
out
jbe
fwait
aas
xor
push
stos
push
loop
aad
sarl
mov
out
mov
sub
stos
sub
jne
das
and
enter
test
push
mov
mov
shll
jg
xchg
jbe
pop
xor
mov
inc
inc
xor
ja
sbb
shrb
ds
cli
fists
fmuls
sbbl
insb
inc
outsb
dec
inc
or
mov
es
pop
sbb
outsb
cmp
shrb
arpl
inc
mov
out
mov
xchg
leave
push
add
cld
sti
push
testl
sub
push
ss
repnz
or
jb
mov
into
sbb
sbb
jl
test
inc
mov
addb
popa
and
lods
add
push
sub
loope
imul
std
lahf
hlt
lods
test
cmp
cmp
pop
mov
popa
adc
rorb
adc
push
lahf
dec
lret
jnp
sbb
sbb
cmp
fldcw
lcall
fstl
stos
popf
sti
mov
outsb
pop
mov
adc
nop
das
sti
shlb
aad
mov
je
out
stos
js
xchg
add
push
ds
in
loopne
in
ficoml
movsl
jle
inc
mov
out
sub
scas
rcl
in
inc
push
push
out
cli
push
xchg
add
clc
inc
dec
insb
jp
jmp
mov
mov
std
mov
loope
dec
idivl
cltd
negl
sbb
js
std
outsb
sti
xchg
sub
mov
and
or
dec
fsubr
lods
cmc
cltd
js
lds
push
leave
xor
jge
arpl
je
stos
fistl
dec
mov
imul
and
fldt
shlb
inc
imul
inc
sub
fldenv
xor
sti
mov
movsl
pop
mov
and
sub
xor
xchg
fbstp
mov
sarb
or
and
lock
xor
aaa
mov
out
adc
test
cmp
jg
loop
mov
sahf
pop
imul
mov
mov
xor
out
repnz
bound
les
mov
stos
sub
cli
iret
cmp
add
and
iret
mov
lret
out
call
push
mov
mov
rcr
dec
hlt
sarb
and
sbb
and
sub
inc
aas
jmp
pop
mov
push
mov
mov
cmpsb
repz
or
sub
mov
mov
jle
pop
xor
jbe
ret
mov
enter
data16
popa
sarl
cmpsb
movsb
popf
sti
movsl
dec
sti
aad
xchg
inc
jle
jno
pop
subb
dec
push
je
pop
jle
or
dec
lret
jb
sub
sysexit
pop
mov
mov
into
data16
pushf
jno
push
jecxz
xor
pop
loopne
sub
cmc
and
pop
dec
fdiv
jecxz
rcrb
sti
add
push
arpl
xchg
xchg
xor
cmpsb
inc
mov
clc
pop
xor
test
shll
movsl
inc
cmp
pusha
pop
mov
and
jge
arpl
adc
outsb
cmpsb
nop
inc
jg
adc
ror
fwait
addl
repz
insl
insb
push
pop
xchg
addr16
lahf
arpl
shrl
popa
add
das
les
and
adc
andl
adc
and
mov
jmp
out
mov
pusha
adc
rolb
or
sbbb
jns
jmp
mov
in
xchg
mov
mov
xchg
sbb
cmpsl
jle
mov
das
setne
dec
sbbb
into
mov
repnz
add
xlat
mov
adc
pop
xor
daa
aaa
fs
add
dec
fadds
jnp
in
cmp
cmp
lds
add
push
dec
rcll
jns
cmpsl
out
outsl
sbbb
sub
hlt
rcrl
sub
cmp
jb
push
mov
cli
fisubrl
adc
movsl
pop
or
pop
inc
pop
push
nop
push
jmp
bound
cmp
outsb
icebp
jle
xor
cmc
inc
mov
cmpsl
mov
jge
xor
pop
outsb
fisttps
inc
xor
loopne
jae
out
lock
mov
mov
test
mov
pusha
std
lds
xor
mov
pop
push
lret
mov
and
ljmp
fsts
shrb
loope
xchg
sar
aaa
inc
mov
xlat
xorb
and
in
fstps
sub
cmp
call
out
push
mov
dec
je
push
xchg
jbe
or
mov
pop
in
and
bound
test
lret
in
mov
enter
xor
push
cmc
jbe
dec
mov
mov
xor
sub
pop
mov
jno
nop
and
daa
jne
js
xchg
sahf
fsubl
iret
syscall
aaa
in
sbb
push
jmp
add
loope
popa
popl
das
cmpl
stc
and
sub
inc
or
dec
rclb
sti
mov
dec
mov
mov
loope
cmp
test
push
sbb
bound
inc
aaa
dec
inc
mov
aam
daa
mov
es
mov
xor
mov
dec
mov
inc
cs
int3
lods
mov
push
addr16
lods
bound
xor
jnp
lcall
out
das
fisubl
sahf
pop
dec
mov
push
cld
add
mov
daa
inc
cwtl
and
cmp
fcmovne
and
gs
push
fidivl
mov
push
jnp
out
lds
shrb
jmp
mov
push
push
pop
pusha
push
rclb
lcall
cmpsl
add
loop
sub
ljmp
push
clc
push
rcrb
cs
aaa
jg
xchg
movsl
lret
mov
stos
push
aam
inc
dec
jne
or
push
mov
in
std
pop
push
lret
sub
inc
sbb
nop
inc
cmpsl
daa
cs
in
and
stc
pop
push
bound
ds
and
popa
mov
nop
mov
mov
pop
fucomip
adcl
cwtl
mov
lret
neg
inc
adc
xor
mov
push
mov
pop
mov
rorb
sbb
mov
or
sahf
pop
rcrb
mov
cli
mov
lock
imul
cwtl
or
pop
xor
stc
mov
push
sahf
jae
mov
xchg
lods
cs
jmp
comiss
or
add
repz
xor
xchg
outsb
cmpsb
cmp
js
dec
adc
stos
jbe
fwait
mov
inc
rorb
dec
repz
dec
add
pop
sbb
in
loope
lret
mov
imul
push
push
add
inc
fiaddl
dec
ldmxcsr
xchg
inc
dec
jg
fstl
jnp
add
dec
out
inc
and
in
pop
jae,pt
mov
nop
std
in
mov
cmpxchg
out
stos
aad
fwait
mov
shlb
or
ficoms
and
and
jns
nop
fucom
dec
outsb
add
add
test
dec
add
enter
insl
pop
mov
outsl
lods
cli
mov
loop
sbb
mov
pop
outsb
pop
rcrb
jb
inc
sub
jg
punpckhbw
lcall
or
rol
test
pop
add
pop
imul
lea
push
das
lods
test
cs
mov
jb
inc
dec
mov
pop
mov
jnp
xor
das
adc
mov
jnp
jmp
inc
pop
xchg
push
insb
insb
js
and
push
push
sub
stc
xchg
sbb
mov
in
stos
aad
popa
pop
sub
add
outsb
dec
mov
in
cmp
std
cmp
xchg
sbb
xor
sbb
mov
call
push
das
inc
outsb
mov
lcall
jnp
cmp
jecxz
and
dec
sub
movsb
inc
sar
inc
out
negl
in
out
mov
arpl
push
jno
mov
lods
cmc
mov
push
add
dec
sbb
mov
popa
out
divl
fildl
push
movsl
insb
sub
dec
roll
sbb
imul
inc
cmc
sti
push
fwait
mov
divl
icebp
popf
mov
ret
frstor
xchg
dec
mov
popa
mov
imull
sub
sub
push
pushf
adcl
xlat
aaa
sub
cmp
cmp
fidivl
nop
out
jbe
xchg
jge
fistps
ret
repz
jmp
popa
arpl
aas
loope
sar
inc
jle,pt
mov
loopne
push
cmc
sbb
push
shr
push
fisubs
std
push
mov
push
push
push
data16
test
mov
push
jg
inc
adc
loop
out
nop
daa
pop
shl
sarb
fidivl
stos
shlb
and
repnz
push
mov
sbb
shlb
push
xchg
sar
scas
popa
out
cmpb
outsb
pop
jl
andb
push
addb
in
cld
cmp
jo
test
and
sub
or
arpl
ja
inc
out
rcr
and
mov
sub
repnz
push
adc
sbb
mov
xchg
xchg
mov
xchg
mov
dec
orl
xchg
fcoml
mov
in
rcr
add
sub
fldcw
jg
stos
pop
jecxz
outsb
sbb
inc
mov
add
dec
add
mov
notl
sarb
insb
sbb
xor
and
fwait
lahf
xor
int3
scas
mov
ja
fidivs
push
mov
popa
adc
mov
fisubl
adc
ds
subb
addr16
jo
lock
xchg
jbe
push
aas
xor
dec
shrl
inc
ret
rclb
xor
mov
mov
iret
into
push
data16
movsb
add
cmpsl
push
out
xchg
outsb
pop
mov
addr16
mov
push
jbe
cmp
jg
test
jbe
push
pop
dec
pusha
aad
lcall
mov
jae
push
fcmovne
andl
inc
loope
adc
or
movsl
loop
mov
hlt
clc
sub
lock
repz
mov
adc
xchg
push
mov
mov
outsb
mov
inc
in
lcall
out
dec
adc
notb
sub
je
adc
jns
sub
loopne
out
jp
inc
in
outsb
sbb
xchg
sti
shlb
pop
enter
arpl
arpl
fidivrs
jne
sub
imul
jb
and
mov
push
call
dec
popf
shl
jb
xor
mov
aaa
jo
xor
inc
andb
outsl
add
mov
inc
push
or
fcmovbe
xchg
lea
pusha
mov
hlt
inc
jbe
dec
in
repz
pop
pop
push
mov
sub
shrb
iret
jp
inc
and
jne
mov
clc
add
out
sbb
lds
cmp
bound
setp
sub
xor
xchg
mov
das
cmp
sub
mov
xchg
sahf
pushf
mov
insb
stos
mov
rorb
loopne
inc
and
inc
mov
add
lahf
add
cli
pop
fnsave
xchg
cmc
popa
fidivl
xchg
adc
in
fbstp
fldlg2
loop
jg
push
cmp
push
mov
nop
jl
sbb
fldenv
negb
rcrb
push
xor
mov
mov
pop
adc
mov
push
data16
int
xchg
inc
mov
xchg
pop
jno
adc
out
xor
or
cltd
aas
out
rol
inc
add
xor
or
nop
in
daa
js
adc
sub
mov
insl
mov
push
movsb
xor
push
loopne
and
gs
mov
and
dec
pop
mov
pop
aas
xchg
sub
not
enter
pop
and
stc
ja
out
and
lcall
bound
std
xor
aaa
rclb
inc
jnp
cmp
sub
jo
int
push
inc
fdivrp
sarl
fcomip
dec
les
adc
pop
mov
outsb
add
ret
cmp
arpl
and
out
out
sbb
movl
mov
ds
js
mov
lock
in
fisubl
push
add
dec
dec
dec
jnp
decl
xlat
mov
test
push
clc
movq
jbe
aad
mov
les
pop
adc
bound
xor
test
mov
cmc
shll
or
lret
sbb
dec
jmp
sahf
jle
out
mov
stos
in
jbe
in
int3
sub
outsb
or
or
cmc
imul
xchg
push
mov
jb
repz
lods
out
add
sbb
push
sub
and
mov
adcl
nop
popa
hlt
loop
insl
jecxz
cmp
sbb
arpl
outsb
adc
xor
mov
js
add
jae
repnz
rolb
push
pop
mov
popf
cmp
subb
mov
in
mov
rolb
test
aas
mov
das
nop
mov
dec
xor
xchg
pop
fildll
mov
and
push
dec
mov
xchg
mov
xor
lret
mov
dec
jno
mov
sub
fldenv
xchg
jo
jns
scas
cld
xor
repz
out
mov
inc
jns
xor
popa
ljmp
and
into
jmp
lds
int3
mov
test
aaa
out
sti
inc
or
insb
or
push
push
out
and
ret
rolb
adc
cs
ds
aaa
mov
aam
push
xor
jae
push
jbe
inc
and
mov
shl
imul
jl
xchg
ljmp
ds
mov
dec
mov
mov
push
xor
clc
iret
outsb
lods
jo
inc
pusha
inc
rcl
xor
ret
sub
mov
xchg
cmp
push
push
rolb
mov
mov
dec
mov
icebp
mov
shl
lcall
shll
rorb
in
addw
inc
inc
pusha
loope
mov
subb
dec
push
mov
sarb
and
push
xlat
aad
popa
lret
das
popa
push
and
sbbb
jmp
fwait
arpl
ret
into
jbe
xchg
sbb
ss
push
in
outsb
or
cmp
add
cmpsl
jle
vrndscaleps
sub
mov
xor
mov
shlb
bound
dec
sub
lods
daa
xchg
pop
loope
ljmp
push
and
jmp
jo
sub
push
mov
std
mov
fidivrl
stos
or
dec
dec
fdivs
mov
in
or
xchg
or
xor
mov
iret
push
jecxz
cmc
jge
js
fsubs
jp
xchg
stos
lds
lahf
sub
xor
lret
ret
mov
inc
inc
lea
pop
mov
inc
mov
lcall
jg
sahf
or
xchg
ret
sbb
inc
outsb
jg
push
int
xor
fdivrs
pop
sub
outsb
mov
push
sarb
jns
addb
pusha
pop
into
insb
push
shll
and
mov
mov
lods
mov
jnp
jecxz
sub
sub
rorl
adc
pop
cld
scas
xchg
inc
shl
push
pop
sbb
outsl
jmp
xchg
push
inc
pop
std
xchg
aam
jl
push
fiaddl
cmc
arpl
out
jbe
add
stos
nop
sarl
push
hlt
outsl
push
sub
mov
int3
push
test
hlt
dec
cmpb
sarb
jo
imul
fs
out
dec
jbe
fistl
testb
aam
cli
lods
test
mov
addb
add
movsl
and
add
imul
sbb
andl
pushf
dec
fnstsw
xlat
stos
pop
out
loop
sub
repnz
orb
adc
inc
sbb
punpcklbw
out
sbb
jo
add
jl
fiadds
inc
push
mov
cmp
jl
negl
fwait
nop
movsb
addb
in
lahf
push
cmp
mov
aaa
mov
mov
jae
shr
loopne
ljmp
call
bound
rolb
dec
push
scas
xor
in
pop
in
xor
xor
adc
add
push
loope
loop
pop
xchg
inc
scas
xor
mov
inc
add
xchg
daa
addr16
fdivl
out
out
cmp
mov
push
jne
notl
out
inc
fisubrl
je
and
call
mov
lret
rcl
nop
lret
cmp
add
jp
inc
mov
loop
divb
in
adc
cli
outsl
imul
add
cld
into
adc
mov
addr16
xchg
mov
sub
subl
inc
fisubl
stc
in
inc
rolb
lods
sub
push
fwait
imul
andb
loop
lahf
loope
sub
dec
cmp
dec
hlt
imul
add
das
repz
es
lods
push
inc
mov
cli
adc
scas
add
mov
cmp
or
xchg
and
fstps
popf
xchg
jg
ss
aas
aam
or
jge
xchg
jbe
add
je
test
inc
xchg
xchg
ss
fildl
xorl
cmp
ss
es
sbb
icebp
cmp
pop
insl
jp
inc
mov
sbb
dec
adc
add
outsb
rorb
or
test
dec
pop
xchg
fwait
popa
movsl
pop
mov
mov
push
in
aas
lcall
adc
jns
inc
sub
fisubrl
pop
and
push
sahf
aas
xor
bound
push
imul
jne
sub
cmp
add
and
sbb
shll
mov
xchg
rcl
mov
sub
outsb
jl
adc
dec
nop
mov
mov
dec
mov
notl
add
pusha
jne
scas
stos
xchg
fcomps
xchg
ja
cs
sub
adc
xchg
lahf
ljmp
jl
scas
push
push
jbe
fimull
stc
xor
or
pop
or
lret
in
int
divl
pop
imul
sbb
rorb
pop
pop
mov
jmp
add
pop
xchg
clc
imul
in
mov
int3
cmc
pushf
rclb
lcall
dec
mov
cmp
lahf
stc
adc
das
rorb
fwait
rcrb
xchg
aad
xchg
bound
outsb
sbb
cwtl
and
iret
fildl
aas
movsb
jmp
shrl
ja
inc
jge
and
and
test
or
test
mov
mov
test
daa
sbb
adc
add
xadd
cmp
in
loopne
inc
stos
fdivrs
add
outsl
mulb
push
pop
pop
in
jmp
aas
stos
fldenv
add
pop
add
test
pop
jne
imul
push
lock
jne
cmp
addb
or
dec
fistps
adcl
cmp
sarb
lahf
push
or
rcll
mov
loope
int3
test
push
jbe
xchg
nop
mov
lcall
mov
pop
mulb
shl
sti
test
sbb
pop
outsb
popa
out
dec
loope
scas
add
pop
pop
push
mov
aad
sar
loopne
sti
and
daa
cmc
dec
adc
fbstp
mov
mov
push
sarb
add
gs
sbb
mov
int
and
aaa
arpl
or
addr16
xor
dec
js
out
sti
add
jmp
or
stos
xor
out
pop
mov
lret
push
jg
xor
fsub
je
jmp
jo
rcrb
popl
iret
loop
mov
fucomip
pushf
fidivrl
ss
adc
loopne
rolb
pop
inc
sbb
jnp
jns
cmp
es
dec
fs
jg
pop
jbe
cs
loopne
xor
sbb
pop
arpl
das
leave
popa
cwtl
pop
push
xor
pusha
xor
ds
xor
sbb
lock
push
xchg
xchg
hlt
shr
rcl
test
lret
jecxz
push
testb
cmp
out
stos
loope
inc
jge
push
rolb
add
pop
iret
and
jl
and
mov
jmp
add
mov
jl
push
fisttps
cmpsb
outsb
pop
divb
scas
xor
push
in
and
adcl
ret
ljmp
cli
out
mov
out
dec
int
xchg
leave
hlt
or
cltd
int3
fistl
daa
sti
cmp
cld
jmp
add
inc
dec
dec
call
stc
and
jmp
test
es
xchg
inc
jecxz
leave
add
hlt
idivl
popf
xchg
jbe
push
dec
inc
outsl
adc
inc
push
dec
push
and
cmc
arpl
fnstcw
xchg
ret
sub
jmp
jmp
pop
sarb
stc
arpl
mov
dec
add
sahf
loopne
lret
insl
mov
fsubs
pushl
iret
sbb
or
addl
cmp
shl
orb
hlt
shl
mov
jo
push
cmp
mov
push
popa
fiaddl
ficoml
inc
push
push
lahf
es
xchg
or
mov
fstl
sub
cmc
lret
mov
imul
jbe
ljmp
shlb
xor
and
ss
insl
mov
mov
xorl
lahf
adc
xchg
in
sti
in
leave
in
cmp
scas
xor
xor
adc
ljmp
add
sub
imul
orl
js
push
sbb
mov
or
sar
pop
inc
cmp
and
push
fs
dec
cli
push
mov
inc
cmpsb
dec
lcall
cwtl
rclb
jecxz
cmc
fisubs
jg
xor
jne
ds
loop
lea
bound
ret
out
mov
cmpsb
jmp
add
or
jne
dec
cmp
pop
pop
fdivs
lahf
mov
aad
adc
inc
and
or
pop
call
pop
sti
movsb
jmp
fists
rcl
xchg
fwait
test
xchg
fdiv
iret
les
pop
cltd
mov
fwait
shll
cmp
pop
roll
mov
cwtl
push
test
in
mov
xlat
pop
dec
mov
mov
popa
mov
outsb
sub
and
int3
sbb
stc
stc
in
or
inc
mov
push
adc
lahf
mov
popa
pop
cmp
outsb
in
movsb
dec
push
push
sub
shl
xchg
xor
xor
lock
lods
push
out
aas
sbb
jb
cmc
aaa
jl
shrb
idiv
loope
cwtl
pop
push
mov
hlt
shl
mov
shll
add
pop
fnstsw
sbb
mov
scas
push
loope
xchg
mov
lcall
scas
ja
dec
pop
mov
shrb
into
orb
lahf
or
enter
lahf
in
mov
outsl
pop
adc
mov
rolb
testb
sti
ja
mov
mov
mov
push
adc
fwait
add
or
stc
cs
xchg
mov
add
inc
outsb
push
cmpsl
jmp
ljmp
fistpll
jbe
fldl2t
cli
lds
adc
addr16
jns
cmp
mov
sub
lock
mov
lret
scas
mov
lock
or
scas
adc
inc
and
mov
xor
cmpsb
out
push
add
jmp
push
rolb
lods
push
ret
stos
ret
jnp
sbb
mov
ljmp
bound
ja
test
jns
cmpsb
xchg
les
seto
mov
mov
sub
insb
jbe
addr16
cmpsl
sti
mov
xor
arpl
sub
pop
mov
mov
sarl
jnp
into
loope
jnp
inc
shlb
or
push
jmp
xchg
ja
or
pusha
lods
fnstenv
mov
fcoms
loope
cld
mov
jmp
jbe
dec
mov
arpl
push
push
rcll
and
popa
ret
psraw
pushf
xor
into
fdivp
int
dec
aas
mov
mov
icebp
dec
add
int
in
popa
lret
cli
stc
test
mov
and
sub
out
loope
and
cmp
orb
pop
and
jecxz
lods
jmp
xchg
ret
add
jae
sbb
jmp
mov
outsb
push
cld
adc
cmp
mov
jecxz
ljmp
dec
fistpll
fbld
adc
int3
inc
int
mov
jl
shlb
es
cmc
sti
loope
and
imul
bound
pavgb
jbe
jnp
ss
sahf
out
mov
and
inc
leave
dec
mov
cmpsl
imull
dec
popf
inc
push
mov
or
outsb
lock
xchg
fwait
mov
mov
rcrw
push
mov
shll
push
out
pop
fwait
adc
outsb
rclb
cmpsb
jo
mov
fisttps
je
mov
stos
sub
dec
rcrb
xor
out
or
popf
push
mov
clc
bound
pushl
xor
xor
jo
fildl
add
mov
jge
ret
movsb
call
pop
inc
mull
sbb
xor
rcl
shrb
divl
add
xor
iret
cs
lds
mov
in
cmpl
fsub
stc
push
shlb
mov
lds
into
outsb
xchg
in
cmc
imul
dec
je
mov
mov
xor
xor
pushf
mov
push
es
add
inc
inc
jmp
cmc
fsubrs
out
jle
aaa
sbbb
mov
sbb
jecxz,pn
popa
idivl
push
nop
insl
sbb
cmp
xor
andl
jnp
rolb
movsl
dec
sub
push
mov
stos
add
outsb
fwait
dec
int3
mov
orl
push
push
test
mov
rolb
sahf
out
mov
add
push
test
push
mov
test
dec
push
mov
adc
cmp
aad
mov
fwait
mov
xchg
dec
lret
mov
jmp
dec
jecxz
add
xchg
repnz
repz
add
call
in
test
pop
add
jp
scas
shlb
jb
xor
aam
jne
and
push
orb
cmc
lods
out
dec
mov
loope
jbe
sub
add
leave
outsl
dec
xchg
jae
xor
push
adc
sbb
mov
jecxz
outsb
lcall
aam
cmpps
in
rolb
xchg
insb
stos
mov
fidivs
std
mov
jmp
cmp
loopne
imull
and
in
inc
xor
cmp
insl
push
inc
and
das
addps
ljmp
shr
xorl
xchg
rorl
mov
mov
mov
fs
xchg
roll
jl
loop
cmc
nop
imul
dec
insl
mov
adcb
sarb
xor
bound
imul
jg
inc
jnp
xchg
push
push
mov
sahf
shl
mov
push
in
outsb
cmpsb
pop
cwtl
fstl
mov
push
lods
push
xlat
pop
adc
push
mov
mov
in
or
pop
mov
jae
shlb
xchg
hlt
jle
jne
in
push
test
mov
das
push
push
mov
jl
lock
and
popa
cmp
cmp
scas
xor
and
mov
push
pop
inc
add
fisubrl
lahf
addr16
mov
and
test
int
out
sbbb
adc
lods
rclb
imulb
sbb
test
test
ljmp
inc
sbb
push
inc
test
test
dec
mov
add
test
repnz
push
or
add
sub
mov
ljmp
rolb
mov
outsb
adc
out
mov
push
mov
movsb
pop
sub
rclb
mov
cmc
addr16
dec
mov
sbb
sahf
push
cmc
jge
add
xor
test
sbb
xchg
mov
adc
sub
outsb
fcoml
mov
jne
inc
outsb
jecxz
xor
push
push
pusha
push
shll
in
and
test
sub
jg
idiv
xchg
pusha
popf
test
mull
xchg
rolb
out
rolb
push
jbe
xor
outsb
insl
push
dec
lret
jecxz
cmp
loope
mov
hlt
jmp
jae
data16
outsb
mov
mov
into
outsb
cmp
orb
dec
in
lods
jecxz
lods
pop
sti
lahf
jge
fstpl
jmp
shl
lret
roll
aad
and
nop
call
push
jmp
inc
adc
sub
ds
jae
jl
dec
mov
divl
cmpb
frstor
outsb
mov
jmp
addb
jne
dec
movsb
mov
dec
fildl
jecxz
lret
and
pop
fidivs
fisubrl
hlt
and
divb
fbld
cmc
outsb
enter
push
repnz
notb
sahf
mov
popf
loop
push
push
and
and
outsb
test
dec
bound
push
inc
inc
stos
popa
movsb
cmpl
ficompl
cmovbe
mov
pop
jne
lret
loop
lods
push
dec
faddl
cmpsl
inc
xchg
push
iret
fidivl
inc
int3
jecxz
rcl
sbb
cmovne
in
and
push
inc
mov
mov
rclb
fidivl
push
cmp
ret
sbb
shll
movsb
shlb
jno
mov
stos
pop
fnstenv
sbb
sti
scas
lahf
cltd
jb
bound
popa
ss
pop
mov
fsubrs
push
es
mov
lods
dec
cmp
add
xchg
test
sub
cwtl
inc
int
add
mov
push
jo
jo
rcl
into
les
test
call
mull
loop
repnz
popa
rol
aaa
jno
pop
mov
sub
je
shl
mov
loopne
and
adc
outsl
fsub
cmpsb
loop
sub
jns
loop
mov
inc
shlb
push
bound
repnz
mov
push
rorb
add
inc
out
inc
pop
pop
xlat
outsb
pop
dec
stos
jle
adc
fwait
outsb
ss
and
pop
pusha
mov
cmpl
sti
jb
push
hlt
mov
add
adc
movsl
fidivrl
and
nop
jo
jmp
je
xchg
sahf
shl
mov
movsb
popa
cmovae
adc
and
inc
orb
lret
fidivrl
in
xchg
ja
out
or
pop
stc
or
adc
aam
mov
cli
mov
mov
or
hlt
in
cmp
dec
sti
and
jae
sbb
sub
arpl
mov
ss
jl
jmp
xor
xchg
push
cld
out
lds
cs
mov
pop
ss
inc
jle
ljmp
mov
pop
jno
cmp
push
pop
pushf
mov
jle
sbb
jge
push
and
call
aam
lock
ds
inc
loop
cltd
sub
or
xchg
xorl
mul
aad
adc
fisubrl
lret
test
dec
out
or
or
jnp
adc
cmp
movsl
dec
pushf
std
xlat
add
xor
pop
adc
inc
jbe
shll
mov
xchg
rol
xchg
pause
arpl
or
outsb
repz
inc
js
lahf
mov
stos
mov
dec
stos
xor
ljmp
loope
adc
popl
mov
lock
loopne
pop
in
jbe
rolb
movsb
cmp
sbbb
cmpb
cwtl
leave
xlat
add
adc
cmpsl
lret
je
inc
jbe
xor
mov
data16
popa
jbe
inc
in
sub
cmpb
jnp
xchg
aad
leave
cli
in
fistpll
push
xor
pop
pop
mov
test
outsb
fsubrl
lahf
mov
add
pop
scas
adc
mov
and
movsb
cmpsl
mov
out
ljmp
mov
daa
dec
xor
xchg
repz
inc
dec
jb
lods
and
test
and
xchg
jmp
and
int3
or
xor
out
test
cmp
das
stos
lcall
add
lea
mov
outsl
xchg
lcall
inc
xchg
sbb
out
and
lcall
cmpb
inc
repz
std
push
ljmp
add
fists
xchg
xor
cmp
in
lods
push
ljmp
adc
gs
shlb
sbb
repz
pop
idivl
lret
mov
xor
movsl
fimull
lea
lret
dec
jbe
mov
sub
pusha
inc
ja
lcall
ljmp
mov
pop
outsl
inc
xchg
xor
cli
test
in
push
insl
cmc
imul
scas
mov
xchg
je
xor
jbe
sbb
imul
test
or
inc
fisttpll
outsb
movsl
mov
xor
fisubrl
pusha
xor
mov
int3
outsb
in
sbb
push
scas
jmp
out
jmp
fists
sti
mov
jp
test
dec
push
add
jecxz
popf
ds
xor
and
push
mov
inc
cmpsb
lock
push
pusha
mov
cltd
in
add
cltd
jg
and
push
addr16
mov
xor
sub
cltd
push
bound
js
jnp
test
cmc
and
mov
dec
dec
and
and
pop
outsl
dec
loope
jbe
test
inc
cmp
mov
andb
leave
xor
pushf
cmp
adc
cmp
adc
xchg
cmc
mov
cld
jnp
sub
mov
cmp
in
xor
lret
testl
cmp
je
fcomip
cmc
dec
xchg
push
sub
or
inc
popa
adc
mov
movsl
fdivrs
not
xor
cmp
and
imul
mov
out
cwtl
push
dec
gs
outsb
add
popf
insl
sub
inc
jnp
ret
leave
adc
std
inc
out
jecxz
adc
sbb
mov
andb
iret
cmc
hlt
aaa
rclb
pop
inc
dec
in
sub
shlb
stc
cmp
sub
xor
das
enter
cmc
ret
rclb
push
jp
int
mov
gs
lahf
mov
cmp
and
lcall
adc
shll
arpl
jne
filds
mov
cwtl
in
inc
xor
flds
or
shlb
stc
jb
cmp
pop
fsubl
jo
imul
aam
and
mov
dec
jno
addr16
add
outsb
gs
push
push
lret
rclb
dec
jecxz
sbb
cmpb
cmp
xchg
rolb
cltd
push
je
sub
mov
xchg
pushf
insl
aam
movb
sub
xlat
and
out
pop
fildll
push
cmp
pusha
pushf
jo
sub
mov
outsb
xor
dec
jbe
sub
fists
xor
jmp
pop
mov
test
dec
mov
dec
mov
lret
test
pop
pop
pop
popa
dec
enter
push
sbb
adc
movsl
jbe
xchg
gs
and
jb
jmp
fstl
jmp
das
imul
xor
cmp
fisubrs
notl
push
pop
popa
outsb
and
mov
mov
adc
test
xchg
rcl
xchg
shlb
push
dec
nop
jle
mov
and
mov
loope
cmp
dec
out
add
dec
jo,pt
cmp
dec
incl
sub
outsb
add
insl
and
pop
mov
pop
hlt
add
outsl
jae
mov
and
push
pop
or
push
mov
fwait
mov
pop
push
inc
mov
pushf
xchg
hlt
mov
xor
andb
dec
inc
jo
or
fbstp
xor
adc
mov
mov
push
jbe
push
leave
jbe
mov
mov
addr16
cli
dec
lods
mov
lods
adc
out
jbe
stos
pop
aad
and
xchg
sti
in
mov
bound
loope
ret
in
es
les
out
idivl
loope
mov
ret
push
or
mov
sbb
scas
jbe
mov
mov
shr
es
stc
test
push
pop
stos
add
adc
pop
mov
aaa
add
inc
push
inc
adc
ret
sub
jecxz
sbb
add
mov
movsb
mov
push
sti
and
ret
sbb
xchg
push
scas
and
bound
push
jle
stos
stos
mov
les
sbb
or
loopne
in
test
jnp
je
adc
aam
xor
scas
lea
stc
arpl
xchg
and
sub
push
stos
dec
sub
pop
push
mov
movsl
sti
mov
inc
shrb
mov
mov
cmpsb
insb
rolb
or
mov
dec
and
mov
cmp
lret
jne
stos
sbb
xchg
aaa
fcomi
lret
jmp
movsl
xor
inc
sti
sub
inc
sbb
push
or
dec
adc
jl
push
movb
bound
adc
mov
sbb
jmp
jne
int3
fisttpl
mov
subl
ss
cmc
mov
mov
dec
insl
roll
dec
jl
shr
adc
push
fld
scas
xchg
loope
outsb
in
scas
jecxz
jbe
inc
daa
dec
adc
ja
inc
outsl
mov
mov
dec
adc
shl
call
pop
dec
shlb
mov
test
cmp
imulb
test
pop
leave
dec
outsl
jnp
stc
mov
into
dec
pop
mov
sbb
cltd
ja
pop
pop
cmp
insb
push
add
jbe
push
add
fiaddl
cmp
push
out
sbb
sbb
adc
stos
in
adc
stc
inc
psllq
mov
adc
sbb
fdivp
pop
dec
mov
outsb
push
out
sub
dec
adc
out
sub
fcomip
pushf
imul
fmuls
stos
mov
outsl
cli
inc
out
jbe
jle
jns
pop
xor
pop
cld
bound
xchg
jns
mov
mov
xchg
arpl
jmp
mov
lods
push
sbbb
pop
repnz
pusha
lahf
rorl
mov
sub
xor
push
pop
jno
lds
sub
mov
fwait
lcall
test
xchg
jmp
sub
cmc
in
push
xchg
idivl
inc
mov
xor
pop
mov
out
sbb
lret
movsb
adc
xchg
out
mov
mov
nop
shl
stc
xor
shlb
adc
cmp
rorb
push
ud0
xor
imul
xor
subl
jle
mov
push
je
and
xor
popa
ret
outsb
cmp
pop
inc
test
lahf
pusha
movsl
ljmp
adc
shl
outsl
and
in
lahf
cmp
push
pop
pop
clc
cmovo
in
sub
mov
cmp
pop
in
lcall
daa
mov
xor
test
dec
icebp
lahf
push
out
pop
test
dec
add
aam
hlt
mov
aas
fmull
loope
lods
sub
adc
dec
leave
inc
loopne
out
test
lahf
or
fsts
or
dec
pusha
dec
mov
dec
cld
push
cld
testb
imul
dec
in
inc
ret
push
push
rcrl
rolb
lahf
lret
sarb
xor
mov
or
jb
arpl
shlb
lret
dec
fwait
add
or
pop
pop
and
es
cmp
add
insb
pop
jbe
adc
pop
xorb
in
outsb
bound
pop
cmp
rcrb
jl
push
xor
js
cmpsl
inc
cld
sub
loope
imul
lcall
mov
in
push
pop
loope
sbb
jae
out
lcall
unpcklps
push
mov
sub
ficoml
arpl
dec
rorb
xchg
xlat
or
pop
push
sbb
mov
jmp
push
push
cwtl
xchg
into
push
sbbb
divps
xorl
aad
xorb
mov
outsb
pushf
cltd
jg
lds
rclb
dec
stc
mov
jne
push
xor
inc
jbe
ficoml
ljmp
mov
push
xchg
cmp
cs
mov
xor
mov
ss
lcall
js
ljmp
add
and
stos
add
sbb
sbb
loope,pn
or
outsb
jae
cmp
mull
and
outsb
subl
add
inc
lahf
mov
rep
in
mov
xchg
movb
scas
inc
fisubl
xorb
mov
sti
push
inc
insb
mov
stos
cmc
and
mov
sub
jecxz
xorb
sub
loop
push
adc
stc
into
cmp
push
xor
std
in
iret
pop
arpl
jg
push
bswap
stos
jne
test
fadd
into
jmp
pop
xchg
sub
lret
rcll
imul
mov
mov
out
pop
pop
sbb
dec
cltd
test
fiadds
add
jns
ja
fstl
jbe
adcl
sub
stos
sarb
jbe
add
inc
jae
mov
shrb
iret
cmp
sahf
dec
push
sbb
out
inc
pop
aas
sarb
mov
add
jns
jo
hlt
mov
lock
cmp
stos
xchg
rcr
dec
mov
jbe
lock
hlt
mov
pop
and
push
mov
dec
add
pcmpeqb
out
loope
pusha
jbe
adc
stc
jb
xlat
sbb
sarb
jno
outsb
cwtl
mov
call
mov
scas
sub
hlt
sbb
adc
imul
mov
movsl
xchg
and
cmp
push
fildll
mov
shl
jle
mov
out
pusha
jp
ds
fildl
dec
and
dec
inc
lret
adc
cmp
mov
mov
es
cwtl
negl
mov
test
push
pop
fbld
ss
inc
popa
movsb
incb
xorb
call
jbe
push
mov
ljmp
fxtract
or
ja
cmp
cmc
lock
sbb
push
ficoml
dec
mov
nop
jecxz
mov
pop
jnp
and
xor
negb
fwait
hlt
dec
push
jmp
mov
aam
in
sti
cmp
sub
xor
neg
aaa
shl
mov
sbb
xchg
arpl
les
sub
cmp
stos
sbb
int3
daa
shrb
xchg
subb
jb,pn
stos
or
fs
xchg
jp
sub
iret
cmc
push
and
cwtl
aam
inc
xor
jg
lods
xchg
jbe
call
outsl
sub
stos
pop
fidivs
mov
sbb
xchg
xchg
mov
ljmp
inc
into
mov
inc
add
lea
cmp
jnp
add
mov
iret
popa
rcl
shr
cmp
or
pop
lret
jg
outsb
mov
pop
outsb
shr
xchg
cmpsl
or
fucompp
cmp
sbb
add
movsb
mov
imul
cwtl
mov
dec
sahf
xchg
push
std
call
pop
enter
outsl
sbb
mov
mov
push
push
iret
xor
and
push
cmpsl
andl
fisubl
inc
aaa
mov
push
mov
lret
test
in
jge
pop
sarb
and
xchg
jl
test
pop
xchg
inc
imul
popa
jge
jl
adcl
adc
in
mov
dec
les
and
push
cmp
push
repnz
add
pop
int3
add
pop
test
rcrb
cli
lock
inc
pop
into
fdivrp
orb
pusha
jne
pop
jno
mov
js
loopne
pusha
popa
dec
xor
mov
xlat
sti
cld
int3
and
add
cmpsl
or
sub
mov
pop
stos
jmp
stos
sub
cs
and
sarl
mov
lea
mov
sahf
xchg
imul
pushf
fisubrs
lea
in
movsb
inc
ror
push
repnz
pop
adc
pop
ret
xor
das
mov
mov
adc
pop
adc
xchg
stos
jns
push
ljmp
in
adcb
lods
popf
movsb
mov
not
push
loopne
movsl
mov
sbb
or
or
inc
stos
push
adc
adc
cwtl
or
inc
or
in
out
je
ja
push
sbb
mov
enter
fimull
out
into
dec
je
pop
sbb
sbb
push
and
mov
sbb
push
jbe
sub
add
ss
inc
in
inc
inc
je
in
mov
fisubrl
jno
test
ljmp
call
pop
jbe
cvtps2pd
aam
push
xor
pop
fistpl
fidivrs
lods
enter
rcl
cmc
pop
push
movsb
mov
sbb
aas
xor
mov
add
std
lret
cmpsl
cs
int3
push
in
iret
inc
in
rcrb
dec
cmp
fadds
outsb
pop
mov
jmp
scas
cmp
mov
inc
into
inc
les
shl
lods
xlat
jae
jge
add
jg
xchg
pop
gs
cmc
xchg
push
jae
lds
sbb
clc
mov
stos
pop
cld
mov
sbb
clc
xchg
fdivs
fwait
pop
pop
add
sbb
pop
or
and
jno
jo
xor
loope
pusha
push
or
shl
pop
pop
in
jmp
dec
xor
das
repz
scas
shrb
in
xor
mov
xor
movsb
pop
lret
xor
xchg
shlb
outsb
inc
cli
adc
xor
jbe
ret
dec
lds
jb
outsb
jp
pop
pop
aam
std
stos
loop
scas
stc
rol
dec
roll
adc
or
push
test
jnp
pop
pusha
adc
not
stc
mov
dec
call
or
cmp
test
inc
xchg
jbe
push
jle
daa
sahf
sbb
push
dec
mov
mov
ds
fwait
mov
imul
aas
push
and
outsb
mov
shlb
push
inc
mov
in
lds
mov
xchg
pop
add
push
xchg
or
dec
mov
xchg
xor
mov
jmp
jbe
aam
fnstsw
adc
push
xchg
add
jo
cltd
dec
popf
call
inc
dec
cvtpi2ps
test
or
adc
les
movsb
mov
ret
mov
fiaddl
dec
rcr
leave
push
nop
jle
jne
lea
outsb
int3
fidivl
leave
pop
cwtl
imul
inc
loope
daa
cwtl
insl
repnz
mov
ficompl
xchg
shrb
cmp
popf
push
jl
stos
inc
sti
loope
inc
push
adc
adc
mov
mov
add
out
jbe
and
dec
addb
and
mov
push
jmp
ficoms
mov
jne
dec
outsb
inc
sub
pop
pop
mov
into
in
fisttpll
movsl
and
int3
cmp
lds
and
in
movsl
cmp
adc
xor
mov
stos
jnp
mov
xchg
mov
imul
in
jbe
pop
inc
ljmp
repnz
or
xchg
and
jmp
and
cmp
mov
icebp
sub
push
inc
sahf
scas
add
add
mov
adc
inc
nop
dec
shlb
mov
adc
clc
mov
xor
test
dec
je
stos
xchg
shr
jmp
fwait
sahf
cmpsb
insl
repz
cmpsl
xor
jbe
int3
divl
add
nop
cmp
imul
in
cmovo
test
xchg
jg
adc
pop
or
decb
test
pusha
ud2
inc
cmc
outsb
shll
sti
loope
mov
xor
inc
fmull
xchg
xchg
push
and
out
push
push
addr16
in
fwait
push
dec
ljmp
daa
call
adc
jno
xor
mov
iret
xor
mov
ret
leave
adc
xor
jbe
jp
outsb
mull
mov
mov
insb
es
lods
jecxz
xchg
dec
in
hlt
fstpl
adc
loop
cmp
lahf
sar
test
inc
aad
and
push
sbb
fisubl
adc
dec
jg
insb
int3
in
testl
sbb
leave
stos
and
jae
xchg
imul
and
xchg
das
adc
scas
insl
aam
xchg
out
fistps
out
fidivrl
inc
inc
mov
adc
lea
sub
lock
idiv
pop
in
xor
inc
sub
rolb
dec
outsb
mov
sbb
cld
push
lds
imulb
repz
jbe
cmc
xchg
cmp
inc
test
rcll
inc
imul
fcmovb
shrb
pop
in
mov
cmpsb
jnp
cmpl
cmp
jbe
xor
xor
or
mov
out
inc
sbb
mov
mov
int3
sub
loop
dec
inc
es
rolb
imul
jp,pt
mov
mov
inc
popa
neg
lock
jg
enter
loope
sbbb
fscale
xlat
pop
mov
outsb
xchg
test
out
lods
jmp
or
idiv
xlat
mov
je
arpl
mov
cmpsl
mov
shrl
push
cmc
xchg
mov
outsl
jecxz
push
loop
cmpsl
addr16
cli
xchg
outsl
shrb
outsb
std
sbb
rcll
out
mov
setg
and
jmp
pop
jbe
sub
dec
rolb
lret
imul
ja
lcall
test
mov
xchg
pusha
pop
je
jns
xor
push
adc
push
das
ret
notb
mov
in
inc
lret
jecxz
and
shll
cmc
pushf
pop
test
mov
push
lods
out
jle
dec
pusha
adc
xchg
jge
inc
pop
push
arpl
cmp
aam
pushf
adc
and
jge
cmpsl
vcvtpd2psy
adc
xchg
mov
xor
ja
jnp
mov
bound
mov
push
adc
fiaddl
fldcw
sbb
das
jns
xchg
mov
pop
mov
fmull
jecxz
cmp
pushf
and
ret
int3
sub
aaa
jmp
test
pop
pop
enter
push
pop
xchg
enter
pusha
and
ret
call
outsb
mov
dec
jns
js
iret
stc
seto
sti
popf
xlat
sub
int3
adc
lods
clc
lds
jp
sub
inc
mov
xor
stc
jbe
sub
lret
push
movsl
sbb
sbb
dec
rorb
repz
ret
or
xor
ss
ss
xor
fistpll
mov
outsl
orl
push
jnp
lods
nop
mov
mov
lcall
xor
pushf
adc
push
nop
stos
aam
fisttpll
stc
mov
adc
in
lcall
daa
sbb
inc
lcall
mov
subb
and
es
js
scas
mov
out
gs
fs
jo
inc
outsb
adc
push
push
loop
test
je
cli
adc
inc
dec
testl
jge
fs
shl
roll
dec
fwait
test
cltd
cmp
jg
insb
sub
push
xchg
and
rcl
mov
test
and
scas
sbb
insl
scas
cmpsl
sbb
mov
xchg
sub
inc
fimuls
mov
fs
jmp
or
notl
push
mov
adc
imulb
sbb
add
movsl
xor
rcr
outsb
stc
jae
out
not
lret
xchg
addr16
push
push
cld
pop
repz
add
sub
sarb
ljmp
or
shrb
shrl
insl
in
push
pushf
and
adc
mov
aaa
fucom
loopne
or
dec
inc
pop
inc
lret
xchg
rorb
xchg
mov
subb
insb
pop
loopne
adc
mov
inc
scas
shrl
in
jae
das
es
loope
shl
iret
sbb
jo
pop
je
adc
subb
mov
daa
add
jns
cmc
rcrb
mov
dec
pop
fldl
nop
clc
pop
cmp
xor
xchg
push
cmpsb
outsb
sahf
cmp
mov
sub
insb
lret
ds
pop
loope,pn
lret
stc
and
cmpsb
cmpsl
dec
sub
rolb
mov
jmp
lods
xor
and
mov
nop
jbe
inc
ret
push
adc
vpshuflw
inc
mov
hlt
cmpsl
fildll
das
inc
rcr
js
in
push
and
and
and
inc
lds
scas
in
mov
and
cmp
adc
and
jne
mov
mov
icebp
js
bound
or
ffreep
xorl
repnz
lahf
pusha
ficomps
mov
out
popa
int3
lods
dec
mov
mov
push
adc
cmp
mov
pop
inc
aam
push
gs
dec
pop
push
addr16
push
pop
lock
je
outsl
outsb
mov
mov
in
stos
mov
sbb
in
loopne
mov
sar
mov
push
lea
push
mov
push
in
add
mov
mov
dec
icebp
lcall
mov
je
cli
int3
mov
fwait
enter
mov
in
loope
popf
sub
sub
pop
adc
inc
pop
push
mov
push
inc
push
xor
inc
stc
pop
pop
and
fisubl
scas
aas
lahf
dec
sbb
ljmp
aaa
pop
fistpll
int3
mov
pop
lret
inc
jnp
addr16
ret
jb
jl
and
push
cmp
fstpl
sbb
or
add
in
mov
out
jbe
cmp
jle
xchg
xchg
outsb
jb
or
pop
mov
jge
mov
cmp
cli
stc
pop
ficomps
push
data16
cmc
loopne
mov
jge
mov
sbb
addr16
xchg
mov
jmp
les
ret
hlt
daa
inc
sbbl
int3
call
adc
rclb
test
fmuls
ret
mov
cld
outsb
or
stos
inc
ja
rclb
and
stos
rclb
idivl
ret
sahf
hlt
rcll
add
push
adc
addr16
pop
subb
fbld
rolb
sub
pop
rolb
push
insl
das
push
loope
mov
mov
negl
jns
jl
out
xor
int
mov
pop
repnz
mov
loope
loopne
cmp
shl
push
bound
ds
mov
fnstsw
sbb
fdiv
call
pop
adc
pop
sbbb
das
loop
lods
lret
aad
inc
mov
testb
xor
push
rclb
notb
mov
add
in
xor
jno
lock
mov
test
mov
sbb
mov
sub
and
push
adc
xlat
jnp
add
pusha
and
push
sbb
add
roll
leave
test
in
iret
mov
ficoms
repnz
and
jno
pop
sub
mov
cmp
les
mov
xor
loope
jbe
and
pop
and
xor
iret
jno
repnz
mov
outsb
xor
in
adc
lret
mov
out
sbb
imul
push
jnp
out
fildl
sbb
jmp
scas
lods
adc
nop
cld
sub
shlb
adc
adc
imul
mov
and
aas
and
lahf
cld
cltd
repz
push
dec
sub
outsb
mov
mov
pusha
aam
mov
mov
xor
sub
fmuls
jb
push
popa
pop
pop
into
jecxz
dec
mov
outsb
shll
arpl
ret
mov
add
pushf
sub
add
and
sbb
mov
fidivl
jecxz
mov
mov
or
xor
std
addr16
jecxz
fildll
add
hlt
int
mov
rcrb
enter
clc
or
xchg
lock
fstps
pop
ret
mov
add
mov
lods
shlb
add
push
inc
int
inc
ucomiss
mov
jne
push
cmp
outsb
or
mov
iret
sbb
fidivrs
pop
scas
or
loopne
and
divl
sbb
mov
loope
test
add
out
pop
push
ficoms
cwtl
lahf
jne
inc
mov
push
ja
mov
xchg
inc
mov
xchg
mov
paddw
in
pop
jae
and
and
mov
scas
or
call
rcrb
add
in
popf
sahf
mov
sub
jbe
test
roll
lcall
std
cwtl
lret
add
out
cld
inc
jge
xchg
lret
insb
jb
jno
in
sub
sahf
sbb
pop
push
testl
inc
xor
add
and
lods
sub
test
fisubrl
ja
sub
and
shl
mov
mov
stos
data16
mov
sahf
cmpsl
cmp
mov
pop
sahf
jmp
add
frstor
sarl
xchg
mov
mov
getsec
bound
mov
inc
stc
outsb
add
cmp
mov
xchg
push
fidivrs
in
lret
lds
mov
loop
mov
jbe
xlat
mov
push
pop
faddl
fldl
lds
dec
cmpsl
inc
or
out
push
pop
xlat
dec
jmp
loop
fxch
loope
fcoms
jmp
add
adc
cmp
push
ficomps
pusha
stos
das
xchg
pop
sahf
sbb
xchg
adc
pop
call
push
jo
cmc
syscall
fistpll
jb
cmpb
xchg
xchg
xor
cmp
jno
inc
addr16
fstpl
and
sbb
jmp
repnz
and
rcrb
cmc
push
cmp
iret
stos
mov
iret
lock
decb
out
sub
jbe
dec
jbe
xor
outsl
and
orb
loop
xchg
xlat
mov
out
fdivrp
mov
mov
sbb
push
lock
pop
mov
in
mov
mov
addl
inc
mov
mov
sbb
notl
fisttpl
mov
adc
or
filds
ret
mov
outsb
outsl
push
pop
imul
jmp
insl
out
test
adc
mov
lret
test
test
fsubrp
pop
pop
mov
mov
mov
out
sbb
cwtl
sub
mov
mov
dec
push
test
mov
push
je
out
cmp
push
inc
adc
sub
pushf
cltd
cmp
dec
icebp
adc
stc
push
sbb
in
out
test
mov
leave
fidivs
pusha
das
mov
dec
insl
scas
and
in
jne
sub
sub
lods
pop
lret
add
dec
jb
push
jne
js
mov
in
mov
jg
push
inc
mov
lcall
shrl
int3
sub
mov
jno
repnz
stos
rorb
xchg
push
cmp
es
ret
sbb
xor
pop
adc
sahf
shlb
enter
pop
mov
cmp
sti
test
icebp
jne
push
add
aaa
xor
jge
pop
call
pop
push
add
fwait
sbb
das
mov
inc
mov
jle
or
sub
mov
ljmp
or
push
sub
cmp
cmpsb
jnp
ret
shl
cli
jmp
ret
dec
push
sub
mov
inc
or
jbe
jmp
mov
scas
iret
stos
jle
test
outsl
mov
xor
add
xchg
or
cmp
insb
fdivp
mov
jge
mov
inc
add
sti
jae
adc
push
add
repnz
test
push
mov
out
aaa
sarb
sbb
stos
mov
movsb
int
xor
xchg
cmpsl
lahf
mov
dec
shrb
adc
stc
inc
mov
repnz
stos
ds
imul
outsl
mov
xchg
sub
pop
out
jo
pop
pop
cwtl
aaa
fwait
and
arpl
jge
repnz
jnp
daa
add
lahf
mov
scas
lock
pop
dec
outsb
icebp
xchg
outsb
faddl
or
imul
shr
sbb
mov
lods
jno
jmp
dec
sbb
xor
fsubr
or
aad
out
pop
fisttps
fisubrs
lahf
xchg
mov
ss
ja
inc
fiaddl
les
ljmp
mov
sub
pop
sbb
insb
stos
adc
movsb
inc
pop
sbbl
jno
adc
ljmp
inc
jp
push
cltd
out
aam
mulb
sbb
aad
xchg
in
inc
fld
mov
adc
jmp
adc
push
mov
mov
outsb
sbb
xor
loopne
dec
outsb
mov
push
inc
or
xchg
mov
mov
outsb
cmp
pop
int3
mov
mov
mov
fcompl
xor
xor
cmpsl
add
out
mov
push
xchg
ss
and
in
xchg
fisubrl
popa
mov
clc
and
daa
loopne
cmp
mov
fsub
fwait
idivl
sbb
push
pushf
outsl
sub
arpl
pusha
mov
xchg
and
inc
push
sub
inc
es
mov
push
xor
stos
movsb
cwtl
and
mulb
rclb
jae
push
hlt
cwtl
scas
xchg
fmuls
aam
ret
dec
jns
ror
xchg
mov
dec
sbb
sarb
mov
test
inc
je
dec
sahf
adc
ja
notl
shlb
sub
cmc
push
xor
mov
jecxz
leave
sbb
clc
mov
xlat
xor
rep
mov
ljmp
pop
adc
in
ds
adc
out
inc
nop
loopne
jb
arpl
push
xchg
cmpb
out
dec
dec
jmp
je
cmpxchg
xor
pop
cmpsb
out
inc
pop
xor
rcrb
push
mov
ret
fiaddl
xchg
push
hlt
fisubs
add
jbe
push
insb
add
push
and
or
push
jo
xorb
ss
jno
je
rcrb
out
mov
adc
incb
outsb
stc
fimull
test
xchg
mov
sti
sbb
dec
push
pop
rorb
pop
mov
jge
mov
lcall
rclb
xor
imul
loopne
ljmp
bound
pop
ljmp
add
xchg
jmp
jbe
dec
inc
xchg
loopne
pop
stos
ud2
test
add
das
movsb
cmc
xchg
inc
inc
fistpl
push
jae
push
enter
fsub
push
inc
sub
fwait
mov
lods
xor
push
fwait
sub
fistps
addr16
in
add
mov
dec
mov
cli
shl
ss
sbb
jno
xchg
pop
je
fstpt
mov
pop
arpl
ds
pop
mov
sbb
xor
add
scas
xor
stc
ljmp
enter
sarb
cmp
push
and
outsb
xchg
jp
or
add
or
ds
test
subl
cmp
icebp
dec
or
adc
bound
test
add
mov
push
mov
into
fsub
stc
frstor
outsb
call
xchg
cmc
adc
loope
lcall
ja
pop
xor
sahf
insb
popa
mov
mov
add
push
loopne
xor
xor
push
sahf
loopne
ror
jmp
or
or
jp
jns
mov
insl
loope
andb
jb
push
push
and
cld
arpl
mov
call
loopne
and
bnd
sbb
jbe
sub
jo
loop
test
push
cmc
repz
rcrb
inc
dec
test
inc
cli
and
mov
movsl
test
jnp
out
and
outsb
sbb
push
inc
fdivl
inc
cmp
imull
dec
stc
xor
test
pop
xor
mov
push
cmp
and
ss
dec
add
clc
or
in
and
ret
xchg
test
fs
das
xorl
sub
inc
call
pop
mov
scas
paddd
movsl
jnp
out
pushf
xchg
int3
push
xor
daa
inc
lret
js
cmp
rorl
loope
mov
and
les
inc
divl
shrl
mov
sub
insb
and
jno
or
push
stos
jbe
cmpsb
into
push
lret
xlat
loopne
and
test
mov
mov
xchg
xchg
mov
sti
cwtl
dec
iret
ljmp
fs
fwait
stos
lcall
inc
test
sub
inc
mov
scas
mov
adc
aaa
jb
push
int
mov
cmp
jl
mov
scas
or
je
not
hlt
icebp
push
mov
jne
push
or
adc
push
cmpl
push
jnp
pop
roll
repz
and
pop
into
xor
into
pop
jnp
scas
mul
jbe
push
daa
add
jle
mov
mov
sub
inc
psrlw
pop
dec
mov
jb
popa
jo
dec
shrb
fnop
stos
out
repnz
xor
and
pushf
arpl
out
push
jle
jae
jmp
jmp
push
outsb
mov
mul
xchg
imul
jbe
push
mov
and
aam
cmp
inc
movsb
xchg
std
push
and
pop
lcall
inc
fistps
jmp
and
ror
jmp
jbe
bound
xchg
test
popf
clc
mov
sub
cmp
dec
stos
push
jo
push
je
das
add
and
xor
ret
out
and
repnz
mov
xchg
adc
rcrb
dec
sbb
jbe
and
out
adc
loop
sub
or
fiaddl
shlb
lcall
cs
add
icebp
inc
pushf
aaa
jmp
fstl
cli
into
movsl
and
mov
loope
pop
aaa
dec
mov
mov
mov
mov
xchg
movsb
out
jmp
pushf
and
cltd
add
std
push
mov
or
roll
jb
cmp
mov
dec
push
sbb
sbb
int
sti
loope
dec
inc
nop
rcrb
pop
xor
dec
fwait
or
cld
loopne
sub
cmp
mov
sub
jae
fistl
test
mov
pop
outsb
dec
rorl
dec
adc
dec
jbe
pop
xor
or
orb
pop
mov
cmp
mov
add
push
cmp
rolb
lret
add
inc
addr16
add
mov
inc
cmc
rcrl
cmp
aad
subb
sub
arpl
imulb
sub
outsb
or
incb
repnz
dec
dec
xchg
mov
adc
das
xchg
mov
lahf
and
aaa
loope
scas
mov
and
loope
lock
test
xor
dec
mov
cmpl
mov
jmp
and
push
outsb
jmp
ds
add
jmp
shl
sahf
pop
jnp
sub
out
jae
iret
cmpsl
aas
es
and
jmp
xor
jno
icebp
repz
das
stc
js
call
add
push
adcl
repnz
into
rolb
bound
movsb
insb
add
jmp
inc
out
xchg
dec
jne
lret
pop
xor
loope
hlt
rcrb
sbb
ss
and
or
dec
adc
and
jb
mov
sbb
push
mov
dec
xchg
ficoml
pop
std
mov
inc
ret
add
cmp
ja
cld
inc
enter
xor
cmp
and
sbbl
adc
shrb
sti
dec
in
fiaddl
hlt
adc
push
adc
sub
jne
lods
pop
rcll
sbb
inc
and
push
dec
mov
shll
shlb
arpl
outsl
out
pop
sbb
test
stos
mov
pusha
xchg
push
addr16
das
into
cmp
mov
and
sub
jl
add
ret
sub
mov
jno
fs
dec
pop
mov
inc
cmpsl
push
xchg
cmp
xchg
jno
loope
add
push
outsl
dec
in
cwtl
das
mov
imul
jnp
mov
inc
jne
cmp
xchg
adc
repnz
dec
cmp
ds
clc
jmp
shrb
shll
jno
pop
popa
shl
dec
int3
pop
fisubrl
repnz
mov
and
incl
lods
inc
inc
bound
xor
orb
xor
jmp
xchg
pop
mov
cs
inc
outsb
dec
pop
fdivs
push
xor
inc
out
sbb
repz
popa
inc
add
data16
addr16
mov
mov
aaa
jbe
mov
jno
dec
stos
inc
and
je
mov
imul
adc
lea
jne
les
mov
sub
sub
xor
mov
jmp
leave
cmp
xadd
fdivl
push
testb
and
jecxz
jns
outsb
or
cmpsl
dec
lock
adc
stc
push
xchg
arpl
cmp
dec
dec
out
dec
ret
adc
cmpsl
jmp
imulb
jmp
xor
sub
cmpsb
sub
jp
ret
dec
cmp
pop
rclb
sbb
rcr
in
inc
cmp
loop
lret
arpl
fisttps
addr16
shr
loop
divl
mov
icebp
pop
insb
pusha
out
and
sti
fwait
call
sbbb
iret
outsl
outsb
popa
pop
call
or
adc
fists
mov
out
fdivrs
gs
jle
stos
pop
ret
nop
lods
fcom
movsb
cmc
leave
popf
nop
mov
sbb
jbe
sub
xor
pusha
test
rolb
insl
in
add
adc
mov
adc
or
mov
lcall
mov
popf
mov
loope
lods
loopne
xchg
clc
lcall
add
fs
hlt
inc
fcmovbe
pop
cmp
mov
sub
es
cwtl
mov
jg
xchg
sub
cmp
mov
shlb
ret
mov
nop
loope
movzbl
insb
jmp
mov
sub
outsb
out
stos
aam
int3
bound
sahf
test
test
xor
sub
mov
mov
inc
scas
out
mov
fldenv
cmp
jns
es
repz
pop
or
or
imul
cmp
arpl
mov
cvtps2pd
mov
push
add
dec
pop
aam
mov
xor
inc
cld
dec
mov
jl
or
dec
outsb
fimull
mov
test
insb
and
inc
rolb
loop
in
pop
fstps
cltd
xchg
scas
bound
mov
push
clc
dec
hlt
flds
incb
or
mov
clc
sub
ljmp
scas
jbe
fidivrs
andl
fcomps
jno
addr16
cmc
inc
rcrb
mov
ss
enter
lret
xchg
mov
subl
je
push
fidivs
test
insl
aaa
add
in
xor
pop
mov
out
orb
xor
jne
dec
mov
cmpsb
cmpb
lret
push
fwait
in
mov
sti
mov
pusha
out
int3
in
imul
fistpll
jg
xchg
sub
scas
icebp
into
loope
inc
outsb
in
cmp
xor
sti
push
xchg
jbe
jle
pop
out
fsubp
mov
std
hlt
dec
addr16
je
sub
sbb
add
xchg
jbe
roll
aad
mov
dec
test
lods
jl
jg
loopne
pop
shlb
jle
ret
push
mov
xchg
outsb
xchg
mov
jb
repnz
testb
ja
bound
bound
fsub
arpl
out
xchg
mov
xor
addb
jp
mov
enter
sbb
inc
popa
js
pop
rcrl
out
mov
ret
adc
std
stos
push
gs
insb
pop
sbbl
xchg
or
shl
fs
loop
mov
xlat
insb
out
dec
lcall
jmp
mov
testb
test
ljmp
popa
fists
add
mov
scas
pop
sbb
out
in
or
xchg
jecxz
rolb
inc
jp
mov
in
je
pusha
mov
and
cmp
mov
sahf
dec
fists
rclb
mov
pusha
inc
cmc
jne
mov
push
mov
aad
orb
es
pop
sbb
mov
pop
or
loopne
cmpsl
pop
js
xchg
mull
nop
jmp
xor
aaa
clc
push
popa
lret
call
in
loop
push
repz
mov
dec
ss
clc
jg
sub
into
and
or
mov
xchg
mov
inc
add
push
and
movsb
mov
pop
mov
xchg
fdivl
fists
nop
movsl
dec
mov
dec
jbe
ss
imul
subl
outsl
int3
hlt
aaa
sub
jbe
pop
aam
jge
imul
jl
nop
ret
mov
outsb
adc
pushf
int
pop
dec
popf
or
cmp
dec
fistps
sbb
jecxz
fwait
dec
and
mov
xlat
mov
push
insl
ljmp
sub
andl
mov
inc
jnp
out
jbe
jle
sti
jge
in
fcmovbe
mov
pop
pop
inc
add
push
jmp
std
sbbl
in
in
jno
xchg
dec
jo
inc
repz
push
or
dec
mov
add
imul
outsb
jb
add
push
dec
sbb
xchg
jns
test
and
mov
bound
into
pop
mull
popa
rcl
test
scas
cli
xor
adc
mov
inc
jo
mov
or
mov
in
divl
sbbb
ss
or
sub
xor
rolb
add
cmp
stos
loop
mov
lret
scas
mov
cmp
sbb
insl
icebp
jmp
in
adcb
outsb
sub
xchg
orb
add
add
push
push
and
pop
inc
xor
pusha
pop
loope
test
pop
dec
sub
inc
pop
jl
xor
out
pop
adc
sub
fimull
mov
lea
push
or
push
sbb
pop
jmp
cmpb
aaa
arpl
out
sahf
pushf
stos
daa
mov
outsb
sub
and
jne
add
fcomip
xor
inc
jbe
cmp
jg
aam
dec
rcl
adc
lret
cwtl
push
shrb
xor
push
fs
mov
sub
push
sub
jecxz
pop
jg
sub
ret
mov
das
inc
mov
lcall
popa
in
imul
mov
adc
loop
scas
dec
dec
cs
pop
imul
sti
call
inc
or
dec
inc
js
adc
push
sub
data16
fisubl
pop
out
adc
jp
dec
mov
movsb
in
es
add
mov
add
rolb
sub
cwtl
xor
dec
xor
stos
outsl
in
das
mov
ret
xor
pop
lret
out
outsb
aam
stc
subl
out
pop
add
decl
sub
cli
bound
dec
add
jmp
mov
sub
dec
pop
inc
es
and
mov
jae
jnp
dec
pop
cltd
ret
jg
ljmp
shlb
push
dec
or
aaa
bound
xor
xchg
es
mov
test
push
lret
xor
inc
rorb
fs
imul
nop
push
inc
divb
lea
repnz
shll
das
cmp
enter
mov
por
hlt
push
int3
inc
mov
arpl
add
inc
ss
mov
stc
clc
inc
es
or
outsl
jbe
bound
and
arpl
jp
add
jge
mov
div
cmp
mov
mov
xor
push
iret
shll
push
outsb
bound
dec
rol
imul
leave
out
hlt
addr16
cli
stos
add
mov
dec
mov
test
leave
pop
shrb
xchg
jecxz
xchg
in
sbb
mov
subb
jo
xor
add
jge
in
and
mov
std
insb
mov
lea
js
lods
pop
bound
xor
dec
cmpsl
push
mov
lds
inc
jne
ljmp
test
lret
jb
mov
jo
jecxz
mov
frstor
test
dec
movsl
push
subl
shr
adc
leave
xor
test
shlb
fists
push
mov
rcr
xor
ss
orb
iret
pop
sbb
fcom
fldl
sub
push
mul
dec
lret
sbb
push
popa
mov
test
xor
inc
rorb
mov
outsb
popf
mov
stos
push
pop
enter
push
sbb
stc
pop
in
xor
xor
push
and
push
mov
xchg
mov
sub
mov
pop
mov
inc
sub
call
je
push
lret
jecxz
or
sahf
sbb
xor
ja
mov
mul
inc
in
or
push
sahf
das
in
mov
pop
iret
xor
fmulp
movsb
cmp
xchg
outsb
mov
in
jbe
xchg
add
aad
lods
sarb
sahf
test
inc
mov
in
jne
lcall
shlb
fimuls
push
mov
pop
call
inc
pop
iret
mov
pop
pop
mov
fcmovbe
xor
add
push
mov
aas
das
sbb
jno
inc
and
mov
jnp
jge
outsb
fstp
dec
cmp
dec
sub
cmp
xlat
loope
mov
mull
rclb
dec
addl
sahf
jo
lods
dec
jmp
jno
aaa
stos
ljmp
jbe
fisubrl
iret
ljmp
dec
in
ret
fwait
or
mov
shl
cmp
mov
push
ds
cwtl
mov
lock
mov
imul
xlat
jecxz
dec
mov
js
das
push
outsb
dec
in
outsl
pop
push
loope
xchg
mov
sti
aad
sbb
cmp
jbe
fnstenv
inc
popa
psllq
imul
sbb
cmpsb
loope
adc
stc
popa
mov
mov
mov
je
sub
ror
lock
xchg
test
pop
shrl
cmpsb
stc
and
nop
mov
sub
outsl
inc
lock
mov
shrl
lret
addr16
adc
sar
cmpsl
enter
xchg
fisubl
psllq
lahf
sub
pop
dec
and
ret
scas
fs
mov
ds
jne
push
pop
sbb
jns
out
mov
fnstenv
jae
scas
outsl
cwtl
in
sysret
mov
cld
dec
fdivrp
nop
sub
mov
xor
pusha
or
inc
into
push
icebp
out
insl
imul
xor
jb
push
mov
push
jnp
loope
jbe
cmp
popf
mov
cmc
inc
insb
pop
sub
add
std
pop
mov
push
das
lods
inc
mov
icebp
mov
loop
lahf
negb
jle
jmp
ret
jno
jne
popa
xchg
loop
pop
nop
loop
out
mov
movsl
scas
test
add
cmc
inc
pop
add
xor
sbbl
sbb
cmc
push
dec
pop
loopne
jge
dec
jae
jmp
dec
cmp
add
push
xchg
xchg
cli
daa
mov
out
push
pop
mov
pop
add
outsb
push
inc
dec
pop
and
orb
jns
pop
lret
jge
mov
arpl
add
xchg
lahf
mov
test
jmp
jnp
outsl
fistps
xor
adc
mov
test
outsb
cmp
popa
out
test
cmpb
pop
mov
repnz
insb
dec
cmpsb
scas
int3
xor
popa
testl
and
mov
mov
jo
mov
es
fists
sbb
adc
dec
jecxz
lcall
and
cmpsb
pusha
cli
lock
ficoml
or
shrb
fstpl
inc
shl
add
mov
push
cmp
repnz
adc
push
inc
dec
fld
outsb
mov
xor
addb
xchg
call
mov
insb
pusha
sbb
mov
sbb
push
aam
outsl
scas
sarb
shll
dec
pop
add
int
add
sahf
sub
mov
pop
nop
loop
xor
jno
cmp
adc
mov
outsb
cmc
push
lcall
int3
mov
stc
lahf
sub
push
push
fstps
inc
cmpsb
outsl
add
ljmp
pop
or
mov
push
cmp
nop
das
jnp
rolb
push
lret
and
add
jb
inc
rolb
ja
out
fidivrl
out
sbbl
fdivrs
xlat
jns
int3
inc
mov
xor
mov
sub
dec
cmp
xchg
sbb
arpl
add
lds
mov
ljmp
adc
sub
lcall
and
xchg
pop
pop
movlps
fincstp
repnz
and
fdivp
stos
in
sub
pop
adc
xor
pushf
into
orb
hlt
nop
mov
rcrl
je
rclb
cwtl
mov
mov
outsl
lea
push
push
ja
scas
test
mov
in
enter
sahf
sbb
ds
or
ljmp
dec
push
sti
mov
aad
fisubrs
xor
inc
pop
jns
aad
jecxz
jbe
or
xchg
push
push
in
scas
out
shlb
mov
add
pop
jge
aam
imul
dec
or
inc
inc
and
dec
push
pop
jmp
sbb
push
js
idiv
push
ret
enter
inc
pop
je
mov
jl
scas
fs
insl
insb
inc
aas
add
cmpsb
shrb
insl
repz
inc
stc
cmpb
loop
pop
rcrb
mov
and
and
rclb
mov
cli
les
xor
aaa
and
inc
outsb
mov
jb
xorl
xor
sbb
add
sbb
imul
mov
roll
adc
xchg
out
or
mov
inc
jecxz
jbe
icebp
int3
dec
adc
xchg
inc
popa
cs
insl
les
sub
inc
cmp
stc
sub
ss
push
ret
call
push
outsl
cmp
sbb
lret
imull
mov
mov
fdivrl
stc
mov
sbb
sub
mull
shll
ror
std
clc
push
pusha
lods
cs
shl
aaa
push
test
mov
and
fiadds
adc
shr
ss
inc
pop
add
push
push
je
sbb
pop
xchg
test
and
popa
fildll
pop
shlb
out
xchg
hlt
shrl
mov
shlb
faddl
sarb
xchg
arpl
jle
xchg
pusha
jae
sub
mov
in
pop
mov
inc
in
jmp
pop
sub
cmp
or
imul
hlt
xchg
pop
ja
xor
xchg
pop
sbb
sub
movsl
das
ss
es
movsl
orb
dec
xchg
ret
mov
mov
jne
in
cmc
and
rcl
daa
adc
jae
hlt
in
add
mov
push
mov
xchg
inc
and
push
xchg
xchg
mov
mov
sub
aaa
test
or
mov
sahf
sbb
mov
cmpsl
adc
imul
pop
out
in
orb
int3
dec
jb
jle
add
loop
ds
push
bound
adc
lahf
push
pop
mov
push
shrb
mov
or
inc
mov
test
jb
sbb
aas
cmc
fists
cmp
xor
cmpb
mov
rcl
loopne
leave
pop
fnstenv
jne
stc
sbb
jg
mov
xchg
outsb
jno
sub
out
rolb
mov
ljmp
out
mov
mov
stc
adc
fisubrl
pop
or
lcall
xchg
fisubl
stos
jno
add
loop
mov
dec
or
stos
and
dec
xchg
inc
je
and
shll
sub
cmp
xor
xchg
jbe
push
jle
jmp
subb
mov
sub
aas
mov
mov
sub
push
sub
mov
xchg
sbb
shlb
shlb
test
mov
inc
and
loope
push
dec
call
out
add
lret
pop
pop
inc
dec
rclb
subb
jecxz
stos
in
nop
jl
loop
loop
dec
and
jae
fimull
insb
push
stos
sahf
divb
jmp
mov
data16
out
cmc
mov
fwait
jmp
jp
xchg
les
or
push
outsb
dec
pop
inc
int
scas
xchg
sbb
pop
adc
sbb
ficoml
je
and
outsb
mov
add
push
divb
aam
add
notl
arpl
rolb
push
cs
push
lock
and
dec
push
ret
insb
shrb
xchg
bound
repnz
aad
loop
movsb
addr16
mov
rclb
lret
ljmp
shlb
mov
sbb
xor
mov
sbb
dec
pop
outsb
jg
jnp
ret
imul
loope
inc
push
mov
pop
xor
repz
popa
faddl
rcl
adc
mov
fsub
out
xchg
inc
sub
adcb
scas
push
rcll
cli
jns
sahf
dec
and
mov
mov
add
push
jb
mov
loope
dec
push
xchg
shl
rcrl
and
push
je
rclb
cmpsl
jnp
sahf
dec
sub
cs
rcl
stos
cmc
xchg
lret
mov
xchg
call
fstpt
jbe
cltd
sbbl
nop
out
inc
add
cmpl
xor
or
ret
aam
fucom
in
shlb
mov
jno
ljmp
mov
sub
jmp
mov
and
xor
leave
test
dec
mov
mov
pop
cmp
jne
jnp
test
stc
lret
xor
adc
rcl
mov
pop
jmp
jbe
cmp
ret
in
cmp
bound
xlat
inc
pop
jbe
loopne
sub
ret
adc
lea
fsubr
dec
jne
adc
pop
rcrb
insb
movsl
imul
xor
pop
lock
xor
dec
mov
sbbb
idiv
loopne
fwait
sti
imul
ljmp
stc
xchg
in
test
pop
or
dec
in
outsb
and
or
mov
rcr
arpl
push
add
dec
cmc
or
into
aaa
data16
cmp
cltd
inc
jle
dec
sbb
mov
pusha
jbe
std
pop
bound
out
in
aaa
es
or
and
add
arpl
pop
lcall
mov
cmp
in
loopne
stos
mov
mov
jmp
lahf
push
push
out
mov
bound
sahf
scas
sahf
in
mov
jecxz
mov
pop
jbe
jmp
js
test
or
fiadds
and
inc
push
cmp
cld
inc
jmp
and
jge
cs
mov
jb
popa
in
sbb
lods
ss
xor
mov
push
or
mov
jmp
jbe
sub
cltd
addr16
add
fsubrs
adc
push
lret
les
adc
rcll
nop
je
loope
or
adc
leave
fiaddl
cmpsl
push
or
or
pop
das
imul
push
lahf
pop
rolb
sbb
push
sbb
scas
stos
nop
dec
outsb
or
push
imul
addr16
jl
imul
out
pop
sbb
cmp
loop
div
and
imul
or
inc
imul
addb
fdivrs
fnop
push
daa
dec
fninit
rcrb
cli
stos
call
shlb
mov
lea
aad
jns
adc
inc
dec
inc
pushl
je
aad
gs
and
aas
daa
in
insb
loop
mov
lock
cltd
scas
jae
push
sti
mov
pop
lret
loope
pop
das
testl
es
out
into
dec
pop
push
sbb
lcall
jns
cmp
aas
dec
aad
dec
pop
aaa
shlb
push
xor
das
jecxz
outsb
popf
inc
addr16
dec
sub
fcmovb
mov
jbe
xchg
arpl
dec
push
les
mov
ret
imul
bound
ffree
ss
jne
xor
outsb
xor
inc
push
mov
sahf
pop
clc
outsb
ret
jle
bound
in
outsb
push
stc
mov
mov
icebp
mov
out
nop
fcomip
sbb
inc
adc
inc
movsl
add
out
inc
pop
inc
and
in
fsubp
movlps
add
sbb
repnz
mov
push
mov
lcall
rorl
mov
xchg
fimuls
xchg
cmp
insl
repnz
outsb
or
adc
adc
imul
loop
fistps
cmp
jb
push
insb
add
pop
dec
sbb
lock
xchg
stos
popf
cmpb
jmp
xor
jg
sub
cmp
rorb
lea
add
mov
pop
and
mov
stos
sbb
rcll
adc
in
mov
push
dec
cmc
cld
pop
adc
adc
xchg
sbb
inc
test
lahf
arpl
insb
pop
inc
inc
popa
mov
xchg
pop
xor
and
push
aad
lret
cmpsl
mov
hlt
jbe
outsb
test
shlb
push
pop
sub
imul
je
mov
mov
inc
mov
popf
inc
pop
cmp
xchg
cmp
aam
shrl
out
mov
cmp
xchg
outsb
mov
fstpt
cld
inc
sbbb
or
fwait
jb
paddsw
jecxz
repnz
andb
in
xchg
out
xor
stos
mov
sub
adc
inc
shlb
mov
insb
xchg
aaa
jge
dec
stos
fst
movsl
in
int3
out
out
mov
xor
adc
into
add
dec
xchg
enter
xchg
push
testb
mov
test
xor
int3
lret
mov
dec
push
pusha
mov
arpl
rorb
push
mov
hlt
cmp
test
mov
loop
inc
jae
lods
inc
pop
fildll
ficoml
add
pop
stos
mov
dec
xchg
or
sarb
popa
mov
pop
cmp
mov
idivl
jmp
xchg
aas
inc
lods
das
dec
lcall
bound
sbb
repz
pop
push
sahf
mov
aaa
fildl
adc
sub
sarb
jmp
push
jne
jnp
in
sbb
sbb
mov
and
js
lret
stos
xchg
push
jecxz
jbe
jno
hlt
push
xchg
jns
sarb
push
scas
jbe
jb
pop
pop
jge
adc
add
and
movsb
adc
xchg
rcll
mov
loop
pusha
inc
scas
mov
xor
jno
jae
test
mov
mov
in
outsb
add
lcall
lods
aad
push
rclb
fisubrl
inc
outsb
jne
mov
adc
cmp
mov
insl
dec
divl
out
push
pushf
mov
xchg
cwtl
shll
jnp
or
movsb
in
and
and
test
fisttpll
scas
push
xlat
aad
xchg
and
icebp
je
push
test
xor
inc
push
sub
into
scas
mov
sbb
test
pushf
cmp
ds
cld
scas
ret
loope
sbb
jbe
mov
shrl
adc
outsb
ljmp
dec
xchg
pop
sbb
in
and
push
cmp
add
packssdw
jae
sbb
popf
in
jbe
insb
pop
loope
fidivl
nop
hlt
jnp
sbb
dec
and
xchg
outsl
aad
jge
or
repnz
popa
and
and
sti
outsb
xchg
mov
pushf
inc
out
add
ja
pop
scas
mov
mov
rcrb
xor
dec
sbb
dec
data16
xchg
movsb
lds
stos
icebp
repnz
orb
push
pop
jns
jne
mov
jp
fistps
inc
mov
mov
popa
shlb
push
rclb
bound
mov
sbb
test
popa
lcall
jmp
cmc
mov
movsb
adc
or
jbe
cwtl
jo
gs
loopne
test
syscall
sbbb
loope
mov
jbe
outsb
out
leave
pushf
rcl
fucomip
out
stos
lods
jne
scas
mov
ja
das
pop
jae
shlb
cmpxchg
fidivl
ret
push
and
jb
fildll
jle
outsb
adc
movsb
sub
cmp
repnz
jl
int3
sbb
cmp
xor
pop
sbb
mov
movsb
sahf
cs
sbb
xlat
lods
jmp
jge
stc
fmull
adc
or
int
dec
xchg
inc
and
push
daa
pop
jl
loope
sbb
add
push
mov
shlb
into
rol
sti
out
loopne
leave
sbb
pop
orps
jb
test
mov
jno
sti
in
pop
cmp
add
lds
mov
loopne
sub
sbb
jmp
mov
add
mov
loopne
jbe
or
add
cmp
lea
insl
icebp
and
ss
cli
aad
inc
xor
das
das
sti
fstl
dec
cmpl
ficoms
lock
sbb
pop
sahf
xchg
stc
insl
and
cmp
testb
orb
xchg
in
cli
shr
or
xchg
dec
mov
and
add
stc
inc
popf
jmp
out
pop
rorl
sti
push
lret
mov
stos
or
mov
lock
sub
adc
and
pop
xlat
adc
inc
xchg
xchg
pop
shll
cwtl
rcr
dec
rcr
lods
daa
mov
sbb
pushf
and
outsb
cld
xor
negl
orb
out
popa
jbe
cmp
cld
js
cmovo
cli
dec
popf
int
fiaddl
lea
cmc
outsb
lea
jp
into
stc
aas
cmp
icebp
lcall
jae
xor
fstpl
mov
push
clc
jne
int
out
inc
xlat
stc
xchg
lahf
sub
and
sbb
cmpsl
dec
popa
in
mov
push
mov
out
xor
in
neg
cld
pop
in
inc
shrb
mov
aad
les
jge
push
mov
mov
in
inc
mov
sbb
push
sub
dec
fs
repz
int3
imul
sub
inc
in
jl
mov
inc
lret
ret
fisubs
dec
outsb
mov
mov
mov
bound
push
dec
cmp
jb
inc
cwtl
mov
adcl
and
lcall
mov
ja
adcl
nop
mov
xor
std
subb
xchg
rorl
sbb
push
ss
mov
in
test
adc
rolb
mov
call
sysenter
dec
lock
cs
mov
aad
push
or
mov
and
outsb
sub
push
mov
pop
jno
psrlq
xor
fistpll
das
pusha
mov
cmp
inc
jbe
call
into
imulb
sub
cmc
xor
cld
xor
cmp
dec
mov
fs
sbb
out
mov
jl
stos
nop
fisttps
fdivs
add
int3
cmp
adc
popa
cmp
pop
pop
mov
addr16
test
in
imul
fisubrs
xchg
fnstsw
dec
data16
sbb
hlt
jnp
mov
nop
outsb
jmp
add
stos
pop
jmp
pusha
push
out
cmp
cmp
outsb
adc
mov
or
sub
lock
shll
movsl
fcmovnbe
lret
mov
das
test
inc
inc
fcomi
lods
jo
dec
insb
mov
jl
add
mov
dec
push
inc
push
testl
testl
mov
bound
jbe
loopne
adc
out
dec
rolb
fsub
mov
aad
inc
ret
dec
mov
jo
and
sti
lea
mov
mov
test
mov
int3
cmp
pop
and
or
cmpsl
stos
imul
jge
xor
std
jbe
push
inc
loope
sub
call
pushl
dec
gs
jb
loopne
xchg
jge
inc
pop
fdivl
popf
out
jae
iret
jno
gs
jge
stc
xchg
dec
inc
mov
jle
lods
outsb
xchg
xchg
or
cmpsb
xlat
adc
das
pusha
adcb
lods
jnp
cmpsl
push
inc
sub
sbb
xor
out
mov
ficompl
jnp
fnsave
adc
out
mov
push
lds
pop
das
sbb
and
call
adcb
lahf
xlat
insb
jg
push
popa
iret
out
pop
jbe
add
adc
mov
push
sub
lea
rolb
pop
popa
idiv
adc
xor
stos
ja
adc
call
push
ret
in
xchg
arpl
ret
mov
sar
cltd
sbb
or
rorl
inc
mov
or
ja
stc
int
sub
cmpb
out
cmc
or
xchg
imul
sbb
in
pop
pusha
and
mov
jb
sbb
jo
cmc
jbe
insl
or
inc
add
lds
mov
mov
adcl
jnp
jmp
mov
hlt
cltd
repz
into
int3
inc
mov
movsb
out
pop
pop
adc
mov
notrack
scas
faddp
inc
xor
outsb
lods
arpl
mov
adc
pop
mull
repnz
mov
mov
push
out
setnp
out
jbe
mov
je
cmc
xor
and
sti
lock
mov
mov
mov
dec
mov
dec
lfs
rcl
lret
js
push
xor
mov
xor
lret
cmp
outsb
fistpll
add
push
daa
mov
mov
jbe
loopne
or
dec
test
xchg
sub
and
mov
rclb
scas
mov
outsl
add
jl
in
mov
inc
or
fnstenv
xchg
jbe
add
icebp
inc
push
jno
or
or
aas
cs
shlb
mov
sbb
push
in
ret
loop
in
insb
mov
rclb
add
outsb
daa
or
rolb
es
and
cmp
jge
jne
ret
roll
fisubs
mov
adc
adc
fnsetpm(287
leave
lret
sbb
cmc
call
pop
cltd
sahf
and
je
cmp
jbe
ret
cmp
pop
pop
stos
rcrb
jae
push
nop
pushf
ds
xor
enter
jae
xor
pop
and
mov
imul
jmp
not
fdivrl
scas
cld
scas
sbb
outsb
sbb
jecxz
neg
mov
jp
push
fwait
cmp
test
fisubrl
out
in
pushf
cmpsl
hlt
fstpl
push
pop
inc
scas
jae
pop
xlat
scas
fistl
or
lods
lds
decb
cld
pop
in
jne
mov
lock
lahf
push
sahf
jo
cli
or
loop
fistpll
popa
mov
cld
in
or
jl
fwait
out
sti
out
inc
jecxz
push
mov
mov
mov
push
add
cld
sahf
scas
add
xor
dec
stos
stos
es
rcrb
and
fldl
push
sbb
xor
mov
iret
jle
in
mov
and
jns
stos
in
and
dec
push
xchg
in
jecxz
nop
jno
adc
sub
mov
push
popa
inc
stos
jbe
insl
cli
mov
inc
loop
or
es
jnp
cmp
jo
push
std
xchg
pop
xchg
repnz
lods
test
jecxz
jnp
ljmp
mov
rclb
cmpsl
mov
dec
adc
insb
mov
aad
pop
mov
stos
push
mov
inc
pusha
sub
jle
xlat
lds
test
jbe
iret
mov
insl
pop
push
push
lcall
and
xchg
cs
push
movl
and
sbb
mov
xchg
testb
push
inc
gs
add
or
mov
jno
jg
jle
pop
bound
add
leave
push
clc
inc
iret
es
mov
mov
jbe
ds
sahf
push
mov
inc
push
push
adc
insb
push
and
dec
pop
jae
mov
out
sbb
adc
inc
fs
and
addl
pop
and
pop
cmpsl
fldt
mov
aad
adc
fstps
pop
sbb
or
ficoml
outsb
pop
fcomps
add
ss
fs
fisubs
add
or
bound
inc
inc
idivb
dec
inc
or
pushf
cmp
add
aaa
dec
dec
mov
outsb
or
sub
fcmovbe
cmpsl
int3
dec
test
cmc
or
loope
jmp
jmp
push
lods
cmpsl
movd
mov
inc
xor
sub
fildll
mov
pop
push
push
pop
cmp
jns
insl
or
int3
pop
or
fcoms
divb
movsl
xchg
icebp
movsb
cli
ror
and
lock
gs
pop
pusha
dec
movsl
andl
pop
js
cmp
hlt
push
cld
loopne
cmpsl
test
push
sbb
adc
jge
shlb
or
stos
inc
cmp
push
jecxz
int
jmp
sub
subb
outsb
pop
xchg
cwtl
data16
shll
or
stos
or
mov
adc
xchg
lret
xchg
ja
pop
ret
out
imul
stos
into
adc
fwait
notb
aam
mov
cmp
pop
push
ljmp
fwait
ja
bswap
inc
xor
inc
mov
cmpsb
arpl
cmc
mov
fisubrl
mov
rcrb
pusha
pop
outsb
out
gs
xor
lods
into
ret
jecxz
pusha
jnp
mov
push
mov
mov
stos
mov
lcallw
jg
jnp
mov
nop
xor
or
xor
jecxz
shll
lret
pop
cs
push
repnz
std
xorl
popf
mov
lcall
and
sbb
fstpt
fcmovnb
sbb
mov
jb
out
gs
pop
pop
aad
mov
iret
fldcw
push
cmp
aam
jnp
xchg
cmc
mov
xor
fistps
cmp
nop
arpl
adc
pop
jne
aaa
pop
adc
stc
inc
cwtl
jo
loop
jmp
mov
jmp
add
jecxz
mov
call
je
sbb
and
sub
js
iret
and
cltd
int
pusha
fisttps
sub
mov
lcall
and
jmp
test
lds
das
fwait
and
bound
jge
lcall
ficoml
popf
lods
stos
test
xchg
xchg
add
push
add
jg
pusha
test
rcrb
mov
jo
bound
dec
fldcw
sbb
aaa
pop
push
jnp
dec
sub
testb
pop
inc
dec
rcrb
gs
xor
jl
inc
sti
fwait
adc
fisubrl
and
and
in
lock
dec
jno
jl
repz
dec
in
in
fcomip
sub
push
inc
scas
test
xchg
in
inc
inc
je
divb
or
jbe
jecxz
inc
outsl
sbb
and
sbbb
cmpsb
insl
xchg
pushf
int3
push
or
inc
fwait
sarl
arpl
into
xchg
xchg
inc
in
loopne
into
fsub
push
arpl
fistpll
stos
gs
cmc
cmp
rol
aaa
lcall
push
pop
xor
xor
pop
out
outsl
sub
push
jl
fcomip
rclb
ss
aad
jecxz
mov
inc
and
mov
jl
xchg
inc
loope
or
cmc
pop
inc
imul
mov
xchg
mov
cmpb
out
bswap
outsb
sbb
sub
mov
pop
in
sub
sbb
jecxz
adc
inc
push
cld
inc
outsb
neg
mov
pusha
dec
add
inc
into
xchg
cmp
das
std
inc
ficomps
sub
dec
pop
cmpsb
mov
push
out
aaa
xchg
cmp
popa
jecxz
or
cmp
lock
aad
inc
push
mov
repnz
subb
add
das
or
or
sbb
pop
inc
out
jbe
push
inc
cmp
jp
loop
pushf
xchg
mov
imul
dec
ljmp
ss
xor
sub
inc
sub
sub
mov
inc
jge
ss
push
fiaddl
jae
lea
dec
iret
pop
sahf
mov
outsl
mov
xor
cmpsl
ss
fcmovu
xlat
fiadds
daa
add
push
xchg
xchg
mov
shlb
movsl
pop
inc
lret
lcall
xchg
icebp
repz
and
int
push
iret
mov
and
iret
push
mov
fcomip
pop
rolb
lcall
inc
test
or
cmp
inc
xor
xor
divb
hlt
call
mov
inc
dec
push
xchg
outsb
mov
cmp
mov
cmc
std
or
lret
iret
in
lods
cs
sti
adcb
sub
shlb
jne
jne
fistpll
negl
cmpsl
add
stos
fidivrl
xor
ljmp
cmp
rcrb
insb
adc
ja
or
mov
shlb
xchg
movsb
subl
pop
jns
stos
push
jbe
xchg
inc
aad
fisubs
mov
sarl
xchg
enter
mov
cmpl
xor
pop
inc
cmp
sub
pop
popa
sbb
icebp
xchg
out
call
jg
mov
imul
hlt
fbstp
movsl
bound
xor
test
jle
inc
scas
rclb
test
jae
or
push
ret
mov
dec
push
out
adc
mov
lret
cmpsl
stc
outsl
adc
call
mov
arpl
outsb
jae
pop
lock
jno
loope
cmpsl
push
cmc
mov
out
cmp
call
pop
add
aaa
sub
icebp
jne
outsb
and
jmp
rcrb
ds
insl
mov
jp
sti
into
or
pop
in
or
adc
jns
imul
cmpsb
jns
inc
rorb
lods
or
insl
or
jb
insb
cs
xchg
cwtl
das
inc
daa
ljmp
sub
jne
pop
popf
shrb
repz
and
push
cmc
mov
outsb
outsb
pop
dec
mov
mov
inc
pop
cwtl
jae
mov
nop
enter
mov
jbe
subb
dec
out
out
outsl
bound
lahf
dec
sahf
cmp
inc
cmpsb
lret
test
jbe
jno
xor
push
mov
repnz
aad
insl
pop
fisubl
notl
cmp
jecxz
jbe
adcb
scas
lcall
adc
nop
dec
jbe
dec
test
addr16
stos
sbbl
movsb
enter
pop
jae
pushf
xor
cmp
outsb
jae
test
test
adcb
rolb
dec
push
movsl
gs
in
xor
lock
or
stc
xchg
les
mov
sti
cltd
dec
adc
jnp
jne
in
cmp
inc
call
nop
not
repnz
sti
xor
and
out
dec
mov
les
mov
test
push
test
sub
sub
add
or
cmp
pushl
outsb
dec
inc
iret
fists
insl
loopne
mov
inc
movswl
push
repnz
pop
jl
or
js
popa
movsb
mov
mov
inc
ret
dec
inc
movsb
dec
push
scas
inc
mov
fisubs
mov
add
mov
or
gs
sub
mulb
dec
iret
jne
xor
inc
mov
xchg
das
orps
xor
inc
loopne
jbe
xor
test
rclb
mov
pop
stos
adc
push
in
lds
sbb
in
jbe
dec
fisttps
adc
fwait
cli
outsb
mov
inc
mov
outsb
jnp
shlb
icebp
lret
lods
jge
pop
sub
pop
mov
fnsave
cmp
daa
lcall
xchg
and
mov
outsb
les
arpl
mov
sbb
push
xchg
loope
fbstp
mov
fwait
pop
cmpsb
sub
or
xchg
ljmp
insl
outsb
jo
cld
push
adc
push
pop
insb
sub
pop
mov
jno
movsb
ss
ret
fstps
inc
out
rcr
popf
sti
hlt
idivb
imul
mov
aaa
into
and
push
jbe
inc
jecxz
push
inc
mov
jl
rcrb
sbb
xlat
mov
xchg
sub
fidivrl
cmp
insb
ror
fdivrl
xchg
arpl
in
ror
xchg
ss
cld
fiadds
xlat
hlt
or
sti
aam
mov
pusha
and
or
cmp
mov
repz
inc
mov
cmpsb
push
mov
push
mov
cmpsl
and
jo
cmp
pop
movsb
dec
std
mov
insb
push
hlt
mov
test
cltd
and
adc
or
mov
fnstsw
adc
cld
adc
aam
xchg
outsb
fistl
jne
lret
push
xor
icebp
xchg
mov
jb
mov
adc
and
xor
das
shl
ss
jb
test
mov
imul
add
push
out
sbb
and
adc
out
bound
sbb
jg
push
rolb
push
pop
jne
outsl
adc
pushf
mulb
in
aaa
pop
fildll
cli
icebp
sub
iret
cmp
sbb
stc
aad
loope
rcrb
inc
pop
mov
out
das
out
push
lods
mov
loop
mov
aad
repnz
and
fbstp
xor
in
cmp
push
xor
int
dec
leave
add
adcb
cmc
movsb
rorb
enter
fstpl
mov
xchg
adc
dec
nop
pop
jb
negl
push
hlt
cmpsl
fmulp
push
mov
mov
lret
addl
incl
dec
inc
pusha
adc
pop
cmovo
in
aas
fimuls
loope
sbb
inc
jg
mov
jbe
cli
add
shrb
xchg
int3
jb
and
sbb
cmp
rorl
test
test
xor
push
outsb
jbe
xor
jne
mov
ret
pop
jecxz
push
mov
xchg
loope
loopne
rclb
inc
mov
or
ss
stos
ret
xchg
xchg
andb
cltd
inc
jp
and
pop
mov
xorb
cmc
jns
sbbb
xchg
pop
cmpsb
andb
rorb
push
adc
push
test
push
xlat
xor
cmp
add
xchg
or
inc
mov
mov
cmc
rcrb
xchg
ja
push
stos
pop
pop
pcmpgtb
fwait
or
push
scas
mov
add
std
jbe
or
xor
out
mov
pusha
sbb
fwait
push
push
jecxz
fwait
test
add
daa
lods
pop
cmpb
or
push
pop
fs
push
push
pop
leave
lahf
sbbb
js
ljmp
fcmovnu
mov
arpl
lcall
out
jmp
inc
test
call
dec
and
push
sub
mov
rolb
je
inc
sub
rcrl
bound
jbe
daa
jp
in
mov
dec
outsl
inc
ss
sbb
jge
mov
sti
inc
flds
mov
outsb
aad
xorb
adc
cmp
loope
jnp
push
pop
das
rcr
dec
xchg
std
add
jmp
bound
xor
and
out
loopne
lea
push
outsl
fwait
rcrb
call
and
xlat
mov
fcomps
push
adc
push
loop
andb
rolb
jle
fisubrl
popa
inc
mov
xor
add
rcl
mov
fsubl
inc
lock
scas
push
ss
sbb
outsl
xor
inc
mov
in
adc
insl
ljmp
dec
int
add
fcomps
popf
scas
shl
out
add
stos
int3
in
repnz
fadd
push
lods
push
test
shlb
mov
inc
pop
jae
add
test
scas
push
cmc
xchg
mov
cmpsl
mov
sbb
jecxz
jns
mov
bound
add
shrb
inc
push
test
cmp
cmc
not
xchg
mov
addr16
outsb
sub
setg
lds
mov
add
xchg
test
or
orb
push
outsb
sub
mov
jbe
mov
pop
dec
adcb
movsl
jno
in
fbstp
outsb
lret
mov
js
enter
xorb
insb
adc
ss
mov
add
int3
js
mov
dec
outsb
aas
adc
jbe
mov
sub
scas
jae
aam
inc
rol
xor
test
into
fincstp
inc
sbb
cmp
addr16
mov
and
rolb
lret
xchg
xchg
xor
stos
aam
push
sbb
mov
xor
and
mov
rolb
mov
shll
loop
movb
dec
mov
repz
push
arpl
adc
pop
outsb
das
xorl
stos
inc
xor
call
in
dec
cltd
mov
mov
sahf
pushf
push
or
lods
test
aas
dec
ljmp
pop
or
arpl
xor
inc
sub
lea
hlt
jno
mov
and
xor
mov
sub
push
xor
dec
pop
xchg
adc
or
test
pop
loopne
bound
je
cmpsb
pop
jno
add
fiadds
mov
jmp
cmpl
sbb
lret
bound
mov
jbe
shlb
out
xor
jl
in
rol
nop
add
mov
xor
xchg
add
xor
jns
rcll
jne
mov
sub
dec
xchg
mov
push
jbe
aad
jnp
adc
sarl
cmpsb
imul
dec
mov
aas
jns
enter
fidivs
and
push
fisubs
add
repnz
mov
add
out
rcr
lods
or
outsb
dec
and
sub
iret
repz
gs
and
ljmp
mov
sbbl
and
lret
inc
lds
out
rcrb
sub
push
stos
mov
and
jnp
shlb
or
aaa
mov
loopne
orb
ret
mov
stc
cwtl
fs
xchg
xchg
add
mov
xlat
lds
pop
sbb
scas
cmp
fdivl
mov
or
fdivrs
cmc
inc
mov
mov
cmp
mov
mov
inc
mov
xchg
mov
in
jbe
outsb
pop
bound
and
lret
dec
push
push
pop
pop
lods
xor
cmc
jge
negl
pop
jmp
outsb
je
loop
sub
xor
mov
cmpsb
lret
stos
or
and
loopne
sar
pop
inc
jmp
inc
pop
outsl
movsl
fmul
pop
bound
inc
aas
xor
mov
rolb
cmp
inc
pop
dec
xchg
inc
arpl
fdivl
lods
mov
xor
push
mov
out
scas
fildll
divl
stos
sub
push
int3
aam
test
test
and
jbe
dec
sbbb
cmc
cmp
negl
dec
stc
mov
divl
or
jmp
jbe
adc
cmp
pusha
dec
rolb
repnz
push
stc
sbb
outsl
sbb
jbe
dec
xchg
rcrb
sub
fadd
ljmp
mov
cmp
sti
mov
daa
or
xor
fcmovb
cmp
loop
int
call
mov
add
lcall
push
add
xor
into
push
xor
aas
out
ret
cmc
push
stos
nop
add
xchg
imul
jns
pushf
jb
adc
imul
add
jo
mov
and
dec
cmp
stos
pop
sahf
in
cmp
xor
insb
pop
test
push
roll
mov
inc
sbbb
ja
sub
loope
outsb
hlt
push
pop
cmp
add
add
cmp
mov
lahf
popa
lret
push
mov
mov
out
addb
inc
movsl
das
pop
push
xor
out
mov
sbb
mov
lret
mov
outsb
and
mov
and
dec
jns
push
dec
or
imul
pop
pop
push
or
mul
test
fsts
inc
loop
stos
xchg
inc
scas
xchg
xor
pop
pop
stos
mov
cmpsb
push
xchg
pop
and
out
sbb
mov
andl
push
shlb
mov
imul
add
pop
inc
xchg
jp
into
mov
not
sbb
push
xor
sbb
jp
fdivrl
jno
jnp
push
ud2
cmp
push
cmp
and
shl
and
cmpsl
mov
mov
add
xchg
repnz
push
into
sub
into
shlb
pushf
ds
mov
push
sbb
int
shlb
mov
lcall
push
lret
mov
not
setge
in
popa
test
out
pop
dec
inc
cmp
push
adc
dec
dec
or
or
cwtl
and
shl
dec
outsb
cmpb
stos
jo
out
jae
and
outsb
inc
mov
aam
xor
push
insb
add
aaa
push
sti
dec
out
nop
xchg
mov
loop
mov
sbb
lods
push
outsb
xchg
testl
inc
rclb
ja
mov
cmpsl
push
pop
inc
test
lcall
mov
test
cmp
leavew
mov
add
fwait
mov
fwait
repz
jmp
add
loope
cltd
fisubrl
xlat
inc
shrl
xchg
stc
jnp
fidivrs
or
stc
jmp
jp
push
lcall
or
divl
stc
add
scas
inc
mov
add
xor
orl
enter
mov
arpl
lock
or
aas
aas
shl
bound
mov
aaa
lods
pop
add
add
pop
mov
addb
push
mov
xchg
and
mov
pop
xchg
jae
xor
aam
dec
leave
test
or
cmp
jae
inc
fcoml
jns
and
stos
xor
sbb
jmp
jo
iret
mov
jecxz
xchg
xor
dec
add
daa
clc
mov
push
pop
insl
jmp
addl
jnp
jo
cwtl
test
loop
sub
push
ficoml
and
fcmovb
outsb
mov
adc
js
cmc
divb
inc
dec
push
sub
sahf
loope
filds
addr16
leave
mov
cmc
ljmp
mov
ljmp
popf
jb
int
and
fmull
pop
cmc
movsl
shl
stos
shl
adc
in
jbe
aas
scas
dec
jl
and
loope
cmp
dec
push
test
in
into
in
loope,pt
outsl
xor
mov
inc
add
push
movsl
inc
cltd
into
sbb
std
sti
sahf
outsl
jecxz
push
sbb
jg
jae
out
pushl
outsb
jmp
dec
fcmovbe
push
jecxz
mov
and
fsts
shl
fdivrp
or
lock
in
pop
mov
ljmp
mov
cmpsl
jae
cmpsb
shlb
in
cs
fsts
imul
pop
mov
mov
cwtl
in
hlt
cmp
scas
js
jo
out
popf
insb
outsb
cmpsl
dec
push
mov
dec
push
ffreep
addb
sub
xchg
pop
or
popa
cmp
rol
insb
xor
pop
mov
sub
test
dec
popa
ret
inc
loope
mov
add
subb
orl
popa
loope
ffreep
mov
push
sub
outsb
enter
sub
data16
dec
out
les
pop
add
jno
and
divl
mov
lods
enter
cld
cltd
mov
sub
addr16
xchg
popa
pusha
or
add
mov
mov
sub
mov
and
inc
jno
inc
aam
lret
cmp
pusha
stos
cmp
sub
mov
into
mov
mov
imulb
roll
mov
movsl
sub
jne
pop
cwtl
jmp
addps
in
sub
out
push
test
cmc
xchg
into
mov
sahf
pop
mov
outsl
iret
rclb
pop
ja
adc
xor
out
jg
je
xchg
pusha
shrb
arpl
jg
mov
jbe
push
push
ja
push
mov
cmc
jbe
sub
fsub
outsb
dec
or
fnsave
xchg
das
adc
xchg
and
jge
mov
pop
cmc
dec
mul
jne
pop
idivl
bound
sbb
sbb
lods
cmp
pop
out
aam
inc
stos
sti
rcr
inc
out
fs
xchg
test
lret
testl
rolb
xchg
inc
push
jae
into
and
mov
insl
or
pop
out
sub
adc
xor
cli
popa
xchg
movsb
mov
sti
mov
sub
adc
idiv
test
insb
mov
xor
or
pop
gs
mov
sub
out
dec
mov
sub
mov
test
pop
and
jg
push
jge
mov
stos
adc
pop
cwtl
lds
push
sbb
outsl
ja,pn
insb
out
add
adc
xchg
out
ljmp
cmp
push
inc
imull
xor
and
xchg
sub
and
xor
incb
imul
mov
push
or
dec
loop
pop
push
jle
jl
pop
repz
cltd
shlb
inc
jns
and
out
out
jb
scas
adc
xlat
xchg
adc
push
xchg
dec
push
mov
push
push
xor
push
sbb
inc
push
punpcklwd
cmpsb
out
and
cmpb
lcall
das
outsl
push
add
divl
ljmp
das
jecxz
out
push
or
jb
inc
repnz
scas
or
xor
push
stc
lods
sbb
push
cmpsl
pop
inc
xor
jo
or
in
sub
mov
adc
xor
lea
mul
aas
mov
sub
jmp
mov
mov
sarl
je
or
insl
data16
sub
out
dec
pop
ljmp
repz
jb
push
mov
inc
cli
test
loop
scas
out
pop
outsl
push
push
xor
adc
aam
jbe
out
mov
and
out
pop
adc
xor
mov
adc
stos
enter
ret
dec
loope
in
pusha
mov
stos
jle
insl
xor
out
and
xlat
inc
jae
inc
pop
lahf
in
xor
jnp
and
jl
loopne
mov
inc
pop
out
xchg
inc
outsb
inc
subl
push
ja
xchg
cmpl
adc
in
mov
adc
xor
andb
sbb
jne
jb
inc
or
imul
pusha
lods
mov
sub
inc
sub
mov
jecxz
lods
das
push
and
add
insl
jno
jae
out
jnp
pop
cli
stos
sbb
pop
test
and
insl
mov
call
adc
out
movsl
xchg
jb
je
insl
out
pop
sbb
or
adc
xchg
xchg
in
xor
mov
jmp
arpl
dec
out
test
cmp
sbb
stc
and
daa
add
aas
push
out
in
pop
jo
and
loope
jmp
xor
pop
rclb
push
inc
xor
xor
cs
or
sbb
xor
daa
and
xchg
mov
xor
cs
cmc
outsb
in
push
ss
jl
rclb
xor
jg
lods
loopne
sbb
rolb
cwtl
xor
cmp
xchg
adc
and
dec
outsl
mov
jbe
pop
daa
pop
into
xchg
mov
fwait
jle
shl
and
neg
dec
push
pusha
push
sub
shlb
push
pop
data16
mov
jmp
and
test
insb
sub
ja
in
inc
repnz
mov
loope
mov
jp
out
aam
rolb
out
mov
fldcw
pusha
jmp
mov
jecxz
lods
push
cwtl
andb
jp
adc
mov
sahf
cmpsb
pushf
nop
mov
inc
push
lods
dec
fmuls
push
rolb
mov
jbe
xor
inc
push
cmc
sub
clc
out
hlt
pusha
ret
mov
es
dec
adc
js
mov
xchg
jecxz
jbe
insb
mov
pushf
out
lcall
out
stos
inc
mov
push
and
or
daa
std
ljmp
inc
sbb
add
xor
pop
add
cmp
jne
movsl
loopne
loopne,pn
in
mov
push
sbb
push
mov
mov
or
inc
idivl
out
adc
and
shl
push
loope
adcb
and
cmp
leave
lds
repnz
std
orl
out
push
cld
roll
add
push
jae
add
pop
aas
out
xchg
test
cmc
sub
or
inc
inc
ds
shll
mov
aas
and
shll
pop
push
or
mov
mov
out
in
pusha
lahf
sub
lock
jns
rcll
movzwl
call
xor
push
je
aad
push
jmp
testl
repz
mov
fists
pop
xor
gs
shlb
lock
pop
movsl
sub
pop
xor
loop
out
and
cmpsl
cmp
dec
aad
mov
jbe
add
cli
aaa
xor
rep
or
push
xor
inc
cmpsl
and
iret
pusha
ja
sbb
push
popa
jnp
inc
out
adc
in
or
jno
out
mov
push
cmpsb
dec
fbstp
cmp
adc
loop
stc
popf
out
mov
not
add
push
cli
and
xor
pusha
pop
pop
inc
out
sbb
out
mov
xlat
pop
jns
pop
and
dec
outsl
out
xchg
jbe
fmull
dec
sbb
repnz
push
mov
xchg
inc
push
xor
cmp
adc
pop
jge
add
test
pop
imulb
mov
out
xor
ds
outsb
mov
loopne
aam
out
fucom
bound
int3
lcall
int
cmpsb
sti
pusha
rep
sub
icebp
mov
push
xchg
gs
cmp
pop
rcrl
jmp
fs
addr16
xchg
jecxz
or
xor
sarl
xlat
push
xor
stos
mov
in
std
push
loope
inc
out
dec
addr16
cmpb
ljmp
push
test
out
xchg
out
stos
dec
hlt
mov
jl
pusha
add
inc
out
jae
jne
repnz
adc
jp
mov
push
add
into
pop
jo
inc
cmpsb
push
and
pop
call
out
add
adc
adc
test
shlb
pop
ja
clc
xchg
out
push
aas
adc
js
test
aaa
jmp
inc
outsl
jbe
push
adc
enter
popf
das
sub
out
repnz
addb
dec
rclb
push
dec
divl
out
sbb
mov
arpl
pusha
hlt
sub
imull
in
inc
mov
adc
ds
out
jmp
sub
or
arpl
mov
pop
out
pusha
pop
sub
cld
mov
negl
out
push
lods
aaa
or
fstps
xor
pop
lods
call
stos
shrb
mov
pop
xor
or
and
test
sysexit
jnp
inc
dec
pop
repz
sub
push
out
xchg
mov
sbbb
outsb
mov
cmp
add
jmp
dec
adc
jl
jne
sbb
push
bound
inc
add
out
cmp
pop
out
add
je
inc
loope
xor
ljmp
jmp
bound
movsl
rolb
xchg
mul
ja
sub
icebp
push
into
out
cmp
pop
bound
inc
dec
inc
not
or
bound
das
xchg
pop
hlt
fidivs
dec
dec
and
adc
dec
fdivs
add
inc
jle
add
sub
jo,pt
test
jmp
ja
out
sub
das
xchg
xorb
aam
fldl
adc
cmp
mov
fildl
pusha
into
sub
cld
mov
cwtl
push
fs
jo
or
push
lahf
sbb
jne
jle
sbb
outsl
fwait
jg
loopne
add
xchg
dec
xchg
add
sahf
pop
push
and
stc
in
push
dec
jle
hlt
xor
inc
sbb
in
adc
sti
sbb
out
aaa
cmp
pop
fwait
xchg
jg
andb
pusha
xchg
dec
idivl
jp
pop
xchg
mov
add
push
cmpsl
or
outsb
pop
inc
cmp
outsb
inc
jge
fsubrs
push
push
call
out
xchg
push
sbb
jo
addr16
outsb
ss
inc
inc
outsl
mov
xchg
ljmp
lcall
insb
mov
dec
dec
subl
cmp
sbb
mov
pop
dec
cmp
adc
out
je
scas
shrb
decl
adc
mov
ss
out
aam
rolb
out
lcall
sti
xor
pusha
out
xor
xchg
aaa
jp
jae
cld
out
je
gs
fiadds
inc
push
sahf
push
js
fcomps
push
movsb
popa
or
cmp
inc
shrb
and
jle
lods
jecxz
push
jg
pusha
jmp
mov
repnz
idivl
mov
lea
jbe,pn
daa
cltd
in
or
or
pop
stos
inc
gs
mov
xorb
fwait
jecxz
push
jo
arpl
push
out
xor
movhps
movsl
adc
lds
lcall
pop
js
mov
out
jmp
movl
int3
inc
outsb
add
jl
dec
aaa
movsb
inc
xor
lea
or
mov
ljmp
jmp
push
popf
inc
fs
pop
xor
sbb
aas
mov
cwtl
es
xchg
or
pop
loope
clc
push
out
inc
pushf
cs
je
lods
ja
push
fsubl
pop
or
das
je
out
mov
in
pusha
push
pop
sub
cli
mov
out
movl
sbb
inc
roll
out
xchg
or
std
filds
mov
jge
add
fwait
int3
mov
jl
xchg
jecxz
hlt
outsb
ljmp
jle
mov
xor
addl
out
cmpsl
fs
addr16
hlt
js
adc
pop
stos
sarl
insb
add
aaa
out
jg
outsl
jecxz
sbb
cmp
lret
out
jno
jbe
jns
add
push
lds
fnstenv
scas
mov
pop
pop
repnz
out
sbb
test
pusha
cmp
and
xchg
repz
and
adc
lret
xchg
xchg
jecxz
dec
out
outsl
xorl
inc
pop
mov
cmc
xor
test
xchg
push
loope
sbb
and
out
rcrl
cmc
pop
jle
add
mov
inc
push
mov
push
sub
jne
icebp
incl
and
idivl
mov
aam
push
out
mov
dec
mov
insl
pusha
and
lahf
mov
xchg
xchg
pop
cs
lcall
nop
cltd
inc
ss
or
dec
inc
out
mov
pusha
xchg
outsb
test
pusha
mov
jl
dec
sub
call
xchg
jmp
cwtl
loopne
or
xchg
sbb
xchg
inc
mov
xor
mov
popa
jecxz
pop
out
adc
sub
cmp
fs
ljmp
idivl
mov
das
jecxz
jecxz
icebp
xchg
add
inc
out
insb
xchg
fmuls
add
adc
push
dec
inc
sahf
fldl
inc
and
mov
aam
push
test
insl
rol
mov
inc
test
imul
jmp
and
in
sbb
out
add
pushw
adc
rorb
test
mov
dec
testl
sub
mov
xchg
mov
push
das
scas
shll
test
adcb
xor
xchg
hlt
pop
out
sti
les
push
jo
sub
lret
test
sbb
sarl
flds
int
pop
jmp
cmp
mov
pushf
out
sbb
xor
push
movsb
out
sub
or
divl
ja
out
and
fsubl
cltd
daa
js
mov
adc
sub
xor
lret
lods
jge
mov
in
repnz
xchg
cli
push
ljmp
and
lds
sub
out
out
sahf
insb
lahf
repnz
pop
push
ds
cmp
inc
jo
mov
out
testl
cmp
inc
push
out
pop
adc
lcall
clc
js
mov
out
inc
lret
push
sub
xchg
out
mulb
stos
sub
cmp
add
xor
ret
jle
sub
out
divb
popf
enter
inc
jo
mov
xor
fsubrs
push
int
lahf
jecxz
dec
sti
fisubl
inc
mov
in
xchg
movsl
sub
gs
dec
in
mov
and
dec
push
xchg
bound
out
cmp
mov
mov
out
add
insb
pop
test
add
aas
inc
subb
repnz
ss
in
imul
dec
outsb
lock
push
clc
add
sarb
jo
fdivl
mov
adc
sbb
sub
int
jns
bnd
out
jnp
add
test
cmp
dec
lea
sbbl
add
int
sahf
add
dec
xchg
clc
xchg
xor
xlat
sbb
push
sbb
jl
adc
int
js
int3
out
in
sar
cs
fstpl
mov
add
sub
out
mov
add
push
jl
inc
roll
fsubrp
pop
cltd
xlat
jnp
xor
out
enter
cmp
aas
out
jo
adc
int3
jl
clc
inc
cltd
out
dec
jp
dec
mov
mov
test
hlt
mov
sbb
js
rolb
lcall
fcompl
out
ds
and
subb
mov
pop
arpl
mov
out
pop
out
pop
loop
into
and
pop
push
insl
das
aas
mov
xchg
out
cmp
movsl
sbb
dec
out
cmp
addl
push
cmp
add
js
xchg
out
xor
imul
fadd
xor
pop
mov
outsl
fwait
addr16
mov
dec
or
adcl
lea
pusha
out
adc
xchg
mov
mov
out
cli
idivl
aas
fwait
in
adc
stos
jno
out
jmp
aam
outsb
mov
adc
push
in
xor
and
imul
add
in
cmp
test
out
dec
loop
mov
out
rcl
sbb
jo
mov
pop
jb
out
jnp
push
fstps
test
push
inc
gs
push
adc
imul
test
stc
inc
out
push
int3
dec
and
inc
out
movsb
cmc
xchg
loop
ret
mull
add
xchg
icebp
std
sbbl
sub
icebp
and
in
test
mov
cmp
pop
inc
mov
add
outsb
pop
inc
jecxz
stos
out
rcl
daa
es
adc
xor
test
ljmp
dec
mov
popa
pop
out
push
mov
or
je
std
repnz
lcall
cmp
shlb
push
cmp
mul
clc
mov
adc
test
outsl
ljmp
arpl
es
ss
icebp
int
aad
nop
fcmovu
push
cmp
out
mov
cltd
mov
push
jp
cmpsb
cli
out
jo
out
sub
subl
xchg
or
shll
out
inc
pop
aas
mov
pop
adc
mov
cmp
pusha
jo
popf
call
repnz
or
mov
out
int3
imul
popf
pop
jg
repnz
loop
inc
xchg
mov
mov
shr
fwait
mov
xchg
lret
out
ja
loop
sti
ds
and
cmpsl
insb
and
jmp
and
mov
mov
movsb
ret
xor
xor
stos
jmp
dec
aad
ret
mulps
xorb
cmc
fisubrl
fwait
out
repz
adc
pop
test
xor
fidivrl
inc
sub
jecxz
mov
fstps
adc
fucomp
pop
sbb
add
add
and
repnz
xchg
adc
jmp
xor
xchg
fldenv
inc
enter
and
push
out
xor
inc
repnz
rorb
repz
sub
xchg
fisttps
out
jae
movsb
pop
or
test
out
flds
out
cs
mov
dec
out
jp
mov
inc
cmp
xor
pop
icebp
cmp
out
cmp
shl
lea
fdivr
cmc
mov
lods
push
inc
repnz
push
out
rolb
add
lret
lds
testb
out
loope
dec
cmp
sub
out
fbstp
jns
ljmp
in
and
xchg
inc
xlat
lock
jg
aaa
jo
push
dec
push
out
push
push
in
mov
xor
inc
mov
out
lods
cwtl
data16
or
out
lcall
loopne
push
push
out
decl
adc
orl
ds
push
jl
clc
je
or
xor
insb
inc
add
lock
aaa
cmc
xor
jmp
popa
lret
daa
dec
xchg
out
rclb
aaa
test
pushf
out
test
xchg
out
add
xchg
sub
sahf
out
clc
cwtl
test
ficomps
dec
dec
out
les
inc
fsubs
push
out
jmp
rcr
icebp
out
pushaw
je
aam
pushf
push
out
sub
jnp
cmp
notb
and
mov
out
and
pop
mov
aas
lods
cmpl
enter
cli
or
jns
mov
dec
leave
not
jne
stos
lods
xor
lods
jl
test
lahf
hlt
loop
out
fsubp
test
add
call
gs
and
xor
lock
lret
out
mov
jne
adc
jle
dec
xchg
inc
aam
pop
icebp
insb
xchg
sub
ret
fidivrl
xor
add
cmpsl
mov
shlb
or
dec
xor
int3
cmp
cmp
es
and
inc
fwait
mov
out
mov
xchg
out
sbbl
imul
sub
fistps
popa
push
into
xor
mov
mov
daa
pop
bound
popa
lock
addr16
pop
scas
jg
ljmp
imul
rcrl
xchg
jl
subb
add
push
jmp
inc
aas
test
xor
push
popl
enter
mov
mov
cltd
xor
out
ret
shl
sbb
out
add
stos
mov
dec
push
xchg
popf
test
out
pop
cli
dec
inc
cmpsl
xor
std
out
out
mov
lods
jp
icebp
out
incl
flds
arpl
inc
popa
sbb
out
out
xor
rcrb
jecxz
popf
sbb
out
test
shrb
out
inc
jg
jne
jge
ljmp
xchg
xor
je
inc
mov
add
jle
cltd
push
jecxz,pt
sub
sub
mov
scas
pusha
repnz
jecxz
jae
fnstsw
pop
andl
cmp
test
jne
out
xchg
xor
stos
ja
popf
and
gs
stos
aad
jno
push
and
mull
fwait
out
aas
ds
adc
cmp
pop
cmpsl
mov
cmp
cmpsb
pop
mov
pop
es
out
adc
pop
fucomp
je
add
and
out
in
pop
aaa
inc
jno
adc
es
inc
sarl
mov
icebp
push
out
mov
stos
out
inc
mov
shll
call
loope
cmc
push
push
fcmovne
out
mov
dec
dec
arpl
inc
and
fisubrs
js
sbb
loopne
sbb
les
jno
das
and
popa
jnp
dec
insl
mov
mov
mov
inc
sti
xor
icebp
addr16
ret
jmp
enter
insl
or
pop
dec
jb
pop
and
push
clc
or
push
outsl
xor
pop
add
das
sbb
outsb
xor
out
pusha
std
cltd
push
lods
jb
in
cvttps2pi
movsb
fdivs
call
pop
xor
out
cwtl
mov
xor
add
imul
push
cmp
xchg
cmp
lea
xchg
std
lods
cmc
cmc
adc
hlt
ret
dec
pop
js
mull
adc
add
dec
addl
scas
decb
jnp
out
shr
movsb
imul
cwtl
rcll
push
push
jp
test
jno
cmp
out
ret
repnz
popa
out
cli
andb
or
jo
stos
xor
mov
sbb
mov
mov
aad
out
jae
addr16
jb
out
mov
pop
xchg
cmc
idivl
mov
out
outsb
call
sbb
fistpl
xlat
fwait
out
les
or
pop
dec
repnz
es
jle
in
mov
xchg
pop
lahf
loopne
cmc
out
xchg
in
scas
les
xor
push
leave
push
int
mov
cltd
in
cld
ljmp
fidivs
pop
ss
xchg
jecxz
mov
mov
inc
lds
mov
mov
ret
mov
in
mov
out
out
cmpl
je
sub
adcb
adc
mov
cmp
xor
jmp
repz
in
mov
lcall
test
mov
dec
dec
int3
into
xchg
dec
xor
icebp
mov
jecxz
and
mov
dec
fwait
cmpsb
divl
popl
mov
dec
out
loopne
in
xchg
fistl
daa
push
xor
out
jp,pn
mov
out
sub
cmpsl
cmp
push
out
pop
stos
popa
test
inc
mov
mov
xor
jmp
push
jmp
or
lcall
call
scas
push
icebp
lea
adc
out
insl
adcl
sub
pop
and
das
jge
mov
call
shll
out
jo
repnz
lods
mul
rcrl
ljmp
movsl
jg
mov
popa
sbb
xchg
lret
cmp
popf
push
out
xor
pop
iret
cmp
repnz
xor
fiaddl
add
push
clc
adc
fsts
or
in
or
pop
ret
out
das
fbstp
pop
sbb
aad
out
clc
pop
int3
xchg
jno
cltd
push
icebp
pop
mov
mull
xor
hlt
ljmp
out
pop
gs
jns
jge
out
shlb
mov
out
xchg
loopne
sarb
inc
out
xchg
sub
test
out
das
shl
dec
out
pop
pop
out
int
adc
push
adc
out
adc
cmp
xchg
push
pop
loope
je
test
clc
mov
mov
add
mov
shrb
sbb
scas
mov
sub
mov
cmp
push
xchg
mov
push
mov
pop
mov
lret
inc
lock
out
add
push
insb
mov
flds
out
adc
daa
or
dec
sub
out
loop
cltd
fs
lock
out
xor
or
aad
bndstx
cmp
add
out
icebp
xchg
int
test
xchg
lds
scas
int3
lcall
push
subb
cmpl
mov
mov
bound
sub
out
or
fcoml
mov
repnz
inc
in
push
dec
push
inc
aad
sbb
out
cmp
jno
jle
popa
gs
fbld
insl
push
cmpsb
pop
daa
cld
cmp
aam
add
cvtps2pi
pop
xor
push
cmp
inc
fcomip
adc
push
cmpsb
inc
mov
in
fsubrp
lea
jg
rcl
xchg
out
push
add
popa
cmp
mov
pop
movsb
out
pop
adc
xchg
dec
push
or
int
lahf
cmp
out
les
jae
push
jle
inc
roll
xor
fcoms
and
pop
dec
push
scas
das
inc
in
inc
inc
daa
fs
mov
push
rol
shl
xchg
std
sub
fbstp
xchg
repnz
mov
pxor
dec
inc
push
inc
ds
out
ror
mov
dec
inc
xchg
pusha
xor
loope
inc
fistpl
push
push
push
add
repnz
cwtl
adc
lret
ficoml
stos
sub
cld
push
jne
mov
out
xor
add
call
mov
pop
fcomip
mov
imul
scas
lahf
jle
loopne
ljmp
stos
gs
jno
cld
scas
push
push
imul
and
xchg
xlat
pop
or
leave
addr16
ljmp
or
daa
dec
mov
jo
lods
or
loope
outsl
xor
out
mov
mov
cmp
aas
jo
lods
fbld
imul
sarl
loope
cwtl
or
lock
xchg
out
out
and
inc
out
sbb
sti
and
xchg
push
add
lock
cmc
sub
jo
loop
xlat
pop
push
cwtl
jne
jmp
in
push
bound
cmc
jg
out
jecxz
add
inc
lods
jbe
xor
fstps
dec
call
lea
jmp
and
mov
xchg
and
js
jecxz
mov
lret
ljmp
sub
pop
shll
or
mov
icebp
je
sbb
add
icebp
loope
arpl
in
xchg
out
jae
and
xorb
fs
dec
mov
mov
cltd
inc
call
das
clc
cmp
sbb
std
pop
popf
lods
stos
das
cmpsl
out
fmull
cli
aaa
cmpsb
jmp
out
push
lock
fisubl
mov
stc
dec
xor
scas
add
outsb
sbb
jne
fldl
sub
lock
nop
daa
pop
out
decl
push
push
testb
stc
push
sub
leave
ret
pop
fcompl
mov
jle
jno
xchg
xchg
cli
ja
xor
fidivs
out
scas
push
sbb
mov
test
lret
loope
and
jp
mov
adc
mov
ss
in
aad
pop
push
lcall
lea
out
adc
jns
clc
dec
xor
lcall
add
fs
pop
ljmp
push
or
sahf
pop
mov
imul
and
mov
movsb
and
xchg
ljmp
outsl
add
jmp
aas
add
imul
xchg
cmp
testb
adc
cmc
jns
insb
inc
stc
ficoml
mov
xchg
cmp
clc
or
xchg
out
sub
pop
testl
mov
leave
adc
in
ds
les
loope
testl
movsb
out
fisttpl
xchg
out
call
fs
inc
or
cmp
xchg
out
mov
in
mov
lods
pop
and
nop
call
inc
shr
insb
int3
inc
or
imul
shlb
add
mov
jmp
jo
repnz
shrl
insl
testl
push
loop
popa
add
rorl
xor
xor
xchg
sub
xor
mov
rolb
dec
shll
mov
testl
std
cmpsb
pushf
ret
fmuls
inc
dec
jo
cltd
cmp
inc
jecxz
mov
ficompl
lods
nop
inc
mov
adc
push
push
pop
insb
in
repz
enter
mov
and
inc
xor
shrb
push
xchg
out
pop
mov
mov
bound
fmuls
data16
call
ljmp
out
fisttps
sub
scas
repnz
fadds
pusha
push
jns
mov
out
jmp
icebp
stos
sbb
fucomi
xchg
push
ja
push
dec
xor
inc
jl
adc
jb
jne
jecxz
push
and
inc
pop
and
push
inc
mov
xchg
mov
loop,pt
jmp
lods
inc
push
fisubrl
jmp
arpl
out
push
sub
mov
sbb
xor
imul
out
fcomip
popa
mov
shrl
jnp
xchg
xchg
stc
cmpb
or
add
mov
jmp
adc
outsb
xor
and
jne
or
outsl
shr
imulb
mov
je
ds
sbb
inc
fists
adc
xchg
aaa
sub
inc
inc
divb
jle
jmp
hlt
repz
test
mov
out
cltd
jno
popf
mov
rolb
or
dec
or
fcompl
jb
xor
jae
jno
sbb
sub
popf
sti
out
xchg
aaa
xchg
movsl
mov
cmp
push
push
ljmp
inc
xchg
mov
sbbl
cmpsb
icebp
std
out
out
xchg
mov
mov
out
sahf
in
dec
test
mov
out
push
fwait
or
imul
jnp
inc
mov
call
insb
out
cmc
idiv
push
loop
jb
aaa
push
pop
loopne
cmc
es
mov
mov
aas
out
outsb
xchg
shll
or
xor
push
bound
dec
out
ljmp
jmp
stos
incb
sbb
pop
xlat
pop
imul
das
push
pop
out
je
or
xor
xchg
mov
mov
inc
out
sub
in
jle
push
repnz
js
lods
push
out
cmpsb
pop
arpl
jno
sbb
cld
in
pushf
or
cmpsl
jecxz
fdivl
pop
stos
dec
dec
pop
add
push
mull
lea
out
jecxz
xchg
mov
push
sbb
jmp
out
pushf
sub
mov
lret
cmpsb
push
out
in
pop
je
or
mov
mov
stos
xor
jge
bnd
dec
xor
addr16
iret
jne
inc
jle
lods
pop
inc
lods
bound
lds
mov
push
jne
mov
add
out
cmp
xchg
scas
out
shrb
mov
enter
daa
ja
add
mov
xor
loop
jl
dec
movsl
mov
or
in
jge
js
out
lcall
mov
pop
loope
imull
cmp
pop
xchg
mov
out
mov
inc
and
inc
out
js
pop
dec
xlat
mov
dec
out
test
cmp
in
inc
out
add
xor
out
push
mov
lret
dec
ret
push
adc
and
int
cmp
fwait
or
enter
in
inc
inc
xor
push
scas
cmp
or
out
mov
dec
fildll
mov
xor
lret
jae
pusha
out
and
inc
cmp
popa
cli
add
sahf
dec
cmc
sbb
out
andb
shrd
lds
rorl
imul
out
fwait
lods
jmp
mov
or
mov
call
dec
lods
sbb
add
jl
cmpsb
add
mov
out
fs
dec
fsts
fisubrl
in
pushf
scas
or
add
insl
mov
xor
pop
mov
pop
or
dec
mov
shlb
repz
pop
loope
psrlq
add
and
adc
jmp
cli
vpminsw
out
jmp
mov
pop
mov
lret
out
inc
adc
popa
lock
mov
mov
jo
add
ja
mov
fiadds
cmp
in
inc
loop
lret
outsb
adc
out
aad
idivb
add
push
cmpsl
xchg
scas
mov
push
lea
pop
push
jp
je
inc
movsl
out
push
jl
aam
outsl
inc
out
insb
pop
stos
insl
loop
ljmp
cmp
aaa
adc
out
pop
test
ljmp
notl
cmp
call
mov
out
ret
xchg
clc
stos
pusha
inc
out
xchg
mov
std
aam
imul
add
push
int
into
add
scas
or
push
inc
push
mov
jno
xor
repz
int3
mov
add
insl
testl
shr
nop
int
int3
cltd
out
jbe
jecxz
push
ds
out
mov
xchg
lret
adc
mov
or
lea
xor
xor
dec
out
sbb
dec
sub
clc
push
cmc
sbb
or
push
xorb
out
mov
cld
test
out
cltd
popf
cmp
adc
inc
mov
out
pop
pop
mov
fstl
cmp
and
add
pop
mov
jmp
mov
jmp
xorb
fcomps
add
stos
clc
loop
sbb
out
int3
pop
fldcw
imul
imul
cwtl
sub
in
out
lret
sbb
pusha
ds
add
jecxz
xlat
idivl
add
inc
push
pop
rorl
inc
imul
xchg
push
and
inc
gs
add
xor
int
cmp
in
data16
rcr
repz
outsb
mov
mov
sub
imul
mov
pop
cmpsl
adc
sahf
in
scas
out
push
adc
cmp
adcl
pop
lods
push
pop
out
sbb
out
push
movsl
cmp
fnstenv
push
inc
and
and
dec
inc
out
mov
push
incl
fiadds
sub
enter
sub
sub
push
js
test
out
and
loopw
testl
push
out
jne
dec
sub
and
icebp
outsb
xchg
xchg
mov
or
add
fs
inc
jae
mov
and
push
outsb
movsl
add
add
out
iret
lahf
loope
inc
inc
or
mov
push
pop
pop
and
jnp
fbld
ljmp
mov
sti
or
pop
mov
push
icebp
adc
movsl
into
cmp
repnz
xor
bound
movsb
or
xchg
in
and
dec
cmpsb
out
aad
xchg
sbb
test
sbb
std
mov
add
mov
sbb
push
xchg
mov
lods
jecxz
lahf
out
jecxz
idivb
mov
sbb
jmp
xor
mov
mov
cld
loope
cmp
push
xor
xor
into
push
jb
adcl
test
xchg
addl
fwait
mov
ljmp
inc
in
add
cld
repnz
push
clc
icebp
sbb
mov
xlat
hlt
mov
jle
add
ret
mov
sti
popa
icebp
fstl
stc
cli
mov
inc
scas
imul
rcrb
and
cmc
arpl
enter
frstor
and
mov
cmpsb
adc
mov
xor
jmp
stos
in
rcrb
pop
cmc
outsl
jae
cmp
stos
aaa
mov
call
sub
jns
test
pop
xchg
add
fdiv
jg
dec
repnz
cmpb
shlb
sbb
adcb
mov
mov
fisubrl
and
dec
fistps
push
scas
ds
jo
adc
xor
jae
les
popa
add
aas
mov
mov
out
add
scas
movsl
fptan
ret
jecxz
ljmp
jg
idivl
test
ja
sub
stc
fdivr
cmp
outsb
mov
pop
std
mov
push
arpl
inc
call
mov
adc
xor
mov
jmp
sub
jmp
xchg
xchg
inc
cmp
out
cwtl
lcall
nop
push
mov
lods
cmp
pop
out
inc
imul
ljmp
inc
xlat
xchg
ret
mov
mov
jb
push
jns
out
and
push
les
sbb
fwait
cmp
cmc
mov
mov
mov
dec
mov
out
neg
int
pop
push
xchg
mov
or
jo
ret
xchg
xlat
cmp
out
pusha
sub
dec
out
data16
icebp
mov
idivl
jg
adc
cld
in
sbb
aad
out
cmp
pop
xor
xchg
add
add
lock
imul
popf
movsb
cld
fs
xchg
and
inc
cs
cmpb
push
jecxz
repz
into
push
push
adc
call
int
sbb
jo
ret
pop
testb
out
rcll
ss
push
sbb
cmp
xchg
ret
dec
mov
insl
or
push
xor
leave
pop
add
scas
repnz
mov
xorb
ss
inc
sbb
adc
jno
pop
and
in
pop
into
push
out
sub
daa
pop
loopne
add
or
mull
cmp
fucomip
xor
call
out
dec
fistpl
das
out
push
adc
out
jmp
outsb
add
stos
loop
idivb
adc
cmp
test
sbb
scas
adc
push
ret
in
outsl
mov
ds
jl
xchg
aad
pop
in
idivl
pop
sbb
xchg
jmp
mov
mov
aad
notl
jle
clc
push
xor
inc
shlb
in
jmp
push
push
test
dec
sahf
lods
fists
test
rorb
sub
or
jle
test
sbb
imul
mov
jns
add
jecxz
test
mov
cmpsl
push
cmp
outsb
xor
inc
andl
adc
jmp
scas
shrb
dec
ss
inc
pusha
lcall
push
push
or
and
sbb
mov
int
pop
cltd
sti
mov
jmp
hlt
ds
jg
ja
sarl
cmpsb
mul
outsl
ret
mov
repnz
cmp
mov
mov
aas
push
mov
hlt
xor
loope
jp
push
lret
scas
dec
pop
sbb
jmp
imulb
imul
sarb
out
dec
arpl
mov
xor
pop
pop
shl
loopne
add
cld
add
add
in
out
popf
lret
mov
xorb
lret
inc
fidivrl
stos
sar
outsb
stos
div
cmpsl
and
cmp
stos
out
pusha
stos
les
jp
and
pop
mov
out
jne
mov
in
sub
inc
shrb
sub
clc
sub
fwait
shll
test
xchg
aaa
fsub
call
adc
data16
inc
xchg
dec
aaa
pop
insl
out
js
cwtl
sub
out
cmp
xor
push
sahf
out
add
lret
testb
or
and
or
into
mov
adc
loopne
mov
movsl
jp
mov
daa
clc
pop
scas
dec
out
mov
adc
push
sbb
and
in
mov
imul
cltd
xor
popa
out
rorb
dec
ret
std
inc
fadds
jbe
in
dec
pop
js
dec
push
cwtl
call
push
adc
shll
mov
mov
pop
out
inc
lcall
jnp
mov
pop
mov
loope
mov
fnclex
daa
jg
pop
cmp
cmp
std
inc
pop
enter
cmc
imul
shl
push
xchg
push
mov
xor
out
jb
xchg
outsl
mov
out
mull
mov
cli
inc
in
or
aam
mov
mov
push
mov
mov
subb
ljmp
inc
mov
push
xor
and
out
test
addl
popa
ss
call
out
mov
xchg
and
std
pusha
pop
inc
mov
mov
loope
hlt
decl
mov
fistpll
push
inc
mov
cmp
cmpsb
xchg
in
popa
lock
orl
xchg
cld
push
out
push
addr16
inc
mov
stos
pop
pushf
xchg
ja
or
fidivrl
push
andb
pop
xor
outsl
fisttpll
rolb
fiaddl
cmp
lret
inc
rorb
popa
pusha
out
shll
jnp
sarl
std
add
add
add
add
fcoms
ds
adc
or
xor
rcll
or
cmp
out
loope
xor
cmc
shlb
incl
push
cltd
dec
sbb
fmuls
inc
dec
mov
fwait
shlb
inc
pop
pusha
aas
testl
fcoms
ret
ss
addr16
cmc
test
jbe
int
scas
jmp
cmp
call
std
dec
mov
cmp
jecxz
mov
test
stos
out
cwtl
outsb
jno
out
jecxz
outsl
sub
push
pop
out
sbbl
mov
cmp
mov
xchg
imul
data16
jge
mov
add
int3
negl
jbe
test
push
sub
jmp
shr
repz
pop
jb
xor
mov
out
cli
sti
in
popf
inc
push
or
ret
test
out
adcb
pop
sub
cmp
arpl
ljmp
lret
std
aaa
cli
pop
out
push
and
into
rolb
out
pop
mov
andl
in
dec
das
aaa
pop
lret
inc
fists
dec
loop
out
scas
out
jl
iret
movsb
push
add
jecxz
pop
lods
cmc
rcrb
add
push
adc
or
ss
aad
out
hlt
push
in
sti
mov
out
aad
jecxz
xchg
dec
ja
mov
xchg
out
cld
sbb
adc
setg
xlat
pushf
pop
push
mov
cmp
adc
insb
bound
cs
xchg
jb
test
loop
inc
sub
mov
sub
stos
xor
mov
ficoms
pop
test
int3
cmpsw
jbe
out
fcoms
and
in
pop
jnp
into
mov
clc
out
movups
or
adc
loop
out
mov
or
lret
inc
test
aas
push
jg
movsb
mov
sub
rcrb
fmul
outsb
xor
inc
cmp
jge
lahf
imul
out
ljmp
sub
mov
out
dec
xchg
ja
adc
int
fldl2e
imull
out
icebp
fidivrs
out
add
sahf
int
add
out
and
idivb
nop
or
pop
out
lcall
inc
xor
xor
repz
mov
enter
in
and
sbb
inc
mov
add
lcall
mov
mov
not
je
inc
cmpsb
mov
cmc
lret
aad
imul
jle
adc
and
xchg
and
mov
testl
sub
cltd
out
or
loop
mov
xchg
test
adc
shlb
mov
ret
dec
adc
in
mov
fcomi
push
popa
pushl
mov
out
loope
add
add
in
or
adc
and
pop
rcrl
jmp
cmp
xor
jo
xchg
lock
scas
ret
fdivrl
test
sub
adc
out
xchg
push
mov
or
mov
jp
out
enter
push
jnp
in
push
lods
cli
inc
xchg
sbb
imul
scas
pop
mov
ret
mov
adc
push
push
jb
lods
fwait
inc
hlt
out
jecxz
sub
pop
dec
mov
out
iret
shr
xchg
fnstenv
loop
push
aas
fbld
negb
imul
mov
and
xchg
xor
cmp
push
pop
cs
push
jmp
push
mov
push
xlat
fs
movsb
inc
je
out
mov
lcall
jae
jg
mov
lea
outsl
cmc
lods
movsb
push
iret
and
mov
cmpsb
xchg
sbb
cmp
out
jo
sub
add
addr16
movsl
lods
sbb
arpl
cli
and
in
lock
adc
sti
mov
roll
jg
out
icebp
pop
or
sbbb
push
out
mov
xchg
rep
sub
out
adc
inc
fcomps
insl
divl
out
mov
xchg
lahf
out
divb
pop
call
adc
mov
jnp
out
cmp
cmp
pop
movsb
movsb
inc
out
cmp
repnz
nop
jecxz
addr16
push
jmp
cmp
mov
mov
repnz
inc
adc
push
sbb
lret
push
dec
xor
outsl
sar
jo
jne
or
scas
mov
jp
out
mov
nop
xor
mov
fwait
ja
and
in
nopl
iret
jl
add
leave
push
fwait
sub
mov
out
or
nop
test
jno
xchg
dec
mov
jo
outsl
or
sub
pop
loop
add
cmc
ss
inc
cmpl
hlt
mov
add
out
fs
cld
addr16
mov
dec
popa
xor
inc
cmpb
mov
aaa
js
jecxz
inc
push
push
cltd
cmp
call
je
push
jo
sahf
shll
testl
push
xchg
mov
xor
inc
shrb
xor
inc
inc
rclb
inc
inc
mov
cmp
xchg
mov
test
mov
pusha
mov
add
pop
push
stos
pop
in
pusha
sbb
and
and
mov
push
add
sbb
inc
push
xchg
cmpl
fs
inc
sub
xor
inc
xlat
pop
inc
loop
mov
shl
jb
bts
xor
cmp
arpl
jno
push
xor
push
jne
aas
test
movsb
shll
inc
cmp
inc
stos
in
add
ss
imul
iret
jecxz
ss
lahf
push
xchg
xchg
lods
bound
jecxz
push
jecxz
sub
sub
hlt
and
ja
inc
outsb
arpl
pop
pusha
call
icebp
and
push
and
jecxz
push
mov
pop
pusha
and
clc
ret
push
push
mov
pop
sbb
insl
insb
push
fildll
lret
imul
pusha
mov
inc
das
inc
scas
dec
mov
rorl
push
pop
inc
sub
loopne
sub
cltd
fdivrp
hlt
arpl
divl
mov
loop
mov
xor
das
pop
xor
and
and
and
and
out
mov
rorl
pop
scas
xor
or
testl
push
add
punpcklbw
in
fcomps
add
bound
push
jecxz
int
push
adc
clc
imul
inc
inc
dec
sub
xchg
enter
fdiv
loop
divb
pop
in
rol
aaa
sub
cld
fsubrl
push
push
dec
not
xor
sub
out
pop
pop
loope
test
loopne
popa
inc
push
mov
fimull
std
fidivs
adc
push
in
and
inc
popa
shrb
icebp
xor
mov
push
divb
es
repz
loop
xor
and
in
ja
aaa
sub
stos
push
jbe
arpl
sarb
div
cmp
jmp
outsb
lds
scas
mov
sbb
jnp
sbb
loop
in
lret
ds
mov
mov
xchg
mov
jo
rorl
clc
add
jmp
cmp
out
cmpsb
mov
push
test
xchg
out
fwait
push
rclb
push
mov
mov
and
or
divl
dec
mov
push
inc
out
pop
inc
mov
out
rcrl
inc
mov
sub
xchg
sub
ja
mov
cli
ret
and
jp
ret
hlt
inc
imul
in
mov
stos
out
outsb
add
cmp
cmp
imul
pxor
pop
aas
mov
loopne
out
and
pop
mov
lret
jo
fxch
xchg
add
mov
jl
out
fwait
pop
in
ds
pop
push
cmp
xchg
outsb
and
inc
clc
cli
scas
mov
push
push
and
loop
popf
arpl
sub
sbb
aaa
mov
movsb
xor
jmp
les
mov
enter
fsubr
sahf
lea
repnz
lret
and
mov
pop
jmp
xlat
pushf
mov
mov
popa
rcrb
lock
test
mov
push
pop
popa
sub
mov
and
push
stos
mul
dec
cmp
pop
dec
sbb
push
xchg
repnz
nop
hlt
jg
nop
cwtl
in
sbb
insl
jns
data16
fcmovnu
lea
jmp
push
add
or
jmp
xorl
jo
call
fwait
and
ret
jg
push
jmp
cli
test
ret
xchg
shlb
inc
sarb
inc
pop
push
icebp
scas
sahf
insb
jecxz
jg
out
mov
jbe
arpl
loope
popf
push
dec
pop
push
in
sub
mov
adc
mov
sub
inc
loopne
out
adc
inc
lahf
jecxz
outsb
lods
mov
and
stos
insb
pop
ja
or
sbb
fdivr
nop
jle
mov
cmp
mov
movsb
out
pop
jmp
add
sarl
scas
xor
and
mov
mov
call
add
dec
popa
xor
jge
lcall
sub
fdivrl
xchg
bndldx
push
addps
pusha
loopne
dec
out
mov
out
push
sub
test
xchg
pop
sub
cmc
test
mov
xchg
fistpl
inc
scas
loopne
decb
push
out
mov
xchg
inc
xor
adc
dec
rcr
lahf
in
out
mov
movsb
pop
mov
and
test
loopne
push
pop
inc
out
sbb
aad
jge
shr
adc
andb
sahf
jbe
jecxz
movsl
imull
add
out
fnstenv
nop
sub
aaa
mov
and
jnp
inc
setae
push
lock
icebp
inc
dec
repz
inc
out
jo
inc
aas
aam
data16
mov
sti
sub
add
out
dec
popf
adc
out
xchg
push
cli
mov
inc
mov
pmaddwd
and
cld
mov
dec
and
jmp
mov
das
push
push
or
xchg
insb
mov
rclb
pop
lods
push
mov
cwtl
outsl
pop
mov
inc
mov
sti
shrb
jns
call
addr16
shll
mov
je
insl
adc
push
push
or
xor
test
inc
inc
ja
inc
or
bound
popa
not
pusha
stos
shl
adc
mov
ror
test
pop
dec
movsl
bound
out
test
fildll
dec
mov
daa
and
jb
adc
adc
pop
rcrb
out
ljmp
xchg
and
ds
out
aam
into
shl
movsl
stos
jno
jp
adc
pop
push
jnp
das
cld
outsl
inc
jle
repnz
jae
in
outsb
sahf
xchg
out
gs
dec
push
loop
xor
inc
ljmp
inc
jae
orb
ret
pop
pop
push
sub
in
int
cs
call
jnp
pusha
xor
xchg
pop
addb
cmp
stc
loopne
out
jo
test
negl
push
cs
pop
out
je
icebp
lret
iret
imul
xchg
sbb
mov
xchg
out
lcall
jns
mov
popa
lcall
inc
mov
shlb
cmpsb
cmp
outsb
rolb
add
mov
mov
out
push
sbb
sub
xor
and
cmc
add
push
sbb
fs
add
bnd
insb
sbb
addr16
jo
mov
xchg
pop
push
cmc
shll
pushf
cmpsb
je
pop
dec
pop
inc
inc
loope
sbb
das
xchg
add
mov
mov
jg
pop
push
out
cmc
or
xor
pop
jae
and
cld
jmp
add
and
add
xchg
xchg
mov
xor
adc
push
roll
shlb
out
and
inc
outsl
cwtl
xor
pop
mov
lods
imul
outsl
ja
inc
xchg
inc
pop
ss
jmp
mov
aam
shl
ljmp
mov
push
scas
movsb
sub
out
cli
xor
lock
jecxz
inc
sbb
push
xor
fidivrs
in
popf
push
repz
fcomip
ret
iret
pop
and
add
cltd
fdiv
clc
data16
ljmp
es
dec
cmp
jb
push
cmc
scas
in
sbb
out
lcall
stos
dec
ret
mov
jl
insl
add
std
out
ljmp
adc
idiv
testl
jge
and
jb
lds
jg
mov
in
dec
loopne
andb
add
inc
shlb
in
jns
mov
jmp
push
sbb
inc
xchg
ret
sbb
xor
xchg
loope
mov
cmp
popf
xchg
lcall
rolb
push
inc
xchg
inc
mov
btr
push
push
adc
pop
inc
nop
sub
rcr
xchg
cmp
lea
leave
mov
out
inc
scas
or
adc
push
push
pop
cli
ljmp
ss
mulb
mov
enter
psubb
push
lods
je
scas
pop
jmp
cmp
mov
enter
xor
or
call
mov
and
and
jo
cs
inc
cmpsb
push
pop
out
dec
cmp
ret
loop
je
popf
cli
out
stos
stc
imul
arpl
arpl
sub
sbb
inc
jle
repz
testl
push
pop
out
lods
jno
leave
lret
xchg
out
shll
fdivrp
push
lea
fcmovnb
jns
sti
add
loope
add
fimuls
sub
out
lret
lds
push
or
aad
out
ja
or
and
cmp
out
xchg
jecxz
insl
cmpsl
mov
push
stos
mov
repnz
arpl
int
divl
or
fwait
cmp
sbb
lods
in
fsts
jge
scas
pop
mov
mov
loopne
int3
rcl
out
lods
outsb
cmp
dec
jo
in
jne
sbb
adcl
mov
out
das
jno
ret
clc
cmp
lcall
idivb
lods
fstpt
ss
bound
stc
notl
jecxz
sub
leave
cmp
out
clc
pop
icebp
test
mov
imul
sbb
leave
add
jecxz
lret
ret
subl
xchg
testb
test
and
arpl
mov
inc
xor
test
xchg
arpl
std
or
rcr
cmc
jo
out
jecxz
sub
aad
add
dec
mov
pop
and
fsubrp
in
mov
pcmpgtb
and
inc
insb
out
push
mov
dec
xchg
cli
jmp
inc
filds
mov
inc
test
inc
push
out
dec
out
stos
mov
mov
push
shlb
movsb
dec
cmc
mov
mov
xor
loop
mov
in
inc
add
shlb
cmp
push
loopne
fcomps
and
push
insl
lret
ja
dec
dec
rol
fbstp
cmc
inc
mov
addr16
mov
sahf
push
push
sub
dec
les
adc
xor
ljmp
and
push
int
sbb
fisttpl
loope
xor
out
push
mov
xor
adc
out
jmp
jp
push
pop
mov
int
out
push
clc
inc
into
movsb
fldt
out
push
cmp
icebp
bound
out
andb
xchg
cltd
hlt
jle
push
cmc
test
cmp
stos
jl
es
push
jecxz
js
mov
pop
aas
cmc
popf
jne
cmp
sub
je
sbb
ds
out
lahf
cmp
cmp
jmp
add
xor
mov
jne
cs
jno
pushf
fstpl
xor
ds
jecxz
shlb
fisttpl
pop
movsb
sub
std
inc
adc
dec
mov
fiadds
imul
jmp
gs
mov
ficoms
xchg
popa
fsubl
mov
sarb
sub
fcoms
dec
and
pop
jae
inc
stos
outsb
jb
sbb
sub
test
cli
insb
jecxz
imull
pusha
stc
aas
dec
popa
xchg
imul
jmp
add
jae
adc
ja
popa
pop
call
out
and
gs
xor
xchg
popf
movsl
dec
in
inc
leave
adcb
out
iret
sub
mov
cwtl
ret
mov
xchg
push
sub
je
jns
pop
xlat
out
xchg
dec
cmp
mov
lcall
mov
loopne
dec
inc
mov
and
imull
rcrb
inc
outsb
inc
inc
fistl
aas
xor
decl
push
sub
clc
fdivrl
pop
int3
in
push
fiaddl
inc
nop
mov
ret
add
and
jbe
outsl
mov
sbb
stos
cld
lea
inc
sub
ficoml
pop
jmp
xor
xchg
ja
lret
xor
shl
out
sahf
sbb
xchg
mov
fs
jle
outsb
cmc
sub
jnp
jl
fcmovbe
shlb
xor
nop
pop
repnz
and
mov
mov
dec
out
sbb
fucomip
out
in
mov
xlat
test
push
jnp
cmp
std
add
js
es
sub
jl
loopne
push
pop
ljmp
lds
cmp
out
dec
push
cmp
out
fildl
lods
ljmp
mov
push
adc
inc
test
push
jle
cwtl
cmp
mov
jbe
sub
loopne
out
and
jl
cmp
push
mov
enter
out
movsb
cmpsl
je
xor
sbb
jne
addr16
xor
sub
stos
cwtl
add
lcall
movsl
lock
out
pop
cmp
cltd
xor
out
xor
insb
jle
xchg
cmp
movsb
les
jnp
out
jmp
ja
shlb
push
lea
out
xchg
add
and
fcompl
push
xor
movsb
adcb
arpl
int
ret
inc
loopne
arpl
sbb
out
movsl
das
repnz
aam
ret
xor
mov
pop
cld
xor
inc
loop
gs
dec
out
ja
pop
hlt
scas
xor
jle
mov
jae
sbb
mov
fsubrl
push
movd
out
push
mov
sub
add
pop
fcoml
sarb
jnp
mov
scas
aaa
mov
shll
ja
add
out
negb
lds
insl
call
icebp
mov
ss
fadd
test
mov
out
das
movsl
xchg
or
add
sub
xor
push
jb
add
sbb
bnd
das
jmp
int3
sarl
imul
ljmp
dec
xor
ds
push
out
mov
pop
icebp
xchg
scas
lahf
test
ljmp
leave
pop
idivl
inc
stos
push
mov
inc
mov
out
sbb
pop
xor
dec
psllq
inc
imul
pusha
cmp
mov
cmpsl
mulb
mov
orl
cmp
fildll
mov
fimull
cli
lret
pop
xor
push
and
idiv
mov
ljmp
pop
out
scas
or
idivl
jnp
out
add
shl
in
jb
xor
jg
xchg
push
sub
in
dec
scas
adc
xor
dec
repz
popf
test
mov
loopne
jo
pop
xchg
sbb
nop
out
fisttpl
out
mov
loop
je
xchg
mov
adc
cmc
imul
shlb
push
loope
pop
incb
std
sarb
and
fisttps
insb
outsb
lret
lds
out
into
push
hlt
mov
dec
dec
lock
cli
adc
push
mov
or
and
mov
mov
push
jle
cmp
jb
dec
aaa
pop
sbb
inc
ljmp
push
add
outsb
in
cmpsl
sbb
cmp
mov
out
insb
sub
cmpb
dec
mov
int
push
pop
icebp
sbb
imulb
mov
sub
hlt
xor
out
dec
cmp
lcall
mov
clc
add
push
add
pop
jmp
stos
lcall
inc
ret
sbb
push
out
lahf
dec
insb
mov
sub
and
sub
adc
iret
xchg
and
adc
adc
test
xchg
adc
xchg
add
and
xchg
and
test
ds
outsb
adc
stos
fimull
cmc
push
pushf
jbe
lret
test
loop
cltd
repz
pop
pop
pop
das
dec
xor
xorb
and
daa
imul
xor
xor
ret
shlb
test
mov
inc
jg
out
mov
cld
xchg
lods
push
jo
lods
jns
pop
loope
xor
xor
mov
mov
out
imul
or
out
add
shl
and
nop
call
pop
outsl
adc
pop
out
loop
mov
mov
xor
dec
push
push
out
out
aam
aas
ret
repnz
movsb
repnz
push
or
mov
cmp
js
sub
xchg
sbb
cmpb
imull
aas
mov
dec
push
sub
sbb
fisubrs
in
inc
add
mov
idiv
push
pop
mov
scas
jnp
outsl
jp
out
fwait
imul
cli
adc
mov
add
jge
fistl
cmpsb
xchg
lods
sub
pusha
jnp
mov
cld
fisubrl
jbe
aaa
in
cli
shll
bound
dec
icebp
and
aaa
xor
or
sbb
popa
xor
subl
push
xor
enter
and
lds
fldl
add
jg
nop
jbe
std
mov
sub
sti
sub
push
fwait
inc
shrb
pop
movsb
add
mov
imul
data16
or
fwait
out
cmp
pop
mov
push
out
vmread
fsubl
and
repz
fs
jle
fcoms
insl
inc
out
sahf
cmpsl
sbb
sti
jns
bound
gs
cld
adc
mov
xchg
sub
dec
cwtl
xlat
test
add
jb
push
repnz
sub
jnp
mov
daa
fimull
negb
cmpsb
lods
inc
out
cwtl
add
repz
push
insb
push
shlb
and
inc
jns
dec
xor
repz
arpl
mov
iret
pop
ret
int
out
jl
adc
dec
mov
ja
cld
adc
jno
mov
mov
jnp
leave
sbb
shlb
scas
adc
dec
imul
notl
pop
out
xchg
ret
mov
insb
shr
jo
cmc
outsb
jl
xor
loope
jmp
sub
inc
add
inc
aam
pop
aad
daa
push
inc
call
cmp
add
test
out
ret
scas
test
xor
jg
sar
xchg
fucompp
mov
mov
mov
mov
ds
mov
out
mov
cmpsl
es
out
daa
popf
mov
sti
leave
out
mov
into
loop
add
out
adc
out
cmp
cmp
out
fcmovb
or
addr16
shlb
xor
sbb
fcomps
test
clc
adc
mov
shrb
dec
sbb
cmpsl
repz
inc
shll
fs
mov
mov
pop
pop
xor
mov
pusha
add
movsb
je
orb
movb
in
out
inc
mull
pushf
mov
sbb
rorb
insb
out
hlt
stos
out
jmp
xor
call
stos
push
pop
add
loope
xor
pop
sub
loopne
call
outsl
hlt
adc
cmp
jbe
insl
jmp
je
sub
mov
out
insb
xor
shlb
rol
cmp
sbb
out
jge
out
mov
or
gs
shlb
test
push
lds
scas
jo
add
shr
bound
rdpmc
mov
insl
inc
int3
push
stc
pop
pop
or
jae
lcall
cmpsb
out
js
in
xor
xchg
adc
hlt
push
mov
shlb
xor
jp
and
and
insl
cmp
in
push
lcall
jbe
std
or
aaa
sti
sti
in
jp
clc
test
mov
jne
dec
call
or
pop
xchg
xchg
repz
jbe
test
js
sbb
inc
cmpsb
std
push
mov
push
pushf
loop
hlt
inc
nop
sti
xchg
add
xchg
jne
or
xchg
out
pusha
es
push
jg
shlb
inc
push
movsb
in
inc
xchg
out
push
cmp
decb
shl
loope
divl
fimull
inc
out
push
lods
rcrl
shlb
out
sbb
inc
adc
sub
ja
mov
test
sub
call
mov
jb
mov
aam
frstor
out
dec
ja
mov
push
cmp
in
int
mov
testl
outsl
add
jbe
jecxz
push
sahf
test
or
pop
sbb
xlat
add
jmp
cmpsb
insl
xor
mov
inc
dec
sar
loopne
out
inc
es
out
push
orb
out
pop
inc
adc
aad
sbb
lock
out
test
jno
arpl
dec
dec
ret
aaa
imul
inc
sbb
cmp
mov
mov
mov
xor
call
push
jae
adc
push
out
out
movsl
shl
cmp
out
jle
push
lea
sbb
mov
push
sbb
dec
sbb
mov
out
in
inc
pop
inc
mov
in
dec
jmp
xor
push
and
xchg
jp
cmc
cmpsl
sbb
rclb
les
arpl
shll
mov
and
push
das
jo
mov
pushf
aad
inc
loopne
subb
xor
fucomip
push
sbb
in
lret
and
push
int
adc
adc
sbb
ds
add
push
lds
cwtl
out
dec
jmp
imul
cmp
gs
mov
jns
sbb
pop
jnp
imul
rcl
aaa
inc
mov
inc
out
sub
sub
pop
popa
loopne
mov
sbb
push
out
add
add
into
cmpsb
cltd
cwtl
out
ds
xchg
dec
sbb
add
and
push
fcompl
adc
shr
icebp
adc
out
aaa
mov
inc
imul
or
inc
or
out
stos
dec
xlat
fldl
icebp
jp
leave
loop
in
jno
gs
xchg
out
xchg
std
dec
mov
out
fisttpll
mov
insl
xor
xor
jmp
adc
push
or
xchg
sub
jge
ja
call
xor
pop
mov
mov
in
adc
jle
jmp
iret
push
dec
mov
and
push
out
push
pop
imul
push
xchg
xor
mov
repz
scas
add
xor
out
sub
xchg
inc
or
sub
mov
dec
sti
add
inc
inc
out
and
add
sbb
in
mov
es
in
sbb
shll
ljmp
xchg
negb
cmc
mul
cmc
rcl
add
adc
and
mov
add
daa
pop
mov
fsubs
aas
outsb
and
and
mov
mov
jl
out
xchg
xor
repz
mov
popf
mov
inc
or
ds
jmp
mov
mov
popa
lds
test
pop
mov
dec
ret
dec
stos
push
aaa
aaa
jecxz
dec
js
push
jno
push
dec
dec
pop
nopl
outsb
mov
push
pop
stos
fiaddl
loopne
lock
push
jle
arpl
inc
fucom
outsb
jg
std
ret
lret
in
adc
fucomi
adc
imul
xor
aad
xor
out
or
mov
cltd
fwait
mov
jmp
daa
inc
call
out
push
imul
adc
or
fidivl
sbb
in
imul
divl
inc
inc
pop
push
mov
mov
inc
sub
imul
cld
shlb
jne
push
rcrl
pop
dec
jg
rcrl
insb
jae
jae
xchg
lock
loop
add
shlb
ret
sub
jb
adc
push
iret
inc
jmp
cs
ljmp
andb
imul
mov
sub
das
clc
and
cltd
shlb
jbe
mov
popa
pop
fwait
xchg
imul
out
les
popa
roll
out
hlt
in
fmulp
xchg
jb
lret
out
js
sub
jg
cs
and
loop
arpl
and
adc
rolb
loopne
xlat
fsubl
adc
notl
std
cmpsb
nop
imul
pop
lods
sub
shrl
out
neg
leave
mov
out
test
adc
out
and
push
int
fucomip
jp
cmpsb
cli
xchg
adc
out
dec
aam
adc
xchg
dec
jo
pusha
nop
shlb
push
mov
add
jno
jmp
mov
cmpsb
call
mov
mov
movsl
insb
out
rol
mov
pop
adc
cwtl
mov
pop
add
nop
xor
andl
fsts
push
shlb
jne
dec
out
ja
das
pop
repz
xor
xchg
in
sub
xor
push
in
out
push
mov
in
ja
adc
and
pop
outsb
adc
sbb
xor
out
sub
push
lahf
adc
repz
xor
negl
and
shll
fstps
cli
and
dec
fucomp
clc
mov
inc
popf
jo
fisttps
ds
xor
out
in
int
push
lret
fildll
loop
pop
or
push
arpl
xchg
insl
js
jecxz
outsl
in
sahf
xor
push
add
dec
inc
dec
xchg
popa
leave
lds
stos
mov
adc
ja
out
ljmp
sbb
orb
xor
mov
cs
sbb
pop
test
xor
xchg
xchg
cwtl
lret
js
sub
xchg
and
fucom
pop
fistps
pop
mov
add
xchg
pop
xor
leave
std
sbb
out
or
call
sahf
stos
notb
push
mov
push
dec
mov
dec
out
mov
xor
out
xor
xchg
lds
or
xor
jb
sub
shrl
jnp
push
xchg
xchg
add
adc
test
inc
fsubs
das
rclb
xchg
out
adc
stos
jnp
push
xor
ss
dec
mov
out
xchg
inc
ja
dec
jg
out
push
jb
scas
hlt
push
pop
dec
and
lods
cmp
je
push
iret
mov
xchg
dec
push
jg
jecxz
movsb
adc
or
out
jae
xor
repnz
movd
jmp
inc
insl
inc
sub
pop
lods
xor
xchg
mov
out
lods
aas
push
jbe
js
in
mov
inc
imul
stc
jge
call
push
push
cmpsl
pop
fidivrs
xor
ja
sub
sbb
shr
mov
push
sub
lds
daa
into
push
xor
negl
or
test
sbb
or
sub
loopne
pop
mov
pop
mov
xchg
sbb
in
add
test
push
pop
mov
mov
in
outsb
fisttpl
shr
jne
xor
push
jnp
adc
pop
jbe
mov
dec
negl
xor
and
add
sub
push
sahf
in
mov
hlt
pop
inc
mov
insb
ss
popa
filds
stos
in
mov
pop
xchg
ljmp
movsb
in
clc
and
push
out
loop
daa
icebp
xorb
mov
loop
and
aad
fwait
jb
in
push
push
das
outsb
cmp
loop
jbe
clc
jns
in
sarb
xchg
ret
cmp
shll
mov
out
shll
ror
adc
out
outsl
xor
push
xchg
out
pop
in
popa
xchg
sbb
fcom
fldl
sbb
jne
out
push
out
and
or
jge
push
sbb
fcomps
pushf
and
add
int3
adc
dec
jo
out
outsb
pop
sbb
int
inc
sbb
bound
add
inc
scas
fadds
imull
pop
lcall
or
xor
inc
outsb
adc
call
pop
jl
add
arpl
mov
add
jl
imul
mov
inc
es
lock
inc
or
mov
lds
mov
out
xor
fs
loop
dec
add
imul
cmp
fstps
pop
or
filds
xor
mov
int
inc
and
xchg
clc
loopne
hlt
inc
push
ljmp
and
pusha
adc
jmp
dec
inc
adc
cmc
call
cs
mov
add
outsl
mov
mov
and
cli
aad
dec
cltd
aaa
sbb
xlat
cmp
pop
xchg
into
out
test
je
movb
xchg
xor
pushf
out
fimuls
lods
xor
jbe
jo
xchg
in
push
jmp
or
out
cmpsb
pop
xchg
fsubrp
fnstsw
rcr
inc
movsb
jle
out
xor
cmp
push
scas
mov
add
mov
jle
orl
dec
popa
out
inc
adcb
xchg
hlt
dec
pop
mov
push
adc
ljmp
shlb
xor
xor
mov
and
sbb
mov
aam
js
cmp
sbb
dec
push
setge
mov
jmp
pop
cmp
fcoms
inc
dec
push
or
mov
xchg
sbb
ljmp
movsl
push
xchg
mov
mov
addr16
cmp
jl
int
or
notl
cs
loopne
ljmp
dec
out
cmp
fidivs
out
cld
push
or
stc
out
inc
inc
mov
aaa
cmpsl
pop
xor
outsl
ljmp
dec
inc
sbb
loopne
cmpsb
aad
dec
push
pop
shr
sbb
imul
cli
clc
imul
in
test
out
mov
xchg
out
pushl
cmp
jb
out
pop
sub
sub
mov
ja
aad
fdivr
or
iret
lods
out
sub
shrb
in
in
inc
lret
sbb
arpl
clc
ljmp
test
cmp
test
push
les
xor
rcrb
push
xor
std
xor
push
inc
lahf
adc
loopne
and
pop
mov
xchg
decb
insb
inc
aas
sbb
into
loop
mov
adc
es
cmp
add
lret
es
sub
jbe
scas
popf
bound
es
cmpsb
and
aad
dec
push
test
orb
pop
sbb
ret
mov
stos
jbe
adc
push
jp
fprem1
xchg
pushf
xor
sbb
jae
or
in
ljmp
fistpll
js
xchg
adc
insl
mov
and
out
imul
dec
clc
adc
mov
ljmp
or
jne
pop
out
hlt
jl
cltd
loopne
push
dec
out
xchg
cli
xor
push
out
imul
sub
jae
and
sbb
dec
push
sub
push
cmp
into
fs
divl
jns
out
jl
dec
or
mov
leave
jge
jmp
mov
pop
daa
dec
rcll
cmpsb
out
insb
addr16
aam
cmp
hlt
cmp
mov
push
inc
or
testb
fistl
mov
cmp
xchg
movsl
and
dec
mov
mov
popf
outsb
testl
and
popa
ja
pop
pop
adc
jb
inc
daa
mov
xor
ss
lret
rcrb
outsb
lcall
xor
and
add
xor
ljmp
xor
xchg
push
lret
cmp
adc
cmpsl
rcl
sahf
add
inc
js
sbb
adc
xor
imulb
cmp
outsl
mov
jo
mov
stc
cmc
aad
mov
adc
jle
arpl
xchg
cmp
inc
xchg
rcrb
push
out
out
sbb
je
xchg
adc
popa
cmc
adc
fsubrp
mov
add
adc
jb
mov
aaa
lret
and
jno,pn
out
inc
inc
data16
out
out
int3
insl
fisubrl
rorb
sbb
out
jmp
lods
dec
add
dec
fcmovnb
push
rclb
push
dec
repz
xor
arpl
jb
test
hlt
adc
mov
jno
pushl
xchg
cli
int3
mov
push
mov
push
adc
lretw
cmp
xor
mov
or
hlt
jno
out
mov
pusha
arpl
cltd
out
lods
addr16
push
add
mov
repz
fldl
icebp
pushf
push
ja
lods
mov
out
aam
or
lret
fdivl
jnp
inc
mov
sub
pop
cmp
mov
outsb
lret
mov
jp
pop
inc
jbe
aad
jl
ret
inc
sbb
or
push
xchg
pop
jp
jae,pt
ss
xorb
idivb
shll
mov
push
fs
push
sub
iret
and
add
out
mov
ss
rclb
pop
out
out
in
aaa
sbb
xchg
je
pop
out
in
push
pop
xchg
scas
mov
jo
xor
cld
mov
push
mov
into
jne
push
push
call
xor
pop
and
daa
cmp
rorb
popa
loopne
lods
fucomi
sbb
scas
gs
into
jae
push
pushf
jo
mul
in
test
mov
out
test
aaa
pop
lahf
xor
repz
and
in
push
scas
or
cmp
xchg
sub
pop
xchg
mov
pop
sub
sub
fstpl
in
out
lods
xchg
sbb
pop
out
jb
and
repz
ds
or
fwait
jmp
adc
popa
inc
jmp
fs
lea
into
ja
out
scas
adcl
addb
pusha
lret
cmc
pop
mov
xor
call
xlat
shl
aam
outsl
and
insl
and
sahf
frstor
enter
and
jae
jno
add
push
bound
mov
add
xchg
and
sahf
scas
mov
cmp
push
dec
inc
out
es
aas
in
shrb
adc
cmc
aam
out
or
ret
rclb
add
xchg
cmp
xor
xchg
ret
fcoms
cmp
stos
hlt
push
add
xchg
out
xor
out
mov
ljmp
lock
sub
push
mov
shl
rorb
add
lods
sahf
jno
rcl
loope
push
and
arpl
pop
repz
cmpsb
xor
popa
mov
adc
push
or
add
shlb
enter
andb
jmp
pop
mov
mov
pop
push
cld
ret
mov
push
pop
ficoml
xor
xor
shrb
fwait
mov
dec
fildll
je
push
push
adcl
ds
je
out
scas
xchg
mov
cs
out
add
and
adc
dec
sbb
aad
jmp
xchg
dec
pop
adc
xorl
std
out
loop
cli
daa
out
data16
pusha
test
hlt
out
je
cld
outsb
mov
clc
loope
cmpsb
sub
in
jle
out
dec
mov
imul
icebp
lds
push
and
std
shrl
test
out
addr16
pop
xchg
adc
notb
jo
jo
inc
push
loop
dec
mov
jnp
add
push
imul
sbb
test
cs
lcall
mov
push
mov
xchg
push
xchg
movsb
dec
out
xorl
mov
mov
mov
add
repz
ret
sbb
dec
lahf
cmp
cmp
and
shlb
or
cmpsl
ljmp
ja
xor
jle
outsb
push
ret
jnp
or
push
lahf
es
pop
adc
push
test
pop
push
sub
idiv
outsb
xorb
add
div
pop
adc
jbe
aam
and
lds
out
jl
xchg
loop
mov
test
dec
sbb
inc
scas
push
out
push
jg
pop
or
dec
setb
xor
pop
dec
out
or
mov
in
push
ret
push
aam
jno
jo
add
mov
shl
in
outsl
lret
pushf
insb
adcb
xchg
mov
inc
out
popa
mov
and
cli
movsb
or
or
out
mov
out
and
aas
sub
or
aam
bnd
xchg
adc
cltd
inc
fdivrs
imul
or
inc
pop
jl
cmp
cmp
daa
out
inc
push
and
xor
and
xchg
lea
ss
inc
jmp
out
repnz
iret
sub
movsb
lcall
repnz
cmp
fbstp
fmull
mov
movsl
and
out
pop
dec
jmp
pop
arpl
mov
sbb
mov
mov
orb
push
ret
les
ja
fildll
cmp
push
mov
push
mov
std
out
scas
jecxz
js
mov
int3
hlt
insb
mov
loopne
je
cmp
pop
cltd
push
xor
decl
enter
data16
out
mov
mov
push
adc
xchg
gs
es
scas
push
aad
in
mov
pop
jge
fcmovbe
xchg
push
jnp
ss
push
and
iret
jbe
out
mov
push
sahf
std
out
cmp
jb
pop
out
push
jne
adc
jno
daa
push
dec
repz
stos
pop
mov
inc
out
mov
cmp
sub
mov
lahf
inc
out
xchg
outsl
xchg
push
dec
mov
sub
xor
pop
out
adc
fstl
mov
mov
push
loop
xchg
dec
sbb
mov
shlb
out
loopne
rcl
xor
or
mov
push
add
jb
adc
and
push
mov
out
pop
jmp
jge
cmp
test
add
fnstsw
nop
outsb
jle
xchg
and
pop
dec
ljmp
outsb
int3
cmp
jno
dec
and
mul
push
out
cmp
jb
out
ret
mov
cltd
clc
push
out
jnp
mov
cmp
stc
xchg
pop
push
push
dec
or
popa
jg
pusha
loopne
out
jno
sub
shll
dec
out
adc
mov
out
repz
push
test
push
cmp
inc
shll
das
jo
or
jmp
and
sbb
cmp
out
call
nop
jle
mov
out
or
dec
add
and
adc
out
xchg
pushf
in
xchg
xor
add
imul
adc
pusha
pop
ret
xchg
test
sahf
xorb
or
pop
cmp
sbb
jge
scas
subb
shll
scas
int3
adc
cmc
inc
fwait
xor
jmp
or
addr16
xchg
aam
xchg
ja
fs
or
stc
sbb
pop
stos
lea
sub
sti
push
xor
pushf
adc
movsl
adc
adc
jae
jo
mov
mov
cmp
jmp
mov
daa
jo
adc
pop
aam
leave
out
cld
push
cmp
xchg
add
ljmp
and
popf
scas
out
rolb
pop
jl
fwait
mov
sub
out
test
sti
sbb
xchg
fistpl
push
ret
jb
stc
adcb
jmp
sbb
lods
jo
dec
push
cmpsb
loope
test
mov
jbe
movsb
stc
enter
pop
orb
adcb
loop
sub
test
cmc
push
xorl
rorl
xchg
adc
repz
test
or
mov
xchg
inc
xor
xchg
shl
pop
loopne
out
and
xor
out
bound
dec
or
ja
xchg
out
pop
dec
sbb
xchg
arpl
add
xor
pop
mov
ljmp
jo
xchg
scas
adc
out
xor
stos
mov
fistpl
insl
ret
je
adc
jnp
out
jmp
and
cmpsl
pop
rol
add
cmpsb
sub
je
sub
in
pushf
xor
mov
outsb
sbb
cmc
hlt
sbb
in
ljmp
out
outsb
cmp
out
mov
jmp
lret
adc
push
fwait
insb
movsb
push
mov
add
and
or
xchg
fisttpl
dec
js
jae
mov
loop
in
jbe
mov
sbb
push
inc
aaa
call
sbb
lock
cmp
rol
das
mov
outsb
mov
dec
xor
xlat
in
cmp
call
add
shrl
pop
ss
push
xor
loope
xor
jne
cmpsl
jp
scas
inc
and
or
shll
shr
test
mov
das
nop
adc
jns
je
stos
stc
xchg
mov
fdivr
test
sub
popa
mov
hlt
push
mov
aaa
orl
dec
jmp
mov
jo
insl
idiv
ljmp
fidivl
imul
jmp
and
adc
inc
inc
in
dec
inc
or
pop
push
mov
divb
lret
icebp
das
mov
cmp
mov
imul
stos
mov
mov
div
cmc
push
sub
outsl
sahf
jmp
push
cmc
fisubl
mov
bound
insb
lcall
pop
out
push
fwait
test
out
xlat
mov
push
ja
inc
push
mov
sub
push
stc
fidivs
out
js
push
outsl
pushf
idivl
xlat
add
imul
mov
lret
es
cs
pushf
xor
js
push
cmpsl
sbb
shr
push
xchg
jb
cmpsb
lahf
out
or
repnz
pop
mov
subps
pusha
mov
xchg
mov
insb
inc
bound
rcrb
mov
cmp
mov
fwait
lcall
clc
das
push
pop
hlt
stos
pop
mov
inc
jmp
pushf
lods
mov
loop
jae
adcl
adc
push
std
imull
movsl
insb
cmp
les
mov
stc
shlb
adc
jmp
insl
fs
daa
xor
ja
jmp
jle
xchg
lcall
mov
xchg
hlt
dec
imul
jns
jp
mov
dec
pop
out
mov
push
pop
imul
in
sub
rol
lret
ret
insl
jns
sub
mov
and
out
insb
aas
fisubs
sub
addr16
and
xor
out
cmp
fwait
out
mov
inc
out
sub
pop
push
sub
sti
pop
movsl
pop
dec
push
xor
xchg
cmpsb
cmp
pop
and
pop
dec
add
mov
jmp
fmuls
fwait
add
inc
jo
inc
pop
out
xor
add
outsb
pushf
out
dec
jmp
sar
imul
mov
pusha
pop
hlt
adc
inc
cmc
jno
sarl
mov
rep
das
dec
les
push
imul
add
or
out
push
xchg
push
and
mov
or
fisubrl
adc
xchg
jmp
jae
lahf
mov
xlat
jbe
pop
cmp
shr
call
inc
push
or
add
or
shr
dec
mov
xchg
mov
and
sub
xor
mov
and
mov
scas
xchg
movsl
xchg
pop
testl
imul
xor
xor
inc
mov
jle
out
add
fiaddl
jmp
and
out
add
push
sahf
adc
pop
mov
xchg
testl
insb
xchg
fstp
aas
push
dec
mull
inc
rcr
xchg
aam
cmp
jg
mov
out
cvtdq2ps
inc
and
movsl
pop
in
mov
lods
js
outsb
std
jns
mov
pop
pusha
shll
loope
shr
pop
xchg
adc
rolb
icebp
mov
push
push
aas
fs
shll
mov
dec
out
pop
call
rdtsc
out
push
clc
test
push
jns
scas
out
mov
out
mov
mov
test
hlt
sar
out
sbb
push
lret
lods
jnp
gs
or
jle
hlt
mov
and
sarl
inc
rolb
inc
hlt
fwait
mov
xchg
or
pop
stos
addr16
xchg
add
sbb
dec
outsb
out
push
insb
xlat
adc
sbb
repz
jb
push
loope
add
pusha
lods
mov
imul
popl
icebp
push
mov
lock
cwtl
xor
sub
xchg
cmc
stos
insb
ja
jp
bound
js
stos
out
lcall
push
out
mov
shlb
dec
fs
lret
and
out
xor
stos
hlt
repz
out
sbb
mov
ret
dec
cmc
imul
mov
stc
insb
shlb
adc
daa
or
mov
in
inc
out
jbe
rolb
sbb
inc
shll
and
mov
in
push
jno
or
cs
subb
nop
loope
mov
fildll
inc
mov
shll
out
mov
xchg
repnz
push
jmp
mov
iret
and
adc
sbb
xchg
mov
pop
cmp
lcall
cmp
clc
test
mov
cwtl
mov
out
pusha
sahf
movsl
adc
loopne
pop
cmp
es
aas
out
js
out
add
jl
out
leave
cmp
inc
inc
xor
inc
out
test
xor
test
mov
jo
add
stos
in
popa
pop
inc
in
add
in
cs
sbb
cmpsb
ja
in
inc
sub
fadds
js
movsb
test
stos
imul
adc
aam
loope
loope
iret
jle
shrl
jecxz
sub
inc
idivl
insb
mov
mov
sub
jmp
and
mov
fwait
loope
add
or
xlat
fmull
inc
adc
sub
outsl
xor
jb
je
stos
jmp
pop
subb
dec
mov
jge
inc
out
roll
push
out
xchg
loop
xchg
xor
fwait
out
mov
inc
adcl
shll
inc
in
jno
xchg
sbb
notl
mov
movsl
push
out
pusha
sub
mov
outsl
jmp
hlt
push
jno
or
cwtl
ret
add
jb
lds
stos
push
in
adc
xchg
jmp
add
nop
loope
cli
mov
cmp
push
jmp
adc
nop
pop
out
imul
xchg
sarb
negl
stc
scas
daa
pop
rorl
subb
push
or
test
xchg
arpl
daa
out
or
repz
rcll
push
outsl
scas
stc
fdiv
xchg
add
ljmp
mov
enter
cmpsb
jle
or
shll
mov
or
add
cmp
mov
mov
push
in
loop
xor
pusha
jns
push
rclb
testl
mov
add
pxor
stos
cltd
out
pop
mov
push
cmp
cmpsl
push
jp
out
in
in
jnp
fs
adc
mov
mov
or
popf
jmp
shl
in
lds
test
add
pusha
pop
cmp
lock
jne
pop
out
mov
out
sbb
dec
mov
test
cmp
jns
scas
gs
adc
inc
push
xchg
jbe
pop
mov
adc
xchg
pop
mov
addl
xor
mov
mov
cmp
xor
mov
cmp
add
inc
pop
ljmp
cmpsb
out
add
cs
adc
cmc
imul
lret
xchg
jl
jg
mov
popf
jo
and
xchg
call
rcl
and
and
test
cmp
aam
push
dec
dec
out
jno
add
lds
jmp
mov
cmp
jecxz
fidivl
push
pop
mov
or
mov
out
out
mov
sub
call
inc
out
jp
adc
pop
mov
out
push
fs
daa
xor
js
cld
in
scas
push
adc
xor
insb
cltd
push
pop
out
sbb
wbinvd
out
into
lock
out
mov
jp
xchg
add
dec
xchg
popa
sub
lret
jle
call
push
sub
ret
mov
stc
push
add
xlat
add
add
out
and
rcrb
enter
movsl
sti
push
and
jb
pop
add
sub
fisttps
aas
lock
arpl
dec
subb
arpl
add
sub
pop
dec
outsl
imul
nop
fists
dec
and
movsb
bound
rcll
and
and
cmc
std
cmc
in
fidivrs
nop
jbe
out
scas
pop
mov
and
shlb
aas
mov
ljmp
cmp
bound
out
pop
arpl
and
shrb
add
in
movsl
sbb
addr16
shrl
rclb
dec
push
cmc
rorb
lds
mov
jnp
out
shl
add
cmp
dec
or
mov
aam
scas
in
loopne
lcall
adc
fwait
mov
das
cmpsl
mov
ja
es
stos
outsb
addr16
dec
div
fiadds
push
fbstp
push
cmp
lds
cld
jbe
sub
jns
xlat
dec
arpl
or
aam
testl
aaa
mov
inc
jl
jecxz
test
cld
cmp
out
fs
jmp
out
xchg
sub
pop
jl
push
out
loop
xchg
out
adcb
mov
or
sahf
and
out
jmp
dec
cli
out
mov
and
jo
mov
fsubr
lea
repz
fs
test
add
mov
out
call
cld
lods
mov
popa
nop
jae
out
outsb
int
out
mov
cmpsb
mov
cmc
sbb
dec
xchg
lret
adc
in
cltd
addr16
les
jb
call
xor
aaa
xchg
das
jmp
aad
mov
js
jno
in
fldpi
in
out
adc
inc
or
rcr
shrd
arpl
mov
out
jb
push
in
scas
jle
out
leave
cmc
scas
sub
and
rol
pop
inc
out
dec
js
mov
out
dec
cltd
jbe
fs
lahf
mov
add
repz
pop
imul
clc
push
mov
jae
and
repnz
sbb
pop
jmp
and
add
cmp
pushf
ja
inc
rorb
imul
sub
push
or
dec
sbb
mov
shr
xchg
inc
into
std
repz
movsl
out
enter
daa
lret
leave
repz
stos
adc
mov
cmp
add
out
sub
mov
pop
repz
js
flds
shrb
pusha
xor
jle
imul
cmp
ljmp
ja
mov
push
scas
push
ret
hlt
jmp
and
in
in
mov
xor
cld
imul
ret
in
xor
ret
and
icebp
mov
and
dec
inc
repz
jg
and
das
jmp
test
lcall
test
cs
and
push
int
mov
insb
out
inc
sbb
xchg
arpl
pop
mov
insl
cmp
shlb
out
cmp
popf
or
imulb
lea
ja
xchg
arpl
sub
loopne
out
sbb
cmp
hlt
push
mov
push
lret
cmp
and
mov
cmp
dec
insl
dec
imul
loop
mov
pushf
call
push
jecxz
bnd
in
mov
jo
dec
rcll
jle
lock
je
push
add
leave
cmc
test
mov
fsubp
imulb
push
push
add
xor
outsb
mov
jmp
movb
xchg
roll
push
mov
mov
and
dec
sahf
divl
push
das
sarb
lods
mov
test
adc
xchg
int
xor
pusha
outsb
lds
in
js
mull
in
in
dec
movsl
jge
push
xor
push
je
and
in
pop
mov
test
sub
repnz
dec
out
jb
fdivl
inc
js
lret
cs
lods
popa
repnz
fs
mov
jmp
imul
cmp
fidivrs
pop
adc
jmp
push
loope
enter
gs
adc
loopne
in
repz
sar
out
imul
dec
mov
lds
push
fsubl
mov
mov
pop
pusha
int
lahf
std
mov
les
cltd
cmp
pushf
aam
xorb
sub
adc
notl
stc
mov
and
out
shl
test
call
pushf
out
add
fldcw
dec
andb
aam
lods
push
jge
std
into
push
pop
out
out
mov
mov
cli
pop
inc
mov
out
jb
mov
xor
popf
shl
lret
popa
cmp
mov
push
jns
insb
xor
iret
xchg
icebp
xchg
mov
sub
push
shrl
pop
sbb
leave
jg
js
dec
in
ja
jecxz
mov
cli
sbb
addr16
fiaddl
mov
mov
jne
cmpsb
arpl
in
sbb
add
hlt
pop
pop
imul
sub
cltd
push
outsl
in
inc
mov
nop
jmp
sbb
out
adc
adc
add
cmp
push
cmp
and
mov
fstl
inc
decb
and
push
les
out
pop
cmp
or
mov
add
fucom
mov
mov
pop
add
inc
push
sbb
add
dec
jo
je
mov
mov
mov
xchg
jg
fistl
push
outsb
stos
inc
jecxz
sub
test
sub
cmp
loopne
outsl
dec
xlat
adc
in
jecxz
adc
out
sbb
in
daa
fs
movlps
push
or
enter
out
mov
cmp
shll
add
dec
test
icebp
mov
outsb
jae
jmp
dec
xchg
add
je
push
pop
inc
mov
scas
pop
lcall
imul
or
insb
roll
jne
cwtl
xor
cltd
or
cmp
or
in
mov
or
xor
testl
out
lods
xchg
sbb
xchg
mov
out
cmp
fsubs
shl
mov
dec
xor
lcall
sbb
sbb
and
inc
les
xchg
stc
xchg
fs
idivl
xchg
adc
cmpsl
or
add
out
sub
je
aad
out
cmp
pop
cmpsb
jge
out
push
push
sarb
repnz
dec
aaa
lds
popf
loopne
stos
out
xor
dec
js
scas
ret
insb
test
loop
jne
mov
mull
loopne
push
outsb
lods
mulb
lahf
aam
jo
out
orl
push
fdivp
ret
insl
cld
popf
out
addr16
aas
sti
mov
and
cmp
pop
push
add
add
das
mov
xor
mov
andb
dec
out
das
sub
adc
movsb
inc
out
mov
test
fucomp
repnz
outsb
jle
loope
jo
in
sub
push
cltd
jb
shl
mov
push
dec
pusha
rcr
sub
mov
loope
push
aaa
scas
adc
cmp
push
outsl
loop
sbbl
push
and
inc
inc
add
mov
lcall
divl
insl
sub
pop
aam
inc
popa
xor
je
inc
cltd
add
negb
push
imul
sub
stos
mov
mov
add
jns
xor
jmp
mov
or
std
jo
es
push
cmc
or
popf
subb
jns
cmp
add
xchg
ss
scas
jmp
out
out
test
adc
dec
mov
imul
out
mov
jnp
jl
add
pop
in
stc
aad
out
or
lret
cwtl
pop
sbb
out
mov
adc
push
push
in
imul
inc
pop
cwtl
movsb
imul
clc
test
dec
and
mov
xchg
or
lods
push
pop
fs
nop
mov
aas
dec
insb
mov
inc
das
movsb
ret
nop
jl
xor
ds
out
je
cmp
sub
push
or
int
imul
sbb
push
mov
out
pop
out
push
add
enter
sahf
ffreep
push
jbe
int
xchg
mov
and
xor
int3
xchg
xor
sub
test
ret
dec
rcl
cmc
jecxz
fstps
leave
or
out
or
je
jecxz
lods
mov
gs
ds
repnz
jp
in
adc
sti
lahf
dec
frstor
sbb
pop
jae
xor
and
cmp
mov
xor
rcl
add
cmpsb
or
inc
mov
ljmp
bound
sbb
and
out
inc
dec
fldt
mov
mov
mov
xchg
jnp
out
in
enter
lods
cmp
aaa
cld
insl
mov
add
pop
xchg
call
jbe
xchg
sub
sub
jp
adc
dec
lahf
mov
inc
mov
push
out
mov
dec
jae
fistps
inc
add
fsubrs
loop
cmp
outsb
scas
cmpb
inc
decb
and
fimull
pop
cmc
and
outsb
and
dec
loope
test
lock
push
out
xor
rclb
ror
mov
pop
or
stos
jecxz
notb
ljmp
and
push
cs
imul
xor
rcpps
or
cmp
out
or
pop
stc
out
adc
test
fldt
ss
xchg
xor
divl
ljmp
adc
or
xchg
lret
push
add
push
out
and
fs
enter
imul
sub
lcall
out
lret
pop
push
stc
aaa
xor
pushf
sub
imul
pop
push
mov
outsb
mov
fsubrs
daa
sub
xchg
cmc
rorb
cwtl
mov
xchg
subl
xchg
add
cmpsl
icebp
lea
ret
testb
sbbb
mov
mov
out
and
out
and
xchg
pop
or
adc
in
loope
inc
sahf
or
out
popa
push
scas
fsubr
mov
xchg
adc
ljmp
shll
fdivs
idivl
pop
sarl
inc
rolb
cli
notl
push
fcoml
xorb
out
xchg
outsl
lock
ret
adc
stc
sub
push
inc
push
inc
test
sub
icebp
scas
fmull
mov
cmpsl
outsb
jnp
ds
inc
lret
xchg
and
mov
xor
out
popa
add
xor
out
mov
add
scas
pop
pop
and
test
sbb
and
movsb
in
out
xchg
add
xor
movsl
sbb
popa
scas
out
push
xor
filds
clc
add
dec
shl
cmp
outsl
out
xchg
xchg
mov
out
push
arpl
push
cmp
push
add
subb
icebp
out
dec
enter
insb
and
push
int
ret
and
add
and
jbe
jo
addb
cmpsb
mov
lahf
js
inc
out
filds
das
mul
in
push
jne
pusha
jmp
outsb
shll
es
push
int3
stos
sbb
imul
push
pop
insb
adc
shlb
test
mov
imul
or
hlt
rorl
cmp
xchg
jbe
pop
iret
adc
inc
mov
xchg
psrld
pop
cmp
lea
mov
jo
or
insl
push
sub
jmp
jp
push
pusha
movsl
les
ja
inc
out
jp
add
jo
test
loope
mov
sbb
mov
aad
faddl
inc
ljmp
rcrb
into
xor
outsb
iret
push
mov
xchg
push
aad
test
inc
mulb
sti
cli
mov
sar
jecxz
popa
pop
arpl
sub
mov
and
adc
xchg
aam
xchg
sbb
inc
aad
jmp
cmp
cltd
xchg
and
pxor
jae
data16
ret
outsl
push
add
adc
jmp
std
inc
jp
mov
out
fsubrs
inc
nop
or
repz
test
mov
in
scas
out
mov
popf
out
lret
pop
mov
jo
int
jmp
adc
cmpsl
jl
lods
push
jmp
jge
cmp
pop
push
xchg
cltd
cld
xor
movsb
and
pop
jne
xor
fsubrl
fcompl
and
pop
test
outsl
push
out
loopne
and
and
ret
iret
rolb
pop
dec
xor
xor
sub
shrl
repz
in
std
leave
out
jmp
xchg
ret
fadds
enter
xor
out
lods
scas
mov
aam
fcompl
out
cmp
leave
js
fidivrl
out
sub
mov
out
icebp
xor
sbb
repnz
jmp
mov
add
sub
sub
popf
les
and
lcall
inc
mov
mov
xchg
sub
into
mov
mov
xor
pop
mov
push
setne
cltd
jo
aad
jp
jge
cmp
pop
mov
into
and
idivl
sub
lcall
mov
xchg
push
imul
fsubr
mov
pop
push
cs
jo
jo
arpl
negl
mov
jne
xchg
call
and
cmp
inc
cmp
loope
fmuls
mov
pop
inc
dec
xor
dec
pusha
out
notb
adc
mov
insb
mov
mov
xchg
pusha
inc
outsb
add
mov
pop
imul
hlt
sbb
aaa
bound
incl
out
in
jge
mov
jle
mov
xchg
pop
jg
fsubrs
push
je
ret
jb
jno
out
idivb
cmovns
repnz
xchg
test
adc
push
sub
out
adc
sub
push
sti
shll
add
add
xchg
cmp
hlt
add
int
mov
ret
xor
sahf
imul
inc
out
sbb
fisttpl
cli
xor
out
pushf
inc
lock
push
cmp
cwtl
xchg
in
mov
sahf
mov
aad
int
icebp
sbb
inc
out
mov
push
out
and
xchg
mov
rcrl
jmp
dec
jo
bnd
jge
popl
xchg
arpl
fs
shl
push
cmpsb
or
in
dec
scas
xchg
adc
out
out
rcrb
nop
mov
out
mov
pop
lret
mov
adc
icebp
dec
les
cmp
adc
out
cmc
fisttpl
mov
cs
loopne
pop
nop
jmp
std
push
push
push
jnp
dec
adc
int
cmp
repnz
leave
jae
mov
and
pop
xor
out
and
out
jp
push
jnp
jmp
mov
in
sti
pushf
faddp
mov
mov
push
xchg
adc
xor
fisubs
mov
shll
push
cli
loop
jne
cmp
jge
movsl
xor
cwtl
jmp
cltd
cs
lea
xor
push
lods
mov
xor
mov
sub
inc
test
outsb
xor
mov
rcrb
cmp
push
or
and
imul
lahf
popa
dec
fwait
rorb
lods
fcoml
cmc
jo
lods
adc
sub
iret
push
jmp
test
fneni(8087
push
push
hlt
nop
iret
fldlg2
mov
xlat
xor
or
xchg
sbb
jl
or
or
and
mulb
mov
add
add
lcall
in
hlt
mov
movl
stc
lods
inc
cwtl
inc
imul
pop
out
mov
loopw
adc
sbb
and
ds
out
scas
in
sub
xor
lret
push
adc
out
mov
add
adc
shrl
inc
push
cli
lods
add
pop
stos
sub
inc
or
ja
pop
or
adc
test
inc
mov
jecxz
fnstenv
or
pop
sbb
leave
fsubrs
out
or
pop
shlb
pop
add
xor
sbb
popa
mov
jbe
rorb
pop
mov
or
xchg
sub
lods
lds
sar
and
popa
inc
pusha
std
lods
sub
push
inc
lahf
lods
push
mov
push
fidivrs
lds
adc
xor
jne
out
out
dec
mov
and
test
punpckldq
roll
and
into
in
test
ss
cmp
andb
pop
aas
out
addr16
repz
sbb
imul
inc
std
sbbl
out
icebp
jo
bound
pop
adcl
jo
pop
adc
in
xchg
outsb
and
aam
imul
lea
shl
test
pop
and
div
mov
scas
jecxz
bound
dec
ss
in
lret
pop
inc
mov
lcall
xor
jg
mulb
mov
mov
test
lcall
mov
jns
and
daa
inc
add
mov
mov
addb
and
call
adc
or
sbb
imul
add
outsl
mov
and
call
imul
push
or
in
or
push
int
cld
sbb
scas
jmp
outsl
std
ret
add
sbb
out
int
push
dec
movsl
xor
outsb
pop
iret
adcb
cmp
jbe
sbb
push
imul
cwtl
xor
adc
pop
jecxz
cmp
jae
mov
inc
mov
dec
aaa
fucomip
dec
in
add
sti
out
xchg
loop
jns
daa
aad
xor
out
mov
bound
adc
shlb
jae
js
popa
addb
or
and
inc
dec
ret
cmp
sub
pop
es
mov
push
mov
xchg
pop
movsb
inc
cmp
lret
push
fists
rolb
xchg
shrl
xchg
dec
add
xor
negl
and
mov
sarl
adcl
dec
mov
mov
jns
fsubr
push
in
jno
xchg
mov
pop
lods
test
fnstsw
aam
jp
pop
popa
enter
lods
out
movsl
gs
add
pop
add
add
lahf
jmp
lds
jo
mov
jmp
inc
sub
jbe
mov
das
sub
stc
sbb
arpl
mov
jno
jle
mov
mov
outsb
rcrl
dec
xchg
mov
push
testl
fucomp
fimuls
mov
add
xchg
lret
sbb
insb
jno
in
jmp
jo
or
aaa
pop
jmp
out
push
push
mov
cmp
sbb
in
arpl
pop
ja
loope
xchg
js
fxch
daa
imul
stos
pop
outsb
push
mov
daa
cwtl
inc
ret
mov
imul
dec
shl
pushf
jno
loop
mov
xor
sbb
movsl
addl
test
jne
inc
sti
jecxz
dec
inc
or
cmp
and
ss
iret
push
imul
adc
in
xchg
dec
cbtw
dec
jge
inc
fwait
js
scas
repnz
or
push
push
xchg
xchg
iret
push
cltd
mov
cmp
xchg
clc
sbb
push
inc
xor
nop
push
mov
scas
imul
mov
add
icebp
jge
pushf
out
cmc
popa
inc
adc
mov
push
xchg
inc
pop
lock
xor
dec
dec
and
test
pop
out
in
add
arpl
divb
push
sub
pop
loop
or
inc
in
mov
stos
sbb
adc
sub
es
sbb
push
imul
stc
xchg
cli
xchg
push
xor
rorb
mov
std
ret
test
or
cmp
outsb
sarb
sahf
pop
cmpsl
popa
sub
test
xor
rcl
insb
push
and
inc
dec
pop
popf
add
sbb
or
pop
mov
inc
mov
fiaddl
jp
neg
nop
mov
lods
and
out
fbld
das
shl
xor
jmp
or
arpl
std
shlb
je
add
xchg
flds
xor
addr16
fwait
jae
iret
pop
mov
outsb
adc
rdmsr
jecxz
daa
in
mov
mov
and
add
xchg
add
repz
ds
push
cmp
or
xor
js
in
cmpsl
inc
inc
lock
fsubr
stos
cwtl
enter
cvttps2pi
push
loope
pop
sti
jl
or
das
push
and
punpcklbw
out
test
fwait
imul
out
cmpsb
mov
jecxz
lods
addr16
xor
or
out
jbe
fcoml
push
jg
jl
jbe
les
add
call
dec
out
or
pop
imul
cmp
dec
jmp
mov
inc
lock
and
loopne
cmpsl
adc
movsb
or
es
inc
cltd
test
mov
lcall
inc
nop
pop
cli
stos
inc
jmp
inc
js
aas
cld
fdivrs
psubusw
ljmp
push
xchg
mov
stos
push
xchg
pop
shll
pushf
add
ret
sti
prefetchnta
divb
push
shlb
addr16
daa
inc
fsubrs
and
aaa
repz
mov
jno
out
fistl
or
mov
daa
cltd
outsb
jle
push
pop
fidivs
fisttpl
imull
test
negl
ss
push
std
shl
popf
js
popa
and
add
fbstp
pop
sbb
fwait
jnp
jl
je
fsubr
dec
pop
push
cmp
mov
test
pop
xor
pop
xchg
mov
pop
cmc
jns
stc
negb
out
dec
xor
dec
call
popa
mov
sahf
out
sub
xlat
inc
loope
push
out
pop
leave
out
mov
mov
sub
in
mov
repnz
and
xchg
jle
inc
not
shl
out
jnp
das
test
jno
pop
movsb
popa
inc
dec
add
pushf
mov
and
lret
pop
sahf
aaa
lcall
das
mov
pop
stos
out
add
aad
test
jge
adc
inc
loopne
arpl
xchg
fnstenv
hlt
bnd
jecxz
nop
cmpsl
popa
fistps
call
jnp
dec
add
hlt
aad
mov
sahf
jo
mov
rep
cmc
xchg
rorb
imul
or
or
adc
push
mov
data16
mov
inc
imul
nop
inc
out
fistl
cmp
divl
lcall
or
enter
testl
lret
pushf
out
or
inc
dec
test
movsb
jb
or
xchg
pop
out
push
out
cltd
aad
mov
imul
sbb
popf
clc
add
or
adc
sbb
fisubrs
add
jb
sub
mov
add
and
push
loopne
or
jno
icebp
iret
mov
push
cltd
xor
push
mov
and
mov
jmp
inc
out
mov
adc
and
jne
outsl
sub
fadd
add
cmp
pop
push
das
lcall
inc
stos
mov
out
loopne
mov
inc
mov
ret
ss
fnstsw
push
incl
into
arpl
dec
jp
push
in
dec
mov
or
hlt
and
movsl
jne
aas
loopne
call
jp
sbb
xor
sti
sub
push
mov
xchg
mov
lock
loopne
insb
in
and
xor
shll
out
and
and
push
mov
test
inc
mov
aam
xor
je
call
jae
xlat
xor
push
incb
sub
inc
mov
movsb
jg
mov
sub
in
dec
cli
outsb
pop
cld
popf
nop
dec
sub
imul
and
gs
in
pop
rcll
add
xor
sub
loopne
mov
inc
adc
dec
scas
and
rolb
sub
mov
pop
mov
test
push
jp
lea
scas
mov
arpl
fsubp
jno
xchg
add
xor
arpl
mov
out
pop
jno
rolb
xor
xchg
sbb
sub
xor
lods
das
jge
adc
in
daa
fdiv
mov
and
in
add
lods
mov
mov
push
mov
mov
inc
push
sbb
jno
cmpsb
jecxz
fs
mov
out
pop
push
loope
xor
jl
jl
adc
div
fisubrs
or
xor
leave
out
jb
xor
ret
add
pop
push
mov
pop
dec
loope
scas
out
sbb
ficompl
out
cmp
movsl
adc
fs
sti
out
aas
add
xorb
movsl
mov
or
mov
mov
pop
aam
add
mov
clc
insl
out
and
pop
out
cmpsb
inc
fstl
ja
jp
in
les
dec
mov
andb
hlt
and
out
movsl
outsl
mov
jnp
push
xlat
out
mov
pop
jb
pop
lods
fildl
test
mov
sub
mov
subb
cmovae
and
in
shll
and
add
testb
inc
shrb
add
push
aad
push
mov
in
rorb
data16
dec
jmp
idiv
add
lods
cmp
mov
mov
cmp
adc
cmp
add
lahf
mov
aad
mov
mov
iret
sub
sub
push
pop
and
mov
in
push
mov
pop
movsb
rorb
mov
adc
push
pop
in
mov
mov
ret
xchg
mov
fs
movb
pop
out
aas
inc
loop
push
shr
lret
bound
mov
addb
push
sahf
aas
out
rdtsc
inc
out
repnz
xchg
stc
cmp
jmp
cld
inc
incl
mov
jae
mov
shl
outsb
std
idivl
push
jg
out
push
push
call
scas
in
clc
adc
in
pop
loope
loop
jae
sbb
call
pop
mov
imul
pop
out
cs
aad
and
pop
mov
jb
push
cmp
push
push
adc
shrb
inc
xor
lahf
mov
imul
les
fldt
sbb
movsb
fdivl
hlt
in
xchg
and
scas
fcomip
sti
pop
test
push
jg
xor
xor
insb
mov
xchg
and
lods
mov
inc
popa
insb
jg
mov
or
sbb
pop
pop
adc
xor
int
fst
shl
icebp
inc
cmc
cmp
sub
shlb
xchg
adc
popl
inc
add
cmp
fdivl
and
into
dec
push
lock
sarb
sbb
hlt
lcall
inc
test
ud1
aaa
adc
and
push
jg
cltd
push
xchg
out
imul
das
mov
mov
mov
add
mov
ss
shlb
dec
pop
into
lock
jne
in
sbb
movsb
stos
testl
test
push
lock
cmc
sbb
inc
inc
or
or
xor
mov
adc
pop
mov
push
inc
in
xchg
or
push
out
and
enter
mov
xlat
arpl
addb
in
mov
out
pop
in
pop
loope
imul
call
lods
cmp
inc
mov
add
outsb
jle
sahf
enter
shl
insb
sarl
push
addr16
mov
lret
inc
or
jge
rep
lcall
jb
xor
jmp
out
andb
mov
out
mov
dec
xchg
pop
jo
lcall
movsb
shrb
dec
push
leave
mov
and
aam
inc
inc
mov
inc
jle
jl
sahf
mov
out
mov
hlt
mov
pop
sbb
scas
mov
out
in
aaa
dec
pop
shl
jo
ret
push
in
jle
adc
icebp
or
out
xor
xchg
pop
sub
cmpsb
out
test
dec
xor
pushf
and
add
push
cld
jmp
repnz
push
sub
fsubr
fldl
imul
fwait
rclb
cmc
testb
mov
add
popf
and
pop
jns
xor
mov
out
xchg
rcll
jmp
divl
mov
out
testb
daa
push
pop
add
cmc
cltd
mov
ja
sub
bound
clc
int3
mov
cwtl
adc
jmp
push
add
out
sbb
jge
and
lret
stos
fcmove
mov
sbb
jp
ds
pop
pop
negl
mov
sbb
cmp
adc
pusha
push
imul
outsb
dec
jnp
xchg
inc
cwtl
lds
call
xchg
or
jbe
or
jmp
dec
cmp
addr16
rorl
gs
faddl
and
jmp
and
out
inc
xor
divb
cmp
out
push
mov
push
lret
push
ret
pop
bound
cmpsl
dec
jecxz
pop
sub
jne
sahf
or
lahf
and
dec
lret
mov
cmp
ja
cmp
out
jne
xchg
int
test
sub
leave
ret
add
jmp
sti
dec
fimull
out
sbb
mov
inc
or
rep
aad
loope
stc
mov
mov
or
lcall
mov
shl
lods
inc
sbb
mov
push
or
or
orb
dec
push
or
dec
loope
out
fsubrl
inc
out
sub
test
movsb
gs
cmp
adc
xor
in
shlb
xlat
sbb
pop
push
adcb
add
mov
ret
xchg
out
adc
dec
out
add
xlat
rcll
testl
xor
jecxz
xchg
loop
icebp
adc
mov
out
mov
jp,pt
add
push
pushf
cmpsl
idivl
test
imul
cld
ret
mov
pop
fsub
popa
bnd
rclb
or
sub
mov
mov
shrb
out
push
pop
lahf
fcomps
xchg
les
outsb
cmpsb
jge
imul
ds
les
insb
aas
out
or
int
mov
pusha
cmp
jns
divl
bnd
imul
add
xor
inc
cmp
mov
pop
push
dec
out
sbb
addr16
aaa
mov
jns
mov
cs
fbld
or
jo
add
sbb
push
mov
inc
out
sbb
aad
or
dec
sub
mov
dec
nop
add
mov
out
mov
or
mov
mov
adc
cmp
lret
mov
jns
loop
mov
mov
add
xchg
pop
jbe
and
sub
movsb
push
add
aam
jle
mov
sarl
mov
fbstp
mov
rorl
cmp
cmp
js
xor
mov
mov
popa
out
lock
or
out
mov
xchg
cmp
dec
movsb
add
shll
push
fbld
ja
inc
or
mov
mov
pop
out
jp
shll
in
lcall
jg
aaa
mov
mov
cltd
divl
idivl
pop
xchg
lds
je
mov
push
test
pop
scas
and
cmc
push
andl
in
pushf
or
sbb
es
cmp
lret
mov
ja
mov
les
mov
xchg
adcl
subl
sbb
pop
mov
cmpsb
stos
jno
insb
fcmovbe
pop
adc
sub
shl
insl
adc
xchg
ficoml
mov
in
adc
mov
pop
and
mov
jns
fdiv
sbb
sbb
sub
mov
jmp
in
or
in
loop
es
mov
sub
sahf
xchg
das
jmp
mov
cmp
pop
mov
in
adc
andl
fnstcw
cmp
pop
and
cmp
mov
cwtl
push
out
shlb
scas
aam
push
orl
jle
testl
pop
das
iret
int
sub
add
xchg
enter
inc
xchg
movsb
mov
in
icebp
mov
out
mov
pop
ljmp
ds
out
push
mov
pop
jbe
adc
aaa
push
push
out
and
ja
popa
aas
loope
xor
and
push
fbstp
out
lock
pop
mov
out
mov
mov
icebp
nop
add
jecxz
bound
rcrl
leave
inc
xchg
in
mov
mov
push
jo
dec
gs
loope
dec
and
jae
adc
out
sub
pop
pushf
imul
ret
dec
jecxz
dec
popa
stc
adc
sbb
negl
xchg
arpl
cmp
gs
xchg
out
outsb
pop
and
mov
sahf
push
push
xor
out
loop
mov
jae
data16
and
jmp
dec
push
out
adcl
stos
out
sbb
imul
pop
mov
sbbl
fdivl
jns
fsubrp
dec
ds
cmc
fldl
jo
cs
cmp
jmp
ss
jns
pop
sbbl
fcomip
adc
bnd
adc
or
add
pop
mov
lods
fistpll
out
mov
popf
push
ss
out
xor
push
xchg
icebp
data16
hlt
jmp
mov
mov
and
int3
stos
mov
dec
push
jb
or
mov
mov
cld
nop
stos
xlat
scas
xchg
shlb
bound
cmc
xor
and
stos
add
pop
movsb
and
popa
test
outsl
jecxz
xor
jbe
movsl
mov
cmpsl
dec
loope
shlb
rorl
pushl
fisubrl
les
or
movsb
divb
rorb
mov
lahf
jb
mov
adc
cmc
cld
cmp
cmpsb
lahf
xor
or
lods
das
popf
filds
daa
sub
pop
mov
fcompl
adc
jb
call
fistpll
test
ss
cli
or
jecxz
std
pop
hlt
ljmp
lret
lods
sbb
cmpsl
rcrb
clc
out
cli
out
in
pusha
push
mov
mov
jecxz
insl
add
push
pop
in
pusha
out
sbb
test
decl
xchg
jae
mov
std
loop
mov
add
subl
or
push
cli
pop
or
sbb
xchg
rcr
fistps
sub
xor
mov
xchg
dec
jmp
aam
mov
in
or
pushf
sti
add
pop
jbe
or
cmp
jmp
xor
je
outsb
out
lods
mov
cs
lcall
push
push
pop
clc
xor
rorl
jp
mov
lods
out
and
xchg
icebp
adc
out
push
notb
out
xchg
ja
mov
jne
decb
jne
scas
jmp
ret
pusha
push
xor
js
notl
nop
cmp
xchg
push
or
inc
shlb
xorb
sar
push
jb
pop
xlat
scas
cmpb
mov
dec
fisubrs
pop
cld
out
inc
imull
js
daa
ds
fistps
and
push
add
divb
out
mov
adc
call
sub
ror
mov
out
xor
mov
mov
add
cmpsl
fsts
mov
imul
mov
push
adcb
xchg
dec
bnd
lcall
test
jbe
sbb
ljmpw
in
sub
fnstsw
sarb
lcall
out
pop
xlat
push
pop
inc
dec
add
pop
mov
sahf
sub
xor
mov
in
popf
lods
cmp
cmc
fwait
aad
dec
cmp
adc
inc
ljmp
or
xor
xchg
adcb
out
mov
lret
ffree
ja
mov
push
orb
jae
fninit
mov
push
out
sbb
lea
push
icebp
cmp
xchg
dec
jne
mov
jecxz
aaa
lds
in
push
outsl
and
xchg
and
jle
sbb
call
enter
insl
add
cmp
in
dec
inc
testl
and
ljmp
fcmovnbe
cwtl
jae
xchg
out
jge
add
out
repnz
fsub
aam
out
push
pop
jnp
out
adc
cmp
jp
inc
push
push
icebp
outsb
adc
bound
add
add
xor
inc
pushf
push
stos
cli
fistpll
faddl
pop
aaa
push
imul
push
adc
dec
dec
f2xm1
and
sahf
pop
xchg
sbb
xchg
xorb
in
enter
shll
repz
jg
pop
icebp
add
or
mov
in
stos
inc
mov
push
xchg
mov
repnz
jg
incb
ljmp
shrl
jge
sub
nop
shlb
and
notl
xchg
or
andl
ds
jb
scas
imul
ds
into
imul
adc
sub
outsb
test
xor
or
clc
cmpsl
push
insb
lret
fs
adc
mov
mov
in
jp
cmp
out
or
popa
roll
cmp
sbb
xchg
cwtl
xor
sti
fucomp
icebp
sbb
arpl
sti
mov
lret
pop
cld
mov
shrl
push
or
imul
jp
aam
bound
in
mov
jg
scas
es
xor
arpl
jecxz
imul
sub
pop
loopne
jo
loop
pushl
lahf
repz
in
out
or
sbb
in
out
test
loopne
jo
icebp
mov
jmp
xor
stos
insl
jns
adc
inc
fsts
jo
out
xor
mov
pop
cmp
sbb
jmp
add
andb
pusha
push
jl
xor
pop
scas
bound
int
jmp
addr16
aad
xor
dec
inc
es
es
loop
lcall
rclb
pop
mov
mov
je
ss
jmp
xchg
rclb
shrd
out
adc
int
dec
fdivl
cmpsb
rolb
lods
leave
icebp
jp
fsubs
lods
lahf
inc
push
inc
sbb
pop
add
sbb
imul
mov
notl
jecxz
nop
cmp
fmulp
push
pop
iret
push
sbb
out
lods
jbe
jnp
jae
fisubs
out
loope
mov
xchg
imul
sbb
loop
and
mov
faddl
out
in
sti
xchg
rclb
repz
pusha
fs
mov
lods
sub
jle
fmull
loopne
mov
mov
out
es
call
dec
xchg
in
cld
inc
arpl
xlat
out
das
std
or
push
ljmp
ja
scas
fs
fdivrl
outsl
js
sub
xchg
pop
aad
notb
dec
rol
pushf
mov
bound
and
out
fisttps
sbb
aam
nop
pop
mov
mov
out
stos
add
mov
pop
test
pop
sub
or
out
ss
xchg
out
aam
subb
jmp
xchg
push
loop
jo
xchg
dec
inc
aam
cli
out
mov
xor
popf
inc
cld
hlt
mov
in
jecxz
fstpl
stos
push
fs
in
in
sbb
mov
int
xchg
xchg
xor
sbb
scas
add
mov
sbbb
inc
fstl
sbb
dec
push
pop
adc
adcb
and
cmp
fwait
jae
pcmpgtd
je
rcrb
dec
mov
out
push
cld
out
or
mov
or
out
push
push
int
std
in
in
loopne
mov
das
xor
jmp
dec
and
or
xor
mov
xor
sub
out
hlt
imul
out
mov
loopne
inc
scas
daa
mov
cs
jnp
jae
dec
ljmp
fs
pop
xchg
jecxz
jnp
adc
out
aad
loop
adc
mov
push
out
cltd
into
rcr
and
test
je
dec
adc
inc
push
jno
mov
cmc
lea
dec
push
stc
cmp
mov
push
shl
sub
dec
aas
out
hlt
popl
jno
out
mov
outsb
mov
pop
adc
push
in
fsubr
adc
aam
outsl
sub
out
mov
mov
jmp
sub
ljmp
jb
push
mov
push
or
add
shll
cmpl
fcmovbe
out
repnz
pop
test
lea
cmp
in
gs
into
repnz
pop
lock
mov
mov
movsl
div
aas
mov
mov
out
pop
push
out
jp
popa
test
xor
mov
jg
in
lock
and
nop
and
mov
xor
adc
lods
idivl
mull
outsl
xor
arpl
fisttps
loopne
mov
xchg
out
inc
push
ret
mov
lea
aad
add
lods
das
das
lahf
out
jl
movb
out
xor
xor
lds
push
clc
pop
mov
out
sbb
or
test
sahf
adc
inc
mov
jecxz
fisubl
mov
jmp
andl
push
mov
jmp
popf
dec
outsb
xor
push
jae
ror
out
sbb
xlat
pop
lret
neg
dec
cmp
mov
dec
cltd
sti
cmpsl
hlt
jb
stos
leave
repnz
dec
inc
mov
loopne
sbb
fmull
ret
lahf
pop
out
dec
xlat
add
ja
pop
popa
pop
jl
jae
int
jmp
mov
sar
push
pop
xor
dec
cmp
dec
mov
lea
push
scas
leave
out
adc
inc
mov
aam
sub
add
je
mov
mov
mov
fisttpll
loope
jg,pt
xor
loop
lods
cs
pusha
testb
sbb
inc
call
push
stos
popf
mov
fndisi(8087
pop
jae
test
mov
es
ret
mov
dec
bound
xchg
sbb
and
inc
pop
jb
ljmp
cli
out
int
in
mov
xor
and
mov
jp
jmp
mov
cmp
mov
ffree
out
aas
xchg
fwait
mov
icebp
xlat
cmp
xor
mov
fcmovb
ret
out
je
adc
push
adc
mov
out
lret
add
inc
inc
out
cs
xchg
and
and
xor
push
jmp
ret
mov
mov
test
iret
xchg
iret
pop
jns
adc
xchg
fs
pushf
push
pop
cld
outsb
sbb
adc
movsl
push
sub
and
repnz
adc
lods
punpckldq
dec
pop
pop
pop
lret
adc
cmp
sbb
fildll
mov
push
jl
pop
pop
xor
jno
aad
loope
mov
fidivrs
aas
inc
xor
xchg
mov
inc
fucomip
xor
xchg
push
js
scas
pop
push
push
pusha
testl
push
adc
and
orb
neg
fnstsw
mov
mov
in
push
dec
sbb
sub
fmuls
std
or
test
jmp
pop
out
iret
sub
push
popf
mov
insb
xchg
aas
add
ss
sbb
xchg
mov
xchg
xchg
loope
andl
fisubrs
ret
xchg
iret
jle
inc
mov
leave
and
inc
fists
mov
pop
add
imul
addr16
subl
jb
test
xchg
imul
dec
out
sbb
mov
xchg
negl
aaa
mov
scas
out
add
xor
loope
add
repnz
jmp
jbe
adcl
sbb
mov
mov
push
push
idiv
imul
int
in
or
out
lods
test
pop
out
pop
mov
mov
jo
in
cmc
mov
addr16
das
push
shlb
out
das
cmp
into
xor
cmc
je
mov
stc
jl
xor
out
dec
in
mov
out
ljmp
and
jecxz
or
or
mov
mov
push
inc
and
rolb
loopne
std
mov
movsl
sub
out
jmp
test
sbb
mov
iret
xor
in
mov
and
pop
outsb
out
sub
sbb
out
das
pushf
push
mov
outsb
je
push
mov
pop
cmp
fwait
and
adc
jo
mov
scas
push
out
leave
cwtl
push
mov
mov
aam
mov
add
or
push
out
lods
pop
adc
ja
fbld
out
pop
mov
imul
adc
mov
sti
mov
adc
cmp
jg
mov
push
out
adc
jne
lcall
pop
out
inc
mov
out
push
jmp
add
adc
out
jo
or
sub
push
pop
pop
rcl
divb
frstpm(287
pop
add
out
sbb
pop
sti
pop
xchg
inc
dec
jns,pn
mov
dec
inc
iret
xor
jp
insb
xlat
jle
fiadds
out
adc
fmul
mov
jb
inc
and
les
lock
hlt
jne
xor
jmp
sarb
push
pop
dec
inc
cmp
cmc
arpl
repz
js
outsb
jbe
sahf
mov
sbb
outsl
push
lods
bound
das
adc
lcall
shrb
and
cmpb
in
fisttpll
sahf
into
out
std
scas
mov
mov
lds
cli
pop
cld
push
lcall
in
cmpsl
int3
call
out
jl
les
and
xchg
out
inc
push
in
andl
dec
mov
sub
in
out
repz
out
mov
popa
jge
mov
xor
out
shll
cmc
mov
out
pop
fwait
iret
add
mov
sub
dec
loopne
jns
or
ds
mov
movsl
sbb
addr16
out
icebp
push
aad
testl
out
pop
xor
push
rcrl
lret
test
jle
inc
mov
jb
and
arpl
push
xchg
sub
into
popa
inc
repz
pop
mov
mov
idivb
repz
fldenv
iret
pushf
adc
outsl
cmp
data16
push
out
pop
rcl
dec
lock
push
punpckhwd
xor
movsb
mov
test
out
xchg
loop
jns
push
and
dec
lcall
push
xor
mov
loopne
mov
lret
add
xchg
pop
dec
sbb
call
sbb
cmp
fwait
out
pop
sub
enter
pop
out
pop
out
cmp
mov
icebp
movsb
cmpsl
addl
cmp
jno
repz
dec
test
js
pusha
push
ljmp
insl
imul
out
insb
and
out
cwtl
sbb
arpl
and
repz
mov
das
movsb
andb
adc
mov
push
jns
inc
and
out
lahf
adc
iret
icebp
das
out
sarl
insl
push
xchg
xor
xchg
jmp
shr
inc
jnp
xchg
xchg
add
pop
repz
aad
xchg
outsb
daa
shr
insl
mov
cmp
pop
in
lret
cmp
pop
or
fldt
push
adc
in
out
jl
and
jnp
out
test
mov
iret
jno
loopne
ljmp
out
push
cmp
das
lods
cmpsb
dec
mov
mov
jns
ljmp
inc
lods
sbb
and
test
or
popa
in
or
mov
push
xor
fsubs
outsb
pushf
cs
push
ja
fisubl
adc
out
cltd
outsb
dec
int
cwtl
xchg
push
imulb
xor
mov
mov
jbe
add
rcr
pop
mov
mov
shr
xchg
and
adcl
pop
xor
lock
push
je
aaa
jbe
js
dec
fnstenv
mov
out
sti
jno
movsb
mov
repnz
call
repnz
clc
jecxz
pop
mov
mov
hlt
or
popa
out
mov
mov
sbb
pop
dec
shl
add
out
lods
leave
xlat
inc
xor
pop
shlb
jp
js
push
pop
sub
out
imul
cltd
push
xchg
cmc
lahf
frstor
inc
je
add
sub
mov
aam
das
fnsave
jo
adc
jecxz
movsb
les
mov
out
in
sub
pop
sub
push
pop
cmp
mov
imul
and
repz
push
idivl
sbb
in
mov
popa
add
sub
insl
test
pop
fsubl
jg
out
dec
movsl
aam
nop
mov
icebp
roll
jl
loopne
jg
mov
pop
gs
push
push
fimuls
cltd
adc
out
push
jg
std
sbb
xor
in
pop
mov
xchg
sbb
push
sti
movb
jne
out
dec
xchg
cmpsb
sub
out
lods
aas
xor
fimuls
jo
push
and
dec
inc
or
imull
in
out
je
jge
jmp
inc
adc
loope
push
or
pushf
scas
out
push
mov
aas
add
mov
mov
pop
rol
insb
ss
hlt
mov
add
fdivrl
out
sub
inc
xor
sbb
in
loope
add
out
aad
mov
out
xor
adc
and
and
sbb
gs
xor
imul
or
sbb
ret
dec
push
jmp
pop
xlat
out
push
aad
imul
rcr
sahf
test
ret
xchg
ret
mov
dec
jge
cld
outsb
xor
mov
cmc
inc
push
shr
inc
pop
cld
sub
pop
fistps
clc
aas
pop
jmp
fisubs
xor
insb
jo,pt
mov
subl
inc
dec
out
arpl
bound
out
add
bswap
je
into
in
outsl
shrb
jo
cli
mov
cmc
cmc
sub
jecxz
stos
xchg
sbb
inc
jle
test
fisubrs
loopne
icebp
arpl
gs
fs
mov
xor
push
cmpsl
mov
add
or
push
lret
movsl
and
sub
jg
out
rorb
frstor
push
dec
jmp
insl
ljmp
xor
mov
das
inc
mov
clc
mov
fisttpl
lcall
push
mov
out
fistps
add
and
add
addl
in
fsubrs
or
add
daa
push
xchg
push
xor
cmpsl
or
or
test
outsb
test
pop
ljmp
cwtl
push
add
adc
xor
mov
lret
aas
out
cld
mov
jno
pop
outsl
mov
mov
dec
sub
dec
sub
mov
dec
out
out
push
fs
sub
push
repz
xor
xchg
dec
push
insb
push
addl
mov
xor
mov
ret
jmp
xor
xor
mov
es
push
out
jns
fbld
or
ja
pop
cmpsl
push
lahf
hlt
sahf
push
repnz
in
jmp
xor
cli
and
ljmp
adcl
fnstsw
xchg
icebp
dec
pop
in
push
inc
add
cmpsb
popa
pop
and
adc
cmpsl
out
test
jecxz
sub
pop
pop
fldpi
lahf
sbb
mov
mull
xchg
out
or
sti
icebp
jns
cmp
roll
lods
cwtl
or
in
fsubr
ja
sbb
out
sahf
mov
data16
jae
out
mov
and
sub
inc
bound
sbb
jne
push
push
pop
pop
in
fucomp
lret
jecxz
mov
clc
rclb
inc
sub
ret
out
xchg
jmp
out
inc
pop
sarb
jnp
fadds
xorl
into
pop
rorb
pop
xchg
aas
mull
outsb
movsb
test
ja
xor
pop
insl
inc
and
shlb
out
lods
cmp
out
ss
scas
out
adc
or
sbb
xor
push
lret
add
xchg
cmc
sub
outsb
mov
fsubr
rclb
out
shl
inc
aad
adc
adc
outsl
xor
cmc
dec
scas
xor
sbb
out
faddl
addl
hlt
and
inc
cmpsb
jp
test
add
cmp
sub
dec
jecxz
sbb
lds
cld
test
add
pop
cmp
mul
imul
je
xor
xorb
out
std
sub
fwait
add
push
push
pushf
out
pop
out
lret
fs
mov
stos
sbb
mov
pop
xchg
jb
push
das
int3
mov
stos
add
pushf
nop
subb
mov
sarb
jg
popa
repz
jl
mov
sbb
add
inc
push
mov
or
fs
jae
sar
jns
mov
mov
push
lods
out
and
test
loop
cmpsl
jmp
adc
arpl
push
xor
mov
fsubrs
ss
push
ljmp
stos
xor
js
mov
jecxz
xor
xor
or
insl
cmc
mov
jnp
es
sbb
ret
lret
push
stc
or
fidivl
mov
aas
rorb
add
mov
inc
scas
jl
pop
enter
cmp
lds
adc
shlb
mov
pop
lods
sbb
dec
lcall
jo
cli
dec
inc
jp
inc
out
pop
push
clc
sarl
cmp
lret
sbb
jecxz
xchg
mov
out
dec
hlt
das
movlhps
popf
mov
scas
xor
icebp
pop
div
jmp
insl
mov
gs
mov
jne
inc
aam
outsb
push
leave
mov
and
push
in
cwtl
ljmp
shlb
xchg
mov
shrb
and
je
mov
sub
stc
call
cmp
mov
fwait
sti
shll
jb
dec
push
sti
add
mov
cld
fisttps
fisubl
int
jo
in
xchg
in
not
cmp
ret
dec
xor
push
and
cmpsb
xor
push
sbb
gs
loope
mov
fiadds
jnp
mov
sbb
mov
mov
mov
arpl
test
or
cmpsl
mov
ffree
add
xor
dec
out
and
test
push
push
adc
fsubr
ds
add
mov
shr
pop
pop
pop
xchg
sahf
sub
inc
out
mov
dec
ffree
inc
push
out
cs
sbb
push
ljmp
cmc
push
out
aaa
ret
jns
cltd
adc
sub
xor
jp
push
ret
pop
out
mov
aad
sub
mov
int
in
fbld
dec
mov
iret
mov
add
shl
sub
inc
adc
pop
out
mov
out
addr16
jo
sti
cmp
fldenv
mov
insb
mov
push
mov
movsl
dec
add
push
inc
test
test
adc
popa
mov
mov
sarb
jmp
out
inc
or
movsb
fdivrl
cmp
daa
cltd
addr16
insl
jmp
and
out
push
push
dec
cmp
loopne
and
push
dec
adc
add
icebp
jne
mov
mov
mov
leave
mov
xchg
jns
xchg
aad
or
push
stos
lods
jle
out
add
mov
lea
mov
cld
sbb
cltd
js
pop
sub
popa
adc
fstl
sub
scas
std
and
out
add
movsb
in
nop
ret
aas
ss
mov
aaa
in
fstpl
out
jb
sub
xchg
nop
inc
or
cmp
mov
outsl
loope
fstpl
inc
jmp
and
dec
dec
inc
xchg
xor
pusha
leave
sub
fidivrl
iret
and
dec
sti
lds
xorb
daa
cmc
cli
fwait
mov
sub
popa
adc
jbe
stos
mov
mov
in
addr16
cs
xor
and
sbb
dec
cmpsl
jns
cmp
fcmovne
ficoml
mov
dec
iret
popl
cwtl
les
ror
mov
out
jbe
jns
inc
sub
les
xor
fidivl
xchg
mov
xor
pop
xorb
push
lea
pop
xchg
movsl
add
outsb
out
cmpsl
jmp
popa
dec
fistpl
cmp
fcmovu
push
xor
stc
xchg
rclb
pop
and
mov
push
pop
mov
mov
jb
clc
cmpsb
lds
mov
cmpsl
sahf
movsl
xor
adcb
and
mov
dec
mov
mov
fists
out
mov
and
cmc
lahf
mov
outsb
push
test
pop
rorb
xchg
cmpsb
loope
outsb
inc
in
xor
xor
iret
mov
jbe
data16
stc
out
incl
cmc
push
and
dec
xor
and
mov
ret
out
inc
inc
rolb
sub
mov
outsb
adc
pop
sbb
mov
out
pop
jg
pop
js
sub
pop
mov
jle
loopne
sub
inc
pop
pusha
insb
shr
push
cmp
in
lret
mov
loop
daa
shlb
cwtl
sub
jns
sbbl
jnp
filds
pop
iret
int
clc
mov
push
inc
and
stos
inc
dec
adc
hlt
aas
adc
pushf
pop
es
in
test
adc
out
cmc
xor
sub
out
leave
jecxz
je
xchg
imulb
mov
cmc
jp
cltd
bound
stos
xchg
out
adcl
outsb
xchg
imul
push
push
cmc
xchg
mov
aas
mov
divb
push
sub
cmpsb
loope
mov
fidivrl
das
rcl
mov
loop
ss
cmp
xor
and
push
push
jg
iret
ljmp
outsb
nop
add
jae
xor
xor
xor
dec
stos
cmp
lods
dec
push
dec
jbe
jb,pn
outsl
mov
fwait
cwtl
inc
shlb
shll
jecxz
add
sub
je
stos
and
inc
sbbb
lret
mov
ds
sbb
sub
in
repz
inc
dec
push
adc
ds
mov
sub
xor
nop
popa
inc
andl
jmp
mov
gs
add
inc
pop
ret
sarb
clc
jp
inc
inc
xchg
paddw
loope
or
dec
push
sub
pop
stc
sub
shlb
stc
shrb
pushl
ret
test
flds
jecxz
fildl
out
add
fidivrl
pusha
jo
or
jge
sub
out
inc
outsb
mov
popf
shl
jne
push
ja
mov
dec
aad
mov
addr16
inc
jecxz
xor
inc
sbb
sub
mov
loope
call
test
push
dec
cmp
inc
sub
je
fsubrl
jo
pop
adc
or
cmp
xchg
nop
lret
arpl
dec
push
pop
push
inc
outsb
test
cwtl
test
and
push
inc
mov
andl
loop
sets
push
int
outsb
pop
icebp
in
pop
xchg
xorl
pop
rcr
add
pop
add
mov
push
lds
mov
xchg
les
aam
push
jl
addl
fistpll
mov
and
aas
shrl
mov
dec
test
mov
xchg
faddl
jecxz
or
sahf
jbe
xchg
push
clc
push
outsb
pusha
mov
into
popa
je
testl
popa
ret
arpl
je
cmp
add
and
sub
xchg
push
jmp
stos
and
jp
jo
mov
xor
jle
add
push
les
cmpb
stos
hlt
xchg
hlt
cmpsb
test
test
mov
int
insb
jmp
iret
mov
mov
pop
ja
dec
lds
aam
fsubrl
xchg
xor
jbe
sbb
loop
pop
push
mov
push
ja
insb
aam
mov
mov
imul
and
shlb
popa
pop
mov
adc
xor
cs
jbe
sti
andl
inc
fisttps
lahf
lock
scas
cmp
xor
faddl
loop
and
cmp
outsb
dec
icebp
or
mul
jbe
icebp
daa
scas
cmp
aaa
push
dec
cmc
push
aaa
nop
mov
mov
inc
and
iret
lret
outsb
mov
rcll
into
fnstenv
pop
loopew
fwait
jnp
je
fldl
outsb
inc
add
add
dec
jge
or
add
addl
inc
popf
mov
push
mov
sarb
jge
dec
loop
cmpsl
in
rcr
pusha
mov
fadds
enter
xchg
loop
mov
inc
sbb
pop
mov
popf
loope
cmp
mov
aaa
jbe
and
mov
rcll
push
stos
jbe
sbb
dec
mov
jle
add
add
jb
jnp
es
testl
inc
mov
dec
pop
rcr
mov
dec
divl
rolb
iret
push
pop
into
ret
fbld
rcrb
out
mov
scas
scas
addl
push
mov
push
outsb
dec
jmp
jmp
filds
mov
neg
xchg
addl
repnz
sbb
or
jns
ljmp
xchg
outsb
rcl
cs
pop
inc
lcall
lret
or
and
or
pop
mov
negl
cli
setle
dec
push
inc
fisubl
into
pusha
sub
outsb
ror
push
xchg
les
dec
mov
jecxz
pop
int
xchg
pop
bnd
nop
shl
xor
insl
mov
pop
jne
push
shlb
jbe
dec
into
dec
push
push
pop
xor
jae
push
outsb
add
push
and
aam
or
js
sbb
mov
mov
xchg
repnz
fwait
imul
mov
rorb
ljmp
iret
pop
lcall
std
dec
fs
push
and
inc
nop
dec
std
into
imul
imul
dec
sub
inc
mov
mov
and
lcall
jl
cmovl
incb
out
movsb
push
and
fldenv
lcall
add
or
mov
add
dec
cwtl
push
jnp
cmpsb
sahf
mov
pushf
or
and
add
sub
scas
stos
inc
ret
fidivrs
hlt
outsl
jp
push
mov
or
or
mov
inc
bound
push
pop
movsb
insl
imulb
iret
pop
lcall
mov
pop
out
jbe
cmovge
shr
add
cmp
mov
out
adc
in
popf
sub
mov
dec
mov
fnop
or
daa
shrl
jno
shl
mov
ja
fwait
pusha
xchg
fcmovb
psubsb
in
shll
jg
sbb
cs
dec
lret
imul
outsb
push
in
stos
xchg
mov
cmp
pusha
sbb
hlt
pop
push
mov
and
dec
cmpsl
pop
xchg
shr
jecxz
add
add
xor
jns
outsl
adc
fimull
and
inc
cs
ja
jmp
cmp
jg
dec
xchg
loope
xor
cmc
dec
andb
stos
jmp
mov
cmpsl
lock
rcrb
lret
aaa
stos
sub
xor
lock
out
jne
orb
xchg
fwait
in
jbe
xchg
nop
sahf
out
mov
lcall
aas
in
adcb
add
pop
inc
or
jecxz
in
and
fsts
adc
shr
sbb
sbb
dec
popf
inc
push
mov
jb
stos
mov
dec
add
push
sbb
rcl
push
popa
cmc
dec
push
cmpl
adc
sbb
cmc
xchg
lret
mov
ja
dec
push
xchg
dec
loop
stos
jl
outsb
pop
mov
ja
mov
pop
ret
stos
mov
fldcw
fcompl
rolb
jge
out
mov
add
inc
add
in
sarb
stos
pop
push
adc
xchg
loope
sbb
cmp
xor
rolb
loopne
fwait
adc
inc
outsl
jbe
repz
sbb
dec
sub
ljmp
bound
sahf
or
shrl
pusha
or
mov
lea
mov
sbb
inc
and
int3
push
xor
pop
jbe
enter
mov
je
pop
shll
fidivs
ss
inc
das
out
shlb
push
outsl
ljmp
or
inc
dec
xor
shrb
es
xchg
and
and
loop
jecxz
addr16
xchg
loope
mov
jbe
das
cld
jo
sbb
cltd
mov
out
das
dec
fiaddl
dec
fstps
mov
xor
push
pop
ja
insb
movsb
adc
sbb
lcall
cwtl
imul
push
rorb
add
lods
out
fidivl
inc
fbstp
out
aas
arpl
repnz
pop
arpl
cs
sbb
add
add
daa
jle
into
xor
jne
mov
sub
adc
outsb
jbe
xchg
test
test
subl
out
xchg
outsb
sbb
ret
ja
push
stos
inc
js
dec
das
cmpb
inc
sbb
add
and
and
stos
sub
inc
xor
dec
push
cld
inc
mov
adc
movntps
imul
push
mov
or
xor
jecxz
out
stos
pop
fidivl
pop
jg
pop
xor
xor
shrl
andl
xor
push
and
dec
xchg
mov
add
xchg
bound
jecxz
push
pop
fidivrl
shr
mov
scas
enter
sahf
out
mov
aaa
jb
jae
ficomps
pop
cmp
mov
jbe
push
vmread
cmp
shl
push
insl
scas
pop
cltd
xchg
jne
and
sub
gs
sub
loope
repnz
push
mov
lret
xor
imul
dec
loopne,pt
ss
dec
std
adc
jecxz
jg
popa
sub
lods
and
mov
mov
loop
imul
aad
cmp
les
call
rolb
cmp
mov
push
cmp
negb
notl
out
leave
fnsave
sbb
mov
fstps
fisubl
mov
loop
stos
push
jle
jb
and
outsb
fnsave
mov
mov
insb
add
add
fiadds
shrb
std
bound
cmpsl
add
pop
ds
fs
jmp
rclb
rorl
call
mov
imul
out
fidivs
pop
not
mov
dec
jmp
mov
psubsb
das
adc
stos
inc
sarb
outsb
and
in
push
sub
adc
fldl
divl
push
es
jmp
mov
and
ljmp
ljmp
dec
add
jne
sarb
test
mov
ret
pusha
dec
push
xor
mov
xchg
pop
leave
nop
add
xor
notl
dec
add
loopne
add
sub
xchg
sbb
jo
div
mov
stos
mov
pop
test
dec
cwtl
xchg
fcompl
stos
test
hlt
filds
outsb
mov
scas
insb
lret
aad
jb
fisttps
js
pop
pop
arpl
and
add
loopne
sarb
jmp
dec
into
popa
fistps
shll
repnz
idivl
sub
nop
in
push
push
pop
rolb
iret
adc
test
pop
cwtl
xor
insb
jns
test
push
addr16
adc
xor
mov
loope
dec
mov
test
xchg
xchg
adc
stos
mov
adc
push
loop
adc
jbe
pushf
jecxz
stos
in
fldl
mov
mov
mov
sahf
pop
les
adc
xchg
fwait
dec
cltd
sbbb
adc
std
fcmove
loopne
jae
call
sbb
xchg
jbe
movsl
pop
je
fs
hlt
adc
xor
jb
or
jne
aas
rcr
dec
cmp
cmpsl
sarl
sar
adcb
enter
test
cwtl
fucom
notb
repnz
das
daa
cmp
js
in
ja
lahf
or
push
jecxz
jb
stc
cwtl
dec
aad
test
mov
imulb
or
hlt
add
scas
mov
jb
ret
inc
popa
ds
neg
dec
jmp
mull
test
sbb
pushf
mov
push
inc
das
pusha
cwtl
lock
inc
shrb
sub
pop
stc
idivl
jb
in
into
leave
fisubs
xchg
sub
popa
xor
mov
and
xchg
jl
mov
out
insb
cmp
lcall
add
in
out
xor
sub
jne
inc
cs
pushf
iret
and
fwait
and
js
mov
or
ja
add
sbb
lahf
pop
lret
ret
jb
sub
xor
sti
inc
push
jge
cmpsl
aad
shlb
clc
js
push
outsb
pop
sub
pop
notl
cmp
adc
add
lahf
scas
in
jge
sub
push
sarb
popf
cmp
stos
dec
push
lcall
dec
imul
adc
stos
add
or
and
nop
inc
mov
fwait
push
add
mov
jb
negb
adc
subb
fsub
adcl
push
pusha
push
mov
lods
movsl
mov
push
or
cld
repz
cmp
subb
push
xor
dec
cwtl
ret
loope
xchg
push
push
sub
jnp
pop
xchg
jbe
or
call
inc
push
idivb
fs
repz
xor
or
pop
popa
pop
push
sar
pmulhw
sbb
iret
mov
fbld
arpl
cmp
pop
or
inc
pop
sbb
or
jns
lcall
scas
insb
into
out
mov
repnz
ret
hlt
mov
ds
xchg
jbe
fidivs
lahf
jns
arpl
mov
jne
ss
lcall
adc
test
stos
inc
adc
pop
es
push
ret
adc
shrb
xor
add
pusha
das
inc
push
lret
popf
insb
inc
js
insb
loop
push
mov
pop
dec
test
jno
adc
movsl
sar
fiadds
outsb
xchg
cmp
rolb
xor
pop
push
jae
pop
push
mov
pusha
lahf
cltd
xchg
iret
jmp
aas
pop
mov
dec
mov
dec
xchg
jmp
push
dec
je
dec
cmpsb
nop
dec
jmp
xor
into
inc
mov
mov
dec
dec
jl
xchg
fists
dec
push
fnsave
cltd
xchg
mov
mov
div
xchg
mov
add
ljmp
negb
ret
lcall
ss
aaa
nop
je
mov
or
gs
jo
dec
push
int3
popa
jl
shlb
mov
mov
push
aaa
jne
out
mov
fsubp
fstpl
cmp
mov
mov
movsl
shrb
inc
push
xorb
cli
faddl
cmpsb
mov
repnz
push
jbe
in
xor
mov
pop
pop
movd
mov
dec
push
lcall
sbb
mov
cmc
js
sub
pop
fcoml
jl
cmp
outsl
shrl
mov
push
and
push
orb
ja
dec
int3
mov
dec
mov
and
adc
fidivrl
pop
jl
hlt
scas
sub
xchg
sahf
loopne
mov
xor
push
aas
loope
in
das
imul
push
and
nop
aas
inc
stc
xor
scas
pop
push
xchg
mov
cmc
stos
lods
fdivrl
out
or
imul
aam
rcr
sbb
sub
ja
xor
push
imul
jb
mov
push
add
mov
mov
jns
movsb
push
mull
in
pop
mov
inc
xchg
and
nop
sbb
arpl
shl
jno
repz
pop
iret
gs
outsl
jnp
lods
stos
rcll
pushf
loop
lret
xchg
jg
outsb
fimuls
xchg
shr
dec
add
pop
push
mov
push
dec
outsb
xchg
pushl
cmc
push
leave
xor
pop
repnz
out
mov
divl
mov
int3
arpl
imul
loop
jp
mov
cmc
pop
mov
jmp
xor
xchg
or
outsb
cmp
dec
stos
fcoms
fwait
in
faddl
rcr
aad
idiv
test
cmp
pop
jbe
lret
mov
and
xchg
rcrb
loope
pop
xchg
xlat
popa
cmp
jbe
add
xor
inc
jno
lods
mov
sub
pop
inc
dec
pop
stos
and
je
push
adc
xor
adc
cwtl
cmp
fistpll
pop
test
mov
loopne
mov
jle
insb
xchg
outsb
fnsave
mov
sub
mov
fildl
add
sub
repnz
fnstenv
inc
jle
aaa
ss
lods
jle
push
push
sbb
cmp
dec
test
jbe
notb
mov
in
out
adc
dec
sub
imul
add
push
test
fidivl
inc
aam
add
jle
rolb
inc
call
jnp
jo
adc
divl
inc
sahf
pop
fidivrl
sub
rolb
xchg
pop
imul
lahf
or
std
xor
fiaddl
mov
push
fwait
jecxz
push
fisubl
or
fnsave
aam
xor
xor
sub
dec
mov
mov
fidivrl
add
js
ljmp
adc
jne
lahf
andl
data16
xchg
add
push
out
mov
ss
movsl
mov
jp
cmc
push
push
xchg
ret
fmul
push
mov
into
idivl
nop
jb
aas
pusha
shl
outsb
pop
movsl
lods
push
xchg
sahf
loop
outsb
popf
lahf
test
mov
mov
loope
cmc
push
push
jle
clc
cmpsl
sub
sahf
inc
test
je
jmp
or
rolb
in
bound
adcb
out
jbe
or
sbb
lahf
sbb
xchg
inc
std
stc
push
pop
dec
push
inc
cli
mov
pop
add
mov
in
xor
xor
and
jno
das
xchg
jbe
test
or
call
test
jge
out
inc
and
sbb
stos
gs
push
mov
jnp
jns
out
mov
or
mov
roll
outsl
fstps
gs
pop
stos
jno
subb
xchg
xchg
or
push
call
fildl
imul
outsb
cmpsb
xchg
loop
push
repnz
xor
xchg
mov
jno
adc
lahf
icebp
mov
bound
mov
fwait
js
inc
jnp
bound
pop
and
rolb
cmp
shlb
addl
mov
jb
int
pop
aas
push
or
shlb
pop
dec
mov
pmulhuw
push
bound
pop
pop
fcmovbe
mov
mov
mov
nop
aaa
repz
rcrb
sub
fimull
mov
adc
mov
call
dec
cwtl
push
enter
ficoms
nop
pop
and
repnz
nop
push
insl
std
push
xor
jno
in
and
rcl
pop
push
outsl
out
dec
push
in
ljmp
or
loop
sub
xor
sub
enter
sti
scas
pop
inc
shlb
fidivl
fcomip
cmp
movsl
ja
ljmp
inc
dec
mov
lods
jne
stos
pop
fwait
cmp
mov
fsubs
cmp
cwtl
lcall
pop
jb
aad
push
mov
aad
cmpsb
pop
outsb
pop
fwait
cmp
dec
shrb
aam
xor
daa
sbb
lods
iret
sub
and
scas
jle
popa
rcl
scas
outsb
jle
in
into
rcl
call
mov
popf
xchg
push
popa
out
sti
in
xchg
lcall
sbb
bound
je
outsb
in
ja
xor
testl
ss
test
lahf
pop
repz
mov
sub
repnz
mov
jmp
and
or
jle
daa
push
mov
cmp
inc
orb
cmp
ret
adc
cmp
ja
aam
cmp
call
stos
inc
popf
cmpsl
push
subl
shl
lods
lods
or
por
jae
xor
iret
ja
incb
rclb
and
sbb
call
inc
js
dec
jl
jecxz
shlb
mov
test
dec
cli
rcrb
inc
stos
ss
ljmp
inc
jmp
xchg
sub
sarb
jne
and
in
add
add
and
ljmp
iret
imul
dec
int
dec
mov
aas
insl
xlat
xor
rclb
dec
lret
dec
and
outsb
rcll
pop
dec
cmp
inc
aad
mov
xlat
outsl
ljmp
sar
insb
push
imul
jp
or
mov
mov
push
fwait
icebp
cltd
dec
dec
mov
dec
mov
mov
pop
inc
mov
ja
xchg
js
in
inc
or
mov
xchg
xchg
dec
sti
adc
dec
pop
aad
pop
mov
cmp
and
jne
mov
out
cmpsl
inc
pop
pop
pop
mov
mov
das
sbb
mov
daa
xor
jbe
pop
sub
out
inc
loopne
ret
stos
push
inc
nop
pop
dec
movsb
push
dec
icebp
int
inc
xchg
add
xor
push
xchg
pop
hlt
aad
jb
fs
test
mov
std
mov
imul
cmc
imul
push
inc
mov
es
or
jns
mov
sub
in
jl
lret
loop
jb
loop
das
and
add
int3
cmpsb
fdivl
popf
mov
pusha
sbb
add
stos
cltd
cmc
push
outsb
push
cmpsl
subl
sbb
add
adc
test
dec
aam
dec
stc
mov
xchg
fists
lcall
popf
loope
pop
rolb
inc
nop
stos
mov
mov
cmp
push
jbe
jecxz
fistpll
push
xor
xor
popa
dec
cs
mov
nop
cmc
repnz
out
sbb
mov
pop
divl
mov
lea
and
icebp
sbb
dec
jl
or
cwtl
sti
aam
mov
inc
orb
mov
int
filds
sub
pop
pop
sbb
pusha
pop
lret
cli
and
imul
mov
arpl
hlt
push
or
adc
stos
mov
sub
popf
push
jmp
neg
fwait
negl
repz
fmuls
frstor
sub
pusha
shlb
imul
sub
movsb
mov
push
inc
xchg
cmp
push
outsl
sub
sbb
cmp
testl
pusha
push
ljmp
push
arpl
imul
mov
out
fldenv
jbe
dec
xor
sahf
push
test
jmp
std
fisttps
xor
shlb
mov
stos
shl
pusha
ret
je
jecxz
jne
imull
leave
insl
xor
insl
pusha
push
hlt
inc
sbb
sub
and
adc
shlb
and
and
push
loop
loope
test
shlb
popa
sub
cs
out
push
xchg
jb
popa
imul
je
push
les
jecxz
xor
push
popf
and
lods
inc
lds
mov
test
and
in
sub
fbld
xchg
out
popa
ljmp
ja
ljmp
cmc
dec
mov
les
mov
loop
jne
loop
push
loope
push
in
shrl
cmp
jbe
imul
loop
jbe
testb
xor
sub
push
mov
and
push
in
loope
jne
push
imul
loop
and
loop
pop
lret
sub
hlt
push
fisubrl
and
dec
lods
or
jnp
push
mov
loop
jmp
mov
test
das
insb
out
inc
push
rorb
xchg
pop
pop
or
jle
nop
outsb
loope
add
adc
mov
bound
pop
xlat
arpl
in
lcall
test
fbstp
cmp
out
sub
fsubrs
dec
hlt
xchg
scas
movsb
jno
fildll
jno
sbb
xor
test
je
outsb
cmc
inc
dec
mov
hlt
mov
cmp
inc
pop
xor
cwtl
insb
or
dec
adc
pop
mov
mov
push
inc
jo
jge
push
ss
inc
fldcw
mov
cs
mov
out
inc
adc
xchg
cs
or
mov
jecxz
dec
loope
jnp
aam
outsb
jnp
inc
cmpl
jbe
or
clc
xchg
mov
aad
lea
jg
pop
addr16
notl
mov
repnz
and
xor
mov
jp
in
jecxz
mov
rorb
in
ret
test
fwait
adc
xchg
movsl
adcb
or
and
std
pop
sbb
adc
lahf
aad
add
ret
fbld
xor
or
adc
jge
sub
aaa
out
in
loop
insl
add
int
inc
adc
ja
lcall
lock
xor
xchg
pop
mov
sbb
adc
cmpsl
imull
mov
fbstp
out
mov
cs
nop
xor
jle
fldenv
inc
stos
jno
icebp
sbb
jl
sbb
xchg
ljmp
dec
pusha
int
frstor
mov
test
andl
int3
sbb
xchg
hlt
setg
lret
rcl
sbb
jb
xchg
les
jl
popa
adc
ljmp
fbstp
xor
jmp
les
mov
or
in
push
push
repnz
jnp
leave
jo
jbe
add
lods
jbe
dec
adc
mov
xlat
xchg
aam
xchg
sbb
imul
mov
fisttps
movsl
fmuls
add
outsb
ret
jge
mov
rcrb
push
sbb
lods
jl
push
adc
xor
cmp
fnsave
pop
cmc
push
sarb
xor
es
pand
mov
jle
bound
cmc
arpl
jbe
xor
jne
in
jne
push
orb
jge
clc
push
fcoms
fsubrl
inc
leave
push
frstor
mul
xchg
mov
inc
sbb
bound
inc
or
jbe
cmpsl
cmp
mov
mov
rcrl
cli
fnstsw
stos
inc
bound
push
outsb
outsl
cltd
push
jecxz
pop
int
call
and
xchg
sbb
daa
stos
rorb
idivb
loope
in
push
test
push
fucomp
adc
or
bound
fimull
xchg
icebp
popf
mov
aaa
stos
mov
out
fsub
inc
es
rol
push
loopne
jmp
pusha
imul
mov
adcl
loope
addr16
negl
pop
cltd
imul
dec
insb
sarl
dec
rolb
xor
push
push
or
cmp
hlt
mov
iret
cmp
add
add
mov
inc
popa
mov
xlat
mov
or
dec
mov
mov
ret
cmp
add
pshufhw
bound
std
mov
aaa
xchg
cmp
jbe
or
cmp
out
cli
lret
jp
sbb
or
std
xchg
aas
push
gs
adc
ds
fdivs
clc
xor
xor
xor
or
jne
and
or
add
adc
stc
leave
stc
jmp
stc
push
js
shll
sub
dec
js
pop
xchg
ret
xor
mov
aaa
sub
mov
test
pop
aas
pop
dec
pop
outsl
pop
dec
pop
mov
sbb
or
add
sub
lret
stc
das
stc
push
js
adc
bound
lods
inc
add
pop
dec
outsl
xor
dec
popf
pop
xor
hlt
subl
push
mov
lock
add
add
inc
adc
roll
gs
push
aad
std
repnz
loopne
jmp
jne
push
and
push
roll
daa
xlat
ret
push
cmp
aas
mov
xor
xor
loopne
movsb
andb
outsb
mov
push
push
ds
xor
inc
xlat
jp
js
cli
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
xor
fs
xlat
js
jp
jl
jle
jle
jle
jle
pop
mov
inc
pop
in
rcrl
rclb
push
mov
cmc
fildll
fbstp
fistps
jg
inc
popa
inc
add
sub
adc
xlat
je
mov
sbb
cmp
sub
lret
pop
mov
sbb
cmp
pop
fistl
push
cmp
xor
pop
dec
mov
inc
and
and
xchg
sub
mov
repnz
cli
xor
mov
loop
bound
xor
stc
lret
stc
std
stc
xchg
stc
sar
stc
popa
dec
andl
or
jo
and
bound
sbb
js
jp
jl
pop
shlb
fiadds
pop
add
adc
rol
push
neg
ja
ret
cltd
mov
xlat
mov
cli
mov
sbb
jg
sbb
roll
mov
adc
add
repz
repz
xlat
repz
or
popf
xor
stc
shrb
xchg
and
pusha
adc
stc
jb
push
stc
adc
push
cmp
out
dec
incb
decb
fsin
push
dec
sbb
dec
outsb
incb
pop
mov
push
jb
movsb
push
inc
mov
inc
jl
jle
jle
and
sub
mov
fildll
js
jbe
mov
test
pop
rclb
pop
iret
mov
inc
adc
or
aam
sub
xchg
push
xchg
aas
mov
cmp
push
ds
xor
xor
xor
xor
cmc
pop
ret
mull
jp
fisubs
movsb
push
dec
cmp
or
add
push
adc
fs
push
repnz
pop
dec
adc
pop
or
pop
pop
pop
rorb
fistpll
fisttps
push
roll
rol
repnz
xchg
mov
adc
xor
jle
jle
jle
and
dec
aas
insb
insb
stc
int
xor
jmp
pop
or
push
stc
cmpsl
icebp
cmpsb
stc
inc
stc
cmp
jb
insb
add
xor
fwait
outsb
or
dec
popa
jp
sbb
dec
mov
pop
mov
ret
aam
movsb
mov
adc
add
ja
push
mov
insb
cltd
dec
cmp
aas
inc
mov
rclb
and
rorl
pop
test
pop
stos
pop
mov
pop
std
pop
jno
mov
adc
icebp
xlat
icebp
cli
stc
lcall
stc
mov
xor
and
aas
inc
cmp
test
pop
inc
jnp
push
xor
lret
int
fbstp
mov
and
adc
dec
sub
rolb
lret
hlt
jecxz
and
mov
and
pop
mov
shr
add
arpl
xchg
or
sub
pop
out
cli
push
ds
iret
mov
fs
pop
js
jp
jl
jle
jle
jle
jle
pop
and
inc
fiadds
loope
out
negb
loop
hlt
dec
rcll
icebp
add
ffreep
jbe
cmpsb
xor
ret
or
gs
cmp
dec
ds
xor
xor
fisubrs
mov
jne
ret
xor
xor
stc
aad
mov
cmp
mov
stc
dec
stc
fdivr
pushf
stc
aas
stc
fidivrs
sbb
repz
incl
ret
push
jecxz
mov
in
mov
dec
mov
jle
jle
jle
jle
jle
jle
jle
jle
pop
and
add
rcrl
fst
inc
push
rolb
ffreep
fisttps
rorl
sub
mov
andb
sub
adc
adc
add
repz
repz
stc
repz
repz
repz
push
stc
jno
add
push
js
jp
jl
jle
xchg
mov
mov
and
adc
adc
mov
es
sub
cmpb
ljmp
incb
add
cmp
shlb
loop
pop
hlt
aaa
push
and
loopne
and
cmc
xor
and
inc
mov
inc
xor
push
test
lret
leave
pop
dec
pop
pop
sar
jb
repz
repz
adc
shll
lods
mov
xchg
enter
add
test
hlt
call
js
jp
lahf
push
ds
cmp
pop
dec
xchg
sub
inc
sub
jp
sub
and
daa
xchg
hlt
and
and
stos
add
xchg
sbb
cmp
shll
ret
imul
test
lret
cli
xchg
xor
ret
ja
pop
ja
xchg
aas
pop
dec
adc
sub
repnz
cmp
cmp
pop
shlb
xchg
add
mov
mov
stos
sub
ss
lods
aaa
test
push
cmc
mov
pop
dec
and
add
fst
pop
xor
ret
push
xchg
mov
stc
mov
insb
push
mov
pop
popa
subb
xchg
mov
enter
dec
add
stc
mov
xor
bound
mov
popf
or
and
xor
xor
xor
pop
inc
rcr
arpl
popa
and
mov
adc
add
repz
adc
mov
stc
mov
mov
stc
mov
stc
or
lea
aas
dec
pop
xor
loopne
xchg
and
inc
outsb
push
mov
push
icebp
lret
stc
push
stc
and
in
sub
push
lret
ds
pop
loopne
jne
and
lret
jmp
mov
jp
adc
push
push
push
or
sbb
cwtl
out
mov
lods
and
rcr
adc
int
mov
shrb
mov
push
mov
cmc
lods
movsb
icebp
and
mov
icebp
adc
es
icebp
sub
movsb
push
adc
dec
sub
popa
fucompp
hlt
mov
hlt
adc
and
xor
xchg
jns
dec
lcall
xchg
lret
fldl2e
and
adc
mov
mov
test
out
sub
lret
jp
jge
lock
push
add
nop
pop
sub
or
xor
outsb
inc
mov
stos
pop
sbb
jge
mov
mov
mov
push
fs
jp
jl
jle
and
loopne
into
outsb
out
or
add
test
pop
outsb
add
add
push
mov
inc
popf
jmp
jg
xchg
fbld
fildll
fistpll
fistps
jge
or
scas
mov
ret
shll
pop
repz
div
cmp
jge
mov
test
sbb
sub
pop
mov
rclb
pop
mov
xchg
test
dec
mov
xor
dec
add
or
ficoms
mov
rol
xchg
inc
jecxz
pop
hlt
fstl
ss
dec
cltd
ffreep
sub
mov
insl
mov
icebp
mov
lods
stc
mov
jle
adc
maskmovq
idivl
sar
mov
adc
add
or
push
fimuls
and
andb
out
js
hlt
dec
test
pop
lret
shll
xchg
add
xor
stos
inc
jp
and
dec
mov
lret
pop
mov
sbb
pop
xor
jmp
xchg
xor
and
loope
test
pop
mov
push
ss
jl
mov
loopne
lret
out
test
mov
ljmp
dec
subl
mov
imul
jo
repz
cmp
aas
fmull
test
mov
and
js
jne
xor
loopne
fsubl
cmp
push
inc
enter
fildll
fistpll
fisttps
fildll
lods
pop
fstl
or
fbld
rcl
rol
icebp
test
or
insb
stos
inc
mov
ret
ljmp
lcall
movsb
rorl
pusha
inc
sub
pop
mov
mov
inc
xchg
push
adc
cmp
dec
add
pop
push
ffree
pop
dec
jbe
je
repz
repz
push
pop
shrb
lods
fcomip
push
lods
loope
xchg
dec
fdivs
sub
test
out
cmpsb
popa
cmp
loope
sahf
mov
and
xor
outsl
mov
mov
inc
mov
shrb
mov
sub
adc
xor
sbb
adc
add
dec
aas
mov
mov
fs
xchg
mov
gs
shll
add
js
int
jle
xchg
test
and
or
test
js
sbb
jg
or
lock
jno
jmp
in
gs
inc
loopne
and
mov
push
js
mov
bound
mov
xchg
mov
ss
mov
jno
mov
lds
call
dec
test
in
pop
cmp
mov
rcll
ret
icebp
movsb
adc
loop
inc
das
push
inc
ret
int3
movsb
inc
shlb
clc
sub
xor
xor
mov
leave
jae
cmp
sub
or
mov
or
loopne
gs
leave
rclb
mov
mov
enter
sub
mov
inc
adc
xlat
cmc
jbe,pt
out
jecxz
fistps
sub
scas
mov
jo
and
inc
inc
push
aas
or
dec
cmpsl
fisubs
lods
test
fcomp
stos
xor
mov
xor
sub
loopne
cmp
adc
les
popf
fisubrs
fists
bound
daa
xchg
or
add
xor
iret
repz
or
push
pop
dec
jo
andb
lock
into
aad
mov
and
xor
pop
outsl
stos
xor
xor
xor
xor
psadbw
dec
pusha
sub
cmpsl
pop
repnz
mov
jb
repz
add
xor
pop
add
out
cli
mov
idiv
leave
jmp
lods
test
daa
insb
icebp
cmp
mov
push
xor
data16
fisubs
dec
fistpll
mov
pop
mov
push
push
or
mov
sub
testl
add
leave
or
sti
out
xor
nop
aas
jo
or
imul
pop
mov
pop
je
xor
lea
inc
fstp
mov
push
ja
roll
adc
push
lods
das
add
arpl
jmp
ret
test
push
int
pop
ficomps
mov
and
or
sbb
ret
je
imul
loop
and
loope
or
pop
sbb
mov
shll
sub
dec
mov
jne
leave
das
sub
mov
imul
outsb
shll
mov
adc
ret
pusha
je
mov
xor
stc
loope
xor
dec
hlt
jmp
dec
lea
push
mov
mulb
ss
inc
mov
and
xor
test
xor
test
and
shlb
stos
inc
ja
xor
stos
mov
push
lods
mov
insl
pop
lods
jmp
push
insb
fdivs
outsl
xchg
scas
push
stc
and
jmp
mov
mov
adc
stc
arpl
mov
dec
jb
aaa
loope
xor
clc
mov
aaa
stc
je
mov
shlb
ja
mov
ret
icebp
sub
jecxz
xchg
das
adc
add
insl
adc
xor
xchg
xorb
sub
ret
icebp
test
ljmp
xor
inc
and
push
mov
mov
mov
bnd
push
lods
outsl
scas
popa
mov
add
mov
adc
sub
stc
insl
stc
outsl
mov
sub
ja
hlt
jne
ja
jo
imul
jle
jle
jle
xchg
popa
pop
mov
arpl
fldt
test
mull
and
sub
imulb
testl
js
das
jle
jle
jle
jle
and
and
xor
xchg
and
push
stos
insb
fbld
call
repnz
and
rol
adc
mov
divb
sub
jae
dec
and
mov
out
dec
cs
sub
mov
call
mov
loopne
jne
xor
repnz
call
jecxz
mov
jg
jb
xchg
jb
jmp
movsb
imul
popa
xor
or
inc
lds
testb
mov
xor
daa
pop
xchg
sbb
mov
xchg
ljmp
mov
ret
lods
add
sub
jmp
icebp
push
ret
jp
and
notb
enter
mov
add
hlt
dec
add
jo
in
pop
push
sbb
jb
add
fwait
pop
mov
leave
aam
addr16
push
jb
xor
fidivrs
in
push
out
add
out
xlat
mov
dec
gs
jns
mov
pop
mov
outsl
and
dec
adc
jecxz
insb
lock
adc
jle
push
mov
aaa
mov
gs
js
and
ja
and
dec
mov
js
dec
inc
mulb
fimuls
pop
add
lods
sbb
std
adc
adc
xchg
xchg
in
outsb
inc
mov
movsb
cmp
test
mov
fmulp
xor
xor
xor
mov
sub
mov
adc
hlt
xchg
jmp
rcll
adc
pop
fsubrp
out
mov
out
add
addb
ret
inc
and
jl
push
push
jne
in
out
leave
data16
fwait
sahf
daa
insl
bound
jle
cvtps2pi
and
cmp
loop
hlt
jns
pop
jo
adc
adc
testl
outsb
sbb
xor
push
shrb
fwait
pop
jecxz
ret
add
stos
xchg
lahf
test
jne
ret
add
pop
fimuls
scas
lret
jle
xchg
mov
testl
jle
jle
and
inc
push
ret
inc
roll
cmp
in
incb
inc
cmp
adc
add
mov
dec
popf
divb
sbb
mov
fcomp
cs
sub
inc
add
popf
and
lods
sub
pop
mov
cmpb
rorl
insb
jo
imul
out
xor
test
imul
dec
or
imul
sbb
xor
jo
movsb
mull
inc
in
mov
flds
fimuls
dec
push
pusha
ss
dec
js
push
popf
bound
xchg
and
test
sti
stos
xor
or
sbb
xchg
movsb
fisubrs
lods
outsl
adc
jbe
dec
cmpsb
jne
and
add
roll
add
push
mov
test
inc
fsts
ss
repnz
iret
shlb
push
imul
mull
cmp
add
inc
mov
sti
inc
ficoml
scas
cmp
pushl
lcall
dec
je
fcoml
mov
mov
mov
jecxz
mov
push
adc
cmc
jle
hlt
adc
cmovae
fisubs
fistl
outsl
add
cmp
mov
nop
in
push
xor
cmc
xchg
test
cli
push
in
pop
push
xor
sahf
loopne
bound
inc
add
cmp
mov
adc
cmp
sahf
dec
fsubrl
cmc
call
js
fildll
mov
imul
lods
adc
pop
call
xor
pop
lahf
xor
test
pop
nop
int
das
hlt
outsb
xlat
in
jo
pop
xor
rcl
pop
out
ret
add
push
mov
cmp
into
rorb
push
xor
cmp
inc
sub
sub
mull
dec
iret
movsb
push
mov
adc
rcll
push
sbb
dec
push
jae
xor
dec
lea
push
bound
incl
mov
rolb
inc
jne
fimuls
pop
insb
outsl
adc
and
jb
cmp
aas
ds
in
bnd
and
imul
add
ja
sub
xor
add
xor
lcall
out
rorl
ficoml
jecxz
push
xor
and
xchg
dec
cmp
and
jne
shll
xchg
sbb
sub
jo
mov
xor
xchg
rol
add
imul
imul
mov
cmpsb
inc
out
lea
outsl
lds
lret
rcrl
cmpsl
js
adc
insl
dec
movsb
add
repnz
jp
adc
inc
mov
pushf
ficoms
ret
push
movsb
int
shll
js
jecxz
push
bound
aaa
sub
add
add
add
cld
dec
adcb
outsl
ja
shl
pop
daa
sub
ljmp
jecxz
and
rcrb
xor
pop
sbbb
add
xchg
call
aad
dec
push
mov
rcr
inc
aam
mov
mov
sahf
in
push
jge
dec
arpl
jbe
icebp
stos
arpl
sub
in
pop
adc
push
push
pop
mov
adc
fimull
adc
and
xchg
js
adc
sub
daa
pop
push
jb
std
pop
push
dec
ret
sbb
or
icebp
inc
fcmovu
in
shlb
repz
jp
fimuls
jmp
adc
mov
ss
inc
xor
and
xor
insl
jmp
test
dec
mov
add
mov
sbb
add
jg
shlb
cmp
rcr
jne
fs
and
test
xchg
popa
add
movsl
in
insl
repz
sarl
add
dec
push
outsb
inc
lcall
insb
or
test
xchg
and
popa
push
lods
mov
mov
sbb
sbb
lret
adc
pop
pop
rcr
fwait
mov
ja
shll
ret
jbe
rclb
loopne
xor
fwait
xor
insl
inc
movsb
mov
testl
test
push
das
outsb
jmp
lods
jne
lcall
add
rorb
pop
push
stos
pop
jo
test
or
loopne
jae
mov
repz
jbe
xor
pop
cmp
mov
test
inc
and
test
in
push
pop
sbb
aam
outsb
fbld
sti
or
ret
fcoms
dec
or
ds
popf
in
cmp
sub
mov
pop
movd
pop
iret
hlt
scas
inc
and
repz
add
out
test
insl
loope
lret
ljmp
test
test
sub
stos
test
ja
xor
mov
aad
sub
push
test
ss
mov
inc
orl
rorb
xor
mov
loopne
fmul
mov
stc
sub
lods
jmp
arpl
xchg
and
add
je
or
loope
and
shl
mov
push
bound
int3
scas
sub
cwtl
dec
or
push
jne
push
xor
fiadds
mov
jbe
mov
adc
js
imul
lcall
in
mov
andl
push
sub
xchg
pop
outsb
repz
aad
dec
and
dec
inc
pushf
dec
inc
fbstp
and
mov
aam
js
push
fs
sub
xor
inc
enter
or
fiadds
jbe
aaa
je
xor
das
test
pop
sub
sub
test
stc
js
push
sub
in
push
inc
add
push
jmp
mov
insl
hlt
dec
flds
sub
in
mov
add
inc
cmp
xlat
and
daa
inc
xor
cmp
cmp
lcall
dec
pop
mov
mov
inc
pop
dec
leave
add
in
jne
imul
mov
das
fwait
in
add
sbb
and
scas
push
hlt
or
push
jae
dec
movsl
sub
push
mov
bound
popl
xchg
sbb
xor
jecxz
addr16
cmp
mov
mov
mov
and
sbbl
and
stos
in
xchg
mov
inc
in
push
sub
add
sub
ja
jbe
movsb
popf
test
push
mov
ret
dec
and
sub
jo
and
xor
and
fs
mov
jne
shll
out
fwait
xlat
add
js
cmp
or
imull
shl
repz
xor
adcl
lock
xor
dec
sub
xchg
xlat
adc
pop
test
orb
mov
notl
xchg
out
mov
movsb
cmp
out
loope
or
fiaddl
cltd
notb
imull
loop
cmp
dec
sub
fiadds
and
dec
add
or
jecxz
in
push
ret
out
rclb
jne
dec
dec
inc
test
inc
sub
xchg
lcall
outsl
mov
xlat
ret
std
push
jns
ljmp
inc
stos
bound
and
ror
and
pop
ja
mov
push
popf
or
lods
stos
mov
mov
pop
sbb
jae
mov
ja
aad
xor
sarl
dec
lahf
outsl
rcl
cmp
sub
mov
sbbb
cmp
in
shrb
outsl
inc
cmpsl
test
add
jmp
hlt
mov
pop
popf
ror
push
add
fisubl
push
mov
add
inc
lods
sbb
icebp
int3
icebp
test
sub
add
push
orb
mov
cmpsb
sub
or
dec
mov
int3
dec
mov
xchg
scas
push
test
xorb
cmpsb
out
subb
mov
imul
cmc
outsl
push
hlt
loope
idivb
sarb
je
pop
or
jmp
outsl
mov
push
dec
sbb
inc
movsl
xchg
cmpsl
in
and
arpl
fsts
shl
dec
inc
test
xor
js
loop
jns
push
out
aad
call
inc
push
push
pusha
hlt
inc
sbb
adc
cmp
dec
lret
adc
call
outsl
cmp
dec
and
ret
dec
mov
into
pop
in
or
mov
jns
aam
lahf
push
sub
push
pop
fisubl
or
out
mov
xchg
sub
push
xchg
adc
sub
aam
xchg
sbb
loop
mov
sbb
cmp
push
stos
and
dec
dec
and
fidivl
test
jo
clc
or
pop
xor
fisubrs
pusha
in
pop
mul
mov
lds
sbb
test
jbe
xchg
jmp
inc
jmp
push
int
lret
jbe
test
jecxz
lds
xor
das
jo
add
cmpsl
loop
aaa
mov
inc
adc
jecxz
cmp
jecxz
cmp
scas
inc
test
xorb
pop
cmp
or
inc
jne
stos
push
inc
cmp
into
ret
inc
arpl
movsl
jae
shrb
shl
leave
loop
lods
rorl
xor
lret
add
inc
mov
sub
and
dec
lods
mul
cs
or
inc
pop
sub
shr
sub
jmp
and
cmp
ss
sahf
xor
roll
push
mov
popf
fidivrs
loopne
cmpsb
inc
mov
add
inc
leave
sarl
loope
cmpsl
sub
xchg
adc
test
add
push
outsb
xchg
mov
insl
inc
insb
loopne
inc
push
push
xchg
dec
xchg
mov
xor
dec
lods
test
lods
jnp
arpl
dec
sub
lcall
sar
ret
xchg
bound
pop
adc
out
or
outsl
leave
cmpsb
pop
dec
or
adc
add
jge
enter
and
loope
mov
xchg
inc
loop
ficomps
outsl
scas
push
addb
ss
push
daa
mov
sarl
in
push
sub
pop
add
sub
sub
jge
or
xchg
outsb
nop
mov
in
inc
jb
in
sub
mov
push
jnp
in
mov
into
scas
hlt
outsl
push
fwait
push
pushf
out
jne
push
fbld
in
jecxz
js
jg
xor
bound
push
push
stos
add
mov
jnp
ud0
add
mov
pop
lods
jo
sarl
lods
aad
sbb
rcrb
pop
jne
mov
add
enter
xchg
lods
cmpb
add
inc
rorb
adcl
test
xor
scas
adc
xor
clc
dec
add
dec
movsb
adc
lds
dec
imul
dec
out
jne
popa
add
dec
add
cmp
inc
sub
dec
mov
dec
sbb
dec
cmp
leave
cmp
jg
shl
and
loope
aaa
das
adc
out
in
outsb
outsb
sbb
adc
cltd
aaa
push
out
pop
in
and
pushf
fwait
push
add
cmc
sub
stc
sub
jle
mov
sub
pop
popw
div
rorl
mov
inc
xchg
stos
add
fisubrs
fstpl
das
in
and
xchg
cmc
subl
in
jne
push
in
dec
push
xchg
outsl
jmp
movsb
and
loopne
aaa
xor
gs
sarb
movsb
cmp
fwait
outsl
lds
and
rcl
js
rolb
jns
out
dec
outsl
lahf
testl
addb
test
fcmovbe
inc
add
and
test
add
imul
imul
test
sub
shll
xor
aas
imul
xchg
sub
add
dec
imul
mov
cli
push
mov
xor
mov
fnsave
jmp
dec
mov
push
sahf
lcall
adc
xchg
jb
push
push
shlb
or
dec
mov
mov
lahf
loopne
and
jle
push
lods
add
leave
movsb
lods
mov
add
mov
cmp
ret
addb
test
subl
mov
jo
and
test
push
mov
clc
ficomps
pop
push
jbe
dec
outsl
test
and
jo
adc
inc
or
iret
mov
notb
xchg
add
test
jge
jne
jmp
hlt
jb
or
fistpll
and
dec
mov
js
sub
xor
insb
xor
adc
jmp
xchg
xor
test
xlat
mov
ret
testb
ficompl
call
sbb
and
mov
lods
push
outsl
mov
inc
cmpsl
cwtl
out
jbe
or
pusha
imul
mov
push
outsb
mov
mov
dec
ja
aad
fwait
add
movb
mov
fimuls
lods
xor
jnp
jmp
push
and
adc
or
scas
adc
inc
aam
inc
sub
loopne
mov
mov
je
mov
push
mov
jp
ficoms
jo
mov
dec
xlat
test
xorb
loope
jb
dec
mov
sbb
fsubrl
and
xor
jo
ljmp
mov
out
cmc
xor
repz
loope
fwait
sbb
fsubrp
iret
pop
and
int3
je
sub
and
int3
add
and
inc
mov
cmc
fisubrs
sar
mov
mul
pop
movsb
jnp,pn
stos
arpl
push
arpl
ljmp
in
shll
jnp
in
shrb
mov
lods
jmp
sbb
ret
movsl
push
add
mov
scas
jmp
sub
jecxz
rcll
pop
mov
inc
icebp
mov
and
popf
add
xor
dec
mov
add
imul
out
rcll
jecxz
lahf
xor
movl
sbb
and
xor
cmp
lahf
xchg
mov
sbb
out
adc
insb
xor
outsl
push
hlt
stos
gs
test
mov
jmp
xchg
cs
jns
out
pusha
mov
pop
mov
cmp
jo
jecxz,pn
pop
hlt
push
call
adc
mov
mov
jp
jns
dec
pop
repz
and
and
or
imul
cmpsl
faddp
jne
adc
out
rcr
insb
movsb
push
xchg
jmp
adc
outsb
test
sub
gs
inc
insb
hlt
lret
jb
out
mov
adc
fs
fsubr
out
enter
mov
sub
and
out
add
pop
adc
js
fsubr
xor
cmp
out
inc
push
aaa
cmpl
sti
hlt
bound
ret
adc
mov
jge
inc
jbe
add
cmpsb
idivl
pushf
test
mov
cmp
lock
outsb
pop
shrl
icebp
xlat
mov
sarl
out
cmp
jns
loopne
lret
jo
cmp
xor
rol
test
dec
push
lods
push
aaa
inc
pop
aad
xor
ss
mov
lahf
sbb
xlat
adc
jmp
ljmp
push
out
jge
gs
imul
jo
int
or
outsb
jae
pop
les
sub
jmp
push
sub
mov
pop
sub
add
out
lea
or
jg
out
push
pop
ja
inc
pop
jmp
out
pop
adc
mov
out
stos
inc
cltd
sub
sti
add
das
mov
stc
arpl
sar
mov
scas
cmc
dec
out
xchg
fwait
mov
mov
cmpsl
pop
fstl
jp
push
or
and
pop
push
xor
adcb
lcall
push
jmp
xor
adcl
inc
pop
dec
mov
pop
xlat
rcr
and
xchg
hlt
out
sub
fs
jecxz
out
jle
sub
push
lods
sub
pop
inc
push
test
mov
cmpsb
add
jo
mov
iret
inc
push
ret
jecxz
out
xchg
das
push
cmp
ljmp
call
sti
in
fcomi
clc
jmp
cld
repz
sbb
sub
jb
mov
scas
testl
out
sarl
movsb
mov
add
das
gs
pop
negb
aas
lcall
rcll
and
inc
inc
popf
filds
inc
mov
inc
pushf
lcall
dec
xor
jbe
mov
dec
je
xchg
imull
test
sbb
out
jo
xor
cmc
cmp
outsl
movsl
sbb
mov
and
jo
cmc
jl
es
mov
add
push
inc
jmp
adc
mov
push
sarl
push
pop
arpl
addl
cltd
mov
inc
and
xor
mov
flds
or
idiv
and
pusha
imul
cmc
nop
loopne
jno
adc
and
add
inc
jp
insb
cmc
jmp
mov
pop
pop
fldenv
inc
jle
add
and
shll
adc
mov
xchg
cmpsl
mov
mov
int3
or
sbbb
shlb
push
push
add
aam
xchg
sub
jnp
push
sbb
inc
add
sub
mov
ljmp
mov
mov
sub
push
aas
or
loop
jge
mull
add
mov
aaa
mov
sar
out
lret
and
pop
inc
shl
cmp
outsl
ljmp
inc
and
sub
add
aaa
jge
pop
and
xor
mov
jb
les
cmpsl
sub
add
repnz
ror
rcrb
in
mov
shlb
repnz
scas
ss
cmc
mov
loop
repnz
flds
mulb
pxor
fcmovbe
imul
aam
clc
jmp
adcb
sbb
insb
dec
movsl
add
sbbl
out
andb
jae
sub
jns
js
divl
jae
imul
out
lcall
lret
fcom
clc
dec
mov
push
iret
inc
cmp
test
push
and
in
enter
cmp
imul
push
xchg
and
add
outsb
fucomip
ljmp
adc
lods
mov
ds
imul
sahf
fwait
mov
mov
dec
inc
add
scas
jb
mov
mov
mov
popa
cld
jne
or
popa
add
and
adc
mov
loope
out
sub
repnz
jae
sub
and
ds
pop
jmp
out
push
adc
and
sub
shl
pop
ljmp
rcrl
shlb
ljmp
mov
xor
sub
pop
stos
jmp
jmp
adc
mov
cwtl
adc
push
jne
mov
sbb
loope
in
iret
jbe
repnz
or
mov
mov
pop
push
adc
rcrb
jp
mov
xor
stos
leave
imul
cld
ret
mov
andb
mov
or
sarl
push
fs
cwtl
xchg
stos
out
inc
les
or
in
jg
jns
sub
jae
outsl
dec
inc
xor
data16
arpl
fisubrs
repnz
enter
jge
add
out
sub
push
xor
lods
push
test
cmp
xor
mul
inc
push
test
inc
sbb
or
lods
mov
out
mov
push
xor
mov
outsb
cli
mov
lahf
pop
orb
dec
and
je
mov
pop
stc
xchg
xor
fucom
and
xor
imul
lahf
test
sub
cmp
insl
fs
ljmp
or
sub
jmp
out
cmc
xor
mov
dec
mov
addr16
cmpl
shr
repz
repnz
adc
mov
addr16
ljmp
cmovae
inc
fs
into
pusha
inc
xchg
out
mov
ffree
jb
jo
cmp
rclb
xor
inc
out
cmp
in
fimuls
ret
sbbl
andb
inc
mov
push
in
scas
dec
popa
adc
adc
or
int
add
loop
mov
push
or
add
sbb
loop
flds
loop
cmp
hlt
lea
pop
les
mov
xchg
lods
inc
dec
int
push
and
sahf
loope
mov
js
cmp
loopne
stos
push
xchg
xor
inc
dec
inc
inc
mov
push
mov
push
mov
mov
sub
rcl
stos
imul
or
sbb
push
ljmp
dec
hlt
addr16
jno
ret
and
stc
push
or
das
cmp
cli
mov
and
repz
adc
bound
push
push
jns
or
lea
cmp
pop
out
fadds
js
push
ds
push
mov
adc
cs
xor
ret
jne
push
scas
mov
imulb
jnp
popf
enter
idivl
inc
pop
in
daa
mov
sub
and
rcll
cs
adcb
loope
xchg
jp
aaa
das
dec
push
cli
in
pop
or
dec
adc
ja
je
fidivrl
lret
xor
pop
lods
popl
mov
ds
xchg
mov
dec
sub
push
iret
pop
pop
idivl
xor
addb
lcall
nop
stos
clc
movsb
insb
inc
mov
push
mov
jns
inc
or
jb
and
pop
add
inc
shrl
pop
or
xor
dec
pop
enter
mov
mov
sub
sarl
enter
jb
mov
cs
sub
or
shl
pop
in
shlb
shlb
fcomps
jne
ljmp
arpl
mov
xor
ficompl
ljmp
dec
int3
adc
imul
scas
jb
mov
xchg
mov
shll
sub
and
pop
cmpl
test
outsl
outsl
test
mov
sub
mov
testl
fstpt
jecxz
lds
sub
jge
mov
hlt
cmpsb
sahf
xchg
aaa
imulb
push
sub
pushf
scas
in
jbe
cmc
add
or
cmp
inc
sub
push
aaa
pop
xor
scas
inc
loope
rolb
mov
xor
push
aas
lea
xor
out
or
adc
mov
fdivl
push
aas
adc
pop
rorb
subb
fsubs
push
and
sub
sub
nop
adcb
mov
insb
push
je
and
xchg
push
sbb
fwait
dec
cmp
jmp
inc
push
addb
rorb
in
js
je
mov
inc
sub
push
sahf
push
loop
in
in
stos
inc
jns
inc
ret
out
and
insb
notb
je
adc
cld
mov
lret
push
or
gs
inc
sbb
ss
sbb
fadd
inc
jp
xchg
lds
dec
mov
lods
testl
xchg
mov
and
sbb
js
insb
int
testb
mov
dec
sub
aaa
ss
inc
test
and
push
mov
jo
push
pop
inc
aaa
popa
xchg
push
lock
inc
imul
dec
pop
insl
dec
sahf
pop
lret
lods
dec
push
or
pop
inc
rcrl
inc
xor
xchg
mov
lahf
in
push
divl
out
push
jl
push
pop
mov
pop
jnp
in
pop
iret
xorb
testl
je
sub
ja
mov
jno
testl
xlat
shll
popa
jp
add
xor
fisubs
inc
pop
lods
sub
xchg
sub
aad
adc
imul
inc
adc
sub
push
ss
or
gs
mov
mov
cmpsl
mov
xor
jae
les
subl
mov
call
sbb
pop
dec
or
xchg
inc
jmp
xor
pop
inc
mov
push
in
out
or
subb
mov
mov
ret
mov
push
je
jne
add
out
inc
xorb
lods
xor
sub
pop
push
mov
pop
pop
mov
pop
nop
inc
push
dec
test
hlt
lcall
xchg
mov
pop
jl
push
test
dec
shlb
adc
mull
test
push
dec
jg
push
jecxz
scas
fnstenv
popa
cltd
xor
bound
push
inc
pop
push
iret
ljmp
outsl
and
xchg
push
adc
fs
cmpsb
jbe
test
fcmovnu
dec
mov
jge
inc
jecxz
lods
jns
mov
sbb
and
popl
popa
mov
stos
dec
jae
sub
pushf
aaa
add
jnp
sub
push
mov
lret
xor
scas
ret
mov
sub
push
push
xlat
dec
mov
mov
inc
mov
push
sbb
mov
and
test
mov
sub
inc
repz
fildll
push
add
mov
test
mov
ret
or
scas
or
mov
jns
out
jns
pop
mov
ljmp
stos
in
faddl
mov
mov
std
mov
jg
lods
cld
ret
or
xor
push
into
and
mov
mov
push
mov
pop
pop
aaa
bound
add
enter
and
out
xor
jns
or
andnps
xor
insb
push
push
inc
push
pop
and
push
jmp
mov
cmpsl
push
lods
xchg
shrb
popf
je
scas
sub
dec
insb
test
sub
sub
add
adc
arpl
adc
lret
dec
mov
int3
das
mov
pusha
fwait
xchg
test
pop
clc
push
dec
add
imul
insb
rcll
inc
sub
jnp
or
cmc
cmp
lret
pop
xchg
pop
adc
sub
dec
sub
insb
jmp
mov
hlt
sub
insb
sbbl
or
jmp
pop
push
jmp
movsb
mov
pop
mov
or
or
add
icebp
insb
out
sbb
sbb
sub
adc
mov
aam
es
ljmp
push
hlt
dec
or
and
push
test
stos
in
xchg
out
sub
pop
shr
je
xor
push
aaa
push
imul
xchg
cwtl
cmp
test
sbb
rolb
mov
adc
inc
outsb
dec
test
arpl
inc
dec
nop
in
lods
xchg
xlat
mov
lock
es
dec
mov
dec
add
adc
and
inc
aaa
xchg
arpl
fwait
xchg
fwait
sub
test
sub
or
and
dec
xor
xchg
popf
mov
add
cmpsl
xchg
aaa
or
insb
outsl
adc
jne
mov
jae
xchg
pop
imul
pop
inc
jmp
inc
int3
cmpsl
pop
outsl
inc
xlat
adc
jb
iret
add
adc
add
dec
push
dec
jmp
mov
shlb
inc
into
sub
sub
shrl
repnz
sbb
xchg
xchg
sub
iret
sub
add
cmpsl
mov
dec
lret
aad
out
push
add
loop
sub
dec
xchg
xor
bound
sub
adc
lods
jb
addl
mov
test
sub
jecxz
cmpsb
mov
shlb
xchg
push
jae
xorb
xchg
adc
inc
mov
and
loope
outsb
mov
mov
adc
mov
dec
fiaddl
dec
fldl2t
mov
push
aaa
mov
pop
sub
outsb
mov
sbb
push
stos
and
mov
sub
negb
imul
aad
aaa
add
mov
sub
inc
rorl
dec
dec
jnp
fwait
mov
inc
mov
mov
jnp
leave
cmp
rorl
inc
lock
add
add
int3
mov
scas
das
in
and
xor
into
insb
sub
lods
rclb
pop
dec
or
mov
lahf
jp
loopne
popa
push
int
or
or
and
icebp
mov
jne
push
in
inc
and
pop
or
and
je
and
sbbb
lock
jne
repz
mov
or
je
mov
xlat
idiv
ds
pop
push
push
push
int
pop
xor
push
cs
add
jb
sbb
xor
mov
mov
out
push
sub
xor
inc
inc
adc
pop
xchg
inc
cld
les
nop
scas
sbb
or
pop
jb
mov
aaa
sbbb
xchg
sub
fiaddl
js
andl
jecxz
cs
subl
test
popl
push
cmp
and
filds
sub
and
test
fimull
pop
loope
test
mov
or
imull
lods
push
xchg
sub
imul
xor
mov
inc
mov
iret
fdivs
jecxz
loopne
dec
outsb
sub
sbb
fwait
lods
testl
addl
mov
or
lret
xor
inc
outsb
cld
push
je
and
call
pusha
mov
add
divl
aaa
int
xorb
xchg
inc
or
push
call
setbe
cli
inc
loope
cmc
push
imul
mov
fwait
lods
inc
push
rcrl
or
xorb
cmc
xor
es
and
push
inc
loope
aam
imul
int
shrl
shll
loopne
inc
lock
push
push
das
xor
mov
adcb
inc
je
inc
fwait
xor
push
inc
sub
mov
mov
mov
cmp
push
add
ja
inc
fwait
aas
and
push
andl
ss
lea
push
push
jp
xor
mov
in
sub
xor
icebp
cmp
bound
mov
lock
aaa
dec
xchg
test
or
sub
push
pop
push
xchg
iret
cmp
outsl
dec
movsb
push
int3
frstpm(287
sub
xchg
test
push
sub
push
scas
sub
push
jb
adc
push
cmpsl
sub
dec
mov
jbe
stos
push
out
add
push
hlt
out
jmp
mov
insb
dec
lret
das
fisubrs
xor
add
sub
pop
push
sub
push
dec
lret
and
pop
hlt
test
xchg
into
mov
jb
pop
lods
xchg
aad
es
mov
push
call
lods
sub
lret
or
inc
push
repz
inc
adc
push
iret
and
aam
adc
inc
mov
jae
add
rorl
fcoms
push
push
loopne
cmp
jb
fldl
push
and
mov
sub
push
loop
jno
sub
loope
aaa
ret
shlb
sub
adc
out
sub
stos
out
cmp
imul
int3
xor
jns
das
stos
test
rorl
jmp
and
sub
cmp
inc
stos
inc
jbe
in
and
fidivl
pop
dec
xchg
jae
or
mov
add
insb
xchg
pop
je
or
subl
push
sub
insl
mov
idivl
mov
xor
stos
dec
divl
push
inc
dec
push
test
dec
test
stos
inc
or
pop
out
mov
push
sub
ljmp
rclb
cmp
inc
ss
mov
sub
imul
mov
fwait
add
inc
je
mov
aam
and
xchg
push
mov
xor
jle
push
and
sub
std
sub
imul
mov
xchg
stos
adc
mov
push
push
adcl
jb
das
out
adc
or
outsl
xor
in
add
fmuls
adcl
add
fs
nop
das
sub
ret
add
push
aaa
subl
xor
mov
jmp
and
pop
jnp
imul
cmpsl
stos
and
push
ret
push
rclb
iret
jmp
inc
pop
or
fcmovbe
ljmp
xor
ljmp
jp
dec
push
mov
xor
mov
and
xchg
rclb
dec
test
pushf
dec
hlt
xlat
ss
and
fsubl
push
xor
jbe
pop
outsb
mov
xor
mov
mov
add
inc
inc
mov
jbe
push
fidivl
stos
stos
push
rclb
int
and
or
test
in
xchg
pop
arpl
inc
jno
bound
dec
push
xlat
ja
aaa
sub
jb
and
push
jl
ljmp
js
pop
adc
shlb
adc
pop
loope
out
scas
push
adcb
les
outsl
or
jl
push
jb
int3
and
pusha
xor
cmp
adc
in
push
push
pop
or
test
push
dec
adc
inc
aaa
in
inc
add
aas
dec
xlat
xor
test
add
mov
popl
push
out
sub
addr16
add
dec
inc
div
pushf
push
popa
and
cmp
mov
add
fbstp
pushf
fldenv
mov
adcb
or
orl
je
dec
mov
xor
call
mov
cmp
jmp
mov
xchg
lods
push
pop
add
scas
fidivl
insb
sub
shlb
inc
insb
insb
dec
jecxz
dec
mov
outsb
iret
pop
or
push
outsl
sub
lea
inc
xor
std
add
or
aaa
insb
andb
and
adc
rep
or
sub
xor
idivb
push
or
inc
jmp
cmc
push
inc
push
sbb
mulb
pop
xchg
idivb
sub
shrb
int
and
fwait
sahf
gs
sub
call
fwait
jb
inc
xor
cmp
inc
push
cmp
popa
out
in
jnp
inc
into
xchg
adcl
loop
loope
stos
in
ficoml
jmp
ror
jbe
mov
outsb
xchg
stos
push
push
sub
popf
xor
mov
ljmp
mov
shl
and
fnstenv
int
pop
jmp
outsb
jne
jg
enter
sub
insb
adc
mov
or
mov
rcrb
push
dec
mov
mov
xchg
xchg
push
push
mov
or
inc
mov
jbe
imul
test
push
sub
pop
mov
das
fsubl
xchg
cmp
flds
mov
sub
mov
pop
xchg
sub
cmpsb
jl
or
fcmovb
nop
pop
push
int
sbb
andb
inc
in
or
push
int
inc
sub
ficompl
loopne
stos
stos
hlt
inc
pop
sub
mov
mov
mov
fcmovbe
dec
iret
ret
push
dec
subl
bound
push
mov
testb
ficomps
inc
mov
mov
test
mov
add
pop
mov
jmp
push
or
clc
das
push
sbb
out
loope
xchg
jg
cmp
hlt
in
push
add
ljmp
pushl
xor
and
stos
popa
rolb
shl
lret
loopne
sub
push
inc
insl
push
mov
ret
fdivrs
loope
push
scas
data16
sbb
adc
in
mov
cwtl
mov
fdiv
xorl
es
clc
sub
ret
pop
pop
test
adc
lods
and
push
mov
xor
jnp
add
dec
push
mov
pop
arpl
inc
xorb
test
aaa
jno
jecxz
sbb
mov
divb
mov
hlt
ret
cmp
inc
lods
push
testb
inc
add
call
mov
addl
mov
aam
push
dec
mov
loop
push
ret
dec
mov
xor
pusha
mov
xor
xor
mov
pusha
test
mov
imul
call
imul
arpl
aad
ficoml
mov
loope
into
hlt
fnstenv
adc
sub
inc
sub
and
mov
scas
icebp
cs
jnp
cwtd
mov
gs
jb
jmp
jmp
mov
pusha
cmp
mov
push
call
inc
insl
arpl
out
jo
mov
add
mov
jl
mulb
push
adc
outsl
loopne
and
xor
pop
outsb
arpl
subb
mov
rol
cmp
and
movsl
shl
loope
push
mov
call
fninit
cmp
rorb
aas
jbe
loop
loope
scas
mov
lds
aas
push
jbe
push
adc
sub
sbb
jmp
push
mov
push
sbb
xchg
push
into
mov
adc
adc
out
jl
loopne
cmp
pop
ficoml
mov
es
push
push
xor
les
hlt
les
inc
and
adc
das
sub
xor
xchg
xchg
shrb
fwait
call
sub
dec
or
push
dec
repnz
xacquire
loop
addr16
cmc
ss
push
mov
xchg
mov
scas
fwait
xchg
jmp
sub
lods
sub
mov
fisubs
or
lahf
test
negb
cmc
dec
xor
shll
sub
mov
inc
xchg
aaa
idivb
adc
sub
loop
push
idiv
xchg
mov
loope
add
rol
inc
inc
fnclex
xchg
mov
or
in
xor
adc
mov
mov
jbe
mov
loope
mov
sub
das
push
notb
add
add
xor
repnz
xor
sbb
xor
enter
aaa
addl
push
int3
cs
arpl
enter
sbb
outsb
jno
pop
mov
insl
rcrb
cmpsb
inc
lret
cmc
xor
xor
int
adc
mov
out
ja
in
call
es
mov
sub
push
sub
outsb
repz
jge
arpl
stos
scas
jb
divb
outsb
dec
xor
jbe
inc
jecxz
pop
arpl
inc
adc
std
lds
mov
inc
outsb
nop
adc
and
add
xchg
or
dec
out
hlt
andb
shlb
popf
loopne
push
test
adc
icebp
push
push
xchg
lods
sub
mov
movsb
xor
mov
xchg
xor
dec
test
and
xor
cmp
mov
mov
add
ret
sub
and
orb
jecxz
lret
mov
outsb
mov
mov
mov
scas
loop
xchg
cmp
daa
loopne
sub
cmc
aaa
add
out
and
lret
push
inc
mov
mov
repnz
loope
inc
lcall
add
xchg
fwait
dec
lods
xor
fcom
lahf
push
mov
mov
push
test
popa
shll
cmp
fiaddl
scas
mov
xor
pop
inc
icebp
xchg
inc
xchg
xor
insl
loope
stos
outsb
lds
xor
push
outsl
jl
mov
enter
enter
xchg
mov
stos
xchg
push
mov
out
push
hlt
aam
mov
add
insb
out
push
subl
ror
and
ja
js
call
shll
std
lcall
mull
idivb
fiaddl
xchg
cwtl
jmp
xchg
testl
enter
cwtl
pop
xor
adc
sbb
add
notb
pop
dec
dec
mov
dec
dec
pop
popa
ret
ss
lock
outsb
aad
xchg
dec
repnz
push
outsl
dec
mov
test
mov
nop
aaa
aad
pop
outsl
mov
xchg
inc
into
and
adc
lret
loop
arpl
push
fs
xchg
add
aas
test
aas
outsb
xor
shrl
lret
mov
pop
mov
push
and
jbe
pop
es
fwait
lds
cmp
in
adc
outsb
sub
nop
test
mov
jb
arpl
mov
sub
push
ljmp
jl
sub
xchg
xchg
testb
xchg
stc
xchg
repnz
cmpsb
xor
add
pop
aam
aaa
pop
and
xchg
arpl
pusha
lea
je
repz
sbb
sub
loop
dec
xlat
sbb
xchg
outsb
inc
enter
es
insb
loop
outsb
ss
mov
push
sub
push
adc
cmp
mov
mov
dec
loopne
inc
mov
add
xchg
mov
jbe
jne
outsb
push
mov
and
in
dec
test
jbe
and
jns
adc
pop
xlat
hlt
pushf
jb
or
mov
out
lock
repnz
std
test
cmp
test
add
lea
andb
rclb
mov
popa
cmc
test
sub
inc
dec
sub
ficompl
pop
inc
mov
aaa
jbe
push
outsb
cmpsl
lahf
movsl
sbb
adc
mov
adc
leave
ret
mov
mov
mul
sub
addr16
loop
mov
sub
es
popa
adc
inc
cmp
mov
in
inc
fnstenv
pop
shrb
into
xchg
inc
mov
mov
cmpps
cmp
add
push
test
xchg
inc
daa
xchg
sbb
test
imull
insb
cmp
push
adc
and
fwait
xchg
into
movsl
mov
test
outsb
sbb
rolb
add
sub
movsl
ja
pop
adc
dec
push
pop
inc
test
and
test
loop
ror
andl
loop
pusha
inc
xchg
outsb
movsb
mov
jecxz
jbe
inc
inc
xchg
cmp
fildl
arpl
imul
test
mov
out
cmp
scas
lods
rcl
call
nop
pop
push
test
jae
inc
push
push
push
je
aas
mov
testb
sub
addl
inc
jnp
bound
push
mov
out
push
fisubrs
xchg
jo
aam
mov
out
int3
test
in
out
sub
shll
popf
xchg
fistpll
gs
scas
push
iret
inc
xchg
jae
insb
pusha
push
mov
push
arpl
imul
div
ss
popa
pop
dec
xchg
outsl
push
and
cmc
mov
sub
push
lahf
dec
repnz
mov
jmp
push
loope
inc
xor
les
mov
das
add
mov
xor
arpl
dec
mov
xor
repz
shlb
xchg
xchg
push
insl
ss
shl
mov
adc
cmpsb
setno
dec
and
dec
std
loopne
jno
loop
push
dec
pop
ja
mov
cmc
adc
sub
xor
enter
inc
jne
pop
pop
mov
ljmp
jo
imul
mov
arpl
testl
sbb
pusha
daa
push
jmp
fimull
in
jle
movsl
lods
mulb
adc
faddl
pop
pop
sbb
lret
fbld
xor
push
inc
imul
jne
insb
mov
mov
and
fnstsw
inc
popa
fildll
adc
jno
out
xor
mov
pop
add
jo
xchg
pop
and
outsb
dec
mov
or
aad
add
addl
cmpsb
roll
fwait
and
xor
xchg
adc
xor
sbb
mov
sub
enter
or
cs
sub
adc
test
mov
sub
push
and
lea
mov
movsl
imul
sub
sub
repnz
pusha
insl
fwait
ljmp
rclb
loopne
xor
push
lret
xor
lea
push
xor
fldl
mov
dec
pop
aam
add
jmp
push
mov
stos
inc
xchg
out
xor
movsl
mov
and
test
js
mov
sarl
outsb
push
xchg
loope
or
push
pop
cmc
addl
loop
mov
mov
cmc
loopne
mov
mov
mov
addr16
shl
push
data16
inc
xchg
push
hlt
jno
mov
jmp
jl
mov
xor
in
mov
outsl
xchg
test
push
inc
popa
mov
push
popf
mov
dec
inc
iret
fst
movsl
pop
add
mov
popa
mov
inc
mov
xor
in
pop
call
outsb
and
jg
sub
xor
daa
in
das
pop
sub
out
mov
enter
jecxz
lds
and
push
cmc
test
sub
sbb
aas
test
jbe
sub
bound
push
ret
and
sbb
les
in
ret
aam
xorb
cmp
inc
pop
jbe
mov
shlb
outsb
in
ret
dec
shrb
xor
loop
js
xchg
insb
sbb
in
jb
addb
divb
mov
je
adc
xchg
insb
mov
push
push
mov
ja
pop
push
stos
add
cwtl
pop
jbe
push
jge
aam
or
lret
dec
shlb
jmp
andb
sub
xchg
push
push
decb
dec
push
jne
push
dec
out
add
into
in
outsb
js
add
test
lock
repnz
mov
jo
jnp
jmp
push
mov
lcall
je
sub
and
jl
ja
aam
fidivl
pusha
push
mov
inc
fdivl
out
mov
pop
jb
adcl
mov
jnp
loop
out
and
mull
loop
movaps
dec
ljmp
xor
mov
xor
fisttpll
fcoml
es
inc
dec
mov
hlt
push
xchg
mov
das
jb
mov
int3
xchg
xor
pop
pop
loopne
movsb
sub
loopne
imul
jbe
cmc
push
sbb
ret
daa
jo
dec
mov
call
xor
pusha
xor
dec
mov
xchg
or
mov
and
addl
es
push
loop
push
jo
in
push
mov
mov
inc
xor
cmp
xor
sub
cli
loop
jecxz
sbbl
and
sbb
imul
and
pop
sbb
movsb
push
pop
cmc
jo
jb
push
mov
or
mov
je
push
mov
in
xchg
xchg
inc
ret
movsb
into
aad
test
or
testl
sub
xlat
xor
insb
loopne
add
stc
push
xchg
test
mov
xchg
add
pop
out
add
into
getsec
lcall
or
out
out
rolb
xor
mov
inc
je
jb
mov
and
repz
xchg
xchg
xchg
int3
pop
push
inc
insl
xor
push
out
sub
mov
call
ljmp
mov
lods
xchg
repz
sbb
loope
je
and
mov
stos
cwtl
adc
out
addl
xor
dec
call
or
push
cli
mov
imul
xor
popf
cld
mov
cmp
lret
negl
out
mov
cmp
int3
popa
or
mov
into
jmp
imulb
fldl2e
adc
daa
pop
or
fildll
testb
pusha
add
ffreep
outsl
adc
popf
jecxz
imul
mov
loope
jbe
mov
scas
data16
arpl
pop
rcrb
ret
mov
and
adc
pop
pop
popa
mov
pushf
out
jne
xchg
sbb
sub
enter
inc
movsb
pop
addr16
test
cmp
push
daa
or
lds
add
insb
mov
sbb
pop
shlb
inc
inc
call
movsl
or
mov
ret
vaddsubps
and
imull
into
cmpsl
inc
cwtl
sub
xchg
lea
push
fldenv
xor
dec
cmp
je
mov
dec
fsubr
xchg
xchg
add
xchg
test
sub
xchg
or
xchg
cmc
push
outsb
cmp
cmp
in
push
xchg
cld
out
push
sub
roll
xchg
mov
inc
in
xor
add
fisubs
ljmp
mov
fwait
sbb
xor
mov
cmp
cwtl
andb
pusha
je
mov
xchg
sub
and
and
cld
loop
inc
sti
push
in
inc
in
aad
cwtl
stc
andb
aad
lods
xchg
mov
dec
pop
lcall
imull
mov
outsb
jb
inc
sbb
shrb
inc
and
ljmp
push
xchg
outsb
jge
push
out
dec
je
mov
or
int3
call
stos
adc
rcrl
inc
insb
mov
insb
sbb
jl
or
jb
and
and
test
xchg
cmpsl
and
sub
fiaddl
cmpsb
arpl
insl
cmp
in
adc
xchg
xor
jne
dec
out
and
data16
mov
cld
sbb
insl
mov
pop
cwtl
std
mov
mov
pop
mov
inc
je
aaa
or
jne
xor
hlt
shll
xor
insb
arpl
and
shll
and
mov
inc
loop
insb
and
loopne
mov
mov
in
inc
scas
ljmp
scas
shrl
mov
jmp
lods
ljmp
lods
shrl
jb
mov
inc
sub
push
push
sub
imul
sub
sub
push
sub
insl
mov
inc
das
ljmp
shrl
scas
mov
in
inc
and
outsb
insb
mov
shll
mov
and
andl
mov
loop
and
arpl
loope
xor
aaa
mov
mov
xlat
mov
aaa
inc
je
mov
imulb
ss
mov
cmc
mov
inc
test
sub
test
mull
inc
stos
ljmp
stos
shr
mov
inc
stos
cltd
rcrl
xchg
xchg
stos
jl
lds
jbe
les
mov
mov
mov
lds
ret
xchg
dec
cmp
sub
push
push
fistpl
mov
insl
pushf
mov
pop
push
adc
int3
add
das
and
outsb
and
push
add
xor
push
outsb
add
test
nop
test
mov
dec
shrb
add
pop
sbb
adc
lds
inc
orl
test
lds
jg
shll
and
mov
pop
sub
jecxz
sub
sbb
data16
stos
lods
pusha
ljmp
cmp
mov
hlt
imul
fidivl
stos
testl
adc
lret
aas
sub
mov
mov
ret
inc
sahf
bound
push
orb
and
xor
mov
cltd
ja
outsl
add
ja
xchg
push
adc
jmp
sahf
imul
stos
test
cs
bound
push
gs
and
jb
sub
sub
imul
mov
and
xchg
js
jmp
test
sub
and
daa
and
dec
fisubrs
shlb
loope
fisubrs
je
fidivl
enter
sub
cmpsl
ja
movsb
rcrb
insl
outsb
push
and
mov
cmc
and
jne
in
mov
rcrb
das
sub
jg
or
cmp
push
loopne
dec
inc
jns
aaa
lea
in
cmovae
mov
mov
outsb
loop
insb
and
pop
daa
insl
arpl
push
fsubrs
out
xor
ss
ss
data16
sub
out
ret
or
xchg
movsl
mov
aam
and
scas
bound
mov
outsb
dec
repnz
push
arpl
iret
pusha
sub
test
std
lea
jg
sub
decb
push
jl
sub
imul
and
dec
cld
push
insl
ja
cmp
sub
sbb
add
add
and
dec
push
insl
imul
push
testb
xchg
in
cmp
in
push
dec
and
rolb
outsb
adc
mov
hlt
xlat
mov
das
sbb
faddp
dec
xchg
dec
filds
push
mov
or
in
mov
pusha
ret
inc
push
jb
mov
fisubrl
out
das
je
pop
and
push
mov
testb
fcmovb
fld
psrld
flds
hlt
inc
aaa
xor
mov
inc
dec
add
push
test
not
insl
pusha
loope
pop
aad
stos
xchg
mov
push
ret
rolb
push
jecxz
imul
dec
and
mov
and
and
and
and
fwait
inc
adc
pop
les
push
nop
inc
push
mov
xor
add
push
lock
and
mov
push
adcl
mov
mov
ja
jo
pusha
cmp
lods
popf
flds
fsincos
fstps
inc
or
mov
sbb
shll
inc
xor
aam
aaa
push
scas
pop
loopne
int3
push
lcall
lea
cmpxchg8b
mov
pop
cmpsl
pop
mov
inc
mov
inc
rcrl
jae
or
inc
adc
xor
shl
rcl
and
inc
ror
aam
je
lock
push
mov
jno
aaa
sub
pop
rol
fsubrl
rcrb
inc
mov
lea
sbbb
and
rcl
push
pop
lock
sub
inc
das
mov
roll
push
and
cmp
out
and
iret
rorb
aam
lods
mov
inc
fcmovb
jb
push
mov
ja
inc
ret
xor
ret
push
push
loopne
outsb
int
dec
inc
lret
xor
outsb
inc
push
scas
and
rcll
shrb
sub
xor
sub
push
not
insb
shr
pop
int
sub
rorb
mov
xchg
ret
sub
jne
jge
data16
xchg
jmp
push
inc
repnz
pop
je
mov
cmp
ja
aam
jne
testb
les
fidivl
inc
add
push
fidivl
je
pop
and
sub
inc
mov
inc
mov
loopne
rolb
or
push
scas
aaa
jmp
lret
inc
sub
or
push
dec
push
stos
mov
mov
ljmp
das
inc
xchg
div
hlt
call
push
call
loope
je
pop
aam
loope
push
in
arpl
fs
hlt
inc
imul
inc
push
jmp
notb
arpl
mov
mov
insb
adc
ror
pop
das
pop
rorb
push
insl
aaa
dec
lods
fimull
je
pop
or
aaa
dec
loopne
mov
mov
call
adc
pop
mov
xchg
push
mov
aaa
sub
scas
shll
adc
jb
arpl
in
mov
outsl
pusha
iret
movsl
pop
dec
mul
mov
shrl
in
push
push
push
dec
fdivl
xor
push
loope
and
xchg
bound
and
mov
and
pop
xchg
cmp
inc
push
in
xchg
and
and
mov
outsb
inc
pusha
mov
movsl
loop
hlt
inc
in
mov
and
jne
scas
and
mov
push
loop
inc
jo
arpl
inc
mov
jecxz
jecxz
je
notb
aaa
cmpsb
xor
pop
and
aaa
xchg
cmp
addl
jo
cmp
pusha
imulb
loope
and
mov
mov
pusha
aaa
mov
loop
lea
ds
mov
lds
xor
orb
dec
lods
ja
outsb
adc
cmp
mov
insl
loop
hlt
mov
dec
insl
pushf
hlt
sub
jb
in
gs
imulb
pusha
scas
addr16
sub
and
jbe
pop
out
insb
outsl
lret
mov
push
sub
jbe
push
mov
jb
jbe
sub
cs
and
addb
inc
mov
or
cmpsl
notb
out
push
push
loop
inc
and
cmpsb
push
mov
xchg
daa
xor
mov
jne
jne
mov
mov
aad
push
mov
mov
ret
mov
and
push
jecxz
loop
add
inc
loopw
call
lods
test
add
push
and
push
cmp
pop
xlat
jmp
or
loopne
arpl
push
adcl
cs
fdivl
stos
inc
sub
dec
in
fmuls
ljmp
ja
aad
ds
or
call
movb
cmp
xchg
mov
das
dec
scas
mov
cltd
sub
scas
pop
or
mov
cmp
cmpsb
sbb
cwtl
rcrb
mov
mov
cmp
cwtl
sub
out
cmp
test
cmp
pop
sbb
jg
andb
lret
xchg
push
mov
jb
mov
into
sub
dec
jb
cmp
and
jb
in
cld
inc
mov
xchg
push
cltd
cmp
add
jg
xchg
pop
push
xchg
imul
pop
es
sub
cmp
fdivr
or
cmpsb
push
mov
push
sbb
cmovge
in
out
xchg
add
inc
sbb
fcmovne
xor
rclb
push
loop
xchg
inc
shrl
sub
xchg
push
rcll
jbe
int3
push
loop
push
sbb
test
xorl
test
das
mov
lods
jbe
sti
inc
movsl
mov
push
sarb
addr16
inc
mov
scas
mov
inc
lret
mov
add
aam
jl
fwait
loop
cmp
loop
dec
imul
mov
clc
addr16
addr16
faddl
cmp
js
jno
or
xchg
jne
xchg
push
mov
notb
ds
cmp
xchg
jge
in
inc
or
push
iret
roll
addb
xor
or
cmp
jo
cmp
lds
inc
push
pop
fmull
pop
push
aam
xchg
mov
test
push
cs
and
fbstp
nop
pop
add
int
adc
fisubl
inc
sahf
mov
inc
inc
mov
outsb
cmp
inc
mov
ss
mov
pop
fcoml
nop
pop
int
jmp
jge
xor
push
push
aam
inc
or
push
ja
push
movsl
test
jb
ljmp
cwtl
sub
cltd
je
rcll
add
iret
aaa
pop
orb
sbb
test
adc
ljmp
add
jne
mov
test
and
ja
dec
cmpsb
sti
xchg
inc
ss
sarl
push
lock
movsl
push
sahf
in
pop
lods
loopne
ljmp
shl
add
in
cmp
xlat
cltd
pop
test
testb
out
dec
xor
cmp
xlat
arpl
sub
ret
in
push
sahf
in
cltd
and
insb
pusha
hlt
adc
in
sbb
mov
adc
enter
mov
push
cmc
mov
xchg
adc
inc
xchg
daa
add
pop
in
jecxz
adc
dec
outsl
push
add
fidivrs
inc
shll
test
xchg
popf
pop
sub
inc
arpl
mov
xchg
repz
and
loop
jo
pop
dec
pop
inc
mov
insb
and
mov
cmc
inc
sahf
pop
cs
mov
fimuls
cmp
stc
inc
pushf
das
push
insb
lods
cmpps
in
scas
xchg
repnz
pop
or
jmp
ds
dec
out
mov
dec
xor
lcall
cmp
pushf
insb
mov
cld
arpl
je
movsl
ret
dec
inc
clc
cmp
loop
mov
shlb
push
mov
loop
notl
in
ret
push
cmp
sub
test
sbb
sahf
ja
test
sbb
loope
rcrb
mov
fildl
jle
mov
push
or
sub
mov
lods
xor
and
sti
mov
and
push
xor
jg
insb
mov
cld
scas
push
lods
pop
sub
ds
dec
inc
inc
cmp
xor
and
insl
mov
xchg
jg
cmovge
mov
jp
mov
inc
lcall
mov
xchg
insb
mov
adc
popf
inc
inc
pop
sbb
std
in
pop
inc
or
dec
inc
xorb
sbb
mov
imul
outsb
loopne
pop
dec
out
xchg
mov
adc
mov
ret
jb
insl
jg
ret
out
loope
mov
int3
pushf
mov
mov
into
xor
xchg
or
or
in
les
xchg
push
stos
ljmp
push
mov
push
jns
mov
sti
add
inc
cmc
push
xchg
inc
xorl
xchg
push
or
pop
adc
inc
dec
lcall
xchg
je
aaa
inc
cmc
mov
jbe
insb
push
and
jecxz
push
arpl
insb
push
jo
outsl
push
pusha
push
loopne
dec
sub
imul
push
pop
jecxz
arpl
push
mulb
sub
loope
pusha
sub
inc
jmp
jmp
daa
out
inc
in
icebp
ljmp
loop
daa
loope
hlt
icebp
ljmp
push
testb
or
add
iret
les
in
aam
idivl
ljmp
loop
rcrb
pop
push
push
add
or
dec
jmp
inc
jb
mov
ss
push
daa
sub
pusha
fwait
lret
jmp
mov
cmp
xor
lods
inc
les
and
stos
mov
mov
xor
addb
xchg
jb
aaa
shl
and
scas
pop
repz
pop
loop
les
sub
lods
ret
xchg
xchg
movsb
mov
shll
repnz
add
shll
out
push
fld
icebp
shl
xor
rorb
pusha
loope
ficoml
lock
and
add
in
shl
xor
je
cmc
sub
lock
xchg
pop
jp
pop
stos
push
mov
push
add
or
jmp
les
icebp
stos
adc
xchg
jb
cmpsb
push
aam
mov
clc
jmp
mov
sbb
lods
jne
mov
icebp
cld
push
add
test
pop
inc
ss
xchg
xchg
loop
pusha
fsubl
in
gs
and
xchg
loopne
fldt
hlt
push
inc
push
and
mov
inc
xor
jo
xchg
rcll
mov
insb
pusha
insl
and
mov
or
sti
adc
xor
inc
mov
inc
xchg
daa
push
jmp
add
and
sbb
push
push
icebp
cmp
push
mov
jmp
or
out
sbb
pusha
insb
das
aaa
lahf
je
aas
fs
jl
jmp
pop
inc
cmpps
adc
cmpl
outsl
pop
pop
in
dec
loopne
mov
mov
icebp
inc
sahf
fcoms
movsl
icebp
or
jg
jl
negl
pop
loopne
pushf
xchg
in
adc
ret
out
jo
xchg
pop
icebp
pop
aas
ja
das
jns
adc
mov
push
daa
xor
push
shlb
outsl
sbb
je
push
and
sub
ljmp
and
imul
and
arpl
adc
out
es
jnp
push
mov
xor
jae
sub
hlt
shll
sub
test
rcrl
jmp
fs
outsl
push
cmp
sbb
sbb
lea
mov
xchg
pop
sbb
rclb
mov
dec
psadbw
leave
inc
lods
outsb
mov
and
jnp
sti
out
ret
push
sbb
js
outsl
sbb
adc
or
ljmp
iret
idivl
dec
push
jns
pusha
xlat
inc
insl
pop
push
push
xchg
adc
sub
loope
loope
repnz
loopne
inc
xor
je
push
loope
pusha
lcall
repnz
or
xchg
outsl
outsb
and
rclb
testb
and
ret
loop
add
dec
test
mov
arpl
jo
pusha
adc
adc
lods
jbe
xchg
scas
outsl
push
fidivl
adc
out
rcll
int3
push
fisubrs
movsb
aaa
cmp
loope
sub
push
dec
and
ret
das
xchg
lea
test
pop
mov
xchg
xor
popf
call
adc
sub
jb
and
and
jo
cmc
pop
outsl
shl
shll
push
les
jne
jbe
test
adc
mov
and
in
mov
arpl
shlb
das
xchg
stc
jb
test
imul
imul
insl
jmp
aam
dec
mov
add
jo
inc
or
repnz
mov
call
sub
xorl
jp
push
push
lods
popf
or
sub
fsubr
adc
adc
jmpw
repnz
mov
pop
movsb
iret
xchg
or
loop
and
mov
push
in
xor
xchg
ljmp
adc
and
pusha
movsl
adc
jne
pop
pushf
ret
dec
imul
mov
jne
and
arpl
test
xchg
pushf
movsb
xor
cmp
je
xchg
mov
mov
xchg
inc
inc
mov
and
shll
mov
not
sub
pusha
pushf
pusha
adc
inc
mov
insl
imul
lds
jo
and
cmp
loop
jecxz
lret
fwait
cmc
mov
das
inc
fcomi
mov
push
hlt
ret
call
add
or
inc
sbb
sub
jbe
test
and
sbb
mov
sbb
xor
loop
push
icebp
jecxz
xorb
aas
ficompl
or
fs
je
lahf
and
das
push
je
mov
ljmp
xchg
pop
adc
in
out
add
loopne
push
out
sub
mov
add
pop
repnz
addr16
ret
push
adcl
stos
das
inc
jl
imulb
out
pusha
into
push
inc
arpl
fsubp
xchg
insb
pusha
sarb
push
test
jbe
out
inc
cmp
push
into
cmc
xchg
and
and
inc
fwait
je
sbb
pop
daa
incl
scas
lret
cmp
out
gs
popa
in
outsl
cmp
movsl
add
les
pop
mov
clc
int
push
aad
icebp
aaa
int
jo
mov
jbe
add
repnz
mov
jmp
lds
push
jo
pop
arpl
das
divl
test
hlt
push
push
arpl
scas
out
adc
in
loope
std
and
mull
inc
scas
jmp
xchg
jg
pop
icebp
add
sub
jb
imul
mov
lea
push
ljmp
xor
push
pusha
pop
xchg
out
jp
dec
in
mov
mov
ret
jmp
push
and
and
in
sub
andl
inc
fsub
pusha
popf
aad
or
call
roll
cs
pusha
jmp
xor
ret
mov
shr
hlt
adc
push
inc
adc
mov
shrb
adc
call
loop
adc
lcall
pusha
sarl
fisubrs
repz
jle
push
jo
ljmp
adc
xchg
cmp
imul
dec
xor
out
ljmp
outsb
pop
and
mov
shl
imul
inc
add
cmp
lcall
outsb
sub
cli
jecxz
pop
xor
int3
mov
out
enter
in
cwtl
iret
mov
dec
jno
jl
out
pop
jp
scas
loopne
mov
mov
sti
cmc
xchg
add
out
push
cli
nop
add
jge
inc
into
js
in
dec
jl
sub
jmp
pusha
cld
jns
xchg
ja
xor
pusha
mov
int3
or
sub
ret
jbe
repz
jo
and
in
xor
in
push
lea
pop
xchg
fsub
sub
popa
push
shl
pusha
repnz
jmp
incl
cltd
fcmovbe
sbb
dec
push
mov
push
add
sub
mov
ud2
xor
ja
xor
inc
adcl
leave
shll
pop
add
not
out
xchg
mov
cmp
xchg
lcall
xor
adc
adc
pop
popa
add
repnz
hlt
and
hlt
mov
mov
lea
inc
lret
jne
stos
test
xor
mov
inc
cmc
add
icebp
xorb
inc
pop
les
aam
cmp
pusha
ret
and
je
shlb
inc
ljmp
sbb
xor
xchg
stos
ret
and
out
and
xor
xor
push
movsl
fdivl
add
test
adcb
clc
inc
jl
jo
cli
ret
cmpl
lods
and
addl
jecxz
push
pusha
cmp
movsb
adc
out
sahf
testl
cmpsl
jecxz
pop
adcl
jbe
adc
push
cld
gs
jecxz
sarb
in
hlt
ret
lret
xchg
xor
inc
pushf
out
xchg
xor
mov
daa
xchg
icebp
ret
add
add
fs
imul
pusha
fistpl
add
adc
or
inc
test
lahf
sbb
inc
xchg
inc
mov
fs
sbb
sub
jne
lods
push
xor
xchg
daa
out
xchg
fsts
lret
stos
sbb
fldl
outsl
pusha
pop
inc
push
mov
out
out
mov
sarb
xchg
inc
shr
jo
pusha
pop
js
pop
jmp
clc
out
sbb
xor
shrl
xchg
add
xchg
stos
jne
lahf
fisttpll
pop
imul
aas
je
nop
loope
and
push
mov
xor
imulb
inc
aas
inc
dec
in
shr
mov
insb
adc
sbbl
push
stos
cmpsl
ret
xor
insb
push
sbb
mov
icebp
hlt
sub
add
cli
push
xor
es
cmpsb
xchg
mov
out
not
xchg
test
cltd
jb
gs
cmpl
fdivs
pop
mov
sbb
cmpsb
mov
addr16
xchg
xor
inc
mov
add
and
mov
in
js
xchg
push
mov
scas
scas
movsl
push
test
out
xorb
adc
xchg
arpl
test
sbb
cmp
js
inc
mov
mov
add
test
xor
and
imul
cwtl
subl
hlt
icebp
std
outsl
icebp
xor
mov
mov
inc
in
mov
push
jmp
je
pop
push
cs
imul
ljmp
push
add
fsubr
das
out
fisubrs
cmpsb
out
lcall
mov
out
jo
xlat
ret
or
xor
or
repz
ljmp
push
sbbl
push
mov
mov
call
xor
pop
add
pop
inc
dec
xchg
int3
fcoml
mov
hlt
xchg
sub
adc
inc
rclb
jo
clc
xor
hlt
mov
inc
inc
xor
jno
inc
sub
int
cmp
pop
inc
sub
sub
xor
fcom
pushf
cmp
adc
push
pusha
jbe
jno
bound
dec
flds
lcall
mov
jmp
imul
pop
mov
cltd
repnz
dec
fs
xor
subl
mov
ja
xor
rcll
sbb
push
xchg
outsl
bound
inc
fnstsw
adc
testb
test
pop
and
ret
mov
fiaddl
jmp
test
add
push
stc
bound
cmc
jmp
xor
sahf
push
pop
cmp
pop
lock
xor
testl
xor
add
cmp
ret
cmc
ss
out
fldcw
and
adcl
notl
out
loopne
out
cmp
aas
xor
sub
mov
cli
inc
lret
or
mov
push
cmc
cld
out
clc
sbb
cld
xor
in
imul
and
fisttpl
lahf
dec
loop
int3
mul
and
lahf
dec
cmc
mov
cmp
cmp
jo
clc
popa
icebp
int3
sbb
jmp
pop
mov
jmp
jmp
jne
mov
pop
push
cmp
popa
mov
jecxz
adc
je
je
sbbl
in
popf
cld
jns
push
lds
push
xchg
popa
add
in
pusha
xor
inc
popa
loope
jo
xor
jge
cvtps2pi
loope
mov
pop
jo
inc
jmp
ja
in
cmp
cld
and
mov
push
hlt
daa
cmc
jne
push
push
cld
pushf
lods
pusha
inc
xor
shll
mov
jecxz
xchg
fiaddl
push
and
xor
mov
jo
and
outsl
pop
lods
lret
mov
sub
in
and
mov
cmpsl
loopne
pushf
dec
je
and
int3
pusha
mov
out
inc
jne
dec
ja
add
outsl
and
cs
and
xor
addr16
movsl
adc
inc
rorl
xchg
imul
adc
dec
mov
xor
add
arpl
inc
lea
push
loopne
lret
in
iret
cltd
addr16
out
cmpsb
sbb
mov
rorb
xor
lods
clc
dec
je
and
and
bound
jmp
sub
pusha
daa
xor
fucomip
je
pop
into
inc
and
cltd
jb
mov
sarb
add
test
and
jbe
fsubrl
xor
mov
and
xchg
xor
movsb
mov
aam
ret
pop
inc
jp
mov
mov
xorl
sbb
test
lods
ljmp
je
xchg
lret
das
xchg
fs
xchg
outsl
and
stos
imul
insl
ss
cmc
aad
and
out
mov
add
lret
sbb
repnz
add
adc
imul
push
hlt
jo
or
je
push
xchg
xor
mov
jmp
shlb
pop
mov
and
mov
shll
xor
cmp
inc
repz
xor
pop
xor
mov
adc
push
add
cltd
inc
xchg
repz
jbe
jbe
add
into
arpl
mov
mov
jne
data16
arpl
mov
dec
lods
mov
and
loopne
enter
sub
shl
xlat
and
ret
push
xchg
lret
jo
popf
movsb
jmp
cwtl
shrb
adc
jnp
sub
push
and
leave
sub
imul
fldcw
xchg
sub
xor
insb
and
and
inc
mov
loop
loope
cmc
loopne
jmp
push
stc
jmp
or
and
sbb
popf
add
inc
mov
ja
je
les
call
stos
dec
xchg
clc
test
aaa
sbb
insb
test
sub
mov
bnd
in
test
mulb
jmp
aam
inc
and
ja
out
shlb
mov
je
jns
xabort
xchg
subl
negl
repnz
mov
out
gs
and
ja
sub
pop
add
and
jp
push
xor
push
push
mov
sub
das
inc
mov
daa
idiv
jecxz
ret
sub
jae
loop
loopne
popf
add
jecxz,pn
lea
ffreep
push
adc
cmp
jge
inc
push
jno
and
rolb
hlt
ljmp
push
jp
scas
shl
or
sub
adc
add
test
dec
mulb
push
mov
rorl
and
xor
and
and
fcoml
mov
pop
inc
add
jmp
lods
ret
add
je
das
or
pop
jne
and
xchg
inc
or
inc
sbb
jb
lods
push
and
ja
popa
rolb
mov
jmp
xchg
outsb
dec
mov
jmp
push
lcall
pop
push
mov
mov
sbb
xchg
dec
fwait
outsl
sarb
dec
jmp
and
je
jbe
ret
loope
es
and
scas
jo
sub
jae
cmp
inc
push
out
lods
mov
lcall
dec
pusha
aad
mov
repnz
push
mov
shll
ret
mov
dec
inc
adc
out
mov
add
xchg
pop
xchg
std
loop
push
movb
sub
and
push
jecxz
repz
adc
jbe
pusha
scas
dec
sub
scas
mov
mov
mov
adc
in
and
push
jo
adc
loop
mov
fisttpl
in
mov
push
ss
sub
sub
and
push
and
push
ret
and
and
xor
xor
mov
mull
sub
lods
push
and
daa
pop
or
xor
sub
out
xor
mov
xor
ret
arpl
and
xchg
sub
sub
mov
and
jmp
xchg
xchg
ljmp
stos
inc
lods
loop
inc
mov
adc
xchg
pop
inc
pop
xchg
pop
fs
ficoms
jge
outsb
stos
test
jecxz
aas
js
dec
jb
sub
mov
jp
push
lods
push
mov
pop
arpl
stc
inc
popa
jmp
repnz
lods
lods
sub
gs
rep
adc
mov
sub
or
loopne
ljmp
lahf
mov
dec
mov
aas
cs
jmp
jmp
fwait
or
xor
aam
mov
mov
push
add
push
into
cmc
cmp
jl
insl
mov
xchg
sub
testl
insb
inc
fiadds
push
insb
ret
mov
inc
imul
insb
and
push
icebp
cmpb
jo
cmpsb
pop
add
loopne
gs
push
xorl
mov
cld
out
xor
jb
and
movsl
push
jbe
aam
pusha
loopne
push
icebp
enter
data16
cmp
adc
aad
pop
xchg
ret
push
lods
into
push
cmp
inc
and
into
shlb
adc
xor
and
aas
lods
xor
repnz
ljmp
loope
test
cltd
outsl
scas
out
movsl
popa
mov
pusha
fidivrs
aas
das
icebp
inc
adc
imul
arpl
or
add
ss
enter
popl
sbb
add
or
adc
clc
cmp
sahf
call
push
test
loope
repnz
sub
pop
mov
sarl
sub
jecxz
push
inc
rolb
jae
jo
into
mov
and
testb
aam
add
jbe
cmc
arpl
rorl
mov
push
fcom
jecxz
add
in
aaa
and
lods
add
xlat
push
outsb
in
adc
mov
jns
jecxz
xlat
arpl
daa
outsl
sub
pusha
frstor
or
icebp
test
adc
jb
rorb
jne
xor
lods
out
add
xor
ja
ds
xchg
and
filds
push
loope
mov
outsl
and
mov
fdivr
jmp
shrl
jg
mov
inc
jbe
sub
add
inc
rcrl
jb
cs
in
inc
lcall
stos
sub
imul
sahf
jo
lcall
stos
inc
pop
scas
push
dec
pop
test
icebp
or
sbb
mov
xor
mov
or
lcall
loop
test
mov
mov
das
repz
scas
aaa
mov
rclb
mov
loopne
dec
aas
push
and
lcall
aas
imul
cmp
popf
repz
test
cs
xchg
fs
pop
xchg
loopne
dec
mull
je
lcall
add
adc
push
in
jecxz
ret
shlb
fcoml
sbb
dec
pusha
pop
and
cmp
mov
and
fistpl
jo
loope
xchg
mov
mov
sbbl
jb
movsb
or
in
sbb
ljmp
sbb
jecxz
adc
pop
into
outsl
jl
andl
imul
push
sbb
jge
cmp
loope
in
lods
test
jae
push
in
ret
jmp
hlt
mov
and
dec
lret
and
stc
loope
push
loope
push
inc
mov
push
dec
adc
lods
enter
push
aas
dec
inc
das
inc
and
xor
dec
ret
negb
pusha
mov
cmp
scas
lds
out
push
xlat
jecxz
jecxz
dec
mov
jmp
les
pusha
cmp
pusha
cld
add
das
shrb
push
cmp
xor
not
inc
sbb
or
loopne
fs
inc
mov
or
mov
fcompl
lahf
clc
loope
cmp
scas
jns
mov
xchg
outsl
ljmp
xchg
lret
loop
cmp
xor
jg
outsl
fwait
testl
push
scas
push
fidivs
lahf
dec
jecxz
or
fdivrs
fsubl
divb
fisubrl
sub
sbb
movsl
xchg
inc
ljmp
add
loop
shl
in
push
hlt
mov
mov
add
push
out
mov
into
aam
pop
stos
mov
cli
cmc
and
and
jle
cmpsl
push
jb
sbb
xor
mov
test
imul
shlb
fiaddl
je
inc
push
mov
je
shl
loop
jb
and
add
pop
jmp
mov
out
test
cmp
and
pusha
and
arpl
movsl
std
push
movsb
xchg
call
out
and
ss
mov
add
mov
and
ja
fnstcw
mov
imul
adc
scas
sbb
pcmpeqb
xchg
push
addr16
out
pop
pcmpeqd
cmp
dec
clc
data16
or
pop
popa
sub
rclb
sub
add
dec
and
cmp
roll
das
out
addr16
mov
sub
fdivr
call
and
sub
jge
jbe
loopne
pusha
shr
imul
xchg
xchg
test
jne
out
in
mov
ljmp
pop
and
test
lock
stos
ljmp
and
dec
sbb
loop
bound
dec
stc
out
bswap
xor
mov
outsb
push
or
jb
arpl
cmp
inc
fwait
pusha
daa
and
jmp
addr16
xor
cmp
lcall
sub
cmp
std
push
pop
and
popf
shrb
popa
sbb
orl
aad
push
sbb
nop
jo
xor
xchg
gs
pusha
aad
and
sti
jl
or
and
idivb
jmp
out
or
ud2
fildll
add
lods
jno
or
repnz
repnz
cli
cli
das
cli
mov
lret
test
imul
in
inc
jle
popf
jmp
loop
push
push
scas
leave
pcmpgtd
hlt
jecxz
mov
das
lods
repnz
ret
scas
xchg
neg
dec
js
fs
jl
lret
mov
dec
mov
jecxz
inc
and
jmp
xchg
cmpsb
in
fnsave
jmp
pop
pusha
and
mov
div
pop
testl
push
xor
push
loopne
inc
add
mov
popf
jmp
mov
lock
pop
jg
je
stos
pusha
push
stc
dec
sub
jecxz
pop
jecxz
xorps
and
mov
mov
notl
add
push
addr16
jmp
fsubr
lods
inc
lea
pusha
jp
push
int3
dec
push
lods
sub
mov
jns
and
mov
dec
fs
sti
mov
push
popa
fldenv
push
xchg
repz
mov
sbb
xor
in
shll
cmp
fucomp
neg
and
pop
pop
inc
inc
in
aas
repz
pusha
aas
es
imul
loop
fnstcw
inc
cld
pusha
pop
jg
int
pop
pusha
xchg
test
icebp
lea
repnz
lret
pop
xor
and
jne
sub
repz
xor
std
jecxz
push
std
mov
push
popa
push
sbb
sbbb
inc
mulb
rorb
sub
mov
daa
outsb
sub
jbe
jbe
rcrb
xchg
addr16
sbb
aaa
pusha
lea
push
jo
int
jns
xor
addr16
popf
test
addr16
sub
ja
fimull
dec
add
jbe
mov
adc
pusha
and
push
loopne
outsb
dec
xor
mov
sub
push
dec
stos
fiaddl
ljmp
mov
push
jae
mov
and
mov
fadds
add
fwait
loopne
andb
stc
imul
mov
inc
lcall
aam
hlt
and
movsl
test
xor
arpl
dec
or
push
push
in
fidivs
shl
pusha
and
dec
push
mov
sub
scas
mov
sbb
add
shl
mov
aam
repnz
and
adc
imulb
and
and
ret
and
jp
mov
xchg
and
and
outsb
jmp
cmpsb
repnz
push
ret
int3
arpl
ror
dec
cltd
cmp
mov
inc
ja
add
pusha
mov
and
sti
push
mov
in
popf
adc
daa
and
push
and
in
imul
in
inc
push
mov
xor
aaa
sub
or
jo
dec
mov
ror
jb
pusha
xor
mov
mov
loope
inc
adc
movsb
std
sub
sub
pusha
mov
in
into
jo
sub
mov
outsb
out
sub
and
mov
cmp
inc
sub
jmp
lcall
sub
icebp
repnz
shl
mov
mov
add
dec
mov
and
fsubrs
dec
xchg
mov
ja
xchg
mov
outsb
add
sub
stc
clc
sub
arpl
les
jo
jb
sar
push
jp
pop
mov
stos
and
add
shr
add
jnp
and
inc
adc
sub
and
jno
lcall
ss
mov
push
aaa
cmc
sub
pop
add
andnps
push
in
int
fldenv
leave
push
cmpsb
and
and
cmp
mov
xchg
ficompl
pop
stc
xor
enter
fucomi
or
pusha
lret
fnstcw
pop
ja
jae
mov
jne
pop
xchg
loop
push
lock
movsl
fbld
lret
and
sbb
xor
fs
and
movsl
negb
or
into
arpl
mov
jae
mov
xor
fiadds
loop
push
sub
dec
jg
jbe
mov
mov
dec
mov
adc
jmp
jo
rcr
repnz
out
or
and
push
push
in
inc
and
fbld
popa
mov
or
sub
int3
imul
loop
ljmp
lods
sub
outsl
xchg
dec
popa
inc
sbb
push
jnp
scas
xor
jp
out
push
mov
mov
incl
bound
sub
movsl
punpckhbw
jb
add
mull
shrl
jecxz
mull
add
dec
mov
imul
mov
montmul
cmpsb
xor
into
ret
testl
mov
and
and
hlt
jmp
popa
push
push
pop
loopne
je
and
xlat
fbld
iret
fbld
ss
rolb
xlat
ss
mov
jecxz
and
jmp
cmc
imulb
push
popf
adc
push
inc
cmp
arpl
jecxz
xor
add
sub
xor
sbb
clc
mov
testl
in
adc
idiv
inc
push
lods
outsb
stc
and
je
jp
ljmp
xor
imul
or
arpl
dec
xchg
push
sub
mov
inc
mov
es
sahf
icebp
je
and
loope
divl
sahf
push
ljmp
and
mov
xchg
jne
out
ret
add
xchg
and
iret
ret
jmp
movsl
and
aaa
mov
sahf
jb
and
inc
aaa
jo
xchg
call
mov
mov
push
roll
pop
icebp
cmp
dec
pushf
xor
ljmp
sub
dec
mov
loopne
mov
mov
inc
pusha
push
vpmulhw
ljmp
repnz
jae
daa
call
sbb
xor
in
pop
cld
gs
mov
sbb
jb
inc
loop
inc
and
sub
pop
lcall
repnz
mov
jns
ljmp
cs
in
jne
or
add
mov
loope
daa
mov
repnz
loop
lcall
jo
inc
shl
pushf
loopne
les
scas
mov
ret
push
pop
mov
je
arpl
insb
mov
pushf
out
jbe
mov
movsl
shl
mov
out
pop
les
cmp
imulb
jne
out
pushf
scas
aaa
es
cmp
push
lods
pushf
sbb
ljmp
pushf
pusha
shll
es
and
xchg
sub
loop
push
pop
in
ret
cli
adc
add
call
fistl
or
call
and
subb
and
pushf
call
loop
les
or
js
imul
loopne
movsb
add
aad
jmp
mov
out
sub
sub
movsl
inc
pop
mov
adc
xor
lods
jmp
sbb
mov
mov
and
ret
sbb
cltd
movsb
mov
je
arpl
xchg
pusha
adc
jo
out
and
mov
sub
out
mov
mov
outsl
lods
push
cli
test
movsb
xor
push
jge
mov
mov
push
add
inc
adc
and
in
xor
das
and
push
icebp
pop
aaa
dec
sti
sbb
jmp
arpl
jae
sbb
mov
ljmp
mov
ret
pavgb
push
add
pushf
pop
and
xchg
clc
mov
fsubs
or
test
cmp
nop
mov
jmp
outsb
das
mov
mov
pusha
cmpsb
insl
inc
loope
and
testb
inc
in
in
mov
sarb
add
test
clc
jmp
mov
lea
mov
and
aad
xchg
mov
roll
jb
dec
arpl
xor
inc
pop
xchg
dec
arpl
pop
pop
or
pop
xchg
out
mov
xchg
and
lahf
pop
fs
sub
clc
mov
dec
inc
insb
hlt
push
lods
dec
lds
add
jecxz
mov
mov
and
and
ja
or
and
add
jl
das
mov
mov
daa
hlt
stc
in
arpl
sub
hlt
cltd
imul
pop
jmp
cmpsl
cmpps
mov
jb
pop
xchg
jo
xor
mov
cmp
inc
inc
fisubs
insb
cmpsb
repz
outsb
rcl
testb
mov
sbb
lret
and
dec
nop
and
fisubs
sbb
mov
xor
push
nop
sti
adc
mov
mov
add
ljmp
popl
push
icebp
push
adc
daa
loopne
aad
and
or
movsl
into
hlt
icebp
jmp
mov
jbe
out
and
cltd
rorb
xor
mov
fsubs
loop
scas
hlt
adc
popa
xchg
je
and
adc
push
jecxz
fsubp
or
jge
ss
push
sub
and
into
dec
push
push
and
into
loope
lds
xor
mov
arpl
add
jmp
fisubs
xchg
cmp
dec
pusha
add
in
mov
popa
out
les
or
icebp
jp
insl
dec
mov
nop
push
xor
push
fdivs
sbb
mov
shr
mov
cmc
push
add
adc
clc
pusha
ds
loope
xchg
das
je
dec
pop
jb
pop
inc
notl
daa
sub
hlt
vfrczsd
sub
xchg
divb
das
push
inc
imul
and
inc
jecxz
inc
fisubl
sbb
xchg
and
pusha
ja
mov
jbe
cli
lds
and
add
in
out
daa
scas
xchg
popf
mov
popa
testl
in
add
outsl
mov
mov
dec
popa
cmc
adc
add
and
pop
js
repnz
cmp
inc
rcr
pop
jb
outsb
push
loopne
lods
clc
mov
mov
hlt
dec
dec
xchg
cmp
sub
aaa
cwtl
push
outsl
jo
mov
movsl
je
shl
insb
scas
bound
sbb
sahf
add
data16
scas
in
add
jmp
sahf
dec
adc
pop
jbe,pt
popa
push
stos
sbb
sub
push
das
shrb
xor
loop
cmp
in
movsb
ja
ss
mov
lds
sub
ds
popa
add
adc
popa
ljmp
push
and
mov
jns
sbb
and
push
test
ljmp
mov
sbb
and
call
test
loope
movsl
movsl
dec
sub
pop
xchg
hlt
sub
loope
aaa
xor
cmc
pop
cmc
pusha
fwait
jecxz
pop
dec
xchg
pop
out
test
in
or
notl
imul
jo
lock
pop
lret
inc
loopne
and
jg
nop
loop
arpl
test
icebp
sbb
push
or
pushf
imulb
in
fidivl
mov
mov
clc
ljmp
inc
int
ret
and
jo
jle
pop
cmp
sub
dec
adc
insb
movsb
icebp
inc
dec
xchg
xor
cmp
pop
popa
imul
jge
fiaddl
pop
jo
or
lret
mov
stos
and
ljmp
mov
jae
adc
pop
test
gs
imul
sbb
in
je
fwait
pusha
dec
js
rorb
jne
dec
ljmp
pop
push
xor
stos
mulb
jl
inc
icebp
push
mov
scas
loopne
push
std
pusha
ret
or
pusha
or
roll
in
xchg
pop
ljmp
jb
insb
gs
sbb
loope
push
loope
xchg
jecxz
je
mov
cmp
arpl
hlt
movsb
insb
imul
das
pop
fwait
out
pop
and
or
lret
hlt
loope
mov
pusha
jae
sub
jne
cld
mov
xor
rcrb
mov
dec
and
xor
xor
loop
sbb
dec
cmpsl
loop
mov
push
loop
es
sbb
in
cmpsb
push
mov
insl
mov
fsubs
sbb
inc
call
out
inc
ljmp
pop
and
mov
inc
in
cmpsl
and
not
inc
sahf
lret
push
das
pop
mov
mov
push
insl
cmp
inc
xchg
sub
push
sub
lds
ss
push
aam
in
xchg
pop
adc
in
jbe
lret
lock
pop
mov
sub
mov
pop
pop
adc
sub
inc
ss
push
jmp
mov
lods
add
and
and
dec
dec
fwait
xchg
pop
or
cmp
scas
pop
pusha
mov
push
jl
push
lahf
cwtl
pop
sbb
sti
lock
scas
lret
jbe
cltd
inc
pushf
cmp
cmc
inc
in
add
int3
sub
out
cmp
dec
push
xchg
lods
adc
xchg
jbe
sub
pop
testb
cmp
testb
mov
pop
fsubs
das
sbb
sub
cmp
mov
mov
in
imul
ret
xchg
lret
inc
and
das
xor
fisubrl
mov
pop
and
fwait
pusha
int
rcr
sub
das
cs
pop
pop
shl
xlat
push
jecxz
into
cltd
sub
iret
inc
sub
mov
lods
cltd
inc
lret
fsubrs
push
arpl
cmpsb
xor
push
jne
fadds
call
movsb
lods
loope
mov
pop
repz
inc
loope
aaa
loope
xchg
fwait
loope
loope
push
loope
out
sbb
loope
es
xchg
dec
and
pop
stos
mov
mov
fstpl
xchg
and
mov
xchg
stos
call
or
pushf
pop
call
in
imul
lcall
xchg
shrb
or
mov
loope
mov
fwait
stos
sub
jecxz
xor
loope
cmp
pusha
mov
icebp
call
xchg
in
mov
mov
aaa
ljmp
les
sub
push
push
hlt
aam
cli
mov
and
add
push
lock
testb
jb
jmp
push
jge
lret
ljmp
rclb
je
jns
pop
pop
out
or
mov
pop
movsl
orl
mov
data16
leave
add
and
and
xchg
add
dec
sbb
inc
mul
jle
das
push
pop
das
outsl
jnp
push
sarb
add
mov
mov
sbb
aaa
stos
mov
loop
cwtl
cmpsl
stc
fs
std
inc
push
divl
jecxz
test
fcom
enter
es
cmp
sub
add
mov
out
test
mulb
jne
imul
sub
fsubrl
lea
push
cmp
cltd
mov
add
notb
arpl
out
out
or
inc
xor
pop
lock
loopne
pushf
and
xlat
mov
jns
aas
stos
mov
mov
inc
daa
arpl
mulb
mul
adc
jmp
ret
push
cmp
dec
loopne
les
and
sub
loopne
popa
neg
out
pop
push
pop
push
in
pop
shll
xor
pop
xlat
and
pop
scas
sbb
out
lret
jge
loop
mov
test
lret
fisubrl
stc
mov
and
arpl
inc
pusha
inc
nop
mov
icebp
out
mov
sub
bound
push
aam
mov
enter
mov
inc
xchg
subb
insl
push
pop
sub
mov
mov
rcll
and
xchg
sti
and
add
ret
jnp
sbb
aad
mov
rclb
cmp
and
aas
and
or
loop
icebp
inc
shrb
fldenv
push
or
rclb
lret
cli
out
add
out
xchg
adc
mov
js
js
jl
jl
pop
and
pop
adcl
xor
in
aas
scas
popa
jno
aaa
fnstsw
sbbb
mov
pop
addr16
and
mull
imul
das
sub
sub
scas
rcr
push
push
out
call
nop
jmp
and
iretw
loop
xchg
jne
scas
popa
inc
xchg
loopne
popa
das
fwait
push
sbbb
and
ja
bound
ss
nop
mov
jmp
std
ljmp
mov
fnstenv
stc
loopne
dec
xor
popf
nop
jecxz
subb
roll
loopne
cmp
push
test
ss
out
pop
push
test
mov
in
loope
ss
shrb
div
sub
inc
je
push
and
loop
popf
testl
pop
and
rorl
jb
repz
and
inc
add
xchg
push
xor
fisubl
add
lcall
push
sbb
mov
int3
shl
shrb
and
in
gs
sub
lea
inc
xchg
inc
cld
lret
stos
out
and
mov
sub
pop
xchg
call
in
rcll
push
xor
jmp
icebp
inc
repnz
mov
xor
add
jecxz
repnz
div
decl
stos
cmp
scas
mov
loop
pop
inc
pusha
decb
push
into
cltd
jo
xchg
xor
jmp
test
add
fs
jmp
icebp
pusha
xchg
out
push
pop
jo
fs
outsb
xchg
mul
dec
out
repz
pusha
insb
jo
cmp
jnp
pop
addr16
add
push
je
ljmp
push
mov
dec
mov
xlat
sbb
jle
mov
test
push
ljmp
sub
and
jno
jo
adc
or
dec
mov
clc
dec
in
popf
mov
jmp
fsubrs
lods
in
pop
and
mov
lods
clc
jge
fiadds
jmp
sub
sbb
in
in
sub
inc
sti
clc
popa
insb
and
cmpsl
jb
jae
pop
add
inc
dec
sub
in
jnp
outsb
lock
loopne
add
loop
frstor
mov
pusha
add
adc
xchg
rcl
xor
xchg
and
jecxz
idiv
xchg
sub
xchg
iret
xor
lock
mov
sub
aam
xchg
arpl
aad
test
ss
aam
mov
cld
lret
and
sbb
xchg
faddp
dec
mov
lods
mov
and
out
mov
popa
stos
in
loope
addr16
iret
mov
lcall
lcall
sub
shr
int
mov
repnz
icebp
fcmovbe
dec
loop
xorb
jne
cld
fucomp
insb
xor
mov
xor
jmp
pop
aaa
push
jo
xor
shlb
leave
lahf
insb
das
xor
bound
or
fsubr
repnz
mov
jmp
cld
push
jo
jp
pop
arpl
xor
pop
movsl
xor
jbe
and
adc
test
dec
push
negb
pop
mov
jne
push
cmc
iret
adc
xor
fs
cmpsb
repnz
icebp
sbb
jmp
mov
imul
test
outsb
push
mov
rorl
mov
jae
sbb
loope
fdivs
adc
ljmp
push
fildll
cld
xchg
pusha
addr16
and
call
mov
mov
fsts
xor
sub
xchg
pusha
lcall
jo
stc
fs
cmc
xor
inc
xor
fildll
movsl
jle
ds
jbe
aam
sub
fidivs
lods
jmp
and
and
xchg
lods
pusha
out
ret
xchg
sub
pop
repz
jnp
loope
and
inc
shrl
mov
sbb
int
lock
cs
and
stos
loope
mov
in
inc
cld
jle
fdivp
out
test
add
cli
and
xor
movsl
outsb
cmp
mov
jmp
cli
call
imul
and
js
cmp
in
bound
mov
arpl
jo
or
jbe
call
arpl
sti
cli
loop
arpl
mov
push
mov
jo
jecxz
repnz
dec
and
cs
jnp
enter
push
and
xchg
bound
mov
lods
xchg
jecxz
jmp
lret
and
lcall
aam
call
push
loope
xchg
sub
mov
pop
and
jl
bound
mov
or
jle
cld
adc
dec
jne
fisttps
cs
cmpsl
ret
push
movsb
fdivl
test
fistpll
das
lret
and
jb
xor
mov
adc
imul
loope
call
mov
sub
movsl
xorb
lods
mov
mov
cld
or
in
shll
adc
jne
fcmovu
insb
pusha
negl
scas
test
jmp
ror
repz
xor
mov
cmpsl
test
cmp
mov
sar
loope
push
scas
push
je
sub
testl
jnp
dec
insb
lcall
or
test
mov
push
push
cmpsl
loop
jmp
stc
inc
mov
or
add
jae
xor
daa
hlt
and
jle
popf
in
in
add
xchg
or
push
add
in
outsl
inc
xchg
xchg
dec
dec
lods
add
rcrb
das
lcall
inc
lcall
movsb
push
cmp
cmp
adc
jmp
test
imul
lods
bound
xor
xlat
mov
adc
out
jmp
push
mov
and
xor
ficoml
movsb
xchg
lea
fidivrs
loop
imul
pusha
inc
cld
test
mov
adc
or
jno
mov
out
mov
in
xchg
inc
mov
pop
jmp
push
jmp
add
cmpsl
lods
jmp
and
js
cld
cmpsl
aas
loop
mov
test
je
cli
push
out
shlb
push
add
adc
mov
inc
lea
das
adc
jmp
lret
fisubrl
add
push
ror
mov
insb
inc
cld
push
xor
dec
hlt
fcomip
roll
push
cwtl
call
mov
xchg
push
das
sarl
fsubl
mov
loop
lods
fcompl
aaa
dec
jecxz
adc
movsb
test
test
mov
sbb
add
pushf
mov
jns
arpl
sbb
lods
and
jae
dec
push
hlt
sub
pop
push
popa
mov
je
inc
icebp
jmp
scas
add
push
inc
add
and
inc
out
movsl
loopne
inc
movsl
sbb
outsl
test
and
dec
loop
add
or
jmp
xchg
movsl
push
idivb
adc
jne
adc
pushf
sub
mov
ja
jns
test
lods
jne
push
fists
pushf
out
je
jecxz
loope
repnz
test
je
mov
or
push
loopne
in
jne
pop
imul
inc
mov
scas
pusha
sbb
ret
mov
arpl
xor
mul
jge
xchg
int3
insl
shlb
jns
sub
lahf
stos
int
stos
pusha
cmp
adc
imul
jne
cld
jmp
rcr
stos
xor
loop
and
and
add
mov
aaa
enter
movb
loope
pushf
inc
out
jmp
jne
mov
add
lret
and
xchg
sub
mov
and
jecxz
iret
add
jnp
and
ljmp
push
out
fcompl
mov
mov
sub
lret
mov
pushf
movsb
insb
fidivrs
and
insl
or
outsb
loop
mov
mov
insl
cmp
cmc
pop
push
insl
je
ret
xchg
movsb
xor
cmc
xchg
jo
xorl
xorb
decl
push
rorb
jecxz
xor
ss
hlt
lahf
jge
cli
popa
dec
cmp
inc
mov
push
mov
shlb
ja
and
inc
jns
dec
jae
hlt
jne
test
gs
or
aaa
fwait
and
les
pop
add
sub
repnz
jbe
xor
test
test
inc
inc
or
loopne
push
adc
dec
push
fimuls
mov
mov
inc
pop
and
push
mov
jecxz
jle
leave
loope
xchg
jecxz
xor
sahf
jmp
nop
bound
mov
arpl
test
mov
cwtl
push
mov
and
mov
add
add
push
arpl
sti
push
inc
mov
xorb
pop
call
iret
in
test
pusha
and
mov
mov
out
lds
pop
dec
jns
jmp
cwtl
shrb
xchg
push
sti
mov
push
sbb
mov
or
sub
repz
in
stos
fadds
xchg
jmp
and
in
add
or
cs
pop
adc
lods
daa
dec
iret
mov
sub
sbb
and
cli
jmp
push
cmp
imul
mov
dec
mov
xchg
in
pop
push
shlb
xchg
sub
shr
sub
shrb
fnstsw
adc
popa
movsl
and
les
jbe
pop
or
jb
push
pushaw
xchg
scas
or
inc
rclb
lds
rcl
push
xor
divb
aas
push
out
push
fsub
cmp
and
jge
dec
int3
push
popa
dec
iret
in
imul
popa
add
in
dec
or
sbb
mov
and
or
push
push
loope
xor
mov
xlat
mov
adc
mov
das
loope
pusha
aas
and
inc
bound
test
popa
loope
aam
dec
pmulhuw
cld
jecxz
xorb
xchg
sub
adc
jmp
arpl
xchg
popa
push
add
inc
lods
ja
cltd
in
jmp
mov
sar
mov
xchg
sub
imulb
movsl
jnp
loope
bound
shll
xor
mov
ficoms
sarb
xchg
push
add
into
push
and
inc
fiadds
mov
jecxz
push
and
ret
in
xor
loop
and
mov
insb
or
push
push
imull
pushf
scas
jne
loope
or
mov
inc
pinsrw
in
mov
test
loopne
sub
inc
aam
fmuls
in
ja
push
xor
inc
divl
in
jecxz
push
lds
push
mull
into
inc
xchg
test
insb
and
and
add
shl
movsb
mov
push
dec
sub
hlt
xor
inc
je
aam
and
scas
push
push
sub
jbe
push
mov
fidivs
in
mov
bound
lods
imulb
jae
cmp
ret
xor
cmp
sub
insb
in
jbe
and
jecxz
out
xchg
test
scas
inc
and
or
das
notl
mov
test
sub
les
call
sub
xor
jmp
shl
push
je
outsl
inc
mov
shll
dec
dec
scas
orl
and
mov
cmp
adc
sub
lea
arpl
jb
pop
popa
inc
jb
mov
fbld
lret
imul
sub
ljmp
sarb
in
push
test
hlt
xchg
sbb
fucomip
loope
adc
pop
cmpsb
and
push
mov
imul
and
test
call
stos
sbb
dec
add
stos
and
jmp
sub
inc
push
fstp
loop
in
rclb
mov
dec
push
jg
pop
pop
mov
sub
cmpsl
popa
in
and
cwtl
rorb
rolb
cmc
rorb
mull
jmp
push
sub
lods
inc
das
push
in
sub
inc
and
and
add
rcr
mov
add
mov
shlb
aam
rol
jecxz
sar
push
pop
sub
lcall
pop
sbb
jecxz
stos
shlb
mov
es
xchg
dec
pmulhuw
popa
insl
sub
mov
push
loope
jo
mov
and
outsl
xor
insb
imul
imul
ljmp
pusha
insl
jmp
movsl
sbb
mov
hlt
ficoml
push
gs
mull
lret
add
push
in
notl
out
pop
sub
or
pop
jle
outsb
fidivl
mov
cmp
push
insb
popa
lret
add
xlat
add
dec
mov
add
repnz
inc
ficomps
sub
xchg
mov
out
out
dec
cmp
mov
repnz
sub
ret
out
imul
xlat
out
scas
lods
jne
push
sbb
pop
pusha
jmp
sub
adc
pop
or
lahf
loopne
push
jecxz
xor
push
cmp
jp
adc
leave
add
cld
cmp
popf
in
sub
popa
add
fidivrl
push
jg
pop
repz
xorb
adc
shll
imul
divl
aas
mov
inc
jl
push
lcall
imul
fcompl
jp
call
and
je
pop
leave
popa
xchg
sub
fs
pop
push
mov
jbe
pop
ljmp
in
loopne
rcrl
add
pop
and
adc
repnz
std
push
in
inc
int
popa
es
loopne
push
stc
arpl
scas
mov
jns
pop
jmp
xlat
mov
popa
fdiv
mov
xchg
pop
jmp
aaa
insb
ljmp
inc
pop
in
shlb
dec
call
push
lea
push
and
mov
add
loope
mul
jnp
bound
mov
or
sub
and
and
and
sti
scas
stos
pushf
sbb
and
loope
cmpsl
inc
mov
xlat
sahf
inc
loop
mov
xchg
and
sahf
xchg
sub
and
add
xor
push
call
pusha
aas
clc
push
pop
sbb
enter
push
lret
sub
aaa
in
idivl
lods
stos
loope
lds
sbb
int3
push
xchg
push
lahf
jp
insb
inc
and
pop
mul
push
fwait
inc
jecxz
xor
sbb
je
jecxz
dec
jecxz
popf
push
pop
lods
lds
inc
hlt
sub
pushf
cmp
scas
sub
xor
or
cmp
int3
data16
dec
sub
sti
jmp
push
mov
mov
and
fwait
jae
ljmp
jne
jecxz
add
rclb
test
rorb
mov
das
cmp
sub
mov
and
sub
cld
cmpsb
das
les
outsl
xor
xchg
mov
lock
popa
pop
jecxz
sub
es
mov
add
mov
xchg
imulb
sti
jb
lods
insl
testb
popa
test
mov
and
inc
xor
mov
arpl
sub
push
mul
shl
loope
pop
loope
test
push
jl
pop
mov
xor
ret
lea
insb
cmp
adc
pop
rcl
push
push
rcll
cmp
lods
adc
or
xor
mov
fimull
inc
orl
loope
cwtd
aas
fisttps
ret
push
push
imul
test
pop
pusha
mov
xchg
pop
das
inc
insb
loope
jg
mov
inc
and
push
loope
inc
js
jecxz
outsl
mov
pop
mov
sbb
fisttpll
sub
pusha
push
mov
mov
push
das
mov
das
lods
push
movsl
lods
jbe
xchg
mov
dec
push
add
loope
push
jo
jb
xor
loop
addr16
lds
aad
push
mov
loope
loope
and
in
jecxz
push
jecxz
cmp
jne
jecxz
mov
movsb
data16
jbe
adc
adc
lret
mov
lods
inc
idivl
push
xor
scas
pusha
push
push
in
std
jb
scas
arpl
sbb
and
or
sbb
pop
push
pusha
mov
aaa
sub
stos
inc
sub
rol
sub
test
mov
aad
mov
jo
cmc
imul
xchg
xor
pop
and
mul
inc
pusha
pop
xchg
pop
mov
xchg
dec
pushf
push
test
sub
sbb
sub
shrb
test
lcall
outsl
pop
and
sub
and
jnp
das
mov
add
aam
mov
pop
cli
and
push
lds
xchg
xor
push
and
leave
and
jecxz
lret
lods
loope
outsl
push
add
jle
mov
loop
rolb
daa
adc
cmc
mov
sub
out
out
shlb
push
sbb
jecxz
push
div
mov
push
loope
into
jne
jecxz
add
arpl
cmp
mov
mov
adc
hlt
inc
cmc
add
repz
xchg
cwtl
in
and
sbb
fwait
and
clc
sbb
loope
out
jmp
popf
sbb
sub
nop
loope
ljmp
xchg
ret
push
and
aaa
arpl
jns
cli
mov
icebp
int3
push
cmp
add
mov
xchg
jno
pop
pop
cmc
xchg
loope
das
mov
mull
push
pop
jnp
mov
and
in
mov
xlat
loope
lock
test
popa
pop
cmp
leave
jecxz
cmc
sub
push
sub
das
push
fwait
xor
sub
popf
inc
out
negl
test
aaa
pop
in
outsl
cs
loope
push
in
inc
daa
and
mov
or
scas
loope
sbb
and
arpl
lret
push
cwtl
push
sub
and
sub
and
nop
jmp
jnp
jnp
and
outsl
sub
mov
popa
cmp
mov
ja
mov
lcall
loope
test
pop
jg
jecxz
xor
push
sub
and
arpl
jg
arpl
lcall
shlb
mov
lret
in
imul
push
leave
mov
popa
jne
dec
nop
das
sub
dec
sub
adc
insb
loope
mul
xor
sub
cmp
dec
pusha
stc
inc
inc
mov
das
pop
iret
mull
pushf
mov
bound
mov
lret
icebp
dec
icebp
lods
icebp
rcrl
sar
push
mov
arpl
mov
sub
movsb
sub
add
into
add
in
mov
sti
dec
loope
cmc
cwtl
pop
jb
fdivl
push
jmp
out
sbb
ja
pop
mov
cmpl
sahf
cmp
shrb
les
sbb
popa
cmp
roll
loope
xor
mov
iret
cmp
sbb
sarb
xor
xorb
xor
and
in
add
popa
shll
and
mov
xor
arpl
sub
xchg
popa
pusha
sub
arpl
cli
pop
fiaddl
jecxz
mov
aas
je
push
push
inc
cwtl
outsb
jmp
sbb
loope
fldcw
push
dec
pusha
dec
sub
mov
stos
shlb
test
cmp
fsubrl
lods
push
sbb
jnp
mov
inc
jnp
and
testl
xchg
inc
loope
sbb
mov
bound
pusha
daa
push
lea
outsl
pop
adc
rol
push
lret
mov
cld
in
mov
xchg
mov
xor
mov
stos
popa
aaa
lea
and
push
popa
aaa
popa
iret
das
rol
sbb
rcll
popa
inc
jne
inc
add
dec
aas
pop
mov
cmp
loope
and
pusha
sub
and
hlt
pusha
sbb
dec
in
inc
movsl
mov
cmp
xchg
call
mov
es
popa
movsl
lcall
and
out
push
push
icebp
shlb
popa
shll
push
xor
push
gs
mov
sub
dec
jp
stos
push
jecxz
out
push
int3
jle
jmp
dec
push
jecxz
dec
mov
loopne
test
mov
repnz
popa
insb
loopne
jo
loope
stos
iret
jmp
push
mov
negl
insb
mov
dec
push
pushf
push
sub
icebp
and
lds
loopne
dec
in
movsl
stos
and
out
mov
sub
out
mov
sub
push
int3
les
inc
dec
push
jge
adc
push
jb
cmc
les
gs
push
push
and
adc
in
mov
pusha
jp
outsb
and
inc
mov
std
lods
je
iret
and
pop
jmp
ret
and
add
and
sub
out
sub
xchg
enter
mov
and
mov
jno
mov
shrb
mov
jbe
rolb
scas
stc
loope
loop
and
repnz
and
mov
add
ror
pop
jbe
dec
clc
out
mov
out
mov
ss
mov
sahf
xchg
adc
clc
mov
mov
outsb
mov
fwait
jp
loopne
pop
out
xchg
or
mov
jae
pop
mov
mov
repz
and
scas
inc
jae
jb
jg
outsb
popf
nop
mov
cmpsl
shll
aaa
sub
jecxz
xor
adc
rclb
loop
push
or
hlt
adc
aaa
xlat
cwtl
lock
test
add
adc
inc
and
adc
ss
fmull
je
dec
bound
mov
mov
and
out
push
adc
jmp
mov
cli
jmp
jp
in
pop
mov
ja
sub
cli
in
xchg
jae
lds
jmp
add
jbe
push
adc
xor
push
mov
push
pop
mov
aas
pop
pop
xor
dec
leave
sbb
hlt
pop
test
pop
stos
sub
cmpsb
test
add
bound
stos
int3
out
jns
mov
stc
mov
or
sub
imul
add
out
fiaddl
call
out
mov
test
dec
imul
pushl
mov
arpl
inc
add
pop
inc
int
xor
ror
test
or
outsl
cmp
adc
dec
jg
test
and
xor
sbb
and
lahf
jbe
xchg
add
add
sub
pushf
subb
sbb
jne
pop
cpuid
add
cwtl
adc
xchg
xchg
add
aad
bound
and
mov
lds
shll
sbb
hlt
sub
repz
testb
inc
loope
push
mov
push
jb
sahf
pushaw
iret
sahf
cltd
mov
xor
adc
jg
je
xchg
add
fisubs
xchg
insl
and
mov
push
ret
or
jb
aaa
xor
imul
sar
xchg
popa
mov
js
push
pop
movsl
push
inc
divb
and
xchg
cld
and
test
and
leave
pusha
sbb
sub
or
insl
mov
xor
cli
and
xchg
movsl
cmpsl
xor
add
out
lcall
mov
call
pusha
dec
mov
xchg
movsb
cmp
inc
and
or
push
ljmp
int3
aad
mov
stos
ficomps
dec
jecxz
and
in
add
sub
mov
lods
add
das
sahf
sbb
lcall
out
mov
lfs
push
test
inc
push
lcall
scas
icebp
jmp
pop
jne
sub
cwtl
daa
sub
lea
fcomip
negl
or
or
push
lret
push
out
push
ret
fucomip
dec
adc
mov
xor
out
inc
aad
loopne
ljmp
and
xchg
mov
je
sub
mov
mov
add
in
lock
mov
mov
call
into
negl
mull
and
sahf
lahf
jbe
icebp
add
jb
cmpb
jo
imulb
lret
pushl
sbb
cmp
mov
lea
das
hlt
push
fnstenv
adc
icebp
pusha
sub
sub
or
fidivs
das
jb
push
cs
insb
sub
subb
sub
cmp
push
lcall
pushf
cmp
sub
test
test
and
shrl
ljmp
subb
loop
and
sbb
in
and
out
fisttps
sub
adc
adcl
pop
xor
mov
shrb
lahf
mov
sub
jnp
lods
add
movsb
and
lcall
xor
shrl
cmc
out
sbb
insb
out
inc
shlb
stc
repnz
inc
int3
jecxz
fsts
push
mov
test
aad
imul
pop
hlt
cmp
push
in
arpl
pop
mov
mov
call
add
ljmp
lods
adc
adc
imul
into
arpl
mov
xchg
mov
out
and
jo
mov
call
mov
sbb
sub
imull
orb
repnz
inc
lock
and
cmp
loop
addr16
mov
je
mov
sbb
outsb
add
xchg
add
aaa
and
std
inc
out
mov
and
adc
push
jne
inc
xor
icebp
neg
jmp
jb
or
bound
inc
ficoml
push
push
imul
insl
bound
stos
aaa
aad
or
lret
add
mov
or
jb
lods
in
lock
pop
test
andl
push
mov
adc
repz
movsb
lods
out
pusha
jo
in
or
and
jb
xchg
add
int3
inc
and
mov
in
pop
xchg
mov
imul
out
hlt
movsb
aam
nop
or
leave
shl
es
pushf
xor
shrb
stos
xchg
add
imul
mov
add
push
mov
and
mov
mov
add
test
popa
mov
arpl
movsl
inc
push
das
dec
add
ja
dec
mov
rcrb
sub
sbb
xor
stc
arpl
cmp
repz
mov
adc
lds
arpl
orb
jne
loop
and
cmp
and
popf
push
dec
inc
jcxz
jae
jecxz
xchg
jb
out
mov
stos
pushf
sar
or
out
push
mov
loope
fildll
repz
fbld
lods
mov
inc
aam
cmp
pop
cmc
lods
jne
mov
push
cld
fs
dec
lods
sbb
sub
addr16
adc
clc
loopne
mov
push
adc
xchg
and
cwtl
std
aam
out
nop
shrb
aam
stos
jmp
inc
mov
inc
out
iret
in
out
aam
imulb
bound
add
sti
and
aaa
sbb
xchg
mov
ja
jp
stos
pusha
cmp
and
sub
pop
rclb
idivb
sub
repnz
out
data16
and
inc
cmp
js
push
cwtl
lcall
subb
inc
ljmp
xor
pop
fcomip
push
ret
outsb
inc
in
in
outsb
push
pop
dec
hlt
insl
pusha
inc
call
out
mov
dec
gs
mov
filds
fsubrl
or
jle
nop
lahf
loop
popf
jmp
loop
pop
mov
push
jo
test
push
arpl
push
aaa
and
push
popa
repnz
aaa
rolb
loop
inc
sub
repz
jp
xchg
sub
sbb
pop
push
cmpsb
jmp
test
clc
in
ss
inc
mov
mov
test
push
jno
jecxz
test
inc
ljmp
push
scas
sarl
fsub
or
and
xchg
add
js
mov
ret
dec
cld
jecxz
add
arpl
sub
nop
outsl
test
out
jbe
pop
movsl
iret
aam
push
jge
je
mov
mov
xchg
lods
aam
mov
outsb
and
sub
dec
mov
xor
push
test
in
mov
push
inc
push
cwtl
test
xchg
enter
sbb
ss
jp
jnp
sbb
lods
mov
push
sub
int3
lahf
mov
xchg
in
stc
imul
sub
sub
mov
adcl
sub
rorl
pop
loopne
add
sub
in
ret
test
add
xor
jecxz
add
push
lods
mull
rorl
inc
xor
lret
inc
es
push
fchs
test
cmp
mov
xor
jae
mov
and
pop
jge
insl
iret
sub
push
xor
je
sub
sub
pop
mov
mov
xchg
int
sub
leave
test
in
mov
and
ret
loopne
pop
hlt
popa
inc
add
xchg
xchg
stc
and
aam
int
jnp
shrb
pusha
pop
movsb
dec
loope
jg
lods
jmp
call
or
mov
xchg
push
ss
jae
xor
push
and
addr16
pop
sar
inc
sub
push
sub
ljmp
aaa
rorl
xor
jmp
xchg
inc
adc
inc
add
out
mov
in
dec
xor
adc
movsb
jbe
sub
cmp
mov
fsubr
push
mov
push
add
or
divb
ret
adc
jns
test
aas
adc
xchg
in
mov
push
out
mov
mov
lods
loope
xchg
sub
setge
xlat
dec
hlt
sbb
fsub
jno
repz
stos
add
and
fs
mov
test
addb
aad
inc
mov
mov
mov
pushl
jge
mov
mov
sbb
ljmp
wrmsr
stos
jle
icebp
stos
jmp
orb
push
mov
xor
xor
sbb
shrl
pushf
shlb
sbb
out
or
mov
and
adc
xlat
jp
adc
and
stc
or
xchg
sub
notb
sub
insb
in
jo
xor
negl
push
add
sub
nop
xorl
aaa
fnsetpm(287
out
jecxz
out
jg
stc
xor
and
jmp
imul
and
test
cmc
test
sub
fisubl
arpl
jmp
sbb
jecxz
adc
test
jno
xor
xchg
mov
stos
jnp
movsl
out
jnp
repz
pop
and
stos
shl
sub
insl
daa
stc
packsswb
xor
loop
jne
je
test
in
rol
in
testl
pop
loope
mov
fdiv
mov
hlt
fcmovnbe
jno
and
cmp
and
and
mov
jmp
adc
jmp
add
pusha
rclb
pause
dec
sub
cmpsb
xchg
xor
adc
popf
je
mov
mull
icebp
daa
call
push
jbe
popa
lret
sbb
outsl
push
mov
add
jns
negl
shlb
or
push
mull
loope
inc
sar
aaa
jo
fildl
jo
xchg
es
out
mov
in
or
push
sbb
outsb
inc
lcall
xchg
sub
xchg
pop
and
push
or
xchg
jecxz
add
xchg
in
insb
cmpb
jb
or
stc
psubw
scas
jns
jg
imul
xor
sti
sub
pushf
pusha
lock
jg
cmp
and
call
xor
add
insl
inc
ljmp
adc
cmpsl
jmp
addr16
or
out
jg
xlat
scas
inc
and
ljmp
lods
cmp
xor
push
cmp
sub
inc
jnp
mov
ret
push
out
push
call
js
push
push
mov
jnp
dec
in
pushf
xchg
scas
sahf
jae
sti
adc
push
and
decb
pushf
aam
sub
pop
cmpl
sub
and
or
test
mov
out
jmp
push
push
jmp
sub
xorl
jbe
lcall
sub
lods
je
pop
jecxz
sub
lock
mov
gs
inc
push
call
insb
and
and
das
cltd
jb
jmp
imul
and
in
sbb
fists
cmp
arpl
jno
stos
jae
mov
jne
pusha
jne
in
cmpsl
jo
and
and
mov
xchg
and
and
and
push
add
add
stc
aaa
inc
and
outsb
mov
in
call
or
pusha
ljmp
mov
inc
sub
loop
nop
shrl
push
inc
adc
loop
pop
mov
movsb
jae
xor
mov
cmp
xor
xchg
jb
out
adc
sub
add
add
out
scas
sti
es
es
mov
popf
mov
sub
jo
mov
pop
and
xchg
or
ja
arpl
stos
pop
movsl
or
popa
push
jne
in
push
addr16
popa
and
mov
fidivrs
pusha
das
mov
cmc
pushf
test
aad
ljmp
mov
je
aaa
aad
imul
mov
adc
inc
xchg
pop
xchg
in
int
arpl
sub
jo
jbe
inc
aas
popa
jo
aad
inc
aaa
adc
xchg
jl
mov
cmc
loop
jae
stos
mov
and
jo
in
imul
ss
scas
jbe
jp
xchg
je
scas
sub
imul
push
add
imul
inc
test
mov
subl
je
test
incb
sub
lret
sbb
jmp
stos
cmp
and
insl
outsb
cmp
hlt
jb
lahf
sub
loop
call
dec
cmc
in
test
jb
pop
subl
push
and
sbb
push
in
mov
adc
add
in
mov
mov
insb
ds
push
pop
add
sti
pop
popa
mov
popa
aaa
in
mov
das
fwait
out
decl
in
mov
and
xchg
rorl
mov
push
dec
jmp
scas
jmp
pusha
mov
into
or
pop
jle
xchg
scas
mov
sub
mov
in
pusha
test
cvtdq2ps
cmc
lods
xchg
leave
hlt
xchg
mov
push
jb
and
dec
and
popa
aam
outsb
popf
xor
int
jecxz
aam
xchg
mov
popa
loop
addr16
push
movsb
xor
jo
xchg
or
mov
sub
in
and
mov
jecxz
and
sti
mov
mov
and
stos
push
dec
push
push
mov
xorl
cs
cmp
add
fwait
outsl
rorl
scas
mov
mov
scas
and
in
pop
inc
inc
and
dec
inc
xor
mov
dec
pusha
jbe
fldenv
xorl
imul
in
add
ja
mov
and
out
ljmp
pop
shlb
in
ljmp
scas
pop
mov
cltd
arpl
and
mov
mov
cmc
es
sub
pushf
xchg
push
ficoms
inc
and
and
pop
aad
fwait
jnp,pn
pop
jmp
push
adc
jecxz
push
dec
and
je
aaa
sbb
insl
dec
lea
inc
ds
dec
cs
sti
test
scas
cmp
out
loope
les
pop
je
sahf
xor
jp
pusha
mov
xchg
jne
and
repnz
mul
and
arpl
dec
jb
je
bound
leave
mov
pushf
arpl
into
imul
cwtl
mov
popa
mov
pop
enter
and
pusha
mov
shll
and
mulb
adc
enter
imull
add
mov
and
xor
inc
sbb
inc
push
or
jecxz
dec
sub
call
pop
loop
push
jg
cmp
pop
pusha
cwtl
xchg
or
in
mov
and
outsl
push
mov
jg
or
mov
cmp
imul
lods
push
add
in
bound
and
dec
cwtl
and
pop
push
mov
mov
das
ja
shr
push
mov
xchg
mull
jae
je
jne
xchg
call
sub
scas
rclb
ljmp
pusha
jb
cmc
les
movsl
leave
jbe
mov
loope
jg
adc
cmp
dec
frstor
pop
and
xchg
mov
jmp
cltd
pusha
cwtl
dec
insb
jecxz
clc
lea
imulb
mov
add
bound
dec
les
movsl
push
push
sub
neg
pusha
inc
inc
and
ljmp
mov
fidivrl
addr16
pop
insb
jo
in
flds
sbb
aad
test
imul
popa
xor
cmp
in
mov
popa
jns
xor
xlat
and
push
sub
hlt
test
pop
notb
lcall
add
cli
repnz
push
xor
popf
addps
pop
out
imul
and
push
loop
and
sbb
xchg
arpl
fstl
jae
mov
jb
stos
mov
sub
xchg
pop
cs
das
sub
es
loop
inc
sub
mov
sub
icebp
xchg
fnstsw
inc
jg
mov
push
cs
adc
ljmp
test
in
jecxz
adc
negl
mov
neg
xor
xchg
sbb
or
mov
das
in
jo
xor
sbbb
ffreep
loopne
mov
loopne
pop
test
orb
xor
mov
lock
int
jge
push
sbbb
icebp
pop
loopne
jo
add
mov
test
and
lea
icebp
and
pusha
mov
jo
in
fisubrl
jecxz
lods
sub
sbb
jp
lret
sbb
dec
scas
and
mov
idiv
test
adc
push
sub
pop
lods
jo
nop
or
push
das
mov
xor
jno
setge
mov
mov
loopne
jo
mov
and
sbbl
stos
shr
stos
and
pop
scas
addr16
ljmp
das
adc
pop
ljmp
jne
in
jmp
xchg
xor
aas
imul
cmpsb
in
mov
adc
outsl
jae
cld
xchg
in
inc
pop
pop
imul
pushf
sbb
jmp
xor
push
lret
push
add
and
arpl
inc
cmp
and
inc
pop
dec
dec
loop
add
repnz
jae
push
xor
or
std
out
and
push
sub
jne
sub
xor
int
stos
inc
push
fwait
mov
mov
jbe
add
loop
jecxz
push
das
shlb
mov
jecxz
inc
aas
imul
inc
scas
adc
sub
sarl
xchg
jge
push
ret
push
out
repnz
in
adc
mov
sub
jl
sub
and
loope
mull
lret
in
stos
imul
loop
push
loop
aaa
loop
fs
je
pop
loop
mov
sub
int3
insb
xor
das
pop
mov
loop
aad
pop
add
pushf
inc
in
psrad
push
lods
mov
jmp
adc
hlt
cs
in
and
arpl
lret
int3
jp
sub
dec
cmc
int
sub
in
stos
outsl
cs
loopne
insb
jns
cwtl
aam
test
pop
pop
inc
ljmp
lods
fcoms
sub
jge
rclb
mov
sub
push
dec
adc
cmpsb
or
outsb
lods
ja
ss
lcall
inc
inc
aaa
inc
push
mul
ret
arpl
cmc
ljmp
sub
scas
push
lcall
xchg
stos
inc
in
imul
int3
jmp
dec
sub
outsb
push
mov
mov
leave
stos
icebp
inc
pop
sub
repz
push
inc
je
mov
mull
pusha
loop
into
ljmp
fisubrs
inc
lahf
jg
jbe
ljmp
lods
jmp
testb
ja
or
xchg
scas
das
shrb
push
push
sbb
outsl
hlt
and
loopne
push
aaa
stc
pop
fidivrl
lea
lods
loope
popa
out
sub
stos
mov
push
push
mov
inc
sbb
test
call
sbb
mull
jge
mov
xchg
and
loope
push
aaa
shll
push
insb
inc
shr
scas
pop
fisubrl
sub
sub
dec
fsubrs
scas
ss
dec
xchg
cmc
and
sbb
xlat
aaa
stos
inc
mov
push
out
mull
add
add
jp
push
mov
dec
mov
out
ljmp
insl
push
jmp
sbb
mull
out
xor
inc
imul
and
xor
pop
dec
arpl
mov
mov
jge
mov
jns
sub
and
sub
das
lret
fcoms
data16
insl
sub
mov
adc
js
jae
cmp
fwait
sarb
jecxz
int3
test
xchg
lret
and
sub
pushf
popf
idivl
push
mov
sbb
sti
push
pop
mov
das
clc
pusha
sub
mov
aam
popa
sub
mov
and
int3
loopne
andl
movsb
sub
je
hlt
mov
pop
dec
sub
lcall
sub
sub
lcall
imul
scas
imul
cmp
das
xchg
call
and
test
pop
jmp
cmp
add
dec
xor
jo
loop
push
jbe
or
stos
daa
call
pusha
aaa
pusha
sbb
je
cli
pusha
dec
mov
cmp
pusha
sub
pusha
jnp
pusha
imul
leave
xchg
stos
ja
sbb
loop
aad
jmp
push
sub
popf
push
and
outsl
lods
mov
pop
mov
test
das
in
inc
sbbl
mov
cwtl
clc
popa
add
dec
sbb
lahf
imul
aas
xlat
mov
xor
sbb
ret
push
fdiv
int3
jbe
fsubl
push
idivl
lods
sub
adc
scas
sub
movsl
stos
and
pusha
jnp
xchg
lcall
rol
repz
xor
inc
pop
cmpsl
push
iret
cmpsl
mov
das
xor
and
int
ljmp
and
ljmp
fldl
push
pop
js
sbbl
inc
insl
in
stos
rol
push
xchg
hlt
adc
sarb
bound
out
pop
or
and
pop
mov
push
shlb
insb
outsb
pop
idivb
imul
call
pop
jo
xor
scas
jb
js
mov
xchg
pop
mov
mov
stos
aam
jmp
inc
xchg
jo
test
push
cld
dec
addl
jg
mov
mov
lods
shll
xchg
pusha
mov
imul
hlt
ss
mull
lods
and
rclb
in
xchg
shlb
adc
or
daa
pop
out
loopnew
xchg
testl
cmpsb
adc
and
jecxz
add
add
movsl
or
je
sbb
dec
lret
mov
cmp
ret
add
jb
pop
pop
xorb
add
mul
leave
ret
in
into
rolb
jge
lds
and
and
or
adc
and
xor
jb
push
pop
stos
push
push
add
hlt
data16
pop
outsb
mov
adc
xor
or
jne
lret
or
mov
stc
loope
sub
in
das
div
inc
shll
mull
sbb
outsl
test
cmp
cmp
popf
lea
fists
mov
push
ja
jne
lea
jge
pusha
icebp
jbe
sub
inc
jo
lahf
dec
shl
idivl
or
loopne
loope
add
addr16
mov
pop
cltd
sub
pop
add
scas
imul
push
inc
pusha
je
add
mov
pusha
testl
sub
and
inc
ret
cmp
mov
cwtl
test
mov
jbe
push
sub
mov
call
rol
mov
out
cwtl
enter
inc
pop
lods
pop
loopne
movsl
shrb
and
add
mov
ljmp
mov
negl
mov
test
push
lods
mov
push
clc
outsb
scas
popf
or
outsb
sbb
xchg
loopne
or
pop
pop
movsb
popa
das
cli
jmp
shl
and
mov
testl
ja
and
push
add
mov
cld
stos
sub
cmp
cmp
nop
pop
loopne
je
testl
jb
cld
cmp
les
or
inc
cli
and
mov
lret
and
ljmp
inc
lds
mov
insl
test
sbb
add
call
dec
inc
in
test
in
notl
insl
std
iret
mull
push
lret
lock
test
imul
out
clc
fildll
push
jmp
daa
mov
sub
and
sub
shl
jno
dec
idivl
out
add
jbe
mov
pop
cld
xchg
mov
out
xor
and
hlt
sbb
push
mov
cmp
fcomi
inc
stos
add
outsl
xchg
cltd
fucomip
mov
nop
sahf
data16
shrl
in
sub
xor
add
push
jb
shlb
dec
decb
imul
ljmp
popaw
mov
orl
imul
ljmp
outsb
repnz
cli
pop
cli
stos
dec
sarb
out
popa
sub
pop
mov
dec
imul
inc
in
nop
shlb
mov
jne
cli
mov
cli
jp
insb
mov
rorb
shrl
ja
or
jb
out
pop
mov
xor
call
lods
jno
jo
fistps
pop
iret
dec
loopne
mov
xor
sub
lock
adc
inc
adc
nop
movsb
imul
loopne
and
adc
mov
aas
ret
ja
add
repnz
fucomip
or
cmp
in
mov
or
ljmp
aam
mov
scas
xchg
les
jge
adc
loopne
pop
xor
call
jmp
pop
and
fimull
decb
popa
xchg
ss
cmp
cmp
fmul
push
hlt
sub
repnz
in
xor
popa
add
imul
vprotb
daa
xor
inc
loope
jb
push
out
inc
and
divw
std
pop
loop
pop
cmp
xor
leave
pusha
shl
stos
mov
or
jecxz
lock
loopne
sub
push
nop
fcoml
mov
xor
cmpsl
les
sub
xor
ljmp
dec
fisubrl
inc
mov
jbe
jae
or
test
sub
int3
sub
or
mov
jmp
lds
dec
adc
scas
lret
out
xchg
push
je
fimull
jns
loop
sbb
rorb
aaa
into
sub
rolb
mov
popf
arpl
sub
push
dec
and
mov
cld
addl
pop
shlb
and
pop
sub
cmc
inc
and
popf
add
hlt
mov
stc
jnp
cs
mov
inc
cld
cwtl
xchg
mov
mov
cmp
push
test
jecxz
outsb
jecxz
rorb
mov
push
inc
inc
movsl
lea
and
loope
push
jno
push
popa
lds
fbld
or
mov
les
sub
popa
mul
aam
pop
push
lock
test
jmp
adc
pop
jg
mov
push
push
pop
shl
inc
jmp
inc
aas
cmp
lahf
fwait
ljmp
lock
out
mov
push
scas
push
xchg
xor
movsl
call
popa
dec
bound
popa
cltd
not
add
mov
fwait
add
ja
int
and
movsl
cltd
in
in
out
jmp
jge
loop
push
popa
js
jo
xor
jo
bnd
sub
in
movsl
pop
adc
pusha
lret
repz
jecxz
lret
add
sub
repnz
and
cli
sub
inc
push
fdiv
add
or
inc
shrl
jg
rorl
push
loopne
int
movsb
fs
xchg
notl
mov
loop
icebp
repnz
repnz
jb
ljmp
jne
out
mov
and
ljmp
fs
inc
mov
mov
mov
aaa
test
pop
push
or
push
lret
insl
push
sbb
lds
sbb
cld
movsb
loop
out
lret
xchg
icebp
and
in
mov
popf
aam
lret
andb
iret
movsb
sub
xlat
push
xor
nop
movsbl
dec
btc
fsub
cltd
pusha
dec
push
mov
pop
icebp
and
popf
and
jnp
lods
jns
xchg
test
pushf
mov
in
imul
push
popf
popa
sbb
mov
mov
adc
in
outsb
nop
mov
mov
jne
shlb
imul
rcrb
lds
fiadds
popf
add
xchg
outsl
fsubp
xchg
jmp
add
and
in
movsb
mov
push
jb
addr16
test
lcall
sti
xchg
psllq
shlb
and
loop
inc
in
out
fsub
clc
and
arpl
or
cld
lea
dec
inc
sbb
sub
jb
lcall
in
icebp
lods
lahf
mov
or
jae
pop
jnp
imul
dec
mov
in
fcoml
fisttpl
cmpsb
outsb
aad
and
adc
lcall
movntq
es
add
jmp
fidivrs
test
inc
out
sub
dec
ja
sti
insl
and
leave
jb
sarl
jp
jnp
xor
in
lds
sub
and
mov
test
fdivp
jae
mov
outsb
and
jno
and
jle
shlb
enter
dec
and
repz
mov
dec
iret
cli
scas
dec
enter
add
dec
add
pusha
cwtl
clc
imul
lds
jmp
out
test
dec
and
sub
les
jle
and
outsb
imul
sub
bound
iret
jo
xor
push
push
mov
pushl
dec
imul
outsb
test
in
mov
fisubl
xor
mov
cmpsb
jecxz
nop
mov
das
and
sub
ret
pop
mov
rcr
insl
mov
and
sbb
mov
std
mov
and
daa
inc
jg
loopne
call
rorb
adc
jl
xor
loop
xor
jb
jb
and
cmpsl
sar
mov
lcall
arpl
and
stos
mov
jnp
xlat
cwtl
sub
jmp
mov
int3
repz
and
mov
fsubrp
push
jo
jmp
mov
sub
mov
js
test
jecxz
and
xchg
inc
fmull
in
and
clc
mov
sbb
xor
xor
dec
movsl
out
sub
scas
loopne
pop
popa
fdivrs
test
hlt
dec
icebp
cwtl
ds
iret
clc
mov
adc
or
sub
incl
iret
repnz
aad
inc
ja
les
push
fldenv
sub
stos
push
and
add
mov
and
adc
add
aaa
ret
or
jb
shlb
lahf
mov
xor
lods
push
xlat
xchg
sub
jb
dec
arpl
loopne
cwtl
mov
scas
cli
and
imul
arpl
loope
mov
jp
popa
xchg
add
icebp
js
mov
jmp
mov
xor
mov
notl
mov
sub
add
xor
ficomps
into
out
sbb
pop
or
popa
mov
and
aam
movsl
cmpsl
in
cmpsb
mov
and
xchg
fdivs
push
out
data16
bnd
clc
arpl
stos
xchg
hlt
jle
sub
or
icebp
sbbb
jo
mov
les
xor
scas
mov
dec
adc
ficoml
std
out
fcomps
out
push
cmpsb
popa
popf
xchg
in
sub
sub
xor
outsl
not
rclb
mov
sub
pop
jnp
movsb
lods
mov
and
and
je
cwtl
popl
add
jae
mov
and
push
add
movsb
stos
jnp
test
adc
adc
adc
xor
in
je
lret
push
and
ja
jne
shlb
loop
adc
sub
pop
push
and
leave
movsl
add
xchg
and
mov
imul
dec
mov
mov
and
fildll
mov
and
bound
pop
aaa
push
push
and
ds
lods
inc
inc
gs
xchg
je
jmp
loop
in
movsb
jmp
repnz
hlt
jns
scas
js
fcomps
test
arpl
je
or
push
xchg
in
out
dec
icebp
push
arpl
mov
jecxz
out
cmp
dec
pop
out
or
xor
or
je
insb
and
out
test
adc
ss
cld
data16
add
test
mov
jb
jecxz
lds
sbb
rorb
inc
mov
in
shrb
arpl
jp
xchg
sub
mov
lahf
fbld
add
addr16
push
inc
or
and
add
cltd
xor
mov
push
popf
adc
inc
iret
xlat
scas
daa
and
push
jmp
in
cmpsb
mov
clc
inc
and
jo
out
sbb
mov
jecxz
lock
mov
mov
out
dec
out
dec
out
lods
inc
mov
pop
shlb
and
pop
shr
fs
in
push
xchg
dec
shll
outsb
adc
out
xchg
leave
test
and
shrl
aad
arpl
pop
and
addb
negl
iret
mov
lock
and
lods
fisttps
mov
and
in
add
test
shll
xchg
shrl
mov
scas
subb
xchg
pop
pop
stos
xchg
sbb
movsb
mov
in
les
lea
bound
jae
pusha
adc
in
vmread
pop
shl
push
add
mov
test
push
and
movsb
mov
mov
jle
sub
jb
xorb
and
xlat
repnz
cmp
inc
repnz
and
fildll
sbb
rclb
xor
push
push
gs
push
loopne
mov
adc
dec
aaa
clc
insl
push
push
and
xor
lods
dec
addr16
jb
mov
sub
jno
pusha
pop
xor
lahf
outsl
inc
pop
xchg
sub
adcb
les
out
cmp
incl
lods
jo
pop
cltd
pop
adc
jecxz
push
fsubl
sbb
js
and
movsl
pop
ret
cmp
loopne
cmp
xchg
cwtl
lods
arpl
notb
in
outsl
pop
fbld
adc
insb
cmp
and
movsl
mov
adc
cmp
out
inc
xor
mov
jp
jnp
xor
outsb
jbe
xor
pop
jne
test
xor
aam
cmpsl
or
popa
loop
sbb
mov
sub
stc
and
or
push
test
adc
test
pop
mov
adc
movsb
adc
adc
hlt
rclb
mov
adc
clc
mov
and
int
lret
iret
lcall
ljmp
lea
shrl
les
loopne
cld
test
arpl
add
jo
cltd
das
shr
ds
mov
stc
mov
clc
ja
leave
pusha
popf
cld
jge
and
das
mov
add
xor
mov
jae
and
inc
inc
xor
mov
pop
hlt
inc
movsl
adc
loop
adc
xchg
mov
out
loope
loope
repnz
jne
jge
jp
gs
sbb
loope
out
loop
and
and
andl
xchg
cld
in
test
dec
repz
mul
dec
push
repnz
insl
push
inc
adc
add
hlt
mov
test
mov
jb
loopne
xor
jge
loope
sarb
std
mov
sti
into
lods
or
pusha
fmull
into
and
hlt
mov
push
sbb
xchg
push
stc
sub
and
xchg
and
inc
cmp
out
mov
stos
cmpsl
and
test
cmpsb
jae
cld
popa
xor
ret
jmp
cmp
inc
xchg
jge
scas
cwtl
inc
jno
cs
mov
mov
mov
call
sarl
jo
in
inc
pop
add
inc
pop
push
jne
stc
adc
call
cmp
lea
inc
push
cmp
outsb
pusha
xchg
and
pop
pop
add
test
adc
fs
jg
popa
jge
jne
mov
mov
loope
add
imulb
add
outsb
and
jne
push
fadd
cmp
shl
out
divl
call
stos
sti
xchg
mov
cld
lods
jmp
aas
and
test
mov
pushl
push
imul
test
in
std
adc
sub
sbb
pusha
pusha
cld
and
mov
mull
inc
xchg
inc
js
out
jne
rolb
add
jae
xor
test
movsb
mov
in
and
icebp
outsl
lcall
lea
cli
fidivs
js
pop
jg
xorl
sub
pop
les
mov
and
sub
mov
inc
shlb
stc
inc
bound
add
and
and
xor
stos
jb
out
jmp
cmc
mov
frstor
adc
out
shlb
push
shl
shl
je
cmpb
cmc
and
daa
fisubrl
mov
dec
fdivl
push
dec
repz
sbb
cmp
leave
fs
sub
push
xchg
decb
pushl
xchg
cmc
out
pop
jb
mov
mov
bnd
pop
add
push
sub
push
and
stc
scas
outsb
xchg
pop
clc
and
add
imul
xor
xchg
loope
add
push
push
stc
in
mov
and
je
jo
in
mov
test
lds
insl
movsl
cs
and
and
or
mov
or
and
inc
sub
inc
adc
ret
inc
mov
inc
xor
mov
loop
cmp
std
xor
pop
push
pusha
and
es
dec
lods
icebp
and
inc
sbb
add
bnd
inc
fwait
pusha
mov
add
xor
jae
pop
popf
fdivl
movb
lret
cmpsb
and
or
stc
outsl
into
test
ss
sbb
lods
stc
and
or
call
mov
mov
push
adc
js
cwtl
xchg
lock
inc
push
pop
lahf
fidivrl
push
loop
shll
xor
add
pop
outsl
pop
stc
xorb
jp
pushf
call
bound
inc
and
loope
loope
push
add
loope
loop
movsl
mov
push
mov
xor
or
ret
shll
lods
cld
xchg
gs
repz
ljmp
or
repnz
and
cltd
loop
inc
xchg
push
hlt
shll
adc
inc
push
insl
out
scas
mov
in
jne
sub
add
add
addl
pop
stos
sub
and
rorb
sub
push
call
mov
shrl
pmullw
pop
cmc
enter
sub
and
sub
dec
xor
ljmp
xchg
adc
add
out
push
sub
add
pop
mov
cs
shll
xchg
dec
lock
pop
cs
arpl
pop
mov
loopne
sbb
cs
inc
cli
pop
xlat
in
insl
loopne
hlt
pop
jbe
xor
divl
shlb
sbb
lcall
dec
add
mov
and
add
jb
insl
push
inc
pusha
movsb
insl
out
je
fwait
add
in
push
mov
loope
jmp
movsl
insl
push
xchg
xchg
outsl
xchg
movsb
and
js
cmp
outsb
call
adc
add
push
add
and
jmp
inc
inc
daa
sar
out
sbb
and
jb
bound
and
push
or
xchg
and
aad
repz
mov
jb
sub
call
and
jge
and
fiaddl
push
cli
repz
movsb
movsl
lock
and
sbb
inc
inc
lods
ss
sahf
push
lods
fists
pop
enter
aad
movsb
test
and
and
pushf
xchg
sub
and
jnp
aaa
dec
and
cmc
adc
addb
add
jp
fwait
push
or
mov
sti
push
insb
mov
shlb
push
pushf
pop
stos
sbbb
je
shr
push
and
push
jge
lret
dec
mov
sti
and
or
inc
and
mov
sbb
movsl
scas
and
and
add
or
dec
stos
shlb
xchg
add
adc
int3
cmpsl
arpl
add
add
mov
sbb
pushl
loop
out
or
bnd
jnp
repnz
into
scas
popf
jno
push
sahf
mov
mov
xchg
sbb
add
cmc
out
repnz
jecxz
lcall
xor
and
pusha
dec
dec
outsb
push
fucomi
popa
inc
mov
aad
mov
mov
sahf
mov
xlat
sahf
mov
clc
cmp
arpl
add
jae
insl
mov
mov
arpl
fsub
mov
dec
mull
dec
es
mov
outsb
mov
sbb
mov
and
adc
pop
pushf
xorb
ret
lahf
mov
xchg
or
shl
leave
loopne
out
mov
ret
call
ror
push
jo
or
dec
paddsw
outsb
xchg
xorl
iret
xchg
dec
jg
push
xor
inc
icebp
xorl
aaa
loope
arpl
loop
inc
add
and
sub
ss
push
mov
mov
push
in
fdivrl
add
mov
lret
pop
jnp
mov
hlt
arpl
lret
je
add
cld
imul
add
lock
loop
mov
popa
sub
or
jo
xchg
ss
adc
pop
sbb
mov
lock
test
fstpt
mov
xorl
mov
ljmp
fldenv
pop
inc
mov
call
ret
subb
pushf
mov
push
sbb
xor
int3
dec
neg
in
mov
pop
lret
mov
and
inc
and
mov
je
and
sahf
sub
xor
push
outsl
arpl
hlt
or
or
mov
jmp
xor
inc
jg
outsb
cmpsb
and
xor
xchg
push
sbb
xchg
add
in
xor
lods
mov
out
lock
dec
mov
xchg
pop
push
outsb
and
les
jg
mov
pushf
mov
sub
xchg
pusha
clc
cmp
mov
adc
pushf
and
das
and
lods
out
loopne
mov
out
pop
inc
loopne
dec
mov
mov
xchg
push
pop
mov
fildll
mov
jl
out
ficoms
mov
mov
mov
push
mov
ret
xor
mov
and
and
xchg
mov
insl
mov
mov
adc
pusha
jno
lcall
mov
aaa
push
rolb
push
or
xor
mov
inc
cli
loop
jo
jmp
mul
fidivl
shl
jp
in
add
mov
sbb
push
loop
or
mov
hlt
imul
movsb
popf
loope
xor
mov
xor
sub
push
mov
cmpsl
fsubrl
aam
loopne,pn
aas
jge
cs
sbb
jge
mov
sbb
mov
push
sbb
sbb
shlb
fxtract
xorl
fildl
loopne
in
jmp
sub
mov
pop
cs
lcall
ss
mov
sbb
adc
loop
sbb
jbe
in
jmp
xchg
xor
xchg
and
loopne
jo
add
call
ret
cmp
shlb
dec
in
popa
jmp
sub
sbb
test
shr
es
dec
mov
pop
mov
push
loope
es
mov
lods
jne
inc
sbb
lret
divb
sbb
loop
in
and
xor
add
data16
insb
inc
xor
cmc
pop
and
lahf
xchg
aas
push
adc
into
mov
insb
and
jb
jge
test
pandn
and
dec
push
rolb
das
aad
ja
add
in
jae
xchg
mov
adc
push
mov
bound
xor
adc
cmp
scas
hlt
roll
insb
cmpsb
and
in
and
sbb
or
adc
adc
test
fs
mov
rorb
ja
mov
loope
add
sub
add
push
inc
and
sti
loopne,pt
loop
mov
daa
sbb
mov
push
daa
and
sub
cltd
push
scas
insb
push
aaa
mov
mov
addr16
jl
ficomps
and
jns
scas
iret
sbb
mov
dec
movsl
mov
das
jmp
mov
jl
shl
je
icebp
and
and
cmc
and
push
out
dec
inc
cmp
scas
std
cmpsl
cmc
mov
bound
rorb
push
mov
push
push
pushw
jbe
push
fsubs
stos
inc
add
imul
loope
adc
fdivp
jae
fsubl
ss
mov
fxch
mov
or
jl
and
outsb
shlb
imul
mov
pop
test
aaa
cmp
push
arpl
das
imul
xchg
popf
mov
add
sahf
mov
lods
bound
icebp
jge
out
in
ja
mov
and
loop
inc
push
dec
fdivs
push
mov
test
out
loope
xchg
mov
jb
loop
outsl
mov
mov
jb
cld
insl
dec
scas
negb
fcoms
loop
jl
mov
pop
outsl
loop
call
insb
loope
push
push
mov
ficomps
ret
aaa
sub
les
push
sub
insb
je
rclb
pop
aaa
xor
xchg
and
and
mov
shr
mov
je
mov
push
fdivr
sbb
popf
or
xchg
or
nop
or
pop
and
or
sbb
mov
je
mov
sbb
push
ja
out
outsl
xor
push
lods
in
dec
inc
jge
jbe
fdiv
mov
scas
ss
and
push
mov
sub
ljmp
fsubrs
outsb
outsb
xchg
pop
add
aad
push
xor
aam
cmpsb
mov
loop
lods
and
push
and
cltd
mov
add
lcall
xor
lds
push
aaa
mov
inc
out
jne
sbb
dec
push
clc
mov
pop
sahf
ret
loop
outsb
dec
stos
jecxz
jb
sahf
in
push
xchg
xchg
sarl
loope
dec
push
or
pop
push
jb
out
aad
and
xor
add
and
icebp
pop
test
ds
shlb
imul
scas
sub
mov
loop
je
nop
jb
push
lods
and
sub
and
mov
fwait
sub
jge
outsl
and
lods
add
testb
or
sub
movsb
mov
sbb
out
or
popa
ret
test
jns
out
dec
push
and
call
sahf
pop
pop
mov
push
inc
cmp
ret
or
test
imul
je
out
lahf
dec
cltd
and
notl
ja
add
stos
inc
test
push
and
and
inc
cld
push
xchg
mov
scas
and
and
stos
and
and
out
or
daa
clc
insb
call
loop
push
cs
add
push
cmp
jg
sub
jle
push
fstpl
sub
iret
and
push
out
imul
jb
fnstenv
test
test
inc
scas
loop
and
jb
mov
xor
and
or
xchg
sub
and
call
pusha
ds
dec
add
loop
inc
sahf
dec
mov
mov
push
shrb
mov
roll
lcall
std
ds
xor
lods
and
mov
sbb
dec
xor
aaa
outsb
call
ss
sub
push
pusha
sbb
arpl
and
ret
hlt
scas
jge
stos
jmp
arpl
inc
int
jo
xlat
dec
test
sub
dec
pop
cmp
or
pusha
mov
jg
mov
das
fnsave
movl
insb
lods
dec
and
fwait
out
loope
or
mov
cli
cs
shll
je
mov
inc
pop
sub
jnp
lahf
out
inc
and
clc
mov
xchg
push
push
out
les
jmp
cmpsl
out
in
scas
jne
imul
cmp
push
sbb
test
icebp
jmp
adc
pop
cmp
mov
clc
repnz
nop
or
cmp
popa
sarb
fists
in
or
test
scas
loope
inc
xlat
orb
inc
cmp
loopne
div
sub
adc
jmp
sarb
test
icebp
movl
fchs
cmpsb
pop
test
icebp
inc
in
stos
jo
or
pop
movsb
lock
popa
sbb
jno
and
movsb
mov
in
lods
mov
sub
or
add
in
loopne
in
lret
push
out
popa
aas
add
jg
push
nop
sbb
popa
outsb
loopne
fbstp
out
and
pop
add
add
orb
into
and
cmp
in
jge
push
popa
or
adc
mov
mov
dec
orl
repnz
dec
sub
in
enter
cmc
add
or
xchg
jg
cmp
dec
hlt
stos
shll
sbb
sbb
call
imul
call
ljmp
cmp
lea
and
outsl
cmpsb
incl
loopne
nop
sbb
inc
push
arpl
jno
jecxz
nop
scas
cmc
inc
xor
mul
insb
sahf
je
leave
mov
pushf
pop
mov
hlt
mov
mov
sub
dec
xchg
dec
cmp
mov
popa
negb
jecxz
jecxz
or
jne
jp
sub
loope
xchg
scas
and
jo
mov
pop
pop
or
or
das
je
dec
shrb
sti
imul
or
inc
jl
outsl
pop
sub
sub
outsb
xor
loope
mov
mov
mov
aas
ror
sahf
rcrb
lahf
mov
mov
fdivp
aaa
mov
fisubrl
outsb
push
mov
divl
imul
jns
mov
pop
cmp
test
icebp
out
dec
shlb
dec
pop
sub
popf
test
jge
neg
ret
out
dec
mov
imul
in
ljmp
cmpsb
mov
jmp
test
cmpl
loope
xchg
insb
dec
std
mov
scas
adc
loope
inc
loope
push
jge
outsl
aas
insl
mov
fsubs
test
test
push
jns
xor
loope
movsb
adc
cmpsb
mov
mov
jecxz
pop
pop
scas
arpl
pop
ljmp
sub
add
clc
lods
sub
std
pop
imul
fadd
and
mov
lock
push
stos
xor
sbb
lret
and
sub
mov
inc
push
stc
sub
push
jmp
dec
push
push
mov
aaa
xchg
xchg
ja
or
and
mov
and
sub
std
push
mull
dec
in
and
std
jp
sub
arpl
ja
mov
mov
fisubs
clc
popa
popa
mov
sbb
fimull
ret
out
out
or
or
ja
test
jmp
out
push
subb
mov
mov
fldenv
int3
xchg
pop
mov
mov
push
or
sbb
push
cmpsl
sahf
dec
ja
imul
inc
pop
in
ja
dec
jb
std
sbb
pop
loope
in
pusha
dec
pusha
add
dec
pop
pusha
icebp
mov
pop
and
jnp
mov
and
jb
lods
mov
aaa
push
and
in
mov
dec
xor
mov
fnstenv
cmp
ljmp
xchg
mov
push
sti
or
std
mov
and
imul
dec
dec
xchg
fistps
push
std
mull
insl
mov
in
xor
sub
mov
mov
and
and
pusha
mov
inc
and
dec
sub
jl
push
je
xor
push
lods
popa
daa
in
das
sub
or
mov
mov
ja
int
sbb
arpl
and
xchg
sub
sub
pusha
decb
nop
pop
and
pop
cwtl
pusha
cli
mov
mov
ljmp
ja
xchg
pusha
mov
cwtl
fwait
xchg
stc
inc
out
lea
adc
and
aam
fcoms
loopne
mov
movl
xor
and
push
push
popa
dec
sub
push
sbb
pop
mov
mov
pusha
mov
cmp
inc
cmp
aaa
fdivrs
enter
inc
push
jns
ss
mov
popa
ficomps
and
ja
jg
imul
and
inc
xor
pop
cmp
push
pop
lret
daa
into
dec
xlat
and
fcmovnbe
shll
jecxz
icebp
xor
xchg
mov
popa
dec
mov
mov
cmp
xchg
mov
stos
jns
xchg
mov
lret
std
ficoml
ja
xchg
dec
cmp
out
aam
pop
stos
arpl
and
sub
iret
inc
pusha
inc
push
loop
int3
xchg
xchg
mov
push
sub
sti
ss
mov
cmpsl
adc
mov
pop
cmpsl
mov
fstpl
jle
pop
in
or
or
mov
shlb
loope
gs
in
jmp
mov
and
in
inc
lods
xchg
and
js
jge
mov
or
rcl
xor
jge
sub
xchg
jae
mov
divb
ja
int
test
push
jmp
and
fwait
mov
add
dec
call
xor
cli
jmp
inc
stc
and
and
ss
mov
scas
push
ljmp
iret
xchg
xor
outsb
and
pusha
shll
jne
jg
and
testl
sti
sub
lret
rorb
inc
rol
cmp
mov
push
shlb
dec
outsb
and
movsb
sbb
and
mov
mov
xor
loope
inc
test
lods
arpl
mov
dec
xchg
and
add
sub
inc
xchg
pop
fnsave
sti
stc
out
sahf
sbb
call
push
xor
mov
ret
jl
sub
xchg
loope
jne
and
push
stos
and
sub
shlb
adc
sbb
adc
in
mov
in
shrl
pop
fnstenv
leave
insb
aad
push
lds
aaa
cmp
inc
xchg
and
and
hlt
xor
scas
mov
xor
out
out
jmp
inc
inc
cs
incl
mov
dec
stos
sub
js
xor
aad
and
mov
ja
ret
xchg
push
arpl
jecxz
jl
inc
sbb
das
test
mov
in
pop
dec
out
sub
scas
mov
std
clc
outsb
in
lods
mov
loopne
lock
jnp
outsl
sub
cmpsb
sarb
nop
shlb
jae
dec
sub
mov
ret
and
stos
daa
add
inc
jb
cmpsb
and
cmp
arpl
rcrb
and
rolb
or
xor
jmp
xor
mov
xchg
jecxz
fdivs
sub
mov
cli
outsb
mov
daa
pop
je
sbb
and
sub
shrb
mov
fisubrl
ljmp
imul
scas
xchg
es
insb
clc
psubd
jae
sarb
and
pop
cmp
mov
loop
dec
mov
out
lock
loopne
jne
xor
jg
and
in
xchg
mov
xchg
cmc
addr16
jnp
loope
jg
sar
jb
mov
dec
adc
mov
mov
pop
out
mov
xchg
push
ret
and
ljmp
gs
cmp
int3
push
dec
add
and
push
out
loope
inc
out
pop
stos
add
negl
mov
not
and
xchg
or
mov
mov
mov
out
test
mov
and
inc
xchg
mov
fldenv
mov
int
add
in
mov
pop
popf
and
idivl
pop
sti
sub
das
cld
outsl
xor
arpl
xor
pop
jle
and
iret
inc
and
jecxz
jmp
test
mov
scas
sti
sub
test
pusha
xor
aad
push
pop
loopne
xor
sti
test
pop
lock
shlb
stos
fiaddl
call
dec
out
imul
mov
and
sti
mov
js
jne
fsubl
sub
mov
shlb
xor
pop
aaa
pop
in
lods
xor
xchg
and
pop
repz
cld
loope
jae
jle
iret
cli
jecxz
lret
inc
cli
insl
push
daa
mov
jecxz
pop
fildll
shlb
loope
push
loopne
sub
loop
mov
call
push
sar
xchg
jle
test
or
mov
and
loope
hlt
shll
arpl
push
push
mov
pop
jecxz
push
loop
lock
xor
or
paddsb
sti
mov
lcall
cld
nop
xchg
test
dec
pop
clc
test
in
mov
sub
fisubl
loop
sar
out
iret
dec
movsl
outsl
imul
sbb
sub
lcallw
add
jb
jecxz
idivb
push
inc
and
dec
jno
sub
adc
hlt
push
pop
enter
lock
sub
out
add
cmpsl
outsb
push
mov
das
cltd
fnstenv
and
daa
pop
inc
leave
mov
mov
fcos
pop
mov
push
arpl
mov
and
jmp
pusha
or
rcr
dec
insb
xor
in
jne
sbb
xchg
das
and
jb
lods
imul
xor
fldenv
dec
addb
mov
stc
out
nop
fwait
push
std
jnp
stos
in
pop
test
je
das
jle
das
jmp
mov
push
je
aas
fimull
sub
jecxz
mov
loop
dec
mov
xchg
push
out
out
xor
fcoml
pusha
and
cmp
and
jl
xor
dec
and
xor
arpl
mov
aas
dec
cwtl
push
pop
fsubrs
mov
fistpll
fs
jl
js
jl
jl
jl
fwait
int
arpl
cli
fdivp
or
cmp
iret
pop
xor
cmp
xor
mov
popl
scas
shrl
popa
cmc
pop
pop
frstor
mov
repnz
or
out
mov
cmp
push
imul
insb
arpl
sbb
loop
lods
repnz
imul
cs
cmp
outsb
popa
or
add
loopne
mov
add
or
iret
sbb
xor
add
nop
and
inc
add
inc
sbb
icebp
jle
cs
and
loope
push
jmp
arpl
sub
pop
xor
mov
out
out
add
push
out
out
in
pushl
jecxz,pn
jmp
mov
xchg
insl
jo
add
push
push
test
icebp
inc
das
inc
mov
sub
subb
sbbl
xor
data16
mov
enter
mov
jne
shl
cs
mov
jo
fisttps
imul
push
nop
insl
jne
insb
icebp
and
dec
jo
push
cld
das
ret
and
mov
bound
inc
ja
outsl
loop
cli
mov
jg
sbb
out
mov
mov
jno
sbb
jb
mov
inc
push
pop
or
mov
lret
in
aaa
lcall
leave
inc
rcrb
mov
push
lods
cmpsl
push
in
out
ss
fldcw
int3
pusha
and
mov
notl
or
pushl
andl
andb
pusha
push
pusha
dec
mov
and
jbe
mov
out
mov
mov
add
and
push
pusha
cmp
int3
xor
xorb
mov
repz
int3
mov
xor
scas
imul
xor
cmp
popa
sbb
je
and
out
or
push
mov
and
popf
xor
pop
and
dec
mov
stos
loope
ja
fistl
jae
inc
cli
cltd
rorb
jecxz
and
fs
xor
sub
loop
shll
jo
xchg
lea
add
xchg
cmc
and
popa
pusha
in
hlt
pop
test
sbb
imul
sub
and
pusha
mov
js
inc
mov
mov
add
std
inc
xor
fs
xchg
call
jne
daa
repz
jne
xchg
test
addr16
imul
aam
shll
mov
popf
addr16
loope
repnz
mov
pop
stc
and
out
jmp
dec
idivl
ljmp
push
push
jo
push
bnd
cld
in
dec
out
loop
jecxz
xor
cmc
sub
inc
xchg
jmp
out
fistpl
xchg
sti
stc
and
or
rclb
fisttps
int
pop
dec
inc
xchg
mov
loop
repnz
into
loopne
int
pop
mov
pop
lret
pop
or
loop
out
int
xchg
stc
lret
stc
lret
cli
lret
loop
jo
inc
jo
stc
lret
stc
lret
stc
pop
inc
loop
out
stc
lret
stc
ds
test
icebp
sbb
dec
pop
sbb
dec
pop
sbb
mov
pop
in
sub
push
jmp
fisttps
jecxz
out
ds
and
aam
inc
and
outsb
loop
jmp
loope
jmp
jae
or
add
loopne
or
or
dec
or
adc
loop
insl
cvtpi2ps
lds
adc
loop
add
and
and
push
loop
and
mov
cmp
jecxz
je
jb
push
xchg
in
je
arpl
ss
xor
jecxz
jo
divl
arpl
pusha
call
insb
divl
and
pop
and
inc
or
add
or
xchg
and
mov
pusha
inc
fsubl
fstps
push
add
das
mov
jbe
sbb
and
and
mov
and
pop
jne
shll
aad
sti
push
stos
cmpsl
add
add
mov
enter
adc
push
test
aad
mov
sbb
xchg
mul
stos
jbe
sub
in
push
cmp
cmp
dec
add
adc
xchg
fldenv
xchg
fnop
inc
shll
rcr
pusha
sub
cwtl
sbb
jnp
aam
aaa
mov
xchg
out
inc
pusha
outsl
ljmp
pop
rolb
and
int3
inc
int3
insb
or
pop
aam
cmc
ret
in
lds
push
pop
jno
ljmp
nop
jmp
inc
iret
es
aam
inc
and
insl
mov
xor
out
mov
push
push
xchg
icebp
ljmp
div
add
and
and
in
mov
pop
sbb
test
dec
dec
xchg
xchg
mov
inc
push
lcall
xchg
pop
shr
into
popa
aam
insb
jmp
mov
push
ret
cltd
scas
xor
and
ret
push
inc
add
xchg
jo
je
dec
inc
push
daa
pop
cmp
sub
gs
addb
andb
js
ficoml
into
xor
push
icebp
xor
mov
xor
shlb
xchg
push
ficoms
push
inc
xor
xchg
push
xor
and
cmovl
repz
mov
sbb
push
lods
inc
xchg
and
call
scas
xchg
push
test
mov
inc
push
jne
xor
push
dec
adc
popf
mulb
sbb
and
or
cmp
arpl
mov
lahf
aad
xor
lret
xlat
movb
subb
ljmp
or
fld
jecxz
xlat
cli
adc
xchg
jns
inc
mov
scas
xchg
xchg
cltd
fldcw
cmp
pop
mov
test
xchg
xor
inc
mov
sub
pop
mov
lea
cmp
pop
es
fdivrs
xchg
adc
lods
incb
cld
daa
cmp
push
rorb
imul
mov
lods
insl
es
ss
stos
loop
inc
cltd
xchg
xor
je
enter
cltd
rolb
gs
push
mov
aaa
fdiv
jns
lea
ja
mov
neg
mov
pop
ss
stos
push
xchg
cwtl
mov
sub
xor
ret
clc
mov
test
insb
shll
dec
ljmp
sub
push
in
push
xchg
popf
pop
ss
xchg
call
into
xchg
ljmp
out
mov
and
xchg
aam
or
push
xchg
jecxz
and
lds
or
sbb
mov
lcall
cmp
in
sub
rcrb
inc
insl
push
mov
ret
fdivrs
loope
dec
sar
or
adc
mov
or
sti
adc
aaa
out
popa
sbb
add
cltd
adc
test
xor
and
xchg
test
push
and
fst
sbb
ja
push
dec
ret
fmul
adc
icebp
jne
call
push
aam
loope
jbe
dec
add
pop
push
lds
fsub
jbe
lret
loope
xchg
push
scas
inc
ljmp
add
push
andl
jne
shl
cmc
lret
cmpsb
mov
hlt
dec
push
jne
xor
sbb
int
xor
jo
hlt
pop
mov
cmp
jbe
jb
jmp
stos
xor
aad
or
insl
adc
sub
movb
xchg
cmc
lock
adc
sub
inc
sub
aas
addr16
xor
cmp
movb
mov
cld
jb
jmp
cmp
cmp
and
in
imul
xchg
ja
hlt
ret
aaa
test
lret
jmp
jb
inc
cmp
inc
push
cmp
loopne
in
dec
cltd
test
mov
ss
mov
imul
cld
in
mov
idiv
xchg
mov
inc
loop
cmp
and
ljmp
jmp
loop
jp
and
push
js
loop
mov
mov
jbe
jmp
and
mov
mulb
xchg
xchg
roll
loope
mov
rclb
outsb
xchg
jl
dec
lods
jno
notb
and
lret
test
pop
movsb
push
mov
je
mov
ret
xor
jl
daa
loop
adc
popa
push
dec
xor
enter
idivb
daa
shrb
popa
stc
into
insl
mov
adc
ret
subb
gs
pop
movsl
ficompl
inc
and
xchg
je
inc
js
repnz
mov
or
and
test
sub
addl
cmp
cmp
mov
mov
jecxz
daa
fcmovb
pop
repnz
push
std
pop
cwtl
dec
inc
cmp
pop
xchg
mov
lret
sbb
hlt
fwait
mov
testb
adc
push
xchg
or
dec
jl
pop
arpl
adc
pop
dec
movsb
cwtl
mov
push
loope
test
push
inc
jb
mov
sub
icebp
hlt
sar
lcall
shll
cwtl
test
add
sbbl
add
push
mov
jbe
push
roll
inc
push
mov
test
arpl
inc
clc
xchg
test
xchg
inc
arpl
outsl
or
loopne
and
rorb
cmp
and
or
add
aaa
in
fs
les
mov
ret
pop
sub
loope
testb
push
repnz
loopne
inc
mov
or
xor
ret
xchg
mov
roll
ficomps
mov
ljmp
insb
sbb
incl
mov
xchg
jl
fwait
repz
add
out
adcl
jmp
adc
repnz
scas
ret
and
ss
inc
popl
push
pop
sbb
mov
rolb
popf
push
dec
pop
repnz
cmp
enter
add
dec
pop
jb
jne
xor
insb
xchg
and
inc
xchg
insl
push
sahf
in
pusha
xor
push
adc
inc
and
clc
inc
xor
inc
lahf
hlt
and
pop
les
cmp
inc
xor
pop
cwtl
lds
je
inc
jb
out
bound
cmp
inc
imul
cwtl
add
mov
xchg
jns
xchg
xchg
fidivl
iret
movsl
repz
iret
mov
mov
rcll
mov
and
out
jecxz
push
lret
push
jle
mov
in
lahf
es
xchg
pusha
xchg
cmpsl
iret
ljmp
xchg
cmpsb
addb
mov
lea
mov
xor
xor
and
xchg
push
insl
push
je
fwait
cwtl
repz
movsb
insb
dec
in
dec
cmp
rcll
xor
arpl
lahf
ret
je
xchg
out
aaa
popa
mov
xchg
mov
push
sbb
mov
idivl
mov
test
sbb
out
aaa
insl
jo
out
push
fs
mov
cmp
mov
pusha
jno
cmpsl
sarl
mov
loopne
loop,pn
repnz
push
cmpl
je
push
and
cmc
push
jo
adc
hlt
xchg
xor
mov
jl
jae
pusha
jo
loop
mov
divb
jo
shr
loope
insl
aad
mov
xchg
and
shl
and
fdivp
adc
push
mov
mov
in
cmp
pop
push
out
and
pop
andl
lds
mov
in
nop
push
mov
mov
cld
add
nop
popf
cmp
push
sahf
movsl
shl
adc
in
int3
lahf
mov
repnz
sbb
test
jmp
mov
stc
and
hlt
hlt
cs
and
pop
jecxz
inc
mov
lock
jmp
add
ds
xor
sbb
mov
ror
adcl
aas
xchg
mov
aad
fildl
fisubrs
loopne
lret
jmp
mov
outsl
ss
std
mov
mov
mov
adc
mov
fidivrs
loop
and
inc
mov
fwait
sbb
pop
lret
lea
rorb
sub
mov
jmp
into
mov
and
push
and
sahf
dec
outsl
mov
cmp
test
and
rcr
pop
mov
shll
ret
xor
lcall
ss
and
push
pop
movsl
sarl
mov
into
mov
icebp
icebp
jno
sahf
cmp
pushf
ljmp
movsb
and
inc
repnz
or
hlt
push
daa
push
inc
je
rcrl
xchg
adc
sbb
mov
cmp
ljmp
lahf
push
nop
mov
add
sbb
sbb
fisubs
jb
arpl
lock
add
into
push
push
fwait
cmp
mov
sbb
sbb
cwtl
mov
sub
divb
xchg
aaa
imul
cmp
mov
cli
xchg
lods
mov
out
push
sub
jbe
stos
dec
cmpsl
xchg
jno
cmp
sub
aas
cmp
cmpsl
repnz
lods
out
cmp
fwait
mov
pop
adc
and
ficomps
dec
lret
pop
popa
sub
loope
out
jmp
lret
hlt
pop
sbb
pop
rorb
push
jb
shlb
movsl
xchg
xor
sahf
xchg
ret
jmp
aaa
inc
mov
dec
xor
inc
jb
mov
inc
aam
cmpsl
adc
repnz
push
popf
jae
push
xchg
xchg
mov
sub
popa
xlat
push
insl
fbld
sub
dec
aaa
sbb
or
jl
jno
lret
enter
sbb
ret
je
ret
data16
inc
stos
rcl
inc
mov
les
xchg
sub
shll
ret
jb
fs
ja
dec
rorl
jb
jnp
xchg
imul
test
loope
sub
dec
bound
jg
adc
and
clc
in
pusha
lea
icebp
repnz
jne
stc
pop
gs
inc
lock
xchg
roll
and
imul
call
stos
dec
mov
xor
pusha
scas
out
dec
shlb
dec
mov
loop
pop
mov
dec
out
pop
pop
pop
and
jne
fnstcw
fdivrp
adc
aaa
shll
rclb
mov
mov
outsl
in
sbb
xor
mov
mov
pop
imul
sub
ja
sub
faddl
or
dec
adc
mov
repnz
sbb
stos
fidivl
je
inc
daa
push
fisubl
mov
sub
inc
jmp
stc
movsl
test
rolb
lret
sarb
ds
mov
iret
lret
mov
loop
outsl
inc
insl
clc
mov
xchg
cmp
mov
mov
and
loop
xchg
xor
mul
out
cmp
push
jecxz
je
loop
inc
mov
xchg
mov
mov
jo
cmp
inc
push
incl
push
or
pushf
or
shll
push
je
repz
xchg
push
xor
lds
and
insb
jbe
cli
movsb
cmp
sub
mov
mov
push
mov
mov
cmc
ljmp
push
mov
mov
xorl
jle
fidivl
push
cwtl
lret
sub
cmp
and
and
pop
outsb
movsl
loopne
push
mov
icebp
jno
out
mov
push
and
cwtl
mov
fsubs
dec
flds
cli
xchg
call
loop
xchg
ljmp
inc
scas
fnstsw
push
mov
pop
add
addl
adc
lds
ror
inc
cmp
stos
movsb
aaa
gs
mov
cwtl
inc
repnz
int3
adc
cmp
aam
fisubl
aam
and
push
ss
daa
mov
shll
and
sub
outsl
or
in
subb
dec
push
jp
repnz
cmp
into
out
fsubp
xor
push
jmp
jecxz
xchg
cmc
fidivs
jb
mov
loope
inc
and
sarb
and
xchg
roll
jne
mov
ret
mov
or
adc
fsts
aam
cmp
push
adc
testb
sahf
dec
mov
cmp
je
fisttps
les
dec
test
loope
iret
adc
mov
movsb
pop
jns
les
movsl
push
and
pop
ss
mov
pusha
jmp
mov
in
in
imul
hlt
mov
push
push
lock
movsb
into
and
cwtl
inc
mov
out
pop
dec
addr16
shll
rcrl
cmp
loop
outsb
imul
rolb
xor
jne
and
pop
dec
sub
mov
test
sar
ret
inc
mov
dec
das
ja
and
lret
jecxz
shl
fiaddl
sahf
add
arpl
pop
je
mov
push
mov
pop
jecxz
loope
pop
mov
inc
mov
xor
arpl
and
jmp
cli
in
sarl
mov
shlb
xchg
lret
cmp
pusha
cmp
loop
mov
fs
ret
js
mov
cmpsb
push
jecxz
mov
mov
cmp
movsb
xchg
pop
dec
ret
mov
add
push
dec
test
sub
js
into
push
sbb
shlb
sbbb
imul
inc
push
hlt
fwait
jmp
sub
pop
jo
shll
mov
add
lcall
ljmp
adc
push
jnp
jb
xor
sbb
rclb
call
cmpsb
fcmovnu
jbe
xor
leave
mov
lds
inc
mov
lret
lods
loopne
fisubrl
push
jl
xchg
cmp
pusha
mov
cmpsb
inc
call
push
jnp
clc
jne
dec
xchg
pop
cmp
ret
jl
jmp
xor
inc
xchg
mov
mov
pop
pop
test
cmc
cli
jne
je
xchg
loopne
cmp
xor
aaa
inc
rorl
fldcw
jae
dec
jg
fs
cmp
mov
xor
jno
mov
sbb
mov
insb
ljmp
xchg
xor
test
lret
sbb
mov
push
and
testb
in
xchg
shrl
je
test
loope
lea
inc
sbb
insl
xchg
rcl
lcall
rcrb
and
imul
mov
xchg
shlb
mov
sub
imul
test
jp
ds
test
aam
insb
fcomi
jge
sub
stc
sub
testb
cmp
out
lea
push
rol
lahf
jecxz
in
cli
call
mov
cld
inc
loop
lret
inc
sti
mov
inc
pop
push
scas
cmpsl
push
repnz
fdivrs
push
loope
rcl
je
mov
and
addb
xchg
dec
and
pop
sbb
lock
mov
inc
adc
insl
out
aas
stos
xor
inc
mov
insl
push
data16
mov
pop
aaa
loopne
cmp
fnsave
test
mov
dec
and
ja
idivb
test
pop
mov
xchg
cmp
lods
lods
lcall
insl
leave
mov
sub
cmp
cmc
xor
mov
add
and
push
sub
ljmp
mov
push
cs
int
mov
jl
ljmp
add
cltd
mov
clc
lds
push
addb
subb
mov
je
clc
icebp
jmp
sub
mov
in
pop
mov
sbb
filds
movsl
arpl
frstor
jbe
push
lcall
ss
ret
ficoml
inc
iret
dec
xchg
push
mov
dec
jg
xchg
mov
test
cwtl
fsubr
stos
mov
jmp
dec
in
dec
xchg
dec
mov
adc
pusha
in
jmp
movsb
divb
xorb
mov
inc
iret
and
jl
mov
je
and
pop
sbb
dec
aad
xor
mov
xlat
in
dec
xchg
xchg
jge
dec
repnz
and
je
xor
mov
ret
adcl
and
mov
jne
or
mov
mov
in
loop
cmpsl
jb
decl
aas
in
adc
xchg
outsb
pop
jo
xchg
and
push
push
pop
and
inc
pusha
xor
push
xchg
mov
and
xchg
add
lret
pop
push
push
push
pop
addr16
pop
ljmp
mov
inc
insl
rorl
xor
or
out
rcrb
sub
icebp
xor
insl
mov
inc
push
hlt
mov
cmc
test
test
mov
stc
bound
call
inc
push
outsb
jne
aas
mov
shrb
in
and
xchg
xchg
outsb
add
mov
push
repz
out
mov
xchg
call
xchg
inc
loopne
adc
push
xchg
jns
sub
loopne
xor
sbbl
sub
sbb
fmul
arpl
outsb
cmpsb
leave
jmp
sbb
xchg
mov
mov
in
jecxz
cwtl
pusha
in
insl
inc
adc
mov
lods
inc
in
push
call
lods
xor
sub
stos
fstl
pop
aas
fldl
mov
movsb
mov
rolb
lods
push
call
imul
ja
shlb
loope
sub
sbb
cltd
sbb
mov
mov
call
loope
push
jp
adc
xchg
jecxz
fsubr
sub
fiaddl
lcall
inc
or
pop
and
loopne
ljmp
movsb
cwtl
xor
xchg
or
es
xchg
push
sub
dec
jb
lds
shr
repz
inc
call
lcall
outsl
adc
mov
in
dec
cs
mov
movsb
loopne
mov
sti
adcl
pusha
negb
adc
adc
cwtl
leave
ja
imul
mov
pushf
push
xor
xchg
fistpll
loopne
inc
arpl
sub
mov
inc
mov
push
and
ja
and
dec
and
jae
add
jae
fadds
push
and
dec
adc
leave
mov
mov
int
fidivs
and
or
mov
jnp
rolb
int
sub
mov
adc
cmpsb
rorb
mov
pop
xchg
mov
out
mov
pusha
je
stc
push
dec
imul
jbe
out
mov
movsl
les
test
xor
loop
cmp
test
div
mov
sub
mov
cld
inc
test
sub
push
andb
loope
shll
cmc
daa
mulb
jbe
inc
sbb
ljmp
push
dec
lds
loope
hlt
das
mov
jns
stc
and
cmp
addl
jg
outsb
adc
xlat
test
pop
or
and
mov
jmp
pop
inc
and
pop
add
ljmp
mov
sub
jmp
decb
test
pusha
xchg
xchg
xchg
ja
test
cltd
push
xor
push
sbb
xchg
stos
int3
xchg
mov
xor
jl
in
outsb
les
andl
mov
jl
mov
outsb
inc
test
xor
push
adc
fiaddl
es
cmpsb
daa
adc
sbb
fsubr
xor
mov
push
adc
mov
dec
cli
ss
inc
adc
or
and
pop
movsl
outsl
pop
adc
lods
adc
in
or
pop
xchg
jns
push
push
stos
ret
xchg
es
stos
fldt
push
adc
xor
xchg
dec
shl
and
sbb
pusha
dec
pop
xchg
push
cmp
jge
sbb
mov
testl
je
dec
ret
sub
cmc
or
adc
es
std
push
pop
or
jo
dec
enter
jecxz
jbe
sahf
sbb
jae
testb
imul
lcall
mov
mov
ficoml
pop
mov
dec
jecxz
ljmp
dec
inc
jne
addr16
loop
and
cmpsb
fisttpl
push
cs
das
push
out
movsl
xchg
dec
mov
idivl
pusha
sbb
loope
iret
out
cmpsb
mov
mov
mov
jl
xchg
and
loop
pusha
ret
loop
loop
daa
ficoml
adc
pop
mov
into
fcos
add
adc
pop
je
ljmp
sbb
xchg
outsb
aas
fiaddl
lock
fldenv
sbb
xor
lret
in
push
sbb
xor
sub
xchg
pop
add
aam
adc
xor
mov
mov
mov
loope
push
mov
clc
mov
cmpl
jb
push
inc
loop
jne
outsb
in
jnp
xor
hlt
pop
outsb
pop
jecxz
mov
push
push
repnz
fsub
xchg
imul
movsb
dec
pop
pop
sub
pop
mov
push
pop
inc
insb
xchg
out
inc
push
adc
sub
out
in
orl
imul
outsb
xchg
adc
test
pop
in
enter
adc
inc
outsb
push
inc
fidivs
out
jle
push
aad
pop
stos
cmc
lock
sbb
movsb
xchg
popf
sti
push
pushf
mov
xchg
cmp
mov
imul
dec
push
movl
jmp
loope
insb
xor
jb
jns
mov
mov
lcall
outsb
add
jmp
push
xchg
outsb
movsl
lods
repnz
and
push
into
mov
int3
sbb
test
push
femms
insb
push
into
and
add
jnp
out
stos
stos
gs
scas
lret
and
loop
mov
out
jmp
test
xchg
testb
xchg
mov
adc
lods
test
push
in
inc
mov
das
and
inc
inc
aam
notl
adc
dec
pop
adc
cmp
and
xchg
inc
sub
loop
int3
das
push
test
stos
mov
jnp
aaa
mov
lds
and
sbb
mov
divl
movsb
cwtl
inc
add
imul
xchg
add
aam
jns
pop
js
dec
pop
jno
call
sub
mulb
sub
add
loope
call
fists
sub
sahf
inc
shlb
mov
arpl
sbb
adc
pop
ret
xchg
divb
xchg
mov
lock
out
add
hlt
xchg
flds
lea
fldl2t
inc
pop
mov
dec
out
repnz
and
mov
mulb
adc
shr
sub
roll
test
hlt
cmpl
das
push
xor
sub
mov
fwait
cmpsl
adc
fs
and
aas
cmpsl
aaa
fisubrl
outsb
shlb
fstp
fidivs
inc
out
mov
sbb
pop
insb
gs
xchg
stc
aaa
mov
je
xchg
jecxz
sub
imulb
xlat
lea
mov
add
mov
xchg
lods
ret
dec
jne
add
push
inc
pusha
cmc
shlb
pop
xchg
mov
test
imul
push
jle
int3
pusha
and
push
xchg
aam
mov
pop
inc
nop
ret
jno
ret
jbe
push
stos
add
pusha
jl
sbb
push
pop
mov
jbe
pop
sub
jns
push
jle
int3
inc
lods
adc
daa
int3
std
pop
dec
fiadds
cs
and
jl
xchg
lds
insb
loop
push
mov
push
roll
mov
and
into
ud1
out
leave
pop
push
andw
in
push
je
outsb
xor
push
inc
push
or
repz
xor
imul
pusha
jbe
dec
xor
or
push
arpl
xor
push
das
inc
mov
jmp
stos
pusha
xor
rolb
dec
stos
dec
push
mov
cmp
adc
enter
sbb
xorb
mov
push
cltd
stos
dec
jns
or
push
mov
scas
xchg
sar
add
and
mov
notb
daa
adc
stos
in
bound
je
mov
xor
inc
push
lret
mov
push
mov
std
lret
xor
sub
add
es
sbb
inc
dec
inc
inc
in
in
mov
mov
loope
je
jbe
movsb
ds
enter
je
pop
in
jge
test
xor
movsb
push
call
fs
sti
ds
sahf
adc
mov
cmc
xchg
inc
mov
mov
jb
push
inc
js,pt
in
add
mov
push
imul
lods
jno
cmpsl
adc
add
sbb
mov
cmp
fidivl
scas
icebp
jmp
inc
push
scas
xor
and
or
mov
push
testl
or
inc
fwait
jmp
inc
xor
jecxz
push
out
xor
movsb
loopne
jle
cmp
jbe
inc
push
and
inc
cltd
mov
lcall
icebp
ljmp
pusha
push
ss
pop
dec
cwtl
mov
jbe
mov
mov
icebp
adc
call
xchg
stos
inc
sub
clc
adc
push
jne
mov
pop
and
sub
mov
and
fs
inc
mulb
cli
test
loope
jno
sbb
decb
out
or
shll
aaa
pusha
dec
addr16
sbb
lcall
loopne
jecxz
mov
movsl
scas
pop
leave
and
sub
or
test
push
pop
sub
not
sbb
sub
jns
loopne
movsb
movsb
iret
dec
lock
sahf
sarb
cmp
pop
adc
mov
jg
ficompl
pop
dec
mov
movsb
nop
test
push
lock
and
and
push
xchg
cmp
inc
cmpsb
jne
xchg
es
clc
ret
les
lret
insb
iret
add
movsl
sahf
movsb
out
inc
mov
mov
out
iret
push
enter
andl
clc
shlb
mov
outsl
push
adc
cli
pop
mov
xchg
into
pop
mov
je
bound
enter
push
repnz
insb
loope
mov
push
mov
rcrb
repz
sbbb
enter
scas
imul
xor
gs
pusha
and
sub
xor
jmp
fisubrs
cmp
jmp
subb
sub
insb
fisubl
rcrb
or
pop
dec
adc
insl
iret
imull
mov
dec
pop
shlb
dec
jbe
lret
xor
popa
mov
or
outsl
jnp
mov
push
mov
jno
mov
mov
pop
repz
stos
mov
ljmp
enter
outsl
pop
sub
scas
add
lods
movsb
inc
int
and
pop
pusha
sbb
jno
xchg
jnp
out
xlat
test
jg
add
pushf
push
popf
and
inc
sarb
fimuls
cltd
or
jl
cmp
bound
lds
xor
inc
fisubrl
sbb
inc
movsb
hlt
xchg
or
setle
adc
xor
or
xchg
ss
pop
xor
test
movsb
outsb
pop
inc
xor
sbb
repz
pop
inc
mov
mov
stos
movsb
rcll
dec
or
loope
mov
lahf
adc
lret
test
enter
cmc
xor
cmp
mov
insl
inc
pop
rorb
add
or
jne
sbb
stc
insb
leave
stos
jl
shlb
dec
mov
fidivrl
mulb
fsubl
mov
sub
xor
and
sbbl
data16
lods
movsl
jl
bound
inc
popf
mov
mov
test
xor
roll
shll
mov
jp
mov
adcl
roll
jo
xor
ret
cmp
cwtl
push
jle
enter
in
inc
jp
nop
ror
je
loope
xchg
xchg
mov
pop
fisubrl
daa
rclb
mov
adc
mov
pop
inc
movntq
pop
mov
xchg
frstor
je
xor
and
pop
mov
popa
cmp
loop
pushf
test
and
xchg
shl
aaa
jp
repz
je
push
add
sbb
aas
mov
arpl
or
shll
sbb
jnp
cwtl
sarb
jo
xor
adc
push
dec
sub
and
scas
stos
iret
decl
jne
cmpsb
push
push
mov
xchg
mov
push
shl
or
mov
pop
dec
cltd
lods
dec
cltd
sub
imul
loop
movsl
xor
jecxz
or
insb
add
cli
mov
notb
sub
xchg
jno
iret
cmpsl
push
mov
fs
test
pop
daa
and
test
sub
imul
mov
mov
pop
push
xor
divl
pop
fisttpll
jb
bnd
ret
loope
shrb
repnz
pop
daa
int3
xor
stos
xchg
mov
inc
and
scas
and
or
mov
push
inc
movsl
dec
outsl
xor
cmc
test
inc
out
pop
out
mov
iret
xchg
mov
jb
and
and
cltd
pop
mov
sbb
jb
and
cmp
and
aaa
test
push
xchg
mov
jmp
lods
sub
mov
xor
mov
pop
inc
aaa
cmp
sbb
out
or
jecxz
pop
and
icebp
test
mov
outsl
mov
ret
jbe
insl
aam
pop
rcll
ss
imul
jge
je
rorb
loop
cmpsb
mov
pop
and
pop
fwait
dec
fwait
ds
jmp
jecxz
imulb
clc
mov
push
rcrb
jb
sub
cld
cmp
enter
dec
mov
es
lds
cmp
popf
dec
nop
jns
jg
pop
jmp
mov
roll
outsb
cmp
je
xor
pushf
mov
aas
aam
out
bound
and
repz
push
ret
sbbb
lea
xchg
mul
outsb
jecxz
sti
sub
fiadds
inc
ds
out
lret
sar
fsubl
fcmovnu
xor
add
aam
test
aam
mov
fidivl
xor
stos
fiaddl
daa
arpl
sbb
xchg
stos
mov
stos
ret
dec
mov
loope
in
xor
mov
popa
mov
mov
or
jmp
cmp
lahf
add
sbb
xor
ljmp
arpl
sub
adc
mov
mov
aad
push
jae
ret
test
ljmp
jb
cmp
inc
or
fcoms
enter
movsb
xor
cmpsl
inc
out
or
daa
mov
jmp
mov
dec
xchg
sbb
sub
mov
lret
lahf
jmp
insb
sbb
sbb
mov
out
fistps
jge
adc
xor
adc
mov
add
or
adc
es
mov
mov
add
xchg
or
ffreep
mov
roll
jb
pop
sbb
shlb
jae
loop
int
stc
mov
inc
jo
outsl
xchg
push
frstor
lahf
out
sub
scas
sbb
mov
push
xchg
cmc
mov
lahf
pop
pop
xor
fwait
push
addr16
dec
xchg
pop
cmc
pushf
add
lods
mov
inc
xchg
mov
or
mov
and
jae
movsl
mov
insb
xor
ror
inc
jbe
ds
add
or
adc
or
icebp
test
sub
push
into
jg
mov
out
jne
imul
dec
into
out
fistpll
add
push
push
arpl
add
cli
sub
cmp
sbb
daa
rcll
les
sbbb
cmp
mov
scas
cmc
movsl
push
push
inc
pop
jg
ss
add
xchg
sub
subl
fnstcw
mov
inc
xor
cmp
sub
push
pop
test
mov
ja
mov
mov
ror
or
insb
mov
jmp
aaa
outsl
popa
mov
les
jg
cld
ds
fldcw
mov
fmull
ss
cmc
dec
sub
and
lcall
fwait
push
mov
adc
scas
int
fldenv
fbstp
rcrb
cli
jo
lret
push
out
loop
xor
fcomip
ret
popa
sahf
sbb
push
sbb
inc
lret
jecxz
and
jecxz
popf
fs
pop
fwait
xor
sub
adc
daa
mov
jne
mov
and
cmpsl
pusha
pop
push
push
pop
rcrb
inc
je
pop
pop
push
push
in
pusha
sbb
ss
sbb
inc
xor
xchg
jae
lcall
andb
test
leave
and
sub
loope
jecxz
int
pop
jle
nop
mov
fwait
mov
das
jno
mov
stos
cmp
mov
add
stos
cmp
and
cmp
cmpl
pop
dec
push
in
rcrl
iret
enter
mov
dec
notb
push
xchg
add
push
fdivrl
lahf
adc
rcrl
mull
insb
movsl
sarb
jb
outsb
fs
mov
leave
movswl
stos
stos
push
cs
jge
add
pushf
aaa
shrl
pop
je
fwait
push
outsb
push
adc
jle
mov
mov
fs
insb
cmp
imul
lret
mov
movsl
fisttps
outsb
movsb
dec
pop
push
int
pusha
testb
push
fildl
pop
push
inc
bound
pop
idivb
xchg
jg
push
cmp
in
ljmp
mov
push
testb
and
push
imul
adc
sub
call
mov
mov
xor
fldenv
and
cmp
adc
sub
iret
jne
xchg
sbb
xchg
push
out
pop
rcrb
inc
lods
sub
add
sub
sbb
gs
push
or
and
add
pusha
addr16
jae
iret
lret
arpl
cmp
mov
sub
jae
icebp
movsb
pop
cmpsl
xchg
dec
iret
jnp
push
fimull
sub
pop
pop
mov
negb
cmp
push
cwtl
jo
test
and
ret
xor
push
mov
jbe
fwait
rclb
inc
sub
sbb
push
je
pop
inc
lods
xor
fdivrp
and
inc
adc
pop
aad
push
push
fldcw
jnp
push
fmul
mov
ret
mov
inc
hlt
int3
cmpsl
sbb
testb
call
movsl
stos
or
pushf
inc
sub
xor
mov
jle
outsb
pop
jae
jo
shrb
adcb
inc
adc
into
mov
hlt
sub
sbb
cltd
sub
insb
xchg
and
mov
repz
mul
add
loope
imul
mov
adcb
int
pop
mov
and
and
xchg
pop
pop
xor
int3
and
cmp
mov
sbb
mov
icebp
inc
adc
int
mulb
cwtl
push
sbb
jle
inc
bound
je
mov
mov
ljmp
mov
push
dec
and
rcrb
insb
dec
loope
insb
and
jb
pop
or
mov
fs
cli
mov
mov
inc
mov
add
xor
stos
sahf
ss
outsl
mov
das
and
cmc
loopne
nop
fld1
insb
imul
fbld
cli
frstor
pop
dec
out
sub
pop
mov
adc
and
or
out
jno
hlt
or
adc
adcb
add
pop
sbb
jbe
sub
pusha
fs
inc
aaa
pusha
test
and
addl
lahf
cmpsb
adc
mov
sub
inc
fdivs
sub
fs
sti
dec
dec
mov
std
mov
popa
bound
mov
dec
outsb
test
leave
mov
add
mov
lcall
inc
aaa
push
inc
mov
mulb
mov
mov
fmull
mov
addr16
jecxz
and
sub
outsb
test
sub
jl
aad
adc
add
pop
and
push
and
push
dec
in
loope
cmp
pop
lock
xor
test
aad
add
stos
aaa
pushf
fidivrs
pop
push
fidivrl
enter
jg
subb
sub
sbb
jmp
pop
jge
sub
pop
in
cmc
jo
dec
out
movsl
sarb
sahf
fisubrl
mov
dec
lahf
or
add
xchg
sub
mov
jecxz
es
loopne
sub
out
lods
sub
out
loop
xor
dec
jbe
jl
out
mov
pop
mov
cmpsb
les
loopne
ja
or
neg
xor
push
das
ja
and
lods
repnz
mov
repnz
inc
pop
jg
inc
es
inc
mov
fs
jns
subl
mov
lret
pop
adc
jl
mov
loop
jb
push
push
sub
push
insb
loop
dec
out
mov
dec
inc
inc
xor
pop
popa
cmc
cmpl
pop
sub
mov
imull
dec
test
xchg
jp
lods
les
pop
inc
ljmp
sti
push
adc
fidivl
fwait
cwtl
repnz
ljmp
jns
movb
faddl
and
sub
insl
ljmp
fidivl
adc
test
mov
sub
push
rorb
dec
jg
fsub
rcr
push
je
es
inc
mov
sub
jne
mov
cwtl
mov
imul
or
xchg
mov
arpl
push
int3
insb
ss
inc
sub
fimull
lahf
in
and
je
sub
adc
xchg
fistps
rolb
mov
jae
pop
mulb
ljmp
and
sub
xchg
inc
mulb
arpl
inc
loope
add
pop
adc
ficoms
sub
pop
mov
mov
xchg
xorl
xor
mov
icebp
arpl
test
mov
imul
mov
xchg
or
lahf
int3
sbb
clc
adc
pop
xchg
xor
fiaddl
mov
cmp
jno
nop
xor
mov
jb
pop
jae
xchg
jecxz
add
cmc
dec
bound
jbe
popf
shll
xchg
dec
in
xchg
inc
movsl
testl
push
and
inc
scas
arpl
fstps
bound
je
mov
je
daa
cmp
pop
push
cmp
mov
repnz
popa
mov
adc
push
outsl
movsl
sbb
xchg
iret
inc
daa
fidivs
pop
and
ljmp
mov
xchg
orl
scas
rcll
cld
arpl
sar
fidivs
mov
mov
adc
das
mov
sub
sarl
stc
movsl
pop
and
xor
int3
push
and
push
roll
cmc
push
push
rcl
fdiv
ret
pusha
cmp
ret
and
add
jnp
loop
push
rclb
or
test
shll
test
insl
jbe
cs
in
scas
imul
testl
sub
jg
dec
fisubs
jecxz
rcll
or
add
mov
sahf
mov
int
outsl
mov
insb
pop
push
arpl
test
movsl
dec
out
cmp
jecxz
clc
mov
mov
cmp
or
fbstp
mov
mov
insl
fiadds
dec
loope
dec
test
mov
popa
sub
adc
je
imul
xor
adc
mov
pop
aam
fwait
lret
fs
ficoml
rolb
aad
pushf
push
popa
in
mov
dec
movb
inc
inc
loope
inc
sbb
pushf
pop
inc
loope
xchg
xchg
out
jns
push
sti
or
push
push
xchg
xchg
pop
and
outsb
cmc
loopne
xchg
xor
fisubl
fisttpl
cmp
and
shlb
mov
shll
call
mov
cmpsl
outsl
cmc
xchg
and
jmp
add
pop
sub
es
je
push
mov
insb
xchg
lea
jp
je
dec
gs
add
rolb
sbb
mov
mov
comiss
xor
scas
loope
mov
jl
push
add
ss
push
inc
aaa
repnz
inc
pop
pop
ss
add
cmp
add
fs
or
js
fisubs
into
aad
xor
enter
sub
jecxz
sbb
enter
jbe
fstps
dec
fs
pop
pop
fsubrl
and
dec
in
test
out
loope
sti
push
dec
mov
addr16
ss
sahf
jne
sub
std
pop
xchg
movsl
popa
pushf
mov
bound
neg
jbe
outsb
mov
xchg
and
addr16
bound
imulb
adc
insl
sarl
iret
ret
fcomps
aam
test
jbe
adc
push
jp
les
jns
aam
aam
mov
xor
dec
pop
mulb
cmc
cmpsl
aas
mov
test
inc
xchg
loope
mov
data16
les
and
or
das
pop
test
dec
xor
push
add
cmc
js
jns
jne
aaa
mov
adc
adc
insl
notl
andb
or
insb
ret
xchg
pushf
ja
test
outsb
lods
push
cmp
arpl
ret
pop
fucom
xchg
dec
inc
shlb
cmpsb
xor
call
lret
xlat
xlat
loop
sbbb
lods
iret
inc
adc
aam
mov
lcall
js
sub
jg
cmp
adc
cmp
and
push
loop
jns
dec
push
mov
jns
in
lret
loop
dec
mov
pop
popf
stos
data16
pop
or
mov
ja
cld
jmp
jmp
jne
xchg
and
push
xorb
push
sub
jp
mov
sbb
int
jl
jne
nop
out
js
pop
jbe
cltd
jge
hlt
mov
shrl
mov
add
inc
sub
add
dec
fisubrs
push
cmp
xor
mov
mov
and
sub
or
xor
mov
pop
loopew
fcomi
mov
sbb
and
aaa
sbb
daa
in
xorl
loope
jecxz
pusha
sti
sub
loop
mov
pop
out
and
cld
jle
sbb
mov
sub
in
nop
cmpl
arpl
adcl
loope
pop
shlb
and
pop
imul
push
jecxz
add
and
fbld
call
loopne
and
push
inc
xor
sub
sub
daa
std
xor
mov
and
cld
aas
cmp
icebp
xor
dec
jo
mov
popa
mov
mov
push
shl
sbb
adc
aaa
movsl
loopne
inc
inc
push
lret
jl
push
neg
lret
aaa
ljmp
jecxz
loop
inc
cmp
sbb
and
xchg
and
ret
inc
add
or
xchg
mov
ja
cltd
mov
jnp
xor
popa
hlt
mov
fnstcw
loopne
fwait
sbb
pop
xor
aad
mov
leave
push
lds
xchg
insb
add
adc
repz
enter
iret
push
cmp
adc
add
ret
insb
cmp
jo
test
std
insb
shll
loop
call
psrld
xlat
mov
inc
push
xor
xchg
addr16
aaa
imul
shlb
mov
push
jns
push
mov
loope
pusha
ss
inc
daa
mov
loopne
jns
or
or
add
mov
lods
mov
and
daa
stos
sbb
push
add
popf
add
push
inc
inc
fbld
mov
mov
xor
mov
mov
rcll
arpl
test
shll
cmpsl
and
pcmpeqb
dec
daa
inc
movsb
lahf
mov
mov
js
pop
popa
push
into
insb
fcomps
fsubr
xchg
mov
mov
xchg
imul
cwtl
and
push
pusha
xor
loopne
ficompl
je
in
adc
and
jb
pop
sahf
lds
xor
push
jmp
and
pop
lock
mov
jecxz
mov
xor
stos
shl
in
mov
cwtl
inc
addl
lock
inc
testl
lcall
jb
dec
jl
push
jmp
xchg
adc
jmp
jmp
out
mov
jg
imul
pop
cmpsb
push
lret
add
adc
push
jecxz
aaa
xchg
sbb
iret
and
xchg
pop
outsb
lret
add
jl
dec
sbb
cld
ljmp
jnp
iret
arpl
pop
int3
mov
movsb
loope
xor
adc
rolb
inc
sub
sbb
movsl
dec
mov
mov
xchg
push
push
andl
pusha
push
int3
dec
or
mov
lds
loop
mov
ljmp
dec
cld
push
and
test
sub
dec
inc
lss
xor
sub
sahf
push
or
notb
pusha
adc
inc
les
cmp
stos
stc
add
std
push
cmp
add
arpl
adc
call
test
lods
and
arpl
adc
fcomps
into
pop
loop
jecxz
movsl
sub
adc
xchg
call
inc
in
test
inc
adc
mov
ficoml
popf
cld
movsl
mov
inc
mov
insb
or
repz
sti
fisubrs
lahf
ljmp
jns
jns
pop
sbb
jle
into
addr16
mov
jmp
xchg
fiadds
xchg
mov
push
adcb
push
dec
movsb
insb
sub
pop
out
xor
gs
pop
jne
popa
mov
mov
aaa
iret
jl
aaa
jno
adc
xchg
adc
xchg
push
mov
jp
push
mov
es
adc
addr16
fcompl
sub
pop
dec
aaa
and
sbb
inc
sub
pushl
addb
dec
je
jge
mov
mov
enter
xor
cwtl
cmp
and
andl
mov
inc
and
jl
clc
jp
movsl
fcmovbe
push
insl
xor
dec
jne
inc
cs
mov
ret
lea
mov
aam
cmc
lock
int3
adc
inc
adc
dec
mov
inc
adc
sbb
inc
dec
sbb
push
pcmpgtd
imul
xor
andb
loop
bts
mov
sbb
bswap
push
hlt
clc
mov
aaa
fwait
and
push
iret
mov
lock
xchg
dec
sub
mov
fs
jb
cli
sbb
sbb
gs
mov
xchg
push
je
sub
or
add
push
das
add
fldenv
add
jne
mov
add
in
mov
jae
mov
sub
jecxz
loope
inc
faddp
xor
ljmp
addr16
push
push
repz
ficoml
cwtl
sub
je
fmul
add
gs
je
into
pop
je
xor
ss
mov
dec
inc
das
mov
dec
xor
int3
and
jnp
mov
loope
cmp
imul
rcl
loope
pop
push
in
popa
push
pop
arpl
pop
pop
xchg
xchg
sub
jg
int
mov
sub
push
loop
jne
push
lea
pop
ljmp
inc
jnp
cli
sarb
adc
and
lods
movsl
push
arpl
xor
and
testl
jne
icebp
hlt
sub
dec
pop
pushw
xchg
inc
lret
push
aaa
daa
popl
inc
sbb
jne
and
fldenv
gs
mov
int3
into
loopne
inc
ss
pop
arpl
stc
rcrl
xor
dec
cltd
fwait
add
stos
xor
jl
je
lea
and
fucomi
push
dec
fwait
push
jle
dec
xchg
and
mov
mov
not
sbb
xchg
push
jmp
pusha
jbe
jmp
cld
out
pop
and
movsb
aas
push
push
jo
imul
movsb
pop
mov
jl
add
xchg
add
jecxz
and
and
push
pop
or
pop
out
xor
test
es
fildll
shr
aas
jmp
cmp
dec
xor
or
movsb
inc
xchg
and
sbb
sub
xor
inc
jecxz
and
mov
aam
xchg
jge
mov
xor
dec
mov
stos
test
lret
jnp
jmp
pop
sub
in
dec
repnz
pusha
or
dec
inc
mov
or
push
mov
mov
mov
sarb
imul
enter
fldl
xchg
test
pusha
addr16
sub
jne
mov
ja
lods
jne
aad
loope
or
jo
push
pop
shufps
test
add
das
sub
mov
es
fcoms
rcrl
push
int
push
pop
filds
js
add
jnp
jp
mov
ss
in
dec
and
sbbb
cli
in
outsl
xor
hlt
cmpsb
pusha
aas
es
fidivrs
and
dec
in
popf
les
mov
sbb
movsb
push
sub
mov
xorl
pop
mov
xchg
or
out
mov
iret
adc
aad
fcoml
loope
xchg
xor
xchg
int3
xor
rorl
sbb
xor
neg
test
lret
dec
sub
or
jge
sar
jns
jp
mov
add
aas
jae
rclb
pop
inc
dec
stos
push
inc
push
rorb
add
loopne
fs
dec
inc
jmp
divl
xor
mov
popa
mov
mov
xor
jae
cmp
mov
mov
cmp
xchg
mov
insb
call
sbb
loopne
out
mov
out
imul
and
pop
inc
cmp
mov
rolb
pusha
jne
mul
sbb
and
loope
xor
addb
in
xchg
popa
icebp
fmuls
fnstsw
or
mov
jl
sbb
mov
inc
mov
movl
push
mov
push
insl
imul
and
jnp
sub
mov
test
jne
mov
jecxz
xchg
mov
inc
jbe
fnstsw
mov
pushf
sbb
adc
push
mov
pop
jae
pop
insl
call
sub
inc
inc
ficompl
add
movsb
xor
shll
and
out
popa
mov
test
cmpsl
mov
aad
mov
mov
sbb
sbb
bound
xor
xchg
out
cmp
test
xchg
adc
sub
sbb
inc
shl
movsl
mov
pop
ficoms
adcl
loop
aaa
xchg
addr16
bound
mov
das
enter
mov
pushf
ljmp
dec
popa
sahf
pop
jo
movsb
jle
push
sub
push
and
and
lcall
jae
js
dec
jmp
sbb
loop
adcl
xor
jns
cmp
push
cwtl
xchg
mov
lds
pop
inc
je
push
pop
in
jnp
dec
pop
dec
shlb
cli
int
and
jmp
shr
negb
imul
in
push
data16
sbb
in
jns
sub
in
inc
stc
repnz
push
cmp
xchg
inc
in
roll
xchg
inc
frstor
xchg
es
repnz
loopne
aaa
addb
mov
push
mov
dec
lods
inc
fcmovnb
jmp
mov
fimull
mov
rcll
filds
xchg
xor
notl
shr
test
push
or
jnp
scas
out
xchg
xor
add
xchg
push
rcrb
lods
pop
mov
mov
ret
ret
in
xor
or
sbb
and
push
lahf
fcmovbe
mov
mov
scas
ret
add
cld
imul
cs
outsb
adc
shrl
cmpsb
movsl
sbbl
add
pop
or
push
and
cmpsb
loop
fwait
sbb
xor
dec
iret
jmp
je
hlt
outsb
mov
pusha
pop
cwtl
xor
aas
movsb
hlt
inc
gs
mov
jle
mov
or
andl
sub
push
pop
pop
je
inc
out
outsb
movsl
rcrl
mov
sub
add
jae
push
xorb
pop
lea
repnz
and
into
lock
xor
rcll
cld
adc
and
add
push
mov
pusha
movsl
jae
xchg
jge
mov
or
push
and
rorl
stc
pop
cltd
lods
popf
mov
sub
cmp
outsl
test
mov
jno
push
negb
outsb
repnz
in
jne
movsl
outsl
push
dec
jl
fcoml
pusha
mov
loopne
subb
outsb
out
sbb
mov
out
aad
nop
ja
pop
data16
fidivrs
cmp
out
jne
jbe
pop
sub
or
inc
inc
or
dec
push
repnz
testb
xchg
idiv
mov
jne
and
push
daa
aad
outsl
sbb
lret
les
out
sub
rcll
das
sbb
fs
insl
xchg
or
inc
sbb
lret
mov
xor
into
testb
sub
pop
lret
bound
cwtl
shrb
push
dec
fcomps
jne
adc
dec
enter
insb
ret
pop
adc
test
jns
xchg
sub
ja
out
rorb
xorb
xchg
aaa
push
test
out
cmp
rclb
mov
in
xchg
jb
negb
ret
repz
lcall
sub
lcall
push
sbb
jmp
ljmp
loope
insl
lcall
cs
aaa
loop
lret
lret
adc
sti
inc
loop
mov
and
inc
mov
mov
stos
test
pop
sbb
pop
sub
fs
fcomp
inc
xchg
jmp
cmp
bnd
add
loope
outsl
out
jmp
jbe
jp
aas
adc
loop
jo
xchg
fldenv
add
inc
and
dec
xchg
cwtl
arpl
add
out
leave
ljmp
fisubs
fs
testb
add
shl
xchg
fcom
push
jecxz
fidivl
push
shl
aaa
cli
jb
popf
and
xor
mov
push
add
xor
mov
mov
fiadds
inc
ds
cltd
ss
sub
xor
push
outsb
in
push
in
pop
mov
sti
mov
mov
loope
mov
fmuls
mov
dec
jl
mov
test
lock
cmp
and
outsb
and
xor
les
xchg
push
loop
cmc
and
ret
dec
iret
mov
add
repnz
scas
dec
mov
pop
cmp
xchg
xor
lods
hlt
adc
sub
popa
inc
lcall
mov
outsl
jne
fstl
push
jae
imul
mov
inc
jg
cmp
movsl
das
fimull
sub
faddl
jne
mov
rolb
push
xchg
xchg
pop
pop
cmpsl
push
mov
inc
negb
negb
dec
mov
or
and
cld
shll
divl
jne
cmp
push
movsl
insb
dec
xchg
arpl
daa
add
addr16
fcomp
and
popa
pusha
cmp
inc
outsl
ljmp
dec
cmp
test
mov
fdivp
dec
jbe
outsb
add
sarl
pop
aas
pusha
pop
inc
xchg
gs
pop
das
sub
lods
mov
or
notl
add
push
xchg
or
mov
scas
cmc
cmp
sub
inc
xchg
xchg
pushl
pop
inc
outsl
addl
jne
cli
in
test
in
ret
lahf
aam
imul
lea
pop
inc
push
sbb
adc
mov
fwait
and
lods
test
insl
js
scas
add
fcoml
jecxz
cmpsl
sub
arpl
ja
or
les
inc
mov
hlt
enter
addr16
cmp
mov
mov
sbb
test
add
cmc
bound
sbb
fmulp
and
sub
in
inc
and
pusha
push
aaa
xor
les
cld
push
xor
inc
sti
xor
and
gs
xor
push
pop
aaa
icebp
insl
jmp
jns
mov
flds
adc
shlb
sub
enter
sub
inc
push
push
imul
jecxz
or
fcompl
stos
xor
push
popl
outsb
add
test
es
adcb
stc
testb
mov
fdivrl
loop
sbb
sub
mov
outsb
cltd
stos
sbbb
dec
sbb
dec
jnp
popa
jae
mov
andb
mov
jmp
xchg
aas
fwait
mov
push
mov
mov
push
xchg
adc
xor
outsb
pop
gs
inc
arpl
mov
mov
cmp
and
xchg
es
push
int
and
notb
push
jecxz
jl
mov
push
rorb
push
push
adc
loop
xor
addr16
push
ss
loop
ljmp
and
jne
mov
push
xchg
jmp
daa
xor
jbe
test
neg
arpl
ljmp
mov
fwait
sub
inc
stos
aam
xor
cmp
sub
in
push
movsl
sub
shll
dec
mov
mull
cmp
outsb
inc
mov
sub
sub
insb
pushf
inc
and
push
repnz
mov
movsb
iret
inc
mov
hlt
pop
daa
xorb
push
daa
and
jecxz
movsb
mov
inc
push
ficoms
pop
iret
xchg
das
jecxz
mov
cli
test
sbb
nop
aam
inc
repnz
cmpsb
ds
push
loop
jg
adc
push
rolb
out
fsubrl
jg
mov
xor
cmpsl
add
lods
mov
cmp
inc
xchg
and
cmp
mov
hlt
aas
mov
fsubrl
xlat
pop
jecxz
xor
sarl
sbb
out
lods
push
fwait
pusha
ret
mov
andl
popf
lds
sub
daa
dec
dec
inc
je
in
cmpsl
loop
data16
xor
bound
dec
add
mov
jecxz
pop
mov
jecxz
jp
cmc
mov
es
mov
mov
cmp
adc
mov
lret
jbe
rol
jb
pop
loope
jg
call
into
adc
daa
cwtl
adc
aaa
xor
pusha
pop
repz
rcrl
sub
sbb
mov
dec
or
and
sbb
push
in
rcrb
push
int
mov
out
outsb
xchg
shlb
or
adc
mov
cmp
pop
xchg
jbe
mov
out
jecxz
es
mov
dec
loop
or
mov
cmp
lods
lret
fidivl
jge
movsb
jmp
ror
inc
mov
add
ljmp
aas
cmp
mov
jmp
enter
popl
mov
out
nop
cmp
jns
loopne
jno,pt
insl
fidivl
cmpsl
cmp
test
test
jle
das
lahf
insl
nop
push
fcmove
mov
call
xchg
fninit
in
inc
mov
sub
or
movsl
and
inc
cmp
mov
or
xlat
hlt
mov
adc
shlb
mov
cli
xorl
in
push
jb
gs
jmp
cmp
jl
and
jo
notb
push
jae
inc
mov
mov
in
pushf
mov
push
nop
fisubl
inc
outsb
cmc
inc
jne
xor
pop
das
mov
ret
push
outsl
insl
add
cltd
adc
xchg
and
subl
jns
cmc
stc
xchg
movsl
in
push
push
adc
adc
cmpsl
movsl
out
inc
in
divb
push
jnp
mul
sub
jne
adc
in
lods
sub
sbb
int3
dec
in
loope
or
push
std
fisubrl
gs
push
pop
fwait
jecxz
nop
movsl
sahf
fmuls
fbld
mov
arpl
mov
pop
mov
and
sbb
push
mov
push
pop
aaa
pushf
notl
repz
shr
outsb
into
xor
outsb
lret
dec
es
adc
loopne
xchg
lret
push
mov
push
xchg
pop
jge
xor
aas
add
loope
jae
push
adc
je
nop
mov
and
push
or
or
or
jg
mov
in
fnsave
dec
or
mov
mov
push
loop
mov
xor
add
sub
mov
scas
insb
mov
enter
xlat
rcr
cmpsl
pusha
daa
and
jp
out
shlb
testl
and
in
popf
cmp
cmp
xchg
xchg
lods
sti
and
cmpsl
adc
bts
pushf
fbld
jb
insb
add
fsts
adc
lcall
jg
dec
outsb
sub
aad
sbb
mov
shrl
mov
inc
and
pop
xor
push
adc
addr16
in
test
cmpb
adc
dec
pushf
mov
les
test
aad
in
cmp
adc
jbe
add
push
je
pop
mov
cmpb
inc
add
in
mov
popf
push
arpl
stc
mov
add
mov
leave
sti
es
inc
dec
xor
xchg
ja
mov
test
jnp
mov
movsl
and
dec
inc
sub
pop
ljmp
inc
cmc
cmc
enter
dec
lock
idivb
cltd
and
mov
jb
stc
xchg
pop
dec
jbe
dec
cmp
adc
movsl
imul
mov
dec
pop
fcmovbe
mov
mov
inc
insl
loope
pushl
adcb
pop
lods
cmpsb
pop
insb
hlt
mov
daa
push
popa
ja
fildll
inc
ss
and
rep
mov
ljmp
jecxz
mov
fbstp
inc
xor
and
rep
mov
ljmp
insl
addb
and
ljmp
mov
jmp
stos
adcl
add
cld
insl
ja
cmc
clc
leave
and
jecxz
loop
sub
dec
je
out
stos
inc
loop
push
jmp
cmp
cmp
hlt
lea
lret
jmp
lcall
mov
sub
jns
imulb
loope
adc
push
mov
stos
div
add
sub
jmp
imull
push
movsb
push
jecxz
inc
in
xchg
mov
push
cmp
and
add
stc
mov
or
in
jmp
loopne
cmc
sub
int3
pop
sub
dec
icebp
rep
loopne
out
push
push
inc
push
push
mov
repz
incb
test
popa
jp
shlb
repz
cmp
mov
repz
notl
pop
mov
repz
aaa
push
cmp
mov
xor
inc
movsb
in
sub
fsub
add
xchg
int
jmp
mov
sbb
stos
inc
imul
push
pop
aaa
aam
outsb
test
xchg
lods
fucomi
xlat
push
inc
repnz
loopne
outsb
cmpsl
mov
xor
and
or
jnp
add
jbe
nop
rclb
repnz
jg
sub
dec
add
jmp
push
stos
add
pop
push
fbstp
adc
cmpsl
sbbb
xchg
divb
cmpsb
inc
pusha
imul
fs
push
lret
pop
repnz
test
xchg
les
add
cmp
movsb
push
push
cwtl
nop
pop
sbb
inc
out
out
movsb
add
jle
notb
xchg
pusha
in
push
dec
push
test
jbe
push
call
adc
movsl
xchg
lock
ss
mov
scas
cmp
hlt
sub
ljmp
push
mov
test
sub
test
lock
dec
sahf
test
orb
pop
sbb
call
and
cmp
push
arpl
call
sbb
xor
mov
cmpsb
leave
js
test
jmp
sub
es
dec
and
pusha
fwait
dec
cmp
ss
pop
ret
push
movsl
jecxz
sub
mov
shll
lahf
outsb
repz
adcb
xor
pusha
aam
sbb
shrl
adc
push
fiaddl
lods
iret
out
pusha
inc
lcall
mov
insl
and
push
or
stc
jmp
fidivl
daa
lock
fwait
lahf
jno
inc
add
in
mov
mov
cmp
in
rcll
fisttpll
bound
xor
sbb
mov
mov
imul
push
inc
rolb
sub
xchg
loop
add
cltd
test
jbe
jl
loop
inc
pusha
inc
pop
pop
or
mov
and
rcl
mov
iret
sar
rcrl
ficoml
push
into
out
neg
xor
sahf
inc
xchg
movsb
ds
in
pop
dec
mov
loop
sbb
out
movsb
into
mov
and
mov
ljmp
xchg
inc
cmp
ret
and
nop
xchg
sahf
sub
test
push
ficoml
sarb
jno
shll
push
and
pushf
loopne
mulb
hlt
insb
out
mov
mov
and
adc
scas
pop
sbb
xchg
rcrl
mov
inc
divb
stos
into
enter
pusha
cld
xchg
andl
cmp
mov
mov
cmp
outsb
in
popf
and
jp
sub
frstor
sarl
outsb
mov
and
adc
push
je
js
scas
add
fiaddl
fucom
sub
jo
lahf
sbb
js
in
fstpt
es
push
movsb
pop
jg
dec
into
inc
dec
fldt
insb
cmp
mov
inc
add
xchg
push
movsl
shlb
testb
dec
movsb
mov
int3
test
ss
imulb
loopne
mov
cmpsb
in
mov
loopne
adc
test
lods
sti
mov
dec
mov
mov
outsb
adc
jns
sbb
icebp
pop
pop
je
gs
std
inc
mov
enter
pushw
push
inc
push
or
mov
push
push
and
sub
int3
fisubrl
jbe
mov
jg
and
lock
pop
xor
mov
cmp
cwtl
es
or
jl
mov
lcall
sub
stos
push
adc
aas
mov
int3
sub
fisubs
mov
in
andl
out
push
outsb
pop
cmp
mov
push
push
loope
shlb
orb
sub
out
test
outsb
push
aad
popa
stc
ss
adc
inc
xchg
xchg
mov
push
pusha
add
adc
jo
mov
dec
mov
push
out
lds
dec
div
call
nop
xorb
js
out
loopne
sub
movsl
inc
add
push
mulb
lret
cmp
mov
mov
leave
movsb
mov
inc
and
test
enter
adc
arpl
mov
and
ficompl
or
and
negl
inc
xor
stc
jp
cwtl
fmull
lods
out
adc
push
fs
sub
or
push
ljmp
or
inc
jb
iret
xor
pop
or
shrl
or
sahf
xchg
sbb
cwtl
subb
xchg
mov
jg
jns
adcb
repz
loop
arpl
pop
adc
push
orl
mov
push
je
movsb
mov
xchg
jmp
xchg
or
fwait
mov
sub
xchg
jb
rolb
jb
loope
ss
jno
xor
xchg
ret
jecxz
mov
call
pop
pop
push
sbbb
js
lock
jmp
shlb
mov
cmp
lock
sub
cmp
mov
stos
xchg
cli
rcr
repnz
push
lret
sbb
in
out
fiadds
sahf
loopne
test
mov
push
dec
out
push
push
fisubrl
movsb
inc
insl
and
push
sub
sub
add
fiaddl
lcall
sbb
mov
jle
push
in
cmp
adc
jecxz
mov
and
cli
pop
in
je
add
test
jp
cmp
fnstenv
repnz
in
jmp
jb
jecxz
xchg
inc
jne
jo
jmp
xchg
dec
push
mov
jbe
repnz
xor
aas
xor
push
dec
flds
ret
loope
sub
cld
in
adc
xchg
jae
outsl
pop
flds
mov
lock
mov
or
divl
xorl
fucomip
mov
loope
cmc
inc
xchg
cmp
pusha
test
sub
js
cld
cld
pop
sub
jae
lahf
dec
ficomps
sub
shrb
pop
sbb
inc
fcmovu
xchg
fsubr
sub
jb
negb
lods
sbb
inc
pushf
dec
leave
jnp,pn
fbld
ret
jg
mov
sub
test
jno
int
and
subb
loope
sub
pop
inc
mov
mov
mov
and
das
repnz
add
cvtdq2ps
or
pop
xchg
hlt
lcall
mov
test
dec
insb
push
push
stc
cmp
push
inc
mov
sub
pop
or
jge
cmpb
xchg
lods
or
je
cwtl
sub
scas
call
sbb
or
loope
outsl
mov
popa
adc
and
or
xor
push
pop
aam
test
bnd
hlt
mov
jne
push
inc
aad
scas
popf
scas
inc
push
loope
ss
adc
sub
mov
mov
mov
sub
xchg
mov
divb
call
dec
aaa
aad
scas
mov
icebp
ret
inc
sub
dec
lods
jno
jmp
ret
pop
and
push
out
xchg
xlat
dec
adc
push
jae
xor
int
and
jne
pop
sbb
sub
cwtl
xchg
pop
les
xchg
call
idivb
push
in
or
cmpsb
sub
outsb
shlb
inc
mov
mov
in
inc
pusha
lds
and
mov
mov
ret
cli
cli
fisubrs
insb
shld
xor
ret
inc
and
push
jne
mov
cmpxchg
xor
pop
fadds
nop
mov
pop
sub
addr16
push
les
fisubl
xchg
iret
push
data16
es
repnz
je
scas
cwtl
out
mov
dec
jl
sub
xchg
or
cmp
lds
loope
in
insb
sub
insb
or
mov
jecxz
hlt
jne
les
fiadds
jb
mov
cmpsl
xchg
movsl
cwtl
insb
mov
int
inc
xor
or
aas
leave
mov
mov
xchg
loop
inc
mov
mov
push
cs
ds
enter
lret
scas
outsb
or
cltd
inc
sbb
push
je
mov
decb
lret
jnp
sub
cli
xor
outsl
add
jle
shlb
gs
out
insl
clc
cli
ljmp
mov
sub
xor
das
popf
out
ljmp
lcall
into
and
in
cmpsb
in
xor
mov
and
sub
lret
loop
ror
jecxz
outsb
mov
push
fildll
inc
addr16
push
aaa
fidivs
jb
jmpw
push
mov
test
xor
cmp
dec
cli
pop
repz
sbb
cmp
sub
loop
stc
and
daa
jecxz
mov
pop
outsl
aad
out
fxtract
pop
cmpl
and
loopne
bound
mov
arpl
inc
add
xchg
jle
xchg
xor
arpl
or
shll
popa
pusha
es
shlb
rcrl
ret
mov
jge
inc
sub
lret
or
dec
adc
test
sub
cmp
push
fidivs
imul
ret
dec
call
aaa
or
adc
stos
out
fadds
aas
add
and
lahf
inc
xor
push
sti
mov
in
or
iret
xchg
push
and
test
xchg
pop
pop
jge
std
loopne
xor
insb
xchg
js
andl
ss
xchg
pop
dec
adc
mov
aad
jge
popf
in
inc
pop
xchg
sbb
inc
hlt
rorl
xor
stc
sti
xchg
aas
jne
int3
aam
test
shl
loope
pop
pop
cmp
sbb
jb
int3
fstps
and
and
jno
lahf
add
fcomps
dec
mov
je
adc
dec
andb
leave
popf
jge
pop
jb
lahf
xor
insl
out
movsl
push
into
jae
or
push
sub
test
enter
adc
push
dec
xchg
je
movb
adc
pop
imull
arpl
pop
push
hlt
jno
mov
jb
or
adc
cltd
xchg
loop
insb
pusha
mov
mov
out
inc
push
fdivl
andb
es
xor
xchg
xor
in
aaa
mov
mov
cmp
popa
pop
push
mov
stos
mov
pushf
mov
and
jbe
jmp
outsb
pop
inc
notl
jne
dec
fnclex
bound
divl
insl
ds
push
incb
xor
dec
fucomip
push
or
sub
jb
xor
movsl
cmp
hlt
es
loop
and
dec
and
push
js
mov
adc
fbstp
and
fwait
mov
add
sub
aad
mov
jb
jns
mov
aam
dec
lea
icebp
fsubrl
pusha
cld
pop
hlt
aam
fdivp
hlt
ret
xor
pushf
inc
cmp
jno
das
in
mov
sbb
in
mov
sub
push
jbe
inc
scas
call
sub
xor
jle
xchg
sub
xor
jmp
imul
jg
popa
push
pop
jae
cmpsl
mov
ja
xor
push
xchg
jb
sub
ljmp
and
pusha
cmc
iret
inc
ret
movsl
jne
sub
sub
enter
ret
fbld
ss
dec
xor
or
add
jg
fwait
push
sub
sbb
gs
pop
sub
pop
popf
insl
add
xorl
xor
ja
push
aaa
dec
sbb
rorl
sub
cs
jecxz
mov
mov
fistps
iret
and
lahf
mov
ret
fwait
or
adc
cmp
pop
xor
sub
decl
mov
push
pop
sbb
loope
and
mov
push
scas
mov
mov
and
pushf
adc
push
mov
xchg
push
fsubl
jnp
fucomp
test
mov
repz
mov
in
movsl
mov
repz
adc
inc
and
js
loope
insb
addl
int3
addl
test
aaa
dec
je
inc
sub
pop
push
mov
cmpsb
add
fstpt
xchg
adcl
jb
dec
fcomps
mov
push
xchg
loope
iret
push
scas
sahf
inc
std
stos
ret
sub
stos
loope
mov
or
sbb
std
fldenv
push
fldln2
mov
movsl
sub
xchg
insl
rorb
shl
rorl
test
imul
decl
int3
lahf
mov
pop
loope
rclb
in
jecxz
clc
mov
fs
add
cmpsl
addr16
sbb
mov
es
out
push
out
scas
shlb
cmpsb
ljmp
push
jbe
sbb
push
mov
repz
xlat
pop
fwait
mov
jl
das
ds
and
sub
notl
dec
test
sbb
xor
ljmp
mov
aad
or
xchg
rol
jbe
addr16
mov
je
xor
dec
test
scas
add
out
stos
enter
sbb
mov
dec
inc
arpl
ds
mov
inc
mov
lds
rcl
fidivs
adc
addr16
ret
xor
outsb
test
loopne
out
push
sbb
out
frstor
or
paddusw
jmp
imul
ret
fidivs
rcll
pushf
push
mov
test
bound
enter
pop
mov
add
or
cs
mul
enter
add
ret
push
push
cwtl
es
insb
je
imul
mov
sub
mov
je
es
mov
xor
push
test
cwtl
sub
fs
mov
sub
push
and
fisubrs
das
mov
jecxz
and
inc
xor
and
sbb
cmp
mulb
pop
loope
jecxz
pusha
jl
mov
loop
outsb
notb
ljmp
lcall
jmp
or
loop
mov
and
mov
jno
movsb
lahf
sub
pop
repz
ficoml
popa
repnz
dec
push
addb
jne
dec
cmp
pop
in
and
and
xchg
mov
pop
negb
popa
pop
arpl
mov
loopne
ds
mov
aas
xchg
jmp
enter
mov
mov
daa
pop
adc
out
das
cmpsl
insl
lds
mov
mov
mov
push
push
and
sbb
mov
adc
outsb
repnz
cwtl
fbld
fsubrs
add
jecxz
jne
mov
mov
xchg
mov
mov
inc
xor
call
jmp
loope
and
fiadds
push
fs
adc
mov
mov
loop
inc
mov
notb
mov
inc
hlt
outsb
loop
push
push
aad
push
mov
pusha
pop
sub
lods
add
sbb
push
inc
mul
and
mov
mov
je,pt
arpl
jae
pop
rcrb
pop
loope
inc
jecxz
dec
inc
inc
ss
arpl
sar
ljmp
aam
mov
imul
push
add
out
cltd
dec
lcall
push
inc
imul
sahf
repz
xor
movsl
movsl
push
imul
test
xor
pop
outsl
pop
pop
pop
sub
add
xchg
out
xor
mov
sti
daa
add
and
test
test
push
repnz
jbe
mov
mov
pushf
mov
lahf
dec
add
mov
mov
sbb
or
or
ds
pop
es
sahf
pop
mov
hlt
stc
mov
fcmovbe
xor
stc
bnd
aad
inc
stos
loop
pop
scas
int3
cmp
sti
test
ja
fldcw
sahf
je
mov
and
ljmp
aas
xchg
pop
bound
xorl
pop
insl
and
fdivr
hlt
sbb
xor
and
mov
stc
sbb
shlb
jp
movsl
sub
jge
add
xor
je
jecxz
mov
or
xorb
test
negb
sub
outsb
cli
std
dec
adc
movsb
insb
out
enter
push
mov
pop
add
pop
xor
ljmp
inc
and
sbb
movsb
push
push
pushf
lods
push
mov
shl
loopne
jl
shlb
icebp
sub
sbb
outsb
inc
repnz
mov
adc
jo
add
in
inc
iret
mov
scas
loope
xlat
je
bound
xorb
sbb
mov
cmpsl
or
adc
daa
xchg
es
inc
dec
std
mov
push
hlt
pusha
ja
mov
mov
hlt
push
or
out
sti
inc
adc
movsl
inc
call
dec
imul
pop
das
sbb
add
cmpsl
mov
loopne
imul
xchg
repnz
loop
and
push
jns
add
add
jmp
sub
outsb
inc
shlb
bound
add
ret
xor
add
call
mov
ja
lcall
in
in
loope
and
ffreep
push
cmc
jns
rolb
add
movsl
loopne
xchg
dec
xchg
cmpsb
mov
lcall
pop
test
lds
mov
test
test
daa
or
ljmp
xchg
jp
shll
push
or
hlt
addl
jbe
xchg
or
lcall
faddp
sub
xchg
sub
lret
mov
inc
hlt
imul
jg
sub
gs
xor
out
and
repnz
xchg
inc
cmp
push
sub
loope
lcall
mov
inc
loope
mov
xor
mov
or
loop
mov
imul
inc
sbb
movsl
adc
jg
divb
inc
sbb
cmpsl
mov
shlb
pop
cmp
ret
jecxz
fistpll
mov
loope
sub
adc
sbb
stos
sbb
nop
jecxz
mov
popa
mov
call
fildl
mov
xor
fildl
or
loopne
xchg
sti
jb
mov
adc
les
aaa
lock
xor
jb
aam
cmp
or
xor
mov
lock
xchg
orl
jae
negl
inc
fwait
cmpsb
add
dec
xor
pop
das
inc
cmc
and
inc
push
cwtl
ficoms
insb
sbb
insb
mov
jmp
sub
pop
imul
test
sbb
js
cmp
out
pushf
enter
js
loopew
push
xchg
mov
push
jae
ficoms
push
shrb
push
jnp
cltd
pop
lcall
arpl
dec
insb
mov
or
insb
testb
inc
cmovl
test
bound
dec
dec
mov
inc
sub
jo
loopne
adc
sbb
popl
xchg
sub
out
pop
fsts
push
sbb
sub
aaa
mov
fidivl
fbld
movsl
sub
call
pusha
jae
cmpsl
mov
ja
nop
stos
int3
sti
xchg
jne
scas
sub
notl
jnp
push
inc
dec
mov
xor
mov
clc
in
loopne
jns
sub
cli
adcb
dec
inc
mov
aaa
push
insb
sbb
test
dec
imul
cmpb
out
mov
jae
pusha
jecxz
dec
popa
mov
popa
je
mov
cs
test
jecxz
jbe
into
aaa
xchg
ljmp
cli
fldt
in
cmp
inc
jecxz
punpckhdq
sub
addr16
xchg
push
and
mov
dec
sub
cmp
aam
push
inc
mov
push
loope
xchg
mov
notl
adc
and
xchg
sub
ljmp
out
cmp
and
bound
loope
out
adc
adc
jne
xchg
or
push
dec
loop
mov
jecxz
addr16
lret
mov
test
sbb
push
aas
loope
repnz
cmp
cmp
pop
add
outsb
dec
xchg
or
mov
adc
int
enter
sub
pop
inc
ret
outsl
dec
sbb
dec
cmove
pop
sahf
pop
push
test
jmp
lret
ja
scas
push
or
push
mov
mov
outsb
fwait
stos
call
les
xor
lods
mov
addr16
mov
mov
push
mov
push
popa
cmp
popf
rcrb
add
lcall
mov
mov
add
push
fidivrs
jno
mov
add
mov
cltd
fisubl
iret
into
dec
mov
aaa
mov
sub
scas
push
outsb
repz
mov
out
loope
xor
push
pop
dec
test
adc
cs
jecxz
in
mov
push
fists
mov
or
push
adc
pop
cmpsl
popa
and
lcall
adc
jbe
inc
mov
mov
jae
int3
test
andnps
es
fs
aaa
call
in
into
je
pushf
hlt
mov
in
daa
movsb
outsl
test
dec
jecxz
popa
sbb
int
jno
jns
push
outsl
jmp
mov
sbb
stos
mov
mov
popa
popl
push
outsl
aad
in
pop
and
cmpsl
xchg
dec
cmp
mov
mov
lods
shrl
hlt
aam
mov
pop
popf
add
xchg
jno
test
cmc
push
jecxz
dec
fs
int3
dec
pusha
push
inc
out
mov
bound
push
jbe
inc
adc
push
sbb
sahf
cmc
leave
fs
mov
fcomp
call
pop
push
test
mov
or
movsl
jp
subb
fildl
xlat
cmp
ja
lahf
cmpsl
inc
loop
xor
call
sub
sti
daa
inc
imulb
sbbl
sbb
repnz
hlt
das
clc
test
adc
sub
mov
mov
push
inc
mov
mov
pop
and
push
push
ret
push
mov
jo
and
mov
out
lret
and
mov
mov
aad
paddsw
xchg
xchg
pop
jb
hlt
insl
addl
xor
movsl
insb
dec
lret
aaa
sub
mov
sbb
test
shl
ret
sub
dec
test
push
rcr
and
loopne
ss
clc
cmp
or
dec
movsl
jl
popf
xor
fisubrl
ror
mov
sbb
loop
or
aaa
arpl
push
xorl
sbb
dec
push
jecxz
sub
jo
test
adc
sbb
xchg
jp
xchg
pop
lds
and
fsubl
loope
dec
test
movl
sahf
and
movsb
aam
xor
stos
adc
lret
and
jp
inc
test
mov
addr16
push
loopne
push
lcall
stos
rorl
imul
pop
mov
out
xchg
insl
out
faddl
lods
les
pop
adc
and
jecxz
mov
sub
pop
mov
dec
pop
sub
mov
dec
shlb
sub
cmpsb
push
dec
outsl
xchg
imul
cmpsl
adc
sbb
push
xor
sbb
aam
push
dec
mov
push
clc
cwtl
add
xchg
movsb
addb
xor
gs
loop
sub
in
in
pusha
fwait
mov
mov
ljmp
inc
mov
adc
mov
loopne
andb
mov
lock
push
push
xchg
adc
out
pop
xchg
inc
ret
popa
shrb
test
or
mov
xlat
lret
fldenv
jl
pusha
jge
push
repnz
mov
mov
test
jnp
arpl
clc
subl
mov
enter
jp
sub
idivb
xchg
push
jecxz
push
imul
mov
int
jae
insb
outsb
xchg
sbb
push
mov
pop
cmp
or
mov
lcall
and
xorb
out
bound
scas
nop
jle
popf
movb
adc
mov
call
sbb
mov
push
push
mov
insb
mov
jecxz
mov
lcall
sti
loop
adc
in
adc
xchg
cwtl
push
sbb
sar
inc
imull
xchg
enter
subl
sub
mov
pop
mov
stc
adc
pop
mov
in
pushf
adc
xchg
pop
nop
and
movsl
outsl
or
lods
fs
push
mov
pop
jo
adc
or
arpl
mov
mov
icebp
pushf
filds
mov
xor
mov
jmp
jecxz
xchg
cmp
imul
mov
je,pn
lods
mov
test
subl
test
add
lods
mov
aaa
jecxz
sarb
dec
and
sub
pusha
es
cmp
push
dec
xchg
push
outsb
gs
mov
mov
divb
jno
aad
adc
aam
push
das
fidivl
inc
lcall
bound
movaps
mov
add
xor
loop
insb
pushf
popa
pop
dec
stos
aad
mov
ja
roll
fsubrl
mov
dec
enter
test
lahf
test
push
sub
xchg
push
mov
xchg
aas
loop
popa
mov
xlat
and
dec
inc
pop
ss
pusha
insb
adc
mov
sbb
cwtl
mov
inc
mov
in
xchg
jns
mov
rolb
insb
fcoml
lods
add
mov
mov
hlt
inc
mov
jb
stos
add
fsubp
addr16
sbb
test
sbb
or
dec
outsb
cmpsl
fimuls
cmp
lock
fwait
mov
mov
imull
push
stc
mov
int
adc
jno
clc
xor
fcmovnbe
imul
mov
sub
cwtl
jb
pop
in
lahf
in
or
mov
jle
mov
push
xor
mov
or
cli
xlat
dec
and
sqrtps
es
lahf
inc
mov
add
je
jg
mov
xchg
shll
data16
pop
xor
lahf
rcrl
ja
test
mov
cvtps2pi
jo
pusha
cwtl
les
jbe
sub
xchg
xor
push
bound
fimull
push
dec
pop
out
data16
mov
jne
sub
repnz
sahf
std
dec
sti
aas
je
and
arpl
pushf
test
das
fsubrl
jnp
push
fdivs
sub
je
lods
loop
mov
ja
jecxz
push
mov
call
pop
push
jne
mov
add
cmc
scas
lods
in
pop
xchg
movsl
sub
test
stos
pop
mov
jb
jg
call
or
ljmp
push
cwtl
rorb
js
add
sub
xchg
dec
daa
iret
mov
movsb
cmpsl
insl
dec
test
psubsb
faddp
rcl
je
push
pop
mov
mov
mov
lds
jbe
push
mov
mov
xchg
mov
pop
push
mov
notl
and
loop
mov
push
imul
mov
push
inc
inc
dec
jecxz
mov
popl
in
scas
in
push
ffree
or
jns
dec
mov
ret
xor
jg
lret
adc
cmp
rep
ja
xchg
mov
aad
repz
jecxz
rclb
fidivs
iret
ss
push
addb
mov
mov
mov
add
outsb
pop
jmp
repz
inc
movsb
nop
cmp
xorl
pop
jne
test
and
rorl
xor
addl
and
es
lock
faddl
add
pop
jnp
push
add
and
lahf
sub
or
pusha
xorl
arpl
xor
ret
inc
fst
xor
inc
dec
xchg
insl
imul
testb
cmp
jb
ja
insb
pusha
push
mov
sbb
ljmp
lret
push
mov
fsubl
ljmp
nop
push
cs
cwtl
outsl
xchg
js
pusha
xor
imul
aaa
mov
push
loop
sbb
inc
aaa
outsl
and
ficompl
in
sub
dec
adcb
dec
pusha
mov
std
test
adc
pop
fstpt
loop
pop
push
rolb
cmp
loopne
and
mov
sub
outsb
mull
stos
push
imul
adc
dec
xor
test
insl
sub
push
mov
jl
sbbb
and
mov
mov
xor
fs
push
sub
and
jo
mov
push
pop
add
xor
pop
xor
push
and
cmpsl
inc
insl
jmp
inc
add
sbb
and
sub
pop
cltd
ret
gs
stos
std
cmpsl
into
jae
sub
pusha
cld
repnz
int3
sub
jnp
sub
mov
aam
js
and
jnp
mov
mov
jnp
sub
xor
push
lcall
outsl
imul
sbb
mov
cld
jno
jmp
jb
ljmp
and
imul
jg
push
sub
jb
sub
inc
ljmp
enter
pop
imul
pop
int
jno
ds
and
fcomps
mov
daa
lea
add
ja
stos
jmp
sub
pop
aam
in
loope
mov
xor
push
test
mov
mov
xor
or
daa
mov
jecxz
pop
jmp
pop
rcr
jb
mov
adc
or
dec
in
xor
inc
aad
adc
test
pusha
scas
sub
and
ljmp
and
mov
jb
cmpsl
pushf
pusha
rolb
aam
inc
xchg
pusha
scas
loope
inc
jno
sub
inc
and
jnp
fdivl
pop
outsl
ljmp
je
jge
in
insb
mov
jle
pusha
sbb
pop
ljmp
jne
sbbl
mov
mov
gs
fsubr
cmpsl
loope
add
sahf
and
xor
push
and
xchg
shlb
fsubrl
sahf
push
insl
dec
mov
lock
fstl
clc
data16
aaa
mov
adc
mov
mov
dec
sub
push
ror
ljmp
cmp
jl
sub
pop
sbbb
mov
mov
pop
mov
pop
mov
out
pop
pop
pop
sub
je
loop
stos
ss
xor
dec
sarl
out
sbb
and
or
inc
iret
xor
xchg
or
or
push
cmp
xor
push
cmpsl
mov
xor
lahf
push
inc
popa
push
xorl
jecxz
cmpsl
mov
mov
outsl
fisubrl
call
loope
inc
mov
xchg
xlat
out
push
loopne
and
pop
mov
adc
adc
iret
bound
dec
fistps
and
sub
fwait
inc
hlt
lock
push
cmp
subl
test
sbb
xchg
adc
jle
mov
fsts
xchg
aaa
dec
push
shr
fldl
cmp
push
mov
push
jecxz
repnz
sbb
cmpl
loopne
aaa
sub
dec
mov
popa
test
icebp
add
cmp
pop
dec
push
pop
test
sbbb
rclb
jecxz
jg
shl
into
cmp
hlt
and
push
les
push
shll
lds
dec
daa
insb
dec
xor
aam
daa
inc
push
push
loopne
pop
sub
pop
jp
sub
lock
test
dec
sub
push
push
aaa
loope
jmp
or
dec
xchg
or
sub
push
cltd
dec
pop
jb
sub
scas
mov
pop
and
decl
jb
sub
dec
add
popa
add
pop
xchg
and
pop
push
push
and
sarb
in
cmpl
idivb
ja
into
loopne
jbe
loop
inc
repnz
push
cmp
fsubrs
push
pusha
push
movsb
sub
inc
jecxz
pusha
dec
inc
pop
es
stos
ja
pop
test
sbb
mov
and
std
lret
loop
imul
and
mov
shrb
lret
dec
fcmove
ret
lret
sub
shl
cmpxchg
aas
ficompl
sbb
sub
add
xor
aaa
push
ljmp
sbb
popa
mov
nop
inc
mov
jge
mov
jge
pop
div
pusha
cmpsb
sbb
add
in
cmpsb
push
jmp
loopne
xor
aaa
test
pop
xchg
bnd
jecxz
sub
push
negl
je
lcall
pop
xchg
dec
pusha
imul
daa
jle
idivl
or
fsubrl
arpl
mov
push
mov
mov
xchg
xchg
loop
cmpsb
outsb
int
jb
adc
cmp
jbe
push
adc
cmp
inc
stc
mov
mov
push
loope
dec
les
adc
fadds
das
mov
pop
shlb
ss
push
ret
addb
mov
mov
and
enter
fs
and
cmpsl
adc
jae
mov
ljmp
pusha
clc
push
xchg
aaa
push
mov
lahf
xor
shll
icebp
adc
rclb
enter
and
jo
mov
xor
lods
icebp
xchg
or
out
cmp
pushl
filds
sbb
dec
addr16
testb
pop
mov
adc
inc
popa
outsb
dec
lds
loop
in
mov
jne
ret
loope
repnz
dec
pop
out
into
or
mov
idivb
push
inc
and
mov
mov
pop
test
sbbl
fists
and
enter
jne
lods
les
sahf
push
mov
outsl
sub
int3
bound
cmp
test
xor
mov
mov
xchg
test
mov
leave
sub
cmp
loop
inc
jg
and
adc
movsl
or
cltd
add
jg
sub
push
sbb
adc
aad
test
hlt
push
lock
ret
rolb
ror
scas
stos
clc
inc
or
dec
jg
mov
mov
mov
andb
das
js
mov
cmp
out
inc
push
push
add
movsl
cmpsb
ss
pop
outsb
imul
es
mov
loope
xor
jl
mov
jge
push
out
das
es
aaa
sub
call
xchg
ret
dec
je
arpl
outsb
out
mov
add
inc
in
ret
data16
outsb
fwait
adc
cltd
leave
dec
sti
and
jp
inc
sub
inc
stos
clc
adc
sub
sub
xchg
ss
je
inc
sub
push
lods
cmp
inc
outsb
xor
pusha
fwait
stos
ret
push
shrl
xchg
loop
pusha
mov
jae
negl
push
jo
popa
add
sub
add
xor
rolb
fdivrl
ljmp
mov
sub
les
xor
jl
sub
imul
subb
mov
fwait
adc
fimull
jns
cmpb
icebp
mov
push
shlb
lcall
jnp
out
jne
and
lds
and
dec
outsl
push
outsl
fists
xor
repnz
xor
arpl
arpl
loope
imul
jbe
arpl
jb
rcrl
mov
cmp
subb
cli
arpl
pop
jmp
pop
cmp
sub
lret
andl
icebp
movsb
jne
and
ljmp
scas
adc
push
ja
inc
sub
mov
jecxz
lods
inc
in
adc
pushf
jmp
inc
and
mov
bnd
lfs
mov
addr16
ret
es
and
xchg
and
ljmp
cmpsl
and
cmpsl
js
fcmovne
int3
push
mov
insb
push
mov
cmp
lds
mov
and
rol
pop
sub
push
les
mov
inc
aad
xchg
rcrb
pop
jl
xlat
dec
push
hlt
jns
or
or
movb
inc
daa
movsb
or
mov
pop
jb
mov
int
jae
popf
mov
push
rorb
movsl
aaa
js
mov
outsb
out
data16
dec
dec
adc
cmp
mov
nop
iret
sbb
shll
fwait
and
lods
std
les
push
xchg
xchg
movsb
movsl
in
adc
sub
and
inc
inc
fwait
sub
lret
xor
jae
dec
push
loop
and
jne
mov
aad
sub
cmpsl
jne
or
push
jle
or
add
push
stos
xchg
pushf
mov
sub
dec
mov
lods
fsub
fcoml
test
dec
pop
leave
jae
mov
loope
xchg
mov
je
mov
stos
ja
xchg
inc
mov
sbb
mov
sub
hlt
adc
mov
mov
je
mov
ffree
das
mov
movsb
pop
pop
xchg
fwait
add
xor
into
mov
and
xor
jne
mov
ss
xor
int
sub
movsl
test
jmp
mov
and
incl
test
divl
sub
ljmp
dec
sub
not
sub
insl
adc
inc
inc
jno
enter
dec
mov
dec
insb
pmaddwd
cli
fbld
mov
inc
pushf
mov
ljmp
mov
imul
stos
and
ficoml
stos
pushf
mov
lods
inc
loop
imul
adc
push
sub
inc
pop
notl
cmpsb
loopne
mov
mov
fsubs
xor
shlb
ss
sbb
jmp
dec
jbe
push
or
xor
inc
mulb
popf
push
cmc
jo
subb
iret
sub
jecxz
mov
push
mov
push
sbb
hlt
shrl
pop
add
add
sbb
pop
jne
sub
fbld
dec
je
mov
test
xchg
sti
cmp
or
cltd
mov
lock
int3
aaa
mov
scas
cs
adc
ss
stos
jb
push
insl
loopne
ds
push
jne
push
sub
fwait
adc
mov
fldenv
enter
pop
sarl
ret
adcb
cmp
dec
xor
mull
mov
push
outsb
jne
decl
enter
shrb
pushf
imul
loop
lods
insb
xor
fistps
neg
mov
pop
insb
sbb
mov
addr16
rcrl
ljmp
js
in
fsubrs
xor
xor
jge
dec
mov
cwtl
add
mov
sbb
lahf
add
test
cmc
nop
in
jmp
enter
inc
mov
imul
lret
dec
ljmp
pop
inc
imul
test
aaa
dec
push
daa
inc
enter
out
sub
jae
ja
fs
fiadds
adc
pop
loop
and
pusha
in
dec
insl
addr16
mov
jecxz,pt
or
xchg
enter
movsl
mov
hlt
push
cmp
sbb
incl
adc
mov
in
mov
std
mov
dec
mov
imul
test
sbb
cmpsl
sbb
mov
jb
fsubl
pusha
loopne
in
xor
scas
sub
jle
outsb
idivl
loope
xchg
mov
cld
xchg
jo
jb
in
aas
test
call
pop
mov
aaa
stos
xchg
pop
jecxz
lahf
push
out
lcall
test
adc
xor
inc
mov
mov
pop
fwait
iret
jb
mov
add
dec
mov
out
test
outsb
inc
and
popa
sub
add
cmp
pusha
sti
push
test
mov
clc
arpl
jnp
incb
and
mov
in
inc
cmpsb
pop
rolb
jbe
ret
addr16
inc
insb
pop
call
aam
repz
rol
fidivl
inc
enter
dec
ja
jns
rcll
add
lds
lret
mov
push
add
xor
xchg
dec
and
xor
dec
shrb
push
sub
jae
adc
dec
and
das
adcb
pusha
jge
cwtl
inc
dec
lea
std
sbb
enter
bound
aaa
and
sbb
sarb
pop
rcr
push
addr16
popa
stc
in
int
addr16
xor
addr16
or
in
mov
movsl
mov
adc
cmp
dec
repz
push
cmpsb
mov
dec
mov
les
in
xchg
bound
lods
daa
pop
pushl
inc
icebp
push
repnz
cmp
cmp
jle
stos
div
addr16
push
lcall
out
mov
popa
sub
push
fisttpl
push
hlt
pop
das
dec
dec
xor
inc
in
adc
pop
cmp
sti
xor
push
push
pop
mov
popf
jl
push
pusha
push
dec
arpl
sub
inc
jmp
sub
mov
pop
stos
adc
aam
xchg
pusha
test
call
test
leave
lea
dec
fwait
mov
int3
sub
mov
shll
setp
xor
and
fildll
xor
xchg
rol
cmpsl
sbb
sbb
jae
lret
mov
insl
sbb
lret
xchg
xchg
mov
sbb
cmp
pop
fucomip
popf
stos
inc
dec
inc
xor
outsl
ficoml
popf
pop
push
pop
pop
xorb
add
sarl
xchg
xchg
out
rcrl
ljmp
sub
add
outsl
mov
jmp
imul
cmp
mov
xchg
push
fdivl
xorb
fcmovnbe
mov
mov
lods
xchg
inc
adc
inc
lret
lods
clc
dec
push
icebp
imul
xor
or
and
pop
sbb
mov
or
addl
jge
mov
mov
test
and
and
pusha
arpl
push
mov
sub
mov
jecxz
cmpb
cmp
inc
lea
cs
fadd
outsb
jecxz
xor
xchg
loopne
mov
out
or
dec
out
fwait
adc
es
sahf
sbb
aas
enter
out
mov
sbb
fcoml
enter
jb
lea
movsl
sahf
mov
add
push
xchg
roll
inc
adc
test
mov
xchg
xchg
and
mov
outsb
lret
xchg
outsb
mov
jnp
jbe
and
mov
add
mov
and
jecxz
test
rclb
mov
and
pop
pop
es
dec
outsl
jno
stc
mov
and
add
push
ljmp
xlat
daa
adc
push
sub
fstpt
sbb
jb
and
bound
jecxz
mov
pop
jae
mov
mov
test
jbe
bound
jae
imul
adc
imul
pop
scas
arpl
mov
xchg
xor
inc
sub
push
pop
arpl
inc
imull
out
into
dec
xor
rolb
xchg
gs
mov
clc
test
add
movb
ss
scas
movsl
add
insl
lret
mov
sbb
mov
or
outsb
push
dec
rolb
rorb
outsb
bound
dec
hlt
push
outsb
xor
mov
ja
pop
mov
dec
jle
je
sbb
cmpsl
add
xchg
or
in
sub
data16
push
and
sbb
and
je
sub
cmc
cmp
loope
loop
xchg
mov
xorl
enter
data16
pop
imul
test
leave
loope
imul
aad
in
addr16
jae
mov
inc
add
jno
jecxz
fistl
dec
pop
out
mov
addb
in
mov
sub
mov
addb
pop
cmp
adcb
push
arpl
insl
pop
pop
scas
movsb
insb
add
adc
inc
sbb
lea
push
dec
lods
push
mov
xor
ds
testb
and
dec
dec
inc
add
outsb
pop
or
fists
inc
dec
out
xor
cmp
push
mov
icebp
cmp
sti
inc
mov
cmpsl
push
fnsave
or
mov
mov
ror
cli
repnz
mov
mov
pusha
push
and
in
xchg
in
addr16
movsb
shrb
sbb
pop
sbb
mov
test
scas
in
push
mov
das
enter
andb
sbb
aas
shlb
loop
jno
bound
push
mov
and
adc
enter
stos
lock
fwait
loopne
xor
add
std
rcrl
pop
inc
and
aad
cmp
jnp
repz
and
cmp
pusha
ret
push
fs
push
test
sbb
cmpsl
jg
adc
xor
ficoml
pop
fcompl
testb
fisubl
inc
and
fdivrl
or
cmp
fisubl
xor
pop
jb
mov
jl
sub
jns
jno
push
dec
push
pop
or
std
xor
rcrb
mov
dec
rcrl
or
and
adc
push
push
notl
bound
fdiv
hlt
xor
push
mov
dec
push
mov
mov
jbe
sub
sub
mov
push
inc
xor
hlt
insl
pusha
lret
shr
push
enter
cld
push
test
dec
fcoml
jge
push
jg
adc
pop
loop
mov
and
pusha
loope
nop
inc
xor
arpl
mov
jo
xor
loope
aaa
mov
pop
hlt
add
out
inc
cli
ljmp
enter
ret
repnz
sub
sub
xchg
je
roll
adc
jp
movsl
push
push
fwait
push
daa
adc
sub
fwait
pop
rclb
cmp
test
nop
inc
lret
testb
in
mov
sub
movsl
fcoml
loope
fs
push
adc
out
xchg
ljmp
mov
adc
fdiv
addr16
insb
mov
pusha
fwait
test
js
sub
lcall
inc
cwtl
xchg
fwait
std
imul
push
jge
pop
std
inc
ret
xchg
scas
pop
gs
mov
and
push
push
push
rcrb
xor
cmp
je
sub
divb
repnz
popa
mov
xchg
repnz
and
push
adc
sarb
inc
pop
cs
cmpsl
add
mov
divl
mov
jo
adc
je
imul
fdivr
lret
filds
sti
fldl
fcomip
ja
inc
sbb
pop
jo
adc
sbb
dec
popa
add
adc
xchg
imul
fsubrl
mov
mov
movsl
out
mov
push
rcl
rclb
cwtl
fisttps
cmc
xchg
pop
sbb
jb
pop
cmpsb
mov
inc
jae
fildll
insl
divl
xchg
xchg
pop
jmp
insb
call
jb
push
xchg
jge
jnp
hlt
fstpl
push
xor
pusha
pop
cmc
outsb
mov
xor
ret
mov
outsl
cli
inc
and
mov
loope
inc
dec
jp
mov
stos
out
test
enter
aaa
xor
push
xlat
mov
dec
loop
dec
and
rolb
movb
jge
mov
clc
xchg
ljmp
sbb
inc
or
ja
in
scas
jmp
out
jo
jbe
fstpl
mov
cwtl
or
mov
sbb
mov
repnz
hlt
cmpsb
in
cmp
dec
adc
ret
out
sbbl
cld
out
jno
scas
movsb
int
push
je
xchg
test
mov
das
lods
loopne
cmpsb
pusha
inc
enter
mov
repnz
lock
add
xchg
fdivr
mov
dec
pop
in
inc
shll
inc
mov
movsl
iret
jg
aam
ret
push
xor
aaa
sub
test
mov
adc
jb
data16
xchg
hlt
xchg
lock
push
mov
enter
push
mov
xor
cmpl
or
rcl
jl
jb
push
lds
jb
cmpsb
imul
sbb
iret
cmp
fisttps
mov
iret
mov
aaa
cmpsb
pusha
sub
fs
lahf
aas
mov
xor
inc
jbe
sbb
addr16
cmp
push
adc
adc
fimull
negl
mov
cmp
xchg
mov
mov
je
enter
mov
jo
add
jl
ljmp
popf
and
pop
dec
and
arpl
loope
sahf
fwait
and
cmp
inc
pusha
loope
outsl
out
mov
cltd
je
xorb
push
adc
pop
jne
xor
les
xchg
es
aas
jb
and
cwtl
dec
push
inc
sahf
xchg
aaa
push
inc
push
sub
xor
pop
scas
mov
adc
mov
pop
shlb
push
jnp
mov
xchg
xchg
cmp
cmc
daa
lea
stc
cld
jecxz
pop
int
aad
clc
ss
filds
movsl
push
ror
mulb
inc
aam
mov
mov
into
push
loope
std
and
je
add
pop
loope
ja
aad
push
cmp
mov
insl
ret
pop
jl
dec
out
mov
inc
je
add
push
inc
jo
movsb
mov
or
fcmovbe
push
jnp
push
dec
shll
pop
arpl
movsb
popa
mov
sub
add
leave
shll
aas
sub
dec
ret
fwait
out
movsl
cmpsl
movsl
cmc
out
cli
sub
cltd
xor
jne
mov
push
xchg
lods
add
sbb
ret
lret
pop
sub
inc
out
cmp
ja
clc
cmc
cld
loopne
call
and
sub
lret
lock
dec
negb
hlt
mov
test
mov
inc
loop
shrb
filds
bound
push
test
loop
and
sbb
std
pushf
out
xchg
icebp
push
ljmp
sahf
daa
sub
lods
xchg
add
xor
jne
testb
inc
add
shlb
mov
pop
jbe
hlt
sbb
out
fs
pusha
call
cltd
sub
sub
call
inc
into
xor
dec
jecxz
push
insb
mov
out
mov
in
scas
mov
outsb
mov
cmp
orb
push
and
jb
cmc
xchg
cmp
loop
fildll
cmpsl
aam
cmp
cmp
pushf
adc
xchg
xchg
in
in
push
mov
outsb
cwtl
and
cmpsl
inc
pop
pop
mov
scas
jne
loop
aaa
adc
push
into
sti
fdivrs
dec
mov
sti
jl
test
imul
add
jnp
push
xor
cmp
sub
scas
jbe
pop
in
ret
mov
shrl
sub
mov
push
data16
scas
icebp
mov
push
mov
inc
mov
hlt
add
or
call
push
lea
loope
das
and
jp
jmp
je
push
inc
push
or
mov
aam
addr16
call
dec
pop
shl
adc
ss
inc
sti
scas
mov
jnp
call
lcall
pop
hlt
ret
push
not
push
push
xor
mov
sbb
pop
lods
rcrb
xor
jg
fisubs
jle
sub
inc
cwtl
jecxz
push
mov
xchg
cmpsb
mov
sub
cmc
jnp
rclb
fld
stos
mov
addr16
xor
cmc
aad
mov
pop
shll
push
dec
and
add
push
adc
in
fstpt
into
and
leave
outsl
xchg
jl
sbb
sub
cmc
inc
test
mov
mov
aam
test
mov
hlt
ss
xor
fmull
pop
outsl
imul
add
mov
dec
lret
jb
xor
loope
pop
mulb
xor
xor
push
int3
mov
arpl
aaa
loop
cmc
jle
pop
or
cmp
and
and
push
insb
aam
loop
loope
fsubs
nop
or
in
cmpsb
lcall
testb
out
outsl
outsb
shlb
sbb
cmp
sub
repnz
push
dec
addr16
test
das
mov
fistl
sub
lods
xor
jne
xor
aaa
mov
cwtl
outsb
lds
out
jb
arpl
sub
xor
fmul
xchg
cwtl
add
jg
shrl
adc
and
jnp
or
testb
xchg
mov
push
lock
js
mov
inc
roll
jns
stos
daa
xor
pop
mov
fs
jne
push
in
filds
lock
cmp
xor
pop
and
and
ret
sub
fucomi
dec
pop
push
mov
in
mov
dec
negb
mov
repnz
pushf
stc
mov
dec
sbb
arpl
leave
test
arpl
movsl
dec
movsl
jb
add
pop
xchg
pusha
jl
and
sub
cmpsb
mov
bound
jecxz
outsb
push
ds
lcall
and
push
xlat
add
cwtl
mov
rorb
add
xor
and
gs
ss
xchg
inc
loope
mov
xor
and
inc
cmpl
xchg
sub
xor
fidivs
aaa
xchg
and
mov
mov
push
mov
mulb
cmp
inc
jne
jno
inc
inc
dec
adc
and
loopne
out
lods
and
ret
add
call
xor
jmp
and
rorl
xchg
fidivl
mov
and
jecxz
out
dec
daa
ret
test
jne
loope
xor
xchg
imul
in
mov
in
icebp
add
stc
inc
hlt
sub
xchg
inc
aas
repz
pop
mov
xchg
dec
xor
xchg
xchg
push
es
sub
aaa
sbb
es
jp
call
test
ljmp
xor
cmp
enter
cwtl
iret
add
pop
push
inc
adc
push
bound
jno
sub
sub
cs
scas
out
test
outsb
dec
jnp
hlt
mov
pop
in
xor
test
punpckhwd
push
js
call
dec
lods
inc
jns
mov
jb
mov
sub
arpl
jg
jae
xor
jne
subb
pop
cmp
sbb
sbb
out
aad
outsb
add
int
and
shrl
mov
pushl
shl
and
mov
cmp
sub
fwait
lahf
aaa
push
pop
stos
push
hlt
sbb
adc
mov
les
lods
push
pop
addr16
push
push
sarb
inc
dec
add
mov
mov
loopne
js
pop
out
pop
das
and
cwtl
push
aad
call
push
shrl
push
in
test
xor
xor
inc
mov
dec
push
sub
jle
testl
aad
mov
loopne
ds
or
inc
push
sub
add
imul
xchg
cmp
push
adc
push
movsb
into
imul
sbb
dec
movsl
jno
cmp
cltd
loop
and
jg
notl
jl
jno
test
repnz
pop
mov
or
sub
jl
lret
bound
pop
adc
js
adc
mov
push
xor
movsl
incb
lret
pop
addb
insl
lcall
je
and
hlt
loop
fcmovb
mov
pop
push
jo
jg
hlt
test
mov
push
outsl
js
jo
jb
mov
xchg
loope
popa
movsl
mov
mov
mov
insb
push
push
mov
sbbb
or
pop
test
aaa
arpl
xor
jb
test
arpl
test
xor
push
fiaddl
pop
xor
sub
add
test
shll
imul
sbb
inc
jg
mov
outsl
push
stos
inc
jb
insl
dec
xor
test
es
cwtl
dec
xor
dec
test
ss
jecxz
jb
out
cmc
je
pusha
push
icebp
fbstp
fs
rcr
pushf
mov
xchg
fwait
inc
pop
mov
rorb
mov
fs
pcmpgtb
xor
stc
mov
fdivl
xorb
or
das
call
pop
lds
and
add
fisubs
xchg
jnp
add
bound
ss
mov
add
xchg
push
jecxz
cmpsb
mov
or
out
inc
sub
out
and
push
mov
cwtl
push
pop
jmp
sahf
dec
les
inc
mov
popa
xor
mov
or
arpl
jb
les
sbb
lret
es
test
cmp
pop
fisubs
movsl
stc
cmp
cs
add
sub
sub
adc
arpl
push
testl
js
fbld
std
mov
pusha
xor
mov
arpl
call
mov
mov
aaa
sub
and
out
xor
bound
sti
mov
and
pop
xchg
in
repnz
sub
movsl
sub
push
jecxz
repnz
daa
mov
cwtl
mov
sbb
in
das
imull
mulb
call
cs
pop
xor
fcoml
sub
jbe
int
cwtl
andb
lahf
je
add
andb
sbb
cmp
out
rcrb
mov
mov
in
je
dec
movsl
push
jge
mov
lock
sub
ret
lds
fdivs
ret
bound
dec
sub
jb
bound
jns
jb
xchg
data16
mov
xchg
pop
mov
stos
inc
cmp
loope
sub
jnp
mov
pusha
je
sub
fbld
cs
iret
imul
push
inc
xchg
cltd
call
and
cmp
jp
sub
sub
ret
mov
popf
pop
test
add
inc
sub
sahf
mov
notb
and
push
cmc
popa
sbb
push
xchg
cmpsl
and
inc
stos
xchg
inc
pop
mov
push
das
insl
addl
loope
add
ret
fcmovu
sbb
dec
push
jns
push
cmp
add
cmpl
dec
jecxz
mov
insl
mov
xchg
movsl
pop
test
xchg
xor
outsb
xor
insb
xor
imul
inc
arpl
add
lea
jp
jecxz
loope
daa
jecxz
loopne
outsb
inc
adc
sbb
outsb
push
aam
rcr
ss
and
outsb
jb
je
lcall
sub
loope
ljmp
jne
aad
push
push
pop
push
test
mov
ss
xor
pop
sub
sbb
sub
add
xchg
and
adc
mov
test
sbbb
jge
test
arpl
xor
adc
ljmp
stos
xor
pop
xor
jb
inc
pslld
add
outsl
movsl
mov
xchg
adc
aas
and
jecxz
inc
jnp
dec
push
iret
iret
add
jnp
test
mov
mov
mov
not
mov
dec
mov
aaa
movsl
fs
lds
inc
mov
in
lahf
or
pop
mov
ss
sbb
jp
fs
mov
fisubrs
cmpl
sbb
and
sbbl
inc
mov
loope
mulb
sarb
jns
jmp
mov
in
fstpt
test
jb
cmpsl
inc
pusha
sub
add
test
mov
inc
jo
lock
mov
icebp
xor
cmp
sub
shlb
das
mov
cmc
inc
ja
inc
sub
mov
cmc
lds
sub
xchg
mov
cmp
xor
jno
push
mov
mov
dec
xor
gs
outsl
test
or
iret
pop
ss
xchg
jae
imul
iret
ds
test
and
nop
iret
pop
dec
stos
xchg
or
add
sub
pop
mov
inc
in
lea
ds
out
bound
push
in
push
add
and
sub
ss
rcrb
dec
sbb
adc
push
jbe
dec
das
ds
push
or
insl
loopne
jne
aaa
lds
mov
repnz
xchg
push
shr
or
and
imul
push
and
dec
inc
loope
mov
or
aad
pop
inc
icebp
sbb
or
loope
inc
xor
and
pop
leave
or
adc
or
and
jle
push
push
daa
in
xor
es
inc
dec
jbe
xchg
aad
push
or
sbb
mov
mov
enter
pop
andl
test
jbe
and
and
call
pop
das
repnz
sbb
lret
jge
lret
adc
test
jmp
mov
mov
lea
mov
cmp
fisubrl
xor
jg
std
jg
inc
fstl
hlt
xlat
lahf
push
push
dec
mov
ljmp
xor
aaa
mov
pushf
sahf
lods
add
sbb
pushf
lahf
loopne
push
dec
mov
mov
mov
jb
mov
xchg
arpl
mov
adc
mov
and
notl
xchg
pop
pusha
scas
jb
sbb
es
sbb
popf
inc
adc
aas
inc
shll
mov
push
xchg
add
bnd
cmc
loop
cmp
dec
sbb
push
into
popa
xchg
je
cmp
sub
inc
xchg
push
jmp
xchg
mov
div
lcall
add
adc
cmp
pop
dec
stos
inc
pop
mov
pusha
lock
jmp
mov
lcall
pusha
and
movsb
std
sub
push
icebp
adc
pop
pop
rorl
xlat
add
cmp
fisttps
lcall
sbb
mov
ljmp
pusha
pusha
push
test
call
xor
aaa
pusha
ret
jb
iret
add
inc
mov
sub
testl
int
lret
push
push
out
inc
sbb
mov
and
jo
push
arpl
push
xchg
ljmp
lret
mov
and
xchg
push
xchg
enter
outsb
out
pop
cs
out
and
jmp
jbe
mov
sbb
rolb
push
mov
or
jne
cs
pop
pushf
push
adc
fwait
sub
inc
ja
lret
push
cli
outsb
pop
cmpsl
push
cmp
fwait
inc
test
enter
dec
test
sbb
pop
rcrl
out
push
mov
dec
pop
push
push
sbb
push
sbb
xor
jb
sub
les
sub
cmpsb
fstpl
pop
pop
daa
sub
popa
aam
icebp
inc
lods
int
cwtl
xor
mov
push
mov
and
inc
rcrl
stos
and
shlb
iret
sub
inc
lea
dec
sahf
decl
cwtl
inc
gs
cmp
daa
xlat
mov
pop
xorl
mov
inc
imulb
and
push
test
push
mov
pushf
add
je
jns
int3
lahf
icebp
sub
inc
dec
mov
dec
cwtl
adc
lret
and
into
mov
xor
push
add
ljmp
adc
adc
test
je
mov
cmp
add
xorb
pop
pop
loope
and
das
adc
mov
dec
pop
push
pop
in
sub
jp
aam
divb
jns
test
pmulhuw
sub
repnz
adc
scas
repz
mov
stc
mov
sub
jno
ljmp
xchg
test
roll
inc
mov
cmp
push
loope
outsb
rcll
test
xchg
mov
inc
dec
lea
mov
fwait
pusha
imul
cmpsb
pop
xor
out
and
mov
dec
adc
div
mov
xor
xchg
out
pop
movsb
iret
pop
and
stc
fbstp
fiaddl
lea
add
aad
xchg
or
aad
xchg
push
pusha
outsb
or
dec
andl
add
pop
jp
mov
push
mov
mov
pop
test
push
mov
maskmovq
imull
mov
mov
jmp
mov
cmpsl
push
sub
loopne
inc
pop
ret
pop
inc
imul
negb
outsb
xchg
in
xor
xchg
dec
ret
mov
or
test
js
inc
sbb
in
push
int3
pusha
sub
mov
xchg
mov
lret
jnp
jle
mov
out
lea
and
xlat
aad
mov
mov
inc
cmpsl
fstpl
ret
jge
mov
push
repnz
adc
and
jb
sub
cwtl
push
inc
data16
jbe
inc
inc
push
xor
pop
das
sub
rorb
push
hlt
enter
jl
testb
repz
or
jno
rcll
test
mov
gs
xchg
xchg
rcll
fmull
decl
add
xor
jmp
sub
adc
mov
push
cwtl
jns
lahf
dec
mov
sub
std
xor
push
lret
pop
add
loopne
mov
push
mov
cmp
out
hlt
mov
pop
push
and
les
xchg
sbb
rcr
loope
movsl
mov
loopne
aaa
push
lahf
notb
incb
mov
sub
adc
sub
dec
cmpsb
sbb
fdivs
add
fs
mov
dec
adc
push
notb
xchg
sub
mov
sbb
xchg
divb
xor
push
pop
inc
sub
xor
fimull
jle
jne
hlt
mov
cmp
mov
loopne
adc
push
mov
jo
into
xchg
fimull
mov
subb
and
cmp
in
out
add
cwtl
cmc
push
cmpb
cmpsb
pusha
scas
push
les
pop
pop
rcrb
xor
pop
jle
inc
mov
push
and
les
push
notl
mov
cmp
in
push
mov
addr16
add
mov
xlat
mov
fsubrs
inc
xchg
push
test
cmpsl
mov
cmp
shll
in
out
shl
int3
int
mov
popf
outsl
xlat
call
xchg
sbb
xchg
push
lret
loopne
mov
std
mov
lods
ficoml
scas
cmp
lcall
adc
shl
fisubl
sbb
sbb
or
fidivs
insl
mov
rcll
clc
mov
jnp
andb
push
lret
adc
push
pop
movsb
xchg
out
sub
iret
sub
jbe
lods
mov
inc
xchg
arpl
cmp
push
stos
test
and
dec
negb
jne
shlb
pusha
movsb
iret
add
lea
mov
xchg
aad
push
sub
xchg
mov
mov
add
or
ss
lods
push
into
shll
fistpll
and
sbb
popf
test
cmpsb
push
in
pop
add
icebp
inc
push
xchg
add
jmp
push
nop
mov
cmp
fcomps
in
sub
in
ret
inc
lock
inc
xor
mov
mov
in
lock
aaa
mov
aaa
sub
jbe
int
cmp
je
rcll
push
jp
mov
add
dec
or
bound
xor
sbb
ljmp
test
out
add
pusha
push
repnz
add
add
inc
bndldx
or
inc
push
and
shll
and
or
and
mov
ja
xchg
pop
incl
jns
sub
pop
or
adc
repz
sub
dec
out
jecxz
cwtl
inc
imul
xor
add
rorb
and
adc
adc
sub
shll
aaa
inc
shrl
jo
test
subb
movsl
dec
inc
xchg
repnz
arpl
jb
aas
adc
jge
adc
dec
addr16
out
mov
mov
rcr
scas
and
add
adc
xlat
shlb
xorl
shll
mov
jb
mov
sub
mov
jb
popf
lods
xchg
adc
mov
mov
jmp
lret
pop
bound
inc
ja
dec
arpl
loope
mov
insl
outsl
xchg
mov
out
fsub
lods
adc
psubd
insl
sbb
out
adc
out
lahf
mov
inc
xor
test
ss
out
ficoml
adc
push
fldt
and
nop
or
call
inc
xor
dec
jge
xor
cmpps
pop
sbb
ljmp
outsb
jp
push
imul
lcall
mov
fildl
xchg
sub
divl
xchg
js
enter
mov
inc
jb
dec
fwait
mov
add
insl
pushf
das
movsb
aas
jmp
hlt
cmp
inc
mov
ja
adc
cltd
movsl
out
and
subb
sub
add
xor
test
movsl
and
fidivs
jo
push
sarb
cmp
or
add
aaa
mov
ret
mov
dec
ret
loop
inc
fs
ljmp
inc
jne
mov
nop
jo
push
lds
andb
divb
loop
lock
sub
dec
mov
cmpsb
faddl
dec
pop
je
andb
out
movsb
inc
pop
ret
lea
incb
test
dec
jbe
pop
lret
scas
xlat
cmp
mov
sub
call
insb
fcomps
popa
shrb
repnz
and
fisubs
sub
mov
pop
pop
ds
sbb
stc
xor
inc
arpl
pusha
fcoms
enter
jb
xchg
push
dec
xchg
inc
mov
dec
xor
push
lret
sbb
jecxz
xchg
loope
sbb
dec
adc
and
fs
loop
xor
fmull
jle
dec
movsl
jg
pop
sub
mov
insb
arpl
mov
jno
imul
sbb
push
arpl
pop
mov
mov
jo
sub
add
stos
jo
mov
subps
enter
es
push
mov
adc
xorl
icebp
leave
xchg
aaa
sbb
loop
inc
jae
movsl
imul
rcll
xor
rolb
xchg
xor
cmp
cli
cmpsl
pop
pop
fwait
ljmp
addr16
xchg
sbb
ret
add
push
ret
leave
xlat
cmpsb
sub
mov
xchg
dec
aam
pop
test
xor
fcmovbe
cmp
sbb
sub
push
cmp
adc
sub
inc
cmp
xorl
je
cmp
mov
aam
or
sbb
pusha
lahf
or
hlt
jmp
sub
xchg
dec
pusha
fs
sbb
and
jae
add
and
jno
pop
or
cmc
sbbl
add
jb
dec
dec
hlt
in
loope
bound
inc
dec
sub
inc
jbe
inc
in
dec
mov
xchg
cs
popf
dec
mov
mov
xor
stc
and
xor
mov
push
push
mov
dec
fmul
xchg
loop
mov
cltd
negb
enter
retw
sbb
sbb
or
jbe
xchg
insb
flds
mov
outsb
hlt
and
push
rcrb
mov
sbb
mov
jmp
cmp
inc
ss
adc
jae
mov
mov
fiaddl
jecxz
outsb
mov
xchg
xchg
arpl
out
in
add
test
push
pop
insl
and
push
and
out
lds
popa
test
pop
imul
imul
inc
icebp
int3
movsl
adc
xchg
fiaddl
sub
mov
dec
push
xor
pop
sub
cmp
lods
sti
inc
jo
dec
repnz
mov
pop
bound
insl
shlb
mov
out
mov
inc
test
dec
xchg
sub
add
jbe
sub
clc
and
sbb
fwait
cmc
test
divb
ret
in
mov
dec
mov
jle
mov
dec
outsb
jno
fisttps
sub
in
cmp
mov
xchg
rcrb
rorl
mov
les
jb
out
or
mov
lret
inc
mov
dec
sahf
movsb
push
mov
jns
pop
and
ljmp
inc
cmpsb
movb
fsubl
sub
bound
pop
hlt
arpl
jne
les
cmc
mov
and
mov
xor
push
jne
int
xchg
rolb
adc
dec
popa
cmp
cwtl
mov
pop
leave
xchg
out
sub
sub
out
mov
jne
xchg
mov
jecxz
cmpsl
filds
lret
xchg
repnz
add
mov
into
insl
xchg
ja
vpmacsdql
inc
mov
mov
mov
pop
mov
popf
inc
fsub
loop
ja
or
push
adc
in
das
push
adc
not
clc
dec
dec
icebp
cwtl
movsl
ja
fcmovu
out
xlat
pop
mov
pushf
les
dec
dec
jmp
movsl
fabs
movsl
sbb
clc
sub
pushf
push
out
out
mov
mov
stc
adc
and
and
lcall
stc
je
push
imul
fists
adc
ficompl
sbb
and
push
cmp
js
mov
hlt
xchg
pusha
aas
lea
mov
pop
cmp
inc
sub
or
insl
dec
dec
shl
sub
sub
movsb
test
or
mov
dec
jecxz
sahf
sbb
fimull
test
hlt
sub
mov
pop
cwtl
mov
cmp
rcr
fbld
insb
js
incl
jp
sbb
push
jbe
and
mov
inc
sub
movlps
sahf
push
mov
das
xchg
lahf
loop
loop
push
fwait
sub
out
dec
inc
jo
fdivp
mov
cmp
arpl
lcall
xor
lds
std
pop
call
shlb
cmc
stc
ja
fstl
push
mov
adc
ljmp
in
sub
add
shrb
add
ret
mov
sbb
sbbl
mov
test
dec
xchg
aam
and
daa
cwtl
pop
push
push
test
pop
mov
mov
xor
fwait
out
cmpsb
fucom
aaa
jp
mov
xchg
das
inc
pop
jle
cs
mov
cli
fstpl
sub
cltd
outsb
xor
or
test
cmp
cmpsl
jae
mov
push
pop
pop
lcall
sub
pusha
xor
jo
xchg
insl
inc
notl
cmp
add
sbb
xchg
mov
mov
cmp
mov
mov
push
mov
mov
mov
sbb
push
mov
inc
cwtl
adc
stos
push
jmp
jbe
test
fimull
outsl
and
loop
cwtl
jbe
js
fwait
xlat
cmpsb
pop
icebp
mov
daa
xor
fs
adc
lret
and
das
rcll
adc
jg
xchg
sub
dec
loopew
cmp
fildll
mov
int3
cltd
out
jnp
mov
adc
or
lods
ds
fsubrp
repz
ljmp
sarb
push
imulb
dec
outsb
test
and
pop
push
or
fs
arpl
and
adc
test
bound
in
mov
sbb
sub
clc
sub
and
int3
adc
mov
xchg
loope
lds
sub
not
loope
add
push
sub
jb
fwait
or
jo
addr16
mov
negb
addr16
iret
jae
or
sbb
daa
mov
sbb
cwtl
cmpsb
sarl
mov
jb
and
push
sbb
out
movsb
add
pop
xchg
lea
ret
pop
ret
xor
cwtl
je
xchg
pop
lods
mov
jns
mov
leave
lret
popf
add
jl
push
addr16
lea
adc
pop
mov
ss
in
push
aaa
jne
or
insb
aaa
xlat
scas
lahf
fsubrs
pop
pop
pop
adc
out
scas
lods
leave
das
and
mov
addl
enter
mov
cmpsb
mov
stos
xchg
inc
dec
mov
insb
loop
lret
arpl
into
and
repz
fs
aaa
jg
std
or
push
push
popa
pop
mov
aaa
shlb
mov
push
add
push
or
ljmp
fdivrs
sub
out
lods
pop
push
hlt
add
mov
pushf
das
rclb
and
test
cld
out
sbb
dec
inc
push
inc
inc
imul
out
loope
dec
mov
dec
add
dec
adc
cld
fwait
jnp
sbb
nop
flds
loope
insb
push
dec
bound
mov
push
and
cli
test
adc
shll
push
cmp
cmc
pop
into
ljmp
push
cli
mov
and
es
fisubl
movsb
insb
pop
pop
push
and
daa
mov
repnz
stos
xchg
out
push
add
push
push
orl
mov
fs
ret
and
shrb
sub
mov
push
lds
pop
jno
leave
fbld
xor
insb
cmc
inc
fisubl
shr
mov
cmp
xchg
es
mov
push
sub
out
flds
mov
cmc
movsb
and
mov
jecxz
pop
in
shl
mov
mov
call
or
inc
jb
in
push
push
mov
xchg
xor
das
xchg
push
pop
mov
test
out
nop
mov
jno
sub
ret
inc
cmp
loop
sarl
mov
rclb
stos
aaa
js
sbb
pop
push
sbb
xchg
lcall
mov
enter
cld
decl
popf
ret
and
pop
mov
sub
pop
cmp
pop
pop
mov
xchg
in
inc
out
divb
pusha
xlat
pop
jecxz
push
data16
sub
xchg
ja
add
or
je
mov
mov
pop
arpl
mov
dec
pop
push
cld
dec
sub
xchg
and
cmc
add
sbb
jecxz
loop
sbb
and
in
cmp
push
mov
hlt
xchg
arpl
call
testb
cmc
test
out
xchg
movsl
popf
sub
lock
pushf
mov
std
fbstp
push
les
out
sub
out
jp
cmc
dec
cwtl
push
jg
outsl
ret
and
std
mov
adc
test
and
pop
les
or
adc
xchg
inc
mov
mov
stos
imul
addr16
repnz
cmpsl
pop
xor
jl
xchg
ljmp
fistpll
adc
jmp
xchg
sub
xchg
adc
loop
sbb
mov
or
sbb
test
mull
sub
repz
ficoms
xor
call
in
xor
mov
xchg
dec
inc
shlb
xchg
fwait
adc
or
test
cmp
and
aad
xor
add
push
dec
sub
xchg
adc
xchg
and
ficompl
add
mov
lcall
imul
js
pop
ficompl
push
imul
ljmp
sahf
imul
test
inc
and
stos
in
int3
adcb
out
mov
imul
dec
out
jle
or
push
fimull
fwait
roll
rolb
gs
das
adc
outsb
pop
sub
mov
sbb
inc
xor
inc
xchg
pop
inc
xchg
mov
sub
out
dec
popf
dec
lret
mov
mov
ret
pop
hlt
mov
mov
pop
and
mov
ss
fists
std
fidivl
sahf
push
pushf
dec
dec
push
ss
lods
ja
andb
imul
loopne
mov
lods
dec
imul
jne
fcompl
sub
mov
add
jecxz
adc
lods
daa
in
mov
stc
imul
ret
ss
push
lret
pushf
iret
add
lods
je
xor
rclb
sbb
jno
bound
jbe
aaa
xchg
cmpl
outsl
fs
sub
push
cwtl
mov
sub
negb
loopne
ljmp
xchg
fs
mov
inc
mov
add
adc
in
mov
es
pop
xchg
ficomps
inc
es
aaa
call
loop
push
dec
sbb
je
dec
push
dec
push
inc
add
test
test
subl
add
add
pusha
insl
pop
movsb
inc
and
inc
pop
xor
icebp
insl
test
jae
jmp
adc
and
mov
dec
push
push
insl
imull
pop
xchg
push
dec
insb
ljmp
inc
push
std
ds
sub
movsl
pusha
rcrl
sbb
mov
dec
hlt
push
push
mov
xlat
push
imul
cli
lret
mov
sub
aam
mov
push
rcrb
in
mov
lcall
fcmovnbe
dec
rcrl
or
in
sbb
enter
clc
xchg
jl
fisttpl
roll
mov
jecxz
arpl
shll
loope
adc
ret
pop
mov
outsb
lods
in
ret
icebp
fwait
xchg
ljmp
inc
push
enter
push
stc
pusha
loop
hlt
pusha
dec
push
aam
sub
dec
jbe
scas
xor
push
jne
dec
xchg
mov
mov
fcmovnbe
push
sub
scas
sbb
hlt
pusha
add
mov
mov
mov
gs
lcall
adc
and
iret
and
loop
out
push
inc
mov
pop
in
std
repnz
jno
hlt
inc
outsb
mov
cld
mov
push
out
and
adc
pop
sbbl
xor
scas
mov
outsb
sahf
push
insl
dec
and
mov
mov
and
xor
mov
inc
stos
lcall
mov
es
fndisi(8087
inc
outsb
les
decl
add
ss
add
cmp
push
in
xchg
push
sbb
adc
mov
jge
aas
popf
fs
loope
aas
sub
into
ret
and
lock
in
movaps
cmpl
inc
shlb
aam
jmp
jecxz
bound
mov
mov
pop
inc
sbbb
arpl
push
and
pop
mov
inc
mov
sub
push
scas
sahf
shl
hlt
clc
lds
aaa
out
inc
popa
pop
jmp
push
push
pop
push
mov
mov
cltd
mov
scas
inc
insb
push
addr16
rol
hlt
test
push
jb
jne
movsl
push
nop
shlb
mov
mov
inc
mov
jg
jg
or
scas
loopne
dec
mov
xor
xor
outsb
dec
scas
add
stos
mov
xchg
es
mov
and
inc
xchg
inc
add
push
push
push
push
outsb
add
add
and
or
lock
cmc
mov
pop
jb
push
fnstsw
mov
ljmp
cld
dec
insb
scas
and
rolb
faddp
and
sub
and
inc
je
cmp
jns
jmp
data16
xchg
sarb
pop
das
test
sbbl
pop
out
outsb
ret
dec
call
fisttpll
cwtl
xchg
mov
stos
jg
mov
mov
sarb
fs
dec
pop
lods
fcmovbe
adc
popf
lea
andb
sub
enter
adc
mov
xchg
loope
loop
fnclex
lret
test
mov
nop
adc
add
xchg
cmc
shrl
addr16
jge
mov
movsl
adc
inc
mov
stos
pusha
inc
mov
push
or
insl
cmpsl
jo
sbb
adcb
cli
or
test
das
rcrb
mov
push
std
and
popa
mov
ss
cmp
sbb
jno
vzeroall
jno
ja
or
bound
in
sub
jecxz
movsb
push
mov
or
mov
adc
push
ljmp
cmpsl
test
jbe
pop
xor
lods
pminsw
inc
into
mov
sbb
xor
shl
pop
in
adc
cmp
arpl
jmp
mov
mov
and
ret
xor
icebp
bound
push
loope
daa
xor
sub
out
call
iret
dec
cmp
ret
sub
loope
aaa
je
insb
mov
xor
adc
xorl
dec
in
lcall
nop
scas
aaa
jmp
je
cmp
ds
fisttpll
popa
clc
aaa
pushf
jb
cmpsl
mov
cmpsl
pushf
mov
and
inc
hlt
mov
insb
mov
adc
push
jne
and
daa
int
insl
mov
inc
add
and
lea
test
cmp
mov
movsl
out
xor
daa
push
outsb
add
sbb
sbb
dec
dec
test
sbb
pusha
jnp
sub
add
fldcw
cmpsl
adcl
pause
adc
es
fadds
inc
dec
mov
daa
aas
mov
fldl
mov
lods
mov
jb,pn
shll
jmp
pop
std
mov
fnstsw
xor
xor
xor
jbe
adc
inc
fidivl
push
std
mov
mov
mov
popf
loop
jno
test
inc
dec
mov
rolb
je
rolb
mov
and
insl
aaa
xor
inc
cmpsb
outsb
mov
lock
in
mov
sub
fnstenv
mov
shrl
cwtl
mov
pop
or
xchg
pop
mov
xchg
cmp
fldt
jmp
pop
stos
xor
popf
ret
add
jno
mov
arpl
jmp
sarl
ljmp
sub
aaa
popa
je
out
push
fwait
ficompl
rcr
adc
fdivr
insb
sbb
xor
cmpsl
out
mov
jns
cmpsl
test
jnp
fsubr
dec
mov
loope
lcall
mov
out
and
mov
movsl
mov
mov
xchg
mov
shrl
xchg
inc
dec
xchg
push
add
jmp
mov
jno
xor
push
pop
iret
ljmp
outsb
icebp
test
inc
out
movsl
push
sysexit
fstpl
xchg
jmp
insl
decl
aad
mov
mov
jmp
and
sbbb
bound
jnp
cs
xchg
mov
and
push
cmpsb
out
outsl
stos
mov
mov
aam
adc
out
xor
insb
xor
push
sub
adc
push
dec
jp
fidivl
lods
dec
out
mov
push
dec
lret
inc
push
jne
fsubl
xor
aas
and
cmpsl
fisubrs
mov
mov
andl
xchg
xchg
sub
mov
int
orl
xlat
loop
movsl
loopne
mov
ljmp
push
push
xchg
dec
or
sub
mov
xor
pop
out
jno
push
ljmp
sub
mov
ficompl
inc
pop
mov
aad
xchg
cltd
shrl
pop
push
sub
mov
push
loopne
movsl
push
add
hlt
push
dec
and
pop
dec
stos
insb
jmp
repnz
das
lret
jp
and
push
and
and
mov
daa
mov
outsb
and
mov
jmp
xchg
fnsave
sbb
lret
clc
pop
sub
xchg
and
inc
and
jb
sbbl
enter
in
popa
inc
ud0
nop
fbstp
dec
sub
in
sbb
enter
push
fidivl
xchg
aam
dec
es
adc
push
sti
fistpll
jno
sub
pop
mov
mov
aas
std
cmpsl
and
rcll
jo
call
jb
add
mov
sub
aam
js
and
loop
inc
xchg
xor
testl
das
shll
sub
xchg
push
ljmp
xor
sub
xchg
movsb
dec
push
jo
add
mov
sub
dec
repnz
je
ja
sbb
loop
sub
add
jl
pop
cmp
lods
jbe
cld
stos
push
lret
xor
test
mov
daa
adc
mov
inc
mov
xchg
dec
inc
es
fisttpl
inc
cld
and
jno
xor
rolb
mov
rorl
inc
test
jnp
aaa
adc
dec
popa
mov
movsl
lods
pusha
aad
sub
add
daa
ds
fists
sub
insb
mov
das
push
outsb
stc
shrb
inc
xchg
push
scas
adc
test
scas
hlt
xorb
jne
js
outsb
pushf
push
mov
inc
fldt
cs
mov
fs
pop
xor
inc
scas
mov
dec
lcall
lds
mov
test
arpl
shl
aas
je
pop
mov
ret
repnz
xchg
loopne
xchg
pop
sub
mov
sbbl
push
out
and
add
sahf
iret
and
addr16
dec
xlat
inc
fisubl
add
and
lods
mov
enter
dec
je
mov
inc
add
jp
idivl
jb
xchg
repz
in
aas
lret
jge
fs
out
pop
enter
stc
push
push
ret
push
pop
mov
dec
adc
add
pop
dec
lret
arpl
jmp
mov
lret
insb
jg
and
ljmp
mov
xchg
loopne
bound
aam
and
pushf
call
mov
cmp
jp
imul
and
push
inc
sbb
outsl
fbld
arpl
adc
and
jb
in
aas
sbb
mov
rorb
fidivrs
jne
jb
jmp
inc
or
adc
pop
cwtl
jno
adc
cmp
imul
or
in
adc
push
or
leave
mov
pusha
adc
cmp
pusha
add
les
loop
test
jne
loope
js
xchg
dec
sbb
xor
cmp
bound
inc
shlb
pop
sub
pusha
or
or
push
aaa
jecxz
test
xchg
roll
test
xor
mov
cmpsb
adc
jecxz
pop
insl
xor
inc
jb
pop
mov
aas
fiaddl
mov
into
add
rcrb
mov
xchg
push
arpl
pop
push
lods
and
je
pusha
and
pop
mov
insl
arpl
ds
int3
fldenv
fnstcw
mov
xchg
push
mov
dec
mov
xor
fsts
mov
inc
fdivrs
mov
scas
lock
pop
popa
pop
jmp
lcall
aas
dec
mov
mov
mov
jbe
pop
mov
addr16
insl
lds
loop
push
pusha
and
js
scas
dec
mov
pop
add
jb
mov
jns
mov
push
xor
xchg
mov
inc
and
fs
xor
arpl
and
adcb
dec
cwtl
mov
mulb
pop
adc
xor
dec
cltd
mov
mov
sbb
push
hlt
or
push
dec
popf
xchg
push
adc
pop
mov
mov
hlt
mov
je
cmp
inc
hlt
cmp
push
cmp
arpl
mov
mov
arpl
lods
rcr
jne
jne
and
dec
cmp
ret
lods
xchg
daa
jl
hlt
aaa
mov
sti
faddp
sub
shll
mov
jb
loop
enter
js
mov
inc
das
outsb
push
push
xchg
mov
cmp
jg
jae
lock
mov
or
test
push
fs
fldenv
scas
loope
jo
dec
cltd
xchg
into
sbb
lock
movb
push
arpl
hlt
lock
insb
stc
inc
fldenv
jne
insb
hlt
ljmp
lret
inc
jne
dec
stc
jge
scas
push
hlt
dec
hlt
icebp
push
mov
data16
ret
inc
addr16
arpl
xchg
int3
mov
movsb
in
mov
popf
push
shlb
mov
or
mov
adc
cmc
or
and
imul
test
sub
rcll
ret
jmp
mov
popa
jp
adc
xor
test
fs
outsb
adc
jno
enter
jbe
push
ljmp
outsb
mov
cwtl
dec
mov
inc
out
loop
cmpsl
pop
imul
xchg
push
push
je
xor
mov
fsubs
mov
dec
mov
sbb
out
xor
je
sub
lea
xchg
rcl
xchg
mov
or
lret
inc
adc
sub
cmpsl
ljmp
in
jle
popl
mov
lock
cmc
jge
out
in
pop
mov
mov
push
jg
out
fnstsw
popa
fs
jnp
cmp
loop
mov
pusha
ret
cmc
xor
push
mov
hlt
icebp
mov
push
je
sub
push
add
repnz
mov
les
enter
and
and
xchg
mov
mov
xchg
imull
jne
push
loope
ljmp
ss
nop
in
and
and
jp
loope
inc
sbb
mov
add
mov
and
mov
test
mov
push
and
mov
icebp
ds
push
push
addb
mulb
hlt
mov
xor
lock
inc
fiaddl
dec
fildl
ss
pop
jmp
cmc
stc
push
sbb
and
cmpsl
ljmp
fiadds
xchg
mov
out
fidivrl
push
mov
int3
pop
testl
cld
adc
clc
cmc
in
xor
aas
aaa
fsubrl
add
lods
pushf
and
cmp
sub
cmp
test
push
in
mov
jns
sub
in
stos
sti
das
pop
into
sub
aaa
hlt
pusha
sub
jmp
pushf
leave
pop
aaa
and
jb
and
cltd
cltd
or
cmpsl
inc
lret
pusha
mov
stc
push
loop
cmp
xor
insb
mov
jno
sub
in
adc
xchg
test
stc
cld
pop
addr16
scas
imul
sbb
mov
sub
sbb
jb
mov
cmc
cmpsl
ret
and
mov
xchg
push
loop
inc
icebp
adc
mov
jl
lock
sti
int
out
jmp
push
fs
cld
lret
loop
xchg
cmc
cwtl
and
push
shlb
dec
jle
or
daa
inc
pop
mov
push
scas
jmp
out
rorl
jae
movsb
jae
sbb
scas
dec
mov
outsb
mov
mov
insb
popa
sub
ja
pusha
push
mov
mov
arpl
ljmp
mov
hlt
mov
inc
mov
jecxz
aaa
sub
shl
mov
in
enter
rolb
mov
outsb
inc
aaa
add
xchg
cmpsl
arpl
jns
mov
loop
inc
xor
dec
sbb
lock
cmp
in
xorl
mov
test
insl
dec
out
push
nop
pop
adc
fdiv
and
mov
jo
inc
testb
dec
push
xchg
jae
stos
pop
imul
fistpll
or
imul
push
loopne
addl
fiaddl
rcrl
fildl
sub
mov
aad
dec
mov
les
out
fbld
stos
fdivrl
cmc
test
stos
pop
div
imul
loop
fisubl
cmp
adc
mov
cmp
push
je
dec
fistps
repnz
fidivl
std
push
xchg
mov
mov
aas
rclb
repz
jp
call
sub
push
mov
jecxz
dec
push
pushf
out
push
add
jp
adc
in
popa
lcall
ficompl
into
fs
xor
dec
sbb
popf
ljmp
cmp
outsb
xlat
jae
push
arpl
je
dec
jnp
stos
add
shrb
pusha
call
push
fimull
xchg
nop
adc
inc
mov
inc
mov
or
mov
jecxz
aaa
shll
or
cmp
shll
jne
mov
mov
loope
xor
dec
xchg
andb
sub
push
and
arpl
stos
jecxz
mov
xchg
lret
std
inc
or
mov
and
loopne
andl
popa
orb
inc
inc
push
ror
cmp
push
aad
sub
shrl
lret
and
or
lock
cltd
dec
bnd
cmovb
adc
shll
and
fstps
push
mov
cmp
push
std
mov
mov
mov
dec
mov
and
jge
movsl
ja
fidivrl
push
sbb
mov
outsb
pop
cltd
push
mov
out
inc
push
push
inc
aam
pop
and
outsb
sub
rclb
jl
enter
fisttpl
mov
clc
mov
loop
fldl
pusha
outsl
aaa
xorl
pop
fwait
aaa
inc
jb
fldenv
lret
inc
pusha
pusha
cmp
xor
les
lret
icebp
lret
fisubl
add
push
sbb
pop
xchg
pusha
jne
dec
fs
insb
xchg
imulb
jp
or
dec
push
inc
rcll
cmp
sahf
lret
andl
pushf
pop
jae
loopne
xchg
pusha
push
push
push
ss
jo
push
ljmp
push
enter
jge
xchg
pusha
pop
and
and
and
lock
mov
insl
ss
rorb
lret
jge
test
sub
int3
xchg
cmp
je
jae
jo
pusha
popa
int
ficompl
adc
loop
pop
sub
out
call
sub
sub
ss
push
scas
dec
testb
xor
das
sub
ret
adc
lret
popl
pusha
mov
into
in
push
add
xor
fwait
push
mov
xchg
loop
pop
in
xchg
xchg
and
negb
mov
sahf
pushf
and
jb
es
mov
jl
stc
sub
and
loopne
fwait
push
jno
test
xchg
push
fwait
pop
mov
jmp
sub
xorl
xor
loop
cmp
jmp
sub
add
ret
cmpsb
sbb
xchg
pusha
filds
mull
fwait
aaa
xchg
jb
je
shl
xor
cli
push
je
push
adc
sbbb
inc
cmc
push
loope
in
pusha
cmp
jae
and
stos
sbb
rol
push
rcll
adc
lret
add
shlb
divb
in
shll
movsl
cwtl
je
fs
popa
cmp
repz
push
roll
loope
jp
push
pop
xchg
pop
push
es
lods
dec
push
mov
subb
or
popa
aam
insl
ljmp
add
movsl
mov
js
popf
sbb
sahf
pop
push
mov
pushf
fisubrs
dec
cwtl
and
mov
repz
vsubps
ljmp
or
js
das
mov
int3
push
test
rcrb
mov
pusha
and
stos
arpl
and
and
arpl
push
jbe
inc
sbb
aaa
jecxz
ljmp
lock
aaa
cltd
mov
xor
sub
imul
popf
adc
pop
mov
out
das
outsb
jo
mov
pop
pop
scas
jae
ss
push
shrb
ror
rolb
in
outsb
pop
sbb
stc
test
call
lret
dec
ret
jae
fidivs
xchg
das
lock
aaa
add
bound
rcll
repnz
xor
lock
pop
andb
push
and
rolb
popa
cmp
pop
add
bound
rcl
repnz
scas
pop
and
and
daa
out
dec
push
shll
sbb
dec
push
xchg
and
sub
js
xchg
push
jnp
xor
stos
sub
and
adc
enter
adc
inc
pminsw
inc
imul
call
lahf
mov
push
nop
xor
js
add
jecxz
push
hlt
jp
ficompl
sub
jno
pop
xchg
cltd
arpl
add
bound
fcoml
and
lods
xor
mov
dec
rcl
sahf
repnz
scas
out
shlb
sub
or
cwtl
lds
lret
xor
arpl
enter
push
pushf
ss
movsl
jbe
cs
bnd
mov
jnp
jbe
imul
adc
loopne
in
jmp
pop
push
xchg
mov
mov
iret
jecxz,pn
popa
cmpsl
mov
cmp
popa
mov
push
mov
std
mov
ret
cmp
inc
inc
movb
addr16
sbb
ss
mov
js
divb
add
cli
and
loopne
or
notb
jne
shlb
aas
sarl
popa
movsl
jp
movsl
and
lods
es
push
aam
dec
xchg
inc
outsb
xorl
xchg
es
push
insb
xchg
es
adc
xor
mov
xchg
mov
xchg
mov
cvtpi2ps
add
movb
mov
repnz
push
ja
testb
jle
repnz
cmpsb
es
testb
push
xor
scas
enter
inc
ljmp
push
lret
fbld
push
out
xor
sub
sbb
dec
jecxz
es
cld
sbb
rcrl
and
call
mov
adcb
jo
mov
les
push
pusha
push
jnp
jecxz
mov
cmpsl
mov
notb
mov
insl
mov
repnz
adc
repz
inc
xchg
sbb
mov
sti
cmp
mov
and
push
and
das
repnz
xor
xor
xchg
jnp
jbe
shll
mov
mov
push
pop
mov
cmpsb
push
mov
aaa
mov
jno
sahf
insl
jae
sti
sub
jmp
mov
jge
adc
mov
insl
push
add
xor
pop
mov
jb
aam
and
or
jmp
ud0
mov
jge
jecxz
xor
jae
adc
mov
add
xor
cld
daa
in
inc
sbb
arpl
data16
aaa
aad
lcall
cmp
xlat
cmc
das
insl
mov
jae
aam
push
loope
dec
imull
int
je
push
divl
xchg
pop
fwait
ljmp
fwait
insb
and
xchg
aaa
mov
pop
ret
mov
cwtl
pusha
in
jae
aas
lock
cmc
sbb
stos
es
lret
mov
repnz
mov
gs
mov
rolb
pushf
mov
xchg
incl
pop
and
jl
addr16
lods
cwtl
es
lret
lret
pop
dec
inc
insb
sub
dec
pop
jns
xor
rep
outsb
jnp
shll
lahf
xchg
fnsave
and
loopne
les
sub
std
lret
sbb
mov
je
xchg
cmpsb
je
bound
jl
in
dec
push
pop
pop
popa
add
bound
es
test
jnp
push
out
outsb
loopne
and
mov
outsb
aaa
dec
inc
mov
testb
cltd
and
cmc
sub
mov
sbb
roll
loop
ja
jge
cmc
test
jno
stc
lcall
pop
jl
ljmp
mov
daa
push
aam
or
pop
xor
in
xor
add
push
inc
mov
orl
testl
inc
test
movsb
lahf
sub
movsb
lods
xor
jnp
sbb
cltd
gs
ror
rcr
xchg
jns
xchg
jb
jbe
arpl
add
inc
mov
arpl
hlt
pop
adc
test
push
and
mov
adc
mov
lods
imul
push
jb
mov
cmp
mov
sub
sub
inc
cmc
enter
pop
jge
xchg
sbb
loop
sahf
es
cwtl
and
jbe
repnz
movsb
sbb
push
test
imul
repnz
movsl
sbb
mov
aam
jns
hlt
dec
test
pop
stos
cmp
xchg
inc
enter
lea
mov
and
shrb
repnz
inc
mov
int
lret
adc
iret
push
nop
js
push
cwtl
loop
mov
add
pop
testb
dec
dec
daa
or
insb
nop
ficompl
add
add
cwtl
dec
mov
sub
sub
aaa
cmpsl
lahf
cmpsb
sub
cmp
scas
frstor
andl
outsb
cli
jo
les
and
loope
add
mov
jo
xchg
push
inc
insw
rolb
fnsave
adc
sub
sub
or
inc
stos
je
daa
scas
test
cmp
xchg
mov
and
loope
pop
adc
jo
out
mov
pop
jbe
add
adc
mov
push
push
ret
mov
mov
fadd
pusha
push
sub
test
push
les
cwtl
add
loop
loop
daa
andb
add
je
adc
in
sbb
inc
cmc
and
out
jge
mov
pminsw
inc
pushf
mov
negb
sub
add
and
and
sub
arpl
sub
stos
arpl
push
mov
fists
jl
popf
and
mov
sahf
std
mul
addr16
xchg
jl
mov
cli
outsb
and
sub
ret
lahf
out
gs
fwait
xchg
loop
bound
bound
cmp
inc
sbb
adc
push
es
mov
fwait
mov
fwait
pop
shll
lahf
mov
andl
pop
sub
jno
call
push
mov
add
dec
repz
je
repnz
pop
js
xchg
jo
and
pushf
or
push
push
jle
dec
push
neg
faddl
outsb
jl
aad
pop
cmpsl
xchg
ds
jmp
push
mov
hlt
mov
push
in
fnsave
lret
dec
mov
cwtl
ret
ret
cmp
scas
leave
sub
in
and
clc
sarb
je
popa
push
inc
sti
and
xchg
shlb
stos
shl
ret
push
and
xor
icebp
loop
into
arpl
pop
and
mov
or
dec
iret
inc
inc
add
inc
arpl
aas
lret
pop
pusha
inc
int
jmp
adc
outsb
mov
mov
aam
and
int3
insl
lds
push
jne
cmp
stos
mov
cmc
dec
int
pop
ss
in
fsubs
jae
xchg
popa
xor
outsl
idivb
jbe
mov
sbb
xchg
push
idivb
loope
clc
cmpb
out
loope
pusha
sbb
cmp
addb
pushl
cld
inc
aaa
xor
lahf
and
sub
or
test
pop
in
sub
loop
sbb
xor
in
inc
sub
and
aas
cmp
icebp
js
repnz
or
or
mov
xchg
cwtl
lock
std
jb
push
or
dec
xor
xchg
dec
xor
mov
cs
sub
jecxz
jp
imul
cmp
sbb
inc
sbb
dec
and
divb
mov
mov
aad
pop
pop
xor
pop
xchg
mov
mov
pop
dec
arpl
mov
fisubrl
imul
adc
repnz
icebp
enter
ret
and
imul
mov
mov
aas
inc
xchg
pop
and
sbb
aam
sbb
pop
sbb
stc
mov
rcr
and
pop
pop
adc
loop
fnop
pop
add
aas
lcall
stos
or
sbb
mov
call
jae
and
hlt
dec
mov
popa
das
jg
cld
dec
test
pop
aam
es
jb
jb
testb
shll
scas
into
pusha
imul
mov
sub
lds
xchg
into
es
cmp
sub
adc
hlt
sub
xor
rcll
ret
das
lock
pusha
mov
mov
mov
jb
movsb
jae
cwtl
xor
dec
sbb
sub
push
hlt
outsb
jns
pusha
mull
shld
loope
xchg
push
movsl
fadd
jae
push
int3
scas
mov
ficompl
loope
inc
shlb
sbb
mov
imul
lahf
lcall
pop
push
adc
or
faddp
adc
pusha
pop
push
pop
popa
fcmovu
and
pop
lods
ret
test
cmp
and
jne
nop
push
jae
fisttps
sarb
inc
ficoms
dec
adc
and
mov
loopne
push
push
inc
scas
loopne
nop
test
push
dec
xor
lahf
loop
pop
ds
mov
addr16
das
dec
mov
test
and
push
mov
mov
jb
push
mov
inc
add
in
outsb
dec
sub
inc
rcrb
or
shr
inc
and
sub
adc
push
insb
mov
cmp
outsb
cmp
xchg
loopne
je
add
mov
dec
aas
jge
loope
adc
cli
push
js
push
out
xchg
bnd
rcrl
mov
xchg
xor
cmovs
fwait
decl
mov
popl
xchg
ss
cmp
dec
and
mov
pop
out
fdivrl
sub
mov
mov
ss
in
sub
lret
in
idivl
pusha
test
pop
inc
push
dec
add
pusha
mov
cltd
jg
mov
pop
mov
pop
inc
and
jb
mov
mov
sub
popa
pushf
cmpsb
cmpsb
inc
adc
inc
ds
call
outsb
ds
dec
cwtl
in
leave
jb
fisttpl
das
push
push
pushf
cmpsl
mov
enter
stc
scas
and
push
movb
aad
mov
orb
bound
lock
xchg
jecxz
scas
rorb
stos
and
add
jno
xchg
ljmp
movsl
mov
mov
sti
ret
cmpsb
pop
jecxz
lret
pop
mov
add
push
push
les
push
mov
xchg
mov
mov
stos
mov
mov
cwtl
pop
add
sub
fsubr
movsb
mov
jno
adc
int
arpl
jecxz
sarb
int
leave
pop
or
sbb
sub
xchg
stos
xchg
cmpsb
in
fidivl
cwtl
aad
sbb
pop
mov
je
mov
pushl
pushf
dec
jge
out
adc
mov
fldt
fidivl
outsb
fs
test
xchg
sbb
mov
dec
aas
push
mov
shlb
das
mov
jb
push
fdivrl
mov
stos
cmp
mov
inc
scas
pop
fdivp
jecxz
fsubrp
fs
jne
movsl
sub
lahf
adc
test
fstl
popf
aad
sbb
arpl
loop
push
mov
cmc
shl
jl
jne
aaa
xor
mull
mov
bnd
loopne
sar
fwait
outsb
out
xchg
xchg
cmpsb
lahf
sub
xor
push
dec
cmp
ret
insb
jge
pop
mov
sub
xchg
dec
jg
dec
call
jne
inc
mov
xor
movsb
loop
outsb
insb
pop
data16
pop
xchg
and
push
push
jnp
rcrb
mov
iret
imul
push
xor
jb
and
int
inc
or
mov
in
ret
sahf
dec
das
add
push
lods
outsl
xchg
xchg
pop
loope
arpl
daa
xchg
sub
xor
shlb
ds
or
jecxz
stos
js
xchg
adc
popf
rorl
xchg
repnz
ret
mov
xchg
insl
inc
xchg
dec
and
insl
outsb
mov
loopne
gs
lods
outsb
push
fwait
mov
sub
sbb
xchg
cmpsl
xchg
out
push
push
rorb
dec
pop
add
imul
loopne
negl
push
ret
jns
insb
inc
inc
sti
iret
decl
mov
pop
out
in
ret
lret
lods
repz
xor
cmp
add
loope
sub
jb
push
cltd
mov
sti
in
psadbw
dec
sub
or
loop
cmp
mov
pop
add
jmp
xchg
dec
movsb
add
jl
and
xchg
push
jo
cmp
push
jl
sbb
das
mov
mov
fs
and
das
push
xor
scas
imull
xor
push
mov
mov
pop
sti
movsb
mul
mov
adc
mov
or
fildl
imul
out
sbb
push
jne
lret
je
fildl
push
lcall
jae
scas
and
vpsllq
cli
rcl
mov
push
loope
xchg
and
loopne
test
lock
adc
xchg
aaa
nop
push
dec
sbb
les
fcoms
aad
mov
clc
icebp
cs
xorl
sub
sbb
or
cmp
out
pop
test
int3
xor
icebp
movsb
jne
push
pop
xchg
xchg
push
sbb
mov
sti
and
pop
movsb
pop
popf
or
pop
fistpll
fnsetpm(287
push
pop
lcall
push
fidivs
rcll
lds
idivb
shlb
aad
das
jp
inc
adc
push
sti
xchg
cmp
test
jmp
inc
mov
sarb
xor
xchg
scas
in
icebp
jb
pop
xchg
xor
frstor
shrb
push
fdivs
mov
mov
loop
sarb
jnp
mov
sbb
ljmp
sbb
lret
popa
bound
lds
stc
sub
mov
in
mov
inc
int3
dec
in
jnp
pop
nop
xchg
xchg
test
xor
pop
into
push
cmc
pop
scas
fadd
mov
orb
adc
jns
push
in
insl
lcall
xor
movsb
inc
mov
scas
popf
addl
fisubl
in
pop
mov
jmp
ljmp
xchg
and
in
outsb
stos
lcall
dec
in
pop
mov
aad
or
movsl
mov
imul
pop
xor
mov
insb
jns
inc
sub
scas
popa
inc
sbb
pop
mov
sub
mov
sbb
lret
xchg
jl
call
and
xor
inc
xor
xor
push
clc
bound
faddp
and
out
jb
aas
std
inc
js
repz
adc
cmpsl
add
jecxz
bnd
leave
xchg
je
sub
shll
cmpb
sbb
sarb
jb
pusha
jg
aaa
mov
lret
das
mov
outsl
add
cld
rcll
in
inc
cmp
repz
psubusb
and
je
sub
testb
push
jb
adcb
add
push
adc
jl
jecxz
rolb
jne
push
out
mov
sub
ret
add
fildl
and
loop
push
fdivl
jo
enter
jns
jae
mov
outsl
lea
xchg
mov
and
in
mov
jge
dec
pop
xor
lock
xchg
js
dec
shl
or
fxtract
or
aaa
jecxz
insl
and
lods
test
ljmp
push
push
dec
fcomps
es
jecxz
test
shr
pop
ss
jbe
std
jge
mov
jno
xor
jno
das
lods
int
in
xchg
push
sub
repz
or
pop
outsb
pop
cld
mov
aas
jge
test
movsb
fsubr
dec
adc
or
add
push
jbe
mov
adc
inc
adcb
and
pusha
cmc
mov
popa
cmp
outsb
popf
je
lret
scas
mov
mov
xchg
int
movsl
in
mov
ss
addr16
pop
mov
fucom
adc
push
or
in
stos
push
mov
je
inc
jnp
shll
adc
and
repnz
call
stos
pusha
jnp,pt
dec
cmp
xchg
aam
aaa
mov
lock
fmuls
sub
lret
cmp
mov
xor
mov
and
sub
add
pusha
scas
mov
shlb
fcompl
jb
dec
sbb
and
push
push
loop
lcall
js
mov
inc
imul
push
mov
cmp
cmp
cmpsb
std
adc
cmc
cmp
mov
fidivrs
jmp
inc
addb
mov
pop
add
call
mov
in
popf
sub
mov
loopne
pop
xchg
daa
fsts
out
sub
dec
lods
and
les
jl
mov
mov
stos
xor
mov
mov
adc
les
mov
bound
cmc
inc
stos
push
stos
ljmp
cmc
cwtl
mov
aaa
dec
and
inc
sarb
cmp
fwait
mov
dec
mov
inc
pmulhw
jo
cwtl
movsl
mov
incb
aaa
adc
xorb
sbb
mov
cmpsb
adc
ss
inc
adc
negb
xor
jne
in
cs
dec
sub
sahf
sbb
xor
and
and
mov
in
mov
pop
shrb
test
inc
inc
mov
push
push
lds
shl
dec
icebp
mov
stos
and
negb
xor
mov
adc
bound
cmpsb
loop
rcr
xor
pop
cmpsb
shll
es
fadd
pop
hlt
dec
testl
push
dec
jns
push
mov
sub
jne
cmp
aad
xchg
mov
pop
and
jno
mov
mov
dec
push
sti
scas
inc
and
add
add
loopne
int3
stos
fcoms
add
and
test
push
xchg
sub
test
movsb
mov
in
mov
push
bound
jecxz
and
cmpsb
mov
loop
dec
add
clc
xor
xor
arpl
lods
es
jecxz
xchg
push
dec
cmp
push
ja
jnp
push
rcl
ss
imull
mov
jb
jecxz
xchg
jp
add
cmpsb
imulb
dec
mov
or
mov
aaa
inc
insb
xchg
imul
inc
jb
nop
ss
sbb
fs
scas
dec
call
mov
jb
mov
jmp
jg
fs
lock
arpl
sub
mov
aam
in
nopl
dec
popa
cwtl
push
or
hlt
int3
cmp
mov
cmp
jb
and
jne
sub
into
inc
ja
xor
insb
and
or
cli
mul
pop
cmpsb
add
or
loop
dec
mov
scas
out
fsubrs
push
data16
pusha
lahf
adc
adcl
fcoml
mov
xor
movsb
dec
les
fcomps
jbe
xor
enter
loopne
inc
push
xchg
pop
pop
cltd
in
jno
mov
imul
or
lock
arpl
dec
mul
add
xor
out
sbb
pusha
divb
mov
mov
push
mov
imul
test
push
cs
dec
jnp
jb
mov
mov
dec
shl
movsl
scas
xor
sbb
jbe
and
push
fs
sub
imul
mov
jl
sbb
rcll
mov
inc
cmp
jg
cmc
insb
fistpll
lods
xor
stos
sbb
xor
xchg
enter
adc
loope
inc
dec
jg
jp
movsl
jle
in
pop
sub
cld
sbb
xchg
sahf
push
fdivl
shlb
xchg
bnd
xor
cmc
iret
push
inc
lret
adc
push
inc
cwtl
xchg
adc
xor
stos
test
push
dec
xchg
and
fiadds
inc
leave
or
idivb
pop
xchg
addr16
pop
subb
push
ret
sub
je
js
lods
rcl
mov
pop
in
movsl
ds
andl
and
ret
imul
inc
push
and
movsb
insb
mov
je
dec
dec
push
sahf
mov
rorl
mov
test
mov
loopne
sub
push
xorb
cmpsb
pop
lret
mov
sbb
xchg
cmp
lea
jmp
loop
dec
mov
inc
lcall
loop
mov
sub
loop
icebp
ja
jg
loope
pop
imul
in
dec
out
loope
mov
data16
mov
push
mov
lret
jl
pop
jecxz
or
ljmp
aam
push
add
cld
je
sbb
lcall
push
outsl
cmp
fwait
decl
dec
fnstcw
adc
jmp
testl
inc
jl
lock
xor
sub
push
cwtl
sub
mov
inc
or
jmp
jns
sub
push
imul
or
std
push
pop
cwtl
enter
and
mov
sub
jle
inc
flds
fsubrs
out
pop
testb
jecxz
negb
mov
push
outsb
test
mov
sbb
je
outsb
mov
and
or
cmc
cmpsl
mov
popf
bound
ja
lcall
call
cmp
cmpsl
mov
ret
cld
pop
dec
or
adc
jecxz
sarb
jle
es
andb
jecxz
lret
aaa
cltd
push
addr16
add
jns
out
dec
arpl
loop
mov
mov
gs
mov
sti
out
or
jmp
add
pusha
sbb
pop
xchg
inc
ss
sbb
jb
loopne
insl
in
inc
scas
imul
jge
fisubrl
jnp
inc
mov
ret
popa
sub
mov
xchg
aam
arpl
xchg
and
dec
andl
test
test
clc
jne
sub
or
push
pushf
aas
shlb
clc
adc
shrb
icebp
inc
fsubrs
shll
sub
xor
ds
stos
sub
jecxz
divb
jecxz
lahf
dec
pop
push
xor
les
hlt
ja
iret
repnz
dec
or
inc
nop
pop
movsl
insb
mov
fiadds
std
int3
jp
sub
push
cmc
sub
jne
aaa
mov
addr16
pop
pop
ficomps
lcall
mov
fcomps
add
xorl
mov
scas
repz
fisttpl
mov
dec
loopne
je
pop
cmp
sub
pop
lods
xchg
data16
les
inc
dec
jns
stos
and
in
and
push
loopne
xchg
sbb
subb
push
arpl
add
dec
repz
pop
xor
outsb
inc
loop
addb
jmp
jb
sbb
lret
xor
lret
jne
or
pop
shrb
sbb
stos
lods
jo
jbe
fidivs
sub
push
imul
mov
cwtl
loopne
xor
pop
jne
mov
add
repz
repnz
push
sub
push
mov
xchg
jle
cmpsb
adc
push
jg
data16
pop
lock
and
mov
dec
lods
cmp
lods
mov
cmp
jp
push
repnz
mov
test
push
arpl
jae
xorb
ret
cmc
add
jmp
andb
fwait
loopne
stos
push
pop
mov
pop
in
dec
inc
pusha
adc
aaa
aaa
add
xchg
ss
sub
pusha
or
inc
movsb
lahf
pop
sbb
add
sbb
test
mov
cmc
mov
add
notb
loope
fidivl
lds
jecxz
jae
faddp
jecxz
outsb
and
mov
fidivs
sub
test
in
lock
bound
push
sbbb
inc
shlb
rclb
aaa
fbld
mov
lahf
and
lret
sbb
fcoml
sbb
xor
adc
sbb
cwtl
je
add
xor
adc
mov
adc
in
add
out
roll
es
sbb
dec
arpl
xor
std
pusha
cwtl
clc
or
fs
sub
adc
push
add
xor
pop
aaa
xor
and
push
push
or
movsb
je
in
mov
loope
loope
pusha
sub
orb
push
and
rcrl
les
cmpsl
mov
mov
pop
lods
insl
pusha
adc
and
cmp
pop
pop
pusha
inc
and
orb
add
inc
imul
jg
add
repz
push
xchg
push
cmpsl
sub
cwtl
push
and
pcmpgtw
sub
mov
ffree
inc
mov
int3
test
fwait
xor
fidivrs
sub
addl
sub
mov
lods
adc
inc
arpl
sub
and
xorl
out
lcall
sub
scas
xor
flds
adc
cs
divps
outsb
mov
mov
popa
mov
and
data16
dec
fcoml
push
push
mov
lahf
sbb
add
and
rcll
aad
dec
jl
pop
addb
xor
enter
cmp
clc
xchg
adc
jecxz
std
ffreep
gs
arpl
ljmp
rcl
pop
out
mov
loop
adc
fimuls
sub
sbb
cld
ficompl
lahf
mov
fidivl
sub
and
mov
je
pusha
push
flds
mov
and
xchg
xor
xorb
mov
cmc
and
insb
lods
fld
icebp
pusha
dec
sbb
or
cli
popa
xor
lret
jmp
fwait
rolb
xchg
out
adc
pop
adc
or
inc
xchg
sub
fnstcw
xchg
adcl
mov
test
push
loopne
sub
movsl
std
pop
fwait
sbb
icebp
inc
push
jno
pop
repz
push
arpl
mov
mov
fwait
ret
sbb
in
out
ret
jbe
push
pop
inc
ljmp
sbb
outsb
insb
les
sub
jl
mov
or
shlb
push
inc
fldt
insl
fnstsw
pop
sbb
pop
movsl
fcomi
insb
jb
leave
dec
ss
shrb
sbb
jae
arpl
ljmp
stos
mov
pop
push
and
pushf
mov
mov
inc
sarl
push
xchg
rolb
and
push
cmp
fbld
xor
loop
ret
in
inc
push
xchg
sbb
xor
fisubl
push
shll
jae
mov
add
mov
shlb
dec
cmp
arpl
popa
xchg
test
push
dec
xchg
rol
cwtl
add
mov
adc
inc
pop
fwait
popf
and
dec
xor
mov
push
lea
push
cld
and
les
sbb
mov
sbb
sti
decl
mov
pop
lock
fidivl
outsb
cmc
cli
insl
mov
movsl
adc
sub
mov
je
loope
fldcw
pusha
aaa
fidivl
das
xchg
dec
aad
aaa
ret
in
xchg
and
cltd
inc
int3
jae
jg
std
imul
xchg
lds
or
ss
adc
leave
aad
and
je
movsl
push
es
sub
xor
js
xchg
or
push
xchg
jnp
imul
lret
push
fidivl
xchg
xchg
sub
inc
cltd
je
jb
sti
xchg
add
pop
fsubrl
jne
and
loope
movsb
pop
sub
mov
and
leave
shl
test
sbb
and
wrmsr
pop
sub
xor
xor
push
fnsave
mov
or
mov
push
loop
xlat
sahf
jecxz
subl
stos
stos
push
mov
les
rcrb
sub
fwait
sbb
push
ja
bound
push
stos
mul
sbb
mov
inc
loope
push
fstps
jne
cli
inc
enter
jnp
mov
xor
hlt
daa
adc
mov
leave
mov
inc
jnp
mov
mov
push
lret
nop
ja
ror
and
gs
lods
out
push
das
inc
sub
lcall
xchg
es
cli
in
loope
leave
test
pusha
xor
notl
push
mov
inc
ret
xchg
and
adc
xor
test
push
fbld
sarb
push
pop
xlat
or
xchg
and
lock
lret
es
pusha
sbb
andb
jecxz
cwtl
pushf
das
call
inc
sub
into
movsb
das
lahf
or
popa
xor
push
add
loop
ret
mov
mov
in
dec
rclb
inc
addr16
test
jbe
mov
mov
movsb
or
lds
and
jbe
xor
pop
fists
cmpsb
ret
test
xchg
mov
lret
sub
push
std
test
movsb
out
inc
sub
into
mov
pop
cmc
push
mov
test
nop
xorb
dec
enter
lods
cmovno
pop
fbstp
lods
inc
mov
jecxz
popf
add
ja
cmpsl
add
pop
rcl
and
inc
movsw
dec
movsl
test
in
adc
mov
fsubrp
xchg
add
add
mov
sub
and
fcmovne
inc
fidivs
int3
ret
cmp
and
dec
ljmp
test
xor
xor
ret
adc
push
out
jecxz
jecxz
jl
subl
sbb
dec
mov
test
mov
test
enter
sahf
jge
bound
push
nop
mov
mov
pop
sbb
mov
sub
daa
daa
arpl
push
inc
mov
popa
cs
push
add
fisubrl
fildl
vaddps
add
mov
jo
je
cwtl
adc
mov
xor
xchg
rcrb
imul
fwait
xor
xor
jmp
sahf
fisubl
lods
loope
adc
push
imul
and
jg
jecxz
cmpsb
popf
dec
fdiv
mov
ljmp
push
fildll
wbinvd
hlt
dec
xor
jl
inc
setnp
adc
outsb
repnz
ret
loope
or
mov
mov
push
test
sti
cmp
push
js
push
sar
fldl
addr16
fimull
jne
fildl
jle
das
pusha
fisttps
das
jge
outsb
popf
lods
cmpsl
push
xorl
loop
iret
adc
mov
jae
pop
or
and
push
cmp
shrb
imul
rcll
push
dec
in
loope
and
xchg
mov
inc
out
jns
or
cmp
or
push
xchg
and
cmpsl
push
mov
pop
shlb
pop
cmpsb
xor
push
test
and
jge
repz
sub
jno
mov
arpl
addr16
sub
inc
pop
hlt
inc
sub
xor
sbb
outsb
cmpsl
pop
mov
xor
hlt
in
inc
jae
ficoml
mov
xor
add
lea
ds
iret
sbb
js
mov
and
mov
dec
fadds
push
sbb
in
outsb
inc
lds
adc
or
pavgw
pop
out
xor
inc
xor
aas
scas
xchg
inc
jo
mov
pop
dec
fisttps
lds
cmpsl
popa
subb
aaa
addr16
lahf
mov
jb
adc
test
xchg
add
cmovae
push
pop
js
inc
lahf
inc
push
enter
push
xchg
dec
shl
stc
push
sbb
aaa
jmp
int3
push
jnp
mov
sub
mov
shll
daa
shl
xor
shll
add
push
aaa
inc
lahf
movsl
xchg
icebp
inc
xor
insb
pop
aaa
stc
jae
jne
ret
das
ja
test
mov
push
mov
add
jge
into
push
shr
fucom
xor
in
inc
inc
sarl
cmpsl
push
xor
out
inc
inc
xor
mov
mulb
push
pop
icebp
and
enter
das
jno
pop
xchg
fildll
imul
popf
fistps
gs
push
imul
push
fwait
ret
dec
addr16
je
pop
push
push
pop
add
jae
and
jne
push
dec
pop
loope
xor
stos
mov
dec
ja
pusha
in
adc
in
dec
test
add
dec
loop
adc
movsl
mov
testb
les
dec
adcb
xchg
mov
jecxz
gs
jbe
push
and
push
scas
out
jb
loope
scas
mov
in
jne
addr16
jnp
and
es
cmc
xor
testl
scas
cmc
xchg
lcall
xor
xor
hlt
mov
repz
sti
ret
xchg
fdivs
out
notb
push
push
inc
sar
or
sub
iret
in
xor
test
sub
test
aaa
sbb
jecxz
shrl
sbb
push
xor
and
xor
lret
pop
pop
fs
fs
adc
mov
js
shlb
daa
jp
jae
pop
sub
push
je
sub
cmc
add
pop
aaa
xor
pop
ret
pop
mov
sti
jae
loop
cmp
jge
fiaddl
inc
sbb
je
mov
rcr
adcb
add
and
out
dec
cmc
jmp
mov
cli
popf
inc
inc
cmc
jbe
inc
xchg
or
shl
jg
pop
nop
in
aas
test
jecxz
mov
mov
loop
shlb
dec
fiaddl
xchg
jge
shrl
mov
fwait
out
adc
fildll
repnz
cmc
stc
jp
loope
ds
push
mov
jno
pop
rorl
ret
sub
and
sub
dec
sbb
pop
sbb
mov
cmc
sub
sbb
nop
mov
pop
iret
dec
pop
sbb
push
push
dec
iret
push
gs
mov
adc
pop
loope
adc
fxch
push
mov
arpl
or
test
cmc
dec
leave
cmc
xor
xchg
outsb
add
test
and
lea
adc
cmc
subb
and
outsb
push
mov
cmp
push
into
pop
cmpsb
inc
decl
xor
loop
mov
sbb
pop
in
bnd
clc
and
stos
and
mov
arpl
mov
dec
and
push
mov
outsb
or
gs
cmc
incb
mov
or
or
mov
and
arpl
sti
adc
xor
lret
rolb
mov
xchg
in
hlt
cmpb
notb
outsb
test
mov
dec
stos
aaa
cmpl
inc
lret
pop
xchg
div
inc
popa
xchg
and
push
jl
dec
xor
std
mov
leave
cwtl
push
dec
push
arpl
lret
inc
mov
cmp
shl
divb
cmpb
inc
mov
add
mov
aam
cmp
and
repz
mov
xor
cmp
xchg
adc
stos
pop
dec
sti
jp
inc
add
or
fsub
jno
mov
call
and
jne
in
sbb
adc
adc
mov
loopne
outsb
push
inc
test
in
add
pushf
lock
outsl
inc
gs
jo
jg
scas
dec
repnz
lret
lods
leave
sahf
repnz
std
outsb
ds
and
loopne
xor
mov
iret
test
insb
out
sarl
jae
repnz
cmc
fucomip
aas
and
stos
mov
xchg
and
ljmp
fwait
in
ret
pop
pop
jbe
mov
outsb
in
dec
mov
and
ja
pop
inc
push
cs
pop
lcall
pop
into
mov
or
lahf
xchg
mov
or
adc
or
scas
jl
jge
repnz
mul
insl
xor
loop
push
sbb
popf
js
push
jecxz
cmp
repnz
mov
out
jne
outsb
adc
fcomps
cmp
cmpsb
cmpsl
push
loop
cmc
pusha
mov
cwtl
xchg
lods
dec
xchg
push
lahf
idivb
dec
outsb
jg
jae
mov
jne
sub
cmp
sub
rclb
jmp
outsb
pop
ss
aas
sub
adc
daa
in
push
jo
insb
cwtl
inc
ret
testb
push
insb
jecxz
inc
xchg
inc
cmp
rorl
adc
cmp
in
dec
push
fldl
jbe
mov
and
inc
insb
adcl
shl
mov
mov
push
jl
sub
cmp
adc
mov
inc
movsb
rorb
addr16
pop
sbb
out
out
inc
arpl
lock
loope
test
jb
in
sub
test
mov
push
aas
fildl
and
sti
mov
in
jo
xor
xchg
jb
sbb
arpl
ljmp
outsl
and
hlt
push
pop
je
hlt
lret
and
hlt
fmull
imul
push
imul
loope
push
jb
ret
arpl
call
mov
popa
push
pusha
pushf
mov
jbe
xchg
pusha
lret
jge
jbe
test
in
push
jecxz
insb
fistl
aaa
inc
push
scas
push
shr
cmp
add
push
mov
mov
negb
ss
and
jecxz
mov
sti
les
mov
mov
jne
cld
arpl
mov
jne
push
loop
ret
je
cmc
hlt
push
pop
je
cmc
push
jb
arpl
hlt
sub
and
in
sti
outsl
int3
pop
pop
cmp
jecxz
in
push
mov
hlt
inc
outsl
push
arpl
lcall
dec
jbe
arpl
push
aaa
inc
popa
popf
arpl
push
insb
out
aaa
push
inc
out
pop
cmc
pusha
arpl
push
cmc
mov
loopne
push
push
jne
inc
loopne
jmp
fwait
clc
call
hlt
adcl
loop
in
fwait
cltd
mull
imul
push
testl
arpl
and
imul
pusha
jo
jmp
arpl
imulb
pusha
pop
movsl
inc
imul
ljmp
cmc
inc
outsl
pop
jmp
ljmp
jp
ret
imul
mov
jmp
sub
xchg
add
hlt
and
lods
inc
arpl
in
push
mov
pop
insl
mov
loope
daa
jmp
mov
das
insb
hlt
loop
insb
xor
scas
inc
jne
out
push
mov
cs
outsl
loop
and
loopne
sti
dec
sbb
push
orb
pop
and
mov
fstl
pop
cmpsl
or
adc
sub
fs
in
mov
movsl
lds
jecxz
in
inc
dec
mov
add
push
movsb
in
ds
xchg
lret
stos
xor
call
ret
mov
aaa
inc
mul
pop
push
js
cmc
push
sub
mov
aaa
sub
xor
jp
lahf
outsb
aad
outsl
fs
mov
pop
sub
add
popa
sbb
leave
rcr
inc
pop
xchg
sub
push
xchg
lret
adc
xchg
bnd
adc
stc
fdivr
shlb
mov
popa
jo
aam
out
jno
and
cmp
push
call
bound
insl
mov
in
jne
sub
pop
es
stos
cmpsl
xlat
inc
negl
es
jbe
or
inc
sub
les
outsb
leave
jecxz
inc
repnz
das
push
xor
xlat
and
lret
sub
ret
mov
jbe
push
repnz
std
loop
insb
xor
bound
ss
lods
mov
out
add
add
inc
and
dec
and
andl
sub
push
ljmp
pop
adc
push
repnz
fs
notl
inc
inc
inc
push
jns
nop
push
cmpsl
jl
nop
ja
and
out
dec
mov
and
cwtl
xor
lcall
xor
cmp
and
xor
movsl
push
jecxz
jns
out
fiadds
dec
sub
xor
push
cwtl
inc
scas
stos
mov
bound
mov
push
jl
gs
mov
lea
jle
jecxz
mov
test
inc
shlb
xchg
cmp
scas
dec
xor
cld
insb
fldenv
jbe
call
lcall
push
adc
ret
in
add
cs
push
addr16
call
pusha
das
inc
sub
inc
fadds
outsb
sub
popf
test
mov
pop
divl
mov
push
imul
adc
push
pusha
rcrb
imul
ret
test
repz
test
sbb
repnz
xchg
inc
jnp
push
mov
add
ret
sub
dec
mov
push
rorb
push
push
jbe
push
cmp
cmp
cli
aaa
xchg
push
cwtl
ficompl
enter
jmp
push
loope
add
loopne
add
leave
sub
adc
out
lcall
fwait
xchg
insb
mov
iret
sub
cmpsl
loop
loopne
mov
loope
roll
notl
or
sbb
adc
jbe
xchg
fadds
leave
dec
cmpsl
and
test
sub
das
push
inc
and
arpl
pop
cmp
xor
xchg
or
mov
xor
inc
ret
and
sbb
mov
xor
sbb
pop
cmpsl
dec
clc
and
loopne
xchg
je
aaa
sub
cmp
push
mov
inc
ss
inc
xor
or
cmp
aas
inc
push
mov
inc
jno
test
jno
dec
xor
lret
fwait
mov
add
mov
in
loop
neg
jecxz
shl
nop
jne
jmp
jae
insb
push
call
and
test
and
fidivrs
mov
and
jp
sub
cmp
dec
push
stc
xchg
inc
mov
xchg
and
mov
xchg
rorb
inc
ljmp
jo
xchg
aaa
jecxz
shr
and
jecxz
xor
xor
xor
notl
pusha
sub
jo
xor
jp
adc
cld
and
push
jmp
push
inc
shrl
lahf
nop
lock
call
test
scas
cmpb
out
incl
mov
aam
and
push
sbb
shl
add
scas
cmpsb
mov
pop
mov
mov
add
fbstp
stos
sti
loop
pop
adc
sbb
loop
fs
push
xor
test
adc
mov
jns
xchg
sbb
mov
movsb
aas
sub
mov
mov
jbe
mulb
ljmp
jb
test
inc
das
xchg
arpl
ljmp
push
aam
pop
jmp
pop
push
sub
mov
sti
and
notb
mov
mov
jecxz
fnstenv
fwait
cmc
call
icebp
lahf
testl
mov
ja
insb
leave
repz
les
call
xor
push
pop
test
jle
loope
pop
dec
add
and
dec
nop
mov
scas
push
push
jnp
fiaddl
movsl
sbb
enter
stc
mov
test
test
and
jbe,pt
fldenv
mov
or
daa
adc
or
imul
movsl
pop
imul
dec
sub
frstpm(287
pop
ds
fwait
xor
js
fisubrl
lcall
outsb
xchg
sub
repnz
test
jae
mov
lock
mov
xchg
push
es
mov
jne
in
mov
in
sub
add
dec
scas
mov
sub
mov
mov
mov
or
sub
cli
pop
jle
inc
dec
ss
lcall
push
pusha
xor
xchg
loop
and
jbe
push
cltd
mov
es
mov
mov
push
ljmp
iret
bound
bound
daa
sub
test
rorb
cld
ret
adcb
xchg
test
loopne
jmp
es
sbb
hlt
lods
cmp
sysexit
cli
and
sub
jne
push
xchg
jno
dec
in
shl
cmpsb
adc
mov
push
insb
cwtl
sbb
arpl
push
fiadds
push
add
add
jae
in
xchg
mov
gs
nop
or
lret
xchg
push
outsb
push
das
fbld
adc
cmpsb
fidivs
push
mov
mov
ret
iret
out
notb
sub
imul
outsb
dec
xchg
sub
cwtl
inc
adc
stos
popf
lahf
pusha
xchg
icebp
cmp
push
rcll
iret
mov
xor
out
mov
cmpsb
pushf
xor
scas
cmp
int3
cmc
xchg
jecxz
push
mov
int3
gs
arpl
and
mov
cwtl
add
rcl
adc
mov
inc
pop
cmpsb
movsl
shrb
addr16
xor
add
mov
pop
pop
and
fcoml
mov
jbe
bound
xor
ja
push
fidivrs
lods
outsl
cmp
out
mov
add
popf
dec
mov
mov
adc
movsl
pop
aad
and
xor
aaa
jne
mov
mov
and
dec
scas
jmp
stos
xor
stc
adc
in
inc
push
popa
cltd
arpl
ss
push
testb
pusha
cld
sub
lret
mov
inc
lret
in
popf
insb
rcl
pop
insb
mov
les
jmp
push
jb
push
in
mov
pop
sub
mov
fs
test
pop
lods
lods
sahf
stc
ja
repz
repnz
loope
int
dec
fnstcw
push
sahf
inc
jne
add
xchg
dec
add
inc
in
test
mov
cmp
sub
jns
sbb
mov
out
jns
inc
sub
add
js
xchg
and
es
cmpsl
popa
mov
dec
out
xor
incb
cwtl
mov
loope
xlat
in
xor
sbb
enter
out
mov
pop
jecxz
dec
mov
daa
aam
loopne
and
ljmp
daa
shll
insl
cwtl
cmpsl
les
roll
and
jae
in
pop
aad
adc
cmp
pop
cli
loope
xchg
mul
cwtl
mov
mov
pusha
lret
cmp
ds
pop
outsl
outsb
cs
pop
call
push
lret
test
lret
push
hlt
call
mov
out
dec
mov
push
shll
jbe
addl
or
pop
and
js
aam
pop
cmp
fidivl
xor
cmp
xor
add
inc
mov
repnz
imul
imul
xchg
ljmp
addr16
inc
xchg
sarb
shlb
mov
outsb
in
das
jl
push
or
cmpsb
adc
data16
jae
mov
xor
sarb
or
stos
bound
lcall
loope
sub
imul
mov
aad
inc
add
xchg
das
fs
test
mov
rclb
pop
mov
add
aaa
add
sbb
cmc
fbstp
or
pop
pop
cmp
fwait
or
stos
and
mov
popa
push
fs
movsb
mov
fwait
bsr
cltd
xor
es
out
loop
hlt
push
andb
push
mov
movsb
xchg
aas
cwtl
jecxz
inc
add
js
push
jae
pushf
sub
pop
mov
inc
xor
pop
repnz
mov
bound
jle
hlt
addr16
mov
mov
mov
lods
into
insb
push
dec
out
xor
mov
jno
or
and
insb
orl
pop
fadds
dec
fs
or
rorl
ret
push
push
loopne
mov
test
insb
mov
insl
in
out
xor
push
in
lcall
std
xor
test
out
mov
xor
sub
sbb
mov
aaa
xchg
lahf
jecxz
repz
sub
aad
test
aaa
pop
divl
daa
subb
inc
ret
out
movsl
dec
xor
mov
mov
xchg
ljmp
lea
addr16
inc
sub
jecxz
mov
into
arpl
das
cmpsl
xor
dec
pop
jl
xchg
mov
test
lahf
add
test
loope
out
mov
mov
sub
jecxz
icebp
loop
ud0
shrb
sahf
dec
paddsw
sub
inc
aaa
loopne
and
xchg
out
add
insl
lods
fisubs
sub
adc
inc
and
push
xor
pop
outsb
fwait
adc
or
insl
mov
push
jno
and
or
je
ds
sub
dec
pop
out
push
call
mov
out
in
jnp
xchg
outsb
add
hlt
test
je
mov
xchg
jnp
faddl
inc
jl
scas
int3
xchg
in
mov
fwait
lds
sub
jne
lahf
lcall
in
pushf
cmp
inc
jne
dec
insl
shlb
stos
dec
test
and
movsb
pusha
dec
leave
push
xlat
cmp
arpl
jbe
std
xchg
dec
aas
pop
aam
movsb
sbb
ljmp
insl
insb
and
insb
jo
lea
sbb
enter
and
stc
dec
mov
and
mov
outsb
push
bound
cld
mov
js
jg
inc
push
lcall
jnp
dec
test
mov
pusha
push
imul
mov
hlt
jge
das
lea
loopne
imull
rolb
ret
sub
lds
in
addr16
test
xorb
xchg
hlt
sbb
mov
pop
bswap
sbb
mov
pushf
lret
jo
jns
shl
fisttps
and
lcall
rol
in
not
add
cmp
sub
push
sbb
jne
inc
cld
clc
clc
das
div
pop
lock
clc
mov
movsb
aaa
lahf
ja
sbb
in
dec
jge
dec
fsubs
out
movsl
dec
in
js
mov
andb
mov
loop
push
push
lods
dec
or
lret
adc
ret
imul
lock
clc
adc
add
int3
aas
jb
loop
dec
jae
jg
out
jnp
mov
test
test
out
popa
xchg
or
dec
repz
outsb
dec
icebp
push
xchg
imul
push
cld
push
sbb
adc
test
pop
cmp
sub
push
add
ret
cmpl
jecxz
push
jbe
sbb
push
mov
repz
xchg
into
jmp
xor
adcl
dec
inc
test
mov
and
call
insb
xor
push
dec
xchg
js
daa
int
test
push
stc
mov
jae
jns
and
dec
cmp
jae
adc
fiaddl
inc
mov
adc
imul
outsl
fwait
mov
cmpsb
mov
xchg
cmpsl
push
rcrl
inc
adc
scas
jp
pop
sub
sti
pop
fsts
loope
test
imul
lret
arpl
fucomip
and
xlat
xchg
scas
lds
xchg
mov
and
imul
ljmp
into
loope
inc
outsb
and
ja
push
es
pop
leave
and
mov
cmpsl
add
jp
or
sbb
neg
push
fwait
rcrl
lock
daa
pushf
push
mov
pop
dec
outsb
xchg
xchg
rorb
inc
test
xor
pop
push
mov
das
insb
and
xchg
push
jecxz
jbe
push
aam
mull
test
push
es
das
imul
cmpsl
out
popa
ret
adc
int
std
pop
xor
int3
push
add
lea
xlat
xchg
pop
mov
inc
xchg
rorl
jecxz
mov
jle
lret
jg
mov
aam
test
pop
loopne
jecxz
mov
das
push
push
rcl
adcb
sbb
push
jbe
pop
icebp
test
mov
pusha
or
xor
xchg
mov
mov
mov
xor
aas
ljmp
test
daa
stc
cmpsb
or
mov
insb
sub
jb
dec
sbb
or
pop
hlt
scas
push
je
cld
orb
cmp
mov
add
inc
xchg
dec
mov
mov
push
push
sbb
and
lds
cli
sub
mov
pusha
push
jo
dec
shlb
push
dec
loop
dec
mov
jecxz
and
and
andl
push
in
fimull
shrw
cwtl
test
xchg
addl
inc
imul
insb
sbb
lahf
stos
or
imul
pop
add
xor
fisubrl
shl
mov
add
cwtl
inc
aad
push
imul
and
add
inc
inc
outsl
pop
inc
in
pop
lahf
popf
sahf
shr
movsb
movsb
sub
int3
stc
mov
mov
int
out
out
push
xchg
xor
imul
or
pop
push
outsl
jg
lods
push
add
fsubrp
movsl
subb
jl
in
xchg
jbe
dec
jecxz
or
sub
lds
fidivl
and
loopne
cli
inc
cmp
je
sbb
scas
push
dec
outsb
loope
imul
dec
mov
mov
xor
scas
popa
mov
jbe
mov
xchg
xor
or
in
cltd
paddb
cmpsl
jecxz
dec
jb
pusha
rcll
sbb
cmp
jbe
dec
scas
and
in
push
mov
loopne
popa
push
cmp
sub
ret
enter
jecxz
mov
mov
inc
lods
inc
sub
es
sti
stos
cmc
out
pop
imul
fwait
adc
mov
push
test
addr16
cltd
dec
lret
in
adc
jb
push
inc
sbb
loop
jns
repnz
sub
outsl
pop
cmp
mov
imul
pop
call
jl
cld
out
fstpl
rep
ret
popa
and
or
sub
jb
or
mov
insb
rcr
int3
loop
iret
sbb
movsb
push
into
or
mov
adc
loop
or
mov
mov
or
adc
andl
mov
cli
adc
fnstcw
call
mov
xor
mov
jge
inc
aad
shll
les
popa
inc
lcall
sub
push
inc
arpl
in
cmpsl
popf
and
jo
popa
setno
mov
push
rorb
out
cmp
mov
jg
test
fistps
push
shlb
lret
jns
gs
in
dec
adc
nop
shl
outsb
mov
leave
xchg
js
dec
jb
or
inc
dec
rcll
setnp
ds
mov
adc
xchg
mov
mov
push
mov
or
iret
dec
test
bound
jp
in
lcall
sub
hlt
inc
sub
insl
jmp
icebp
and
sub
mov
inc
add
call
movsl
addr16
mov
lahf
mov
clc
loopne
popa
jb
lret
push
push
push
sub
lea
or
movl
ljmp
mov
or
dec
pop
jmp
loop
icebp
les
inc
jle
push
pop
cmpsb
push
rcl
icebp
mov
mov
add
cmpsb
in
push
jp
inc
push
or
ljmp
mov
mov
cmpsb
repnz
mov
xchg
notl
cmpsb
cltd
scas
aad
inc
outsb
jle
xchg
mov
dec
mov
test
inc
mov
test
incl
xor
in
cltd
sbb
xchg
gs
sbb
inc
imul
mov
pop
ss
push
es
imul
mov
test
mov
ds
mov
cmp
rorl
mov
cmp
ja
lock
add
cmpsl
cmc
pop
ret
jnp
out
and
pop
push
jge
add
add
cwtl
adc
pop
sub
push
lods
sarl
push
lcall
dec
lods
movsb
and
enter
add
pop
in
mov
xchg
shlb
rcl
js
and
push
add
cmc
sub
lret
jns
xor
gs
loop
pop
loop
pop
cltd
pop
movsl
mov
stos
lods
jecxz
cmp
pusha
jae
lcall
lret
jnp
or
lods
subb
cli
mov
pop
in
movsl
pop
xlat
dec
inc
adc
add
xor
in
inc
mov
cmp
jg
nop
mov
mov
insl
or
bound
and
mov
insl
rcll
ret
cld
sub
movsl
inc
add
mov
lcall
inc
fwait
test
loopne
lea
xor
pop
fisubrl
movsl
lock
add
lret
cld
std
hlt
lret
pusha
xor
sahf
hlt
sti
pop
into
fnsave
cld
adc
push
out
enter
mov
sub
mov
mov
inc
pusha
xchg
push
cwtl
fisubs
cmpb
cltd
mov
mov
pop
mov
addr16
adc
jb
inc
push
arpl
pop
push
pop
inc
and
fidivrs
lods
add
pop
sub
lock
dec
add
push
push
xor
loopne
sub
cmp
mov
test
push
in
inc
lods
push
and
fs
loop
push
jae
add
jno
xor
test
mov
jno
cmp
arpl
jae
mov
mov
adc
push
movsl
fwait
stos
lret
test
add
jne
les
clc
loop
test
xlat
push
std
fdivs
and
fwait
adc
sbb
inc
adc
shrb
adc
in
outsb
push
jne
in
jae
push
push
out
jae
in
add
mov
push
or
test
in
mov
cmp
pop
jmp
lret
imul
dec
mov
adc
xchg
sahf
aad
cwtl
frndint
xor
movsl
in
and
and
inc
adc
test
mov
aas
mov
clc
jmp
xchg
inc
dec
inc
jb
xor
adc
sbb
jnp
jle
sub
mov
mov
xchg
sbb
orb
in
out
adc
call
arpl
test
loope
pop
xchg
pusha
lcall
xchg
mov
scas
ds
fwait
notl
outsb
mov
xchg
cmpsl
push
dec
push
ficoml
fstl
cmp
dec
adc
aam
outsl
sub
push
jp
shlb
mov
fimull
push
sub
jmp
jbe
cwtl
sub
dec
xor
jp
push
adc
lcall
push
cmp
fldcw
inc
ret
mov
push
lret
outsb
sub
data16
push
bound
inc
inc
xchg
adc
insb
das
cwtl
ret
bound
pop
and
jp
xor
xchg
clc
fildll
repz
neg
loop
movsb
add
shll
xor
outsl
inc
dec
add
xorb
jbe
jecxz
sbbb
mov
cltd
jge
cltd
pushf
mov
aad
lcall
insb
cmpsl
mov
aad
lods
push
and
stos
inc
pop
rcrb
mov
sbb
cmc
pusha
jmp
mov
jne
cwtl
enter
jecxz
add
cmc
lret
popf
movsl
mov
jp
pop
pop
jmp
mov
fsub
fsubs
hlt
das
and
pop
xor
cli
adc
mov
pop
sbb
add
dec
push
rcrl
arpl
cmp
mov
pop
out
aad
loope
and
pop
rorl
and
jl
rcrb
test
in
fsubs
xchg
or
push
in
shl
insl
das
adc
jecxz
movsl
mov
jnp
lock
sahf
mov
sti
push
aas
adc
js
add
daa
out
dec
rorb
adc
or
sbb
js
push
bound
mov
inc
add
lock
xchg
mov
or
rcrb
loop
les
lods
cmpsb
xor
stc
and
jmp
dec
inc
and
das
repnz
push
gs
mov
xor
xchg
push
xchg
sub
mov
and
cmp
mov
in
dec
inc
leave
lds
adc
stos
bnd
hlt
mov
inc
sub
jge
push
pop
push
insl
mov
vpslld
adc
pushf
sub
mov
mulb
or
mov
dec
push
add
add
in
and
div
movsb
aas
sub
cmp
jbe
lds
je
inc
mov
mov
test
inc
popf
movsl
dec
xchg
dec
cmpsb
cmpb
fimull
roll
mov
cmc
mov
loope
jnp
lcall
outsb
popf
push
cwtl
les
xchg
outsb
rorl
jb
das
mov
xor
adc
pop
in
mov
mov
inc
jg
call
adc
lea
fnstenv
jl
fcoml
jns
fisubs
and
xchg
pop
lods
call
mov
inc
add
push
sub
jb
jns
lock
shrb
jmp
std
inc
push
sub
pmulhuw
les
mov
std
jae
or
lea
fstpl
movsl
repz
dec
push
in
mov
aam
in
nop
jg
jmp
imul
lcall
scas
inc
adc
sub
sbb
divb
inc
loop
push
aad
mov
daa
cmc
std
sub
stc
lods
mov
push
mov
inc
inc
jmp
stc
pop
arpl
inc
inc
pop
out
jbe
jne
in
and
push
insb
pop
shlb
bound
xor
xor
push
push
xchg
pop
cmpsl
mov
test
push
cmp
ret
fwait
scas
fs
je
mov
inc
sub
cmpsb
push
pop
mov
xor
push
push
jns
add
pop
jnp
fucomp
rcll
mov
pop
push
repnz
dec
mov
pop
rcrb
and
push
inc
push
rclb
inc
mov
loopne
cmpsl
rorl
daa
fsubs
shlb
adc
xor
and
pop
push
icebp
xchg
xorl
data16
pusha
loopne
ret
es
and
push
bound
add
rol
pusha
popf
sbb
xor
dec
int
jmp
lcall
std
pop
jb
dec
inc
xchg
jns
cmc
notb
jnp
xor
lcall
test
push
cmp
and
sub
jns
inc
jecxz
das
negb
jle
adc
setp
pop
jmp
mov
fistpl
cmp
sbb
subl
rorb
bound
dec
pandn
pop
pop
xor
push
outsb
xorb
addr16
inc
adc
mov
nop
cli
jb
je
and
sbb
lods
aad
and
mov
mov
inc
pop
cmpsl
and
arpl
xchg
movsl
into
es
test
mov
cmpb
cmc
fimull
push
pusha
in
jp
cmc
push
mov
iret
in
test
sub
sbb
add
insl
and
frstor
arpl
mov
mov
rol
push
stc
push
arpl
adc
fucom
rorb
lods
fcomip
into
xor
sbb
test
sbb
icebp
add
sbb
sub
jb
jb
imul
cli
andl
sti
fdivr
inc
push
xchg
lea
neg
imul
popf
ja
fsubrs
xchg
test
insb
jecxz
aas
ficoml
mov
rdmsr
push
andl
sub
mov
pusha
mov
mov
mov
loop
stos
push
push
enter
outsb
sti
and
sub
test
mov
xor
pusha
popf
dec
jns
mov
bound
xor
es
mov
enter
and
jae
movsb
pop
or
or
sub
ja
jae
push
push
dec
daa
jne
lret
fidivl
mov
mov
push
xchg
xchg
lock
addr16
inc
repnz
mov
stos
je
repz
mov
call
cld
fidivs
movsb
aas
arpl
in
and
push
push
sub
loope
rcl
push
enter
sti
xor
outsb
testb
jb
scas
test
and
adc
stos
cmpsb
mov
outsb
pop
jo
cwtl
xchg
or
orl
push
ficompl
inc
or
imul
icebp
das
push
sbb
jge
ja
lods
cmpsl
push
jg
mov
push
out
xorl
xchg
adc
and
inc
push
sti
add
push
ret
jecxz
add
loop
arpl
fwait
loop
dec
insl
loopne
lods
lods
dec
outsb
dec
or
pusha
push
test
int
daa
mov
xor
jmp
jge
dec
fiaddl
and
lock
or
ljmp
mov
push
lock
push
push
fwait
scas
dec
cmpsb
scas
insb
je
push
xchg
loopne
push
jp
test
imul
pmaxsw
adc
add
and
pushf
lds
jp
jae
mov
mov
push
scas
sub
mov
lods
dec
outsl
inc
scas
popf
inc
arpl
in
lcall
ljmp
pop
push
and
mov
sub
dec
and
mov
imul
pop
add
imul
push
sub
dec
xor
mov
sti
in
push
lcall
xor
mov
ret
rorl
mov
fwait
sub
vpmovzxwd
jl
and
leave
loope
jae
push
out
cltd
out
and
inc
push
ljmp
jne
push
xor
ljmp
add
es
outsl
pop
sub
inc
mov
sbb
jecxz
mov
push
add
aaa
mov
test
loopne
ficoms
mulb
imull
stos
daa
ja
and
ss
imull
mov
mov
xor
mov
push
lods
jnp
jo
cli
fisubl
mov
sub
movsb
dec
jns
imul
pop
sbb
xchg
filds
stc
and
push
and
pop
inc
fwait
out
outsb
into
jbe
lret
iret
and
cmc
bound
sbbl
mov
loop
sbbl
mov
sub
sbb
push
std
sub
pop
stos
test
mov
les
mov
push
mov
and
jno
xor
mov
test
mov
add
in
shrb
sbb
rcl
stos
ret
cmp
cmpsb
pop
or
xor
cwtl
mov
test
in
fs
push
cmc
sub
cmp
imul
dec
aaa
mov
mov
hlt
adc
push
scas
shlb
or
xor
ret
clc
xor
xchg
jne
push
in
inc
mov
push
push
mov
mov
mov
or
scas
or
pop
push
js
mov
std
inc
push
mov
push
std
cmp
pop
arpl
inc
sub
jmp
mov
or
xor
lret
xchg
loopne
mov
rcrb
xor
jns
jge
aam
cmc
sub
fwait
or
ja
sub
or
rorl
sub
insl
ja
aas
adc
out
add
subb
and
pusha
sbb
loop
jb
xchg
fnstcw
test
aas
dec
and
movsb
cmp
test
cmp
daa
or
sbb
test
in
add
pushf
xlat
out
cltd
sub
dec
mov
cmp
stos
aaa
push
cwtl
test
nop
xchg
adc
adc
lods
pop
cmp
ficomps
lret
adc
int
adc
idivb
dec
mov
cwtl
shlb
lock
arpl
gs
dec
inc
icebp
mov
push
dec
add
test
adc
inc
xchg
adc
in
stos
cmp
sbb
cwtl
jb
push
sub
insl
shrl
and
ud0
ds
aas
dec
sbb
jo
stos
mov
add
xchg
aad
loope
adc
notb
pushf
xor
mov
ret
loop
hlt
jecxz
inc
negb
pusha
test
sbb
jne
lcall
roll
jle
std
mov
and
push
lods
add
adc
lret
push
pop
arpl
cmp
shll
push
sub
push
test
inc
push
repnz
mov
push
fsubl
adc
jge
mov
popa
imul
lcall
fwait
clc
mov
out
cmpsl
and
andb
shlb
push
pusha
je
andb
into
xor
add
cltd
inc
and
xchg
in
test
lahf
repz
sbb
ficompl
mov
sub
jle
mov
je
mov
cmpsb
stos
outsb
ret
mov
jne
adc
xor
push
push
push
and
fnstenv
ret
mov
mov
out
mulb
in
lret
jns
xor
xchg
ret
frstor
pop
shrb
ds
lcall
fwait
addb
dec
mov
cmc
pushf
fstp
lret
iret
add
and
cmp
int
incl
lret
mov
call
sbb
cmpsl
or
jmp
sub
sub
cmp
mov
fists
dec
mov
lahf
xchg
jnp
mov
shrl
aam
and
leave
lods
dec
cmpb
pop
test
stos
out
or
inc
adc
mov
adc
inc
aad
divb
fisttpll
and
fs
add
test
push
lods
rol
cwtl
dec
or
add
lcall
in
xchg
add
out
stos
xchg
or
mov
xchg
inc
dec
imul
cli
mov
xchg
ret
fstpl
dec
cmc
pop
je
loop
int3
lcall
loop
and
hlt
pop
pop
inc
je
cmp
push
sub
mov
and
iret
jecxz
shlb
je
inc
push
lds
pop
pop
test
out
pusha
mov
jp
xchg
ret
xor
mov
and
das
mov
inc
imull
shll
push
mov
jl
lret
into
inc
add
loopne
cmp
push
xchg
je
jae
outsb
stos
cmp
lods
sub
sahf
sbb
adc
sarb
ljmp
adc
pop
loop
mov
pop
outsb
dec
es
sti
les
popa
sbb
dec
in
outsb
adc
jmp
ret
dec
add
pusha
mulb
inc
stos
push
in
mov
xchg
inc
cli
and
jns
or
mov
or
repnz
sbb
push
sub
pop
in
in
pop
mov
cmpsl
notb
sub
add
popa
pop
push
cmpsb
loopne
mov
push
out
adc
lods
lds
dec
jge
pusha
push
in
push
not
push
aad
out
ljmp
hlt
aad
fs
jno
aas
cli
xchg
cmc
inc
jno
sbb
outsb
or
dec
loope
idivb
xchg
out
ret
xlat
add
jecxz
loope
inc
jge
inc
shlb
cmpsl
test
mov
dec
outsl
dec
sub
push
jecxz
aaa
fisubrl
add
mov
inc
inc
adc
adc
pop
rcrb
add
xchg
fwait
push
inc
arpl
mov
sbb
xorb
aas
cmp
loope
xor
cwtl
mov
ja
in
jbe
mov
dec
mov
outsb
in
cmp
aas
cli
and
sub
imul
je
jnp
add
xchg
hlt
and
aad
adc
inc
adc
xchg
sub
sarb
mov
and
cwtl
repz
dec
add
cmp
insl
xchg
add
pop
add
jbe
das
fmulp
mov
pop
xor
xchg
lds
mov
into
bound
jp
jecxz
xchg
sbb
mov
mov
push
xchg
sub
pop
jecxz
cmp
and
mov
jb
inc
in
vunpckhps
push
ja
or
jo
test
adc
pop
inc
aas
inc
shlb
iret
orl
sub
pop
arpl
xchg
es
out
push
xor
adc
sub
loop
arpl
mov
testb
testb
test
in
mov
mov
pop
notl
pusha
test
dec
sub
ja
cmc
outsb
push
push
movsl
insl
ja
mov
out
jo
dec
mov
jb
inc
add
xchg
icebp
mov
adc
imul
jnp
sarb
andl
iret
sar
dec
mov
xchg
jg
mov
arpl
mov
xchg
movsl
or
shl
push
into
adc
scas
inc
inc
dec
xchg
cmp
xchg
loope
loopne
movsb
cmp
ljmp
push
sbb
scas
outsb
or
je
mov
clc
icebp
scas
mov
imul
insb
lret
jecxz
les
adc
shll
pop
mov
xor
movsb
cs
mov
xchg
mov
adc
jecxz
lods
mov
mov
inc
jb
push
shrl
movntq
mov
inc
fimull
pop
push
cmp
mov
or
sub
cmp
imul
adc
ja
sbb
clc
and
scas
sub
mov
mov
insl
and
push
dec
movsb
das
add
rcr
loopne
inc
push
jnp
mov
mov
and
out
jbe
xlat
fdivp
xchg
mov
es
pusha
cmp
push
and
xor
pusha
icebp
sbb
inc
inc
dec
shll
push
call
out
in
popa
xor
sbb
push
das
test
xchg
loop
subl
xchg
pop
out
hlt
inc
movsl
cli
jl
fcoml
jne
push
cmp
inc
out
sbb
in
adc
push
ljmp
repnz
push
cwtl
xchg
add
dec
push
xchg
out
add
repnz
outsl
mov
aam
push
addr16
inc
cmp
xchg
sub
mov
fists
push
incb
insb
mov
sub
adc
pusha
cltd
cwtl
icebp
xor
das
loop
insl
loop
pop
insb
xchg
fmulp
je
inc
call
into
dec
cmp
jns
pop
ror
rcll
push
enter
mov
inc
out
outsb
fidivrs
inc
movsb
aam
cmp
jmp
roll
lds
mov
push
xchg
test
sub
movsl
lods
ret
pop
lret
mov
out
bound
xor
lock
pop
push
xchg
enter
rcrb
jnp
mov
push
jle
jecxz
int3
cmp
sub
aad
enter
ljmp
mov
adc
xchg
inc
ficomps
jo
inc
dec
nop
fucomp
call
mov
jnp
lret
je
test
xchg
inc
jne
into
push
adc
and
mov
jne
push
or
inc
xor
ds
push
ljmp
mov
adc
popa
ret
cmc
mov
jb
mov
pusha
dec
movsb
fdivs
sub
lret
jecxz
loop
and
and
mov
pop
or
or
push
sarb
cld
outsl
subb
jge
mov
push
sub
push
mov
jns
in
or
mov
cmpsb
cwtl
andl
data16
in
rcrb
mov
mov
ficompl
ret
xorl
rorl
cmp
mov
push
cmc
pusha
mov
lods
adc
loope
ffreep
jns
outsl
push
cmp
lea
dec
adc
inc
ljmp
jl
push
daa
fisubl
fidivrl
pop
xchg
lret
push
inc
ljmp
pop
loop
in
push
test
pop
outsb
sub
adc
mov
jmp
fisubrl
push
pop
test
cmp
xor
jo
repnz
cmp
mov
mov
stc
and
stos
nop
push
lock
mov
leave
jp
iret
push
call
xchg
cmp
nop
sbb
xchg
dec
mov
inc
and
inc
sti
and
xorb
loop
fsubl
sbb
in
mov
jne
enter
loope
push
loop
sbb
loop
push
xchg
add
and
in
pop
sub
add
jl
cmp
cs
and
jge
sub
cli
or
inc
xchg
mov
sbb
les
repnz
fiaddl
adc
ljmp
sbb
hlt
mov
loope
jecxz
lcall
mov
cs
insb
sub
dec
mov
push
fcompl
xchg
ss
std
sbb
and
push
imul
and
nop
aaa
cmc
xor
repnz
shlb
pop
repnz
outsb
insl
loop
push
es
loope
inc
jo
and
inc
pop
outsb
sub
in
push
imul
jb
mov
addr16
adc
scas
fildll
jne
push
jp
jecxz
pop
rolb
dec
jo
sub
daa
push
add
inc
xor
and
push
mov
dec
pop
insl
cltd
sub
push
push
cmp
or
ljmp
cmp
sub
fisttpl
mov
mov
iret
rcll
shll
shrb
cwtl
mov
add
shll
jmp
jecxz
xchg
adc
mov
mov
negl
mov
mov
shll
adc
mov
and
in
mov
fildll
iret
and
and
fcmovb
fs
mov
lods
xorb
inc
les
jno
ret
sub
je
push
addr16
xchg
xor
cli
sarb
xor
dec
add
and
hlt
push
push
xchg
xchg
pop
mov
sub
sbb
push
and
add
adc
and
push
and
dec
push
mul
arpl
movsl
andl
mov
pop
dec
dec
mov
fisubrs
push
sub
movsb
adc
icebp
test
arpl
mov
sub
cmp
popl
dec
adc
je
sub
loope
inc
inc
jae
in
fs
outsb
cmp
or
jne
movsl
jle
add
and
mov
test
and
add
lret
push
mov
repnz
push
incl
aaa
xlat
loopne
hlt
add
fmul
inc
mulb
cmp
jns
inc
dec
mulps
insl
cli
ja
adc
cmp
pop
mov
adc
inc
or
and
jne
cwtl
jb
mov
and
lods
es
lods
push
ja
xor
ja
mov
push
popa
adcb
jb
enter
jb
sbb
mov
xchg
call
dec
jno
sub
pusha
loopne
fists
cltd
sub
fsubs
push
int
call
filds
push
mov
inc
mov
jl
fldt
dec
mov
loope
in
stc
loope
stc
sub
hlt
xchg
jb
shll
cltd
imul
out
cmp
popa
test
sarl
test
push
add
push
subl
sbb
jmp
adc
mov
push
in
push
sub
loope
loope
rclb
cli
inc
loope
nop
xor
jns
cmp
sbb
mov
cld
rcrb
into
das
sti
xor
loop
lret
ss
icebp
imul
push
xchg
sub
push
xchg
jae
fldl2t
mov
xchg
cwtl
inc
mov
push
insl
out
sub
inc
jmp
out
sbb
mov
shlb
mov
xor
jb
mov
lods
insb
movsl
ja
mov
jecxz
outsl
lods
jb,pn
pop
mov
mull
ja
xchg
pop
pop
sbb
test
in
sub
loope
lret
fiaddl
imul
inc
ret
jmp
push
arpl
inc
xchg
fnsave
sbb
inc
mov
push
mov
imul
xchg
subl
in
lds
insl
imul
outsb
mov
fwait
scas
inc
insb
sub
mov
dec
popf
ljmp
xlat
push
cmp
loope
test
jne
daa
iret
je
jbe
push
adc
stos
jmp
in
aas
in
das
push
je
aaa
jb
shll
sub
jmp
lret
add
push
movsl
mov
addr16
std
pusha
notl
xor
jbe
cwtl
loope
push
mov
push
push
ljmp
push
aam
pop
movsl
movsb
push
notl
dec
testl
dec
lods
mov
xchg
mov
xor
lods
loop
sub
test
xor
lret
pusha
lret
jne
push
and
out
fucomi
sub
push
cmc
sub
cltd
pop
cmc
ljmp
adc
push
mov
insb
add
out
out
sbb
xchg
jecxz
stos
call
call
inc
add
dec
xor
mov
sub
sub
out
push
and
push
stc
xchg
jmp
imulb
out
sub
neg
and
ja
dec
jmp
cli
clc
call
stos
push
add
fsubl
scas
repnz
pop
push
mov
push
mov
cmp
mov
popf
jb
sub
mov
fiaddl
jge
ret
loope
in
test
bound
and
inc
add
in
insb
movsb
clc
pop
into
add
insb
in
cltd
in
add
push
dec
add
in
xor
add
add
push
jle
in
fstpl
call
xchg
pop
pushf
push
inc
mov
mov
pop
sbb
inc
dec
das
jp
stos
js
pop
dec
mov
pop
cltd
add
das
out
aaa
js
rorl
mov
pop
adc
inc
inc
dec
jno
andb
push
inc
mov
test
pushf
xchg
out
lea
fndisi(8087
push
adc
mov
push
xchg
jne
arpl
cmp
xchg
test
sub
sbb
inc
clc
mov
jmp
loope
xchg
push
fucom
mov
pop
push
jmp
jmp
insb
loop
xchg
sub
xchg
push
scas
push
popf
pop
jb
and
imul
fwait
pusha
arpl
pop
cmp
insb
ret
adc
pop
aad
ljmp
arpl
hlt
xor
ja
jbe
shrb
sub
fimull
inc
int3
xor
into
push
or
push
push
xor
dec
push
divl
sub
fcmove
inc
mov
and
aaa
punpcklbw
fisubl
ficoml
adc
jecxz
je
ss
mov
sub
fisubrl
lea
push
and
fwait
loop
push
rorb
jmp
push
xor
popa
loop
mov
aaa
push
push
inc
push
xor
notl
aaa
dec
or
dec
inc
out
xor
and
dec
lea
dec
push
outsb
shlb
add
lret
loope
aam
xor
push
pop
push
xchg
aaa
sub
lret
mov
sub
dec
push
loop
xor
int
rolb
pusha
mov
pop
ret
push
xchg
aaa
push
push
inc
xlat
xor
jmp
dec
inc
loopne
pusha
stos
push
add
aaa
jne
ficoml
je
pop
leave
push
lea
mov
fimull
or
push
push
jb
jne
ficoml
je
pop
lret
aaa
stos
push
insl
inc
insb
xor
popa
loop
or
aaa
jb
ficoml
xor
test
lret
inc
lods
xor
adcl
inc
mov
pop
add
aaa
mov
fcmovbe
inc
stos
xor
lret
push
scas
aaa
scas
add
mov
arpl
add
push
ficoml
loopne
cltd
addl
sub
loopne
loope
cmp
out
ret
inc
push
mov
xor
sub
pusha
clc
add
call
loopne
cmp
inc
iret
test
arpl
hlt
test
jge
sbb
push
inc
xor
pop
pusha
jmp
ljmp
jmp
pusha
pop
js
jo
ret
or
sub
push
fidivs
hlt
cs
add
ljmp
ljmp
add
mov
cltd
arpl
mov
jmp
loopne
add
dec
in
sbb
sub
popa
leave
pusha
ljmp
inc
mov
mov
fisubl
in
xor
jle
movsb
into
lods
outsl
in
jecxz
loop
push
add
repz
jecxz
adc
into
jbe
push
jmp
stos
in
dec
mov
test
clc
fnstenv
xchg
loop
pop
shrl
push
repz
cmc
fisubrs
arpl
dec
out
popf
mov
dec
in
mov
arpl
insb
pusha
jmp
mov
mov
jmp
cmc
shlb
inc
lods
push
push
and
pusha
xchg
push
xor
pop
and
xor
sub
xchg
push
lcall
sbb
push
adc
adc
fs
pusha
jb
ds
and
mov
add
repnz
jmp
push
dec
inc
shll
mov
and
into
arpl
rcll
rcl
mov
adc
loope
inc
dec
push
shll
test
loop
and
les
aam
movsl
shll
adc
in
hlt
insb
inc
and
and
xor
test
fs
and
shll
ret
dec
movsb
shll
and
insb
inc
and
shll
mov
and
lock
insb
cmpsl
and
mov
inc
or
es
ss
xchg
xchg
dec
shll
lds
fs
cmpsb
pop
mov
add
shl
mov
push
push
cmp
sub
hlt
cltd
mov
mov
push
pop
push
loope
inc
jbe
ja
fmuls
dec
mov
ja
lea
or
ljmp
shrl
mov
and
and
dec
mov
or
out
imull
pop
jmp
dec
dec
cmp
push
stos
es
pusha
and
push
sarl
sbb
ljmp
cmp
sub
jnp
imul
leave
in
mov
stos
pusha
and
stc
pop
jmp
or
cmp
popf
pusha
sub
inc
stos
and
arpl
mov
sbb
or
cld
or
in
jecxz
pop
pusha
pop
dec
insb
cmp
sub
pushf
rorl
imul
insb
mov
rorl
mov
cmpsb
push
pop
das
dec
mov
aas
insl
jmp
lahf
pusha
les
dec
insb
xor
into
mov
shlb
scas
das
push
inc
push
push
mov
out
lea
pop
pusha
and
outsb
xchg
sahf
and
mov
pop
testl
outsl
jb
frstor
int
mov
or
std
sub
inc
push
push
pop
rorl
xor
sub
imul
dec
jle
outsb
adc
mov
test
dec
push
fldenv
mov
ja
push
outsl
xchg
inc
push
loop
fldenv
mov
nop
lea
sbb
inc
jno
jmp
popa
arpl
shll
pop
movsl
punpcklwd
in
out
loop
pusha
sub
pusha
addl
ja
push
fiaddl
dec
ret
shll
mov
adc
add
or
inc
and
dec
and
xchg
mov
and
shll
dec
mov
or
aam
ljmp
dec
jb
les
fs
movsl
pop
mov
add
adc
in
hlt
bound
inc
pusha
pop
push
insb
and
xor
test
xchg
mov
lea
jne
rcrl
insb
movsb
and
repz
outsb
les
push
insb
daa
and
dec
xchg
xchg
mov
and
cmpsl
pop
mov
push
and
dec
out
xchg
dec
push
mov
and
and
mov
and
in
cmc
push
pusha
push
testl
cltd
insb
mov
dec
jbe
fsubs
les
into
or
clc
push
pusha
call
stos
es
pusha
and
into
cwtl
pusha
sub
imul
insb
test
pop
dec
pop
out
pusha
idivl
dec
and
dec
sub
fwait
mov
and
lret
dec
stos
rcrl
mov
movsl
ljmp
and
dec
sub
lcall
imul
leave
and
mov
push
jmp
dec
dec
cmp
stos
bound
testl
imul
pop
push
or
or
dec
movsb
das
jns
lock
or
push
lret
call
dec
sbb
or
and
into
aas
pusha
sub
dec
lahf
rorl
insb
loopne
fisubs
into
insb
mov
rorl
mov
notb
enter
and
push
dec
jae
arpl
pusha
inc
loope
std
into
in
loop
pop
dec
dec
fldenv
mov
and
and
outsb
xchg
rclb
rcr
mov
mov
pusha
ja
push
ficoml
push
testl
pusha
pop
xor
and
sub
jno
pusha
popa
lea
fbld
iret
sub
pop
dec
psrlq
adc
jo
loope
cmp
push
ficoms
mov
pushl
int
jne
jb
pop
test
loope
jne
pop
jecxz
and
lods
cmc
lret
mov
cmpsl
jbe
jmp
and
int
loopne
push
in
pop
mov
xchg
imul
jb
loope
mov
push
insb
jmp
jbe
sub
clc
and
xor
pop
jmp
sub
out
movsl
jne
vcvtdq2pd
movsl
cmc
jb
loopne
cmc
popa
popf
ja
ljmp
insl
or
or
xlat
or
and
clc
inc
ljmp
idiv
and
sbb
loopne
je
ja
outsl
gs
mov
lahf
jne
hlt
hlt
sbb
testb
push
inc
cmc
gs
jb
push
inc
in
gs
in
insb
insl
in
mov
out
imul
jb
sbb
mov
movsb
sub
testl
call
ljmp
in
shrl
movsl
hlt
hlt
ja
ja
jb
loopne
pop
pavgw
mov
ljmp
and
xchg
insb
inc
call
inc
ljmp
lret
and
jg
aaa
xor
xor
pusha
sbbl
jo
adc
movsl
inc
shlb
ljmp
and
js
add
push
pop
insb
sti
and
dec
mov
push
loop
pop
imul
pusha
insb
xchg
and
mov
mov
and
pop
and
dec
sub
stc
mov
and
mov
pop
dec
mov
ja
adc
arpl
loop
das
pop
mov
jb
jb
dec
call
ja
insl
or
xchg
testl
mov
into
loopne
lds
das
loop
rcll
mov
hlt
jne
insb
test
mov
call
cld
inc
stos
int3
loop
jb
call
and
xor
imul
cmp
and
push
mov
cmpsl
xchg
scas
mov
adc
aaa
mov
push
cs
fs
mov
push
es
sahf
mov
ss
xchg
es
xchg
mov
inc
xchg
jo
dec
sub
clc
cmp
push
popa
aaa
and
mov
xchg
sti
ljmp
imul
daa
inc
sti
sbbb
cwtl
dec
xor
or
add
insl
cmp
icebp
fdivs
mov
mov
add
cltd
and
mov
fadds
sbb
clc
cmc
mov
push
ret
sbb
dec
pop
add
xchg
jp
aam
xchg
inc
mov
sub
sti
or
shl
inc
add
fwait
add
fcom
dec
mov
push
push
push
mov
push
push
inc
aaa
sbb
lret
push
clc
sub
push
inc
sbb
or
pop
je
mov
adc
pop
incl
inc
loop
cli
scas
push
xchg
jmp
push
jb
xor
popf
es
xor
fsts
daa
push
insb
cmp
cltd
and
jb
mov
mov
dec
xchg
add
sbb
data16
loope
pop
nop
cmp
jb
les
ret
mov
mov
ficomps
jns
imul
push
aam
call
test
jb
test
jbe
xchg
sub
in
push
xor
enterw
subl
push
ljmp
idivb
leave
cmpsb
cmp
cwtl
push
inc
mov
push
mov
push
inc
stos
dec
icebp
gs
mov
sbb
fsubp
into
adcl
std
push
lods
push
mov
sub
je
leave
push
jb
sub
mov
iret
dec
or
cmp
push
adc
call
xor
jno
push
xchg
mov
mov
nop
add
mov
push
mov
lock
fisubl
test
notb
rclb
xchg
mov
movsl
es
dec
test
push
mov
imul
push
aam
push
dec
fnsave
xchg
inc
fnstenv
scas
sbb
and
insl
stos
xor
sub
sub
sub
inc
rcr
dec
and
push
imul
push
and
data16
jecxz
inc
gs
orl
daa
imul
out
dec
push
push
push
into
daa
push
cmp
fidivl
cmp
enter
cmp
mov
dec
pop
sbbl
imul
sbb
cmc
fmul
cwtl
dec
and
fisttpl
shll
call
xor
push
out
sub
add
inc
roll
and
mov
jno
je
fdivrl
orl
daa
sub
sub
xchg
inc
xchg
popl
fsubrs
jno
push
push
cmc
jae
sbb
jecxz
aaa
ret
daa
jbe
adc
xor
mov
ret
xchg
fisubrs
je
lcall
mov
roll
lods
adc
mov
outsb
aaa
mov
mov
loope
js
add
and
lcall
or
loop
in
mov
cmpsl
pop
mov
push
scas
pop
jp
push
stos
cmp
push
ljmp
repnz
lods
ljmp
sbb
ss
jmp
shll
es
inc
dec
pop
mov
lcall
xor
clc
mov
scas
movsl
iret
sbb
inc
push
in
es
jb
stos
rcrb
xchg
outsl
ret
cmc
and
js
xchg
push
push
stos
and
test
fidivl
mov
and
insl
cwtl
movsl
cmpsl
and
mov
inc
gs
call
ljmp
dec
push
add
fisttpl
fs
pop
inc
push
rorb
aam
in
dec
and
je
jmp
ret
fsub
in
mov
fwait
xchg
mov
lcall
in
xchg
outsb
loopne
push
xchg
xchg
fisubl
pushf
test
fbld
into
push
mov
mov
loopne
xchg
push
mov
je
fimull
fdivl
cwtl
clc
xchg
lahf
xchg
or
jmp
xchg
add
sbb
dec
cmp
dec
fs
fcomps
jmp
shll
scas
or
add
es
xchg
sti
jae
pop
bound
imul
mov
fwait
test
add
sub
mov
iret
mov
mov
mov
lea
int
mov
mov
ret
jbe
inc
es
mov
or
imul
jno
dec
std
cs
mov
rorl
mov
loope
push
push
sti
ja
sub
xor
xor
adc
dec
sub
stos
cmp
jecxz
es
jecxz
push
nop
loopne
mov
or
aaa
add
xchg
and
fabs
sub
loop
inc
jmp
pusha
ljmp
mov
cmc
push
push
ljmp
pusha
in
rorl
aaa
imul
mov
shl
je
fldln2
les
inc
mov
popf
push
jge
das
fimull
xor
pusha
rcrl
push
ret
aaa
add
xor
xchg
mov
xchg
mov
pusha
mov
cmp
dec
repnz
push
add
xor
and
xchg
rolb
xorb
ret
inc
xor
or
nop
xchg
adc
repnz
shl
mov
cmpsl
mov
or
lock
push
or
sbb
adc
inc
repnz
mov
test
ret
ret
test
jmp
adc
out
sub
andl
add
loop
dec
mov
loope
inc
test
xor
dec
arpl
aad
mov
movsl
pop
xchg
test
mov
sti
push
popa
push
add
pop
xchg
push
mov
mov
cmc
ret
xchg
jmp
pop
adc
inc
add
pop
xchg
es
in
dec
push
mov
mov
aaa
or
push
sbb
cmp
sub
in
dec
or
push
inc
mov
test
sbb
push
pusha
fwait
adc
loop
hlt
dec
xor
xchg
push
jbe
jne
push
push
ret
mov
jo
out
inc
pop
imull
dec
and
sti
mov
call
int
sbb
xor
outsb
shrb
jb
jp
pop
call
or
inc
cmp
shlb
fdivs
push
dec
push
jbe
test
push
mov
imul
rorb
or
rol
cmp
cmpsl
sbb
out
sub
idiv
cmp
je
push
jbe
outsl
mov
mov
push
add
push
add
mov
xchg
fs
int
fidivl
shr
jbe
lods
out
dec
ja
aaa
mov
ss
push
call
and
jno
aad
adcb
xchg
rcll
xchg
adc
je
test
shrl
jno
and
jbe
sbb
dec
js
mull
add
ss
mov
pop
insl
out
out
sub
xor
mov
in
out
ret
loop
adc
inc
push
and
mulb
sub
push
jo
cwtl
out
sub
gs
jne
pusha
into
hlt
mov
daa
sub
adcl
jnp
int
sub
icebp
push
adc
xor
lods
or
cld
pop
ret
xor
adc
mov
cmp
xor
adc
insb
push
aaa
ss
addr16
push
push
hlt
jcxz,pt
fbstp
xchg
jne
outsb
ret
fucomp
ret
pusha
sub
lods
outsb
cmp
sbb
add
xor
sti
notl
xlat
lods
push
mov
adc
xchg
inc
lret
add
xor
sub
and
and
lds
xor
adc
ret
lock
lods
out
incl
in
dec
je
mov
xchg
mulb
mov
ret
mov
sub
adc
mov
jmp
in
cwtl
fildll
jne
lods
nop
js
xchg
push
hlt
adc
jno
mov
icebp
gs
popa
and
daa
pop
fbstp
or
iret
testl
mov
sub
xchg
jb
xor
jecxz
lods
ret
jp
arpl
aam
sbb
jmp
loopne
or
and
push
int3
insb
stos
xor
xor
mov
or
int
mov
pop
hlt
fwait
jo
inc
push
and
fildll
jecxz
jb
ljmp
add
js
pop
jecxz
aam
sub
xchg
push
add
pop
pop
and
jmp
popa
jne
inc
mov
leave
dec
push
sub
les
cmc
ret
jecxz
and
lret
inc
jb
jecxz
mull
jge
pusha
push
stc
push
divw
and
outsl
loop
xor
sub
int3
push
mov
push
inc
xchg
and
out
aad
ljmp
xor
fisubrl
in
xor
push
lods
sub
aaa
mov
jbe
and
dec
push
lahf
pop
push
pop
pop
xor
push
cld
pcmpeqw
loop
arpl
inc
inc
hlt
xlat
shlb
aad
mov
aaa
xor
es
arpl
or
in
xchg
push
push
xchg
movb
adc
inc
xor
je
and
setbe
xor
sub
and
xchg
jp
into
sub
cmp
fdivrs
or
data16
test
mov
neg
xor
rcrl
andl
sbb
xchg
cltd
inc
cld
stos
shll
jecxz
add
fcmovb
addr16
lret
push
icebp
push
mov
das
mov
or
xor
jb
and
int
shrl
stos
cmp
cltd
shrb
and
call
xor
gs
mov
ret
in
in
xchg
jns
adc
xchg
inc
dec
les
push
add
or
jne
xorb
lds
mov
loope
dec
adc
loopne
push
outsb
jo
stos
push
test
jb
xor
add
inc
xor
push
lret
leavew
or
push
mov
jb
ss
sub
inc
sbb
arpl
ja
lods
ja
out
sub
push
imul
adc
push
inc
fsubl
xchg
cmp
jge
test
es
daa
jecxz
test
int3
ja
jle
xor
cwtl
fisubrl
pop
inc
stos
inc
mov
xorb
xor
cmp
cltd
inc
call
sub
aaa
xorl
adc
inc
aaa
or
clc
shl
xor
xor
sahf
mov
in
data16
xor
jge
mov
cmp
mov
and
push
rcrb
mov
clc
sbb
push
xor
popl
ss
inc
icebp
call
addr16
ja
cwtl
rcrb
xchg
xchg
cmp
and
js
lods
lahf
ja
pop
push
gs
nop
popa
rolb
out
arpl
adc
repnz
sbb
cmc
inc
repnz
das
mov
adc
mov
push
and
and
mov
jbe,pn
jne
inc
outsb
les
inc
mov
mov
loopne
jmp
loop
jbe
lcall
lret
inc
xchg
add
push
outsb
scas
xchg
stos
jecxz
dec
xor
out
xor
rolb
jo
pop
insb
mov
adc
jmp
outsb
in
inc
jno
adc
fisttps
out
xor
jo
add
fists
icebp
cmp
push
xchg
jae
filds
or
nop
and
jecxz
sub
pop
jmp
inc
mov
pusha
xchg
lret
pop
rcrl
loope
mov
stos
js
loopne
dec
xchg
mov
or
adc
jo
cmc
das
rcl
jecxz
push
jge
sti
sbb
sar
jecxz
outsb
xchg
jmp
jbe
or
sub
pusha
int
arpl
mov
outsb
jno
xchg
dec
mov
shr
nop
insb
iret
cmp
fwait
ljmp
gs
fcoml
xchg
pshufw
mov
xor
aaa
arpl
xor
std
and
loop
sbbb
pusha
pop
test
fisttps
ret
pop
xor
lret
mov
sub
test
dec
mov
notl
mov
repz
cmc
adcb
push
stos
cmp
std
int
jb
pop
sbb
xor
sub
loope
jo
packssdw
mov
push
jne
out
mov
cmc
nop
jmp
jbe
or
mov
sub
outsb
sub
xor
cmc
jne
and
test
rclb
fwait
shrb
cs
xor
arpl
add
test
and
mov
sub
call
cld
add
in
repz
test
and
stos
mov
das
daa
outsb
jne
hlt
scas
or
cmc
loope
xor
mov
cmp
sub
add
dec
or
and
xor
shll
outsl
push
inc
adcb
cmc
div
iret
pop
popa
dec
in
nop
xor
and
ss
mov
mov
jbe
mov
push
insl
xor
mov
push
xor
or
loop
in
inc
mulb
bound
outsb
or
subb
or
xor
sub
rorb
loop
mov
dec
sub
push
cmpsl
nop
or
out
aas
jno
dec
sub
les
stos
cmpsb
sub
mov
pop
mov
scas
test
jbe
arpl
mov
sub
xor
cmc
dec
lret
gs
pop
mov
cmpsl
cmp
stos
nop
fdivs
inc
cmpsb
popa
pushl
xchg
mov
mov
push
cltd
vcmpsd
stos
push
notb
xchg
inc
outsl
jecxz
sarb
dec
xchg
jb
int
rorl
dec
cli
hlt
aas
repnz
out
ja
orb
loop
mov
fsubs
pop
dec
adc
das
pop
jo
in
lds
mov
pop
les
leave
jg
and
out
pop
rorb
jo
jo,pn
insb
aaa
xor
xorb
mov
insl
mov
popa
push
imul
mov
sbb
std
daa
insb
imull
cmp
ljmp
inc
cmp
jge
and
add
mov
mov
lods
mov
std
fistl
lods
or
dec
int3
fsts
pop
rolb
push
cmp
das
mov
rcr
adc
mov
sahf
jbe
adc
mov
jo
leave
daa
inc
add
test
lahf
cmp
add
cmpb
inc
sbb
push
inc
into
imul
or
xor
mov
dec
xchg
ljmp
subb
shlb
jmp
ljmp
ljmp
fdivl
and
dec
int3
loope
je
push
aaa
mov
push
scas
mov
dec
sub
xchg
or
rcrl
xor
fisubl
jo
pop
lcall
mov
icebp
xchg
push
ret
xor
jne
pop
das
cwtl
mov
cmp
out
shll
lock
and
xchg
inc
iret
cmp
and
xor
pusha
out
bound
fnstcw
clc
fbstp
fimull
add
xchg
out
scas
test
xor
les
dec
andb
into
xchg
popf
jo
in
jg
clc
scas
sub
jle
les
xor
in
loopne
and
add
push
jbe
pop
mov
add
jb
lds
xchg
popf
cmc
dec
mov
mov
leave
addb
inc
std
jbe
inc
ret
nop
sub
inc
dec
xor
iret
xchg
addr16
nop
idivb
xor
adc
loop
or
xor
fidivl
cmovl
jmp
js
rorb
inc
and
dec
or
push
push
mov
inc
jne
inc
idiv
jecxz
push
iret
jle
and
in
lods
andl
fcomip
add
fistpll
dec
outsl
lret
loopne
add
xor
lods
lahf
add
popf
push
push
or
cmp
call
cmpsl
outsb
insb
inc
jae
jle
lea
adc
and
xor
xchg
cltd
out
or
mov
shl
popa
in
pop
inc
scas
mov
test
push
push
ja
dec
out
and
jg
dec
iret
arpl
cmp
adc
cld
daa
mov
shll
jb
outsb
rolb
in
push
cld
sar
and
inc
xchg
push
mov
ljmp
xchg
push
shrb
sarb
lcall
cmp
sarb
push
iret
jp
aas
adc
nop
and
cmc
or
enter
rsqrtps
outsb
add
jne
sub
stos
mov
pop
mov
loopne
fstps
sbb
and
mov
stc
mov
dec
mov
repnz
iret
push
mov
xor
je
aaa
mov
xor
jo
repnz
lret
stos
xchg
sub
jb
xor
mov
xor
cmp
mov
cmp
xor
inc
in
repnz
inc
outsl
lea
adc
divl
cld
cmp
repz
scas
xor
xchg
mov
fimull
xchg
adc
jns
xchg
shl
and
leave
out
fsub
stos
mov
adcb
lods
lods
xor
mov
addr16
xchg
test
fldl
mov
jae
pop
inc
outsl
push
and
jp
imul
mov
loop
xor
imul
xor
popa
sub
sbb
pop
outsl
jnp
mov
ffreep
inc
stos
sarl
sub
mov
stos
and
outsb
test
js
cmpsb
pop
sub
leave
orb
sub
in
adc
lahf
imul
pop
or
clc
pop
lahf
mov
or
lock
rolb
jnp
insb
sbb
fisttps
popf
mov
stos
shlb
lea
ljmp
pop
shl
fisubl
mov
addr16
xchg
adcb
loopne
or
jbe
lcall
and
mov
daa
push
jns
adc
negl
popa
adc
pop
leave
xor
jbe
frstor
xchg
aam
popa
pop
cld
orb
stos
xchg
outsb
mov
inc
into
into
shrb
pop
xor
pop
cmc
outsb
popf
mov
cmp
jb
pushf
fildll
std
sub
out
and
mov
jne
arpl
adc
mov
push
and
jb
inc
outsb
or
adc
sub
dec
push
mov
push
and
pop
jecxz
sub
mov
test
mov
outsb
bound
out
popa
jbe
dec
insb
ljmp
out
sti
mov
sar
popa
xlat
mov
push
lahf
enter
test
pop
push
in
xor
mov
insl
mov
xchg
pop
jo
and
fisttpll
inc
fmull
daa
outsb
incl
out
mov
and
imul
mov
loop
jns
fildl
cmpsl
inc
cmpsb
repnz
sub
mov
jne
mov
shll
pusha
std
add
mov
cmp
loope
pusha
lods
aam
dec
outsb
in
in
aas
clc
inc
cli
out
cmc
test
adc
pusha
and
mov
xchg
inc
push
mov
arpl
std
jno
popa
and
scas
push
or
aaa
jnp
adcb
mov
jle
shlb
das
inc
sti
mov
in
mov
sbb
stos
jmp
sub
inc
test
aad
cld
lods
jg
outsl
add
out
dec
pop
or
dec
dec
xor
pop
js
inc
rcr
les
popa
add
notl
dec
sbb
xor
mov
push
fimuls
ss
mov
sbb
xor
dec
ror
add
push
shr
mov
movsb
xor
pop
insb
add
out
outsb
mov
rol
in
xor
cmp
mov
jae
lea
iret
inc
and
adc
es
dec
adc
leave
mov
shlb
cmpsl
das
ja
pop
dec
bound
pop
stos
push
iret
ss
sub
fstps
fldcw
push
and
loope
dec
fmulp
push
fisubs
call
jo
ljmp
outsb
orl
dec
lea
mov
and
loope
not
xor
mov
push
mov
out
inc
pop
mov
shlb
aaa
enter
popa
sti
fstpl
loopne
pusha
ja
cmp
inc
xor
mov
xor
jbe
jp
inc
mov
mov
adc
inc
jge
or
dec
xor
lods
ljmp
loopne
xor
and
bnd
cmp
inc
outsl
rolb
push
inc
pop
in
loope
push
out
jg
loope
jbe
cmp
pop
jecxz
mov
sub
pop
pop
addr16
rcll
mov
scas
and
outsb
mov
lcall
xor
nop
cmp
fbld
inc
dec
outsl
insb
push
ds
xor
add
out
jbe
push
fsubrs
js
outsb
sti
scas
in
sahf
xor
push
stos
dec
jbe
sbb
and
rolb
push
push
lea
fsubrl
fisttpl
xlat
sbb
mov
xchg
jo
mov
fidivs
xor
lcall
xchg
mov
adc
scas
mov
sub
stos
mov
sbb
xchg
add
jecxz
hlt
cmp
adc
xchg
aaa
jb
mov
xchg
popf
insb
or
push
mov
hlt
aas
push
adc
ret
aam
mov
in
inc
jbe
insb
rcr
and
adcl
or
lea
sbb
les
xchg
fiaddl
shlb
push
cli
push
ficoms
cmc
jmp
inc
dec
xchg
xchg
fstpl
out
and
xor
adc
bound
rcr
dec
mov
inc
add
jmp
sub
inc
movsb
push
sub
mov
and
rorb
push
dec
adc
push
into
mov
cmc
xchg
cmc
dec
xor
aad
dec
xchg
dec
add
aad
xlat
adc
or
xor
inc
dec
push
mov
ret
inc
add
leave
jne
jbe
xchg
pop
iret
lret
outsl
rolb
hlt
sahf
call
lcall
push
mov
cmp
call
jo
imul
addb
out
pusha
jbe
xchg
or
push
inc
fbld
xor
mov
mov
push
push
sub
dec
mov
mov
mov
mov
adc
inc
dec
addl
pop
push
push
jbe
sbb
cs
aas
leave
lcallw
lret
mov
jns
xorl
dec
je
leave
imul
lcall
cmp
popf
adc
stos
js
cmp
out
mov
push
bound
xchg
push
inc
ljmp
xorl
loope
loope
xor
dec
inc
jb
mov
addl
xor
xchg
notb
cmp
outsb
int3
adc
lock
push
jle
and
inc
roll
imul
pop
sbb
leave
lret
mov
and
xchg
jecxz
mov
and
pop
or
sub
sub
mov
cmpsb
pop
lods
inc
jp
sahf
mov
mov
push
xorb
stc
sarb
dec
test
and
dec
inc
xor
sub
je
xchg
lcall
mov
or
jno
mov
sub
sarb
push
mov
cltd
inc
mov
jnp
lds
and
or
jp
sbb
xchg
push
movsb
lock
sub
inc
and
stos
cmp
cmpsl
insb
lret
repnz
mov
push
push
sarb
nop
fildll
repz
inc
inc
add
jmp
mov
cmc
xchg
scas
mov
repz
jecxz
jo
pop
popf
inc
mull
lret
dec
rclb
jmp
mov
inc
aas
dec
jl
pop
sarb
test
scas
outsb
outsl
mov
cld
out
ljmp
adc
nopl
pop
jl
mov
gs
orl
mov
in
es
out
xchg
pop
inc
jmp
xor
jmp
cmp
testl
ljmp
clc
cmpsl
sub
mov
in
repnz
out
push
push
dec
jg
dec
into
xchg
push
lods
add
push
das
jl
stos
outsb
sbb
mov
mov
mov
mov
sti
into
bound
inc
push
sub
mov
mov
push
repnz
xor
test
push
das
xchg
adc
cs
imul
fbstp
inc
jbe
mov
rolb
jnp
pop
repz
adc
mov
stc
fsubp
mov
ret
xchg
xchg
test
inc
push
dec
stos
pop
jle
push
es
testb
inc
push
stos
sub
add
inc
and
int3
nop
add
out
mov
sub
adc
stos
pop
mov
jbe
addr16
out
imul
arpl
xor
pop
push
or
ds
inc
int
inc
push
rol
jmp
push
jbe
xor
repnz
cmpsl
loope
adc
jg
sbb
mov
outsb
insb
das
jae
stos
inc
push
jno
das
addr16
inc
js
inc
jbe
inc
fnstenv
sub
cmp
adc
inc
dec
pushaw
jp
negb
and
mov
aam
jge
adc
iret
ret
push
cmp
test
and
loop
rcrl
fbld
pop
outsb
push
and
rolb
rolb
cmc
jbe
mov
push
adc
jecxz
je
test
ss
stc
fbld
dec
push
or
lds
test
push
lahf
outsb
jg,pn
mov
addb
sub
pop
nop
stos
sarb
popa
jl
or
jo
sub
sbb
loope
push
jnp
xchg
rorl
cmc
cmp
cmp
rclb
sbb
stc
mov
in
and
popf
push
mov
xchg
idivl
or
in
test
shrb
hlt
push
or
rcl
pop
repz
inc
outsb
xchg
aaa
xchg
shlb
xor
sub
bound
shl
jmp
shrb
movsb
xchg
mov
ja
movsl
push
shlb
arpl
mov
xor
pusha
dec
jo
test
sbb
aaa
in
mov
cmc
rcl
lret
stos
out
shl
dec
mov
leave
cwtl
mov
jmp
xchg
lock
sbb
xchg
xorb
pop
scas
adc
mov
sub
sub
shlb
fimuls
ficomps
bound
ljmp
sahf
scas
loope
inc
push
inc
lds
adc
into
xor
or
pushf
shr
bound
nop
sbb
push
sub
cmc
shlb
mov
fbstp
rolb
loopne
andb
cmc
outsb
enter
sbb
fstp
adc
mov
push
in
stos
adc
add
fisubl
fnop
imul
js
fnstsw
or
dec
iret
jmp
js
ss
aas
mov
rcl
pop
movsb
inc
shlb
jne
dec
jp
mov
mov
jg
outsb
imul
xor
push
xchg
movsb
sub
mov
xchg
jae
fsubp
loopne
imul
jmp
pop
adc
push
mov
jb
pusha
xor
dec
add
adc
rclb
and
jmp
scas
dec
int
dec
iret
or
jg
pop
inc
and
orb
push
cmp
lret
iret
push
stc
pop
or
pop
or
out
outsl
testl
jl
scas
xor
filds
cmc
and
call
push
and
ja
pop
push
push
sbb
test
fistpll
push
xorb
xor
xchg
daa
shrb
lock
aas
rolb
sub
jecxz
dec
mov
add
daa
loop
rcrb
adc
inc
jo
inc
cmp
nop
sub
out
ret
stos
rcrb
push
outsb
mov
cmovle
sub
jne
dec
call
adc
outsl
sub
lods
mov
cli
jl
add
push
gs
or
pushf
pop
jp
addr16
and
ficompl
jns
mov
adc
stos
fdivl
mov
outsb
lods
xorb
cmc
addl
xor
lret
sbb
dec
addr16
in
mov
loop
jno
or
leave
jnp
sub
xchg
jmp
hlt
aas
sbb
cltd
mov
jb
iret
int
cmc
fldl
push
dec
push
rclb
cmp
and
shll
mov
dec
push
in
mov
dec
dec
sub
hlt
and
adc
aaa
rcll
dec
repz
rclb
jmp
sbb
notb
aaa
mov
jmp
xor
jecxz
lcall
int3
mov
lods
jmp
outsb
out
lahf
inc
jbe
icebp
jnp
outsb
push
inc
cmpsb
pause
push
sub
sub
test
jecxz
dec
add
loope
push
xor
test
dec
push
fstpl
xchg
pushf
scas
movsb
pop
mov
addb
inc
or
fisubs
or
jbe
sub
sbbb
jne
xlat
cld
ss
fimull
and
jb
es
outsb
xchg
pop
loope
adc
jae
mov
test
imul
pop
jo
fmull
add
hlt
out
mov
cmp
inc
mov
imul
or
hlt
call
pop
jnp
dec
push
lods
add
fsub
jecxz
ficoml
xchg
cmpsl
andl
cmp
negl
xor
shlb
jnp
inc
loop
mov
movsb
aaa
mov
leave
in
mov
fbstp
popa
outsb
dec
das
xchg
stos
sahf
xchg
mov
mov
fists
cwtl
jp
lahf
mov
fwait
and
es
shll
push
and
dec
adc
bound
cmc
imul
pop
jge
call
or
pop
jb
sub
dec
push
test
jo
cmp
sti
and
or
divb
xchg
sub
add
sub
push
loope
pop
shl
and
mov
sub
ja
xchg
inc
sahf
xor
mov
call
jle
les
rcl
push
mov
push
outsb
xchg
lret
mov
push
in
sbb
sbb
add
daa
pop
push
iret
data16
in
mov
push
subb
inc
inc
push
pusha
test
stos
aaa
and
outsb
jl
daa
adc
xorb
into
sbb
or
fcompl
lret
fscale
xor
mov
loope
ficompl
dec
ret
mov
cmp
jp
mov
sbbl
add
pop
xor
xor
imul
aad
dec
dec
and
cmp
push
enter
xchg
cld
iret
jbe
adcl
negl
pop
fsubs
push
sbb
out
inc
rolb
xlat
inc
pop
mov
push
mull
dec
out
mov
stc
ficomps
and
imul
mov
test
mov
dec
int3
lahf
xchg
loopne
or
imull
lahf
je
jmp
and
imul
adc
rcr
psubb
out
pop
jl
mov
hlt
xchg
xchg
stos
pushf
shrl
les
shr
jbe
ret
mov
aad
hlt
xchg
sbb
popf
xchg
xor
stc
aad
test
dec
je
sub
mov
mov
jbe
cmp
sub
mov
das
rcl
xorb
ds
cmp
inc
shrb
lock
pop
and
test
xchg
adc
jo
lret
mov
daa
xlat
ucomiss
in
pop
and
popa
push
stos
mull
fistl
and
iret
mov
mov
dec
das
iret
ret
fcoms
dec
sub
pushf
cmp
mov
sarb
es
sti
aad
pop
outsb
pop
popf
xchg
pop
fwait
xchg
mov
mov
std
cmp
scas
mov
lods
adc
add
bound
test
sub
pop
inc
mov
xor
jle
int3
imul
cwtl
test
inc
pusha
loop
ret
sbb
mov
stc
lahf
inc
sub
test
push
loop
lods
push
mov
dec
xchg
outsb
mov
fdivrs
or
comiss
mov
hlt
push
inc
mov
pusha
test
add
xchg
divl
mov
xor
dec
inc
sarb
fiadds
outsb
jl
jnp
cwtl
pop
adc
pop
xchg
loopne
cmc
divb
cmp
jnp
add
into
dec
add
fldcw
iret
jo
pop
sub
mov
dec
sti
push
jns
stc
ljmp
mov
dec
lea
imul
or
mov
pop
mov
fcompl
jmp
pusha
daa
ljmp
xor
mov
pusha
xor
mov
pusha
cmp
sbb
lcall
pusha
mov
and
jecxz
lds
imul
fneni(8087
je
mov
jmp
hlt
push
insl
mov
loop
dec
and
pop
pusha
sub
pusha
push
rcrl
aaa
pusha
daa
xchg
ljmp
inc
loope
inc
arpl
xchg
imul
loope
cmp
push
testb
jb
out
arpl
sub
pop
sub
lods
pusha
pop
jmp
and
cmpsb
fidivl
and
arpl
dec
loop
sub
enter
mov
aaa
push
pusha
mov
movsl
push
cmp
pusha
mov
add
dec
das
loop
movsl
ja
and
lret
push
lods
insb
into
aaa
dec
arpl
dec
jecxz
pusha
and
mov
aas
sub
fdiv
and
xchg
loopne
and
imul
fldcw
jne
sub
push
lcall
mov
mov
loopne
cmc
dec
arpl
mov
cmc
jbe
arpl
divb
divl
mov
xchg
aaa
ss
inc
arpl
lahf
inc
xchg
imul
hlt
les
fldcw
and
ljmp
outsl
ret
push
out
lds
cmp
fldenv
mov
cmp
mov
and
mov
fwait
sub
jecxz
jb
jmp
sub
loope
les
jb
jbe
scas
hlt
stos
lods
call
pusha
push
hlt
and
fidivl
jbe
sub
lods
stos
mov
arpl
inc
shrb
inc
add
iret
int3
inc
aaa
aam
add
sbb
and
vpor
sbb
imul
popa
sbbb
sarb
insb
popa
mov
jb
mov
in
into
outsb
inc
cs
fmuls
mov
rcrb
subl
xchg
adc
sbb
mov
xor
in
jo
lds
insb
cmp
jns
inc
rolb
dec
push
adc
cmp
sbb
jae
fsubl
sbb
ljmp
mov
pop
adc
dec
add
sub
mov
xchg
dec
rorb
jecxz
ss
jb
add
inc
in
loop
hlt
into
mov
and
inc
dec
adc
dec
in
jb,pt
test
sub
push
arpl
and
sti
pop
mov
loope
sbb
int3
jge
loope
mov
fadds
or
enter
aad
test
push
adc
fldl
cli
mov
dec
outsb
repz
lea
rorb
ret
xchg
mull
xchg
adc
fcomip
popa
or
ud0
and
add
sbb
idivl
lods
push
rorb
ficoml
movsb
cmp
sub
pop
sub
xchg
sbb
sbb
ret
ds
insb
sbb
call
orl
lret
pop
repz
into
hlt
outsl
sysret
dec
cmp
dec
insl
jl
sbb
and
psubb
add
sbb
mov
sbb
arpl
mov
mov
rorb
test
push
pop
aad
jnp
sub
sub
into
aad
pop
or
pop
jge
xor
das
xchg
push
cwtl
sbbb
outsl
push
lahf
and
shlb
in
shl
mulb
dec
push
jecxz
test
and
outsl
cli
lcall
nop
test
mov
mov
sbb
insb
sub
push
jge
enter
mov
xor
fidivrl
cld
movsb
idivb
mov
sub
lock
insb
sbb
and
push
icebp
mov
in
adc
data16
stos
adc
shll
pop
decb
pop
mov
out
jmp
xchg
test
out
pop
imul
insb
mov
out
fdivp
sbb
jne
call
inc
and
push
iret
mov
arpl
push
pop
pop
add
lods
push
mov
ret
and
sbb
hlt
sub
pop
loope
lods
loopne
pusha
aad
pavgw
mov
into
mov
ljmp
mov
xchg
test
mov
dec
jecxz
xchg
xor
pop
push
jne
data16
call
popf
out
sub
popa
mov
jp
xor
fdivs
in
mov
jecxz
aas
fistl
sub
pop
iret
aam
mov
xchg
pusha
push
nop
movsb
lret
out
jecxz
xchg
add
jns
popa
aaa
lret
popa
idivl
and
mov
sti
mov
dec
dec
xor
sub
xchg
cmpsb
inc
int
mov
and
dec
jo
mov
stos
sub
sub
adc
sub
cmp
inc
repnz
je
idivb
push
mov
push
adc
xchg
inc
and
xchg
rcll
loopne
pop
in
push
pop
jl
iret
inc
jo
cmc
les
xor
ja
cmp
push
hlt
cmp
push
bound
out
cmp
outsb
pop
loopne
lds
test
inc
outsl
mov
lock
sub
out
mov
in
sub
jne
imul
push
inc
and
jg
nop
xor
add
and
jo
jge
push
test
jno
scas
jecxz
fbld
cmpb
into
sbbl
mov
push
arpl
mov
xor
fdiv
les
jnp
fbstp
iret
ljmp
or
jns
dec
mov
outsl
in
loope
cmp
sub
shlb
loop
ret
test
xorl
xor
jno
inc
sbbb
add
filds
dec
cmpb
scas
stos
xor
xor
dec
movsb
sbb
cmp
and
mov
shl
cmp
adc
hlt
aam
fstpl
hlt
inc
xor
popa
lock
out
push
push
mov
shrb
leave
mov
out
in
frstor
decl
leave
nop
adc
jno
sbb
pop
test
push
xor
xchg
hlt
mov
pop
loop
outsb
sub
packssdw
movb
iret
add
inc
cmpsb
sub
in
aas
or
cmpsb
insl
and
mov
andnps
xor
addr16
inc
xchg
push
xlat
jmp
inc
push
loopne
push
cmc
jmp
jp
cmp
xor
arpl
in
in
or
sti
jmp
stos
mov
enter
shrl
sbbl
outsl
xor
jle
lds
popa
jp
mov
or
jo
xchg
fidivs
imul
loopne
decl
pop
fnsave
xor
mov
xor
sub
ret
rclb
out
filds
loop
sbb
negl
hlt
inc
bound
push
inc
and
addl
loopne
xor
jno
jmp
mov
sub
cmp
inc
pop
loope
test
arpl
xor
loope
cld
movsb
cmc
mov
xor
pop
inc
pop
test
pop
xor
mov
inc
ror
mov
shlb
cwtl
push
push
ds
jecxz
mov
iret
mov
xor
hlt
jnp
cmpsb
addr16
icebp
hlt
nop
xor
cmc
scas
push
push
aad
ss
sub
push
jnp
push
xchg
push
add
jne
pop
repnz
push
scas
xor
int
and
outsb
inc
inc
dec
mov
xor
pop
fnsave
fucomip
cld
push
mov
dec
hlt
sbb
xor
xchg
hlt
xchg
xchg
xor
xorb
outsb
call
cmp
cmc
pop
and
loopne
fsubrp
cmpsb
stos
adc
xor
lea
test
imul
cmc
xor
adcl
int
shlb
mov
mov
jo
in
and
shrb
in
cld
pop
out
ret
mov
out
cmp
jne
push
jo
out
lods
stc
leave
push
jae
in
mov
xor
mov
loope
pop
bound
cmp
mov
mov
push
fimuls
dec
jb
leave
int3
in
push
mov
xchg
out
mov
stos
loopne
jg
adc
jl
inc
dec
add
call
and
in
sarb
inc
inc
push
jbe
mov
push
ss
sbb
sbb
mov
shl
cmp
adc
mov
jl
push
out
insb
xchg
push
ljmp
mov
jmp
xchg
imulb
iret
sahf
mov
nop
call
push
dec
es
mov
jnp
lock
xor
mov
jmp
inc
scas
mov
jo
push
push
cli
dec
mov
cmpsl
bound
mov
sti
pop
movsl
pop
fwait
push
cmpsb
out
jnp
nop
inc
mov
ds
xor
out
add
fwait
loop
addr16
hlt
xor
dec
inc
lahf
ljmp
shll
ds
out
adc
popf
outsl
jl
mov
aas
pop
sahf
pop
out
pushf
or
out
in
rcrl
in
adc
cmpsl
js
cmp
jns
loopne
gs
sub
jmp
mov
xchg
lcall
xchg
loopne
inc
inc
out
ret
inc
ds
sbb
sub
std
mov
jecxz
jecxz
aaa
pminsw
stos
jecxz
loope
fiadds
xor
lods
xchg
sbb
out
mov
xor
repnz
and
xchg
fadds
jmp
or
rcrb
cmc
cmc
mov
aad
out
xor
mov
bound
inc
xor
push
loop
dec
fidivs
xor
mov
adc
push
inc
out
icebp
mov
and
jo
out
adc
push
aas
cmp
add
push
repnz
jmp
outsb
sub
mov
and
call
inc
inc
rep
push
push
lea
adc
hlt
pop
and
dec
mov
mov
dec
push
fdiv
jmp
fisubs
mov
mov
ds
jnp
cmp
push
inc
out
lods
cld
dec
adc
jg
sbb
data16
hlt
inc
xchg
jbe
shrb
imull
xchg
push
add
sub
sub
mov
divb
push
cs
into
cmp
int
mov
arpl
adc
lds
scas
push
and
das
jmp
push
loopne
pop
mov
inc
leave
jnp
mov
or
push
mov
lods
scas
dec
je
outsl
movl
inc
and
pop
shll
sti
cmp
stc
arpl
cli
push
push
inc
andl
sbb
neg
out
and
lea
push
mov
scas
sub
or
and
sbb
in
gs
sub
jg
push
pop
insb
out
repz
xor
push
lcall
movsb
arpl
and
adc
push
sbb
fistl
aam
jo
lods
mov
notl
add
scas
cld
dec
bound
mov
pop
dec
repnz
call
sub
das
shrb
shlb
sti
xchg
cmp
adc
xor
push
push
out
sub
nop
aad
out
mov
mov
or
jmp
sbb
sarl
scas
jle
and
iret
jmp
pop
pusha
ss
shr
je
shll
dec
out
int3
push
sbb
pop
sysret
xchg
jo
cwtl
jmp
shl
shlb
das
insl
cmp
out
xchg
mov
ret
sub
cmc
sahf
inc
insl
shl
sbb
push
sti
mull
dec
out
mov
mov
ljmp
pop
mov
insl
inc
pop
push
hlt
push
and
addb
sub
jns
sahf
mov
lods
jmp
or
pop
test
pop
sbb
sub
out
sbb
insb
es
cmpsb
js
out
push
mov
pop
jo
xchg
jmp
insl
dec
adc
pop
lcall
add
lock
mov
test
lret
push
and
outsl
push
repnz
sete
jmp
or
or
add
repnz
data16
jo
fcomip
push
xchg
sbb
push
mov
jmp
mov
jmp
out
jbe
sub
das
lret
sbb
in
icebp
jb
push
out
pushf
movsb
sub
jg
jbe
out
js
jno
and
cmpsb
mov
and
sbb
add
dec
ljmp
ja
sbb
inc
dec
fsubr
dec
inc
orb
lds
out
adc
xchg
orl
dec
or
scas
popa
mov
imul
mov
mov
loop
or
sub
xchg
das
adc
out
cld
fabs
inc
std
pop
push
mov
xchg
push
notb
out
or
pop
pop
rcrl
testl
push
mov
cltd
insb
movsb
lcall
sub
int3
test
jns
out
cwtl
outsl
and
sbb
sub
icebp
xchg
add
or
out
fidivl
repz
rorl
fidivrs
iret
and
orl
adc
adc
sub
out
cmp
out
cmpsb
scas
lds
pop
mov
sub
pushl
pop
aas
push
bound
popl
mov
adc
shr
rcrl
push
xor
jno
out
or
subl
not
jl
dec
lret
pop
xchg
int
sub
and
mov
dec
mov
icebp
into
mov
iret
pop
push
xchg
data16
jl
push
sub
scas
insb
mov
out
or
jae
jg
not
mov
lods
cmp
das
push
dec
clc
mov
sbb
dec
imul
jmp
imull
inc
mov
add
ret
ss
addr16
dec
and
xchg
negl
lods
xor
out
jg
inc
dec
push
arpl
jmp
cmp
mov
mov
mov
push
addb
in
es
xor
inc
jl
andl
xorb
stos
gs
out
cmp
sbb
testl
xor
cmpsb
add
jecxz
loopne
adc
imul
mov
xor
pushf
and
clc
negl
out
test
cmpsb
repz
cmp
out
and
and
mov
dec
mov
fcoms
and
call
inc
pop
aaa
or
testl
push
lea
cltd
adc
jo
sbb
dec
ds
jmp
cmc
jge
in
push
out
xor
call
icebp
ret
mov
xchg
mov
jecxz
fmuls
out
je
cmp
mov
lods
lods
outsl
sub
or
push
mov
dec
outsb
push
ja
lods
cmpsb
jg
jmp
jbe
aaa
push
lds
pop
lock
test
fs
in
jp
addr16
sbb
outsb
xor
jecxz
sub
pop
bnd
lds
cmp
jmp
add
fisubrl
dec
inc
aad
dec
or
pushl
fwait
shlb
rol
cmp
subb
loopne
out
mov
mov
adcb
mov
push
loop
scas
dec
movsb
dec
mov
inc
neg
pop
std
out
and
and
lahf
out
bound
adc
inc
fisubs
test
xchg
adc
mov
loop
sbb
out
fucomip
lcall
xchg
sar
cmp
cmpb
mov
lahf
repnz
aam
jle
sub
inc
out
sarl
icebp
push
mov
stos
push
xchg
shrl
and
popa
mov
push
xor
fwait
pop
xor
rcll
inc
popa
out
mov
push
add
push
mov
into
fcom
pop
pushf
loopne
dec
out
dec
fisubs
outsb
je
or
loop
sbb
adc
push
mov
test
es
data16
xor
adc
aam
pop
adc
add
jae
rolb
sbb
and
fimuls
cltd
push
cmp
dec
ret
cmp
rorl
mov
mov
xchg
rclb
mov
inc
jae
out
xor
xchg
or
add
fdivp
out
jmp
jecxz
xchg
push
sbb
dec
scas
inc
aaa
jo
faddl
notl
fwait
or
imul
lret
negl
dec
sbb
xchg
mov
out
push
insl
repnz
add
and
adc
es
ret
xor
mov
dec
out
add
pushl
push
and
push
mov
ljmp
out
in
shlb
sbb
adcl
lock
out
cmp
sub
and
mov
ret
jecxz
in
pop
and
cwtl
jmp
out
in
xchg
in
add
inc
push
out
lods
out
or
fnstsw
mov
or
inc
dec
ret
shrb
aam
add
and
or
push
in
inc
mov
or
push
out
jge
cmp
out
das
in
push
and
mov
imulb
jb
push
xchg
lret
loope
fistl
mov
imul
adc
bound
outsl
pop
mov
or
pop
cltd
mov
xchg
scas
jle
out
add
push
or
sbb
daa
mov
arpl
mov
movsb
cmp
ja
xchg
mov
mov
insl
out
cmp
cmp
xor
pop
in
icebp
out
xor
js
xchg
and
stc
ds
cli
popa
and
out
pop
daa
mov
pop
cmpsb
or
jmp
mul
out
dec
xor
lds
ss
insb
jb
inc
xor
sbb
out
push
je
rolb
scas
lcall
push
ljmp
aad
scas
bound
orb
and
out
cmpsl
push
test
xor
push
inc
or
test
and
cmpsl
jb
lods
out
mov
pop
push
es
inc
jbe
jp
enter
rclb
inc
push
out
cmpsb
sbb
and
xor
fnstenv
ljmp
pop
push
cmp
in
fwait
adc
aam
sub
mov
adc
dec
in
mov
test
out
xlat
fildl
movsb
neg
popa
xor
jecxz
loopne
aad
call
imul
inc
jp
pop
mov
mov
cmp
shlb
mov
jecxz
and
adcb
push
cmp
cmp
out
xor
out
loope
repnz
adc
loopne
ficoms
pop
call
enter
es
repnz
arpl
pop
flds
jmp
xchg
icebp
mov
add
sub
dec
popf
xor
pop
mov
jg
mov
jnp
adc
sahf
dec
ljmp
jne
out
aad
cld
sti
mov
or
iret
loopne
sbb
js
push
cwtl
push
xchg
add
jmp
cmp
sbb
out
repnz
inc
test
mov
repz
ret
fstpl
out
adc
shr
mov
add
iret
mov
sub
push
push
ja
imul
shl
push
rcll
sub
jge
push
cmc
push
cmpsl
data16
jo
out
mov
mov
ret
out
cltd
cmc
movsl
adc
test
pop
jnp
cmp
icebp
ss
mov
out
sbb
ror
aam
out
mov
dec
out
das
push
inc
mov
ss
dec
movsb
add
dec
lock
xor
lods
insl
and
icebp
sti
push
popa
rorl
into
in
hlt
mov
push
adcb
lahf
cli
sahf
mov
scas
sbb
jbe
sub
out
cli
mov
les
out
pusha
cwtl
out
mov
mov
jmp
sub
dec
test
mov
xchg
sahf
fcoml
or
shl
ret
jne
ret
shrl
jnp
mov
roll
lahf
sahf
jmp
xchg
mov
mov
leave
or
pop
mov
ss
iret
out
cmp
dec
jle
inc
mov
dec
jmp
mov
push
leave
out
cli
jle
adc
push
iret
iret
out
pop
jb
dec
pop
shlb
cld
inc
out
jl
icebp
inc
dec
pop
stos
adcb
fsub
or
out
jecxz
popl
out
add
cmp
out
mov
sbb
sbb
fisttpll
push
call
sub
out
in
rol
std
dec
mov
in
sub
pop
push
aad
mov
cmp
shr
or
lock
fcomi
repnz
inc
sub
lret
push
and
and
jmp
mov
adc
adc
into
inc
mov
and
mov
out
mov
hlt
test
jp
cmc
mov
jg
adc
push
punpckldq
daa
out
js
iret
jo
fcmovbe
dec
out
scas
mov
jp
xor
adc
pop
fwait
push
add
loop
mov
out
lcall
jo
popa
ret
cld
adc
pop
outsl
shr
out
sub
jecxz
sbb
lcall
push
jo
movsb
jae
stos
push
aaa
jbe
cmc
pop
imul
mov
jge
in
push
cmpsl
or
fsts
xor
dec
add
out
adc
xor
and
out
push
adcb
test
mov
ss
scas
and
xor
sbb
cld
stos
leave
test
mov
add
sbbb
shrl
pop
repnz
or
jno
push
je
std
les
and
fcmovne
lods
test
push
dec
push
out
scas
inc
mov
loopne
adc
inc
adc
jbe
fsubr
pop
inc
je
dec
loope
out
fsubs
sub
imul
std
out
cmp
call
add
sbb
ljmp
out
rcl
les
repnz
out
fiadds
sbb
lods
xchg
aaa
out
xchg
decb
mov
insl
sub
pop
cmpl
add
mov
ja
int3
out
int
xchg
jno
out
mov
add
not
cmp
push
and
addr16
inc
lock
test
psllw
imul
push
xchg
scas
push
xor
daa
fsubrp
xor
ds
pop
cs
jnp
mov
cltd
fbstp
or
insb
inc
popa
and
add
push
in
jmp
std
imul
xchg
je
mov
repnz
in
ss
add
pop
xor
inc
imul
loopne
jle
sti
mov
adcb
mov
das
jge
cmpsl
add
mov
jno
xchg
lea
dec
jo
das
jle
jae
sub
sbb
sbb
cmp
push
push
frstor
xchg
movsb
fsubrl
out
js
out
xor
pop
mov
ss
adc
and
imul
dec
js
mov
mov
aas
movsb
outsl
out
or
sbb
imul
in
sub
scas
dec
or
stos
dec
bound
addb
sbb
jo
pop
xor
dec
xor
cli
sbb
push
outsb
ljmp
out
in
inc
xchg
sahf
sub
imul
jbe
push
clc
out
push
lret
mov
out
fwait
xor
jecxz
push
aad
xor
div
sub
and
arpl
jecxz
inc
dec
out
inc
mov
jmp
nop
sti
xchg
cwtl
xorb
data16
lcall
push
in
out
repz
mov
sbb
push
adc
add
cmp
in
out
cld
lcall
mov
lods
jecxz
pop
jmp
cmp
cmp
xlat
ljmp
pop
sarl
mov
jmp
adc
out
inc
lods
push
dec
jbe
lds
icebp
aas
pop
mov
xor
test
xor
xchg
adc
push
mov
sub
xlat
out
sub
dec
or
data16
mov
loope
movsb
add
mov
mov
bound
jmp
insl
in
push
mov
int
cmc
daa
cmovo
out
imul
out
popl
push
sbb
sub
cld
sub
mov
push
push
xchg
push
js
nop
sub
or
in
sbb
fucomi
mov
add
gs
pushf
sbb
cmc
xor
and
sbb
aas
out
sub
lcall
das
mov
into
lret
js
outsl
call
out
jae
dec
jo
fisttps
je
sbb
pop
loopne
call
data16
and
cmp
adc
adc
mov
mov
mov
dec
fwait
xor
sbb
enter
add
mov
pusha
ret
cwtl
add
out
and
aam
cmovs
push
addb
jmp
imul
int3
and
mov
mov
cmp
pop
fdivr
out
aaa
xchg
clc
lods
sahf
out
ret
sbb
and
js
jae
cmpsl
jnp
mov
out
pop
test
fwait
shrb
loop
sub
pop
inc
or
pop
notb
lret
out
jp
loop
push
es
cli
and
sti
pop
dec
in
mov
mov
cmc
adc
out
or
inc
clc
std
push
cmp
rolb
xor
push
mov
cltd
frstor
loope
sub
imull
xchg
fdivrl
out
mov
dec
lret
ret
in
mov
in
jo
adc
cmp
inc
pop
xor
jo
fstpt
insl
adc
cmp
outsl
out
push
pop
xchg
push
test
iret
and
xchg
fmul
push
add
mov
jecxz
js
adc
pushf
out
jno
cld
sahf
mov
push
ss
xchg
outsl
lret
icebp
test
fdiv
push
cmp
repz
and
out
or
notb
and
mov
pop
imul
mov
orl
jecxz
cmp
mov
lea
jbe
jne
pop
pop
out
repz
das
xchg
out
ret
data16
and
push
jo
mov
out
jb
cs
fidivrl
xchg
imul
cmp
enter
add
sti
out
xorb
push
test
aam
or
cld
or
push
push
sbb
inc
mov
je
pop
out
fcompl
adc
les
adc
out
iret
lds
test
xchg
xor
push
imul
inc
icebp
popa
cmc
sbb
pop
sbb
iret
sub
jnp
out
in
out
jle
push
pop
les
mov
add
or
outsl
test
xchg
adc
sub
inc
xor
inc
push
push
xchg
cwtl
repnz
mov
or
out
xor
push
inc
out
xor
cld
lods
inc
out
lock
mov
xor
jne
loopne
cmc
out
ret
stc
test
cmp
rcrb
je
add
cltd
stc
sub
sbb
lds
out
test
loope
enter
ljmp
mov
jb
out
and
sbb
leave
jo
lcall
out
cwtl
xchg
iret
add
pop
mov
xor
scas
shr
in
adc
jp
fdiv
jno
pop
push
jecxz
ja
stos
lock
push
repz
les
jl
insl
sub
leave
subl
cld
int
inc
pop
divl
jmp
mov
stc
scas
in
inc
lds
test
loopne
out
mov
les
stc
ret
leave
adc
xchg
xchg
xchg
lods
fdivl
or
mov
repnz
mov
cmp
jle
daa
pushf
jo
mov
push
hlt
stc
pusha
sbb
jns
sub
aas
shlb
sbb
insl
mov
out
sahf
lea
pusha
hlt
jmp
out
je
dec
inc
insl
fs
loope
into
out
and
lock
cmpsl
out
lods
mov
mov
sub
dec
leave
lds
jno
mov
xchg
sbb
dec
out
xor
out
cmpsl
loopne
ret
xorb
inc
lahf
icebp
mov
and
jne
and
cld
jmp
repnz
dec
mov
dec
mov
mov
jl
hlt
jle
inc
scas
fistpll
push
mov
sbb
xor
sbb
dec
pop
mov
aas
sti
sbb
out
daa
jp,pn
out
inc
nop
icebp
fidivrl
clc
not
sub
in
add
sahf
in
adc
mov
cmp
test
lods
and
mov
adc
std
adc
sti
fsubl
jmp
out
jg
lahf
imul
into
repnz
fcomps
cmc
ds
mov
loop
mov
inc
in
das
leave
cmc
shr
out
and
or
popf
jnp
lahf
jo
pop
mov
jmp
xchg
mov
jo
add
mov
pushf
xor
cmpsb
mov
out
sbb
mov
sahf
dec
sbb
rcrb
jne
or
xchg
in
into
sub
lret
icebp
fs
mov
xchg
clc
inc
sbb
cmpsb
jo
leave
jne
adc
fstp
adc
inc
push
xchg
ljmp
subb
hlt
pop
jb
lock
mov
lahf
mov
out
in
cmp
jge
dec
int3
popa
push
loopne
ljmp
ja
jmp
lcall
cltd
jns
repz
jg
dec
push
push
std
ljmp
idiv
lock
sub
lods
mov
push
mov
loope
out
xchg
pop
in
cmc
pop
out
orl
out
inc
nop
lret
and
aad
out
lahf
fdivl
cmpsb
jle
dec
xor
loope
jo
inc
jmp
and
lds
insl
outsl
subb
out
mov
inc
mov
sbb
mov
xchg
dec
jp
out
fisubl
xchg
ja
dec
and
fidivrs
nop
pop
jmp
fs
testl
out
or
mov
mov
cmpl
repnz
dec
jnp
fwait
in
jmp
cmp
inc
mov
scas
pop
nop
and
mov
add
xlat
or
mov
cmc
fcmovnb
jae
mov
xchg
lea
cmpl
push
out
cmp
out
xor
pop
scas
in
push
out
push
mov
hlt
or
inc
pop
xor
inc
loope
push
aas
pop
inc
xor
mov
cld
mov
repnz
aas
shlb
mov
push
imul
jns
ss
aas
mov
sahf
das
shrl
xorb
cmp
xlat
loop
sbb
inc
ljmp
test
popa
out
cmpsb
sbb
mov
out
cmpsb
cmc
or
pop
mov
cmp
push
xor
cmpsb
cs
shr
pop
lret
scas
shr
and
xchg
call
test
xor
push
in
push
test
mov
sahf
scas
fsubr
adc
mov
shll
add
cmc
ss
sbb
mulb
cmp
cmpsb
das
lock
mov
notb
mov
int3
jo
div
popf
mov
dec
jo
add
jno
clc
and
inc
jmp
in
sub
stc
pop
imul
xor
in
xor
stos
pop
and
cmp
dec
out
push
pusha
sbb
mov
pop
mull
mov
mov
inc
jbe
add
stos
mull
push
xorl
sbb
fidivrl
mov
rolb
pop
sahf
out
mov
repz
sub
xchg
outsl
out
inc
sahf
mov
repnz
loop
xor
jne
out
sbb
and
icebp
jg
jnp
push
mov
jne
aas
mov
cmpl
aam
out
xor
lret
adc
and
out
stc
pusha
jecxz
and
xchg
rcrl
jecxz
je
out
adc
push
js
pop
xchg
in
lods
lcall
out
cltd
fisubrl
push
push
push
test
aas
insl
xchg
outsl
hlt
test
adc
movsl
out
mov
cli
loopne
decl
mov
cmp
out
pop
insb
fldenv
int3
fadds
dec
dec
out
adc
stc
fcoml
jmp
xor
cs
scas
out
bound
sbb
lcall
jno
mov
xchg
mov
sbb
dec
out
insb
mov
jle
push
imul
jmp
loope
loopne
divb
xchg
insb
add
aad
je
push
xorl
daa
imul
xchg
addr16
mov
push
fs
pop
popa
push
movsb
pop
out
movsl
ja
jp
push
or
pop
sbb
popl
test
out
sbb
inc
sbb
out
dec
add
dec
mov
and
insl
out
ret
outsb
push
ja
test
out
mov
dec
jmp
out
xor
adc
and
je
push
sub
lcall
sbb
in
xor
jmp
lret
out
stos
cbtw
popf
mov
je
orl
push
push
insb
daa
pop
andl
add
loopne
add
mov
xchg
out
lea
dec
aas
roll
imul
fldenv
icebp
nop
mov
jb
fdivl
shl
rcrb
sbb
pop
mov
jo
popf
lods
addr16
jecxz
and
inc
test
push
sub
dec
in
sbb
adc
scas
push
cwtl
add
jecxz
movsb
shr
jmp
pop
inc
shll
out
mov
outsb
cld
xor
in
shlb
sub
ret
push
setnp
loop
in
out
in
adc
out
out
push
xchg
ds
stos
test
mov
clc
lock
sub
outsl
repnz
shll
jo
xor
pop
dec
shr
rorb
inc
and
in
scas
xchg
stc
inc
das
daa
jae
and
dec
push
jecxz
mov
cmpsl
outsl
fcoml
imul
inc
xchg
jmp
mov
cmp
lds
out
xchg
xor
jo
dec
jae
mov
adc
idivb
iret
xchg
syscall
outsb
or
nop
popa
pusha
rcll
inc
ret
mulb
add
add
push
mov
repnz
daa
xchg
repz
cmp
cmp
pop
sub
lret
and
icebp
scas
stc
pushf
stc
push
stc
cs
int
mov
nop
cld
ss
and
pop
and
cmpsl
add
stc
mov
aas
js
inc
dec
bound
xchg
push
repnz
xchg
fnsave
pushf
fisttps
fistpll
popa
popa
shll
xchg
sub
mov
imul
pop
jge
xchg
pop
jno
pusha
xor
sti
and
pop
test
pop
fbld
inc
adc
or
add
stc
mov
stos
stc
lods
stc
lods
stc
fdivrp
mov
xor
vmread
xor
data16
jp
jl
jle
jle
jle
jle
jle
jle
pop
xor
fidivs
mov
mov
aaa
add
repz
repz
jge
jl
cs
repz
add
mov
jecxz
mov
add
cld
pushf
fdivrp
int
subl
mov
inc
ret
pushf
lret
sbb
push
repz
mov
push
out
and
int
out
movsb
xor
mov
mov
test
pop
dec
pop
jmp
or
add
imulb
cmp
add
mov
dec
fmull
mov
es
cmp
cmp
jmp
xor
mov
cmp
aas
sub
pop
xor
loopne
rcr
and
outsb
sub
in
popa
nop
mov
pusha
cmp
cmp
test
repz
xor
xor
xor
xor
xor
xor
xor
xor
loopne
movsb
les
rep
mull
jle
add
ret
loop
and
repz
and
add
mov
add
pop
repz
sbb
adc
stc
inc
icebp
addr16
add
stc
mov
stc
orb
dec
push
adc
or
pop
pop
rcr
push
fisttps
popa
les
push
sub
xlat
lods
test
pop
mov
test
sbb
adc
js
or
pop
daa
popa
mov
dec
test
mov
popa
push
xor
repz
xlat
insl
test
pop
or
in
test
sub
lds
repz
add
gs
cmp
jne
and
mov
mov
add
mov
pop
mov
movsb
insb
push
fisttpll
or
mov
cmp
aas
mov
mov
sbb
cmp
leave
xor
xor
xor
and
pusha
and
cmp
aas
cmp
add
and
outsb
lea
jg
sbb
xor
add
ret
movsb
aad
inc
adc
or
stc
jmp
in
fcoml
and
hlt
add
xor
ss
fsubs
cli
popa
stos
mov
mov
xchg
roll
ret
jns
jg
mov
mov
jmp
popa
mov
xchg
adc
f2xm1
arpl
adc
loope
pop
in
and
loop
and
outsb
insb
daa
repz
push
sub
imul
shl
adc
dec
movsb
push
lret
add
inc
push
clc
or
lods
adc
push
inc
fcmovb
bound
jp
jl
jle
jle
pop
push
and
fisubs
push
mul
and
mov
cmc
mov
jbe
call
pop
test
mov
sbb
test
insl
js
jp
pop
mov
inc
ficomps
gs
and
ret
mov
imul
pop
cmc
pop
sub
in
pop
and
outsb
pop
mov
jne
mov
jo
ret
in
shlb
ds
push
cmp
fidivrs
sbb
mov
or
mov
inc
adc
and
mov
add
push
cld
fcoms
rol
loopne
repz
add
push
stc
das
icebp
insb
stc
scas
jnp
add
xchg
enter
cmp
push
push
add
xor
arpl
cmp
cmp
popa
out
mov
outsb
dec
mov
mov
mov
loope
mov
cmpsl
mov
dec
or
add
stc
imul
loope
xlat
mov
idivb
ss
cmp
aam
push
lods
mov
jne
sbb
adc
mov
jno
rcl
loop
ret
dec
dec
ficoms
out
and
shll
mov
aam
into
pop
add
dec
or
aas
movsl
adc
dec
fsubs
pop
xchg
hlt
xchg
add
sub
or
repz
mov
stos
mov
ljmp
cmp
in
and
lods
icebp
in
stc
sub
insl
stc
lods
stc
jmp
das
out
rcr
and
or
mov
push
fisubrs
lret
mov
push
adc
enter
leave
pop
sub
hlt
xchg
and
inc
sub
pop
imul
and
pop
xor
inc
cmp
pop
cmp
jmp
xchg
inc
and
pop
mov
inc
shll
ret
shll
add
inc
repz
call
scas
stc
or
cmp
sbb
dec
stc
lods
stc
pop
stc
mov
fstp
or
jno
mov
xor
loopne
and
mov
out
inc
xchg
cmc
cltd
pop
lock
ljmp
decb
cmp
sbb
dec
scas
pop
mov
lock
les
enter
mov
test
push
aaa
ffreep
fbld
fbstp
push
fbld
pop
fisttps
sub
ficompl
dec
fistps
fisttps
push
iret
pop
sub
fimuls
pop
outsl
and
call
xorl
xchg
rcll
push
ret
shlb
jl
push
push
ja
inc
insb
inc
sbb
jge
or
scas
inc
dec
scas
mov
pop
adc
push
jecxz
jp
lea
sbb
push
packssdw
xor
ret
outsl
movsb
and
mov
lahf
test
addl
sbb
dec
dec
fdivp
aad
jg
or
xor
mov
xor
shl
ljmp
jb
sbb
jmp
xor
and
and
mov
repnz
inc
int
jp
lret
jle
jle
jle
jle
jle
pop
push
ret
adc
and
sub
push
imul
pop
add
inc
push
pushl
ficoms
pop
insb
dec
push
jne
in
div
shlb
test
mov
jmp
ds
cmc
adc
dec
jae
icebp
int3
icebp
jg
push
stc
jno
jae
xchg
stos
outsb
jns
mov
cmp
in
lret
pop
mov
inc
je
xor
dec
mov
divl
fsts
pusha
add
and
push
cmp
aas
lret
ror
mov
fisttps
cmp
cltd
outsl
scas
sub
and
add
mov
push
xchg
mov
cli
data16
pusha
push
daa
cmp
cmp
sub
xchg
mov
movsb
scas
mov
call
movsl
movsb
shll
rep
repz
xchg
mov
pop
inc
xchg
rcrb
aas
xchg
dec
sub
sub
adc
aaa
mov
cmpsl
enter
cld
add
and
adc
ja
fisubl
jp
pop
jp
jl
jle
jno
and
lret
cmp
add
aam
push
mov
aaa
xorl
jmp
loopne
shrl
push
add
scas
mov
push
dec
clc
call
sbb
jo
inc
mov
imul
sbb
test
ja
jl
jle
rorb
dec
or
add
shlb
mov
stos
dec
cmp
aas
sbbb
mov
rcl
jne
in
mov
stos
rcl
sarl
ffree
in
mov
dec
push
xchg
inc
xor
pop
jmp
neg
ss
ja
push
rorl
mov
mov
cmp
lods
add
mov
cmp
cmp
jne
fs
aas
test
xor
inc
shl
movlps
mov
mov
pop
jle
add
arpl
push
sub
in
loopne
in
loop
hlt
fwait
and
outsb
sbb
addl
js
inc
loop
sbb
cld
sub
in
jecxz
rcll
ret
pop
xor
gs
scas
mov
pop
xor
or
test
jbe
jnp
out
repnz
out
cmp
adc
cmp
pop
out
andb
test
mov
jne
mov
and
daa
sbb
cmc
mov
out
jmp
add
bound
addr16
iret
out
push
movsb
xchg
and
loopne
and
rcrl
cmp
aas
cmp
aas
loope
dec
mov
in
add
xchg
jecxz
or
das
in
mov
pusha
push
mov
mov
cmpsl
aad
pop
push
es
fidivrs
jne
add
sub
jp
or
into
dec
or
mov
repz
jmp
and
inc
aas
inc
or
insb
push
gs
push
sub
dec
xor
stc
scas
js
jne
bound
cmpsb
dec
js
jp
jl
mov
test
pop
shlb
fdivrl
cs
push
bound
cs
mov
fsubrp
pop
fnstsw
sub
adc
test
movsb
sub
mov
adc
pop
stos
push
shlb
fistpll
mov
loop
cmp
inc
lret
xchg
icebp
inc
inc
fbstp
incl
adc
cmpsl
xchg
inc
in
aaa
pop
rclb
repz
lret
repz
repz
xchg
and
push
lds
cltd
sbb
mov
test
outsb
inc
mov
or
mov
lods
xor
xor
and
sbb
or
push
pop
push
adc
ret
jb
ret
scas
mov
push
mov
dec
enter
pop
out
inc
mov
xchg
js
popf
cs
jns
pop
cmp
aas
cmp
lret
jmp
movsb
arpl
xor
outsb
mov
inc
xor
adc
pop
lods
xorb
adc
fdivrp
out
jae
dec
add
jnp
lock
xchg
xor
jmp
out
push
in
pop
dec
shrb
cmp
nop
inc
and
fidivs
pop
adc
test
orb
push
hlt
xchg
mov
notb
sub
mov
aas
inc
orb
mov
imul
and
xor
out
pop
out
mov
subb
fcoms
pop
mov
rclb
dec
repz
repnz
shrb
push
jmp
pop
repnz
cmpsb
inc
cmp
loope
jb
mov
add
and
push
pop
or
es
mov
xchg
fcoml
xchg
ret
add
lods
je
mov
cmc
out
jbe
test
cmp
mov
jne
sbb
jns
hlt
rcrl
lea
jbe
xor
out
xchg
in
push
add
popa
movsl
movsb
add
mov
adc
xor
xor
adc
lcall
push
or
pushf
fimull
pop
lods
lods
pop
in
insl
shrb
insb
imul
inc
stos
neg
sub
pop
sub
sub
pop
mov
push
push
sahf
sub
dec
aas
dec
dec
jp
mov
jg
push
xchg
xchg
leave
add
movsl
shrb
lea
dec
fisttps
pop
lret
test
mov
imul
cmp
cmp
mov
mov
adc
shl
ret
lahf
inc
pop
adc
add
or
mov
mov
je
xor
loop
push
add
cmp
pushf
frstor
xor
or
xchg
sti
and
cmp
aaa
loopne
ret
and
test
je
enter
add
adc
mov
pop
jg
add
dec
mov
pop
mov
dec
ret
out
add
aam
mov
sub
insl
sbb
xor
xor
jmp
push
lcall
andb
call
push
add
lret
adc
or
jo
adc
xor
aas
popf
dec
fcomi
out
dec
dec
jo
dec
bound
mov
ds
loopne
cltd
and
popa
sbb
push
jo
inc
rclb
xor
sub
stc
insl
icebp
into
stc
dec
dec
pop
pop
jne
jb
mov
jp
aad
push
jbe
cwtl
jp
das
lret
cld
mul
pop
xor
addb
add
shrb
fistpll
jmp
fistps
test
shl
xchg
addr16
jl
sub
jp
das
xor
add
mov
movsb
add
inc
mov
fistpll
mov
movsl
mov
cmpsb
inc
loope
pop
pop
jbe
test
outsl
test
inc
loope
ffreep
inc
xor
push
mov
icebp
cmp
pop
loopne
aam
stos
pop
dec
ret
divb
cmpsl
in
mov
or
ds
cwtl
outsb
lret
mov
dec
mov
mov
lea
push
and
add
pop
inc
aas
push
loopne
jno
pusha
push
pop
lcall
ret
test
test
ret
dec
imul
gs
xor
shrl
enter
mov
xchg
aas
into
cli
cmp
and
outsb
dec
mov
xlat
and
shll
test
cmpb
jle
jle
jle
jle
jle
and
ja
mov
cmc
lcall
insl
sub
dec
xor
jg
jle
punpcklwd
add
push
aaa
repnz
dec
cli
dec
fdivrp
in
mov
jb
out
xchg
adc
cmp
into
imul
and
ljmp
adc
xchg
test
cmp
xchg
pop
lret
pop
into
pop
pop
pop
loopne
inc
dec
jae
int3
mov
imul
in
rorb
xor
xor
lods
jb
mov
paddsw
adc
jnp
out
enter
push
or
sti
popa
xchg
aad
inc
popa
adc
scas
jnp
daa
xor
test
dec
addr16
jnp
push
push
inc
mov
sub
inc
imul
mov
xchg
inc
ljmp
mov
dec
pop
fstl
xor
rclb
and
popa
enter
sbb
sub
and
movb
sub
mov
lds
dec
or
icebp
mov
stc
jnp
out
sbb
fiadds
sub
clc
and
jnp
xlat
and
mov
test
jb
jle
jle
jle
pop
repnz
xchg
pop
add
add
les
sar
jecxz
inc
out
fisubrl
inc
outsb
xlat
test
dec
movsl
repnz
pop
jg
adc
rolb
outsb
inc
addr16
push
fsubp
pop
sbb
push
popf
or
pushf
inc
and
push
in
popa
and
lret
push
add
mov
cld
stc
jmp
sbb
loopne
lcall
movsb
rolb
test
cmp
ror
push
inc
popa
jo
cmpsl
add
mov
gs
dec
imul
pop
loope
fstp
pop
das
sar
ret
mov
lock
adc
mov
ret
int3
in
xchg
arpl
mov
dec
int3
jnp
or
push
ds
and
add
or
inc
jbe
and
xchg
cmpsl
mov
popf
inc
add
outsl
and
jo
pop
data16
jp
das
iret
lods
imul
int
dec
in
push
xchg
loope
jb
out
dec
mov
xor
adc
loopne
lcall
leave
cmp
out
and
popa
out
sub
loopne
or
cs
aas
pop
cmp
cmp
push
cs
cmpl
enter
push
adc
dec
or
lods
mov
dec
ret
cmp
aas
in
dec
push
jmp
jne
dec
in
lds
pop
and
insl
mov
hlt
loop
scas
xor
mov
jbe
das
test
mov
inc
dec
int
adc
loope
push
ret
movsb
dec
mov
add
xor
ret
dec
add
repz
das
sub
or
jle
push
mov
out
xchg
sub
insb
inc
and
rolb
xor
in
and
jge
or
bound
das
cwtl
repnz
outsl
cli
std
fisubs
lods
push
jecxz
or
dec
insb
imul
dec
jne
popa
lods
mov
out
pop
repnz
xor
xlat
cmp
pop
loopne
test
enter
dec
inc
adc
mov
adc
bound
ret
sbb
mov
jmp
or
rcll
bound
inc
out
xlat
adc
aad
pop
inc
mov
xchg
jne
movsb
or
xchg
push
push
adc
gs
dec
lret
fidivs
jbe
roll
mov
rcll
mov
push
pop
push
or
rcrb
mov
and
and
repnz
pop
cli
in
loopne
mov
icebp
xor
std
call
dec
cmp
idiv
sub
push
push
sub
test
sub
mov
and
pop
mov
in
push
and
cmp
pop
xchg
jg
push
mov
add
inc
ss
mov
jp
mov
popf
shr
int3
xlat
outsb
mov
adc
pop
dec
imul
rcl
jecxz
aam
push
inc
scas
mov
xor
adc
scas
jge
int
icebp
shl
mov
pop
mov
repnz
loopne
imul
xor
insl
fistps
lds
mov
mov
xor
dec
ss
mov
inc
repnz
shl
out
data16
out
jnp
cld
mov
jp
js
xchg
aaa
push
popa
push
test
inc
int3
or
mov
or
loopne
outsb
xchg
mov
or
lcall
lods
imulb
sub
xchg
outsb
adc
and
lret
icebp
or
jmp
arpl
xor
add
loope
xchg
repz
fimuls
pop
pop
pop
jmp
adc
mov
mov
in
jno
andb
imul
loopne
popa
popa
dec
mov
dec
pusha
cmp
dec
jp
addl
in
or
popa
orb
xor
cmpsl
lods
add
xchg
push
aad
sub
jbe
test
idiv
sub
push
shll
subl
sbb
and
add
inc
cmp
int
lods
enter
or
inc
lods
das
lret
adc
andb
scas
jns
cmovs
jae
dec
ret
sub
jmp
lods
mull
inc
push
scas
sub
shll
bound
and
pop
popa
pop
pop
pop
inc
hlt
fisubrl
xchg
fstl
sub
adc
xorl
jmp
inc
jne
and
push
fmull
fdivl
adc
jbe
bound
enter
jae
movsb
add
adc
movb
imul
ret
jg
mov
loope
push
testb
gs
or
jo
or
mov
pop
lods
lods
and
push
adc
xchg
dec
jmp
mov
mov
xor
jmp
xchg
mov
test
cmpsl
or
popa
lds
cltd
sub
add
test
jmp
loopne
sub
loope
inc
inc
xchg
push
in
add
dec
negb
adc
mov
rclb
imulb
je
or
mov
sarb
fisttps
ja
sub
imul
dec
mov
insl
rol
repz
arpl
mov
and
fucomi
add
adc
jbe
loope
insl
mov
hlt
xor
jns
mov
lods
shr
cmp
pop
outsb
add
ret
shll
mov
pop
enter
push
jmp
sbb
xor
into
inc
test
cmpsb
inc
shrl
add
addb
imul
cli
xor
repz
dec
popa
jmp
loopne
mov
and
sub
daa
imul
movsb
dec
sbb
jo
mov
out
push
arpl
dec
or
out
jl
popa
jecxz
imul
jb
shll
pop
push
mov
mov
out
aam
cmpsb
jne
mov
addb
mov
jmp
xchg
sub
and
mov
mov
or
daa
in
insl
imul
or
icebp
push
sub
push
in
cmc
sub
cmp
lods
popa
push
add
repz
mov
rcrb
jne
popf
stc
in
jnp
dec
xchg
ds
lret
sub
adc
and
imul
and
test
loop
pop
in
repnz
outsl
decb
lret
inc
inc
push
fwait
test
shll
je
adc
scas
testl
jmp
pop
sub
and
popa
sub
inc
outsb
and
leave
inc
ret
ficomps
and
outsb
sub
imul
push
shr
jnp
dec
jb
fsubp
add
aaa
shrl
shrb
push
mov
test
jl
fnsave
cmpsb
in
and
inc
ret
jne
push
imul
rol
mov
movsb
call
xor
jecxz
je
mov
ucomiss
fisubrs
imul
jmp
jle
jle
jle
jle
and
mov
fildll
repnz
and
jle
xchg
popa
mov
add
pusha
or
arpl
test
cmc
hlt
mov
sub
aaa
dec
imul
cmc
jp
jbe
test
aam
dec
pop
not
sub
lret
fisubrl
enter
or
das
mov
test
adc
jbe
push
call
dec
adcl
insl
imul
jmp
mov
mov
scas
bound
inc
and
and
lret
jo
mov
xor
sbb
mov
divb
loopne
test
and
stos
push
push
pop
loopne
fildll
cs
sub
mov
adc
and
shll
mov
jmp
push
mov
subb
push
stos
imul
pop
subb
jbe
adc
or
scas
cmp
inc
xchg
repz
and
xor
cmpsl
lods
aaa
xor
aas
jne
xor
xor
icebp
sub
bound
mov
scas
repz
pop
insb
mov
and
leave
call
pop
mov
aaa
dec
ljmp
test
aas
leave
stos
xor
xor
icebp
sub
lods
dec
sub
push
and
dec
and
fmuls
mov
xor
ror
aaa
loopne
push
ss
dec
sub
ljmp
stos
mov
ret
pusha
inc
sub
das
jnp
dec
xchg
scas
imul
mov
xor
flds
xlat
mov
ss
or
fildll
fildll
fildll
jbe
rep
test
jne
fildll
pop
mov
fwait
loope
loopne
mov
jl
mov
adc
mov
xchg
test
js
stos
jle
jle
jle
xchg
lods
outsb
xlat
test
fildll
fbld
fbld
mov
imul
mov
sub
ja
out
rol
stos
pop
xchg
stos
fildll
call
add
icebp
and
push
out
mov
xor
iret
aaa
jge
in
outsb
psllq
repz
sub
jmp
sub
dec
lods
lods
ljmp
and
scas
and
mov
insb
arpl
sub
jae
jmp
dec
int
ss
sub
sub
jbe
mov
add
pop
subb
repz
bound
inc
test
and
mov
xor
icebp
mov
aaa
aas
out
xor
shlb
test
repnz
stos
mov
fildll
repz
repz
bound
pop
mov
mov
test
mov
bound
mov
popf
xor
ret
aaa
xor
cmpsl
sub
leave
sub
test
rcll
add
test
cmc
scas
mov
and
mov
mov
inc
mov
mov
mov
push
mov
add
subb
adc
ret
cmpsl
subl
fmulp
mov
and
lds
mov
inc
mov
dec
mov
or
test
mov
into
lods
dec
lods
fimuls
fildll
bound
pop
mov
test
mov
adc
aaa
dec
in
fisubrs
dec
lds
out
mov
scas
mov
jo
scas
xchg
cs
repz
mov
bound
pop
xchg
and
aam
and
je
jle
and
mov
movaps
bound
js
sub
xchg
sub
test
gs
and
add
fisubrs
sub
pop
scas
mov
mov
shr
cmc
sub
push
push
or
insl
mov
lods
cltd
imul
sub
loopne
jne
arpl
jecxz
push
pop
test
jmp
mov
call
je
mov
cmpsl
adc
sub
lahf
jne
arpl
jecxz
jecxz
cmp
mov
xor
jmp
adc
shll
sub
cmp
mov
sub
loop
cltd
ret
and
imul
loopne
sbb
inc
scas
jecxz
testl
push
add
fsubrs
push
dec
fisubrs
scas
out
dec
mov
push
xor
into
je
das
cmpsb
jmp
pusha
test
jnp
sub
push
xor
inc
adc
mov
fimull
adc
push
mov
add
and
aaa
xor
jg
jb
dec
jne
sbb
adc
leave
in
insl
mov
roll
jo
andl
loop
mov
push
cld
lock
out
lahf
xor
pop
ret
insb
adc
out
popa
lds
mov
or
xchg
sub
cmp
or
dec
pop
out
shlb
mov
out
mov
dec
mov
push
js
cmc
out
out
mov
mov
cmpsb
pop
sahf
lret
imul
cli
dec
andb
add
aaa
cmp
outsb
add
out
push
and
sbb
sub
lods
dec
repz
inc
mov
das
mov
shlb
notl
xlat
xor
push
imul
dec
out
ret
rolb
push
aas
rolb
mov
dec
pop
inc
cmp
movsl
mov
out
or
movsb
cmp
sub
out
aaa
leave
into
nop
pop
repnz
int3
cmc
cmc
lods
inc
push
pop
jo
in
sub
sbb
in
daa
adc
ss
xchg
mov
mov
add
mov
lds
cmp
jae
adc
adc
dec
pusha
outsb
add
lock
clc
adc
cmp
jecxz
push
daa
push
push
dec
arpl
cltd
mov
sub
xor
ret
adc
sti
movsb
std
sbb
add
dec
fwait
mov
in
cmp
cltd
mov
out
push
mov
cmpsb
out
xor
stos
sub
lahf
cmc
call
popa
test
and
cli
inc
shr
jo
scas
push
jl
out
sub
or
out
popf
outsl
addr16
dec
xchg
fucomip
out
add
lock
mov
jne
cmpsl
sbb
out
pop
in
fisubrl
mov
mov
pop
cmp
js
pop
jmp
push
gs
in
cmp
fsubr
fiaddl
hlt
je
mov
fcompl
jo
ja
sub
jle
jno
in
pop
enter
xchg
add
cmp
add
std
cmp
sbb
insb
lock
test
push
loop
insl
in
pop
mov
pop
pop
out
cmp
stos
jo
pop
cmpsb
sbb
push
mov
inc
xchg
movl
out
xor
xchg
xor
or
out
cmp
pushf
mov
out
incl
out
rcl
mov
add
add
out
jmp
mov
cmp
add
roll
je
and
cmp
repnz
ljmp
out
mov
icebp
jg
out
sti
mov
loope
xor
sbb
out
imul
add
or
push
or
test
cld
mov
out
mov
sar
jmp
xchg
test
pop
pushf
and
shl
push
popf
lods
ja
std
out
pop
ds
jnp
fimull
xor
xor
out
and
std
das
popa
mov
insl
ljmp
out
js
test
mov
sahf
repnz
jae
dec
jmp
xchg
imul
dec
sub
rdtsc
jnp
rorb
movb
mov
sbb
out
and
dec
pop
int
adc
mov
xchg
scas
cwtl
out
pop
sub
jns
gs
out
mov
into
xor
rorb
aad
imul
xchg
out
out
fmuls
add
jo
mov
je
xchg
dec
repnz
jo
ss
testl
inc
pop
add
subl
mov
jmp
lds
add
mov
or
cmp
adc
pop
cmp
jns
pop
mov
rcrl
mov
enter
mov
fsts
dec
fcompl
xor
js
ljmp
les
sub
and
icebp
push
mov
cwtl
shll
inc
xchg
iret
mov
add
jecxz
ret
test
xor
mov
in
lcall
ret
cmp
out
mov
in
push
adc
hlt
je
and
push
mov
push
aad
jle
out
add
mov
shrl
std
jge
mov
out
lret
fimuls
fdivrs
inc
ljmp
dec
aas
movsl
into
pop
xor
cs
hlt
jecxz
test
in
cwtl
out
das
pusha
out
jb
jae
mov
insb
out
lock
out
popa
ret
fdivrs
aaa
ficoml
in
mov
in
aam
imul
jge
mov
mov
movsl
cmp
popf
into
mov
push
xor
fbstp
leave
and
push
out
push
movsb
inc
aaa
mov
nop
mov
xchg
add
jmp
push
les
xor
out
lret
add
mov
xor
out
mov
jl
push
out
sbb
push
xchg
push
fsubr
mov
mov
adc
mov
aas
das
nop
int3
lahf
mov
rcl
add
sbb
dec
cmp
mov
push
out
cmpsb
add
insl
jne
test
fs
mov
inc
mov
daa
aad
cmc
inc
shrb
cmp
mov
pop
pop
push
scas
jp
xor
dec
pop
int3
lcall
xor
pop
out
notb
out
adc
std
jo
mov
imulb
rol
mov
jle
ror
xor
icebp
jo
js
into
mov
adc
pop
jecxz
jmp
mov
xchg
imul
sti
outsl
out
inc
sbb
mov
aaa
and
push
pop
dec
cmp
out
jbe
xor
gs
lea
adc
retw
cmp
jg
lret
fistps
addr16
clc
pop
adc
mov
scas
fbld
stc
out
inc
dec
and
shrb
xchg
dec
stos
repz
push
loop
rorb
call
mov
pop
jl
xchg
xor
cmc
das
sti
dec
and
out
adc
sahf
mov
jecxz
add
iret
outsl
leave
push
mov
inc
divl
dec
jo
pop
cmpsl
xor
in
jl
push
shll
das
rcpps
dec
push
xorl
loopne
mov
lahf
repz
imul
add
filds
jmp
je
push
xchg
add
bound
out
ficomps
jo
out
mov
loop
adc
mov
popf
bound
adc
and
out
in
inc
and
cwtl
outsb
lret
mov
stc
fcoml
test
in
mov
popf
out
ret
outsb
adc
xchg
jecxz
add
xor
push
cmc
js
scas
mov
xor
cmp
mov
loop
jle
jge
in
dec
push
push
outsb
mov
jne
das
push
dec
adcb
ret
in
fists
dec
outsb
mov
out
mov
xor
into
bound
add
out
cmpsb
sbb
mov
gs
jnp
insb
out
adc
jmp
int3
push
mov
lods
mov
out
out
enter
jns
xchg
xor
andl
mov
or
mov
fmulp
test
popf
cwtl
mov
sub
in
mov
rcll
dec
out
loope
out
push
xor
pop
inc
xor
mov
jo
mov
mov
jge
jae
sub
out
xchg
out
mov
test
mov
in
mov
out
mov
out
fwait
enter
out
testl
mov
pop
push
or
jmp
out
fldt
and
inc
dec
testl
pop
ret
push
in
dec
xor
cmp
xor
xlat
or
pop
loopne
div
adc
test
mov
jecxz
xorb
pop
fs
roll
cs
add
mov
pop
mov
out
cld
rcr
popa
pop
sub
add
cmc
not
mov
cmpsb
push
cmp
test
mov
cmpsw
aam
imul
adc
xor
or
in
ja
mov
sub
pop
ja
push
or
adcl
jo
aad
pop
in
out
imul
or
aam
sub
mov
mov
dec
hlt
sbb
push
cmp
adc
iret
xor
cli
out
orl
xchg
out
fwait
into
outsb
sub
std
add
iret
adc
in
sbb
pop
pop
inc
lret
insb
inc
lock
ljmp
ja
push
rclb
bound
xchg
add
fistpll
aaa
mov
in
cmp
movsl
in
sti
add
inc
mov
shr
rorl
stc
cmpsl
cltd
cwtl
scas
push
test
fnstcw
xchg
out
das
lods
ss
push
repz
or
fistl
push
inc
mov
add
push
jne
movd
adc
add
aam
not
test
mov
dec
xor
mov
mov
rcrl
out
jp
xor
push
pop
or
jg
ret
iret
jmp
push
shrl
aaa
call
rclb
loop
das
mov
push
add
and
ss
jle
hlt
es
push
out
xor
sub
mov
addr16
mov
mov
and
rcrb
imull
push
out
data16
pop
sbb
pusha
sbb
out
aaa
cwtl
add
inc
int3
stos
mov
out
andl
not
cmp
pop
xchg
out
mov
sub
jg
outsl
out
adc
imul
xchg
push
cmp
xchg
pop
pop
out
insb
rolb
sub
cmpsb
cmc
add
xchg
pop
pushf
sbb
xchg
jns
lods
xlat
dec
out
mov
in
enter
stos
mov
dec
ds
jns
sahf
xchg
nop
xchg
insl
test
out
mov
out
or
push
sbb
stc
out
xchg
mov
jno
out
outsb
push
adc
jns
rcll
dec
jl
sbb
repnz
addr16
jae
cmp
mov
sbbb
in
out
lahf
adc
out
fwait
jg
or
lock
out
mov
in
xchg
gs
pop
or
test
out
inc
inc
pushf
xchg
les
cmp
in
cmp
mul
lahf
jge
out
push
and
aad
fs
out
ja
push
cmc
inc
ficomps
out
push
iret
cmp
repnz
push
mov
out
pop
lds
push
or
sub
out
test
stc
sbb
scas
aaa
push
mov
dec
cmc
and
mul
fadd
loope
xor
jp
out
jmp
fucomp
xchg
lret
subb
inc
mov
adc
mov
mov
xor
mov
fdiv
aas
subb
mov
lods
fucomip
out
std
ljmp
ret
out
xor
roll
out
and
lea
loope
push
out
xor
mov
and
scas
mov
pop
idiv
aaa
pop
jecxz
and
aas
mov
xchg
imul
sub
mov
inc
push
out
ljmp
out
insl
iret
inc
sbb
stc
fnsave
lods
xor
adc
aaa
and
clc
fisubrl
adc
mov
fst
inc
pop
mov
popa
cmp
arpl
xor
xchg
push
out
jne
insl
jl
je
stc
jo
ret
push
dec
in
mulb
stos
jmp
imul
inc
xor
pop
idivl
and
out
pop
push
fsubp
imull
xor
dec
push
shlb
call
test
or
inc
inc
jmp
add
pusha
push
sahf
mov
inc
sbb
lds
push
clc
fwait
jle
xor
jg
insb
and
dec
out
push
push
fidivrs
add
movsl
out
or
push
push
xchg
inc
mov
maskmovq
dec
sbb
lea
mov
aad
mull
dec
mov
iret
ljmp
out
and
push
cmp
lcall
jno
out
fucomip
jae
and
fwait
in
jmp
out
popl
pop
push
lock
inc
jnp
orb
add
mov
in
ljmp
testl
into
sbb
sub
mov
inc
iret
or
dec
mov
mov
mov
movsl
and
in
or
xor
cwtl
inc
xchg
lret
xchg
adc
sti
out
jle
xchg
adc
stc
clc
mov
pop
out
hlt
mov
out
or
jge
addl
test
rclb
out
ret
test
jmp
notb
in
adc
jb
data16
push
or
in
out
and
lcall
lds
out
jae
mov
xor
ljmp
addl
das
call
in
clc
ret
testl
pop
and
js
push
mov
adc
testl
test
jp
inc
and
mov
jge
or
and
dec
stos
cld
pop
cmp
sbb
xchg
pop
lcall
xor
out
aam
pop
mov
pop
pop
test
lret
cmp
arpl
adc
sti
xchg
inc
in
jle
movsl
xchg
out
pop
cwtl
bound
add
push
adc
stos
fwait
inc
out
mov
arpl
int
mov
dec
sti
xchg
out
outsb
inc
inc
push
or
int
mov
repz
out
xor
mov
out
mov
mov
loopne
out
sbbl
test
jecxz
cmp
adc
or
ficomps
inc
xchg
mov
daa
xor
testl
hlt
rorb
fsubr
in
add
and
pop
jl
mov
test
push
int
and
out
outsb
pop
fnstenv
in
ljmp
js
pop
fldt
push
aam
mov
lret
or
sbb
jmp
orb
xor
cmpsl
fldl
popa
out
mov
mov
pop
in
xchg
push
xor
add
jns
prefetch
ret
xchg
stos
repnz
add
mov
mov
inc
call
sub
cmc
leave
lret
arpl
call
cltd
repnz
das
xchg
not
ret
lret
pop
out
leave
xchg
pusha
into
out
data16
js
in
fistl
ja
out
dec
mov
inc
or
imul
cmp
jno
cli
push
sahf
xchg
clc
nop
lock
in
mulb
adcl
out
jle
mov
add
aad
push
arpl
roll
mov
repz
out
arpl
jne
imul
orb
push
icebp
in
lea
aam
daa
and
xor
int3
repz
aaa
out
cli
lret
sbb
lock
dec
inc
xchg
in
pop
add
xor
push
xchg
out
cmpsl
loopne
call
add
and
or
lret
mov
out
pop
movsl
shll
jecxz
push
mov
pop
xchg
jp
and
sub
movsb
mov
xor
xor
jp
aad
ss
dec
call
out
mov
cltd
daa
out
sub
mov
jo
adc
aas
loop
inc
sub
add
fsubrp
push
jo
cmp
mov
sub
ret
sbb
test
mov
inc
push
push
jne
jle
cmc
or
stc
xor
ficompl
fdiv
outsb
mov
push
fldcw
jmp
es
jno
pusha
adc
psrad
in
cmpsb
pushf
dec
add
pop
mov
cmp
fldcw
dec
out
lret
loopne
sub
loop
popf
stc
sub
out
mov
pop
mov
lods
pop
mov
das
sbb
xchg
adc
push
lods
xor
stos
movsl
xchg
add
fidivrl
xchg
xchg
jg
jmp
mov
mov
adc
test
mov
xchg
out
adc
pop
stos
int
jecxz
out
out
jo
fiadds
out
adc
lret
mov
add
dec
xchg
lods
shlb
bound
imulb
fs
inc
xor
icebp
pop
in
jecxz
pop
roll
into
out
aaa
jmp
inc
pop
lcall
idivl
jb
xchg
fldt
insb
add
cli
push
mov
dec
xchg
adc
in
or
loope
jbe
imul
mov
jns
call
xchg
lcall
sbbb
xor
inc
stos
clc
rorb
paddsb
xchg
lahf
dec
lcall
orb
loop
push
jne
nop
push
pop
movsb
les
or
jmp
and
mov
mov
pop
out
ja
ret
loope
stos
mov
push
inc
sbb
mov
js
cwtl
jl
ljmp
mov
inc
push
icebp
and
mov
movsb
sub
scas
adc
mov
out
push
test
add
lcall
cmp
adc
jge
out
ret
mov
jo
js
mov
sbb
repnz
out
adc
mov
rolb
and
lret
lcall
sub
jo
xchg
xchg
jmp
insb
jb
out
lods
xor
shr
je
jp
inc
fdivrl
jae
out
add
add
and
lea
rcl
jb
jmp
shll
push
stos
test
dec
leave
cmc
jmp
dec
xchg
test
and
xchg
outsb
hlt
jo
push
ss
xor
xor
adc
ss
mov
jnp
popa
xor
call
adc
sbb
ljmp
adc
adc
sbb
inc
jmp
pop
stc
out
adc
mov
dec
mov
mov
push
push
out
cmp
pop
es
out
mov
cli
sti
mov
xor
dec
imul
xor
scas
out
jmp
mov
repz
out
lcall
lds
testl
fsubp
sahf
enter
push
rorb
adc
push
sbb
imul
inc
out
jns
xor
push
or
cwtl
fsubs
xchg
mov
mov
cmp
lea
dec
out
sti
inc
stos
lock
fs
sahf
out
mov
mov
adc
mov
push
out
popa
xor
jg
out
jle
fstl
lods
imul
out
add
lods
jae
xchg
sbb
jns
mov
and
ds
iret
pop
push
leave
jmp
add
push
push
cmp
ja
js
cld
clc
xchg
pop
aaa
sti
out
cmp
pop
out
cs
sbb
bound
add
out
fisttpl
dec
jne
loope
out
inc
push
cwtl
add
into
test
ror
and
jg
out
sbb
or
mov
sbb
xchg
andl
mov
out
fucomip
xchg
lret
xchg
sbb
jl
pop
xchg
fcomps
js
fldt
ss
roll
pushf
inc
dec
xchg
or
jo
notl
pop
inc
xor
icebp
loopne
sbb
out
jae
mov
mov
out
leave
daa
sub
insb
or
mov
mov
sub
pop
into
xchg
testl
dec
out
mov
fsubrl
mov
jns
mov
xor
jp
addr16
popa
icebp
jae
out
adcb
pop
inc
and
clc
out
or
ljmp
cmp
in
sub
inc
xor
mov
jo
int3
loopne
xchg
hlt
outsb
mov
dec
pop
adc
cmp
les
popf
jge
cmpsb
dec
jp
ret
xor
frstor
jns
out
push
pop
jo
cmp
sbb
in
mov
lods
lods
mov
adc
pop
jbe
inc
out
cmp
jne
xchg
loope
xchg
out
shl
movl
add
out
or
arpl
repnz
dec
xchg
adc
add
push
outsl
push
jmp
push
pop
bound
mov
mov
stos
jo
gs
lods
mov
sbb
jg
add
or
popa
jo
sar
mov
mov
cmpsl
mov
cmp
inc
enter
mov
mov
out
dec
inc
aam
out
cmp
lahf
xor
es
sahf
pushl
mov
pusha
adc
mov
and
dec
out
jae
xlat
xor
push
ds
fs
inc
xchg
dec
idivb
push
int3
out
imul
bound
out
pop
pop
sti
sub
in
add
cld
push
adc
pop
ljmp
sbb
jnp
or
sub
int
inc
insl
sbb
fidivs
xor
cmp
mov
out
pop
loop
xor
and
sbb
push
mov
mov
and
ret
jp
cmp
xor
test
mov
jb
repnz
ljmp
xchg
enter
or
or
insb
stos
pushl
cmp
sbb
jl
repnz
out
add
fsubrs
lret
popf
sub
imul
xchg
lahf
sbb
decl
cwtl
rorl
loop
sbb
ljmp
lret
pop
fiaddl
xlat
adc
test
aas
ja
testb
sbb
xor
add
js,pn
inc
push
out
sahf
mov
add
out
push
sub
jmp
adc
dec
cmp
test
inc
xchg
mov
scas
out
push
leave
mov
xchg
std
stc
pop
fwait
lcall
mull
nop
cltd
leave
fisubl
cmp
cld
inc
sarb
mov
xor
out
sub
add
or
xchg
xchg
dec
iret
jo
adc
add
mull
ret
shr
mov
cmc
push
xor
jnp
std
out
xchg
loope
pop
shrb
out
mov
push
jmp
insl
out
and
jg
push
out
mov
add
xchg
xor
std
fwait
cld
add
inc
in
or
in
sti
data16
mov
pop
ss
sbb
lods
push
clc
pop
push
das
inc
roll
int
out
subb
adc
mov
imul
dec
cmpsb
loope
sbb
sbb
push
iret
in
xchg
sbb
leave
jno
cmp
push
xor
inc
loopne
shr
js
xchg
loope
hlt
inc
out
cs
rolb
loop
inc
mov
jnp
jmp
movsb
mov
shll
lret
ret
out
pcmpeqd
add
xchg
inc
xor
push
adc
out
syscall
jle
dec
and
add
andb
push
aaa
out
mov
stc
add
mov
pop
inc
sub
mov
out
xor
stos
and
pop
outsl
enter
jg
out
mov
cmp
pusha
out
mov
lcall
xlat
ljmp
push
enter
fistps
das
push
lods
addps
insl
and
imul
cmp
xchg
and
pusha
movsl
rorb
cld
popa
notl
dec
and
jo
xchg
fwait
cmp
xor
cltd
sub
push
xchg
outsb
xchg
out
test
js
inc
xlat
pop
out
int3
cld
adc
in
mov
cltd
cmc
outsl
out
in
and
lret
in
mov
mov
popa
dec
out
or
mov
cwtl
xor
frstor
loope
inc
sbb
stos
and
mull
cli
fs
sub
out
addb
ja
aam
adc
xor
xor
and
std
xor
addr16
push
aas
test
pop
pop
adc
push
or
pop
sahf
xor
jns
mov
and
pusha
aas
out
into
add
out
fcmovbe
mov
cs
mov
add
js
je
insl
pusha
inc
hlt
pop
xchg
mov
mov
mov
xchg
or
sahf
jmp
xchg
cmp
mov
loopne
adc
sbb
adc
xchg
cmp
add
jge
cwtl
dec
jo
sub
idiv
push
aam
orl
mov
gs
pop
xchg
sbb
and
mov
loope
push
shr
pop
js
jg
popf
out
pusha
in
add
outsl
xorl
jae
out
push
lock
fnstenv
mov
out
std
jo
push
cmp
ret
or
add
testb
cltd
cwtl
lods
jmp
maskmovq
idivl
xor
add
je
cwtl
in
cltd
out
int3
rcr
shll
pshufw
and
or
jmp
xor
fxch
jecxz
adc
hlt
sub
lds
out
xor
int
cmc
nop
scas
in
insb
jmp
aaa
sbb
data16
inc
enter
sbb
adc
ss
in
out
or
or
jne
push
insl
mov
push
mull
loop
mov
mov
sbb
pop
xchg
pop
pop
sub
or
aam
imul
shll
outsl
movsl
xor
testl
scas
push
notl
fcoml
out
jno
iret
repnz
test
push
push
or
sahf
push
out
inc
rcll
dec
mov
add
out
cmp
test
mov
aas
inc
out
inc
bound
mov
je
jae
andb
stc
xor
push
lea
daa
out
scas
jle
mov
inc
cmp
pop
jo
sub
and
imul
in
mov
adc
push
push
out
sahf
dec
jg
xchg
cli
dec
repnz
inc
test
xchg
sbb
xor
mov
out
das
in
jecxz
and
inc
ds
xchg
fsubrs
dec
lcall
push
sysenter
loope
out
mov
out
hlt
out
cmp
lret
adc
out
imul
negb
out
aad
mov
xchg
sbb
sbb
and
cmp
shrl
inc
xchg
call
mov
inc
mov
ds
test
xchg
lock
fwait
pop
insl
xor
dec
inc
and
dec
xchg
sub
sbb
or
outsl
sub
xor
cmp
and
mov
out
mov
rol
je
out
mov
cwtl
js
out
lea
inc
xor
jo
test
fdivs
sbb
mov
sub
js
add
or
xchg
ja
out
int
jmp
jp
lea
push
sbb
dec
jecxz
ljmp
loope
xor
out
cld
lea
xchg
adc
sub
add
sbb
and
in
adc
cmp
sbb
push
popf
jns
outsl
mov
int3
push
test
dec
fldl
or
dec
hlt
shlb
out
imul
inc
mov
jnp
in
inc
and
in
mov
popf
gs
jbe
out
es
mov
sub
push
mov
push
jne
out
fildl
xchg
or
hlt
jge
cwtl
jno
mov
inc
jle
push
out
xchg
jbe
int3
lahf
jb
ss
out
mov
dec
inc
and
xor
inc
push
cmp
inc
mov
xor
dec
push
loope
cmpsl
or
popa
rcll
mov
sub
out
test
lea
out
ret
lahf
jne
ret
lock
out
ljmp
and
cli
test
push
inc
dec
repnz
lock
cld
sbb
popa
daa
loop
int3
push
xchg
movsb
insb
cmp
scas
sub
or
out
ret
jb
ficomps
jo
pushf
jp
mov
jecxz
sbb
push
push
enter
add
aaa
pusha
out
sbb
gs
fnstenv
dec
mov
insb
pusha
pop
sub
xlat
or
stos
aas
add
rcrl
jmp
cld
and
fdivrp
addr16
jle
jecxz
mov
daa
mov
jg
add
movl
mov
push
out
imul
lds
or
and
mov
jns
xchg
enter
out
ja
in
sub
popf
add
scas
xchg
xlat
fs
jns
and
adc
add
sti
fsubrp
lret
fistpll
lods
in
fs
leave
jle
addr16
jno
push
push
jg
cmc
mov
xor
jns
ljmp
inc
push
adc
mov
pop
adc
jnp
lret
sbb
xchg
jge
outsl
jo
hlt
outsl
sub
movsb
cld
lret
ljmp
lcall
out
out
push
in
sahf
jno
aad
shl
jnp
test
or
xor
xchg
sub
push
out
or
adc
cld
sahf
xor
sub
aad
push
repnz
mov
fmuls
pusha
imul
push
mov
ja
sbbl
negl
cmpl
loope
dec
out
adc
push
mov
je
movsb
push
dec
testl
push
out
imul
mov
mulb
push
dec
dec
jecxz
and
xor
fsubr
lret
fstpl
mov
jne
xchg
pop
mov
fmul
int
insb
in
es
push
mov
scas
je
ret
jns
sub
xor
mov
out
mov
xchg
add
xor
out
xorb
in
xchg
xor
lods
push
out
in
xlat
gs
ds
dec
call
mov
mov
sbb
mov
mov
jge
pop
mov
data16
in
aad
push
js
imul
cwtl
shrl
pop
and
mov
repz
dec
fsubrs
cmp
in
es
mov
jp
or
mov
lret
xor
xchg
loopne
cmp
out
mov
cltd
imul
dec
loope
add
es
loopne
outsb
repz
divb
sti
mov
inc
test
or
mov
and
ret
mov
mov
mov
out
mov
roll
pop
ljmp
dec
inc
mov
xchg
lahf
dec
adc
xchg
out
add
and
movsb
pop
mov
jo
and
mov
fcompp
cmpsb
gs
add
out
and
mov
pop
xchg
cmp
mov
mov
pop
xchg
scas
loopne
out
fiaddl
sbb
test
out
cmpsl
push
xlat
iret
daa
and
out
fldl
out
pop
out
jle
in
hlt
sbb
push
out
xor
and
jge
jno
cmc
inc
ljmp
jnp
fbstp
daa
add
ret
push
xchg
mov
lods
shlb
rcll
add
push
push
sbb
ds
adc
mov
xchg
shlb
je
sub
pushf
cltd
repnz
test
adc
inc
mov
cmp
push
loopne
xchg
xchg
rcl
out
movsb
xchg
add
mov
mov
cs
mov
clc
and
in
push
out
dec
mov
lods
mov
daa
incb
adc
repz
insb
out
jle
dec
dec
addl
out
inc
mov
cmp
out
mov
xorl
outsb
addb
out
lcall
push
fisttpl
loopne
test
or
inc
test
adc
cwtl
pop
and
jmp
mov
aaa
cmc
ficompl
mov
lods
out
cli
daa
xor
enter
mov
sti
arpl
mov
lret
xor
xacquire
call
iret
pop
jo
add
sti
mov
push
out
mov
ss
lods
mov
inc
les
leave
pop
imul
jecxz
test
jae
xor
out
lods
cmovbe
arpl
lret
popa
mov
lret
ficomps
cmp
mov
xchg
std
out
cmpsl
fdiv
negl
mov
sub
out
push
dec
iret
inc
xchg
std
icebp
scas
ja
adc
out
lds
out
push
pop
repnz
jns
aas
jo
pushf
push
cmpsl
popf
cmc
inc
ds
fmull
jae
cmp
in
cwtl
add
lods
vucomisd
sbb
cmp
pushf
clc
push
mov
lock
xchg
scas
and
sub
pop
inc
xchg
test
out
adc
cmp
xor
jne
arpl
dec
loop
inc
test
fldt
xor
fs
cwtl
test
mov
jle
subl
mov
popl
push
out
add
imulb
lea
out
in
mov
aaa
lods
jp
out
inc
pop
xor
sbb
add
push
jmp
dec
lahf
out
hlt
je
jle
xor
jae
sarb
fdivrl
jp
cltd
test
add
push
lods
outsl
push
test
adc
fucomp
push
ror
out
sub
push
mov
inc
cmp
add
mov
dec
rorl
out
clc
mov
pop
pop
and
jmp
mov
popa
ja
fucom
out
pop
jb
inc
js
popf
xchg
out
das
add
aad
sub
mov
fucomip
jne
jo
clc
stc
mov
mov
out
out
outsl
stos
add
out
jns
ret
push
mov
int3
mov
add
or
fwait
cmp
and
clc
xchg
mov
and
sahf
adc
or
xor
sub
jo
mov
mov
jl
out
out
mov
js
pop
add
repz
mov
out
jp
out
adc
aas
addr16
jge
push
out
les
sbb
out
adc
lea
and
mov
push
jl
cld
dec
pop
in
dec
out
scas
aad
jmp
out
mov
sub
out
xlat
push
imul
das
stc
bnd
inc
fsin
inc
in
repnz
aas
and
addr16
movsb
mov
ffreep
popf
jo
into
cmovl
pop
hlt
jmp
mov
push
imul
mov
fdivp
fistpl
pop
movsb
fcoms
je
add
add
es
shl
and
cltd
dec
jbe
sarl
in
jmp
test
in
mov
movsb
cmp
mov
jb
xchg
xchg
sbb
pop
repnz
aas
scas
mov
sbb
mov
sbb
sub
nop
add
sti
out
mov
xchg
adc
inc
cmpsl
jae
lahf
stc
push
mov
pop
and
mov
insb
jecxz
icebp
and
lods
repnz
repnz
orl
call
push
lds
movsb
in
pop
daa
inc
sbb
stc
dec
dec
or
xor
lods
xchg
gs
out
cwtl
xorl
xor
and
inc
mov
pop
and
loop
popa
imul
sbb
fnstsw
clc
jecxz
adc
lds
mov
popa
and
mov
call
mov
stos
inc
jmp
sbb
sti
or
xor
outsl
out
testb
out
pushf
mov
rclb
jns
out
mov
pop
fld1
mov
pop
sbb
imul
xchg
lret
divb
fisubrl
xor
jb
xchg
mov
aad
jnp
push
jg
nop
addr16
pop
or
adc
or
out
sti
shr
mov
in
andl
out
rcrb
push
mov
jo
ret
mov
push
aaa
nop
out
jg
stos
push
in
jmp
out
test
mov
orl
out
dec
inc
hlt
and
sbb
loop
add
jo
push
inc
xor
mov
xor
lret
outsb
fabs
fisubs
rcrb
popa
mov
outsl
add
gs
jmp
lds
push
jbe
inc
icebp
xor
mov
mov
jo
hlt
imul
push
in
iret
push
les
in
stc
xor
idivb
push
outsl
push
dec
in
or
adc
fcmove
inc
daa
icebp
out
dec
mov
and
inc
push
mov
shr
adc
je
and
inc
pop
add
pop
scas
push
xor
jge
and
test
iret
jmp
mov
push
add
pop
mov
adc
icebp
push
insl
sbb
and
and
test
xchg
jo
lock
push
out
repnz
out
inc
scas
dec
incl
shll
sti
es
loopne
out
ret
push
or
xchg
stc
push
js
inc
push
cmp
and
out
shl
lret
pushf
sti
or
orl
xchg
into
insl
adc
and
add
sti
jge
out
inc
mov
out
jns
popa
test
push
jnp
out
icebp
fstpl
call
subb
adc
jge
and
cmpsl
pop
mov
mov
incb
in
push
add
mov
popf
mov
lods
push
jne
shr
sbb
int3
out
add
mov
stos
inc
and
dec
leave
out
push
and
sub
or
xchg
mov
pop
adc
inc
inc
pop
sbb
out
mov
out
insb
push
cmp
popa
jbe
mov
data16
in
xchg
frstor
adc
out
mov
push
and
mov
jge
test
sbb
pusha
out
and
pop
adc
xchg
loope
out
xor
jmp
out
mov
imul
and
push
cmp
pop
fsubrp
ret
int3
push
lods
add
fisttpl
sarl
push
out
jle
rcrb
xchg
call
and
jg
add
loopne
imul
mov
inc
out
jne
cmp
jno
xchg
sti
add
stc
push
mov
js
xchg
in
ja
pxor
test
adc
int
out
mov
xor
jbe
insl
out
jge
pop
inc
in
fcompl
lcall
in
cmp
mov
push
sti
sub
out
or
cltd
hlt
stos
push
outsb
popa
fsubp
test
in
daa
xchg
sbb
std
and
test
shrb
pop
cwtl
bound
and
sub
mov
mov
scas
lock
cld
sub
jmp
mov
repnz
ds
mov
mov
add
cli
pop
out
dec
jl
andl
into
out
andb
mov
dec
jl
mov
push
sub
mov
pop
or
pop
pushf
mov
ljmp
leave
sub
push
adc
dec
inc
push
ja
std
jmp
les
out
cmp
xor
mov
mov
jnp
rcrb
es
out
push
pop
dec
in
jp
push
mov
or
cmpsb
xchg
outsb
push
popa
inc
and
sub
jno
aad
loopne
inc
lahf
out
mov
mov
push
fldenv
out
jmp
insl
divb
lods
pop
inc
or
sub
xchg
jmp
jp
ja
mov
dec
xor
mov
pop
rcrb
jbe
lahf
pop
xor
mov
out
test
fmul
mov
pushf
mov
jmp
jmp
sbb
and
mull
adc
int
push
lea
push
xchg
out
or
and
insb
lcall
mov
pshufw
mov
cmp
push
repnz
push
fsub
jl
adc
cmc
add
add
inc
add
mov
sbbl
out
fbld
sbb
mov
jae
mov
daa
out
xchg
jns
mov
icebp
clc
out
pop
cmp
mov
mov
mov
call
jecxz
cmp
hlt
aad
out
aas
xchg
push
xlat
jmp
pop
lods
out
cmp
orb
or
or
push
scas
arpl
notl
xor
or
out
dec
xor
jno
xor
fsubr
aaa
pop
sarl
jg
adc
jp
out
hlt
xchg
xor
pushf
inc
lret
aaa
mov
test
int3
fbstp
or
dec
out
mov
mov
call
fisubrl
imul
cmp
movsl
cmc
adc
ret
mov
pop
lret
out
mov
sahf
cmpsb
out
inc
and
push
bound
call
jae
xlat
pop
jp
out
sbb
xchg
out
scas
push
pop
pushf
mov
fbstp
push
xor
adcl
push
loopne
and
sbb
out
add
push
in
pushf
add
enter
test
and
mov
or
inc
out
add
mov
out
scas
jns
cmpsb
jp
dec
fs
ret
or
movsb
ret
mov
cwtl
and
shrb
or
rorl
js
insl
push
jmp
adc
mov
cmp
pop
bound
out
sub
xchg
push
out
imul
sub
test
push
cli
jo
sbb
out
cmp
fcompl
out
pop
mov
pop
jg
push
out
mov
push
pop
cmp
cmp
fcoms
scas
pop
repnz
and
mov
fnstenv
in
sub
dec
or
mov
andl
sarl
and
pop
push
adc
fidivrl
out
daa
and
adc
mov
cmpsl
and
xchg
jb
jno
mov
dec
pop
lods
push
pop
inc
xor
or
icebp
ret
and
jecxz
lahf
scas
in
int
test
cmpsl
sbb
push
stos
cmp
jo
sbb
lret
out
push
adc
add
cltd
inc
xchg
push
mov
jg
lret
jbe
pop
into
out
loopne
fimull
out
cmp
push
inc
out
cld
out
dec
sub
jno
int3
or
daa
xchg
inc
cs
mov
or
ret
dec
pop
inc
xor
cmpsb
xchg
dec
cld
out
cmp
daa
das
inc
leave
mov
aam
fnsave
aaa
pop
inc
inc
jo
cmp
push
sbb
ret
xchg
inc
cwtl
cmc
push
xchg
add
xchg
pop
add
mov
in
ss
xchg
xchg
lods
xor
loop
inc
add
sub
inc
out
iret
xlat
out
cltd
scas
push
outsb
sbb
ret
out
mov
cmp
leave
pop
mov
dec
lock
fcmovb
in
stos
popa
mov
ss
iret
push
icebp
sahf
jno
push
ret
lcall
out
push
fiadds
push
out
jmp
xchg
mov
enter
or
jns
out
jne
into
ret
sbb
mov
test
inc
repz
sbb
inc
fucomp
pop
adc
lods
xchg
mov
loopne
fidivrl
out
sbb
xlat
push
clc
mov
out
dec
ret
jns
mov
gs
insb
pusha
lret
inc
pushf
xchg
pop
das
cmp
shlb
adc
xor
frstors
lret
dec
out
mov
and
or
insl
mov
sbb
inc
cmp
cmp
sbb
push
ret
cwtl
sub
or
lret
add
shll
lds
addl
or
movsb
shll
push
cmc
fcmovnb
sub
jp
ds
mov
mov
mov
jo
scas
jp
and
jnp
jmp
xor
inc
sti
imul
call
pop
out
test
stos
jns
xor
bnd
mov
cmp
shll
or
pop
fcmovbe
aam
pop
sbbl
out
cmp
xor
sarb
pop
out
and
mov
ret
inc
mov
pop
negl
mov
stos
sarb
xchg
popa
fucomi
or
dec
push
push
mov
cmp
cmp
sbb
fwait
push
dec
stos
fisubrl
shl
sub
or
iret
lds
sti
xchg
push
inc
jne
cs
pop
in
xor
sub
ret
movsb
sahf
divl
scas
push
popf
out
out
and
mov
sub
and
cwtl
jo
pop
lret
outsb
inc
jmp
or
pop
imul
std
add
outsl
je
arpl
or
add
mov
jno
aaa
outsb
mov
xor
out
pop
repnz
or
jno
dec
imul
repnz
das
scas
cmp
lock
into
mov
xchg
fldl
inc
cmc
stc
xchg
dec
out
imul
xor
inc
sbb
lret
fwait
inc
out
sub
jp
out
push
sarl
push
out
xchg
dec
jnp
les
aas
pop
stc
xor
pop
out
pushw
dec
addl
sbb
dec
xor
stos
pop
in
lea
in
or
push
out
sarl
cli
dec
fs
cmp
out
jle
jp
mov
and
mov
add
dec
mov
cmp
xchg
mov
test
ljmp
jb
outsb
or
xor
sbb
shlb
loopne
out
leave
jnp
lret
push
jmp
jo
push
idivb
xor
aaa
ljmp
pop
xor
push
mov
xchg
cmpsl
pusha
adc
jo
shrl
inc
das
pop
or
mov
and
jnp
inc
ds
or
inc
repz
in
nop
lret
bound
adc
jb
lea
orb
and
js
jmp
out
das
shll
mov
insb
lods
lods
out
mov
jp
ljmp
jmp
sbb
aad
mov
cmp
dec
ja
lock
jns
push
subl
dec
sbb
scas
jno
les
std
push
out
push
or
test
mov
sub
cmpsl
add
mov
je
cs
dec
pop
mov
out
dec
mov
adc
add
bound
int3
xchg
xchg
icebp
es
daa
ret
out
xchg
nop
jo
fidivl
jno
and
mov
sbb
mov
pop
mov
xchg
jo
call
out
fisttpl
mov
ret
jbe
inc
ss
or
xchg
jb
sbb
out
mov
arpl
push
out
pop
jne
iret
mov
lret
jae
sub
cmp
dec
cmp
mov
pop
sarl
cli
insl
cmc
mov
out
aam
dec
inc
cmp
and
stos
jle
jo
int3
into
xchg
jns
cmp
xchg
insl
bound
out
cmp
push
lret
cmc
jo
outsb
add
hlt
js
aas
popf
in
out
dec
cmp
or
mov
jns
out
ficoml
adc
sti
popa
sbb
out
mov
adc
adc
mov
imul
jg
loopne
cmp
mov
xchg
sbb
dec
inc
repnz
enter
push
sbb
jo
addr16
mov
adc
lods
fcmovnu
cs
jmp
dec
jecxz
out
int
out
test
and
out
jns
cmp
mov
outsl
lret
insl
repnz
xchg
mov
out
ds
or
push
pop
icebp
out
push
jecxz
pop
scas
mov
mov
iret
cwtl
sbb
jnp
dec
scas
ficoml
in
mov
imul
inc
xchg
or
outsl
xor
fisttpl
sub
push
pop
lock
mov
mov
std
cmp
gs
mov
adc
loopne
sub
jmp
sbb
mov
jg
pop
push
pushf
inc
dec
mov
call
push
repz
mov
enter
out
call
out
cmp
int
test
ret
out
add
lods
int3
mov
pop
push
call
repnz
stc
iret
imul
repnz
in
pop
pop
push
jo
adc
sub
out
mov
lock
xchg
out
mov
cmp
adc
push
add
and
push
ja
jns
mov
das
popf
adc
inc
jecxz
jl
out
xchg
push
add
mov
add
cmp
out
std
cs
jmp
inc
add
pop
pop
sub
addl
or
pop
lock
insl
or
enter
add
push
fwait
jge
pusha
idivl
pop
inc
out
fucomp
test
cltd
cs
jno
and
inc
jmp
dec
pop
mov
pop
push
mov
xchg
out
int3
iret
or
xchg
mov
lret
pushf
dec
mov
imul
out
sub
cmc
and
sarb
mov
xchg
push
mov
loope
xor
dec
mov
xchg
out
mov
add
fists
xor
shr
dec
lock
clc
popf
scas
js
lret
out
cmp
or
ret
jb
fwait
out
mov
add
out
negb
mov
lods
out
cmp
int3
in
push
sbb
out
cwtl
mov
and
out
dec
insl
jp
push
fisubrs
mov
aaa
test
stos
packuswb
out
in
sbb
ja
add
mov
repz
push
imull
icebp
jno
sub
mov
sti
out
dec
out
jle
mov
sub
imul
stc
test
lret
pop
not
out
es
xchg
ljmp
mov
int
daa
repz
lods
pop
in
inc
stc
xchg
xlat
mov
pop
mov
mov
mov
into
out
rorl
push
adc
inc
xchg
movsb
imul
sarl
cmp
out
jle
mov
pusha
out
adc
scas
insl
adcl
mov
cmc
mov
mov
and
jo
test
sub
inc
out
fidivs
lock
mov
ss
loope,pt
inc
jnp
popf
lea
gs
movsl
jmp
lret
dec
aaa
call
pop
push
adc
ja
pushl
out
pop
fbstp
scas
cltd
inc
push
dec
push
jmp
ja
cmp
mov
movsb
popa
pop
inc
fcmovb
mov
push
and
pop
add
gs
loopne
pusha
lds
ljmp
out
pushf
jmp
out
xchg
out
fiadds
mov
insb
imul
push
sub
pop
add
call
add
test
bound
push
adc
dec
push
mov
je
insl
sub
and
aad
push
add
outsl
pop
negl
sub
xchg
out
pushf
adc
xor
push
or
mov
call
out
push
and
pusha
sub
pop
jno
popa
ficompl
jno
mov
sbb
leave
notl
stc
jge
les
push
je
out
insb
push
aaa
pop
inc
int
in
pop
out
jp
inc
jns
inc
mov
adc
add
out
ret
xorb
out
and
icebp
cs
push
test
lahf
scas
xchg
leave
in
inc
cmp
inc
std
cmc
mov
out
jge
cmpsl
cltd
push
in
out
out
cmp
out
movsl
out
xchg
ror
dec
cmc
fucomp
insl
add
imul
jnp
cmpsl
insb
testb
dec
adc
add
outsl
sub
cmc
int
in
and
adc
jp
xchg
loop
imul
addr16
arpl
out
scas
sub
jnp
je
xchg
cmp
outsl
cmp
out
push
xchg
cli
stc
add
nop
gs
push
sbbl
dec
pop
cmp
in
mov
iret
loope
jno
xchg
xor
aam
cwtl
out
cltd
mov
je
in
arpl
inc
aas
inc
out
pop
dec
xchg
jne
xchg
in
cmp
cmp
sbb
xlat
jbe
das
adc
mov
out
movsl
inc
xor
mov
and
push
cmpsb
stos
inc
xchg
cmc
aam
out
mov
repnz
push
mov
jl
jge
scas
push
in
test
pop
sbb
push
and
cmpl
popf
das
jge
insl
mov
dec
pop
out
rolb
lods
aaa
and
arpl
hlt
es
mull
cld
call
sub
dec
sub
or
test
in
push
jmp
sahf
push
subl
clc
mov
mov
or
rep
lock
add
add
ljmp
int
mov
xchg
testl
mov
cmpsl
and
xchg
out
inc
mov
hlt
jg
adc
mov
inc
popf
ret
test
mov
cmp
out
pop
add
jo
mov
jmp
cmp
lahf
out
adcl
out
mov
mov
lret
mov
call
xchg
adc
testl
and
cli
jno
xchg
jmp
icebp
push
sti
add
in
scas
pop
push
out
mov
data16
fs
je
arpl
sti
add
aad
fcmovnb
mov
dec
mov
call
out
jb
insl
push
imul
push
and
add
loopne
mov
aam
cwtl
movsb
xorb
push
enter
loope
outsb
xor
mov
cmp
loope
ret
push
mov
xor
daa
mov
inc
outsb
aaa
out
out
jbe
scas
sti
outsl
mov
xchg
icebp
sub
adc
cmp
pxor
movl
inc
in
int3
and
cmp
aaa
inc
and
jg
dec
out
dec
jbe
aam
or
xchg
icebp
mov
add
sahf
rcll
aas
mov
push
jl
inc
cmpsb
repnz
aad
loope
test
cmp
mov
pop
pop
out
xor
lret
out
sbb
push
insl
nop
bound
sub
out
cmp
ror
repnz
int3
push
adc
movsl
nop
jecxz
pop
setb
mov
imulb
ficoms
repnz
iret
test
push
or
cmp
sbb
call
adc
movsb
out
sbb
cld
adc
push
out
mov
comiss
sub
out
mov
shll
add
cmp
pop
sbb
and
adc
out
pushf
pop
je
xchg
xor
in
sub
pop
mov
dec
inc
mov
test
icebp
sti
push
outsb
cmp
xorb
add
mov
lret
and
sub
out
mov
mov
hlt
dec
lcall
mov
lock
out
scas
push
out
decl
xor
imul
out
in
cmpsb
int
call
jb
fcomps
add
ljmp
out
inc
xchg
and
lret
fadds
iret
shlb
scas
fistpl
pop
lds
in
test
dec
mov
cmp
je
scas
dec
stos
out
pmulhuw
imul
mov
ficoml
lods
hlt
xlat
icebp
add
or
and
sbb
jmp
scas
repnz
jb
rcrb
cs
fstl
xchg
in
mov
mov
data16
fdiv
pop
inc
add
jmp
dec
xchg
ja
out
out
das
push
add
sub
lcall
sbbb
cltd
out
outsb
push
test
xchg
popf
out
pushl
call
ret
mov
or
outsb
orb
dec
call
aam
cmp
sti
adc
arpl
fs
mov
jo
ljmp
jl
jmp
mov
and
out
mov
dec
cltd
sub
movsb
sarb
mov
out
lret
outsb
and
xchg
xlat
mov
lock
pop
fs
out
je
fadds
xchg
xor
movsl
outsb
roll
inc
outsl
stc
lcall
aas
insb
aaa
in
pop
repz
daa
testl
das
out
and
test
int
call
call
ds
imul
mov
and
mov
mov
rdpmc
xchg
out
data16
jle
out
int
pop
loopne
fdivrs
mov
or
inc
out
loope
mov
mov
icebp
mov
xchg
cmp
cwtl
lea
pop
xor
cmp
test
out
mov
mov
jns
mov
call
test
out
adc
out
test
add
jmp
inc
mov
xor
out
pop
in
arpl
add
dec
loope
xchg
fisubs
add
in
movsl
push
mov
mov
adc
mov
mov
out
outsb
js
cltd
dec
xlat
out
cmp
pushf
inc
notl
hlt
out
push
cmc
popf
inc
mov
ficomps
dec
mov
or
nop
or
cmp
jg
pop
js
inc
rcll
idiv
stos
loop
out
pop
stc
push
or
shlb
out
xor
hlt
out
mov
xchg
adc
adc
test
repz
cmpsb
push
xchg
movsl
jnp
fwait
hlt
lock
jg
pop
adc
xchg
cld
ss
sub
cmp
push
int3
popa
inc
loop
lahf
loope
cmp
aam
in
ret
push
jns
mov
out
jmp
jo
jbe
sbb
aad
push
adc
out
loope
out
lahf
inc
out
mov
cli
mov
aam
add
jecxz
pop
insb
mov
scas
mov
js
aas
jmp
push
pop
ret
xchg
jae
outsl
addr16
mov
push
in
cmp
jle
enter
out
inc
sbb
cmpl
icebp
adc
negl
lret
out
push
push
movsb
or
adc
jo
pop
xchg
lea
mov
jnp
shl
pop
adc
xor
mov
out
sub
jmp
sarb
jnp
pop
inc
mov
push
nop
inc
cmp
pop
aas
pop
mov
inc
lods
add
into
popa
mov
sahf
out
cld
xor
fadd
popa
daa
movsb
cmp
dec
in
popa
inc
inc
and
inc
into
jae
test
lret
int3
mov
arpl
jl
mov
push
out
dec
cli
cmp
dec
aaa
out
imul
ja
mov
popa
jg
into
mov
pop
push
dec
pop
mov
fdivp
movsl
jp
cmc
adc
idiv
jge
push
sbb
jmp
pop
fmuls
addb
jne
mov
pop
fldcw
add
lea
ds
and
scas
pop
add
mov
imul
mov
call
add
das
fmulp
or
push
push
adcl
out
push
fisubs
fsubrl
ss
mov
mov
shrb
jmp
hlt
enter
test
out
xlat
inc
js
jb
pop
movsl
out
jns
jecxz
daa
ljmp
loopne
mov
sub
sbb
jo
mov
xor
jl
mov
and
xchg
lret
pop
sbb
out
ja
insl
jle
jmp
mov
lods
imul
out
cmp
movsb
dec
es
inc
adc
gs
lret
imul
lock
daa
or
in
popa
iret
lock
cmc
mov
cltd
out
xchg
fnstenv
xchg
or
inc
out
js
jnp
mov
mov
into
dec
push
out
dec
out
adc
data16
jmp
test
push
push
fnstsw
or
push
out
sub
pop
aaa
mov
jb
out
ret
mov
push
cmpsb
adc
mov
loop
cmp
gs
cltd
jp
daa
scas
loopne
dec
adc
xor
and
sbb
jle
imul
daa
mov
and
jae
cmp
jbe
push
dec
sbb
mov
nop
mov
push
add
mov
jne
adc
mov
jnp
leave
shl
sbb
out
or
add
dec
jo
out
ret
das
xchg
add
hlt
jo
sub
sbb
xor
push
jne
sub
jo
fnstsw
push
cs
leave
pop
cmpsb
jae
lahf
mov
sub
negl
rol
mov
outsb
pusha
lcall
xorps
lock
dec
jne
popa
les
aaa
loop
pop
jo
mov
ljmp
sbbl
push
or
enter
inc
out
daa
dec
and
xlat
test
testl
out
pop
je
stos
or
icebp
iret
out
imul
jae
push
add
jp
imul
adc
shlb
out
inc
dec
pusha
in
inc
xchg
xorb
out
gs
clc
ret
out
dec
sbb
nopl
xchg
jne
push
out
xchg
xor
fdiv
cmpsb
repz
sub
adc
mov
int
xchg
jp
inc
in
stc
jae
or
shll
outsb
push
xlat
sti
fs
sbb
xchg
add
push
loopne
sti
add
jbe
cmc
mov
pop
push
imul
mov
stos
sbb
cmpsb
popa
lock
out
scas
jge
aad
rcrl
mov
mov
xchg
movsb
stos
mov
test
cmp
testb
jo
and
fstpl
out
mov
cmp
push
or
imul
push
dec
xchg
out
aad
cltd
pop
mov
push
aam
test
ret
leave
out
in
or
xor
inc
cli
stos
sub
add
data16
in
loope
mov
push
jle
out
or
shrl
out
jecxz
jo
adc
in
dec
xor
pop
out
cmp
sbb
dec
dec
inc
out
jbe
fsubrl
clc
lahf
lret
add
imul
xor
jge
in
pushf
jg
push
inc
mov
lods
out
fldl
repnz
sbb
out
sub
adc
mov
sti
xor
imul
mov
mov
or
popf
out
test
inc
movsl
mov
pop
lret
cmp
pop
dec
inc
aaa
xchg
lds
mov
dec
xor
repz
push
cld
hlt
push
cmp
enter
pusha
popa
jbe
out
mov
xchg
jmp
adc
icebp
sub
out
push
mov
jecxz
xchg
push
lds
daa
aaa
cmpl
loopne
rcrl
push
call
data16
lods
xlat
out
icebp
jo
rclb
test
mov
xchg
iret
mov
lea
out
sbb
mov
dec
jg
out
leave
gs
xor
repnz
pop
out
jmp
movsl
rcr
outsl
push
jns
pop
add
insb
lock
pop
pusha
xor
mov
mov
adc
xor
adc
out
movsb
mov
cmpsl
ret
ss
inc
lret
add
insb
sub
in
cmp
loopne
out
loop
out
pop
cmpsl
iret
sbb
xchg
xor
or
mov
fwait
mov
imul
mov
cmp
sahf
imul
sahf
pusha
out
push
xor
mov
out
push
loopne
call
out
fidivrs
and
movsl
out
rcll
sub
out
fwait
pop
into
dec
fldenv
and
push
aam
cmp
fisubs
cmp
imul
js
in
cmpl
mov
lret
inc
es
push
rolb
sbb
in
pop
repz
jge
xor
mov
cwtl
mov
mov
add
push
xor
cli
jecxz
mov
out
vorps
lods
adc
lock
jae
stos
rcrl
add
outsb
in
pushf
xchg
or
out
repnz
jmp
dec
inc
jo
cs
test
or
les
out
pop
jp
sub
push
push
mov
popf
or
mov
in
pop
repz
add
mov
aas
or
mov
ret
std
xchg
cmpsl
out
push
inc
dec
add
and
movl
sub
les
out
jmp
mov
hlt
test
jae
and
sub
call
fdivs
jno
push
cmp
sub
imul
sbb
mov
and
push
mov
iret
fsubr
call
out
stos
in
add
out
mov
ds
mov
or
sbb
jae
repnz
jle
xchg
imul
adc
cmc
lahf
out
lods
dec
xchg
out
lds
dec
sub
ret
jecxz
add
aad
cltd
mov
out
jnp
aas
sbb
out
insl
adc
sbb
mov
loope
pop
and
repnz
clc
out
and
mov
xor
lahf
popf
out
mov
cmp
scas
rolb
daa
mov
ret
out
mov
insl
lret
xchg
out
int3
pusha
lahf
or
sub
push
jmp
lods
inc
xchg
jb
mov
out
push
mov
gs
push
cmp
test
sbb
out
jo
mov
dec
fcoms
sti
pop
push
add
std
push
adc
mov
out
mov
cmp
into
out
sbb
fcmovne
mov
out
ret
and
lcall
mov
out
aaa
test
cmp
add
adc
mov
xchg
outsl
mov
es
loop
roll
jne
push
dec
jmp
dec
cmc
push
xchg
out
lcall
and
or
dec
repnz
ljmp
mov
and
scas
xor
ja
mov
outsb
popa
and
mov
stc
mov
mov
pop
xor
jmp
pop
inc
test
aas
out
dec
jmp
cs
leave
loope
inc
jmp
inc
out
int
xchg
loop
cwtl
add
jo
lahf
aam
stos
cmc
adc
xor
or
jmp
cmp
pusha
loop
inc
pop
mov
outsl
andb
subb
out
mov
call
shr
fwait
xchg
inc
mov
push
mov
pop
cmc
xchg
test
enter
push
fisubrs
subb
lcall
bound
mov
lods
push
mov
jp
adc
fstl
lea
jmp
ja
sbb
outsl
jl
test
cmp
loopne
inc
xor
aad
nop
xorl
out
cmp
sti
mov
rclb
in
cmp
movsb
ror
push
out
xchg
jb
ds
jns
out
adc
test
mov
lret
sbb
imul
fsubl
mov
arpl
aad
pushf
fnsave
jmp
ss
add
nop
out
adcb
mov
inc
out
loopne
stos
adc
out
push
scas
cmc
pop
xor
pop
out
jle
mull
push
pop
in
mov
pop
int
fwait
out
mov
rorb
cwtl
pop
out
fsubrl
out
cmp
xchg
repnz
cmp
rcr
cs
sbbb
loope
notl
push
repnz
or
pop
jmp
gs
xchg
sub
mov
xorl
sarl
out
out
insb
cmp
imul
lods
add
repnz
xorl
adc
popf
mov
arpl
sub
sbb
jmp
push
jo
shlb
xor
adcb
xchg
push
cltd
adc
xchg
aaa
out
jmp
sub
clc
fisubs
xchg
xor
cmp
pop
rcr
sub
sbb
in
fistpll
mov
mov
leave
psadbw
jo
add
mov
mov
mov
jmp
out
cmp
sub
shr
mov
lods
cld
leave
scas
loop
fmull
xor
testb
rorl
out
cld
mov
test
xchg
mov
imul
sbb
aas
in
in
mov
pop
add
cmpl
add
out
or
sbb
adc
cmpsb
out
xor
dec
out
xchg
gs
mov
je
xchg
out
sahf
jmp
jle
bound
or
xchg
mov
mov
dec
mov
pushf
aam
mov
rclb
rcrb
pop
add
inc
nop
in
or
xchg
mov
enter
aam
cmc
popa
push
jl
dec
hlt
dec
jmp
xchg
and
repnz
data16
test
clc
jecxz
mov
loopne
adc
jne
push
out
or
out
xlat
inc
ss
mov
aam
jle
stc
adc
les
cmpsl
rcrb
xchg
shl
mov
push
ret
pop
adc
lcall
mov
push
lahf
in
cmp
loope
sub
out
int
cld
push
leave
int3
outsb
cwtl
insl
es
inc
xchg
icebp
dec
or
test
in
inc
pop
jp
sub
add
clc
addb
mov
inc
lret
mov
div
insl
inc
dec
sub
mov
andl
jge
cld
mov
push
insb
out
sub
pusha
aam
sbb
shlw
xchg
pop
xor
cmc
xor
pop
imull
push
outsb
out
adc
xchg
sub
adc
add
jnp
mov
call
and
lds
out
aad
stos
ret
aas
push
xor
subb
mov
lcall
ds
out
lock
leave
cld
adc
bound
xchg
jl
shlb
daa
cmp
loop
aad
std
cmp
cmp
jb
mov
out
popf
and
ljmp
dec
div
pop
fstl
adc
test
hlt
lret
in
aad
sub
xchg
orl
inc
mov
sti
out
fwait
mov
inc
xchg
ljmp
xchg
cmp
lock
out
sarl
sbb
mov
sub
scas
ds
mov
bound
out
es
outsl
add
sub
or
out
pop
jmp
and
test
hlt
mov
xlat
in
gs
int3
cmpsb
cmpsl
cmp
xchg
mov
imul
lods
xchg
dec
sub
cmp
push
movsb
push
push
mov
xor
popa
arpl
pop
out
and
sbb
js
andl
cmp
out
xor
jg
aad
insl
pusha
shl
or
sub
adc
daa
pop
scas
mov
dec
arpl
data16
inc
out
adc
mov
loopne
fsubl
sub
icebp
cs
out
sbb
ret
add
and
mov
out
out
pop
push
in
sub
sbb
mov
xchg
out
jg
inc
jne
push
out
aas
pop
ficoml
and
lea
jmp
jmp
jle
push
int
xor
inc
mov
cs
ja
sub
rol
in
jne,pt
xchg
icebp
jae
out
imul
xchg
leave
popf
rep
jmp
out
out
pop
flds
hlt
push
out
and
fs
inc
inc
js
xor
and
subb
add
movsl
pop
cvtpi2ps
clc
out
enter
outsl
mov
inc
fcmovnu
into
xchg
imul
clc
push
std
sbb
mov
jle
popa
push
cmp
sbb
push
mov
out
scas
out
cmp
xchg
jb
ficompl
leave
push
mov
scas
daa
stos
int
es
sbb
xchg
out
add
mov
mov
adcb
mov
mov
fs
lods
jb
out
test
popf
je
mov
xor
or
jp
arpl
rclb
xchg
loopne
mov
imul
jno
inc
jle
push
push
mov
jmp
js
xchg
cmp
shlb
les
lods
sbb
add
jecxz
sti
aam
out
xor
add
pop
rorb
inc
aaa
pop
divl
mov
scas
jl
sbb
sub
and
out
les
cld
in
lock
push
push
leave
fnstsw
adc
mov
movsb
jo
xchg
or
out
and
or
adcl
lods
sarl
jmp
dec
sbb
int3
pop
mov
adc
mul
inc
add
ficoml
aad
mov
mov
lock
mov
stos
pop
cmp
dec
and
pop
push
add
cmp
negl
mov
xor
enter
sti
cmp
xchg
jge
rcll
rcrb
arpl
cld
pop
jecxz
aam
popa
push
out
xchg
mov
sbb
mov
movl
cmp
jbe
adc
enter
xor
xor
scas
lret
adc
sub
pop
push
hlt
add
out
push
aam
mov
cmpsb
jl
out
or
mov
test
enter
testb
add
in
pop
stos
inc
xchg
test
test
xchg
mov
out
push
sub
sub
lcall
imul
mov
out
clc
inc
cmp
pop
in
inc
jo
fdivl
aaa
fs
cwtl
dec
or
out
sbb
inc
rcr
cltd
imul
jbe,pt
in
popa
add
idivb
dec
inc
lock
popf
out
add
out
js
in
push
out
pop
lcall
sti
inc
inc
outsb
jle
jmp
in
out
movsl
repnz
sbb
cld
xor
push
sbb
inc
loopne
out
clc
data16
cmp
scas
jecxz
add
sub
ficompl
lcall
mov
lock
mov
xchg
into
add
mov
jmp
pop
pop
add
mov
clc
out
pop
iret
repz
mov
arpl
or
push
cmp
mov
xchg
out
imul
out
mov
lcall
xchg
pushf
fwait
or
aas
pop
ficomps
pop
stc
lods
xor
cmp
lret
add
mov
out
push
fwait
xchg
in
dec
jecxz
icebp
mov
add
hlt
dec
and
in
shr
ja
dec
lret
and
cmc
jle
outsl
pop
popa
dec
out
push
imul
mov
or
andb
ja
outsl
pop
test
cmp
fldt
push
ret
inc
xchg
fucomip
dec
push
fwait
sub
out
push
dec
inc
xlat
lret
sub
push
das
insl
out
xor
insb
xor
lods
out
dec
and
push
pushf
fcoms
sub
popf
cmp
add
notl
aaa
cmpsb
inc
sti
es
push
dec
jbe
mov
dec
int3
xchg
lcall
mov
or
push
stc
dec
push
insl
adc
loop
cmpl
push
jl
mov
jno
cmp
add
cmpsl
jle
int3
fists
stc
div
rclb
xlat
push
psubsw
stos
xchg
add
leave
jp
imul
mov
out
cmc
shrl
mov
mov
adc
pusha
sub
cmpsl
out
push
mov
fstps
mov
jae
mov
test
xorb
ret
stos
lret
loopne
push
mov
rcl
popa
divl
jo
jbe
clc
out
das
ljmp
out
push
jmp
add
out
or
add
out
cld
pop
push
cltd
jo
sub
test
loope
fsubr
adc
pop
divl
aad
mov
aam
cmp
rcr
xor
fs
sbb
add
cmpsl
pop
inc
lahf
incb
dec
es
dec
xchg
add
loopne
insl
out
dec
xor
out
ja
adc
fs
out
lret
stc
mov
or
push
or
leave
pop
jne
or
movsb
shrl
sub
notl
insb
sub
mov
mov
out
out
pop
push
mov
leave
aam
pop
jl
xchg
test
insl
out
xchg
out
dec
sub
ds
push
ss
dec
popa
jge
xor
push
fsubrl
sbb
in
mov
lcall
xchg
or
pop
movsl
test
pushw
sub
out
mov
orb
mov
lds
ret
jge,pt
jns
inc
sbb
cmp
or
out
pop
jo
cld
ret
stos
out
sahf
sub
mov
mov
dec
xchg
mov
xor
inc
cmc
imul
push
xor
ljmp
push
push
mov
ret
push
mov
enter
sbb
leave
out
inc
xchg
ret
lock
in
out
sbbl
insb
out
or
and
loopne
ja
sbbb
sbb
mov
mov
clc
loop
jo
mov
push
add
scas
out
jg
push
pop
shll
adc
sbbl
jne
or
or
mov
jecxz
scas
add
mov
fists
fs
xor
out
fwait
sub
or
in
out
or
sbb
neg
enter
adc
cmc
xor
cmpsb
scas
and
in
out
cs
inc
fcomps
test
out
push
inc
cmp
arpl
pop
test
out
mov
pushf
sbb
addr16
sbbl
flds
pop
ljmp
lds
push
adc
cmp
or
jne
out
out
pushf
cli
mov
ljmp
jo
fnstsw
and
pop
add
stc
test
jno
mov
cmp
scas
out
out
es
mov
xor
sbb
jmp
dec
ds
inc
aaa
fmull
mov
mov
out
jg
ffree
xchg
cmp
test
jns
out
mov
jge
push
xchg
andb
xor
fsts
fs
test
rcl
mov
cmp
pop
out
inc
inc
mov
mov
imul
mov
faddl
adc
frstor
cmp
int
out
dec
or
test
jns
ficompl
aad
sbbl
js
rcr
push
mov
into
mov
pop
sbb
out
and
mov
out
dec
pop
callw
fs
pop
jns
stc
push
mov
and
push
ljmp
jmp
pop
imul
mov
das
sar
divl
inc
fidivs
call
mov
loop
pop
scas
mov
popa
out
push
mov
inc
push
pop
sub
loop
lock
ss
dec
mov
push
arpl
mov
loope
out
daa
jmp
pop
xchg
mov
dec
out
xchg
fwait
lret
adc
out
rorb
adcl
repz
fimuls
test
add
push
leave
out
sar
or
dec
icebp
insl
out
mov
aam
push
out
js
jns
xor
scas
out
test
jmp
cwtl
dec
out
pop
je
lret
xor
call
outsl
add
test
outsl
mov
out
movsl
cld
shrb
ja
enter
mov
add
imul
lahf
pop
fsubrl
test
fwait
push
testl
fcoml
jo
pop
pop
js
jb
or
xlat
jns
pop
shll
push
sbb
insb
dec
mov
jg
addr16
mov
adc
jge
dec
jmp
movsl
push
hlt
pop
ja
cmp
cmp
leave
repnz
dec
jge
cmpsl
jae
insb
mov
dec
cmp
adc
jg
sbb
shll
out
adc
test
and
in
jbe
filds
in
pushf
out
insb
cmc
and
adc
int
out
adc
xor
adc
cmp
dec
mov
out
adc
fidivl
fcomip
sub
and
xchg
lahf
movsb
adc
xchg
jnp
and
pop
mov
out
lods
add
adc
xchg
outsl
leave
pop
sub
int
push
bound
push
lea
lret
loope
mov
cmp
lock
sbb
inc
jge
adc
mov
imul
cmp
testl
int
sub
iret
icebp
out
xor
into
iret
push
add
popa
mov
jl
mov
roll
sub
or
das
mov
enter
test
lahf
ucomiss
pop
mov
gs
imul
sub
xor
leave
mov
xor
adc
insl
add
fsubs
add
lock
dec
loope
mov
lret
test
rcll
xchg
cli
mov
and
out
jle
loope
add
xchg
loopne
stos
and
out
sti
xchg
rcrl
push
aaa
cmp
jl
jecxz
sub
call
out
fisubs
xchg
push
cmpsb
jg
sbb
pop
out
in
out
std
fistps
addr16
dec
mov
xor
mov
cs
cmp
xor
jecxz
jge
rolb
mov
and
mov
std
clc
loope
lret
jo
in
call
fldenv
cmc
push
out
sbb
or
iret
out
pop
ja
movsb
or
jne
outsb
lahf
out
ljmp
mov
add
push
mov
out
lahf
inc
rcrl
out
ret
inc
sbb
and
div
subl
imul
lock
add
add
fstps
out
arpl
sub
or
pop
pop
dec
stos
lds
leave
cltd
out
pusha
push
mov
mov
cmp
out
insb
fs
xchg
cli
lea
mov
cmp
test
mov
out
nop
popl
and
out
das
pop
jp
xchg
pop
out
push
popf
cmp
add
dec
add
std
adc
sub
mov
dec
in
ficompl
enter
out
mov
push
clc
inc
xor
inc
repnz
jne
jp
aad
adc
out
and
icebp
mov
movsl
popf
ljmp
dec
out
and
test
pop
out
mov
or
xchg
jne
idiv
push
or
loopne
out
push
fistl
and
sub
insb
mov
call
jns
mov
xor
or
shrb
out
insl
fidivs
inc
jb
xorb
or
ret
sbb
enter
add
dec
inc
jecxz
sub
push
in
inc
test
cmpsl
xchg
js
andl
insb
outsl
dec
iret
ret
push
mov
outsb
mov
or
ret
sbb
push
or
addr16
push
push
dec
cltd
idiv
jmp
lret
xor
dec
adc
xlat
movsb
cmc
pop
das
sbb
ret
mov
push
pop
lock
and
inc
out
int3
xor
out
ret
in
sub
cmp
mov
lock
popf
lods
movsb
shlb
outsl
pop
jp
daa
and
pop
push
push
jl
ret
and
es
mov
jp
cmpsb
lods
fldln2
out
dec
mov
push
push
add
imul
orl
out
push
mov
xchg
fnop
out
test
xchg
adc
out
mov
int
out
push
xchg
out
inc
test
pop
popa
ja
mov
icebp
push
jne
dec
adc
out
pop
cmp
int
ret
mov
lods
out
arpl
jge
movl
inc
ret
and
outsl
insb
loop
lret
repnz
cmovs
sub
lahf
imulb
jbe
int3
add
add
jmp
cmp
cli
lds
inc
out
stc
mov
xor
hlt
lock
adc
cld
out
cmp
mov
mov
ds
loope
sub
out
pop
mov
int3
sbb
push
out
cmpsb
in
lods
jmp
pushf
inc
xchg
out
out
jge
xchg
rcll
mov
out
add
out
and
inc
mov
loopne
push
mov
nop
pop
popa
pop
popf
out
push
in
mov
ljmp
movsl
rcl
into
test
call
repz
push
mov
dec
jge
jb
repnz
idivb
cmp
pop
int3
adc
push
mov
dec
out
insl
scas
std
jb
or
ficoml
xchg
jecxz
and
daa
and
mov
rclb
stc
add
iret
jne
or
jo
jbe
cmp
out
mov
xchg
jnp
push
rol
repnz
add
fstpl
nop
jmp
rcrb
decl
pop
mov
inc
out
cmp
add
repz
jecxz
inc
addr16
test
and
dec
out
jmp
fidivrs
movsb
jo
out
mov
adc
and
dec
addr16
mov
inc
out
mov
dec
ds
dec
icebp
out
mov
leave
fdivl
sbb
jmp
push
iret
jle
les
dec
xor
aad
push
movsl
jmp
adc
and
stos
test
int3
push
out
lods
imul
xor
movb
xchg
pop
sub
orb
test
xor
push
out
stos
sub
enter
out
jo
push
mov
add
shl
sub
inc
call
inc
jmp
or
in
fsts
mov
leave
adc
and
xchg
repz
sbbl
out
pop
inc
movhps
jl
sbb
pop
out
jo
std
fwait
push
dec
mov
push
inc
into
pop
add
les
out
addb
xchg
clc
icebp
int3
out
inc
cs
shrb
loop
in
loopne
or
out
mov
leave
or
jge
jp
cwtl
sub
out
lds
and
mov
aaa
clc
arpl
shl
ret
leave
jecxz
pop
mov
jo
pop
cmp
inc
shll
cmp
xor
sub
jns
out
sub
sub
orl
daa
loopne
inc
jge
adc
jecxz,pn
push
and
popf
pop
cltd
rcrl
arpl
js
clc
jmp
mov
and
mov
xchg
add
out
scas
xor
out
pop
sbb
fs
push
mov
sub
call
mov
aam
std
testl
testb
mov
cld
shrl
mov
push
ja
inc
mov
mov
rcl
mov
outsb
xchg
xchg
cmc
cld
pop
and
test
cmpsb
inc
mov
cmp
lods
sbb
push
jbe
jae
mov
cli
and
lret
dec
lea
add
cmp
pop
dec
lcall
scas
jp
xor
lods
sub
out
adc
popa
or
sbbb
stc
push
lea
insb
shr
out
rclb
mov
lret
repnz
mov
jg
add
out
aam
xor
push
hlt
je
xor
call
bound
pop
out
jae
dec
cmp
dec
adc
or
mov
shrb
fsts
sbb
xchg
xchg
hlt
out
dec
or
jp
fs
aas
jl
call
out
pop
or
jg
push
adc
sbb
adc
in
cmp
sbb
push
xor
jmp
mov
lcall
out
iret
push
in
insl
xor
and
sbb
rcrl
in
jo
dec
pop
out
insl
stos
cld
jns
add
stc
add
call
in
testb
adc
xor
aaa
jne
es
in
xor
dec
fsubrl
cmpsb
push
out
push
icebp
scas
or
sbb
cmpsl
jns
iret
test
and
out
nop
jp
cld
dec
push
sbb
jl
pusha
cwtl
test
testl
dec
leave
rcll
sub
test
dec
jae
mov
lods
out
iret
pop
inc
push
lods
pop
lret
aam
cmp
in
jo
mov
cmp
pop
mov
loopne
xchg
and
iret
xlat
pop
dec
rolb
in
jae
xor
sti
in
jg
mov
inc
mov
btr
mov
divl
and
jo
adc
dec
jnp
or
xlat
sbb
shl
push
aas
out
out
adcl
and
lahf
lret
in
shr
js,pn
movsl
fisubl
mov
fwait
aas
aam
cmp
clc
sub
daa
push
out
test
cmpsb
lret
mov
adc
loopne
jmp
add
push
fisubl
mov
je
pop
out
and
xor
hlt
fisttpl
lcall
call
ret
aad
xor
lret
jp
sub
xchg
adc
add
mov
jmp
cmp
dec
lret
jp
lahf
ret
es
and
jne
mov
lret
xchg
aas
jo
xor
xor
out
mov
test
add
out
cmp
cmc
test
out
cmpsb
push
adc
out
pushf
inc
xchg
pop
pop
fwait
scas
out
daa
pop
stos
push
cld
sub
xchg
out
push
loop
add
nop
ds
jo
dec
movl
inc
or
in
stos
jb
jo
arpl
dec
add
and
cmovnp
test
add
push
mov
out
std
mov
sub
icebp
cmp
repnz
dec
clc
and
or
testb
pop
test
fwait
rcl
repnz
sub
jmp
push
add
out
pop
mov
outsb
and
xorl
lcall
std
cmp
pop
add
sub
fwait
insb
fs
jb
adc
jmp
add
leave
mov
pop
and
mov
out
ja
jb
or
fwait
mov
pop
out
shr
stc
mov
cmc
xchg
icebp
xchg
out
mov
xchg
inc
adc
stos
out
xchg
or
rorl
inc
out
es
in
lcall
push
daa
push
leave
mov
in
mulb
stos
pop
in
push
xchg
push
out
dec
lsl
inc
fwait
push
mov
gs
adc
jb
out
out
dec
icebp
inc
push
iret
mov
rcr
sti
cmp
and
ljmp
call
push
push
aas
out
lret
cs
pop
jge
fdivr
fs
div
push
mov
cmpsb
out
adc
push
dec
xchg
loop
or
push
outsb
test
mov
or
mov
mov
xchg
out
xor
or
add
aas
loop
push
fimuls
pop
in
rcll
mov
adc
fwait
scas
jb
in
shr
xlat
add
dec
out
pop
out
push
rolb
jg
add
jno
jnp
pop
out
push
sbb
and
mov
add
mov
mov
mov
sub
inc
lock
cmp
fwait
sbb
push
out
pusha
out
sub
adc
add
fucom
das
cltd
jmp
out
nop
adc
ss
xchg
in
xor
mov
test
push
pop
jne
push
cmpb
add
mov
int3
in
fucomip
dec
movsb
in
and
xor
push
int3
push
or
mov
and
mul
mov
dec
icebp
or
inc
out
lods
inc
in
push
ss
out
jle
stc
outsl
xor
lcall
jecxz
out
cli
mov
in
daa
dec
shr
cmpsl
pusha
cmc
jge
rol
out
fstpt
stos
inc
dec
je
push
lods
jo
aad
jmp
out
fld
add
sub
jl
push
jb
cmp
xchg
out
addr16
sub
push
push
test
dec
xchg
add
cli
imul
repnz
arpl
lods
add
andb
test
test
or
idivb
in
add
jns
out
fstl
ljmp
call
movsl
or
dec
je
addr16
lahf
mov
test
imul
jp
out
pushl
and
mov
or
negl
xchg
and
mov
mov
xor
sbb
push
loop
cmp
inc
push
in
pop
repz
xor
outsb
fs
dec
stos
aam
pop
imull
out
stc
pop
jae
outsl
jle
mov
mov
mov
stos
adc
scas
cltd
jne
cmpb
add
rorb
xchg
pop
cli
sub
xor
stos
dec
popf
into
outsb
and
ja
cmp
data16
mov
jge
out
daa
add
and
out
mov
enter
mov
sti
cmc
test
call
mov
inc
and
pop
dec
jae
xor
lods
or
mov
daa
lea
sbb
or
jge
jp
sub
cmpsb
test
jle
flds
dec
scas
movsb
sarl
fisubs
xchg
fists
icebp
push
xlat
or
ja
pusha
jo
scas
inc
dec
loop
mov
dec
lret
lock
out
lea
adc
hlt
lods
div
add
mov
into
push
pop
add
out
dec
insb
aam
mov
and
movl
sahf
mov
imul
subl
daa
fiaddl
out
lds
shr
out
jno
cmpb
je
push
and
xor
imul
dec
loopne
fs
out
hlt
out
pop
mov
stos
enter
jecxz
test
cmp
sub
orl
inc
inc
mov
outsb
dec
imul
test
inc
loope
cli
push
imul
adc
daa
xor
dec
mov
es
mov
adc
out
fs
push
mov
mov
imul
ja
addb
fsubr
push
dec
ret
decb
adc
out
push
popf
mov
push
out
js
ljmp
dec
mov
test
xchg
movsb
repz
xchg
aam
lret
dec
pop
subl
pop
fwait
xchg
icebp
cltd
in
mov
jno
push
xchg
test
out
sysret
pop
js
call
add
jb
fwait
add
fildll
daa
or
imul
jecxz
bound
out
or
lea
out
movsl
shll
xchg
mov
aaa
push
out
jno
sub
out
loop
mov
repnz
divb
pop
inc
out
push
test
ja
out
inc
sarl
adc
rorl
sub
out
jns
out
mov
ja
adc
jg
push
lods
call
and
add
iret
loopne
cmp
mov
daa
sbb
insl
mov
pushl
push
adc
push
push
popf
sub
imul
popa
js
outsb
xchg
pop
jg
shll
cmp
fbstp
mov
push
out
inc
out
add
adc
pusha
jmp
repz
jo
aam
mov
push
xchg
js
jnp
es
mov
lcall
imul
shlb
jnp
test
loope
dec
sbb
pusha
add
mov
divl
ljmp
or
mov
ret
mov
push
pop
jle
out
ret
xorb
lds
mul
sbb
xor
xchg
andb
shrb
adc
shl
notl
pop
shr
mov
fs
cmp
mov
loope
out
xchg
jno
push
addr16
ffreep
out
lods
jmp
movsl
loopne
sbb
ret
xlat
popa
loope
add
loop
sti
aas
inc
call
sarl
nop
icebp
mov
and
pop
jg
orl
mov
mov
dec
push
ss
sub
outsl
xchg
xor
out
mov
cwtl
pop
mov
push
xchg
out
dec
pop
push
jb
or
cmc
xchg
into
jp
out
outsb
mov
xor
pop
push
out
loop
leave
pop
outsl
loopne
mov
pop
sbb
sbb
inc
jp
cld
loop
jbe
in
adc
mov
mov
bound
push
imul
dec
jbe
int
out
mov
xchg
out
cld
adc
cmp
bound
out
hlt
push
lahf
loopne
cmp
mov
mov
xchg
and
and
fsubrl
inc
pop
jl
cmc
mov
int
pop
mov
nop
xor
sub
outsb
jns
out
cmp
stos
lcall
xchg
add
xor
push
push
pop
sar
mov
add
dec
adc
outsl
mov
or
ss
popf
xor
out
movsb
ret
outsb
cld
fs
sub
add
xchg
lcall
cmpl
leave
sub
out
sub
rorl
mov
std
jge
pop
fimuls
test
out
xor
mov
popf
xchg
outsb
int
dec
mov
stc
mov
fs
xor
pop
sbb
jge
inc
inc
inc
or
xchg
xlat
jecxz
aam
adc
ss
std
cmp
inc
pop
mov
out
fstps
mov
aam
xor
daa
sysexit
clc
sahf
push
ret
rorl
das
mov
pmullw
shrb
xchg
nop
inc
pop
jmp
loope
in
pop
inc
lods
mov
repnz
ret
sub
push
sbb
cmp
push
adcb
jmp
mov
aam
insl
jmp
xlat
xor
call
jmp
pop
xor
mov
scas
push
jmp
mov
pushf
inc
mov
and
movsb
lock
pop
outsb
out
pop
imul
out
sbb
mov
xrelease
pop
jmp
arpl
push
or
sarb
mov
outsb
sbb
movsl
adc
es
push
cmc
repnz
scas
xlat
add
int3
out
pop
and
inc
xor
aam
in
inc
or
mov
in
mov
push
lcall
xchg
lock
xchg
jo
out
lret
sbb
cmpsl
imul
fistpl
loope
xlat
daa
ss
or
int
rcl
out
out
push
addr16
loopne
js
out
mov
lds
out
jecxz
and
xlat
sbb
sti
add
addr16
loopne
cmpsb
jne
div
or
bound
sbb
out
imulb
icebp
or
xchg
mov
jmp
adc
cmp
lods
shlb
jecxz
out
xor
sub
push
push
loope
out
je
enter
pusha
dec
mov
addr16
out
cmp
out
insb
out
test
pop
mov
out
mov
pop
imul
ret
test
xchg
imul
pop
lea
test
imul
sub
lret
daa
pop
pop
mov
out
test
hlt
adc
popf
jb
adcl
gs
xor
movsl
pop
jecxz
mov
sub
sbb
push
popf
mov
inc
jo
or
mov
mov
jp
sti
and
xchg
cwtl
push
icebp
stos
jne
testl
cmp
popa
sahf
test
cmp
lds
dec
dec
scas
mov
out
push
xchg
in
xchg
and
or
push
sub
pop
out
cmc
cmpsb
xlat
and
push
jg
adc
mov
test
mov
iret
out
test
dec
sub
out
add
inc
xor
and
pop
inc
iret
push
addr16
sub
fidivs
jmp
add
xor
add
dec
mov
out
stos
fisubrs
in
pop
aad
out
stos
push
cmp
mov
out
xor
adc
call
out
div
jp
push
add
xor
jl,pn
jo
icebp
popa
lahf
lock
test
test
pop
adc
repnz
push
cmp
adc
dec
in
xor
out
dec
mov
and
lret
adc
mov
popa
pop
ret
lret
shlb
pop
outsl
fisubrl
icebp
ds
out
xchg
cmp
sub
loopne
lret
movl
shrl
pop
outsl
out
cmp
jge
push
ljmp
icebp
or
jmp
in
fcomi
rorb
stos
jne
sub
cli
jmp
ss
outsb
cmp
mov
jo
lea
or
mov
fwait
shlb
adc
call
push
movsb
into
push
ljmp
call
mov
cmp
out
mov
arpl
jo
ljmp
pop
loopne
out
or
pop
je
aad
fucomip
mov
fidivs
pop
inc
cmp
mov
mov
pusha
cwtl
add
sub
flds
mov
mov
and
xchg
mov
fidivrl
out
rcll
lahf
pop
out
out
inc
xor
add
jle
fdivs
inc
jmp
sub
sub
das
insl
cmp
out
adc
insb
sbb
fsubrp
pop
popf
decb
out
mov
mov
in
mov
mul
mov
popf
out
iret
test
push
adc
js
fld
out
cmp
stc
daa
out
jbe
mov
rolb
add
xor
fistpll
cmpl
xor
pop
aad
out
int3
push
fs
dec
js
out
or
daa
mov
mov
call
or
xor
out
or
jne
out
sbb
cld
dec
out
xor
shlb
out
adcl
pslld
mov
push
mov
out
hlt
inc
cmpsl
xchg
mov
ret
xchg
rcl
lds
pop
mov
pop
scas
jae
repnz
outsb
ljmp
or
out
in
inc
sbb
mov
xor
pop
push
loope
mov
sub
lea
adc
inc
rcll
ss
xchg
sub
jle
inc
out
cmp
adc
inc
loop
sub
push
and
mov
inc
out
in
sahf
stos
cltd
sub
dec
add
fs
mov
out
jmp
add
and
stc
ja
out
jnp
lock
push
pushl
dec
scas
sbb
out
or
enter
cld
and
inc
push
jle
dec
out
rorl
mov
incb
mov
jns
mov
mov
call
out
add
lahf
xchg
push
jmp
fsubrp
dec
pop
adc
sbbl
lahf
jb
jmp
pusha
gs
cmp
jl
out
aam
xchg
cltd
call
xchg
fiadds
mov
dec
adc
out
loope
lea
pop
nop
mov
cmpb
mov
mov
inc
aam
jo
mov
lods
std
imul
repnz
or
out
js
sub
cmc
loopne
ffree
xchg
xchg
out
or
push
out
push
mov
jo
aad
call
mov
std
inc
andl
test
out
ss
clc
dec
inc
mov
in
mov
xor
mov
insb
sbb
xchg
jmp
lock
jo
hlt
xchg
testl
pop
mov
cmc
imul
add
xor
push
in
or
out
pop
insl
dec
xor
arpl
in
cltd
sbbl
vcvttps2dq
out
jne
iret
loopne
in
imul
push
mov
adc
out
cmp
push
pop
out
ret
out
mov
ss
sub
push
xchg
or
push
jle
or
mov
loope
pop
xor
push
in
out
loop
ret
aad
inc
rep
mov
xchg
shl
fistl
sub
mov
xor
cmp
out
sbb
call
call
out
xchg
lock
outsb
out
add
mov
hlt
sbb
sub
xchg
aad
out
in
fidivl
pop
hlt
faddl
shlb
int
inc
xchg
mov
out
dec
sbb
jecxz
fldl
jno
mov
lret
jo
jb
aad
loope
lret
insl
popa
push
int3
xchg
cwtl
pop
mov
inc
roll
les
cmp
popl
loope
sbb
jle
shlb
xchg
scas
mov
sbb
sbb
cmpsb
inc
adc
fidivrs
adc
ss
jmp
mov
out
pop
mov
lcall
cs
push
jmp
dec
mov
push
xchg
aam
sub
scas
call
popf
jne
ja
test
xchg
repnz
push
and
xor
or
pop
out
mov
push
pop
out
cmpsb
sbb
jnp
fdivrl
inc
and
inc
cli
xchg
jae
out
push
inc
daa
pop
out
or
bound
dec
mov
sbb
cmp
outsb
pop
out
movsl
out
repnz
and
mov
cmp
sub
imul
insl
out
lcall
fcoml
lods
fisubrs
shlb
sub
insl
inc
out
es
push
icebp
int3
mov
out
and
mov
dec
out
xchg
je
loop
push
stc
mov
mov
cmc
xorb
out
mulb
dec
cmpsl
add
fstl
rcr
repz
pop
sbb
out
cmc
imulb
ss
mov
mov
inc
rcl
pop
mov
jbe
and
out
mov
push
xchg
jo
popa
xor
ss
lret
pop
call
out
xchg
sbb
inc
add
repnz
or
sub
fucom
xor
out
ss
push
inc
out
dec
in
cmp
out
pop
leave
mov
iret
and
jmp
push
dec
ja
mov
ss
cli
scas
jne
pop
out
flds
inc
add
imul
add
incl
jns
sahf
enter
jmp
add
pop
cmpsl
dec
jo
push
cmp
test
jl
jge
jns
mov
pop
test
nop
aad
cmpsl
hlt
lcall
pop
jle
ds
mov
add
adc
jge
mov
mull
movsb
mov
inc
pusha
dec
add
scas
sbb
push
gs
out
jo
shl
xchg
and
jl
push
lahf
shr
repz
adc
test
push
mov
pop
cmpsl
push
pop
std
and
outsl
in
mov
lea
repnz
testl
jb
jo
or
aam
in
push
sub
and
sbb
push
mov
jo
leave
cmp
lahf
loop
adc
aas
out
xor
lret
inc
xchg
add
iret
mov
push
mov
and
pop
jno
iret
dec
jnp
jo
push
dec
push
fs
add
mov
cmp
inc
mov
sub
xor
repnz
cmp
in
lock
jns
mov
cmp
out
and
adc
arpl
sub
mov
cs
mov
out
and
add
jb
xor
dec
shrb
out
loopne
pusha
ficomps
stc
shr
fdivr
dec
inc
out
push
out
pop
bound
mov
mov
push
mov
dec
jo
rorb
mov
vmwrite
in
movb
pop
lea
repnz
stos
ljmp
xor
sub
push
mov
inc
sarl
pop
nop
out
mov
out
andl
bound
pop
shlb
js
cmc
cmpsl
lds
fsubrs
outsb
jbe
fidivrl
adc
in
ljmp
pop
jmp
and
es
pop
out
dec
jp
cmp
loope
pop
mov
cli
shr
clc
mov
sub
sahf
ret
and
loopne
out
xbegin
leave
test
je
mov
pop
mov
out
jae
dec
sub
jns
out
dec
test
dec
popf
add
jb
sbb
notl
in
jg
gs
icebp
and
lods
add
stos
arpl
add
mov
add
out
xlat
pop
and
pop
iret
xchg
pop
cs
jnp
sbb
mov
dec
xchg
out
fisubs
ret
clc
out
adc
sbb
xor
das
adc
popf
mov
mov
xor
xchg
daa
mov
scas
pop
sar
outsl
aad
out
outsb
pshufw
push
cmpsl
out
ror
add
repnz
adc
out
jne
pop
into
dec
sub
add
mov
mov
cltd
js
and
lods
insl
imull
jo
sub
les
out
pop
jnp
sub
out
popa
cld
jo
js
pop
xor
add
jnp
jg
ret
out
inc
out
push
fcomi
xor
add
mov
out
mov
sbb
call
or
enter
sbb
gs
out
cmp
cld
xchg
movsb
dec
pop
out
adc
jbe
mov
popf
xor
lret
sub
mov
imul
sub
and
xchg
stos
fisubl
aas
int
and
cld
lea
inc
sub
jo
sarb
enter
nop
push
mov
pop
repz
sbb
sbb
stc
adc
hlt
out
mov
mov
dec
mov
out
push
std
out
aaa
loop
push
out
xor
nop
repnz
add
insb
jmp
jmp
inc
push
out
gs
xor
shlb
xor
jne
jnp
insl
push
sbb
pop
aas
out
mov
addr16
lock
and
jne
sbb
dec
sbb
insl
push
shll
xor
xchg
add
push
imul
mov
cmp
lods
aam
push
jbe
xchg
in
ljmp
scas
cmp
pop
adc
sbb
inc
cmpsb
jmp
cmp
sub
jecxz
addb
testb
stos
sbb
out
or
int3
leave
data16
lcall
mov
loop
shrl
movsl
aad
xor
out
hlt
push
rcrb
inc
aas
lock
das
ret
cs
lods
sub
in
sbb
push
sub
or
int3
lret
push
xor
sti
in
outsl
fisubrs
iret
mov
adc
xchg
shll
and
int3
jmp
xorps
mov
in
pushf
push
ds
imul
jne
out
inc
or
fadds
push
dec
les
out
mov
pop
out
adc
sbb
out
ret
insb
lahf
dec
and
xor
sbb
push
out
andl
es
sbb
loope
sbbl
aas
int
ret
js
in
jne
aaa
scas
jmp
addr16
out
pop
xchg
sbb
movsl
mov
push
shll
add
test
fidivl
jne
lock
in
movsl
sub
out
enter
aam
or
adc
cli
cwtl
inc
mov
in
mov
out
jbe
xchg
dec
clc
mov
out
push
jg
mov
and
out
jmp
jl
nop
adc
jmp
xorb
add
insl
mov
pop
int3
out
les
mov
out
inc
cmp
pop
adc
in
sbb
xchg
inc
clc
jbe
fdivrs
out
xor
cltd
jo
cmpsl
loop
mov
repnz
popa
inc
xor
jmp
daa
mov
xor
outsl
ljmp
lds
jge
scas
dec
cwtl
push
jmp
pop
push
inc
jp
dec
xchg
in
in
leave
push
ret
adc
xchg
inc
jecxz
xchg
inc
push
add
addr16
roll
adc
xchg
jl
xchg
adc
sarl
add
cmp
out
in
mov
repnz
pop
and
out
out
dec
stos
adc
cli
out
inc
lret
dec
pop
sti
out
gs
imul
dec
sbb
pop
in
fdivrl
pop
xchg
out
mov
sti
cmp
outsl
sbb
and
adc
mov
lcall
testl
and
pop
dec
lods
add
popf
pop
idivl
out
inc
jbe
adc
dec
sub
out
outsb
orb
nop
test
mov
out
xchg
js
icebp
sbb
mov
xchg
xor
out
mov
sarl
pop
ret
hlt
dec
out
dec
inc
movsb
out
dec
dec
repnz
adc
jecxz
ja
cmp
js
fstps
out
xchg
iret
jae
std
pop
or
cmp
fisubl
int3
mov
cmpsb
add
mov
and
jle
jecxz
testb
adc
aas
mov
test
mov
sub
sub
lret
sub
jbe
sbb
jp
out
mov
rcrl
sbb
cli
push
scas
lods
jae
adc
scas
cmpsl
mov
pop
out
lods
lahf
out
addl
push
push
out
aam
cmp
rcrl
lods
sti
or
es
cmpsl
out
cwtl
xor
xor
shlb
jo
push
out
testb
xchg
mov
out
mov
add
mov
ds
test
out
push
fisubrl
fs
cwtl
add
clc
and
pop
rolb
dec
mov
insl
jo
push
imul
loop
gs
sub
cld
test
add
std
out
mov
daa
hlt
pop
sbb
push
nop
loop
lock
arpl
out
lods
and
cmp
stos
pop
or
push
leave
out
in
push
pop
mov
xchg
gs
lret
jbe
or
cmpsb
push
aas
xchg
jnp
push
mov
xor
pop
jle
movsl
insl
iret
mov
cmp
mov
mov
jecxz
out
mov
jp
enter
mov
mov
sbb
push
xchg
ret
xchg
cwtl
mov
or
loopne
mov
icebp
adc
xchg
mov
jo
adc
or
out
xchg
mov
mov
test
popf
inc
push
push
and
sti
xchg
mov
out
pop
push
jnp
xchg
jno
push
rclb
mov
push
call
int3
adc
mov
in
out
adc
insb
jp
fsubrs
jo
jmp
pop
push
jl
adc
or
insb
sub
mov
add
mov
jo
jns
outsb
mov
and
out
sub
mov
sbb
jmp
mov
out
popa
adcl
test
add
mov
loopne
into
shl
movsl
jg
test
negb
iret
cwtl
outsb
jo
xchg
adc
mov
addr16
int3
dec
shrl
add
out
pop
popf
les
and
jle
out
test
gs
xor
loope
icebp
scas
outsb
cmpsl
pusha
pop
out
fidivrs
and
icebp
popf
nop
mov
les
fsubrp
xchg
incb
xor
mov
push
icebp
loopne
rcrb
popa
test
out
cmpsl
add
cmp
pop
inc
das
cmp
xor
aas
xor
lcallw
lret
sub
and
pop
xor
add
xor
cmc
mov
mov
add
adc
mov
jnp
add
sti
out
adc
repz
lcall
dec
std
add
xorl
nop
and
cmp
scas
xchg
test
scas
or
add
outsl
out
sub
pop
shlb
dec
push
out
xchg
hlt
add
adc
sbb
xor
pop
cmp
mov
mov
in
mov
repz
in
inc
push
popa
negl
lcall
add
arpl
mov
push
fadds
loopne
mov
mov
shr
jno
jl
in
imul
ljmp
push
jo
insl
or
popf
aam
out
ss
mov
pop
mov
push
push
push
dec
arpl
sub
loop
xchg
imul
enter
aam
inc
ret
mov
mov
sbbb
mov
imul
test
cmpsb
mov
mov
sub
and
clc
dec
or
daa
int
cmp
notl
mov
jno
and
out
out
push
dec
dec
arpl
cmp
xchg
aad
mov
stos
out
aaa
enter
cmpsl
dec
and
sub
rolb
lods
test
mov
or
sahf
pop
jo
mov
fwait
push
add
out
std
fistl
hlt
out
sbb
in
jp
lods
scas
out
test
mov
ljmp
mov
loopne
jmp
lret
decl
ret
out
mov
fnstenv
push
xorl
mov
mov
in
ret
dec
cli
neg
mov
shlb
addr16
mov
xor
inc
pop
jo
ss
xor
orb
insl
out
dec
add
les
add
xchg
xor
popf
pop
sarl
outsb
pop
leave
icebp
adcb
shrb
aas
stos
jecxz
pushf
ja
out
stc
sub
xor
mov
cli
push
out
add
mov
cmp
test
sbb
xchg
xchg
hlt
add
out
call
push
pop
out
pop
jb
push
mov
out
sahf
xchg
mov
out
popf
aas
mov
gs
push
ret
das
decb
sti
ljmp
std
subl
sub
push
jb
dec
adc
mov
xlat
and
sbb
dec
pop
lret
jns
imul
int
jbe
push
insl
clc
dec
insb
testl
lods
and
push
mov
repnz
lcall
or
dec
into
sahf
mov
out
mov
xchg
xchg
fmul
push
pop
aad
jl
movsb
push
cli
jge
scas
jo
lods
push
mov
sti
inc
push
rcll
cld
adc
xor
cmpsl
repnz
stos
and
xor
push
scas
jb
mov
jne
mov
push
pop
pop
sar
out
inc
iret
jns
and
out
mov
loope
repnz
mov
sbb
shrl
push
cmp
orl
call
in
repz
insb
and
jb
out
popf
shrl
out
jp
xchg
adc
add
push
mov
dec
add
inc
jecxz
jecxz
call
scas
xchg
cmp
or
js
mov
inc
or
xchg
testl
js
cmp
jae
int
insl
jp
movsl
gs
lret
es
mov
lods
mov
loope
xchg
jnp
xor
dec
cltd
pusha
xor
mov
and
mov
sub
mov
daa
pop
xchg
bound
out
xchg
inc
imul
movsb
test
lahf
in
jae
out
test
xchg
rolb
test
aas
pop
and
insb
add
xchg
icebp
dec
out
add
adc
inc
out
repnz
sti
push
add
pop
and
jmp
mov
and
pop
mov
cmp
inc
out
pop
adc
js
mov
loop
lret
popl
fs
stc
cmp
pop
sbb
fldt
pop
inc
sub
mov
mov
movsl
adc
bound
adc
jno
lret
push
add
scas
xor
adc
in
add
out
mov
idivl
xor
out
or
mov
mov
or
cmp
testl
dec
out
test
xor
lret
pop
jle
adc
hlt
fwait
lock
and
xchg
jmp
in
inc
xchg
jecxz
push
dec
data16
jo
jge
adcb
xchg
ret
pop
inc
leave
out
or
jae
bound
nop
popa
out
stos
aad
shl
cmp
out
mov
push
pop
test
push
gs
mov
mov
inc
pop
pop
mov
jnp
repnz
xchg
adc
fmuls
jbe
sub
xor
in
mov
or
pusha
sub
mov
add
inc
cmc
cmpsl
popa
adc
sti
sub
out
insl
dec
aas
out
lret
push
jnp
mov
sub
idiv
jns
xor
pop
mov
rorb
jl
fistpl
push
mov
sbb
in
jne
jne
push
xor
inc
iret
test
in
cmp
ds
xor
rorb
inc
js
dec
mov
testb
pop
jno
xor
mov
cmpsl
mov
mov
mul
cmp
sbb
ljmp
test
push
mov
push
dec
jnp
inc
out
and
or
mov
fucomp
cltd
loopne
and
enter
in
sbb
cli
mov
push
and
xchg
sub
pop
inc
fildl
xor
or
xchg
loop
mov
mov
repnz
xchg
mov
xchg
aaa
out
repz
int3
mov
sbb
sbb
inc
popa
out
inc
imul
clc
out
mov
aam
inc
es
decb
xchg
out
divb
push
mov
aad
pop
jmp
inc
or
leave
sbb
mov
in
sbb
shll
dec
jns
ja
outsl
lods
mov
mov
insb
jne
hlt
mov
pop
sahf
push
cmc
push
add
cmpsb
dec
pop
cmc
xor
mov
call
dec
cmp
repz
add
dec
scas
mov
mov
mov
dec
int
sti
out
xchg
cmp
add
jne
xchg
arpl
int
imul
lea
enter
out
mov
cli
mov
out
repnz
pop
mov
out
jge
ret
hlt
mov
mov
std
jo
nop
ret
lcall
adc
dec
ljmp
push
mov
jmp
xchg
popf
jge
adc
push
xchg
pop
dec
push
out
fs
sub
xchg
xchg
hlt
cmp
loop
ljmp
data16
imulb
jo
push
dec
iret
add
inc
mov
fadd
out
mov
out
shrb
out
mov
xlat
mov
sub
jge
movsl
fcompl
sbb
mov
mov
out
lfs
test
imul
fwait
divb
insl
pop
out
iret
ficompl
xchg
push
dec
js
lea
xor
sub
xchg
cmc
out
mov
shr
pushf
out
push
inc
mov
lds
fbstp
das
dec
mov
movb
int
aam
out
xor
mov
sub
out
je
mov
pop
push
pop
xor
mov
jg
fisubl
mov
out
rorl
popf
adc
sti
adc
jecxz
repnz
popa
cmpsl
dec
dec
aad
jno
lds
pop
add
xchg
sbb
lret
mov
idiv
push
ret
aad
push
movsb
jg
clc
subb
jecxz
mov
fldt
psraw
hlt
and
out
jo
adc
out
lock
xchg
nop
fucomip
jecxz
mov
mov
push
sti
lcall
mov
in
ret
subl
out
int
int3
sub
sub
adc
loopne
icebp
inc
pop
out
mov
mov
jge
lret
cmp
out
adc
sbb
bnd
cmp
mov
fcoms
cs
push
repnz
sti
jmp
imul
adc
test
pop
xchg
xor
movsl
dec
mov
or
push
push
out
or
jbe
add
out
jg
je
sub
loopne
daa
outsl
aam
out
push
dec
dec
push
sbb
jno
out
xor
adc
es
push
test
mov
std
test
mov
inc
mov
hlt
cltd
xorb
idivb
xchg
ljmp
sbb
mov
or
adc
cwtl
add
fadds
scas
leave
shr
cli
xchg
inc
andb
jg
add
cmp
pop
or
inc
in
out
mov
push
ret
test
sbb
out
leave
inc
xchg
ret
adcb
mov
cld
cli
pop
add
xor
xchg
pushf
xor
add
rorl
loop
or
push
test
inc
fwait
iret
inc
loope
mov
jae
loop
sub
movsb
mov
fwait
out
push
mov
mov
scas
mov
mov
dec
inc
popf
sub
push
aam
mulb
std
push
outsb
dec
daa
out
fldcw
cmc
lahf
adc
add
push
mov
sub
test
out
sub
xor
jp
inc
jnp
lcall
nop
jecxz
pop
mov
cli
rcrl
bound
push
adc
xor
out
xchg
mov
call
inc
xor
out
int
ljmp
into
out
and
movsl
inc
cs
in
popa
idivl
out
pop
mov
mov
xor
hlt
push
or
sarl
es
xor
jg
enter
testl
iret
add
sub
out
movd
ss
into
aam
jns
jae
pop
cmp
jle
shrb
dec
add
xor
pop
adc
enter
divl
push
jbe
xchg
out
sti
and
pusha
dec
aad
repz
add
mov
xchg
imull
out
add
xor
out
dec
cmp
ja
imul
stc
shlb
add
jo
mov
sub
jecxz
fstpt
jbe
adc
inc
jmp
pop
out
push
sub
lods
fwait
cli
jne
out
pop
sbb
mov
xor
xchg
jp
adc
repnz
cmpsb
mov
fld
scas
cmp
add
or
or
scas
cmp
shl
jno
out
jmp
sub
mov
pop
xor
ja
cmp
pop
xor
push
ret
xor
pop
out
xchg
xchg
fwait
jle
add
cwtl
jg
add
xchg
lahf
sub
scas
push
pop
jmp
mov
mov
fmull
shr
pusha
mov
xlat
pop
push
cltd
in
push
je
jmp
xor
and
xchg
out
adc
or
fists
adc
leave
inc
mov
mov
mov
cmc
jmp
stos
push
loope
or
adc
pop
test
into
jg
scas
and
orl
inc
arpl
ret
in
out
sbb
scas
add
push
inc
out
sar
arpl
xor
xchg
ret
push
fcomi
stos
ficompl
out
mov
mov
dec
add
xlat
xor
loope
dec
jnp
loopne
inc
shlb
out
jno
and
addr16
dec
insl
inc
jne
sahf
push
arpl
mov
mov
mov
and
test
idivl
add
leave
adc
das
pusha
adc
pusha
pop
out
mov
hlt
notl
out
ja
sti
mov
jo
inc
cmp
sbb
dec
inc
sbb
out
pop
add
je
push
dec
lahf
sbb
cmp
add
leave
stos
pop
cli
test
pop
xor
xchg
ret
pop
out
imulb
push
bound
cltd
inc
cwtl
sbb
or
sti
pop
fidivl
fmuls
xor
mov
ret
pop
adc
push
loope
lds
shl
roll
jo
cmpl
mov
xor
out
sbb
jb
pop
fimuls
jmp
xchg
inc
roll
mov
lcall
or
cli
in
idivl
jmp
pusha
xchg
xor
push
sbb
sbb
stos
cltd
jp
push
out
jecxz
jle
nop
or
out
mov
pop
pop
push
cmp
inc
and
movsb
pop
mov
out
sub
testb
mov
xchg
sarb
adc
ret
mov
call
xor
push
jg
cmp
and
out
movsl
dec
mov
out
sub
es
out
pop
test
jl
inc
mov
out
fisttpl
insb
add
cmp
and
sub
jp
push
mov
mov
cmp
out
lret
fsubrl
out
into
cltd
mov
lods
cmp
sbb
repnz
fdivp
in
pop
imulb
jle
pop
je
inc
out
mov
rorl
mov
mov
jmp
out
shll
js
out
xchg
push
ds
jno
nop
jge
mov
out
shrb
xchg
push
sbb
jb
shr
inc
or
mov
jge
popf
daa
stc
cmpsl
dec
out
leave
je
mov
push
int3
lahf
fldl
out
push
mov
repz
out
dec
cwtl
xor
loope
cmp
cmpsb
cmp
daa
sar
flds
stc
xchg
out
jbe
bound
addl
mov
imul
jae
mov
out
cmpsb
xchg
mov
out
lds
inc
in
jmp
jmp
add
adc
sbb
pop
or
hlt
lock
fnsave
loope
dec
inc
sarb
cwtl
sbb
icebp
push
data16
out
inc
pop
out
adc
out
movsb
out
xchg
sahf
sub
stos
cwtl
test
xchg
mov
aas
out
push
int3
mov
aad
mov
pushf
out
rclb
sub
inc
sub
out
jp
mov
arpl
test
aaa
xchg
push
imul
scas
out
dec
lcall
out
aad
sbb
pop
in
xchg
into
push
scas
jmp
jo,pn
jo
ret
pop
cmp
jp
test
mov
jns
nop
lods
mov
adc
push
loope
add
mov
push
mov
dec
xor
cltd
out
adc
bound
sarb
incb
movsb
lret
xor
push
loopne
push
in
adc
movsl
jne
pop
sub
jecxz
cs
xor
popa
jmp
xor
xor
xchg
cmpl
aad
push
and
lock
push
add
bound
mov
sti
mov
aad
in
mov
movsb
inc
pushl
and
stc
jle
jecxz
and
mull
std
fdivs
data16
rclb
ja
int3
pop
sahf
out
pop
out
inc
sar
idivb
push
into
arpl
lcall
or
out
aaa
mov
enter
cmp
push
inc
push
lret
pop
jge
daa
out
mov
clc
loope
adc
mov
cmpsl
jae
inc
ror
out
cltd
outsb
xor
lahf
inc
pcmpeqd
ret
in
push
dec
cmp
out
mov
mov
jl
jns
out
or
cmpsb
push
mov
out
mov
mov
push
out
outsl
xchg
cltd
adc
xchg
xor
mov
mov
into
clc
out
jle
call
add
add
mov
adc
popf
stos
add
xor
iret
push
out
aas
pop
mov
int3
aaa
inc
fiadds
movq
push
inc
add
cmpsl
out
inc
nop
add
pushf
iret
in
jg
vpunpckhbw
test
rorb
mov
repnz
jo
out
or
pop
out
jl
ljmp
dec
xchg
mov
scas
out
ret
mov
and
cmp
mov
out
and
add
sub
jmp
rolb
scas
mov
addb
inc
loope
out
pushf
pop
inc
outsb
add
es
bound
test
out
jge
inc
int3
cmp
sbb
fisttps
in
cmpsb
ss
push
pop
out
inc
push
xor
jnp
stc
out
sub
aaa
pop
dec
and
test
out
rorl
andb
mov
out
notb
add
shr
rolb
fistpll
add
dec
fs
testl
stc
jle
ret
xchg
outsl
mulb
out
xchg
sti
lret
int3
hlt
out
cmpsl
scas
lret
fs
inc
cmp
xchg
inc
ja
call
mov
and
mov
repz
mov
pusha
loop
sub
fidivl
jmp
out
out
ss
xchg
rcrl
fs
dec
and
out
in
mov
sti
add
inc
divb
sbb
pop
xor
inc
adc
ja
pop
push
int3
jge
mov
fucomi
ret
es
inc
in
inc
out
inc
js
sub
cltd
test
popf
addr16
xchg
inc
mov
inc
sub
mov
mov
mov
push
in
xchg
mov
test
sbb
push
ja
jle
and
mov
pop
mov
out
jno
push
xchg
mov
sub
cmc
rorl
pop
aas
fdivs
lock
xor
out
js
jb
loop
ror
xor
pop
xor
repz
add
mov
push
cs
out
pop
and
xor
and
mov
xor
mov
and
out
adc
addl
insl
shlb
cmp
add
gs
inc
clc
fsubp
cmpsb
mov
int3
out
add
dec
xorb
std
xchg
stos
xor
jg
out
shrb
rcll
xchg
out
mov
into
sbb
cmp
and
addr16
xchg
fnop
enter
scas
gs
lock
cmpsb
fwait
in
inc
add
jecxz
and
mov
push
cwtl
fwait
jmp
and
add
fucomip
sahf
and
aad
mov
pusha
insb
sti
outsb
out
push
cmc
cmp
cli
cld
test
out
sub
sbb
push
adc
lret
pop
test
cltd
mov
pop
sbb
paddsw
cmp
jg
lcall
cmpsl
imul
dec
xchg
out
push
fstps
repz
jno
xlat
out
fstpl
in
stc
out
jbe
push
movsl
lret
sti
inc
mov
xchg
out
fcmovnu
sbb
xchg
into
out
outsb
xchg
cmpsl
movsl
andl
test
out
insl
das
mov
jo
bound
fistps
repnz
ljmp
mov
fnstenv
out
push
pop
add
mov
cmpsl
xor
mov
roll
or
je
divl
leave
xchg
rclb
push
pushf
add
aam
out
popf
scas
push
mov
je
jo,pt
in
and
sbb
pop
repnz
fistpll
push
push
mov
repnz
daa
push
movsb
aas
out
and
adcb
or
popa
xchg
mov
fs
add
int3
and
cld
push
std
dec
aad
sbb
inc
out
jmp
pop
in
xor
movsl
dec
push
mov
inc
fcmovnu
mov
pop
clc
sub
inc
jo
enter
loopne
scas
cmpsw
jo
dec
sbb
sub
jg
aas
lds
inc
mov
and
jecxz
or
divl
ficompl
int3
xchg
mov
pop
jb
out
inc
adc
push
ja
or
out
fmuls
pushf
adcb
inc
cmc
test
js
jne
daa
mov
cmp
mov
mov
inc
push
test
popa
cmp
xor
sub
mov
sub
lret
or
out
mov
out
xlat
shll
out
jb
cwtl
ds
icebp
push
into
out
add
popf
xor
addr16
out
xorb
inc
in
jae
imul
int
cmp
out
rorl
testl
mov
xchg
fldcw
mov
out
cwtl
mov
out
ret
lret
xor
pusha
icebp
rcrb
pop
mov
sbb
movsb
test
jo
xchg
pop
adc
jo
inc
dec
sbb
jmp
adc
jb
popf
jno
jmp
mov
out
jnp,pn
dec
add
sahf
xchg
testl
add
fdivl
mov
into
pop
dec
fucomi
aam
adc
add
mov
or
hlt
jnp
insb
test
lea
and
xchg
in
dec
push
out
mov
mov
pushf
out
xchg
das
std
push
rcll
inc
shr
fwait
sub
push
call
mov
in
jns
shll
insw
jno
cli
loope
adc
nop
fsts
pop
js
div
dec
or
out
in
out
out
inc
xor
inc
daa
xchg
insb
out
hlt
inc
cmp
jo
and
jo
stos
sub
iret
out
aaa
int
repz
jb
dec
repnz
xchg
out
out
dec
outsl
faddl
mov
and
popf
daa
outsb
outsb
xchg
dec
push
out
cltd
jecxz
unpckhps
adc
arpl
or
out
test
or
mov
out
les
cmc
lock
outsb
add
adc
inc
lods
jo
lret
mov
dec
out
aaa
lock
lcall
stos
and
adc
out
rolb
dec
sbb
adc
setp
iret
push
out
data16
push
leave
adc
out
test
sarb
repnz
rcll
aas
xchg
fldt
out
ss
pop
lahf
movsb
xchg
out
adc
push
clc
jle
ret
mov
push
mov
outsl
pop
jmp
mov
sbb
or
out
cmc
pop
test
push
jo
sub
test
and
ret
push
leave
xor
or
xchg
jl
pop
loop
lock
out
xchg
sahf
test
fidivs
jnp
push
cmp
sub
lret
test
imul
icebp
loop
fsubr
in
outsb
das
dec
out
mov
pop
ja
xchg
push
mov
ljmp
add
lea
rcll
out
jno
adc
out
int
mov
sub
sbb
cmpsb
xchg
out
xor
push
data16
iret
outsl
jo
mov
inc
loope
leave
jb
out
jno
js
mov
out
hlt
out
adc
jp
push
stos
lahf
cmp
shlb
pop
out
les
pop
add
sub
aam
lret
jecxz
rorl
pop
and
and
mov
ret
mov
and
pushf
out
xor
js
icebp
jp
xchg
test
push
out
aad
mov
pusha
xchg
inc
adc
shl
ret
push
adc
out
pop
out
mov
jae
mov
cmp
and
push
push
dec
pushf
ss
adc
xchg
mov
push
test
addl
rcll
lahf
xchg
int3
or
pop
jg
sbb
enter
xchg
add
push
sbb
dec
daa
cmc
jnp
sub
enter
xchg
xor
lret
aas
xchg
xor
out
shrd
in
repnz
adc
add
jg
push
xlat
add
inc
negb
mov
out
add
sub
jne
imull
mov
repnz
sbb
xlat
mov
mov
mull
jno
dec
xchg
mov
lahf
pop
mov
out
pop
and
and
dec
sub
push
xor
outsl
jo
xchg
fucomi
mov
rcrl
out
dec
ss
or
jl
in
add
testl
imull
cmp
sbb
inc
clc
sti
out
lock
out
cs
hlt
sbb
std
movl
inc
mov
mov
out
fsubp
cmp
mov
jecxz
cli
ss
mov
mov
loopne
lock
xor
inc
fmuls
mov
adc
flds
notb
mov
repnz
adc
fldt
out
push
testl
add
push
sbb
out
push
pop
or
add
xchg
push
idivl
mov
cmp
cmp
mov
negb
test
push
mov
sbb
cmc
mov
movsb
es
push
std
lods
mov
nop
cmp
adc
dec
mov
sub
int
div
addb
and
lahf
lcall
mov
jge
out
adc
bnd
jp
pusha
push
pushf
fiaddl
pop
dec
daa
ljmp
sahf
out
arpl
sub
in
mov
sbb
push
ret
sub
icebp
pusha
mov
jmp
xor
outsl
aad
imul
adc
out
out
sub
xchg
iret
scas
out
arpl
in
and
jp
out
mov
fdivrs
out
nop
dec
mov
sub
jbe
es
pop
xor
in
or
rcrl
mov
imul
push
add
inc
out
jno
cmp
out
aam
aaa
mov
out
in
push
sbb
in
rol
jmp
or
dec
out
jnp
dec
mov
ret
aaa
out
adc
mov
daa
push
out
push
pop
jbe
and
fimuls
sbb
cmp
cmp
inc
jl
cmp
insl
adc
in
jle
in
notb
sahf
out
int
xchg
inc
or
pop
out
lea
outsb
jo
push
mov
adc
push
out
out
loopne
adc
mov
lahf
pop
dec
xchg
movsbl
xor
imul
adc
out
push
testb
xor
outsl
in
mov
push
xor
in
insl
in
sbb
pusha
aad
stos
out
or
repz
out
jecxz
addb
out
dec
bound
dec
out
call
mov
out
jae
das
lds
out
mov
inc
jb
mov
shrb
or
mov
in
jl
cmp
lock
push
mov
loope
adc
sbb
out
or
lods
scas
filds
or
push
cmc
xor
int
dec
out
push
sti
mov
sub
mov
adc
inc
pop
push
out
jmp
jge
ljmp
dec
or
scas
push
std
mov
inc
arpl
into
jmp
xor
adc
es
out
je,pt
mov
out
adc
push
icebp
pop
mov
mov
push
mov
xor
stos
adc
adc
test
pop
mov
call
lcall
repz
js
push
jnp
sub
adc
pop
inc
lcall
outsb
lods
jns
and
cmp
pop
adc
out
dec
mov
test
lcall
filds
fstpl
add
gs
test
fstpt
fnstenv
imul
mov
mov
xor
loop
push
sub
inc
out
sti
sub
ja
push
or
cmp
scas
js
out
dec
or
push
add
push
xchg
jle
cmp
mov
xchg
mov
inc
inc
xchg
inc
cmpsb
mov
push
lret
sub
in
out
push
lods
sbb
out
xchg
adc
jae
iret
mov
arpl
mov
sub
pop
push
insb
dec
dec
jmp
stos
push
pushf
cmc
insl
negl
cmp
call
test
in
out
or
lret
cmp
xchg
push
add
out
sbb
das
xchg
jp
out
int3
add
test
mov
inc
pop
fwait
das
pop
aad
inc
out
lea
xchg
sub
sbb
rcr
cld
pop
divl
ljmp
xor
xlat
out
outsl
xchg
hlt
in
aad
cmp
loope
sbb
js
icebp
pop
rcrb
sub
negl
adc
dec
mov
outsl
out
int3
lcall
in
insl
out
inc
sbb
das
fisubs
mov
ret
out
jmp
movb
outsb
nop
adc
pusha
inc
or
xor
out
jg
or
push
adc
mov
push
mov
js
rorb
cltd
std
rcll
mov
int3
cmp
xchg
jl
mov
dec
push
mov
and
out
sti
lds
repnz
sahf
push
in
out
and
dec
xchg
push
mov
adc
aas
shl
shr
fnsave
and
jae
mov
xchg
out
lea
jno
mov
pusha
loopne
pop
or
push
sub
mov
inc
mov
out
call
movsb
adc
int3
inc
loopne
add
mov
insl
test
pop
mov
cmp
xchg
jae
sahf
inc
out
lcall
pop
dec
pusha
out
fwait
xor
or
out
movsb
jp
jb
sub
fmuls
call
adc
dec
ret
sbb
arpl
icebp
jne
xor
shll
push
out
out
sub
fsubs
jo
sbb
cli
push
sti
adc
sub
cltd
mov
out
cmpsl
imul
adc
stos
subl
dec
out
pop
mov
pop
cmpsb
out
fidivs
xlat
xchg
push
lcall
nop
or
jns
ret
jle
inc
ss
xchg
pusha
arpl
insb
inc
cmp
rclb
mov
hlt
or
push
stc
adc
loope
dec
sbb
add
aaa
mov
hlt
popf
lock
div
or
call
loop
adcl
movsl
cs
xor
and
adc
out
lret
pop
cmpsl
push
shrl
outsl
test
lahf
pop
inc
mov
test
xor
pop
mov
xchg
cli
inc
cmp
outsl
dec
and
jae
jmp
inc
pop
xor
out
stc
scas
ljmp
push
cmp
push
add
insb
movsl
inc
or
nop
mov
call
arpl
cli
imul
scas
add
jp
xorb
xlat
ja
test
mov
or
das
mov
jne
out
push
idivl
mov
xchg
and
mov
ret
mov
pushf
lcall
or
sbb
xor
sub
xchg
xchg
xlat
roll
jns
push
mov
mov
call
mov
cmp
xchg
test
mov
int
out
fdivrs
jns
jp
dec
sbb
mov
pop
rclb
and
ljmp
dec
out
cmpl
sbb
cmpsl
scas
sub
inc
push
sti
pop
pop
test
loopne
sub
jp
lods
and
mov
outsb
andl
imul
cmp
aad
inc
shr
xchg
xlat
sub
jno
xchg
push
loop
add
repz
and
cmp
nop
pushf
ja
mov
jmp
repnz
loope
rcrl
sub
xchg
cmpsb
adc
subb
sbb
fucomip
jl
pushf
cltd
pop
mov
inc
mov
negl
icebp
dec
xchg
dec
aam
repnz
outsl
ljmp
mov
sarb
dec
fdiv
cmc
inc
clc
or
mov
fldcw
xor
push
in
imul
dec
test
ljmp
cmc
cld
mov
rorl
or
push
sub
in
lahf
jo
loope
in
fsubr
hlt
lea
jne
cmp
xor
cmp
sub
icebp
mov
faddl
les
inc
out
fwait
sti
mov
pusha
out
fcoms
dec
mov
mov
scas
hlt
dec
jle
movsb
push
in
out
and
mov
andb
jg
pop
push
fucomip
lods
fidivs
lahf
mov
sub
out
add
lret
ret
sub
out
cs
mov
pop
sti
pusha
and
ja
xchg
mov
scas
or
dec
pop
test
mov
cs
adc
gs
push
out
push
or
jp
out
rcrb
sbb
add
mul
adc
inc
jmp
mov
pushf
ss
jbe
dec
nop
lea
movsl
push
loop
sub
xor
scas
jle
out
xor
inc
jo
cmp
enter
mov
mov
nop
js
dec
or
inc
xor
cmp
out
aad
aas
hlt
ficoml
jne
out
cwtl
cmpsl
fwait
and
xchg
test
pop
stc
push
mov
cli
jecxz
ja
xchg
clc
out
lcall
xor
jmp
imul
shrl
jo
sbb
loope
mov
ss
sbb
pop
pop
out
xchg
jmp
in
out
dec
into
push
mov
out
fldenv
es
repnz
jge
jmp
push
cmp
into
mull
jae
out
sahf
dec
rolb
jp
xchg
in
data16
clc
js
add
or
pop
mov
enter
push
add
xchg
and
cwtl
mov
out
addr16
pop
push
inc
je
and
outsb
add
mov
lret
mov
mov
out
jb
fisttpl
out
xchg
jmp
inc
enter
out
adc
sbb
popf
push
cld
out
mov
or
jge
aad
out
dec
mov
dec
repnz
push
inc
ljmp
mov
add
or
mov
push
in
mov
out
xchg
in
xchg
repnz
xlat
loopne
cs
insl
jmp
aad
mov
inc
cmpsl
cmp
push
dec
out
sub
push
enter
notl
js
out
popa
subl
int
sub
mov
movsl
int3
push
cmpsl
out
aad
mov
dec
test
dec
xor
pop
enter
das
lahf
xor
cmpsl
pop
ror
push
dec
push
mov
ss
fists
out
aas
adcl
or
pop
and
movsl
jecxz
divl
insb
out
cmp
and
add
sbb
xchg
andb
adc
jmp
push
add
in
and
popf
ja
fsub
out
out
dec
outsl
mov
mov
pop
jg
out
xchg
jnp
push
sbb
adc
xchg
pop
jo
or
sbb
clc
mov
add
in
dec
lock
inc
icebp
mov
add
out
or
jmp
test
mov
out
test
xor
and
mov
push
imul
xor
in
sahf
out
xor
ja
int
mov
mov
xchg
ss
jmp
xchg
nop
sub
out
cltd
es
testl
ja
lret
shl
mov
pusha
mov
lods
out
and
shlb
clc
xchg
jne
add
push
insl
icebp
es
xchg
pop
outsl
push
lahf
adcl
dec
int
out
outsb
stc
cmc
pop
sub
mov
call
pop
scas
out
sub
push
mov
push
ret
js
pop
mov
cmc
mov
subb
jnp
mov
rcrb
jns
mov
outsb
stos
stos
adcl
mov
rcll
enter
jo
mov
leave
mov
outsl
dec
inc
jo
negl
in
out
cs
je
mov
roll
dec
jae
out
test
std
ret
jnp
lock
repz
sub
add
orb
jmp
mov
push
out
cltd
pushf
lea
sahf
clc
xor
pushl
jge
add
lahf
pop
out
mov
jnp
jecxz
out
or
sub
pop
jns
out
push
xchg
out
pop
out
cmc
test
push
andb
out
pop
lcall
popa
insb
ljmp
cli
jbe
je
pop
xor
jne
leave
add
or
pop
xchg
mov
scas
aad
cmpsb
out
dec
lock
arpl
mov
rclb
out
test
sub
fdivr
lods
out
sbb
out
push
or
xor
jge
addr16
xchg
test
icebp
push
scas
cmp
jecxz
hlt
add
out
mov
enter
lock
cmp
hlt
pusha
call
ror
jp
and
jo
sbb
in
ljmp
out
add
int3
out
sub
lods
out
jno
lcall
add
in
mov
gs
dec
rol
out
aas
cmpb
lahf
scas
test
cli
lods
xchg
mov
jmp
out
fists
call
out
push
push
inc
out
jg
sub
add
adc
mov
movsb
rcrb
cmp
push
or
and
andb
pop
xchg
mov
mov
inc
inc
xchg
push
out
insb
test
and
stos
int3
or
dec
jno
jo
xor
mov
movsb
push
popa
fldt
out
add
iret
pop
out
mov
inc
mov
out
dec
js
xor
push
addr16
ja
xchg
scas
aas
das
addl
fcoms
adc
xchg
in
lcall
out
aam
mov
pop
push
movb
mov
and
jp
jle
test
pop
out
xor
insb
imul
cmp
out
xchg
std
out
mov
jl
xchg
lret
out
mov
loop
jmp
into
lods
mov
fildll
cmpsl
fidivl
in
out
or
pop
jl
and
scas
shl
jg
fstpt
jae
pop
jae
sahf
push
out
sti
and
mov
mov
cld
add
push
inc
pop
jmp
lret
mov
pop
dec
add
pop
inc
in
fsubl
inc
sub
cmp
out
xchg
sub
pop
outsb
fucomi
iret
mov
cmp
inc
and
add
sub
out
sub
fnsave
push
rolb
in
dec
fmull
daa
sbb
into
mov
out
shlb
push
ljmp
call
out
or
mov
push
out
stos
aad
xor
and
jbe,pt
mov
roll
cmp
imul
mov
ret
cmpsb
or
or
icebp
lods
push
out
in
outsb
dec
add
subps
ret
out
sub
rcl
lret
test
out
mov
mov
cmpsl
out
sbb
clc
je
and
movsl
out
xor
xor
out
push
pop
ljmp
dec
push
cmp
push
fisubl
stc
and
out
add
cs
xchg
inc
lods
repnz
lock
sbb
scas
repz
mov
add
out
fiadds
xor
fisttpll
jns
push
stc
out
and
aad
ljmp
subl
es
les
sbb
lea
adc
into
out
dec
aaa
mov
jns
add
imul
insb
stos
add
cmpb
mov
xor
out
mov
out
js
shrl
andl
mov
lea
fwait
adc
ret
outsb
jl
add
in
inc
imul
cmc
pusha
aam
out
jbe
cmpsl
mov
pop
inc
out
push
mov
pop
out
xor
inc
out
mov
jbe
xchg
repz
or
jmp
cmp
testb
dec
shll
out
mov
dec
jl
cwtl
adc
cmp
out
shrb
js
dec
aam
jmp
repz
mov
xor
pop
xor
mov
es
cs
dec
aas
jecxz
xlat
add
loope
lret
pop
jns
stos
fstl
rcl
clc
mov
scas
out
sbb
mov
lret
lea
inc
adc
stos
jge
push
mov
daa
aas
divb
adc
cli
pushf
sbbb
adc
sbb
mov
mov
icebp
out
jecxz
ret
and
dec
out
fcmovb
je
outsb
inc
test
scas
mov
pop
jno
dec
in
xchg
movsl
xchg
xor
shlb
cmpsl
jle
mov
ljmp
jmp
mov
jbe
mov
push
dec
rorl
inc
pop
pop
popa
cmpsb
out
jae
pop
jp
push
sbb
xchg
or
xor
sar
jl
dec
in
out
imul
ret
adc
movsb
jne
sbb
sub
xchg
popa
pinsrw
filds
fnstsw
out
pop
mov
and
sub
dec
loopne
cli
out
fisttpll
and
adc
out
mov
push
jg
popa
imul
ds
sbb
repnz
cmp
aas
out
dec
mov
addr16
jecxz
in
cmp
or
ljmp
loop
inc
cld
out
pop
pop
xchg
cmp
out
out
fmuls
mov
out
jns
lods
push
leave
loope
out
and
fcoms
sti
mov
fldenv
jmp
cli
repnz
cmc
pop
notb
adc
inc
sbb
mov
xor
push
xchg
cmc
inc
out
mov
lret
adc
out
or
and
aam
ljmp
imul
sbb
mov
and
out
mov
inc
scas
xchg
lcall
in
pop
stc
outsl
jmp
sub
mov
call
pop
into
movsb
mov
in
push
mov
mov
in
scas
mov
push
mov
push
pop
push
icebp
mov
pushf
add
mov
pop
dec
icebp
pusha
sahf
out
push
mov
fidivs
inc
cwtl
mov
mov
jo
pop
mov
rclb
aaa
push
pusha
pop
or
lods
test
inc
mov
inc
es
jae
sbb
loope
into
inc
je
cmp
mov
daa
xlat
out
mov
hlt
jmp
push
int3
loop
je
movsb
data16
std
mov
leave
repz
push
fcmovnbe
leave
cwtl
jmp
add
pop
sub
xchg
enter
mov
lods
jae
inc
or
add
out
jle
xchg
lcall
adc
arpl
lea
rclb
xchg
dec
cltd
xor
sub
push
push
jb
push
pop
pop
je
cltd
movsl
in
test
out
pop
xchg
orb
mov
cmc
pop
xchg
cld
and
loop
fcoml
mov
ja
lock
out
repnz
sbb
dec
sub
push
mov
pop
aad
out
mov
mov
adc
jbe
pop
sbb
sub
test
out
lret
mov
cmp
out
loope
imul
mov
out
inc
jno
jmp
out
movsb
add
xor
cmpsb
mov
push
mov
pop
adc
inc
scas
stos
push
jl
jne
push
xor
jae
lahf
add
shlb
mov
lods
in
jp
js
xchg
and
popa
out
std
push
pusha
insb
dec
cmp
pop
dec
out
aas
sub
scas
add
shr
out
sub
iret
data16
outsb
scas
xor
add
mov
outsl
mov
mov
mov
lcall
xchg
imul
std
adc
ret
push
shr
cmp
nop
fcomip
xchg
jecxz
lret
adc
mov
jns
loopne
dec
imul
loopne
mov
jge
push
xlat
mov
fstpl
push
scas
dec
loope
imul
lret
cmp
out
call
mov
pop
jns
mov
sbb
inc
divl
push
adc
stos
sar
jmp
cmp
jecxz
push
mov
mov
cs
aaa
negl
in
int
jb
and
stos
mov
adc
popa
pushf
inc
cmpsl
xchg
add
push
xor
test
repnz
adc
out
bound
lret
dec
out
arpl
sahf
sbb
dec
sbb
xor
cltd
or
pop
out
adc
sbb
mov
push
rcrb
scas
sbb
loope
insl
push
dec
push
jo
dec
repz
gs
cmp
test
dec
outsl
jo
sbb
xchg
push
int
clc
or
push
cmpb
and
les
testl
in
pop
lcall
jbe
sti
insb
adc
fidivs
push
jecxz
inc
push
cmp
rcr
pop
sahf
push
shlb
lret
or
out
sub
cmpsb
jg
xorl
sti
inc
or
inc
cmp
into
imul
and
inc
jo
add
cmp
frstor
xlat
xor
mov
push
inc
dec
push
out
lea
push
push
mov
cmp
sub
out
xor
and
testl
pop
jecxz
loopne
inc
push
pop
jl
in
or
call
xlat
imul
scas
fidivs
xor
hlt
in
popa
jmp
mov
iret
stos
cld
jb
cltd
xchg
insb
out
nop
pushf
adc
pop
push
add
mov
add
or
test
rclb
imull
cmpsb
mov
into
dec
push
iret
imul
out
cmp
pop
outsl
popf
jle
jo
sub
fnstcw
rcll
in
add
adc
fs
pop
movl
inc
cmp
test
or
xchg
xchg
pop
pop
mov
movsb
add
push
lahf
mov
clc
sbb
in
sbb
ret
sub
cli
icebp
push
ds
mov
std
or
xor
mov
mov
dec
adc
adc
divl
aad
lahf
ljmp
dec
mov
adc
adc
jno
jecxz
jae
xor
out
inc
insl
scas
imul
jg
jo
add
stos
ja
mov
icebp
cmp
out
ljmp
xor
cmp
jo
in
testb
scas
jecxz
movb
sub
jmp
cmp
sbb
cmp
jmp
pop
out
sbb
xchg
pop
outsb
sub
adc
push
cmp
sahf
ret
insl
or
jmp
jg
dec
je
not
sub
push
out
out
fcoms
icebp
loope
ds
xor
add
and
add
push
cli
shll
lret
call
cltd
add
adc
jns
loope
out
mov
sub
xchg
sbb
push
inc
dec
jo
dec
fucomp
jae
clc
mov
jne
movsb
jo
test
adc
inc
jl
adc
aas
xchg
adc
cmp
pop
in
or
push
cmp
cld
dec
stos
mov
popa
aaa
out
ljmp
fisubs
icebp
add
sahf
pop
sub
dec
push
iret
sbb
popw
cmpsb
cmp
out
cltd
and
cmp
out
pop
fwait
adc
or
mov
pop
stc
adc
cmpsb
in
ficomps
std
out
leave
sbb
mov
sub
add
movsb
mov
cmc
sbb
out
pushf
pop
in
pop
sub
orl
shll
loop
loop
pop
mov
add
test
icebp
repnz
inc
loopne
mov
adc
cmp
movsb
lds
out
imul
nop
stos
scas
out
out
pop
sub
cmc
out
fsubl
test
mov
daa
sbb
or
out
in
sbb
out
mov
rclb
add
testl
xor
adc
xlat
pop
mov
ds
mov
xor
inc
mov
movsl
jecxz
add
out
jae
cmp
jle
mov
lock
add
addr16
outsl
lds
mov
sahf
cli
pop
inc
test
cmp
mov
push
loope
cs
mov
pop
fldt
stos
hlt
add
cmp
bound
and
mov
mov
mov
js
test
jecxz
fldpi
xor
out
rcll
mov
jle
dec
mov
jge
out
pop
add
sahf
jg
mov
test
mov
inc
cmp
movsb
cmpsl
mov
outsl
sbb
xor
dec
cmp
loope
add
imul
mov
lret
dec
cld
sbb
movsl
mov
out
testb
mov
push
nop
fcoms
ret
inc
pop
stc
ljmp
das
test
xorl
out
fmuls
lods
jns
mov
mov
ljmp
cld
mov
mov
fldcw
out
adc
repnz
dec
mov
jno
push
xor
xlat
sub
and
sub
xchg
movsb
sub
jbe
mov
xchg
out
test
push
dec
cmp
cltd
dec
call
pop
add
in
jne
sbb
sti
out
push
adc
jne
mov
sahf
out
adc
das
out
pop
sub
sbb
fldenv
and
imul
xchg
out
jecxz
sbb
or
jns
hlt
inc
cmpsb
out
scas
jae
call
out
out
sbb
push
jbe
xor
clc
mov
mov
xchg
sbb
xchg
gs
adc
nop
call
andps
fidivl
ja
push
add
xchg
adc
push
adc
bound
popl
dec
jbe
stos
testl
push
or
in
sbb
aas
out
popa
sub
dec
jns
add
mov
mov
enter
xor
add
out
clc
mov
sub
cmc
out
or
movsb
cmp
fsubl
ss
inc
mov
addb
out
out
cmp
mov
mov
mov
pusha
jno
mov
lock
pop
xor
jmp
out
inc
push
mov
cmp
inc
jnp
mov
and
inc
lahf
popf
cwtl
dec
aas
out
cmp
popa
lods
out
lds
or
mov
jae
sahf
jmp
lea
out
clc
cmpsl
dec
push
scas
ljmp
fldcw
les
adc
nop
inc
cmc
imul
insb
mov
xor
sbb
cmp
adc
loope
arpl
std
and
xor
out
jmp
lret
xchg
daa
jg
rcl
movl
mov
out
adc
sub
inc
ja
or
xor
out
lcall
cld
out
pop
jp
mov
push
lds
bound
jbe
add
or
inc
out
lock
out
scas
fwait
loop
es
xor
inc
add
enter
push
ret
xor
scas
push
les
xchg
in
add
enter
cli
sahf
outsl
inc
pop
stc
xchg
out
pop
xchg
cwtl
push
sbb
test
sbb
inc
out
or
jb
pop
das
mov
dec
out
dec
pushf
jmp
xlat
xor
lret
out
and
imul
insb
jmp
cmpsl
vsqrtsd
aaa
fwait
jmp
test
xchg
lods
outsl
cmp
out
lret
pop
shlb
xchg
paddusb
in
or
sub
popf
push
or
fs
out
sbb
push
jns
mov
sub
inc
dec
fsts
add
xor
push
sahf
cs
sbb
push
lods
inc
mov
stos
shlb
imul
scas
jb
fs
cmp
bound
mov
push
mov
mov
out
out
in
int3
mov
das
mov
sub
push
cmp
mov
push
pop
cli
pushf
ljmp
adc
shr
pusha
icebp
cmp
push
jg
jmp
sbb
out
leave
ret
movsl
dec
insl
xor
iret
cmp
add
mov
add
clc
push
push
out
inc
pop
dec
out
popa
and
iret
xchg
out
adc
fwait
aad
out
cmpsb
ds
and
out
fmull
xor
mov
push
mov
xor
test
fs
ficompl
push
adc
rcl
es
push
sahf
nop
mov
jo
sub
stc
sbb
sbb
adc
cld
pusha
push
adc
outsb
inc
fsubrp
xchg
or
lods
push
and
out
cmp
insb
aad
call
mov
sbb
jmp
mov
inc
add
sub
pop
and
std
xchg
lock
fs
and
push
je
vorps
or
inc
dec
lods
jg
add
es
adc
cmp
cmp
inc
jge
mov
cmp
mov
and
fists
xor
out
call
xchg
sbb
popa
insb
inc
inc
mov
jmp
fbstp
mov
push
arpl
int
xlat
jp
push
out
jg
fcoms
xchg
dec
and
mov
dec
out
iret
sbb
cmp
lock
movsb
aam
sbb
xlat
out
shlb
push
popa
out
inc
inc
inc
lret
sbb
scas
mov
outsl
mov
sarb
add
mov
mov
lods
loopne
out
incl
mov
xchg
out
das
sub
dec
fsubrl
cmp
mov
pop
fistps
xchg
jmp
icebp
sub
dec
mov
pop
imul
mov
push
adc
lods
and
inc
or
add
loopne
inc
add
pop
and
adc
jo
jmp
inc
mov
mov
mov
cmp
lods
push
icebp
sbb
sbb
sub
cmp
jecxz
jno
in
jb
cmp
jo
jne
mov
push
jo
jecxz
pop
insl
in
jno
adc
cmp
imul
aam
loope
cmc
arpl
out
jno
sbb
cld
mov
out
sub
sahf
push
gs
add
out
pop
jecxz
arpl
adc
or
add
fsubr
push
shlb
or
test
loope
or
pop
lret
notl
and
ja
xchg
push
out
xchg
int3
or
sahf
xchg
movsb
pop
cs
adc
inc
cmpsl
testl
test
jae
mov
ficoml
mov
testl
mov
sub
in
adc
out
xchg
mov
mov
out
mov
mov
mov
daa
bound
out
mov
mov
jne
and
cmc
cmp
mov
jle
cmp
adc
push
loop
loopne
xor
rclb
sbb
aad
xor
xor
and
int3
push
push
jmp
adc
jae,pn
jl
out
enter
imul
bound
ljmp
lock
xchg
das
out
push
jle
jmp
out
in
sub
mov
xor
fsts
out
add
enter
mov
mov
add
adc
dec
addr16
xchg
in
mov
out
mov
jmp
adc
into
push
jo
and
pop
sbb
out
mov
or
mov
movb
int3
shlb
ljmp
mov
and
sub
jp
or
mul
push
ds
ret
fsubrs
xchg
out
dec
xlat
sbb
movsl
push
jns
inc
pop
out
inc
sbb
sub
nop
aam
call
pop
mov
lock
mov
mov
ss
div
dec
pusha
pop
mov
cli
out
pop
xchg
xchg
push
out
xchg
rorl
add
sub
outsb
out
jbe
mov
push
jp
out
jle
aam
or
push
sub
sbb
rorb
hlt
test
push
xor
out
out
lret
gs
dec
cltd
repz
push
mov
out
inc
call
mov
sub
mov
out
popa
dec
cmp
loopne
fldt
dec
sbb
rol
in
jo
xor
mov
popf
ret
arpl
divl
mov
outsl
mov
push
out
sbb
lock
push
adc
jmp
jmp
sti
test
icebp
aad
xor
mov
cmpsb
out
adc
push
xchg
shlb
repnz
sbb
leave
decl
cmp
and
out
out
fisubrl
call
int
imul
push
jb
push
fsubrs
inc
lds
mov
sub
xor
loopne
add
dec
out
stos
adc
mov
sub
outsb
fcoml
jp
push
lret
movsl
cmc
inc
jnp
cmp
sbbb
lock
or
pop
out
inc
and
jo
rorb
push
mov
adc
imul
loopne
xacquire
jnp
mov
in
lcall
outsl
push
xchg
xchg
test
lret
aaa
xor
je
fstl
sahf
sub
mov
cmp
jg
jecxz
lret
stc
out
dec
or
and
repnz
fs
adc
ds
out
lcall
push
add
rorl
jmp
cmp
jl
out
and
loopne
out
bound
jnp
sub
jns
jp
jbe
inc
push
dec
outsb
lret
sahf
out
rorb
adc
pop
out
pop
sub
cld
dec
repnz
sub
test
xor
inc
sahf
lret
cmp
in
ds
adc
jne
cmpsb
pop
or
push
testb
hlt
shrl
call
mov
pushf
loop
shlb
repnz
rclb
xor
inc
and
shll
jle
in
lcall
outsl
dec
nop
popa
mov
mov
cmp
imul
bound
xor
mov
xchg
cmp
inc
push
lahf
cmp
adc
xchg
fcompp
adc
out
fstp
sub
mov
push
mov
outsb
push
pop
icebp
jmp
inc
test
pop
repnz
stos
jmp
adc
fwait
xor
mov
orl
mov
std
out
sbb
ja
xor
push
jb
xchg
dec
inc
out
int3
xchg
add
std
idiv
shr
xchg
sub
adc
mov
dec
dec
xor
and
xchg
movb
test
push
call
repnz
xchg
adc
xchg
sbb
mov
add
es
pop
mov
test
lahf
cld
out
in
cmp
mov
pop
out
mov
xchg
cmpsb
or
fcoms
xchg
xchg
fisubrs
sub
out
sbb
mov
inc
out
data16
adc
out
hlt
in
and
mov
mov
out
icebp
and
dec
mov
fmuls
shll
iret
jae
jecxz
mov
loope
leave
out
add
xor
in
mov
lods
ret
mov
adc
push
xor
add
jecxz
out
pop
mov
andl
out
cltd
loope
inc
mov
cmpsb
enter
imul
sub
stos
xchg
xorb
mov
aam
test
popa
popf
out
adc
push
out
stc
sbb
adc
out
mov
inc
lea
pop
xchg
xor
dec
push
sbb
inc
jge
mov
mov
jo
pop
test
out
sbb
inc
std
xor
rcrb
cmp
pop
adc
push
mov
out
call
and
popa
daa
das
mov
fs
add
xchg
mov
sub
inc
sbb
pop
and
jo
sub
jmp
out
data16
cmc
pop
mov
out
cwtl
insb
sbb
out
out
adc
lock
jecxz
aaa
sub
fucom
push
jl
sub
pop
or
mov
lock
fwait
xor
push
mov
out
add
imul
iret
out
ja
mov
addr16
dec
push
dec
pop
cmp
jae
out
in
or
push
sbb
shlb
add
sbb
out
mov
pop
stos
adc
jb
or
lahf
rolb
out
jmp
mov
mov
mov
out
xchg
test
adc
popf
icebp
out
pop
scas
xlat
imul
sbb
js
jmp
jnp
es
pop
push
testb
out
pop
data16
icebp
fmuls
popa
xor
fwait
aad
pop
mov
mov
out
jp
rorl
sbb
inc
jo
xor
stos
pop
paddsw
adcb
inc
fwait
push
mov
mov
jb
out
push
or
adc
lcall
pushf
mov
mov
and
cmp
testb
mov
mov
sub
stos
test
out
and
mov
xor
add
fdivl
push
int3
dec
fistpll
scas
movsl
loopne
out
xor
mov
outsl
mov
lcall
mov
or
xor
push
xchg
testl
adc
enter
mov
cmp
adc
hlt
inc
aam
insb
out
xor
movsl
bound
ret
and
mov
xchg
das
fsubrp
push
sub
test
in
sub
out
inc
jo
scas
imul
loopne
dec
dec
aaa
xor
ficompl
out
insl
add
mov
mov
lret
orl
daa
nopl
adc
out
pop
daa
arpl
dec
mov
pop
rdmsr
dec
mov
jp
and
sarl
fs
pop
ret
sbb
bound
out
dec
cmp
jnp
in
popf
or
stos
clc
mov
push
mov
pop
das
lock
adc
arpl
adc
movsb
cld
outsl
cs
rorb
out
mov
in
mov
mov
xor
pop
push
add
jge
mov
dec
cmc
pop
stc
push
out
pop
sbb
jo
andb
jno
jns
cmp
out
mov
js
mov
popa
idivl
out
inc
clc
cwtl
pushf
or
lcall
and
icebp
pop
jmp
mov
push
and
xchg
fcompl
in
std
loopne
adc
sti
out
mov
and
jg
push
xor
xchg
xor
out
fisubrl
notb
ret
mull
lahf
out
push
adcl
jmp
stos
mov
sub
xor
out
std
and
jbe
xor
andl
mov
movsb
out
cmp
sub
pop
jecxz
dec
movsl
push
fcmovnb
xor
adc
push
sub
push
test
ss
and
ljmp
out
filds
jl
mov
jnp
push
pushf
jecxz
xor
sub
jo
mull
aaa
and
shlb
push
fdivr
stos
xor
popf
test
jle
push
push
adc
xchg
jae
xchg
cmp
adc
add
fbld
call
stc
xchg
out
add
or
add
mov
cmp
mov
pop
sub
mov
cld
cmp
and
ss
gs
adc
and
jo
bound
lds
movsb
inc
or
cmp
mov
add
inc
mov
scas
or
in
sbb
scas
psllq
out
and
aad
out
sub
frstpm(287
sahf
sub
sbb
roll
add
mov
aas
inc
outsl
and
xor
xchg
es
out
out
dec
aas
cmp
in
movsb
or
sub
iret
out
rolb
int3
bound
push
out
sbb
jecxz
xor
xor
ret
mov
sti
subb
insl
test
call
ss
int3
out
jg
or
pop
inc
sar
xchg
adc
and
add
dec
out
mov
fcomps
mov
jo
xor
sti
cmpl
call
out
mov
xchg
mov
xor
insl
arpl
icebp
xchg
cmp
pop
decb
ret
scas
sub
lods
sahf
outsl
xchg
cs
into
jge
jno
lret
add
out
es
or
lds
in
push
dec
xchg
add
popf
inc
xchg
sbb
sbb
jne
test
jo
cld
cmp
lock
mov
pop
imulb
jne
pop
rclb
inc
popa
imull
out
lea
dec
inc
in
jp
arpl
call
pusha
jg
loope
mov
insb
scas
out
ljmp
int3
push
cmp
fldt
out
add
sub
out
cmpsl
mov
das
push
bnd
mov
pusha
mov
or
in
and
jmp
inc
and
out
shll
es
adc
cmp
bound
dec
jmp
in
cmpl
out
rorb
sbb
aam
out
insl
popa
aad
outsb
inc
jle
cwtl
dec
ret
test
cmp
repnz
xlat
push
lea
loope
dec
sub
imul
jb
out
mov
or
es
mov
ret
in
out
pop
incl
push
fincstp
lods
nop
inc
xchg
scas
push
and
scas
xlat
lret
out
ret
rcrl
jg
or
push
xchg
sti
inc
shrl
inc
ss
dec
popf
jno
and
out
in
pop
jb
mov
js
enter
mov
dec
and
addl
mov
notl
je
dec
out
jne
inc
adc
sub
or
insb
mov
repz
mov
lcall
daa
jns
arpl
les
out
cmp
add
and
leave
xchg
out
sub
push
out
ja
mov
imul
xchg
dec
out
mov
call
les
push
rclb
sbb
jo
pusha
cmpsb
das
xchg
fimull
imull
imul
mov
jmp
out
loope
cs
int3
xchg
mov
mov
cwtl
shr
mov
cmp
xchg
lret
adc
or
popa
add
inc
adc
pop
sub
inc
je
leave
sbb
xor
fucomi
inc
lods
xlat
xor
add
xchg
cmp
mov
jge
test
and
or
add
movb
inc
pop
outsl
sahf
out
and
lods
cltd
push
dec
addl
out
das
sub
lods
mov
dec
jno
iret
shr
push
out
adc
xor
mov
imul
insb
xor
pop
or
add
testl
leave
jmp
fwait
xchg
je
insb
out
hlt
fsubrl
shr
sbb
movsb
fadds
mov
lcall
xchg
data16
mov
out
testl
rolb
jnp
out
movsb
jmp
stos
insl
jmp
test
xor
xlat
repnz
mov
out
mov
push
out
dec
xor
cld
dec
inc
pop
stc
imul
jo
xchg
stos
sub
lods
insl
outsl
mov
aad
xchg
cmc
mov
out
mov
loopne
out
insb
mov
cmp
out
push
repz
aas
out
and
insb
mov
es
call
mov
jbe
push
in
std
mov
dec
nop
add
push
daa
imul
int
mov
and
mov
fdivs
xchg
cmp
pop
xor
imul
sbb
or
cltd
adc
test
cmp
xchg
stos
les
mov
and
testl
mov
mov
out
mov
test
push
loope
repnz
pop
shrb
inc
popa
adc
lahf
cmp
mov
jl
xchg
fildl
cwtl
mov
cmc
imul
clc
jmp
adc
fucomip
pop
and
inc
arpl
lods
cmpl
mov
and
out
cmp
pushl
in
enter
xor
cli
shr
add
push
dec
frstor
aam
mov
xor
mov
negb
or
and
inc
je
ja
pop
mov
mov
out
sti
test
sbb
loop
arpl
iret
std
jae
or
push
cmp
inc
rcrb
inc
pop
les
inc
or
push
push
xchg
fsubrs
in
ret
sarb
roll
xor
clc
loope
mov
xor
ret
loope
cmp
cs
sbb
inc
inc
pop
mov
je
mov
mov
pusha
gs
loopne
ret
xchg
ret
jno
mov
xchg
test
push
sub
cmp
push
fwait
sub
call
cli
daa
push
dec
or
jmp
addl
jmp
mov
sub
pop
push
mov
and
ljmp
loopne
push
add
hlt
data16
fmuls
sarl
aaa
cmp
mov
push
or
andb
repnz
cltd
in
cwtl
dec
push
pop
hlt
jle
jno
push
bound
aaa
and
les
insb
inc
xor
push
add
roll
and
insb
xchg
jmp
xor
xor
nop
add
js
xor
stc
repnz
js
sbb
pushf
mov
insl
inc
js
push
test
or
sub
push
jne
mov
cld
sub
mov
and
mov
sub
and
iret
and
dec
inc
aas
jne
das
sarl
xor
into
dec
xor
mov
mov
add
rcr
mov
test
out
inc
insl
stos
repnz
dec
test
xchg
pop
or
adc
lock
dec
adc
inc
cli
add
and
push
xor
ret
lock
nop
jno
lcall
aas
insl
push
cli
pop
dec
repz
push
je
cwtl
pop
and
inc
and
xor
int3
dec
push
add
nop
sbb
repz
jo
cmp
mov
and
cmp
popfw
add
inc
sub
rorb
xor
push
js
cwtl
test
sbb
rolb
fs
jae
sub
fsubrs
push
fwait
in
nop
shl
ret
test
xor
idivb
clc
into
aad
adc
test
cmp
lods
sub
cmp
cmp
push
adc
xchg
jne
rcrl
or
outsb
mov
sub
or
pminub
push
push
cmp
leave
in
popf
cmp
iret
test
mov
in
fs
xchg
sbb
inc
iret
add
jo
cli
repnz
xchg
pop
roll
and
loope
jecxz
jne
adc
and
loope
jecxz
aad
cmpsb
inc
cmp
mov
loop
loope
jecxz
xlat
pop
pop
inc
out
fwait
pusha
mov
jecxz
stos
pop
dec
inc
popf
and
sbb
pop
loope
jecxz
or
inc
and
loop
loope
jecxz
scas
pop
pop
inc
xchg
and
pusha
add
inc
loope
jecxz
maskmovq
idivl
out
and
push
mov
mov
xchg
es
movsb
inc
testb
in
mov
loope
jle
orl
out
push
cmc
je
sar
sub
out
add
popf
sub
xchg
xlat
arpl
dec
int3
mov
push
pop
inc
pop
pusha
idiv
outsl
sbbb
xchg
ret
mov
outsl
aas
sbb
pop
leave
jno
enter
inc
cmp
out
mov
push
pusha
adc
or
pop
testl
imul
es
dec
cmpsl
add
pusha
pop
jmp
in
add
cmp
in
stos
pushf
insl
fcmovne
push
mov
jmp
nop
sub
fs
out
mov
icebp
into
push
jne
sahf
lret
enter
mov
sbb
jl
jmp
mov
xor
or
iret
pop
fists
ljmp
in
icebp
jne
loope
sbb
movsl
fs
pop
mov
cmp
mov
push
jno
les
dec
jne
out
sbb
jecxz
inc
shll
push
insb
ss
ljmp
adc
jecxz
xor
jge
popf
movswl
jnp
movsb
cmp
ret
xor
push
sub
daa
out
out
mov
pop
test
jo
push
ds
loope
mov
adc
shll
ljmp
aaa
xor
dec
repnz
xchg
out
pop
or
or
mov
xchg
sub
bound
scas
cmp
fnstenv
add
jecxz
dec
push
mov
mov
cmp
push
out
xor
js
jae
add
repz
repnz
xchg
xor
outsb
lods
cmp
pop
xor
push
test
cmp
popa
mov
cmc
iret
stos
out
cmp
je
inc
xor
enter
outsl
xchg
xor
pusha
out
jnp
mov
inc
out
mov
sub
inc
xor
cmpb
inc
xor
jo
and
jecxz
in
jmp
test
sub
out
sub
mul
mov
sbb
adc
xchg
push
cs
pushf
inc
mov
and
lods
jmp
mulb
cwtl
jo
mov
jbe
push
mov
adc
outsb
ret
xlat
jecxz
pusha
bound
inc
aaa
push
test
out
ret
mov
aam
out
ret
mov
outsl
jmp
push
and
divb
imull
shrl
test
test
ljmp
xor
xor
cli
loope
cmpb
xchg
pop
imul
icebp
pop
pop
xchg
pop
in
std
add
fstps
xchg
cs
dec
jecxz
sub
lock
loope
mov
mov
adc
fwait
jns
xchg
roll
and
outsb
inc
mov
jecxz
mov
add
pop
hlt
fwait
xor
aaa
ret
jmp
subl
stos
addr16
push
mov
push
mov
add
cwtl
hlt
je
sub
or
pop
add
les
inc
scas
adcb
xorb
and
jne
insb
out
out
pusha
arpl
iret
dec
push
movnti
aaa
push
pop
out
sub
ja
xchg
imul
in
sbb
or
das
inc
xor
mov
das
icebp
adc
pushf
sbb
jne
cmp
repnz
xchg
in
shlb
in
loope
in
or
loopne
jne
sub
dec
add
adcb
out
fcoms
mov
mov
add
mov
aaa
mov
inc
xor
mov
jmp
inc
pusha
fstpl
pop
cwtl
jae
in
and
icebp
cmc
xchg
test
mull
xor
daa
ret
jmp
call
xchg
insb
cmp
mov
shrb
movsb
imul
mov
test
xchg
xor
and
cmc
mov
negl
pop
sub
xor
fucomi
mov
call
out
int3
jge
fadds
push
out
out
cwtl
divl
fsub
aas
and
jmp
les
testl
jnp
xor
xchg
rcll
jo
xor
in
jmp
ret
cmp
and
aaa
lret
daa
notl
jge
stc
out
sub
sbb
push
ja
jnp
stos
mov
pop
cli
daa
and
and
add
movsb
test
push
jbe
out
dec
call
out
adc
hlt
cmp
jmp
jb
mov
push
inc
je
insl
dec
or
outsl
mov
in
test
and
dec
fidivrl
dec
mov
das
jmp
pop
mov
and
pop
add
shrl
push
add
add
jns
lahf
cmp
addr16
jge
shrb
arpl
aaa
sbb
dec
sub
out
cmp
cmc
push
popf
inc
push
jo
pop
mov
pop
add
adc
dec
pusha
cmc
mov
cld
out
outsl
mov
mov
ljmp
outsb
and
lods
out
push
sub
push
dec
div
pop
fcoml
fidivs
mov
or
ss
pop
int3
jne
arpl
inc
add
pop
jmp
cvtps2pi
push
out
mov
inc
jle
jmp
push
xchg
aam
mov
out
ret
inc
stos
lds
mov
xor
cld
sbb
cmp
mov
push
in
pop
nop
pop
bound
mov
xchg
lret
sub
lds
adc
imul
negl
mov
jecxz
stc
loope
and
scas
cmp
or
aaa
fucomip
inc
out
xrelease
adc
jmp
jecxz
mov
dec
add
lds
mov
xor
hlt
ljmp
rep
mul
movsb
call
cmp
cltd
in
inc
sub
push
dec
int3
jge
ret
out
xor
sub
loope
shr
jecxz
xorl
inc
dec
cmc
mov
inc
loope
insb
cli
scas
shrb
fadd
pop
andl
notb
leave
test
push
and
lods
repnz
dec
jbe
inc
cltd
jns
jecxz
enter
sub
sti
jbe
ret
jmp
mov
cmp
mov
lea
pop
mov
mov
xchg
xchg
es
rcrb
cmp
cs
or
xchg
mov
loope
pusha
mov
pop
ret
inc
jne
jo
ja
adc
sti
das
add
mov
push
loope
cmc
daa
and
je
lcall
loop
inc
es
push
pusha
orl
test
jmp
cmp
loope
sub
add
enter
jp
adcl
pusha
fistpll
shr
adc
cmp
jp
mov
xor
add
jmp
adc
arpl
mov
shlb
testl
jo
pop
in
insl
pop
jns
dec
call
out
fsubr
sbb
adc
repnz
or
call
addr16
cltd
mov
shl
push
adc
stos
popf
pusha
adc
das
clc
call
repnz
imul
xor
or
fisubs
mov
add
enter
cmpsl
xchg
inc
mov
push
es
jge
out
jbe
pop
or
jmp
out
loop
cmp
sub
sahf
or
ret
out
xchg
test
xchg
adc
inc
mov
mov
in
xlat
pop
subl
jo
popa
adcl
cli
sub
scas
push
adc
jno
cwtl
loopne
cmc
mov
cmpl
add
and
je
cmc
cmc
call
push
sbb
ret
dec
cwtl
or
add
xor
out
negl
adc
jmp
into
mov
xor
int
push
xor
call
sub
inc
jl
call
out
call
mov
inc
mov
jmp
pop
jae
xor
push
mov
xchg
pop
and
mov
out
mov
in
pop
jo
mov
lods
push
loopne
mov
sub
les
inc
push
cmc
push
in
sbbb
imul
dec
imull
jo
jmp
jne
jbe
fwait
cli
adcl
mov
add
xor
lods
mov
push
fldl
and
push
imul
adc
rcll
sbb
jmp
dec
out
pop
adc
sarb
xor
dec
out
or
dec
je
mov
push
out
pop
jle
xor
out
mov
push
fwait
xchg
popf
jb
ja
imul
loop
mov
adc
out
lret
iret
xor
adc
xor
inc
mov
mov
pusha
testl
jecxz
repnz
cwtl
das
mov
jae
xor
out
jmp
sahf
push
idivl
orl
add
outsb
push
and
pop
pusha
and
and
add
push
adcl
mov
repnz
pop
jns
jbe
repnz
sub
out
cmp
out
test
in
arpl
lods
xor
mov
xor
mov
xor
cmp
ljmp
mov
dec
clc
aaa
pop
or
xchg
jmp
sahf
jnp
pop
in
mov
add
sub
cli
push
jb
lcall
in
call
pop
pop
daa
sbb
shrb
icebp
clc
xchg
cmp
nop
adc
notb
and
push
enter
ljmp
jmp
into
jle
testl
adc
out
insb
jbe
shr
sub
outsl
ret
pop
in
arpl
hlt
push
test
jbe
sub
push
sub
cli
in
scas
cltd
jge
dec
subl
imul
jo
xor
mov
cmc
pop
hlt
loop
out
movsb
movsl
aaa
mov
jo
add
call
dec
lods
jo
adc
push
mov
sarb
mov
xchg
out
jmp
mov
and
dec
leave
in
jg
out
loope
push
imul
rorb
and
cltd
mov
inc
test
fimuls
fs
mov
xor
imul
push
jmp
bound
push
ja
push
jbe
sub
shrb
mov
dec
jb
in
loop
jmp
mov
call
pop
test
xor
mul
lret
push
mov
jo,pt
andl
adc
or
and
xchg
xchg
and
roll
sub
pop
dec
daa
jmp
and
test
push
out
jns
or
cmp
sbb
ror
out
gs
xlat
out
jle
notb
mov
shlb
xchg
push
sub
aad
ret
mov
test
push
inc
adc
stos
pop
scas
in
add
loop
jbe
add
data16
jmp
mov
cmc
push
out
inc
jmp
cltd
pusha
js
inc
adcl
loop
enter
push
xor
inc
cmp
hlt
js
loope
lret
icebp
fdivs
pop
mov
inc
popa
mov
and
scas
inc
out
push
mov
mov
loopne
pop
in
bound
popa
aas
jmp
cltd
push
hlt
add
pop
imul
sub
cmp
js
outsb
and
push
mov
out
jne
jge
ror
addb
in
jge
loope
loopne
sti
jne
stos
cld
insb
mov
pop
cmc
out
adc
sub
jno
adc
call
xchg
mov
xchg
sub
inc
fs
insb
xchg
add
mov
jns
in
inc
push
jae
daa
inc
mov
fwait
or
and
inc
adc
shll
mov
inc
mov
add
cmpsl
inc
out
es
add
rorl
mov
add
or
inc
xchg
mov
pop
int3
inc
sbb
cld
pusha
mov
lret
loope
lods
inc
mov
push
pop
pop
sahf
inc
mov
adc
inc
and
mov
cli
add
jmp
imul
push
inc
aas
or
ljmp
in
mov
out
lods
inc
loope
sar
mov
mov
jecxz
fcmove
and
repz
pop
out
lcall
mov
repnz
mov
jo
int3
in
andl
cmc
outsl
mov
mov
sub
insl
or
push
pop
jmp
mov
bound
add
out
pop
fs
out
xor
add
lods
mov
dec
xor
xchg
cmpl
mov
loope
pop
ret
lock
mov
mov
in
adc
cmp
rcr
pop
cld
pop
sbbb
mov
push
add
arpl
add
loope
jmp
imul
in
repnz
adc
mov
mov
ljmp
xchg
lods
jge
adc
mov
xor
outsb
mov
maskmovq
negl
add
outsb
shrl
mov
cwtl
mov
cmp
lret
stc
movsl
adc
pushf
int3
inc
cmp
dec
mov
dec
push
loop
shll
loope
xchg
ret
fistl
lret
cwtl
shlb
xlat
aas
xchg
les
hlt
add
hlt
scas
jge
push
adc
and
maskmovdqu
testl
jns
jecxz
pop
dec
xchg
and
test
sbb
add
xchg
and
out
loope
cmc
inc
mov
push
push
mov
sub
xor
outsl
imul
add
aas
xchg
dec
adc
fs
adc
mull
jne
in
testl
imul
sub
int3
adc
out
cmp
and
push
mov
mov
dec
js
out
add
jecxz
mov
pop
out
outsb
pop
pop
or
out
mov
push
add
std
push
push
imul
mov
repnz
xor
imul
pop
ret
rclb
jmp
cmc
in
add
push
jb
or
inc
loope
roll
std
cmc
jl
lods
xchg
pusha
mov
and
testb
inc
mov
inc
out
jo
outsb
loopne
mov
cwtl
test
dec
adc
pop
ljmp
cmp
hlt
imul
push
xchg
sub
pop
dec
leave
outsl
push
imul
xor
icebp
push
add
sub
out
aas
cli
jne
shll
inc
xchg
add
fstpt
stos
aam
notl
hlt
mov
stos
xor
scas
loop
int
rep
les
cmpl
sahf
xchg
shrb
dec
cmc
in
cmp
data16
enter
sub
push
je
push
ret
shlb
mov
jecxz
mov
jo
repnz
in
and
xor
adc
inc
in
adc
pop
jne
out
shll
sbbl
push
inc
jmp
jne
mov
das
push
out
insl
jmp
daa
xor
insb
out
ret
xchg
lret
enter
mov
out
insb
jmp
lret
ljmp
dec
inc
mov
not
push
add
pop
mov
stc
and
sarb
add
push
stos
call
cltd
cli
out
inc
push
mov
aad
fidivrs
dec
gs
xchg
out
dec
add
add
testb
ret
sub
div
xchg
push
je
sbb
hlt
push
das
pusha
icebp
div
outsb
push
outsl
and
xchg
or
lods
xor
pop
sub
pop
mull
jb
xor
adc
ss
aas
mov
std
pusha
xor
add
xchg
mov
in
inc
in
jmp
jmp
jl
movsl
out
test
xchg
in
mov
imul
adc
call
jle
xor
mov
out
loopne
jo
insl
enter
out
xchg
xorb
and
jb
pop
sbb
xchg
out
pop
xor
push
out
add
sub
idivl
psrld
out
ss
outsl
cmp
pop
mov
xchg
xlat
repnz
adc
jle
jl
xor
out
adc
pop
pop
cli
mov
shl
lret
loop
push
bnd
sub
addb
imul
je
push
add
bound
daa
inc
jmp
mov
sub
xor
out
ret
push
pop
mov
divl
sub
push
enter
pop
outsl
mov
repnz
in
push
rcr
outsb
testl
notl
ja
cmp
jno
and
mov
inc
xor
and
jecxz
xor
in
out
aam
push
pop
push
xchg
loopne
xor
sub
cmp
push
mull
out
jo
push
clc
inc
cmpxchg
jb
stos
xchg
pop
mov
pop
out
xor
inc
daa
add
pop
stc
xor
aaa
icebp
in
insb
testl
rclb
ja
push
pop
xchg
repnz
cmc
jo
test
pop
gs
dec
fsubrp
testl
es
fs
pusha
out
scas
push
and
out
inc
push
outsl
push
inc
out
mov
mov
xor
cli
setge
fdivp
xor
xchg
inc
repnz
out
push
leave
out
adc
mov
ja
scas
xor
imul
cli
cs
ljmp
fsubs
pop
xchg
aaa
mov
repnz
inc
inc
cmp
ja
push
out
rcll
es
cmpsl
in
and
sahf
cmc
pusha
rorb
dec
mov
jecxz
cmp
add
xchg
xchg
cmp
jmp
add
je
les
push
out
sbbl
sbb
sub
arpl
out
inc
xchg
mov
inc
ficompl
and
imull
cltd
fsubr
jl
sbb
out
test
push
arpl
out
fs
ss
push
and
movsb
iret
mov
out
push
nop
cmp
out
hlt
loope
int3
in
out
out
jecxz
and
xor
xchg
push
adc
inc
add
call
packssdw
mov
mov
es
mov
pushf
psrad
notb
cmp
sbb
dec
and
out
fsubrs
out
out
jmp
inc
sub
adcb
ficompl
pop
or
icebp
mov
dec
ljmp
loop
out
lock
rorl
out
xchg
mov
xchg
shr
sbb
lea
loope
jo
mov
add
jmp
add
xchg
jae
pop
xorl
mov
add
fisubs
mov
cmc
sub
jns
add
pop
jmp
ret
pop
shrl
addl
push
aad
aam
dec
stos
leave
jo
in
fstl
xchg
jecxz
mov
add
sarl
rcrb
mov
out
popf
xor
xchg
fidivs
shl
lds
jmp
pop
jecxz
aad
lods
adc
imul
out
cmc
dec
popf
mov
out
mov
ds
hlt
je
jns
pop
imul
xor
add
daa
arpl
pop
sub
xchg
movsb
out
push
cmp
icebp
jmp
lods
sbbl
insl
arpl
cmpsb
xchg
and
movsl
sbb
les
lds
imul
xorl
test
adc
add
out
mov
icebp
inc
add
hlt
pop
cwtl
add
movsb
jmp
push
push
push
cmc
inc
call
popf
mov
inc
js
xor
test
outsb
mov
jno
aaa
jl
loope
cld
mov
jo
push
call
lret
sub
repnz
push
jg
mov
pop
cmpsl
mov
and
test
in
in
inc
mov
outsl
xchg
out
sub
dec
xchg
and
dec
push
mov
add
mov
mov
jmp
cmp
out
orl
adc
push
jno
loope
test
outsl
sub
cltd
jmp
andb
jg
add
stos
push
and
push
add
out
jo
data16
scas
xor
xor
inc
in
add
pop
xor
cmc
orb
icebp
sbb
out
ret
push
or
jg
jnp
jecxz
sahf
push
out
mov
add
xor
and
mov
mov
xchg
shrb
dec
jo
or
inc
rep
xchg
mov
lods
mov
pop
cwtl
inc
cmpsb
cmc
push
movsl
test
or
xchg
shrl
sub
xor
cmc
jecxz
leave
imul
in
inc
out
sbb
ret
lret
out
or
mov
inc
adc
loopne
push
adc
sbbl
sbb
out
sub
pop
nop
xor
insb
or
mov
out
divl
jmp
out
jge
imul
bnd
jno
or
andb
int3
loop
divl
and
and
adc
push
imul
loopne
iret
out
mov
mov
shr
mov
add
jecxz
xor
out
push
xchg
je
ret
lock
sbb
call
loop
mov
out
jmp
mull
loope
insb
jecxz
mov
imul
je
mov
xor
popl
add
add
mov
or
loop
sti
xor
jmp
jae
fisubl
jecxz
clc
mov
jmp
shll
jno
or
imul
lods
xlat
in
mov
push
pop
pop
in
repnz
pusha
ja
xor
cmc
mov
adc
jne
sub
icebp
lods
xchg
and
cmp
mov
jmp
aaa
ljmp
icebp
jmp
fcoml
cvtps2pi
negl
out
push
dec
in
repz
inc
adc
pusha
sub
neg
jo
mov
xchg
jp
or
fbstp
mov
xor
xor
fildl
jb
add
call
xchg
xor
imul
inc
fwait
cmp
inc
divl
adc
loop
dec
xor
jae
cmc
pop
adc
jl
add
jo
ds
in
ljmp
out
ljmp
push
dec
addb
dec
or
hlt
inc
loope
and
mov
mov
xorl
in
push
fildl
pop
roll
cwtl
dec
xlat
out
cmpsb
call
cmp
push
and
inc
aam
je
jae
lods
call
out
aaa
xchg
cmc
cmp
daa
jecxz
nop
out
and
adc
mov
jb
outsb
lahf
xlat
push
mov
push
aas
or
pop
inc
mov
imul
cmc
fdivrl
push
js
add
cwtl
pop
push
inc
xor
cmp
adc
and
and
popa
xor
dec
imul
jne
cmpsb
jb
loope
adc
xchg
mov
lods
bound
pusha
sub
push
pop
mov
jmp
mov
inc
push
dec
je
int3
inc
jns
mov
pop
in
bound
cmpb
xchg
adc
dec
stos
dec
aas
popa
mov
jecxz
call
jns
mov
inc
pop
or
in
inc
mov
imul
call
or
cmc
lea
lock
add
dec
xchg
mov
xchg
pop
pop
jno
mov
adc
sub
shll
inc
mov
testl
icebp
jo
jl
aas
jnp
bound
adc
and
cltd
ss
scas
arpl
sbb
xor
ss
in
xchg
mov
mov
xor
sbb
ficoml
pop
shl
loope
hlt
and
cmpb
jge
addr16
pushf
test
in
scas
add
icebp
adcl
icebp
out
add
xlat
and
out
cmpsb
daa
ljmp
scas
scas
mov
adc
out
call
mov
mov
xor
scas
lahf
jecxz
jl
mov
fdivs
js
pop
inc
into
hlt
in
fisttps
daa
inc
dec
jmp
jo
outsl
enter
mov
adc
sub
lcall
pop
adc
call
cmp
repnz
popa
mov
mov
push
lds
loope
popa
pop
js
fnsave
roll
adc
testl
mov
or
loope
arpl
jmp
in
flds
push
and
mov
inc
xchg
add
xchg
movsb
inc
js
inc
cmc
cmp
jae
xor
imul
jecxz
and
fiadds
leave
jmp
out
in
shll
out
out
cwtl
pop
mov
fidivs
pop
add
cmc
ljmp
stos
ja
movsb
sbb
scas
fucom
cli
jecxz
and
push
rorb
mov
outsw
fnstcw
int
jo
shll
dec
xor
fnsave
ljmp
clc
pop
cli
loop
mov
jl
in
pop
loopne
stc
scas
push
cmp
mov
jmp
sbb
enter
scas
cmp
add
out
jo
arpl
adc
repz
movsl
outsb
pop
adc
idivb
mov
inc
call
dec
stc
rcrl
jmp
lahf
loope
leave
pop
xchg
adc
jmp
js
mov
add
jge
sbb
jg
mov
push
out
hlt
mov
pop
or
repz
jo
outsb
xchg
inc
push
scas
les
pop
and
xchg
and
inc
je
out
push
loop
stos
jo
insb
inc
cltd
loop
loope
jecxz
cwtl
pop
mov
pusha
mov
js
sbb
test
outsb
je
cmp
loope
jp
lods
cld
dec
and
ljmp
dec
inc
int
inc
ret
je
xchg
xchg
push
loope
in
jmp
out
pop
jbe
sarl
stc
push
in
sbb
jecxz
jp
stos
out
js
pop
sti
and
fcomip
out
xchg
inc
imul
jo
js
loop
mov
shl
dec
rcrl
xor
xor
mov
js
jns
out
jmp
xlat
repnz
out
push
jo
aaa
sbb
loope
mov
addb
cmpl
push
imul
mov
lods
jo
jecxz
daa
push
mov
cwtl
pop
loopne
push
xor
dec
xchg
roll
mov
add
sahf
inc
out
push
pop
mov
pop
ud0
out
xor
xor
imull
jmp
loop
out
stos
pusha
push
pop
add
xor
cmp
arpl
je
and
mov
mov
jecxz
sti
fwait
ret
out
jbe
jmp
xchg
out
dec
das
orl
mov
je
aam
dec
inc
decb
out
xchg
jp
xchg
mov
jmp
mov
lahf
xlat
push
mov
xchg
and
dec
pop
jecxz
loop
jo
out
mov
into
nop
int3
inc
cwtl
adc
cld
mov
push
add
jecxz
imul
jmp
add
adc
jo
or
inc
jg
add
mov
cmp
and
mov
out
ficoml
inc
inc
out
addr16
sub
or
push
out
xchg
out
jns
int
or
add
jo
shrl
out
adc
xchg
daa
out
addr16
jl
sub
mov
lods
insl
xchg
mov
cld
out
div
int
inc
pop
imul
daa
jg
punpcklbw
adc
fisubrl
jnp
push
jecxz
cs
push
fsubrs
out
pop
hlt
dec
adc
test
pop
mov
adc
clc
xor
stos
xchg
mov
pop
outsl
pop
in
out
sbbb
in
ljmp
xchg
xchg
mov
push
repnz
out
lock
dec
out
push
sahf
jcxz
cmpsl
fisubl
add
mov
aad
jo
sub
jmp
ja
xchg
addb
mov
inc
aas
rol
pop
shl
insb
xchg
outsb
inc
insl
pop
loope
push
jmp
popa
and
hlt
out
inc
or
cld
sub
adc
jmp
test
movsb
push
out
push
inc
fwait
aam
mov
sub
push
jo
mov
loope
in
cmp
loopne
and
repnz
mull
aas
xor
adc
sbbb
test
popf
xor
clc
cltd
push
jns
push
xchg
jo
popa
jmp
out
lret
arpl
xorl
xor
outsb
sub
jbe
dec
or
add
jp
test
inc
bound
adc
decl
jecxz
mov
xor
or
xchg
xchg
call
ret
push
and
loope
add
mov
shll
bnd
daa
mov
inc
testl
add
test
call
xchg
pop
divb
jmp
stos
sub
xchg
push
inc
cwtl
shlb
adc
mov
in
mov
movsb
outsl
aad
scas
mov
mov
fwait
mov
jbe
je
push
out
cmpb
gs
inc
imul
out
nop
out
pop
ficoml
mov
movsb
arpl
jae
pop
push
out
loop
and
in
int
xchg
mov
add
subl
aas
mov
loope
cmp
jo
add
dec
jecxz
mov
lret
test
xchg
test
xor
dec
inc
dec
inc
jbe
mov
lret
sbbb
jge
out
dec
mov
mov
pop
xchg
movsb
push
mov
stos
imul
sbb
gs
sub
icebp
pop
shlb
ret
mov
mov
xor
ret
scas
pop
out
rcl
mov
jmp
ret
out
push
add
mov
push
jmp
cmp
sti
xchg
fnstcw
call
arpl
jmp
or
bound
fwait
jo
push
repz
push
divb
aas
xchg
out
daa
mov
xor
pop
xor
shlb
pusha
dec
push
out
sub
or
inc
jne
cmp
hlt
lods
cmc
adc
xor
in
mov
in
imul
repnz
daa
rol
mov
lock
loope
push
pop
ds
shrb
sub
xchg
jp
and
imull
shrb
mov
push
and
shl
jmp
aas
dec
jecxz
pop
imul
pop
shr
cmc
fs
int
inc
mov
push
in
jp
loop
jmp
and
xor
das
pop
cwtl
jmp
je
fistpl
jo
in
ja
push
or
mov
mov
test
test
imull
call
out
and
xor
mov
inc
mov
push
sbb
mov
leave
jo
lods
push
out
jecxz
xor
mov
ljmp
mov
and
cmp
mov
ret
xor
cltd
push
cmp
mov
dec
push
xchg
and
sub
stc
test
pop
out
xchg
inc
push
mov
sub
cltd
jmp
and
cmp
imul
movl
sbb
mov
pop
push
mov
jmp
stc
loopne
inc
cmc
pusha
add
pop
das
shl
notl
pop
pop
popf
sub
push
in
hlt
mov
ret
mov
in
or
insb
push
out
inc
mov
jmp
adc
jnp
ljmp
xor
jno
cltd
shlb
inc
mov
fmuls
dec
jo
mov
adcb
out
or
cmp
in
dec
jge
ja
divl
into
data16
jno
adc
inc
pusha
mov
out
popf
in
scas
push
pop
scas
jecxz
adc
rdpmc
mov
mull
repnz
ljmp
adc
mov
cltd
inc
aam
js
fmull
and
jne
adc
add
mov
idivl
cmpsl
imul
lcall
xchg
mov
jmp
jle
gs
out
dec
xlat
push
push
add
sbb
and
dec
int3
out
negl
mov
jle
scas
cmc
push
adc
jo
idivb
mov
xchg
sub
negl
stos
ja
inc
mov
add
outsb
and
mov
push
sub
inc
sub
in
pop
stos
push
push
jb
loopne
inc
call
inc
pop
inc
out
mov
add
and
xor
outsb
adc
loopne
out
jecxz
inc
cmc
mov
push
out
lahf
pop
aaa
pusha
sub
addr16
nop
je
divb
ret
out
mov
hlt
pop
out
in
stos
stos
inc
outsl
push
mov
inc
xchg
mov
call
add
ret
wbinvd
lock
shr
adc
idivl
xor
inc
rorb
cs
jg
xor
subl
jo
out
out
sti
pop
xlat
xor
push
inc
push
dec
inc
sbb
out
jmp
dec
jg
or
testl
out
push
pop
sub
into
das
jnp
out
inc
lcall
adc
mov
jecxz
cmp
out
jp
cs
ljmp
out
out
lretw
enter
test
cmp
lods
js
filds
mov
insl
xchg
inc
pop
cmc
cmpsb
ja
jo
pop
call
mov
hlt
ret
push
lcall
popa
outsb
sahf
popf
out
xchg
insl
inc
dec
jae
xor
add
hlt
jo
cs
cmp
cmpsl
fs
pusha
push
mov
jecxz
jb
jno
hlt
repnz
fisubl
scas
pop
mov
pop
pushf
rorl
loope
pop
xor
jecxz
test
out
adc
dec
mov
mov
insb
cmp
icebp
jmp
mov
repnz
ret
faddl
hlt
cmp
xchg
push
mov
jo
push
xchg
xor
out
and
mov
mov
inc
xchg
outsl
std
sahf
mov
jecxz
and
imul
ja
adc
xchg
into
jmp
mov
imul
push
fs
hlt
pusha
cmp
sbb
movsl
out
ja
mov
imul
xor
rcll
mull
cmp
xor
push
out
mov
mov
testl
arpl
sub
int
add
cmp
mov
mov
xor
cwtl
sub
mov
mov
push
jo
or
push
add
hlt
add
xor
mov
sbb
scas
mov
outsb
mov
repz
int3
test
out
add
js
push
mov
mov
mov
pop
popa
in
and
testb
ret
xor
aad
jmp
pop
mov
cmp
idivl
jle
mov
xchg
dec
add
sarb
lock
xor
out
dec
jo
stc
inc
js
push
xor
dec
inc
les
push
adc
daa
gs
mov
inc
cli
push
cmc
cmpsl
cmp
jecxz
or
out
fstpt
xor
js
out
mov
jbe
xor
xchg
mov
es
out
push
xor
repz
add
inc
push
cmp
inc
mov
test
mov
add
popf
xchg
push
fsub
sbbl
lret
inc
pop
lcall
pop
rclb
add
dec
jns
not
mov
out
loopne
das
mov
ss
out
push
mov
jg
out
movsb
jge
mov
mov
mov
mov
sarb
jnp
out
cmpsl
nop
mov
test
mov
fcmovbe
jne
cmp
adc
jecxz
mov
xchg
lods
fcoml
add
mov
jmp
aad
pop
jae
add
xchg
pop
pop
test
jno
out
fs
xchg
call
pop
mov
mov
xor
and
xchg
out
pop
adc
out
cmp
jno
jo
popa
out
mul
js
in
sub
xor
jns
dec
jle
xor
out
mov
pusha
xchg
jge
push
imul
jo
fs
aaa
out
sub
push
mov
mov
or
inc
loopne
add
sbb
cmc
out
pop
je
xor
push
jecxz
xchg
sub
in
inc
dec
jmp
pop
and
cmp
ljmp
jne
push
xchg
xor
push
xlat
loop
mov
inc
jb
les
pop
hlt
inc
fwait
dec
outsl
add
inc
in
jmp
ljmp
inc
cmp
testl
mov
rclb
mov
movsl
in
out
test
js
cmp
out
daa
jmp
loopne
inc
movsl
neg
push
ljmp
and
cmp
cmc
xor
inc
cmp
cmp
test
xchg
ret
dec
and
inc
aas
out
mov
jne
adc
mov
icebp
es
data16
test
add
out
inc
in
insb
adc
mov
and
and
stos
jg
repnz
cmc
mov
out
loop
outsb
inc
mov
xor
shl
sbb
xchg
movsl
push
cltd
sbb
jae
mov
add
cmp
push
shll
dec
insl
or
dec
out
jecxz
test
mov
sahf
add
arpl
dec
jne
pcmpeqb
xchg
pop
jne
loop
fucompp
repnz
js
loope
cli
add
and
push
jbe,pn
xor
and
push
sbbb
mov
popf
mov
jb
jmp
je
add
lcall
rclb
cmp
inc
ljmp
and
xchg
dec
adc
scas
jo
arpl
mov
test
outsb
insb
xchg
fsubp
out
out
dec
cmp
je
test
cli
push
lock
gs
lahf
xchg
jp
dec
push
pop
sub
psubsb
and
rorb
loope
mov
int
pop
aam
push
lock
daa
in
inc
cmp
mov
fisttps
xor
and
mov
loop
leave
push
ret
xchg
out
cmp
imul
inc
push
xchg
scas
fptan
std
push
mov
and
scas
add
sub
mov
imul
and
leave
or
mov
mov
je
shr
dec
xchg
jl
addb
mov
and
push
mov
push
lret
lock
mov
dec
sbbl
arpl
jae
pop
lcall
outsl
out
pop
hlt
pop
xchg
or
xchg
in
das
loopne
out
add
sar
push
pop
out
push
loope
dec
loop
negb
add
adc
shll
out
mov
ljmp
test
ds
stos
fs
xor
repz
loopne
aas
shl
push
push
lahf
pcmpgtb
jae
cmp
loop
fwait
testl
in
and
xchg
mov
pushf
inc
mov
sbb
ret
mov
out
and
imul
pop
addr16
jae
out
push
cmpb
and
mull
nop
pop
mov
xchg
mov
pop
or
arpl
sbb
sbb
call
pop
sub
inc
arpl
push
testb
rcl
inc
inc
add
lret
cmp
xlat
jo
test
scas
into
fldl
fdivs
inc
jl
xor
idivl
in
fsubs
push
jb
fistpl
jg
jae
lret
mov
inc
xchg
insb
test
sub
or
aad
inc
fst
sbb
adc
repnz
enter
int3
xor
dec
ret
imul
xchg
xchg
push
push
fmul
popf
arpl
imul
jae
dec
jb
popf
xchg
xlat
shlb
fprem
jmp
int3
ljmp
pmaddwd
or
mov
inc
inc
jbe
jecxz
fsubrl
enter
fidivrl
imulb
jo
ret
shrl
mov
into
mov
test
push
cmp
fucomip
cmp
hlt
mov
dec
mov
jecxz
in
insl
ja
ljmp
cmpl
jne
popa
imull
ficompl
xor
add
dec
dec
jecxz
pop
mov
loope
hlt
icebp
xchg
loope
and
add
stc
pop
loop
aad
xchg
test
dec
or
testl
cmc
notb
push
mov
leave
hlt
ret
push
cltd
inc
out
outsl
fcmovb
icebp
cmp
mov
sbb
and
push
add
and
testl
xlat
or
ret
and
push
push
daa
pop
cmp
shlb
jmp
fucomi
rcrl
adc
mov
mov
push
ror
test
ret
jne
scas
and
lret
push
xor
movb
xchg
out
pop
cmp
cmp
cmp
stc
sub
icebp
cs
mov
jle
adc
add
xor
call
add
inc
pop
movsb
rclb
getsec
jecxz
mov
pusha
inc
loop
loope
jecxz
inc
pop
and
gs
ret
jecxz
push
pop
daa
inc
and
pusha
mul
ss
jecxz
cmc
pop
sub
and
mov
pop
and
ljmp
pop
pop
cmp
and
pusha
jmp
lods
aaa
jge
inc
mov
insb
inc
jecxz
out
dec
mov
mov
pop
jle
lock
and
loope
jnp
jo
out
jo
ja
cmp
jl
fidivl
sub
out
out
sub
rclb
loope
imul
ret
pop
dec
push
pusha
ret
push
xor
int3
or
cld
sub
mov
imul
mov
mov
dec
shr
dec
in
lods
stos
or
jge
sub
leave
maxps
sahf
and
sbb
jp
stc
xor
cmp
sti
out
mov
mull
xchg
and
shr
mov
jno
out
lods
mov
xchg
movsb
loopne
divl
sahf
jbe
sbb
sub
and
jb
add
mov
popa
int3
jae
or
outsl
pop
test
testl
and
aam
loopne
cmp
ja
out
subl
sub
mov
jecxz
push
jo
xchg
push
lret
push
into
in
dec
jo
test
mov
stc
push
out
xchg
sbbb
rclb
mov
mov
popf
sub
inc
pop
into
fcomps
sbb
xlat
pop
out
test
add
in
mov
push
stos
movsb
mov
sub
add
enter
ljmp
scas
and
lods
mov
mov
xchg
testl
jge
jg
jo
xchg
in
mov
loopne
data16
jecxz
xchg
in
xor
in
scas
pop
out
pop
das
fidivl
jmp
lret
push
shll
and
out
cs
std
adc
lods
out
or
cmp
mov
jle
cmpsb
addr16
out
pop
cwtl
and
ds
movsb
pop
inc
lock
popa
std
call
nop
xchg
je
mov
icebp
test
fnstcw
movsb
gs
out
push
cmpsl
adc
jg
out
push
and
dec
xchg
stos
outsl
jne
push
test
lock
push
icebp
inc
jmp
fidivl
dec
rolb
inc
les
pushf
push
testb
jo
inc
inc
dec
sub
shl
in
add
mov
sbb
and
or
out
testl
les
push
lret
hlt
insl
cmpsl
inc
outsb
xor
xor
inc
mov
add
imul
cmpsl
pop
inc
in
out
sub
pusha
stos
out
and
stc
scas
aas
push
sbb
stos
sub
testb
xchg
push
push
push
xchg
add
outsb
ja
arpl
ljmp
jmp
push
add
cmp
sbb
enter
sbb
test
les
out
bound
xchg
xor
mov
out
imul
pop
addl
out
pop
cwtl
lods
out
insb
jecxz
mov
mov
loope
xchg
lret
mov
or
xchg
notl
dec
retw
rorl
out
sbb
call
sub
cmc
out
fiaddl
pop
push
pop
mov
mov
add
movsb
test
in
in
sbb
jnp
dec
jle
adc
and
lcall
ljmp
jp
push
adc
fcoms
jbe,pn
out
xor
in
out
in
insb
psllq
mov
repz
jo
outsb
sub
imull
dec
jmp
ss
push
inc
jge
call
insb
cmpsl
xlat
rclb
mov
fcmovb
scas
add
in
inc
mov
sub
out
add
int3
push
pusha
push
mov
jne
or
mov
test
jecxz,pt
jo
aam
sbb
test
iret
inc
ficoml
mov
inc
loop
jge
shll
rol
stos
loope
inc
sub
mov
mov
pop
fucomip
push
je
js
sbb
out
sub
cmp
xchg
in
call
jbe
xor
xor
dec
xor
jecxz
push
jl
cmp
ret
out
bound
mul
aas
repz
scas
lock
sbb
scas
push
jmp
cmp
cmc
xorb
mov
jmp
out
and
incb
shr
push
jne
push
cs
add
add
xchg
xor
sbb
add
jge
sub
dec
pop
jne
loope
loope
push
adc
inc
push
jae
dec
pusha
arpl
outsb
inc
jo
sub
cmp
jecxz
cld
jmp
out
aas
xchg
jmp
xor
scas
cmpb
inc
movsb
mov
out
push
adc
cmc
out
cmp
mov
out
jo
pushf
stos
aas
pop
loope
out
int3
outsb
stc
adc
dec
mov
imul
mov
shr
inc
arpl
mov
dec
xchg
adc
leave
in
ds
and
pop
not
jbe
movsl
scas
dec
pop
xor
mov
jb
out
inc
andb
push
mov
dec
sbb
pushf
add
stos
in
or
or
xor
aam
das
push
subl
arpl
mov
jns
in
arpl
clc
jb
xor
cmp
pusha
out
in
pop
xchg
add
ljmp
jo
loopne
xor
pop
sti
xor
xchg
scas
ret
idivl
push
dec
fisubl
out
mov
inc
jb
cmp
cmp
ljmp
add
imul
shl
std
int
into
addb
mov
in
jg
ljmp
mov
aad
mov
out
dec
icebp
add
inc
adc
cmpsb
ret
insl
sbb
inc
jmp
push
out
xchg
jo
jmp
push
pop
sbb
mov
test
add
sbb
out
jb
xorb
call
inc
cmp
inc
loopne
sub
pop
pop
pop
sub
arpl
sub
out
leave
adc
jecxz
repnz
sti
ljmp
xorl
test
xchg
scas
adcb
pop
mov
out
hlt
loopne
ret
cmp
mov
push
in
xorb
xor
scas
fucom
inc
data16
ds
sub
sub
cli
leave
loope
xchg
mov
aad
jmp
sbb
inc
and
out
jl
mov
popa
out
and
scas
es
and
xchg
cmp
rolb
sbb
lock
ss
add
inc
inc
mov
outsl
pop
xor
jmp
lds
jp
div
or
xchg
push
sub
repnz
out
jmp
in
push
sub
loopne
xchg
clc
loope
cs
pop
shrl
je
iret
jne
lret
enter
inc
xor
into
jmp
jae
xchg
cmp
adc
sbb
jecxz
or
clc
div
aam
and
sbb
loop
or
dec
xor
in
and
adc
jmp
xchg
sub
fistl
jmp
sbb
idivl
pushf
out
fisttps
push
aad
stos
pop
cmp
xchg
rorb
cltd
xor
xor
jne
jo
hlt
dec
out
push
sub
mov
cltd
out
jmp
adc
pop
mov
xorb
bound
adc
xchg
dec
cld
mov
lods
aas
daa
lret
out
loopne
push
nop
and
dec
push
jo
test
cmpsl
pusha
jle
movsl
inc
mov
ljmp
inc
out
out
popf
and
out
xor
in
out
addl
or
add
jp
jae
xor
push
jo
call
jle
out
sbb
pop
idiv
pop
je
inc
cmp
push
mov
lcall
test
int
add
add
and
pop
pop
or
mov
push
stos
ret
insb
adc
out
in
cwtl
mov
popa
out
adc
cmp
pop
mov
sub
out
xchg
sub
and
adc
repnz
cld
add
imul
jne
out
push
mov
adc
xorl
aas
cld
not
or
add
imulb
in
or
xor
sub
jmp
js
jl
ja
pop
xor
int3
sbb
mov
mov
inc
push
mov
push
mov
ja
in
inc
ljmp
inc
push
xchg
pop
dec
lea
pop
imul
subb
and
jmp
insl
outsl
pop
jo
mov
sub
out
dec
cmpsl
iret
inc
mulb
jmp
movb
sbb
xchg
adc
dec
cmp
mov
pop
add
sub
aas
loop
adc
jp
xchg
jne
cmp
sbb
sub
dec
xlat
push
neg
xorb
out
jo
shlb
icebp
arpl
xchg
and
in
subb
das
jnp
xchg
mov
out
negl
hlt
and
sub
add
sti
mov
pop
add
dec
dec
pop
xor
lock
mov
out
dec
stos
mov
in
pop
loop
xor
jns
out
cwtl
mov
call
cmc
and
rcll
ror
hlt
pop
out
icebp
mov
test
lahf
xchg
enter
mov
fucomp
adc
cmpsl
rolb
mov
fisubl
mov
pop
stos
or
xchg
push
fsubr
dec
outsl
popa
dec
push
inc
jl
out
ret
sub
loop
add
push
pop
subps
jnp
jecxz
cli
pusha
mov
js
and
jae
xor
mov
sub
inc
mov
inc
mov
inc
push
data16
cli
add
mov
xchg
fneni(8087
push
lods
sub
push
push
pop
mov
mov
jnp
jl
scas
sbb
ret
xor
notl
out
imull
sbb
add
incb
outsl
push
sub
ja
jmp
test
jno
mov
popa
jmp
pop
mov
fstps
mov
out
loopne
jecxz
xchg
push
mov
outsb
enter
sub
out
pop
or
lcall
cmpsl
or
out
push
arpl
fs
inc
jne
jbe
icebp
add
mov
mov
push
mov
call
divl
jns
out
adc
pusha
push
adc
cmpsb
cmp
cmc
pop
loop
nop
jp
push
inc
jecxz
mov
push
popa
jge
mov
testl
cmp
push
push
in
mov
cmp
mov
mov
inc
jmp
movsb
and
jo
push
push
out
add
xor
loope
ljmp
adcb
hlt
mov
out
mov
inc
rolb
out
pop
rorl
mov
xor
xchg
xor
xchg
pop
mov
fisubs
dec
int3
add
loop
push
sbb
out
xlat
jo
aam
bound
inc
sub
insb
jo
pusha
out
jmp
inc
testb
jl
add
call
std
add
mov
test
repnz
push
data16
andb
and
out
fimuls
gs
inc
jbe
insb
sbb
and
dec
jno
push
push
ljmp
mov
out
and
dec
inc
adc
push
dec
loope
jmp
jecxz
clc
outsb
jae
sub
and
jbe
mov
push
subb
js
mov
inc
mov
fwait
addr16
arpl
in
or
rclb
ret
xchg
loope
sbb
mov
push
imul
sub
push
stos
jne
push
insb
shrb
test
mov
jae
mov
fsubr
lahf
pop
cwtl
push
mov
xor
sbb
xlat
inc
jecxz
mov
mov
add
out
mov
mov
imul
repz
sbb
dec
loop
push
in
scas
sbb
jne
cli
out
cmc
mov
insb
xchg
out
mov
mov
je
lret
pop
inc
and
xchg
jo
loop
std
mov
adc
cmp
out
mov
add
stc
ljmp
mov
xor
mov
in
arpl
loopne
testl
pusha
mov
sbb
scas
push
mov
dec
adc
daa
imul
cmc
push
push
xor
filds
loopne
xor
mov
mov
push
adc
cmp
jne
loope
icebp
in
push
hlt
cltd
divl
cmc
and
testb
inc
int
iret
add
push
aam
out
sub
push
test
repnz
jecxz
mov
adc
jl
adc
push
mov
test
in
setne
adc
cmp
in
out
in
ja
xchg
push
shlb
test
mov
dec
mov
jp
call
push
sub
and
xchg
and
cmp
jmp
imul
adc
adc
mov
push
pop
jns
outsl
inc
sub
inc
jnp
gs
cmp
idiv
lea
sbb
and
inc
arpl
xchg
and
stos
test
out
addr16
out
cmp
mov
add
divl
imul
stos
lcall
sub
stc
call
push
xor
stc
xor
xchg
fmull
and
push
push
pop
arpl
stos
cmc
sub
push
and
pusha
fldenv
popa
bound
push
sbb
cmp
xor
pop
ljmp
int
jmp
pop
fwait
in
shll
inc
psubsw
rcll
movsl
rclb
pop
and
pop
and
add
pop
or
dec
mov
pop
cmp
mov
adc
xlat
mov
fsubs
push
test
sbb
sub
push
add
stc
jbe
and
adc
and
addr16
or
inc
push
aam
test
adc
lret
dec
leave
ja
int
and
jecxz
xor
movsl
loopne
inc
out
adc
inc
xchg
out
sub
call
dec
jecxz
adc
push
adc
gs
ret
sub
addr16
push
loopne
rcrb
scas
je
cwtl
xor
loopne
hlt
idivl
push
popa
adc
repz
cmc
push
jns
push
jne
push
ja
lret
rorl
mov
and
jb
xor
inc
leave
out
add
gs
std
and
mov
and
shl
pxor
out
sub
sub
xlat
add
enter
xchg
dec
xor
sub
and
jo
add
pop
jecxz
pop
aad
push
mov
pusha
dec
sarl
lock
jne
int3
mov
das
notl
dec
mov
dec
adc
push
in
lods
cltd
loope
xchg
fidivs
movsb
pop
icebp
filds
int3
cmc
mov
repz
mov
rorl
cmc
jle
inc
mov
push
sub
jle
movsb
outsl
or
pop
sarl
pop
out
rcrl
push
aad
dec
add
gs
and
popa
adc
in
mov
xchg
mov
loope
cmp
imul
mov
pop
cmp
in
in
ljmp
mov
stc
pop
push
mov
mov
inc
adc
mov
adc
in
xor
cmpsb
filds
loopne
mov
mov
pushf
mov
pop
mov
xlat
dec
xlat
push
jbe
pop
mov
and
jne
add
jne
out
in
and
out
aam
imul
pop
iret
ret
mov
loop
test
jo
fwait
js
sbb
fucomi
mov
lods
jnp
xor
inc
inc
movl
cmp
cmp
rcll
cmp
push
dec
lods
dec
sub
imul
mov
dec
adc
ss
test
jae
dec
add
hlt
sbb
cmpsb
andl
insl
xor
adc
scas
pop
or
push
xor
in
ljmp
lret
loop
sub
sub
inc
andl
repnz
jecxz
mov
icebp
inc
and
loop
aad
inc
stos
adc
pop
and
in
sub
loope
jns
imul
and
pusha
or
dec
loope
jecxz
or
xchg
mov
inc
jecxz
dec
dec
sahf
sub
jmp
lahf
pusha
insb
loop
loope
inc
jg
scas
bound
mov
cmp
xor
inc
cld
and
orl
jb
hlt
int
or
fisubrs
xchg
dec
mull
jmp
ret
repnz
out
repz
mov
add
add
xchg
loope
push
mov
push
ret
and
mov
notb
ss
adcb
fnstcw
sub
and
xor
mov
leave
out
popf
divb
int3
fs
and
sbbl
not
add
add
inc
andb
sub
into
js
or
scas
push
and
mov
insl
imul
xchg
std
in
push
testb
and
push
jmp
out
inc
jae
mov
xor
shr
pop
or
and
jmp
cmpsb
repz
dec
and
je
mulb
aas
js
addb
sub
push
inc
repz
sub
xchg
mov
add
out
push
jb
push
out
cltd
mov
push
out
jmp
aas
sbb
and
sub
push
or
data16
sbb
sbb
out
push
popf
out
push
nop
jne
out
push
int3
aaa
pop
push
mov
mov
xor
out
inc
inc
mov
lret
xchg
sub
pop
inc
movsl
imulb
pop
inc
mov
repnz
adc
or
add
add
ljmp
in
mov
mov
xor
mov
pop
dec
jb
sub
ljmp
insl
fdivr
dec
testb
out
xor
or
mov
scas
jnp
cmp
sbb
movsb
popa
add
mov
add
inc
mov
mov
idiv
sbb
scas
js
daa
jo
ror
ljmp
cwtl
das
into
pop
addl
jne
loopne
dec
sub
adcb
fwait
mov
add
test
out
jecxz
or
jo
pop
arpl
loop
fidivl
movsl
imul
push
jo
push
addl
xchg
or
push
mov
inc
ret
ljmp
sub
add
dec
dec
les
adc
ja
js
popa
push
subb
daa
adc
insb
mov
sbb
mov
ja
dec
out
dec
je
dec
jmp
push
push
and
sarb
sub
in
push
out
mov
je
js
push
xor
jns
pop
cmc
push
mov
and
xor
pop
out
enter
dec
mov
xor
xchg
xor
add
dec
mov
jmp
and
dec
jne
leave
out
jbe
jecxz
aam
cmp
pop
outsl
jb
sbbl
mov
lods
xor
lahf
lods
pxor
out
shrl
out
add
and
daa
inc
fdivs
and
cmc
cmp
pop
pop
sub
out
sbb
mov
mov
imull
loopne
ffreep
push
out
push
dec
punpckldq
mov
jecxz
icebp
arpl
xchg
cmp
or
out
fsubrs
out
lds
mov
out
loop
pop
jo
fadd
xor
dec
dec
movsl
xor
jb
enter
test
mov
rolb
insb
lret
push
loope
mov
inc
loopne
je
idivb
loop
mov
inc
aam
xor
movsb
mov
push
popa
dec
pop
mov
sub
dec
mov
dec
mov
mov
lea
out
inc
xor
dec
push
shr
out
ret
daa
xchg
adc
mov
in
mov
xchg
test
ret
and
jmp
push
add
lret
mov
jo
sbb
push
jge
adc
je
cmc
divl
pop
jae
loopne
sub
call
fisubl
bnd
outsl
adc
js
xchg
sub
outsb
jne
das
rolb
pop
lret
ljmp
out
jmp
repnz
inc
jmp
lock
mov
div
loop
pop
add
in
sub
hlt
popa
inc
cmp
sub
cmovs
push
rcll
xchg
and
pop
out
inc
push
lods
push
or
outsl
aam
rcr
loopne
movsl
xchg
dec
push
or
mov
and
mov
insl
inc
adc
int
adc
rsqrtps
hlt
mov
jecxz
repnz
rclb
arpl
mov
out
pushf
mov
mov
fcomi
hlt
bnd
inc
cmp
stos
add
and
int3
mov
shr
repz
dec
cmp
xchg
aam
xchg
fldenv
sbb
sub
pusha
test
xor
or
loope
mov
sub
jmp
int3
mov
push
adcb
dec
test
and
out
les
add
dec
out
lret
jb
inc
adc
repnz
in
jmp
and
in
test
hlt
xor
sar
jbe
fwait
and
jmp
jle
div
test
and
mov
add
mov
pop
hlt
adc
pop
inc
lret
imul
shll
ror
pop
and
insl
bound
imul
divl
pop
rclb
loope
mov
hlt
cmp
jecxz
loop
adc
adc
push
out
out
push
adc
inc
dec
mov
popf
sbb
jecxz
dec
push
jo
inc
lahf
jne
out
push
mov
xchg
fsubrl
repnz
pusha
ds
negl
or
test
movsl
in
xor
mov
out
xchg
push
aas
cmpsl
xor
aas
adc
je
cmp
add
sub
stos
in
jbe
shl
imul
shr
xor
lods
idivl
stos
push
push
pop
cmc
jns
add
out
inc
xchg
loop
sbb
lahf
pop
out
imul
inc
leave
repnz
arpl
pusha
push
mov
jo
cmc
inc
out
sbb
loope
mov
jo
and
add
mov
xchg
push
xor
jo
jo
out
xor
add
inc
loop
sub
cmp
sub
lock
and
inc
and
add
ds
mov
test
fsubrs
je
out
or
jo
testb
lret
jo
sub
js
ljmp
mov
dec
cmp
aas
test
loope
stos
rclb
pop
xchg
xor
pop
add
or
or
repnz
stc
mov
in
dec
mov
xchg
cmpsl
inc
pop
xor
js
lds
fdivrl
add
inc
xor
sbb
xchg
out
jne
xor
call
lock
in
jo,pn
jo
shlb
xchg
rcrl
add
aam
push
shlb
out
jp
pusha
mov
loope
mov
jg
xchg
push
cmc
add
out
xchg
jmp
sub
or
testl
insl
adc
aad
pop
in
sub
xchg
cmc
pop
sub
jne
dec
icebp
xor
cld
sub
icebp
jne
ret
icebp
shl
cmp
fistl
out
jne
jmp
leave
xchg
arpl
test
adc
enter
xchg
jo
jmp
loopne
pop
and
jb
jmp
push
dec
mov
cmp
syscall
push
enter
add
or
call
pusha
out
les
ljmp
push
imul
inc
jbe
sub
push
mov
mov
mov
xchg
out
in
ljmp
sub
pop
out
dec
sbb
mov
jne
je
jp
cmp
mov
in
aas
loope
pop
out
push
call
pusha
jg
adc
negl
pop
and
inc
xor
mov
repnz
cmp
scas
out
sub
xchg
dec
inc
mov
cwtl
jo
jbe
mov
dec
sbb
push
mov
or
add
in
mov
mov
add
imul
mull
out
xchg
cmpsl
jmp
shl
in
inc
sbb
jecxz
test
inc
adc
out
xchg
cltd
xchg
insl
jae
outsb
push
dec
jb
in
out
lret
pop
loope
inc
pop
mov
sbbb
xchg
insb
xor
jae
mov
push
adcb
psrlw
daa
and
out
sbb
jmp
repz
arpl
int
out
mov
sahf
fadds
stos
mov
push
lret
cmc
jecxz
cmpl
jo
divb
xor
jne
jmp
mov
in
push
icebp
stos
je
out
push
push
mov
cmc
bound
xchg
sub
aam
repnz
lcall
add
gs
int
pop
imul
scas
movsb
xor
out
das
add
sub
dec
mov
add
sbb
jmp
mov
and
arpl
pop
pop
out
jns
and
out
int3
aam
mov
push
mov
mov
das
cmc
loope
out
arpl
xor
or
jnp
dec
sbb
scas
mov
xor
inc
in
lds
lods
pop
ja
test
add
imul
sub
in
aaa
insb
xor
out
xchg
jmp
xor
cld
or
cmp
ret
inc
jmp
fsubr
or
out
sbb
hlt
insb
mov
cmc
push
test
shlb
xchg
loopne
sbbb
sbb
and
and
or
js
testl
cmp
or
cmc
sbb
push
lock
and
add
jo
mov
pop
popa
cmpsl
cs
shl
dec
add
out
scas
inc
filds
int3
mov
xor
stc
and
add
sbb
inc
inc
gs
mov
js
mov
mov
test
insb
testl
icebp
in
jns
lahf
xor
mov
loopne
lods
out
and
mov
nop
xchg
shr
bound
cmp
out
add
loopne
enter
repz
add
icebp
mov
aas
out
cmpsb
inc
in
addr16
and
xor
popa
mov
or
int3
fstl
cmp
mov
adc
mov
out
shll
bnd
cmc
sub
xor
rcrb
outsb
pusha
out
pop
cltd
xor
data16
test
sub
mov
js
mov
jnp
push
inc
hlt
loopne
lcall
lds
imul
jmp
std
jg
icebp
divl
pop
adcl
insb
inc
out
call
in
mov
out
addb
and
call
div
inc
mov
scas
bnd
loope
out
int3
jae
push
gs
test
mov
adc
add
mull
xor
call
mov
imul
jnp
cmp
in
ljmp
cmpsl
push
in
and
roll
enter
aam
xorl
out
ret
lcall
inc
xchg
push
imul
jp
mov
sub
divb
cmp
in
out
les
mov
and
subb
jne
in
xchg
daa
insb
out
xor
jbe
cmpsb
mov
movsb
jmp
icebp
fwait
les
cltd
loopne
add
sub
push
outsl
mov
jns
lret
out
and
or
outsb
adc
movsb
xor
in
add
cmp
enter
xor
sbb
sub
out
das
xchg
mov
imul
mov
xorl
sbb
not
push
inc
in
imul
stos
out
pop
insb
and
dec
mov
pop
and
cltd
scas
sbb
jp
mov
pop
imul
insb
jbe
sbb
loop
ja
jbe
xor
cmp
add
addr16
in
call
jo
inc
and
icebp
notl
out
roll
inc
insl
xor
inc
inc
inc
pushf
pusha
jnp
cltd
mov
cmc
mov
xor
cli
inc
jmp
lock
mov
and
test
jge
seto
add
add
call
das
mov
movsl
loope
mov
add
stos
in
out
shlb
xchg
out
call
movsb
fildl
jae
pusha
rsqrtps
dec
bound
out
jecxz
jmp
pusha
push
dec
push
jbe
pop
jno
inc
sub
or
pop
mov
dec
shr
fnsave
mov
mov
push
push
mov
repnz
mul
and
xorl
out
inc
ljmp
call
or
inc
fldt
push
or
adc
add
xor
int
leave
fs
cmp
stos
ljmpw
sub
rcl
jnp
push
insl
mov
xor
mov
mov
imul
inc
jle
stc
jbe
repnz
cmp
or
or
sub
shl
mov
roll
das
fsubp
dec
dec
hlt
jmp
fnstcw
xorl
dec
rol
repz
mull
call
out
sbb
scas
insl
repz
pop
push
loope
xchg
add
clc
andb
cmp
hlt
inc
adc
les
out
xchg
test
daa
mov
js
fcomp
imul
xor
jmp
dec
es
ficoml
jno
inc
jo
jb
loop
and
pop
pusha
ljmp
popf
leave
insl
out
or
in
xchg
xor
imul
push
imul
out
fnstenv
hlt
and
push
cmp
fcmovbe
shlb
pushf
mov
aam
xorl
or
lret
jl
in
in
inc
push
adc
loop
jb
mov
aam
sub
cmc
aas
dec
jmp
fsubrl
and
pop
inc
jno
xchg
imul
mov
mov
inc
cs
mov
xchg
and
shlb
daa
and
cmp
and
dec
cmc
xor
xchg
mov
inc
int
andl
movsb
in
or
jle
int3
loopne
pop
mov
call
icebp
dec
lret
add
cmc
mov
in
ljmp
sti
repnz
fsubrl
shlb
loopne
ret
out
ja
ss
lods
jne
xchg
roll
pop
or
push
lret
repnz
testb
push
shrb
xchg
repz
daa
inc
scas
rcrl
paddsb
add
icebp
or
aaa
in
ret
or
sbb
shll
or
and
inc
aas
adc
fisttps
pop
add
sbb
sar
adc
xor
stos
cmpl
popa
inc
mov
jp
xor
test
or
inc
test
out
push
mov
insl
push
xlat
cmpsl
push
in
lea
rclb
dec
stos
sub
outsl
fucom
out
and
push
push
and
xchg
jne
jne
jne
mov
shlb
fwait
mov
mov
and
push
in
repnz
fwait
sbb
sbb
jnp
outsb
sahf
mov
and
sub
js
xchg
push
jae
imul
xchg
mov
mov
fldt
push
test
hlt
push
add
inc
push
push
movsl
adc
sbb
pop
push
outsb
hlt
pop
and
loope
push
movsl
or
ficoml
jl
lods
lds
repz
mov
jl
pop
aam
add
xor
fsubl
mov
rclb
mov
out
xchg
gs
call
xchg
mov
push
icebp
lods
mov
test
shlb
sbb
and
addb
add
pushl
out
adc
jmp
gs
jb
movsl
add
in
pop
enter
cmpsb
aad
fucomi
sti
outsb
insl
mov
pop
mov
push
push
cmp
daa
aaa
in
mov
jns
mov
add
dec
roll
je
or
lcall
jmp
xchg
ret
data16
jecxz
pushl
jmp
dec
repnz
mov
popa
mov
pusha
sbb
xorl
pop
mov
cmp
in
mov
and
and
adc
outsl
cmc
mov
stos
popa
xor
adc
sbb
loope
adc
sarl
inc
out
adc
mov
je
xchg
cmpsl
dec
stos
jb
aaa
lods
jne
dec
and
or
cmp
shll
cli
jl
adc
popa
xchg
sub
mov
mov
js
cmpsl
mov
outsl
dec
scas
inc
jmp
das
test
test
stos
imul
mov
inc
and
imulb
idivl
ds
icebp
cmp
dec
jo
in
pop
roll
and
inc
mov
addl
mov
xor
push
out
cmp
push
fmuls
mov
mov
insb
arpl
pushl
sbb
imul
test
xlat
loope
pusha
repnz
imul
jo
repz
je
stos
xchg
ljmp
cli
inc
push
pop
cmp
gs
push
clc
sbb
fs
movsb
in
test
repnz
leave
jle
sbb
pop
or
jl
pop
mov
dec
outsb
or
mov
fdivrs
divl
push
out
insb
pop
movsb
cmp
fistl
test
mov
push
out
pop
mov
js
in
xchg
xchg
jmp
movsb
out
repz
ret
xchg
jne
hlt
insb
loop
jb
xchg
mov
test
inc
fs
inc
adc
out
push
jle
shll
and
jb
test
xor
loop
cltd
sbb
jne
imul
div
fs
and
or
dec
jne
dec
lods
mov
in
neg
ljmp
dec
jb
xlat
popa
outsl
je
mov
lahf
mov
cmpsl
jmp
inc
hlt
mov
xor
je
mov
mov
pop
xor
mov
sub
pop
mov
pusha
pop
sbb
cmc
imul
xchg
les
dec
xor
or
loop
and
out
rclb
push
mov
inc
call
stos
lret
scas
inc
cmpsb
mov
sub
arpl
imulb
jne
inc
ret
gs
xchg
js
mov
pusha
jmp
and
stos
pop
hlt
popf
mulb
sub
popa
ja
arpl
sub
std
pop
testb
loope
insl
sbb
pop
js
pop
jl
mov
mov
jmp
push
pop
sti
arpl
sub
sub
aad
and
mov
dec
call
push
ja
insl
icebp
ret
mov
loope
xchg
adc
xor
shlb
jae
fisttps
fwait
jecxz
xchg
js
repnz
xlat
fidivrs
pusha
addr16
push
push
jecxz
imul
pop
inc
scas
ljmp
push
mov
hlt
repz
shll
lods
movsb
xchg
xchg
push
cmc
xor
repz
ret
xlat
jbe
mov
out
sti
mov
fcoms
lret
mov
cld
loope
int3
aam
por
loopne
xor
icebp
ja
fs
dec
fildl
pop
stos
data16
cmpsl
jmp
jae
negb
mov
ljmp
je
mov
sub
js
test
imul
jae
add
in
push
or
pop
btc
iret
fadd
das
notb
enter
sbb
xor
add
push
ljmp
repnz
jg
mov
aaa
clc
sbb
jp
out
cmp
and
lods
insl
sub
mov
xor
and
push
sub
not
jecxz
or
jmp
jecxz
sbbl
xchg
icebp
mov
push
cmc
pop
mov
push
and
out
daa
hlt
notl
mov
adc
dec
rol
daa
fwait
fwait
mull
and
mov
dec
jmp
mov
out
or
add
sti
stos
mov
scas
xchg
out
sub
ret
cltd
dec
daa
push
test
cmp
sub
mov
fadd
mov
stos
inc
imul
stos
mov
or
stos
jge
fmuls
cmpsb
and
and
xchg
gs
loope
pop
pop
cmc
outsl
pop
test
mov
out
rclb
lcall
scas
mov
in
cmc
or
out
lds
xor
pusha
out
shll
mov
sti
ret
out
add
mov
sub
fucomip
ja
and
hlt
ja
xchg
push
xor
sub
push
and
movsb
out
sub
ljmp
test
cvtpi2ps
testl
mov
ret
test
push
in
sub
stos
hlt
je
mov
push
mov
lock
test
jmp
cs
dec
xchg
push
jecxz
rcll
lods
push
in
adc
test
repz
inc
stos
push
inc
xor
loopne
xchg
xchg
xchg
and
shl
xor
and
dec
xchg
jmp
mov
insl
sub
pop
dec
pop
out
push
enter
flds
push
shlb
test
ret
sub
jecxz
mov
aaa
ja
and
jbe
sub
popf
push
cltd
add
cmpsb
ret
ret
iret
mov
les
call
sbb
add
ret
pusha
add
aad
movsb
xchg
xor
in
sub
lods
xchg
xchg
out
dec
test
pop
lods
or
ljmp
add
push
push
cmc
jb
jae
loope
push
jo
add
shl
in
inc
adc
and
add
pop
loopne
xchg
cmc
scas
cmpsb
xor
scas
cwtl
out
aaa
cmp
mov
pop
mov
push
xchg
out
ja
xorb
add
push
loopne
and
sub
les
sub
shlb
loop
repnz
mov
in
push
imulb
push
repnz
js
push
clc
mov
daa
loopne
popa
and
jae
adc
mov
gs
imul
icebp
dec
jbe
testb
jecxz
out
imul
sbb
dec
jge
cmc
and
out
movsb
xor
xchg
or
dec
jb
xchg
and
jbe
add
scas
jle
aaa
inc
shl
sub
hlt
add
inc
and
addr16
in
xor
clc
ret
shl
rorb
shl
in
rcll
mov
adcl
xchg
ret
mov
and
cltd
cld
div
cmp
nop
ljmp
sub
jmp
ret
test
rcrb
dec
stos
pop
scas
jecxz
aam
push
cltd
jmp
xor
inc
shr
xor
inc
jnp
call
aad
sub
mul
outsb
xchg
stc
les
pop
cs
loopne
test
loop
call
movsl
or
lahf
pusha
imul
shll
mov
stc
cmp
jmp
xchg
inc
icebp
push
adc
out
movsl
daa
test
xorb
mov
jbe
push
mov
jb
lods
cmp
cmp
pop
stos
cmpsb
loope
mov
push
in
divb
and
imul
insl
je
pop
rcl
adc
stos
arpl
push
jmp
jo
jae
xchg
outsb
add
ret
pop
loopne
les
xor
push
ret
mov
in
push
add
out
xor
repnz
push
in
xchg
inc
and
popa
movsl
das
rcl
and
jb
test
shlb
sub
js
mov
ret
sbbl
and
loop
dec
cs
inc
mov
cmp
xchg
shl
pop
mov
inc
ror
xchg
int3
clc
ret
add
jl
and
xchg
repnz
xor
pop
xor
inc
inc
mov
jl
pop
mov
inc
mov
mov
loop
xor
rcll
xchg
ljmp
add
inc
xor
mov
and
mov
hlt
and
gs
loope
jecxz
xchg
pop
inc
push
and
xchg
loop
loope
jecxz
mov
inc
clc
and
mov
mov
push
and
pusha
imul
loope
jecxz
push
lods
inc
cld
and
insl
loop
loope
jecxz
pop
into
inc
push
and
loop,pn
loope
jecxz
in
pop
xor
and
mov
adc
lock
and
inc
jno
fbld
andb
decl
jo
jno
nop
xor
iret
loopne
add
and
shlb
repnz
andl
ljmp
mov
lahf
jl
pop
shlb
push
out
jge
jno
addl
mov
mov
loopne
adc
leave
hlt
adc
out
rorb
outsb
lret
mov
xor
jmp
xlat
inc
pop
jns
xor
cmp
and
mov
jg
sbbb
sbb
negl
sar
mov
push
imull
adc
out
repz
shl
xor
xchg
sbb
bound
lret
rcl
arpl
insl
xor
jge
pop
push
pop
push
mov
shll
jo
jne
inc
ret
add
repz
cmp
loope
push
sub
adcl
jo
jge
out
je
ret
loop
loope
jecxz
and
rcr
loop
and
inc
xchg
sub
enter
push
adc
and
xorl
fistpll
mov
mov
out
outsl
xchg
bnd
mov
roll
add
push
push
popf
cmpsl
xchg
inc
sub
cmpsb
xor
in
xor
dec
dec
xchg
and
add
loop
inc
daa
and
movsl
loope
daa
or
pop
out
lcall
lods
jb
fwait
loop
dec
mov
add
loopne
mov
nop
mov
inc
ds
int
xchg
jo
fs
insb
stos
mov
xchg
popa
pusha
cld
mov
sarl
lock
js
lcall
xchg
pop
push
and
scas
std
dec
inc
xor
jg
in
sahf
mov
push
incb
add
jecxz
fsubs
dec
mov
cmp
cmp
aad
adc
xchg
repz
inc
rcl
and
inc
loope
mov
mov
mov
push
ja
inc
xchg
and
xchg
jecxz
inc
dec
adcl
and
lahf
or
cmp
mov
dec
cmpsb
cmc
inc
icebp
and
jge
adc
cmp
pop
mov
xchg
push
xor
test
adc
divb
lds
test
rolb
adcl
xchg
ret
xlat
push
jne
adc
inc
inc
bound
and
mov
mov
push
addr16
cmpsb
ret
ljmp
sub
sbb
sbb
pop
inc
fucomi
jmp
mov
rep
loopne
mov
incb
int3
fisubs
xchg
imul
popa
mov
mov
outsb
imul
addl
loope
mov
out
push
mov
das
rolb
popa
mov
fadds
adc
arpl
adc
int3
repnz
shr
inc
or
mov
adc
shlb
sarl
clc
fiaddl
pop
pop
mov
fcoms
jns
lcall
in
sarl
rol
test
jecxz
add
mov
ret
int3
mov
push
dec
ja
int3
fadds
daa
jnp
xchg
cmpsl
pop
push
push
loop
insl
in
fiadds
subl
mov
cmp
xchg
pusha
sbb
out
mov
cmpsb
pop
or
and
mov
xchg
jecxz
xor
cwtl
mov
inc
adc
and
les
insb
testl
add
jo
out
insb
stc
xchg
push
ret
imul
pop
je
daa
in
push
xchg
mov
inc
fs
mov
sub
push
fwait
and
pop
inc
fldl2e
dec
insb
int3
inc
pushf
repnz
push
insb
cli
dec
mov
pop
rolb
cmp
movb
xchg
addb
xchg
int3
xor
call
cmp
mov
int3
jl
das
and
sub
subb
pusha
stc
loop
adc
int3
xor
push
xchg
fwait
arpl
inc
sub
enter
jg
jne
mov
hlt
int3
shr
flds
lcall
sub
aaa
int3
xor
cli
xchg
jp
in
aam
fcmovne
sti
scas
inc
adc
loop
loop
push
shlb
ror
mov
int3
mov
push
dec
arpl
jnp
inc
push
int3
xchg
fs
xchg
aaa
es
xchg
pusha
roll
loop
xchg
test
add
mov
call
es
add
mov
shlb
inc
ljmp
pusha
fmuls
pop
inc
punpckhbw
mov
test
aas
icebp
pop
xchg
jo
dec
nop
shrl
aam
xchg
test
je
mov
testb
sub
mov
insb
fiaddl
inc
leave
and
jb
pop
or
mov
loop
dec
sahf
and
pusha
scas
inc
and
int3
dec
and
push
int3
xchg
loope
rcr
mov
int3
fldl
les
out
rcrl
into
mov
mov
mov
loopne
mov
push
rol
pusha
subl
movl
and
jg
orb
ds
int3
push
xchg
inc
push
adc
xor
lods
xlat
sahf
rcrl
cld
nop
jnp
add
sbb
flds
or
int3
nop
fdivl
flds
int3
fs
mov
ja
addl
push
add
shlb
xor
leave
ja
add
arpl
mov
in
push
adc
mov
xchg
icebp
stos
push
sbb
push
pop
and
loopne
mov
imul
cmpsl
pop
mov
hlt
lret
xlat
mov
movb
aaa
fwait
loop
insb
ja
sub
and
mov
fxch
movl
push
lea
mov
and
incb
int3
daa
push
xchg
nop
xchg
movsb
push
sbb
pop
outsb
fcoms
jg
decl
xchg
out
insl
ret
pushf
pop
lret
int3
scas
xor
push
mov
cmp
ljmp
sub
negl
and
pop
mov
outsl
mov
int3
cs
ds
xchg
mov
into
inc
xchg
pop
push
cmp
lcall
sbb
inc
inc
xchg
xchg
xor
rclb
test
push
inc
icebp
test
ja
roll
leave
decl
push
jmp
andl
xor
shlb
push
dec
add
mov
out
jne
ss
xor
xor
jb
fdivr
daa
sbb
sub
je
adc
mov
repz
nop
ja
fsubs
je
cli
out
imul
push
roll
es
mov
sahf
in
adc
mov
shr
mov
xchg
and
imul
cmc
cmpsl
or
xlat
cli
or
xchg
sarl
adc
int3
sub
mov
jb
dec
fwait
mov
xchg
sub
cltd
xor
adc
mov
dec
jo,pt
jecxz
into
pop
leave
xchg
xchg
fcoml
mov
mov
add
xchg
xchg
testl
add
call
loope
mov
push
je
adc
shll
push
cmpsl
fidivrl
xchg
insb
add
pop
out
pop
jns
pop
idivb
add
xor
out
cltd
mov
jp
test
iret
rcll
loope
bound
imul
xchg
xchg
push
jo
adc
cmp
stos
push
xchg
int3
inc
adc
sub
inc
cld
les
jo
cli
jp
inc
sbb
out
pop
ljmp
ljmp
stos
mov
jo
jmp
adc
daa
sub
ja
in
imul
andl
xor
cmpsb
arpl
movsl
xchg
ret
xchg
inc
push
xchg
sub
pusha
add
cwtl
loope
jecxz
mov
push
xchg
jp
insb
cld
loop
loope
out
in
sbb
inc
repz
loopne
outsb
int3
dec
xor
push
filds
fdivl
and
adc
in
idivb
rolb
in
negb
iret
sti
rolb
loope
sub
push
dec
xchg
sbb
push
mov
repnz
add
mov
cmp
xchg
dec
mov
xchg
pop
int3
test
inc
test
divb
xchg
jne
adc
adc
jl
loope
lahf
xchg
data16
idivb
or
je
imul
iret
movsl
fidivrl
ja
sti
loope
adc
pop
insb
outsl
gs
and
xchg
xchg
mov
xchg
inc
fwait
mov
mov
int
inc
push
xor
sub
adc
loop
push
cmc
adcl
roll
inc
and
insb
or
insl
cmp
cmp
xor
mov
mov
mov
out
xor
filds
cltd
ja
jno
dec
rolb
les
xchg
inc
mov
fstl
fildll
inc
in
test
inc
shll
imul
loope
daa
cmp
mov
sub
dec
das
popf
cli
xchg
pop
imulb
fcoms
imul
xchg
push
xor
xor
cmp
cli
rcrb
xchg
jo
and
push
mov
sub
outsb
popf
adc
int3
popfw
jbe
adc
or
mov
sarb
xchg
cmp
cmp
push
xchg
mov
test
xchg
xor
popf
loope
lret
daa
adc
fsubp
add
xchg
icebp
push
xchg
loope
push
push
dec
in
jns
pop
mov
xor
pop
int3
jp
sub
lahf
adc
pop
add
jecxz
cmpsl
xor
xchg
fimuls
jns
mov
push
push
in
inc
sbb
loop
adcl
test
inc
sti
dec
mov
loope
mov
sub
pushf
pop
fadd
xor
xor
add
mov
mov
shll
filds
xor
cmp
jge
xor
inc
ret
repz
imul
int3
pop
xchg
or
iret
sar
pop
fstpl
add
cmp
sub
mov
js
push
jge
movb
xchg
int3
test
and
repz
xor
int3
push
mov
scas
pop
lods
dec
out
iret
rep
pusha
mov
lret
in
sub
nop
jecxz
push
mov
mov
dec
push
iret
push
sub
inc
fiaddl
inc
int3
push
int
xchg
cmc
jae
add
xchg
cli
ljmp
cmp
in
pop
mov
xor
ja
sbb
adc
sub
rcrb
fists
push
pop
mov
int3
xor
int3
lock
nop
jmp
dec
xchg
jge
adc
cmp
mov
or
mov
out
xor
fucomi
sub
mov
jmp
repz
hlt
mov
mov
cmp
mov
xchg
scas
gs
arpl
inc
xchg
out
jl
out
cmc
add
xchg
mov
xbegin
add
ja
cmpsl
xor
out
inc
ljmp
fldl
mov
mov
daa
mov
xchg
stc
fcmovne
stc
inc
sub
sbb
mov
dec
jge
out
push
iret
in
in
dec
nop
dec
iret
inc
xor
or
lea
mov
pop
int3
mov
je
mov
out
addb
xchg
pop
xor
xchg
scas
inc
xchg
outsl
sar
scas
iret
shl
out
inc
rcll
out
ds
mov
and
scas
aas
inc
cmp
adc
pop
movsl
inc
jmp
test
insb
jbe
out
je
ficompl
aaa
sub
fs
and
notl
add
dec
shll
nop
jmp
lds
int3
xor
mov
or
push
jb
enter
andb
cltd
cmpsb
pop
inc
and
lock
mov
int3
xchg
dec
pop
xchg
call
sub
loop
out
mov
and
inc
hlt
mov
loop
adc
pop
push
movl
out
cmpsl
in
test
gs
aad
fildl
add
jl
das
cmp
xchg
fs
mov
pop
xor
mov
push
jb
js
add
cmpsl
and
inc
push
popf
addl
push
bound
outsb
iret
fisttps
test
loop
popf
mov
popf
cmp
movsl
out
stos
iret
cmc
mov
rcrb
stos
push
in
pop
xchg
mov
pusha
test
push
xchg
mov
cmp
xor
je
out
divl
xchg
jo
cmpsb
jecxz
xlat
mov
sbb
cmp
int3
sti
int3
lahf
int3
mov
fstpl
push
adc
push
adc
sub
add
and
inc
es
push
sbb
and
mov
mov
ds
bound
inc
cmp
out
ja
call
cmp
sub
loopw
fcomip
movsb
inc
fs
out
push
mov
push
sbb
in
in
jecxz
insl
out
out
ficomps
mov
mov
stc
pop
aaa
cmc
add
jne
inc
sbb
xchg
stos
icebp
pop
lods
dec
sti
icebp
sub
pop
pop
xchg
bound
int3
sbbl
jo
loope
loope
sarb
cmpl
push
cmp
xchg
insl
out
mov
sti
push
fistps
adc
or
xor
imul
push
int3
mov
out
leave
xchg
or
je
cmp
int3
mov
jp
add
adc
jmp
int3
or
inc
sti
loope
mov
add
mov
sub
mov
dec
je
sbb
cmp
fistpl
pop
sub
mov
nop
xchg
add
ja
inc
xchg
jo
inc
mov
loop
ret
adc
pusha
pop
mov
in
jo
sub
lahf
mov
adc
sub
sbbl
in
xor
pop
ss
call
testb
cmc
xor
xchg
add
push
add
pusha
jge
out
sbb
mov
mov
fbld
or
push
or
inc
clc
or
out
xchg
jp
iret
imul
insl
testb
out
xor
adc
and
int3
out
mov
out
iret
mov
sub
pop
xchg
push
iret
or
ret
sub
mov
jne
sub
pusha
mov
xor
bound
int3
bound
iret
mov
xlat
dec
mov
xchg
sub
gs
loope
xchg
dec
pushl
nop
scas
mov
adc
jae
cmp
sub
jo
or
icebp
fcmovne
sti
lea
pop
cmp
xchg
inc
ja
xchg
sub
sbb
pop
and
popa
scas
adc
dec
not
adc
setno
push
jle
mov
and
xor
aad
lcall
cmpsb
popa
push
out
imul
adc
cmpsb
and
int3
notl
out
movsb
mov
xor
out
xor
icebp
push
aaa
call
out
inc
in
jbe
sub
stc
ror
sub
and
dec
dec
testb
sub
jp
popf
add
out
pop
jae
xor
fists
mov
sub
nop
loop
mov
loopne
mov
imul
mov
and
sbb
adc
clc
inc
sub
xchg
xchg
loope
int3
push
aam
sti
bound
adc
int3
xor
xorb
out
jecxz
dec
clc
mov
jo
xor
cmp
fcmovnu
inc
rolb
pop
inc
pushf
mov
je
sahf
nop
xchg
das
fstpt
lods
das
jbe
or
jmp
lahf
imul
sbbb
jno
cmpsb
jne
xchg
ja
loope
push
prefetchnta
xor
fwait
jl
call
js
pusha
mov
adc
xor
fsubrp
xchg
loopew
cld
inc
sbb
and
dec
cmpsl
inc
out
mov
mov
out
sbb
daa
movsb
ret
pusha
adc
pop
mov
idivb
in
push
sub
sub
or
insb
lea
cmp
mov
dec
jb
cli
loop
ds
inc
loopne
out
add
mov
push
jge
out
scas
int3
xchg
push
xchg
or
sub
into
xchg
insl
push
xchg
xor
loopne
sub
jnp
xchg
sub
sub
xchg
ss
and
enter
outsl
test
ds
cmpsb
rcr
int
aaa
and
int3
daa
hlt
je
sub
incl
addr16
cmp
inc
add
pop
out
jl
fcmovnu
xor
mov
dec
ja
nop
ss
push
ret
pop
iret
cmc
mov
fimull
int3
push
xchg
jmp
rclb
loope
jecxz
xor
cmp
xor
cld
jae
in
test
sarl
ror
push
xchg
arpl
add
xlat
test
mov
xor
shrl
hlt
xchg
push
xor
jo
mov
mov
inc
add
out
addb
sub
out
dec
mov
lret
or
xchg
fiadds
sub
mulb
flds
outsb
xchg
jne
scas
in
imul
mov
ficomps
decl
pushf
xchg
xchg
mov
int3
xor
loop
add
sub
sbb
int
jle
push
popf
insl
cmp
je
out
movsl
xchg
int3
adc
add
iret
jp
popf
and
flds
inc
sbb
jb
mov
scas
int3
dec
xchg
xchg
sbb
pop
int3
into
cmp
fcomi
mov
divb
push
popf
sbb
aam
nop
int3
mov
push
repz
dec
push
cmp
in
or
shrb
pop
in
xchg
popa
push
and
adc
outsb
mov
sbb
sub
mov
loopne
data16
mov
add
inc
mov
sbb
aam
cld
pop
fildll
test
inc
aaa
cmpsl
sub
pop
repnz
jne
lret
js
fimuls
scas
out
sbb
push
push
dec
push
xchg
imul
sti
mov
das
int3
xor
cltd
sub
jne
lods
inc
ret
jo
push
nop
push
in
stc
popf
sti
push
repnz
push
mov
in
aaa
sub
subl
rcrl
xor
lods
stc
movb
popf
and
int3
divl
sti
xchg
lods
add
or
pop
cmpsl
sub
dec
fbld
lcall
dec
sub
cmp
aam
push
test
nop
push
mov
push
popa
cmp
mov
adcl
int3
test
push
mov
add
insb
and
jne
pop
ret
clc
movsb
addl
jo
mov
xchg
jmp
and
cmpl
shll
xor
pop
in
cmp
popf
xor
out
sub
fcomps
ret
mov
or
out
sub
lods
out
clc
mov
jle
inc
lock
push
faddl
aam
ja
sbb
jmp
rclb
sub
je
dec
scas
xchg
int3
loop
cmpsb
dec
sub
in
mov
dec
cmp
or
sbb
xchg
xchg
inc
push
and
adc
inc
popf
xchg
iret
movsb
fdivs
jne
mov
pop
mov
inc
popf
pop
negb
dec
repz
iret
xor
and
cmpsl
xor
xchg
jmp
cmp
je
dec
xchg
jmp
testb
insl
sahf
loop
popa
jnp
dec
adc
int3
xchg
xchg
or
fcmovne
fiadds
mov
push
notl
into
inc
shll
and
cmp
mov
hlt
sub
mov
addl
aad
xchg
test
icebp
movsl
pop
and
xchg
cmpsb
mov
jecxz
int3
out
popf
out
mov
movb
addb
and
dec
shll
int3
mov
out
inc
mov
and
test
xchg
les
add
out
xchg
cmp
jno
xchg
pop
push
xlat
sub
shlb
imul
fcmovne
fwait
call
jmp
sahf
xor
xchg
push
into
aaa
push
mov
inc
push
xchg
testb
out
movb
xor
hlt
jge
stc
ja
xchg
rolb
incl
movb
sub
xchg
cmp
inc
test
stc
xchg
and
fs
cmp
xchg
sahf
inc
nop
je
pop
leave
pusha
jo
push
xchg
clc
dec
jle
xor
push
xchg
push
jl
xchg
mov
xchg
xchg
mov
jecxz
pop
lcall
dec
pop
pusha
enter
push
ljmp
and
mov
jns
sub
out
repz
clc
movsl
sub
xchg
out
or
mov
inc
insl
out
xor
push
rcrb
orl
out
fcmovne
aaa
lahf
sbb
pushf
inc
or
bound
or
xchg
or
xor
dec
or
ja
xchg
int3
push
xlat
push
sub
stos
push
xchg
aad
out
dec
int3
jecxz
icebp
nop
lea
lds
shlb
xchg
je
mov
loopne
fs
cmp
stos
sub
int
int3
nop
mov
push
pop
inc
push
xor
or
push
fsubr
ja
clc
dec
flds
jp
sub
push
sbb
xor
mov
xchg
jae
xor
and
inc
inc
loop
add
aam
inc
mov
jmp
inc
push
inc
je
adc
push
xlat
sbb
popa
les
sub
dec
lcall
xor
and
and
scas
ret
shl
xchg
xchg
aad
adc
bound
mov
icebp
arpl
addl
shll
aad
mov
fistl
adc
and
setae
scas
adc
xor
jo
pusha
stos
loop
loope
jecxz
or
inc
jp
mov
loope
jecxz
jmp
aas
fprem1
jl
mov
and
sahf
rdpmc
jecxz
int
inc
jecxz
or
xor
jle
xor
rcr
stc
mov
gs
inc
mov
ljmp
and
repnz
xchg
outsb
addl
jo
scas
push
nop
fst
push
adc
dec
shrb
into
adc
fisttpl
subl
cmp
data16
repnz
push
scas
sub
inc
mov
cmp
out
jnp
sarb
shr
arpl
out
mov
push
mov
pop
inc
jmp
and
xor
imul
std
shrl
scas
mov
mov
in
divl
sahf
xchg
and
push
test
mulb
out
push
rcrl
ret
movsb
out
push
aaa
mov
jecxz
mov
inc
out
fidivs
jl
aaa
xor
xchg
fs
adc
sti
movsl
cmc
sbb
lret
les
mov
pop
loope
or
and
roll
arpl
lea
cmp
sub
adc
ret
pusha
push
cmp
neg
xor
inc
imul
jnp
ss
icebp
addr16
lds
inc
mov
add
xchg
imul
push
adc
sub
outsl
mov
adcl
adc
orb
inc
shrb
add
and
sti
pop
xorb
leave
push
pop
mov
rolb
xchg
mov
push
repz
xor
andl
xchg
xchg
inc
icebp
xor
mov
fneni(8087
fstl
cmp
xor
popa
rcl
inc
pusha
sub
icebp
push
loope
cld
dec
aas
sbb
popa
mov
pop
sub
mov
xchg
sbb
roll
mov
mov
movsl
xor
lods
jp
je
cmp
jo
in
xlat
loope
xor
popa
push
pushf
mull
addl
rclb
cmpsb
jecxz
nop
cld
xchg
scas
or
sub
add
mov
cmc
pop
pushf
jne
mov
call
les
and
sbbl
cmc
cmc
and
mov
repnz
out
mov
add
and
loope
mov
mov
jmp
fwait
sbb
in
testl
arpl
jo
mov
lods
mov
xchg
pusha
scas
pop
mov
repz
in
jne
or
push
sbb
push
ret
hlt
repnz
mov
add
xor
les
out
movsl
stos
xchg
mov
sbb
mov
fwait
arpl
loopne
jp
inc
test
jo
xchg
adc
movsl
repz
aad
add
ja
int
xor
add
push
pop
icebp
xchg
sub
xchg
ret
jo
rolb
test
sahf
imul
dec
pushf
pop
adc
movsl
jg
adc
lods
xlat
ja
lret
inc
dec
adc
push
cmp
xchg
daa
repz
sub
icebp
xchg
cmp
pop
arpl
adc
jb
push
test
daa
sub
xchg
and
mov
push
mov
xlat
enter
mov
leave
lahf
mov
ljmp
sbb
aad
jo
pop
push
push
cmpsb
movsl
shll
pushf
fnstenv
test
jl
mov
icebp
inc
insb
xchg
dec
ret
push
add
inc
sub
pushf
or
dec
das
inc
sub
adc
pop
mov
les
sub
lahf
jae
fildll
cli
and
dec
clc
ja
rcll
sbb
mov
xchg
icebp
dec
cltd
push
int
addl
ja
fcoml
daa
sub
xchg
push
mov
jae
test
adc
je
sbb
pop
aad
lds
aad
pop
xor
lret
pop
ja
icebp
fsub
pushaw
mov
rorl
or
push
into
hlt
mov
xchg
push
rorl
pop
sbb
popf
and
sbb
xor
mov
fadd
ja
jge
dec
cli
mov
xor
clc
dec
movsb
ja
jo
pop
and
ja
cmp
pop
ja
gs
and
icebp
or
pusha
fadds
sbb
inc
push
out
sbb
test
fwait
push
outsl
jmp
push
popf
lcall
test
nop
fld
xchg
leave
pop
push
pop
and
pushf
xor
out
fwait
xorb
fcom
jb
sub
sbb
roll
mov
pop
sub
ja
mov
fadds
and
push
insb
add
ss
ja
pop
xchg
and
push
push
in
dec
dec
mov
sub
ja
rorb
mov
dec
test
sub
fwait
jge
pop
pop
cmpsb
adc
mov
add
cltd
mov
mov
push
sub
ljmp
jbe
xor
std
inc
jo
ja
push
sbb
add
xor
shrb
popf
add
xchg
lods
mov
daa
push
lret
aaa
dec
xchg
mov
xchg
pop
fdivs
pop
lods
in
jns
or
fadd
les
jle
jp
outsl
sub
adc
jnp
add
popf
xor
mov
inc
jb
push
mov
fwait
jp
jmp
mov
jmp
xor
xor
xchg
mov
int
cmp
popf
inc
imul
std
mov
sub
jo
ja
add
mov
popa
jne
mov
add
lock
scas
roll
sbb
mov
mov
ret
jno
and
jl
lods
push
fistps
add
sub
fsts
andl
fs
repnz
adc
pop
fwait
ljmp
jo
jns
scas
test
es
int3
jae
xchg
ja
push
mov
mov
test
leave
daa
mov
dec
gs
xor
xchg
adcb
movsl
hlt
and
into
inc
mov
cmp
test
popa
jbe
sub
faddl
into
push
rol
add
cmp
lcall
cmpl
faddp
lea
icebp
cmp
cmp
sahf
adc
adc
in
pop
dec
xchg
rcrl
push
xorb
xchg
int3
push
iret
mov
lods
int3
cmp
outsb
add
inc
sub
cltd
xchg
jo
mov
daa
mov
sub
jbe
mov
hlt
out
push
repnz
lcall
ljmp
push
hlt
jnp
inc
inc
cmc
sub
xor
les
sbb
xlat
inc
fsubs
cmc
pop
movsl
divb
sbbb
pop
inc
jge
cmpsl
mov
mov
dec
xchg
popa
push
inc
enter
sahf
pop
stos
andb
js
dec
or
fnstenv
xchg
xorb
ja
inc
jmp
ja
fcmovne
roll
pop
ja
lds
sub
iret
and
cmpsl
xor
test
aas
int
imul
bound
ja
lds
mov
cmp
adc
repnz
scas
sub
mov
enter
xor
xchg
sub
xchg
sub
jo
fmuls
leave
icebp
jnp
mov
fisubs
xchg
cmp
inc
jle
dec
popa
pop
pop
popa
sbb
inc
sub
mov
ja
test
push
lods
lods
lods
lds
shl
popa
int
test
int3
pop
sbb
in
test
inc
fadd
push
das
sbb
pop
aas
cmpsl
les
xchg
or
dec
les
xor
fildl
ja,pt
jp
add
jp
sbb
add
fwait
inc
jge
dec
je
mov
ja
cld
and
dec
xor
fists
dec
cltd
inc
mov
movb
int3
ja
mov
or
dec
gs
ja
mov
cmp
es
pop
jge
mov
sub
movsb
push
pop
mov
xchg
cmc
fcoms
movsl
lea
ficomps
cmp
orl
xchg
data16
mov
xchg
push
push
xchg
lea
inc
xchg
test
test
aad
scas
not
les
in
fadds
pop
xchg
cmp
shrl
movsb
movsl
mov
cltd
xchg
and
mov
lods
mov
stos
inc
mov
f2xm1
test
mov
xor
ja
xchg
jge
pusha
sub
mov
scas
fsubs
xchg
ja
inc
and
andl
adc
popf
sbb
aad
fmul
sub
sbb
and
fnsetpm(287
cmp
sub
mov
inc
lcall
add
test
and
mov
pop
adc
jbe
sub
rol
pop
in
xor
mov
sbb
cmpsb
lock
cli
add
push
and
leave
jecxz
inc
icebp
ja
add
cmpsb
or
lahf
test
leave
xor
ret
dec
je
mov
jnp
jp
lcall
adc
sbb
je
ja
sub
adcl
mov
sbb
inc
sahf
mov
xlat
es
insl
xor
or
fcompl
lods
inc
mov
push
dec
in
mov
push
pop
jmp
lcall
sbb
fdivl
push
push
dec
int
cmp
dec
mov
cmp
out
out
push
dec
xchg
xor
ljmp
fimuls
movsl
fbstp
test
adc
xchg
xchg
aas
lcall
dec
fwait
dec
mov
lods
pusha
cmp
inc
xchg
es
fdivrl
sbb
ret
cmp
mov
xor
test
mov
insl
sbb
mov
jo
xor
xor
mov
repz
inc
rol
inc
loop
pop
mov
mov
jbe
sbb
xor
inc
mov
mov
clc
sub
push
nop
leave
pop
je
mov
mov
inc
pop
sbb
jo
pop
clc
movsl
in
outsb
leave
jo
jg
xchg
insb
mov
cltd
push
push
icebp
xor
pop
fdivl
popf
sarb
xchg
pop
pop
cmpsb
xor
jle
xor
adc
movsl
arpl
lods
jo
mov
xor
fsubl
and
jbe
mov
shl
mov
add
sub
xchg
cmp
adc
adc
sub
cmp
rolb
and
dec
dec
dec
clc
and
mov
adc
adc
jb
cmpsb
test
addr16
jns
xor
rol
in
dec
mov
shlb
xor
mov
pushf
into
adc
int
or
iret
sub
clc
repz
pop
mov
or
xor
and
xchg
hlt
add
hlt
rcrb
jae
in
popf
cwtl
xor
jns
inc
pop
pop
xchg
sbb
jmp
mov
inc
jns
inc
out
sub
cmp
mov
fwait
sbb
sub
outsb
sbb
push
mov
in
and
lahf
mov
mov
push
jno
icebp
shlb
ja
cli
arpl
push
push
xor
gs
or
dec
lock
and
cmpb
jmp
xchg
sbb
adc
cmp
xchg
adc
pop
jo
and
dec
sub
movsl
leave
out
icebp
aam
les
cmp
mov
test
pop
ss
add
xchg
xor
xlat
daa
les
mov
enter
or
or
ljmp
push
inc
cmpsb
out
leave
mov
iret
add
out
or
push
ja
inc
sahf
imul
sub
and
ss
int
add
sub
xlat
dec
rcrl
data16
pop
cmp
mov
sub
dec
icebp
lcall
mov
jno
adc
sbb
mov
insb
xor
push
sub
loop
btr
in
push
xor
in
push
popa
jne
mov
adcb
inc
clc
mov
pop
sarl
jo
jno
fsubrl
imul
add
sti
fcmove
pop
xchg
outsb
lea
mov
ss
pushf
bswap
rorb
in
mov
push
testb
icebp
sub
mov
dec
jbe
pop
xchg
push
cmp
adc
push
push
data16
mov
lcall
ja
sbb
mov
pop
mov
xor
test
push
jmp
outsb
xor
ret
rcrb
test
test
in
lds
lahf
add
mov
mov
and
mov
xchg
test
leave
push
jno
and
mov
ja
int3
or
sub
pop
lods
fadds
je
ja
mov
sbb
push
outsl
bound
rolb
iret
xchg
ja
repz
add
pop
lret
jne
mov
das
xchg
fwait
push
pop
xchg
adc
xor
mov
cld
mov
adc
pushf
cmpsb
push
push
test
clc
jno
fbld
mov
lahf
mov
ss
xor
mov
mov
fildl
adc
mov
int
add
pop
ja
icebp
xchg
out
repz
addr16
in
nop
ficoms
sub
adc
mov
out
ficoms
jg
les
pop
pop
mov
insl
call
push
and
movsl
ja
fnstenv
mov
jb
and
and
jo
pusha
test
push
add
dec
cmp
jbe
lret
adc
je
lock
outsb
rcl
pushf
push
aam
sub
enter
adc
inc
mov
jnp
clts
cmp
or
jp
adc
push
push
xor
mov
into
sti
lahf
mov
scas
fs
cltd
pusha
mov
out
mov
iret
dec
jns
add
test
cmp
mov
ret
mov
int
fistpll
lds
cmp
data16
or
push
mov
xchg
mov
mov
inc
cmp
je
ja
cli
jle
movsb
jl
rolb
pusha
push
sbb
lahf
lock
rol
cmpsl
xor
inc
ds
cmc
xor
jo
pop
mov
xor
mov
sbb
lods
jns
dec
mov
iret
dec
add
rolb
push
jno
xor
jg
push
pushf
cmp
out
cmpsl
xor
js
dec
adc
cmpsl
les
adc
cmpsb
pusha
add
jno
pushf
xchg
jp
push
dec
cld
mov
loop
sbb
sbb
fstpl
sbb
test
jb
sub
mov
out
push
xor
or
cld
movsl
cmc
pop
xor
in
adc
nop
xor
push
lret
adc
cmc
in
fsubrs
mov
lds
adc
fdivs
fsubrs
ja
add
ja
int3
jp
aas
push
fmull
push
fsubl
daa
sbb
addb
add
inc
xchg
xchg
ja
and
inc
jmp
cmc
popf
addr16
cmc
mov
pop
ja
mov
jbe
mov
inc
jnp
cltd
lods
inc
cmp
push
inc
mov
pop
shll
cmpsb
cmp
sbb
outsl
fcoms
dec
or
push
shlb
nop
ss
sub
xor
cld
outsb
jmp
test
roll
lahf
mov
fwait
ja
add
inc
jb
sub
test
inc
mov
movsl
xchg
test
lahf
lods
lcall
pop
stos
cmpsl
repz
inc
pop
test
icebp
xchg
int
test
mov
icebp
cli
test
push
ja
sbb
add
fcom
nop
lahf
call
in
or
adc
stc
ja
pop
sbb
adc
jecxz
call
test
xchg
push
nop
mov
in
sti
inc
pop
xchg
lret
xor
xchg
fs
mov
out
ja
in
mov
jmp
in
mov
popa
outsb
lods
shl
das
testl
clc
fdivp
test
call
xchg
icebp
movsl
popf
pop
out
sahf
sarb
addr16
out
aam
lahf
push
mov
ror
ja
int3
lahf
cwtl
lods
aad
adc
xor
mov
mov
dec
cltd
ja
ret
push
aad
in
adc
and
push
cmp
dec
fsubs
sub
test
xchg
mov
pop
stos
inc
mov
ret
or
fildl
xchg
adc
adc
ljmp
rcll
test
wbinvd
xchg
ja
mov
cmovae
adc
je
sti
xchg
xchg
push
jg
aaa
sbbl
push
fcompl
xor
lcall
cld
mov
or
jg
or
into
xchg
push
mov
sbb
jg
shlb
fmull
cld
push
mov
call
cwtl
adc
lcall
xchg
sub
iret
xchg
add
pop
ja
xchg
mov
movsl
mov
sbb
mov
sbb
jecxz
fstpt
xchg
adc
out
in
mov
lds
mov
mov
into
scas
and
ja
sbb
outsb
adc
addl
jmp
mov
int
inc
nop
and
gs
jle
addr16
xlat
push
ja
mov
add
adc
mov
sub
cli
ja
cmpl
xlat
push
lds
out
out
aad
inc
iret
xchg
sub
xor
in
lods
in
ja
mov
xor
dec
push
rolb
mov
jmp
pop
mov
sbb
inc
and
or
inc
cmpsl
incl
loope
psubusb
xchg
jno
sub
ja
out
subb
out
mov
lret
xor
mov
pop
xor
mov
int
jns
addr16
inc
xchg
test
lcall
cmp
cmpsl
mov
jo
adc
xchg
dec
ds
push
leave
ja
jno
mov
add
xlat
cmc
pushf
inc
mov
lods
in
mov
xor
sbb
mov
enter
fsubs
adc
mov
movsl
and
dec
cmpsl
lret
sbb
test
and
inc
dec
push
push
sub
jno
leave
test
aas
fadd
lods
add
lcall
sbb
xchg
lods
shrl
push
push
xor
in
test
xor
jnp
sub
mov
sti
xor
lcall
shlb
inc
mov
xchg
adc
sbb
int
mov
inc
lds
pop
adc
dec
into
push
push
lret
xchg
aas
inc
cmp
cltd
pusha
xchg
leave
or
lret
mov
dec
cli
fcomps
mov
and
sub
adc
in
dec
xor
dec
cld
push
int
js
push
sbb
repnz
fstpl
add
ds
into
cmp
sbb
cmpsb
dec
mov
es
aad
add
ja
lcall
int3
popa
jae
jp
xor
addr16
dec
push
pop
movsl
mov
mov
jmp
add
lret
sti
test
cmpsl
lret
inc
mov
mov
or
fwait
fs
dec
ror
dec
into
pusha
cld
push
xor
cmpsb
mulb
mov
cmp
vshufps
push
in
pusha
iret
dec
xchg
or
dec
cmp
jg
sub
lods
lahf
mov
push
cmpsl
or
pop
in
loope
cmpsb
daa
xor
push
mov
cmpsl
or
adc
jmp
xor
or
cld
jo
rcl
addr16
scas
sti
xchg
es
adc
sti
cli
cmp
popf
sbb
jg
xor
jge
xchg
xlat
xchg
aad
in
and
xor
push
pop
xor
test
dec
or
icebp
xchg
sbb
dec
lcall
movsw
ja
xlat
xlat
dec
cld
movsl
jmp
call
scas
xor
cltd
jno
pop
inc
je
ss
or
pop
or
lcall
stc
sub
mov
aad
xor
pop
bound
sub
lahf
cmpsb
fsubs
fcoms
and
addr16
pushf
fs
pop
mov
mov
outsb
shll
jl
mov
jge
sub
lcall
cltd
addl
sub
mov
je
adc
cld
jae
pop
test
mov
lds
inc
jmp
dec
int
push
mov
mov
lods
xchg
cmpsb
cmp
dec
cld
or
nop
cltd
sub
push
clc
fsubrp
aam
jmp
decl
je
fcmovnbe
cmp
mov
push
sbb
decl
ret
jmp
pop
ja
xchg
pop
and
xor
sub
mov
push
xchg
aam
jmp
fsts
popf
or
ljmp
mov
mov
jae
sub
leave
ja
addr16
sti
movsl
and
imul
shlb
lods
dec
cld
ret
jmp
xor
dec
cld
ret
mov
lock
mov
nop
into
data16
dec
mov
mov
int3
sahf
push
xor
sti
xor
addr16
inc
addr16
mov
sbb
push
out
jle
jl
mov
push
insb
je
jle
movsl
push
and
mov
push
ja
lahf
adc
dec
pop
popf
mov
cmc
mov
cmp
ja
cmpsl
push
dec
mov
imul
sub
lods
in
add
mov
inc
stc
shlb
jmp
mov
mov
xchg
mov
push
push
pop
push
push
mov
mov
pusha
jns
push
xchg
cmp
sbb
outsb
pop
fdivrl
mov
xchg
jmp
or
xchg
adc
sahf
cmpsb
adc
mov
sub
sbb
out
pop
dec
dec
add
adc
into
add
jecxz
scas
or
out
dec
fnstsw
test
rclb
and
outsb
mov
jmp
push
sub
xchg
mov
dec
cmpsl
mov
fstpl
aam
inc
dec
jp
dec
cld
les
out
scas
pop
test
cld
cmp
int
push
ja
sbb
notl
adc
bound
cltd
mov
mov
dec
movsb
test
popa
add
sbb
rorb
or
lods
leave
addl
fsubrl
xor
adc
cld
sub
sub
mov
popf
fnstcw
jno
sub
pusha
rol
inc
or
mov
push
inc
or
pop
lret
sbb
movsl
mov
std
and
sub
out
int
fwait
cwtl
lahf
inc
jbe
add
add
pop
rorl
insb
cmp
es
push
mov
xor
xchg
push
adc
fdivl
fsubs
jp
dec
push
adc
into
daa
dec
rcr
xchg
cmpsw
or
xchg
dec
dec
pop
push
xchg
dec
adc
ret
mov
add
pusha
ja
sahf
mov
lcallw
pop
sub
ja
shll
lret
mov
ja
sti
fwait
xchg
add
stos
inc
jnp
aad
cmpsl
int
ja
xor
push
daa
and
iret
dec
clc
push
and
mov
movsl
dec
lods
push
aad
mov
notl
je
in
mov
jo
shll
cmp
in
mov
pop
lds
bound
xor
loop
push
lods
xchg
xlat
fadds
mov
push
repz
sub
push
sahf
jo
adcb
sbb
je
mov
adc
jnp
idivl
andl
mov
dec
jg
in
out
jg
pusha
lcall
pushf
je
aas
sub
push
negb
andb
icebp
add
inc
sub
scas
pop
push
mov
movsl
shll
jp
and
clc
jns
sub
aam
push
out
sub
fldl2t
shrb
negl
sbb
cmp
int
pushf
mov
movsl
lret
das
jbe
test
gs
pop
jmp
or
mov
ja
mov
leave
xor
aam
aaa
iret
ja
xchg
hlt
jp
test
test
test
frstor
mov
in
pop
cmpsl
jae
xchg
in
je
pushf
sub
test
pop
icebp
mov
sahf
xchg
and
or
mov
movsl
test
movsl
sub
fcmovnbe
jecxz
ljmp
inc
int
test
lahf
push
cli
mov
outsb
hlt
cmpsl
lcall
repz
sti
push
xor
sbb
lds
out
mov
adc
mov
push
cmp
cmp
lcall
adc
ret
filds
daa
pop
sahf
daa
xchg
dec
lret
adc
xchg
xor
pop
mov
cltd
sbb
mov
mov
mov
lea
cli
pop
push
je
ja
jnp
adc
cmc
xchg
ja
lds
or
inc
fs
and
dec
sbb
ss
ja
lds
stc
add
lods
xchg
into
in
dec
sahf
popf
loope
mov
push
inc
sbb
sub
xchg
sub
cli
add
jb
lret
add
lcall
outsb
lods
pusha
aad
lods
fs
fisttpl
dec
fidivrs
ja
cld
es
jge
lcall
ja
ret
inc
or
out
xchg
loopne
mov
add
cmp
aam
cld
sbb
stos
mov
xor
fldenv
xchg
xor
and
jp
test
fsubrs
adc
xchg
mov
ja
leave
icebp
push
insl
xor
push
fsubs
jae
add
and
pop
ja
mov
sbbb
gs
cld
pop
lcall
sahf
dec
inc
js
loopne
lcall
mov
dec
fists
mov
xchg
cmp
ja
xchg
dec
scas
cmpsl
push
xchg
push
and
aad
xor
std
and
mov
movsb
ja
and
dec
dec
mov
aad
ja
sbb
test
or
mov
ja
movsl
jle
mov
sub
sbb
jmp
xor
ja
xchg
into
sahf
mov
es
repz
mov
hlt
mov
push
xchg
dec
pop
jae
cmp
cltd
int3
mov
dec
pop
ja
xor
mov
pop
ja
sbb
movsl
xor
mov
jecxz
add
xchg
mov
ja
leave
sbb
mov
gs
std
rcrl
test
pusha
xchg
dec
pop
sbb
mov
mov
sbb
ja
pop
push
ja
cli
fistl
cld
dec
jns
or
cmp
xchg
adc
dec
cmp
lcall
mov
int
xchg
sub
orb
and
fdivr
sbb
fsub
xchg
shlb
rol
cmpsb
jle
popf
pop
or
in
xor
movb
add
mov
add
adc
mov
adc
mov
popf
adc
mov
ja
sbb
sbb
and
push
cmp
jbe
xchg
cmpsl
jl
xchg
cmc
xlat
movsb
je
xor
int3
fsub
fnstsw
ljmp
jo
rol
cmp
mov
sahf
add
insl
aam
sti
data16
lods
push
popf
xchg
jge
fnstsw
jno
jnp
ret
movsb
and
pop
pushl
sub
neg
cmpl
mov
fcmovnb
xchg
dec
push
pusha
pushf
mov
jl
lret
xor
jnp
loop
movsl
or
or
push
test
and
enter
mov
mov
and
xchg
xchg
pop
mov
cs
jbe
sbb
mov
insb
lods
cmpsb
inc
lret
sti
mov
lock
in
mov
mov
es
cmp
adc
fs
inc
cmpsb
push
out
ja
adc
cld
jo
push
int
adc
aam
sub
mov
inc
ss
cmp
enter
rol
leave
pop
or
xchg
push
sarl
xor
push
in
lock
lret
cmp
fsubl
inc
xor
and
icebp
addr16
fcoml
adc
lcall
mov
loopne
xor
inc
inc
push
movsl
xor
and
pop
jg
cmp
sbb
repz
push
xchg
jnp
insl
negb
xchg
mov
sub
cmp
in
xor
lret
push
xor
fldt
insb
aad
xchg
xor
insl
dec
push
in
or
push
sbb
push
clc
mov
sub
repz
shll
add
xor
mov
mov
fisttpl
adc
xchg
leave
jo
jno
push
in
movsl
xor
fildl
mov
push
lahf
dec
lods
or
movsl
dec
ja,pt
inc
loop
stos
fistpll
xlat
dec
push
scas
xlat
sti
adc
mov
xor
js
pop
mov
stos
mov
fadd
test
adc
cmp
les
mov
iret
mov
in
shlb
jb
mov
mov
dec
xlat
ja
fadds
int
mov
int
pop
insb
pop
faddp
leave
sbb
pop
mov
and
roll
push
and
xchg
ss
insl
and
popf
cmpb
sbb
push
or
mov
pushf
push
popa
into
pusha
and
fbstp
sbb
leave
lea
stc
adc
xor
cltd
out
push
dec
jnp
scas
dec
dec
mov
icebp
sub
jae
aas
sub
mov
cmpsl
jle
filds
jns
lcall
mov
sahf
int
cwtl
jge
inc
lds
test
pop
test
dec
ja
xor
fsubs
ja
dec
cmpsl
gs
shr
cmc
xor
ja
mov
xchg
mov
ja
sahf
out
push
mov
and
bswap
movsb
dec
rcrl
xchg
inc
xchg
xor
out
ljmp
add
inc
bsf
mov
hlt
out
push
cwtl
cmp
inc
test
addl
push
jns
out
mov
ja
mov
pop
inc
push
add
adc
xor
sub
push
sub
pop
push
movsb
shl
xor
cmpsl
mov
imul
jecxz
cwtl
mov
out
push
push
jb
mov
aam
add
cmp
out
push
loope
jecxz
movsb
pmulhuw
adc
jne
xor
jle
push
repz
sbb
cmc
out
enter
push
inc
data16
xchg
repnz
out
push
push
shll
add
adc
add
daa
jecxz
push
inc
jnp
repnz
je
xchg
repz
das
add
adc
ret
fadds
mov
jne
in
xrelease
es
push
adc
out
push
inc
xchg
inc
push
mov
push
aas
hlt
jge
pop
cmp
mov
pop
cmpsl
movsl
sbb
mov
bound
repz
filds
inc
testl
and
push
and
out
add
jecxz
inc
inc
testb
fists
out
repz
loope
out
rep
mov
jne
jbe
popa
and
je
inc
xor
loope
andl
add
aaa
loope
jecxz
movsl
pop
inc
push
test
pop
xor
mov
or
mov
je
das
cmpsl
jb
les
adcl
addr16
in
ljmp
mulb
fs
loop
cmpsl
mov
ret
imul
shlb
mov
ja
mov
pusha
xor
movsb
jo
repnz
add
xchg
test
cmp
mov
inc
sbb
push
in
hlt
cpuid
jmp
filds
shll
xor
xchg
inc
xorl
ret
sub
call
add
addl
aaa
lods
roll
cmp
xorl
push
inc
inc
pop
push
push
ss
jmp
daa
in
addr16
ja
adc
jle
ret
xor
sti
aad
repz
ja
add
mov
xorl
stos
call
or
and
and
push
pop
movb
hlt
or
inc
hlt
jecxz
xchg
outsb
sbb
pop
orl
test
jmp
insb
in
dec
call
mov
push
jo
and
cmpl
or
ja
ss
mov
xor
repnz
fucomp
sbb
in
in
call
mov
dec
jo
xor
xchg
pop
fidivrs
push
outsb
in
pop
call
push
outsl
subl
and
pop
push
inc
xor
nop
pusha
popa
loop
loope
jecxz
pop
pop
movmskps
rolb
and
loope
dec
jle
push
xchg
iret
ret
push
jno
jo
lods
xor
pop
loopne
jmp
or
shr
jne
cmp
pop
imul
xor
and
pop
sub
and
jns
jne
and
and
jne
mov
push
mov
mov
sbb
ret
sbb
jo
push
xor
pop
cmp
pop
pop
loope
cld
ljmp
mov
rcrl
push
jp
mov
shll
movsl
jo
jb
stc
xchg
jne
xor
stos
icebp
jo
adc
shll
imul
and
mov
lcall
adc
andl
jo
xchg
loope
and
addl
subl
loope
jecxz
add
inc
xor
jae
shl
mov
and
mov
push
andl
mov
andl
jnp
inc
xor
rolb
je
in
xchg
leave
push
inc
mov
adc
jo
stc
xor
jmp
cmp
jns
loop
mov
add
ret
sub
movsl
idiv
cs
dec
xor
gs
pop
lods
mov
std
pop
jl
jmp
lret
in
ds
jg
ljmp
xchg
pop
adc
aas
pop
das
inc
cmp
mov
push
xor
fimuls
sarl
inc
repz
ret
das
jne
pop
pop
sub
js
jne
xchg
shrb
push
cmp
in
add
add
imul
int
jb
jmp
lret
sub
fnsave
xor
and
loopne
jb
bswap
mov
adc
push
add
sbb
jp
dec
sub
jg
divl
pop
pop
inc
or
mov
loope
xchg
call
bound
aaa
les
jne
insb
popf
loop
das
pop
les
xor
imul
addb
xchg
ljmp
xchg
xor
and
and
mov
testl
xor
gs
xchg
pop
daa
cmp
and
xchg
xchg
push
aad
mov
imul
imul
popf
jo
loop
loope
jecxz
aas
lock
insb
repnz
xor
adc
inc
push
xorb
mov
mov
push
enter
clc
ja
xchg
xchg
cmp
loope
cmp
push
sub
push
shlb
mov
adc
sub
int3
dec
hlt
xchg
sbbl
mov
add
int3
jno
xchg
and
int3
xchg
pop
sahf
xchg
lahf
inc
jmp
mov
mov
lods
dec
dec
int3
xchg
int
mov
xor
sbb
xchg
xchg
sub
inc
inc
cmpsb
push
lret
inc
push
jnp
inc
jp
xchg
jecxz
test
push
adc
int3
push
dec
aam
xchg
test
and
arpl
daa
loop
pop
push
ljmp
pusha
dec
int3
or
pop
push
xchg
xchg
cmp
xchg
flds
loop
jb
mov
push
xchg
and
popf
aaa
js
sbb
inc
int3
jmp
xchg
fstpt
daa
fsubp
cs
scas
xchg
sub
pusha
xor
jecxz
call
xor
stos
cmp
sub
push
orl
pop
mov
pop
xchg
xchg
aaa
mov
loope
jecxz
leave
imul
mov
mov
add
mov
mov
xchg
inc
jl
adc
xchg
int3
jle
or
xchg
jecxz
and
xor
or
pop
pusha
push
loop
mov
mov
xchg
xor
lret
cmpsl
shll
stos
dec
mov
dec
out
int3
inc
xchg
inc
scas
and
enter
inc
je
xchg
and
push
adc
and
fwait
in
jp
push
xchg
int3
jmp
pusha
xchg
sub
jnp
jmp
stos
mov
push
je
adc
int3
fisubs
call
push
xor
xchg
dec
pusha
inc
lret
jne
xorl
es
int3
mov
xchg
shrl
sub
testl
loope
je
xor
cmp
dec
pushf
rclb
insl
xchg
mov
sbb
xchg
push
int3
mov
lock
dec
xor
and
rcrb
sbb
jo
mov
or
push
xchg
ja
mov
mov
cmpsb
ljmp
stc
mov
ja
adc
bnd
inc
ja
int3
jb
xor
je
push
cmpl
int
xchg
loop
pop
fcmovne
aaa
inc
push
add
das
pop
test
flds
and
mov
jb
push
xor
sub
push
jecxz
cmp
call
xor
pop
aad
ja
jecxz
pop
js
mov
push
int3
add
jmp
xchg
pop
jp
cmp
fidivrl
cltd
fcoms
int3
test
decl
ss
xchg
dec
cltd
xchg
xchg
push
jnp
je
leave
insb
mov
cmc
inc
call
xchg
addl
push
dec
cmp
out
push
sub
loop
loope
jns
in
into
insl
jp
out
mov
xor
cltd
xchg
xchg
and
cmp
ja
adc
dec
leave
push
and
imulb
popa
loop
int
call
lcall
add
push
push
test
mov
cwtl
push
lock
aas
mov
xchg
fwait
jno
mov
jb
xor
idivl
inc
or
push
push
mov
adc
repnz
test
loop
jnp
in
jo
and
xchg
loop
inc
cmc
pusha
sub
inc
mov
xlat
cli
adc
notl
cmp
cmp
ss
ss
scas
cli
test
aam
out
push
push
pop
cwtl
les
ret
in
push
xor
or
cmp
adcl
xor
call
out
loop
fwait
mov
add
sbb
jne
loop
call
out
push
mov
das
testb
in
xchg
outsb
ljmp
xchg
xor
push
ljmp
adc
ss
aas
sahf
push
inc
inc
xchg
ret
push
scas
test
xchg
xor
xchg
in
hlt
mov
mov
and
inc
cmc
icebp
inc
push
stos
jns
das
and
push
subl
fiaddl
push
in
cltd
push
cmp
shll
mov
es
jge
and
call
jns
jmp
mov
and
xchg
notb
cmp
add
sub
push
ficoml
xorl
rcrb
imul
and
cwtl
xor
jbe
push
xor
xchg
and
xchg
into
ljmp
push
faddl
jbe
mov
loope
ljmp
mov
jne
shlb
push
fldpi
rcll
fistps
divb
and
es
es
fldcw
adc
adc
dec
and
jecxz
jl
ret
jo
scas
dec
and
rcll
aam
push
testl
cmc
stos
jb
xor
ret
xorb
shll
ljmp
dec
ljmp
mov
les
adc
adc
cmovg
loop
insb
jno
cmc
out
in
push
push
mov
adc
hlt
cwtl
jb
push
jb
inc
sti
pop
lret
push
call
adc
sub
push
cmpsb
ret
mov
inc
pop
iret
mov
push
dec
xchg
sbb
fdivl
pop
cmp
mov
xchg
in
push
jae
push
xchg
pop
neg
jo
jo
jo
xchg
xor
ja
inc
ds
and
xchg
jb
popa
aaa
xchg
xchg
loope
stos
cmp
ss
adc
fdivs
cmp
cwtl
push
push
push
lcall
or
ss
mov
loop
pop
jne
xor
test
xor
ja
push
mov
xor
mov
adc
cltd
popf
xor
jns
xor
push
fisubrl
and
loope
ss
push
fdivr
dec
or
xor
push
lret
sub
sahf
aam
loop
insl
xchg
sub
add
call
movsl
mov
into
dec
add
jecxz
cltd
inc
in
push
xchg
sub
and
xchg
shrb
dec
es
imul
push
lea
and
shlb
pop
push
ljmp
and
xchg
xor
sub
and
dec
sub
or
imul
insb
push
inc
or
loope
mov
ret
jl
and
hlt
movb
jb
and
xor
jmp
sarb
lret
cmc
call
mov
div
jbe
and
pusha
pusha
adc
jecxz
lret
xchg
es
push
jecxz
sbb
stos
push
aad
push
repz
and
push
or
imul
mov
je
test
shll
xchg
xchg
shr
in
outsb
int3
je
sub
jo
xchg
into
pop
lock
xchg
js
adc
ret
test
mov
loopne
insb
mov
xor
cmp
daa
sub
push
outsl
in
dec
shr
add
insb
repnz
xor
je
out
je
sub
in
push
fidivl
mov
push
pop
add
cpuid
adc
aaa
loope
mov
pop
xorb
and
and
mov
xchg
daa
sbb
dec
mov
push
repnz
sub
push
dec
xchg
int3
pusha
popf
lods
scas
notb
imull
sub
ret
xor
mov
ljmp
roll
pushf
call
cmc
aam
cmc
xor
mov
mov
fbld
ljmp
ss
pusha
enter
sub
push
jecxz
mov
mov
mov
les
sub
dec
xlat
xor
testl
inc
mov
xor
inc
sub
ljmp
xor
push
call
xor
push
in
cltd
cmpsl
je
movsb
stos
adc
and
push
cmp
pop
xor
inc
movsb
cmc
pushf
lods
je
sub
ret
lret
pusha
ss
sbb
in
mov
add
xchg
jb
pop
jne
or
push
in
mov
inc
gs
xor
mov
mov
push
and
and
push
mov
imul
cmc
sub
xor
cmpb
in
inc
jbe
xchg
into
inc
sub
push
inc
sahf
test
sub
inc
xchg
push
pop
adc
sub
lret
out
jo
dec
test
mulb
add
jne
inc
pop
and
xchg
test
shl
mov
mov
shl
mov
push
cli
loopne
cmp
pusha
pop
shll
push
or
xlat
and
push
loop
jb
pusha
movsb
inc
repz
call
bound
add
rcrl
sbb
push
xor
mov
cmp
das
subl
push
arpl
mov
shll
shll
push
aas
dec
repz
test
mov
xor
mov
cwtl
gs
daa
data16
add
push
mov
jl
lock
dec
dec
test
jae
xor
fsubrp
cmpsl
test
adc
movlps
out
fldcw
pop
in
sub
lahf
out
sub
lcall
adc
and
fmull
mov
ret
inc
mov
xchg
inc
xchg
les
dec
outsl
mov
and
test
sub
ret
ss
out
adc
mov
jecxz
shr
rclb
jbe
jae
and
icebp
dec
call
mov
outsb
inc
mov
arpl
cmpsb
movsl
loop
scas
mov
mov
xchg
in
cmp
sub
push
scas
push
xchg
sarl
push
into
inc
dec
in
and
imul
call
push
loope
add
push
xchg
loop
sub
and
dec
shll
mov
push
setbe
adc
add
hlt
fiadds
sub
in
pop
push
cmp
cmp
test
push
mov
data16
or
mov
jecxz
sub
shrb
pusha
xchg
push
stos
mov
inc
mov
pop
in
test
cmp
adc
dec
cmpl
and
addb
mov
mov
and
shrl
cmpsl
push
lods
ret
shl
dec
pusha
adcb
jne
jmp
imul
or
inc
loopne
fdivrs
out
sub
add
and
shll
outsl
sti
jae
pop
mov
add
aas
xchg
dec
into
imull
aaa
dec
and
call
jo
cmp
pusha
call
inc
out
cltd
and
and
fisubrl
jne
inc
movsl
push
loope
in
ss
ljmp
outsb
outsb
lret
lds
sub
movb
cwtl
out
test
xor
jne
aam
dec
call
and
xchg
test
fisubs
cltd
mov
xchg
mov
clc
loope
into
pop
push
psubusb
mov
mov
data16
sub
ret
xchg
pop
xor
lahf
loop
or
test
xor
dec
push
push
mov
cwtl
inc
pop
mov
jns
jbe
test
xchg
insl
outsl
addr16
cltd
lods
mul
jbe
adc
es
cmp
mov
lea
ss
add
int3
xchg
push
aad
mov
push
xchg
arpl
mov
sub
int3
mov
sub
fadd
fisubs
mov
dec
call
ja
sbb
inc
outsl
mov
rorb
and
mov
stos
negb
mov
adcl
faddl
aaa
dec
sub
xchg
rolb
mov
dec
push
fadds
lods
xchg
dec
fidivrs
insl
jbe
mov
insb
ss
mov
and
mov
push
popa
bound
add
pusha
iret
lret
mov
adc
ret
in
push
adc
ficoml
mov
cmp
xchg
xchg
and
fsubrs
sub
or
adc
or
xchg
notb
mov
lret
push
lret
sub
sbb
arpl
sbb
push
adc
add
jne
xchg
mov
mov
aaa
xchg
call
mov
cmpsl
ficomps
hlt
call
mov
push
add
adc
jecxz
inc
xchg
les
outsl
push
in
es
fcoms
add
mov
mov
and
adc
shl
stos
or
pop
inc
pop
ss
push
xchg
mov
push
jecxz
lods
adc
mov
xchg
lret
mov
jmp
cmp
xor
ss
ss
dec
cmp
dec
xor
divb
fcmovbe
xchg
dec
pusha
loop
rolb
push
xchg
xor
gs
jne
push
push
mov
iret
mov
push
sti
or
aaa
shrl
xchg
lods
adc
push
lret
or
out
mov
inc
pushf
mov
inc
not
pusha
mov
lea
pushf
call
call
jg
or
inc
out
sbb
jb
xor
rcrl
arpl
jae
popf
inc
pusha
add
negb
icebp
jb
pop
aam
enter
xor
push
mov
cmc
in
xchg
shlb
and
mull
subl
xor
mov
sarb
movsb
pop
cmp
imul
rorl
enter
mov
or
mov
jecxz
cmp
xchg
cmp
insb
or
adc
cmpsb
mov
jmp
jne
push
pusha
stos
pushf
lea
jmp
lea
call
call
inc
and
es
xor
nop
cli
cmp
in
jns
addb
clc
mov
sbb
out
in
mov
daa
inc
into
push
loop
je
mov
scas
icebp
js
mov
adc
add
mov
add
in
lea
repz
push
cmp
sbb
add
mov
inc
je
pusha
fbstp
mov
std
addl
cwtl
sbb
into
loop
cmp
jmp
lcall
jno
loop
inc
stc
gs
pop
adc
lahf
loop
sbb
dec
mov
xor
push
lods
dec
repz
dec
in
lea
in
repz
test
aad
out
add
mov
mov
mov
jle
test
scas
cmp
fisubs
imul
cmp
stos
enter
inc
out
or
add
add
xchg
sub
call
jnp
and
insl
and
pop
gs
sahf
or
xchg
insb
psubw
xor
or
xor
mov
clc
jmp
pop
sub
stc
push
loop
mov
popf
add
in
idivb
imul
lock
lock
cmc
mov
or
pop
add
lea
loope
adc
test
xor
inc
rcrb
xor
lds
out
jb
jg
lea
movsl
sub
xor
pop
cmp
scas
rcll
std
mov
add
mov
lods
add
arpl
mov
mov
lds
dec
cltd
cmpsb
dec
push
lods
xchg
loop
out
lcall
adc
adc
test
adc
lea
je
push
pushf
cmp
sub
pushl
cmp
movl
clc
cmp
call
pushf
pushl
pushf
dec
cmc
clc
rol
stc
sub
clc
cmp
jmp
leave
into
pop
jecxz
xor
mov
fsubl
push
ja
orl
iret
jp
pusha
cmp
add
in
mov
andb
data16
subl
push
push
fistl
and
xor
jge
int3
jae
mov
test
movsl
xor
adc
pop
fsubl
jno
jg
xchg
loop
jno
movsl
call
rorb
or
sub
mov
test
fwait
out
push
ret
mov
cld
stos
dec
repnz
xor
cltd
add
jmp
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
xchg
not
pop
jmp
lea
call
call
and
cmc
inc
and
in
jg
test
nop
cmp
sbb
in
cmp
outsl
out
les
aaa
xchg
or
and
mov
in
or
lods
xor
sbb
enter
mov
or
lock
push
lcall
popa
jl
ljmp
bswap
pop
fidivrl
cmp
lcall
int
push
outsb
call
dec
sti
pop
cmpsl
xor
ja
rcrb
push
cli
cmpsl
push
lock
adc
stos
pop
inc
xchg
movsl
add
pop
aas
lret
leave
fadds
lods
pop
rcrl
outsb
hlt
orb
sbb
ret
jecxz
dec
shrb
or
or
fcmovu
inc
mov
idivb
fisttps
push
jnp
adc
mov
inc
add
arpl
addr16
addb
aaa
popa
movsb
mov
dec
push
in
pusha
test
jp
adcl
xchg
ljmp
arpl
xchg
pop
int3
notl
dec
lret
rcrl
popa
add
mull
inc
movsbw
mov
pushf
mov
pushf
push
mov
lea
jmp
sub
rol
mov
push
call
mov
call
pop
pusha
loop
sbb
movsl
popf
xlat
mov
bnd
xchg
adc
xor
pop
loopne
xchg
popl
mov
adc
outsb
jecxz
jg
jle
das
pushf
mov
adc
enter
xorl
xor
cltd
bound
icebp
xchg
cmp
fadds
or
cmpsb
adc
push
fnstcw
push
out
in
je
dec
ljmp
adc
lods
push
jmp
rep
pop
inc
add
shlw
pusha
mov
sbb
pop
jmp
orl
push
mov
hlt
loop
adc
mov
outsl
sarl
jle
dec
aam
loop
sbb
insb
pop
inc
into
xchg
ficompl
jl
out
lcall
mov
std
movsb
dec
jmp
cmp
insb
adc
lods
das
sbb
out
adc
xor
xor
jb
jg
mov
cltd
sbb
sub
inc
loop
loope
adc
jp
mov
fs
mov
loop
jmp
cmpb
cmp
dec
fdivr
dec
ficompl
lods
pop
sti
lahf
inc
jecxz
sub
subb
adc
lods
lea
sbb
orl
fisubs
lods
aaa
mov
rolb
leave
dec
xlat
pusha
add
lea
lods
insb
repz
divl
movsb
cmpsb
sbb
xchg
push
mov
push
dec
push
imul
aad
mov
aaa
outsl
icebp
dec
ror
jbe
mov
xor
pop
out
push
ret
xor
xchg
xor
push
inc
stos
divb
inc
in
pop
dec
fsts
pop
push
scas
push
jmp
aam
pop
int
rep
nop
jp
mov
lea
jb
cmp
cmc
push
cmpb
movb
call
mov
sbb
dec
mov
jns
jns
mov
pop
fbld
je
jbe
jne
pop
repz
or
push
pusha
add
pop
jp
and
iret
dec
into
ja
rolb
sbb
call
inc
data16
push
pop
stos
movsl
inc
hlt
rcrb
cmp
popa
sub
pop
add
dec
inc
lret
sub
fsubr
push
repz
mov
lods
in
sub
cmp
ret
aad
stc
and
sub
xchg
xor
notb
jle
stos
pop
cmp
lods
out
fstpt
mov
lcall
mov
mov
jge
sbb
xchg
aas
jl
int
cli
sbb
and
lock
fwait
popf
add
mov
fnstsw
stc
shrb
jle
jo
repnz
cmp
mov
je
dec
push
mov
out
push
dec
decb
adc
sarb
xor
pop
shrl
loope
mov
inc
mov
adc
js
mov
clc
cltd
inc
jecxz
movsb
or
call
sub
mov
mov
adc
scas
cli
in
mov
inc
int3
imul
cs
jbe
orl
xor
scas
pop
pop
mov
inc
in
push
inc
jno
cwtl
cmp
imul
pop
jae
les
sbb
xchg
fs
pop
jle
sub
sbb
es
clc
cmp
ror
adc
repnz
dec
push
push
xchg
data16
dec
mov
push
adc
cmp
cmp
std
pushf
test
pop
arpl
lock
dec
jne
jae
pushf
cmp
test
aam
sub
subl
scas
xchg
jge
movw
dec
cmc
clc
jmp
call
pop
aas
lret
mov
out
jbe
addl
stos
push
stc
xor
ja
cmp
pop
addl
cld
inc
mov
inc
jmp
out
and
mov
add
fwait
out
xchg
xlat
arpl
andl
xchg
fldenv
rclb
js
xchg
fstps
sahf
inc
ljmp
mov
lret
adc
scas
mov
pusha
lea
call
push
lea
jae
seto
dec
not
mov
push
pushf
mov
inc
jmp
cmp
mov
xor
cmp
sub
btc
btr
bsr
lea
jmp
inc
and
je
or
mov
pushf
and
and
sub
sub
jp
mov
out
fsts
das
pop
lds
push
loop
fadds
insb
adc
out
jp
dec
dec
jl
cli
jg
mov
or
ljmp
mov
sub
and
add
pop
aas
push
sti
rorl
jg
sbb
jp
addb
or
ds
pop
das
hlt
cs
imul
pushf
filds
pop
sti
xchg
std
sbb
lock
pop
mov
pop
mov
stos
sbb
xchg
ja
xor
push
rolb
add
clc
insb
insl
mov
jb
dec
shlb
mov
hlt
pop
adc
jo
sub
jae
inc
fildl
lahf
inc
jmp
das
fiaddl
adc
mov
or
test
sar
neg
neg
lea
mov
btc
sub
and
shr
not
btr
mov
jmp
call
lea
jbe
xor
mov
or
add
adc
rcl
xchg
cmc
mov
rcl
movsbw
sub
lea
add
shrd
movl
jmp
mov
int3
xchg
loopne
or
pop
jecxz
repz
mov
xchg
and
outsb
ret
insl
push
or
outsb
out
cltd
push
movsl
adc
add
les
mov
add
fbld
rcl
jl
pop
cmp
in
lock
add
cmp
clc
cld
rcl
mov
loop
test
mov
cmc
dec
mov
cmp
rorl
dec
insl
dec
fwait
daa
jle
inc
mov
push
fnstcw
outsb
sbb
push
fwait
cmp
repz
out
test
lea
or
lret
pop
fisubrs
push
dec
push
cs
xchg
push
jg
fistpll
lea
repnz
jnp
addr16
outsl
push
pushf
jg
push
ret
aam
pop
mov
adc
fidivrl
pop
cwtl
aad
sub
sarl
sbb
jns
and
je
jg
xor
sub
add
dec
lds
mov
jmp
and
jo
mov
add
or
mov
mov
nop
xor
xor
jmp
dec
int
out
repz
test
xor
or
mov
out
adc
in
mov
andl
insb
adc
aaa
xor
push
push
in
inc
ja
popa
jecxz
sub
subb
add
insl
push
adc
mov
jmp
push
mov
call
daa
sub
fidivs
popa
mov
out
jg
mov
lea
xchg
xor
sub
or
mov
out
adc
in
mov
adc
loop
pop
jle
insb
adc
cli
or
adc
lods
cmp
xorl
jl
aam
and
repz
rolb
lret
push
cmpsb
adc
pusha
jmp
in
outsl
stc
jge
mov
mov
push
bnd
and
jg
cld
shlb
shll
test
dec
inc
test
call
push
dec
jmp
cs
or
adc
sbb
and
and
inc
xchg
popa
in
sub
ja
les
mov
adc
mov
std
repz
sub
jb
or
xlat
pop
fbld
add
out
out
mov
pop
inc
mov
mov
mov
xor
inc
enter
mov
shr
pop
sbb
sbb
inc
loope
xlat
gs
aaa
fadds
mov
or
sbb
inc
mov
sbb
dec
es
rorl
insb
repz
jg
mov
fwait
sub
sbb
loopne
loop
mov
ja
adc
pop
cmp
mov
cmp
hlt
clc
cltd
push
in
lahf
imul
fbstp
int3
ud2
mov
xorb
addl
push
enter
adc
cld
xchg
fimull
fmul
daa
cmpl
fisttpll
lcall
inc
push
add
jmp
adc
mov
and
mov
and
loope
repz
test
popf
and
imul
sbb
mov
jne
jge
adc
dec
aad
test
lret
sub
and
and
and
sbb
movb
imul
js
cmc
pop
fwait
and
sbb
mov
imul
mov
testb
test
fstpt
fdivrs
ret
adc
mov
mov
pop
pop
cmp
popa
rcrb
push
xchg
and
push
loop
sbb
roll
mov
sub
scas
pop
pop
loop
and
inc
popf
mov
mov
addb
pushf
call
pop
cmpsl
push
cli
mov
fistl
repz
mov
mov
and
xchg
js
jns
addl
cmpl
jl
mulb
add
shll
lods
pop
add
pop
or
test
add
sbb
stos
sbb
lea
sub
pop
inc
lock
or
filds
rcrb
mov
xor
out
in
jg
push
push
jbe
mov
fdivp
negb
cs
divb
rolb
cmc
dec
rcrb
sub
arpl
xchg
pop
pop
out
enter
in
das
mov
push
negl
repz
inc
xchg
mov
ljmp
jecxz
out
jns
popa
pop
inc
adc
adc
and
fisubs
lret
pop
mov
inc
sbb
inc
addb
ss
stc
cmpsb
push
repz
in
mov
aas
xchg
stos
lret
xchg
and
push
cs
jl
repz
sub
xchg
adc
ljmp
xor
stc
lahf
ficompl
aas
xchg
cmpsb
mov
rclb
js
lods
es
iret
pop
fsubl
jg
sbbl
or
mov
pop
or
subb
xor
mov
or
xchg
adc
sbb
aam
imul
mov
or
or
test
add
rcl
mov
lea
sub
neg
rcr
mov
mov
stc
sub
pusha
pushl
popl
test
clc
clc
cmp
call
int3
scas
das
scas
push
inc
fidivs
call
lds
push
sbb
and
or
iret
loopne
jge
pop
lcall
cld
or
fwait
pop
sbb
rorl
mov
inc
push
bound
fisubrs
jo
adc
in
pop
leave
mov
cmpsl
mov
ds
dec
sahf
sub
in
inc
sub
mov
dec
push
sub
sbb
xchg
and
jp
pop
mov
ror
fiadds
lds
pushf
sahf
inc
lods
inc
xor
daa
int3
jp
ret
outsb
sbb
outsb
adc
mov
jo
mov
cmp
je
popa
mov
std
orl
or
sub
jp
inc
jle
mov
push
aas
sti
movsl
in
mov
in
or
fstpl
data16
insb
adc
sbb
gs
es
cmp
insl
adc
in
xchg
xor
mov
repz
bt
pushf
stc
add
clc
movzwl
cmc
bsf
rcl
mov
test
jmp
dec
sub
mov
pop
fbld
jp
jp
xchg
xor
insb
pop
pop
mov
jg
je
add
inc
in
xchg
inc
mov
pushf
inc
imul
icebp
mov
dec
fnstsw
shrb
outsb
scas
mov
xchg
cmp
sbb
aas
mov
loop
loopne
ds
mov
adc
lret
js
adc
stc
pop
mov
cmp
push
xor
add
xchg
mov
pop
nop
cmp
push
repnz
inc
jmp
cmp
adcb
mov
or
ljmp
dec
int
fstps
sub
and
testl
imul
out
and
or
mov
in
xor
xor
inc
and
imul
pop
add
ds
xor
repz
fs
ja
pusha
imul
cmc
movw
test
cmc
add
push
pusha
lea
jmp
bswap
mov
pusha
pop
pushl
pusha
lea
mov
movb
movl
pushf
mov
mov
pushf
pushl
ret
xor
mov
and
cmp
orb
or
iret
jae
push
xchg
jno
mov
push
adc
mov
jno
stos
in
push
sub
push
pop
ficomps
dec
lods
jno
sbb
mov
rclb
pop
mov
pusha
loope
int3
movlps
loopne
push
dec
repnz
jae
out
or
outsl
xlat
mov
inc
out
pop
mov
ljmp
adc
ds
aas
fldl
enter
fs
mov
adc
mov
lea
jne
ror
cmp
bt
or
mov
and
movsbw
lea
ror
sub
dec
bt
neg
mov
cmp
sub
call
lea
call
call
jecxz
inc
jno
inc
das
xor
pop
jecxz
clc
jg
lea
fwait
push
mov
xor
push
fiaddl
dec
mov
adc
ficoml
pop
outsb
xchg
addr16
dec
inc
out
jnp
xchg
jmp
pusha
dec
or
dec
sbb
inc
xchg
popa
sbb
pushf
or
xchg
pushf
cs
sbb
jb
std
mov
pop
bound
cli
negb
sbbb
loope
js
pop
std
mov
loope
pop
notb
mov
mov
xor
inc
sub
orb
in
lea
mov
andb
jl
lret
jno
mov
subb
xor
pop
in
ljmp
repz
out
lret
int
addr16
stos
pop
add
adc
and
cmp
scas
ljmp
cmp
mov
iret
jge
repz
ret
inc
aam
jns
cmp
lock
mov
xchg
sbb
sub
xchg
imul
jae
mov
out
inc
rcll
stc
sbb
xchg
roll
pop
pop
clc
out
in
daa
insl
shrl
pop
jns
xchg
push
inc
pop
jl
or
data16
push
daa
adc
sbb
mov
pop
cld
aad
ficoms
xchg
cmp
and
cltd
mov
clc
sahf
inc
in
xchg
inc
ljmp
cmp
jl
xchg
dec
das
mov
jmp
rcl
cmp
xchg
shrb
adc
mov
inc
and
jmp
pushf
mov
push
movsbl
lea
pusha
movb
jmp
jecxz
jo
xchg
add
scas
rcr
mov
xchg
adc
mov
cmpsl
outsl
dec
hlt
xor
pop
adc
inc
sub
loopne
test
arpl
adc
cmp
mov
std
cmp
cli
movsl
adc
push
mov
outsb
xor
inc
add
and
sub
add
inc
mov
lea
mov
movsb
push
call
cmp
and
lock
push
cmpsb
jae
in
adc
inc
jne
pop
loop
jo
ds
xchg
aas
fisttps
test
lds
mov
mov
outsl
int3
pusha
sub
pusha
lea
jno
pusha
pushf
lea
call
pushf
pushf
push
call
mov
pushf
lea
je
pushf
pushf
push
lea
jmp
pusha
sub
bt
add
jns
push
pushl
popl
stc
pushf
cmp
pushf
mov
call
imul
daa
xor
ljmp
inc
int
loopne
in
in
lcall
shrb
sub
lea
jb
push
mov
add
icebp
xchg
cmp
mov
mov
fldl
int
adc
repz
incl
mov
loope
divl
test
popf
and
cmp
and
lcall
inc
inc
stos
xor
je
sub
dec
xchg
cmp
lods
or
testl
stc
mov
test
icebp
popa
out
stos
push
add
bound
pop
mov
xchg
imul
scas
inc
or
imul
dec
lret
add
addb
stos
push
sti
lcall
adc
mov
int3
push
faddl
sarb
divb
jg
xchg
fwait
sbb
shl
mov
js
cmpsb
xor
in
mov
mov
loop
xchg
cmp
ds
mov
adc
insl
adc
cmp
mov
pop
jmp
shll
push
mov
fs
jns
je
call
lea
jae
bsr
bsf
mov
btc
mov
push
mov
sub
test
pushf
cmp
sub
mov
cmp
pushl
repnz
push
pushf
pushf
mov
lea
jne
mov
mov
cmc
shl
pusha
sub
stc
lea
add
stc
bt
call
repnz
mov
push
lea
jne
setno
call
xchg
jne
xchg
shlb
out
pop
adc
pop
sahf
sub
pop
in
adc
cli
sahf
into
insb
sbb
xchg
js
sbb
into
adc
sub
cmp
faddl
jne
dec
je
mov
mov
aaa
into
jge
mov
mov
mov
sbb
daa
push
sbb
arpl
dec
push
pop
mov
xchg
aaa
or
mov
add
fldl
int
xlat
adcl
mov
cmc
in
mov
mov
or
push
stc
cmpsl
dec
out
adc
mov
out
stc
movsl
jnp
pusha
loopne
ret
jg
test
adc
cmp
scas
pop
js
mov
dec
cmp
mov
mov
push
je
lcall
insb
pop
pop
or
repz
inc
cmp
sbbb
negl
cmp
repz
mov
and
or
add
cmc
bt
sub
pushf
pushf
lea
jb
call
jmp
neg
data16
xor
cmpsl
adc
xchg
xchg
sbb
int3
pop
add
mov
daa
adc
mov
in
mov
ja
clc
pop
fsubp
data16
ds
adc
dec
add
xor
sbb
cmp
movsl
dec
hlt
xchg
inc
in
das
sarl
outsb
adc
rolb
mov
sbbl
scas
xor
loopne
lock
inc
adc
and
jo
pop
mov
xchg
lods
sub
adc
out
repnz
xchg
or
ja
lret
pop
dec
jg
cs
or
in
mov
cmp
push
mov
lods
pop
outsb
xor
adc
aam
jns
sbb
fsubrl
cmp
repnz
push
ds
pop
scas
cmp
push
cmp
cmpsl
push
hlt
cwtl
inc
out
lcall
sbb
repz
mov
mov
xchg
adc
add
out
mov
jb
add
inc
sub
popa
xchg
pop
in
testl
mov
dec
xor
pushf
in
mov
jp
push
ret
gs
jne
adc
movsb
nop
loop
mov
ss
icebp
cmp
push
jmp
jmp
sar
lea
jne
pusha
inc
adc
bswap
sub
bt
das
shl
bts
mov
add
sub
dec
and
neg
add
push
mov
test
pushf
push
cmp
test
call
sub
popa
xchg
jecxz
call
xchg
adc
iret
loop
loop
sarb
mov
out
xchg
bound
stc
mov
inc
sbbb
xchg
pop
ljmp
outsl
sbb
adc
repz
les
ret
push
xor
xor
mov
lds
dec
aad
cli
mov
mov
xchg
jle
and
mov
arpl
sub
insb
adc
sub
push
andb
mov
arpl
xchg
xor
test
fidivrl
enter
data16
ret
and
aaa
popl
stc
clc
pusha
cmp
pushf
jmp
pusha
lea
jne
call
incl
adc
out
and
dec
fldenv
imul
pop
loop
jb
loope
enter
ds
or
sub
push
adc
fs
dec
shlb
adc
sahf
sub
jl
into
jbe
shlb
mov
sti
mov
push
xchg
not
call
adc
lea
push
pusha
jmp
lea
call
jmp
jmp
movl
call
setne
lea
lahf
lea
movsbw
cwtl
mov
call
adc
pushf
pushf
lea
jae
pushf
jmp
cmp
pusha
movb
lea
je
push
mov
cmp
pushf
pusha
lea
je
cmp
bt
cmp
call
pushl
popl
cmc
cmp
pushf
lea
ja
push
movb
sub
pushl
pusha
pushf
lea
jmp
and
je
mov
ficompl
data16
bnd
mov
fdivrp
test
mov
jnp
inc
data16
mov
push
jno
xlat
addl
and
xor
inc
je
and
aad
adc
enter
stc
cmp
sbbb
jb
fs
hlt
je
cmpsb
dec
stos
push
push
jle
dec
cmc
add
or
mov
ss
and
outsl
push
scas
push
jmp
in
adc
les
ljmp
cmp
fisubs
imul
adc
cltd
out
stos
cmp
xlat
add
dec
das
jmp
mov
inc
repnz
clc
and
mov
aaa
xor
cmp
push
stos
fidivs
pushf
popa
mov
pop
mov
test
sbbb
inc
jge
pop
jecxz
pop
test
or
addr16
negl
sbb
jns
dec
icebp
pop
xor
pop
shlb
pop
push
scas
dec
sti
test
repz
sub
cmp
loope
cmpb
dec
into
push
fsubl
outsb
hlt
jnp
mov
or
adc
jbe
bound
pop
imul
or
les
mov
outsb
je
and
iret
jp
mov
fwait
mov
shrw
fimuls
lods
cmp
xchg
xor
xor
popa
lods
push
notb
fimull
adc
lds
and
jae
jb
insl
jo
add
fidivs
fs
decl
pop
stos
aaa
filds
adcb
mov
jl
loop
mov
pop
insb
adc
cwtl
enter
jge
jnp
xor
cmp
jmp
in
xor
repz
inc
call
ret
cmpsb
inc
sbb
arpl
cmpsb
sub
arpl
outsb
repnz
cmp
jge
inc
mov
mulb
fwait
xchg
cmp
rorl
dec
dec
mov
lods
push
test
pop
lea
aam
fiaddl
cmp
out
xchg
cmp
mov
imul
clc
fwait
inc
jmp
inc
out
mov
fildl
xchg
jl
cmpsl
lods
xor
insl
xlat
sbb
dec
iret
pop
ficomps
jbe
mov
mov
pop
pop
fmull
cltd
push
cld
sbb
andb
pop
cli
cltd
inc
pop
cld
push
and
mov
adc
into
xor
push
orl
xor
sahf
and
xchg
mov
shlb
sub
jg
dec
into
push
repz
mov
add
jp
mov
add
push
imul
into
rcrb
data16
sbb
lods
pop
cli
mov
orl
mov
push
cltd
inc
testb
jl
mov
repz
iret
mov
and
or
test
fadds
add
pushf
cmp
pusha
pushf
pushf
lea
jb
call
daa
or
flds
fstpl
jae
jp
xchg
cmp
pop
mov
testb
into
adc
mov
test
loop
test
dec
xchg
inc
out
daa
iret
jb
mov
adc
mov
or
and
ja
bt
jmp
push
lea
jb
stc
cmp
bt
pusha
cmp
push
pusha
pushl
lea
jmp
incl
or
jecxz
cmpsb
cs
gs
int3
pop
mov
loop
pop
stos
xchg
fdivrs
mov
inc
addr16
cmp
loop
data16
adc
repnz
xchg
dec
dec
or
sub
xor
push
popf
and
insb
adc
addr16
adc
enter
add
jmp
stc
xor
pushf
inc
lea
push
call
push
cmp
pusha
jmp
lods
mov
ret
and
xchg
adc
push
fldt
js
xchg
xchg
inc
jmp
lret
jmp
push
es
cmp
add
or
cmp
insb
bound
jne
or
pop
jbe
add
mov
out
sub
fldt
mov
dec
inc
inc
imul
xor
jl
pop
pop
ja
es
es
sub
into
adc
xor
dec
ljmp
push
sti
mov
mov
hlt
popf
inc
out
inc
jmp
mov
cmp
sarw
aad
loop
out
jo
jns
nop
sbb
out
or
mov
cltd
jbe
dec
sub
aaa
add
mov
outsb
xor
inc
xchg
xchg
ss
cltd
xor
int
sahf
and
jno
mov
add
sub
outsl
cld
popf
das
xor
mov
std
test
stc
cltd
inc
loope
sub
jb
repz
mov
enter
rolb
add
lahf
and
add
lods
out
cmc
sub
pop
sbb
lea
lea
clc
cmc
cmc
movw
sub
cmc
call
outsb
jne
loop
push
rorb
mov
sbb
mov
dec
jo
pop
push
fildll
push
pusha
mov
mov
xor
pop
ljmp
ljmp
popa
and
xchg
arpl
mov
shl
push
push
pop
clc
xlat
fs
in
in
add
mov
xor
inc
test
mull
repnz
stos
mov
cmp
into
icebp
mov
sbb
outsb
jo
out
push
jmp
por
cmp
out
sub
shrb
adc
and
xor
mov
cli
add
xlat
push
mov
lret
cmc
hlt
aaa
test
je
cmp
movsb
mov
sar
mov
pop
subl
mov
pop
int3
dec
ja
push
add
jb
imul
aad
dec
fwait
loope
idiv
lret
inc
adc
insb
addl
into
mov
lahf
mov
sahf
jo
dec
lcall
pusha
ds
movsb
shlb
pop
sbb
ret
rclb
test
add
push
stos
push
into
jno
sub
popa
les
shll
cmp
sbb
ss
fisubrl
mov
and
adc
ds
mov
jge
stos
outsb
push
xchg
jmp
mov
push
aas
nop
imul
and
imul
ljmp
jnp
and
mov
loopne
mov
dec
push
mov
not
sub
aad
pop
stos
rcr
inc
lds
popl
adc
loopne
jno
div
dec
xchg
je
or
inc
in
popa
mov
jb
cmp
addr16
int3
inc
sbb
sub
shl
add
ret
xchg
jne
mov
out
or
mov
adc
and
push
outsb
cli
movb
xor
jmp
or
pusha
dec
outsb
adcb
mov
fs
test
loope
fisttps
xchg
test
adc
xchg
mov
iret
ret
mov
loope
mov
cmp
enter
test
jb
jbe
adc
and
into
or
int3
xor
dec
pop
lret
cmp
jmp
xchg
pmaxub
sti
inc
sbb
daa
cmc
adc
xchg
cmpb
aaa
or
sbb
jmp
xchg
fidivl
xchg
mov
dec
mov
and
dec
or
loope
jbe
xchg
cmpsb
xchg
mov
inc
adc
xchg
stos
jmp
hlt
and
sub
inc
cmc
fmull
inc
cmp
test
pop
jns
repnz
js
cmc
daa
shlb
loop
cmp
mov
xchg
lock
sbb
testb
push
outsl
pushf
cwtl
fisubl
dec
push
pop
push
mov
mov
jge
adc
xchg
bound
out
xorl
cmp
testl
in
xchg
push
mov
ret
stos
jns
and
pop
mov
mov
cmp
jmp
inc
jge
seto
pop
mov
xor
popa
mov
mov
lcall
shl
pop
test
fistps
shrb
mov
fcmove
mov
loope
sub
pop
mov
idivl
ja
mov
mov
xchg
jecxz
pop
push
jns
hlt
pushaw
inc
xchg
push
inc
and
pop
das
mov
cmc
loope
xlat
outsb
xchg
cmp
aas
inc
jg
lea
mov
out
sbb
mov
xchg
push
loope
xlat
jbe
icebp
out
jns
fstps
mov
mov
int3
push
je
ljmp
pop
ds
lds
cld
push
sub
js
sbb
cli
scas
mov
push
cmp
sbb
push
rorb
outsb
clc
shrb
repz
je
adc
adc
icebp
scas
adcl
dec
sub
pop
and
cmp
cs
mov
aaa
mov
add
mov
sahf
ds
jo
jne
xchg
xchg
inc
nop
inc
jmp
jecxz
lods
pop
outsb
mov
pop
dec
shrb
loopne
push
into
aas
call
jo
sbb
pop
sbb
pop
dec
sub
cmc
in
test
stos
int
inc
aas
ss
push
enter
addr16
mov
xor
or
push
push
lret
cmc
jo
jno
fiaddl
push
cld
cmpb
hlt
testb
mov
stos
push
mov
mov
je
adc
pop
fiadds
cmp
push
mov
or
repnz
push
cmc
xor
pop
or
inc
aam
insb
sub
pop
fidivrl
pop
test
pop
inc
js
sarb
pusha
inc
test
das
dec
xchg
dec
push
pusha
mov
rcl
sub
mov
pop
out
pop
insb
fcomip
jno
out
or
shr
outsl
outsb
add
jo
push
jbe
into
subl
pop
outsb
stos
iret
or
ljmp
cmc
sbb
and
sbb
push
pop
fcmovnu
lea
jb
dec
daa
xor
lret
push
pop
xchg
and
sahf
or
mov
cvtpi2ps
xor
jle
cmc
and
push
pop
mov
xor
test
inc
inc
jbe
xor
add
mov
test
adc
aad
nop
jo
arpl
stos
xchg
fxch
clc
cmc
lods
cli
leave
orb
into
daa
sub
sbbl
out
xchg
fidivl
inc
mov
xor
cmp
out
aaa
mov
push
or
loop
mov
fcoms
xchg
outsl
sahf
mov
hlt
push
cli
out
inc
inc
ss
test
mov
test
jmp
imul
jo
sbb
int
pop
inc
outsl
push
xchg
out
shl
jnp
mov
daa
repz
imull
subb
fucomip
aas
nop
nop
inc
dec
xor
pusha
xchg
jecxz
jbe
lea
mov
xchg
arpl
repnz
sub
and
lods
dec
pusha
push
inc
jo
fwait
push
push
xchg
jo
dec
fidivs
pop
or
hlt
sub
lret
push
mov
dec
inc
ja
pop
out
cmp
repnz
inc
pusha
push
popa
hlt
dec
fldl
push
sbb
or
pop
xor
leave
negl
push
mov
adc
jnp
int3
sar
xchg
rclb
dec
xchg
out
add
jbe
lahf
bound
mov
and
arpl
es
sbb
leave
pop
imul
mov
mov
jb
sbb
fs
push
cmp
push
dec
hlt
inc
cmpsb
and
outsb
mov
fwait
movb
dec
fdivr
cmp
jmp
or
andb
loop
out
arpl
jno
lahf
pop
mov
jae
ret
jbe
and
cmp
lock
andl
leave
or
adc
mov
inc
pop
addb
stos
push
lods
popa
js
sbb
pop
iret
sar
fdivrl
mov
lea
fcomip
push
jg
rclb
movsl
and
pop
or
and
dec
and
push
nop
dec
sub
movsl
push
pop
inc
mov
xor
cwtl
dec
fwait
sarb
mov
aaa
jo
out
imulb
pop
ljmp
cmp
xchg
int
sahf
aas
movswl
cwtl
mov
jp
xor
in
inc
mov
jno
imulb
jge
popa
xor
pushf
mov
and
in
outsb
mov
out
fmulp
xchg
sbb
insb
mov
cmpb
testb
xor
outsb
xor
sub
jbe
mov
aam
ja
sub
push
in
ja
icebp
divl
mov
test
xor
mov
pushf
adc
pop
cmc
ss
test
sub
lcall
shrl
out
jbe
lea
shrb
adc
and
cwtl
pusha
ss
fimull
xor
cmp
jae
sub
aaa
jb
mov
and
push
divl
adcb
push
cmpsb
cmc
fcomp
sub
loope
push
das
xor
daa
je
outsl
icebp
cmpsl
jmp
or
pmaxub
xchg
daa
push
insb
dec
inc
dec
stos
imulb
loope
xorb
sbb
mov
fiadds
test
insb
fistps
ljmp
js
clc
repnz
pop
inc
rcrb
ljmp
popa
test
repz
or
mov
jb
outsl
xor
test
jmp
cmc
jbe
fucomp
cmp
fnstcw
cltd
mov
stos
and
into
xor
add
icebp
loope
test
pop
nop
add
push
fiaddl
and
dec
daa
mov
adc
mov
rorb
iret
add
sbb
xorb
sbb
jl
mov
nop
lahf
xchg
ljmp
and
int3
inc
inc
xchg
inc
xor
rcrb
pop
mov
pop
stc
mov
loopne
jg,pn
inc
enter
add
jbe
cmc
inc
mov
in
push
enter
aaa
mov
inc
jbe
sbb
mov
push
inc
lea
roll
push
js
ret
mov
push
test
imul
xchg
loope
aam
fbld
dec
add
fldenv
cltd
and
jne
inc
or
adc
sub
nop
lcall
cmp
xchg
aas
inc
jae
mov
pop
cs
dec
mov
xchg
xor
and
inc
fnsave
xchg
dec
repz
lcall
int
xor
and
push
mov
sbb
xchg
push
push
mov
sub
mov
dec
ja
jecxz
loope
leave
jne
jecxz
mov
xchg
or
dec
dec
or
mov
mov
addb
sarb
adc
insb
gs
jmp
xchg
testl
nop
push
dec
mov
adc
push
sub
loope
hlt
shlb
sbbb
dec
inc
pop
mov
outsb
das
cmpsb
insl
inc
test
xor
test
dec
xor
xchg
aaa
lcall
movsb
stc
lret
popa
mov
cmc
inc
mov
cmp
insb
jecxz
js
add
fwait
pop
out
fimull
das
mov
dec
cmp
outsb
in
popf
mov
ljmp
push
dec
testb
and
cmpsb
jg
imul
or
lahf
mov
push
cld
dec
adc
shlb
int
shll
adc
pusha
mov
stos
xchg
pop
jmp
xor
push
std
pusha
ss
push
ret
pop
insl
fmull
adc
mov
shlb
mov
push
pop
push
mov
ds
ror
ss
loopne
mov
mov
push
mov
sbb
xor
xchg
shrb
jg
in
sbb
nop
ds
lea
rolb
es
imul
sub
popa
shlb
outsb
test
dec
pop
in
fs
jmp
mov
adc
fcomps
repnz
scas
es
xor
or
negl
loopne
pop
jmp
cmc
popa
cmpb
nop
jnp
push
leave
cltd
bound
fldt
sahf
mov
bound
popl
stos
inc
cmpsl
mov
inc
sub
fisubl
in
inc
je
filds
repnz
imul
jne
inc
pusha
add
es
mov
lahf
test
and
mov
mov
sbb
cmp
ja
aam
nop
dec
notl
inc
mov
push
popa
pop
mov
push
outsl
inc
pop
ret
xor
mov
and
mov
or
jmp
xor
popf
jbe
push
add
sub
insb
cmc
rorb
shll
sbb
xchg
aaa
into
je
cmp
push
mov
dec
mov
out
ror
outsb
dec
inc
cmc
push
cltd
mov
pop
adc
mov
and
loope
pop
pusha
movsl
xor
mov
insb
cltd
and
jl
outsl
jae
test
je
enter
jb
je
mov
outsb
movsl
aad
andl
clc
movsl
aaa
out
jo
mov
cmpsl
adc
dec
shl
ja
fdivs
pop
rcl
add
jns
and
hlt
inc
in
dec
cwtl
and
sub
sub
in
inc
push
push
xor
outsb
or
sbb
nop
hlt
push
mov
jbe
mov
adc
scas
mov
mov
push
pusha
je
pusha
int
pusha
fs
pusha
loop
ret
and
popa
out
mov
jne
inc
push
inc
adc
inc
add
stos
out
ljmp
pop
dec
push
fildl
inc
mov
cmp
or
les
mov
and
sub
sub
push
jmp
jbe
mov
push
scas
dec
imul
sub
imul
notl
fldt
test
sub
and
xchg
mov
hlt
loop
mov
jbe
sub
push
scas
scas
leave
hlt
xor
push
insb
jne
jne
fs
jecxz
push
xor
jb
jecxz
cmp
jmp
jbe
das
lahf
sbb
test
xor
xor
cmc
insl
leave
hlt
loop
das
dec
sahf
out
pop
loop
mov
push
lahf
ja
mov
push
xor
dec
frstor
iret
inc
sub
cmc
inc
lods
shlb
pop
loopne
loope
lods
push
push
jbe
mov
inc
xchg
ficoms
and
test
jb
push
push
push
push
pop
loopne
bound
push
and
and
jmp
xchg
stos
testb
lods
and
pop
std
xchg
mov
mov
mov
mov
in
je
movsl
push
out
loope
leave
jne
divl
or
and
in
push
mov
sub
je
aaa
push
sub
mov
jne
testl
and
and
inc
in
pusha
mov
or
dec
out
mov
dec
outsb
dec
push
in
stos
jbe
in
fcmovbe
mov
dec
out
xchg
jo
outsb
data16
jg
push
jmp
inc
pusha
jecxz
fsub
add
notb
jb
and
and
adc
inc
push
sub
negl
pop
test
movsl
in
subl
insb
in
cld
inc
or
mov
loopne
push
adc
and
and
push
jp
pusha
mov
nop
bound
lahf
mov
loope
sbbl
shrb
fiadds
jb
stos
jns
repnz
aaa
pop
lods
push
pusha
in
xchg
jl
sub
lret
xchg
xor
int3
adc
stos
shrb
mov
xchg
pop
outsb
push
out
mov
in
in
mov
sarb
stos
popf
sbb
enter
sub
outsb
popa
stos
sar
aam
sub
xchg
jb
stos
and
divb
jae
jbe
adc
rcr
inc
cmp
sbb
bound
rolb
add
xor
mov
add
xchg
add
bound
push
push
xchg
sbb
pop
mov
imul
stos
pushf
adc
pop
shlb
push
stos
cmp
xchg
popf
into
sub
lods
aad
dec
out
insb
call
divl
in
mov
push
dec
imul
mov
push
jmp
iret
rcrl
std
loop
fwait
dec
lret
pop
push
ret
and
jmp
imul
into
lret
loop
xchg
adc
ffree
jmp
test
mov
stos
mov
xchg
jge
push
or
mov
mov
sbb
and
adc
loope
je
inc
orl
lcall
push
mov
lods
nop
aaa
jne
pop
mov
sbb
fildl
mul
ficoms
add
push
out
repnz
les
lea
dec
cmp
lahf
cmp
clc
mov
xorb
dec
pop
cmpsb
add
mov
mov
inc
call
jmp
push
inc
sub
sbb
adc
aas
push
xor
inc
jnp
popa
jbe
repz
jge
sub
dec
jo
sbb
xchg
out
pop
xor
das
and
aaa
add
mov
repnz
fwait
pop
pushl
andb
xchg
push
add
jb
fiaddl
rcrl
jbe
neg
inc
fidivrl
sub
jne
out
popa
pop
xor
repnz
or
inc
push
xchg
outsb
inc
xor
cmpsb
inc
xchg
subl
lret
jnp
jl
cmpl
push
xchg
fldt
mov
aad
and
inc
ret
ficompl
jno
in
mov
stos
or
shrl
xor
rcl
insb
in
lock
hlt
cmp
nop
cmp
sub
dec
fisttps
stos
cli
femms
jmp
in
addl
cmpb
pop
jg
push
xor
jecxz
into
mov
add
jb
sbb
pop
pop
cmp
push
bound
aaa
xchg
ja
aad
sub
push
insl
mov
xchg
push
das
and
jbe
lahf
dec
sbb
inc
sub
jecxz
push
es
inc
xchg
mov
loop
xchg
jbe
jo
xor
divl
imul
loopne
jle
shlb
push
cwtl
add
sbb
push
inc
jno
popa
iret
cmp
mov
rclb
scas
icebp
sahf
cltd
stc
mov
pusha
filds
xor
shlb
outsb
ficomps
aas
nop
iret
bound
jno
into
comiss
pop
test
inc
inc
rorb
nop
cmp
xor
mov
aas
test
mov
dec
rol
lock
mov
jmp
mov
imulb
add
es
ljmp
jb
cmp
mov
out
sbb
arpl
inc
xchg
dec
xor
lods
punpcklbw
test
loop
and
jmp
fcomps
mov
jecxz
sbb
cmp
mov
leave
cwtl
cmc
adc
adc
outsl
adc
loopne
divb
dec
and
negb
outsb
stos
orb
and
xchg
outsb
inc
fisubl
mov
mov
in
and
pusha
pop
mov
cwtl
mov
addl
je
jnp
inc
jns
stc
xlat
mov
dec
stos
push
and
outsb
push
insb
jle
cs
xchg
cmc
dec
das
push
daa
cmc
mov
pop
push
pop
cmp
popf
lahf
add
mov
testb
outsb
fimull
js
jle
test
fwait
out
insl
insb
mull
xchg
int3
fimuls
psadbw
mov
push
cwtl
fbstp
dec
cmc
inc
out
outsb
scas
add
jbe
inc
repz
and
ds
pop
push
arpl
sti
add
pop
pop
dec
pop
addb
sub
mov
mov
dec
mov
push
call
mov
std
xor
loope
dec
jle,pt
pop
mov
xchg
inc
orl
cwtl
idivb
mov
push
dec
push
inc
inc
mov
mov
insb
inc
icebp
outsb
int
int3
cmpsb
adc
cmp
enter
xchg
push
pop
fnstenv
lock
ss
mov
push
je
aad
ds
jbe
stos
mov
shll
pop
jb
roll
popa
in
outsb
sub
add
or
jl
adc
nop
pop
or
subl
add
ss
add
dec
das
xchg
push
or
xchg
icebp
das
scas
or
cmp
lahf
pop
sbb
je
cmpb
mov
arpl
iret
ljmp
mov
cmp
stos
dec
mov
jp
outsb
pop
cwtl
out
push
cmc
out
loope
sbb
jecxz
jmp
sbb
repz
aad
les
jl
pop
pop
insb
imul
and
fucomi
pusha
jmp
cmc
ds
test
stos
xlat
aaa
mov
xchg
inc
jg
addr16
call
mov
fcmovnu
sahf
dec
push
mov
and
push
ffree
test
fdiv
les
dec
push
sbb
inc
or
sub
loopne
not
pop
bound
dec
cmp
dec
adc
test
outsb
pop
dec
mov
and
in
stos
int3
push
dec
outsb
divps
popa
sahf
dec
lahf
nop
add
subb
xchg
lods
mov
cmc
andl
jb
rorb
insb
dec
fistpll
push
xorl
inc
or
push
jbe
and
mov
js
pusha
xor
lahf
lea
mov
call
push
out
mov
sbb
sbb
ja
inc
jg
sub
cmp
sub
adc
dec
jb
sbb
xor
xchg
jecxz
mov
arpl
add
dec
pop
mov
insb
repz
cmc
and
dec
lahf
or
cmc
cmp
jecxz
push
movlps
cmp
das
push
dec
stos
stc
imul
push
dec
or
mull
inc
gs
ss
bound
in
jecxz
into
jno
and
push
mov
in
rcl
mov
dec
int3
mov
fisubrl
inc
sahf
outsb
xchg
fmull
mov
inc
andl
in
xchg
cmp
pop
xchg
xor
out
outsb
test
pop
xor
repz
test
enter
and
ss
pop
adc
gs
fbld
inc
mov
sarb
dec
push
out
jns
cmp
int
mov
jge
jne
sub
push
xchg
sbb
pushf
jb
pop
fists
es
jle
aad
xchg
jne
mov
mov
nop
imul
imul
scas
inc
mov
rolb
cmpsb
pop
jae
orb
outsb
ja
mov
jecxz
and
add
and
in
je
xchg
inc
and
mov
cmp
mov
pop
imul
lret
xor
mov
jo
mul
pusha
jbe
dec
inc
cmc
stos
push
adc
mov
loope
fs
cmpsb
xchg
sbbl
loop
add
decb
movsb
xor
rolb
int
stos
sub
ljmp
insb
fistl
stc
out
inc
add
shrb
cltd
fidivrs
les
sbb
jno
cltd
pop
stos
ja
stc
clc
add
sarl
cld
jle
mov
jmp
sub
sub
pop
push
push
xchg
repnz
add
xchg
xchg
movd
add
hlt
aad
dec
jp
out
jbe
push
iret
adc
jno
mov
idivb
inc
or
sbb
jg
inc
mov
pop
sub
std
ds
dec
push
mov
inc
arpl
cmpsl
repnz
incb
xchg
and
mov
xor
pusha
xchg
js
pop
xchg
cmc
pop
mov
dec
mov
icebp
jge
cmp
mov
jne
sbbb
mov
gs
outsb
cmc
mov
int3
mov
lahf
mov
scas
in
cmpsb
pop
fldl
vmovdqu
in
fisubrl
hlt
jbe
pop
push
dec
aad
cmp
outsl
cmovp
arpl
mov
imul
pop
fdiv
and
cli
mov
mov
es
jb
dec
ss
ss
mov
push
sti
jo
inc
inc
dec
or
push
mov
jbe
stos
mov
outsl
push
dec
pusha
bound
in
pop
ret
ror
xor
stos
cmp
stos
xchg
arpl
aaa
mov
push
sbbb
test
inc
test
ret
shrb
mov
dec
mov
bound
pop
add
dec
data16
inc
leave
inc
leave
cmpsl
aam
popf
adc
inc
adc
adc
xchg
hlt
je
enter
stc
test
sub
out
inc
loopne
scas
pusha
push
rep
insl
outsb
dec
sbb
add
dec
ret
push
in
and
in
pop
mov
je
fwait
shl
ret
inc
mov
in
cs
shlb
sbb
sbbb
mov
sub
push
idivb
mov
insb
lahf
jb
sbbb
mov
lea
arpl
cmp
loopne
in
jae
inc
out
iret
sub
test
lcall
cmp
jle
jne
xor
inc
mov
shll
test
shrb
jecxz
jbe
imul
pop
out
ds
inc
pop
dec
mov
push
fsubs
ret
out
mov
ja
mov
mov
jge
mov
or
mov
vpaddq
xor
outsl
fsubrl
fs
pop
pop
xor
pop
xchg
or
sahf
js
inc
adc
stos
mov
mov
xchg
ret
mov
shl
shl
mov
inc
push
in
push
js
ds
jbe
jno
sbb
sub
add
jne
sti
insb
mov
shlb
cwtl
test
mov
and
cli
mov
push
and
call
in
xor
imul
mov
jnp
cmp
dec
mov
and
in
sbb
or
imul
push
jecxz
sbb
add
rcl
ficoml
int3
pop
inc
and
andb
pop
mov
sarl
xor
imul
inc
fdivl
ljmp
or
sub
push
enter
js
clc
mov
pushf
push
ljmp
lods
jne
repnz
in
les
pop
xchg
and
sarl
ja
insb
pop
and
leave
jecxz
dec
popa
push
loopne,pt
xchg
imull
daa
pop
pop
lahf
xchg
mov
arpl
and
mov
mov
mov
hlt
inc
mov
jo
test
sarl
mov
push
pop
xchg
pop
into
data16
pop
cmp
mov
insb
les
xor
js
and
cmp
or
test
mov
mov
loop
roll
aaa
stc
hlt
sti
imul
push
pop
push
adcl
aam
push
test
mov
testb
negl
je
into
imul
jbe
mov
cmc
inc
mov
int3
sbb
repnz
add
repnz
xor
sti
fldenv
ljmp
in
xchg
outsb
mov
mov
inc
mov
incb
sbb
fstps
aam
xor
mov
mov
jecxz
cmc
jbe
gs
push
xlat
test
jb
popa
xchg
xchg
cmpsl
stos
test
lret
pusha
test
mov
adc
dec
das
shrb
jbe
or
sti
inc
add
ret
cmp
mov
mov
sub
mov
enter
jno
adc
or
pop
or
xchg
popf
mov
shlb
mov
subl
or
outsl
xor
jp
jo
adc
lret
test
je
cmp
repnz
inc
and
scas
pmaxub
mov
out
je
addr16
outsb
sub
les
ficompl
das
outsb
xchg
lret
inc
pop
hlt
nop
arpl
leave
push
rolb
rorb
je
and
pop
imul
jmp
dec
aaa
xchg
adc
inc
scas
push
roll
arpl
call
shlb
imul
mov
dec
dec
and
insb
fnsave
sti
jle
inc
add
ss
pop
sbb
into
or
push
mov
loope
shlb
push
mov
mov
xchg
shl
sub
ss
shlb
mov
movsb
sub
jb
cmpsb
mov
fidivrl
pop
mov
and
inc
push
jo
iret
or
adc
inc
mov
push
push
int
ja
out
repnz
jbe
lea
jp
jae
mov
aas
arpl
xchg
test
push
and
mov
outsb
push
les
orb
fstpl
es
jo
pop
cld
in
mov
fwait
sbb
mov
lea
andb
insb
cmpsl
ljmp
rcl
int
je
call
jle
push
imul
ficoms
xor
adc
inc
rol
mov
lods
lcall
fs
movsl
push
sbb
cmp
dec
cmpsl
adc
pop
filds
and
or
adc
sub
and
adc
jmp
outsb
fst
mov
mov
int3
xor
xchg
xchg
xor
push
loope
mov
shl
clc
data16
or
rorl
push
and
inc
fcmovbe
jno
aad
inc
mov
idivb
repnz
adc
aas
rcrb
pcmpeqb
dec
inc
inc
insl
xchg
loop
stos
adc
out
filds
outsb
lcall
int3
mov
mov
sbb
jnp
xor
int
sub
js
xchg
xor
jne
mov
repnz
adc
jp
loope
mov
cmp
push
push
popa
iret
insl
movl
mov
mov
mov
es
or
cmpsb
mov
stos
xor
lods
push
jecxz
test
inc
cld
push
divb
test
jae
leave
fsubs
aad
mov
pop
mov
add
into
sub
lahf
dec
es
mov
inc
xor
xor
jne
testb
ljmp
loope
jb
inc
mov
mov
dec
adc
or
mov
jl
and
aad
sub
and
xchg
test
lret
ja
lock
jb
pop
stos
xchg
jp
sbb
xchg
jmp
jecxz
add
cmp
aas
icebp
aaa
push
or
insb
outsl
je
in
lcall
inc
xchg
jae
xor
mov
sahf
mov
sbb
or
hlt
jne
push
loop
out
ds
xchg
fisubs
das
rcrb
xor
fsubl
xchg
jne
popf
out
or
adc
fisubs
movsl
jmp
inc
sub
insb
push
rclb
repnz
iret
outsb
in
repz
and
sti
dec
mov
popa
xchg
inc
mov
pop
jg
inc
fwait
gs
inc
and
ss
int3
mov
gs
in
incb
repz
cmp
cmpsl
jge
lea
mov
push
pusha
push
imul
test
rcl
xor
ja
aad
xor
leave
mov
adc
mov
mov
sbb
insl
lods
jbe
inc
dec
test
jmp
xchg
mov
pusha
add
and
sub
push
fmull
fldt
ret
dec
sbb
rcll
not
insl
push
or
cltd
cmc
fstps
sbb
mull
or
pop
jne
test
dec
jno
mov
aaa
repnz
adc
adc
data16
imul
xchg
inc
inc
push
shll
ds
cmc
sbb
shll
mov
outsb
mov
jecxz
lret
push
imul
jno
stc
and
dec
xor
mov
notb
mov
ja
cli
sbb
insl
fstpt
jecxz
shl
dec
pop
inc
cmp
fs
imul
inc
dec
push
sub
mov
outsl
inc
test
sub
cli
or
cmc
pop
add
inc
arpl
mov
dec
into
pop
jo
inc
or
mov
xor
ss
and
in
jge
daa
jecxz
out
bound
cmpsl
outsb
xchg
ret
movsb
std
sahf
in
cwtl
je
mov
test
xor
mov
mov
and
les
pop
inc
lret
dec
mov
cmp
lods
lods
std
imul
das
adc
ljmp
shlb
data16
lods
dec
cmpsl
shl
xchg
sbb
push
pop
inc
sub
and
add
inc
lret
js
dec
stos
fildl
das
pop
fsubp
add
test
push
shlb
fsub
push
and
aad
cmc
fcoms
pop
repz
popa
cmp
hlt
mov
shl
pop
js
and
aad
psraw
jbe
ret
inc
sbb
push
push
pusha
je
stos
or
inc
lret
xor
mov
fldz
scas
aaa
int
lret
adc
mov
mov
inc
je
xchg
jbe
inc
out
mov
add
cmc
pusha
jecxz
jbe
and
xlat
pop
sbb
insb
out
loop
cmp
das
lods
mov
jbe
loopw
hlt
cwtl
sub
nop
jo
mov
je
subb
dec
fidivrl
mov
push
xlat
rorb
pop
or
nop
lods
cwtl
push
ret
leave
test
mov
cltd
lret
and
jbe
adc
mov
cmc
les
into
das
insb
aaa
cli
jecxz
xchg
leave
inc
xor
shrl
dec
outsb
sub
cmc
pop
out
dec
add
rol
bound
out
insb
mov
jge
push
push
testb
adc
cs
stc
leave
outsb
sarb
push
xlat
stos
inc
rorb
sub
sbb
jge
dec
ret
push
mov
hlt
xor
loop
jg
inc
mov
xchg
das
ja
push
mov
insl
jnp
subb
lods
xchg
mov
adc
jg
ficomps
push
stc
rclb
incb
pushf
mov
das
lret
cmpsl
sub
fidivrs
daa
filds
cwtl
jne
xchg
in
push
test
jo
mov
and
cmovb
and
or
inc
add
hlt
inc
mov
or
or
sbb
add
mov
in
mov
jmp
push
loope
test
dec
pop
dec
jp
out
fidivl
cmc
repnz
jl
jo
cmpsb
or
jb
dec
daa
cmpb
mov
sbb
addr16
arpl
and
mov
adc
shll
lcall
inc
jp
fdivrp
mov
jge
push
in
mov
fstps
mov
mov
es
inc
ss
inc
fistpl
jle
sub
ret
mov
sarb
mov
mov
add
jae
push
andl
or
cmc
jo
aas
push
sbb
dec
or
shlb
push
addr16
pop
not
cmc
jbe
stc
out
cltd
dec
push
out
jecxz
mov
cli
xor
out
add
jg
and
testl
pop
mov
mov
scas
fnstenv
daa
inc
in
cwtl
mov
insb
imul
mov
xchg
pushf
xchg
push
or
repz
cmp
inc
subb
cmp
add
and
jae
or
mov
orl
jno
pop
sbb
sub
jb
adc
xlat
inc
fiadds
mov
sub
sub
shlb
rolb
es
inc
push
adc
testl
sub
leave
rol
test
sbb
mov
jo
inc
stos
pop
fs
cmpsb
and
divb
inc
je
ljmp
ss
bound
jge
adc
jmp
lahf
dec
cmp
ljmp
mov
fidivs
pop
rol
lea
mov
pop
aad
push
loopne
rorl
int
sub
lods
xor
pop
shrb
aas
pop
cld
lahf
adc
dec
cltd
pop
adc
jns
push
mov
shr
ljmp
pop
cmpsl
xor
mov
cmpsl
cmc
movsl
jbe
xor
sub
cmpl
rorb
pusha
sub
dec
sbb
sbb
jmp
jecxz
mov
inc
ja
pop
xlat
jno
test
pop
jg
lods
shlb
push
lcall
push
add
out
xor
xchg
inc
xor
popf
in
test
daa
sub
scas
ljmp
mov
lds
pop
xchg
mov
push
outsb
push
divl
arpl
mov
cmp
sub
dec
jbe
stos
xor
pop
adc
insl
inc
xor
or
enter
call
in
rolb
std
rcll
push
jne
dec
inc
mov
idiv
mov
inc
sub
imul
loope
mov
jecxz
in
xchg
ss
and
jbe
sbb
loop
cmpsl
and
cmpsb
aaa
enter
insb
mov
std
cmc
xor
xchg
cmp
test
icebp
sub
adc
cltd
push
fnsave
loope
xor
fdivrl
movsl
ret
pop
mov
stc
sbb
jg
mov
shl
insl
out
bound
sbb
sbb
cmp
sbb
pop
xchg
and
xchg
mov
daa
push
cmpsl
push
in
shlb
jo
mov
adc
hlt
fdivrp
and
pop
jbe
push
push
xchg
call
aaa
jmp
std
jmp
fs
sub
jl
clc
push
sub
jb
cs
loope
mov
xor
push
inc
mov
fs
dec
cmp
leave
dec
jb
stos
lcall
movsb
xor
push
push
adc
pop
sub
xchg
lret
or
sub
outsb
inc
arpl
rorb
aad
dec
push
test
cwtl
out
iret
in
sti
enter
pop
adc
dec
jbe
jb
and
cmp
inc
add
mov
sti
sub
xor
xor
cmc
ljmp
jbe
push
decl
jmp
and
or
ud1
dec
mov
jle
pop
bound
xor
pop
mov
testb
pop
inc
push
aaa
sub
divb
mov
fwait
cmp
inc
jbe
mov
jp
sahf
je
mov
inc
xchg
xor
nop
push
add
adc
mov
mov
iret
stos
ljmp
sub
fsubrl
hlt
rorb
sub
xlat
or
ljmp
jecxz
aam
fistpll
aam
ss
stos
imul
enter
inc
ljmp
pop
dec
imul
cmc
cmp
es
lds
dec
and
xor
sti
ljmp
sbb
or
or
into
out
xchg
loop
lret
inc
adc
jmp
in
addb
push
and
or
cmpsb
stos
jmp
jnp
inc
xor
hlt
sub
jmp
jbe
das
add
jmp
or
out
idivb
pop
enter
dec
popf
mov
mov
ss
popa
jecxz
mov
mov
inc
rclb
fabs
ss
mov
jle
aad
les
mov
sbb
sbb
rorl
das
xor
jle
clc
sbb
push
ljmp
ljmp
loopne
cwtl
daa
insb
fcoml
clc
xchg
loop
in
outsb
sub
repnz
push
aas
insl
pop
push
jb
inc
in
rcr
mov
std
in
adc
mov
aaa
mov
mov
test
adc
inc
int
loop
lock
mov
and
jae
jbe
rorl
ljmp
clc
lock
dec
andl
std
push
cli
sbb
scas
sub
shrl
rolb
xlat
pushf
mull
out
add
cltd
sahf
sub
inc
lret
arpl
jecxz
xchg
xorl
xchg
ljmp
roll
xor
lds
sbb
sbb
pop
mov
inc
jg
adc
jne
inc
and
jge
stos
push
dec
inc
iret
jbe
or
xchg
inc
popa
fisubrl
mov
dec
leave
fadds
push
popf
aad
out
fistps
mov
jmp
inc
dec
jae
xor
pop
nop
lods
push
mov
test
rclb
pop
and
leave
ja
ljmp
popa
repnz
repnz
pop
add
jmp
xchg
push
push
shr
and
pop
mov
aam
ljmp
das
insl
gs
fmull
outsb
mov
enter
fistl
dec
jg
adc
shlb
jge
pop
adc
push
sub
repnz
cmp
cltd
and
xor
jne
daa
lret
ret
imul
ret
and
xor
pop
ljmp
aaa
movsl
lret
and
dec
cmpb
popa
mov
xor
jge
cs
jbe
sbb
shrl
subl
mov
sub
shrl
add
es
insl
dec
inc
sbbb
inc
repnz
jle
aam
aas
pop
ror
push
cmpsl
inc
js
ret
push
iret
ret
xchg
jae
adc
imulb
stos
negl
dec
pop
pop
rcl
jmp
notb
add
jp
or
jle
xor
inc
pop
out
push
dec
pop
cmp
xchg
popf
add
adc
ret
dec
lahf
imull
aaa
add
into
sub
test
cwtl
mov
ja
adc
stos
xor
leave
aaa
iret
mov
test
cmp
loop
out
sarb
negl
jnp
jb
jbe
adc
inc
lods
jae
push
sub
or
cli
cld
inc
sbb
sub
repz
pop
xchg
xor
fsubs
stos
movsl
cltd
sti
sbb
aaa
int3
jg
fimuls
les
outsb
inc
out
test
and
sbbl
jmp
int
icebp
in
inc
mov
or
push
popf
xor
sub
mov
ja
jecxz
pop
lcall
xor
out
sbb
test
sbb
xlat
jns
or
add
sub
aad
imul
push
adc
jne
outsb
gs
dec
xchg
ja
arpl
jnp
mov
sub
fs
cwtl
notl
dec
or
cmp
fcomps
jmp
shlb
dec
test
push
or
cmpsl
push
mov
xchg
mov
push
sub
xor
and
fs
xchg
push
sbb
jae
call
pop
pop
mov
push
pop
ss
daa
push
xchg
xor
and
addr16
push
nop
cmpsb
shlb
fisubrl
stos
loope
mov
mov
or
lods
mov
adc
push
repz
out
lea
jo
dec
cmc
into
stos
lret
mov
push
jne
cmc
mov
jbe
mov
int
cmp
clc
das
sbb
sbb
xor
jb
stos
xchg
xchg
arpl
jmp
stc
mov
push
pushf
jnp
insl
orl
sub
ds
sti
push
add
lods
mov
icebp
push
inc
int3
jne
xchg
jp
dec
testb
jmp
add
insb
cmpb
jl
outsb
iret
push
cmpsl
inc
xchg
xchg
xor
jmp
push
stc
adc
push
dec
or
xchg
stc
pop
cmp
call
int
in
sub
pop
ficoms
mov
xor
xchg
outsb
in
jge
imul
mov
out
xchg
in
fmuls
ljmp
xor
cmpsb
jg
fsubrp
cmpsl
inc
push
arpl
pop
pop
mov
push
insb
and
jae
xchg
lods
mov
aaa
sbb
mov
dec
mov
xchg
testl
or
mov
inc
or
cld
inc
insb
mov
into
push
mov
daa
loope
ret
mov
outsb
adc
adc
mov
mul
movsb
jbe
mov
push
mov
adc
xchg
inc
into
fs
aad
pop
popa
ret
jp
call
mov
mov
cmp
or
sub
pop
lods
jmp
inc
into
xchg
ja
pop
inc
imul
dec
sub
mov
jecxz
pop
ret
mov
inc
sbb
outsl
ljmp
xor
inc
cmpsl
and
outsb
cmp
rolb
ret
stos
or
push
outsb
es
pushf
mov
or
test
rcrl
mov
shlb
jp
and
push
imul
inc
outsb
sub
and
iret
xor
pop
mov
in
sbb
jbe
jo
rorb
pop
add
pop
ret
push
ja
rclb
mov
mov
and
in
jb
lahf
lret
inc
dec
xor
mov
xchg
stos
cmp
pop
mov
mov
fsubl
xchg
add
loop
xchg
cmp
gs
lret
lea
add
or
add
sbb
xchg
or
xchg
jp
jp
rcr
pop
in
xchg
cmc
daa
cltd
bts
push
addr16
cli
dec
faddp
and
mov
pop
and
dec
jmp
lods
or
pusha
ja
and
lods
xchg
push
out
sbb
sbb
aas
sbb
stos
lods
ficompl
push
sub
cmc
push
inc
cmp
mov
fucomip
imul
push
sbb
xor
ljmp
sub
cmc
addr16
dec
add
je
lock
pop
push
and
lds
sbb
xchg
cmp
jp
jno
mov
outsl
mov
pop
lcall
add
cmc
adc
cli
xor
sub
hlt
ficomps
sbb
adc
sti
roll
stos
and
loope
imul
xchg
dec
xor
push
pop
arpl
sub
and
inc
bound
scas
jns
mov
bound
xor
jne
test
jno
push
daa
pop
andl
cmc
lret
rol
cmp
cs
mov
jo
outsb
mov
daa
sbb
sub
sub
sarb
lcall
push
sub
xor
aaa
push
jge
movsl
ljmp
jne
in
les
or
repz
jge
xor
mov
sub
js
mov
sub
adc
std
sub
mov
call
mov
ficoml
inc
cmp
xchg
mov
cmc
aad
pop
cmp
mov
pop
add
ljmp
stos
dec
push
mov
push
test
push
repz
jg
pushf
mov
aad
inc
pop
xor
mov
popf
mov
sub
pusha
dec
loop
push
jmp
outsl
int
dec
cwtl
push
push
pushl
dec
popa
repz
sbb
inc
fsub
nop
in
fisttpll
aad
ficomps
insl
into
outsb
fidivs
inc
fwait
sbb
ljmp
cmp
add
fsubrp
pop
push
fsts
pop
cwtl
arpl
push
mov
cli
roll
sbb
inc
sbb
mov
adc
movsl
jecxz
outsb
stos
mov
xchg
mov
and
insl
push
sub
loop
outsb
icebp
jl
loop
xor
cmp
mov
mov
dec
scas
sbb
push
ds
mov
push
push
loope
repz
rolb
pop
mov
pop
and
out
jg
roll
sti
pop
cmpsl
xor
mov
dec
ljmp
bound
dec
mov
mov
shrb
leave
mov
aaa
dec
loope
repz
dec
out
xchg
out
mov
ficoms
jmp
inc
hlt
adc
cmp
cltd
mov
imul
jecxz
in
sti
aaa
mov
in
and
loopne
or
bound
cmpsb
ljmp
jge
mov
stos
push
pop
jmp
out
pop
loope
imull
out
xchg
dec
enter
bnd
sbbb
xchg
add
adc
inc
mov
jl
dec
mov
out
shlb
pushf
xor
lcall
cmp
adc
lods
mov
pop
stos
mov
insl
xchg
pop
dec
xlat
shll
inc
fwait
dec
jno
repnz
push
enter
and
sub
push
dec
in
and
ja
cmpsl
jb
loope
jo
fcoms
call
lods
mov
imull
mov
mov
and
sub
fucomp
jbe
mov
outsl
mov
aaa
ss
in
push
imul
int3
bound
mov
cmc
out
jbe
rep
mov
and
and
jg
cmp
sub
imul
xor
mov
xor
cltd
outsl
aaa
shrb
jecxz
idivl
arpl
adc
cmpsw
fsubrp
in
fwait
test
xchg
sub
or
aad
jp
nop
inc
testb
cmc
shlb
cmp
into
stc
and
jecxz
call
and
arpl
idiv
test
pop
je
test
dec
xchg
inc
mov
je
cmp
dec
push
or
pop
mov
mov
mov
jle
loop
adc
mov
xor
jno
in
cs
jo
das
jnp
pop
es
imul
jns
shll
inc
cmp
push
xchg
dec
adc
test
jae
fdivl
pusha
jmp
mov
iret
sub
imul
add
daa
insb
outsb
push
mov
inc
popa
sbb
xchg
addr16
sub
sub
jns
gs
idivb
test
mov
pop
in
sub
aam
into
push
cmc
jbe
or
add
pusha
ljmp
xchg
insb
xchg
sbb
rorb
repnz
cwtl
fwait
mov
push
incb
and
push
in
xchg
mov
adc
popa
repnz
cmpsl
repnz
xor
repnz
aaa
daa
xor
and
push
mov
aam
incb
rclb
xor
clc
push
sub
aam
pop
and
push
cmc
xor
mov
and
mov
repz
imull
pop
out
cmpsl
stos
xor
cld
stos
pop
or
popf
clc
rcl
es
gs
rorb
loope
jg
mov
xor
or
bound
pop
repnz
rorb
fisubl
xchg
ds
and
add
cwtl
gs
push
sbb
jae
icebp
mov
xor
fdivrl
xchg
enter
in
jg
ret
dec
lods
jae
sti
addr16
nop
or
dec
dec
pop
in
insl
je
cli
push
and
cmpsl
fnstcw
pusha
mov
mov
cmp
sub
movl
lds
or
sbbb
push
ret
add
imul
out
out
out
push
xlat
lret
push
enter
les
lahf
movsl
bound
stos
mov
in
js
cmp
popf
and
cs
push
adc
ljmp
insl
out
cmp
imul
mov
xchg
xchg
ljmp
fbld
arpl
and
mov
xchg
sbb
in
and
pop
ljmp
jo
dec
sub
xchg
mov
jbe
out
push
mov
add
inc
into
in
xor
jmp
jnp
adc
sbb
ja
push
xor
push
mov
xor
out
ficoml
jns
jge
sbb
outsl
mov
add
xchg
mov
sub
divl
and
sub
bound
pop
adc
sbb
gs
repz
mov
pop
inc
icebp
out
aad
jmp
push
lock
mov
mov
outsl
outsb
xchg
inc
ret
sub
push
jecxz
push
addl
aaa
mov
mov
mov
mov
sbb
outsb
ja
xchg
aaa
adc
cmpsb
ljmp
xor
stos
ss
push
fmull
and
hlt
push
cli
jmp
and
dec
mov
and
lret
pop
pop
cmc
aas
adc
mov
dec
push
aaa
lret
jne
in
subl
addr16
pop
mov
sahf
jp
mul
jmp
mov
inc
xchg
dec
xchg
cwtl
loope
int3
push
cmc
cmp
sub
scas
xor
arpl
sub
and
stos
inc
outsb
lret
es
movsl
mov
adc
rcrb
loope
adc
dec
das
jae
movsl
jmp
sub
icebp
push
rorb
xchg
js
push
mov
sti
test
fistl
xor
mov
mov
loope
jecxz
or
lahf
outsb
inc
lcall
sar
sbb
andl
outsb
das
lcall
lcall
ss
insb
mov
cmp
jnp
test
push
sbb
mov
ljmp
mov
sti
test
aad
push
sub
and
iret
fildll
divl
jo
scas
shrb
xor
sub
inc
pop
cmpsl
push
stos
xchg
inc
cli
pop
addr16
inc
testl
imul
mov
mov
insb
loop
stos
divb
push
sub
sub
loope
in
push
jmp
mov
outsb
leave
fstl
stc
shlb
cmp
add
or
dec
pop
jbe
xlat
or
les
inc
icebp
fmull
add
mov
sbb
jb
push
ss
mov
ficompl
inc
xor
nop
push
cmpsb
sbb
xor
hlt
jns
mov
xchg
lret
xlat
jecxz
jge
cmp
stc
rorb
shl
jecxz
repnz
mov
mov
bound
js
test
hlt
mov
lods
push
xchg
mov
push
movsl
push
add
data16
jbe
jae
or
xlat
shll
outsb
pop
stc
mov
mov
stos
jo
jbe
je
adc
movsb
sub
xchg
arpl
and
loope
test
add
popa
xchg
rcll
test
inc
hlt
jb
push
mov
icebp
push
aam
out
add
mov
in
cmc
cld
dec
mov
aas
outsb
in
jb
out
sbb
rcll
jne
pop
cmc
shrb
push
add
shrb
sub
popf
pop
cmp
jbe
mov
inc
cwtl
xchg
in
cmc
int3
pop
test
shl
and
xlat
mov
mov
xor
scas
das
mov
mov
outsb
add
lahf
scas
mov
inc
sbb
sbb
jp
ja
daa
pop
push
pop
xchg
hlt
or
sbb
inc
mull
movsl
fdivrs
orb
testl
dec
xchg
add
push
fsin
xchg
jae
inc
movsl
outsb
xor
call
and
sbb
outsb
push
jg
ret
xchg
sub
in
jg
in
scas
dec
shrb
aam
jo
ja
sar
insl
mov
mov
mov
js
popa
cmp
sbb
test
pop
push
lods
test
aad
sahf
xor
orb
push
stc
xor
outsl
dec
push
sbb
pop
bswap
dec
sbb
in
test
inc
dec
mov
push
enter
cld
cmp
fidivs
sub
push
or
pop
insb
sarb
rol
loope
mov
fnstenv
inc
mov
js
ljmp
enter
lret
stc
xor
aas
and
imulb
popa
outsb
sub
lods
inc
out
add
mov
stc
arpl
pop
fiadds
mov
ret
adcl
js
or
rcr
arpl
dec
fbstp
dec
decl
jecxz
jbe
adc
pop
push
xor
ljmp
insb
lahf
push
les
mov
inc
cld
js
pop
les
rclb
mov
dec
outsb
lock
fisttpll
dec
adc
call
xor
cmp
mov
cld
xor
les
das
shll
mov
xor
call
ja
rcr
cmp
dec
xor
cmc
in
insl
in
je
sub
dec
outsb
test
push
push
adc
mov
mov
rclb
mov
lods
mov
jp
jl
das
add
fwait
inc
xchg
pushf
and
fwait
mov
cmp
dec
loope
fiadds
inc
test
cmc
mov
xor
frstpm(287
je
jbe
xchg
xor
movl
es
mov
jo
mov
mov
mov
stos
cs
insb
jbe
add
outsb
mov
shrb
jb
sbb
xchg
aas
movsb
jbe
and
inc
or
cmpsb
mov
repz
xchg
stos
das
xor
ss
repz
cmpsb
dec
rorb
add
xor
adc
jg
mov
test
int3
jmp
mov
divl
enter
push
shrl
les
leave
in
fists
mov
outsb
inc
sub
push
insl
sbb
je
test
fimuls
repz
shlb
scas
stos
test
dec
jmp
je
push
add
dec
jbe
mov
fdivr
mov
fwait
mov
or
pop
scas
hlt
loope
outsb
jno
rcrb
xor
lcall
sbb
pop
shlb
xchg
mov
and
insb
jae
stc
pop
mov
sub
bound
repnz
jno
mov
pusha
fnstenv
mov
lods
test
dec
leave
dec
int
movsb
mov
lret
mov
pop
mov
jbe
dec
aam
or
inc
push
xchg
jns
ss
es
addb
jp
push
dec
daa
mov
xchg
mov
push
inc
ret
xor
pushf
lret
out
mov
in
rorb
imul
aaa
dec
pop
bswap
es
es
and
inc
jne
hlt
pop
sub
adc
mov
mov
adc
pcmpeqw
cwtl
hlt
movsl
jno
jmp
jne
xor
pop
inc
inc
xlat
es
shl
or
inc
adc
mov
push
loop
jbe
gs
cmp
xchg
test
sbb
cmpb
fsubrs
fnsave
push
cmpsb
subb
mov
arpl
lods
gs
outsl
test
call
xchg
call
das
inc
popa
sarb
pop
adc
jae
fsub
aaa
cmp
hlt
aam
push
mov
and
iret
shlb
sbbb
xor
mov
mov
jo
fnstsw
testl
popa
aas
mov
or
arpl
popa
add
shlb
test
stc
pushf
arpl
gs
mov
ret
fsubrs
mov
lds
rclb
and
jbe
outsb
inc
aad
pop
rorl
xor
out
add
dec
or
fldt
push
scas
inc
dec
xor
or
xor
lret
pop
shrb
add
push
cmc
in
jns
es
pop
gs
cld
inc
imul
mov
inc
jnp
pop
lds
push
lahf
in
mov
add
lahf
push
out
mov
push
cmc
rolb
mov
clc
jo
sub
aaa
dec
sub
inc
and
daa
adc
stos
ljmp
adc
stos
adc
dec
jl
rorb
scas
push
aas
push
aas
outsb
pop
sub
jle
xchg
lods
pop
dec
pop
lret
inc
mov
xchg
outsl
outsb
sbb
out
sti
je
jmp
es
sbb
imul
sbb
mov
mov
subb
aad
and
jne
push
lret
cmc
xchg
jbe
mov
push
pop
add
pushf
jbe
jbe
std
cltd
cmp
mov
push
sar
or
div
jb
out
pop
lahf
or
push
mov
fisubrl
push
jp
lds
fcmovnu
ds
je
inc
or
xor
mov
ds
mov
test
jmp
js
aad
xor
pusha
pop
sbb
pop
outsb
add
fs
sub
clc
imul
xor
xchg
icebp
pop
cmp
pushf
outsb
fcomps
jmp
push
sti
dec
sub
adc
test
lock
imul
lods
pusha
les
mov
jnp
test
fisubs
addr16
mov
inc
shr
mov
xchg
outsb
sbb
push
lods
sub
jne
aas
adc
sbbb
clc
fcoml
jge
add
subb
outsb
idivb
sub
imul
fisubrl
std
aaa
sbb
mov
sub
shlb
lret
mov
jecxz
ljmp
inc
mov
clc
push
pop
mov
cmpsb
and
or
outsb
arpl
jecxz
je
jno
rolb
sbbb
lds
imul
jnp
and
dec
mov
repz
out
je
sub
divl
bound
push
jp
or
mull
bound
notl
jmp
loope
movsb
xchg
or
dec
inc
rclb
xor
push
sub
outsb
dec
ds
loope
xor
rolb
inc
mov
jno
inc
mov
outsb
ret
dec
xor
inc
fistpl
rorb
dec
and
add
sbb
dec
out
lret
js
subb
shll
outsb
outsb
add
jno
jnp
mov
ljmp
in
clc
mov
jae
lcall
fiaddl
in
cmp
push
jl
cmpsb
out
arpl
or
sarb
fwait
fwait
es
or
push
pop
xor
cmc
lcall
or
and
push
sbb
shlb
inc
mov
xchg
in
insl
sbb
call
inc
test
mov
imul
fwait
shrb
imul
mov
call
and
xor
add
fimull
xchg
adc
or
xor
adc
push
push
movsl
in
out
aaa
imul
push
testl
lds
mov
mov
dec
jbe
das
mov
movsl
push
pop
inc
jl
outsl
aam
mov
mov
jg
cmp
xchg
rcl
sbb
sub
sbb
loope
dec
xor
iret
push
mov
sti
pop
orl
ret
imul
ret
mov
out
inc
sub
mov
jno
in
xchg
sub
dec
popa
or
mov
shll
js
mov
mov
imulb
rcll
mov
cmc
shlb
or
aaa
imull
push
outsl
mov
pusha
cmpsl
adc
sarb
inc
out
cwtl
mov
dec
out
arpl
pop
movsl
mov
pop
sub
and
push
js
cwtl
jge
bound
repnz
enter
mov
push
dec
xchg
adc
ljmp
pusha
sbb
xchg
push
inc
outsl
jp
cmpsl
aaa
cmc
sbb
and
add
nop
mov
xor
cmc
cmpsb
or
test
xor
outsb
stos
mov
dec
inc
xchg
mov
sbb
aaa
jbe
pop
sbb
addr16
jge
mov
sub
jecxz
adc
cmp
or
adc
and
jg
out
cmc
outsb
es
fcmovnbe
sbb
fldt
jmp
jg
sbb
fwait
sub
and
stos
pushf
mov
mov
bound
cltd
pop
pusha
mov
push
imul
cmp
sbb
gs
xchg
and
arpl
mov
mov
dec
cld
xchg
inc
ja
cmpsb
mov
cmc
xlat
sbb
jle
arpl
and
inc
add
or
mov
sbb
aam
sub
cmpsl
mov
xor
fs
frstor
lcall
cmp
call
dec
sbb
mov
sbb
jns
lods
add
jmp
sbb
mov
testl
pusha
lahf
in
test
and
test
iret
notb
ljmp
or
pop
shll
std
sub
jecxz
jmp
and
outsb
ljmp
or
xchg
je
popa
adc
mov
sahf
lret
sub
mov
call
adc
repnz
push
cmp
push
movsl
jge
xchg
pop
rorb
mov
dec
adc
in
ljmp
dec
add
or
or
dec
mov
ljmp
mov
adc
xor
push
lcall
sbb
jp
sbb
mulb
or
aam
mov
inc
jne
gs
jge
and
lods
stos
fidivs
in
repz
dec
mov
inc
mov
inc
addr16
inc
cmpsb
or
cld
mov
ret
mov
mov
pop
mov
pop
pop
sub
subb
inc
dec
xchg
repz
cmpsl
mov
idivb
loope
cmpsb
xchg
push
and
jnp
rcr
std
cmpsl
loopne
jge
pusha
jmp
jge
imull
jecxz
cmc
in
dec
inc
jb
sarl
push
push
mov
int3
and
pop
adc
test
pusha
lds
outsb
cltd
and
sbb
daa
jg
ret
scas
enter
add
push
push
push
dec
and
rorb
adc
jbe
xor
cmp
out
divl
inc
sub
cmc
sbb
loopew
sbb
fbld
shr
mov
ret
sbb
jmp
fisttpl
out
arpl
push
icebp
in
ss
ficoms
cmc
sbb
std
mov
pop
enter
jae
mov
in
and
xchg
pop
out
inc
jbe
sbb
outsb
add
mov
mov
inc
js
or
fsubl
mov
mov
in
cmpl
aas
fwait
cs
add
push
push
mov
nop
out
cmp
ljmp
xchg
cld
dec
inc
inc
shlb
xor
js
sti
addl
jmp
call
cltd
push
loopne
inc
ret
jmp
sub
lahf
push
cld
cmp
dec
loope
push
mov
xchg
in
pop
cli
shl
mov
mov
out
iret
stos
mov
cmp
fsts
lretw
adc
mov
xchg
push
fisttpll
cmpsl
dec
pop
loop
push
into
xchg
idivb
xchg
sbb
add
mov
es
cmpsl
rcr
je
les
loope
lods
insl
jg
add
testb
sub
cmp
repnz
aas
cmpsl
fcmove
loopne
add
repz
test
je
hlt
outsb
adc
mov
mov
adc
add
inc
shrl
cmc
pop
xor
rclb
xchg
test
enter
in
adc
fcmove
and
xor
rcrb
ja
jmp
cli
insb
cli
rolb
scas
cmp
or
movsb
inc
fisubrs
xchg
add
insl
sarb
add
mov
sbb
mov
adc
ret
mov
sbb
out
adc
je
int3
movsb
xor
out
or
mov
inc
xchg
shlb
cmp
jae
ljmp
pusha
sbb
jg
mov
inc
sub
imul
shl
mov
push
push
jmp
aaa
mov
sub
divl
xor
jmp
push
cmp
mov
jne
jns,pn
and
cmpsl
flds
push
mov
repz
mov
jne
inc
std
pop
jecxz
mulb
icebp
shlb
inc
ja
cltd
loopne
aaa
in
dec
xor
xchg
mov
pop
lret
leave
lahf
dec
push
inc
cli
stos
shlb
push
jg
dec
pop
sbb
ret
mov
inc
nop
push
and
inc
mov
insl
xchg
mulb
xlat
jns
sti
sub
sbb
xlat
mov
mov
and
js
out
subb
repz
sub
lods
lahf
mov
faddp
xchg
sub
in
enter
sbb
xadd
stos
ret
push
fs
aad
and
movl
mov
cld
dec
imul
lds
test
insb
xor
outsb
add
sbb
imul
xchg
in
pop
mov
xor
mov
hlt
ja
xor
fbld
aas
jo
and
cmp
cmp
add
sbb
push
jbe
mov
sbb
andb
sub
stos
stc
imul
imul
pop
bound
and
loope
rorb
loopne
cmp
sub
or
xlat
out
test
shlb
ja
dec
xor
shrb
and
sub
mov
sarb
ret
cli
dec
cmp
push
imul
inc
adc
insl
xchg
and
sub
out
inc
jbe
outsl
xchg
or
cld
push
ret
pop
mov
push
xor
in
xor
addr16
scas
stc
lahf
inc
pop
ljmp
and
sti
retw
xchg
xchg
pusha
inc
lahf
test
ficoms
lahf
sub
and
imul
data16
pop
int3
fsub
sub
fisubs
mov
jb
adc
jo
out
mov
inc
shlb
jb
cld
inc
stos
pop
lcall
insb
not
ss
pushfw
mov
test
inc
mov
movsb
mov
in
mov
fwait
aam
inc
mov
jo
lock
jbe
out
cli
push
outsb
iret
fsubs
sahf
loope
cmpl
out
orb
cs
pop
dec
mov
adc
hlt
pop
dec
xchg
fsubrs
xor
pop
lock
shlb
cmpsb
push
shlb
sub
enter
cmp
fucomi
add
jl
dec
popa
dec
push
push
sub
movsb
outsl
sub
aaa
pushf
mov
insl
sbb
ds
cmp
repz
push
orb
sbb
xor
or
roll
test
test
addr16
push
mov
mov
test
mov
orb
pop
pop
mov
push
pusha
jo
mov
leave
cmp
or
or
repnz
scas
out
sub
ss
mov
jno
int
push
xchg
dec
bound
imulb
mov
shr
test
outsl
in
out
mov
arpl
jo
or
jge
jnp
test
xor
or
inc
imull
rorl
test
jne
stos
and
cmc
xchg
cmc
inc
rol
into
ficoms
dec
loope
ljmp
cmp
lds
jo
cs
mov
mov
int3
pop
arpl
adc
pop
sbb
je
mov
cmp
sub
adc
inc
shlb
rcrl
sub
push
scas
ljmp
pop
arpl
or
mov
sbb
divl
pop
mov
loopne
mov
jne
outsb
xchg
movb
mov
fsubrp
pop
dec
mov
pop
cld
mull
sbb
sbb
sub
outsb
sub
push
dec
inc
lds
push
or
and
cwtl
fisubl
mov
ror
popf
or
ret
sbbb
pop
jecxz
mov
adc
xor
shr
pusha
xchg
and
loope
and
or
repz
idivl
fisttpl
cwtl
sarl
je
xchg
sbb
push
pop
lcall
cmp
mov
outsb
in
stos
and
pop
push
cltd
aam
andb
div
mov
sarl
push
dec
jmp
rcrb
inc
insb
fidivl
xchg
gs
aad
mov
shrb
adc
and
sbb
xor
out
jbe
movsl
std
pop
outsb
pop
xchg
cmp
stos
sbb
rolb
jne
aad
inc
mov
in
xchg
rol
es
jo
and
lret
in
idiv
daa
call
jl
insl
movsb
lods
leave
mov
cmp
adc
and
push
cmc
test
xchg
loope
cmp
jle
shrb
jge
mov
popf
out
call
mov
lods
mov
or
sub
ljmp
inc
arpl
nop
aam
inc
mov
push
push
outsb
leave
jne
pop
aad
stos
push
enter
movsb
inc
push
or
push
lods
cmp
xor
add
imul
outsb
mov
xor
sub
inc
imul
data16
sti
adc
mov
sub
scas
leave
or
fldl
das
rcl
shlb
cmp
adc
nop
cwtl
test
push
mov
xor
pop
and
xchg
jbe
push
hlt
enter
fidivl
sbb
loop
lods
je
orb
inc
cmp
cmc
in
cmp
std
loop
pop
cmp
sub
enter
pop
sarl
dec
insb
sbbb
mov
jb
repnz
mov
xor
jne
bnd
stc
out
shlb
xor
cmpsl
daa
in
cli
call
in
add
enter
and
inc
sbb
cmpsl
sahf
xchg
sub
fisubrl
or
rcll
shl
cmpsl
insb
aam
sbb
dec
dec
stc
icebp
inc
notl
add
movsl
icebp
outsb
sbb
es
popf
nop
iret
xchg
jp
ficoms
xor
arpl
lea
in
push
adc
iret
rorb
sub
jae
mov
insl
dec
and
out
mov
add
cs
adc
lods
mov
adc
cmc
aaa
jne
fsubrs
bound
sarb
call
hlt
lods
cmpsb
sbb
das
aad
mov
ret
jo
clc
inc
sub
in
mov
and
or
lea
sarb
and
add
insl
adc
sub
push
enter
cmp
add
dec
and
ds
push
in
push
and
pop
cmp
lret
xor
pop
enter
nopl
fisttps
out
movsb
xor
popa
cltd
ds
jae
insb
fs
inc
movsl
imul
cmc
add
push
je
stc
lret
or
adc
imul
inc
les
xchg
xchg
pop
in
packuswb
mov
je
das
addr16
cli
into
ja
and
outsb
pop
mov
and
cmc
fldenv
mov
stc
cvtpi2ps
jne
sbb
shlb
sbb
jle
lret
sub
dec
popa
adc
jg
aad
fprem
dec
inc
sbb
ret
pop
jo
or
adc
adc
mov
jno
sbbl
arpl
jg
idivl
jae
aad
insb
pop
xchg
inc
xchg
push
mov
orb
call
cmc
loope
jbe
inc
jo
divl
das
jl
call
sbb
xor
dec
mov
or
dec
jnp
fbstp
adc
out
xchg
stos
inc
pop
rclb
push
bound
lahf
into
arpl
sbb
cmp
not
jae
leave
xchg
adc
or
and
mov
dec
lret
out
jbe
and
je
mov
jmp
sbb
mov
and
push
mov
mov
lret
ja
gs
rclb
mov
fisubl
das
xchg
in
cmp
shl
leave
jnp
or
adc
pop
mov
jecxz,pt
cmpb
test
xor
outsb
inc
xor
std
cmpsb
subb
lds
cmpb
into
enter
xchg
outsb
jno
fldt
mov
pop
dec
dec
in
stos
mov
inc
cltd
and
int3
scas
sbb
mov
or
insb
cmpsl
cmp
lcall
leave
loop
cwtl
rcl
imul
inc
cltd
mov
pop
addr16
sbb
or
repz
insl
dec
xchg
ljmp
shlb
lea
adc
sbb
dec
ret
mov
jbe
sub
jo
sub
xchg
loop
fldl
add
imul
mov
rolb
aad
call
jmp
pop
shrb
cmp
idiv
stos
cmp
sub
inc
jecxz
cmc
roll
pop
jno
add
sub
lock
jne
jno
add
insl
inc
mov
sti
faddp
jb
inc
mov
call
pushl
dec
jecxz
data16
mov
add
add
jbe
insb
pushf
dec
mov
push
xor
imul
dec
movsb
es
inc
popa
jg
lods
sub
test
imul
sub
es
and
push
testb
outsb
mov
mov
mov
cmc
not
fbld
pop
xchg
adc
adc
sbb
aad
mov
cmp
leave
jl
xchg
nop
mov
cmc
sti
cld
xchg
add
bound
sbb
rcll
mov
in
clc
pop
aas
inc
rcrb
popa
and
sahf
jno
ljmp
pop
inc
pop
push
and
shrb
xor
push
aam
cwtl
inc
repnz
jne
lods
xchg
dec
jecxz
outsb
or
mov
cltd
mov
xor
push
or
add
test
inc
inc
loopne
and
jecxz
or
push
xor
lea
cld
xor
mov
test
fldenv
shlb
adc
inc
lods
shlb
adc
shll
lretw
and
fmull
loop
outsl
mov
mov
mov
stos
imul
mov
int3
test
sbb
out
testl
lods
or
xchg
xchg
rcr
xchg
pusha
imulb
push
jg
xchg
rclb
pop
dec
pop
add
inc
cmpsb
jne
aad
insb
xchg
gs
lods
insl
pop
ret
arpl
or
xor
cmp
cmp
gs
push
cs
jbe
std
into
and
das
xchg
aas
sbb
and
sbb
iret
sti
les
call
mov
lods
pop
dec
cwtl
insl
ret
mov
pop
xchg
movb
jecxz
repnz
push
addb
es
divb
popa
ja
jp
jbe
cmp
int
mov
or
sub
stc
mov
pop
jecxz
sub
in
inc
push
stc
repnz
insl
or
out
xor
call
roll
xchg
add
test
addr16
outsb
pop
movb
push
mov
sub
sbb
push
jno
xchg
xor
outsl
sub
in
jns
lea
xlat
and
jns
inc
push
ja
cmpsb
jae
mov
shlb
iret
dec
jne
cld
adc
jae
imul
push
mov
or
fwait
pop
ds
cmp
imul
jo
sbb
xorl
mov
adc
pusha
mov
ss
jbe
les
out
and
icebp
sbb
xchg
inc
leave
sti
cwtl
outsb
dec
cmp
pop
dec
fiadds
mov
pop
fstl
and
in
aam
dec
or
loop
dec
cli
inc
xchg
into
sub
test
inc
insl
imul
loop
mov
dec
jbe
or
ljmp
xchg
inc
test
cmpsl
hlt
push
xor
mov
out
pop
cmp
aad
jne
pop
incl
cld
lret
std
addl
ja
xor
insb
loopne
adc
dec
dec
mov
js
dec
roll
mov
xchg
ljmp
ret
jbe
xchg
shll
clc
loopne
jae
mov
inc
repnz
ror
ss
int3
stos
xchg
shl
fwait
mov
ljmp
stos
and
aaa
aas
add
das
push
arpl
mov
cltd
addr16
or
insl
sahf
inc
cmpsl
mov
arpl
add
dec
cwtl
cmp
pop
cmpsl
in
aam
jl
add
fisttps
inc
aaa
mov
jb
outsb
roll
jbe
rcr
push
js
cmc
dec
mov
pop
add
xor
jo
push
dec
ss
sub
shl
mov
shlb
nop
xchg
jecxz
inc
jbe
push
lds
jnp
sub
sbb
adc
aas
orl
clc
mov
cmpsl
pop
out
outsb
rclb
fnstenv
loop
insl
push
call
ljmp
sarb
dec
arpl
inc
add
xor
repz
inc
stos
rcrb
xchg
pop
rolb
out
into
in
mov
loop
shrb
lods
test
ss
jb
pusha
icebp
cmc
icebp
mov
popl
pop
ss
test
push
mov
iret
mov
js
push
test
stc
ljmp
dec
testb
lahf
jmp
mov
subb
popa
mov
fldt
push
lods
adc
inc
stos
mov
mov
and
ficomps
sti
or
xor
cmp
xchg
aaa
arpl
cmp
lahf
mov
xchg
push
cwtl
sahf
jne
aas
pop
xchg
fwait
in
sbb
mov
dec
mov
jbe
mov
cmp
shrl
imul
cltd
clc
push
cwtl
stc
xchg
mov
aam
dec
sbb
outsb
and
sub
pusha
mov
in
add
jmp
popa
xor
cli
fstpt
out
xchg
movsl
adc
fldl
jnp
imul
pop
push
mov
outsb
stc
out
or
in
sub
inc
lahf
ljmp
fs
loopne
loope
cmp
inc
jecxz
aaa
jbe
flds
dec
or
stc
pop
dec
push
mov
lods
test
mov
inc
push
inc
andb
jnp
dec
mov
rorb
insb
lods
insl
mov
jns
mov
pop
sbbl
xor
pop
into
and
repnz
or
fistps
repz
sbb
cmc
hlt
or
inc
cmpsb
outsb
rclb
push
pop
and
arpl
dec
xchg
xchg
hlt
je
pop
dec
mov
dec
jecxz
mov
sub
or
jno
orb
dec
jnp
mov
push
pop
jl
cmp
sahf
and
lret
xchg
xchg
shlb
cmc
stos
or
mov
xchg
es
push
add
dec
shlb
jge
sbb
outsb
xor
test
jecxz
sub
lods
and
mulb
inc
stc
sub
dec
sub
mov
pop
push
mov
call
sbb
pop
jmp
enter
xchg
mov
lods
es
mov
mov
not
mov
ficoml
mov
ja
sbb
jg
outsb
and
movsl
in
add
dec
cmp
jbe
imul
jmp
push
cmp
icebp
cli
imulb
push
enter
cli
xchg
and
push
lock
dec
push
jae
add
outsb
pop
insl
jbe
mov
fimuls
jo
cmc
mov
fstpt
mov
loope
pushf
cltd
andl
jmp
jns
lds
mov
sarb
cmp
adc
int3
xor
in
pop
lcall
lods
jmp
push
xchg
fcoml
notb
inc
and
jae,pt
dec
adc
cmp
scas
and
jmp
cmpsb
ljmp
sti
pop
mov
xchg
leave
fdiv
aaa
ljmp
cli
insl
shll
xor
jecxz
adc
outsb
cmpsb
add
or
testb
dec
test
lcall
jae
mov
jo
mov
jmp
std
mov
rclb
addr16
inc
sbb
add
xchg
fisttpl
mov
ljmp
in
repz
loop
jae
cli
xchg
push
pop
mov
lahf
cmc
jbe
cmpsl
cwtl
adc
mov
xchg
cmp
sti
imul
and
stos
scas
iret
insl
scas
push
fistps
movsl
aaa
out
push
icebp
in
jae
rorl
mov
push
dec
gs
rorl
testl
fsubrs
sahf
mov
inc
xor
mov
repnz
cmp
dec
or
xchg
fwait
sarb
test
idiv
cmpsl
push
imull
insb
or
aas
xchg
pop
popa
mul
ficoml
cmc
mov
dec
imul
push
sbb
xor
jne
and
xor
mov
movsl
adc
push
shl
sbb
pop
mov
mov
add
push
inc
dec
sbb
js
push
shrb
sub
lods
aam
mov
es
inc
xchg
inc
inc
and
aaa
cmp
int
adc
in
jecxz
jbe
fnsave
imull
push
hlt
in
insl
dec
stos
pop
std
bound
sub
xchg
outsb
push
adc
xor
cwtl
aad
jmp
or
xor
inc
mov
negb
inc
and
in
sbb
popf
push
inc
shlb
mov
sbb
pusha
add
into
outsb
cmp
fisttpl
ja
mov
xchg
pop
nop
lds
lds
mov
in
repz
insb
fistpl
int3
jae
push
mov
es
jbe
rorb
xchg
imul
rcrb
cmc
inc
test
daa
cmpsl
loopne
testb
popf
icebp
test
mov
and
nop
aad
push
jge
les
fdiv
cmpsl
mov
rolb
rcl
cli
cmp
bound
mov
rorb
and
cmp
cmpsl
ret
sub
in
push
mov
fstps
popl
aam
lods
daa
je
cmp
out
and
sbb
or
fcmovne
adcb
addb
cs
outsb
adc
rcll
mov
fs
pop
adc
nop
pop
adc
imul
lret
scas
inc
mov
push
cmp
pop
jb
pop
jmp
lods
mov
stc
fidivs
mov
lcall
outsb
inc
mov
sub
inc
or
loope
jno
loopne
inc
movsl
fwait
xchg
rclb
xchg
lock
data16
mov
jecxz
sbb
sbb
iret
inc
je
fdivrs
dec
fimuls
jbe
jns,pn
mov
jbe
outsb
push
xor
stos
add
packsswb
cwtl
push
pop
lods
addr16
mov
into
mov
pushf
ds
adc
xchg
jmp
push
fcoms
js
hlt
repnz
popf
sbb
out
sarb
rolb
push
xor
jnp
mov
sbb
inc
add
jbe
ljmp
jp
or
inc
lods
push
fs
out
bound
iret
jbe
test
dec
testb
fiaddl
jg
in
fcmovnbe
call
lods
jo
fcomps
cld
push
mov
jnp
insl
les
rcrb
out
mov
sub
jecxz
jmp
insb
push
notb
and
mov
sub
jmp
push
pop
jae
mov
jb
sub
aam
cmp
mov
cltd
data16
jp
xchg
ja
jmp
cld
mov
rorb
pop
sub
addr16
pop
imul
divl
orb
dec
gs
stos
aad
xor
loop
ret
mov
ret
and
das
or
in
fwait
dec
pop
mov
xchg
jbe
dec
imul
and
sub
mov
nop
add
sar
jg
sub
outsb
jbe
and
mov
dec
jne
es
dec
sub
or
mov
repz
sub
sbb
inc
and
test
out
lret
mov
pop
or
cs
jbe
xor
sbb
faddl
mov
aam
cmc
stos
test
xchg
inc
or
push
sub
outsb
xor
inc
inc
shrb
fsubrs
dec
out
popf
pop
sub
sbb
xor
fucomp
inc
lcall
scas
dec
ljmp
movsb
xchg
push
jmp
movsl
arpl
aas
jmp
pushf
in
in
sti
repnz
inc
jecxz
testl
js
mov
shrb
xchg
jbe
push
sbbl
and
and
ja
mov
sbb
test
mov
outsb
xor
fsubrs
int3
ja
mov
sahf
mov
mov
movsl
cltd
je
and
cmp
jae
cmpsl
jle
pusha
idivl
add
and
cmc
push
test
aad
insb
ds
lds
dec
cltd
divb
push
lcall
push
sbb
dec
sahf
std
dec
pop
outsb
inc
sti
arpl
jecxz
in
sub
jne
inc
mov
jae
ja
push
imul
mov
out
aad
outsb
cmpsl
mov
mov
out
stc
in
jg
inc
jge
shll
in
cmc
and
cmp
repnz
shrl
mov
fsubrs
es
pop
xchg
shlw
pop
loopne
cmp
aad
xor
xchg
pop
fs
subb
mov
rol
mov
aas
pop
ja
pop
mov
push
jae
cmp
mov
test
aam
add
decl
pop
out
push
aam
inc
fcmovnu
pop
adc
mov
add
dec
cmpsl
or
popa
lret
mov
rcrb
daa
sbb
das
lock
inc
in
xchg
add
lods
mov
xchg
mov
test
jmp
sahf
hlt
jne
testb
mov
das
push
lock
inc
add
and
pop
push
sbb
fcoml
sbb
dec
popl
loop
push
inc
mov
jns
inc
push
insb
lds
xchg
dec
mov
jae
shlb
xchg
xchg
mov
lods
loop
fildl
adc
jne
stos
dec
xor
pop
pop
shrb
ss
bound
bound
pusha
inc
jge
push
add
cmc
sahf
mov
pusha
andl
stos
andb
push
loope
daa
pop
inc
push
mov
loopne
inc
cmp
mov
outsb
cmp
hlt
xlat
shlb
pop
cmp
push
dec
je
in
mov
mov
aad
rcrb
xchg
enter
orb
aad
rorb
inc
shl
stos
les
test
jge
out
push
mov
dec
outsb
in
fucom
aaa
idivl
inc
notl
or
bound
movsl
iret
out
dec
pop
fldt
test
mov
lea
clc
cmp
push
push
jbe
das
pop
push
pop
fcmovb
and
outsb
jns
dec
sbb
sbb
push
pop
test
ljmp
sahf
sarb
push
ss
fisubrl
loop
push
inc
div
jb
pop
fistpl
je
lock
int3
outsb
pavgw
pop
xchg
push
xchg
dec
or
ss
std
ja
inc
add
es
xchg
outsb
push
jmp
cmpsb
je
mov
dec
jns
push
jb
push
lea
out
test
pop
ss
jbe
sbb
and
sahf
add
movsb
sbb
xor
test
cmp
incl
test
stos
das
popl
sub
in
mov
ljmp
sub
dec
out
xchg
rorb
and
lds
or
push
add
out
inc
jbe
adc
stos
sti
hlt
dec
mov
dec
mov
mov
mul
idivl
jmp
mov
adc
sahf
inc
lock
insl
daa
movsb
loope
popf
cmc
mov
out
js
les
push
mov
xchg
shlb
push
mov
je
not
cmpsl
cwtl
pop
mov
cmp
xchg
add
push
sbb
sbb
mov
out
xchg
ja
mov
or
cmc
out
aaa
pop
imull
adc
and
xchg
adc
and
sub
imull
dec
es
lret
int
and
add
jbe
cs
mov
insb
cmc
pop
mov
fisubl
mul
inc
xor
xor
aas
sarb
aad
push
jl
push
sbb
stc
hlt
test
hlt
xchg
sbb
outsb
inc
fiadds
rorb
push
sub
cld
cmp
xor
test
lahf
mov
ja
cwtl
lahf
and
or
pop
sub
stc
dec
push
and
pop
aaa
cmp
loope
fcmovb
jbe
sub
cld
sysexit
push
outsl
cmpsb
inc
xor
sbb
int
jmp
outsb
cmc
lds
movntps
sti
mov
cmp
rclb
scas
repz
dec
testl
mov
xlat
adc
xor
clc
sahf
cmp
pop
add
shlb
pop
ss
xor
hlt
sub
jmp
addr16
test
pop
sbb
mov
mov
clc
rcrb
iret
xorb
push
aam
iret
insl
mov
and
cwtl
mov
add
jae
in
leave
and
mov
mov
shll
jbe
nop
addr16
xchg
sub
sarb
xchg
movsl
stos
xchg
scas
sub
shlb
js
divb
jb
jecxz
pushf
and
jecxz
sbb
inc
mov
sub
jmp
mov
sti
stos
mov
sub
les
mov
fidivrl
mov
mov
dec
pusha
push
or
jge
push
pop
sub
inc
push
mov
test
xchg
xor
out
adc
mov
imul
mov
mov
imul
mov
andb
cmp
jne
xor
add
sarl
dec
aam
cmpsl
test
shll
outsl
mov
je
inc
push
mov
and
mov
outsb
enter
mov
sbb
mov
out
xchg
int
sbb
shlb
test
push
pop
mov
xlat
das
xor
ret
lds
testb
lahf
or
jp
setge
inc
out
pop
and
jb
pop
xchg
fisubrl
aaa
bound
pushf
jge
add
jo
inc
outsb
loop,pt
std
push
popa
xor
sub
or
ss
movsb
cmp
dec
loop
lods
xchg
xor
mul
cmc
jbe
loopne
inc
inc
in
mov
rcl
adc
in
cli
jecxz
inc
imul
cmpsb
pop
adc
movsb
fildll
loop
pop
jecxz
xor
cmpsl
sbb
sub
sbb
movsb
scas
call
gs
xor
fmull
pop
xchg
lds
loope
mov
sbb
decl
xchg
ljmp
inc
adc
fwait
cld
shrl
xor
repz
pusha
imul
cs
fdivl
sarb
pop
fisubrs
ss
outsb
adcl
insb
aad
jecxz
rclb
add
pop
mov
sub
arpl
jns
jg
lods
adc
cmp
add
sbbb
cmpsl
lahf
push
orb
jo
fbld
outsb
loope
push
bound
fidivl
xor
ja
pop
cmpb
ret
push
cli
and
push
jae
push
loope
sti
dec
dec
cwtl
add
xchg
outsb
lea
cmp
ljmp
rolb
push
sbb
lcall
cld
das
pop
dec
inc
clc
push
lock
cmp
out
out
xchg
jns
sahf
and
icebp
push
pop
fisubs
inc
arpl
in
push
mov
jecxz
pop
stos
movsb
cmc
xor
sahf
pop
inc
xchg
inc
pusha
and
adc
jae
add
hlt
leave
mov
cmpsl
lds
sbb
jge
subl
mov
pop
xchg
push
mov
testb
or
dec
aaa
imul
pop
aad
call
sahf
mov
xor
outsb
lret
inc
insl
push
jns
mov
aad
movsb
and
sub
scas
ja
sub
repz
outsb
adc
ficomps
inc
cmp
sub
xchg
popf
jne
je
cs
mov
std
pop
dec
imul
and
dec
sbb
ljmp
outsl
ss
add
jle
cmp
jmp
aam
fsubrs
xor
or
jg
mov
fidivl
cmpsl
int3
out
add
pop
aad
pop
js
test
notb
fiadds
mov
sti
fstpl
jecxz
jg
cmpsl
popa
cmpsb
out
mov
sarb
sbb
pop
add
adc
add
mov
iret
fsub
jns
lods
xchg
adc
in
in
sbb
imul
xchg
pop
sarb
push
push
push
scas
test
and
popf
rorl
out
into
adc
xchg
in
dec
push
stos
mov
rcr
dec
cld
jmp
outsb
inc
mov
das
dec
sahf
out
mov
rcr
xor
lcall
or
hlt
inc
loopne
subl
sub
and
push
jp
cmc
mov
insl
dec
xchg
inc
sub
push
rol
test
ficompl
rorl
sbb
mov
adc
cltd
shlb
jb
test
inc
and
insl
adc
pushf
movsl
add
inc
std
sbb
xor
push
push
inc
leave
mov
insl
nop
sub
jbe
jle
sbb
lret
fnsave
lock
int
imulb
lea
insb
jne
rcl
xor
inc
jle
push
test
sbb
bound
mov
mov
fistpl
mov
xchg
xchg
and
adc
cmpsb
sbb
sbb
jecxz
mov
leave
testl
rcr
std
dec
xchg
fidivl
sub
and
xor
lahf
xor
pop
arpl
insl
cmp
arpl
push
add
cmp
movsb
rcrl
xchg
add
jbe
and
adc
lds
fistl
pop
mov
push
addr16
shrb
or
mov
add
jo
notb
into
sbb
popa
stc
loop
jle
dec
loop
mov
std
cs
jae,pt
or
lret
dec
repnz
daa
jecxz
outsb
rolb
add
jg
insb
dec
push
jbe
clc
out
cmc
adc
sub
insb
int
ljmp
mov
sub
mulb
xchg
sbb
rol
dec
mov
jle
shl
cmp
xchg
sbb
loope
mov
and
mov
or
cmp
pusha
out
mov
leave
inc
jbe
imul
dec
shlb
imul
rcl
test
xchg
cmpsb
testb
add
js
dec
outsb
adc
lea
inc
push
iret
inc
xchg
mov
push
mov
jge
aas
loope
loopne
pop
inc
jae
sub
aam
test
cld
push
sub
aad
cwtl
mov
push
mov
sbb
and
inc
repz
push
mov
xor
inc
inc
cmpsl
jo
mov
cmp
jo
cmp
out
jns
xchg
loopne
dec
mov
test
cmpsl
adc
cmpsl
outsb
leave
das
les
adc
movsl
xchg
pop
pop
inc
dec
jns
insl
scas
cld
or
adc
inc
pop
xor
add
shrb
pushf
scas
rorb
cltd
inc
ja
push
mov
ljmp
mov
call
xchg
roll
mov
push
mov
push
push
cltd
sub
sarb
sti
pop
sahf
arpl
dec
js
test
pop
shlb
mov
cmp
jge
lds
lds
shl
jns
add
shlb
mov
push
mov
jmp
stos
sbb
leave
popf
ror
in
and
out
rorl
mov
shr
inc
inc
ret
jg
fs
rorb
sbb
jmp
jnp
mov
shlb
inc
sbb
insb
xor
sbb
out
out
es
or
hlt
push
neg
mov
pop
jg
sbb
movsl
sbb
andl
or
cmpsl
xchg
ljmp
mov
sbb
nop
dec
xor
int
adc
loopne
add
cmp
loop
ret
inc
jae
or
adc
aaa
addr16
push
js
mov
cmc
iret
dec
fistps
aam
lret
dec
pop
cltd
movb
mov
cmp
mov
sbb
mov
ja
in
aaa
in
cmc
ljmp
movsl
and
mov
xchg
enter
pop
pop
mov
bound
iret
sub
or
add
push
loop
or
xchg
movl
fcmovb
pop
jae
inc
incl
xor
jmp
mov
push
shlb
sbb
xor
push
lahf
movsb
negb
jne
sbb
xchg
cmc
sbb
outsb
pop
fldt
pop
insl
hlt
in
pop
sar
adc
adc
xchg
insl
subl
jnp
shlb
inc
iret
sbb
pop
adc
mov
sbbl
sahf
cmpsb
aaa
jne
loop
pxor
clc
sub
xor
cmp
lret
push
stc
sti
inc
ficomps
out
jae
or
xchg
mov
and
jnp
xchg
jmp
loop
lods
out
mov
repnz
adc
push
inc
jnp
aaa
push
imul
or
sahf
mov
mov
mov
test
and
cs
imul
mov
fs
stos
hlt
dec
mov
loope
push
mov
dec
enter
jb
inc
sbb
loopne
fisttpll
es
fildll
int3
mov
pop
dec
je
push
sub
push
cltd
mov
mov
dec
jno
xchg
mov
add
sbbb
adc
enter
lea
popa
sub
orl
imul
push
leave
cmp
test
movsb
xchg
dec
mov
mov
divb
loopne
push
getsec
mov
shl
sbb
mov
cwtl
cld
cmpsl
mov
mov
aaa
mov
push
xor
je
sti
bound
dec
mov
icebp
lcall
ja
call
std
ljmp
xor
or
notl
xchg
lcall
aad
cmp
mov
jmp
cmp
lock
ja
pop
pop
sarb
pmaxsw
dec
pop
jb
dec
hlt
sub
jae
int
mov
xchg
xlat
fisttpl
xchg
xor
stc
xchg
xchg
sti
shl
add
pop
shrb
jmp
enter
sbb
fisttpl
aad
push
test
ret
sbb
stos
test
and
hlt
imul
cmp
push
movsl
lret
bound
dec
xlat
outsl
dec
jnp
dec
mov
cltd
inc
inc
jnp
sub
pusha
leave
adc
arpl
div
cmp
sub
inc
inc
ja
mov
loop
imul
cmp
jge
sub
sub
dec
mov
jbe
sti
insl
std
js
xor
xchg
jg
inc
adc
sbb
add
outsb
les
popa
mov
out
clc
push
cmp
leave
shlb
clc
out
gs
aam
cmc
bound
mov
push
add
pop
add
sbb
shlb
dec
repnz
aaa
aas
cs
iret
jmp
ds
xchg
sbb
repnz
fisubl
bound
outsb
mov
or
inc
or
pop
xlat
je
xor
cli
cld
and
mov
and
out
aaa
sbb
sahf
lods
mov
sarl
imul
out
sub
fsubr
scas
mov
outsb
subl
sbb
lods
mov
push
lcall
jbe
sub
cmpsl
cmp
pushf
fisubs
cmp
adc
imul
mov
fld
dec
jecxz
jbe
loope
jne
cwtl
xchg
dec
adc
int
cmc
xchg
scas
aam
mov
outsb
ret
gs
sub
idivl
and
fbld
dec
sub
flds
inc
push
out
jl
push
or
jnp
imul
cmp
pusha
mov
inc
out
int3
sub
mov
jno
cmp
dec
add
inc
fs
inc
lods
test
mov
sbb
pop
lret
xor
jecxz
and
mov
js
jae
or
frndint
add
mov
jl
sarb
push
lods
or
mov
stos
out
sbb
lods
inc
mov
mov
fiaddl
xorb
js
sub
sbb
popf
add
out
icebp
xchg
sbb
lods
inc
push
or
mov
shl
mov
movsb
popf
and
in
xorl
ja
pop
add
mov
dec
pop
sbb
in
sti
and
xorb
rcrb
lds
call
and
push
push
cmp
xor
mov
sti
pop
shrl
aad
adc
adc
push
ds
xlat
shlb
stc
aaa
fwait
mov
xchg
std
or
pop
cmp
sub
std
cmp
cmp
mul
inc
mov
jb
jno
aas
jbe
js
ljmp
shlb
xor
xor
inc
dec
inc
xor
orb
xchg
mov
data16
and
xchg
mov
inc
and
shrl
fs
dec
jno
add
mulb
rorb
in
stos
fs
outsb
xor
rolb
dec
popf
sbb
xchg
rcrl
mov
or
adc
mov
loope
sbb
imul
iret
add
jb
push
mov
sbb
sahf
test
insl
arpl
insl
inc
rol
sahf
sub
mov
mov
pop
shrl
outsb
cmp
in
sbb
mov
testb
cld
jge
mov
sbbl
dec
nop
pop
and
mov
rcrb
lahf
xor
sbbb
push
xchg
sarb
or
add
sub
xorl
jae
iret
nop
inc
fildl
out
xor
sbb
mov
inc
lcall
and
inc
pop
jmp
aad
das
movsb
pop
cmp
cmc
and
sub
ljmp
push
push
jp
rcl
and
xor
sub
push
inc
mov
xchg
fwait
jo
popa
bound
sub
fwait
xor
cld
sub
jne
sti
and
mov
jge
pusha
push
js
ss
jp
jecxz
adc
aaa
push
ja
roll
subl
dec
test
shl
sarb
mov
dec
pop
aaa
jno
xor
rorb
out
pop
cmp
fadd
ficoms
roll
sbb
pushf
mov
fiaddl
cltd
lds
mov
imul
js
jns
cmc
pop
push
fidivs
in
fs
dec
or
cld
and
pop
xchg
push
pop
jbe
lret
jo
imul
mov
add
pop
xchg
inc
aad
out
nop
and
aas
movsl
xor
sbb
mov
ror
rclb
sub
mov
fstps
or
xrelease
pop
popa
adc
pop
adc
push
jg
sbb
out
lea
inc
sarl
add
jno
jecxz
fidivl
ljmp
xor
mov
cmpb
cwtl
inc
add
jae
es
sub
ret
push
pop
cmpsb
mov
push
dec
jne
jbe
xor
cmpsb
jecxz
adc
test
outsb
push
stos
or
rol
jo
jbe
push
cmp
pop
sub
bound
mov
lret
sahf
xor
shl
sti
repz
dec
add
fs
inc
ljmp
loope
aam
ret
xchg
je
out
cmpsb
lcall
mov
push
jns
lret
stos
adc
sub
or
and
aaa
mov
add
jo
mov
dec
jbe
mov
subb
cmc
inc
fmull
mov
push
mov
imul
xchg
mov
iret
dec
rcrl
lods
mov
xchg
hlt
stos
out
push
push
sbb
and
xor
cltd
rcll
loope
je
lock
mov
push
mov
jns
mov
fwait
sbb
inc
pop
popf
xchg
leave
xor
dec
jecxz
sbb
lcall
jnp
lods
aaa
jnp
jb
pop
xchg
mov
push
cli
into
inc
mov
outsb
rorl
mov
jecxz
fwait
daa
es
push
fdivr
inc
cmpsb
xchg
mov
lock
push
stos
stc
mov
loop
sub
arpl
sub
push
sub
adc
les
dec
jne
jmp
or
mov
adcb
dec
insb
insl
jl
jbe
cmc
lods
bound
lret
inc
lahf
hlt
push
adc
inc
in
loope
push
push
inc
adc
mov
int3
lcall
mov
add
mov
xor
pop
push
test
shlb
or
mov
jg
jbe
adc
xchg
andps
and
outsb
sbb
in
loope
loopne
add
xor
lret
or
enter
in
bound
mov
and
cmp
lret
pop
pop
dec
mov
std
imul
xchg
outsl
push
push
dec
and
std
rclb
out
divl
rorl
es
jecxz
mov
cmp
xor
test
xor
mov
stos
jmp
mov
lods
sbb
orb
lods
lock
cltd
mov
sub
aam
cmp
jle
pop
loope
mov
mov
ficoml
iret
xchg
je
adc
mov
sti
imul
sbb
dec
sahf
inc
push
pusha
enter
mov
fisttps
sbb
xchg
mov
xor
mov
adc
jbe
in
clc
cwtl
movl
ja
ja
push
out
in
iret
mov
and
push
rolb
mov
mov
sbb
ja
fildl
jecxz
mov
fwait
divb
mov
pop
mov
std
adc
jle
inc
push
out
test
pop
jmp
clc
cwtl
jb
fcoml
inc
mov
fdivrs
and
jb
subb
xlat
jmp
and
dec
mov
lahf
and
sbb
out
popf
call
repnz
ret
mov
movl
ja
test
es
add
lret
je
sbb
mov
std
dec
jns
and
jmp
aas
into
jle
sub
pop
lods
xchg
js
cmpsl
pusha
sub
outsb
insl
jle
sbb
dec
inc
and
mov
push
je
aad
iret
and
pop
sarl
and
inc
outsl
cld
jmp
sbb
dec
and
and
lret
mov
int
lds
adc
or
or
shlb
aaa
and
mov
ret
addr16
fidivl
jg
mov
jae
inc
jbe
loope
in
mov
outsb
das
add
xor
cmpsl
pop
movsl
jne
add
adcl
xor
stc
push
test
popf
sti
pop
cmc
adc
sub
xchg
mov
imul
das
mov
fsubr
mov
loope
fwait
test
push
add
add
faddl
scas
mov
lret
inc
scas
push
das
imul
sbb
and
shll
pop
mov
lea
push
clc
fdivr
loop
dec
testb
aas
popf
inc
mov
sub
xchg
fiaddl
test
movsb
add
arpl
jbe
call
dec
pop
jecxz
jb
out
lods
cmp
fwait
pop
push
outsb
pop
les
in
cld
push
js
jb
jbe
fadds
addr16
inc
sbb
sub
sub
movb
aas
je
stos
sets
mov
loop
jecxz
jno
stos
sbb
cli
js
nop
lcall
mov
sub
out
repz
adc
mov
push
test
mov
inc
inc
pusha
test
or
xor
sub
fsubrs
sbb
mov
jbe
inc
mov
cltd
or
fisttps
mov
jbe
inc
mov
decl
scas
mov
xchg
fistpl
xchg
fdivrl
sub
push
sub
shll
mov
push
xor
jae
icebp
push
push
or
aas
xchg
mov
outsb
ljmp
cmc
ljmp
iret
xchg
and
subl
or
lea
xchg
sub
data16
jbe
pusha
hlt
xchg
xor
imul
loop
mov
sbb
jl
mov
push
pop
xchg
lods
cmp
sbb
ficomps
lds
inc
mov
inc
add
push
mov
mov
sub
daa
adc
or
sub
loopne
and
jns
shlb
pop
test
xor
rcr
mov
adc
lahf
cmc
sahf
insl
lods
repnz
jge
adc
xchg
dec
jae
loope
gs
lds
outsl
jae
xchg
rclb
mov
cs
cld
dec
int3
xchg
mov
je
mov
mov
dec
fcmovu
fwait
imul
fisubrl
hlt
inc
xchg
fldcw
inc
lods
push
outsb
notl
daa
daa
add
fsub
cmp
test
rcl
pop
aam
or
mov
inc
popa
pop
mov
xchg
loopne
lcall
sti
call
aad
pop
insb
xchg
jns
pop
xchg
or
mov
sub
and
bound
or
jnp
xor
sti
adc
fdiv
outsb
jmp
fsubrl
and
pop
xor
in
xchg
sub
dec
stos
jmp
xchg
mov
fnstsw
mov
and
push
outsb
pop
sbb
pop
cmc
dec
mov
sbb
inc
js
push
mov
mov
jb
cli
jb
int
test
das
xchg
push
loope
fwait
or
iret
and
jg
jmp
hlt
xchg
rcl
lods
or
or
ret
xor
or
dec
cmovs
push
add
call
not
test
dec
adc
cmp
push
add
jnp
and
divl
or
cmp
cmp
ret
mov
and
mov
mov
add
adc
jp
out
stos
jbe
jle
dec
push
mov
cld
sub
imul
sbb
ljmp
sbb
sbb
dec
out
pushf
idivb
or
stc
jnp
push
and
dec
scas
lods
mov
popa
jbe
jnp
test
jno
jne
rcl
inc
lock
sbb
or
jmp
inc
or
aam
aas
out
pop
sbb
dec
cmp
ljmp
outsb
or
ljmp
imul
mov
shl
popf
mov
loope
shll
inc
mov
jge
inc
mov
cmp
inc
in
fwait
out
out
dec
outsl
cmp
imul
in
xor
mov
fimuls
push
inc
hlt
test
jge
js
mov
in
outsb
add
scas
test
jns
addb
push
cmp
dec
mov
pop
dec
jge
pop
push
jb
inc
cmc
rcrb
mov
and
cmp
dec
and
loope
cli
jmp
lret
outsb
xchg
adcl
dec
out
pop
or
mov
out
lret
cmp
sub
test
icebp
pop
cmp
ljmp
rcl
stos
mov
lahf
in
jge
repnz
push
fimuls
sub
pop
push
and
push
cld
pop
and
pushl
addr16
mov
add
jno
dec
leave
dec
dec
dec
sub
rclb
jb
fmuls
hlt
cwtl
sbb
cmp
das
lahf
clc
loopne
sti
cmpsl
push
mov
int3
scas
and
xchg
stos
xor
fwait
pusha
inc
push
fisubrl
inc
cmp
out
sub
sbb
ljmp
xchg
lahf
xor
cmp
pop
add
pop
mov
out
dec
into
test
popf
pop
jbe
daa
sarb
aad
test
dec
jmp
outsb
sub
int3
or
dec
icebp
or
mov
loopne
in
pop
imul
inc
scas
sbb
sti
inc
inc
mov
popa
ljmp
inc
jbe
in
push
lock
cltd
push
push
sub
jmp
or
lret
insb
mov
test
popa
ljmp
ret
cld
push
inc
sbb
or
pop
inc
mov
imul
rol
pop
ror
sbb
xchg
mov
dec
data16
fisubs
andb
jecxz
or
xchg
test
in
push
push
cs
lock
movsb
cmp
mov
or
jae
in
lcall
jg
imul
std
mov
inc
lds
add
insl
divl
cmpb
loopne
scas
shlb
movsl
mov
sub
imul
fdivp
adc
enter
cld
and
cmc
pop
aad
mov
sti
pop
aaa
mov
pop
aad
inc
stos
movsl
outsb
adc
fisttpll
pushf
inc
sub
dec
mov
cmc
inc
insl
js
stc
add
pop
mov
lcall
pop
jbe
fdivs
jno
xor
aas
dec
mov
test
and
mov
cmc
adc
inc
inc
jne
shl
aad
fsubp
pop
xor
cmp
dec
mov
inc
arpl
mov
out
mov
inc
add
lret
jnp
mov
out
loope
cs
add
add
pop
cmp
scas
pushf
jecxz
inc
les
int
fisttpll
add
fwait
rol
sub
inc
das
jne
xorl
jmp
pop
mov
mov
fstps
xchg
sti
insb
cmpsb
fidivl
out
sbb
inc
or
outsb
fcmovbe
add
mov
ret
lcall
outsb
sub
gs
and
mov
test
cmc
mov
cmp
sub
fnstenv
cmc
mov
dec
mov
jns
push
sub
in
inc
test
hlt
loope
fs
push
dec
dec
ljmp
lahf
xchg
cmp
push
xchg
push
ret
sub
fldcw
rolb
pop
test
in
lods
or
adc
outsb
mov
sahf
ljmp
loopne
scas
add
xor
ror
mov
insl
pop
sbb
in
mov
pushf
pop
outsb
xchg
les
incb
mov
dec
mov
sbb
and
xor
adc
imul
jne
push
dec
fwait
xchg
in
inc
or
jns
ficompl
rclb
adc
pop
jbe
sahf
in
shlb
outsb
rolb
mov
test
pop
shlb
sbb
test
js
jmp
out
mov
push
ja
add
pop
cmp
mov
sbb
cwtl
aaa
xchg
std
aad
test
test
js
inc
sub
stos
test
pop
jg
enter
out
incl
dec
add
dec
fwait
insl
imul
mov
xchg
rorb
adc
movsl
std
aas
std
iret
cwtl
repnz
cmp
imul
push
shl
jns
adc
scas
int
test
inc
mov
out
jecxz
jbe
rorl
es
adc
adc
dec
sbb
decb
mov
out
cmp
push
jns
xor
add
inc
jbe
mov
pusha
push
jmp
sub
fucomp
dec
shll
ss
sub
cmp
testl
mov
js
ret
mov
and
mov
fdivrl
je
lcall
push
lret
in
insl
sub
jbe
inc
cmp
rclb
xchg
cmp
pushaw
mov
push
mov
mov
xor
jne
push
inc
mov
sbb
call
ror
mov
mov
call
lret
bound
leave
push
test
or
or
jle
cmp
jns
mov
es
pushl
xchg
ljmp
pop
scas
stc
cmp
gs
pusha
xchg
outsl
inc
mov
leave
pop
xchg
push
out
pusha
test
push
adc
testl
xchg
push
xchg
sbbb
and
popa
sbb
cltd
and
jg
lods
pop
mov
pop
push
aam
xchg
fcomi
mov
dec
sbb
jbe
xchg
sti
test
divb
fsubrl
xor
lods
push
dec
arpl
or
ds
push
lock
dec
mov
nop
sbb
push
andb
leave
fwait
pop
in
ret
in
bound
cmp
nop
cmpsl
das
mov
divl
add
inc
sahf
inc
stos
lret
mov
shll
test
js
mov
push
daa
pop
lds
xchg
mov
inc
dec
jbe
cmc
repz
orb
vcomiss
mov
lcall
hlt
adc
adc
call
jnp
xor
sti
push
inc
xchg
adc
inc
xchg
ret
fs
leave
cmpsl
push
push
nop
or
or
pop
xchg
pop
insl
popf
pop
push
mov
sbb
jmp
sbb
push
push
jbe
cmp
dec
add
dec
cs
addr16
xchg
pop
arpl
scas
dec
or
rcr
mov
mov
loope
jbe
jns
jecxz
and
dec
outsb
jb
in
inc
ljmp
sub
mov
pop
dec
mov
jge
pop
mov
and
xor
popf
lock
pusha
jb
outsb
in
dec
jns
daa
adc
mov
mov
insb
std
in
sub
ja
scas
stc
pop
xor
sub
mov
insb
push
cmp
ret
sti
lods
lods
push
addr16
daa
jne
lret
movsb
inc
mov
mov
out
aam
cmpsl
stos
je
mov
fimull
inc
sub
loope
pusha
loopne
pop
int3
sahf
lret
nopl
leave
popa
movsl
jp
out
or
clc
mov
sub
out
outsb
lret
dec
lcall
sub
js
lods
scas
sbb
stos
repz
xor
inc
mulb
and
rcl
push
jmp
xchg
ja
pop
sub
dec
enter
sarb
je
aaa
iret
and
dec
sbb
jg
cmp
push
mov
sarb
sub
outsb
stos
pushf
stos
xchg
loopne
sbb
jecxz
jbe
xlat
imul
pusha
outsb
or
xchg
xor
in
pop
leave
xchg
adc
jge
add
fcmovne
scas
out
repz
mov
and
je
pop
leave
sbb
inc
sti
fcoml
arpl
aad
into
shrb
cmp
addb
addb
rorl
xchg
addr16
add
mov
jbe
mov
sbb
or
mov
jnp
mov
sub
sarb
ljmp
cli
not
add
add
repnz
popa
pop
mov
xchg
inc
int3
push
shlb
outsl
adc
lods
jl
repnz
rorb
jo
xchg
bound
jbe
inc
aam
movsl
push
add
jecxz,pt
orb
xchg
dec
xor
and
lret
mov
mov
ljmp
add
outsb
mov
rolb
mov
add
cmp
cltd
data16
es
push
dec
xchg
ds
ljmp
and
das
lods
cmpsl
aaa
popa
mov
ret
cmp
insb
push
mov
push
inc
xlat
jne
xchg
pop
test
aaa
leave
test
sbb
sbb
pop
scas
and
fidivl
outsb
xchg
sub
das
jge
popa
ja
sbbl
push
push
int
inc
cmp
unpckhps
jmp
ja
repz
leave
fnsave
ljmp
popf
jecxz
xchg
orb
insl
test
cmp
sbb
add
ficompl
jmp
lahf
fndisi(8087
jno
stc
int
xor
popa
aaa
sub
jmp
jmp
mov
lods
sbb
lds
mov
out
dec
in
hlt
scas
and
loopne
push
pop
push
cmp
push
hlt
or
dec
lret
xor
cltd
loope
mov
les
je
mov
mov
fs
shll
jbe
pop
jmp
rcrb
add
and
cmpsb
out
push
aaa
mov
mov
outsb
pop
or
aam
push
das
fstpt
iret
xchg
fistpl
inc
mov
push
mov
jg
sbb
sbb
dec
jo
les
scas
daa
push
sbb
inc
xor
dec
sub
mov
fadd
xchg
rolb
nop
jbe
cli
mov
jnp
mov
lret
xor
sbb
push
mov
pop
adc
push
lods
sahf
xchg
sub
mov
pop
or
mov
rclb
mov
inc
bound
inc
mov
mov
cmp
mov
jge
aaa
jg
jo
mov
pop
aas
in
push
call
sarb
inc
jl
push
dec
pop
cmc
sbbl
sbb
scas
out
push
mov
jg
pop
dec
rclb
or
fidivs
dec
cmpsb
scas
testb
shlb
mov
push
sbb
out
mov
pop
test
mov
or
xchg
out
jb
push
mov
lret
es
lods
inc
lds
aad
and
xor
pop
call
test
arpl
aam
shll
push
out
insb
stos
sahf
fldcw
insl
cmp
ss
fisubl
adc
jmp
push
popa
jp
jl
push
ror
add
jo
js
cmc
int3
cmp
pusha
mov
jp
ljmp
mov
sti
mov
lret
and
loope
stos
outsb
jl
int3
push
add
repnz
testb
lock
mov
add
xor
cmpsb
loopne
and
and
sti
sub
and
and
and
repz
xor
sti
inc
dec
lret
push
xchg
xchg
mov
inc
iret
cltd
stos
sahf
enter
fsts
mov
notb
mov
das
mov
aas
sbb
mov
aam
icebp
js
and
test
jmp
pop
mov
in
add
push
xchg
or
aam
cmpsb
lret
push
cs
fld
cmc
clc
stos
xchg
or
lcall
xchg
dec
aaa
inc
rol
and
stos
pushf
inc
and
mov
testl
je
lret
loop
rclb
mov
movsb
rorb
mov
popf
xchg
and
lock
sbb
loop
dec
xchg
pusha
shrd
add
inc
insb
jecxz
xor
jae
lret
lcallw
clc
push
pop
inc
pop
mov
fldl
fwait
mov
mov
test
mov
psrld
fildll
incb
adc
xor
inc
mov
ja
outsb
and
shlb
into
cwtl
pop
dec
imulb
js
cli
cmc
mov
aaa
imul
cwtl
je
repnz
ret
sbbb
sahf
xchg
jne
in
int3
jecxz
outsb
and
in
int
insb
mov
popa
test
nop
imul
pop
dec
insb
paddusb
pusha
push
popf
push
notb
out
cld
popl
sub
loope
outsb
mov
shrb
je
in
mov
push
popf
sbb
out
cli
icebp
shlb
sbb
sti
push
repnz
hlt
insl
sbb
sbb
mov
xor
inc
mov
mov
lock
mov
xor
sarb
sbb
add
in
jne
mov
xor
or
popf
lea
outsb
popa
cli
dec
hlt
xchg
fcmovnbe
mov
pop
fsubs
addr16
adc
shlb
or
xor
mov
xchg
pop
mov
adc
dec
addr16
aaa
inc
fistpll
jae
lret
dec
outsb
xchg
or
ss
aaa
jb
jae
xchg
rcr
repnz
movsl
cmpsl
sbb
cmc
and
mov
and
ljmp
push
loop
cmp
stos
push
pushf
cmp
mov
imull
pop
push
xor
sub
arpl
mov
fwait
inc
cmp
es
and
das
cltd
inc
pop
js
cmpsb
nop
cli
or
jne
sbb
cmc
outsb
sbb
in
mov
pop
ljmp
pusha
lret
sub
loopne
ja
pop
mov
pop
xchg
mov
dec
mov
jns
or
pop
sarb
pop
cmp
orb
mov
jbe
data16
inc
outsb
loope
and
rol
decb
xchg
or
icebp
dec
mov
aaa
mov
mov
movb
aad
ss
nop
mov
outsl
or
xor
adc
inc
sbb
and
shlb
mov
loope
jb
inc
jb
das
repnz
repnz
mov
dec
sbb
fmuls
out
nop
mov
test
sbb
cmpsl
push
cmc
mov
andl
inc
aad
push
sbb
inc
or
clc
nop
out
or
mov
pop
jg
hlt
xor
repnz
in
rcrb
xchg
cmp
or
or
jnp
or
fisubl
pop
shlb
ljmp
loopne
sub
in
mov
and
or
sbb
mov
cli
arpl
outsb
jne
dec
fiadds
insl
add
jecxz
inc
cmp
sub
push
clc
fmull
add
jns
cmp
dec
movsb
loope
icebp
and
call
rol
push
push
xorl
popf
shlb
ljmp
negl
and
adc
out
repz
popf
movsb
mov
mov
sti
jae
shll
push
cmp
jmp
mov
ds
jg
mov
out
scas
js
mov
jbe
mov
pop
jo
imul
pop
hlt
stos
outsb
mov
jne
dec
adc
cwtl
inc
cvtdq2ps
mov
push
push
lret
push
mov
out
rep
sub
adc
cmpl
xor
outsb
hlt
test
lret
rcr
lea
xchg
xchg
pop
scas
dec
xchg
cwtl
sbb
pop
mov
mov
jl
jo
pop
lcall
js
mov
test
mov
xchg
mov
ficomps
lock
dec
shlb
and
insb
fidivrs
ljmp
sub
adc
mov
jecxz
mov
xchg
test
or
add
mov
inc
adc
scas
sbb
sub
push
jb
jb
loope
out
mov
mov
sahf
cmc
les
pop
cmp
jle
jae
adc
sbb
jmp
adc
aam
or
cmpsb
inc
and
repnz
jbe
lret
test
push
pop
dec
and
cmpsl
hlt
rcll
pop
repz
mov
jne
xor
push
ljmp
mov
pop
imul
rol
pop
fiadds
jp
scas
imul
in
fistpll
add
arpl
mov
hlt
pushf
mov
popf
mov
sub
test
and
lret
popa
aad
mov
xchg
aam
push
dec
insb
imul
and
xor
cmpsb
mov
std
leave
cwtl
nop
lods
int
insb
pop
push
into
fisttpl
aaa
sub
bound
scas
faddp
cli
popf
das
xchg
cmc
mov
fildl
jecxz
mov
jp
rclb
addb
ss
mov
rclb
decl
dec
fdivrs
and
pop
dec
sbb
mov
add
adc
decb
movsl
icebp
or
adc
cmp
test
sub
daa
sti
pop
push
andb
push
insb
loop
jne
rolb
mov
xorb
imul
cmpsl
inc
insl
inc
rorl
ja
jecxz
push
or
inc
popf
xchg
push
insl
shr
sbb
outsb
mov
add
sti
into
pop
arpl
add
push
mov
fcompl
dec
and
movsl
outsb
iret
push
std
arpl
es
cmp
data16
insb
stos
sub
push
jae
jae
jecxz
jbe
imul
mov
outsb
in
sahf
rcrb
push
sub
xchg
divb
adc
popa
mov
mov
fstps
lds
jo
cltd
push
loope
iret
mov
mov
mov
jp
cmp
xor
push
cmc
ds
insl
push
mov
popf
les
mov
xor
jae
ljmp
sahf
jmp
orb
push
fadd
test
notb
into
jae
mov
jno
orb
out
jp
divl
mov
mov
push
xor
jecxz
jp
in
shlb
mov
shl
mov
jmp
jbe
js
sar
int
mov
test
dec
int3
js
insb
inc
cmpb
orl
or
push
movb
sub
or
mov
cltd
loop
adc
fcomps
jnp
loope
ljmp
mov
adc
in
shl
stos
xchg
pusha
cmpsl
sub
push
xchg
pusha
lret
inc
mov
cmp
add
rolb
inc
div
cmp
xchg
fisttpl
mov
pop
dec
mov
dec
js
mov
mov
add
shrb
enter
dec
mov
cli
push
arpl
and
add
mov
bound
sub
lahf
jbe
ljmp
pusha
sub
or
gs
in
out
dec
sti
loopne
jmp
stc
subb
leave
adc
popl
add
sub
mov
lds
inc
subl
lret
or
rcrb
in
mov
fcmovnu
lea
push
ficomps
pop
jns
loope
xorl
or
xchg
int3
xor
mov
ret
sub
mov
jbe
xchg
jno
int3
outsl
fdiv
test
lea
jo
rolb
call
cwtl
std
int
sbb
jle
popa
test
arpl
call
xor
sub
and
mov
lcall
arpl
dec
mov
jb
addr16
jbe
cmp
das
mov
mov
bound
test
mov
cmpsl
jno
lea
mov
nop
pop
hlt
sbb
les
outsb
sbb
mov
sub
mull
push
arpl
dec
mov
inc
jne
cmpsl
test
adc
shlb
addb
into
pop
ljmp
mov
cs
sub
and
jno
sbb
add
xor
mov
nopl
sarb
dec
cmp
cmpsl
xor
pop
loop
mov
cmpsl
notb
xor
outsb
cltd
pop
mov
jbe
cmp
cmp
jge
sbb
in
xchg
mov
xor
out
pop
sbb
mov
imul
or
pushf
mov
shrb
cmpsl
rolb
sti
sub
cmp
lock
push
jb
in
xchg
movsl
and
push
lret
add
imul
xor
sub
movsl
mov
and
xchg
nop
mov
decl
sbb
test
sahf
dec
jmp
test
fwait
or
cmp
xchg
int3
jno
cmp
sbb
or
sbb
popa
pop
daa
jmp
test
sti
and
inc
shlb
in
add
jg
mov
dec
daa
cmc
lock
add
dec
cmpsl
aam
outsb
cs
fidivrs
push
imul
enter
aad
sbb
dec
stos
out
xchg
bswap
xchg
js
xchg
pop
add
or
inc
fldcw
jne
sub
rcrb
sub
xchg
repnz
pusha
outsb
xchg
imul
sub
inc
jb
stos
insb
icebp
mul
xchg
mov
push
lret
mov
xor
inc
fdivs
shlb
mov
cmpsl
sub
inc
pop
push
pop
les
dec
je
inc
mov
lcall
stos
dec
scas
enter
xchg
enter
pusha
les
mov
add
aas
dec
inc
cwtl
imul
outsb
test
insl
cwtl
arpl
rcrb
popa
lcall
pop
shrb
add
nop
imul
xchg
dec
imulb
add
and
lret
fldcw
lcall
mull
in
push
out
clc
iret
inc
repz
outsb
loopne
dec
shlb
dec
add
push
pop
mov
rolb
cwtl
call
inc
lock
js
mov
push
fidivl
jbe
jne
jns
iret
in
aad
push
fidivl
loop
cmp
inc
imul
test
fcmovne
in
jle
fsubr
je
sbb
jb
in
icebp
loop
dec
cmpsl
inc
mov
mov
cltd
xchg
and
ret
cmpsl
pushf
cmp
aam
sub
mov
mov
subl
faddp
add
jo
ret
scas
xor
adc
and
push
mov
add
mov
adc
std
lds
loope
fcoml
mov
xchg
and
lods
push
ds
mov
and
pusha
imul
and
inc
or
jmp
push
xchg
std
loope
outsl
cmp
sbbb
shlb
push
inc
xchg
push
insb
aaa
lret
inc
mov
xor
pop
mov
ljmp
fisubrl
imul
jae
outsb
cwtl
loopne
cmp
rclb
and
xchg
mov
loop
sti
cltd
jnp
stos
mov
cmc
dec
fldl
xor
mov
lods
in
mov
outsb
loope
xchg
lcall
test
xor
rolb
sub
bound
loope
je
push
leave
out
ss
jl
scas
icebp
arpl
inc
pop
push
sbb
pop
nop
xchg
inc
test
in
rcrb
inc
and
int
dec
inc
mov
fdiv
sub
push
mov
mov
xchg
cli
sub
push
or
ljmp
fs
xchg
mov
xor
pop
lret
dec
cld
movb
fidivrs
das
iret
mov
int3
sbb
jne
hlt
loope
cmpsb
ds
jnp
jge
xor
cmpl
idivl
gs
push
ret
jecxz
cmpsb
data16
sti
js
icebp
dec
xchg
and
or
jno
push
aam
inc
shrb
add
das
mov
adc
jl
xchg
outsb
movsl
fstpl
jbe
inc
rcrb
cltd
mov
fmulp
icebp
push
jbe
mov
fcompl
leave
scas
bound
lods
push
sub
repnz
sti
sbb
pop
xor
arpl
mov
ret
push
cli
mov
loop
ret
dec
inc
and
adc
and
mov
je
repnz
negl
inc
hlt
pop
mov
out
sti
adc
scas
or
bound
fwait
pop
outsb
push
addr16
stos
jl
shr
mov
lds
fisubl
xor
lret
loope
push
and
jb
jmp
stc
rcr
stos
movsb
ret
sahf
pop
fcoml
insl
mov
iret
mov
dec
xchg
mov
ja
cmp
push
out
pop
fcmovu
lahf
add
dec
xchg
cmp
outsb
mov
lret
or
shl
and
push
mov
xchg
out
arpl
sbb
jmp
mov
out
push
mov
bound
push
mov
and
and
in
mov
mov
cmp
or
mov
push
sbb
add
jecxz
adc
and
out
outsb
ficompl
shlb
or
and
bound
jnp
jle
into
pop
mov
sbb
adc
and
push
ja,pt
or
popf
movsb
jecxz
lea
in
scas
pop
sti
lahf
pusha
cmp
cmc
xor
outsb
sahf
loope
add
mov
std
arpl
and
xor
sahf
es
stos
dec
ljmp
push
aad
jecxz
push
inc
mov
dec
mov
in
and
add
xchg
or
fadds
push
mov
push
mov
add
popf
push
loope
mov
fdivrl
lds
pmullw
mov
das
cmc
insl
ret
addr16
fsubl
pop
mov
fs
sbb
lock
or
test
xchg
inc
push
int
xchg
xlat
or
sbb
xor
dec
aaa
mov
mov
inc
inc
data16
cmp
pop
in
fwait
jo
aaa
das
in
add
das
mov
mov
cmp
jnp
lea
pop
push
push
jecxz
scas
and
add
jns
xlat
dec
xchg
dec
or
xchg
aaa
popa
ret
sub
push
or
fisttps
xchg
outsb
push
ja
outsl
mov
es
loope
in
pop
pop
pushl
mov
sti
inc
sar
call
mov
cs
pop
hlt
sbb
mov
setno
pop
fldcw
mov
pop
or
fdivr
orb
inc
addr16
or
out
das
xchg
shrl
pop
add
aaa
pusha
cld
sub
ss
push
or
mulb
in
lret
add
mov
jns
sarb
dec
cmp
and
lahf
cmc
sub
inc
dec
jge
ret
adc
cmp
and
shufps
notl
sub
push
mov
jmp
mov
out
xchg
fwait
pop
mov
cmc
lret
lret
cmp
mov
fsub
call
add
dec
mov
mov
lea
push
xchg
outsb
bswap
orb
insl
and
loope
aaa
sahf
in
jmp
cmp
popl
fyl2xp1
xchg
inc
test
push
jge
mov
sbb
or
stos
lock
push
push
and
ljmp
inc
cmp
aam
mov
in
or
pop
mov
inc
call
push
mov
pop
imul
js
test
test
hlt
adc
test
lods
adc
or
lock
mov
pop
outsb
mov
mov
loop
pop
addl
adc
cmc
aad
sti
cs
out
divb
xor
rolb
iret
xchg
jae
inc
push
push
repz
sbb
shr
cmc
dec
mov
pop
jge
adc
push
jae
daa
push
leave
push
into
cmp
mov
cwtl
arpl
aaa
xchg
es
movd
mov
or
call
cmp
cltd
roll
insl
ss
sbb
jmp
pop
das
adc
cld
push
sbb
mov
mov
push
mov
adc
lcall
sar
fldcw
xor
adc
mov
inc
lds
inc
inc
movsw
dec
jl
pushf
jp
aad
sbb
jge
out
push
xor
or
or
mov
sbb
sub
dec
push
dec
xchg
shrb
jg
jnp
jne
jp
ss
mov
mov
out
jbe
inc
loope
mov
dec
ljmp
pop
pop
movsb
or
pop
jbe
andb
pusha
rcrb
pop
pop
pop
popf
add
cmpsb
adc
inc
jbe
or
stos
iret
inc
mov
js
call
pop
je
loop
test
nop
pop
outsl
les
sub
or
cmpsl
sti
test
cmp
add
clc
dec
movb
jae
fldcw
push
sbb
popl
add
sub
xchg
ja
xchg
push
xor
cwtl
mov
adc
out
jne
das
mov
push
inc
aad
dec
mov
rcrb
sub
inc
or
sbb
inc
hlt
ret
adc
call
jbe
mov
addr16
in
je
sub
loop
cmp
dec
jb
mov
divb
inc
adcl
or
push
xchg
clc
aad
movsb
and
es
and
imul
jno
jne
test
iret
dec
pop
pand
fidivl
addr16
stc
shll
aaa
or
xorb
insl
dec
cmp
push
popf
and
jb
lods
pop
ljmp
aas
pop
shlb
xchg
mov
push
fwait
ret
cs
fadds
sub
arpl
cmp
sbb
xor
aas
xorb
lret
cmp
bound
dec
lea
das
fidivrl
addr16
test
lahf
dec
xor
scas
mov
sub
out
cmp
outsb
jp
xor
mulps
adc
xchg
lods
movsl
ret
mov
push
xchg
ja
stos
loop
outsb
movsb
mov
pusha
xchg
in
arpl
mov
fdivrl
sub
add
in
jnp
negb
pop
movsl
dec
imul
push
loope
mov
insl
pop
push
sub
pop
hlt
mov
in
jnp
test
cltd
loop
push
xor
arpl
mov
fdivs
mov
aad
imulb
inc
ja
sub
fbstp
int3
cwtl
xor
hlt
movsl
dec
andb
xor
push
pop
xor
pushf
popf
addr16
sar
add
cmpsb
test
es
mov
add
shrl
fdiv
ljmp
add
dec
aaa
jecxz
lahf
sub
or
in
bnd
lret
jb
add
ljmp
pop
xor
cmc
mov
jne
jno
je
pop
xchg
adc
mov
cli
fs
sbb
in
test
ficomps
cmpsb
dec
push
popl
ss
xchg
adc
sub
push
mov
jmp
rorl
hlt
stos
shrb
inc
cmp
ljmp
push
sbb
jge
rolb
pushf
mov
aam
cltd
neg
xchg
outsb
in
mov
fwait
rclb
je
je
and
jbe
pop
dec
dec
outsb
std
mov
outsb
jo
lods
sti
inc
add
push
out
jnp
bound
shr
iret
outsb
push
insb
aaa
mov
pop
fldl
mov
scas
mov
jg
push
pop
inc
arpl
and
add
cmp
divl
add
mov
jbe
jns
mov
mov
cld
fsubs
sbb
cmp
jbe
jo
movsb
jmp
jae
cltd
pusha
inc
add
add
pop
mov
sbb
xchg
int3
je
addr16
or
fsubs
mov
pop
xor
push
pop
pop
inc
outsb
lods
jecxz
adc
loope
shll
loopne
jge
pusha
lods
adc
sub
mov
repz
ss
push
addr16
aaa
xor
stos
lret
sbb
js
jbe
xor
cwtl
fs
sub
rcrl
aad
outsb
push
jecxz
jae
cmc
rcrl
sub
outsb
pop
bound
repnz
test
ja
loop
addb
and
cmp
faddl
fidivrl
call
jnp
add
shlb
or
and
test
and
pop
inc
test
ficompl
cltd
cmp
lcall
sbb
xor
loope
clc
mov
addl
jle
inc
and
js
mov
popa
push
stc
fnstsw
xchg
inc
shrl
les
cs
or
xor
cli
ret
call
cmp
ret
add
pop
push
push
inc
inc
add
pushl
movsl
cmpsb
adcl
inc
push
push
arpl
mov
jnp
cmp
loopne
jnp
aam
fstps
cmp
add
pusha
inc
push
adc
push
cmpsb
mov
imulb
mov
sbb
imul
int
leave
jmp
mov
lret
mov
inc
sbb
ljmp
mov
bound
jb
adc
push
jmp
sar
inc
popa
cmp
and
loope
negl
aaa
adc
mov
imul
fimull
inc
push
jmp
push
mov
mov
push
insl
sti
jbe
jae
xlat
lea
lods
xorb
mov
xchg
ljmp
cmp
rcrb
push
pushf
sub
jbe
in
xor
inc
or
or
xchg
sarb
mov
ret
sarb
xchg
or
dec
jnp
cmpsb
je
mov
enter
faddl
jmp
xor
test
push
icebp
dec
pop
pop
jp
mov
sub
rclb
outsb
add
pushf
ja
lcall
inc
lret
imul
push
mov
jecxz
mov
jnp
fcomps
ja
stc
mov
mov
dec
loopne
aam
xlat
jnp
popf
test
insl
adc
negl
jbe
adc
hlt
aas
push
js
dec
rol
mov
test
mov
into
lahf
mov
rcl
sub
xchg
and
xchg
and
outsb
xchg
sub
ljmp
cwtl
hlt
test
scas
fidivl
dec
test
mov
jp
loope
push
andb
sbb
sbb
in
rclb
mov
dec
xchg
ret
cmpsb
aam
push
cmp
dec
divb
in
jno
dec
sti
xchg
shlb
and
fadds
sti
xlat
hlt
test
adc
push
int
popf
adc
inc
push
cmp
mov
mov
divb
insl
fists
jmp
pop
cmp
sbb
jecxz
cmpl
xchg
xchg
mov
stos
ljmp
cmc
rorb
cmp
jecxz
sub
ljmp
push
test
pop
dec
inc
insl
imul
mov
push
cmpsb
lcall
mov
pushf
jmp
repnz
cmc
sbb
fisttpll
rolb
jnp
and
sub
mov
mov
push
xor
adc
aaa
leave
inc
jbe
int3
xor
push
movsb
inc
fisttpl
inc
sbb
in
jle
mov
xor
cmpsl
push
out
sti
scas
cmp
push
push
inc
or
ret
ja
inc
fiaddl
insb
lahf
sub
cmpsl
pmaddwd
shrb
into
push
push
mov
lds
sti
jb
mov
xor
out
insl
stos
jecxz
jmp
clc
push
ja
popa
js
loop
loope
fidivl
push
sahf
out
push
mov
pusha
xor
xor
stc
inc
inc
push
sbb
repz
adc
cmp
add
jae
es
jae
pop
jbe
movsb
lds
int
insl
test
dec
loopne
mov
jbe
ss
shr
lret
lds
notl
xor
or
xor
repnz
rcl
stc
jns
loop
sub
add
cmpsl
ljmp
std
rol
mov
movsb
push
sbb
pop
scas
out
cmp
int3
or
shr
loope
xor
mov
and
and
add
add
mov
xchg
out
lods
pop
and
sbb
push
xchg
insl
lret
imul
dec
or
sbb
test
xchg
enter
addr16
add
push
xor
mov
adc
mov
inc
outsb
adc
xor
iret
push
fistpll
fidivl
mov
or
inc
dec
push
xor
andl
push
jp
ss
shrb
inc
cmc
cmp
and
loope
cmp
fsubrp
inc
jo
loop
mov
test
stc
push
mov
xchg
cs
out
jnp
out
popf
fldenv
jo
sbb
loope
jecxz
outsb
xor
pushf
mov
pop
jp
mov
dec
out
push
push
andb
push
pop
test
or
mov
outsb
mov
bound
call
not
push
jmp
sub
test
dec
lahf
cld
faddp
mov
das
subb
outsb
cld
dec
ficoml
pusha
cmp
inc
iret
inc
mov
fwait
out
gs
in
adc
sbb
and
aam
dec
scas
add
ja
xor
call
ljmp
lea
in
add
and
les
dec
mov
mov
je
rorl
and
stos
push
xor
push
dec
mov
je
xlat
fmul
mov
adc
jo
push
out
hlt
push
shlb
adc
push
dec
jmp
sbb
in
xor
inc
jae
jecxz
fimull
divl
adc
sbb
push
fidivrl
inc
push
aad
mov
or
imul
jecxz
inc
fcmovnu
outsb
cmpsb
inc
and
xchg
in
cmp
xchg
in
popf
push
ja
pop
sbb
inc
rorb
sub
arpl
mulb
mov
leave
push
inc
outsb
push
inc
inc
mov
cld
add
xchg
shr
rorb
inc
lret
push
mov
mov
mov
pop
push
xchg
scas
loope
mov
dec
jo
test
pusha
mov
out
jbe
mov
push
sbb
cmc
and
imul
pop
mov
stc
and
mov
adc
pop
hlt
sbb
mov
push
mov
and
pop
xchg
test
inc
jbe
mov
sbb
shlb
mov
fldcw
out
jno
ss
sbb
fmull
lret
pusha
ret
outsb
adc
pop
mov
lahf
fmuls
xor
stos
sbb
scas
sub
shlb
jbe
stos
notb
xchg
rclb
jb
dec
std
sub
and
addr16
rolb
cmp
je
ret
xchg
leave
test
js
sbb
js
or
mov
in
in
inc
pop
inc
dec
outsb
fs
jmp
stc
je
cs
mov
in
lret
fnsave
testb
pop
loop
or
hlt
xchg
sub
mov
dec
jg
sahf
push
sbb
jecxz
xchg
cmp
jbe
sub
out
pop
idiv
dec
adc
jo
addr16
dec
cmp
jp
mov
ret
cmpsb
adc
aas
jbe
inc
out
sti
nop
pop
lods
movsl
lcall
outsb
popf
xchg
in
arpl
jle
lock
pop
movsb
ficompl
ja
push
dec
fs
or
adc
inc
rolb
inc
mov
test
xor
xchg
push
mov
and
cmc
mov
shlb
push
sarl
inc
iret
fidivrl
sbb
fstpl
fbld
adc
add
test
mov
loope
jbe
rcrb
aaa
xor
int
cmp
and
mov
das
ljmp
in
cmp
adc
lret
cmp
push
jle
mov
imul
push
xchg
cwtl
push
outsl
cmp
add
push
sbb
sub
not
pop
mov
lods
scas
idivb
xchg
int3
mov
rol
dec
mov
xor
cmpsb
mov
xchg
aam
mov
stos
das
aaa
xchg
test
adc
cmpsb
and
mov
inc
stc
adc
xor
ret
shr
push
dec
and
orl
cltd
bound
lahf
pop
ja
or
cmpsl
xchg
data16
cmp
fwait
loopne
cwtl
xor
enter
stos
dec
clc
or
orb
sti
jmp
jbe
je
lods
subb
pop
mov
inc
xchg
ss
jmp
test
push
daa
add
mov
adcb
ljmp
sub
lcall
cld
push
bnd
push
xchg
inc
lahf
bound
and
movq
lret
and
jecxz
scas
test
andb
imul
je
rolb
push
sti
data16
push
call
inc
pop
push
and
xchg
jg
push
push
fisttpl
repz
hlt
enter
mov
fiadds
arpl
mov
mov
lahf
nop
xor
test
jns
pop
and
outsb
jno
cmp
dec
mov
in
xchg
outsb
pop
fdivrs
lds
loope
inc
ret
in
in
mov
mov
pop
fs
push
lds
adc
neg
popf
jl
add
cmp
outsl
add
xchg
pop
shl
adc
das
push
ret
gs
lea
imul
rcrl
loop
loop
std
lret
push
cmc
lock
movsb
add
sub
sbb
cmc
cli
jg
cs
pop
movsb
cwtl
orb
mov
adc
std
add
in
mov
jge
leave
ljmp
or
jecxz
mov
push
cwtl
movsl
mov
cmpsl
dec
sbb
fucomp
outsb
pop
add
or
imul
sbb
je
xchg
shl
pop
jae
jge
cmp
and
xchg
or
adc
iret
and
addl
roll
rolb
divb
fstl
fwait
subb
cld
scas
or
push
jo
sahf
shl
jbe
shrb
pushf
sub
pop
mov
les
mov
scas
dec
sub
mov
shrb
fmuls
addr16
fistps
xchg
out
outsb
adc
or
cmp
push
mov
and
faddl
or
push
test
push
xor
ss
out
std
fstps
xchg
adc
push
sbb
loope
inc
lods
test
je
ljmp
sub
mov
cmc
insl
rcr
sub
or
enter
mov
sahf
jg
mov
ffreep
stos
mov
mov
inc
into
jg
sbb
clc
pusha
fiaddl
dec
in
add
stos
or
pop
rolb
imull
xchg
fnstsw
jbe
sti
cmp
loope
jae
mov
add
cmp
stos
lds
outsb
xchg
mov
pop
push
sbb
sahf
sub
test
pop
aad
push
addr16
das
pusha
loope
cmp
cwtl
loope
mov
insl
xchg
pop
push
xorb
fisubl
add
mov
sarb
or
adc
xchg
cli
inc
adc
ficomps
imul
cmp
adc
xor
sahf
sahf
mov
arpl
outsb
in
mov
lods
into
inc
mov
mov
lods
sub
negl
push
out
inc
pop
xchg
and
push
popf
xor
push
add
lods
and
add
jge
jns
cmp
mov
cmpsl
push
test
or
fwait
xchg
outsb
and
in
lcall
ljmp
gs
jns
ds
imul
dec
adc
std
jbe
out
xchg
in
add
push
orb
dec
push
adc
aas
mov
lea
daa
add
jb
jbe
ret
aam
std
push
jp
stos
push
test
shr
testl
clc
sub
xor
adc
ret
stos
mov
sub
iret
insb
xor
mov
cmp
mov
ss
jg
inc
jb
sbb
jl
add
shlb
and
leave
push
pop
insb
dec
loop
mov
mov
jbe
in
test
ds
test
loop
adc
ja
or
in
orb
sarb
scas
cld
pop
nop
xchg
scas
jecxz
jbe
mov
stos
subl
pop
mov
cmc
cmpsl
and
int
inc
mov
fs
popf
sbb
push
xor
aaa
fdivrl
jae
stc
stc
js
scas
mov
test
cmp
ror
sbb
fiadds
xor
push
dec
mov
sub
dec
loop
pop
insl
jb
or
stc
jmp
jmp
jnp
cmpsl
fisubrl
mov
dec
mov
ja
aas
dec
inc
push
push
js
jne
stos
push
pop
push
jae
mov
inc
sbb
fcomps
in
pop
lock
or
fcmovnbe
loop
lods
mov
jl
mov
xchg
adc
cld
dec
sbb
mov
inc
and
adc
mov
fcmovnu
push
pop
jg
push
sub
pop
sarb
xor
les
mov
mov
xor
adc
sub
lahf
mov
aas
mov
mov
xchg
mov
jne
cmpsl
jmp
pop
dec
mov
xchg
xchg
out
xchg
fsubs
pop
js
ja
mov
insl
xchg
int
sbb
fisubrs
loopne
lods
cld
fmull
push
jnp
mov
ja
in
dec
lods
mov
push
pusha
push
fildl
adc
xchg
xchg
fnstcw
xchg
pop
shr
mov
int3
jns
scas
adc
lret
ss
jbe
daa
adc
or
cmpsl
adc
data16
test
divl
insl
sub
pop
dec
lret
jl
adc
mov
xor
sbb
cmp
mull
js
sbb
clc
and
imul
insb
pop
loop
repz
pop
mov
ljmp
sub
clc
fnstsw
or
push
outsb
mov
xor
fiaddl
out
inc
cmp
sbb
popf
xchg
xor
lods
iret
loop
outsb
sub
ss
sarb
jne
or
insl
ret
aad
stos
jl
lcall
and
out
test
fiadds
int3
insl
add
lds
rorl
jnp
dec
clc
aaa
and
lcall
pusha
sub
push
out
daa
and
jae,pt
or
hlt
sbb
stc
xchg
leave
push
loope
ljmp
fnstenv
jl
dec
dec
fwait
rorb
pop
dec
fwait
paddw
lcall
test
and
imul
jne
mov
push
sbb
dec
aad
cmc
lea
cltd
roll
test
or
sti
test
pop
sbb
je
sbb
fnstsw
push
jnp
xor
sub
jnp
pop
pop
or
loopne
dec
movsl
mov
inc
in
scas
ret
test
imull
dec
lea
fsub
push
xor
lahf
mov
je
and
and
inc
mov
cmp
cmpsl
addb
sbb
cld
inc
pop
and
sqrtps
push
push
ljmp
and
cmp
testb
adc
dec
push
and
fcomps
cmp
pop
cmc
xor
xchg
jl
stos
out
mov
sbb
loopne
out
xor
push
out
fcmovnbe
mov
sub
mov
inc
xchg
inc
add
xchg
movsl
mov
in
sbb
flds
in
sub
xor
out
leave
xchg
or
loope
sbb
mov
lcall
dec
mov
mov
icebp
test
pop
jge
pushf
push
rorb
mov
sbb
sbb
adc
jbe
cwtl
and
mov
dec
dec
push
inc
stos
jbe
sahf
mov
sub
push
adc
fsubrp
and
fsubs
sub
inc
pop
xor
push
jbe
repnz
ficoml
mov
dec
jmp
sub
call
sub
icebp
insb
pop
xchg
cmpsl
mov
in
shlb
lret
mov
stc
jnp
sub
xor
subb
xchg
les
dec
fldl
enter
pop
mov
fimuls
pop
push
insl
imul
xchg
mov
outsb
fdivrl
cld
ret
loop
sbb
repz
xchg
dec
or
push
xor
xchg
rcrl
sti
mov
inc
mov
pop
inc
cmpsl
test
ds
cmp
add
fisubrl
cmp
les
cmp
shlb
fwait
xor
sbb
cwtl
push
lods
push
mov
mull
pop
es
movzwl
add
nop
test
push
jp
movsl
cmp
stos
or
negb
ljmp
iret
unpckhps
sti
into
cmp
notl
addr16
xchg
mov
add
sarl
and
dec
xchg
sub
mov
mov
jae
pop
push
shrb
decb
ret
out
or
ret
cmp
jae
sub
jne
arpl
push
sbb
pop
push
inc
pop
push
sti
inc
sti
jle
out
jbe
mov
push
out
mov
outsb
xor
shlb
in
nop
xchg
shl
lds
xor
push
ds
out
rorb
xor
cmp
cli
inc
mov
mov
outsb
cmp
scas
dec
ds
mov
and
test
je
stc
jp
popf
pop
loop
or
push
rcrb
in
cmp
or
inc
imul
addr16
es
or
or
xchg
push
outsl
and
sub
sbb
xor
dec
out
mov
repnz
je
pop
cmp
inc
lods
adc
sahf
or
sti
push
cwtl
arpl
mov
mov
adc
enter
adc
add
in
sub
data16
and
fisubl
jmp
add
inc
add
adc
loope
not
cmc
popa
or
xorb
outsl
sbb
dec
test
mov
mov
insl
jae
add
lods
jns
mov
scas
rcll
fcmovnbe
cmp
xor
push
nop
jnp
ss
adc
mov
mov
jmp
bnd
jl
push
jbe
push
pusha
sub
jae
rcr
mov
mov
dec
inc
addr16
lret
and
mov
fcoml
cmp
dec
push
push
xchg
fdivl
rorb
enter
mov
xorl
sahf
ds
out
loope
and
stc
fistps
lret
cwtl
gs
push
cltd
insb
xor
adc
loop
ds
leave
arpl
mov
add
push
stos
cs
test
outsb
je
push
and
hlt
aad
into
or
outsl
aaa
popf
movsb
test
rcrb
out
in
dec
mov
dec
pop
addr16
lods
inc
aas
push
jo
inc
pop
shl
adc
jle
imul
sti
pop
sbb
sbb
inc
in
adc
popf
les
push
lahf
or
pusha
fisubrs
jne
push
in
dec
mov
mov
mov
or
mov
inc
ret
lret
dec
negl
and
sub
insb
dec
cmp
mov
lods
gs
fwait
dec
out
mov
jecxz
insl
in
lds
adc
sahf
orb
std
jb
inc
push
in
jmp
push
lds
test
inc
es
outsb
push
enter
mov
inc
inc
int3
cmc
stc
sbb
shlb
cmp
ficoml
jecxz
push
sbb
mov
jecxz
shrb
fwait
pop
lods
lods
lcall
loopne
lods
jge
jbe
shrl
push
iret
fsts
push
push
insl
out
mov
movsb
mov
into
xchg
pop
lods
cmpsb
lret
inc
scas
push
cmp
jbe
aam
inc
dec
mov
cmpsb
ljmp
bound
inc
ds
sub
rclb
xor
stos
dec
sbb
dec
push
out
loope
jbe
add
add
mov
sbbb
lahf
add
push
repnz
fstps
pop
fwait
repnz
je
in
fnstsw
shrb
lret
sbb
inc
jae
outsb
dec
das
cmp
inc
xorb
and
ja
inc
fildl
xor
iret
popl
xchg
and
insl
jb
idivl
leave
mov
and
adc
iret
fisubs
lods
out
mov
jbe
jae
xor
loope
mov
mov
jbe
push
mov
insl
loopne
ret
push
stos
shlb
xor
xchg
orb
sub
jecxz
mov
outsl
sub
dec
and
cmp
shlb
dec
ja
rolb
stos
in
xchg
jae
jl
out
jnp
fwait
inc
fbld
xchg
or
mov
and
fisttpl
mov
xchg
stos
aaa
call
movsb
lods
out
outsb
or
jae
inc
sub
inc
loope
cmp
lahf
rolb
stos
and
cmpsl
loope
cmc
or
nop
mov
ljmp
jmp
dec
push
sub
es
dec
jne
sbb
arpl
jecxz
jle
lret
nop
imull
push
je
push
adcb
xor
cmp
lret
sub
adcb
ds
push
inc
sbbl
inc
and
pop
mov
and
jecxz
pop
cmp
mul
leave
push
testb
dec
cmp
cmp
xchg
sub
enter
sub
mov
mov
out
ds
subl
aaa
or
roll
mov
mov
mov
push
sbbb
stos
loope
push
hlt
mov
sar
jno
loope
fistl
fsubs
mov
pop
inc
lods
mov
jbe
das
mov
subl
notb
xchg
fistl
inc
mov
push
lds
mov
adcb
loop
pop
inc
loope
pop
push
push
mov
repnz
js
int3
cmp
cmp
into
cmp
mov
mov
push
dec
jns
movl
push
jecxz
push
mov
out
cs
idivl
xchg
adc
sbb
and
das
iret
push
mov
adc
dec
arpl
push
ret
push
cmpsb
adc
or
jnp
mov
push
jmp
int3
pop
adc
xchg
or
stos
xchg
jge
add
fidivrs
mov
adc
jo
outsb
sub
xor
subl
mov
cltd
fsub
insb
cmp
les
push
or
xchg
push
scas
fwait
pop
jb
mov
lea
shrl
loope
xor
jecxz
pop
aaa
cmpsb
in
push
lret
lret
pusha
out
inc
popa
pusha
cltd
add
mov
xor
loope
gs
stos
ss
popf
lods
add
int
ljmp
push
aad
push
mov
dec
sahf
adc
fsubl
xor
ss
jo
in
andl
test
bound
pop
pop
adc
xchg
icebp
jp
pusha
inc
insl
mov
pusha
into
mov
and
inc
pusha
cmp
inc
repz
data16
sub
push
push
cmc
je
xor
mov
int3
inc
in
in
fiaddl
sub
addr16
mov
imul
pusha
inc
mov
mov
mov
push
dec
mov
xchg
pop
fwait
loope
mov
cwtl
jecxz
sub
sbb
adc
lcall
jge
pushf
insl
jmp
cmpsl
jg
ret
fiaddl
push
mov
or
psadbw
xchg
adc
dec
call
mov
jns
movsb
ljmp
jmp
aaa
xlat
sub
pop
loope
ret
push
mov
or
jns
inc
pop
xchg
mov
or
mov
xor
inc
sbb
inc
mov
inc
into
pop
loope
iret
mov
aaa
les
je
ret
loop
dec
stc
push
fisubrl
loop
aam
loope
mov
mov
fwait
aaa
pop
mov
push
pusha
cmp
pop
dec
outsl
ficompl
loope
cmp
shl
stc
aaa
pop
mov
sbb
inc
pusha
lcall
scas
cs
loop
push
push
loopne
cmp
mov
pusha
push
mov
mov
xor
jns
or
aas
inc
cwtl
sti
push
int
and
jne
pusha
movsl
lds
push
testb
xchg
sbbl
ss
pop
mov
add
ffree
loop
hlt
inc
and
add
pop
repz
cmc
sub
arpl
lds
or
fstp
pusha
add
sub
and
aad
shl
adc
out
scas
push
negb
psubsb
je
cmp
aam
pushf
sub
inc
pop
into
loope
stos
push
cld
or
sbb
and
mov
mov
lret
les
call
inc
pop
ljmp
push
fnsave
roll
inc
sub
jbe
jecxz
and
sbb
dec
cmp
inc
push
loopew
inc
or
sub
push
mov
mov
cmp
mov
inc
fidivrl
push
arpl
jae
shrb
push
mov
jno
push
push
mov
jae
mov
inc
dec
sti
out
mov
pop
xlat
hlt
push
and
jp
loope
jbe
js
cmc
pusha
clc
lock
mov
movaps
push
repz
cwtl
inc
and
test
lock
and
out
neg
cmp
fnsave
pusha
dec
loope
sbb
inc
or
das
mov
adc
imul
jecxz
pop
mov
inc
mov
dec
cmpsb
jecxz
pop
aaa
dec
mov
in
or
shll
insl
hlt
daa
sbb
mov
loope
in
push
push
xlat
adc
cmp
loop
pop
xchg
loope
dec
push
dec
shlb
mov
mov
loop
push
loop
dec
adc
mov
jb
mov
scas
sbb
xor
add
push
and
test
lahf
fisttpl
rcrl
push
push
push
and
addl
shl
ja
mov
sub
and
xor
ja
cwtl
push
fstpl
testl
call
loop
and
arpl
rcl
adc
pop
sub
inc
adc
test
rolb
push
jecxz
cld
pop
sub
jmp
inc
mov
pop
ljmp
popa
cmp
loope
in
mov
jecxz
jnp
sub
lret
push
push
sbb
and
andb
in
xlat
popf
jecxz
or
aaa
imul
repnz
fldl
fsubl
test
pusha
or
clc
and
call
notl
sub
pusha
mov
mov
lret
sub
ljmp
cmp
int
xchg
and
cmp
imul
pop
fwait
aad
jg
and
jecxz
pop
dec
dec
xor
push
push
das
insb
push
clc
sbb
aad
xchg
aas
ja
jbe
xchg
lds
fucom
imul
fdivs
mov
add
cmp
les
mov
cmp
fs
sub
das
ret
shl
jecxz
fsts
test
sbb
inc
inc
push
and
or
dec
loop
sbb
loope
inc
cmpsl
mov
mov
int3
insb
aaa
popa
xor
or
xor
and
mov
test
loop
nop
or
hlt
and
mov
aaa
push
or
cmp
loope
add
fstp
je
sub
xor
and
sub
call
jg
dec
mov
sbb
jecxz
inc
aaa
or
loopne
mov
add
and
popa
push
addb
test
sbb
cltd
fdivrl
loop
and
fsubrl
xor
call
mov
push
das
std
mov
and
lret
dec
mov
in
ds
or
dec
dec
movsb
push
adc
push
inc
loope
sub
jecxz
push
aaa
cmp
pusha
je
sub
jnp
insb
aad
sbb
jg
pop
dec
neg
dec
pusha
jbe,pt
jle
insb
arpl
and
fwait
xor
rcl
sbbb
dec
inc
inc
or
jb
mov
scas
loope
dec
push
push
jp
push
imul
stc
icebp
adc
std
mov
push
mov
push
imull
divl
or
push
xchg
push
int
and
push
rcll
and
push
out
sbb
inc
cmp
mov
jecxz
or
pop
dec
jecxz
adc
sahf
inc
mov
push
shl
add
fnstenv
sti
jecxz
cmp
sbb
inc
pusha
push
out
loop
push
adc
or
cmc
pop
repz
push
inc
add
jnp
dec
inc
aaa
and
movsl
xor
cltd
loope
mov
clc
push
aas
pop
roll
leave
mov
scas
jmp
sbb
pop
cmp
shrb
cmp
in
icebp
push
xchg
xor
push
loope
ffree
popf
jecxz
jns
push
jmp
lret
cmp
lea
in
and
jecxz
add
psraw
cwtl
push
aam
and
and
inc
fs
faddl
push
xor
cs
shl
mov
fwait
xor
mov
xchg
mov
mov
loop
js
loope
stos
push
imul
arpl
cmc
push
add
fldl
shlb
loope
aam
sub
jg
and
adc
push
inc
sub
gs
jecxz
dec
mov
sbb
cmc
stos
push
sub
push
or
inc
jecxz
in
mov
push
out
push
popa
jecxz
sbb
test
lock
ljmp
ss
push
pusha
xor
xchg
cs
ficompl
sub
call
lock
push
jno
loop
lahf
sub
or
sub
add
fstpl
xor
dec
aaa
mov
aam
repz
add
fstpl
mov
mov
pop
cmp
inc
aas
or
push
lret
mov
push
mov
out
pusha
jmp
repnz
mov
push
jg
je
loop
scas
popa
mov
pop
std
mov
push
sub
xor
mull
subb
dec
dec
mov
aas
and
and
add
xor
divl
push
mov
pop
std
loop
loop
movsb
mov
inc
int3
cli
jecxz
cmpsb
aaa
sbb
pusha
xchg
mov
cmc
pusha
fwait
jbe
sub
mov
xor
je
pop
inc
ret
mov
inc
inc
stos
and
and
iret
outsb
push
and
jo
push
push
mov
call
loope
pop
and
push
dec
inc
outsl
in
lret
pop
loope
sbb
loope
add
inc
mov
stos
add
loope
mov
mov
das
pop
ret
rep
jmp
push
mov
testb
push
loope
sub
jecxz,pt
jge
sub
popf
mov
insb
loop
icebp
pusha
loope
lods
push
mov
add
mov
mov
in
dec
in
mov
int3
ss
loop,pt
jecxz
sbb
sbb
jnp
push
or
sub
mulb
clc
xor
lea
lret
push
aad
fs
shll
jecxz
aaa
cmp
aas
dec
push
pusha
cmp
ffree
inc
push
dec
dec
idivl
push
jbe
mov
das
mov
pop
jnp
rol
inc
loopne
or
xchg
xor
jae
vmovdqa
inc
pop
cwtl
inc
mov
jb
lods
sub
out
push
aaa
nop
std
pusha
adc
add
mov
shlb
shll
imull
inc
in
inc
divb
cmp
loope
bound
jecxz
inc
jmp
cli
cld
daa
pop
aaa
scas
enter
repz
cmp
out
test
aam
sub
pop
rcrl
clc
sub
test
pusha
mov
test
mov
aad
pop
sarl
inc
outsl
xlat
sub
je
iret
jmp
and
jecxz
or
shll
pop
movsl
ds
test
jo
mov
into
push
cmp
jbe
cmpsl
and
out
and
cmp
ds
popa
xor
inc
shrl
xchg
and
outsb
dec
push
or
mov
push
mov
and
out
or
ret
dec
sub
pusha
push
adc
mov
or
test
xchg
pop
xchg
std
dec
jecxz
push
andl
jecxz
aam
neg
divb
fbld
and
xor
fisubrs
xchg
sbb
jmp
mov
mov
mov
testl
xor
inc
xlat
push
push
outsb
and
xcrypt-cfb
cmpsl
jecxz
gs
mov
imull
sti
add
push
mov
icebp
and
scas
aam
in
aaa
mov
or
or
sahf
and
lds
mov
insb
ljmp
xchg
sub
pop
xor
mov
push
mov
jno
push
aaa
imul
cwtl
fbld
mov
rclb
lds
add
shll
call
xchg
xchg
sub
div
adc
mov
aaa
sbb
adc
into
mov
push
je
or
loope
pop
push
xchg
mov
inc
jnp
xor
xchg
cmp
lret
jge
push
enter
bound
and
into
inc
inc
lea
pop
mov
je
inc
in
arpl
pop
inc
ja
stos
shrb
shrb
push
in
or
and
aas
push
call
xor
and
adc
push
movsl
cs
cmpsl
gs
push
lds
repnz
loope
daa
xor
rcrb
cld
and
mov
dec
addr16
scas
push
mov
cwtl
jle,pt
jecxz
ss
adc
xor
jmp
testl
mov
xor
mov
sub
loope
xchg
adc
imul
in
cld
outsl
pusha
push
pop
adc
jecxz
push
xchg
notb
dec
mov
pop
sbb
jp
and
cs
push
stos
scas
and
and
loope
dec
in
mov
loop
out
push
pop
std
pusha
faddp
smsw
pusha
pushf
push
in
adc
cs
sub
ret
cs
jecxz
ja
inc
repz
push
add
push
nop
fcoms
aaa
sub
jns
push
div
add
pusha
mov
cmp
pusha
imul
push
divl
loop
ss
inc
add
pusha
xchg
push
jge
push
addr16
inc
mov
inc
aas
adc
mov
sbb
mov
bound
je
loop
cli
or
fsubrs
dec
add
inc
lea
inc
jo
pusha
pop
mov
fldl
div
inc
imull
pusha
mov
orb
inc
fstl
sbb
and
jae
cmpsb
stos
and
insl
scas
mov
int3
lods
jmp
xchg
inc
xchg
testb
xchg
daa
mov
mov
fcoms
lds
xchg
shr
pop
mov
insb
sub
rcll
inc
cmp
push
jmp
rcrb
call
stc
aaa
mov
jae
inc
xchg
fsubl
cmp
cmpsb
daa
stos
aas
jecxz
push
aaa
movsl
out
xchg
jbe
jecxz
pop
dec
cli
cmpsb
sub
mov
test
pop
and
loopne
adc
mov
out
jl
or
test
ror
push
popl
cmc
repnz
pop
cmp
aaa
loopne
add
jmp
sbb
ljmp
pop
jecxz
loopne
mov
call
dec
mov
push
gs
xchg
pop
lods
popa
mov
push
int3
and
xlat
shll
and
cmp
mov
lcall
push
rcrb
and
cmpsb
push
pop
pop
jb
insb
jecxz
and
pusha
mov
mov
pusha
outsb
test
xor
xchg
xchg
addr16
push
jns
inc
cld
subb
inc
sub
lret
push
in
loop
push
cwtl
loope
pusha
push
or
ljmp
insl
mov
mov
inc
pop
and
jmp
dec
jecxz
mov
stc
cmp
pop
jmp
inc
push
jno
loopne
loop
cwtl
cmp
mov
inc
hlt
add
out
jecxz,pn
test
mov
push
mov
js
repnz
cltd
jmp
cmpsl
push
inc
stos
jne
and
mov
jecxz
inc
decb
push
jno
out
pop
imul
sahf
les
lods
inc
ja
and
loope
jne
rcr
dec
inc
sbb
inc
jecxz
xchg
jmp
test
dec
aaa
cmp
sub
pop
mov
add
in
sbb
cmp
adc
push
push
lds
adc
in
aas
fs
lods
pusha
xchg
call
repz
aas
mov
mov
jbe
not
lea
add
mov
ss
lds
inc
mov
std
loop
movsb
aad
sub
psllw
push
inc
add
adc
pop
push
lods
inc
add
inc
jg,pt
adc
shl
aaa
push
dec
push
dec
ja
call
ljmp
loope
lret
adc
aaa
lahf
movsb
pop
fndisi(8087
jmp
and
xchg
mov
jecxz
cmpsb
scas
add
testl
adc
lcall
add
add
xor
dec
push
das
fs
outsl
fldenv
jecxz
mov
or
push
je
sbbb
dec
fwait
pop
inc
adc
fldt
loop
lods
ret
push
nop
sbb
fidivrs
pop
movsb
jecxz
loop
dec
adc
fimull
and
jecxz
xchg
aaa
cmpsl
mov
push
mov
inc
js
pop
fwait
inc
mov
popf
dec
and
cmp
add
jne
ljmp
mov
mulb
scas
cmp
inc
imul
in
xor
inc
mov
mov
inc
out
fldl
and
aas
push
lods
adc
sub
and
xor
ljmp
popa
pop
enter
sbb
add
ljmp
aaa
mov
shrb
pop
aaa
pop
out
xor
pusha
dec
movsb
pop
cmc
ljmp
cmp
loop
in
ljmp
clc
sub
fisubrl
les
mov
push
mov
sub
pop
sub
lea
pop
pop
not
aad
pusha
jmp
jb
stc
add
test
outsl
fs
icebp
sub
sub
cltd
loop
or
loope
nop
push
stos
imul
out
clc
sbb
int3
and
and
sub
dec
mov
repnz
push
pop
mov
push
mov
sahf
fnsave
dec
loope
out
ret
inc
test
in
loope
sbb
dec
test
shrb
and
inc
mov
or
push
pop
push
jecxz
xorl
fiaddl
test
jp
push
stc
push
outsl
lcall
fdivr
sbb
xlat
or
mov
add
sbb
jo
fucomip
hlt
outsb
push
test
and
mov
into
aad
and
xor
ss
sbb
arpl
enter
movb
or
fimull
scas
sbb
add
loop
add
jge
xor
mov
loopne
sahf
add
mov
and
and
dec
test
xor
and
xor
shrb
dec
inc
sti
addr16
shrb
out
cwtl
out
cmp
jmp
cmp
or
out
mov
imul
gs
xchg
cld
stc
test
xchg
mov
cmp
stos
clc
and
ficompl
inc
sbb
mov
stos
fucom
test
mov
cmovae
or
outsb
mov
jmp
test
jnp
push
xor
jns
pop
addr16
dec
sbb
addr16
sub
iret
jnp
in
iret
daa
or
aad
in
loopne
jge
dec
sti
pop
lahf
push
xchg
outsb
imul
das
ljmp
mov
nop
outsb
in
test
fsubs
enter
push
lods
fistpll
int
inc
outsb
cld
repz
mov
mov
inc
mov
popf
push
inc
in
ret
mov
cmp
mov
sub
aas
or
inc
sarb
xor
xlat
xor
mov
shrb
int
lret
in
or
mov
xor
lods
adc
clc
sub
loope
nop
pop
outsb
dec
fstpt
mov
inc
shlb
clc
or
nop
mov
jge
ss
scas
mov
cmpb
mov
les
mov
pop
jmp
pop
stos
out
pop
add
or
insl
inc
xchg
scas
mov
fldenv
je
out
push
pop
mov
out
xchg
inc
push
inc
pop
popf
sbb
lods
fadd
sub
push
test
lahf
fwait
sub
or
sub
arpl
mov
sti
aad
jno
cli
sub
sub
mov
sub
aam
shrb
push
inc
sub
mov
mov
xor
xchg
or
repnz
int3
subl
sti
ffree
jae
cltd
repz
arpl
sub
mov
popf
and
int3
out
push
sbb
leave
cmc
jecxz
mov
fcmovbe
lcall
repnz
mov
jg
jno
lahf
lcall
pop
pop
dec
lds
cwtl
cmp
sub
arpl
inc
subb
cs
ret
popf
xchg
mul
push
add
pusha
jp
lods
inc
shll
test
mov
sti
jae
xchg
push
popa
xor
push
repz
xchg
ret
insl
lods
aad
xchg
dec
jae
sbb
lcall
jns
or
movb
fidivrl
cmp
repnz
push
adcb
push
sahf
jecxz
mov
push
push
jmp
xchg
fst
mov
in
popa
stos
push
mov
or
adc
cmp
clc
sub
mov
rolb
stos
push
gs
les
pop
and
les
sub
add
sub
sbb
das
lcall
jnp
lds
fldpi
pop
and
insl
adc
sbb
sbb
aaa
sub
jae
adc
or
test
sbb
std
dec
xchg
push
cmp
stos
mov
cmc
shlb
mov
icebp
cmpsl
fiaddl
leave
and
mov
mov
leave
adc
das
into
inc
mull
std
arpl
sub
pop
lcall
stos
lret
or
sbb
push
and
int3
mov
arpl
mov
scas
mov
pusha
jnp
and
sahf
in
repz
cmp
loop
call
outsb
inc
movsb
jp
xchg
scas
dec
mov
inc
mov
fisubl
sahf
push
dec
and
jmp
inc
rorb
add
xor
out
or
repz
mov
mov
fcoms
add
cmp
mov
test
test
inc
test
fists
cmp
scas
gs
outsb
test
and
popa
roll
jb
mov
out
jbe
xchg
mov
jno
sti
push
aaa
jecxz
jbe
sbb
inc
nop
cltd
mov
pop
mov
hlt
cmc
jbe
dec
bound
xchg
enter
jl
jbe
fwait
xor
in
ja
lret
xor
mov
jno
lods
jnp
inc
dec
sub
in
outsb
jo
movsb
xor
xchg
or
sbb
sti
push
or
dec
pop
mov
pop
jmp
mov
and
jnp
in
mov
mov
out
and
int3
scas
ds
cwtl
push
divw
cmp
repnz
scas
imul
ljmp
sti
pop
aaa
shlb
shll
cli
dec
adc
lret
ljmp
std
movsb
xchg
mov
ret
jbe
xchg
daa
mov
arpl
or
loop
nop
xchg
cmp
fstpl
ljmp
mov
into
cmp
in
inc
xor
cmp
push
sub
dec
dec
xchg
mov
push
loop
scas
lock
test
stos
inc
xor
mov
addr16
adc
adc
mov
fistpl
rcr
sti
dec
in
daa
mov
push
loopne
pop
push
fisttps
aad
popf
ret
mov
mov
sbb
je
loop
shlb
pop
mov
jecxz
push
cmpsl
shl
test
jnp
inc
divb
sahf
xchg
cmp
stos
push
mov
outsb
push
xchg
jbe
push
pop
cltd
call
lcall
in
mov
imul
adc
fabs
jnp
mov
push
fstpl
leave
pop
je
and
and
adc
into
mov
popa
add
inc
inc
cld
add
outsb
filds
push
and
bound
dec
mov
clc
enter
jbe
test
pusha
push
lods
das
adc
jg
dec
loop
sbb
jmp
in
repnz
xor
xchg
cmp
loope
mov
mov
sbb
icebp
loop
mov
mov
mov
sub
addr16
push
incl
dec
outsb
aas
cmpsb
jbe
push
lods
das
mov
outsl
in
jecxz
mov
in
xchg
fbstp
inc
je
std
sarb
rcll
outsb
jg
in
and
pop
shlb
inc
adc
inc
jecxz
rolb
test
inc
adc
sbb
negl
aas
jae
inc
mov
xor
enter
push
lcall
aad
push
fwait
mov
push
jbe
in
fmull
mov
inc
mov
mov
shr
jle
je
cmp
es
sbb
dec
loopne
out
es
in
lds
mov
ss
nop
and
shlb
push
ret
add
mov
sbb
ret
arpl
cs
int
cmp
ret
mov
pop
je
int3
push
outsl
jl
sti
sub
and
xchg
xor
add
test
sti
pop
shr
cltd
xor
or
ljmp
pop
sbb
push
sub
xorl
sahf
dec
jo
sbb
jb
fmuls
sarl
push
mov
fistpll
sub
pop
arpl
repnz
cmp
mov
jne
int3
lea
xor
lahf
sub
mov
push
cli
and
inc
test
jae
lret
stos
imul
xchg
sub
sub
inc
xchg
inc
outsb
dec
shrb
out
lcall
jmp
inc
jge
das
cmp
rorb
lcall
lcall
fisttpll
out
and
mov
std
cmpsl
rcr
sub
dec
add
and
aas
sub
xor
jmp
negb
into
arpl
jbe
jae
das
nop
fldt
push
int
sbb
and
ljmp
inc
mov
push
repnz
jmp
pop
xor
inc
xchg
xchg
pusha
aad
ljmp
outsb
pop
cli
lret
in
popf
mov
hlt
inc
sbbl
pusha
fst
mov
outsl
mov
xor
or
and
shrb
dec
sbb
cmp
loop
jge
cld
fsubrs
repnz
cmpsl
dec
mov
imul
in
call
rolb
repz
dec
in
jne
and
jbe
in
popf
addr16
or
ss
pop
in
push
and
xchg
cmpb
and
push
ds
xor
stc
les
in
mov
aam
jl
mov
sti
ss
pop
nopl
sub
out
jbe
adc
mov
fcompl
imul
idivb
cmc
ja
pop
mov
inc
ret
icebp
cmc
insl
dec
pushf
call
shrl
lds
mov
int3
push
mov
movsb
lahf
test
mov
add
inc
xchg
jecxz
cmp
adc
xchg
adc
cmpsb
jae
rcrb
adc
fs
cltd
mov
lods
ss
and
add
pushf
push
popf
subl
push
add
push
rclb
fbstp
push
mov
sti
push
mov
mov
add
sbb
jae
inc
clc
mov
mov
sbb
fidivs
xchg
cmc
iret
sahf
daa
rcll
and
xchg
mov
in
pop
inc
jbe
inc
shrb
movsb
add
add
rcrb
jae
cmc
repz
cmc
and
shlb
or
ficoml
push
cmc
popa
mull
mov
jecxz
pushf
cmpsb
push
jmp
fadds
fwait
fwait
int3
stos
decl
adc
or
jbe
stos
bound
add
pop
push
pushf
sub
fsub
imul
out
outsl
fldt
bound
xchg
or
fmul
xor
lods
std
lahf
push
xchg
ficoml
das
ljmp
adc
int3
out
and
sub
in
mov
and
mov
push
outsl
or
push
adc
xchg
out
push
jbe
fwait
lods
inc
hlt
fstpl
xchg
out
ss
rorb
loope
mov
push
push
push
fs
cmpsl
mov
hlt
pop
mov
jne
add
or
adc
mov
push
mov
pop
test
adc
les
inc
mov
lret
hlt
jmp
lds
xor
out
jbe
icebp
jo
outsb
push
sub
shlb
in
loope
enter
cmp
jbe
adc
cmpsl
cmp
jnp
dec
fidivl
arpl
std
dec
leave
or
dec
inc
adc
rdmsr
rolb
sbb
sarl
and
les
hlt
addl
push
outsb
push
mov
loop
test
mov
idivb
mov
cld
sbb
jb
js
pop
sahf
imulb
je
lcall
pop
jnp
push
push
jbe
xchg
sbb
fidivrs
add
sbb
inc
and
out
sbb
and
or
rcrb
outsb
insl
cmpsb
inc
mov
stos
sub
aad
and
and
cmpl
int3
test
add
das
mov
in
xor
fld
std
dec
pop
push
dec
out
shl
ds
dec
mov
pop
push
xchg
imul
orl
fwait
inc
jno
imul
lahf
mov
xor
xor
push
or
sub
outsb
push
fcmovnbe
mov
lock
xor
adc
mov
sub
xor
scas
repz
imull
add
fldl
inc
or
imulb
sub
push
imul
pusha
in
pushf
mov
leave
ja
es
out
iret
loop
stos
add
ss
sub
loop
popf
inc
push
js
xchg
cmc
or
mov
cmp
inc
push
jg
push
and
inc
xor
cs
push
jb
stos
rolb
fidivrl
jns
pop
outsl
jbe
xchg
neg
jmp
ret
inc
cmp
rcrl
push
sti
aad
push
cmp
dec
test
das
mov
aaa
mov
popa
lcall
jnp
imul
and
pushf
dec
jo
or
or
mov
push
or
out
sahf
sti
aaa
call
imul
sub
add
out
rorl
inc
es
movsl
jne
cs
out
inc
pop
add
cmc
dec
add
sahf
xchg
adc
test
loope
sti
in
mov
nop
leave
pop
hlt
pop
int
xor
cmp
add
outsb
divb
adc
mov
mov
sarb
in
xor
mov
sbb
fmuls
out
int3
fisubrl
lahf
push
jbe
shlb
cltd
cmc
addr16
dec
dec
ja
outsb
sbb
xchg
xchg
repnz
mov
dec
push
pop
jecxz
in
popa
sbb
inc
mov
ljmp
dec
rorb
push
or
mov
mov
fistpl
push
ljmp
adc
dec
out
jb
stc
and
mov
in
cmp
aad
and
sti
cmp
lret
adc
lock
mov
imul
sti
mov
or
decb
mov
sti
rdpmc
push
testl
sbb
mov
sbb
inc
aas
pusha
push
jp
mov
jb
cwtl
test
sbb
sub
ljmp
js
jnp
cmp
sub
es
jle
xchg
ljmp
arpl
bound
fidivrs
xor
sbb
popf
xchg
je
jbe
inc
or
or
out
cmp
inc
jbe
sub
or
aam
fimull
jg
add
std
inc
pushf
shll
loop
mov
andb
out
rcrb
cltd
jl
dec
inc
sbb
xchg
mov
mov
xchg
mov
jno
and
pop
jg
lret
dec
push
je
or
mov
fidivrs
xor
dec
arpl
outsb
adc
cmc
lret
push
pusha
je
ret
mov
adc
mov
repnz
pop
mov
shrl
int3
les
cld
sub
pop
andb
add
and
das
aam
xor
in
imul
call
sub
loope
popf
jl
imul
lcall
scas
test
inc
test
mov
icebp
test
cmp
push
rcr
mov
insl
fidivrs
dec
idivb
jne
or
dec
shlb
mov
outsb
cmp
testl
mov
mov
inc
add
mov
pop
dec
jmp
push
xchg
les
scas
xchg
inc
or
sub
jbe
out
sbb
cmp
test
cmpsb
xchg
fbstp
shlb
mov
jecxz
lret
lcall
icebp
inc
mov
popa
sar
out
outsb
jecxz
push
jge
fisubrl
jns
xchg
ret
clc
mov
lcall
test
adc
scas
cs
sti
sbbb
push
jbe
jp
xchg
testb
je
sbb
jg
mov
icebp
mov
dec
orb
ds
out
sbb
mov
in
test
jno
lods
xchg
push
mov
out
movb
or
addr16
sub
push
dec
xlat
xchg
jbe
movsl
arpl
cltd
and
das
dec
xorb
mov
sbb
push
test
out
mov
dec
fists
dec
dec
adc
cmc
cltd
or
lcall
rolb
pop
fdivrp
inc
cmp
xchg
xor
fnsave
push
xchg
jbe
jmp
in
push
in
insb
fldl
sub
int
ficomps
and
cmc
xchg
fiadds
sub
sti
sub
dec
push
loop
outsb
jns
inc
xlat
dec
hlt
rorb
mov
adc
scas
mov
sub
lea
cmp
in
daa
pop
shlb
xchg
out
addr16
jnp
sbb
test
jo,pn
outsl
jmp
stc
and
xchg
fiaddl
lret
cld
fildll
inc
dec
mov
and
imul
cli
cli
inc
movb
cli
shrb
xchg
jmp
or
test
push
push
arpl
test
push
sbbl
xchg
cmp
adc
aad
mov
cmp
sub
call
lret
rclb
imul
jp
sbb
test
pop
pop
cli
sbb
in
mov
sbb
ds
mov
shlb
jnp
sub
push
push
inc
push
inc
aam
aaa
test
divl
in
mov
pusha
andl
xchg
xchg
dec
test
mov
loopne
pop
mov
and
cltd
and
dec
xor
cs
mov
cld
mov
jns
push
imul
das
in
iret
jmp
shrb
push
ret
sub
sub
aas
push
mov
mov
adc
and
data16
shlb
in
jmp
cltd
lods
nop
cwtl
sub
push
jno
push
pop
clc
loope
xorb
push
cs
lods
jno
push
push
sbb
out
jbe
cmp
and
mov
mov
bound
es
loop
sub
fbld
cmp
lret
lock
mov
jns
jecxz
xchg
cwtl
in
sbb
popf
or
cltd
out
push
xor
jecxz
out
mov
arpl
int
add
cmp
and
pop
cmp
ds
adc
fists
dec
call
fcomps
adc
sbb
xchg
aaa
movsb
cmp
mull
and
inc
mov
xchg
int3
mov
sub
out
cwtl
pusha
dec
out
adc
push
inc
in
outsb
mov
mov
dec
xchg
add
outsb
sbb
rolb
inc
push
pop
xor
push
fwait
rolb
idiv
mov
add
and
test
mov
xchg
ja
cmp
js
pop
std
outsl
mov
pop
not
shl
addr16
sar
push
cmp
sar
xor
adc
cmc
jbe
jae
cwtl
btr
pop
int
push
out
daa
nop
sar
mov
shrb
sbb
adc
imul
jb
int
xlat
cmp
ljmp
out
push
xor
insb
cmpsl
outsb
push
lea
aas
arpl
addb
lods
rcr
or
adc
and
inc
mov
sbb
adc
aad
shlb
sbb
mov
cmpsb
cs
dec
inc
jle
cmp
mov
mov
cmp
mov
int
sbb
sbb
lods
insl
mov
fmull
push
sbb
nop
and
pusha
xor
jae
adc
or
sub
xchg
insl
and
push
arpl
add
push
fdiv
pop
rcrl
daa
cmp
stos
jae
xor
pop
lea
nopl
lods
imul
lds
cmp
pop
xchg
fwait
ss
cmp
xor
sti
dec
xchg
jnp
mov
sub
xchg
mov
pop
inc
xor
inc
push
fnsave
movsl
push
aam
out
sbb
sbb
cmpsb
test
leave
dec
inc
pushf
mov
dec
fstpt
push
sub
stc
shll
rorl
xor
aam
lds
cmpsl
push
lock
sub
push
adc
leave
ss
sbb
out
sub
fisubrl
sar
addr16
shll
lods
adc
scas
jmp
mov
adc
sub
mov
mov
arpl
test
inc
test
inc
inc
out
adc
pushf
adc
shlb
aas
mov
stos
xchg
ret
loop
sti
cli
mov
popa
mov
push
insb
xchg
xlat
mov
and
mov
xor
push
jnp
mov
enter
dec
lret
rolb
in
jbe
cli
mov
lock
sub
shlb
and
movsb
mov
pop
sbb
outsb
and
imul
outsl
shrb
dec
dec
push
xchg
pop
mov
stos
pusha
and
out
push
push
insb
shr
adc
xor
adc
cmp
outsb
dec
fisubl
mov
pop
mov
dec
dec
push
jmp
lds
xor
stc
rclb
in
jge
pop
dec
mov
dec
ss
mov
dec
push
inc
cmpsb
or
ss
sar
lods
es
outsl
fisttps
mov
dec
pop
mov
hlt
xchg
lds
mov
pop
rcrb
push
in
jp
gs
filds
push
push
aam
dec
jg
mov
ror
push
add
adcb
or
orl
imul
fs
push
scas
adc
sub
out
jbe
cmpsb
movsl
dec
and
sub
push
test
enter
cmpsl
jnp
xchg
pop
add
rorb
mov
cmpsb
in
inc
fnstsw
sti
test
rolb
insb
fcmovu
push
pop
jp
lret
add
mov
sub
xchg
arpl
push
aaa
gs
sub
push
mov
pop
adc
mov
outsb
or
rclb
repnz
mov
popa
dec
in
int3
xchg
ss
cmc
inc
push
cli
mov
jb
push
ret
fadd
push
cmpsl
adc
pop
jne
push
pop
xor
in
lret
or
adc
nop
push
shrl
mov
aaa
push
xchg
adc
pop
xor
add
add
push
out
fidivs
or
mov
dec
adc
adc
sub
cmp
sbb
mov
sbb
mov
jb
mov
mov
pop
divl
xchg
mov
jae
daa
push
push
das
lea
stc
insl
jle
jecxz
cmp
add
xchg
shl
xlat
jne
mov
add
repnz
mov
inc
bound
pop
je
mov
icebp
dec
clc
test
leave
mov
dec
jmp
push
dec
jg
aam
mov
xchg
cwtl
rclb
outsl
xor
jbe
pop
jb
push
loope
out
sahf
mov
in
inc
or
mov
out
jbe
adc
out
pop
subl
add
cmp
popf
xchg
fsts
cwtl
pop
loopne
ror
cmp
enter
jle
cwtl
push
fiadds
jno
out
rorl
dec
loop
pushl
cs
scas
stos
aad
fsubr
dec
lret
push
and
in
inc
cmpsl
mov
and
rcrb
sbb
and
mov
pop
push
dec
sub
push
lea
popa
pop
adc
iret
add
mov
jecxz
repnz
into
fstpt
or
mov
jbe
xchg
insb
fistps
cmp
loopne
in
add
addr16
mov
mov
sbb
mov
pop
xchg
roll
jns
in
sub
mov
add
fcoms
cmp
xor
repnz
das
bound
addr16
xchg
fiadds
mov
mov
dec
push
jmp
sbb
test
dec
jbe
mov
addr16
ficoml
fstps
xchg
mov
add
sbb
mov
js
andb
mov
call
jbe
and
add
call
sti
cmc
cwtl
push
aaa
std
push
ror
and
xchg
sub
scas
ss
push
add
sub
pop
frndint
test
push
sbb
inc
xchg
iret
in
icebp
nop
xor
and
xchg
mov
jo
jbe
dec
fucom
aaa
js
pop
leave
xchg
jge
jbe
stos
iret
sbb
dec
jns
push
adc
ret
sahf
inc
loope
outsb
add
pop
ljmp
ja
vmovaps
xor
aam
or
fstpl
sub
mov
enter
mov
stc
pushl
imul
mov
in
xchg
sti
sub
xchg
sbb
aam
push
ljmp
lods
repz
jmp
stos
hlt
jno
cmp
push
bound
rol
pushf
sub
mov
movsl
out
cmp
cwtl
mov
fisubs
jno
mov
push
xor
gs
mov
jbe
jo
aam
jl
adc
jb
shlb
add
sarl
jns
dec
test
xor
iret
clc
out
xor
mov
loope
lods
leave
pop
push
scas
fdivs
dec
push
out
adc
out
pop
subl
mov
stos
pop
pop
xchg
push
pop
sahf
ror
xchg
fs
xchg
jg
ret
cmp
jmp
jge
sahf
fcompl
xchg
fcmovb
negb
add
popf
cs
xchg
int3
inc
add
fidivrl
ret
fadd
mov
push
ret
out
push
add
fldenv
xor
into
mov
loop
jmp
add
scas
out
and
mov
fmull
add
test
jecxz
cmc
stos
pop
jp
aas
mov
out
les
andb
jp
test
ja
adc
in
xchg
pop
sub
daa
add
inc
jbe
insl
sub
jo
sub
das
xchg
fisttps
movsb
lcall
lret
cmpsl
add
and
movzbl
mov
push
idivl
int3
loope
stos
bound
inc
mov
inc
and
in
imul
and
xchg
push
jecxz
xchg
pop
cld
xor
add
pop
pop
aas
and
nop
mov
adcl
hlt
mov
jb
mov
cmc
outsl
cmc
adc
addr16
mov
sub
lods
orl
dec
pushf
es
pop
cmc
and
push
leave
or
sub
and
lret
pop
mov
pop
inc
mov
or
dec
push
jbe
mull
iret
mov
add
inc
dec
notl
xor
adc
add
sbb
adc
jle
mov
xchg
xchg
sti
and
lods
jbe
mull
jne
xor
or
out
add
xchg
and
addr16
push
loop
and
cmp
jmp
add
imul
std
in
cmp
ret
lahf
leave
inc
mov
lcall
xor
lcall
psubusw
inc
lret
ss
out
int3
outsb
bound
xorb
push
sti
arpl
cmc
aad
mov
sahf
dec
mov
iret
inc
xchg
jb
sbb
push
dec
add
jbe
sar
lds
jae
fnstsw
in
sub
in
imull
pop
rclb
std
rcll
adc
or
loopne
gs
pop
mov
test
ljmp
jmp
cmp
in
xor
in
jnp
jae
mov
jnp
mov
outsb
adc
inc
or
mov
xchg
mov
outsb
pusha
and
int
sbb
test
cmpsl
fcoms
push
enter
fiaddl
nop
sbbl
inc
jmp
scas
mov
adc
pop
jnp
ror
lock
ljmp
shrl
push
add
cmp
mov
lret
test
hlt
push
fisttpll
cmpsl
mov
frndint
cmp
dec
stos
scas
pop
data16
into
xchg
jmp
push
negl
mov
cmp
xor
scas
pop
sbb
push
pop
pop
xor
or
pop
loope
and
movsb
push
jno
push
rcrb
cmp
orb
cmp
jae
mov
out
sti
sbb
jecxz
andb
outsb
je
ficompl
mov
test
incb
cmpsl
call
cmc
scas
or
into
xor
mov
jo
push
push
adc
xor
sub
jge
add
out
and
cmpsl
xor
adc
lods
aaa
xchg
mov
es
jne
sbb
aam
dec
sbb
insb
lret
lods
repnz
sbb
fsubl
mov
sbb
jecxz
loop
adc
leave
leave
aad
dec
lret
sbb
jp
loope
hlt
fnstenv
movsb
cmpsb
imul
jge
add
out
mov
subl
das
bound
fnsave
cmpsl
aas
mov
xor
xchg
jno
adc
jmp
cmpsb
aas
fildll
mov
fistpl
push
rcrl
and
sahf
rcr
xor
jecxz
jbe
mov
push
imul
jle
shlb
enter
loopne
movsb
bound
lretw
in
loope
jne
mov
pushf
push
cmp
repnz
mov
xorb
push
in
xlat
mov
shr
ljmp
xchg
fcmovbe
mov
xor
outsb
and
add
test
sbb
pusha
lods
and
push
out
test
xorl
or
cs
inc
out
mov
sub
jbe
ss
mov
loope
fiaddl
lcall
add
xchg
xchg
in
cmp
mov
cmc
sbb
std
and
stos
mov
data16
fidivrl
mov
mov
cmpsb
sahf
mov
and
out
bound
leave
insl
lds
cmp
mov
sbb
jmp
adc
and
out
sub
outsl
cmpsl
inc
push
jae
dec
add
jnp
mov
stc
push
xor
pop
or
push
loope
mov
les
xor
xchg
push
dec
xlat
daa
ss
out
pushf
jmp
and
nop
sub
outsb
ficoml
fsubrs
dec
sub
mov
cld
push
mov
dec
flds
int3
imul
stc
pop
out
adc
push
push
mov
shl
mov
pop
in
andl
pop
jnp
mov
adc
mov
sbb
subb
lds
shlb
pop
jne
outsb
xor
out
les
dec
mov
inc
scas
lds
xor
xchg
push
inc
fisubrl
adc
xor
out
dec
loop
mov
test
mov
js
fidivrl
pop
jo
jo
and
aad
mov
scas
in
mov
sbb
into
hlt
xchg
das
aad
stos
cmpsl
dec
adc
or
dec
and
in
sub
test
mov
and
cmpsl
into
aas
jg
inc
inc
inc
shlb
sub
bound
xchg
push
xchg
jb
imul
stc
sub
mov
insl
cmp
jo
ljmp
sti
and
fsqrt
and
sbb
imul
mov
add
push
jae
outsl
movsb
jns
lahf
cmc
push
stos
divb
repz
adc
mov
xor
mov
insl
test
js
inc
stc
and
negl
negl
out
jnp
xchg
fidivrl
sbb
xchg
popf
jg
fstps
aaa
jns
lea
push
sbb
jmp
shlb
dec
addb
and
mov
or
movsb
inc
sub
jae
pop
or
std
mov
mov
pop
mov
shlb
mov
sar
insl
mov
rorl
sbb
outsb
sbb
aaa
ds
add
push
or
fdivp
xlat
sbb
jae
gs
imul
or
cmp
arpl
xchg
push
inc
cld
stc
xor
ficompl
lods
adc
loope
jg
sarb
mov
inc
imul
out
lds
je
out
sub
sub
mov
rcl
add
fnstsw
popa
xchg
rcrl
push
lret
inc
enter
cld
test
iret
inc
adc
xchg
cmp
iret
hlt
std
mov
cmc
add
outsb
cmp
fsubrp
pop
jo
cmp
shlb
mov
inc
mov
outsb
rsqrtps
inc
xor
mov
andb
adc
shll
fstpl
sarb
das
mov
shl
and
xchg
inc
leave
lahf
shrb
lods
jnp
fcoml
in
or
mov
fimull
xchg
add
scas
sbb
rclb
sbb
jge
mov
stos
arpl
dec
outsb
fcom
rcl
cmp
xor
pop
xchg
cli
aam
xchg
mov
jecxz
cmpxchg
mov
inc
inc
nop
inc
cmp
lahf
jmp
rclb
loop
xchg
lds
add
xchg
or
xor
dec
loopne
add
jae
add
adc
mov
cmp
fmull
inc
movsb
ljmp
lahf
test
fwait
mov
out
lcall
loope
sub
adc
xor
inc
and
pop
inc
adc
pop
cmpsb
popa
mov
xchg
add
pusha
iret
jmp
sbb
insb
fimuls
cmpsl
add
scas
or
and
mov
lcall
cmpsb
ljmp
scas
or
mov
mov
xor
xor
adc
pop
push
fs
sbb
jp
mov
out
rcrb
mov
aad
adc
cli
mov
loope
jle
xchg
jecxz
lret
aam
ljmp
notb
cmc
outsb
fsubrp
jno
stos
repz
xchg
mov
xor
scas
fsubs
adc
insl
hlt
mov
gs
cmp
mov
xchg
dec
or
fcmove
mov
loope
jbe
push
outsl
adc
enter
clc
popa
sub
iret
es
or
push
mov
lds
mov
outsl
inc
mov
adc
scas
xchg
or
das
addr16
into
inc
push
lds
out
xorl
and
js
lret
and
pop
cmp
push
add
shll
or
mov
or
cld
pop
push
sarl
jb
movsl
insb
iret
mov
sbb
mov
rclb
rcr
sbb
inc
outsb
daa
inc
xor
sbb
sti
xchg
fs
push
or
pop
jb
mov
lock
pop
into
cwtl
or
add
pop
and
pop
insl
in
scas
hlt
inc
jmp
in
rorb
xchg
inc
aaa
mov
insb
jbe
pop
mov
lds
mov
cmc
idivb
std
or
jecxz
mov
dec
add
out
negb
and
push
mov
add
lock
aam
fwait
mov
adcl
or
and
push
cmp
popf
aaa
in
jmp
sbbb
xchg
jbe
or
xor
out
lret
into
push
loope
inc
cld
sbb
inc
push
mov
cli
push
jo
sbb
jb
dec
in
mov
aad
jns
push
pop
or
mov
pop
loop
adc
fs
sub
fstps
mov
daa
adc
testl
scas
lret
clc
movsl
popf
push
test
mov
aaa
fistps
movsb
jge
push
xor
adc
test
in
jbe
xor
push
mov
sub
sub
outsb
mov
push
mov
or
xor
pop
daa
das
cmpsl
sub
ljmp
and
mov
or
xor
and
push
dec
mov
and
sub
jecxz
jg
lret
jo
jne
flds
ja
and
loopw
dec
aaa
icebp
outsb
inc
lock
int3
out
fidivs
in
or
mull
int3
xchg
hlt
orb
cmp
jl
movsb
sub
stc
scas
ret
in
dec
movsl
and
and
js
dec
xchg
sub
out
jbe
sahf
add
inc
mov
fcmovbe
cli
imul
mov
shl
push
sar
inc
xchg
roll
mov
insb
imul
ss
jecxz
mov
cli
mov
aas
loope
xchg
sbb
or
leave
aaa
cmpsb
insl
jmp
addr16
jbe
jae
sbb
outsl
jns
xor
or
out
adc
xchg
jo
inc
inc
cmpb
lock
les
xchg
lcall
pop
or
pop
sub
bswap
shlb
or
sahf
add
pop
aam
mov
xchg
repnz
jmp
add
repz
cmp
cmp
int3
div
dec
mov
and
xchg
jbe
aad
adc
mov
fidivrs
jecxz
loop
movsl
inc
pop
lods
mov
dec
xchg
inc
mov
pop
insl
mov
and
xor
cmc
sbb
pop
and
lret
mov
pop
and
push
cmpsb
sub
rclb
in
sbb
push
imul
scas
ret
cmp
in
jecxz
add
in
insl
xchg
push
cmp
push
loope
sub
fwait
repnz
std
stos
xchg
or
inc
mov
in
xor
jno
jae
lock
and
push
int3
xor
push
aaa
add
add
push
rorl
cmp
js
aad
loop
repnz
loop
jbe
jmp
mov
dec
xor
inc
push
adc
xor
mov
mov
xorb
xor
mov
andb
cmp
mov
adc
cmc
es
mov
mov
dec
xchg
insl
dec
or
not
add
mov
and
lcall
add
mov
sub
or
pop
fdivrp
scas
daa
push
adc
sti
mov
push
data16
push
push
jno
pop
add
cmpsl
and
or
jb
push
shlb
movsb
and
cld
jnp
arpl
test
and
outsb
loope
adc
daa
push
adc
xchg
fstpl
push
iret
dec
dec
inc
scas
roll
lds
mov
sti
aad
fidivl
or
clc
pop
movb
jnp
mov
xchg
divb
mov
pop
mov
stc
xor
cmp
outsb
lods
loope
loop
rclb
mov
rcr
sbb
bound
daa
jge
dec
mov
xor
daa
add
dec
or
add
stos
dec
in
sbb
aad
pop
cmp
clc
xor
push
push
jbe
lock
fwait
mov
pop
cmpsl
leave
xchg
inc
out
test
add
call
and
fisttpll
into
xor
mull
lods
scas
inc
in
inc
testb
mov
idiv
mov
je
push
adc
cld
insb
jne
inc
lret
hlt
push
and
xor
lret
aaa
xor
icebp
mov
ss
inc
jns
in
out
jbe
adc
mov
mov
outsb
test
and
jge
call
hlt
xchg
loope
push
outsb
sub
outsb
jns
addr16
shl
mov
and
shlb
shrl
pop
or
clc
push
outsb
call
in
iret
outsl
inc
mov
mov
and
adc
das
xchg
loope
xor
cwtl
push
lock
adc
inc
adc
add
add
rorl
mov
mov
loopne
sub
lds
mov
jno
jae
add
cmpsl
sub
adc
shlb
inc
aad
sbb
mov
xchg
aad
shl
sbb
rcrb
xchg
ljmp
jge
icebp
scas
dec
pop
jb
mov
jbe
inc
adc
inc
or
out
jl
imul
sbb
jp
mov
hlt
add
sarb
iret
jb
ret
lods
push
mov
xor
movsb
pop
es
push
mov
xchg
or
test
and
xchg
int
pop
rolb
shll
sbb
bndldx
aam
pop
mov
call
imul
outsb
sub
xor
pop
aas
out
loop
stc
jbe
in
mov
jmp
pusha
mov
pop
xchg
arpl
dec
mov
fistpl
outsb
leave
stos
out
fst
xchg
das
sbb
sbb
adc
pop
neg
rclb
bound
jbe
punpckhdq
ja
cmpsl
dec
lret
js,pn
jns
addr16
cmp
adc
xor
hlt
sbb
jno
push
dec
loope
aad
sub
inc
xchg
add
pop
loope
adc
cmpb
xchg
push
pop
adc
jno
pop
mov
jne
adc
jmp
push
fisubrl
bound
mov
mov
inc
lahf
jnp
js
dec
adc
mov
pushf
inc
inc
sub
aam
ljmp
lcall
inc
mov
cmp
cs
xchg
scas
arpl
cli
scas
mov
notb
sub
iret
shll
jno
test
test
jne
push
je
jmp
push
sbb
mov
inc
lret
movsb
insb
xchg
mov
les
aas
insl
jbe,pn
jae
push
sbb
das
mov
cmp
loope
jmp
and
sahf
divl
cmp
mov
push
out
cmp
jle
inc
cwtl
adc
xor
lahf
pop
sub
fs
loop
insl
mov
inc
inc
jmp
shlb
jne
mov
pop
cmp
ja
out
lret
loope
mov
bound
mov
or
ljmp
jbe
adc
jb
sub
mov
mov
in
cmpsl
out
out
cli
scas
xchg
xchg
rorb
sbb
outsb
dec
enter
bound
inc
push
jnp
mov
fwait
mov
cmc
pushf
push
xchg
inc
push
lea
xor
out
mov
rolb
test
outsb
cmpsb
jne
js
inc
jecxz
shl
mov
scas
and
in
leave
out
sub
push
sbb
js
cmc
outsb
sub
loope
fbstp
repz
sti
sahf
xlat
lcall
adc
aad
jmp
mov
sbb
icebp
or
outsb
iret
mov
jle
pusha
cmp
lret
pop
mov
jg
jne
jbe
sub
xchg
push
sbb
in
sub
ljmp
imul
shlb
dec
in
cmp
dec
sub
jbe
push
lahf
pop
in
mov
loope
in
mov
shl
add
call
sub
mov
clc
call
jbe
jae
lret
test
int3
sub
cld
fcmove
fisubrl
sub
notl
pop
rcrl
mov
pop
pop
sub
daa
sub
into
cmp
outsl
outsb
lahf
mov
jecxz
cmp
xchg
push
inc
xchg
test
dec
xor
ss
push
mov
mov
jns
int3
loop
fstps
dec
fisttpll
fwait
sbb
push
lret
and
aaa
push
mov
addr16
idivb
sub
mov
data16
mov
mul
sbb
inc
xor
cwtl
movsb
xlat
jbe
sbb
push
cmp
fwait
rcr
mov
mov
mov
sub
mov
xchg
loop
mov
sbb
arpl
arpl
repnz
adc
aam
call
sti
add
jg
mov
push
popf
add
jecxz
adc
ljmp
jbe
fimull
pushl
mov
xor
scas
imul
xor
jbe
dec
ss
call
mov
push
rcr
dec
int3
dec
jl
lods
rolb
jecxz
cmp
es
mov
inc
push
cmc
jge
mov
sahf
into
dec
ss
ljmp
in
mov
inc
jbe
add
push
and
jmp
lret
aad
pop
dec
lcall
and
dec
fcomp
cmpsl
jg
repz
or
inc
mov
sti
mov
insl
gs
lea
mov
adc
ljmp
neg
jae
fildll
or
shlb
lret
mov
aaa
cmp
mov
sbb
orl
stos
es
fildl
jmp
outsb
add
jo
pop
cmp
pop
test
push
jbe
lds
outsb
lcall
lahf
dec
es
jbe
hlt
aad
xchg
or
mov
out
inc
pop
mov
clc
dec
add
adc
iret
jno
inc
mov
andb
xchg
and
mov
lret
sub
cmc
cmp
cmpsb
mov
jb
push
push
or
dec
stos
sub
jns
jnp
lcall
sub
into
fidivs
shr
repz
insb
xorb
inc
addl
fldcw
pop
sbb
adc
adc
cmc
mov
xor
push
or
dec
mov
ss
adc
mov
jnp
sub
cmp
pop
mov
dec
imul
mov
cli
cmpsl
cwtl
into
and
pop
sbb
pop
push
test
faddl
lcall
stc
dec
outsb
lods
or
mov
xor
xor
sbb
int
es
fiadds
inc
popf
mov
test
and
mov
shll
lret
inc
sbb
lock
popf
adc
jmp
lahf
dec
cld
pushf
cmp
or
xchg
aad
and
or
adc
or
inc
add
aad
cmpsl
fistps
into
jmp
ds
add
jo
add
shl
xchg
rolb
and
cwtl
adc
xchg
and
repnz
sahf
imul
insb
subb
insl
push
pop
mov
pop
pop
in
adc
daa
sbbl
xchg
outsb
stc
int3
cmpsl
sbb
in
pop
int3
bound
les
ljmp
sti
push
shll
dec
xor
arpl
push
out
adc
outsb
sbbl
inc
rorb
retw
cmp
aad
into
mov
inc
mov
mov
js
jbe
dec
and
pop
fstpl
sbb
jno
push
adc
dec
nop
add
das
xor
dec
fistpll
lods
mov
adc
enter
sbb
ljmp
fisttps
sbb
mov
lock
or
shlb
loope
push
jnp
clc
sub
aas
iret
out
ss
ljmp
scas
je
jmp
and
jp
cs
out
jp
das
cmp
lods
das
push
or
pop
lods
aaa
xchg
inc
movsb
inc
bound
jns
push
addl
bound
loop
xchg
popf
mov
iret
fwait
dec
mov
xor
adc
mov
pop
lret
adc
pop
movsb
call
out
jbe
adc
ljmp
rorb
imul
mov
sti
dec
pusha
pop
daa
in
pop
inc
ja
sbb
xchg
mov
inc
pop
outsb
popf
xchg
fincstp
xor
rolb
cmp
mov
jbe
pop
repz
mov
jae
fcmovnu
or
add
stos
outsb
insb
jp
std
dec
dec
cltd
fucom
cmp
sarl
fcmovnu
divl
add
add
mov
push
mov
orl
fs
push
loopne
and
out
xor
inc
sarb
loop
dec
shlb
mov
sbb
arpl
aas
fwait
adc
cmpsl
xadd
jg
jp
add
mov
ljmp
inc
shll
les
xor
pop
xor
out
in
mov
xor
adc
jmp
stc
sub
addr16
dec
lahf
dec
dec
jmp
xchg
sar
inc
mov
mov
push
adc
push
rclb
mov
test
and
scas
pushf
inc
rolb
mov
fimull
ja
jl
cmp
push
jecxz
mov
scas
out
int3
ja
subl
push
faddp
scas
lods
cmp
ffree
xor
dec
out
xlat
loop,pn
ljmp
jl
jno,pn
js
sbb
mov
sub
mov
sahf
movb
jl
stos
mov
fcmovnb
ds
imul
mov
incb
hlt
inc
pop
fmulp
stos
shl
insb
bound
repz
add
sbb
cs
dec
bound
dec
stos
nop
xorl
push
rclb
mov
xor
repnz
inc
cmpsl
mov
ret
mov
outsb
or
rol
orb
add
sub
out
test
popa
adc
jae
nop
pushl
cmp
ljmp
sti
or
inc
push
scas
sub
rorb
int3
xorl
int
jge
subb
and
jae
and
mov
arpl
cwtl
fbld
ret
pushf
fidivl
and
jp
cmp
divl
repz
mov
je
fwait
sarb
repz
pop
push
pop
test
xor
add
rorl
sahf
addr16
push
lahf
sbb
push
and
add
movsl
aas
or
dec
jp
jmp
ror
cltd
mov
fcmove
shrb
loope
adc
inc
dec
inc
addr16
std
enter
in
es
sub
pop
xchg
lea
jmp
mov
cmc
adc
jl
pop
or
icebp
xchg
adc
jecxz
adc
xchg
jns
into
mov
jb
inc
push
sub
mov
dec
xor
or
push
mov
add
popfw
imul
jbe
repz
push
mov
leave
lods
cmp
test
rolb
data16
test
sbb
cmc
and
fldenv
jbe
stos
sti
xor
pop
sbb
cmpsb
xor
movsb
jnp
and
pop
mov
test
xor
cmp
aad
test
lret
pop
or
lock
fidivl
push
sub
sub
out
sub
jbe
push
cltd
jne
in
scas
ja
not
mov
xor
dec
mov
adc
add
mov
rcrl
xchg
inc
sbb
push
insb
mov
pmaxsw
pop
sarb
and
mov
movsb
pop
push
les
stos
push
adc
rclb
loop
aaa
outsb
sar
adc
loope
arpl
adcb
adc
push
mov
mov
lret
ljmp
and
in
aas
dec
andl
popf
sbb
push
rcll
es
rcl
sub
cmp
lret
dec
and
inc
jmp
lods
std
mov
push
rcrb
addr16
pop
push
popw
dec
jecxz
cmpsb
mov
xchg
lahf
adc
mov
mov
rol
pop
std
popf
jg
call
fbstp
adc
sahf
sbb
outsb
lods
ja
dec
iret
push
into
sti
jns
push
mov
jnp
mov
cmpsb
outsb
mov
imul
je
pop
fimuls
in
mov
xchg
cmpsl
das
push
push
pop
xchg
sbb
or
enter
push
xor
jo
push
test
not
mov
sub
in
mov
pushf
orl
xor
inc
jae
in
and
mov
sub
or
mov
sahf
and
xor
mov
xchg
popf
pop
into
sti
mov
mov
xor
cli
mov
ds
mov
pop
jecxz
or
bound
fadd
cmp
mov
bnd
sub
inc
add
jbe
loop
psllw
std
icebp
adc
and
sahf
xchg
je
inc
dec
popa
lret
cmp
aad
ret
sbb
mov
mov
ficoml
jle
mov
add
jae
dec
push
xor
pop
inc
std
rcrb
hlt
stos
lret
pop
add
je
push
out
jne
je
cmpsl
shlb
mov
fadd
lret
ss
aaa
es
aaa
inc
push
mov
shrb
fwait
outsb
inc
add
and
in
pusha
pusha
loop
movsb
fwait
shrb
add
jmp
push
imull
or
cmp
cmpsl
stos
lea
jbe
inc
sbb
movsl
sbb
cmpsb
in
cmc
cli
cmc
icebp
dec
jbe
xor
aas
scas
mov
dec
push
call
push
add
orb
xor
outsl
mov
jg
mov
sub
lahf
mov
inc
sub
out
sbb
push
inc
cmc
scas
xchg
mov
insb
ret
sbb
xchg
shlb
aaa
aas
mov
or
or
cmpsl
jmp
add
imul
dec
sti
mov
call
lods
sub
xor
fldenv
mov
mov
mov
inc
movsb
in
movsl
pushf
inc
sar
ds
out
cmpb
bt
pop
cmpsl
jno
repz
pop
rcrl
movb
aad
add
mov
rolb
cmp
mov
or
icebp
and
or
gs
pop
add
mov
adc
mov
lods
cmc
xor
dec
or
outsb
jno
sarl
sahf
inc
movb
jo
sbb
pop
xchg
jecxz
sbb
int
ret
adc
ljmp
or
push
cltd
xchg
jg
sbbl
iret
sti
in
out
jecxz
insl
rolb
and
or
add
inc
or
push
sbb
test
clc
cmp
in
leave
xchg
pop
ficompl
aas
mov
lods
adc
outsl
and
sub
lcall
outsb
addr16
cmp
rclb
lcall
sub
xor
je
cmpsl
and
outsb
cltd
jbe
rclb
mov
mov
mov
aas
stos
lock
xchg
leave
or
push
sarb
adc
jge,pt
push
pop
xchg
xchg
lcall
mov
dec
mov
xchg
sbb
std
ljmp
mov
adc
fiadds
imul
mov
fidivs
and
clc
outsb
sub
xchg
cmp
sbb
subb
adc
sub
call
jb
push
cli
fistl
push
sbb
loop
fcoms
insl
mov
popl
arpl
jne
call
test
and
mov
jb
outsb
call
lahf
xchg
sbb
lods
ret
in
imul
leave
mov
outsb
aas
xchg
pop
in
jne
xchg
arpl
mov
pop
or
fwait
lods
and
loop
fstl
add
das
adc
adc
cmp
pop
add
or
sbb
inc
xchg
mov
aad
jg
in
cmc
mov
lret
in
inc
adc
sbbl
dec
rorb
jno
xor
dec
fs
or
add
mov
arpl
push
sub
dec
mov
mov
push
mov
fldenv
ret
cmpsl
inc
mov
dec
cwtl
stos
sub
inc
outsb
fidivl
dec
loop
aaa
addr16
ret
add
insb
popa
pop
iret
jno
jbe
adc
sahf
lock
lcall
leave
mov
in
xor
test
dec
aaa
rcl
sbb
xchg
ret
mov
stos
sti
popa
aas
jmp
mov
sbb
divl
rolb
jmp
mov
sbb
mov
push
cld
and
fstps
stos
pop
push
cmpsl
adc
insl
sbb
loop
enter
insb
test
filds
jbe
test
pop
outsb
sub
mov
pop
neg
push
adc
testl
mov
stos
ss
rcr
sub
imul
dec
shlb
and
inc
imul
hlt
cmpsl
ss
dec
push
subb
pop
mov
mov
xchg
inc
fsts
pop
cld
imull
jge
dec
ljmp
movsb
xchg
xchg
bound
mov
rclb
mov
jne
adc
sbb
jnp
int
inc
rorb
xor
jl
cmc
or
jbe
xor
enter
aas
mov
leave
sbb
movsl
push
leave
outsb
jmp
add
and
bound
cmp
rcrl
jge
jnp
and
out
mov
or
stc
aaa
clc
cmpsl
dec
jp
addr16
cltd
mov
push
sub
cltd
stos
stos
es
stos
adc
or
xchg
sarb
repnz
and
and
popa
push
das
mov
push
sbb
sub
ficompl
jmp
adc
jnp
dec
jecxz
loop
inc
sbb
cmc
imul
push
fimuls
jg
les
insl
dec
inc
jbe
ficomps
pop
fsubl
xchg
sarb
lahf
push
cltd
add
divl
outsb
test
jbe
and
xor
xor
stos
sbb
pop
outsl
inc
roll
xor
fisubrs
mov
les
and
pop
mov
or
mov
aad
loopne
rsqrtps
ss
cmp
xchg
mov
xchg
xchg
cmp
sbb
or
and
xchg
mov
cmc
pop
inc
and
inc
rcrb
call
cltd
lods
test
xor
dec
shlb
stc
cs
jbe
daa
cmpsb
shll
pop
inc
roll
outsb
mov
inc
outsb
jbe
sbb
ja
add
jmp
push
sub
dec
xchg
mov
lret
add
pop
pop
inc
std
test
jecxz
adcb
mov
jge
jecxz
pusha
mov
test
in
sbb
push
xchg
in
in
in
fstpt
add
add
cmpsl
pop
aas
push
in
push
shll
rclb
test
lods
dec
push
in
bound
aam
repnz
push
xor
sarb
jnp
adc
mov
mov
adc
enter
js
cmp
pop
mov
out
cmpl
mov
aas
pop
xchg
outsb
aad
jecxz
mov
dec
pop
test
fsubrl
or
pop
pop
insl
shl
push
testb
mov
repz
mov
dec
push
jg
lock
lock
outsb
mov
jle
lods
cmp
call
stc
out
dec
inc
push
cmp
and
or
stos
sbb
repz
adc
push
lods
push
stos
xor
jbe
rcrl
dec
mov
sub
into
aaa
addr16
xchg
and
in
jno
xchg
add
and
jecxz
mov
popl
mov
out
pop
std
pop
mov
mov
xchg
out
dec
push
aaa
jle
aaa
scas
push
ljmp
dec
cmp
push
xor
lcall
xor
jecxz
jbe
sub
cmpsl
testl
inc
mov
push
popf
xchg
call
ljmp
inc
sarl
ja
dec
je
mov
addr16
cmp
inc
lods
rcrl
mov
jns
mov
or
add
xchg
outsb
xor
lods
ror
sbb
movsl
sbb
cmpsb
dec
loope
and
test
or
insl
xchg
push
cmc
punpckhwd
stos
adcl
or
fs
adc
adc
dec
dec
aam
ss
adc
or
push
jbe
mov
mov
and
add
sti
lcall
dec
iret
pushl
xlat
fdecstp
movsl
filds
std
cmp
ja
sbb
xor
hlt
fistpll
push
movsb
cwtl
fistps
mov
jl
bound
scas
cmp
mov
packsswb
inc
mov
fisubl
dec
hlt
push
test
mov
mov
sbb
in
mov
jl
rcll
jle
insb
mov
ljmp
fisubl
dec
mov
mov
cwtl
pop
pop
rolb
das
and
inc
xchg
arpl
les
xchg
outsb
dec
mov
gs
add
rclb
jno
cs
sbb
mov
fstpl
xor
push
xor
bound
jmp
jp
mov
dec
pop
dec
xchg
imul
add
xchg
stos
ja
mov
aaa
popa
push
xchg
lock
pop
mov
push
outsb
dec
popa
in
jnp
or
jnp
sub
xchg
cld
xor
jns
fistps
jecxz
pop
lcall
ret
jl
sub
jecxz
gs
outsb
out
mov
mulb
ds
sbb
mov
jecxz
inc
or
or
sub
push
mov
and
shlb
xchg
cmc
or
test
rorl
loop
insl
pop
stc
fidivs
adc
or
gs
fwait
jb
hlt
jmp
test
repz
jbe
rolb
pop
je
insl
xchg
cmp
inc
mov
shrb
sti
jmp
jp
mov
xchg
outsl
insb
movsb
mov
test
pop
mov
or
insb
add
outsb
inc
jge
dec
inc
or
mov
ja
sahf
sub
xor
cmc
imul
fiaddl
fwait
imul
sbb
xchg
inc
emms
mov
loope
aam
test
jns
xlat
pushf
test
push
pushf
mov
in
mov
loope
or
ljmp
into
mov
mov
mov
cli
aaa
jo
int
lds
sahf
stos
popa
jmp
mov
inc
xor
outsb
ds
and
dec
xor
jbe
jno
pushf
pop
mov
in
dec
inc
mov
push
out
ljmp
pop
lds
add
jbe
mov
loopew
aad
cmp
imul
jae
rcrb
xchg
popf
out
fbstp
dec
inc
push
movsl
mov
ret
jecxz
outsb
dec
cmp
inc
sbb
xor
into
lock
repnz
push
cwtl
xchg
jle,pn
das
rcrl
dec
call
insb
push
mov
adc
mov
pop
stos
adc
adc
ficompl
rorb
and
into
add
and
xor
jbe
dec
adc
adc
gs
xchg
jbe
test
mov
mov
aad
xchg
mov
ljmp
push
ror
jb
xchg
inc
mov
adc
xor
mov
jno
popa
jo
inc
pop
xor
pusha
adcb
int3
scas
lock
aad
lock
and
pop
fwait
pop
adc
lds
jmp
cmp
sar
jmp
cmpsb
mov
adc
cmpb
int3
xlat
mov
pop
mov
pusha
pop
push
icebp
ret
xchg
push
dec
jnp
and
aas
xor
das
cmp
and
bound
inc
addr16
shrb
pop
stc
das
mov
fisubrl
cmc
fdivs
in
pop
jbe
mov
loop
repnz
push
or
js
adc
in
into
jmp
push
xchg
adc
cmpb
in
les
hlt
fisttpl
les
std
push
repnz
hlt
mov
ljmp
sbb
xor
push
icebp
repnz
inc
xchg
dec
clc
dec
inc
jbe
loop
loopne
ret
dec
adc
rolb
outsb
sbb
ror
add
lds
or
loopne
shrb
adc
sub
xchg
or
inc
push
push
dec
bound
inc
jne
fcmovnbe
insb
lods
add
pushf
sub
cltd
sti
lods
sarb
mov
pcmpgtd
xchg
jb
outsb
jg
xchg
mov
ds
dec
and
sahf
in
aam
cmp
iretw
or
ja
add
sbb
xchg
mov
xchg
or
roll
sbb
fcomp
lret
mov
nop
pop
outsl
push
jbe
sbb
notl
lods
shlb
das
pop
and
fimull
imull
mov
in
push
pop
arpl
jl
push
repnz
mov
push
out
push
push
outsb
mov
inc
mov
adc
dec
sti
mov
lds
xchg
xor
aas
jae
inc
cmp
or
orb
lahf
inc
outsb
inc
mov
dec
lahf
inc
ljmp
sbb
cwtl
push
sbb
jle
notb
mov
inc
das
leave
jno
push
push
lock
fwait
in
sbb
lods
scas
adc
enter
aam
mov
in
loopne
mov
jne
push
xchg
add
mov
sbb
xchg
mov
mov
push
gs
les
inc
cmc
movsl
lock
pop
jg
fidivrl
jns
mov
cwtl
push
cmp
loop
add
sarb
cmc
std
fcmovnb
inc
out
xor
bswap
adc
cmp
mov
aam
jnp
shlb
cs
in
inc
loop
in
fwait
rorb
cs
pop
pop
push
fsubrs
push
pushf
dec
popa
sub
or
cld
sbb
adc
cs
popf
mov
sti
jnp
pop
fcmovbe
out
mov
cltd
inc
cmp
sbb
mov
mov
testb
xchg
out
insb
add
xor
sbb
imul
and
push
popa
cwtl
bound
pop
lret
fidivrl
daa
in
mov
lret
cmp
les
arpl
mov
loope
in
mov
push
mov
popf
andl
adc
ljmp
shrb
pop
or
lea
ljmp
dec
push
inc
add
xor
in
dec
insb
aaa
insb
jmp
mov
outsb
test
dec
stos
ljmp
mov
js
lret
scas
sbb
fcomps
dec
dec
cmp
aad
and
dec
hlt
or
loopne
jo
dec
loop
pop
push
mov
dec
jmp
into
cmc
faddl
fstps
orb
stos
arpl
adc
in
mov
test
inc
nop
xchg
xor
inc
ja
leave
mov
push
push
sub
in
lcall
lock
add
push
pop
sbb
outsb
lods
pop
fwait
dec
fidivrs
cmp
jnp
push
add
pop
aas
rcr
mov
movsb
xor
lods
ret
bound
loope
mov
out
or
in
sub
stos
sti
push
inc
dec
adc
in
cmp
or
cltd
faddl
enter
xor
sarb
sub
out
pop
inc
push
outsb
sbb
popa
or
aaa
movsb
ss
add
frstor
shrl
out
ljmp
in
js
sub
mov
std
lret
scas
push
push
loope
das
cmp
xorb
mov
jle
inc
jae
repnz
sahf
addr16
ljmp
repz
leave
ljmp
inc
mov
mov
pop
fidivrl
lds
xchg
fisubrl
mov
mov
add
pop
popa
outsb
lock
shlb
sbb
pop
dec
rorl
jp
subb
or
pop
cmp
xchg
and
test
idiv
xchg
ljmp
cmpsb
sub
or
cmpb
test
frndint
scas
aam
push
xor
jne
jle
mov
adc
push
js
xchg
pushf
dec
mov
mov
out
xor
loop
repnz
push
sub
jo
inc
lods
mov
fisttpl
mov
mov
je
inc
jb
adc
adc
or
and
arpl
lods
sbb
and
subb
inc
jbe
gs
loop
mov
jb
mov
sbb
movsb
sbb
push
xchg
and
jae
cmp
lods
mov
dec
call
lret
sub
cmp
in
fisubl
dec
jbe
inc
push
fsubrs
jg
rcrb
jecxz
jl
mov
andb
stc
into
mov
sbb
gs
das
loop
lret
pushf
mov
sbb
and
mov
xor
insl
jnp
mov
aam
and
gs
pop
aas
jo
ret
sbb
ljmp
jnp
scas
outsb
inc
push
test
enter
jecxz
addr16
insl
mov
rolb
mov
in
jg
pop
inc
pop
inc
stos
enter
xchg
fmuls
inc
test
in
inc
xchg
in
inc
adc
sti
xchg
jae
dec
xchg
mov
xlat
sub
faddp
adc
cmpsl
leave
push
test
mov
outsb
out
jno
jns
jbe
inc
xchg
xchg
cmp
xchg
iret
xlat
stc
add
pop
outsb
sub
hlt
push
addl
cs
out
outsb
sub
aam
xor
lods
adc
push
out
rcrl
pop
push
jmp
fimull
jg
jmp
test
jle
adc
xchg
jmp
out
mov
insl
push
bound
sbbl
sbb
sbb
xor
andb
imul
clc
pusha
push
mov
or
and
ret
clc
test
xchg
sti
dec
sub
and
xchg
fistpll
std
push
data16
xchg
add
sti
inc
xor
push
popl
or
xor
cmc
xor
enter
rorb
shl
mov
int
shlb
xchg
mov
add
pop
fiaddl
clc
add
jecxz
or
test
enter
inc
inc
rcr
je
adc
bound
pop
push
pop
ss
ja
inc
sbb
addr16
cmp
pmaddwd
pop
fisubrs
mov
pop
xchg
es
cmpsb
dec
or
dec
pop
push
je
lea
incb
pusha
dec
shlb
popf
ja
sahf
pop
js
int
jns
dec
cmc
addr16
fadd
jo
and
inc
push
xchg
dec
pop
imul
shl
xchg
movsl
cld
sbb
jb
lods
push
adc
sbb
lret
fcmovbe
dec
clc
out
aaa
dec
pop
mov
insb
stos
hlt
mov
popa
jb
push
jbe
mov
sbb
sbb
mov
or
in
cwtl
jbe
outsb
loopne
mov
and
cmc
ljmp
ljmp
or
cmp
out
xchg
adc
dec
shlb
push
lahf
and
int3
pop
mov
dec
xor
in
lret
arpl
or
mov
outsb
cmpsl
lret
sti
mov
fdivrs
sahf
jne
je
jnp
xor
mov
dec
lahf
das
push
outsb
xchg
popf
pop
hlt
inc
loope
rcrb
sub
mov
xchg
xor
adc
xchg
mov
pop
loope
mov
sarb
push
and
das
mov
mov
add
adc
cmpsl
testb
and
sbb
pop
cld
mov
jmp
and
iret
in
mov
xchg
hlt
jne
cmp
mov
outsb
loope
das
movsl
stc
pop
adc
fmulp
pop
rep
inc
notl
or
test
mov
sub
stc
inc
rol
test
push
mov
add
jbe
adc
adc
into
loope
sbb
mov
repz
push
loop
roll
aaa
pop
loop
xor
rorb
dec
sub
xor
xchg
push
add
and
insl
mov
sbb
cmp
xor
inc
pop
and
repnz
imul
push
cli
push
and
testl
mov
popf
sub
inc
jbe
jp
xlat
jns
add
leave
test
cmp
test
push
in
outsb
cmp
sbb
into
shll
sub
test
bound
cmpl
hlt
fcmovnb
ds
sub
cmp
std
sahf
jle
nop
mov
inc
fcmovnb
jle
cmpsb
loop
loope
pop
jb
mov
mov
sub
add
pop
sbb
jmp
xchg
adc
fsubrs
icebp
xchg
mov
cmp
inc
andb
cmp
and
call
dec
xor
jnp
call
jbe
inc
sbb
insl
je
push
in
cmp
pop
ljmp
cs
shll
call
aad
mov
jbe
jge
push
stos
sub
cmpsb
out
or
xchg
sbb
cmc
mov
jo
mov
out
jbe
and
fcompl
xlat
jecxz
sbb
dec
sub
pop
cmp
push
popf
out
jae
insb
push
jb
fsub
bound
push
sbb
xchg
outsb
cmp
incl
rclb
rclb
imul
movntq
out
xor
mov
cmc
xchg
push
xchg
push
sub
adc
sbb
ss
and
jg
cmp
out
jbe
pusha
stc
cmpsb
lds
and
ficoms
push
shr
xchg
xchg
sti
ss
mov
cmpsb
aad
lret
loop
pop
jecxz
mov
nop
jne
mov
loop
add
aad
xor
outsb
cmovp
push
es
jge
pop
xor
int
in
dec
loop
lock
inc
pushf
out
mov
mov
cmp
jnp
lcall
sbb
shrl
jns
js
stos
loope
sbb
jbe
jae
or
int3
les
or
pop
dec
xchg
xchg
clc
pop
jbe
pop
push
out
pop
mov
push
es
mov
int3
outsb
ljmp
jmp
sbb
jge
cmpsl
or
sbb
call
repnz
lea
jae
test
push
sub
stos
dec
mov
dec
cmp
adc
outsl
fsubrl
arpl
jbe
into
push
add
jne
pusha
add
or
cmpl
xchg
dec
int3
insb
add
xor
js
or
adc
sbb
mov
out
jnp
mov
push
cmpsl
mov
mov
in
repz
inc
push
sbb
ja
or
mov
loop
out
dec
dec
cmp
sbbl
in
cmpsb
cmpsl
enter
popf
movsl
stos
clc
xchg
pop
ficoms
std
ja
xor
inc
xor
outsb
xor
sub
xor
int3
jbe
cmp
and
daa
adc
iret
mov
xchg
aaa
fs
nop
fmul
loopne
outsb
les
cmp
push
sbb
hlt
shll
cmpsl
push
pop
addr16
movsb
or
jns
push
stc
dec
outsb
sti
ss
fdivr
dec
mov
pop
imulb
dec
push
jae
xor
int
out
mov
mov
sbb
push
outsb
daa
lret
dec
je
test
xchg
loope
and
add
inc
imul
xorl
dec
outsb
cli
push
mov
mov
pavgw
shlb
pop
and
sbb
pop
sbb
xor
mov
or
inc
sbb
add
fldenv
movb
jecxz
loop
negl
jne
jge
out
mov
bound
arpl
jbe
inc
loope
jmp
insb
adc
ret
mov
or
ret
out
cmpsb
pop
call
sarb
mov
push
imul
or
sbb
sarb
jle
shrb
mov
inc
cmpsb
dec
out
aaa
fisubrs
mov
mov
mov
shll
out
cmp
clc
testl
fisttpl
and
jmp
bound
out
pop
dec
addr16
fwait
rorl
sbb
inc
dec
inc
in
rclb
xor
jbe
cld
shrb
push
push
sub
pop
xchg
sub
sbb
lea
repz
test
adc
adc
sbb
push
cmp
pop
xchg
dec
xor
mov
xor
jg
pop
jmp
insb
cmc
ss
inc
lock
xchg
pop
mov
pusha
xchg
in
sti
iret
lock
out
xor
lahf
lds
in
push
mov
push
inc
sbb
push
call
push
cmp
mov
mov
jge
mov
sbbl
push
cmp
sub
add
and
push
mov
sub
ja
pop
insb
sbb
es
fwait
cmpsb
cmp
cs
inc
clc
bound
adc
lret
ficomps
xor
adcl
dec
insl
outsb
pop
or
push
imul
jecxz
outsb
add
jae
loopne
or
pop
mov
sbb
mov
xor
cltd
daa
pop
xchg
clc
cltd
inc
loope
sarb
std
mulb
pop
mov
in
pop
xor
stos
or
or
xor
and
ljmp
sub
aaa
mov
or
rolb
fstl
imul
sbb
int3
fidivrl
inc
adc
enter
hlt
jmp
pop
push
jle
inc
cltd
shl
outsb
bound
lahf
mov
fs
inc
arpl
pop
sbbl
icebp
iret
sub
mov
pop
enter
ja
or
and
pop
xchg
lea
in
mov
xor
push
add
sbb
rcrb
mov
outsb
call
xor
xchg
subb
pxor
ja
add
shlb
pop
sub
mov
pop
cmpsl
jno
cmp
shr
cmc
xor
jge
dec
mull
rolb
cmc
add
arpl
dec
out
push
mov
mov
xor
pusha
hlt
adc
dec
mov
into
sub
or
mov
or
mov
mov
mov
outsb
mov
popf
sbb
mov
cmp
mov
sub
inc
aas
cmc
ret
jge
inc
rcrl
outsb
mov
dec
mov
pop
arpl
xchg
lcall
nop
int3
sbb
mov
mov
cltd
pop
xchg
fmuls
hlt
push
ret
in
jmp
xchg
xor
insb
push
push
fisubl
adc
in
pop
andl
mov
xchg
lods
mov
xor
jg
arpl
imulb
inc
mov
mov
popl
jbe
ret
out
dec
sbb
mov
outsb
add
adc
and
pop
repnz
sub
mov
shr
lahf
adc
in
test
mov
jnp
fimuls
xor
sub
sub
cmp
decl
sub
lret
fwait
jmp
outsb
sub
js
add
adc
adc
out
inc
push
adc
xlat
mov
and
in
push
test
in
sbb
pop
loop
mov
arpl
and
xchg
divl
xor
sbb
xchg
jbe
aad
pop
sub
filds
leave
xchg
sbbb
lods
in
hlt
movsl
mov
sbb
repnz
fs
mov
outsb
pop
mov
mov
ja
pop
cmp
ljmp
push
and
rolb
pop
ds
cs
cmp
push
jge
loop
xorb
pop
shrb
mov
std
sahf
and
mov
fcoml
mulb
push
jg
mov
xor
xchg
ss
popf
mov
push
mov
je
fs
outsb
cmpsb
test
xchg
xchg
daa
test
mov
insl
les
mov
std
fdivr
cwtl
lds
push
lods
mov
mov
xor
je
sub
xchg
mov
mov
jb
out
outsb
pusha
lock
dec
jne
jecxz
out
mov
dec
addl
xor
cltd
xor
xor
xlat
ljmp
inc
push
pop
or
lock
cmpl
fnstenv
sbb
push
mov
push
loope
shlb
push
push
sar
inc
popf
aad
inc
sbb
jae
xor
cs
jecxz
dec
lret
and
sbb
fwait
sbb
arpl
and
mov
icebp
nop
inc
or
add
es
mov
xchg
mov
mul
imul
std
in
dec
sub
testb
pushf
xorb
sbb
and
push
pop
fdivrl
or
jne
rol
mov
bound
es
push
cltd
dec
push
mov
hlt
data16
xchg
ret
insl
or
fidivrl
cmp
test
mov
aad
cmp
sub
aas
sti
and
mov
andb
faddp
imul
fistl
push
imul
in
sahf
sar
stc
imul
test
dec
fcomip
dec
fcmovnbe
add
pusha
rolb
int
xchg
fldcw
mov
and
mov
lods
adcb
inc
loopne
cmovnp
adc
in
lods
test
sub
pushf
cmp
cmc
popa
testl
out
shrb
dec
lea
loopne
push
ret
jecxz
test
mov
loopne
in
lods
call
sub
jae
stos
cmp
jge
mov
test
imul
jb
roll
leave
xor
hlt
ja
inc
outsb
cmp
jmp
or
std
xchg
sbbb
nop
fcmove
jno
clc
fistpl
rcr
arpl
outsb
dec
lods
mov
push
sahf
mov
sbbl
pop
icebp
icebp
loop
mov
into
gs
fsub
push
dec
fadds
stos
pop
mov
in
add
sbb
pop
call
xor
jge
lcall
add
mov
ss
and
pop
shlb
rclb
pop
push
call
jno
in
cmp
dec
mov
or
shlb
loop
aas
inc
divl
and
jno
and
xchg
pop
rorb
imul
mov
jne
sbb
fdivr
push
fwait
into
mov
xor
xchg
dec
jmp
scas
bound
pop
stos
rorb
dec
adc
sub
fisttps
hlt
repnz
fwait
mov
add
shrb
and
repnz
sbb
push
mov
and
rclb
add
mov
xchg
iret
cwtl
inc
sub
lcall
dec
outsb
out
jp
and
push
fnstenv
test
inc
loopne
inc
rorl
test
mov
xchg
ss
pop
sub
mov
shll
outsb
daa
test
cmp
mov
xor
pop
mov
insl
push
mov
stc
inc
loopne
mov
daa
loope
js
jb
mov
jecxz
mov
push
jecxz
int
arpl
jb
jecxz
ljmp
push
popf
test
ss
testb
mov
popf
mov
leave
in
mov
icebp
or
rcl
nop
adc
pop
sarb
pop
cwtl
popa
loopne
pop
sub
jnp
sbb
insb
sbbb
out
jecxz
add
insb
imul
insl
dec
out
lods
mov
addr16
jne
push
negb
hlt
push
sti
mov
add
inc
out
sub
movsl
mov
mov
out
je
aas
orl
insb
stos
dec
jl
aaa
das
lret
add
jne
scas
sub
sti
je
fldcw
mov
loop
loope
arpl
fdivl
or
rolb
cmp
or
in
add
add
test
aad
and
sub
vmovsd
cmpsb
inc
and
mov
push
mov
mov
sbb
push
fisubs
cld
flds
inc
xchg
iret
dec
and
xor
cwtl
pop
sahf
jne
in
xchg
xchg
ss
xchg
adc
push
inc
inc
test
pop
aam
sub
xchg
lret
cmpsb
test
lcall
sti
xor
inc
ljmp
inc
inc
fnsave
dec
inc
add
pop
je
add
jns
int
movsl
cmp
cltd
imul
jbe
mov
js
hlt
pop
outsl
mov
out
loop
jbe
enter
imulb
vpslld
sub
lods
scas
cmp
xchg
fdivl
iret
sbb
mov
inc
pop
ret
push
addr16
inc
shlb
popl
jae
xor
adc
fmull
outsb
lods
jl
loope
pop
cmp
pop
popf
cli
mov
xor
add
xor
pop
inc
stc
dec
clc
inc
push
int3
pop
mov
cmpsb
shlb
outsb
je
shll
iret
lret
inc
out
lret
daa
xchg
xlat
shlb
push
mov
jbe
jg
int3
stos
lret
and
or
push
mov
std
mov
pmaxub
sbb
or
mov
inc
mov
cld
test
dec
jbe
in
mov
sub
pusha
add
adc
cmpsb
sbb
jns
pusha
push
shrl
andl
xchg
ds
adc
rclb
ret
out
loope
jno
ljmp
mov
rcrb
ljmp
mov
hlt
mov
adc
popa
jnp
xor
jbe
mull
cmp
shrb
divl
push
jbe
pusha
sarb
xor
xchg
dec
hlt
and
mov
fcmovnbe
pop
and
jmp
imul
mov
shlb
in
in
outsb
test
xor
sbb
pop
mov
lods
dec
push
hlt
mov
daa
ret
jae
arpl
dec
sub
ljmp
mov
push
insb
pushf
sub
test
cmpsl
lcall
push
sti
dec
test
push
in
jl
adc
mov
and
lods
leave
and
dec
xchg
imul
adc
xor
pop
inc
sarb
popa
nop
xchg
cli
sub
bound
out
dec
dec
lods
in
fcoms
sub
mov
mov
xchg
jae
cmp
inc
pop
and
loopne
insl
call
adc
pop
sub
mov
xor
das
xor
mov
aaa
aam
mov
sub
sbb
add
pop
and
mov
add
arpl
push
xchg
mov
stos
or
sbb
test
pop
imulb
popa
add
xor
push
cmp
cmc
aas
stc
shlb
mov
nop
inc
mov
sbb
sbb
fdiv
addb
jne
sub
and
pop
fidivs
inc
loop
jb
mov
jbe
lret
xor
loopne
xchg
jecxz
inc
lcall
lahf
outsb
movsb
ja
mov
sbb
pusha
sarb
jp
test
sbb
dec
push
sarb
leave
mov
push
xchg
in
add
hlt
mov
repnz
lahf
ljmp
mov
movsb
fcomip
dec
outsb
popa
daa
out
cmp
cmp
cltd
dec
jle
pushl
mov
clc
mov
loope
xchg
in
sti
bound
outsb
outsb
or
je
rcl
pop
leave
ret
scas
mov
and
push
or
or
cld
insb
fabs
fldenv
orb
inc
mov
pop
out
xchg
adc
test
pop
cld
fiadds
cmc
sbb
xor
fists
shlb
ds
adc
dec
and
fs
in
pop
and
add
xchg
aaa
int3
in
sub
test
pop
ficoms
out
addr16
test
xor
sarb
pushf
pop
es
mov
insb
jno
sub
in
ljmp
ja
dec
insl
or
pushf
xor
add
test
jbe
push
xor
outsb
xchg
pop
jmp
cmp
dec
inc
inc
xor
dec
dec
pop
jbe
and
sbb
sar
icebp
cmp
inc
and
sti
jg
fs
push
jns
push
push
out
mov
jns
inc
add
or
cwtl
xchg
js
jbe
pop
xlat
mov
shrb
mov
adc
cmp
imul
dec
lret
in
insb
xor
mov
and
movsb
lret
test
push
mov
and
insl
jg
dec
popa
mov
or
cwtl
xor
add
xchg
xor
xchg
leave
sub
cwtl
jbe
shlb
push
mov
mov
xchg
aam
sub
mov
es
out
stc
stc
test
dec
push
addr16
mov
ss
subb
nop
mov
inc
mov
ret
mov
mov
xor
dec
lcall
mov
inc
mov
mov
std
mov
pop
bound
mov
into
inc
aaa
cmc
push
jle
ret
fstps
subb
cld
fstpl
out
inc
clc
stc
jnp
addr16
imul
or
andl
fucomip
fxch
lret
imul
jge
shll
movsl
int3
loope
outsb
pop
push
sbb
in
push
mov
push
add
arpl
xchg
fcmovnu
lcall
ficompl
mov
mov
cmpsb
xchg
addr16
das
lret
dec
push
add
data16
mov
or
cmpsl
stos
test
mov
mov
in
mov
cs
jbe
movsl
adc
xchg
lea
cmc
lcall
sub
testb
inc
scas
mov
push
jne
pusha
loopne
dec
mov
push
and
daa
das
outsb
jns
jb
add
and
xchg
fwait
imul
add
aad
mov
dec
xorb
mov
sub
dec
push
insb
in
add
dec
sbb
aad
inc
test
lret
push
in
mov
popf
or
xor
sub
jl
outsb
xor
mov
es
int
stos
outsb
ficoms
inc
mov
dec
xchg
and
das
push
pop
insb
mov
sarb
daa
push
rorb
inc
out
push
xchg
ds
jbe
icebp
gs
jle
leave
outsl
outsb
and
iret
sbb
cmp
and
mov
jae
cmc
dec
test
sahf
movsb
les
lret
inc
mov
subb
aaa
stc
aad
inc
fcoml
adc
jecxz
sarb
cmpsb
mov
fidivs
cld
scas
je
cmpsb
pop
xchg
add
inc
cmc
loope
inc
out
psubw
rcrb
popa
leave
fistl
jns
outsb
xor
pop
in
sbb
xchg
jecxz
cmp
pop
test
cmp
mov
dec
and
sub
push
out
out
mov
add
aaa
dec
xchg
js
xor
ja
sbb
lahf
xor
inc
xor
ljmp
push
add
xchg
sub
in
push
cld
loope
adc
mov
lret
push
imul
shl
test
fnstsw
sti
dec
sti
dec
mov
adc
cs
bound
mov
xor
imul
aam
into
fidivrl
cs
loope
push
lock
pop
add
mov
mov
cld
insb
popf
outsb
test
les
test
stos
insl
lock
das
arpl
mov
dec
ljmp
xchg
shll
mov
pop
movsl
sbb
stos
arpl
push
xchg
repnz
mov
mov
inc
mov
ss
push
pop
daa
out
outsb
call
daa
inc
jbe
dec
and
lods
mov
push
sbb
mov
jecxz
shl
sbb
lret
pop
lods
lret
inc
mov
or
add
cld
addr16
fstl
mov
pop
popa
add
mov
in
test
push
hlt
gs
pop
sahf
cvtpi2ps
or
fwait
scas
insb
pop
inc
imul
mov
jbe
cmpsl
push
cmpsb
psraw
imull
loopne
iret
outsb
cmpsl
mov
es
adc
je
daa
in
and
push
xor
or
andl
cmpsl
adc
dec
push
pop
insl
jmp
stc
cmpb
shll
add
clc
jns
dec
insl
jne
ljmp
rolb
push
sti
mov
jo
cmc
loopne
cli
xchg
xor
insb
popa
rolb
pop
sbb
lahf
adc
arpl
xchg
and
outsb
xchg
lretw
les
sahf
mov
inc
arpl
mov
fisubrl
jae
ret
cmp
xor
pop
add
cwtl
fisubrl
pushl
jne
lds
ds
cmp
into
xor
jle
mov
subl
pop
stos
jbe
sbb
enter
seto
cwtl
pop
jae
imul
sbb
mov
popf
ret
movsb
insl
shl
mov
ret
aaa
jae
nop
out
jbe
aas
insl
and
dec
scas
roll
adc
mov
sti
es
leave
nop
rolb
lods
bound
outsb
mov
sub
mov
dec
or
in
jg
nop
xchg
xor
lahf
jns
dec
cmp
push
jae
sti
vpxor
sahf
pushf
or
xchg
shlb
lahf
mov
js
adc
sub
sbb
mov
ficomps
loopne
xchg
movsb
lods
and
cli
lret
loope
mov
cmpsb
and
jmp
jbe
repnz
enter
imul
scas
fsts
pop
mov
insl
sbb
loop
pop
rcl
nop
adc
or
add
roll
sub
into
rcl
sub
bound
lods
rcl
mov
mov
xor
or
insb
mov
pop
test
mov
mov
shlb
call
xor
mov
mov
adc
push
or
negl
and
pop
test
push
jae
cmp
mov
int3
std
push
aaa
sub
xchg
cmpsl
vunpckhps
test
xchg
dec
and
in
arpl
mov
rcl
ds
ljmp
xor
pop
add
xor
shlb
mov
lret
jb
test
stos
and
sbb
orl
dec
pop
frstor
enter
jbe
stos
jo
cmp
mov
pop
icebp
shlb
ja
mov
jecxz
pop
stos
lcall
push
sti
dec
mov
in
xchg
xor
dec
xor
shrb
ljmp
dec
test
ds
pusha
push
xor
iret
in
mov
xchg
les
ss
xor
adc
fidivs
sub
scas
rclb
push
das
mov
imul
notb
test
mov
lock
iret
in
iret
test
pop
test
xor
jae
mov
cwtl
mov
das
outsb
xchg
iret
stc
fistps
push
movsb
insb
or
inc
or
mov
fistpll
and
pusha
test
mov
fcomps
dec
or
pop
pop
xor
insb
mov
mul
cld
jle
fxch
mov
and
mov
sbb
int3
mov
jne
rcrb
dec
fstl
pop
mov
dec
or
out
sub
mov
or
and
mov
sti
in
cld
std
rcrb
and
lahf
and
movsb
mov
sbb
jbe
xor
jne
mov
jae
add
pusha
fldt
push
shlb
jo
push
nop
enter
inc
test
push
sbb
cmpsb
jp
cmp
shll
adc
test
inc
mov
stc
dec
pop
xchg
mov
aaa
pusha
jge
stos
add
shll
mov
push
cli
xor
xor
dec
mov
jmp
pusha
pop
push
shl
outsb
test
testl
cwtl
cli
cmp
and
leave
jbe
js
jae
and
and
mov
scas
push
loope
in
bound
lret
ret
or
xor
ret
cmp
sub
add
cltd
or
dec
iret
inc
mov
outsb
lcall
pop
mov
dec
sbb
add
adc
aam
fdivrl
xchg
sub
add
nop
and
in
add
call
insl
pushf
cmp
loope
ficoml
jbe
add
mov
aaa
test
sub
inc
neg
cwtl
sahf
lea
ja
mov
loop
imul
adc
xchg
popf
add
cmc
dec
xorl
pop
lods
dec
and
mov
sbb
arpl
lods
jg
xchg
outsb
js
sbbb
xorl
jmp
out
scas
pusha
cmp
or
xor
popf
pushf
divl
cmp
xor
imul
mov
dec
sub
hlt
lds
in
int
scas
sbb
and
bound
sbb
sbb
popf
jae
outsb
fistpll
mov
out
lcall
push
xorb
es
orb
stos
test
out
adc
ds
outsl
imul
inc
jb
sti
pop
popl
in
push
outsb
insb
loopne
add
outsb
ja
hlt
sbb
outsl
dec
fidivrl
jbe
and
cmp
movsb
push
divb
in
fs
xlat
jbe
loop
lock
sti
test
aaa
and
inc
rolb
filds
inc
lret
xor
inc
lret
mov
pop
bound
ljmp
repnz
mov
xchg
sub
sub
insl
cmp
test
inc
ja
add
out
icebp
mulb
push
call
jl
cltd
shlb
jge
ljmp
aas
jns
pop
jbe
sbb
and
inc
jnp
jmp
imul
fninit
add
popa
push
mov
in
adc
lds
daa
in
mov
je
movsl
mov
imul
loop
ljmp
loopne
shlb
mov
call
outsb
jmp
pushf
push
jge
test
insb
hlt
add
ds
fisubrl
push
mov
sub
dec
lret
jge
in
popa
popf
inc
rcrb
sbb
fstps
stos
fcmovbe
loope
lcall
cs
aaa
sbb
mov
push
sbb
add
mov
das
jne
insl
jbe
jnp
inc
push
das
sub
mov
cmpsl
mov
mulb
ret
jbe
je
adc
fidivl
stc
inc
push
sbb
jae
mov
cld
xchg
mov
int
lcall
cltd
shlb
test
mov
mov
in
loop
shlb
out
dec
nop
lret
sarb
scas
aad
call
inc
or
sbb
pop
rorb
sub
dec
xor
mov
fisubl
rcl
xor
adc
mov
out
out
sbb
pop
fistl
lcall
inc
leave
lods
xor
movsl
int3
adc
pop
ret
sub
mov
pusha
daa
outsb
negb
nopl
out
iret
sbbb
adc
lods
loope
outsb
push
mov
repz
jle
mov
xchg
movsl
inc
jecxz
stos
sub
sub
dec
lods
push
and
out
jbe
sub
xchg
mov
addr16
sbb
dec
mov
mov
aad
lahf
iret
sbb
mov
mov
ficompl
in
mov
push
testb
jbe
or
add
notl
les
cmp
cld
jp
movsl
popa
loope
and
mov
mov
aaa
popf
nop
sbb
sbb
dec
int3
cmc
dec
pusha
jbe
rcrl
mov
cmc
cmp
add
adc
shlb
popa
dec
and
sub
jle
inc
mov
mov
ljmp
jbe
arpl
mov
xchg
jo
cmp
mov
test
loopne
cmp
es
rclb
pop
stos
dec
or
dec
das
mov
into
inc
mov
sub
rorb
push
mov
mov
test
mov
adc
jae
mov
loope
shrb
cs
inc
xchg
fildl
into
in
push
inc
sbb
clc
sbb
test
aaa
movb
dec
fists
jbe
and
notb
jg
or
mov
adc
or
notb
das
test
sbb
push
cmp
or
testl
inc
in
int3
hlt
je
mov
pusha
mov
mov
pop
ds
int
mov
scas
aad
loopne
sti
in
push
xorl
cmpsl
pusha
or
cli
push
stos
xlat
xor
adc
push
inc
xor
insl
sbb
mov
clc
sarb
xchg
scas
and
cmp
adc
jecxz
filds
push
mov
and
stos
add
and
sub
mov
xchg
jno
stos
inc
cmp
in
es
mov
mov
pop
cmp
jge
pop
mov
pop
cmc
in
xchg
icebp
insb
hlt
mov
les
push
and
outsb
mov
je
push
rolb
out
out
pop
lahf
cmp
jecxz
adc
jno
outsb
in
or
out
rcl
sbb
dec
xchg
sbb
incl
jbe
xor
push
cmc
addr16
aam
sbb
in
xor
sbb
aam
fstps
imul
push
push
icebp
mov
sub
out
adc
jp
sbb
aam
sub
jbe
dec
mov
fnstcw
in
call
div
ljmp
test
fisubs
mov
lods
or
inc
lcall
mov
lret
stos
insl
cmp
dec
stc
sub
in
cmp
inc
and
xchg
push
das
and
push
int
pop
dec
out
inc
into
rolb
xchg
cld
out
les
fidivs
dec
push
fucomi
cli
xchg
or
stos
adc
inc
loopne
push
mov
jbe
not
xchg
outsb
pop
or
lret
fildl
iret
clc
sbb
out
fwait
rorb
and
lahf
loop
xchg
push
pop
aad
rcl
out
sbb
dec
or
inc
or
fs
daa
cmpsl
pop
lods
inc
pop
aad
mov
clc
sbb
adc
and
popf
repz
int
std
xchg
pop
movsl
xchg
adc
lret
xchg
dec
pop
mov
mov
jns
iret
cs
ss
mov
dec
lods
mov
movsl
iret
cwtl
test
fidivrl
sbb
mov
xor
xchg
pushf
insl
test
repz
outsb
inc
mov
or
sub
xlat
add
and
pop
pmuludq
shlb
sti
or
hlt
incl
pop
cltd
bound
cmp
sbb
push
leave
insl
fisttpll
rcll
movsl
sbb
fmul
cmpsb
push
movsl
push
lcall
jbe
sbb
sub
fisubs
stc
insl
sub
dec
cwtl
orb
divb
fs
dec
pop
sbb
test
pusha
cmp
mov
mov
jl
inc
mov
fcoms
out
movsl
xchg
xlat
jle
xchg
jecxz
xchg
repnz
mov
xchg
or
cwtl
jbe
sti
repnz
andb
mov
outsb
xchg
jae
sahf
add
pushf
mov
cs
push
inc
outsl
dec
lock
ror
xchg
ret
pusha
imul
test
fstpl
dec
lcall
addb
jmp
insl
or
sub
shlb
sbb
and
mov
xor
mov
mov
mov
movsb
les
inc
outsb
jbe
cmc
xor
imul
mov
push
lods
or
adc
pop
lahf
data16
into
xchg
int
sub
dec
pop
repz
out
inc
aad
ret
scas
jecxz
dec
pop
mov
dec
addr16
mov
andl
fcoml
ret
mov
stos
iret
sbb
cmc
out
xor
mov
cli
pop
das
pop
xor
mov
jae
lret
shl
ret
sahf
mov
scas
sbb
testb
sbb
inc
cwtl
movsb
mov
jl
push
sti
test
stc
inc
mov
adc
add
cmp
push
push
cld
mov
outsb
pusha
mov
push
push
sti
xchg
jbe
add
cmp
jo
popa
jns
mov
je
mov
rclb
leave
mov
mov
lcall
mov
add
jecxz
jae
mov
lea
add
lds
repz
dec
add
fbstp
cwtl
not
call
loope
jbe
fst
cld
pop
outsl
je
mov
outsb
mov
mov
sbb
loop
out
insl
push
movsb
dec
mov
in
inc
adc
lea
jo
xchg
mov
out
cli
jnp
mov
cmp
push
push
negl
cmp
sub
inc
add
shlb
cmp
mov
aaa
out
lock
xor
and
jo
or
mov
xor
xchg
add
dec
mulb
test
push
mov
sbb
fbstp
jne
jl
dec
fisubrs
jecxz
mov
pop
mov
stos
or
je
fiadds
addr16
enter
or
daa
shrb
dec
xchg
js
adc
aas
loop
fsubr
imul
stos
sub
and
mov
stc
sti
mov
mov
cwtl
inc
sbb
lods
pop
xchg
flds
sbb
mov
jno
and
imul
dec
repnz
cmp
lods
ror
insl
dec
arpl
cmp
adcb
loope
loop
aad
aad
mov
sbb
mov
call
push
inc
bound
add
lods
ud0
int
addr16
pusha
sarl
jge
push
mov
xor
jne
jecxz
add
vfnmadd231pd
mov
ljmp
dec
jmp
jg
xchg
sarb
mov
outsb
movsl
xlat
cmc
stc
jbe
push
gs
push
test
smsw
pop
lret
sbb
inc
mov
stos
mov
cmp
push
push
mov
movsl
xchg
xlat
and
cld
add
adc
sub
pop
add
iret
test
fimull
insb
outsl
dec
cmp
cmp
shlb
jne
mov
mov
leave
jns
adc
test
aam
sub
rolb
movl
leave
sbb
dec
mov
stos
pusha
lret
cmp
xchg
out
add
and
lcall
mov
mov
mov
cmp
lods
hlt
dec
loop
push
push
stos
jo
movsl
and
test
mov
imul
inc
std
pop
mov
divl
stos
push
das
jecxz
das
and
test
push
mov
dec
xorb
pop
or
and
in
dec
outsb
ljmp
pop
push
sub
sub
mov
mov
pushf
scas
or
test
ljmp
mov
dec
jmp
pop
loop
jb
cwtl
in
and
xchg
stos
jl
addr16
pop
popf
fisttps
test
push
imul
sar
pop
stos
cmp
in
mov
mov
cmc
ss
or
sub
cwtl
mov
lods
pop
lret
push
mov
jecxz
pusha
push
xor
addr16
or
shrl
dec
push
ror
ds
sbb
loop
sbb
sarb
leave
dec
psraw
jecxz
sub
insl
shl
mov
loopne
fnstsw
andb
je
in
lods
adc
cli
icebp
or
ror
jo
jno
cmpsl
orb
mov
mov
shrb
jne
dec
push
cmc
jmp
and
jnp
mov
stos
pop
cmp
jae
mov
mov
aam
cli
jmp
push
loop
fsubl
vpunpckhqdq
xchg
stos
lods
pop
aaa
loopne
sbb
sub
push
shl
sbb
cmc
pop
cmovl
push
hlt
sbb
sbb
jno
pop
lds
ret
pop
sub
jo
sahf
sub
mov
sti
inc
sti
and
jbe
fidivrl
inc
dec
sahf
push
ds
sub
cmpsb
add
mov
addr16
dec
or
sti
sbb
js
jns
mov
insl
sub
dec
vpackssdw
call
push
mov
mov
je
outsb
adcb
push
popa
insb
pop
jbe
inc
and
mov
xor
add
fildll
aas
outsb
lret
mov
pop
dec
test
xchg
pushf
aaa
adc
std
stos
jl
pop
jecxz
bound
inc
in
push
push
pop
outsb
decb
mov
rcrl
or
insl
inc
clc
mov
divb
inc
mov
or
imul
jae
fdivrl
mov
in
testl
xchg
cmpsl
ljmp
push
mov
mov
xor
es
inc
mov
and
xchg
jle
push
test
repnz
scas
cmc
lds
insb
add
sub
rcrb
push
mov
mov
push
cmpsl
sbb
aam
pop
jecxz
shrb
cmpsl
in
pop
lcall
and
aaa
pop
rcll
jl
mov
inc
mov
dec
popf
jns
cmp
shlb
push
xor
add
jbe
dec
sbb
mov
fucomi
mov
mov
xor
dec
lods
inc
push
mov
sbb
lcall
cmp
outsb
sbb
rcr
pop
out
mov
lea
dec
inc
lcall
sub
inc
inc
cmpsl
mov
out
shrb
xor
mov
cmp
sti
jl
xchg
pop
add
das
movsb
push
pop
addr16
add
hlt
outsb
sbb
inc
mov
outsb
outsl
cmp
pop
mov
push
stc
insb
lret
jbe
ds
pusha
js
push
dec
mov
cwtl
inc
lret
and
out
xor
sbb
add
inc
jl
stos
sti
jle
dec
push
cmp
into
mov
and
repnz
jmp
in
jg
mov
xor
xor
outsl
xlat
sbb
rolb
mov
lcall
push
lock
mov
sahf
and
xchg
dec
adcb
and
hlt
in
and
cli
sbb
xchg
inc
mov
sarl
pop
ret
sti
adc
lret
popw
lock
or
dec
fiadds
cld
scas
clc
xor
outsb
jge
notb
stc
cmpsl
sbb
bound
fnstenv
adc
aad
iret
xor
orb
inc
jbe
dec
push
cmp
fiaddl
out
nop
lret
xor
sub
movsl
rclb
xor
xchg
cmp
scas
test
jbe,pt
adc
int
add
xchg
dec
popf
mov
lret
ficompl
jbe
jae
hlt
movsb
or
in
movsl
jne
cmp
sbb
ja
cmpsb
rorb
cmp
mov
outsl
dec
outsb
sarl
outsb
sub
inc
lock
push
daa
shll
test
pop
mov
fsubs
into
pop
xlat
xchg
cmp
jle
addr16
jecxz
mov
cmc
sti
ja
jnp
and
cmp
insb
arpl
scas
testl
pushf
jp
pop
fdivl
int
fmul
jle
xchg
flds
push
mov
jmp
dec
orb
testb
mov
pop
add
xor
or
xchg
push
xor
sbb
sbb
cmpsb
fisttpl
out
push
sbb
outsb
adc
dec
and
pop
outsb
out
xacquire
in
mov
dec
add
fmull
addr16
cmp
movsl
shll
xor
ds
out
add
int3
scas
dec
push
imul
test
insb
int
stos
fcoml
push
or
loop
fxch
dec
lea
rorb
rolb
xchg
idiv
xchg
mov
push
call
fildl
std
xor
ret
jecxz
data16
mov
and
pop
aam
loopne
inc
adc
fistl
and
outsl
mov
inc
popf
jbe
or
xchg
addr16
pop
mov
mov
lods
out
ja
movsl
icebp
dec
arpl
pop
out
mov
cmpsb
outsb
push
test
jnp
xchg
dec
inc
mov
and
cmp
adc
sbb
mov
pop
sub
add
xchg
xchg
hlt
movsb
enter
or
inc
stos
outsb
sub
aaa
add
cmpsb
mov
lcall
mov
cmc
sub
inc
movsb
inc
outsb
cmp
push
ljmp
push
cmp
aad
jge
sub
leave
sub
mov
loop
sub
adc
ljmp
mov
cmc
outsb
xchg
stc
xlat
nop
add
out
es
mov
sub
fcmovbe
inc
outsl
pop
in
or
xchg
adc
or
and
ficompl
dec
test
in
test
xchg
cmp
movb
lret
fistl
fld
lds
js
loope
mov
inc
sahf
xor
fnsave
mov
pop
sbb
test
mov
push
mov
add
loopne
xor
scas
into
out
inc
std
pop
testl
enter
jnp
ret
or
push
sub
push
sub
stos
bound
inc
or
ja
dec
loope
inc
lcall
adc
sbb
push
popa
lcall
xor
divl
imul
push
xchg
or
scas
stos
subb
adc
jl
jae
imul
rolb
sarb
xchg
mov
popa
cwtl
leave
dec
mov
add
shl
dec
loop
aaa
push
outsb
fistpl
pop
xchg
movsl
add
bound
out
iret
gs
push
cmp
movsb
add
ljmp
cmpsb
inc
es
sbb
push
shl
jg
ja
pop
or
fcomps
dec
call
sbb
xor
mov
out
sbb
push
ss
test
enter
rclb
add
fldt
clc
mov
and
add
es
mov
fwait
scas
jle
pop
ljmp
cltd
es
cli
pusha
outsb
dec
sbb
sub
cmpsl
int3
push
dec
mov
jge
inc
cmp
popa
cld
push
cmp
fcomi
dec
sub
mov
enter
leave
adc
xchg
lods
xchg
sti
cwtl
ljmp
es
movsb
stc
push
fisttps
mov
adc
fcomps
mov
loope
mov
adc
lret
inc
adc
cmp
sbb
mov
icebp
rcrb
dec
lds
inc
lcall
mov
mov
jp
xchg
cltd
pushl
adc
sar
lds
les
jp
lods
push
testl
cmpsb
divb
int
das
ljmp
inc
into
imul
jmp
das
mov
xor
insl
inc
pop
fistl
movsl
adc
xor
gs
repz
int
adc
leave
cmp
test
in
mov
dec
mov
mov
add
mov
sub
push
arpl
xchg
mov
cmpsl
push
fs
xchg
mov
movsb
jle
sub
insb
mov
jae
ja
push
divl
sahf
sbb
stos
fildl
sub
pop
push
in
pop
pop
inc
in
rorb
out
xor
sub
sub
push
ljmp
shrb
mov
mov
outsb
cmc
add
adc
rorb
outsb
aam
scas
dec
or
int
imul
pop
cmovns
xor
jae
jecxz
pop
mov
scas
mov
jl
pop
sar
pop
add
fs
cmpsb
push
movsl
faddp
ret
jge
inc
and
mov
pop
cmpsl
pop
mov
jp
mov
out
push
xor
mov
xchg
and
fstl
nop
fnstenv
pop
inc
sarb
xchg
repz
mov
and
sub
sti
out
test
lods
out
cmp
xor
inc
push
lahf
and
adc
mov
rcll
decb
push
push
pop
rcrb
popf
mov
add
outsb
and
popf
cmp
cmp
shrb
xor
shr
jb
push
sbbl
sub
mov
or
pushf
lret
int
lods
aam
loope
or
aaa
sbb
mov
pop
jno
sub
push
aad
push
mov
pushf
outsl
cs
loopne
inc
lods
addb
jl
add
mov
shr
inc
xor
stos
push
popa
inc
sbb
inc
lahf
pop
dec
in
pushf
inc
push
daa
loope
rcl
sub
pop
stc
sub
addr16
mov
and
push
mov
mov
fstp
jnp
jp
xor
lods
mov
sbb
push
adc
std
dec
cld
xor
or
in
mov
mov
inc
jnp
in
add
cmc
lahf
mov
cmc
jbe
push
xchg
mov
mov
loope
iret
inc
outsb
and
jp
test
sub
shlb
aas
sub
jbe
and
mov
sarb
cli
fcomps
aad
adc
sbb
in
mov
fs
sahf
push
xchg
fcmovb
sub
insb
pushf
lock
lea
in
inc
lods
aaa
jae
insb
iret
test
outsl
outsb
push
jo
pop
repz
rcrb
das
stos
sbbb
jmp
ficompl
sub
insb
icebp
push
filds
add
sti
str
int
dec
fisttpll
mov
and
xchg
lcall
lods
scas
mov
pushf
dec
aaa
negl
mov
push
dec
lret
fists
negl
insl
imul
and
popf
cmc
xchg
js
movsl
jb
mov
xchg
dec
aaa
and
inc
outsb
imul
and
jae
ljmp
inc
out
fldenv
ja
stc
cmp
push
sub
cmp
add
mov
pop
push
lret
mov
xlat
mov
outsb
mov
inc
fmuls
nop
je
shlb
xchg
ljmp
out
mov
mov
inc
xor
mov
cmpsb
sub
or
lock
jnp
mov
loop
loop
push
stos
outsb
mov
push
ss
inc
mov
push
push
and
sbb
cmpsl
das
decl
cmpsl
push
xor
dec
sub
clc
cmpsl
out
aam
inc
fisubrl
repnz
sub
stc
loopne
cmc
jbe
xlat
or
mov
aaa
bnd
dec
push
arpl
je
mov
mov
xor
sbb
aad
popf
scas
ljmp
jno
fsubl
sbb
outsb
ja
inc
mov
mov
adc
jnp
jo
mov
add
dec
jmp
sbb
mov
and
lds
loopne
call
movsb
aad
insb
fidivl
xorl
sub
mov
pop
cmp
in
subb
fisubrl
sub
jbe
ds
xchg
xchg
push
rcll
pop
dec
cs
movsl
addr16
pop
jbe
sahf
std
mov
mov
lods
mov
xchg
and
adc
rorb
mov
test
mov
rcl
movsb
sahf
repnz
cmpsl
jno
test
pandn
loopne
jp
nop
sti
push
pop
xchg
imul
inc
sub
outsb
jns
push
xlat
and
dec
cmpsb
pop
inc
imul
adc
push
inc
into
xchg
outsb
test
addr16
into
sti
inc
movb
mov
jecxz
jmp
sub
or
in
or
pushf
inc
pop
scas
cmc
rorb
loop
loope
std
ja
add
mov
mov
fldt
jg
int3
adc
pop
mov
sahf
dec
repnz
fisttpl
shl
mov
testb
mov
push
rclb
lods
xor
xor
mov
bound
cmpsb
repnz
mov
ds
sbb
dec
xchg
and
in
lods
jmp
dec
inc
cmpsl
rolb
mov
dec
fadd
push
bound
les
push
loopne
add
dec
aaa
jecxz
xor
shll
push
push
test
hlt
shlb
shll
push
sbb
loope
cmp
push
loope
jmp
and
mov
popa
xor
sti
lods
xor
mov
mov
dec
cmp
stos
xchg
add
jbe
mov
adc
add
das
lock
xchg
outsb
ucomiss
lock
aam
insl
loop
xchg
fwait
aad
popa
mov
xchg
scas
ljmp
cmp
orb
pop
inc
xchg
pop
jne,pt
inc
loope
outsb
bound
sbb
stos
cmp
mov
adc
pusha
xchg
mov
mov
les
ror
mov
fcoms
push
dec
or
push
sbb
and
dec
sub
ljmp
cmp
jecxz
xor
adc
in
fsubp
and
dec
sbb
out
divb
add
cmp
xchg
stos
jmp
adc
movsl
cmc
inc
mov
bound
dec
aaa
push
sbb
js
cmp
fidivrl
call
loope
sub
cld
pop
push
rolb
adc
stc
outsl
jnp
push
add
fdivr
or
lahf
shrb
mov
repnz
mov
mov
mov
inc
fidivrs
ss
jle
nop
pop
jecxz
orb
test
dec
dec
xlat
pusha
jge
jp
out
cld
push
lcall
mov
mov
cld
mov
xlat
jbe
pushf
mov
test
pop
test
jbe
xchg
js
or
icebp
mov
in
inc
rclb
mov
fidivrl
pop
sub
mov
nop
test
cmp
testl
and
lods
sub
stos
sbb
in
sbb
aam
mov
cmp
xor
inc
sub
mov
xor
fsubp
ljmp
loop
pop
mov
adc
pop
pop
fsts
lods
pusha
and
jbe
addr16
mov
sub
jmp
call
es
or
subb
jmp
mov
addr16
pop
cmc
daa
hlt
test
sti
lcall
inc
and
daa
mov
pop
pop
in
mov
dec
cmc
lods
inc
mov
fcomps
push
mov
push
arpl
sbb
sub
xchg
outsb
jle
xor
shrb
pop
addr16
in
dec
into
jecxz
dec
jmp
cmc
jb
pop
push
push
or
xor
stc
mov
mov
cmpsb
std
cmpb
mov
mov
fwait
sbb
xor
inc
mov
xchg
cmpsl
insb
push
cmpsb
inc
mov
popa
fnstcw
repnz
mov
es
jbe
jle
fbld
std
jae
and
fstl
outsb
xor
xlat
sub
adc
les
xor
pop
dec
loop
push
inc
add
or
sbb
inc
insl
cmpsl
cs
cmc
dec
shll
cmp
cmp
pushf
imul
mov
popf
imul
push
lret
pop
adc
stos
sub
es
jne
stos
jecxz
push
mov
test
xor
dec
outsb
cmc
es
sbb
int3
jae
nop
fmul
sub
mov
cwtl
rolb
ss
dec
and
add
jno
inc
loop
inc
sub
shlb
add
xchg
repz
mov
dec
xor
pop
outsb
or
loope
inc
test
lahf
stc
mov
mov
and
mov
jb
jbe
nop
std
xchg
push
subl
inc
popa
xchg
jmp
shll
lods
jne
shl
sbb
cs
dec
or
das
xchg
mov
mov
mov
ret
push
mov
outsb
xchg
jg
push
fstpt
pusha
dec
pop
pop
in
aad
xchg
mov
cmp
addr16
dec
ljmp
cmp
ficoml
sti
or
leave
pop
adc
clc
dec
sub
movb
ret
lods
or
outsl
or
adc
dec
pop
test
in
dec
push
jno
jo
push
imul
dec
rcrb
push
mov
adc
or
inc
aam
and
or
lcall
movswl
leave
add
and
test
push
sti
sub
jae
push
lods
dec
xorl
sub
enter
inc
sbb
loop
stc
out
inc
mov
lea
push
adc
pop
loope
fcmovnbe
ja
inc
inc
xor
mov
outsb
int3
cli
xor
pushf
add
imul
jge
sbb
call
xchg
jbe
mov
rorb
or
inc
iret
jb
outsb
fidivrs
dec
in
sti
push
cmpb
cli
mov
jbe
and
pop
pop
dec
and
repz
lret
andl
clc
adc
daa
outsb
movsb
mov
cs
xor
scas
jbe
stos
inc
stos
mov
or
mov
lret
rclb
inc
xor
pop
stc
pushf
ljmp
add
dec
dec
sub
inc
outsb
pop
xor
int
insl
nop
jl
pusha
inc
xor
inc
daa
aaa
push
je
sti
scas
movsb
mov
nopl
and
loop
xchg
mov
add
pop
outsb
leave
outsb
dec
jmp
cmp
push
mov
cs
movsl
mov
xchg
mov
sub
stos
fucomi
icebp
test
hlt
jl
inc
in
adc
xor
push
imulb
dec
aam
hlt
ret
cli
imul
mov
adc
aad
sbb
jmp
push
or
icebp
inc
cmp
daa
mov
fdivr
sub
add
bound
stc
and
add
shrb
adc
sti
add
dec
adc
push
mov
pop
iret
add
lods
mov
nop
int
rorb
pop
ljmp
xchg
pop
loope
cmc
mov
mov
cltd
jbe
stos
ljmp
fstpl
aas
pop
ja
mov
gs
xchg
inc
outsb
mov
jmp
jbe
movsb
push
pop
and
cmp
loop
sti
inc
push
dec
rol
push
cmp
shlb
cwtl
pop
fldt
inc
adc
in
mov
or
mov
adc
cwtl
sub
out
xor
ss
sbb
adc
cmpsb
push
imul
out
jno
shr
lods
enter
mov
cs
xchg
pop
stos
sbb
mov
aaa
es
pop
ljmp
mov
sub
test
out
or
mov
mov
pop
jne
add
scas
pop
jecxz
jbe
sarl
fsubrl
je
lods
sbb
mov
xor
mov
mov
lds
and
mov
xchg
mov
gs
les
ret
cltd
pop
shrb
sti
jp
ss
dec
add
jbe
arpl
pop
cmc
lods
fimull
dec
out
pop
addr16
fidivrl
xchg
sti
and
pop
pop
push
lods
push
loope
xor
insl
cmp
pusha
mov
inc
cltd
cmpsl
mov
sub
sub
adc
pop
arpl
mov
jae
xchg
lret
mov
addr16
adc
push
dec
mov
cwtl
pop
inc
pop
sbb
lcall
pushf
mov
and
xchg
mov
jg
cld
test
cltd
fnstcw
push
jbe
push
xchg
mov
in
cwtl
sbb
not
ret
int
cmc
push
sub
lcall
int
loop
xchg
mov
out
adc
mov
sbb
mov
cwtl
cmpsb
xor
cld
push
cmpb
jb
dec
ds
pop
dec
leave
cmp
int3
xor
xchg
jmp
fisubrs
mov
icebp
sub
dec
inc
or
test
xchg
dec
fs
inc
pop
popf
setg
test
inc
rolb
cmp
xor
sub
adc
int3
ss
jl
aas
push
dec
outsb
xor
aad
loop
stos
mov
jnp
cld
xor
rolb
ss
pop
jae
sbb
leave
adc
or
shl
push
rcl
dec
add
lock
ja
popa
loope
fldt
or
push
stos
jnp
sti
dec
mov
shlb
out
dec
loop
lcall
gs
stos
jnp
push
fprem1
mov
and
push
leave
pop
call
subl
clc
outsb
sahf
inc
movsb
sub
and
mov
mov
jne
es
add
bound
cli
inc
jp
mov
addr16
and
dec
mov
sub
jmp
dec
icebp
aaa
ss
rclb
jb
cwtl
ja
jecxz
ret
and
fs
daa
frstor
aaa
inc
mov
push
cwtl
mov
mull
outsb
push
pushf
mov
inc
or
jne
jg
cmc
add
ret
push
push
ret
pop
xchg
fisttpl
xchg
pop
mov
and
mov
xchg
or
xchg
dec
xor
pop
xacquire
push
inc
mov
out
add
arpl
pop
int
test
mov
fisubrs
aaa
or
jbe
xchg
mov
push
adc
hlt
mov
ljmp
movsb
xchg
inc
cmp
repz
insl
sub
adc
imul
dec
cmpsb
dec
and
fwait
test
sub
jae
jne
or
pop
cld
push
roll
mov
test
nop
mov
outsb
mov
int
inc
pushl
aaa
inc
hlt
stc
insl
mov
mul
jecxz
rolb
push
rcll
jbe
pop
fwait
xchg
test
push
jbe
pop
cmp
adcb
jl
add
stos
fnstenv
imul
xlat
pop
xchg
mov
adcb
icebp
dec
jns
jecxz
outsb
and
repz
ds
inc
mov
pop
bound
mov
nop
cmp
mov
sbb
inc
outsb
cli
pop
aam
imull
dec
push
jbe
pop
in
loope
sti
adc
fcoms
sbb
inc
pop
in
adc
fsubr
and
shlb
sbb
push
push
and
mov
dec
cmp
outsb
popf
lds
xchg
add
fbld
leave
pop
push
aas
sbb
les
push
sbb
in
push
mov
ret
insl
inc
rclb
and
ret
ljmp
mov
andb
shrb
cld
faddl
push
loope
sub
cltd
mov
iret
jb
sub
jo
cs
out
jbe
les
shl
fildll
inc
sub
std
insl
cmc
insl
mov
mov
loop
sarl
cmp
pop
les
xor
test
mov
push
fisttps
pop
sbb
cmc
in
xchg
cmpsb
push
es
aad
cmp
and
jbe
call
outsl
add
popf
test
cld
and
call
nop
loope
xchg
idivl
adc
mov
or
outsb
shll
inc
lods
imul
mov
push
pop
loop
daa
repz
fs
movsl
ficoml
stos
mov
push
push
aam
iret
das
arpl
xor
loop
gs
dec
test
adcl
les
xchg
rcrl
xchg
xlat
pop
push
cli
mov
sub
int3
rorl
and
mov
sub
mov
or
cltd
outsb
fnstsw
sub
fsts
insb
test
scas
int
enter
inc
ss
inc
shlb
add
shll
popa
in
aad
add
cmpsl
mov
mov
popa
jno
mov
jg
dec
lret
inc
out
enter
xchg
out
adc
outsb
imul
dec
or
and
jae
leave
lea
or
inc
mov
push
iret
call
mov
loop
pop
inc
mov
les
and
ljmp
pop
jno
fisubrl
clc
clc
inc
loop
movsl
dec
xchg
cmpsl
mov
inc
rolb
ja
loopne
movsb
mov
xchg
into
mov
shrl
imul
cmp
mov
push
inc
add
pop
scas
adc
gs
cwtl
jbe
lods
adc
test
push
mov
addr16
shll
pop
hlt
adc
push
jle
inc
sub
jne
mov
loopne
add
sti
xchg
aaa
mov
push
repnz
stos
pop
mov
je
jbe
add
dec
std
pop
nop
insl
mov
xor
xchg
add
clc
jno
lret
jbe
shll
jmp
inc
aad
push
cmp
pop
jp
mov
loop
pusha
mov
addr16
dec
or
sbb
pop
cmp
mov
scas
pop
or
ret
hlt
out
inc
test
ljmp
stc
aam
test
adc
mov
xchg
stos
and
mov
push
aaa
in
addr16
rolb
outsl
xchg
sub
cld
xor
sbb
sbb
decl
and
mov
cmp
in
test
repnz
push
cmp
popa
or
fwait
sbb
cmc
ficomps
in
aas
mov
or
mov
filds
mov
repz
sti
ret
cmc
dec
and
test
insb
sbb
std
inc
pushf
dec
ret
fisubrs
sbb
pop
mov
inc
sbb
mov
sub
jnp
ljmp
push
lock
fdivr
inc
adc
sbb
add
lock
das
test
movsb
out
idiv
iret
bound
push
bound
and
leave
jp
pop
xchg
pop
xor
out
xor
xchg
movsb
lods
out
jge
sub
cmp
ljmp
and
jo
jb
loopne
cmp
sti
mov
jmp
jp
insb
mov
loope
push
stc
pusha
add
sbb
add
popf
jnp
cmc
inc
xchg
shl
and
aad
dec
out
push
jno
dec
jge
mov
fs
lret
adc
pop
or
inc
xchg
shll
jne
rep
pusha
shlb
xor
add
outsl
ja
and
mov
mov
out
dec
inc
xlat
jbe
hlt
add
out
dec
push
fwait
and
cmp
lods
insb
sub
fwait
ja
xor
aaa
pop
and
lods
jge
jne
inc
push
fstpl
insl
cmp
int3
push
out
pop
cld
lcall
adc
mov
adcb
xor
jmp
mov
loopw
mov
cmp
adc
aas
dec
ret
das
mov
xchg
cs
popa
loop
inc
out
jbe
icebp
mov
cmc
js
hlt
inc
ficoml
sub
pop
cs
outsb
nop
mov
jp
or
jno
aaa
bound
dec
jb
imul
pop
outsb
inc
mov
mov
mov
mov
rorl
int3
or
and
add
pop
dec
popw
fists
outsb
mov
aam
aad
cmc
push
out
or
stc
test
jnp
fstps
outsb
ret
xchg
lcall
push
mov
js
int
test
jg
push
jbe
imul
mov
sbb
ds
cmp
outsb
mov
inc
sti
push
icebp
pusha
pop
stos
jne
ja
shlb
cmc
rorl
sbb
dec
mov
push
out
sbbb
adc
adc
cmp
addr16
shrl
sbb
cltd
mov
mov
jp
or
and
push
fnsave
nop
in
outsl
adc
jmp
popf
pop
insb
mov
xor
in
mov
cmpsb
adc
mov
call
mov
push
cli
xchg
loop
pop
push
sub
insb
jg
adc
cld
xor
and
mov
sub
add
mov
nop
lahf
stos
das
dec
je
mov
movsl
mov
je
or
aas
xchg
stos
rcr
xlat
negl
icebp
ret
sub
cltd
add
push
pop
leave
push
cmc
jbe
inc
lahf
pop
push
sub
aad
or
and
dec
shrb
arpl
out
inc
jmp
sub
xchg
loop
xchg
push
mov
add
pop
mov
out
enter
ljmp
pushf
add
dec
loopne
test
add
dec
mov
mov
push
dec
adc
bnd
mov
lods
in
ss
sbb
xor
mov
lock
and
jbe
pop
in
dec
mov
mov
test
ret
sti
orb
or
and
dec
sub
in
in
loope
in
cld
aas
sarl
cmp
or
jp
inc
cwtl
scas
mov
push
jnp
push
inc
and
sub
into
jmp
mov
ficompl
ja
xchg
cltd
rcrb
inc
ret
pushl
sti
aad
jmp
roll
inc
jle
mov
jns
add
lcallw
jnp
aad
insb
push
outsb
subb
iret
or
pop
mov
cmpb
mov
fsubrs
iret
xchg
arpl
movsb
pop
daa
fisubl
adc
stos
sbb
cmpsl
mov
push
jno
mov
mov
int
dec
sti
inc
stc
out
rcrb
mov
test
leave
fdivs
ds
dec
add
stos
ja
outsb
or
inc
divl
lock
cmpsl
insl
sbb
addr16
jno
mov
adcb
out
stc
jmp
mov
or
push
jbe
cmp
js
mov
fsubrp
mov
fdivl
jns
outsb
mov
jbe
mov
or
test
sub
std
mov
jbe
jmp
outsb
xchg
dec
rol
fs
insb
lods
cld
mov
push
fdivp
cmp
aas
ficoms
mov
and
pushf
leave
add
shlb
setnp
nop
xchg
dec
neg
sbb
sbb
or
cltd
movsl
loope
add
insl
sbb
sub
outsb
mov
pop
push
cli
pop
imul
and
dec
jno
sti
lods
or
ja,pt
xor
sbb
inc
insl
add
xchg
out
add
sti
pop
adc
lds
outsl
inc
push
pop
mov
pop
sub
in
lea
shrb
js
inc
divl
mov
call
imul
and
inc
bound
sbb
lret
in
xor
psraw
sti
pop
aam
cwtl
outsb
imul
clc
pop
adc
add
aad
dec
mov
lods
cmc
out
jl
lods
xchg
or
inc
xchg
xor
push
fstpl
xchg
inc
push
test
cmp
sub
pop
xchg
mov
aad
lods
pop
das
pop
stos
jae
loope
shlb
sbb
loop
imulb
jge
adc
icebp
and
outsb
mov
stos
ret
lods
hlt
sub
push
mov
sbb
jb
sub
mov
xlat
addr16
ss
cmpb
outsl
lret
and
mov
mov
jb
outsb
pop
mov
jae
insb
je
jnp
mov
fst
pop
imull
outsb
out
push
int
fcmovb
jne
push
dec
pusha
pop
vpand
pusha
insl
mov
pop
cmpsb
lea
pop
jb
push
movsb
bound
mov
ret
loopne
xchg
pop
pop
sub
jbe
dec
pushf
es
pop
cld
xchg
adc
mov
dec
push
mov
cs
mov
mov
ljmp
sub
iret
push
push
sarb
out
sbb
push
stos
jle
out
sbb
push
inc
mov
fisubrs
pop
dec
push
sbb
sbb
ret
int
stos
pushl
mov
mov
stos
mov
and
mov
sahf
cmp
pinsrw
jbe
lods
test
push
out
xchg
insb
test
jg
outsb
les
lahf
iret
outsl
test
push
daa
xchg
sarb
push
lea
mov
fsts
cmc
nop
pop
inc
negl
jnp
arpl
mov
mov
dec
jg
fnsave
test
pop
ret
es
cli
clc
dec
in
dec
insl
xlat
test
addr16
js
ret
mulb
and
outsb
add
cmp
jb
cmp
dec
sbb
popl
pop
repz
bound
sahf
and
fmul
mov
jp
out
stos
adc
jbe
jae
stc
gs
inc
enter
outsb
aaa
divl
shlb
cmpsb
sub
add
mov
lds
mov
push
sub
popf
sub
jbe
jmp
xchg
repz
daa
ret
movsb
jns
sbb
add
xchg
fisttpll
mov
cs
xor
pop
ss
outsb
inc
xlat
addl
fistpll
dec
dec
loop
lock
lahf
cmc
aam
mov
lods
cmp
sbb
in
outsb
add
and
pop
loopne
scas
jb
inc
call
inc
rolb
pop
outsb
call
fs
adc
mov
test
dec
adc
fisubl
leave
mov
sub
fcmovne
pop
inc
sbb
push
mov
lcall
mov
pop
sarl
push
fldcw
mov
jg
jmp
pop
cmc
lcall
lret
in
mov
inc
dec
mov
shr
sub
mov
lea
sahf
fildll
fnsave
dec
xchg
xor
bound
aaa
hlt
aas
and
push
mov
jns
scas
pop
sbb
nop
cmp
jle
mov
sub
pop
shl
sbbb
sbb
test
cmp
and
and
and
mov
sti
mov
add
xchg
sbb
jb
cmp
ljmp
shlb
aam
mov
aaa
add
aad
mov
sub
jbe
inc
cmp
dec
cld
jecxz
mov
leave
das
in
cld
outsl
jl
xchg
inc
push
add
mov
add
push
cld
cmp
jns
sub
xchg
cmc
aad
in
sbb
xor
add
mov
repz
aaa
or
jge
repnz
cmpsl
mov
popa
fnstenv
jno
and
jno
mov
sub
pop
jmp
outsb
mov
mov
mov
shlb
sub
es
clc
stos
leave
arpl
jbe
or
cmp
mov
push
sbb
stos
xchg
hlt
xchg
loop
inc
lods
sbb
les
jns
loope
mulb
push
outsb
test
sbb
movsl
lods
inc
das
out
mov
push
mov
dec
out
add
shl
in
fwait
stos
div
jbe
xor
push
rol
jne
pop
ljmp
push
jle
mov
xor
push
arpl
imul
rcrb
jnp
and
mov
push
out
ficomps
lds
push
rcrb
add
sbb
mul
jbe
in
push
mov
sti
nop
or
outsl
in
test
xchg
pop
xchg
out
and
mov
inc
inc
mov
addl
or
cmp
or
dec
push
xor
add
and
loopne
jnp
mov
shll
adc
jne
addr16
cld
mov
cld
mov
inc
push
loopne
outsb
in
xchg
dec
test
and
mov
or
outsl
mov
iret
lahf
rcrb
stos
divl
inc
pop
outsb
mov
rep
popa
cmp
or
xchg
jne
push
and
fstpl
icebp
jle
inc
sbb
inc
inc
sarb
jae
lcall
pop
adc
push
jge
loope
xchg
mov
xor
xchg
cmp
sbb
in
fwait
cmc
jbe
into
inc
rolb
xor
inc
push
stos
aas
mov
jbe
test
data16
int
leave
ja
cmp
cld
and
push
sub
insl
push
jnp
or
push
arpl
xchg
test
pop
xor
mov
cmc
nop
pop
mov
es
jo
call
cltd
data16
rorl
pop
inc
xchg
ljmp
fcomps
nop
xchg
inc
test
sbb
jp
lods
dec
test
cmp
call
test
jl
cmc
add
sbb
adc
sbb
cmpsb
mov
inc
add
in
push
and
popf
mov
in
jns
pushf
jmp
xor
sti
sub
cmp
add
cwtl
int
in
lods
ret
dec
mov
and
cmp
std
inc
pushf
in
push
inc
jae
outsb
jl
bnd
lods
xlat
jmp
je
movsl
pusha
or
xor
lods
push
in
add
mov
mov
sahf
fisubrs
inc
ficompl
push
outsb
insl
inc
es
in
repnz
pop
xchg
jbe
mov
shl
aas
jns
cmp
cwtl
jecxz
push
adc
dec
rolb
cmp
in
shrl
mov
shrb
jne
aaa
mov
push
xor
in
cmc
mov
fisubl
jmp
pop
adc
xchg
aad
lods
fsubrl
sub
sub
leave
sub
pop
arpl
pop
add
bound
fstpt
rorl
cld
aaa
imul
sarb
fmull
sbb
arpl
jne
dec
or
clc
jns
xor
cmc
ss
lcall
pop
mov
xor
in
js
and
shll
inc
xor
rcrb
inc
rol
iret
jno
sbb
push
pop
repnz
adc
dec
xor
enter
jbe
das
jo
nop
inc
std
pop
push
shrb
fmull
pop
adc
ss
negb
jp
loope
jno
inc
sti
fiaddl
test
ret
push
xorl
sbb
test
xor
pushf
inc
jne
mov
xchg
hlt
jns
pusha
inc
outsb
xchg
sbb
xor
jmp
sub
jno
xchg
add
std
inc
cmp
push
aaa
repz
inc
jbe
mov
mov
pop
cmpsl
aaa
add
dec
pop
push
popa
lock
lahf
add
dec
push
repnz
cld
push
add
push
push
jecxz
in
mov
xor
outsb
push
push
or
lret
addl
aaa
inc
decl
inc
in
jnp
adc
addr16
jecxz
inc
mov
dec
aas
cmc
ffree
rorb
jnp
das
cmova
push
xchg
mov
fdivrs
inc
movb
clc
insl
cmp
ljmp
jae
jmp
or
cmp
test
sbb
add
shrb
sbb
adc
adcb
jp
jae
test
mov
mov
jge
inc
cmc
jbe
stc
imul
hlt
jo
mov
and
lret
stc
fimuls
jbe
add
stos
arpl
push
inc
nop
cmpsl
inc
or
sub
push
jbe
mov
push
xchg
cmp
loop
dec
adc
jb
in
loopne
sub
inc
xchg
cmpsl
out
sbb
call
outsb
or
inc
mov
cmp
mov
jecxz
add
jmp
outsw
dec
dec
adc
and
imull
jecxz
pop
inc
xchg
pushf
lea
adc
mov
pop
out
inc
fistpll
insl
decl
pushf
out
cmp
shl
mov
push
stc
dec
lds
das
mov
add
mov
mov
sub
scas
mov
popa
negl
lcall
lods
fcomip
in
jl
sbb
push
mov
mov
mov
dec
loope
and
adc
je
daa
pminub
in
push
sub
pop
push
out
jp
pop
add
pushf
inc
pop
push
rolb
outsb
and
sbb
jl
mov
push
xchg
js
mov
pusha
jnp
repz
xchg
mov
insl
jne
and
gs
cwtl
cmp
add
mov
pop
sbb
mov
es
mov
push
rolb
lods
pop
xor
test
int
push
pop
mov
dec
lcall
hlt
xor
aaa
imul
sbb
shl
sub
mov
pop
sub
jb
sub
cmpb
subb
xor
and
out
rorb
ja
mov
outsb
divl
add
rorl
rcl
sbb
int3
xchg
push
loope
fcmove
addr16
adc
insb
and
loope
jno
cmp
outsl
mov
mov
mov
dec
loope
fiaddl
imul
jbe
adc
mov
dec
outsb
sub
fdivrl
pop
cmpb
data16
mov
jle,pn
mov
out
lock
scas
in
sub
and
js
scas
add
jmp
mov
cmp
or
xor
and
pop
mov
add
aas
sub
pop
ss
mov
ds
outsl
shlb
scas
cmp
pop
xchg
mov
push
ss
sbb
sti
cmp
cmc
xchg
dec
in
push
xor
test
xor
mov
jg
bound
shrb
mov
push
lcall
fmull
push
fidivrs
and
arpl
dec
add
out
mov
adc
xor
mov
pop
popa
xchg
sbb
dec
xor
or
pusha
aam
jg
ja
inc
mov
mov
mov
in
outsl
hlt
mov
mov
fistpll
cmpsl
inc
inc
jo
push
or
or
in
mov
xor
mov
add
sti
mov
cmpsb
insl
rcll
mov
jbe
xor
ficomps
and
or
in
into
sahf
sbb
adc
adc
es
pop
xchg
std
push
stc
in
arpl
or
loope
push
lret
in
loope
or
fmulp
out
por
ds
push
mov
lcall
call
notl
imulb
xchg
fdivs
push
aam
pop
fidivl
cwtl
xchg
and
loop
out
outsl
sahf
mov
add
nop
cmp
mov
cmp
divl
or
shrb
or
bts
add
out
and
push
mov
fidivl
jno
jbe
movsb
add
sar
jl
lds
cmp
dec
js
hlt
pop
insb
dec
fisttps
pusha
nop
cmpsb
mov
and
fcmovne
mov
mov
pushf
add
or
adc
cmc
pop
pop
ret
adc
cmp
xor
xchg
movq
adc
sbb
sahf
arpl
aam
inc
fidivl
mov
cmp
arpl
and
push
fsubl
push
jns
push
dec
jl
shl
imul
aas
stc
rol
mov
dec
push
not
mov
fsubs
pop
outsb
aad
sub
adc
das
cmp
push
jno
out
cld
jnp
mov
and
add
jmp
sbb
push
in
sbb
in
xchg
xlat
push
ja
jo
push
and
xchg
cmp
stos
cmp
inc
jbe
xchg
cmpl
pop
aaa
inc
jbe
pushf
sub
sub
lcall
pop
loopne
jnp
repz
xchg
sbb
clc
scas
out
pop
and
mov
sbb
mov
inc
push
jmp
in
pop
mov
mov
lcall
cmp
idiv
jl
shlb
xor
push
and
and
std
dec
rcll
popf
dec
cmpsl
cmc
mov
xor
cwtl
xchg
xchg
subb
xchg
in
adc
push
movsl
xchg
stc
adc
aaa
arpl
test
sub
jl
dec
clc
sbb
popa
jbe
cmp
shll
fucomi
pop
das
adcb
and
pop
sbb
dec
mov
jg
lods
jne
pop
adc
dec
scas
mov
sub
push
or
clc
push
xchg
cmp
lods
dec
xchg
movsl
out
add
mov
cmp
and
inc
bswap
test
loope
xchg
les
fldt
pop
aaa
std
dec
jl
sbb
dec
in
mov
xchg
arpl
filds
and
lret
pop
sbb
shl
pusha
cmc
mov
jb
dec
loopne
xchg
cmpsb
idiv
add
hlt
mov
fsts
jnp
mov
loopne
lcall
in
movsl
insl
and
daa
adc
arpl
adc
adc
cmp
jecxz
into
lds
jge
out
fistps
mov
pop
je
mov
xchg
cmp
inc
sar
jle
jg
add
dec
pusha
push
xor
jg
fimull
ljmp
or
sti
push
clc
jecxz
ljmp
add
sbb
in
sbb
std
fisubl
cmovle
mov
mov
into
mov
fnstenv
add
enter
sbb
xor
outsb
sbb
enter
nop
mov
lahf
rcrl
jp
outsb
or
xlat
cmc
push
sarb
mov
ficomps
push
xlat
in
test
mov
jg
and
sbb
shl
mov
cmc
notb
adc
outsb
jg
or
adc
fldt
repnz
mov
stos
int
adc
push
jp
imul
xchg
cmp
cmpsb
sahf
cmp
push
xlat
enter
sbb
call
out
movsl
or
inc
outsb
pop
mov
and
fidivs
push
das
sbb
js
in
aas
sbb
in
jns
dec
outsb
mov
faddp
mov
sbb
xchg
rcr
jb
adc
inc
popa
insb
sbb
movsb
in
xor
lret
inc
sub
cmpsl
je,pt
jo
decl
and
push
inc
cmc
les
shr
pushf
fstpl
js
push
shrb
sub
imul
dec
jbe
and
and
push
outsb
hlt
xor
rcr
cmc
jle
loop
push
sub
lds
je
lahf
push
mov
andl
xchg
add
pop
sbb
shll
in
sbb
enter
aad
test
push
cmp
push
ljmp
in
mov
adc
xchg
loope
inc
aad
xor
shlb
jge
push
lret
je
shlb
scas
jecxz
adc
into
mov
jnp
dec
loope
pop
jnp
dec
cmpsb
out
dec
xor
daa
int
ljmp
adc
add
insb
outsb
jb
jmp
rclb
sub
add
xor
push
and
cmp
mov
test
adc
call
testl
dec
push
iret
sbb
lcall
ljmp
lret
int
outsb
aam
xchg
xchg
stos
lret
shlb
outsb
mov
adc
mov
add
and
mov
jle
data16
shl
xor
loop
out
mov
ja
out
pop
insl
test
insb
ror
jae
sbb
out
loop
shrl
lds
sub
sti
sbb
push
and
push
push
push
repz
in
repz
xchg
outsl
mov
outsb
test
push
sbb
out
andl
cs
pushf
inc
scas
stos
clc
xchg
mov
push
adc
inc
outsb
nop
lret
cmp
add
pop
inc
sti
notb
ret
mov
in
in
mov
push
push
xchg
and
sub
jbe
and
mov
and
addr16
push
cli
dec
in
ffree
out
jbe
jmp
pop
add
test
cltd
repnz
movsl
clc
rclb
jns
and
or
sub
outsb
sbb
push
dec
cmp
aad
push
jmp
js
cmp
push
mov
pop
add
xlat
lods
xor
aad
fisubl
sub
arpl
lahf
cmp
cmp
pusha
push
inc
outsl
out
out
pop
sub
push
cld
out
lock
adc
add
in
lcall
sbb
idiv
pop
std
bound
repnz
mov
in
shlb
ljmp
loop
bound
rolb
or
dec
xchg
adc
sbb
lock
push
outsl
fsubs
imul
push
pop
mov
rolb
inc
addr16
outsb
add
hlt
stos
fists
push
jbe
xchg
jns
push
mov
es
cmpsl
cmp
pop
lcall
shrd
dec
pop
std
enter
addr16
jbe
and
dec
pop
and
daa
cwtl
imul
bswap
insb
pop
cmc
out
sbb
and
adc
in
xor
out
hlt
fst
fildl
mov
repz
aas
jbe
push
outsl
pmaxub
dec
insl
divl
inc
add
cmp
push
push
les
adc
jle
dec
aad
inc
add
pop
sbb
fmull
and
inc
hlt
jbe
push
jns
fiaddl
addr16
lea
nopl
dec
outsb
dec
cmp
bound
xchg
jne
dec
sbb
stos
jae
or
push
rcrb
imul
hlt
inc
inc
jecxz
push
mov
lea
mov
shl
mov
add
or
outsb
push
mov
and
mov
out
dec
pop
arpl
push
test
ret
mov
loopne
out
rolb
inc
xlat
pop
insl
shr
xor
lret
xor
push
add
ja
aad
in
arpl
inc
push
xchg
aad
lods
push
fsubp
das
inc
in
and
push
mov
pop
shrb
test
mov
or
push
add
mov
jno
inc
xchg
lahf
stos
cmp
push
inc
sbb
filds
mov
incb
cld
fimull
or
mov
mov
rolb
pushf
insb
add
sbb
shll
std
fsubr
mov
lds
rcll
inc
stos
in
loopne
cmp
dec
rol
cmp
movsl
addb
and
mov
or
popf
pop
add
das
mov
dec
sti
xchg
mull
mov
ret
rolb
jge
lcall
addr16
cmc
mov
add
cmpsl
out
lret
insl
jo
into
outsb
std
lea
mov
push
inc
and
pop
xchg
jns
cmp
bound
es
and
aam
jae
jb
data16
cmc
incl
add
dec
lds
pop
rol
rcrl
jbe
xchg
dec
lret
sbb
popf
mov
shrb
sti
inc
mov
int
xor
rcll
ja
je
jnp
fldt
sbb
popf
in
daa
je
or
sub
sbb
loopne
fwait
inc
clc
cs
xchg
sub
lret
and
lods
sub
push
in
xchg
xchg
dec
mov
addr16
je
test
or
xchg
jge
cmpsl
rorb
sbb
lods
sbb
nop
mov
ss
nop
call
je
xchg
sbb
adc
push
stos
push
stos
push
cmc
sbb
jb
adc
push
fisubrs
mov
mov
pop
pop
in
repz
and
push
cld
dec
add
or
add
inc
dec
rcrb
inc
and
repz
add
sarb
orb
ds
mov
fsubr
cmc
pop
cmpsb
rclb
jae
or
xchg
lods
mov
push
adc
or
xor
cmp
mov
sti
jae
or
or
insl
or
test
lcall
repnz
out
jge
sbb
push
mov
jnp
cmpsl
inc
sbb
or
lock
jns
lods
jecxz
xchg
cs
jg
jo
in
push
jno
mov
or
mov
push
addr16
cmpsb
mov
fsubr
into
vaddps
dec
and
cmp
xchg
or
cmp
lret
mov
clc
xor
inc
jbe
out
out
aaa
pop
cmpsb
cs
jge
ret
jg
pop
xor
aas
shrl
inc
bnd
popf
aad
rcrb
int
cs
push
xchg
push
je
sar
popa
idivb
mov
mov
stos
pop
xchg
mov
xchg
jno
push
bound
in
and
mov
mov
divb
mov
in
add
and
push
inc
inc
insb
stos
insl
add
out
leave
neg
mov
xchg
aad
lds
mov
test
test
ret
mov
cmp
ss
xchg
fwait
in
cmpsb
rorb
push
daa
inc
cmp
cltd
in
out
sub
xchg
aaa
rcl
xor
sti
dec
and
cmp
addr16
and
or
inc
mov
enter
stc
or
and
jmp
xchg
loope
iret
adc
ja
loop
push
mov
fdivrp
ljmp
sub
cs
pop
mov
xor
mov
sarl
dec
popl
movsl
rcr
add
mov
adc
stos
dec
push
fwait
and
shll
jne
loope
xorb
push
sbb
sbb
sarl
andl
xor
mov
fnsave
inc
cmpsb
imul
sub
add
aaa
mov
out
fwait
push
shr
rcr
cmpsl
cmp
dec
in
cmc
loopne
xchg
test
and
xchg
sbb
popa
mov
xchg
stos
fiadds
rorb
ret
mov
loopne
jge
popa
pop
lret
mov
mov
aad
xor
inc
lret
pop
mov
xor
js
test
idivb
divb
test
cmpsl
jmp
mov
test
lahf
arpl
cmp
and
fdivp
cmc
jg
push
gs
cmp
add
pop
pushf
push
int
fbstp
mov
adc
sub
adc
popa
xor
jno
fiadds
cmpsl
dec
adc
xor
cmpsl
sub
repz
mov
lahf
push
outsb
and
test
push
mov
mov
jbe
jo
ss
sbb
lods
dec
fisubs
jbe
insl
leave
cmp
mov
stos
xchg
popa
out
sti
adc
sub
inc
jecxz
lret
sbb
loope
mov
hlt
xchg
cmc
outsb
jae
xchg
ljmp
cmc
jbe
pop
fbstp
add
fdivl
gs
arpl
cmc
idivb
adc
enter
insl
cld
push
pop
sahf
mov
jge
mov
imul
xchg
sbb
dec
fisubs
lret
in
sub
movsl
mov
fisubl
stc
fs
push
sub
pusha
lods
push
hlt
pop
and
shlb
outsb
sbb
filds
push
fiaddl
mov
mov
ret
into
je
sbb
outsl
loope
hlt
ficompl
pop
xchg
pop
movb
loope
les
jne
stos
mov
inc
jmp
and
fwait
repz
dec
sbb
inc
orl
sahf
pop
xor
scas
arpl
pop
push
mov
add
pop
lock
inc
ret
mov
cmove
in
inc
adc
outsb
cmp
insb
xchg
push
xor
mov
jne
dec
shrb
xchg
or
or
aad
addb
test
lock
inc
ss
outsl
mov
sbb
jnp
push
in
test
cwtl
imul
repz
ljmp
ss
fidivs
jmp
push
dec
jmp
sbb
inc
scas
sub
sbbb
lcallw
dec
out
lcall
mov
fs
shlb
and
xchg
mov
movsb
jbe
pop
cltd
in
mov
jbe
mov
lret
sbb
jmp
cltd
xchg
hlt
add
cmp
in
xchg
mov
sub
jle
or
and
pushf
xor
stos
dec
mov
daa
xor
int3
pop
into
adc
xchg
divl
xchg
jmp
pop
movsl
mov
cltd
sub
xor
jg
mov
xchg
shrb
aam
pop
push
jbe
pop
outsb
into
jbe
rolb
add
push
xchg
int
negl
cmc
test
sti
jg
unpckhps
mov
xor
fidivrl
push
xchg
iret
bound
push
xorl
mov
rorb
dec
xchg
cmpsl
loop
repz
in
jns
and
dec
ljmp
mov
mov
mov
push
test
xchg
ror
repnz
xor
adc
or
hlt
push
lds
pop
sbb
sub
lock
fistpl
aam
sub
lods
rol
bound
mov
ljmp
ja
in
push
and
call
adcb
mov
adc
nop
sahf
in
ret
idivl
iret
addb
and
test
aad
aaa
sub
add
dec
jnp
int3
mov
mov
fiaddl
mov
dec
mov
inc
out
xor
rclb
inc
or
hlt
jbe
or
dec
stc
xchg
mov
or
cmpsb
xchg
jp
adc
ret
rol
or
in
add
outsb
jge
push
popf
dec
push
mov
mov
inc
imul
pxor
fists
rcl
gs
enter
out
rclb
cmpsl
in
mov
cltd
fistl
dec
cmpb
hlt
mov
lea
mov
add
in
and
mov
mov
lods
xor
repnz
std
jae
adc
and
xchg
sub
lret
push
pop
pop
in
sub
inc
gs
out
mov
or
xlat
jecxz
push
or
clc
imull
jbe
xchg
test
jae
xchg
fsubrs
call
xchg
pop
cwtl
jmp
aam
mov
push
inc
jbe
or
pop
xor
insl
adc
and
cmc
push
mov
mov
mov
jnp
roll
mov
cmc
loop
out
loope
mov
sbb
ljmp
loop
pop
stc
pop
mov
or
cmp
sti
loopne
sbb
test
out
xorl
imull
test
mov
lods
daa
cmp
cltd
outsb
xor
fwait
clc
jmp
sub
sti
aaa
or
lret
ret
push
and
and
jl,pn
rorb
imul
imul
inc
mov
incb
ljmp
aaa
cs
jbe
inc
push
jp
cmp
push
and
pop
jmp
mov
clc
adc
lahf
iret
int
cmp
in
test
push
repz
push
pusha
push
jge
insb
mov
push
mov
xchg
cmp
test
test
mov
shrb
mov
xor
push
shlb
push
sub
testl
xor
out
xor
cmc
repnz
sti
dec
cmc
scas
es
mov
mov
arpl
stc
xchg
addr16
mov
mov
in
pop
xor
mov
inc
dec
movsl
inc
rcll
pop
sbb
sub
adc
mov
shlb
sbb
mulb
jae
insb
dec
and
outsb
push
sub
scas
fwait
cmc
arpl
movsb
cmp
adc
inc
addr16
mov
pop
jbe
jg
imul
adc
adc
nop
rolb
xchg
push
test
test
loop
xchg
das
cmc
push
repz
stc
pop
mov
int3
dec
xchg
int
inc
pop
out
adc
gs
or
xor
fidivl
fistpl
or
sti
hlt
and
lret
jmp
pop
pop
rcrl
adc
outsl
lahf
lret
sbbb
loope
gs
negb
push
hlt
mov
cmp
arpl
cli
cmpsl
ljmp
nop
push
andl
inc
jge
mov
call
sub
jmp
jae
outsl
inc
ja
jmp
xor
in
mov
pop
rorb
mov
cli
ja
pop
pushf
xor
jbe
lods
int3
or
xchg
cmpsb
mov
lcall
push
add
int3
scas
dec
sbb
xchg
xchg
loope
notl
xchg
les
ror
push
fs
out
adc
test
mov
sub
sti
xchg
push
popf
push
cltd
out
push
fucomp
leave
inc
mov
das
sbbl
sbb
arpl
movsl
jo
or
mov
iret
insl
sub
mov
cli
pop
das
jge
insb
push
mov
roll
add
sub
cmp
cmc
push
out
cmpsl
data16
fdivs
sarb
or
push
mov
push
mov
enter
bound
or
fiadds
data16
pop
xchg
push
repnz
or
jae
mov
inc
cmpsl
push
int3
insb
xchg
outsl
xchg
mov
mov
adc
inc
inc
jbe
subb
pop
stos
xor
in
js
arpl
mov
xchg
push
jo
divb
ljmp
jbe
sbb
repz
test
or
mov
lods
in
sbb
mov
imul
lret
xchg
xchg
xor
arpl
and
cmp
xchg
and
adc
stos
shll
xlat
lret
pop
push
jo
and
and
inc
js
jo
jg
hlt
testl
inc
cmp
ljmp
ljmp
sbb
sub
incl
ror
and
cmp
lock
or
dec
filds
inc
outsb
fimuls
int
sti
jmp
dec
dec
cmc
add
ss
inc
std
xchg
push
divl
push
mov
out
and
lret
jae
jl
inc
ljmp
ljmp
stos
sub
push
pop
in
mov
or
dec
sbb
inc
fisttpll
adc
xor
aad
rorb
fdivrs
jb
jbe
loopne
push
scas
hlt
js
mov
shrb
sub
or
xor
inc
movsl
cmp
pop
popa
and
xchg
and
ret
shlb
popa
push
out
add
call
stos
xlat
mov
fisubs
and
push
or
xor
out
inc
loop
mov
and
pop
out
jo
xchg
out
sarb
pop
push
jae
sub
push
adc
lahf
dec
rolb
in
mov
popf
fsubrs
dec
dec
jbe
pop
xchg
add
xor
or
hlt
in
push
jge
popa
in
stc
cwtl
jne
or
aam
enter
or
push
divl
stos
or
add
adcb
out
shrl
stos
inc
cwtl
mov
pop
mov
flds
dec
jb
loop
sarb
add
dec
mov
insl
mov
int3
fimull
push
aam
jg
and
fbstp
add
fcom
fbstp
inc
jge
push
outsb
pop
cld
subb
jns
mov
jbe
xchg
in
or
xlat
dec
je
loopne
cwtl
pop
mov
loop
cmp
cmp
pop
add
imul
or
or
cwtl
aam
dec
stos
push
push
out
mov
mov
mov
pusha
xor
out
push
jae
sahf
fsubrl
stc
aaa
out
loope
fnstcw
daa
add
sti
mov
cmc
ja
xchg
jge
adc
jmp
inc
adc
jb
inc
fldt
xor
arpl
mov
push
subb
adc
inc
dec
and
mov
jle
push
cmp
test
mov
stos
stos
int3
dec
ret
shlb
int3
inc
loop
test
push
out
test
movsl
xchg
insl
test
dec
push
xor
and
dec
adc
mov
test
xlat
mov
es
rcr
cmpsb
insl
rorl
imul
scas
sub
test
cltd
jnp
mov
movsb
movsb
mov
add
jecxz
fwait
push
icebp
add
in
lock
or
dec
stc
cmpsb
xchg
xchg
das
jmp
fimull
pop
arpl
stos
pop
insl
in
ret
scas
cmpsb
fcoml
jl
jne
push
inc
outsl
ffreep
mov
jbe
inc
push
cld
test
lret
outsb
sub
mov
repnz
xchg
or
mov
in
push
or
xchg
je
jae
pushf
leave
ret
push
add
shl
push
or
dec
das
arpl
je
into
xchg
sti
das
sub
mov
insl
mov
jb
inc
xchg
inc
jne
movsl
insl
and
mov
mov
test
jae
aam
iret
jge
cmpsb
xchg
pop
das
mov
pop
loope
insb
or
adc
xchg
xchg
cs
repnz
jmp
xor
add
divb
xor
arpl
pop
jmp
mov
xor
mov
xor
bound
jl
adc
sti
mov
cwtl
jecxz
adc
xor
lret
sub
std
add
pop
and
std
cmp
std
pop
in
dec
insb
mov
lahf
cmc
fadds
sbb
mov
dec
mov
inc
adc
out
lret
sti
xchg
incb
gs
xchg
or
jle
shrb
sub
ret
imul
inc
mov
xchg
sbb
xchg
rolb
scas
popf
mov
insl
ss
inc
movaps
ret
cld
les
mov
ror
jnp
cmpsl
add
sbb
ja
rcll
dec
js
push
stos
je
test
out
je
sbb
ror
add
mov
clc
sahf
loop
and
mov
test
jbe
outsl
aam
mov
pop
adc
mov
test
mulb
xor
es
inc
fbld
push
shlb
dec
movsl
in
maxps
insl
in
xor
pushf
push
mov
ficompl
test
sbb
xchg
sub
pusha
jl
xchg
jne
in
dec
cmpsb
notb
jno
dec
xchg
arpl
test
sahf
sub
add
loope
mov
fsub
test
lahf
xor
les
add
push
sub
jp
notl
jle
rcrb
movsb
inc
push
mov
xlat
in
inc
dec
push
stc
aad
dec
rolb
stos
js
cmc
aad
push
outsl
jge
inc
mov
cmp
in
jae
stos
sub
cmpsb
sbb
dec
rorb
pop
leave
out
pop
fstps
jg
icebp
cmp
push
je
adc
ret
int
cwtl
ret
lcall
outsb
les
add
jecxz
ret
pop
sbb
outsb
or
sub
inc
add
fiaddl
push
leave
xor
aas
test
repnz
add
push
jle
sub
inc
cltd
pushf
inc
test
pop
mov
push
add
jle
jbe
cwtl
in
mov
rcr
outsb
jae
push
stos
enter
add
adc
aam
mov
jnp
jbe
xor
dec
add
inc
mulb
ja
stc
or
popf
mov
sbb
and
lret
repnz
es
shl
ss
xlat
into
addr16
in
cmc
std
jl
jnp
jns
scas
je
push
movsl
arpl
ds
inc
add
dec
cmp
add
mov
mov
dec
sbbb
push
mov
pop
in
dec
pop
jecxz
inc
sub
ljmp
test
jmp
aas
jbe
dec
mov
mov
push
and
mov
push
in
pop
pop
xchg
xor
mov
loop
xor
les
in
fcmovnbe
clc
mov
inc
sti
stc
adc
mov
in
out
or
mov
imul
fs
xlat
mov
das
shlb
adc
mov
sbb
pop
aam
in
stos
shlb
andl
fld
adc
xchg
push
fs
fistpl
je
and
stos
insl
test
cmpsl
int
sbb
loopne
xchg
in
sarb
bound
push
aas
sbbb
or
scas
jbe
inc
add
adc
insl
sbb
addr16
xchg
or
popa
xchg
fdiv
pop
jecxz
xchg
sbb
xrelease
dec
aam
pop
mov
xchg
push
mov
pusha
sahf
pop
sbb
xor
outsb
mov
loop
shll
or
cmp
in
dec
push
push
jae
push
insl
and
push
inc
cli
sbb
fmuls
imul
push
jp
mov
lods
enter
jbe
and
push
aaa
jae
cltd
pop
addb
movsb
cmc
or
inc
lcall
and
sub
xchg
bound
in
scas
lea
sahf
xor
popa
pop
rolb
mov
stc
pusha
imulb
leave
out
jbe
lock
xchg
sub
into
add
mov
lods
cltd
aad
fistps
dec
imul
rclb
jg
xchg
push
bound
cmc
cmp
outsb
sub
adcl
xor
fisubl
pop
insl
mov
mov
mov
leave
shll
pop
inc
rclb
cli
out
pop
ljmp
mov
mov
roll
pop
and
dec
and
and
mov
xor
mov
xchg
push
ljmp
mov
cld
subl
inc
fildll
out
inc
imul
pop
out
cmpsl
fcoml
fidivl
mov
adc
mov
call
or
sub
or
add
je
jae
and
sub
jno
cmc
aaa
insl
mov
daa
stc
setno
out
jbe
fs
mov
in
ret
cmp
mov
sbb
inc
rcrb
cmp
aas
push
sbb
in
repz
adc
xchg
jns
dec
mov
mov
mov
imul
testl
dec
or
jbe
push
pusha
or
nop
add
pop
fwait
mov
jne
cld
mov
out
cmp
arpl
mov
nop
pop
outsb
test
repz
movsl
add
cld
insb
sbb
je
ljmp
std
shll
push
cmc
inc
lods
ja
add
std
pop
or
rcl
or
pop
push
push
xchg
stc
mov
and
mov
cs
test
mov
subl
in
out
loop
cmpl
inc
imul
dec
andl
or
imul
and
pop
js
ds
sub
popf
fwait
dec
stos
xchg
jne
shlb
cmpxchg
push
cmpsb
add
inc
xor
scas
in
adc
add
cmp
add
sbb
inc
insb
jbe
inc
popf
call
stos
imull
jg
test
mov
fs
loope
adc
mov
dec
sbb
repnz
cmpsl
or
inc
pop
inc
lods
ja
dec
call
add
sbbb
and
mov
hlt
ss
inc
add
inc
adc
add
pop
sbb
inc
rcrb
mov
into
or
in
xor
jbe
movsb
jle
es
mov
clc
sbb
or
pop
shrb
jmp
cmc
fld
outsb
pop
xor
pop
out
sarl
pop
faddl
mov
mov
sti
mov
sub
mov
or
daa
mov
loopne
and
jmp
mov
adcl
and
test
outsl
push
fsub
test
outsb
in
fsub
jg
inc
cmp
stos
iret
pop
cmpsl
mov
mov
mov
inc
inc
push
add
in
insl
fistpll
xlat
xor
sub
mov
movsl
je
rcl
sub
test
inc
call
leave
and
mov
pop
mov
dec
jl
mov
cmp
jnp
dec
mov
jecxz
in
nop
cmpsb
xor
add
aaa
test
pop
orl
cmpsb
pop
popa
ljmp
add
cltd
lahf
and
sub
mov
pop
pop
rolb
xchg
and
out
adc
out
out
xor
outsb
rcl
ficompl
mov
cwtl
and
inc
mov
in
repnz
ss
stc
sub
xchg
mov
jecxz
xor
cwtl
insb
cs
negl
cmpsb
ficompl
xor
pushf
imulb
outsl
aaa
pop
imul
dec
mov
jge
sub
loop
in
sbb
enter
in
nop
jae
pop
loopne
xchg
mov
fmulp
pop
mov
jb
push
xor
adc
mov
sub
sub
test
push
shl
push
xlat
mov
or
testl
stos
idivb
scas
mov
pop
inc
sti
jnp
out
xor
je
fwait
inc
mov
inc
lods
jp
xor
or
fs
pop
test
add
je
scas
inc
sbb
mov
rcr
jmp
or
add
mov
sub
add
xor
mov
ljmp
pop
push
rorb
addr16
inc
xlat
pop
adc
loope
fidivl
jmp
mov
repz
sub
out
gs
cmp
imulb
and
fildl
es
mov
sti
frstor
loope
loope
mov
mov
jp
pusha
andl
or
jbe
push
outsl
iret
rcrb
stos
out
mov
mov
mov
xchg
inc
sti
jl
cmpsl
aam
sub
jecxz
or
or
mov
out
test
subl
aam
in
xchg
xor
data16
jbe
add
ror
push
jne
push
dec
pusha
mov
out
ss
pop
lcall
sti
jecxz
jbe
addb
outsb
std
cmp
cmpsl
inc
xchg
addr16
js
push
mov
divb
pop
ret
cmp
sub
into
xchg
nop
mov
mov
sti
mov
rclb
inc
xlat
ret
ret
mov
jmp
rorb
cmp
push
aad
aaa
roll
subb
mov
incl
shll
das
nop
sub
shr
pop
rclb
xchg
push
inc
jecxz
fistl
pop
inc
pop
mov
sti
outsl
dec
sbb
outsb
cmp
pop
inc
xor
loope
es
jo
outsb
test
xlat
orb
sbb
sahf
jecxz
fbld
loop
ljmp
adc
call
sbb
mov
outsb
idivl
mov
cmp
lods
divl
pop
xchg
inc
push
sbb
adcl
mov
sbb
out
fisubrs
pop
insl
aaa
fidivs
mov
hlt
xchg
ss
loopne
xor
sub
sahf
mov
dec
add
cld
mov
xor
cmpsb
aam
pcmpgtw
cmc
or
rolb
mov
push
push
jp
dec
and
ja
ja
jnp
sbb
sub
cmc
lods
outsb
xor
je
mov
nop
iret
sub
int3
ret
stos
loopne
xchg
jnp
cmp
das
xchg
orb
adc
mov
xchg
push
outsb
pop
mov
mov
pop
push
adc
lods
xlat
mov
xor
into
jo
imul
dec
mov
mov
push
mov
popa
out
push
cld
cmpsb
mov
fnsave
mov
xchg
add
pushf
loope
and
or
cmp
lret
scas
stc
xchg
adc
enter
mov
addb
sub
mov
repz
inc
loope
and
jecxz
pop
xlat
sbb
mov
addl
ds
fnstsw
xlat
cli
and
and
inc
xchg
dec
insl
or
or
stos
sti
scas
jp
add
mov
and
call
in
inc
pop
popf
in
mov
mov
lods
iret
fstl
add
ret
dec
test
shl
jl
icebp
jbe
mov
adc
mov
stos
arpl
sub
cmpsb
test
mov
adc
inc
xor
aam
or
rclb
jb
xchg
outsb
lea
shr
shlb
test
dec
push
cmpb
and
push
xor
shrl
mov
roll
bound
or
inc
bound
adc
push
fcom
ss
cs
add
sub
imul
xchg
sub
adc
push
push
shll
shll
mov
sub
sbb
and
mov
inc
xor
sub
mov
loop
and
gs
pop
loopne
add
loop
out
movsl
dec
out
cmp
insb
pop
inc
and
addr16
int3
test
push
or
inc
hlt
rcl
enter
sbb
fidivl
sbb
jns
sub
iret
or
inc
movsb
in
push
sbb
lods
sub
jbe
cltd
pushf
or
and
ret
sub
mov
inc
pop
js
cwtl
push
shlb
cmp
push
hlt
stos
ret
add
lods
xchg
ret
incl
dec
fdivrp
dec
jo
ret
stc
popf
dec
sbb
and
cmpl
inc
ficoms
nop
ljmp
dec
rol
in
inc
scas
mov
inc
sarb
jbe
cmpb
inc
xor
or
sti
pop
jle
lods
std
mov
fs
enter
test
cli
clc
shrb
cwtl
test
and
arpl
iret
jge
mov
stos
addr16
dec
in
jne
mov
int
sub
dec
rolb
pop
pop
aaa
or
mov
fsts
push
mov
popa
add
loope
imul
mov
bound
aaa
pusha
leave
pop
bound
or
jp
out
mov
sub
sub
das
loop
mov
mov
cmpl
xor
pop
test
cmc
add
xor
add
psrld
xchg
aas
scas
dec
add
mov
fnstsw
arpl
sbb
adc
push
stos
sbb
cmp
and
push
jmp
xor
xchg
scas
dec
jge
aam
add
bound
mov
out
inc
outsb
or
inc
push
add
mov
mov
mov
mov
sbb
sbb
mov
stos
call
dec
cmpsl
loop
cmc
subb
inc
aam
push
cmp
rcl
ds
and
cmp
pop
xor
das
testb
es
or
mov
dec
insb
ja
fldenv
adc
addr16
add
ficompl
sbb
nop
mov
add
ja
jbe
cs
ss
mov
inc
pop
xchg
mov
and
dec
or
mov
aad
popa
lret
dec
mul
outsb
inc
push
and
sub
push
and
imul
shll
rol
fwait
jge
adc
jecxz
outsb
scas
and
push
inc
fbld
pop
inc
xor
ret
add
sub
dec
mov
incl
test
insb
xchg
fistps
pop
lods
test
popl
bound
pop
jno
std
ret
xor
jge
mov
or
clc
add
lret
out
and
mov
int
stos
push
cs
loope
mov
loope
ja
and
outsb
inc
xor
fbstp
cmp
aam
ret
inc
pop
push
xchg
aam
fcomps
aad
cltd
xchg
stos
adc
mov
ret
xchg
cli
in
add
push
jb
sbb
jmp
shlb
push
pusha
inc
xor
sbb
popa
or
mov
ljmp
and
fwait
mov
insl
fiaddl
int3
out
insl
xchg
xor
lea
push
sbb
inc
loop
lret
hlt
cmp
outsb
adcb
dec
add
lcall
ficoms
bound
jns
ja
mov
daa
bound
rclb
andb
out
sub
sbb
shr
inc
jbe
xlat
rcr
rclb
jbe
cmp
mov
add
cmpsb
mov
xor
push
outsb
mov
sub
jmp
fsts
ret
mov
sub
ljmp
cmp
jg
insb
inc
mov
inc
or
or
mov
das
pushf
loopne
insb
cmp
sub
pop
jns
pop
or
xlat
lods
mov
xchg
adc
scas
loopne
lods
bound
sbb
xchg
or
dec
test
stc
push
stos
faddp
cmc
xchg
cmp
jp
or
mov
iret
push
add
es
jg
shrl
mov
sbb
cs
jne
pusha
bound
movsb
dec
inc
fcmove
inc
mov
or
sub
jb
int3
repz
loopne
fstps
or
lcall
addr16
mov
and
outsb
pop
mov
pop
xor
repz
je
xor
gs
mov
sarb
push
icebp
dec
mov
pusha
push
lret
stos
in
fsubr
sub
out
out
pop
jmp
push
mov
xlat
mov
xor
rolb
jbe
and
push
cmpsl
mov
jle
sub
pushf
scas
subl
add
pushf
imull
inc
test
loop
les
stos
rorb
inc
arpl
es
je
mov
xorb
mov
xor
aas
outsb
hlt
cltd
add
int
shrb
inc
xlat
push
loopne
pusha
push
ds
sbb
mov
in
into
loope
jp
sarb
and
imul
daa
iret
and
sbb
pop
pop
xchg
repz
rorb
adc
pop
pushf
cld
push
pop
pop
insb
xchg
xor
scas
insl
dec
test
xchg
loopne
inc
cmp
sbb
cmp
dec
rcrl
xchg
cmpsb
inc
stos
or
out
pushf
imul
in
mov
aaa
xchg
xchg
jbe
loope
mov
mov
sub
inc
jmp
movsw
sub
aam
jb
cmpsl
xor
pusha
jl
jp
scas
pop
js
fstpt
rcl
xor
arpl
push
push
test
inc
ss
mov
mov
jno
adc
call
loope
stos
gs
and
fxch
cmp
xor
cs
loopne
jbe
pop
mov
fisubrs
ljmp
cltd
in
sub
aam
cwtl
sub
mov
mul
add
cltd
je
push
arpl
sub
cmp
fdivrl
bound
sub
sub
mov
ljmp
enter
dec
fcoml
nop
mov
jg
lret
testl
stos
push
ret
cmp
mov
inc
mov
adc
ficompl
pmaxub
out
aam
movsl
mov
mov
fcoml
ljmp
js
testl
dec
mov
stos
xlat
jbe
pop
rcrb
push
repnz
int
jmp
les
inc
mov
cmp
inc
push
or
ja
lcall
xor
xor
and
dec
xchg
test
push
or
mov
and
mov
dec
lea
sub
addr16
and
faddl
in
ja
dec
out
sub
pushf
xor
into
jecxz
add
enter
ret
jnp
data16
cltd
icebp
test
stos
or
mov
outsb
jnp
jns
addr16
jns
mov
imul
jp
cltd
dec
outsb
hlt
rorl
dec
jbe
dec
and
sub
ja
insb
mov
pop
pop
das
es
pusha
loope
cmp
pop
xlat
lods
sbb
les
mov
lret
pop
adc
mov
push
mov
rclb
sub
pop
or
mov
xor
add
add
adc
dec
loopne
shlb
mov
inc
fistpll
mov
arpl
insb
push
dec
jbe
sarl
ds
pusha
in
mov
cmp
lods
sub
inc
xorb
aad
mov
pop
movsb
insb
xor
jno
xor
sbb
les
jl
jno
rorb
lcall
pop
add
push
pop
sbb
fldt
mov
and
mov
adc
dec
adc
rolb
fidivl
pop
ds
cmp
pop
arpl
movsb
int3
push
mov
mov
test
push
push
dec
call
pop
jno
mov
mov
and
mov
pusha
arpl
insb
cmp
dec
add
pop
and
dec
popa
loop
sbb
sbb
je
aam
sbb
pop
xchg
in
dec
pop
lret
xorl
jns
frstpm(287
out
lret
test
jb
inc
jp
lahf
pop
add
pop
jb
cmpsl
data16
push
xor
jne
jge
gs
mov
leave
lock
mov
pop
aaa
dec
divl
mov
out
lock
sahf
pop
addr16
xchg
sub
testb
movsl
popf
mov
ljmp
add
cmp
jl
sub
xchg
stc
pop
aad
add
iret
push
jmp
push
je
sub
pop
and
inc
xchg
sbb
push
inc
or
inc
adc
fisubrs
outsb
push
insb
insl
push
cmp
shrl
int3
push
cmp
nop
pop
outsl
arpl
shl
fsubs
adc
imul
mov
push
mov
cwtl
or
mov
dec
inc
int3
inc
decl
fists
test
and
sbb
ret
xor
int3
fidivl
addr16
jo
fnstsw
cmpsl
cmc
test
in
test
dec
and
imul
ss
icebp
xlat
jbe
cmovg
fidivs
loopne
inc
sbb
gs
out
int3
fisttpl
addr16
mov
icebp
cmp
push
dec
into
nop
pop
dec
jge
cmpsl
push
push
jbe
insl
ja
xor
and
popa
repz
push
or
push
lret
movl
jbe
data16
sbb
rcr
jg
and
insl
mov
push
inc
outsb
cmp
out
cmc
mov
ds
lret
sbb
inc
sti
cmpb
sahf
iret
inc
mov
or
and
xchg
pop
leave
jmp
ss
jecxz
push
enter
mov
mov
xchg
loope
bound
in
imul
or
ret
sub
out
push
xor
inc
ss
loopne
iret
call
and
and
jecxz
jl
insb
rorl
cmpsl
addb
in
das
addr16
repnz
sbb
inc
stos
cmp
fcompl
clc
sahf
cmp
cli
shlb
aam
and
je
nop
mov
repz
cld
xchg
xchg
imul
adc
test
sbb
xchg
lock
fisubs
pop
sub
es
sbbb
pop
repz
push
push
pop
in
insl
inc
sub
inc
out
mov
and
pop
test
in
pusha
and
imul
mov
mov
mov
repnz
pop
or
jecxz
dec
push
lea
pop
push
addr16
arpl
sub
and
mov
nop
pop
or
bound
iret
inc
subl
rolb
or
mov
jbe
inc
scas
jnp
shrb
nop
add
pop
dec
clc
jle
subb
mov
mov
pop
or
inc
mov
jge
outsb
jl
pop
stos
es
lcall
ljmp
out
jg
dec
push
subb
aaa
lods
xchg
or
jo
jg
xor
add
outsb
ret
andb
push
aam
sub
inc
mov
pop
outsb
push
mov
mov
scas
shlb
out
lret
dec
jne
es
sbb
push
or
fiaddl
jmp
popw
das
movsl
notl
mov
mov
insl
std
push
enter
fs
jl
jns
mov
pop
sub
push
sub
inc
mov
fwait
sbb
subl
adc
insb
inc
cltd
shl
leave
lahf
and
ja
mov
sbb
pop
iret
or
movsb
inc
ret
adc
imul
divb
dec
sarb
inc
dec
adc
ret
outsl
orb
in
das
xchg
lds
push
cs
push
push
in
xchg
aam
push
lret
xor
mov
mov
pushf
dec
push
ljmp
jbe
cmp
and
sbb
mov
ret
dec
ret
outsb
repz
sbb
pop
outsb
fdivrs
mov
mov
inc
push
or
fcmovu
hlt
dec
shll
mov
outsb
jo
hlt
inc
or
imul
lods
cwtl
pop
dec
outsl
inc
es
jnp
xchg
dec
pushf
into
lret
inc
mov
mov
pop
push
or
pop
sahf
inc
subl
add
cmc
pop
pop
mov
sti
add
inc
jbe
dec
div
outsl
xor
stos
rorb
push
mov
andb
pusha
outsb
std
jb
cld
xor
lock
rcl
mov
mov
sbb
sub
cmp
mov
aaa
sub
mov
sahf
sbb
sbb
aad
mov
fmul
rcl
bound
rcrl
cmpsl
mov
mov
and
orl
lret
xchg
jp
cs
adc
jp
jecxz
outsb
rcr
inc
mov
pushf
popa
sahf
mov
clc
mov
outsb
cmp
sbb
inc
testb
imul
lods
popf
or
pop
pop
inc
adc
bound
arpl
sbb
xor
into
ljmp
add
mov
adc
in
mov
rcrl
push
imul
jl
xlat
jecxz
outsb
cmp
cmpsl
sub
push
hlt
outsb
cmp
or
jecxz
divl
enter
jbe
in
pushf
dec
sub
mov
mov
jmp
ds
mov
out
push
or
repnz
cmp
das
repnz
sbb
addr16
fdivl
mov
lahf
shll
les
cmp
xor
add
loop
movb
sub
mov
jg
and
loop
aas
adc
lds
movsl
jp
inc
adc
dec
dec
dec
jns
fistpll
cltd
push
in
outsb
shr
push
lcall
es
dec
hlt
sub
aad
test
test
mov
push
pop
push
dec
in
out
fimull
mov
mov
add
push
jno
adc
inc
es
xor
lcall
repnz
mov
outsb
cmc
cli
xor
jnp
shr
lds
add
adc
bound
and
fisttps
and
push
sub
jge
in
push
sbb
out
mov
in
push
and
dec
or
stos
stos
jge
lahf
inc
lock
pop
mov
mov
xchg
fimuls
rolb
orl
fidivl
pop
lahf
sub
add
xchg
outsl
movsl
jmp
jbe
int3
inc
fdivrs
adc
sti
cmpsl
scas
ss
mov
pop
loop
xchg
xchg
pushf
vcvtps2pd
cld
cmpsl
ljmp
jo
pop
shl
or
pop
push
jae
pop
jge
ss
xchg
fbld
xor
inc
outsb
clc
scas
inc
js
xchg
and
push
mov
aam
jno
mov
xchg
xchg
nop
shr
cmpsl
in
jb
xor
push
mov
roll
bound
stos
sub
and
push
mov
sbb
pusha
xor
cwtl
cmp
push
repz
scas
dec
es
shlb
jge
jl
outsl
loop
les
add
test
loope
subb
ret
loope
xor
fldcw
lcall
mov
aad
ficoms
xor
dec
rolb
aaa
dec
data16
jno
mov
jne
jbe
fists
cmpsb
inc
shll
jge
test
call
out
js
outsl
and
sub
jnp
insb
mov
pop
fdivp
jl
mov
stos
cwtl
cs
imul
insl
les
daa
shr
imul
shlb
jle
lods
in
mov
dec
sub
jns
test
mov
inc
or
es
xor
loop
sub
mov
mov
notb
std
mov
aam
imul
jae
sub
addr16
push
dec
rclb
jno
sub
outsb
mov
dec
cli
jnp
sub
addr16
dec
mov
mov
rcl
das
popf
fmull
or
sbb
cwtl
mov
sub
pop
mov
dec
jnp
rcl
jge
sarb
iret
sbb
movsb
nop
test
mov
push
push
rorb
xor
cmpsb
mov
adc
fst
adc
call
lcall
loope
push
or
shl
cmpsb
lret
shlb
and
pusha
mov
jnp
push
in
mov
aam
pop
push
cmpsb
std
mov
ds
stos
lret
dec
test
sbbl
call
jns
std
outsb
pop
outsb
call
push
int3
insb
add
sub
xchg
jno
mov
stos
mov
xor
cmpsl
xor
cmp
addr16
cmpsl
jns
push
lret
cwtl
scas
jp
xchg
fucomp
jbe
sbb
bound
jns
cs
sbb
jno
cmp
hlt
clc
inc
aad
in
repz
icebp
inc
cmp
iret
dec
ret
dec
add
dec
ljmp
fxch
mov
cld
lret
cld
inc
push
stos
add
xchg
aaa
lahf
aas
sub
sbb
jp
inc
out
das
push
cld
push
xchg
or
sbbl
shl
add
jne
push
jae
xor
pop
leave
xchg
outsl
push
mov
out
stos
jbe
and
mov
stos
mov
cld
pop
in
jno
xchg
add
or
and
inc
das
lcall
scas
ljmp
inc
jp
movsb
stc
outsb
xor
push
inc
cmp
fistpll
lock
and
int3
push
mov
std
dec
and
lods
nop
dec
mov
pop
inc
mov
pusha
lds
mov
dec
sub
push
pop
mov
sub
jge
pop
cltd
jae
pop
mov
xchg
lds
cld
imul
enter
jnp
and
jp
flds
cmpb
nop
add
aad
shrb
dec
inc
ljmp
jg
jae
out
test
jecxz
xorb
fst
pusha
int3
fsubr
fs
xor
adc
pop
fidivrs
adc
sub
cmp
stos
cmpb
and
shrb
out
cmp
test
pop
enter
xchg
jmp
jb
in
test
mov
outsb
ret
shlb
data16
stos
outsb
ds
aad
sub
jae
outsb
ja
lods
lahf
dec
mov
lods
inc
jbe
sti
pop
mov
aas
jnp
cmp
add
lods
sti
ficoms
sarl
sti
out
xchg
arpl
rclb
fwait
outsb
insl
mov
out
orb
lds
mov
stos
outsb
jo
mov
pushf
fsubp
nop
fistpll
mov
sti
das
fsts
and
cs
cwtl
fcomps
xor
mov
test
pop
push
cmp
mov
nop
outsb
lret
loop
aas
adc
push
dec
xchg
lea
outsb
jecxz
std
xor
bound
lods
dec
je
jp
pop
sti
xor
and
movsb
fiaddl
mov
inc
pop
or
push
pushw
jae
adc
lcall
popl
mov
loop
sbb
rol
loope
in
pop
pop
test
adc
inc
dec
divl
aad
loope
jne
xchg
into
sub
adc
mov
fcmovu
push
movsb
push
dec
shl
pop
hlt
mov
push
out
es
cmpsb
mov
jle
shrb
xor
xchg
xchg
loope
js
loopne
xor
ja
xchg
leave
ljmp
or
push
popa
int3
aad
test
sub
add
jl
jne
xchg
ss
sbb
je
ret
shrd
push
cmp
sarl
xor
cwtl
pusha
jg
dec
rolb
pop
stos
dec
sub
addl
adc
inc
push
sbb
mov
add
je
lods
rcl
adcb
xchg
jbe
pop
mov
mov
outsb
add
lea
dec
cmp
subb
roll
sti
in
aaa
jecxz
rolb
lods
rep
xrstors
lcall
cmc
fcmovne
push
call
cmp
push
out
outsl
mov
mov
fidivrs
and
mov
pop
sbb
outsl
mov
jbe
test
push
jge
shrl
in
insl
dec
xor
stos
jg
push
mov
cmp
lods
insb
fs
jp
flds
sbb
andl
stos
mov
sub
iret
stos
mov
jb
loope
mov
dec
jbe
mov
jle
sub
shl
pop
jbe
adc
lcall
pushf
adcb
inc
mov
sbb
and
test
jp
and
out
pusha
xor
lea
outsb
bound
xchg
cwtl
out
sub
test
inc
je
inc
dec
lds
and
mov
cmpsb
lahf
loope
shlb
stc
pop
into
pop
jbe
jp
dec
jb
insb
jcxz
jbe
add
xchg
into
jno
jae
fsub
mov
xor
or
adcb
outsb
stos
pop
jbe
sarb
or
mov
je
outsb
cmp
lods
rolb
fisubrl
dec
mov
ret
fisubrs
pop
pop
stos
xlat
or
movsb
push
out
imul
dec
aad
dec
add
mov
push
fwait
sar
shl
shll
jbe
and
jge
pop
xlat
inc
xorl
mov
lret
mov
jecxz
or
outsb
leave
jge
cs
mov
ss
inc
mov
jecxz
dec
and
shll
dec
jmp
lahf
stos
imul
mov
pop
xchg
mov
in
pusha
out
cmp
pop
jmp
shlb
inc
movsb
sbb
xchg
ret
popf
inc
and
repnz
mov
test
jp
jno
lods
inc
loope
and
jmp
add
mov
jp
cmpsl
shlb
sub
loopne
addr16
mov
pusha
imull
xchg
out
sbb
xlat
orb
xchg
shrb
out
insl
pop
jns
adc
andb
push
push
push
call
mov
xchg
and
stos
es
shll
xorb
sbb
into
movsl
cmp
ja
cmp
mov
idiv
dec
arpl
lahf
add
cmc
imul
ljmp
or
lock
test
aaa
mov
int
add
repnz
das
sbb
lea
lods
mov
out
dec
jnp
mov
ljmp
shrb
add
outsb
sub
xor
mov
stos
add
jmp
pop
cmp
outsb
dec
cli
enter
jp
mov
aad
sbb
jg
jae
shl
jbe
add
fstpl
fidivl
data16
outsb
xchg
push
fdivl
outsb
sbb
jbe
loop
popa
sbb
add
ret
lods
cmc
outsb
cmp
adc
sub
mov
shlb
bound
lds
stos
test
pop
jbe
cld
sti
hlt
cltd
outsl
xchg
jge
adc
pop
mov
xor
aaa
stos
xor
aam
adc
xor
dec
pop
outsb
adc
cmpsl
cmp
jnp
ja
in
push
outsb
std
adc
or
or
stc
fisttpl
mov
xor
or
lret
mov
in
loop
xchg
and
xchg
mov
stc
lahf
xchg
sbbb
pop
jno
mov
mov
jbe
outsb
xor
xchg
adc
les
les
mov
neg
or
and
push
outsb
cltd
lock
fisubrs
cmp
inc
push
or
stos
pop
and
xchg
loopne
icebp
mov
stos
lret
xchg
pop
or
jno
sub
add
push
inc
mov
repnz
pop
lret
fistpl
dec
or
std
pop
xchg
imul
pop
and
test
mov
sbb
pop
scas
mov
inc
repz
sbb
sbbb
lock
fdivp
ds
movsl
dec
adc
xchg
call
and
dec
push
jmp
data16
into
adc
inc
aaa
test
sub
fcomps
out
push
hlt
es
fnstcw
xlat
jmp
cltd
xchg
mov
mov
shld
mov
mov
mulb
js
xchg
jbe
aas
mov
adc
xlat
mov
pusha
xchg
or
test
inc
insb
out
pop
stos
jecxz
fldt
test
shlb
pop
add
inc
mov
div
mov
enter
xchg
scas
jbe
xchg
outsb
cmpsb
sub
push
in
mov
lods
xor
iret
out
aad
sub
pusha
outsb
ja
outsb
pop
mov
shlb
or
in
or
dec
mov
and
inc
int3
add
ficompl
mov
fwait
aad
adc
movsl
adc
inc
stos
xchg
cwtl
push
add
cmp
jns
cmp
es
sti
push
fwait
loop
cmpsb
lea
lock
jns
bound
pop
ss
mov
and
addl
insb
cltd
loop
out
dec
push
mov
movq
stos
out
mov
bound
fdivl
mov
mov
mov
pusha
sbb
fwait
xchg
rclb
call
ljmp
cmpsb
xchg
mov
fsubrl
bound
lcall
add
jle
aas
pusha
insl
movsl
ficompl
outsb
xsave
pop
popa
aaa
pop
mov
xor
xor
daa
dec
sub
push
shll
mov
sti
inc
pop
xor
and
jns
cmpsb
insb
or
pop
sub
arpl
xchg
ret
test
push
sub
inc
stos
outsb
mov
cs
cld
xor
jmp
sub
jbe
rclb
arpl
mul
inc
out
xorb
stos
cmc
sahf
outsb
fmull
sbb
leave
popf
sahf
inc
jle
neg
movsl
pmaddwd
pop
aad
sub
sub
cmc
adc
inc
fdivrp
inc
jecxz
inc
out
outsb
jg
lahf
mov
test
outsb
push
xor
stos
in
xchg
jne
loop
inc
xlat
hlt
sbb
je
int
mov
sub
jne
push
inc
insl
sahf
in
push
stc
or
jo
iret
cmpps
lods
cmp
adc
cltd
outsb
cld
mov
fdivs
repz
add
or
jns
test
ss
lahf
cmpsl
fisttpl
pop
or
cmp
mov
imul
cmc
jae
cld
cmp
mov
sub
aaa
pop
vmaxsd
sub
cmc
popw
pusha
cmpsl
out
xor
ja
sbb
out
loop
inc
je
addb
loop
pop
cmp
stos
adc
enter
xchg
xor
hlt
shl
jmp
push
add
mov
int3
loope
ret
sbb
jae
call
insl
adc
repnz
push
inc
push
loop
push
rolb
popf
cmpb
add
push
pusha
ss
stos
push
pop
adc
loope
popf
loope
xchg
mov
dec
fbstp
pop
mov
rol
imul
call
pop
sub
mov
pop
iret
xchg
imul
mov
pop
push
pop
in
mov
stos
dec
sub
repnz
icebp
lret
push
add
mov
or
jns
mov
cmc
add
pop
leave
test
rolb
mov
daa
repz
jns
out
lcall
add
and
jg
lods
ret
ljmp
xchg
jne
push
test
and
sbb
sahf
xchg
fdivs
or
pop
aad
test
push
imul
or
scas
or
cmpsb
xor
ss
dec
jns
push
xchg
or
push
add
arpl
inc
push
mov
rclb
repz
std
mov
fldenv
xchg
sbb
pop
jae
pop
jnp
xchg
test
loopne
add
inc
xor
jge
mov
mov
mov
fstpt
outsb
push
cmpsb
inc
push
ds
cltd
popa
cmp
rorb
divb
and
jl
add
jb
test
idivl
mov
xor
dec
sub
jp
mov
call
xor
sub
outsb
push
lahf
sub
sbb
shrb
fiaddl
mov
inc
inc
sub
sbb
dec
pop
popa
jle
mov
pop
mov
fwait
icebp
push
cmp
hlt
rcl
jg
xchg
iret
addr16
das
push
adc
fcoml
ljmp
lret
inc
add
jecxz
jg
outsb
add
push
pop
inc
scas
xor
sbb
jbe
imul
aaa
stos
mov
sub
out
pushf
cltd
ss
pop
jl
cltd
mov
jno
pushf
inc
jbe
jo
mov
shl
ss
push
dec
and
mov
cmc
jg
add
hlt
stc
add
mov
add
outsb
adc
daa
inc
xchg
jmp
ret
mov
sbb
test
stos
dec
sub
mov
outsb
sbb
faddl
xor
lcall
pop
pop
pop
add
add
cmc
xor
cld
in
sbb
xor
inc
outsb
adc
pop
jb
aaa
fwait
clc
sti
lds
mov
cmp
data16
mov
cmpsl
sub
sbb
movsb
mov
fldenv
dec
sub
test
xor
stos
pop
shl
insl
out
sub
out
aad
push
sbb
pop
xor
cmp
jg
dec
in
inc
xchg
jb
aaa
pushf
push
mov
jns
jge
cmp
push
xchg
ret
inc
ss
nop
and
into
fisubs
pop
push
fdivrl
jmp
pop
mov
mov
add
ss
and
xor
pusha
out
jno
out
add
js
std
rclb
add
lret
in
push
into
lds
shll
mov
inc
push
das
test
test
sti
mov
fnstcw
dec
es
loop
cld
fidivl
sbb
mov
jae
sub
push
xor
jg
ja
aaa
push
push
outsb
xchg
fsubl
mov
cmp
push
xchg
jmp
cmp
pop
mov
xor
mov
mov
aaa
ljmp
and
fdivl
imul
jge
rorl
push
pop
aaa
insb
xor
cmpsb
add
je
test
mov
push
sub
mov
arpl
mov
dec
dec
cs
add
aad
repnz
mov
mov
xor
mov
out
mov
incl
cmpsb
xor
addr16
or
cmp
cmc
fstpl
push
xchg
cwtl
das
test
sbb
adc
push
push
pop
jns
es
js
repnz
adc
lds
pop
push
sub
mov
sbb
push
pop
jne
fs
cld
jp
push
jb
js
ljmp
jecxz
aas
add
dec
pop
cmpsb
mov
int3
call
xor
aas
aas
and
test
push
inc
mov
cld
xor
sahf
stc
cld
adc
jle
and
jnp
add
aaa
cld
loope
mov
mov
mov
cmpsb
mov
and
stos
cmp
mov
fstl
jo
call
mov
shll
pop
xor
xor
cmpsb
shrl
movsb
fistpll
or
icebp
loopne
or
fwait
rcr
outsl
scas
jb
icebp
repnz
das
inc
and
les
bswap
test
aas
dec
inc
cmc
addr16
call
test
dec
ret
adc
stc
mov
pop
sub
insb
xchg
mov
dec
xchg
mov
pop
lods
in
sbb
mov
push
movsl
decl
mov
repnz
sti
pop
sub
mov
cs
mov
sarb
xchg
stos
loop
inc
inc
shr
shrb
loop
jge
and
push
fimull
scas
cmp
and
inc
fstpt
clc
hlt
jg
mov
and
fidivrs
jo
inc
and
jno
cmp
std
mov
xor
pusha
std
popf
xor
or
fcmove
jg
dec
pop
aas
fs
pop
enter
jecxz
jae
ret
int3
nop
dec
adc
lret
es
loopne
lahf
out
insb
fs
fisttpl
mov
call
cmp
xchg
stos
add
test
and
je
arpl
mov
scas
push
sub
iret
dec
sub
scas
leave
imul
mov
or
in
lock
and
loope
cmp
lock
mov
in
bound
pop
call
push
leave
std
xor
jb
mov
mov
ret
and
add
or
or
sbb
xchg
or
sti
outsl
mov
divl
cs
push
jbe
or
call
imul
clc
sub
jecxz
jmp
sbb
push
les
les
sub
xor
test
and
lods
insl
sbb
push
mov
mov
pop
dec
nop
mov
mov
in
cmp
cmc
scas
or
insl
enter
lds
out
cwtl
ljmp
cmc
push
xchg
das
mov
jo
test
lahf
orb
repz
sub
ljmp
jbe
shl
fwait
mov
xor
xchg
lods
loopne
add
test
sub
push
outsb
pusha
jecxz
or
mov
iret
inc
mov
and
outsb
repz
or
adc
mov
dec
out
push
sbb
xchg
icebp
xchg
pop
push
mov
dec
xlat
test
pop
jge
mov
xor
inc
mov
inc
mov
decb
mov
mov
xlat
movsb
jmp
xor
daa
jbe
cmpl
std
cwtl
shlb
and
shlb
mov
jl
adcb
loopne
cmp
js
or
inc
lret
fimull
in
mov
loope
inc
xor
cmp
pop
ljmp
nop
iret
dec
jp
or
mov
pop
cli
mov
popa
pop
mov
shr
push
bound
js
dec
push
iret
mov
cwtl
jns
add
pop
jb
and
jecxz
add
sti
mov
push
adc
loopne
sbb
int3
je
ret
pop
xor
popa
sub
and
jae
in
lret
push
pop
add
jge
xor
aaa
testb
fcoml
pusha
test
jg
leave
fnstenv
es
inc
shl
and
inc
mov
jmp
pop
aas
insl
push
adc
cmp
movsl
pushl
xor
lret
ljmp
cmp
push
pop
adc
icebp
dec
sti
xchg
pop
ds
mov
insb
loope
cmp
ljmp
xor
iret
mov
push
jbe
adc
enter
cmp
xor
dec
jnp
rolb
mov
add
cmc
aad
outsb
xchg
mov
pop
lods
mov
test
pop
xchg
adc
insb
scas
lret
in
cld
sub
enter
fwait
stos
xchg
mov
jbe
xchg
fildl
jae
xorl
cmpsl
dec
rolb
ljmp
push
push
mov
int
cmpsb
sahf
xor
rcrb
jbe
xor
int
outsl
adc
ficompl
lock
lods
mov
jae
in
adc
xor
mov
xor
adcb
stos
insl
mov
rcrb
jecxz
outsb
cmpsl
xchg
sub
loopne
insb
pop
sbb
rclb
xor
call
fidivs
cmpsl
mov
add
fiaddl
mov
stos
lret
cmp
jae
addr16
cmp
cmp
sahf
jno
mov
jecxz
sarb
push
mov
notl
sbb
mov
test
cmp
mov
hlt
push
bound
pop
std
je
out
add
cmp
pop
shrb
int
daa
inc
test
outsb
jmp
add
outsb
rolb
jbe
in
pop
inc
cmp
out
stc
or
mov
pop
clc
push
xor
dec
inc
hlt
sbb
das
popa
stc
cltd
mov
out
cmp
jbe
scas
dec
gs
mov
test
dec
dec
pop
xchg
in
xor
pop
xchg
fdiv
testb
jae
add
out
push
popa
arpl
je
cmp
mov
in
repz
add
cmpsl
add
xchg
repnz
or
lret
jg
cwtl
rorb
add
cltd
inc
out
xor
push
jecxz
jbe
sub
aam
pop
adc
or
jno
push
inc
jnp
arpl
mov
and
addb
xorl
adcb
test
fsubrl
les
movsl
inc
cli
rcl
icebp
cli
xor
hlt
inc
inc
push
fnstenv
dec
cmc
adc
lods
imul
sbb
insl
cs
dec
popa
push
cmpsb
sbb
mov
add
pop
push
add
mov
dec
xchg
fsubrp
popa
out
lcall
jbe
xor
imul
outsb
push
mov
lods
push
xchg
stc
pop
movsb
sub
add
ds
sub
stos
subb
negl
and
shrb
cmpsl
cltd
iret
insb
daa
insb
inc
hlt
ja
adcb
js
cmc
mov
jg
cmc
lods
mov
sbb
cltd
mov
sbb
mov
push
shlb
cs
sub
inc
sub
movsl
lds
in
je
out
push
in
xchg
daa
sub
xor
jno
mov
lahf
add
xor
fcmovb
shrb
mov
mov
sti
cs
imulb
push
cwtl
dec
outsl
jg
fwait
sbb
imul
xor
jb
sbb
push
scas
cmp
sti
fsubp
popa
mov
stos
lods
aaa
loop
sbb
mov
push
lcall
outsb
and
pushf
jbe
mov
cmpsb
pop
and
sti
sub
mov
or
or
push
push
jb
iret
bound
rolb
scas
xor
sbb
sbb
cmp
xlat
imul
movsb
or
ss
rcrl
xchg
sbb
sbb
or
jmp
mov
mov
cmp
jb
rcr
mov
out
sbb
or
add
loop
shlb
cmpsl
shl
sbb
push
cmp
ret
add
in
leave
in
pop
fstl
fs
sub
imul
add
sbb
push
in
push
and
jle
xchg
pop
ffreep
or
int3
push
cli
ds
jo
and
jbe
mov
pop
xchg
xchg
inc
jg
mov
outsb
in
adc
cmp
pop
mov
arpl
sub
pop
inc
or
and
es
insl
outsl
or
sahf
cmp
addr16
cmc
add
jno
lock
leave
iret
mov
xor
cmc
inc
popa
add
sbb
js
add
addb
push
les
mov
cmpsl
call
fwait
ss
stc
and
hlt
xchg
outsb
jno
ret
mov
mov
cld
and
push
gs
or
outsb
mov
sbb
add
sub
int
incl
repz
xor
cmp
jnp
sbb
loop
mov
popa
or
cmp
inc
add
test
push
mull
jae
and
cmpb
mov
inc
lea
arpl
in
notb
push
aad
out
fs
jbe
jns
in
fxch
loope
xor
push
jbe
mov
stc
out
dec
adc
xchg
and
mov
push
pop
jecxz
jbe
mov
fwait
or
push
outsb
jge
mov
insb
adc
mov
or
pop
lods
aad
jb
jb
jbe
mov
xchg
jae
adc
jecxz
scas
lcall
test
ds
cmpsl
jmp
adc
push
in
add
scas
pop
idiv
inc
insl
add
xor
mov
cmp
pop
dec
fcomp
imul
jmp
packuswb
mov
mov
cmc
rcl
outsb
mov
sub
mov
xchg
pop
pop
pop
psrld
pushf
rcr
pusha
movsb
xor
leave
cmpsb
dec
mov
mov
xor
ja
sbb
push
mov
imul
cmp
sarb
add
loop
cmc
jne
out
xchg
jnp
andb
pop
in
xor
shl
mov
aad
cmp
ficompl
sarb
adc
loope
repnz
arpl
jb
pop
daa
xchg
jg
jmp
jp
rcll
add
ficoms
xchg
inc
cmpsl
aam
stos
stc
jae
adc
popa
adc
cmp
out
out
push
push
jae
cwtl
push
std
rolb
lret
test
mov
push
inc
rclb
xchg
sysenter
in
in
cmc
test
rolb
pop
jecxz
daa
and
fstps
clc
cltd
fcomp
cmp
test
sbb
fiadds
int3
xor
mov
inc
mov
dec
loop
js
rorb
and
outsb
ret
jnp
mov
ljmp
ffreep
sub
inc
cmp
movsb
and
addr16
mov
jno
outsl
outsb
es
sub
mov
mov
je
dec
push
and
stc
outsb
inc
enter
adc
loopne
sarb
push
adc
dec
ror
in
outsb
push
or
hlt
pop
ss
sub
jbe
rcr
test
in
testb
rclb
jle
out
loope
and
xor
negb
ficoms
and
mov
inc
aam
rcrb
ret
push
das
inc
aad
cld
insb
xor
jnp
push
cmp
daa
enter
or
cmp
add
popa
and
cs
or
subl
xchg
ja
push
in
int3
lock
jae
subl
cmpsl
mov
pop
mov
mov
fwait
dec
mov
out
pop
das
insb
mov
out
xchg
mov
lret
lods
adc
scas
ret
mov
cltd
sar
psrlq
int3
mov
jp
add
out
lcall
lret
lods
mov
push
mul
add
ss
test
fsubrp
fisubrs
fdivrs
jg
rcl
mov
nopl
dec
shll
xchg
dec
push
push
lahf
jmp
jae
cmc
jbe
ret
scas
mov
xchg
mov
push
loope
shrb
push
sbb
data16
loope
push
or
sub
mov
cmpsl
lds
sbb
enter
sarb
adc
jmp
mov
cwtl
mov
or
sub
jmp
ud1
iret
inc
xor
cwtl
das
addr16
ljmp
cwtl
test
mov
mov
in
pop
rolb
ds
lret
pop
ret
outsb
mov
dec
leave
aam
cmp
sbb
sbb
out
mov
repnz
sbbb
add
cmpsl
add
aam
cwtl
sbb
sti
rorl
cmpsl
xlat
ljmp
xchg
inc
leave
repz
mov
shl
and
lcall
sub
fadds
push
cltd
pushf
push
out
adc
jmp
inc
mov
dec
add
test
orb
mov
in
pop
arpl
and
flds
std
xor
inc
je
xchg
mov
out
jecxz
rcr
xchg
dec
mov
fsub
je
adc
push
push
mov
mov
ja
cmp
test
xor
push
shr
in
repz
stos
xchg
ja
xor
in
inc
xchg
mov
push
lcall
loop
scas
jbe
pop
loop
pushf
mov
push
cmp
nop
mov
xchg
int
lods
jae
lods
sbb
test
mov
rorb
loope
loop
imul
push
sub
xchg
sbb
das
inc
sti
loop
and
jbe
jns
sbbl
shrb
insb
pop
sarb
inc
movsb
movsb
adc
push
lret
push
std
vsubss
sub
cltd
jae
xchg
mov
adc
mov
test
repnz
ss
inc
push
push
fnstsw
or
xor
mov
and
sub
in
mov
fistpl
lret
push
push
test
inc
cmpb
out
push
pop
stos
dec
roll
push
sahf
sbb
dec
gs
fldcw
xchg
and
inc
test
or
cwtl
mov
lahf
push
mov
popa
jmp
js
lock
mov
adc
or
dec
mov
sarb
xchg
rclb
pop
jecxz
sbb
add
push
fadd
pop
push
mov
mov
in
insl
outsb
or
and
pop
xor
nop
jo
imul
inc
adcb
insl
sub
inc
mov
shlb
jns
ds
inc
insl
out
pop
add
ja
addr16
leave
mov
mov
lods
fcmovnbe
cmp
mov
lods
nop
pop
lahf
xlat
jp
jecxz
jb
fndisi(8087
jg
push
push
rclb
movsb
mov
xchg
aaa
add
lahf
dec
pop
inc
cmp
push
js
or
in
jg
rcrl
or
stc
and
imul
sbb
mov
jecxz
jb
jbe
cld
ret
add
sub
ret
movsb
push
mov
repz
mov
mov
mov
mov
xor
sbb
jb
sub
mov
pop
cmc
shll
aaa
cmpsb
sbb
loope
outsb
inc
out
cmp
stos
shll
sbb
fdivrs
fs
pop
cmc
pminsw
rorb
jnp
cmpsb
mov
ret
mov
push
and
daa
inc
sahf
addr16
fucom
je
pop
add
jne
jecxz
scas
and
in
push
in
cmp
addr16
or
xor
sbb
jbe
xor
dec
fadds
icebp
stos
rcr
popa
pushf
loopne
sbb
sub
es
js
mov
add
or
mov
xlat
cld
loope
aad
testb
dec
ds
punpckhbw
outsb
push
ss
sub
std
mov
imul
pop
and
jne
dec
dec
xchg
stos
mov
fisubrl
mov
jno
test
shrb
push
dec
clc
insl
mov
lock
sbb
mov
jo
mov
sahf
rcrb
arpl
fidivrs
adc
js
shrb
push
push
jne
gs
or
mov
cmp
lds
push
xor
xchg
adc
mov
imul
imul
pop
js,pt
leave
sub
inc
cmp
bnd
popa
mov
loope
and
push
jnp
push
loop
dec
inc
repnz
popa
sar
mov
push
cs
sub
loop
mov
psrld
shl
push
pop
add
daa
sub
inc
xchg
divl
sub
and
sub
and
xchg
add
and
fdivrl
pop
loop
push
push
mov
lret
out
jbe
andb
dec
push
in
inc
pusha
jl
inc
pop
mov
shlb
pop
mov
addr16
dec
jge
ss
bnd
insb
in
sub
ficoms
fistpll
and
subb
dec
pop
pop
loope
test
sarb
jl
aas
jbe
jae
xchg
adc
sub
jae
mov
lahf
outsb
sbb
in
iret
sbb
rorl
je
push
das
outsl
imul
xor
sbb
shrb
mov
sti
mov
call
jbe
add
xchg
mov
shrb
insl
out
dec
jbe
add
push
sbb
pop
lods
ds
cmc
lcall
push
js
out
outsb
cld
sbb
imul
fisttps
jo
cltd
xchg
sbb
jno
clc
testl
or
mov
popf
xor
xchg
mov
test
clc
loopne
dec
out
pop
and
rclb
push
xor
stos
add
sub
add
cs
repnz
push
loopew
in
or
loop
cmp
iret
test
fiaddl
insl
mov
daa
push
push
lcall
mov
js
ret
jle
aaa
stc
mov
dec
xor
xor
mov
xor
ljmp
in
mov
mov
out
xor
or
cmpsl
sub
and
dec
mov
xor
push
jbe
mov
mov
sbb
jnp
cli
sarb
jne
xor
je
fistpll
mov
mov
aam
xor
outsl
jp
in
frstor
rcrl
sti
inc
inc
xchg
repnz
jecxz
out
orb
lret
pop
inc
and
mov
mov
dec
push
pop
cmc
cs
or
shll
popl
jns
sub
scas
adc
inc
mov
add
jmp
xchg
mov
and
addr16
xchg
and
out
mov
or
ljmp
or
inc
mov
mov
mov
cltd
push
inc
and
mov
mov
sub
stos
cmc
mov
inc
outsb
rclb
mov
push
jmp
push
and
dec
dec
shlb
mov
out
lea
ja
mov
jb
rcl
or
ss
aaa
xchg
xor
ret
out
xchg
pusha
sub
mov
adc
push
rorb
clc
in
push
loope
sub
push
outsb
and
orb
es
jno
dec
out
cmp
mov
aaa
shl
cmc
add
aas
test
jle
xor
mov
leave
jge
jns
cmp
js
xor
ret
test
cmc
fistpl
or
leave
int3
sbb
pop
sbb
add
sub
jbe
jae
sub
and
push
xchg
bound
idiv
jbe
insb
stos
mov
jnp
shl
mov
sarb
push
test
push
dec
hlt
xor
inc
mov
loop
push
xor
and
push
hlt
xor
sbb
xor
std
mov
and
loope
push
xchg
sbb
lods
fisubrl
cmp
cmpl
ret
and
jl
into
inc
mov
jnp
jmp
repz
sub
mov
mov
inc
sti
lcall
js
and
cmc
mov
sub
mov
scas
add
jbe
pop
lods
loope
js
add
adc
and
rolb
lods
add
push
xor
hlt
push
movsb
jae
cmp
in
dec
add
pop
dec
sub
sbb
cmpsb
push
sbb
sub
cmpsb
jecxz
adc
out
mov
mov
mov
and
push
sarb
add
cmp
int
setp
push
cmp
in
adc
jmp
and
push
aad
jnp
rorl
push
xchg
and
bound
and
cmpb
pop
cli
test
inc
pop
mov
popf
or
jp
cmpsb
fistl
pop
rolb
dec
psrlq
xchg
in
bound
ljmp
sbb
jge
inc
sub
jecxz
or
push
lds
notl
adc
outsl
cmp
in
push
and
mov
mov
and
inc
adc
outsb
inc
sbb
es
out
cmpl
jae
ljmp
imul
scas
or
dec
ljmp
shrb
out
sbb
push
add
inc
stc
mov
xchg
fcomps
mov
stc
xchg
shl
pop
mov
xchg
cmp
test
push
inc
das
ficompl
pusha
mov
dec
adc
push
mov
loope
inc
mov
jno
dec
stos
nop
pushf
rcl
push
std
hlt
xchg
xchg
cmpsb
push
insb
add
lcall
repz
xor
push
into
adc
xchg
add
sub
mov
push
xchg
rolb
xorl
xchg
stos
cmp
sarl
imul
pop
outsb
outsl
add
pop
das
pop
sub
sbbl
shrb
sub
sbb
fldenv
aad
jg
fcomip
mov
ret
pushl
lea
dec
aad
das
sub
push
xor
pop
rorb
lock
xchg
int3
stos
hlt
dec
adc
pop
std
cmpsl
jns
dec
movsb
mov
popf
adc
or
sub
adc
leave
int
sti
pop
jbe
mov
in
test
shlb
cli
loope
xchg
das
int3
jmp
jge
or
lcall
out
int3
aam
sbb
cmovp
jbe
add
inc
test
push
pushf
mov
adc
push
fcoml
xchg
pop
pop
add
mov
push
dec
mov
xchg
sbb
fcmovbe
inc
outsb
fs
nop
rolb
xchg
dec
mov
cmp
jecxz
loop
lods
inc
imul
int3
xorb
shrb
or
rclb
jne
outsb
cmpsl
imul
cmp
lahf
and
cwtl
jno
sti
lds
mov
das
mov
mov
fs
lahf
rclb
roll
xor
inc
test
setle
push
sbbb
lahf
xor
sub
or
jb
outsl
pop
jp
pop
pop
test
mov
sbb
addb
shlb
call
arpl
mov
imul
fmulp
sub
or
out
enter
jb
cwtl
sub
arpl
pushf
popf
pop
scas
dec
paddusb
xor
outsb
or
mov
push
push
sbb
lret
cmc
shlb
sti
aaa
inc
push
cmp
loop
or
add
nop
icebp
push
int3
fwait
mov
shrb
in
sbb
and
sub
outsl
jno
ss
ret
outsb
loop
repz
rclb
cld
adc
ds
in
andl
loopne
pop
dec
mov
nop
inc
lods
jecxz
subb
xor
mov
xor
out
dec
cmpsl
cmove
rolb
dec
inc
and
pushf
popf
clc
and
inc
int
fbld
arpl
rorb
jns
xchg
ss
xor
sub
jp
and
mov
rcrb
mov
pusha
outsb
data16
inc
jbe
jbe
jnp
fcmovu
mov
shrl
or
mov
sub
jg
xor
les
call
cmc
ss
mov
add
xchg
xchg
cmp
dec
test
mov
xchg
add
and
aaa
add
rolb
cs
jae
inc
cs
lods
mov
test
movsb
dec
outsb
stc
fwait
clc
mov
xchg
dec
mov
and
push
sbb
shll
xchg
fst
cltd
sahf
bound
outsb
sbb
inc
jbe
pusha
rorl
xchg
push
rclb
push
stos
sbb
ljmp
jl
add
xchg
rorb
popa
add
mov
cmp
sti
sub
addr16
out
adc
xchg
ljmp
xor
dec
inc
push
pop
mov
pop
shrb
and
pop
add
roll
sti
faddp
mov
outsb
repz
jbe
xor
sbb
jbe
sbb
mov
sub
imull
mov
loopne
mov
jb
sub
aas
movsl
cmp
ja
jmp
shlb
leave
sub
aad
sarb
lea
push
mov
loope
xor
mov
jg
jns
test
mov
push
or
aaa
imul
ljmp
jb
testb
sbb
mov
sahf
lds
shrb
pop
xor
insl
push
jmp
jae
or
rcl
in
incl
and
sbb
sets
mull
mov
mov
add
dec
push
out
inc
fidivs
addr16
out
xor
stos
int3
pusha
leave
ja
shrb
or
jecxz
and
mov
mov
dec
pop
call
adc
loope
lds
sbb
fwait
mov
popa
mov
insl
pop
and
in
scas
lahf
jb
out
dec
subl
dec
popa
outsl
xchg
les
xor
xchg
cmpsl
cmc
dec
mov
inc
xchg
fs
mov
mov
push
lock
pop
fsubrs
filds
inc
imul
inc
adc
jg
loop
loop
pop
in
inc
adc
push
insb
sub
out
lret
imul
jae
stos
rcl
push
sub
fwait
loop
in
shll
add
out
push
out
shrb
jge
fstpt
int
mov
mov
push
sahf
sub
add
fildl
jae
imul
aaa
and
enter
push
mov
insl
dec
cmpb
jg
repnz
pop
les
outsl
xor
sub
jl
jb
cmp
cmp
add
xchg
xchg
ss
xchg
fsubl
ficompl
add
mov
jbe
and
cwtl
xor
sahf
dec
mov
or
iret
mov
xor
cwtl
adcb
adc
mov
pop
ds
loope
movsl
pop
xor
push
or
and
mov
cmc
mov
push
pusha
rcrl
movsl
xor
fiaddl
mov
js
loope
das
fadds
loope
popa
sub
test
and
jnp
sahf
fisttps
xchg
mov
push
cmp
es
testb
push
addr16
das
loopne
sub
pop
lods
sahf
mov
outsb
mov
les
inc
push
push
xchg
loope
add
xchg
fildll
jo
in
mov
clc
vpslld
jecxz
out
aad
cld
aad
bound
sbb
idivb
mov
inc
adc
pushf
faddl
out
mov
test
mov
xchg
jge
aad
loope
leave
test
std
mov
push
dec
push
push
mov
outsb
in
inc
movsb
in
jmp
das
sbb
aam
dec
inc
int
cmp
in
test
lds
xor
stos
mov
add
adc
mov
mov
and
test
lret
jp
in
hlt
push
pop
inc
ds
and
xlat
and
cmpsb
ror
pop
sub
inc
repnz
sub
ljmp
jmp
dec
cmpsl
xor
xor
dec
xlat
je
xchg
xchg
lahf
xor
jecxz
flds
pop
arpl
and
and
push
xchg
call
mov
dec
das
sbb
push
jle
movsb
adc
int3
sub
clc
inc
jbe
pop
movsb
mov
pop
fs
cmp
stc
and
ljmp
leave
outsb
aaa
subl
div
cmp
adc
in
aaa
inc
sbbb
pushl
icebp
dec
xchg
sub
sub
pop
cltd
pop
or
test
lea
mov
ljmp
pop
xchg
flds
fnstsw
cmpsl
push
cmc
inc
imul
sbb
rcrb
sub
add
aad
arpl
jge
mov
shl
sub
fldcw
int
mov
fidivs
in
ss
mov
push
cld
pop
gs
push
mov
cli
and
add
inc
into
xor
lret
xor
rcl
mov
dec
xchg
or
sbb
jnp
pop
popf
mov
xor
cmp
cmpsl
dec
inc
xchg
xchg
add
std
punpckhdq
pop
dec
pop
jnp
addb
outsb
pusha
dec
inc
js
and
add
dec
adc
push
andb
mov
mov
aad
and
fidivl
aad
lret
mov
sub
mov
sbb
lcall
scas
fwait
movb
out
repnz
lahf
stos
fildl
and
or
ficompl
in
lea
outsb
xchg
sahf
xchg
ljmp
loopne
push
fwait
adc
adc
inc
push
jge
mov
orb
outsl
jno
inc
rolb
mov
cld
sub
fcompp
leave
mov
sahf
cli
sahf
leave
adc
dec
mov
ret
jl
outsb
je
jp
jg
or
cmpsb
add
xor
orl
loopne
jp
jnp
jnp
rclb
cmp
in
pop
push
mov
repnz
dec
sti
gs
sbb
incl
out
sbb
xchg
icebp
mov
out
cmp
xchg
push
insb
scas
mov
ret
xchg
stc
pop
push
push
mov
push
cmpsl
adc
jmp
nop
lcall
and
inc
arpl
mov
dec
xlat
push
aaa
push
daa
jnp
dec
cld
pop
mov
sub
in
jae
mov
jnp
jecxz
sbb
test
push
test
shlb
xchg
rol
mov
repnz
js
push
cld
dec
or
std
push
adcb
nop
fmull
test
and
scas
sbb
lea
aaa
insb
lcall
lret
pop
icebp
xchg
imul
or
fstpl
adc
int
adc
adc
dec
add
pop
cmpsl
push
mov
jecxz
mov
mov
out
ljmp
cmc
aas
call
pop
sbb
loop
or
mov
mov
xchg
rcrl
xlat
add
stc
jne
test
iret
jo
jmp
xorl
fwait
xchg
mov
dec
loop
or
sbb
in
dec
dec
cmpsl
xchg
sbb
pop
mov
cwtl
arpl
cltd
mov
in
sbb
mov
mov
mov
aad
sbb
aaa
mov
in
inc
clc
std
fsubrs
stos
inc
xchg
rcrb
sub
xchg
pop
fwait
sbb
lock
mov
sub
addr16
inc
mov
mov
cmpsb
xchg
inc
mov
je
jnp
loopne
adc
xchg
cmc
inc
push
inc
js
std
mov
test
adc
hlt
gs
imull
sub
push
lods
cmpsl
movb
cmp
shrb
imul
mov
sbb
xor
push
or
push
cmp
daa
jbe
pop
pop
sbb
jo
daa
aam
cs
pop
fisttpll
push
js
divl
in
sub
cmc
cmpsl
lods
mov
push
fwait
into
imul
ljmp
outsb
dec
inc
sbb
jbe
mov
xor
and
pop
loop
lock
das
decb
lret
fwait
mov
dec
jnp
dec
sub
test
mov
rcl
cwtl
pop
push
out
out
jbe
adc
aaa
jnp
adc
pop
test
push
shlb
aam
mov
iret
or
jae
out
jbe
mov
lock
push
loope
mov
in
cs
or
ljmp
outsb
fs
sbb
fadds
mov
pop
shl
pop
push
bound
mov
sbb
sub
push
mov
or
mov
pusha
scas
jnp
clc
xlat
jnp
lret
das
insl
into
push
adc
jno
fwait
add
cwtl
sbb
rcl
das
jmp
out
lds
outsb
in
shlb
ljmp
ja
mov
inc
mov
xor
mov
fidivl
or
xchg
mov
out
sbb
push
push
jnp
push
push
jp
mov
mov
push
mov
pop
pusha
sbb
int
inc
ss
addr16
lock
pop
or
and
inc
addr16
outsb
cmpsl
add
sub
std
aaa
jae
mov
sbb
dec
jg
jge
mov
out
in
dec
mov
popf
jmp
icebp
cmp
arpl
jbe
and
dec
push
pop
aad
loope
shll
dec
inc
cmp
inc
push
aam
mov
mov
fsubrs
nop
mov
mov
cwtl
bound
fbstp
sarl
fstps
mov
gs
aad
pop
sbb
ds
adc
mov
jbe
dec
sub
test
cmc
js
mov
sub
enter
rcrb
sti
out
stos
mov
stos
loop
in
jno
sbb
pop
push
rolb
xor
xchg
xorb
cmp
xor
adc
mov
push
xchg
aaa
repnz
aas
icebp
sbb
cmovb
adc
fcmovbe
jo
add
in
ss
cld
sub
jae
xchg
cmp
add
ja
mov
or
xlat
mov
jge
notb
iret
stos
in
pop
jbe
addb
cs
dec
push
mov
pop
in
mov
push
popa
insl
add
les
shl
inc
loope
test
cmc
rolb
leave
mov
pop
mov
mov
pushf
lds
add
loopne
cmp
jmp
lret
sbb
fimull
mul
pop
sbb
jp
or
ja
adc
and
add
pop
add
adc
test
mov
cmpsl
std
notb
add
mov
iret
dec
push
dec
ss
imul
dec
push
scas
push
push
movsl
dec
lods
test
dec
int3
inc
jmp
sub
mov
pop
xor
cmc
add
and
cs
bound
sbb
add
and
fwait
xlat
and
xor
fists
mov
addr16
jp
push
jecxz
outsb
test
inc
sbb
scas
aad
push
mov
fimuls
seto
or
push
mov
xor
shrb
js
cli
cwtl
fistl
sti
stos
xchg
inc
insl
mov
loopne
inc
dec
or
sbb
jb
and
jbe
or
shrb
addr16
int3
and
in
push
sahf
cmp
lea
ret
insb
mov
push
popf
std
mov
loopne
jg
cli
jle
push
out
xchg
sub
dec
and
out
push
xor
aas
insb
clc
pop
mov
pop
stos
out
sti
add
inc
jle
inc
xchg
out
test
lret
sub
stos
out
adc
xlat
fcoml
je
xor
mov
outsl
mov
popa
sbb
lret
add
inc
push
add
into
xor
dec
out
mov
sub
sbb
pop
insl
fdivl
mov
sarl
dec
out
enter
dec
insb
in
imul
in
repz
add
pop
pop
adc
jno
out
data16
stc
cli
mov
pop
dec
out
ficoml
out
add
cs
cmpsb
out
sbbl
addr16
sub
lret
pop
pop
or
xor
add
push
out
sub
lahf
cmp
push
movsb
adc
inc
push
inc
rorl
fs
sub
dec
cmp
pop
sub
jne
into
cmp
push
movsl
or
scas
and
jae
idivl
and
shlb
push
scas
out
push
mov
cmpsb
scas
testl
andl
mov
pop
mov
scas
xchg
and
out
pop
xor
ljmp
mov
sbb
mov
mov
ja
sub
out
ret
lahf
popl
scas
push
mov
inc
dec
out
js
mov
lods
push
ljmp
push
cmpsl
test
es
scas
loope
out
je
mov
out
push
push
jnp
inc
pop
pop
xor
cmp
xchg
orl
sbb
rcll
outsb
pop
dec
repz
scas
icebp
sbb
insl
out
sbb
sub
dec
imul
dec
in
fdivp
adc
pop
jae
cli
pusha
jns
jecxz
repnz
out
xchg
inc
imul
pusha
cs
es
out
dec
or
xor
adc
pop
or
aaa
ret
or
or
xchg
ret
pop
push
fisubrs
dec
loope
in
stos
loop
jg
pop
sub
or
sub
xor
xchg
andl
lahf
xchg
shll
out
bound
sub
loopne
jnp
test
out
fistl
push
xor
scas
out
outsb
out
jb
out
cmp
adc
add
les
ss
xchg
cmpb
subb
in
lret
insl
push
cmpsb
imul
mov
scas
daa
movb
dec
clc
mov
out
call
fdivrp
adc
adc
push
loope
loop
jae
idivl
inc
rep
jecxz
fsubrp
scas
insb
push
ja
ret
cs
adc
xchg
arpl
pop
outsl
idivl
xor
repz
and
jbe
testl
mov
xchg
jecxz
lods
loop
ds
fidivrs
imull
mov
dec
mov
sub
jl
out
xchg
les
inc
scas
sub
loope
ljmp
xlat
fstl
daa
cmp
dec
mull
ja
int3
jnp
cmp
sbb
pop
jo
xor
sub
scas
dec
xor
xchg
push
sahf
pop
jo
pop
int3
sub
ljmp
xor
sahf
aaa
lods
loopne
sbb
xchg
pop
push
pop
imul
out
mov
outsl
xorb
or
adc
add
adc
jne
xor
dec
dec
xchg
push
in
rcrl
out
xorl
fs
add
test
mov
xor
pop
inc
jnp
addr16
cmp
jmp
and
out
ss
leave
jbe
out
mov
dec
pusha
push
out
sub
mov
out
lods
push
cmp
aaa
popf
ljmp
add
test
fucomi
add
lods
or
out
pop
fistpll
iret
cmp
push
cmp
pop
dec
pop
push
cmc
sub
jl
or
ret
mov
es
dec
out
jle
or
pop
mov
push
sbb
push
shlb
push
out
cmp
xor
push
inc
inc
and
in
std
inc
ljmp
adc
repz
es
mov
repnz
das
cmp
push
xor
mov
icebp
sub
or
mov
out
sbb
incb
out
mov
jecxz
or
push
inc
inc
je
dec
push
cmc
sarl
into
out
pop
jo
mov
out
outsl
mov
or
jp
adcb
inc
out
mov
dec
out
dec
push
push
or
adc
xchg
ret
xor
cmp
out
adc
cmp
pop
or
loope
arpl
repnz
xorps
aaa
mov
repnz
sub
inc
clc
sbb
popa
xor
mov
out
sub
out
data16
out
daa
popf
inc
adc
fcoml
jo
insb
cmpsl
push
sahf
in
add
mov
or
mov
filds
xor
cmpsb
pusha
and
loopne
pop
dec
inc
pusha
mov
idiv
out
and
xor
dec
and
outsb
fstps
inc
and
aad
lret
call
stos
dec
xchg
mov
pusha
add
push
jbe
and
insl
or
jnp
sub
pusha
inc
add
ss
mov
loope
jecxz
aaa
out
xchg
cmpsb
sbb
enter
and
out
mov
sub
jb
stos
inc
rclb
cmp
aad
fs
xchg
xor
inc
out
dec
outsl
xchg
jbe
add
test
mov
lods
sbb
hlt
jmp
dec
adc
cld
shll
adc
inc
jno
add
pusha
or
mov
imulb
xor
repnz
mov
mov
pop
scas
xor
out
aam
aad
pop
mov
xchg
out
mov
jl
xchg
je
inc
out
imul
mov
fldcw
xor
es
or
imul
mov
cmp
fwait
popf
add
pop
loop
std
in
jecxz
loope
es
jle
dec
lret
pop
xchg
out
cltd
pop
jb
aas
jge
lock
cmpsb
add
push
or
stos
dec
jne
dec
ret
jl
push
inc
gs
ja
inc
inc
inc
add
xor
in
push
repnz
mov
jnp
out
mov
xor
xor
and
or
call
push
cmp
out
xlat
outsb
add
and
push
cwtl
es
imul
inc
dec
outsl
xchg
jbe
bound
adc
andl
mov
shll
rcll
jle
cwtl
fucomp
test
lock
cwtl
mov
xor
sub
sub
sub
je
sti
pop
inc
add
pop
mov
rcll
lcall
jg
test
lret
cld
movsb
pusha
xchg
out
dec
push
cmpsl
lods
sub
test
mov
sahf
aad
xchg
jecxz
dec
sarb
or
mov
xor
cmp
cmp
pop
pusha
popa
cld
in
pop
xor
outsl
push
popa
xchg
out
cwtl
loopne
pop
pop
imul
lret
push
inc
stos
push
push
mov
push
jecxz
pcmpeqd
pop
fidivl
add
jnp
divl
inc
xor
adc
aas
stos
add
jo
pop
repz
loope
sub
jl
cmp
cmp
test
lock
xchg
cmp
lret
sub
pop
movsb
inc
loop
outsl
xchg
out
or
ficomps
test
leave
lds
add
dec
negl
out
sbb
in
and
add
out
add
xchg
mov
push
movsb
sbb
imull
sub
loop
mov
push
dec
scas
xor
lea
xor
xchg
mov
pop
stc
jmp
les
aas
sub
xlat
out
jo
xchg
jg
negl
daa
push
neg
test
cmc
cmp
push
aaa
sahf
xchg
xchg
inc
mul
stos
testl
mov
in
inc
jbe
outsb
test
jmp
fsubp
repz
loope
ja
xchg
je
mov
xchg
xor
out
jb
in
inc
xchg
jmp
ret
sbb
sbb
mov
inc
jl
jne
mov
sub
push
inc
sbb
jo
dec
js
xchg
shl
cmpsb
jl
jae
mov
jnp
loope
ja
push
push
pop
loope
sbb
std
loope
rcl
cmp
stos
jmp
mov
add
cmp
shlb
inc
not
repnz
or
pop
jl
testb
test
xchg
pop
insl
je
jp
adc
cmp
and
outsb
fs
cmp
test
jns
xor
mov
inc
inc
mov
lcall
aas
aam
xor
not
adc
push
and
out
je
repnz
jne
xchg
jmp
out
mov
rcr
dec
lahf
daa
push
sahf
ss
or
ret
mov
fildll
and
js
push
jbe
pop
xchg
inc
std
jge
movb
pop
les
mov
enter
xchg
lcall
and
push
not
or
repnz
push
mov
jl
shrb
testl
inc
loope
adc
in
jmp
jge
out
iret
adc
add
stc
daa
dec
mov
je
inc
out
repnz
sbb
movsl
in
out
inc
out
shlb
cmp
outsb
je
jbe
addl
pop
add
cmc
nop
jp
xor
push
outsl
xorl
mov
dec
pop
jmp
sub
add
in
xchg
js
cmp
in
cmc
inc
loopnew
add
add
lods
out
sub
out
push
sub
mov
out
and
dec
aam
ficoms
leave
ljmp
mov
xor
out
jp
je
xlat
nop
ret
xchg
testl
dec
je
inc
and
lahf
push
pop
xor
js
cli
pop
aam
fistps
jno
push
lret
ss
cmp
mov
fs
loope
mov
je
jg
xchg
repnz
loope
orl
mov
stos
or
out
inc
dec
movsb
mov
jl
imul
xchg
push
sbb
repnz
aas
js
mov
add
add
das
cmpsb
pop
fnstenv
in
call
jecxz
ja
loope
sbb
mov
icebp
in
rolb
inc
imul
iret
push
push
or
pop
xor
gs
pop
sub
add
push
int
nop
cmp
mov
xchg
mov
push
jo
mov
outsb
rcrl
je
xor
test
pop
jmp
ja
lock
inc
jb
incb
push
and
and
out
ja
add
sbb
mov
inc
shl
jo
inc
out
test
daa
out
int3
rclb
push
push
out
sahf
inc
fldl
xchg
push
loope
sbb
inc
insl
outsl
xchg
out
jmp
pop
mov
inc
and
jle
daa
movsl
imulb
shl
js
dec
loopne
cmp
out
push
sbbl
cmp
daa
sarb
clc
outsb
stos
adc
icebp
dec
jmp
and
lret
jge
jae
mov
rep
cmc
xor
dec
faddl
jb
and
imul
into
mov
dec
sub
and
sbb
and
jb
mov
fwait
pop
push
mov
loope
pop
and
rolb
shll
ret
jne
push
jecxz
aaa
loope
push
and
inc
sub
mov
idiv
xchg
cmpsl
gs
sbb
ret
lret
filds
movsb
imul
adc
sbb
jo
add
inc
repz
fimuls
sbb
push
scas
js
inc
sbb
leave
push
add
dec
imulb
decb
clc
js
test
inc
mov
nop
in
mov
lock
or
dec
popa
mov
dec
arpl
pop
loop
dec
push
repz
dec
sub
addl
sbb
jo
repz
xchg
std
push
cmc
imulb
hlt
dec
fdivl
inc
sbb
inc
mov
pop
fsubrp
out
test
push
sub
into
jo
test
inc
bound
lods
insb
xorb
lods
or
aas
dec
rcll
xchg
out
movsb
lock
add
sahf
pop
cltd
repz
call
hlt
jnp
inc
inc
and
lds
daa
pop
xor
ljmp
xchg
pop
xor
cmp
pop
not
daa
andb
pop
outsb
xor
cmp
ftst
je
mul
push
sub
movsb
add
sub
jo
push
in
fsubp
roll
fs
sbb
adc
sarl
insb
out
dec
cmp
inc
adc
inc
xchg
roll
repz
ret
push
fmulp
pop
pop
outsl
ret
in
jo
and
xor
loope
test
xchg
dec
mov
leave
jne
not
rcrl
stos
sub
jo
mov
adc
bound
data16
add
pop
lea
cmp
js
repnz
adc
cs
cmp
jecxz
xor
test
inc
ds
aaa
push
or
rcl
fiadds
movsb
outsl
sbb
adc
cli
pop
popf
inc
lods
pop
rcrb
fs
fxtract
sub
and
and
or
dec
or
test
sbb
aam
xchg
mov
rcl
cmp
outsb
adc
jne
xor
ret
arpl
xorl
jecxz
adc
into
cmp
sub
mov
inc
mov
andl
test
push
jle
jl
jg
shlb
insb
jo
push
mov
mov
xchg
mov
ficoms
pop
pop
fstl
inc
rolb
movsl
insb
repz
out
sub
cmp
loopne
xor
fcmove
jo
inc
cmc
inc
xchg
test
aas
andl
jne
sub
ljmp
out
add
xor
add
ret
pushf
outsl
aaa
in
imul
shl
aas
xor
sahf
push
sub
and
shll
push
dec
idiv
xchg
imul
repnz
ret
int
outsb
pop
rol
jl
mov
push
mov
icebp
push
mov
adc
add
and
cmpsl
xchg
mov
aad
cs
add
cmp
rol
pop
ljmp
push
sbb
dec
pop
sub
mov
or
test
rcll
mov
pop
adc
inc
push
push
mov
ds
test
mov
pop
test
xchg
bound
in
inc
xlat
gs
fidivs
ret
xchg
rorl
dec
imul
and
outsb
adc
outsl
add
aaa
add
repz
mov
add
fistl
int
shlb
cmp
xchg
jmp
rcr
sub
sbb
and
outsb
in
xor
ret
jmp
loop
fnstenv
in
dec
push
outsl
sub
and
ret
push
add
adc
mov
js
hlt
sbb
cmpsl
jo
cmp
push
push
jae
dec
out
xchg
mov
dec
jo
xchg
and
in
xorb
adc
ror
roll
ret
inc
xchg
outsl
mov
mov
mov
adc
jo
sbb
jl
call
push
imul
mov
sub
je
bound
push
pop
cmp
and
ljmp
test
add
arpl
and
jecxz
cmp
jmp
shrl
xor
cmp
and
add
add
fsts
mov
mov
mov
sub
shl
dec
ret
lods
add
xchg
fmuls
rcll
movsb
aas
insb
cmp
jmp
and
jmp
leave
ja
aaa
rorl
mov
lret
repz
shll
add
into
ret
inc
movsb
imul
or
add
call
loop
rclb
and
outsb
je
and
xor
xor
test
pop
xor
ljmp
jne
ret
xchg
xor
lcall
cli
mov
mov
aaa
mov
imul
ljmp
adc
lods
shlb
adc
cmp
mov
xor
test
adc
insb
xchg
adc
mov
repnz
mov
imul
inc
out
insb
jo
push
ja
in
pop
into
lock
dec
pop
and
test
xor
add
mov
ret
filds
sub
mov
lret
movsb
push
ljmp
inc
mov
xor
add
cmp
nop
xor
popa
xchg
imul
or
and
leave
out
dec
sbb
or
inc
stc
gs
mov
mov
inc
js
ret
inc
bound
ds
lfs
jb
mov
or
add
dec
ljmp
push
or
in
or
and
xchg
mov
cld
sahf
cwtl
dec
hlt
outsl
push
gs
jne
daa
xor
xchg
cmp
mulb
and
pop
scas
jmp
loope
push
iret
add
fs
movhps
sub
jmp
xchg
addl
out
push
jne
movsb
rcrl
sbb
adc
xchg
int3
xor
adc
into
fnsave
mov
fwait
push
or
bound
fdivp
out
lods
xor
add
jo
xchg
mov
pop
cmp
sti
jmp
gs
jne
ret
jbe
or
fbstp
ret
add
shrb
adc
inc
push
fimull
sub
cmp
cmp
jb
jmp
or
mov
test
fidivs
xor
orl
mov
jecxz
ret
xchg
movsb
in
xor
mov
pop
mov
test
or
jmp
or
mov
mov
ljmp
test
test
jg
add
scas
mov
aam
leave
sbb
or
push
sarl
ret
in
add
mov
cmc
adcl
repz
ss
out
dec
mov
sbb
pop
cmp
inc
xchg
hlt
or
pop
insb
dec
frstor
test
mov
or
xor
ljmp
xchg
test
sar
daa
ret
jnp
cmc
pop
add
cmp
xchg
dec
push
fisubs
lret
rep
lret
hlt
shll
xor
pop
mov
and
into
pop
add
lahf
sub
push
test
add
ss
insb
xor
mov
popa
jo
mov
test
testl
je
inc
hlt
mov
pusha
jo
and
int3
inc
xchg
test
loop
xchg
dec
and
shlb
jne
jecxz
adc
and
mov
adc
mov
sub
dec
and
mov
loopne
and
jb
sbb
sti
bound
js
in
xor
mov
roll
xchg
or
push
dec
loopne
cld
and
outsb
or
pop
xchg
jmp
lcall
mov
xor
add
sub
gs
popa
pop
cltd
hlt
xchg
insb
insl
and
aaa
xor
push
mov
incb
mov
jne
shll
sti
outsb
mov
ret
scas
shlb
adc
inc
test
repz
or
test
loopne
mov
push
add
dec
adc
mov
test
gs
outsb
xor
mov
lods
mov
test
lret
repz
cmc
push
ss
ror
add
inc
rcll
mov
pop
xchg
repnz
daa
xor
sub
cmp
dec
sub
xchg
repz
gs
rcll
push
pop
add
cmp
mov
ljmp
mov
cmp
in
insl
shl
jo
inc
mov
movsl
push
test
xor
ficomps
test
jo
xchg
cmpsb
gs
bound
jecxz
jne
rcl
mov
mov
aas
mov
jmp
sar
stos
dec
sub
sub
mov
cmc
sub
shll
add
pop
daa
dec
gs
pusha
jne
lret
sub
sbb
inc
cmpsl
mov
jne
shll
ret
jbe
jp
xor
ljmp
or
bound
push
inc
adc
stos
jmp
xchg
and
lret
shll
mov
out
pop
ficoms
call
mov
repz
push
insl
jmp
sbb
gs
inc
bound
push
fidivs
loopne
repnz
fwait
xchg
gs
add
jne
inc
mov
xor
lret
sti
cmc
out
cmc
push
add
not
push
not
xchg
cmc
btr
dec
cmp
push
movzbw
shrd
shr
call
cmpsb
stos
cmp
gs
in
sub
push
in
repz
xchg
xchg
inc
repz
das
pop
out
stos
das
rcl
fcompl
fs
repnz
lcall
jg
test
int3
shrb
push
scas
xor
push
pop
dec
push
idiv
insb
xchg
int3
adc
cld
das
lea
leave
int
dec
jecxz
xchg
jge
ficoms
repz
aaa
xlat
andb
jnp
aad
sbb
adc
rcr
or
leave
sar
add
dec
shl
movl
xor
mov
add
push
test
cmp
pushf
pusha
lea
jbe
not
adc
sub
rcr
adc
mov
dec
pushf
mov
dec
add
shl
xchg
shrd
shr
adc
mov
shl
mov
clc
sub
add
jmp
xchg
mov
pop
not
movzbw
jmp
icebp
shll
mov
scas
cmp
inc
rorl
fisubs
jge
mov
subb
cs
sbb
mov
mov
push
jg
pop
inc
xchg
lret
mov
jg
int3
imul
inc
pop
stc
and
xchg
push
aad
pop
xor
xchg
rcl
dec
shlb
mov
or
and
add
pusha
lea
jmp
jmp
dec
shlb
xlat
inc
mov
decl
xor
lahf
pop
out
jno
leave
jae
loop
clc
dec
add
incl
inc
jecxz
int
xor
out
cltd
movsl
xchg
icebp
cwtl
mov
pop
cmp
mov
nop
lods
orl
sarb
sbb
clc
mov
cmp
mov
in
jns
imul
out
dec
imul
bnd
lret
imul
dec
iret
jbe
clc
sti
dec
mov
jae
xchg
xchg
mov
jns
int3
jo
mov
ret
stos
add
sub
jmp
pushf
pusha
cmpb
jmp
and
lods
aaa
fsts
dec
rcrl
pop
ljmp
xchg
xor
mov
pop
push
andb
pop
sbb
fildll
cmpsb
or
out
xor
out
mov
scas
leave
int
jno
mov
loop
sahf
inc
scas
add
cmpsl
rorb
pop
insb
sub
jbe
push
push
mov
pop
sbb
add
xchg
pop
add
arpl
mov
xchg
and
xor
sub
jnp
mov
add
ret
push
and
xchg
push
add
pop
loop
in
outsl
idivl
mov
fdivrp
mov
pop
dec
or
and
or
jl
loop
clc
dec
mov
sbb
rcr
cmpsb
push
adc
mov
data16
cltd
inc
ljmp
andb
jo
cmc
ret
mov
add
bnd
pusha
lret
xchg
sbb
sub
push
cli
test
jbe
add
test
imul
ficompl
adc
push
mov
adc
sbb
push
adc
pop
cmpsl
lds
push
cld
imul
push
hlt
mul
cld
push
push
adc
mov
xchg
cmp
lock
test
and
sti
pushf
pop
cmp
xor
xor
leave
jo
ret
scas
push
stc
mov
ret
mov
loope
movw
bt
mov
cmp
test
push
jmp
pushfw
cmp
neg
mov
stc
stc
xor
stc
rol
clc
push
not
jmp
xor
xchg
pop
shrl
xor
or
cmp
dec
aad
ljmp
aaa
xlat
push
jbe
aas
rolb
xor
and
popa
inc
cmp
xchg
test
mov
dec
mov
jl
enter
dec
lcall
test
or
pop
mov
push
shll
mov
xchg
xchg
cmp
ja
clc
cmp
shlb
adc
fldenv
push
sti
push
lahf
or
lods
ret
push
stc
mov
mov
add
sti
inc
rcrb
or
orl
or
repnz
aaa
loope
cmc
les
in
jb
hlt
fidivrl
inc
pop
xchg
sbb
inc
les
push
repz
xlat
andl
int3
sub
fbld
lds
add
clc
lds
and
cmp
mov
fcmovb
pop
dec
clc
gs
pop
cmpsl
arpl
cmp
imul
rcl
pop
bound
cmpsl
xor
mov
cmpsl
inc
inc
fisubs
sub
cmp
push
iret
push
pop
add
mov
jmp
sarl
adc
lds
and
adc
pushf
and
xor
inc
into
push
xlat
push
loop
out
jp
xchg
iret
jle
inc
insl
push
adc
or
cmc
ja
jo
aad
cmp
mov
sub
arpl
and
sbb
jg
mov
mov
xchg
cmpsl
ljmp
pop
cmpsb
xor
ss
mov
xchg
cmp
xchg
sarb
outsb
sbb
lds
or
incl
push
js
fcomps
jae
js
test
push
fwait
inc
jmp
mov
dec
ds
mov
jbe
stos
lock
adc
and
jns
aad
and
mov
sub
push
cmc
cmp
jb
int3
and
dec
push
cld
loope
sub
sbb
pop
sbb
nop
adc
aaa
xchg
call
cmp
xchg
or
sbb
clc
popf
dec
in
xchg
inc
out
popf
adc
mov
loop
adc
mov
pushf
test
jmp
or
jbe
cwtl
jmp
mov
outsb
out
jbe
orl
and
jo
push
jae
xchg
cmpb
xor
or
aam
testb
mov
mov
cltd
popf
inc
or
lock
add
xchg
xor
adc
cmp
mov
sbb
and
icebp
xor
jns
popa
bound
fisttpll
or
stos
push
cmc
bound
cmp
jl
aad
daa
sarb
ret
mov
cmc
int
ja
sbb
call
push
fldenv
jb
jp
xchg
push
cltd
inc
jmp
pop
push
jb
cmp
jp
pop
dec
mov
jae
mov
lods
xor
mov
sub
inc
mov
dec
loope,pn
cld
pop
sbb
mov
jnp
adc
mov
and
popa
mov
stos
imul
addl
push
pop
mov
cmpsb
adc
mov
leave
je
call
pop
fisttpl
sbb
dec
xchg
les
cltd
mov
xorb
popa
cmpsl
and
xor
out
lea
pop
fbld
scas
sbb
xlat
sub
int3
sbb
and
jmp
push
dec
icebp
repz
ds
mov
cmp
push
cwtl
sbb
xlat
jp
int3
in
xchg
jp
mov
pop
mov
cmp
and
xchg
xor
outsl
push
mov
cli
mov
mov
not
sub
inc
or
lea
stc
sub
bt
pushl
popl
cmp
push
push
cmp
jmp
call
insb
jno
xchg
popf
add
xchg
jbe
mov
ss
pop
jmp
fwait
pop
movsl
es
in
std
inc
loop
leave
jmp
and
pushf
add
pop
lds
sub
test
dec
xchg
xor
xor
lock
std
push
cmpl
aaa
popa
sbb
out
mov
call
andb
jno
shrb
pop
movsl
adc
enter
test
scas
push
ret
clc
movsb
push
lret
pop
jmp
xchg
adc
cmpsl
sti
orb
int
das
leave
inc
daa
pop
movsl
popa
add
les
pop
les
int3
pop
mov
cmpsl
dec
dec
ret
adc
scas
les
add
ljmp
popa
sub
aam
xor
stc
cmp
call
xchg
aam
push
mov
lret
in
scas
push
arpl
ja
insl
pop
test
leave
add
andl
add
adc
leave
jle
stos
pushf
lahf
mov
jmp
push
jmp
mov
movsbw
bswap
movzbw
mov
pusha
movb
lea
jmp
pushf
lea
jne
mov
movzbw
lahf
cwtl
movb
pusha
pusha
movzbw
bswap
mov
call
in
iret
pop
jecxz
xor
dec
mov
jns
mov
xchg
sbb
mov
push
mov
adc
inc
gs
mov
sub
dec
enter
addr16
insb
sbb
aas
addb
mov
mov
addl
cmp
subb
adc
lret
arpl
leave
neg
movl
call
add
add
lahf
movsb
sub
pop
lds
arpl
rcrb
gs
aaa
fistps
out
mov
ret
adc
mov
xchg
mov
sub
or
fldcw
push
inc
loop
xchg
das
cs
addb
dec
stc
cmpsl
dec
lock
cmp
mov
aam
adc
lret
aad
sub
call
arpl
push
notb
pushw
js
rolb
imul
pop
mov
mov
movsl
popa
jmp
pop
sti
icebp
xchg
shrb
lea
jo
adc
scas
lahf
loop
mov
movsb
xchg
sti
and
push
jb
scas
ret
test
out
and
inc
inc
in
mov
addr16
add
jl
inc
cli
mov
push
sub
cltd
aas
sub
dec
ror
jp
inc
pop
cmp
out
or
hlt
push
into
stc
lahf
xor
sub
decl
rcrl
cmp
mov
xlat
js
enter
cmc
lret
dec
ss
fs
jne
mov
jmp
push
push
stos
pushl
mov
lea
jmp
pushl
bt
repnz
jmp
xchg
cwtl
pop
mov
loopne
cld
mov
insl
hlt
js
mov
cltd
cmp
add
mov
fwait
push
mov
aaa
loop
inc
sub
cmpb
sub
icebp
lahf
sub
cmpsl
push
out
lcall
and
jo
adc
lret
fadd
add
push
xor
adc
cld
jge
nop
adc
and
push
xor
sti
loop
stc
into
mov
pop
aad
andb
push
iret
loop
add
sub
adc
inc
es
adc
hlt
jbe
mov
jecxz
xor
insb
adc
int3
das
sbb
idiv
aaa
popl
movb
cmp
pushf
jmp
pushf
call
lea
jl
mov
push
pushf
jmp
bound
outsb
pop
test
popa
mov
movb
mov
addr16
scas
iret
jno
loop
adc
jecxz
enter
pop
ret
jg
js
and
sbb
insb
pop
test
ret
fnstenv
sub
mov
mov
repz
fdivrs
cmc
int3
inc
sub
out
hlt
jns
movsb
adc
sbb
inc
enter
in
xchg
adc
loopne
add
mov
push
ret
mov
cmp
push
loop
dec
fbld
lds
pop
stc
addl
xor
jge
pop
inc
pop
xchg
insb
bound
pop
cmp
xchg
aam
xchg
xor
or
adc
sarb
icebp
mov
jle
mov
leave
dec
lret
insl
fmull
jbe
xor
sahf
inc
push
sub
pop
mov
sti
mov
jmp
sub
cmc
int
aad
shlb
ret
sub
stos
sub
push
fdivrs
popa
add
loop
push
cld
out
sub
jge
bound
sar
add
push
adc
inc
pop
ret
adc
negl
imul
arpl
push
sti
adc
int
test
xor
adc
inc
iret
dec
rclb
pusha
loope
out
cmp
nop
sbb
call
lds
rorl
pop
dec
sbb
scas
push
lds
push
scas
testl
sub
mov
sbb
cld
mov
jno
mov
fadds
clc
cmp
addr16
xor
add
dec
test
push
add
loope
cmp
ja
enter
mov
lea
jne
call
lea
je
jmp
jmp
cmc
push
cmpb
push
call
cmc
movb
test
mov
jmp
mov
call
lods
mov
mov
jb
sbb
pop
in
call
xchg
sbb
cmp
push
out
xchg
jo
add
push
cli
lock
aam
dec
cli
cld
ret
cmp
sti
xchg
mov
js
pop
mov
inc
test
jg
setl
xchg
cmp
or
addb
mov
lea
or
test
hlt
mov
cmp
sti
ds
mov
mov
clc
test
aas
loope
xor
mulb
fwait
cmp
outsb
adc
in
adc
iret
mov
pop
cmp
inc
out
xor
cwtl
push
aad
in
repz
xchg
xchg
adc
inc
loop
jo
or
jb
mov
fdivr
dec
mov
loop
jns
movsl
insb
push
xor
mov
xchg
mov
ds
cltd
inc
call
and
jl
int
cmc
iret
nop
jp
xchg
jne
mov
adc
sbb
and
dec
shll
arpl
outsb
sbb
scas
cltd
jle
loopne
ret
aaa
fstps
ret
pop
lods
sub
shrl
add
loop
pop
std
fisubl
call
icebp
int3
mov
cmpsb
arpl
pop
out
popf
jmp
mov
iret
dec
les
mov
push
hlt
fwait
mov
lods
ss
loope
outsb
adc
jb
imul
cmp
jge
lahf
sbb
jno
lcall
call
cmp
fwait
mov
push
jge
add
sub
stc
lahf
or
in
jp
cmp
push
adc
insl
fistl
cmp
outsl
or
addl
call
sahf
imul
jle
inc
lret
outsl
adc
pop
jnp
xchg
cmp
xor
cltd
cmp
inc
mov
int
pop
jmp
es
ret
clc
mov
xlat
mov
xchg
adc
push
fwait
inc
in
xchg
cmp
jle
aad
adc
shrb
xlat
popa
add
rcrb
ja
orl
sbb
dec
in
xchg
mov
ja
adc
test
aaa
xlat
idivl
sub
add
dec
push
cmc
sub
jle
pushf
dec
mov
cli
adc
xor
ret
lods
push
daa
mov
mov
add
out
cmp
adc
shlb
pushf
push
lea
je
call
xor
mov
out
mov
in
repz
xchg
push
xchg
and
push
cli
xor
push
in
mov
xorl
xor
push
push
insb
xchg
lds
dec
and
lret
imul
addr16
xlat
js
int3
jns
enter
gs
rcll
add
add
mov
stc
sar
add
sbb
bts
adc
sar
mov
cmp
shr
call
mov
mov
jle
mov
xchg
pop
mov
cmp
jb
xor
adc
cli
jb
pop
sbb
test
lods
cmp
popa
push
mov
lret
adc
std
add
xor
outsl
pop
or
fidivl
xlat
or
cmp
idivb
xor
loop
xlat
inc
mov
mov
lock
cmp
in
and
aam
movsl
push
jns
xchg
sub
lods
stc
jle
sub
xchg
out
sbb
push
mov
add
out
cmc
shrb
fdivr
test
push
call
rep
call
sbb
add
adc
dec
lea
xchg
sbb
out
lock
xor
adc
pop
fistpl
cmpsb
dec
icebp
push
mov
mov
mov
sub
jnp
mov
fisttps
xor
pop
inc
js
push
and
sbb
add
js
inc
mov
hlt
clc
aas
neg
aam
fadds
and
iret
adc
pop
push
cmpsl
jge
outsl
dec
inc
mov
adc
into
sub
fcomp
jle
decb
pop
add
out
xchg
aaa
fistl
cmc
rcrb
bnd
clc
jno
into
cmp
mov
mov
ret
dec
lock
sarl
cli
push
jp
xor
jno,pn
aaa
ret
dec
ret
in
xchg
mov
js
mov
mov
push
cli
cmp
mov
push
cmp
pusha
repnz
fmull
rcr
mov
jae
jns
lods
pop
enter
and
cmp
and
cmp
push
rorl
js
sti
jl
stos
push
jne
sbb
fwait
xchg
incb
jbe
imul
sarb
jno
mov
inc
jmp
xor
dec
mov
lret
outsl
int
sub
mov
mov
dec
mulb
nop
ss
test
andb
jmp
push
mov
sbb
leave
ja
add
ss
ret
fimuls
das
xlat
xchg
adc
pop
test
inc
repnz
enter
ja
pop
jno
xchg
xchg
stc
lcall
shll
cmc
aam
pop
bound
jmp
clc
mov
iret
adc
das
mov
arpl
mov
sahf
imul
dec
mov
loope
adc
call
fsubrl
push
mov
push
repz
inc
movsl
hlt
mov
pop
and
repnz
mov
lret
push
adc
mov
mov
out
xchg
lock
bound
and
xchg
push
pop
addr16
int3
jo
and
push
fimull
into
outsl
adc
adc
aam
add
pushf
inc
mov
arpl
stc
mov
gs
xchg
out
mov
mov
xchg
push
in
mov
shl
jb
push
loop
xchg
dec
insb
sbb
push
iret
mov
push
mov
dec
sbb
mov
fadds
mov
adc
aam
or
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
insb
divb
mov
hlt
jae
mov
fwait
daa
lods
xor
inc
push
mov
je
imul
aam
mov
out
inc
mov
mov
loop
sub
imul
jnp
repz
pop
inc
loope
ss
sbb
addb
ljmp
push
adc
lret
push
adc
jne
lea
mov
sub
testl
fwait
jnp
mov
or
in
xchg
adc
aad
inc
add
jbe
bound
jge
mov
mov
dec
loop
fcmovb
mov
pop
push
roll
loop
push
mov
xor
outsb
or
mov
lea
mov
add
out
adc
aad
xchg
push
aaa
sbb
and
sub
fs
testl
mov
in
xlat
sbb
lcall
push
push
dec
mov
jnp
pop
jns
sarb
and
mov
call
and
insb
push
mov
imul
call
in
std
pushl
cmc
xorw
pop
jnp
xchg
xchg
sbb
es
pop
inc
out
sbb
fcmovnb
add
sbb
dec
icebp
mov
lcall
scas
pop
cmc
loope
iret
sbb
jno
lea
xchg
add
mov
and
xor
jns
and
xchg
std
popf
test
andb
mov
cld
mov
std
cmpsb
mov
fwait
cmpsb
adcl
and
insl
push
lods
push
add
mov
push
lcall
icebp
pop
add
push
or
mov
jns
and
push
in
mov
and
jns
loop
push
xchg
insb
sbb
cli
cs
adc
popf
or
push
das
int
lock
cmp
subb
sbb
test
shlb
mov
inc
dec
xlat
gs
jo
jle
test
mov
shl
adc
xchg
lret
inc
mov
cmp
lret
je
xlat
inc
imul
fsub
fdivrl
fsubl
fadds
xor
dec
cmc
pushf
dec
hlt
cltd
cmp
subb
cmc
xlat
pop
inc
add
lret
xor
pushf
clc
sub
call
test
scas
and
jp
inc
movb
ficompl
data16
jne
lods
push
push
scas
into
jne
jge
sarb
or
or
loopne
sbb
test
cmpl
push
sub
xor
loopne
lea
in
inc
xchg
fisubs
sbb
scas
pop
es
xchg
push
fdivrs
and
inc
in
lcall
pop
lds
cmc
fcomp
movl
lods
push
js
inc
lret
pop
ljmp
cmpsl
xchg
add
seto
pop
sub
stc
test
and
sbb
dec
pop
xchg
add
mov
pop
xor
shlb
mov
addr16
jb
iret
arpl
dec
mov
adc
add
xchg
fcomps
nop
cmp
clc
gs
loopne
call
es
aaa
orl
das
and
add
xor
jg
ret
jno
les
cmc
fdivrs
and
scas
jmp
pushf
movl
pushf
pushf
pusha
movl
pushl
mov
lea
jmp
push
pushf
lea
jne
shrd
not
mov
cmp
bt
clc
add
jmp
call
jno
jle
xor
dec
or
sub
cmp
dec
iret
pop
add
jo
arpl
cmpsb
dec
in
mov
sbb
jl
push
push
popa
scas
cmp
out
aas
jmp
sub
lock
dec
in
cwtl
cmp
test
adc
fprem1
mov
jl
inc
pusha
mov
dec
pop
xchg
push
mov
cmp
inc
rorb
dec
repz
movsl
and
dec
xor
dec
das
jb
cmp
outsb
adcb
dec
scas
or
inc
ds
jecxz
mov
inc
jp
or
fnsave
mov
mov
jnp
lea
cs
insl
cs
fsubs
xor
jo
or
push
mov
pusha
bound
pop
xor
or
lods
dec
mulb
fidivl
adc
das
add
stc
pusha
rol
movl
call
call
lods
lock
mov
std
xchg
pop
jbe
jne
movsb
xor
inc
fdiv
push
int3
dec
movsb
adc
sub
jb
pop
into
movsb
sbb
pop
push
cmpsb
cmp
les
mov
xchg
add
xchg
mov
sub
out
xor
pop
jno
movsl
xchg
xchg
test
or
mov
fistps
mov
test
xor
inc
aad
ret
inc
inc
les
adc
jmp
or
push
enter
lods
push
jmp
mov
inc
inc
cmp
rcl
out
imul
aaa
dec
jmp
adc
std
mov
mov
stc
clc
fiadds
inc
push
cmp
mov
and
or
into
subl
ret
jnp
add
out
insb
mov
arpl
enter
call
in
add
push
dec
pushf
call
lea
jae
pushf
bts
mov
test
sar
mov
ror
sub
mov
pusha
sub
clc
bt
repnz
push
push
lea
jne
inc
bswap
lea
mov
jmp
sbb
test
arpl
jle
test
scas
xor
pop
loop
or
loop
dec
stos
xchg
mov
mov
test
push
push
pop
divl
jne
mov
pop
cmp
cmp
andb
je
lret
rcrb
or
push
or
int3
ss
mov
xchg
and
aas
jecxz
mov
ss
adc
outsl
andb
push
xchg
fnstsw
push
mov
pop
lahf
out
add
inc
out
stos
cmpsb
inc
mov
sarb
sbb
sub
xor
fdivrl
cmp
inc
cltd
fimuls
jp
sub
stmxcsr
popf
dec
mov
popa
imul
sbb
xchg
dec
dec
pusha
cmpb
stos
sbb
mull
inc
xchg
sbb
scas
sti
xchg
shlb
mov
push
mov
adc
fadd
lods
out
mov
pusha
pusha
cmp
add
add
js
test
pusha
cmc
movzwl
cmc
neg
movzbw
xor
mov
jmp
movw
mov
clc
test
pushl
movb
test
call
lea
jbe
bsf
pusha
shl
and
mov
ror
neg
cmc
add
btr
shld
bsr
mov
bsr
add
movzbw
bswap
neg
movl
btc
shl
mov
cmc
push
mov
push
cmp
jmp
lea
jne
shl
ror
ror
bsr
mov
call
pushl
popl
cmp
movb
cmp
push
pusha
lea
ja
cmc
cmp
sub
pushf
lea
jmp
aaa
sbb
xchg
xchg
sti
ds
dec
aam
jecxz
out
jb
js
xchg
xlat
adc
jo
fisubrs
jbe
cmpsl
dec
mov
jge
dec
or
xor
mov
push
mov
cmpsl
inc
jmp
cmc
frstor
inc
in
scas
xor
stos
aaa
mov
pop
loop
cmc
js
shl
scas
out
lahf
test
shl
cmc
inc
xorl
aam
out
test
mov
iret
adc
cmc
lret
jo
push
or
xor
sbb
ljmp
loope
and
sbb
movsl
inc
in
xchg
cmp
xor
jge
ret
adc
fiadds
call
fwait
jge
mov
jle
sub
dec
into
push
in
icebp
xchg
cmp
push
loop
mov
jmp
shr
mov
pushf
xlat
jmp
fucom
addr16
or
in
xor
sbb
mov
clc
movsl
dec
out
xchg
aaa
loope
xor
js
adc
fsubp
int3
jb
xchg
xchg
sbb
dec
insb
pop
scas
push
inc
je
add
lods
push
ljmp
adc
outsb
mov
mov
ss
lock
add
or
dec
outsl
sbb
xchg
inc
daa
adc
andl
pop
lods
int
sti
std
popa
or
out
sub
das
jb
out
clc
lcall
jge
mov
lcall
addr16
bnd
fwait
inc
sbb
sti
mov
push
cld
sbb
and
ret
jnp
cld
or
mov
cli
lahf
fstl
mov
outsb
loop
and
in
mov
arpl
jmp
pop
and
push
inc
mull
imul
bnd
and
push
jnp
or
mov
shr
xor
push
mov
bound
jle
sarb
mov
clc
push
sahf
inc
scas
imul
mov
xor
in
ljmp
sub
enter
gs
lods
push
mulb
add
xor
cmc
jns
xor
aas
test
adc
pop
mov
insl
test
mov
test
pop
in
mov
and
sarl
loop
mov
insb
sbb
inc
mov
dec
or
pop
aam
movsl
es
jbe
lret
insl
push
mov
or
cmc
loopne
dec
xchg
test
pushl
cmp
jmp
jmp
hlt
stc
test
lods
andb
arpl
mov
cwtl
cmpsb
and
ret
fwait
jl
cmpsb
lock
and
lods
out
fwait
mov
pop
int3
js
fwait
or
xor
cli
fwait
xor
ret
aam
and
jb
inc
jmp
in
pop
mov
testb
lret
popf
dec
repz
inc
ljmp
adc
loopne
aad
pushf
lea
jae
lea
sbb
mov
shl
mov
bsf
rol
mov
pusha
cmp
mov
cmc
xor
call
add
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
xor
lods
mov
ss
inc
int3
dec
rcrl
std
cmpsl
push
movsl
dec
es
lret
push
sti
jl
arpl
nop
xor
xchg
imul
outsl
sbb
repnz
mov
cld
aas
xchg
clc
stos
scas
imul
dec
or
mov
mov
xlat
repnz
int
leave
xlat
int
mov
out
test
stc
mov
inc
dec
in
imul
test
adcb
inc
dec
negl
das
jne
xchg
push
adc
ljmp
insl
or
mov
daa
push
xchg
repnz
push
rclb
pop
ljmp
mov
mov
jmp
push
push
icebp
ds
cmpsl
arpl
adc
push
mov
idivb
cmp
ftst
aas
inc
inc
addl
aad
sub
add
test
mov
call
das
add
cld
or
inc
lret
int
pop
pop
aad
scas
push
repz
cmp
lea
fisttps
adc
loop
rclb
sbb
or
aaa
mov
mov
imul
push
mov
aaa
jb
mov
and
sbb
test
cmpb
sub
in
cli
pop
js
call
add
inc
call
cmc
loop
jmp
adc
mov
popa
mov
sbb
dec
int3
dec
sarl
out
loop
push
out
imul
jne
dec
mov
push
data16
mov
pushw
sarl
insb
pop
xlat
jge
cmpl
mov
int3
jns
lret
jbe
shlb
push
add
or
incb
call
jmp
movb
push
lea
jae
pushf
mov
pusha
inc
not
setp
mov
push
lea
call
pusha
mov
push
adc
mov
mov
push
lea
jae
jmp
lea
ja
push
push
pushl
pusha
lea
jb
jmp
lea
jne
movsbl
shld
shld
mov
cmp
sub
call
in
icebp
jg
stos
cmpl
cmpsl
sub
push
mov
pop
adc
push
rep
dec
xchg
gs
or
insl
fs
andl
dec
addb
sbb
and
stc
mov
insb
gs
push
stos
sbb
and
insl
sbb
je
rcrb
pop
in
jp
mov
call
lahf
pop
in
jno
cwtl
aas
in
xchg
cmp
xchg
ss
sub
in
daa
push
les
jbe
and
cmp
jns
mov
push
xchg
push
cmpsl
dec
cli
sbb
mov
adc
and
dec
jmp
subl
xor
lock
inc
pop
into
lret
cmp
cmp
ret
mov
cmp
jl
and
mov
push
xchg
icebp
cmp
cmp
cltd
and
jo
pop
fldt
xor
aas
sbb
loopne
mov
je
or
fwait
and
push
test
out
xchg
cmp
mov
cmc
in
xor
btc
lea
sbb
bt
mov
push
call
inc
inc
dec
xor
cs
insb
add
fs
jne
sub
or
sub
jmp
adc
jne
stos
xor
enter
pop
fisubl
jne
jl
addl
push
loop
and
int
xchg
aas
in
jl
mov
fstpt
in
int
es
xor
mov
rcr
mov
loope
xor
jp
sahf
stos
dec
sbb
sbb
adc
jmp
mov
add
call
in
fistps
push
mov
jle
sub
dec
int
loop
jmp
dec
cmp
es
inc
mov
es
ljmp
ret
adc
jae
dec
nop
mov
fildl
addr16
jno
mov
sti
ja
pop
imul
push
dec
out
fwait
dec
out
xchg
ds
sbb
cmc
in
sbb
cmp
xor
adc
in
js
jge
test
pop
mov
ja
inc
dec
xchg
addb
popa
or
sub
mov
cli
cld
push
mov
fcoms
stos
aam
cs
fists
and
jp
xchg
lcall
mov
jmp
icebp
arpl
xor
mov
ds
jmp
popa
jl
xor
dec
pop
dec
xchg
inc
lods
pushl
mov
cmpsb
xchg
out
xor
adc
jp
mov
inc
sbb
pop
clc
push
cwtl
push
les
sarl
into
adc
imull
inc
enter
pushf
call
or
push
hlt
xchg
cmp
adc
out
rorb
icebp
jne
lahf
or
adc
push
lcall
inc
int3
push
aam
push
scas
add
lret
dec
aaa
inc
add
test
inc
addl
push
out
xchg
dec
dec
out
lock
jge
adc
stc
sub
sbb
add
pop
lahf
iret
gs
movsl
push
std
sbb
jns
add
jmp
stos
or
lahf
lods
push
pop
sbb
mov
insl
sub
add
xchg
aad
adc
out
sub
mov
inc
mov
into
push
fcoms
imul
add
xor
adc
jle
insl
push
cmp
sahf
inc
bound
xchg
adc
push
nop
loopne
lods
imul
jmp
in
pop
xchg
add
insl
mov
sti
add
jmp
xchg
add
jmp
or
mov
jmp
insb
sbb
fidivrl
leave
jne
shll
cmc
out
mov
dec
push
push
add
xchg
dec
rclb
jecxz
hlt
orb
adc
rol
xor
jge
adc
mov
aas
inc
xor
loope
mov
rcr
adc
les
mov
rcrl
push
cld
imul
pop
cmc
cmp
add
stos
push
jo
dec
aam
xchg
mov
mov
ljmp
lea
enter
lret
adc
in
fwait
or
push
rcrb
jno
ret
mov
add
adc
call
popf
and
pop
jno
xor
dec
rcrb
push
js
lea
push
xor
xlat
xor
pop
mov
or
cs
mov
jl
nop
std
pop
push
pusha
add
aas
and
ss
nop
adc
sub
pop
mov
push
lock
in
aaa
fisttps
ret
insb
or
adc
call
aas
int
out
pop
xor
xor
pop
loope
in
ja
mov
lea
mov
adc
push
jmp
mov
jmp
loop
push
movsb
adc
and
add
test
mov
push
stos
dec
cmc
sahf
inc
in
cmc
call
loope
call
sub
sbb
mov
imul
xchg
inc
in
fistl
xor
leave
mov
mov
js
sub
loope
push
and
sub
shl
push
and
fucomip
rcr
mov
out
add
inc
cmp
adc
cmpsl
push
adc
cmpsl
push
repz
inc
jmp
sub
lcall
jl
xor
lds
jb
mov
fwait
sbb
inc
repz
outsl
mov
fucomip
rcll
mov
and
loop
mov
xor
dec
sub
mov
mov
adc
pusha
lods
cmp
test
fildl
shlb
adc
jmp
inc
stc
pushf
lea
jno
bt
shr
jmp
mov
inc
ret
bound
lods
push
mov
out
jno
test
lahf
sub
push
cli
cltd
mov
rcll
adc
adc
xchg
cwtl
xor
iret
pop
repz
enter
sbb
scas
adc
lahf
inc
inc
mov
out
and
xchg
outsl
sub
lcall
pop
add
cltd
cmp
lcall
jne
push
outsl
adc
fists
fdivrs
adc
inc
xchg
fimull
sarl
into
jno
adc
ljmp
cmp
cmp
adc
pop
out
cmc
js
xchg
pop
sahf
sub
push
add
xor
andl
cli
mov
pushf
je
stos
leave
das
mov
iret
cmpsl
popf
mov
stc
and
scas
mov
int3
push
mov
shlb
pop
int3
je
lds
pop
jl
mov
mov
inc
push
sarb
xchg
aas
add
push
push
xor
mov
out
xchg
sarl
push
loopne
pusha
or
shrl
roll
dec
shl
xchg
adc
rcrl
or
loop
adc
jmp
das
jb
mov
add
pop
mov
inc
rclb
pop
in
adc
pop
adc
ds
loop
inc
out
inc
ret
inc
loop
addr16
cmp
repnz
mov
pop
stc
cwtl
inc
ljmp
je
cmc
jmp
mov
add
pusha
mov
jmp
mov
push
call
repnz
cmpsl
rorb
pushf
sub
pop
out
clc
fwait
inc
arpl
jno
mov
in
mov
mov
jno
xchg
das
fwait
sti
inc
sbb
incb
add
add
dec
int
shll
cmpl
clc
fwait
adc
dec
xchg
sbb
and
mov
std
lahf
inc
in
cltd
inc
call
xchg
push
std
cmp
pushw
popfw
push
call
lods
push
mov
inc
test
in
idivb
adc
addr16
cs
in
dec
xor
js
jg
add
jg
mov
pop
decl
push
mov
mov
mov
or
mov
out
outsb
cs
adcb
clc
dec
into
push
popf
inc
sbb
movsb
lock
dec
repnz
inc
ljmp
jbe
cmc
in
mov
cmpsl
add
pusha
lea
jb
push
stc
cmc
cmp
movl
call
xor
cmp
repnz
movb
movb
jmp
jmp
pushf
pushf
pushf
mov
pushl
call
cmp
mov
lea
jae
pusha
jmp
push
lea
jne
jmp
bt
test
repnz
call
pusha
lea
jne
lahf
call
push
cmp
imul
je
jae
xchg
adc
pop
cmc
pusha
adc
in
adc
fdivrs
mov
dec
fsubs
xchg
inc
in
nop
xchg
cmp
sub
xor
or
mov
sbb
push
mov
inc
out
sti
jb
cld
iret
imul
dec
enter
mov
sub
mov
nop
cmpxchg
lahf
mov
in
add
jge
clc
mov
imul
jmp
dec
in
cltd
cmp
jg
int
adc
ret
push
jb
incb
out
xchg
adc
and
dec
leave
dec
int
sbb
jbe
loop
int
sbb
jge
mov
movsb
sub
shl
addr16
or
fwait
roll
dec
fwait
shrl
xchg
je
xchg
cmp
jge
les
mov
out
mov
lea
jmp
push
movb
movl
pushl
push
pushl
pushf
movl
pushf
lea
jmp
mov
adcb
push
js
mov
xchg
sbb
push
ret
fcompl
push
adc
and
andl
arpl
push
inc
mov
cmp
or
sbb
jb
pushl
in
frstor
and
lock
stc
mov
insb
mov
cmpsb
add
or
adcl
adc
push
xor
add
scas
or
mov
aad
and
jb
mov
adc
out
subl
sbb
repnz
cld
bnd
test
push
lahf
push
mov
sbbl
sbb
sub
mov
sub
pop
xor
sub
dec
jnp
imul
mov
addr16
into
jno
xchg
xchg
mov
lea
cli
push
addb
pusha
or
push
movsb
dec
out
test
mov
pop
and
and
mov
lea
lods
push
jmp
or
mov
fildl
sarb
orl
test
movsb
daa
push
pop
and
mov
push
and
and
setge
sbb
leave
sub
pop
les
mov
jns
out
test
scas
xor
mov
ljmp
loop
sub
andl
push
push
call
lea
jae
shrd
stc
cmp
mov
ror
mov
or
inc
mov
cmc
pusha
pusha
sub
cmc
clc
bt
repnz
pushf
call
test
push
call
sub
mov
out
mov
fisubs
outsb
out
jp
lea
es
dec
repnz
jg
cwtl
fildl
mov
jae
cmp
in
inc
in
popf
or
cmp
js
jbe
es
inc
add
push
xor
repnz
push
mov
scas
into
pop
neg
inc
out
test
lods
insb
sbb
jg
in
loop
xor
jne
leave
jbe
lds
out
xchg
jo
lret
cmc
cmp
push
add
dec
mov
cli
adc
lock
or
cmc
sub
bt
pusha
pushf
cmp
pushf
movw
jmp
add
dec
outsl
arpl
inc
jb
add
test
repnz
jmp
jo
divb
xor
out
or
push
test
mov
mov
popw
mov
lods
loop
sbb
cld
jle
in
mov
mov
mov
sbb
stos
add
gs
flds
xchg
das
orl
pop
push
lods
push
mull
cmc
icebp
push
inc
test
leave
bswap
mov
pushf
mov
pushf
lea
jmp
lea
jne
sbb
xor
shrd
or
mov
cmp
call
sub
mov
mov
ljmp
lret
push
jecxz
lock
cmp
adc
pop
push
aas
jno
push
cwtl
cmp
jae
bound
rcl
fwait
adc
cmp
imul
inc
add
push
dec
xchg
pop
roll
ficoml
dec
mov
shlb
je
nop
push
leave
dec
cmc
mov
fildl
mov
insb
sub
ficompl
jnp
mov
lret
xor
popf
push
mov
inc
loope
loopne
cltd
mov
out
stos
cs
pop
and
das
cld
out
jb
sbb
lret
adc
push
test
adc
or
dec
cmp
fwait
inc
daa
test
hlt
and
sub
movsb
mov
push
or
out
inc
leave
lret
push
add
xor
xchg
imul
nop
jp
inc
pushf
call
call
lea
jae
pusha
push
jmp
call
call
pop
arpl
js
nop
rolb
fcoms
scas
xor
mov
mov
push
adc
mov
push
add
shll
out
test
enter
cmp
cld
mov
mov
jecxz
icebp
cmc
mov
aaa
in
and
int
shll
push
out
jg
in
and
sahf
imulb
cmpsl
lock
push
push
loope
inc
pop
scas
pop
das
mov
dec
push
cld
imul
xchg
push
mov
and
ficoml
cmp
leave
add
ja
inc
out
sub
push
mov
dec
nop
xchg
pushf
sbb
cmp
or
push
fisubs
outsl
cli
jl
xchg
xchg
ss
sub
loop
cltd
sub
cmpsb
inc
in
mov
inc
and
mov
inc
xchg
xchg
aam
addr16
addr16
sbb
andl
adc
cmc
adc
repz
jnp
cmpsl
mov
pop
mov
inc
mov
imul
popf
mov
or
sti
jne
insl
push
or
shll
imul
ret
pop
mov
stc
insb
sub
mov
leave
push
sbb
fwait
pop
mov
push
stos
in
icebp
mov
jle
ficoml
fnstenv
xchg
mov
int
xchg
mov
subl
xor
addr16
fimuls
fldl
adc
hlt
loopne
xchg
dec
pushl
fisubl
jle
arpl
pop
ret
mov
dec
fisubl
pop
mov
fimuls
bound
mov
in
mov
adc
push
loop
imul
sbb
fildl
dec
cmp
push
add
xchg
sbb
outsb
adc
icebp
lahf
jecxz,pt
adc
hlt
mov
fidivrs
mov
rol
xchg
sti
mov
ret
push
jecxz
idivl
sbb
pop
xor
add
icebp
jno
ja
cmp
sub
mov
lods
ljmp
mov
sub
xor
movsb
je
dec
dec
fwait
mov
and
sub
aas
inc
out
mov
stos
and
out
and
or
mov
insl
mov
out
sahf
or
cmp
dec
dec
out
pop
add
lret
pop
mov
in
lea
lea
cmc
dec
cmp
rcrb
std
call
mov
cmpsl
xor
cmp
faddl
mov
jns
bound
or
sbb
inc
arpl
test
adc
testb
mov
sbb
xor
sbb
push
fisubl
js
mov
mov
cmc
loop
mov
mov
adc
mov
insl
test
aam
loop
mov
inc
xchg
dec
pop
pop
sbb
iret
jne
add
rcrl
lods
push
cmc
xchg
loope,pt
cmp
mov
loopne
xor
cmc
cmc
pop
dec
or
stc
add
call
pop
cmp
arpl
scas
sbb
data16
je
jp
orl
sbb
inc
loop
fs
loop
adc
sub
mov
loop
insl
cmp
cli
cmpneqps
xor
sarl
lret
mov
or
cmc
test
jae
ficoms
add
test
test
add
jmp
lea
jne
sete
bswap
movzbw
movb
lahf
push
jmp
jg
ljmp
mov
mov
xchg
adc
sbb
mov
mov
in
mov
loope
addl
pop
insb
pop
shr
push
xchg
adc
xor
addr16
xchg
inc
loopne
sub
outsb
or
cmc
test
cmc
bt
sub
push
pusha
mov
pushf
lea
jmp
lea
je
test
test
stc
add
call
pop
cmp
lods
lods
pop
pop
fcompl
decl
and
outsl
mov
xor
movsl
mov
mov
mov
jl
loopne
in
pop
push
jle
xor
jle
shlb
outsl
sbb
cmc
not
mov
outsl
adc
xchg
ficompl
outsb
stc
jnp
xchg
xchg
sbb
inc
xlat
mov
pop
je
push
ljmp
xchg
pop
sti
shlb
adc
rol
xchg
push
ss
xlat
jge
dec
jl
sub
xor
in
or
mov
mov
std
mov
ss
leave
pop
adc
enter
ljmp
jmp
ret
lds
add
push
mov
in
cltd
cmp
andl
jb
adc
mul
lret
push
lea
jne
shld
mov
btc
push
bsr
sub
dec
lea
pusha
pusha
sub
pushf
jmp
mov
lea
jne
dec
not
bt
sub
not
sub
neg
bswap
mov
sub
add
rol
dec
neg
mov
jmp
call
int3
scas
cmp
daa
xchg
push
fisubs
jne
mov
mov
dec
movsl
add
mov
dec
testl
push
cld
push
rclb
push
std
inc
xchg
cmp
subb
andb
cmp
ret
lret
into
mov
outsb
mov
jle
sarl
jne
adc
clc
cmp
loop
push
lea
jb
cmc
cmpb
call
dec
inc
inc
xor
cs
dec
dec
add
inc
xor
push
mov
dec
pop
loopne
cmc
jns
mov
inc
out
stos
pop
loop
mov
in
mov
loope
push
addb
stos
hlt
pusha
insb
sbb
jne
and
add
mov
fiadds
enter
clc
sub
jnp
add
mov
in
scas
xor
push
xchg
aaa
jb
pusha
ljmp
aas
xchg
bound
inc
lock
xor
sbb
cmp
in
scas
leave
js
mov
outsl
adc
add
jae
loopne
mov
xchg
add
sbb
sbbl
out
inc
add
pop
movsl
sub
mov
insl
adc
pop
or
dec
hlt
adc
stc
mov
movb
mov
test
mov
cmc
test
bt
cmp
call
test
xor
sub
inc
int3
push
in
out
insl
sbb
sti
cmpsl
loop
dec
cmp
mov
mov
jl
inc
jmp
inc
scas
insb
push
pop
cmp
push
lock
in
cld
incl
push
popf
and
popa
or
in
xchg
adc
cli
shrb
dec
add
pop
lea
mov
not
mov
jmp
pop
cmp
inc
jmp
xor
xor
addl
mov
loop
mov
scas
in
mov
jne
mov
les
loop
shlb
sbb
xchg
and
push
call
cltd
sbb
fstpt
jl
ret
pushw
adc
cli
xor
sbb
xor
jg
sub
aaa
mov
fs
ja
mov
rorl
aam
mov
stos
xchg
fnstcw
mov
jno
pop
ret
loop
cmp
fwait
insb
pop
loopne
in
push
call
repz
mov
xchg
cmp
xchg
cmp
andb
jae
mov
insb
sub
mov
ret
out
and
jnp
jg
adc
lret
js
inc
add
xchg
dec
rclb
mov
and
cmpsb
dec
hlt
test
popf
mov
mov
xor
fiaddl
cmp
jge
ret
fwait
mov
add
fstl
and
mov
jno
sbb
pusha
clc
out
je
mov
outsb
sub
inc
in
pop
add
jl
push
and
std
push
xor
lods
push
repz
cmp
subb
adc
sti
mov
pop
xchg
adc
jecxz
sub
inc
int3
push
loopne
repz
dec
sub
mov
dec
cmp
pop
stc
ja
in
lret
jmp
repnz
mov
into
aaa
push
ftst
outsb
fs
fsubr
scas
jle
fs
push
out
shr
push
pop
pop
mov
repnz
xchg
fimuls
enter
push
adc
ljmp
adc
repz
inc
out
cmp
adc
sti
sahf
mov
pushf
call
jmp
pusha
add
cmp
bt
pushf
push
mov
cmp
push
jmp
call
cmp
jmp
and
mov
mov
outsl
fxch
pop
fisubl
imul
pop
mov
xchg
cmp
adc
push
popa
loop
in
mov
push
mov
sub
sub
mov
dec
int
clc
pushf
dec
repz
inc
out
xchg
inc
out
xor
adc
cld
xchg
add
loope
jge
test
mov
dec
pop
inc
call
sub
mov
jecxz
and
xchg
pop
movsb
and
push
mull
mov
jo
pop
mov
rcll
ficomps
add
push
push
xchg
jo
pop
sbb
lods
and
sti
pop
or
xlat
js
ret
outsl
sbb
arpl
scas
push
hlt
cwtl
ds
std
add
cs
cmp
jmp
push
movb
jmp
jg
ljmp
inc
cmp
dec
fsubs
addr16
jae
test
xchg
cmp
add
aad
or
in
push
js
fs
inc
test
sub
cmpsl
rorl
lcall
setb
mov
int
adc
test
push
loopne
stos
jo
ds
repz
mov
mov
jmp
sbb
bound
mov
into
les
test
add
stc
call
or
jne
lcall
or
aas
roll
faddl
mov
pushf
sbb
fs
int3
mov
or
mov
mov
mov
dec
clc
gs
notl
sbb
fisttpl
xlat
aaa
lret
rorb
sub
out
fldl
loope
add
or
in
in
dec
xchg
ds
mov
push
repz
or
fistl
lock
or
sar
and
fisttpll
jg
lea
in
cmp
mov
fadds
adc
aas
sub
stos
aaa
loop
xor
xchg
push
aam
jmp
jns
test
stos
dec
outsb
adc
mov
test
cmp
in
mov
sbb
dec
inc
jmp
leave
xor
add
xor
jecxz
js
pop
add
aam
sub
adc
nop
jp
sbb
addl
jb
pop
movsl
es
dec
fsubl
insl
adc
loope
fsubrl
jecxz
aaa
and
xor
xor
mov
mov
fistps
mov
into
and
jecxz
add
mov
clc
pushf
or
pusha
sub
stc
cmpsb
sti
fisubrs
jno
mov
sti
cmpsl
dec
clc
sahf
dec
adc
decl
sub
sub
das
mov
pop
in
cmc
jg
mov
mov
jns
mov
dec
cmp
mov
ds
test
jle
loop
adc
pusha
insb
adc
or
fs
stc
xor
imul
pop
pop
scas
pop
mov
push
xchg
dec
cs
arpl
lahf
xchg
push
lahf
sub
push
loopne
sbb
mov
ljmp
jno
test
xchg
loop
rcr
insb
sbb
aam
mov
inc
xchg
in
stc
shrl
hlt
xchg
cmp
test
ja
iret
jge
cmc
incl
out
fs
jae
setns
pushf
setnp
mov
call
cwtl
popf
and
shll
out
cli
orl
adc
xor
dec
inc
and
jg
cmc
cmp
mov
in
adc
dec
lods
adc
push
sub
or
xchg
jno
adc
inc
sbb
mov
cmp
xor
push
inc
xchg
lret
inc
leave
lds
pusha
test
cs
or
xor
inc
call
mov
or
in
cmp
xchg
fadds
in
xchg
pop
pop
fildll
pop
in
aam
orl
lahf
push
lods
xor
add
sub
ljmp
inc
pusha
je
jb
clc
mov
shrl
xor
xchg
jae
rorl
mov
sarb
ret
jl
push
xchg
cli
popf
inc
cmp
push
mov
pop
sbb
aaa
flds
lock
and
lods
cmp
mov
pop
xor
mov
std
gs
mov
dec
cld
dec
cld
sahf
fisttps
mov
testb
push
add
gs
gs
out
jmp
repz
adc
lock
and
and
je
pop
and
mov
jns
and
adc
push
lahf
pop
cmp
xor
xlat
arpl
mov
add
faddl
lods
std
test
inc
ljmp
mov
lret
or
pop
scas
adc
add
lahf
clc
pushf
test
jmp
pop
cmp
roll
icebp
jl
orb
xchg
pop
movsl
xor
jl
inc
xchg
test
out
pop
lahf
dec
mov
inc
jnp
fildl
test
aaa
inc
xchg
inc
xchg
out
andb
arpl
add
test
mov
int3
fnstcw
std
pop
lcall
or
and
adc
sahf
dec
clc
movsb
adc
add
adc
inc
int3
dec
negb
sbb
xor
addr16
movsb
lods
add
lea
jle
mov
jg
and
in
add
stos
shrl
gs
clc
and
xchg
scas
icebp
xor
and
mov
shll
imulb
and
cmp
lds
sub
or
dec
xchg
xor
je
and
or
stos
pop
mov
stc
lret
push
mov
fisubl
movsl
sub
mov
add
in
mov
jle
testb
add
inc
lock
test
jmp
cmp
stc
cmp
pushf
sub
jmp
test
call
push
jmp
call
iret
aam
faddl
mov
in
outsb
bnd
test
xchg
sbb
or
xlat
int3
push
xlat
push
or
ss
xor
fildll
push
mov
jo
push
lret
subb
inc
mov
xchg
sbb
mov
ja
dec
testl
inc
hlt
mov
jg
int
sbb
insl
adc
cld
adc
add
lea
jae
jmp
lea
ja
sar
push
sar
stc
sub
lea
pushf
sub
sub
add
bsf
jmp
mov
mov
lahf
mov
push
xchg
sbb
mov
mov
div
sbb
push
mov
xorb
out
mull
pop
fists
push
or
addl
or
sbb
in
mov
and
dec
xchg
and
shl
int
sbb
call
xor
jge
adc
add
int
shld
mov
rcr
neg
bt
pushf
mov
test
pushl
stc
jmp
inc
pusha
setbe
mov
pusha
pushf
call
rol
shr
clc
mov
test
repnz
push
call
stc
cmp
lea
jo
pusha
movb
lea
jb
pushf
test
cmp
pusha
movw
pushf
pushf
lea
jmp
and
ror
jmp
test
push
lea
je
cmp
add
clc
cmp
pusha
pushl
cmp
pushf
mov
lea
jb
cmc
cmc
push
cmp
jmp
jge
jecxz
push
xorl
pop
pop
ret
adc
inc
ret
inc
aad
and
loop
mov
dec
in
rcrl
cs
loop
shr
insb
adc
out
adc
or
outsb
fdiv
push
xor
push
cld
popf
dec
negb
andl
adc
add
outsl
sub
ljmp
inc
test
fwait
sub
inc
into
pop
in
sub
ja
loop
sbb
pushf
inc
in
mov
or
sub
pop
jae
adc
add
dec
pop
cld
repz
pop
or
in
cwtl
aaa
in
adc
add
bt
repnz
push
mov
pushl
jmp
outsl
insb
xor
cs
insb
add
adc
imul
mov
mov
dec
rcll
jmp
sub
xor
xlat
mov
jns
das
out
shr
imul
sbb
mov
push
push
add
out
stos
scas
push
xchg
and
lds
pop
jmp
rcl
in
icebp
cwtl
and
es
sti
ds
add
dec
sbb
stc
enter
sub
repnz
int3
jbe
mov
add
push
stos
push
adc
push
push
add
or
sarl
dec
add
cltd
and
dec
mull
dec
cmp
mov
sbb
sub
add
repz
jle
sub
fnstenv
cmp
negb
out
jb
mov
std
sub
clc
nop
mov
repz
cli
jnp
lret
jo
mov
icebp
popf
inc
in
adc
pop
add
sub
xchg
dec
xlat
popa
in
out
incl
lret
sar
cmpsl
ljmp
mov
adc
jbe
lret
movsb
add
pop
xchg
lock
cmp
pop
mov
adc
mov
push
xchg
fisubrs
xchg
scas
cmp
jg
pop
xlat
pop
fstpt
adc
ds
ja
clc
in
hlt
je
sub
mov
cmpsl
dec
out
popf
cmp
jle
into
adc
push
xchg
jnp
pusha
mov
pushf
push
mov
mov
pushl
ret
cmpsb
stos
xor
insl
inc
inc
jmp
push
aam
fcomps
push
addb
cmp
das
xlat
push
mov
jg
and
lret
cmp
and
push
stc
mov
pop
xchg
out
scas
mov
outsl
mov
pop
push
imul
fwait
inc
mov
fcomps
insb
in
xchg
sarb
imul
shl
dec
jmp
cli
sbb
cld
pop
in
cmp
cmpsl
dec
outsl
bnd
shlb
outsl
adc
adc
or
test
dec
fbld
into
fisttps
fwait
mov
lock
div
mov
add
lret
int3
jb
dec
clc
aad
mov
mov
adc
int
add
xchg
cmc
pushf
sahf
sbb
call
pop
icebp
fistpl
push
not
mov
jmp
pushl
sub
pushf
bt
neg
test
cmp
movsbw
lea
lahf
lea
jno
movsbw
bswap
pop
pushf
call
lea
je
stc
test
call
cmc
cmc
movzwl
movsbl
xor
mov
or
mov
pusha
add
test
pusha
mov
call
lods
mov
sahf
dec
xor
je
and
inc
into
dec
aad
out
pop
mov
mov
cwtl
cmpl
in
mov
xor
and
and
cmp
push
jl
aad
icebp
jmp
adc
adc
out
cwtl
cmp
or
repz
sub
push
test
push
cmc
pushl
popl
stc
clc
cmp
pusha
lea
ja
cmc
cmc
cmc
push
sub
push
lea
jmp
jmp
and
test
scas
mov
sarb
or
cmp
fdivrs
cmp
cld
pop
loopne
add
sar
mov
mov
xor
inc
out
mov
popa
dec
jle
iret
pop
nop
sarl
js
xchg
and
out
das
pushf
inc
push
out
mov
pushf
cmp
lcall
mov
subl
xor
dec
jle
bound
andb
das
mov
int3
pop
stc
pushf
inc
call
scas
jmp
jp
bound
in
xchg
outsl
jno
xchg
xlat
lret
mov
adc
or
mov
pop
jno
aas
ret
dec
leave
dec
std
sbb
aaa
idivb
mov
aam
mov
inc
pop
shll
insb
out
sbb
sbb
lods
xor
mov
iret
jne
lds
cmp
imul
xor
inc
in
sub
adc
or
mov
call
cmc
pushf
bt
add
pushl
cmc
test
movzwl
or
call
lea
call
jmp
add
xor
pop
leave
or
adc
mov
lds
pop
add
aaa
in
mov
popa
lret
push
mov
sbb
aas
or
adc
add
mov
fildll
jge
mov
jecxz
sub
subb
jne
mov
or
leave
call
sbb
xor
jecxz
stos
sub
cs
cmp
outsb
adc
mov
int
je
in
mov
pushf
xlat
jmp
xlat
loop
adc
insb
push
xchg
enter
inc
ja
jge
in
mov
test
shll
shrb
or
pusha
sbb
clc
sub
pusha
pushl
movb
lea
call
push
push
lea
jae
not
mov
inc
jmp
movb
lea
jne
stc
bts
mov
cmp
test
add
bt
movzwl
inc
mov
pusha
cmc
cmp
pushf
add
mov
pusha
cmc
stc
mov
jmp
lea
ja
pusha
pushf
call
call
clc
clc
clc
add
call
addr16
xlat
pop
jmp
ret
jae
addl
mov
nop
mov
jb
retw
or
daa
push
insb
out
xchg
cmpsb
jb
outsl
in
cs
je
std
mov
mov
imul
pop
push
fists
cltd
fsubl
adc
cmpl
xor
aad
imul
inc
std
mov
insb
inc
jno
xchg
popa
outsb
adc
orl
fbld
mov
sbb
bound
stos
push
stc
fwait
inc
call
incb
adc
jle
add
dec
fcompl
imul
sti
addl
das
mulb
adc
ja
imull
js
sbb
in
or
xchg
stc
dec
push
std
mov
ljmp
sub
es
insl
and
jmp
cmpl
push
clc
xor
sbb
pushl
dec
pop
or
repnz
sub
push
xchg
xor
jno
nop
sbb
jbe
add
in
jns
dec
repz
bnd
push
fwait
scas
pop
lret
xor
daa
aam
adc
dec
repz
or
mov
jmp
addb
popf
add
cmp
dec
rclb
imul
mov
scas
adc
dec
loope
or
sbb
push
imul
in
fwait
or
mov
stc
mov
rclb
pop
mov
rorb
shlb
movsl
incb
insb
nop
push
and
fildl
movsb
sub
jle
enter
push
add
or
addb
push
setge
mov
dec
int
rclb
lcall
pop
inc
mov
in
mov
adc
fldenv
frstor
insb
sbb
ja
add
insl
mov
pop
cmpsl
sub
ds
andl
leave
sbb
lods
aaa
cli
mov
mov
pop
in
out
pop
ret
jecxz
xor
mov
mov
loop
cmp
jnp
pop
ljmp
dec
pop
mull
or
add
xor
subb
adc
or
xchg
adc
and
mov
mov
pop
call
lahf
inc
popa
or
mov
sub
mov
iret
add
cmpsl
dec
imul
sahf
dec
mov
mov
mov
cltd
mov
jo
sbb
pop
xor
imul
test
or
insl
and
insb
clc
movsb
push
or
jle
mov
out
mov
jmp
or
or
hlt
xchg
aas
adc
lar
test
rclb
sub
pop
pusha
enter
add
and
das
mov
clc
aad
mov
lods
mov
mov
pop
lds
mov
lock
inc
adc
fisubrs
es
inc
cmp
xchg
cmp
push
push
pop
imul
rep
in
cmp
sub
mov
cmc
fwait
aas
fiadds
out
fcomps
add
inc
outsb
jne
push
jb
arpl
jae
jae
inc
and
aad
cmpsb
adc
arpl
data16
cli
test
xchg
sbb
mov
frstor
lds
sub
mov
pop
mov
sbb
jnp
pop
repnz
mov
icebp
inc
mov
int
test
mov
sbb
arpl
out
mov
inc
rclb
sti
imul
add
jecxz
cmp
mov
loop
add
jo
mov
into
mov
xchg
sbb
xor
xor
sbb
cmp
cmp
stos
in
xchg
mov
stos
aaa
sbb
xchg
xchg
not
mov
jmp
xlat
bound
jl
daa
insb
inc
cmp
dec
movsb
or
or
push
cli
cltd
push
dec
cmc
ret
fbld
int3
repnz
out
sbb
pop
popf
lahf
dec
ljmp
ret
insb
or
pop
cmpsb
dec
ljmp
fisubs
add
inc
imul
add
inc
outsl
dec
outsb
imul
add
mov
mov
not
mov
jmp
dec
push
push
inc
push
push
cs
insb
add
loop
in
mov
loop
and
hlt
jne
mov
and
pop
repnz
push
stos
xor
pusha
in
ret
popa
mov
xchg
out
arpl
or
jecxz
cld
fwait
ret
bound
pop
add
and
pop
daa
inc
add
hlt
adc
adc
in
cmc
insb
or
lds
sbb
or
xorb
cmpsb
das
fstps
mov
cmc
push
in
cmc
jns
mov
repz
cmp
loopne
inc
xchg
clc
mov
xor
and
sub
andb
outsb
sbb
imul
jmp
cmpsb
mov
cmp
call
ret
pop
fildll
and
mov
cld
mov
out
mov
icebp
loop
mov
jne
jecxz
add
jae
inc
jmp
jmp
xor
jnp
les
mov
sub
push
xor
jno
or
inc
rolb
loope
out
in
jnp
sbb
sbb
out
xchg
clc
arpl
lods
push
mov
xchg
sbb
mov
in
jg
lea
sahf
mov
aam
aas
cmpsl
pusha
mov
pop
cld
xchg
inc
ljmp
pop
hlt
pop
xchg
xchg
mov
data16
insl
das
fbld
xor
fisttpll
out
xchg
arpl
mov
jne
inc
lock
mov
je
or
aas
jecxz
xor
js
shlb
ret
adc
adc
mov
fcomp
imul
dec
fisttps
leave
dec
jp
jl
xchg
pop
ret
outsl
cmp
loop
cmpsb
shrb
or
andl
in
pop
insb
sbb
insl
sub
fidivrl
jmp
xchg
fistpll
into
jno
mov
adc
adc
adc
lea
jne
movzbw
movsbl
not
movb
not
pushf
jmp
lea
je
clc
add
bt
pushf
jmp
shll
and
loope
cmc
ja
jp
xchg
lcall
xor
js
std
inc
in
adc
sub
mov
mov
rsqrtps
xchg
push
sbb
fistps
or
idivb
push
inc
movsl
pusha
push
cmpl
mov
xor
mov
stos
in
cs
adc
inc
adc
arpl
pop
add
cmc
mov
fistps
lret
js
movsl
je
mov
stos
in
mov
mov
xchg
cmp
jl
jb
mov
loope
xor
ja
mov
and
fs
je
pusha
cmp
test
call
pushl
add
bt
bt
stc
ror
pushf
call
pushf
lea
je
push
cmp
jmp
leave
stos
cmp
inc
push
add
iret
pop
loopne
loope
repz
xchg
ds
test
lahf
pushf
xchg
je
out
ljmp
pusha
cmpsb
fsts
inc
dec
out
imul
jns
imul
stos
fs
imul
in
dec
push
pop
fisubl
adc
cld
push
sahf
and
jno
lret
jo
mov
mov
dec
or
test
add
rcr
das
test
lea
xor
and
push
xchg
sar
mov
shl
dec
ror
sbb
mov
pop
or
sar
shr
bts
shr
mov
stc
clc
stc
test
or
call
bt
pushf
imul
pushf
bt
stc
add
movl
pusha
push
lea
jmp
cli
incl
fs
popa
movsb
sub
inc
into
push
rcll
pop
call
jbe
mov
cmpsl
xchg
aad
add
mov
dec
insl
les
into
loop
push
adc
repz
in
sbb
insl
adc
dec
out
fwait
adc
adc
popf
loopne
es
inc
fnsave
add
or
cmp
dec
clc
movsl
lds
sti
lret
cmc
jbe
mov
or
das
fmull
lret
rol
sub
add
shr
xor
mov
inc
dec
pop
mov
inc
cmp
mov
inc
leave
test
fsubr
dec
push
rclb
lahf
dec
stc
data16
lahf
lret
xor
xchg
cltd
fwait
dec
mov
xlat
inc
aaa
filds
mov
add
notb
sub
das
cmp
and
dec
aad
out
repz
xchg
popf
es
ja
push
nop
loopne
cmp
xchg
xor
xchg
cwtl
lds
jb
xor
loopne
inc
dec
mov
repz
out
in
jge
call
sbb
mov
adc
sbb
jmp
dec
jmp
lods
xor
repz
inc
out
lcall
adc
adc
add
add
std
add
mov
xor
push
fbld
or
fstl
and
push
sub
dec
and
xchg
sbb
dec
pop
inc
hlt
pop
or
fisttpll
push
daa
stos
push
movsb
dec
push
movsb
pop
xchg
fcomps
adc
cs
push
in
cmp
xor
jle
les
mov
adc
incl
sarl
mov
inc
rcrl
hlt
jg
mov
or
adc
jp
mov
ss
fmull
mov
les
fdivrl
mov
or
or
sbb
mov
or
mov
fildl
daa
xchg
sub
jno
rorl
scas
and
dec
movsl
popa
jmp
subb
xor
mov
jecxz
and
lds
mov
cmc
mov
push
mov
fisubrs
jno
rolb
and
add
sub
stc
jmp
clc
cmp
xor
test
test
mov
sub
stc
cmc
cmc
test
xor
mov
call
out
rcrb
mov
scas
das
mov
pop
out
bnd
scas
pop
jp
in
mov
loop
movsl
push
sbb
leave
jmp
adc
cmp
lret
repz
pop
imul
insb
pop
push
adc
dec
fwait
and
xor
jnp
push
mov
mov
das
cmc
cmp
mov
aam
mov
xchg
out
push
fidivrl
adc
pop
in
xchg
clc
add
cmp
jmp
add
mov
mov
arpl
loopne
or
xor
pop
add
leave
imul
test
mov
mov
lods
call
arpl
insb
sbb
fs
push
std
mov
jecxz
aaa
orl
xor
insb
sbb
or
notb
int
cli
jbe
add
aaa
xor
cli
and
mov
dec
cmc
mov
test
mov
into
out
lock
loop
lea
insb
sbb
ret
clc
dec
push
add
int3
loop
mov
filds
mov
or
pop
add
push
dec
fdivrl
lea
push
jb
orb
pop
pushf
sbb
sub
adc
imul
sbb
sub
shr
aaa
sahf
jl
lods
mov
in
scas
shlb
mov
sub
mov
rcll
or
dec
xor
roll
mov
push
push
adc
dec
jne
out
std
fwait
sbb
fisttps
pop
add
inc
in
xor
adc
sbb
fcmovnbe
stc
incb
xlat
jns
es
cmp
push
fildll
jns
les
mov
scas
cltd
cmp
mov
mov
loop
cmp
insb
sbb
in
sub
subl
les
xchg
cmp
mov
fisttps
adc
sbb
sbb
or
ss
pop
in
hlt
jle
xchg
aaa
loop
lods
loop
pop
and
pop
stc
in
mov
jp
daa
aam
loop
pop
push
ret
insb
sbb
add
xor
adc
pop
xchg
xor
jl
subl
ja
adc
sbb
enter
cmp
mov
cmpsl
xor
ljmp
loopne
mov
add
loope
inc
addb
loopne
in
xchg
in
insb
jbe
fsubp
mov
fstpt
je
mov
jge
insl
test
push
add
inc
loop
mov
addb
pop
jg
movb
cmp
xchg
adc
sbb
adc
jg
outsb
mov
mov
pop
jecxz
std
jl
lods
push
jbe
aas
loop
fistpl
add
movsl
in
jl
sbb
cwtl
push
loop
in
subb
sbb
pmaxub
imul
push
cld
aas
mov
out
lock
inc
inc
in
pop
loopne
stos
negl
nop
xor
jl
enter
sbb
sbb
call
xchg
xchg
and
lret
inc
iret
pop
loope
call
jnp
mov
mov
loop
es
add
movsl
syscall
mov
dec
into
loop
cs
mov
leave
adc
mov
je
cmpsl
push
stc
pushf
inc
ljmp
push
push
mov
cmp
jmp
dec
push
push
inc
push
xor
fs
insb
add
test
fadds
add
mov
xlat
add
lahf
movb
call
sbb
mov
mov
cli
fs
lea
movsl
xor
ds
dec
into
jp
cmp
popa
loop
and
cmp
or
push
mov
je
pop
hlt
stc
mov
pop
pop
shr
adc
lods
dec
dec
mulb
jmp
mov
inc
mov
andl
mov
aad
out
scas
push
stc
jne
in
sub
mov
sub
loop
xchg
adc
fcomip
dec
jmp
faddl
mov
negb
int3
mov
add
mov
lea
sahf
imul
cmp
inc
ret
dec
fcomps
andl
cmpsl
sti
mov
inc
xchg
imul
lcall
mov
jno
inc
insl
cmp
inc
mov
sub
mov
call
ds
int3
cmp
mov
inc
or
scas
iret
adc
clc
fucom
mov
hlt
xchg
aaa
movsb
cld
popf
idivb
lock
sahf
dec
in
addr16
fldl
push
mov
or
negb
push
or
xchg
and
adc
rorl
jae
ja
addl
out
loop
dec
ret
scas
push
in
mov
pop
xchg
xchg
cli
jp
push
adc
in
or
adc
add
loopne
and
je
shrl
sbb
push
pop
cmp
movb
push
push
pusha
lea
jae
btr
sbb
push
sar
mov
movsbw
sar
mov
and
adc
bt
mov
jmp
iret
mov
mov
lret
xor
sbb
arpl
push
jb
mov
mov
or
pop
inc
mov
scas
in
mov
out
push
push
mov
cs
hlt
lea
push
jnp
mov
sub
push
filds
ja
ret
mov
and
shr
xchg
test
add
call
mov
faddl
mov
nop
adc
roll
or
enter
xchg
adc
sahf
mov
inc
xchg
sbb
lock
xchg
push
std
daa
test
insb
stos
mov
sbb
xchg
ja
out
daa
imul
icebp
lcall
xlat
sbb
scas
dec
ficompl
adc
imul
icebp
nop
cmp
negb
lds
jnp
push
imul
adc
cmp
jae
mov
inc
icebp
pinsrw
rcll
out
jno
add
sbb
out
push
aas
imul
jno
mov
out
xor
lret
cmp
shrl
fcoms
mov
fiaddl
mov
and
test
xor
pushf
pusha
inc
jmp
pushf
cmp
call
call
lea
jae
bswap
mov
stc
bswap
or
mov
cmc
cmc
neg
call
orl
aas
push
jle
movsb
and
xor
pop
jecxz
adc
fldl
add
subb
push
movsb
mov
jp
popf
lods
hlt
repnz
inc
inc
in
pop
lods
and
cmp
mov
adc
mov
subb
loopne
inc
nop
sbb
sub
in
cmc
inc
call
xor
subl
adc
push
jle
stos
mov
call
bt
add
pushf
lea
jmp
lea
jne
ror
not
cmc
mov
call
vmovmskps
mov
popaw
sub
adc
inc
in
loope
cmpsl
loop
mov
in
rcrl
movb
loop
ret
out
pop
insb
adc
lahf
xor
pop
adc
fnstcw
mov
enter
pop
add
pop
cli
mov
or
aaa
mov
lea
ja
bt
call
inc
sub
ret
lcall
pop
loopne
in
jo
test
movsl
dec
mov
into
aaa
testl
je
lock
cmpsl
push
sti
lcall
js
mov
sub
iret
mov
shll
dec
push
mov
aad
fdivs
lea
mov
lahf
xchg
and
push
hlt
adc
cmp
movsb
dec
push
inc
lods
imul
cwtl
inc
jmp
cmp
lea
je
negb
aaa
and
andb
and
add
xchg
sbb
and
ds
xchg
into
je
sub
mov
imull
ss
pop
rclb
mov
aad
xchg
inc
mov
imul
lock
ret
mov
xor
loope
daa
std
stos
in
lds
outsb
test
outsb
sahf
cmp
mov
inc
in
pusha
xchg
xchg
sbb
push
mov
mov
add
les
ficompl
xchg
adc
pop
pop
adc
and
mov
ret
enter
xor
xor
orl
mov
js
push
loop
xchg
mov
hlt
xchg
in
mov
in
or
popf
adc
sbb
es
inc
out
fcmovnb
push
push
popf
dec
call
xor
jg
lret
imul
and
sbb
add
push
gs
jo
outsb
dec
gs
js
add
fdivrp
btc
sub
movsbw
movl
mov
pop
xchg
clc
mov
btr
ror
add
test
add
bt
pushf
shr
not
xchg
pop
mov
lea
rcl
add
neg
add
movsbw
pusha
bswap
not
mov
call
movl
call
lea
jl
pushf
xor
stc
stc
repnz
pusha
movb
jmp
jmp
leave
into
dec
sarl
xor
shrb
cli
xchg
xchg
push
mov
cmp
andb
mov
mov
out
scas
cmp
test
inc
xchg
mov
fsubs
mov
test
mov
add
repnz
inc
loop
adc
and
push
fdivrs
arpl
ds
jo
jb
xchg
mov
xchg
loop
inc
and
in
mov
inc
lock
pop
dec
loop
dec
sbb
sbb
in
xchg
loop
mov
test
push
add
out
nop
cmp
mulb
dec
xor
mov
mov
iret
daa
xchg
dec
fldenv
ja
jnp
xchg
sbb
sub
cwtl
pop
inc
push
ja
jp
outsb
sub
add
das
dec
in
push
push
push
inc
icebp
dec
mov
ror
ja
call
loopne
add
pop
rclb
and
push
mov
pop
bnd
sbb
adc
xchg
push
insb
adcb
popa
or
mov
xchg
adc
pop
pop
test
ljmp
adc
and
std
jg
dec
sbb
out
or
sbb
push
fbld
adc
sub
ss
faddp
mov
mov
std
adc
cmc
mov
in
mov
les
fsubp
push
out
cmp
fadd
sbb
faddl
ret
and
loopne
and
into
jnp
in
out
or
dec
cmp
aas
rorl
cmpb
dec
push
dec
ljmp
jge
push
repnz
dec
aad
das
flds
iret
jne
mov
jns
pop
inc
inc
int3
dec
sti
push
cmpsl
arpl
jbe
jge
nop
adc
loop
cmp
and
mov
add
xor
in
shrl
mov
sbb
fst
pop
loop
rcrb
insb
adc
lret
in
push
pop
test
lahf
add
outsl
cmc
mov
fiadds
mov
adc
and
imul
xor
cmp
or
sub
inc
iret
push
stc
fwait
js
cmp
xchg
dec
sti
push
and
insl
push
xchg
cmp
push
jb
mov
fs
xchg
xchg
inc
stos
push
jl
jnp
lcall
loop
incb
adc
leave
loop
ret
outsl
sbb
sub
cmp
repz
pop
cmpsl
dec
notl
xor
pop
adc
popa
iret
fdivl
push
aad
jle
aad
and
shll
add
jmp
incl
cmp
cwtl
lea
ja
movsbw
push
lea
jmp
out
rclb
jp
jp
sbbl
pop
out
cmc
jp
mov
mov
into
jge
mov
xchg
std
xchg
data16
sub
aas
test
xchg
xchg
mov
cld
aam
inc
dec
cmp
in
jmp
inc
lods
cmp
addl
cmpb
jmp
jl
rolb
cmp
lahf
and
test
inc
push
std
ficoml
insl
stc
jp
cmp
pop
mov
or
cmc
adc
and
mov
jge
xchg
mov
pop
lahf
sub
leave
dec
fisubl
cmp
mov
mov
repnz
movsl
or
leave
add
sbb
xor
jne
imul
xchg
rcrb
rorl
gs
mov
mov
loop
and
jb
shlb
inc
dec
or
cltd
xchg
aas
add
push
push
pop
mov
gs
sub
sarb
fnstenv
cmpsb
sar
shlb
cmpsl
dec
repnz
xor
subl
jbe
leave
jno
adc
and
stc
incl
add
movsl
sbb
fs
jbe
shrd
jg
mov
xchg
rol
add
xadd
mov
or
call
xchg
test
dec
pop
loop
out
outsb
out
jae
leave
cmpsb
dec
test
mov
popa
dec
inc
out
in
roll
adc
loop
jmp
push
ficompl
mov
sub
add
fnstcw
adc
and
into
push
jbe
bound
mov
mov
dec
jae
jp
lods
pop
jp
loop
pop
pushf
xchg
dec
cmc
in
mov
insb
mov
fs
insb
pop
cld
jg
pop
in
mov
jmp
push
shrb
insl
or
pop
add
in
xor
adc
es
jg
or
imul
std
or
mov
es
mov
mov
inc
in
inc
mov
lret
loop
loopne
lea
cs
inc
ss
ficomps
pop
add
lods
fsts
inc
xor
mov
cmpsl
push
js
fcomps
jge
adc
aam
mov
mov
jl
leave
outsb
adc
mulb
mov
sub
pop
fs
mov
aas
mov
push
outsb
icebp
jle
ret
fs
jae
pop
imul
sti
out
jnp
adc
out
sarl
mov
lahf
aas
lods
sahf
in
mov
sub
mov
addb
lods
push
mov
adc
mov
add
imul
sub
jae
leave
imul
pusha
adc
es
push
dec
push
fwait
movsl
das
sarb
jge
mov
mov
mov
ds
cmovl
mov
aad
aaa
push
ljmp
dec
dec
test
push
jne
dec
push
adc
testl
movsb
jae
cmp
js
add
sti
mov
adc
shll
jecxz
or
repnz
inc
loop
ficoml
mulb
popf
xchg
push
push
fbld
jnp
cmpsb
lods
pop
ret
or
sub
dec
out
inc
testl
or
push
jns
ret
dec
stos
adc
mov
divl
mov
je
mov
sub
jle
andl
movlps
dec
xchg
sbb
sarl
xlat
mov
mov
ja
dec
lock
cmp
xchg
pushf
xchg
jns
jg
cwtl
push
es
outsb
fcomps
test
mov
lds
pop
fsubl
xchg
jp
arpl
or
scas
icebp
xchg
repz
add
cmp
adc
sbb
jae
movsb
dec
or
mov
rolb
rol
xchg
rolb
push
mov
std
sbb
cmc
pop
bound
pusha
xor
cmp
rcl
test
pop
scas
jno
cmp
imul
push
js
loopne
cltd
pop
aad
std
dec
enter
or
jp
lret
mov
ljmp
sbb
jp
test
xlat
sbb
inc
les
push
fisubs
scas
into
outsb
inc
mov
and
and
lock
xor
pop
inc
jae
push
mov
mov
jp
decl
outsl
outsb
cltd
pop
pop
add
jbe
call
sarl
inc
fadds
xchg
push
movsl
incb
stos
mov
pop
push
push
cli
push
pop
lock
iret
jle
stos
movsl
add
jmp
cs
adc
loope
aad
add
push
push
mull
and
nop
xor
test
jae
into
ja
mov
sub
mov
outsb
sbb
dec
arpl
pop
loopne
jmp
mov
mov
adc
stos
mov
push
rorl
push
push
cmp
xchg
iret
pushf
sbb
gs
or
inc
test
or
push
xor
movsl
dec
mov
cmp
sahf
dec
pop
subb
pusha
jecxz
pop
shrl
sbb
or
pop
lods
clc
jg
sbb
rol
inc
cltd
and
imul
ljmp
add
xchg
out
and
dec
and
sub
not
mov
pushf
mov
sbb
not
add
or
sub
shr
pushf
mov
shrd
shl
call
cmc
add
pushl
test
cmp
cmc
cmp
jmp
pushf
pushf
mov
pushl
pushl
ret
dec
sub
xor
and
dec
fldenv
jae
mov
adc
mov
shl
pusha
mov
inc
push
nop
in
push
insl
dec
sbb
cmp
sub
aas
pusha
shll
and
dec
mov
push
cmp
cwtl
jne
lahf
sub
sbb
sub
mov
jmp
cmc
sti
mov
push
dec
pop
imul
clc
movsb
adc
das
sbb
jno
les
mov
cli
pushf
adc
sub
add
je
bt
pusha
movb
pushf
add
pusha
pushl
cmp
cmp
pushf
mov
call
sbb
test
int3
cmp
add
jge
mov
arpl
imul
cmpsl
push
jne
loop
pop
mov
cmp
in
mov
or
arpl
insb
push
and
mov
pusha
push
jnp
jge
and
repnz
cmp
xchg
xor
jg
adc
sub
rorb
xchg
add
call
not
mov
mov
movb
push
lea
jmp
inc
sub
aas
movsb
push
push
fcomps
pop
in
ja
orl
adc
or
adc
adc
push
jno
data16
or
movsb
enter
sahf
ds
clc
inc
in
xchg
or
and
xor
xchg
inc
imul
dec
iret
sarl
add
dec
out
xchg
inc
out
xor
xchg
flds
xor
not
stc
mov
movb
stc
sub
pusha
cmp
test
jmp
cmp
call
call
bsf
mov
call
fwait
jge
mov
bound
cmpsb
and
les
push
rcrb
test
ficompl
mov
mov
mov
xchg
ss
lret
movsl
in
fidivrs
pusha
jnp
je
push
add
dec
push
fisubl
pop
pop
add
cmp
addr16
pop
mov
and
jae
shr
insl
mov
in
mov
ljmp
cli
mov
shlb
mov
andb
ja
mov
add
imulb
mov
sbb
sub
push
mov
fwait
push
mov
inc
jmp
scas
cmp
movsb
loope
les
xor
sbb
and
fdivrs
push
insl
mov
aam
lods
jns
stos
push
ss
loopne
aam
sub
jo
aam
cwtl
mov
fstps
fs
sub
faddl
adc
ret
outsb
fcmovnb
jne
pusha
enter
aam
std
rorl
popa
adc
in
push
push
add
testl
out
daa
lds
xor
pop
push
cld
push
cs
jb
andl
cli
addr16
shrl
jae
aam
cmp
add
out
aas
jmp
add
and
imul
in
scas
mov
mov
scas
mov
jae
xor
inc
pop
xchg
jecxz
lret
insl
movsl
mov
or
xor
aam
negb
std
sti
gs
dec
shrb
aaa
rolb
rdseed
add
ret
fstpt
push
xor
test
sti
jle
les
mov
lock
add
mov
daa
test
cld
mov
and
mov
test
mov
out
fwait
mov
andb
js
imulb
cmp
decb
aam
add
mov
bound
add
pop
jecxz
in
js
jle
scas
push
jo
shl
pusha
lcall
cli
cmpsl
dec
imul
jns
imul
pop
repnz
mov
int
sbb
push
lods
dec
hlt
mov
adc
cs
pop
xor
sbb
ficompl
data16
mov
fwait
inc
in
mov
mov
es
pop
push
in
mov
add
addr16
enter
push
xchg
loope
sub
fwait
lret
gs
cmp
pop
add
push
negb
adc
cs
jmp
lcall
add
dec
iret
push
loope
bnd
ret
pop
aas
add
sbb
in
scas
push
push
shll
rcr
outsl
mov
pop
das
dec
ret
movsl
xor
cmc
jge
movsl
aam
mov
cwtl
cmpsb
jmp
mov
jmp
nop
pop
mov
mov
xor
into
call
imul
lods
dec
clc
cwtl
cmp
mov
js
imulb
nop
jp
and
loope
jb
inc
test
xchg
and
lds
pop
fildl
lock
jge
inc
loope
mov
and
pop
sarb
out
xor
sub
loop
repz
add
popa
aaa
dec
shrl
push
jae
stc
fldln2
aam
xchg
aam
insb
mov
mov
imul
std
pushf
and
bsf
mov
cmc
lcall
push
inc
ss
test
sub
pushf
test
bt
xor
jmp
icebp
testb
gs
mov
xchg
adc
mov
or
out
mov
jbe
movsb
sub
imul
inc
xchg
xchg
sti
movsb
mov
imul
lret
dec
cli
leave
push
in
mov
out
sub
ja
addr16
mov
divb
js
movsl
bt
inc
mov
clc
pushf
test
cmpb
call
mov
pushf
inc
or
mov
sar
mov
dec
mov
clc
cmp
sub
lea
xchg
mov
xchg
lods
sub
dec
call
pusha
lea
jbe
pushf
lea
jae
dec
mov
call
lea
jne
stc
test
xchg
mov
xor
stc
call
push
mov
not
push
dec
bt
bt
rol
cmp
call
jmp
push
pop
call
sub
aas
sti
addb
seta
movsl
sub
inc
into
push
add
lahf
push
xlat
xchg
and
mov
fdivs
sbb
sub
movsb
xor
push
mov
pop
pop
jne
or
xchg
fs
xor
addb
mov
sbb
call
popf
outsl
mov
loopne
je
int
dec
xchg
and
fbstp
push
shrl
bound
stos
push
sti
popf
inc
in
divb
cmpsl
xchg
aam
jmp
add
in
push
cltd
and
cs
das
mov
push
movb
push
sbb
mov
out
dec
xor
sub
jmp
adc
push
cld
leave
jae
mov
jp
stc
out
adc
and
sbb
push
xlat
mov
jecxz
add
subl
mov
cs
sbbl
xchg
dec
xchg
cmp
inc
scas
leave
das
mov
bsr
gs
jnp
ret
mov
xor
scas
outsb
test
outsl
lods
jle
jne
divl
test
mov
mov
jbe
outsb
sbb
mov
sbb
pop
mov
mov
or
std
stos
sarl
mulb
dec
in
pop
cld
test
mov
aaa
in
fcoms
addb
aad
and
test
cmp
sarl
leave
xor
dec
cmp
and
lret
je
mov
xor
mov
cltd
es
xor
add
fs
xchg
cmp
call
adc
cmpsb
loope
std
stos
das
sbb
or
movsb
sub
popa
imul
sahf
mov
stc
outsl
push
pop
pop
add
add
in
loop
and
insb
push
mov
adc
xor
or
stc
xchg
cmp
movb
lea
jb
bt
cmp
pushf
lea
jae
mov
call
pop
cmp
inc
in
arpl
test
icebp
jae
orb
sbb
sbb
push
loop
dec
cmc
loopne
aas
in
mov
cmp
outsl
loop
push
insb
fsubrs
in
xlat
fdivrl
out
mov
xchg
xchg
inc
in
lea
jg
shlb
divb
xor
movb
call
lea
je
pusha
cmp
add
movw
mov
jmp
sbb
jl
mov
push
jp
mov
cmp
inc
rclb
push
aad
and
and
or
add
sbb
mov
iret
negl
adc
dec
xlat
imul
inc
jno
hlt
clc
lock
or
mov
lods
enter
and
outsb
clc
mov
sar
jbe
sbb
lret
inc
rcl
ret
lahf
imul
imul
bound
mov
stc
cltd
adc
xor
inc
mov
or
xor
bound
cmp
dec
rcrl
popa
in
lcall
mov
mov
sti
gs
jmp
push
fsub
data16
cmp
mov
imul
movsl
sub
jge
lret
mov
add
icebp
lret
lods
sub
push
mov
fsubs
jp
lea
xchg
push
xchg
and
push
flds
sbb
mov
ret
insb
mov
test
fsqrt
in
mov
sar
pop
pop
or
add
and
test
push
mov
adc
jo
ja
push
fwait
mov
cmp
data16
cli
mov
stos
out
outsl
repnz
cmp
xchg
sub
enter
mov
enter
in
cltd
aas
loope
das
jbe
iret
jnp
adc
xor
xchg
push
lods
pop
and
ret
movb
fsubs
jno
jnp
nop
cmp
mov
movsl
popa
call
cld
loopne
out
dec
shrl
aaa
ds
sub
rclb
sbb
sub
outsb
add
scas
stos
push
ret
cwtl
ret
out
add
imul
lods
add
push
sbb
lods
push
add
pushf
stos
fdivrl
pop
pop
dec
fcomps
stos
pop
sub
repz
popf
and
je
jo
mov
negb
test
adc
xor
cmp
dec
stc
arpl
mov
mov
mov
mov
pop
add
xchg
adc
push
pop
iret
insb
push
inc
hlt
dec
pop
shlb
jge
adc
sub
dec
or
jae
and
enter
push
pop
bound
insb
pop
xor
aad
and
int3
push
sub
dec
sbb
xorl
insl
clc
mov
xor
lods
add
roll
push
std
movsl
inc
call
es
mov
stc
pushf
jmp
pusha
pusha
sub
movl
clc
pushf
bt
cmp
pushf
lea
ja
cmc
call
pushf
call
add
inc
imul
gs
jb
jo
imul
and
jae
pushf
call
dec
push
fisubs
xor
int
jp
mov
fwait
sub
cmp
loop
icebp
pop
dec
aas
jmp
rcll
push
mov
insb
in
loop
clc
fimuls
adc
fbstp
pop
test
cmp
sbb
fldl
mov
aaa
aas
sub
push
aam
out
fs
xor
adc
sub
jp
loop
je
cwtl
mov
in
mov
ja
push
loope
push
push
sbb
je
sub
xlat
lods
shrl
into
jp
iret
jbe
shll
shll
push
adc
aaa
sbb
ret
test
mov
xor
cld
test
dec
aad
aam
jecxz
lock
in
loop
sbb
dec
in
mov
push
ss
and
gs
cmpl
and
sbb
loop
cmp
test
insl
sbb
divb
xor
pushl
add
jbe
cmp
adc
xor
dec
imul
call
push
test
loop
fsubl
mov
sbb
add
arpl
roll
loopne
sub
imul
bound
idivb
mov
inc
dec
dec
inc
push
dec
xor
cs
insb
add
xchg
xchg
push
pusha
push
sub
pusha
movb
lea
jmp
lea
je
cmc
cmc
call
push
pushf
call
add
inc
gs
outsl
fs
gs
imul
add
int3
sar
jmp
add
outsb
negl
dec
mov
jns
xchg
adc
sub
jae
cmp
sbb
pop
pushf
fbld
dec
sbb
add
sub
mov
mov
roll
jne
push
lock
sbb
mov
out
loop
xlat
rolb
dec
lock
cld
insb
insl
mov
insb
xor
mov
mull
rorl
sub
cmp
mov
push
iret
sarl
mov
jp
lret
insb
or
in
mov
idivb
push
cmp
xchg
mov
testl
out
stc
jge
stos
push
stos
push
loop
push
xchg
mov
in
mov
fwait
fcoms
loop
pop
sarb
push
sub
dec
or
int3
add
sbb
dec
notb
jbe
int
sbb
adc
cmp
fcmovnbe
pushf
movl
call
jbe
movsl
in
xchg
fs
pop
inc
push
fdecstp
loop
fdivrs
dec
movsl
out
jbe
movsl
loopne
into
cs
inc
jbe
das
movsl
loopne
add
fs
ja
dec
rcl
or
sub
pusha
xor
sub
lea
add
shl
mov
adc
cmc
sbb
shl
mov
clc
test
cmp
clc
repnz
pusha
call
mov
mov
add
rcrl
jno
addb
sete
shll
loop
or
jle
mov
enter
lods
loop
adc
insl
xlat
xchg
rorl
lods
clc
in
stc
mov
jne
enter
gs
push
add
jle
stos
mov
push
push
decl
ss
mov
xchg
mov
xorb
push
ror
jb
and
sbb
aas
in
or
jb
jbe
loopne
pop
xor
popa
jo
xor
insl
mov
test
movsb
movsl
jbe
jnp
add
mov
imul
aam
fdivrl
stc
mov
pop
les
insl
out
cli
test
adc
mov
xchg
fidivrl
iret
jae
enter
adc
cmp
adc
aas
idivl
ret
dec
rclb
in
in
jbe
movsl
inc
lcall
pop
pop
int
mov
dec
outsl
mov
mov
push
ret
insb
sbb
pop
dec
or
addr16
push
leave
adc
and
adc
stos
dec
hlt
sahf
adc
cmp
mov
lea
ja
jmp
push
lea
call
call
or
pushf
sbb
pop
or
mov
pop
fsubl
jns
mov
mov
mov
mov
leave
jmp
loop
jp
shrb
xchg
xchg
leave
adc
ret
cvtdq2ps
test
sarl
jae
mov
adc
cmp
push
cmp
clc
cmpb
call
repz
ja
mov
into
mov
popf
and
pop
fstpl
mov
insb
or
insb
scas
xor
inc
mov
mov
cmp
mov
mov
mov
negl
hlt
jl
mov
les
dec
nop
adc
pop
dec
cwtl
and
jmp
or
repz
inc
jecxz
adc
cmp
cmp
and
pop
sub
out
lea
jae
mov
movzbw
push
pushf
mov
movzbw
movzbl
call
mov
inc
push
or
dec
aad
fstpl
je
mov
ficoml
and
popa
in
sbbb
incl
or
mov
pop
mov
imul
add
push
dec
ss
lds
mov
sti
mov
sub
adc
mov
addr16
pop
xchg
in
mov
mov
jbe
adc
cmc
mov
or
cmp
movw
pushf
mov
mov
pushf
mov
push
pushl
ret
push
pushl
pushf
lea
je
add
rol
jmp
stos
pushf
lea
jmp
pop
sbb
sbb
in
push
dec
fistpl
outsl
lock
mov
cmpsl
sub
aad
mov
scas
cltd
faddl
addb
test
loop
mov
insb
insb
sbb
je
into
jecxz
xchg
xor
fistps
addr16
js
mov
adc
cmp
btc
movw
mov
bt
pushl
pushf
cmp
jmp
cli
incl
fs
cs
cmp
dec
rcrl
addr16
mov
fwait
push
add
dec
out
in
mov
out
js
adc
push
push
ror
push
dec
lret
rcrw
sub
mov
aam
sbb
jno
mov
ljmp
sbb
sbb
pusha
mov
pushf
stc
cmp
bt
repnz
call
icebp
idivb
movsb
sbb
cli
push
test
pop
in
hlt
jp
lcall
std
inc
imul
mov
push
xlat
jge
int
pop
inc
mov
hlt
iret
inc
icebp
lods
sbb
push
and
imul
les
mov
and
arpl
shlb
inc
dec
call
push
scas
pop
add
call
idivb
movsl
shlb
aad
je
push
cs
push
jbe
jbe
movsl
dec
mov
or
mov
loope
negb
push
jp
jp
or
mov
fsubp
fcom
jnp
icebp
or
popa
sub
popf
sti
addl
xchg
fsubp
mov
test
mov
shlb
test
test
lcall
or
add
call
mov
lods
dec
out
cwtl
inc
out
inc
in
nop
xor
aas
inc
sub
or
jnp
movsl
xor
push
jecxz
out
outsl
lock
xor
sbb
or
arpl
ret
jb
stos
lods
lahf
sub
js
and
mov
cwtl
mov
add
xor
sub
inc
lock
es
xor
or
call
mov
adc
movzbl
pop
call
sub
push
or
ds
mov
cmp
pop
rcl
push
lods
fwait
imul
xor
and
test
stc
sti
jne
xchg
imul
push
scas
cs
jb
xchg
clc
cltd
adc
adc
pop
aam
xchg
push
sbb
mov
sbb
movsl
ret
adc
xlat
negl
jle
iret
mov
dec
cmc
adc
ds
or
mov
and
andl
xor
push
mov
ja
repz
push
xor
jo
movsb
xchg
and
addr16
xor
sarb
lret
imul
imul
xlat
sub
lahf
add
out
or
jno
adc
jbe
pusha
lods
dec
jmp
lret
outsl
adc
loop
popa
or
scas
cmp
pushf
inc
out
into
dec
inc
in
cmpsb
inc
jle
mov
cmp
in
pop
cs
sub
shr
pop
jge
shrb
cld
sbb
and
repz
inc
call
dec
out
mov
mov
xor
or
inc
sbb
cwtl
add
jbe
stc
push
std
lahf
popa
in
cli
imul
aad
ret
mov
add
loop
mov
mov
movsb
push
push
add
les
fyl2xp1
test
mov
testb
pop
movb
mov
dec
cmc
stc
rol
cmp
bt
bt
clc
sub
jmp
pusha
pusha
lea
call
test
sub
pusha
jmp
jmp
push
cmp
inc
repnz
pop
jl
cmp
test
mov
outsb
mov
int3
leave
insb
push
lcall
sbb
popf
lahf
add
cmc
xchg
cs
insb
jo
xchg
pop
inc
rcrb
ficompl
cltd
inc
aas
sub
leave
or
inc
dec
cmc
mov
adc
enter
mulb
out
xor
andb
addr16
inc
sub
mov
fnsave
arpl
mov
adc
les
pop
fsubl
xchg
cmp
fnclex
mov
scas
cltd
faddl
and
jmp
sub
inc
insb
sbb
js
out
xchg
mov
and
mov
jns
into
jp
mov
adc
inc
shrl
jo
aas
das
sub
sub
jb
addl
test
mov
sbb
mov
repnz
out
pop
or
scas
into
shlb
loopne
pop
clc
test
gs
std
leave
ss
rclb
inc
dec
repnz
mov
push
cmp
ss
adc
adc
sub
or
mov
aas
jns
inc
mov
lea
fistl
inc
int
subb
mov
pushf
inc
mov
push
sahf
sub
jle
shll
mov
or
mov
mov
lea
ja
pusha
pusha
lea
jb
pusha
cmpb
push
movb
lea
jge
jne
rcl
or
mov
call
lea
jne
shl
mov
or
not
cmc
sub
ror
mov
pusha
bt
clc
sub
stc
clc
pushl
popl
bt
cmp
movw
pusha
lea
ja
sar
pushf
sub
bts
sub
add
lea
pusha
not
mov
add
mov
call
push
bt
bt
cmp
pusha
pusha
pushf
jmp
lcall
adc
movsl
sub
push
loop
ljmp
xchg
lret
test
das
mov
jbe
mov
inc
inc
test
sbb
push
rcll
mov
cmc
push
test
jns
aas
jb
insb
cmp
mov
aam
mov
mov
mov
negb
jle
push
mov
mov
testb
jae
mov
push
bound
inc
jmp
aaa
in
ficoml
testb
dec
stc
cmp
call
call
incl
sbb
add
das
mov
int3
push
popa
in
js
mov
jl
loop
ja
mov
mov
insb
mov
mov
loop
jg
in
insb
sbb
hlt
jae
mov
sbb
mov
or
movsl
dec
hlt
mov
sarl
mov
imul
xor
cmpsb
adc
push
sti
jle
xchg
sbb
dec
testl
daa
adc
in
mov
aam
jl
loop
jbe
push
sbb
mov
mov
cmp
mov
push
mov
cmc
popf
aas
in
xor
testb
movl
pushf
call
in
bnd
cmpsl
imul
imul
or
cmpsl
sub
lret
jb
loop
xchg
subb
in
mov
mov
loop
fwait
test
and
mov
fidivl
popa
push
test
repz
dec
ljmp
adc
inc
lea
push
dec
inc
dec
dec
xor
cs
insb
add
xor
sbb
push
jb
jg
test
test
fistps
lds
jns
cmp
pop
mov
dec
clc
sbb
ss
cld
mov
mov
cs
repnz
push
stc
addr16
cmc
jge
scas
pop
mov
lock
add
lea
mull
jb
mov
imul
add
mov
arpl
cld
or
xor
pop
popf
pop
xchg
push
adc
ja
lcall
mov
cmc
inc
in
cwtl
inc
lock
xor
jne
leave
adc
inc
cmc
fbld
dec
push
fsubl
dec
gs
xor
jg
adcl
push
stos
sub
aas
lds
cmp
add
and
ljmp
jo
and
add
and
sbb
icebp
loop
stos
sbb
push
js
jecxz
dec
cmc
bound
adc
ret
inc
out
cmp
aas
xchg
aaa
out
call
fidivrl
xchg
mov
and
outsl
adc
test
push
add
aaa
fcoml
stc
lcall
stc
sarl
faddl
iret
pop
or
addr16
push
pushf
fwait
in
xchg
mov
ret
bound
in
jae
xor
dec
jmp
int3
loopne
jle
mov
mov
repnz
aaa
rol
andl
or
xchg
jmp
call
popa
push
jb
nop
adc
adc
sub
push
movsb
dec
mov
push
pop
ret
out
sub
mov
add
mov
in
or
and
scas
into
pop
loop
xor
mov
out
popa
mov
imul
cmp
mov
sbb
lahf
dec
xchg
pop
jecxz
imul
dec
cmc
mov
xlat
andl
fnsave
iret
or
xchg
cmp
loope
jge
and
push
std
popf
loope,pt
adc
inc
dec
cmp
call
mov
mov
mov
enter
jns
mov
mov
pop
loope
fcoms
xor
or
inc
mov
outsl
push
jnp
inc
lock
cwtl
xchg
shr
mov
aam
jns
pop
add
enter
jmp
lea
mov
es
shl
sbb
in
or
sbb
adc
dec
in
xchg
cmp
jl
pop
jnp
mov
push
cmp
xchg
aad
or
roll
imul
push
cld
cmpsl
adc
inc
imul
inc
out
call
sub
dec
iret
jnp
dec
push
push
popa
push
aad
push
inc
mov
sbb
cmp
xor
or
or
pop
in
sub
dec
out
leave
sub
mov
andb
mov
cmp
nop
mov
andl
mov
pop
insb
lock
cmp
mov
dec
cmc
movsb
xchg
or
pop
cmpsb
jno
push
les
add
pop
sti
lahf
inc
repnz
inc
adc
dec
pop
icebp
lods
dec
xlat
sub
jge
mov
sub
dec
fiaddl
or
mov
xchg
fdivrs
pop
movsl
dec
aad
or
or
dec
add
movsl
pop
mov
fidivl
scas
push
xor
int3
jb
xchg
clc
js
movl
xchg
jno
xlat
rcll
add
mov
xchg
lret
or
fdivrs
into
jp
shl
pushf
mov
and
and
ret
mov
jae
adc
adc
dec
or
aaa
loopne
or
pop
ret
push
cltd
and
jb
adc
and
xchg
push
mov
mov
inc
jo
daa
jecxz
orl
inc
shll
mov
fs
mov
xchg
cmp
out
cli
lcall
enter
mov
test
sbb
xor
fisttps
int3
insl
adc
outsb
mov
mov
push
add
and
sub
jge
lret
jne
testb
into
ljmp
lds
mov
sbb
dec
rclb
test
pop
imul
cmp
xchg
jb
adc
lods
cs
mov
out
dec
cwtl
insl
mov
pop
out
hlt
rorb
pop
ret
lds
sub
std
inc
inc
out
jb
xchg
jg
push
mov
and
inc
incb
popa
jmp
cmpsb
lcall
mov
ja
sarl
inc
out
lahf
add
or
sub
jecxz
adc
or
push
cli
lahf
inc
jmp
cmp
adcl
dec
inc
xor
cmp
cmc
movw
pushf
pusha
test
call
mov
lds
fs
mov
frstor
imul
shll
imul
out
aas
sub
in
mov
push
sahf
ds
push
push
mov
adc
sbb
lods
scas
cmp
cld
jnp
test
loope
xor
jl
int
adc
dec
xor
pusha
repnz
call
push
mov
js
test
lods
rolb
or
lret
pop
scas
mov
mov
out
stos
mov
jge
pop
mov
jno
in
das
xor
xchg
mov
adc
sbb
int3
fisubs
mull
mov
or
aaa
nop
pop
bound
stos
pop
push
xchg
mov
push
cmp
pop
add
inc
push
xchg
cmp
test
fiaddl
les
testb
pop
push
fsubs
loopne
test
xchg
push
fldenv
jno
orl
mov
sbb
mov
or
push
xchg
jnp
pop
lcall
jb
test
push
lahf
inc
xorb
xor
push
arpl
mov
xor
lock
and
lahf
mov
cmp
aam
outsb
clc
cwtl
cmp
xchg
jge
iret
jns
lret
jae
testb
loopne
mov
push
lea
ja
pushf
mov
pusha
lea
jb
pushf
bt
stc
bt
cmpb
movb
lea
jae
pushf
lea
jne
or
jb
mov
cmc
add
test
stc
movzwl
dec
shrd
push
mov
pushf
add
jmp
mov
sbb
cmp
mov
addr16
je
mov
shl
lcall
dec
out
int
jmp
out
fistpll
xchg
enter
pop
pop
shr
add
jae
leave
jae
cmp
sub
pop
or
or
pop
jmp
and
ja
jae
mov
adc
dec
and
incl
xor
inc
incl
pop
mov
xor
test
jle
mov
es
push
add
mov
aad
push
rcrb
push
push
xor
sub
or
cmp
mov
out
xor
test
jno
shrb
push
adc
dec
jle
and
enter
mov
rolb
and
sbb
pop
sub
cmc
cmc
movl
neg
jmp
lea
call
jmp
lea
call
pusha
pushf
pusha
adc
movb
lea
jae
call
call
call
fstpt
xor
sbb
out
out
jp
test
xchg
and
pop
push
loop
lahf
repnz
inc
scas
movsl
dec
imul
cmpsl
sub
dec
inc
xchg
mov
add
mov
mov
pop
scas
pop
or
adc
dec
or
call
adc
arpl
xchg
push
movsb
sub
loop
cmp
push
loop
sbb
loope
iret
in
mov
adc
mov
sahf
loop
and
sbb
mov
lock
add
insl
sbb
push
mov
mulb
testb
ds
daa
scas
xor
inc
xor
and
outsl
lock
cld
xchg
xchg
pop
pushf
inc
jecxz
mov
sub
sub
test
push
adc
addr16
pop
insb
sbb
sahf
mov
mov
xchg
add
test
mov
add
in
mov
rclb
testb
xchg
xchg
dec
ljmp
xor
loope
icebp
jne
jne
movsl
inc
gs
loop
test
fucomip
mov
fcoms
adc
push
push
or
pop
int
dec
fwait
test
test
xchg
leave
jne
jb
mov
std
adc
dec
shrb
bswap
setno
lea
push
jmp
pushl
popl
stc
cmp
jmp
lret
mov
int
fs
cmpsb
adc
insl
out
jne
jnp
orl
xchg
aaa
mov
mov
imul
and
mov
pusha
or
push
adc
mov
xchg
test
mov
xchg
xor
jl
shrl
push
notb
testb
arpl
xor
bswap
mov
pushf
pusha
push
jmp
scas
mov
lds
arpl
jmp
idivb
xchg
adc
imul
mov
addr16
dec
lret
mov
jno
pop
push
repz
add
ja
adc
shrl
lcall
push
shrl
pop
add
testb
pusha
jmp
jae
rcr
pushf
mov
btc
call
mov
pusha
push
movb
push
lea
jmp
call
inc
inc
leave
push
icebp
subl
js
ja
xchg
xchg
and
xor
xor
or
mov
inc
in
xor
outsl
jno
push
mov
add
arpl
outsb
jo
cmc
jl
mov
push
cwtl
push
shll
inc
scas
and
and
test
push
cmpsl
push
cld
pushf
dec
repz
cmp
subl
push
fadd
andb
and
lea
jne
push
pushf
pusha
call
pusha
lea
ja
pusha
lea
ja
push
push
stc
clc
imul
cmp
add
pusha
pushl
pushf
pushf
lea
jmp
pop
jmp
rorb
gs
adc
aaa
rorb
xlat
popa
pop
mov
jnp
stos
push
jnp
in
jg
ret
mov
fs
loope
loope
out
int
gs
cmpsl
jl
insb
jo
jge
add
aad
mov
or
idiv
xchg
inc
jae
mov
cltd
sbb
das
into
cmp
icebp
pop
and
inc
sbb
in
xor
inc
out
lds
aas
fisubrs
in
xchg
cmp
xchg
xlat
jg
ret
mov
notb
popa
push
movzwl
rcr
mov
jmp
lea
jne
bsf
inc
rol
bsf
mov
call
lea
jne
push
mov
jmp
pop
cmp
inc
out
pop
enter
lahf
xchg
pop
stos
xor
pop
out
adc
fbstp
mov
jmp
sti
icebp
cwtl
inc
lret
outsl
jno
scas
cmp
pop
js
mov
lock
xchg
inc
or
push
stc
adc
jl
call
lcall
mov
xor
popa
xchg
fwait
lods
fidivs
jl
inc
out
test
xchg
fadds
jno
ret
push
xchg
sub
daa
lret
adc
les
in
out
jae
addl
insl
fwait
push
loopne
mov
sbb
sbb
add
cmpsb
or
imul
into
xchg
inc
fbstp
lcall
fsts
dec
lea
dec
xor
xchg
int
aam
mov
push
enter
adc
test
pop
lret
scas
pop
call
sub
stos
ljmp
pop
xchg
jecxz
xor
test
iret
jno
mov
add
adc
jae
xchg
or
push
push
sarl
sete
mov
cmp
jo
aaa
jecxz
adc
dec
int3
ret
clc
sarl
and
mov
inc
stos
aad
mov
push
lret
les
inc
dec
xchg
gs
ljmp
or
and
scas
in
out
jg
pop
push
pop
int3
or
mov
and
sub
out
leave
push
jmp
lock
sbb
aam
stos
shll
cmpsl
jp
mov
pop
add
in
xchg
cmp
adcl
jno
xor
mov
lcall
call
xchg
sbb
outsb
mov
sbb
cmpsl
fisubrs
das
into
pop
mov
xchg
mov
xchg
lods
xor
outsl
adc
mov
sbb
and
and
xor
sahf
ds
shl
int3
imul
add
fsubrl
lret
test
and
fistpl
pop
add
insb
push
mov
addr16
enter
xor
xchg
into
insl
push
lods
adc
push
lds
ret
xor
mov
or
pusha
in
out
std
addl
out
sahf
inc
fwait
sub
popa
imul
fistpl
dec
test
jmp
push
aam
and
insb
fnstcw
pop
stc
xchg
cmp
sub
add
mov
jmp
sub
test
mov
add
mov
mov
cld
push
mov
pop
lret
fistps
imul
pop
leave
or
inc
jmp
mov
fdivl
fidivrl
xchg
inc
add
js
ds
jno
enter
push
add
inc
adc
push
outsl
pop
pushf
mov
sub
insl
mov
les
push
loopne
in
jns
pop
mov
hlt
jns
fadd
or
mov
sub
fcmovnu
aas
popa
push
enter
sub
cmp
push
in
repz
ret
imul
std
stos
sbb
test
loop
xor
test
notb
adc
push
rcll
xor
xchg
test
dec
enter
out
jns
xchg
xchg
and
xchg
loop
loop
mov
jge
loop
or
es
pusha
push
frndint
pop
sbb
imul
in
pop
mov
fisubs
xor
lret
cmpsb
push
cld
stos
push
cmc
xchg
aaa
loop
sub
adc
push
pushf
xchg
ss
and
rcrl
gs
xchg
and
xchg
loop
jg
arpl
std
addr16
loop
mov
loop
mov
xchg
cwtl
dec
or
test
or
xchg
inc
in
xchg
ss
notb
mov
fwait
jge
lea
xor
pop
lds
xchg
sbb
mov
imul
mov
add
xor
sarl
jae
fdivs
insb
sbb
imul
insb
jns
mov
push
stc
cltd
ds
fdivrl
int3
outsl
sbb
imul
cmp
mov
push
stc
call
pusha
mov
pushl
pushl
ret
in
dec
int
data16
mov
testl
jns
jbe
mov
ljmp
bound
in
xchg
jae
and
insb
adc
sub
pop
mov
jecxz
mov
je
ret
mov
in
cltd
inc
adc
push
add
mov
loopne
sub
mov
in
in
jnp
mov
xchg
sbb
jae
inc
pusha
imull
sub
jl
mov
cwtl
idivl
jbe
shll
jnp
rolb
out
stos
dec
rcr
addl
imul
iret
pop
les
xor
jo
mov
cld
push
add
pop
stc
push
stos
pop
stos
xchg
adc
aas
or
outsb
mov
cld
fwait
inc
jmp
sub
subb
notb
inc
aaa
sar
mov
pusha
bt
bt
and
bt
bt
bt
push
add
pushl
lea
jmp
iret
out
insl
and
push
xchg
hlt
aaa
out
dec
ret
decl
inc
mov
cmp
sahf
movsb
xchg
out
xor
mov
lcall
lods
add
in
sbb
aam
add
aaa
es
jmp
mov
push
cld
iret
inc
sbb
test
dec
add
cltd
mov
icebp
std
and
mov
add
hlt
scas
je
mull
negb
push
out
aaa
shlb
movsb
add
push
pop
stos
out
inc
daa
imul
ljmp
bound
adc
pop
jg
sbb
js
idivl
mov
xor
je
mov
sub
out
scas
cld
or
out
cmp
cwtl
and
ret
jp
out
push
lahf
pop
xchg
cmp
ja
shrl
shr
ljmp
out
and
jb
xchg
or
jo
lret
pusha
jecxz
cwtl
mov
outsl
fstl
xchg
push
out
jg
adc
out
jmp
fisttpl
movsl
mov
out
adc
adc
mov
mov
ret
cmc
movsb
out
sub
cltd
push
add
es
mov
pushf
out
fucomi
cmp
pop
aaa
push
icebp
movsb
inc
out
and
xor
and
cltd
rolb
leave
jo
cli
jl
test
aam
stc
outsl
push
cs
mov
out
mov
lods
sar
pushf
mov
addr16
popf
push
push
adc
out
adc
cld
xlat
fcomps
pop
mov
in
and
out
dec
jnp
test
xchg
push
out
xor
sbb
out
fiaddl
xchg
cli
out
pusha
inc
lock
adc
push
or
loopne
push
sbb
movsl
out
shlb
add
imul
push
lret
xchg
out
adcb
inc
jle
pop
fists
or
bnd
jno
sub
push
cmp
out
sub
mov
and
imul
dec
out
cmpsl
or
or
fwait
out
addr16
sub
pop
je
outsl
outsb
mov
cmpsl
out
jnp
adc
lcall
cltd
sbb
mov
popa
insb
mov
outsb
sub
rcrb
cltd
pop
mov
shlb
mov
mov
cs
xor
mov
push
add
ljmp
add
pop
shl
rolb
push
out
sbb
outsb
stos
daa
lods
jmp
out
cld
sub
outsl
out
and
iret
cmc
mov
aaa
xchg
cld
xor
out
mov
cmpb
mov
or
dec
cli
jmp
jne
stos
sub
leave
xchg
sub
out
jae
sbb
inc
inc
fldt
stos
dec
jecxz
jnp
cmp
and
xchg
repz
mull
out
ret
xchg
in
mov
test
cmpsl
rorl
ret
jbe
sub
mov
push
in
movl
jo
or
cmpl
push
lahf
pop
xchg
lret
mov
out
mov
pop
movsb
rolb
inc
adc
aam
jecxz
insb
aaa
cmpb
push
dec
ss
cmp
pop
and
cltd
mov
sub
xchg
mov
ds
sbb
cmp
pop
cltd
fstpl
out
push
ret
xlat
scas
leave
out
pop
out
xor
repz
lcall
inc
adc
shll
xchg
int3
or
out
outsl
cmp
out
mov
and
inc
lcall
mov
pop
std
scas
mov
leave
xor
rolb
sub
frstor
pop
lret
cs
xor
sub
fmull
mov
aam
rclb
or
in
xchg
adc
out
rol
and
jns
cmp
fwait
repnz
cmp
jbe
out
inc
add
push
sub
sub
inc
cmp
sub
jnp
rorl
pop
out
orb
lcall
or
or
push
mov
pop
jl
sbb
jecxz
imul
sub
es
push
gs
faddl
and
out
ja
adc
lods
xor
arpl
imul
and
dec
mov
cld
pop
jge
test
out
hlt
jnp
mov
pop
scas
out
jmp
inc
dec
addr16
out
pop
jbe
sub
inc
fstpl
xchg
xchg
icebp
lock
fsubrl
and
ja
scas
xchg
in
out
ror
mov
imul
xchg
in
popf
add
xor
outsl
mov
out
repz
lret
inc
cwtl
into
jecxz
test
call
mov
inc
jecxz
adc
arpl
inc
pop
jns
mov
in
icebp
jle
cmc
or
mov
xchg
mov
clc
out
arpl
push
xor
jo
inc
pop
loop
jnp
jae
pop
sbb
je
xchg
sub
adc
jl,pt
nop
out
dec
pop
mov
in
js
out
add
or
lock
push
add
mov
push
js
jbe
sbb
mov
adc
das
lods
adc
xlat
sbb
xchg
in
jbe
mov
icebp
ss
dec
jecxz
mov
out
lcall
mov
movsl
mov
inc
pop
push
and
add
or
pop
mov
repz
out
fwait
scas
cli
adc
outsb
cltd
sti
movsl
loope
in
or
leave
mov
push
loopne
sbb
push
idivl
test
sbb
dec
popf
out
cmpsl
or
adc
fisubs
and
jmp
out
dec
jnp
stos
scas
jbe
cli
mov
ror
push
sbb
fwait
out
mov
or
jle
add
push
aaa
test
xchg
les
mov
aaa
out
pop
hlt
mov
gs
out
rcll
adc
jl
out
mov
aam
sbb
or
lcall
xor
mov
mov
sub
jne
into
or
adc
xchg
ret
or
sub
sub
out
push
out
add
or
sub
fimuls
repnz
cmc
popa
inc
inc
or
out
repnz
imul
int
inc
or
loop
sub
movsb
jbe
icebp
mov
push
jnp
pop
icebp
mov
out
mov
inc
cmp
sbb
mov
xor
and
or
repnz
sub
in
sub
lods
arpl
ja
xor
aad
sub
jecxz
inc
jne
sbbl
scas
push
adc
cmpsl
pop
arpl
imul
out
jge
ficoms
mov
inc
jb
cmp
insl
jecxz
mul
pusha
push
push
adc
push
sub
pusha
out
out
outsl
aaa
xchg
stc
cmp
adc
push
out
inc
sti
fbld
stos
mov
mov
and
cmpsl
xchg
fadd
adc
mov
dec
leave
inc
inc
popf
out
lods
lds
jae
jg
xchg
xor
test
jne
mov
pushf
stos
es
xor
fimull
shr
xchg
loop
testb
jo
sbb
sbb
add
xchg
sub
inc
dec
jbe
jecxz
jno
out
movsl
shlb
in
out
ret
mov
test
jl
jbe
cltd
jmp
add
adc
mov
out
std
jo
out
add
or
jmp
sub
mov
scas
cmp
or
xor
cltd
pop
inc
or
sub
out
add
cmpsb
jno
xor
lods
inc
sub
scas
out
push
fs
adc
mov
andl
mov
sbb
mov
mov
test
inc
inc
ret
in
daa
push
mov
jb
pop
or
sbb
pushf
adc
imul
xchg
jg
xor
add
push
rcrl
xchg
adcl
ja
lahf
xchg
cmp
packuswb
cmp
add
add
xor
pop
inc
arpl
mov
cmp
mov
jo
testb
add
xchg
je
arpl
jb
jecxz
out
or
rorl
push
push
outsb
xor
inc
into
mov
xchg
inc
idivb
out
xchg
loope
dec
xchg
push
pop
movsb
xor
repnz
mov
and
imul
push
cmc
dec
mov
repz
dec
leave
push
or
mov
cmc
outsb
inc
inc
push
push
ljmp
mov
push
mov
cmp
ljmp
pusha
cmp
les
push
pusha
push
aaa
mov
inc
xchg
loopne
mov
push
jne
aaa
push
mov
xchg
inc
loope
shll
push
pusha
aaa
inc
mov
loopne
rolb
or
push
scas
aaa
jmp
in
lcall
aad
sub
rorb
push
dec
aaa
stos
mov
ss
lret
je
insl
ss
push
scas
push
mov
xchg
inc
test
or
mov
aaa
stc
inc
nop
push
mov
ljmp
es
mov
pop
shr
jp
jns
imul
notb
inc
jne
fnsave
adcb
inc
cmp
shr
call
arpl
push
notl
push
cmc
roll
pop
mulb
push
dec
idivb
jmp
jecxz
icebp
cmp
gs
out
shll
inc
fcomip
andb
stos
popa
fdivp
jp
jno
push
shr
add
mov
je
xor
mul
repz
push
push
loope
hlt
inc
xchg
in
add
and
popa
sub
inc
mov
das
jne
hlt
mov
add
hlt
jecxz
mov
mov
fbld
shlb
add
dec
inc
scas
xor
into
push
das
aaa
or
dec
inc
lods
xor
leave
push
loopne
jmp
or
in
fisubl
lahf
insb
dec
hlt
push
inc
inc
push
mov
inc
loopne
div
repnz
ret
frstor
ja
jmp
arpl
and
jecxz
xor
ljmp
pop
and
xor
ljmp
je
push
call
ja
imull
pop
sub
orl
dec
js
jo
or
call
inc
jmp
and
adc
and
les
and
push
mov
lods
les
and
inc
ljmp
popf
push
cmc
in
mov
les
arpl
and
lea
mov
sub
mov
loop
loopne
inc
cmc
push
cmc
mulb
inc
stc
imul
xor
jecxz
adc
inc
push
lcall
arpl
in
lods
loop
push
jbe
add
jp
jne
not
add
movsb
repnz
loope
ret
popa
notl
mov
shrl
in
pop
jno
cmc
jecxz
idivl
daa
mov
loop
outsl
and
jno
aad
push
flds
shlb
xor
pop
xchg
loop
outsl
xor
and
je
mov
ja
in
sub
jmp
jmp
aaa
dec
pusha
stos
out
nop
fiaddl
push
inc
test
push
arpl
push
push
push
arpl
outsb
inc
out
pop
or
lahf
in
pop
stc
push
sub
int3
add
faddl
call
test
dec
jecxz
push
jbe
jne
ja
push
jnp
jne
negl
pop
je
lret
imul
loop
mov
push
lods
or
cmc
sbb
adc
out
popa
rolb
out
dec
loop
adc
icebp
call
loopne
js
call
arpl
and
loop
in
jl
jne
jae
shlb
jb
js
cmc
js
hlt
sbb
call
iret
mov
jecxz
mov
xchg
lret
les
mov
xor
add
shlb
mov
scas
js
and
imull
into
adc
mov
xorl
out
and
shlb
out
and
or
std
std
loop
idivb
add
scas
mov
call
xchg
punpckhdq
mov
pop
notl
arpl
jbe
in
xchg
arpl
shlb
pop
loopne
arpl
insb
sub
sub
push
rcl
mov
pusha
jmp
dec
pop
push
push
dec
mov
dec
mov
xor
mov
cmp
pop
hlt
inc
xchg
test
xor
shl
daa
dec
cmc
sbb
shrl
push
imul
push
jecxz
jmp
add
xchg
sub
ret
iret
ret
inc
hlt
push
push
adc
call
pop
jne
out
aad
jb
loopne
js
jmp
subb
icebp
push
push
inc
in
cmp
cmp
insb
test
cltd
inc
out
push
shlb
in
arpl
inc
cmp
mov
in
in
loope
sub
pop
dec
cmp
stos
dec
push
out
xor
test
das
fsubr
enter
das
mov
icebp
popa
or
idivb
dec
loop
and
push
lods
inc
sub
mov
xlat
push
cmc
das
out
xlat
mov
cmpsl
dec
sbb
and
fimuls
arpl
hlt
sub
inc
das
jne
lods
xor
ljmp
jne
adc
mov
sbbl
push
shr
fwait
mov
hlt
subl
mov
ja
in
pop
sub
lods
jmp
loop
pop
inc
cmpsl
push
call
push
mov
sub
sub
or
in
xor
xchg
lret
push
loope
adc
loop
cli
jne
fucom
sub
pop
imul
outsl
add
xor
and
sub
cmp
call
or
sub
in
rclb
lods
and
xor
lea
not
popa
push
mov
mov
shll
cmpsb
adc
iret
add
xchg
xchg
jle
mov
dec
mov
ss
push
push
je
imul
loope
xchg
cmp
xor
outsb
shlb
jbe
ret
sub
ds
ret
mov
push
das
ja
dec
loope
inc
movsl
dec
inc
xchg
and
gs
loop
into
mov
sub
je
or
pop
cmp
fldenv
and
mov
scas
cld
push
sbb
inc
jo
mov
push
shlb
jle
ficoml
fcompl
loop
jb
mov
loope
cmp
cmp
das
cmp
cmp
das
cmp
das
cmp
das
cmp
das
cmp
das
cmp
das
cmp
push
jp
jp
pushf
push
inc
add
test
loopne
pusha
mov
hlt
xchg
popa
push
loop
ja
arpl
hlt
push
test
push
pusha
jecxz
je
neg
and
shl
mov
pusha
fisubrl
shlb
mov
ljmp
xor
jb
in
clc
and
pusha
adc
or
es
pusha
call
popf
notb
hlt
fs
addl
pop
hlt
jecxz
add
je
xor
in
push
out
ljmp
pop
and
push
jmp
fldenv
in
ja
inc
scas
loop
pop
mov
pop
insl
loop
mov
pusha
sub
add
xor
mov
pusha
call
aaa
mov
sbb
sub
dec
mov
mov
outsl
lods
push
xchg
loop
jl
jb
dec
push
cli
sbb
cli
xor
rcpps
push
lods
cli
and
icebp
push
cli
aam
cli
test
scas
jbe
insb
push
loop
cmpsl
push
push
aaa
xchg
inc
fiaddl
xor
jns
xchg
aaa
dec
sbb
inc
jae
imul
push
shll
or
fcmovu
inc
mov
das
je
pop
push
adc
int
ficoml
je
pop
mov
inc
loope
sbb
push
push
fisubl
je
pop
test
aaa
xchg
adc
bound
xor
les
aaa
aam
lret
movsl
push
out
repnz
negl
ja
push
xchg
divl
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
push
pusha
or
adcb
push
cli
push
push
cli
jecxz
cli
push
push
cli
mov
cli
enter
push
cli
mov
sub
dec
push
cli
in
push
cli
or
scas
push
cli
int
cli
outsb
push
cli
adcb
cld
cmp
cmp
das
cmp
cmp
ja
cmp
cmp
cmp
das
cmp
das
cmp
push
jecxz
je
insl
in
xchg
cld
mov
imul
in
jecxz
push
jl
push
pop
insb
add
insb
lods
cmc
or
cmp
push
popa
mov
xchg
mov
xchg
mov
xchg
out
arpl
xor
push
arpl
push
arpl
arpl
pop
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
call
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
lds
push
movsl
fimull
xor
xchg
dec
mov
xchg
les
push
jne
mov
add
and
xchg
lea
push
jo
push
mov
ja
pusha
cmp
mov
pop
mov
loope
insl
hlt
pop
aas
push
inc
aaa
push
xor
fldl
xor
lock
xorb
jae
xchg
sub
jmp
loop
add
subb
and
cmpsl
jb
in
cmc
mov
insb
testl
add
add
and
mov
add
add
je
call
add
add
add
je
cmc
les
jmp
xchg
notl
push
mov
das
pusha
orb
mov
xchg
mov
pop
fnstenv
mulb
cmc
mov
jl
push
jl
fiaddl
hlt
dec
inc
jne
inc
jecxz
inc
je
inc
divb
out
je
mov
imul
call
in
dec
mov
mov
jne
loopne
mov
subb
pusha
pop
push
push
jmp
push
jge
jne
jbe
insl
aad
insb
mulb
cmpsb
div
cli
mov
jne
divl
push
jecxz
addr16
and
insb
pop
and
insl
cmp
add
les
jmp
jne
insb
sbb
sub
notb
ja
jbe
cmc
pusha
pop
jbe
call
adc
jmp
or
out
and
or
pop
imul
outsb
push
jbe
jb
and
insb
adc
lahf
push
mov
lods
loop
xchg
mov
push
imul
jne
cmp
das
cmp
imulb
cmp
xor
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
les
lods
aaa
and
les
into
arpl
rcll
rcr
mov
push
adc
add
icebp
insb
out
cmc
push
in
aaa
inc
insl
ficoml
jmp
and
push
out
push
test
jmp
outsl
fldt
outsb
push
arpl
lea
popa
hlt
insb
mov
lret
leave
jb
and
add
test
jmp
bound
xor
insb
mov
call
mov
jl
push
jne
jl
push
out
enter
lret
inc
ja
inc
cmc
dec
inc
jbe
inc
call
inc
testl
dec
inc
imul
mov
push
fs
and
insb
and
dec
outsl
or
shr
fiaddl
push
loope
cmc
mov
sbb
ljmp
and
add
and
loope
add
add
movsl
testl
jecxz
jl
push
ja
lahf
cmc
gs
sub
arpl
add
repnz
jne
fnstenv
ja
lea
xor
jne
ficoml
je
pop
jae
divl
arpl
cwtl
lret
call
mov
add
and
in
pusha
into
insl
jne
inc
inc
jmp
jecxz
xor
jmp
adc
push
shl
adc
cmc
insl
add
shl
mov
stos
imul
dec
jo
arpl
arpl
push
loope
mov
fisubl
je
lcall
lods
add
jbe
into
call
imul
cmc
imul
les
xor
push
fcomps
rcll
loopne
lods
cltd
arpl
lret
insl
cmp
das
dec
jmp
cmc
jne
test
lods
mov
xchg
push
sub
or
dec
movsb
lahf
jne
out
sbb
sbb
mov
push
pusha
imul
xchg
hlt
jb
jmp
push
or
pop
jecxz
sbb
jmp
push
lahf
jb
jmp
or
mov
aad
push
sbb
sub
dec
imul
pusha
aaa
ljmp
push
in
dec
mov
pop
or
scas
notb
sub
imul
add
adc
jl
push
xor
inc
jecxz
dec
inc
dec
inc
xchg
das
and
lahf
and
jne
push
mov
mov
xchg
mov
push
and
jnp
shl
or
insl
and
push
and
and
lahf
iret
inc
pusha
xchg
jmp
loop
das
stos
imul
jl
push
push
cli
loop
add
cli
cmp
pop
inc
xor
ficoml
fsts
aaa
sub
in
lret
je
pop
lahf
push
inc
aaa
out
push
fidivrl
je
pop
push
push
test
mov
pop
xor
push
jne
rcll
push
and
mov
xchg
mov
xchg
mov
push
loopne
in
lret
insb
ljmp
mov
push
mov
jmp
loopne
popa
adc
pusha
push
arpl
push
arpl
xchg
ljmp
mov
xchg
mov
xchg
mov
mov
pop
jne
mov
cmc
dec
cmp
adc
ljmp
insb
imul
jns
pop
push
jmp
dec
mov
out
sbb
cltd
in
push
cmc
outsb
mov
fidivrl
movsl
jb
inc
insl
imul
jecxz
xchg
jne
inc
ljmp
aaa
loopne
arpl
arpl
push
arpl
arpl
in
or
xor
and
add
and
jmp
imulb
stos
imul
lahf
idivl
jne
push
jb
in
and
insl
lahf
or
outsl
hlt
outsl
or
fs
movsl
outsb
loopne
loopne
into
popa
push
jb
sbb
mov
hlt
movsl
shl
hlt
xchg
testl
mov
call
loope
lock
or
cmp
add
and
xchg
and
notl
jp
pusha
hlt
jb
and
and
imul
stos
imul
imul
in
sbb
and
dec
outsl
shr
mov
les
pop
xor
loop
arpl
arpl
arpl
out
push
push
arpl
arpl
push
arpl
lea
fisubl
int3
and
mov
loop
mov
and
mov
xchg
xor
rsqrtps
subl
dec
inc
orb
add
idiv
xor
call
fdivl
mov
icebp
es
mov
pop
sub
mov
divl
xorb
jmp
add
and
jmp
repz
stos
out
stos
outsl
pusha
and
dec
outsb
insb
test
jne
popa
push
pusha
push
arpl
outsl
jl
fiaddl
jb
pusha
jne
xor
je
push
out
xchg
push
jne
gs
cmc
fidivrs
jl
push
imull
push
insl
imul
jmp
inc
in
xor
mov
jmp
mov
out
and
outsb
pusha
sub
je
sub
scas
inc
into
mov
pop
loope
mov
movsl
xchg
insb
cli
xchg
push
stc
lods
out
mul
sbb
sub
notb
mov
pop
fsubl
stos
and
dec
and
jl
push
push
lahf
push
and
pop
mov
cmpl
loopne
mov
hlt
push
jecxz
stos
popa
and
mov
dec
divb
loope
call
and
jae
insb
and
arpl
dec
insl
add
aaa
sub
es
lret
or
jmp
insb
insb
out
and
jecxz
hlt
adc
hlt
xchg
scas
mov
xchg
mov
xchg
mov
xchg
mov
cmpsl
mov
imul
mov
xchg
push
mov
sub
hlt
insb
ds
jmp
push
mov
loop
cmp
inc
pusha
dec
inc
loop
mov
dec
test
hlt
into
jne
lds
insb
ja
testb
push
and
insb
push
cmp
imul
popa
sbb
out
dec
outsl
ret
inc
mov
hlt
push
call
leave
pusha
push
fcoml
pusha
and
jbe
sub
hlt
into
jb
sub
cmp
push
imul
cmp
add
and
test
fs
and
pop
call
and
call
dec
or
iret
popf
imul
shll
jmp
ss
das
sbb
or
test
testb
notl
inc
mov
push
xor
adc
out
mov
outsl
jp
lcall
pop
imul
daa
hlt
insb
outsb
or
and
and
push
mov
das
cmp
push
stos
fldenv
mov
dec
lea
sbb
insb
ljmp
jb
jmp
push
insb
loopne
daa
jecxz
arpl
and
jecxz
mull
repnz
jnp
cmp
das
imul
cmp
mul
mov
popa
push
fiaddl
rorl
jne
insb
je
jecxz
dec
mov
xchg
and
into
fsubs
pop
and
das
or
xchg
test
mov
je
in
add
xchg
imul
addl
mov
arpl
jb
hlt
pop
jne
out
dec
xchg
gs
idivb
jl
push
call
jo
add
pop
out
or
sti
pop
mov
repz
push
pop
leave
xchg
out
das
hlt
insl
mov
jge
xchg
mov
add
jmp
xor
pop
inc
movsl
rep
out
lods
or
out
mov
lods
jle
xor
and
jae
xor
adc
fidivs
call
push
imul
fs
gs
xchg
stc
out
mov
inc
sbb
out
add
fmull
sub
out
insb
add
push
xchg
mov
out
inc
adc
aas
mov
jo
addr16
jbe
and
es
sub
jo
ja
popf
loope,pt
dec
inc
dec
xor
pop
mov
inc
lcall
lret
xlat
push
add
add
in
cmp
xchg
inc
mov
jmp
fdivr
stc
push
dec
sub
jo
jnp
out
out
push
xchg
repnz
or
out
xchg
inc
vpunpckldq
pop
iret
cs
or
cli
mov
xor
mov
mov
out
xchg
insl
jp
inc
dec
lahf
repz
ljmp
clc
xor
es
jns
mov
push
das
jnp
jne
mov
mov
mov
sbb
dec
iret
lret
lock
xchg
cmp
lods
ret
into
div
mov
out
push
push
jns
movsb
push
cmp
xor
arpl
or
xor
xor
or
xor
push
shl
aaa
mov
xorb
cs
outsb
push
rorb
aaa
iret
xchg
repz
and
add
jmp
push
sub
mov
xor
jb
inc
pop
push
xorb
scas
in
inc
imul
push
aam
shl
loop
push
push
xorl
inc
ljmp
push
aaa
jne
fcmovb
inc
ret
inc
sub
mov
and
fnstenv
test
fimull
sub
into
je
pop
and
and
push
inc
aaa
xor
aad
xlat
push
call
lods
inc
das
xor
add
mov
xchg
aaa
aaa
push
inc
test
pop
stos
aam
jmp
rolb
xchg
int
jle
in
sti
mov
pusha
iret
shlb
push
repnz
inc
and
and
les
pop
sub
rorl
push
mov
and
add
lods
and
and
xor
rclb
inc
or
fnstenv
sbb
pop
outsb
jo
mov
inc
scas
fbld
xchg
jecxz
xlat
std
inc
notb
stos
pop
out
les
push
aam
push
or
adc
xor
and
hlt
inc
outsb
inc
push
fwait
inc
sbb
call
mov
test
pop
rcrb
fimull
les
fldl
mov
sub
xor
aam
mov
cld
mov
push
shl
leave
pop
xchg
mov
sub
sub
and
test
ds
cmp
and
mov
xlat
cltd
inc
fcoms
push
nop
xor
push
loope
mov
xor
inc
xlat
pop
add
pop
dec
pop
push
imul
lds
adc
push
aam
imul
test
les
popl
and
pusha
inc
mov
inc
repnz
fnsave
rolb
cltd
lds
flds
flds
dec
divl
rclb
mov
lock
push
aaa
iret
hlt
fsubrl
adc
add
je
push
rcr
shrb
mov
ror
shll
and
sub
push
adcb
fnstenv
pushf
mov
push
pop
ss
stos
fsubr
subl
jae
or
mov
sbb
inc
in
ss
pop
fsubrl
flds
pop
pop
xor
lods
aam
movsl
popa
loope
shl
inc
inc
mov
push
rolb
ljmp
or
mov
sub
sti
and
pop
test
roll
aad
inc
mov
mov
aaa
pop
aad
rcr
lock
outsl
arpl
hlt
notl
lods
flds
sarl
add
inc
mov
fxch
les
outsl
ljmp
pop
rcrl
rolb
mov
ficompl
je
xor
fsubr
push
fld
jno
xorb
and
jmp
fcoml
xchg
jecxz
mov
mov
lea
sbb
cltd
mov
or
jecxz
fsubp
xor
fnstenv
ja
jmp
fisttpll
push
and
addl
xchg
les
ljmp
mov
addps
rcrl
flds
inc
sub
mov
arpl
push
xor
shlb
dec
mov
inc
xchg
arpl
mov
mov
dec
jmp
loop
shl
and
aam
fidivl
xchg
pop
adc
imul
mov
int3
push
lods
xchg
inc
rol
inc
inc
arpl
jne
jecxz
aad
mov
xor
push
lret
aaa
push
xor
mov
mov
enter
and
sub
or
mov
lock
imul
testb
fs
shlb
fisubrl
out
xor
push
stos
aaa
lret
test
je
pop
xor
xchg
sub
pop
shll
inc
jecxz
subl
aaa
lea
dec
inc
mov
dec
insb
shl
fnstenv
pop
rolb
loop
xchg
mov
inc
sub
aaa
mov
fidivl
mov
inc
rclb
push
pop
lret
cli
xor
outsb
scas
rolb
fcmovb
inc
and
out
lods
fisubrl
adc
stos
shlb
cmp
shlb
xor
mov
out
insb
loop
clc
push
xor
sub
insb
pop
or
dec
insl
insb
rorb
mov
inc
mov
fimull
inc
dec
xor
or
sub
dec
adc
push
pop
rcrb
pushf
test
jb
fldl
jge
repnz
jmp
mov
lret
test
cli
test
xor
adc
nop
scas
aas
add
mov
xchg
mov
cmp
into
push
es
nop
pop
js
dec
out
fdivs
mov
test
mov
jno
out
or
xchg
sbb
xchg
pop
out
jne
cmovle
sub
add
mov
out
sarb
frstor
mov
xchg
js
fisubrl
out
cli
fcompl
mov
out
push
mov
andl
xchg
in
lock
pop
mull
or
aad
aas
lret
mov
test
inc
xlat
out
sti
push
push
test
xor
testl
sbb
push
out
mov
cmp
std
scas
adc
mov
jmp
inc
sti
push
mov
je
jne
pop
out
fsubrp
ja
pop
dec
addb
jo
mov
jmp
out
inc
sbb
aaa
mov
iret
ss
push
push
push
es
arpl
sub
inc
shll
cmp
loopne
mov
sbb
int3
jo
scas
or
gs
in
xor
push
mov
stos
and
sub
out
mov
push
cmc
lods
test
out
push
nop
lea
out
inc
mov
mov
xchg
fwait
jbe
in
repnz
xchg
in
movsl
jp
loopne
adc
or
xchg
sub
imul
and
mov
push
dec
ret
pop
jo
mov
push
sub
cmc
nop
or
int
lods
iret
xor
push
js
mov
lcall
clc
aam
mov
pop
in
shlb
cmp
or
dec
ret
mov
mov
fimull
fstpl
loope
push
nop
sbb
push
mov
adc
loopne
in
movsb
testl
jnp
mov
mov
loope
jle
enter
out
stos
das
lret
add
sar
inc
insb
and
sarl
in
out
pop
mov
lods
sub
in
das
mov
imul
inc
mov
sti
fs
inc
idivb
iret
test
jne
push
push
mov
mov
faddl
jbe
repnz
pop
push
cmp
mov
xchg
inc
popa
neg
inc
mov
push
add
dec
and
xchg
out
push
push
lock
das
repnz
pop
add
scas
sbb
and
call
add
cmp
das
lods
out
divl
insb
cmp
aaa
lock
inc
jno
push
sahf
fbld
call
mov
out
mov
sub
mov
out
dec
mov
push
mov
jne
popf
out
push
push
adc
subl
dec
push
outsl
mov
jmp
loope
shr
fsubrl
mov
in
jo
cwtl
out
out
mov
imul
repnz
dec
inc
jmp
or
inc
cs
loop
cmc
lods
test
mov
and
add
or
sub
ja
lcall
test
push
add
inc
stos
cmp
inc
mov
andb
jmp
mov
jne
adc
add
out
lret
xor
mov
fiaddl
and
addr16
out
test
jle
xlat
jge
fwait
cmc
dec
in
outsb
in
pop
out
mov
scas
sbb
jle
adc
or
and
pop
ss
sbb
pop
push
shlb
mov
dec
push
push
test
sti
and
push
out
push
jp
push
fbstp
rsm
test
nop
ja
lret
repz
sbb
xlat
out
dec
pop
xchg
movsb
nop
pinsrw
adc
notl
pop
scas
lea
fs
or
jo
add
mov
jns
push
sub
loope
and
out
inc
pop
dec
sub
je
ja
xchg
xchg
dec
inc
outsb
test
aam
pop
xor
push
ss
jmp
fsubs
imul
adc
push
rorb
adc
pop
test
add
stos
cwtl
loop
roll
mov
xor
jno
jmp
imul
icebp
inc
mov
rcrb
in
or
jmp
pop
outsl
mov
push
sub
xchg
mov
pop
inc
lret
dec
icebp
push
mov
add
js
sub
or
repnz
loope
mov
inc
jo
push
inc
and
popl
mov
pop
xor
pop
loop
pop
lds
adc
das
enter
dec
out
fcoml
ret
mov
mov
jne
int3
dec
test
outsl
out
imul
das
loop
and
dec
mov
sub
stos
or
out
mov
out
insl
push
mov
and
adc
jae
or
dec
leave
xor
adc
fiaddl
int3
stos
lea
leave
push
mov
rorb
jbe
or
loop
xor
in
xchg
mov
inc
bound
and
sarl
out
ret
xor
movsl
pop
cli
lock
fdivrl
sti
dec
iret
imul
pop
fnstcw
outsb
movsb
in
arpl
pop
add
push
adc
mov
in
jns
imul
add
in
lds
out
inc
dec
push
loop
outsb
pop
scas
cmp
mov
add
or
mov
repnz
dec
cmp
cmp
xor
shr
xchg
out
lods
cmp
cmc
sub
mov
or
aaa
mov
loopne
inc
stos
out
or
push
lods
pop
pop
xor
pop
orl
pushf
mov
ret
daa
imul
clc
cmpsb
fwait
xchg
xor
pop
out
mov
scas
jne
jne
dec
adc
jge
push
inc
pop
mov
adc
jl
push
loop
mov
jae
xchg
cmpsl
in
jne
xor
adc
xchg
testl
jle
sahf
out
dec
call
out
sub
pop
inc
jmp
mov
and
pop
add
imul
jo
xchg
mov
cwtl
call
and
jmp
outsl
pusha
lods
add
xchg
xchg
leave
pop
aaa
mov
jo
mov
loope
pop
fnstsw
inc
and
sub
push
sbb
mov
insb
cmc
fsubs
sbb
sarl
testl
push
fs
daa
fucom
rcrb
nop
mov
out
scas
idivb
sub
les
mov
push
xlat
mov
mov
lea
fadd
hlt
fs
mov
push
sbb
mov
jecxz
pop
cmp
test
mov
out
dec
xchg
cmpsl
jns
mov
add
adc
jo
out
and
stos
mov
mov
cmc
jnp
call
cld
xchg
dec
mov
cmpsb
mov
push
mov
mov
dec
shll
sub
gs
in
xorl
jge
or
dec
inc
jecxz
and
shlb
jo
jo
shlb
test
in
or
pop
out
mov
cltd
repnz
insl
cli
mov
pop
xchg
and
daa
cwtl
push
push
test
in
mov
mov
mov
jnp
clc
rclb
inc
test
jge
ficoms
repnz
adc
push
ds
jecxz
popl
and
xor
or
popf
incb
push
push
jo
sub
ficomps
aas
push
dec
pop
jo
and
sbb
sbb
ss
cmp
testl
jae
out
je
repz
inc
mov
sbb
and
rol
mull
xor
fsubrl
hlt
call
sub
int3
je
dec
outsb
test
mov
out
stos
pop
push
enter
dec
mov
or
and
repnz
sbb
out
sbb
and
mov
sub
xor
mov
imul
push
jge
push
inc
out
xor
mov
out
mov
mov
adc
les
call
cmp
ljmp
in
sub
jo
dec
push
fidivrs
xor
outsl
mov
repnz
addr16
mov
test
shr
sub
mov
cmc
and
out
lcall
xchg
adc
movsl
inc
jmp
lahf
ss
mov
lock
lods
ja
sahf
dec
js
fnstsw
pop
mov
push
ficompl
out
dec
dec
cld
lods
rclb
add
jg
mov
xor
call
push
inc
push
ds
out
pushf
add
nop
jmp
xlat
add
fwait
es
jno
adc
inc
mov
inc
dec
mov
inc
pop
sub
dec
das
xor
mov
pop
fs
jecxz
lods
ss
xchg
xor
addr16
push
inc
cmp
push
jo
sbb
mov
adc
test
sbb
aaa
mov
pop
call
in
out
fistpll
dec
call
mov
cmp
jo
or
push
mov
cld
popf
out
jle
fdivrp
mov
lret
fildl
testl
flds
mov
xchg
ror
inc
jb
out
neg
roll
les
repnz
and
mov
cmpb
add
mov
outsb
cwtl
out
xor
gs
mov
testl
aad
and
mov
paddusb
insb
addb
mov
out
adc
or
fimull
push
jae
push
into
mov
jmp
xor
insb
adc
push
ja
loopne
dec
sub
jb
fisttpll
fwait
outsl
push
test
ja
jne
adc
lods
shll
mov
jne
imul
pop
xor
pop
cmpsb
imulb
fadds
out
jnp
jmp
mov
bound
pushf
cs
pop
xlat
mov
lods
js
mov
sub
leave
arpl
xchg
push
lahf
mov
xor
es
ljmp
ret
iret
aas
fists
lods
and
pop
cli
mov
pop
in
push
mov
outsb
clc
sbb
jmp
arpl
rcrl
mov
cmp
sbb
mov
shr
jl
xor
fdivs
aam
aas
inc
dec
out
dec
adc
cmp
lods
inc
aam
cmc
dec
xor
xor
cs
icebp
fldt
mov
and
std
xchg
test
adc
in
out
push
mov
sbb
sbb
int3
and
sahf
insb
rcl
out
roll
mov
inc
cmp
in
push
cmpsl
and
out
lahf
ret
in
test
jnp
stos
add
inc
dec
and
imul
jmp
adc
bound
adc
xlat
pop
cmp
sbb
cmp
vcvtsd2ss
iret
out
mov
xchg
push
jmp
jns
xchg
cmp
dec
dec
popa
add
ljmp
inc
sub
xchg
xor
and
daa
xchg
pop
in
pop
add
xor
xor
adcl
inc
lea
mov
out
dec
out
ds
sti
scas
movsl
mov
out
or
add
adc
xor
push
mov
mov
rcll
out
and
jns
addb
push
movsl
xchg
xor
not
pop
add
pop
jbe
inc
aad
lret
nop
out
js
punpckhwd
cmp
testl
jmp
inc
movsb
sub
jbe
mov
cli
cs
push
nop
ret
lret
xlat
std
divl
sbb
inc
inc
mov
lret
testl
mov
shr
scas
rcrb
cmp
push
or
sub
mov
jae
jmp
rol
inc
jo
adc
in
loopne
andl
jmp
pop
push
add
out
arpl
ljmp
fdivl
out
repz
ret
insb
daa
shlb
sbb
pop
ud1
cmp
xor
inc
sti
sub
notl
dec
xchg
out
into
mov
pop
fs
out
ret
jb
in
movl
leave
fsubr
mov
out
aas
rcrl
or
cmpsb
rcll
enter
out
iret
loopne
in
jne
adc
test
imul
ret
testl
cmp
mov
daa
inc
mov
call
xchg
jno
adc
or
lcall
negl
add
ja
sahf
lret
mov
repz
stc
xlat
dec
mov
aam
add
sub
out
bound
and
push
lock
pushf
clc
jmp
push
rorl
fwait
mull
xlat
pop
dec
outsl
sbb
cwtl
arpl
cmc
push
mov
mov
xor
outsb
lahf
jne
mov
pop
addl
pushl
loopne
push
insl
scas
mov
imul
fisttpll
out
loop
hlt
xchg
adc
sbb
add
test
and
jae
and
xchg
jecxz
lds
dec
out
xchg
sbb
pop
xor
outsb
test
xchg
ret
push
sbb
inc
or
out
je
shlb
fwait
xor
push
cmp
dec
test
repnz
in
mov
pop
pop
insl
mov
out
inc
in
xchg
outsb
je
mov
cmp
jae
fbstp
mov
mov
out
movsl
jns
repz
outsb
popa
jl
sub
mov
fildl
sti
popa
or
outsb
cmpsb
cmp
loopne
jns
push
ds
outsb
imul
jne
push
or
test
sub
je
and
in
ss
sbb
jecxz
frstor
imul
dec
inc
fwait
push
xor
bound
shrb
sarb
lret
push
outsb
mov
repnz
rorb
out
dec
dec
daa
or
cmp
cmp
int
adc
jnp
faddl
cmc
or
xchg
outsl
push
jo
inc
cmpsl
in
out
mov
ja
insb
mov
out
test
fsubr
daa
and
jmp
loop
fwait
call
push
out
movsl
mov
add
pop
out
std
jp
mov
inc
xchg
push
xor
mov
and
push
mov
repz
cmpsl
fsts
mov
sbb
sahf
fcompl
jno
cld
dec
xlat
movsl
out
or
mov
repz
mov
mov
into
fnsave
pop
cmp
pop
adc
mov
jns
jbe
or
les
pushf
mov
mov
out
jno
jne
fcomip
lods
inc
mov
sbbb
add
xchg
push
cli
out
in
mov
cmp
out
mov
push
add
movsl
ror
push
lea
jmp
cltd
scas
jle
pop
or
adc
loopne
movsb
xor
insb
idivb
mov
int
cmpsl
fldl
cmpsb
and
jg
pop
popf
cmp
mov
sbb
shr
das
xor
lahf
push
mov
ds
cwtl
cmp
xor
adc
xor
or
rol
mov
aam
daa
xchg
or
imul
push
movsl
call
outsl
inc
mov
mov
push
inc
out
je
dec
xchg
push
popf
lahf
inc
outsb
xchg
mov
or
hlt
pushf
cmp
or
cmp
rcll
test
inc
pop
pop
int3
divb
xchg
xchg
sbb
or
dec
popf
iret
fcomps
mov
sub
jecxz
pop
add
sbb
mov
fs
stos
pop
sub
testb
mov
inc
or
cmpsl
movsl
pop
mov
adc
decl
sbb
loopne
stos
mov
stos
inc
iret
lret
outsl
fmull
xchg
mov
push
mov
xor
aas
andb
imul
mov
jmp
add
push
cmc
fwait
jecxz,pt
testb
pop
fstpt
std
nop
xor
das
jb
test
xchg
push
mov
inc
out
outsl
push
cs
cmpsl
add
mov
mov
or
push
or
pop
or
lods
mov
leave
in
pop
dec
cmc
lcall
lods
fisttps
adc
xchg
sbb
add
push
cld
stos
dec
mov
xor
pop
lahf
pop
mov
push
push
mov
add
pop
xchg
stos
dec
insb
jnp
int
add
xchg
jle
leave
adc
mov
mov
call
and
xlat
pusha
out
bnd
mov
in
sub
js
lret
mov
pushf
dec
mov
sahf
leave
mov
movsl
lds
jmp
adc
lea
lock
clc
xorb
incl
add
jb
arpl
outsl
jne
gs
jbe
outsb
je
inc
inc
push
inc
push
dec
xor
cs
insb
add
clc
xchg
xor
push
mov
or
mov
enter
lods
push
jbe
mov
push
cmp
sahf
adc
mov
inc
out
pop
insb
sbb
arpl
jg
cwtl
in
mov
clc
ja
lds
mov
out
xchg
loopne,pt
testb
dec
ljmp
daa
test
call
pushf
mov
mov
movl
pushf
lea
jnp
push
mov
push
pushf
pushf
pushl
ret
iret
mov
mov
sub
je
addl
dec
repz
in
or
mov
loope
mov
in
mov
cli
xor
enter
sbb
das
jmp
xchg
jecxz
jne
call
adc
lcall
testb
bt
sub
pushf
lea
jmp
fnstsw
ficoml
sbb
jecxz
cmc
je
jle
mov
mov
loope
lods
adcl
inc
mov
inc
lods
adc
jbe
int3
cmp
shlb
adc
cmpsb
inc
repnz
ret
xor
int3
jb
sub
inc
pop
push
jae
mov
xchg
fnstcw
ret
jno
enter
pop
adc
lea
mov
push
lods
call
out
rcrb
mov
adc
inc
cld
jle
xchg
sbb
mov
dec
push
shll
mov
sub
mov
jl
push
idiv
jb
mov
daa
sar
movsl
xchg
test
je
push
test
sti
xorb
cmp
push
test
push
or
decb
stos
push
addr16
adc
and
std
xor
adc
aaa
les
push
int
ret
data16
xchg
cmp
jg
into
push
jle
mov
push
mov
jno
jne
cltd
inc
push
repz
roll
popa
cli
or
sarb
imul
add
addr16
scas
dec
pop
bnd
jp
shrb
test
jno
fwait
inc
lods
push
push
jl
adc
scas
pop
add
push
lahf
dec
mov
fsubrs
jbe
push
cltd
and
pop
mov
imul
test
inc
out
imul
mov
pop
adc
xor
std
mov
aad
push
mov
jns
pop
jge
jecxz
adc
or
lahf
adc
arpl
cltd
sahf
lods
pop
gs
sbb
adc
mov
je
pop
lcall
push
push
dec
mul
and
xlat
inc
test
out
mov
push
push
pop
les
js
fidivs
into
jp
lahf
jecxz
mov
daa
mov
add
dec
jmp
cli
outsl
push
hlt
inc
outsb
push
shll
pop
std
stos
push
lock
xor
testb
sbb
std
stos
sub
fsubrl
je
test
test
jne
push
cwtl
cltd
loop
lahf
pop
sti
ja
sbb
loopne
rorb
or
imul
mov
jno
adcb
push
push
sub
cltd
mov
pop
outsb
xchg
into
out
jb
mov
pop
pop
imul
adc
cmp
xchg
xchg
add
hlt
cmp
ret
das
fcompl
shl
push
add
and
iret
movsl
outsb
add
inc
lret
fistpll
addr16
sub
jp
iret
jns
enter
adc
nop
jp
cmpsl
pushf
stc
mov
call
in
push
shll
xor
sbb
or
xor
jle
dec
push
xor
sub
das
mov
sub
mov
pop
stc
out
stc
push
enter
in
cltd
inc
in
sub
jle
les
adc
nop
fcmovnb
or
cmpsl
xor
arpl
movsl
jbe
nop
push
fisubs
insb
in
ja
addb
or
cmp
clc
lcall
add
and
ljmp
mov
mov
out
divb
cmp
fdivp
fs
xlat
sarl
cmpsb
fidivrl
je
sbb
sub
cmp
shll
or
stc
cmc
xchg
add
xchg
mov
jb
ror
js
ds
in
je
add
xchg
mov
lret
stos
dec
mov
inc
hlt
xchg
pop
fwait
and
jae
js
fdivrl
or
lahf
inc
xchg
sbb
aad
data16
pop
stc
movsl
dec
repnz
aas
filds
enter
mov
cmpsb
stos
das
mov
and
push
addb
fstps
popa
out
decb
cmpxchg
xchg
mov
xor
push
adc
test
leave
add
cmp
mov
arpl
pop
arpl
jnp
sbb
lds
dec
push
or
cltd
push
call
push
pop
pop
or
lcall
lods
push
les
push
scas
fistps
ret
out
loope
mov
xor
add
lods
xchg
or
cld
fsubs
push
adc
mov
into
jl
push
fs
push
add
loop
adc
xchg
inc
xor
xor
inc
jmp
jbe
addl
push
loope
testb
pop
cmc
add
push
sub
aam
dec
cmc
cmp
bound
xchg
ficoml
dec
mov
idivb
loopne
pop
sub
ljmp
popa
mov
daa
push
or
adc
std
mov
inc
test
stos
push
ret
mov
sbb
fisubrs
push
ret
orl
push
jmp
decl
insb
push
push
mov
addr16
xchg
xor
mov
sarl
shll
pop
std
test
push
adc
mov
pop
adc
dec
fcompl
imul
icebp
jno
xchg
inc
push
leave
mov
add
lahf
inc
lea
jo
adc
cmp
push
mov
and
mull
std
mov
push
xor
negb
ds
add
mov
clc
mov
notb
jns
mov
adc
fdivrl
push
inc
out
cmp
mov
add
sarb
jbe
std
movsl
call
imul
xchg
cmp
jg
jne
ret
xchg
test
jmp
mov
inc
ret
jnp
sbb
hlt
jnp
lea
mov
test
outsb
test
clc
cmp
push
out
popf
jp
or
out
push
inc
mov
xchg
add
xchg
cmp
in
pop
jge
jl
push
les
pop
mov
js
mov
add
sbb
popa
sbb
push
dec
push
sub
mov
addr16
mov
push
int3
ja
lret
insb
adc
cli
popf
dec
adc
xchg
je
push
sub
in
je
je
mov
push
frstor
jae
jle
sar
fldcw
push
mov
cmp
jb
dec
in
inc
iret
pop
or
dec
bsr
rol
push
jne
stc
imul
add
fwait
mov
push
hlt
lcall
adc
sbb
and
adc
lds
mov
jp
xor
call
fbstp
push
cwtl
aaa
jb
fcomps
movsb
dec
out
nop
cmp
lea
notb
cmp
not
mov
cmp
stc
cmc
clc
test
push
jmp
rcl
pusha
loop
xor
mov
test
es
cmp
push
stc
cwtl
in
mov
loop
lret
fwait
xchg
mov
loop
inc
loope
loop
shrb
cmpsb
int
jb
push
pusha
insl
adc
xor
jae
lret
jo
mov
test
push
dec
pushf
movl
push
pushf
pushf
lea
jmp
xchg
xchg
sbb
fucom
dec
lea
int
xlat
pop
jecxz
adc
dec
push
arpl
mov
mov
fstpt
mov
mov
std
xor
xchg
rorb
icebp
sbb
das
repnz
call
sub
xor
orl
pushf
into
adc
cmp
sbb
movsb
dec
gs
sub
add
push
add
adc
xchg
or
ljmp
data16
gs
adc
xor
fisttps
push
xchg
cmpb
in
shll
nop
loop
pop
xchg
insb
adc
test
add
xor
xchg
jne
mov
add
notb
outsl
sub
add
lea
ja
pusha
sub
add
push
or
shrd
lea
add
btc
rcl
ror
mov
jb
mov
call
or
jno
popf
addr16
pusha
lret
fwait
push
lahf
sub
push
sarl
inc
in
or
adc
jp
push
mov
in
movb
loopne
mov
imul
sbb
or
pop
or
aaa
mov
cmc
xchg
inc
in
xchg
mov
scas
jns
xchg
rclb
mov
jo
mov
call
notb
pusha
lea
ja
pusha
lea
jb
test
cmpb
push
lea
jne
adc
mov
call
pushf
fcompl
out
hlt
jnp
xchg
and
sub
pop
cmp
out
add
jecxz
jno
xorb
in
addr16
sub
jle
dec
repnz
or
call
push
mov
mov
outsb
fldt
test
and
mov
mov
imul
and
mov
adc
sbb
adc
negb
add
adc
jnp
sub
cmp
push
ficompl
adc
in
pop
dec
or
mov
fidivrl
imul
loop
hlt
in
pop
insb
push
cmp
and
sub
and
jne
mov
ljmp
xchg
popa
dec
or
cmpb
push
sbb
xor
mov
sbb
inc
lds
push
jae
out
mov
mov
xchg
jg
and
mov
add
push
sbb
imul
fimuls
scas
popa
out
dec
int3
push
add
out
aaa
flds
cwtl
jns
aaa
cmp
push
cmc
aas
mov
mov
add
cs
xor
dec
hlt
fcomps
xchg
push
mov
bswap
js
xor
xlat
dec
loopne
out
or
in
incl
in
cmp
mov
mov
cmpsb
adc
test
pop
ret
imul
imul
popa
movsl
push
xchg
inc
in
xor
in
cmp
lock
xor
jno,pn
cltd
cmpsb
dec
mov
les
daa
cmp
pop
dec
lret
inc
jmp
xor
mov
shrb
les
negb
pop
jmp
or
cmp
xchg
sbb
inc
les
dec
stc
int3
jle
push
lahf
loop
adc
and
fmulp
dec
repz
xchg
xlat
test
mov
mov
mov
fstl
add
addr16
lret
cmc
pushf
sub
or
lcall
test
or
shll
and
sar
dec
int3
je
enter
arpl
mov
adc
cltd
std
out
add
outsl
cli
mov
rol
push
fstps
pop
out
ljmp
adc
loop
or
scas
push
mov
addb
xchg
inc
push
loop
adc
lea
xchg
in
jecxz
sbb
adc
leave
popa
mov
lret
mov
cld
pushf
ds
cltd
dec
aaa
repz
xor
imul
xor
push
fisubl
jo
mov
mov
mov
loope
in
mov
cli
dec
push
inc
out
add
imul
icebp
inc
insb
sub
xchg
filds
pusha
ljmp
jne
mov
adc
cltd
sbb
dec
push
lock
std
std
addl
ret
jo
mov
imul
mov
jl
xor
mov
insb
std
jge
mov
inc
pop
and
aam
pop
roll
xlat
and
test
std
xchg
rcll
rolb
shl
xchg
inc
xchg
pop
adc
xchg
push
cmpsb
adc
fcmovu
mov
test
cwtl
lds
cld
pop
roll
in
xchg
add
call
pop
pop
in
pop
xor
dec
inc
int3
push
xlat
push
fstps
pop
loop
sti
andl
mov
dec
xor
mov
xchg
push
sbb
sbb
aad
add
mov
sub
mov
cld
mov
subb
negb
stos
xor
stos
adc
in
jns
jle
addb
adc
mov
out
fcmovbe
jle
mov
fnsave
mov
ds
insb
pop
add
imul
leave
jb
mov
out
cmp
mov
negb
aam
fadds
popf
pop
loop
stc
jnp
mov
xchg
sbb
cmp
mov
enter
and
add
xor
mov
aas
xor
adc
ret
jmp
scas
sti
subb
sub
jno
mov
cld
mov
fwait
test
push
jmp
dec
das
mov
loopne
inc
dec
icebp
es
rcrl
jp
mov
cwtl
pop
mov
adc
fwait
pop
fnstsw
cmp
imul
push
pop
insb
pop
les
xchg
cwtl
lret
jmp
stos
mov
test
dec
or
mov
and
mov
aaa
xor
ret
stos
sbb
mov
mov
jnp
jbe
sub
xlat
ja
xor
imul
mov
movsl
mov
bound
jmp
sarb
and
cltd
cmp
mov
in
sub
je
lret
outsb
sbb
negb
fs
ja
call
mov
not
mov
movl
dec
clc
bt
jmp
mov
bts
mov
xchg
add
add
dec
stc
shl
mov
movzbl
or
movzbw
add
shl
jmp
add
add
add
add
add
sub
add
add
lret
jg
add
add
add
and
add
daa
add
add
add
add
add
daa
add
add
add
jg
add
add
add
add
addb
add
out
push
daa
add
add
add
add
add
add
cmpsb
cmp
add
add
add
sub
add
add
jae
sub
add
add
ret
add
add
add
add
add
arpl
add
inc
daa
add
test
add
inc
sub
add
add
add
cmp
pushf
movb
push
lea
ja
not
inc
pushf
inc
add
and
sbb
xchg
lahf
cmp
mov
xor
or
ror
mov
mov
clc
push
sub
mov
shl
mov
clc
jmp
lea
ja
stc
pusha
imul
push
clc
add
mov
pushf
push
lea
jmp
lea
jb
pushf
test
cmc
cmp
pusha
movl
pushf
lea
jae
bts
pusha
adc
neg
mov
rol
bsf
mov
mov
add
cmp
clc
mov
clc
clc
xor
stc
repnz
pushf
pushf
push
jmp
inc
dec
lret
dec
cli
addr16
imul
pop
movsl
daa
scas
cs
push
mov
cld
push
xchg
jle
enter
fldenv
int3
sub
int
cmp
or
subb
subb
jns
mov
or
ljmp
sti
ds
rclb
negb
scas
call
cmp
das
roll
mov
push
aad
out
hlt
jnp
addl
dec
push
iret
sbb
mov
shrl
push
lahf
xor
jb
cmp
push
and
std
xchg
mov
jae
in
cmp
xchg
imul
or
pop
mov
jnp
incb
jne
scas
and
loopne
cwtl
sbb
jo
xchg
push
out
lea
xlat
jp
insb
adc
pusha
adc
sahf
and
mov
adc
inc
lds
pop
fistpl
bnd
sahf
dec
popf
cmp
mov
lret
mov
jle
in
mov
jmp
nop
adc
js
sbb
sbbb
jecxz
lock
or
arpl
mov
imul
cli
sahf
cmp
jmp
bt
clc
rol
stc
jmp
bsr
push
sbb
xor
lea
xchg
pop
not
pop
mov
lea
pushf
mov
lea
call
jmp
xchg
xchg
das
addr16
ss
dec
enter
fsubl
je
scas
pop
jl
dec
mov
fimuls
loopne
inc
popa
jmp
mov
pop
jns
push
aam
sbb
sub
sub
outsb
push
hlt
or
jge
sub
adc
jl
data16
arpl
jbe
aad
pop
pushf
inc
cmc
bound
iret
ljmp
jecxz
es
push
mov
ja
sub
test
pop
pop
je
outsl
xlat
jne
add
cmp
fstpt
jno
mov
mulb
in
outsl
hlt
xchg
xor
dec
push
rolb
sbb
xor
out
xchg
call
and
in
adc
fnstsw
in
mov
xchg
outsl
aas
pusha
pushf
lods
insb
adc
outsl
insl
inc
xor
ss
sbb
insl
mov
fiaddl
or
sub
sbb
sbbb
jne
mov
add
adc
mov
lea
jae
push
call
imul
pop
jne
adc
test
xchg
sbb
daa
mov
ret
jbe
inc
jmp
ret
repnz
insl
push
fidivrs
sub
or
cmc
mov
mov
shlb
loopne
mov
les
cltd
pop
pop
sbb
addr16
call
idivb
cmpsl
shrb
leave
jmp
pop
mov
idiv
jmp
outsb
mov
sbb
lahf
mov
fidivrl
cwtl
call
inc
int
rcrb
sti
lahf
mov
xchg
lret
out
jle
mov
lahf
inc
arpl
jg
xorl
dec
mull
xor
pop
adc
stc
subl
fidivrl
adc
pop
add
inc
jmp
ds
add
clc
lret
pushf
xchg
xor
pop
sbb
sbb
xchg
aaa
dec
lds
adc
mov
inc
jmp
call
inc
sarb
arpl
lret
jl
clc
lcall
aaa
mov
inc
movb
test
xor
jnp
pop
mov
fisttpl
in
hlt
aam
mov
call
jns
cmp
loop
xor
mov
stc
test
divl
cmpsl
push
lea
lock
jecxz
cwtl
adc
pop
cmp
jg
inc
lret
dec
fnstcw
ss
mov
push
add
lds
adc
inc
fadds
ret
test
stc
mov
gs
aaa
int
jno
or
adc
mov
add
push
std
pushf
dec
adc
mov
jmp
movw
add
jns
clc
cmp
jmp
push
push
inc
push
xor
cs
insb
add
xorl
movsb
jmp
shl
mov
push
bswap
shld
rol
mov
and
mov
cmp
call
push
aaa
mov
imul
pop
push
jnp
jg
xchg
sbb
inc
lock
push
rcrb
in
ror
fcompl
out
mul
imul
insb
adc
push
les
fnstsw
push
test
xchg
xor
test
out
xchg
xor
jg
adc
mov
movzbw
bswap
call
mov
loopne
popa
and
fistpl
addr16
outsb
repz
xorb
mov
into
dec
inc
iret
jp
sbb
inc
cltd
fwait
decl
out
js
jne
sti
popf
mov
lret
jbe
cmp
outsb
dec
fadds
aas
or
dec
adc
mov
cld
test
movsb
dec
mull
fimuls
adc
mov
pushf
mov
lea
jbe
xor
pusha
bt
sub
shl
sar
btr
add
mov
shld
shl
shl
mov
adc
not
add
bts
cmp
shr
or
mov
bsr
shld
jmp
add
xchg
and
nop
stc
loope
or
sub
aas
rorb
adc
adc
pop
add
xchg
mov
lds
pop
jnp
lret
ja
icebp
divl
push
loopne
mov
xor
popf
pop
adc
pop
dec
sbb
jp
jno
push
inc
and
mov
cld
cmpsb
dec
cmc
mov
movsl
add
loopne
in
insl
negb
out
insl
in
jne
mov
pushf
pop
movsb
sub
xor
cmpb
jb
mov
ret
sub
sbb
pop
inc
test
lcall
add
inc
mov
inc
lret
dec
lea
enter
mov
and
aad
and
jo
mov
add
mulb
and
mov
in
mov
mov
popa
out
clc
andb
in
mov
mov
nop
jnp
pusha
in
mov
sahf
mov
imul
dec
ss
sub
out
lret
rclb
lcall
xor
je
mov
insl
mov
fstps
mov
jno
cltd
sarb
xor
fildll
orl
push
jne
jg
or
add
inc
jae
popa
addl
outsl
cmp
test
mov
rcll
cltd
cmp
mov
cmp
pop
mov
jae
mov
mov
cmp
dec
mov
fidivs
push
fsubp
lea
bnd
mov
enter
and
inc
mov
pop
jge
dec
dec
lock
les
mov
sarb
ret
mov
repnz
adc
movsl
scas
cltd
push
call
not
call
psllw
mov
repnz
lahf
pop
movsb
cs
dec
xlat
pop
add
mov
sub
scas
in
mov
icebp
sub
dec
loop
mov
insb
sbb
dec
push
into
outsb
sub
and
loopne
add
push
clc
mov
fnstsw
adc
cmpsb
mov
call
call
fucom
outsl
out
xchg
jge
pop
lds
das
mov
ret
push
andl
jmp
jl
inc
jecxz
fdivrs
ret
push
test
cli
scas
andb
sbb
xor
mov
mov
cmp
cmp
and
pop
cmp
inc
out
adc
and
cwtl
ss
mov
fldl
mov
std
cmpsb
dec
adc
cmpsl
psubw
test
pusha
lea
je
cmp
mov
jmp
pop
cmp
dec
lock
xor
mov
jp
jge
test
adc
imul
xchg
mov
in
mov
xchg
mov
in
add
push
push
add
leave
insl
inc
cmpsb
repnz
push
inc
mov
push
xlat
jge
into
outsl
sbb
popf
inc
adc
test
repnz
pushl
pusha
mov
adc
call
movw
lea
call
stc
test
test
pusha
cmp
call
inc
dec
iret
pop
ljmp
mov
repz
mov
mov
loopne
cs
loop
in
mov
inc
inc
cld
mov
push
push
insl
addl
icebp
pop
mov
or
mov
cmc
xchg
inc
in
mulb
lea
jne
push
lea
call
pushf
pushf
mov
lea
jmp
jmp
lods
pushl
push
ror
jmp
sub
pop
ret
test
aas
int3
dec
fistpl
in
lock
cmp
xchg
gs
lcall
scas
cmc
pop
jecxz
dec
add
inc
push
push
inc
adc
push
ds
pop
push
add
sbb
sar
sub
loop,pn
push
xchg
cmp
incb
pop
pop
push
jae
lock
dec
out
stos
dec
pop
stc
push
sti
inc
xchg
and
incl
cs
and
insl
push
mov
cld
adc
test
stos
in
sti
frstor
test
sbb
loopne
in
idivl
mov
lahf
inc
repnz
mov
pop
add
in
dec
imul
loop
jl
jmp
sbb
repz
mov
ret
outsb
push
sub
fdivrs
shrb
push
add
insl
push
dec
inc
sub
fcoms
fisubl
outsb
stc
jp
mov
xchg
cmp
push
mov
mov
mov
in
sub
cmp
jp
sbb
je
jo
add
sbb
jle
lds
mov
add
imulb
orb
movsb
and
enter
aas
push
jmp
mov
adc
jmp
mov
jecxz
ret
stos
mov
orl
scas
pop
or
rorb
inc
or
push
lcall
fiaddl
inc
fsubs
aam
cld
adc
dec
jg
or
or
xchg
sub
scas
xchg
adc
mov
fwait
mov
jp
inc
jmp
jecxz
pop
push
decb
mov
fcomps
or
arpl
jns
jo
enter
push
hlt
cwtl
cmp
movsl
dec
repnz
mov
inc
int3
push
ficomps
jo
enter
pop
scas
ljmp
stos
addr16
ds
aaa
lods
xchg
aam
xchg
and
pop
pop
addb
sbb
mull
push
out
xchg
int
fmuls
mov
sarb
out
aaa
in
lods
loopne
jb
inc
pop
sbb
ja
mull
sbb
ja
sbb
mov
inc
dec
dec
testl
js
shrb
imul
stos
cs
mov
loope
sub
lds
jb
jne
jge
xchg
pop
mov
xchg
mov
jl
dec
xlat
pop
fwait
and
pop
sbb
mov
jl
push
scas
adc
cwtl
fcmovnbe
jg
std
fnsave
sarb
das
loop
cmp
mov
mov
lret
xchg
xchg
aas
lods
or
pop
popf
cltd
mov
ds
lds
popa
call
leave
inc
loope
mov
mov
xchg
jmp
dec
push
sub
add
inc
repz
cmp
nop
xor
xchg
imulb
out
add
jmp
sub
movb
test
test
test
pushl
popl
jmp
call
lea
je
push
pushf
adc
push
push
pusha
lea
jmp
aaa
cmp
dec
out
pop
and
lods
xor
xchg
pop
mov
inc
rorl
mov
stos
aam
or
or
ficomps
dec
push
loop
nop
aam
adc
pop
lock
mov
sti
in
andb
dec
loop
std
orb
popa
imul
subl
lea
pop
pop
dec
xchg
pop
filds
mov
cld
sahf
inc
adc
lods
or
cmp
add
pushl
jecxz
adc
dec
pushf
push
mov
pushf
sub
jmp
sarb
cmp
punpckhbw
sub
sbb
addr16
mov
adc
cmp
push
mov
negl
mov
dec
add
outsl
loop
sbb
mov
out
adc
into
lret
lcall
clc
nop
xchg
cmp
lret
mov
fwait
cmpsb
mov
push
sti
cmpsl
repz
pop
mov
add
arpl
stos
push
negl
adc
lods
lods
xchg
fsts
loope
adc
xor
gs
lds
pop
outsl
out
jp
mov
aam
xchg
jmp
scas
imul
mov
mov
dec
aam
push
sbb
dec
or
xchg
xor
dec
push
sbb
inc
leave
outsb
adc
jmp
xor
imulb
pop
cli
or
sub
daa
sbb
les
pop
in
lock
mov
dec
and
dec
divb
repz
mov
sub
and
or
mov
jg
sub
xorl
xor
sar
jle
lock
pop
cmp
xor
dec
data16
fcomp
dec
jnp
or
pop
xlat
mov
ja
add
loop
and
sbb
std
jle
leave
mov
scas
dec
outsb
jo
push
clc
cltd
jbe
fdivrl
nop
lret
dec
lret
and
test
pop
jmp
jge
scas
pop
pop
test
stc
mov
call
mov
dec
fbld
shl
add
adc
iret
jbe
mov
pop
adc
lods
lret
mov
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xor
ljmp
fs
xchg
ljmp
mov
mov
fisttpl
add
or
jnp
push
rclb
mov
and
adc
shrb
sub
add
or
js
aaa
push
nop
pop
adc
leave
lds
in
daa
mov
leave
sahf
add
adc
dec
aam
es
sub
sbb
push
push
pushf
out
jp
sti
sahf
or
lcall
shll
shrb
bound
imulb
dec
rcrl
jecxz
arpl
jmp
jg
nop
adc
pop
mov
repnz
icebp
enter
in
mov
jecxz
pop
or
insb
sbb
xchg
int
inc
in
dec
xor
xchg
lret
jno
ret
mov
lock
scas
sbb
cld
dec
push
xlat
bound
mov
jp
test
lahf
push
stos
sub
mov
add
loop
or
xlat
jle
sbb
pop
mov
cmp
imul
jo
testb
movsl
mov
lcall
dec
fstps
mov
push
jne
pop
test
push
les
push
push
ret
dec
mov
mov
push
mov
hlt
xchg
cmp
subl
adcl
jno
shl
rol
lea
jmp
call
pop
pop
jmp
arpl
lds
jmp
bnd
adcl
and
pop
std
loop
dec
mov
mov
in
mov
out
movups
loop
push
jmp
pop
adc
pop
adc
push
dec
sbb
pusha
out
jbe
shll
pop
or
cmc
adc
scas
mov
and
lea
je
push
push
jmp
sub
xor
rclb
push
outsb
sti
jg
xchg
push
lahf
aas
in
stos
lret
loop
jle
mov
jne
mov
dec
push
loop
test
cli
mov
aam
dec
dec
mov
mov
fdivrs
iret
outsb
adc
or
arpl
xchg
adc
inc
sbb
xchg
xor
mov
dec
fcomps
pop
loope
add
int
and
sbb
sub
pop
ljmp
cmc
loopne
dec
mov
jnp
sub
jp,pt
rclb
pop
bound
out
pushf
or
sbbl
bound
mov
push
sti
popf
lds
dec
pop
push
xchg
adc
ret
jbe
xchg
sbb
lahf
icebp
jns
mov
or
pop
add
divb
stc
jg
movsb
push
enter
loopne
bnd
xchg
lcall
mov
stos
sub
hlt
xchg
push
popa
out
cmpsb
jmp
mov
xor
pop
jno,pt
ljmp
mov
inc
test
lret
scas
xor
aad
out
dec
jo
jae
mov
or
push
mov
jp
inc
out
jp
dec
int3
loop
or
lret
lds
mov
or
negl
divb
inc
leave
push
idiv
je
mov
sti
mov
sbb
pop
cmp
std
or
xor
cmpsb
jmp
lock
mov
xlat
test
push
sahf
inc
inc
mov
lods
push
cltd
popf
dec
mov
cmp
lcall
pop
shr
cmp
jle
dec
sub
in
jb
rcll
inc
out
mov
aaa
fucomi
nop
dec
js
sbb
cs
inc
dec
sti
sti
cltd
aas
jecxz
cmp
andl
imul
popa
add
divb
lea
jo
call
push
mov
lea
jae
ja
pusha
cmc
sub
pushf
pushf
lea
call
pusha
lea
jae
call
sbb
shr
mov
shl
or
stc
ror
add
clc
mov
jmp
inc
cmc
cmc
not
jmp
lcall
bound
pop
push
fstpl
fs
cli
addb
in
mov
push
add
ss
les
loop
fbstp
mov
inc
cmp
mov
dec
add
shll
push
cmc
mov
in
cltd
inc
adc
mov
icebp
mov
movsb
and
clc
jo
sbb
mov
push
fldt
jb
mov
mov
jg
pusha
add
mov
int3
in
out
push
shl
push
sbb
mov
jo
xchg
xor
je
leave
insl
sbb
jo
shlb
divb
imul
add
inc
lret
push
loopne
repz
mov
mov
negb
ficompl
push
aas
out
stos
dec
outsb
jo
pop
dec
push
mov
jle
mov
outsb
test
xchg
aam
xchg
stc
push
insl
mov
ret
mov
out
xlat
test
jnp
divb
adc
mov
jnp
mov
dec
rclb
pusha
in
in
cmp
sbb
popa
jmp
in
test
dec
mov
dec
stos
adc
add
jmp
jbe
imul
pop
sbb
mov
daa
cld
je
push
pop
add
jnp
cwtl
lods
xor
sti
mov
pop
cmp
cld
mov
cmc
in
or
iret
jns
cmp
mov
push
push
stc
mov
cmc
cmp
jo
xchg
add
aad
mov
mov
pop
mov
cmp
jge
sarb
les
mov
clc
cmpsb
dec
adc
mov
pop
push
movw
cmp
pop
call
call
lea
jae
jmp
in
icebp
jbe
mov
fs
je
aam
fbld
jne
jg
xchg
fwait
sub
jb
aaa
push
loop
pop
xor
mov
lahf
pop
push
xor
pusha
fadds
and
adc
bound
out
std
fwait
and
jno
ret
mov
cld
fwait
inc
call
lods
xchg
mov
test
add
stc
cmp
jmp
push
push
fstps
inc
dec
insb
les
ljmp
movsl
sub
lea
loope
pop
mov
inc
sarb
filds
jmp
sub
jae
bound
shl
insb
into
js
pop
or
mov
es
in
inc
inc
cmp
and
jmp
mov
iret
lahf
gs
scas
xor
movb
out
rcll
fmull
outsl
adc
add
in
divb
jmp
cmp
push
movb
pusha
lea
ja
lea
setl
movsbl
pop
pushf
mov
xchg
mov
pusha
mov
push
mov
pushf
pop
pushf
mov
mov
pushf
pushl
ret
jne
pop
xchg
cmp
arpl
std
and
das
mov
mov
pop
or
cmp
aad
cmpsb
push
in
mov
cmp
xchg
fucom
push
sbb
lahf
loop
mov
pop
out
mov
in
shlb
pushw
test
divb
mov
xchg
cmp
push
and
decb
sbb
xor
test
loop
cmpsb
xor
cld
dec
dec
xor
shl
jle
inc
push
and
add
hlt
aaa
cmp
dec
sub
inc
push
andl
ret
fstps
roll
jo
leave
int
bound
cs
add
push
or
adc
mov
or
mov
push
sbb
std
movsb
push
stc
cwtl
cmp
nop
adc
mov
cmp
adc
jmp
decl
test
lcall
stos
pushf
lea
jmp
call
call
sub
pushf
call
test
jae
mov
sbb
xchg
and
cmpsb
daa
test
pop
add
mov
xchg
pop
lret
cmp
arpl
sub
mov
push
xchg
push
jge
nop
push
or
rcrl
mov
imul
mov
lret
or
pop
pushf
in
stc
pop
mov
sub
int3
cmp
aaa
popa
and
dec
in
inc
rsqrtps
mov
pop
add
lock
int3
dec
lock
movsl
dec
addl
add
icebp
lcall
sbb
adc
and
jb
je
inc
imul
jecxz
xor
xchg
fcomps
outsb
cmc
je
test
xchg
sbb
loop
xchg
and
outsl
adc
mov
pop
pop
xchg
sbb
xchg
sbb
xchg
mov
xchg
in
add
inc
jmp
and
adc
mov
jne
pop
jmp
scas
jle
out
pop
fwait
and
inc
lret
imul
sarl
pop
rorb
addr16
sub
inc
jle
test
sub
js
stc
pop
sti
in
xchg
mov
fcmovu
inc
jmp
and
sub
push
xchg
pop
lahf
and
pushf
js
in
sub
sub
inc
out
adc
jno
aas
mov
lcall
sbb
cwtl
es
add
push
sti
lahf
inc
out
movzbl
mov
and
lea
pop
ret
jecxz
add
and
imul
pop
add
in
dec
mov
cmc
jbe
addl
into
je
icebp
mov
test
fildl
mov
jg
push
loope
in
sbb
repz
ljmp
inc
int3
jae
shll
fnstsw
lock
mov
adc
sbb
sbb
dec
or
and
dec
sti
cmpsl
jae
push
shrl
jbe
popf
mov
sub
xchg
ljmp
xor
pop
std
or
lret
push
push
idiv
imul
push
lods
loopne
pop
rolb
daa
lcall
inc
popa
mov
pop
cmpsl
aam
cs
pop
out
cmp
fstps
push
popa
push
dec
ds
jg
addb
jo
xchg
cmp
xchg
xor
andb
outsl
push
mov
adc
mov
push
rcll
inc
push
push
mov
test
mov
ja
cmp
enter
out
nop
xor
sbb
or
or
div
xchg
add
nop
or
cmpsl
out
xchg
pushl
mov
push
pop
stc
aaa
push
xor
daa
sbb
repz
rcrl
or
add
ror
push
add
outsb
sub
out
mov
in
sbb
outsb
adc
dec
hlt
mov
mov
rclb
pushf
dec
add
call
dec
dec
aam
clc
xor
and
lds
push
fisubs
push
mov
mov
xor
mov
movsb
les
out
loop
or
xor
cmpsb
dec
cmpxchg
and
ss
and
lods
aaa
fildl
int3
insl
adc
adc
mov
rorb
fs
jb
cmp
clc
clc
cmp
pusha
pushl
jmp
bt
add
clc
cmp
test
call
imul
and
cmp
in
xchg
adc
mov
lret
pop
ljmp
inc
xor
sub
and
mov
dec
and
lcall
imul
cmp
xchg
imul
cli
cmpsl
jmp
shll
sub
xor
dec
sarl
inc
pop
imul
push
adc
mov
negb
jns
adc
mov
fs
jb
clc
pusha
pusha
jmp
lea
je
clc
cmp
jmp
mov
lea
jne
push
bswap
pushf
setae
movb
pusha
mov
movsbw
pushl
pop
lea
call
call
call
call
push
pop
ficompl
xor
int
jp
test
test
xchg
and
jo
cmp
std
loop
fcomp
lds
cmpsb
adc
cmp
mov
pop
insb
sub
sub
cmp
cmp
jg
shlb
lds
mov
add
idivb
fs
jne
neg
mov
lea
sar
sub
stc
movsbw
mov
mov
jmp
test
and
xor
aas
int
fldenv
imul
pop
mov
fnstenv
adc
inc
data16
mov
mov
pop
fwait
lahf
inc
scas
xchg
loopne
and
push
outsb
out
dec
sbb
mov
xor
adc
mov
jo
mov
push
test
cld
pop
adc
dec
adc
lea
lret
mov
jb
sub
mov
fldt
push
cmpl
rcrl
lret
push
mov
or
std
stos
adc
mov
shll
aaa
popl
test
cmp
mov
movw
jmp
push
movw
lea
je
jmp
lahf
movsb
and
push
push
jmp
push
add
rclb
pop
fistpl
js
mov
or
repnz
add
push
pop
or
or
stc
mov
das
rclb
or
add
pop
bound
adc
add
loop
jbe
inc
dec
lahf
icebp
jnp
out
pop
cmp
sbb
lods
push
std
mov
call
idivb
or
pushf
clc
call
movsl
xchg
lcall
xor
cmp
pop
loopne
in
jne
into
jge
loop
adc
push
in
mov
xchg
int3
push
loopne
imul
push
js
pop
cmpb
xchg
cmp
xor
pop
lahf
ds
cmp
idivb
out
jnp
cmpsb
jl
fs
lds
sbb
dec
sti
cmpsb
jno
mov
add
loope
adc
mov
pop
xchg
xchg
cli
and
nop
js
insb
sbb
jns
imul
push
cmp
lret
pop
mov
fiaddl
imul
std
pushf
pusha
cmp
movb
lea
jae
movsbw
mov
mov
push
pop
mov
movzbw
pushf
mov
pusha
lea
jmp
fstpt
xor
sub
fldenv
jae
js
addl
shlb
push
sbb
xchg
fstps
sub
sti
and
add
out
push
add
inc
lcall
mov
jbe
test
adc
add
sub
fisubrs
pop
jp
hlt
sbb
nop
std
cmpsb
cltd
pop
je
cld
jne
add
fcomps
mov
xchg
or
cli
cmp
and
idivb
cmp
into
jl
jl
fcomp
mov
dec
mov
data16
cmp
imul
inc
ds
nop
sbb
int3
cmp
mov
xlat
jle
lret
outsb
push
mov
idivb
rcrl
or
movsb
sub
frstor
outsl
stc
cmpsb
push
jae
push
jle
cmc
xor
popa
push
mov
push
test
scas
dec
mov
mov
mov
or
dec
mov
fwait
test
mov
or
hlt
daa
push
mov
or
fildl
mov
sub
jno
testl
push
ljmp
mov
mov
xchg
ljmp
pop
mov
and
fs
jmp
lea
jne
call
rol
clc
jmp
rol
mov
mov
stc
clc
bt
cmc
cmpb
pushf
lea
jne
sub
xor
bt
mov
or
add
rol
mov
pusha
push
test
jmp
cmpsb
stos
das
mov
xchg
mov
pop
jecxz
jmp
clc
js
mov
scas
push
loop
in
mov
jbe
in
mov
adc
int
and
idivb
movsb
insb
sbb
scas
adc
xchg
xor
pop
add
out
fwait
cmp
lea
idivb
xabort
fst
out
push
push
btc
sar
lea
stc
mov
bswap
xchg
dec
and
push
bts
add
add
push
btc
push
pushf
and
add
mov
sbb
adc
cmp
sar
mov
pushl
mov
clc
pusha
stc
or
pushf
mov
lea
je
pushf
clc
or
pushf
jmp
push
lea
jne
push
call
pushf
pushf
lea
jne
or
mov
movzbw
add
xor
or
shl
rol
sar
mov
cmc
add
test
mov
stc
test
call
mov
in
xor
enter
xor
inc
dec
lret
jbe
inc
out
loop
nop
bound
sbb
in
shl
mov
mov
aas
stos
insb
adc
dec
ret
addl
dec
call
and
push
jle
pusha
sub
clc
jmp
push
lock
std
std
test
imul
loopne
dec
xlat
das
or
mov
pop
xchg
ss
int
or
jge
imul
jmp
pop
leave
add
in
cs
test
dec
fwait
xorl
sbb
in
xchg
push
push
mov
or
inc
imul
rolb
cli
pop
jmp
sbb
pushl
lea
jne
pusha
stos
pushf
pushl
pushl
lea
jmp
push
add
pusha
movzwl
shrd
sar
rcr
lea
jb
mov
cmc
bt
stc
add
bt
mov
bt
push
stc
test
call
mov
scas
jle
push
mov
push
in
in
jne
xchg
sbb
sub
rcl
add
sahf
lods
xlat
xchg
cmp
rolb
adc
xchg
cmp
pcmpgtw
jb
pop
adc
mov
jb
pop
inc
dec
stos
mov
jle
lahf
sbb
loope
stos
sub
icebp
and
sub
dec
dec
dec
je
lds
pop
mov
dec
jae
cmp
dec
imul
lret
push
roll
inc
js
rcl
data16
in
push
mov
mov
jle
icebp
fs
jbe
jp
jne
into
jae
mov
and
fidivs
mov
fdivrs
leave
in
scas
hlt
pop
fimuls
movsl
mov
int3
repz
rolb
stos
dec
lock
add
jae
iret
jns
sbb
faddl
ret
push
jbe
or
clc
lock
adc
adc
xchg
sub
mov
push
cmp
scas
pop
ficompl
pop
std
popf
dec
lock
mov
lock
ljmp
call
test
push
cwtl
cmp
jge
sarl
test
daa
push
xchg
aaa
movsb
call
es
mov
lock
jmp
and
lahf
inc
loopne
in
and
inc
leave
push
stc
addl
and
pop
sahf
ds
aam
add
pop
jl
push
dec
dec
xor
jno
mov
add
cmp
inc
call
xor
xchg
jns
jmp
adc
jne
stos
xor
outsb
fcoms
mov
popa
out
xchg
jns,pt
loop
in
xchg
jg
mov
popa
lret
xchg
inc
enter
cmc
cmp
insb
sbb
jnp
movsl
lret
insl
xor
pop
add
inc
lock
xor
test
adc
ret
out
fcomps
cmp
add
movw
call
sbb
test
sub
gs
mov
rorb
fbld
jo
movsl
inc
gs
or
mov
mov
jbe
negl
or
jecxz
test
sub
pop
pop
ja
sbb
xchg
xchg
jge
and
out
pop
out
hlt
mov
add
push
push
scas
mov
lret
cli
pushf
addl
adc
jmp
std
repz
jle
adcl
fisttpl
lds
mov
adc
lds
add
xor
cmpb
inc
rclb
push
incb
mov
mov
nop
jnp
fsubrp
mov
mov
and
push
sbb
pop
and
inc
fldcw
cmp
push
xor
fldl
mov
mull
push
sysexit
pop
mov
dec
int
js
inc
rorl
push
outsl
sti
jnp
shl
pushf
lock
mov
cmp
jp
push
jg
and
mov
jge
iret
loopne
push
fbld
rcrb
stc
popf
or
sbbl
lds
sbb
arpl
mov
fadds
add
dec
cmp
jno
xor
push
shll
pop
add
adc
pushf
call
lods
push
push
pusha
mov
ror
push
not
jmp
xchg
lcall
gs
adc
inc
dec
int
aad
add
pop
scas
lea
push
cld
cld
call
pusha
je
jle
sbb
fsub
sbb
inc
test
jle
or
cmp
sbb
mov
adc
out
lods
callw
jnp
pusha
xchg
jae
insl
enter
push
adc
add
loop
adc
fdivl
enter
cmp
mov
insl
lcall
cmp
jl
add
cmc
fwait
inc
jmp
and
outsl
sbb
push
test
pop
pop
jb
add
sti
and
mov
pop
or
mov
subb
in
mov
notb
sub
nop
insb
pop
cmp
ret
jg
adc
insb
jns
lea
test
and
jecxz
cmp
andb
jo
adc
sarl
call
inc
dec
int
push
scas
or
add
push
sahf
and
push
es
or
shl
push
mov
iret
adc
adc
out
pop
jmp
sbb
test
jmp
jb
xchg
aas
lods
in
lea
mov
arpl
cmp
push
cmp
stc
xor
ret
popa
loopne
faddl
mov
add
subb
lock
jbe
pushf
inc
cli
jne
in
and
add
fcom
push
int3
cmpsb
bound
and
loope
dec
jb
add
mov
jae
std
arpl
std
push
push
lds
add
mov
fsub
xchg
add
test
add
out
mov
iret
sub
cwtl
cltd
call
jne
mov
outsl
or
push
jae
inc
scas
jecxz
in
fnstenv
gs
enter
pop
insb
inc
insb
inc
xor
cltd
fiadds
stc
out
inc
cld
insl
xchg
push
enter
mov
xor
out
and
pop
and
adc
dec
insb
add
xchg
or
pusha
pop
cmp
ret
push
inc
push
cld
enter
fists
sub
ret
das
mov
jae
and
lcall
pushf
adc
jae
sbb
and
popf
cmpb
adc
dec
pop
push
and
call
arpl
fsubr
movzbw
test
neg
bts
mov
bt
clc
stc
and
jmp
adc
cltd
and
xor
add
int3
dec
pop
jp
jge
int3
and
in
mov
shrb
mov
cs
fsub
imul
add
std
dec
movsb
adc
adc
bound
fldl
shlb
les
test
jae
pushl
popl
pushf
push
cmp
pusha
pushf
jmp
pushf
neg
jmp
stc
not
push
push
shl
bsf
neg
lea
shrd
aaa
inc
btc
sub
rcl
push
stc
call
add
aas
aas
xor
imul
fs
inc
push
inc
inc
inc
pop
pop
add
inc
dec
jmp
fs
jb
push
cmpb
mov
lea
jne
shl
neg
call
test
pop
fwait
inc
xor
add
mov
mov
push
xlat
bound
mov
xchg
sahf
je
cmp
push
inc
mov
pop
or
mov
pop
aas
arpl
add
mov
adc
sar
cwtl
pushf
inc
or
fwait
sti
xorl
sti
mull
data16
xor
adc
inc
inc
pop
cmpsl
push
std
div
or
xor
scas
xor
out
std
ss
stos
cmp
out
or
pop
stc
cltd
inc
lock
cmp
jle
test
sub
cmp
mov
sahf
mov
ss
pop
frstor
clc
jp
mov
adc
insl
sub
out
xchg
inc
pop
mov
inc
scas
cmp
into
mov
sbb
stos
loop
inc
adc
les
out
and
movb
arpl
loopne
inc
call
sub
and
jl
pop
sbb
cmpsb
je
fwait
loope
das
sbb
pushf
sub
jle
mov
add
test
mov
or
add
pushf
push
clc
add
pusha
pushf
movw
lea
jmp
lea
jb
test
cmp
jmp
dec
push
fisubl
xor
aam
decb
and
aas
in
mov
loop
aas
std
call
mov
sahf
mov
loop
inc
jmp
pop
cld
mov
imul
into
insb
mov
mov
out
xchg
cmp
test
inc
add
aas
lret
dec
sti
xor
mov
hlt
jne
orb
adc
dec
out
sub
mov
or
ljmp
sti
test
loop
xchg
inc
mov
adc
inc
xlat
lcall
jmp
repnz
dec
jmp
ss
js
iret
jbe
enter
lret
xor
popa
inc
sub
test
push
aad
ljmp
xchg
inc
out
sub
loop
add
in
mov
mov
loop
or
arpl
cli
jne
dec
sub
jae
add
sub
cmp
andl
jg
lret
adc
lret
fcmovb
mov
and
ljmp
adc
inc
test
adc
cmp
dec
into
jl
pop
mov
loop
insb
scas
lcall
pop
pop
sti
sbb
and
fwait
push
dec
pusha
pop
mov
imul
in
flds
les
mov
test
pop
sbb
sbb
pusha
pushf
pushf
lea
je
pushf
movw
lea
jmp
adc
pusha
pushl
movl
lea
jmp
jmp
mov
inc
sarb
push
mov
cmpsb
xor
inc
leave
push
fisttpll
xchg
adc
jnp
inc
dec
in
rorl
ja
lds
sub
push
dec
dec
cld
ret
jbe
pop
mov
and
rolb
scas
mov
xor
sbb
cmp
out
xor
cltd
cmc
push
sbb
andb
or
push
rcrl
stos
xor
jg
dec
insl
xchg
mov
test
shlb
mov
lock
cmp
adc
int3
test
push
dec
rcrl
sub
xor
adc
cmp
insb
or
outsb
gs
or
cmp
int
ss
out
jl
insl
lock
jbe
sahf
and
ret
movlps
in
xor
mov
cmpsb
divb
mov
push
mov
sub
cmp
lea
flds
insb
adc
int3
das
sbb
push
fnstsw
test
inc
stos
in
jb
mov
adc
sub
outsb
mov
xchg
in
adc
mov
or
lcall
xchg
xchg
test
rorb
dec
cmpsl
stos
pop
cs
rcll
mov
mov
data16
add
dec
fisttps
and
aad
adc
dec
add
imul
xchg
inc
sbb
imul
mov
jbe
andb
cli
push
fwait
push
add
lret
imul
pop
add
mov
test
pop
lahf
or
push
rcll
stc
xchg
mov
cmp
in
je
int
add
or
push
jg
sbb
mov
popf
fstps
in
cwtl
aas
jb
push
adc
push
push
std
sub
xor
lret
insb
mov
sub
clc
popf
das
fistpll
pop
popf
sub
mov
sub
push
loope
outsb
sub
and
outsl
sbb
bound
adc
into
int
jae
and
andb
ja
mov
sbb
cmp
inc
and
inc
jmp
mov
movw
pushl
stos
pusha
lea
jmp
movl
jl
push
pusha
lea
jmp
push
bt
pusha
add
pushf
pushf
lea
jmp
lea
ja
call
loopne
push
fstpt
cld
adc
xor
outsb
bnd
mov
xchg
sbb
cmp
je
int3
push
jmp
jge
aam
rcrb
test
shll
mov
xchg
aas
xor
jl
or
in
hlt
pop
pop
icebp
jb
movsl
push
add
cltd
stc
mov
inc
mov
imul
jmp
fcomps
xor
imul
std
negb
xchg
stc
outsl
inc
xchg
aad
mov
mov
jmp
in
adc
iret
push
inc
cmpl
imul
sbb
mov
rcll
xchg
outsl
adc
fsubs
inc
mov
lods
jecxz
leave
syscall
cmpsl
leave
inc
shll
int
add
ljmp
popa
add
scas
sbb
jl
dec
mov
loopne
mov
lock
aad
mov
add
mov
orb
cmpsl
push
add
sahf
stos
pop
das
movsb
and
jb
adc
sub
mov
add
in
xor
subl
aad
sub
cmc
cmp
push
lea
jae
pushf
push
lea
jmp
jmp
movzbw
lea
movsbl
mov
call
in
insl
clc
movsb
adc
jge
hlt
pop
sbb
inc
enter
in
xor
or
cmp
imul
jge
test
jns
or
inc
lea
jae
or
adc
cmp
sub
lds
movsl
inc
mov
stc
mov
filds
sarb
rclb
pop
mov
in
das
mov
push
aam
jmp
stc
test
rorl
cltd
sbb
mov
mov
movsl
lds
incb
fstps
push
out
pop
cmpsb
inc
sbb
scas
mov
pusha
jmp
stos
dec
mov
mov
test
xlat
push
push
shll
inc
loopne
cld
scas
add
stos
push
fcoms
cmp
cmc
bound
subl
sub
sbb
bound
lods
push
sti
fwait
inc
ljmp
push
mov
xor
dec
or
sub
jle
aas
loopne
loop
adc
in
mov
sub
jo
loop
push
sub
fnstenv
push
sub
inc
in
cltd
inc
loope
xor
andb
push
adc
rcl
mov
sub
xchg
mov
mov
leave
dec
into
pop
in
testb
pushf
jmp
pop
enter
cmp
popa
add
mov
sub
nop
dec
push
stc
push
or
mov
push
dec
mov
repz
dec
mov
or
das
and
and
adc
and
scas
pop
jae
inc
jb
dec
sbb
pusha
pop
je
add
jle
pop
sub
pop
test
push
push
popf
inc
call
int
gs
cmc
xchg
push
lret
and
leave
jno
xchg
mov
jg
sub
fcompl
add
dec
add
repz
xor
xchg
not
dec
xor
add
inc
js
je
jb
arpl
jae
stos
scas
cmp
push
xor
gs
test
xchg
adc
cs
in
jl
mov
movsl
out
fdivl
mov
cltd
sbb
jg
out
adc
sbb
adc
lea
push
std
push
sub
cmpsl
sub
je
xor
xor
and
push
lods
push
add
jecxz
adc
rorb
cmc
add
stc
cmc
cmc
bt
cmp
jmp
loopne
inc
lds
scas
ljmp
test
rolb
push
faddl
shlb
fstps
out
rcll
mov
jecxz
mov
xlat
xchg
cmp
aas
loopne
sub
xchg
mov
cli
mov
pop
push
dec
dec
out
pop
mov
add
jecxz
std
mov
xchg
mov
xchg
lods
ss
xor
pop
pop
add
nop
push
rcrl
mov
dec
repz
sub
les
es
mov
add
in
xchg
ds
aam
in
test
sbb
mov
or
inc
dec
rcrb
cmpsl
push
pushl
stc
jl
adc
in
or
adc
faddl
push
les
xor
out
cmp
loop
pop
negl
popf
inc
scas
mov
js
jae
js
cmp
inc
mov
pushf
xor
push
mov
pushf
jnp
jecxz
and
out
std
mov
ret
sub
outsl
mov
andb
cmp
data16
adc
subb
lcall
insb
negb
aad
sub
jb
shlb
shll
adc
addl
sub
lcall
out
jo
addl
xchg
xor
repnz
sub
xchg
or
dec
dec
mov
sbb
jecxz
mov
cmp
rorl
sbb
movsl
adc
or
je
movsl
cmpb
lock
mov
inc
mov
sbb
mov
std
cltd
push
fdivrs
xchg
push
jge
sub
repz
pop
cwtl
out
cltd
push
and
in
mov
fnstsw
aam
and
insb
adc
aam
mov
lea
ret
cltd
jnp
mov
xchg
add
test
scas
xor
cmp
pop
in
jp
lret
jmp
lods
mov
inc
out
hlt
xchg
pop
cmp
jl
mov
pop
dec
xorl
je
inc
mov
xchg
add
cltd
frstor
fadds
bound
rolb
dec
mov
fmull
rcr
mov
loop
hlt
sahf
dec
mov
mov
inc
push
cld
push
daa
testl
mov
mov
add
xor
not
pop
dec
mov
mov
pushf
pushl
lea
jmp
outsb
push
fisubl
jne
arpl
pop
ret
adc
daa
scas
lods
cs
inc
in
loop
aas
popa
dec
inc
lret
mov
cmp
inc
cwtl
add
sbb
pushf
filds
sbb
jne
and
iret
sbb
mov
or
jmp
dec
cmp
sbb
xor
adc
into
pop
loop
cld
jge
mov
mov
mov
fcmovnb
xchg
lods
in
mov
cmc
xor
xchg
cmpsb
loop
cmp
insb
sbb
mov
std
ljmp
lcall
and
bound
mov
aad
adc
push
push
stc
ror
cmc
call
cmp
dec
jmp
push
pop
loopne
stc
jnp
mov
mov
cltd
sbb
push
dec
push
loopne
mov
into
pushf
pop
push
lretw
sbb
sbb
loop
cmp
ja
ret
mov
add
adc
mov
sub
fwait
push
sub
sbb
add
add
add
idivb
add
sub
cltd
sbb
sub
sub
add
add
add
test
or
add
movsl
sub
mov
or
add
movsl
sub
imul
add
sub
lgs
add
sub
sbb
sub
push
movsl
sub
aas
jne
add
or
add
sub
sbb
sub
int3
or
add
sub
cmpb
add
sub
ja
sub
fmull
add
sub
xorl
add
sub
bound
sub
andl
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
sbb
add
sub
fwait
movsl
sub
test
or
sub
cltd
sbb
sub
add
cmp
jecxz
ret
jb
xchg
xchg
adc
flds
mov
call
fldcw
inc
in
ljmp
xor
sbb
fmull
arpl
repz
mov
fists
jo
xchg
sub
or
shll
jg
fisubs
add
jg
xor
sahf
pop
loopne
xor
cmpsb
jmp
pop
dec
fwait
sbb
imul
and
arpl
mov
cmc
mov
fdivs
mov
bt
cmc
test
cmp
add
pushf
test
bt
test
mov
jmp
mov
call
jae
loope
push
jecxz
or
movsb
fs
addl
adc
push
fdivrl
jg
gs
xor
fildl
subl
or
add
dec
int3
inc
xchg
xchg
cmp
mov
orl
ret
lock
arpl
ja
shlb
pop
jns
dec
out
xchg
cmp
xchg
aam
adc
sarb
aas
adc
jmp
bt
repnz
pusha
movw
call
mov
cmp
icebp
push
mov
and
cmp
dec
jmp
dec
mov
cmc
jb
pop
jno
aad
or
sbb
sbb
iret
cmp
shlb
xchg
cmp
and
mov
or
movsl
sub
and
pop
sti
sbb
push
clc
movsl
dec
call
ss
js
adc
rclb
pop
pusha
in
insl
sbb
mov
test
mov
mov
inc
in
loop
std
popa
dec
adc
in
mov
or
inc
movsb
sub
imul
cwtl
adc
sub
loope
pop
jae
mov
ret
push
mov
out
adc
fimull
jbe
dec
dec
push
inc
push
dec
cs
insb
add
aas
xor
inc
imul
hlt
jecxz
fidivs
pusha
notl
in
dec
outsl
inc
shr
mov
jne
in
das
xor
add
insb
mov
in
mul
insl
push
sbbb
dec
mov
cmp
cwtl
hlt
or
inc
es
dec
push
mov
sub
mov
xchg
inc
jge
push
push
jno
and
inc
jb
aas
and
ljmp
xor
int
push
loope
cmp
das
scas
ret
sahf
roll
into
or
xchg
imulb
arpl
cmp
data16
jbe
pop
call
clc
cmp
push
ret
inc
adc
and
pusha
hlt
jo
loope
push
sub
mov
shlb
je
push
outsl
pop
adc
inc
xchg
imull
test
outsb
call
or
jbe
mov
in
pop
sub
jns
pop
les
popa
stos
mov
xchg
mov
gs
inc
iret
push
out
addl
sub
ret
mov
or
call
cltd
or
idivb
mov
push
cwtl
or
repz
imull
adc
sub
xchg
lcall
and
dec
aaa
sub
sbb
test
idivb
imul
sbb
xchg
out
testl
movsb
ds
cli
jge
pop
jbe
jecxz
and
aas
jecxz
ss
or
call
into
ret
je
popf
and
imul
idivl
jge
dec
jo,pt
xor
fstpl
mov
insb
test
icebp
out
dec
fisubrs
into
and
pushf
mov
jecxz
loope
xor
inc
jle
dec
shll
imul
xchg
lahf
sbb
shrl
push
subl
pushf
push
lods
jmp
push
imul
mov
pop
cmp
sub
cmp
pusha
push
xor
iret
mov
int3
test
dec
pushf
arpl
jg
aaa
in
andl
sbb
sti
dec
out
into
jl
push
pop
dec
lods
inc
sub
rorb
je
shr
xor
outsb
inc
lods
ss
jbe
mov
push
or
cltd
adc
imul
popa
dec
jle
sbb
inc
push
shrb
into
mov
dec
sub
sti
mov
movb
lods
jmp
mov
mov
jo
mov
aaa
cltd
inc
hlt
iret
xchg
out
sub
adc
cmp
cmp
xchg
mov
pop
loope
sub
hlt
push
cltd
cmp
sbb
je
imul
inc
pop
xor
call
jecxz
sbb
inc
lods
dec
push
and
sub
push
rorl
push
ret
mov
mov
xor
ds
push
das
daa
pop
les
loop
mov
cmp
clc
insl
add
aaa
inc
and
push
cmp
and
icebp
sub
rolb
imul
xchg
jecxz
daa
xor
in
mov
inc
mov
sahf
dec
jno
pop
add
mov
cmp
adc
ret
push
inc
cwtl
data16
mov
add
push
pop
out
mov
dec
aas
subl
out
pop
mov
loope
jns
ret
in
les
shrb
sbb
ds
pushl
add
imul
int
aam
pusha
xchg
jbe
cmc
cmpsb
push
add
sbb
test
into
jp
scas
fstps
jecxz
jge
cmp
inc
xchg
and
outsl
out
bnd
mov
shlb
arpl
push
sbb
into
push
sub
cmpsb
inc
ja
js
cmpsl
push
mov
inc
pop
insb
pop
xor
and
ficoms
sbb
repz
lret
inc
lods
jg
jbe
cmp
sub
inc
cs
xchg
sti
outsl
jb
mov
nop
xchg
fcmovbe
test
push
jne
pop
arpl
aam
sahf
dec
ret
call
mov
arpl
mov
mov
leave
movsl
hlt
add
in
lea
mov
jmp
mov
loop
jmp
dec
out
mov
jle
popa
push
mov
ljmp
out
jae
dec
int3
clc
das
jecxz
dec
les
or
jo
cmp
aaa
test
stos
xor
pop
cmp
mov
and
inc
xor
stos
int
and
add
fisubrs
dec
mov
leave
outsl
jmp
and
ss
cmpsb
call
popf
or
xchg
jecxz
mov
ficomps
or
bsf
jecxz
movsl
loope
aas
insl
dec
dec
scas
xor
in
daa
insb
mov
push
adc
jae
call
js
push
cmp
pop
fsubs
pop
sahf
sbb
jns
or
sub
sub
ret
push
divb
negb
loope
push
cmp
mov
negb
lds
push
sub
int
es
stc
inc
outsl
xor
fs
leave
call
and
push
rcrb
mov
cltd
in
add
cmp
in
pushf
cmp
dec
out
aaa
ja
aad
mov
and
in
mov
mov
cltd
ljmp
dec
jnp
inc
fcom
xor
int3
sub
pop
lret
orb
lret
xchg
cs
shlb
out
pop
pop
sub
div
sbb
popa
inc
int3
les
lahf
cmp
sar
lods
xchg
inc
clc
sub
lds
stos
xor
dec
pop
mov
lods
push
cltd
fadds
outsb
into
addb
imul
lret
mov
pop
or
push
xchg
xchg
cmc
inc
movsl
cs
xlat
inc
inc
lret
cmp
mov
pop
ret
add
jecxz
bound
les
fwait
jb
in
inc
add
add
dec
cmpsb
adc
cmp
hlt
sub
push
adc
test
jp
daa
pop
cmp
inc
lcall
aaa
mov
jns
sub
xor
shl
cmp
decb
sbb
ja
clc
inc
mov
popa
test
and
inc
jne
test
arpl
test
addl
call
mov
push
add
pushf
mov
sbb
mov
jg
rolb
sbb
sbb
cmp
call
mov
mov
imul
ds
ret
xor
mov
imul
imul
or
call
ja
inc
ljmp
dec
sub
ffree
mov
jne
int
push
sub
sub
into
aad
addr16
mov
test
xor
dec
pop
cmp
leave
fdivrl
push
les
cmp
test
stos
push
push
fsubr
pop
pop
call
out
lahf
call
add
leave
fmuls
xor
mov
sub
mov
ja
jecxz
jb
subl
push
sub
loope
mov
ljmp
sbb
pop
push
cmc
popa
sahf
adc
call
lds
notl
ja
sub
lret
orl
adc
adc
sahf
mov
aaa
dec
cs
dec
sub
aas
loop
xchg
in
mov
fcmovne
popf
testb
leave
loopne
add
xor
insb
mov
lret
lahf
subb
xor
and
jg
mov
pop
sarl
gs
rclb
std
and
sub
subb
mov
inc
in
xchg
je
mov
lcall
add
xor
movsl
pop
cmp
sub
sub
cmp
fs
adc
or
pushf
popl
bound
mov
arpl
sub
lock
popf
std
inc
xor
lcall
lock
xor
sub
jns
ljmp
cwtl
jo
sti
shrb
enter
xchg
shl
mov
fstps
sbb
xchg
jb
xor
pop
out
cmp
sub
xchg
adc
xchg
xchg
sub
iret
inc
dec
or
aas
or
fisttps
jl
xchg
pop
cwtl
or
and
sub
sub
cwtl
pop
call
gs
mov
in
addb
jge
mov
adc
inc
aad
rcrb
lods
lods
xlat
inc
test
into
jb
adc
jo
test
in
xchg
lock
addr16
repz
sbb
pop
cmp
cmp
pop
mov
or
mov
and
and
out
cmc
je
and
hlt
aas
mov
imul
pop
jp
insl
out
mov
lods
mov
lahf
pop
xor
into
fldt
inc
push
jge
pop
inc
add
out
shrb
pop
inc
cs
dec
mov
jmp
pusha
dec
cltd
fst
inc
mov
cmpsb
stos
xor
cwtl
pop
xchg
push
mov
or
mov
hlt
xchg
push
mov
jg
add
xor
push
inc
test
mov
loop
outsl
cmpsl
ja
loopne
inc
addl
jno
add
incb
cli
add
adc
aas
mov
mov
jge
cmp
in
mov
cmp
dec
orl
mov
adcl
add
es
push
sub
and
in
je
xchg
sahf
imull
dec
inc
xor
addb
and
inc
popa
movsl
xor
test
jge
pop
cltd
mov
shl
insl
mov
loop
dec
testb
jg
jge
lods
in
pop
hlt
and
push
mov
push
je
inc
sub
lahf
adc
test
arpl
or
push
imul
scas
inc
lods
adc
scas
pop
and
shlb
das
hlt
insb
sub
jbe
or
jl
pusha
dec
xlat
lahf
and
fadds
mov
cmp
loope
cs
pop
and
dec
pop
inc
sti
shll
cmpsl
sbb
inc
mov
insb
mov
pusha
ds
mov
ret
insb
sub
inc
add
jg
adc
dec
cmc
ficompl
or
mov
imull
pop
lea
adc
mov
enter
or
je
in
dec
jg
mov
dec
cmp
out
gs
stos
lods
xchg
test
and
inc
inc
aaa
clc
jecxz
es
xor
loope
iret
dec
and
jb
in
les
mov
pop
test
mov
je
sub
and
divb
rcrb
inc
cltd
ss
test
push
push
dec
insb
and
scas
mulb
fisubl
pop
lds
xchg
inc
lods
enter
sar
int
mov
xlat
and
out
lods
fisubs
loopne
es
fwait
push
addr16
jle
sub
xchg
fldcw
mov
sub
and
jl
mov
mov
orl
stos
shl
and
mov
pop
sub
jp
mov
cmp
jae
in
xor
push
les
mov
cs
sbb
je
mov
je
dec
add
shrl
jp
sub
mov
call
notl
or
jnp
ljmp
xor
jne
xor
test
aas
pop
inc
inc
jecxz
das
adc
sbb
fmull
adc
aam
and
pop
call
pop
add
xchg
cmp
fldcw
and
inc
in
jb
xor
sub
jbe
cmc
outsb
sub
pop
sbbb
xchg
sub
adc
les
loope
push
inc
cmp
aaa
mov
or
call
push
sub
or
or
push
jle
into
dec
les
dec
lods
out
popf
idivb
ljmp
pop
inc
sbb
jno
xchg
cmpsb
dec
inc
jge
push
adc
popa
cwtl
push
cmpsb
push
stc
loopne
mov
les
sub
sbb
or
pushf
mov
mov
lret
out
xlat
pop
sub
mov
xor
jae
dec
fdivrs
mov
inc
push
and
test
mov
inc
jnp
add
jl
call
xchg
sahf
pop
stc
aad
pop
sahf
movsl
push
add
inc
mov
pusha
push
scas
and
ds
dec
jb,pt
dec
push
inc
mov
sub
jg
cs
ret
or
out
mov
mov
mov
inc
jne
adcl
inc
dec
mov
sub
push
jb
dec
inc
add
pop
fadds
into
add
enter
lret
pop
sti
inc
pushf
les
dec
das
int
sbb
loope
sti
js
ret
loop
push
pushf
inc
aad
mov
loop
or
xor
inc
neg
xor
mov
add
testl
cld
sbb
cmpsl
inc
mov
inc
loope
mov
and
bound
loope
push
ss
fcomi
jecxz
int3
mov
ficompl
ss
dec
clc
scas
jnp
jne
inc
mov
imul
outsl
jecxz
or
pop
mov
fisubrl
inc
imull
jb
fmull
mov
inc
int
pop
insl
jg
push
push
xchg
mov
into
adc
sahf
pop
clc
adc
or
push
mov
xchg
push
xchg
or
jno
pop
pop
in
fmul
pusha
mov
aad
in
cmp
pop
pop
in
add
mov
mov
xlat
cmpsb
xchg
cmp
in
jae
inc
fsubrs
es
movl
leave
sbb
mov
arpl
inc
inc
shlb
jbe
sub
sub
push
mov
add
movsl
cmp
bound
add
mov
push
sub
ljmp
mov
outsb
imul
sub
cmp
out
add
loope
call
mov
push
mov
and
push
mov
mov
sub
dec
mov
je
addr16
pop
cmp
sub
mov
stos
mov
xchg
fmuls
cwtl
fwait
pop
jbe
adc
dec
lods
stos
daa
es
jb
les
call
test
cmc
addr16
inc
call
jne
inc
insb
pusha
gs
ljmp
daa
ljmp
ss
popf
mov
cmp
mov
insl
test
dec
mov
imul
into
shl
and
sbb
cmp
loop
cmp
call
mov
movsl
out
mov
xchg
adc
jecxz
sbb
insb
sti
in
cltd
fcmovne
cmpxchg
call
inc
fldcw
push
add
mov
sub
stos
ljmp
xchg
and
clc
xchg
mov
jns
push
outsl
cltd
sub
sub
sub
in
stos
xor
push
and
daa
sbb
addr16
xlat
int
es
divb
xchg
jl
test
and
jb
mulb
or
cld
enter
dec
into
leave
pop
roll
inc
push
rcll
repz
shl
or
lods
mov
test
push
push
int
les
popa
add
sti
jge
and
int
add
pusha
js
fwait
cmp
dec
je
out
addr16
inc
mov
gs
jb
jle
loop
stos
sub
call
pop
repz
push
in
xor
push
dec
jge
pop
and
out
mov
lea
ja
push
jmp
mov
test
jne
and
dec
stc
xchg
into
or
or
dec
icebp
mov
xchg
rcll
mov
add
cmp
push
xor
loopne
cmp
out
pushf
mov
out
cli
mov
jnp
adc
mov
adc
es
mov
push
mov
notl
imul
mov
loopne
jmp
lea
call
pushf
adc
pusha
jmp
dec
dec
aad
or
push
mov
adc
inc
int3
je
jae
int
mov
scas
lcall
xchg
cmp
adc
push
sbb
add
xor
insl
xchg
cmp
or
fiadds
insb
adc
pop
add
push
or
and
sub
inc
mov
xchg
jecxz
testb
mov
pop
stc
nop
adc
jns
xor
hlt
aaa
test
lcall
jne
and
cmp
lret
pop
cmp
pop
dec
hlt
popa
cmp
lret
aas
cwtl
sahf
sub
and
jne
adc
mov
loopne
dec
push
adc
loope
sub
push
repz
adc
cmovbe
lcall
fbstp
mov
cltd
stc
inc
shlb
mov
add
pop
pop
test
adc
in
adc
mov
loop
xor
fstps
jae
jle
xchg
sbb
and
in
mov
shlb
insb
jle
mov
push
cmpsl
test
dec
lds
lds
xor
outsl
jae
push
test
sbb
andl
or
outsl
pop
mov
jle
jo
cmp
std
out
shll
adc
mov
pop
fsubp
mov
movlps
test
jae
mov
add
push
adc
in
sbb
inc
adc
jne
cltd
xor
das
and
aam
frstor
in
pop
test
sbb
lret
call
jecxz
inc
fs
imul
mov
incl
imul
pop
mov
mov
add
loop
cs
in
icebp
fistpl
add
repnz
jne
btr
xchg
sub
shl
mov
jmp
mov
pop
pusha
not
lea
call
bt
add
ror
clc
adc
sar
mov
add
jns
add
stc
pushf
mov
shl
sub
shrd
or
mov
pusha
stc
jmp
movzwl
rcr
pop
cmp
mov
jmp
mov
ja
xor
push
push
xchg
push
movsb
and
lret
insl
or
mov
cmpsb
xchg
aam
stc
in
mov
insl
lea
imul
add
jp
push
testl
mov
nop
cmp
subl
subb
add
mov
dec
dec
inc
push
push
dec
xor
cs
dec
dec
add
sbb
bound
dec
int3
pop
jecxz
in
jmp
add
loop
sbb
sub
hlt
pop
mov
sub
loop
and
arpl
cli
sub
out
mov
orb
add
dec
jmp
sub
out
cmp
loop
shlb
sub
call
fsubl
mov
push
imul
addl
jb
cmp
pop
jg
pop
xor
test
cltd
pop
clc
aad
push
cwtl
inc
shll
lock
daa
adc
pop
scas
pop
sub
jo
in
leave
push
dec
lock
ljmp
inc
hlt
jge
sub
xor
sti
lar
mov
arpl
or
popa
int
cs
add
inc
data16
loopne
lahf
loop
add
push
das
mov
adc
adc
dec
repz
xor
and
jbe
mov
mov
cmc
sbb
fcomip
adc
in
das
out
jb
pop
pop
shll
in
jae
mov
adc
sbb
filds
lds
xor
xorb
push
das
inc
dec
repz
cmpsb
push
cltd
adc
out
xchg
adc
out
ret
and
scas
xor
dec
xor
es
rcrl
pop
jecxz
in
outsl
cli
jl
mov
ficomps
loop
push
outsb
pop
adc
inc
scas
icebp
cltd
mov
addr16
insb
sbb
sbb
andl
mov
hlt
mov
fstl
imul
mov
or
cld
test
les
pop
loope
bnd
mov
jae
xor
mov
add
mov
outsl
mov
aad
repnz
cmpsl
add
icebp
fs
fdivrs
pop
ret
mov
dec
cltd
cli
pop
mov
arpl
in
dec
icebp
adc
je
adc
insb
push
sar
mov
lds
or
mov
stc
mov
mov
and
xchg
loope
ud1
mov
negl
lock
nop
shr
mov
add
add
dec
gs
popa
addr16
outsl
js
add
decl
pusha
clc
add
jmp
test
cmp
jmp
pushl
pushf
mov
setge
call
dec
int
cmc
or
mov
and
xor
gs
jl
mov
call
jmp
inc
rcrb
add
fidivrl
mov
push
in
out
dec
dec
call
mov
dec
sub
and
jo
mov
xchg
aad
push
or
sbb
loop
jle
and
adc
bound
and
outsb
mov
inc
sub
scas
pop
or
stos
dec
mov
insl
sbb
jb
mov
ljmp
adc
repnz
scas
int
les
mov
sub
mov
push
pop
loopne
out
hlt
jbe
mov
fdivr
mov
mov
push
cli
jnp
aad
push
or
aam
dec
rcrl
sub
xor
mov
std
test
lret
pop
sahf
lcall
filds
outsb
xor
sub
data16
fidivrl
jbe
inc
jmp
ret
cltd
or
fadds
pop
or
icebp
pushf
inc
loop
and
xchg
jl
fcomp
push
fcom
loope
pop
mov
popf
push
movsl
sub
jbe
ds
sub
xchg
fiadds
xor
sub
cmp
movsl
mov
push
and
xorb
push
cli
mov
cmp
push
roll
xchg
or
rolb
inc
ljmp
jae
mov
mov
cmp
pusha
movb
jmp
mov
lea
jae
pusha
mov
pusha
push
call
push
sbb
xadd
jmp
gs
jne
test
fs
rclb
popf
and
mov
subb
cld
loop
or
rcrb
in
mov
ljmp
adc
mov
pop
scas
mov
pop
jecxz
sbb
jne
mov
add
out
adc
repnz
push
repz
leave
out
and
movsl
sub
rcrl
gs
stos
in
xchg
xchg
mov
clc
ja
add
cmpsl
dec
int
push
mov
aad
push
lds
push
outsl
push
push
sub
clc
sub
test
mov
ja
xchg
cmp
or
fsubrl
jl
cmp
sub
dec
sahf
inc
in
jl
bnd
lds
aam
pop
fistpll
ds
sbb
dec
rcrl
pushf
mov
inc
jnp
loope
imul
int3
pop
mov
out
pop
mov
sahf
outsb
sahf
xchg
rcll
jp
loopne
hlt
ljmp
mov
xchg
mov
inc
loope
sub
outsl
sbb
adc
pop
sbb
pushf
pusha
call
add
dec
outsl
popa
fs
imul
add
cld
call
cld
fadd
inc
mov
jne
addb
adc
xor
andb
in
insl
mov
jmp
push
dec
arpl
in
inc
mov
push
lods
imul
jl
xchg
jae
sbb
cmp
sbb
and
xchg
ja
pop
jo
subb
idivl
rcll
clc
gs
xor
stc
cmp
bound
loope
dec
lret
aaa
testl
jge
clc
push
dec
sbb
in
xchg
xor
subb
jnp
ret
div
daa
adc
push
aad
ljmp
notb
std
addl
lods
sub
inc
out
aad
addl
js
andb
jg
sub
rorl
push
sbb
je
add
pop
test
inc
int
scas
and
pop
pop
add
mov
xor
pop
test
or
sbb
push
push
ja
cli
mov
insb
idivl
in
pop
movsl
rorb
or
popf
mov
mov
into
dec
xchg
sbb
shll
ret
lods
pop
std
lahf
aas
out
ss
adc
cmc
push
ds
mov
stos
inc
push
stos
imul
sti
jge
mov
mov
pop
xchg
lds
mov
mov
iret
mov
outsb
jo
ja
inc
int3
jbe
in
hlt
out
mov
ret
insl
in
cmp
rorb
jnp
movsb
dec
or
or
xor
inc
mov
jo
mov
clc
movsb
dec
notb
div
push
clc
out
imul
jmp
mov
pushf
xor
jmp
repz
loopne
stc
mov
sbb
inc
cld
jg
xchg
sbb
cmp
outsb
pop
imul
sbbl
jo
ret
dec
ljmp
sahf
aas
or
daa
aad
popf
mov
mov
test
pop
int
call
cmp
sti
std
lock
mov
sub
adc
cmp
xchg
ljmp
mov
test
fidivrs
or
jno
mov
movsb
mov
and
adcb
sub
rcl
out
lock
mov
nop
ss
das
fsts
xchg
push
inc
dec
inc
orl
jb
sbb
pusha
jmp
fnstcw
les
imulb
sbb
add
push
popa
je
inc
imul
jae
add
ds
xor
sbb
inc
iret
push
fsubl
imul
add
lahf
mov
mov
jnp
mov
ljmp
ja
jl
pop
mov
je
cmp
dec
add
fdivs
cmpsl
dec
repnz
inc
call
and
testb
xor
mov
lret
pop
in
cld
addl
adc
in
push
xor
mov
or
mov
and
sub
xchg
jns
addl
and
dec
add
repnz
mov
mov
cld
inc
shrb
sbb
ret
imul
cltd
cmp
addl
lcall
cs
xchg
sahf
inc
mov
mov
lahf
and
dec
ljmp
dec
mulb
fstl
div
mov
outsb
negl
or
sub
sti
pushf
mov
xor
dec
or
push
hlt
rcrl
loop
cmp
pop
insb
push
int
push
pop
push
xor
mov
add
decl
dec
in
xchg
inc
out
xchg
xor
xchg
leave
outsb
push
rclb
testl
enter
mov
ficompl
imul
add
mov
pop
add
push
mov
mov
sarl
xchg
mov
or
mov
enter
add
push
push
mov
add
jno
jecxz
mov
jmp
stos
push
cmc
stc
xchg
xchg
cmp
loope
xchg
mov
in
repz
push
pop
add
and
add
xchg
aaa
loopne
xor
jo
mov
clc
and
lret
divb
mov
fs
sub
xor
push
fldl
mov
subb
fsubr
mov
push
lea
push
sbb
sbb
jno
test
shrb
jbe
enter
fs
dec
in
adc
stc
add
xor
rcll
sub
fs
cmp
jg
mov
test
mov
mov
les
pop
add
mov
xor
fisubs
in
mov
dec
imul
scas
loop
arpl
insb
pop
movsb
sbb
pusha
jmp
pop
add
nop
sbb
sahf
inc
jmp
inc
in
xchg
adc
stc
push
inc
test
lds
insl
xor
fwait
push
xlat
pop
fisubrs
jns
lea
adc
loop
pop
cmp
push
mov
popf
xchg
cmp
mov
dec
loop
add
test
imul
dec
call
or
pop
jmp
adc
cli
add
loopne
cmc
pusha
add
movb
mov
add
jo
pusha
mov
dec
sub
mov
pusha
test
movw
stc
cmp
mov
lea
jbe
and
xchg
xor
neg
mov
inc
add
rcr
mov
not
rcl
add
sbb
movl
dec
mov
pushf
movb
mov
cmp
call
jmp
lea
jne
cmc
pushf
jmp
outsb
jae
mov
cwtl
xor
jnp
sub
inc
ret
push
sarb
inc
out
loop
adc
rcll
ret
outsl
xor
cmp
inc
loop
sbb
sbb
dec
mov
or
pusha
lods
cltd
inc
add
popa
loopne
adc
cmp
adc
cli
fwait
test
sub
jl
clc
cmc
add
cmc
clc
movzwl
rcl
clc
mov
pushf
cmc
push
stc
add
pushf
cmp
mov
cmc
test
jmp
lods
bt
bt
ror
movb
jmp
or
test
dec
lret
dec
int
loope
std
imul
fcmovbe
sbb
or
pop
and
popa
push
mov
inc
xchg
push
mov
in
aas
jmp
pop
adc
mov
shll
adc
sti
xor
or
das
jo
xchg
push
lods
xor
sbb
xchg
push
loopne
stos
mov
inc
xchg
js
stos
sub
push
arpl
and
mov
stc
sbb
mov
aam
inc
xchg
stos
dec
call
mov
ds
pop
aas
out
mov
loope
insb
repnz
aam
dec
pop
popf
pop
cld
sbb
dec
dec
cmp
mov
lret
idiv
cmp
icebp
xchg
add
xlat
mov
inc
decl
cmp
subl
cmc
push
daa
ljmp
xor
mov
movsl
dec
or
xchg
mov
mov
arpl
pop
push
gs
call
ret
rolb
mov
add
xchg
push
in
filds
dec
adc
mov
fdivrs
into
outsl
adc
pop
adc
sti
sbb
inc
leave
jno
adc
loope
ljmp
stos
xor
loop
imul
mov
dec
outsb
in
insb
loop
jae
leave
insb
pop
xchg
adc
cmp
outsl
rorl
inc
in
xchg
cmp
ja
mov
stos
push
xor
dec
imull
fmulp
mov
imul
add
mov
cmp
and
and
pop
or
sbb
out
in
repz
iret
repnz
or
aas
leave
mov
stc
jecxz
out
pop
or
aaa
fwait
cmp
or
iret
cmp
repz
pop
dec
gs
sub
ss
mov
rcll
test
jp
ret
aaa
mov
xchg
mov
int
xor
fstpt
shll
jmp
adc
std
pop
icebp
xor
sub
aaa
test
push
loopne
out
jmp
mov
xchg
cmp
pop
sub
mov
jmp
push
mov
jbe
inc
subl
sbb
adc
mov
popf
push
add
mov
je
xchg
cli
insl
adc
dec
pop
or
or
clc
push
in
inc
in
ret
ret
arpl
pop
mov
lock
cs
cmp
adc
or
negb
test
int3
jp
insb
outsl
in
jo
fsts
sbb
loop
and
jae
adc
std
cmp
ffreep
inc
incl
lea
mov
not
pusha
movsbw
lea
movb
push
movl
push
mov
mov
mov
push
mov
pushl
ret
bswap
bswap
mov
pusha
jmp
ror
shl
xor
bt
inc
stc
sub
call
push
add
cmp
cmp
call
pusha
lea
jae
stc
jmp
and
test
dec
mov
xchg
popa
call
test
mov
cmp
add
sti
mov
daa
shll
ds
icebp
repz
inc
popa
add
mov
lcall
test
js
mov
pop
add
loope
mov
xchg
push
jae
js
jae
arpl
roll
xchg
cmp
fadds
add
loop
ds
push
cmc
popf
or
cltd
mov
push
fldenv
adc
je
adc
cmp
mov
jle
lret
jne
mov
sarb
mov
mov
loopne
cmpsl
sub
ljmp
xchg
imul
mov
cwtl
mov
cmp
pop
add
clc
or
dec
es
inc
std
imul
dec
into
jns
xchg
setnp
test
push
mov
hlt
fists
daa
out
fsincos
aas
xchg
xchg
or
mov
add
ss
std
rclb
mov
mov
mov
inc
jmp
xor
idiv
repz
rcl
btc
stc
rcl
mov
jmp
test
movb
call
fs
or
inc
ret
dec
aad
fsubl
imul
and
or
jmp
mov
push
in
mov
testb
jnp
pop
mov
nop
dec
push
out
xchg
fldl
lods
cli
or
mov
mov
pop
stos
push
icebp
sahf
cmp
idiv
out
fcomps
adc
movsb
sub
xor
pop
push
xlat
push
loop
cmc
jnp
xchg
mov
mov
loopne
pop
cltd
loop
push
in
mov
fstpl
lahf
es
jecxz
mov
push
lahf
loop
shrb
loope
cli
cmpsl
mov
xchg
adc
lss
inc
ljmp
add
outsl
rol
bsr
mov
sar
call
xchg
jae
ja
adc
xchg
sbb
mov
lret
dec
into
push
fnstcw
inc
out
sbb
int
sub
aam
xor
dec
mov
fiadds
clc
pop
cld
and
insl
enter
call
subb
jmp
inc
stos
sub
rcr
movsb
fadds
adc
push
cli
imul
adc
add
cli
xchg
lods
push
hlt
xchg
cmp
subb
jmp
sbb
stos
push
in
push
fistl
test
loopne
xor
test
adc
add
fbld
pushf
lea
jb
pusha
pushf
pushf
cmpb
pushf
lea
jne
bts
mov
pushf
bt
cmp
cmp
add
cmp
mov
pusha
movzwl
not
movsbl
mov
pushf
add
clc
pushf
mov
bt
call
sub
call
mov
lea
jbe
inc
bsr
shld
sub
bt
bts
clc
adc
mov
xadd
mov
bts
add
rol
movzbw
movsbw
shl
shr
test
lea
sar
mov
btr
rcr
add
movzbw
mov
jmp
outsl
push
fisubl
outsl
pop
in
aas
dec
mov
repz
mov
lcall
jg
inc
insw
xor
dec
fsubrp
dec
sub
cld
movsb
cmpsb
insl
add
nop
jecxz
sub
int
xchg
aad
retw
pop
sarb
sub
jmp
into
ja
sbb
sbb
repz
fwait
inc
inc
js
cli
lret
loopne
incb
aas
frstor
inc
out
pop
clc
test
adc
push
mov
hlt
sahf
dec
out
mov
testl
pusha
pushf
adc
movb
call
lea
jb
jmp
lea
call
call
xchg
je
jg
xor
pop
pushf
push
stos
xor
rorb
fimuls
mov
mov
mov
sti
gs
loop
dec
adc
push
or
sub
mov
outsl
testl
aaa
fldl
adc
add
ret
push
fistpl
jno
and
stc
jp
mov
xchg
pop
movsl
daa
cmpsl
xor
jle
inc
vpmulld
out
in
subb
bound
sub
mull
roll
adc
imul
cmp
lods
push
pop
pop
cld
lods
jne
push
rcll
mov
ljmp
cmc
cwtl
inc
call
adc
add
jo
call
lock
orl
cmp
pusha
sbb
and
xor
cmp
fmull
ret
sbb
xor
outsl
sbb
mov
ds
cmp
fwait
inc
in
aaa
push
notl
imul
jmp
push
adc
leave
imul
sub
jb
ret
imul
push
adc
push
repz
xor
inc
stos
out
jae
addb
adc
imul
addr16
xchg
adc
pop
enter
pop
fstps
push
sbb
sti
sub
pop
mov
pop
lret
cmc
repz
push
mov
cmc
mov
faddl
xor
sub
rcll
sbb
rcrb
pop
out
sbb
in
inc
adc
mov
mov
js
lcall
fistps
sub
pusha
push
mov
movsl
rorb
adc
adcl
xor
and
imul
inc
cmp
push
or
shl
fcmovnb
or
cmpsl
mov
into
mov
mov
inc
jmp
es
xchg
insl
dec
mov
mov
sarb
jno
ret
push
push
sarb
rcrb
xor
jmp
jmp
rcl
pop
loopne
pop
xor
xor
je
orb
and
cmp
mov
imul
int3
in
ret
lods
mov
std
loop
mulb
adc
push
jns
lock
mov
pop
fisttps
shll
ret
outsb
adc
adc
aas
idiv
xchg
mov
out
das
mov
push
ficomps
gs
cmp
push
sahf
mov
xchg
xor
sub
pop
and
mov
mov
test
mov
add
shlb
pop
ja
push
popa
add
push
adc
xchg
dec
in
scas
aaa
loopne
repnz
jb
inc
mov
push
sti
cli
adc
push
mull
adc
lods
dec
std
mov
fildl
add
add
je
jb
gs
jo
outsb
inc
add
sahf
sbb
fimuls
xchg
sbb
inc
leave
dec
rclb
stos
lret
mov
out
adc
in
ds
cmpsl
push
andb
loop
mov
and
xor
sub
hlt
sbb
push
jle
shrb
pop
stc
mov
cli
adc
push
adc
aas
cmp
cmc
cmp
pushf
movw
jmp
inc
dec
aad
or
xor
lods
pop
pop
fbld
data16
mov
xchg
sbb
jno
xor
mov
test
push
shll
mov
inc
jle
sahf
mov
imul
lods
and
add
fcomip
mov
mov
fnstsw
int3
jae
mov
or
pop
mov
xor
pop
add
mov
call
pop
cmp
imul
push
mov
dec
rcrb
data16
sub
in
daa
in
cmp
sub
cli
adc
and
xchg
fsubrl
push
mov
clc
cmp
or
stc
rsqrtps
retw
testb
in
aaa
sbb
push
jae
push
fcmovbe
jns
hlt
jp
mov
and
jae
cmc
mov
aaa
mov
xchg
xchg
aaa
repnz
movsl
push
sti
mov
fildl
push
pushf
xchg
add
push
lea
je
cmc
sub
bt
stc
bt
cmp
call
out
rclb
test
fs
inc
mov
bnd
jl
orb
adc
cmp
mov
cmp
push
in
mov
iret
or
std
loop
pop
cld
push
jl
or
outsl
mov
jno
fstps
test
fisttps
lret
pop
mov
bt
pushl
popl
cmc
stc
cmp
pushf
lea
ja
jmp
mov
mov
mov
test
movb
pushl
lea
je
jmp
test
mov
sub
popa
loopne
bnd
je
test
test
loopne
xchg
mov
mov
dec
xchg
inc
repz
loop
sarl
insb
pop
xchg
jno
or
mov
inc
xchg
sbb
dec
stc
popf
aas
fiadds
insl
adc
testl
fs
jae
pusha
movw
movzbw
mov
bswap
mov
pushl
pop
pop
pushf
mov
push
pushl
lea
jmp
lds
loope
es
push
aam
fldenv
jp
addb
push
xchg
inc
call
and
mov
adc
lods
mov
inc
ljmp
fisubrs
sbbb
aas
mov
mov
xor
lock
add
mov
push
sar
loop
adc
push
fwait
inc
scas
loopne
testl
sahf
cltd
imul
lret
out
mov
inc
in
das
xlat
andl
adc
or
fcompl
aaa
sbb
into
mov
cmp
out
jbe
test
movsb
xlat
sub
nop
dec
inc
out
hlt
sub
dec
lret
js
cmp
mov
dec
cmpsb
lods
lods
and
mov
xchg
inc
push
subl
sub
inc
xchg
and
into
shll
push
cli
test
repz
adc
or
mov
jl
stos
sbb
pusha
lock
popf
sub
pusha
loopne
out
jb
mov
xlat
aam
add
test
sti
lar
mov
or
or
push
pop
and
addb
sub
push
mov
jecxz
and
in
jns
push
pop
sub
icebp
xchg
aaa
xchg
xchg
mov
jnp
pop
ret
pop
dec
sub
movsb
sub
jo
addr16
cmpsl
xchg
push
repz
cmc
hlt
hlt
push
mov
out
pop
icebp
inc
call
fnstcw
int
sbb
adc
or
test
sbb
fs
out
pop
pushf
and
xor
dec
fstps
addr16
andb
or
xchg
fdivrs
mov
cmp
loop
cmp
dec
insb
push
fnsetpm(287
or
add
pop
mov
out
and
push
mov
mov
push
lods
dec
icebp
sahf
dec
in
mov
testl
lods
stc
cmc
ror
lea
jnp
pusha
pushl
pushf
not
call
call
jmp
js
mov
pop
aad
sti
gs
ret
push
xlat
popa
in
xchg
cmp
xchg
in
sbb
jno,pn
dec
fwait
cmpsl
mov
ja
xor
aam
ljmp
sub
cmp
enter
insl
adc
cmp
jno
or
stos
mov
ljmp
adc
push
inc
addl
popf
cmp
jl
fwait
sbb
leave
cmp
lret
scas
test
or
inc
cmc
add
dec
out
pop
lock
pop
pop
scas
push
cld
sahf
dec
in
lcall
testl
movzbl
jmp
jns
clc
cmp
push
jmp
shll
sub
mov
pop
out
ljmp
movsb
dec
cmc
adc
xchg
mov
in
and
pop
jns
xor
push
sub
test
lahf
faddp
mov
sub
aad
mov
dec
shlb
daa
xchg
mov
js
mov
ret
mov
leave
mov
add
pop
stos
push
std
pushf
inc
repz
inc
call
xchg
fldenv
iret
loope
push
enter
int
loop
out
xchg
cmp
nop
fisubs
add
sarl
mov
shll
testb
dec
cltd
das
sub
cld
aas
inc
jmp
int
cltd
mov
bound
pop
lods
out
aaa
fnsave
pop
test
cmp
lret
pusha
int
inc
movsl
test
jno
cwtl
fistpl
test
pop
rcrl
push
mov
sbb
xlat
jae
imul
fisttpll
inc
sub
push
test
lea
jb
pushf
pusha
lea
je
pushf
jmp
mov
iret
lret
push
or
adc
sub
dec
iret
jns
popa
add
out
in
bsf
jmp
fstp
cmp
cltd
pop
jne
outsb
mov
pop
and
xor
je
mov
stos
lcall
mov
cli
lret
mov
enter
adc
ja
iret
shr
insb
mov
cltd
jbe
push
nop
rcrl
jge
cwtl
ds
xchg
shrl
cld
ret
stos
push
mov
xchg
cmp
test
outsl
adc
or
insb
sub
bound
jne
mov
xchg
push
pushf
and
push
ss
negb
pop
cmpsl
push
mov
gs
es
push
pop
les
std
xchg
jg
mov
fisubs
rclb
dec
aad
lea
outsb
mov
pushf
inc
add
xchg
fadds
imul
rcll
cs
cs
stos
add
loope
movsl
dec
repz
inc
repnz
xor
je
ret
outsb
or
mov
sarb
mov
lods
xor
jle
addl
adc
pop
add
in
pop
out
stc
push
push
clc
pusha
loop
bound
sarb
push
cld
adc
test
leave
mov
jecxz
ss
inc
hlt
adc
or
mov
sbb
ja
lock
adc
es
into
fsubs
jno
out
dec
repz
pop
filds
mov
ss
insb
scas
xor
fs
pop
xchg
xchg
stc
jg
int
adc
arpl
testl
imul
and
je
pushf
call
pushl
jmp
sub
fs
cmpsl
adc
loop
out
stc
jnp
test
mov
fistl
mov
sbb
mov
push
jo
arpl
push
sbb
cs
xchg
inc
mov
xor
push
sti
lahf
loopne,pt
xor
test
xchg
add
cmp
dec
clc
mov
cld
mov
dec
aad
frstor
insl
adc
sti
mov
mov
pop
cld
xor
push
add
adc
icebp
and
sbb
push
pop
lret
push
test
in
sub
aas
push
enter
sub
pop
dec
cld
shlb
popf
and
inc
iret
xchg
push
bound
lcall
inc
inc
out
pop
xor
xor
popf
and
insb
ficoml
adc
sarl
repnz
jmp
xor
inc
out
xchg
aaa
in
xor
data16
push
sub
push
popf
mov
fs
sbb
out
je
addb
push
cltd
cmp
cmp
ret
inc
ret
xor
out
test
mov
js
mov
adc
push
test
fidivrl
mov
xor
mov
push
outsl
and
and
jbe
add
add
dec
out
xorb
jnp
jg
rcll
and
jae
leave
dec
sbb
mov
push
and
bound
enter
mov
jbe
out
in
stc
inc
leave
lret
outsb
fucomi
dec
pushf
call
sub
jns
shlb
popa
adc
push
add
add
gs
insb
inc
js
arpl
gs
add
cmp
push
hlt
push
test
or
mov
dec
into
push
jo
cmpsl
push
jno
pop
leave
imul
jbe
clc
fcompl
mov
dec
sbb
push
or
sbbl
mov
mov
cmp
cmc
mov
lahf
dec
clc
pop
pop
je
stos
sbb
aam
or
es
xor
aaa
ret
out
leave
addr16
xor
jne
imul
adc
adc
stos
movl
pushf
pushf
pusha
mov
lea
jmp
cmp
mov
movl
lea
jae
or
rol
mov
setbe
rol
btc
mov
or
mov
pusha
pusha
movb
xor
clc
mov
call
clc
jmp
pushf
pusha
pushf
mov
xchg
mov
dec
test
shl
pushf
setae
not
pushf
lods
cmp
xor
push
push
cmc
rol
jmp
call
push
movl
jmp
mov
sbb
jle
stc
out
jl
jle
mov
mov
popa
push
pop
lcall
jno
test
je
push
jmp
push
fldl
mov
and
fcmovne
cltd
hlt
daa
inc
pop
pop
mov
pop
hlt
push
jne
test
mov
xchg
mov
loopne
xor
jns
sbb
cmpsl
inc
imul
or
cltd
lods
push
add
cmc
mov
cmp
jecxz
rclb
int
mov
outsl
adc
stc
cmpsb
dec
out
adc
adc
clc
movb
pushl
lea
jmp
sbb
stos
sub
xchg
mov
dec
dec
int3
push
ficompl
outsl
stc
js
mov
jp
movsl
add
test
scas
or
jge
movsb
rcr
add
jp
cmp
push
mov
inc
cmp
and
xchg
repz
popf
enter
jecxz
dec
mov
in
nop
std
xchg
psubusb
out
mov
add
jb
sahf
stos
dec
mov
movups
filds
lds
ret
adc
rorb
lcall
mov
data16
addl
pop
test
push
sub
aas
sbb
cmp
data16
and
sub
push
push
sbb
xor
add
shrl
push
fcmovu
addb
out
test
sbb
les
pop
lret
les
xchg
addr16
dec
add
push
mov
nop
cmc
and
xchg
fidivs
aas
xor
icebp
ja
sbb
daa
cmc
xor
jo
rclb
cmp
pop
in
fistl
mov
cmp
dec
out
push
pop
add
push
lock
aaa
loop
aaa
in
sub
adc
adc
jmp
add
test
fwait
sbb
fsubl
cmpsb
outsb
mov
shll
arpl
fdivl
into
lahf
inc
xchg
fnstcw
cmp
xor
shlb
mov
in
push
leave
lret
add
push
in
sbb
test
rolb
orl
mov
inc
call
push
adc
pop
ljmp
imul
cwtl
mov
into
jns
and
aam
xchg
cmpsl
or
jne
mov
dec
push
inc
dec
rclb
cld
fsts
imul
dec
xor
cld
sub
mov
cmpl
dec
adc
or
stc
mov
cmp
jp
aaa
dec
and
jbe
sarb
imul
mull
outsl
imul
dec
stos
shlb
es
sti
add
xchg
mov
cmp
je
push
add
fs
mov
xchg
cmp
mov
mov
sbbl
jnp
pop
pusha
in
add
add
inc
gs
push
movsl
call
push
mov
xlat
fildl
shr
mov
pop
or
stc
adc
add
pop
mov
jae
inc
repnz
push
imul
cmp
out
xchg
imul
popa
ds
push
xchg
int3
repz
vpshad
clc
hlt
adc
cmp
scas
cmpsb
les
lea
fstps
mov
mov
cmp
and
out
stc
in
cmpsl
inc
out
stc
inc
stos
mov
lods
shrb
js
into
lret
and
scas
pop
pop
fnstcw
sub
loopne
mov
mov
stos
cmpsb
dec
shld
or
scas
jle
flds
sti
fwait
mov
repz
mov
push
mov
xchg
xor
and
fisttps
rorl
push
sbb
pop
mov
push
sti
std
popf
or
mov
pop
adc
push
lds
sub
mov
and
into
jne
ds
mov
fstpt
sbb
pop
mov
test
testl
mov
arpl
mov
shrl
xor
les
iret
cs
nop
pop
push
aam
add
dec
add
push
jbe
and
arpl
fistps
mov
loope
jmp
or
gs
les
mov
ss
adc
iret
jbe
fidivrs
stc
outsb
cmpsl
pop
push
hlt
negb
das
ja
rol
pop
dec
mov
movsb
push
adc
in
ss
rcrl
and
aad
sub
sbb
jmp
mov
dec
jl
dec
dec
stc
scas
fs
mov
sub
cmp
lea
mov
dec
jge
push
dec
in
pop
mulb
add
test
sub
cmp
in
pop
loopne
int3
jp
jge
leave
adc
mov
or
test
lcall
jge
pop
int
ret
test
adcb
test
cli
rorb
dec
out
lock
add
mov
and
pop
loope
sbb
inc
or
sub
add
incb
cwtl
ss
mov
outsl
cmp
jb
pop
push
pop
std
jg
es
pop
mov
sbb
test
xchg
inc
pop
mov
fucomp
sbb
adc
cmp
jns
dec
fisubs
leave
outsl
fsubrl
and
cmpb
shll
andb
pop
cld
aas
in
loop
lods
pop
dec
lahf
out
dec
cmp
jle
stos
in
insl
or
int
cmp
xchg
or
mov
fcmove
jne
fwait
push
movsl
dec
mull
in
iret
cmp
scas
sbb
imul
pop
push
dec
push
xchg
and
jbe
add
push
cld
subb
fdivr
int
sbb
lds
jge
jg
jmp
ficompl
cld
pushf
shrl
mov
xlat
sub
mov
jnp
adc
cmpsb
jmp
mov
stos
idivl
ljmp
push
pushf
dec
lock
sbb
cmp
fnsave
sbb
negb
es
jp
push
mov
adc
push
hlt
shll
insb
or
cmp
and
xor
cs
or
dec
testb
sahf
and
in
cmp
mov
xor
outsb
or
mov
mov
push
xor
mov
push
fcoms
mov
inc
rclb
ss
lcall
push
or
jbe
stos
xor
add
int3
adc
sbb
xchg
out
lret
xchg
ja
lahf
scas
dec
add
push
xor
popa
add
idivl
ret
xor
inc
dec
call
es
cmp
pop
jecxz
sub
mov
lcall
pop
movsb
test
mov
es
icebp
sarl
je
and
lds
push
je
cmp
ja
mov
ret
mov
ret
pop
cltd
popf
inc
mov
repz
subb
jl
ficoms
frstor
into
shlb
test
imul
sub
dec
mov
js
push
mov
adc
dec
daa
aaa
aad
pop
add
lods
jo
jg
shll
int
xchg
lods
xchg
fnstcw
sbb
daa
push
fisubl
mov
push
les
sbbl
cmp
data16
into
je
push
inc
dec
mov
flds
adc
sub
xchg
and
stos
dec
scas
into
leave
lcall
mov
mov
add
and
push
push
xchg
imul
mov
sbb
jge
pusha
lods
jbe,pn
mov
rorl
dec
lret
in
mov
cmp
rcrl
and
aas
inc
ss
pop
cmpsb
dec
hlt
popa
sbb
sbb
inc
xor
mov
mov
or
insb
stos
dec
nop
ds
icebp
sar
inc
xchg
push
sbb
cs
pop
mov
mov
mov
ds
xchg
lret
cmp
dec
pop
cmpb
jns
mov
repz
xchg
pop
mov
sbb
or
int3
cmp
cmpsl
repz
mov
bnd
mov
add
pusha
or
lds
mov
out
out
fucomi
adc
mov
sti
arpl
push
and
clc
xchg
ror
cmp
cs
jmpw
xor
fdivrs
inc
in
add
cmp
lods
dec
push
lea
out
std
mov
mov
aad
lret
cmp
dec
cmc
xchg
stos
jl
lods
data16
mov
das
pushf
les
adc
mulb
lcall
mov
mulb
xor
pop
push
iret
outsb
subb
mov
xchg
into
mov
cmpb
and
jl
and
inc
enter
sbb
mov
push
faddl
adc
push
idiv
cmpsb
xchg
and
inc
dec
not
mov
lods
insl
mov
mov
icebp
pop
jl
or
into
mov
dec
mull
xchg
js
dec
xchg
xor
test
or
repz
mov
push
loope
inc
pop
add
add
push
pop
or
mov
adc
pop
dec
shlb
xchg
call
outsb
sbb
leave
push
pop
cmpsl
stc
jnp
push
sbbl
jl
nop
and
adc
xor
and
shrb
jmp
cmp
xchg
scas
mov
mov
pusha
loopne
jno
sarb
aad
loop
pop
adc
xor
ja
cmc
mov
sbb
jge
and
sbb
in
out
and
push
xchg
sbb
bound
rcrl
mov
hlt
movsb
out
pop
cmpsl
adc
popf
xchg
jmp
jle
xlat
sbb
in
fwait
or
mov
in
lods
sub
imul
loop
mov
mov
rorb
or
add
xchg
push
aad
repz
pushl
lea
push
inc
mov
outsl
push
rcll
js
lret
pop
pop
or
das
ja
mov
je
pop
add
arpl
xlat
mov
fildl
mov
mov
xor
mov
std
popf
cmp
data16
jo
xlat
push
rcrb
mov
rcr
ficomps
sub
mull
or
and
arpl
jmp
inc
lock
les
xchg
xor
dec
inc
nop
fcompl
dec
xor
pop
roll
movsl
dec
pop
sbb
add
les
sbb
add
repnz
dec
imul
add
pop
adc
rcrl
into
insl
fisttpl
movsl
addr16
cld
or
cltd
pop
in
xor
aaa
jp
lcall
aad
xchg
mov
fiadds
and
push
idiv
cwtl
pop
lret
mov
test
data16
push
lea
inc
adc
sub
jne
adc
mov
les
std
jno
mov
inc
xlat
add
pusha
cmpsb
inc
pop
test
mov
xor
mov
out
jmp
sub
nop
push
jl
and
xor
push
push
mov
dec
in
xchg
loop
ljmp
adc
int3
ljmp
pop
adc
push
fstps
movsl
mov
adc
xlat
jne
sti
lcall
lods
xor
jg
enter
jecxz
dec
nop
lea
ljmp
xor
and
out
xor
mov
xchg
add
fisubl
scas
sbb
push
out
cli
mov
pushf
inc
scas
test
fwait
or
icebp
jg
int3
cmp
nop
cmp
adc
loop
mov
pop
jg
mov
ret
add
es
fiaddl
inc
inc
jecxz
insl
sbbl
mov
ret
mov
addr16
mov
jg
and
mov
jbe
inc
mov
mov
imul
and
js
push
xor
inc
int3
addl
shrl
out
xor
sub
xor
cs
bound
mov
fisttps
lcall
adc
and
gs
movsl
loope
cmp
fsubrs
into
dec
mov
pop
mov
ret
push
lcall
ds
cmp
xchg
test
repz
ja
out
pusha
out
xor
ss
imul
inc
loopne
mov
data16
int
lahf
fcomps
mov
movsb
mov
mov
idivl
bound
push
flds
add
lret
imul
mov
jbe
out
jbe
enter
xor
adc
es
pushf
mov
test
pushf
fistps
mov
xchg
dec
fiaddl
loop
fsub
mov
and
es
insl
fisubrl
jmp
sahf
inc
jle
mov
lea
push
cltd
sbb
cmp
sbb
xor
loope
inc
pop
cvtdq2ps
and
rclb
adc
test
dec
call
decb
enter
pop
xor
lock
out
xchg
aas
inc
imulb
mov
lret
loop
das
mov
shlb
push
sbb
popf
jne
jecxz
xor
scas
adc
mov
divl
xor
test
push
movsl
adc
sbb
fisubs
test
std
ljmp
or
int
push
push
pop
fcmovu
jge
push
insb
ds
repz
stos
push
adc
movsl
adc
pop
mov
cmc
mov
adc
mov
xor
stos
sub
addr16
push
gs
enter
lea
lcall
int
pop
mov
adc
enter
call
les
pop
sahf
loope
pop
mov
or
mov
jno
out
icebp
mov
lds
fisubrs
mov
testl
pushf
inc
jne
out
insl
or
mov
lret
adc
in
pop
test
leave
cmp
fadds
stos
cld
sub
aas
in
out
jg
call
adc
mov
cmp
xchg
inc
jno
cmp
in
negl
leave
imul
mov
sub
addr16
mov
add
cs
clc
ss
push
std
test
fcomps
lods
push
xor
push
add
fsub
mov
fisttps
jno
mov
cmp
jae
mov
aad
xchg
out
add
add
in
repnz
icebp
cmpsl
fiaddl
adc
in
in
xor
pushf
mov
push
xlat
jge
shrb
out
add
mov
ja
test
hlt
lret
push
mov
dec
jmp
clc
or
cmp
jbe
pop
insl
sbb
xor
mov
repz
cmc
add
add
cmp
outsl
sbb
pop
or
out
cmp
rolb
push
push
bswap
out
or
pop
stos
push
cmc
dec
adc
aam
xlat
ja
out
push
pop
cmp
sub
mov
push
sbb
stc
lahf
pop
jmp
movsl
push
in
call
xor
scas
icebp
ja
enter
sarl
andb
xlat
inc
cmpsb
pusha
incb
aad
lret
gs
fdiv
fistpl
push
shll
arpl
and
mov
add
aas
or
subl
stos
sub
iret
notl
mov
addb
aas
fistpll
xchg
push
cltd
and
leave
push
int3
sarb
ficoml
mov
adc
pop
popf
dec
dec
sti
and
loope
pop
or
arpl
fiaddl
and
in
icebp
mov
cltd
outsl
fcomps
inc
cmp
mov
cld
jge
sub
stos
data16
mov
clc
inc
mov
mov
fs
pop
dec
rcrb
scas
mov
outsb
pop
push
shlb
sub
test
push
ss
mov
dec
fisttpll
in
lds
xchg
repz
loope
movsb
lock
and
ss
fsubl
ljmp
ret
sarl
and
in
xchg
insl
inc
jl
add
pusha
cmp
xlat
flds
push
or
frstor
mov
sar
mov
dec
cmc
lret
rolb
fnstsw
and
cmp
push
jnp
iret
cmp
lods
notb
incl
das
aad
dec
mov
stos
dec
mov
in
jmp
mov
pop
or
mov
ss
repz
rorl
and
mov
stc
std
inc
insb
sbb
jno
cmpsl
test
in
mov
ret
arpl
popf
xor
pop
pop
push
fisttps
push
pusha
loop
xchg
mov
movb
popa
lods
outsb
stos
xor
loope
pop
mov
test
cli
add
stos
mov
pop
or
jb
pushf
mov
or
jno
test
cmp
cmpb
fadds
mov
dec
jae
mov
or
fs
jg
xchg
or
in
repz
test
push
hlt
ret
fdivrs
sti
add
pop
lock
dec
jle
sub
add
loope
sbb
pusha
mov
jl
in
jp
loopne
cmpsb
xor
mov
push
jmp
addb
scas
gs
lods
cli
mov
push
aas
or
incb
ljmp
jmp
clc
sbbl
lods
imul
xor
sbb
mov
enter
mov
mov
jmp
mov
push
icebp
add
adc
or
fnstenv
inc
lds
xchg
push
adc
sbb
sbbb
sbb
xchg
nop
loop
jge
test
jmp
and
cmp
lock
push
lcall
and
adc
call
loope
push
movsb
orl
sub
mov
cmp
adc
lods
lahf
loop
in
xor
cmp
imul
or
fistpll
call
mov
imul
out
popa
mov
dec
mull
gs
push
jo
popa
or
out
jo
mov
jno
xor
dec
std
std
mov
pusha
jmp
out
iret
cmp
aaa
jp
test
mov
mov
stos
lods
push
hlt
and
xor
adc
and
ja
sub
sub
cmp
lret
ficompl
repz
lods
lcall
jmp
test
jne
push
push
sti
in
mov
cmpsb
xor
nop
std
jp
pushf
aad
lods
push
data16
loopne
loop
push
sar
mov
orb
out
sahf
pop
add
test
out
fmull
and
sbb
push
repnz
ljmp
rclb
out
gs
or
cmpsl
jae
jp
add
in
cwtl
insl
lods
mov
dec
inc
jp
dec
pop
mov
insl
cli
popf
mov
addl
mov
add
jp
imul
loop
lods
push
cltd
cmp
std
add
fimull
pop
add
lret
inc
daa
jecxz
test
cwtl
push
sbb
xor
jecxz
test
test
mulb
xlat
add
xchg
test
mov
roll
dec
lret
dec
jmp
pop
aad
xor
leave
sbb
fisubs
stc
mov
fisubs
mov
int
xlat
pop
push
cld
out
mov
lret
jbe
outsb
jmp
jnp
pusha
or
jg
sbb
mov
mov
ja
xchg
aaa
movsb
push
inc
mov
cmpsl
arpl
or
sub
inc
lret
xor
sub
lahf
and
mov
dec
push
xchg
cmp
decb
pushf
call
or
inc
push
adc
sbb
jnp
addl
cmp
sbb
pop
testl
fwait
inc
push
add
push
sahf
and
ffreep
or
mov
ja
xchg
inc
popa
movsb
mov
adc
call
mov
mov
inc
sbb
push
aam
mov
push
loope
jnp
sti
and
sub
xchg
pop
nop
fisubs
mov
iret
mov
fsubr
lods
inc
cmpsl
mov
dec
shlb
js
mov
dec
mov
xchg
mov
out
xlat
orl
or
rorb
xor
pop
lcall
and
and
lock
xor
push
dec
repz
lods
adc
pop
notl
push
ljmp
out
cmp
jmp
mov
pop
push
in
sbb
dec
mulb
xor
cwtl
dec
add
cmp
nop
push
test
jae
adc
loope
je
push
mov
push
sub
xchg
cmp
ja
loopne
lds
xor
xor
cld
int3
popf
rorb
pop
inc
nop
adc
lds
jg
or
sub
fimuls
sub
dec
xchg
adc
sbb
in
shll
repnz
jp
adc
js
vxorps
xchg
push
mov
and
mov
loope
xchg
out
lahf
imul
test
lods
imul
jbe
cmpsb
push
imul
inc
loope
pop
inc
repz
dec
icebp
sti
icebp
popa
mov
in
xchg
xchg
cmp
cmp
sbb
inc
into
in
mov
jmp
xchg
xor
inc
inc
nop
cmp
xchg
fstps
movsl
adc
xor
pop
lahf
inc
pop
incl
mov
push
push
fldenv
sar
cmp
jb
xor
mov
mov
fs
icebp
lahf
aas
outsl
adc
mov
imul
lods
mov
mov
mov
fistpll
mov
out
mov
adc
mov
mov
dec
clc
mov
sahf
cmp
ret
lret
cmc
push
fisubl
mov
aad
inc
cmc
dec
or
push
ds
clc
stos
mov
add
dec
mulb
pop
sbb
pop
mov
mov
mov
movl
dec
adc
fldl
aad
mov
ret
pop
jno,pn
jg
lret
jae
jns
inc
ljmp
mov
sub
xchg
cmp
xchg
sbb
aam
out
lods
sbb
cmpb
jle
inc
iret
jp
and
mov
xlat
call
aaa
xlat
ja
lcall
scas
pop
aaa
dec
andl
jmp
pop
pushf
scas
test
ss
dec
idivl
cmp
stos
push
add
sbb
in
lock
xchg
sbb
pop
in
cs
sbb
pop
lds
mov
repnz
mov
or
sub
xchg
dec
and
test
in
jnp
sub
pop
pushf
dec
lret
inc
xchg
cmpsl
inc
mov
insl
lret
mov
push
and
out
insb
or
mov
iret
stc
cmp
inc
jmp
incb
iret
rcr
cltd
inc
inc
in
pop
test
xchg
xchg
cmp
jge
inc
loopne
pusha
stc
test
mov
mov
dec
dec
hlt
popa
cltd
mov
fildl
xor
xlat
jge
or
fsubrl
sub
lahf
ss
ljmp
leave
dec
inc
test
add
mov
or
push
int
dec
int
add
loopne
les
or
lret
jbe
jno
mov
loopne
movsb
pop
add
mov
dec
jne
mov
pop
pop
add
lods
jb
and
ljmp
sub
cmpl
stos
dec
mov
jmp
es
jbe
pop
sbb
push
test
mov
push
lahf
and
out
sbb
popa
or
sbb
lock
test
mov
xchg
xchg
jns
push
jp
mov
outsl
adc
pop
ja
int
dec
into
mov
fidivrs
xchg
jp
stc
pop
sbb
imul
cmp
cmp
sub
xor
cmp
inc
mov
lods
mov
jnp
pop
loope
mov
pop
cmp
sarb
adcl
sbb
xor
cmp
mov
fwait
aad
pop
push
shrb
mov
cmp
or
xchg
and
out
cmp
mov
or
push
sti
pushf
inc
adc
sub
repz
call
call
fdivrl
xor
mov
push
xchg
sbb
dec
ficompl
mov
dec
cli
sbb
mov
sti
out
sub
sub
arpl
in
loop
aam
imul
pop
es
sub
mov
or
xchg
adc
sub
xchg
adc
cltd
daa
aam
add
lds
pop
jmp
mov
cwtl
cmp
sbb
dec
lret
push
xchg
cmp
lods
mov
sub
sbb
adc
mov
pop
lret
ljmp
inc
dec
out
pop
mov
std
mov
int
cmp
jg
mov
sub
stos
or
ja
mov
pop
out
jae
aas
out
shlb
imul
mov
mov
in
nop
cmp
subb
imull
fcomps
and
mov
loope
nop
mov
jo
jbe
test
addb
adc
aad
inc
enter
sub
fdivrs
sbb
xor
ficomps
fldl2e
pop
jns
mov
inc
ficomps
out
pop
mov
mov
clc
mov
cmp
pop
hlt
cmpsl
mov
fucom
mov
adc
dec
fdivrs
add
outsl
mov
int3
movsl
call
mov
cmp
ret
push
mov
dec
ljmp
sbb
aam
shlb
xchg
lret
adcb
sbb
add
adc
sub
mov
inc
add
es
fwait
sbb
mov
subl
int
cmpsl
lods
hlt
fwait
icebp
lods
push
jo
gs
sbb
out
mov
push
jae
lcall
xchg
cmp
iret
ja
fiaddl
inc
xchg
push
xchg
ds
jge
loope
frstor
daa
cmp
fucomp
add
outsl
mov
js
lret
inc
in
or
add
mov
push
into
jne
sbb
sub
js
int
sbb
xor
bnd
and
dec
call
psllw
lahf
or
arpl
adc
xor
push
mov
add
push
negl
lds
mov
insl
aam
mov
pop
pop
sbb
xorl
aam
jne
sti
mov
cmp
xorb
inc
std
add
pop
push
jl
ret
mov
cltd
pushf
or
jb
call
out
pop
mov
inc
xor
outsl
and
ja
outsb
pop
movsb
das
xor
lret
and
inc
lds
mov
stc
pushf
inc
in
xchg
cmp
imull
jmp
ja
mov
gs
gs
adc
xor
dec
aam
sarl
inc
out
psrad
data16
rolb
popa
sbb
pop
jo
imul
out
and
mov
or
add
adc
das
pop
inc
test
jp
ljmp
rcrl
outsb
xor
mov
add
and
sub
pop
loop
add
mov
mov
imul
imul
or
pop
addr16
insb
push
gs
push
repnz
cmp
adc
das
stos
xchg
xlat
movb
pusha
lea
jae
pushf
not
dec
mov
seta
setge
pushf
jmp
xor
mov
cmc
shll
into
dec
jnp
mov
lcall
stos
push
cmp
std
inc
loope
out
push
aaa
repz
cmp
lock
imulb
ljmp
lahf
testb
mov
or
dec
dec
jmp
icebp
push
dec
add
decb
imul
xor
arpl
scas
pop
sti
popf
inc
out
xchg
cmp
xchg
xor
adc
xor
popf
and
fwait
xor
out
stos
cmp
in
cli
pushf
aas
pop
or
aam
and
in
mov
jae
fnstcw
mov
mov
or
popf
lret
addr16
shll
push
repz
divl
stos
xchg
xlat
lea
call
jl
push
lea
jae
setne
mov
call
push
cmp
jmp
sbb
sbb
mov
sub
cmp
jmp
sub
and
outsl
mov
xlat
scas
jnp
fdivrs
scas
iret
sahf
sub
mov
dec
out
out
iret
sbb
lret
les
insb
push
jl
add
adc
jne
mov
xlat
fs
push
push
xchg
xor
jne
lret
enter
divl
fcmovnb
test
enter
inc
and
call
pop
fs
dec
lea
mov
inc
rcll
push
fiadds
mov
lea
mov
call
out
arpl
or
sbb
mov
xchg
fists
mov
sbb
pusha
or
sti
ds
xchg
jns
push
sbb
das
leave
cmp
or
push
mull
repnz
adc
xor
or
int3
push
loop
sarl
inc
mov
repz
jbe
adc
or
aad
mov
sbb
mov
pop
add
push
sbb
and
or
push
or
xor
jle
mov
sub
pop
cmp
cld
sbb
lahf
clc
jno
ret
loopne
pop
icebp
in
cli
sbb
fcomp
add
aam
and
imul
ds
out
je
and
icebp
popa
mov
in
sub
push
stos
adc
xor
fwait
stc
ror
cmc
xor
cmc
cmc
clc
call
add
test
cmp
pusha
pushl
call
lea
jae
pusha
call
fcmovu
insl
stc
movsb
adc
addr16
push
xchg
pop
movsb
sub
rcrb
arpl
mov
test
mov
sub
in
ret
stos
pop
js
hlt
jne
imul
aam
adc
aad
add
pop
enter
dec
sarl
ret
push
mov
icebp
xchg
xor
divl
hlt
fisubs
pushl
bt
pushf
test
cmp
mov
lea
ja
test
sub
push
pushf
movb
movb
lea
jmp
pushf
movl
pushf
mov
pushf
pushf
pushf
movb
pushl
ret
cmc
call
sub
mov
loope
xor
sub
sub
pop
fstps
gs
loop
scas
jle
lods
push
in
rorb
jnp
daa
loop
mov
dec
insb
pop
xlat
aam
pop
in
sub
mov
ret
xchg
cmp
xchg
xor
jne
ret
insl
sbb
xor
sbb
repz
int
or
cmp
inc
int
lret
jo
jno
enter
incl
jno
in
jecxz
xchg
jno
push
enter
lods
addl
mov
dec
cld
pusha
mov
in
call
je
pop
mov
and
lods
pop
popf
mov
push
fidivrs
xchg
dec
mov
inc
iret
jns
xchg
daa
outsl
pop
popa
xchg
push
mul
lret
mov
test
cltd
fwait
cmp
or
jg
mov
clc
lahf
inc
repnz
fadds
das
jb
mov
sete
mov
call
call
stos
mov
ret
outsl
fnsave
arpl
mov
fs
mov
mov
adc
inc
loop
outsl
sbb
push
arpl
std
jmp
addr16
and
xor
ljmp
adcl
leave
imul
push
negb
adc
xor
xchg
flds
mov
lods
mov
pusha
in
jb
test
cmc
shlb
idivl
cmp
cmc
lahf
aaa
push
or
ret
inc
sar
sbb
test
scas
dec
inc
cmp
loopne
push
ljmp
xor
sbb
jo
sqrtps
sbb
adcb
xchg
push
jecxz
cmp
mov
lret
jmp
pop
lds
push
scas
dec
mull
fiaddl
das
jb
adc
addb
add
xorb
add
sub
add
add
lret
jg
add
add
add
and
add
daa
add
add
add
add
add
daa
add
add
add
jg
add
add
add
add
addb
add
out
push
daa
add
add
add
add
add
add
cmpsb
cmp
add
add
add
sub
add
add
jae
sub
add
add
ret
add
add
add
add
add
arpl
add
inc
daa
add
test
add
inc
sub
add
add
sub
cmp
bt
test
neg
cmc
cmp
jmp
cmc
pusha
pushf
add
pushf
mov
movb
pushl
test
call
addb
dec
call
adc
mov
mov
cmp
mov
cmp
aaa
jp
stos
jg
cmpsl
adc
repz
cltd
std
mov
or
adc
inc
inc
rcrl
pushf
mov
in
repz
dec
sti
push
push
lods
sbb
jns
fwait
incl
loopne
movsb
cmpsb
cltd
and
addr16
inc
gs
pusha
push
insl
push
mov
xor
add
js
jb
lret
xchg
add
andl
xchg
mov
add
push
adc
jecxz
fisubrs
cmp
in
lea
inc
or
add
mov
ret
jg
xchg
pusha
pusha
pop
stc
xor
sbb
pusha
add
cmpl
lods
push
cld
movsb
inc
out
mov
insb
jae
mov
adc
xchg
sub
popa
push
adc
imul
pop
ljmp
pop
push
stc
jle
call
adc
mov
mov
lret
test
dec
icebp
aas
xchg
sub
jno
aas
mov
in
xchg
pop
pop
cmp
xlat
mov
jo
adc
xadd
fiaddl
or
xor
xchg
inc
repnz
inc
test
adc
sub
iret
cmp
add
adc
pop
mov
pop
mov
adc
xor
mov
mov
mov
lock
xlat
sbb
fdivl
pop
sbb
cmc
mov
sti
dec
cmc
fwait
inc
in
scas
mov
pusha
fcomi
lods
cmp
xchg
stc
fmuls
loopne
test
adc
push
lahf
inc
loop
divl
cli
in
mov
inc
push
fistps
pop
fisubs
jne
mov
mov
test
push
or
inc
mov
mov
fstpl
addr16
dec
mov
pushf
sbb
pop
mov
pop
jb
outsb
rol
inc
lods
loope
adc
scas
sbb
mov
aaa
sub
push
push
cltd
inc
mov
dec
mov
mov
les
notl
cmpsb
out
xchg
aam
xlat
shll
scas
cmp
out
call
cltd
mov
inc
out
pop
hlt
inc
rorl
mov
stos
pop
inc
out
dec
cwtl
in
idiv
cwtl
sarl
jge
enter
imul
push
cld
test
cmp
push
shlb
mov
movsb
out
out
jno
addl
adc
jge
dec
loop
out
fcompl
cmpsl
push
in
mov
pushf
xlat
pop
out
push
sbb
sbb
lahf
mov
mov
push
insb
sbb
mov
in
idivl
adc
cmp
lret
pop
mov
cmp
dec
fldt
jb
jl
mov
cltd
inc
out
mov
iret
xor
xchg
cmp
dec
mov
and
adc
cmp
ds
test
and
xor
lret
addw
mov
cmp
hlt
popa
imul
mov
mov
sub
clc
jnp
lds
pop
add
jno
test
sbb
sti
std
test
mov
pop
mov
add
mov
adc
cmp
fxch
adc
gs
jle
movsb
sub
dec
rcll
imul
lahf
dec
cmp
scas
in
mov
jmp
loop,pt
test
jbe
pop
loope
push
cltd
fidivrl
pop
imul
mov
or
loope
sub
adc
cmp
ljmp
or
xor
lret
pop
fildll
divl
ret
sbb
test
dec
sarb
loopne
in
xor
bnd
sbb
scas
gs
aad
adc
mov
test
and
call
fs
jo
mov
fidivrs
insl
or
int3
mov
jne
jnp
xchg
pop
mov
fdivrl
outsb
adc
bound
mov
idivl
jns
cmpsb
mov
movzbw
mov
mov
mov
pushf
pushf
pushl
ret
and
scas
sbb
popa
pop
mov
incl
das
mov
test
shll
cs
mov
subb
mov
pop
mov
rcll
mov
sub
cs
mov
adc
add
add
icebp
das
mov
jg
mov
sti
sub
mov
pop
jge
or
mov
shlb
int3
lcall
movsl
sbb
pop
es
stos
sbb
popa
pop
mov
push
inc
in
fwait
cs
mov
nop
outsb
loop
jge
pop
mov
addr16
mov
push
mov
sub
jg
pop
mov
ret
scas
sbb
mov
mov
sub
mov
dec
and
fbstp
push
mov
int3
xchg
lahf
xchg
add
mov
call
mov
stos
mov
test
fldt
pop
mov
mov
sbb
pop
sub
mov
xchg
nop
int3
inc
pop
inc
pop
mov
xorb
repz
add
cmp
push
lods
sub
aaa
push
mov
sarb
pop
mov
adc
adc
scas
mov
inc
and
mov
mov
shrl
loop
push
mov
sbb
pop
mov
or
int3
sahf
ret
cs
mov
xchg
pop
loop
xor
movsb
test
sub
sub
mov
les
shll
mov
sub
cmp
xor
cmpsb
sbb
out
dec
cs
mov
cmp
cli
mov
mov
xor
popa
pop
mov
stos
cli
mov
icebp
scas
mov
lds
sub
icebp
scas
mov
popw
loop
jecxz
pop
mov
xchg
mov
lcall
test
aaa
cmp
mov
insl
lock
loopne
mov
stos
insl
jle
xor
mov
push
xchg
into
and
cmpsl
movsb
sub
stos
sub
sub
xchg
call
push
mov
outsl
cmc
into
pop
mov
scas
cwtl
jge
xchg
mov
pop
mov
and
mov
dec
ljmp
arpl
or
mov
mov
xchg
jl
call
xchg
test
fistps
or
aad
mov
dec
insb
jnp
inc
iret
insb
movsl
dec
popa
and
decl
xchg
les
lcall
add
and
add
movl
and
push
mov
pushf
pushl
pushl
ret
sub
mov
ljmp
loope
icebp
jno
test
xchg
aaa
in
stos
enter
or
dec
lock
data16
int
adc
mov
inc
test
ret
inc
xchg
lcall
stos
ss
jne
in
xchg
mov
ret
mov
lret
and
adc
shlb
ret
bound
pop
add
dec
icebp
cwtl
inc
adc
ds
lahf
sub
nop
cli
lock
orb
xor
dec
or
cmp
lods
xor
jmp
push
ret
adc
sahf
inc
push
mov
loop
lcall
inc
cmp
mov
daa
mov
into
sarb
notl
into
es
cli
inc
ljmp
push
arpl
and
xor
icebp
stos
in
xor
addr16
mov
sarl
arpl
int3
jns
adc
out
xchg
add
and
out
dec
dec
mov
push
and
sahf
shll
out
jno
mov
adc
call
adc
ds
xor
mov
jmp
gs
js
cmp
out
jmp
popf
inc
subb
fldenv
movsb
out
adc
pop
adc
pop
in
jge
xchg
sti
mov
int
pop
sbb
pop
imull
xchg
jmp
sub
clc
fsubs
loop
stos
in
mov
or
mov
pusha
or
shrb
aam
jecxz
mov
push
jnp
or
pop
or
ljmp
adc
aas
out
lea
xchg
rorb
and
bt
pushf
pushf
movb
ror
pusha
call
lea
je
push
pushf
push
pusha
lea
jmp
jmp
mov
call
inc
lret
lock
jle
test
mov
push
popa
loop
sub
insb
sbb
dec
repnz
cmp
mov
shl
xchg
jno
out
sbb
scas
mov
bnd
lods
pop
add
adc
aas
addr16
or
shr
sti
add
push
xor
dec
call
xchg
lods
sub
mov
lret
push
loopne
sbb
push
cld
push
pop
sub
mov
xchg
js
lahf
inc
fwait
scas
sub
loope
and
mov
fmuls
xor
inc
lea
add
xchg
cmp
sub
xor
stc
pop
in
arpl
mov
xchg
and
mov
adc
ja
aaa
cmpsb
or
dec
fisttpl
jmp
clc
subl
push
add
cmp
xor
push
ret
test
adc
mov
xor
fs
not
lea
push
sub
bt
jmp
std
pusha
add
mov
loopne
sbb
ja
inc
add
fbstp
inc
loope
lahf
add
inc
mov
ja
and
pusha
add
andb
add
and
ja
sbbb
sbb
jae
mov
dec
pop
adc
ret
inc
into
pop
loope
jmp
lock
xor
repz
rcrl
add
aad
imul
sti
sbb
fwait
inc
push
stc
addr16
sbb
dec
lret
sbb
or
lret
mov
test
cltd
into
xchg
movsb
lock
rcrb
xchg
mov
pushf
inc
fs
dec
mov
fdiv
call
ljmp
or
add
test
adc
xchg
cmp
or
movsl
fs
pushf
pusha
imul
dec
mov
lret
stos
lods
adc
fwait
adc
ljmp
icebp
pop
adc
insl
cmpsb
xchg
mov
add
popa
lcall
clc
xchg
mov
sbb
fiadds
out
ret
data16
je
mov
add
dec
shll
loop
mov
push
mov
push
mov
lret
jb
xor
loopne
jle
dec
dec
orl
cmp
xorl
andb
mov
negb
addr16
jmp
adc
mov
loop
sub
jp
enter
inc
xor
pop
add
jne
fistpl
cmpsl
xor
mov
sbb
mov
ja
pop
or
scas
imul
subl
mov
andl
mov
sarb
mov
add
pop
xchg
scas
cmp
dec
sarb
insb
movzwl
mov
add
lods
outsb
jp
xorb
mov
jo
in
cwtl
aaa
fcoml
testl
imul
insb
insb
add
xor
xor
fs
insb
add
clc
jge
stos
pop
test
jno
pop
mov
inc
int
aam
frstor
stos
lret
push
int
jecxz
bound
arpl
lock
add
adc
pop
add
mov
push
mov
xlat
jl
loop
adc
or
test
xchg
in
jno
loop
sarl
insb
xchg
loop
jnp
mov
mov
cs
adc
mulb
inc
mov
popa
xor
cwtl
push
mov
ljmp
pop
fldt
jns
xchg
ss
movsl
adc
mov
inc
xchg
sbb
loop
sbb
xchg
sbb
dec
rolb
mov
xor
mov
call
sahf
inc
in
xor
jle
enter
adc
inc
mov
cmp
movzwl
lea
bsf
rcr
shr
mov
mov
cmp
add
movb
cmp
mov
test
test
cmp
pusha
test
movb
lea
je
call
jmp
gs
xchg
xor
push
mov
adc
push
stos
sub
jmp
loop
loopne
pop
mov
mov
and
jmp
ret
cli
fldenv
push
pop
push
fdivl
test
filds
shll
inc
sub
mov
movb
lea
ja
bt
stc
sub
pusha
pushf
pushl
mov
lea
jmp
lea
jb
call
xor
mov
mov
mov
ret
call
mov
mov
cld
mov
scas
icebp
jp
lea
and
cltd
mov
insl
arpl
pop
movsl
lds
push
int3
in
aam
pushf
inc
jno
xor
push
aad
shlb
sbb
insb
adc
pop
cld
adc
inc
mov
scas
jmp
jno
idivl
xor
cmp
push
mov
xor
mov
pop
bnd
ljmp
js
imul
lret
cmp
lahf
lods
dec
mov
test
out
xchg
aaa
jecxz
sub
jne
shlb
inc
adc
pop
cwtl
not
lea
not
bswap
lea
mov
pushl
call
lea
ja
jmp
pushl
lea
call
call
rol
bt
clc
jmp
inc
and
gs
sahf
or
dec
rclb
pop
in
out
jo
jg
movsb
push
movsb
dec
loop
out
fmulp
or
das
in
rorb
ljmp
imul
lahf
lea
movsl
shlb
mov
out
or
in
cmp
mov
testl
mov
mov
xor
inc
mov
out
outsl
hlt
jge
mov
popf
sbb
xor
cmpsl
loop
inc
mov
fucomp
int3
mov
outsb
jo
lock
dec
out
pop
imul
gs
adc
icebp
jb
stos
dec
and
fwait
cmp
mov
je
mov
adc
movw
lea
call
pusha
pushl
mov
lea
jae
cmc
cmc
xor
push
jmp
push
dec
dec
dec
dec
inc
push
cs
insb
add
out
xor
les
and
daa
mov
mov
push
out
push
loop
sub
sbb
popf
loopne
fildll
adc
mov
insb
sbb
push
loope
aad
push
pushf
test
js
subb
js
int
sbb
out
adc
inc
mov
fisubs
lds
ret
mov
cld
incl
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
int3
xor
stc
jmp
jmp
repz
pop
lds
sbb
mov
dec
notb
add
dec
loopne
mov
mov
inc
loop
add
mov
sub
nop
imull
bound
push
pop
ret
push
addl
lcall
sub
call
hlt
lcall
out
xor
cltd
push
push
neg
fsubs
xor
push
rclb
aad
pop
ret
bnd
int
mov
xchg
pop
sbb
movnti
mov
mov
add
dec
in
fwait
dec
hlt
lahf
fstl
testl
arpl
jmp
mov
push
test
push
and
pusha
pushf
call
and
xor
sub
push
rcll
bnd
subb
mulb
cltd
test
in
mov
sbb
ja
data16
pop
adc
sbb
aas
mov
sbb
and
adc
repz
inc
pop
or
insb
notl
fisttps
setl
mov
dec
push
add
sarl
out
sbb
jp
and
fdivrl
mov
fsubrl
inc
and
xchg
xor
aad
mov
mov
shlb
push
jge
ret
mov
pop
pop
dec
add
in
inc
mov
lods
fwait
pop
cli
cltd
push
mov
arpl
push
loopne
cmp
xorl
mov
adc
add
hlt
xchg
cmp
jl
testl
test
movzwl
xor
mov
bt
test
bt
bt
add
sub
jp
bt
mov
stc
cmp
bt
test
pushf
call
shlb
fst
mov
dec
push
frstor
addr16
divb
movsl
inc
gs
repnz
cmp
ficompl
push
jne
jg
cwtl
cli
outsb
jle
lds
mov
push
inc
test
lret
pop
ja
mov
push
insb
scas
negl
cs
xor
or
inc
cmp
jecxz
mov
mov
xchg
inc
pop
lea
aas
adc
lods
int
or
pop
rorl
ljmp
mov
adc
inc
pop
js
push
push
or
out
sub
enter
lahf
mov
popa
movsb
test
xor
xchg
fldenv
ret
jg
and
push
rcl
sbb
fistpl
hlt
lcall
mov
js
inc
push
and
xor
jne
mov
pop
xchg
fistl
cmp
jo
jmp
dec
cmc
mov
ficoml
repnz
rclb
bsf
scas
in
inc
gs
mov
mov
and
fnstcw
daa
int
addb
pop
jle
ds
hlt
imul
repnz
stc
mov
pop
and
ja
out
scas
aad
adc
daa
push
lret
sysexit
push
dec
nop
xor
mov
adc
sub
das
push
adc
mov
lods
and
stc
out
aaa
jecxz
cltd
dec
std
test
jb
add
daa
sbb
rcrl
pop
mov
dec
xchg
fsts
pushf
inc
out
loop
idivl
sarl
sarl
pop
jge
adc
pop
or
mov
xor
test
dec
lret
shlb
pop
or
pop
add
testl
cmp
pop
mov
popa
ljmp
cwtl
sbb
dec
mov
or
cmp
dec
jecxz
lret
mov
jnp
mov
fisttpll
imul
shl
mov
sub
mov
popf
pop
or
push
mov
jge
mov
mov
insb
jmp
cmp
dec
out
pop
or
mov
cmp
ret
inc
repz
cli
cwtl
inc
jg
xchg
cmp
jmp
out
xchg
push
adc
mov
fdivrp
pop
xlat
sbb
push
xchg
inc
repz
int
inc
sub
mov
fwait
out
add
xorb
icebp
inc
stos
roll
int3
insb
adc
pop
add
bound
lcall
pop
dec
bound
adc
adc
dec
das
sbb
js
test
call
and
out
outsb
mov
mov
mov
ja
out
jae
mov
cmp
sbb
sbb
outsb
push
xchg
xor
inc
insb
pop
sbb
push
dec
js
push
jbe
shrb
add
xor
outsl
sbb
cltd
inc
bound
in
xchg
cmp
test
rcll
testl
dec
leave
jne
jge
cmp
jge
addb
or
repz
repz
ret
fcompl
lcall
cmp
jecxz
xchg
imul
inc
cmp
and
das
fsts
inc
popa
fcomip
sahf
pop
pop
push
jae
add
lds
pop
fwait
jecxz
std
push
xchg
gs
xchg
rcr
fildll
mov
jl
fildl
xchg
mov
lea
fmuls
icebp
fwait
aad
sbb
adc
and
stos
jecxz
pop
fiaddl
les
mov
adc
dec
adc
lock
movzbw
movb
push
lahf
jmp
lea
jb
pusha
cmp
pushf
call
aaa
cmp
dec
ljmp
sbb
xor
lcall
cmc
sub
enter
ds
sbb
call
push
cmpsl
in
jmp
xchg
cmpsl
inc
test
imul
insb
sbb
adc
orl
mov
insl
adc
jmp
sarb
jl
leave
sarb
ds
movsb
push
mov
xchg
adc
dec
pop
inc
xchg
shlb
xlat
xor
mov
pop
loope
call
mov
xchg
sbb
ja
mov
dec
xor
cmp
push
pop
mov
sub
xor
mov
lea
xchg
cmp
jbe
ret
test
in
adc
dec
mov
fst
fstps
test
jb
mov
pushf
and
cmp
imulb
test
inc
push
jno
mov
mov
cmp
inc
in
xor
pop
or
fxch
mov
sub
std
dec
fsubrl
cmp
push
sti
cli
std
cmp
push
stos
push
add
data16
fiaddl
mov
ljmp
insb
pop
lods
insl
das
jo
xchg
ds
cmp
pop
jp
daa
xor
sbb
add
mov
fidivrs
sarb
adc
dec
in
mov
sub
lcall
popa
cld
decl
test
movsb
jmp
into
sub
push
lea
jne
cmp
push
pushl
jmp
and
xor
add
dec
int
in
hlt
orb
and
mov
mul
and
inc
in
mov
lea
imul
ja
jne
mov
push
popf
ret
data16
pop
out
cmp
inc
call
xor
mov
into
jns
lret
dec
mul
and
push
pop
jmp
inc
cmp
push
loopne
call
mov
mov
fstpl
mov
lds
shll
jecxz
movsb
cmpsb
or
lahf
in
cmc
cwtl
shlb
and
cld
sbb
sub
push
loop
daa
jno
sub
inc
jmp
xchg
loopne
mov
repz
in
loop
push
adc
xchg
xchg
out
sub
jne
jo
push
repz
movsb
pusha
in
pop
call
push
shlb
pop
pop
test
add
testl
cltd
call
or
inc
loope
movsb
repz
repz
push
sbb
jnp
scas
adc
add
pop
add
push
mov
cltd
inc
out
jb
movl
rorb
insl
push
ss
int3
jbe
adc
dec
loop
jge
test
lret
mov
inc
lret
inc
movsb
xor
pop
fsubl
out
out
ja
nop
adc
repz
mov
mov
cmp
test
jno
call
pop
mov
imul
push
insl
inc
imul
dec
xchg
add
scas
stos
out
icebp
xor
mov
mov
popa
adc
push
stos
pop
rcrb
cmpsb
adc
neg
sub
sub
aas
jmp
pop
shrl
push
test
sub
bt
cmc
neg
stc
bt
cmp
lea
lahf
movzbw
movsbl
lea
bswap
pop
call
lea
ja
shl
ror
adc
adc
sub
rol
test
bsf
sar
add
sbb
mov
inc
rol
clc
mov
cmp
jmp
dec
sub
pop
int
sub
jae
jnp
mov
xchg
and
sbb
sbb
shrl
dec
jno
push
int3
pop
xchg
out
pop
push
andb
fisubs
xlat
mov
pop
leave
push
stos
gs
mov
xchg
xor
sub
jae
inc
repz
scas
lods
lods
stc
jl
sub
stos
and
aad
sub
jae
mov
adc
push
push
inc
cmpl
pushf
movw
pushf
lea
ja
push
sub
pop
not
ror
add
push
or
dec
shrd
mov
call
enter
pop
jp
xor
pop
mov
jns
jne
test
inc
xor
addr16
push
divb
stos
icebp
fisubrl
loopne
outsb
cltd
jne
push
sbbl
cmc
jl
mull
push
test
mov
test
sbb
jmp
inc
inc
test
jb
in
and
adc
jbe
jo
sub
cmp
inc
rclb
cmp
loop
and
les
push
jmp
inc
loope
jmp
cli
arpl
ret
jmp
mulb
outsb
fnsave
push
loop
xchg
popf
test
dec
or
movsb
into
pusha
icebp
sub
jl
and
jnp
loope
imul
xchg
mov
mov
cs
movl
sbb
and
or
loope
inc
loop
push
outsb
adc
jns
cmp
jno
inc
push
cmc
adc
mov
xor
pusha
add
dec
lock
loopne
imul
ljmp
test
lods
addr16
inc
jbe
inc
push
mov
xchg
xchg
jbe
inc
push
fistl
dec
inc
insl
ja
mov
mov
dec
inc
mov
out
adc
jbe
xor
call
adc
mov
inc
jecxz
out
push
addr16
pop
mov
xchg
daa
fbstp
cltd
dec
sub
xchg
into
and
adc
fs
mov
cmc
je
push
outsb
clc
rol
rcrl
shll
idivl
and
xor
mov
jne
shrb
mov
ss
mov
cli
ljmp
hlt
outsb
push
push
xchg
out
call
or
hlt
out
enter
push
scas
xchg
ljmp
cmp
cmp
xchg
pop
arpl
and
push
jecxz
outsl
cmp
jmp
mov
mov
inc
xor
pop
xor
in
xchg
and
loopne
xchg
rcrb
popf
shrb
and
jne
xor
dec
repnz
in
lret
mov
adc
push
cmp
ss
pusha
and
inc
movsb
into
test
inc
popa
xor
repnz
push
fs
push
sbbb
jae
jb
mov
jne
cltd
mov
enter
loope
inc
sub
decl
and
xchg
in
xlat
cwtl
pop
arpl
and
rolb
divb
loop
and
je
stos
daa
aas
push
pop
mov
dec
addr16
loope
push
cmpl
ficoms
add
imul
mov
cmpb
mov
push
mov
mov
cmp
imul
and
push
xlat
sbb
testb
and
shl
mov
cs
loopne
fninit
ds
negl
loope
rorl
jne
sub
loope
outsb
fs
jne
inc
xchg
test
inc
outsb
inc
orb
xor
mov
bound
dec
cmc
lret
and
inc
inc
movsb
ror
je
xor
test
xor
cmp
and
and
mov
jecxz
jp
pop
int
mov
pusha
inc
outsb
sub
xor
adcb
negb
les
outsb
fxtract
cmp
push
mulb
fiaddl
andb
push
ja
loope
scas
ja
push
test
repnz
xor
decb
fsts
dec
arpl
mov
push
pop
ret
push
xchg
je
push
mov
cmp
mov
cmp
and
fdivl
jb
hlt
sub
inc
push
loop
mov
lcall
inc
gs
cmpsb
insl
fwait
pop
das
mov
dec
inc
pop
push
adc
fwait
insl
in
mov
cmc
fcmovu
fs
icebp
and
loope
xor
mull
push
arpl
mov
jne
inc
xorb
jmp
and
outsb
and
rcl
pop
sub
jecxz
pusha
inc
aad
loop
pop
jo
ret
mov
inc
outsb
aam
testl
dec
adc
push
adc
inc
fwait
xchg
je
test
adc
push
adc
lds
stc
repnz
js
aam
push
std
pop
xchg
cmpsl
es
sarl
mov
jbe
adc
lods
mov
mov
and
pop
out
xor
and
mov
icebp
lock
out
rolb
aas
fisubs
inc
jl
test
jno
pop
mov
shr
add
mov
call
int3
push
loop
adc
das
mov
shl
xor
jne
outsb
nop
adc
loop
es
sub
les
loop
add
and
ret
xorl
fimull
and
mov
mov
cmp
inc
daa
mov
xchg
jl
test
lahf
sbb
dec
xchg
pop
push
pop
out
mov
xor
mov
outsb
mov
icebp
nop
or
shrl
nop
pop
and
ret
push
add
aaa
jb
sub
xor
daa
mov
and
aam
mov
dec
leave
pop
pop
pop
pop
dec
dec
lock
into
fwait
leave
testb
popf
inc
insl
sub
dec
push
jbe
sub
mov
sub
imul
push
pop
jmp
xchg
jbe
mov
xchg
lea
stos
mov
out
ss
mov
mov
bnd
xchg
push
notb
nop
add
repnz
outsb
xchg
lahf
and
adc
or
adc
push
into
ljmp
loope
int3
stos
ljmp
sub
inc
mov
lods
cwtl
clc
les
stc
sar
xchg
je
mov
inc
push
inc
xchg
pop
push
idivl
idivb
rcr
shr
inc
insb
mov
dec
rolb
sub
bound
xor
mov
push
into
mov
or
ljmp
inc
adc
sub
add
test
sub
arpl
movsl
xchg
mov
jecxz
mov
mov
pop
stos
pop
push
sbb
mov
je
mov
add
sarb
mov
enter
cltd
push
loop
mov
jmp
shlb
mov
mov
pop
lds
inc
xchg
add
sub
pop
and
pusha
mul
in
mov
sahf
fs
mov
cmp
jecxz
test
lret
hlt
outsl
mov
xchg
outsb
sub
js
aam
adc
aas
and
loope
mov
push
mov
or
cmpsb
inc
mul
int3
imul
mov
push
cmc
cwtl
jbe
callw
fabs
ds
fnsave
pop
loope
popa
dec
out
les
mov
xor
or
cmp
repnz
call
lret
in
pop
andl
mov
cmp
sub
push
dec
cmpsl
pop
movsl
mov
in
mov
push
cmp
pop
outsb
ret
mov
inc
push
and
leave
fdivs
int
aaa
inc
mov
loop
fwait
cmc
cmp
mov
arpl
je
sub
add
pop
xadd
outsl
cmp
xor
repz
sub
xchg
sbb
xchg
ds
outsb
cli
pop
lea
jae
testl
adc
push
lods
mov
mov
aas
cltd
add
in
pushf
jb
test
pusha
mov
inc
scas
adc
inc
jmp
mov
bound
aaa
mov
mov
inc
es
jmp
div
loope
daa
test
rcrl
pop
mov
aaa
cli
xor
cmp
ret
and
ja
outsb
and
and
xchg
repz
or
loop
das
insl
idivl
cmpsb
insl
xor
testl
jo
mov
ss
cmc
sbb
inc
int3
out
adc
pop
mov
imul
enter
inc
in
adc
and
loop
shl
shrl
decl
adc
mov
adc
ret
out
loope
jecxz
xchg
xchg
out
rcrb
mov
fcomi
mov
jno
mov
and
hlt
push
movsb
aaa
pop
add
xchg
xchg
iret
outsb
mov
lds
mov
push
and
xchg
imul
xor
jns
xchg
daa
jecxz
arpl
imul
jecxz
fldenv
les
fscale
xchg
add
loop
in
bnd
icebp
into
adc
sbb
adc
xor
stos
into
movb
loop
ret
add
loope
dec
into
add
add
push
mov
shll
mov
repnz
cmp
mov
pop
cld
pop
loop
pusha
xlat
pop
test
push
lods
loop
insl
int3
lahf
loope
aaa
push
xchg
rcr
arpl
push
imulb
push
stos
addr16
loop
pop
sbb
dec
sub
or
int3
pop
push
mov
xchg
dec
fidivl
xchg
inc
or
das
sub
imul
loopne
mov
dec
cmp
sbb
jmp
rcl
and
test
in
adcb
push
sub
inc
loope
jae
loope
adc
cmpsl
push
and
and
test
xchg
mov
mov
pop
inc
insb
arpl
mov
in
jb
aaa
je
insl
test
inc
shlb
fnstcw
into
dec
jb
outsb
xor
add
sbb
imulb
and
test
pop
mov
push
je
push
sbbb
push
dec
push
and
stos
inc
jecxz
xor
xchg
and
ret
je
rorb
inc
add
imul
push
cmpsl
test
int3
arpl
loop
jne
and
dec
jl
cld
fdivrl
outsb
loop
hlt
xchg
and
loop
mov
mov
leave
testb
mov
repnz
fwait
das
pop
scas
pop
jb
outsb
mov
je
mov
jne
jg
shlb
mov
loopne
shrl
adc
or
and
push
add
mov
cmp
repz
dec
fsts
loope
push
sbb
adc
imul
xor
test
pop
outsb
mov
stos
cmp
push
sbb
push
repnz
add
bound
pop
mov
pop
loop
mulb
mov
lds
mov
cli
insb
movb
fisubs
push
dec
jbe
mull
fucom
or
xchg
xlat
xor
rclb
es
pop
mov
es
jle
cltd
loopne
cwtl
scas
push
mov
enter
and
sbb
in
inc
sub
ljmp
sub
push
inc
cmovo
mov
aas
imul
sub
xchg
adc
or
outsb
xchg
icebp
scas
xor
add
sub
outsl
movsb
cmp
cwtl
mov
fs
cmp
ret
cmp
xchg
test
fwait
adc
insl
xchg
mov
stos
shr
xchg
sub
je
mov
rclb
movsl
pusha
sbb
mov
add
xchg
shlb
shrl
ret
cmp
mov
jp
mov
pusha
lret
clc
ljmp
dec
jb
insb
or
inc
je
cmp
or
cmp
push
mov
cmpsb
iret
jmp
push
cmc
and
movsb
mov
subl
mov
sub
push
call
sub
loop
adc
ljmp
push
sbb
div
jl
int
or
xor
add
pop
mov
xchg
dec
jo
xor
popa
and
aam
mov
add
cwtl
rcrb
mov
shll
lahf
fldt
cs
test
ss
lret
jb
inc
sub
xor
mov
outsb
jb
sti
lods
fsubr
iret
stos
aam
push
jb
and
push
repnz
outsb
outsl
dec
aas
push
xchg
xchg
xchg
and
jbe
adc
dec
divl
into
xchg
les
mov
into
and
push
or
movsl
ret
hlt
lock
loopne
xor
pop
pop
in
rcrl
mov
fwait
js
adc
insb
xor
pop
aas
sbb
xor
cs
jb
add
and
and
inc
cmp
popa
ja
jae
rcll
dec
neg
pop
cmc
inc
add
adcl
jecxz
outsl
int3
push
js
pop
pusha
push
xchg
xchg
xchg
dec
mov
imul
and
movsl
add
pop
xor
shrl
jg
out
mov
leave
adc
mov
adc
push
in
outsb
xchg
mov
push
mov
cwtl
fwait
inc
cwtl
add
loop
xor
mov
repnz
push
cwtl
inc
inc
push
in
fldl
inc
mov
out
js
nop
insb
dec
ror
das
add
cwtl
das
jnp
inc
sub
push
fs
scas
xchg
push
sub
lret
push
in
repz
les
mov
mov
in
mov
pop
fsubs
jbe
adc
cltd
xor
push
in
sub
shll
pusha
jle
fldl
sub
mov
mov
or
lods
outsl
dec
jge
lahf
fs
ret
test
jg
mov
push
loop
out
rcrl
mov
push
outsb
dec
xor
stc
mov
loop
fcmovbe
inc
loopne
insb
clc
addr16
iret
mulb
push
push
dec
lahf
sub
jae
push
ss
enter
xor
jb
test
out
jae
inc
xlat
rcr
inc
sarl
push
jbe
inc
inc
push
xchg
mov
das
sub
jbe
popa
inc
add
ret
sub
aad
xchg
inc
push
les
inc
cmp
out
jecxz
cmp
aas
inc
xchg
jmp
movsb
imull
sub
in
pop
out
or
std
test
xchg
scas
adc
popf
pop
mov
jp
dec
daa
ret
xor
and
or
xchg
ss
aam
jmp
mov
arpl
jb
movsl
push
adc
xor
dec
mov
hlt
lods
push
sub
hlt
jp
mov
mov
cltd
sbb
xor
mov
add
je
aam
jbe
push
mov
out
jne
out
movsb
xor
sahf
dec
fisubrl
rcrl
mov
fsubrp
mulb
scas
push
inc
loope
dec
in
std
lret
fstl
je
loope
ss
test
mov
dec
mov
inc
loop
mov
inc
add
push
rcr
jne
dec
and
loop
idivl
cmpsb
fldpi
subb
or
xor
sbb
lret
in
insl
pushl
adc
test
iret
mov
pop
aaa
xchg
pushl
nop
mov
and
jle
jecxz
shlb
add
xchg
add
roll
sbb
sub
outsb
sbb
mov
push
cmp
and
xor
inc
add
ljmp
push
dec
and
inc
movsl
and
push
push
xor
sbb
inc
pusha
outsb
insb
call
cmp
stos
loop
pushl
roll
cmp
outsb
in
push
and
inc
xor
jp
push
jo
addr16
xor
and
mov
push
mulb
xchg
scas
dec
movsl
or
jae
enter
lds
inc
movsb
cmp
repz
cltd
mov
sub
sub
push
sbb
insb
and
outsb
and
lea
insb
inc
push
loop
outsb
dec
and
shl
sub
adc
in
lds
lock
lods
jbe
push
inc
xor
mov
cli
stos
daa
dec
das
cs
cmc
pop
and
xchg
out
in
add
out
pop
or
cmp
jmp
je
addr16
ret
sub
jb
test
lock
rorb
or
clc
data16
outsb
mov
rolb
push
dec
loope
idivb
hlt
sub
push
aas
loope
mov
cltd
out
push
mov
stos
outsb
inc
mov
ljmp
daa
dec
cmc
call
fisttpll
mov
adc
rorb
push
or
fsubr
mov
adc
adc
repz
sbb
adc
xor
test
in
rcl
lock
or
fimull
pop
jb
stos
shl
push
jb
js
jb
aam
sub
arpl
loop
in
xchg
outsb
pushf
stos
daa
cmc
dec
test
inc
loope
mov
xchg
gs
and
jae
and
mov
xchg
push
outsb
cltd
push
mov
sub
push
inc
outsb
inc
sub
adc
and
jne
and
in
add
stos
daa
mov
imulb
xchg
mov
loop
adc
mov
inc
mov
loop
shrl
jb
out
and
and
call
mov
cmc
cmpsb
or
adc
mov
repnz
mov
repnz
sub
mov
xor
subb
pop
pusha
ja
xchg
inc
xor
ja
and
pop
xchg
loope
ja
cmovae
sbb
aaa
push
les
dec
inc
loop
and
cmp
sub
loop
inc
mov
repnz
xchg
inc
and
and
push
xchg
push
and
add
sbb
loop
in
mov
fisubrl
outsb
cwtl
inc
arpl
and
outsb
pop
je
or
cmp
dec
push
leave
imul
shrl
and
aaa
push
xor
mov
pop
enter
test
popf
dec
iret
push
push
imul
outsb
into
dec
pusha
jl
pop
dec
mov
enter
inc
in
jmp
mov
std
fimuls
bound
cmc
push
mov
subb
in
adc
and
bound
aaa
pop
aam
jae
fs
mov
jo
xor
hlt
dec
jno
fcomps
mov
mov
aam
loop
imul
ja
mov
mov
dec
inc
mov
sub
sbb
lret
ss
and
js
ret
je
add
jns
or
xor
mov
jcxz
loop
aam
loop
das
xchg
xchg
dec
xchg
gs
je
or
pusha
loop
fwait
leave
jae
loope
and
dec
mov
loop
call
or
dec
ds
xchg
inc
mov
insb
mov
je
adc
out
jbe
adc
inc
icebp
neg
test
push
xorl
sub
testb
xor
arpl
and
imul
jbe
or
loop
add
mov
loop
ret
inc
xchg
push
loop
ret
inc
inc
sub
in
ret
inc
push
sub
scas
ret
inc
ss
loop
ret
cmp
rcrb
out
rorb
adc
pusha
aam
cmc
pop
shl
test
sub
inc
aam
data16
mov
imul
arpl
cs
loop
test
adc
jl
mov
lock
inc
lret
dec
fisttpl
sbb
test
in
dec
sbb
or
jbe
xchg
repnz
mov
jmp
outsb
or
call
jne
sub
imulb
rcl
icebp
jecxz
hlt
pusha
xchg
jbe
in
pusha
sub
loope
outsb
in
ret
jecxz
loop
loope
and
mov
aam
pop
and
jbe
jecxz
xor
mov
repnz
mov
adc
sub
xor
test
push
mov
inc
or
aad
loop
adc
jp
das
imul
mov
xchg
inc
imul
pusha
bound
push
xor
out
pop
das
mov
or
enter
dec
cmpl
xchg
xchg
das
xlat
cltd
movsl
insb
xor
cltd
in
addr16
jbe
inc
inc
cmpsb
sub
mov
push
aam
push
inc
aaa
pop
push
vpshld
inc
pop
gs
adc
ss
movsb
jbe
cmp
outsb
scas
fisubrl
cmp
outsb
mov
or
inc
cmp
ret
les
xor
dec
jnp
sub
out
sbb
dec
insb
clc
lods
and
aad
xchg
push
push
movsb
aas
aad
int
jns
adc
in
mov
lds
lock
push
loop
jmp
jecxz
jns
call
xor
add
decl
sbb
mov
and
xor
sub
sbbb
in
data16
cmpb
push
leave
jl
ljmp
mov
xchg
mov
cwtl
loope
adc
sub
sub
pushf
insb
mov
sahf
jecxz
mov
cmp
cmp
das
mov
test
and
loop
cmc
and
inc
push
or
sbb
jnp
jb
dec
mov
fldt
mov
sub
and
and
ror
dec
xchg
or
or
lret
pop
ja
lret
cmc
sub
mov
sub
and
jecxz
cli
in
idivb
loop
pop
or
dec
mov
insb
push
xchg
inc
roll
add
stos
shll
outsb
popf
inc
xor
mov
das
push
and
aad
loope
shll
adc
outsb
pop
inc
or
sub
add
mov
das
pop
icebp
outsb
fisubs
jae
loope
cld
adc
cmp
call
arpl
push
outsb
out
stos
adc
aam
loop
and
dec
mov
ja
fimull
insb
mov
imul
call
push
outsl
or
push
push
shll
outsb
shl
fdivl
mov
shll
sub
outsl
or
aam
pushf
insb
outsl
outsb
and
movsl
popl
outsb
fwait
pop
mov
out
outsb
inc
push
sbb
and
jnp
jb
mul
sarl
insb
out
adc
xchg
sub
inc
andl
xchg
cmc
sbbl
fs
cltd
sub
sub
and
pusha
scas
inc
push
dec
mov
loope
out
mov
cmc
stc
test
jnp
push
sub
mov
adc
mov
addr16
mov
mov
and
xchg
jbe
mov
inc
movsl
js
xor
or
pop
into
jae
shlb
xchg
pop
sub
xlat
mov
or
loop
nop
das
xor
jge
int
adc
xor
outsb
negl
cmc
iret
mov
jmp
ret
daa
xchg
sbb
add
cli
mov
xchg
inc
jbe
inc
inc
arpl
jbe
faddl
pusha
mov
lahf
and
imulb
dec
adc
rdpmc
pusha
out
push
adc
mov
or
into
test
xchg
inc
das
ljmp
push
pop
mov
jae
ss
jae
inc
insb
sub
arpl
xor
arpl
sub
iret
inc
jecxz
imul
push
adc
outsl
push
xchg
nop
shll
inc
popa
ljmp
arpl
sub
shl
subb
outsl
ljmp
cmpsb
cmp
outsl
cmpsb
in
mov
imul
arpl
hlt
xor
cmpsl
xchg
adc
clc
cwtl
negb
cmp
aam
ret
xchg
inc
mov
loop
lods
pop
in
in
cmp
jecxz
shlb
xchg
es
mov
xchg
and
imul
orl
in
inc
movl
adc
xor
push
fwait
mov
sbb
and
scas
inc
outsb
push
jp
rol
and
outsb
push
cmp
adc
inc
test
lahf
mov
loopne
ljmp
jecxz
mov
jge
cltd
pop
mov
push
jecxz
cwtl
inc
mov
test
xor
push
jp
cmc
loope
push
pusha
adc
push
lahf
pop
arpl
sub
inc
or
mov
or
inc
daa
mov
stos
pop
mov
les
loop
jns
jmp
inc
sub
jo
fdecstp
hlt
or
mov
jge
subl
lods
push
mov
repz
pop
xchg
cmpsb
push
cltd
mov
sbb
std
jecxz
and
shrl
xchg
ds
das
push
mov
out
movsb
enter
add
xchg
dec
jne
shl
xchg
fisubs
add
adc
dec
mov
adc
bound
push
stc
jae
insl
mov
jecxz
imulb
mov
loope
sar
xor
fsubrl
es
or
outsb
mov
in
pop
repnz
inc
sbb
jnp
push
adc
cmp
out
lahf
sub
repnz
pusha
ljmp
divl
shrb
push
push
jae
sbb
js
dec
outsl
arpl
pop
imul
cmpsl
outsb
shrl
insb
and
push
je
scas
aaa
and
xchg
lock
jne
enter
and
xchg
shrb
lds
sub
pushf
fmuls
loope
cmpsb
xorb
outsb
aad
fisubrl
ljmp
loope
cmp
ds
fwait
clc
mov
mov
mov
inc
and
pop
mov
aas
repnz
jg
fisttps
arpl
push
sub
lds
movsb
mov
or
inc
sbb
sbb
pop
out
loope
notb
aaa
aaa
xor
or
push
faddl
xchg
outsb
scas
ja
gs
cmp
sbb
push
adc
jbe
es
xlat
adc
jb
shl
push
je
subl
aad
dec
and
dec
push
cmpsb
aam
add
push
inc
push
mov
add
inc
xor
test
push
sar
xorl
jo
loop
cmp
jbe
dec
cwtl
inc
push
in
in
sbb
es
sub
add
popa
subl
add
xchg
push
or
shlb
pop
push
fistl
cmc
into
aaa
aas
js
xor
add
push
push
push
js
or
pop
push
cltd
test
adc
rcr
jno
int3
push
push
and
push
outsb
ds
push
outsl
cwtl
rcrl
mov
leave
mov
addr16
outsb
in
mov
addr16
add
mov
rolb
outsb
inc
addr16
push
in
stos
hlt
addr16
mov
icebp
addr16
add
outsb
add
iret
xchg
and
push
shl
xor
sub
ret
cwtl
dec
in
into
roll
testl
add
and
sub
push
inc
mov
mov
gs
das
ljmp
xchg
ficoml
js
mov
cmpsb
inc
sub
jb
jmp
outsb
jns
push
pop
xchg
xchg
push
scas
aam
bound
fcoml
sub
adc
outsb
sbbl
push
mov
fiaddl
inc
xchg
ss
jbe
lods
fildll
mov
loope
mov
stos
cmpsl
xchg
mov
inc
sub
and
jecxz
lods
sub
mov
xor
inc
shll
outsb
lret
stos
and
je
dec
xchg
add
mov
in
inc
outsb
popl
inc
daa
and
dec
out
xchg
dec
jae
xchg
pop
lods
cltd
push
lods
mov
sub
inc
mov
mov
lcall
rcr
push
dec
sti
cli
ds
sti
push
repz
inc
jbe
sub
and
dec
bound
pop
mov
mov
ss
in
lods
call
sbb
sarl
mov
popa
xchg
sbb
inc
iret
sub
fdivrs
ss
push
sub
jge
inc
inc
adc
xchg
mov
sub
pop
and
fiaddl
xor
cmp
jp
dec
xor
lods
mov
cltd
adc
inc
popf
and
shll
dec
push
in
add
pop
scas
inc
jb
imul
or
lods
in
mov
inc
fwait
dec
jae
repnz
sahf
out
cmp
pop
pop
clc
jno
mov
in
dec
and
testl
and
mov
repz
sub
xchg
stos
js
jns
xor
loop
sub
mov
jg
insl
xchg
lcall
xchg
sub
jnp
loop
add
int
daa
movsl
jbe
fiaddl
outsb
push
inc
jbe
bnd
pop
stos
insb
jmp
sub
dec
push
call
or
inc
sub
sub
call
xlat
call
loop
sub
rclb
mov
das
or
xchg
fcmovb
cmpsl
cmc
sub
rcr
stos
loop
ror
push
arpl
lds
in
stos
mov
adc
xchg
push
push
sbb
push
add
in
mov
je
int
shrb
and
push
div
push
loop
xor
xor
sbb
into
icebp
xchg
add
cmc
shlb
movsl
test
cmp
pop
mov
jb
not
sbb
jne
mov
push
inc
sub
jne
and
xchg
ja
outsb
jne
push
push
inc
arpl
jns
js
sub
mov
imul
mov
imul
subb
ja
adc
and
testb
xor
and
inc
lds
xchg
popa
pop
fwait
push
jmp
aas
testb
insb
les
dec
outsl
mull
mov
pop
inc
lret
aam
sub
push
jl
push
jne
cmp
scas
adc
aam
loop
imulb
xchg
sub
push
sub
fstl
sub
xor
xchg
hlt
ret
call
jmp
xor
outsb
shlb
mov
aaa
pusha
aam
hlt
loop
xor
jo
ljmp
subl
fs
xchg
outsb
add
sub
dec
and
shrl
xor
int
push
push
loop
je
mov
xchg
ljmp
out
push
cmc
mulb
loop
loop
pop
push
pop
fcom
ljmp
fwait
imul
jle
fs
sbb
inc
imul
push
xor
push
push
stc
das
jb
sub
inc
stc
add
jne
out
jae
lahf
mov
ljmp
cmc
push
jmp
sub
mov
lret
dec
rcrb
jb
stos
dec
mov
imull
cs
mov
sarb
mov
in
push
push
mov
and
addr16
xor
pop
mov
inc
notb
mov
cmp
push
and
mov
mov
roll
out
add
popa
jg
fmul
mov
sub
inc
push
testl
pop
js
jecxz
cltd
dec
in
dec
loop
pop
popa
push
xchg
mov
xor
jb
shrl
cli
sub
daa
jmp
xor
sub
xchg
aam
xor
mov
arpl
call
xchg
and
cs
das
mov
inc
sbb
and
inc
outsb
cltd
or
xchg
ud0
add
xchg
dec
dec
scas
insb
rorl
and
cmpsb
popf
lahf
and
fcomp
xor
cwtl
movsl
jo
addr16
dec
jmp
aas
xchg
inc
inc
daa
mov
add
out
jae
pop
loop
push
addb
add
jmp
outsl
jno
aaa
jmp
xor
cmp
cmp
adc
pop
or
mov
add
or
jnp
call
mov
je
aas
cmp
xor
ss
loop
addr16
inc
nop
call
es
stos
pop
movsb
out
and
jb
outsl
lret
mov
movsb
or
adc
lods
fdivrl
push
mov
movsb
mov
loop
lods
inc
mov
cld
inc
sub
jl
movsb
arpl
dec
xor
out
das
or
je
pop
hlt
cmpsb
sub
and
insl
pop
mov
mov
test
mov
xor
mov
test
mov
xor
outsb
inc
add
rol
out
pushf
xchg
loopne
mov
push
addr16
and
lock
adc
std
inc
stos
jmp
in
mov
sbb
jns
ret
mov
xchg
mov
in
mov
test
loope
pop
enter
stos
push
jbe
ja
loopne
push
test
pop
adc
sbb
add
mov
pop
jle
cmp
xchg
mov
in
repnz
sub
add
xchg
lret
pusha
jecxz
aas
xchg
mov
sub
inc
imul
add
push
and
pop
xlat
in
cmp
dec
adc
pop
andl
mov
outsb
nop
and
jbe
fsubrl
push
mov
xrelease
popa
loop
xchg
aaa
jle
mov
add
aas
mov
jbe
js
sub
mov
out
inc
jo
pop
outsb
test
loopne
sbb
inc
add
jns
rolb
scas
mov
mov
add
scas
inc
cmp
mov
cmp
inc
clc
mulb
adc
cwtl
push
pusha
mov
push
inc
ljmp
push
das
jecxz
in
and
call
inc
cmp
dec
outsb
pop
or
jb
idivb
push
and
adc
and
and
xor
mov
mull
rcr
mov
push
and
adc
mov
and
arpl
sub
call
adc
adc
push
stos
add
pop
shr
xor
cmpsl
dec
push
imul
push
dec
subl
test
loop
jmp
sub
loope
out
inc
xchg
sbb
loopne
sarb
or
jnp
enter
inc
ret
in
xchg
dec
dec
popa
xor
sbb
push
test
xchg
int3
push
addr16
loopne
push
leave
pop
mov
jb
mov
and
dec
pop
jge
pusha
and
imull
sbb
sub
sbbb
dec
scas
loop
sub
popa
fs
es
xor
dec
repnz
push
and
xchg
push
pop
ss
je
cmp
test
sbbl
imul
push
hlt
jo
in
ljmp
fs
clc
stos
sbb
mov
ds
test
add
mov
xor
dec
out
fwait
push
sub
push
cld
inc
iret
xchg
hlt
adc
shll
add
lea
jp
loopne
ja
inc
sbb
bound
push
fsub
jmp
pop
push
push
arpl
movsl
mov
sub
mov
repnz
add
mov
push
sbb
insb
ret
insb
lods
or
push
out
ret
mov
and
add
xorl
mov
hlt
out
call
pop
jl,pn
je
pop
jecxz
aas
sti
into
cmpsb
pop
jnp
fnsave
inc
fwait
dec
enter
push
rclb
dec
movsl
aaa
jno
sahf
and
push
dec
xchg
rcll
dec
inc
mov
test
cmp
and
repnz
out
cmp
cmpsb
cwtl
xchg
sbb
insl
in
push
je
sti
out
pop
cltd
ret
ljmp
dec
xchg
inc
inc
jge
out
lcall
loop
push
dec
dec
push
push
pop
loop
in
cmpsb
mull
xor
sub
bound
js
ss
arpl
inc
ljmp
outsb
adc
loopne
repz
xchg
outsb
add
xchg
outsb
push
xchg
lods
hlt
imulb
xchg
dec
or
repnz
sub
in
push
mov
mov
push
pop
xchg
jo
shlb
loopne
fdiv
loop
shl
add
sahf
pop
adc
lods
cmp
xchg
inc
pushf
fnsave
dec
ja
fldenv
jmp
test
data16
inc
or
adc
mov
mov
bound
cmc
lea
lret
sub
sub
push
mov
icebp
or
inc
xchg
movsb
jno
std
stc
adcb
shrb
inc
lods
cmc
arpl
sarl
xor
cmp
inc
push
sub
bound
sar
cwtl
add
repz
add
aaa
and
imul
fdivs
cmp
and
jns
sub
xor
int3
insb
sub
popf
inc
cmp
xor
cmc
cmp
or
pop
inc
je
popa
add
sti
cltd
sahf
repz
xor
mov
adc
xor
loop
add
outsb
push
daa
pop
int
jb
adc
enter
shrl
aas
mov
cli
cmc
repz
pushf
fdivrp
icebp
inc
adc
push
pop
xor
xor
inc
icebp
cwtl
pop
jbe
xchg
pop
ret
movsl
fwait
xchg
bound
iret
fwait
xchg
loop
and
xchg
out
and
push
pop
mulb
dec
fwait
aad
fs
loope
shlb
dec
loopne
mov
int
jl
cwtl
in
aaa
push
or
shlb
mov
xor
pop
je
mov
test
popa
movsl
push
jae
inc
jno
inc
push
cvtdq2ps
sub
xor
xchg
sahf
ficoml
pop
pusha
add
or
mov
cmpsl
sbb
jb
imull
add
notb
lock
adc
aam
call
inc
je
or
pop
xchg
cld
cli
lahf
dec
jbe
jge
add
mov
ss
xor
jecxz
inc
dec
bound
sub
mov
loopne
jmp
adc
adc
cmc
jecxz
xchg
sahf
add
and
mov
jbe
pop
sbb
and
mov
shll
loope
scas
pop
sbb
shlb
fisubl
cmp
push
and
popa
ficoml
les
hlt
inc
jae
outsb
cmp
enter
mov
dec
scas
mul
jns
daa
push
ja
jp
fneni(8087
jmp
push
push
sbb
dec
sub
js
and
hlt
dec
aaa
push
loope
jecxz
loop
int
xchg
add
xor
push
jecxz
sbb
dec
mov
cmpb
push
sbb
fidivrs
adc
inc
shl
mov
and
and
or
lea
and
repz
jne
sbb
jp
push
test
pop
rorl
mov
ss
cld
and
inc
in
shl
rolb
and
mov
ror
fidivs
imul
mov
fwait
or
insl
out
loop
pop
inc
sbb
dec
cld
inc
incl
cs
push
mov
push
out
lcall
sub
imul
cmpsl
idivb
shrl
xchg
hlt
scas
into
mov
hlt
jge
outsl
lock
cmp
shlb
rol
test
add
mov
cmpsb
repz
ljmp
jo
dec
jbe
inc
ds
push
push
push
out
lahf
xchg
ds
mov
fimull
ss
sub
js
pop
jne
adc
pusha
xor
cmpsl
pusha
sub
aaa
mov
scas
jne
fxtract
jb
fdivr
adc
rcrl
testb
test
les
mov
outsb
push
xchg
push
push
mov
push
lds
loop
loopne
loope
loope
sarl
pop
push
mov
inc
pop
add
pushf
inc
dec
adc
cmp
xor
adc
scas
xlat
inc
rcll
loope
jmp
sahf
aaa
add
mov
jbe
out
sub
aaa
xor
notl
shll
dec
push
mov
pushl
das
xor
or
pusha
xchg
inc
icebp
aaa
movsl
lods
or
sar
push
xor
cmpsl
and
dec
imul
out
test
aas
je
inc
fdivl
outsb
push
and
inc
and
stc
lods
mov
sub
cwtl
outsb
or
push
mov
pop
mov
mov
mov
sarl
mov
jle
add
inc
xchg
stos
sub
cmp
leave
mov
clc
insb
cmpsb
jns
and
mov
inc
xchg
push
leave
cmp
jne
in
fstp
movsl
push
push
gs
xor
mov
pop
repz
lcall
jbe
pusha
xchg
das
movsb
sbb
insl
xchg
loop
stos
stos
fbld
aam
pop
aaa
pop
iret
loope
aaa
test
hlt
fwait
fs
sub
insl
pop
or
xchg
andl
sub
push
xchg
idivb
mov
cmpsl
fsts
in
push
jbe
cmp
mov
jp
push
test
pop
cltd
mov
mov
ljmp
inc
jae
in
and
push
lcall
mov
aad
xchg
mov
sbb
ret
dec
cmp
or
lahf
imul
push
arpl
ret
inc
ljmp
les
inc
xlat
mov
aad
lea
xor
loop
push
sbb
outsb
jne
in
cmpsl
jge
mov
dec
outsb
xchg
jl
jne
dec
clc
lret
daa
jge
mov
movsb
loopne
push
cmpsl
cld
loop
add
lahf
cmpsl
xchg
jecxz
out
lea
addb
push
in
sub
les
push
je
cmp
cwtl
jge
ja
xchg
add
les
mov
inc
pusha
ret
sbb
ret
fdivp
xor
sub
ror
mov
subb
mov
add
mov
inc
cwtl
xor
loop
pop
mov
jmp
sub
and
jo
ret
arpl
push
sub
and
gs
or
jne
andb
sub
mov
aad
imul
push
popa
push
and
push
shrl
pop
adc
xchg
out
pop
xor
pop
jo
and
add
loop
js
outsb
cmp
fs
xor
xchg
repnz
fldl
pusha
jo
jp
inc
aad
jmp
pop
jge
jle
push
or
mov
pushf
mov
and
pusha
movsl
mov
inc
jno
rcrb
add
icebp
xor
sub
lods
pusha
inc
jmp
dec
fcomip
push
pop
repz
sbb
shrb
pop
mov
cli
or
cmp
sti
push
inc
roll
scas
dec
gs
lret
icebp
cmp
or
and
inc
outsb
out
mov
dec
sub
inc
mov
jmp
sarl
inc
push
shlb
shll
lock
out
int3
inc
dec
rcr
aaa
jmp
sbb
jp
vorps
shl
or
sub
push
inc
loope
bound
hlt
xchg
pop
shr
cmp
std
sub
fdivs
cwtl
fldenv
loope
test
shrl
pusha
push
gs
movsl
sub
movsb
pop
pmulhw
and
testb
shrb
mov
fwait
inc
push
ja
das
xchg
lock
adc
enter
sub
push
outsl
or
or
xor
and
mov
shl
ljmp
adc
fimull
cld
test
lret
or
mov
or
inc
out
shl
and
cmpsb
sbb
sub
jmp
xchg
xchg
sub
rcl
scas
jnp
das
lods
add
popf
loop
adc
inc
mov
sub
push
call
dec
sbb
fdivrp
and
adc
imul
repnz
test
or
jo
dec
in
in
pop
idiv
fisubl
pusha
mov
aam
lds
adcb
xor
pop
inc
cld
jb
shrl
push
or
or
lds
out
pushf
bound
pop
sbb
mov
fsubr
xor
mov
loope
rcll
loop
add
mov
in
pushl
and
je
test
cmp
repnz
add
and
loope
shlb
arpl
loopne
mov
lock
xlat
inc
xchg
fsub
pop
push
cld
aaa
mov
sbb
es
cmp
mov
jmp
rcrb
xlat
xchg
loope
cmp
stos
mulb
add
mov
push
test
imul
cwtl
push
adc
and
sbb
stos
mov
shrb
mov
leavew
add
inc
popl
mov
jge
movsb
mov
es
shlb
jle
addb
or
jecxz
lods
dec
pop
and
arpl
push
sub
xor
in
add
leave
cmpsl
sbb
rcrl
jle
mov
inc
ja
mov
testl
push
jbe
popf
inc
mov
inc
cmp
sbb
jecxz
cmc
loope
rcrl
pop
les
adc
movsl
xlat
push
add
xor
fimull
xchg
cwtl
pop
icebp
shlb
and
add
fmull
xor
jbe
mov
in
push
xchg
orl
call
inc
mov
ja
mov
test
imul
lds
orb
outsb
push
dec
js
lods
lds
cmpl
sub
mov
and
push
sub
bound
lcall
pop
mov
orl
push
lods
adc
inc
cwtl
cmpl
ret
ret
pop
dec
test
arpl
xor
lahf
push
loop
loope
shr
aam
cltd
jge
mov
arpl
inc
pop
jae
scas
jae
push
inc
xor
mov
xor
andl
inc
scas
jg
xor
aas
cwtl
add
xor
cs
sub
xor
loope
fwait
fwait
and
or
pop
hlt
fucom
aam
int
sub
and
mov
daa
pop
push
ljmp
popf
leave
inc
mov
push
call
lahf
cwtl
xchg
arpl
mov
adc
add
jbe
hlt
cltd
pop
xor
lahf
ljmp
push
movsl
mov
push
ljmp
sarl
andl
xor
and
sti
xor
pusha
sub
outsb
nop
in
mov
bound
mov
data16
cltd
subl
loope
jecxz
pop
inc
jo
inc
sbb
loop
jb
inc
cmpsl
loope
push
inc
jne
stos
shll
push
xchg
xor
idivb
ja
roll
mov
lea
sub
pusha
rolb
mov
hlt
in
cmp
pop
arpl
cmp
popf
test
dec
hlt
adc
xorb
ret
fisubrl
pop
outsb
xchg
mov
mov
gs
and
ljmp
hlt
mov
ljmp
dec
and
and
xchg
mov
inc
mov
loope
ja
jno
adc
sub
mov
jecxz
push
lret
shl
mov
push
cmovae
rolb
stos
cmpb
pop
lret
xor
cmp
push
sub
jb
xor
add
mov
push
mov
notb
ljmp
add
add
pushf
int
arpl
add
shl
out
cmp
mov
loope
jl
jle
gs
hlt
mov
jb
jl
mov
sub
lcall
push
push
subl
inc
sub
out
sub
aaa
in
adc
out
and
push
call
arpl
ret
inc
mov
push
xor
sub
lgs
pushf
es
and
bound
fwait
in
cmp
pop
nop
xor
sbb
xchg
mov
xchg
pop
test
jne
enter
push
mov
jecxz
rcrb
jge
mov
jmp
fwait
stos
scas
push
sbb
outsb
int3
mov
into
jg
jo
insl
xor
sarl
pop
testb
xor
push
imul
and
je
xchg
test
scas
mov
pop
or
mov
sub
fdivrl
dec
dec
sbb
jae
mov
sub
mov
sub
dec
push
mov
inc
and
ror
dec
pop
mov
fimull
or
cmpsb
pusha
scas
imul
push
int3
mov
mov
sbb
fldcw
out
pop
ret
ljmp
ret
mov
jle
repz
out
jbe
adc
outsb
lods
movsl
and
xor
xchg
dec
andl
push
adc
insl
and
sub
lret
sbb
mov
js
out
mov
push
mov
jl
adc
in
negl
xchg
test
cwtl
mov
jnp
std
in
aas
jnp
in
aaa
ss
icebp
fsubl
repnz
leave
xor
adc
and
add
push
test
test
pusha
jb
aad
push
mov
mov
rcl
outsb
sti
aam
in
add
sbb
or
jne
cmp
push
xchg
test
movsb
inc
bnd
rorl
fisubl
out
es
mov
jl
lea
inc
push
fwait
cmp
stos
lds
mov
mov
in
and
das
xchg
jne
cmc
adc
outsb
in
inc
sti
ljmp
jl
mov
insl
fwait
in
inc
jbe
mov
sbb
mull
aas
and
fists
cs
aad
mov
sub
inc
lret
imul
mov
daa
call
dec
test
test
repnz
adc
pop
int3
mov
mov
cmpsl
fcoms
adc
popa
mov
outsb
je
mov
cmp
cmp
push
enter
xchg
repz
mov
cltd
dec
sbbb
repz
leave
pop
call
imul
outsb
jge
inc
lods
and
sbb
lds
outsb
inc
and
cli
loopne
hlt
jbe
sbb
adc
push
test
aaa
stc
fcmove
addr16
call
adc
and
test
add
jecxz
in
mov
xchg
cltd
movsl
cmp
rcll
pop
arpl
scas
popf
mov
jbe
cmp
loope
mov
adc
inc
inc
mov
mov
cmp
mov
cmp
push
stc
jbe
sub
mov
lock
sti
aas
sub
add
push
pusha
cmp
ljmp
inc
loopne
cli
jb
ja
and
bound
es
cmp
push
sbb
xor
mov
mov
dec
aam
dec
jb
out
inc
adc
jl
lea
ljmp
sub
push
jmp
popa
xchg
cmc
les
xchg
add
mov
push
cmc
outsl
pop
insl
sbb
outsb
adc
fistpl
sub
fsubrl
and
sbb
lods
repnz
fwait
mov
cltd
testb
ret
lock
je
xchg
sbb
xchg
pusha
cmovns
je
dec
lcall
mov
mov
shl
and
cmp
mov
sub
jae
push
sahf
test
test
imul
pop
push
mov
xor
lcall
add
jmp
aaa
mov
idivl
sbbl
aad
fcompl
loope
ds
stc
sbb
pushw
insb
cmpsb
mov
rorb
rcrl
cld
jbe
iret
push
mov
testb
and
push
js
xor
data16
out
adc
movl
jl
je
ret
inc
std
push
lds
push
mov
inc
push
lods
mov
je
mov
or
insb
mov
daa
inc
xchg
pop
and
ja
push
and
cltd
jne
xchg
cmpsb
leave
push
jg
and
push
movsb
in
mov
jnp
adc
cmp
clc
xor
test
call
test
stc
pop
and
and
add
push
icebp
pop
cwtl
stos
push
jbe
insb
in
xchg
insb
push
iret
inc
test
or
pop
fcoml
dec
in
xchg
inc
push
ljmp
lret
mov
cs
lret
jbe
test
and
inc
mov
or
arpl
in
adc
mov
ret
pop
movq
xchg
outsb
stc
divb
jne
mov
mov
inc
outsb
xlat
ljmp
mov
xchg
push
jbe
jecxz
xor
sahf
fucomp
icebp
idivb
sub
arpl
mov
jecxz
shrb
aaa
xor
ret
and
mov
xchg
push
test
pusha
jge
addr16
rolb
inc
adc
push
xchg
add
ret
repnz
stos
fists
repnz
aam
dec
pop
and
mov
scas
icebp
inc
lcall
arpl
inc
xchg
shl
push
add
sub
sub
out
push
mov
push
mov
scas
push
mov
ret
mov
sub
insl
inc
fisubl
push
shrl
cmpb
jmp
sub
and
jl
mov
adc
sti
adc
outsb
mov
push
outsb
mov
push
insb
je
or
and
xor
mov
sub
inc
mov
mov
pusha
lcall
call
sub
adc
fld
imul
aaa
sub
outsl
daa
or
in
cld
inc
mov
and
testb
dec
scas
xchg
lods
push
push
cmp
add
or
loop
mov
outsb
push
popa
icebp
sub
sub
in
fsubl
jbe
pusha
out
push
ret
mov
in
mov
sub
aas
lcall
xchg
add
dec
arpl
and
insb
jecxz
pop
mov
sbb
inc
push
call
insb
aam
in
xchg
inc
lret
mov
mov
inc
sub
cmp
mov
push
lcall
and
or
loopne
in
mov
out
dec
imul
mov
push
dec
bound
mov
xchg
test
das
out
sbb
mov
jmp
mov
flds
outsb
xor
loop
sbbl
and
repnz
sbb
sub
fwait
pop
stc
inc
pop
iret
push
into
fwait
push
sub
iret
pop
imulb
notb
aaa
ret
xchg
mov
xorb
cmp
je
mov
aad
push
call
repnz
loop
leave
dec
adc
es
mov
adc
and
stc
xchg
and
sbb
js
lahf
inc
jl
insb
pop
sbb
mov
lcall
inc
mov
fiaddl
or
jae
bound
int3
and
and
movsb
xchg
test
mov
cwtl
jae
loopne
xchg
xor
movsl
inc
push
in
in
push
rcl
dec
dec
xchg
sbb
ja
out
inc
mov
xorl
fwait
dec
inc
jb
movsl
ljmp
hlt
ljmp
adc
idivb
std
lahf
outsb
push
adc
adc
mov
les
sub
pop
repz
and
filds
add
daa
cli
ss
add
hlt
daa
cli
xor
sarl
jne
inc
mov
xlat
rolb
repz
jae
popa
lahf
jmp
repnz
lret
add
push
movsl
fidivrs
sbb
jae
xlat
movsb
push
sub
push
sbb
add
icebp
and
add
inc
xchg
adc
or
jbe
lds
mov
cld
xor
rorl
popa
dec
shrl
sub
aas
xor
xchg
inc
jl
insb
pop
inc
inc
mov
roll
adc
insb
call
rolb
sbb
mov
adc
and
xor
jecxz
outsb
lods
mov
insb
cmc
cwtl
and
rcrl
unpcklps
mov
cmp
into
dec
push
inc
jmp
scas
pop
add
shl
push
les
mov
cwtl
not
mov
fldcw
mov
fwait
lret
mov
arpl
aaa
fldenv
jmp
or
pop
pop
jmp
xchg
fidivrs
stc
and
sub
outsb
mov
xchg
loop
mov
in
orl
jno
roll
mov
jno
insb
in
ds
jae,pn
inc
lods
mov
in
jo
test
inc
jb,pn
push
data16
ret
cltd
inc
cmp
mov
faddp
rcrb
lahf
inc
outsl
cmp
jecxz
ret
sub
shlb
arpl
lcall
outsb
and
xchg
jecxz
mov
mov
outsb
scas
xchg
pop
rcl
dec
pusha
outsb
mov
out
xor
push
jecxz
lods
push
ret
loop
cmpsb
sub
cs
outsb
imul
cmpsb
push
push
mov
cmpsb
push
outsl
test
das
into
mov
pusha
add
lahf
lcall
sahf
scas
mov
inc
hlt
icebp
loop
mov
add
xchg
mov
stos
jge
andb
rep
xor
jmp
sbb
and
mov
scas
rcrb
sub
xchg
daa
shl
push
iret
xor
stos
pop
jmp
dec
sbb
sub
inc
mov
insl
xchg
sbb
insb
inc
sub
out
fbstp
push
push
inc
lret
xchg
addr16
dec
mov
pop
mov
fcompl
or
das
cmp
jo
adc
jne
loopne
cmpsb
xchg
push
pop
enter
dec
fidivl
xchg
push
inc
mov
push
sub
hlt
and
mov
and
pop
fldl
jp
and
sub
mov
test
fwait
push
imul
pop
inc
mov
push
xchg
ljmp
jae,pn
lret
addb
push
inc
push
in
data16
outsl
inc
inc
arpl
jno
popa
sarl
and
push
jmp
loopne
push
inc
push
xsaves
sub
xchg
das
jl
rcrl
je
mov
mov
paddb
jb
fimull
lea
jae
arpl
xchg
fwait
hlt
pop
mov
bound
sub
inc
pop
pusha
add
lea
test
outsb
iret
fsubl
push
push
negb
loopne
arpl
outsl
rcll
inc
into
pop
in
dec
call
sbb
in
pusha
or
cltd
push
repnz
mov
sarb
mov
or
dec
arpl
jg
arpl
lret
mov
out
cmp
mov
adc
and
ja
aam
mov
mov
mov
clc
arpl
inc
out
fimuls
int
cmc
cmpsl
cltd
insb
jle
repz
add
les
scas
aaa
rcll
add
inc
das
xorb
rcr
add
jle
ljmp
adc
out
add
mov
xor
and
filds
add
jne
insb
ljmp
mov
aaa
xor
jne
jne
filds
inc
loope
and
mov
pop
and
test
js
scas
inc
push
std
inc
jl
insb
pop
push
mov
cltd
les
cmc
lcall
adc
daa
push
xchg
lcall
lds
rorl
adc
sub
add
cmpsb
xchg
cmpsl
adc
je
mov
icebp
insl
inc
stos
jbe
push
pop
ljmp
aam
jl
in
push
fwait
inc
jbe
add
in
testb
cltd
adc
adc
mov
and
in
rcrl
test
outsb
or
imul
or
jb
push
xor
xchg
icebp
cmpsb
xlat
push
out
pop
jp
pop
fwait
jmp
xor
adc
rol
mov
inc
inc
and
push
jno
xlat
popa
jo
in
and
pop
mov
in
cmpsl
push
xor
and
xor
bound
jg
test
into
inc
je
add
cmpsl
push
repz
pop
xchg
outsb
sbb
mov
loop
repz
jae
mov
pop
int3
loop
das
sbb
rol
mov
mov
outsb
fldenv
cmp
push
sub
sub
cmp
push
call
pop
in
in
push
jnp
dec
xlat
popa
lcall
loop
les
out
ja
mov
popf
sub
das
xor
push
mov
outsb
push
push
cmpsl
xchg
add
in
mov
xor
push
sub
repnz
jnp
lcall
leave
cmc
popf
mov
inc
mov
out
popf
jmp
push
repnz
xor
sbb
mov
push
push
sarl
dec
out
adc
fisubrl
jb
shlb
dec
cli
ret
arpl
add
add
aad
rcrb
or
push
je
pusha
lods
push
je
out
fstl
outsb
stos
cmpsb
add
in
fcmovbe
sub
rol
ljmp
adc
enter
cmpsl
in
push
and
test
addr16
lock
xchg
xor
jne
xchg
sbb
push
mov
push
jge
mov
add
stc
stc
je
add
cmp
jne
filds
add
xor
and
incl
add
xor
test
push
push
loop
loop,pn
repnz
jmp
repnz
cs
arpl
test
push
push
adc
out
mov
mov
mov
push
or
loope
and
aam
inc
xlat
inc
mov
push
inc
jl
mov
dec
add
je
xor
and
filds
add
xor
and
mov
mov
rcrb
mov
stos
lods
popf
push
or
jbe
int
out
outsb
inc
mov
xchg
hlt
add
sub
mov
or
push
pop
mov
out
cmpsb
mov
and
xchg
jecxz
sti
call
mov
shrl
aad
fidivrl
lcall
lods
shl
scas
cwtl
das
jge
aas
push
push
loop
mov
pusha
aad
pushf
xchg
push
jge
clc
and
dec
sbb
aaa
dec
mov
adc
cmpsl
add
das
aaa
outsl
xchg
negl
mov
dec
fld
cmp
icebp
xor
pop
inc
lds
jl
fstpl
mov
ja
cmp
test
ret
shlb
rcl
ret
pop
sahf
jmp
les
inc
repnz
dec
mov
in
push
adc
add
add
mov
orb
aas
mov
cltd
adc
dec
pop
outsb
jp
sbb
ljmp
ja
xchg
call
inc
shlb
add
ret
jecxz
mov
rolb
add
outsb
push
rolb
pop
push
test
es
mov
pushf
sbbl
pop
js
jl
shlb
fwait
pusha
aaa
out
jne
cmpsl
ret
fwait
loope
xor
loopne
mov
adc
sahf
ljmp
jbe
insb
push
outsb
fiaddl
xchg
sbb
push
call
jae
and
inc
ja
jo
push
push
push
xor
mov
push
cmpsl
jle
xchg
push
repz
scas
mov
jnp
cmpsl
xor
mov
aad
cmc
push
aam
dec
aaa
mov
shlb
sbb
rolb
lods
ret
sbbb
jo
aam
sub
pop
inc
je
push
xchg
push
ja
in
push
arpl
mov
mov
mov
stos
xor
jb
fabs
ljmp
pop
jecxz
lods
cli
and
mov
push
and
subl
jae
adc
ds
jbe
adc
xchg
outsb
jb
lcall
sub
outsb
xlat
pusha
fiadds
pop
push
lds
add
cmp
cmp
ss
clc
shrb
adc
fisubs
jmp
mov
jmp
xchg
push
ss
addr16
scas
jo
inc
xchg
stos
pop
test
outsb
fidivs
lret
test
push
lds
pusha
aaa
das
push
arpl
jo
test
in
call
and
jnp
jbe
cli
mov
xor
and
filds
add
cli
mov
xor
and
push
mov
shlb
mov
mov
in
bound
cmp
mov
das
xchg
outsb
cmpsl
sub
outsb
filds
dec
arpl
ret
sti
sti
xchg
in
bound
and
hlt
cmp
jne
sub
sbbl
call
imul
jbe
testl
push
fwait
and
mov
push
loop
push
hlt
addb
inc
dec
out
popa
add
rorb
rdpmc
mov
jl
insb
pop
int
mov
dec
inc
jl
insb
pop
int3
inc
mov
dec
and
jae
cltd
in
insb
in
loop
and
cld
daa
je
mov
mov
inc
out
daa
mov
js
movsl
inc
icebp
add
xor
mov
data16
sti
aas
nop
and
jbe
sbb
shrl
push
sub
cpuid
test
js
cmp
pop
mov
js
cmp
data16
lret
sbb
fldenv
inc
dec
xchg
inc
push
dec
and
push
cmp
jns
outsb
inc
mov
ficoml
ficoml
aad
insb
mov
pop
out
push
and
lock
inc
in
andl
insl
add
pusha
cmp
imulb
jl
insb
pop
imul
stos
js
testl
js
lds
aad
fwait
aaa
cmp
cmc
sbbb
test
and
cwtl
adc
push
jge
mov
mov
push
nopl
adc
test
xchg
rcll
shlb
adc
ja
bound
test
test
push
aaa
loop
adc
push
testb
addr16
inc
js
loope
inc
sbb
push
stos
sbb
fdivl
push
and
shl
loop
idiv
inc
insb
fwait
outsb
xorl
mov
pop
sub
inc
movsl
jl
mov
fisubl
test
ds
in
loop
xchg
fnsave
out
push
pop
insb
lods
add
push
jmp
push
add
mov
inc
sbb
call
pop
fstpl
sbb
xor
addr16
shlb
and
stos
nop
inc
shlb
testb
and
push
shrl
out
mov
sarl
and
mov
mov
jge
sti
shlb
testb
push
dec
outsl
lods
jo
xchg
aam
divb
xchg
sub
jp
fdivrs
sbb
fwait
loope
ret
je
mov
lds
mov
fsubl
testb
rcpps
das
xor
stos
out
adcb
pop
out
rcrb
imul
pop
dec
cwtl
insl
in
sbb
cwtl
das
pop
inc
mov
call
sub
adc
adc
insl
fbld
negb
insl
enter
fdivrs
jmp
inc
lods
lret
push
xchg
subb
loopne
movsl
cltd
arpl
rolb
inc
int
shlb
fcomps
in
sbbb
pop
pop
xchg
das
jmp
mov
sbb
push
aad
imul
adc
add
lea
sub
loop
mov
and
scas
fwait
jecxz
in
ljmp
jne
jecxz
fidivrl
in
push
loop
je
loop
loop
cmc
pop
inc
mov
lret
or
js
iret
ret
cwtl
xchg
cmc
call
and
xchg
ret
rorl
push
and
cld
out
mov
sbb
xor
inc
xor
inc
outsl
xor
outsb
jb
in
and
shll
sub
jge
call
mov
pop
push
notb
dec
and
and
push
sbb
adcl
cwtl
cwtl
xchg
arpl
xorb
rclb
push
cmpsl
or
push
ret
shll
mov
pop
or
and
pop
aaa
insb
and
jne
add
and
or
inc
pop
out
movsl
pop
dec
adc
cwtl
xchg
jns
xor
cmc
mov
sbb
insb
xorl
testb
and
data16
sub
mov
inc
push
lret
pop
inc
push
cwtl
aad
sbb
xlat
mov
push
daa
iret
and
cltd
and
inc
xchg
push
mov
add
or
and
mov
jo
insb
pushl
mov
test
mov
fisttps
sub
loop
pop
rcrb
mov
loopne
sbb
push
ljmp
fists
pop
mov
shlb
or
test
rcrb
into
push
pushf
dec
lock
repnz
fldt
dec
adc
cmp
jae
icebp
inc
xor
sti
jbe
loop
pop
rcll
das
cmc
push
mov
fidivl
imul
and
cwtl
repz
adc
or
stos
bnd
aas
lods
test
xchg
stc
fists
call
popa
pop
push
ftst
jp
aaa
out
cwtl
add
cmpsb
push
sub
jno
mov
push
std
test
dec
movsl
mov
mov
and
jmp
pop
imul
hlt
fsubs
das
outsb
divb
sbb
or
ret
mov
jmp
mov
mov
loop
sbb
lock
and
pop
outsl
les
mov
sub
js
popa
pop
or
shll
pusha
je
inc
dec
cmpsl
mov
repnz
mov
add
cmp
es
leave
repnz
ds
pushf
fsts
dec
dec
inc
xchg
dec
add
push
mov
call
sbb
div
and
mov
dec
pop
arpl
test
fcomps
jle
mov
fcomi
push
xchg
mov
push
xor
push
das
pusha
inc
push
and
pusha
je
aaa
xchg
sbb
or
subl
pop
add
insb
and
mov
and
imul
arpl
shlb
jno
out
jb
sub
adcb
jbe
fdivrs
sub
fimuls
push
imull
std
fs
add
insl
daa
pop
je
pusha
mov
xor
ret
jbe
addr16
arpl
inc
push
jbe
mov
fidivs
inc
bound
nop
and
mov
dec
loop
inc
push
and
rorl
mov
mov
xchg
push
sbb
rcrl
aas
mov
insl
mov
or
fwait
outsb
test
pop
test
cwtl
aad
insl
mov
in
push
and
es
stos
divl
inc
aaa
dec
and
xor
mov
leave
lcall
imul
xchg
adc
mov
das
ret
subl
lcall
xchg
imul
arpl
movsl
adc
popf
adcl
aam
dec
call
jg
and
dec
cltd
addr16
mov
bound
test
movsl
xor
xchg
or
insb
arpl
add
loop
loop
sub
xchg
ja
daa
sub
mov
xor
in
xchg
xlat
dec
jne
popa
inc
loope
dec
mov
test
xor
sub
addr16
adc
pop
arpl
xchg
xor
xor
arpl
ds
mov
hlt
and
and
test
mov
cltd
sub
aam
ja
outsb
loopne
add
out
icebp
dec
sub
les
mov
jmp
cmp
jmp
inc
mov
push
xchg
fnstcw
and
inc
stc
mov
push
pop
inc
xchg
and
mov
ret
pop
jne
push
aas
sub
inc
xor
loop
mov
xchg
inc
fildl
adcb
inc
jb
xor
xor
fwait
inc
das
mov
inc
insl
push
movsl
shrl
jmp
outsb
rorl
push
imul
das
pusha
push
push
movsb
mov
mov
push
loop
or
aaa
movsb
pop
pop
lock
inc
jbe
ret
mov
sbb
mov
mov
in
push
inc
push
jae
sub
or
pop
fcom
xchg
movntq
sti
push
out
sub
mov
sub
dec
and
jecxz,pn
xchg
jbe
sub
push
idiv
fidivl
mov
xchg
outsb
dec
fistpll
scas
add
into
out
insb
jmp
pop
flds
dec
push
and
mov
outsb
test
lds
push
dec
out
jo
sti
inc
movsb
xor
adc
ja
inc
shll
je
xor
dec
jb
xchg
inc
ds
push
pusha
push
les
mov
xor
sub
jbe
popa
and
mulb
inc
jecxz
fnstenv
sub
lds
jnp
sahf
lret
cld
inc
cmp
add
push
and
cmc
inc
or
fmul
pusha
dec
stc
dec
jo
sbb
jne
sub
inc
aam
push
inc
mov
fiaddl
push
add
les
cmc
add
leave
dec
and
imul
movsl
sub
sti
and
stos
xor
sti
xor
mov
bound
or
bound
loope
mov
push
orb
or
popa
loop
pop
fnstsw
xchg
mov
gs
cmpsb
test
pusha
decl
xchg
dec
cmp
bound
in
stos
aaa
push
push
jns
mov
js
jb
imul
inc
dec
cli
shlb
push
jmp
movsb
mov
scas
xor
and
adc
add
movsb
aas
xchg
jbe
inc
xchg
adc
push
jmp
test
dec
shll
ret
pop
and
outsb
popa
pop
add
sbb
cmp
dec
or
mov
test
inc
push
dec
pusha
mov
in
and
add
scas
outsl
fs
arpl
add
lods
add
mov
cmpsb
lcall
and
jg
mov
popa
rcl
mov
cwtl
mov
out
dec
push
pusha
in
insb
push
sub
or
jmp
pop
imul
cmp
in
jo
jecxz
rcr
sbb
adc
outsb
mov
aaa
add
inc
jnp
imulb
adc
push
and
inc
call
imul
fisubl
inc
jecxz
adc
jecxz
xchg
pop
sub
and
pop
sub
xor
int
or
psubd
js
pusha
add
mov
push
cwtl
cwtl
adc
push
lods
cmp
adcl
xor
jmp
not
out
jns
push
ss
push
rcrb
mov
push
jnp
pusha
xchg
pusha
inc
dec
lods
ljmp
jge
icebp
shlb
mov
push
call
and
arpl
ja
cli
mov
pop
iret
inc
outsb
xlat
mov
inc
stos
and
ds
inc
mov
stc
pop
les
loop
gs
xor
rcrb
outsl
push
in
repnz
outsb
adc
mov
lods
jno
adc
sbb
lret
ret
pop
sbb
mov
sub
mov
inc
fsubrl
es
loopne
pop
push
ljmp
es
les
push
xchg
insb
and
or
aas
push
arpl
xchg
xor
xchg
mov
dec
sub
arpl
rol
xchg
mov
jne
daa
fs
loop
ja
fdivs
js
out
out
shlb
push
push
dec
add
pop
jb
and
imul
and
mov
divb
stos
in
inc
inc
ret
arpl
js
shrb
push
sub
and
lahf
jo
outsb
bound
jb
subl
pop
js
xchg
outsb
adc
adc
outsb
shrl
je
jo
std
rcl
add
push
xor
popa
ror
pop
push
push
scas
arpl
pop
adc
push
rcrb
mov
cmpsl
divb
test
inc
push
shl
shrl
push
jecxz
test
pop
cmpsl
divb
inc
push
shl
subb
fwait
jecxz
outsb
icebp
rcrb
rcrb
into
xchg
jo
outsb
xor
inc
or
and
and
jb
int3
ret
inc
and
fsts
mov
xchg
mov
dec
insl
loop
mov
ljmp
jl
mov
push
lea
fstps
adc
sub
inc
je
loop
dec
out
fiaddl
mov
mov
adc
xchg
ss
dec
mov
imul
mov
sub
ja
jbe
jp
ret
pop
out
pop
mov
xor
cli
add
cmp
nop
push
clc
inc
daa
loop
jae
inc
xor
mov
xchg
fwait
shlb
lret
xchg
push
daa
loop
neg
xor
inc
add
imul
jle
cmp
jnp
add
inc
outsb
aad
movsb
inc
and
inc
mov
add
mov
xchg
xchg
je
adcl
and
ja
jbe
fwait
ljmp
negb
fisubl
and
call
jb
push
xor
popa
lahf
ljmp
negb
inc
bound
push
test
pusha
xchg
outsb
testb
je
insl
add
lahf
mov
or
adc
outsb
xchg
inc
lods
lahf
push
das
lods
push
and
push
inc
outsb
push
daa
adc
loope
mov
aam
inc
shr
subl
gs
push
pop
xchg
ret
loop
push
pop
xchg
ret
loop
push
pop
xchg
ret
loop
push
pop
xchg
ret
loop
push
pop
xchg
mov
add
sub
outsb
add
inc
mov
fisubrl
ds
push
je
add
bound
loop
loope
cmp
xchg
xor
cmpsl
in
repnz
in
ja
and
inc
mov
aam
or
scas
xor
lods
push
test
aam
adc
decb
jecxz
adc
int
push
outsb
jge
ror
jo
jp
lret
in
dec
fwait
and
and
and
add
sbb
pop
xchg
cmpsl
arpl
mov
loope
push
xor
loope
outsb
lahf
xchg
mov
cmc
or
and
js
jmp
push
mov
jbe
push
jno
sub
cmp
pop
test
mov
or
call
xchg
push
jns
or
add
fs
xor
jbe
mov
mov
add
sbb
pop
add
mov
xor
int
push
insl
pop
call
pop
mov
mov
mov
push
out
xchg
jb
inc
push
mov
dec
jnp
sub
in
pop
xchg
stos
fwait
test
vpshld
insb
cmp
cmp
pop
scas
sbb
fwait
cltd
push
jns
dec
jo
cwtl
push
sarl
hlt
divb
das
jne
dec
dec
out
sbb
jecxz
push
outsb
mov
dec
add
pop
es
xor
inc
fwait
mov
dec
fidivl
pop
sub
push
loope
lods
in
popf
xor
mov
xchg
and
and
mov
fimull
roll
enter
push
in
xchg
imulb
and
in
fsubl
in
loop
cmpsb
pop
xor
sahf
xchg
int3
dec
lock
jno
mov
outsb
in
push
mov
jecxz
outsb
cmpsl
arpl
mov
sub
mov
repnz
xor
xchg
sbb
ret
inc
and
inc
add
mov
popf
ss
je
je
jl
hlt
rorb
js
xor
lea
sbb
lock
jecxz
je
daa
inc
inc
out
mov
ret
jnp
jmp
xchg
dec
sub
sbb
bound
imul
shll
xor
fwait
jne
inc
mov
add
mov
pop
fwait
push
loope
xchg
in
sbb
mov
or
sub
push
daa
rolb
in
sbb
testb
call
pop
loop
mov
bound
mov
mov
ss
rorl
pop
inc
sbb
push
sub
fildll
mov
pop
je
repnz
call
sbbb
loope
mov
inc
sahf
sahf
decb
js
popa
inc
out
inc
add
xchg
mov
aaa
push
inc
mov
imul
xor
mov
aaa
loope
jo
bound
xor
jecxz
subb
mov
mov
shrb
mov
and
loop
push
add
test
xchg
dec
ss
insb
sub
add
mov
inc
or
add
pop
mov
xor
cli
int3
inc
aas
enter
mov
addr16
xchg
xlat
mov
mov
das
jb
les
mov
jp
popa
jl
insb
push
mov
in
in
push
mov
sbb
sub
repnz
mov
cmc
jno
mov
arpl
lods
mov
rcrl
mov
aad
loope
and
cmp
mov
cltd
sbb
dec
aaa
shlb
rolb
xor
jne
cli
fwait
pusha
nop
scas
aaa
test
loop
adc
imul
sbb
scas
mov
push
add
jmp
cmp
jl
pusha
das
inc
inc
shrl
ret
xchg
test
iret
mov
cmp
addr16
inc
jbe
mov
stos
mov
test
aam
and
lods
loopne
popa
outsl
outsb
pushf
ds
push
pop
mov
mov
stc
ja
test
bound
stos
scas
sbb
cmc
cmp
mov
add
mov
jae
add
test
ss
inc
xor
jge
jmp
add
mov
popf
gs
pop
out
lds
jmp
repnz
insl
mov
sub
inc
cmp
mov
movsl
dec
inc
cld
ret
push
xor
and
sub
or
inc
mov
ds
push
or
lods
sub
inc
or
dec
cmp
mov
or
mov
popf
mov
fwait
mov
xor
xor
and
or
dec
test
xor
loope
sbb
sahf
daa
jbe
sbb
or
push
imul
jb
psubsw
cmp
js
sbb
div
scas
or
aas
sub
jb
in
fistpll
push
mov
xor
pusha
mov
icebp
xorb
xor
stc
lcall
aaa
inc
sub
inc
push
inc
gs
cld
movsl
push
adc
pmullw
mov
and
lret
xor
lock
mov
pop
cmc
addr16
aam
ret
cmp
cmpb
adc
daa
outsl
repz
dec
loopne
jbe
push
sub
and
test
inc
cld
jl
loope
pusha
ljmp
test
or
pop
inc
add
pusha
cwtl
ljmp
ret
dec
adc
in
mov
xchg
and
hlt
xor
in
push
rorb
outsl
xchg
xchg
pop
dec
je
mov
lahf
add
jg
or
stc
dec
fwait
jg
or
aam
loop
xor
cmp
inc
dec
adc
insb
aaa
jecxz
pop
mov
or
mov
push
out
popf
and
je
add
cmpsb
insb
jecxz
xchg
lds
clc
pop
movb
repnz
je
leave
lods
pop
inc
pop
dec
jge
pusha
or
icebp
mov
mov
xorb
outsb
enter
ret
mov
imul
cmp
pop
adcb
add
cmpsb
sbb
jae
cmc
push
inc
sub
jmp
shlb
test
into
push
jo
and
loop
ja
lea
mov
in
jg
sub
cwtl
je
xchg
mov
popa
outsl
pop
cmp
lcall
out
mov
outsl
mov
push
sub
mov
sub
sahf
add
jae
rol
data16
std
xor
sahf
and
aaa
loope
mov
aaa
call
push
ficomps
cltd
sahf
xchg
pusha
push
sahf
test
test
data16
sbb
xchg
arpl
lcall
aaa
push
in
dec
sahf
mov
mov
fldcw
shlb
mov
push
cmp
int
pop
xor
imul
rcll
roll
jns
or
jg
fs
and
sub
xor
mov
dec
inc
inc
and
ds
jecxz
jecxz
into
ds
jbe
sbb
push
div
and
addr16
ret
add
mov
lods
ret
fisubrl
lcall
pop
jns
sbb
cltd
inc
xchg
push
pusha
xchg
mov
es
jns
push
push
inc
lcall
lret
imul
fildl
pop
movsl
fneni(8087
or
and
mov
adc
pop
repnz
das
or
icebp
push
jns
xchg
fsubr
arpl
sub
xor
jb
jbe
outsl
jmp
mov
and
daa
and
aaa
outsl
notb
ss
mov
or
push
pushf
and
sub
lds
filds
inc
mov
das
les
jb
adc
inc
xor
hlt
loopne
lods
iret
dec
xchg
mov
adc
popf
shrl
ficoms
pop
jecxz
push
dec
fdiv
mov
rolb
insl
ja
jno
sbb
push
scas
cltd
je
and
ss
lret
ret
arpl
fucom
sub
shrb
pop
rcr
push
xor
andl
out
jecxz
push
dec
cli
adc
pop
jge
push
mov
out
mov
popf
into
push
add
shll
fwait
ror
out
test
pop
call
addr16
pop
sub
pop
movsl
cli
sub
jbe
push
nop
bound
fisttpll
or
adc
jbe
push
sub
outsb
scas
out
lods
daa
insb
arpl
shrb
fildl
adc
xchg
xchg
add
fsubrs
push
and
js
push
loope
xor
dec
out
add
or
rorl
push
adc
int3
jnp
out
xchg
mov
dec
mov
cmp
push
sub
stc
in
bound
jle
fdivrs
cmp
cmp
divl
stc
mov
pop
pop
push
and
xor
shll
dec
mov
sti
addl
inc
loopne
and
xlat
loopne
das
and
mov
loop
outsb
xchg
mov
mov
cmovp
add
mov
push
les
cltd
sub
fcoms
scas
in
daa
cli
xchg
in
pmullw
sahf
or
xchg
push
pop
push
xchg
push
mov
push
xor
mov
insl
mov
and
outsb
push
aaa
out
rclb
sub
test
cwtl
in
gs
mov
adc
cmp
outsb
std
out
mov
fidivl
cmpsb
push
pop
shl
hlt
pushl
mov
jecxz
fistpl
mov
scas
cltd
inc
push
and
int3
pop
cli
dec
test
pop
popa
sbb
sub
call
mov
sbb
popf
lret
fsubrp
jb
call
jb
test
mov
xchg
leave
cmpsl
jno
das
mov
enter
cwtl
inc
lea
arpl
inc
not
add
rcll
hlt
jbe
add
and
adc
lcall
nop
arpl
inc
cmp
iret
mov
ljmp
sbb
shlb
dec
scas
shrl
add
push
mov
add
xor
xchg
mov
shll
popf
orb
sub
mov
mov
push
scas
jg
ss
push
cmp
divb
and
mov
jnp
popf
xor
mov
jno
jb
push
call
in
mov
push
jle
and
jno
mov
iret
and
in
push
sbb
addr16
mov
cwtl
fwait
mov
xchg
frstor
gs
outsb
out
cmp
add
mov
lods
push
sbb
ja
es
jge
pushf
mov
mov
xor
mov
pop
add
xor
xchg
push
dec
fdivr
xchg
ret
das
push
inc
outsb
ss
mov
es
cwtl
pop
dec
jle
in
inc
inc
mov
cmc
inc
test
mov
jb
imul
cli
arpl
imul
in
and
rolb
arpl
xchg
daa
sbb
inc
mov
adc
xorb
push
sub
out
sub
das
sub
into
xor
jge
push
std
imul
inc
dec
adc
das
inc
sbb
aaa
hlt
xor
mov
mov
in
cmp
jne
push
call
popa
fisubs
cmp
cmpsb
or
jmp
push
lahf
cld
movsb
ljmp
mov
bound
idivb
imul
sub
leave
sub
sbb
outsb
imul
pop
mov
or
and
addr16
cmp
dec
int
xor
dec
nop
es
jb
xchg
or
shll
mov
or
outsl
out
movsl
pop
sub
pop
jecxz
in
mov
and
ficomps
xor
mov
sbb
jg
dec
xor
cmp
add
dec
mov
or
inc
inc
push
mov
pop
stos
pushf
mov
outsb
out
dec
and
jo
fisubl
pushfw
mov
aad
fdivp
outsl
mov
cmc
loop
insb
fstps
push
pusha
inc
sbbl
or
push
mov
jb
cmp
data16
fwait
je
cmpsl
cld
cmp
jo
test
pushf
insb
movsb
aam
pop
jg
and
mov
dec
sbbb
nop
and
das
xor
loopne
cmc
pop
jmp
ljmp
push
jl
je
push
jb
ror
push
push
std
fidivs
int
push
loop
and
sub
jne
sub
popa
push
outsl
das
xchg
bound
scas
mov
push
test
jl
pop
data16
rol
adc
pop
xchg
lcall
sub
fisubl
sub
push
push
out
das
fidivl
push
lahf
inc
call
mov
in
or
les
out
pop
push
lahf
add
xchg
test
out
push
adc
in
pop
out
push
sub
loopne
out
call
pop
inc
stc
dec
test
call
push
sbb
in
and
je
loopne
ret
mov
xchg
xor
push
cwtl
sbb
fadd
ss
test
add
jnp
jecxz
and
ss
xor
pusha
andps
push
loopne
dec
ret
sub
outsb
or
pusha
outsb
push
sub
cwtl
ret
jecxz
push
sub
push
inc
xchg
pop
into
pusha
jecxz
stos
push
and
push
aad
dec
hlt
inc
outsb
xchg
call
mov
pop
sbb
and
xor
mov
add
adc
inc
jbe
addr16
jbe
mov
push
jbe
dec
inc
fisttps
mov
test
dec
sbb
sahf
dec
pusha
in
push
aaa
rcll
loopne
mov
daa
pop
loop
inc
push
call
pop
mov
ret
insb
loopne
jo
fcoms
aaa
or
xchg
jbe
inc
dec
lret
in
lds
mov
pop
ds
dec
mov
sub
ds
out
sub
push
pop
fwait
outsb
sbb
aam
fiaddl
ljmp
xchg
ret
push
dec
mov
arpl
ss
in
lret
xchg
push
outsb
adc
in
push
movb
sub
rcr
int
push
hlt
fdivl
mov
cmc
outsl
shlb
add
outsb
push
pop
mov
out
sbb
sub
outsl
dec
outsb
fs
cli
scas
addr16
add
pop
in
dec
adc
out
pop
inc
es
into
sub
hlt
adc
mov
notb
arpl
loopne
mov
xor
test
sbbb
fsubr
jnp
lret
stos
xchg
bound
sub
sub
in
jmp
xor
or
ds
stos
mov
or
lods
pop
insb
loop
mov
jns
jmp
cmp
sti
lret
fcmovbe
push
adc
in
sub
sub
js
test
and
test
test
test
stos
js
push
popa
pop
xchg
cmpsl
rclb
movsl
outsl
and
test
sti
mov
notb
jecxz
dec
ret
xlat
xor
mov
and
mov
jmp
jl
ljmp
jmp
xor
lods
jns
xchg
sub
sub
mov
mov
aam
or
shl
push
ljmp
cmp
push
cmp
test
sub
mov
inc
repz
lret
mov
inc
ja
push
dec
inc
lret
ret
lds
mov
mov
pop
sbb
bound
jo
dec
ficoml
test
jmp
xor
jae
loop
xor
int3
aad
mov
inc
outsb
mov
inc
movsl
xchg
ss
je
inc
outsb
and
lds
or
jmp
and
test
and
loop
jecxz
call
loope
and
sti
jle
in
js
nop
bound
outsb
ret
jl
outsl
cmove
pop
aas
out
ljmp
insl
test
xchg
call
in
mov
arpl
xchg
lods
mov
scas
aas
adc
dec
xor
test
xor
jb
sbb
pop
mov
pop
sub
mov
hlt
xchg
testl
inc
inc
sbb
cli
aam
test
and
lods
cmp
jbe
xor
dec
arpl
cmp
mov
je
imul
subb
outsb
popa
mov
jecxz
pop
dec
jg
jle
dec
test
cs
insb
xchg
xchg
mov
adc
aam
addr16
push
shl
xchg
xchg
mov
rolb
test
out
cmpsb
mov
and
hlt
data16
rolb
int3
test
int
out
scas
dec
int3
incl
ljmp
mov
jne
int
sub
mov
adc
push
lods
adc
insb
ret
lret
ror
jmp
xchg
add
mov
pop
mov
mov
movsl
xchg
loop
ficoml
es
or
pop
aad
outsb
and
jo
repnz
and
mov
mov
xchg
xchg
ret
and
add
mov
aaa
stos
cli
fisubrl
mov
pop
ret
fldt
fisubrl
mov
xchg
add
mov
sbb
push
jb
mov
cmp
mov
shl
mov
add
imul
hlt
rcl
shrb
pushf
or
and
mull
pop
loop
cwtl
lods
mov
push
hlt
outsb
cmp
in
lcall
aad
out
fisubrl
cltd
stos
lcall
xor
sub
mov
aad
fildl
add
andb
shrb
call
inc
mov
subb
sbb
jecxz
sub
lods
inc
scas
loop
outsb
dec
je
in
outsl
cltd
ja
ja
addr16
arpl
xchg
sbb
insl
push
sub
jns
insl
subl
es
bound
lret
pop
rcrb
push
mov
push
cs
sub
and
pop
mov
add
cwtl
sub
inc
sub
push
and
test
into
push
push
loop
adc
shrl
dec
test
repnz
jecxz
pushf
imulb
sub
mov
and
pop
xchg
cli
ja
mov
pop
xor
fsubrl
cmpsb
xor
mov
push
popf
inc
cs
mov
and
adc
inc
das
jge
push
mov
pop
lcall
cli
pop
fildll
adc
push
out
cmp
cwtl
push
adc
mov
cmp
lret
shr
outsb
and
lea
jecxz
jo
xchg
mov
or
outsb
dec
push
pop
arpl
or
fsubr
push
pusha
xor
das
mov
inc
outsb
add
insl
inc
push
and
stos
inc
outsb
adc
loop
jl
mov
imul
and
mov
gs
call
sbb
dec
add
loope
movsb
popa
sub
scas
push
cmpsl
ds
push
pop
into
or
xchg
subb
pop
cmpsl
xchg
mov
jne
mov
ljmp
popl
push
mov
sub
fldcw
pop
cmp
sbbl
inc
ljmp
les
inc
jne
pushf
push
cmp
mov
mov
jbe
fnstenv
pop
jne
push
jbe
vpaddsb
pushf
lea
das
mov
jbe
inc
xchg
mov
ss
fistps
rcrb
clc
into
enter
pushf
push
pop
mov
sub
lds
mov
icebp
pop
iret
jge
jb
mov
out
mov
mov
mov
call
gs
dec
sub
xchg
sub
clc
push
cmp
and
sub
jge
std
fs
push
cmp
sbb
lods
cmp
je
sbbb
clc
fiaddl
add
or
dec
add
pusha
lea
push
cmp
push
dec
cli
push
dec
cli
pusha
cld
dec
mov
mov
push
jb
notb
cs
xchg
inc
outsb
pop
dec
push
ror
fidivrs
imul
and
sub
sub
mul
std
inc
pop
cltd
outsl
repnz
push
fcomi
inc
stos
aam
psrld
pushf
xchg
fistpl
and
xor
pop
int
sub
insb
ja
scas
pop
mov
insb
or
lret
sub
and
stc
mov
inc
ficomps
xor
jp
cltd
adc
or
and
xlat
sub
and
mov
movsl
movsb
pop
xchg
mov
cmp
ja
and
add
push
in
cli
push
in
fwait
dec
insb
cmp
and
in
add
in
icebp
dec
push
outsb
shr
adc
add
cld
lea
dec
mov
push
push
add
cld
add
cld
add
cld
add
cld
jae
daa
cld
push
pop
inc
pop
jb
insb
shll
fistpl
mov
xchg
push
sub
push
xor
data16
pop
jle
imul
push
fs
pop
xchg
xchg
mov
mov
push
loopne
icebp
loop
or
mov
or
cmpsb
fs
imul
push
or
xchg
push
and
xor
push
inc
sbb
pop
sbb
jl
outsb
sub
cli
sbb
push
sbb
cmp
mov
push
aad
push
sbb
push
jne
push
bound
push
sbbb
sbb
push
and
sbb
jb
fcmovne
push
scas
mov
loop
jl
testb
lds
enter
out
mov
inc
cmp
and
in
test
add
addr16
arpl
dec
sbb
std
jne
ja
mov
shrb
pop
sbb
es
and
pop
xlat
dec
call
sbb
aam
call
fbstp
test
mov
movb
cmp
mov
sub
cwtl
stos
mov
adc
push
push
jo
andl
sbb
xor
push
push
inc
sbbb
shrl
aam
sarb
mov
mov
inc
push
xor
add
pop
insl
fsubs
cmpsl
push
stos
xor
daa
lds
lods
pop
sub
insl
cmpsb
lcall
jne
adc
popa
lds
aaa
jne
cmpsl
lods
dec
stos
fsubrp
mov
iret
cmc
stos
std
cmp
xor
and
popl
into
jae
mov
out
je
lods
leave
loopne
ret
out
insb
testb
into
inc
pop
push
mov
xor
adc
or
aaa
xor
outsb
and
fsubr
repnz
sarb
loop
fdivrl
out
cmp
jbe
lcall
imul
in
push
jb
jne
out
xchg
fsubrl
inc
ret
popa
idiv
cmp
dec
jbe
fadds
push
mov
stos
xlat
fiadds
mov
call
pop
push
jp
and
push
das
or
adc
xor
jne
mov
jbe
mov
push
mov
sub
fistpll
cmpsl
pop
fdivl
mov
lahf
inc
push
les
pushf
and
ljmp
fdivrp
lea
insb
sbb
push
repz
repz
cmpsl
push
jp
icebp
lods
popf
push
out
repz
dec
sub
pop
or
sub
lret
lret
and
aas
outsb
push
push
push
dec
out
loop
test
lcall
sub
shrb
imul
cmpsl
cli
xchg
pop
shll
outsb
adc
mov
mov
loop
mov
daa
add
pusha
imul
pop
imul
xchg
jmp
fsubrs
das
push
call
scas
mull
pop
jp
xchg
rcrb
ds
scas
enter
push
sub
mov
push
dec
lcall
xchg
and
xor
xor
and
out
das
or
mov
testb
arpl
rcrl
xchg
mov
xor
les
mov
xor
jne
push
shll
outsb
xor
push
loop
pop
fisubl
fcoms
lcall
daa
hlt
das
lods
lea
push
sub
mov
dec
sub
mov
test
lret
mov
mov
xchg
mov
xor
push
sbb
and
popa
popf
sbb
sarb
iret
test
xor
jbe
dec
xchg
popf
cli
sub
jbe
pop
shl
fs
fcomps
out
lea
je
pusha
into
sbb
mov
mov
punpckldq
sbb
call
in
pop
repnz
ret
sub
cmp
mov
in
es
daa
mov
jbe
jns
xor
sub
das
mov
cmc
cmpsl
adc
jecxz
and
cmp
xchg
shl
popf
or
mov
sub
leave
cmp
ret
jg
insl
push
in
and
pop
stc
cmp
stos
stos
cmp
sbb
cmp
push
mov
lock
sub
xor
ret
add
ret
push
enter
sub
inc
jb
adc
pop
dec
hlt
push
xchg
addb
cmp
ja
dec
fsubp
jno
mov
pop
cmp
icebp
aas
lods
mov
iret
jl
loope
pop
lds
insb
std
icebp
cmpsl
lods
mov
mov
mov
jl
jb
pop
inc
cmp
fs
data16
push
pop
sbb
sarb
inc
jp
push
outsb
pop
sti
iret
and
pop
mov
fbld
imul
rorb
cltd
pop
push
cmp
data16
mov
loope
ret
aaa
pop
mov
lds
sub
icebp
jb
pop
and
fsubrp
inc
inc
negb
push
imul
xor
pop
and
imul
jmp
add
scas
sbb
xchg
jmp
and
jl
xchg
pop
mov
and
paddusw
je
loope
loop
mov
insl
xor
pop
sub
aad
insl
add
hlt
scas
inc
call
in
or
mov
daa
ja
sub
pop
sub
cmp
into
and
dec
lock
lds
push
and
cmpb
jmp
fs
pop
fcmove
xor
mov
fs
pop
inc
iret
lds
dec
cmp
xor
test
bound
ror
sbb
cmp
test
imul
into
fwait
cmpsl
sbb
jmp
mov
inc
jb
scas
rcll
sbb
lahf
pop
jae
xor
sbb
and
fwait
or
insb
push
or
or
js
push
and
or
rcll
mov
sbb
fucom
inc
mov
sbb
inc
arpl
or
cmc
pop
mov
or
es
arpl
cmp
ret
fildl
nop
ds
cs
cld
xor
pusha
ja
jl
imul
push
in
std
adc
addr16
pop
daa
shrl
jns
mov
loope
loop
enter
bound
jg
xchg
xor
add
pop
pop
cwtl
cmpsl
push
fwait
es
notl
testb
xchg
jmp
stos
movsb
aas
pop
push
adc
insb
mov
xchg
lret
sbbb
in
inc
xchg
xor
mov
cmpsl
jnp
nop
sbb
or
loop
mov
ljmp
push
push
sarb
add
shlb
push
out
dec
sub
roll
pop
add
out
add
mov
sar
and
je
scas
clc
mov
pusha
pop
call
xchg
sti
ss
mov
mov
subb
cmp
test
add
gs
add
dec
sub
mov
xor
cmc
pop
seto
xchg
into
xor
mov
and
jae
push
push
mov
push
dec
cwtl
add
xchg
add
sub
stos
aam
push
lds
lret
frstor
push
dec
jecxz
sbb
dec
cltd
cmc
gs
and
scas
pusha
mov
in
mov
test
sbb
dec
cmpb
push
pusha
outsb
ja
mov
sti
and
arpl
je
pop
or
test
add
inc
push
xor
fwait
sbb
xchg
jecxz
xchg
frstor
sar
cmc
mov
fcoml
iret
inc
push
pop
popa
aaa
mov
adcl
in
shlb
fistl
push
mov
pop
pop
adc
xor
lahf
pop
leave
sbb
test
leave
movsl
lret
sub
lods
aaa
sub
into
mov
mov
sub
aad
test
inc
sub
push
push
and
push
leave
xor
lret
test
mov
loop
fmul
mov
in
outsb
lret
arpl
push
sahf
inc
out
jmp
adc
jecxz
mov
iret
sti
sarb
push
mov
rolb
jne
jnp
xchg
push
adc
imul
adc
and
mov
mov
lcall
sbb
mov
cmc
scas
sbb
pop
ficompl
je
fisubrl
xlat
push
xchg
xchg
arpl
jae
adc
movsb
adc
outsb
dec
mov
pusha
xchg
xor
int
popf
xor
mov
bound
mov
inc
enter
mov
xor
jns
ret
cwtl
insl
sahf
sub
cs
xchg
jp
in
sarb
mov
leave
jno
pop
cmp
xchg
sub
mov
test
xor
sbb
aad
in
roll
in
dec
jle
jge
xchg
add
sub
mov
into
fld
dec
mov
out
and
mov
xor
inc
icebp
fucomip
ret
sub
xor
lods
loopne
inc
xor
je
and
pop
xor
out
testl
idivb
lahf
jno
add
xchg
xchg
stos
fisttps
in
jmp
sub
add
aam
cmp
pop
fisubl
or
inc
fisubrl
mov
test
xlat
push
lods
or
and
movsl
push
addr16
popa
inc
movsb
lahf
fiaddl
repnz
out
ret
and
sbb
jo
outsb
dec
out
lahf
push
cwtl
jmp
xorb
cvtpi2ps
pop
aad
dec
adc
cmp
xchg
push
cmp
mov
mov
fxch
popa
cmp
xchg
cmp
js
movsb
loopne
pop
test
cmp
aam
fmull
aam
scas
jl
cwtl
insl
cld
push
adc
test
push
call
xor
shll
xor
loope
add
movsb
jno
add
fs
xchg
mov
push
loope
sbb
addr16
mov
mov
sub
jb
mov
add
test
in
jo
fisubl
mov
pusha
jmp
or
adc
adc
aam
mov
mov
inc
push
insl
sbb
xor
pop
jecxz
aas
movsb
or
loop
jne
fs
jl
movaps
shrb
ljmp
rcll
adc
xchg
xchg
ret
loopne
ljmp
xor
add
imul
repnz
adc
popf
push
sbb
scas
ljmp
jbe
cmpsb
pop
jb
call
loop
stc
pop
test
nop
das
roll
push
pop
xchg
jb
xor
testb
sbb
mov
lret
shlb
movsb
lcall
lret
fwait
jg
loope
xchg
flds
and
pop
mov
int3
jl
sub
xchg
ja,pn
adcl
into
loope
and
sub
xor
int
lcall
loop
jbe
mov
or
flds
lret
loope
fwait
fwait
mov
shrb
loope
pusha
inc
mov
idivl
add
mulb
push
in
cmp
lahf
dec
jg
jecxz
push
and
jbe
idivl
stos
inc
or
mov
pop
movb
sub
jo
sub
mov
fst
stos
push
stc
in
test
dec
cmc
daa
or
in
add
ficoms
cli
or
inc
mov
lock
xor
mov
push
adc
sub
dec
push
and
insb
cwtl
test
sub
add
das
mov
ret
cli
inc
popa
das
and
call
inc
fldl
and
cmp
push
aaa
loop
cmp
jb
pop
ss
xchg
dec
add
addb
sbbl
and
hlt
jmp
adc
test
notl
mov
and
mull
xor
movsb
push
pop
jo
ljmp
mov
shlb
xchg
dec
and
repnz
inc
jmp
movsb
into
inc
aad
pop
aaa
or
lret
aaa
jl
in
or
xor
xor
stos
test
push
imul
inc
imul
pusha
pop
decl
xchg
sbb
sub
aaa
lcall
sub
fstpl
pop
hlt
pop
mov
bnd
xor
dec
loop
inc
jb
je
xchg
cwtl
mov
and
push
xchg
repz
bound
cwtl
and
push
les
pop
loope
xor
mov
mov
mov
pop
mov
push
cmp
out
shll
mov
vxorps
lods
inc
repz
xor
repz
push
and
and
aad
mov
pop
cwtl
out
sbb
test
lret
xchg
test
and
adcl
jo
cli
mov
fisubl
xor
in
lods
daa
mov
rorl
dec
inc
inc
pop
loop
out
sahf
and
movsl
fidivrl
addb
into
sbb
lods
cwtl
jbe
add
inc
push
push
imul
inc
or
out
cmp
pop
test
mov
xor
call
popf
jecxz
xor
jmp
loope
jbe
mov
and
arpl
mov
test
hlt
and
rcrl
cmp
stc
pop
add
ret
add
cmp
fcmovu
int3
stos
imul
ss
push
movsb
pop
cld
lock
test
cltd
mov
lds
sbb
mov
rcrb
inc
mov
loop
push
and
mov
sbb
jb
xchg
jg
mov
andl
outsl
push
sbb
aas
outsb
bound
inc
pop
iret
fildll
ja
movsb
loop
frstor
xchg
divb
xchg
add
xor
push
roll
jg
jecxz
outsl
dec
pusha
mov
mov
and
fdivrl
addr16
insb
gs
sti
sbb
in
ljmp
inc
jecxz
in
pusha
mov
dec
xor
aam
xor
cmp
and
scas
ror
sbb
je
negb
test
push
bound
test
pop
mov
sub
xchg
mov
outsb
bound
test
mov
outsb
movsb
dec
mov
sub
js
mov
test
pop
ja
cwtl
movsb
mov
insb
divl
dec
jecxz
mov
and
xchg
in
cltd
pop
or
sub
sub
gs
shrb
push
movsl
sbbl
enter
dec
loope
add
pop
push
mov
aad
push
movsl
and
push
es
clc
push
bound
les
push
xor
push
in
bound
and
jb
push
bound
mov
aam
out
jnp
jp
lea
inc
or
jecxz
inc
xchg
int3
movsl
rorl
and
jg
movsb
mov
mov
roll
sub
dec
cmovne
loop
dec
andl
lea
enter
push
dec
inc
dec
aad
inc
fdiv
jecxz
cmpsb
arpl
push
enter
loope
push
dec
outsb
push
inc
arpl
and
dec
inc
int3
rolb
xor
popa
cmpsb
mov
test
aaa
sub
lods
pop
das
inc
insl
mov
pop
lcall
adc
hlt
sub
fdivrl
dec
jmp
cmp
jbe
hlt
sub
jmp
rcrb
or
sub
xor
and
inc
mov
and
lock
xorb
inc
dec
pop
int3
adc
xchg
sbb
sub
push
idivb
pop
push
xchg
xchg
pop
setle
pop
rcl
or
cmpsb
movsl
popa
fistpl
mov
loop
sub
xlat
mov
pushf
xchg
xchg
data16
dec
out
lds
inc
mov
shr
fsubp
sub
pop
push
mov
movsb
push
dec
lahf
jne
mov
idivb
ficomps
loopne
shl
inc
mov
mov
arpl
pusha
push
into
xchg
scas
shrl
mov
imul
xor
xchg
mov
inc
add
mov
pusha
jmp
mov
jmp
xor
mov
aam
jb
aam
mov
inc
loope
cld
lret
fnstcw
cmc
sub
test
mov
jecxz
lret
push
arpl
push
je
push
cmpsb
loope
loop
or
mov
mov
sub
fidivs
lret
cmp
mov
inc
sub
push
lods
sbb
xor
cwtl
icebp
jmp
push
add
pop
cmp
or
cmpsl
shl
std
or
mov
push
cwtl
inc
movsl
jb
or
cwtl
xchg
inc
mov
jle
aad
push
xchg
hlt
repnz
push
loope
andb
jae
push
loope
xor
rolb
mov
jbe
sub
dec
mov
repz
fidivrs
ljmp
push
push
arpl
call
jb
jo
das
and
das
xchg
pusha
push
das
andl
ss
aaa
xchg
sub
dec
pusha
xor
sub
call
and
js
loopne
repnz
inc
in
sub
lahf
jne
mov
and
add
mov
or
ja
ss
sub
dec
cmp
or
cmp
lods
inc
dec
ja
stc
lret
cmc
ljmp
mov
shrl
repz
push
mov
daa
add
adc
movsl
leave
pop
cmp
dec
test
xchg
test
xchg
push
jb
aad
xor
hlt
pop
outsb
outsb
or
sub
inc
jecxz
push
aad
adc
mov
lods
lret
xor
dec
hlt
xchg
fisubrl
inc
mov
repz
out
scas
aad
push
jbe
mov
pop
mov
jmp
loope
mov
dec
adc
jb
imul
or
es
jne
sub
inc
inc
push
sarl
mov
outsb
jb
out
lcall
sahf
addr16
cmp
js
add
lahf
jnp
xor
sahf
addr16
idiv
or
xor
jb
js
mov
xchg
rcrb
inc
mov
lods
xor
ret
pop
and
or
xchg
and
fidivl
jecxz
test
pop
mov
jne
mov
sub
lret
out
sbb
sbb
in
test
popa
dec
scas
repnz
es
js
cmp
int3
pusha
out
pushf
jmp
fildl
cmp
lahf
test
cmpsl
sub
fidivrl
sbb
xor
adc
xchg
pushf
sub
lds
cmpsb
fistl
xchg
adc
dec
lahf
jmp
das
push
jae
div
cltd
push
xchg
or
test
cmpsl
mov
push
mov
jne
shll
add
rorb
and
mov
fldl
sbb
lock
out
es
and
xchg
jb
xchg
xor
cmpsl
pusha
xor
out
movsl
mov
pop
insl
rorl
xor
jne
xchg
jno
pop
xchg
das
jp
sbb
jo
cmp
push
xacquire
and
incl
and
movsl
fidivrl
mov
lret
add
jmp
xor
shlb
pop
lock
imul
sub
adc
xchg
inc
popf
cmpsl
push
cmp
inc
push
divb
rcrb
push
stos
ret
push
scas
cli
and
fs
adc
lods
ljmp
dec
inc
mov
push
and
jb
xor
jecxz
push
dec
sbb
jno
jne
ror
pop
aas
fwait
jb
mov
idivl
lds
xchg
je
sub
cmp
cmp
xor
xor
movsl
push
sbb
xor
mov
jmp
inc
movsb
and
fcomps
adc
add
mov
pop
inc
insl
inc
fcompl
in
and
push
insl
mov
outsb
xchg
inc
xor
cmc
mov
test
push
fnstenv
xchg
and
ljmp
mov
test
cmp
in
mov
and
ficompl
test
cs
push
lcall
ficompl
outsb
jmp
and
sbb
cld
push
out
ret
inc
dec
or
add
or
out
lods
loope
pop
pop
and
fiaddl
mov
das
dec
in
cmp
push
pusha
push
adc
xchg
cld
cmp
mov
fiaddl
and
fwait
push
in
dec
and
sub
lods
inc
inc
pop
pop
fildll
jle
cmovnp
mov
mov
fwait
repnz
xor
loope
add
jg
xchg
mov
jo
stc
mov
and
call
bound
cmp
add
xchg
ljmp
shll
jno
xor
push
out
dec
jl
les
push
mov
mov
fidivl
shrb
dec
push
inc
add
sbb
xor
lahf
fisubrl
xchg
arpl
inc
popa
dec
popf
adc
inc
cmp
jae
testb
imul
cmp
scas
fstpt
dec
gs
je
cmp
sub
jb
xor
insl
ja
mov
xchg
rep
xchg
sub
mov
outsl
xor
insb
jmp
and
std
mov
insl
pusha
stc
pop
push
adc
popf
into
daa
ficompl
pop
andb
int3
stos
add
and
test
aaa
aaa
jl
mov
mov
inc
push
lcall
aaa
lret
add
push
push
or
test
push
iret
idiv
and
jl
mov
and
je
xor
mov
imul
das
daa
xor
addr16
pusha
dec
loop
mov
push
mov
pop
mov
aad
push
mov
xchg
pop
fsts
imul
inc
push
sbb
ds
inc
pop
and
mov
out
nop
shlb
mov
cmp
xorl
xchg
loope
jnp
mov
lret
push
ljmp
push
test
xor
push
mov
nop
inc
xchg
mov
int3
bound
jns
mov
or
xor
arpl
lods
movsl
pop
xor
jns
fwait
inc
insl
xchg
loope
sub
into
ds
cli
out
cmp
mov
divb
mov
xor
jae
arpl
out
mov
mov
pop
outsb
nop
out
aam
jb
les
dec
xor
fsubs
movsb
lock
incl
rclb
addr16
push
pop
stc
xchg
mov
shl
out
dec
es
cmc
and
pop
mov
pop
and
lret
xor
dec
out
push
mov
test
xchg
fisubrl
inc
sub
jae
repz
repnz
push
mov
fs
adc
jb
das
lock
pop
repz
scas
mov
test
sub
jge
mov
jecxz
mov
dec
jns
pop
add
inc
mov
enter
popf
mov
imul
sahf
mov
jecxz
fs
std
icebp
test
inc
pop
nop
sub
inc
inc
mov
mov
xchg
aam
mov
ljmp
popa
sahf
xor
test
adc
negl
cmp
andl
pop
xor
mov
out
ljmp
or
jecxz
fisubl
repnz
es
arpl
pop
push
fisubs
hlt
sub
xor
jne
ja
add
mov
cwtl
pop
push
shlb
into
push
arpl
push
testl
outsb
jp
pop
pop
mov
test
out
and
stc
out
jge
icebp
pop
pop
jnp
cld
mov
fwait
xchg
sbb
nop
lcall
shrl
out
sub
jbe
push
lret
and
sbb
enter
jns
loope
pop
add
mov
fidivl
dec
push
out
xchg
jae
xchg
faddp
xor
xchg
sub
and
outsb
lahf
cmc
repz
adc
fsubrs
movsb
sbb
repz
cltd
mov
xchg
fwait
jne
in
inc
and
je
fbstp
ljmp
push
loopne
fisubl
sub
in
mov
dec
adcb
in
aaa
adc
in
cmpsl
aaa
addr16
jae
cmp
push
mov
sbb
mov
push
jne
xlat
daa
fisubl
fs
test
xchg
arpl
mov
bound
sar
in
scas
loopne
shlb
ffreep
push
mov
fsts
and
push
xlat
mov
push
xlat
inc
mov
arpl
inc
out
arpl
ret
inc
loop
iret
not
sti
pop
out
iret
and
push
idiv
insb
sub
mov
jb
loop
inc
push
lea
test
lcall
in
outsb
out
pushf
mov
jecxz
cwtl
stos
mov
push
cltd
xchg
sub
call
pop
jno
clc
insb
stos
fndisi(8087
xor
and
push
fwait
lret
stos
jbe
sub
fnstsw
cmp
inc
jecxz
movsl
outsb
inc
outsb
jp
push
push
cmc
shll
lods
rcr
loop
push
scas
test
in
imul
in
jbe
loop
imul
fwait
adc
outsl
es
insb
clc
xchg
out
dec
and
pop
cltd
xor
sbb
in
dec
mov
pop
push
popf
clc
std
jae
fsubrs
sbb
insl
jnp
daa
imul
pop
xor
es
rolb
movsl
testb
rorb
xchg
addr16
ljmp
mov
jns
imul
leave
sub
int3
ret
mov
loopne
out
dec
push
push
lods
pop
sti
sub
cmpsl
xchg
sbb
and
cmp
adc
xor
mov
cwtl
pop
lahf
push
fiaddl
push
loop
jno
mov
lds
cwtl
pop
jecxz
push
loop
and
lret
push
loop
mov
std
mov
mov
outsb
scas
xchg
xor
pop
lods
out
inc
sarb
cmp
xor
shrb
testb
loop
pop
pop
hlt
xchg
outsb
mov
cld
xchg
push
test
test
popa
arpl
xchg
mov
xchg
mov
and
ret
inc
fwait
adc
jg
ficoms
add
loop
nop
push
cwtl
mov
sbb
hlt
es
mov
add
fdivrl
inc
dec
cwtl
jb
and
dec
cmp
jb
cmp
movsl
ficompl
lahf
shl
cmp
jne
sub
add
jbe
pop
pop
cli
sti
jl
loope
ljmp
push
dec
push
cwtl
and
cmp
loop
cmp
jle
pop
inc
jno
in
aas
jno
or
imul
or
test
or
sarl
and
clc
insl
or
test
sar
cld
add
cli
jae
pop
stc
sub
or
xchg
dec
aas
pop
loopne
and
scas
jle
xchg
xor
cmp
add
int
sti
cmp
dec
cltd
xor
jbe
sbb
ds
mov
push
aam
mov
xchg
cwtl
adc
xor
pop
popf
push
push
test
add
into
loop
mov
pop
loop
jno
pusha
movsl
insb
lods
sbb
add
mov
xchg
test
test
inc
inc
xor
adc
add
adc
mov
inc
push
jp
sti
pop
push
mov
out
into
inc
mov
fwait
pop
cwtl
mov
add
jmp
movsb
jmp
jo
jg
push
inc
aaa
cmpb
push
jmp
adc
push
addb
enter
inc
loop
dec
and
xor
loope
jnp
or
outsb
in
cmp
xorl
inc
popa
jmp
int
cwtl
imul
lcall
mov
clc
cwtl
inc
je
outsb
in
dec
lea
in
mov
mov
loope
je
push
dec
repz
or
ljmp
inc
and
stos
fisubrl
pop
aaa
xor
jbe
notb
inc
jns
mov
ficomps
xchg
xchg
gs
xchg
jno
shlb
outsb
icebp
sbb
or
fs
popf
cltd
inc
roll
xchg
adc
in
es
lcall
movsl
adc
out
in
scas
and
outsb
outsl
sub
stos
xor
js
mov
cld
ficomps
push
js
sbb
jo
outsl
call
js
push
lahf
cltd
or
push
call
push
into
fcoms
call
call
pop
jo
popa
xchg
cmp
jbe
pop
sbb
xchg
out
add
sub
rcrb
sub
daa
adc
and
adc
jecxz
dec
mov
lods
dec
lods
int3
jmp
outsb
inc
adc
dec
jmp
es
loop
ret
std
dec
xor
in
lea
clc
adc
repnz
xchg
pop
xchg
ret
dec
push
clc
shll
jl
jae
hlt
xchg
nop
aad
mov
fwait
leave
sti
push
pop
clc
shl
or
hlt
loope
cmpsl
and
add
insb
imul
adc
cwtl
sub
test
jb
aas
jae
aaa
ss
mov
xor
movsl
out
out
mov
and
xchg
cs
bound
addr16
xchg
outsb
inc
jbe
push
jecxz
imul
inc
arpl
in
push
lods
jmp
mov
gs
mov
outsb
ret
cmp
xor
dec
pop
push
outsb
mov
push
leave
push
dec
and
jp
inc
or
sarb
loop
jp
jecxz
sub
mov
dec
mov
mov
mov
sub
arpl
popa
sub
xor
mov
and
mov
sbb
cli
pop
mov
in
leave
fcmovnbe
pusha
dec
xor
xor
loopne
xchg
mov
sub
cmp
dec
imul
push
cmpsl
fwait
dec
mov
stc
outsl
xchg
das
and
loope
and
and
xchg
xor
lods
test
and
mov
inc
sub
loop
xchg
push
jmp
cmpsb
and
clc
push
decb
aad
adc
es
je
and
jl
push
and
and
push
lock
add
scas
lret
imul
mov
out
insl
das
sub
cmpsb
dec
shrl
ja
inc
push
push
mov
cmc
test
mov
pop
stos
push
in
repz
mov
xor
xchg
and
pop
rclb
aas
fstp
bound
mov
movsb
mov
dec
imulb
call
outsl
push
outsb
loope
ret
filds
leave
rcrl
cmp
or
cmp
rcrl
mov
jecxz
dec
xor
fiaddl
dec
sbb
bswap
popf
cmpsb
ja
movsw
fbld
xor
addr16
inc
inc
push
movl
addr16
enter
mov
loop
imulb
adc
xor
jne
and
xchg
icebp
scas
inc
dec
xchg
fldt
sub
loope
mov
push
pop
psubw
mov
pusha
repnz
pop
psrad
push
jbe
clc
mov
lcall
push
divl
es
cltd
mulb
mov
xlat
xorl
adc
push
push
imulb
out
pop
shl
inc
dec
incb
in
ds
mov
ret
arpl
insb
les
jo
pusha
imul
imul
pop
mov
in
sbb
jge
outsb
aad
cmp
xchg
dec
mov
pusha
jno
shll
bound
mov
icebp
mov
pop
shl
xor
int
push
jno
dec
outsl
arpl
dec
xchg
icebp
add
sbb
movsb
jle
repnz
mov
push
xor
or
ja
cmp
xor
les
xor
pop
out
mov
sub
repnz
punpcklwd
lock
xor
add
jno
fs
lahf
movsb
jb
negb
aam
js
aaa
and
std
inc
gs
sbbl
mov
xor
repnz
push
inc
and
aaa
pop
push
push
lcall
xlat
push
fisttpll
xchg
or
push
shlb
sahf
jmp
outsl
inc
imul
loop
inc
jecxz
jle
stos
es
dec
inc
xor
xor
jb
jne
sub
jp
pop
loope
aaa
mov
aas
daa
push
aas
loope
pop
loope
add
imul
push
and
jecxz
or
jg
mov
sub
jecxz
or
outsl
aas
repz
aaa
sub
xchg
sub
push
inc
push
push
ljmp
mov
lret
cmp
pop
sub
and
aas
inc
jno
mov
ljmp
pusha
or
lea
repnz
push
dec
and
loopne
inc
mov
divb
aaa
cmpl
stos
jmp
pusha
sub
mov
testb
out
imul
mov
insl
sbb
test
cmpb
and
jns
ss
ds
jmp
xor
ret
sti
push
jl
xor
push
lods
icebp
inc
aad
xchg
je
inc
pop
add
loop
mov
sub
jb
cmc
movsb
int3
jl
mov
dec
push
fnstsw
fistpll
rcl
je
sub
mull
mov
mov
xchg
dec
sub
push
pop
lock
xor
pop
loop
xor
negb
rcrl
lea
fwait
jb
dec
cmp
cmpsb
std
test
insl
or
repnz
jle
lret
xchg
aam
lret
sbb
mov
shlb
push
pop
inc
aaa
mov
xchg
loope
pop
imul
mov
shrb
pop
ret
sbb
int
push
push
lahf
loope
stos
push
js
les
loope
dec
in
mov
xor
int
jns
or
repz
and
xchg
dec
adc
dec
decb
sub
mov
and
mov
call
in
xor
sub
lock
mov
imulb
std
testb
clc
data16
push
in
xchg
jl
mov
ja
fmul
rorl
mov
lret
out
ljmp
mov
and
inc
add
aaa
inc
push
mov
iret
pop
rcr
jecxz
mov
incb
xor
insb
mov
add
pop
sbbb
pop
daa
lret
add
into
icebp
loope
xchg
repnz
inc
sbb
mov
add
iret
and
pop
rolb
sub
inc
pusha
mov
aaa
jmp
xlat
repnz
and
movsb
lret
cmp
sub
xor
cmp
inc
gs
or
stc
mul
dec
dec
lods
jecxz
ds
pop
ja
pop
pop
cmc
cmpsl
mov
stos
inc
loop
sbb
add
out
mov
lods
call
push
pop
imul
and
test
pop
mov
imul
fistps
mov
iret
bound
xchg
lock
xor
cltd
xchg
std
jnp
cmp
push
into
push
jae
shrb
xchg
adc
sub
push
sub
inc
sub
shr
cs
push
dec
push
sub
add
push
push
push
testb
xchg
fnstcw
mov
jmp
imul
cli
xor
dec
icebp
pusha
loop
stos
cmp
es
aad
and
aas
and
xor
sarb
inc
dec
fwait
cmc
pop
pop
push
push
mov
pop
aaa
push
les
and
mov
pusha
xor
out
out
shll
aas
pop
aaa
push
push
inc
inc
jnp
aam
pop
lcall
dec
out
push
jnp
mov
jp
sub
stos
mov
cmp
fnstenv
shr
cmp
mov
jo
les
mov
int
mov
cmpsb
cltd
fidivl
mov
scas
mov
ret
mov
loop
lock
push
repnz
arpl
inc
add
popa
inc
lock
pop
push
f2xm1
popa
xor
imul
andb
daa
push
cmp
icebp
push
je
pop
push
pusha
push
fldln2
popa
shlb
mov
es
shr
jle
mov
inc
ret
sbb
inc
ret
mov
jecxz
sbb
dec
mov
push
inc
repnz
ljmp
dec
adc
mov
adc
sbb
outsb
push
popa
xchg
and
adc
add
sbb
adc
jbe
jae
outsb
pop
lret
aaa
andb
jl
loop
decl
cmc
or
sbb
push
movsl
inc
lret
inc
test
mul
sub
pop
mov
pusha
test
arpl
cmp
imull
and
bound
xor
ret
mov
or
pop
inc
fiaddl
hlt
dec
fdivrp
jecxz
jbe
jle
int3
xor
mov
into
test
iret
nop
je
push
mov
push
dec
xchg
adc
fwait
orb
movsl
insb
lret
push
or
adc
mov
cs
mov
mov
jae
test
or
mov
pop
jo
in
aas
or
in
pop
lret
adc
mov
fdivp
mov
xor
xchg
mov
push
push
dec
in
out
xchg
aad
mov
sub
inc
outsb
xchg
inc
xchg
sub
loop
sub
and
and
sbb
dec
jne
lcall
rcrb
push
cli
subl
and
je
mov
pushf
mov
cmc
ljmp
or
jmp
in
leave
in
test
push
cmp
lods
call
jecxz
or
loop
xor
pusha
js
in
inc
arpl
in
es
pop
imull
push
jb
push
jo
and
outsb
inc
sti
xchg
push
jb
sbb
adc
adc
inc
xor
xor
fcomip
pop
out
jmp
cmp
pop
arpl
add
pop
and
pop
iret
pop
xchg
das
inc
out
stc
cmp
popf
int3
pusha
sti
imul
sbb
push
jnp
lds
jbe
outsb
xchg
lcall
push
xchg
cmpsb
cmp
xchg
sub
in
cmpsl
subb
xchg
jnp
rorl
pusha
aas
aam
outsb
xor
in
stos
clc
push
shlb
xchg
loope
xchg
sti
imul
xchg
ja
jecxz
adc
sub
test
cmc
and
sbb
cmpsb
lahf
loopne
fiadds
mov
adc
sub
addr16
dec
inc
pushf
and
cmpsl
out
loope
scas
push
test
inc
shrl
add
leave
push
cmp
mov
es
ja
dec
xor
mov
aam
outsb
adc
pop
sbb
rcrb
cmp
icebp
adc
mov
imulb
mov
pop
jge
roll
and
divb
movsl
aaa
das
in
lret
push
push
and
loopne
hlt
inc
lret
sub
xchg
jbe
lret
bound
subb
lock
sub
ret
xor
cmp
shlb
mov
out
inc
sbb
xchg
test
iret
sub
jge
movsl
in
jne
enter
rcll
aaa
dec
xor
pop
addr16
mov
daa
jo
das
jmp
shll
testb
ss
cmc
lea
sti
mov
push
mov
jno
or
push
jecxz
pusha
lret
inc
cld
push
ja
test
adc
out
sub
jo
les
xchg
sarb
bound
jg
pop
out
loopne
sbb
fisubl
sub
hlt
pop
and
rcl
and
outsb
mov
aaa
rol
xchg
loope
xchg
cltd
lcall
cmp
dec
fstpl
push
fstpl
divb
jns
mov
adc
das
test
inc
lods
push
adc
and
cmpsb
mov
jae
std
idivb
jb
mov
and
inc
mov
and
and
push
andl
js
lods
movsl
cltd
jg
stos
mov
inc
sbb
loop,pn
les
mov
insb
movsb
push
pop
shr
adc
jecxz
sbb
dec
sub
repz
or
xchg
daa
push
shlb
into
pusha
xor
imulb
sbb
lds
jne
jb
imul
std
mov
loop
xchg
testb
xchg
jnp
sub
into
test
push
or
sti
push
sub
dec
in
sub
test
jmp
movsb
xorb
xchg
xchg
int3
jle
insb
pusha
movb
out
add
push
pushf
or
adc
xchg
add
and
sub
dec
leave
jmp
popl
out
dec
in
pop
push
lds
inc
xor
push
or
faddl
jl
push
imul
aam
andl
inc
sub
daa
pop
test
inc
div
sub
subl
add
push
jecxz
inc
sub
subl
inc
gs
sub
xorl
nop
shll
adc
sub
cmp
cmp
inc
mov
pop
repnz
ja
loope
fcomps
mov
pop
mov
cmp
shll
fldt
ja
scas
jecxz
push
xchg
jae
mov
clc
cmp
mov
inc
loopne
jb
push
rcl
mov
aaa
outsl
pop
ret
push
xchg
xchg
movsl
test
and
je
loopne
cmp
mov
ret
xchg
sahf
jecxz
fisubl
movsb
mov
push
jmp
sub
mov
xor
test
push
and
push
cwtl
and
and
cmpsb
push
cmp
shl
fiadds
in
sub
cli
divb
mov
fwait
sub
lcall
cmp
mull
cmc
rclb
xor
mov
bound
cmp
sub
push
add
or
arpl
mov
mov
insb
addr16
xchg
jbe
stc
ljmp
push
xchg
xchg
sahf
loope
aad
ficoml
daa
frstor
mov
rorl
insb
xchg
mov
adc
repz
mov
stos
repz
sbb
int3
mov
daa
xchg
outsb
push
fidivrl
ret
pop
iret
jo
mov
cwtl
push
adc
dec
sbb
jmp
addr16
repz
daa
push
sbb
call
outsb
outsb
adc
mov
add
sub
inc
ja
mov
subb
xchg
and
mov
sub
mov
sbb
std
xchg
xchg
jbe
inc
cwtl
and
sub
notl
negl
mov
xchg
movsl
sbb
btc
aam
xor
outsb
jne
xor
ss
in
push
je
and
dec
aam
fwait
rcrb
sbb
jecxz
jge
xchg
pop
mov
ficomps
adc
inc
bound
fdivrp
and
pop
mov
inc
or
ljmp
lcall
shlb
inc
gs
cmpsl
mov
scas
stos
cmp
and
dec
jmp
cmp
sub
shrb
inc
lock
mov
aas
fistpl
cmp
xor
xor
repnz
xor
jno
imulb
jns
xchg
or
xchg
mulb
pop
cld
mov
sbb
push
jecxz
jl
inc
mov
lahf
dec
mov
pop
stc
mov
nop
xor
pop
add
scas
pop
loope
mov
mov
pushf
adc
lea
out
mov
xor
mov
sarl
loop
std
and
xchg
push
loop
fsubr
psrad
push
jle
pushl
add
rep
inc
jge
in
pop
movsb
dec
lea
mul
lahf
mov
pop
mov
aaa
cmpsl
pusha
and
jb
push
stos
and
xchg
sub
cmp
and
mov
xchg
mov
cmp
mov
pop
pop
and
jb
mov
enter
push
jl
cmp
fwait
or
nop
dec
popf
or
jmp
test
mov
rorb
push
ficoms
xchg
push
addl
ret
push
xor
mov
mov
aad
jae
cmp
loop
pop
inc
ret
push
scas
icebp
loopne
mov
mov
movsl
lahf
xchg
jno
jae
cmp
mov
xchg
jae
outsb
inc
cld
jmp
add
in
cmpsb
inc
inc
bound
lods
jp
daa
test
mov
lahf
aaa
ljmp
test
dec
mov
test
jnp
sub
mov
push
aaa
and
js
mov
aad
xchg
jno
mov
mov
inc
sub
pop
test
pusha
mov
cmc
and
add
mov
pop
xchg
imul
add
arpl
in
es
mov
mov
push
fimull
addr16
filds
idivl
out
or
lea
mov
jg
pusha
aas
and
lock
loop
fdivs
addr16
inc
loop
xchg
dec
cwtl
mov
fucomip
shll
lods
sbb
mov
hlt
push
cltd
not
test
pop
mov
test
in
add
jecxz
jmp
or
push
sbb
outsb
jne
mov
jecxz
and
or
xor
jae
lock
stos
outsb
notb
sarb
sub
sub
pop
lret
addr16
xchg
push
mov
shll
es
pusha
add
pop
sti
popa
lahf
test
fsubl
orb
outsb
push
loopne
jecxz
mov
imul
adc
ret
stos
pop
ficoms
xor
lds
mov
xor
adc
push
sub
fucomip
adc
js
addl
fistps
pop
cmp
xor
xchg
sbb
xchg
testb
es
and
rolw
ss
je
or
xor
ja
xlat
jb
fidivl
mov
insb
inc
mov
pop
mov
popa
dec
test
push
movsl
xchg
enter
push
mov
test
dec
in
outsl
mov
pushf
rol
adc
hlt
loop
jl
sarl
adc
ret
add
mov
push
and
xor
js
and
cmpsb
inc
push
mov
sub
pop
and
pusha
neg
inc
imul
mov
mov
inc
cwtl
push
insl
sub
dec
orl
je
comiss
jns
lret
popa
mov
imul
sub
aam
and
ss
inc
fcoml
call
test
ficoml
jae
and
push
outsb
push
jnp
and
cmp
xor
shlb
ljmp
ret
insl
test
jnp
stc
fs
sbb
mov
inc
cmp
fwait
ljmp
jb
movsl
mov
testb
out
mov
test
stc
push
arpl
testb
stos
push
xchg
inc
dec
repnz
fs
arpl
mov
je
jbe
add
in
jo
clc
sbb
push
sub
ds
dec
repnz
jl
mov
jecxz
rol
mov
cmp
cli
jecxz
jne
in
lea
push
pop
jno
shl
cmp
aaa
lock
xchg
loop
pop
sub
inc
cmp
push
push
sub
fsubs
cmp
cmpsl
in
leave
call
shl
xchg
mov
mov
push
mov
and
arpl
filds
cltd
inc
mov
jmp
push
inc
and
movsb
mov
std
insl
shlb
addr16
sti
test
and
fbstp
add
sub
dec
repnz
mov
pop
js
addl
adc
cmpsl
andl
mov
imul
add
ja
xchg
pop
es
sub
jge
mov
and
es
idivl
aam
mov
jb
add
xchg
aaa
lds
sub
or
mov
sub
daa
jno
push
cltd
movsb
mov
push
cmp
xor
dec
outsb
repz
je
xor
cs
push
jmpw
pusha
pop
and
pop
and
and
test
ljmp
test
xor
jne
pop
fisttpll
arpl
outsb
mov
repz
lret
les
mov
mov
pop
or
adc
lds
pop
shll
push
enter
fnsave
insb
inc
loop
mov
sbb
aam
fs
ret
les
mov
add
jbe
jne
repz
or
repz
adc
popf
and
lret
insl
cmp
adc
divb
negl
pop
inc
push
mov
jl
fnstenv
pop
add
jmp
loop
imul
dec
push
mov
sti
notb
aam
filds
mov
cltd
jns
jmp
mov
data16
push
sarb
push
dec
sub
out
out
stc
loope
push
nop
mov
bswap
or
xchg
mov
sub
mov
das
mov
ficoml
pop
and
sub
dec
dec
xchg
ss
push
fdivrl
adc
sub
loop
xor
mov
mov
aad
sbb
jnp
push
shrl
push
adc
stc
adc
mov
add
pop
dec
lret
movsl
cmp
lcall
adc
insl
sbb
adc
loopne
dec
stc
jnp
aad
adc
pop
xchg
mov
add
popa
jmp
stos
sub
jb
xor
fbld
insb
sbb
rorl
call
dec
and
inc
test
mov
das
outsb
pop
dec
clc
iret
inc
into
or
xchg
inc
dec
inc
mov
pop
cmpsl
sub
insb
jns
jnp
mov
jle
mov
rcr
outsb
inc
fnstcw
arpl
jecxz
daa
sub
mov
inc
and
sub
in
or
xor
rcrl
insb
in
inc
add
fwait
dec
insl
das
pop
and
je
ret
add
xor
sbb
jmp
notb
subl
movsl
daa
loope
push
ljmp
pop
xor
jbe
xchg
jb
mov
pop
mov
and
xchg
stos
jbe
cmp
cmp
push
popa
mov
mov
sub
lcall
aaa
fnsave
jno
mov
xchg
push
inc
pushf
das
push
pop
push
test
cli
and
dec
xor
jecxz
pop
in
mov
fidivrl
mov
in
xchg
ss
std
out
outsb
mov
and
mov
push
aaa
or
mov
xlat
pop
stc
popf
and
outsb
call
dec
xchg
clc
ss
test
lret
mov
punpckldq
lret
cmp
fnsave
loop
leave
sbb
inc
in
and
or
mov
call
push
fst
in
dec
sbb
pop
loop
add
dec
sub
xchg
xor
popa
insl
mov
jae
sub
test
fcoms
pusha
mov
addr16
push
ss
adc
mov
mov
xchg
shll
scas
mov
imul
insb
inc
cmpl
cmpsl
testb
pop
add
xchg
fs
and
pop
in
mov
fcompp
inc
push
mov
in
or
aad
jecxz
xchg
and
push
add
ja
jmp
inc
sbb
inc
jp
and
daa
test
and
pushf
xchg
pop
add
hlt
enter
dec
push
jg
hlt
aaa
jo
mov
jo
mov
fs
test
inc
or
mov
and
enter
sub
repnz
test
jecxz
add
mov
xchg
sbb
adc
loope
mov
xor
divb
dec
sub
xchg
sub
sbb
repz
mov
mov
ljmp
mov
and
and
fistpl
xor
pop
pusha
jnp
inc
sbb
xlat
mov
and
and
and
loop
xchg
push
or
mulb
xlat
out
sbb
jno
inc
mov
aad
fimuls
mov
push
bound
mov
aad
mov
mov
decb
popa
loopne
push
fcmovnbe
fbstp
xor
adc
pop
hlt
dec
aam
das
mov
jo
push
xchg
xorb
imul
mov
pop
xor
out
sub
dec
xchg
call
mov
les
ds
icebp
lods
sti
xor
pop
or
jne
jne
loope
jno
repnz
mov
inc
jbe
cmpb
outsb
idivb
arpl
mov
cmp
cmpsb
int3
push
popa
adc
shlb
cwtl
jb
mov
ficoms
push
jne
packsswb
outsl
repnz
sar
cmp
loope
call
das
daa
je
hlt
or
cmp
adc
psubusw
es
outsl
hlt
subb
adc
mov
dec
sub
bound
lcall
mov
adc
je
sbb
mov
pusha
inc
sbb
push
popf
and
popa
adc
sub
mov
push
loopne
fisubs
cli
cwtl
sub
push
xchg
repnz
shlb
mov
mov
cs
bound
adc
divb
cwtl
adc
sbb
adc
mov
mov
mov
adc
pushf
test
fs
out
pop
outsb
pop
repnz
lret
dec
mov
enter
jbe
mov
cmp
sub
cmp
fldenv
jo
cmpsl
dec
loopne
fists
mov
and
push
fstpt
mulb
pop
aas
icebp
xor
xchg
outsb
jo
arpl
inc
mov
and
test
pop
xchg
xchg
add
xor
test
popa
stos
adc
cltd
cmp
movsl
into
fwait
sub
or
sarb
adc
cmpsb
sub
inc
sahf
add
lcall
push
adc
bound
mov
jbe
and
andb
inc
mov
arpl
into
mov
movsb
insb
out
ja
and
jge
test
jne
push
ret
sbb
or
enter
cmc
mov
push
iret
cli
dec
push
adc
inc
xchg
cmpsb
je
pusha
ja
fcoml
addr16
xchg
test
jno
out
fisttpl
stos
pop
pop
mov
roll
push
jecxz
add
cmp
fsubr
xchg
and
mov
mov
mov
and
jp
or
pop
das
push
and
aaa
sbb
daa
pop
pop
dec
or
sbbl
mov
ja
mov
and
push
fldlg2
add
test
inc
pop
inc
cmp
sub
into
pop
lret
inc
ss
xor
mov
push
jnp
lods
xor
pushl
outsb
movsb
adc
lock
pop
daa
mov
shrl
push
ljmp
fiadds
pop
mov
jb
aam
lods
jmp
add
popf
pop
hlt
mov
popa
jne
push
fldenv
aad
lcall
cmp
push
cmp
test
push
mov
push
ret
push
mulb
addl
movsb
loope
inc
cmp
xchg
mov
add
decl
sub
mov
outsb
test
out
adc
and
push
xchg
test
mov
movsl
loopne
jne
and
inc
outsl
sti
popa
and
add
addr16
push
imul
test
xor
inc
mov
adc
dec
das
xchg
cmpsl
mov
insb
jne
popf
add
push
mov
xchg
aaa
mov
mov
iret
jo
enter
aas
add
das
movsb
add
add
ja
jmp
jne
pop
pop
and
or
mov
outsb
and
das
mov
outsb
ja
stos
mov
push
jle
rorl
or
loope
repnz
inc
jle
and
dec
lock
shlb
sti
outsb
mov
push
mov
inc
xor
insl
add
das
loop
jb
lret
mov
leave
cmp
sub
andb
rcl
popa
out
mov
divb
dec
or
call
adc
ja
xor
push
and
xchg
mov
ret
adc
imul
mov
cmpsl
and
fisttpl
arpl
stos
cmpsl
inc
aaa
sahf
xor
inc
pusha
push
inc
divb
push
add
lret
mov
add
cwtl
shlb
push
stos
hlt
inc
inc
pop
jle
and
inc
insl
mov
pmulhw
decb
jl
jmp
sub
push
shlb
outsb
pop
jae
mov
mov
in
lret
jbe
push
subb
pop
lcall
sub
mov
in
cli
push
pop
cmp
scas
xchg
sub
and
xchg
lods
test
je
jne
cwtl
push
divl
xor
popa
cmp
rcl
sahf
leave
out
mov
xchg
lcall
and
push
adc
pusha
rcrl
jo
and
icebp
push
or
nop
movsb
repnz
add
add
cmpsl
sub
insl
gs
fidivrl
rolb
mov
mov
insl
pop
mov
dec
hlt
push
je
mov
and
out
pop
inc
mov
and
mov
xor
cwtl
xor
pop
popa
rorb
repnz
xchg
dec
push
shlb
pop
rolb
push
fsetpm(287
adcl
push
arpl
es
xor
jg
adc
cmpsl
inc
mov
and
xchg
push
and
out
shlb
sbbb
mov
outsb
jge
mov
shlb
shrl
imulb
sub
lcall
rcll
ss
sub
xor
and
andb
sub
jo
ret
adc
sub
les
lret
mov
mov
imul
in
popf
je
popl
ljmp
mov
loope
jnp
mov
jno
dec
ljmp
jecxz
scas
adc
aaa
pop
push
xorl
sub
inc
negb
xor
and
add
pushl
ja
insl
jb
test
loopne
es
lods
mov
push
fidivl
xchg
icebp
xchg
loope
xchg
inc
out
sbb
pop
jecxz
xchg
or
push
cmp
add
inc
dec
fstpt
fdecstp
and
inc
mov
inc
outsb
xorl
out
ds
sbb
xchg
push
cmp
outsb
imul
pop
lods
repz
push
lock
xlat
imul
add
adc
arpl
add
xor
inc
das
rep
jns
lock
arpl
lret
mov
je
addr16
or
sti
bound
aad
or
adc
sbb
les
push
lcall
les
sub
mov
or
pop
mov
sub
jne
ret
mov
sti
xor
dec
shll
test
loop
inc
divb
fiadds
sbb
in
mov
loope
push
sub
ret
lret
ficoms
inc
cmp
loop
add
xchg
adc
cmpsb
fisubl
popf
jb
je
fsubrl
movsl
pop
xchg
out
aaa
xor
jg
andl
push
lods
xor
loope
push
popa
movsl
aad
xor
pop
icebp
pop
mov
fldenv
aad
push
pushf
inc
lahf
lods
xor
lods
repnz
dec
cmpsl
pop
adc
ret
jg
add
push
ret
popf
xchg
popf
inc
mov
stos
les
roll
jae
into
outsb
popf
fwait
push
hlt
inc
and
popl
outsl
int3
xorb
jmp
cltd
adc
jecxz
mov
movsl
jl
dec
test
inc
mov
imul
jo
push
int3
xchg
xor
and
mov
scas
dec
and
mov
jo
addr16
es
xchg
mov
push
movsb
sub
cld
shl
push
movsl
decb
mov
cli
test
cs
inc
test
test
ljmp
dec
inc
je
mov
xchg
cmpsl
inc
repnz
xchg
mov
xchg
inc
push
sahf
insb
iret
les
jnp
mov
pop
insb
xchg
movb
jbe
mov
or
aam
es
aaa
cmpsl
or
xchg
fisubrl
mov
xchg
arpl
push
mov
sub
test
dec
jne
outsb
xchg
ja
ret
cmpsl
dec
into
jbe
fwait
mov
xor
cwtl
push
push
idivb
test
or
push
shl
mov
push
divl
lahf
fildll
je
outsb
xchg
jnp
out
ljmp
jae
jmp
sub
jne
roll
xchg
sub
dec
sbb
aad
push
stc
xchg
mulb
sbb
push
push
xchg
xor
push
pop
out
mov
xchg
or
xchg
xor
fidivl
push
push
sub
xchg
jg
pop
jnp
repnz
sub
out
pmulhuw
inc
inc
popa
push
loope
fs
mov
xlat
aad
mov
sub
mov
fisubrl
adc
or
mov
notb
mov
cwtl
push
out
loopne
xchg
and
std
lds
fidivrl
test
pop
jmp
or
mov
pop
into
push
adc
xchg
sub
movsl
sahf
shll
fdivl
in
out
xor
outsb
int
jnp
sub
outsl
aas
insl
popa
ljmp
and
ljmp
push
jnp
jnp
or
mov
push
inc
je
notl
addl
cwtl
orb
pop
in
sbb
sub
jecxz
das
inc
mov
dec
divb
iret
mov
mov
jns
push
sub
mov
xchg
int3
imul
bound
mov
adc
jne
fisubl
popf
sbb
movsl
arpl
xchg
inc
movsb
sbb
fs
addr16
aad
pusha
hlt
jnp
sti
adc
popa
mov
movsl
jl
addr16
stos
add
test
movsb
jge
gs
xchg
in
fistpl
xor
sub
push
gs
ficompl
hlt
movsl
dec
repz
shrl
push
shrb
inc
outsb
fbld
push
hlt
fwait
fwait
cmpsb
mov
fcmovnbe
outsl
movsl
add
or
mov
test
and
shll
js
iret
cltd
jbe
jo
repz
cmp
andl
iret
lcall
sbb
pushl
mov
xchg
bound
subl
imul
sarb
mov
in
nop
cmp
mov
xor
pop
sub
xor
push
es
enter
pusha
jmp
jb
add
shr
cld
push
lret
cmp
xchg
push
ficoml
push
test
add
dec
inc
test
daa
insb
and
inc
shrb
sbb
loope
cmpl
dec
and
mov
cmpsl
pop
xchg
in
jo
sub
and
popa
and
pusha
pushf
push
push
es
ficoml
movsl
push
sbb
addl
and
test
mov
test
and
xchg
sti
push
cmc
and
ja
test
adc
cmpsb
in
lds
jno
lock
dec
js
sbb
fwait
and
ds
inc
mov
int
imul
mov
rclb
xchg
sti
cltd
jbe
sbb
rcl
inc
xor
jg
push
sub
sbb
fdivr
jg
nop
iret
addr16
mov
push
xlat
adc
push
jmp
sbb
mov
mov
xchg
sbb
loopne
jg
mov
imul
and
sub
stc
dec
js
repz
sbb
fwait
in
aaa
mov
popa
ret
jbe
je
push
andl
or
xor
mov
jb
push
iret
add
jbe
pop
inc
in
cwtl
push
jb
xor
shll
mov
or
insb
sbb
jo
xor
insb
xchg
lds
sbb
cmp
adc
mov
xor
dec
push
pop
mov
call
mov
pop
push
das
clc
jb
and
out
push
cmpsb
fnstenv
bound
cmp
and
flds
bnd
mov
cmp
push
ss
cmp
cltd
sbb
pop
jo
xchg
pop
sub
shrl
sub
aam
mov
ficoml
les
out
add
cltd
insb
loopne
outsb
test
mov
mov
sbbl
and
or
mov
rcr
cmpb
insl
mull
xor
xchg
sbb
push
ljmp
outsb
call
sbb
push
pushf
add
outsb
cwtl
es
inc
fs
rcll
addr16
frstor
dec
xchg
jg
int3
jno
mov
sub
out
gs
sbb
mov
inc
movd
cmp
mov
notb
test
outsb
leave
cmpsb
push
out
and
mov
sub
ret
xlat
int3
jp
out
add
mov
cmpb
test
cmp
push
jno
jecxz
outsb
jb
test
cltd
and
mov
daa
inc
and
pusha
adc
ljmp
scas
jg
cmpsb
rolb
pop
test
xchg
push
hlt
pushf
shll
xor
mov
stc
notb
and
lcall
xor
dec
jo
aaa
shlb
pop
ljmp
sub
sbb
aam
xor
cmp
and
ret
call
fimull
repz
xorl
addl
add
loop
loope
adcb
fbstp
int3
loop
scas
cmc
loopne
outsb
push
in
jae
push
xchg
jl
inc
stc
jecxz
jnp
movsl
fs
add
add
fisubrl
fbstp
scas
pop
inc
push
arpl
xchg
push
roll
jae
dec
mov
stc
and
ljmp
dec
ror
ja
pop
je
lret
loope
mul
mov
test
test
imul
lods
into
sbb
dec
bound
cli
shrl
push
jl
test
jecxz
imul
ss
dec
pushf
pop
fiaddl
ja
out
cmpsb
pop
or
jp
ljmp
cs
push
xorb
aaa
insl
inc
sbb
push
stos
mov
rclb
frstor
leave
push
aaa
cmp
sbb
divl
dec
pop
out
outsb
loop
jo
sub
xor
jge
xchg
cmc
ljmp
pop
mov
mov
sub
icebp
insb
aaa
ss
subl
dec
pop
jp
bound
dec
pop
es
cltd
jmp
imul
sbb
adc
cmpsl
jne
adc
jne
push
outsb
xchg
mov
cmp
mov
aam
loope
rol
xor
in
push
or
mov
add
pop
jecxz
int
cmp
sbb
loopne
cld
pop
sbb
inc
dec
mov
jns
sbb
or
out
xor
hlt
and
mov
mov
sub
mov
xchg
pop
cmp
fwait
stos
arpl
test
mov
ss
pop
bound
pop
rorl
popf
dec
cmp
sbb
dec
je
push
or
inc
xor
mov
cmp
sub
ja
sub
and
loope
iret
push
xchg
lds
push
lods
or
fidivs
and
lret
aaa
loope
das
loop
scas
andb
pop
out
or
fimull
outsb
jno
shll
movsl
iret
push
test
mov
aaa
mov
push
mov
cld
pop
data16
outsb
gs
rclb
push
adc
sahf
fldcw
leave
adcb
movsl
mov
mov
sahf
mov
loop
iret
cmc
aaa
loop
fistpll
mov
std
jo
sbb
lahf
adc
push
sub
or
repnz
pop
cmp
mov
mov
cmp
bnd
incb
loop
dec
movb
lock
cmp
mov
jl
and
pop
shlb
push
and
in
mov
push
adc
les
pop
stos
sbb
xchg
cs
inc
mov
loop
rclb
mov
insl
xlat
ret
push
cmpsb
sub
ss
add
pop
pop
sub
or
fwait
mov
push
push
push
adc
jns
leave
ret
in
and
shll
and
push
mov
xchg
scas
insb
dec
shrb
mov
or
xchg
or
jnp
in
inc
xor
and
cmp
test
push
mov
aad
inc
mov
in
aam
sub
stc
xchg
mov
cmpsl
and
jle
out
test
xchg
outsl
aad
dec
outsb
inc
out
adc
jecxz
lea
scas
test
out
int3
jp
pop
pop
dec
mov
insl
mov
loop
push
fwait
mov
int
xchg
mov
cmp
mov
and
add
jbe
inc
repz
cs
mov
inc
aas
outsb
mov
sub
rcl
inc
insb
aas
out
jne
inc
mov
pushf
sbb
push
stos
mov
mov
cwtl
xchg
mov
iret
ljmp
clc
mov
int
orb
jnp
and
push
stc
xchg
fcomp
out
dec
jmp
aaa
imul
jmp
jge
jnp
push
add
jp
mov
bound
sti
and
pop
xor
pop
push
mov
mov
roll
mov
dec
out
inc
mov
cmp
lcall
jg
jecxz
inc
cwtl
push
insb
xchg
jb
push
pop
je
mov
and
mov
push
test
dec
cmp
inc
pusha
lock
in
and
cmp
addr16
into
cmpsb
adc
and
ljmp
iret
stos
xor
xor
xor
mov
dec
jnp
and
inc
pop
out
mov
mov
cmpsl
pop
add
test
sbb
scas
or
push
arpl
les
inc
xchg
out
orb
mov
cmpsl
mov
in
cmc
mov
je
pusha
inc
ret
adcl
jg
fidivs
imul
movsb
stos
mov
fwait
outsb
insb
xchg
rcrb
pop
and
push
pop
ljmp
fidivl
sub
inc
lock
push
imul
sbb
jo
arpl
fnsave
outsb
test
pop
shl
push
sub
inc
arpl
push
jmp
mov
aas
and
add
ret
mov
dec
int
mov
movsb
aam
xor
mov
cmpsl
pop
sub
aas
xlat
dec
ljmp
ds
in
out
jns
jp
stc
mov
das
inc
iret
sbb
popaw
aam
outsb
aas
roll
cld
fdivrp
adc
ja
jecxz
bound
pop
cmp
jg
mov
aaa
add
mov
idivb
jecxz
ret
jae
into
cmp
in
pusha
push
in
shl
insl
mov
jb
addb
xor
mov
mull
loopne
shl
cmpsl
mov
cmp
icebp
dec
xchg
dec
and
in
xor
ja
pop
in
add
loopne
lock
jne
subb
jecxz
and
mov
fwait
sub
jae
aaa
aaa
add
popf
and
mov
adc
in
cld
test
jmp
jbe
pop
xchg
rcrl
push
mov
xchg
daa
popa
push
pop
jo
daa
xlat
mov
pop
orb
or
xchg
pusha
xor
mov
xor
aam
notb
adc
sub
inc
mov
ret
mov
test
out
inc
and
out
js
or
outsb
push
and
ret
jbe
mov
pop
aas
test
mov
sub
mov
roll
xor
dec
popf
lret
pop
sub
js
xchg
rol
test
mov
in
mov
cmp
mov
inc
sahf
xchg
sti
add
nop
cmc
inc
addr16
stc
mov
sub
cmp
fildll
push
fwait
add
sub
stos
and
jae
or
sub
lret
cmp
pop
sub
and
xor
inc
mov
jg
jle
or
movsl
push
mov
hlt
in
mov
mov
sub
inc
lods
inc
movsb
dec
xor
xchg
ljmp
jb
xor
js
aaa
cmc
insb
jae
stos
inc
ss
xchg
mov
or
inc
rcll
jae
lret
call
js
inc
mov
cmp
jmp
and
lock
push
add
push
mov
lock
sub
dec
jmp
pop
movsb
dec
pop
xchg
cltd
setnp
sti
sub
hlt
in
movsl
into
sbb
pop
ret
xchg
insb
add
dec
popa
adc
inc
std
fdivl
repnz
out
in
mov
loopne
add
popf
shl
adc
lret
sbbb
outsb
add
push
leave
ror
push
jae
lcall
xchg
cld
dec
fisubrs
push
lea
push
mov
mov
cmc
popf
push
rolb
push
push
test
xor
pop
arpl
call
mov
mov
fildl
mov
adc
or
inc
mov
outsl
out
push
outsb
call
cmp
call
and
jl
lcall
mov
test
nop
mov
mov
jo
insl
data16
adc
xchg
sub
jns
in
mov
je
cmpsl
and
int
xchg
mov
loope
xchg
data16
arpl
data16
mov
insb
mov
pop
mov
mov
in
sbb
popa
fwait
mov
cld
lahf
jecxz
loope
maskmovq
testl
js
popf
arpl
addr16
mov
ljmp
hlt
flds
pusha
inc
cwtl
fldenv
mov
mull
fwait
bound
loop
add
in
mov
call
insb
sub
add
mov
sbb
jl
bound
xlat
call
adc
inc
lret
shrl
pop
das
and
je
xchg
xchg
subb
and
xchg
push
cli
movsl
fiaddl
pop
xchg
jg
jne
sbb
add
mov
pop
sti
cmp
mov
add
and
or
aaa
inc
inc
pusha
das
and
adc
jae
imul
or
stc
loope
push
loop
loop
xchg
xlat
xlat
out
pop
adc
jp
outsb
inc
push
add
xor
aas
mov
cltd
xor
adc
push
and
push
test
je
pusha
mov
and
inc
and
xor
ror
jae
adc
mov
fiadds
arpl
cmp
jbe
or
pop
push
and
mov
xchg
aaa
fwait
lods
stos
ds
cmc
add
ja
loop
jbe
xchg
jecxz
into
lcall
and
std
outsl
jbe
test
jns
mov
cwtl
shrb
pop
jno
pusha
push
add
xchg
insb
imul
mov
xor
xchg
int3
lods
out
mov
jae,pt
sbb
dec
fwait
aad
xor
sbb
cmpsl
push
outsl
mov
mov
insb
jns
fs
mov
push
or
inc
in
jmp
loop
and
repz
mov
dec
aad
add
push
loope
ds
je
xchg
xor
imul
xor
push
insl
push
mov
je
sub
xor
in
daa
cmpsl
mov
es
and
jmp
sbb
out
outsl
push
outsb
pop
inc
pop
je
or
cmp
inc
and
data16
aaa
cltd
inc
dec
jbe
jg
in
jl
aam
das
dec
xor
fldt
sbb
inc
imul
jl
in
inc
mov
ss
push
daa
inc
out
sub
bnd
js
fs
cmp
insl
xchg
ret
xchg
rcrb
ljmp
add
pop
aas
daa
mulb
out
hlt
adc
sbb
adc
xor
data16
aaa
sbb
je
jecxz
push
daa
adc
push
jne
stc
xlat
sbb
test
in
adc
sub
push
ret
cmp
bound
in
dec
push
cmpsl
mov
sub
mov
out
adc
sub
mov
push
fbld
adc
les
popa
mov
xor
sbb
jbe
xchg
push
aad
imul
adc
movsb
dec
xor
cmpsl
inc
mov
fwait
xchg
jno
jmp
mov
ficomps
loopne
inc
outsb
hlt
mov
loope
hlt
mov
mov
pop
data16
sahf
fdivp
loopne
sub
sbb
iret
dec
loope
and
add
xor
fidivrl
ljmp
pop
fcmovne
mov
xor
xchg
and
xchg
out
lret
repnz
jmp
jne
mov
push
cmc
pop
inc
jp
into
and
add
mov
lds
sub
and
loop
mov
loop
pusha
enter
mov
push
and
je
outsl
fs
sub
sub
imul
push
mov
xchg
and
push
push
inc
int3
loop
or
xor
jnp
and
ret
test
cld
mov
subb
test
call
cmp
emms
push
aam
outsb
into
cmp
int
fisubl
call
repnz
push
mov
push
mov
push
test
xchg
idivb
cli
repnz
adc
fwait
mov
mov
pushf
stos
leave
sub
inc
outsb
inc
mov
shll
cmpsb
jg
sbb
movl
bound
mov
pop
push
outsb
leave
outsl
imul
push
scas
sub
push
stos
shlb
orl
inc
xchg
jne
xchg
inc
adc
cmp
clc
popa
sbbb
leave
repz
out
sbb
sbbb
jb
testb
mov
or
mov
jg
sbb
fsub
test
lret
into
mov
xchg
mov
sub
adc
loop
call
in
add
jnp
cmp
cwtl
fisubl
jo
insb
aas
test
aaa
jne,pn
loope
fldl
rcl
and
or
fisubrl
sarb
xchg
mov
cld
xor
faddl
in
sub
xlat
lahf
jmp
xchg
ss
jb
xchg
cs
mov
jae
call
fwait
je
jnp
jg
mov
xor
std
xor
jae
jp
sub
mov
push
jnp
mov
outsb
xchg
cmp
push
cmpsl
xchg
mov
nop
lret
mov
mov
fisubrl
xchg
cwtl
push
push
cli
ret
in
arpl
jns
das
adc
fidivrl
xchg
cmc
sti
std
repnz
aaa
jo
dec
repnz
xchg
dec
xor
hlt
push
divb
adc
lcall
mov
cmp
mov
ljmp
pushf
push
mov
stc
cmpsb
mov
or
cmpsb
push
leave
jb
fmul
mov
repz
lds
xor
shlb
xor
loop
dec
lea
and
inc
mov
sbb
nop
ja
mov
stos
int3
rolb
vcvtsd2si
pop
jmp
cmp
xchg
cld
adc
mov
pop
push
loopne
and
and
push
pusha
adc
jecxz
roll
test
jne
ljmp
cmc
dec
pusha
lret
leave
sub
bound
xchg
or
jecxz
and
call
das
mov
aas
imull
shll
in
and
jbe
lcall
adc
mov
addr16
push
pop
cmc
pusha
movsl
sbb
dec
xchg
and
lds
shll
rcr
xlat
add
orl
call
lds
ret
sbb
jge
or
inc
mov
in
hlt
mov
addr16
shl
jno
sbb
mov
and
dec
shr
scas
inc
xor
cwtl
xor
mov
test
sub
push
nop
add
cmp
jle
addr16
add
loop
popl
sub
int
mov
fwait
add
push
repnz
lret
bound
insl
xchg
xor
sbb
sub
adc
insl
movsl
dec
pop
inc
addr16
jbe
shrb
loop
call
iret
dec
jb
addl
adc
add
data16
ss
dec
xor
push
fwait
jmp
test
sbb
mov
outsb
imul
in
int
xor
adc
xorb
fwait
shlb
cmc
in
outsb
lock
or
sub
ss
mov
stc
xchg
sti
outsl
les
mov
mov
or
dec
out
push
xchg
push
pop
dec
les
outsb
push
inc
cmp
lret
jo
adc
push
addr16
mov
xchg
mov
push
shlb
jne
insb
fstpt
mov
dec
mov
in
push
ja
xchg
xchg
xor
fsqrt
and
repnz
je
ret
enter
add
ret
jecxz
push
xchg
sahf
mov
adc
mov
xchg
js
movsl
sbb
stos
adc
call
inc
mov
and
jecxz
mov
mov
push
in
loop
pop
hlt
xor
push
cmp
div
enter
and
outsb
sahf
mulb
ror
jnp
jb
repnz
inc
outsb
cwtl
inc
xchg
jl
roll
xchg
mov
inc
mov
outsb
popf
idivb
mov
shrl
push
into
or
sti
xor
jae
punpcklwd
dec
jmp
adc
jbe
and
and
aad
mov
mov
adc
adcb
add
fcompl
xchg
pusha
dec
inc
cmp
push
mov
mov
jb
setle
push
pushf
pop
movsl
and
arpl
and
sbb
and
mov
mov
pop
jbe
negl
mov
rcr
xchg
mov
push
lcall
imul
pushf
mov
push
fdivl
and
adc
jmp
push
sub
xchg
loop
lret
les
dec
pop
mov
loopne
cmpsb
pop
lcall
mov
sar
inc
nop
popf
push
jb
mov
push
pop
cmp
mov
xor
outsb
outsb
inc
jg
adc
movhps
mov
aaa
mov
adc
fdivrs
pop
fsubs
and
or
push
or
das
push
inc
mov
mov
xchg
mov
call
pop
mov
psrad
mov
sbb
dec
scas
cmp
leave
dec
push
ret
in
xchg
inc
rcrl
add
pop
mov
ret
hlt
addr16
mov
pop
into
inc
add
out
mov
arpl
mov
lea
dec
xor
gs
mov
int
pop
pop
adc
sub
mulb
pushf
fdivrs
inc
xchg
pop
shll
je
xlat
lret
inc
repnz
xor
fnstsw
pushf
stc
mov
icebp
adc
push
lahf
xor
adc
mov
cs
cld
repz
adc
cmpb
test
xor
inc
xor
pop
add
repnz
push
ljmp
and
push
mov
pop
mov
dec
cld
mov
mov
mov
xchg
test
pop
pop
xor
mov
nop
push
and
push
push
sub
iret
jae
fsubl
lock
push
loope
mov
add
pop
hlt
icebp
sbb
xor
and
pushf
aam
jne
push
xchg
push
imul
aaa
lock
mov
mov
out
mov
mov
sbb
loope
ret
sub
jmp
test
add
sub
push
pop
mov
inc
xorb
adc
add
scas
lcall
imul
lea
scas
mov
fbstp
clc
inc
mov
negl
xor
inc
push
movsl
push
inc
mov
lods
inc
mov
jl
or
stos
sub
je
clc
mov
push
mov
jmp
inc
mov
push
dec
mov
cmp
aas
lock
repz
das
bound
adc
push
and
addr16
leave
inc
sub
jle
and
or
inc
and
loopne
pop
hlt
mov
push
or
adc
inc
test
fs
and
push
mov
sub
fidivrs
addl
xchg
std
and
scas
sbbb
stos
lds
jecxz
mov
jle
out
and
clc
aaa
cld
ds
adc
mov
popa
loop
jo
add
repz
pop
sub
mov
lahf
inc
faddl
lds
dec
push
sbb
sub
fsubrp
mov
insl
pop
lock
dec
je
adcl
sbb
pusha
stos
sahf
mov
lcall
mov
jecxz
jg
xor
mov
popa
ficoms
hlt
flds
nop
mov
and
dec
pop
inc
das
xchg
fcomi
cld
mov
scas
hlt
adc
cmpsl
or
bound
popa
sub
cmp
adc
mov
jae
inc
dec
cmp
adc
xchg
or
into
xor
jne
push
inc
or
outsb
dec
scas
mov
aaa
lods
sub
push
sti
ljmp
inc
test
aad
push
and
ss
dec
test
push
pusha
hlt
movsb
stos
or
dec
push
orl
inc
std
ljmp
inc
arpl
add
sbb
pop
mov
cli
ljmp
ljmp
adc
mov
pop
adc
sub
sub
xchg
pop
pop
sub
out
xchg
inc
fimuls
test
or
push
push
test
adc
add
shrl
leave
push
scas
je
xor
xor
xor
push
inc
xorb
inc
cmc
je
cltd
imul
out
push
xchg
dec
dec
cmc
je
lret
call
inc
sub
sbb
inc
arpl
fisttpll
inc
jno
jmp
push
test
pusha
into
fsubl
ljmp
jecxz
push
push
ds
adc
loopne
xchg
adc
imul
xchg
test
add
sbb
roll
mov
rol
dec
xchg
and
add
scas
ret
enter
mov
xor
psadbw
jo
lods
enter
inc
mov
test
fstl
movl
jg
mov
push
insb
jae
and
loopne
dec
cwtl
mov
hlt
mov
mov
scas
mov
add
rorb
mov
dec
ja
test
jb
xor
icebp
push
fs
xchg
rol
and
dec
and
fdivrl
xchg
push
xchg
push
jne
das
sub
hlt
jno
push
shrl
inc
xchg
gs
stos
jmp
jp
mov
adc
nop
lret
ret
xor
mov
daa
gs
scas
push
fcom
loopne
adcl
stos
ja
lds
out
in
or
adc
stos
insl
add
arpl
xchg
popa
lds
sbb
rcrl
xchg
loop
push
adc
mov
or
aas
inc
adc
loop
mov
dec
and
mov
fwait
push
arpl
cmp
rcrl
cwtl
insb
idivb
lcall
scas
lea
and
sub
fwait
adc
mov
jmp
cwtl
adc
sar
sar
icebp
add
roll
mov
pusha
addr16
aas
sbbb
mov
cmp
aaa
sub
shr
gs
hlt
jbe
mov
or
mov
mov
cmp
mov
int
jb
outsl
jecxz
xchg
sbb
cs
xlat
stos
insb
pusha
ljmp
dec
mov
xor
xchg
iret
xchg
jg
test
cwtl
stos
test
xchg
xor
addl
shrl
and
imul
out
mov
add
pop
ljmp
cs
ja
mov
mov
notl
xchg
es
inc
outsb
pusha
mov
repnz
mov
jle
jecxz
mov
push
push
in
ljmp
std
jl
sub
cmp
jne
and
ret
rorb
add
xor
gs
movups
test
outsl
aas
add
mov
mov
inc
mov
xor
push
dec
jp
arpl
sbb
xchg
inc
into
pop
pop
pop
stc
adc
shll
sbb
and
xor
xchg
mov
xchg
push
cmp
sub
aas
les
sub
pop
xor
push
scas
out
or
mov
jp
jb
jnp
push
xor
push
fbstp
dec
fisubrs
pop
jnp
aam
lea
sub
or
ja
out
jbe
inc
pop
dec
andl
dec
and
pushf
jo
mov
and
call
mov
or
repnz
pop
cmc
enter
pop
mov
pop
mov
insb
shlb
dec
sbb
ss
and
jne
sbb
fsubrs
sbb
test
sub
xlat
inc
loop,pn
insb
mov
push
lds
jne
xchg
push
and
in
loop
cmp
mov
adc
adc
push
and
mov
sub
addb
jmp
cld
les
pop
and
and
fwait
jne
lret
dec
inc
xor
stos
out
mov
repnz
pusha
sbb
in
loop
and
movsb
or
push
jmp
sbb
push
add
mov
inc
insl
out
pop
nop
sbb
lock
cmp
out
inc
sbbb
std
mov
icebp
push
sub
aaa
lahf
iret
mov
sub
int3
lret
push
push
or
sbb
movsl
imul
outsl
xchg
sub
in
fildll
loope
arpl
pusha
sub
cmc
shrl
testb
jp
das
fisubl
pop
hlt
mov
jb
imul
loop
pop
mov
jecxz
popa
sub
inc
imul
push
inc
sub
jmp
popa
adc
jecxz
in
lea
push
jmp
push
sub
in
lret
sub
inc
jb
inc
sub
imul
out
pop
aaa
shrd
push
insl
ja
inc
outsb
outsl
pusha
je
lahf
jecxz
pusha
mull
insl
out
hlt
xor
xchg
fwait
push
fimull
push
push
aaa
xorl
shll
pusha
or
ds
sbb
insl
pusha
dec
mov
addb
pusha
push
lcall
pop
inc
in
loop
insb
sub
mov
mov
inc
jmp
aad
das
aaa
out
insb
push
aaa
mov
push
ss
loop
and
push
cmp
loop
iret
push
xor
sbb
cmc
sub
inc
push
jmp
sub
mov
mov
pop
dec
push
subb
mov
push
out
stos
pusha
sub
push
insb
mov
rcrl
lea
inc
call
in
sub
bound
loop
hlt
push
inc
push
ljmp
add
ss
mov
pop
jge
mov
fwait
adc
mov
ret
inc
dec
mov
ret
jo
mov
andb
add
push
scas
sub
in
aaa
das
jb
aaa
push
fs
inc
out
xchg
push
push
ss
outsb
add
inc
call
and
ss
call
pusha
jne
loop
push
push
sub
sbb
jmp
dec
ret
pusha
dec
loopne
insb
inc
aam
sub
je
inc
je
xlat
fs
inc
das
xchg
mov
jbe
das
aaa
push
aad
push
sub
aaa
das
push
add
jne
inc
hlt
sbbb
add
dec
mov
push
mov
lock
scas
fwait
add
push
push
push
jne
add
insl
in
repnz
push
fdiv
cmpsl
movsl
call
cmc
sub
cli
and
lock
popa
push
push
loop
and
sbb
push
jbe
xchg
inc
add
xchg
in
adc
mov
in
push
dec
mov
in
lds
jne
inc
add
outsl
rorb
scas
push
inc
add
and
and
add
insb
push
mov
add
push
lods
push
ss
add
inc
and
fwait
loop
push
mov
aaa
and
and
sub
das
sub
int
je
lahf
jmp
push
add
push
insb
inc
aam
dec
push
in
dec
pop
add
fs
mov
pop
add
pusha
xlat
fwait
loop
push
adc
negb
jne
add
fs
je
into
out
add
in
rol
aam
in
movsl
ret
outsl
sub
add
in
aaa
imul
push
outsl
inc
das
jae
in
movl
insl
push
pop
and
jecxz
dec
rsqrtps
into
je
outsb
aaa
sti
daa
insl
hlt
xor
cmp
xor
aaa
popa
popf
faddl
shrl
and
ljmp
and
cmp
sub
dec
push
sub
mov
mov
hlt
ss
lret
mov
js
in
call
adc
push
push
xor
repz
insl
mov
test
and
sbb
mov
mov
mov
fnstenv
ljmp
cmovae
shrl
setne
daa
imul
cmp
loopne
imulb
add
fidivl
imul
ljmp
mov
xchg
pop
dec
mov
shlb
inc
insb
loop
pop
pusha
inc
inc
and
lahf
jne
add
xor
and
pop
xchg
ljmp
sub
mov
mov
dec
subb
sti
lret
ljmp
push
insl
jb
fiaddl
jmp
cltd
jecxz
sbb
hlt
pop
cs
push
jmp
mov
lcall
pusha
mov
jb
movsb
push
jmp
nop
je
rsm
xchg
pop
and
jb
sub
push
das
les
cmp
push
adc
lcall
xchg
ja
aad
push
cs
pusha
mov
xchg
aaa
loop
imul
pop
insb
daa
call
pusha
jmp
aam
pusha
ret
pusha
sub
es
pop
ffree
mov
je
hlt
lods
mov
inc
arpl
lea
loope
push
and
adc
and
pusha
xchg
fsts
sbb
and
rcrb
hlt
push
lahf
xchg
cmpsb
adc
scas
out
dec
cld
flds
jp
push
stc
lea
jnp
push
arpl
mov
imul
jbe
push
sub
je
pop
lcall
cwtl
sub
rep
imulb
and
and
sub
pop
out
pusha
mov
sub
pusha
push
popa
loop
mov
stos
out
sub
sub
xor
mov
daa
fildl
xchg
or
inc
ljmp
insl
loope
ljmp
sub
notl
jae
and
jle
outsb
add
pusha
jecxz
jne
loop
jecxz
mov
lret
leave
loop
pop
andps
in
ficomps
shll
mov
testl
jp
pusha
jb
pop
pop
leave
in
jecxz
insb
sbbl
jmp
in
add
sub
inc
pop
imul
and
pusha
imull
testl
pusha
mov
aam
pusha
ja
out
imul
in
out
push
pusha
imul
mov
popf
lret
push
ss
pusha
sub
fisubl
pop
loope
stos
in
out
fisubl
inc
out
inc
pusha
ljmp
loop
and
popa
xchg
test
jbe
cmpb
outsb
lahf
imul
push
xchg
imul
andb
adcb
fldenv
adc
out
push
push
pusha
jnp
fisubrl
in
push
jmp
call
cmc
mov
imul
fwait
pusha
je
ljmp
inc
jecxz
dec
mov
addr16
inc
loope
popa
arpl
loop
jb
pusha
pusha
call
cmp
pop
pusha
pop
outsb
insb
in
and
out
rorl
divb
in
sub
push
push
cli
jmp
ljmp
xchg
insb
cli
testl
ljmp
jbe
cmc
mov
outsb
add
xor
inc
jecxz
mov
jne
pop
loope
add
imul
xor
inc
mulb
mov
pop
dec
mov
les
pusha
loop
ja,pn
outsb
push
insl
call
dec
in
and
outsl
insb
xor
jmp
and
imul
lahf
cmp
lahf
cmp
jmp
lahf
cmp
ljmp
push
lahf
cmp
imul
cmc
fidivrl
pusha
out
jb
jmp
je
loopne
jecxz
insb
jne
xchg
jecxz
inc
insl
out
adc
sbbb
arpl
in
add
mov
popa
dec
dec
jmp
pusha
jne
inc
push
pusha
icebp
bound
arpl
inc
jecxz
lods
sbb
xchg
sub
call
dec
das
call
jbe
loop
sbb
pop
popa
in
cwtl
outsb
xor
dec
je
pop
out
insl
in
ret
inc
and
jmp
inc
and
pop
jb
add
pop
jbe
pop
shl
xchg
cli
cmp
cmp
das
jbe
pop
rcll
adc
das
pop
addl
inc
cs
enter
loop
insb
in
aaa
xchg
pusha
shll
loope
jne
jl
fiaddl
jb
cli
and
out
lret
in
pusha
dec
loope
push
insl
jmp
aaa
ljmp
nop
in
enter
rcr
push
stos
pusha
std
faddl
btr
inc
popa
xchg
or
scas
add
push
push
and
ljmp
inc
shll
pusha
xchg
mov
movsb
ljmp
xor
sub
xchg
lret
pop
in
inc
xor
js
xor
std
mov
jge
lods
call
mov
sub
xor
ljmp
in
xchg
cmovbe
dec
lret
mov
out
hlt
pusha
sub
ljmp
adc
sub
mov
jo
and
stos
inc
aaa
mov
or
std
rcrl
push
or
orb
in
insl
lds
fwait
or
pop
popw
insl
lds
add
rorl
inc
incl
dec
xor
and
push
push
or
jns
jecxz
out
cmp
push
ljmp
insl
js
cmp
or
loopne
add
xor
adc
icebp
std
cmp
aas
iret
xor
mov
mov
sbb
pusha
outsl
inc
out
xor
dec
jmp
mov
imul
in
test
pusha
imul
lret
jmp
push
sbb
push
mov
push
stos
out
sbb
cmp
scas
aaa
arpl
out
scas
mov
data16
fisubrs
push
xor
das
jb
outsb
jae
sub
ret
out
xchg
notb
jbe
js
push
in
and
negb
fstps
iret
inc
in
push
test
test
sub
je
lods
push
aad
adcb
divb
daa
fwait
in
out
js
ret
in
and
iret
add
outsb
bound
jb
push
jbe
lock
push
pop
push
insl
call
and
inc
mov
mov
mov
sbb
pop
push
pusha
ret
xchg
sub
pusha
xor
insl
loope
xchg
js
sbb
ljmp
xchg
out
sub
int
ljmp
and
mov
outsl
loope
in
xchg
pusha
loope
insb
push
xchg
outsb
jmp
sub
insb
in
or
pop
jecxz
repnz
imul
pusha
fisubrl
imul
jecxz
ja
ss
insb
loope
cmc
push
fs
call
in
loop
add
hlt
push
inc
push
and
sti
jne
add
jne
add
fistpl
jne
add
or
pop
add
push
insl
ljmp
out
fucomp
clc
pop
dec
repz
xchg
movsl
insb
adc
repnz
sbb
outsl
pop
shlb
adc
jbe
pop
push
loop
push
xchg
sbb
sarl
ljmp
lahf
outsl
insl
in
pop
inc
ljmp
scas
aaa
lcall
push
je
out
sub
sub
loop
insb
mov
adc
mov
inc
jbe
adc
dec
enter
bound
mov
orl
daa
loopne
ja
popf
jecxz
mov
insl
ret
loop
call
jg
and
lret
mov
stos
xchg
dec
pusha
mov
inc
int3
push
inc
dec
int
notl
in
daa
push
sub
test
jns
lods
loopne
push
ret
jb
sub
scas
or
sub
sub
insl
in
push
cmp
lahf
imul
mov
pusha
jg
out
inc
ss
sub
out
sub
outsb
cltd
lods
add
test
push
loop
das
out
aaa
pusha
jmp
into
shll
lret
in
fisubrl
pop
jmp
push
ja
ljmp
je
fldenv
adc
call
cmc
xchg
inc
insb
ss
inc
je
jmp
jecxz
inc
out
jne
jmp
mov
push
push
pusha
jns
dec
popa
sahf
inc
loopne
inc
outsb
dec
inc
in
dec
inc
outsl
dec
and
push
sahf
ja
insl
push
je
in
or
push
test
shr
int
dec
insl
test
or
mov
notb
repz
in
sub
pminub
mov
push
sub
in
jmp
daa
xor
insb
scas
push
add
and
xor
and
mov
sub
dec
inc
scas
and
cmpsl
mov
imul
test
jne
push
pop
out
jae
sub
push
aam
out
dec
mov
imul
gs
out
xchg
mov
jle
xlat
int3
dec
and
dec
shlb
fcoms
push
and
stos
lods
test
loope
ja
fld1
loop
pusha
push
into
mov
jecxz
repz
call
in
das
shr
or
jne
out
push
xchg
mul
fdiv
pop
lret
ds
insb
pop
fs
jbe
imul
mov
enter
inc
add
testb
out
mov
ljmp
xchg
enter
push
inc
push
imul
dec
inc
sbb
das
scas
inc
loop
cmp
out
lahf
push
push
outsb
jmp
push
jae
movsl
push
stos
popf
mov
imul
jbe
aaa
ja
jb
push
lea
ja
test
dec
call
insb
arpl
ja
loop
les
imul
xchg
mov
inc
out
pop
pusha
and
add
out
inc
das
fwait
jmp
loop
dec
push
xchg
push
hlt
inc
sub
mull
imul
hlt
loop
pushf
pop
out
push
pop
adc
cli
mov
adc
mov
pop
pop
cs
push
xor
mov
push
negb
xor
mov
and
dec
out
lret
mov
in
les
mov
in
divb
push
add
mov
and
push
outsl
loop
out
push
and
xchg
mov
out
sysexit
sub
shrl
push
mov
gs
fs
lds
cltd
call
testl
sahf
inc
out
push
dec
aam
xchg
lret
orb
cs
imulb
push
push
fisubrl
cs
mulb
imulb
push
lods
out
imul
jmp
imul
imul
push
jmp
pusha
insb
sub
inc
aam
ds
lods
sub
mov
and
or
mov
popf
mov
push
push
inc
jle
lret
gs
lret
push
addl
pop
shrl
and
lods
lcall
imull
mov
ds
push
test
and
out
pusha
mov
enter
push
test
loope
xchg
stc
push
xor
lods
xchg
xchg
roll
xchg
cwtl
xchg
xor
and
xchg
insl
mov
dec
inc
ds
xchg
mov
out
mov
aaa
mov
cltd
dec
cmp
setp
and
insl
cmc
cmpsl
and
and
add
scas
push
push
cmp
and
cli
loope
jns
fldenv
xchg
loop
aad
and
pop
pusha
test
mov
arpl
xchg
loope
es
jmp
add
jb
loope
ret
out
ret
loope
lods
jecxz
or
cmc
push
cmovne
icebp
arpl
pusha
fs
and
pusha
jecxz
sub
cmp
jecxz
pop
cmp
fs
and
adc
js
xor
int3
xchg
xchg
add
push
or
jns
mov
rcll
sbb
inc
rcll
pop
stos
mov
cmp
repnz
inc
fwait
pop
adc
imul
xor
imulb
jbe
mov
pop
add
in
pop
filds
out
xchg
sbb
ja
push
aad
jbe
inc
pusha
lods
aaa
fstpt
sarb
les
mov
clc
xor
rolb
out
jge
movsl
adc
fucomi
push
cwtl
push
mov
dec
rcrb
jo
int3
pop
mov
cmp
mov
sbb
data16
push
and
mov
movsl
call
fs
enter
and
xchg
movsl
push
cmp
sub
test
adc
dec
stc
jno
mov
into
jb
adc
mov
push
hlt
popa
lret
clc
jg
das
pushf
les
xor
ja
leave
jbe
mov
stc
mov
dec
xchg
lea
jb
jmp
call
add
sbb
add
xor
pop
call
into
out
xchg
loop
jbe
lock
adc
mov
cwtl
mov
loop
jl
jecxz
push
fidivrs
insb
or
lds
push
ret
adc
xor
jle
jo
lds
adc
xor
mov
movl
lea
jae
jmp
cmp
sar
setno
xor
mov
inc
pushl
setge
stos
not
push
setb
mov
lea
call
adc
fs
gs
mov
mov
pop
loope
repnz
cmp
pop
jbe
movsb
cs
mov
xor
jno
pop
loop
gs
insb
sbb
push
in
cmp
les
das
mov
xlat
jp
ret
bound
mov
add
push
xchg
call
stc
mov
pushf
add
push
cmp
jmp
and
mov
test
sbb
arpl
jbe
andb
mov
mov
jl
ret
inc
or
push
subb
loop
in
sub
push
xchg
jle
inc
loope
jb
lret
jne
les
jmp
cmp
lea
faddl
adc
xor
lret
fdivr
std
arpl
lcall
or
cmp
dec
rclb
test
inc
cmc
adc
pop
push
notl
sub
ljmp
inc
repnz
pop
jle
push
sbb
popf
mov
mov
and
notb
xchg
adc
aas
in
xor
cmc
repnz
push
jg
push
out
jbe
jg
imul
or
pop
mov
lds
cwtl
add
inc
js
clc
mov
jo
in
js
dec
lock
leave
xchg
or
cwtl
cmp
add
inc
out
sub
jle
leave
adc
xor
dec
rclb
imul
and
stos
sub
into
je
jns
and
repz
mov
mov
sub
push
mov
in
loopne
xchg
repz
mov
pop
addb
lcall
jl
adc
jle
cmpsl
dec
negl
loopne
pop
int
adc
xor
lea
mov
sar
movzbw
shr
rcl
push
rcl
neg
clc
push
aaa
ror
mov
cmp
stc
call
push
cmp
movw
lea
jae
shl
push
push
mov
mov
sub
inc
mov
mov
btr
pop
dec
ror
mov
pusha
test
test
pushf
sub
pushl
repnz
movb
call
cli
decl
mov
xor
rcrb
popa
call
lret
jmp
mov
ja
xlat
in
ret
dec
dec
mov
and
adc
insb
mul
push
insb
push
js
repz
sarl
stc
hlt
je
movsb
dec
jmp
cmp
jg
leave
outsb
pop
ret
imul
or
jns
stc
call
or
jns
mov
icebp
pop
sahf
and
mov
rorb
add
shlb
xor
sbb
repz
cmp
lcall
push
mov
cmp
dec
push
lcall
test
mov
test
gs
out
xor
mov
xchg
xlat
jo
scas
pop
xor
xor
fsubrl
inc
cmp
jp
mov
sbb
xchg
cltd
mov
and
inc
repz
cmp
mov
leave
insl
sbb
clc
aaa
jle
stos
loop
dec
aad
out
mov
movsb
out
lock
xchg
movsb
sub
jge
aas
cmc
or
out
nop
sarl
roll
hlt
out
push
mov
sub
kmovw
or
jl
pop
and
or
rclb
and
inc
add
cmpsb
inc
mov
pop
cmp
xchg
pop
jg
push
fcomp
test
sbb
dec
repz
in
xor
jns
rcll
aaa
test
dec
push
fistpl
mov
popa
inc
scas
icebp
ja
nop
sbb
cmp
fstpl
ret
in
pop
push
mov
mov
mov
jge
mov
pop
sbb
mov
mov
mov
sbb
add
lea
adc
inc
pop
loop
gs
ljmp
sub
jl
lret
dec
lea
adc
ljmp
mov
stos
push
out
lcall
das
adc
cmp
xchg
push
movl
jmp
xor
xor
in
push
dec
lret
push
frstor
insb
in
jno
jge
mov
xlat
negl
lcall
pop
mov
jne
mov
dec
pusha
loop
repz
insb
sbb
lock
or
mov
ret
xchg
mov
xlat
jnp
enter
gs
clc
cmp
xor
ret
xor
mov
arpl
jnp
mov
xchg
sbb
mov
mov
mov
ret
inc
pop
movb
jmp
insb
ljmp
xchg
aad
testb
mov
jp
ret
mov
hlt
lahf
inc
out
clc
cmp
and
fs
ja
bt
push
imul
pusha
test
push
cmp
add
push
lea
jmp
add
xchg
and
nop
xor
gs
mov
mov
inc
in
xchg
ljmp
push
fiaddl
and
in
movsl
dec
popa
loop
sti
cmpsb
adc
push
lahf
pop
aam
cmp
bound
mov
ljmp
clc
cmp
rcll
lea
gs
aaa
rolb
in
bnd
xchg
ss
movsl
adc
shlb
adc
loop
sbb
cld
dec
fildl
jae
mov
arpl
mov
add
jecxz
adc
cmp
je
jg
add
fs
jne
call
inc
dec
into
push
idivl
push
ret
dec
into
push
xlat
arpl
jnp
andb
ret
inc
xchg
push
in
int
cmpsl
adc
aas
mov
adc
mov
enter
sub
fisttpl
mov
cmp
test
sarl
shlb
jae
clc
cmp
and
btr
xor
ror
sub
neg
btr
rcl
mov
call
std
pusha
add
mov
add
loope
xorb
andb
ja
mov
loopne
ja
inc
loope
lahf
add
inc
mov
ja
and
pusha
add
andb
add
and
ja
sbbb
sbb
jae
test
test
movb
movb
repnz
jmp
mov
mov
lea
jae
pusha
call
stc
call
call
js
incb
ljmp
dec
xlat
pop
fistpl
jo
pushf
cmp
dec
and
jg
sub
mov
add
jb
jmp
rcrl
inc
jecxz
xor
andb
ljmp
imul
jle
jl
lods
dec
dec
mov
pop
mov
add
clc
cmp
scas
repnz
cmc
pushf
add
pusha
push
test
cmp
call
addr16
xlat
fs
cmp
jg
mov
xchg
adc
and
sub
cmp
xchg
int
mov
push
popa
loop
into
pop
gs
inc
and
or
mov
jg
sysexit
pushf
cmp
mov
test
insl
imul
and
fistpl
dec
addr16
int
outsb
mov
add
ds
mov
lahf
dec
sub
xchg
push
loopne
or
sub
jb
jmp
or
test
gs
lods
mov
jb
mov
sti
movsb
inc
jmp
cmp
ficoml
mov
add
test
dec
iret
push
aad
out
xor
loop
jno
lods
insb
cmc
popf
in
mov
loope
movsb
or
clc
insb
sbb
or
sbb
jp
sarl
sub
mov
xchg
xor
jnp
int3
js
mov
cmp
mov
call
push
push
mov
cmc
cmp
neg
call
stc
mov
test
cmp
pushl
mov
jmp
call
jmp
call
out
jne
cwtl
outsb
xor
dec
mov
jp
addb
sbb
pop
add
mov
mov
mov
in
or
imul
fmul
movsb
mulb
shrb
pop
cmpsb
dec
clc
cltd
cmp
mov
subl
out
lea
movsl
xor
mov
data16
xchg
std
inc
leave
dec
rclb
gs
jle
lahf
inc
arpl
jg
inc
in
in
shl
int3
mov
push
shlb
loop
mov
jbe
pop
repz
lret
popf
jmp
fsubl
lcall
sub
jae
les
clc
cmp
xor
pusha
pushf
lea
je
seta
xor
add
bswap
sar
sub
shr
movzbw
shr
not
mov
mov
jp
shrd
rol
add
rol
pushf
add
lea
rcr
clc
mov
push
pusha
pushf
jmp
push
lea
jle
push
lea
jae
setp
rol
mov
bts
mov
xchg
mov
and
sbb
cmc
mov
stc
call
add
movw
mov
pushl
cmc
pushf
push
test
push
pushf
lea
je
jmp
xor
ror
stc
not
rol
shl
mov
adc
not
not
pusha
sub
ror
neg
neg
test
xor
bt
jmp
add
mov
mov
out
das
mov
mov
imul
jnp
push
loop
mov
in
rcrb
addb
mov
inc
loop
sar
insb
sbb
decl
fwait
sarl
in
xchg
cmp
xor
jge
lret
jne
int
clc
ds
jp
clc
call
pushl
lea
jne
jmp
mov
pushf
pushl
pushl
pushf
lea
jmp
xchg
jae
jns
xor
jecxz
or
lods
cmp
push
rcrb
imul
mov
xchg
xorl
test
cmp
sahf
inc
mov
sbb
mov
fsubrl
xor
cltd
jmp
pop
mov
clc
lahf
inc
cmc
mov
inc
adc
leave
push
repnz
sub
xchg
std
inc
push
fisubl
idivl
mov
pusha
fwait
dec
pshufw
xor
out
sbb
adc
int3
jno
cmovo
js
lret
jbe
xchg
cwtl
cmp
mov
lret
and
movlps
pusha
jl,pt
xchg
xchg
jl,pt
or
adc
aam
in
stos
xchg
push
cmc
xchg
repnz
pushf
mov
pop
out
mov
out
dec
push
ret
and
aaa
rorb
sahf
mov
ja
lcall
sub
jo
lds
clc
aas
sub
push
shlb
xchg
sbb
idivl
orb
adc
and
outsl
xor
loop
out
xor
pop
pop
in
rorb
cmpsl
dec
push
imul
xchg
lret
aad
scas
aam
mov
dec
out
xchg
inc
jecxz
xor
jns
enter
adc
inc
test
cmp
lods
loope
xor
jg
test
nop
push
sahf
sub
jo
ss
mov
jmp
sbb
aas
loopne
xchg
xor
jbe
adc
adc
mov
and
push
aaa
xor
sbb
pop
push
insb
cld
daa
push
clc
mov
aas
call
push
add
aas
and
lods
cmp
sbb
in
cli
mov
stc
sbb
jmp
jbe
lret
outsl
sbb
pop
add
dec
adc
inc
or
inc
out
mov
pusha
lea
call
push
push
jmp
call
cmp
xor
and
fildll
js
test
mov
mov
out
adc
or
test
jbe
jge
loop
mov
pop
insb
sbb
cmpsl
roll
arpl
lock
and
jo
mov
pop
test
push
add
mulb
js
fsubs
jo
xchg
test
iret
jo
ret
cmpsl
or
inc
add
sub
jmp
add
adc
sub
push
dec
out
repnz
mov
push
scas
mov
cmpsb
sbbl
xchg
and
and
sbb
mov
repnz
pop
mov
cld
and
push
iret
mov
sarb
jg
lds
data16
out
mov
adc
inc
mov
std
push
rcrb
mov
adc
or
arpl
jae
orl
cmp
inc
incl
jle
cmp
xchg
jno
xor
jmp
push
hlt
rcrb
syscall
dec
icebp
mov
test
shll
jl
and
cltd
xor
push
ret
xor
add
sbb
and
mov
js
pop
pop
jns
and
mov
lock
pushf
inc
sbb
fisttpll
xchg
pop
sti
movsl
push
add
inc
shrb
enter
mov
cmp
jmp
lea
stos
ds
inc
mov
sbb
cmp
pop
xchg
pop
les
jle
std
jne
incb
aaa
std
mov
cli
pop
jno
dec
or
mov
sub
or
pop
bsr
jnp
mov
xor
xchg
add
and
pop
cwtl
xor
in
jmp
int3
xchg
cli
cmp
mov
mov
pop
test
ljmp
js
adc
inc
out
repnz
fstpt
push
xor
frstor
jno
movsb
inc
xchg
inc
loop
cli
sarl
ret
pop
pop
leave
test
sarb
insl
add
insb
push
stos
mov
add
mov
jne
jo
mov
repnz
or
jmp
xchg
leave
lea
jne
push
pusha
movw
pusha
stos
mov
pushf
lea
jmp
leave
stos
cs
iret
xor
stos
adc
mov
stos
xor
and
mov
mov
in
ret
push
lds
and
loop
cld
pop
jae
push
mov
pop
lahf
pushl
mov
mov
mov
xchg
shll
imul
clc
inc
mov
mov
loope
adc
and
ficompl
insb
out
js
mov
mov
pop
mov
xor
xor
std
mov
cmp
addb
loope
mov
sub
dec
sti
sub
push
sub
add
and
mov
sahf
push
scas
pop
add
inc
adc
imul
push
imul
orl
sub
mov
or
mov
in
mov
dec
lcall
or
in
xchg
adc
inc
push
inc
std
pusha
lea
jb
pusha
push
push
pushf
pushl
ret
push
pusha
pushl
lea
ja
call
mov
and
sub
es
sub
push
fcompl
xchg
inc
popa
add
push
test
mov
icebp
xchg
xor
push
add
sub
and
xchg
push
in
or
mov
push
xchg
mov
adc
and
in
fcoms
mov
cltd
std
fwait
je
mov
rdmsr
decb
mov
sub
mov
lds
lcall
shlb
mov
notl
clc
inc
psubw
push
ret
lcall
imul
pop
mov
mov
cmp
mov
cltd
inc
in
ret
push
mov
push
mov
insb
lcall
xchg
pop
mov
orb
jns
movsb
inc
repnz
inc
in
lcall
adc
inc
xor
cmp
sub
jle
stc
pusha
xor
jmp
xchg
fwait
sbb
push
jmp
les
arpl
insb
clc
addb
adc
inc
testl
mov
jb
jbe
push
mov
xchg
push
sub
mov
sbbl
push
inc
js
mov
jmp
pop
push
inc
xor
cmp
iret
sarl
xchg
sbbb
cmpsb
es
jo
sbb
mov
xchg
mov
mov
lcall
lea
fstpt
enter
adc
inc
test
cld
add
fnstcw
fldenv
clc
jp
xchg
and
mov
mov
adc
test
pop
pushf
sbb
mov
jno
mov
push
mov
lret
lods
aas
outsl
xor
lret
mov
test
cmc
bound
push
add
pop
test
push
fmull
sbb
sub
std
mov
and
stos
push
shll
leave
jbe
mov
sti
cmpsb
push
adc
inc
adc
inc
xor
ret
inc
jmp
test
scas
sbb
push
sahf
daa
lods
aaa
mov
pop
add
xor
mov
pcmpeqw
add
sub
out
lock
test
cwtl
lods
xor
cmpsb
push
xchg
fistpll
clc
nop
in
cs
outsb
fstps
mov
sbb
mov
kmovw
js
sti
ds
pop
std
cmp
sub
ret
cltd
adc
xor
clc
mov
ljmp
push
or
fistpll
fcomps
inc
jecxz
xor
jle
jae
addr16
clc
inc
inc
sub
mov
call
jp
ficomps
xor
int3
ss
test
xchg
sbb
inc
loop
lret
mov
into
jo
ret
pop
out
xchg
cmp
or
insl
or
inc
insb
push
stos
dec
test
mov
insb
mov
insl
or
ret
mov
mull
push
dec
aas
inc
lds
orb
lock
mov
lcall
jns
outsb
mov
push
icebp
jb
out
nop
insl
jge
add
faddl
test
dec
aad
ret
dec
or
cmpsl
or
test
dec
mov
mov
jge
pusha
add
jmp
mov
fmull
iret
jl
int
adc
stos
add
test
cmp
cmp
mov
lea
jb
pusha
cmc
cmp
pushf
lea
jae
jmp
jne
insb
insl
outsl
outsb
cs
insb
add
mov
bt
add
pusha
pushf
movzwl
rcr
mov
cmp
pushl
jmp
psllw
mov
xor
hlt
pop
push
movsl
sub
dec
rcrl
xorl
jmp
mov
jae
mov
inc
test
xor
adc
sbb
enter
xchg
add
add
mov
mov
add
sub
subb
outsl
push
mov
repnz
mov
xor
andb
jno
xor
fsubl
jns
mov
mov
dec
rep
push
stc
gs
mov
dec
push
mov
mov
pop
xchg
add
cld
push
testl
popf
jns
and
stos
push
add
ljmp
cmpb
sbb
push
lea
mov
jne
inc
out
mov
arpl
loope
lods
insl
mov
stc
mov
out
daa
adc
dec
aas
sub
inc
jmp
mov
jno
xor
mov
mov
gs
into
insl
lea
aam
push
fcomps
leave
push
addl
shlb
ljmp
fstl
cwtl
sbb
sarl
out
mov
lods
push
cmpsb
outsb
cwtl
jae
adc
lock
mov
mov
in
dec
jmp
cmpsb
inc
out
ja
add
pop
dec
hlt
sbb
mov
push
mov
ret
mov
insb
mov
jmp
call
dec
pop
inc
xchg
inc
and
stc
pushf
lea
jne
not
shl
movzbw
mov
jmp
sub
pusha
lea
jnp
pushf
rep
movzbw
bswap
mov
pushl
lea
jmp
push
pushf
bt
neg
call
loopne
stc
mov
push
sarl
push
mov
mov
lahf
and
dec
loop
shrb
sarl
xor
movsl
or
ljmp
mov
rclb
scas
mov
or
dec
cld
mov
fnstcw
adc
dec
mov
dec
cld
cmc
or
pushf
call
pushf
mov
pushf
mov
pusha
jmp
pushf
pusha
movzbl
test
clc
clc
bt
sub
bt
push
bt
pushl
not
clc
jmp
mov
sar
sar
shrd
mov
pusha
test
pusha
add
call
jmp
mov
pushf
mov
push
push
movw
mov
mov
jmp
jmp
mov
pusha
jmp
inc
cmc
sub
bt
push
clc
sub
jmp
mov
call
pusha
dec
mov
clc
add
jmp
mov
push
mov
pushf
lea
jmp
pushf
mov
push
mov
pusha
movl
mov
pushf
lea
jmp
pushf
mov
push
lea
jmp
pushf
mov
pushl
pushf
jmp
jmp
xor
bt
pushf
mov
movb
neg
test
pushf
sub
clc
movw
add
call
lea
mov
cwtl
pusha
pusha
movsbw
mov
jmp
mov
pushf
jmp
pushf
mov
mov
movb
call
pushf
mov
mov
mov
lea
jmp
stc
rol
call
mov
mov
push
mov
call
btr
not
rol
movzww
cmc
stc
cmc
xchg
bt
clc
stc
add
jb
push
cmp
add
pusha
stc
call
lea
ja
test
mov
test
stc
jmp
dec
das
aad
shrd
mov
inc
cmp
mov
pusha
sub
clc
cmp
stc
stc
shr
call
aaa
notl
inc
push
rcl
mov
jmp
call
stc
rol
call
bt
mov
test
clc
bt
test
sub
call
push
mov
movw
mov
push
mov
jmp
and
lea
rol
sbb
aas
sub
add
bswap
cwtl
jmp
push
call
shl
or
pusha
mov
cmp
pushl
call
shl
dec
mov
sbb
neg
shl
dec
mov
stc
jmp
inc
rol
mov
pushf
mov
add
pusha
pushf
mov
movw
lea
jmp
shrd
xadd
shl
and
mov
bts
mov
cmp
pusha
clc
test
add
pushf
mov
movb
pusha
lea
jmp
sub
call
call
movb
mov
movb
pushl
ret
mov
pushf
mov
pushl
pushf
lea
jmp
jmp
pusha
jmp
movw
pusha
lea
movl
lea
jne
pushf
mov
pushl
pushf
lea
jmp
mov
mov
pushf
push
jmp
jmp
call
pushf
mov
pusha
pushf
movl
mov
push
push
movl
jmp
jnp
mov
bt
btr
bt
shld
mov
bt
cmp
add
pushf
jmp
mov
pushl
mov
push
mov
mov
pushf
mov
jmp
call
adc
mov
rcl
rcl
mov
push
jmp
push
movzbw
mov
bswap
push
lea
pushf
jmp
pushl
popl
mov
pushf
lea
jmp
xor
xadd
daa
mov
aad
das
push
stc
mov
rdtsc
cwtl
btc
mov
movzbw
add
pushl
popf
cltd
rdtsc
movzbw
mov
jmp
sub
call
daa
lea
cmc
pushf
pushf
cmp
movl
mov
pusha
jmp
sub
clc
neg
pushf
add
clc
mov
jmp
call
rcl
rcr
dec
rcr
mov
jmp
mov
pushf
push
lea
jmp
pushf
clc
cmp
add
cmc
cwtl
pushl
bt
cmc
pushf
sub
call
call
bt
jmp
pushf
popl
call
pusha
mov
call
call
not
movw
add
clc
cmc
sub
pushf
jmp
jmp
jmp
mov
jmp
mov
mov
jmp
pushf
mov
mov
push
lea
jmp
mov
mov
mov
movw
movb
lea
jmp
pusha
mov
call
pushf
call
pusha
mov
push
pushf
popl
call
pushf
pushf
test
xor
call
pushl
popl
movw
push
lea
jmp
mov
pusha
push
lea
jmp
jmp
bswap
and
mov
movzbl
mov
cmp
not
push
pushl
stc
not
pusha
and
call
mov
pusha
pushl
push
mov
jmp
movw
sub
stc
push
mov
jmp
lea
cmp
cmp
and
rcr
xor
sub
not
movzbw
mov
not
not
pushf
jmp
call
pushf
pushl
jmp
pusha
sub
cmc
test
mov
pusha
add
pushf
pushf
call
sub
jmp
mov
jmp
mov
pushf
jmp
push
cwtl
mov
pushf
call
mov
test
sub
push
pusha
push
clc
shr
push
push
mov
call
mov
dec
btr
bsf
neg
lea
inc
pusha
lea
bswap
pushl
dec
clc
neg
not
sub
movb
rol
lea
shl
movzbl
add
rcl
mov
call
pushf
popl
jmp
stc
or
jmp
jmp
call
xor
aaa
mov
rcl
and
mov
pusha
not
cmc
not
bt
sub
movb
clc
and
jmp
mov
call
call
jmp
call
push
clc
pushf
pushl
popl
movw
add
test
jmp
mov
pushl
popl
pushf
pushf
lea
jmp
pushf
popl
pusha
jmp
call
pusha
pushf
jmp
push
jmp
dec
rcl
rcl
setne
movzbl
cmc
call
pushf
pushf
popl
movw
jmp
bswap
add
movb
pushf
rcr
rol
ror
rol
seta
sub
ror
rol
adc
neg
not
add
cmc
ror
mov
push
movb
add
push
dec
pusha
jmp
shl
not
mov
stc
test
jmp
jmp
pushl
popl
pusha
mov
push
lea
jmp
add
jmp
mov
push
mov
jmp
lea
jne
test
call
mov
movb
lea
jmp
pusha
pushf
jmp
push
pusha
mov
pusha
pushl
mov
push
pushl
jmp
test
add
call
call
pushf
mov
pushf
mov
call
pushf
setnp
pusha
mov
jmp
mov
pushf
lea
jmp
mov
cmp
cmc
add
pusha
pushf
mov
pushf
popl
call
not
mov
mov
not
not
not
push
movsbl
xchg
push
pushf
bswap
pushf
xchg
pushl
xchg
not
pop
xchg
setle
not
push
pushf
xchg
lea
setns
movsbw
pusha
repz
popl
rcr
pushl
popl
rcl
movl
xchg
jmp
mov
sub
jmp
mov
push
pushf
pushf
lea
jmp
mov
mov
mov
call
push
jmp
xor
bt
test
test
sub
cmp
cmp
sub
push
jmp
mov
pushf
movw
lea
jmp
push
jmp
pusha
pushl
pushf
popl
pushf
pushl
push
pushl
popl
pushf
push
lea
jmp
bt
shrd
mov
and
and
jmp
jmp
lea
jne
jmp
push
mov
pushf
pusha
jmp
bswap
mov
pop
jmp
pushl
jmp
mov
mov
pushf
call
mov
push
pushf
lea
jmp
pushf
movb
mov
pushf
movw
lea
jmp
bswap
mov
call
xor
shl
sar
or
movzbl
and
sub
bswap
not
sub
btr
cmc
stc
not
stc
pusha
rol
setg
pop
inc
call
shl
push
jmp
push
mov
pusha
call
push
and
decl
cmp
std
sub
jmp
and
ljmp
xchg
incl
xchg
decl
xchg
std
cmp
jmp
xchg
jmp
xchg
std
cmp
std
sub
in
sub
js
xchg
jmp
inc
xchg
call
inc
xchg
pushl
cmp
aas
and
xchg
lcall
xchg
decl
xchg
call
daa
xchg
call
sub
lcall
inc
xchg
decl
aas
xchg
jmp
inc
xchg
jmp
inc
xchg
jmp
cmp
call
inc
xchg
decl
xchg
aas
and
xchg
jmp
inc
xchg
lcall
cmp
xchg
call
xchg
std
sub
std
cmp
decl
xchg
in
sub
incl
xchg
dec
sub
decl
xchg
ljmp
aas
xchg
call
inc
xchg
jmp
ds
jmp
inc
xchg
call
inc
xchg
jmp
and
xchg
jmp
inc
xchg
pushl
cmp
jmp
and
incl
xchg
jmp
inc
xchg
jmp
inc
xchg
lcall
cmp
call
daa
xchg
decl
inc
xchg
std
cmp
jmp
inc
xchg
pushl
cmp
decl
cmp
xchg
aas
and
xchg
lcall
xchg
dec
sub
lcall
xchg
aas
and
xchg
call
xchg
jmp
xchg
jmp
xchg
std
cmp
jmp
xchg
decl
sub
lcall
xchg
ljmp
xchg
decl
xchg
call
cmp
xchg
decl
sub
xchg
call
xchg
lcall
xchg
lcall
xchg
incl
inc
xchg
jmp
inc
xchg
std
sub
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
jmp
xchg
dec
sub
aas
and
xchg
decl
xchg
jmp
xchg
decl
sub
decl
and
decl
sub
call
inc
xchg
decl
xchg
decl
xchg
decl
xchg
decl
xchg
decl
xchg
decl
xchg
decl
xchg
decl
xchg
decl
xchg
decl
xchg
decl
xchg
decl
xchg
decl
xchg
decl
xchg
decl
xchg
decl
xchg
ljmp
aas
xchg
decl
xor
jmp
xchg
pushl
es
call
xchg
jmp
cmp
incl
inc
xchg
decl
inc
xchg
ljmp
daa
xchg
call
inc
xchg
incl
xchg
lcall
xchg
call
xchg
dec
sub
decl
and
aas
and
xchg
jmp
inc
xchg
js
xchg
call
cmp
xchg
js
xchg
pushl
cmp
call
xchg
in
sub
call
and
xchg
incl
xchg
call
sub
call
inc
xchg
jmp
xchg
decl
cmp
xchg
ljmp
aas
xchg
jmp
xchg
pushl
es
decl
cmp
jmp
cmp
xchg
incl
inc
xchg
in
sub
call
inc
xchg
incl
xchg
js
xchg
decl
xchg
call
inc
xchg
call
xchg
jmp
xchg
ljmp
xchg
ljmp
es
ljmp
daa
xchg
lcall
xchg
incl
inc
xchg
lcall
xchg
jmp
and
decl
xchg
decl
xchg
pushl
mov
pushf
popl
call
pusha
mov
movl
mov
mov
mov
lea
jae
pushf
push
mov
push
push
mov
pushl
pushf
jmp
jmp
pusha
jmp
dec
push
call
mov
jmp
mov
movb
pushf
lea
jmp
xchg
shl
btc
not
mov
pushf
rcl
and
sbb
add
call
mov
pushf
pushf
mov
jmp
mov
jmp
push
pusha
mov
call
call
mov
movb
pushf
mov
push
lea
jmp
pushf
mov
jmp
call
pushf
mov
call
pusha
pusha
mov
pushf
pushl
pushf
popl
call
add
add
ror
ror
add
bswap
xadd
xor
shl
cmp
movzbl
lea
adc
cmc
xor
sub
rcr
movzbw
shl
mov
not
mov
btr
rcr
add
rcl
bsf
not
shr
mov
movsbl
bsf
sub
call
pushf
mov
call
call
push
mov
lea
jne
movzbl
rol
dec
xorb
pusha
mov
mov
pushf
pushf
lea
jmp
jmp
mov
pushf
call
cmc
shl
jmp
lea
jne
add
dec
inc
mov
jmp
or
add
shld
cwtl
mov
cmc
jmp
mov
pushf
bswap
lea
mov
pusha
call
movb
mov
jmp
xchg
mov
pushf
pushl
movl
pushf
pushf
mov
mov
pushl
push
pushl
ret
pushf
pushl
popl
push
lea
jmp
mov
mov
movb
lea
jmp
movb
mov
call
btr
lahf
mov
cmc
clc
stc
pushf
xchg
test
stc
add
pusha
add
stc
pushf
neg
movw
push
test
add
call
mov
call
mov
pushf
popl
movl
jmp
push
call
pushl
popl
mov
lea
jmp
mov
pushf
call
pushl
pushl
popl
mov
mov
lea
jmp
push
xchg
pushf
call
dec
push
call
pushf
jmp
sbb
mov
pusha
add
pushl
movb
pushf
mov
push
push
push
lea
jmp
call
mov
mov
mov
lea
jae
pushf
movw
pushf
popl
call
pushl
mov
push
call
jmp
mov
pushl
movb
pushf
lea
jmp
stc
movb
add
jmp
call
mov
pushf
call
cmc
xor
pusha
movw
call
not
cmp
pushf
pushf
add
jmp
pushl
mov
pushf
lea
jmp
mov
mov
mov
call
sub
pusha
pushf
lea
jmp
mov
jmp
movzbw
mov
lea
push
lea
mov
push
pop
not
call
movb
mov
call
call
mov
push
pushf
mov
pushf
jmp
pushf
mov
mov
pushf
lea
jmp
jmp
pushf
push
mov
push
jmp
jmp
lea
je
pusha
test
pushf
xor
clc
xchg
cmp
mov
cmp
push
stc
test
sub
jmp
mov
jmp
jmp
or
inc
bsr
daa
mov
rcl
adc
mov
sar
pushf
xor
mov
mov
add
cmp
cmp
jmp
mov
push
lea
jmp
cmp
test
add
bt
clc
sub
stc
clc
stc
pusha
neg
pusha
cmc
jmp
cmp
add
pusha
mov
lea
jl
pushf
mov
pushl
pushf
lea
jmp
pushf
mov
push
movl
lea
jmp
push
pushf
lea
jns
inc
jmp
pusha
mov
jmp
cmp
sub
pusha
rol
stc
mov
bt
jmp
call
push
sub
call
mov
call
pushl
popl
mov
lea
jmp
pusha
pusha
mov
jmp
call
pushf
ror
mov
mov
jmp
bt
xadd
bt
mov
ror
mov
jmp
pusha
add
call
mov
jmp
pushf
pushf
mov
jmp
jmp
mov
jmp
pusha
pusha
inc
pushf
decl
call
call
push
mov
movb
push
pushf
popl
pushf
pushf
pushl
popl
pushf
pushf
lea
jmp
pushf
pushl
popl
pushf
lea
jmp
push
pushf
popl
pusha
movb
pushl
popl
pusha
movb
push
lea
jmp
not
push
movsbw
jmp
mov
push
movb
mov
pusha
lea
jmp
pushf
decl
movl
pusha
push
lea
jne
pusha
mov
pusha
pushf
lea
jmp
clc
shld
test
mov
rcl
ror
add
push
mov
push
jmp
push
pushl
popl
pushf
pushl
lea
jmp
jmp
mov
mov
pushf
pushl
pushf
lea
jmp
movb
pushl
mov
pushf
mov
pushl
mov
jmp
mov
push
pushf
mov
jmp
pushl
push
pushl
popl
movw
lea
jmp
pushf
pushf
mov
pushf
lea
jmp
pop
jmp
movw
pushf
jmp
divl
push
pushf
pushf
mov
jmp
call
mov
mov
push
mov
pushf
pushl
pushf
lea
jmp
lea
ja
pusha
mov
movb
jmp
call
pusha
cwtl
cmc
sub
clc
clc
pusha
mov
cmc
cmc
stc
sub
movb
lea
jmp
movsbw
cmc
movzbl
cmc
clc
stc
jmp
mov
pushf
pushf
mov
push
mov
push
push
jmp
pushf
mov
push
call
sub
pushf
lea
jne
bt
clc
shl
call
clc
cmp
pusha
jmp
inc
test
bswap
xor
ror
btr
lea
ror
shr
pusha
and
cmp
pushf
mov
movl
add
pushf
push
pushf
call
pusha
test
add
lea
jo
push
pushf
pushf
popl
movw
pushl
popl
pusha
lea
jmp
mov
call
jmp
not
rol
cmc
push
mov
btr
call
mov
push
mov
call
pushf
popl
push
push
pushl
call
pushf
push
mov
push
pushf
pusha
lea
jmp
rcr
rcl
xadd
lea
mov
rcl
movsbw
rcl
mov
stc
call
mov
pushf
pushf
pushl
pushf
lea
jmp
pushf
popl
pushf
pushf
push
pushl
popl
movb
pushf
pushl
lea
jmp
bswap
movsbw
call
call
bsf
or
mov
cmp
call
jmp
pushf
call
inc
dec
rol
sub
movb
xor
pop
lea
btr
ror
shr
cmp
and
test
mov
clc
push
pushl
movl
sub
pusha
mov
pushf
pushf
lea
jmp
sub
push
push
and
call
lea
jne
push
xorb
pushl
seto
mov
pusha
pushf
lea
jmp
bt
stc
rol
mov
bt
adc
shl
dec
mov
cmp
pusha
bt
sub
test
shr
mov
call
mov
pushf
pusha
call
pushf
popl
call
test
sub
stc
neg
test
test
not
jmp
jmp
add
bt
test
shrd
push
jmp
pushf
movb
bt
movb
cbtw
movl
clc
push
cwtl
bt
call
movb
pushl
popl
movb
pushl
mov
movb
lea
jmp
jmp
sub
ja
sub
call
pusha
push
mov
push
movb
pushf
lea
jmp
pushl
popl
push
push
push
pushf
lea
jmp
mov
pushf
mov
movb
call
jmp
cmc
shrd
setae
stc
movzbl
dec
setnp
cmp
cmc
sub
pusha
rcr
pusha
rcl
rol
neg
adc
bt
xor
dec
sub
btr
sub
lea
cmp
sub
btr
mov
dec
mov
cmc
stc
movb
test
add
jmp
pushf
jmp
movb
sub
push
mov
pushl
movb
lea
jmp
dec
push
movzbw
call
test
shld
pusha
movl
jmp
pushf
popl
call
pushf
jmp
jmp
call
mov
pusha
pushf
movw
lea
jmp
call
movb
call
movb
pushl
popl
movb
lea
jmp
push
cld
mov
movsbl
movzbl
movl
pop
mov
pushl
cld
pushf
call
call
mov
cmp
sub
stc
stc
shl
pushf
mov
call
shr
movzbl
cmp
bt
test
sub
cmc
not
cmc
stc
rol
call
add
call
mov
push
mov
pushl
push
mov
mov
call
call
mov
pusha
pushf
pushf
popl
mov
pushl
popl
pushf
pushl
lea
jmp
lea
cpuid
stc
pushf
sub
test
cmc
cmc
mov
cmpl
lea
jge
pushf
pushl
mov
pushf
pushf
lea
jge
pusha
mov
pusha
mov
mov
pushf
mov
call
lahf
add
not
call
not
rdtsc
pushf
mov
pop
pushf
xchg
movsbw
mov
jmp
sbb
aad
lahf
xor
mov
or
mov
mov
pusha
jmp
rep
push
shrd
pop
mov
ror
mov
cmc
pushl
popf
pushf
push
push
pushl
lea
jmp
mov
push
pushf
mov
pushf
lea
jmp
pushf
pushf
call
stc
and
bt
pusha
cmp
pushl
mov
push
lea
jne
inc
xorb
lea
pusha
pusha
mov
pushf
pushl
pushl
mov
lea
jmp
cmp
pushl
cwtl
cmp
sub
pushf
movb
jmp
mov
jmp
setge
bt
not
mov
clc
pushf
sub
jmp
jmp
call
shl
mov
xor
neg
pusha
movzbw
mov
cmp
add
pushf
call
pushf
pushf
lea
jne
cmp
bsf
setge
mov
pushf
cmp
pusha
and
test
cmp
pusha
call
pushf
popl
call
pushf
jmp
mov
pushf
pushf
lea
jmp
push
mov
push
pusha
push
mov
call
bsr
movzbw
bsr
mov
cmp
cmp
cmp
cmc
bswap
stc
pusha
test
sub
call
pushf
push
mov
movb
call
pusha
mov
movb
pushf
mov
lea
jne
pusha
mov
mov
pusha
push
push
pushl
lea
jmp
pusha
pushl
popf
movb
pushf
push
pushl
lea
jmp
jmp
pushf
pushf
mov
pusha
pushf
pushf
lea
jmp
mov
pusha
movb
mov
pushf
lea
jmp
jmp
mov
pushf
pushf
push
lea
jmp
push
call
pushf
mov
pushf
mov
pushf
pushf
pushf
mov
movb
lea
jmp
ror
bsr
movsbw
mov
sar
setle
and
inc
mov
test
setb
dec
mov
stc
jmp
lea
add
movsbw
stc
sub
sub
btr
bts
mov
bt
shl
pushf
shr
call
inc
test
sub
lea
jle
test
bt
cbtw
bt
jmp
sar
bswap
or
mov
push
cmp
call
call
mov
pushf
jmp
mov
pushl
mov
push
mov
pushl
ret
call
movw
sub
pushf
mov
pushf
push
pusha
pushf
lea
jmp
ror
mov
rcl
jmp
sbb
mov
mov
neg
setp
jmp
cwtl
rdtsc
bt
bt
cmc
sub
push
pushf
movl
pushf
mov
pushf
call
call
mov
mov
pusha
mov
call
add
pushf
lea
jmp
inc
cmp
aad
mov
movzbw
ror
dec
mov
bt
pusha
mov
add
pushf
mov
mov
pusha
lea
jmp
pusha
push
mov
pushf
mov
pushf
mov
movb
mov
jmp
sar
call
jmp
call
mov
push
lea
jmp
jmp
call
movzbw
xadd
movzbl
movsbw
call
inc
seto
movzbl
call
lea
jne
push
mov
test
cmp
clc
and
movb
jmp
pushl
mov
push
mov
pushf
movw
lea
jg
push
push
mov
pushl
mov
pushf
mov
mov
pushf
pushl
mov
pusha
movb
pushf
lea
jmp
mov
movl
call
mov
neg
stc
add
call
pushl
call
