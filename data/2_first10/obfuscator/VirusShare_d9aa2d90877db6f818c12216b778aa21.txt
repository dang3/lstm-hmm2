xor
add
cmp
jg
pop
cmp
jb
dec
testl
or
pop
loop
out
jecxz
stc
loope
xor
mov
call
xor
mov
inc
fidivrl
pop
xchg
insl
xor
add
xchg
scas
inc
cmpsl
pop
dec
test
adc
cmc
push
fbld
sbb
stos
pop
inc
daa
lods
jne
shrl
jl
js
sti
js
mov
ja
push
leave
and
packuswb
lahf
adc
add
pop
sbb
sub
fdivl
inc
test
fs
ja
test
mov
sbb
mov
jne
lds
test
in
inc
loop
cwtl
inc
inc
adc
hlt
and
in
add
pop
cmp
movsl
jne
mov
cmpsb
xor
jno
rorl
jae
mov
mov
push
push
mov
or
mov
mov
cmp
mov
jb
cmp
jb
cmp
jb
cmpw
je
cmp
jae
mov
mov
cmp
jne
pop
pop
ret
int3
push
mov
sub
andl
push
push
push
pushl
call
cmp
jb
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
add
cmp
mov
mov
jbe
cmp
movswl
mov
jae
mov
cmp
jae
mov
cmp
jb
mov
add
cmp
jb
mov
mov
add
mov
lea
mov
mov
mov
movzbl
mov
movzbl
sub
jne
mov
mov
mov
sub
mov
cmpb
je
incl
mov
mov
mov
movzbl
mov
movzbl
sub
je
test
jl
jle
xor
inc
test
je
mov
inc
cmp
mov
jb
mov
pop
pop
pop
leave
ret
mov
mov
add
mov
jmp
xor
jmp
push
mov
sub
push
xor
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
mov
push
push
mov
mov
mov
pop
pop
lea
mov
cmp
jb
lea
cmp
jb
lea
cmp
jb
mov
push
pushl
call
mov
lea
push
pushl
call
mov
lea
push
pushl
call
mov
mov
cmp
jbe
mov
lea
push
push
call
push
pushl
lea
push
mov
lea
call
add
xor
lea
mov
add
mov
inc
add
cmp
jl
cmpl
jbe
mov
lea
push
mov
sub
push
push
call
mov
mov
lea
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
mov
push
sub
push
push
call
push
push
pushl
call
push
push
call
push
mov
push
push
call
push
pushl
push
call
mov
movzwl
push
pushl
lea
push
call
add
pushl
mov
push
push
pushl
mov
pushl
pushl
call
pop
pop
mov
pop
leave
ret
add
add
inc
in
pop
out
in
sbb
mov
inc
pop
mov
push
out
sahf
push
aas
jle
cmovns
mov
addr16
lret
adc
fsubr
push
cmp
pusha
loope
push
or
dec
sub
lods
pop
push
xor
mov
ja
jns
mov
popf
or
mov
inc
cmp
xlat
xor
jmp
adc
adc
imul
sbb
mov
stos
ljmp
jbe
lods
and
ja
shll
inc
lret
scas
jl
cmpb
jnp,pn
xor
jnp
inc
stos
inc
mov
imul
pop
jg
adc
xchg
jle
outsb
movsl
sub
mov
cmpsb
fists
cmp
and
dec
sbb
stos
sub
divl
push
mov
inc
iret
jp
inc
sub
mov
inc
adc
fcmovnb
fldt
add
push
sub
test
mov
je
jne
jne
mov
pushf
call
inc
mov
adc
sub
mov
fstl
cmp
cmp
in
cltd
aaa
mov
dec
dec
popa
movsl
stos
pop
or
jo
test
jb
stos
add
cmp
jmp
clc
sti
or
aad
xor
push
scas
enter
jl
sub
cmp
push
outsb
dec
mov
into
cmp
cmp
pop
testl
mov
sarb
push
lret
rcrb
jnp
sahf
stos
mov
sahf
or
outsl
push
enter
fcmovnb
imul
xchg
mov
inc
aaa
jmp
sub
add
cmp
add
sbb
arpl
into
push
xchg
iret
enter
es
adc
cmp
push
addr16
ljmp
push
adc
mov
aaa
mov
ljmp
pop
xor
add
test
int3
imull
std
popa
pop
shrl
sub
iret
or
mov
cli
ds
cli
cli
pushf
pop
lret
outsb
jbe
scas
andl
xchg
shrb
xchg
jl
sbb
loop
pop
mov
jb
in
or
mov
das
fwait
sub
testb
pop
imull
ret
test
nop
aas
ret
frstor
mov
dec
fstl
nop
stos
push
push
add
add
pop
mov
sub
iret
ds
sub
js
repz
mov
scas
mov
rorb
mov
in
xor
pushf
inc
add
ss
add
mov
dec
add
pushf
push
add
ret
add
test
add
shll
add
dec
pop
leave
fdivrp
pop
daa
icebp
cmpsl
pop
test
and
pop
into
push
jns
sahf
and
xchg
mulb
jmp
mov
push
out
pop
or
dec
adc
push
iret
xchg
dec
inc
scas
dec
pop
cltd
icebp
mov
fimuls
cltd
adc
mov
shlb
fcmovnu
shlb
fcmovnu
shlb
repnz
dec
int3
jmp
scas
jmp
rcll
ficoms
pop
mov
sub
sub
subl
and
mov
iret
cwtl
pop
xchg
push
into
out
repz
inc
loopne
jbe
inc
sbb
sbb
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
push
int
or
mov
insl
jae
aas
pop
sub
sbb
inc
lret
adc
mov
xorb
das
jns
popf
and
fs
popf
push
loop
xchg
les
mov
out
outsl
pop
push
sub
fst
mov
fcmovnu
shlb
fcmovnu
shlb
in
add
pop
xor
ss
jae
lahf
fcmove
mov
cwtl
stos
stc
mov
and
mov
cmpsl
rcr
push
sbb
inc
movsb
and
sub
mov
test
and
add
lret
xchg
adc
adc
lock
mov
and
lea
dec
incb
lret
push
push
push
imul
stos
mov
sahf
cld
js
mov
inc
sub
fst
mov
in
lods
fimull
iret
stc
sub
fst
mov
fcmovnu
shlb
fcmovnu
shlb
scas
stos
mov
sub
fst
mov
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
loope
mov
sub
fst
mov
fcmovnu
shlb
fcmovnu
shlb
push
xchg
cmp
mov
out
mov
out
and
push
lds
mov
fcmovnu
shlb
in
in
cmp
ljmp
std
or
push
xor
popa
out
call
shlb
neg
cmp
in
mov
movsb
dec
pop
aad
jns
rcr
push
jo
bound
imul
in
sub
fst
mov
sbb
adc
rcrl
push
out
inc
cltd
sahf
inc
repnz
add
and
movsb
stos
cmp
fcmovnu
shlb
mov
stc
pop
sub
imul
sub
mov
cmp
push
sub
fst
mov
outsb
jl
int3
sahf
lret
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
imulb
mov
lds
or
pop
les
xorb
inc
lret
xchg
xlat
mov
xor
hlt
mov
imul
push
sub
mov
jle
mov
out
loop
divb
xchg
fs
test
cmp
push
jne
cmp
scas
iret
xchg
arpl
push
sub
mov
bound
jmp
mov
push
push
add
sub
jnp
jb
jl
leave
not
out
or
adc
mov
pop
in
xchg
dec
xchg
aas
push
dec
in
icebp
push
jge
cmp
push
jb
inc
inc
lea
enter
push
or
jg
loopne
xor
dec
nop
lahf
sbb
mov
stos
xor
add
in
or
lods
imul
pusha
ljmp
pop
and
mov
xor
jmp
jns
popf
lcall
fs
es
bound
or
or
call
pop
int3
negb
xor
int3
push
inc
arpl
out
outsb
or
push
sbb
pop
jbe
push
orb
cs
mov
sbb
or
bound
cmp
iret
inc
insb
mov
cmp
xor
cmc
adc
imul
or
loopew
inc
mov
add
iret
adc
and
add
call
lahf
cmpsb
and
aas
sub
out
int
fs
cmpsl
inc
cmp
mov
fisubrs
pop
xchg
jg
rcrb
xor
enter
aad
or
mov
jle
pop
inc
or
mov
dec
test
xchg
sarb
test
sbb
jo
cmp
rcll
sub
fucomi
jne
xchg
jmp
imul
cmpl
cmpb
shlb
out
js
jge
lahf
mov
pop
dec
jns
pop
pushl
push
mov
jae
adc
dec
mov
js
mov
lret
jge
dec
je
data16
pusha
sub
mov
int3
inc
test
rdtsc
das
cmp
push
fsubrl
and
pop
js
dec
shrl
lea
insl
fmuls
push
mov
jb
adc
jns
jle
jge
loopne
push
push
sub
je
movsl
int
jnp
ss
inc
repz
mov
pop
std
or
mov
imul
ss
and
ret
mov
in
out
cmp
push
push
test
mov
inc
nop
xchg
fs
imulb
adc
and
mov
cs
inc
add
imul
je
sahf
call
pop
mov
pushf
and
xchg
imul
lods
call
sub
sbb
lock
push
mov
xorl
lods
test
cwtl
push
jp
lea
lods
cs
pop
mov
xchg
or
jmp
sbb
out
imul
fldcw
xchg
out
cmpsl
cmc
rcrl
pop
jbe
f2xm1
outsl
add
pop
sbb
out
jp
mov
or
aad
push
inc
cmpsl
movsl
fdivrl
sbb
mov
fcompl
mov
mov
push
imul
adc
fwait
sub
stc
mov
pop
or
jbe
pop
sub
ja
jae
fdivl
movsl
lods
jno
daa
cmp
int
adc
xor
sbb
cmpsl
add
xor
jnp
in
mov
movsb
addl
dec
lods
mov
push
cs
test
pop
adc
lahf
mov
inc
fisubrl
out
stc
and
xchg
outsb
outsb
inc
negl
and
mov
ss
push
insl
outsb
stos
xchg
pop
cmp
add
mov
inc
or
cmp
sub
into
pop
int
jmp
ja
hlt
lea
mov
inc
xlat
jnp
mov
and
adc
int
cli
xchg
ljmp
xor
stos
mov
testl
je
adc
jns
fs
sbb
inc
movsb
pop
xor
mov
dec
and
add
xchg
sbbb
xlat
cwtl
xchg
add
popa
nop
pop
out
mov
loope
outsl
rorl
test
sub
orb
outsb
jmp
mov
pop
dec
push
nop
mov
addr16
add
xor
pop
cld
dec
jmp
pushf
cli
xchg
sbb
cmpsb
test
dec
inc
xchg
sbb
push
mov
rcrl
lahf
outsb
add
out
bnd
loop
enter
fildl
xchg
and
jns
shlb
mov
dec
pop
clc
mov
xor
push
push
or
es
jno
sti
mov
cmp
imul
int3
lock
xchg
pop
xor
or
fnsave
push
mov
push
jle
jb
pop
adc
ss
pop
rcrb
jns
jae
in
outsl
sbb
jle
pop
adc
xor
data16
clc
repz
inc
scas
fwait
ret
push
sbb
cmp
dec
xchg
and
sti
xor
pop
loope
out
mov
jo
in
popa
nop
pop
out
mov
loope
dec
xor
dec
sbb
in
scas
mov
and
pop
add
mov
add
popa
ljmp
lock
sub
mov
outsl
add
sbb
jl
ret
pop
popf
aas
xor
cmp
adc
idivl
or
jge
inc
mov
clc
sub
mov
sub
pushf
adc
inc
lock
mov
xchg
ss
sbb
xor
push
dec
nop
imul
pop
jae
inc
hlt
adc
imul
adc
icebp
int
push
pop
sub
mov
dec
gs
mov
xor
or
mov
pop
inc
sbb
sub
xchg
inc
mov
push
add
shrl
cmp
and
ss
xor
lret
cmp
cmpsb
ja
loope
icebp
add
rorl
ret
push
sub
enter
adc
hlt
jno
add
daa
add
stos
dec
out
xchg
xchg
mov
add
repz
cmp
cld
mov
mov
addr16
in
sbb
jl
sbb
loop
clc
inc
fwait
push
mov
repnz
das
lds
iret
push
pop
push
push
jae
mov
sbb
iret
cs
jmp
mov
outsl
sbb
adc
in
in
es
jno
push
out
add
cmp
cltd
cmp
lock
xor
jp
and
add
lahf
das
leave
in
in
jecxz
and
inc
ljmp
inc
fists
xchg
aas
lea
pop
ja
jnp
inc
mov
push
fists
leave
in
xor
jo
shrl
out
mov
jne
scas
aam
aaa
push
mov
ja
popa
loopne
jb
lahf
sbb
inc
in
jle
ds
pop
mov
cmp
inc
shlb
aam
sub
xchg
stc
push
lret
pop
mov
enter
cltd
idiv
sahf
stos
iret
inc
popa
jns
push
sahf
divl
mov
movb
xor
pop
pop
cmp
xchg
das
inc
push
jne
scas
aam
aaa
stos
sub
addr16
jo
xchg
out
je
inc
sarb
loop
cmp
cli
imull
add
ficompl
mov
mov
dec
aas
movsl
mov
in
mov
iret
mov
and
sub
mov
cmpsb
dec
je
aas
push
mov
repz
inc
das
aas
repz
jmp
mov
dec
mov
popa
dec
xchg
push
pop
dec
push
nop
xchg
sarl
fcoms
pop
mov
andl
mov
xor
lds
inc
add
add
dec
pop
adc
sbb
cwtl
mov
push
mov
xchg
dec
add
dec
sbb
rclb
xor
dec
xchg
aad
adc
push
sub
push
rorb
mov
push
fcomps
mov
xchg
xchg
jp
scas
sti
rorl
shrb
movsb
insb
fisttps
addr16
and
sar
aam
rorb
add
jl
jecxz
aad
call
push
add
dec
jno
push
xorl
push
decl
lods
mov
inc
push
sbb
ja
mov
roll
inc
push
mov
xchg
push
inc
fidivrl
dec
jg
dec
or
mov
xchg
cs
pop
outsl
mov
rcl
push
dec
jge
lcall
pop
test
dec
test
inc
pusha
les
mov
and
cmpxchg
sbb
ret
sub
adc
ds
in
mov
dec
jo
and
mov
cld
scas
testb
xlat
scas
adc
lret
je
sahf
or
mov
xor
dec
lahf
incl
dec
aaa
xchg
bound
mov
sbb
outsl
and
stos
ficoml
les
mov
pop
dec
aaa
mov
mov
inc
lea
mov
arpl
sbb
pop
int
insl
cld
pop
xchg
shlb
mov
je
xor
lea
add
test
mov
mov
test
push
sbb
mov
or
pop
lods
cmp
and
inc
mov
mov
insb
push
xchg
pop
or
mov
jmp
mov
sub
jo
and
inc
jae
jbe
push
pop
mov
ret
rcll
std
loopne
addl
sahf
das
lahf
lahf
imul
add
adc
arpl
mov
pop
xchg
add
sbb
int
mov
push
imul
adc
addr16
inc
jmp
xchg
push
xchg
push
push
push
pop
xchg
leave
push
stos
and
imul
mov
mov
int3
push
mull
cld
test
jp
add
rep
insl
dec
xchg
lds
mov
call
and
push
lods
sub
cmp
repz
mov
clc
adc
inc
leave
xor
movb
pop
ret
or
sbb
cwtl
imul
pop
sub
sub
clc
movsl
adc
int
sub
inc
or
pushl
add
push
addr16
test
xchg
std
sbbb
push
sbb
hlt
push
sub
hlt
sub
sub
test
std
inc
arpl
jne
or
sub
mov
inc
mov
push
mov
mov
out
and
pop
fadds
inc
jns
pop
jecxz
stc
mov
lods
out
repnz
cmpsb
mov
popa
pushf
xlat
test
fidivrl
popa
sub
andl
or
insl
test
std
inc
arpl
jmp
mov
repnz
lock
jl
or
cltd
xchg
sub
test
xchg
pop
test
jbe
in
scas
and
mov
jae
xor
cmp
scas
sahf
cmpsl
ret
scas
jbe
sbb
popa
jle
fcoms
cmp
mov
loope
mov
ljmp
pop
fsts
jns
in
sbb
rclb
in
mov
pop
out
loopne
xor
mov
aad
fisttpl
adc
iret
and
add
sahf
or
add
jge
mov
xchg
jmp
into
or
adc
int
daa
mov
xchg
push
addr16
and
mov
sub
mov
lods
push
stos
andb
mov
adc
ror
movsb
movsl
push
sbb
scas
popf
out
stos
daa
inc
mov
cld
scas
enter
jb
in
mov
imul
xchg
testl
push
ret
leave
insb
and
mov
dec
jne
dec
dec
push
loope
xor
adc
cli
popf
push
sbb
popf
fsts
xchg
inc
add
rcll
jl
push
in
add
insb
sbb
jbe
mov
inc
sahf
mov
jge
mov
pop
repz
repnz
gs
dec
out
and
out
pop
outsb
or
sub
add
pop
xchg
cltd
lcall
pop
add
sub
jge
push
sahf
stos
hlt
movsl
sahf
leave
movsb
adc
cmp
mov
mov
cmc
cmp
addr16
fimuls
adc
int
dec
mov
inc
je
sbb
or
out
outsb
ret
xor
js
in
outsl
inc
out
fldl
or
mov
mov
xchg
push
aad
push
or
cmp
mov
cmp
fwait
ret
shll
aam
jns
cwtl
test
pop
mov
sbb
pop
stc
out
jns
ds
cld
xchg
cld
mov
scas
inc
fstps
sbb
popf
jnp
dec
cmp
mov
lock
add
push
and
aas
add
and
outsl
fcmovu
lea
inc
loopne
pop
push
aam
xor
movsb
mov
imul
daa
push
dec
imul
aas
fcompl
pop
insb
shll
jmp
lcall
xchg
notl
enter
xor
push
dec
mov
lods
sbb
pop
pop
xlat
pop
imul
push
push
cltd
popf
jb
push
xor
das
cli
mov
fists
clc
add
dec
bound
sub
outsb
shlb
jmp
movsl
adcl
lds
sbb
add
fwait
sbb
fsts
or
or
mov
sti
mov
je
mov
push
ljmp
xchg
adc
mov
sbbl
adc
outsb
insl
jmp
lods
clc
adc
mov
fcompl
test
xor
sub
es
stos
adc
sbb
fld
xchg
ljmp
shr
mov
jp
scas
and
xchg
sub
cmp
fldl
lods
aam
mov
sub
cmp
lcall
add
bound
jb
fisttpll
les
fisubrl
add
and
sub
lcall
stc
dec
dec
pop
out
push
dec
sbb
loop
push
mulb
nop
out
sbb
in
jle
testb
gs
inc
stc
std
leave
out
jns
jp
js
add
jg
fwait
cmpl
sbb
mov
insl
cmp
dec
dec
fcoml
repnz
testl
aaa
lahf
stc
clc
mov
jg
inc
mov
lret
out
sub
inc
fstl
stc
mov
shlb
pop
insl
div
sbb
mov
loop
fistpll
nop
lret
cmc
push
mov
push
sub
outsb
dec
lret
mov
pusha
mov
popf
mov
mov
mov
popf
out
xor
aam
cli
and
mov
jecxz
cmp
push
in
loop
jno
std
shl
mov
out
cli
pop
and
mov
adc
iret
mov
dec
sub
dec
aam
mov
dec
in
ljmp
xchg
enter
inc
lret
and
sbb
mov
inc
mov
cmpsb
fsubs
push
mov
js
xchg
sbbl
dec
pop
jns
pop
mov
arpl
repz
adc
xchg
jg
mov
in
mov
adc
fisubrl
dec
pop
mov
and
sarb
idivl
jg
ret
pop
stos
aaa
inc
mov
push
subb
stc
roll
leave
fcmove
not
dec
arpl
ret
inc
sbb
cmp
cmpb
add
scas
inc
jne
es
pop
js
int
int3
pop
decl
fisubl
cltd
das
mov
inc
or
outsl
adc
scas
pop
repnz
ret
xlat
jge
pop
dec
out
jl
xchg
mov
push
sub
pop
sub
stos
pop
mov
dec
adc
mov
jno
sahf
addl
movsb
imul
pop
cmp
fs
add
xchg
dec
std
push
das
cmp
fimull
inc
cs
jmp
enter
lret
clc
lods
ss
xlat
adc
enter
lock
dec
push
js
mov
or
stos
mov
push
aam
dec
idivl
push
jecxz
aas
lods
and
bound
adc
pop
in
lds
fwait
fs
push
add
mov
lds
pop
repnz
add
ljmp
into
or
push
lock
sti
jecxz
xchg
popf
int
inc
xor
adc
push
rcrl
or
add
jbe
pushf
pop
pop
pop
jne
ja
push
js
mov
int3
dec
sub
add
in
loop
mov
push
lahf
push
std
lods
add
aas
xlat
xchg
inc
sti
lods
mov
cmp
popa
pusha
adc
addr16
fdivl
cmp
and
jbe
pushf
pop
pop
pop
jne
inc
cmpsb
adc
mov
jo
mov
sub
imul
mov
movsl
aam
cmpsl
in
inc
int3
aaa
movsb
xor
jg
xor
mov
rclb
shll
sbb
pop
sub
lcall
popf
inc
jp
insb
out
roll
scas
ja
lret
inc
cwtl
enter
or
out
xchg
inc
pop
es
stos
outsl
or
mov
cmp
loope
ljmp
pop
dec
dec
dec
jp
lcall
cmp
xchg
lds
fiaddl
xor
mov
daa
xor
push
jno
mov
sar
xchg
pop
fisubrs
sarb
sbb
fcmovnbe
leave
out
mov
js
sub
inc
lahf
mov
divl
je
jl
in
push
sarl
out
lds
popa
stc
xchg
sbb
out
jl
sub
inc
es
cmp
out
inc
dec
xlat
jne
cwtl
jb
leave
and
adc
daa
mov
mov
shlb
push
dec
in
dec
add
lods
and
scas
pop
call
int
stos
inc
dec
out
ret
test
cs
repz
or
mov
mov
xchg
xor
adc
inc
sub
push
jo
push
xor
mulb
hlt
mov
inc
xor
jge
cmp
sti
sarl
aas
mov
mov
mov
fwait
jle
adc
rcrb
or
mov
andl
xor
dec
inc
cmp
mov
movsl
int
out
popf
cmp
sarl
jns
xlat
int3
into
fst
jne
shlb
mov
sbbb
add
xlat
sub
negl
pop
bound
or
xchg
inc
mov
push
loop
pop
in
int3
cmc
lea
cmpsl
pop
gs
sub
ss
sarb
push
loope
imul
mov
mov
cs
xor
xchg
inc
sbb
jo
scas
int
pushf
push
inc
jbe
add
mov
push
icebp
insb
adc
aam
xor
cmpsb
and
cld
movd
loop
pop
in
int3
push
xchg
xor
and
cltd
scas
adc
negl
push
insl
add
in
dec
push
cmp
push
mov
testl
cmpsb
pop
in
int3
and
push
mov
xor
sub
icebp
pushf
es
dec
cmpsl
pop
cmp
test
leave
mov
mov
jl
outsb
fimull
xchg
sbb
popa
lds
adc
pushf
lahf
mov
mov
test
stc
fisttpll
les
sub
pop
hlt
push
xorl
mov
jns
ss
adc
xchg
enter
cmp
sub
pushf
push
cmp
sbb
jae
inc
lret
stc
leave
ffree
mov
jge
into
mov
nop
pusha
shrb
dec
pop
inc
xchg
aam
push
mov
dec
xchg
inc
mov
idivb
jp
lea
call
bound
dec
movsl
push
iret
shlb
lods
or
test
push
repz
movsb
ficomps
aaa
ljmp
adc
icebp
mov
ficompl
inc
call
push
lcall
mov
cmp
ljmp
xchg
mov
sub
popf
pop
movsl
dec
psrlw
hlt
xchg
push
pop
daa
pusha
pop
mov
mov
jecxz
fs
xor
stos
enter
popa
dec
push
test
jle
dec
gs
push
inc
lds
aam
jns
pop
inc
mov
mov
mov
adc
and
cmp
add
xor
and
ja
xchg
sbb
ret
ljmp
adc
pop
into
sbb
or
dec
pop
adc
xchg
bound
pop
cmp
adc
pop
aaa
sbb
test
jp
pop
rcr
adc
jns
xlat
xorb
int
mov
push
pop
jmp
outsl
lret
sub
in
scas
out
hlt
es
pushf
and
mov
push
xchg
xor
sub
enterw
in
mov
dec
repnz
mov
inc
add
cmp
lock
sbb
or
sarl
xchg
mov
or
mov
es
add
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
hlt
ret
add
jge
imul
fldt
xor
adc
shrb
jp
in
jne
lret
lahf
repz
mov
sbb
es
pop
loopne
add
notl
out
hlt
iret
loope
xchg
sub
fs
nop
mov
pop
mov
sti
comiss
daa
lods
jno
jnp
sbb
test
int3
xchg
mov
enter
mov
dec
repz
sub
fst
mov
adc
xchg
pop
mov
adc
call
loope
sub
pusha
sahf
and
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
inc
jecxz
lds
mov
aaa
fisubrs
and
push
sahf
mov
and
pop
vmovq
mov
outsl
jl
sar
stos
sub
div
mov
lock
xor
in
imul
xchg
xchg
dec
lret
inc
and
or
mov
lock
les
lds
out
inc
arpl
jno
mov
xorl
lret
imul
cmp
xor
mov
cmp
xchg
jb
xchg
icebp
pop
cwtl
pop
jae
mov
jecxz
hlt
jmp
scas
mov
shrl
cli
call
mov
or
xor
cmp
insl
jns
ficompl
mov
pop
shll
push
leave
dec
sti
mov
cs
or
loopne
stos
cmp
xchg
jge
xor
mov
bound
ljmp
test
mov
test
popw
push
add
push
push
mov
xchg
in
add
insb
or
mov
xor
xchg
xchg
lret
mov
test
jg
push
in
addb
ljmp
in
adc
rcrb
sbb
push
popa
jnp
xchg
outsb
sbb
out
mov
push
stos
shlb
mov
insb
push
cmc
sub
push
push
lcall
gs
cmpl
xchg
jno
pop
pop
cmp
push
aas
lret
and
add
rcr
loop
dec
repnz
test
out
cmp
ljmp
aaa
shll
ja
fsubr
nop
jno
mov
shlb
fmuls
movsl
adc
fs
ja
mov
lea
out
adc
mov
dec
les
idivb
roll
mov
sub
adc
lahf
movl
push
mov
jg
cmp
jae
ljmp
fbstp
dec
scas
cmp
ret
jno
push
adc
mov
mov
jae
fsubrl
js
fisubl
nop
xor
or
loope
das
jecxz
shll
icebp
push
popa
js
sbb
push
pusha
dec
cmp
vpcmpgtb
sub
jg
loopne
and
iret
lcall
das
inc
sti
rorl
movsl
cmp
movsb
add
push
lcall
in
shrb
xor
sub
bound
mov
push
faddp
and
pop
or
pop
imul
movsl
ret
ret
cld
in
cmp
dec
jo
movsl
lock
notb
mov
pushf
mov
rorl
test
loopne
enter
and
push
cmp
cmp
clc
mov
xchg
and
mov
adc
pop
cmc
je
loope
ret
stos
jae
daa
in
subb
ss
iret
xchg
sub
fnsave
xchg
lock
push
cmp
sbb
ljmp
or
stos
pop
cmp
std
clc
push
sbb
out
aad
shl
nop
adc
jle
loop
fldt
adcb
cmp
mov
jbe
and
xor
pop
cmpsb
cltd
push
sbb
in
mov
sbb
xor
add
inc
cmp
mov
or
lods
ljmp
sub
sub
and
std
jnp
aad
mov
adc
and
daa
push
fdivr
push
test
jge
mov
imul
bound
push
mov
in
xor
dec
addb
mov
xor
lea
push
loope
mov
mov
insl
adc
xchg
add
add
mov
inc
cld
push
jle
inc
mov
add
dec
xchg
arpl
jne
inc
xchg
and
sbb
mov
iret
shrl
incb
add
sbb
add
roll
and
add
and
es
shlb
sarl
stos
into
mov
add
pop
cwtl
into
push
jae
sti
cmp
push
mov
push
push
pop
cli
mov
push
add
add
orl
fsubrl
clc
lods
cmp
leave
inc
dec
jns
jo
loop
lahf
outsb
pop
rorl
pop
pop
dec
fs
inc
jge
xor
jnp
addr16
mov
fwait
inc
adc
lcall
test
jle
repz
std
movsl
stos
aad
push
mov
out
push
cmc
fs
add
xchg
inc
cmp
xchg
push
mov
mov
xchg
ficoms
cs
ret
or
push
jns
fs
jl
add
fadd
or
dec
aas
call
jecxz
xchg
xor
aad
cmpsb
cmp
dec
sub
mov
loopne
xlat
mov
inc
ss
or
clc
es
popa
mov
stc
cmpsl
movsl
jne
adc
cld
sub
push
sti
mov
cmp
sti
aas
jecxz
sbb
inc
clc
mov
movsl
sub
sbb
je
mov
xor
pop
inc
mov
imul
mov
js
pop
in
push
lret
pop
jb
fidivs
bound
inc
negl
call
or
xchg
lret
test
sub
mov
test
lods
movsl
inc
pop
inc
dec
jecxz
jae
insb
mov
fsts
mov
insl
mov
mov
xchg
mov
xor
jb
cltd
jmp
sub
test
dec
test
shll
cli
mov
pop
daa
mov
scas
push
call
popf
loope
push
cmpsl
pop
out
popl
fwait
mov
mov
adc
inc
push
sub
test
fwait
mov
mov
mov
jbe
xor
xchg
insb
jne
inc
cwtl
stos
xchg
loop
xor
fcoms
es
cmp
dec
out
nop
xchg
shrb
arpl
test
in
cmp
push
test
fstp
sub
inc
mov
inc
cmpl
or
push
mov
lods
push
test
stos
fcompl
xchg
pushf
fnstenv
les
add
mov
adc
jae
push
push
gs
push
mov
mov
add
xor
fldt
mov
pusha
and
adc
insl
fisubl
in
mov
pop
or
dec
and
out
pop
pop
rcrb
jecxz
out
ret
out
lods
mov
xchg
cli
jbe
dec
dec
in
mov
outsl
cmpsl
xchg
cld
jle
cmc
int3
fdivl
push
xlat
ret
in
stos
pusha
jno
insb
inc
inc
mov
inc
dec
rol
lods
xlat
fwait
repz
lret
jnp
es
dec
out
jg
loop
cmp
lret
mov
push
inc
sub
mov
xchg
mov
addr16
repnz
push
in
mov
adc
enter
mov
cmp
in
cmpsb
jmp
sub
aam
shlb
enter
in
pop
ficomps
push
jmp
mov
fwait
int3
hlt
jns
or
mov
xlat
inc
iret
mov
inc
xchg
fdivrs
adc
dec
sub
sarl
xchg
sarl
mov
sbb
pop
arpl
mov
pop
js
jl
rclb
cmp
pop
cmp
int3
ffree
pop
jecxz
leave
aas
adc
inc
ljmp
loope
cld
mov
pop
scas
loop
cli
aam
mov
mov
sbbl
loopne
push
mov
jns
or
sbb
out
jp
adc
xchg
xor
mov
add
push
ja
int
in
adc
dec
fdivrl
mov
xor
cmc
or
aaa
xchg
mov
jo
fdivrl
or
in
cmpsb
inc
or
rcrl
xor
adc
mov
ljmp
inc
and
xchg
test
cld
and
clc
cmpsl
cli
push
sub
mov
xor
repnz
ljmp
sbb
insb
shl
shrl
and
shll
shrb
addr16
out
fmul
xlat
sub
mov
icebp
popa
jecxz
fnstcw
pop
les
orb
push
roll
sbb
lock
mov
sti
xor
dec
inc
cltd
or
pop
or
add
mov
push
add
imul
and
inc
xchg
mov
daa
adc
test
mov
inc
arpl
pop
ds
addr16
cmp
jno
mov
in
shll
cmp
pop
rorb
xchg
push
xor
mov
test
sbb
xor
mov
mov
in
and
inc
and
or
cli
enter
adc
sbbb
ljmp
pusha
aad
mov
ljmp
gs
push
cld
dec
in
or
fldcw
imul
out
sbb
mov
xor
mov
clc
movsl
mov
xorl
test
xchg
pop
or
hlt
lds
push
int3
aaa
push
push
inc
std
aas
gs
aad
test
mov
pop
and
or
mov
fsts
mov
lcall
int
adc
lods
sub
in
jg
push
or
in
xor
sub
jnp
inc
pusha
sub
aaa
into
sub
mov
dec
scas
in
loop
dec
pop
xchg
lret
jmp
cmp
loop
mov
test
mov
andb
outsb
jge
hlt
int
insl
fisubrl
gs
xchg
cmp
aad
and
scas
push
cmp
lock
in
or
test
neg
ret
mov
sbb
cmp
mov
xchg
pop
pusha
xor
inc
cmpxchg
cmp
xchg
pop
xor
in
test
inc
or
jae
repnz
lea
scas
call
xchg
ret
dec
sbb
and
pushf
adc
inc
cwtl
mov
lret
inc
push
pop
sbb
stos
jns
jmp
mov
sbb
push
clc
push
mov
mov
push
movsl
mov
mov
daa
fsubrs
cmp
jns
fcoms
push
or
cwtl
addr16
int
test
sbb
xor
inc
add
icebp
sti
lahf
push
out
inc
add
notl
jl
xor
pushf
cmp
int
nop
mov
sbb
sub
lock
cwtl
mov
sub
roll
sub
cmc
daa
daa
sub
cmp
std
arpl
push
jl
and
adc
push
push
fistpl
xor
cld
dec
sub
shlb
fdivrs
in
cld
inc
sub
test
push
scas
jb
lret
popa
cmp
gs
outsl
out
mov
push
xchg
xchg
mov
outsb
push
or
shrb
push
enter
arpl
in
sub
and
lods
aas
inc
scas
enter
ja
cmp
flds
xchg
cld
aam
fdivp
dec
cmp
cmpsl
rcl
cli
js
sti
sub
mov
add
mov
test
xchg
jge
push
aaa
or
lds
fdivrs
lea
es
cli
mov
inc
lods
or
in
cmpsb
out
mov
push
sbb
mov
pop
xlat
mov
dec
ror
mov
and
mov
sub
xorb
roll
sub
cmc
daa
cmc
push
mov
xchg
xchg
shrb
sub
push
dec
xlat
iret
jb
or
adc
push
push
fistpl
cli
jge
hlt
mov
sbb
push
movsb
ljmp
add
pop
dec
cmc
sbbb
dec
mov
dec
decl
test
fistl
mov
repz
mov
fnsave
dec
mov
push
sub
aam
dec
cmpsl
push
xor
fdivrs
cltd
dec
cmp
cmp
loope
es
jmp
push
pop
fdivs
add
outsb
add
mov
inc
cli
jecxz
movsl
and
sti
out
sbbl
nop
outsb
insb
movsl
mov
in
push
hlt
adc
mov
sub
test
and
mov
inc
scas
roll
iret
int3
jg
arpl
cmp
rorb
popa
les
cmp
mov
sub
or
leave
sbb
enter
dec
mov
mov
es
jl
mov
mov
bound
je
std
or
xor
scas
cmc
repz
movsb
dec
cmp
in
push
jae
js
dec
into
scas
xchg
in
xor
bound
xor
insb
and
add
std
gs
or
sub
loop
mov
mov
mov
xlat
movsb
mov
sbb
in
xor
bound
aas
xchg
fiadds
lds
cltd
xchg
test
add
or
fs
pop
lret
mov
sub
movsl
push
pop
add
and
mov
mov
sbb
movsl
mov
int
cs
scas
or
dec
frstor
insb
mov
sub
out
push
adc
fidivrs
adc
jmp
scas
xlat
loop
fldenv
jno
xor
sub
xchg
sahf
mov
jae
pushf
enter
xor
test
or
stos
xor
fcoml
cmp
mov
inc
dec
fucomp
cmc
jae
push
xor
pop
and
stos
test
inc
jbe
ffree
add
mov
in
sub
pop
test
xchg
stc
dec
cmp
inc
sub
sbb
mov
js
adc
mov
cltd
aaa
out
shrl
rorb
lea
ret
pop
enter
fs
aas
aas
cmp
jmp
outsb
lds
fsts
imul
jb
aas
push
andl
clc
sbb
sti
jmp
fsts
pop
es
in
scas
lret
mov
cwtl
mov
mov
jge
dec
fnstcw
imul
inc
xchg
dec
jb
mov
dec
out
add
rcl
xchg
loop
or
sahf
add
scas
leave
mov
fldl2t
jno
jle
dec
sub
insl
xchg
pop
popa
loope
fdivrs
ss
punpckhwd
es
loopne
xor
out
pop
mov
daa
mov
jle
or
shl
xor
enter
jb
adc
leave
mov
stc
aad
pop
fsubs
sbb
add
pop
dec
addr16
daa
cmp
scas
dec
jnp
scas
cmp
insl
lods
inc
shrl
jp
adc
inc
arpl
rolb
adc
stos
inc
mov
inc
dec
fsub
fstpt
mov
mov
cli
adc
cmp
mov
sbb
repz
insb
test
imul
int3
subl
aam
pop
push
loop
mov
rorl
mov
push
popf
shrb
sbbb
pushf
pop
loopne
xchg
jae
xchg
fldt
mov
pushf
xor
insl
cmp
or
xor
mov
cmp
jno
mov
mov
cmpsb
mov
adc
lods
and
pop
sub
dec
pop
and
into
imul
repnz
inc
les
or
pop
pop
loope
faddl
xor
sti
mov
shlb
mov
repnz
jne
lret
inc
dec
cmp
jbe
and
cmp
mov
pop
cmc
sub
ds
jge
inc
mov
and
stos
pop
push
add
mov
scas
lock
add
rcrb
adc
jne
test
lret
mov
pop
xchg
adc
shll
loopne
imulb
into
gs
jecxz
sbb
dec
or
add
in
and
mov
std
sub
xchg
fsub
sub
sti
cld
sti
mov
mov
ja
mov
jg
aam
xchg
pushf
fs
es
push
xlat
mov
mov
add
cwtl
pop
stos
subl
push
push
sbb
mov
shrb
push
adc
sub
push
mov
push
stos
pop
jecxz
das
cwtl
jge
xor
xchg
outsl
fistps
es
mov
stc
std
and
mov
pop
fidivl
stos
pop
movsb
idivl
lock
arpl
dec
fldcw
sub
mov
or
add
out
lods
mov
scas
cwtl
pop
or
mov
pop
loopne
push
cmp
icebp
and
inc
mov
sub
shrb
fs
or
pop
or
fs
xchg
pop
clc
pop
inc
lahf
out
sub
sub
jb
loope
aam
aam
movsl
int
movsb
sbb
add
sar
mov
test
mov
pop
mov
xor
inc
aad
leave
ja
mov
xor
push
or
add
popf
or
fnstsw
inc
fwait
jmp
in
jnp
push
and
cld
mov
shll
xor
aas
sub
adc
stos
arpl
jg
std
fidivrl
dec
insl
lock
cmpsb
xchg
int3
push
stos
divl
shll
repz
lods
push
adc
xor
dec
fstpt
cmp
iret
mov
iret
mov
xchg
push
leave
xor
push
inc
mov
movsb
pop
xor
cmp
cld
insl
push
insl
mov
out
loop
lea
jecxz
shll
out
jbe
dec
bound
loop
jle
and
sub
inc
sub
mov
imul
xchg
push
push
pop
cmc
mov
pop
es
ret
sbb
mov
popf
adc
mov
repz
lcall
aaa
mov
in
sub
mov
jne
mov
inc
mov
jmp
xchg
xor
and
xchg
push
mov
adc
dec
loop
flds
das
test
jbe
pop
jne
repz
jle
xor
push
mov
rcll
cmp
xor
clc
cmp
outsb
dec
push
xchg
xchg
adc
and
aad
pop
or
sub
jo
push
addr16
nop
out
xchg
je
push
lcall
loopne
mov
xlat
mov
push
push
shrl
adc
movsb
push
inc
clc
loopne
pop
sub
out
jge
sub
lret
mov
adc
xor
xorb
or
pop
or
xchg
and
jl
ds
les
jl
jno
stos
mov
pop
sbb
mov
repnz
mov
in
xchg
mov
mov
aas
mov
in
fucomip
inc
sbb
shll
cmp
outsl
jno
pop
xchg
adc
test
imul
test
jae
or
dec
adc
push
loop
pop
ss
adc
jae
gs
push
aaa
bound
cmpsb
notl
stos
jbe
push
movsl
popf
pop
notl
scas
sub
mov
frstor
rol
mov
cmp
flds
in
mov
adc
xchg
aam
pop
pop
xchg
push
loop
sbb
cmpb
sub
mov
mov
outsb
nop
aad
stos
subl
out
adc
out
mov
aam
je
dec
sub
clc
xchg
push
repnz
pop
push
sub
dec
cmp
sti
jo
push
test
xchg
adcb
xchg
stos
fs
je
xchg
jb
out
call
cmp
mov
inc
cmp
sbb
out
or
fdivs
pop
pop
sti
jmp
push
pop
jecxz
sbb
sub
cmc
or
in
xchg
inc
clc
cmp
lea
cmp
clc
cmp
jbe
adc
add
pusha
add
cmc
adc
push
jbe
jle
fisubrl
inc
sbb
leave
push
push
xor
imul
adc
enter
orb
ja
sbb
adc
and
and
xchg
std
loop
lcall
pop
out
and
add
insl
sub
dec
push
ds
xor
adc
ja
xchg
jmp
and
ror
insb
xchg
mov
rorb
scas
xor
or
inc
das
cmp
mov
jno
xor
cmp
inc
das
adcb
ficompl
sub
sbb
fnstsw
in
pop
and
ficoml
test
pop
shll
mov
adc
shl
mov
xchg
push
fs
jge
xchg
out
bound
push
xor
jae
mov
cmpl
jno
sbb
xor
arpl
dec
cmpsl
and
rorl
and
imul
inc
add
mov
pop
sbb
push
xlat
out
movsb
mov
test
mov
hlt
mov
je
cmpb
cld
ja
je
mov
ret
xor
mov
dec
pushf
inc
insb
fs
cmp
mov
ja
cmp
sbb
mov
jbe
and
xor
test
mov
sub
cmp
or
divb
xchg
and
addr16
inc
js
ret
popa
aaa
popf
loop
cmpsb
add
insl
iret
test
mov
ret
lds
push
outsb
cmp
es
push
mov
lds
stos
cmp
push
popf
int
cmp
ret
xchg
ftst
mov
or
mov
mov
imul
or
idivl
pop
mov
cmp
insb
xchg
flds
mov
ja
or
in
cmpsb
xchg
iret
outsb
iret
popl
lret
jp
aad
jg
add
adc
es
insb
or
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
shrb
mov
in
loope
push
mov
rorl
lea
fcmovnu
shlb
fcmovnu
shlb
hlt
ret
add
jge
imul
fldt
xor
adc
shrb
jp
in
jne
lret
lahf
repz
mov
sbb
es
pop
loopne
add
notl
out
hlt
iret
loope
xchg
sub
fs
nop
mov
pop
mov
sti
comiss
daa
lods
jno
jnp
sbb
test
int3
xchg
mov
enter
mov
dec
repz
dec
dec
and
arpl
mov
mov
hlt
das
add
push
jg
gs
push
cmp
dec
dec
fsubs
pop
cmpsb
cmpsl
mov
inc
mov
pop
cmp
scas
push
pop
push
rorb
pop
xor
pop
cmp
add
push
sub
push
pusha
das
js
psraw
inc
mov
pusha
or
push
call
mov
jne
sbb
xchg
xchg
sbb
push
jecxz
sarb
fs
ret
add
push
test
movsl
mov
jge
cmc
fisttpll
dec
push
adcb
sub
pop
pop
frstor
dec
frstor
mov
pop
clc
fbstp
push
pop
xchg
add
xor
sub
jecxz
or
cmpsl
ds
jge
push
or
jo
push
mov
lods
cmc
stc
jle
pop
jno
fbld
mov
imul
test
xor
pop
jg
mov
enter
push
jge
aad
mov
es
lcall
js
xor
out
ret
mov
cwtl
movsb
cmpsl
shlb
add
mov
daa
pop
inc
hlt
inc
jno
insb
loope
lcall
jnp
loopne
js
sbb
and
andb
sbb
outsb
jl
fildl
or
test
cs
jge
fs
lret
mov
andb
push
stos
aad
lahf
addr16
cmc
mov
ds
jmp
add
inc
movsb
aaa
mov
rorl
xor
add
daa
pusha
dec
in
xor
mov
fidivrl
daa
inc
popa
test
int
mov
rcr
mov
mov
jnp
mov
ret
pop
add
dec
subl
sub
lea
mov
pop
mov
sub
xchg
test
cs
pop
rep
addr16
and
fldcw
mov
cmc
push
decl
daa
mov
mov
pusha
push
lea
mov
push
ror
mov
loop
mov
sub
shr
mov
xor
and
and
mov
leave
mov
stos
icebp
sub
or
test
js
pop
xor
jnp
int
lods
sub
jmp
fbstp
ss
fmul
sbb
call
mov
sbb
pushf
inc
rorl
iret
pop
dec
repz
sbb
xchg
insl
add
mov
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
inc
pushf
xlat
das
cmpsl
mov
lods
xor
sbb
mov
push
std
shrl
bound
push
add
ret
add
cmp
mov
sub
fmull
out
mov
cmp
test
ret
jle
cmpsl
add
into
push
enter
push
and
aaa
add
xchg
aad
inc
data16
rcl
sahf
pop
lret
pushl
mov
add
movsl
push
xchg
pop
xor
sbb
fildl
insb
mov
gs
idivb
sbb
jnp
xor
roll
test
push
repnz
jne
pop
cmpsb
jb
adc
sbb
sub
rcrb
fidivrl
dec
dec
xchg
aad
lcall
jne
xchg
aas
popa
aad
les
cmp
out
push
push
cmp
jecxz
pop
jl
inc
movsb
xor
cld
mov
loope
pop
repnz
pop
sub
xchg
outsl
out
push
inc
lods
adc
or
jge
mov
add
out
es
dec
int3
pop
sbb
cld
in
and
ljmp
inc
repnz
cmc
popa
and
mov
std
jge
lahf
xor
adc
leave
sub
sub
test
orb
lahf
xchg
cli
cld
addl
xchg
lahf
lcall
sti
sbb
pop
push
add
sahf
loope
aam
inc
and
loope
hlt
mov
inc
imul
fisubl
shl
scas
sbb
dec
pop
mov
jecxz
mov
sbb
mov
cld
mov
jl
mov
movb
adc
idivl
call
xchg
das
jg
cmove
pop
sbb
cwtl
out
cmp
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
fcmovnu
shlb
nop
sub
cmp
xchg
xchg
movsl
jno
and
leave
jo
xchg
sbb
ss
and
mov
sub
mov
mov
aam
mov
pop
add
add
clc
pop
arpl
loopne
div
call
insb
mov
std
ret
add
cmp
std
sbb
repz
mov
push
xchg
fidivrs
mov
lock
cmp
add
jo
fisubrs
jmp
sbbl
jo
scas
mov
add
xor
movsl
nop
or
mov
stos
xchg
mov
push
js
or
sbb
mov
dec
int
mov
xchg
jecxz
popa
je
xchg
mov
mov
iret
adc
ret
jl
adc
daa
loopne
cmpl
mov
das
pop
inc
in
out
jae
or
leave
les
dec
fwait
in
mov
pop
push
ret
imul
in
loope
add
nop
pop
jg
out
cld
sbb
xlat
sbb
ret
cmp
leave
add
addr16
fs
rcl
mov
jb
mov
aas
stos
push
out
or
jnp
jne
fmull
adc
push
jecxz
push
imulb
pop
imul
adcl
dec
push
cmp
push
repz
fnstsw
cwtl
xor
sub
fimull
cmp
aas
push
sbb
add
xor
test
pushf
xchg
xor
or
pop
lahf
inc
inc
jle
stos
mov
fadd
dec
lahf
lock
pop
or
sub
add
fcmovu
popf
stos
mov
sahf
movsl
shrb
cmp
pop
lds
mov
dec
adc
rcrl
xchg
test
popf
add
es
push
mov
out
push
mov
inc
sarl
cmpsb
jnp
leave
lahf
pop
test
cmp
pop
test
adc
add
xor
sbb
outsl
dec
xchg
push
adc
lahf
popa
leave
leave
sub
jmp
jp
push
popf
mov
mov
push
test
push
fisttps
push
pop
xor
ret
repz
and
pop
dec
inc
xchg
idivb
mull
aaa
dec
mov
xor
add
shr
int3
lret
inc
xchg
ljmp
add
xorb
xchg
and
push
pop
mov
ficompl
sub
out
outsl
es
int
pop
scas
test
fnstenv
mov
add
jl
xor
lret
sub
sbbb
mov
imul
pusha
mov
xchg
adc
and
mov
mov
xchg
scas
imul
lea
inc
jo
lcall
leave
sub
or
cmp
idivl
popa
lods
adc
cmpsl
fcom
scas
sub
cmp
pop
ret
lods
mulb
rcr
xchg
aam
mov
xchg
push
xlat
jbe
in
sbb
cmc
loope
push
jbe
test
mov
jne
fldl
daa
imulb
imul
dec
fmuls
sbb
aam
sub
out
insl
xchg
xor
xchg
push
dec
out
stos
loop
mov
jp
pop
xchg
rcr
jns
faddl
ljmp
jmp
dec
and
das
mov
sub
mov
sub
in
sub
scas
fdivl
mov
and
dec
fstl
push
mov
ss
push
cmp
stos
pop
jp
pushw
inc
bound
push
fistps
cmp
jae
push
test
xor
mov
test
inc
imul
pop
jno
out
xor
rorl
fadds
ljmp
cli
pushf
in
or
push
cmp
punpcklwd
popf
enter
sub
jl
sub
xchg
repnz
mov
cmp
sub
push
jge
adc
movsb
inc
jb
nop
cmp
jo
xor
lahf
sub
nop
sbb
es
jg
pop
sub
sbb
in
ds
lret
xchg
mov
and
movsb
add
sbb
in
and
jg
or
cld
add
leave
scas
ljmp
cmp
mov
mov
cmp
and
xor
add
xchg
fdivrl
xchg
adc
ret
sub
add
mov
mov
add
xchg
xchg
test
cli
pop
es
in
mov
jno
idivl
pushf
fs
test
push
dec
push
sarl
pushf
add
scas
and
sbb
fcmovnbe
adc
adc
repnz
adc
adc
sahf
mov
or
push
pop
pop
sub
js
ds
xor
and
jl
jge
push
or
jle,pn
mov
xchg
fiaddl
lea
cmpsl
xchg
rcl
pop
cwtl
lret
test
jecxz
and
cltd
dec
xchg
popa
jge
sub
addr16
inc
and
aaa
jp
inc
pusha
outsl
pop
xlat
int3
call
shll
divb
enter
dec
push
jnp
mov
repnz
shrb
pop
xchg
cmpsb
pop
jge
inc
adc
jnp
push
fs
int
mov
pop
inc
pop
cld
jbe
notb
push
or
lret
stos
int3
or
mov
inc
push
mov
xchg
jp
push
xchg
jg
cmp
pop
pushf
mov
xor
aam
outsb
sbb
push
popf
push
pop
roll
stc
in
mov
adc
es
xchg
add
andl
mov
dec
pusha
cmp
cmpsb
mov
mov
rolb
adcb
mov
dec
mov
test
leave
mov
lahf
mov
in
add
pushf
jo
pusha
imul
xchg
pushf
xchg
in
imul
sub
out
push
push
and
scas
jb
pop
iret
cmpsl
push
or
sub
lret
adcb
and
inc
aam
inc
mov
pop
inc
adc
imul
pop
je
add
push
test
and
scas
jb
pop
iret
cmpsl
mov
mov
adcb
outsl
cmpsl
xlat
adc
cmc
out
ljmp
incb
push
or
inc
out
gs
push
pop
ficompl
jnp
fnstsw
in
scas
jb
pop
iret
cmpsl
jmp
cmc
lret
prefetch
out
push
cmp
js
sub
sbb
jecxz
gs
popf
sbbl
enter
mov
rorl
dec
and
jb
pop
enter
pop
stc
pusha
xchg
movsb
dec
stc
or
jae
scas
pop
decl
call
or
insl
pop
jno
mov
or
xlat
shr
inc
mov
xchg
mov
mov
jns
add
cmpsl
mov
mov
add
jp
add
test
mov
test
push
decl
in
std
add
pop
mov
test
xchg
push
je
dec
inc
jns
xor
sbbb
ja
movsb
mov
or
shlb
in
les
addr16
mov
xchg
mov
push
jmp
push
jnp
imul
jno
out
inc
cmp
movsb
in
cmp
and
xchg
mov
jl
push
aas
mov
xchg
fs
es
in
outsb
cli
pop
mov
fdivrl
mov
js
sub
mov
jg
cmc
xor
mov
jae
loop
and
sbb
stos
mov
and
mov
mov
mov
mov
mov
popf
dec
stos
pushf
mov
mov
push
lods
int3
into
iret
je
or
add
cmp
mov
pop
js
subb
call
out
sti
pop
or
sbb
mov
movsb
push
cmp
adc
jb
in
ss
mov
clc
xor
jb
adc
test
ret
sbb
js
sub
ljmp
ret
add
shlb
pop
ret
int3
push
out
lahf
mov
inc
sub
pop
sub
push
push
push
xchg
cmp
xor
xchg
adc
popf
lret
pop
mov
cmp
addl
dec
pop
jae
jle
cmp
sub
js
fsubs
lods
shrb
pop
dec
push
and
jae
push
iret
ficoml
cmp
sbb
rcr
aam
stc
inc
les
and
test
inc
jne
in
mov
ret
xchg
outsb
cli
in
sub
pop
int
inc
pusha
cmp
pop
movsl
mov
mov
pop
mov
test
pop
xchg
jae
mov
sahf
add
imul
adc
andl
int3
push
xor
ja
jmp
mov
mov
adc
push
jge
cmp
sub
push
or
inc
sbb
cli
sub
and
sar
mov
int3
scas
ret
das
adc
dec
addr16
notl
ljmp
test
iret
push
stos
mov
mov
push
mov
cmp
mov
jl
mov
push
shr
push
mov
push
mov
mov
mov
movl
movl
mov
mov
mov
shr
add
shl
add
xor
mov
add
xor
sub
mov
shr
add
mov
shl
add
xor
mov
addl
add
xor
sub
decl
jne
mov
mov
mov
add
decl
jne
pop
pop
pop
leave
ret
int3
icebp
push
inc
push
cmp
push
fs
repnz
adc
int
pop
dec
daa
cmp
pop
sti
xor
icebp
adc
loopne
add
imul
sbb
pusha
cmp
and
push
push
hlt
out
popf
cmpsl
xchg
aaa
sbb
mov
pop
inc
das
aaa
andl
in
add
stc
dec
push
std
jge
and
xor
stos
insl
inc
out
mov
and
or
ljmp
pop
addl
push
sbb
fs
fnstenv
push
pop
mov
stos
jo
push
test
add
xor
dec
out
sarb
lea
stos
rcrl
push
shlb
addl
insb
push
out
cs
xchg
outsb
sub
js,pt
sub
ds
fdivrs
sub
mov
subl
cmp
ja
mov
push
jae
fwait
push
shll
push
das
or
aaa
xchg
jnp
xchg
test
rorl
scas
loope
ret
mov
mov
adc
sbb
cli
jnp
xchg
sti
fnstcw
inc
cld
aaa
push
enter
je
sahf
ja
xor
mov
imul
insb
rol
mov
es
mov
mov
fisttpl
dec
adc
cmc
adc
imul
dec
jae
orl
mov
xorb
popa
adcl
xchg
mov
pop
adc
icebp
popa
and
repnz
dec
stos
sub
pop
push
sub
mov
xchg
bound
loop
cmpsb
mov
push
lcall
dec
shll
not
rcrb
ret
and
.byte
xchg
out
nop
inc
