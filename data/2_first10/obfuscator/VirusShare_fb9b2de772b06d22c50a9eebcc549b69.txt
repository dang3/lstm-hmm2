push
call
ret
ret
ja
fdivrl
js
sbb
mov
or
roll
hlt
jle
cmp
daa
push
pop
mov
cmp
sbb
add
push
jl
fistpll
mov
test
neg
mov
or
xlat
mov
cmpsl
ror
dec
xor
jbe
scas
pushf
rcrl
add
fs
pushf
dec
cmp
xchg
in
mov
adc
loopne
xchg
fwait
inc
lods
xchg
cmc
push
lods
call
loope
mov
add
or
daa
or
jno
icebp
fsubrp
push
sbb
stos
push
pop
dec
adc
and
sbb
or
jno
lea
jmp
negb
loopne
cmp
cmp
sub
pop
mov
and
ror
xor
mov
lret
jns
in
orl
bnd
scas
int
loopne
aas
dec
arpl
mov
sub
dec
sub
mov
fs
mov
fs
push
xlat
mov
mov
mov
dec
pop
outsb
out
outsb
fists
sub
pop
sarb
cmpsb
adc
xchg
enter
dec
sti
leave
ds
jmp
in
cmpsl
loop
xchg
out
jo
xchg
cmpsb
popa
out
test
lock
ds
jl
lock
sub
popf
or
test
adc
repz
arpl
sbb
loop
daa
cli
movsb
into
ret
rorb
ds
mov
lcall
sub
test
xor
fucomip
test
pop
jge
or
shl
cld
imul
cmp
orb
aad
out
icebp
dec
lret
out
shlb
notb
mov
push
gs
call
push
and
gs
push
lcall
adc
out
pop
mov
push
push
sub
loope
mov
xchg
add
push
scas
cmp
dec
ss
sbb
mov
cmp
aam
test
dec
jns
add
ds
xchg
das
scas
and
sub
xchg
add
push
cli
out
out
inc
inc
jl
js
pop
inc
mov
and
mov
push
ret
push
std
cli
jge
mov
into
idivl
lea
bound
fstpl
mov
fidivrl
cmpsl
es
ret
xor
cwtl
cmp
or
sbb
jo
inc
xchg
rcl
dec
data16
js
loop
rolb
pop
push
push
cltd
shlb
fisubl
int3
mov
movsb
push
cmp
cmp
leave
sub
out
add
jne
pmulhuw
je
pop
jge
int3
sbb
and
cmc
push
movsb
or
aad
rol
js
fildl
xchg
jae
cmp
nop
mov
jae
mov
sbbl
insl
mov
repnz
lret
cmp
mov
arpl
add
push
and
mov
mov
mov
xchg
jnp
add
inc
push
fcoms
mov
cmp
ret
fsubl
shl
cmp
xor
mov
sub
ss
or
push
mov
and
adc
lods
mov
ljmp
xchg
lret
mov
jecxz
xor
out
into
icebp
cmpb
add
enter
push
dec
int
pop
loopne
jg
ret
dec
cmp
bnd
push
jbe
push
loop
xchg
sub
sbb
lea
ret
int
cmp
test
sbb
and
cmp
push
jo
movsb
outsb
in
xchg
or
stos
mov
loope
adcb
inc
fwait
cli
outsb
sub
add
push
loopne
cmc
inc
inc
jne
leave
shll
xchg
mov
enter
add
int3
xchg
sbbl
jmp
or
lret
sbbl
mov
sub
jo
cmp
jg
ret
sbb
into
push
xor
jno
shr
jo
xor
mov
cs
js
es
mov
test
xchg
jl
subb
in
stc
fwait
arpl
mov
and
push
xchg
out
std
push
mov
push
clc
push
jbe
jle
or
xor
pusha
sub
pop
jns
add
test
dec
inc
lret
int3
or
repnz
and
mov
loop
ss
lds
fcoml
scas
adc
inc
test
push
add
mov
inc
jecxz
cld
sub
xchg
sub
sbb
push
cmp
outsb
xchg
and
lahf
lahf
jno
and
into
test
repz
aas
jns
mov
xor
lods
pop
js
push
push
dec
pop
sbb
mov
jnp
or
jnp
es
cmp
repz
pushf
andb
es
inc
inc
adc
call
mov
into
cwtl
movsl
add
imul
in
insl
loope
data16
push
mov
in
in
rcll
add
lcall
js
je
lods
test
popa
pop
adc
push
mov
enter
insl
xor
lea
sbb
fmull
inc
sbb
mov
jecxz
add
or
mov
mov
aas
outsl
xchg
mov
xor
call
popa
xchg
shrl
mov
hlt
fwait
ss
dec
es
xchg
push
stos
js
fidivrl
cmpsb
xorb
mov
lods
mov
or
stc
dec
aam
jo
adc
sbb
mov
scas
xor
pop
xorl
push
stos
xchg
fxch
fstpt
ret
or
adc
jecxz
sahf
add
mov
pop
inc
pop
clc
xlat
or
das
shlb
fs
pushf
das
adc
insl
test
lds
lret
jmp
xchg
pop
aad
add
icebp
lock
popf
pop
sub
clc
mov
mov
lods
fsubrl
out
mov
pop
cmp
inc
out
jno
xchg
jp
lcall
or
mov
rcrl
shrb
jne
add
xchg
adc
xor
push
push
sbbl
les
call
pop
add
scas
add
fnstcw
or
dec
imul
mov
and
add
lret
adc
jb
jge
xor
sbb
div
mov
nop
xor
sub
out
fwait
push
cmp
add
mov
inc
jge
hlt
je
aas
fldt
fdivs
adc
xchg
ret
inc
js
pop
jnp
into
inc
push
ds
mov
sub
or
idivb
shll
or
sub
shrl
or
inc
je
ret
pushf
faddl
arpl
cmp
arpl
xchg
repz
add
pop
int
xchg
xor
xor
out
sbb
and
sbb
push
jne
mov
mov
insl
arpl
loope
push
es
nop
sahf
add
mov
cmpsl
rcrl
inc
scas
or
pusha
loopne
das
iret
loopne
and
fsts
push
fdivl
lods
sub
popa
push
pop
and
lock
jecxz
fcomps
inc
sbb
loope
cmp
imul
ret
dec
mov
inc
sbb
lret
and
jbe
pop
out
test
or
mov
add
adc
and
add
push
in
out
dec
push
adc
cmp
push
lahf
inc
fdiv
push
xchg
pop
mov
cwtl
jle
shlb
mov
bswap
test
or
fsubr
ficompl
and
stos
or
sub
nop
pop
sbb
mov
sub
inc
fiaddl
and
cld
jo
lods
mov
repnz
adc
data16
adc
jp
push
push
mov
test
sahf
xchg
add
add
mov
mov
inc
mov
fucom
scas
xor
ds
stos
push
pop
ja
push
int
push
or
aam
sub
stos
inc
cmp
incl
icebp
xchg
mov
add
scas
insl
mov
adc
stos
fs
loope
mov
lock
inc
mov
bound
stos
push
cmp
nop
mov
push
pop
mov
push
loope
xchg
jge
mov
mov
pop
push
roll
jge
adc
sti
adc
loope
add
inc
clc
addr16
lods
mov
andb
aaa
push
and
adc
leave
mov
dec
testb
int3
js
mov
dec
xor
lahf
cltd
jno
xchg
add
pop
mov
pop
ss
rcrb
loope
xchg
adc
mov
pop
arpl
jns
jnp
jno
or
jge
push
inc
out
lods
rcll
iret
push
call
inc
aas
xor
movsb
lahf
std
or
mov
pop
jl
cmp
cmp
mov
mov
sbb
push
jmp
enter
jle
bound
sarb
sub
fimull
jne
jo
out
sbb
pop
xor
adc
faddl
aam
or
fs
aas
loope
xchg
mov
mov
cmpsl
cmp
push
xchg
stc
fmull
pop
loope
dec
push
aaa
sti
jno
xor
dec
adc
ret
inc
scas
mov
sbb
dec
push
sub
test
mov
movl
sbb
add
jo
push
sub
fwait
adc
adc
fisubs
mov
inc
shrl
add
cmpsl
inc
cmp
pushf
icebp
into
fcomps
aam
pop
lds
mov
cs
lods
pop
fcoms
js
and
lods
or
hlt
cs
cmpsl
cltd
dec
jecxz
jnp
xchg
mov
in
sbb
or
cltd
dec
andb
lods
inc
rorl
adc
les
arpl
jg
jp
mov
push
jecxz
fidivrl
orb
leave
leave
bndstx
sub
push
je
fs
call
icebp
test
mulb
xchg
xchg
fsqrt
popa
jmp
sbb
cwtl
xchg
and
xchg
pusha
add
sbb
adc
subb
cmp
sbb
out
addl
sub
pop
xchg
dec
cwtl
pop
outsb
xor
stos
jp
jne
and
sbb
stc
sub
repnz
and
xchg
xor
or
test
sbb
mov
and
and
lods
pop
and
mov
push
mov
and
test
pop
mov
movsl
in
insb
jae
pop
jmp
sub
sbb
incl
xchg
mov
inc
xchg
xchg
mov
jnp
adc
cs
ss
ficompl
loopne
jo
sbb
adc
stos
dec
ficomps
inc
lea
mov
lcall
test
lods
in
rclb
cli
xchg
or
mov
jns
pop
hlt
test
setg
out
jmp
imull
jbe
or
sub
mov
jno
sbb
aaa
add
ret
mov
sub
mov
or
mov
mov
test
jmp
add
cmc
loopne
cltd
mov
sbb
imul
inc
pop
insl
xor
inc
sub
lret
inc
imul
test
push
xchg
stc
rcrb
adc
aam
push
xchg
out
je
mov
inc
and
xchg
rclb
testb
in
fldl
out
xor
sbb
push
mov
push
mov
inc
jl
fidivrs
into
pop
pusha
ds
jb
loope
dec
test
sub
fdivrl
or
vmovntpd
push
dec
dec
xor
mov
outsb
jne
call
cmpsb
xchg
or
filds
imul
hlt
and
lahf
jmp
push
cmpsb
push
repnz
inc
mov
mov
sbb
adc
cmpsb
add
inc
pop
shll
jg
bound
or
mov
xchg
cmp
and
mov
jae
pushf
aam
fistl
dec
imul
das
mov
jbe
cmp
lods
inc
in
insl
push
ss
loope
fimuls
cli
or
fisubrs
mov
push
iret
clc
jne
mov
mov
and
jle
sbb
out
dec
jl
push
xchg
dec
xchg
clc
lods
push
lea
test
sub
arpl
jge
cmp
push
addr16
xchg
sub
es
in
leave
pop
mov
lcall
xchg
out
sbb
daa
pop
ljmp
notb
in
cmp
xor
ljmp
push
xlat
and
test
mov
call
lret
es
outsl
jp
sbb
stc
jno
mov
movsb
dec
xor
jecxz
das
mov
ffreep
out
sbb
mov
es
cmpsb
movsb
cmp
mov
inc
inc
cmpsl
sti
fistl
insl
fs
dec
xlat
cmp
ret
loope
jl
mov
pop
ret
pop
inc
hlt
cmpsb
mov
roll
cmp
fldl
andl
inc
int3
dec
jo
std
insb
mov
out
lods
jae
insb
jmp
mov
enter
lea
xor
addr16
bound
daa
and
pop
popf
xchg
lds
arpl
xchg
cli
pop
cwtl
push
dec
rcl
mov
adc
xchg
fs
jnp
cli
ss
xor
add
mov
mov
or
xchg
and
les
or
jge
pop
arpl
xchg
mov
cmc
xchg
cmpsb
ja
enter
or
xchg
pusha
gs
idivl
xor
sarl
xor
dec
pop
cmp
adc
ja
test
movsb
jbe
rolb
jne
scas
shr
xor
je
xor
es
ljmp
jne
inc
add
aam
addb
insb
std
movsb
mov
mov
mov
xchg
jne
cmp
test
fs
int
mov
imull
ret
push
or
imul
cmp
ljmp
sbb
jnp
loop
icebp
sub
repnz
and
das
ret
lahf
sbb
mov
icebp
popf
jne
mov
call
add
movsb
fcmovnu
xor
in
inc
inc
xchg
push
or
out
add
mov
es
add
insl
shlb
lods
shlb
push
sub
cvtps2pd
inc
out
daa
cwtl
push
cmp
imul
outsb
mov
jp
inc
xor
mov
fwait
push
aad
xchg
in
mov
xchg
push
push
mov
inc
push
fs
imul
fstpl
lret
inc
ds
push
push
in
or
lods
mov
popf
xor
add
xlat
pop
fstpt
or
cmc
sub
aas
sbb
ss
test
dec
adc
fsts
les
es
sub
sbb
cmpsl
xor
je
out
in
or
mov
insl
cmp
hlt
cmp
cmp
lahf
repnz
lods
and
mov
into
cmp
movswl
cli
dec
and
iret
inc
lock
ficomps
sbb
add
inc
fadd
sti
loop
sbb
mov
mov
ss
shlb
lds
mov
or
sub
xor
repz
mov
cmc
clc
inc
arpl
cmpsb
sbb
mov
inc
inc
iret
sbbb
push
arpl
and
repz
cmpsb
arpl
lock
add
leave
adc
inc
cmpsb
pop
sbb
fmul
ret
mov
out
or
mov
sub
pop
xlat
sub
sahf
or
pop
jl
in
sub
rorl
fstl
js
imul
nop
xor
ret
and
and
xchg
xor
loope
divl
inc
jbe
and
imul
xchg
insl
cld
cmp
repnz
int3
std
mov
mov
ror
sbb
es
shrl
jb
inc
ret
cltd
loopne
and
add
xchg
inc
mov
in
clc
ret
mov
loop
adc
and
fmuls
dec
pop
jmp
inc
xor
nopl
cmp
mov
cmp
mov
and
sbb
mov
pop
push
popa
mov
aaa
lret
iret
cli
dec
insb
and
jae
mov
cmpsl
xlat
iret
fwait
loopne
xor
mov
adc
cmp
push
adc
loope
orl
or
add
xchg
sbb
jl
mov
sti
enter
int
sbb
ret
adc
aad
bound
das
shrl
and
xchg
iret
enter
inc
stc
pop
aam
mov
mov
xor
cmpl
sbb
out
ret
xor
dec
ret
movsb
sbb
xor
mov
xor
jp
int3
loopne
flds
xchg
dec
push
mov
out
mov
push
fwait
push
aaa
iret
inc
sub
add
testb
lods
jae
mov
push
sbb
push
das
cltd
sub
out
sarb
adc
xorb
pop
pushf
scas
ss
xchg
in
or
mov
les
int
stos
adc
mov
popa
adc
xor
aad
sub
pop
sbb
in
shlb
sahf
pop
dec
stc
pop
or
pop
xor
mov
mov
addl
push
into
nop
fstps
lcall
ja
xchg
push
add
mov
call
lcall
mov
aas
dec
lahf
dec
or
lret
pushf
adc
push
movsl
idivl
lret
push
fmuls
mov
add
loopne,pt
sbb
sub
int
shll
icebp
or
scas
or
mov
scas
mov
or
pushf
mov
bound
jb
loopne
add
xor
inc
lods
inc
inc
repz
sti
fnstsw
jae
test
fsubrl
mov
dec
inc
mov
xchg
icebp
aaa
in
xor
mov
mov
jge
mov
mov
xchg
stos
iret
cmp
leave
adc
in
shrl
test
inc
outsl
and
mov
jg
fdivl
shrl
cwtl
ss
sub
data16
mov
inc
adc
push
call
out
jo
mov
pop
aad
je
jo
dec
jb
stos
adc
mov
mov
lock
test
ret
fcomip
push
cmp
push
mov
cmp
dec
dec
data16
orb
dec
pop
xchg
out
pop
sbbl
andl
shll
fs
push
xchg
cmp
dec
cmp
movsb
push
mov
cmp
cmp
xor
cltd
shr
repz
fldenv
fdiv
insl
mov
cmp
adc
xchg
addb
dec
pop
pop
mov
mov
inc
sarb
fnsave
lds
jg
outsl
pop
dec
lds
gs
inc
inc
sbb
leave
sub
enter
je
iret
shlb
lock
cmp
in
add
mov
sub
dec
sbb
mov
enter
xchg
out
aaa
fcoms
stos
push
push
call
dec
popf
lods
xlat
aad
shr
mov
mov
cmpsb
push
sbb
jo
pushf
imul
mov
test
mov
repz
adc
bound
imul
dec
in
les
xchg
xchg
movsl
cld
addb
std
aad
stc
loop
jo
inc
loopne
mov
loop
jecxz
dec
in
ds
ficoms
popa
ljmp
stos
add
outsl
xor
jmp
sbb
cwtl
negl
pop
add
xchg
or
call
inc
mov
adc
push
xor
es
sarl
dec
inc
xchg
dec
pop
mov
inc
es
inc
push
cmp
and
mov
adc
add
sahf
sti
in
and
sub
in
and
fiadds
mov
stos
inc
test
cltd
mov
cld
int3
lods
mov
stc
xor
aam
dec
jo
jns
call
data16
pop
jle
fisubl
fisttps
test
push
lcall
movl
and
hlt
xlat
cli
add
cmp
out
dec
mov
mov
jbe
dec
stc
add
mov
sbb
movsb
inc
inc
add
ss
push
pop
fidivrs
pop
cmpl
or
or
ret
out
xor
movsl
mov
push
mov
xchg
fists
xor
mov
inc
inc
sub
movsb
ret
fdiv
daa
sahf
into
jns
sbb
dec
or
xlat
ret
fcoms
out
mov
cmp
mov
loop
adcl
pop
dec
xor
jp
adcl
inc
jmp
dec
jns
imul
sarl
aaa
push
enter
jne
insl
addb
xchg
pop
cmp
xlat
dec
lret
adc
insl
sbb
scas
inc
mov
add
jae
pop
je
divl
les
dec
push
imul
mov
sub
jge
stos
aaa
pusha
and
sahf
js
leave
and
inc
notl
fnstcw
xor
pop
mov
mov
data16
stos
mov
mov
ss
or
pop
test
sbb
test
outsl
mov
stc
or
dec
xchg
push
mov
cltd
lea
xor
push
adc
outsl
or
sbb
fisttpl
inc
pop
dec
es
pop
scas
lcall
pop
mov
mov
jl
xor
jb
lcall
out
insl
mov
addr16
mov
push
adc
fs
sub
sub
inc
test
pop
add
enter
rcrl
push
adc
cmp
xor
addr16
inc
sub
fdecstp
mov
and
je
mov
jg
repz
and
jl
loopne
sub
out
sbb
mov
jl
test
inc
std
mov
jmp
push
jecxz
cmc
dec
dec
lret
add
pop
arpl
xchg
sub
jl
arpl
aad
ljmp
cmp
mov
loope
pop
repz
outsb
mov
repnz
mov
fbstp
idivb
shrb
fs
pop
out
insb
cmp
pop
pop
or
push
pop
dec
scas
call
inc
dec
push
jg
push
fldenv
jnp
test
xor
cwtl
xchg
stos
cld
inc
repz
sbb
cltd
cmp
fiaddl
xlat
in
fmull
push
andb
mov
adc
and
ret
loopne
xchg
and
fsts
push
mov
pushf
idiv
scas
mov
mov
sbb
mov
dec
sbb
pop
dec
sti
mov
in
mov
pop
pop
in
or
pop
or
lds
lock
out
mov
cmp
mov
xorb
jmp
sub
sbb
aaa
notl
cmp
movsb
cmp
xor
ret
imul
in
adc
inc
push
inc
sbb
rorl
mov
mov
sbb
mov
nop
mov
jae
adc
movsb
xchg
imul
inc
in
in
sbb
mov
xorl
push
mov
lret
adc
inc
xlat
push
xor
xchg
sbb
test
adc
inc
mov
gs
jo
pop
xchg
sub
shrb
out
jb
mov
out
fwait
pop
jmp
bound
cmp
sub
outsl
cmpsb
je
mov
movsl
mov
mov
cmp
sub
mov
in
mov
bound
and
push
mov
and
out
add
aaa
fcompl
jle
outsb
mov
mov
push
aam
pop
pop
jns
jecxz
into
loop
gs
popf
clc
mov
ret
out
out
dec
xor
cmpxchg
shlb
js
int
xor
sub
mov
shl
test
sub
ss
cmp
fcmove
push
add
aas
jne
inc
mov
rolb
in
inc
xchg
jg
nop
sbb
mov
into
dec
xchg
aaa
cmp
xor
cmp
xchg
inc
jno
outsl
mov
icebp
dec
cld
out
fildll
notb
jge
dec
out
jno
pop
loop
dec
xchg
push
icebp
test
pop
xchg
dec
xor
pop
movsb
fistps
mov
xor
add
jno
out
in
adcb
mov
jns
lds
cwtl
push
inc
insl
xchg
xor
sbb
mov
or
enter
and
es
sbb
pop
sahf
adc
stos
je
shrb
loop
jg
ret
incl
scas
in
pusha
mov
outsl
xchg
pop
shl
inc
movsb
movups
or
add
dec
iret
imulb
sbb
leave
lds
clc
xchg
loop
or
stos
xchg
or
into
leave
jb
sarl
or
scas
mov
sub
outsb
ret
pop
dec
or
dec
outsl
addb
lret
stos
mov
push
lods
movsb
mov
inc
cmc
sbbb
popa
inc
idivl
xor
sub
inc
and
mov
testb
orl
sbb
xor
test
mov
mov
sbb
ljmp
sbb
insl
jmp
add
aas
xchg
lret
scas
rclb
mov
dec
xor
shrb
bound
pop
sub
cmp
mov
cs
mull
scas
cmp
cld
inc
inc
push
lcall
cmp
mov
rorl
jge
mov
inc
push
xor
and
arpl
sbb
jne
dec
call
stos
in
sahf
outsb
popf
pusha
fldcw
fidivl
lret
mov
jle
cli
jbe
stos
pusha
inc
pop
jge
mov
dec
xor
jp
gs
push
mov
jae
pushf
sbb
mov
scas
lcall
push
daa
insl
insb
and
cld
popa
inc
cltd
mov
data16
repnz
ret
inc
push
stos
mov
in
cmp
nop
xchg
mov
jge
sbb
mov
or
xor
jo
fidivrs
int
jg
add
mov
inc
frstor
adcl
data16
adcl
jne
and
lahf
and
mov
aad
lods
xchg
inc
mov
pushf
push
rolb
cmp
in
mov
mov
add
shrl
push
shlb
das
loop
push
gs
mov
loope
push
lock
sub
sahf
inc
dec
cltd
addr16
popf
sub
fwait
and
push
shr
fisubrs
cmp
add
xchg
popf
int
mov
rol
jnp
xchg
popa
or
jmp
inc
inc
iret
imul
ja
push
jle
loope
jg
pop
mov
loope
pop
mov
jns
adc
ss
lods
lret
cmpsl
adc
sbb
sbb
data16
push
loope
mov
cltd
lds
lea
xchg
roll
mov
mov
jnp
xchg
mov
movsb
pop
sbb
addb
sbb
sub
loop
push
pusha
cmp
and
lret
stos
imul
push
jp
outsb
inc
je
jb
push
cwtl
ljmp
icebp
in
out
mov
mov
mov
mov
sub
inc
lret
test
sub
cmp
sbb
cmp
clc
pusha
stos
and
lret
fxch
sbb
loopne
subl
mov
cmpsb
jl
pop
dec
fdivs
mov
loopne
mov
test
and
fadds
cmp
fstpt
test
xchg
push
cltd
adcl
push
sub
je
mov
les
add
push
fisubrs
and
mov
xor
pop
fwait
idivl
lahf
movsl
mov
or
and
arpl
mov
pop
push
add
scas
dec
sbb
mov
xchg
test
subb
adc
js
sbb
out
jb
or
data16
hlt
lods
mov
mov
xchg
aaa
repnz
lcall
fcmovne
sub
fnstcw
cld
mov
push
loopne
and
aad
or
arpl
stos
cmp
and
inc
add
or
into
dec
mov
mov
mov
mov
jns
cmpb
cld
jb
lret
aas
push
dec
mov
ss
cmp
aam
mov
xchg
mov
test
pop
insb
mov
push
pop
movsl
shlb
adc
sbb
pop
fld
sub
clc
jno
pop
int3
mov
mov
pop
pop
or
add
fmull
insl
push
sub
pop
push
and
cmpsb
sub
inc
xor
ficoms
je
xor
inc
mov
mov
stos
ds
inc
shrb
push
std
js
mov
pop
pop
push
mov
ret
or
dec
mov
lcall
ljmp
cmp
push
in
out
mov
cmpsb
mov
sti
dec
push
scas
cmc
push
fs
push
jbe
insl
xor
sbb
frstor
jle,pt
mov
pop
into
dec
pop
pop
cmpsl
sub
les
push
dec
jae,pn
scas
movsl
or
fsubrl
mov
in
adc
ja
mov
inc
push
nop
mov
enter
lea
add
enter
mov
push
add
push
or
jmp
popa
sbb
push
push
aas
test
inc
mov
ja
jp
mov
xchg
loope
mov
cld
stos
xchg
aas
out
xchg
shrl
mov
out
in
in
aad
jns
cmpl
add
pop
pop
mov
and
push
mov
jne
xchg
aad
cli
das
xchg
hlt
dec
pop
and
add
pop
xorb
daa
stos
push
dec
test
iret
xchg
jge
fistpll
js
sub
jae
sbb
jb
or
neg
xorl
popa
in
sbb
add
inc
push
insb
in
fistl
pop
fcmove
andl
mov
mov
and
cmc
movsb
mov
ja
jmp
sub
cli
fbstp
insl
sub
jnp
jmp
jg
test
repnz
call
jo
xlat
jecxz
imull
enter
add
dec
nop
aad
cmp
jne
pop
cmp
sbb
adc
pop
subb
pop
cli
xchg
jg
adc
xchg
fs
jnp
ljmp
add
sbb
push
pop
hlt
cmpl
mov
jg
pop
cmp
std
sbb
jg
out
mov
adc
pop
sbbl
lock
pop
icebp
sarl
mov
out
and
aam
test
mov
dec
sti
jecxz
ret
and
out
mov
jl
fcomp
loop
pushf
shll
in
sbb
icebp
push
xchg
push
sbb
mov
mov
fcmovbe
sarl
dec
mov
sti
cmp
xchg
sbb
xorb
outsb
and
fdivrs
xchg
mov
test
sbb
call
mov
xor
mov
pop
dec
and
dec
decb
jg
cli
fcomip
movsl
xchg
mov
int3
jns
ljmp
cmp
sbb
add
jge
aad
outsb
xchg
mov
test
arpl
push
insb
clc
jae
lods
jbe
stc
imul
inc
adc
mov
jle
ss
mov
xchg
cmp
push
push
xchg
sbb
fsub
mov
shlb
xor
or
jg
push
leave
dec
pusha
repnz
push
lret
xlat
lret
push
fdivr
sub
add
and
fsubr
push
pop
jge
inc
dec
xor
orl
fldenv
notb
aad
inc
jbe
or
dec
adc
movsl
cmpsl
stos
adc
add
shr
mov
fimuls
sbb
jae
fildll
sub
adcb
insl
ficomps
fwait
stos
mov
or
fsubrl
and
dec
mov
mov
out
inc
leave
mov
cld
js
imulb
hlt
cmp
lods
fildll
pop
in
fwait
dec
xor
push
inc
xor
pop
leave
add
adc
js
mov
push
cmp
xchg
nop
sbb
mov
pcmpgtb
adc
xlat
repnz
push
inc
loope
in
mov
loope
icebp
test
add
mov
mov
cmp
pop
push
pop
push
in
cmp
xor
xor
xchg
push
setns
fdiv
sub
ret
fnstcw
arpl
faddl
xor
ret
enter
popf
lea
fs
test
leave
mov
sub
shr
inc
push
xor
inc
sub
xchg
mov
jb
fmuls
scas
aad
sti
aas
arpl
cmc
jnp
add
orl
mov
push
cmpl
lods
sub
and
cmp
xor
lea
lods
xor
lods
je
pop
jb
faddl
mov
mov
ret
shufps
dec
je
imul
mov
aam
fcomps
and
aad
sbb
dec
mov
lock
imul
lock
lds
cmp
dec
inc
sbb
xor
adc
dec
fimuls
cmp
js
ret
in
mov
sbb
xor
adc
pop
mov
cmp
in
into
lock
cltd
jecxz
rcrb
testl
mov
loope
jae
scas
mov
or
and
xchg
xchg
pop
sbb
mov
icebp
into
shl
and
fs
stos
fildll
add
dec
jnp
xlat
xchg
fnstenv
add
daa
je
scas
sti
jo
pop
mov
sbb
xchg
test
mov
mov
iret
and
dec
shl
ljmp
pop
xorl
roll
sarb
iret
test
loop
rorb
sbb
mov
mov
stc
xchg
jl
push
scas
adc
popf
jns
in
xlat
lds
idivl
jne
stos
and
push
inc
js
push
cmp
addb
test
es
xor
arpl
adc
repnz
ljmp
push
add
or
push
nop
jle
loope
cwtl
add
aad
cmpsl
jo
adc
jo
mov
test
and
push
into
push
and
aad
iret
adc
mov
sub
xchg
pusha
mov
out
xlat
mov
mov
out
out
mov
cmp
sarl
xchg
call
loop
repnz
sarb
mov
dec
mov
sbb
xor
jns
push
mov
outsl
pusha
gs
hlt
xchg
out
cmpl
js
lret
push
jp
and
cmc
daa
in
bound
cmc
push
cmp
ds
or
std
push
mov
push
cwtl
push
mov
dec
jb
cmp
fs
imul
lods
hlt
std
inc
shlb
mov
ja
mov
mov
xchg
stc
loopne
dec
leave
data16
dec
fdivr
cltd
pop
adc
xchg
dec
dec
das
shl
loope
lahf
daa
int
repnz
out
clc
adcl
popa
adc
sbb
push
ja
mov
jbe
xchg
jb
xchg
jge
and
mov
jnp
mov
adc
clc
or
ljmp
ss
push
pop
and
and
push
cmp
loop
lret
mov
insb
test
stos
lods
fcmovnb
cmc
test
sbb
lds
jo
mov
movsb
and
addr16
outsl
int
push
mov
fbld
mov
test
add
or
jns
jne
scas
and
jl
sbb
iret
arpl
test
dec
fdiv
fsubrs
or
xchg
pop
mov
out
repz
push
adc
pop
sbb
mov
mov
pop
sbb
and
sbb
nop
xchg
push
mov
jmp
and
dec
imul
push
aad
mov
dec
es
mov
rcrl
ret
hlt
jmp
addr16
sub
mov
inc
sbb
pop
mov
dec
mov
test
lea
pop
sbb
add
stos
jnp
daa
call
jmp
in
fidivrs
mov
add
cmc
nop
shlb
add
and
fnsave
mov
cld
pusha
int
and
mov
in
add
push
jp
mov
out
addr16
xor
inc
sti
testb
cmp
mov
loopne
pop
insb
inc
mov
in
not
hlt
mov
mov
add
or
addr16
and
ljmp
cmp
push
outsl
xchg
scas
dec
fiaddl
mov
in
pop
repnz
jo
rcrb
mov
test
int3
adc
fildll
cmp
mov
test
stos
xchg
lds
xchg
pusha
repz
sub
cmc
je
mov
aaa
or
hlt
imul
adc
jp
lret
adc
neg
ficoms
lods
call
mov
xor
and
arpl
scas
mov
stos
jno
enter
loop
pop
test
sahf
pop
add
inc
sbb
stos
push
xor
mov
repnz
jbe
dec
mov
fimuls
cwtl
test
jmp
and
cwtl
push
dec
pop
daa
test
outsb
dec
lods
js
jno
lahf
push
movsb
hlt
mov
out
ss
sbb
call
subb
and
int
int
adc
jg
xchg
mov
ficoml
push
jp
cmc
cmp
and
mov
inc
xor
cmpsl
pop
in
xor
sbb
xchg
cmp
icebp
dec
xchg
dec
inc
adc
imul
jge
push
movsb
mov
cmp
sahf
hlt
xchg
sbb
jb
rcrb
jmp
pushf
xchg
int3
aas
sbb
sbb
jg
xor
cmpsl
lcall
and
push
shrl
pop
stos
mov
hlt
sbb
jge
pushf
hlt
fs
mov
mov
loope
xlat
xchg
push
lea
punpckhdq
mov
out
pushf
stos
push
fistl
jmp
xor
repnz
fiadds
xor
push
lods
mov
loopne
loope
test
push
int
rorl
loop
mov
dec
iret
aad
jge
out
ljmp
dec
jge
inc
and
pop
inc
nop
stc
popa
inc
fisubl
jl
push
std
outsb
push
push
out
sbb
lods
cli
and
daa
pop
ret
addr16
cmpsb
call
ror
daa
aas
in
repnz
sbb
popf
mov
xchg
inc
mov
jge
popf
pop
add
aas
imul
fmul
jg
les
cmp
subb
fwait
cmp
jge
rcr
jmp
loopne
gs
roll
loopne
fists
shrb
and
mov
aaa
mov
mov
xor
mov
int3
sbb
popa
ja
mov
dec
aam
push
nop
rorl
repz
add
dec
movsb
das
jo
mov
sub
loope
sub
subl
push
in
addr16
sub
das
mov
enterw
cmc
loop
hlt
sub
mov
xchg
arpl
and
mov
dec
test
sub
mov
jnp
movsl
ds
pop
inc
cmp
imul
fldcw
stos
rclb
inc
in
and
mov
shlb
push
out
sub
out
adc
push
dec
jne
mov
testl
add
adcb
xor
pusha
rcll
dec
or
xor
fiaddl
mov
jp
jp
nop
push
push
sbb
cmp
sub
sub
push
in
jnp
clc
in
pop
es
cmp
xor
dec
in
pop
stos
pop
insl
fildll
jno
sti
sbb
mov
jno
xchg
cltd
jo
sti
popf
andl
hlt
mov
jae
dec
int3
jae
mov
push
add
in
sbb
lahf
xlat
push
mov
repnz
dec
or
push
pushf
inc
xchg
jno
mov
out
mov
andb
ja
push
cmpb
jbe
es
dec
mov
dec
mov
in
adc
jmp
adc
testb
jns
mov
inc
out
stos
and
or
pop
in
fs
cmp
imul
pop
rcl
cmp
out
sbb
inc
mov
clc
addr16
pop
inc
mov
xor
mov
call
rcl
jmp
ficomps
mov
push
mov
test
aaa
dec
arpl
fwait
push
cmp
loop
fstl
out
dec
adc
and
dec
sbb
and
addr16
imul
jge
bound
inc
pop
cmp
bnd
clc
nopl
or
xlat
mov
fcoms
stos
jo
fcompl
mov
imul
aam
pcmpgtd
dec
jno
enter
les
xor
sahf
push
insb
jae
stc
lods
sti
sub
fnstenv
in
mov
mov
imull
pushf
and
daa
movsl
ds
test
daa
imul
xor
repz
pushf
pop
mov
lcall
xor
xor
ficoml
stos
add
mov
fcmovne
fcoml
and
movsb
cmp
mov
jle
adc
jns
aaa
orl
es
inc
pop
data16
lret
add
daa
dec
inc
jne
inc
push
inc
lret
adc
cmp
mov
push
out
jb
dec
and
movsb
mov
loop
scas
int3
inc
and
mov
loope
pop
cli
das
loopne
in
icebp
jg
jno
int3
push
mov
outsb
loop
jb
xlat
mov
mov
mov
loope
stos
pop
test
mov
mov
dec
mov
pop
cld
shll
push
jl
jae
sbb
and
sub
push
sbb
cmpb
lea
sbb
jno
aad
in
mov
mov
cmp
out
int
jg
divb
and
push
xlat
aaa
or
mov
inc
cmp
adc
stos
sub
mov
and
cli
loop
cltd
push
sbb
inc
push
sub
movb
and
jecxz
fnstcw
cmp
stc
outsl
mov
pop
dec
cwtl
or
ss
lea
mov
jge
int3
shll
mov
stos
data16
dec
add
out
cltd
cmp
icebp
cmpsl
inc
pop
in
and
addb
in
jb
xchg
movsb
cmc
test
jecxz
imul
in
mov
sub
cmp
data16
scas
xchg
sub
std
cmp
scas
sbb
pop
adc
in
dec
adc
lret
pusha
les
push
ja
sub
lods
rcrb
aad
inc
adc
mov
mov
rorl
sahf
aaa
nop
outsl
lret
shr
mov
mov
loopne
lock
movsb
mov
push
and
clc
loope
sbb
nopl
enter
xchg
cltd
in
popa
dec
jmp
cli
cmp
js
mov
push
mov
idiv
test
je
pop
call
inc
sbb
pop
jno
bnd
inc
xor
sbb
rcrl
repz
mov
inc
mov
cmp
add
mov
jns
testb
inc
iret
and
icebp
jns
ja
sbb
in
jge
mov
scas
and
leave
push
adc
arpl
mov
dec
in
cmp
add
scas
or
ret
push
fidivl
xor
inc
aas
cld
hlt
dec
pushf
add
lock
scas
je
jp
pop
jp
mov
sbb
repnz
cltd
push
sbb
jne
repnz
fildll
add
jg
pop
xchg
lret
jae
mov
testl
dec
mov
sbb
xchg
movsb
and
imul
ja
pop
mov
or
pop
cmpsl
loope
clc
shrb
das
pop
test
jne
fistpl
imul
sbb
in
mov
jl
add
or
negl
fisubl
fcoms
pop
sub
fstpl
fidivs
dec
hlt
je
lcall
repnz
loope
mov
sbb
pushf
push
xchg
out
vaddpd
lds
sub
dec
fsubs
std
fists
scas
lea
or
sub
adc
sbb
ret
shl
mov
add
sub
mov
out
sbb
inc
jne
ss
push
fmuls
and
imull
mov
add
or
inc
rcr
and
inc
in
mov
sub
movsb
cmp
fstp
dec
cmp
inc
cltd
ds
xchg
mov
testb
mov
stos
cs
arpl
mov
ss
clc
adc
sub
test
out
das
pop
mov
jb
push
int3
xchg
xor
mov
lret
pop
mov
leave
mov
into
adc
xchg
jnp
adc
icebp
out
outsl
cmpsb
scas
xchg
adc
mov
cmc
lret
jb
adc
dec
sub
bound
rcl
mov
sti
adc
insl
les
andb
jb
xchg
dec
xchg
lahf
aas
xor
xchg
fwait
xor
enter
ljmp
test
jecxz
jp
pop
jo
sub
xor
imul
xchg
jle
lret
neg
or
cmpsl
popa
jg
add
shl
int3
pop
outsl
in
xor
fdivs
push
sub
andl
mov
jns
mov
stos
pop
or
popa
push
add
push
xchg
pop
mov
dec
cmp
and
and
ja
fcoml
or
test
xchg
js
dec
xchg
cmpb
pop
es
adc
call
popfw
clc
les
adc
mov
sbbl
stc
call
mov
scas
cltd
pop
mov
mov
lods
mov
mov
jmp
in
fwait
hlt
jl
pop
push
inc
lods
pop
mov
in
and
shll
push
das
sti
lods
movsb
jne
stc
cwtl
xchg
pop
sbb
jae
mov
repz
xchg
jo
sub
add
scas
push
push
jmp
out
pushf
je
gs
outsb
aam
xor
outsl
out
inc
cwtl
push
jg
sub
aas
xchg
pop
cwtl
sbb
xchg
gs
bnd
jge
cmc
in
mov
mov
pmulhw
je
std
fists
pop
cmp
and
loope
push
mov
pop
lods
push
rcrb
inc
inc
daa
pop
add
inc
cs
dec
lods
int3
sbb
test
jno
mov
and
mov
inc
mov
int3
shlb
ror
or
in
cmp
sbb
mov
aas
ds
sub
and
xchg
or
push
sub
jns
sbb
and
imul
pop
cs
lret
addb
pop
pusha
jno
sub
in
popa
out
inc
xchg
loope
cwtl
mov
daa
jmp
movsl
mov
xchg
xchg
inc
add
hlt
xor
pop
or
xchg
dec
lcall
and
out
movsl
movb
cmp
cmp
fwait
jle
andb
and
and
ret
stos
push
sbb
cmp
jns
inc
jg
loop
imul
adcb
ret
dec
mov
lret
lea
jae
hlt
in
sub
and
fdiv
addr16
sub
iret
fbstp
pop
movd
cli
ljmp
sbb
or
enter
and
call
in
and
push
jle
sub
rcrb
or
mov
push
push
pop
cs
cmpsb
data16
sbb
push
dec
dec
and
mov
das
mov
or
scas
inc
dec
xchg
aad
test
in
mov
cltd
cmp
sbbb
rorl
aad
push
xchg
in
movl
adc
push
dec
mov
mov
xor
stos
int3
ja
jecxz
inc
lods
ret
jle
ljmp
lods
add
stc
aad
outsb
inc
jmp
out
or
out
lock
mov
jbe
pop
dec
and
lea
fcoms
stos
adc
add
cltd
insb
pop
mov
xchg
shl
push
aam
int3
add
mov
popa
daa
fiaddl
stc
push
std
jp
lods
cmp
sub
push
aaa
scas
pop
cld
in
out
xchg
sbb
rdpmc
pop
fcmovb
pop
push
ficomps
inc
dec
jnp
inc
and
pop
out
pushf
mulb
push
stc
adc
sbb
fldt
pop
test
mov
mov
iret
sbb
push
subl
mov
jae
idivb
mov
iret
orl
dec
bound
mov
cmp
mov
mov
mov
mov
cli
jne
push
push
mov
int3
popa
pop
nop
rcll
mov
aam
cmc
and
loop
fdivp
cmpsl
sbb
push
xchg
lahf
lret
dec
push
sbb
cmpsb
fdivs
pop
jb
subb
fs
call
hlt
dec
cmp
test
cmpsb
ret
cmpsb
push
cmpsl
cmc
adc
jno
sahf
sub
repnz
jl
mov
pop
cld
les
addr16
in
jl
mov
inc
jmp
mov
xchg
fistps
dec
mov
and
adc
push
int3
and
xchg
and
aas
mov
cmp
enter
pushf
shl
dec
cld
sbb
mov
inc
sub
stos
pop
jecxz
sbb
pop
in
imulb
ret
ret
cmp
mov
or
out
xor
popf
and
xor
mov
pop
jg
inc
dec
mov
int
hlt
or
xchg
add
jl
or
fldl2e
jg
inc
movsl
push
lahf
jae
pop
xchg
sub
pushf
jae
clc
xlat
data16
sbb
dec
je
sarl
mov
repz
mov
daa
push
xor
hlt
mov
mov
hlt
inc
xor
ficomps
pop
movsl
xchg
cmp
dec
incb
int
movsl
movsb
loop
jae
aam
test
lret
pop
adc
out
mov
loopne
cs
fistl
or
sbb
jb
inc
adc
jge
dec
sbb
push
shrl
nop
mov
cmp
push
jmp
and
lock
pop
fdecstp
push
imull
pop
out
notl
xor
inc
jb
mov
out
mov
sbb
rclb
jne
jp
call
mov
pop
ja
arpl
cmp
dec
jge
mov
repz
or
scas
out
dec
push
ficoms
push
fcompl
cld
mov
dec
mov
rclb
xchg
sub
lods
repz
and
dec
hlt
adc
loop
les
mov
int
scas
test
cmc
lahf
inc
dec
mov
push
icebp
sub
fadds
fdivrs
mov
xor
cmpsl
mov
in
lret
psllw
cmp
add
mov
clc
gs
sub
test
cld
dec
stos
or
prefetch
or
stos
pop
inc
push
flds
push
cs
cmc
insb
inc
into
mov
daa
cld
fldt
adcb
xor
mov
adc
or
or
mov
sub
or
push
cwtl
or
aam
jne
push
sbb
xlat
or
push
push
fistps
enter
pop
jmp
dec
pop
jnp
outsb
daa
mov
push
into
iret
shll
popa
fs
test
adc
stc
mov
ret
push
ljmp
sub
or
aad
in
adcb
nop
sbb
add
fld
jbe
sbb
jno
aam
inc
mov
mov
cmp
sbb
adc
pop
shrl
lret
and
mov
jl
sbb
add
inc
pop
jmp
fidivrs
add
mov
pop
fmuls
mov
add
push
lods
insl
ss
xor
xchg
ljmp
ds
and
mov
lret
shr
sbb
fidivrs
cmpsb
pop
cmp
stos
js
sbb
adc
inc
repnz
dec
cwtl
jg
xchg
popa
inc
scas
push
xchg
je
lret
mov
cld
push
scas
out
cmp
mov
or
pop
sbb
jno
mov
imul
sbb
sbb
and
cmpsb
stc
fisubrs
push
pusha
mov
xchg
in
adc
add
pop
sbb
imul
xchg
je
and
adc
mov
push
push
jbe
push
test
aad
test
cld
sub
insl
jae
lea
xchg
dec
iret
in
lods
idivl
xchg
sahf
and
add
pop
xchg
adcl
mov
xchg
out
test
xorl
and
or
xor
fwait
xchg
stos
out
popa
mov
sub
mov
or
mov
or
xor
filds
je
inc
ss
rolb
iret
cmp
dec
sub
andb
inc
bound
jae
push
out
outsb
jae
push
stc
movsb
icebp
jp
fidivrl
scas
sbb
dec
aas
jp
movsl
jl
lcall
lret
push
sbb
cmp
push
push
nop
arpl
mov
sahf
mov
jg
sub
leave
roll
js
push
push
iret
sbb
sti
stc
fnstcw
sbb
jne
add
xchg
push
inc
pop
and
adc
xor
cmpl
sbb
mov
outsl
iret
inc
jmp
dec
ljmp
dec
mov
icebp
and
or
stc
cld
cmpsl
xor
loopne
and
jle
adc
pushf
cmp
dec
pop
enter
imul
xchg
and
lret
pop
mulb
cmc
cmp
in
add
adc
stc
xor
mov
iret
movsl
fidivrl
push
cmpsb
testl
movsb
dec
inc
cmp
aaa
pop
adc
sbb
mov
movsl
in
and
mov
data16
aaa
cvtpi2ps
mov
sbb
mov
and
mov
inc
push
and
add
pop
pop
or
cmc
inc
movsl
sbb
pop
sbb
mov
and
sbb
fwait
xchg
xlat
dec
jae
hlt
adc
imul
jnp
and
rol
fucomi
scas
lock
xor
cwtl
out
and
push
pop
mov
or
bound
dec
xchg
dec
das
cld
push
lahf
cwtl
push
mov
shrb
stos
sbb
subb
sub
ds
jns
fisttpl
mov
lds
scas
sbb
sub
push
sub
adc
jecxz
mov
aaa
into
lret
js
fcmovnbe
adc
cmpsl
jns
popa
orb
mov
push
ss
mov
out
imul
fucomip
jbe
mov
or
mov
imul
enter
stos
adc
dec
push
mov
lcall
pop
sbb
cltd
pop
push
add
pop
push
lods
popa
ret
and
push
add
and
fbld
sub
lahf
iret
mov
in
xchg
std
xor
xor
ja
lcall
lods
rclb
push
xchg
or
insb
or
int3
jns
adc
scas
ljmp
push
out
sub
icebp
pop
inc
dec
paddsw
adc
xchg
addr16
push
push
or
push
cmp
and
jmp
test
sbb
movsb
sub
or
xor
push
stc
movsb
pop
jle
test
mov
hlt
sbb
dec
pop
in
adc
mov
ffree
pop
cmp
jbe
inc
mov
xchg
or
inc
xchg
mov
aaa
cmpsl
cld
push
pop
pop
push
in
das
dec
sarl
push
rcl
mov
push
movsb
adcl
mov
les
adcl
mov
shrl
int3
sbb
out
nop
or
ret
cmc
mull
call
pop
imul
repz
lods
mov
out
sub
cmpsb
mov
lods
loop
sbb
jae
inc
sub
xor
in
cmp
int3
sub
push
pusha
lret
mov
rorb
xchg
out
ret
out
jle
insl
popa
mov
in
into
mov
pop
add
movhps
out
cld
mov
push
pushf
mov
movsb
rol
lods
add
adc
sahf
mov
dec
lods
push
test
and
insl
adc
rcrb
jmp
xchg
inc
cmp
fnsave
scas
ret
add
addr16
sbb
or
es
sub
sahf
ret
and
mov
outsl
push
cld
lods
lcall
fldl
sub
cwtl
sbb
loope
int3
outsb
addb
jge
jnp
adc
fsubr
xlat
je
aam
shr
sbbl
pop
call
stos
dec
stc
mov
idivb
mov
ret
adc
xchg
xchg
xchg
sbb
sub
movsl
fists
push
mov
dec
pop
push
dec
pop
pop
mov
sub
add
adc
inc
pop
push
mov
fadds
pop
movsb
fs
sbb
out
xorl
sbb
and
out
and
pop
dec
pop
ret
xor
pop
loopne
fs
lods
push
and
adc
jle
xor
sbb
in
mov
fisubrl
cmpsb
rclb
fimull
js
sbb
mov
mov
dec
aad
aas
arpl
shr
xor
xchg
les
add
push
fdivs
shll
add
mov
movsl
xchg
test
mov
lock
outsl
lcall
xor
outsl
dec
jo
dec
xor
cmp
push
scas
std
cmp
mov
xchg
pop
repnz
adc
test
fs
and
mov
inc
pusha
jg
outsl
push
int
les
movsl
clc
cmp
adc
mov
in
mov
daa
cmp
push
inc
pop
in
mov
mov
stc
fs
inc
cmp
data16
sbb
or
pop
pusha
xor
add
pop
nop
bound
jl
xchg
xor
mov
mov
mov
push
pushf
test
jge
adc
and
jl
inc
xchg
call
popa
into
cmp
push
pop
ds
js
and
jb
test
adc
test
pop
dec
ret
mov
push
outsb
js
es
jb
dec
or
add
inc
ss
mov
add
adc
mov
xchg
mov
add
ficoml
push
outsl
roll
and
xchg
and
xor
insb
in
push
out
pop
adc
loop
jl
ret
insl
cmc
mov
add
adc
inc
fsub
xor
loope
test
xchg
and
push
jns
pop
int3
pop
int
outsl
std
incl
and
or
sbb
cmp
inc
out
jge
aas
push
xor
sub
addr16
mov
scas
mov
jns
cmp
and
inc
ret
out
fcomip
pop
fucomp
push
add
push
cmp
or
pop
adc
push
aas
fistl
ds
negb
pusha
add
pop
sub
imul
mov
jbe
jo
loopne
iret
repnz
shll
or
into
js
mov
rcrl
clc
fisubrl
add
bts
inc
push
cltd
test
sub
in
out
imul
inc
push
mov
in
mov
sub
mov
or
mov
mov
jbe
pop
stc
leave
mov
in
xchg
inc
sub
xchg
orl
or
sub
adc
popl
add
xchg
in
hlt
icebp
jmp
andl
stc
insl
or
fimuls
xchg
pushf
fistpl
fs
xor
fsubs
inc
jne
sub
mov
repz
out
inc
in
lret
incb
xchg
hlt
and
xlat
loope
or
mov
sbbb
pop
addr16
cmpsl
aam
dec
gs
rcrl
arpl
rorb
fidivrl
push
outsb
xchg
pop
xlat
cmc
adc
pop
mov
xor
and
add
push
sub
sti
xchg
scas
inc
nop
inc
inc
test
sub
add
dec
add
jl
inc
pop
aas
outsl
rcl
inc
ret
lahf
lahf
stos
jle
xchg
test
adc
sub
sbb
inc
pop
inc
test
dec
orb
imul
pop
insl
sub
aad
or
andb
jne
das
mov
add
xor
push
xchg
rcr
call
push
adc
xor
sbb
cmpsb
lock
lcall
inc
sbb
ss
push
cmp
pusha
cmp
aas
nop
pop
adc
jb
cld
and
dec
xor
js
data16
inc
jg
xorps
mov
sub
pop
or
daa
dec
sub
mov
xlat
ds
loop
test
rorl
xchg
aas
rolb
outsb
dec
sbb
add
cmp
cmp
mov
ss
arpl
cltd
sub
es
cmpb
ss
sub
push
stos
lods
lods
fstpt
jo
jle
fidivrl
iret
push
push
inc
lahf
xor
in
or
mov
pop
leave
sarb
mov
dec
movsl
data16
imul
xchg
call
add
mov
mov
cli
leave
cmp
jae
rep
add
das
test
sar
mov
mov
leave
out
mov
jp
ljmp
cmp
test
lret
imul
mov
lods
mov
lea
jl
mov
lods
inc
adc
fisubl
push
fimull
inc
adc
dec
add
jle
pushf
arpl
mov
sub
clc
or
add
xor
jg
mov
aad
mov
movl
sti
cmp
pop
sbb
push
push
out
push
pop
xchg
adc
mov
mov
insb
cmp
pop
cmp
or
fs
dec
jl
in
es
test
lret
push
daa
in
mov
fcmovbe
sub
adc
push
aam
inc
stc
inc
xlat
repz
sub
and
push
mov
fimuls
fnstenv
xchg
cmc
insb
test
sbb
gs
xchg
pop
aam
mov
mov
pop
push
sbb
fidivrs
and
cltd
lods
cltd
push
js
dec
std
subl
iret
inc
adc
lods
push
push
pop
xor
xchg
mov
ficoml
hlt
xchg
mov
nop
popa
or
inc
ret
lahf
inc
movsb
into
push
js
jo
cmp
ljmp
mov
imul
aaa
jns
into
jmp
sti
cmp
dec
in
flds
arpl
dec
push
mov
or
sbb
nopl
lcall
call
leave
cmc
sbb
cmp
cwtl
inc
pop
and
jge
jne
xor
mov
or
xchg
lods
sbb
jno
inc
rolb
scas
loop
icebp
sbb
hlt
adc
call
mov
fadd
jne
les
dec
cmp
loope
call
push
dec
dec
pusha
iret
scas
or
pop
push
fstpl
push
sub
jg
sbb
lods
call
dec
fstpt
ds
repnz
mov
scas
inc
je
outsl
mov
loopne
mov
pop
xchg
adc
int
xlat
les
xchg
enter
inc
xorb
pop
leave
in
add
push
pop
pop
daa
or
js
bound
leave
imul
xchg
inc
push
pusha
and
mov
inc
pop
dec
jae
xlat
sbb
or
fs
leave
push
lret
push
sbbb
sub
out
pop
stos
jno
sbb
and
cmpsb
jmp
and
sub
insb
orb
lods
fsub
jo
inc
repz
sub
and
inc
mov
orb
outsl
xchg
repz
add
inc
jmp
rcrl
push
and
add
js
sub
or
stos
lret
xchg
jle
adc
out
arpl
clc
pop
or
add
or
add
decl
sbb
push
inc
lahf
mov
jge
lods
addl
in
cwtl
faddl
sti
lahf
clc
xor
xor
push
xor
pop
adc
pop
jns
jae
mov
pop
cmp
cmp
cmpsl
xor
push
lcall
stos
adc
dec
sti
sub
or
stc
push
mov
mov
subb
jmp
add
pop
sahf
and
adc
mov
int3
xor
out
xchg
hlt
sbb
mov
lea
subl
js
sub
pop
lret
icebp
push
outsl
jbe
jns
cmc
mov
mov
cmp
mov
jae
sbb
or
imul
push
and
xor
push
jne
pop
sub
imull
dec
sub
movsb
fstl
addb
cmpsb
hlt
pop
xchg
xchg
call
mov
mov
xchg
aam
faddl
popf
mov
mov
xor
mov
outsl
test
je
leave
mov
dec
xchg
pop
dec
add
inc
ss
lret
dec
out
pop
pop
cmp
adc
sbb
xchg
add
and
mov
sub
jmp
mov
add
sbb
movntq
ljmp
lods
popa
adc
jno
cmp
jecxz
je
lcall
in
cld
cli
add
pop
mov
dec
test
push
lret
addl
imul
xchg
lret
ds
test
repnz
call
cmp
push
xor
mov
rclb
push
inc
add
jecxz
add
xchg
dec
jmp
je
ds
lods
cmp
add
negl
jge
cmp
cli
push
daa
mov
hlt
fcom
incb
daa
xor
call
pop
mov
out
and
xor
or
lods
das
dec
lods
std
sub
scas
dec
cmp
sbb
fst
push
fistps
mov
lods
imul
out
insl
ret
add
xor
leave
mov
dec
dec
inc
cmpb
adc
mov
out
frstor
cmp
add
scas
das
xchg
push
imul
nop
cltd
mov
jl
adc
xor
dec
ljmp
and
mov
or
stc
lea
pushf
cmpsb
xchg
imul
add
sti
roll
inc
and
test
bound
aaa
leave
and
loop
adc
stos
dec
inc
mov
adc
out
mov
or
int3
pop
push
pop
jl
add
orb
mov
divb
cld
ds
lods
cld
and
andb
pop
sbb
pop
icebp
adc
adc
lret
mov
test
ret
pop
jns
mov
sbb
xlat
lret
cmpsb
mov
imul
add
xchg
mov
cmc
pop
add
into
fbstp
mov
jle
aam
movsl
mov
pop
cmpsb
cmpsb
imul
subb
scas
and
pop
enter
add
stos
add
sti
push
rcrl
in
or
rcrl
dec
pop
or
mov
movsb
mov
xchg
xor
push
fisttps
scas
iret
in
insl
sub
aas
stc
xchg
sahf
mov
mov
xor
mov
and
stos
sbb
or
inc
sbb
fdivs
pop
leave
mov
dec
repz
fists
push
aam
dec
inc
pop
mov
in
xchg
popf
xchg
push
ret
pop
js
pop
int
aaa
cbtw
movsl
pop
mov
pop
xor
add
xor
pop
mov
xor
pop
pop
loope
mov
xchg
cmp
outsl
lock
mov
xchg
or
movsb
xchg
jl
jae
xchg
inc
add
inc
stos
sti
sti
pop
jge
inc
in
sbb
dec
xchg
nop
and
mov
test
shll
mov
outsl
pushf
jnp
dec
push
scas
int3
inc
adc
inc
arpl
mov
push
jne
or
dec
dec
mov
and
sbb
es
lea
dec
xchg
sub
inc
inc
adc
pop
orb
xor
jg
ja
sub
inc
movsl
jae
fldenv
in
pop
inc
sarb
jp
xor
lea
mov
lock
jecxz
scas
int
sub
push
sbb
xor
out
bound
mov
xchg
clc
nop
icebp
dec
hlt
fcmovne
aam
ret
adc
in
pop
add
xlat
xchg
xor
shrl
lods
mov
dec
adc
dec
data16
jo
stos
sbb
pop
lds
cmpsb
repz
ja
test
inc
ret
xlat
cs
std
or
push
inc
fsubr
adc
mov
imul
inc
cmc
ss
dec
fnstsw
jge
dec
js
imul
imul
dec
jo
fstp
mov
leave
mov
add
xor
and
ja
mov
movb
push
xlat
cmpsb
sub
mov
xchg
jae
push
test
dec
push
data16
jmp
xchg
shll
pop
xchg
int
pop
cmp
ss
les
sub
jo
xlat
test
test
daa
popa
notb
stc
scas
sbb
inc
mov
push
out
pop
pop
notl
std
stos
ficompl
xchg
dec
jbe
test
cs
imul
push
sub
pop
int3
push
shlb
cltd
leave
cs
fdivl
pop
rcr
stc
das
int3
mov
loop
cli
outsb
cs
clc
repz
movsb
rcrb
arpl
mov
sub
mov
fstl
insb
sbb
lds
push
xor
sbbb
rolb
and
mov
add
xrelease
jp
insb
pop
mov
inc
pop
insb
adc
ret
les
ret
inc
and
test
xchg
lock
or
and
fcoms
aaa
mov
jp
cmp
sub
aad
inc
ret
ret
jnp
jl
test
mov
test
clc
cli
and
lret
push
int3
subb
xor
pop
daa
and
mov
ds
jne
jp
js
fdivrl
push
je
loope
std
gs
fwait
cli
ficoml
icebp
popa
aaa
inc
mov
inc
daa
in
sti
add
xchg
xchg
out
sbb
pop
and
std
js
lods
int3
mov
cltd
rcr
sub
xor
or
scas
jmp
das
into
mov
pop
dec
in
xor
stos
jg
sbb
testl
mov
sbb
test
es
gs
and
mov
fisttps
mov
fisttps
xor
and
xor
std
test
repnz
sbb
sbb
shrl
mov
ljmp
testl
pop
pop
dec
or
lret
jno
outsl
in
lods
jle
cmp
les
sarl
push
aam
cmpsl
xchg
adc
notb
push
cmp
sbb
mov
sub
dec
mov
sub
aam
fsubl
jb
aad
xor
and
ds
and
out
imul
arpl
rorl
je
pop
xor
add
push
es
and
nop
xchg
pop
mov
jmp
push
sahf
xor
xchg
xor
and
out
mov
subl
ja
mov
insb
cmp
jns
push
cmpsl
add
dec
jns
jecxz
add
test
clc
loope
imul
pop
rcr
scas
cmp
cmc
daa
lcall
clc
lods
adcl
sub
push
outsl
mulb
dec
mov
push
pop
dec
inc
cltd
push
mov
aam
pop
mov
pusha
xchg
add
ret
icebp
mov
push
rorb
cmc
mov
fs
mov
movsb
movsl
daa
int3
fs
and
hlt
jle
stos
jmp
dec
cwtl
mov
cmp
and
and
into
insb
out
shlb
insl
ret
mov
scas
dec
mov
stos
insl
sahf
and
in
jge
cmpl
dec
ss
mov
pushf
add
and
push
and
aaa
insb
jp
mov
xor
mov
in
aad
and
xchg
cs
add
adc
push
sub
push
pop
xor
stc
jl
fs
sbb
bound
clc
or
mov
pop
es
jg
pop
ret
jl
fcomi
lret
adc
xor
movl
clc
hlt
aad
jecxz
outsb
pop
test
lret
cltd
frstor
out
rol
mov
dec
sub
mov
or
mov
clc
or
pushf
mov
scas
pop
lret
ror
mov
cmp
pusha
jecxz
fisubl
stos
lds
push
popa
mov
cs
in
cltd
mov
int3
inc
cmp
sub
lods
adc
mov
push
ret
add
xor
dec
js
shll
mov
pusha
inc
pop
aas
in
lcall
int
mov
push
in
push
lods
aas
negl
push
int
sti
push
icebp
sub
int
movl
shlb
inc
in
push
scas
jae
outsl
mov
or
inc
dec
pusha
push
pop
inc
push
enter
std
mov
mov
adc
pop
xchg
cmp
pop
xchg
xlat
xchg
scas
pop
pop
ret
cli
pop
or
dec
push
sbb
inc
push
ret
mov
ret
add
mov
adc
sub
scas
or
outsb
popa
ja
cmp
pop
fmull
aas
sub
enter
imul
add
xor
mov
outsb
pop
push
xchg
pop
mov
mov
or
icebp
xchg
fbld
or
sub
mov
ja
sbb
mov
pop
ljmp
mov
xchg
xorb
imul
mov
adc
mov
cld
pushf
popa
pop
js
cmp
popa
sub
test
rcrb
mov
sbb
pop
xor
mov
outsb
mov
jg
mov
dec
mov
jno
loopne
popa
aas
add
inc
fs
xchg
mov
imul
sbb
add
mov
clc
sub
pop
mov
cli
cltd
shl
and
nop
jp
xchg
and
iret
out
mov
fistpll
scas
jg
daa
or
mov
or
pop
shll
sub
test
jo
je
fs
mov
mov
xchg
lock
mov
mov
mov
add
xor
adc
cltd
or
test
dec
sbb
shlb
cli
test
aam
aaa
aaa
in
into
aas
icebp
mov
fmuls
adc
cmp
mov
loop
aad
loope
scas
sbb
and
jecxz
inc
bnd
add
lret
btc
inc
stos
push
or
and
sbb
push
stos
ja
pop
call
mov
sbb
sbb
cmp
push
outsl
nop
adc
push
std
mov
fidivrs
xor
xchg
ljmp
inc
repz
and
inc
pusha
xchg
jp
sti
cli
shrb
add
mov
test
inc
and
insl
add
cld
mov
or
aaa
mul
lcall
add
das
cmp
xchg
and
jns
test
jecxz
pop
das
pushf
pop
js
scas
rcrb
or
repz
roll
movups
pop
insl
ss
sub
pushf
ljmp
pop
addr16
mov
cmpb
mov
pop
repz
js
cmp
stos
lret
out
xor
call
sub
insb
push
sub
xchg
mov
mov
cmp
hlt
xchg
mov
imulb
aaa
jb
sbb
xor
ficomps
aas
das
nop
push
stos
out
out
push
in
andl
das
test
daa
int3
in
popf
inc
xlat
out
push
dec
clc
gs
shll
nop
mov
adc
fs
cltd
push
imul
dec
or
je
in
or
fsubl
adc
into
inc
out
or
stos
cmp
fldenv
push
or
ret
outsl
adc
push
mov
sbb
dec
enter
inc
mov
add
mov
dec
mov
out
notl
aas
pop
add
cmp
pop
outsl
scas
add
jo
ja
mov
lret
and
jl
inc
addr16
xchg
jb
jns
inc
lret
or
pop
xchg
sbb
mov
in
and
push
jg
arpl
ret
stos
jmp
cmp
lahf
jge
popa
cmpsb
call
push
mov
mov
jne
repz
clc
pop
jnp
jecxz
rcrl
mov
dec
imul
lods
cli
xchg
test
xlat
bound
sub
push
icebp
mov
rdseed
gs
loope
out
je
mov
cmp
les
xchg
popa
lods
dec
ret
mov
jns
jmp
add
jmp
negb
out
fidivrs
sarb
push
mov
mov
cli
and
adc
data16
jb
enter
das
loope
mov
lock
or
cli
push
in
cld
pushf
call
iret
rcr
into
mov
in
xor
lret
mov
jg
mov
add
xor
ret
sahf
jecxz
dec
sub
aad
jp
add
inc
daa
xchg
rcrb
paddusw
xor
fstps
and
out
loopne
mov
xor
and
loopne
cmpsl
xor
inc
test
dec
std
stos
mov
mov
pop
insl
mov
xchg
scas
insl
into
mov
in
sbb
fimuls
cmpsl
add
inc
in
pop
in
mov
rol
add
movb
popa
cmpsl
mov
pushf
lcall
icebp
stc
inc
aad
push
shll
or
nop
add
mov
cwtl
sub
add
loop
xor
or
mov
shlb
or
pop
imul
inc
popa
and
sub
loope
lds
mov
iret
lea
icebp
add
data16
andl
push
lods
sub
fsubrl
das
dec
fimuls
add
add
fs
in
pop
enter
jecxz
lcall
cltd
mov
lahf
enter
cmp
insb
or
xchg
xor
outsl
sbb
int3
mov
push
or
xchg
xor
cli
xor
xor
adc
cli
scas
roll
ds
jnp
shr
aaa
or
inc
jmp
pop
hlt
cmpsl
gs
push
pop
shlb
mov
add
mov
push
jecxz
cmp
andb
push
mov
leave
xorl
mov
add
test
int
dec
rcrb
inc
fnstcw
inc
and
out
mov
lds
je
in
cmp
cmp
mov
dec
js
cmp
xor
push
or
jl
inc
in
pusha
frstor
push
insl
dec
orl
cs
sbb
testb
ja,pt
jp
push
inc
inc
data16
add
sar
ds
rorl
shlb
rcll
lds
ret
mov
inc
rcr
mov
dec
xor
in
cmp
dec
sub
enter
jb
add
xor
mov
mov
sbb
add
push
add
repz
shr
push
bnd
dec
xchg
mov
loop
mov
cli
push
xor
dec
mov
sti
push
lcall
inc
adc
add
idiv
test
fwait
sbb
xor
test
sub
movsl
fbstp
clc
push
test
mov
sbb
sbb
jae
lds
mov
int
icebp
in
mov
sbb
jg
pop
inc
fs
jb
or
sbb
mov
cli
mov
in
or
das
xchg
inc
in
jecxz
jp
jge
xchg
dec
test
loop
sbb
sbb
out
pusha
cmp
and
sub
cwtl
out
cli
imul
jp
js
push
sbbb
push
cmp
fiadds
jb
dec
push
xchg
xor
loopne
outsl
mov
out
clc
sti
mov
push
sbb
inc
xchg
shll
hlt
mov
mov
sub
int
dec
cld
adc
jg
gs
mov
loop
xchg
in
daa
jbe
call
mov
call
mov
inc
mov
push
jnp
xor
sarl
push
call
mov
and
aad
mov
push
xchg
xchg
adc
cwtl
mov
add
lods
sbb
cs
mov
les
xor
arpl
sbb
pusha
in
jo
cmp
add
sbb
inc
dec
dec
ret
and
mov
dec
test
fdivs
ds
cs
lods
mov
int
movsl
mov
jg
clc
add
loopne
inc
in
lock
lahf
add
in
mov
or
xchg
inc
sub
call
repz
push
movsb
movsb
out
cmp
push
inc
jne
add
sub
or
cmp
mov
dec
jg
stc
movsl
ljmp
jno
call
cmpb
xor
ds
insl
sub
addr16
cmc
mov
push
sub
fsubl
and
ds
std
jnp
xchg
and
lods
xchg
inc
lret
repnz
leave
movsb
rorb
cmp
pop
inc
mov
iret
sbb
into
mov
dec
jno
insl
enter
in
lret
int
sub
bound
mov
imul
es
adc
adc
lret
or
pop
inc
cmp
and
fidivl
repnz
in
cs
xchg
aam
dec
or
iret
push
cmp
cmc
push
add
inc
pop
cmp
inc
dec
test
jl
or
push
and
push
pop
aas
jns
sub
sbb
mov
mov
and
ljmp
mov
jecxz
aam
pop
pop
mov
cmp
or
fistps
daa
push
lahf
mov
test
test
imul
inc
adc
ja
sbb
lods
mov
dec
xchg
aad
sub
out
xor
pop
cli
mov
test
sbb
push
push
and
outsb
sub
add
jno
pop
cli
sub
sub
add
push
test
xor
jecxz
add
mov
test
mov
test
add
push
mov
stos
dec
icebp
cmpsb
dec
mov
inc
adc
jbe
xchg
enter
or
daa
cmp
mov
clc
inc
dec
fistps
cpuid
add
cld
fdivrl
add
out
mov
out
pop
das
cmp
aad
xor
fwait
mov
pusha
inc
dec
es
pop
stos
ljmp
rol
test
fbstp
inc
dec
xchg
lret
xchg
sbbl
iret
out
hlt
rclb
ss
test
pop
pop
in
fstps
push
in
clc
loopne
stc
cwtl
adc
repz
lods
mull
rolb
fwait
mov
jecxz
pop
xchg
push
jae
dec
sbb
aaa
out
jp
xor
and
stos
aaa
lds
mov
mov
inc
sbb
std
nop
push
loop
mov
ja
je
pop
das
lods
add
cmp
and
daa
sub
dec
mov
xor
sub
leave
scas
cmp
push
andl
mov
dec
cwtl
cwtl
push
sub
pop
add
out
aam
mov
mov
push
xchg
xchg
sbb
xchg
cltd
lds
inc
loop
sahf
arpl
sub
dec
pop
aaa
xchg
mov
test
vrsqrtps
int3
inc
jb
setno
js
ret
movsl
fimuls
cmp
sbb
scas
clc
xchg
insb
jns
mov
mov
push
fidivs
addr16
mov
xor
in
enter
insb
leave
jl
popa
push
mov
dec
xchg
int3
cmp
jmp
xor
pop
jo
stc
mov
mov
adc
xor
orb
push
bswap
mov
fs
repnz
fsubrs
sub
lds
pop
dec
sub
xor
icebp
mov
xor
mov
sub
dec
push
jae
or
daa
xchg
cmc
pop
pop
fldt
sub
sbb
mov
push
sub
adc
shrb
loopne
jecxz
cltd
rcrl
iret
pop
stos
dec
add
sbb
setno
sti
xor
mov
cmp
sbb
cmp
stos
push
dec
inc
push
pop
jb
pop
cli
int
sbb
xor
jmp
sti
add
mov
push
inc
lcall
xor
adc
mov
mov
cmp
xlat
ss
mov
add
and
push
mov
or
sarl
inc
xchg
xchg
insb
push
rorb
pop
mov
ljmp
xor
mov
fdivr
filds
in
xor
mov
ret
es
dec
ret
sub
pop
rolb
and
in
xor
ret
mov
in
cmovno
jo
sbb
test
sti
hlt
or
jmp
ljmp
push
xchg
out
dec
mov
lret
mov
jge
and
jbe
scas
xchg
push
mov
faddp
imul
sbb
imul
int3
mov
cmp
sarb
dec
inc
xchg
es
ljmp
addb
icebp
sbb
and
nop
aas
mov
sub
sbb
inc
aas
mov
aad
mov
cmpl
icebp
fprem
das
sbb
cmpsb
std
push
jne
test
lahf
lods
bound
xchg
xor
ret
mov
outsb
sbb
mov
mov
insb
pop
ds
fldl
icebp
pop
xchg
scas
enter
int3
pop
mov
inc
in
lcall
lods
arpl
mov
outsl
nop
mov
sub
movsl
shr
movsl
sub
call
pusha
mov
mov
insb
faddl
push
adc
jno
ljmp
mov
gs
add
mov
jne
lock
lret
leave
loop
orb
mov
ja
xchg
push
arpl
call
sbb
and
scas
aad
movsb
mov
push
push
pop
filds
sbb
add
xchg
insb
ds
jnp
xchg
or
and
mov
shrb
into
cld
cld
out
imul
adc
lock
push
cltd
int
pop
or
in
adc
sbb
outsl
cltd
jl
subb
cmp
arpl
scas
test
mov
je
adc
xlat
mov
or
sarb
fsubrs
ljmp
xchg
cltd
sbb
add
mov
push
push
mov
pop
nop
adc
jns
les
popf
mov
in
fdiv
sub
aas
movsb
daa
xchg
mov
inc
push
das
push
push
jne
add
hlt
and
and
std
jb
hlt
xor
add
inc
sub
stos
cmp
shll
xchg
inc
add
cmp
mov
repz
add
mov
push
dec
cmp
xor
adc
jmp
jno
leave
cs
push
mov
fistps
inc
fisubl
pop
int3
imul
and
in
push
lock
dec
dec
jmp
icebp
and
loopne
push
mov
jmp
cwtl
sbb
inc
rcr
ds
sub
push
dec
dec
sbb
push
and
adc
into
jb
imul
in
jg
push
cltd
das
sub
inc
aas
inc
inc
test
mov
nop
jg
jge
dec
insl
iret
shll
je
scas
int3
mov
and
daa
out
test
lret
push
adcl
aam
cmp
dec
jbe
adcl
mov
test
test
mov
add
rol
enter
xchg
adc
cmp
pop
rcrb
push
flds
lods
adc
shl
ja
dec
popl
jmp
mov
in
push
and
pop
jg
push
pop
push
loop
push
mov
lret
roll
or
or
jne
ja
cmp
adc
or
mov
push
lcall
iret
cmp
jg
add
xchg
lcall
test
cmp
leave
iret
fcmovne
loopne
cld
sbb
adc
push
push
or
sbb
cs
jl
repnz
ljmp
mov
mov
or
adc
xchg
out
jae
sahf
cld
imul
push
in
inc
mov
cmc
insb
sbb
lds
inc
arpl
ds
arpl
mov
sahf
jo
mov
popa
pusha
xchg
sub
in
dec
std
lds
adc
cmp
pop
icebp
call
addb
clc
out
jae
gs
cmp
jge
ret
mov
outsl
mov
mov
out
dec
ljmp
cmc
jno
mov
add
lea
sub
stc
and
cld
ror
add
add
add
add
add
push
cli
into
xor
pop
dec
icebp
xchg
fwait
push
pusha
xchg
scas
outsl
add
xchg
sub
addl
sbb
and
fnstsw
add
jmp
fwait
test
in
and
test
adc
stos
xchg
ret
or
adc
inc
cmp
push
arpl
pop
xchg
mov
movsb
jns
pop
mov
inc
pusha
xchg
push
adc
clc
push
mov
add
sub
imul
popa
cwtl
mov
repz
out
mov
pusha
clc
ret
lea
and
outsl
sub
ja
outsl
push
pop
sub
out
pop
sub
lret
push
push
sbb
lods
aaa
jl
das
rcll
ljmp
shlb
mov
das
cmp
sub
stc
hlt
imul
wbinvd
adc
mov
and
dec
xor
adc
jecxz
enter
jmp
add
js
inc
std
and
movsl
mov
hlt
ja
mov
ja
jl
imul
int
popl
push
sarl
lret
lds
adc
or
test
aas
pop
dec
sbb
lret
rcrl
push
mov
fs
mov
jecxz
adc
adc
mov
mov
mov
or
in
js
stc
out
enter
stc
mov
mov
adc
shl
popf
addr16
xor
jle
lcall
jae
ds
loop
hlt
outsb
mov
jge
inc
loop
adc
stos
mov
cmp
lds
int3
jecxz,pn
lea
pop
adc
stc
add
call
mov
pop
mov
hlt
sahf
pop
lret
xchg
add
stos
pop
.byte
.byte
add
add
add
pop
add
add
adcb
addb
add
push
add
add
add
add
add
add
add
sbbb
add
clc
add
andb
add
adc
add
sub
add
add
add
add
add
add
add
add
add
pop
add
addb
add
add
add
add
add
add
add
add
add
jo
add
mov
add
mov
add
add
add
add
add
add
add
addl
add
add
add
add
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
xor
add
add
add
add
add
add
add
add
add
dec
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
addb
add
add
add
add
add
add
add
test
add
js
add
add
add
add
add
add
add
add
add
nop
add
addb
add
test
add
rolb
addb
add
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
test
add
and
add
add
add
add
add
movsb
add
test
add
in
add
add
add
test
add
test
add
in
add
add
add
sub
add
push
add
add
add
add
add
in
add
add
add
shl
add
add
add
add
add
add
add
loopne
add
add
in
add
add
add
in
loopne
add
add
add
add
add
add
add
loope
add
add
add
add
add
add
add
loope
add
add
in
add
add
add
jo
add
xor
add
in
add
add
add
mov
add
add
add
add
add
add
add
or
add
in
add
add
add
fs
add
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
adc
add
in
add
add
add
pop
inc
add
add
add
in
add
add
add
pop
add
add
inc
add
add
dec
push
inc
push
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
decl
add
and
add
addb
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
mov
add
add
add
dec
add
add
add
add
js
add
decl
add
add
add
add
decl
add
add
add
sbb
add
decl
add
add
or
add
add
decl
add
add
push
add
addb
add
decl
add
add
add
decl
add
add
add
add
add
decl
add
add
add
add
decl
add
add
add
pop
add
add
decl
add
add
adc
add
decl
add
add
incl
add
add
decl
add
add
add
add
add
decl
add
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
add
lods
adc
add
add
add
add
add
add
add
sbb
add
js
add
inc
adc
add
add
add
incl
add
add
add
add
add
add
add
add
pushl
add
enter
add
add
add
add
add
add
nop
add
add
add
push
add
add
add
incl
add
add
add
enter
add
or
add
add
pushl
add
push
sbb
add
add
add
add
add
add
test
add
inc
adc
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
and
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
je
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
sub
add
add
add
add
add
add
add
fadds
add
inc
adc
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
jmp
and
add
add
add
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
add
test
add
jmp
and
add
add
add
add
incl
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
mov
add
add
add
add
jmp
and
add
add
add
add
incl
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
incl
add
add
add
add
jmp
and
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
jmp
and
add
add
add
add
add
add
add
add
aam
add
incl
add
add
add
adc
add
jmp
and
add
add
add
add
add
add
add
add
lock
add
incl
add
add
add
and
add
jmp
and
add
add
add
add
add
add
mov
add
add
add
add
incl
add
add
add
xor
add
jmp
and
add
add
add
add
add
add
faddl
add
add
add
xor
add
incl
add
add
add
inc
add
add
jmp
add
cmp
add
ljmp
add
add
add
lock
add
add
add
decl
add
decl
add
add
pushl
add
add
add
rolb
add
call
add
sbb
add
mov
xchg
iret
adc
jo
jmp
ja
jl
rcll
mov
ja
jmp
jmp
fidivrs
adc
ja
jmp
pushl
add
add
add
add
add
add
add
inc
add
add
incl
add
add
add
add
add
add
add
inc
add
add
lcall
mov
cmc
inc
mov
loop
xchg
push
pop
in
add
add
call
test
rcll
mov
rcll
add
add
jmp
xchg
iret
adc
jo
enter
call
test
rcll
mov
rcll
sub
add
push
cli
fs
mov
jnp
cmp
sbbl
rcr
push
sbb
iret
adc
add
add
test
add
shrb
or
iret
adc
add
add
jmp
xchg
iret
adc
jo
call
jmp
iret
adc
jo
dec
add
add
pushl
mov
adc
rcll
mov
add
lcall
shrb
cmp
adc
add
add
hlt
add
add
add
add
incl
add
add
add
add
jmp
add
add
add
ljmp
add
add
add
call
add
add
incl
add
add
add
add
add
dec
add
add
add
add
add
add
outsl
insb
xor
je
bound
push
mov
add
add
jo
add
mov
decl
add
add
incl
cmp
add
add
add
clc
add
add
add
dec
add
add
pushl
add
add
add
call
add
add
incl
add
rolb
add
push
add
jmp
add
add
dec
add
add
add
rolb
add
add
add
add
add
add
add
add
add
push
add
call
add
pusha
add
add
add
add
lods
add
add
call
faddl
add
in
push
add
mov
pushl
add
ljmp
add
call
lcall
incl
add
add
lcall
call
add
call
add
jl
add
decl
jl
add
adc
add
test
add
jo
add
in
add
add
mov
add
push
push
add
sbb
add
rolb
add
test
add
push
add
pushl
decl
add
add
add
incl
dec
outsl
jae
push
push
push
add
add
incl
lock
popa
insl
gs
decl
add
push
outsl
jne
pop
dec
popa
insl
add
add
decl
add
insb
imul
push
decl
mov
pop
inc
imul
add
add
decl
add
sahf
inc
jne
insb
dec
popa
insl
gs
decl
add
outsl
jne
pop
push
popa
je
add
add
incl
xor
popa
je
add
add
decl
add
gs
arpl
gs
decl
add
inc
outsl
jne
pop
dec
outsb
je
jb
arpl
gs
add
add
incl
cmp
decl
add
inc
js
je
outsl
fs
add
decl
add
push
arpl
jo
dec
popa
insl
gs
push
decl
add
push
outsl
jne
pop
push
arpl
jo
dec
popa
insl
gs
push
add
add
decl
add
imul
dec
popa
insl
gs
push
call
add
add
jne
pop
push
arpl
jo
inc
jne
insb
dec
popa
insl
gs
push
add
add
decl
cmp
dec
dec
inc
jb
jne
outsb
je
xor
add
add
decl
cmp
addr16
outsb
je
push
push
enter
incl
xlat
jp
je
insl
incl
outsb
fs
push
push
decl
add
xchg
outsl
jne
pop
push
popa
insb
jne
push
push
push
enter
incl
outsl
jne
je
push
push
decl
add
outsl
jne
pop
inc
outsl
jne
je
push
push
enter
incl
add
insb
outsb
addr16
push
push
enter
decl
add
pop
dec
gs
outsb
jne
decl
add
pop
inc
outsb
jne
sub
add
call
cmp
dec
dec
popa
insl
gs
jb
jne
outsb
je
push
push
incl
add
jp
ja
je
push
add
cmp
add
push
add
jae
jae
push
decl
add
pop
inc
js
jae
jae
push
add
add
incl
popa
insl
gs
push
push
decl
add
jne
pop
jo
outsb
popa
insl
gs
nop
add
add
cmp
dec
push
outsb
outsb
popa
insl
gs
jb
jne
outsb
je
add
add
incl
add
aas
push
outsb
outsb
popa
insl
gs
add
add
decl
add
ja
jae
addr16
push
push
add
add
and
add
or
push
inc
jb
jne
outsb
je
push
push
push
mov
add
pop
inc
jb
jne
outsb
je
push
push
push
add
add
incl
add
jae
outsl
outsb
push
decl
add
outsl
jne
pop
push
gs
imul
add
decl
and
inc
jne
insb
fs
gs
imul
push
add
nop
outsl
jne
pop
inc
jne
insb
fs
push
push
add
add
incl
add
outsl
jne
push
decl
add
pop
push
imul
add
add
adc
add
or
clc
mov
gs
je
dec
bound
arpl
incl
add
dec
push
jb
addr16
inc
push
push
incl
add
lea
imul
add
add
incl
test
inc
arpl
call
add
add
inc
jb
jae
push
push
add
add
decl
add
inc
gs
bound
arpl
push
decl
add
push
add
add
call
add
arpl
outsb
arpl
push
arpl
incl
add
cs
bound
arpl
add
add
incl
insb
gs
push
push
incl
stos
mov
add
add
decl
outsl
outsb
outsb
arpl
push
arpl
push
hlt
add
add
add
cmp
dec
push
gs
push
je
gs
insl
push
hlt
add
add
bound
hlt
add
add
incl
add
jne
outsb
push
push
hlt
add
add
add
add
je
outsb
fs
push
je
gs
insl
push
push
push
incl
add
mov
push
push
hlt
add
add
add
or
ds
inc
je
outsb
fs
dec
imul
pushl
add
add
cli
mov
dec
push
hlt
add
add
incl
nopl
popa
fs
decl
add
inc
push
je
jb
push
push
incl
in
stos
push
gs
hlt
add
add
add
rclb
popa
fs
imul
clc
add
add
add
push
push
gs
fs
insb
insb
push
hlt
add
add
cs
push
jb
je
push
push
push
hlt
add
add
add
add
add
push
jb
je
dec
imul
add
add
decl
add
mov
gs
insb
popa
outsb
imul
jae
incl
imul
hlt
add
add
testl
hlt
add
add
add
add
add
int3
push
imul
imul
movsb
add
add
insb
outsl
jae
push
push
push
add
add
sub
add
add
je
dec
outsb
push
push
push
decl
add
pop
jo
je
add
add
in
add
push
and
popa
push
je
dec
jne
push
push
incl
je
jo
je
add
add
incl
and
push
je
inc
jb
push
push
add
add
call
add
xchg
inc
js
jb
arpl
jae
jne
arpl
add
add
decl
add
je
push
gs
jne
arpl
push
pop
add
add
call
cmp
push
je
outsb
fs
jb
push
je
gs
insl
push
jns
gs
mov
jmp
cmp
pop
pop
dec
dec
inc
dec
pop
pop
pop
dec
dec
inc
dec
pop
imul
je
xor
xor
xor
push
push
and
add
sub
add
and
adc
inc
dec
pop
pop
pop
dec
dec
inc
dec
pop
imul
jo
pop
xor
cmp
pop
xor
xor
push
push
test
add
decl
cmp
addr16
gs
push
je
gs
insl
push
push
call
decl
cmp
dec
dec
outsl
jae
pop
inc
insb
popa
jae
push
dec
add
add
bound
inc
jb
jne
outsb
je
pop
inc
insb
popa
jae
mov
add
lcall
cmp
dec
push
push
dec
dec
popa
insl
gs
jb
jne
outsb
je
pop
inc
insb
popa
jae
adc
add
lcall
cmp
dec
push
push
dec
push
outsb
outsb
popa
insl
gs
jb
jne
outsb
je
pop
inc
insb
popa
jae
push
push
sbb
outsl
ja
and
jb
jo
and
jae
and
push
gs
xor
sub
push
imul
push
arpl
jo
and
jae
and
jo
imul
and
je
jb
popa
arpl
and
jne
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
outsb
je
jb
popa
arpl
sub
dec
popa
insl
gs
addr16
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
outsb
je
jb
popa
arpl
push
push
sub
popa
insl
gs
addr16
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
outsb
je
jb
popa
arpl
sbb
push
imul
push
arpl
jo
and
jae
and
push
arpl
inc
jb
jne
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
push
and
dec
popa
insl
gs
addr16
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
add
outsb
popa
insl
gs
addr16
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
push
sbb
or
add
sbbb
or
add
sbbb
or
add
sbbb
add
add
sbbb
or
sbbb
or
or
or
sbb
add
add
add
jg
add
add
add
jg
add
add
add
add
add
jg
add
add
add
jg
add
add
add
add
add
jg
add
add
add
jg
add
add
add
inc
push
add
sbbb
or
or
or
sbb
add
add
add
jg
add
add
add
jg
add
add
add
add
add
add
add
rcl
push
push
adc
movsb
add
add
add
add
push
push
sbb
add
add
add
pushl
add
add
add
add
add
add
add
add
add
sbb
sbb
sbb
dec
add
inc
add
add
add
add
add
and
add
or
add
and
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
push
add
add
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
add
add
jl
add
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
jl
add
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
add
add
addb
add
xor
inc
add
add
add
add
add
add
cmp
incl
add
add
add
add
add
addb
add
xor
pop
add
adc
add
add
add
add
mov
add
and
add
xor
add
and
pop
add
add
addb
add
cmp
dec
add
inc
pop
add
add
add
add
add
add
add
add
add
or
sbb
sbb
cmp
dec
add
inc
or
add
add
add
add
dec
add
add
add
add
or
sbb
sbb
inc
add
inc
or
add
add
jo
add
sub
add
or
add
and
or
sbb
sbb
inc
add
inc
or
add
add
add
add
pop
add
add
add
add
or
sbb
sbb
dec
add
inc
or
add
add
js
add
mov
add
or
add
and
or
sbb
sbb
dec
add
inc
or
add
add
add
add
add
or
addb
add
push
add
add
add
add
add
add
cmp
incl
add
add
push
add
add
addb
add
push
add
add
add
call
add
add
decl
add
sub
add
add
add
or
or
xor
add
or
add
push
add
add
add
add
ltr
add
addb
add
pop
add
add
add
add
incl
add
add
add
add
adc
sbb
sbb
pop
add
add
add
call
add
add
add
add
decl
add
orb
add
add
or
or
xor
add
or
or
xor
add
or
add
push
add
add
add
add
adc
sbb
sbb
pusha
add
add
add
add
add
add
cmpb
add
add
and
adc
sbb
sbb
add
add
add
add
add
add
andb
add
add
add
add
addb
add
push
add
add
add
add
add
cmpb
add
add
or
or
add
add
and
adc
sbb
sbb
insb
add
inc
adc
add
add
cwtl
add
add
add
or
add
and
adc
addb
add
jo
push
add
inc
adc
add
push
add
or
add
and
push
add
add
addb
add
je
push
add
inc
push
add
add
add
push
add
or
add
and
pop
add
add
addb
add
js
inc
add
add
add
add
add
add
orb
add
add
and
sbb
sbb
sbb
jl
inc
add
add
add
add
add
add
orb
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
roll
add
rolb
add
roll
add
aam
add
aad
add
out
add
add
add
add
add
add
pop
add
xlat
pop
add
adc
add
cmp
add
push
add
add
add
add
add
add
add
add
add
adc
add
dec
add
add
add
add
rolb
add
adc
add
add
pusha
add
add
add
add
add
add
push
add
rolb
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
sbb
sub
push
add
inc
add
add
add
inc
add
add
add
add
add
sbb
sbb
xor
push
add
inc
add
add
add
pop
add
add
add
add
add
add
add
addb
add
xor
xor
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
sbb
sbb
sbb
pop
add
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
and
add
sub
add
or
add
add
add
add
add
add
add
cld
lcall
add
add
add
add
add
add
add
xor
add
push
add
add
add
int3
add
add
add
add
add
addb
add
sbb
pop
add
inc
add
add
add
or
or
add
add
sub
add
mov
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
add
add
addb
add
sub
pop
add
inc
add
add
add
or
or
add
add
adc
add
test
add
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
and
add
sub
add
or
add
add
add
add
add
add
add
add
add
cld
lcall
add
add
add
add
add
adc
add
add
add
xor
add
push
add
add
add
test
add
pushf
add
add
add
add
add
addb
add
sbb
pop
add
inc
add
add
add
add
add
add
add
sub
add
mov
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
and
add
sub
add
or
add
add
add
add
add
add
add
cld
lcall
add
add
add
add
add
add
add
xor
add
push
add
add
add
int3
add
add
add
sbb
sbb
sbb
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
clc
add
add
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
adc
add
sub
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
adc
add
push
add
add
xor
add
sbb
sbb
sub
pop
add
inc
add
add
add
add
add
add
add
add
add
mov
add
and
add
addb
add
xor
dec
add
inc
add
add
add
add
add
add
push
add
add
addb
add
xor
dec
add
inc
push
add
add
add
add
add
add
add
pop
add
add
addb
add
cmp
inc
add
add
add
add
add
add
orb
add
sub
or
sbb
sbb
cmp
pop
add
adc
add
add
add
add
add
add
orb
add
and
or
sbb
sbb
inc
add
add
add
add
add
add
orb
add
add
add
and
or
sbb
sbb
inc
add
add
add
add
add
add
xorb
add
add
add
add
add
add
addb
add
dec
add
or
add
add
add
add
sbb
sbb
dec
add
or
add
add
add
daa
add
out
std
call
daa
add
adc
add
adc
add
adc
daa
add
pop
daa
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
call
add
add
add
pusha
add
add
lods
add
add
aam
add
in
add
add
sub
add
inc
push
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
push
add
add
add
pushf
add
add
add
adc
add
push
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
inc
add
add
push
add
jl
add
mov
add
add
add
sub
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
bound
popf
shrl
out
cs
repnz
xchg
jmp
sub
je
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
jae
test
test
in
cmpsl
dec
clc
ljmp
dec
std
jmp
inc
in
jle
ret
sub
dec
add
add
add
add
add
push
add
add
add
add
add
add
add
add
xor
xchg
dec
aad
mov
pushl
inc
jmp
ds
jmp
inc
jmp
cmp
jmp
xchg
cld
push
and
adc
add
or
add
add
add
add
push
sub
cmpb
repnz
pop
pushl
dec
ljmp
inc
jmp
cmp
jmp
cmp
jmp
inc
out
jmp
xchg
decb
push
add
add
add
add
add
add
add
add
add
add
add
add
inc
mov
mov
push
pushl
dec
ljmp
inc
ljmp
ds
jmp
jmp
inc
call
sub
adc
add
add
add
add
jl
scas
sub
insl
mov
push
pushl
dec
ljmp
dec
ljmp
inc
jmp
cmp
jmp
cmp
jmp
aaa
vcvtsd2ss
mov
add
sldt
add
add
add
add
add
mov
fwait
scas
pusha
call
inc
arpl
inc
pusha
mov
push
pushl
dec
ljmp
ljmp
aas
jmp
jmp
inc
hlt
jmp
cwtl
filds
add
adc
add
or
add
add
add
add
jo
dec
outsb
inc
imul
inc
gs
mov
push
pushl
dec
ljmp
ljmp
aas
jmp
jmp
das
popf
clc
add
add
add
add
add
add
add
add
cwtl
push
shl
leave
ja
dec
ja
dec
outsb
dec
outsb
inc
insl
inc
imul
mov
push
pushl
dec
ljmp
jmp
ds
jmp
dec
ljmp
mov
adc
add
or
add
add
add
add
test
call
xchg
dec
je
dec
je
dec
je
dec
jno
dec
outsl
mov
push
pushl
dec
ljmp
inc
ljmp
ds
ljmp
xor
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
ficompl
dec
jns
dec
ja
dec
ja
dec
jbe
dec
jno
mov
push
pushl
dec
ljmp
inc
ljmp
dec
pushl
cmpsl
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
stos
imul
fildll
call
jge
call
jle
call
jle
dec
jp
dec
js
dec
jae
inc
pusha
pushl
dec
ljmp
dec
ljmp
dec
idiv
jbe
stos
fldl
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
mov
in
fildll
call
test
call
cmp
roll
call
jl
dec
jns
dec
jae
inc
popa
pushl
pushl
push
call
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
subb
lea
mov
fisttps
outsb
add
jp
add
pop
inc
add
add
add
mov
loop
rcrb
fisubs
call
xchg
call
test
call
cmp
dec
js
dec
jno
mov
pop
pushl
dec
fdivr
jg
mov
add
add
daa
dec
js
xor
sahf
xor
pop
pushf
out
xor
icebp
das
pop
xchg
out
push
xchg
leave
daa
dec
subb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
inc
pushf
orl
cmpsb
sbb
aam
sbb
mov
call
mov
dec
lods
sbb
mov
push
incl
arpl
mov
mov
cmpsb
idiv
in
fbld
call
mov
call
test
call
cmp
sarb
dec
jbe
dec
js
inc
insb
lcall
inc
mov
adc
data16
mov
data16
es
lcall
xor
call
cmp
adc
call
ja
jmp
mov
push
xchg
out
and
add
adc
add
or
add
pop
add
add
add
add
add
add
add
add
movsl
mov
cli
lret
jmp
mov
and
fdivl
adc
fdivl
adc
fidivrs
ljmp
add
add
add
mov
test
jmp
mov
call
mov
call
xchg
call
cmp
sarb
call
cmp
int
pushl
dec
cld
add
add
cmp
jp
jmp
mov
lcall
cmp
or
incl
cmp
or
call
sub
test
add
adc
add
or
add
push
add
add
add
add
add
add
add
add
lahf
xchg
inc
scas
xchg
adc
mov
jmp
shlb
fidivrs
or
fdivl
or
ud0
mov
and
stos
lea
incl
add
push
mov
stos
clc
jmp
mov
call
xchg
call
cmp
aam
call
test
mov
dec
int
add
add
inc
jae
fstpt
jg
ljmp
nop
lcall
mov
call
test
call
cmp
or
decl
jg
incl
incl
jnp
decl
cmp
push
jl
ljmp
dec
xorb
add
add
add
add
add
add
add
add
add
or
mov
adc
fdivrs
sub
jecxz
adc
loopne
or
fnsave
or
fdivl
ud0
mov
fnstsw
and
stos
mov
incl
add
push
rolb
jmp
mov
fisubs
call
mov
mov
push
sar
add
add
inc
js
in
mov
pushl
lcall
mov
lcall
mov
call
test
call
test
decl
cmp
incl
incl
jp
decl
cmp
adc
ljmp
xor
add
add
add
add
add
add
mov
adc
jmp
xor
call
leave
sbb
in
adc
fistpll
or
fdivl
push
fdivl
adc
fdivrl
sbb
loopne
and
incl
add
push
roll
jmp
mov
fcoms
icebp
lcall
add
adc
mov
incl
pushl
popf
ljmp
xchg
jmp
mov
lcall
mov
lcall
mov
call
decl
decl
jg
incl
jl
incl
jp
decl
cmp
sbb
push
add
add
add
add
add
add
add
mov
lret
das
in
shrb
jmp
sbb
jmp
int
jmp
ret
adc
fistpll
push
fnsave
ud0
mov
fdivl
adc
fnstsw
sbb
loopne
and
incl
add
push
roll
dec
test
jmp
add
adc
int3
fisttps
jecxz
dec
movsl
incl
cmp
ljmp
xchg
jmp
lcall
mov
lcall
xchg
call
test
call
cmp
or
decl
jg
incl
jnp
incl
jl
decl
jge
ljmp
pop
cwtl
jmp
add
add
add
add
add
add
les
xor
in
shll
in
shlb
in
shlb
jmp
pop
jmp
les
fistpll
push
fnstsw
ud0
mov
fdivrl
adc
fnstsw
sbb
loopne
and
incl
add
mov
jmp
push
push
mov
loopne
cwtl
out
push
test
incl
incl
cmp
mov
jmp
mov
lcall
mov
lcall
xchg
call
decl
decl
jle
incl
jl
decl
pushl
pop
pushf
std
add
add
add
add
add
add
add
add
enter
icebp
fadds
out
aam
out
aam
out
aam
in
aam
in
shlb
jmp
and
in
sbb
fistpll
push
fnstsw
ud0
mov
adc
fnstsw
adc
fidivrs
and
lods
mov
incl
add
add
add
push
fxam
push
fwait
in
call
decl
decl
decl
decl
incl
incl
cmp
lcall
push
mov
lcall
xchg
call
call
test
decl
decl
jg
incl
cmp
xor
incb
add
adc
add
or
add
add
add
add
scas
sbb
repz
repnz
push
xlat
sub
icebp
fsubrs
push
xlat
sub
out
daa
out
aad
in
shlb
jmp
pop
fistpll
ud0
mov
ud0
mov
adc
fdivl
sbb
fidivrs
decl
add
adc
add
adc
loope
jl
repnz
mov
call
call
decl
decl
incl
ds
jmp
mov
lcall
mov
lcall
xchg
call
xchg
call
cmp
or
call
test
pushl
add
adc
add
or
add
add
add
add
mov
div
fistps
hlt
ficoms
repnz
push
fisubrl
push
fisubrl
push
fsubrs
out
aad
in
shll
out
pop
fidivrs
push
fnstsw
push
fdivl
sbb
pushl
jbe
icebp
add
add
add
cmc
add
std
add
add
xchg
mov
incl
call
call
call
decl
incl
aas
test
jmp
mov
lcall
mov
lcall
mov
call
call
cmp
push
cmp
adc
pushl
cmpsb
std
add
add
add
add
add
add
add
add
aad
das
fbld
mul
js
repz
push
push
push
fsubrl
push
fldt
out
aad
in
shlb
jmp
push
fistpll
push
fnstsw
sbb
fistpll
call
add
adc
ja
icebp
add
mov
inc
cld
add
add
xchg
cmc
lcall
lcall
lcall
lcall
call
decl
incl
ds
jmp
mov
lcall
mov
lcall
mov
call
lcall
test
or
add
add
add
add
fld
cmp
jmp
pop
clc
jmp
pop
push
fbstp
push
fbstp
push
push
fldt
push
fsubrs
out
aad
jmp
and
in
push
fistpll
sbb
loope
and
mov
orl
add
repnz
cmpsl
decl
in
decl
jecxz
incl
outsb
inc
cld
add
add
test
idiv
movsb
sar
decl
mov
lcall
call
decl
incl
cmp
cltd
jmp
lcall
mov
lcall
mov
jmp
mov
ljmp
cmp
lods
add
add
add
add
add
add
add
add
stos
cmp
cmc
mul
mov
stc
in
fwait
push
in
push
loope
push
loope
push
fbstp
push
fsubrl
push
fisubrl
out
daa
in
shlb
jmp
and
out
es
shlb
ret
jmp
add
adc
xchg
or
test
add
jle
add
jl
or
jg
add
outsl
inc
cld
add
add
xchg
idiv
test
call
mov
lcall
call
decl
incl
cmp
jmp
jmp
mov
ljmp
mov
aas
jo
cli
sub
add
add
add
add
add
add
fmulp
dec
pop
out
data16
clc
jmp
cli
out
mov
push
loop
push
fbstp
push
push
fisubrl
push
xlat
daa
out
aad
out
aam
in
shll
dec
scas
and
scas
xchg
adc
add
add
add
jno
psubsb
incl
in
incl
in
incl
jle
or
cmp
add
sti
add
add
xchg
clc
ljmp
iret
ljmp
lcall
call
decl
incl
aas
movsb
cmp
pushf
ljmp
cld
cmp
lods
js
add
pop
add
add
add
add
add
add
push
insb
out
insl
imul
xchg
cli
out
mov
push
out
push
fisttps
repz
fmull
fistpl
out
inc
call
mov
adc
add
add
add
repnz
nop
decl
jmp
test
add
cmp
add
jl
add
in
incl
mov
dec
cld
add
add
mov
idiv
test
ljmp
lret
pushl
jmp
jmp
jmp
call
incl
idiv
dec
jnp
incb
mov
add
add
add
add
add
add
add
add
loopne
pop
push
loop
pop
out
out
fdivrl
cmc
out
push
call
mov
cmc
in
push
fisubrs
jmp
mov
pop
rolb
add
push
add
ret
adc
cltd
decl
nop
incl
jmp
test
add
cmp
add
jle
push
in
decl
in
incl
movsb
incl
jb
sti
add
add
xchg
in
lcall
lcall
jg
ljmp
stc
lcall
out
dec
or
add
add
add
add
add
add
add
add
fmulp
push
sbb
lds
fcmovb
dec
stc
xlat
rolb
mov
xor
add
add
add
leave
xchg
sbb
mov
decl
out
xchg
incl
in
incl
call
test
add
cmp
add
jle
push
in
decl
in
incl
movsb
arpl
add
in
add
adc
cltd
lret
scas
out
subb
jp
loope
je
fucomp
push
xlat
lret
int
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
cmc
stos
call
hlt
cmpsl
call
hlt
movsl
decl
repnz
decl
lock
jmp
incl
mov
add
test
add
cmp
add
jle
pop
in
decl
in
incl
movsb
incl
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pushf
jmp
divl
call
cmc
lods
call
hlt
lods
call
hlt
stos
decl
lahf
incl
in
incl
jmp
test
add
cmp
in
incl
jecxz
decl
in
decl
sarl
add
xlat
add
add
add
add
add
add
add
add
pop
sarb
repz
lcall
clc
mov
sbb
mov
sbb
mov
sbb
mov
push
cmc
mov
or
out
nop
incl
jmp
incl
out
incl
out
incl
in
incl
in
decl
jle
cmc
add
add
add
add
add
add
add
add
pop
lds
pushl
sti
sar
stc
mov
jmp
clc
mov
lcall
idivl
decl
repnz
incl
out
nop
incl
jmp
xchg
add
cmp
in
decl
in
incl
adcl
add
adc
add
or
add
add
add
add
lret
xchg
push
cli
jmp
iret
jmp
cli
ret
jmp
cli
cli
jmp
stc
ret
idivl
or
nop
incl
in
incl
call
test
push
in
incl
mov
add
add
add
add
add
add
add
add
sub
cltd
fidivs
iret
jmp
cld
ljmp
cld
leave
ljmp
sti
int3
ljmp
sti
lret
jmp
stc
enter
lcall
idivl
decl
out
xchg
incl
in
mov
add
jmp
mov
add
add
add
add
add
add
add
add
dec
fisubrs
mov
std
iret
ljmp
cld
int
xor
sar
xor
sar
xor
sar
cs
into
jmp
stc
leave
jmp
stc
ret
lcall
icebp
movsb
decl
out
xchg
decl
in
decl
in
mov
pminub
fadds
add
or
add
add
pop
fnsave
mov
out
scas
jmp
pushl
std
sar
xor
sar
xor
std
aad
das
sti
sar
sub
stc
lcall
idivl
decl
repnz
call
out
xchg
decl
mov
pop
jo
add
or
add
add
add
add
add
add
sarl
push
call
std
aam
xor
std
aam
xor
sar
cs
int3
jmp
cli
jmp
stc
sar
divl
lcall
repz
incl
add
or
add
add
jnp
mov
xchg
lock
hlt
cld
jmp
pushl
pushl
std
sar
das
cld
sar
sub
sti
ljmp
stc
sar
clc
mov
lcall
call
jno
add
pop
cmp
add
push
add
add
add
add
xchg
ljmp
sti
jmp
fcos
hlt
cmc
mov
fcos
push
std
sar
pusha
cld
sar
jno
sar
dec
cli
loope
incl
mov
cli
push
cmpsl
insl
add
add
add
add
add
add
add
add
xchg
mov
lret
vpsubsw
lret
inc
in
pushl
cld
fdivr
data16
enter
mov
loopne
mov
add
add
add
add
add
mov
icebp
sarb
sub
stc
ja
mov
in
dec
movsl
enter
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
incl
add
inc
add
add
incl
add
incl
add
incl
add
incb
add
incl
add
incb
add
incl
add
cld
add
ud0
add
cld
add
ud0
add
cld
add
ud0
add
cld
add
ud0
add
cld
add
ud0
add
cld
add
ud0
add
add
add
pop
add
cld
add
add
pop
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
incb
add
add
add
cld
add
ud0
add
cld
add
ud0
add
cld
add
ud0
add
cld
add
ud0
add
cld
add
ud0
add
cld
add
ud0
add
incb
add
incl
add
incb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incl
add
add
add
add
add
add
add
and
ja
stos
dec
jae
cmpsl
enter
imulb
mov
sub
add
ds
inc
in
cmpsb
inc
cld
jmp
inc
lock
sub
add
inc
aad
mov
dec
cli
lcall
aaa
jmp
inc
lcall
sub
xchg
dec
lret
push
xlat
stc
lods
pop
clc
jmp
inc
clc
lcall
cmp
jmp
cmp
ljmp
aas
fdivr
imul
add
outsl
repz
mov
push
clc
jmp
inc
clc
jmp
cmp
jmp
cmp
ljmp
das
mov
add
xchg
inc
jnp
mov
pop
clc
jmp
clc
jmp
cmp
jmp
dec
pushl
test
movsl
pop
aad
call
nop
dec
mov
mov
pop
clc
jmp
dec
clc
jmp
cmp
ljmp
scas
incl
add
add
mov
fcomps
std
mov
pop
stc
jmp
dec
clc
jmp
dec
std
decl
add
add
mov
fisubrs
call
cltd
std
mov
pop
stc
ljmp
pop
stc
lcall
inc
mov
add
add
decl
outsb
add
add
add
xlat
cli
jmp
mov
fisubl
std
mov
push
jmp
sti
add
add
cmp
popf
aaa
cmpsb
aam
arpl
cli
cs
pushf
fsubrs
cltd
cmpsb
cmpsl
mov
in
cltd
adc
aam
pop
call
mov
fdivs
adc
lods
lea
stc
xchg
cmc
add
add
mov
out
jmp
cli
jmp
mov
fsubl
call
mov
pushl
push
int
add
add
aas
jb
in
aaa
jae
jmp
ja
lcall
jbe
lcall
jne
ljmp
push
lcall
add
add
cmpsb
and
fnstenv
adc
aam
push
call
test
call
lods
or
or
mov
testb
add
mov
out
in
fdivr
cli
inc
test
jmp
add
inc
jnp
icebp
inc
jl
pushl
ja
call
jae
call
ljmp
ja
ljmp
push
ljmp
pop
pushf
out
mov
mov
stc
loope
cmp
fnsave
adc
aam
push
call
stos
or
aam
push
call
mov
or
mov
stc
add
add
mov
call
dec
nop
repnz
add
add
leave
cmc
push
mov
incl
loope
cmp
ljmp
ja
lcall
jne
call
je
call
ljmp
jns
ljmp
insb
sar
popa
lahf
nop
les
inc
stc
out
inc
jmp
sarl
fnstsw
sbb
lods
adc
aad
or
aad
pop
call
mov
fdivrl
or
mov
clc
add
add
mov
push
cli
add
add
push
shl
jp
jecxz
je
in
decl
out
cmp
loopne
xor
loope
sub
lcall
jne
call
jae
call
jne
jmp
jp
pushl
add
add
add
lret
jmp
pop
jmp
lret
loop
inc
fnstsw
sbb
xlat
scas
adc
call
lods
pop
fdivs
adc
call
add
add
add
add
fdivr
xchg
cmc
jg
repz
out
decl
in
cmp
loopne
xor
ljmp
jbe
lcall
ljmp
jnp
cmp
incl
add
add
add
add
mov
cli
icebp
in
aam
ljmp
jmp
dec
fnstsw
sbb
xlat
mov
call
lods
or
fdivs
sbb
mov
jle
incl
add
add
add
add
loopne
leave
fdiv
call
mov
hlt
pushl
incl
out
cmp
js
jmp
jne
lcall
je
call
jl
cmp
add
add
add
add
mov
mov
icebp
fldt
out
xlat
fs
jmp
pop
jmp
enter
mov
sbb
xlat
mov
fnstenv
adc
sti
add
add
add
incl
jne
incl
add
add
loop
fsub
clc
lcall
shl
xorb
incl
out
cmp
das
jbe
jmp
jbe
lcall
ja
jmp
jge
incl
mov
fcmovb
and
jmp
cli
repnz
repnz
out
fldcw
jmp
popa
jmp
movb
mov
sub
lds
or
add
xchg
or
xchg
or
incl
ja
incl
add
add
jecxz
loopne
cli
lcall
mov
cmc
ljmp
lock
in
ss
ljmp
ja
ljmp
out
cmp
inc
jp
mov
add
add
ret
clc
icebp
lret
push
loopne
push
fnsave
in
fldcw
ljmp
jmp
leave
dec
dec
mov
mov
add
add
xchg
fs
or
xchg
or
jae
pop
fbstp
or
xchg
incl
jp
incl
add
add
in
out
sti
call
mov
repz
in
incl
out
ds
inc
adc
dec
test
faddl
add
add
les
into
repz
cmc
clc
lock
in
out
fldcw
aam
fcmovb
inc
inc
stos
sbb
add
add
add
xchg
adc
shrl
add
jb
and
test
or
jle
incl
add
add
in
loop
sti
clc
mov
mov
repz
in
call
push
mov
in
mov
push
ffree
and
ret
fdivrs
pop
fcom
mov
sbb
add
add
mov
sti
adc
xchg
lcall
into
ja
adc
imul
add
outsb
incl
fstpt
or
cmp
rclb
in
add
add
push
mov
fmuls
fsubr
pop
cwtl
fxam
pop
xchg
aad
add
xchg
jmp
fildl
or
lret
insb
incl
aad
incl
fidivrs
or
mov
inc
mov
std
add
add
add
repz
ss
es
push
aam
call
lret
jb
or
je
add
jnp
add
xchg
daa
lds
stos
add
test
inc
idivb
pushl
jmp
decl
aad
call
into
js
or
jp
add
cmp
fstl
movl
add
add
clc
int
pop
test
call
ret
cmp
mov
push
loopne
call
xlat
mov
adc
jg
or
jg
adc
incl
popf
push
pop
fstps
pushl
aad
push
sar
gs
push
test
xor
loope
call
fcoms
lcall
fmuls
call
pop
fisubs
stc
idiv
cld
jl
outsb
clc
aam
popa
test
ljmp
in
mov
push
jecxz
jmp
fcompl
sti
add
add
or
movsb
fisttpl
std
jns
fdivr
clc
aam
dec
clc
lret
incl
ljmp
in
mov
incl
mov
add
or
cmpsb
gs
fdivrp
hlt
jmp
fdivr
pop
stc
sar
cmp
fsubl
fiaddl
add
add
loope
inc
or
movsl
fisttpl
fsubl
clc
push
aam
roll
rcrb
add
clc
pop
push
ud0
loopne
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lock
loopne
or
rorb
add
add
addb
add
add
addb
rorb
add
adc
add
and
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
pop
push
ud0
clc
pop
ljmp
add
add
add
add
add
add
add
add
mov
cmpb
jmp
jae
stos
mov
xchg
dec
lret
dec
in
jmp
cmp
jmp
xor
add
pop
lcall
cmp
jmp
ds
mov
mov
pushl
dec
stc
jmp
mov
mov
mov
push
sti
call
add
add
xchg
or
jmp
add
add
mov
mul
sar
rclb
in
add
add
xor
ret
aad
outsb
lret
push
mov
add
test
sub
fldcw
pop
jmp
add
add
xchg
cmc
mov
add
add
shr
xor
lcall
jne
call
jbe
lcall
jne
pushl
arpl
in
into
dec
fistpll
call
lods
or
fidivl
or
fs
xlat
stc
jb
lock
jecxz
sub
je
call
imul
jmp
sarb
fdivs
adc
mov
add
add
add
add
lret
jb
out
incl
jecxz
sub
push
jb
pushl
jb
icebp
loop
dec
mov
jmp
test
jmp
pop
jmp
ret
aas
call
test
out
add
add
stos
data16
add
jle
in
mov
cmpsb
icebp
cmp
jl
incl
ret
roll
add
in
push
repnz
cmc
out
push
mul
mov
add
or
ja
or
jno
or
jbe
or
add
jg
jmp
jmp
in
pop
xchg
aam
adc
xchg
fstpl
loop
decl
lret
outsb
incl
int
decl
aad
decl
cltd
push
add
loop
incl
mov
decl
into
jbe
or
jne
or
add
inc
loope
std
test
test
and
movsl
decl
aam
decl
movl
add
loop
ret
fcos
stos
std
call
lcall
loop
cld
push
mov
add
xor
mov
cmp
in
jmp
rcrb
add
aas
add
clc
pop
add
clc
pop
add
clc
pop
add
clc
pop
add
test
add
add
add
addb
add
add
test
add
clc
pop
add
clc
pop
add
clc
pop
add
clc
pop
add
cld
aas
add
rolb
addb
add
add
add
add
popl
dec
add
add
add
js
add
arpl
jb
imul
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
xor
push
add
add
incl
add
push
add
add
dec
add
xor
push
add
add
incl
add
arpl
add
add
add
add
add
push
add
add
pop
add
add
add
incl
add
and
jae
arpl
jb
imul
and
imul
add
arpl
jb
jns
jo
je
add
add
add
insb
add
popa
add
add
add
outsb
add
add
and
je
push
add
popa
add
jae
ja
outsl
add
add
add
add
add
add
add
add
add
add
incl
add
add
push
add
add
outsl
add
add
add
add
outsl
add
sub
add
add
add
jae
add
add
add
subl
pop
add
testl
pop
add
add
add
add
add
js
gs
add
push
inc
add
add
js
add
arpl
jb
imul
and
sub
pop
lds
loopne
aad
sub
mov
or
dec
sub
add
add
add
dec
mov
push
push
xchg
ss
sub
add
add
add
add
xor
add
add
add
add
inc
add
add
and
test
add
add
adc
add
add
and
push
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
and
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
or
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
jae
jb
jo
and
je
jo
cmp
xor
and
and
fs
jb
jo
imul
push
arpl
jo
cmp
fs
jb
jo
imul
and
cmp
sub
outsb
je
data16
je
and
jo
imul
and
arpl
imul
imul
jae
and
and
cmp
jae
popa
jae
jbe
cmp
jae
dec
outsb
outsw
and
insb
outsb
jae
insl
jae
popa
jae
jbe
cmp
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
insl
jbe
cmp
arpl
imul
and
and
cmp
jae
popa
jae
jbe
cmp
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
insl
jbe
cmp
jno
gs
gs
js
arpl
imul
insb
or
and
and
and
and
gs
cmp
outsb
jbe
imul
and
and
and
and
and
and
and
and
and
and
inc
arpl
jae
cmp
jae
and
ds
and
and
and
insl
jae
popa
jae
jbe
cmp
jno
gs
gs
jb
jbe
insb
gs
or
and
and
cmp
insl
jae
popa
jae
jbe
cmp
arpl
imul
cmp
insl
jae
popa
jae
jbe
cmp
jae
dec
outsb
outsw
ds
jae
gs
bound
inc
js
push
arpl
jo
push
inc
inc
dec
sbb
mov
pushf
mov
int3
lock
bound
add
dec
mov
jecxz
and
mov
push
lret
xchg
xchg
divl
adc
xchg
arpl
les
mov
ret
inc
xor
mov
cmp
mov
adc
in
push
repz
and
xorl
push
aas
dec
out
lcall
movsl
and
imul
inc
jg
inc
and
lret
int
int
add
dec
dec
mov
mov
xor
or
popa
mov
xchg
scas
or
fiadds
add
mov
xor
xchg
ret
dec
in
lods
loop
xchg
sbb
adcl
push
xor
or
stos
cmc
push
addr16
dec
aaa
add
notl
push
test
inc
aaa
mov
sub
sbb
jg
pop
int3
cmp
repnz
xchg
xchg
push
adc
imul
fwait
cmp
xchg
pushf
repnz
xchg
mov
sarb
lods
cmp
add
jbe
lahf
or
xchg
inc
xlat
or
call
call
pop
fnsave
cmp
jb
push
dec
or
pop
pop
mov
sub
jo
sbb
and
push
mov
aam
jbe
sbb
aad
or
and
enter
fucomip
xor
sbb
and
aas
inc
int3
jecxz
js
inc
movsb
or
pusha
inc
mov
jmp
cmp
xor
jl
jae,pn
hlt
cld
scas
pop
xchg
pop
and
mov
insb
mov
pop
enter
cmp
sub
xchg
and
or
adc
pop
popf
nop
in
push
dec
dec
jmp
fwait
dec
pop
das
mov
stos
stos
xor
sbb
das
ss
push
inc
call
cli
mov
dec
push
inc
adc
divl
sti
addr16
mov
int3
addr16
add
hlt
int
dec
pop
mov
or
mov
lret
sahf
xchg
mov
jp
sti
mov
dec
mov
dec
push
or
std
jo
aas
xor
sub
sub
cmpsl
or
movsl
mov
xlat
call
pop
das
scas
lcall
out
push
movsl
jbe
xlat
fisubrl
je
xor
cmpsl
pop
shlb
fadds
rorb
and
loope
stos
lea
pextrw
popw
dec
pop
cmc
out
mov
inc
mov
mov
rcrl
mov
inc
xchg
in
iret
fimuls
out
icebp
in
xchg
xor
das
mov
xchg
repnz
faddl
pusha
sbb
in
js
leave
or
add
xchg
sti
adc
ret
and
xor
outsl
push
test
xor
clc
int3
int3
mov
xchg
stc
adc
mov
jne
scas
mov
stos
in
lcall
popf
repnz
mov
xor
or
and
cs
push
push
mov
sbbl
dec
roll
push
mov
std
mov
call
in
jecxz
adc
mov
scas
xchg
xchg
xor
aaa
hlt
ja
ret
add
jle
jb
sbb
leave
xchg
adc
sbb
notl
pop
sbb
add
push
imul
clc
mov
sub
das
cmpsb
mul
enter
sbb
dec
bound
cmpsl
testl
fcom
clc
and
pop
and
dec
in
jne
testl
mov
xchg
mov
int
insb
in
lock
shll
inc
ds
or
add
cmp
fs
arpl
xor
cmc
insl
cmp
scas
icebp
mov
mov
les
mov
jp
cwtl
mov
shl
xor
push
jo
inc
push
push
cmp
pop
jmp
push
push
sbb
ds
push
or
cs
xchg
out
lcall
lods
dec
mov
xchg
aad
loope
jmp
shl
orps
mov
push
or
adc
addb
loope
ss
push
push
dec
cmp
aam
lock
jg
mov
lahf
mov
shll
inc
icebp
dec
rclb
xchg
xchg
sub
or
scas
jge
cmp
jmp
and
out
push
js
or
mulb
xchg
and
mov
enter
out
mov
aas
xor
aam
dec
stos
inc
call
mov
sub
xchg
pop
mov
pop
enter
jle
push
jbe
jecxz
sti
mov
arpl
sbb
mov
xchg
std
out
mov
xchg
addr16
sub
imulb
mov
lret
cmp
popf
pusha
cmp
dec
psubw
jp
bound
cmp
inc
xlat
jge
subl
sbbb
rorl
mov
divb
fildl
mulb
dec
sbb
std
xchg
ret
fistl
in
jmp
rcr
sbb
and
push
cmp
inc
mov
notl
and
leave
call
adc
add
pop
pop
mov
sbbl
ret
outsl
cmp
xchg
jmp
iret
pop
and
xor
out
addr16
aad
xor
dec
hlt
dec
mov
jecxz
js
cmc
arpl
pmullw
test
out
sub
add
bound
lods
nop
adc
dec
into
pop
pop
out
shlb
fwait
xchg
inc
cli
test
sub
aad
cmp
xchg
sbb
insl
cmp
sub
cmp
lods
pop
xor
or
sbb
mulb
lods
push
aam
inc
push
mov
arpl
stos
mov
fcmovnb
jae
mov
movsl
jno
fadds
cs
mov
jecxz
icebp
cli
jae
sub
ds
push
sbb
push
nop
clc
mov
jbe
in
int3
cltd
dec
inc
fs
mov
mov
outsl
es
pop
xchg
pop
enter
lock
cli
cmp
mov
fdivrs
pop
pop
cmp
aaa
fstpl
shl
add
pop
ljmp
push
add
or
dec
mov
filds
mov
mov
cld
fstl
repz
and
aam
sarl
push
jle
test
outsl
ror
mov
and
cmp
xor
imul
push
call
out
lods
push
dec
stc
fnsave
mov
fstps
dec
mov
xor
xor
sbb
int3
mov
inc
and
aam
pop
push
pop
imul
mov
dec
add
push
jnp
jmp
xchg
xchg
xchg
and
out
mov
test
pop
mov
cmp
popf
cltd
cs
xor
cmp
add
and
int3
aam
xadd
mov
adc
in
gs
out
dec
xor
and
sbb
pop
std
ja
sub
mov
sti
int3
mov
or
pop
pop
push
out
xchg
mov
mov
daa
or
cld
jmp
inc
push
xor
popf
cmp
cli
addb
imul
xor
in
cmp
mov
inc
add
xor
ret
ret
adc
popf
dec
push
sub
jmp
dec
jae
rcl
test
cs
mov
or
jns
mov
push
lret
lds
cmp
mov
sbb
add
int
ss
xlat
rolb
decb
les
jecxz
repnz
test
je
add
xchg
mov
jnp
cmpsl
sbb
push
mul
or
ja
gs
dec
jg
dec
sahf
push
imul
rcr
loop
loop
push
fdivrl
dec
mov
mov
pop
or
sub
std
les
or
lret
rcrb
jnp
movsb
int3
jle
test
lods
in
lahf
lahf
push
in
pop
add
adc
push
and
sbb
inc
inc
in
sub
adc
aas
test
out
pop
xchg
and
add
aas
imul
xchg
xchg
ret
lds
inc
sti
scas
mov
mov
and
fwait
mov
push
in
scas
cmp
or
dec
mov
call
popf
outsb
sbbl
cli
jnp
or
push
cmpsl
xchg
les
sbb
or
fadds
inc
and
hlt
jl
jb
inc
or
lea
cvtps2pd
mov
rcr
outsl
scas
and
lods
inc
push
stc
pop
push
clc
in
and
ret
mov
in
add
shrb
push
xor
fs
test
xchg
push
test
jl
adc
scas
adc
and
xchg
loope
jo
cmp
shlb
in
insb
in
lock
inc
mulb
add
xor
sub
xor
enter
add
enter
lcall
daa
pushf
xor
fiaddl
xor
es
and
pusha
mov
dec
ds
sti
pushf
push
popf
jns
jp
repnz
data16
dec
repnz
pop
adc
add
popf
jmp
mov
ret
mov
and
mov
in
movsb
inc
inc
pop
mov
int
sets
sub
xchg
pop
jmp
movsb
adc
add
adc
sbb
movsb
ljmp
xor
stc
imul
mov
adc
mov
and
and
popw
loop
rcl
sub
lcall
sbb
insl
popa
add
cmpb
and
mov
mov
into
aas
fsubrl
mov
or
mov
subb
add
sahf
nop
cwtl
sbb
jo
je
loopne
and
dec
loope
dec
mov
pop
sbb
xor
pushf
daa
scas
adc
adc
ljmp
pushf
fidivrl
cmp
repnz
xor
mov
dec
adc
inc
call
in
pop
fnsave
in
mov
enter
imul
ds
pop
int
mov
xchg
je
adc
cltd
lahf
pop
test
bound
ds
xchg
pop
jnp
xlat
aad
xchg
movsb
gs
mov
pop
cmpsb
loopne
cld
iret
cmc
out
sbb
inc
add
pop
lret
adc
int
sbb
xor
sub
rcrb
js
or
orb
dec
sar
inc
scas
jp
and
es
stos
mov
bound
clc
loop
mov
sbb
addr16
in
test
stos
sub
pushf
insb
pop
scas
out
scas
iret
sbb
sub
test
ss
mov
dec
xor
repnz
cmp
sbb
xchg
xchg
fcomip
mov
pop
fidivl
mov
pop
shl
mov
add
cmpb
int3
jae
fildll
inc
loopne
loopne
cmc
inc
jnp
push
inc
ja
cmp
sub
loopne
shr
and
cmpsb
imul
iret
xchg
and
jmp
mov
insb
sub
xor
stos
xchg
mov
stos
cmp
push
popf
pusha
lret
rcl
or
icebp
jecxz
mov
mov
adc
adc
dec
cmpsl
xchg
popa
and
mov
adc
pop
pop
sbb
push
cmpsl
stc
sahf
iret
sti
ret
lea
or
mov
ret
or
int
popa
sbb
imul
and
es
int3
mov
adc
lea
lret
adc
shrb
data16
popf
mov
push
xor
mov
jl
addr16
dec
jecxz
dec
and
call
mov
pop
addb
fs
test
das
das
push
and
cmpsl
and
xor
pop
jae
aaa
lret
dec
xchg
jmp
sbb
jb
or
fstl
js
jge
jmp
std
xchg
pop
std
inc
loopne
pushf
sbb
dec
push
cmc
mov
xlat
sbb
leave
mov
add
lret
loopne
mov
fwait
pop
hlt
leave
add
add
mov
pop
cmpsb
adc
sbb
sbb
testl
mov
nop
in
ss
inc
and
push
adc
repz
ja
fbstp
or
fidivl
arpl
imul
ds
sysexit
loop
push
pop
mov
cmpsb
pop
lds
mov
dec
orb
mov
ret
outsb
adc
jo
mov
inc
cwtl
cltd
cli
into
ss
jecxz
fisubrs
ljmp
push
call
ficomps
cmpb
push
lds
data16
push
stc
or
pop
adc
jp
jecxz
sub
hlt
negl
xor
jns
andb
leave
mov
test
or
in
mov
xchg
ja
cvtps2pd
pop
push
dec
mov
xor
repnz
mulb
lea
test
or
or
out
pop
jo
or
sbb
or
lret
inc
push
jecxz
out
pop
jmp
fildll
mull
inc
xchg
mov
pop
pop
adc
xchg
jle
jmp
ds
fisttpl
xchg
aas
stos
push
dec
leave
sbb
shll
mov
push
add
decb
inc
rclb
imul
test
jle
and
jbe
into
roll
in
push
enter
pop
xchg
and
fwait
bound
pop
lds
dec
inc
pop
cs
or
sarl
or
cmp
int3
jg
mov
sub
shll
ds
fsubl
inc
aam
add
pop
jo
xchg
sti
mov
or
lock
cltd
cmp
dec
adc
xchg
or
mov
stos
mov
and
fsubs
sub
xchg
mov
iret
pop
stc
push
sahf
pop
sti
and
xchg
pop
pop
popf
lods
test
mov
jbe
outsb
insb
pop
pusha
sub
imul
jecxz
mov
ss
sar
lret
rclb
shrb
xlat
mov
insb
adc
lea
jp
cmpsl
jle
jns
xor
sub
sahf
push
pop
jg
dec
lock
inc
es
out
repz
mov
mov
out
jo
lds
enter
call
cmp
ds
insl
js
jae
cmpsl
xchg
xor
lea
jae
fmul
lahf
adc
inc
mov
sub
jns
push
mov
mov
je
clc
jl
sub
push
test
js
mov
or
sub
lods
outsb
jmp
push
imul
or
sbb
shll
iret
cmpsb
push
mov
add
int
cmc
mov
cmpsl
push
add
imul
xlat
push
pop
xchg
lret
sahf
push
imul
pop
in
icebp
jg
faddp
push
sbb
inc
orl
xchg
sbb
dec
cmp
mov
sbb
or
xlat
stos
sti
cld
xchg
push
out
mov
sbb
and
mov
insl
mov
push
push
cmp
mov
mov
inc
lea
movsb
ljmp
popf
int3
dec
cmpsl
lret
pop
add
movsb
or
cmp
mov
movsl
notb
and
add
push
fs
adcl
sbb
ret
add
popa
adc
imul
insb
jns
mov
test
mov
div
stos
hlt
shrl
mov
push
divl
jle
popa
mov
mov
imul
mov
sbb
aad
fmulp
ds
ja
mov
mov
frstor
lret
adc
and
or
jb
shll
or
ror
stc
cs
rcrb
sbb
sbb
jecxz
mov
lds
lds
or
popa
sbb
jl
divl
mov
mov
sbb
mov
dec
repnz
cmovae
fldenv
inc
jge
jg
out
push
in
cmp
jo
je
jnp
inc
cmp
xchg
sub
es
pop
dec
push
clc
dec
add
mov
int3
cmp
mov
add
lds
lds
sub
test
dec
mov
xchg
mov
push
mov
xor
jo
scas
sti
xlat
mov
jmp
js
xor
icebp
test
push
adc
lcall
inc
sti
idiv
push
cmp
mov
mov
shrb
inc
xor
xor
flds
gs
and
lcall
xor
cmp
sbb
movsb
xor
lcall
mov
xchg
cmp
mov
lcall
ret
add
outsb
mov
add
scas
scas
dec
mov
cld
imul
sbb
xchg
mov
lret
daa
pop
inc
cmp
aaa
ret
xchg
adc
fimull
inc
insb
lret
aaa
pop
int3
jno
mov
icebp
or
pop
xor
mov
and
jae
jns
mov
xlat
pop
xchg
cmc
and
mov
inc
imull
push
adc
xor
int3
pop
xor
pop
fsts
shrl
jp
sarl
cli
hlt
xor
test
xchg
or
mov
pop
cmp
or
xor
jb
lcall
dec
pushf
aad
aas
daa
outsl
jp
lock
pop
add
cwtl
xor
jne
ret
mov
xchg
cmp
jmp
mov
js
imul
xor
adc
mul
cli
ja
xor
xchg
imul
pop
in
adc
popf
xor
and
test
aas
xor
xchg
fbld
aam
push
jmp
loopne
xchg
in
or
and
aam
js
fwait
xor
mov
jne
in
inc
icebp
adc
push
or
xchg
push
js
push
imul
test
xor
mov
ret
test
jge
jb
cld
popf
mov
jg
divb
mov
ljmp
pop
cmp
stos
lcall
sub
aam
int3
sub
aad
jns
out
js
int
adc
sub
cld
sub
dec
out
xchg
add
sub
das
cwtl
loop
push
pop
sarl
sahf
movsl
arpl
xlat
divb
jg
and
in
xchg
hlt
xor
pop
fdivr
sbb
sahf
xchg
sub
pop
inc
adc
lods
jecxz
push
popf
dec
repnz
or
pop
int
jg
iret
xchg
hlt
mov
push
xchg
dec
sub
jae
mov
jmp
sbb
jne
rorl
mov
fs
mov
scas
push
outsb
jecxz
rcll
pusha
dec
aad
and
fnstenv
incl
push
std
data16
into
mov
adc
sbb
fldl
ss
add
sub
into
pop
jo
js
pop
adc
xor
loope
insb
dec
dec
jno
and
cmp
adc
or
scas
inc
pop
sbb
push
add
inc
add
xor
add
rcl
xor
xchg
dec
call
test
inc
mov
scas
jnp
popf
pop
fldt
cmp
adc
dec
je
pop
dec
push
xor
sbb
outsb
insb
rcll
sbb
decl
adc
pop
lock
arpl
repz
insb
jne
and
ja
adc
je
shrl
mov
clc
and
test
pushf
xor
or
lds
pushf
movsl
mov
loope
fistps
dec
or
ja
ja
mov
cmp
ret
les
jmp
stos
xor
sbb
adc
push
in
aas
dec
xlat
out
andl
mov
sti
arpl
fiadds
inc
lock
insl
add
mov
repz
es
stc
inc
mov
push
sub
dec
inc
xchg
push
xchg
je
pushl
mov
pop
shrb
xchg
iret
pushf
push
pop
fmull
in
call
pusha
out
mov
call
fs
cltd
or
clc
fildl
outsl
xor
push
dec
cmpsl
ffreep
fdivs
popf
int3
or
mov
push
sbb
call
cmp
push
dec
aad
incl
fcmovb
add
cmpsl
call
test
aaa
mov
mov
inc
push
pop
pop
inc
cwtl
xlat
push
out
jge
aam
xchg
shlb
testb
aam
sti
in
rclb
jge
push
enter
ret
adc
int
dec
roll
mov
inc
and
add
add
mov
adc
ficoml
stc
cltd
arpl
scas
inc
xor
sbb
rol
pop
mov
orb
jb
fiadds
loopne
lods
in
sub
xor
outsb
scas
shlb
bound
mov
stos
insl
sahf
xor
inc
jno
push
xor
out
pop
jmp
ds
sub
and
lcall
in
push
loope
add
sub
mov
fcoms
sub
sarl
and
xchg
idivb
popf
mov
push
add
cmp
sub
into
pop
lret
jl
xchg
pop
xchg
push
les
shrl
out
imul
clc
mov
ds
not
mov
push
push
stc
dec
mov
lret
in
test
mov
sbb
aaa
sbbb
inc
test
inc
jecxz
sub
mov
scas
xor
sti
mov
ret
xchg
push
lret
cmc
andb
jne
loope
inc
xor
loope
sbb
mov
pushl
sti
inc
mov
mov
jb
xor
int3
test
and
clc
inc
dec
dec
je
cwtl
add
fdivrp
cmp
insl
popa
mov
xchg
aas
cmp
in
cmp
sbb
push
loop
pop
lea
push
cmp
sub
mov
cmp
les
mov
aam
inc
mov
gs
insb
and
or
jle
cmpl
dec
clc
push
sti
cmc
adc
xor
adc
mov
mov
fs
jecxz
add
fiaddl
ss
es
sub
jmp
adc
xchg
lret
pop
inc
inc
push
les
cmp
jns
lahf
or
out
jl
pop
call
jns
push
mov
mov
lds
mov
lds
pop
pop
popl
js
jb
jge
scas
mov
cs
jp
pop
sbb
mov
pop
mov
movsb
stos
call
pop
mov
lcall
je
sbb
fwait
xchg
testb
mov
push
push
mov
adc
fiaddl
pop
jecxz
lret
ret
lods
lock
lcall
push
jae
push
sub
mov
imul
scas
repnz
jb
jo
fucomp
lahf
fimull
imull
jno
leave
pop
fistpll
or
iret
pop
jne
outsb
xchg
pop
sbb
pop
xchg
mov
daa
call
pushf
subl
inc
mov
arpl
sti
jecxz
pop
push
mov
pop
stos
cmp
push
push
jne
xor
fimuls
negb
cltd
jns
cld
sar
mov
sahf
rcr
push
fildl
in
sbb
mov
and
dec
mov
sbb
loopne
ljmp
cmp
repnz
imul
mov
mov
and
ret
jp
inc
gs
lahf
icebp
imull
mov
mov
mov
vp4dpwssds
dec
ret
negb
imul
sbb
mov
enter
faddl
sbb
mov
push
arpl
push
ret
das
stc
pop
mov
xchg
jmp
sbb
mov
clc
or
lret
scas
sub
data16
push
dec
adc
mulb
mov
inc
fmuls
roll
mov
in
stos
cmp
and
xor
push
pop
mov
push
daa
push
nop
popf
test
push
in
adc
insb
mov
sub
scas
movsb
aad
xor
xor
scas
inc
adc
movsb
fwait
inc
andb
pop
icebp
jne
iret
mov
sub
or
out
xor
xchg
fisubrs
mov
xchg
mov
mov
xchg
xchg
push
mov
leave
xchg
mov
lea
pushf
stc
icebp
lods
std
rcl
or
js
test
push
scas
or
sub
cmp
loope
stc
js
stc
xor
inc
mov
xor
pop
jno
mov
push
sbb
stc
xor
adc
pop
loopne
nop
lds
je
lcall
mov
xchg
pop
stc
loop
stos
dec
insl
imul
dec
roll
les
mov
xor
lods
mov
popf
xor
cmp
push
push
adc
pusha
cmp
aam
mov
mov
les
ficompl
inc
push
mov
xchg
push
cs
sti
add
lock
outsb
cmp
jb
pop
mov
lock
imul
rclb
mov
dec
push
jne
add
jae
pop
iret
cmp
std
mov
ss
or
and
mov
dec
push
push
imul
popa
sahf
cmp
inc
or
add
mov
daa
adc
ss
mov
iret
adc
pop
mov
lods
lretw
xchg
adc
cwtl
push
in
cmpsl
push
jbe
mov
jnp
dec
or
push
pushf
xor
jp
lcall
inc
sahf
sti
add
mov
jle
addb
pop
sarb
mov
pop
or
sub
cmp
out
mov
dec
aad
pop
mov
xchg
std
cmp
mov
mov
out
ljmp
out
fs
pushw
jne
mov
adcl
jae
cmp
les
add
pop
push
ret
add
sub
mov
push
or
imul
addr16
jo
cwtl
jae
or
test
repnz
cmp
or
dec
stc
fnstcw
or
lds
adc
cs
push
or
in
pop
lock
test
jno
mov
popa
xor
ret
jo
mov
test
adc
in
fldl2t
mov
cwtl
xchg
push
pop
into
cmpsl
sub
sbb
movsl
inc
aas
repnz
cmpsl
sbb
xor
lret
pop
inc
adc
jp
jo
xchg
or
jns
lahf
mov
cmpsb
ljmp
adc
ficoms
test
stc
pop
xchg
mov
bound
cs
insl
dec
insl
mov
jb
xor
inc
dec
jns
pop
push
int
test
lea
daa
dec
mov
das
dec
popf
or
std
lock
mov
pop
mov
out
mov
in
adc
fidivrl
mov
mov
mov
in
mov
add
add
jno
or
aas
xor
xchg
adc
fidivl
adcl
leave
or
fildll
xor
or
mov
sbb
xlat
jecxz
aas
add
in
push
jbe
mov
jle
mov
loop
push
enter
fwait
sti
sbb
rcrb
js
xchg
imul
dec
pop
call
mov
insl
xchg
sbb
mov
sub
add
pop
sahf
setle
ds
add
stos
inc
xchg
mov
jecxz
mov
in
push
insb
clc
stos
hlt
mov
cmp
mov
xlat
sub
lret
adc
daa
cltd
and
push
outsl
scas
test
test
fsub
cld
mov
movsl
pop
sahf
mov
jb
jae
dec
adc
sub
dec
mov
mov
ret
dec
jo
outsl
daa
ret
adc
mov
lods
jbe
or
in
sar
sub
lock
pop
xchg
cmp
adc
outsl
popf
pusha
loopne
mov
add
inc
jle
repz
subb
pop
mov
jb
mov
xchg
fadds
xchg
sub
inc
clc
sbb
adc
enter
push
inc
pop
mov
scas
in
sub
cmp
dec
gs
xor
and
ja
nop
into
into
mov
pusha
push
aas
cli
fildll
lret
sahf
ficoms
or
dec
stos
shrb
xchg
add
into
cli
xor
addl
inc
gs
cli
push
xchg
sbb
hlt
mov
pop
iret
pop
push
lahf
test
and
sbb
popa
xchg
adc
mov
inc
or
ss
stos
cltd
pop
mov
add
mov
xor
pop
add
lds
lret
xchg
popa
aad
sub
add
xchg
popa
sahf
jp
lds
out
xorb
loop
mov
mov
stos
andb
out
out
cwtl
push
xor
arpl
mov
repnz
sbb
lea
popf
sbb
fdiv
test
leave
jbe
lea
mov
fdivrs
and
xor
dec
mov
xchg
jae
scas
mov
cmp
lods
jp
or
nop
inc
out
addr16
push
push
pop
xor
push
lods
in
fstpt
mov
repz
mov
mov
imul
dec
ret
and
or
pop
lcall
sti
out
inc
dec
std
roll
and
scas
push
xlat
mov
or
mov
call
add
push
stos
cmpsb
out
ret
psrld
mov
in
xchg
clc
xor
mov
mov
cltd
stos
mov
pop
rcl
adc
push
mov
pop
dec
mov
mov
into
jle
push
aas
add
lcall
sub
mov
mov
add
push
call
inc
jle
stc
into
mov
pop
orb
out
mov
xor
ds
or
fcmovb
mov
test
dec
clc
fcoml
shll
aad
or
sarl
cltd
lcall
pop
inc
dec
cmpb
stc
mov
daa
xchg
mov
dec
pop
jp
jmp
out
cwtl
sahf
movsl
jp
inc
and
xor
cmpsl
pop
mov
xchg
outsb
push
cld
adc
adc
subb
push
testl
nop
mull
pop
out
cmp
jle
mov
dec
xchg
lds
cmp
xor
stc
inc
push
aam
shll
icebp
lods
mov
cmc
or
adc
mov
and
add
ret
pop
adcb
out
xchg
cld
cli
inc
pop
into
lea
mov
out
mov
inc
mov
pop
stos
shlb
mov
mov
push
push
mov
jl
mov
shlb
cmp
cmpsl
mov
add
jns
stos
sub
movsb
fisttpl
ret
pop
pop
or
xchg
xchg
sub
arpl
cmp
sub
pop
sub
dec
add
addr16
ret
adc
scas
popa
call
jb
adc
xor
fiadds
mov
fdivs
jns
adc
cmp
les
insl
stos
lods
mov
cmp
rcl
push
fildll
add
lcall
ljmp
out
mov
xchg
lds
add
les
int
and
xchg
xchg
push
mov
xchg
add
add
sub
mov
cmp
out
bound
push
daa
in
lret
push
outsb
push
inc
out
sbb
xchg
add
sbb
ret
mov
adc
maskmovq
negl
adc
pushf
and
dec
sub
aad
fbstp
ss
xor
imul
stos
aad
fldl
pop
sbb
xor
rcr
daa
dec
xor
int
js
stc
rcrb
cld
sbb
out
mov
sbb
sti
popf
mov
xchg
sub
mov
cmp
negb
add
and
or
add
jecxz
ja
dec
sbb
pop
cmc
sahf
jns
std
pop
icebp
mov
out
test
mov
and
push
push
cmc
or
mov
xor
push
push
sbb
add
cmp
cmpsl
shlb
cmp
add
add
pop
pop
add
pop
lock
adc
jo
sbb
xor
jno
sti
sbb
loopne
and
cmpsl
mov
imul
pop
mov
mov
sub
add
or
push
xchg
sub
sbb
arpl
stos
cmpsl
fucom
cmp
adc
push
arpl
mov
dec
into
pop
xchg
mov
push
and
mov
pop
ret
rcrb
gs
pop
fs
adc
stos
outsb
out
flds
or
jno
cmp
push
adc
push
sahf
sub
cmp
and
jns
push
test
mov
out
push
mov
pop
inc
adc
outsb
cmp
adc
add
xlat
jb
sbb
dec
frstor
xchg
xchg
dec
rorl
movsl
lock
push
xor
enter
lcall
mov
pop
add
sbb
stos
fwait
repz
aaa
jecxz
xorl
je
sub
sbb
orb
inc
dec
in
fstpt
inc
js
push
mov
in
fistl
push
not
insb
cpuid
in
jl
xchg
loope
xlat
mov
aaa
aam
add
ret
shlb
push
jo
nop
xor
outsl
mov
mov
adc
dec
fstpt
fistpll
cmp
ds
rclb
into
pop
repz
fwait
pop
dec
mov
adc
xchg
mov
or
movd
adc
add
mull
xchg
movsb
xchg
nop
sahf
hlt
xor
fsubs
inc
push
div
xchg
ror
sub
push
push
pop
sub
enter
mov
inc
imul
pop
insl
loopne
xor
jmp
loop
push
fsubrl
xchg
jbe
rol
sbbl
nop
mov
aam
icebp
popf
add
mov
sub
bound
cmpsl
pop
les
arpl
icebp
mov
ficompl
stos
xchg
shrl
imul
sbb
setle
pop
add
dec
popa
leave
enter
subb
pop
loop
daa
pop
fimuls
and
cmp
popf
ss
jg
add
bound
mov
insb
pop
jo
shll
push
jb
dec
cmp
dec
int
stos
idiv
aaa
roll
mov
fildll
jl
jg
fimuls
and
cmp
popf
ss
rolb
outsl
sahf
xor
xchg
int3
and
mov
pushf
iret
sbb
cltd
xchg
bound
sarb
and
inc
jo
sub
adc
iret
sub
adc
in
cwtl
enter
jmp
inc
add
add
sahf
out
push
push
cmp
jns
ret
sbb
scas
lahf
clc
cmpsl
leave
rcll
cmpsl
mov
adc
xchg
mov
mov
js
out
sti
jbe
xchg
mov
ret
push
scas
push
std
xchg
cmp
and
das
jge
fdiv
pop
sahf
xlat
xchg
shlb
pusha
jl
scas
inc
mov
fs
dec
inc
mov
mov
lret
in
hlt
add
mov
cmp
ljmp
jo
fisubs
push
mov
jno
ds
mov
sarl
cld
add
addb
mov
std
lock
or
jge
xor
mov
mov
push
pop
int3
xchg
lods
inc
aas
lret
jg
insb
jle
ljmp
jl
lods
inc
mov
shr
mov
pushf
push
ret
cmp
daa
cmp
sahf
or
xor
loop
in
fs
cmp
mov
mov
xor
int
inc
fcmovbe
mov
stc
popa
fimull
adcb
inc
stos
iret
inc
mov
mov
cmovp
out
cmp
xchg
int
mov
in
mov
xchg
sbb
lods
test
imul
das
cli
filds
out
les
cmp
insl
cli
mov
rolb
out
popl
dec
sbb
sbb
pop
lret
push
pop
lock
xor
push
movsb
fdivs
clc
mov
loope
test
push
push
test
xchg
hlt
es
insl
sub
or
pop
int3
add
mov
mov
aam
cmpsl
cwtl
cmovp
mov
push
cltd
fsubs
frstor
cmp
or
lret
stos
clc
pop
clc
xchg
popa
lea
inc
dec
mov
sarb
lods
das
push
mov
hlt
fmul
call
ret
sub
cwtl
lods
add
imul
in
orb
pusha
lret
mov
clc
lds
out
xor
dec
jle
outsb
fadd
push
or
mov
es
fcmovnb
inc
cli
fstpl
mov
xlat
inc
cmp
cwtl
cmp
cs
dec
sbb
int
pop
add
push
repz
mov
enter
daa
add
imul
loop
out
and
insb
daa
or
clc
push
cmp
data16
jmp
dec
das
leave
pop
dec
in
negl
cmc
test
pushf
imul
xchg
pop
rcll
fstl
stos
enter
imul
iret
enter
or
mov
mov
mov
imul
jge
in
aaa
mov
add
jb
cmp
or
stos
orb
xor
and
jmp
or
sahf
add
inc
aas
xor
stc
adc
xchg
fldt
xchg
cmp
jne
mov
inc
jl
push
jg
pop
pop
cmp
sub
into
dec
xlat
repnz
out
fadds
arpl
imul
adc
xor
cmp
andl
pop
pop
add
dec
sbb
daa
loopne
jno
dec
xlat
mov
imul
cmpsl
or
xchg
sub
pop
cwtl
inc
ja
jbe,pt
xor
cmpl
or
cmp
sbb
xchg
icebp
das
movsl
fdivs
in
jnp
jns
push
push
mov
jg
pop
xchg
mov
dec
inc
jp
or
jb
ss
test
stos
sbb
dec
bound
xchg
lret
ds
fisubs
xor
out
rolb
mov
and
sti
lds
dec
dec
mov
sub
push
pushf
xor
dec
rcll
cmc
add
out
inc
push
mov
adc
xor
loope
ficoml
data16
ljmp
fidivl
loop
gs
int3
hlt
cmpsl
xchg
ret
popa
adc
adc
inc
cli
lret
jge
movsl
mov
mov
adc
xor
cmp
testb
jmp
push
shlb
mov
ss
mov
jmp
cmp
lods
sub
or
mov
add
mov
xor
push
sbb
je
or
mov
sti
dec
int
nop
cmp
fcomps
fiadds
push
push
pop
fsubrl
xor
and
jne
xchg
push
cmp
xchg
pop
and
jmp
lcall
push
mov
call
pop
cmp
movsb
or
fists
dec
or
pop
ror
adc
mov
fdivr
sbb
mov
fucomip
adc
xor
mov
jne
sub
or
loopne
movsl
das
pop
inc
xor
push
add
mov
jmp
outsl
pushf
xor
out
mov
aas
pop
lds
mov
and
loop
push
mov
cmp
jmp
pop
mov
arpl
sub
movsb
or
push
adc
dec
adc
fiaddl
scas
lds
mov
adc
idiv
or
cmp
pop
test
iret
pushf
call
inc
dec
adc
fldcw
or
or
push
int
mov
jge
add
rcrb
mov
sarb
cmpsb
lcall
aaa
fwait
bound
in
movsl
mov
inc
aad
cmp
inc
loope
cltd
pop
test
repnz
aam
mov
inc
das
mov
jmp
inc
vpshuflw
test
test
addl
dec
movsl
mov
aam
mov
push
inc
cmc
test
inc
and
scas
out
inc
mov
or
jp
adc
xchg
lea
mov
xor
push
out
sarl
mov
jmp
out
sbb
xchg
and
std
inc
rcr
jl
cmp
in
sahf
jp
clc
add
std
push
inc
xlat
bound
add
adc
mov
loop
dec
js
sub
shlb
push
jnp
lret
ljmp
cmp
mov
fsub
test
dec
mov
sarl
shlb
or
add
shr
pop
cmpb
pop
push
shrb
pop
mov
mov
movsb
repz
mov
fsub
test
dec
mov
rcll
jl
dec
rcrb
jo
mov
jb
mov
push
popf
lret
test
sub
or
dec
aad
in
or
aam
scas
out
int3
dec
pop
lcall
sub
xchg
js
inc
cld
mov
je
pop
mov
or
push
jnp
pushf
push
jne
push
jae
inc
insb
loop
sbb
ja
mov
xor
jne
jecxz
push
scas
ss
push
out
mov
or
sub
xchg
add
lods
adc
mov
arpl
dec
sarl
mov
xor
movsb
aam
loope
gs
or
jg
aam
stos
pop
mov
pop
imul
pop
pmaxub
ss
out
xchg
into
dec
cltd
pushf
dec
jl
cwtl
les
jle
xor
lret
add
mov
adc
xchg
pop
scas
enter
add
add
daa
clc
inc
loopne
xchg
sub
mov
inc
add
jle
test
or
rclb
repz
mov
fdivrl
jg
mov
loopne
mov
cltd
es
mov
or
mov
cs
aam
pop
push
hlt
sub
pop
push
cmc
cmp
mov
lahf
xchg
and
cmpsl
ds
mov
inc
and
push
mov
inc
cmp
xor
fildll
mov
jecxz
enter
xor
mov
xchg
mov
insl
push
push
daa
xor
lods
dec
enter
movsl
aad
mov
rclb
inc
xor
in
and
or
sub
and
jnp
sbb
push
sub
inc
sub
and
cmp
mov
fstpl
das
cmp
stos
bound
in
pop
cmpsb
clc
jb
push
nop
addr16
inc
sbb
cmp
mov
sbbb
and
push
ret
jmp
mov
and
sbb
clc
std
cmp
iret
mov
or
sbb
cmp
xor
in
roll
adc
aad
rorl
in
cmpsb
dec
xlat
les
mov
adc
mov
adcb
inc
jl
jo
push
mov
incb
outsb
les
or
in
inc
and
push
mov
push
stos
cmc
stos
or
adc
cs
mov
decl
xor
cwtl
insl
add
clc
xchg
mov
loope
xor
sbb
loopne
sbb
out
sbb
add
pop
les
out
cld
cmp
pop
imul
mov
inc
scas
enter
jae
or
into
mov
mov
push
loop
lds
pop
mov
xor
insb
mov
cmp
loop
mov
push
fcoms
add
fildll
sub
cmc
lea
lret
dec
add
mov
fisubs
and
pop
xor
push
lret
mov
inc
mov
xchg
inc
rcl
out
dec
and
dec
xchg
test
pop
imul
mov
cmpsb
cmc
jnp
test
jne
pop
aas
xchg
push
xor
push
sbb
mov
stos
add
xchg
cmc
xor
test
ljmp
scas
sbb
mov
mov
cmp
xor
mov
dec
stos
js
insb
test
add
pop
int3
sarl
sbb
pop
jmp
fdivp
adc
jbe
mov
adc
out
lret
mov
jmp
pop
ds
movsl
add
cwtl
cmp
pop
les
pop
cmp
adc
fsubr
push
jle
inc
adc
aas
mov
mov
mov
movsb
fstpt
inc
or
add
stos
js
les
mov
inc
fisttps
push
and
push
xor
jno
dec
push
jns
push
adc
pop
mov
sub
std
les
mov
add
or
ja
mov
fmul
cmp
push
pop
mov
sbb
or
jp
ret
cmpsl
aaa
mov
pop
jge
or
jbe
mov
xchg
sub
cmpsl
mov
lods
out
pop
xchg
sarb
mov
out
jne
inc
and
inc
pop
xor
and
int3
icebp
sub
mov
and
jecxz
test
shlb
push
std
popf
cmp
push
fnstcw
jb
pop
push
add
fwait
addr16
mov
shlb
xor
mov
pop
and
les
mov
lret
add
inc
bound
fwait
inc
push
cmp
cmp
into
sub
aad
xchg
cmc
jae
bound
inc
cmp
and
jg
add
mov
pop
cs
lock
fnstsw
cli
sbb
dec
xor
movsb
inc
push
imul
enter
scas
mov
rorb
inc
rolb
lret
ret
or
mov
shll
cmpsl
je
jecxz
jb
cmp
adc
xlat
stos
inc
das
jne
add
jne
movsl
scas
imul
adc
scas
aas
jg
jae
adc
sbb
icebp
xchg
jns
add
loopne
outsl
fwait
lods
xchg
addr16
pop
aam
mov
adc
fcmovbe
shrl
sbb
das
or
inc
call
outsb
ss
test
pusha
daa
ja
sbb
daa
stc
idiv
push
mov
adc
xor
test
inc
or
push
push
or
adc
cmp
test
push
imul
aaa
movsb
push
fwait
xchg
in
dec
sub
mov
fnstenv
sbb
fildl
sbb
mov
mov
lods
fsub
pop
out
imul
test
pop
jg
jns
mov
fdivrl
pop
sbb
xlat
sbb
in
stos
sub
and
test
pop
ja
or
adc
cmp
adc
mov
or
adc
adc
adc
mov
cmp
and
into
leave
inc
inc
mov
push
adc
push
xchg
or
loop
out
push
mov
pop
and
or
xor
sub
fsubrs
push
xchg
aaa
into
mov
clc
rcll
fimuls
cmp
je
push
cmp
cmp
lret
stos
push
lods
pop
ficoml
lods
mov
in
and
rcrb
xchg
pop
cmp
or
inc
test
push
lret
adc
lods
sbbb
cmp
ljmp
and
aam
pop
or
dec
enter
mov
or
stc
pop
ficoms
rorl
jae
stos
adc
fwait
pop
inc
mov
orl
andb
outsb
lds
xor
pop
call
inc
insl
or
push
cs
enter
fcom
adcb
adc
inc
test
rcrl
push
jne
es
push
add
test
and
fsubs
or
loope
stc
jg
sbb
mov
add
loopne
je
testb
sarb
push
or
arpl
faddl
adc
enter
sbb
leave
inc
cltd
pop
roll
jle
fdivrs
sbb
mov
dec
stc
mov
ret
or
cwtl
cmp
test
jge
push
or
bound
sahf
stos
inc
mov
and
lods
cwtl
and
xor
in
pop
pop
mov
je
lret
ss
mov
out
mov
out
jle
lock
mov
shl
sbb
bound
test
shll
out
stos
loopne
pop
xchg
jb
call
test
cmc
xor
mov
outsl
add
inc
or
xchg
popf
fisubl
dec
pusha
mov
and
xor
out
testl
roll
testb
lds
pop
subb
aaa
jmp
ret
cmpsl
gs
cwtl
push
jo
mov
xor
lds
lea
mov
mov
fcompl
xchg
ficompl
int
mov
adc
mov
andb
pop
mov
mov
dec
leave
adc
or
pop
xor
cmpsl
movsb
loop
ret
dec
data16
in
outsb
mov
ret
lahf
mov
pushf
jecxz
add
xchg
sub
and
test
sub
imul
jne
out
jle
ret
mov
mov
fisubl
xchg
mov
in
fs
push
filds
shlb
int
push
mov
dec
in
insl
dec
cmp
dec
repz
pop
ss
xchg
imul
sahf
aas
pop
add
mov
mov
clc
inc
cmp
and
cltd
or
icebp
jnp
sub
out
cmp
out
push
cwtl
pop
mov
dec
cmp
fwait
push
or
xor
loop
lds
mov
in
sbb
push
cmp
in
loopne
lahf
leave
and
push
xchg
rorl
addr16
test
ljmp
lea
mov
cs
std
repz
adc
cmc
mov
pop
in
mov
jp
pop
xor
push
ja
stos
sbb
xchg
push
jae
test
mov
mov
sub
cmp
cli
aad
jmp
mov
inc
shl
and
add
pop
icebp
pop
std
arpl
dec
ljmp
js
mov
add
add
push
cld
js
inc
mov
mov
in
imul
lret
pop
lock
in
and
or
jno
loopne
je
bound
add
pop
fdivrl
out
test
lret
cmp
jne
vpsrlq
xor
adc
push
push
jne
mov
dec
mov
push
lahf
rorl
sarl
in
xchg
push
xor
int
in
ret
xchg
mov
cmpb
cmpsl
and
pmuludq
addr16
iret
or
push
cmp
jle
push
ficoms
fimuls
in
repnz
mov
inc
inc
xor
addl
push
aaa
pusha
xor
pop
lcall
jns
pop
loope
sbb
cltd
das
jp
jmp
loop
sbb
sti
jmp
cld
insb
and
fisttpl
inc
stos
mov
mov
sbb
mov
cwtl
push
fistps
loope
int
add
mull
test
sub
iret
stos
push
loop
cmpsb
push
or
mov
or
mov
inc
sub
sub
lahf
stc
rorl
jle
fdivrl
dec
push
xchg
mov
cmp
je
inc
cli
jne
jmp
and
pusha
cmp
pop
jle
shll
dec
sub
jno
cltd
xchg
loope
lret
mov
out
jge
pop
xchg
inc
cs
lret
fistpl
imul
pop
push
cmp
mov
dec
add
sahf
rorb
sub
js
mov
xor
xchg
or
stos
call
inc
mov
cmc
xchg
mov
xchg
pop
pop
test
gs
cltd
cmp
into
inc
insl
pop
cld
xchg
sbb
xor
pop
fidivl
cmpsl
adc
test
adc
aam
push
outsl
les
push
insl
jb
and
cwtl
loop
dec
mov
lods
stos
fistps
dec
dec
mov
push
lods
inc
in
popf
add
dec
inc
loope
sbb
adc
je
sub
stc
sbb
lcall
sbb
sub
aad
mov
pop
insb
es
es
xchg
xchg
adc
sahf
fcomp
dec
nop
adcb
aad
mov
inc
cwtl
aas
pop
enter
inc
aad
iret
jg
jl
cvtdq2ps
insl
pop
test
loop
in
mov
jno
fs
shlb
xchg
or
xchg
inc
jno
dec
sti
pusha
sbb
mov
or
shrl
xor
cmc
daa
dec
cwtl
jne
jl
popf
daa
jns
mov
mov
inc
mov
xchg
mov
sbb
jno
mov
ljmp
ret
or
xchg
fdivrl
insb
add
adcb
pushf
mov
int3
cmp
cld
adc
ss
mov
mov
xchg
or
pop
xchg
test
mov
ds
test
test
sahf
andl
ss
inc
or
dec
xor
sarl
xchg
lods
jg
insb
aam
insb
pop
imul
push
aam
sub
cmp
xor
outsb
icebp
jns
push
mov
inc
pusha
js
scas
mov
les
leave
push
cmp
or
lret
out
call
in
push
loop
cmp
xor
mov
dec
push
scas
jmp
sbb
mov
fldcw
dec
insb
add
outsl
cmp
push
sub
dec
mov
fdiv
inc
js
push
xor
mov
into
inc
inc
push
mov
test
dec
fs
nop
jecxz
xor
loope
sbb
and
pushf
mov
push
adc
ret
ss
or
imul
data16
mov
rorb
mov
filds
jno
enter
cmp
imul
andb
addr16
add
insl
sbb
pop
lahf
leave
stos
jnp
mov
lods
call
mov
xchg
push
mov
shrl
lock
cmp
jecxz
clts
mov
cld
repnz
xor
enter
lcall
push
push
xor
mov
das
inc
cltd
pop
jno
xchg
jp
arpl
push
decb
mov
cld
pop
mov
jmp
bound
xor
jg
cmp
rorl
mov
pop
outsl
into
push
and
lret
subl
jo
xchg
and
add
mov
mov
daa
xchg
push
mov
shll
mov
push
mov
les
cltd
addr16
ret
mov
sbb
jne
push
scas
sti
movsl
test
push
and
rorb
test
fxch
xor
pop
cmpsl
lcall
lcall
jl
mov
sub
jecxz
mov
int
push
add
shlb
fwait
mov
xchg
fcomi
mov
in
out
sbb
ds
rclb
mov
int
aas
shrb
adc
adc
fnclex
outsl
push
cmpsl
xor
ds
add
xlat
mov
inc
mov
es
mov
in
xor
jo
subb
sbb
loop
cwtl
cmc
push
push
cmp
xor
push
jge
imul
mov
outsl
aas
mov
inc
jmp
imul
inc
or
loopne
adcl
push
fwait
dec
imul
dec
lahf
cmp
gs
lock
mov
lods
scas
ret
insl
push
es
sub
sbb
repnz
mov
xor
repnz
xchg
add
xchg
mov
cmp
mov
xchg
sub
sbb
jne
jmp
dec
mov
js
neg
in
imul
sub
push
mov
test
add
mov
cmp
cmp
aas
sbb
out
or
pop
and
aad
push
mov
clc
fsubp
or
adc
lcall
les
jns
sahf
out
xchg
sub
jmp
rcl
into
adc
mov
inc
cli
cmp
inc
pop
iret
pop
test
testl
inc
xchg
fildll
push
or
jle
push
les
mov
lods
pop
xor
je
cbtw
rcrl
jg
repz
xor
test
inc
icebp
mov
sbb
in
hlt
cmpsl
or
pusha
outsl
push
ret
ss
nop
sub
mov
and
xor
cmpsl
scas
cmpsl
ja
testb
pop
add
cmp
sqrtps
jns
dec
sbb
inc
dec
or
jmp
ljmp
inc
fstl
mov
xlat
test
int3
out
xchg
out
fisubl
iret
rcrl
aaa
mov
ret
jns
aaa
shl
push
adc
insl
inc
outsb
es
insl
push
sahf
cltd
dec
jae
out
inc
xor
inc
pop
sub
andb
andl
mov
xchg
in
sarb
ljmp
mov
jne
push
add
rcl
push
or
flds
lea
pop
lds
in
mov
push
push
inc
pop
xchg
mov
add
xlat
pop
or
into
aad
mov
insl
aad
leave
leave
xchg
xor
cmp
push
and
push
js
lcall
insl
out
insb
lods
dec
mov
dec
aam
push
stc
pop
lods
jecxz
jmp
push
xchg
mov
sti
ss
mov
push
in
mov
lret
adc
insl
pop
jp
pop
dec
cmpl
add
fdivr
movsl
mov
push
xchg
andl
cld
movsl
lock
insb
push
pushf
xorb
popf
jmp
xor
inc
push
aam
aam
outsl
imul
je
lret
xchg
push
adc
rorb
and
andb
and
cmpsb
pop
aam
ficoms
sub
mov
ret
sbb
out
leave
or
xor
inc
dec
in
cwtl
outsb
mov
fcomip
xchg
jle
cli
or
sbb
repnz
xchg
xor
cmp
mov
fdivl
imul
fstpt
or
inc
sar
je
sub
add
rorb
push
fisubl
test
into
fists
mov
inc
daa
mov
inc
and
icebp
sub
dec
mov
pop
jno
add
sbb
mov
push
bound
loope
popa
push
push
mov
dec
das
push
test
push
push
gs
xlat
inc
ds
push
inc
movsb
xchg
mov
jne
adc
pop
jmp
outsb
sub
or
sbb
decl
test
sub
lds
sub
fidivs
lcall
push
push
dec
mov
out
push
add
pop
sub
cli
dec
push
jo
jo
or
pop
sbb
cwtl
jp
dec
and
cwtl
or
or
push
psubw
xor
pop
adc
leave
cmp
shrb
test
pop
movsb
xchg
mov
add
xor
in
mov
sbb
add
sub
lds
sub
jge
iret
xor
loopne
scas
mov
insb
cs
mov
sub
jl
cwtl
pop
out
rolb
push
sub
dec
aam
loopne
hlt
shlb
cmp
stos
xchg
gs
js
test
imul
jge
call
scas
push
scas
sbb
and
pop
adc
jmp
jno
bound
dec
cmp
xchg
push
bound
in
leave
add
push
and
ret
subb
cwtl
dec
or
push
aam
ja
in
xor
pop
cli
cld
lahf
out
push
pop
fdivl
test
push
pushf
and
push
int3
mov
subb
and
pop
xor
inc
xor
test
sbb
push
popa
dec
adc
jecxz
add
outsb
fisubrs
out
ja
jno
adc
jb
add
pop
add
sbb
pushf
inc
jno
jnp
xchg
movsb
out
jle
inc
adc
inc
and
mov
mov
push
and
pop
xchg
add
xor
mov
jno
or
xchg
dec
sub
ds
adc
jp
push
aaa
xchg
in
add
ror
and
cmp
repnz
std
xchg
iret
arpl
or
jns
data16
add
xor
test
dec
sub
fdivrl
icebp
test
lret
lcall
xor
dec
sub
incb
cli
insl
and
xchg
mov
and
push
lea
xchg
lea
or
xchg
inc
push
sub
xor
push
cmpsb
sub
dec
lretw
arpl
push
xchg
lcall
sahf
mov
cs
push
fyl2x
icebp
lea
inc
add
sbbb
iret
adc
sbb
xchg
fwait
mov
into
or
add
cmc
pop
dec
fbstp
sbb
and
aad
fs
lret
pop
inc
jge
jp
addr16
and
mov
mov
in
pop
roll
adc
inc
movsb
shlb
je
mov
cmp
popf
out
xor
or
loope
lret
dec
add
and
xchg
pop
jae
bound
mov
pop
in
xor
mov
jbe
mov
push
sub
sub
push
pop
movl
mov
jge
loopne
cmpsb
sbb
mov
dec
push
xchg
lret
jp
jae
sti
xor
xor
decb
in
shrb
dec
and
rcll
pop
sbb
adc
ss
push
jle
popf
fidivs
pushf
adc
add
fldenv
ficoms
es
ret
out
idivl
ljmp
cmp
add
xchg
or
add
xchg
jbe
xchg
pusha
ret
lock
xor
bound
mov
leave
ja
mov
jl
and
rcl
push
les
inc
xchg
sub
jne
pop
dec
fadds
movsb
cmp
inc
mov
icebp
imul
lcall
jbe
loopne
lret
scas
rorl
daa
add
sbbl
pop
fldcw
outsb
inc
or
push
cmp
int
dec
mov
push
test
push
inc
sub
lods
sbb
sub
ljmp
dec
das
and
jne
repnz
inc
xchg
pop
and
inc
mov
adc
mov
jnp
xor
icebp
icebp
mov
rcll
js
jno
dec
shl
xor
stos
rorb
movsb
nop
pop
int
movsl
das
adc
jo
pop
dec
call
jge
out
cld
push
sub
mov
mov
mov
loop
cli
adc
imul
or
lods
mov
lds
push
leave
notl
rorb
push
out
jge
aas
out
ja
insb
outsb
rcll
lahf
adc
inc
push
testl
and
add
and
repz
arpl
dec
aam
jge
rcl
sub
leave
jns
sbb
xor
lcall
iret
jbe
inc
scas
push
imul
les
ret
adc
cmc
adc
push
xchg
das
lds
dec
jae
ss
adc
jmp
jns
push
pop
mov
mov
outsl
mov
cld
and
adc
add
sbb
js
pop
ds
pop
int
sub
mov
add
mov
dec
repnz
sub
inc
mov
sub
jnp
sarb
mov
mull
testl
inc
scas
enter
ret
mov
jns
sub
sub
out
clc
bound
mov
and
int3
imul
inc
popf
mov
inc
sub
cmp
xor
jne
jl
xchg
or
jmp
push
mov
add
outsl
sub
jg
sbb
fsub
push
adc
fdivp
iret
imul
pop
inc
negl
imul
sahf
adc
adc
or
mov
into
fistpl
into
push
insl
les
sbb
mov
or
jge
push
cmp
cwtl
cmp
inc
hlt
sub
ljmp
stos
inc
insl
xchg
mov
push
inc
out
test
and
push
roll
pop
dec
lock
mov
or
pop
cmp
cmp
rcll
mov
loope
scas
xchg
in
xor
outsl
mov
xchg
je
es
xor
or
cmp
mov
jge
mov
pop
call
xor
hlt
imul
xchg
mov
fs
pop
and
fdivl
js
lret
ss
sahf
iret
jnp
xchg
cmp
dec
div
xchg
sub
push
cmp
es
pop
adc
imul
and
pop
call
lret
stos
mov
inc
sahf
cmc
mov
hlt
sbb
and
out
in
and
cmp
adc
repz
pop
xchg
inc
aam
stos
scas
push
inc
mov
or
es
sub
neg
out
adcl
pop
roll
lods
jo
leave
add
aaa
movsl
in
mov
add
jmp
or
rorl
mov
mov
cmc
lret
fwait
mov
mov
cli
add
xchg
sti
int3
or
popf
push
fmul
rcll
out
jmp
cwtl
aas
push
arpl
stos
mov
int3
xchg
imul
mov
dec
mov
jecxz
mov
imul
pop
pop
jne
std
and
add
mov
sub
jbe
jbe
adc
cmp
lahf
jbe
repz
or
inc
fwait
insb
push
popa
jnp
jno
and
mov
mov
mov
aas
sub
xchg
xor
xorb
jns
mov
scas
leave
mov
pop
or
test
fwait
jmp
test
bound
hlt
aaa
hlt
jb
xchg
sbb
cmc
mov
inc
mov
loop
inc
mov
mov
cmpsb
cli
in
sbb
test
adc
mov
sub
fwait
and
xchg
xor
xchg
aas
movsl
xorl
mov
pop
cmp
mov
mov
mov
inc
mov
or
into
in
xchg
out
mov
out
loop
push
jae
out
pop
push
cs
sbb
stos
inc
sbb
iret
sti
add
inc
mov
pop
mov
mov
mov
xchg
fisttpl
mov
inc
mov
add
cmpl
ret
dec
mov
out
aam
imul
test
das
inc
sub
in
push
cmp
mov
repnz
shrb
cmp
mov
idivl
out
dec
fwait
sbb
icebp
popf
inc
mov
add
xchg
mov
mov
fdivrp
out
mov
dec
add
jno
jbe
repz
or
inc
mov
mov
into
dec
sub
lea
pop
dec
inc
or
mov
adc
shlb
xor
ljmp
sub
and
inc
fnstenv
les
mov
adc
cmc
in
mov
jb
cmc
in
adc
adc
sub
out
add
xchg
pop
xor
lret
add
and
jbe
cli
xchg
push
or
dec
mov
rclb
imul
lock
sti
iret
adc
xchg
mov
add
mov
clc
jnp
xor
xchg
push
cmp
pop
add
addl
mov
clc
fidivs
sar
push
or
cmpsb
idivb
xchg
out
push
xchg
xor
js
xor
mov
pop
imul
add
imul
xchg
and
decl
in
pop
test
sarb
fs
mov
imul
clc
sub
movsb
adc
repz
xor
pusha
or
mov
mov
jbe
gs
or
sub
loopne
dec
pop
cli
pusha
push
inc
inc
jae
loopne
pusha
mov
mov
mov
push
sahf
add
xchg
nop
pop
cmp
aam
add
daa
pop
cmpsl
cmp
mov
ret
das
jecxz
out
and
nop
movl
and
ljmp
mov
test
or
dec
aaa
data16
cmp
xchg
xchg
xchg
orb
movsl
sub
xchg
clc
lret
jo
movsb
dec
int3
mov
cmp
push
push
cwtl
pusha
inc
call
pop
add
aaa
std
cmpsl
or
mov
jnp
int3
clc
sub
ds
enter
int
addr16
es
push
in
insl
sub
lret
pusha
or
rorb
fs
sbb
test
pop
xchg
sbb
out
push
jl
dec
cmp
or
lret
fstps
roll
mov
enter
jp
dec
add
mov
mov
add
xlat
mov
punpckhbw
pop
inc
sub
add
ja
jae
mov
pop
sbb
int
cs
fldenv
push
jle
or
mov
les
mov
jne
mov
out
popa
push
mov
sahf
nop
ss
pop
pop
cmp
out
stos
pop
aas
sbb
loopne
lods
sbb
jmp
pushf
push
out
adc
in
pop
xchg
movsl
loop
test
cli
enter
inc
cmp
jmp
push
and
fsubrp
sub
dec
hlt
mov
negl
jns
pop
jno
adc
cmpb
das
inc
jnp
xchg
andb
pop
leave
push
clc
inc
test
xlat
sbb
jle
sub
js
sub
sbb
ret
sbb
and
cmp
mov
aas
sbb
jnp
fs
inc
clc
enter
xchg
jp
push
outsb
add
divl
mov
in
fsub
mov
sbb
mov
int
sbb
pop
inc
dec
pop
adc
add
ds
xchg
pop
mov
xchg
and
jb
scas
jne
movsl
fnstsw
mov
rcrb
mov
inc
mov
push
cmc
hlt
adc
in
dec
sub
outsl
xchg
lret
fwait
mov
xchg
stos
cmpsl
cmc
mov
aas
div
jp
inc
loopne
mov
pop
mov
stc
mov
xchg
pop
lret
jbe
addr16
bound
in
imul
dec
or
xor
in
fxrstor
mov
mov
pop
sub
jbe
xorb
pop
cmpsl
push
cs
test
cmp
inc
inc
jle
les
or
sbb
loopne
lods
sbb
jmp
mov
sub
clc
xor
jge
test
push
pop
jo
jge
mov
in
aam
mov
repz
mov
test
jb
aam
push
stc
sub
and
mov
xor
call
and
pop
outsl
cmpsb
lds
lret
or
or
clc
les
loope
or
mov
dec
scas
push
dec
out
xor
addr16
out
push
dec
aas
push
jl
jns
pop
jno
adc
cmpb
das
shrl
insb
fimull
xor
fwait
add
push
adc
movsb
daa
mov
fistpll
iret
dec
mov
fs
popf
fistpll
push
pop
add
insb
xor
sbb
push
jno
iret
in
mov
push
xchg
mov
lods
dec
bound
jo
jmp
mov
push
mov
popf
daa
add
xlat
testl
sbb
cmp
pusha
xchg
add
jae
inc
push
stos
in
inc
out
cli
stos
sub
sub
dec
js
mov
test
push
dec
xchg
mov
mov
mov
cmp
sarb
roll
adc
lahf
or
or
fs
daa
out
and
fcmovnbe
outsl
xchg
or
fldenv
aas
andl
adc
sub
xor
stos
pop
adc
and
mov
popf
adc
jge
decb
movsl
shll
push
ret
pop
adc
cmp
aaa
dec
jecxz
stos
pop
sbbl
cmp
sbb
cmc
and
xchg
fwait
fwait
cmpsl
dec
cwtl
jns
mov
sti
jnp
and
push
jle
mov
xor
dec
push
pop
clc
inc
outsl
adc
push
fistl
or
xor
imul
inc
push
iret
lahf
xchg
aad
sub
pusha
adc
stos
sbb
xor
push
pop
push
je
mov
pop
cmp
cmp
clc
repnz
push
sub
ss
xchg
sub
mov
leave
push
test
enter
cmp
ret
aad
test
dec
filds
popf
pop
into
pushf
fists
lock
or
mov
inc
loopne
jae
or
cmp
aad
movl
mov
popa
mov
push
pusha
add
sbb
xor
ds
sub
fs
pop
cmp
mov
cs
sarl
and
mov
dec
les
mov
faddl
test
insb
hlt
jg
and
out
fsub
inc
les
lock
jo
mov
cs
mov
test
int
or
inc
sbb
pop
inc
enter
dec
inc
jmp
lea
popf
jns
int3
popf
xchg
leave
cmc
loopne
adc
rcr
nop
push
xlat
sub
jno
fcoms
or
cmp
hlt
mov
mov
roll
mov
data16
gs
jl
ljmp
jle
push
test
enter
cmp
testl
aad
cmp
jbe
mov
pop
pop
jl
fidivrs
adc
mov
cltd
out
inc
sti
pop
repnz
inc
add
test
push
sbb
xor
jnp
ds
mov
or
push
sbb
ret
xchg
and
or
ror
imul
adc
cmp
push
gs
cmp
xchg
inc
xchg
int
adc
fcoms
adc
pop
js
scas
mov
sub
xor
int3
or
dec
mov
push
cld
dec
fcoml
divb
add
xchg
and
cmp
sub
xor
mul
movsl
orl
int3
pop
push
les
push
icebp
dec
repz
fimuls
popl
fcomps
ds
mov
dec
sub
push
popa
cs
push
subl
out
loopne
mov
lock
jge
mov
fnstsw
lock
lds
inc
bound
push
jo
adc
lods
mov
mov
push
lret
cmpsb
in
fwait
loope
jle
cmp
out
xor
test
sti
or
mov
in
push
out
xchg
ds
xchg
xchg
int3
or
xchg
testb
iret
push
dec
setl
test
fsubrl
adc
sub
lds
lret
lret
test
push
xchg
push
insb
jmp
or
outsl
fsubr
je
popw
movsb
mov
sub
xchg
pop
pop
dec
lods
inc
or
testl
mov
aad
push
mov
test
popa
sbb
rcll
inc
stos
je
push
push
inc
mov
inc
cmp
in
jl
ficoml
insb
pop
iret
mov
cmp
fcoml
in
std
ret
adc
out
xor
lock
cmpsb
inc
mov
clc
mov
xor
mov
out
cmpsl
rorb
xchg
popf
xor
loopne
sub
pop
daa
loope
mull
rorl
pushf
or
fisubrl
cmp
mov
leave
sarl
mov
push
xchg
loopne
or
out
and
xlat
dec
mov
mov
sbb
pmaxsw
pop
pop
daa
push
fdivrp
inc
push
cltd
push
fisttpll
jl
jl
je
mov
add
adc
mulb
jb
pop
add
xchg
sub
pop
clc
test
das
loope
xchg
enter
or
adc
push
inc
icebp
pop
mov
daa
xchg
je
xor
adc
shl
je
rorl
rorl
cs
add
call
push
lods
lds
adc
insl
aas
xor
mov
lahf
sbb
nop
push
push
sbbb
fs
out
mov
xor
imul
outsb
data16
in
cld
fsubs
lret
psrlw
repz
bound
mov
mov
pop
sub
push
or
jo
jb
daa
das
scas
cmpsl
cmpsb
mov
cmpsl
pop
adc
add
ret
jg
loopne
aad
ja
adc
cmpb
repz
push
fimull
xor
aas
rclb
cwtl
outsb
mov
fxch
dec
push
jb
fistps
sbb
mov
mov
clc
std
inc
or
xlat
cld
pusha
pushf
xlat
ja
lock
fistl
or
pusha
push
pusha
js
sbb
xchg
data16
mull
sub
inc
and
xor
sti
loopne
push
out
cmp
push
daa
push
rcrl
in
jecxz
mov
ret
adc
imul
xchg
xchg
cmp
lea
andl
enter
notb
inc
loope
outsb
adc
cmp
sti
mov
inc
aad
movsb
and
and
cmpl
clc
mov
fimull
out
xor
dec
or
ret
add
je
imul
cmp
fldl
stos
sbbl
pop
and
in
xchg
leave
insb
mov
jmp
xchg
or
cltd
dec
jge
bound
mov
cmpsb
jg
or
mov
clc
stos
cmp
push
dec
shll
sarb
pushf
xor
xor
jmp
adc
pop
mov
mov
xor
out
int3
jo
push
test
loopne
test
iret
xor
fsubl
cmpl
and
pop
jecxz
cltd
pop
movsl
push
mov
xlat
insb
xchg
mov
loop
xchg
push
ss
jb
out
bnd
aas
scas
psrlq
or
pop
xor
rolb
sbb
mov
roll
dec
and
xchg
inc
popa
push
sub
les
es
or
mov
push
pushf
inc
xor
cmp
push
or
jle
adc
and
sub
mov
xchg
test
xchg
push
push
pop
enter
enter
xor
cmp
xor
in
xor
cmc
es
jno
lahf
inc
daa
or
fsubs
jns
mov
push
jecxz
pop
pop
and
xlat
sub
loop
hlt
dec
jl
push
fnstcw
or
adc
out
push
lea
jecxz
int
into
pusha
rol
mov
mov
in
add
dec
shlb
mov
cmpsl
mov
jne
aam
stos
lcall
push
and
push
add
mov
mov
xor
call
pop
add
push
inc
repz
loopne
push
mov
aaa
mov
mov
mov
imulb
bnd
sub
loop
js
xor
dec
stc
dec
fwait
stos
push
mov
mov
push
jae
jb
mov
sbbb
mov
adc
mov
dec
adc
sub
and
mov
mov
stc
iret
xchg
mov
pop
mov
pop
dec
aad
jmp
adcl
add
jb
scas
jne
cwtl
push
cltd
repnz
ljmp
popf
rcrb
mov
add
sbb
cs
enter
lcall
mov
daa
je
xchg
stc
add
neg
and
adcl
das
mov
aas
jmp
push
shll
into
push
movsb
addl
mov
sbb
daa
sub
mov
inc
and
ja
push
sub
or
sbb
neg
and
jno
add
ror
cmc
xor
cli
xchg
xlat
pop
test
pop
test
mov
cmpl
xor
sbb
or
mov
cmc
addr16
push
iret
fcmovne
les
aas
push
sub
call
fcmovbe
xchg
pop
cs
stc
dec
sub
sti
adc
stc
in
jne,pt
sub
pop
sbb
pop
add
sub
or
inc
icebp
testl
pop
in
mov
in
rcrl
mov
jle
jp
adc
ficompl
ret
or
sarl
xchg
fs
pop
insb
lret
loopne
popa
xchg
dec
sarb
add
pop
sbb
movsl
mov
mov
hlt
loop
lcall
out
mov
pop
push
gs
mov
xchg
lods
nop
iret
mov
jmp
xlat
pop
jmp
js
aam
jg
aaa
mov
xor
addr16
imull
inc
push
cmp
mov
sbb
jecxz
cmpsl
in
and
fisttpl
lock
rol
sbb
jns
xchg
push
out
cmp
pop
out
sahf
and
lds
aad
iret
in
mov
cltd
add
adc
push
pop
add
sub
in
in
jns
mov
dec
les
mov
adc
inc
cmp
shr
stos
ljmp
lods
inc
popa
jb
xor
cmp
jecxz
or
outsl
test
clc
sub
pop
std
inc
xchg
divb
lods
mov
sbb
adc
mov
ret
cmc
xchg
mov
ss
fwait
xchg
xor
mov
test
xor
mov
sub
shlb
and
pop
loop
jg
pop
mov
lea
iret
outsb
sub
into
ds
sarb
loop
es
push
mov
cmp
pop
sbb
xchg
cmp
scas
xor
sbb
jle
int
sub
in
dec
in
je
jp
fcoml
clc
sub
dec
fcomi
int
das
adc
outsb
aad
inc
out
jb
fbld
not
cmp
lcall
add
sub
out
out
ljmp
sbb
jecxz
stos
repz
popf
adc
out
test
jl
push
inc
out
fucomp
scas
imul
fiadds
pushf
loopne
mov
mov
repnz
add
mov
iret
jnp
inc
pop
dec
mov
and
movsb
lods
jl
pop
test
and
xor
cmp
mov
push
hlt
dec
dec
cli
pop
popf
es
add
mov
bound
sbb
sarl
pop
inc
pop
rcll
pusha
ja
push
xor
nop
js
sub
pop
lods
jmp
xchg
xor
cmp
je
pusha
jo
and
inc
cmp
add
pop
data16
sbb
shll
mov
mov
sti
popa
test
js
sub
or
andl
add
cmpsb
stos
lret
adc
jo
sub
fs
das
mov
test
ss
push
out
pop
mov
push
je
xchg
stos
lods
sbbl
fadds
dec
sub
gs
sbb
jb
dec
dec
push
push
mov
fldt
add
fldl
stos
jnp
adc
ljmp
lret
mov
enter
mov
mov
xchg
push
test
int3
pop
in
gs
in
mov
sub
add
sub
cmp
xor
add
aam
add
and
lock
inc
outsb
inc
or
dec
out
or
push
xor
cmp
fildl
sub
and
sbb
stc
insl
mov
or
or
cmova
lods
bound
loope
or
add
ret
and
and
pop
or
psllw
cmp
rclb
xchg
test
es
cmc
cli
lret
rolb
cmc
into
jnp
arpl
addl
pusha
arpl
in
mov
test
pop
dec
shlb
mov
xchg
ret
mov
cmp
jg
cmc
jmp
fstp
test
gs
xlat
push
jae
call
ja
and
iret
or
inc
mov
pop
lods
pop
ja
pop
xchg
rcll
not
xor
out
push
sub
aas
mov
pop
sub
or
inc
sbbb
cmp
sub
mov
xlat
and
ret
lcall
sub
aas
adc
icebp
mov
dec
pop
push
movsb
xchg
lcall
lea
cmpsl
push
inc
xor
inc
jae
loopne
mov
leave
pop
mov
mov
sbb
aad
hlt
cld
arpl
mov
out
aam
out
cwtl
sbb
mov
inc
jge
jge
cmp
iret
ret
xchg
out
idivl
dec
in
dec
push
repz
imul
mov
lods
jb
loop
es
imul
imul
and
int3
push
aam
sub
add
sbb
std
push
xchg
sub
mov
add
sbbl
loope
cmp
cmpsb
mov
sub
push
rol
das
adc
and
lret
ret
or
ret
jg
cmp
xchg
cltd
push
test
test
sub
pop
imulb
in
sbb
je
jl
out
pop
jp
jno
outsl
nop
jo
mov
cmp
notl
pusha
insl
xor
add
movsl
sub
lods
repz
icebp
orb
outsl
fiaddl
mov
push
xlat
in
push
int3
mov
push
enter
imul
cmp
sbb
pop
inc
jle
test
cmp
into
stos
mov
jo
fldt
dec
mov
adcl
xor
cmpsb
sub
mov
imul
pop
enter
push
xchg
shrb
outsl
mov
mov
xchg
adc
sub
add
xchg
push
out
push
in
pop
sbb
cmp
fisubrl
add
into
in
popa
ficompl
push
imul
les
pop
jmp
lret
mov
fbld
mov
sbb
jl
in
xchg
push
pop
jecxz
hlt
or
mov
jnp
mov
scas
fsub
sbb
enter
sub
xor
cmp
xor
mov
mov
pop
sub
clc
push
push
mov
sub
inc
mov
fdivrs
or
cs
xchg
mov
dec
pop
lds
fistpll
pop
xchg
stos
push
push
jb
dec
sbb
add
dec
cmp
xor
pop
test
dec
mov
mov
and
dec
fcmovbe
add
xor
mov
out
add
out
mov
stos
dec
ret
xchg
sbb
push
pop
sbb
nopl
mov
aas
mov
fnstcw
hlt
lods
lods
fwait
jns
adc
push
cmp
push
aam
dec
sub
daa
pop
call
pusha
mov
dec
push
sbb
dec
les
dec
lret
xorb
mov
cs
jo
ror
pop
fucomp
push
shr
das
mov
sub
push
fsin
mov
sbb
andb
in
fs
xchg
orb
mulb
inc
pop
jo
jp
out
xor
into
gs
pop
sarl
push
mov
push
xchg
sbb
imul
clc
mov
mov
jp
call
mov
fbstp
pop
push
cmp
lahf
movsb
in
xchg
xor
inc
dec
test
and
ror
xor
popa
cltd
into
push
arpl
add
and
movsb
dec
outsb
cwtl
daa
or
test
dec
fcmovu
out
xchg
adc
mov
fidivrs
out
xchg
pop
ffree
mov
jbe
mov
out
repnz
ret
clc
test
test
std
add
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
push
mov
pop
pop
call
cmc
mov
sbb
xlat
les
cs
pop
gs
loope
hlt
sbb
fidivrs
push
sub
mov
add
sub
sub
push
movswl
pop
pushl
mov
pop
mov
sub
mov
sub
mov
sub
mov
push
sbb
popl
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
or
add
addr16
mov
cmpb
ljmp
cmc
decl
test
jecxz
test
push
aad
stos
clc
add
shll
nop
or
adc
and
pusha
fs
stos
repnz
shl
jno
xor
ds
sub
xor
in
jp
jecxz
cmpsb
aaa
inc
pusha
jnp
loopne
cli
rorl
add
add
xchg
add
rorl
int
push
in
and
push
into
push
pop
pusha
inc
movsl
cli
sbb
cmp
jl
xchg
cmc
sub
mov
bound
jnp
shll
jecxz
dec
rorl
cmp
adc
aad
mov
xor
or
fildl
cli
shrl
cli
shl
jnp
mov
jecxz
in
cli
popa
ds
mov
sub
rcr
movl
jg
push
cli
shl
sti
addr16
xchg
aaa
hlt
push
cs
jecxz
rolb
sbb
arpl
clc
popa
imul
mov
jmp
dec
push
or
mov
sbb
dec
jb
cwtl
mov
inc
add
shlb
inc
out
xlat
rorb
mov
mov
and
mov
or
pop
pop
or
inc
into
loope
adc
in
mov
or
dec
sub
jecxz
mov
or
ret
pop
fdivrs
mov
pop
push
pop
das
and
stos
or
sbb
mov
shr
popf
loope
dec
xor
jo,pt
cmp
clc
dec
jno
pop
loopne
ret
arpl
xchg
shl
stc
movsb
sub
mov
insl
sti
dec
loope
test
jae
cmp
imul
dec
mov
dec
jne
je
fisubrs
out
jo
aam
nop
cmc
orb
mov
adc
arpl
jp
inc
cmp
mov
jge
and
jnp
stc
out
loope
mov
clc
stc
out
bound
add
push
in
cmp
stc
out
mov
ucomiss
ficoml
mov
loop
lea
push
lods
movsl
and
insb
movsb
or
jge
in
adc
stc
out
push
xchg
and
and
pop
xor
mov
and
shrb
jno
test
fdivs
cld
ss
mov
add
icebp
popf
jecxz
in
ljmp
cld
scas
add
hlt
aaa
arpl
cld
sahf
movsb
aam
or
dec
addr16
in
adc
cltd
pop
push
fucomp
mov
fisttps
pusha
enter
aas
mov
into
shl
mov
sub
mov
in
push
cld
ss
jmp
loope
mov
mov
arpl
xchg
icebp
or
in
pop
dec
cmp
shl
jne
hlt
dec
data16
mov
cmp
int3
add
mov
shlb
mov
jns
sbb
mov
pop
pop
cmp
cmpsb
jno
xchg
insl
inc
sub
in
dec
xchg
dec
dec
dec
adc
jge
add
cmp
cmpsb
inc
sub
in
dec
xchg
insl
pop
mov
dec
cmp
pop
dec
xor
xchg
cmp
sbb
cmp
lret
mov
cmp
dec
cmp
push
mov
cmp
out
add
fcmovbe
popf
mov
pop
and
xchg
sbb
cmp
sbb
push
xor
dec
xor
sbb
enter
shlb
in
cmp
push
dec
cmp
mov
cmp
push
dec
mov
sub
addl
cmp
dec
aam
xor
dec
shlb
ss
pop
int3
pop
mov
cmp
jecxz
cmp
dec
pop
shlb
sbb
xor
cmp
pop
sar
dec
sbb
xor
cmp
pop
sti
cmp
aam
xor
dec
shrb
mov
dec
cmp
inc
int
cmp
dec
sbb
cmp
int
test
popa
mov
push
cmp
push
fstpt
movsl
scas
shlb
ret
mov
cmp
jno
dec
aam
xor
dec
shlb
inc
aam
xor
dec
shlb
mov
cmp
pop
dec
out
repnz
mov
cmp
negb
in
dec
sbb
cmp
dec
in
pop
or
in
sub
lock
stos
sub
sub
in
and
aaa
cmp
pop
dec
jp
pop
dec
cmp
pop
dec
cmp
popf
sbb
push
mov
cmp
dec
jae
push
push
out
loope
cmp
mov
sahf
cmp
test
je
stos
bound
and
mov
adc
ror
jg
pop
dec
cmp
test
je
stos
add
stos
fs
aas
jae
mov
int
dec
xor
inc
loopne
jns
loope
cmp
mov
mov
mov
sub
ss
fldenv
mov
dec
xor
inc
loopne
jns
loope
cmp
mov
mov
jno
mov
cmp
mov
dec
xor
inc
loopne
nop
out
loope
cmp
mov
mov
int3
loop
sub
inc
sbb
je
lods
push
mov
adc
adc
pop
pop
stos
fs
aas
jae
mov
into
mov
inc
loopne
mov
push
sarb
in
sahf
jae
out
mov
or
leave
loop
sub
add
sbb
push
xor
cmp
cmpsb
jb
add
push
sbb
push
mov
mov
ror
mov
inc
cmpsb
jb
add
push
sbb
dec
ss
jge
and
dec
int3
xchg
push
jg
push
in
pop
dec
cmp
inc
adc
cmp
pop
push
cmp
mov
je
pop
dec
cmp
xchg
cmp
pop
shrb
int
and
pop
ret
mov
cmp
pop
rorb
pop
mov
in
pop
dec
repnz
pop
mov
push
or
push
cmp
inc
add
or
mov
add
jbe
fs
sub
repz
mov
push
pop
push
or
cmp
iret
jecxz
lods
adc
jbe
push
xchg
mov
jne
dec
or
adc
add
jge
xor
xor
aaa
hlt
test
jp
popa
je
sbb
mov
jmp
sti
test
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
fistpl
or
ja
cmp
fists
pop
dec
cmp
pop
dec
stc
in
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
cmpsl
outsl
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
pop
dec
cmp
push
mov
xor
imul
sbb
pop
mov
clc
push
aas
push
push
js
dec
stc
inc
dec
xor
rcll
or
dec
out
add
ret
clc
xor
pusha
xchg
ljmp
push
jg
scas
aas
pop
dec
inc
mov
aaa
jle
jcxz
mov
cli
faddl
fcoml
imul
leave
orb
mov
push
cmp
fldenv
adc
out
rolb
stc
pop
cmpsl
cmp
lcall
adc
or
movsl
jns
daa
pop
mov
mov
ret
ret
add
mov
push
shl
out
mov
pop
sub
iret
cltd
insl
pop
add
mov
cmp
fbstp
lods
rcrb
lea
sbb
jmp
rolb
push
pop
push
cmpsl
clc
movsb
add
xor
inc
cmc
and
or
sub
jecxz
stos
les
and
test
or
jno
movsb
sbbl
outsb
mov
adc
es
bound
ficomps
jle
add
not
inc
push
cld
pop
cmpl
jmp
xchg
lahf
testb
and
je
push
and
sahf
mov
xchg
int3
pop
out
pop
pop
mov
jo
imul
push
fnstsw
inc
sbb
icebp
push
mov
movsb
mov
jmp
fcom
vcvttps2dq
add
mov
pusha
outsl
pusha
pop
repz
test
xchg
jmp
or
adc
push
sub
popl
icebp
out
pusha
loop
test
mov
stc
mov
jb
mov
or
push
imul
ret
sub
popa
sbb
push
mov
ds
pop
dec
cmp
push
call
mov
ss
push
sbb
test
mov
mov
mov
lret
ret
lcall
test
push
icebp
clc
bound
xor
inc
imul
lret
lret
nop
or
fstps
cmp
add
addl
push
daa
xchg
mov
jbe
push
icebp
fisubs
pusha
out
pop
cmc
in
mov
lods
stc
push
adc
loope
lret
arpl
popa
stos
or
dec
lods
adc
subb
scas
and
jle
sub
clc
xchg
mov
pusha
popf
pop
movsl
dec
test
add
add
or
lods
cwtl
stc
repz
adc
bound
jge
imul
push
mov
test
nop
int
orb
mov
add
add
or
add
adc
insb
add
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
insb
add
hlt
imul
adc
add
add
sbb
add
jns
add
sub
add
add
add
insl
add
mov
add
add
xchg
insl
add
dec
insl
add
cltd
insl
add
push
insl
add
mov
add
add
add
add
add
gs
insb
xor
cs
insb
add
insb
ja
jo
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
insl
add
add
add
into
insl
add
add
add
fldcw
add
add
add
insl
add
add
add
mov
add
add
insl
add
add
add
push
outsb
add
add
add
add
push
dec
inc
gs
outsl
insb
fs
popa
je
inc
add
add
jb
je
inc
add
add
jo
push
arpl
add
addr16
insb
outsl
jae
dec
gs
add
inc
outsl
push
outsb
imul
imul
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
sub
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
enter
cld
pop
adc
push
add
add
add
inc
repnz
adc
mov
es
mov
mov
cld
aaa
push
fwait
add
stos
js
mov
add
xlat
in
dec
jne
and
add
cmp
dec
xlat
mov
mov
xchg
or
and
es
mov
mov
ftst
cld
pop
imul
outsb
jge
cltd
jne
int
andl
loope
popa
lods
test
test
mov
xchg
push
jmp
stos
ret
fxch
xchg
xor
cmp
mov
jmp
jae
cmpsl
add
cs
cmpsb
mov
lds
pop
mov
lods
push
xor
mov
les
lret
mov
in
sqrtps
pop
and
dec
xor
add
pop
hlt
fmuls
push
div
jge
pop
push
cwtl
pop
pop
sbb
pop
les
imul
mov
cmc
dec
and
sub
push
xor
test
sbb
xchg
and
das
lea
xor
or
inc
xor
jmp
mov
sbb
adc
mov
cmp
pop
push
add
les
mov
es
cmp
add
test
sbb
out
mov
sub
jecxz
pop
ret
or
mov
shlb
sub
lods
pop
adc
jno
push
dec
or
mov
lea
xchg
js
cmpsl
add
cld
mov
rol
mov
lea
mov
pop
mov
or
sahf
jbe
fldcw
or
or
xchg
call
dec
fbld
out
sub
rcll
test
jo
add
fidivrs
xchg
cld
pushf
adc
xor
sarl
aam
sbb
insb
int
test
popf
fwait
xchg
loop
idiv
inc
xor
mov
movsb
or
pushf
call
jnp
inc
inc
jmp
scas
xor
cmpl
cmp
mov
int
jg
jle
xchg
sahf
mov
mov
leave
dec
imul
js
or
aam
add
cmp
fsubl
jmp
gs
pop
and
cmpl
mov
mov
movsl
jbe
pop
jno
add
out
mov
jecxz
mov
das
out
insl
cwtl
stc
sbb
xchg
out
push
cld
aaa
aam
sbb
push
lcall
add
xchg
xchg
sub
or
sahf
dec
pop
fmul
ss
sub
loop
addr16
lret
test
scas
mov
out
push
mov
cmp
imul
xchg
rcrl
dec
shrl
stos
lock
in
data16
and
pushf
orb
mov
cwtl
insl
iret
jge
push
adc
in
and
imul
xor
imul
sub
xchg
push
push
ret
mov
flds
fidivrl
addb
cmp
cmp
xchg
data16
cmpsl
cld
data16
arpl
insb
pop
xlat
scas
mov
add
push
div
sbb
jne
dec
jl
xchg
add
out
ret
loopne
cmp
dec
jp
xchg
mov
or
lds
scas
ljmp
push
cli
mov
and
xchg
cltd
jo
jmp
lds
js
sub
scas
sbb
xor
pop
jle
enter
outsb
push
mov
mov
mov
in
mov
xor
and
push
cld
enter
sub
and
fs
xor
je
call
fwait
and
mov
ljmp
xchg
rcrb
xor
enter
xchg
adc
scas
and
cs
popf
loopne
pop
pcmpgtw
popf
test
mov
or
jp
jbe
jmp
dec
in
add
aaa
shll
cmp
cmp
shll
inc
add
jg
xchg
push
sub
shl
orl
adc
inc
into
inc
hlt
jl
call
fwait
cmp
fxtract
loop
mov
inc
xor
or
loopne
jp
repnz
pop
dec
pop
xchg
jno
or
js
test
dec
jmp
ret
mov
xor
loope
imul
add
aaa
movsb
jae
hlt
xor
add
xor
cmpsb
popl
hlt
es
jo
lcall
pop
out
sbb
mov
xchg
je
hlt
mov
mov
xor
mov
stos
push
movsl
xchg
out
pop
loope
enter
or
mov
inc
cmp
cmp
stos
icebp
rcrl
jb
jecxz
or
repnz
cltd
addr16
out
jg
movsb
mov
mov
cmpsl
sbbb
addr16
add
addl
dec
mov
xchg
insb
mov
adc
and
push
inc
fstpt
pop
adc
movsl
cwtl
jl
xchg
sarb
mov
sbb
shrl
lahf
std
sub
das
cwtl
lret
sbb
pushl
mov
rcll
jnp
dec
cmp
lds
mov
inc
inc
or
test
call
inc
movsl
sti
fildl
rcrb
lret
je
mov
rcl
cmp
pop
sbb
sahf
popa
aam
test
inc
iret
mov
jl
fimull
shlb
or
gs
in
mov
sub
cmc
ret
cmp
es
es
push
stos
mov
imul
lods
cmp
rcrl
dec
mov
lods
mov
jmp
inc
inc
jbe
testb
in
xor
mov
stos
cmpsb
push
cmp
mov
shll
jns
pop
loopne
inc
sahf
pop
ja
mov
out
sbb
inc
je
int3
das
push
movsl
sbb
fdivr
xchg
push
mov
mov
rcrl
fwait
jp
mov
shll
sbb
or
movsb
daa
pop
mov
aad
push
inc
addr16
sbb
xor
mov
sbb
cmp
push
test
cmp
mov
sub
sub
shr
push
xchg
adc
add
pop
adc
imul
mov
adc
inc
mov
mov
sub
lret
mov
mov
shll
mov
push
dec
data16
jbe
inc
inc
push
addr16
sbb
lock
lea
sbb
or
in
cmp
lret
vmovntps
out
fs
cltd
jno
icebp
fmull
rcl
mov
or
pusha
xor
insl
in
shl
push
and
insb
cmp
mov
mov
push
jl
cmc
mov
adc
popf
sbb
outsb
sbbb
iret
out
nop
jo
js
mov
data16
loope
fwait
addb
jg
repnz
cmp
leave
dec
aad
js
cmp
pop
adc
lahf
in
and
and
xchg
in
loopne
jmp
out
fsubr
mov
stos
fwait
add
lret
add
leave
fwait
out
sub
xor
cmp
stc
mov
or
rolb
xchg
push
inc
addr16
jl
jecxz
rcrb
sub
adc
push
movsb
xchg
push
dec
add
push
stc
clc
call
xchg
pop
pop
add
outsb
mov
sub
outsl
add
aam
dec
repz
iret
dec
sbbb
dec
sarl
push
push
scas
stos
insb
cmp
out
orb
jle
cld
dec
lcall
dec
into
or
idivl
daa
jg
cmp
xchg
lock
lock
dec
ds
cli
sti
test
mov
jge
pushf
mov
sahf
lods
sbb
or
mov
bound
inc
dec
xchg
fsubrs
flds
inc
mull
xor
mov
push
std
imul
xor
sub
pop
mov
addb
adc
jg
cmp
clc
fs
fists
sbb
in
xlat
push
jae
mov
mov
icebp
mov
push
insl
call
lods
data16
pop
cmp
dec
leave
push
dec
fdivs
jbe
push
jns
and
sub
dec
in
mov
cltd
stc
fs
cmp
test
xchg
aam
and
jge
cli
dec
and
sub
dec
pop
rolb
pop
ss
mov
push
dec
iret
push
jbe
push
xor
sub
mov
test
mov
sbb
stos
call
and
cmpsb
sub
pop
test
pop
aas
sub
call
pop
popf
loope
lcall
cmp
cmpsl
inc
out
call
push
add
sub
shlb
xchg
cwtl
xor
mov
inc
add
dec
inc
repnz
jmp
outsb
xchg
imulb
daa
push
hlt
xchg
aam
pushf
test
push
push
sbb
out
iret
dec
adc
sub
std
xor
mov
adc
scas
add
rorb
sub
push
and
int
adc
into
mov
outsb
jmp
mov
or
or
sahf
sbb
xchg
mov
mov
pushf
ret
inc
iret
mov
aad
lds
scas
jmp
test
push
and
lds
jns
dec
sbb
loopne
fimull
icebp
xchg
sub
fidivrs
or
sub
cmp
rolb
stos
mov
mov
pop
adc
call
repz
mov
movsb
mov
std
ss
sti
sub
and
into
cmp
dec
cmp
add
cmp
les
sub
sub
loopne
negb
enter
lahf
or
test
jl
in
xchg
xor
jg
loopne
add
pushf
sub
imul
aad
push
inc
adc
xor
mov
push
push
cltd
sbb
ret
mov
ss
repz
jp
loope
mov
mov
xor
test
fcomip
in
call
mov
ja
mov
dec
mov
popl
ret
mov
mov
ret
stos
int3
in
add
mov
mov
inc
mov
sub
mov
out
cmpsb
faddl
mov
ds
ss
adc
dec
inc
sub
inc
movl
sub
and
mov
mov
push
pop
or
repz
jo
dec
push
lret
test
inc
adc
loopne
cmp
pusha
add
add
sub
or
int
test
ret
jge
es
js
fists
fstl
fiaddl
jno
sahf
add
int
mov
orb
lcall
aas
xlat
popf
mov
inc
cld
cs
movsb
jg
mov
in
cli
icebp
dec
hlt
sbb
add
jbe
push
mov
sub
shll
divl
push
dec
out
and
imul
outsb
add
mov
jb
jp
adc
dec
xor
lcall
or
jo
fsts
fxam
pop
adc
orb
cli
call
push
mulb
mov
shrl
dec
leave
add
cmp
bound
sub
add
les
sti
or
js
sbb
sub
sub
mov
dec
std
pushf
add
stc
loope
ret
lcall
push
imul
fdivrl
cs
jle
fimuls
sub
xchg
ljmp
mov
test
and
std
jne
pop
lds
mov
or
jno
setp
in
addr16
jnp
repnz
hlt
fstpl
mov
std
popf
and
adc
pop
insb
mov
jne
test
push
sub
and
pop
adc
and
pop
in
sbb
aaa
push
mov
mov
jg
inc
in
push
enter
sbb
ficoml
push
stos
xchg
mov
cmp
call
mov
cmpsb
sub
xor
adc
cmp
test
xlat
test
popf
or
inc
jle
aas
test
sub
pop
addb
pop
xor
rorb
pop
dec
xor
lret
xchg
aam
mov
mov
sbb
mov
in
mov
or
xchg
leave
jl,pt
xorb
arpl
into
or
mov
xlat
loopne
pop
movsb
ret
pop
lret
aad
fistpl
lods
sub
sbb
iret
imul
shr
jb
pop
inc
or
testl
cmc
inc
in
inc
shll
int3
inc
rcrb
ffree
jae
or
xchg
cltd
stos
pop
inc
outsl
dec
ja
std
stos
jo
mull
push
jae
dec
fisubrl
xor
inc
and
test
dec
xorb
and
jnp
inc
and
adc
jl
adc
repnz
sub
jmp
loope
inc
lock
cmp
sub
cltd
cmp
mov
mov
dec
jg
xchg
dec
pop
out
push
cli
scas
and
rcr
push
ja
push
ljmp
sarl
xor
cmp
cwtl
adc
mov
xchg
jae
enter
jns
dec
adc
jne
iret
or
in
adc
jno
in
jno
mov
pop
jle
mov
mov
rcrb
and
cmp
xchg
mov
mov
mov
inc
rcrl
add
jo
imul
push
lret
sti
nop
jae
mov
sbb
jb
cmp
xor
xor
scas
jbe
daa
push
lcall
inc
int3
xchg
cmc
cltd
clc
jmp
lods
jbe
cli
imul
or
icebp
mov
lds
cmpsl
pop
or
das
gs
pop
xor
inc
out
cmp
subl
adc
das
sub
mov
xor
stos
mov
jmp
push
movsb
jno
cli
movsl
xchg
arpl
lahf
adcb
sub
loop
cmc
mov
shl
or
and
adc
mov
idivl
jle
mov
mov
movsb
mov
call
repz
mov
mov
in
loop
add
shlb
sbb
pop
push
mov
test
inc
shr
les
sub
push
push
shl
mov
fisttpl
and
fwait
movl
mulb
mov
and
add
daa
stos
jecxz
in
or
sub
and
clc
add
pop
pop
pop
push
lret
pop
inc
xchg
loop
pop
mov
mov
aad
and
mov
xchg
int3
sub
push
dec
shll
inc
les
xor
mov
pop
mov
mov
pop
mov
popa
xchg
ss
mov
in
cmp
push
mov
adc
repnz
movsb
adc
movsl
lahf
or
roll
or
loop
cmp
icebp
pop
jp
fadds
xor
popf
out
das
es
jecxz
adc
jb
add
cmc
mov
lret
cwtl
ret
jne
lods
and
shlb
adc
inc
xor
gs
lret
fsubrp
loop
add
cmp
or
out
push
mov
lcall
cli
or
cmpsb
mov
jb
std
adc
xchg
inc
xlat
xchg
shrl
and
fs
cmovnp
xchg
movsl
or
fs
das
or
add
xchg
mov
int3
mov
dec
pop
add
mov
incb
das
jae
xor
scas
cmpsb
xor
sbb
hlt
test
insl
mov
mov
jbe
sub
push
dec
outsb
adc
mov
in
jle
sub
xor
inc
les
lret
pop
test
lahf
cld
stos
test
push
leave
push
pop
xor
or
mov
shlb
addr16
and
loopne
ljmp
pop
sarl
add
std
fidivs
mov
cmp
cwtl
mov
pop
jg
dec
jp
loope
aaa
cmp
mov
jbe
push
dec
clc
mov
dec
mov
mov
inc
or
and
adc
mov
jne
outsb
lock
les
aam
sbb
mulb
sub
add
insb
insl
jp
aaa
adc
mov
out
sbb
or
push
adc
lcall
push
push
xlat
bnd
enter
or
hlt
fisttpll
xchg
dec
dec
rcl
lods
mov
addl
jmp
push
test
sub
xchg
dec
inc
sbb
jns
inc
in
insb
cld
cmp
fldcw
aas
test
sub
sahf
pushf
ficomps
sub
sbb
jecxz
std
lock
inc
in
sbb
sub
xchg
aam
lods
out
int
mov
addl
f2xm1
inc
andb
jge
inc
jno
nop
repnz
js
inc
xchg
dec
dec
sub
fldenv
outsl
loopne
inc
and
insb
jno
gs
mov
addr16
fcmovne
mov
mov
add
xor
sbb
jle
jns
cmp
insl
cwtl
mov
adc
sub
je
xchg
cmpsl
xchg
test
jno
sbb
inc
shlb
jno
ficompl
jne
sbb
lods
push
push
xorl
leave
xchg
std
jg
cld
xchg
rolb
popa
pushf
push
or
dec
jge
add
das
fldenv
mov
jbe
push
xor
mov
in
and
sub
cmp
xlat
shlb
push
xor
rorb
adc
lods
xchg
loope
mov
lods
jmp
imul
dec
rorl
add
push
cmp
jbe
pushf
mov
xor
push
xor
fwait
xchg
movsb
in
and
xor
inc
adc
test
inc
out
fidivrl
jb
pop
cmp
movsl
cli
mov
dec
adc
adc
nop
sub
add
add
adc
push
push
jp
arpl
dec
push
imul
mov
sbb
ljmp
or
loope
mov
xchg
dec
cwtl
inc
cmp
xchg
shll
push
mov
sbb
arpl
add
roll
mov
pusha
sbb
push
ja
mov
adc
adc
fsts
mov
ds
sub
int
sub
pop
imul
scas
adc
mov
push
fimull
jmp
mov
and
lods
xor
adcb
jmp
jns
mov
sub
pop
cmpsl
ret
xchg
cli
xor
imul
and
sub
mov
ja
add
out
jns
pop
jne
xor
lods
xor
loope
outsl
pop
sub
out
cmp
push
mov
mov
bound
push
enter
inc
loop
dec
dec
out
nop
in
pop
pop
stc
pushaw
shlb
std
pop
xchg
adc
xor
imul
mov
cmpsl
sbb
data16
into
xor
add
sub
leave
push
mov
sbb
outsl
in
mov
sbb
popf
push
sub
sub
xlat
fnstenv
arpl
addr16
cmp
lods
mov
lods
das
in
testb
sub
dec
mov
mov
lods
in
cmc
add
cmpsb
adc
out
lahf
cmpsb
repz
roll
les
mov
push
mov
scas
or
dec
orl
jae
jecxz
mov
lds
fists
jbe
push
lock
and
add
mov
lds
or
aas
inc
xor
adc
shrb
jmp
mov
and
test
js
movsb
lea
mov
sub
xchg
and
shlb
add
dec
jno
pop
loope
cltd
pop
stos
rcrl
jmp
imul
popa
clc
aaa
int3
gs
cli
cmp
inc
out
mov
pop
in
jb
orl
and
ljmp
aad
mov
dec
clc
mov
cmp
push
pop
xorl
psubusw
je
push
out
bound
rcrl
into
mov
sbb
push
sub
ljmp
sub
and
inc
pop
mov
push
rcll
cmc
cwtl
dec
dec
pop
sbb
cmp
cmp
mov
push
aas
push
popf
ljmp
sbb
or
or
adc
cltd
ffreep
and
pop
jg
push
aas
cmp
mov
aaa
add
fcomps
mov
push
mov
inc
inc
rcll
mov
xchg
cmp
or
cmpsl
pop
or
jae
mov
vpunpcklqdq
inc
sbb
add
jle
pop
sub
rcrb
cmp
push
xchg
pop
mov
xor
sbbl
sub
lcall
push
leavew
lock
jae
cld
in
dec
inc
sbb
jmp
hlt
fcmovnbe
inc
popf
xchg
dec
frstor
repz
ret
dec
and
and
sbb
sub
adcb
in
int3
ror
cmp
cli
mov
out
inc
jb
fnstsw
subb
loopne
or
push
rcrb
pop
sub
add
aam
push
mov
shll
loop
pushf
push
pop
jmp
bound
lcall
loopne
scas
test
sbb
mov
push
jecxz
sbb
push
das
pop
dec
mov
add
sbb
pushw
out
adc
stos
test
mov
fstpl
fs
adc
mov
out
jle
mov
rcrl
insl
es
repz
push
cmp
arpl
pop
adc
cmpsl
mov
outsb
mov
iret
out
pushf
xor
cs
cmpsl
dec
mov
add
pop
jnp
jmp
adc
add
mov
adc
leave
std
std
and
scas
test
and
add
pop
push
int3
andb
cmc
fnstsw
adc
add
jp
adc
mov
adc
jno
pop
and
lcall
pop
xchg
test
jg
mov
mov
lods
cmpsb
daa
pop
movsb
in
call
add
sbb
mov
icebp
push
xor
add
aad
repz
adc
pop
sbb
hlt
pop
jp
sahf
ss
jno
ret
mov
ret
dec
or
adc
mov
xchg
lods
push
push
fnstenv
push
outsl
fcoml
outsb
push
sahf
cmp
inc
jb
outsb
mov
pusha
in
vcvtps2dq
mov
add
xchg
mov
cmp
and
mov
push
test
imull
mov
imul
in
je
dec
xor
pop
inc
pop
movups
fcoml
mov
mov
sub
fimull
inc
pop
or
out
and
jno
mov
enter
sar
loopne
inc
imul
std
add
inc
or
int
push
neg
out
rol
aad
sub
push
pop
mov
dec
je
call
sub
add
das
inc
sub
fisubl
mov
push
mov
inc
aaa
scas
xor
xchg
sahf
mov
inc
in
frndint
pop
scas
fisttpl
lds
arpl
cmp
and
xchg
test
iret
push
pop
push
in
out
push
and
mov
addr16
stos
pop
cmc
test
cmp
sti
stos
aaa
and
xlat
and
out
dec
mov
into
loop
xchg
cmp
repz
nop
mov
sub
and
repnz
mov
mov
sahf
xchg
pop
repnz
rclb
cs
popf
add
dec
iret
aad
dec
sbb
out
mov
xchg
xchg
int3
inc
addl
fidivs
sub
and
ret
mov
lahf
jbe
xchg
add
push
mov
jge
pop
jl
mov
inc
mov
insb
shlb
int3
add
cli
dec
jno
addr16
aas
outsb
clc
xor
xchg
test
sti
fcom
inc
mov
xchg
stc
cmp
pop
push
or
xchg
dec
sbb
insl
mov
mov
dec
loop
stos
adc
int
sbb
xor
sahf
lods
push
add
dec
dec
stc
ljmp
js
cmp
inc
sar
xor
data16
fdivrs
hlt
sub
addr16
push
into
and
in
add
scas
scas
push
sbb
adc
lret
mov
popa
call
lods
pop
push
add
repnz
xor
push
and
fnstcw
xchg
xor
test
xor
ret
dec
jmp
xor
arpl
xor
adc
popf
adc
fs
adc
dec
dec
sbbb
icebp
nop
dec
adc
xchg
int3
sbb
add
mov
inc
xchg
test
or
out
ret
jmp
push
cltd
mov
sar
dec
push
dec
into
mov
xchg
sbbl
push
sbb
add
dec
pusha
jb
lea
aaa
imulb
push
iret
dec
push
js
insb
imul
int
cmp
bound
jge
push
test
stos
dec
fcoms
sarl
cs
pop
add
test
push
lea
cmp
push
inc
pop
sahf
mov
inc
repz
ret
jg
ds
mov
add
xor
paddd
lock
jmp
dec
push
sbb
fisttpll
mov
and
ret
adc
dec
jmp
pushf
sub
mov
js
jns
test
stc
pop
pop
test
dec
fmuls
xor
gs
enter
cmp
scas
adc
pop
pop
sub
sti
call
stos
sub
lahf
pop
mov
sbb
js
das
insl
in
pop
or
stos
push
xchg
outsb
and
sbb
and
mov
inc
out
mov
imul
pop
add
test
jmp
ds
cli
inc
and
shl
jnp
sbb
es
sbb
out
pop
xchg
in
mov
inc
cld
cmp
mov
pop
mov
scas
jl
adc
xor
sbb
out
fucomp
call
inc
pop
outsb
jae
xchg
gs
je
cmp
daa
outsb
cmp
movsb
mov
mov
mov
in
or
pop
fildl
pop
mov
test
call
inc
sub
dec
xchg
shll
aad
lret
xor
jae
push
sub
fnsave
sbb
dec
outsl
fs
out
aad
inc
mov
in
test
shrl
fstl
pop
jns
cmp
int3
jns
dec
test
stos
repz
sbb
orl
mov
sub
dec
sbb
mov
movsb
lods
scas
or
push
sub
xchg
xor
and
mov
fdivrs
js
dec
movsl
and
mov
call
xor
int
loope
or
push
cmpsl
xchg
mov
test
mov
imul
icebp
jmp
stos
pusha
test
rorl
xchg
jbe
pop
daa
xchg
aaa
inc
cmp
icebp
dec
movsb
xchg
ficompl
out
fldenv
andb
mov
sbb
out
test
das
stos
ljmp
pop
xchg
lret
and
sbb
aas
dec
jae
add
push
lret
or
stc
repz
stos
sahf
mov
int
ds
inc
test
fistpll
push
add
call
inc
std
mov
lret
ljmp
add
test
mov
cmp
pop
in
and
xchg
mov
aas
push
add
push
lahf
ret
xor
xchg
aam
cwtl
xchg
sbb
sub
jne
add
movsb
ljmp
inc
and
inc
push
and
cwtl
nop
pop
orl
out
rorl
mov
push
test
movsb
dec
adc
popl
insl
fisttps
fdivs
inc
repnz
pop
jbe
sub
mov
cmp
mov
fs
lock
scas
dec
mov
dec
xchg
imul
or
imul
pushfw
out
pop
add
mov
jne
insl
xchg
dec
mov
jno
cmp
sbb
pop
aaa
test
insl
aam
push
xchg
pushl
push
call
gs
cmp
jbe
int3
xchg
jp
and
roll
movsl
xchg
mov
push
lret
sti
fstpl
ja
ret
out
inc
pop
test
loop
xor
test
pop
stos
inc
jo
aas
or
int
or
or
test
popf
jbe
sahf
jmp
orl
sbb
mov
mov
dec
mov
in
lcall
imul
scas
cmpsl
out
das
mov
mov
cmpsl
unpcklps
and
jno
xchg
push
or
into
andnps
jbe
nop
pushf
adc
dec
icebp
and
popa
syscall
pop
ss
fcompl
jmp
or
movsl
sub
dec
mov
mov
mov
std
xchg
cli
mov
mov
es
push
jne
mov
dec
mov
sub
ret
aaa
lods
push
or
mov
mov
xlat
fisubrl
jns
stc
pusha
pop
out
cmp
xorb
daa
dec
rcr
cmpsb
xor
push
loopne
addl
not
lahf
jno
xchg
aas
div
xchg
cmp
sub
xorw
xor
xchg
ret
xor
daa
sbb
and
in
cmc
or
test
push
cwtl
cmp
push
lods
sarb
sub
push
push
adc
bound
int
dec
mov
insl
out
cwtl
sub
add
pop
loop
mov
add
cmp
pop
dec
test
jo
out
cmp
lret
aad
adc
shlb
js
inc
dec
leave
loop
inc
xor
push
mov
lds
push
call
aad
aad
or
popa
pop
hlt
mov
mov
and
push
enter
mov
mov
repz
and
push
xor
and
sbb
sub
test
ljmp
dec
adc
sbb
jb
mov
aas
lahf
stc
sub
mov
mov
sarb
mov
repnz
adc
sub
mov
mov
rcrb
cs
adc
inc
test
jmp
hlt
ja
adc
ds
mov
fnsetpm(287
loope
sub
jecxz
push
xchg
outsb
inc
dec
js
imul
or
mov
and
inc
push
dec
pop
cmp
ja
cmpsb
mov
push
mov
mov
push
cmp
es
push
push
inc
fsub
mov
sti
out
cmp
icebp
fcompl
inc
mov
xor
mov
and
fld
mov
xchg
lods
imul
icebp
out
sbb
dec
ja
jg
dec
adc
sub
push
pop
dec
inc
flds
lcall
xchg
movsl
insl
int
std
mov
mov
jb
add
mov
cmp
jnp
scas
cmp
mov
hlt
scas
push
andl
das
xor
test
les
inc
xchg
push
inc
or
loope
push
stos
sub
pop
jg
dec
les
pop
sahf
shrl
movsl
stos
sub
fcom
js
mov
dec
push
or
cmp
adc
cmc
push
daa
cmpb
mov
push
ja
ja
jmp
iret
inc
stos
cmpsl
arpl
ds
cmpsb
inc
addr16
lret
dec
sub
cmp
push
ljmp
cmp
pop
sub
lods
fnstenv
iret
inc
and
xchg
pop
shll
xor
dec
jp
and
adc
ss
in
leave
fldl
js
sbb
mov
imul
xor
fwait
loop
imul
jmp
jnp
repnz
in
xor
jmp
imulb
adc
lahf
pop
jb
push
in
push
jmp
gs
xchg
std
or
out
pop
lods
bound
mov
and
pop
movsb
sub
into
out
pusha
push
mov
outsl
testl
sbb
pop
xchg
enter
sbb
repnz
scas
mov
bound
test
outsl
sbb
add
es
gs
xrelease
addb
pusha
popf
aad
mov
mov
lods
push
out
aaa
cmp
insb
sbb
dec
xor
and
mov
inc
cli
call
fistl
xchg
outsb
gs
inc
adc
cli
xchg
js
orl
imul
push
dec
insl
shl
fnstcw
ds
bound
xor
into
sub
or
jb
lods
pushf
and
pop
push
mov
add
jae
outsb
insl
movsb
and
sti
aad
xor
and
inc
or
pop
push
push
setb
dec
adc
dec
push
push
jne
imul
push
repnz
xor
ljmp
or
sub
in
jnp
xor
das
fwait
cmp
mov
es
jno
pop
dec
loop
fdivs
push
ljmp
xor
sbbl
and
das
mov
ret
jmp
adc
jo
ss
xchg
sbb
pop
cwtl
imul
mov
int
jb
aad
xor
aam
icebp
adc
xchg
iret
adc
imul
push
jmp
repnz
ljmp
ljmp
sbb
ljmp
cmpsl
mov
sti
adc
xchg
xor
es
xchg
inc
andb
push
lahf
pop
js
adc
ja
out
sub
sub
filds
leave
pop
adcl
xor
lcall
mov
jbe
jp
sub
cld
leave
fs
addb
xor
dec
dec
pop
and
jae
es
ja
cmp
or
xlat
testb
push
je
xor
xlat
xor
lock
mov
out
fnstcw
repnz
jbe
icebp
sub
loope
hlt
pop
or
push
outsl
mov
stos
jp
cmp
mov
pop
or
add
cli
lods
ss
mov
push
insl
jl
ficomps
lcall
dec
addr16
js
cmc
test
inc
push
push
and
adc
loop
out
xchg
pop
push
xor
cli
popa
insl
mov
out
cmpl
pushf
pushf
jp
sub
adc
das
add
jge
into
iret
hlt
inc
cltd
loopne
imul
shrb
pushw
pop
dec
arpl
mov
push
xor
xchg
dec
xchg
inc
sbb
adc
data16
mov
shrl
jecxz
icebp
outsl
fsubs
pop
and
add
push
jnp
pop
cmc
push
out
test
cmp
cs
f2xm1
insb
ss
add
jl
mov
fwait
sub
add
mov
data16
cli
mov
inc
je
sub
hlt
adc
sahf
out
or
adc
divb
pop
xor
scas
lock
cmp
xor
cmp
loopne
xor
outsb
pop
lea
mov
adc
dec
faddl
and
call
mov
ret
add
or
xchg
fisubs
fcoml
push
and
js
pop
push
push
sub
fiadds
hlt
jb
rorl
xchg
das
inc
push
push
fcmovne
pop
lret
mov
jl
sbb
jle
mov
push
xchg
jo
in
mov
lods
int3
data16
ss
popa
fldenv
lret
fucomip
xlat
inc
xlat
bound
std
out
std
push
mov
jp
int
mov
and
push
xor
outsl
adc
sub
pop
add
rolb
add
out
addr16
add
aaa
cmp
sub
and
cs
dec
mov
aad
ret
sbb
shlb
lahf
lea
xor
mov
sbb
inc
and
inc
mov
xchg
nop
mov
mov
cmpsl
pop
iret
aam
enter
inc
in
dec
lods
mov
dec
xor
gs
rcrl
mov
adc
mov
call
add
loopne
push
mov
arpl
test
and
and
mov
lcall
jle
lcall
mov
loope
js
sbb
ss
in
insl
xchg
mov
addr16
lods
loop
mov
mov
shrl
sti
push
cli
dec
icebp
nop
iret
inc
jae
or
aaa
stos
mov
and
loopne
or
dec
and
or
cmp
push
fwait
lods
xor
push
pop
loopne
push
cmpsb
pop
enter
mov
pusha
xor
jecxz
jo
shll
inc
cmp
jmp
ja
sbb
lahf
or
push
cmpsl
lds
test
jnp
icebp
ljmp
jl
push
ficompl
int
mov
std
push
inc
fmull
and
insl
repnz
loop
outsl
aaa
lea
aam
test
xlat
mov
js
aas
xchg
pop
lret
inc
scas
jns
stos
mov
lretw
jl
psubd
add
xchg
je
mov
dec
in
jmp
dec
cmp
aas
and
add
loopne
sbb
ret
and
mov
push
cmpb
call
repnz
cmp
jmp
sahf
loop
cld
fimull
xchg
mov
mov
arpl
sbb
mov
add
mov
pop
in
in
pop
ja
lcall
call
mov
in
add
adc
jl
dec
mov
cmc
sub
jno
mov
and
and
push
mov
push
es
sbb
jle
bound
scas
cmp
jg
dec
adc
movsb
mov
push
repnz
push
andl
push
ret
sbb
ljmp
jp
sbb
rorb
sbb
shlb
repz
xor
lock
add
jecxz
jl
inc
jmp
mov
mov
lds
sub
or
jle
clc
cmp
push
dec
je
lret
pop
test
and
nop
iret
or
xchg
jl,pt
jnp
lahf
imul
pop
push
aam
loope
ffreep
imul
cmpsl
sub
or
int3
mov
lock
in
mulb
icebp
cmpsb
sti
in
xchg
scas
pop
push
mov
jo
sub
push
jl
fists
push
mov
iret
sub
scas
jns
or
sbb
mov
sti
mov
out
add
ficoml
daa
inc
gs
insb
stos
pop
dec
mov
push
bound
lahf
xor
shl
sub
aad
mov
mov
sbb
cltd
shll
enter
adc
test
xchg
push
rcrl
std
les
lea
adc
pusha
fstps
scas
or
or
sub
mov
adc
loop
dec
decb
scas
push
push
fwait
popl
rdtsc
cs
les
lds
out
roll
loopne
jl
enter
repz
cld
push
push
or
sub
out
adc
js
sti
cmpsl
lcall
push
push
or
jmp
pusha
mov
jne
bound
inc
insb
xlat
or
std
imul
push
jbe
lds
pop
or
xchg
sub
jle
lcall
pop
adc
xchg
add
pop
push
cmp
push
sahf
mov
mov
xchg
pop
dec
in
out
ret
inc
cltd
or
adcb
dec
in
cltd
inc
inc
ljmp
int3
fisttps
gs
pop
xchg
loop
enter
into
daa
jae,pn
loop
imul
data16
push
call
aad
cmpsb
aam
jnp
mov
daa
scas
mulb
in
stos
fstpt
std
call
ret
cwtl
mov
addr16
lret
in
je
mov
iret
xchg
adc
mov
outsb
cmpsl
pushf
hlt
addl
xchg
mov
jp
movb
repz
sbb
or
or
xchg
pop
mov
fdivl
xchg
lcall
in
lahf
sbbl
mov
jge
fidivs
adc
dec
movb
jnp
cltd
loop
or
sbb
adc
movsl
xorb
insl
jnp
jbe
pushf
insb
push
cmpl
in
js
dec
fdivs
nop
push
pop
loop
dec
call
mov
and
fldl
jne
add
iret
mov
sub
mov
data16
sub
add
jle
cmpl
scas
sahf
push
and
dec
scas
xor
jmp
lods
pop
push
std
dec
cmp
cmp
sbb
arpl
mov
loop
int3
loope
adc
rorl
dec
mov
imul
out
mov
push
andb
add
mov
mov
cwtl
pop
stc
mov
mov
enter
stos
jmp
xchg
das
addr16
arpl
and
mov
mov
inc
inc
es
cmpsl
sahf
scas
pop
cmp
dec
fldl
shlb
aas
xchg
stos
shl
ss
icebp
bound
ret
shll
scas
out
adc
inc
pushf
call
test
dec
jae
in
mov
fnsave
lock
or
sub
andb
push
ss
cmp
daa
xor
cmp
cs
in
lret
fstl
sti
mov
call
cli
adc
push
icebp
jp
fwait
dec
mov
mov
test
icebp
sub
stos
imul
sbb
add
ljmp
and
lcall
icebp
xchg
in
xchg
jns
ljmp
pop
xor
adc
sbb
stc
sub
lahf
lock
inc
sub
repnz
mov
jo
daa
cmp
jbe
sub
dec
xchg
ss
add
inc
lret
xor
cmpsb
jp
aam
jge
pop
dec
andb
ret
clc
add
xchg
loop
pop
fcomip
call
push
icebp
and
add
fcoms
rcrl
lahf
cmc
add
scas
add
subb
push
cmp
addr16
shlb
jne
pop
loop
test
orb
dec
pop
rcrl
js
leave
or
sbb
dec
inc
out
jg
add
adc
push
inc
subl
mov
sar
aam
jb
hlt
lods
das
inc
test
dec
and
push
adc
sbb
sub
jo
ret
push
sbb
adcl
fdivr
pop
pop
ss
push
int
xchg
xchg
sub
push
lods
test
push
cmp
xor
lock
add
or
lret
dec
xlat
dec
shlb
test
shl
in
add
rcrl
out
and
inc
mov
adc
cmp
iret
pop
rcrl
and
cmpsl
pop
and
adc
test
push
xor
push
jle
jb
adc
and
sbb
mov
loope
fcoms
shrl
jb
cwtl
jo
jle
jnp
xor
cmp
filds
dec
lock
cmpb
xchg
adc
add
aam
rcll
cmp
sub
adc
xchg
in
sbb
mov
push
imul
add
sbb
shr
fidivrl
push
pop
lret
jmp
pop
out
inc
dec
mov
inc
into
and
pushf
sbb
es
dec
flds
or
rcrl
mov
push
fdivrs
jno
mov
or
dec
int3
and
inc
sub
ss
mov
fs
xor
stos
push
addl
bound
push
es
out
jns
or
in
xor
sbb
add
xchg
push
xchg
testl
imul
mov
adc
jb
mov
jl
pusha
sub
popf
adc
jg
das
mov
jns
inc
enter
push
pop
inc
ret
xchg
push
adc
xchg
sbbb
mov
out
push
lea
mov
ljmp
dec
push
repnz
ret
int3
out
adc
dec
data16
pop
mov
test
xchg
sbb
mov
and
data16
lea
xor
dec
cwtl
xor
add
inc
jmp
xor
push
mov
fidivrs
mov
push
cwtl
push
xor
stos
xchg
and
stc
lret
dec
mov
add
pop
cwtl
sbb
jo
repz
fnsave
sarl
mov
fimull
mov
lods
and
cmpsl
fwait
sahf
push
outsb
roll
pop
jecxz
leave
lods
mov
pop
push
sub
cli
sbb
out
jns
mov
sbb
push
cmp
mov
and
sub
out
insl
or
xor
shrl
mov
out
in
dec
es
aaa
decb
cmp
ljmp
cmpsb
and
mov
xchg
xchg
jne
pushw
jecxz
in
imul
lret
cmp
mov
sbb
je
clc
jg
icebp
cmp
scas
fs
mov
mov
xchg
fstps
scas
cs
int
add
inc
pop
cmp
mov
inc
inc
pop
adc
push
push
mov
popf
xchg
in
inc
adc
rol
dec
pop
pop
call
xchg
das
mov
mov
push
adc
or
jmp
and
cli
fsubp
xchg
jmp
sti
mov
cmp
shrb
std
sbb
pop
testb
testb
or
aad
sarb
xchg
adc
xchg
xor
dec
loop
xor
and
insl
iret
mov
loope
imul
mov
mov
mov
add
in
les
cld
inc
cs
popa
cmpsb
pop
push
mov
iret
testl
xor
cmpsl
push
into
inc
mov
push
and
out
mov
adc
fcoml
das
xchg
inc
xor
stc
dec
imul
test
enter
cmpsl
clc
imulb
cmp
jge
add
iret
sub
in
xor
shl
shlb
mov
lret
push
roll
dec
pop
cld
insb
pop
pop
jns
icebp
shll
fsubs
push
js
sub
dec
adc
fs
std
jmp
pop
mov
add
imul
push
bound
cmp
xor
adc
xor
icebp
push
sti
dec
mov
and
xchg
mov
test
cmpl
out
jbe
jo
leave
mov
in
pop
lahf
or
mov
ja
cmpsb
jg
imul
jo
iret
dec
and
mov
jp
nop
pop
out
jg
mov
aam
and
sub
hlt
push
dec
add
jl
cmpsb
sub
mov
xor
and
pop
mov
sbb
clc
shlb
lret
lock
insb
in
outsb
insb
scas
lahf
inc
mov
mov
fisttpl
jecxz
jmp
out
lcall
clc
or
cmp
cmp
outsl
popa
leave
out
and
push
inc
xchg
xor
movsb
pop
mov
in
xchg
and
mull
cmp
mov
fisttps
jle
dec
mov
jns
pop
sbb
into
cmp
push
mov
jge
outsb
ficompl
push
adc
mov
repnz
ret
sub
xor
jnp
pop
inc
mov
sub
ret
mov
mov
adc
push
xchg
cmp
mov
jg
fisubl
lahf
sub
lcall
repnz
mov
out
loope
mov
push
or
rcrb
jg
mov
push
lret
jp
stc
inc
mov
cmp
test
aaa
cltd
adc
fdivrp
cs
sti
ret
cld
add
nop
xchg
out
dec
push
adc
dec
mov
dec
popa
jp
mov
push
test
jb
cmp
dec
add
sarb
jns
xor
mov
dec
in
adc
fcomps
jbe
or
jnp
scas
pop
out
cmc
push
xchg
inc
push
leave
pop
mov
dec
xchg
fs
repz
xor
push
xchg
cmp
xor
inc
test
lret
ss
xor
mov
call
repz
ficompl
cmp
pop
fsts
adc
xlat
adc
push
stos
ret
repz
insl
mov
add
jno
dec
pop
jmp
sti
pop
xchg
notl
int
jns
xor
mov
cs
inc
cli
cli
lcall
stos
cmp
mov
fisubrs
add
adc
add
out
push
out
dec
call
xor
imul
jns
popl
jns
les
jg
or
stos
setno
and
jg
sbb
xlat
mov
das
adc
jp
xchg
push
dec
and
sbb
mov
mov
lcall
ds
or
enter
mov
addps
push
sub
clc
movb
xchg
or
inc
nop
sbb
jno
xchg
lock
fmul
push
jns
fdiv
test
fwait
bound
mov
mov
jmp
bound
icebp
ficompl
adc
clc
jl
into
adc
add
stc
mov
aam
xchg
shl
cmp
pusha
xchg
and
inc
mov
push
mov
call
loop
out
adc
movsl
aas
mov
int3
test
pusha
or
jge
pop
lds
imul
jbe
xchg
or
outsl
test
leave
mov
lret
hlt
mov
dec
jo
outsl
or
outsb
repz
shrl
icebp
out
data16
inc
jns
sub
add
push
xor
cmc
mov
xor
orb
dec
and
sti
pop
cld
pop
bound
sub
je
pop
int3
int
xor
popf
out
mov
push
cmp
cmpsl
pop
pop
addb
mov
sub
jae
imul
movsb
arpl
jae
sahf
mov
sti
out
mov
inc
imulb
lock
pushf
or
mov
mov
xchg
out
cli
into
out
leave
and
pop
stc
mov
lahf
dec
dec
jle
dec
jp
into
jge
push
and
lcallw
cs
dec
mov
push
mov
je
sbb
ss
repnz
xchg
dec
inc
loopne
test
xchg
stos
jl
aad
adc
or
sti
cmpb
pop
xchg
sbb
stc
add
add
aaa
add
leave
xchg
cmc
unpckhps
push
or
inc
push
into
notrack
pushf
cmpsl
stos
mov
or
mov
in
rorl
popa
add
mov
sbb
add
pop
loop
jmp
jmp
aad
daa
xchg
inc
xchg
mov
ljmp
mov
dec
in
and
mov
push
paddq
pushf
pop
int
mov
adc
testl
ds
inc
ret
cmp
leave
or
push
out
adc
les
or
push
es
xchg
sub
push
ss
mov
ss
mov
ds
rcrl
xchg
movb
xor
scas
rcrl
adc
aad
scas
sub
cltd
inc
lret
pop
sub
adcl
inc
test
cmp
push
and
stc
sbb
adc
outsb
mov
jns
adc
mov
sarl
test
scas
mov
call
push
add
sub
or
stos
arpl
cmpsl
js
mov
fists
lret
mov
add
sbb
imul
aad
dec
pop
std
out
mov
mov
mov
mov
cmp
sbb
sbb
xchg
test
das
js
push
lock
shr
or
addl
or
icebp
sub
cmp
mov
and
jp
shrb
sbb
rcrb
fisttps
fs
inc
and
fs
mov
or
or
mov
sbbl
adc
dec
push
inc
add
mov
jge
inc
or
dec
push
data16
rol
jnp
inc
inc
mov
loopne
cmp
jbe
frstor
rcll
ficompl
mov
lret
or
popf
xor
or
adc
stos
fwait
xchg
popa
xor
mov
mov
pop
xor
shrb
ljmp
fldt
push
aas
jb
mov
mov
test
push
cmp
jp
test
pop
cmp
ljmp
sub
pop
sub
jg
dec
int
mov
clc
jae
mov
shrb
sbb
sub
push
lea
sbbl
push
add
rorb
xor
cmp
push
subb
insl
jnp
daa
xchg
cmp
out
and
mov
dec
out
inc
imul
cmp
ss
inc
push
mov
add
inc
ret
cmp
jae
xchg
xor
sbb
pop
sbb
cmp
add
stos
stos
add
dec
lea
jp
xchg
outsb
pop
je
scas
loope
jnp
mov
ss
loopne
aaa
pop
mov
mov
and
xchg
sub
test
in
imul
or
xchg
add
mov
fimuls
loopne
pop
mulb
push
fwait
adc
cmpsb
sub
cmpsl
mov
daa
loop
addr16
cmp
mov
inc
and
aam
mov
jnp
inc
mov
or
ffree
inc
push
inc
jg
out
pop
sti
mov
movsl
inc
jge
test
mov
inc
mov
shrb
lcall
jnp
imul
std
clc
rcrb
frstor
push
push
mov
and
inc
in
jecxz
jg
or
pop
movb
movsl
mov
dec
mov
sub
inc
cs
dec
popf
andl
sbb
jnp
cmp
sbb
dec
cmp
dec
les
sub
and
pop
push
jmp
and
lea
imull
sub
lds
fsubrl
das
xchg
aad
xor
in
sar
leave
mov
cmp
mov
jne
shrb
arpl
ljmp
inc
fs
sub
scas
fsubrl
divl
sub
jnp
dec
in
jmp
dec
push
fwait
mov
xchg
test
repz
aas
arpl
hlt
scas
add
sub
xchg
out
pop
lds
mov
dec
fwait
pop
imul
inc
test
testl
dec
dec
xchg
sbb
je
push
or
sbb
or
jp
xchg
mov
xor
out
std
mov
js
cli
cmpb
mov
orb
push
dec
fldcw
push
sub
enter
daa
mov
cmp
pop
in
xchg
or
dec
push
sub
mov
mov
xor
fsts
sub
xor
xchg
add
sub
call
daa
int3
fistpll
inc
sub
push
dec
mov
loopne
data16
ret
divl
fwait
push
lods
mov
cmc
push
js
inc
jp
cli
or
loop
in
pop
lods
xchg
fimull
cld
arpl
cmp
aam
xchg
ficompl
sbb
inc
enter
push
push
pop
insb
shrl
mov
std
loopne
decl
stc
lods
jae
int
sub
and
jo
pop
and
xchg
pushf
pop
imul
std
pop
cmp
nop
dec
mov
jge
loop
ss
js
test
outsb
cwtl
push
aad
add
mov
sub
mov
xchg
cmp
test
aas
jge
ja
inc
out
push
fcmove
mov
lahf
push
inc
hlt
dec
aas
mov
ret
dec
out
fstpt
testb
mov
push
inc
mov
aam
data16
int
stos
sbb
ljmp
pop
xor
orl
sbbl
popa
inc
xor
jae
sbb
rolb
sbb
mov
in
aad
add
cmp
cmpsb
mov
data16
sub
xchg
pop
shrl
lret
adcl
mov
or
mov
xor
push
cmp
lret
mov
push
mov
mov
cwtl
add
dec
icebp
faddp
inc
movsl
jp
lock
fdivrl
addr16
mov
push
xchg
lock
ret
aam
test
stos
or
push
insl
daa
outsb
in
push
lods
mov
js
add
aad
addr16
sbb
dec
pushf
push
ljmp
or
cwtl
sbb
mov
mov
cmp
in
jo
or
sub
ficoms
sub
hlt
cmpsl
andb
inc
sub
and
loop
aas
lods
cmp
cmpsb
mov
mov
or
pop
lock
xchg
popa
dec
add
movsb
insl
lds
ds
fcmovu
pop
push
aam
movsb
pop
je
std
sarb
rcl
mov
pop
pop
fwait
mov
cmp
arpl
aam
push
pop
mov
stc
sub
lret
adc
jmp
lods
imul
or
aam
mov
mov
and
mov
pop
push
add
sarl
stos
sbb
sti
lcall
repnz
mov
daa
js
rorb
sbb
ds
pop
sbb
push
shll
sahf
xor
lret
rolb
les
ret
jle
push
repnz
outsl
fistl
inc
into
mov
adc
or
pop
arpl
cmp
inc
push
pop
pop
fcoml
cs
pop
out
xchg
aam
fsubrp
add
xor
jne
data16
out
stos
add
pusha
mov
inc
and
rorb
add
cwtl
inc
sbb
call
fldz
jl
xchg
pop
imul
pop
in
mov
push
mov
das
cmp
add
inc
or
hlt
push
push
sbb
pusha
ljmp
cmp
pop
in
mov
mov
insb
pushf
cmp
and
mov
lock
push
stc
xchg
in
mov
faddl
rol
sub
pop
push
or
dec
mov
cmpsl
rolb
or
inc
jb
shlb
add
aad
cs
pop
jge
fidivs
push
push
jecxz
or
jmp
fldt
mov
loope
pop
aam
mov
push
pop
and
or
xor
pusha
add
rcll
jo
mov
stc
add
out
sub
lock
push
jne
mov
inc
mov
or
scas
push
outsl
mov
enter
data16
roll
pushf
cmp
dec
cs
dec
or
inc
in
sarl
jp
cmc
sub
rolb
xor
or
scas
or
inc
cld
and
jg
pop
pusha
jns
test
mov
or
lret
insb
stos
cmc
dec
lret
adc
cwtl
pop
cmc
repz
or
push
hlt
test
repz
jb
in
jne
xchg
mov
into
push
loope
insl
mov
add
loop
popf
mov
sti
bnd
mov
and
mov
dec
aad
mov
adc
nop
xchg
popa
les
pop
sub
mov
sbb
jle
jae
popa
jle,pn
mov
pushf
inc
jne
jae
cmp
xchg
mov
in
cli
push
dec
ljmp
adc
inc
scas
movsb
shl
sti
jle
cli
adc
dec
mov
mov
lret
inc
add
pop
insl
arpl
loope
pop
push
mov
add
mov
fcmovnbe
shrb
iret
addr16
push
repnz
stc
leave
inc
ja
mov
cmc
adc
fs
push
mov
push
or
sub
xor
adc
insb
out
pop
cmp
andb
insb
adc
add
cmpl
xor
popf
xor
clc
mov
add
aaa
test
and
test
sub
add
dec
icebp
sbb
popa
int3
loopne
stos
pop
imul
push
cmp
aaa
int
add
pop
ljmp
icebp
mov
adc
and
sti
es
inc
push
or
insb
jbe
aaa
xchg
sub
outsb
mov
aad
jmp
mov
jl
repz
jl
push
movsb
jle
xor
jge
dec
sub
test
lcall
sub
cld
xchg
inc
jb
add
push
push
pop
sub
cs
fs
push
sub
shrb
cmp
test
inc
gs
pop
ret
and
out
mov
pop
jecxz
xor
int3
xchg
std
inc
jp
sub
pop
mov
push
pop
adc
in
out
dec
mov
fs
lea
in
je
mov
lds
int
pop
cmp
imul
popa
mov
xor
adc
lcall
stos
adc
std
push
fiadds
lock
fidivrs
cmp
gs
lahf
je
sbb
test
imul
inc
mov
pop
xor
adc
lahf
sbb
loope
rcrl
fldcw
xchg
in
jge
xorl
pushf
fcmove
sbb
push
mov
dec
xchg
push
ljmp
sub
push
stos
jae
xor
fldt
in
cwtl
icebp
add
sbbl
jge
cmpl
dec
xlat
sbb
js
xchg
out
enter
icebp
add
mov
cmp
dec
xchg
test
add
sbb
jecxz
insl
dec
sbb
push
push
jl
lret
test
mov
fimull
dec
lcall
mov
jo
dec
pop
and
rolb
loope
adc
dec
add
push
cmc
cmc
clc
pop
roll
add
test
lahf
jno
sub
fcomps
mov
adc
in
shlb
mov
scas
adc
mov
jecxz
jge
mov
pop
mov
data16
in
xlat
test
dec
mov
in
jecxz
pop
test
lcall
mov
xor
stos
jl
orb
sub
pop
push
sub
cmp
mov
push
out
psrad
cmc
rol
lods
flds
and
add
fsubr
cmp
cmp
sub
lock
sbb
xchg
inc
push
cli
sub
sbb
mov
cli
and
xchg
daa
outsl
fisttpl
cmp
lock
sti
les
mov
mov
mov
ss
pop
mov
xlat
iret
nop
jecxz
jecxz
push
dec
andb
xor
es
mov
dec
mov
int3
mov
xchg
jge
scas
mov
jmp
int3
inc
push
gs
push
leave
push
scas
lret
mov
pop
mov
outsl
fwait
jp
xchg
loopne
jg
adc
sub
or
inc
and
enter
adc
loop
cmpsb
inc
and
in
xchg
shrb
dec
ds
andl
gs
cmp
js
js
mov
inc
jge
mov
adc
xor
dec
in
and
out
aas
sub
fwait
inc
mov
in
andl
lock
out
pop
mov
addr16
clc
outsb
and
or
hlt
mov
jne
daa
es
inc
shrl
inc
xchg
inc
jae
cmp
mov
push
push
test
add
pop
xchg
push
and
mov
mov
lea
test
push
push
insb
add
push
testl
push
lods
mov
test
clc
movsl
leave
std
inc
and
ret
aaa
dec
mov
data16
hlt
or
loop
xor
or
test
mov
dec
pop
lcall
iret
mov
ds
add
xchg
adc
outsl
mov
inc
icebp
enter
inc
adc
jmp
decb
jne
pop
push
cld
lcall
call
out
jb
or
push
sub
popf
add
insl
sub
jbe
sbb
push
push
jmp
cli
arpl
in
adc
jmp
fbld
push
mov
stos
fsubrl
jge
in
test
dec
les
out
push
pop
sub
push
xchg
sbb
sbb
es
dec
divb
or
xchg
outsl
push
pop
sbb
hlt
fstps
mov
shrl
xchg
cmc
cmp
aas
bound
out
jmp
or
shl
push
lret
fisubs
ret
add
xor
sub
push
std
push
push
popa
mov
sub
sbb
ljmp
jno
sbb
cmpb
lds
stc
pop
jge
sbb
mov
jno
nop
lock
dec
mov
jne
out
push
mov
jae
out
inc
push
cmp
sahf
fisubrs
xchg
aam
fs
inc
aaa
iret
sahf
out
push
or
sbb
addr16
push
movsl
rclb
ja
hlt
xchg
gs
les
and
out
mov
add
pushf
fsub
insb
cvtps2pd
pop
hlt
jne
inc
aad
test
jo
cmc
sbb
mov
sbb
xchg
adc
sub
testb
test
mov
add
in
cli
outsb
sarb
adc
adc
arpl
xor
and
add
out
stos
fisttpll
cmpsl
sbb
xchg
jns
and
or
cmpsb
out
mov
outsb
cmpsb
xchg
pop
sbb
xchg
lds
aam
mov
sti
sbb
test
mov
jge
inc
mov
sbb
hlt
fcmovb
cmp
lock
in
adc
mov
loopne
je
loopne
adc
loope
dec
sub
pusha
outsb
call
jbe
fsubl
fwait
push
dec
stos
and
xor
test
popa
ds
sub
hlt
andl
adc
adc
cmpl
adc
jg
addr16
pop
sub
mov
sbb
test
and
or
fwait
int3
xchg
dec
adc
mov
pop
add
insb
popf
cld
je
call
mull
movsl
pop
fcmove
adc
dec
xchg
push
or
adc
stos
sbb
push
mov
pushf
sbb
push
arpl
aad
es
movsb
sbb
inc
jmp
pushf
jg
outsl
out
inc
mov
dec
leave
push
aam
outsl
stos
jnp
gs
push
or
pop
push
test
fwait
mov
fsubs
mov
xchg
lcall
cmpsl
shl
jecxz
fstps
cmp
cli
inc
pop
insl
repz
and
out
shrb
pop
add
pop
lahf
call
fbld
in
xchg
inc
les
sti
mov
push
sbb
jo
sbb
cli
xchg
in
rcrl
pop
popf
or
jg
cli
xor
outsb
dec
inc
nop
xor
outsb
arpl
add
xchg
into
dec
pop
popl
adc
stos
xchg
cmp
fimull
jmp
out
jno
fs
xlat
ljmp
clc
adc
xor
bound
aaa
adc
xchg
dec
and
mov
popf
cli
repz
jno
and
mov
bound
jne
push
scas
sub
fnstenv
pop
xor
push
sbb
sbb
es
mov
dec
bound
sbb
movsl
lods
mov
ficoml
mov
mov
ljmp
scas
popf
rclb
adc
or
adc
lret
ds
out
xor
push
or
jns
xchg
cmpsl
mov
dec
loopne
add
xchg
dec
pop
push
push
shl
repnz
cmp
mov
cmp
xor
push
jns
lods
jns
daa
inc
daa
ljmp
inc
pushf
nop
sbb
sbb
pop
pop
xchg
test
shll
dec
pop
adc
mov
xor
aam
add
mov
dec
and
and
cmp
push
push
outsl
loop
outsl
pushf
fstpt
test
mov
inc
or
push
rorl
les
mov
data16
ss
movsl
inc
mov
cmp
push
loopne
jbe
push
xchg
inc
push
int3
daa
gs
jae
popf
sahf
or
fnstenv
inc
mov
mov
rol
sub
pop
mov
in
outsb
xor
out
rclb
jae
gs
loopne
pop
sbb
adc
shrl
loope
aam
mov
or
jbe
inc
sub
jnp
rcl
adc
into
lods
mov
and
push
repz
sub
add
insl
pop
mov
push
ret
das
sbb
fwait
adc
lock
fimuls
inc
cmp
mov
or
xlat
push
je
inc
sub
test
andl
loope
adc
out
aas
aad
mov
int3
jo
lret
xor
mov
sbb
jbe
mov
popf
jnp
dec
add
jle
aaa
dec
cs
or
popf
or
pop
cmpsl
arpl
xchg
shl
daa
sahf
xrelease
pop
test
cmpsb
mov
add
push
lods
dec
int3
in
outsl
fdivrl
shl
ret
rorl
pop
sbb
xchg
lahf
lret
dec
mov
mov
mov
inc
jmp
sbb
addl
mov
jmp
leave
outsb
lret
xor
adc
scas
in
inc
out
and
in
mulb
sbb
aas
iret
sub
or
pop
jecxz
mull
mov
ds
mov
lahf
add
js
ds
insl
xchg
ja
imul
and
cwtl
xchg
dec
push
push
sbb
xchg
mov
mov
arpl
rolb
fs
ljmp
repz
xor
push
call
nop
scas
test
mov
mov
dec
shrl
adc
mov
pusha
dec
xchg
cmpl
cs
inc
xlat
dec
pop
lock
add
lea
cmp
inc
adc
mov
shll
movsb
imul
sbb
scas
out
mov
pop
aad
pusha
ret
dec
jge
gs
push
xor
xchg
icebp
push
jge
fwait
pop
daa
xchg
data16
mov
xchg
mov
add
push
out
insb
add
ljmp
sub
lods
or
icebp
push
and
shll
aaa
adc
push
cwtl
xchg
cmp
xchg
sbb
pop
enter
shll
mov
bound
insb
mov
imul
inc
jbe
pusha
fdiv
les
jg
in
add
xchg
lahf
push
je
push
pushf
mov
out
mov
aam
test
fmull
mov
and
repz
insl
sbb
mov
arpl
push
addl
ljmp
out
in
jge
clc
xlat
or
mov
pushf
lock
test
ss
sarl
mov
ss
jo
jl
das
js
push
scas
icebp
inc
and
sub
xlat
pop
xchg
and
xor
inc
sarl
mov
pusha
push
pushf
and
dec
mov
in
jae
mov
mov
jecxz
xor
sub
cld
jecxz
fwait
mov
or
xchg
fldt
imul
or
test
xlat
popf
xlat
sbb
jb
push
jae
aam
mov
cmpsl
aas
fdivrl
loop
adc
test
mov
mov
popf
xchg
leave
out
test
int
sbb
jae
adc
nop
jnp
xorb
jecxz
aas
clc
adc
filds
and
pop
mov
sbb
fwait
test
arpl
jle
xchg
aas
mov
and
in
fildll
mov
icebp
and
rcrb
scas
mov
xchg
mov
call
push
orl
cwtl
adc
xorl
mov
shll
pushl
cmp
inc
xor
mov
data16
out
dec
and
inc
jg
mov
add
mov
movsl
stos
jnp
dec
cmpsb
jmp
je
pushf
cmp
mov
mov
out
fiaddl
or
pop
adc
xlat
sbb
repnz
dec
inc
jb
sub
push
fistl
mov
cwtl
test
xchg
je
cmp
mov
cmpsl
out
push
daa
aad
repnz
rcl
jno
and
nopl
imul
jmp
leave
pop
cmc
xor
outsb
push
fisubrs
popa
in
mov
adcb
sarl
adc
scas
inc
stos
aaa
pop
stc
ljmp
xchg
xlat
out
add
sbb
negb
sbb
cmpsb
repz
and
fadd
fdivrs
sbb
cwtl
repz
fs
xor
and
inc
iret
mul
xchg
xor
cmp
loopne
das
imul
lcall
mov
andb
inc
and
inc
mov
xor
mov
test
mov
xor
xor
mov
dec
subl
lea
fdivrs
hlt
sbb
hlt
xor
xchg
stos
jmp
push
lcall
sbb
or
repnz
out
in
pop
popa
push
cmp
popf
jno
mov
dec
testl
and
cmp
dec
mov
or
loope
icebp
imulb
dec
icebp
lea
data16
aas
and
push
test
push
loope
in
pop
mov
iret
ds
cltd
mov
cmpsb
rol
fildll
adc
loopne
fisttpl
lahf
into
mov
sbb
cmpsb
nop
jns
sbb
inc
xor
in
movsb
ljmp
and
fcmovnb
fnstsw
movsl
incb
push
xor
mov
cmpsl
xlat
xchg
pop
or
aam
cmpl
fucom
inc
or
or
push
je
dec
ret
mov
adcb
notb
cld
adc
imul
jle
pop
adc
int3
ret
rcll
and
in
mov
dec
mov
lret
adc
sti
scas
clc
or
xchg
sbb
das
pop
push
mov
mov
lret
insb
sub
aaa
cmp
dec
jl
pop
fnstcw
ljmp
mov
inc
pop
testl
imul
jge
shll
sbb
dec
cli
sub
push
out
in
repz
enter
out
fcmovnbe
fidivl
pop
mov
jecxz
jg
jmp
aad
add
mov
lret
pop
cmp
shlb
fld
jb
adcb
pop
ljmp
dec
jns
fldt
mov
and
aas
sub
or
popa
jnp
scas
icebp
cwtl
std
sbb
push
and
sbb
mov
and
out
xlat
inc
mov
xlat
sti
cmp
lcall
jle
jae
mov
dec
repnz
arpl
sub
cmpsl
xchg
divb
pop
xor
pop
out
inc
mov
scas
mov
dec
or
xor
pop
pop
and
add
mov
aad
call
dec
std
movsb
adc
xchg
cmp
lock
xlat
pop
pop
int
aad
pop
mov
scas
mov
punpckhdq
or
lods
dec
addr16
jnp
pusha
mov
cmpsb
push
adc
fldcw
cmp
fmull
lret
pop
popf
xor
daa
mov
add
sbb
xor
test
orb
push
cmp
inc
mov
inc
cmpsb
addl
xchg
imul
enter
pop
in
pop
shrl
or
stos
sbb
mov
adc
fdivrs
ret
mov
inc
aas
insl
out
test
mov
movsl
mov
stos
mov
sbb
add
jb,pt
xor
pop
in
enter
push
popf
cs
lds
ljmp
out
xchg
sub
adc
jae
jg
mov
mov
fldlg2
aas
dec
mov
mov
sub
push
clc
mov
dec
test
mov
cmp
cs
call
arpl
jecxz
dec
push
xor
add
sbb
xchg
pop
inc
aam
or
dec
mov
nop
jecxz
lods
dec
mov
mov
call
or
jne
hlt
les
int
rolb
fwait
enter
andl
movsb
stc
sub
mov
int3
jmp
and
inc
std
shl
mov
and
or
daa
loope
xor
bound
add
adc
and
pop
shll
mov
fistl
mov
aam
adc
stos
out
mov
xor
add
adc
adc
jbe
jecxz
and
mov
pop
das
stos
jne
scas
pop
rorb
and
sbb
cmp
insb
outsb
loop
shrb
std
dec
loopne
je
xor
les
fists
out
mov
cs
or
fimuls
fbld
ret
pop
aaa
int
flds
daa
xor
sbb
mov
xchg
mov
xor
pop
scas
scas
pop
jmp
adc
adc
lock
or
adc
add
push
xchg
push
xchg
test
popf
inc
loop
pop
xchg
faddl
cwtl
adc
pushf
pop
ljmp
mov
jl
sub
push
mov
pop
nop
into
mov
loop
in
std
in
mov
lret
stc
dec
arpl
lret
popf
mov
add
sbbb
fcmovnb
xchg
subb
sarb
add
mov
lods
cmp
cltd
in
popa
scas
shlb
dec
aaa
iret
sub
pop
sbb
jp
lret
jmp
leave
testb
sbb
arpl
jl
mov
bound
cmp
jl
fcmovnb
std
fwait
jae
lret
pop
jecxz
mov
fiadds
rorl
stos
mov
sbb
push
cmp
mov
push
cltd
je
xor
ficoms
cwtl
cmp
negl
sub
push
rcr
ret
xchg
mov
fcomip
ficomps
mov
shll
mov
or
pop
dec
in
dec
sub
int3
test
sbb
stos
in
jne
int
lods
mov
nop
inc
or
loop
lret
ljmp
pop
data16
adcl
icebp
int
insb
mov
push
int3
jb
arpl
push
lods
ret
cmp
test
ss
arpl
aas
sysexit
out
aas
pop
popf
in
cmp
push
xchg
rcrb
mov
in
lcall
sahf
aas
inc
sbb
insl
pop
lea
xor
bound
mov
push
jne
outsb
cwtl
icebp
inc
mov
loopne
and
in
int3
addr16
data16
sti
xor
mov
or
xchg
int
ja
pop
xor
imul
dec
sub
stos
or
jecxz
cmp
movsb
stos
push
xor
adc
mov
insl
mov
or
out
mov
sub
mov
in
or
and
nop
inc
daa
jb
xchg
mov
jo
jp
stos
pop
es
test
lods
cmp
lcall
out
xor
mov
sbbl
xchg
ss
stos
imul
ret
mov
cmpsl
daa
xchg
adc
or
xorl
lcall
sbbl
jne
push
mov
push
add
lret
outsl
call
add
cmc
out
dec
gs
sbb
fwait
movsl
gs
into
xor
mov
jmp
aad
cmpsb
inc
test
into
pop
cli
movsl
inc
les
adc
sub
inc
icebp
mov
cs
inc
gs
push
out
or
push
or
pop
mov
jmp
out
rolb
das
xchg
out
lret
jns
push
ficomps
cmp
test
outsb
dec
js
xchg
jnp
sub
rcrl
shrb
aam
jecxz
push
and
pop
mov
movsl
mov
lds
outsl
in
dec
inc
lret
push
mov
dec
push
andb
mov
sbb
cmc
pop
xor
cltd
aaa
mov
pushf
xor
das
xchg
adc
out
mov
es
pop
sub
insl
push
mov
test
add
inc
dec
daa
aas
stos
clc
rorl
sbb
cmc
push
xchg
decb
jg
cli
xchg
or
mov
out
push
xlat
cld
mov
mov
push
frndint
and
scas
popf
daa
enter
test
out
insl
pushf
test
add
and
movsl
aaa
lock
jl
addb
xor
gs
or
call
dec
shll
pusha
icebp
xlat
jmp
mov
mov
xor
mov
push
icebp
lock
or
ss
outsb
dec
sub
inc
nop
cmp
jl
jae
push
push
imul
mov
lds
xor
sbbl
clc
popf
inc
cmc
push
mov
push
mov
or
aas
std
bound
cmp
loopne
dec
outsl
mov
jmp
and
int
cli
shl
cmp
or
sbb
fimuls
andl
push
and
sbb
sub
xchg
add
fstpt
jnp
inc
ljmp
fwait
mov
cltd
test
out
leave
insb
shlb
add
mov
int
popf
insw
iret
pop
addl
nop
aaa
mov
pop
cmp
and
pop
cmp
cld
xor
sub
dec
jno
aam
sahf
orb
movsl
xor
inc
add
imul
mov
mov
out
out
pushf
dec
mov
je
cmpsb
push
mov
mov
sbb
sub
out
push
mov
adc
jmp
xchg
fidivrl
negb
sbb
ljmp
xchg
mov
das
add
pop
aaa
fstpt
and
outsb
lcall
lret
cmp
dec
dec
fcompl
push
insb
test
test
jno
cmp
inc
add
and
cmp
mov
dec
outsl
pop
das
push
cmp
jecxz
scas
xchg
sahf
sbb
mov
sar
sbb
in
rorl
sbb
cwtl
ret
dec
xchg
popf
cmp
pop
sbbb
mov
cmp
fs
cmp
push
mov
inc
gs
push
insl
jbe
scas
daa
adc
lods
sahf
mov
inc
jp
aad
cmp
jo
inc
pop
addl
sti
mov
iret
pop
cmp
lret
shll
movlps
rorl
movsb
ljmp
std
pop
scas
out
clc
lea
iret
pusha
out
ror
jg
mov
adc
test
lods
pop
repnz
sbb
in
jl
scas
dec
add
sub
fdivl
test
adc
inc
call
jmp
jnp
and
mov
mov
xchg
popf
pop
je
clc
xor
mov
data16
gs
imul
and
push
cmp
inc
cmp
fdivr
add
dec
dec
and
xchg
add
mov
or
cmp
loop
cltd
pushf
cmp
imul
loope
jne
pop
and
or
or
roll
jle
andb
call
mov
sub
popl
xor
pop
dec
dec
mov
outsb
loope
popa
test
repz
push
popf
push
in
push
mov
nop
adc
jmp
test
mov
call
stos
inc
gs
pop
and
inc
repnz
add
addb
mov
inc
pop
daa
cmc
and
jl
pop
insl
dec
adc
popf
cmpl
test
aam
mov
movsl
pop
movsb
jae
movsl
inc
sub
arpl
cwtl
out
mov
rclb
mov
psllq
cwtl
insb
or
or
inc
pop
mov
daa
enter
xor
idivl
sub
cwtl
cmpsl
fisubrs
aaa
sbb
jae
aam
adc
test
sbb
push
push
popa
or
int
cmp
mov
je
add
pop
mov
int3
xor
add
ret
hlt
and
sbb
cld
lcall
mov
aaa
inc
dec
adc
push
inc
and
pusha
int3
stos
xchg
rcr
adc
jae
mov
in
popa
sbb
fistps
sub
push
fwait
rolb
pop
loop
jecxz
pop
pop
jle
aaa
add
leave
in
mov
dec
pop
mov
pop
sbb
in
pop
push
add
pop
adc
aam
mov
add
mov
ja,pt
add
jno
adc
inc
sbb
xor
mov
mov
add
cmp
and
repnz
repnz
push
mov
andb
in
pop
jno
pop
xchg
pop
lock
jmp
clc
mov
add
mov
mov
fldt
inc
or
mov
jb
neg
js
jecxz
pop
gs
sbb
repnz
or
js
inc
xchg
out
dec
call
jp
clc
jbe
adcl
fdivp
push
or
adc
dec
popf
fwait
out
cmp
pop
jmp
stc
xor
fidivl
pusha
xchg
mov
out
cmpsl
xchg
outsb
nop
add
insl
cltd
mov
jns
sbb
cmp
ja
aas
add
test
bound
into
sub
ficomps
pop
fidivrs
mov
stc
mov
repz
xor
int3
arpl
or
mov
mov
jle
dec
fisubl
dec
adc
inc
test
jp
or
adc
test
repnz
arpl
fwait
mov
ljmp
xchg
pop
imul
cli
es
js
loopne
ror
insl
mov
inc
add
push
mov
nop
addr16
inc
xchg
mov
push
sub
inc
sbb
xchg
inc
lock
bound
xchg
loopne
push
adc
push
sarb
push
or
fisubrs
shrl
pop
repz
mov
adc
inc
movb
sahf
jg
adc
inc
mov
cmc
cmp
jge
js
push
imul
xor
pmaxub
xchg
cmp
lret
mov
sbb
push
das
lret
mov
psubq
xchg
xorb
adc
int3
mov
adc
dec
and
js
mov
cmp
fldl
in
cmp
in
hlt
out
sti
jge
sbb
fcomps
inc
clc
pop
xchg
gs
out
popa
jp
stos
imul
shlb
dec
sbb
sbbb
jno
scas
and
arpl
jl
or
xor
pushf
xchg
jnp
outsl
popa
inc
mov
and
and
and
mov
stos
les
movl
or
xor
push
mov
xor
cmc
stc
sbbb
or
cmp
stos
fwait
push
bound
jb
test
sub
mov
adc
push
jno
pop
cld
and
test
das
and
sti
outsb
and
xchg
lcall
int
cltd
jb
dec
test
jnp
jns
in
imul
leave
pop
lret
scas
adc
cmpsl
inc
mov
xchg
push
xlat
ret
xor
inc
xchg
js
mov
mov
jb
pop
xor
add
in
shll
enter
dec
cmc
add
aaa
stc
mov
lret
adc
sub
rcrb
nop
push
stc
xchg
xchg
in
out
jle
pop
out
notl
ljmp
test
iret
mov
sbb
dec
jae
out
xchg
fdivrs
mov
dec
mov
dec
mov
pop
adc
stc
cli
test
mov
fidivl
xor
fwait
ss
or
das
lds
ss
add
push
cmp
daa
ffree
aas
mov
pop
jmp
test
into
cli
push
push
add
lea
loopne
lods
cmpsb
and
clc
into
enter
mov
sub
arpl
sbb
pop
popa
ficoms
stc
jle
jne
cli
fcomp
dec
jge
fistpl
sub
hlt
js
sub
out
daa
hlt
les
cmp
add
xchg
mov
xor
add
imul
icebp
or
pop
push
lea
pop
pop
cld
dec
loop
les
into
ss
scas
out
inc
mov
pop
out
inc
rolb
inc
ja
xchg
daa
cmpsb
inc
lea
aad
fcomip
ret
nop
jg
cmc
xorb
pop
adc
loop
cmp
cmpsl
jmp
pop
push
fsubp
mov
xchg
test
push
push
dec
and
add
orb
sahf
cmp
loope
mov
movsl
cmp
divl
repz
clc
stc
imul
dec
mov
aas
fidivrl
fcom
or
cmp
pushf
ror
movsl
push
adc
imul
and
pop
lock
dec
pop
in
mov
jnp
or
pusha
jg
adcb
pop
ss
or
push
inc
sub
jmp
push
mov
xor
jecxz
push
jl
adc
push
sub
clc
out
jle
inc
mov
add
and
pop
shrb
mov
push
test
jns
and
jnp
pusha
cmp
cmp
pop
call
push
mov
or
loopne
adc
test
jbe
add
cld
mov
xchg
adc
jg
arpl
movsb
mov
cltd
loopne
pop
dec
sarl
xchg
sbb
ds
dec
push
inc
enter
lret
pusha
add
pop
mov
dec
ljmp
sub
jp
mov
jbe
xlat
or
xor
int
adc
or
ret
push
pushf
stos
jmp
adc
mov
jb
insb
add
xchg
adc
fidivs
xchg
out
repz
mov
ss
push
test
scas
mov
cli
lds
mov
out
cltd
mov
rcrb
outsb
lahf
int
sub
scas
les
mov
dec
sub
insl
pop
std
xchg
aam
outsl
xor
icebp
fiadds
gs
sbb
sub
fcmovu
push
push
testl
cltd
xchg
shll
push
imul
popl
insl
mov
out
add
notb
and
push
and
cmp
or
pop
xchg
sbb
outsl
dec
sbb
fwait
pop
dec
jns
cmpsl
xorb
dec
test
int
in
jo
stc
nop
cwtl
mov
jno
pop
mov
mov
hlt
or
and
push
ljmp
add
jmp
jp
pop
mov
inc
add
das
pop
cmp
je
jmp
adc
or
mov
movsb
push
stc
or
inc
mov
insb
and
pop
cltd
movsl
loope
lea
sub
stos
add
jl
jmp
test
jne
pop
pop
jmp
mov
arpl
add
dec
les
clc
cwtl
ficompl
dec
sbb
fsubrl
jmp
sub
cmp
pushf
jbe
movsl
pop
pop
add
test
xor
cmp
cmpsl
adc
fisttpl
jg
lods
push
cmpsl
ds
pop
cmp
sub
stos
jbe
cmpsl
ds
or
cmp
scas
dec
xlat
sbb
dec
int3
adc
fcomps
fdivrp
repz
and
nop
xchg
inc
mov
pop
sub
arpl
add
mov
shll
pop
popf
imul
xchg
cmp
out
andl
and
jne
dec
jmp
cmp
stos
aad
push
into
xchg
add
inc
add
dec
push
jnp
loopne
mov
cmp
or
mov
test
mov
inc
push
les
dec
mov
pop
js
ds
mov
mov
sbb
or
stos
push
pop
mov
xor
add
cmc
in
push
mov
add
sbb
inc
fwait
inc
jb
lret
jmp
out
mov
mov
jecxz
jno
movsl
frndint
mov
xchg
cmp
dec
and
mov
inc
cli
pop
jo
cli
insb
mov
lods
cwtl
mov
jno
mov
xchg
cwtl
jo
mov
xchg
adc
push
lcall
mov
cmpb
mov
mov
adc
sbb
inc
mov
in
and
jmp
adcb
and
or
sarl
jo
or
ret
xchg
push
lahf
push
js
pop
ljmp
dec
fsubs
scas
or
mov
mov
push
dec
jns
mov
inc
inc
dec
aaa
jbe
movsl
adc
mov
push
adc
or
imul
hlt
stos
dec
pop
add
es
jmp
or
sti
mov
fsts
popa
in
pop
loopne
fmul
jg
lret
out
and
sahf
and
push
inc
dec
outsl
imul
lods
sbb
jns
xorb
rorl
add
add
mov
scas
sub
fcmovnbe
clc
shrl
sub
jo
cmpsl
sub
test
mov
lock
jg
orl
xor
enter
adc
or
push
mov
shlb
scas
div
cmp
cmp
lods
in
cmp
dec
bnd
inc
in
imul
jl
xchg
in
ss
xor
and
pushf
mov
dec
mov
mov
cmpsl
or
push
sti
jecxz
sub
sub
xor
clc
out
mov
xchg
movsb
adc
jb
dec
mov
mov
jge
cmp
es
shl
jno
shl
cmpsl
or
push
int
sbb
pop
dec
push
leave
inc
jne
enter
pop
mov
sub
popf
pop
jmp
aam
hlt
push
push
mov
adc
pop
mov
ret
ficompl
adc
push
scas
shr
arpl
call
xchg
ss
sbb
xchg
std
ljmp
jnp
push
pop
sub
add
jecxz
data16
adc
lahf
aaa
or
lcall
push
mov
pop
inc
outsb
cs
jmp
mov
cmp
jg
sub
adc
pushf
mov
sbb
push
mov
lods
fcomip
jl
call
ficoms
inc
dec
push
out
cmpsb
pop
add
cmp
test
dec
ret
jp
jge
mov
dec
cli
dec
xchg
fst
sbb
test
sbb
inc
lock
lock
dec
push
aas
cs
push
pop
xchg
mov
scas
dec
cmc
out
jge
cmc
fadd
das
lods
mov
cmovle
test
sbb
add
pusha
dec
rcr
xor
rolb
stos
out
imul
addb
jge
inc
mov
xchg
sbb
mov
fsubrs
mov
sbb
and
mov
aad
test
push
jl
adc
push
ss
aad
lahf
cmp
push
mov
imul
add
movsl
mov
scas
aad
pop
or
enter
or
repnz
gs
push
jae
jle
add
jns
enter
lret
pop
shlb
push
sbb
out
out
hlt
jns
shrb
fldcw
sti
cmp
cmp
movsb
mov
xchg
pop
push
mov
shll
push
push
fiadds
cmp
mov
sbb
add
jno
jl
xchg
push
xchg
int
and
cmp
iret
and
ret
adc
je
sti
mov
jno
xor
push
leave
xchg
mov
and
daa
and
pop
shrl
gs
outsb
shll
iret
das
aad
mov
push
jb
icebp
dec
push
mov
cmp
jno
fwait
jno
pop
xchg
mov
push
adc
push
cmp
nop
and
pop
jge
dec
xor
mov
int
and
lea
and
mov
push
push
inc
mov
neg
inc
dec
arpl
push
mov
fstpt
push
jg
mov
pop
ret
add
sahf
in
jb
lret
jns
add
fwait
in
push
mov
fiadds
ret
mov
sub
push
pop
mov
mov
orb
fwait
cmp
in
xchg
addl
lds
xor
xchg
or
or
psrld
fcoml
pop
and
add
lock
lods
push
dec
mov
pop
inc
out
daa
aad
xor
push
mov
outsb
imul
inc
mov
mov
adc
inc
loope
stc
jbe
loope
and
cmp
jne
sti
mov
mov
fidivrl
outsl
xor
ret
sbb
out
sbb
add
pop
xor
push
push
mov
fldenv
mov
mov
bound
repz
test
and
pop
mov
stc
mov
add
test
mov
imul
xchg
push
sbb
inc
mov
xor
daa
mov
gs
fsubrl
xor
or
push
mov
lcall
dec
aaa
cmp
in
xor
lock
leave
push
fwait
into
dec
daa
xorb
hlt
mov
xchg
je
xchg
xchg
push
js
subb
fdiv
push
call
add
pop
scas
add
xor
sbb
pop
imul
sub
jmp
arpl
xor
idivb
lds
cld
pusha
int3
dec
stos
and
jb
mov
fiaddl
insb
cmp
push
adc
jge
leave
popl
pop
nop
neg
les
jecxz
les
scas
dec
mov
aas
sbb
mov
cmp
xchg
xor
loope
pop
gs
cltd
mov
ret
dec
mov
xchg
pop
push
js
scas
je
aam
repz
mov
mov
mov
stc
test
xor
sbb
jns
js
adc
xchg
inc
leave
repz
add
out
aam
xor
adc
sub
jne
push
dec
stos
loop
dec
mov
js
arpl
pushf
call
rcll
or
jne
jp
adc
stc
sub
rcrb
mov
push
xchg
mov
jae
dec
movaps
xchg
stos
je
fmull
inc
pusha
push
mov
test
shll
pop
lea
and
cmc
xchg
pop
jo
jecxz
inc
lcall
cmpsb
rcll
sti
mov
fcmovu
fsubs
jl
or
in
cmpsl
jno
xor
mov
out
inc
xor
mov
mov
lds
test
push
xor
jmp
mov
and
adc
faddl
jo
push
sub
inc
test
jb
into
or
xor
xchg
sbb
aad
je
repz
push
insl
jne
mov
cmp
xchg
in
inc
ret
inc
or
lds
lods
loop
cmp
out
popa
or
int3
out
dec
add
mov
add
sbb
stos
xchg
das
xchg
std
int
add
mov
mov
dec
outsb
mov
cmp
fcmovu
in
jmp
jbe
adc
int
xchg
das
xor
fcoml
mov
sahf
cmpsb
mov
stc
xchg
loop
int3
xor
prefetchwt1
or
orl
mov
cli
out
into
rorb
jae
pop
pop
jb
iret
cmpsl
pop
pop
inc
jns
sub
dec
xlat
jno
imul
add
jmp
mov
add
jmp
mov
nop
mov
sahf
fidivrs
out
popf
sub
pop
mov
gs
das
pop
in
xchg
pop
pop
push
imul
cltd
fidivs
pop
mov
mov
pop
jg
xlat
and
insb
push
push
sub
insl
jp
mov
call
fldcw
adc
dec
xor
clts
sbb
mov
inc
jg
xor
adc
pop
insl
mov
xrelease
fildll
ljmp
xor
test
sub
inc
cmp
fs
pop
jge
test
sbb
cmp
xor
mov
iret
dec
andb
mov
jecxz
push
das
push
fistps
movsl
pop
mov
mov
mov
mov
sbb
stos
pop
pop
dec
cs
in
repz
xchg
sarl
push
xor
xor
in
mov
lahf
fisttpll
pop
int3
xor
or
pop
xchg
or
mov
sahf
out
movsb
shr
jno
rcrb
subl
xchg
in
subl
add
mov
movsb
sbbb
jo
adc
into
dec
sub
mov
rorb
and
cmp
pop
dec
adc
inc
lods
mov
add
and
leave
sub
pushf
jno
das
lret
jge
xor
push
mov
push
int3
fcoms
cli
push
pop
cmp
inc
jp
pop
adc
push
inc
aas
or
dec
xchg
mov
cmp
or
sub
outsl
faddl
fidivs
in
loop
in
sub
lea
pop
gs
xchg
sahf
push
hlt
loope
cmc
jl
dec
jbe
punpckldq
adc
mov
fwait
iret
pop
sbb
pop
mov
aaa
mov
std
ret
sbb
sbb
repnz
adc
loopne
shll
xor
test
lock
push
fcoml
jnp
ret
out
daa
std
jle
ret
cwtl
mov
xor
inc
mov
add
pop
loop
push
fs
mov
scas
inc
pop
lcall
rorb
pusha
mov
mov
gs
clc
add
test
in
dec
mov
jmp
in
into
loope
ja
and
mov
xor
lahf
dec
ret
push
roll
stc
fstl
sar
insl
jo
add
or
push
leave
adc
sub
xchg
bound
mov
xchg
loopne
movsl
or
xlat
inc
shlb
fdivrl
mov
dec
pop
les
outsb
push
cld
and
fbld
andps
shl
push
out
push
sub
into
fistl
test
dec
push
or
rorl
xor
lds
fld
adc
subl
cmp
pushf
enter
fs
sahf
or
ret
imul
cwtl
lcall
inc
enter
fmul
sbb
inc
cmp
sub
clc
dec
adc
mov
cli
sbb
jg
lcall
mov
data16
and
sub
fldt
lods
stos
inc
imul
add
test
sub
je
inc
fs
add
mov
sarl
mov
add
fmul
inc
sub
lahf
shlb
sahf
dec
sbb
xchg
cmp
enter
pop
pop
sub
into
add
adc
mov
jb
jnp
xchg
dec
into
ja
not
fildll
mov
sbb
mov
je
bnd
adc
ss
arpl
xchg
ret
inc
out
in
lahf
cmp
in
test
pop
into
shrb
fwait
lret
xchg
test
mov
mov
aas
push
or
cli
fildll
sub
jle
bound
mov
jb
add
xlat
and
idiv
addr16
test
fmul
cltd
jg
sbb
out
xor
cs
dec
stos
aad
or
push
js
sub
shll
pop
out
adc
testl
jae
sbb
jno
lods
inc
sar
imul
dec
push
push
mov
pop
loope
inc
rcrl
xchg
cmpb
mov
xor
and
movl
jnp
mov
dec
jae
and
sahf
out
roll
pop
sbb
test
aad
lods
and
outsb
mov
mov
aad
mov
fwait
xchg
jl
sbb
inc
and
sub
xor
xor
pop
adc
xor
sub
imul
in
cmpsl
rclb
xor
stc
sub
jae
xorl
xor
loop
fcoml
add
push
xchg
xor
test
imul
adc
xor
fprem1
mov
sbb
lcall
dec
lods
push
aad
fiadds
inc
mov
dec
mov
sbb
adc
movsb
movl
in
subl
jnp
sub
pop
out
dec
insb
clc
je
mov
sbb
sti
inc
lods
lods
fldenv
mov
lds
lods
cmp
fldt
pop
mov
jne
dec
aad
inc
bnd
aad
arpl
roll
loopne
push
pop
int3
inc
movsb
xchg
faddl
jae
and
iret
fsubp
sbb
jno
test
add
push
mov
mov
std
aaa
push
add
cmc
mov
scas
maskmovq
pop
movsl
push
fmul
mov
out
call
and
adc
subb
insl
into
inc
xchg
test
xor
xchg
rorl
mov
sbb
pop
mov
retw
fcoms
xor
mov
popa
arpl
mov
xchg
cltd
xchg
or
dec
lods
or
shrb
jb
fbld
add
das
enter
fprem
fistl
cmp
mov
out
xchg
add
test
mov
test
in
cmp
mov
inc
addl
fldcw
cwtl
sub
stos
outsl
jecxz
mov
inc
test
call
ljmp
shll
and
sbb
fisubl
rcrb
xchg
jo
mov
push
lret
push
pop
cmp
xchg
dec
adc
jecxz
inc
ror
data16
in
frstor
mov
lods
scas
in
insl
test
inc
in
fcompl
inc
mov
add
lret
cmc
jg
fsubr
xchg
divl
aad
xchg
pusha
xchg
into
aas
cmp
and
adc
sbb
lret
test
out
sub
lods
gs
movsl
and
roll
aas
or
pop
popf
or
ss
push
ret
inc
shl
push
lods
lods
and
dec
aam
xorl
imul
outsl
out
es
call
pop
sub
jnp
test
cmpsb
daa
cmp
add
add
mov
lds
rcrb
daa
or
rclb
aas
movsb
push
dec
inc
rclb
sbb
test
or
scas
lods
mov
outsb
addr16
in
lea
adc
add
mov
movsb
call
test
mov
adc
dec
int3
out
aad
fabs
mov
subl
push
xchg
pop
cmp
mov
dec
stc
sbb
lock
add
scas
jnp
popf
icebp
push
mov
xchg
pop
dec
stos
push
mov
adc
test
lods
push
enter
and
aam
push
mov
aas
inc
sbb
or
enter
fwait
jbe
andl
or
mov
das
cltd
xchg
ja
and
stc
dec
and
popa
pop
ds
lahf
adc
lret
hlt
js
mov
xchg
ds
push
adc
shrl
lcall
sub
adc
ljmp
jmp
es
jp
leave
jg
xrelease
lcall
fstpl
outsl
pop
fwait
cmc
outsb
movsb
add
repnz
and
ljmp
insb
push
iret
lods
xor
fs
mov
push
mov
sub
jl
icebp
jmp
jmp
sub
jecxz
inc
int3
cmpsb
and
pop
insl
mov
cmc
ljmp
filds
xchg
pushf
cltd
repnz
outsl
loop
sbb
mov
add
insl
imul
lret
addb
adc
je
or
adcl
nop
sub
std
test
mov
insb
inc
jb
adc
inc
mov
jl
mov
jp
shl
or
cli
in
jnp
fistpl
fwait
icebp
cmpl
es
pop
and
jo
mov
test
popf
inc
pop
adc
imul
inc
push
ret
sbb
dec
adc
fldt
in
cld
iret
mov
movsl
add
repnz
inc
or
sbb
push
frstpm(287
fs
test
es
push
je
sub
sbb
hlt
ret
pop
mov
adc
jns
repnz
jmp
xchg
or
push
sub
push
adc
pop
outsl
xlat
sbb
mov
push
testb
cmp
or
push
inc
lcall
mov
add
adc
in
ja
dec
add
xor
aaa
and
and
lcall
notl
imul
mov
daa
mov
xor
cmc
into
cmpsl
lock
mulb
loop
filds
cltd
fwait
clc
sbb
xchg
pop
mov
mov
mov
mov
in
push
inc
pop
sbb
shll
repnz
xchg
push
sarb
push
push
rolb
test
xorl
out
pop
mov
sbb
pop
mov
jae
shlb
xor
loopne
in
or
and
cmp
push
cmc
mull
fwait
cmp
mov
lods
call
push
shlb
cmp
mov
push
outsb
pop
cld
cmp
js
xchg
jnp
imul
push
imulb
jecxz
sub
cmp
add
out
daa
rol
fimuls
jmp
xor
push
das
or
mov
pop
add
popl
sub
cmp
and
sub
mov
add
shlb
sub
add
mov
add
xchg
pop
inc
out
and
adc
sub
jne
inc
mov
dec
inc
es
lea
mov
push
or
inc
into
or
sub
push
push
sub
daa
adc
adc
mov
xchg
rcrl
fmull
les
or
rolb
and
pop
mov
scas
mov
outsl
push
add
inc
ror
cmp
sub
imul
sub
push
pop
adc
pushf
fcompl
loope
and
pop
aas
shlb
mov
xchg
and
xor
push
xchg
or
lds
shll
imul
loopne
outsl
loop
dec
std
sub
jl
arpl
icebp
shrl
cmp
sbb
scas
add
mov
or
adc
out
add
and
mov
xor
outsb
mov
sbbb
arpl
aam
adc
je
movsb
adc
fs
flds
test
lahf
arpl
push
push
pop
and
push
adc
or
adc
push
in
mov
dec
lock
pop
and
loope
aas
adc
aad
mov
cmpsl
pop
je
pop
pop
lock
dec
pop
push
test
repz
outsb
in
jg
jbe
xchg
out
adc
out
je
or
rcr
mov
mov
sbb
pop
dec
in
stc
sub
gs
pushf
push
enter
xor
aam
dec
pop
mov
mov
push
dec
lock
pusha
mov
push
les
add
push
inc
mov
ds
jb
lds
pop
dec
movsl
xchg
pop
fmull
pop
inc
arpl
mov
mov
lods
out
orb
xchg
mov
int3
lock
jge
jg
ljmp
inc
cmp
testb
sbbb
and
icebp
sbb
mov
add
and
push
lea
and
rcrl
pop
lahf
addr16
adc
dec
adc
lods
cmp
dec
and
clc
jl
inc
hlt
add
loope
pop
lea
frstor
xorb
test
mov
in
mov
rclb
adc
insl
test
mov
jno
icebp
push
hlt
xchg
shll
pop
add
lock
iret
ss
add
inc
sbb
or
sbb
lea
sbbb
lahf
mov
fst
jecxz
mov
lcall
frstor
cmpsb
mov
clc
cmc
dec
mov
mov
test
mov
jo
mov
sub
lcall
mov
fwait
mov
pop
fnstsw
and
js
stc
jge
add
mov
stos
aas
scas
dec
out
mov
mov
xchg
int3
push
xchg
subb
test
jp
add
cmpsl
inc
xchg
test
fs
xchg
hlt
fbstp
jg
imul
call
mov
mov
es
repz
stos
fdivrs
xor
movsl
int3
pop
in
xor
clc
jge
ror
sub
inc
mov
push
adc
mov
insl
stos
jb
mov
enter
dec
sub
mov
xchg
sub
sub
lret
sbb
jnp
repz
mov
lods
in
scas
pop
lea
jae
lcall
lds
sub
adc
adc
mov
cld
and
mov
clc
insl
std
lcall
aad
testl
lea
or
addr16
and
xchg
in
test
inc
in
sbb
jp
sahf
iret
push
jno
dec
xor
or
push
fdivrs
imul
jge
into
mov
lods
loopne
ss
fstps
hlt
mov
cmp
lds
imul
in
arpl
sbb
push
mov
mov
xor
imul
lea
hlt
sarl
mov
inc
inc
insl
pushf
xchg
jp
jmp
fsubr
call
cmpsl
les
cmp
pause
pop
push
aaa
lahf
pop
push
dec
cli
or
push
pop
shlb
push
push
cmpsb
dec
pop
mov
and
std
outsl
push
out
sbb
push
ds
xchg
pop
dec
inc
shl
hlt
and
pop
les
out
fbld
outsb
mov
xchg
push
and
adc
mov
mov
cmpsb
mov
fpatan
pop
movb
add
int3
jnp
cmp
pushf
fisttpll
adc
sti
mov
push
sbb
and
xchg
pushf
dec
pop
pushf
lds
jmp
shl
xchg
and
jl
pop
roll
aam
pop
dec
js
dec
lcall
adc
in
sbbl
dec
inc
aad
pushf
xchg
dec
rcr
mov
add
push
jle
cmp
mull
repnz
sub
shr
pop
dec
push
cld
mov
mov
jp
or
cmpsb
inc
aas
pop
int3
mov
aad
leave
lret
sarb
mov
sbb
fs
pop
mov
shrb
cld
lds
enter
sbb
mov
testb
xor
fs
divb
add
fdivl
movsl
ficoms
loop
cli
movsb
inc
push
jp
push
xchg
pop
ljmp
call
cmp
mov
xlat
sub
fnstcw
shlb
dec
or
jnp
nop
js
adc
xor
mov
pop
mov
insl
outsl
inc
dec
inc
or
filds
aad
bound
or
loopne
cmp
mov
xor
and
xchg
sbb
add
dec
push
jmp
mov
in
and
sub
sbb
popl
iret
int
push
cmc
inc
jns
sbb
mov
in
jnp
push
xor
scas
sti
inc
hlt
jo
ret
in
cmp
rorb
dec
incb
jle
in
ror
mov
xchg
adc
ret
jb
jge
xchg
cwtl
pop
adc
cmpsl
cli
mov
pop
pop
jbe
mov
push
mov
pop
push
in
outsb
mov
jle
mov
gs
iret
sub
adc
inc
mov
cwtl
out
pop
cmpb
pop
adc
mov
xor
pop
fwait
cmpl
or
roll
fldenv
fstpl
xchg
aam
xchg
test
push
jle
xchg
pop
stos
pop
sti
mov
and
xor
dec
push
mov
ret
inc
fildll
ja
jp
test
cmp
and
adc
lods
inc
nop
push
push
stos
inc
push
cmp
imul
sub
pop
inc
jecxz
and
sub
pop
popa
xor
mov
imull
mov
arpl
mov
sbb
aam
iret
mov
xchg
and
xor
add
mov
jge
push
stc
fnsave
adc
sti
xchg
cwtl
popa
scas
and
test
jmp
in
and
in
adc
adc
jbe
shll
push
mov
out
daa
sti
ret
jmp
scas
imul
mov
dec
or
jg
mov
sub
ret
sub
lret
lret
ds
loopne
fsubr
mov
addr16
pop
or
pop
mov
stos
repnz
inc
sub
lods
xchg
ss
add
push
mov
add
je
lods
mov
lods
cwtl
adc
and
jo
popf
lahf
mov
ret
ret
test
subl
stos
mov
adc
jp
mov
xlat
dec
sub
dec
or
jle
and
add
pop
out
sub
jnp
push
adc
sbb
dec
popa
lahf
fs
jge
jge
int
dec
sub
xchg
cmp
into
mov
and
stc
loopne
jbe
lret
lea
cmp
mov
lret
loope
push
and
jmp
jbe
test
push
add
lock
lods
and
in
push
mov
cltd
iret
push
and
jg
sti
aas
jno
mov
inc
adc
mov
test
jmp
jg
popa
dec
dec
mov
push
in
or
or
sbb
rcl
scas
jae
test
and
lods
push
imul
push
sbb
fcomp
test
inc
mov
stos
xchg
xor
mov
sbb
add
out
inc
outsb
sub
lret
jae
mov
jle
sub
mov
rol
pop
adc
lret
and
add
rcrl
fwait
push
xor
sbb
dec
mov
or
sar
insb
out
or
cltd
gs
orl
insb
pop
jnp
push
mov
and
mov
test
and
dec
fisubl
vphsubbw
scas
or
inc
xor
test
movsl
push
xchg
nop
call
xor
leave
aad
enter
pushw
push
pop
ds
mov
or
shrb
dec
out
test
and
push
push
sahf
add
pop
jmp
fsubrl
hlt
or
aas
mov
push
jb
insb
pusha
xchg
sbb
inc
in
addl
or
cs
adc
xor
mov
loope
xchg
mov
or
pop
inc
jge
cmpsb
sub
xchg
sub
mov
scas
ret
scas
pop
popf
ret
jle
cmpsb
and
fs
ret
xor
ficomps
lods
pop
popf
xchg
fisubrl
mov
push
adc
cmc
adc
rclb
dec
mov
pushf
dec
cli
shlb
cmp
and
aaa
insb
and
mov
es
loop
in
mov
xor
cmp
xor
stos
shl
sahf
fcompl
jg
cwtl
rol
or
pop
jo
les
cmp
push
cmpl
xor
in
push
leave
call
pop
sti
ss
stc
cmp
lds
and
or
push
jecxz
loope
divl
mov
ret
mov
add
pop
push
je
inc
rcll
fs
jmp
xor
jmp
ret
pop
iret
or
je
jmp
nop
sbb
lcall
pop
cmpsb
mov
cmpsb
imul
out
mov
sarb
mov
int
xchg
pop
xor
jecxz
sub
or
push
dec
cld
test
or
jo
movsb
icebp
addr16
push
scas
lcall
cmp
pop
adc
push
adc
jg
cwtl
stos
jecxz
jecxz
cmp
dec
cwtl
pandn
movsl
or
or
mov
arpl
daa
cmp
ret
adc
rcrl
xchg
cmp
lret
subl
enter
ret
lods
test
push
pop
and
ljmp
or
xchg
dec
add
cmpsb
push
aad
cmp
adc
mov
push
addr16
cmp
fdivrp
fdiv
in
repz
adc
cmp
daa
pop
mov
repz
adc
sbb
bound
in
arpl
inc
ret
fld1
or
insb
lcall
sub
pusha
and
or
bound
add
push
jb
pop
inc
pop
dec
add
cltd
fwait
push
adc
rep
out
inc
push
jle
jecxz
jnp
xchg
aad
cmp
dec
pop
ret
xchg
inc
sub
and
xchg
cmp
lods
addr16
nop
aas
fsub
push
inc
ljmp
into
ss
sti
pop
jo
rcr
ljmp
mov
jl
sbb
and
xchg
adc
fdivl
shrl
and
jecxz
in
cmp
cmp
mov
or
mov
lret
sbb
sbb
push
out
test
pop
test
inc
pop
ror
scas
or
sub
rcrb
dec
rorl
aam
or
push
dec
pusha
mov
les
xor
cmpsl
push
pop
fisttpll
iret
jl
sbb
testb
arpl
inc
pop
pop
fimull
mov
ljmp
rcl
sbb
ds
loop
inc
push
leave
jge
into
sbb
sbb
sbb
jecxz
mov
jb
mov
mov
xor
mov
test
je
aas
inc
jo
stos
cmp
add
gs
inc
rcrb
sbbl
jno
jnp
fisttps
and
sub
movsl
pop
addr16
loopne
cld
fnstcw
push
loope
sbb
inc
sub
xor
xchg
dec
or
hlt
sub
xor
jge
jp
les
pop
lret
cmp
mov
xlat
and
imul
pop
insl
or
mov
mov
ljmp
nop
mov
jmp
push
icebp
pop
jp
or
dec
ds
jne
gs
fistps
pop
jbe
or
sub
mov
xchg
addr16
push
std
add
push
lock
pop
and
add
mov
jae
dec
mov
ds
adc
or
fdivrl
pop
push
cmp
adc
and
xor
sti
push
out
test
lret
repz
pop
in
xchg
xor
xchg
jl
cmp
and
fwait
in
inc
cmp
or
mov
jno
lds
cmp
inc
xor
sub
cltd
mov
data16
je
jl
xchg
lahf
adc
jb
fistps
mulb
inc
aaa
mov
daa
inc
dec
mov
decb
xor
mov
dec
std
test
bound
pop
mov
dec
pusha
pushl
inc
js
imul
xchg
add
adc
sub
xchg
jo
sahf
push
ret
add
push
jge
test
je
and
sub
enter
hlt
insb
insw
dec
jg
mov
mov
xor
sub
push
nop
lea
mov
out
in
in
les
roll
fisubl
fdivl
and
inc
push
and
vcvtpd2psx
icebp
xor
aam
in
jmp
sub
cmp
fscale
fisubrs
mov
push
inc
jae
inc
sarb
cmc
pop
pusha
mov
scas
lahf
out
pop
cmc
mov
lret
push
movl
movsb
pop
and
and
cmc
leave
push
and
sbb
in
mov
push
pop
push
jne
arpl
jl
lods
dec
repz
mov
mov
sbb
mov
popf
sbb
lahf
dec
push
push
out
ret
aad
inc
dec
dec
xchg
enter
push
pop
stos
dec
or
mov
mov
cmp
dec
mov
sbb
dec
xlat
jno
fisubrs
mov
fistps
stc
repz
sub
jae
push
sub
bound
popf
pop
fsubrl
jp
cmc
int
adc
add
loopne
test
test
in
ss
bound
sbb
hlt
xor
out
out
sbb
dec
sub
popa
lea
sub
mov
loopne
push
adc
lahf
fwait
adc
cmpsl
fsubs
sti
mov
xor
push
test
clc
aam
sub
loop
dec
je
lcall
adc
sbb
pop
mov
cmc
movsl
push
stos
xorb
outsl
arpl
xor
push
sub
adc
cmp
insl
adc
into
mov
mov
es
cmp
test
cmp
loopne
out
sbb
scas
inc
into
cmp
rolb
dec
fstpt
das
pop
mov
jmp
xchg
fdivl
adc
add
jg
jns
test
push
adc
movsl
inc
push
pop
scas
enter
js
sbb
test
push
mov
test
divb
and
pop
aaa
cmpsl
jnp
lods
pop
int
cltd
sti
std
mov
outsl
lods
lret
jle
cld
push
hlt
sbb
dec
dec
arpl
clc
sbb
lock
pusha
pusha
mov
faddl
std
push
jb
adc
push
add
out
je
sbb
leave
push
mov
and
xlat
dec
add
lcall
popl
mov
add
pusha
pop
sbb
pop
xchg
add
push
adc
fs
mov
mov
bound
pop
pop
scas
mov
ljmp
aas
cmp
movsl
jno
shr
dec
mov
fwait
std
pop
xchg
xchg
loope
jns
fnstsw
lret
pop
test
push
xchg
orb
je
adc
lea
xor
xor
add
sbb
test
jbe
cmpsl
std
shrl
pusha
incb
jnp
mov
xchg
adc
push
jle
push
dec
inc
dec
mov
adc
or
imul
jns
loopne
push
fs
mov
mov
and
push
test
cld
nop
cmc
pusha
ja
xchg
cmp
mov
inc
pop
in
adc
xchg
inc
les
mov
xchg
push
loope
lds
jl
jns
js
aad
arpl
loope
rorb
sbb
mov
mov
arpl
mov
cmp
insl
adc
mov
stos
int
in
into
and
add
add
mov
mov
xor
test
in
outsb
inc
jb
jge
sub
cmpb
xchg
push
jno
imul
jle
popa
fbld
mov
jge
outsb
push
outsb
adc
sbb
mov
dec
rorb
jb,pn
push
mov
push
aaa
lret
cmp
mov
gs
mov
cltd
cmp
dec
addb
les
popf
jg
lret
and
mov
sbb
imul
lods
sub
jnp
sbb
push
dec
out
sub
sbb
xor
test
add
data16
adc
xor
push
xchg
fwait
xor
cmpsb
lods
aam
in
mov
clc
in
sub
stc
test
rcrl
rol
xor
ror
enter
xchg
jg
test
mov
sub
cli
mov
pusha
jle
fsts
xchg
dec
jge
sti
lcall
mov
jo
int
jge
xchg
ret
fadds
cmp
sbb
sbb
nop
sub
pop
ret
std
cmp
add
fcmovnb
loope
pop
cmc
push
xor
mov
mov
inc
int3
mov
adc
xor
popl
fsubp
mov
es
mov
ror
movsb
add
lods
sbb
bound
bound
dec
ljmp
test
movsb
shrb
cs
iret
pop
outsb
dec
shll
stos
cmp
in
in
jo
loopne
mov
or
xchg
shl
pop
xlat
push
add
cmp
pop
sub
xor
js
mov
repz
loop
ficoml
nop
sbb
and
sar
sbb
out
push
push
inc
jmp
pop
lahf
mov
aas
cs
jnp
out
or
repnz
push
mov
push
lods
sar
or
fwait
cmp
gs
mov
jnp
adc
or
pop
xor
xchg
bound
scas
nop
std
add
aaa
or
jae
int3
or
dec
bound
cmp
decb
ficoml
loopne
sub
lds
addl
fidivrl
and
lahf
lret
cwtl
into
sahf
dec
sub
popa
outsb
idiv
add
cmp
or
in
jmp
cmc
pop
fnsave
out
outsb
jge
aam
lret
xorl
mov
in
or
lods
popa
cmc
fcomi
into
add
dec
sub
xor
sbb
enter
aaa
pushf
mov
setl
pop
mov
rorb
sti
xor
fsubs
leave
mov
fdivrp
mov
xchg
loopne
xor
dec
mov
fxch
stos
pop
push
and
add
loopne
and
loopne
dec
jne
in
jmp
push
lahf
and
inc
out
and
scas
dec
adc
roll
andl
mov
icebp
pop
loop
sub
fbstp
loop
pop
jne
dec
pop
cld
test
jbe
mov
fadds
adc
movsb
dec
aaa
pop
mov
pop
push
test
mov
jl
xor
inc
loop
ucomiss
sbb
xchg
inc
xchg
fdivs
in
adc
flds
loopne
lods
stos
inc
addr16
mov
clc
test
scas
ret
jno
clc
insb
pop
jp
enter
loope
cmpsb
xor
lods
subb
sbb
jne
sbb
add
push
fdivl
xchg
inc
fsubl
add
push
mull
jecxz
ljmp
mov
mov
xchg
push
lock
iret
jle
aas
mov
pmullw
or
pusha
jg
add
mov
out
dec
fildll
add
int
int
popf
jns
push
cltd
dec
xor
ss
jae
or
fwait
dec
ret
pop
xchg
jae
insb
pop
or
mov
mov
outsb
add
xor
jge
fdivl
add
es
in
push
sub
es
das
gs
std
decl
jmp
lret
sub
clc
in
add
shlb
sti
sbb
pop
cmp
mov
incb
pop
jno
push
testb
adc
jno
loope
or
cmp
rolb
cmp
xor
inc
ljmp
int
pop
cmp
push
stos
not
push
xchg
mulb
stc
jnp
je
popf
sub
cwtl
inc
mov
lock
jg
jnp
or
cmp
sbb
out
addr16
sub
xchg
aad
jbe
popa
sbb
xlat
sbb
cmc
jne
push
fbstp
mov
inc
xor
mov
cmp
jb
xor
xchg
inc
and
int
imul
cmc
push
lods
push
imul
popfw
add
cmp
dec
xor
xor
out
rol
cli
inc
test
test
pop
call
les
dec
pop
lds
in
inc
pusha
sbb
leave
sbb
lock
lret
dec
push
adc
add
jns
or
push
fistpll
outsl
outsb
sub
ja
popa
hlt
imul
inc
movsl
xor
cltd
shll
jecxz
data16
jp
ljmp
hlt
cltd
leave
dec
adc
xchg
xchg
lcall
jmp
adc
cli
inc
mov
inc
mov
jge
mov
popa
das
cmp
jbe,pn
sub
iret
jge
das
clc
xchg
inc
sbb
bound
or
pop
mov
test
mov
jbe
pushf
pcmpgtd
sub
enter
cmp
push
fdivrp
push
pop
jnp
das
add
jae
mov
dec
mov
enter
shll
lock
arpl
js
xchg
std
push
push
dec
xchg
cmp
add
je
sar
jmp
and
sub
jmp
negl
cmp
push
adc
cmp
fists
sysenter
outsb
dec
pushf
and
dec
rcrb
js
loop
pop
xchg
lock
dec
jecxz
ja
cvtpi2ps
mov
icebp
hlt
jg
cmp
cmpsb
repz
dec
push
scas
sbb
stc
das
jmp
add
pop
pop
cmp
je
loopne
or
dec
dec
add
push
or
mov
mov
and
stos
ljmp
xchg
mov
pop
mov
jmp
dec
mov
push
hlt
in
int3
mov
pop
lods
mov
xor
mov
lods
push
pop
scas
pop
ret
fwait
daa
les
mov
jae
adc
pop
sbb
inc
mov
mov
into
xlat
xlat
jmp
rcll
sbb
pop
mov
xor
mov
or
sbb
aam
xchg
stos
cmpsw
sbb
and
mov
and
and
iret
xor
jno
loopne
xor
dec
sarl
pop
inc
loope
mov
dec
sub
outsb
push
pop
scas
sbb
inc
pop
cmp
cld
adc
sub
and
aad
jbe
xchg
xor
jmp
scas
mov
stc
in
lcall
add
sub
sbb
sub
sbb
test
dec
jbe
xchg
inc
mov
xchg
or
push
xchg
push
insl
call
sub
cli
pushf
cli
aas
outsb
mov
jb
push
jp
pop
jle
cmp
jno
inc
mov
sbb
xor
jecxz
fwait
mov
pop
fsubrp
fdivrs
and
inc
fsts
mov
cld
xchg
jae
lea
add
mov
mov
pop
lahf
xchg
push
inc
jb
sti
and
mov
sub
adc
jle
cmp
push
jae
mull
das
pusha
ds
clc
int
cli
test
shll
xor
push
mov
mov
xor
mov
test
pop
out
xchg
sub
push
icebp
out
in
js,pt
mov
call
pusha
lret
xor
dec
add
add
dec
cmpsb
push
test
cmpsl
addr16
outsb
bound
das
mov
sbb
outsb
mov
cmp
scas
sub
inc
test
jl
mov
jp
ss
das
enter
ret
xor
sbb
jae
mulb
ds
mov
imul
fidivl
scas
inc
sbb
addb
sbb
lcall
mov
imul
pusha
mov
popa
arpl
and
and
nop
jno
scas
scas
xor
cld
insl
pushf
lcall
stos
in
lds
ja
cmp
movsb
ret
and
ret
arpl
mulb
sub
jae
xor
sbb
mov
xor
loop
mov
mov
pushf
pop
sbb
mov
jnp
xchg
add
movsb
stos
inc
lcall
mov
mov
in
adc
jecxz
xor
leave
mov
ss
lret
jae
sbb
mov
mov
jecxz
scas
dec
fmull
mov
shrb
xor
jmp
jecxz
jno
sbb
pop
shrl
jne
xchg
lods
xchg
stos
popf
jnp
mov
sbb
jbe,pt
stos
mov
xchg
nop
xor
nop
push
into
test
xchg
adc
das
jb
mov
rcrl
incb
cli
inc
in
lcall
or
sti
stos
out
ret
mov
pop
out
push
rorl
jecxz
lcall
pop
sub
mov
xchg
scas
clc
ljmp
insb
fstpl
sti
cmpb
cmpsl
test
sbb
xchg
jmp
cli
pop
pop
movsb
jecxz
xorl
add
mov
add
das
mov
add
lret
push
ud0
jbe
add
fcmovnu
addb
push
stos
add
lea
fiadds
and
cmpsl
clc
xor
loop
push
sar
sub
xor
push
pop
mov
cvttps2pi
aas
cmp
sub
cmpsb
incb
or
jne
and
jno
loopne
cld
call
cmc
les
out
jo
popf
adc
push
sbb
into
xchg
mov
bound
add
lret
inc
sub
arpl
push
rclb
push
pushf
in
mov
lds
gs
add
mov
cmc
jnp
mov
xchg
mov
je
sbb
xchg
pushf
lahf
push
es
shlb
leave
insb
mov
testb
sub
xchg
leave
push
jge
inc
push
fsubs
xchg
and
cmc
cmp
jmp
fstps
rcl
xchg
dec
jno
leavew
push
movsl
jb
xchg
sahf
decb
mov
stc
adc
push
outsb
insb
pushf
test
int
gs
sub
ret
das
sbb
imul
inc
add
pop
loop
sbb
mov
std
adc
jmp
daa
mov
xchg
enter
testb
cmp
ds
sub
popa
pop
or
sbb
insl
call
call
dec
fcom
push
daa
pop
roll
or
lock
lret
push
in
fists
mov
or
aam
leave
fwait
dec
popf
lret
lret
sbb
insl
fadd
imull
rclb
inc
addb
loopne
pop
or
xor
mov
cmpsb
out
mov
push
mov
movsb
repz
bound
dec
ljmp
out
or
cmpsl
mov
sbb
inc
pop
pop
aam
aam
fwait
enter
xor
lcall
sub
loope
stos
sti
loope
push
testb
out
mov
inc
pop
xor
cli
adc
adc
and
je
dec
ffreep
and
or
mov
cmp
shrb
ds
pop
orb
jo
and
inc
dec
xchg
and
dec
dec
ja
and
ljmp
inc
cmp
xor
push
dec
adc
and
dec
repnz
xlat
in
cld
sbb
out
fwait
test
jg
gs
shrb
stc
call
fmuls
dec
sbb
pushf
jmp
or
cli
xchg
mov
and
inc
pop
jg
push
jbe
and
mov
fdivrp
in
xchg
pushf
inc
sub
pushf
ret
cmpb
adc
scas
inc
lret
ja
push
fs
mov
das
jns
nop
out
out
lds
sahf
icebp
gs
fcompl
int
mov
push
je
rclb
mov
test
mov
jb
or
mov
es
hlt
inc
mov
outsb
popa
pusha
xchg
fs
pop
ja
push
test
push
jb
push
sti
es
xchg
roll
in
jno
xchg
lret
daa
jns
ss
icebp
dec
mov
xor
dec
lcall
and
xlat
sub
sbb
adc
rcrb
and
insl
insl
mov
or
loop
cmc
jecxz
ficoms
cltd
ja
call
add
out
inc
lods
insl
mov
cmp
pushf
mov
jge
pop
scas
shrb
jbe
pop
xlat
lods
je
xchg
lret
ljmp
lahf
repnz
repz
cltd
inc
cmpsb
xchg
subb
inc
cmc
filds
sbb
dec
lea
mov
or
push
add
push
mov
sub
and
mov
lcall
push
fwait
add
and
fiaddl
cmp
cmpsb
mov
fldl
jnp
popf
icebp
push
fistl
mov
loope
mov
fs
adc
bnd
sbb
jns
xchg
mov
lea
sub
test
call
sub
mov
xchg
ss
repnz
fbld
fwait
sbb
into
dec
jno
and
pop
test
inc
ret
cmp
push
mov
cmp
add
lret
lahf
ret
or
dec
subb
xchg
or
push
aas
mov
mov
fistl
adcb
inc
cmp
lahf
insl
orb
jge
xchg
ljmp
faddp
fsubr
inc
jge
xchg
dec
fwait
cmpb
sbb
mov
enter
xchg
insl
stc
add
stc
and
mov
pushf
test
adcb
aas
lcall
dec
iret
mov
arpl
jecxz
jnp
pop
aaa
push
test
xchg
daa
mov
mov
jo
xor
dec
sti
xlat
inc
push
test
or
push
clc
stos
mov
sarl
mov
mov
mov
push
ret
push
fcoms
leave
js
lcall
inc
cmc
out
mov
jg
aaa
imul
mov
sub
fisubl
sti
insb
cmp
call
xchg
std
jns
jbe
in
jne
fisubrs
pusha
jecxz
jg
jns
mov
lret
mov
sub
shll
stos
repnz
mov
sub
sbb
and
cmp
push
adc
and
jbe
sahf
xchg
mov
jae
adc
sar
movsl
mov
fimuls
shl
xchg
pop
shrl
cmp
add
xchg
cltd
dec
xlat
fwait
ljmp
jecxz
xchg
fldl
scas
xchg
inc
loopne
pause
cmpsb
lds
icebp
es
and
fistpl
and
frndint
sbb
mov
repnz
call
xchg
or
sbb
sub
std
push
popl
scas
aas
push
dec
sbb
mov
lock
xorl
mov
arpl
sahf
mov
ljmp
mov
pop
jmp
dec
notl
les
xchg
lret
cmpsl
sti
mov
jle
nop
pop
sbbl
insb
addr16
sbb
xchg
jp
mov
sbb
cmp
dec
pop
push
dec
and
sub
mov
xchg
stc
loop
repnz
push
mov
jo
js
bound
mov
add
cld
movsl
js
xorl
mov
jae
sarl
sahf
mov
push
bound
sbb
pop
adc
mul
cmp
divl
addr16
dec
sub
insb
dec
fsubp
flds
mov
rcr
jmp
jnp
rclb
mov
daa
fnstenv
andl
push
or
adc
jp
in
negl
push
fldt
mov
cmpsl
mov
ljmp
lds
rorb
out
jno
cmc
mov
enter
and
adc
lock
inc
mov
test
jne
xor
sub
adc
mov
add
lret
xchg
sahf
jo
ss
cmpsb
jbe
and
sbbl
mov
jecxz
dec
cli
cmp
test
add
icebp
mov
jnp
sbb
outsb
push
push
sbb
mov
pop
mov
push
cld
subb
call
xor
cmpsl
and
xchg
fldt
in
aam
fists
xor
adcl
lea
cmpsl
data16
mov
ret
ljmp
dec
sub
or
lods
fcomps
adc
fistpl
dec
inc
and
or
xchg
outsl
and
pop
fdivl
lcall
sbb
pop
fsubrs
mov
xor
fbstp
loop
rcll
sbb
outsl
pushf
mov
adc
cltd
rorl
mov
xchg
popa
orl
arpl
cmp
fcomi
in
push
mov
xor
test
inc
xchg
hlt
or
sub
ds
and
rcrl
arpl
jecxz
mov
adc
sub
and
jbe
scas
jmp
or
inc
or
mov
cmpsb
mov
pushf
or
rolb
mov
iret
or
inc
xchg
lahf
das
stc
or
jo
fstl
out
mov
movsb
sbb
and
jp
cmp
int
xor
and
imul
and
ror
nopl
xor
inc
cmp
push
in
or
lea
push
fwait
iret
sbb
inc
mov
dec
ja
dec
js
lea
jecxz
ss
inc
or
sbb
jb
aam
rcrb
out
pop
mov
rcll
data16
icebp
jns
dec
hlt
ss
ss
jbe
adcb
repz
and
push
scas
cli
push
sbb
cld
scas
jg
jecxz
mov
andl
out
jnp
pop
movsl
lgs
jmp
insb
sbb
rclb
test
int
gs
int
cmp
adc
sub
ja
sub
ja
sarl
add
leave
add
rcr
mov
sti
or
mov
jne
fsts
mov
and
stos
xor
daa
jl
push
push
into
sub
stos
outsb
push
xchg
packssdw
xor
add
fildl
xor
divb
xchg
adc
and
mov
sbb
incb
adc
ret
cmp
je
push
xchg
aaa
outsl
mov
push
mov
add
data16
jg
sarb
stc
xchg
sbb
lcall
sbb
in
pop
fidivrl
mov
ud1
jl
gs
cmc
aad
adc
hlt
dec
cmp
inc
mov
mov
cld
cld
adc
aam
push
mov
test
aaa
inc
sub
push
sbb
mov
loopne
sbb
addr16
jno
xchg
pop
cs
dec
sub
push
jo
pop
into
or
fwait
xor
loopne
cmp
nop
xor
or
lock
adc
in
lret
ret
arpl
and
pop
xchg
mov
xchg
sbb
dec
movsl
in
push
mov
mov
les
icebp
add
xchg
adc
adc
nop
jge
mov
popa
xor
test
add
fldl
rorb
pop
call
and
por
int3
repz
pop
and
push
add
add
push
jmp
in
mov
jecxz
aad
xor
rcl
xchg
and
xor
xchg
icebp
out
imul
loopne
mov
jp
jmp
test
jle
xor
scas
loope
pop
dec
out
cmp
rolb
enter
mov
lret
lret
negb
stc
xor
repz
data16
popf
xor
dec
mov
xchg
and
mov
adc
inc
adc
outsb
add
pop
lods
sbb
roll
xor
inc
inc
insl
out
dec
scas
pop
mov
mov
lret
cmp
mov
sbb
ret
mov
out
push
mov
inc
sbb
scas
int3
mov
mov
pop
adc
add
jmp
out
cld
or
lock
mov
xor
jmp
std
lods
mov
cld
decb
jo
inc
in
pop
xchg
imul
dec
pop
ret
pop
jmp
jmp
addr16
or
lea
pop
jp
jo
jb
pop
jmp
mov
loopne
lock
int3
add
stos
dec
push
inc
mov
sti
test
in
dec
add
aas
enter
loopne,pt
gs
popf
andb
jo
loop
adc
imul
das
cmp
das
and
pushf
mov
cmpsb
stos
pop
iret
stc
aad
shlb
add
aas
push
sub
jne
push
jmp
lds
inc
sub
cs
add
pop
aam
sbb
pop
sub
xchg
pop
xor
jl
inc
xor
inc
aad
xor
insl
sar
adc
mov
mov
daa
lret
insb
lock
stc
stos
scas
or
or
pop
out
xor
push
arpl
adc
in
ficoml
or
push
nop
popl
pop
movsl
fldcw
loopne
negb
mov
leave
jb
pushf
fdiv
mov
dec
test
pop
push
jmp
sub
cmp
mov
test
aas
xlat
and
jnp
fsubrs
jo
xchg
dec
sub
mov
in
loop
cld
push
out
gs
into
scas
pop
idivl
jb
inc
loopne
fisubl
mov
mov
and
ljmp
fidivl
mov
push
repz
and
mov
aas
test
and
inc
cmp
div
sbb
sub
and
cmp
and
sub
jle
es
jo
jo
iret
jecxz
mov
and
ret
outsb
je
and
aaa
imul
js
xchg
cld
in
and
cmc
ss
lea
xchg
rcrb
add
cmp
mov
mov
loope
imul
pop
mov
jb
test
and
pop
push
push
xorl
cmpsb
movsl
stos
mov
fidivrl
fnsave
js
or
jne
fidivrs
xor
inc
js
movsl
jns
movq
adc
or
cld
dec
test
add
xor
mov
gs
add
xor
cmp
in
jno
std
std
mov
movsl
lds
mov
jg
popf
aad
int3
in
fs
push
sbb
adc
mov
dec
imul
inc
aam
inc
fpatan
jnp
lret
mov
fdivs
mov
dec
push
push
and
cmp
adc
xchg
xchg
mov
clc
sub
mov
lcall
test
mov
je
mov
loope
pushf
pop
sarl
jle
scas
and
push
xor
hlt
jg
add
leave
push
inc
cli
bound
rol
movsl
jno
pop
xchg
inc
hlt
sub
mov
cmpsl
cltd
sub
pushf
aam
jns
aas
push
stos
out
or
sti
mov
xor
cmpsl
lock
mov
cwtl
inc
mov
sub
xchg
xchg
subb
cli
gs
bound
clc
in
xor
and
mov
jno
enter
sbb
xchg
and
mov
hlt
add
popa
jmp
fmull
xchg
and
sub
scas
call
push
out
xor
sti
pop
lcall
jp
xchg
adc
jecxz
sub
push
jecxz
fdiv
or
adc
call
pop
add
sahf
add
aaa
pop
out
mov
cmp
sbb
in
mov
imul
add
push
pushf
adc
dec
cmp
push
sbb
push
pop
pop
or
sbb
stos
movsl
adc
out
mov
out
in
fldt
cmp
push
mov
or
imul
dec
cmp
push
int3
and
shlb
xchg
aad
loope
xor
jmp
xchg
popf
in
adc
mov
icebp
hlt
lds
testb
shll
sub
daa
lahf
xchg
int3
sbb
jl
and
jo
fisubrl
mov
lods
cmp
mov
inc
inc
fisttpll
aas
cmpl
fcoml
jae
adc
into
mov
cmp
jg
inc
cmp
mov
outsb
mul
xchg
idivl
in
or
inc
ds
pop
xor
mov
mov
jg
pop
ret
add
fiaddl
adc
mov
inc
insl
inc
or
sbb
dec
push
jp
mov
enter
in
loop
in
pop
mov
insb
test
cmc
hlt
aam
cmp
hlt
add
daa
into
icebp
fsubrl
or
cmp
sahf
repnz
sub
inc
mov
popf
mov
pop
gs
loope
inc
jo
lahf
jbe
xor
cmp
pop
insb
int3
sub
jnp
xchg
jo
je
inc
push
inc
xor
lods
stc
sub
lds
mov
lret
push
out
imul
jbe
push
xor
cmp
int
xor
jb
sub
jnp
in
mov
dec
and
scas
andl
mov
aad
push
fbld
daa
push
aad
leave
mov
lahf
mov
push
arpl
imul
or
mov
jne
cmp
jecxz
mov
enter
pop
adc
pusha
jno
lea
stc
push
fwait
lea
es
xchg
enter
mov
and
out
and
jp
les
pushf
jno
pop
sbb
negl
jmp
push
dec
add
add
jnp
sbb
in
gs
mov
es
sbb
je
push
push
sub
nop
mov
mov
cmp
pop
pop
aad
enter
mov
push
scas
shrl
clc
inc
rorb
scas
ret
bts
fmuls
xor
orb
fldl
xchg
pop
fisubrl
pop
push
scas
sbb
inc
mov
pop
cmpsb
and
lea
jo
xchg
rorl
push
hlt
insb
jbe
call
dec
adc
mov
mov
test
adc
sbb
arpl
loop
lods
and
push
lods
iret
call
leave
fnstsw
loope
fmul
lods
dec
mov
pop
int3
adc
imul
lret
test
or
loop
mov
imul
xchg
aad
xchg
ljmp
icebp
push
xchg
into
xchg
xor
xchg
mov
fistps
std
jecxz
mov
jmp
sub
jl
xchg
mov
lret
scas
jno
movsb
push
call
lahf
aas
inc
out
lods
push
sub
dec
sub
imul
in
jmp
les
in
ja
xchg
add
loope
std
scas
mov
std
rorl
or
ret
das
dec
cmpsb
dec
lock
add
jle
dec
fldcw
fld
daa
arpl
xor
pop
inc
mov
dec
int3
xor
out
lods
mov
mov
cmp
test
push
data16
and
sub
xlat
les
bound
pop
iret
sub
sahf
dec
sbb
loope
xchg
dec
cmp
jo
dec
sbb
test
loopne
or
call
aad
pusha
pop
pop
jne
pushf
cmp
lds
pop
push
cmp
jnp
loope
xchg
mov
sub
push
jb
cmc
mov
or
sbb
cmp
sub
ret
cmpsl
cld
push
xchg
sub
pop
test
mov
bnd
orb
dec
iret
iret
lds
out
dec
cmpsb
test
pop
cmpsl
jbe
xor
and
xor
aaa
repz
repnz
jnp
test
in
cmovae
repz
xor
fs
fnsave
loop
out
and
orl
outsl
pop
pop
fldt
xor
arpl
jne
pop
mov
jnp
cmpsl
es
cmp
scas
das
pop
sub
mov
push
pop
lret
in
mov
pop
sub
jecxz
or
sarb
in
mov
test
pop
lods
cmp
sub
pop
lds
das
cmpb
cld
dec
hlt
jmp
jbe
mov
sbb
in
mov
jl
push
rolb
push
jae
sbb
nop
xchg
gs
xor
add
iret
push
mov
test
imul
outsl
mov
fsubl
mov
jg
ret
testl
stos
xor
mov
inc
mov
cmp
pop
call
outsl
mov
and
leave
cmp
fldcw
lock
jno
mov
and
mov
ljmp
cwtl
jae
pop
xlat
jns
rorb
mov
xor
xchg
lea
xchg
push
cmp
lods
or
pop
lods
and
outsb
mov
mov
xchg
push
cmp
pop
ret
jecxz
call
xor
pushf
sub
dec
into
fldcw
out
mov
jb
pushf
sub
lock
sbb
xchg
lret
xor
sub
sbb
xchg
loop
mov
pusha
sub
out
adc
test
mov
fcmovnbe
mov
and
lcall
cmpsl
sahf
movsl
aaa
ldmxcsr
inc
jmp
push
divb
dec
stos
mov
xor
ret
mov
pop
or
movsb
lds
mov
dec
inc
jle
cmp
push
mov
jns
add
xchg
sbb
jne
jl
pop
shll
mov
pop
insl
cmp
ficoml
fdivr
sbb
add
adc
out
fiadds
mov
jo
mov
inc
mov
lcall
pop
push
cmc
cld
push
sub
fidivrs
and
int
in
outsb
mov
addl
inc
imul
adc
iret
or
xchg
mov
mov
sahf
mov
dec
in
fstl
shll
hlt
mov
xor
in
lock
repnz
outsl
mov
push
arpl
fs
pop
filds
fsubs
or
rclb
int
inc
mov
iret
xor
cmp
push
inc
arpl
in
add
arpl
fimull
pop
loope
cmp
push
sbb
fcomp
add
fldt
out
sbb
and
jae
repz
jge
jmp
inc
adc
imul
imul
sub
gs
jmp
out
sub
sti
mov
xchg
pop
mov
rolb
aad
test
shrd
fcmove
inc
pop
loopne
adc
aaa
inc
dec
xchg
jb
and
dec
movl
xchg
rolb
das
sub
enter
aaa
sahf
int
sub
fisttps
and
push
add
cli
scas
inc
fidivrs
jmp
call
pop
and
js
cmc
xor
popf
test
pop
pop
sub
fidivl
lcall
inc
xor
dec
jl
cs
mov
mov
jg
int3
jno
imul
mov
stc
inc
bound
mov
mov
mov
repnz
dec
lahf
idiv
out
in
cltd
fwait
nop
leave
mov
addr16
aas
jge
xchg
push
loope,pn
ljmp
sbbb
cmp
ret
outsb
cld
jmp
jg
sub
jecxz,pt
jl
movsb
inc
rcrl
cmp
cmp
imul
pop
add
in
or
imul
aad
pop
fists
ret
inc
stc
push
aas
inc
out
mov
sbb
jns
xchg
gs
lret
cwtl
jo
inc
fucomp
ja
rcrb
in
cmc
jo
in
inc
js
test
jae
or
dec
pop
add
fisubrl
xchg
neg
lret
out
push
adc
push
and
mov
jmp
xlat
xor
cmc
jnp
cmp
push
and
mov
push
pop
std
std
jb
mov
aaa
xchg
cli
jle
shl
adc
movsb
dec
pop
test
stc
rorl
cmp
sbb
mov
pop
or
sbb
mov
addl
pusha
mov
inc
incb
sbb
sub
sti
bound
lods
test
repnz
cli
inc
dec
repnz
aas
sub
jo
adc
fs
sub
fisubrs
stos
call
xchg
das
xchg
push
or
cmpsb
mov
cltd
cmp
fs
ret
gs
fnstenv
out
push
in
aaa
adc
jmp
jl
daa
mov
cmp
jge
sbb
sarb
or
jbe
jb
mov
arpl
lock
mov
in
lock
adc
fmull
hlt
sub
lcall
leave
jecxz
xchg
testl
sub
adc
or
movsb
or
insb
in
push
test
and
fistpll
cmc
xchg
and
jge
jl
out
jp
inc
insl
in
mov
adc
scas
imul
jbe
insl
xchg
iret
rol
loopne
pushf
dec
mov
lods
mov
pop
pop
or
inc
pop
pushf
cmpsl
lahf
cmpsl
push
repnz
inc
mov
pop
xor
sbb
out
insb
cltd
repz
mov
pop
mov
shll
icebp
fidivs
mov
lcall
out
iret
adc
insb
lods
inc
lea
adc
scas
adc
and
aad
jo
cmp
mov
inc
xchg
add
imul
xchg
movb
mov
add
sbb
pop
mov
dec
sub
add
adc
fldl
addr16
out
and
fsts
push
adc
or
dec
outsl
xchg
je
cs
jmp
xor
push
push
xor
mov
sti
rorb
and
test
aaa
popf
jmp
mov
inc
sub
int3
push
sbb
cmp
lret
mov
add
adc
xchg
pop
mov
stos
cmp
push
cmpsb
ficoml
repz
jmp
push
es
jno
popa
inc
mov
fiadds
aas
divl
push
cmp
in
inc
lea
rol
hlt
dec
aad
loopne
lods
mov
lods
sub
cmp
jg
push
mov
imul
repz
fcomip
pop
enter
cld
arpl
mov
test
fwait
xchg
lret
add
cs
sbb
jl
push
fnstcw
arpl
jbe
arpl
rcll
xchg
scas
or
mov
push
in
insl
repnz
sti
dec
nop
test
lds
pop
jp
push
sbb
mov
pop
lahf
inc
inc
movsl
adc
shrb
sub
lods
daa
push
lea
dec
mov
jnp
pop
mov
fs
jo
scas
iret
mov
out
and
cmpl
loope
dec
int
stc
adc
lds
aam
fiaddl
incb
sbb
das
int3
xor
jae
je
test
loope
ret
mov
dec
fwait
add
jge
fnstcw
pusha
mov
nop
sbb
xor
insb
add
lahf
lret
cmc
sarb
sub
movsb
imul
leave
ret
popa
idivl
scas
es
mov
aam
js
pushf
jmp
test
movsb
icebp
inc
mov
loopne
xchg
testl
xchg
pop
aaa
inc
movsl
rorl
xchg
idivl
fmuls
cmp
sub
adc
int3
subb
dec
and
mov
pop
push
push
fcoms
mov
adc
das
add
mov
sub
in
mov
jns
sbb
jmp
es
and
mov
mov
adc
lret
fbstp
jmp
xchg
fdiv
lahf
clc
movsb
sub
out
jmp
cld
dec
inc
mov
jl
jl
dec
ret
sar
xor
mov
stos
scas
outsl
std
mov
shl
xor
cmp
je
pop
mov
rorb
mov
add
hlt
iret
cmp
and
inc
sahf
addl
ret
xor
fwait
push
xor
mov
xor
mov
xor
pop
or
ret
icebp
das
mov
in
pushf
jbe
pop
push
sahf
fwait
jns
mov
jno
loop
arpl
and
in
adc
push
rcrl
xchg
in
xor
mov
mov
fisttpll
stos
mov
jo
push
cltd
in
adc
fdivp
ljmp
mov
pop
addr16
dec
push
inc
stc
sti
push
in
add
lret
push
mov
xchg
shll
scas
gs
lahf
jmp
mov
push
push
mov
cs
test
lods
xor
sbb
mov
sbbb
iret
into
repnz
rcrb
sbb
jmp
test
lcall
and
cmc
mov
or
pop
jmp
repnz
sbb
push
loope
push
and
jecxz
daa
cmc
aas
push
mov
mov
dec
loop
jo
adcl
shrl
orb
dec
inc
sbb
loopne
imul
cmp
xchg
jle
jge
cwtl
mov
pop
aaa
push
and
loope
lea
arpl
iret
jl
mov
pop
push
sahf
pop
stos
sub
loope
divb
adc
mov
dec
idivl
mov
ljmp
subl
scas
fisttpl
sbb
dec
sub
sub
or
jns
int3
mov
outsb
test
cmpsl
mov
addr16
pop
cmp
mov
add
or
shlb
lock
jmp
iret
dec
shrb
lahf
shlb
aaa
sbb
movsb
push
in
pop
jb
pop
bound
cmp
or
and
mov
and
mov
addb
lahf
out
cmc
pop
movsl
push
cmp
lret
jns
in
call
add
sbb
and
cmp
push
mov
cs
push
rcrb
sbb
sti
insb
add
inc
mov
pop
or
mov
lds
ja,pt
negb
daa
in
test
rol
mov
mov
shrb
int3
adc
sbb
xchg
in
data16
mov
aad
jno
mov
clc
adc
ret
bound
aam
ret
addr16
dec
pushl
imul
mov
jp
push
out
or
sbb
cmpsb
je
jecxz,pn
dec
sarl
push
xchg
cmpl
cmp
xor
pop
jecxz
fildl
int
cwtl
arpl
popa
adc
mov
dec
repz
mov
sbb
adc
add
sbb
mov
mov
sbb
jns
bound
or
lcall
pop
mov
cs
rcr
movsb
lods
push
mov
stc
fsubp
outsb
repnz
clc
push
btsl
mov
xchg
mov
int
enter
movsl
inc
fld
mov
data16
jo
pop
mov
lret
and
out
mov
mov
mov
cmp
nop
fimull
mov
nop
andl
lock
and
mov
sbb
dec
push
hlt
stc
fsubs
vmovmskps
lods
negb
outsl
cmp
stos
mov
pop
lahf
pushf
cmpsb
aad
lods
push
je
enter
or
sub
mov
fdivp
mov
and
pushf
pop
xchg
or
pop
jnp
mov
cmp
pop
int
test
hlt
in
xor
je
in
cmp
sub
cmp
pop
jbe
sub
shrb
fwait
xchg
fs
jbe
aas
es
rcl
add
xchg
mov
sahf
call
lahf
scas
cmp
xor
sti
xchg
cmp
popf
mov
out
sbb
mov
bound
lahf
lcall
jmp
aad
jo
jecxz
add
call
adc
rcrb
sbb
idivb
xchg
jle
adc
adc
out
jno
pop
loop
insl
pop
test
push
pop
jb
hlt
dec
inc
shlb
adc
outsl
out
lahf
and
jnp
call
shll
cli
dec
xlat
outsl
lock
mov
mov
test
cmp
xor
andb
test
dec
cmp
xlat
in
push
fisubrl
movsb
and
push
xor
sbb
sti
mov
and
xor
lea
jno
push
imul
jne
ret
adc
pop
bound
pop
shl
inc
cmp
jo
or
in
mov
shlb
mov
stc
jns
xchg
mov
loope
std
out
jmp
pop
sub
mov
or
leave
test
pop
push
cld
mov
pushf
sub
pop
mov
in
rorb
cmp
roll
push
mov
maskmovq
testl
push
fisttpl
push
icebp
cmp
insb
ljmp
jmp
mov
sub
aaa
lret
and
sub
mov
cmp
sub
inc
add
cmpsb
xlat
mov
push
ud1
jae
in
push
jbe
loop
mov
cwtl
stos
outsl
pop
cmp
pop
pop
xchg
fmuls
cmp
dec
cltd
pushl
cmp
in
loope
push
cs
int
cli
mov
inc
or
xor
xor
jbe
sbb
jmp
enter
lea
cwtl
push
pop
mov
call
mov
loopne
das
fisubl
mov
movsl
sbb
mov
add
icebp
mov
in
xchg
repnz
out
add
jae
ret
xchg
mov
pop
lret
jb
add
sahf
aas
lret
xchg
and
shll
pusha
sbb
jae
rcll
lds
mov
ljmp
sbb
nop
dec
mov
mov
xchg
adcb
test
sbb
sbb
js
lea
nop
sbb
push
ja
dec
add
sbbl
dec
cs
pusha
jns
outsl
cli
scas
lcall
lods
out
lcall
push
cs
aaa
and
cmp
mov
jmp
scas
ret
push
or
ficomps
xchg
add
jne
movsl
jbe
std
sub
pop
push
mov
adc
dec
adc
push
out
pop
dec
pop
movsl
cmp
mov
lods
out
fisubrs
mov
cli
das
lods
sahf
pop
and
fcoml
push
out
loope
cmp
mov
cwtl
push
insl
sub
sbb
inc
cwtl
cmp
es
jle
dec
imul
mov
push
divb
adc
es
push
mov
or
inc
mov
xor
pop
mov
ss
mov
mov
inc
adc
movsl
int3
lods
idivb
xchg
lds
outsl
enter
cmp
fwait
pop
test
push
push
pop
adc
jb
iret
fnstsw
stos
ret
mov
or
sbb
or
cmpsl
jbe
adc
mov
outsl
and
jge
pusha
xchg
enter
addr16
inc
cmp
in
mov
mov
adc
lret
rol
aam
repz
sahf
sub
push
popf
jecxz
rcll
push
jecxz
ret
lret
stos
iret
addr16
rorb
outsl
test
ss
ss
addr16
dec
jl
repz
pop
lcall
xlat
test
cmc
cmp
mov
lea
ljmp
jmp
xchg
ss
daa
mov
sbb
and
push
ror
mov
sub
and
lret
fnsave
xchg
push
and
rcrl
mov
mov
add
jp
and
dec
lret
mov
aad
push
arpl
push
xchg
add
ret
mov
add
mov
movl
add
lret
les
ret
sub
pop
dec
xchg
pop
shrl
lods
mov
mov
shrb
mov
inc
stos
push
xchg
out
std
daa
adc
mov
push
test
jmp
scas
lods
mov
jmp
xchg
or
dec
cmc
pop
pop
push
mov
imul
mov
int3
pop
mov
dec
dec
xchg
push
cli
fucom
xlat
stc
insl
loop
cld
das
jge
int
out
pop
hlt
cmp
aaa
pop
jb
mov
sub
sahf
inc
insb
arpl
lret
jp
fisubl
lret
nop
xor
sahf
dec
sbb
jg
loopne
jl
push
or
mov
ficompl
outsl
dec
leave
sbb
mov
std
adc
imul
dec
cld
sbb
test
mov
hlt
sbb
es
sub
in
test
sub
repnz
ljmp
pop
sub
mov
xchg
dec
mov
xchg
fcmovu
gs
jmp
cmp
or
ljmp
mov
imul
pop
mov
dec
mov
sti
adc
aas
adc
sub
lock
shr
or
sub
sub
sbb
cmp
and
lock
jbe
out
sub
loop
sub
mov
xor
and
sbb
aad
gs
inc
std
sahf
xchg
mov
pop
shll
jae
xlat
pop
dec
xor
push
inc
xchg
xor
or
mov
push
stc
arpl
jmp
pop
push
pushf
inc
cmp
mov
jnp
adc
cmp
std
dec
or
or
gs
and
mov
test
aas
mov
fnstenv
sbb
xchg
cs
mov
stc
ja
cmp
lods
outsl
push
mov
push
rcll
ret
dec
out
cmpsb
sbb
sub
es
test
mov
movsl
xchg
ljmp
adc
data16
adc
push
aas
push
jmp
cmp
or
xchg
ret
xorb
push
fimull
dec
sub
xor
or
ja
pop
fdivrl
xor
lret
mov
call
pop
hlt
fisubs
jmp
dec
add
or
jns
dec
cmpsb
lock
xchg
cli
cmp
aad
lret
rcll
cld
or
cmp
mov
sbb
das
jl
push
cmp
mov
jg
pop
stos
mov
push
subb
sub
xlat
xor
clc
add
in
cmp
cmp
fucomip
inc
mov
and
xor
ljmp
aam
or
out
dec
dec
adc
mov
stos
lahf
int3
xchg
jecxz
jnp
jp
mov
test
add
push
lds
sub
xor
inc
imul
dec
aas
add
jmp
imul
cmp
outsl
pop
fldl
mov
and
outsl
loope
mov
popa
mov
push
push
jns
mov
push
ja
outsb
xor
sub
fsubr
xor
sub
shl
xchg
sbb
int3
insb
bound
test
sbb
insb
add
pushl
xor
dec
inc
pop
jno
movsl
jmp
mov
pusha
pushf
and
inc
add
aad
adc
mov
sub
pop
stc
repz
outsb
js
rcll
add
xchg
adc
inc
hlt
add
in
xlat
mov
lret
ljmp
lret
ljmp
adc
pop
push
daa
mov
lds
leave
ret
fstps
or
mov
leave
ja
jo
loope
adc
sub
xchg
fldenv
das
fsubr
outsb
fsubrl
in
mov
leave
ds
out
sbb
jecxz
xorl
mov
test
sub
loop
movsl
aam
mov
test
cwtl
xchg
dec
mov
cmp
mov
mov
pop
jns
fs
mov
inc
mov
inc
dec
jb
xor
xchg
mov
push
lahf
loope
addb
stos
add
xor
mov
push
lock
hlt
sub
filds
and
mov
push
add
rorl
fdivl
add
jb
nop
hlt
inc
in
loopne
nop
jge
lds
xchg
imull
ret
fistl
rclb
mov
stos
ja
add
icebp
mov
mov
mov
push
mov
sub
mov
ljmp
mov
cmpsl
enter
pop
pop
add
or
push
iret
or
push
jmp
pop
push
push
insb
mov
pop
sub
in
int3
jl
out
test
jmp
cwtl
push
fists
jae
repnz
mov
repz
jle
jbe
outsb
std
jle
and
or
js
fiadds
and
test
mov
ja
cmp
mov
in
mov
fidivrl
cmp
call
arpl
out
cmp
mov
daa
cmp
les
insl
jo
adc
mov
adc
ret
push
int3
mov
xchg
bound
sarb
push
js
std
mov
into
stos
xchg
push
pop
sub
neg
and
cli
lods
or
dec
into
jl
inc
push
shrl
and
or
cltd
push
add
imul
ja
es
xchg
out
mov
adc
inc
push
dec
mov
ret
jnp
cmp
and
orl
stos
int
dec
dec
cs
scas
jno
and
mov
add
iret
call
pop
and
jae
dec
and
jp
pushf
dec
mov
les
dec
jo
outsb
adc
fnstenv
push
push
adc
xlat
or
js
bts
je
cmp
jp
js
inc
mov
and
repnz
in
sub
aaa
jo
shlb
or
aad
push
inc
es
pop
test
or
loopne
outsl
cmp
xchg
stos
xor
dec
mov
push
jne
and
cltd
sub
push
pop
or
xor
aaa
stc
movsb
pop
loopne
repz
sub
push
add
inc
push
insb
aas
adc
imul
jg
sbb
pop
test
push
leave
jns
mov
cmp
test
popf
fs
scas
sbb
xchg
adc
cmpsb
mov
lods
test
xchg
jo
lahf
out
jg
push
mov
xchg
bound
loopne
push
cmp
cltd
dec
in
aad
cmp
pop
popa
imul
pop
dec
sub
lock
push
pop
dec
sub
test
mov
stos
or
lds
cli
mov
inc
push
mov
call
and
jmp
mov
dec
imul
loop
into
outsl
fwait
cmp
movsl
loop
pop
clc
dec
repnz
mov
scas
ds
push
pminsw
orb
fcomi
out
aam
mov
xchg
sti
orb
sbb
inc
dec
xchg
outsb
aam
sbb
xchg
rorl
test
scas
int
cmc
and
in
cmp
dec
sbb
pop
shll
xor
ret
push
push
pop
sbb
dec
xchg
test
iret
sub
mov
test
lock
sarb
outsl
icebp
lret
adc
les
call
pop
js
in
sub
dec
sub
cltd
and
jmp
mov
lret
loop
xor
mov
ljmp
adc
jne
mov
push
movsb
sbb
cltd
repz
xor
mov
subl
dec
mov
ljmp
faddp
in
adc
pop
xlat
cmp
hlt
jnp
xor
loopne
jle
pushf
xchg
shr
cmp
sub
in
mov
fisubrs
incl
cmp
adc
popa
mov
jo
and
xchg
mov
dec
xor
imull
jo
pop
fiadds
or
cmpb
cmp
dec
js
addr16
dec
mov
push
es
mov
or
pop
repnz
lcall
fidivrs
sbb
cmc
ljmp
into
arpl
or
movsb
push
mov
jecxz
mov
mov
and
pushf
inc
cmp
iret
xor
mov
mov
jecxz
ror
add
mov
push
fwait
dec
adc
push
xchg
cmp
adc
inc
jle
inc
cld
pusha
mov
mov
sub
xlat
xchg
addr16
ja
xchg
rol
mov
out
mov
pop
adc
ljmp
or
cmc
daa
cmp
mov
fdivs
add
or
repnz
sub
sub
cli
pop
lcall
sub
aam
add
jns
mov
stos
or
inc
sbb
mov
cmp
test
inc
xchg
pop
mov
mov
les
mov
loopne
fidivrs
scas
loope
pop
jle
inc
push
add
add
sbb
mov
inc
dec
mov
jecxz
cmp
test
pop
dec
add
push
sub
lret
mov
fisttps
add
lods
mov
imul
pop
jmp
mov
es
xchg
mov
sub
fs
xor
and
xor
ret
xchg
dec
lahf
imul
sub
daa
decl
pop
dec
pop
loop
andb
insl
mov
gs
adcb
into
xchg
mov
push
or
jae
test
rcrb
jbe
das
mov
repnz
les
or
movsl
cmp
vorpd
lcall
jns
mov
mov
mov
pop
cld
cmp
test
mov
jo
ficompl
pop
mov
loop
lret
lods
pop
shlb
jae
sub
cmp
pop
rorb
mov
cli
push
fists
out
lea
aaa
sbb
jo
push
aas
and
mov
pushf
aad
imul
inc
push
xchg
dec
mov
popf
pop
cli
lods
dec
popf
lods
mov
sbb
pop
shrl
add
pop
lock
repnz
inc
andb
jg
jno
inc
ret
pop
ss
adc
gs
push
in
cmp
int
ljmp
mov
scas
popf
cmp
ds
jg
add
pop
pop
test
cmpsl
jmp
adc
cli
movsb
dec
or
and
mov
insb
jl
rcl
imul
xchg
sub
pop
bound
scas
cmp
pusha
roll
add
jg
xchg
cmp
test
lea
add
mov
or
icebp
add
repnz
adc
add
and
scas
cs
lods
push
jo
xor
dec
test
sub
lret
ds
call
mov
mov
mov
daa
movsb
dec
fdivrp
mov
push
inc
xor
aas
xor
fldenv
adc
mov
xorl
adc
mov
push
arpl
stos
loopne
adc
cmp
add
jne
in
xor
sbb
mov
mov
insl
adc
adc
mov
cmpl
mov
test
xor
dec
lahf
imulb
lret
in
out
inc
repz
insl
addb
sti
stc
mov
aas
fwait
sbb
repz
nop
aas
cld
pop
dec
lods
pop
fldt
add
mov
jns
out
jp
mov
add
inc
xchg
sti
xchg
imul
mov
loop
imul
and
test
inc
rcrl
xchg
mov
pop
push
mov
adc
and
in
sbb
movl
push
mov
pop
dec
test
repz
mov
push
ss
mov
icebp
mov
push
or
push
cmp
cmc
and
pop
jns
pop
mov
or
cld
push
and
mov
jg
shr
test
popa
push
mov
dec
es
fstpt
pop
mov
call
fsubrp
mov
sub
pusha
dec
push
repz
sub
mov
push
mov
mov
mov
jbe
mov
int
mov
mov
mov
xchg
dec
insl
jge
jae
inc
or
pop
push
and
jns
shrl
mov
mov
js
xchg
jp
mov
adc
jns
clwb
lretw
push
jns
mov
icebp
test
cmc
iret
jae
out
into
fiaddl
add
nop
into
pusha
incb
sub
add
dec
ja
inc
cmpsl
inc
out
or
dec
cmp
aad
jnp
cmp
outsl
jp
mov
fistpll
xchg
cmpsl
ret
faddl
add
xchg
int
insb
push
pop
sbb
mov
pop
push
or
or
fsubs
in
sbb
cmp
xor
scas
pop
movsb
pushf
je,pn
cmp
pop
xchg
and
out
cmp
mov
and
rclb
adc
mov
xchg
pop
popa
push
jmp
sbb
popf
fcoml
lock
fnstenv
inc
pop
adc
sub
add
int
fldenv
sarl
call
insl
js
adc
sti
sbb
mov
push
jecxz
push
aad
das
int3
push
mov
out
loop
pusha
scas
and
subl
jl
mov
inc
in
mov
mov
test
jne
mov
and
ficoms
stos
shll
pop
ret
ljmp
dec
add
mov
std
das
aam
ja
es
in
stc
lds
pop
xor
adc
pop
fcmovnbe
jae
outsb
xchg
lock
sub
dec
ja
push
ds
daa
jae
idivb
sti
fnsave
adc
ret
push
xchg
push
mov
inc
rcll
xchg
adc
xchg
imull
push
mov
test
shll
inc
mov
mov
in
dec
lret
insb
pop
inc
mov
sub
jno
test
adc
push
daa
and
push
inc
lods
sub
enter
add
mov
mov
and
cmp
dec
ja
scas
jbe
filds
out
mov
jl
push
cwtl
xlat
jns
cmp
xor
hlt
mov
movsl
fists
push
cltd
push
jo
xchg
mov
mov
mov
fstl
loope
fistpl
adcl
cmc
cmpsl
je
xor
daa
cmp
mov
imul
rorl
dec
mov
xchg
leave
out
pop
cwtl
cs
inc
add
or
add
xchg
sub
arpl
inc
cmp
mov
push
scas
in
insb
mov
arpl
xchg
test
ja
dec
xchg
cmp
scas
mov
xor
in
pop
jae
and
jge
movsl
aam
or
lahf
mov
imul
push
sbb
popa
xor
mov
dec
jmp
jbe
xchg
ds
fbld
sti
cli
push
icebp
cs
mov
sahf
dec
mov
pop
iret
cmp
mov
add
mov
fstl
or
out
ficompl
mov
or
jecxz
nop
je
stos
popa
dec
add
fld
pop
mov
imul
insb
sbb
cld
and
je
jle
fistl
or
in
in
and
dec
xchg
jl
cs
mov
les
scas
jmp
jecxz
imul
cmp
push
bound
mov
mov
test
sub
fcomps
push
sub
in
addr16
insb
push
test
ret
pop
xchg
cltd
jmp
mov
cwtl
mov
popf
js
pop
outsb
mov
imul
or
cmp
and
mov
lods
sub
pop
pop
and
mov
addb
pop
rcrl
mov
push
mov
fisubrl
and
hlt
adc
push
push
int3
push
mov
out
fstp
jno
inc
mov
das
movsb
xor
add
adc
and
es
stos
sbb
fbld
addb
adc
xor
mov
test
cmpsl
sarl
xchg
xchg
mov
lret
nop
dec
inc
imul
push
mov
and
sub
or
ds
mov
out
scas
xchg
mov
mov
aas
stos
cmp
mov
fs
cmp
out
dec
or
sub
test
and
xor
sub
out
bound
inc
mov
rorb
cmc
push
divb
push
and
dec
in
ja
jle
xchg
bound
xchg
fbld
add
sbb
popa
pop
inc
outsb
and
int3
sbb
cmp
in
mov
lret
mov
movsb
push
adc
repz
fyl2x
xchg
mov
sub
leave
push
xchg
adc
and
cmp
movsb
dec
push
call
dec
pop
dec
mov
push
pop
imull
lret
addr16
mov
pushf
sarb
cmpl
sbb
cmpsb
jl
xchg
rcrl
mov
xor
push
xchg
sub
cmc
jecxz
mov
or
lods
cltd
out
xor
xchg
xchg
push
inc
js
add
pop
mov
push
push
lcall
adc
add
mov
test
xchg
mov
xchg
push
push
xchg
imulb
dec
sub
scas
xor
push
mov
dec
dec
pushf
daa
pop
sub
push
loop
sbb
xor
mov
push
jl
cwtl
dec
cmpsb
rolb
mov
add
jecxz
pop
addr16
test
testb
xor
flds
jecxz
mov
push
xor
jp
and
into
add
imul
daa
pushf
inc
gs
pop
mov
xchg
std
icebp
pop
adc
gs
std
pop
xor
mov
cld
push
repz
push
jge
and
std
out
pusha
jge
mov
test
jne
xchg
aas
inc
std
sti
pop
jp
xchg
imul
jg
jbe
bound
jbe
aam
adc
mov
sub
bound
or
fdivrl
gs
ficompl
sti
int
pop
push
push
lahf
arpl
inc
idivb
jnp
mov
std
repnz
sti
dec
push
sub
and
lahf
push
ret
xor
int3
lret
cmp
ficoms
dec
adcl
push
repz
pop
fmuls
data16
sub
std
inc
sahf
mov
pushl
adc
cmp
ret
mov
pop
icebp
mov
clc
add
push
add
movsb
movsl
fsubs
test
fcomi
sub
push
outsl
xor
cld
sbb
xchg
push
lcall
mov
ds
cmp
push
stos
popf
std
inc
iret
mov
lea
push
cmp
into
mov
xor
in
jge
mov
cmc
hlt
mov
loop
jbe
push
xchg
sbb
lcall
in
sti
imul
jnp
stos
jb
xor
ljmp
dec
xor
shlb
rorl
lret
dec
xchg
pop
imul
repnz
cmpsl
fsubl
jmp
cld
sub
negl
mov
gs
cmp
sbb
pop
mov
push
les
std
es
mov
sub
test
mov
or
cmp
cltd
hlt
mov
pop
divl
fucomp
cltd
push
arpl
xchg
lret
mov
pop
jp
mov
jne
jne
mov
and
sbb
sub
cli
adc
movsb
mov
and
sahf
in
mov
les
or
dec
fsubl
xchg
jbe
in
add
cs
push
xor
insl
adc
out
bound
mov
sub
or
lods
dec
in
stc
mov
aaa
out
sbb
xlat
into
stos
mov
xchg
xchg
add
cmp
jae
mov
add
out
mov
mov
pop
mov
ror
and
lods
das
stc
js
pop
in
lcall
out
pop
dec
mov
imul
lcall
jnp
popf
inc
inc
mov
das
jae
mov
cmpsb
adc
cmp
mov
add
popa
nop
sete
arpl
test
pusha
ds
push
addr16
imull
je
mov
loop
mov
iret
sbb
cld
mov
mov
aaa
fwait
ds
leave
push
ficomps
or
xchg
push
loopne
sub
mov
inc
mov
shlb
lret
loope
jge
cmp
xor
cmp
hlt
int
mov
sub
movsl
inc
xchg
idivb
mov
imul
lahf
pop
mov
incb
and
cmp
push
xchg
scas
inc
sbb
mov
mov
orb
adc
sbb
or
mov
push
ds
enter
inc
pusha
jecxz
inc
icebp
mov
lods
pop
jl
clc
outsl
sub
test
fisubs
pop
mov
and
pusha
lods
test
push
in
xlat
cmp
pop
enter
xor
mov
cmp
mov
test
dec
mov
add
mov
mov
hlt
xchg
sbb
test
sti
dec
inc
adc
sbb
mov
rorb
mov
out
fdivrl
scas
pop
test
xchg
shll
cmp
inc
push
xchg
stos
and
mov
lock
dec
xchg
shlb
shrl
aaa
add
dec
ds
mov
daa
pop
pop
int
push
movsl
outsb
jb
mov
cmpsl
cltd
inc
or
cltd
sar
gs
sub
add
in
jge
mov
mov
cmp
xchg
aam
and
imul
iret
push
cltd
push
push
and
jae
mov
inc
and
xchg
scas
daa
mov
jae
xchg
pushf
in
stos
adc
out
scas
mov
fucom
ja
out
adc
sahf
dec
jnp
in
cmp
jae
mov
rcrl
rcr
sbb
xlat
shll
clc
push
push
rcr
xor
out
pop
and
fwait
sbb
and
or
mov
jb
in
fldcw
jle
aaa
jp
inc
fcompl
push
fldenv
pop
cmp
sub
clc
cmc
sbb
aas
mov
pop
in
dec
nopl
popl
mov
pop
mov
push
aad
pop
call
jmp
xchg
xor
outsb
test
or
mov
push
fisttpll
mov
pop
js
add
leave
fnstcw
pusha
push
jecxz
decl
mov
sbb
sahf
xor
daa
jmp
or
pop
lret
mov
inc
inc
jecxz
in
push
scas
call
lods
fcomps
adc
dec
and
inc
lods
iret
in
ja
outsl
push
arpl
imul
lock
iret
or
aaa
dec
and
xor
mov
push
mov
fbstp
mull
pusha
xchg
and
push
test
jge
xchg
test
les
sahf
xchg
dec
xor
add
adc
lahf
sbb
cmc
scas
inc
adc
and
dec
mov
in
xorb
scas
das
mov
xor
rcrb
pop
je
scas
or
pop
rcll
xchg
repz
ret
sub
jmp
pushf
aaa
bnd
shlb
sbb
cmp
lret
stos
std
or
mov
inc
jo
jl
sbb
imul
push
out
and
add
outsl
push
push
fadd
push
orb
jp
int3
rep
lret
cmpb
push
shrb
nop
enter
aaa
add
dec
in
cltd
rcrb
xchg
push
stc
dec
mov
dec
fdivs
sub
lret
push
xchg
mov
mov
xchg
mov
sub
sahf
mov
js
js
call
jne
out
mov
xchg
cmc
sub
test
hlt
adc
add
mov
shlb
ja
in
push
or
dec
ljmp
cmp
cmpb
jp
imul
lods
sub
pop
dec
jbe
repnz
push
icebp
mov
lock
mov
xlat
jae
test
sbb
idiv
andb
ja
cmp
add
and
clc
cmp
out
stos
xor
mov
test
mov
hlt
iret
lcall
sarb
pop
mov
movsb
inc
pop
pop
cld
test
add
cmp
test
fidivs
sbb
js
mov
pop
add
push
and
insl
push
mov
jne
pop
xchg
test
xor
or
call
xlat
mov
movsb
mov
mov
mov
fwait
test
ja
stc
add
push
clc
mov
je
and
and
jnp
jle
mov
mov
push
cmpsb
aam
shll
cmp
aas
xchg
jg
les
nop
adc
cmpsb
or
aaa
fidivrl
jbe
push
and
fimull
jecxz
pop
fcmovu
xchg
and
push
movsb
push
cmpsb
sbb
out
stc
rclb
sub
sbb
loope
cmp
insl
loopne
clc
xchg
push
std
jg
inc
icebp
push
rolb
repz
cld
push
imul
icebp
cmpl
dec
ret
notl
fs
xchg
addr16
push
jbe
xchg
cmpsb
inc
add
insl
xor
sbb
inc
dec
lods
dec
in
fidivrs
cltd
jecxz
pop
adc
mov
icebp
sbb
fdivrl
call
imul
cmpsl
or
lahf
mov
dec
cmp
cmpsb
dec
aam
mov
cmpsl
mov
cs
xchg
test
mov
js
out
in
mov
mov
cmc
inc
div
xchg
xor
jge
imul
jae
and
inc
dec
scas
add
mov
xchg
cmc
mov
inc
and
out
xor
sbb
dec
std
add
fdivl
mov
mov
in
les
fimuls
cmp
shl
cltd
mov
dec
xchg
xor
jg
xor
pop
pop
daa
loop
inc
repnz
mov
mov
adc
pop
aad
add
mov
mov
push
notl
mov
shr
push
xchg
mov
xor
pop
enter
cmp
ret
xchg
inc
add
and
insb
xchg
inc
fidivrl
lods
jle
sub
mov
insl
mov
lods
mov
cmp
dec
repz
mov
push
pusha
jp
std
invd
xor
jmp
pop
mov
inc
cmp
cmp
cmpsb
shlb
test
cwtl
cmp
inc
lcall
bound
mov
out
xchg
ficoml
jae
scas
bound
jp
clc
mov
cmp
mov
in
gs
push
movsl
into
push
jno
inc
pop
div
dec
fsubrl
add
mov
sbb
mov
mov
jmp
movsl
inc
popf
fistpll
or
jns
sub
fists
push
push
push
ficoms
mov
dec
mov
aad
mov
adc
clc
cmpsb
ret
icebp
xchg
loop
jo
ljmp
int3
inc
roll
jno
lea
fwait
cmp
es
je
int
and
xlat
pop
add
scas
mov
fbstp
sahf
cmp
or
insb
ja
je
pop
test
push
cmp
sub
in
xor
fcmovu
adc
testl
lahf
sbb
push
sub
aaa
bt
fisubrl
cmpl
jb
add
and
xchg
jae
mov
jnp
leave
hlt
push
mov
lods
add
imul
mov
pop
out
loope
gs
adc
in
loop
movsb
scas
or
std
xor
sarb
xchg
sbb
inc
inc
jb
mov
test
cltd
xor
leave
icebp
int
jp
add
fistps
xor
xor
aaa
lcall
jp
and
cmp
cmpsb
or
jl
aad
mov
adc
cmp
xchg
jl
inc
movsl
dec
arpl
dec
arpl
mov
mov
andb
sti
inc
xor
hlt
cmpsb
adc
cmp
clc
inc
cmp
jmp
xchg
pop
cmp
and
cmp
popf
out
jnp
leave
addr16
inc
icebp
insb
sahf
lods
pop
scas
insw
push
daa
outsl
lods
add
inc
dec
js
jg
les
dec
or
adc
cmc
mov
pop
inc
adc
cs
out
sub
fdivs
pop
cmc
dec
mov
sub
pop
pusha
nop
add
das
xor
add
xchg
xor
xor
and
cmp
int
xchg
sbbb
movsb
call
mov
insb
lods
sahf
pop
je
pop
movsl
or
dec
mov
out
mov
push
jo
inc
pop
shrb
lcall
arpl
or
enter
mov
in
push
or
push
mov
xchg
jb
xchg
aaa
int
mov
adc
xor
testl
push
addb
mov
mov
pop
xor
cmp
clc
jne
mov
pop
mov
seta
aam
sub
repnz
scas
xchg
insl
clc
xchg
sbb
shll
adcb
jnp
rclb
and
mov
mov
sub
movsb
jae
fdivrl
xchg
cmp
push
inc
inc
jecxz
ljmp
ds
push
scas
loope
jnp
dec
ret
xorl
adc
pop
mov
movsl
imul
adc
pusha
stc
sbb
clc
sti
gs
push
jnp
mov
jle
xlat
cmpsl
and
add
lock
jle
cmpsb
add
jg
mov
push
jl
pop
cmc
popf
xor
imul
cwtl
adcb
mov
cmp
push
sub
sub
dec
and
jno
orb
in
mov
ss
fwait
pop
data16
sub
fcomps
loope
add
scas
push
popf
or
add
push
pop
adc
popf
pop
xchg
adc
sbb
dec
or
xchg
icebp
push
ja
fcmovnu
mov
push
push
arpl
js
mov
iret
data16
xor
adc
and
fdivs
test
fisubs
rcll
jb
sbb
mov
adc
sbb
leave
cmp
xchg
adc
fstl
lret
fstpl
scas
xchg
lock
orb
xchg
sub
inc
push
in
or
adc
insl
loop
pop
sbb
sub
xchg
inc
mov
sub
arpl
jno
mov
mov
in
add
and
lret
gs
loop
pop
pop
fldcw
dec
mov
mov
ret
push
mov
cmpsb
push
nopl
inc
cwtl
scas
fwait
mov
sbb
sub
pop
sub
cltd
pop
hlt
ret
mov
mov
insb
movsl
faddp
pop
pop
jae
in
scas
es
mov
fcomip
mov
sub
jne
sub
dec
mull
mov
xor
fidivs
mov
and
movb
mov
and
cmp
jno
repz
sub
pop
sti
pop
pop
push
imul
push
fiadds
and
decb
add
cwtl
repnz
iret
or
adc
cmp
aad
sub
shlb
cli
pop
dec
xchg
jg
xchg
cmp
mulb
xchg
xchg
imul
in
mov
pop
or
pop
lret
add
mov
mov
aas
test
sbb
iret
fsubrs
scas
lcall
test
or
or
inc
filds
popa
mov
jecxz
std
pop
cld
js
or
push
and
sbb
adc
stos
sbb
or
add
xor
push
mov
enter
fldenv
cmpsl
scas
fs
shll
faddp
popl
je
lods
inc
xchg
sbb
fisttpll
test
daa
sbb
sbb
lds
std
mov
dec
rolb
cmpl
or
ret
fwait
insb
pop
sbb
in
fsubs
jns
dec
es
lds
add
inc
fidivs
push
or
sub
pop
dec
xor
xchg
call
stc
fxch
dec
arpl
mov
stc
push
pop
sub
jle
aam
frstor
daa
pop
popf
jle
cmp
lods
push
stos
ret
mov
les
sub
loope
bound
daa
lods
adc
data16
outsb
addr16
imul
cld
jb
mov
pop
ret
test
int
and
or
out
decl
mov
push
outsl
push
xor
push
bound
xchg
push
adc
ljmp
insb
bound
adc
enter
sub
gs
das
mov
movsl
jmp
mov
sbb
mov
cmp
repnz
dec
xor
cmp
int3
pop
pop
jno
dec
jae
push
pop
add
lock
lock
jo
pushf
pop
sbb
imul
int3
daa
add
jge
adc
lcall
js
inc
fstl
mov
adc
xchg
fcompl
pusha
incb
mov
pop
add
dec
fwait
push
in
add
xlat
sbb
aad
aam
lahf
aam
mov
inc
mov
and
mov
mov
inc
xchg
ljmp
xchg
ret
add
mov
adc
mov
dec
fbstp
xchg
inc
inc
fiadds
cmp
or
dec
and
clc
add
mov
jl
repnz
adc
sub
test
adc
aam
inc
dec
sahf
jbe
inc
aaa
push
or
jle
sub
movsb
cmpsb
push
iret
mov
xor
mov
adc
cmpsl
gs
mov
fwait
xchg
imul
adc
loop
inc
jns
cmp
push
outsb
jns
jge
sub
mov
icebp
dec
pop
popf
sti
sub
insl
loope
outsl
jmp
in
mov
xor
push
sti
aam
pop
into
imul
scas
scas
cltd
bnd
movsb
sub
clc
out
adc
ja
cwtl
jg
lock
adc
leave
xor
add
sbb
nop
int3
mov
cmp
xor
and
add
fs
sub
aam
or
cli
int
and
inc
inc
push
jle
fsubl
fistpl
add
mov
xor
call
loop
jg
ljmp
adc
mov
gs
and
mov
adc
imul
cmp
adc
xchg
mov
sbb
mov
ret
enter
les
mov
xchg
hlt
ret
fldcw
xchg
jb
push
and
xlat
sbb
cltd
std
int3
cs
dec
lea
stos
in
movsb
sub
pop
pusha
iret
lret
jle
dec
add
sbbl
out
test
jg
xchg
scas
add
cmp
addl
cmc
aam
inc
pop
mov
sbb
push
loope
cmp
nop
add
cwtl
push
repnz
andl
ja
ljmp
scas
or
mov
insb
ficompl
outsl
sbb
subl
insl
and
cmc
pmulhuw
or
call
out
rcll
pop
int
addps
inc
insb
shrb
mov
xchg
in
lcall
xor
bound
jae
test
out
aam
fnstcw
loop
outsb
loop
fwait
cmp
test
scas
rolb
jp
and
cmpsl
push
xchg
sbb
cmp
sbb
mov
mov
pop
ret
and
xchg
jb
ficoml
stos
xchg
pop
xor
xchg
xor
or
mov
call
xchg
mov
test
fstp
pop
xchg
dec
xlat
lcall
push
into
cwtl
and
mov
dec
xchg
vpsubusb
stos
scas
push
xor
fisubrs
repnz
aad
test
scas
jb
xchg
inc
lcall
bound
fdivrl
sub
mov
jecxz
imul
out
enter
sub
test
int3
cli
dec
jg
lcall
jno
notb
test
andb
push
cwtl
dec
adc
adc
inc
mov
adc
xlat
lret
cld
das
orl
ljmp
or
in
cs
dec
int
sbb
push
xchg
pop
leave
cld
int3
mov
lahf
and
mov
ljmp
jecxz
jle
mov
jno
jnp
shl
push
cmp
cmc
or
xor
fidivs
fists
test
push
aaa
mov
imul
jle
xor
cmp
or
aas
inc
insl
mov
clc
cmp
pop
repnz
pusha
sub
jge
xchg
stc
or
into
jg
mov
stos
mov
loop
inc
pop
xor
out
fidivs
xor
das
lea
mov
fimull
push
notl
es
add
subb
xor
lods
pop
test
enter
cmc
mov
and
or
cld
cmp
jmp
test
dec
popf
cwtl
cmp
pushf
test
mov
fcompl
cmp
mov
jb
add
stc
fldt
jge
push
insl
and
rorl
cmp
jmp
js
ljmp
sub
std
or
out
into
dec
aaa
repnz
loope
mov
sub
inc
mov
add
push
adc
nop
and
and
add
inc
jb
jge
lret
dec
sub
test
stos
ficompl
ss
mov
fsts
nop
add
mov
pop
push
mov
clc
and
jg
mov
inc
ljmp
jl
pop
pop
and
mov
out
jae
inc
scas
adcb
jge
jmp
inc
cmp
addl
xor
daa
and
dec
jecxz
scas
push
aam
popa
je
outsb
xchg
cld
fs
xor
popf
push
cmp
jl
push
lret
cmc
insb
cmp
xor
sub
shr
mov
sbb
addr16
xor
push
lahf
imul
xchg
cmp
arpl
mov
leave
cmp
mov
movsl
pop
mov
in
push
xor
mov
outsb
sti
and
dec
arpl
inc
pop
out
xchg
pop
adc
mov
dec
jns
aam
fisttpll
test
or
or
mov
cmp
push
pop
dec
add
fnsave
aad
scas
into
mov
jns
lea
mov
or
xchg
xor
pop
pop
ja
xchg
sbb
mov
or
imul
cmp
sub
mov
mov
dec
mov
frstor
pop
sbb
dec
repz
mov
cmp
inc
icebp
or
push
lods
cmp
mov
xor
add
pop
loopne
pop
mov
jne
ficoml
idivl
jecxz
loopne
mov
jns
mov
add
rol
ret
repz
decb
adc
push
inc
lods
xchg
lcall
mov
jmp
add
cmp
sti
sbb
fcomps
xor
pop
test
xorb
psubb
jo
pop
addr16
dec
test
mov
lods
mov
lahf
es
sahf
test
notl
sbb
mov
push
test
sub
inc
cld
adc
adc
mov
mov
cmpsl
cmp
mov
sbb
cwtl
dec
insb
inc
mov
cmp
push
hlt
sbb
in
das
pop
shll
sti
pop
shrb
xchg
addr16
out
aas
or
mov
fsub
jns
mov
mov
out
imul
cmpsb
shll
stos
sub
lock
les
jo
pushf
inc
push
pop
es
jnp
pop
xchg
xchg
mov
imul
repz
cmp
ficompl
rorb
inc
arpl
js
shll
hlt
cmpsl
jne
sbb
push
in
icebp
xchg
add
mov
and
cmp
sbb
add
cs
dec
sbb
daa
adc
das
sub
jecxz
inc
dec
cld
and
jge
add
xor
push
mov
jle
inc
xchg
xor
add
mov
lcall
push
sbb
test
loopne
not
pusha
test
mov
and
or
xor
jo
cmpsb
nop
xor
adc
popa
add
adc
xchg
sub
add
gs
adc
data16
dec
jl
rorl
pop
jmp
hlt
pop
sahf
pop
pushf
pop
mov
cmpl
outsb
movsb
inc
xor
cmp
rcrl
adc
dec
out
cmp
sbbb
rclb
xor
test
mov
mov
sahf
iret
mov
and
xchg
dec
idivb
pop
sbb
pop
mov
mov
outsb
sub
insb
aam
cwtl
nop
in
mov
dec
jg
jecxz
out
les
xor
xor
xorl
pop
iret
push
and
ss
lea
pop
pusha
xchg
idivb
arpl
or
test
add
add
jmp
std
outsb
and
mov
js
adc
repz
jns
outsb
xchg
ret
jae
add
adc
and
xor
sub
repnz
cs
icebp
pushf
cmp
rol
pop
cmp
sar
sbb
or
jle
scas
pop
pop
fs
pop
popa
inc
sub
bound
add
push
int3
repnz
mov
sub
popf
ljmp
mov
jle
clc
fwait
lcall
add
inc
adc
test
xor
mov
addr16
mov
mov
cld
xchg
and
sbb
cmp
pushf
adc
push
sub
pop
cwtl
sbb
rolb
and
cmp
adc
push
dec
inc
adc
mov
les
cmp
add
icebp
add
push
mov
addb
pop
rcrb
cwtl
lods
xchg
test
push
icebp
pop
lock
cmpsl
mov
xchg
and
aas
cmp
and
or
push
cmp
fstpt
cmp
pop
int3
mov
lods
mov
test
push
mov
pop
scas
dec
test
stos
mov
mov
add
mov
inc
dec
cmp
dec
ja
pop
enter
xlat
lods
adc
loope
inc
out
add
inc
xchg
test
push
lds
inc
dec
imul
jo
and
xor
cmpsb
std
in
jne
mov
jns
data16
jl
ret
xchg
xor
inc
aam
mov
cmpsb
cli
aam
xchg
cmp
cmp
mov
fnstcw
fucom
insl
dec
add
cwtl
test
jnp
filds
inc
aad
jbe
cmpsb
hlt
push
mov
out
pop
mov
icebp
insl
and
sbb
add
mov
push
and
jg
push
adc
add
out
call
call
sub
mov
cwtl
xor
pop
inc
adc
daa
insl
jo
jl
je
leave
jno
xchg
add
je
orb
jge
fsubrl
or
mov
xor
adc
sub
and
les
loop
repz
sbb
jne
xor
pop
jae
jge
ljmp
outsl
rolb
xor
xor
xorl
jmp
mov
loop
je
out
pusha
and
or
call
mov
fcompl
testl
add
mov
cmpsb
sbb
int3
inc
xlat
mov
mov
push
cwtl
lret
mov
xor
cmpsb
imul
enter
pop
cmp
or
fldln2
lahf
push
rcll
stc
jbe
mov
xor
in
inc
xchg
imul
push
inc
imul
lds
je
inc
mov
inc
ret
fidivs
push
pop
aas
cmc
sub
call
fistps
pop
push
fwait
inc
imul
sub
mov
shl
xorb
or
jnp
mov
cmpsb
or
repz
add
div
in
pop
dec
cltd
arpl
outsb
add
push
sbbl
fstp
dec
add
xlat
push
into
loopne
inc
ss
je
sbb
mov
lret
scas
ljmp
rorb
lods
or
lock
mov
jae
pop
test
sbb
fistpll
movq
mov
movsl
ja
das
jmp
adc
xchg
jmp
push
repz
in
jecxz
push
rcrb
in
stc
incl
push
mov
bound
sahf
sbb
dec
fnstenv
mov
rep
add
xchg
cld
jmp
ds
sbb
push
gs
push
mov
imul
loopne
inc
dec
out
rol
int3
mov
and
arpl
mov
ss
xor
cmp
sub
mov
mov
mov
cs
cs
movsb
ss
ja
or
cmpsb
push
pusha
xor
stos
mov
mov
in
fs
fiaddl
dec
mov
sub
push
movsl
std
or
dec
test
xor
adc
pop
jnp
or
or
insl
sbbl
out
or
lock
arpl
scas
or
inc
aad
lahf
sub
xchg
pop
xor
dec
jne
and
sub
bnd
repz
push
jmp
xchg
cltd
jne
sbb
xchg
int3
xor
leave
xor
push
inc
push
jnp
out
je
pusha
popf
xchg
dec
in
das
mov
loop
xor
mov
push
push
stc
xchg
add
cmp
loop
mov
jl
add
stc
add
decl
cmp
adc
lret
xchg
mov
or
jl
jo
gs
mov
sbb
mov
jne
mov
mov
push
and
mov
dec
mov
pushf
jb
ds
imul
mov
nop/reserved
mov
sahf
adc
push
sarb
clc
enter
pop
les
ficoms
movl
mov
and
cmpsb
add
repnz
pop
sub
dec
dec
aaa
int
or
int
test
inc
repnz
ss
dec
shll
jae
sbb
fisttps
xchg
movsl
shl
cmp
xchg
jnp
or
in
stos
fsts
lea
out
jb
pop
push
lods
adc
rorb
ficoml
push
paddq
repz
xor
jp
out
or
imul
test
rcl
mov
inc
sub
ficoms
bound
fst
shrb
jnp
sub
subl
mov
lret
or
mov
gs
xchg
xchg
lods
rclb
stos
sahf
dec
xchg
jae
fidivl
aas
mov
icebp
repz
push
psadbw
inc
adc
inc
out
push
jecxz
add
aaa
dec
pop
popf
stos
pop
fisubs
enter
and
fistps
push
mov
lods
lcall
mov
daa
xchg
or
imul
sbb
insl
mov
lds
or
hlt
xchg
out
lret
adc
dec
cmp
movsb
adc
or
lea
or
mov
adc
repnz
addb
push
dec
xchg
loope
test
push
or
or
leave
jnp
bsf
xor
sub
inc
lea
ja
sbb
lds
ljmp
add
adc
pop
push
jbe
push
pop
outsb
cmp
mov
pop
data16
ret
fisttpl
mov
test
repz
or
xor
mov
lret
enter
xlat
add
aas
inc
in
adc
mov
out
xchg
jle
ss
nop
popa
addr16
je
push
dec
xchg
push
ret
cmp
pop
adcb
cs
in
dec
mov
push
pop
and
jo
pushf
cld
push
mov
mov
call
mov
notl
lds
sbb
inc
pushf
sub
lods
cmp
fisubl
out
or
adc
jl
repnz
mov
cmpsb
ljmp
imul
mov
push
movsb
mov
or
js
adc
out
push
sahf
std
repnz
push
sti
fidivrs
mov
mov
xchg
add
sub
popf
mov
push
sti
xchg
je
mov
push
loop
pop
mov
mov
inc
mov
mov
mov
leave
ret
add
cwtl
lds
cmp
in
cmp
movsl
daa
dec
mov
pop
adc
fisttpl
popf
push
adc
aas
or
pop
fstps
push
pop
jge
xlat
gs
xor
mov
out
xchg
xchg
push
outsb
inc
test
not
jp
aam
pop
out
call
dec
test
and
dec
in
leave
and
and
cmpl
lds
jnp
mov
push
mov
adc
jp
rclb
leave
xor
pop
pop
pop
xlat
lcall
insb
data16
fwait
imul
xlat
fidivrl
mov
in
imulb
scas
int
cmpsb
or
push
sbb
sub
out
aaa
in
xchg
insb
jb
repnz
dec
pushf
lock
andb
movl
jno
popf
test
mov
hlt
adc
enter
nopl
loopne
ss
test
dec
stos
add
xor
scas
push
daa
push
gs
add
mov
or
test
and
lods
push
popf
pop
mov
xor
adc
into
and
push
pop
sbbb
cmc
inc
mov
push
inc
lods
mov
shrl
push
push
push
add
stos
xchg
or
sar
out
ljmp
int
add
pop
jl
and
cmpsb
xchg
xchg
jae
stos
les
or
jno
wbinvd
into
pop
pop
in
insl
lret
fidivrl
or
cwtl
ljmp
add
xor
cwtl
xchg
ret
mov
push
je
bound
es
and
cli
aad
jo
inc
je
daa
sbb
dec
jns
and
shlb
into
sbb
mov
cs
and
sbb
xor
jns
fcoms
ljmp
push
add
jbe
stos
into
in
inc
aas
sub
jmp
cmpsb
arpl
adc
arpl
push
cld
ret
scas
push
inc
mov
add
out
imul
or
pop
sti
xlat
test
or
in
push
inc
roll
call
rcr
push
and
mov
loopne
sbb
pop
inc
test
jbe
movsb
jl
sbb
sbb
mov
cmc
xor
hlt
out
pop
js
imul
cmp
dec
mov
neg
cmpsl
je,pn
clc
dec
pop
scas
and
xchg
hlt
paddsb
pop
dec
jns
adc
int3
jle
das
dec
rcrb
mov
aam
xchg
daa
aas
insl
xorb
out
pop
pop
cmpsb
inc
mov
stc
fcoml
mul
fwait
out
pop
jecxz
notl
mov
mov
jne
pusha
jns
ja
dec
jecxz
cmp
ret
jnp
sbb
jno
lock
sahf
mov
jns
xor
pop
repz
add
fnsave
dec
mov
inc
test
ret
mov
adc
iret
pushw
xor
aam
fists
cwtl
mov
add
xchg
stos
cltd
rolb
sbb
mov
std
outsl
push
ds
shll
in
jns
jp
push
xor
pop
mov
popw
aaa
cmp
sub
sub
push
lahf
cltd
es
gs
push
aad
loop
or
out
push
add
stos
fiadds
sub
das
arpl
xchg
or
jae
into
adc
shlb
add
ret
inc
push
inc
cmc
mov
lods
cmpsl
inc
dec
test
xorl
mov
loopne
jae
pop
aas
js
or
cwtl
sub
mov
push
stos
aad
mov
lds
push
shll
jmp
cltd
inc
jle
int3
loop
lds
xor
scas
fdivrs
imul
or
or
push
pop
call
xor
xor
sub
cmc
ret
mov
adc
imulb
jle
test
and
mov
pushf
add
test
or
pop
jnp
fmulp
mov
lea
push
fcoms
jl
dec
cmp
xchg
xor
in
pop
fiadds
cld
cmp
cmp
push
in
xorb
dec
repz
insl
xor
data16
into
pop
cli
stos
lret
mov
das
inc
adc
adc
and
xor
jmp
outsb
shrl
and
jo
dec
imul
inc
mov
push
push
or
mov
pop
enter
xorl
fcmovnb
mov
add
aam
inc
mov
sbb
or
push
out
arpl
loope
cmp
int
push
or
mov
ret
ss
repz
test
sub
and
fsubrl
pop
cmp
in
leave
cmp
jle
ds
push
push
dec
loopne
in
mov
cli
or
int
insl
shlb
ss
lret
or
andb
loopne
lods
lcall
test
stos
fisttps
lods
js
lahf
jg
jg
and
mov
cli
in
daa
out
add
jne
js
add
fbstp
jg
dec
lahf
das
add
and
fldcw
fisttps
clc
je
jb
scas
and
aas
mov
cmp
xchg
push
add
rolb
dec
cmpsl
pop
cmpsb
daa
cld
cmpsb
jo
jmp
cmp
movsl
mov
sub
fnstenv
jmp
je
push
xor
sahf
mov
sbb
popf
mov
loopne
jne
pop
mov
out
sbb
xchg
pop
ljmp
push
pop
push
cmp
xlat
pop
fwait
aad
jmp
push
ret
cmpsl
xchg
mov
out
fimuls
imul
enter
dec
jmp
jne
sub
mov
add
jno
idivb
xchg
pop
ret
enter
pop
jnp
out
pop
icebp
clc
lcall
inc
addr16
mov
jb
add
adc
pop
push
sarb
and
movsl
pop
test
push
cmp
cmc
sar
dec
xlat
sub
xlat
mov
rcl
sub
out
clc
mov
pop
iret
nop
add
sub
rcrl
dec
arpl
jno
mov
sbb
xor
shrl
pop
pushf
jmp
pop
pop
out
popa
in
add
add
cmc
xor
or
data16
mov
int
imul
jbe
cmp
dec
in
mov
sbb
lock
sarl
push
push
jmp
mov
stos
xor
pop
mov
cwtl
call
cli
cs
dec
sbb
scas
and
sbb
cld
jg
mov
push
das
xor
ljmp
in
xor
inc
push
in
mov
test
pop
xor
inc
mov
xchg
sar
negb
aas
mov
push
add
in
fcompl
aad
add
in
add
cmp
push
filds
xor
jbe
pop
sub
dec
mov
mov
popf
rorl
cmp
aam
adcb
add
outsb
lods
addl
push
jbe
xchg
push
or
test
inc
or
fdivrl
call
lret
xchg
lods
xchg
xrelease
pop
xchg
rcrl
adc
add
outsl
pushf
gs
out
int3
inc
pop
mov
cmp
scas
inc
or
adc
dec
adc
sbb
lds
mov
dec
enter
sahf
or
adc
mov
roll
fwait
and
mov
jb
cmp
sahf
xchg
jno
lock
ret
mov
dec
icebp
movsb
loopne
hlt
dec
out
jp
adc
daa
shrb
iret
lods
add
popa
data16
adc
movsb
jnp
xchg
mov
dec
fiaddl
sub
push
lods
sti
mov
call
cmpsl
dec
negl
pop
lea
push
leave
shr
push
rcll
addr16
faddl
daa
shll
stc
mov
push
stc
insl
pushf
push
and
leave
js
push
bound
movsb
shrl
lds
and
lahf
sub
adc
fbld
in
out
and
jo
mov
in
xchg
dec
pop
or
jmp
lock
xor
mov
or
les
cmp
inc
mov
or
adc
jb
pop
andl
out
push
cmp
and
adc
dec
sbb
mov
leave
int3
das
adcb
loopne
xchg
push
lret
adc
test
popf
pop
sub
insb
push
and
cmpsl
fcompl
xchg
sbbl
mov
in
frstor
outsl
sbb
mov
lea
sbb
ja
data16
dec
lahf
cmp
push
jmp
sbb
mov
xor
repz
ljmp
std
adc
sub
pop
pop
mov
cmp
dec
je
test
enter
aaa
xor
jecxz
in
lahf
xchg
mov
or
cld
ljmp
lret
xor
sub
andl
xchg
dec
or
stos
mov
shlb
push
repnz
mov
jge
call
xchg
data16
pop
insl
sub
push
fxch
ljmp
adc
or
mov
mov
mov
lahf
sbbl
aad
inc
or
jle
sar
popf
std
test
dec
sbb
cmp
out
inc
scas
mov
dec
std
sbb
push
sub
add
lds
push
cmpsb
and
and
add
sahf
cmpsb
mov
mov
mov
adc
in
fisttpll
cmp
ss
dec
fnsave
aam
int
sbb
scas
hlt
xor
stos
out
sbb
xchg
shrb
and
testb
push
xlat
push
test
pop
orl
sbb
push
sti
hlt
and
or
loope
xchg
out
mov
jle
test
cwtl
jecxz
divb
mov
push
ljmp
add
les
mov
jg
enter
mov
jbe
sbb
das
mov
pop
subl
xor
fistpl
orb
in
leave
push
mov
rolb
mov
popf
ss
stos
or
jp
inc
hlt
push
movsb
dec
cmp
lret
push
jns
inc
inc
scas
inc
and
ret
jb
adc
push
jb
rorl
popf
push
cltd
rclb
push
insl
dec
add
mov
fcompl
sub
xor
sbb
lock
mov
mov
mov
int3
jbe
in
popa
and
cld
push
jnp
es
into
imul
cmp
pop
in
add
cmp
and
out
lret
and
add
dec
cwtl
or
ds
aaa
ret
nop
inc
mov
cmp
movsl
inc
xchg
sbb
and
sub
fwait
mov
loope,pt
dec
push
sbb
jne
cmpsb
mov
push
mov
int3
xchg
xor
into
sub
push
jno
ds
outsl
mov
and
lret
loopne
push
pop
push
mov
jmp
lret
imul
xchg
call
sbb
lods
xchg
xor
and
sbb
ficoms
mov
cmp
pusha
rcrl
add
rorb
mov
jns
or
mov
cmp
xchg
or
inc
or
cmp
rol
imul
xor
mull
stos
lret
ja
pusha
cld
jg
pusha
out
push
cmp
xchg
push
mov
inc
movsb
out
pop
ret
ljmp
inc
jp
pop
mov
shl
lahf
fcomi
xchg
xlat
mov
add
inc
stos
mov
arpl
push
pop
outsl
cmp
jns
insl
mov
add
dec
daa
mov
in
loopew
sbb
jge
push
pop
ret
jmp
jp
loop
cld
les
add
sub
stos
push
dec
cmpsb
aas
add
test
arpl
and
fs
in
push
aad
xchg
mov
or
push
fistl
dec
movsl
movsl
add
stos
lods
out
and
or
pop
rolb
test
ror
cli
push
xor
pusha
lods
xchg
adc
test
xchg
and
xchg
idivb
adc
or
fisubrs
lock
loop
ss
sbb
or
mov
mov
or
xor
mov
loop
lods
jmp
jge
mov
cmc
adc
int3
cmp
sbb
dec
mov
xor
stos
pop
enter
push
lds
push
negl
enter
mov
jge
int
mov
cs
int3
mov
lret
or
mov
lock
aad
and
sbb
push
pop
cld
repnz
jmp
mov
xchg
test
in
push
add
shll
cmc
icebp
lock
lea
mov
xchg
mov
mov
in
loopne
jo
movsl
inc
mul
insl
mov
cmp
mov
jge
out
push
cmp
test
adc
pop
cmp
dec
push
push
les
mov
mov
sub
jp
loope
lock
mov
stc
mov
jbe
inc
bound
push
push
mov
sbb
test
xchg
test
nop
jo
cmpsl
gs
std
popa
aaa
filds
mov
fs
jns
jns
adc
push
je
in
xchg
fdiv
js
in
inc
es
stos
das
sbb
push
jno
loope
jg
xchg
xor
cmp
jno
xlat
cmp
repz
inc
movb
dec
sbb
js
in
fwait
xor
adc
push
loopne
rcl
test
dec
jb
xorl
je
mov
in
loope
inc
insl
in
or
in
fdivs
cs
inc
data16
and
jge
sbb
jo
and
cmp
pop
xchg
cmc
btc
enter
ret
sbb
push
add
std
adc
or
fimuls
lods
fxch
lods
sbb
fs
repz
lahf
push
stos
pop
sub
pop
and
fsubrl
in
gs
mov
push
dec
loope
mov
outsb
in
int3
pusha
mov
jge
roll
pop
imul
jg
nop
xchg
sbb
add
jg
pop
fwait
sbb
sbb
fs
in
push
call
shll
xchg
dec
or
mov
lret
xchg
and
jmp
and
mov
popa
push
cli
inc
shrb
stc
sahf
xchg
mov
xchg
idivl
into
push
inc
in
add
test
shlb
mov
rolb
out
pushf
or
jp
scas
sub
push
cltd
adc
xor
andl
mov
pop
push
adc
fmul
jne
inc
jecxz
push
nop
sub
lret
mov
mov
sbb
mov
stc
pop
xor
gs
mov
ljmp
push
imul
and
adc
push
fistpll
or
stc
ds
inc
xchg
push
jb
cmpl
push
xchg
jg
add
icebp
xchg
data16
fwait
lea
nop
mov
push
mov
mov
mov
cli
mov
and
repz
push
lods
cmp
dec
pusha
js
xchg
lret
cmpsb
adc
jle
and
xor
insl
add
xchg
and
mov
xor
lods
cmp
xchg
jb
popf
out
aaa
pop
dec
mov
xchg
iret
add
and
lret
cld
call
mov
imul
or
loopne
push
add
sbb
fldcw
pop
pop
mov
jmp
pop
shll
xor
pop
cmp
jns
movsb
mov
stc
pop
pop
adc
out
push
sub
xor
pop
mov
leave
jmp
ret
aaa
mov
or
sub
stc
mov
stos
ja
mulb
xchg
jne
icebp
ret
call
sub
jbe
shll
or
push
test
or
hlt
or
sub
or
lock
mov
add
icebp
xchg
mov
mov
xchg
mov
ja
mov
daa
lods
ret
xchg
push
jmp
xchg
mov
push
sub
add
mov
imul
leave
incb
scas
adc
push
xlat
decl
jmp
sub
inc
inc
lods
or
outsb
mov
cltd
jecxz
in
sub
bound
push
daa
fimuls
das
test
jns
add
rcll
faddp
pop
xchg
cmp
ja
inc
mov
pop
mov
xchg
scas
sbb
ss
sbb
or
test
cmp
mov
inc
test
push
pop
cmp
in
lcall
mov
adc
sbb
shlb
xchg
pop
outsb
outsl
pop
mov
xchg
sub
hlt
jle
cmp
leave
inc
ja
sbb
in
add
daa
adc
ljmp
cs
xor
aad
ds
test
adc
jns
dec
xor
out
jp
clc
test
addb
cli
movsl
push
clc
push
movb
push
or
cmp
insl
or
jle
cwtl
sub
xor
sub
sbb
ret
test
add
fsub
xchg
dec
sub
mov
jge
jg
test
ret
xchg
xchg
aas
push
sub
loope
adc
bswap
mov
cld
jae
sub
xor
daa
push
push
mov
push
cli
lahf
mov
or
cmp
in
push
mov
std
push
lock
adc
sbb
test
mov
or
xor
adc
jge
inc
mul
or
sahf
leave
shlb
loopne
dec
push
leave
and
ja
stos
pop
or
mov
pop
dec
jl
mov
imul
gs
repnz
lret
sub
xchg
or
lahf
shll
in
das
imul
pusha
icebp
dec
loope
out
push
sbbl
jae
sbb
daa
add
lcall
fadds
push
xchg
adc
call
addr16
add
mov
mov
push
cmp
pop
and
xor
js
mov
cmpsb
inc
xchg
adc
dec
jecxz
ds
js
dec
aam
dec
rolb
sub
cmp
and
cmp
and
popa
push
sbb
fxch
bnd
sbb
jecxz
mov
mov
movaps
adc
cld
mov
sub
lods
cmpsb
outsb
in
ficomps
xor
mov
int
adc
pop
xor
pop
pop
push
fsubrs
outsl
adc
xor
fsubrs
pcmpeqb
lock
cmp
daa
stos
test
ss
repz
push
xlat
nop
sti
adc
add
or
sahf
ja
cmp
ljmp
dec
xchg
inc
push
arpl
imul
stos
or
mov
clc
stos
stc
pop
aas
pop
jne
jne
jg
push
adc
mov
adc
jno
adc
lret
dec
test
incb
cmp
test
dec
fbstp
shrl
in
lret
inc
jb
cmp
sti
cmp
mov
aaa
loopne
fildll
ljmp
inc
cmpb
scas
loop
lds
and
and
pop
jb
push
mov
out
dec
clc
stc
xchg
frstor
mov
in
stos
pop
fdivrs
popa
lods
cmc
bound
lock
sti
push
dec
sub
shll
fisttps
pop
push
mov
lcall
and
movl
mov
or
shr
aaa
add
clc
push
sbb
and
push
scas
sbb
push
div
call
negl
pop
jnp
popf
push
lret
aam
jmp
int3
int3
sub
push
fwait
in
mov
xchg
xor
sbb
imull
sbb
add
ljmp
push
lcall
iret
fdivr
dec
mov
push
pusha
call
imul
test
insl
loopne
out
cmp
leave
push
scas
xchg
fs
adc
fildll
mov
and
push
out
inc
nop
pop
xor
sbb
es
inc
call
faddp
mov
test
test
mov
adc
jmp
fildl
or
jecxz
aam
nop
std
adc
aam
ja
cmp
xor
jno
lea
dec
fistpll
out
jle
pop
outsb
into
mov
popa
cmp
hlt
pop
in
mov
stos
mov
fildll
xlat
jbe
movsb
xchg
or
mov
mov
mov
aad
xlat
inc
lods
leave
mov
inc
aad
pop
mov
cmp
notb
imul
cwtl
scas
int3
mov
dec
add
push
ss
inc
dec
lcall
or
or
push
inc
popa
int
adc
adc
mov
inc
iret
mov
jecxz
inc
nop
mov
mov
mov
std
decl
cmp
mov
xor
pop
addb
es
scas
jno
xchg
das
jo
push
pushl
dec
aas
push
push
test
aam
mov
sub
or
mov
jge
mov
sbb
mov
cmc
call
or
mov
sub
mov
pop
and
iret
adc
jg
imull
mov
mov
adc
inc
and
sbb
inc
lea
adc
add
sahf
cltd
mov
test
push
xchg
decb
cmpsl
mov
add
stos
popa
mulb
pop
sbb
mulb
pushf
arpl
cmp
stc
test
or
incb
dec
or
or
insl
mov
jle
inc
out
and
and
neg
mov
and
adc
sti
cmc
mov
testl
cmovs
push
adcl
pop
cltd
pushf
sbb
stc
sub
pop
jg
test
in
jbe
je
int3
inc
adc
fcmove
xchg
sub
loop
pop
push
dec
cli
or
xor
sub
fsubs
mov
mov
into
adc
xchg
cmp
fs
nop
lods
pop
pop
xchg
sub
movsb
pushf
jp
mov
inc
int3
insb
sub
js
dec
je
xor
xor
or
lahf
push
neg
fwait
mov
je
xchg
cmp
dec
push
sub
mov
sub
jne
or
adc
mov
adc
cmpsl
jo
rcrb
shl
sbb
mov
loope
mov
push
insl
dec
sub
into
aas
jmp
add
in
mov
mulb
out
call
mov
fisttps
sbb
je
lahf
xchg
dec
and
mov
adc
push
test
int3
sbb
into
dec
enter
imul
mov
js
stos
inc
mov
jecxz
sub
cmp
je
fstp
xor
or
stc
inc
jmp
loopne
mov
leave
test
adc
arpl
adc
mov
cs
dec
sbb
lods
xor
cmp
dec
push
mov
mov
rorb
loopne
cltd
mov
xor
out
pop
xor
rcll
xor
jle
lods
sbb
shl
into
cmc
lahf
dec
mov
loop
push
mov
inc
mov
sub
xorl
repnz
sbb
adc
cmp
in
out
push
dec
mov
std
xchg
cmc
cmp
ret
cmpsl
stc
jg
and
adc
insl
pop
cmp
add
xor
add
orl
cmpsb
xchg
icebp
rcrl
lret
dec
rcr
into
push
xlat
cmp
mov
sahf
test
aad
daa
dec
dec
xchg
xchg
push
or
mov
popa
aam
mul
popl
push
cli
xor
xlat
push
decl
mov
adc
loop
push
push
push
daa
sub
sbb
test
jbe
sub
sbb
mov
std
loope
mov
push
pop
xchg
and
xchg
dec
push
jns
jae
outsb
cs
and
push
sub
push
mov
mov
sub
dec
hlt
pushw
cli
mov
xor
cmp
testb
or
xchg
jecxz
push
imul
ja
hlt
aad
notl
shl
mov
lock
sahf
pushf
sub
pop
lock
mov
lods
cmp
lahf
cmp
hlt
enter
push
push
fdivs
jns
cmpsl
lidtl
xchg
pop
inc
or
iret
adcl
daa
mov
ljmp
sub
xchg
lds
jl
add
add
int3
add
push
ljmp
fwait
adc
lds
dec
pop
lea
mov
in
mov
cli
pop
mov
xchg
xor
cmp
pop
fdivrl
or
outsl
mov
mov
cmp
jo
nop
xor
pop
sbb
add
add
test
out
mov
shl
loopne
out
adc
add
das
pop
and
mov
mov
cmp
pop
sub
mov
repnz
or
fistpll
cld
mov
mov
rcll
inc
cltd
xchg
out
fs
mov
ds
mov
pop
dec
xor
scas
push
cmp
stos
inc
inc
imul
push
out
and
mov
sub
in
cmp
mov
jbe
add
xor
dec
xchg
fwait
addr16
xor
int
scas
push
test
jno
xchg
out
mov
mov
mov
out
jmp
cmp
aad
jb
or
add
add
push
mov
lock
int3
inc
xor
pop
addl
jbe
adc
aaa
scas
cmp
pop
xchg
lea
xchg
xorl
sub
jns
inc
andl
xchg
fst
cmpsl
sti
lock
mov
ret
cmp
jg
fwait
in
jmp
mov
in
hlt
dec
jmp
pop
rcrl
outsl
ja
in
xchg
shl
jp
fstpt
data16
or
mov
inc
push
mov
movsb
jo
adc
test
loopne
mov
sub
push
icebp
xchg
loopne
movsl
add
mov
roll
adc
lds
add
pusha
or
dec
stc
add
sbb
mov
and
shr
cmpsl
push
in
adc
cmpsl
push
test
inc
jo
and
jne
mov
jns
or
jg
add
and
cmp
mul
dec
mov
adc
push
add
orb
insb
pop
pusha
inc
test
mov
jle
lea
inc
movsl
imul
movsl
dec
and
mov
out
jmp
adc
sti
add
dec
push
and
leave
push
into
dec
inc
sbb
js
xor
push
mov
test
sarb
mov
andl
fildll
pop
pushf
and
or
movsb
nop
fs
or
iret
and
jl
dec
les
repnz
sahf
xor
ja
jge
mov
mov
arpl
movsl
cmp
idivb
lahf
cwtl
subl
sbb
push
xlat
sbb
test
xor
inc
push
push
mov
push
push
stos
je
add
jge
sahf
gs
sub
fwait
jl
or
lods
mov
pop
push
mov
or
dec
add
mov
jl
ds
arpl
rclb
cwtl
dec
aas
movsb
scas
push
fs
jns
mov
loop
mov
mov
ret
jb
dec
xor
xchg
mov
cmovnp
pop
fnsave
filds
bswap
mov
mov
addl
scas
mov
addr16
xchg
mov
shrd
push
sub
inc
push
sub
fdivrs
mov
jmp
test
pop
or
lods
popf
cmp
push
cld
sub
notb
push
pop
xchg
sub
std
or
mov
outsb
inc
adc
xor
inc
inc
sbb
add
insl
pop
jmp
sub
out
into
movsl
rcrl
xorl
cmp
xchg
mov
inc
xchg
inc
mov
jno
out
dec
pop
jl
flds
mov
pshufw
addr16
jle
adc
cmp
stos
mov
mov
aaa
cmp
jl
sbb
sub
popa
sub
sub
stos
sbb
push
ficoms
scas
sbb
dec
bound
test
xchg
pop
add
mov
icebp
repz
cmp
push
xchg
lods
mov
std
rcll
and
push
sbb
push
leave
call
push
out
shlb
aam
pushf
lock
insl
ljmp
imul
and
insb
mov
fwait
mov
cmpb
cmp
daa
inc
mov
jne
sbb
push
mov
sbbb
shlb
test
sbb
clc
adc
fdivrl
setb
mov
dec
pop
fistpll
out
push
dec
mov
mov
add
mov
test
mov
loope
jnp
das
pop
out
push
jmp
inc
mov
adc
bound
xchg
push
fildll
scas
cltd
lret
pop
sub
addr16
loop
mov
xor
shll
mov
loope
lcall
shll
mov
dec
lcall
aaa
xchg
pop
sub
inc
dec
jl
xor
or
cwtl
add
add
mov
ret
mov
nop
arpl
xor
popa
hlt
or
jl
xorb
ret
jo
iret
pop
mov
add
xchg
fnstsw
jb
dec
vxorps
cmpsl
jae
insb
cmpsl
add
mov
mov
add
push
xor
ds
ja
mov
int
in
cmp
lahf
mov
sbb
push
adc
xchg
xchg
add
fs
lea
push
ss
or
lcall
decl
loope
pop
int
out
je
popa
fstps
mov
pop
xchg
insb
or
sbb
lea
jp
mov
out
clc
xchg
cmp
insb
or
sarl
sbb
in
xchg
mov
rorb
adc
mov
mov
inc
shll
pop
add
xor
imul
or
mov
jnp
sbb
pop
xchg
andb
or
dec
add
ja
pop
xor
ds
stos
mov
negb
out
jmp
mov
add
add
aas
repnz
and
pop
jns
mov
les
xchg
mov
sarb
pop
mov
lea
xorl
mov
out
dec
add
xchg
sbb
addr16
les
jo
xor
or
fildll
sub
mov
imul
bound
dec
add
cld
adc
movsb
repnz
pop
dec
cmpsb
scas
sub
and
es
lods
ror
std
xor
jmp
out
lock
imul
pop
sbb
jg
inc
mov
mov
pop
popf
mov
insl
jne
out
fisttpll
or
mov
pop
pop
fs
test
push
movsb
push
lahf
sti
ds
sahf
push
sub
add
xor
mov
adc
push
sti
xor
fiadds
clc
push
out
xchg
pop
mov
ja
inc
sbb
inc
add
outsb
or
test
mov
push
cld
into
hlt
fsub
nop
sub
js
imul
inc
mov
lret
clc
lret
xor
xchg
in
ficoms
dec
or
mov
and
mov
dec
xor
pop
or
sub
xchg
pop
psubd
xchg
xchg
mov
cwtl
rcll
pop
inc
inc
mov
aas
loop
nop
lret
mov
hlt
addr16
sub
lea
xrelease
push
dec
jmp
cld
add
insb
adc
std
movsl
stc
js
inc
repz
adc
pop
xlat
cmp
push
lods
enter
lret
testl
jno
sbb
pop
jmp
push
cli
inc
lahf
sbb
xchg
mov
sbb
loopne
add
jno
cli
test
dec
jle
add
mov
xchg
call
int3
or
sub
aas
and
js
testb
adc
jns
sub
outsl
js
cmp
jge
daa
mov
push
mov
push
jl
shll
and
pushl
stos
mov
fnsave
cmp
mov
clc
ja
adc
aam
nop
sbb
fisubrl
lods
popa
les
fcomp
ds
movsb
push
imul
or
stc
dec
sti
add
in
insb
call
out
loopne
inc
sub
repz
push
cwtl
popa
and
or
and
xor
fld
cmp
int
xchg
in
dec
subb
ds
or
and
pop
mov
leave
adc
jp
aas
xor
insb
movsl
jecxz
and
jne
xchg
xchg
push
pop
adcb
cld
inc
mov
imul
cltd
ret
mov
cmpl
ja
repz
pop
arpl
cmpsb
jne
cmpsb
inc
jp
test
pop
mov
adc
sbb
and
push
and
push
jb
add
cltd
enter
out
lcall
mov
sbb
bound
dec
jg
xor
insb
shl
fs
repnz
outsb
in
jecxz
js
and
imul
adc
cmp
mov
jbe
test
insl
daa
jb
ret
pop
inc
adc
movsl
xchg
dec
xchg
mov
xchg
dec
pop
popa
cmp
test
leave
testb
lods
sub
mov
mov
repnz
cli
lods
sarb
je
out
jae
sbb
call
sbb
lea
adc
out
mull
xchg
and
in
pop
inc
ret
jnp
add
adc
fwait
negl
sbbl
xchg
lahf
push
jl
or
cld
and
popf
fs
addr16
and
mov
xchg
push
dec
jns
enter
aaa
jns
sbb
or
jbe
les
and
mov
out
loopne
rcr
inc
clc
inc
inc
xlat
lret
cld
sub
aam
and
add
loop
cmp
dec
cmpsb
lds
scas
pop
addr16
sbb
hlt
jns
mov
repz
jb
ja
sub
jge
dec
dec
repz
mov
mov
cmpsb
fnstenv
mov
dec
xor
and
jno
rcll
in
cmp
gs
aad
insb
movsb
loop
lahf
xchg
push
push
cmp
xchg
out
mov
cmp
jg
mov
popf
mov
in
aad
repz
lods
or
call
adc
aad
nop
loopne
jmp
loopne
imul
movsl
out
push
and
dec
int
lret
sarb
xor
insb
xor
adc
dec
lret
mov
ret
pop
cs
clc
xchg
mov
push
push
push
sbb
lods
cmp
add
loop
int
cmp
pop
push
push
sub
xor
out
jne
clc
cmpsl
lods
mov
jmp
xchg
scas
xchg
jo
pop
cmp
cltd
xchg
jb
mov
xlat
jp
and
add
mov
test
xchg
sti
or
and
mov
adc
sbb
enter
outsb
xor
repz
mov
push
das
dec
shr
cmc
mov
xor
outsl
push
test
aam
cmpsb
jnp
adcb
inc
ficoms
int3
jmp
in
pop
sub
into
ffreep
cmp
cmp
mov
mov
jmp
or
push
js
int
or
sbb
push
dec
ret
icebp
stos
xor
dec
movsb
inc
fisttps
mov
mov
add
dec
scas
cmp
aam
pop
xchg
dec
dec
adc
push
mov
call
sbb
fwait
es
jno
mov
sarl
idivl
fisubs
mov
mov
mov
scas
out
or
ret
fnstsw
and
push
jns
fs
cmp
push
mov
mov
xchg
cmp
pop
lea
add
in
sti
mov
push
syscall
jo
les
fnstenv
incl
movsl
xchg
lret
int
loopne
out
insl
adc
or
pop
fsubrs
mov
out
mov
cmpsl
jp
jo
adcl
rol
inc
mov
jmp
inc
je
add
mov
in
out
cmp
mov
mov
fdivr
pop
mov
stos
in
aad
push
jmp
dec
push
insl
push
lcall
cmpsl
mov
push
xchg
lods
mov
cmp
mov
outsl
push
mov
xlat
lods
push
mov
imul
jg
and
test
mov
mov
stc
mov
lcall
jmp
jge
lahf
push
jnp
imul
in
fiaddl
push
push
inc
fsubrl
popf
cmpsb
mov
mov
lods
dec
dec
and
daa
push
jno
mov
into
faddl
mov
lods
jns
mov
js
aas
pop
pop
and
mov
movsl
loope
pop
dec
fidivl
repnz
inc
jle
jbe
popf
xchg
sub
sbb
xchg
arpl
sbb
out
aad
mov
lods
loopne
repnz
dec
lcall
in
sbb
cmp
xor
sub
mov
inc
dec
movb
js
or
rclb
mov
repz
iret
sbb
shlb
cli
iret
lret
xlat
xchg
xchg
pop
test
push
mov
insl
mov
or
or
fdivs
inc
fs
rcll
jge
cmp
notb
cwtl
outsl
inc
sbb
adc
jnp
and
jle
movsb
ja
and
stos
roll
xor
jns
ja
sahf
xor
fndisi(8087
mov
dec
mov
dec
test
js
out
aam
daa
cltd
cld
shrb
xchg
in
mov
push
add
jg
lcall
add
jg
mov
fdivl
jg
xchg
push
inc
ret
cmp
or
push
imul
and
insb
push
cmp
xchg
mov
stos
push
and
scas
dec
pop
lcall
outsb
and
dec
ljmp
dec
lcall
add
bound
push
sub
hlt
sub
mov
nop
shr
stc
andl
das
aaa
ss
inc
sub
sub
popa
xchg
dec
daa
push
fst
insl
jge
lret
mov
add
aad
popa
neg
push
and
scas
adc
cmp
pop
cmp
and
scas
adc
scas
ret
std
test
test
jmp
mov
jl
rsqrtps
mov
movsl
loopne
insl
pop
xchg
repz
shl
mov
iret
xlat
outsl
int
popf
test
sahf
cmpsb
pop
lods
jg
add
push
push
pop
test
loopne
xchg
das
lea
movsb
dec
inc
mov
cmp
leave
xchg
test
and
mov
jle
inc
xor
shlb
pop
push
imul
cmpsb
inc
push
dec
xor
push
outsb
jp
cmp
test
jle
jb
addr16
lcall
imul
das
imul
xor
inc
dec
movsb
aad
nop
insb
jle
rcl
repnz
mov
and
mul
xor
inc
xor
aad
cld
lock
aad
mov
shrl
sahf
insb
incb
add
xorl
lret
outsb
sahf
ret
insb
sub
push
mov
jge
push
inc
xor
fcmovne
mov
nop
or
xlat
adc
fs
in
pop
push
add
in
lds
cmp
in
cmp
ss
inc
xchg
or
aaa
jbe
push
ret
out
test
push
xor
jp
int3
loope
mov
mov
mov
mov
and
out
jmp
xchg
mov
ret
rcll
das
lcall
or
fdivrp
rcrb
mov
addr16
loope
repz
test
adc
xchg
hlt
in
sbb
bound
jns
fisubrl
js
xchg
pop
test
inc
scas
js
xor
daa
sub
mov
sarl
icebp
add
mov
mov
mov
popa
sub
inc
cltd
jge
mov
negl
xchg
lcall
cmp
hlt
adc
add
insb
xor
out
and
lds
fldenv
loope
xor
test
in
aad
mov
mov
lahf
sbb
jecxz
inc
pop
hlt
sub
fstpt
and
iret
adc
pop
shl
mov
push
fcom
mov
mov
hlt
lret
or
clc
fmul
xor
pop
push
lret
xchg
fcomi
mov
in
lret
sub
sub
rcrl
mov
cs
ficomps
mov
js
push
and
dec
movsb
cmp
add
sbb
xlat
jge
loope
enter
fisttps
mov
and
shll
lods
xor
add
adcl
fidivrs
adc
push
cs
jge
mov
orb
roll
mov
clc
inc
xlat
or
icebp
add
cmp
aaa
rorb
pop
jb
clc
push
add
aam
pop
mov
lods
lods
sahf
xchg
test
into
es
in
mov
int3
sub
push
sub
mov
test
adc
mov
iret
mov
gs
cmp
mov
out
fldlg2
out
mov
mov
rclb
xchg
adc
sub
dec
push
adc
push
cmp
sub
pop
mull
sub
insl
fnstcw
pop
dec
popa
insl
in
mov
push
dec
test
xor
xchg
sbb
pusha
inc
shll
aam
dec
and
std
xchg
add
mov
sub
mov
fwait
nop
add
xor
loope
mov
pop
push
imul
roll
push
cmp
mov
sbb
daa
fildl
dec
jno
xchg
mov
sti
sbb
stos
sti
aad
lahf
stc
mov
pop
push
sub
or
jecxz
push
fildll
xchg
push
mov
fdivl
ret
cmp
sub
pop
popf
rorl
inc
sbb
ret
rcr
loopne
outsl
fwait
jne
fcmovu
out
and
sbb
cmp
fwait
xchg
mov
mov
fs
adc
daa
stc
add
cltd
dec
in
jbe
sub
jnp
repz
je
test
or
mov
stos
ret
sub
test
cltd
or
stc
adc
fimuls
loopne
or
jb
dec
js
mov
jmp
cmp
sub
sub
xlat
ja
lea
xor
adc
nop
jmp
push
adc
sub
adc
push
sbb
into
out
pop
gs
jle
xor
xchg
mov
add
mov
push
dec
scas
psllw
jl
je
pop
es
pop
cmp
fwait
nop
xchg
insl
add
push
in
ds
icebp
xchg
pop
aam
mov
sbb
ret
or
out
hlt
push
dec
arpl
push
ret
addl
ftst
ss
ljmp
inc
xchg
inc
jmp
fidivs
mov
or
inc
jne
adc
daa
fildll
repnz
pushf
sub
mov
cld
inc
out
jne
out
mov
mov
mov
inc
cmp
pop
jg
jp
adc
jo
inc
xchg
mov
cmp
loopne
addr16
fstpt
push
push
push
in
inc
dec
mov
pop
int3
xchg
sub
mov
rorl
bound
xor
pusha
pop
gs
add
inc
dec
dec
scas
pushf
xor
aad
fists
aaa
cmpb
jle
and
pop
and
insb
add
jbe
cmp
jb
pushf
jg
and
jae
dec
pop
sbb
jmp
ja
jmp
es
shrl
movsb
xor
rclb
push
das
clc
push
jg
mov
cs
div
mov
or
mov
je
sbb
rcrl
cs
addr16
std
xor
xchg
gs
push
test
lods
arpl
subb
add
arpl
icebp
jecxz
movsb
ss
movsl
jns
push
dec
icebp
aas
lock
sub
faddl
xchg
push
imul
gs
sbb
pop
add
lds
jno
mov
fwait
sahf
mov
mov
push
mov
shlb
jecxz
insl
add
aas
push
pop
fisubrl
mov
test
cmp
aad
sub
mov
pop
movb
fwait
pop
push
daa
cmp
and
in
or
popa
imul
xchg
xchg
sbb
outsl
cmpsb
pop
rorb
xor
sbb
andb
mov
or
and
cld
cli
ret
loop,pn
arpl
andl
inc
in
push
sbb
mov
mov
mov
shlb
mov
mov
cmc
mov
adc
xor
mov
sbb
push
or
ret
sub
les
dec
out
pop
enter
scas
cli
mov
cmp
dec
mov
mov
enter
and
push
sbb
pop
hlt
cmc
test
cli
loopne
xor
popf
leave
rcl
hlt
pop
mov
iret
ljmp
mov
je
xchg
cmc
mov
sbb
or
insl
xchg
dec
xchg
packsswb
popf
adc
int
pusha
neg
push
mov
out
mov
adc
lret
shl
fldcw
dec
out
aaa
int3
mov
fdivrl
inc
add
test
lds
shlb
xor
xlat
mov
jl
sub
adc
mov
adc
jb
push
add
adc
mov
add
in
popa
dec
add
mov
sbb
fcomp
cld
loope
stos
outsb
out
or
aas
stos
cmp
insl
pop
mulb
add
aaa
out
push
add
adc
pop
lret
popa
aam
movl
insl
add
push
push
sbb
push
cmp
xchg
cmc
inc
and
pop
mov
sub
jae
popa
les
cli
pop
or
push
enter
lcall
cmp
popf
call
sbb
sub
mov
popl
insb
stos
xchg
shrl
add
in
dec
test
daa
std
fs
lret
mov
lcall
xor
lods
loopne
test
test
pop
daa
cmp
xor
out
dec
cmpsl
fdivs
out
fs
pop
mov
jbe
out
shl
pop
icebp
scas
insl
loop
mov
aad
rorl
fs
mov
test
sub
sbb
mov
scas
sbb
sub
jo
mov
aam
outsl
dec
adc
mov
dec
ret
sub
inc
mov
mov
std
mov
stos
or
addr16
xor
jbe
shl
mov
loope
jg
fs
jb
fstps
rol
mov
fnstenv
xor
fcmovnb
and
lret
ret
jg
loope
std
mov
lock
xchg
fnstenv
push
push
inc
mov
pop
ljmp
pop
pop
ja
jns
rclb
je
push
xchg
mov
loope
adc
in
mov
push
test
ljmp
int
jg
pop
inc
dec
cmpsb
dec
and
out
or
jmp
sbb
jb
jb
adc
pop
xor
pop
test
iret
push
sbb
out
dec
pop
mov
enter
out
push
mov
or
mov
dec
push
loope
aas
mov
in
push
loop
dec
jbe
add
fiaddl
jecxz
orl
in
sbb
std
inc
int
dec
shll
jae
pop
push
js
jecxz
leave
fistpll
and
lcall
pop
push
clc
mov
seta
push
jns
dec
ret
aaa
mov
inc
dec
addr16
mov
mov
push
mov
jae
xor
mov
adc
sbb
bound
and
repz
loopne
mov
jmp
xchg
dec
popf
dec
fsubl
jecxz
aaa
outsb
and
jmp
and
mov
mov
dec
dec
divl
dec
shll
cmpsb
mov
xor
sub
inc
inc
fisttpll
xchg
inc
jge
into
outsl
ffreep
loope
push
mov
jle
leave
cmpl
or
add
sbb
loope
scas
mov
mov
xchg
ficomps
scas
adc
outsl
rol
cmp
outsb
and
inc
lds
mov
add
scas
lret
fwait
xor
lcall
jl
jns
pop
and
in
js
gs
idivb
test
mov
push
call
icebp
and
push
add
cli
push
or
pop
dec
mov
data16
add
loop
adc
adc
sub
pop
nop
mov
insl
rcrl
push
pop
pop
sub
sahf
xchg
xor
adcb
or
mov
add
mov
push
mov
cld
cmp
xor
repz
mov
cmpsb
pop
adc
jnp
rorl
push
cmp
insl
aas
jp
sub
addb
mov
divl
loop
inc
sub
mov
adc
and
arpl
shlb
lock
adc
xor
pop
popf
jg
ds
pushf
push
add
fstpt
mov
pop
pop
pop
ja
xor
jle
push
aas
outsb
stos
mov
andl
movsl
and
cwtl
adc
pop
es
fstl
jbe,pt
jg
fidivrs
outsb
inc
adc
pop
inc
jae
cmp
cmp
mov
enter
leave
jecxz
xor
inc
aad
or
inc
dec
push
sbb
ret
or
imul
dec
push
cld
enter
sbb
jmp
lds
movsl
pop
inc
aaa
xchg
ret
in
ret
dec
repnz
sub
fisubs
cmp
inc
pop
dec
call
cmp
lret
push
add
xor
in
cmpb
icebp
fnstenv
out
data16
xchg
out
and
in
or
fwait
lret
inc
inc
mov
sbb
mov
mov
cli
in
sub
mov
rolb
scas
mov
ficomps
int
dec
inc
dec
or
and
incl
pusha
jmp
mov
sti
pop
andl
das
inc
clc
lahf
push
inc
adc
aaa
outsb
iret
or
lret
mov
inc
push
or
jo
dec
clc
mov
pop
xchg
test
jp
insl
aad
sbb
sub
jle
das
add
cwtl
mov
fbstp
fisubrl
rclb
adc
or
int3
or
inc
mov
cmp
add
pop
test
sub
or
xchg
icebp
movsl
pop
cs
test
and
and
mov
lret
dec
inc
sub
fcoml
leave
adc
add
lock
mov
repnz
repz
dec
pop
gs
mov
cs
jp
hlt
cmc
inc
mov
fldl
pop
jnp
push
mov
loopne
push
xor
push
out
es
pop
shrl
scas
test
xchg
in
jle
jbe
push
adc
bound
mov
xchg
movsb
js
mov
dec
fimull
jns
inc
into
gs
arpl
mov
addr16
sub
js
out
sub
and
dec
xchg
daa
xchg
popf
bound
jnp
into
adc
ja
jl
ja
add
and
icebp
inc
sub
leave
fistpl
pop
iret
inc
pop
sbb
mov
ja
dec
mov
push
stc
mov
mov
or
rcll
mov
adc
cltd
xchg
fsubl
repnz
mov
clc
pop
iret
push
jmp
mov
jne
ret
jno
push
iret
in
mov
fsubs
xchg
push
aad
xchg
in
stos
mov
in
and
mov
jnp
push
mov
imul
fists
xor
insb
and
lea
mov
push
cmp
or
incb
mov
orb
cmc
inc
cmpsl
addl
sbb
add
cld
push
inc
cmp
insl
xchg
pop
loopne
ja
adc
mov
push
xlat
add
movsb
sbb
pop
aaa
sbb
fidivl
inc
and
xchg
lea
lods
bound
ret
cmp
insl
fildl
cs
fldl
lods
jbe
mov
jle
clc
dec
jne
repz
ret
mov
sbb
mov
pop
add
sbb
and
aad
sbb
adc
jl
jmp
std
mov
xchg
push
push
push
xchg
lret
adc
lret
and
sbb
enter
push
out
dec
inc
test
jo
fisttpl
in
clc
gs
dec
pop
push
xor
icebp
mov
movsb
mov
push
or
and
jae
adc
sbbl
or
sbb
push
aam
jo
into
adc
jae
in
pop
jge
cmp
sbb
jge
std
lods
jle
mov
cwtl
sti
lds
mov
sbbb
lret
or
jbe
push
mov
sbb
pop
es
shlb
pop
lahf
movsl
mov
inc
dec
lods
insb
xchg
jne
je
inc
mov
sti
aam
or
mov
pop
pmullw
lods
xchg
xchg
jl
mov
stos
hlt
es
xchg
jle
and
movsl
dec
das
in
nop
xchg
in
jge
or
popa
jl
push
outsb
or
push
mov
pop
ret
scas
pop
and
mov
sub
fcmovb
sbb
aad
push
mov
pusha
cmp
dec
dec
bswap
aas
add
movsl
xchg
inc
xor
push
add
mov
or
push
in
es
mov
push
xor
inc
dec
jno
cltd
cwtl
arpl
inc
inc
xchg
inc
mov
call
mov
test
cvtdq2ps
leave
pusha
fsubs
aaa
pop
faddl
adcl
nop
mov
dec
pop
lods
adc
cmp
dec
jmp
dec
push
out
stos
iret
jno
out
dec
adc
add
and
xor
addb
icebp
int
xor
dec
jmp
outsl
dec
icebp
mov
xchg
push
sbb
mov
cmpsb
jmp
into
lods
fcomip
xor
mulb
adc
or
cmp
out
fstpt
test
fwait
or
jno
pop
cli
cmc
xlat
ret
es
clc
jecxz
fldcw
fldt
pop
add
addl
add
xchg
cmpb
mov
or
out
mov
jno
pop
pop
fisttps
imul
mov
ja
daa
call
xlat
xor
popa
cmp
enter
pusha
push
mov
sub
add
pop
ja
sahf
daa
call
sbb
cmp
loop
jo
push
push
or
or
out
mov
cwtl
aad
mov
aaa
push
movsl
mov
sub
pushf
lcall
ss
mov
mov
and
flds
cli
popf
lock
data16
lahf
repz
int3
insb
out
mov
sbb
aas
fistl
mov
jmp
xor
fisubrs
call
sub
and
cmp
les
push
mov
daa
and
xchg
jg
fcmovu
repnz
subb
inc
stos
test
repnz
fs
adc
loop
add
subl
push
mov
pusha
mov
pop
loopne
lods
loope
push
stc
enter
stos
ljmp
test
popf
fdivs
dec
lret
cld
sahf
jnp
fildl
mov
push
mov
mov
ret
xchg
cmp
test
loope
in
js
cmc
xor
sahf
mov
xorl
mov
daa
jmp
fildll
ja
jl
sarl
pop
fucomp
mov
iret
movsl
inc
pop
jmp
dec
mov
stos
and
enter
ljmp
cmp
xor
jae
jbe
fmul
fisttps
jbe
pop
movsb
add
shll
dec
mov
adc
scas
negl
pushf
lods
mov
adc
lret
cli
les
ret
insl
rorb
fists
sbb
xchg
xchg
sbbb
adc
insl
popa
je
jae
xlat
mov
dec
fldt
add
push
cmc
pop
pop
mov
pop
shlb
xor
push
mov
dec
rorl
bound
xchg
mov
mov
out
xchg
iret
cmpsl
sub
inc
mov
xchg
mov
rorl
clc
adc
cmp
mov
movsl
repz
xchg
pop
adc
push
sbb
lods
ret
ljmp
stc
stos
or
jbe
xchg
jge
sbb
iret
repnz
cmp
lcall
mov
jns
ret
push
sub
adc
scas
loope
cmpsb
sahf
jno
xchg
sbb
xor
sbb
or
outsb
jmp
cmp
and
repnz
aas
js
push
cmp
fidivrl
repz
ja
es
mov
imull
lds
mov
mov
aad
inc
hlt
jg
lock
mov
dec
or
pminsw
jns
fistps
in
lret
adc
jmp
dec
cld
pop
inc
sarl
jle
stos
je
int3
jmp
mov
dec
jg
nop
sub
rorb
pop
xchg
movsb
push
jge
cwtl
repnz
lret
jle
movsl
cmc
pop
orb
add
push
test
mov
mov
or
fsubrs
add
fstl
xchg
mov
popa
mov
imul
push
js
mov
outsl
mov
cmpsl
sbb
out
cmp
xchg
and
mov
inc
ret
adc
test
mov
mov
cld
mov
add
add
mov
sub
jbe
mov
cmp
cmp
icebp
out
inc
sbb
push
mov
mov
xchg
sub
adc
repz
pop
shl
adc
mov
in
mov
mov
push
adc
das
mov
jge
xor
iret
fiadds
pushf
xchg
mov
enter
and
and
rcll
call
out
sub
pop
jno
and
rorl
push
fcompl
cmpsl
in
in
and
pop
ret
lods
xorl
and
das
movsb
jno
mov
adc
rcrl
loope
dec
push
cltd
cmpsb
ljmp
mov
mov
xlat
or
dec
push
sti
dec
cmpsl
sahf
nop
or
push
call
ljmp
dec
dec
test
lret
sbb
call
mov
jns
dec
sbb
cmp
hlt
hlt
ds
cmp
xchg
sub
fwait
pop
cmp
mov
stos
xchg
stos
mov
pop
stos
push
aad
dec
and
adc
stc
xor
orl
inc
add
std
sub
mov
push
loope
cmp
scas
loopne
addr16
push
movsl
mov
add
mov
pop
add
stc
ljmp
jae
out
mov
test
jae
mov
mov
lret
xchg
movsl
pop
pop
mov
in
leave
lret
pusha
pop
cmp
cmp
js
lret
and
outsb
inc
lds
aad
mov
popf
pop
fildll
leave
les
aaa
and
pop
mov
int
scas
aaa
jg
xchg
xor
sbb
call
xor
push
idiv
sbb
cld
arpl
pop
repz
int
out
pop
scas
sbb
shll
gs
std
push
shlb
cmp
xchg
nop
mov
test
jnp
hlt
fildl
in
repz
sbb
mov
cld
or
in
rcrl
sub
out
push
add
in
inc
mov
and
xor
arpl
mull
pop
clc
js
pop
adc
bound
inc
imul
jle
fwait
lret
push
int3
jle
jbe
enter
adc
cmp
rorb
jo
mov
je
xor
out
sub
jmp
mov
and
and
cwtl
push
mov
mov
sub
and
lea
cmp
shrb
cmp
cmpsb
sbb
aad
outsl
aaa
ljmp
addl
fistpl
cmp
dec
xor
xchg
mov
or
lret
jns
xor
xor
push
jl
dec
in
in
iret
add
mov
out
mov
add
adc
mov
mov
or
sub
test
mov
movb
push
pop
sbb
inc
out
call
mov
fildl
mov
xor
rolb
sbb
dec
inc
cs
xchg
cmp
out
pop
shll
xor
in
lea
icebp
mov
push
cld
ficompl
daa
aad
mov
push
xor
rorl
sub
andl
mov
movsl
rcr
js
repz
dec
popa
push
mov
pop
jno
subl
sbb
outsl
mov
cmp
rcrb
mov
icebp
jne
sti
push
jns
jb
sti
pop
data16
pop
inc
jo
mov
or
dec
into
cmp
pop
push
clc
adc
fs
fsubr
pop
mov
and
xor
cmp
mov
cmc
mov
mov
dec
sbbb
pop
into
xchg
jge
pop
iret
jno
mov
cmp
mov
jmp
addl
push
imul
and
cmp
daa
jmp
out
scas
inc
leave
imul
loopne
clc
repz
jns
cltd
jno,pn
and
add
les
mov
sbbb
int
push
arpl
or
pop
lods
mov
or
or
push
push
or
dec
outsl
dec
dec
adc
mov
add
fxtract
xchg
mov
sbb
mov
imul
lock
push
mov
dec
xchg
nop
repz
inc
push
ljmp
mov
jge
pop
popa
out
fidivrs
dec
out
xlat
mov
filds
push
fidivs
cwtl
mov
mov
std
ljmp
test
test
aas
push
mov
jmp
stos
mov
ds
shll
and
out
mov
add
inc
push
or
or
sbb
pop
pop
xchg
clc
xchg
sbb
xchg
xor
jo
xlat
lds
aad
rol
add
mov
es
and
and
out
out
dec
xor
enter
popf
adc
and
arpl
sbb
cmc
xchg
inc
ret
inc
in
fwait
dec
mov
daa
sar
jl
andl
les
fstps
gs
sarl
pop
add
mov
and
push
mov
push
jns
pop
mov
lahf
inc
aaa
mov
mov
adc
xor
sbb
aas
call
ja
and
cmpsl
inc
fwait
or
push
jge
stc
push
adc
inc
repz
mov
ds
sub
pop
je
repz
mov
add
stos
out
lock
cld
mov
push
jle
jg
iret
sub
loopne
push
and
test
xor
jb
mov
mov
test
cmpsb
push
in
fwait
out
hlt
push
das
mov
insb
filds
out
jecxz
xor
fstpl
push
mov
test
sbb
les
dec
in
xchg
insb
sbb
clc
stos
insb
jle
mov
xor
dec
fdivs
outsb
lea
leave
mov
sbb
lods
ret
mov
xor
or
adc
adc
xor
or
cmp
inc
rcrl
push
pop
xor
dec
adc
inc
xchg
lret
mov
scas
xlat
jp
in
fs
jle
repnz
lds
xor
push
dec
ss
clc
pop
and
insl
rep
jno
sub
in
outsb
mov
enter
sbb
or
shll
xor
xor
lret
mov
or
test
cmp
sahf
adc
or
add
pop
popf
pop
lret
scas
mov
fldt
xor
loopne
in
adc
sbb
mul
or
xlat
cmp
add
fisubl
or
out
aas
gs
pop
inc
and
adc
inc
cmp
xor
jae
push
cmp
loope
outsl
gs
xor
dec
dec
stos
fwait
or
popf
shll
in
data16
sbb
or
xchg
sahf
sbb
jmp
mov
repnz
cmc
push
sub
add
das
ss
cld
aam
sahf
lods
cmpsl
iret
std
add
les
mov
push
xor
loopne
xor
pop
aaa
adc
add
ror
cmp
xor
mov
mov
insl
jmp
xchg
inc
imull
mov
inc
or
and
sub
mov
fildl
dec
insl
pop
aad
mov
mov
inc
and
ret
xlat
xor
jp
xor
xor
mov
cmp
in
xor
sbb
fstpt
loope
mov
dec
sbb
cmpsb
ret
xor
out
nop
adc
inc
push
stos
mov
cmp
xor
cld
arpl
xor
mov
mov
data16
xchg
cmp
or
jnp
jne
cmpl
or
rep
sbb
int3
push
push
pop
push
out
popa
rcl
xor
sub
gs
aaa
lods
call
push
andb
jg
push
pop
shr
mov
test
dec
xchg
pop
insb
sub
sbb
jne
cltd
xchg
pop
inc
and
pop
sub
stc
dec
arpl
push
push
sbb
stos
cmpsb
fcomp
pop
adc
sbb
add
jg
xor
sbb
loopne
xor
shrb
sbb
jns
pushf
pushf
das
cmp
scas
sbb
repz
rolb
inc
out
clc
mov
cmpsb
rcll
hlt
push
cs
movb
imul
mov
andb
cwtl
mov
out
cld
arpl
negl
test
jle
call
dec
mov
mov
ja
mov
insl
mov
xchg
mov
aam
rorb
xchg
mov
clc
adc
sahf
mov
cld
adc
add
sbb
adc
dec
out
mov
in
clc
inc
aaa
mov
pushf
dec
add
or
fs
ljmp
dec
jbe
pop
je
dec
shr
push
shll
jecxz
dec
or
addb
cmp
mov
shrl
cmp
mov
xlat
mov
jecxz
or
add
mov
sbbl
leave
dec
aas
int3
mov
jae
loop
cmpsb
inc
xlat
jb
shl
and
push
les
and
aaa
sbb
add
mov
fldenv
out
pop
sbb
arpl
mov
stos
pop
xor
mov
sub
fucomp
cmc
mov
addr16
jns
int
xchg
dec
adc
sub
mov
imul
jbe
pop
arpl
leave
sbb
in
pop
js
movsb
aaa
cmp
enter
push
ret
fwait
and
lock
lea
orb
inc
xchg
cmp
fwait
insb
ss
fiadds
dec
in
xor
and
subl
and
aaa
and
mov
sbb
sbb
repnz
adc
mov
insl
cld
mov
adc
cmp
xlat
sar
xchg
fsubs
cli
scas
cmp
cli
inc
test
cmp
sti
push
in
int
jne
adc
add
mov
lcall
push
push
aaa
outsl
inc
mov
lea
rcll
pop
cmp
pop
jl
dec
jbe
cmp
adc
notl
and
xchg
jecxz
int3
mov
add
lahf
xchg
fucomp
sbb
stos
add
mov
inc
dec
inc
int
pusha
push
xchg
and
mov
sub
ljmp
fwait
in
ljmp
orl
shlb
lock
les
push
xor
jb
je
and
mov
sbb
xchg
aaa
loop
sub
mov
jle
scas
aam
iret
mov
pushf
faddp
lea
fs
sti
nop
ljmp
fbld
pop
xchg
shl
lods
aas
xchg
adc
adc
cwtl
pop
out
dec
cwtl
fwait
adcb
mov
mov
fwait
or
sub
and
mov
call
mov
clc
into
or
jo
scas
xchg
inc
out
stos
sbb
ds
jne
mov
mov
stos
test
call
adc
jae
dec
jl
jle
pop
inc
xchg
icebp
mov
addb
ljmp
cmp
inc
frstor
test
add
cltd
sub
mov
inc
and
mov
mov
mov
enter
sarl
xor
lret
mov
sarl
jg
sti
add
ljmp
cmp
xchg
and
mov
mov
pop
mov
lcall
je
pop
shrd
les
icebp
into
xchg
stos
repz
jnp
xor
jp
aam
inc
or
stc
out
aas
xlat
pop
xlat
jmp
arpl
icebp
xor
in
pop
adc
into
fadds
les
push
dec
pop
push
pop
mov
jne
jecxz
stos
mov
xchg
cs
stos
daa
dec
xchg
pop
pop
push
dec
jge
fwait
lods
or
cs
out
sti
push
cltd
mov
loope
cmp
fidivl
inc
jns
mov
xchg
push
sub
lea
jmp
jns
lret
fsts
lret
imul
xchg
rcrb
push
sub
popf
jmp
or
mov
mov
and
push
push
outsl
into
insl
xor
mov
dec
and
es
lods
sub
in
test
adc
dec
les
cmp
repz
fcomps
bound
inc
insb
loop
jne
push
arpl
repz
cmp
idivb
sbb
pop
jmp
mov
das
xchg
fists
fs
call
aaa
mov
rclb
fstl
mov
mov
xor
mov
push
push
sbb
jne
mov
xlat
add
rcll
dec
pop
xchg
lret
mov
rolb
mov
dec
mov
into
out
mov
clc
adc
bound
int
jge
add
adc
es
and
dec
dec
call
mov
xchg
cmc
shll
mov
mov
rolb
in
stos
test
ficompl
stos
mov
jg
mov
pop
outsl
in
adc
mov
inc
movsb
sbb
punpckhdq
je
pop
ret
pop
cmp
dec
sub
mov
sbb
sbb
pop
mov
int3
fs
out
in
hlt
pop
nop
cmp
mov
pop
ret
ss
push
add
sbb
mov
inc
push
enter
xchg
in
rcr
mov
fistpl
xchg
out
nop
jp
lods
das
fnstcw
mov
xchg
mov
cwtl
scas
in
mov
stos
hlt
xor
lds
xchg
inc
jge
pop
mov
mov
jnp
mov
stos
test
xor
cld
sahf
mov
lea
shll
xor
mov
aad
loop
and
lcall
test
cli
testb
jp
xorl
enter
fnsave
cs
dec
add
cwtl
into
mov
ja
fcom
out
cmc
jg
js
je
cmp
iret
dec
pop
mov
jo
mov
adcb
add
sub
dec
xchg
sbb
pusha
xchg
pop
daa
lret
dec
cli
xor
out
inc
fnstcw
jecxz
cmp
pop
jge
xorb
ds
jp
addr16
fwait
ds
or
mov
xchg
inc
xchg
jmp
jecxz
push
je
orl
and
aas
fcmovnb
ret
push
fildll
fldenv
ret
xor
imull
test
fnsave
mov
jns
cmpl
adc
add
pushf
test
mov
cs
xor
arpl
mov
push
jno
fdiv
mov
mov
sub
and
pop
jns
mov
push
push
test
sub
and
ljmp
jns
pusha
push
pop
adc
cmpsl
lods
xchg
inc
mov
popf
jecxz
adc
aaa
movsl
fwait
push
mov
add
mov
in
mov
sbb
jecxz
shlb
lcall
xor
fcompl
sub
sub
in
pop
repnz
fadds
or
loop
jecxz
pop
aas
mov
ret
or
sub
push
adc
out
ror
cmp
negb
xchg
out
pop
pop
jae
ret
dec
imul
cmp
jl
add
outsl
popa
lret
or
xlat
test
cwtl
lcall
mov
jge
popf
out
aad
aam
sub
ja
movsl
pop
cmp
imul
aas
orl
ds
jno
cmpsb
xchg
pusha
xor
pop
fidivs
incl
mov
and
push
push
ret
in
outsb
pusha
cwtl
in
sar
fstpt
dec
xchg
ss
lods
push
jns
in
mov
inc
enter
sbb
or
aad
faddl
repnz
and
xor
mov
mov
lahf
or
mov
dec
sbb
xchg
out
dec
aas
ret
push
add
movsl
sub
in
in
ja
aad
je
test
or
inc
inc
push
and
xor
cmp
and
jle
mov
push
orb
dec
mov
out
jo
push
movsb
dec
sbb
cmp
bound
divl
adc
or
arpl
inc
sahf
push
xchg
insb
arpl
test
das
or
iret
jb
sub
ja
xchg
lcall
xchg
hlt
mov
jl
cmp
loopne
pop
popa
xlat
pop
out
and
insl
aad
mov
sahf
test
arpl
cwtl
aam
xlat
or
xchg
lods
xor
pop
repz
enter
imul
incb
movsl
mov
add
sahf
stc
dec
loop
xor
or
es
cmp
sbb
pop
movl
sbb
ret
adc
test
in
std
xorb
cmpsl
and
btr
mov
das
push
jmp
sub
and
xchg
fmulp
rcr
add
jmp
enter
cmpsb
lret
pop
cmp
or
insb
ficoml
enter
test
and
dec
sub
int3
scas
insl
popa
out
lods
ror
mov
in
mov
subb
cmp
and
push
push
outsl
lods
mov
out
popf
inc
bound
test
lds
repz
test
lahf
or
add
lods
cmp
aam
or
jo
xor
push
int
mov
xchg
mov
aaa
mov
sub
ljmp
jle
pop
mov
movsl
test
add
imul
sbb
es
mov
shrl
mov
popf
loope
cmp
and
mov
into
or
add
cmp
or
xchg
imul
push
jmp
mov
stos
negl
mov
insb
add
daa
adc
mov
lret
js
cli
jmp
xchg
fst
push
pop
fisttpl
imul
mov
jnp
aad
sub
mov
pop
loope
or
loopne
lds
mov
lock
fidivs
mov
dec
pop
and
cmp
pop
fists
jl
or
divb
xor
mov
imul
sub
or
push
lds
decb
jae
sahf
mov
pushf
pop
sbb
pushl
sti
sub
mov
mov
iret
pop
cltd
rclb
push
movsb
inc
xchg
rcrb
and
and
add
ds
imul
cli
cmp
pop
in
dec
adc
or
xor
test
cmc
push
in
push
bound
mov
lret
fisttpll
or
popa
test
popa
sbb
mov
sub
xor
sub
and
loop
dec
pusha
repz
cmc
insb
les
jecxz
clc
cmc
mov
pop
jae
sub
and
xchg
or
cmp
repz
adc
cmp
push
cmp
jne
scas
xchg
sarb
mulb
and
xchg
mov
stc
bound
xchg
test
mov
mov
fistpll
lods
or
shr
cwtl
cwtl
jp
out
popa
mov
mov
cmp
pop
xor
int3
cli
and
repnz
pop
stos
mov
ss
dec
ss
jb
mov
cmpsl
or
movsl
int3
mov
adc
and
sbb
jne
test
push
incl
insb
test
pop
mov
dec
ret
cmp
inc
add
jb
sbb
add
mov
push
pop
daa
pusha
push
dec
push
or
and
std
stos
xor
ret
cmp
or
inc
or
lahf
jns
neg
xor
pop
or
adc
lods
inc
sub
dec
cld
andb
xchg
bound
aaa
lret
jae
mov
cmc
ret
cli
adc
sbb
mov
pop
mov
or
daa
sub
shlb
xor
in
mov
mov
sbb
sub
clc
in
popf
sub
in
jp
out
push
mov
cmpsb
insl
and
bound
jecxz
scas
push
sbbb
outsl
pop
pop
test
popf
in
push
mov
pop
adc
outsl
test
mov
add
call
xchg
adc
shll
mov
data16
add
pop
pop
cmp
dec
xchg
fwait
or
lea
push
iret
xchg
hlt
fmuls
sub
cmp
or
cmc
shrb
jmp
mov
jno
jmp
movsb
xor
addr16
cmp
mov
jle
rorl
orl
or
and
pop
adc
xor
push
repnz
fstpt
mov
pop
adc
stos
jne
mov
sub
jne
mov
xor
ss
mov
add
push
mov
push
cmp
push
cli
and
lret
pop
adc
pop
shl
imul
ficoms
ret
das
ficomps
lret
pop
mov
push
add
addb
sbb
pop
out
cwtl
insb
loop
loopne
mov
cmp
fdivrl
mov
aas
cmp
ja
dec
or
movsb
sub
stc
int
cwtl
test
dec
out
ret
scas
dec
std
push
pop
jp
pop
in
pop
jne
xor
jmp
jle
rcll
je
xor
cmpsl
lret
clc
stos
mov
insb
mov
dec
lcall
push
xchg
cmp
out
push
test
adc
xchg
sub
outsb
cmp
jl
mov
push
xor
cmp
cmpsl
mov
ljmp
dec
dec
in
push
repnz
inc
jecxz
loopne
cmc
bswap
mov
lock
mov
push
pop
addr16
pop
inc
clc
data16
xor
jecxz
jae
test
add
ficoms
push
ficoms
gs
mov
xchg
sti
sbb
xor
enter
les
std
adc
fdivl
cmp
iret
push
pushf
lret
stos
jns
jp
leave
mov
jbe
aaa
pushf
arpl
add
cmp
cld
mov
orl
call
inc
cmp
mov
stc
out
and
sub
insb
push
leave
outsb
inc
add
jns
mov
xor
add
enter
cwtl
in
or
test
lods
lods
or
out
xchg
ljmp
adc
cli
sbb
mov
jb
sete
and
pop
dec
in
mov
adc
js
inc
sti
push
cmp
cmp
mov
imul
jp
jl
xor
sbb
and
cmp
mov
das
xor
cmpsl
pop
adc
repnz
inc
adc
lds
arpl
cli
and
ljmp
arpl
rcrl
lods
fucomip
je
pop
push
imul
jo
or
shrl
les
jb
pop
xchg
push
mov
mov
push
push
mov
pusha
fldenv
jecxz
xchg
pop
mov
shlb
sbb
sub
mov
dec
push
mov
test
jnp
cmp
cmp
push
mov
cltd
test
sub
pop
enter
test
jecxz
mov
dec
mov
lds
lods
ss
sbb
lods
mov
mov
mov
mov
or
xlat
dec
idivb
ljmp
pusha
push
enter
mov
shlb
repnz
xor
cmpb
push
sbb
sub
scas
fstl
jle
sub
fistl
cmp
push
dec
add
pop
cmp
push
jle
add
cmp
ljmp
fisubl
dec
divl
ficoml
lahf
cwtl
lahf
mov
and
mov
ljmp
mov
ret
iret
or
ret
gs
pusha
mov
pop
arpl
pusha
sub
sub
jo
sbb
pop
leave
aas
jbe
jnp
movsb
mov
insl
rcll
pop
icebp
jl
cwtl
mov
loopne
div
lahf
test
sti
gs
shrl
mov
pop
sbb
adc
jp
and
data16
sbb
cmp
cltd
jecxz
js
cmp
dec
inc
test
sbb
repz
mov
pushf
inc
mov
xor
ret
mov
mov
push
js
mov
and
jae
push
mov
cmpsb
iret
dec
sub
mov
ror
mov
loope
test
imul
fs
in
mov
xor
adc
xor
xchg
xor
sbb
shrl
jg
mov
lret
inc
call
mov
mov
sti
rclb
inc
mov
push
mov
aas
xor
xchg
inc
sbb
adcl
ret
adc
es
add
sbb
cmp
movsl
mov
sahf
out
js
fnstenv
test
arpl
dec
and
or
pusha
loope
inc
fisubrs
hlt
jg
dec
mov
loopne
jle
loopne
add
movsb
or
xor
mov
adc
jmp
pop
mov
cmc
jge
xor
out
pop
movsl
push
inc
xchg
fcoml
sbb
mov
mov
and
jge
cmp
cmp
ret
aaa
push
clc
push
mov
push
rorl
jb
adc
scas
rep
push
and
xlat
test
cmp
scas
mov
stos
jne
sti
fsubrs
fcomps
rcll
int3
test
mov
push
mov
add
js
jp
mov
push
mov
jecxz
inc
call
or
loope
jo
or
cmp
xchg
cmp
dec
lret
lds
push
mov
sub
xchg
insb
in
add
pushf
pop
cltd
ficompl
mov
and
sub
sub
daa
jno
xchg
lcall
cwtl
ss
pop
mov
pop
push
inc
cmpsb
adc
in
sbb
jne,pt
push
scas
icebp
das
mov
xchg
dec
pop
test
cmpsl
mov
int
cmp
imul
bound
jg
xor
and
mov
push
mov
aam
std
jb
out
shl
xchg
or
testl
mov
outsb
adc
stos
pop
popf
cld
xchg
movsl
pop
test
rcrb
mov
lcall
xor
cs
into
sub
inc
pop
filds
jbe
xchg
push
iret
repz
movsb
inc
mov
cmp
cmp
jnp
cmpsl
inc
cmp
int
fs
jg
std
fdivrs
call
das
and
mov
loope
fbld
jae
dec
test
or
xor
jae
fwait
push
push
inc
outsb
bound
imul
push
inc
test
out
mov
mov
shll
mov
in
int
xor
sbb
adcl
in
sbb
sahf
bsf
mov
jmp
jb
jne
sub
adc
inc
mov
mov
js
loop
ja
leave
and
push
lret
jge
add
adc
popa
loope
jl
ss
mov
fisubrs
xorb
mov
fsubs
inc
dec
rorb
add
adc
out
sbb
cmc
push
and
into
dec
sahf
dec
lret
bound
or
sub
into
xchg
movsb
flds
pop
fidivrs
movb
ds
push
xchg
pop
loope
roll
dec
movsb
cmp
push
pop
ss
pop
clc
ret
jbe
push
or
aas
xchg
out
fs
sub
into
mov
fmul
add
shll
push
add
loope
repnz
fdivl
insl
or
repz
cmp
jb
stos
sbb
clc
icebp
repnz
lcall
push
mov
mov
loope
and
add
lods
and
dec
mov
dec
dec
mov
cmp
out
outsl
out
repz
mov
clc
loop,pt
mov
fiaddl
inc
mov
lret
mov
push
pop
cmp
aad
mov
add
jge
mul
cmc
push
orb
sbb
aaa
sahf
imul
int
xor
fldl
adc
add
lods
fmul
push
movsl
sahf
ret
out
testl
std
arpl
dec
jecxz
adc
call
ljmp
loope
mov
adc
sub
hlt
dec
add
mov
sbb
sbb
pop
hlt
fstpl
das
adc
and
push
jb
outsb
push
aam
gs
les
repz
mov
adcb
pusha
out
jl
out
xor
mov
cmpsb
add
cli
mov
mov
xorb
je
mov
mov
add
cld
into
mov
push
scas
pop
jb
inc
pusha
sbb
ss
xor
xor
mov
movsl
mov
and
adc
inc
push
jp
mov
push
mov
inc
fimuls
inc
cmp
daa
add
les
loopne
mov
insl
inc
xor
mov
stos
xlat
or
sub
leave
adc
fisttpl
jmp
bound
cmp
xor
iretw
jns
cmp
and
sbb
mov
aaa
addr16
jle
and
push
stos
rorl
xchg
lods
push
cmp
mov
mov
and
and
add
inc
popf
dec
inc
test
ss
int
stc
aam
cmpsl
xor
jg
insl
or
insb
rorb
inc
popa
or
into
and
or
pop
leave
xor
pop
movsl
cmp
jmp
push
push
mov
mov
negl
xor
lock
cmp
mov
sbb
scas
pushf
pop
and
xchg
int
and
mov
xchg
pop
or
jmp
iret
pop
popl
sar
inc
int3
fistps
in
fdivrs
jl
loopne
and
gs
jge
cld
xchg
dec
push
lret
call
dec
aad
cmp
jb
xlat
in
mov
cmp
pop
fmull
bound
ret
pop
test
xor
dec
roll
add
fcomi
jmp
les
dec
sub
movsb
mov
mov
cmp
sbb
add
sahf
and
jne
mov
je
imul
data16
mov
push
test
mov
jp
add
xchg
popa
mov
cmp
scas
dec
inc
push
negl
xchg
iret
dec
mov
testl
test
pop
out
test
add
or
and
fs
prefetch
xor
push
scas
xlat
jge
int
jbe
les
aaa
cmp
mov
cmpsl
aaa
int3
sbb
cltd
xchg
dec
call
ret
and
add
jo
loope
cmp
out
pop
dec
mov
mov
mov
push
test
jecxz
lods
xor
xchg
ss
jge
xor
pop
dec
in
sbb
cmp
pop
stos
int
jg
lea
jl
dec
jno
cmp
mov
cmovne
movsl
fisubs
mov
fs
out
fimuls
push
inc
push
scas
out
addl
xor
pop
jno
js
jns
jae
and
mov
js
or
mov
jo
adc
and
movsb
cmpsb
ret
popa
jmp
test
add
mov
push
cmp
test
or
in
test
stos
lahf
in
push
xor
js
mov
adc
and
add
call
out
das
or
insl
ret
mov
fstp
push
cld
icebp
xchg
test
insb
cmc
pop
dec
lock
xchg
cli
pop
movsb
movsl
and
push
aas
outsb
test
sub
add
sarl
sbb
out
aas
and
pop
ljmp
push
mov
sub
sub
jg
jno
inc
pop
xor
mov
das
je
inc
jnp
mov
mov
arpl
hlt
mov
inc
leave
push
scas
adc
xchg
or
test
mov
add
lods
scas
stos
xchg
lock
je
and
xchg
jp
xchg
pop
repz
ret
stos
dec
lock
dec
xor
cmp
or
scas
roll
sub
sbb
add
push
popf
add
int
out
leave
sbb
int3
sub
mov
fiadds
pusha
aad
fadds
shrl
movsl
xor
cs
mov
sbb
fsubrl
pop
fdivrl
rdpmc
xchg
in
rorl
xchg
jns,pt
mov
into
pop
sub
push
xchg
mov
testb
int
mov
or
push
shl
adc
rcrb
push
sbbl
inc
adc
dec
popa
adc
cmc
mov
mov
test
add
or
loop
sub
push
popf
dec
jnp
enter
mov
or
sub
jne
stos
jne
repnz
or
int
enter
daa
xchg
rcr
loop
dec
call
int3
mov
shll
addb
shl
xlat
ss
jns
mov
fcmovb
fistpl
cmp
repnz
or
js
and
shl
cmp
jmp
mov
or
jnp
inc
jbe
add
jns
fidivrl
cmc
daa
dec
ljmp
sbb
loop
pop
sbb
or
movsl
idiv
inc
dec
push
adc
das
lahf
add
cmp
lcall
pop
movsl
add
fs
sub
and
in
add
jle
push
pop
ljmp
jns
lret
lods
addl
daa
pop
mov
ss
js
in
data16
add
aam
andb
xchg
dec
and
js
fsubrs
mov
sub
add
push
xor
inc
les
mov
jg
mov
aaa
push
into
out
adc
loope
xchg
pop
les
ljmp
cltd
movsb
popf
lahf
popa
jo
repz
ret
sub
xor
mov
imul
fcmove
enter
pop
gs
adc
mov
out
dec
sub
cmpsb
decb
adc
daa
mov
lret
adc
pop
daa
dec
rclb
cld
xor
je
loope
xor
xchg
rorb
sbb
jmp
testl
rcll
in
insb
mov
jo
mov
xchg
fstl
sbb
jle
addr16
in
sbb
push
cmp
orb
cmp
add
nop
jns
push
mov
xor
test
mov
pop
out
ret
and
jge
xchg
push
loop
ljmp
mov
sub
divb
push
inc
verr
dec
loop
xlat
cmp
mov
and
fsubrl
push
dec
xor
pop
sbb
mov
pushf
stos
adcb
out
mov
jmp
in
sbb
mov
imul
xor
add
dec
adc
xlat
test
mov
dec
xchg
popf
lock
ja
pushf
mov
mov
rclb
out
xchg
lahf
test
pop
pop
ret
repz
scas
fdivrl
lds
lcall
mov
mov
dec
nop
jmp
imul
addr16
scas
mulb
dec
jmp
aad
clc
enter
imull
pop
lea
push
jmp
xchg
stc
adc
mov
inc
scas
dec
adc
out
adc
stos
pop
pop
icebp
xchg
aaa
and
mov
cmp
sarl
or
add
in
add
jmp
out
sub
xchg
jg
sub
pop
scas
repz
sahf
xor
mov
push
dec
mov
ss
popf
les
adc
mov
mov
mov
ret
stc
pop
scas
xchg
jne
popf
jp
cmpl
jmp
xor
loope
jo
sub
mov
jne
or
ljmp
push
dec
add
cmp
add
daa
aad
fdecstp
and
xchg
inc
sbb
xor
add
sbb
mov
fnsave
scas
pop
aas
sub
xor
push
sub
sub
mov
and
xlat
dec
and
mov
push
ss
bound
jmp
and
fsts
mov
jne
jo
or
cmpsb
jp
test
add
add
mov
int
inc
jp
xor
adc
pop
cmp
mov
test
mov
adc
out
negl
insb
sbb
push
and
fsubs
sbb
mov
jnp
xchg
jmp
mul
scas
shll
jge
stc
or
mov
or
or
nop
add
inc
lock
in
mov
sub
or
js
mov
mov
push
out
or
jle
test
lret
in
in
or
rcrl
sub
loopne
popa
stos
lcall
sub
ja
push
inc
aam
stc
xchg
les
in
cmp
jb
push
sti
or
jae
ljmp
mov
pop
jmp
adc
in
pop
jmp
sbb
in
test
push
jmp
pop
cltd
pop
aaa
in
lods
aad
xchg
roll
sub
int3
jp
mov
stc
int3
jnp
bound
and
test
icebp
add
testb
xor
jnp
adc
jno
ja
stos
and
add
inc
push
push
push
mov
notb
adc
iret
pop
pop
pop
mov
scas
mov
rol
adc
push
add
mov
adc
mov
pop
es
mov
sbb
or
mov
popa
sbb
popa
js
fildl
xor
inc
adcl
jae
sbb
test
mov
sub
cli
scas
mov
sbb
call
clc
cli
sbb
int3
xchg
leave
jae
sbb
pushf
mov
and
xchg
pop
xor
out
push
sub
icebp
divl
cmp
push
ss
cli
faddl
cmp
orl
xlat
lods
cs
dec
adc
daa
mov
mov
mov
push
push
ucomiss
shl
test
inc
sub
inc
push
data16
insb
sub
loope
dec
sbb
fs
xchg
mov
stos
push
out
sbb
or
aas
jne
or
aad
adc
sbb
stos
mov
push
or
xchg
jmp
jae
movntq
jg
in
icebp
imul
xor
ja
movsl
sbb
testb
sub
xor
adc
cmp
push
notb
sbb
mov
mov
out
in
jg
xchg
loopne
js
cmp
fisttps
mov
push
mov
or
dec
jo
sbb
xchg
test
dec
add
loopne
push
imul
pop
xlat
call
sub
adc
fimull
shll
mov
shl
in
fildl
push
fisubl
fcomip
aam
jecxz
mov
out
dec
jp
mov
test
and
jecxz
mov
xchg
and
daa
add
jp
enter
fildl
test
xchg
pushf
add
insl
dec
and
mov
sbb
pusha
les
shlb
xchg
idivb
cmp
push
mov
ss
lock
add
fisubrs
arpl
fwait
lret
jg
jns
and
cmpsb
jle
dec
xchg
ljmp
cwtl
pop
cmp
aas
jns
mov
or
jmp
addl
jns
xor
imul
mov
sub
movsb
push
decl
lock
aaa
gs
pop
inc
cs
jge
cmp
sub
inc
cmp
pop
sub
add
fadds
mov
out
mov
fidivs
xchg
mov
xlat
outsl
cs
mov
dec
sbb
in
std
pop
cmp
add
dec
mov
adc
ds
lods
jmp
pop
flds
testl
xchg
imul
test
push
ja
rcr
fucomi
fistl
sahf
mov
xor
repz
xchg
xchg
jmp
mov
fsubp
ss
lds
fnsave
adc
pop
aas
jno
fchs
push
lds
cmp
or
dec
xor
and
stos
scas
lret
add
les
cmp
jle
mov
mov
dec
pusha
daa
xchg
pop
sahf
jbe
mov
rclb
cmp
jmp
sti
shll
mov
adc
dec
mov
adc
jg
dec
dec
fstpl
adcb
jecxz
pop
fsubrl
sbb
inc
xchg
pushf
add
xor
sbb
jmp
mov
and
lods
neg
imul
in
lods
insl
sbb
pushf
lds
in
fisttpl
jg
shrb
loop
push
or
sbb
mov
mov
data16
sub
cmp
add
add
sbb
jl
fcoml
mov
inc
into
div
jl
push
mov
add
push
cmpl
ret
mov
push
inc
jge
push
mov
cltd
ret
sub
mov
push
xchg
push
outsl
cmp
dec
ja
adc
cmp
shlb
jg
cli
sbb
test
dec
mov
notl
mov
xchg
ja
adc
push
pop
test
gs
xchg
sbb
mov
add
std
pop
nop
shl
clc
mov
scas
pop
sbb
dec
mov
aas
pop
cwtl
add
sub
cmp
jno
push
xchg
sub
jbe
imul
enter
pop
imul
mov
dec
adc
fucomp
add
ret
loop
mov
div
icebp
add
and
outsb
sub
fdivl
pop
pop
xor
xor
stc
mov
push
int
dec
test
push
mov
sbbl
jecxz
int3
shlb
sub
js
push
ret
fwait
arpl
push
lds
scas
pop
call
not
mov
es
rorl
lahf
loope
sub
fcmovnbe
leave
ret
push
lret
pop
addr16
pop
lods
xor
imull
ret
addr16
xchg
insb
gs
cmpsl
jae
xchg
mov
or
or
xor
inc
xchg
shl
test
pop
cmp
lods
lea
adc
cmp
test
out
dec
xor
inc
aaa
xor
outsl
jl
ret
xor
cmc
xchg
pop
jecxz
and
sub
dec
add
pop
push
sbb
jno
scas
jno
and
xchg
inc
rorl
out
mov
or
push
clc
enter
dec
popa
inc
lds
jb
xchg
xchg
cmp
mov
gs
bound
add
sub
or
daa
xor
mov
out
in
push
andb
testb
fdivl
pop
sbb
pop
jle
hlt
adc
bound
scas
sub
sbb
jg
in
xor
cmpsl
jmp
ljmp
sub
ret
inc
ret
stc
xor
xchg
lock
shll
mov
lds
mov
xor
arpl
loopne
out
mov
arpl
aad
dec
sbbb
mov
inc
lea
mov
enter
cmpsl
stc
gs
rol
lea
inc
je
jl
sbb
fwait
pushf
adc
sbb
out
lahf
loop
mov
mov
int
sub
je
mov
jo
in
cmp
mov
insl
sbb
mov
xchg
sub
jbe
lea
add
out
xchg
or
and
add
in
jno
test
mov
mov
adc
mov
lods
inc
int
inc
mov
pop
movsb
add
dec
pop
xchg
out
loope
scas
or
faddl
sub
movsb
std
and
enter
repz
push
lahf
cmpsb
xlat
add
fs
jnp
enter
aad
decb
cmp
mov
stos
fwait
xlat
jle
cmp
mov
sbb
xchg
push
mov
push
mov
pop
jns
jl
shrl
mov
lea
idivl
mov
or
test
cmp
outsl
xor
xor
ror
popa
fsubl
ljmp
jp
mov
mov
xlat
dec
loop
mov
push
loopne
or
subb
mov
add
sbb
and
xlat
stos
loop,pn
mov
xchg
call
sub
push
push
pop
mov
inc
iret
test
jp
push
xlat
mov
xor
imul
mov
iret
shlb
inc
sub
jl
clc
aas
xor
mov
and
cmpl
dec
xor
jo
loopne
or
arpl
pop
inc
mov
jo
das
or
push
repnz
xchg
repnz
call
into
xchg
data16
sahf
sbb
cwtl
gs
hlt
lds
fwait
js
xor
and
rorl
cmp
das
push
imul
loope
jmp
add
outsb
or
xchg
lret
outsl
out
test
sub
pop
mov
and
nop
test
dec
mov
mov
insl
push
push
repnz
iret
xorl
dec
jae
popa
or
jle
jl
cltd
xchg
mov
xchg
adcb
or
push
mov
shrl
leave
ds
cmp
inc
mov
rep
cmpsl
sarl
push
push
pop
orb
cmp
lcall
nop
loopne
pusha
adc
stos
adc
mov
in
test
sub
scas
push
jne
lods
lds
outsl
jb
mov
jnp
jmp
xor
movsl
jo
and
dec
jg
js
mov
outsb
lret
daa
notl
popa
test
clc
adc
in
add
pop
lock
sbb
cmpsl
iret
pop
adc
and
mov
movsb
repz
jnp
mov
into
nop
pop
mov
lahf
inc
sbbl
sbb
jmp
xchg
std
mov
inc
aas
xchg
mov
and
mov
jno
out
or
cmovs
push
jl
pop
out
out
cmpsl
xchg
cwtl
cmp
jbe
daa
aad
pop
add
movsb
in
lods
gs
scas
ss
inc
out
sbb
mov
inc
aam
jae
cmp
les
fs
aaa
xchg
mov
sub
lahf
sarl
sub
fimull
jns
mov
aaa
xchg
jno
cmc
addr16
inc
ds
xchg
inc
adc
adc
xchg
icebp
cmp
dec
sbb
mov
or
mov
and
cmp
popf
mov
pop
ficomps
lret
cmp
mov
ret
ljmp
cmp
sarl
jb
xchg
adcb
sbb
jbe
or
fs
aas
or
inc
push
not
and
cmp
lea
pop
call
pop
enter
jbe
imul
out
cs
sbb
iret
das
inc
xchg
xlat
sbb
jb
and
mov
hlt
aad
xor
jns
enter
sarb
pop
or
dec
test
nop
push
cs
xor
sub
pop
push
xchg
push
lea
test
inc
fildll
add
jp
sbb
int
jp
pop
mov
repnz
or
cmc
xchg
out
adc
loop
in
lods
mov
subl
pop
mov
adc
xor
popf
or
fsubrs
xchg
mov
pop
sbb
and
and
outsb
imulb
call
in
mov
data16
xor
scas
loop
inc
out
inc
ss
inc
cmp
or
mov
aas
xor
mov
orl
into
loope
ret
mov
movsb
and
cmpsb
and
add
mov
push
filds
mov
adc
and
pop
mov
ss
push
lcall
and
aaa
adc
sarl
lds
xor
jg
movsb
scas
pop
dec
mov
clts
inc
jae
mov
xchg
mov
mov
add
pop
push
je
cmpsl
enter
mov
stos
in
subl
data16
std
cli
adc
jmp
out
lret
sbb
mov
cmp
int
inc
hlt
sbb
shrl
les
sarl
fstl
es
jp
and
inc
sti
mov
push
mov
scas
test
cltd
mov
sbb
pop
and
dec
pop
mov
shll
cmp
or
adc
xorl
jmp
jmp
loopne
sbb
repz
ss
jmp
inc
adcb
mov
mov
sbb
ret
adc
and
cmp
int3
inc
add
sub
cs
out
repnz
mov
dec
inc
pop
adc
leave
repz
ss
pop
js
std
sbb
stos
sub
sarl
pop
mov
inc
xlat
fwait
xchg
test
push
jnp
mov
xchg
xchg
adc
xchg
pop
fisttpll
loope
cmp
jg
sub
out
out
addb
pop
push
pop
popa
mov
cmpsl
adc
cs
mov
pop
out
adc
loopne
push
aam
mov
inc
jnp
in
enter
scas
lock
imul
lds
push
in
cmp
fmuls
cmpsl
xchg
sahf
push
sub
bound
mov
sbb
jae
jge
mov
mov
sbb
cwtl
jmp
jbe
ss
ss
rorb
dec
sarb
jge
cmp
adc
add
cmovge
xchg
sahf
enter
int3
mov
push
cwtl
fidivrs
js
xchg
ds
insb
xor
adc
or
and
xchg
cmp
mov
sub
loop
es
sub
xchg
inc
cmp
lock
cwtl
outsb
push
jno
les
cld
jle
into
mov
je
pushf
pop
push
cmp
fwait
insl
scas
into
xchg
out
xor
faddl
xchg
call
sbb
mov
sub
xor
push
pop
movsb
xorl
loopne
add
xchg
push
and
popf
mov
xchg
add
mov
int
or
xchg
adcb
out
push
enter
xorl
push
clc
and
int
xor
popa
fwait
xchg
mov
lret
adc
jbe
into
test
scas
pop
cmp
and
add
sbb
fisttpl
test
inc
add
data16
pushf
sahf
rol
test
cwtl
jb
jmp
push
std
rcll
das
pop
and
shll
fisubl
das
aad
or
jle
inc
popf
lret
sahf
les
xchg
inc
push
dec
ret
movsb
jge
dec
jbe
insl
mov
sbb
push
pop
lds
faddl
jle
popf
fimuls
pop
test
cmpsb
push
pop
loope
icebp
ja
dec
fdivrs
mov
or
movsl
pop
push
scas
xchg
popf
rcll
rcr
add
je
sarb
cwtl
and
cmp
cli
in
sbb
adc
inc
gs
stc
in
inc
cmp
sbb
xchg
sub
sub
xchg
addr16
push
lret
stc
ret
andb
pop
andb
or
xlat
pop
jge
sub
test
in
mov
test
fcoms
add
and
std
adc
inc
int
mov
push
mov
xor
sub
inc
test
mov
mov
fdiv
insb
pop
scas
pop
sti
xor
out
dec
add
cs
std
js
lock
push
sbb
sbb
gs
dec
enter
sub
mov
insl
mov
pop
sbb
sub
repnz
sbb
mov
xor
dec
pop
out
clc
pop
xor
lods
and
cmpsb
popa
xchg
xchg
push
sub
push
lds
jno
adc
push
sbb
movsl
or
negb
in
push
pop
jmp
mov
int3
addr16
lods
test
imull
adc
pop
ret
cmc
sti
je
aam
aas
loope
shl
dec
mov
sbb
xchg
xor
mov
in
xor
xchg
add
jp
push
jae
stos
out
loope
lcall
sarb
cwtl
sbb
rolb
insl
jae
adc
cmpsl
push
sbb
ficoml
rclb
jp
adc
adc
inc
xor
xor
jae
loopne
out
adc
nop
imul
inc
push
nop
adcb
rcl
push
sti
or
lock
in
imulb
fcomps
sbb
fadds
loopne
lret
mov
les
lahf
mov
or
adc
scas
cmpb
cmp
mov
addr16
cld
cmp
imul
movsb
jns
push
sub
add
fists
jne
test
dec
cmpsl
xchg
jge
mov
test
js
lods
scas
es
lock
lahf
test
jp
fstps
aas
xchg
sub
mov
and
cmpsl
pushf
xlat
mov
adc
repz
push
int3
pop
sti
fidivrl
imul
movaps
adc
sbb
leave
inc
shlb
jns
jl
add
or
dec
je
in
mov
jp
cld
and
ret
mov
sbb
mov
test
pop
subb
pop
and
inc
mov
push
push
call
sbb
scas
mov
add
cmpsl
popf
sub
fsubrs
xorb
jno
inc
pop
xchg
push
cwtl
mov
push
ds
push
push
dec
jge
sbb
mov
xchg
push
add
insl
jb
sub
fmuls
jbe
push
push
test
adc
inc
int3
pop
jno
mov
xchg
mov
lock
mov
push
data16
ljmp
dec
je
cmp
adc
ja
inc
inc
add
pop
stos
js
cmp
ja
mov
fucom
jmp
fisubrl
dec
imul
adc
mov
in
xchg
and
sub
sub
test
mov
dec
push
sbb
push
xorl
lea
es
and
pop
lock
shll
jge
pop
dec
xchg
out
cltd
loopne
mov
in
stos
out
xor
mov
sub
dec
push
dec
inc
mov
or
cmpsb
inc
imul
adc
imul
dec
out
arpl
lea
inc
insb
sbb
pop
ret
aas
xor
testb
aam
jo
push
mov
mov
in
cs
xor
dec
mov
xchg
out
fisttps
into
sbb
dec
xor
pop
push
xchg
sub
les
jnp
dec
mov
mov
ret
xor
cmp
or
xchg
insb
rorl
leave
cld
pop
stos
or
call
scas
sahf
jp
repz
or
das
jmp
out
imull
mov
and
and
mov
sbb
addr16
jle
add
pop
in
add
cwtl
nop
mov
fcmovnb
inc
mov
leave
jge
jb
pop
jb
loopne
mov
nop
and
xor
inc
inc
xchg
daa
mov
xor
jns
add
sub
mov
add
jecxz
add
mov
test
int3
jl
push
mov
lret
aam
cli
sub
aad
or
into
fstl
lret
jecxz
inc
lock
aam
add
push
cltd
jl
xor
xchg
push
outsl
cmp
out
add
out
pop
sbb
mov
imul
cs
adc
popf
dec
jo
add
roll
xor
pop
pop
fistps
clc
neg
push
mov
aaa
loope
loop
loop
popf
inc
js
inc
add
insb
fdivrs
ss
cmp
dec
jne
xchg
aad
and
test
mov
outsb
dec
push
insl
sbb
or
and
push
imulb
mov
jmp
leave
jne
push
daa
mov
cmp
cmp
xor
push
sub
xchg
loope
sbb
sub
cmp
ss
xorb
or
rclb
xrelease
jg
and
dec
cmp
movsl
in
sbb
sub
add
push
call
fwait
jns
add
add
arpl
shrb
fisttpl
movsb
inc
test
out
mov
mov
repz
cmpb
lcall
mov
cmpsb
sub
shl
loope
leave
sbb
xchg
jge
lds
mov
dec
ljmp
arpl
lret
arpl
pop
loopne
dec
ret
mov
mov
test
shll
fsubrl
jno
jge
add
lock
push
add
cld
scas
jno
lret
sub
into
je
xor
sbb
pop
jle
jmp
xor
mov
rcrl
ret
cmpsb
push
xor
out
xchg
and
mov
std
mov
inc
xor
xchg
push
xor
and
inc
int3
sbb
cmp
ret
sbb
mov
push
dec
les
sub
cltd
lret
out
cmp
mov
mov
ret
shl
aas
ljmp
lahf
push
push
dec
aam
rolb
out
popa
jo
or
inc
and
not
scas
push
lahf
or
and
mulps
mov
in
popf
sub
jae
insb
outsb
lock
sbb
stos
fdiv
mov
sbb
dec
daa
add
mov
adc
in
fcompl
shll
sbb
aad
push
rcrb
sbb
jg
cs
lcall
dec
popf
nop
jecxz
js
sbb
fsubrl
xlat
and
dec
or
jle
inc
dec
std
add
jp
xchg
pop
xor
push
decb
cltd
inc
sti
mov
repz
loop
std
cli
cmp
es
aas
clc
int
out
xchg
add
cmp
fistl
lahf
je
scas
fnsave
mov
cmp
xor
inc
test
in
cmp
inc
ret
in
aas
jns
sbb
jecxz
sub
xlat
ss
pop
rclb
hlt
cmp
adc
mov
jae
or
mov
inc
loop
adc
ds
sub
xor
inc
leave
mov
mov
rcl
shlb
les
xor
cmp
es
data16
addl
leave
dec
dec
clts
test
mov
imul
popf
sbb
sub
dec
push
sarb
and
sbb
pop
add
xor
cwtl
xchg
inc
mov
inc
insl
sub
ret
in
cmpsl
add
jge
sbb
cmpsb
jl
jne
mov
outsl
xchg
out
sti
cmp
mov
jbe
stos
sub
pop
jbe
inc
push
mov
js
push
pushf
sbb
mov
push
add
fsubrp
push
repz
les
inc
xchg
js
and
fidivs
arpl
bnd
mov
hlt
pop
add
xor
mov
mov
push
add
add
bound
xor
adc
jns
imull
repz
pop
outsb
cmpsl
fdivrl
cmp
mov
test
push
mov
push
jecxz
sbb
clc
stc
push
inc
sarl
fidivrs
cmpsl
scas
dec
inc
subl
pop
or
scas
test
mov
andl
jmp
inc
adc
pop
mov
xlat
or
fisttpl
insb
adc
mov
dec
cmp
lcall
sbb
inc
aas
icebp
stos
fimuls
jg
xor
rcrb
or
pop
out
or
sti
addr16
nop
xor
sub
shr
ret
test
mov
out
push
dec
inc
lret
add
sbb
inc
lret
cmpsb
scas
mov
jno
push
loope
cmp
mov
inc
ss
and
sbb
rcr
mov
sub
and
dec
xor
pop
xchg
enter
dec
pusha
push
std
in
cltd
faddl
gs
push
mov
cld
push
es
jl
leave
loop
pop
inc
mov
lret
adc
leave
mov
push
sbb
int3
dec
lods
sub
ret
jno
xchg
mov
pushf
cmp
sbb
and
rolb
mov
jge
add
out
push
xchg
inc
fldenv
jmp
cltd
repnz
pop
pop
xchg
stos
jne
mov
xor
xor
in
popf
aad
fisubl
repnz
mov
xchg
addr16
inc
imul
scas
mov
in
dec
adc
or
pop
mov
sbb
icebp
out
lret
cmc
push
nop
cltd
mov
push
loope
hlt
aas
pop
push
mov
stos
jne
xchg
inc
dec
sbb
ja
aad
sbbb
enter
push
cmp
add
and
or
mov
icebp
adc
inc
cmpb
push
lcall
adc
nop
es
pop
push
pop
aas
jmp
or
xchg
fisttpl
and
adc
mov
mov
push
out
rcll
push
dec
pop
jns
sbb
mov
insb
fs
mov
push
mov
dec
ficoml
and
ja
das
roll
jb
xchg
push
cld
jnp
mov
inc
mov
aam
scas
rolb
push
loope
scas
cli
mov
jg
pop
cs
mov
push
lahf
pop
outsb
push
fadd
hlt
pushf
add
push
mov
mov
dec
mov
cmp
and
insb
insb
ljmp
xchg
mov
jecxz
mov
inc
sbb
test
cli
mov
cmpsl
sbb
lock
cld
insb
in
ss
add
and
xchg
mov
cmc
aad
lcall
jne
jle
jp
mov
lret
pop
jb
sti
fcoms
int3
mov
inc
pop
mov
adc
dec
cwtl
lods
inc
jp
mov
dec
dec
jne
xor
push
mov
cmp
imul
cmpsb
fcompl
inc
cmc
xchg
jp
pop
push
negl
cwtl
jo
outsb
addb
jecxz
fcoml
cs
push
dec
sbb
push
xchg
sub
jmp
stos
mov
xchg
sahf
xchg
lock
xor
ret
cmp
scas
and
icebp
outsb
in
ds
lahf
inc
and
pop
jae
add
sbb
xor
stc
bnd
sbb
xchg
repz
scas
mov
add
ljmp
mov
xlat
ret
shll
rclb
xchg
fdiv
xchg
or
std
nop
scas
out
or
into
imul
testb
and
xchg
pop
notl
pop
rclb
cmp
dec
dec
stos
leave
mov
pop
mov
push
mov
or
movsb
mov
cmc
cmp
ja
xchg
sbb
test
dec
xchg
rcrb
ds
test
push
enter
mov
cs
xor
sbb
test
jecxz
jecxz
xchg
jge
mov
and
loopne
dec
add
inc
pop
pusha
jo
sti
add
push
aam
imul
adc
xchg
add
jge
fstpl
cmp
fs
in
popa
stc
nopl
dec
cmp
fistps
pop
xchg
xchg
inc
imul
mov
leave
sbb
mov
ficoms
shll
shr
inc
movsl
and
lea
sbb
int
xchg
and
jne
jp
dec
stos
fwait
imul
mov
nop
call
adc
inc
jno
in
sti
mov
lock
jo
mov
test
jmp
call
sub
mov
mov
movsl
lds
ret
inc
mov
jmp
lods
hlt
arpl
test
in
push
xor
mov
inc
sti
dec
repnz
mov
push
mov
adc
push
fcomi
subb
push
shll
and
xchg
mov
insb
into
cmp
push
movsb
pop
add
movsb
jno
repnz
movsb
iret
fbstp
lret
js
mov
shll
add
jge
sti
or
mov
lahf
and
push
add
iret
mov
xchg
adc
cmp
xorb
sbb
mov
mov
push
ret
test
loopne
dec
sti
nop
orps
adc
pushl
in
mov
push
mov
mov
sahf
mov
inc
addr16
push
test
cmp
test
sbb
push
sbb
fsubl
mov
inc
pop
xchg
es
xor
dec
imul
push
addb
cmp
ret
xchg
push
aas
out
sbb
inc
imul
push
call
mov
sbb
into
cltd
and
xchg
xlat
mov
loope
mov
mov
aaa
jmp
jl
lret
or
cmp
icebp
pushf
mov
adc
lret
mov
jbe
add
dec
jbe
cs
xchg
sarb
push
push
fistl
scas
mov
test
je
sbb
or
dec
adc
shl
mov
addr16
xor
sub
mov
pop
sub
add
cmp
enter
test
xchg
cmp
mov
and
aas
gs
or
sbb
in
addl
rcrl
fwait
pushf
ficompl
mov
mov
sub
adc
dec
cwtl
sbbb
jg
pop
mov
push
xlat
sub
insl
in
cwtl
xor
fnsave
or
loop
int
push
out
repnz
movsl
push
movsb
adc
mov
mull
add
cli
adc
jmp
or
mov
mov
dec
gs
mov
enter
loopne
inc
mov
out
shlb
inc
pop
fnstcw
jl
lock
js
mov
mov
xor
icebp
daa
push
pop
popf
xor
mov
mov
mov
outsl
add
imul
inc
add
stos
mov
mov
mov
jecxz
push
jge
mov
popf
cmc
and
pop
ljmp
jns
dec
loope
insl
pop
jns
les
mov
push
pushl
mov
shrb
inc
js
int
cli
out
push
add
mov
dec
arpl
hlt
insl
out
push
mov
and
jo
sbb
inc
jb
sub
jl
jmp
cwtl
test
mov
pop
in
mov
cmpsl
mov
add
xchg
mov
or
pop
pop
sub
shll
inc
push
sti
mov
out
rcl
popf
lret
andb
inc
dec
repz
push
mov
mov
lods
push
mov
or
lahf
sbb
int
pop
inc
jns
jne
pop
stos
mov
lds
mov
imul
sbb
sub
push
data16
mov
or
inc
loope
lods
push
out
add
ror
pop
adcb
adc
dec
xchg
inc
sub
push
sub
jb
xor
lcall
gs
dec
sub
testb
inc
push
mov
imul
dec
mov
shll
insb
subb
pop
xchg
loope
inc
test
and
into
sub
and
lods
push
push
mov
mov
sahf
ss
imul
mov
lock
roll
dec
je
mov
jns
lea
stos
xchg
repz
add
inc
add
push
xchg
sbb
jmp
xor
popf
cmp
xor
sub
xchg
push
addr16
jbe
jmp
fstps
dec
fistpll
or
mov
out
xchg
aas
lret
push
mov
cmp
lcall
nop
dec
lret
xchg
mov
clc
insl
movsb
fs
dec
jl
push
lfs
pop
mov
movsl
push
cs
call
adc
ret
inc
xchg
inc
sbb
jge
mov
mov
aam
pop
int3
xor
mov
int3
and
xor
mov
mov
mov
mov
and
les
int3
aad
mov
scas
pop
pop
je
test
push
jp
jbe
push
cmp
std
scas
shr
inc
push
or
inc
pop
mov
mov
fucom
xor
mov
mov
xor
int
jge
mov
and
pop
xchg
jns
hlt
mov
cmp
jmp
xor
and
mov
adc
into
aas
push
sub
xchg
or
dec
xchg
fwait
mov
add
push
jb
ret
xchg
push
xchg
pop
leave
ljmp
subb
movb
dec
push
pop
rolb
jo
stos
scas
cmp
nop
call
xchg
nop
pop
imul
scas
fldt
sarl
cmp
nop
sbb
adc
cmc
xchg
mov
jne
jo
mov
xchg
popf
fildll
enter
xor
insl
cmpsb
popa
aaa
mov
pop
add
out
or
leave
out
cmp
ljmp
sub
lods
add
and
test
jns
xchg
scas
les
cli
test
aas
or
or
in
fsubp
jnp
jae
mov
fdivl
jg
push
in
out
lret
jg
and
fstpl
push
scas
popf
aaa
inc
or
adc
mov
gs
pop
cmp
test
push
js
std
pop
adc
xchg
stos
icebp
and
andl
insb
pop
inc
xor
mov
mov
arpl
ljmp
push
cmp
mov
xchg
mov
imul
lods
inc
test
sub
sbb
or
and
ficompl
rcrb
cwtl
hlt
xor
int3
and
add
pop
loopne
movsl
pop
xor
std
js
rcrl
xor
xor
insl
mov
test
in
push
sbb
dec
cmp
cmpsl
sbb
test
lds
in
lock
mov
fldenv
dec
sbbl
jbe
xchg
stos
xchg
testb
push
lcall
add
inc
punpckldq
repnz
stos
shlb
add
mov
fstl
int3
insl
scas
sub
stc
movsb
or
jmp
das
std
dec
fisubrl
out
movsl
cld
push
push
mov
mov
imul
push
pushf
call
rorb
rorl
add
fcom
int
out
mov
adc
in
ja
sub
jmp
scas
sbb
and
je
lock
xchg
out
jl
cli
test
inc
fsubl
pop
pop
rcrb
cmpsl
push
ret
mov
repz
test
mov
inc
add
icebp
std
and
into
cmp
mov
adc
mov
mov
mov
push
or
sbb
sbb
xor
icebp
and
jmp
fildl
pushf
outsl
loope
mov
push
inc
sar
js
and
loopne
jge
jge,pn
cli
scas
ss
xlat
push
out
test
nop
inc
xchg
imul
add
aaa
push
xor
cwtl
rep
pop
fstl
jb
cwtl
mov
xchg
cmp
sub
push
js
outsl
pushf
xor
mov
dec
pop
mov
dec
stos
mov
pusha
xor
scas
mov
repnz
inc
pop
popa
cmc
cltd
cmp
jl
inc
pushf
lods
lods
adc
dec
jle
mov
xor
loope
mov
mov
pop
out
pop
add
pop
mov
ljmp
dec
lret
inc
jbe
fists
mov
mov
dec
pushf
sti
add
mov
sbb
dec
mov
aad
sbb
mov
idivl
add
adc
cld
xchg
stos
jecxz
add
or
mov
inc
fisubl
xor
jo
popf
cmc
pop
push
push
pushf
inc
rcrl
shr
test
fidivrs
stos
in
aad
cmpsl
sbb
add
jbe
inc
xor
out
xchg
adc
gs
inc
ds
fst
xchg
in
jl
mov
clc
mov
pop
xchg
stos
shrb
cmp
aas
outsb
das
mov
mov
push
sbb
or
lds
pop
sbb
sahf
das
outsb
int
fldl
inc
sub
and
lea
test
xchg
mov
cmp
mov
shll
adc
cmp
aaa
mov
fs
sub
lret
jge
pop
sahf
cmp
js
push
jb
mov
mov
std
sbb
dec
data16
sti
mov
dec
lods
rclb
cmp
mov
lret
adc
cld
jg
jl
mov
popf
adc
sahf
lret
rcrl
pop
popf
jns
mov
out
lds
cmp
fst
xor
sbb
adc
sbb
adc
jecxz
jno
xor
fisttps
pop
out
test
lahf
into
inc
cmpsb
or
add
imul
fwait
insb
loop
in
lcall
jmp
dec
clc
xchg
fidivrs
int3
divl
fidivrl
cmc
orb
mov
mov
fistpl
pop
pusha
fs
and
daa
int3
cltd
and
push
data16
jge
pop
in
xchg
ret
xchg
push
pop
xchg
rcrb
cmp
add
aaa
into
inc
cmp
push
cmp
pushf
lea
jnp
jo
inc
gs
ficoml
nop
jle
add
adc
pop
sub
test
hlt
push
adc
sub
ja
xchg
dec
pushf
cmp
mov
push
dec
es
sbb
jne
pop
push
mov
xchg
pop
mov
cli
enter
mov
iret
jmp
xchg
xor
std
cld
jmp
push
mov
mov
jns
int3
ljmp
enter
jl
fldpi
mov
push
xchg
std
movsl
clc
dec
mov
mov
aam
cwtl
ficoml
pop
imul
mov
cwtl
mov
icebp
sbbl
mov
cmp
add
lea
aad
in
insl
dec
js
inc
dec
xchg
cmc
lcall
popa
or
pop
jge
es
cmp
hlt
test
shll
xchg
test
dec
lods
mov
pop
or
mov
scas
inc
xor
jne
and
cltd
pop
fs
rcl
fadd
xchg
addr16
pushf
repnz
jp
scas
mov
mov
sub
pop
stos
jne
pop
aad
test
test
sub
cmpsb
je
dec
std
daa
mov
out
push
mov
es
xchg
iret
mov
in
daa
mov
pop
incb
dec
ror
mov
jne
inc
icebp
xor
mov
lret
push
adc
andb
lahf
stos
ss
cld
push
jg
gs
loopne
iret
cli
mov
ss
lret
cmp
cmpsb
mov
rcr
mov
mov
ret
xor
xchg
xlat
xchg
or
lods
cmc
cli
sbb
or
dec
imul
repz
out
aam
test
xor
mov
test
xchg
and
out
jp
mov
shlb
push
dec
or
or
dec
lahf
nop
sub
dec
push
movsb
ljmp
xlat
push
push
sub
push
xor
sbb
push
mov
xchg
aam
xchg
xchg
and
cmpsb
xchg
popa
cmpsb
clc
pop
dec
cmc
movsl
call
fbld
ljmp
mov
rcll
popf
repnz
push
sub
jecxz
test
aas
negb
inc
cmp
je
push
push
js
xchg
pop
push
std
out
into
push
mov
jbe
mov
repnz
jecxz
test
addr16
cmp
stc
rorb
outsb
mov
stc
pop
push
push
cmpsb
sbb
imul
jno
push
mov
jbe
jg
and
mov
sub
fstps
jo
es
inc
hlt
sbb
cmc
and
fdivr
call
sub
enter
shl
push
scas
cld
icebp
and
inc
or
adc
stc
inc
inc
es
test
addb
shr
lret
mov
cmp
mov
cmp
data16
pop
and
stos
or
jp
in
push
mov
inc
add
lahf
fsubrs
repnz
fucomp
addr16
loope
mov
aas
mov
icebp
clc
repnz
in
mov
out
stos
std
jb
ret
in
lds
popa
mov
jp
mov
jne
sub
int3
sbb
cmpsb
lret
mov
lea
sbb
push
push
add
ficoms
movsb
xor
sbb
jb
or
mov
loopne
mov
pusha
xchg
xor
ret
ficoml
mov
xor
dec
push
fmull
cwtl
jecxz
jno
and
push
sub
mov
fs
sbb
cmc
scas
js
test
loopne
testl
adcl
pop
adc
in
mov
dec
imul
jo
je
scas
insb
pushf
pop
je
icebp
or
leave
dec
leave
clc
fldl
and
addl
shll
add
movsl
ret
mull
sbb
cmp
jnp
mov
mov
enter
repnz
xor
in
dec
sbb
andb
ss
mov
rcr
icebp
out
cmp
mov
mov
lret
cld
aas
sbb
sub
fs
ljmp
ja
push
aam
xor
inc
sti
xlat
jo
jb
cmpsl
add
imul
push
movsl
aam
add
cmp
ret
push
lea
jbe
loopne
sti
pop
mov
xlat
popa
or
bound
fistl
inc
lret
nop
lds
sbb
mov
xchg
push
movsb
adc
cmp
inc
jo
test
cld
add
scas
inc
add
or
loopne
inc
stc
loop
je
xchg
adc
jge
jle
jne
dec
jl
test
jecxz
mov
ds
mov
inc
mov
subb
add
gs
xchg
addb
jge
out
scas
scas
mov
add
jp
cli
out
movsl
fcmovu
mov
mov
shr
xchg
fwait
mov
pop
or
mov
or
movups
sub
jae
hlt
push
icebp
fucom
dec
mov
js
fildll
mov
addr16
lods
cmpsl
test
push
inc
jnp
aaa
push
cmp
xor
push
scas
add
in
ss
inc
popf
dec
and
shrb
icebp
xlat
jl
mov
mov
adc
push
lods
push
push
decl
push
mov
gs
outsb
stos
out
add
fistps
addr16
cmp
enter
push
arpl
add
in
sbb
inc
add
jnp
cmp
repnz
inc
dec
mov
cmp
cwtl
movsb
xor
addr16
mov
xchg
clc
mov
xchg
cmpsl
rcr
xchg
sbb
or
aad
push
je
add
push
xor
adc
mov
jns
dec
cmp
stos
sbb
mov
notb
jns
in
xor
ret
pop
push
inc
sbb
xlat
imul
mov
iret
fsubrl
push
mov
inc
je
arpl
mov
pop
push
leave
scas
push
or
xchg
push
mov
sub
daa
outsl
dec
pop
push
jnp
sub
in
out
xor
dec
adc
into
aad
sub
mov
aaa
imul
sti
push
lods
sbb
daa
add
mov
movsl
jg
aas
inc
jns
mov
frstor
in
pushf
lcall
jmp
xor
hlt
js
push
jge
rorl
cmpsl
stos
sub
adc
sub
mov
pusha
leave
sub
jl
xor
test
pop
orl
sub
xchg
sbb
fidivs
mov
pop
fcomps
dec
dec
test
pop
inc
rorl
push
mov
push
aas
test
xchg
and
pop
cs
pop
in
sbb
mov
bound
pop
mov
dec
dec
push
xchg
cli
fld
cmp
pop
lret
cs
mov
mov
mov
pop
ja
lea
insl
movsb
jp
xchg
push
jp
sub
mov
and
jb
mov
stos
sub
out
pop
mov
add
pushf
repz
dec
stc
lods
bound
stos
cltd
xor
sub
pop
dec
div
xchg
mov
out
aam
insl
mov
aas
jae
jb
scas
inc
xchg
xchg
daa
mov
push
daa
jns
jne
xchg
mov
adcb
add
xor
sbb
ret
outsl
pop
pushf
or
sub
neg
or
xlat
mov
or
pop
mov
in
outsl
mov
add
lds
outsb
sarb
cltd
mov
mov
sbb
and
or
cld
push
bound
scas
repnz
inc
ds
aaa
cmpb
cmpsb
sbbb
pop
mov
mov
inc
pusha
xlat
fcmovnb
add
mov
std
test
mov
andl
insl
dec
or
fyl2x
push
mov
out
dec
clts
out
pop
jl
xchg
int
hlt
adc
leave
cmp
mov
xchg
clc
sub
out
aas
aam
dec
rolb
pop
cmp
jle
push
cli
daa
bound
imul
push
xor
xchg
fdecstp
mov
sbbl
adc
mov
xor
out
repz
mov
mov
cmpsb
lock
std
push
mov
dec
sub
iret
push
shll
es
je
repnz
lods
pop
push
pop
inc
pop
fsubl
pop
andb
addr16
lods
lea
dec
mov
mov
mov
mov
cmpl
lea
push
inc
imul
lcall
js
cs
mov
push
outsb
dec
lret
dec
xor
sbb
push
stos
sbb
sub
test
adcb
je
add
mov
out
xor
xchg
xchg
ljmp
and
add
stos
jbe
aam
sahf
lock
xor
xchg
xor
stc
jno
mov
dec
imul
jl
lcall
pop
popl
mov
push
aas
mov
xor
sbb
movsb
pop
int
fcompl
imul
dec
or
stc
movsb
jle
pop
fisttpl
push
int3
roll
push
or
sarb
data16
js
pop
push
mov
fwait
lahf
cmp
or
adc
lea
cmp
pop
out
push
mov
mov
mov
mov
loopne
cmp
jnp
int
call
cmpsb
call
or
movsl
push
pop
inc
std
mov
add
inc
inc
cwtl
fildll
pop
add
jmp
mov
pop
sbb
push
lods
ljmp
sti
jo
mov
or
nop
dec
jo
cmp
pop
stos
imul
rcrl
jno
inc
or
ret
and
popf
mov
out
icebp
test
lret
sub
adc
xlat
cmp
insb
cmc
into
and
mov
mov
sbb
dec
sub
push
loop
loop
repz
or
leave
dec
adc
inc
addr16
or
and
inc
ror
inc
xor
test
mov
or
push
add
sub
jo
ret
mov
lret
repz
or
icebp
pop
mov
cmp
outsb
popf
dec
call
or
xchg
je
lock
jp
aas
dec
imul
std
neg
add
mov
and
imul
sbb
xor
or
xor
xchg
pushf
push
leave
jno
mov
fcomps
pop
cmpsl
adc
in
in
mov
mov
dec
shlb
jb
inc
sbb
sub
dec
fdivrs
add
pushf
xor
jo
loope
mov
mov
test
adc
dec
or
aaa
jecxz
rcl
mov
inc
movsl
mov
movsl
test
in
push
mov
dec
bound
and
pcmpeqb
std
arpl
fistl
push
cmp
mov
icebp
cmpsb
movsl
ljmp
or
mov
dec
cmpsl
jne
movsb
jb
mov
pop
push
and
cmp
or
jnp
loop
jp
adc
lods
imul
jns
mov
cmp
cmpsb
xorb
jb
movsl
out
inc
mov
push
inc
roll
or
or
invd
movsb
mov
ljmp
add
dec
mov
mov
mov
jecxz
jmp
inc
daa
sbb
add
in
fxch
cli
test
jo
pop
cli
jg
inc
shlb
push
in
lock
pushf
cmp
push
xchg
rcrb
repz
or
popf
data16
fsubrs
stc
fwait
daa
sarl
xchg
ds
mov
adc
cmpsb
outsb
pushf
gs
cwtl
popf
sbb
jge
jg
mov
cmpsl
mov
sbbl
push
push
sti
arpl
adc
lret
sahf
lds
xor
sub
xlat
inc
pop
insl
inc
sbb
cmc
inc
xor
pop
adc
nop
cld
mov
cltd
xchg
mov
pop
rcl
mov
dec
dec
mov
pop
in
xchg
mov
repnz
aad
sub
test
cmc
imul
fs
jg
cs
imul
jns
rcrl
add
ret
data16
icebp
pushf
stos
jp
push
sub
shrb
mov
scas
rol
cmp
dec
mov
push
adc
cwtl
and
lret
cmpsb
jae
adc
fbld
push
add
sbb
loopne
mov
sahf
in
pop
or
js
and
daa
subb
and
ljmp
sbb
test
add
movsl
sti
incb
dec
push
clc
aaa
inc
repz
mov
ss
pop
bound
sub
xchg
leave
ja
inc
jo
sahf
loop
pop
scas
fsubrs
inc
push
jne
sub
leave
or
push
test
dec
out
sub
aam
ds
stos
or
mov
mov
stos
xchg
fldenv
jecxz
cmp
scas
and
or
hlt
adc
cmp
push
ss
stc
mov
xor
cwtl
cmpsl
jne
lahf
jl
pop
insl
push
in
jecxz
xchg
adc
ja
shlw
push
das
pop
mov
and
inc
pop
push
inc
stos
lcall
dec
dec
fcmovnb
aaa
test
add
mov
loope
cmpsl
cli
stos
jecxz
pop
test
imul
add
fbstp
out
outsb
sub
mov
cmc
orb
outsl
pop
xchg
jb
and
rcrl
sub
testl
scas
outsl
jns
xchg
xor
cwtl
loop
imull
fmuls
ljmp
xchg
and
out
out
pop
das
mov
jae
js
fs
sbb
pop
addr16
dec
movsl
hlt
push
loopne
lods
jg
pop
sbbb
jmp
imul
xor
add
movb
adc
cmc
cwtl
cmp
jb
cld
mov
shlb
and
adc
sbbl
cli
jne
pop
into
push
mov
and
sbb
cmp
dec
xlat
fldenv
fldenv
and
decb
mov
mov
mov
adc
rcr
sub
or
out
dec
scas
ja
insb
jg
stc
adc
mov
fadd
fnstenv
add
push
push
and
movsb
add
cmp
cmp
mov
mov
xchg
add
inc
int3
dec
divl
xchg
and
lret
or
iret
fwait
inc
loop
inc
jne
mov
cmpsl
in
jbe
clc
cltd
or
pop
mov
mov
mov
cmp
inc
sarb
ljmp
adc
xchg
jns
mov
lock
jbe
push
ret
aaa
cld
jbe
or
int3
stos
leave
popa
adc
fwait
mov
insl
rcl
sbb
loope
sub
cmc
hlt
rcll
dec
pop
cmp
loope
mov
out
dec
out
loop
xchg
movb
jle
dec
lea
inc
mov
jno
inc
addr16
fcmovnb
out
and
mov
or
clc
mov
xchg
mov
test
push
xlat
ds
add
adc
ljmp
dec
mov
leave
loopne
and
orl
ret
enter
inc
aam
xchg
lea
jb
popf
repz
mov
mov
inc
addl
leave
pop
xor
jl
xchg
or
divl
mov
les
icebp
mov
xchg
div
push
aaa
sub
dec
shlb
jbe
rcrb
int3
roll
call
jo
test
pop
cld
movsl
or
insb
mov
arpl
pop
xchg
dec
sbb
sub
sub
lods
or
xor
out
data16
pop
popf
aam
data16
sub
mov
outsb
or
xor
push
call
push
add
xor
cld
test
hlt
rcll
pop
cwtl
sbb
in
mov
test
lods
xchg
es
insl
in
pop
ficompl
sub
cmpsl
adc
insb
mov
dec
repnz
xlat
cmp
pushf
lods
and
addl
push
aad
pop
aaa
adc
ja
subb
dec
dec
xor
movl
lods
dec
pop
scas
inc
xchg
add
lret
popf
rcrb
xor
mov
push
and
insb
icebp
lds
add
pop
mov
ficoml
xor
fadd
sahf
ja
or
aaa
sub
cmp
adc
jbe
adc
subb
adcb
test
or
out
addr16
les
xor
dec
cli
xor
mov
dec
mov
mov
cmpsb
rolb
in
js
fwait
cld
je
or
xchg
bound
jge
adc
adc
aas
ja
push
popa
xor
jmp
mov
test
and
sti
push
mov
pop
sub
jae
clc
or
xor
add
lods
scas
sbb
add
insb
jle
aad
mov
sahf
xor
mov
mov
add
pop
mov
jecxz
xor
jl
mov
out
pushf
es
icebp
jne
push
lret
loop
das
nop
insl
pop
cmp
push
xor
outsl
xchg
in
adc
out
outsb
mov
sub
sub
dec
sahf
into
and
ds
or
enter
enter
mov
push
dec
fs
jmp
rolb
xchg
add
out
lods
call
jmp
jno
mov
push
pop
sbb
cmp
push
adc
jno
fdivrs
add
lcall
in
jbe
add
jb
sahf
imul
mul
or
mov
aam
mov
fisttpl
pop
mov
mov
xchg
hlt
pop
xchg
leave
jbe
or
jle
sbb
enter
adc
xor
mov
cmp
xor
or
pop
mov
mov
xor
adc
push
pop
inc
mov
xchg
stos
push
pushf
and
shrl
mov
out
lea
std
les
cmp
pop
leave
mov
sbb
adc
hlt
push
sub
es
jg
mov
int3
mov
call
cmp
lret
xchg
shll
popf
jb
sbb
mov
hlt
sub
mov
in
xor
inc
xor
xchg
pop
xchg
test
mov
je
js
out
shlb
xor
adc
dec
push
icebp
cwtl
lea
movsl
jge
mov
imul
icebp
inc
es
dec
fwait
sbb
adc
cmp
lods
adc
xchg
mov
and
ret
fsts
mov
movsb
sub
lret
bound
adc
imul
jg
loopne
lahf
mov
xor
pop
jl
mov
les
add
sub
fimull
add
in
or
outsl
adc
scas
ja
fldt
mov
mov
icebp
xchg
ret
adc
outsb
mov
mov
push
shl
fimuls
fisubl
add
dec
and
insl
aaa
bound
pushf
dec
fiaddl
stos
cmp
mov
jns
push
push
inc
pop
sub
mov
test
and
into
je
sub
out
rol
xchg
ja
clc
into
notb
hlt
push
or
notl
insl
repnz
sbb
mov
jmp
leave
pop
int3
xor
sbb
jo
sbb
jb
sahf
out
xor
nop
xor
cmp
sub
arpl
or
mov
fstp
sbb
inc
jno
outsl
rep
enter
sbb
cltd
movsl
cmpsl
jne
sub
loop
jg
dec
cmp
iret
popf
scas
mov
dec
cmp
add
mul
mov
pop
rclb
ja
lock
cwtl
push
in
rcl
lea
mov
hlt
pop
int
popa
dec
cmpsb
xchg
inc
ljmp
dec
jae
fwait
mov
stos
xchg
jge
and
push
mov
test
aam
cmpsb
outsl
stos
std
mov
cwtl
lds
jmp
fcom
sbb
xor
enter
dec
push
movb
xor
mov
addb
xchg
cltd
shrb
lcall
jp
pusha
clc
push
div
arpl
sub
repnz
icebp
add
inc
repnz
and
out
jns
in
fnstsw
mov
jl
scas
loop
dec
cmp
add
rcrl
or
mov
jnp
xor
adc
add
stos
lcall
test
mov
mov
mov
jle
aad
int3
pusha
sbb
ss
sbb
sbb
cltd
in
xor
js
mov
inc
and
movsl
jb
add
sbb
clc
lss
xor
dec
jbe
outsb
jnp
movsl
xchg
and
dec
cmp
mov
mov
push
sub
gs
mov
mov
sub
mov
mov
fmulp
jns
pop
pop
neg
loopne
push
xorb
dec
xlat
or
adc
es
pop
sbb
outsl
pop
mov
xchg
stos
clc
pop
pop
test
sub
mov
pop
loope
add
push
gs
pop
sahf
inc
mov
push
into
adc
ljmp
daa
cmpsl
jnp
stc
in
aad
and
lock
lret
sbb
rcrb
push
data16
cmp
push
push
fdivrp
push
push
jecxz
adc
fiadds
icebp
sub
shlb
xchg
bound
cmp
aam
popa
mov
cmpsb
inc
btc
repnz
dec
mov
fstp
xorl
sub
xchg
cmp
ret
push
pop
xchg
inc
push
dec
jb
call
push
int3
sub
xchg
rsm
stos
repnz
loopne
cmpsb
out
insb
nop
add
mov
add
mov
pop
sahf
or
dec
bound
mov
test
sti
out
lcall
aaa
jno
pop
and
clc
sub
or
mov
push
scas
lahf
mov
movsl
orb
lcall
rcll
and
aas
push
mov
clc
jge
imul
jg
pushf
out
mov
mov
pop
int
lds
pop
and
pop
sarw
aaa
scas
shrl
fucomi
mov
rclb
clc
sbb
roll
mov
sahf
loopne
sbb
mov
popa
test
fwait
lcall
ss
vpmacssdql
and
push
pop
adc
pusha
into
jl
pop
rol
xor
add
and
lds
inc
mov
cmc
aas
test
sbb
mov
test
test
cmc
notl
xchg
mov
and
out
cld
das
sub
enter
std
dec
push
popf
stos
cmp
mov
cmp
f2xm1
cmpb
ja
jg
jbe
jmp
push
shlb
and
mov
mov
aam
stc
movsl
cwtl
mov
push
dec
out
rcr
cmp
cmp
cmp
xchg
mov
dec
adc
or
mov
fiaddl
popf
mov
outsl
inc
add
fidivs
cld
hlt
adc
sti
pop
iret
jbe
mov
outsb
xchg
cli
aaa
mov
in
mov
pushl
sbb
xchg
adc
icebp
shll
aam
mov
repz
loop
or
pop
adc
pop
test
sbb
mov
jl
dec
jge
shl
mov
div
adc
add
pop
int3
loopne
push
jno
jle
mov
aas
or
rorb
add
pop
fcompl
add
mov
push
lcall
ret
ret
dec
and
dec
iret
sub
mov
add
out
xlat
test
lock
mov
fistpll
in
lea
push
sbb
mov
adc
pushl
test
roll
sbb
icebp
mov
in
orl
mull
hlt
mov
dec
popf
jo
movsl
xorl
cmc
jo
sub
aaa
push
repnz
lds
js
cmp
rcl
cmp
sbb
repz
xor
cmp
and
jecxz
pop
lock
loopne
stos
or
sbb
jnp
int
out
mov
mov
stos
cwtl
push
fs
xchg
mov
les
pop
mov
movsl
stos
inc
lds
gs
shrb
push
mov
xor
ficomps
cmpsl
push
push
insl
fists
jle
data16
out
mov
les
pop
adc
sub
pop
pop
ljmp
pusha
xor
push
mov
or
push
mov
cmc
or
sub
stc
leave
roll
xor
in
mov
or
and
dec
xor
xor
es
mov
pop
adc
xchg
and
and
popl
sahf
xchg
xchg
mov
xchg
mov
push
jg
add
dec
popf
mov
sub
lcall
mov
js
xchg
and
movsl
mov
movsb
and
mov
xchg
sbb
rolb
inc
and
enter
jle
bound
mov
push
lods
pop
inc
setne
cwtl
bound
roll
pusha
add
and
xor
inc
cmp
cltd
mov
roll
sbb
sub
mov
js
push
xor
push
nop
iret
dec
xchg
int3
fnstenv
and
pop
or
adcb
add
cmpsb
stc
iret
xor
cld
inc
mov
mov
dec
fnstenv
or
cmpsb
sub
sti
adc
lret
aad
loope
or
or
cwtl
mov
or
xor
push
iret
shll
stos
mov
shlb
andl
or
lods
push
cmp
leave
pop
shrl
fdivr
sbb
dec
mov
inc
push
mov
cwtl
inc
cmp
inc
sbb
out
adc
inc
mov
xchg
call
lahf
movsl
push
inc
or
xchg
xor
test
stos
jle
test
inc
test
clc
xchg
repz
sbb
cmp
mul
add
and
ljmp
cmp
movsl
and
fidivl
inc
push
cwtl
push
jecxz
jle
adc
dec
jmp
xchg
and
mov
les
aaa
pushf
punpckhbw
cmpl
pop
cmpl
sbb
jmp
mov
sub
pushf
push
leave
mov
ds
jne
addl
mov
sbb
mov
popf
add
push
outsb
or
pop
sahf
push
in
insl
add
sub
mov
cs
les
cwtl
jmp
cltd
ss
xor
push
jecxz
out
adc
es
clc
inc
push
js
adc
dec
lahf
out
outsb
sub
lcall
or
mov
cmp
mov
jecxz
sbbl
rorb
aas
movsl
push
leave
mov
sub
pop
lock
sbb
fwait
loope
xor
cmp
or
arpl
pop
lds
fdivrl
adc
nop
test
and
mov
movsl
jns
sbb
cs
sahf
fucomi
pop
popf
bound
gs
cmp
outsb
mov
mov
pop
fiaddl
cli
xlat
or
jns
in
xchg
out
jl
sti
push
inc
or
mov
daa
jo
xor
inc
xchg
test
arpl
cmp
imull
cmpsb
inc
jb
pop
mov
mov
mov
cmpsb
insl
cmc
add
and
stos
ds
lea
loopne
scas
movsl
push
xchg
in
int3
popf
cli
jle
movsb
or
mov
xor
mov
mov
jno
add
jo,pn
fs
xor
or
movsl
sahf
lcall
push
xchg
mov
mov
hlt
fwait
dec
mov
stc
icebp
xchg
test
stc
or
mov
mov
mov
mov
push
aam
dec
push
and
icebp
add
xor
mov
cmp
xchg
lds
push
xor
inc
sbb
fdivrs
test
ljmp
insl
es
scas
push
xchg
dec
inc
fadd
push
out
test
and
out
add
mov
aad
lahf
pop
sub
inc
jp
jecxz
xchg
mov
pop
dec
bound
add
jmp
xchg
aad
jle
daa
pop
enter
loopne
popf
in
jl
js
popf
mov
test
push
mull
arpl
pop
cwtl
mov
shlb
xchg
mov
xlat
leave
mov
shlb
or
je
mull
aas
sbb
stos
inc
pop
sub
jnp
push
mov
xchg
mov
or
mov
add
and
jbe
xchg
jnp
ficoms
or
or
ret
and
rorb
push
jns
stos
and
inc
repz
add
imulb
outsl
xchg
subl
insb
rclb
adc
mov
ds
sbbl
adc
icebp
mov
test
adc
imul
pop
sub
je
pusha
jne
lea
inc
mov
mov
jb
and
insl
std
pusha
orl
adc
jae
cmpsl
xchg
push
pop
notl
fistps
adc
popa
ret
push
jnp
jae
push
xchg
ret
pop
mov
icebp
sub
das
inc
mov
jl
xor
outsb
js
imul
test
movsl
loopne
add
ds
and
sub
imul
lock
xor
loope
shrb
das
jmp
stos
adc
adc
sbb
mov
jno
insb
pusha
imul
pop
rcrb
fidivl
ret
jb
pop
lea
in
lock
push
push
and
pop
aaa
cmc
fs
gs
cli
lret
fiadds
add
cmp
or
push
aad
leave
xchg
clc
xchg
sub
mov
stos
fdiv
mov
pop
clc
ret
mov
mov
mov
jecxz
ljmp
iret
mov
fiadds
movsl
lret
or
mov
insb
cmp
jo
sub
add
jb
int3
mov
cmp
and
data16
and
mov
outsl
xlat
stos
cmp
sarb
mov
dec
sub
into
pop
cli
push
cld
mov
aad
mov
in
pop
or
inc
loopne
lret
lret
mov
pop
push
icebp
jmp
xchg
fwait
scas
lea
movsl
leave
xchg
adc
xchg
scas
mov
shll
mov
fsubrl
or
dec
daa
inc
and
call
jmp
and
je
sbb
adc
pop
sbb
mov
mov
out
mov
lret
xchg
pop
jno
dec
xor
insb
jge
divb
aas
push
lea
fldcw
jp
gs
or
xor
out
lret
rcll
jge
add
imul
sbb
pop
inc
mov
mov
aam
jg
or
jae
push
xor
and
arpl
dec
ja
xor
fists
fwait
add
nop
out
push
scas
lds
mov
addr16
imul
mov
sbb
shlb
add
and
sbb
aad
mov
shlb
clc
add
add
pop
push
mov
cmc
fstpt
adc
mov
and
icebp
mov
js
jp
ret
sbb
shlb
es
clflush
add
rol
dec
insb
outsb
and
push
dec
imul
or
sub
adc
daa
dec
pop
push
insl
jg
xchg
and
mov
dec
hlt
push
addr16
xchg
ljmp
jnp
scas
pop
dec
rolb
and
add
cld
popa
js
add
nop
mov
add
sub
cmp
arpl
repnz
xorb
aad
cmpsl
or
cmpsb
inc
decb
or
stos
and
fs
jmp
nop
sub
mov
lret
std
sbb
lods
cmpsl
mov
xor
add
push
cmp
xchg
xchg
fisubrl
loopne
xor
dec
jg
push
cmc
or
xchg
mov
sub
inc
or
outsl
adc
movsl
adc
inc
in
lea
ljmp
scas
push
popf
and
adc
lds
push
sub
jb
cmp
inc
popf
icebp
test
push
cltd
jns
stc
jnp
push
test
xchg
lea
ret
lret
fsubs
mov
jbe
xchg
pushf
and
mov
inc
jbe
hlt
out
dec
pop
or
scas
adc
mov
ret
sub
int
fbstp
sarb
pop
sar
out
sahf
mov
jne
push
pop
lret
mov
push
roll
cmpsl
xchg
and
mov
and
rcl
xlat
mov
insb
lods
jl
sub
lret
pop
dec
push
fldenv
loop
icebp
push
mov
aaa
xor
dec
or
sub
and
fidivs
rcrb
mov
mov
add
in
data16
rol
adc
mov
xchg
add
mov
loope
mov
mov
es
cmp
les
int
es
jb
lahf
xor
aad
lods
adc
movsl
push
movsl
cmpsl
loope
cmp
dec
xor
cltd
dec
pushf
dec
pushf
fstps
push
orl
iret
mov
test
inc
sub
adc
mov
push
mov
insb
aaa
addr16
push
es
jmp
cld
enter
sbb
insl
pop
test
arpl
sub
test
sbb
mov
push
sar
push
jmp
repz
sbb
cmpsl
pop
repnz
ja
cld
cld
pop
push
outsb
ret
test
int
push
ss
add
cmpsl
mov
fdivrp
mov
sbb
jo
in
xchg
cmpsb
xor
dec
fimuls
mov
int
mov
dec
add
les
xchg
push
dec
jbe
push
and
inc
ds
int
push
jl
and
cmp
in
orl
jb
out
lods
xchg
xchg
clc
test
xor
das
loope
aad
cmc
add
xlat
cli
xchg
decb
test
mov
pmovmskb
mov
icebp
mov
sub
inc
jo
imul
dec
adc
xchg
fisttpl
jg
pop
pop
fidivrl
xchg
jecxz
jns
jp
xchg
in
sbb
jne
rorl
outsl
inc
cmpsb
sub
xchg
xchg
rol
es
sub
cmp
scas
mov
les
jp
shl
or
pusha
cld
subsd
push
cli
icebp
push
jne
xchg
movsl
das
inc
push
and
dec
add
mov
jmp
inc
dec
nop
aaa
push
sbb
addl
jae
loopne
mov
pusha
mov
faddp
adc
pop
pop
js
jnp
jg
push
push
insl
pop
fstps
lcall
cmp
aam
mov
mov
fs
inc
stos
cwtl
add
aas
cmp
xchg
inc
fisttpl
fucomi
in
xchg
mov
movb
les
mov
push
pop
int
lret
xchg
jne
or
sbb
insl
test
xchg
in
and
cwtl
sahf
mov
mov
fstl
jb
out
daa
or
clc
das
movsb
imul
lret
mov
push
xchg
hlt
jge
mov
loop
push
popf
in
test
push
cmp
push
mov
imul
jae
xchg
adc
pop
cwtl
mov
fimull
cmc
std
insb
sub
jno
jp
rclb
paddusw
and
je
inc
hlt
cmp
mov
push
clc
push
dec
loop
enter
push
and
mov
xchg
or
pop
sti
cmpsb
inc
lret
mov
mov
inc
nop
adc
lock
imul
pop
or
pop
pop
sbb
inc
aaa
addr16
bound
xor
or
jmp
int
inc
mov
mov
out
sbb
cmpsl
outsl
jnp
lret
out
stos
shlb
aas
les
mov
adc
pop
mov
mov
sbb
jp
inc
ds
pop
cmp
loop
mov
ror
mov
cmp
test
adc
lea
pop
lock
int3
add
xor
into
push
jb
in
enter
dec
adc
xchg
mov
adc
sub
xor
push
pop
aas
imul
inc
cmpl
sbb
mov
mov
jge
jo
enter
jmp
std
stos
and
leave
fmull
mov
lret
les
movsl
stc
mov
xlat
mov
cs
lods
push
repz
xchg
orl
sbb
push
adc
outsb
sub
push
iret
rcr
adc
inc
pop
popl
in
or
subb
lret
loop
cli
in
cmp
jae
es
in
mov
push
test
mov
sbb
mov
mov
int
jge
in
pop
call
and
mov
and
fwait
sub
cmp
push
scas
lahf
xor
add
or
aas
fisubs
neg
jns
mov
lret
adc
scas
js
ret
je
jo
mov
jbe
fisubl
mov
stc
push
adc
mov
in
jbe
or
inc
loope
jo
fistl
fwait
mov
setge
and
jbe
repz
push
int3
adc
add
lret
xchg
lcall
cltd
imul
push
and
pop
out
add
mov
pop
push
mov
lcall
and
into
mov
aaa
cmp
fwait
mov
js
mov
inc
addl
sahf
jmp
mov
pop
push
adc
andl
scas
je
mov
sub
pop
sti
cmp
daa
dec
mov
push
push
enter
mov
mov
dec
sub
dec
mov
cmp
sti
push
in
cmpsb
and
push
dec
jno
xor
jne
shll
add
jl
mov
test
lret
call
fbld
jl
rcrl
push
out
mov
or
push
into
rolb
lret
imul
scas
bound
rcrl
and
aad
xor
je
cmp
xor
xor
jbe
in
fcomps
imul
cwtl
icebp
jnp
lods
or
push
decl
mov
mov
xor
mov
jecxz
mov
mov
mov
jmp
inc
mov
sbb
jle
dec
mov
aaa
pop
pusha
lock
inc
pop
enter
push
inc
sarb
cmp
add
adc
lds
xchg
mov
sti
jmp
ja
pusha
sbb
movsl
push
cmpsl
cmp
mov
loop
mov
and
jge
fnstsw
icebp
inc
mov
jl
bswap
in
mov
into
js
mov
imul
add
xor
inc
mov
sbb
fs
adc
push
adc
aam
fdivrs
sbb
sub
mov
sarl
into
mov
cmp
adc
mov
imul
inc
add
push
push
lcall
ret
inc
add
popa
cli
sti
test
and
mov
lcall
cs
imul
mov
adc
and
jne
mov
sti
out
mov
jns,pt
dec
xor
mov
fsts
sub
push
hlt
jle
fistpl
es
std
ja
es
cmpsl
stos
mov
push
lods
in
ljmp
outsl
xchg
shrl
adc
loope
sbb
cmc
push
mov
push
cmc
repnz
jecxz
insl
dec
loopne
repnz
std
out
in
ret
jnp
cwtl
sbb
in
pop
in
mov
in
fwait
addb
lret
push
dec
pushf
or
push
xchg
sbb
int3
fucomi
cmpsl
fsubr
cmp
repz
iret
inc
shrl
lds
jecxz
xor
mov
mov
and
mov
lahf
aad
pop
lcall
push
push
push
aas
add
setnp
popa
dec
pop
push
cmp
xlat
and
lods
sub
loope
fimull
cmp
sub
xor
lahf
ljmp
or
dec
dec
xorb
push
xchg
popa
icebp
dec
sbb
pop
push
hlt
js
int
into
notb
mov
dec
jl
xchg
inc
push
pop
addr16
jno
loope
dec
cmp
insl
push
je
sti
icebp
lret
loopne
repnz
cmp
ja
dec
mov
lahf
and
cmpsb
stos
repz
sbb
in
dec
xor
sbb
daa
icebp
xor
cmp
mov
xor
jge
lods
fwait
cmpsl
pop
jo
pop
push
inc
xor
xchg
dec
inc
in
out
icebp
cmpl
inc
shl
mov
push
leave
popf
jecxz
jmp
or
leave
out
mov
dec
sbb
mov
ss
enter
jb
dec
cli
mov
std
cmp
or
or
fmul
imul
inc
cmp
shl
cmp
fldcw
repnz
xchg
inc
test
fbstp
jae
jge
test
insl
lcall
and
push
loopne
fiaddl
add
clc
cmc
mov
mov
aam
shl
je
mov
loope
cwtl
jae
andb
insl
jo
xchg
mov
and
xchg
daa
es
mov
xchg
lods
data16
test
jecxz
daa
inc
in
dec
and
test
or
fdivl
add
repz
rorb
add
rorb
ja
popf
xor
popa
jge
sub
sub
jno
push
hlt
lea
out
and
icebp
sbb
jnp
or
cli
lods
lret
push
adc
bound
sbb
jmp
cli
fcompp
clc
inc
daa
push
adc
data16
push
test
inc
jge
jecxz
dec
aam
leave
sub
ret
jg
or
add
loop
fisubl
arpl
xor
dec
cld
push
pop
das
gs
insb
mov
sbb
inc
int
sub
jae
jne
hlt
movsb
add
jne
sub
jg
cmp
mov
arpl
outsl
fsubr
or
outsb
pop
daa
stos
add
xchg
pop
sub
repnz
mov
out
sarl
outsl
loope
adc
sti
jb
pop
stos
cltd
mov
push
sub
int
jne
stos
les
push
cmpsl
add
mov
flds
jo
sub
push
mov
jbe
dec
pop
fadds
push
and
sbb
fwait
je
xchg
xchg
repz
cmpsb
push
jnp
mov
sbb
popa
ror
into
mov
mov
shrl
lret
mov
cs
pusha
mov
pop
out
xor
pop
and
pop
mov
arpl
xchg
mov
push
mov
iret
xor
cmp
jnp
leave
mov
dec
repnz
mov
dec
jmp
andb
es
adc
jae
adcb
ret
push
scas
adc
mov
inc
test
sub
in
and
inc
outsl
pop
fisubrl
sarl
loop
mov
fldt
shll
xchg
push
repnz
cmpsl
fmull
pop
add
lcall
adc
outsl
ja
xor
mov
movsb
aas
pop
or
ret
aaa
mov
roll
icebp
mov
dec
jne
cltd
xchg
jae
sahf
jns
imul
xchg
xor
cmc
fnstenv
rolb
push
test
int3
dec
mov
and
inc
imul
pop
pop
lock
jmp
js
and
xchg
pop
test
stos
in
ja
cmpsl
push
out
mov
or
outsb
jbe
xchg
clc
add
pop
fwait
lock
sub
sahf
data16
fildl
mov
xchg
out
aas
popf
fs
xor
push
jmp
das
mov
and
mov
mov
and
cmc
cmpsb
jle
rcll
fsubrs
cld
stos
insl
mov
repz
movsb
dec
popw
movsl
cmpsb
jb
iret
in
loope
cmp
daa
pop
inc
adc
popa
movsl
sub
mov
lret
add
daa
int3
shlb
fildl
mov
cld
pop
cli
xlat
popf
mov
cmp
inc
insb
adc
or
pushf
xor
movsb
add
mov
stos
mov
cltd
popf
mov
lock
jb
mov
test
bound
fs
xchg
xchg
dec
call
jmp
andl
push
mov
xchg
push
jb
icebp
or
jecxz
arpl
dec
inc
xchg
mov
dec
sbb
push
insl
mov
mov
xor
sarb
xchg
loope
sahf
fists
outsb
sub
sub
push
push
mov
pop
jl
test
test
xchg
subb
es
imul
or
mov
or
je
sub
movsw
lcall
mov
cmovl
lcall
and
dec
movsb
insb
xabort
not
mov
lods
out
cli
push
cwtl
movsl
xchg
ss
pop
sbb
lcall
inc
cltd
iret
mov
mov
dec
decb
pop
add
mov
pushf
jae
mov
push
fcoms
ljmp
cli
xchg
pop
pop
jbe
mov
cmpsb
test
push
mov
xchg
sub
or
paddb
dec
dec
fimuls
and
pop
mov
fwait
int
mov
in
jnp
lcall
or
shll
sub
ret
jnp
fwait
or
insl
outsl
ljmp
insb
add
push
mov
lods
loope
aas
fwait
sub
das
and
sbb
insb
mov
out
data16
add
push
mov
and
inc
jbe
mov
lods
inc
in
or
loop
sbb
jbe
pop
hlt
sbb
mov
pop
loope
mov
in
fwait
fwait
mov
jg
xchg
nop
enter
mov
andb
dec
push
pop
lret
xor
xchg
addr16
sub
aad
aad
ja
fldenv
push
lock
inc
imul
or
mov
mov
stos
outsb
sub
pop
leave
inc
call
or
in
das
mov
sbb
xchg
mov
lahf
fs
pop
enter
imul
push
mov
xorl
mov
movsl
mov
in
cmpxchg
sbb
add
insb
pop
xchg
test
and
add
aad
add
jno
mov
movsb
sub
pop
jmp
sbb
pushf
leave
xchg
jnp
jmp
and
stos
pop
xchg
adc
xor
mov
cli
jno
sarb
pop
call
sarl
or
sti
fisubrs
xchg
push
xor
mov
push
inc
loope
mov
jbe
jp
pop
push
add
push
lret
mov
cmpsl
andb
jno
sub
rcr
ja
or
mov
fidivs
aas
out
sbb
icebp
inc
mov
jo
enter
lock
push
out
dec
cmp
dec
sarb
lret
stos
xchg
lret
xchg
test
mov
js
pop
movsb
inc
push
pop
xlat
inc
xchg
push
out
stos
movsb
lcall
jp
dec
movl
xor
lods
and
and
and
fstpl
xchg
and
cli
add
pop
pop
fistps
aas
pop
stos
sub
jae
xchg
xchg
aaa
xchg
xor
fstps
int3
aaa
xor
cli
loopne
adc
mov
int3
pop
ds
xchg
or
repz
mov
add
movb
pop
ljmp
cmp
add
pop
mov
sbb
jge
xor
pop
les
push
movsb
mov
shrb
mov
lods
jge
outsl
arpl
mov
push
data16
jp
lret
cmp
xchg
dec
or
inc
imulb
dec
lods
data16
shrb
dec
mov
pop
mov
int
repz
xor
enter
mov
jns
mov
sub
push
js
fdivs
push
ret
sahf
sub
add
shlb
xchg
dec
ljmp
jo
and
mov
repz
dec
push
cmpl
cs
push
js
jle
mov
pop
lods
mov
clc
loope
arpl
cmp
cli
jno
sub
xor
inc
rcll
pop
sub
fisubs
into
out
add
nop
mov
arpl
xchg
sbb
mov
lret
xlat
sub
daa
mov
xchg
inc
inc
xor
pop
ja
cltd
stos
loope
int
and
jbe
loope
jle
adc
push
adc
xchg
stos
fists
xchg
fld
jle
pusha
sahf
add
int3
add
xchg
sub
sub
pop
cmpsl
into
orl
and
cmp
lret
and
movsb
xchg
and
arpl
add
xchg
ret
icebp
stc
ljmp
fisubs
cmpsl
push
mov
das
sbb
mov
adc
sub
cmp
push
popf
imul
inc
adc
subb
aad
and
popf
iret
or
push
outsb
and
movsl
dec
rol
adc
jne
int
clc
jns
cmpsb
xchg
mov
jg
sub
gs
inc
pop
sbb
sub
xlat
sub
cmp
sarb
sbb
dec
clc
mov
sub
orb
pop
andl
mov
inc
mov
dec
mov
jg
jno
outsl
enter
out
ret
inc
and
sbb
pushf
movsl
pop
jae
add
cmpsl
dec
inc
gs
mov
aaa
ja
int
push
andl
lock
add
mov
jo
pop
mov
xchg
sbb
jnp
add
dec
loope
imul
int3
push
jle
repnz
repnz
pop
push
inc
sbb
gs
int
stos
outsb
popa
push
test
pusha
xor
pop
les
mov
jbe
arpl
or
in
pop
xor
jo
movl
inc
mov
mov
stos
and
mov
arpl
lds
mov
xchg
pop
insb
or
mov
pop
scas
adc
shll
cmp
loop
jmp
fcompl
pop
inc
adc
push
mov
pop
dec
xor
in
decb
cmp
mov
les
pop
xchg
in
mov
ja
test
loope
jp
in
mov
mov
aaa
rcl
adc
stos
and
test
test
pop
sub
sbb
and
in
ljmp
mov
adc
int
push
sbb
push
inc
cmp
xchg
cmp
stos
mov
cmp
mov
lcall
or
ror
adc
pop
mov
ljmp
andb
test
movsb
lret
call
clc
call
adc
pop
test
ret
sbb
dec
iret
lea
rorb
outsl
pop
lods
sbb
iret
fcoms
loop
aad
subb
fs
test
push
xorb
repnz
out
enter
add
or
jne
adc
mov
add
sbb
loopne
and
test
int
cltd
mov
and
inc
loop
pop
gs
test
mov
dec
and
insl
cli
jecxz
mov
cmc
inc
ds
or
dec
gs
inc
xchg
xchg
jge
cmp
rolb
mov
xchg
fcomps
orl
jns
sbb
and
fldt
fcmovbe
orl
push
test
scas
dec
jg
insb
mov
cmp
leave
mov
mov
aad
in
jg
mov
xor
mov
cmc
add
sbb
aas
mov
mov
outsb
ljmp
add
jbe
push
dec
add
dec
dec
pop
and
jae
xor
ljmp
lret
jl
call
ret
or
addr16
add
jg
jmp
sub
cmp
cmp
xchg
push
push
ljmp
mov
and
cld
out
xor
jmp
pop
stos
lret
pusha
jmp
sbb
and
cmp
lret
push
mov
vpunpcklwd
push
sbb
cmp
cmp
cmp
pop
call
inc
mov
and
mov
lods
lock
out
xor
repnz
adc
xchg
and
outsb
mov
outsl
daa
dec
arpl
fstp
or
inc
bound
or
or
arpl
in
loope
inc
jo
mov
and
xor
and
lcall
jns
ljmp
movsl
insl
xchg
ja
mov
xchg
mov
push
cmp
cmp
xor
pop
ret
sbb
add
loop
xchg
cmp
xor
xchg
test
test
fisttpll
mov
pop
sbbl
add
sbb
or
adc
xchg
sbb
lea
xor
scas
xchg
xchg
jge
aas
lods
ds
test
imul
int
and
mov
jno
jmp
cmc
mov
push
mov
xchg
pop
add
in
cmp
push
daa
stos
jmp
mov
xchg
loope
sbb
cltd
mov
lock
push
fdivs
imul
pushf
jbe
lea
lods
pop
je
setb
mov
add
and
daa
push
shlw
popa
add
pop
aad
or
pop
adc
jbe
push
inc
adc
dec
and
gs
fdivrl
into
push
daa
icebp
ja
fnsave
jno
xor
ret
jo
fcmovbe
out
mov
jo
int3
outsl
bnd
xchg
sub
jns
sbb
mov
sbb
sub
jle
stos
orl
and
jl
sub
in
ds
aad
cs
insb
aad
mov
add
pop
ret
mov
cmp
and
ret
push
adc
movsb
daa
xor
mov
cmp
mov
daa
xchg
mov
cs
cmp
fwait
sbb
sbb
adcb
out
mov
dec
mov
lahf
jns
insl
in
test
mov
lret
mov
add
test
popa
mov
pop
jno
jns
sub
xchg
outsl
outsl
mov
xchg
and
out
movsb
stos
les
je
js
xlat
pop
je
sbb
mov
xchg
mov
lods
movsl
lcall
sbb
dec
xor
out
call
aas
dec
outsl
cmc
hlt
je
test
fwait
jl
mov
push
scas
das
out
popa
cs
cmp
out
xchg
out
mov
div
mov
xchg
add
test
pusha
jnp
pop
mov
or
inc
orl
add
adc
jg
and
jge
int
xor
inc
pop
mov
jno
dec
pop
sbb
jmp
push
cmp
mov
mov
imul
out
lahf
outsb
iret
insl
hlt
test
loopne
popf
pop
sbb
test
xchg
bound
mov
cmc
bound
clc
push
mov
adc
enter
je
out
in
into
sub
sbb
mov
dec
cli
push
adc
or
idivl
mov
dec
add
mov
cmp
push
popa
mov
push
fisttps
cli
repz
push
jg
xchg
rolb
dec
push
sbb
lock
xcrypt-ofb
cmpsl
jmp
ret
xor
fisttpl
adc
or
push
stos
xchg
or
xor
scas
js
cmpsb
pop
sbb
vmovntdq
in
jno
dec
lahf
insl
xor
xlat
xchg
mov
xchg
and
ds
pop
inc
and
aaa
incb
dec
insb
scas
insb
pusha
push
dec
imul
mov
mov
incb
pop
cmp
adc
jp
xor
and
gs
ret
fs
pushf
jle
leave
xchg
aaa
mov
adc
sbb
and
push
inc
sbb
xor
push
test
out
fcom
jecxz
shll
push
xchg
or
std
or
lea
xchg
push
mov
out
lods
mov
and
or
sbb
add
fwait
xlat
jge
push
push
out
dec
mov
mov
ret
cmpl
pop
push
lods
aam
ss
popf
gs
fbld
addr16
flds
xor
and
ds
xchg
pop
xchg
inc
push
push
mov
mov
sub
inc
xor
scas
shll
cltd
enter
jbe
pusha
rorb
xor
outsl
pop
or
xchg
jl
outsl
aad
xchg
adc
aad
dec
add
lods
das
xchg
adc
xchg
or
mov
or
push
lds
sbb
mov
sti
add
or
mov
fidivs
outsl
aam
or
aam
ficoms
pusha
test
push
pop
and
imul
pop
mov
xor
cmpsl
adc
jmp
pop
cld
lock
or
jns
adc
xchg
fs
add
sub
adc
or
add
jo
aaa
aad
daa
and
int3
sub
jns
mov
pop
jbe
je
scas
cmp
sti
sub
jg
dec
aaa
xchg
cli
sbb
or
mov
cmp
cmpsb
push
std
rcrl
add
push
mov
pop
arpl
mov
ja
mov
jg
mov
dec
add
int3
inc
push
jbe
int3
push
mov
xor
pop
sbb
add
scas
lods
jnp
in
mov
push
and
pusha
fiadds
jg
and
inc
stos
js
fists
jge
ret
sub
inc
cs
push
jns
xchg
pop
cltd
cmp
add
pop
xchg
pop
jne
arpl
fdivrs
xchg
or
dec
add
xchg
je
sti
pop
test
out
inc
aaa
adc
sbb
leave
outsb
loopne
push
movsb
arpl
pop
cmpsl
scas
adc
es
inc
xlat
push
mov
jp
arpl
inc
roll
add
xor
or
cmc
bts
rol
jmp
or
das
lret
data16
leave
out
xor
jp
aaa
lock
idivl
mov
add
xor
xchg
sub
cmp
pop
int
popf
sub
cmpsb
in
mov
cld
mov
aaa
mov
mov
sub
push
jne
notb
jl
inc
int
jle
jae,pn
jp
das
mov
xchg
dec
scas
cmp
lret
mov
lods
aam
and
xchg
xlat
jge
cmp
push
push
add
shll
sti
insl
jg
and
dec
xor
lahf
push
push
adc
jmp
jno
sti
lea
pop
ret
ja
mov
or
in
and
dec
mov
sub
pop
adc
adc
inc
lcall
enter
inc
add
sahf
and
push
fiaddl
mov
mov
jge
fldl
stc
sbb
clc
cs
int
lret
cmp
push
push
js
arpl
sbb
orb
xor
call
ss
inc
jns
cmp
daa
pushf
test
xlat
negl
push
mov
sahf
addl
nop
push
fsubl
jno
test
dec
mov
dec
cmp
insl
leave
std
push
push
std
iret
lock
jbe
scas
jns
lock
test
add
jmp
sub
rcl
dec
adc
inc
sub
dec
popa
mov
insl
sbb
jp
fwait
lock
out
adc
aam
xchg
int
sub
jecxz
xchg
sbb
cmp
inc
sbb
sbbb
call
cmp
addr16
aaa
rcll
sub
lahf
xchg
loopne
adc
cmp
in
push
pop
push
dec
inc
shll
cwtl
cwtl
lock
ljmp
movsl
out
iret
ret
dec
fisttpl
sahf
cwtl
jne
push
dec
fsubl
cmp
loopne
cmp
sub
clc
in
call
rcrl
sub
pop
or
or
cli
sub
sti
jmp
fwait
or
cmp
lret
xchg
sub
mov
xlat
add
push
add
cwtl
inc
int3
fisttps
inc
stc
xchg
jno
stos
adc
push
iret
mov
out
sub
lcall
rorl
fcmovbe
jnp
mov
std
repz
subb
mov
pushf
adc
mov
fmull
aas
dec
iret
dec
fisttps
jno
enter
add
adc
test
fcomip
sbb
push
ljmp
fadds
aas
andl
adc
xchg
mov
dec
or
addr16
and
mov
xor
pop
daa
cmp
mov
jae
mov
outsb
das
or
cmp
dec
xchg
addr16
sbb
jge
lods
jne
rol
inc
loopne
mov
gs
push
sub
dec
mov
outsl
cmp
scas
push
mov
xchg
int3
add
adc
iret
jno
addr16
out
lret
movsb
in
jle
into
in
aad
mov
sti
movsb
loop
inc
js
inc
fcomip
imul
cmp
xlat
outsb
inc
jns
mov
pop
into
mov
mov
xor
dec
push
pop
mov
int3
insb
mov
imul
lods
pop
pop
fisttpll
cmp
sbb
jnp
and
fcoms
fs
shrl
loope
inc
movsb
inc
ss
xor
or
adc
sbb
loope
mov
outsl
jne
push
mov
aaa
add
adc
fimuls
dec
xor
enter
insb
push
lea
clc
cltd
cmpsl
mov
je
imul
iret
sbb
mov
and
test
ds
cmp
adc
in
cmpsb
mov
sub
scas
adc
imul
pop
dec
shll
shll
push
daa
js
add
xrelease
sub
lret
jg
int3
mov
xchg
imul
pop
mov
shrb
sti
cmp
xor
xor
jns
xchg
pop
outsb
xchg
insb
sti
js
or
cld
loopne
aas
leave
out
arpl
lods
paddusb
lcall
sbb
or
jne
jecxz
into
js
pop
cli
jae
shll
fdivrl
test
mov
leave
std
jb
aam
mov
sarb
and
cmpsl
dec
cmc
sbb
sbb
sub
add
pushf
dec
arpl
xor
test
loope
nop
in
call
inc
fwait
dec
cmp
and
jbe
xor
addb
dec
out
sub
sub
movl
lret
and
jmp
and
inc
inc
add
push
dec
je
idiv
or
cld
add
adc
test
or
mov
pop
dec
in
sub
lods
push
lds
aaa
pop
adc
mov
addr16
push
repnz
std
in
dec
sbb
xchg
negl
fwait
imul
sbb
nop
fildl
dec
add
js
sbb
cmpsb
rolb
sub
cmp
jle
in
or
adc
mov
jbe
int3
pop
jns
loope
push
xchg
lods
xorl
pop
pop
inc
push
aas
js
stos
adc
ljmp
pop
fadd
pop
sti
dec
add
cmp
lods
mov
mov
lock
lods
inc
mov
out
cld
inc
jnp
lock
and
xor
std
inc
mov
mov
std
mov
fs
xlat
std
scas
or
sub
test
mov
dec
sahf
or
cld
cld
aad
ljmp
jo
in
mov
push
bound
movsl
xchg
inc
jge
mov
mov
sbb
mull
mov
sub
scas
addr16
sub
pop
movsl
sub
lock
movsl
xchg
dec
pop
cmp
push
dec
jle
adcb
int
daa
or
inc
xor
inc
inc
mov
data16
dec
in
inc
pop
test
ljmp
in
in
or
mov
mov
mov
and
and
pop
pop
lds
inc
sbb
sub
mov
je
cmc
vcvtss2sd
cmc
cmp
or
ret
cmp
lcall
or
lret
sbb
mov
int
or
dec
dec
adc
xchg
xchg
jb
xchg
jae
repz
jg
xorb
jb
and
pop
ffree
mov
or
lods
andl
inc
sbb
adc
inc
inc
mov
inc
aaa
or
pop
cmpsb
insl
push
push
outsb
push
addl
mov
jo
cmp
fmuls
and
jp
lcall
xchg
gs
mov
inc
sub
lods
xlat
loopne
push
cs
mov
lcall
push
je
add
inc
add
sbb
lret
dec
cli
enter
dec
iret
cmp
mov
cmp
lret
subl
mov
add
mov
mov
dec
scas
inc
push
and
iret
fists
fsubrp
lcall
js
xor
enter
in
mov
pop
xor
mov
add
cmp
mov
ss
or
enter
push
sarl
repnz
pop
mov
and
push
mov
adc
sarb
icebp
dec
and
rcrb
add
sahf
insb
cld
lret
jns
ret
dec
inc
in
jns
ljmp
mov
pop
fdivs
jae
dec
fcomps
jle
nop
stc
and
popa
and
jle
sub
in
jo
push
clc
cli
or
inc
pushf
add
fwait
cmc
mov
sbb
jl
aaa
xor
test
fidivl
xchg
mov
pop
sub
jp
aaa
mov
fs
add
adc
icebp
stc
pop
adc
adc
push
xchg
push
addr16
iret
ja
jl
jne
insb
dec
push
hlt
push
xchg
addr16
mov
jne
jne
rorb
xchg
push
jmp
push
mov
push
ret
sub
inc
outsb
push
out
aaa
ljmp
out
fnsave
frstor
cmpsl
jecxz
push
pusha
call
dec
pop
push
cld
out
mov
es
testl
lds
clc
cmc
sub
xchg
jae
imul
pop
and
aam
std
jno
cmpsl
xor
mov
pop
orb
mov
sub
mov
je
push
cmpsl
xchg
mov
pop
or
xchg
loope
jno
and
xchg
pop
mov
mov
out
push
ss
dec
dec
mov
andl
or
out
mov
adc
pushf
sub
add
loope
adc
pop
sbb
pushl
ffree
fcmove
out
adc
xchg
mov
jp
fimull
adc
mov
sub
xchg
fimuls
or
ret
sbb
dec
cli
or
inc
jg
je
jbe
mov
fs
add
cmp
lahf
lret
sahf
sbb
cmp
pop
into
xor
pop
or
mov
ret
pop
add
stos
fildll
negb
or
rol
mov
pusha
les
dec
aaa
lret
mov
push
in
pop
notb
and
leave
popf
lahf
fwait
sbb
stos
push
lock
mov
jmp
cmp
mov
xchg
xor
sarl
push
lods
push
push
repz
and
cld
ret
frstor
cmp
test
insb
lahf
lret
jno
fisubl
jle
dec
nop
popa
mov
adc
xchg
mov
loop
push
insb
stos
cmp
mov
push
lahf
cmpsb
mov
dec
fs
sarb
jmp
xchg
cmp
pop
push
xchg
lea
fiadds
out
xor
test
add
push
stc
sub
xchg
arpl
push
mov
notb
push
out
mov
loopne
aam
add
xchg
sub
mov
dec
bound
adc
stos
mov
lods
test
dec
sbb
mov
movsl
and
and
xor
or
out
and
ja
add
xchg
sub
mov
mov
inc
js
loope
add
mov
sub
mov
mov
xlat
jo
push
loope
incl
xchg
ja
mov
lret
push
js,pn
in
pusha
fmul
mov
mov
ret
js
add
addr16
mov
es
stc
in
nop
repz
je
repz
push
fwait
and
pop
xor
mov
test
scas
mov
pop
int
and
aam
and
mov
leave
clc
push
iret
icebp
jmp
adc
ja
cmpsb
out
or
push
dec
push
fdivs
nop
loope
add
pop
dec
pop
lahf
xchg
pop
fs
fsubrl
je
mov
out
test
cmp
push
clc
adc
in
pop
xchg
es
stos
mov
jno
bound
push
iret
loop
dec
cmpl
xchg
mov
adc
hlt
aaa
cli
jl
mov
nop
orb
cmp
stos
out
sbb
pushf
push
and
mov
sbb
je
xor
outsl
cmpb
mov
mov
jmp
sub
xor
pop
and
scas
outsl
ret
adc
fs
push
lock
or
into
dec
cmp
pop
xchg
xchg
mov
popa
inc
and
or
xlat
and
dec
icebp
inc
push
or
scas
cmp
gs
movsl
aas
xchg
out
cmp
jb
sub
sbb
shlb
out
xchg
mov
leave
sbb
pushl
outsb
imul
aad
add
lock
adc
adc
outsl
and
push
lret
ja
push
outsl
xchg
add
mov
xor
movsb
pop
mov
fwait
xor
into
mov
adc
add
inc
shl
inc
call
stos
add
add
inc
fldt
push
mov
fdivs
jl
cmp
repz
xchg
sbb
movl
adc
push
xor
sub
push
cwtl
fmul
dec
mov
mov
ljmp
push
lea
xchg
add
mov
cwtl
scas
bound
jb
les
inc
sbb
add
mov
je
sub
dec
pop
push
mov
js
pushf
daa
inc
xor
cmpsb
stc
pop
push
add
fsubs
stos
call
add
xchg
out
fldcw
arpl
adc
gs
push
retw
rorl
cmp
lea
or
add
adc
push
inc
cmpsl
inc
sub
mov
dec
imul
dec
jg
lahf
ret
pop
mov
mov
imul
jle
loopne
loope
inc
mov
into
xchg
or
loope,pt
rolb
inc
popf
test
lock
daa
mov
and
aad
adc
adc
pop
lock
pop
push
and
adc
scas
mov
insb
adc
imul
mov
stos
xlat
in
add
push
pop
loop
aas
pop
sti
sub
fxch
mov
mov
fcomps
mov
out
das
je
xchg
rorb
jp
push
scas
pop
ljmp
xchg
addr16
inc
ds
jl
stos
movsl
xchg
add
add
xor
leave
sbb
xchg
add
fsubr
xchg
bound
push
int
xchg
and
mov
movsl
mov
inc
nop
cmpsb
ljmp
jb
icebp
mov
pop
in
lret
mov
push
movsb
pop
jnp
mov
popa
cmp
jns
out
cltd
xor
popf
xor
lea
in
xchg
mov
out
in
incl
sbb
mov
inc
jp
mov
mov
out
jns
mov
push
lods
inc
inc
imul
inc
xchg
pop
adcl
or
and
into
jg
dec
hlt
xchg
jmp
push
sub
pop
stc
notb
mov
cmp
mov
fldenv
dec
adc
stos
fstl
fiadds
cs
clc
add
ljmp
jnp
ljmp
fimull
decb
push
out
ret
jmp
nop
mov
mov
gs
mov
adc
loopne
inc
xchg
sbb
jp,pt
xlat
jmp
subb
mov
add
rclb
dec
ret
out
adc
dec
sbb
add
mov
fcmovnbe
mov
movb
pop
iret
inc
test
push
mov
je
adc
push
shll
fidivl
xchg
pushf
pop
and
sub
sbb
lcall
pushf
shrd
or
add
popf
add
pop
int
test
lds
sub
cmp
xor
mov
mov
pop
mov
popa
js
decb
cwtl
clc
aaa
push
sarb
mov
add
shlb
in
lds
mov
pop
adc
fidivs
in
sub
mov
fwait
pop
and
iret
or
imulb
icebp
mov
xchg
dec
push
mov
sbb
loop
fimuls
cmc
add
mov
insl
mov
xlat
or
jnp
push
iret
popf
push
fistpl
add
or
dec
push
scas
lea
xchg
mov
inc
dec
mov
and
sbb
push
mov
and
subl
mov
jmp
sub
sbb
mov
sbb
jmp
je
or
filds
enter
jb
xchg
pop
icebp
loope
or
xchg
insl
aad
out
lods
and
jo
pusha
in
stos
lds
mov
test
in
es
add
push
imul
loope
inc
pop
pushf
xorl
inc
sbb
pop
icebp
into
sub
shlb
inc
xchg
shlb
aam
pop
and
xor
dec
mulb
maskmovq
mov
mov
or
jnp
fcos
mov
add
pop
mov
loopne
mov
xchg
inc
jp
push
jp
bound
sbb
cld
in
jecxz
mov
sbb
es
mov
ds
ljmp
je
push
pushf
in
ljmp
cli
add
mov
dec
jge
lahf
inc
les
jne
xchg
push
popf
or
add
cmp
lret
or
adc
int3
inc
cmp
aas
or
cmpsl
insl
fisubrs
es
rorl
jg
sub
cmp
mov
adc
mov
mov
cmc
call
mov
iret
add
int
mov
cmp
mov
cmp
or
cmp
pop
les
mov
add
cltd
push
inc
stos
daa
or
sbb
cmp
ss
sbb
sub
jge
xor
mov
sub
enter
xlat
add
cmpl
movsb
mov
xchg
jp
adc
les
subb
mov
cmp
cwtl
enter
orps
dec
shr
jb
xlat
add
fnstcw
sbb
jns
xchg
lret
pop
out
stos
adc
sub
mov
xchg
cltd
sbb
addb
add
dec
jmp
xor
std
pop
out
mulb
or
dec
xor
xor
mov
sbbl
cwtl
mov
mov
shrb
add
xor
subb
jmp
gs
into
cmpb
iret
mov
mov
xchg
push
scas
movups
aad
inc
lock
nop
push
leave
iret
repz
rcrl
fs
push
and
adc
out
iret
push
xor
repnz
jns
add
add
lds
out
ljmp
decb
cmp
sub
adcl
jns,pt
dec
mov
pop
push
daa
cltd
xchg
cmp
test
and
scas
jae
pop
jno
jmp
je
mov
pop
push
mov
dec
sbb
or
lcall
push
push
arpl
cmp
sbb
sahf
subb
pop
push
aas
roll
mov
into
in
mov
test
add
nop
lret
sbb
sahf
mov
dec
cmpl
ja
add
cmp
xchg
out
in
cmpsl
mov
add
adc
fld
xlat
loop
xor
mov
cmp
rcrb
dec
pop
hlt
inc
or
sahf
in
sbb
jg
inc
pop
into
or
cmp
loope
lret
jbe
fwait
stos
test
mov
jl
int
in
icebp
push
pop
pop
mov
push
mov
mov
and
inc
lock
dec
mov
inc
aaa
push
mov
lods
in
pop
daa
xchg
and
fwait
mov
sub
sub
push
push
mov
cli
lret
xor
jbe
pop
or
mov
or
cwtl
mov
cli
jle
dec
repz
xchg
sbb
mov
fnstenv
fs
push
push
cmp
repnz
cmp
push
nop
xor
xlat
mov
out
inc
mov
xchg
adc
mov
test
xlat
arpl
jae
mov
sub
das
xchg
cmp
dec
adc
out
fcmovu
jl
sbb
ja
sbbl
push
lds
or
sbb
push
adc
mov
and
ss
int
int
push
xor
and
ja
cs
xor
movsl
sti
sbb
hlt
dec
sbb
outsb
xchg
scas
sub
jl
scas
jo
or
jae
push
addr16
push
into
xor
repz
add
mov
pop
cmp
xorb
je
es
sarb
das
pop
cltd
xchg
or
mov
sbb
sahf
mov
into
mov
xchg
mov
xchg
add
dec
mov
testl
and
imulb
or
inc
sub
aaa
xchg
add
push
jns
sbb
and
fisubrs
iret
ss
lret
sub
fidivl
stc
cld
bound
mov
in
fsubrp
in
or
dec
jns
frstor
and
sub
mull
xchg
sti
shr
pop
pop
push
mov
push
pop
xor
int
or
cmp
out
daa
enter
popf
je
mov
xchg
repz
cmp
ret
cmp
sbb
xor
inc
mov
data16
adc
arpl
sub
faddl
cltd
scas
inc
ja
inc
add
xor
adc
jmp
cmp
push
dec
je
xor
sub
inc
adc
cli
and
push
aaa
js
xor
shll
cmp
fwait
xchg
das
inc
cmp
cltd
push
sub
xor
jno
jns
sub
and
popf
shrb
push
and
sub
std
int
mov
pop
mov
imulb
jle
negl
jns
test
mov
pop
neg
jne
xor
push
int
inc
sahf
sub
adc
push
adc
pushf
daa
mov
push
outsl
mov
cmpsb
sbb
or
adc
enter
dec
xchg
add
movsb
andl
stos
enter
jbe
pusha
daa
push
xor
dec
lods
pop
dec
lods
lcall
push
popa
add
mov
js
push
dec
push
rolb
popa
push
push
ja
mov
push
mov
rorl
push
mov
inc
adc
in
arpl
fmuls
cmp
fwait
orb
or
fwait
lock
mov
sub
ja
dec
xchg
push
icebp
jle
lea
aas
loop
sbb
dec
cmp
fwait
out
cld
cmpsb
add
xor
or
cmp
sar
js
jl
mov
imul
inc
movsb
vmaxss
xor
push
mov
pop
filds
pop
mov
push
dec
dec
cld
cmc
sarb
xor
imul
mov
call
mov
filds
fadds
jge
outsb
jp
or
sbb
mov
or
sarb
mov
jle
fdivrl
stos
in
bound
cld
xchg
pop
sub
adc
jnp
mov
pop
or
mov
mull
pop
mov
test
cmp
jge
inc
ror
jmp
js
push
js
pop
pusha
in
mov
xchg
pop
and
dec
xor
lret
sub
fistpll
fs
inc
jo
ss
inc
daa
mov
add
dec
cli
enter
ja
ss
mov
into
mov
xor
sbb
dec
jnp
lods
mov
cltd
inc
push
or
add
push
add
out
pushf
mov
push
int
jle
mov
into
iret
mov
test
push
add
fistps
mov
mov
rorb
je
cmpsb
inc
sbb
mov
test
test
cmp
loop
dec
mov
cmpsb
cmp
dec
test
imul
test
idivl
cmp
std
adc
dec
scas
dec
icebp
pop
outsl
inc
lret
inc
repnz
aaa
mov
mov
jmp
aam
int3
test
arpl
stc
jge
xor
mov
mov
xor
jb
mov
dec
pop
in
mov
not
jne
stos
sbb
jnp
mov
mov
mov
negl
movsl
inc
adc
mov
mov
mov
packuswb
jecxz
sbb
cld
xlat
add
out
add
sahf
dec
mov
pop
aam
sub
pop
push
dec
mov
ret
cld
movsl
push
or
mov
inc
mov
movsb
sbb
loope
stos
fbstp
mov
push
mov
mov
inc
lret
lds
mov
daa
icebp
jmp
fstpl
lret
std
mul
jl
out
mov
into
pop
and
mov
xor
cmpsb
or
jb
sbb
les
mov
xchg
jnp
unpcklps
aas
dec
push
ja
jge
jp
lret
add
hlt
cmp
inc
sub
dec
xlat
dec
and
cmp
jge
in
fidivl
and
nop
push
pushf
jge
dec
mov
lret
movsb
test
cs
or
mov
in
push
lds
in
add
mov
dec
lods
mul
or
mov
cwtl
inc
stos
loope
dec
and
jg
stos
fsub
push
in
aam
mov
div
shrb
mov
decl
cmpsb
call
in
sub
call
jmp
mov
dec
sub
or
inc
fisttps
ljmp
rclb
mov
dec
inc
mov
mov
pop
in
inc
mov
es
dec
mov
or
pop
lods
sbb
pop
pop
mov
adcl
cs
xor
shrl
cmp
xchg
pop
dec
mov
and
orb
lret
pop
not
xchg
js
inc
bound
mov
test
out
std
negb
mov
insb
loopne
in
fldcw
xchg
in
or
sub
jecxz
add
rcrl
jae
mov
shl
aas
decl
cmc
push
sbb
dec
lods
push
cmp
call
sti
or
jmp
sti
add
xor
pushf
sahf
bound
and
loope
pop
sub
push
in
into
mov
jb
xchg
add
add
jl
sub
repz
out
inc
jae
pop
fidivl
fsubrs
jo
cltd
and
fwait
std
sbb
xchg
mov
scas
repnz
and
test
cld
cltd
pushf
and
sub
in
or
mov
faddl
or
jp
movsb
test
shrb
pop
cmpsb
sarl
add
leave
lahf
inc
or
lret
jne
inc
sbb
andl
mov
iret
or
inc
ret
adc
stc
popa
repz
int
cmpsb
idivb
fadds
mov
in
aas
aam
jbe
xlat
adc
mov
out
sahf
or
pop
dec
popf
fcomps
out
xchg
pop
dec
out
push
push
mov
inc
lds
mov
mov
out
dec
out
outsl
dec
out
out
lods
push
cmpsl
js
shr
dec
lret
iret
pop
inc
fwait
sub
bound
xor
sahf
and
arpl
xchg
push
and
sbb
push
test
pop
xchg
cmp
dec
ds
sbb
cmpsl
mov
xchg
je
jae
jp
adc
and
mov
into
out
mov
cmp
inc
aaa
icebp
loop
mov
inc
test
add
nop
mov
rcl
sbb
sahf
in
xchg
cld
in
aam
adc
push
xchg
sbb
or
sub
pop
lret
ss
mov
shrl
jmp
xchg
add
sub
fnstenv
push
mov
ficomps
in
xchg
stos
mov
sub
fisubrl
sub
dec
arpl
aaa
cmp
push
mov
pushf
loopne
pusha
sbb
xor
roll
mov
outsl
mov
mov
or
inc
pop
lahf
sbb
inc
push
jp
cmp
cltd
fisubs
xlat
push
fldpi
in
xchg
mov
adcl
sahf
popf
add
sbb
inc
xchg
cmpsl
inc
stos
inc
xchg
cld
xchg
or
pushf
into
sub
imul
fs
sub
jmp
xor
xor
sbb
sub
sahf
push
daa
ds
jle
sub
aam
lret
inc
inc
add
pop
xchg
andb
add
pusha
ret
std
mov
test
mov
out
aas
add
int3
int
es
popa
and
test
jecxz
adc
sub
inc
add
and
push
fmull
insl
xchg
insl
dec
or
addr16
imul
sbb
lret
popf
inc
shll
mov
sti
lods
lods
aam
mov
mov
ss
cltd
out
mov
add
pop
jb
out
test
add
call
out
leave
push
mov
xchg
xor
push
mov
add
adc
out
adc
out
add
mov
or
loop
fnsave
ror
add
xor
jecxz
and
les
jg
push
push
fcom
cmp
inc
xlat
out
ret
aam
mov
cmp
mov
dec
lods
mov
stos
in
repnz
mov
or
cmp
push
addr16
mov
and
or
xor
cld
inc
int
ret
jmp
pop
dec
xchg
arpl
pop
test
hlt
jns
cmpsb
gs
mov
popa
inc
inc
adc
jl
jb
cmpl
sbb
daa
push
scas
hlt
jb
push
pop
jg
lret
jle
into
inc
jle
inc
dec
cmp
aam
fstpt
jge
popf
push
stc
sub
xchg
into
pusha
cmp
mov
addb
push
out
movsl
iret
push
fimull
jmp
xor
int
fistl
dec
aad
dec
mov
dec
mov
push
add
int
adcb
shrl
das
jl
and
inc
mov
popf
mov
out
popa
xchg
insl
cmp
inc
dec
ds
push
jge
filds
stos
push
cmc
andb
orb
icebp
or
fmul
jecxz
lret
fnstsw
sbb
scas
dec
cwtl
jbe
jge
mov
jmp
cmp
and
push
or
pop
lgs
xor
fildll
pop
xchg
mov
loop
or
iret
fisttpl
cmp
popf
dec
and
mov
rcrl
hlt
mov
inc
outsb
sbb
sub
or
xor
stc
mov
sbb
push
cmc
push
xchg
xchg
mov
or
lds
insb
sbb
adc
call
inc
xchg
lahf
clc
iret
or
loopne
lods
ret
and
jne
adcl
aam
fidivl
xor
sbb
sti
sub
scas
cmc
movsbl
xchg
pushf
push
pop
imul
mov
iret
sbb
dec
aam
jae
popl
mov
fisubrl
push
sub
les
mov
cmp
jo
out
jle
fldenv
sub
xchg
jbe
ret
pop
out
mov
fcomps
sti
push
sbb
rol
xchg
leave
mov
inc
test
or
adc
cltd
imul
sbb
add
aam
pop
xchg
lds
mov
aad
lods
and
push
mov
xchg
jo
arpl
in
or
negl
out
sbb
and
xchg
in
je
xor
cmpsb
push
dec
jg
sbb
test
shlb
add
lock
xchg
xor
push
in
xchg
xor
cmpsb
push
xchg
fmul
mov
mov
clc
pusha
mov
ss
push
imul
pop
mov
push
lods
repnz
mov
filds
ret
lock
in
push
push
gs
lods
es
mov
pop
cmp
sbb
xchg
adc
add
out
mov
or
out
pushf
shlb
test
adc
aaa
stos
cmpsl
cmp
imul
movsl
sub
sti
dec
sub
clc
leave
xchg
push
mov
out
lods
cli
xor
fs
sub
xor
or
test
sbb
je
or
cld
adc
out
mulb
jg
lahf
loop
fldt
daa
sbb
jmp
mov
lods
pop
pop
aaa
shlb
scas
push
xor
movsb
or
divl
inc
sbb
das
add
adc
jge
rcll
loope
dec
dec
addr16
cwtl
ja
mov
xchg
les
xchg
jg
ljmp
lods
dec
pop
es
lds
stc
lcall
cmc
mov
sub
xchg
adc
inc
in
clc
pop
pop
lea
stos
sub
or
mov
adcb
cs
pushf
pop
fldcw
dec
cld
pop
jg
xlat
sti
js
int
fucom
add
pushl
addr16
pop
in
add
cltd
dec
int3
ds
ljmp
stos
repz
loop
push
dec
insb
push
stos
cmc
push
popa
and
cmp
inc
pop
mov
pop
mov
fiadds
cmpsb
push
mov
sti
stos
sbb
jge
clc
xchg
pop
insl
lcall
or
mov
lahf
fwait
inc
clc
adc
push
sub
jge
call
out
rcrl
or
mov
es
inc
push
js
adc
lock
mov
xchg
pop
mov
cld
push
out
pop
rcrl
pop
or
mov
insb
or
and
ret
xor
mov
aam
das
mov
repnz
pop
subl
push
andl
mov
dec
mov
vcvttpd2dqy
mov
daa
mov
divb
sub
xlat
inc
jne
rclb
xchg
ret
mov
mov
pop
cmp
shrb
icebp
jns
sti
jg
mov
jg
push
mov
std
pop
push
fimull
mov
in
push
lret
jne
js
jb
aas
lods
pop
test
lret
jp
lcall
or
es
lcall
or
daa
lahf
adc
jl
mov
stos
xchg
xchg
pop
rorb
xchg
fimull
adc
jo
cmp
cwtl
cmp
ret
sub
pop
xchg
rclb
dec
pmulhw
cmp
jg
pushf
sbb
cltd
mov
and
aam
loopne
in
pop
inc
push
aad
or
aas
sbb
inc
inc
add
js
sbb
inc
repnz
into
cltd
test
cmp
sub
dec
insl
dec
into
decl
mov
vpsllq
mull
ret
mov
enter
mov
imul
mov
xchg
adc
add
inc
add
clc
hlt
add
xor
lods
movsl
jl
sbb
or
mov
std
dec
aam
cld
shrd
mov
push
data16
div
add
mov
mov
test
mov
call
sub
jmp
fstpl
cltd
stc
shlb
dec
xor
dec
negb
fmull
pop
push
dec
punpckldq
cltd
fimull
or
in
and
xlat
incb
push
dec
ret
add
inc
pop
sbb
daa
fmuls
outsl
inc
lcall
xchg
cmc
lcall
rolb
repnz
xchg
mov
out
pushl
xor
cwtl
notl
xchg
sbb
mov
sub
mov
push
mov
out
push
jns
mov
incb
and
das
jnp
push
push
inc
out
data16
in
imul
stc
mov
adcl
lahf
xor
imul
push
xchg
pop
arpl
movsl
call
bound
push
in
mov
and
jns
xchg
xchg
mov
or
jl
cmc
sahf
inc
inc
cmp
jge
arpl
int
dec
mov
xchg
testl
push
mov
inc
shlb
dec
daa
stos
sub
rcr
push
jge
aaa
xchg
stc
sbb
cld
out
sub
mov
or
pop
in
sub
mov
jae
cmp
callw
add
sub
mov
scas
in
pop
adc
popa
push
push
mov
sub
xor
push
pop
cmc
mov
and
push
test
fucom
aaa
in
and
lock
push
lret
sub
addr16
inc
loop
inc
test
cs
sbbl
jns
mov
jmp
dec
mov
stos
xchg
add
je
icebp
test
adc
cli
mov
fcmovu
fwait
mov
in
sub
push
mov
mov
jnp
fcomp
into
popa
mov
cmp
inc
mov
pop
push
jae
adc
fwait
jne
push
or
add
int
ljmp
jge
mov
inc
xchg
mov
mov
movsb
xor
aam
and
inc
loop
jae
hlt
mov
add
pop
mov
insb
mov
xchg
bnd
cmp
in
sahf
add
pusha
into
push
insb
pop
cmpb
les
ljmp
cld
and
ds
fs
mulb
cmp
imul
mov
inc
repz
or
fcmovne
popa
jo
sarl
jno
sbb
dec
aaa
or
arpl
std
or
dec
imul
mov
pop
push
fidivrs
testb
fists
mov
jecxz
dec
mov
pop
daa
cltd
adc
mov
out
dec
sub
or
cmp
xor
cmc
push
pop
ds
imul
mov
push
fcomps
add
jp
push
sbb
les
loopne
call
jle
jg
in
adc
cmp
jne
and
lahf
jp
mov
fistpl
bound
mov
aas
inc
mov
inc
cs
add
ja
and
ficomps
lret
loopne
pop
mov
xor
adc
adc
out
push
call
jno
xchg
mov
je
mov
jno
and
outsb
mov
pushf
loopne
rclb
cmp
jl
inc
xchg
out
xchg
cmp
jg
add
stos
aaa
sub
arpl
inc
loope
mov
shlb
or
js
pop
pop
gs
pusha
popa
xchg
fbld
daa
scas
mov
jbe
lods
xlat
inc
xor
cmp
cwtl
scas
sub
add
jp
mov
in
mov
dec
sub
cs
dec
dec
das
add
cmp
inc
add
xchg
in
dec
mov
icebp
and
add
xchg
sub
sub
xchg
xchg
int3
adc
ficoms
rol
insb
pop
loope
add
subl
lea
jo
dec
testl
pop
cli
lock
mov
fsubrs
loopne
fdivrs
into
sti
cs
sti
mov
aas
mov
cmp
leave
loopne
pusha
add
add
mov
pop
adc
add
add
mov
or
mov
cmp
fistpl
in
rolb
adc
int3
xchg
xchg
inc
out
ror
and
popa
lods
icebp
cmp
xor
or
orl
into
sar
dec
xchg
and
jg
lods
push
or
add
iret
sbb
pop
xchg
fs
repnz
sbb
loop
insb
jp
mov
repz
push
xchg
mov
lods
cli
lahf
xchg
push
xlat
push
mov
and
mov
mov
add
mov
cmc
sbb
imul
and
ret
inc
xor
lds
sub
stc
inc
cltd
push
insb
cli
lds
push
sbb
xchg
xor
jnp
mov
testl
jg
push
cmp
sub
lock
pop
cmc
cmc
push
mov
push
add
fsts
out
push
cmpb
xchg
xor
stos
js
stc
add
xchg
nop
cltd
mulb
push
jp
jns
or
lret
xor
or
stos
out
lret
xor
cwtl
out
outsl
leave
insl
adc
sbb
repnz
test
testb
jnp
in
pusha
adc
sub
inc
pop
lret
inc
ret
xchg
pop
mov
shll
cli
pop
mov
repz
sbb
xchg
jmp
mov
add
xor
push
int3
ss
mov
xor
mov
shlb
mov
ret
aas
shlb
jle
xchg
roll
cld
mov
mov
mov
adc
xor
cmpsb
movsb
movsb
addr16
cmp
out
ret
xchg
divl
mov
shld
mov
arpl
test
jae
inc
mov
push
ja
xchg
call
cmp
sub
adcl
in
mov
in
xchg
nop
pop
fwait
pop
pop
stos
pop
jno
lods
imul
mov
pushf
bound
repnz
cli
test
je
add
mov
lret
sbb
cmp
xchg
stos
test
hlt
and
fcompl
stos
mov
enter
int
xchg
mov
pop
push
or
pop
loop
fdiv
xchg
mov
hlt
add
jmp
enter
jnp
mov
ja
std
js
insl
adc
adc
repz
in
or
mov
sbb
lret
lods
std
pop
mov
pop
out
and
mov
pop
jge
cmc
push
add
cltd
inc
mov
lods
aam
and
repz
mov
cmpsl
inc
daa
jmp
in
lret
out
mov
aam
negl
mov
dec
mov
cmp
scas
pop
push
rorl
mov
lock
or
les
mov
icebp
test
pop
mov
cmp
repnz
aas
sbb
cvtdq2ps
fldt
ljmp
repnz
jae
xchg
int3
gs
cs
ja
imul
xor
push
cmc
lock
mov
imul
test
or
rcrl
mov
ja
mov
push
mov
loope
jge
inc
int3
out
and
es
ljmp
mov
or
mov
cmp
pop
int
lods
xchg
mov
fisttpll
in
push
cmpb
sub
arpl
mov
aas
nop
add
in
andb
movsb
mov
push
add
sbb
scas
push
test
fisubs
iret
outsb
dec
lcall
jb
ljmp
enter
sti
xchg
cmpsl
lcall
adc
or
cmpsb
scas
cwtl
bound
sub
loopew
mov
outsl
push
sbb
mov
test
fmuls
jo
dec
mov
mov
call
mov
pop
push
adc
mov
pop
jno
movq
aaa
pop
imul
mov
pop
fwait
ja
sahf
mov
mov
cmpsl
sahf
dec
pop
jns
scas
dec
xchg
data16
xchg
shlb
push
mov
popa
mov
icebp
ja
dec
mov
lods
roll
mov
stos
enter
mov
and
icebp
clc
jp
rcr
dec
inc
pop
adc
xlat
stc
xchg
pop
pop
sbb
and
rcr
stc
add
jns
lcall
dec
mov
out
xor
push
std
cld
add
scas
mov
mov
out
mov
jnp
std
xchg
xchg
inc
mov
mov
test
adc
js
add
mov
scas
jnp
sbbb
sub
push
in
loop
in
mov
cmp
lea
mov
jbe
aam
pusha
test
out
push
dec
mov
mov
xchg
addb
pop
mov
fcmovu
pop
mov
push
iret
rcrb
push
jno
push
pop
mov
in
jne
clc
push
cs
xor
icebp
or
fisttpl
fistps
shl
lods
push
mov
sub
mov
js
popa
cmpsb
pop
loope
xchg
jb
cmp
mov
dec
mov
aad
push
lods
dec
stos
lock
fs
ljmp
loopne
pop
mov
mov
xchg
arpl
xchg
push
push
adc
and
repz
pop
sbb
sub
bound
in
sbb
js
testb
je
pop
dec
push
cmpsl
hlt
or
lcall
cmp
sub
fisubs
dec
les
pop
xchg
mov
out
pop
push
inc
mov
in
test
dec
mov
or
imul
pusha
scas
mov
mov
mov
int
arpl
cli
shl
jmp
dec
fstpl
cmpsl
mov
push
in
shrl
cmp
mov
roll
test
cmpsb
rclb
adc
dec
mov
hlt
push
push
int3
out
lret
nop
les
add
adcl
sub
add
cmp
jp
shl
jno
lcall
mov
aaa
push
test
xor
or
push
add
xchg
repz
leave
or
xor
cmp
je
dec
imul
rorl
pop
push
aas
jecxz
push
aam
cmpsl
inc
pop
std
xchg
outsl
push
mov
insl
std
mov
xchg
loopew
fdivs
shll
mov
cli
adc
insl
lahf
jb
data16
jae
xchg
xchg
pushf
mov
fcmovnu
and
push
adc
gs
sbbl
filds
and
add
dec
pop
dec
sub
or
cmp
fistpl
adc
xchg
fadds
pop
popa
lret
mov
mov
jb
pop
sub
cs
lret
lahf
pop
mov
rcrb
dec
lret
sbb
xor
gs
cmp
imul
out
fmul
in
cmp
pop
sbb
out
cmp
jl
int3
mov
ds
icebp
popa
xor
cmp
inc
stos
cmp
mov
mov
fs
gs
mov
dec
jmp
fstl
xor
lea
sub
cmpsb
lods
es
sub
fnsave
cmp
jp
mov
in
movsl
mov
add
sbbb
mov
pushf
jl
push
outsb
fisubrl
or
loopne
inc
fimull
int3
in
xorl
movsl
mov
pop
jge
cltd
and
adc
xchg
lret
jae
addps
pop
loope
in
scas
out
xor
int
add
push
mov
xor
scas
mov
sti
subl
out
loop
ds
test
std
mov
fwait
or
iret
dec
cmp
xor
sub
mov
dec
dec
or
mov
imul
mov
out
jmp
mov
out
cmc
test
shrb
fnsetpm(287
mov
push
pop
cmp
inc
int3
popf
dec
jmp
push
mov
mov
lock
sti
dec
pop
mov
push
into
ret
push
movsb
inc
xor
mov
shlb
pop
js
shrl
ljmp
shlb
outsb
xor
mov
outsl
fdivs
push
movsb
pusha
or
jecxz
sbb
fimull
push
adc
push
mov
push
je
je
test
or
rcrl
jl
mov
sbb
mov
and
add
mov
loope
inc
xor
mov
mov
jmp
out
inc
andb
pop
in
xor
pusha
stc
neg
stc
test
inc
sub
scas
adc
inc
fyl2x
ficompl
sbb
idivb
inc
dec
sbb
addr16
hlt
pushf
pop
movsb
rclb
mov
outsl
adc
add
mov
cmpsl
lea
andb
in
cmp
lds
lods
fsubr
bsr
in
or
add
lods
daa
clc
testl
ret
lods
aas
jae
adc
pop
or
icebp
mov
sahf
loope
xchg
or
repnz
xor
popf
push
mov
stos
jmp
lret
lds
xchg
ja
pop
adc
jmp
mov
mov
sbb
outsl
test
stos
cmp
in
inc
sahf
jmp
adc
adc
mov
js
sub
mov
loope
pop
push
std
push
cmp
adc
in
popa
rorb
mov
inc
cs
je
aam
sub
inc
or
pop
pop
clc
mov
hlt
stos
pop
aad
mov
ret
int
imul
sub
lds
les
mov
hlt
shlb
iret
vpextrw
pop
sbb
push
or
sbb
loope
mov
push
sbbl
dec
fwait
add
es
cli
fimuls
fildll
in
xor
mov
fmull
lea
pop
jb
out
pop
cmp
enter
pop
xor
push
stc
inc
je
lcall
sub
inc
negl
cmp
and
loop
lret
stos
push
jmp
stc
mov
fistps
mov
cmp
ret
and
loope
out
sub
in
mov
cmc
arpl
arpl
cmp
sti
sbb
fisubrl
xchg
jo
test
pmaxsw
aaa
hlt
out
push
add
xor
sbb
imul
push
out
lock
fsubs
ret
jl
add
push
cmp
out
push
cmp
iret
in
ficomps
or
push
fistps
cwtl
push
sbb
mov
addr16
adc
cmove
push
mov
rolb
fcomps
sub
mov
cmpl
inc
mov
jne
bound
jne
cmc
add
mov
adc
add
cld
pop
leave
dec
repnz
iret
cmp
ja
lahf
sbb
scas
movsb
cmpsl
pop
pop
ret
rcrb
and
pusha
adc
xchg
mov
inc
jmp
dec
push
sbb
ljmp
sbb
rcrb
loope
insb
push
fistl
pop
fstpt
xor
inc
or
hlt
cmp
sub
xchg
lods
mov
jns
xchg
jge
lret
or
and
insl
movsb
jmp
jmp
fs
dec
sub
mov
repnz
sbb
xor
lds
out
cli
iret
mov
jp
sbb
inc
or
pushf
or
lret
insb
mov
cwtl
cmpsl
sbb
nop
sahf
sub
cltd
sti
mov
or
dec
fisttpll
lods
mov
mov
dec
fadds
inc
push
in
aaa
pop
loopne
dec
sbb
add
inc
push
rorl
test
inc
mov
rcr
xor
and
pop
sarb
je
sub
lret
sbb
push
imul
jns
cld
sbbl
sti
and
ret
in
ror
rol
daa
adc
add
into
lea
and
in
mov
ds
inc
inc
jge
sub
sar
lock
lds
ret
pop
mov
mov
or
add
cmp
rclb
pop
adc
ds
int3
sbbb
mov
arpl
mov
dec
insb
add
dec
sbb
loope
pop
cmp
pushf
aas
insb
or
or
dec
mov
stos
das
and
and
push
xor
push
icebp
shl
or
divl
rcll
mov
in
xchg
sbb
mov
sbb
and
jns
not
movsl
shll
outsb
and
test
pop
ja
jne
or
stc
push
cmp
fmulp
sar
cmp
jmp
scas
dec
je
fsts
das
sub
cmp
mov
fs
cmp
or
in
dec
lcall
idivb
add
pop
mov
push
push
mov
ret
add
jmp
jne
cmp
pop
mov
jns
test
and
daa
daa
mov
dec
jg
and
js
push
test
mov
int
or
lahf
mov
mul
cmove
test
js
pop
or
daa
adc
xchg
sub
xchg
mov
pusha
in
cwtl
xchg
lret
add
cs
in
aaa
and
pop
sbbb
sub
pushf
mov
scas
repnz
daa
push
push
pop
dec
pop
incb
hlt
dec
push
stos
into
mov
adc
and
jo
stc
cmpsl
movsl
dec
gs
cmp
in
xor
mov
aam
mov
fistpl
lahf
push
adc
sbb
or
sub
jg
mulb
adc
pop
adc
test
rorl
mov
mov
pop
add
mulb
test
imul
push
clc
incl
jno
adc
gs
push
or
int
jnp
mov
jo
jmp
pop
mov
xchg
sbb
fisttpll
cld
js
sbb
iret
mov
pop
pop
lea
ss
add
or
push
testb
xor
push
test
mov
jae
int3
cmpsl
dec
shlb
rclb
cmp
cmp
add
adc
pop
xchg
jbe
push
xchg
movl
nop
cmpsl
cbtw
bt
lds
xchg
mov
sarb
pop
dec
jmp
stc
in
pop
dec
push
es
xchg
aas
repnz
loopne
mov
mov
mov
adc
fsubs
and
pop
ret
adc
scas
cmp
xorl
cmp
call
xchg
sub
shll
dec
xorl
stos
push
xchg
pop
in
jmp
push
mov
iret
mov
add
sahf
repz
xor
mov
inc
jl
inc
push
loop
sahf
fucom
clc
sbb
loope
add
mov
loop
cld
movsl
cmpsl
fldl
in
mulb
imul
in
push
dec
stc
scas
mov
cmc
inc
fidivrs
fmull
sbb
cmp
dec
mov
inc
pop
or
lfs
ret
fisubl
mov
and
ret
xchg
and
pop
out
ds
or
sti
lcall
loop
xor
xchg
setne
addr16
stos
icebp
sub
mov
rorl
nop
int
add
mov
push
insb
enter
inc
jae
push
pop
mov
out
fmul
cmp
hlt
jbe,pt
or
lods
mov
push
ret
jle
imul
add
xor
sbb
cmp
xor
mov
push
repz
popf
lods
enter
fldcw
outsl
ds
shlb
jnp
inc
leave
out
icebp
push
div
xchg
dec
in
or
clc
lock
push
dec
xchg
in
data16
dec
ret
out
xchg
mov
inc
fdivrs
jnp
mov
mov
dec
inc
and
dec
add
inc
push
fs
pusha
add
mull
mov
mov
fistpll
aas
mov
jmp
mov
fwait
mov
loop
add
rcll
mov
adc
and
test
imul
scas
popf
ret
hlt
aad
aam
xor
xchg
jb
in
lret
sub
cmp
aaa
stos
and
in
pop
mov
rcl
jg
lock
adc
nop
xor
daa
orl
or
aad
xor
int
mov
pusha
or
mov
mov
in
cs
mov
xor
adc
fldl2t
pop
out
out
cmp
pop
jle
dec
mov
push
dec
mov
jl
out
sbb
mov
sbb
cmpsl
sarb
push
pop
push
or
in
pushf
adc
add
adc
xor
push
call
sti
addr16
adcb
imul
mov
xor
or
decb
iret
testb
les
loop
and
stos
mov
pushf
xor
testb
ret
mov
mov
jl
mov
mov
inc
xor
sbb
xchg
push
sbb
test
pop
mov
xchg
lcall
cmp
push
stos
call
xchg
push
cwtl
ss
fisubrs
adc
xchg
imul
leave
mov
pop
xchg
aas
or
or
add
sub
das
adc
insb
jl
xchg
pop
mov
add
or
push
ds
mov
fildll
mov
insl
fcmovbe
pop
and
adc
rol
and
ret
add
into
inc
push
cmc
jb
nop
inc
push
movsb
int
std
ljmp
test
mov
mov
pop
fldt
push
call
jmp
inc
mov
jmp
jnp
cmp
movsb
xor
sub
lods
popf
jge
sbb
mov
adc
mov
jb
psraw
lret
mov
add
mov
loop
mov
mov
leave
leave
pop
call
mov
aam
rcll
mov
or
pop
scas
push
xchg
sbb
loope
int3
sub
into
sbb
lock
lea
dec
or
iret
inc
stc
cmpsb
push
cmp
fsubs
or
test
xlat
lea
xor
pop
divb
and
add
push
mov
fsubl
movsl
jo
jle
les
inc
lods
or
cmp
xchg
fcomi
jecxz
pop
aas
mov
sahf
xchg
popf
retw
das
mov
mov
pop
scas
mov
dec
in
inc
pop
jecxz
push
mov
inc
cltd
push
fdivrs
in
mov
sub
std
cmp
outsb
xor
stc
mov
add
int3
pop
es
add
out
xchg
ds
gs
sti
lcall
lret
dec
cmp
add
mov
pop
sub
inc
stos
hlt
fsts
sahf
adc
add
adc
mov
cmp
arpl
jg
out
addb
xchg
test
mov
clc
daa
ffreep
ficoms
pop
js
mov
pop
mov
cld
loop
testb
mov
xchg
and
mov
or
push
cwtl
adc
or
mov
sbb
iret
mov
xor
dec
or
pop
popf
fsubrl
mov
movl
sub
sbb
imul
std
stos
pop
jae
test
and
movsb
xchg
push
and
and
imul
jp
scas
lods
jns
pop
clc
add
test
jl
out
push
push
sbb
ss
sbb
mov
rcrl
xor
ret
xor
xor
mov
idiv
aaa
mov
ljmp
loope,pn
mov
addr16
daa
rol
adcb
sub
inc
adc
mov
in
scas
mov
xor
iret
add
fwait
popf
mov
xchg
mov
fcomps
syscall
mov
bound
mov
or
add
adc
repnz
pop
dec
shll
pop
int
movl
stos
mov
push
js
xchg
popf
pop
jp
inc
lods
test
lahf
inc
sbb
repnz
mov
in
push
mov
push
mov
cmpsl
cltd
sarl
clc
pop
mov
xchg
cmp
repnz
ret
bound
stos
push
push
into
add
loop
lret
pop
sub
cmpsb
ss
sbb
iret
push
rcrb
lcall
cmp
test
pop
mov
mov
scas
sbb
sub
pop
jbe
xchg
mov
clc
push
mov
push
lods
pop
loopne
ljmp
or
mov
push
xchg
or
xlat
sarl
mov
push
iret
test
add
cli
mov
cld
dec
push
lret
lea
dec
jns
and
out
mov
flds
js
pop
lods
insb
xor
push
bnd
jge
into
std
and
ficompl
out
ret
push
push
pop
push
and
lea
inc
fninit
pop
in
mov
in
adc
jmp
hlt
dec
sti
inc
xor
cli
test
adcl
nop
mov
pop
cwtl
dec
roll
mov
inc
aaa
hlt
and
into
or
cld
pop
pop
adc
notb
sub
pop
xlat
cmpsb
imul
popa
push
cmp
popf
push
testl
imul
sbb
and
adc
sbb
xor
push
dec
sub
icebp
fcmovu
xchg
pop
aam
xlat
inc
test
jge
inc
inc
clc
mov
jb
gs
lret
cmp
push
daa
cmpsl
lcall
dec
mov
push
stos
xor
xor
mov
sahf
test
subl
mov
das
movsl
xor
cld
gs
jnp
in
cwtl
repz
movsl
pop
jno
imul
insb
int
mov
repnz
jae
sub
pop
inc
jb
or
pusha
scas
out
sbbl
mov
lahf
mov
cmpl
xchg
js
nop
dec
mov
adc
es
inc
jns
cli
lret
xchg
enter
or
pop
lea
sahf
decb
jl
int
sbb
iret
and
shrd
sub
icebp
sti
adc
in
jae
inc
imul
inc
mov
dec
mov
xor
roll
xchg
lret
inc
addr16
mov
xchg
pop
jo
icebp
arpl
mov
dec
fnsave
cmpb
mov
in
mov
mov
cwtl
inc
and
push
in
loopne
xchg
pop
xchg
dec
sub
push
xchg
mov
lods
stos
out
sbb
ljmp
aam
cmp
mov
xor
push
mov
scas
cmp
hlt
lret
xchg
cltd
lret
xchg
loop
mov
push
mov
outsl
or
sarl
inc
mov
sbb
int3
cwtl
inc
ret
mov
mov
mov
sbb
xchg
adc
push
jns
sti
jle
outsl
and
xchg
pop
movsb
jecxz
and
jge
sbb
out
mov
or
dec
sbb
das
xchg
in
sub
sbb
sub
mov
jmp
mov
fadds
pusha
adc
mov
xchg
cmpsb
jno
or
inc
aaa
xchg
xor
loope
bound
push
dec
jae
jmp
xchg
mov
pop
jl
mov
sbb
adc
mov
fs
orl
fcoms
test
dec
mov
cmpsl
push
pop
mov
jb
dec
dec
loope
int3
inc
cmpsl
or
xor
cmp
pop
push
pop
test
fs
mov
loopne
and
adc
popa
xor
inc
pop
mov
mov
jb
cmpsl
xor
sub
cld
xor
xchg
repz
lods
dec
push
jle
pusha
sub
ret
ret
sbb
dec
xchg
dec
cmp
xchg
mov
xor
lods
decl
mov
sub
cmp
and
shrb
js
sbb
and
pop
scas
stos
dec
mov
xlat
lahf
fcmovbe
dec
test
data16
sbb
mov
leave
nopl
mov
out
pop
sti
rorb
pop
and
mov
rcrb
lea
xchg
xchg
js
pop
aad
xchg
arpl
jo
shrl
fimull
mov
or
mov
xchg
call
addb
sub
sbb
shll
or
jo
fwait
dec
or
inc
jns
pushf
jg
in
int3
enter
xchg
dec
dec
orl
pop
or
xchg
inc
and
aad
inc
mov
cwtl
or
loop
adc
bound
test
inc
or
testb
andl
push
outsl
and
mov
sub
xor
adc
mov
and
mov
stos
icebp
sbb
testb
and
push
pop
lret
or
insb
pop
shr
and
out
sbb
fmuls
call
sbb
pop
outsl
push
out
fmul
sbb
xor
into
daa
dec
rcrb
jb
inc
inc
jg
adc
stc
cmp
fistl
mov
leave
rcr
out
and
add
xchg
jae
mov
test
push
nop
pop
test
fnstsw
or
inc
pop
inc
pop
xor
push
int
sbb
sbb
jbe
jo
inc
mov
cmp
jmp
rcll
pop
movsl
and
cmp
stos
xor
mov
insb
push
int3
jnp
cmp
inc
cltd
pop
aaa
inc
xchg
aam
movsl
aam
xchg
jo
outsl
repnz
aad
addl
push
pop
xchg
sub
and
out
mov
pop
xchg
pop
and
xor
sbb
les
std
mov
loope
or
lret
push
das
shll
test
test
int3
rol
stos
je
xchg
test
bound
lahf
fdivrl
stos
jecxz
mov
loope
xchg
in
or
mov
push
xchg
int3
jle
xchg
xrelease
imul
gs
mov
imul
lock
test
inc
sbb
xchg
and
adc
dec
jge
stc
ljmp
or
cmp
jl
fcomip
xchg
jbe
add
ficompl
test
xchg
mov
enter
mov
mov
out
or
mov
jg
and
jle
popf
push
mov
shll
mov
add
jno
sti
repz
inc
and
mov
dec
or
xor
adc
adc
test
repz
dec
push
jp
lcall
mov
push
jo
jno
cmp
xchg
cld
pop
and
pop
test
loop
movsl
xor
outsl
sub
xor
mov
sub
xor
fwait
pusha
push
cs
add
or
cmp
mov
fcmovnb
test
daa
push
in
dec
lds
push
in
mov
or
mov
dec
xchg
or
cltd
arpl
cltd
test
cmp
fdivs
leave
sbb
push
jnp
cli
add
dec
and
popf
mov
fdivs
test
sbb
push
jnp
in
addr16
fwait
outsb
loope
insb
rorb
mov
loopne
jb
push
xchg
push
sub
insl
dec
push
jnp
pop
ja
xchg
loope
pop
fwait
rolb
jp
inc
xchg
loop
adc
and
mov
cld
pop
cmp
pop
mov
out
addb
push
dec
add
xchg
sbb
xor
pop
pop
push
cli
push
clc
lret
inc
xchg
hlt
jge
jge
cmp
cmpl
inc
cmp
cmpsb
push
mov
and
scas
lock
scas
lret
adc
adc
ja
xchg
push
inc
push
lret
scas
unpckhpd
dec
mov
and
loopne
aaa
into
repz
mov
pop
rol
scas
hlt
push
and
dec
mov
xchg
add
cmp
mov
cli
call
out
sbb
or
out
push
pop
into
push
adc
jnp
in
jb
imul
jl
pop
insl
popa
stos
mov
xchg
sahf
mov
testl
cmp
add
cld
inc
fstl
mov
test
sti
repnz
in
ljmp
push
push
insl
jne
jno
xchg
or
xor
fcoml
imul
mov
xor
ja
and
cli
shr
jecxz
mov
pop
sub
inc
mov
push
mov
xchg
jne
test
jne
pop
adc
sub
out
xor
test
fdivs
movsb
mov
mov
push
sbb
xor
stc
ret
adc
pop
std
adc
hlt
out
shlb
cmpsl
dec
daa
lock
cmp
int3
dec
push
orb
es
mov
test
mov
jns
int3
dec
cmp
pop
cmp
or
negb
lea
or
in
pop
xchg
jle
mov
mov
in
test
xor
jo
cmp
fists
cld
jge
iret
push
dec
ja
fs
int3
cpuid
ret
popa
pop
and
clc
es
push
orb
adc
and
mov
xchg
or
pop
mov
pop
mov
sub
jl
fs
lret
adc
test
sub
test
inc
xorb
pop
shrb
ja
pop
jne
data16
bnd
fimull
pop
arpl
xchg
pop
xchg
mov
fld
sub
insb
dec
outsl
or
dec
sar
and
in
mov
iret
shlb
pop
out
stos
cmp
jle
cmp
push
push
cmc
push
dec
lcall
mov
pop
push
dec
sbb
mov
and
lcall
pop
mov
insl
adc
sahf
aas
push
cmp
and
ret
mov
dec
sub
repz
inc
fwait
xchg
mov
into
ja
mov
jne
lahf
jmp
test
nop
in
push
mov
shrl
adc
add
xlat
xchg
sbb
dec
add
or
lret
inc
ja
xchg
movsl
push
aam
fmuls
jg
bound
mov
por
jae
or
fsubs
js
dec
movlps
jl
jne
das
jno
and
insl
mov
aam
add
sbbb
jge
jne
push
cmp
mov
fbld
mov
mov
adc
or
push
xchg
sub
xor
test
jns
ret
dec
loop
xchg
adc
sub
rcrb
fstpt
lods
push
xchg
push
loopne
inc
cmpl
int
clc
or
mov
add
andl
in
pushf
repnz
or
adcl
sahf
aam
leave
mov
mov
jne
mov
inc
xor
and
dec
or
xchg
xchg
add
mov
cmp
mov
push
mov
repz
pop
lcall
fs
insb
mov
mov
aam
inc
xor
js
insb
and
push
adc
ja
lcall
test
pop
xchg
lahf
negb
lds
add
push
mov
enter
sahf
cs
out
jbe
loop
ja
or
sub
jecxz
pushf
inc
push
mov
jp
mov
mov
stos
dec
mov
out
pop
loop
in
cmp
repnz
jp
mul
push
add
icebp
mov
cs
xchg
loope
int
xor
cmp
push
daa
aad
inc
cwtl
sbb
push
and
dec
adc
mov
jg
les
dec
stos
cmpsb
jno
shlb
push
cwtl
sti
mov
push
andl
inc
dec
dec
mov
inc
pop
sub
fadds
int
ficomps
subb
ljmp
sbb
inc
jne
shl
ret
pop
ja
dec
inc
xor
cmp
repnz
sub
pop
adc
das
test
push
stos
sti
enter
ja
sbb
gs
xchg
jo
dec
jo
pop
inc
sbb
insl
push
pop
loop
sbb
adc
cmpsb
mov
cs
scas
addr16
pop
test
pop
insb
outsb
xlat
imul
xor
int3
sbb
sti
sbb
lret
sarb
xchg
cmpsl
sti
scas
mov
dec
das
mov
xor
insb
and
jbe
inc
adc
out
int
insl
fmuls
loopne
fcmovb
dec
mov
in
cmpsl
cltd
cs
sti
cli
jl
inc
mov
stos
sbb
rcrl
push
jns
cwtl
xchg
fwait
pop
scas
adc
mov
ret
out
jp
addr16
negb
testl
mov
mov
or
adc
js
xchg
or
push
loope
int
daa
push
ljmp
sbb
jnp
push
xor
inc
mov
xor
sub
popa
jno
loopne
mov
push
clc
xchg
shrb
mov
dec
xor
push
xchg
lret
mov
test
frstor
lds
rorl
int
in
mov
push
jbe
cmp
loope
addb
push
xlat
adc
aaa
jne
push
shll
hlt
outsl
or
jl
inc
dec
xor
dec
pop
push
out
cmp
push
loopne
jb
pop
fstps
js
icebp
leave
inc
push
sub
fmuls
pop
icebp
outsl
adc
sbb
sbb
add
adc
mov
stc
outsb
pop
jge
data16
lcall
movsl
add
adc
pop
or
xchg
xor
sbb
inc
ss
add
scas
mov
push
lea
lds
insl
loope
inc
es
fistpll
lea
mov
cmc
leave
adc
pop
jns
mov
rcrb
cmp
and
in
scas
aad
push
ret
xchg
pop
loopne
add
aaa
cmpsl
pop
out
loopne
dec
pop
scas
scas
jge
fld
dec
mov
lcall
subl
xchg
pop
jmp
or
push
outsl
mov
addr16
test
dec
test
aaa
aad
ffreep
xor
test
cmp
movsb
mov
fwait
out
push
scas
push
clc
int
and
adc
bound
xor
push
lret
out
cmpsl
or
xchg
cmp
jle
xor
adc
fsubrl
stc
mov
loop
aas
lods
jl
pusha
mov
jae
jmp
mov
push
or
or
cmp
movsl
jmp
mov
sbb
pushf
jl
popa
xchg
inc
sti
cmp
mov
enter
sbbb
add
outsb
out
aad
in
int
adc
hlt
sub
sarb
adc
push
in
jl
das
es
mov
xchg
and
sub
ljmp
pop
std
push
popa
mull
arpl
or
mov
repz
dec
mov
mov
adc
inc
clc
loope
jae
mov
mov
xlat
imul
incl
rcrb
mov
mov
stc
fimuls
jl
xchg
push
out
int
lcall
xchg
jne
lret
or
add
fisubrl
gs
adc
cs
jecxz
fldenv
cli
sbb
dec
sub
push
push
add
push
dec
push
sbbl
xchg
daa
mov
das
insl
rorl
inc
jbe
das
movsb
jle
iret
mov
imul
adc
mov
fdivp
add
loopne
adc
or
lcall
inc
sub
and
daa
in
cmp
mov
mov
rcrl
adc
fisttps
xor
cld
je
xchg
adcl
std
mov
jbe
sbb
sub
inc
andl
mov
jle
sbb
inc
mov
mov
dec
mov
inc
call
jb
daa
fisttps
pushf
ret
rcrb
mov
xchg
jb
std
add
stc
ja
sbb
cld
sub
inc
insl
push
mov
cmpsb
xchg
sub
cs
cs
pop
leavew
push
jbe
daa
mov
outsb
cmpsb
jb
lea
cmpsl
pushf
xor
xor
mov
mov
mov
arpl
int3
mov
lods
mov
test
pop
mov
repnz
push
xor
xchg
dec
pop
cli
and
fidivrs
add
mov
inc
xchg
mov
hlt
rolb
scas
cmp
aas
xchg
fstps
xor
pop
jecxz
add
cs
inc
pop
loopne
lods
test
jecxz
mov
dec
jbe
sub
push
jnp
push
jecxz
or
jae
xchg
dec
insl
mov
push
jp
or
dec
rcll
mov
adc
mov
and
mov
out
mov
arpl
xchg
stc
jae
cmp
cwtl
call
outsb
into
aam
inc
ret
push
and
sub
imul
mov
jle
push
cmp
mov
dec
pop
or
sub
pop
add
xchg
in
sub
push
mov
hlt
rcrb
mov
mov
jg
add
push
js
daa
in
and
mov
loop
mov
ficomps
mov
pop
movsb
xor
rcll
dec
mov
test
mov
clc
clc
xchg
dec
leave
jne
cmc
jle
cmpsl
xor
dec
shrl
call
sbb
enter
pop
mov
imul
lret
outsb
mov
in
adc
xchg
mov
ret
inc
incl
lret
stos
jo
add
repz
iret
adc
dec
sbb
sbb
add
sub
push
pop
xchg
mov
loopne
mov
mov
ljmp
push
roll
lret
jbe
xor
sbb
imul
in
xchg
cltd
push
fnstsw
fcoms
jae
fcoms
stos
mov
mov
test
pop
fisttpl
sbb
pop
cmpsl
inc
test
out
xchg
push
sbb
xchg
mov
sbb
mov
mov
cli
cmp
mov
adc
stos
mov
sbb
pusha
fisubrs
hlt
sub
lea
dec
les
push
dec
or
and
popa
nop
bound
dec
mov
fucom
sbb
dec
lods
mov
lods
fistps
ja
gs
and
adc
pop
lods
push
pusha
jmp
push
dec
mov
xchg
sub
rorb
mov
jne
testb
or
lahf
out
scas
adc
mov
mov
push
dec
bound
clc
or
add
sub
les
cmp
scas
repnz
pushf
in
sbb
repnz
mov
rcrl
jge
das
cmpsb
pop
scas
push
push
out
or
xchg
mov
or
push
and
mov
add
shlb
addr16
adc
mov
into
push
sarl
add
leave
pop
lea
scas
or
imul
pusha
jnp
clc
xlat
loopne
push
xchg
roll
daa
sbb
push
or
and
jno
sahf
push
in
cs
and
mov
cmp
stos
add
or
mov
ss
ficoms
mov
and
lret
arpl
and
cmpsb
xlat
sub
addr16
sub
adc
imul
pop
mov
aad
xchg
pop
inc
jb
lock
mov
mov
ja
or
jo
aas
pop
sbb
movsl
sbb
fwait
idivl
je
dec
sbb
xchg
stc
sbb
lods
dec
jge
adc
popf
lret
ds
test
xchg
push
push
xor
outsl
sbb
inc
mov
int
pop
orl
push
fistpl
leave
hlt
mov
lret
mov
push
pop
push
mov
and
fisubs
jne
sbb
in
cmc
sbb
aas
add
dec
dec
jns
pop
add
leave
pop
insb
sbb
fwait
mov
jecxz
and
and
and
mov
std
add
or
cmp
out
hlt
out
imul
jno
test
adc
jnp
das
sbb
sub
adc
fwait
rcrl
call
lret
mov
je
out
cmp
sbb
ja
sub
xorl
mov
jb
jnp
stc
dec
arpl
inc
sub
in
push
adc
and
adc
mov
cld
push
xor
imulb
sbb
sbb
test
into
frstor
outsb
movsb
ja
pop
xchg
cs
sub
pop
pop
in
jl
push
cmpsl
sbb
ja
cltd
neg
mov
es
or
aas
dec
mov
insl
cmpl
mov
adc
mov
sbb
sub
push
xchg
jge
cmp
push
mov
xor
jecxz
into
jne
insl
ss
divl
jae
add
xor
test
push
mov
sub
roll
xchg
fs
push
lahf
xchg
sbb
imull
adc
sbb
out
add
mov
cmp
push
or
test
jnp
fwait
insb
sub
sbb
mov
jp
sub
sahf
xor
mov
daa
repz
and
lret
xor
jnp,pn
cmp
mov
jmp
mov
fidivs
in
add
inc
hlt
add
cmp
bound
into
icebp
pop
arpl
fdivr
fildll
inc
stos
dec
mov
xchg
faddl
pop
fstl
mov
push
lea
testl
fninit
mov
sub
ret
testb
dec
loope
insb
mov
inc
je
dec
sbb
jmp
daa
in
xchg
outsl
xchg
fcoms
and
arpl
cmp
mov
testb
and
rcll
fsubp
dec
adc
pop
ss
jnp
mov
outsb
pop
pop
jl
cwtl
xchg
or
adc
aad
int
mov
jo
jp
mov
jl
hlt
insb
mov
loop
push
jne
hlt
sub
fwait
push
scas
iret
push
inc
mov
lods
orb
cmp
push
cmc
xchg
mov
sbb
repnz
daa
dec
mov
movsl
repz
iret
imulb
test
jecxz
call
test
jne
jg
ds
cmp
out
incl
add
cmp
mov
jno
pop
inc
ja
insb
push
jmp
cltd
push
adc
or
std
xchg
pop
mov
xor
inc
js
fs
add
push
stos
sarl
mov
jl
fcoml
pop
lods
jecxz
aam
out
push
jg
cmp
push
rorb
test
sub
push
lock
push
repnz
and
shrb
in
into
mov
movsl
add
inc
std
inc
notl
sub
cld
mov
inc
mov
sti
je
ja
mov
repnz
rol
dec
sub
pop
pop
pop
jns
fldcw
sbbb
inc
inc
mov
mov
mov
jbe
inc
and
cmp
add
mov
sahf
cli
push
push
bound
int3
add
and
adc
inc
sti
jno
pop
sbb
iret
mov
lods
repnz
sub
mov
push
std
cli
pusha
aaa
shll
pop
sbb
test
pop
test
pop
loope
lds
popf
pop
push
in
clc
scas
dec
ljmp
xorl
sub
xchg
movsl
shll
jge
fisubl
lea
je
or
aaa
out
andb
xchg
test
cmp
out
jl
mov
imul
inc
mov
dec
ret
filds
loope
push
dec
imul
rolb
inc
scas
popf
inc
xchg
jmp
mov
data16
andl
push
aam
sub
ljmp
push
fisttpl
jmp
dec
aad
xor
xor
lock
mov
adcl
flds
sbb
outsb
and
ret
xchg
xor
push
dec
lods
mov
ja
xchg
push
fisubl
xchg
lea
mov
das
push
inc
sub
push
or
movsl
int3
xor
lret
pop
insl
sub
into
mov
add
inc
test
bound
pop
push
hlt
scas
jno
cld
aas
mov
sahf
mov
out
pusha
sbb
mov
mov
cli
sub
mov
add
or
xchg
out
and
xor
mov
repnz
mov
jno
mov
add
stos
pop
movl
das
stc
sbb
push
xlat
xchg
adc
mov
pop
mov
add
test
cmp
movaps
mov
jo
push
ret
adc
in
cli
je
push
inc
mov
sub
xchg
inc
inc
xchg
movsl
fs
stos
add
ja
xchg
fdivrl
mov
xchg
sub
ds
mov
push
ret
mov
sbb
ljmp
jne
imull
dec
sub
and
push
cs
mov
cmp
out
aam
jb
mov
pushf
mov
fisttps
iret
sub
out
push
ljmp
xchg
sbb
jnp
jbe
in
push
mov
out
lret
mull
and
jno
jo
xor
add
into
out
orps
inc
lahf
push
cmp
xchg
fstpt
and
into
imulb
cmpb
or
dec
xor
jmp
clc
fcmovb
fistps
xchg
into
mov
add
and
sti
xchg
dec
aaa
push
lahf
xchg
xor
mov
cltd
pop
xchg
stos
sahf
je
jmp
mov
inc
dec
xor
sbb
push
mov
mov
shrb
sahf
push
dec
int
ds
pop
cmp
fwait
mov
test
sub
jecxz
int
and
sahf
mov
imul
aam
andb
add
roll
fmull
leave
lret
push
pop
sbb
xor
push
aam
inc
aam
sarb
adc
inc
mov
push
inc
nop
jmp
mov
pop
aam
subb
out
daa
mov
loope
add
aas
dec
fisttpll
or
nop
movsl
pop
in
jecxz
sarb
mov
fnstenv
dec
divb
imul
cmpsl
leave
arpl
xchg
adc
and
cmpb
add
shlb
popf
push
jnp
mov
fsub
roll
add
imul
or
dec
ret
dec
fidivs
repz
xchg
pushf
sub
arpl
mov
jp
and
outsl
bound
jns
outsl
adc
iret
inc
mov
or
jne
sub
mov
push
insb
cwtl
and
flds
mov
dec
inc
push
mov
js
cs
cmp
arpl
mov
adc
dec
xor
jge
dec
insl
int
mov
mov
ja
cmc
mov
add
dec
push
das
mov
lea
rclb
leave
cmp
jg
in
fcomps
and
ljmp
jg
leave
sub
push
aaa
jno
or
dec
repnz
std
mov
mov
loop
fldenv
jne
loop
cmpl
sbb
cmp
sbb
xlat
xor
cmp
repz
ja
out
aad
test
fisubl
jg
in
sub
fs
dec
jmp
test
enter
and
push
movsb
cmp
pop
push
xorb
xchg
push
pop
mov
mov
scas
push
mov
stos
popf
jmp
fs
icebp
lret
jle
mov
int3
dec
mov
lcall
pop
bnd
stc
out
daa
xor
inc
sub
clc
add
loope
dec
inc
arpl
pushf
mov
loope
cli
cld
xchg
jle
iret
test
movsl
sbb
into
mov
sbb
inc
nop
addr16
insb
lahf
and
sub
push
sahf
inc
push
mov
mov
insb
cmpsb
lock
adc
lcall
testb
push
and
dec
outsl
hlt
mov
push
loop
sub
clc
lea
pop
cld
push
ss
or
jge
out
scas
insl
cmp
dec
fstpl
push
inc
cmp
sbb
je
sbb
adc
ds
inc
clc
fldenv
push
cltd
mov
push
mov
mov
test
leave
dec
xchg
mov
frstor
cmp
sbb
test
mov
mulb
pop
push
and
bound
das
aam
dec
adc
sti
test
mov
sahf
push
test
testb
scas
jb
popa
outsl
fmull
movsl
mov
out
rep
fidivrl
mov
dec
ficoml
shll
cwtl
cmp
mov
xlat
mov
pop
mov
mov
sub
xor
jnp
mov
mov
cmpb
sbbb
dec
out
sbb
dec
fcmovb
xchg
cmp
pop
icebp
mov
jne
ret
jmp
xchg
mov
mov
pop
cwtl
movsb
negb
cmpsl
orb
mov
pop
mov
dec
cltd
loopne
xchg
stc
mov
rorb
inc
push
in
push
enter
and
adc
lea
xchg
pusha
jp
adc
cmc
adc
dec
call
cld
xor
popl
push
adc
push
pop
xor
and
call
out
mov
or
xor
adc
mov
jns
mov
or
stos
outsl
xor
fwait
push
cmp
add
push
mov
mov
dec
jl
and
das
test
rorl
mov
repz
pop
xchg
adc
test
sbb
sub
imul
cmp
xlat
test
cmpsb
sub
and
jmp
pop
imul
stos
push
shll
call
cmpsl
popa
pop
sbb
jnp
in
out
mov
test
in
push
out
or
das
jp
gs
inc
rcl
xchg
cmpsl
pop
push
pushf
add
sub
xchg
pop
or
mov
scas
daa
pop
push
and
push
push
jmp
jns
sbb
mov
cli
pop
out
jecxz
sbb
ja
pop
xchg
and
cmp
icebp
mov
and
push
hlt
mov
cmp
mov
push
repz
hlt
sub
jo
inc
fldcw
ljmp
roll
sub
cmp
ret
xchg
push
shlb
mov
xchg
dec
xchg
mov
pop
clc
jge
xchg
sahf
ret
mov
mov
or
xchg
mov
and
das
fistpll
push
mov
in
xlat
rcll
int3
jb
data16
jl
mov
jnp
aas
flds
mov
sub
adc
jo
repz
lahf
jp
inc
mov
and
aam
sbb
jnp
out
out
mov
mov
xchg
arpl
cli
imulb
mov
push
lcall
fadd
jecxz
push
rolb
jns
xchg
or
stos
call
cmp
add
outsl
cvtpi2ps
repz
mov
sub
les
mov
and
int3
push
xchg
sbb
or
mov
dec
mul
pop
mov
shl
imul
out
jl
mov
lods
jmp
mov
jbe
add
push
out
xorb
imul
add
inc
js
mov
dec
mov
or
outsl
aaa
movsl
dec
push
pop
inc
sub
xchg
dec
jmp
push
sbb
aam
gs
xor
add
jb
ficomps
adc
sbb
flds
mov
inc
mov
and
fsts
jl
addb
push
mov
test
xor
daa
xchg
and
rcrb
xchg
dec
sbb
nop
std
or
mov
bound
xchg
push
jecxz
fdivs
xchg
add
dec
testl
cmp
lock
inc
ret
subb
aam
and
dec
int3
loopne
xor
pop
cmpsl
mov
mov
fwait
add
inc
push
mov
data16
test
in
cmp
xchg
inc
ds
repz
stc
sub
int3
sub
imul
stc
xchg
popf
adc
mov
mov
rol
jae
and
xchg
cltd
pop
fistpl
mov
shl
call
test
outsb
or
pop
sti
push
je
adc
mov
idivb
out
jb
and
or
in
push
mov
dec
in
jb
xchg
repz
outsb
pop
out
incl
into
jb
adc
cld
cld
hlt
mov
decl
lea
adc
push
fldenv
das
mov
iret
shl
dec
je
shrl
mov
mov
jae
or
jecxz
fsubl
jns
xor
pop
cmp
adc
mov
cli
call
mov
adc
in
jp
jbe
sub
mov
addl
fcompl
and
movsl
xchg
inc
aad
jnp
dec
pushf
or
xchg
adc
adc
in
bound
jnp
push
dec
testb
xor
add
xor
out
add
cwtl
jle
sub
dec
rorl
fcoms
call
stc
adc
and
inc
ja
inc
jp
mov
shlb
movaps
fwait
scas
jl
mov
or
mov
add
fmuls
cmp
sbb
lret
test
mov
xchg
adc
cmp
or
sub
rcl
cmp
pop
pop
and
js
fcmove
pop
fmul
jbe
adc
es
mov
or
adc
dec
add
fdivrl
aam
scas
add
pop
stos
mov
ret
xchg
iret
add
stos
scas
ret
bound
sahf
adc
sti
cwtl
jno
pop
mov
lock
dec
and
push
scas
sbb
push
jp
leave
mov
xchg
add
jmp
sub
sbb
jmp
cwtl
stos
jge
scas
jg
xor
mov
loop
int
adc
add
pop
out
es
enter
pop
inc
push
xchg
imul
imul
sarb
fwait
stos
aas
shrb
lcall
imul
pusha
jns
je
dec
or
in
popf
or
fidivrs
mov
mov
cmpsb
pop
mov
pop
mov
inc
push
or
cld
push
scas
loopne
movsl
mov
stc
xchg
add
sub
push
pmulhuw
inc
js
jbe
repz
mov
lret
lea
or
repnz
inc
insl
fldcw
mov
lret
jbe
pop
fisubs
adc
lret
or
and
or
add
jbe
jns
mov
xchg
rorl
sbb
or
imul
lds
push
fsubrp
dec
mov
imul
xchg
sahf
nop
pop
jmp
mov
sub
xor
fcom
lret
push
lret
mov
cmp
nop
leave
xchg
loopne
out
jne
mov
push
and
cs
leave
into
repnz
push
sub
cmp
std
leave
aas
inc
jmp
mov
xor
push
out
in
xchg
and
mov
mov
sub
cmpsl
insl
xchg
jecxz
and
not
movsb
jg
push
mov
mov
ror
lcall
and
mov
mov
cmp
xlat
inc
dec
lret
popf
mov
xor
and
leave
cmp
fsubrs
bound
push
out
bound
inc
pcmpgtd
stos
sahf
lds
mov
int
mov
clc
jmp
dec
incb
test
stc
cwtl
rclb
aam
xchg
int
fdivrl
mov
mov
mov
das
leave
pop
sub
mov
cmp
fcoml
stc
popf
das
add
xor
out
andb
mov
lods
mov
adc
mov
add
jae
std
push
dec
cli
cmp
rcr
mov
leave
dec
push
inc
mov
mov
and
aam
or
mov
sti
lret
dec
cmc
aaa
push
es
dec
push
mov
pop
mov
stos
data16
addr16
rcrl
adc
hlt
addr16
out
pop
push
rcrl
jmp
mov
cmp
pop
shlb
push
inc
push
aam
ja
aas
pusha
xchg
push
aaa
mov
inc
mov
popa
sbb
test
loopne
or
xchg
ret
jnp
fiaddl
jmp
push
mov
sbb
mov
popf
sahf
cmpsb
jecxz
jb
es
ja
mov
test
add
push
rcl
inc
inc
int3
push
jne
pop
jmp
pop
repz
out
inc
dec
ret
stos
mov
add
insl
mov
scas
sub
leave
xor
loopne
jmp
sub
mov
mov
imul
aas
push
sub
aas
mov
je
cmp
lldt
test
decb
adc
and
or
dec
fcompl
sub
leave
hlt
negb
add
cmp
repz
jp
sbb
push
out
push
add
cmp
andl
stos
jmp
addr16
jb
jmp
jne
jae
mov
mov
jne
jg
leave
xor
cmpsb
push
xlat
lods
sub
lahf
dec
xor
push
clc
and
push
popa
cltd
xor
mov
sub
out
ljmp
inc
pop
je
fmulp
adc
test
clc
outsl
lds
mov
pop
xor
js
pop
push
fiadds
mov
leave
insl
and
pop
fcoms
mov
fdivl
addl
test
out
xchg
jne
aam
rcll
mov
mov
push
loop
in
xorl
les
in
cli
sti
push
fisttps
sub
les
mov
or
out
aas
ja
cld
std
add
and
aas
push
add
popa
fisubrs
jo
xchg
and
iret
ds
pop
mov
repnz
jns
in
cmp
inc
push
and
ret
mov
push
orb
mov
imul
negl
xchg
mov
fistps
fmuls
jne
or
movsl
ficoms
je
cmc
test
addb
jo
dec
add
cmp
mov
sarl
in
stos
add
gs
push
ljmp
out
sahf
in
repz
lcall
mov
scas
fidivs
popa
cli
rorl
out
sbb
div
ljmp
loop
xor
out
pop
mov
inc
enter
jmp
int3
rorb
lds
out
inc
sbb
out
adc
aaa
mov
faddp
scas
test
mov
loop
out
push
dec
lods
imul
inc
lock
jne
cmp
or
mov
inc
adc
aas
int3
fisubrl
loope
fs
push
pop
xchg
movsb
xor
shll
sub
pop
push
lds
daa
cmp
sbb
sub
mov
mov
pushf
inc
shl
lds
jb
xor
or
repnz
in
shr
hlt
pop
cmc
sub
lahf
rclb
mov
jp
sti
stos
cmpsb
ret
push
fwait
adc
xchg
inc
and
dec
mov
ds
loop
push
pusha
xor
sub
jg
fwait
add
loope
fldenv
sub
stos
xor
insb
insb
push
and
mov
fistpll
sub
mov
sahf
mov
pop
push
push
jle
aas
xor
or
test
dec
or
and
push
out
movsb
mov
and
mov
gs
pop
cmpsl
ss
adc
xchg
lods
or
popf
mov
lds
arpl
jmp
cmp
cmp
adc
inc
xchg
jno
adc
jecxz
sub
daa
ficompl
mov
push
repz
pop
stos
lods
mov
lock
cli
mov
fisubs
call
leave
sarl
cmp
mov
sbb
pop
insb
sbb
cs
mov
adc
adc
fwait
jnp
push
dec
mov
mov
add
xchg
lods
sbb
js
lahf
std
mov
adc
push
std
xchg
sti
add
and
scas
pop
daa
jne
je
std
test
or
sub
mov
mov
ret
push
test
daa
sbb
bound
iret
lret
lods
inc
addr16
sahf
repnz
pop
ret
xor
int3
add
mov
pop
push
imul
xlat
cmc
cwtl
bts
mov
xchg
aad
scas
lock
mov
pop
pop
mov
sbb
ss
mov
dec
rcrb
ret
in
add
jmp
cld
fcmovb
jnp
jno
iretw
cltd
cmp
sub
and
and
mov
cmp
mov
mov
dec
push
pop
mov
movsl
xor
push
adc
dec
xchg
inc
roll
movsl
js
fdivl
pop
rorl
jl
sbb
xchg
xor
or
mov
cmp
in
inc
push
lcall
jp
pop
insb
push
fiaddl
imul
sbb
repz
add
cmp
jo
push
je
mov
test
xor
pop
out
rclb
in
adc
out
xchg
ds
nop
push
jle
ja
inc
cld
sbb
add
ljmp
mov
jns
adc
stos
xor
adc
jb
ret
call
fldcw
das
js
dec
mov
insl
mov
sub
xchg
iret
int
xchg
popa
sub
sub
aad
push
and
lods
pop
dec
mov
pusha
stos
add
adc
ljmp
js
xchg
cmp
aam
insl
mov
cs
jg
mov
pushf
or
outsl
adc
mov
je
in
or
dec
lock
into
repnz
lretw
int3
push
rol
aad
xchg
ret
fwait
pop
xchg
pop
sub
sub
cmp
adc
ja
and
jae
xchg
sub
je
out
xor
xchg
movsl
mov
cs
sub
mov
pop
cld
xor
incl
push
fistl
adc
repz
add
adc
pop
jle
in
cmp
pusha
popa
scas
and
daa
into
push
pop
add
popf
cmp
in
xchg
in
rcll
lea
mov
sahf
sub
repz
in
xor
xchg
adc
cmpsl
pop
add
mov
sbb
mov
pop
rcll
scas
aad
mov
add
rolb
pop
mov
cmp
cmpl
or
out
loopne
addb
test
xchg
cwtl
subb
or
dec
and
dec
and
pop
adc
mov
das
aaa
addl
std
inc
rclb
jmp
loop
jecxz
lahf
ret
cmp
cwtl
call
enter
push
and
and
mov
std
fimull
or
mov
add
jmp
sub
ficomps
jmp
sti
fs
mov
je
std
les
inc
mov
pushf
push
mov
fistl
sahf
imul
cmpsb
or
or
jo
cmp
or
push
popa
jo
ljmp
pushl
insb
jge
xor
push
subl
cs
insb
add
out
out
dec
lea
cmpsl
cmp
add
jno
adc
mov
repz
push
xchg
movsb
push
ret
cmp
repz
jge
shlb
clc
adc
rcrb
xchg
push
lods
adc
mov
dec
dec
iret
cwtl
jne
mov
push
pop
dec
dec
clc
movl
push
xchg
sbbb
xchg
mov
mov
mov
js
xchg
es
lds
test
repnz
and
xchg
sarb
lcall
cwtl
pushf
jle
fs
jbe
jae
jmp
ljmp
sti
leave
add
pop
pop
dec
outsb
hlt
rorl
lods
in
mov
idivb
jno
inc
bound
pop
pop
jnp
inc
pop
lret
xor
js
inc
adc
xor
inc
push
enter
sub
add
mov
int3
insb
jne
jo
mov
imulb
es
insb
cmc
in
aad
mov
cs
mov
es
jae
mov
push
lds
in
leave
jmp
pusha
insl
mov
xchg
jp
inc
xchg
inc
iret
cmp
pop
adc
and
jo
mov
sub
cmp
dec
insl
mov
cltd
test
or
addr16
sbb
insl
lds
adc
mov
cld
hlt
pand
pusha
lea
mov
fcmovnu
psubsb
scas
in
jmp
mov
cmp
jns
dec
mov
dec
mov
xlat
test
mov
aaa
cmp
incb
lock
fisubrl
mov
cmp
in
fdivrs
xchg
or
lods
fs
test
sub
ret
in
cli
js
stos
and
arpl
stos
mov
dec
cli
inc
pusha
inc
das
pop
rcrl
pop
and
cmpsl
dec
lea
mov
adc
push
testb
mov
aas
pop
dec
div
ljmp
fs
into
mov
push
sbb
sub
pop
xchg
inc
lea
cmp
or
cmp
jns
stos
or
push
out
call
test
test
ss
push
pop
out
fnstenv
outsl
arpl
jle
xor
pushf
jnp
dec
fdivrs
in
sahf
scas
lcall
mov
pop
fldl
out
jge
mov
icebp
jl
stc
xor
test
adc
or
aaa
or
pop
inc
dec
dec
sub
clc
jle
xlat
inc
xchg
addr16
lcall
in
repz
xor
sbb
xor
mov
jne
movsl
enter
leave
mov
dec
xchg
fsubrp
scas
pop
jb
outsb
and
int
inc
pop
jb
push
pop
cld
push
push
pop
or
jg
add
out
add
mov
push
mov
fnstcw
mov
out
stc
test
popa
and
popl
cmpl
leave
lcall
scas
addr16
cmp
cld
iret
in
bound
ja
lahf
and
push
push
popf
inc
aam
xlat
or
cmp
add
lret
jmp
cmpsb
jecxz
hlt
enter
mov
loope
pop
loopne
pop
or
mov
jecxz
fwait
fidivrl
xor
test
pop
and
cs
ja
jmp
pushf
xchg
dec
insl
pop
cmp
inc
es
in
fmull
pop
sahf
mov
test
add
adc
imul
mov
dec
icebp
push
insl
xchg
bound
cltd
mov
hlt
iret
xor
test
ret
das
sbb
xchg
cmp
cmpsl
push
test
xchg
dec
outsb
xchg
push
sub
fwait
adc
fcompl
mov
xor
sbb
inc
adc
cltd
arpl
fimull
jne
insb
pushf
cs
imul
mov
rcll
outsl
jnp
lock
sbb
dec
cmpsl
mov
fimull
in
push
inc
shrl
out
lea
and
mov
xor
aaa
xor
fldenv
xchg
dec
movsb
sbb
or
pop
shlb
dec
les
dec
lods
xor
sub
orb
push
sub
jp
jmp
mov
push
imul
pop
shl
ss
mov
mov
dec
push
dec
lcall
popa
fisttpl
push
mov
rcl
push
ja
mov
out
addr16
outsl
andb
pop
divl
sub
ds
rep
fldt
inc
hlt
imul
push
sbb
mov
inc
adc
pop
mov
sub
cli
fnstenv
inc
dec
dec
pop
xchg
mov
sti
fcoml
lret
push
fistl
add
sbb
jnp
popw
xchg
add
stos
and
adc
add
inc
gs
mov
mov
mov
es
out
ja
dec
or
mov
sub
jmp
push
loopne
stos
mov
lods
shrl
test
scas
arpl
sbbl
decb
sub
dec
jmp
arpl
push
pop
js
bound
mov
call
aad
cmpsb
call
push
dec
mov
mov
inc
sub
ja
jmp
dec
pop
jle
pop
adc
dec
or
cld
lcall
cmc
jmp
and
sbb
aaa
mov
xor
out
sub
fcoms
subl
adc
inc
stos
fistl
loope
jbe
cltd
sub
jae
lea
test
pop
aas
mov
inc
lods
sbb
adc
lahf
pushf
lret
cmc
pop
repnz
lds
mov
jmp
stc
inc
push
mov
or
ficoms
inc
movsl
mov
sub
sbb
jnp
jecxz
cmc
inc
xchg
je
fldl
and
pop
or
mov
fists
lcall
movsb
sti
dec
xlat
sti
imul
mov
cmp
add
in
pop
cs
shlb
adcb
int3
adc
fidivrs
stc
adc
stos
das
scas
sub
sbb
push
dec
xor
lds
aas
loop
cs
icebp
mov
xchg
je
sbbb
test
xlat
jb
movsb
xchg
lock
mov
mov
pop
cmpsl
popa
icebp
ljmp
or
mul
dec
imull
loopne
cmp
clc
movsl
xor
mov
sbb
mov
je
stos
hlt
int3
and
push
push
jno
push
loop
outsb
push
fwait
movsb
lahf
insl
test
cmp
das
repz
inc
cmp
stc
mov
sbb
aam
es
lock
jmp
cmp
add
pop
fxch
adc
fadd
cltd
cmpb
andb
das
pop
cmp
dec
loopne
scas
xchg
sbb
daa
mov
push
cli
lods
adc
fsubrs
fbstp
mov
icebp
lock
pop
aas
aaa
rcrl
mov
pop
and
pop
mov
mov
mov
pop
ss
mov
fwait
jae
lret
and
pop
add
lods
mov
ja
lds
in
out
clc
scas
mov
loop
pop
imul
dec
and
mov
out
jnp
mov
stos
imul
scas
xchg
insb
xchg
imul
mov
adc
movups
jge
dec
aas
adc
pop
or
cmp
adc
add
push
outsl
push
pushl
cltd
sbb
imul
sbbl
xor
xchg
jb
ds
sbb
repz
loopne
adc
cltd
stos
adc
cmp
pop
mov
insb
mov
adc
lret
movsb
push
or
jmp
rcrb
fs
push
lret
push
scas
mov
sbb
push
insb
int3
or
mov
int
add
push
add
inc
fisubrl
fists
or
sbb
cmp
adc
clc
add
sbb
into
out
out
mov
sti
jb
adc
arpl
ds
es
stc
pushf
or
sahf
dec
mov
shrl
movsl
ds
mov
nop
ljmp
add
inc
mov
addr16
push
sbb
rcr
sub
cwtl
xor
and
cmpsb
cmp
rcrb
out
and
jge
repz
xchg
inc
or
imul
push
fistl
mov
lea
mov
cmp
jl
inc
std
loope
out
xchg
lcall
sarb
scas
shll
pop
adc
mov
jbe
add
ljmp
stos
mov
sub
inc
int3
jle
sbb
cmp
repz
xor
in
nop
push
dec
ss
pop
pop
mov
jbe
aaa
stos
ljmp
cltd
push
inc
lret
push
cmpsb
xor
jge
push
xor
bound
inc
aas
cmp
pop
imul
fsubl
pop
cli
fcmovu
xchg
adc
out
jg
xor
xor
insl
pop
mov
xor
insl
test
pop
fwait
cmp
add
aam
pusha
xchg
cmp
dec
mov
fistps
arpl
mov
in
sti
adc
scas
pop
ds
or
enter
jge
mov
pop
push
mov
gs
inc
lahf
mov
repz
inc
mov
bound
mov
or
jne
enter
push
ljmp
mov
inc
xor
cmpsl
sub
jo
push
sti
push
dec
mov
jo
sub
cli
jmp
rorl
ss
mov
jl
cltd
sub
icebp
mov
sti
dec
dec
out
les
xchg
insl
xchg
arpl
aam
enter
xorl
negb
mov
lahf
add
mov
sbb
ret
stos
shl
lcall
dec
push
and
movsl
pop
repz
lock
and
mov
xchg
adc
cmc
and
sbb
mov
push
and
mov
xor
mov
xor
lock
ss
cmpsb
mov
pop
cltd
sub
pop
and
mov
dec
hlt
push
push
jbe
aas
shrb
into
add
inc
and
stos
lods
loope
mov
notb
inc
push
lret
push
gs
call
fdivl
lds
test
xchg
aad
push
or
daa
or
cmp
lock
movsl
pop
fnstsw
cmp
outsl
sub
adc
mov
and
cmpsl
mov
inc
pop
stc
into
es
and
lea
cld
or
nop
jo
cmp
xor
imul
push
fnstenv
lods
lods
dec
inc
add
test
sahf
aaa
cwtl
inc
outsb
lds
mov
popw
decl
dec
int
test
and
imul
adc
aam
xor
lods
loop
dec
in
push
clc
mov
ja
mov
fiaddl
ljmp
pop
loop
jno
push
xchg
inc
ret
pop
and
or
inc
cltd
call
jp
out
insl
subl
test
sub
mov
loope
stc
aad
add
cmpsb
ljmp
in
pop
andb
jne
fcompl
out
aad
mov
cltd
add
inc
repz
and
dec
dec
jge
mov
mov
mov
xchg
loopne
xchg
lea
int3
push
in
xor
inc
fucomip
je
popf
aad
loope
fcmovb
mov
cmp
pop
cmc
xchg
push
mov
sub
and
push
enterw
xchg
mov
dec
ret
and
stc
add
and
lret
xor
sub
jecxz
jne
fisubs
lock
xchg
insl
cmp
add
push
cmp
jp
jnp
jmp
or
jmp
or
rol
insl
sbb
and
js
jne
pop
out
pop
out
ss
mov
movsl
es
sbb
sarb
push
ss
xorl
std
into
or
jbe
or
inc
lds
mov
icebp
and
shl
jae
idivb
mov
sub
aaa
loopne
lret
dec
xchg
fiadds
xor
jae
in
ljmp
pop
inc
dec
inc
or
ljmp
or
leave
xchg
push
mov
test
dec
adc
ss
call
sbb
ret
pop
dec
ja
insl
push
js
bound
mov
jmp
xchg
movsl
shll
adc
pop
jecxz
dec
or
xchg
push
paddsb
dec
mov
aas
mov
in
cmpsb
clc
adc
xchg
adc
pop
inc
jmp
into
lahf
dec
mov
mov
ficoml
loope
push
lret
mov
xor
cld
cmp
stc
je
call
adc
jnp
test
inc
push
insl
out
xor
sub
pop
arpl
repnz
enter
xchg
scas
lahf
ljmp
loopne
movl
fwait
nop
jne
sbb
cmc
xlat
sbb
push
jo
iret
fstpl
in
push
fcompl
movsl
ja
imul
pop
test
daa
idivb
neg
fisttps
xor
xor
push
inc
push
mov
mov
aaa
dec
rcrb
push
in
xor
enter
push
xor
out
ss
jmp
rcrl
in
adc
sbb
sbbb
cmp
mov
push
mov
fiadds
lea
lahf
jmp
jp
lret
lea
test
mov
fcmovbe
jmp
aas
sub
jl
outsl
test
fsubrp
dec
mov
ds
cmp
inc
lock
sub
xchg
inc
lahf
pusha
adc
mov
in
fcompl
xchg
pop
inc
repnz
cmp
fs
push
jmp
mov
jg
or
and
xchg
push
fnsaves
push
xlat
mov
ljmp
add
xor
test
stos
xor
loopne
jecxz
mov
fdivs
lahf
loop
test
sub
test
loop
push
xchg
pop
inc
mov
and
sahf
add
gs
jnp
stos
add
sbb
enter
add
jo
fsubr
jae
xlat
fs
jnp
gs
cmpsb
mov
xor
jnp
imul
xor
mov
jnp
push
js
out
lds
cmc
out
jne
inc
mov
sahf
or
mov
jb
test
sub
dec
push
push
loop
cli
lahf
arpl
or
or
sbb
rolb
outsb
test
lea
inc
jnp
fstl
xchg
xchg
push
ja
mov
outsb
mov
push
setp
mov
divl
mov
rcrl
and
rclb
jp
jecxz
fsubrs
and
aam
pop
arpl
sub
out
lock
sbb
adc
xchg
icebp
in
lret
les
mov
cwtl
sbb
inc
inc
lahf
add
test
stos
cmc
shrl
mov
push
out
or
or
rcrb
fisubrs
shll
aaa
inc
xchg
das
sub
xor
push
lea
lcall
leave
ret
xchg
xchg
aaa
and
and
jb
mov
sbb
xchg
push
pop
and
dec
lea
rcrl
aam
pop
inc
shl
aaa
xchg
addb
mov
ret
incb
mov
in
xchg
stos
push
movsl
clc
sbb
and
dec
or
aaa
pop
pop
pop
aad
sub
adc
aam
inc
shlb
and
fdivl
jnp
push
ror
pop
movsl
pop
fimuls
in
mov
scas
inc
addr16
push
ret
mov
jp
cltd
inc
daa
sti
sarl
jae
mov
dec
loopne
mov
mull
mov
testl
inc
xchg
rcrl
mov
inc
xorb
lahf
inc
add
bnd
xor
cmp
push
add
adc
inc
mov
cmp
mov
dec
pop
add
inc
xchg
push
cmp
iret
cmc
jmp
out
inc
bound
js
mov
adc
mov
shlb
mov
cmpb
xorl
jmp
div
cmc
js
es
subl
icebp
xlat
adc
into
inc
xchg
inc
sub
pop
push
cwtl
imul
jl
jae
jg
mov
mov
test
dec
pushf
fwait
mov
nop
mov
ficoml
push
mov
jno
shl
stos
in
dec
and
popf
sub
or
lea
leave
out
push
inc
pusha
pop
jle
mov
sbb
movsb
xchg
in
pop
rolb
outsb
bound
adc
fwait
push
mov
push
push
imull
mov
adcl
pop
in
push
push
js
insb
cmp
test
lock
shl
jmp
insl
enter
int
shl
and
stos
xchg
mov
in
cmp
jo
cmp
push
enter
pushf
cmp
cmp
mov
sub
cltd
aas
sub
xlat
stos
shl
jge
iret
pop
clc
setle
xor
mov
ljmp
lock
out
cmpb
inc
xchg
mov
pop
push
aad
sbb
push
xchg
sbb
pop
push
add
and
pop
cmp
jo
movsb
sahf
and
out
sti
enter
in
divb
xchg
xlat
imul
cmp
mov
push
std
cmpb
and
jae
je
cltd
int3
cld
stos
outsl
ljmp
xchg
inc
or
mov
sti
cmpsb
dec
fwait
dec
iret
or
adc
jle
ss
dec
pop
mov
cmpb
je
adcl
lcall
push
push
cmc
xor
rol
adc
push
lcall
test
pop
test
inc
iret
mov
fldl2t
xchg
inc
add
xor
jg
sarb
into
sahf
or
fs
dec
sub
ret
mov
add
cmp
das
fsub
mov
insb
das
shlb
call
mov
push
adc
rolb
rcrl
std
inc
jg
pop
outsl
das
jae
sbb
ror
inc
jle
mov
insb
loope
jbe
stc
and
sub
ret
jle
outsb
cmc
loope
fbld
out
dec
das
pop
in
push
inc
out
dec
mov
pop
dec
loope
mov
popf
mov
mov
mov
das
and
mov
iret
push
adc
inc
mov
sti
cmp
and
pop
out
decl
es
sub
shrl
daa
or
rcrb
loopne
std
mov
call
pop
ret
pusha
test
cmp
sarl
shr
push
dec
roll
cltd
mov
out
mov
fstp
push
out
sbb
cmp
popf
fildl
fwait
hlt
pop
inc
xchg
sbb
dec
repnz
and
adc
shll
or
test
lods
lret
out
mov
push
sub
shlb
sub
fisttpl
icebp
sbb
mov
test
xor
or
xchg
adc
cs
repnz
push
fstps
cmpsl
push
xchg
mov
mov
or
or
jg
daa
mov
das
mov
ljmp
mov
outsb
push
push
xchg
ds
sbb
mov
push
mov
scas
and
je
in
dec
fndisi(8087
xor
inc
lods
sbb
inc
js
fwait
aam
femms
flds
repnz
jb
add
movups
rcll
pop
and
push
hlt
enter
dec
dec
add
movsl
cltd
add
pop
fwait
repz
insb
add
iret
aaa
jns
xchg
rolb
xchg
mov
push
pop
cmp
ds
lret
inc
mov
mov
pop
push
jb
hlt
xchg
cmp
cmp
ret
imul
repz
dec
mov
bnd
fmulp
nop
std
cmpsb
lods
dec
jo
loope
xor
call
push
mov
aad
cwtl
sti
jmp
jae,pt
sbb
jo
jnp
xchg
jae
xchg
shl
push
mov
int3
xchg
xchg
mov
and
mov
mov
xchg
sub
pop
setl
imul
insl
push
adc
ja
push
xor
dec
out
lahf
mov
jle
arpl
pusha
scas
jae
sti
push
mov
adc
dec
movsb
jno
inc
jne
orb
adc
movsb
cmp
mov
cmc
push
or
dec
add
jge
loop
pop
push
lret
hlt
mov
xchg
mov
xchg
and
scas
adc
insb
dec
movsl
jle
out
cmc
pop
fnsave
in
or
sub
xor
fistpll
ds
lods
xor
mov
lods
push
push
lea
add
pop
inc
fwait
stos
into
inc
ljmp
cld
fwait
inc
inc
stos
add
inc
mov
xorb
pop
mov
icebp
iret
imul
xor
xchg
loope
mov
aad
lret
mov
mov
out
shll
popa
out
add
pop
mov
testl
push
adc
outsb
mov
ja
mov
pusha
scas
mov
jg
cli
je
push
sbb
mov
push
adc
and
and
repnz
mov
pop
cld
imul
fwait
pop
push
dec
out
or
mov
aaa
xlat
pushf
or
fistl
pop
in
movsb
sbb
and
lock
and
inc
jmp
sub
fimull
cmp
push
inc
cli
push
or
pop
out
push
aad
fucomi
jecxz
shl
push
jnp
xor
cmp
fstps
or
or
popa
lea
push
dec
cli
lods
in
sbb
dec
jbe
filds
sbb
in
ljmp
test
xlat
stos
out
push
jecxz
cli
pushf
mov
sbb
pop
dec
cwtl
lret
fidivl
sbb
aas
mov
ja
xchg
cs
out
push
shll
cmc
in
cs
sbb
pop
inc
imul
push
adc
jno
inc
push
mov
push
lret
pop
xchg
jl
dec
dec
cld
je
mov
push
pop
into
inc
fsubrp
dec
jecxz
in
and
pop
sub
repnz
es
dec
sbb
cmp
xchg
hlt
cld
pop
mov
push
loop
lret
out
dec
xchg
outsw
fildl
and
inc
stos
lea
out
jae
push
mov
out
sti
mov
popa
and
pop
and
xor
fcom
aam
inc
lods
call
jns
iret
movzwl
add
mov
xor
std
jecxz
addps
pop
xchg
loopne
dec
cmp
xlat
ret
or
mov
andl
mov
fsubl
jg
dec
scas
sbb
lods
push
mov
test
sbb
push
into
rolb
loopne
pop
repz
imul
das
inc
in
cwtl
sub
mov
xchg
lret
mov
mov
pop
cmp
notb
jae
pop
lcall
or
icebp
pushf
gs
fisttps
push
clc
pop
mov
popf
pop
jp
enter
mov
insl
or
lods
add
test
cmp
jns
rcrb
cld
test
jo
dec
movsl
aam
loope
add
and
fistps
jno
and
into
aad
cmpsb
notb
inc
cmp
popf
and
mov
push
or
jl
cmp
pop
std
in
xor
jp
aaa
push
jg
jnp
iret
sbb
insl
adc
pop
in
xor
jecxz
xor
xor
jg
xor
mov
mov
movsb
xchg
loope
mov
mov
or
xchg
sub
push
shll
jno
cmpsb
test
call
inc
cmp
adc
in
rcll
jmp
in
mov
or
xor
pushf
ret
xchg
xor
fdivr
aad
push
lcall
push
dec
mov
repnz
sub
dec
dec
inc
ror
cltd
jl
repnz
and
or
mov
iret
inc
out
addr16
cmp
stc
xor
cmp
loopne
adc
and
sub
or
sub
scas
orb
adc
inc
into
sbb
cld
mov
lea
lods
clc
out
lcall
and
test
push
repnz
mov
insl
mov
fistpl
jno
stos
leave
inc
push
mov
push
pop
inc
xchg
and
sub
pop
filds
lret
lret
jb
add
lods
lahf
push
dec
xchg
cltd
inc
and
movsl
pop
jnp
pushf
adc
jp
push
and
xor
loope
lods
cli
aad
movsl
sub
fs
adc
cmpsl
inc
popf
test
sti
pop
adc
mov
jg
sti
out
testl
aam
sahf
rcrb
sbbb
insb
pop
adc
sti
in
jno
push
pop
adc
or
nop
mov
aad
cld
in
push
leave
out
jg
mov
sub
dec
ja
iret
xchg
inc
sbb
rcll
xor
fidivl
xchg
mov
xor
cmc
inc
push
int3
lret
xchg
mov
hlt
addl
xor
movsl
popf
cmpsl
lret
test
sub
faddp
pop
jnp
xchg
aam
lret
dec
inc
loop
fwait
dec
ljmp
testb
int
xlat
dec
icebp
xlat
jmp
jge
lret
sbbb
xor
pop
fistps
ror
in
push
xor
cld
adc
sub
mov
adc
inc
push
inc
imul
mov
lea
inc
in
add
repnz
cmp
add
mov
fisttpl
cld
std
jns
jp
mov
and
shl
push
xchg
push
sub
xor
imul
ret
push
or
stc
xor
xor
lahf
test
xchg
mov
or
mov
xchg
xor
or
mov
xchg
sbb
jecxz
stos
push
mov
out
xor
test
mov
mov
xlat
lret
mov
lods
mov
jl
jno
mov
adc
repz
xchg
cmpsb
inc
xor
mov
lret
and
clc
pop
xchg
aad
out
aas
add
pop
pop
gs
ds
mov
lods
hlt
sarl
bound
fsubrs
scas
cld
loop
lds
aad
sahf
jns
enter
mov
sbb
xchg
xchg
jbe
jo
into
loope
push
outsb
outsl
jecxz
lods
nop
mov
add
popa
fdivrs
js
ret
sub
pop
mov
fists
pop
cli
fucompp
cli
sbb
mov
jl
pop
jb
dec
jmp
daa
fstl
nop
fsts
pop
dec
dec
cs
fs
jg
or
dec
dec
aad
add
fs
xchg
pushl
into
and
into
fsub
adc
les
std
push
dec
lea
sbb
cmc
pop
jae
lret
scas
dec
fwait
push
je
add
mov
daa
inc
scas
dec
rorl
inc
pushf
push
adcl
adc
cmpsb
mov
mov
lds
lods
pop
xchg
inc
leave
add
push
jne
mov
mov
inc
mov
in
add
add
mov
loop
pop
fsubp
inc
in
push
xchg
push
nop
pusha
push
enter
adcl
jge
mov
xlat
outsb
mov
push
icebp
sar
aas
out
fisubrs
pop
clc
lret
mov
xchg
out
js
push
sub
fwait
js
sub
adc
jl
fs
pop
ret
out
pop
mov
dec
in
jle
jae
out
movsl
iret
test
movsb
insl
xchg
or
jmp
cltd
push
lods
cwtl
mov
mov
and
mov
adcb
mov
popa
mov
mov
mov
stos
loop
xchg
add
ljmp
pusha
fiadds
nop
iret
in
adc
mov
into
push
lcall
addr16
daa
mov
adc
dec
mov
push
aas
mov
fidivrl
out
mov
syscall
sbb
and
mov
shl
adc
adc
sbb
push
adc
push
sub
lds
in
daa
pop
stos
aas
xor
pop
sbb
xchg
or
pop
faddl
and
push
fldenv
or
fnstenv
adc
stos
dec
sbb
push
out
lods
jo
pusha
or
mov
ret
lods
in
pop
pop
ljmp
pop
dec
jp
xorl
cltd
sbb
inc
int3
decb
sarl
push
repnz
xor
mov
xchg
jnp
ror
push
in
adc
xor
and
hlt
or
dec
jg
cmp
mov
mov
mov
addr16
divb
mov
xor
mov
add
addr16
cld
mov
aas
sub
jnp
pop
sub
cld
addr16
inc
out
mov
sbb
inc
jne
imul
inc
push
lret
std
popa
add
push
fnsave
js
mov
jno
and
sub
aaa
sub
gs
js
mov
dec
sbb
sbb
sbb
fwait
xor
mov
in
out
sub
jno
mov
cmc
jno
xchg
pop
int
jmp
mov
dec
fstl
aam
pop
into
cmp
mov
call
jp
mov
daa
test
pop
push
les
mov
mov
mov
fucomi
push
cmp
dec
outsl
and
insl
jne
lods
mulb
adc
xlat
and
jecxz
and
cmp
adc
dec
test
addr16
bswap
lea
jae
mov
mov
push
into
pop
pop
dec
lock
shll
jbe
nop
push
push
jnp
xbegin
leave
decb
pushf
xchg
mov
test
repnz
rorl
mov
adc
cmp
shll
jb
lahf
mov
push
cwtl
repnz
jmp
push
adc
cmp
into
adc
inc
lods
xor
stc
or
dec
cmp
notb
scas
movsb
jb
fs
mov
push
inc
les
inc
sbb
adc
pop
and
mov
xchg
push
xor
sub
aas
subb
and
or
outsb
mov
push
test
mov
cmpsl
out
fstpl
test
ljmp
cmpsl
imull
in
cwtl
std
mov
xor
leave
mov
cmp
jmp
sub
push
iret
out
aam
xchg
xchg
mov
xchg
adc
ror
mov
dec
or
push
and
push
shll
idiv
add
push
jge
xchg
movsb
neg
aas
pop
pop
outsl
jp
xchg
stos
adc
adc
outsb
shrl
ret
cwtl
and
jl
jle
xlat
and
add
inc
dec
xlat
mov
jp,pn
mov
add
cmp
sub
rcrb
ret
or
scas
dec
adc
sti
stc
inc
inc
pop
xor
push
fldenv
and
lods
loope
and
out
sbb
ret
std
aaa
nop
pop
cmp
dec
jmp
or
mov
int3
scas
mov
inc
cmp
push
mov
adc
mov
sbb
or
push
test
dec
std
jno
mov
dec
bound
out
fists
jae
mov
or
dec
test
or
add
mov
xor
in
add
jns
push
dec
adc
sbb
hlt
ret
push
push
lea
orl
push
or
push
push
sbb
test
inc
push
push
mov
push
std
enter
sub
pop
dec
fwait
mov
mov
sahf
in
out
jns
and
mov
outsb
into
push
lea
mov
and
and
aaa
mov
cmpsb
push
insb
push
or
addr16
and
scas
mov
sbb
dec
es
lock
aad
inc
pop
lcall
jg
mov
lea
sub
mov
pop
loope
imul
int
cmpsb
pop
test
jl,pt
mov
fcoms
cmpsb
add
outsb
add
aaa
mov
in
mov
sbb
rorb
orb
xchg
nop
cmc
jno
dec
sbb
push
mov
dec
rcrl
jmp
in
adc
test
gs
sub
mov
scas
movsb
dec
testw
inc
stos
pop
loopne
rcrl
inc
push
imul
inc
inc
arpl
stos
sbb
outsl
push
or
jl
stos
cmpsb
or
dec
sbb
repz
scas
bound
repnz
xchg
xchg
aam
or
in
xchg
sbb
aam
and
ret
movsb
enter
lret
fidivs
sti
iret
sbb
push
mov
lahf
or
jmp
xor
divb
dec
cmp
push
pushf
push
stos
add
lret
jae
xor
xor
pop
jg
ret
cli
jge
jmp
and
insl
outsl
loope,pt
into
cmp
xchg
inc
out
pop
je
mov
inc
push
scas
adc
call
jno
lea
jl
and
mov
popf
jno
jl
cmp
jo
push
mov
in
jmp
out
xchg
mov
mov
jb
sbb
xchg
mov
push
xchg
rcrb
insb
jle
sbb
push
mov
out
pop
add
andl
or
cmp
push
call
fmull
mov
pusha
adc
or
imul
dec
cmpsb
scas
dec
lods
pusha
movsl
outsl
out
das
lods
push
add
mov
jnp
push
mov
mov
mov
sub
add
mov
shr
and
cld
push
sahf
push
push
mov
ljmp
aaa
pop
inc
xor
mov
cli
push
mov
push
rcll
int3
mov
bound
fisttpll
mov
cld
fnsave
push
iret
into
daa
add
or
push
mov
inc
inc
stc
lret
inc
add
adc
xchg
jbe
es
ss
das
pop
shll
dec
ss
pop
cmp
jp
negb
inc
sub
push
mov
pop
test
lret
mov
add
out
inc
aas
fsubs
shll
icebp
push
xchg
push
inc
dec
jge
addl
inc
sub
je
cmc
add
mov
stos
cli
aaa
and
pop
dec
sbb
adc
fidivs
fistpll
popf
xchg
mov
call
outsl
popf
nop
ja
jp
xor
daa
dec
dec
pusha
pop
int3
stc
test
mov
mov
add
icebp
inc
loope
inc
mov
test
sbb
insb
sub
or
subb
roll
push
addr16
inc
xchg
fsubl
fcmovb
notb
sub
pop
sbb
and
lods
dec
xchg
ss
jae
mov
sub
pop
fwait
ljmp
scas
test
adc
out
sub
cmp
sbb
dec
fildl
mov
loop
sub
xchg
loope
cmp
lea
xor
fcmovnb
xor
push
and
mov
in
dec
outsl
sub
adc
cld
sti
sub
fwait
outsb
xor
lcall
data16
repz
mov
mov
les
rorl
fdivrs
std
sbb
mov
je
sub
pop
or
mov
or
jp
fsubl
es
cmp
fisttpl
mov
inc
or
mov
or
pushf
or
enter
sbb
and
jmp
das
jl
rcl
sub
movsb
addr16
push
jns
es
push
cmpsb
push
test
sub
jmp
mov
and
or
sbb
and
jb
jge
lret
mov
or
mull
stos
imul
xor
xor
xchg
pop
sub
data16
imul
inc
cmp
push
insb
jbe
cmp
shr
or
adc
push
out
xchg
push
lds
push
arpl
fbstp
outsb
or
mov
jns
mov
sub
jecxz
or
rorl
aas
or
pop
lahf
dec
je
out
jne
lret
ljmp
fimull
shll
inc
or
cmp
sar
dec
mov
nop
jecxz
mov
pusha
adc
or
sti
adc
push
sub
out
mov
xchg
xchg
ficoms
add
adc
test
loopne
dec
mov
jnp
std
mov
adc
rcrb
dec
mov
mov
shll
inc
dec
imul
scas
sbb
addl
pop
pop
aas
push
inc
inc
loopne
jp
cmpb
ret
pop
pushf
gs
sbb
push
idivb
pop
push
lahf
mov
mov
sub
cmp
pop
xor
movb
xor
dec
outsb
adc
inc
dec
fmull
cmp
insb
loop
vpshad
lock
sti
or
popa
lods
in
cmp
dec
jmp
or
lea
dec
into
je
sub
push
sbb
pop
xor
mov
jle
sbb
jl
je
shl
hlt
iret
stos
in
cmpsb
pop
je
cmp
cmp
inc
js
xchg
fmuls
cmp
xchg
dec
rcrb
inc
dec
adcl
xor
add
add
sbb
test
addb
cmp
pmuludq
and
lret
inc
lahf
pop
pop
xor
jbe
out
ret
insl
in
into
add
cmp
dec
fstpl
mov
or
sbb
test
sti
ret
jbe
xchg
pop
push
xor
mov
bound
mov
hlt
and
xchg
add
mov
popa
mov
shlb
mov
test
pop
xchg
sub
test
push
jnp
cmp
mov
aad
push
mulb
rcrl
lock
loopne
xor
jle
mov
stc
adc
mov
ss
aaa
les
push
popa
mov
mov
das
pop
sbb
mov
and
call
mov
push
jg
lret
sbb
or
clc
testl
jns
ficoms
jle
xor
sub
repz
mov
sar
in
add
xchg
or
ja
test
fs
xchg
nop
xchg
xchg
fnstenv
xor
fxch
add
andb
hlt
cmp
test
test
fbld
add
mov
push
int
pop
sbb
nop
mov
aam
ficoms
ficoms
sbb
mov
pushf
aad
leave
push
mov
push
mov
inc
les
fs
pop
std
sub
jne
push
icebp
roll
jg
repz
in
xor
in
insl
cmp
sub
add
aas
pushf
jae
sarb
push
ja
sti
and
jmp
xlat
sub
sbb
outsl
mov
movsb
nop
xor
add
xlat
inc
stos
test
mov
add
movsl
imul
cli
movsl
jle
loopne
cmp
fs
int
into
std
cmp
stos
sub
inc
aam
xchg
push
push
cmc
outsb
aad
and
and
push
idivb
add
mov
xor
mov
add
mov
outsl
fsubl
rclb
int
jmp
insb
cwtl
bsr
mov
jp
repz
mov
pop
lret
mov
testl
push
sbb
test
and
pop
pop
mov
pusha
jmp
cmp
sahf
jae
inc
and
sti
enter
cmp
imul
and
xchg
cmp
movsl
sbb
hlt
adc
ja
cld
mov
inc
inc
jg
insl
push
ja
lret
imul
or
adc
loopne
xchg
dec
out
jae
xchg
push
hlt
movb
jb
cmp
aam
push
pop
loope
inc
cmp
xor
sub
ss
add
dec
js
ds
call
mov
push
jl
mov
pop
fsubrl
jo
mov
dec
ja
add
inc
push
jne
xchg
fistpll
std
adc
rorl
xor
xchg
dec
or
lock
pop
leave
sbbb
or
pop
pextrw
cmp
xor
fists
shll
add
xchg
and
mov
mov
nop
sbb
mov
dec
push
imul
scas
sbb
mov
es
mov
test
shrl
fstp
sbb
xor
jo
in
jbe
dec
test
inc
test
mov
outsl
sarb
xor
fstps
sub
jge
shrb
jmp
repnz
in
and
daa
loop
inc
sbb
push
add
pop
fwait
sbb
jbe
add
cmpsb
aaa
jecxz
loope
xchg
or
lret
mov
push
lcall
adc
arpl
sbb
adc
xor
outsb
lock
jmp
lret
inc
orb
test
imul
ljmp
int3
mov
negl
int
sti
fdivrs
xlat
pop
loopne
repnz
sbb
leave
test
out
sbbb
enter
jno
pop
fsubr
rcll
xor
sbb
xchg
cmpb
decl
enter
daa
and
enter
mov
in
inc
add
xchg
dec
out
or
ljmp
pop
add
sub
adc
insb
stos
cmp
dec
lret
mov
enter
xchg
fnstcw
or
push
mov
gs
lahf
push
adc
sbb
jb
and
lcall
outsl
fidivrs
push
add
pop
cmp
lret
popf
jo
aad
push
dec
scas
jb
xchg
adc
cmp
xor
cmpsl
jbe
sbb
hlt
hlt
push
mov
repz
gs
stos
or
pop
mov
out
pop
or
sti
nop
lea
fistl
and
add
jmp
pushl
jge
mov
pop
xor
sbb
sbb
pop
mov
aas
inc
mov
add
mov
popa
scas
jbe
movsb
and
cmp
xchg
or
pop
mov
mov
popa
out
and
cltd
andl
aaa
adc
aaa
je
repnz
adc
inc
sub
fisttps
lret
xchg
adc
add
cmp
aad
mull
rcr
ja
imul
out
adc
stos
pop
mov
in
mov
push
mov
pop
sbb
xor
ret
jno
lahf
xor
jae
mov
inc
pop
jno
mov
push
xor
inc
mov
pop
adc
leave
test
sbb
push
arpl
jnp
mov
fidivl
cmpb
xor
ret
lahf
mov
ret
mov
icebp
xorb
mov
mov
mov
in
pop
adc
xchg
out
jmp
xor
xchg
imul
sub
xor
nop
xchg
push
jns
mov
js
cmpsl
mov
jge
pop
aad
jecxz
cltd
mov
inc
loope
jmp
push
repnz
sti
fbstp
push
shl
out
push
lcall
lahf
pop
es
push
sbb
jmp
aaa
pop
leave
mov
mov
clc
sub
int3
pop
dec
icebp
jb
arpl
sbb
push
adc
in
dec
mov
xor
cwtl
lods
xorl
or
rcr
addr16
es
cmpsl
push
std
shl
xorb
call
hlt
aad
clc
mov
push
clc
adc
mov
out
mov
addl
or
add
iret
sarl
jae
outsl
xchg
and
out
or
loopne
sub
push
pop
int
mov
jae
fucomp
push
or
mov
fstpl
inc
push
pop
les
xchg
push
cmpsb
mov
mov
sbb
stc
xor
aad
sub
sarb
movsb
xchg
mov
cmp
push
popa
jns
mov
leave
shl
sarb
lahf
les
mov
jl
push
mov
aas
std
pop
inc
mov
cmpsl
mov
arpl
scas
nop
xchg
xchg
or
js
jmp
notb
cltd
flds
sub
fsubrs
add
cmp
pushf
lds
cwtl
sbb
mov
xor
dec
clc
fwait
pop
add
aad
inc
inc
jmp
repnz
xor
loop
xbegin
or
aas
mov
loop
call
lahf
outsb
fiaddl
fnstcw
aas
mov
fidivrs
mov
mov
rcrl
cltd
mov
xchg
iret
dec
mov
daa
xor
jnp
adc
movsb
mov
ror
shrb
jge
xor
test
dec
mov
fnstenv
or
lods
daa
cmpb
xlat
nop
add
fs
xor
sub
xchg
push
into
in
je
jmp
xchg
inc
mov
sti
aaa
jle
mov
fidivs
je
int
sub
sahf
add
out
sbb
cmp
orl
pop
dec
ja
jg
mov
push
dec
aas
clc
adc
jb
mov
sub
sbb
lret
bound
das
xor
dec
sub
ret
testb
push
adc
jnp
mov
je
inc
push
stc
stos
sarb
inc
mov
ret
rcr
test
lds
cmp
jecxz
mov
clc
fildl
and
push
shrl
and
icebp
mov
in
hlt
sarl
lahf
fdivrl
aaa
out
or
outsl
int3
lock
dec
xchg
pop
cmp
add
or
push
and
dec
loope
jnp
mov
lsl
in
inc
in
pop
or
popa
loope
pop
sti
pushf
mov
add
xchg
addl
cld
lcall
or
cmpsb
aaa
jb
inc
nop
idivl
sbb
xchg
cwtl
mov
mov
insl
jo
hlt
icebp
sub
pusha
jmp
in
and
insl
sbb
push
xor
push
scas
push
imul
inc
pusha
out
std
jnp
leave
call
pop
xchg
pop
fwait
in
test
pop
mov
xor
xlat
cld
sbb
dec
sub
xor
dec
shr
jge
cmpsl
add
jmp
mov
sbb
mov
push
xor
das
mov
push
push
push
neg
xchg
pop
cltd
cmpsl
mov
sub
xchg
jmp
push
popa
mov
mov
stos
add
mov
addl
mov
ficompl
mov
js
es
rorb
jmp
push
stos
inc
ja
sbb
sbb
rorl
je
and
ljmp
into
lahf
sub
iret
imul
add
xchg
inc
jg
cmc
or
pop
sbb
adc
testl
into
sahf
sbbb
test
adc
mov
lcall
xchg
pop
push
cld
jp
dec
sbb
push
mov
cmpl
mov
gs
mov
rcrl
mov
mov
jp
fsubl
xor
cmp
inc
inc
inc
mov
mov
outsb
cmc
xlat
adc
pop
or
adc
lds
mov
jne
pop
sub
daa
mov
dec
push
cmc
inc
inc
cmp
pop
nop
pop
icebp
and
test
adc
jge
movsb
fsub
or
je
cwtl
inc
mov
jl
push
addl
push
aaa
scas
popa
sysenter
in
notl
ret
pop
bound
inc
xchg
stos
inc
jb
xor
push
or
jp
mov
jmp
dec
xor
mov
sbb
fidivl
jge
mov
dec
and
arpl
hlt
scas
pop
icebp
pop
imul
int
xchg
ja
push
daa
add
xor
ss
jne
mov
pop
fs
mov
or
xor
mov
int
mov
mov
xchg
out
les
mov
sub
dec
xor
cld
push
xchg
add
xor
sti
rcr
mov
arpl
roll
mov
daa
cmp
fisttpll
xchg
nop
or
inc
int3
mov
fs
movsb
add
mov
pop
mov
lods
push
mov
dec
xchg
repnz
test
cmp
mov
insl
ret
icebp
dec
out
inc
push
xchg
fwait
movsl
cmpsb
fstl
jo
cmp
mov
jg
test
repz
test
and
js
jbe
cmp
mov
pop
cld
xlat
or
insb
cmp
xchg
cmp
call
test
xor
adc
lret
shlb
inc
dec
xor
adc
xchg
and
out
test
sbb
mov
cmp
fcmovbe
cld
sub
pop
jb
sub
mov
daa
sub
pop
iret
lcall
ja
fld
cmp
xlat
sub
push
cmp
loop
mov
rolb
rcrb
lods
xchg
js
push
cmp
test
in
push
jg
lahf
mov
ljmp
lods
jg
loopnew
xlat
pop
mov
js
nop
mov
mov
imul
repnz
xchg
xchg
cmp
pusha
ret
mov
pop
out
jae
fidivs
iret
lret
mov
pop
sahf
xchg
xchg
dec
not
add
sarb
repz
cltd
leave
stos
cmp
lahf
jg
jno
add
inc
mov
jmp
in
test
push
inc
mov
xor
pop
push
arpl
pop
lcall
mov
inc
je
sbb
jp
sbb
jno
fwait
push
cli
dec
stc
xor
shlb
insl
cwtl
xchg
sbb
pop
adc
loope
scas
scas
inc
jmp
arpl
cmp
mov
test
and
pusha
out
stos
cld
xor
stos
xor
pop
mov
inc
mov
push
cmpsl
dec
ficompl
cmp
jmp
lret
arpl
dec
jmp
jp
cmpsb
jne
fbstp
jo
mov
lock
mov
fistps
stos
shlb
imul
vmwrite
and
es
mov
aaa
cli
aam
push
pushf
xor
cmp
mov
test
add
sbb
ficompl
sti
jg
movsl
mov
mov
popa
repz
lret
outsl
push
adc
mov
js
mov
lods
int
and
cmp
fistps
mov
adc
cmp
mov
nop
out
mov
and
js
fcmovnbe
inc
outsb
test
cmp
fidivrs
shl
push
jnp
les
loopne
jle
sub
pop
sbb
and
adc
sub
mov
mov
call
push
push
xchg
inc
fistpl
push
sarl
das
cli
or
jle
clc
out
mov
iret
js
pop
push
xorb
mov
cwtl
cmc
cmp
jmp
iret
sbb
cmpsl
lret
mov
aaa
or
dec
fcomi
jne
jl
mov
xlat
js
sub
aam
xchg
mov
pop
outsb
add
mov
adcb
fsubr
mov
push
in
mov
cwtl
and
jnp
mov
xor
leave
leave
sub
fmuls
imul
sub
mov
push
loope
in
jmp
mov
pop
sahf
xor
jp
mov
or
push
sahf
or
test
mov
fsubrl
push
and
test
in
dec
fs
inc
ja
xchg
fcompl
mov
xor
pop
xlat
sub
and
dec
decl
fs
incb
sbb
sbb
daa
pop
pop
xor
aas
sub
cltd
push
sbb
sbb
lea
sbb
pop
out
lods
push
cmpsl
cld
and
iret
jo
or
ljmp
cmpsb
clc
jmp
mov
mov
insl
mov
out
scas
and
arpl
int
mov
loope
fistpll
out
adc
jno
cli
jmp
popa
dec
clc
test
aas
adc
and
adc
lds
mov
mov
stos
insb
je
int3
push
push
dec
xor
pop
push
or
mov
xor
xor
mov
pop
cmc
int
and
nop
cmp
mov
ljmp
adc
loop
mov
and
xchg
xchg
sti
and
out
inc
and
xchg
dec
jo
sar
sbb
cmp
icebp
in
in
push
jle
pop
mov
testl
ljmp
ds
and
jns
or
inc
mov
call
xchg
pop
in
movsl
out
scas
mov
sub
daa
or
mov
cmc
mov
jecxz
sbb
sbb
sti
push
jg
inc
sbb
inc
ret
dec
sbb
or
filds
mov
jle
and
mov
adc
pop
xchg
or
test
int3
cmpsl
or
pop
jnp
xor
push
cld
inc
push
or
adcb
xchg
jns
lock
adc
out
push
cmpsb
je
es
jbe
add
popf
sub
or
and
hlt
mov
sbb
dec
iret
movsl
push
add
lcall
aaa
loope
xchg
sti
lcall
push
lret
inc
jb
xchg
cmp
inc
iret
shl
aas
xchg
add
ljmp
dec
push
sti
mov
xchg
mov
js
je
in
movsl
lahf
call
pop
dec
scas
outsl
cli
mov
cmp
ljmp
out
push
cmp
jbe
mov
mov
push
out
shlb
jecxz
imul
dec
ds
addr16
inc
lret
iret
sub
rolb
adc
aam
std
bound
and
enter
and
pusha
pusha
xchg
cltd
cmp
dec
lods
mov
mov
and
dec
fmul
inc
ljmp
jo
ret
stos
mov
xor
mov
test
mov
xor
jge
clc
adc
stc
fwait
jns
cmp
orl
dec
mov
fmuls
ljmp
inc
hlt
mov
adc
jb
xor
jle
jl
dec
ret
cs
out
out
jp
mov
ss
jne
std
and
movsb
insb
dec
bound
sub
sbb
or
inc
in
data16
adc
lret
movsb
xchg
cmp
stos
cli
push
cmp
xor
stc
loopne
mov
cld
dec
inc
inc
hlt
mov
pop
push
int
les
repz
sub
int3
test
ret
sub
push
xchg
out
mov
push
mov
xor
sbb
lret
xchg
mov
ret
xchg
stos
pop
push
clc
call
xchg
movsb
mov
mov
add
rcrb
push
fs
idivb
ljmp
jbe
sbb
push
shll
fildll
or
mov
sub
mov
cmp
cmp
pop
loop
fwait
pop
pop
pop
cmpsb
ss
dec
pop
ljmp
iret
sbb
cmc
movsl
sbb
and
inc
in
push
fimull
call
out
mov
lahf
cmp
or
fnsave
add
fucomp
adc
sbb
dec
dec
jbe
inc
adc
pop
outsl
mov
loopne
xchg
mov
lods
or
mov
loopne
mov
pop
scas
aad
pop
xchg
cwtl
outsb
sbb
fs
mov
shl
push
inc
cs
icebp
out
jae
dec
sbb
cmp
and
mov
andl
scas
push
cltd
int3
int3
gs
mov
dec
mov
push
data16
icebp
mov
cmpsb
divl
xchg
sti
outsl
test
dec
es
sub
adc
push
loopne
and
push
mov
or
enter
and
fldenv
inc
adc
sub
pop
dec
cwtl
aas
lds
jmp
cld
daa
push
jbe
sbb
shll
jecxz
sbbb
int3
xchg
sub
inc
es
es
add
lret
outsb
dec
inc
sbb
rcrl
clc
cld
pop
mov
lock
and
ficoms
in
cmp
inc
mov
test
pop
ret
out
lcall
mov
lret
jp
loop
das
pop
mov
int3
xchg
aad
mov
push
inc
cwtl
xor
mov
ffreep
punpckldq
enter
push
or
mov
aaa
fisubrl
je
fstps
pop
xor
mov
jbe
adc
pop
clc
popf
lret
pop
test
dec
or
mov
test
sar
add
cltd
mov
in
fsubrp
adc
test
lret
call
jmp
andl
inc
outsb
xchg
xchg
insl
stc
mov
rol
xchg
add
lds
or
inc
das
dec
and
mov
xchg
gs
adc
xlat
mov
loopne
jle
ret
mov
int
jl
mov
rol
rclb
dec
jns
test
jbe
jbe
jg
and
jmp
mov
mov
jge
sbb
xchg
mov
xor
lcall
shll
mov
pop
push
sub
mov
xchg
in
insb
das
add
add
stc
cmp
pop
cli
mov
daa
add
mov
mov
sub
cwtl
or
mov
fdivrs
mov
movsb
jnp
popa
movsb
mov
lret
jne
jae
roll
lock
int
xchg
or
int
xchg
or
xorl
pop
xchg
scas
fisttps
pop
pushf
hlt
adc
dec
cli
shlb
push
rcrl
sti
mov
ret
lret
sub
std
pop
push
cmc
jmp
mov
mov
arpl
sarb
movsl
insb
daa
add
adc
xor
lods
clc
xchg
pushf
and
arpl
mov
cmp
jmp
ljmp
jbe
sub
lods
mov
ret
ret
insb
fisubrl
sub
sbb
push
cmpsb
jle
mov
scas
cmp
loopne
pop
mov
mov
mov
les
popa
gs
je
hlt
fsubp
rorl
in
xor
lahf
inc
out
fisubl
inc
add
cmp
jns
and
pop
lds
and
sahf
push
lods
shl
mov
cli
or
sbb
pushf
cmc
pop
insb
int3
lret
sub
enter
daa
js
dec
data16
xchg
mov
notb
mov
cmp
jl
pop
rolb
mov
jns
rorb
add
adc
leave
or
sti
mov
or
mov
repz
aam
add
sbb
cmovno
mov
push
addb
pop
cwtl
xchg
and
mov
std
cmpsb
lea
pop
mov
push
imul
mov
repnz
cwtl
jb
xchg
mov
xor
sub
and
mov
mov
sub
rcrb
in
lcall
js
jo
pushl
inc
mov
addl
inc
add
adc
xchg
out
mov
jmp
stos
movsb
rcr
pop
inc
and
out
pop
mov
add
mov
push
aaa
mov
dec
inc
iret
push
lods
xchg
mov
mov
push
push
stos
push
int3
iret
dec
fsubs
pushf
fimull
xchg
jo
mov
fwait
nop
and
adc
aas
lods
push
cmpsl
inc
or
int3
rcrl
cmpsb
in
ret
adc
mov
xchg
es
mov
mov
inc
pop
sub
movsb
cmpsb
fmull
or
cmpsb
shll
adc
jbe
add
in
xor
pop
mov
or
test
push
stos
mov
inc
fucomip
push
fmuls
jo
mov
je
pop
inc
pop
loop
push
loopne
xchg
insl
popa
arpl
loop
mov
insb
test
push
divb
or
pop
pop
jp
push
push
xor
xor
adc
jns
out
cmp
js
dec
pop
sub
out
mov
arpl
mov
iret
sarl
test
jle
inc
scas
test
insb
popa
add
arpl
loope
test
xor
mov
sahf
dec
movsb
push
fdivl
jae
orl
add
cmp
test
movsl
mov
push
inc
mov
stos
shll
and
fcmovnbe
enter
lret
sti
cmpsl
jl
fidivl
adc
cmp
push
and
pushf
das
bound
or
pushf
pop
mov
xor
out
enter
lods
fs
add
out
jmp
mov
iret
pushfw
add
jmp
and
jp
loopne
mov
cmc
mov
stos
pushl
scas
stos
adc
call
jo
fdivrl
mov
jmp
dec
in
jmp
stc
pusha
loopne
mov
and
popl
sbbb
mov
jnp
jae
mov
xchg
lods
loopne
mov
jne
fldenv
lahf
sub
in
idivb
adc
hlt
in
xchg
xor
jo
pop
mov
adc
adc
mov
or
fisubrl
lock
or
cwtl
enter
sbb
xchg
push
addb
nop
sbb
in
adc
stos
fcompl
push
outsb
popa
mov
fnstenv
out
lock
add
loopne
lds
sbb
aaa
scas
push
adc
push
movsb
push
dec
addr16
mov
push
pop
cmp
mov
sbb
call
xlat
mov
out
mov
adc
ljmp
out
mov
push
das
cmpsl
jecxz
mov
lret
add
mov
or
loop
push
inc
out
pop
xlat
or
out
pop
dec
inc
push
ret
data16
sub
sub
test
arpl
lock
pop
imul
adc
lock
stc
sub
test
mov
out
subb
push
aam
packuswb
and
ret
mov
in
imul
imul
imul
in
and
mov
shlb
test
lods
add
pushw
or
adc
mov
gs
int3
and
jne
inc
movsl
int
inc
xor
out
and
and
pop
mov
pop
rcrl
add
cli
rcll
mov
xchg
sbb
adc
dec
scas
mov
jbe
sub
add
or
sarl
add
call
sub
mov
sbb
mov
rcll
sarb
sti
arpl
fimull
xchg
jb
lret
cmpsb
xor
out
icebp
push
adc
xchg
rcrb
pop
out
xor
pop
daa
dec
rolb
repz
addr16
and
addr16
and
ds
xchg
add
test
das
fsubrl
ret
aad
ficompl
mov
pop
pop
push
cs
js
aaa
cmp
pop
cmpsb
and
sub
loope
js
mov
and
mov
mov
fldcw
int3
out
xor
test
add
push
loop
std
loope
repnz
mov
xchg
shlb
fildl
orl
push
subb
xor
jo
xchg
shll
cmp
dec
mov
std
adc
push
add
stos
fnstenv
lret
lea
cld
fcoml
test
mov
stos
sub
leave
add
jb
mov
xchg
mov
inc
inc
mov
mov
fidivrl
fcompl
jae
faddp
add
ljmp
inc
pop
xchg
out
aaa
pop
int3
xorl
jl
scas
cli
inc
repz
rorl
jle
mov
mov
jnp
adc
cmp
and
shll
dec
mov
cwtl
std
pop
in
filds
xchg
into
push
sbbb
addb
ljmp
fwait
xchg
or
jle
loop
in
mov
mov
adc
inc
ljmp
ss
lods
push
sbb
mov
fimull
xchg
adc
mov
test
fisttpll
jl
sahf
pop
mov
inc
jnp
push
mov
sbb
pop
push
add
or
pushf
dec
and
imul
xor
ficoms
jnp
aam
or
jne
mov
aam
pop
out
into
call
and
sub
in
lret
cwtl
pop
insb
gs
jae
lock
xor
ficoms
loopne
shrb
add
js
test
jbe
aaa
hlt
movsl
inc
ret
inc
push
cmpb
cmc
mov
push
xchg
cmp
and
repz
fidivrl
inc
imul
or
lds
mov
xchg
xor
mov
outsl
or
aad
seto
clc
push
sub
in
xlat
popl
jmp
out
lcall
sub
jle
add
pusha
cmpl
mov
push
dec
gs
or
ss
out
shll
adc
imul
sbb
fdiv
popf
jle
sbb
insb
xchg
cmpb
es
shrl
adc
aam
jb
hlt
js
jl
jmp
cmp
xor
mov
loope
add
fmuls
inc
mov
lcall
ss
push
xchg
nop
mov
das
xchg
aaa
test
xor
pop
pop
leave
in
xor
aam
leave
push
sbbb
sub
pop
mov
xchg
out
jne
add
mov
outsb
aaa
sub
std
stos
push
mov
mov
sbb
cmp
inc
iret
or
xchg
dec
dec
xchg
cwtl
jne
insb
push
adc
push
push
jno
shll
dec
push
mov
jg
push
xlat
ret
jl
xchg
mov
lds
das
and
repnz
subb
push
mov
orb
push
loopne
xor
pop
ljmp
mov
add
movsb
fs
arpl
jp
dec
xchg
xchg
inc
sub
jns
mov
movsb
cwtl
repz
test
push
pop
or
les
cli
jno
lret
and
adc
popf
arpl
sbb
sti
sub
into
or
push
mov
dec
xchg
bound
xor
mov
and
inc
cltd
xor
scas
sti
mov
movsl
push
scas
sti
inc
jns
fldl
shrb
pop
mov
leave
xor
add
imul
test
sub
cmp
xchg
das
sub
add
cld
movl
mov
cmc
cmp
mov
xchg
adc
mov
outsl
test
aam
pushf
fwait
movsl
fmul
fistpl
xchg
inc
ds
divb
adc
jns
fdiv
sbb
cs
hlt
jae
fnstenv
stc
nop
sbb
xor
leave
ja
jo
inc
jp
sahf
fwait
aaa
mov
and
sbb
lret
add
add
mov
sbbl
iret
das
inc
mov
mov
pop
xor
je
repz
jne
jle
cmp
les
add
mov
xchg
inc
xor
mov
dec
push
xor
das
pop
mov
mov
lock
test
movsb
sbb
jge
dec
dec
cmp
mov
stos
popa
lods
pop
xchg
or
hlt
jns
mov
test
loop
xlat
test
add
bound
dec
sbb
xchg
adcl
scas
dec
lret
cs
imull
mov
dec
dec
test
and
push
lahf
out
sbb
pop
cltd
cli
repz
sub
cmp
int
jmp
dec
sub
xor
pop
jl
jb
xchg
mov
dec
imul
or
adc
outsb
sbbb
test
repnz
or
xor
mov
xchg
test
jl
mov
mov
and
jle
std
dec
repz
inc
lods
out
dec
in
into
mov
iret
loope
arpl
iret
jno
inc
jo
inc
adc
cmp
lods
push
push
push
adcl
push
mov
and
push
mov
lea
lcall
sbb
dec
pop
add
mov
ja
cmc
mov
repz
push
pop
test
and
leave
and
sarb
rcr
in
push
fisttpll
pop
cmp
push
negb
repz
push
fisubl
jne
cltd
mov
out
mov
popa
popa
add
jns
jbe
shlb
xchg
inc
mov
xor
or
cld
xor
jno
call
xchg
movsl
insb
sub
nop
or
test
jnp
ror
adc
xor
xchg
test
lcall
xchg
decb
or
push
and
loopne
pop
xorl
xor
ficoms
mov
out
movsb
inc
cmp
iret
out
fcmovnu
cmp
es
stos
sbb
cmp
and
xor
jg
and
jbe
ret
push
testb
notb
cmc
enter
lock
xchg
cmp
mov
or
imul
stos
mov
or
lea
je
mov
lock
imul
dec
repz
pop
int3
mov
arpl
sub
out
xchg
rcrl
inc
adc
mov
out
mov
mov
cmp
fistl
es
into
adc
sbb
addr16
jecxz
jmp
mov
mov
jbe
arpl
jp
mov
dec
xchg
jp
fimull
lahf
inc
fisubrs
out
int3
fsubrp
jmp
or
out
daa
cmp
sbb
std
jnp
mov
stos
adc
dec
int
pushw
call
std
cli
cmpsb
loop
lcall
dec
test
xor
mov
xchg
mov
lcall
aad
or
rorb
ja
outsl
xchg
mov
jbe
ds
push
adc
in
test
fdivrs
jae
inc
pop
and
or
fcmovb
into
sbb
test
sbb
outsl
and
mov
pop
xlat
or
sti
push
cmpsb
cmp
mov
cwtl
clc
fidivrs
pop
inc
and
ljmp
and
pusha
mov
sbb
xor
lahf
hlt
insl
xor
push
scas
dec
lods
inc
adc
dec
lret
push
call
dec
enter
mov
inc
or
rcll
fstp
dec
scas
icebp
lcall
sub
mov
inc
push
inc
aaa
aam
das
jno
adc
xchg
in
cmp
cltd
leave
fstps
ss
movsl
pop
pop
xchg
out
push
shrl
xor
push
in
push
out
xor
scas
mov
out
and
sub
loopne
stos
pop
add
dec
mov
fs
stos
daa
add
jne
je
or
int3
jl
cmp
adc
stos
add
mov
mov
fidivrs
and
push
dec
add
shlb
pop
sbb
daa
sbb
daa
call
lcall
xchg
call
pop
fsubrp
fwait
test
cmp
pop
sbb
xchg
and
js
leave
or
test
xchg
sub
adc
cmp
jp
aad
pop
cmp
cmp
pop
fwait
out
cmp
pop
fcomps
aad
test
push
xlat
test
push
in
cli
sub
jmp
sub
int3
xchg
bound
jge
or
jmp
clc
push
mov
or
mov
test
push
fwait
jp
push
sub
nop
jae
dec
scas
xor
je
pop
mov
push
xor
fldl
imul
rcrb
imul
sub
test
inc
push
nop
je
xchg
xchg
fildl
mov
das
ret
mov
and
ret
mov
jge
xchg
sub
cwtl
mov
arpl
pop
mov
movsl
mov
ljmp
mov
add
add
popa
and
cmp
jmp
scas
std
sub
es
xchg
fldl
cmp
cld
lcall
mov
data16
pop
push
adc
push
lret
push
add
xor
popa
xchg
and
pop
xchg
cmp
repnz
inc
push
mov
pop
xchg
or
jbe
sbb
pop
xchg
dec
xchg
or
mov
stc
mov
mov
push
push
mov
rolb
mov
popf
mov
mov
adc
faddl
add
sub
xchg
xor
lcall
scas
out
cmp
nop
mov
adc
mov
cli
jae
fcmovnbe
int
out
dec
jmp
in
sub
fmuls
scas
cmpsb
push
xchg
fdivl
iret
sbbl
ljmp
pop
jo
jp
mov
jae
rorb
add
push
sbb
into
loopne
insl
cmp
shrl
and
stc
sbb
mov
mov
and
mov
jne
aas
in
mov
outsl
dec
jnp
mov
cmp
or
aad
push
mov
mov
push
lea
shlb
push
jb
xlat
lahf
fnstenv
icebp
cmp
rcll
sub
cmc
pusha
imul
cltd
cmp
adc
jo,pn
mov
out
mov
pushf
sbb
add
xchg
repz
shrl
test
add
test
jecxz
out
ljmp
adc
and
sarb
jle
jecxz
mov
pop
and
ljmp
or
loop
in
std
xchg
fisttpll
jne
pusha
and
inc
in
scas
aam
in
jge
dec
mov
push
sbb
cmc
cmc
push
mov
ds
inc
sbbb
pop
xor
iret
xchg
rcr
push
imul
lea
add
daa
pop
or
push
movsb
mov
lock
lahf
fsub
jp
dec
mov
mov
sbb
lcall
jnp
push
and
mov
sbb
and
pop
push
sub
dec
xchg
xor
cli
and
cmp
jno
daa
pop
data16
xor
out
pop
js
mov
movsl
push
andb
xchg
insb
inc
sub
scas
dec
mov
int
mov
mov
mov
outsl
dec
pop
mov
in
xlat
ret
les
mov
cwtl
popa
jo
les
nop
aaa
int
push
imul
fwait
xchg
xor
and
not
inc
jns
and
sub
repz
sti
push
inc
jns
and
jl
mov
mov
xor
and
jns
xor
das
movsb
and
mov
adc
loop
jns
xchg
fsubr
mov
call
fildl
and
lock
aad
sbb
add
xchg
fisubs
dec
dec
xchg
data16
mov
and
xorb
jge
adc
or
push
pushf
cmp
xchg
push
or
jno
movb
ret
cwtl
sbb
cltd
sbbl
push
and
inc
cmc
mov
jns
push
dec
hlt
test
pop
adc
push
inc
jge
clc
jge
and
lret
leave
xor
out
mov
jns
inc
ret
outsl
jne
or
dec
adc
adc
add
mov
xchg
in
sub
imull
pop
pop
data16
orl
call
enter
push
nop
subb
xchg
mov
mov
mov
mov
push
push
dec
out
cmp
push
inc
test
jnp
sub
and
inc
push
out
das
cmpsb
jg
inc
in
out
cld
pop
shrb
cmpsl
jnp
push
xor
pop
mov
and
xor
mov
push
push
mov
and
xor
pop
idivl
sub
pop
jns
dec
jb
fimuls
pop
add
test
out
inc
xor
es
scas
testb
test
mov
xor
js
mov
dec
aam
lret
mov
ret
nop
xor
inc
stos
or
sub
add
lea
xchg
in
mov
mov
aad
inc
aaa
xchg
lods
aaa
adc
fists
xchg
mov
cs
cmp
call
ss
aaa
dec
insl
mov
ljmp
jmp
in
in
xchg
push
cmp
ss
inc
je
popa
jbe
xchg
cwtl
sub
rcr
aaa
sahf
popf
inc
lods
or
xor
lahf
out
sub
push
aaa
adc
addr16
rorl
mov
mov
push
inc
push
mov
mov
arpl
aad
adcl
push
xchg
sub
pop
fsts
push
data16
lock
or
hlt
mov
xchg
mov
pop
push
stos
pop
dec
mov
dec
es
inc
jg
cld
sbb
out
lahf
push
xchg
mov
not
adc
inc
mov
lahf
xchg
pop
orb
inc
cmp
and
sub
data16
mov
mov
mov
ljmp
inc
lret
outsb
dec
xchg
add
add
out
shrl
imul
push
das
sub
xor
push
nop
inc
pop
adc
or
sahf
dec
or
jbe
aam
xor
push
xchg
movsb
jecxz
mov
lods
cmc
adc
jbe
add
lods
and
dec
inc
imul
fiadds
or
ja
les
adc
ss
push
outsb
mov
add
mov
arpl
add
xor
cmp
hlt
mov
jno,pn
push
add
cmp
sub
inc
xor
inc
inc
add
aad
add
outsl
jae
pushf
jbe
xchg
push
cmp
popf
xchg
jnp
les
xor
lds
jns
and
cmp
inc
dec
sti
sbb
jg
mov
adc
pop
jbe
js
cmc
push
lods
add
ljmp
cmp
out
add
ret
mov
gs
filds
xchg
cmp
mov
sarb
cmp
mov
loope
test
hlt
sbb
xor
icebp
xor
pop
lahf
stos
js
push
inc
or
fcomi
mov
cmp
adc
sub
loop
xlat
or
mov
js
xchg
xor
mov
fcomps
xchg
cmp
adc
jae
cld
insl
je
stos
js
xchg
adcl
pop
cltd
inc
inc
or
stos
hlt
fcmovb
inc
sub
bound
sahf
mov
mul
out
or
xchg
lds
xor
push
call
jbe
inc
cmp
jle
repnz
insb
push
jg
insb
daa
sub
mull
loopne
mov
movsb
sbb
xchg
popa
sbb
movsl
dec
std
cld
and
cwtl
incl
aaa
add
pop
arpl
adc
jae
repnz
test
icebp
pop
sbb
jge
push
int3
mov
or
rcl
adc
and
jb
xchg
mov
cld
push
ret
jae
inc
hlt
mov
std
jbe
dec
jo
sbb
scas
aam
mov
sarb
pop
js
push
jg
adc
or
iret
pop
mov
jmp
xchg
jns
mov
adc
fidivl
mov
jnp
stos
push
in
pop
mov
xchg
mov
ljmp
mov
movsl
inc
xorb
adc
sub
bound
leave
sbb
imul
jae
adcb
and
jno
lcall
rolb
xor
test
mov
das
cmp
sbb
or
add
loop
aas
mov
jecxz
and
incl
adc
xchg
push
data16
arpl
orb
out
xorb
lcall
cmp
dec
testl
or
mov
xchg
jae
adc
in
data16
jbe
idivb
test
xchg
add
icebp
push
push
dec
out
in
arpl
negb
dec
mov
lods
xchg
ljmp
repnz
aad
cmp
mov
imul
jbe
inc
pop
add
je
mov
xor
jle
or
adc
data16
adc
sahf
pop
mov
mov
sbb
inc
ds
and
dec
mov
jp,pn
sbb
sbb
test
rep
adc
xchg
xchg
imul
adc
rorl
and
scas
insl
xor
adc
sub
loop
test
lea
pop
xchg
push
sub
cmp
lret
pop
xor
hlt
lcall
repz
test
sub
jl
pop
push
pop
aas
ret
or
in
push
insb
aaa
pop
jbe
outsb
movsl
out
pop
arpl
nop
inc
ret
pop
fwait
jmp
out
xchg
xor
push
push
xchg
xor
xchg
xor
push
test
nop
jns
orl
fs
mov
stos
popf
mov
and
inc
and
add
inc
clc
cmpsb
sub
nop
jmp
and
in
xchg
mov
cmpsb
out
adc
fs
push
movsl
jmp
ficomps
lods
jg
insb
jnp
xchg
loop
mov
xor
xchg
mov
outsb
dec
inc
sub
aas
pop
sub
es
mov
insb
hlt
stos
stos
xchg
test
inc
loop
add
rcrl
loopne
pop
cmpsb
cltd
into
enter
inc
push
fisttps
aaa
data16
je
scas
mov
xor
shll
cld
mov
adc
and
out
jecxz
add
sub
jno
or
in
xor
add
cmp
test
out
aam
inc
repnz
sbb
jae
jmp
shrb
xchg
or
fcmove
xor
daa
mov
ljmp
push
or
mov
xchg
sbb
mov
mov
mov
dec
mov
mov
outsl
sub
andb
jp
add
or
sub
dec
in
jecxz
into
dec
fs
xchg
xor
xchg
mov
mov
jno
and
adcl
push
mov
mull
or
sub
ss
iret
fs
clc
cld
sti
pop
xchg
add
fdivl
imul
or
outsb
sub
cmp
sub
mov
pop
or
es
fdivrl
enter
push
rol
inc
fsub
mov
mov
and
dec
data16
fistpl
push
pushf
les
xchg
filds
test
sub
adc
cwtl
ja
jp
add
ret
cltd
push
mov
mulb
mov
imul
xlat
mov
sub
inc
dec
stos
data16
and
sbb
jp
js
nop
iret
jae
push
dec
icebp
cmp
push
sti
fcmovu
lds
arpl
xchg
jo
cli
xchg
push
das
pop
repz
rcrb
sub
xchg
xchg
push
xchg
js
test
adc
jb
andl
add
xchg
ss
sub
mov
adc
jae
jl
sahf
cmp
ret
shlb
xchg
pushw
icebp
mov
int
mov
lods
movsb
jnp
testl
invd
mov
out
pop
push
jl
stc
cli
push
movsb
or
xchg
and
mov
dec
mov
push
ja
push
rcrl
mov
je
fstpt
inc
lods
jns
stos
inc
aad
mov
mov
hlt
leave
add
das
mov
mov
jge
rcrl
pop
mov
inc
or
xor
xor
jnp
out
shrl
fldenv
xor
hlt
fisubl
stos
inc
add
repz
sbb
push
push
inc
jecxz
inc
xchg
dec
sub
clc
inc
jmp
jne
or
mov
inc
mov
sub
sub
dec
in
lock
push
pop
loop
mov
push
sbb
or
sbb
xor
mov
stc
pop
or
fists
fildl
dec
push
in
or
sti
sbb
mov
xchg
ljmp
aas
lret
int3
sbb
add
sbb
pop
ss
pop
ljmp
mov
rolb
fimull
xor
inc
dec
mov
add
xchg
xchg
cld
icebp
aam
int
cwtl
mull
fs
mov
stos
jbe
and
add
dec
xor
add
test
mov
xlat
out
les
push
ljmp
pop
mov
push
fstl
daa
pop
in
lds
pusha
insb
in
cld
dec
leave
aas
aaa
and
aam
and
jmp
fcmove
je
cltd
lret
fisttpl
mov
insl
divb
cmp
fwait
dec
dec
jb
js
icebp
jnp
mov
inc
add
xor
enter
imul
fistl
jmp
std
pop
jbe
lods
stos
movsb
sub
pop
or
mov
cli
mov
std
dec
popl
andb
loopne
imul
push
hlt
pop
int3
xor
add
inc
cmp
push
inc
cli
mov
inc
insl
sub
movsl
call
mov
stos
out
fldlg2
dec
and
mov
sbb
push
out
stos
test
push
lcall
lods
add
pop
xchg
push
je
jmp
lods
xchg
push
dec
mov
aam
mov
sbb
ret
ficoms
js
push
xor
pop
xchg
sti
lret
lret
push
pop
nop
dec
adc
xor
dec
add
adc
into
mov
push
fs
adc
insl
push
andl
lods
lods
sti
cmp
mov
dec
sar
bound
and
es
add
cli
out
pop
loope
pop
adc
xor
imul
fistpl
es
testl
arpl
fs
test
test
and
ss
in
lods
jb
push
movsb
sbb
in
test
pusha
aaa
jo
xchg
push
pop
and
pop
sub
cmp
fs
stos
test
jne
clc
ficompl
xchg
ret
cmpsl
push
xchg
iret
jns
sbb
mov
cltd
out
mov
inc
xchg
or
mov
mov
outsl
imul
fs
sbb
ja
mov
out
orl
icebp
dec
inc
outsb
xlat
fadds
fsubrs
add
ljmp
dec
mov
sahf
or
cmpsl
push
stos
loop
ficoml
arpl
loop
lahf
jg
lods
imul
je
les
or
sub
and
andb
fadd
jecxz
mov
jne
sahf
std
lahf
std
ret
mov
adc
out
rcr
sub
dec
pop
xchg
mov
push
xchg
and
cmc
lcall
jae
insl
imul
dec
bswap
mov
push
mov
push
loopne
add
test
or
iret
jae
mov
or
pusha
pop
or
insl
xor
mov
mov
cld
mov
mov
push
sarb
loopne
aaa
mov
mov
das
mov
pop
fwait
sbb
dec
sub
shr
jo
push
xchg
inc
aas
shlb
lock
add
enter
push
imul
icebp
jbe
in
lret
push
or
arpl
and
hlt
testl
adc
mov
push
push
call
jnp
and
adc
push
mov
mov
lret
ffree
mov
pop
sub
stc
cltd
daa
idiv
test
in
orl
jge
mov
aaa
hlt
test
sahf
outsl
iret
in
pop
cltd
lods
les
and
addr16
popf
inc
je
pop
lea
bound
push
xor
push
push
mov
mov
test
cmp
dec
dec
mov
cmc
jns
pop
xchg
xchg
cmp
sub
arpl
jle
dec
cmc
mov
pop
int3
imul
imul
mov
addr16
mov
sarb
cmp
movsb
insb
clc
insb
ja
shlb
popa
in
jecxz
testl
iret
push
add
mov
xor
push
xchg
inc
je
jb
and
and
testl
xchg
pop
dec
adc
inc
pop
xor
inc
lcall
mov
adc
cmc
mull
subb
xchg
scas
nop
xchg
gs
divl
test
xor
inc
inc
jne
arpl
aam
and
pop
int
gs
leave
add
dec
das
popl
push
aaa
sti
rcl
gs
push
lock
cmp
sub
pushf
dec
stos
ss
xchg
mov
std
xchg
lods
push
aad
inc
jnp
or
cltd
pusha
popa
popf
aaa
mov
xchg
sahf
lea
cmpsl
xlat
inc
adc
adc
jo
mov
outsl
pop
ljmp
inc
sbb
in
sbb
lret
add
test
int3
insb
insb
inc
and
stos
cs
ds
shll
in
pop
sub
cmp
xchg
lret
iret
inc
push
test
ljmp
xchg
dec
call
cltd
cmp
notb
fiadds
inc
cli
dec
add
pushf
pop
in
inc
mov
loop
rep
mov
mov
mov
or
xor
je
lds
out
push
inc
cmp
test
jg
aad
ss
movl
popf
cmp
cld
in
sub
mov
aas
mov
jns
stos
sbb
push
mov
stc
iret
ret
int
adc
xchg
pop
psllw
lds
cmp
xchg
or
xor
mov
sub
mov
jge
test
aad
js
adc
into
fistps
lret
fisubs
and
add
xor
pop
cmp
andb
jb
movsl
cli
das
out
test
push
jns
or
pop
sub
fldt
cmp
mov
mov
cmp
stos
jle
mov
repz
xorb
clc
dec
jmp
ret
sub
xor
rclb
int3
inc
mov
fcomps
mov
push
or
inc
imul
mov
lahf
jle
popf
stos
inc
or
pop
incb
xchg
sbb
lret
jne
pop
xchg
f2xm1
mov
inc
cmp
xchg
xchg
add
aad
out
fisubrl
out
pop
sbb
mov
lock
xchg
andb
mov
push
and
mov
test
scas
pushf
push
jle
mov
nop
inc
aam
gs
push
fnstsw
cwtl
lock
xchg
jnp
xchg
mov
gs
jp
mov
pop
jge
mov
das
adc
inc
sbb
push
pop
pop
stc
push
insb
xor
push
std
xor
dec
shrl
sahf
xor
in
outsl
jbe
jge
mov
icebp
cmc
fucomp
fldt
ja
nop
out
sub
inc
inc
add
rcrl
xchg
andb
push
push
daa
pusha
or
cmp
outsl
popf
inc
sub
xchg
sti
lahf
cmp
add
push
xchg
jne
mov
shrb
dec
cmpsl
shlb
dec
push
insl
sub
mov
hlt
mov
mov
inc
xchg
stc
lods
add
ss
lcall
int3
repz
pop
out
fwait
inc
and
pop
cmp
sub
dec
push
pop
xor
sbb
mov
shrb
jnp
es
jmp
adc
les
xor
inc
mov
mov
xchg
sbb
subl
sbb
cmp
pop
in
mov
mov
stos
mov
iret
in
fnstcw
push
shr
jecxz
lods
insl
and
inc
xor
incl
pop
movsb
jae
push
pushf
es
hlt
mov
push
jno
mov
in
mov
sbb
aaa
insb
femms
mov
pop
jmp
cmp
out
push
mov
or
cmpsl
ljmp
fwait
int3
jae
add
cmp
and
int
in
mov
cmp
pop
push
sbb
test
icebp
xchg
outsl
sub
ret
test
pop
daa
push
in
out
cmp
call
push
sbb
fnstcw
jecxz
mov
cmc
mov
insb
cmp
loop
scas
ja
lds
mov
out
je
jae
rorl
lahf
aaa
mov
cmp
fsubl
mov
add
xchg
pop
test
rcl
pop
int
imul
xor
push
test
stos
sub
pop
enter
adc
adc
or
mov
xor
mov
or
adc
push
data16
sarb
fimull
jl
popf
push
adc
outsb
xchg
addr16
je
movsb
and
push
fwait
or
mov
out
cwtl
inc
mov
gs
cmpsl
or
pop
stos
inc
das
fidivs
jmp
or
cwtl
fs
imul
jo
adc
das
jle
pop
xor
add
fdiv
sub
mov
cmp
shlb
sub
popa
cmp
or
push
pop
push
ret
mov
divl
fdivl
bound
loopne
cmp
inc
das
lahf
cmp
aaa
jo
or
lahf
pop
pop
and
scas
xchg
lahf
sbb
pop
ret
icebp
xor
out
inc
fcmovnb
loop
in
add
sbb
insl
sbb
push
mov
lahf
aam
xor
dec
lret
pop
inc
andl
adc
stos
fs
mov
test
sbb
jno
jge
and
jmp
dec
iret
jle
lret
out
movsb
xor
fmuls
xchg
xchg
jecxz
mull
pop
jo
jbe
adc
fmull
rorb
in
cmpsb
or
xor
stos
cwtl
loopne
mov
jae
leave
loop
xlat
insl
cli
frstor
ficoms
fld
xor
mov
leave
adc
mov
jmp
test
inc
movsl
leave
sbb
mov
sub
out
mov
addr16
call
mov
sbb
in
negl
repnz
ficoml
enter
dec
movsb
lds
and
arpl
addl
xchg
jne
dec
int3
lret
jg
ds
test
imul
push
dec
pop
scas
dec
push
orw
sar
and
stos
das
lock
add
xchg
popa
add
outsb
repz
sahf
scas
std
mov
xor
inc
add
pop
mov
fdivrs
or
insb
mov
and
xchg
jb
movsl
out
sub
or
sub
int3
mov
movsb
mov
push
sbb
adc
mov
jbe
loope
hlt
imul
ret
push
das
arpl
mov
aam
dec
dec
mov
filds
xor
xor
daa
in
jmp
adc
push
lret
sbb
pop
add
cmpsb
pop
mov
rorl
es
loopne
inc
jp,pn
cld
sti
shll
mov
add
mov
sahf
sub
incb
sub
cmpsb
or
gs
mov
movsb
adc
insl
dec
ljmp
lods
jg
cmp
dec
adc
icebp
sub
cwtl
adc
dec
cld
test
xor
andl
lcall
mov
enter
mov
push
imul
in
mov
andb
loope
loop
inc
in
pop
in
je
mov
lret
rclb
test
lret
pop
lret
insl
inc
mov
cltd
push
or
push
pop
inc
jl
mov
mov
dec
mov
sbb
jmp
push
sub
insb
int
jmp
pusha
cmpsl
out
xor
cmc
add
mov
xchg
aas
int3
fldcw
bound
lock
inc
pop
test
bound
add
clc
push
xlat
aam
inc
repz
or
mov
push
daa
addr16
shl
fs
mov
inc
xchg
push
xor
and
push
lods
cmp
inc
cmp
mov
aaa
jp
jl
xchg
dec
mov
and
and
add
xorl
fcmovne
adc
outsl
push
jmp
dec
cli
out
push
and
ret
imul
dec
adc
adc
lahf
lods
add
sbb
mov
and
mov
test
movsb
dec
addl
push
cmpsl
cmp
ret
cltd
mov
lret
and
sub
mov
cmp
inc
lcall
pop
cmpsl
or
test
loop
fmuls
gs
adcl
dec
sbb
cmc
into
les
dec
inc
out
cmp
insb
les
bound
and
fwait
mov
fs
pop
add
fimull
mov
mov
mov
imul
insl
push
cmp
add
cmpsl
add
or
mov
addl
icebp
pop
aad
test
rcrl
std
icebp
je
enter
inc
jbe
pop
sahf
rcr
loope
cwtl
inc
pop
loopne
sub
pop
lods
subb
sub
in
add
push
dec
in
or
push
and
add
ja
popl
dec
rolb
jge
dec
lret
in
push
sti
and
mov
mov
add
mov
stos
jno
sbb
add
xor
or
sub
push
push
sub
sub
adc
lahf
adc
outsb
mov
mov
sti
mov
mov
jae
mov
jmp
xchg
mov
btr
or
orb
mov
pop
out
push
das
cltd
inc
loope
xor
cld
or
cmpsl
mov
pop
xchg
jmp
in
out
adc
das
push
pop
aaa
pushf
jge
mov
sbb
rcll
popf
lret
mov
lret
mov
adc
adc
pop
outsb
or
xor
or
cli
pop
sbb
jne
popa
xchg
xor
repz
dec
ja
jnp
stos
rclb
sub
dec
mov
pushf
in
mov
mov
jns
dec
sub
mov
clc
mov
mov
inc
push
stos
push
add
cwtl
ljmp
fisubs
les
imul
mov
sbb
iret
mov
movsl
hlt
pop
mov
sbb
mov
pop
sahf
sti
test
idiv
adcl
inc
pop
in
sub
jbe
data16
mov
dec
call
ret
sbb
ljmp
and
mov
rolb
xchg
cmp
movsb
daa
push
adc
lahf
push
push
mov
xchg
xchg
pop
xchg
xchg
inc
and
outsl
int
es
fisubl
inc
clc
adc
mov
mov
pop
nop
sub
mov
xor
xor
xlat
scas
in
lcall
clc
inc
pop
mov
nop
xchg
pusha
and
xor
stos
js
scas
mov
and
cli
shll
adc
fisttpll
movsb
popl
dec
daa
sahf
sbb
jp
cmp
mov
mov
repnz
insb
aam
lea
xchg
xchg
mov
cs
jno
cltd
add
push
aad
gs
mov
incb
adc
xchg
inc
dec
pop
std
lret
mov
sub
xorl
inc
and
sub
xchg
divl
test
aaa
mov
cltd
in
xchg
adc
stos
jnp
adc
push
xor
pop
fwait
jecxz
lds
jb
out
dec
push
jns
xor
mov
es
out
and
les
xor
mov
sbb
test
daa
subl
pop
imul
sub
inc
insb
jbe
pop
inc
in
or
nop
aam
mov
sbb
mov
pop
add
jno
mov
cmp
jmp
pmullw
sbb
pop
xor
mov
mov
test
aaa
ja
clc
repnz
mov
cmp
clc
adc
and
ret
push
adc
mov
lcall
mov
mov
lds
cwtl
mov
jle
jns
push
jge
mov
inc
jmp
xor
mov
scas
cmp
or
xor
fsubl
les
dec
sahf
fwait
int3
sub
pop
lret
xor
push
or
aad
adc
daa
ja
iret
and
rolb
and
adc
sub
xor
iret
mov
sbb
cmpsb
inc
xchg
jbe
lds
popf
add
ret
xchg
mov
dec
aam
movsl
rcll
mov
fistpl
js
or
lds
pop
mov
mov
scas
mov
negb
outsb
out
add
dec
or
mov
stc
adc
jo
or
xor
rcrb
mov
int
push
cmp
push
inc
subb
bound
sbb
dec
cmpsb
mov
sub
mov
test
mov
xlat
dec
das
mov
push
cmp
push
lret
fnstsw
in
outsb
mov
sbb
cmpsl
mov
jns
test
lds
mov
outsb
ret
xor
adc
push
cs
repz
mov
mov
enter
jb
and
jecxz
rorb
xor
push
push
xchg
pop
inc
push
sub
sbb
and
xor
dec
int3
push
sub
test
leave
and
inc
adc
sbb
ret
adc
in
or
insw
push
mov
ret
stos
push
fmull
iret
sub
scas
xorb
mov
loopne
push
out
mov
insb
daa
push
out
or
cltd
int
or
cs
mov
or
sbb
sarl
ret
mov
mov
inc
xor
inc
xlat
xor
mov
pop
orb
xor
rorl
pop
pop
or
mov
xor
ret
add
mov
outsl
adcl
and
cmp
mov
daa
mov
dec
push
mov
mov
xchg
cmp
push
pop
and
push
mov
mov
jbe
insb
mov
inc
inc
xchg
mov
stos
mov
movsl
aas
testb
scas
sti
addr16
ljmp
in
jae
fstpt
add
repz
outsl
dec
mov
pop
gs
add
aad
iret
cmc
and
addl
cmp
scas
sbb
pop
cmpsl
sub
aam
push
mov
test
cmp
pop
jae
pop
dec
mov
or
push
cmp
sub
sbb
mov
pop
jbe
int3
jecxz
outsb
lds
das
scas
stos
or
dec
es
int
mov
add
icebp
frstor
andl
push
aam
mov
scas
pop
and
aaa
mov
cld
out
jg
xor
adc
cli
in
adc
push
mov
xchg
adc
fisubs
daa
ss
adc
fwait
xor
push
pop
mov
shrl
int
or
jns
decb
adc
dec
int3
ds
sbb
xchg
in
sbbl
mov
lret
jmp
jecxz
pop
adcb
stos
jnp
fstl
adc
inc
jnp
jae
loope
push
mov
inc
pop
in
or
imul
rolb
cmp
xor
sbb
mov
in
aaa
insb
xchg
jl
ret
pop
test
adc
test
inc
adc
stos
inc
mov
pop
xor
test
cwtl
dec
fs
dec
lret
jg
adc
sub
mov
mov
loopne
xor
cmp
pop
sahf
bound
sub
cmpsb
mov
outsb
pusha
ficoms
sub
cwtl
jecxz
mov
mov
lock
inc
jge
es
movsl
mov
int
aaa
movsb
ret
xchg
mov
hlt
xor
dec
sbb
lea
in
lock
mov
popf
xor
lret
es
inc
push
pop
mov
pop
je
sti
push
pause
sarb
aad
ss
and
test
push
ss
movsl
call
cli
leave
outsb
inc
dec
sbb
pop
pop
cmp
pop
scas
inc
in
cld
cltd
clc
imul
sar
jge
sbb
push
or
cmpsl
pop
sti
std
sub
ret
mov
xor
sub
clc
jl
lds
fcmovnb
lss
sahf
mov
es
insl
lret
push
add
std
push
inc
xorl
nop
jecxz
leave
inc
mov
and
insl
mov
dec
pop
mov
notl
in
pop
adcl
int
sbb
cmp
dec
out
xchg
sbb
js
ret
fadds
or
pop
mov
dec
dec
test
push
mov
repnz
and
and
and
xor
mov
pop
adc
sti
insb
gs
shll
ja
into
push
mov
aam
mov
mov
lret
dec
incl
dec
in
sub
mov
loopne
cs
imul
push
pop
scas
push
cltd
cmp
xorb
and
aam
call
xchg
lds
ja
and
dec
fwait
loopne
mov
sub
outsl
std
sbb
vmovupd
jmp
rolb
pop
insl
xchg
loope
sti
jnp
iret
xchg
inc
sbb
and
lea
mov
cmpl
or
cmp
pop
jl
imul
jge
mov
xor
inc
sbb
jmp
stos
jg
dec
xchg
lret
imul
cs
popf
cli
push
hlt
pop
mov
inc
jecxz
mov
dec
fisubrl
fsubrs
mov
xor
jecxz
pop
push
sbb
xchg
push
arpl
aas
in
stos
movsb
test
add
xchg
push
hlt
push
in
mov
push
scas
repnz
sub
pop
pop
dec
mov
pop
jle
fwait
aas
sub
jno
xor
mov
jp
sub
jmp
in
and
pop
pop
pop
add
cld
mov
sahf
repnz
and
aas
insl
mov
cltd
cmp
mov
and
outsl
or
fnstenv
enter
cli
mov
jp
mov
or
xlat
mov
or
popa
mov
out
mov
xor
test
rcr
aam
pushf
dec
cmpsl
ljmp
cmpsl
sti
jnp
mov
adc
pushf
fs
into
push
addr16
pop
jge
aas
shl
es
enter
cltd
xor
sub
out
push
cmp
clc
iret
outsl
or
std
adc
mov
adc
push
pop
or
sub
cmp
mov
cmpsl
clc
or
ds
xchg
jle,pt
inc
adc
mov
xchg
movsb
jne
imul
cmp
out
imul
or
xchg
hlt
sbb
inc
xchg
mov
dec
lret
push
dec
mov
jle
xchg
bound
lds
dec
cmp
dec
cmp
xchg
push
push
mov
int
cwtl
testb
iret
adc
add
aad
dec
xor
sub
mov
shl
jnp
vpslld
rorl
dec
push
ljmp
mov
push
leave
mov
insl
xchg
pop
jecxz
add
cmp
sbb
push
add
mov
jp
mov
pop
clc
dec
std
adc
fidivl
in
cmp
pushf
jp
mov
xchg
fadds
andb
mov
out
pop
xchg
cs
pop
in
jg
nop
lods
push
ja
dec
jae
cmpsb
outsb
imull
xchg
xor
sub
test
icebp
jp
aaa
ja
xchg
sub
loope
jb
push
cld
mov
pushf
adc
adc
xor
iret
or
jp
ljmp
outsb
repz
loope
pop
popa
daa
push
mov
lret
xchg
inc
arpl
scas
int3
cmp
popa
popf
dec
push
mov
int3
iret
mov
push
shll
lea
mov
mov
rcll
adc
fsubl
pushf
pop
ret
inc
push
jnp
ljmp
clc
aad
pop
jb
ja
andb
inc
lcall
xchg
pop
cmp
les
out
xchg
dec
test
pop
cmpsl
mov
daa
dec
movsl
fdivl
xor
ficomps
inc
pop
jmp
je
fidivs
clc
push
jns
repz
ret
fistps
dec
outsb
rcrl
pusha
or
pushf
mov
insb
cmp
mov
pop
cmpsl
push
sub
cli
xor
lret
daa
test
xchg
repnz
jg
adc
or
mov
mov
cmp
push
mov
clc
ja
push
cmp
and
cmp
dec
fcmovnb
xor
aaa
aad
push
fs
or
cmp
shll
push
enter
inc
or
ret
or
mov
mov
or
push
in
fcomi
adcb
push
and
js
xchg
stos
inc
data16
push
dec
popa
xchg
int
addr16
clc
call
ss
imul
sbb
mov
movsl
cmpsl
cmp
scas
mov
or
xchg
in
rolb
mov
setbe
cltd
test
dec
pop
lcall
jl
xor
imul
jns
sbb
leave
or
mov
imul
sbb
lret
loopne
lret
lods
movsb
pop
sbb
mov
outsl
shll
or
and
push
add
jmp
xchg
cmc
data16
inc
add
xor
int3
cmp
or
gs
push
xor
mov
jmp
shll
xchg
dec
movsl
lea
int3
enter
cs
xor
cld
frstor
in
jnp
push
sbb
enter
jnp
xor
test
js
popa
sahf
psubsb
mov
xor
jb
lcall
lods
in
jmp
daa
fmuls
aaa
xchg
jmp
lock
adc
lods
sbb
pop
enter
imul
fdivs
pusha
cmp
inc
jle
jns
fcmovb
in
mov
lahf
inc
adc
cmp
push
stc
inc
outsl
int3
or
movsl
rcrl
or
int3
or
inc
lods
int3
lock
push
push
jecxz
mov
xchg
xchg
mov
bound
mov
mov
cmpsl
push
pop
subl
repnz
mov
push
fs
int3
cli
sti
xor
sub
in
js
dec
mov
xor
mov
cmp
repnz
test
in
push
push
lret
aas
jmp
push
lods
insb
xchg
push
and
mov
cs
popf
call
rcpps
add
mov
mov
shl
mov
xchg
sub
pop
mov
insl
xchg
push
arpl
movsl
loopne
mov
sub
test
js
mov
sahf
outsl
cwtl
not
inc
sbb
int3
pop
sbb
push
push
adc
arpl
in
xlat
inc
inc
mov
repnz
into
adc
out
mov
xchg
sub
clc
jo
xchg
push
mov
xchg
test
lds
in
insb
mov
call
repz
sahf
rcrb
sbb
inc
jno
ljmp
push
jns
out
add
mov
std
sub
cmp
lret
test
adc
jbe
in
xchg
repnz
les
daa
add
sbb
add
and
or
mov
mov
nop
rcrl
fcoms
pop
xchg
jge
jl
sarb
scas
imul
or
xchg
rorl
inc
dec
and
jg
aad
adc
outsb
in
loop
movsb
add
jecxz
xlat
pusha
inc
add
adcb
out
bnd
gs
cmp
gs
xchg
cwtl
sub
popw
fs
pushf
cmp
cmc
xlat
cmp
or
movsb
and
or
cmp
dec
ja
and
enter
mov
sub
mov
xor
aaa
data16
js
push
sbb
movsb
testb
bound
fwait
rclb
out
and
out
and
sarb
pop
mov
ret
cmp
lea
pop
cwtl
mov
popf
test
dec
mov
mov
cltd
cld
cmp
mov
xor
and
xchg
and
test
push
movsl
js
or
pushf
mov
movsl
lods
in
and
cltd
addr16
ljmp
add
cmp
cmp
dec
aad
loope
adc
cmp
ja
push
xchg
xor
repz
into
test
or
and
ss
sti
in
mov
scas
movsb
into
outsl
dec
data16
cmc
clc
stc
pop
iret
rorb
mov
filds
hlt
jbe
sub
xor
pop
pop
imul
mov
cmpsb
and
stos
enter
les
and
clc
and
js
push
dec
and
xchg
loop
push
addr16
cli
lret
push
mov
cmp
movsb
jecxz
mov
push
inc
inc
addr16
aam
inc
lods
or
lcall
clc
push
fcomps
jg
rclb
lahf
lea
cmp
js
fidivl
mov
mov
mov
shll
ds
std
pushf
inc
fwait
lcall
rcl
js
into
imul
into
inc
out
add
hlt
jbe
inc
call
push
jne
fldl
dec
jl
leave
imul
stos
bound
mov
mov
inc
icebp
push
js
lods
lock
sub
cmp
sahf
jbe
stc
cli
aad
out
add
mov
or
sti
es
stos
cmp
cmp
clc
pop
push
cmpsb
sbb
xchg
mov
pusha
jne
jle
in
in
dec
imul
cmp
cmp
stos
and
push
push
mov
sarb
push
jecxz
inc
adc
rcll
test
cmp
rcll
jmp
xor
push
test
mov
jno
roll
pop
mov
mov
jle
cmpsb
sbb
xchg
sbbl
pop
xchg
jne
arpl
jp
in
push
imul
mov
lods
dec
ss
mov
paddb
cmp
fsubrs
cli
cli
rolb
dec
inc
or
mov
add
cmp
gs
jo
lahf
sbb
lret
das
lret
pushl
ja
ljmp
xchg
dec
pop
fcoml
dec
xor
mov
cmp
xor
outsl
jne
inc
cwtl
xchg
dec
jo
cmpsl
addb
cmp
ss
stos
leave
dec
pop
or
repnz
jnp
pop
adc
cmp
jge
jns
jae
iret
and
and
sbb
mov
inc
or
pop
sbb
cltd
xor
idiv
fisubl
in
out
iret
dec
fbstp
sbb
stos
and
dec
movsb
xchg
inc
mov
notl
mov
cmpsb
mov
or
frstor
push
dec
stc
sbb
std
pop
out
pop
mov
fstpl
or
repnz
fsubs
and
std
enter
push
jbe
push
ss
xchg
fimuls
and
mov
ja
pop
lcall
push
lret
cmpsl
dec
les
sub
nop
sar
sahf
aad
inc
insb
rolb
js
sbb
scas
inc
clc
xchg
mov
xchg
jbe
loop
xor
fstpl
xor
xchg
xchg
mov
mov
out
jae
or
out
lds
add
stc
xor
daa
ja
jb
faddl
ret
test
push
dec
movsl
fwait
jae
hlt
ret
jae
and
or
shll
xor
fisubrl
push
aas
push
addl
movsl
add
push
pop
and
fsubrs
lret
aam
sub
or
dec
xor
dec
xor
push
mov
push
aam
rolb
dec
push
xlat
adc
fstps
movsb
mov
jecxz
pop
test
push
pop
mov
jbe
ds
es
lahf
pop
jbe
lock
push
rorl
icebp
popl
push
dec
lods
test
dec
mov
mov
mov
nop
jmp
mov
sbb
ja
mov
push
aad
test
jp
ljmp
scas
mov
fistpll
bnd
fildl
repnz
mov
sub
movsl
sub
pushf
out
inc
sbb
mov
adc
mov
dec
inc
jbe
jns
hlt
pop
pop
popa
xchg
cmp
and
and
add
out
aas
popa
call
popa
loope
jl
int3
inc
dec
outsb
push
pop
imul
pop
pop
stos
and
lods
rcll
test
mov
mov
rep
out
or
incb
fisubrs
movsl
sbb
xchg
xbegin
js
daa
mov
mov
aam
les
pop
sub
xchg
push
and
sub
push
and
out
pop
inc
pusha
cmp
mov
dec
xchg
ficoml
sahf
or
std
int
test
xchg
ljmp
pop
push
in
pusha
icebp
sbb
mov
dec
inc
mov
cld
cmp
inc
push
jno
ja
iret
push
leave
sbb
mov
mul
cwtl
cmp
mull
rolb
and
fxch
mov
lock
mov
and
sub
rorb
in
cmp
mov
sbb
xlat
ret
js
in
xchg
push
das
sti
push
lcall
push
mov
push
jno
pushf
sub
or
roll
mov
sub
fcoms
pop
or
mov
push
adc
lds
push
inc
mov
pop
loop
cmp
sub
mov
cmp
sbb
mov
sbb
xchg
add
cwtl
push
add
xor
je
xchg
fs
push
fs
stos
adc
dec
aam
lcall
test
jg
mov
js
lcall
mov
scas
mov
jg
pop
lret
loope
test
roll
dec
and
cld
inc
fidivl
cmpsb
cmc
popa
gs
lret
into
addr16
out
decl
stc
jmp
filds
test
loopne
movsl
cmp
cli
aad
jg
cld
inc
jg
ds
in
insl
mov
ss
dec
daa
jns
mov
adc
mov
dec
inc
cmp
stos
in
and
das
ss
sub
lds
pop
sub
jl
dec
adc
mov
movsl
adcb
push
inc
add
fisubrl
mov
jb
push
lods
pusha
test
sub
outsl
mov
xor
or
rcrl
mov
adc
mov
cmp
or
sub
test
sbb
xor
fildl
xor
xor
popf
xor
lock
adc
clc
mov
sub
outsb
arpl
int3
or
insb
mov
inc
pop
cli
stos
push
js
sub
sbb
clc
rcrb
mov
xor
out
cmp
aam
mov
xlat
insb
rorb
hlt
mov
mov
iret
testb
inc
push
or
and
mov
cmc
pop
repz
je
jle
sub
cmp
fs
add
or
jo
std
stc
and
fcmovb
jne
and
pop
imul
push
orb
mov
and
outsb
cld
andb
mov
jnp
or
iret
push
inc
xchg
lods
push
daa
lods
out
jnp
or
push
nop
out
sub
jbe
pop
jmp
mov
dec
mov
sbb
bound
in
dec
aad
cmp
add
cli
mov
sahf
pop
or
loop
pop
shl
int
jge
pop
shll
add
pop
das
pop
adc
xor
cld
test
or
xor
out
xorb
shrl
stos
jnp,pt
test
xchg
pop
xor
addr16
mov
pop
xor
adc
in
out
popf
xor
jnp
xor
pop
andl
ror
cld
xor
ljmp
fcom
repz
inc
call
jle
fldl
and
pop
in
cltd
je
andl
sbb
cmp
or
loope
lcall
fnstenv
icebp
stos
xchg
push
adc
mov
jae
inc
inc
push
pop
fwait
mov
and
cs
fisttpll
push
mov
in
dec
cmpsl
iret
ja
movsl
les
rcrl
mov
jne
aas
fdivrl
and
dec
jbe
int3
shrl
xor
mov
out
push
mov
call
mov
cs
mull
loop
repnz
xor
nop
clc
in
sbb
mov
movsb
cltd
jle
sub
xchg
cmp
mov
pop
test
aam
sub
fwait
je
test
je
jmp
or
inc
repz
jbe
popa
lock
push
sub
xchg
out
fs
dec
std
push
or
enter
dec
lods
cmpb
cltd
adc
jle
push
mov
repnz
sbb
pushf
adc
stos
stos
ja
jmp
outsb
sbb
lret
xchg
imulb
test
rcll
int3
sub
pop
and
mov
jp
mov
lods
shr
mov
into
add
sbb
test
sbb
sbb
cwtl
mov
adc
mov
outsb
ja
nop
addr16
test
inc
aas
ret
ljmp
fdivs
mov
mov
push
cmc
inc
in
lods
addr16
les
sub
daa
mov
mov
icebp
xor
sahf
sbb
movsl
int3
adc
push
inc
and
roll
inc
ret
xchg
outsl
out
adc
adc
je
push
xor
les
test
push
push
mov
push
int3
inc
ss
test
cmp
jge
mov
insl
mov
pop
scas
sub
jo
ret
pop
test
add
lods
int
mov
inc
in
ret
push
in
dec
nop
cltd
push
popl
xchg
adc
cmp
in
adc
lds
pop
pop
movsl
jo
sub
loopne
lahf
lods
test
xor
push
scas
clc
stos
or
adcl
mov
dec
sbb
ljmp
out
pusha
outsb
and
dec
and
jg
std
jnp
push
mov
sbb
mov
ljmp
sbb
fidivs
jge
out
xchg
shll
iret
ss
jnp
mov
pop
fldt
loopne
inc
mov
add
into
mov
jns
cli
push
and
dec
and
rcll
mov
xchg
adcl
add
add
lea
mov
fildll
in
je
shll
incb
lea
add
jp
enter
iret
add
sub
pop
leave
popf
adc
and
icebp
cs
out
cmp
pushf
jmp
xchg
add
inc
inc
jecxz
add
adc
cltd
adc
and
or
std
ffree
push
stos
mov
xor
and
xchg
mul
and
xchg
pop
outsb
sub
or
sbb
mov
sbb
das
lods
jns
rcr
sub
adc
mov
gs
jmp
fistpl
lahf
lret
aam
fwait
inc
mul
mov
mov
scas
lock
mov
sub
es
add
stos
and
push
mov
xchg
cmp
xchg
mov
inc
scas
xchg
lock
mov
and
aad
jbe
bswap
test
dec
mov
fldenv
bound
add
inc
mov
adc
ret
popa
pop
pop
ret
in
sub
iret
in
push
les
add
aaa
inc
shl
or
movsl
std
xor
dec
cmpsb
mov
pop
sbb
mov
cmp
scas
icebp
or
addr16
xor
mov
pop
aas
jg
js
dec
repnz
jl
daa
fcoml
imull
arpl
adc
js
in
addr16
cmp
push
mov
add
repz
mov
jle
clc
dec
ljmp
adc
pushf
mov
add
inc
loope
insb
stos
into
pop
add
ds
mov
int
rcll
sub
pop
rcl
test
mov
xchg
fnstenv
jbe
ret
inc
jmp
out
xchg
push
shll
jge
xor
fimuls
pop
xchg
mov
cs
repz
xchg
nop
mov
lcall
adc
and
test
loope
out
xchg
in
mov
fwait
lahf
sar
shrb
push
out
ffree
outsb
shrb
hlt
pop
rcll
clc
mov
lock
imul
into
mov
fcmovbe
mov
cltd
adcb
jge
and
int3
cmpsl
xlat
fcoms
xchg
sbb
mov
outsl
adc
test
mov
mov
lahf
pop
sahf
roll
add
mov
push
push
sahf
out
and
sbb
fdivrl
fld
mov
sub
xor
cld
mov
stc
push
or
pop
shrl
mov
cltd
shrb
jmp
ffree
sti
push
push
cmpsl
pusha
stc
lcall
outsl
aas
add
addr16
gs
ja
ds
mov
push
bound
aad
xor
push
cld
andb
dec
dec
je
ds
aad
lcall
add
addr16
data16
fsubl
enter
sub
cmp
loope
jg
sbb
mov
pop
inc
jns
lret
fdivrp
cmc
sbb
cmp
shrb
mov
fistpl
out
push
subl
dec
js
jg
loop
jo
lock
jmp
dec
pop
add
lods
sub
mov
push
add
lods
adc
insl
push
in
jp
enter
scas
sub
inc
add
aad
enter
shrl
dec
rcr
xchg
rorb
adc
sbb
cmp
hlt
jge
in
pop
mov
stos
mov
jb
pop
jecxz
push
add
mov
fadd
push
and
inc
sbb
fwait
inc
push
loopne
mov
pop
jp
rorb
sarl
lea
lret
mov
jle
aad
sub
mov
or
push
or
pushf
and
movsb
mov
test
imul
shll
fisubrl
mov
jo
fsubl
mov
mov
inc
int3
sti
pusha
mov
ljmp
push
mov
hlt
test
dec
sub
or
dec
roll
push
adc
int
out
jns
sbb
push
cli
push
cmp
sbb
aam
repz
xor
inc
into
inc
sbb
mov
mov
int
out
sub
mov
lock
icebp
push
fisubs
lahf
and
aam
test
adc
cmp
dec
sub
cmp
test
push
jle
mov
xchg
mov
fisubs
mov
aaa
jae
stc
push
hlt
mov
les
lock
mov
enter
out
and
cmpsl
out
sub
push
sbb
jl
nop
inc
arpl
clc
lods
inc
inc
inc
in
stos
repnz
fwait
and
subl
push
fnstenv
cli
pop
mov
fidivl
fiaddl
aam
sub
icebp
add
into
adc
push
insl
xchg
xchg
leave
mov
test
rclb
int3
iret
jns
dec
mov
mov
lret
imul
daa
jg
and
sub
cwtl
bound
lods
pop
lahf
adc
or
dec
aad
int
mov
imul
in
dec
ret
not
fisttps
sarl
jo
arpl
sub
pop
pop
cmp
.byte
