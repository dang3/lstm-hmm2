sbb
xor
sub
mov
adcl
push
adc
jno
addr16
cmc
lret
xlat
mov
loope
and
jb
sbb
out
pushf
push
and
cmp
and
jge
sbb
nop
and
cs
testb
stc
les
or
push
shll
pop
cmpl
rolb
mov
dec
push
sub
into
stos
ret
fistpll
in
pop
sub
cli
in
and
xor
fwait
sti
pop
dec
in
fs
aad
icebp
pushf
cmpsb
mov
loop
xor
cmpl
xor
jge
or
lods
sub
pop
aas
scas
fcmovb
or
pop
test
mov
test
pop
adc
inc
fcmovu
dec
pop
dec
adc
push
data16
daa
mov
inc
push
mulb
dec
clc
xor
mov
adc
out
hlt
xor
mov
mov
mov
rcr
adc
shlb
pop
aad
mov
jl
sbb
and
adcl
out
push
mov
call
pop
int
lds
cmpsb
or
adc
mov
mov
ret
xchg
in
jae
lods
inc
adc
jo
cli
cmp
jmp
inc
push
cmc
jno
mov
pop
call
pop
lods
filds
lods
xor
jle
push
push
push
outsb
lock
test
mov
xchg
repz
das
sub
or
or
out
lahf
dec
xchg
sbb
iret
push
mov
add
lret
sbb
jns
dec
and
outsb
js
es
in
add
imul
mov
xor
jle
mov
mov
lret
mov
rol
add
lea
xchg
xchg
sbb
js
scas
inc
xchg
out
xor
adc
jl
fdivr
ss
jmp
dec
lret
bnd
fisubrl
mov
mov
ljmp
xchg
xchg
mov
inc
jo
enter
daa
mov
nop
shlb
or
cmp
pop
fs
repnz
and
cld
movsl
push
nop
and
jmp
jecxz
push
les
filds
mov
out
sub
jecxz
and
test
sbb
enter
sbb
push
leave
add
test
mov
pop
int3
ret
xor
rorl
mov
imul
and
push
pop
mov
mov
lret
add
add
into
mov
or
mov
ret
xor
test
das
ffreep
cmpsb
lret
subl
lret
test
es
push
ja
push
insl
rorl
ja
inc
xchg
mov
rcll
js
pop
dec
sub
cmpsb
lods
sar
fsubs
dec
xchg
inc
clc
xchg
add
pop
jg
scas
dec
das
fsubl
or
test
or
xor
aad
cmp
ljmp
xor
ds
sbb
mov
inc
inc
repnz
cmpb
add
push
push
and
and
enter
cli
call
mov
pop
ds
rorl
add
push
mov
sub
pop
or
sbb
and
dec
pop
cmp
jg
push
mov
in
xorl
sub
jb
lea
pusha
add
cld
in
sbb
fwait
das
pop
iret
nop
cmpsl
add
fadds
mov
out
pop
and
xor
popf
mov
daa
lods
shrb
test
sahf
pop
pop
and
adc
mov
sbb
mov
push
gs
insl
adc
push
jecxz
leavew
mov
sti
in
xchg
lds
jmp
aam
cmp
push
lcall
dec
inc
inc
test
pop
add
jo
mov
xor
pop
sbbl
pop
cmovge
ljmp
xchg
xor
negl
or
ror
std
cld
negl
push
sbb
xor
pop
popa
inc
adc
roll
push
imul
popa
test
imul
les
mov
cmp
addb
and
das
or
push
sub
jecxz
jp,pn
and
dec
pushf
js
mov
xor
insb
xchg
jb
into
mov
in
inc
leave
nop
pop
loop
nop
mov
pop
cwtl
and
out
xor
out
outsb
pop
lds
push
gs
movsb
inc
xchg
or
push
inc
inc
pop
pop
lcall
jnp
movb
xchg
cld
dec
pop
and
jae
outsb
mov
lods
xor
push
cmp
push
inc
rorl
jmp
cltd
and
sti
mov
pushf
add
xor
push
jmp
std
adc
xchg
mov
pop
mov
mov
clc
add
wrmsr
jno
jle
add
mov
xchg
or
xchg
and
imul
popa
js
std
rcl
xor
pop
xchg
cmpsb
lds
push
into
add
jl
or
sub
pop
mov
clc
dec
push
xchg
push
sub
xchg
sbb
lods
fistpl
test
pop
mov
movsb
mov
jmp
fwait
or
mov
cmp
imul
rclb
lret
push
test
call
out
push
int3
inc
aam
fs
out
lock
lds
or
mov
dec
jle
out
addl
aad
inc
cltd
lds
dec
imul
mov
lret
mov
iret
es
dec
orb
push
xchg
jg
in
xchg
enter
dec
jp
mov
das
mov
mov
in
out
shr
mov
inc
int
lret
shll
adc
data16
push
dec
dec
inc
std
in
pusha
mov
sub
push
lods
adc
clc
test
pop
jno
sahf
rcll
cwtl
jne
xor
jge
mov
cmp
ret
arpl
xor
cmp
popf
test
add
shrb
add
stc
add
cmpsl
cmp
clc
pop
jmp
fsqrt
outsl
popf
xlat
push
dec
mov
lds
or
ret
inc
in
cmp
jmp
pop
into
shrb
out
test
pushf
cltd
xor
mov
das
or
test
xchg
scas
cmp
jg
mov
mov
push
out
mov
inc
adc
stc
jns
add
dec
arpl
das
pop
mov
cld
int3
push
mov
mov
dec
sbb
pop
xchg
fs
pop
inc
rclb
jbe
stos
push
test
push
and
jg
jle
faddl
loope
adc
inc
jge
shrb
movsl
pop
sub
sub
loopne
xchg
cld
inc
filds
scas
xlat
add
stc
movsl
inc
sti
xchg
push
sbb
rclb
jl
mov
les
sbb
stos
mov
pop
into
or
adc
shl
nop
dec
mov
adc
mov
sbb
shlb
add
gs
cmp
or
inc
stos
inc
test
loopne
lods
jmp
xor
mov
xlat
and
pop
sahf
fdivl
aaa
adc
or
mov
jnp
pop
pop
add
lds
lcall
pop
sbb
push
sahf
popf
lret
outsl
in
add
mov
sbb
int3
mov
test
cmp
rolb
sti
dec
dec
loopne
into
stc
addb
lret
mov
mov
inc
cmp
xchg
repnz
jle
mov
fisubrs
outsl
push
fisttps
fdivl
clc
gs
add
mov
pop
pop
dec
pop
les
sub
mov
push
out
fsub
xchg
sbb
adc
push
dec
fs
in
addr16
inc
mov
sbb
add
aas
jne
pop
int
mov
xchg
loopne
mov
or
cmpsl
jecxz
lcall
sbb
xor
unpckhps
and
mov
mov
loope
fsub
dec
popf
test
test
fistpl
sbb
pop
leave
mov
int3
sti
inc
leave
or
pop
push
lods
dec
dec
mov
jae
inc
aas
ret
or
pop
cld
addr16
loopne
clc
in
mov
adc
push
push
push
movsl
adc
inc
das
sbb
cs
mov
push
push
mov
leave
push
mov
jge
mov
popa
xchg
pushf
out
adc
das
aaa
nop
and
aas
mov
imull
aam
and
jle
arpl
mov
jne
sbbl
adc
out
cwtl
leave
ret
imulb
dec
pop
sub
push
test
mov
lea
sbb
mov
pop
imul
xchg
sbb
sub
repnz
cmpsl
mov
in
mov
and
divb
notl
int
fimull
jecxz
das
mov
sti
cld
repnz
nop
fisubrl
mov
push
js
insw
cmp
pop
inc
dec
cwtl
or
addr16
mov
lcall
jne
cltd
int
sbb
lret
mov
dec
add
add
dec
sbb
xchg
loopne
sahf
jb
hlt
popa
push
add
inc
push
popa
std
mov
outsb
fsts
mov
repnz
ja
adc
mov
mov
adc
aas
push
int
popf
cmp
mov
fs
add
stos
outsl
or
lret
add
mov
xchg
push
fisubs
add
mov
shrl
icebp
or
add
sarb
pusha
mov
imul
scas
loope
sbb
inc
pop
mov
mov
popf
jge
sub
arpl
ret
jns
mov
leave
and
lcall
mov
in
std
mov
cld
pop
pop
insb
test
sar
movsl
icebp
test
mov
cmpsl
sahf
jns
cmc
rcll
leave
mov
out
xchg
test
repnz
iret
iret
rorb
mov
hlt
cltd
fiadds
jo
popf
cltd
add
shl
jmp
jge
js
lds
dec
shrb
jnp,pt
push
push
nop
adc
or
or
icebp
mov
movsl
xor
sub
imul
int
pop
cmpps
addb
insb
push
push
nop
mull
jb
cmp
out
clc
push
aad
test
xor
inc
sti
pop
out
or
hlt
or
jle
push
cmp
mov
add
stos
outsl
fwait
popf
pop
imul
push
add
movsb
bound
dec
nop
negb
jmp
jns
lea
rorb
push
ficomps
lock
imul
mov
inc
inc
cltd
in
iret
jb
into
outsb
pop
into
xor
sub
xchg
mov
int3
xacquire
sti
and
fnstsw
cmc
mov
xor
mov
fs
mov
loopne
cmp
aam
testl
xchg
push
stos
or
fisttpl
mov
push
cmp
xchg
push
clc
mov
push
mov
in
push
call
mov
insb
pop
outsb
cmp
push
call
sbb
jno
cmpsb
dec
stos
jne
mov
lret
data16
test
dec
lahf
cltd
mov
mov
mov
xor
sub
inc
mov
dec
lret
cmpb
or
jmp
jle
mov
orl
imul
push
sahf
gs
xor
add
sub
gs
dec
pop
lods
xchg
inc
aaa
mov
mov
popf
xor
xchg
stc
ss
mov
push
push
mov
or
sub
sub
call
into
into
dec
lcall
or
loopne
lret
pop
in
xchg
hlt
add
testb
repz
cmp
jecxz
test
pop
lret
push
push
dec
push
lcall
push
rol
pusha
push
sub
inc
jno
aad
push
inc
lahf
xadd
mov
int3
lods
rolb
xor
add
xor
mov
push
ret
nop
pop
jno
lods
mov
adc
fsubrl
cmp
and
popf
pop
pushf
cmp
mov
add
xchg
fs
imul
cs
and
std
xchg
mov
enter
pop
and
mov
lea
addl
cmp
cmc
int3
push
es
fisubs
cmpsl
lahf
in
xchg
adc
lcall
shlb
pushf
mov
sbb
adc
add
leave
push
lods
inc
xchg
sub
sti
stos
lret
sub
and
push
dec
outsb
sbb
int3
push
cmpsb
jae
dec
call
sbb
mov
cmp
test
jbe
mov
inc
inc
ja
fsts
pop
inc
movsl
jno
sbb
or
adc
jl
xchg
out
jae
dec
fcoms
mov
sbb
fstpl
imull
mov
cmp
push
out
fdivs
cltd
xchg
ret
jle
xchg
das
bound
fsubrl
add
ficoms
ret
hlt
pop
or
jbe
push
or
mov
pop
xor
ret
pop
outsb
jmp
adc
and
rclb
jg
mov
xchg
mov
jp
lock
adc
push
ds
stos
test
in
mov
hlt
test
jbe
lcall
popf
lds
xchg
add
scas
jbe
clc
mov
cmp
loope
jo
xor
js
pop
add
xchg
in
fstpt
inc
mov
fisubs
push
in
cld
lcall
inc
add
je
jbe
pop
aam
orl
xchg
ret
xor
mov
fwait
mov
add
aad
jge
adcb
dec
sbb
sub
mov
cmp
int
sbb
xlat
xchg
fsubl
jecxz
aad
fstpt
dec
xchg
pop
scas
inc
jae
mov
fwait
scas
or
shll
into
cmp
mov
fwait
shrl
aad
sbb
stos
dec
inc
mov
xor
testb
fadd
pop
cmpsl
shrb
push
jnp
mov
cltd
into
sbb
or
inc
ljmp
fwait
lcall
and
cmp
loope
insb
pushf
cli
or
popa
dec
dec
into
fldcw
or
xchg
lcall
push
xchg
pop
out
mov
adc
hlt
das
xchg
dec
hlt
lret
in
pop
sbb
xchg
mov
mov
jns
lds
inc
popa
or
adc
jb
lods
sub
cmc
push
outsl
mov
jmp
ret
movsl
ds
xor
stc
repz
inc
cmp
jl
mov
add
sarl
fstpl
lea
adc
xor
pusha
push
fistpll
out
loop
jns
hlt
out
cmp
fcomp
add
nop
cmp
popf
lods
cmpl
push
into
add
jne
test
faddl
add
call
push
gs
pop
mov
idivl
add
pop
push
fwait
repz
mov
and
shrb
pop
xor
pop
outsb
push
adc
xchg
add
and
dec
in
jbe
push
and
jp
mov
in
cmp
push
push
lock
or
cmp
sbb
enter
cmp
lcall
mov
test
jno
pop
push
adc
add
mov
shll
jmp
fcmovu
scas
jmp
in
cmp
xchg
push
dec
adc
dec
in
call
popf
xchg
xchg
in
adcl
js
jg
mov
rorb
scas
inc
mov
cld
or
sahf
jbe
mov
subb
int3
stos
xor
or
adc
cli
lahf
arpl
or
mov
mov
pop
loopne
xor
inc
iret
sahf
movlps
sbb
sahf
mov
loop
push
xchg
mov
xor
or
leave
aad
shrb
aam
jmp
pop
leave
arpl
xor
imul
stc
je
mulb
mov
aaa
movlps
lea
rorb
jns
notb
mov
out
movl
stos
sub
dec
stc
dec
dec
jbe
mov
lods
test
into
and
push
dec
js
jge
lcall
rclb
xor
jl
mov
bound
popa
mov
stos
sub
sub
std
adc
out
lret
cltd
xchg
mov
mov
and
movsb
jae
mov
js
push
sub
jns
mov
xchg
shlb
pop
add
xchg
sbb
notb
stos
in
jmp
or
cmpsb
adc
xchg
xlat
push
daa
orl
fcmovnbe
push
imul
lahf
xchg
push
or
cmp
out
push
fists
push
inc
pop
jno
xchg
and
aam
cmp
std
mov
pop
inc
mov
sub
adc
sti
mov
stos
push
jo
test
or
and
mov
mov
rorb
xchg
lret
mov
rcrl
mov
das
mov
adc
popf
push
mov
aad
dec
scas
add
jle
cmp
loopne
test
adc
add
push
insl
call
push
lea
xor
nop
xchg
outsl
jle
add
adc
sti
imul
roll
mov
mov
pop
ret
inc
dec
loope
out
fs
cmc
mov
cmp
ret
or
cmpsl
mov
ret
stc
outsl
push
jo
inc
gs
pop
int3
pop
push
fadds
in
pop
sbb
inc
pop
lret
loopne
rorb
sub
pop
jo
or
sbb
jg
fwait
mov
mov
into
sahf
pop
loop
mov
jecxz,pn
jp
sub
or
push
mov
pop
dec
aam
mov
xchg
faddl
icebp
jmp
aam
jge
lahf
mov
loopne
cmp
dec
dec
pusha
xor
push
pop
mov
adc
ret
cmp
inc
cmp
xchg
enter
mov
cmc
sbb
cmp
cltd
cs
pop
adc
push
pop
sub
fst
mov
adc
pop
xor
popa
repz
insb
add
pop
vmovd
sub
call
cltd
xor
aam
js
lret
add
adc
jo
sahf
sub
and
aam
stc
cltd
sarb
movsl
jp
sub
mov
jae
sti
jbe
push
mov
pop
mov
test
fnstsw
fildll
pop
jne
das
push
cmp
jno
adc
subb
sbb
imul
out
mov
leave
jmp
insl
sbb
or
call
mov
sarl
adc
push
adcb
ffree
jge
int3
mov
int3
or
scas
jo
xchg
faddp
or
and
mov
dec
inc
in
dec
out
bound
out
in
out
sub
push
cmpsb
out
nop
cmp
inc
add
addr16
push
cmp
pop
das
cmpsl
cs
fistpll
imul
add
fdivs
mov
mov
sahf
xchg
lock
jnp
mov
sub
xchg
cmp
ja
push
jmp
out
adc
mov
popa
aas
clc
pop
cmpsl
ja
test
mov
cmpxchg
mov
and
pushf
adc
out
je
sub
stos
mov
mov
loop
imul
lret
adcb
ss
push
cmp
mov
es
mov
pop
test
jle
test
daa
or
jnp
mov
pop
sbb
push
vpaddsb
add
inc
stos
pop
test
loopne
push
sarb
lea
repnz
jne
mov
push
sbb
pop
adc
mov
dec
add
enter
stos
pop
bound
aad
or
pop
scas
xorb
lret
dec
dec
push
jno
fcomps
mov
inc
adc
cmp
mov
scas
sbb
push
sub
out
cmpsl
add
cli
add
inc
cmp
xchg
lock
pop
pop
sbb
fwait
sbb
mov
add
pop
int3
pop
xlat
push
adc
pushf
sub
outsb
adc
ret
add
push
pop
pop
pop
movsl
xor
dec
cs
clc
test
jmp
jo
ds
dec
sub
std
jo
fs
mov
addl
pop
mov
xchg
push
mov
outsb
jge
mov
pushf
pop
sub
adc
mov
divl
mov
out
or
add
xor
sarl
xor
mov
subl
jbe
cltd
and
pop
popa
shrb
inc
mov
pop
or
or
sbb
ss
hlt
call
repz
mov
clc
out
mov
pop
enter
pusha
mov
outsb
divb
mov
js
mov
jge
xchg
mov
fcomi
arpl
fstpt
adc
pop
jmp
and
fs
inc
mov
or
outsb
xchg
mov
pop
pusha
dec
and
push
nop
je
xchg
xlat
ss
cmc
inc
push
mov
dec
pop
outsl
imul
lods
cmp
pop
das
vphaddwq
enter
in
xor
or
jp
mov
fs
mov
push
xchg
sti
cmpsb
imul
sarb
cmpb
in
lock
adc
mov
mov
insb
sbb
pop
ja
repz
lret
push
adc
cmc
or
xchg
and
movsw
mov
rcrb
fstl
pusha
call
mov
fstps
mov
mov
dec
stos
outsl
lret
inc
ss
push
aad
scas
mov
ret
das
ljmp
and
jae
call
jp
stos
add
mov
ficompl
pusha
cs
ljmp
out
pop
mov
sbb
into
mov
mov
and
lods
and
sbb
das
push
xor
lahf
rorb
cmp
xor
cltd
hlt
fsub
divl
inc
cmc
mov
mov
xchg
push
add
dec
pushf
je
dec
cmc
roll
xor
aaa
cltd
sbb
repnz
outsl
aas
sub
popf
aam
sbb
into
lret
mov
sbb
jmp
daa
xchg
sub
mov
push
jne
cmpsb
mov
aam
jmp
xchg
xchg
jecxz
shrb
xchg
pop
fildl
and
mov
pop
lods
inc
insl
sti
lods
andb
enter
icebp
mov
movsb
mov
std
aad
ss
mov
lahf
push
xor
xor
sbb
loope
imul
sub
es
add
sti
das
fnstsw
jp
idiv
adc
rcrl
xchg
dec
dec
xchg
mov
and
sbb
insb
sbbl
sti
jae
movsb
and
insl
inc
jno
adc
lcall
push
push
test
push
cli
and
add
and
movsb
fstl
xor
pusha
ljmp
std
pushf
cmpsl
enter
or
mov
gs
cmpsl
je
xor
jae
xor
xor
or
push
lret
addr16
xchg
mov
dec
test
or
inc
cmpsb
mov
out
jnp
mov
sub
xchg
or
and
outsb
ret
fldl
int3
sbb
dec
mov
xor
dec
mov
push
and
lds
sub
push
sub
imul
cmp
xchg
xor
and
int3
and
pop
sarl
cbtw
in
mov
repz
loopne
push
mov
in
push
sub
icebp
xchg
stos
into
add
push
add
cmp
mov
xchg
pop
aam
loop
cmp
pop
push
sub
mov
or
mov
scas
loop
push
popf
dec
les
scas
push
mov
jl
mov
cli
mov
add
enter
jno
rcll
mov
mov
cli
test
xchg
pusha
push
dec
fistpl
xor
push
fcmovnbe
jl
adc
xchg
mov
incl
mov
aam
movsl
fstpl
lods
test
stos
out
out
dec
nop
jbe
ret
mov
bound
test
pop
inc
test
xor
and
repz
sbb
inc
test
fiaddl
xor
fmuls
in
sub
arpl
stos
add
clc
and
or
mov
adc
xchg
adc
inc
mov
sar
lret
pop
jg
je
cmc
xchg
lods
mov
pop
mov
push
insb
jecxz
loop
cmp
jge
mov
test
ret
dec
mov
mov
jecxz
out
xchg
loop
aas
mov
call
clc
lods
mov
insb
out
movsb
mov
out
and
and
insb
mov
mov
in
add
ret
pop
pop
sub
mov
jne
xchg
out
adc
testl
jecxz
pop
out
jnp
push
inc
lcall
inc
sti
mov
decl
addb
inc
vunpcklps
or
fcoms
cmp
mov
dec
push
bound
ret
xchg
imulb
or
aad
mov
das
push
lahf
movsb
ss
out
icebp
cmpsl
outsb
pop
insl
inc
sub
popl
out
xchg
enter
mov
les
push
aas
jge
jb
add
into
je
push
sbb
stos
inc
cmp
test
inc
icebp
in
popa
ja
shrb
mov
pop
push
push
in
mov
inc
xchg
mov
lods
sbb
fdivs
das
ficompl
scas
call
leave
insb
rcrl
xor
dec
add
sbb
imul
pop
call
mov
subb
mov
sbb
pusha
jo
sti
divb
add
cmp
xor
mov
ljmp
dec
mov
sbb
sbb
aam
popa
jecxz
sbb
lcall
ret
mov
mov
xor
sar
movsb
fistpl
scas
scas
jbe
adc
ret
sbb
das
icebp
loop
push
xlat
mov
subb
fidivrl
and
mov
pop
rcl
mov
or
fisubrs
rclb
hlt
std
push
sbb
adc
gs
xchg
and
mov
push
stc
daa
mov
mov
aas
xor
and
nop
incl
mov
inc
jns
insl
fwait
shrb
mov
aam
dec
lret
imul
out
aad
and
jl
sbb
clc
sbb
pop
inc
outsb
dec
aaa
in
jmp
pop
rolb
cmpsl
iret
add
mov
or
adc
or
clc
cld
in
sti
xchg
xor
add
xchg
fidivs
mov
push
mov
jnp
adc
jo
aas
mov
scas
jmp
sbb
jae
pop
sahf
lock
ret
int3
decl
in
ss
dec
sbb
sub
aas
and
ds
repnz
out
jle
mov
mov
ss
push
push
shlb
mov
jne
setne
neg
push
cmp
leave
in
sahf
stc
add
les
mov
movsb
sub
lahf
out
sub
jmp
push
xor
mov
and
in
pop
xor
xor
movsb
dec
xchg
stos
call
cmpsb
fiaddl
rcr
dec
data16
cmp
popa
loopne
mov
dec
pushf
popf
je
and
cmp
imul
inc
repz
inc
dec
cmp
pop
or
outsb
lcall
bound
jecxz
xchg
movsl
loopne
or
aas
xor
push
insl
push
push
cmp
arpl
cltd
loopne
push
sbb
add
sti
add
adc
lock
dec
xor
pop
jle
fs
mov
add
outsl
in
bound
or
mov
mov
xor
outsb
mov
inc
insb
mov
pop
out
mov
xchg
or
mov
xchg
adc
and
enter
pop
jl
sbb
rcrl
push
adc
mov
xchg
imul
jp
lcall
movsb
shll
mov
or
daa
std
loop
or
jl
pop
sbb
es
dec
mov
adc
adc
jecxz
stos
jecxz
outsb
aam
adc
sbb
lret
dec
xchg
push
divl
dec
out
rcll
lcall
xchg
aad
loope
movsl
call
jl
in
mov
jne
mov
push
cmp
mov
add
clc
jo
stc
add
xor
ljmp
pop
jl
pop
xlat
xor
pop
mov
fucomp
outsb
or
icebp
outsl
dec
mov
inc
loop
xor
sub
test
push
mov
xchg
pop
out
int3
mov
xchg
jecxz
push
sahf
and
mov
pop
xchg
pop
or
shlb
jmp
insb
jl
push
xlat
out
and
test
sbb
push
movsl
je
mov
inc
mov
addl
dec
sbb
dec
addr16
cli
mov
push
mov
mov
repnz
cs
pop
addr16
push
pmullw
js
addr16
jle
call
das
je
xor
out
fs
mov
dec
arpl
fisttpl
xlat
xchg
outsb
sbb
inc
iret
pop
push
xor
and
mov
loopne
mov
jns
pusha
and
sti
dec
js
mov
fwait
sub
out
mov
add
mov
out
mov
aas
out
inc
insb
repz
add
stc
lods
adc
je
mov
cs
lods
pop
mov
xchg
fistl
outsl
lcall
push
in
xchg
popf
or
test
jns
dec
xchg
nop
fiaddl
orb
out
aaa
fistl
cld
jnp
push
addl
xchg
mov
aaa
test
or
adc
mov
jae
cltd
test
xlat
lock
lcall
es
inc
cli
xchg
mov
sti
adc
shl
or
adc
cmp
mov
andb
fildl
aas
jecxz
mov
push
inc
pop
int
vmovntps
cli
adc
scas
fcoms
inc
cwtl
lret
xor
movl
adcl
pop
push
das
sub
lds
xchg
loope
rorl
les
xchg
out
in
repz
mov
xorb
mov
xor
pop
out
es
ja
jmp
lret
jno
adc
adc
cs
jns
arpl
push
push
lahf
lds
das
xchg
push
call
dec
mov
loope
mov
fistps
pop
cli
or
in
popf
bound
jne
jne
add
mov
decb
xchg
inc
jecxz
pop
mov
pop
pop
test
mov
push
inc
or
or
inc
jg
pushf
add
push
out
movsb
push
mov
scas
std
lahf
ror
xor
outsb
jbe
shlb
aad
cld
fdivs
fwait
pop
andl
xchg
repnz
cmp
mov
xlat
in
mov
jne
or
mov
loope
lods
push
push
inc
scas
pusha
movb
mov
mov
mov
xchg
adc
jecxz
mov
out
rorl
push
sbb
shlb
popf
rclb
jecxz
fucomi
pop
test
push
pop
jge
movsl
test
sahf
mov
adc
aam
mov
dec
test
fxch
lods
sbb
push
ret
aad
mov
xchg
add
ljmp
push
mov
mov
arpl
repz
int
mov
shlb
cmp
outsl
cld
ret
insb
pop
mov
or
jle
pop
cs
mov
es
clc
shl
push
adc
xchg
insl
or
dec
ja
sbb
popf
int3
xchg
gs
sbb
lods
jne
arpl
stc
mov
aam
outsl
xor
cltd
sbb
or
push
lods
adc
fcomp
shlb
sbb
mov
test
inc
mov
dec
lret
cmp
cs
fldenv
xchg
mov
insl
sti
cmc
fiadds
repz
lcall
inc
xchg
sbb
roll
pushf
jae
leave
xor
popf
out
inc
jno
in
add
xlat
dec
in
insb
test
mov
inc
mov
cmc
push
imul
or
ret
jge
pop
dec
jle
test
dec
mov
or
jae
mov
faddl
sbb
xchg
mov
push
ljmp
inc
xchg
dec
mov
dec
dec
dec
lret
js
xor
cld
jb
add
enter
scas
insl
fisttps
or
enter
and
push
mov
pop
push
in
mov
in
sar
aad
add
iret
notb
popa
dec
pop
push
orl
push
rorb
lcall
imul
sub
dec
cmpsl
iret
in
jo
stos
pop
sbb
and
add
dec
cld
adc
mul
pop
aad
push
mov
das
mov
push
lahf
loopne
aaa
test
pop
lods
push
cs
into
fsts
sbbb
xchg
mov
pushf
inc
sbb
pusha
setae
sub
push
sti
pop
stc
adc
push
addb
pop
imul
push
pop
ret
testb
adc
sbb
push
add
ret
imul
scas
adc
iretw
and
bound
stos
pop
jb
add
les
push
pop
pop
xchg
push
add
gs
cli
jp
idivb
mov
add
fs
xchg
or
mov
sbb
aas
mov
add
fimuls
pop
bound
dec
sub
cmp
pop
xor
stos
lock
dec
scas
hlt
sbb
mov
das
push
out
adc
xchg
rcll
outsb
mov
add
pop
mov
xchg
mov
shr
cwtl
fcmovne
cs
jecxz
bound
hlt
test
jecxz
add
or
popf
out
push
out
xorb
fs
ret
sbb
int
cwtl
fistpl
gs
leave
mov
fwait
jno
ljmp
add
ret
inc
push
stos
mov
dec
and
outsb
mov
add
xor
adc
push
fwait
stc
dec
shll
jmp
cmp
sbbb
sbb
push
test
xchg
inc
adc
mov
mov
adc
mov
mov
mov
pop
and
out
sub
inc
and
xor
nop
repz
popf
sbb
div
test
lahf
or
stos
shl
inc
dec
aaa
adc
and
or
inc
call
dec
test
cmp
jbe
pop
mov
push
mov
sbb
mov
pop
fiaddl
out
mov
cli
jno
xchg
push
fs
lcall
addr16
pop
jb
cmpsb
vcvttpd2dqx
jnp
or
xchg
mov
adc
cmpb
andb
js
push
jne
xchg
and
cwtl
adc
fs
loopne
cli
int
mov
or
xchg
in
mov
rol
ret
push
aas
dec
push
dec
push
sbbl
mov
lea
mov
mov
or
dec
cwtl
mov
pop
jns
mov
aad
sbb
lock
rcrl
xchg
mov
pop
das
jbe
xor
push
stos
dec
sti
inc
pop
in
fs
fisubs
sub
jge
mov
xchg
add
cwtl
out
fstp
cmp
les
push
cmp
push
dec
xchg
mov
test
mov
inc
mov
mov
jae
out
push
add
ret
lds
lea
js
out
mov
dec
fmul
mov
xchg
pop
sbb
xor
addl
xor
xor
imul
push
xorl
stos
mov
fidivl
push
lods
lods
out
movsl
pop
imul
pop
jb
push
and
pop
popf
mov
sahf
sbb
sbb
xlat
bound
rorl
push
mov
movswl
in
out
mov
in
std
lcall
jns
inc
and
jg
int3
scas
imul
jge
push
das
test
jbe
fisubrs
sbb
into
out
and
inc
ds
mov
or
or
add
negb
lock
lods
je
dec
dec
int
mov
je
cmp
mov
jno
sub
inc
test
xor
xchg
push
nop
mov
loop
movsb
sub
rcll
shll
in
nop
mov
add
adc
lret
outsb
adc
lock
in
imull
add
shll
fistl
cmp
mov
mov
cmpsb
movsl
outsl
inc
jo
jge
test
insl
fwait
pop
adc
pop
jp
jnp
test
jno
pop
sbb
lcall
rolb
cwtl
in
ja
cmp
push
push
add
inc
adc
data16
jbe
pop
loop
aam
jns
push
enter
mov
mov
xchg
arpl
and
dec
mov
and
jb
jg
testb
inc
dec
outsb
lahf
mov
fwait
inc
xlat
cmc
arpl
mov
mov
popf
nop
imul
pop
pop
insb
sbb
lahf
orl
adc
outsb
push
xchg
ljmp
sbb
or
sbb
outsl
leave
xlat
push
lahf
fcoms
out
mov
test
ret
xchg
fists
outsl
dec
es
rclb
mov
rorl
mov
lods
aad
repz
in
push
jnp
pop
dec
js
mov
sub
and
pusha
push
mov
scas
jge
pop
aad
xor
xchg
imull
leave
cmp
sub
jecxz
pop
int3
insb
fnsave
scas
test
inc
cli
iret
aaa
xlat
dec
mov
sub
xchg
fsubs
sub
sbb
aaa
testb
push
dec
inc
or
pop
or
aaa
or
mov
pushf
mov
inc
cs
mov
dec
jg
inc
mov
lcall
add
cmp
push
test
ja
out
dec
xor
xchg
dec
push
and
push
out
push
rcl
inc
inc
in
mov
icebp
or
pop
or
lret
sub
lock
xchg
ret
das
rorb
cmp
inc
jnp
and
push
jmp
mov
ja
xchg
out
mov
popf
sub
adc
add
sbb
sub
mov
lahf
ja
rcrl
mov
js
pop
pop
loope
add
fildl
xchg
dec
push
sub
cmp
or
test
dec
ja
xabort
xchg
xchg
hlt
inc
inc
imul
fsubs
fldl
movsb
mov
jnp
repnz
cmpl
sarb
out
mov
cld
jg
icebp
xchg
pop
pop
bound
mov
inc
aam
jo
add
xor
mov
mov
pushf
shlb
mov
popa
rcrl
jb
gs
nop
sbb
inc
popa
sub
jo
into
inc
push
xchg
mov
pop
adc
in
repz
popf
je
rcr
es
xor
adc
fnstcw
ret
leave
mov
inc
adc
inc
inc
push
and
mov
pop
xor
adc
dec
lret
xchg
insb
sub
cmpsb
push
jmp
cmp
cmp
push
or
sahf
outsl
xchg
adc
out
mov
cmpsb
clc
dec
xchg
mov
jmp
mov
pop
or
stos
imul
repz
xor
outsl
icebp
out
rolb
stc
lahf
scas
mov
shlb
movsl
mov
jae
dec
xchg
push
test
push
mov
ds
mov
cmc
dec
shll
bound
mov
fstpt
je
adc
aam
loope
pusha
decb
xchg
mov
sub
and
mov
inc
idivl
or
adc
push
and
nop
push
jmp
aad
mov
dec
aam
stc
adc
pusha
mov
icebp
scas
push
filds
test
fimuls
pop
mov
jl
mov
adc
or
sub
leave
icebp
aad
mov
inc
adc
sbb
addr16
nop
or
fdivrl
int
cs
int
mov
pusha
test
aad
lock
cmp
and
stos
jge
mov
std
adc
add
adc
pop
in
jmp
ja
in
xlat
subb
inc
sahf
ljmp
xlat
jecxz
fisttpl
sbb
scas
cmp
out
mov
sub
jmp
js
sbb
leave
adcb
and
cmpsl
jmp
outsl
ds
scas
jl
mov
sti
orb
jecxz
ret
xchg
fcoms
lock
test
loopne
in
cmp
mov
out
adc
xlat
jb
sbb
add
mov
rcrl
push
lock
mov
movsl
out
jne
in
int3
je
jne
dec
dec
adc
lcall
adc
mov
and
mov
cmp
loop
ret
cmp
lds
mov
mov
push
into
push
sbb
daa
imulb
dec
push
pop
cwtl
and
cwtl
xor
loope
arpl
cmp
loopne
mov
push
inc
mov
jle
xchg
insb
ss
hlt
dec
pop
sti
pop
mov
aam
fsubrp
jge
cli
test
rorl
popf
outsl
cmp
das
push
hlt
jl
enter
aaa
lea
test
sbb
inc
popl
lods
mov
dec
out
lock
jnp
adc
add
add
and
sbb
popf
sub
add
lret
fsubs
es
stos
jl
and
cli
insb
pop
inc
dec
sbb
push
lock
aad
mov
sub
in
and
dec
push
adc
movsb
pop
mov
add
push
xlat
push
jns
mov
mov
push
cmp
push
out
cmp
lcall
cmc
inc
nop
testb
sbbb
inc
mov
jnp
or
or
mov
outsl
sub
popa
push
repnz
mov
mov
sub
dec
nop
xchg
mov
iret
inc
rorl
sbb
add
stos
or
sub
orb
mov
fistpl
xor
mov
or
push
icebp
mov
insl
adc
push
test
flds
gs
push
cs
repz
and
dec
call
xor
xor
inc
test
cmpsb
inc
cld
push
fstp
pop
rcll
jl
ja
outsb
nop
call
push
outsl
add
ss
mov
mov
fcos
lea
adc
js
mov
and
xchg
push
lock
repz
or
sub
cmpsb
and
and
shll
repnz
decl
rcrb
in
pusha
fcomip
call
lahf
popl
inc
pop
sti
inc
das
add
lcall
or
fstp
imul
jge
pop
mov
xchg
arpl
aad
int3
mov
adc
pop
mov
imul
scas
insl
pop
adc
push
pop
mov
sub
mov
pusha
mov
or
stc
rolb
sub
pop
or
and
xor
fcomp
push
in
or
add
or
lods
inc
push
xchg
test
stos
sarl
inc
lea
mov
iret
mov
jae
lea
and
push
inc
leave
out
push
cmp
inc
push
in
bound
xchg
test
cmp
fwait
mov
adc
leave
lods
pop
jno
fsubl
testl
add
xor
jno
mov
or
pop
dec
les
adc
stc
movb
mov
sbb
mov
sahf
sahf
mov
jl
scas
lods
push
aam
addb
cmp
sub
shll
loop
push
adc
ljmp
in
inc
xor
pop
shrl
jecxz
test
sahf
xchg
addr16
subb
inc
dec
mov
mov
push
sbb
ret
clc
xlat
shr
pop
lret
aaa
push
sub
xchg
mov
jmp
aaa
into
popf
mov
insl
xchg
mov
adc
xchg
into
insl
mov
inc
ljmp
adc
std
ficompl
roll
inc
decl
dec
jo
out
loope
scas
sub
mov
lock
sbb
sti
dec
inc
push
mov
push
and
js
addl
jbe
lahf
cmpsb
sbb
movsb
cli
mov
xchg
hlt
jmp
imul
lahf
in
rcrb
mov
ss
rcrl
or
adc
repnz
iret
fucomi
push
xchg
and
push
dec
aaa
cli
int3
nop
dec
fcmovnbe
pop
idivb
outsl
xor
fwait
in
cmp
in
jecxz
pop
mov
shll
jo
stos
or
loope
sbb
roll
or
sbb
addr16
icebp
adc
jne
jl
adc
or
movsl
sbb
into
xchg
mov
or
mov
cmp
scas
pop
jg
sbb
outsl
insb
data16
adc
jg
iret
and
cld
pop
call
mov
adc
push
ficomps
test
jmp
fdivl
into
mov
xor
mov
jge
jno
inc
xchg
add
mov
out
mov
fdivs
xor
jne
push
test
std
xor
dec
repnz
es
fadds
mov
xor
push
dec
add
push
pop
sbb
imul
test
cmpsl
rclb
sub
aas
add
out
xchg
inc
pop
js
or
adc
xchg
jp
mov
add
mov
and
out
dec
scas
jb,pn
mov
adc
dec
fildl
movsl
out
add
mov
lret
and
lods
xor
pop
lock
mov
add
cmp
out
mov
out
into
in
outsb
cli
push
cmp
dec
pop
pusha
push
jmp
sbb
movsl
cmpb
add
xchg
addr16
repnz
jno
outsl
xor
int3
pop
inc
xchg
adc
je
sbb
aas
mov
inc
mov
orb
inc
adc
sbb
nop
push
sbb
xor
je
pop
mov
int3
nop
test
fcmovnbe
push
push
scas
mull
cmp
icebp
test
push
shlb
cmp
and
pop
shrb
addr16
jp
ja
dec
dec
pop
pop
dec
xchg
arpl
popf
pop
aas
push
cld
in
or
lret
inc
pop
cwtl
dec
push
cmpb
jge,pn
or
xchg
cmp
add
adc
jnp
test
or
jns
fiadds
stos
sbb
test
movsb
lret
mov
push
or
mov
adc
ret
mov
and
int
imul
stc
scas
arpl
mov
xchg
lds
ss
mov
or
and
dec
push
loope
push
jg
cmp
mov
js
in
gs
lahf
mov
sbbb
aam
sahf
aaa
dec
push
aad
pop
mov
adc
push
add
lahf
dec
sti
cmp
cld
mov
addr16
push
sahf
sub
aas
mov
jmp
inc
mulb
xor
mov
out
imul
rcrb
in
in
outsb
mov
aad
xchg
fdiv
rcrl
arpl
mov
adc
and
fs
mov
scas
daa
cmp
ljmp
adc
jmp
jbe
adc
iret
xor
fs
xor
xchg
xchg
or
mov
jne
aaa
lahf
jns
mov
into
sub
mov
add
xchg
insl
imul
push
leave
fldl
pop
xor
bnd
pop
lods
xchg
sbb
pop
rcrl
icebp
ret
xchg
in
add
jle
fwait
int3
and
test
stc
aam
inc
pop
sub
sub
imul
pop
mov
shlb
sbb
push
mov
out
dec
jle,pt
repnz
push
jbe
enter
dec
sti
mov
mov
loope
mov
psraw
jge
jg
sub
push
pop
inc
stc
mov
rolb
shll
or
jmp
mov
adc
mov
jnp
sti
pop
dec
fsubrp
mov
or
xchg
shlb
inc
push
mov
addb
stos
pop
push
es
arpl
lret
ret
mov
mov
mov
lret
out
sahf
mov
es
sti
jbe
mov
push
in
mov
ss
sbb
in
dec
ljmp
scas
andb
or
sub
sti
xor
test
mov
repz
pop
adc
push
cmp
addr16
in
sti
fwait
push
ret
or
mov
jbe
pop
cmovne
push
jb
lret
jmp
xchg
adc
mov
in
fistpl
les
out
jns
cmc
enter
int
pop
adc
inc
lcall
in
xchg
andnps
adc
xchg
in
mov
sbbl
fdivrp
hlt
test
into
and
push
aas
xchg
xchg
hlt
pop
fiadds
daa
test
int3
push
jb
mov
or
inc
add
je
stc
add
leave
incl
push
and
xchg
push
shll
pop
ficompl
mov
leave
jle
aas
pop
mov
das
mov
cmc
and
clc
insl
scas
adc
dec
and
outsb
or
je
and
adc
in
push
adc
js
gs
roll
mov
inc
jle
daa
dec
pop
sub
push
daa
aad
inc
cld
gs
jbe
ss
jnp
lock
cmp
in
pop
xchg
movsb
jno
sbb
jmp
cmp
cwtl
dec
into
and
sub
xchg
mov
and
mov
dec
push
add
xor
cwtl
add
enter
xchg
mov
fnstenv
xor
ret
addl
int
loop
cld
sbb
test
cs
lret
int3
push
dec
jo
or
movsb
in
test
dec
push
lea
xor
stc
cmp
inc
and
nop
mov
loope
cmp
xchg
aas
sbbb
dec
jle
nop
loop
inc
out
mov
loop
insl
mov
imul
xor
daa
or
popa
shll
inc
ret
icebp
xor
or
ja
popf
xor
je
call
jl
mov
xchg
mov
aad
mov
mov
out
subb
push
jmp
mov
scas
push
enter
jge
loop
xchg
test
adc
sarb
pop
jnp
pop
or
addr16
or
sub
push
in
cli
out
add
shll
nop
cmp
xor
mov
and
and
pop
fsubs
repz
and
inc
fdivrl
jns
pusha
mov
negb
cmpsb
call
cmovb
and
roll
jno
repnz
aam
mov
mov
out
xchg
nop
mov
cmp
into
push
dec
rorl
xchg
in
in
sub
mov
cmp
xchg
adc
mov
push
ret
lods
dec
gs
stos
dec
enter
mov
dec
pop
ljmp
es
jae
mov
cli
lret
xchg
inc
add
lods
xor
loop
loope
xchg
add
mov
mov
ljmp
jge
imul
outsl
jmp
adc
bound
je
pushf
mov
or
push
aad
inc
xor
inc
in
jae
cmp
test
sbb
sbb
push
les
sub
mov
lcall
inc
xchg
lea
mov
push
cmpsl
clc
pop
mov
mov
fisubrl
andb
cmp
in
mov
mov
dec
stos
add
jl
stos
inc
gs
mov
enter
dec
repnz
mov
xchg
notb
daa
iret
sbb
add
dec
cmp
shrl
mov
add
jae
movsl
roll
mov
out
mov
in
rorb
dec
daa
inc
or
mov
jg
aam
xor
outsl
inc
stc
lcall
dec
or
jns
outsl
les
and
inc
dec
mov
mov
loop
cmp
cmpsl
je
jecxz
pop
fmull
aaa
das
les
ret
decb
fimull
mov
scas
fiaddl
cmp
sbb
pop
inc
sarl
pop
lahf
push
jno
loopne
push
ljmp
lcall
inc
sbb
insb
inc
jle
pop
ljmp
sbb
or
insb
lods
les
cmpsl
mov
or
int3
pop
lds
xor
jb
push
ja
enter
adc
push
dec
adcb
or
jbe
jge
call
das
pop
and
add
xor
or
lods
dec
stos
fldt
nop
out
push
ret
push
movsl
dec
call
pop
sahf
lds
je
out
pop
mov
or
mov
add
add
jge
mov
lcall
adcl
jle
push
sub
movsl
mov
stc
in
fnsave
and
jns
mov
sub
add
fcmovnb
cmp
ss
rcl
pop
shlb
cmp
xchg
js
xlat
mov
out
xchg
add
xor
ds
push
and
aaa
jmp
lcall
idivb
sub
sbb
push
push
sar
sub
mov
xor
adc
ffree
lea
sti
inc
or
iret
stos
mov
pushf
ss
mov
clc
mov
mov
and
xchg
ret
imul
loop
and
mov
inc
and
jmp
outsb
in
sti
ds
or
int
jmp
mov
int
scas
push
push
fimull
lahf
sbb
jae
jmp
jmp
pop
addl
adc
push
out
jl
frstor
lcall
jp
pop
inc
rolb
add
mov
mov
or
pop
dec
push
scas
pop
hlt
xor
daa
jbe
xor
not
or
xlat
dec
sarb
sar
push
rclb
sbb
jb
or
mov
mov
pop
imul
test
fisubl
les
cmp
jnp
incb
add
and
in
dec
mov
stc
dec
in
mov
inc
push
add
sbb
packssdw
sub
and
jg
jmp
movsb
jns
shll
lds
jle
inc
push
add
jno
sahf
nop
jg
inc
outsb
cmpsl
repz
les
xchg
dec
push
mov
adc
cmp
jns
xor
in
sbb
xchg
out
pop
or
xchg
fsts
cld
mov
sub
push
cmp
add
adc
in
popa
pop
cld
call
idiv
jo
mov
jne
xchg
in
daa
push
lcall
shrb
cmp
and
mov
push
in
mov
repz
aaa
push
or
in
icebp
xor
adc
je
push
xlat
fiadds
inc
test
jge
lea
jno
sarb
test
or
js
push
adc
lock
pop
adc
mov
and
mov
jne
xor
sub
loope
inc
xor
lock
dec
test
int3
sti
addr16
loop
lods
in
shl
jecxz
or
in
out
sbb
aad
jnp
xchg
inc
pcmpgtb
add
std
jp
adc
mov
xchg
lock
ret
jae
lea
jbe
dec
mov
test
orb
bound
inc
fucomp
into
pop
fcomip
repz
cmp
mov
sub
gs
inc
xchg
aam
cmp
arpl
sub
das
jne
loop
lods
rolb
lods
pop
div
leave
inc
pop
or
mov
lods
ljmp
sbb
adcb
pop
pop
test
xor
in
ljmp
inc
mov
cmp
and
dec
xchg
rorb
push
jp
dec
stos
pop
mov
pusha
dec
fs
lock
add
rcrb
insl
pop
push
ret
loopne
or
loop
stos
mov
jb
test
loop
pop
dec
sub
adc
cld
push
iret
outsb
dec
xchg
movsl
dec
mov
out
pop
lahf
sbb
jo
dec
push
push
ja
and
js
and
sbb
xchg
roll
int
and
outsb
inc
neg
mov
mov
loope
loop
sbb
jne
push
gs
shr
or
push
test
shlb
bound
cmp
adc
adc
mov
test
inc
cwtl
sbb
stc
push
adc
ds
mov
xchg
xchg
cmpsl
lret
pop
dec
mov
or
mov
push
jle
xor
adc
and
addr16
mov
loope
push
jne
mov
push
xor
addr16
fcmove
leave
lcall
sbb
in
sub
inc
jg
aas
xor
aas
decl
push
clc
jp
push
lret
push
inc
gs
lcall
mov
and
sbb
aaa
push
jbe
sahf
in
mov
stos
and
xchg
stc
pushf
call
push
add
pusha
sub
hlt
pusha
and
or
stos
xor
je
lea
adc
pop
xor
add
bnd
xchg
out
sub
cmp
js
lcall
cwtl
sbb
movsb
mov
divb
and
dec
adc
clc
movsl
mov
cmpsl
outsl
add
cmp
ss
adc
jge
cltd
insl
add
push
dec
ljmp
push
ja
testl
cld
and
xor
fimull
aad
fistps
flds
mov
sub
cmp
inc
xchg
pop
inc
out
or
mov
std
jb
aad
hlt
rclb
scas
or
mov
dec
pop
mov
adc
sbb
test
data16
loopew
add
mov
pop
inc
and
mov
adc
dec
addl
ds
jmp
xor
pop
or
lds
ret
push
cltd
xor
mov
xlat
inc
jnp
mov
add
repz
jbe
and
mov
mov
int3
cmp
sbb
mov
jl
mov
aad
mov
xlat
daa
cmp
mov
xor
xchg
std
mov
or
ja
cmpsl
aad
cmp
and
sbb
sti
or
push
loop
enter
arpl
cmp
lds
fbld
arpl
or
adc
je
das
add
push
scas
scas
cmp
hlt
out
roll
push
sub
jbe
or
pusha
mov
xor
pop
sub
outsl
or
out
jg
jge
enter
or
sub
inc
hlt
add
call
xchg
imul
out
add
sbb
test
sbb
repnz
mov
loope
sbb
push
dec
and
ljmp
or
dec
push
test
xchg
and
or
into
adc
sub
xor
xchg
out
dec
push
repz
ss
ljmp
cmpsl
inc
mov
lea
std
xchg
mov
in
out
test
sbb
fdiv
push
mov
scas
xchg
in
sti
cmp
loopne
dec
addr16
lret
lret
test
pop
cmp
mov
xlat
cmp
mov
inc
push
test
ret
inc
movsb
push
daa
lahf
divl
test
fstpt
sti
mov
in
in
sub
repz
leave
pop
xor
hlt
inc
mov
push
jp
in
mov
jecxz
out
push
scas
daa
sbb
mov
stc
cmc
fs
pusha
fisttpl
test
add
xchg
dec
sub
mov
and
sub
subl
and
inc
std
push
loop,pt
sbb
pop
outsl
inc
sahf
adc
cwtl
lock
adc
pop
inc
dec
je
and
stos
or
mov
and
push
jl
fisttps
pop
jns
jmp
das
add
mov
outsb
popf
lcall
lcall
sahf
lea
cmp
fs
cld
in
and
fstps
sbb
divl
lock
xor
iret
pop
repnz
orb
lahf
and
aas
mov
push
out
add
lahf
add
sar
and
mov
adc
jmp
and
mov
fsts
mov
mov
xchg
add
ljmp
inc
lock
popl
add
mov
add
repz
cmp
xchg
js
add
fldcw
sbb
inc
iret
sbb
test
sub
js
daa
xchg
push
pop
mov
mov
gs
inc
in
inc
int3
out
mov
arpl
push
jle
enter
mov
imul
out
popa
lods
in
or
outsl
pop
sbb
push
jne
sahf
cmp
adc
jp
movsb
stos
ret
inc
xchg
sti
xchg
rorb
or
iret
in
out
cmp
jbe
stc
fnstsw
enter
xor
arpl
bnd
fidivl
xchg
jl
clc
push
jno
test
jg
push
pop
in
in
jnp
xchg
rolb
and
xchg
push
int3
test
sbb
jb
mov
push
mov
stos
test
repz
loope
stos
or
push
xchg
mov
push
mov
push
mov
lret
stos
repz
pop
fisubrl
push
or
sub
and
pop
xchg
mov
jae
lods
cmp
ljmp
es
fucom
add
add
cltd
and
fdivrl
sub
push
sub
das
xlat
add
cld
and
iret
inc
enter
mov
fsubr
add
data16
or
add
cltd
mov
push
adc
mov
sarl
test
repz
adc
int
mov
jl
cli
lahf
push
mov
out
jle
scas
xor
popa
push
pop
aaa
push
and
stos
mov
hlt
adc
add
dec
sti
sub
and
in
mov
jecxz
mov
sub
fidivrl
arpl
pop
mov
mov
xor
lock
jl
dec
adc
fcoml
das
cld
aas
inc
or
rcll
inc
fisttps
insb
push
jg
dec
cmp
fsubs
out
sarl
xchg
loope
lret
mov
sbb
dec
push
js
repnz
and
popl
lds
push
mov
or
sbb
iret
pop
push
fdivrl
cmpsb
cmp
lods
repz
sbb
in
popa
mulb
add
cmpsl
fnstenv
sarl
icebp
pop
mov
mov
lock
cmc
rcrb
adc
stos
scas
fstps
xchg
push
push
imul
jmp
in
movsb
xor
push
xor
sbb
and
add
je
outsl
popf
loopne
inc
out
mov
arpl
fs
bound
cltd
movsb
xor
ret
sbb
pop
xor
inc
sub
mov
and
or
sahf
gs
pop
jecxz
push
dec
xchg
aad
jb
jne
addr16
inc
js
pop
add
inc
mov
ja
dec
sub
or
std
ret
inc
jo
std
jge
mov
xor
mov
jmp
repnz
orl
addl
inc
dec
sti
mov
inc
jne
sbb
and
mov
lea
xor
jns
or
push
into
lret
mov
inc
sbb
enter
push
xchg
mov
fldcw
mov
jecxz
dec
inc
test
subb
cs
inc
pop
inc
lock
jg
mov
sbb
xor
fdivrs
popf
sbb
testl
jae
inc
mov
push
mov
ljmp
push
mov
mov
inc
int
shll
sub
cmc
mov
sbb
push
sub
movsl
std
cmc
jnp
pop
mov
dec
repnz
add
dec
push
aam
movsl
in
add
mov
sbb
sub
leave
or
ss
das
in
ljmp
dec
pop
xlat
or
sbb
mov
push
in
mov
or
lods
pop
push
and
jb
iret
dec
jg
ret
ret
jnp
mov
sub
enter
aam
mov
hlt
mov
or
pop
xchg
mov
and
push
xchg
dec
insl
adc
movsb
inc
and
jecxz
inc
into
or
stos
lret
imulb
dec
push
and
dec
xorl
pop
js
or
jge
mov
in
insl
jnp
ror
pushl
sahf
lds
jbe
sbb
mov
loope
lods
cmp
jns
or
xchg
gs
sti
sarb
loopne
imul
mov
insb
sahf
mov
popa
mov
stos
ljmp
sbb
add
push
sub
mov
sbb
mov
adc
pop
inc
add
adc
test
sahf
lss
stc
jmp
inc
bound
mov
sub
cmp
ljmp
popa
add
addr16
mov
int3
subl
and
mov
int
mov
push
insb
cmp
xor
xchg
xor
cmp
cmp
out
sar
xchg
dec
stc
lea
mov
sbb
xor
shrb
or
ficomps
scas
jne
out
or
mov
jg
test
cs
fists
inc
popa
push
mov
popl
dec
adc
sbb
xor
aaa
mov
pop
fs
stc
inc
jmp
stc
push
sbb
sti
fwait
xchg
inc
adc
xchg
dec
sub
in
loop
or
fidivl
scas
inc
clc
scas
mov
cld
mov
orb
sbb
mov
dec
mov
lods
outsb
int
leave
insl
jns
rolb
popf
xchg
jmp
repz
lahf
ja
push
leave
sub
xchg
popa
xchg
in
mov
inc
adc
ds
rolb
call
sbb
push
cld
pop
pop
iret
arpl
std
ffreep
into
adc
popf
add
pop
pop
and
jae
pusha
inc
leave
out
push
cmpsl
stc
test
leave
jns
bound
ss
dec
or
cmp
xchg
pusha
call
push
mov
aaa
movb
mov
mov
sti
cs
aas
or
aas
inc
sbb
popa
fwait
mov
int3
leave
stos
sub
insb
cmp
add
cmc
popa
dec
std
and
or
cwtl
lret
jmp
mov
push
fdivrs
dec
js
inc
loope
imul
xchg
cmp
mov
or
mov
lds
aaa
lahf
cs
das
dec
rcrl
or
popf
xchg
jae
scas
in
loopne
or
les
out
push
stos
cmp
pop
push
int3
sbb
loope
mov
out
rcrl
fsts
mov
adc
push
lods
aam
sbb
sbb
cmp
add
fdivl
call
insb
fsts
sarb
jno
orl
in
and
fistpl
mov
loope
inc
aas
xchg
aad
jge
push
cmp
sub
push
cs
push
loope
or
cmp
pop
inc
in
pop
inc
sarb
dec
daa
testl
and
jmp
add
rorl
testb
xchg
and
jl
popf
leave
xchg
dec
clc
imul
mov
icebp
jg
cli
sbb
dec
or
rclb
aaa
sar
clc
xor
std
cld
mov
inc
adc
iret
jae
xorb
movsb
xchg
inc
adc
pop
ret
frstor
pop
nop
sbb
sbb
and
pop
fidivs
push
roll
out
test
xor
xchg
mov
jg
arpl
cmp
sbb
js
push
dec
imul
jmp
and
sbb
jmp
je
in
xor
popf
push
sbb
xor
xor
dec
push
enter
or
cli
ret
insb
mov
mov
dec
push
dec
mov
lods
xor
fstp
enter
dec
outsl
mov
xor
cmp
int3
leave
sub
lahf
mov
xor
ja
in
test
and
sbb
and
or
pop
addl
xor
inc
sbb
sbb
and
dec
mov
iret
push
call
mov
leave
iret
jb
ja,pn
jo
add
and
cmp
mov
pop
addr16
repz
sbb
or
or
xchg
sub
sub
mov
and
add
mov
rcrl
adc
and
xor
test
stc
shrl
lcall
push
rolb
pop
cmp
xchg
xor
or
aas
cmc
scas
lock
cld
add
dec
stc
dec
jg
mov
or
add
sub
mov
int3
data16
add
in
mov
fiadds
pop
cmp
test
xor
pop
adc
pop
out
jecxz
adc
stc
std
inc
out
testl
or
xor
inc
mov
imull
out
mov
aad
daa
es
cmp
jno
jecxz
sbb
jb
cwtl
push
das
jbe
pop
mov
pop
ja
imul
ss
lret
testb
ss
pop
push
sbb
pop
or
insl
in
nop
int3
aas
push
js
outsl
push
xchg
ret
cmp
mov
xchg
adc
js
cmp
lods
inc
sbb
jecxz
adc
iret
ss
gs
xchg
cmp
pop
sub
ret
sub
js
stos
push
shl
cmp
aaa
addr16
adc
popf
push
xchg
aas
int3
jo
pop
ds
mov
jae
jge
push
mov
and
jge
lds
repz
add
mov
xchg
push
fcmovb
push
mov
pop
out
mov
pop
push
pop
inc
jne
and
mov
in
pop
cmpsb
or
xchg
or
push
pop
lret
in
mov
shlb
sbb
iret
daa
jg
ljmp
sbb
roll
sub
je
fimull
cmpsl
xchg
and
movsb
jp
lret
iret
clc
iret
movsl
adc
dec
aas
xlat
inc
dec
jecxz
sahf
add
and
out
cmp
aas
xor
sub
jae
or
cmp
inc
shl
pusha
mov
add
inc
loop
int3
imul
rcrl
andl
icebp
int
jnp
cmpsl
push
mov
adc
xchg
fildll
mov
mov
add
dec
jo
mov
pop
mov
dec
xor
loopne
push
sub
cmp
ljmp
or
daa
cmpsl
xchg
mov
pop
movsb
push
and
cs
lea
or
dec
inc
xchg
scas
fstp
xchg
rcrl
or
in
insl
mov
in
in
hlt
sbb
xchg
mov
mov
fildl
cmp
faddl
inc
mov
sahf
pop
push
stc
xchg
lea
pop
jnp
shrb
idiv
xchg
add
ss
pushf
addb
mov
push
insb
dec
imul
lret
pop
data16
and
out
push
inc
in
inc
jns
pop
xor
cld
aas
icebp
push
aas
mov
inc
fidivs
sti
jae
or
cmp
cmp
add
pushf
stc
or
fwait
push
lret
mov
and
push
adc
arpl
or
xchg
data16
pop
dec
outsb
cli
outsl
leave
clc
or
and
clc
hlt
icebp
lods
rclb
fimuls
adc
cmc
iret
lret
pushf
pop
and
pop
push
add
lret
push
xchg
nop
dec
cld
push
loopne
gs
xor
jne
dec
jnp
xchg
jle
jbe
outsb
mov
xchg
popf
and
xchg
pop
mov
test
outsb
ret
xchg
outsb
cmc
jp
push
sub
repz
insl
or
repnz
orb
jb
rorl
push
js
popf
mov
sub
push
cltd
inc
outsl
mov
xor
dec
std
xor
loopne
pop
rolb
adc
add
add
rolb
enter
xchg
ja
aas
mov
jmp
ret
jno
cmpsb
or
xorl
sbb
rcrl
sbb
mov
xor
dec
mov
mov
and
jnp
add
xchg
and
mov
pop
bound
insb
cmp
add
movsl
dec
lret
add
push
in
lods
movsl
fs
xchg
xchg
dec
adc
notl
scas
in
cmp
cmpsl
hlt
cli
adc
xchg
data16
cld
rcr
xor
out
cmp
push
or
pushf
xchg
xchg
jnp
outsl
jecxz
mov
xor
pop
lret
pop
aad
out
dec
lcall
fnstsw
outsb
dec
rcrl
fbstp
sbb
sub
adc
cmpsb
xchg
jp
lret
and
jbe
lret
cltd
loopne
cmp
dec
sub
mov
adc
lret
pushf
das
cmpl
pop
repnz
or
pop
or
mov
cli
loop
out
mov
leave
call
xor
adc
cmp
and
subl
ja,pt
mov
lcall
iret
shlb
jmp
repz
les
xchg
xchg
lret
mov
fwait
cmp
push
push
fidivs
popa
adc
ja
xor
adc
add
cs
call
sbb
jge
into
mov
rolb
in
js
idivb
xlat
test
cmc
cltd
aaa
dec
clc
adc
jl
sub
out
adc
mov
mov
cs
leave
rep
insb
cltd
xchg
xor
test
mov
xorl
mov
movsb
fwait
adc
mov
xor
imul
xchg
sub
repnz
add
inc
lock
xlat
call
cmpsb
mov
push
pop
in
mov
xor
out
sbb
das
bound
xchg
mov
mov
std
mov
dec
pop
xchg
xor
mov
xchg
int
sbb
jl
xlat
cmp
and
inc
vunpcklps
movsb
lds
out
dec
ficomps
pop
dec
mov
or
add
in
xor
mov
idivl
add
fs
ja
dec
scas
cld
push
jge,pn
popl
test
repnz
dec
out
into
push
mov
fcompl
ret
ljmp
sbb
xchg
fdivrl
iret
dec
sbb
scas
fmull
lret
add
movsb
negl
pop
arpl
clc
loopne
mov
outsb
ret
mov
cmp
popa
sub
xchg
dec
mov
into
and
cwtl
leave
into
mov
cmp
sub
addr16
cs
mov
cwtl
xchg
insl
ret
dec
hlt
sti
push
lret
ja
adc
test
stos
adc
stc
and
jno
imul
fiadds
mov
movb
sub
pop
jno
inc
call
mov
dec
push
xchg
cmc
push
and
pop
mov
cmp
in
inc
add
std
pop
adc
push
mov
ljmp
xchg
insl
popf
sub
adc
sub
mov
xorb
xor
loope
push
jne
pop
aad
loop
js
stos
inc
inc
pop
movsl
or
inc
inc
leave
inc
clc
data16
loop
das
arpl
shrl
scas
sub
loopne
lock
adc
test
xchg
push
push
sbb
sbb
jmp
add
insl
pop
mov
test
xor
repnz
aaa
adc
outsb
cs
xchg
mov
cs
mov
insb
xchg
aad
pop
pop
xorl
push
cmpb
push
loop
inc
mov
push
xchg
bound
pop
scas
jbe
jmp
add
cmc
inc
xor
stos
pop
xchg
cmp
cld
popa
dec
ud1
sbb
sbbl
jle
cmp
add
aad
sub
lret
je
arpl
cmp
jno
dec
inc
mov
divb
mov
inc
xchg
xor
jne
sbb
mov
pop
ja
orl
jp
dec
adc
popf
mov
lret
lret
ja
cmpsb
and
scas
pushf
arpl
in
ss
lock
insl
jae
sbb
fsubl
fidivrl
in
push
adc
or
mov
es
mov
and
and
sub
adc
sbb
sarl
and
mov
or
outsb
mov
mov
js
mov
divb
push
push
cld
mov
xor
jle
pop
cmpsb
lea
cmp
je
xor
insl
leave
es
in
adc
fs
xchg
add
flds
sbb
xchg
push
cmp
aad
in
push
cmp
in
sub
pop
je
cli
lock
insl
lret
out
sti
sub
xor
out
ret
sub
out
cmp
mov
pop
ds
rclb
sbb
scas
leave
xor
and
dec
test
leave
call
cmpxchg
stc
mov
and
shll
lds
shll
xchg
mov
out
addr16
test
ficoms
test
adc
mov
and
pop
xor
adc
cmpsl
dec
mov
into
push
inc
cmc
ficoms
jo
aas
cs
push
sahf
ss
mov
push
sub
idivb
pop
mov
loopne
fcom
push
adc
inc
and
int3
xchg
test
xchg
sti
jl
add
xor
mov
or
cmpsl
sbb
and
add
fstl
lea
repz
sbb
cld
dec
or
push
movl
out
loope
sbb
test
jle
cs
xchg
aad
adc
enter
cmp
rcr
jle
push
sub
xchg
mov
jle
add
or
ret
pop
rclb
loop
xchg
cmpl
out
aam
cmpsb
jp
push
jne
sti
and
or
xlat
mov
jle
xchg
sbb
imul
mov
fnstcw
mov
dec
call
int3
inc
rol
mov
and
dec
out
pop
jp
mov
out
jl
in
imul
cli
ret
add
push
push
call
mov
xchg
daa
ljmp
inc
dec
push
lret
pop
inc
cltd
mov
sub
pop
push
bound
rclb
insb
gs
pop
test
clc
xor
pop
and
outsl
test
jmp
mov
mov
mov
std
adc
ds
add
push
jl
scas
mov
std
mov
fstp
cmp
jnp
adc
pop
bound
mov
mov
mov
and
and
pop
dec
mov
lcall
xor
jmp
int
mov
jo
or
inc
xor
cltd
mov
push
and
sti
jmp
sub
rcrb
rcll
mov
sub
das
add
push
inc
mov
add
sbb
outsb
adc
lcall
stc
and
aam
or
lcall
lock
mov
xchg
push
sbb
movsb
push
sub
popf
cmpsl
sbb
push
icebp
das
mov
call
popa
adc
cld
cmp
mov
cmp
gs
gs
xor
push
xor
mov
xor
out
int3
push
fdivrs
add
push
adc
fsubrl
loop
inc
sub
repnz
jmp
es
dec
push
shrb
inc
adc
xchg
test
bound
adc
cld
mov
add
dec
das
aas
pop
add
scas
test
test
ret
mov
sbb
addr16
or
mov
stos
push
or
xor
int3
arpl
pop
bound
mov
pusha
cwtl
enter
movsb
cmp
xor
cld
push
repnz
stc
lea
fisubrl
add
add
fstpl
cs
rolb
shll
lret
inc
dec
pop
sbb
or
mov
dec
call
pop
shll
addr16
aad
aad
aas
or
push
in
pop
jecxz
mov
inc
in
sti
cltd
inc
ret
shr
or
push
test
outsb
push
and
push
or
and
mov
mov
mov
sbb
dec
and
push
insb
test
pushf
add
dec
mov
js
jecxz
jnp
aad
jmp
stos
aam
ljmp
inc
and
add
xor
sbb
gs
sub
scas
cmp
mov
gs
ljmp
mov
sbb
cmp
das
and
xchg
sbb
lock
jbe
mov
jp
xor
mov
add
aas
jo
int3
xor
lods
jns
xor
hlt
xchg
into
out
not
adc
fnstenv
mov
shr
ret
int
cmp
inc
testl
rcrl
adc
pop
jo
dec
out
loop
and
mov
mov
mov
mov
cmp
mov
jo
addb
adc
mov
loope
push
jo
rclb
out
movsb
std
mov
add
and
inc
xor
shll
mov
mov
mov
mov
call
icebp
xor
inc
pop
sub
push
ret
xor
out
enter
mov
adc
je
iret
or
jge
xchg
out
xor
xor
test
ljmp
mov
push
mov
cmp
js
ror
std
fnsave
jbe
mov
nop
inc
std
sub
test
cld
in
adc
pushf
pop
jecxz
mov
jno
out
mov
sbb
rcr
dec
add
nop
out
int3
adc
dec
pop
mov
mov
adc
cltd
jmp
in
sbb
cmpsl
pop
imull
cli
xchg
aam
jo
insb
lea
lret
add
jp
dec
mov
dec
enter
lcall
cmp
shrl
push
rol
aad
idivb
ja
add
out
adc
push
repz
lret
in
mov
pop
out
push
cmp
push
and
and
call
sbb
inc
dec
inc
or
int3
insl
mov
fwait
push
int
call
test
mov
aas
inc
mov
push
push
in
push
mov
lret
adc
jb
pop
cmp
push
lret
loopne
add
adc
add
sbb
cmpsb
lods
mov
ret
popf
popf
repz
push
in
mov
dec
fistpll
sub
mov
insb
mov
or
pop
add
mov
cmp
popf
add
jge
sbb
movb
adc
fidivs
inc
pusha
es
popa
std
pop
mov
out
out
xchg
test
addr16
pop
dec
lods
pop
and
sbb
push
lea
xor
cmp
in
xchg
ss
cmp
pusha
pop
or
nop
mov
xor
xor
pop
sbb
mov
and
push
dec
push
mov
add
orl
repz
lock
sbb
sbb
stos
test
lahf
xor
jo
add
test
test
stos
jmp
test
enter
push
fwait
mov
cli
and
mov
mov
and
or
inc
sbb
and
hlt
or
in
mov
insb
mov
cmp
sbb
test
xor
pop
jg
stos
icebp
push
xor
out
mov
insl
shrb
jmp
mov
pusha
jg
mov
inc
inc
jbe
adc
fnstsw
inc
iret
pushf
sub
adc
rcrl
orl
xchg
popa
stc
and
xlat
sub
mov
faddl
push
nop
adc
xor
and
insb
jb
jmp
mov
inc
sub
stos
lds
jle
push
or
inc
loop
push
mov
mov
ja
int3
lods
cmp
enter
out
icebp
and
mov
mov
das
int
addr16
je
fnstcw
pushf
xchg
pop
mov
xchg
orl
fdivrl
push
insl
jecxz
repz
jge
mov
insl
pop
outsl
xchg
in
das
in
fwait
jo
imulb
add
inc
ja
dec
call
add
pop
ja
data16
jmp
inc
mov
push
inc
lds
lret
lret
mulb
repnz
sti
scas
sbb
cmpsl
fcomi
or
mov
adc
faddl
xor
add
ljmp
in
xchg
jne
sub
cmp
mov
and
das
mov
mov
jmp
add
test
pop
sub
adc
pop
test
decl
rcl
push
comiss
or
mov
ret
fucomp
cmp
in
stos
push
mov
and
negl
sbb
jbe
jnp
mov
cltd
out
xchg
mov
mov
leave
popa
mov
fildll
sub
mov
es
aad
sarb
sbbb
jb
push
test
mov
jle
mov
mov
sub
fcompl
fs
jle
fxch
push
and
sbb
push
fbld
dec
pop
mov
int3
daa
mov
divb
or
lods
jl
jg
aas
mov
lods
ljmp
pusha
adc
stos
or
mov
push
sti
not
arpl
mov
jne
scas
imull
aaa
xor
mov
push
push
pop
stos
pushf
je
call
sub
add
cmp
and
int3
sbb
dec
xchg
dec
inc
push
dec
sub
jmp
sbb
dec
jno
xchg
decl
inc
xchg
dec
mov
push
insb
xor
inc
xchg
arpl
xlat
arpl
cmp
cmp
and
jb
jl
stos
push
lea
movsl
or
cmp
in
mov
stc
adc
jmp
dec
rclb
jle
cld
aad
push
push
xor
and
xchg
cmp
lods
loop
jo
icebp
pop
jl
rolb
outsb
or
sbbb
scas
mov
in
mov
test
push
bound
mov
in
cmp
jns
pop
add
iret
jle
adc
nop
lds
adc
sbb
ja
push
movsb
sub
mov
jmp
jnp
push
mov
imull
xchg
cld
sbb
mov
jb
inc
inc
and
mov
imul
jmp
xchg
sbb
or
cmpsb
fdivr
adc
test
mov
out
aad
fcoms
cmpsl
pop
les
inc
xchg
sbb
std
mov
mov
notb
mov
filds
jae
and
xchg
not
cmpsl
jae
sbb
push
out
cmovle
pop
enter
icebp
jge
xor
pusha
cmp
aaa
xor
dec
push
push
imul
outsl
je
push
fwait
out
je
mov
repnz
ficompl
stos
punpckldq
mov
ljmp
jp
cltd
or
lahf
cmp
xor
mov
lods
mov
jg
fxch
inc
stos
ficompl
and
cmp
call
cmp
ud1
dec
popf
dec
mov
and
call
mov
pop
xlat
out
pop
fiadds
insb
ljmp
mov
pop
imul
fildll
aaa
jg
insl
mov
inc
pop
xchg
jg
insb
out
test
xchg
cmpsb
and
mov
insb
rcrl
mov
arpl
dec
enter
rcrb
jmp
mov
mov
popa
pop
xchg
add
mov
cwtl
pop
das
fdivrl
int3
ss
les
push
push
adc
fdivrs
inc
xchg
dec
insb
or
in
cmpsb
push
rcll
sbb
xor
add
mov
ret
repnz
fsubs
adc
dec
mov
stos
jbe
and
adc
repnz
mov
add
sti
pop
shrl
aad
xor
jnp
cwtl
adc
push
imul
xor
scas
mov
xchg
xchg
lcall
push
loop
pop
aad
insl
test
pop
mov
inc
mov
movsb
add
lds
arpl
mov
loop
mov
adc
and
push
pop
mov
and
mov
in
ljmp
fnstenv
mov
loope
sti
cs
rcrl
mov
dec
sahf
jae
mov
out
cld
lret
mov
mov
stc
mov
or
popa
gs
mov
sub
js
ficoml
xor
cmp
push
sahf
out
pop
cmp
shll
mov
sbb
lret
imul
popf
daa
jns
add
mov
bound
or
jecxz
jae
lock
clc
add
ret
test
imul
decl
out
insl
scas
sbb
and
cmpb
ret
lods
idiv
out
mov
pop
push
out
imul
pop
scas
add
subb
mov
leave
mov
lock
pop
pop
clc
xchg
jb
sub
xchg
inc
rol
lahf
xchg
mov
int
add
adc
clc
push
cltd
xchg
xchg
repnz
adc
out
inc
cmp
fxch
fisubrs
bound
xchg
jb
rclb
inc
movsl
loop
jns
lods
loop
sub
jl
ret
add
cli
mov
shl
pushf
xchg
pop
out
lea
xchg
add
mov
sarl
movsl
int3
sbb
test
punpckhdq
outsl
pop
sbb
cmp
inc
insl
cli
mov
stos
les
mov
cltd
dec
leave
inc
shll
cld
out
outsl
fucomi
mov
sahf
sarb
mov
jae
lcall
js
dec
mov
sub
xchg
lds
mov
fcoms
sahf
call
lea
cltd
test
jl
push
adc
into
andb
cmp
lahf
adc
repnz
xchg
sar
popf
outsl
outsb
inc
lret
and
mov
ds
sbb
mov
push
and
or
cmp
imul
push
cmpl
xlat
outsb
sti
push
inc
mov
cmp
std
sahf
xor
xor
je
add
imul
je
hlt
sbb
add
or
data16
stos
xchg
mov
push
out
mov
mov
jp
xchg
push
xchg
pop
inc
imul
jb
mov
cmpl
fldenv
lcall
out
mov
jp
bt
push
mov
jb
xchg
and
mov
daa
cmp
sahf
xchg
shl
cmc
inc
shl
inc
adc
iret
cmp
stos
mov
mov
cmp
in
sbbl
movsl
rcr
xchg
test
pop
icebp
arpl
cmpsb
int
outsl
add
fptan
xor
sub
movsb
sbb
mov
cmp
jae
int3
push
loop
dec
je
je
lock
test
push
call
insl
das
add
sub
or
cmp
lret
jle
sbb
or
or
sbb
xchg
repz
or
sahf
add
hlt
gs
sbb
sbb
and
notl
mov
gs
xorl
mov
outsb
or
mov
scas
sbb
jle
cmp
or
imul
cmpl
ret
cmpsb
rcl
pop
daa
notb
mov
cmp
loopne
inc
sbb
dec
dec
andb
mov
cs
ret
int
mov
adc
negl
test
jg
fdiv
pop
scas
lret
ljmp
loope
pop
cwtl
cmpsb
shl
aam
in
pushf
push
xlat
sub
sbb
inc
shr
jnp
adcl
maxps
inc
inc
lods
divb
je
sbb
shlb
aaa
jae
loop
je
mov
mov
testl
cs
xorl
mov
and
in
sahf
movsl
and
cmc
repz
xchg
push
mov
cmpsl
movsl
enter
sti
outsb
xor
mov
jne
test
jmp
and
push
imul
retw
inc
pop
xchg
les
adc
sahf
mov
orl
scas
jo
pop
mov
div
sbb
push
inc
fidivrl
push
jns
inc
jo
fsubl
xor
pop
mov
mov
outsb
xchg
int
fisubs
stos
mov
sub
pop
dec
daa
dec
mov
push
enter
inc
fwait
push
dec
hlt
xchg
adc
lds
repz
or
mov
fisubrl
mov
sub
mov
sar
lcall
mov
hlt
sbb
xchg
int3
test
sahf
scas
ljmp
pop
mov
xchg
hlt
fucomi
inc
ret
ret
pop
pop
xchg
and
inc
adc
sbb
loop
cmp
mov
mov
shlb
pop
xor
fisubl
ret
test
dec
adc
loop
fistpl
and
mov
inc
lods
inc
bound
out
dec
pop
stos
repnz
fdivs
adc
loope
test
cmpl
dec
mov
shrb
popl
lahf
pop
hlt
js
ret
aad
add
std
and
lcall
push
push
push
jo
lods
cmp
jbe
xchg
add
lret
es
insl
int
push
inc
xchg
push
cmp
inc
stc
inc
rcrb
aam
loope
enter
mov
sub
mov
sbb
imul
sbb
in
inc
loopne
mov
jne
inc
mov
ret
add
fsubrl
stos
les
push
les
je
xcrypt-cbc
cmpsl
push
jge
adc
mov
fsubl
rcrb
sub
cld
or
es
jle
or
push
idivl
out
sbb
outsl
dec
dec
pusha
pop
jne
rcrb
push
imul
btl
sahf
das
mov
add
push
mov
sub
repnz
outsl
and
cmpb
jecxz
jmp
jmp
cmp
pop
mov
pop
add
xlat
out
inc
xchg
pusha
pop
jnp
adc
pop
or
sub
push
mulb
jmp
jb
test
ja
adc
das
rclb
outsl
or
pop
popf
das
sub
lods
mov
xor
inc
insl
xchg
test
mov
adc
popf
cmp
ficoml
pop
andl
push
or
adc
sbb
or
testl
mov
daa
int
dec
cmpsl
lahf
pop
mov
out
xchg
pop
push
mov
cmp
shl
loopne
mov
jo
mov
xchg
xchg
dec
stc
or
int
sbb
or
push
aad
jae
rol
out
lret
push
mov
enter
sub
in
sub
out
inc
clc
ret
xchg
lods
out
cld
sub
sub
dec
inc
xchg
push
push
adc
lods
inc
orb
ja
in
ds
orb
orb
in
pushf
pop
push
repnz
bound
sub
mov
mov
movsl
arpl
jle
lret
mov
adc
xchg
aam
ljmp
cmp
imul
jp
cmp
adc
test
stos
add
xorb
add
sub
mov
jp
jmp
mov
and
negb
sub
out
aad
add
dec
idivb
lods
shrb
mov
les
pop
mov
mov
add
push
test
jne
push
jae
fdiv
les
test
div
sbb
push
sub
add
popa
jns
mov
lret
mov
push
xor
mov
dec
or
out
cld
mov
and
ds
addl
xor
aas
add
add
xchg
mov
imul
mov
lds
push
mov
imul
aaa
loop
sub
mov
sbb
emms
sbb
dec
repz
jno
cli
bound
ror
xor
inc
jno
pop
and
push
adc
popf
aam
xor
sbb
jle
add
popf
aam
sbb
lret
addb
sub
call
repz
dec
lock
shrb
mov
in
loope
or
shll
add
sub
sti
mov
jg
xchg
mov
das
mov
cs
aas
fcomps
mov
in
pushf
lret
push
out
sti
mov
stc
addb
cmpsl
or
sbb
addr16
sub
add
cmc
adc
fs
push
mov
cmp
sbb
lret
popa
sub
mov
push
mov
xchg
jmp
loope
add
jo
je
insl
mov
outsb
sub
push
push
lahf
mov
scas
inc
lahf
arpl
jns
nop
das
mov
dec
jge
fisttpl
or
jp
or
pop
pop
and
push
pusha
xchg
lcall
in
sub
es
xor
jnp
rclb
push
push
mov
in
inc
movsb
fnstcw
cmp
cmpsl
lahf
cmp
add
inc
push
pop
inc
fbstp
in
loop
jno
cmp
xchg
sbb
cmc
out
sbb
mov
jb
insl
in
movsb
and
and
or
out
mov
xor
jg
xchg
sub
aad
scas
dec
stos
push
push
in
popf
fisttps
mov
clc
adcb
out
cmpsl
cmp
cwtl
into
cwtl
cmp
subb
push
shr
scas
dec
mov
call
lods
mov
sbb
inc
rclb
and
and
xchg
test
lods
dec
fidivrs
push
mov
jl
out
adcl
jae
mov
inc
mov
inc
jb
sahf
stos
popa
fidivrs
jmp
out
sete
inc
icebp
xor
or
sbb
sbb
ss
mov
mov
cwtl
enter
nop
pop
dec
pop
xor
xor
pop
jle
mov
mov
push
ret
lea
adc
cli
xchg
int
sarl
pushf
js
fnsave
mov
das
jne
out
jmp
into
fdivl
pop
dec
outsl
negb
adcl
push
ss
sbb
mov
xor
mov
sarb
xchg
rolb
daa
arpl
dec
daa
sub
inc
lret
shrl
sahf
std
cmpsl
es
cmp
out
and
xor
jo
push
xchg
sbb
rcll
mov
cmpsb
test
adcb
shrb
add
jae
iret
pop
in
iret
fwait
adc
lahf
xlat
jp
std
xchg
into
xor
icebp
insl
jge
xor
jl
pop
sarl
xchg
push
dec
push
mov
mov
cmp
and
nop
jnp
imul
push
sub
mov
movsl
popf
insl
cmp
repnz
pop
add
add
jns
dec
mov
cld
popa
sub
pop
sti
popf
inc
out
fs
into
adc
add
or
clc
mov
add
ret
cmp
rorb
push
push
inc
dec
flds
sbb
in
gs
test
fdivl
lea
xor
jbe
loop
insl
repz
lods
and
fmull
ret
pop
inc
out
mov
shr
rcrb
movl
repnz
ss
rcrb
mov
sub
push
sub
lock
and
sarb
and
mov
outsl
dec
mov
addr16
mov
mov
clc
ds
or
ljmp
sub
and
cwtl
or
scas
jns
das
fs
jl
inc
xlat
ffree
push
fs
sub
insl
push
mov
xor
push
mov
pop
dec
fbld
and
sahf
sub
repz
cmpb
aad
fmull
lods
pop
pop
mov
iret
movsb
ss
sub
pop
or
adc
jae
nop
mov
and
fsubr
sbb
in
fadds
push
adc
shr
pop
pop
jns
bnd
pop
mov
sbb
inc
test
add
scas
cmp
sub
mov
or
flds
clc
aad
mov
jg
sbb
ret
lock
fimuls
in
jns
mov
scas
pushf
add
sbb
cli
xor
in
push
pop
jns
push
dec
inc
mov
stos
hlt
in
cmp
stos
cld
mov
divb
aas
pop
xor
imul
inc
fistpll
inc
mov
out
cltd
gs
push
xor
filds
out
mov
out
test
es
adcl
shll
pop
push
sub
lods
movsl
jecxz
mov
aaa
stos
xor
jle
sbb
xor
pop
sub
imul
repnz
loope
or
dec
mov
les
popa
sbb
dec
dec
mov
nop
in
loope
or
mov
or
lds
mov
cmp
push
pop
adc
imul
lcall
jecxz
fisttpl
roll
loope
mov
pop
pop
movsl
ds
ljmp
mov
xor
out
movsb
shlb
mov
sub
mov
clc
sti
shl
dec
mov
arpl
rcr
push
notl
and
in
jbe
ret
dec
or
dec
pop
mov
and
add
cmp
jne
sub
popf
std
pop
orl
gs
push
pop
lahf
pop
dec
jge
cmp
mov
push
mov
aaa
adc
xor
adc
and
aas
and
adc
cwtl
lret
push
xchg
divb
idivb
jo
sub
cmpsb
mov
or
addr16
jecxz
imul
sti
movsb
sbb
pop
and
and
mov
movsb
in
mov
jg
pop
jg
pop
in
iret
or
or
inc
pop
cli
xchg
lcall
push
jle
pop
sbb
inc
fnsave
addb
mov
aad
mov
or
adc
imul
insb
jne
ds
cmp
mov
loopne
jb
or
faddl
jge
maskmovq
negl
mov
sub
mov
lods
clc
adc
or
mov
push
loop
pop
inc
into
and
push
mov
jmp
scas
outsl
hlt
or
stos
ret
pop
cltd
inc
outsb
insb
mov
mov
xorl
pusha
cmpsl
lret
pop
insb
lret
push
add
in
mov
filds
fidivs
ret
js
jnp
divb
and
stc
xchg
xchg
mov
imul
ret
mov
xlat
mov
jmp
pop
movsb
popf
mov
push
xor
jno,pt
scas
in
mov
pop
clc
loope
mov
loop
in
jns
or
gs
shl
cmp
jle
cmp
lods
mov
cmp
sub
dec
sub
ficompl
hlt
cmp
jp
addb
push
outsl
mov
mov
mov
sub
call
fwait
cli
popf
mov
jno
jno
test
fdivrl
jne
fwait
mov
sub
dec
mov
xchg
scas
lcall
in
shlb
sub
inc
sbb
jle
jbe
outsl
cmpsb
xlat
xor
lods
lret
iret
test
ds
std
xchg
cmp
sub
aam
lds
hlt
fs
mov
clc
xor
push
gs
sub
or
lock
cmp
popa
imul
add
aaa
and
pop
pop
push
sub
neg
sub
mov
xlat
into
js
adc
notl
imul
lods
icebp
sbb
andb
dec
fdivs
push
mov
bnd
fisubs
fs
pop
dec
xchg
in
ret
insl
std
sub
rolb
call
xor
in
lea
fwait
mov
ret
xchg
dec
push
movsb
test
ljmp
push
lods
jnp
pop
jo
fcoml
or
arpl
pop
xchg
popa
mov
mov
lahf
xorl
outsl
sub
inc
inc
stos
mov
mov
rorl
or
sbb
add
orl
cmp
fcompl
loopne
dec
cmp
popa
xchg
enter
jnp
cwtl
jno
xor
xlat
sub
scas
bound
movsl
add
lret
dec
andl
lea
xchg
popa
push
gs
sbb
mov
out
popf
mov
push
and
and
jl
xor
int
jecxz
popf
push
fsubrs
in
in
push
outsl
outsl
ljmp
pop
in
mov
or
dec
mov
shll
jp
stos
pusha
push
aaa
mov
mulb
add
and
gs
adc
pop
and
out
inc
scas
cwtl
xchg
insl
aas
test
lcall
and
repz
xchg
and
mov
sbb
push
lcall
cmovno
shll
xor
sti
mov
insl
dec
add
sti
xchg
xor
mov
mov
cmp
push
add
les
clc
enter
lds
ret
add
sbb
mov
cli
mov
jb
in
ret
stos
xchg
inc
and
adc
mov
loop
xchg
out
pop
daa
popa
and
mov
pop
cmpsl
shr
ss
out
or
out
ret
sub
lret
cmp
or
sbb
ss
sbb
ss
iret
dec
jnp
stc
imul
or
add
and
test
push
push
pusha
outsb
mov
popf
dec
pop
cmpsb
xchg
in
fdiv
mov
or
outsb
mov
incb
or
fs
sbbl
mov
sbb
add
adc
iret
pop
aam
jb
sahf
mov
xchg
popf
in
shrl
jl
scas
mov
in
aaa
outsb
sub
mov
in
out
fldl2t
aam
mov
imul
fcmovnb
xor
jge
out
adc
outsl
jl
push
pop
movsb
dec
scas
mov
sub
push
outsl
in
jnp
sbb
jb
aaa
adcb
das
cld
dec
out
leave
daa
xor
mov
ret
adc
sbb
inc
mov
mov
sbb
lcall
xor
es
push
adc
add
bound
repnz
cmc
pop
addb
pop
push
aam
adc
fmul
inc
adc
sbb
repz
mov
das
testb
cmp
xchg
aas
adc
mov
lds
lds
jnp
enter
sub
fsubr
cwtl
clc
cmpsl
lret
pop
call
test
int
cltd
ds
mov
cmp
jp
stos
fs
inc
jne
fldl
push
arpl
xchg
xchg
into
or
or
mov
test
icebp
or
adc
test
dec
pop
or
cmp
sbb
xchg
lea
lock
inc
xor
adc
aas
pop
cwtl
aaa
or
popa
push
push
or
adc
in
mov
push
es
xchg
dec
dec
orb
or
push
in
cmp
dec
mov
xchg
lds
lahf
sbb
push
mov
pop
cmp
fidivrs
xor
dec
xchg
pop
aad
sti
sub
addb
orl
test
xorb
inc
jmp
adc
mov
cmp
cld
test
icebp
dec
je
sub
mov
pop
lock
cltd
test
jmp
je
movsb
out
sub
fsts
loopne
lret
add
movb
push
ss
adc
mov
sbb
mov
mov
mov
or
and
push
dec
mov
repz
jb
or
int3
out
inc
cld
mov
sti
repnz
test
aaa
cs
clc
mov
and
cmp
add
sbb
jno
lods
inc
fdivrl
les
jp
outsl
xor
xchg
push
ret
fldl
inc
or
ror
jb
outsb
cli
mov
pop
mov
xor
jle
btc
shll
sub
add
pushf
mov
jle
outsl
mov
mov
imul
push
add
dec
stc
adc
pop
es
xchg
push
cmc
adc
xor
pop
pop
and
notb
xchg
xchg
lret
inc
hlt
sbb
xor
xchg
fisttps
sti
loopne
lods
clc
test
mov
cmp
inc
jle
pop
leave
push
sti
xchg
sbb
inc
adc
jae
cmp
test
sbb
data16
sbb
cmc
add
xchg
ret
xchg
lock
loop
lcall
xchg
mov
sarl
xchg
mov
or
jecxz
loope
pop
fsub
ret
xchg
and
jae
xchg
aad
shlb
lods
aad
push
jl
inc
push
lea
mov
pusha
cmp
add
enter
sbb
clc
insb
and
jmp
lock
adc
retw
mov
sub
bound
xlat
iret
sbb
xor
xchg
add
or
clc
roll
push
enter
pop
call
xchg
xchg
rdpkru
imul
je
push
sbb
es
stos
sbb
push
and
rcrl
sbb
sti
mov
mov
call
jnp
popf
and
and
fsubr
adc
jp
sub
adc
sub
cmp
lods
dec
adc
les
cmc
inc
test
ret
int
jb
in
insb
cmp
insb
mov
aas
je
and
insb
outsb
cmp
int3
mov
fidivrs
and
sbb
aaa
cmp
xchg
aam
cmc
aaa
push
xchg
jo
mov
lds
loop
movsl
movsl
cmp
xchg
fdiv
mov
adc
xchg
mov
sub
dec
shlb
inc
mov
scas
hlt
jecxz
cwtl
cld
imul
outsb
mov
jo
xchg
test
xor
jecxz
mov
add
mov
aam
xchg
inc
jo
cmp
rcll
jg
jb
add
push
bound
mov
cmc
inc
mov
push
out
fistps
popf
ja
js
fdivl
pop
scas
mov
xor
sbb
fs
pop
inc
imul
cmp
mov
loope
jo
lods
sbb
cld
fstps
fimull
add
jp
rcll
loop
sub
mov
jb
sub
adc
stos
adc
repnz
inc
insb
push
sarb
or
nop
cli
mov
lock
mov
andl
cli
adc
mov
sbb
mov
pop
or
fistpll
dec
add
mov
jecxz,pn
push
sbb
sahf
xchg
sub
pop
inc
test
test
adc
push
shrb
inc
out
daa
loop
mov
sbb
add
in
jl
inc
lea
jmp
or
cli
popf
scas
mov
imul
add
in
fnstsw
out
lock
in
stos
push
add
daa
std
testb
data16
test
gs
pop
dec
adc
pop
fcompp
nop
push
add
loopne
dec
and
adc
out
dec
testl
lea
adc
sub
stos
ja
mov
lock
jb
aad
lods
push
out
xor
sub
popl
cs
xchg
cli
cmp
mov
nop
outsb
stc
fidivrs
dec
cmp
icebp
test
pop
insb
inc
pop
scas
pop
jbe
pusha
sbb
shrl
nop
popf
arpl
jg
xchg
add
gs
inc
nop
pop
jnp
jp
push
mov
push
nop
jmp
xchg
adc
ds
imul
aad
mov
test
mov
inc
sbb
fistl
clc
pop
stos
ret
into
mov
in
lahf
add
test
or
push
insb
xlat
hlt
cli
xchg
jne
or
repnz
pop
lret
mov
vmovups
xchg
inc
xor
aaa
es
pop
push
hlt
out
dec
aaa
pop
push
cli
pusha
jne
repz
dec
shl
push
mov
jl
xlat
and
lcall
lods
decb
and
pop
cli
popf
mov
mov
inc
push
jno
jne
loop
test
push
or
out
movb
fidivl
in
mov
nop
jne
les
out
xchg
lods
dec
loope
dec
pushf
in
push
push
shl
int3
out
je
roll
jle
repnz
jno
sbb
or
jno
push
dec
jle
adc
cmpsb
lcall
jbe
sti
ficoms
pop
repnz
ss
cmp
and
gs
xor
cmp
sub
mov
in
cwtl
call
inc
sub
divl
outsl
incb
sahf
pop
pop
stc
xchg
xchg
jne
sbb
cmpsl
loopne
cwtl
jb
lcall
dec
aad
out
sbb
pop
sbb
xchg
iret
mov
push
mov
mov
inc
bound
test
jbe
mov
mov
and
fdivl
repz
ljmp
int
mov
push
ss
repnz
jecxz
mov
sub
sbb
pop
or
ja
cmp
nop
movsb
insb
cmp
repz
pop
std
nop
dec
jmp
jo
or
pop
inc
test
push
add
jmp
aam
mov
cmp
jo
and
or
notb
push
lret
sub
aad
call
cwtl
mov
push
shll
test
pop
mov
je
mov
mov
jno
shlb
add
mov
mov
loop
push
xchg
jg
inc
inc
jge
stc
mov
mov
ret
and
or
xchg
pop
jg
dec
int3
or
lea
pop
in
sbb
and
cmp
adc
sub
in
lret
sub
in
out
sub
cmp
inc
stos
mov
inc
push
loopne
pop
xor
push
pop
loopne
inc
fsubrp
or
inc
mov
int
fdivs
mov
xchg
cld
inc
nop
mov
nop
iret
pop
cmc
fsubrl
stc
inc
mov
pop
and
loopne
fisttps
andl
repnz
sbb
shrl
inc
lock
push
pop
leave
hlt
rcrb
subl
sub
inc
mov
in
out
add
xchg
adc
scas
mov
xchg
sub
addr16
push
push
lret
fmull
or
sbb
mov
push
es
mov
movsl
shrb
push
bound
jbe
dec
adc
fstpt
popa
sbb
jbe
pop
inc
mov
out
mov
adc
sub
sbb
push
push
inc
insl
les
fsubl
push
xor
ret
inc
pop
daa
cmp
inc
cmp
dec
out
jne
jo
pop
mov
hlt
inc
inc
decb
sbb
lods
lahf
push
movsb
testl
sub
push
sub
fldenv
pop
out
mov
shll
rcr
mov
dec
js
inc
mov
outsb
cs
movsl
xchg
in
and
cmp
and
test
adc
push
std
dec
mov
lods
sub
add
jo
cmp
or
and
xchg
mov
insb
add
in
nop
repnz
lea
mov
rol
mov
shll
test
in
invlpg
jl
test
mov
sbb
jnp
das
lret
pop
mov
and
clc
pop
mov
pusha
or
mov
and
and
out
decb
push
jecxz
xchg
mov
mov
orb
ret
loopne
jmp
sbb
adc
inc
push
outsb
fistpl
inc
and
in
mov
out
inc
xchg
repnz
mov
cmc
mov
sub
cld
scas
push
push
ror
xorb
aam
mov
fstpt
sub
mov
aad
push
xor
push
flds
gs
leave
lahf
or
jp
sub
data16
cmp
icebp
test
in
fsubrs
add
mov
pop
xor
out
sub
and
andb
sbb
imul
push
pop
cmp
sub
insb
pusha
mov
bound
cld
xor
sarb
cmp
subb
mov
xor
stos
out
lds
jo
icebp
rcrb
or
pop
sbb
pushf
loope
popa
in
or
shlb
jne
ss
push
jmp
fcoms
lods
dec
stc
ja
xchg
cs
xchg
or
mov
loop
or
movsb
mov
out
fwait
out
or
in
push
push
cmc
mov
insl
xchg
mov
fs
stc
mov
push
fldenv
shll
test
imul
pop
add
push
cs
out
mov
shrl
scas
ficompl
xor
pop
fucom
inc
add
in
mov
xor
clc
loop
mov
sub
out
inc
in
mov
imul
lea
mov
imul
outsl
pusha
cmp
leave
shlb
sub
leave
mov
jno
das
ljmp
push
aam
adc
pusha
push
ja
cmc
fucomi
push
add
dec
push
xor
jnp
daa
and
xchg
push
dec
inc
sarb
pop
dec
aad
out
lcall
out
inc
lds
dec
ljmp
cmp
mov
outsb
add
adc
rcrb
scas
std
aas
mov
mov
shlb
les
mov
pushf
sahf
adc
insb
adc
popa
repnz
hlt
add
jl
xor
jmp
ja
jmp
or
mov
stos
mov
lret
cli
shlb
xor
insb
or
js
lret
testl
xor
test
data16
into
dec
mov
sahf
iret
pop
lods
push
adc
push
cltd
sarl
aaa
push
mov
jnp
push
daa
push
stos
lret
dec
mov
repnz
mov
sbb
idivb
lods
cmp
aad
fsts
and
add
repz
loop
push
xor
das
jae
and
mov
cs
sub
cmpsl
ficomps
pop
sub
int3
sbb
fsincos
orl
adc
sbb
fisttpl
fs
out
movsb
loope
outsl
filds
fisubrl
lret
cmpsb
repnz
adc
inc
mov
in
or
cmp
jecxz
xchg
push
mov
loop
xchg
sbb
pop
repz
fsubs
scas
xor
pusha
and
sbb
movsb
sarl
and
mov
sahf
adc
cmp
push
pop
dec
and
add
aam
cli
nop
data16
bound
and
scas
scas
mov
mov
nop
xchg
sti
std
jns
sahf
xor
jbe
popa
sub
shll
adc
sub
or
dec
dec
clc
xor
cmpl
pop
jns
or
jne
push
adc
out
out
cmpl
fidivs
pop
and
imul
repnz
pop
fwait
in
cmp
jbe
pop
daa
xchg
shl
or
mov
gs
daa
adc
fidivrl
mov
ja
and
jno
or
sub
xor
push
dec
push
or
test
pop
incb
jb
pop
inc
shr
in
cmpsb
loopne
sub
cltd
in
push
popf
cmp
xorb
popf
mov
call
mov
dec
sti
pop
mov
mov
push
mov
inc
test
data16
adc
sbb
push
lahf
jp
sbb
mov
push
and
lea
xchg
insb
push
or
xchg
outsb
shlb
cmpsb
fimuls
mov
lcall
inc
sbb
mov
loopne
mov
xchg
cmp
gs
push
mov
xor
pusha
add
rorl
add
push
lahf
jnp
out
call
push
push
cwtl
sbb
and
jp
dec
enter
and
rcrl
cmp
jp
pandn
mov
and
pop
fcompl
jno
add
push
roll
fbld
mov
repnz
inc
pop
xor
out
out
mov
fcoms
push
std
add
sub
imul
rclb
mov
mov
decl
add
mov
adc
cmc
mov
arpl
je,pt
sbb
ret
dec
hlt
rolb
pop
xchg
or
adc
pop
mov
icebp
add
test
lcall
jp
dec
icebp
mov
xlat
mov
jge
sub
adc
mov
scas
aad
out
fwait
gs
adc
sub
jnp
fdivs
sahf
inc
mov
add
mov
neg
rorl
pop
mov
rclb
or
addr16
rorl
mov
xor
cltd
stos
outsl
pop
ret
insl
dec
and
sub
lock
fsts
mov
jmp
imul
out
xchg
outsb
out
test
je
ds
jo
and
ljmp
jnp
fnstenv
ret
cmp
add
adc
jl
and
pop
and
sub
sub
fiaddl
fdivs
aam
fists
xor
mov
cld
and
xor
mov
jp
mov
pop
cmp
mov
gs
shrl
jae
in
sub
sbb
divl
jmp
nop
lds
rol
sbbl
addl
fiadds
popf
cmpsl
out
jns
loope
xchg
dec
scas
out
xchg
outsb
cmp
loopne
cmpsb
mov
dec
hlt
sahf
insb
pop
es
in
lods
movsl
cmpsl
imul
iret
rclb
imul
jmp
mov
mov
mov
cli
or
pop
lea
out
je
rclb
hlt
xor
jecxz
sbb
outsl
test
lret
xor
add
cltd
inc
sub
iret
arpl
loopne
sub
out
loopne
jns
ds
dec
adc
add
in
mov
stos
sar
mov
push
fxtract
je
mov
jp
sbb
push
sbb
jle
fnstsw
leave
mov
fwait
gs
sti
cmp
or
mov
pop
xchg
fists
scas
stos
cmp
jo
les
ret
pop
cmpsl
xchg
ret
imul
push
shl
xchg
std
into
sub
cmp
add
cmp
sub
loop
or
push
imul
cwtl
and
xchg
leave
pop
pop
sahf
mov
cmp
pop
repz
adc
push
dec
dec
or
insl
pop
inc
das
jae
sub
scas
sbb
fstpl
leave
inc
fs
test
xchg
cmp
add
mov
test
push
mov
ret
xchg
or
mov
cmp
add
hlt
adc
push
mov
or
ja
out
imul
mov
or
xchg
dec
stos
and
inc
xor
xchg
pop
sub
dec
ljmp
fnstcw
inc
adc
xor
sbb
jle
loopne
out
clc
mov
inc
or
sti
dec
mov
and
mov
jecxz
arpl
cmc
subb
das
jp
in
cwtl
push
pop
shrl
iret
cmp
cmc
dec
sbb
cld
push
dec
icebp
mov
pusha
filds
lret
push
mov
mov
std
fcompl
std
imul
xchg
aas
fdiv
loop
push
std
addl
leave
test
cmp
popa
ret
add
xchg
jge
cmp
nop
mov
and
and
push
bnd
sahf
arpl
icebp
sbb
sbb
repz
mov
imul
outsw
dec
or
negb
adc
mov
mov
leave
mov
jnp
inc
mov
fs
subb
fisubs
sub
jp
push
push
iret
mov
mov
jnp
pop
xchg
loope
mov
pop
add
xchg
stc
push
repz
sarb
mov
mov
inc
outsl
xor
imul
mov
xor
pop
sbb
fildl
inc
sbb
aam
and
dec
push
and
sarb
sti
mov
fstpl
cld
sbb
jnp
jg
je
xchg
iret
xor
xchg
push
mov
loopne
pop
xchg
jecxz
jae
xchg
int
int3
aad
lds
sbb
adc
lock
mov
clc
jmp
sbb
popl
aas
push
fsubl
or
pop
mov
stos
bnd
pop
out
pop
mov
roll
push
dec
or
push
ret
repz
mov
sbb
fcmovne
push
sub
push
sub
jo
xchg
xchg
mov
sub
sbbl
clc
jo
psubusb
mov
xorl
cwtl
push
mov
mov
sbb
in
je
bound
pusha
mov
dec
ret
lods
cmpsl
push
scas
xor
cmp
jo
cmp
mov
ficoml
and
jne
jb
outsb
shlb
ss
out
jl
dec
mov
jno,pn
sahf
in
mov
mull
frstor
lcall
mov
push
jl
mov
sub
mov
int3
xlat
fcomps
int
cli
rolb
js
mov
lea
stos
dec
push
div
dec
repz
push
sbb
xchg
and
icebp
lock
std
ss
pop
mov
add
xor
push
out
push
cmpsb
dec
inc
cltd
imul
jmp
mov
mov
pusha
cmpsl
insl
mov
stc
jne
sbb
scas
in
sub
push
or
mov
sub
xchg
fwait
mov
sarb
jne
mov
aad
andl
cmp
push
inc
jnp
push
test
cmc
fisttpll
shll
cmpsb
mov
or
adc
add
mov
jg
cmp
xchg
sub
aad
popa
aas
in
or
in
imul
pop
movsb
push
sti
iret
enter
adc
clc
cltd
imul
jb
faddp
incl
sbb
adc
inc
loope
mov
add
lcall
arpl
or
div
xchg
inc
mov
pusha
fisubs
cmpsb
sub
and
inc
inc
jmp
fsubrs
and
lcall
and
mov
and
xchg
dec
aas
mov
mov
lahf
push
je
lret
ljmp
fcoms
fincstp
lods
mov
pop
or
adc
orl
and
xor
mov
out
fs
sbb
xchg
hlt
ljmp
clc
and
sub
cmpsb
jno
rcrb
pop
bound
dec
mov
enter
out
jp
sti
filds
inc
mov
xor
add
bound
or
dec
mov
cwtl
sub
add
cmpb
xchg
lahf
cmpsl
xchg
lods
or
sbb
sub
mov
cmpsb
mov
aas
scas
sbbl
ret
mov
cmpsl
cmpsb
dec
roll
xor
fwait
sub
cmp
jmp
and
xchg
and
xchg
fnstsw
inc
rcll
push
mov
mov
cmp
jne
mov
cmp
push
das
cmp
mov
int
inc
lcall
leave
and
stos
or
insb
push
adc
test
sbb
into
lahf
lcall
mov
push
cmp
mov
sub
cmp
jge
jmp
ljmp
fwait
daa
pop
jnp
loopne
push
je
mov
xor
xor
jg
jmp
imul
mov
xor
xchg
sub
lret
add
scas
inc
inc
icebp
and
and
aam
bnd
jge
call
push
fs
test
in
aaa
movsb
xor
inc
push
mov
xor
test
dec
sqrtps
jne
test
pop
ljmp
test
dec
mov
lahf
loopne
je
arpl
pushf
mov
lea
aaa
pop
or
add
jle
jp
jbe
xchg
jno
sub
jbe
fisubs
jp
jmp
adc
in
in
cmc
cmp
or
imul
aad
loopne
fdivs
xchg
mov
sub
aas
inc
repz
sbb
mov
pop
out
dec
je
push
push
sub
sbb
dec
mov
aas
jnp
xor
fisubrs
cmp
sub
mov
push
gs
jp
push
fyl2x
enter
stos
push
xchg
ret
add
rcr
push
das
fwait
adc
adc
fwait
xlat
push
dec
enter
aaa
xchg
jne
jno
sub
test
mov
xchg
idiv
pop
and
cvtpi2ps
enter
and
add
cmp
mov
sbb
aam
outsb
mov
in
shl
pop
ret
pushf
call
cld
je
ret
xchg
adc
out
and
lods
inc
inc
stc
cmc
cmp
push
push
daa
sbb
inc
into
mov
dec
mov
aam
fmul
xchg
add
lret
or
push
pop
push
jecxz
push
adc
cmp
jmp
mov
xchg
stos
je
ret
or
push
mov
jp
pop
inc
sarl
addb
jp
and
dec
shrb
and
orl
mov
jge
into
lea
test
dec
cmpb
pop
push
and
das
add
movsb
lock
pushf
push
push
arpl
mov
js
shr
fisubrs
jb
and
outsl
push
test
pushf
rorl
lea
jmp
xchg
rcrb
and
repnz
mov
pop
test
sub
and
jle
pop
push
dec
in
rolb
scas
insl
dec
fildll
add
arpl
sub
pop
add
test
add
mov
cmp
xchg
pop
fidivrl
dec
xchg
pop
lods
into
inc
movsl
mov
jl
push
xor
int
mov
sbb
jle
cli
mov
lock
dec
xor
cmp
xor
xor
hlt
mov
mov
gs
jno
or
pusha
cs
insl
push
stos
mov
insl
cmp
ds
sbb
lock
adc
test
fisttpl
xor
and
jl
movsb
inc
cmpsl
stc
sub
fs
enter
in
mov
adc
aas
jg
push
icebp
add
push
pmuludq
xorl
xchg
xchg
or
dec
jns
ja
sbb
jb
imul
jg
xchg
fildll
fs
lds
lods
push
inc
sub
cmp
jnp
or
loope
sti
std
cli
xchg
and
adc
mov
ss
fwait
mov
sarb
sarb
movsl
sbb
xchg
jae
inc
jecxz
mov
xlat
in
inc
dec
addl
out
out
ret
pop
mov
daa
mov
cmp
stos
cwtl
fwait
mov
dec
outsl
mov
ds
mov
icebp
stc
xchg
clc
push
aam
fisubrl
jg
cltd
adc
add
xchg
icebp
bound
xor
aaa
out
xor
xor
mov
jle
test
mov
push
dec
cltd
ds
in
fnstsw
or
sub
jg
fs
sub
dec
dec
ret
int3
imul
enter
add
add
sbb
pushf
mov
ljmp
xor
fwait
jno
sub
into
cmpsb
fsts
aas
mov
jecxz
mov
pop
mov
ds
gs
xor
in
cmp
dec
movsb
add
sbb
aam
nop
inc
rep
dec
sbbl
push
inc
repz
test
mov
mov
enter
mov
sbb
xchg
imul
shll
aas
cmp
int3
sbbb
inc
xor
push
jmp
sub
test
jecxz
fbstp
je
mov
in
dec
and
dec
aas
sub
mov
push
jnp
push
xchg
adc
sub
mov
arpl
dec
sub
scas
andl
ret
pop
sbb
leave
out
mov
shll
fs
sar
ss
or
cmp
jne
inc
daa
dec
xchg
push
fstl
fldl
mov
imul
mov
jnp
test
test
aaa
out
cltd
lea
fmul
or
out
mov
andl
ja
add
push
je
pop
call
cwtl
pop
add
push
inc
hlt
jmp
push
int3
dec
xchg
retw
pop
lret
push
adc
sub
loope
mov
out
cltd
adc
push
dec
mov
data16
mov
leave
adc
aaa
out
cmp
int3
mov
push
mov
ror
mov
out
and
pushf
rorb
mov
mov
movsl
sahf
mov
movsb
fiaddl
sub
push
adc
or
mov
cmp
clc
orb
daa
sub
scas
add
aam
and
loop
jp
fldcw
jge
andl
lahf
je
adc
hlt
mov
pop
mov
or
popa
popf
mov
jmp
imul
or
cmp
das
xchg
int3
in
pop
stc
adc
fiadds
out
xchg
lds
gs
mov
cmpsb
push
clc
in
and
sahf
jecxz
outsl
mov
inc
gs
inc
xor
out
mov
mov
adc
xchg
sbb
cli
sbb
std
jno
nop
inc
mov
lret
sub
jl
out
pop
outsb
mov
push
sub
enter
cltd
jb
in
mov
push
pop
inc
leave
mov
xchg
jmp
aaa
dec
flds
jnp
rcrb
dec
out
dec
cmp
or
sbb
and
addr16
lahf
insl
inc
je
or
into
jmp
jb
jb
mov
pop
aaa
lds
addr16
dec
in
cld
mov
cmp
imul
lods
cmp
and
add
pushf
cltd
sub
mov
sub
mov
dec
insb
xchg
pusha
popf
push
int
add
ret
pop
push
add
inc
cltd
sub
push
mov
inc
fidivs
mov
ja
sbb
int
cmp
and
mov
sub
push
mov
into
in
pop
fsts
aad
fistpll
test
sbb
sbb
mov
imul
in
int3
rcl
add
les
push
ficompl
mov
fcoml
cld
inc
sti
ficompl
jle
sarb
std
push
pop
call
push
add
scas
sbb
lods
xchg
ja,pn
pop
xor
icebp
xor
or
mov
outsl
xor
je
or
stos
xchg
nop
dec
sbb
hlt
imul
popf
sbb
xchg
xchg
fidivs
shl
inc
xorb
gs
std
sbb
cltd
mov
fdivrs
mov
pop
pop
or
sti
nop
int
shlb
jp
jge
call
mov
loopne
pusha
mov
call
ds
ss
iret
ret
add
orb
js
mov
push
cwtl
fcompl
mov
inc
jp
das
pop
or
cmpsl
push
add
scas
cmp
das
cmp
shl
outsb
pop
xchg
push
xchg
rcll
or
push
fmuls
shlb
loop
inc
and
jnp
adc
jb
lods
pop
data16
mov
imul
scas
aad
jmp
jl
in
jne
addb
sub
into
cs
imul
lods
sarb
pop
enter
dec
mov
shl
jne
rolb
dec
scas
int
mov
test
outsw
movsl
xchg
mov
mov
ret
mov
hlt
test
popf
out
push
mov
int3
push
cmp
pusha
stos
fsub
pop
cmp
pop
push
movsl
ret
insb
leave
out
mov
iret
andb
and
insl
jo
lret
ret
and
inc
inc
mov
out
sub
xor
das
pop
inc
cld
cmp
cmp
jbe
call
cwtl
jae
push
pop
ljmp
push
pop
les
lret
aam
and
push
fsubrl
jo
jno
loopne
inc
rorb
js
lret
loope
sub
ds
pop
in
push
imul
ss
jmp
outsb
pop
inc
jb
sti
mov
mov
arpl
clc
hlt
movsb
mov
outsl
xchg
cmpsb
out
jge
ret
pop
ror
jbe
mov
push
mov
dec
sub
movsl
mov
mov
xchg
mov
push
jge
xchg
aam
cmp
fimuls
push
cmp
in
adc
push
or
jbe
sar
in
pop
jg
pop
xor
add
lret
mov
es
fcomp
push
gs
or
rcrl
in
push
pop
fsubrs
mov
loop
rclb
into
popa
pcmpeqw
out
inc
hlt
insl
mov
imul
jmp
test
fs
mov
push
push
push
sbb
es
push
pop
adc
shll
push
push
out
cmpsl
push
js
xor
stos
xor
push
fistpll
inc
inc
jl
outsb
insl
dec
cmpsl
ret
mov
xorb
lock
mov
pop
arpl
xchg
mov
jae
xor
jmp
push
scas
cmp
aam
or
push
fldl
inc
add
lods
wrmsr
inc
cmp
addl
je
bound
jae
scas
ds
outsb
sub
test
pusha
adc
push
add
adc
push
popa
es
into
repz
xor
push
add
ficomps
jl
iret
cmp
jb
test
pop
xchg
jge
psrlw
fisubs
in
orl
and
mov
and
out
int
sbb
cmpsb
rcr
mov
sti
mov
sub
popa
xchg
add
xor
ljmp
adc
stc
xchg
push
push
sbb
pusha
xchg
cmp
shl
pop
fcompl
inc
sti
and
xchg
sub
xchg
popa
rorb
xor
adc
cmc
js
inc
mov
pop
adc
add
fcomi
movsl
mov
xor
inc
mov
loopne
sub
pop
pop
loope
das
loopne
jmp
fldcw
xchg
jmp
pop
out
dec
stos
setge
push
cmc
adc
aas
xor
insl
lock
inc
mov
daa
loop
push
pop
insb
adc
xchg
xor
mov
test
push
inc
xchg
adc
gs
mov
addr16
lods
lods
mov
mov
mov
repnz
mov
inc
cmc
loopne
pop
xchg
arpl
sahf
jnp
push
lahf
inc
popf
jne
movsb
cmpsb
push
sub
sarb
arpl
js
push
icebp
push
cltd
cmpsb
pop
mov
push
sahf
cmp
popl
and
xor
mov
lahf
fwait
iret
arpl
xchg
adc
lods
int3
dec
outsl
or
add
leave
imul
ja
sahf
sbb
adc
adc
shlb
mov
pop
addr16
popf
out
xor
outsb
jb
adc
or
jbe
add
invd
sub
jae
inc
fcmovb
fcoml
inc
das
aam
xchg
les
push
sbb
mov
adc
ror
std
sub
dec
arpl
add
jo
pop
out
push
cmp
notb
test
jb
rcll
shlb
sysenter
repnz
jge
jae
mov
js
cmc
pop
xor
mov
jns
sarb
in
cmp
push
pop
iret
ds
adcb
gs
or
pop
sbb
push
mov
push
cwtl
mov
les
mov
divl
lock
jp
xor
sub
mov
stos
dec
mov
std
and
test
fs
xchg
cmpsb
cmp
mov
pushf
xor
mov
xor
mov
push
fwait
cmp
cltd
int
or
and
xchg
mov
sbb
add
and
test
bound
push
sbb
pop
lods
xor
mov
dec
scas
pushf
xchg
mov
imul
xchg
mov
mov
cmpsl
mov
dec
ljmp
je
cld
arpl
and
repnz
lret
pushf
sbb
inc
adc
jg
ja
pop
mov
cmpsb
divb
mov
and
pop
icebp
call
xchg
fmulp
xchg
outsb
arpl
nop
test
shlb
insb
repnz
ja
mov
dec
test
out
pop
sub
in
push
dec
pop
out
xor
loope
ja
pop
mov
cli
clc
mov
push
mov
mov
sahf
fnstsw
mov
fdivl
add
dec
ficompl
in
lock
out
in
pop
clc
push
je
popa
xor
dec
fsubl
cmpsb
outsl
shll
ljmp
cmp
and
add
iret
out
dec
lret
mov
xor
lds
jae
jg
in
stc
ljmp
mov
push
lret
mov
xor
and
movsl
lock
dec
sbb
in
mov
mov
add
inc
scas
mov
or
test
test
je
roll
fcomip
fcmovb
pop
mov
mov
fimuls
xor
sahf
add
lock
jmp
bound
mov
outsb
adc
jge
mov
arpl
sbb
ss
and
sarl
mov
sbb
in
stos
push
mov
inc
jo
scas
push
outsl
add
testb
cmp
xchg
pop
xchg
jbe
in
cltd
cltd
aas
cmp
repz
lret
fbld
mov
cmpsb
movsl
std
fdivr
mov
arpl
jg
mov
pop
push
out
xchg
int
imul
cltd
cmp
sbb
sub
icebp
fisubs
pop
rolb
je
mov
push
xlat
movsb
int
repz
xlat
lret
ss
push
inc
push
jbe
cld
mov
add
pushf
in
lcall
bound
cli
xchg
dec
sub
cs
sbb
xchg
unpckhps
in
dec
cmp
add
ds
arpl
cmpb
arpl
nop
cwtl
clc
sbb
adc
in
and
jg
jle
clc
jg
mov
cmp
jb
inc
xorl
mov
test
and
fs
mov
mov
jl
outsl
cmp
jp
cmpsb
inc
gs
sub
cmc
test
in
lcall
rorb
mov
ret
scas
ja
pop
push
in
fiaddl
xchg
jnp
jns
inc
stc
popa
dec
call
stos
popa
jns,pn
fldenv
mov
das
or
push
mov
xchg
jns
fiadds
jp
mov
cltd
mov
xor
xor
and
popa
push
dec
jp
addr16
jno
add
lea
mov
mov
testb
pop
jle
js
insl
notb
lock
mov
fdivl
add
add
mov
dec
push
mov
or
sub
mov
dec
repz
loope
jo
mov
lcall
int
sub
aam
dec
xor
out
test
jnp
inc
lds
pop
in
rcl
jmp
shl
lahf
push
and
enter
xor
in
cmp
xor
push
mov
or
out
adc
jmp
or
jecxz
insb
mov
dec
sar
add
xor
aam
add
sbb
icebp
push
adc
inc
pop
stc
std
ret
cltd
dec
jmp
xchg
std
lock
fidivs
popf
fwait
jnp
sub
and
sub
out
aam
scas
add
shll
dec
insl
dec
fmull
sbb
sti
inc
push
pop
inc
popf
inc
dec
jns
leave
pop
lock
fcoml
cmp
dec
xor
stc
fadds
rcrb
xchg
jg
adc
loopne
aam
daa
mov
je
in
das
hlt
xor
jns
jb
fdivr
lret
mov
testb
jp
lock
pop
mov
push
mov
xchg
pop
jb
pushfw
push
lods
pop
cmp
sub
shlb
sbb
xor
in
mov
xchg
ljmp
loop
stos
or
add
dec
jb
sub
sub
daa
jb
mov
xchg
outsl
stc
or
rcll
in
inc
and
movsb
push
mov
loopne
fwait
rcl
nop
pop
repnz
jl
dec
pop
js
das
cld
jbe
sbb
orb
mov
in
inc
cmp
in
dec
enter
xchg
inc
into
mov
and
push
add
mov
pushf
xchg
inc
cmpsl
jo
or
dec
or
test
sub
test
ret
test
mov
add
cmp
cld
addr16
jle
push
and
adc
and
aaa
cmp
jp
pop
lahf
scas
jne
imul
push
add
mov
aas
jmp
jno
mov
adc
ss
fimull
pop
test
adc
es
jns
lea
xor
out
sbb
testb
push
aad
popf
xor
push
dec
cmpsl
mov
mov
loop
cmp
cs
mov
mov
stos
mov
bound
pop
sub
inc
sbb
pop
fistpll
sub
movsl
jl
mov
les
inc
shlb
jp
and
xchg
imul
aaa
lods
adc
adc
push
cwtl
adc
cs
fwait
testl
test
mov
add
loopne
sbbb
sub
push
ror
cmpl
inc
js
mov
xchg
cmpsb
ljmp
cld
jp
bound
pusha
pop
mov
xor
stos
xchg
gs
pop
mov
dec
push
popa
sub
mov
scas
fists
popa
inc
or
imul
dec
cli
scas
xor
push
lcall
cmp
int3
aaa
cli
inc
fs
mov
push
movsb
jne
adc
mov
pop
xor
inc
test
repz
mov
xlat
push
add
repz
mov
outsb
int3
jge
aad
testl
xchg
xchg
mov
aad
test
in
sahf
inc
test
mov
add
test
dec
iret
adc
repz
fstl
pop
push
mov
pop
insb
nop
add
and
loopne
add
fistps
into
ret
mov
lcall
test
int3
inc
add
out
and
clc
pop
add
mov
xor
insl
test
jns
jo
fs
pop
adc
push
jle
shlb
into
fwait
into
pop
and
xor
test
sar
mov
dec
jb
stos
andb
mov
daa
dec
mov
fldcw
fisubl
add
xchg
push
flds
and
and
sub
inc
stc
cltd
in
mul
dec
add
in
xchg
push
aaa
sub
mov
lahf
fisubl
mov
pop
dec
jbe
bound
subl
push
sbb
sub
loop
adc
fwait
inc
xchg
stos
xchg
inc
and
vpmacssdql
xor
clc
jnp
dec
sub
sub
pop
or
push
ss
jbe
mov
addl
test
mov
out
xchg
jge
jbe
out
inc
sbb
mov
dec
sbb
bnd
xchg
pop
fxch
lret
clc
ficoms
push
sbb
mov
inc
mov
sbb
mov
mov
or
data16
push
aas
notb
daa
or
pop
or
sbb
or
xchg
dec
cmp
rorl
sbb
mov
aaa
mov
inc
push
mov
xor
int3
shlb
outsl
cwtl
dec
dec
jge
ja
cmp
insb
insb
ret
jo
xchg
subb
jo
cmpsl
aaa
mov
jecxz
or
sbb
adc
into
js
iret
jmp
lret
lods
push
cld
pop
mov
fistl
mov
pusha
pushf
fucom
inc
push
mov
xor
std
sbb
lret
js
enter
repz
jnp
scas
sbb
arpl
xchg
push
test
push
cltd
shrb
or
mov
push
mov
sbb
mov
mov
fmul
push
sub
lea
repz
in
ret
add
ljmp
in
jmp
fstl
popf
mov
inc
xchg
dec
lock
leave
add
int
mov
xor
pop
pop
xor
mov
fidivs
xor
data16
out
or
shrl
lea
or
xchg
test
jae
addr16
xchg
mov
scas
add
add
call
sbb
jb
es
xor
mov
sarl
or
addr16
dec
vmread
sbb
call
jne
rorl
dec
pop
mov
int3
dec
lock
arpl
cmp
mov
cmp
dec
pop
fldl
mov
mov
pop
pushf
add
shrb
cmp
push
mov
ljmp
xchg
xchg
insb
xchg
movsb
push
repz
sbb
cmpsl
mov
lods
repz
out
and
bound
ja
jne
lret
pop
test
shrl
repz
and
iret
arpl
or
mov
call
ds
int
xchg
cmc
ret
adcl
pop
xor
mov
sbb
insl
call
push
jae
push
int
iret
mov
incb
push
loopne
into
sub
je
jg
sub
mov
adc
mov
push
sub
stos
hlt
cmc
xor
jmp
or
pop
cmp
inc
jge
pop
sbb
les
js
sbb
fimull
sub
jg
in
mov
xor
icebp
mov
lea
in
fwait
and
lods
sbb
out
cmpsb
mov
ret
js
pop
sub
push
dec
mov
and
sub
sbb
sbb
or
aad
lds
movsb
scas
test
ficompl
mov
stos
fisubrl
inc
bound
pop
sti
das
stc
jb
inc
mov
scas
loope
testb
adc
jbe
dec
rorb
push
mov
ja
push
jne
sarb
and
xchg
inc
fsubrp
inc
cmc
das
dec
addb
mull
pop
add
fiadds
cmp
push
xorb
sbb
jmp
in
insb
inc
mov
rcrl
jb
daa
xor
pop
adc
test
xorl
pop
push
fadds
add
scas
mov
sub
jp
adc
cwtl
or
mov
lret
inc
cmp
sub
jecxz
fcmovu
cli
clc
sub
ret
cmp
mov
gs
aaa
add
push
cli
ret
test
jae
push
add
insb
push
js
adc
loop
and
iret
subb
cmc
sbb
in
dec
mov
imul
lahf
test
nop
jno
inc
cmp
mov
push
adc
pop
fwait
or
jb
out
xor
fs
test
sub
push
insb
ss
iret
cld
test
inc
and
insb
push
pop
mov
and
mov
lods
add
imul
pop
sub
adc
dec
jecxz
mov
pop
out
lret
add
lcall
je
mov
inc
stc
ljmp
jg
fwait
sub
mov
loop
dec
loopne
xchg
pop
clc
cmpsl
sub
sbb
or
subl
in
cmp
subb
cmp
fsubs
movsl
add
in
cmpb
mov
sub
mov
pop
sti
lods
popa
push
cmp
jns
aas
cmp
mov
pop
les
mov
movsl
insb
dec
iret
sbb
jns
mov
test
fdivrl
dec
xlat
and
xchg
xchg
mov
ljmp
push
movsb
mov
pop
cmp
xor
adc
inc
sbb
out
xchg
lods
add
out
mov
mov
in
scas
das
leave
addr16
inc
pop
lcall
and
or
ds
mov
or
sbb
push
xchg
xchg
dec
push
xchg
add
or
loope
xchg
popf
pop
add
jp
cli
mov
lcall
js
xchg
daa
sbb
adc
outsb
and
or
xchg
xor
xchg
jns
mov
and
dec
adc
xchg
mov
pushf
dec
and
and
and
jae
sbb
xchg
adc
pop
push
inc
inc
loope
xchg
cli
and
gs
adc
jbe
push
scas
dec
in
int
imul
ret
je
mov
push
bnd
mov
inc
in
mov
out
xor
push
sbb
xor
and
roll
xor
test
mov
jns
scas
jp
jnp
ffreep
outsw
xorb
add
sahf
pop
xchg
cmp
mov
hlt
push
out
sbb
cmp
or
dec
lret
dec
mov
jl
in
and
mov
sbb
xor
sbb
dec
mov
adc
mov
shll
dec
add
add
inc
iret
inc
fisubrl
sub
negl
fldl
push
cmc
sub
pusha
mov
and
cli
lret
pop
push
mov
fwait
test
std
fs
push
pushf
push
sbb
ljmp
pop
loope
sbb
mov
xchg
mov
jecxz
jo
insl
mov
repnz
push
imul
push
inc
movsl
lcall
shrl
mov
cmp
xor
sbb
or
pop
sbb
push
sub
push
adc
hlt
mov
cld
xor
adc
sbb
sbb
std
pop
mov
mov
enter
test
cwtl
add
mov
cli
push
cmp
adc
aas
jl
mov
pop
popa
xor
pop
xchg
inc
dec
cwtl
stos
loope
mov
add
lods
mov
inc
in
lods
pushf
call
lock
inc
iret
dec
jo
push
and
cld
ljmp
es
xchg
pop
scas
fstpt
sbb
fmulp
pop
sub
call
loopne
add
and
or
test
pushf
hlt
xchg
cmpsb
or
ja
pop
lods
test
add
notb
jge
adc
xor
syscall
jecxz
xchg
xor
xor
divb
mov
gs
jle
stos
jnp
lods
repz
lods
mov
pushf
stos
push
repz
xor
out
dec
mov
aaa
js
cmc
mov
add
test
or
data16
and
aaa
dec
ret
xor
sahf
lds
jns
stc
int3
mov
xchg
sbb
jne
cmpsb
jl
fldenv
mov
xchg
pop
sbb
loope
flds
jl
xchg
cmpsl
test
jnp
mov
cld
outsb
rcrb
sbb
sbb
pop
test
push
xchg
and
lcall
sub
insl
xchg
mov
jl
inc
sub
push
pop
cmc
ret
jns
fcoms
and
ss
fwait
cmp
test
mull
cmpsb
xor
jo
jne
pop
xor
inc
inc
mov
adc
js
popa
mov
jp
add
sbb
xor
sbb
mov
inc
sub
xchg
pop
int3
aaa
cs
or
inc
lea
int3
adc
adc
jnp
pushf
insl
scas
jnp
lock
in
fistps
pushf
in
fsub
repz
scas
cld
cmpsb
stc
std
ja
add
test
mov
adc
mov
jmp
popl
imul
iret
cmp
repnz
dec
push
jecxz
dec
pushf
fstl
jle
gs
push
jl
or
jbe
mov
push
mov
hlt
sub
sahf
movsl
cwtl
mov
in
inc
loope
sbb
mov
push
loop
inc
in
add
lds
and
notl
cmpsb
and
sub
or
sar
inc
test
mov
test
mov
xor
mov
loopne
gs
sbb
loopne
push
std
mov
push
mov
lea
imul
push
push
or
test
dec
xchg
ja
bound
mov
mov
xchg
and
enter
cs
push
xchg
test
cmp
inc
mov
pop
or
dec
adc
sub
xchg
clc
cmpsl
push
out
push
lret
out
es
mov
inc
mov
test
push
pop
aam
adc
insl
dec
mov
cli
outsl
sub
jge
adc
dec
xchg
jns
pushf
mov
mov
jb
lock
sub
loop
mov
dec
jecxz
jo
outsl
stc
movsb
int3
inc
push
js
rcrl
push
test
mov
push
negl
xor
dec
subb
sub
pusha
ljmp
or
push
xor
inc
out
or
pop
cmpsb
in
add
jo
popa
mov
cmp
fists
icebp
movsb
std
es
js
ja
mov
arpl
ljmp
xchg
clc
in
add
subb
dec
xchg
iret
pop
sahf
aas
push
add
mov
insl
dec
and
cltd
fscale
xor
push
scas
inc
adc
add
or
je
je
xchg
dec
out
mov
out
jne
inc
jb
leave
mov
jne
js
incl
xorb
push
test
or
adc
rcl
dec
jne
stos
movsb
xor
test
sub
mov
adc
and
pop
jns
or
xlat
jl
mov
je
add
inc
nop
jmp
cs
mov
pop
inc
mov
cltd
mov
fsubrl
inc
int
lea
pushf
xor
or
iret
fldl
nop
jb
push
fwait
lret
sahf
mov
loopne
addb
dec
lock
js
das
iret
stos
push
cmpsl
sahf
pop
lods
lcall
mov
cs
pop
sub
stos
mov
cli
lods
fisttpl
pop
add
and
pop
pusha
or
cli
pop
jae
jg
or
xor
popa
aaa
loope
xchg
mov
pop
lds
daa
mov
inc
pop
pop
push
mov
cmpsb
popa
mov
mov
and
add
popf
pop
jno
scas
fs
mov
and
test
dec
jle
out
jmp
mov
sbb
rolb
push
rcl
clc
dec
dec
inc
ljmp
ret
movsl
xlat
mov
add
and
xchg
xor
and
mov
push
js
push
push
push
add
and
movsl
sti
cmp
or
ret
add
test
je
scas
popf
es
jmp
push
inc
dec
imul
popf
mov
ljmp
ss
adc
jmp
or
add
cld
mov
fidivs
mov
enter
pop
repz
xorl
cmp
popa
xorl
sub
out
push
sbb
popf
or
xchg
je
add
in
lds
ljmp
xchg
add
je
fistpll
jnp
popa
adc
and
data16
stos
push
sbb
xchg
mov
leave
cmp
mov
lea
je
out
jl
fidivs
add
outsl
or
js
in
dec
xor
test
dec
mov
mov
sarb
dec
push
scas
test
jp
pushf
cmp
into
push
sbb
cmpsl
into
mov
scas
sub
mov
cmpsl
cmpsb
jo
jge
cli
shrb
rcll
movsb
push
sub
aas
cmc
mov
repz
outsb
xlat
daa
outsb
insl
jp
dec
imul
sub
into
repz
cmpsl
outsb
xor
jmp
pop
and
mulb
inc
xchg
nop
dec
cmovns
std
pop
cmp
xorb
lahf
into
fiadds
xlat
cli
stos
mov
mov
dec
clc
test
cmp
jl
fwait
rol
popa
cmp
mov
ja
fst
jmp
clc
divl
add
and
sti
xchg
retw
adc
pop
dec
cmpsl
mov
add
scas
lret
shrb
rcr
scas
movsb
repnz
div
adc
jno
xchg
fnstenv
mov
pop
adc
jge
lea
ss
mov
jb
push
test
imul
inc
cmp
stc
cld
jp
xor
lcall
ficomps
push
sbb
imul
dec
lds
in
mov
adc
cmpb
hlt
loopne
and
mov
xchg
mov
xor
sbb
mov
push
sub
mov
mov
mov
pop
enter
repnz
jbe
in
dec
shl
out
dec
adc
repz
mov
cmp
data16
xchg
jge
sub
pop
bound
scas
inc
inc
push
pop
pop
outsb
xor
push
adc
xor
xorb
outsb
sub
arpl
inc
mov
aam
rol
inc
lret
out
push
inc
and
push
mov
mov
fdivs
sahf
push
pop
mov
je
es
adc
push
xchg
cmp
mov
cmp
inc
clc
mov
adc
push
ret
or
pop
test
iret
mov
mov
in
es
andb
adc
fstps
outsl
imul
js
cmpsl
scas
and
pop
mov
pop
adc
shll
insl
jmp
lds
test
cli
icebp
xlat
out
fadd
out
add
mov
ret
xchg
cwtl
adc
lods
hlt
daa
int3
adc
in
jb
mov
test
push
in
lock
ret
jp
cmp
pop
mov
jnp
adc
xchg
pusha
mov
pop
test
js
push
fmull
stos
pop
ja
inc
rcll
adc
int3
cmp
aas
loop
sbb
inc
adc
inc
je
pop
sub
and
lds
pusha
xor
bound
pop
cwtl
cltd
fdivl
cmpsb
or
xor
pop
add
mov
cmp
iret
mov
pop
xchg
adc
jae
out
sbb
pop
push
lret
fdivr
push
and
inc
push
mov
push
or
mov
in
mov
cwtl
outsb
fs
rclb
lea
ret
movsl
dec
pop
xor
jns
jbe
mov
in
and
leave
mov
cmp
out
xor
jmp
push
dec
movsb
sub
decb
dec
cmp
push
mov
jo
jg
add
inc
mov
jne
loope
sbb
adc
sbb
iret
aam
sub
mov
adc
mov
jmp
xchg
pop
daa
cmp
hlt
jecxz
mov
outsl
mov
inc
jbe
add
and
scas
add
popf
mov
aam
in
dec
mov
add
sub
pop
lods
adc
decb
push
dec
xchg
insb
scas
sbb
out
or
and
lret
inc
jl
sbb
mov
inc
xor
fdivs
inc
cld
mov
adc
inc
xchg
movsb
add
mov
dec
pand
add
sub
mov
pop
fiaddl
sub
xor
into
add
ss
cmp
sbb
dec
lds
outsb
addr16
or
lret
stos
pop
icebp
incb
push
test
xchg
test
ss
mov
mov
icebp
orl
xchg
sub
leave
mov
decl
push
les
int
lahf
mov
scas
mov
aaa
and
daa
pop
mov
ret
or
fimull
insl
decl
add
andl
scas
loop
lea
push
nop
imul
mov
sub
dec
or
adcl
movsl
dec
xor
and
int
push
lods
sub
out
pushf
ja
push
mov
or
jno
jl
inc
subb
xchg
out
stc
addr16
fs
into
orb
outsb
repz
loope
xlat
and
stos
mov
les
push
push
call
sbb
add
aad
adc
dec
mov
cld
adc
dec
stos
cmpb
inc
iret
push
out
mov
cmp
mov
pop
clc
bound
push
mov
pusha
test
flds
xor
je
pop
mov
jl
repnz
clc
add
mov
jmp
mov
sub
insb
aad
stos
scas
into
push
sub
mov
xchg
push
sub
loope
loope
clc
inc
dec
sbb
in
dec
in
gs
xlat
jp
ja
fisubl
insl
pop
movsb
shrl
insl
cmpsb
push
in
xor
pop
arpl
push
gs
test
add
inc
push
pop
and
in
outsb
sbb
or
arpl
push
mov
push
outsl
scas
xor
or
outsb
adc
sbb
aam
clc
adc
sbb
jg
mov
mov
or
cld
mov
fwait
jne
arpl
clc
nop
mov
dec
cmp
mov
push
adc
xchg
loop
lds
lret
not
std
pop
inc
addr16
loopne
adc
stos
xor
cmpsb
jg
push
or
or
push
fs
inc
fdivr
hlt
add
cmpsl
xchg
mov
call
mov
jge
push
pop
dec
lret
daa
inc
dec
mov
sub
roll
cmp
in
push
out
and
pop
aaa
sahf
mov
jns
mov
icebp
sbb
dec
or
xchg
xlat
pop
push
jecxz
jo
inc
and
mov
or
stos
or
mov
ss
jle
xchg
xor
lcall
add
jnp
sbb
sub
lcall
xor
icebp
sub
in
into
pop
je
fistl
stos
test
mov
insl
fmuls
mov
arpl
pop
add
pop
cmp
sbbb
ljmp
jnp
pop
dec
insb
outsb
mov
imul
lcall
push
jnp
mov
and
mov
dec
pop
lcall
std
push
sbb
mov
aam
fcompl
ljmp
fs
xor
lods
cmp
fimuls
fldenv
in
xchg
aaa
arpl
fiaddl
or
pop
add
jns
cld
ffreep
fucom
and
rcl
jl
cmp
in
arpl
xchg
hlt
cltd
bound
into
mov
imul
sub
and
and
or
sbb
enter
adc
jp
cmp
fldcw
and
lret
loopne
ljmp
mov
mov
add
mov
cmpsl
add
mov
inc
pop
pop
es
insl
xchg
xchg
out
or
shrb
addr16
xor
sbb
pushf
lods
cmpsl
sbb
test
sub
cmp
lods
add
mov
stc
inc
daa
pop
ja
icebp
rcl
xchg
xchg
xlat
sbb
pop
je
test
hlt
dec
pop
push
repz
ljmp
fiaddl
imul
js
cmc
pusha
jl
push
pop
repnz
xor
or
push
xor
shll
dec
jae
pop
push
subb
push
push
dec
in
lcall
lahf
test
inc
leave
fisttpll
les
or
mov
sbb
sbb
ret
jb
aad
call
aaa
push
sbb
cmp
inc
add
jge
xchg
leave
dec
jge
adc
mov
and
jnp
push
push
jae
mov
sub
negl
and
sub
mov
gs
push
int3
mov
cs
dec
mov
pusha
and
mov
imul
xor
push
movsb
popf
and
xchg
aas
loopne
jle
lods
test
mov
adc
push
cmp
jae
rolb
xchg
addb
jo
fs
jnp
push
lret
jmp
add
push
sbb
pop
leave
lahf
cmp
pop
inc
pushf
ficoms
add
pusha
sub
xchg
test
ja
mov
pop
xchg
sbb
adcl
pop
jnp
push
fucomp
repz
mov
pop
push
daa
addr16
cmp
xchg
xor
insl
cld
stos
sbb
ljmp
push
pop
push
pop
add
lret
dec
ljmp
mov
cmp
mov
scas
sub
inc
cltd
cmpsb
dec
dec
push
mov
jmp
push
xchg
jae
pcmpgtd
stos
mov
andb
or
push
in
fsubr
addr16
pop
movsl
mov
push
xchg
nop
xor
repnz
sub
or
fdivrs
data16
fidivl
jnp,pt
mov
sub
shll
jl
fwait
insb
dec
repnz
mov
mov
pop
in
or
mov
sbb
cmp
lcall
stos
mov
inc
imul
add
cmpsl
dec
popa
int
ds
mov
mov
fildll
push
sub
mov
xchg
je
inc
mov
mov
push
test
outsb
ss
fsubl
test
jno
insl
or
sbbl
ret
mov
movsb
push
inc
cmpsl
imulb
dec
ljmp
xor
scas
shll
and
and
mov
jno
test
mov
lods
xor
and
popa
repz
xchg
lret
repz
into
mov
jecxz
imul
dec
cmpsb
das
adc
rcrl
jl
cmpsb
add
add
push
jmp
pushf
das
add
pop
das
aam
adc
imul
cltd
repz
lahf
mov
and
fisttpl
xchg
mov
inc
push
shr
in
mov
jp
imulb
inc
lock
fisubrl
ret
imul
jge
lret
and
mov
push
mull
inc
pusha
test
ljmp
cmp
push
jno
mov
scas
jecxz
pop
arpl
pop
sub
add
or
insb
xor
popa
pop
test
aaa
dec
lret
fcoml
insb
andl
and
and
cmp
jle
mov
mov
xchg
outsl
mov
dec
xchg
fidivrs
and
es
sti
insb
push
jge
test
mov
fldcw
scas
mov
adc
sub
aaa
jmp
lcall
jno
cmpsl
pop
push
xor
and
jbe
mov
icebp
dec
adc
jnp
add
push
mov
scas
xorb
cwtl
into
xchg
ljmp
mov
xchg
paddusb
dec
jo
or
inc
loope
das
idivl
jmp
and
jmp
cld
shrl
sub
jne
adc
xchg
mulb
cmpsb
mov
lret
sbbl
scas
pop
adc
xlat
add
xlat
mulb
movsl
call
aad
add
xor
cmpb
fmuls
iret
mov
xchg
mull
xchg
mov
inc
adc
xchg
int
sbb
xchg
das
jg
cmpsb
sbb
mov
sbb
push
addr16
js
aam
jno
shll
cmp
loope
mov
ss
scas
xchg
imul
cmpsl
mov
mov
pop
imul
push
push
outsl
add
add
flds
scas
roll
and
andb
dec
fisubs
mov
insb
dec
mov
cltd
add
inc
daa
or
test
das
mov
adc
movsb
popl
push
test
cmpsl
in
mov
outsl
into
adc
add
adc
jno
jae
mov
call
stos
popf
dec
and
mov
popf
push
add
add
lods
popa
pop
out
xchg
test
xchg
add
stc
icebp
nop
inc
push
aaa
hlt
push
pop
insb
xor
xchg
movsb
scas
ja
pop
mov
lret
and
mov
add
nop
dec
push
ss
mov
push
aaa
jnp
mov
imul
mov
xchg
adc
dec
pop
jae
les
rorl
mov
ds
and
adc
call
mov
arpl
pop
enter
lahf
nop
jne
jl
or
int3
cmc
lods
mov
adc
pushf
mov
insb
and
ret
mov
cmc
sub
sbb
mov
or
daa
xor
jne
mov
inc
ss
fisubl
aam
adc
js
sbb
cltd
out
cmpl
outsb
xlat
dec
push
mov
mov
pop
loop
mov
and
jl
sbb
fs
add
mov
mov
stos
testl
aad
and
jmp
mov
mov
mov
and
mov
pop
loop
cld
fisubrl
cmp
imull
lcall
insl
decl
enter
test
mov
hlt
adc
sub
rclb
or
out
and
out
test
mov
jo
pop
int3
lahf
inc
pop
or
push
in
cs
sbb
xchg
ljmp
fs
or
fnsaves
pop
and
in
fs
jae
scas
fs
sub
and
or
sub
add
xor
call
sbb
mov
mov
dec
fs
cli
hlt
xchg
mov
and
xor
leave
leave
push
fwait
mov
je
jo
xchg
add
dec
pusha
mov
inc
bound
insl
fsubrs
adc
cltd
addr16
xor
fidivrl
sahf
pop
push
adc
fildl
cmpl
pusha
push
lock
add
add
push
jne
xchg
or
mov
cmpsl
insb
mov
scas
fs
jecxz
xchg
sti
mov
outsl
sti
repz
add
lods
xchg
js
pop
sub
out
cmpsb
arpl
push
lcall
sub
pushf
repnz
jae
cltd
adc
int
ret
std
arpl
ret
dec
shlb
sub
sub
or
mov
push
lahf
inc
ss
pop
xchg
and
adcl
cmpsl
data16
xchg
cmp
sbb
and
mov
lret
jb
push
arpl
push
add
pushf
shl
xor
cs
in
push
push
std
mov
mov
push
mov
mov
xor
xchg
cmp
outsb
lods
fdivrl
test
mov
cmpsb
test
arpl
xlat
pusha
pop
std
mov
xor
call
loopne
rcl
stc
push
sub
mov
lea
test
ljmp
cmp
or
pop
hlt
clc
js
push
jecxz
cs
ss
adc
out
dec
cmp
pop
jl
or
lea
lret
mov
push
cmp
jle
pop
jg
add
cmc
xor
sub
fcmovnb
sbb
jo
fcomp
ljmp
gs
shrb
dec
test
sub
js
cld
xor
insb
cltd
fs
ljmp
or
cmpxchg
rorb
adc
xor
insl
stos
mov
push
xchg
pop
pop
rclb
jno
in
les
das
cmp
nop
sbb
cs
repz
xor
mov
add
sub
jae
je
dec
inc
adc
inc
stc
push
lret
push
mov
mov
mov
push
mov
push
int3
jmp
popa
iret
pop
icebp
cld
filds
pop
nop
pop
mov
outsl
outsl
mov
test
mov
sbb
push
push
testb
xor
jg
shlb
or
jnp
sub
cmp
cmp
inc
repnz
inc
and
imul
inc
sub
outsl
pop
sbb
fcoml
movsl
sub
add
lods
sub
mov
ja
mov
ret
cmp
pop
in
dec
adc
in
cld
jecxz
iret
inc
mov
dec
sbb
mov
pop
mov
inc
add
iret
dec
and
cmpsb
sbb
or
pop
inc
mov
push
dec
inc
mov
sbb
sub
scas
inc
rcl
inc
aas
in
sub
push
jl
push
xor
imul
bound
je
adc
shl
push
repnz
lds
xor
fisubl
mov
inc
push
adc
mov
test
jne
lods
in
xchg
stos
scas
hlt
fdivrl
xchg
jmp
adc
dec
pop
add
xchg
mov
arpl
push
mov
mov
repz
cwtl
subl
push
sub
mov
les
mov
pop
mov
xor
pushf
sbb
or
mov
in
jae
movsb
js
dec
inc
movsl
andb
sub
xchg
add
jnp
nop
das
imul
dec
icebp
xchg
in
mov
mov
cmpsb
inc
imul
mov
jle
ficompl
mov
sbb
loope
imul
push
pop
cmpsl
mov
dec
adc
pop
push
inc
mov
xor
xchg
addr16
push
add
stc
fnsave
sub
test
mov
rclb
cmpsb
pop
fs
dec
xor
mov
push
inc
pusha
push
cmpsb
and
mov
jl
jo
hlt
dec
dec
mov
cld
sub
or
fmuls
add
pop
movsb
xchg
xchg
loop
pop
repz
shll
xchg
in
add
movsl
jne
fndisi(8087
inc
sub
xor
fsubp
push
pop
out
fcmovnb
sbb
leave
adc
mov
imul
push
lods
ja
sbb
jo
and
xchg
std
dec
clc
or
pop
dec
sub
cwtl
mov
scas
not
jne
mov
dec
stc
scas
loop
push
sbb
inc
lock
push
fnstcw
or
push
test
pop
movsb
pop
sbb
push
cmc
aam
mov
test
jo
in
fbld
ja
fcmove
fimull
loope
movsl
movsl
fiaddl
mov
ja
fstpl
push
pusha
xor
pop
or
xlat
ret
ljmp
insl
jae
inc
jge
mov
es
and
ss
jne
mov
jecxz
mov
or
push
sub
xchg
inc
movsl
add
ds
movsb
incl
or
cmp
test
mov
sti
lods
or
jbe
subl
inc
push
ficomps
adc
insb
addr16
sarb
sub
idiv
jae
pop
sbbl
sub
adc
xchg
and
mov
xor
adc
popf
cs
lds
pop
xor
sbbb
xchg
bnd
or
mov
xchg
pop
push
push
mov
sbb
push
int3
xor
clc
sbb
std
dec
fisttpll
aam
cmpsb
and
mov
mov
cmpsb
mov
push
jmp
lahf
push
psllq
xor
stc
adc
push
or
mov
andb
xchg
into
loop
xor
mov
test
push
cmp
mov
movsl
or
in
mov
mov
insb
add
inc
mov
mov
sti
stc
nop
and
ljmp
mov
sbb
in
and
imul
lods
cmc
pop
and
jge
jb
loopne
and
push
popa
jmp
mov
sbb
jge
cs
loope
mov
adc
movsl
jge
mov
aad
xchg
xor
push
jae
rorl
mov
test
ret
mov
or
xor
or
mov
mov
mov
inc
mov
cmpsb
xor
popf
int3
mov
push
insl
cs
mov
into
mov
push
ss
sbb
lds
and
sbb
sbb
jnp
inc
ret
jns
inc
test
jo
mov
aas
and
dec
sbb
add
loopne
mov
pushf
rorb
addb
bound
xchg
jge
jmp
cmp
ficoms
xor
loope
orb
fwait
jmp
jbe
outsl
js
xchg
dec
push
cmp
imul
int
dec
out
sti
insb
ja
xor
lcall
push
mov
clc
cmp
cmp
cmpsb
adcb
mov
stc
push
sub
mov
insb
ja
inc
int
sbb
xorb
stos
mov
insl
adc
frstor
lds
lcall
xchg
or
pop
or
cli
jae
sub
sub
inc
cmpsb
movsw
in
es
push
inc
add
jne
int
and
idivb
adc
and
pop
in
stc
push
scas
cli
cmp
push
arpl
push
sub
add
pop
add
shrl
xor
pop
outsb
roll
int
xor
sbb
xchg
mov
rcl
cmp
rcll
out
mov
mov
dec
adc
mov
int3
fs
in
out
mov
cwtl
adcl
mov
fcmovb
pop
jge
outsl
jp
mov
fmul
mov
mov
xor
sub
lods
fidivl
adc
addl
dec
dec
stos
xor
cwtl
out
push
fnsave
mov
loope
mov
or
push
lret
and
out
jmp
int
sub
sti
inc
iret
inc
mov
lret
aaa
subb
movsb
dec
scas
rclb
push
pop
popl
call
loop
jns
sbbb
ljmp
xchg
mov
insb
cmpsl
push
pop
mov
pop
or
jbe
rcrl
in
ds
pop
push
cmp
xor
int3
je
lcall
mov
mov
pop
sbb
leave
ja
mov
adc
mov
test
cltd
imul
sahf
jp
add
js
sub
push
dec
out
pop
push
xchg
push
sub
inc
lahf
push
clc
outsb
nop
sarb
ret
inc
popa
pop
cmpsb
mov
cmp
push
dec
pop
flds
in
je
xor
pop
or
push
aas
dec
call
fidivs
adc
cmpsb
dec
mov
xchg
lret
outsl
shll
mov
lea
xor
in
or
arpl
dec
mov
outsb
mov
mov
push
imul
rcr
movsl
jnp
addr16
test
and
rcrl
jmp
cld
out
jmp
adc
movsb
lahf
push
adc
add
pop
out
scas
or
cmp
out
call
dec
sub
inc
scas
cmc
and
add
je
mov
mov
mov
in
lahf
scas
aad
icebp
jmp
jg
in
popa
movsl
inc
push
mov
cld
adc
xchg
inc
inc
sub
pop
add
subb
test
loope
lods
jmp
mov
cmp
push
fimuls
lret
and
adc
jecxz
cmp
mov
aas
aas
sbb
hlt
jg
push
dec
pmuludq
add
xlat
inc
jno
inc
imul
pop
neg
insl
mov
aad
sbb
fisttpl
cmpl
daa
out
mov
cld
mov
jl
mov
xchg
cs
in
sarl
leave
inc
aas
arpl
loop
cmpsl
loopne
adc
jecxz
subb
call
lret
lcall
js
mov
or
lahf
sub
pop
sti
je
iret
jp
clc
mov
pop
pop
inc
or
mov
jae
lret
pop
sub
push
int3
hlt
dec
aaa
loope
inc
jge
or
push
jp
pop
out
adc
imul
xor
mov
fucomip
mov
jne
or
mov
hlt
pop
clc
push
or
adc
outsb
out
mov
mov
pop
outsl
sbbb
ret
inc
add
xor
push
add
pop
sahf
dec
jmp
xor
push
inc
xor
pop
insb
inc
aad
xchg
mov
cmp
icebp
inc
out
addr16
cmp
push
daa
repz
xchg
push
movsb
nop
mov
push
imulb
inc
xlat
adc
pop
pop
loop
lahf
pop
stc
into
jns
dec
and
fstpl
add
and
js
mov
stos
inc
jne
cltd
push
jge
stos
mov
and
jb
mov
stc
lods
inc
xor
insl
lret
les
idiv
stc
ffree
andb
mov
jae
mov
inc
dec
iret
push
cs
xor
add
xor
aaa
dec
aam
stos
das
sub
stc
int3
arpl
xchg
add
inc
jecxz
xchg
inc
loop
fistl
pop
adc
jl
mov
jae
mov
aaa
inc
test
ret
orl
dec
mov
dec
out
in
mov
jnp
loopne
test
jnp,pt
scas
jl
mov
pushf
movsl
fbld
daa
cs
xchg
cli
push
rcrb
xor
cmp
lret
stos
ffree
xor
lods
js
sbb
imul
xor
into
sbb
ss
mov
pop
rolb
imul
add
cld
push
pop
adc
stos
nop
ljmp
mov
cli
jnp
lea
cs
out
pop
xor
test
mov
lods
gs
std
fnsave
dec
sub
mov
dec
lcall
jo
fdivrs
js
mov
sbb
cwtl
xor
xor
dec
in
or
scas
push
repz
cmp
movsl
sbb
cmp
mov
xchg
add
cmpsl
lods
inc
popf
shlb
and
cwtl
loop
repz
out
nop
or
cmc
aas
jp
push
outsw
icebp
cs
xor
in
jge
movsl
roll
fidivs
test
cmp
push
pop
rcrl
xchg
adc
push
cmp
call
push
ds
sub
and
nop
jg
xor
and
and
mov
cwtl
into
jb
ljmp
leave
in
mov
pop
adcl
imul
lcall
cltd
in
cmp
lods
and
add
nop
scas
jp
das
and
xor
lods
cmp
js
and
mov
mov
xor
xchg
movsl
ljmp
hlt
test
setae
gs
add
adc
leave
push
fildll
pop
int3
insb
and
xchg
sub
xchg
lea
adc
fistps
outsb
out
rol
mov
pop
jge
or
and
in
clc
push
xor
imulb
sahf
int
xor
lock
es
in
and
sarl
in
or
mov
clc
pop
cmpsl
mov
lods
mov
mov
mov
pop
cli
dec
ljmp
out
mov
add
insb
and
test
lock
mov
ljmp
xchg
mov
pop
xchg
sub
pop
cmp
add
test
test
push
jecxz
aam
movsl
xor
packsswb
mov
or
or
ja
or
into
xor
xchg
gs
outsb
movsb
push
mov
sub
js
sub
push
mov
mov
fcompl
dec
fdivs
andb
adc
push
mov
arpl
rclb
lods
jg
dec
lds
movsb
cmp
xchg
pusha
fcmovne
stos
sub
jle
js
add
es
mov
int3
popf
cmp
div
pop
outsl
es
cwtl
push
aad
or
push
pop
sbb
jmp
dec
or
pop
mov
fistl
push
jnp
je
xlat
out
dec
stos
mov
rorb
bound
stos
inc
xor
mov
or
inc
sbb
in
jbe
lret
mov
rcl
scas
rcll
xchg
xor
aad
dec
jl
pop
cmp
xor
fnstcw
dec
lods
insb
mov
or
cwtl
lcall
mov
in
scas
inc
xchg
push
add
sub
add
out
lods
or
loop
jbe
mov
mov
hlt
insl
les
sub
and
mov
imul
shrl
fs
adcl
sub
sbb
iret
and
rorl
lret
and
dec
aas
shl
lahf
push
mov
shll
mov
lds
jl
lods
adc
fisubl
ficoms
mov
xor
out
push
pop
pop
enter
imul
mov
lcall
aad
in
outsb
inc
push
in
jbe
fists
inc
nop
inc
imul
or
mov
les
loope
lods
es
in
arpl
jno
lea
mov
push
icebp
pop
mov
sub
inc
mul
int3
pop
fcomps
outsb
out
fcmovnb
ljmp
shll
aaa
mov
aad
clc
pop
jb
shr
fadd
mov
fnstcw
inc
popf
mov
rorl
jp
add
push
lea
shrb
int3
sbbl
cmp
sbb
inc
inc
lcall
and
inc
cmp
test
xchg
ficoml
jg
insb
int3
pop
mov
and
xor
mov
inc
xchg
sbb
scas
push
test
jecxz
loop
mov
or
lds
mov
adc
dec
sub
imul
ret
movsb
and
movsl
xchg
nop
mov
outsl
call
pusha
mov
add
jp
mov
sub
sub
lret
mov
push
mov
dec
xchg
jp
aaa
fistps
test
push
push
adc
mov
ret
cmp
clc
test
adc
in
pop
pushf
and
jno
push
std
fldcw
iret
cltd
pop
pop
cmpxchg
pop
jae
movsl
repz
call
mov
xchg
stc
fdivrs
push
in
scas
adc
push
xchg
lret
in
inc
test
test
out
mov
mov
mov
test
mov
pop
in
into
xchg
fisttpll
mov
movsl
pop
cmp
lods
hlt
push
or
mov
fistps
lahf
shrb
lcall
mov
sub
je
cmp
shll
sub
rclb
nop
test
aam
mov
jno
mov
sub
fstp
loop
push
cmp
dec
lods
mov
fiaddl
jb
mov
mov
push
cli
mov
outsb
pop
fisubs
mov
add
inc
les
cmp
shll
sahf
xor
cld
mov
jle
cmpsb
loope
scas
add
shufps
push
into
add
test
pop
pop
adc
js
lods
xor
push
mov
jns
aaa
nop
and
or
pop
enterw
dec
push
add
pusha
fwait
inc
stc
sbb
fcoms
movsl
icebp
pop
dec
movsl
add
flds
add
lret
sbb
sbb
pop
int
in
lds
gs
cltd
push
not
push
mov
repz
lahf
jno
push
cmp
fwait
cmp
xchg
fmull
or
sahf
cmp
shll
in
enter
jae
push
adc
cmp
stc
in
jnp
add
inc
or
pop
jae
sub
xchg
into
loopne
fistps
jns
pop
fldcw
xchg
outsl
fdivrl
inc
into
fadd
cmp
shrb
xchg
aas
xchg
inc
mov
es
in
inc
out
mov
jecxz
mov
mov
imul
mov
fadd
push
jp
ret
push
pop
into
cs
add
xor
mov
popf
xchg
mov
ret
fwait
lcall
mov
ret
sub
lret
mov
je
aaa
arpl
rcrl
or
inc
ret
xchg
mov
jecxz
mov
push
shll
adc
sub
cmpsl
push
jl
stos
mov
xor
insb
pushf
jb
cwtl
orl
push
or
pop
mov
add
jle
aaa
push
data16
lods
in
xor
lods
add
in
sub
test
sub
jle
and
sahf
mov
jl
jp
push
lcall
pushf
jno
sti
jle
cmp
xchg
mov
push
sub
mov
ja
cmpb
add
lods
icebp
ds
mov
mov
jecxz
imul
incb
pop
daa
xor
fs
popf
jne
jge
adc
addl
xor
je
jg
out
ret
jns
and
xor
jnp
stos
fisttpll
push
enter
lahf
or
scas
inc
push
test
pop
icebp
xor
add
inc
push
shrb
push
sbb
cli
mov
sub
out
ret
imul
shll
dec
fisttpll
aam
sub
andl
jbe
repnz
ljmp
icebp
shll
mov
jmp
stos
inc
push
ds
int
add
xor
leave
sti
in
insl
fs
dec
shlb
inc
aas
aas
add
mov
test
popf
popa
test
sub
cmpsb
aad
pop
bswap
xor
in
pop
mov
or
cld
push
lret
out
jg
das
movsl
incb
imul
out
in
mov
lods
out
test
sti
sbb
push
cld
mov
and
pop
scas
push
push
sahf
imul
cmp
stos
dec
jae
mov
xor
dec
push
arpl
sub
inc
push
cs
xor
dec
stos
orb
dec
lret
movb
or
fldcw
jo
sbb
sbb
movsl
inc
or
xor
jb
push
dec
imull
outsl
lock
push
cmp
jmp
into
fs
pop
lcall
sbbb
stc
les
push
insl
mov
dec
ds
mov
cltd
push
mov
inc
xchg
cmpsb
sbb
jne
and
pop
xchg
add
dec
xchg
mov
fs
rcrl
mov
pushf
lret
jp
js
scas
sub
aaa
inc
sbb
fwait
jbe
pop
cs
cmc
cmp
test
fimuls
shlb
scas
xchg
mov
pop
lret
add
push
arpl
int
ror
popf
and
arpl
add
ja
sbb
bound
cli
pop
xchg
inc
pop
inc
jmp
cli
xor
mov
and
int3
add
jbe
cltd
mov
xor
test
lret
rcrb
test
sub
aam
cwtl
jmp
cmp
dec
sarb
xchg
stos
push
imul
test
jne
lcall
decl
push
push
mov
pop
outsb
daa
jp
mov
inc
jns
jae
xlat
sbb
push
das
repnz
aas
xchg
movsl
mov
adc
adcl
lahf
mov
ret
dec
and
or
jp
call
inc
add
cmp
and
loope
in
jbe
outsb
hlt
jo
or
inc
or
pusha
shll
push
push
xchg
adcl
ljmp
xchg
cmp
bound
into
cmpsl
dec
mov
sbb
add
lcall
pop
push
mov
fs
fadds
add
mov
test
adc
std
lret
mov
out
dec
push
ss
push
xor
jmp
add
outsb
notb
xchg
add
adc
rorb
or
test
lea
push
inc
inc
sbbb
stos
push
aad
sbbb
sbb
rolb
je
xor
push
pop
jb
nop
mov
and
outsl
adc
push
jp
scas
shr
xchg
xor
out
or
mov
int
movswl
out
cmpsl
scas
xor
dec
push
in
insl
jp
pop
add
stos
pop
je
enter
mov
dec
and
sbb
lods
adc
push
js
sub
std
lds
mov
cmpsb
xchg
inc
cmp
aam
cmp
cmp
lcall
pop
inc
mov
js
add
shrb
fsts
rclb
lahf
pop
inc
xchg
cmpsl
arpl
stc
idiv
or
ret
hlt
jo
movsl
mov
outsl
mov
loopne
xor
fimuls
negb
and
mov
jb
mov
scas
sbb
loope
insb
movsl
mov
leave
mov
fimull
inc
mov
imul
jno
insb
sub
jnp
inc
outsb
cmp
jns
cmp
or
and
mov
movsb
ss
insb
das
rcll
adc
jmp
xchg
or
jae
push
mov
xor
add
repz
ror
xor
and
lods
daa
fst
in
mov
push
fnstsw
sub
dec
and
jb
mov
xchg
mov
lods
fimuls
into
push
adc
push
mov
ret
ret
and
pop
out
push
xor
xor
cli
mov
sub
into
scas
nop
ja
fistps
mov
jp
pop
shll
rolb
xchg
push
inc
dec
loope
push
push
lcall
les
arpl
fs
sbb
mov
out
cld
inc
les
enter
repnz
mov
sbb
jne
mov
xor
push
mov
scas
popf
shlb
dec
scas
nop
push
sahf
xor
mov
cmp
sub
outsl
pop
push
psllw
lods
insl
test
lahf
jmp
xor
dec
dec
mov
xlat
sbb
sbb
lods
mov
outsl
xchg
mov
adc
dec
orb
cmp
push
and
in
sti
pcmpeqb
sarl
xchg
push
jno
rcrb
scas
imul
pop
jne
pushf
pop
test
rorl
mov
arpl
sub
add
jae
jne
and
daa
mov
fldcw
pop
cmpsl
xor
sbb
dec
cld
hlt
dec
push
cmp
movsb
out
xor
bswap
pusha
inc
ja
mov
inc
rolb
add
jecxz
pop
popa
movsl
push
adc
sahf
scas
ds
rcrl
cmp
mov
xor
fists
dec
daa
dec
mov
adc
sub
mov
shl
imulb
mov
push
aaa
push
xchg
ja
cmp
sub
pusha
in
cmp
mov
inc
pop
pop
push
adc
mov
jo
jnp
loop
loopne
jge
cmpsb
jns
dec
imul
sub
or
cmpsl
outsl
inc
cmp
mov
mov
sub
test
pop
out
mov
dec
mov
icebp
cmp
dec
xorl
jp
xor
shll
shll
xchg
in
sub
dec
and
ljmp
adc
lahf
adc
mov
and
dec
in
int
inc
outsb
mov
mov
add
into
dec
xor
arpl
repnz
in
xor
repz
test
lea
mov
lods
in
js
stc
inc
cmp
lahf
adcl
cmc
push
aaa
add
shll
and
dec
mov
in
nop
pop
xor
loopne
mov
and
in
mov
xchg
test
adc
in
adc
std
mov
cmp
adc
sub
aad
in
jnp
add
sbbl
mov
jg
mov
into
jb
cwtl
push
enter
sbb
sbb
push
pushf
push
inc
aaa
imulb
sbb
xchg
js
and
nop
mov
hlt
loop
or
stc
mov
mov
xor
test
jnp
dec
lds
push
add
push
mov
fisubrl
ret
js
in
mov
dec
xchg
outsb
cmp
lret
xor
arpl
dec
mov
stos
push
mov
adc
inc
cmp
dec
enter
mov
and
adc
jns
dec
jns
clc
pop
leave
xchg
stc
jmp
test
int
push
test
ret
jmp
or
jmp
dec
das
adc
push
data16
jnp
and
inc
push
xchg
add
sub
cmp
lods
scas
pop
flds
or
scas
icebp
mov
fs
test
sub
aaa
ljmp
mov
subb
jnp
sbb
or
inc
xchg
ret
push
sbb
popf
push
in
pop
sahf
inc
sub
cs
scas
out
jns
loopne
inc
cltd
mov
cmp
pop
jo
lds
mulps
data16
mov
xor
jecxz
out
push
push
mov
sub
push
pcmpgtb
ljmp
sarl
pop
icebp
dec
mov
stc
inc
sub
mov
dec
add
ljmp
mov
push
test
lods
loopne
test
cmp
les
mov
cmp
arpl
test
or
mov
push
mov
cmp
push
fsubl
cwtl
cmp
cmp
loopne
scas
or
jecxz
cmp
sti
lret
xchg
shrl
push
insb
add
popa
push
cmp
shrb
fdivs
rcll
xchg
fidivs
in
dec
inc
sbb
mov
out
inc
add
sbbb
dec
and
dec
popa
jp
dec
mov
stc
outsl
test
les
push
jb
fs
sarb
and
pop
adc
es
test
xchg
les
mov
sub
test
mov
sub
xor
nop
shrb
and
in
xchg
jge
xor
cmp
lcall
xchg
popf
inc
lcall
fistps
jg
mov
cld
sub
xor
stos
mov
mov
enter
xchg
dec
mov
popf
jg
int
seta
sti
push
jp
push
jne
mov
inc
and
xchg
cltd
mov
xchg
jb
mov
xor
ljmp
pusha
sub
cltd
test
xchg
push
test
pop
sahf
mov
mov
pop
aad
dec
jl
pop
push
les
imul
xchg
out
mov
dec
mov
sbb
push
xchg
xor
mov
xchg
adcl
addl
test
cmp
push
cmp
push
xchg
or
fs
inc
jmp
imul
inc
fsubr
pushf
jge
sub
fs
push
in
dec
fisttpll
popf
mov
jbe
insl
sub
fsubr
in
cs
adc
loope
rorl
leave
cwtl
inc
push
xchg
fdivrl
mov
mov
mov
and
add
adc
mov
inc
add
mov
cwtl
inc
ret
push
int
fbld
adc
clc
push
in
mov
mov
xor
pusha
lret
mov
aad
add
sbb
adc
sub
dec
sbb
popf
inc
mov
dec
jae
mov
int
loopne
loopne
xor
aad
and
sbb
imul
das
imul
ss
pop
xor
lods
and
jle
int
mov
mov
mov
inc
pop
mov
scas
push
shl
inc
clc
dec
add
cmp
lds
dec
and
xchg
sbb
jp
push
pop
xlat
sbb
pmullw
out
test
or
mov
lcall
xchg
xchg
dec
jnp
add
pusha
sbb
cltd
outsb
mov
mov
into
sbb
dec
cmp
inc
cmp
dec
cmp
pop
xlat
cli
aam
xor
push
incb
sub
cltd
lret
scas
imul
lret
jnp
mov
dec
lods
xchg
inc
loope
insb
mov
sti
push
cmp
mov
jno
cmc
mov
out
pop
hlt
pusha
adc
dec
ret
lds
add
test
or
pop
xchg
and
jnp
and
cmpsb
test
clc
sbb
mov
xchg
lods
pop
sub
and
jb
xor
adc
pop
jno
mov
push
cmp
test
lock
test
pop
jnp
jmp
and
or
shlb
pushf
lock
xor
push
jae
test
sbb
inc
push
and
sub
insl
or
cli
inc
cmp
xchg
mov
pop
lea
fmulp
dec
fdivrp
push
push
lods
mov
insl
pop
hlt
mov
sub
pop
mov
arpl
sbb
addl
popa
rorb
mov
add
in
hlt
dec
push
aam
mov
std
ljmp
dec
dec
iret
adc
lret
sub
punpcklwd
jne
xchg
mov
jae
out
add
adc
jnp
fsubs
stos
dec
aam
inc
inc
imul
das
mov
push
pop
outsl
push
mov
xchg
cmpsl
popa
and
sahf
fimuls
in
lret
dec
stc
add
cmp
adcl
xchg
or
mov
dec
cltd
lahf
dec
mov
fsubrp
and
adc
mov
xlat
mov
push
inc
xorb
push
dec
sbb
push
or
adc
cs
xchg
lret
imull
dec
popf
clc
imul
ret
xchg
scas
or
pop
dec
in
adc
xchg
xor
cmp
iret
rolb
inc
cmp
lret
cs
mov
bound
into
dec
add
ret
cld
leave
dec
into
jl
pop
decb
inc
sbb
jne
sub
lcall
fists
movsb
rcrl
rclb
arpl
mov
idivl
cmpsl
xor
dec
out
test
ss
inc
out
bound
mov
ja
sti
lods
lret
shlb
cmp
sahf
ret
dec
push
mov
not
jge
xlat
dec
cmc
test
xor
or
orl
mov
mov
mov
cmp
sbb
jne
imul
and
hlt
push
inc
pushf
and
push
pusha
nop
sub
out
and
lret
mov
jg
fisttpll
lret
or
xor
xchg
cmpl
leave
sarb
mov
xchg
mov
test
in
adc
xor
rcrl
shr
out
cmp
js
bound
sbb
movsb
fidivl
ret
lea
cmp
or
jae
mov
das
jne
and
pop
push
ja
pop
hlt
loop
cmp
mov
fwait
jl
fistps
loop
mov
inc
dec
movl
rolb
imul
rorl
test
out
jge
es
xor
lock
mov
sbb
add
lcall
stos
inc
iret
xchg
xchg
shl
stos
adc
dec
mov
stos
pop
je
stos
and
add
loopne
jbe
lds
pop
std
mov
repz
sbb
push
or
mov
leave
sbb
jne
fs
mov
cmc
shll
sahf
pop
lods
das
push
es
inc
sahf
aas
testb
daa
sbb
popa
idiv
jae
outsl
xchg
push
jmp
cs
enter
jae
decl
push
aaa
mov
out
lret
xchg
out
enter
sub
pushf
inc
cwtl
push
sbb
out
or
outsb
out
mov
or
daa
iret
mov
adc
fisttpll
movsb
arpl
inc
movsb
jae
pop
test
jge
addr16
inc
prefetcht2
sbb
shll
popa
adc
inc
out
sub
jl
push
ficompl
mov
sub
outsb
jb
pop
cli
in
xchg
cltd
adc
jnp
leave
adc
movsl
js
push
jg
sahf
std
jae
scas
pushf
push
push
in
in
lcall
pop
fcompl
jo
mov
and
nop
int3
inc
fcompl
shrb
push
jmp
adc
dec
mov
jns
stos
and
arpl
push
enterw
test
mov
add
and
xchg
mov
ja
cmpsl
movsl
test
cmp
enter
insl
ret
mov
ljmp
push
xchg
and
add
mov
jge
sub
jle
and
andb
mov
bound
popf
lods
mov
stc
xor
xor
call
imull
or
mov
mov
ljmp
jns
and
hlt
mov
push
jl
aaa
add
adc
loope
add
jecxz
push
xor
sbbl
int3
flds
xchg
filds
mov
stc
sbb
bound
cld
lret
mov
xchg
jg
jecxz
clc
jge,pn
test
xchg
sti
adc
jl
pop
repnz
ljmp
lea
dec
pusha
push
fiaddl
jecxz
mulb
xchg
bound
mov
sub
inc
sbb
push
mov
xchg
out
sbbl
xor
fdivp
int
cmpsb
pop
mov
dec
or
mov
call
push
movsb
mov
lods
jle
ret
lods
mov
cmp
mov
cltd
xchg
aaa
icebp
dec
cmpsl
mov
xchg
out
lcall
sbb
std
pop
jns,pn
mov
pop
jmp
xor
push
or
lods
xlat
clc
negb
and
test
push
jb
addr16
fsubrs
inc
jecxz
and
mov
adc
lret
int3
push
out
test
add
pop
ljmp
mov
pop
dec
test
xchg
imul
cmpsl
cwtl
or
inc
xchg
add
scas
outsl
mov
mov
add
subb
cwtl
imul
mov
sbbl
mov
loop
sti
test
xor
es
mov
shrb
mov
call
jo
stos
sbb
mov
xor
fwait
out
xor
cmp
pop
and
clc
pop
sub
out
popa
pop
addr16
push
cmp
dec
outsb
aad
lret
std
add
jge
or
sbb
lretw
pop
xor
out
adc
imul
aaa
xor
out
mov
xchg
xchg
xchg
mov
and
insb
add
lods
adc
mov
cltd
frstor
lcall
adc
ffreep
stc
xor
dec
sti
jb
cmp
mov
mov
aaa
mov
les
inc
jnp
fldl
pop
ja
or
lods
mov
das
jg
xchg
outsb
decl
div
xchg
test
and
xchg
dec
rorb
stc
jne
sub
or
js
lock
mov
pop
adc
fimull
ror
iret
jns
idivb
cmc
xor
ror
fs
or
push
and
mov
scas
cld
das
dec
fld
adc
jae
outsl
cli
adc
stos
cwtl
out
pusha
inc
sub
enter
or
and
lahf
jne
lret
jl
jns
jmp
cmp
or
dec
xor
lret
pusha
adc
sti
sub
inc
in
pushl
inc
mov
orl
push
mov
movsl
lods
pop
jl
stc
mov
dec
scas
lret
loopne
rclb
aad
add
xchg
clc
dec
stos
cmpb
cmp
xor
lcall
fidivs
dec
inc
cmp
jb
aad
pop
xchg
push
jne
enter
sub
inc
mov
cmp
cmc
aad
sub
and
sbb
mov
lcall
lds
lods
daa
jecxz
mov
sbb
inc
lods
movsb
mov
fldenv
fs
lcall
popa
sub
cmp
sbb
jmp
inc
sbb
mov
cwtl
repz
adc
adc
adc
jl
jno
add
xchg
xchg
mov
pop
in
ror
sti
leave
dec
cmpsb
and
inc
jns
add
jbe
divb
test
lea
xchg
xchg
dec
mov
scas
push
and
add
pop
xchg
outsl
xchg
push
push
lods
data16
sub
add
pop
scas
dec
fwait
in
xchg
das
shrl
sahf
xchg
pop
xlat
jmp
subl
and
inc
sbb
aas
pop
sub
fistl
lret
outsb
sti
ret
fdivrs
pop
dec
sahf
or
jnp
test
das
inc
out
add
dec
dec
sbb
mov
negl
imul
or
cmpsl
or
pop
or
je
xchg
pop
cltd
adc
ja
cmp
into
or
mov
or
fstpt
pusha
inc
popf
lea
dec
fstpl
hlt
adc
or
fstpt
int3
js
pop
lret
mov
adc
inc
mov
push
sub
mov
test
xchg
ja
add
adc
push
mov
fnstenv
dec
subb
movsl
rclb
andl
mov
sarl
mov
pop
pushf
or
jge
and
daa
mov
or
jo
popf
fst
or
andl
repnz
xor
cmp
and
sub
mov
fwait
cmpsl
inc
or
mov
je
sbb
insb
push
out
sub
into
subb
daa
out
jecxz
movsl
cltd
mov
int
or
jo
push
or
negb
mov
rol
mov
jno
cmpb
push
push
sub
mov
jne
fisubs
cs
add
cli
pop
mov
out
push
mov
inc
data16
icebp
ss
test
js
dec
jnp
test
add
call
mov
and
mov
ror
popf
shll
negb
fdivrs
test
lcall
pop
pop
stos
sbb
outsb
sub
inc
jnp
popf
inc
or
xor
jnp
in
out
push
sbb
xor
xchg
int
shrb
aam
stos
jae
lock
fildll
jp
adc
sub
jbe
pop
sarb
xlat
lods
and
call
pop
cmpsb
mov
test
xor
mov
xchg
ljmp
add
cmp
enter
add
mov
xchg
repnz
outsl
aad
test
and
and
mov
jns
add
inc
cmp
cmp
xor
and
cltd
xchg
cmp
fadds
leave
xchg
mov
cwtl
pop
insl
addr16
push
jo
js
pop
shrb
dec
mov
jno
in
aaa
xor
dec
sub
or
pop
fs
or
inc
mov
shrl
push
pop
or
pop
jns
call
push
cli
sub
mov
imul
mov
cmpl
sub
xchg
rclb
shl
clc
mov
in
gs
outsl
jmp
loopne
pop
fcoml
jl
stos
mov
adc
xor
int
repnz
incb
scas
repz
mov
xlat
inc
fwait
mov
stos
xor
cmp
sbb
xchg
fisttps
arpl
test
inc
pop
dec
jg
ja
push
mov
mov
push
sub
stos
sahf
cld
lcall
jno
inc
insl
int3
movsb
or
mull
nop
lods
aaa
mov
mov
cld
mov
mulb
jns
fisttpll
lcall
sbb
push
fiaddl
pop
pop
ret
mov
xlat
xchg
mov
sbb
orb
pop
stos
jg
or
jmp
sbb
subb
inc
mov
xchg
mov
mov
lods
jmp
push
daa
into
out
aaa
out
subb
xchg
out
mov
loopne
pop
pop
das
xchg
loop
cltd
push
mov
pop
inc
js
mov
mov
movsl
push
pushf
push
lcall
mov
out
into
test
shl
outsb
sub
adc
xchg
mov
in
mov
or
pop
push
adc
pop
inc
inc
or
pop
fs
hlt
imul
pop
xor
cmp
pop
pop
test
les
push
ja
data16
mov
pop
pop
daa
inc
popa
stos
movsl
lcall
stos
mov
xchg
or
loope
insl
pop
das
jno
jo
pushf
push
pop
cmc
push
out
fsts
jb
add
adc
dec
pop
test
ja
sahf
popa
call
stc
fisubrl
lret
movsb
jne,pt
imul
aas
outsb
sub
xchg
fucom
fwait
ret
dec
push
js
mov
in
dec
xchg
std
adc
or
dec
fisubrl
push
pop
sbb
or
adc
sub
add
stos
sti
addr16
sub
lcall
out
int3
fcoml
xchg
and
fisttpll
add
stc
jmp
lret
and
bound
rorb
pop
lds
adc
je,pn
pop
dec
int
ficoml
jno
lahf
and
jle
cmp
sub
lret
movups
mov
xchg
std
dec
out
mov
add
push
or
fwait
movsl
fucomi
ja
pop
ss
lds
aas
push
shl
xor
push
mov
mov
out
data16
aaa
lret
inc
mov
mov
mov
in
inc
inc
mov
test
add
mov
cli
push
mov
out
xchg
repz
test
pop
repz
xor
into
sahf
negb
xchg
adc
add
push
xchg
sub
insl
inc
insl
push
ss
cmp
ja
sahf
push
mov
xor
mov
push
add
dec
xchg
idivb
in
inc
test
and
dec
jbe
push
fs
outsb
sahf
mov
popf
cmp
dec
xor
fcompl
xor
adc
pushf
jg
add
mov
mov
xchg
xchg
and
aaa
add
fmuls
xlat
int3
xchg
test
xchg
pop
and
pop
xchg
sbb
mov
shll
adc
mov
add
inc
sbb
sarb
or
std
repz
std
and
mov
push
mov
ljmp
cmp
sub
xchg
ja
add
jecxz
call
push
xchg
movsl
pop
sub
repnz
jne
and
es
mov
push
idiv
mov
adc
jo
pop
sbb
push
icebp
adc
je
push
mov
shlb
push
sahf
jno
push
fs
sbbb
scas
mov
push
push
inc
cmpsl
jb
inc
lea
or
outsb
pusha
loop
adc
negl
mov
add
xor
jae
lds
lock
dec
mov
mov
and
sbb
mov
or
dec
jge
jecxz
mov
frstor
push
fmulp
pop
test
pop
popa
mov
xchg
divl
sbb
sub
add
jnp
addr16
or
dec
leave
mov
bound
or
push
push
stos
push
rorl
add
xchg
aas
xor
mov
add
pop
leave
jnp
insb
xchg
arpl
cwtl
fisubrs
popf
stc
adc
mov
mov
in
add
aad
std
lret
push
add
fcomi
leave
inc
sub
mov
dec
xor
sbb
xlat
les
scas
adc
rorl
jge
gs
xchg
adc
pop
addl
cmp
leave
aad
mov
lods
add
pop
call
in
or
cld
inc
dec
js
lods
xor
jae
dec
cli
adc
inc
lds
lcall
xchg
rcll
out
dec
test
jnp
das
sub
sbb
mov
std
mov
mov
mov
mov
cmp
or
mov
xor
fcomps
xor
add
jae
dec
or
jecxz
fbld
insb
push
lret
frstor
test
jbe
lods
test
movsb
rcrb
inc
jge
hlt
loopne
xchg
jmp
sbb
sub
add
dec
mov
push
dec
in
push
or
xor
popa
std
and
popf
mov
stos
mov
mov
cmp
lcall
lods
jmp
mulb
jmp
cmp
out
sbb
or
imul
mov
cmp
jmp
cmp
jmp
or
push
nop
fwait
mov
add
cmp
call
mov
je
pop
jp
lds
mov
add
mov
lock
popf
adc
divl
icebp
mov
es
lret
das
sbb
xchg
cmp
xor
pop
jb
adc
fimuls
push
push
mov
das
bound
pop
dec
xchg
les
fsub
aaa
sarl
xor
clc
loopne
rcl
call
pop
mov
dec
fisubrl
enter
add
out
in
mov
add
addl
ret
mov
xchg
and
pushf
mov
scas
mov
xor
frstor
sbb
mov
sbb
sbbl
jmp
negl
xor
mov
ret
mov
sub
ss
imul
cmp
cmpsl
fcompl
sub
hlt
fucom
addl
add
jl
outsl
repz
or
andb
lret
mov
ja
adc
sbb
dec
pop
and
and
sarb
xchg
mov
arpl
add
je
mov
or
cmpsb
jecxz
and
mov
lock
push
mov
pop
sub
lcall
sbb
subb
pop
lock
out
or
mov
add
lods
xchg
negb
aam
push
test
in
and
stc
shrl
fsts
xchg
jmp
aaa
out
repz
pop
push
mov
int
mov
sub
sub
outsl
xchg
mov
sbb
or
in
mov
jo
jle
cmpsb
push
mov
das
cmp
pop
stc
sbb
add
cld
ret
ss
sub
xor
stc
inc
mov
mov
aad
fimuls
and
xchg
inc
jno
sbb
inc
pop
sbb
sub
sbb
mov
inc
push
gs
ljmp
mulb
sarb
pushf
mov
pop
in
js
out
adc
mov
jg
aad
inc
xlat
xchg
outsb
arpl
aaa
pushf
imul
xor
pop
mov
mov
aas
out
mov
and
push
call
imul
out
jne
int
nop
fsts
test
sub
negb
cmpsb
sbb
jecxz
dec
jne
sbb
cmp
dec
jns
jle
pop
addb
das
xor
in
xchg
and
lea
popf
adcb
je
test
inc
sti
loopne
int3
mov
pop
pop
dec
insl
mov
xchg
mov
out
insl
frstor
mov
sahf
mov
lret
pop
add
mov
mov
dec
xchg
or
and
in
sub
jno
xor
jp
push
loope
inc
and
cmp
jae
and
sub
sbb
adc
jl
jae
mov
mov
xchg
dec
out
inc
scas
insl
adc
jg
cmp
jg
shl
cmp
daa
or
adc
mov
mov
sbbb
sahf
jno
add
das
jl
xor
push
jmp
pop
aas
lret
lret
xchg
test
cmp
push
dec
aam
mov
mov
inc
jae
push
dec
xchg
rcll
push
xchg
ja
jbe
std
movsl
jns
insb
mov
push
xchg
jo
and
ja
mov
fwait
dec
inc
xchg
dec
fcoml
jns
jge
xchg
jmp
outsb
out
data16
jo
xor
add
mov
and
xchg
xor
in
mov
es
pop
int3
push
or
das
xchg
xchg
in
xchg
sbb
and
mov
imul
cmp
rcll
dec
xor
daa
lods
ja
push
cmpsb
fwait
notl
xchg
jmp
cltd
stos
push
insl
loopne,pn
inc
jo
int3
mov
and
jne
imul
stos
mov
inc
mov
mov
jl
inc
nop
lods
lods
mov
xchg
dec
sbb
lret
push
in
and
mov
and
ret
xchg
aad
inc
int
sbbl
repnz
inc
or
xchg
xor
ret
jbe
test
clc
lods
xor
fisubrl
cmp
rolb
add
stos
cmp
push
jl
fwait
mov
mov
pop
mov
pusha
test
push
jnp
xchg
ja
push
mov
mov
mov
hlt
xor
xchg
xor
aam
jge
cmp
lock
mov
push
shll
mov
lock
ds
mov
pop
or
mov
jle
jl
pop
xor
sbb
mov
jb
and
data16
push
or
sahf
sub
and
fmuls
fadd
mov
push
sub
scas
mov
xchg
mov
mov
and
test
xchg
jae
je
aam
xor
lock
leave
fcmove
in
sub
imul
js
jmp
pop
dec
xchg
cmp
add
jp
push
jecxz
pop
push
sub
stos
js
push
mov
pop
mov
les
daa
mov
xor
jbe
lds
lret
xchg
push
out
lods
gs
leave
scas
jl
jecxz
push
aad
dec
enter
inc
repz
sub
pop
mov
enter
and
cld
into
mov
mov
pop
fdivrp
xchg
lret
xor
xchg
push
jbe
int3
sub
test
arpl
loop
xchg
jne
xor
imul
stos
mov
and
xchg
push
pushf
out
loope
dec
iret
clc
xchg
pop
in
dec
imul
cmp
xchg
lods
add
sub
popf
fisttpll
fs
popf
xchg
mov
sub
push
xchg
pusha
cmp
pop
sbb
outsl
cmp
loope
sbb
lret
aad
and
fs
push
cmpb
dec
adc
je
ljmp
push
lcall
push
xchg
fnstsw
and
ss
mov
sbb
push
aas
ret
push
xchg
lret
out
stc
je
or
addb
or
and
xor
xor
adc
xchg
cmc
loopne
data16
jl
jecxz
mov
fistpl
sbb
pop
jne
and
test
popl
test
xchg
jns
negl
inc
pop
cltd
std
adc
jg
jg
or
inc
loopne
mov
fsubr
int3
pop
repnz
cmpl
lds
and
lahf
inc
jo
bound
andl
and
sbb
ds
mov
cmc
jp
add
das
sarl
aas
sbb
pop
mov
orl
jae
fcmovnu
jl
dec
sub
mov
xor
outsl
lret
mov
cmpsl
into
pop
cs
adc
jns
inc
pop
negb
int
mov
jnp
and
insb
std
or
lods
mov
lods
insb
sar
fistl
jge
cmp
imul
jl
mov
or
nop
dec
push
jle
cmc
mov
mov
lods
dec
addr16
popf
jo
scas
push
inc
leave
jns
lret
xchg
pop
add
sbb
mov
nop
imul
adc
push
stos
insb
mov
push
out
sub
cmp
pop
in
adc
into
js
dec
sbb
mov
fimuls
iret
cmpsb
cmp
stos
pop
popa
push
mov
dec
mov
lret
lods
fs
jg
inc
scas
nopl
pushf
xor
sbb
xor
adc
xlat
pop
sbb
cltd
shl
jae
mov
test
mov
imul
pop
pop
push
xchg
fidivrl
rol
out
gs
add
push
push
xor
mov
pop
popa
call
cmp
sbb
pop
lret
mov
movl
lods
xchg
pop
xorb
sarb
sub
add
or
xchg
std
xchg
in
fiadds
mov
xchg
push
mov
and
aam
adc
ss
push
lods
push
pop
out
or
adc
cltd
lea
mov
and
push
or
aam
jle
mov
dec
sub
mov
mov
push
xchg
je
pop
pop
mov
sahf
xor
inc
adc
add
dec
and
adc
mov
jbe
push
into
xor
fdivs
mov
andb
test
jg
lea
cmp
stos
inc
mov
cmp
add
std
push
pop
sub
mov
pop
lea
in
pop
lods
dec
outsb
mov
pusha
inc
mov
cmp
das
pop
and
mov
ljmp
xor
adc
pop
cs
and
frstor
rep
adc
mov
fidivs
push
cs
jge
stos
sbb
xchg
push
out
xchg
sbb
das
pop
ud2
add
jmp
add
mov
jp
cmp
mov
mov
out
mov
mov
or
js
fsubl
adc
push
mov
sub
notb
test
sub
jecxz
mov
lds
inc
fisubrl
mov
in
shll
pop
mov
sbb
inc
mov
dec
push
add
add
pop
scas
test
bound
add
stos
fsts
xor
das
inc
jg
int3
pop
subb
repz
add
pop
cmp
fdivrl
xor
jmp
jp
xlat
clc
add
xor
sub
data16
arpl
outsl
mov
lods
xchg
mov
lock
jbe
repnz
insb
popa
xor
push
mov
xorl
movsb
or
pop
xor
pop
enter
mov
mov
mov
fimuls
inc
sbb
std
aas
mov
sub
stos
scas
mov
xchg
and
and
push
inc
mov
loope
mov
icebp
xor
and
out
dec
pop
mov
pop
addr16
movsl
out
pop
outsb
lret
mov
jle
adcb
into
lahf
ss
gs
loopne
jp
or
subb
jg
inc
jb
loop
call
js
push
mov
or
orl
in
pop
push
add
jae
cmc
testb
xchg
fcomi
push
mov
test
pusha
js
sarl
sub
cmp
out
mulb
xchg
jns
push
stc
rcrb
push
jns
mov
inc
mov
ret
push
mov
and
out
dec
sbb
inc
insb
fildll
mov
test
je
dec
mov
xchg
test
imul
inc
xor
jmp
pop
cmp
jno
add
mov
ljmp
scas
mul
dec
inc
or
lret
mov
mov
mov
or
dec
flds
xchg
mov
push
mov
in
dec
pop
and
sbb
sub
arpl
sbb
ljmp
pushf
icebp
es
mov
pop
mov
sub
enter
popa
mov
sbb
xor
jmp
xchg
addl
mov
sub
shll
cmp
jns
mov
insb
inc
int
pop
dec
pop
inc
sub
cltd
pop
xor
and
ljmp
and
mov
flds
and
xchg
jbe
leave
enter
int
push
xor
pop
mov
sbb
inc
cs
sub
mov
push
les
je
lcall
mov
in
popf
out
ljmp
pop
lahf
adc
pop
loop
cwtl
pop
arpl
aad
sarl
repz
mov
or
mov
cli
sub
sub
add
loopne
in
std
je
sub
add
fcmovnbe
fnstcw
xorl
rclb
xlat
push
adc
into
movsb
pop
mov
jp
sbb
dec
xor
stc
mov
out
mov
ja
stc
adc
shr
addr16
push
loope
jl
aam
jb
pop
lret
stos
enter
fsubrs
aad
xchg
mov
cwtl
or
cmp
pop
xchg
test
jmp
lcall
push
addl
inc
int
mov
and
aaa
mov
sub
push
pop
leave
ret
iret
sbb
stos
das
loope
mov
mov
into
ja
mov
or
dec
stos
xor
mov
xchg
rcrl
adc
sbb
dec
xchg
push
sub
xor
mov
pop
push
popa
mov
ja
sahf
fs
add
push
xchg
xchg
xor
aad
bound
shl
push
orb
jp
adcl
cs
sub
addr16
xchg
enter
cmpsl
mov
mov
inc
pushf
sub
inc
aad
xchg
lret
std
xchg
dec
cmc
and
push
and
imull
mov
addr16
pop
add
add
push
insb
fbstp
cmp
add
imul
cs
and
push
xchg
xchg
call
fiaddl
xor
cmp
mov
in
in
out
cwtl
pop
out
lea
stos
or
rcll
jg
stos
sbb
mov
sti
arpl
push
add
cmp
insb
cli
lds
lods
stos
jnp
adcl
push
daa
lods
out
leave
jae
push
dec
orl
fstps
pop
and
mov
insb
mov
push
inc
push
jbe
mov
mov
sbb
push
mov
ja
lahf
dec
cmp
dec
push
sbb
cmc
jae
jno
bound
icebp
jmp
and
fld
mov
fld
lock
dec
inc
jo
mov
out
movsb
out
fwait
jns
stc
add
sub
movsl
out
out
adc
sub
adc
loope
sub
jmp
jp
out
push
xor
add
cmpsb
push
xor
push
or
outsb
push
sbb
mov
push
xor
push
mov
add
clc
mov
cs
icebp
imul
dec
jbe
stc
scas
jae
mov
dec
push
ret
jno
add
fnstsw
movsb
fpatan
mov
add
rolb
sub
mov
roll
lock
mov
add
fdivr
xchg
add
pop
shl
pop
es
cs
pop
pop
add
daa
aad
fimull
mov
mov
and
sti
push
mov
sbb
xor
cli
pushf
sbb
push
in
mov
data16
jo
xchg
jb
jae
ljmp
gs
fldcw
pop
cmpsb
inc
or
dec
xchg
dec
fcoms
xor
pop
leave
cmp
pop
and
mov
iret
or
fcoms
cmpsb
icebp
add
inc
mov
orl
push
pop
test
xchg
in
sub
lcall
int3
lret
cmp
call
negb
xchg
enter
xor
repz
adc
xor
cmp
adc
ss
mov
sbb
inc
mov
dec
jae
cmp
shl
pop
bound
test
push
sbb
fisubrl
jns
add
je
pushf
xchg
ja
pop
movsl
mov
adc
loopne
lods
mov
add
dec
adc
lcall
out
adc
bound
jge
fwait
and
sahf
mov
add
and
xor
fstpt
push
daa
adc
pop
jle
or
fstl
fldcw
jo
cmc
sbb
pusha
imulb
mov
nop
loopne
bound
jl
out
out
pop
inc
dec
mov
sub
push
lahf
popa
jb
inc
sub
insb
stos
jno
testb
xor
cs
push
lcall
inc
xchg
jp
xchg
inc
or
lods
dec
divb
mov
push
push
std
movsb
cmpl
xor
xchg
xchg
xchg
mov
cmp
idivb
adc
repz
shrb
adc
rcl
outsl
imul
push
jb
outsb
std
inc
xor
pop
jge
adc
lcall
shrl
out
sub
push
fistpll
dec
mov
jp
mov
es
orl
aad
push
arpl
fcoml
xadd
orl
cmc
ja,pn
inc
and
pushf
and
push
js
lcall
add
ret
mull
js
into
dec
insl
pushf
cs
jg
in
dec
sbb
push
loopne
mov
xchg
pop
jg
movsl
adc
xchg
mov
test
add
js
rolb
mov
fstp
jge
cmc
or
fidivrs
scas
mov
lea
inc
or
cmp
scas
push
xorb
andb
mov
out
mov
int
xor
dec
fisttpll
pop
pop
ss
xchg
push
mov
and
popf
dec
cwtl
pop
shll
jmp
ja
sti
rolb
lahf
push
or
xlat
das
pop
ja
xor
loop
cmp
fwait
sub
push
cmpsb
out
mov
lock
nop
xor
mov
xor
sbb
pop
mov
add
pop
scas
fisubrs
mov
js
popf
repnz
ret
mov
data16
div
xor
pop
out
xor
outsb
mov
inc
movsl
adc
push
les
inc
sahf
mov
cld
sub
inc
cmp
push
jns
ret
stos
dec
push
fs
in
sbb
shll
jge
mov
dec
lock
int3
mov
adc
mov
add
add
popa
cmp
xchg
mov
or
cmp
xchg
outsl
inc
jnp
dec
xor
mov
xchg
sub
cmp
and
loop
or
cmp
xchg
aaa
int
popa
xchg
xchg
andl
jne
and
movsb
sbb
jno
cmp
adc
cmpsb
insb
mov
orb
fimuls
inc
sbb
lret
outsb
cmp
push
pop
popa
and
std
call
lret
cld
cmp
ficoms
and
js
insb
loopne
ljmp
orb
insb
aaa
scas
or
sahf
mov
ret
pop
xor
dec
jp
sub
inc
js
inc
and
dec
push
push
loop
addr16
cmpsb
outsl
in
cli
xor
or
mov
js
sub
bound
imul
test
vpunpckhbw
scas
fdivrs
lods
sahf
dec
andl
roll
xchg
cwtl
ret
repz
in
xchg
sbb
pop
das
and
pushf
rol
ret
xor
loopne
test
pusha
pop
js
lret
cwtl
fs
fistps
fcmovnbe
cmpsb
xlat
es
frstor
addr16
adc
lds
data16
sub
stc
pushf
push
shll
push
xchg
int3
and
daa
inc
fcomps
push
sub
and
sbbb
jns
inc
lret
pop
cmp
loopne
xor
aam
mov
push
jae
pop
in
jbe
popa
mov
leave
sub
sub
ss
int
outsb
insl
xor
outsl
sahf
stos
stos
and
mov
fwait
arpl
fnstcw
dec
add
jge
push
dec
and
cs
hlt
wbinvd
out
adc
cmc
xchg
test
cmp
lds
sub
sub
imul
or
dec
faddl
xor
fisttps
xorl
xor
xor
xor
or
mov
xchg
mov
inc
stos
cmp
es
adc
jbe
sarb
loopne
notb
mov
sbb
add
mov
cmp
adc
into
mov
sub
lcall
clc
outsb
xor
and
mov
jne
fcoml
inc
movsb
repnz
neg
fisubl
mov
bnd
data16
or
or
mov
hlt
int3
dec
jbe
subb
daa
mov
mov
pop
xchg
adc
inc
stos
add
cli
stc
imul
xor
or
addb
scas
mov
loopne
cmp
jl
or
sub
cwtl
std
dec
xchg
jae
add
nop
pusha
sbb
int
icebp
cmp
pop
adc
out
sbb
push
mov
jb
data16
xchg
xor
jmp
dec
pop
mov
mov
popa
push
mov
sar
dec
jne
stos
push
push
jge
mov
fnstcw
stc
cmc
mov
ljmp
sbb
jne
cltd
adc
or
mov
sbb
adc
repnz
dec
and
fld
push
insl
test
iret
into
add
test
loope
cmpsb
aaa
mov
test
in
push
dec
mov
int
mov
daa
repz
test
shrb
scas
jmp
inc
movsb
jno
dec
adc
out
dec
push
xchg
jb
loop
lret
sub
sub
fadds
out
rolb
fs
fdivrl
scas
fildll
cmpb
cmp
call
push
push
or
jmp
mov
mov
inc
cmc
leave
cmp
addr16
mov
add
mov
push
cli
mov
cwtl
sub
adc
dec
jnp
and
mov
outsl
jg
lea
push
jge
and
rclb
xchg
mov
enter
add
jne
and
inc
das
sbb
fnstsw
inc
pop
jnp
sbb
jecxz
sub
jo
mov
les
xchg
dec
pusha
mov
fsubl
sbb
mov
xchg
in
cwtl
stos
pop
push
repz
test
mov
insb
xchg
ja
push
test
and
sbb
call
push
sbb
aas
in
mov
or
fwait
or
std
mov
out
cmp
mov
pop
cmc
sbb
scas
jb
cmpsb
mov
jns
js
add
or
gs
or
jle
xor
jge
pop
mov
roll
dec
aad
mov
testl
cltd
push
fwait
std
lea
jecxz
xchg
push
dec
lret
push
mov
loop
rcll
pop
fisubs
xorl
inc
push
jge
int3
or
add
filds
and
pop
inc
inc
sbb
pop
add
mov
dec
inc
ror
fucompp
sti
dec
xor
mov
out
cltd
ja
fidivl
mov
cmpsb
in
jmp
lahf
mov
test
adc
dec
adc
pop
sub
xchg
sub
icebp
sub
jmp
add
lret
mov
dec
addr16
push
fildl
stos
aaa
dec
ret
leave
cmpsl
push
sub
inc
sub
pusha
xchg
stos
nop
dec
push
push
ret
pop
fimull
xor
mov
mov
push
jae
ret
divl
dec
scas
insl
in
repnz
sub
data16
in
in
ret
iret
mov
dec
pop
out
push
or
xchg
sub
cwtl
jecxz
test
decb
xor
mov
jle
xchg
in
mov
cmpsb
and
sbb
push
dec
addr16
push
xor
cmp
mov
fimuls
imul
mov
sarl
xchg
or
fnop
mov
cmp
test
push
bound
mov
xor
incl
or
mov
inc
ja
mov
int3
repz
repnz
ret
rolb
ss
jne
xchg
mov
inc
ret
add
xor
lret
add
push
out
popf
lret
shrb
fcmovbe
or
arpl
or
fcmovne
cmp
out
mov
inc
lds
pop
inc
dec
vmwrite
push
mov
and
mov
sti
hlt
ror
pop
sarl
mov
or
xchg
inc
mov
cmp
or
cli
mov
jne
sbb
cmp
mov
and
mov
push
xor
scas
push
and
mov
ja
imul
fnstsw
imul
xor
cs
repz
adc
mov
mov
sub
sub
in
mov
cld
jle
mov
xchg
jge
int3
xor
lods
and
subb
sub
fstps
movsl
in
sbb
loope
imul
aad
cmpsl
pop
inc
stc
mov
mov
pop
push
push
adc
dec
inc
enter
je
push
mov
fdiv
or
xchg
inc
and
sar
pop
lods
sbb
cmc
icebp
rcll
mov
inc
pop
jno
rcll
int
sbb
jb
ljmp
test
dec
mov
adc
mov
dec
rorl
jmp
arpl
and
or
inc
and
cmpsb
xor
stc
mov
syscall
pop
mov
inc
pop
cmp
outsl
pop
data16
xchg
cmp
ljmp
adc
rolb
sbb
int
cmpsb
sbb
js
icebp
inc
push
ss
xor
jb
push
or
fcoml
faddp
mov
mov
dec
push
out
adc
inc
mov
mov
sbb
pop
mov
out
xor
or
jns
mov
add
les
jnp
insl
cmpsl
fisttpl
sbb
and
dec
xor
ficoml
aas
sub
xchg
in
mov
daa
jl
jg
jo
jbe
ja
jno
mov
or
sbb
cmpsb
or
jne
fwait
jge
xchg
adc
push
nop
arpl
cmp
aad
sub
inc
push
fistpl
mov
or
or
movsb
xor
ljmp
aaa
pushf
test
push
adc
stos
sbb
and
ret
fistpl
jl
adc
fwait
stos
stos
loopne
mov
xlat
cmovg
sub
xchg
mov
mov
lahf
mov
mov
pop
hlt
mov
sub
fcomp
outsl
dec
inc
sub
out
ljmp
dec
lock
mov
or
inc
jecxz
mov
xchg
sub
outsl
out
cmp
jno
push
add
dec
ret
adc
add
addr16
in
mov
sub
dec
cmp
adc
fxch
adc
and
xor
arpl
sub
lods
xchg
ficoms
xchg
shrl
int
out
stos
pop
xchg
jnp
jg
xchg
sub
rclb
roll
add
lods
scas
sub
xor
fdivr
push
push
xchg
jno
xchg
ror
cmp
pop
or
sarl
es
fs
inc
mov
push
mov
js
outsb
cmpsl
icebp
xorl
push
push
pop
push
mov
push
repnz
pop
sub
popl
scas
inc
mov
dec
je
mov
shl
cmp
aam
inc
jmp
rol
xchg
clc
jl
add
daa
cltd
add
xor
pushf
mov
fcmovnb
outsl
push
cwtl
les
jge
jge
lods
aas
sbb
inc
adc
ffree
int3
or
call
int3
out
pop
ljmpw
fwait
mov
xor
out
fstps
and
cmp
jge
xor
xchg
push
add
sbb
aaa
pushf
loopne
imul
and
adc
dec
std
cmpsl
cmp
fcompl
cs
jo
jb
cmp
loop
int
jmp
xchg
aas
dec
dec
sub
xchg
mov
cmc
int3
hlt
or
adc
andb
addl
or
xchg
sub
mov
leave
xchg
stos
or
inc
aaa
dec
bound
repz
adc
add
mov
pushf
push
cmpsb
movsb
inc
fs
rcl
stos
push
call
cmc
enter
lea
and
mov
scas
bound
mov
insl
fs
scas
shll
les
loopne
xchg
push
adc
dec
sbb
sbb
icebp
xlat
or
repz
dec
mov
pop
pop
mov
cmp
pushf
lods
cltd
leave
push
loopne
mov
insb
xchg
sarl
scas
push
inc
xchg
pusha
jl
scas
jnp
in
pop
aam
cld
sbb
add
test
std
pop
or
clc
push
insl
or
ja
dec
mov
mov
jecxz
push
adc
insb
push
das
stc
imul
es
push
xor
xchg
dec
cmpsl
lret
lds
cmp
mov
cmp
jp
pop
sbb
sub
inc
rorb
fisttpl
xor
mov
test
aad
adc
in
jne
icebp
cmpl
inc
les
seto
and
cmp
adc
xchg
jns
sbb
lret
rol
cmp
fnstcw
cmp
push
push
out
add
jno
lcall
sbbl
xor
sbb
mov
scas
and
and
imul
add
insb
and
mov
ror
push
push
push
movntq
mov
fidivl
scas
loop
dec
ret
xchg
jp
enter
sub
andb
xor
pop
and
cmp
fdivr
add
test
mov
jno
fnstsw
addb
jbe
stc
xchg
aam
mov
xor
lods
lods
and
clc
mov
ljmp
mov
sub
movsl
stos
int3
les
pop
jmp
mov
imul
loope
movsb
mov
ss
and
xchg
mov
clc
dec
xor
fnstenv
test
adc
movsb
jns
or
xchg
lock
sub
out
cltd
mov
cli
cwtl
dec
cmp
pop
adc
sub
xchg
stos
xor
adc
std
cmpl
cld
mov
mov
shrb
mov
mov
jmp
xchg
lock
xor
jnp
lods
add
xchg
and
mov
add
sub
and
aam
push
and
jne
jb
test
cmp
sub
mov
add
shll
cmp
sub
mov
and
test
lods
jne
mov
jmp
in
add
int
int3
mov
jmp
cmpl
imul
int
daa
jae
mov
arpl
pop
sahf
aad
in
cmc
popa
or
popa
jg
push
inc
mov
in
adc
lds
jmp
xchg
fisttps
add
cmpsb
xor
aad
cmp
in
pop
mov
cld
adc
out
jo
and
push
pushf
inc
mov
adc
test
dec
mov
test
pushf
push
hlt
cld
sub
shl
clc
and
push
jg
or
out
mov
in
mov
outsl
inc
lahf
dec
push
jnp,pt
pop
jns
xor
cmp
xor
mov
insl
arpl
push
sbb
xor
pop
jle
and
sbb
mov
pop
xchg
ljmp
bound
and
sarb
and
xlat
or
aam
sub
cmp
insb
repnz
mov
add
and
mov
ror
aam
pop
mov
lcall
xchg
sub
and
mov
mov
fs
mov
int3
in
mov
jmp
in
and
out
or
loope
dec
xchg
mov
std
inc
cmp
pop
xor
aas
jge
cmpsl
outsb
sbb
scas
repnz
cmp
xchg
xchg
xadd
sti
in
ret
call
mov
push
movsl
loope
mov
jmp
sbb
xchg
xor
repz
cmp
push
push
adc
sbb
mov
mov
cmp
lret
fdivs
mov
mov
mov
mov
fidivs
out
es
jge
or
pusha
mov
xadd
jmp
push
mov
jg
mov
mov
lock
lock
les
push
aas
icebp
push
jb
in
loop
bound
sub
out
loope
cmp
fdivr
cltd
adc
into
les
adc
out
faddl
fxch
lahf
insl
and
push
mov
pop
mov
leave
shrl
ret
leave
shlb
mov
mov
out
add
mov
fstps
adc
and
jle
xorb
xchg
icebp
cs
daa
repz
push
push
dec
inc
lock
andl
inc
adc
or
cmc
add
cltd
ja
and
cs
enter
jl
pop
insb
lcall
data16
sahf
adc
dec
sub
jbe
inc
xor
ljmp
cmp
scas
iret
das
cmp
push
movsl
bndstx
pop
mov
push
xor
sbbb
icebp
pop
stc
pop
lahf
sbb
and
inc
adc
pushf
xchg
inc
ds
test
fildll
int
cmpsb
pop
pop
movsb
dec
inc
lods
xchg
cmp
push
stos
xchg
pushl
push
cmpsl
jmp
xchg
shl
inc
xchg
jecxz
inc
ret
push
cmpsb
in
out
aad
jns
hlt
aad
pop
cltd
test
push
sbb
jno
daa
cmp
call
add
mov
cmc
push
hlt
mov
std
adc
inc
mov
mov
fstp
movsb
aam
lods
xchg
cs
sbb
imul
mov
out
insb
dec
cli
cmpsl
int
inc
and
outsb
inc
mov
mov
ficoml
in
add
mov
mov
sub
scas
mov
dec
in
xchg
roll
push
dec
xchg
add
jecxz
adc
mov
xchg
popf
cs
cld
and
mov
sbb
out
pop
out
popa
add
lahf
push
dec
and
sbb
xorb
add
fisubl
sub
push
outsb
pop
imul
sti
or
lds
aam
dec
push
jl
mov
outsb
inc
popa
add
jb
out
rorl
pop
mov
mov
xchg
vmread
nop
jnp
mov
cmpsb
insb
and
inc
xchg
stos
ljmp
add
or
fbld
dec
pushf
outsl
cmp
xchg
cltd
push
dec
popf
mov
dec
or
scas
sahf
sub
enter
out
push
stos
pop
sbb
popa
push
out
cmp
mov
sub
cs
repnz
test
popf
lock
sub
lock
rcrl
pushf
xchg
mov
push
push
push
bound
sbb
jmp
cmpsb
div
xchg
adc
adc
cli
fucomp
add
rcrl
xor
xor
cmp
inc
daa
rcrb
adc
fwait
lret
pop
push
int
cmc
cmp
in
add
jecxz
adc
outsl
xor
adc
scas
scas
mov
rorb
pop
aad
push
jp
movd
and
sahf
shlb
mov
insb
xchg
jae
push
orb
cld
subb
mov
mov
scas
shll
and
out
xchg
xor
into
dec
or
inc
leave
ss
scas
lea
movsl
jno
and
test
or
incb
dec
insb
xor
mov
cltd
push
arpl
mov
push
lods
addl
lods
sub
and
out
add
cli
xchg
sbb
xchg
getsec
mov
mov
adc
mov
cmp
orl
jmp
cmpsl
push
lahf
mov
jnp
pop
in
loop
inc
fdivrp
jg
cmp
fmuls
sub
xchg
mov
sti
ljmp
and
xor
gs
out
xor
mov
jp
pop
mov
inc
pop
cmc
jbe
scas
adcb
aad
cli
adc
or
ljmp
or
mov
mov
leave
cmp
inc
outsb
shrl
repnz
popf
enter
sub
sbb
lods
ret
or
jnp
mov
call
dec
inc
jnp
xchg
sub
cmp
outsb
rcrl
fwait
add
popf
pop
fsubrl
addr16
jp
adc
and
fimull
aam
popf
jae
add
mov
and
sub
ljmp
dec
movsb
jl
mov
sahf
ds
pushf
adc
sub
mov
and
xchg
arpl
aaa
mov
pop
cmp
popa
lret
shll
pusha
in
cmp
push
popf
mov
cmp
and
xchg
inc
push
mov
gs
jmp
stos
jg
outsb
sub
xchg
sbbb
das
insb
sub
int3
push
push
adc
addb
popa
xor
sbb
jg
push
stos
sbb
lcall
mov
jge
cwtl
xchg
pop
jge
rol
nop
mov
mov
and
and
xchg
pushf
enter
lods
inc
enter
leave
mov
xor
xchg
mov
int
icebp
int3
xor
out
fimull
dec
out
adc
push
push
repz
das
fsts
jo
out
adc
push
shl
jbe
push
and
jl
mov
out
aaa
cmp
out
pop
sti
or
rcll
add
inc
and
jnp
or
pop
sbb
fsubr
pushf
test
push
aas
push
test
imul
push
push
test
loope
fistps
fisttps
lods
inc
push
cmp
fdivrl
and
xchg
gs
or
jmp
mov
cmp
mov
sahf
imull
push
pop
pushf
inc
jp
sar
mov
scas
pop
add
in
cmpsb
daa
std
xor
cmp
popf
roll
int3
cmp
adc
push
mov
dec
and
fcmovu
inc
pop
lock
add
add
cmpsl
sbb
mov
fwait
loope
pop
pop
jge
mov
dec
mov
in
inc
or
jno
ss
cmpsb
in
out
pop
cmp
or
jge
mov
xchg
sbb
scas
jp
insb
mov
inc
ret
mov
lods
in
fcmovnb
inc
push
dec
and
inc
out
or
pop
xchg
loop
mov
inc
pcmpeqb
sbb
scas
push
add
sbb
push
ficompl
lcall
push
aad
adc
call
jbe
das
cli
push
cmpsl
pop
int3
dec
lods
xchg
mov
testl
test
movsb
cli
js
mov
loop
jge
subb
mov
cmp
pop
pop
push
mov
xor
fsub
inc
xchg
cmp
out
mov
inc
mov
call
mov
rclb
test
push
stos
mov
sbb
cld
lods
je
int3
aam
fxch
mov
sbb
sbb
ficoms
jo
imul
pop
push
pop
sbb
mov
jp
or
scas
adc
sbb
call
outsl
cmp
sahf
push
repz
ja
pop
jne
and
push
sub
jno
mov
out
insl
push
sub
adc
sub
les
in
cld
pushf
nop
bound
mov
or
sbb
xor
loope
pushf
cmp
dec
sbb
arpl
xchg
sarb
cmc
cmp
lods
add
aas
xchg
cld
jbe
insl
inc
mov
nop
aas
fwait
mov
fxch
and
aaa
arpl
insl
adc
xor
daa
data16
shrb
fs
fidivrs
movsb
divl
andl
jge
and
jmp
leave
test
push
sub
outsl
addr16
lret
fldenv
adc
in
xchg
dec
xchg
cli
or
mov
call
mov
xor
imul
push
scas
or
je
es
test
data16
addr16
rcrl
scas
shl
adc
mov
push
push
js
mov
mov
add
inc
jno
adc
ficoml
sub
cwtl
rorb
ss
cmp
adc
aam
push
mov
jb
popa
or
xchg
in
in
lods
and
out
sbb
imul
inc
cwtl
jae
fbstp
adc
mov
mov
adc
push
sbb
jle
in
in
loop
inc
clc
inc
mov
into
shr
xchg
inc
push
cld
jb
xor
pop
push
and
into
and
jge
fdivl
sbb
enter
repnz
xor
pusha
hlt
xchg
ljmp
jbe
adc
iret
pop
insb
add
xchg
clc
push
stos
push
mov
ds
sarb
xlat
cmp
lock
cld
inc
stc
jge
mov
scas
adc
mov
mov
aaa
lahf
mov
leave
jle
cmc
sbb
loopne
lock
mov
sub
push
lds
pop
lock
shrl
push
je
enter
lcall
enter
push
test
insb
sub
sbb
jbe
xor
scas
cwtl
fs
rorb
mov
loopne
mov
mov
sbb
dec
notb
mov
mov
pushf
les
push
lods
push
or
add
jle
sahf
adc
dec
stos
lcall
loopne
adc
call
dec
adc
pop
imul
mov
or
ret
push
dec
pop
shl
fldcw
loope,pt
dec
jae
pop
mov
jge
or
out
pop
ja
add
mov
pop
fidivrs
mov
int3
or
nop
dec
stc
aad
sub
movsl
cmp
mov
and
out
push
sti
test
and
in
xlat
and
popf
push
sub
pushf
mov
iret
ret
add
shll
sbb
mov
inc
fwait
mov
fnstsw
lret
sti
add
xor
icebp
jl
inc
cld
out
adc
xor
js
add
mov
and
mov
cli
cmc
xchg
pop
or
mov
add
fcoml
insb
add
cmp
push
xor
pusha
fbstp
cmp
ficoml
mov
jmp
lock
ficoms
mov
jno
lods
mov
repz
push
stc
in
call
cmp
movsb
test
xchg
in
mov
jp
inc
fisubrs
mov
sub
or
aad
dec
inc
mov
ss
fnstcw
xlat
leave
xchg
xor
or
mov
loop
std
test
popf
sbb
rclb
imul
cli
imul
mov
sti
jbe
pop
pusha
and
daa
sarl
test
out
sbb
fbstp
outsb
daa
mov
outsb
adc
jp
rcrl
push
fistpl
mov
jno
cmp
xchg
fldenv
lret
jg
dec
jb
mov
in
pop
sub
cmp
pop
fsub
cmp
or
jl
ret
imul
sub
push
xchg
and
sub
enter
and
sbb
cmpsb
mov
adc
stc
mov
add
shll
jmp
int
enter
aas
arpl
or
aad
imul
and
out
out
xchg
out
add
sub
clc
or
jae
or
outsb
mov
ja
pop
scas
ja
dec
xchg
cltd
mov
ja
xchg
mov
mov
jl
inc
shll
sbb
push
fnop
aas
ds
js
or
les
cltd
mov
ret
adc
jp
mov
inc
push
and
push
scas
lds
mov
cmp
jg
push
add
leave
addr16
les
cmp
mov
out
add
enter
lahf
movsl
jmp
xchg
sub
and
mov
repnz
mov
lahf
sarl
nop
add
paddb
xlat
les
bound
xchg
mov
loop
add
xor
divl
gs
push
sar
leave
aaa
lock
aad
popa
sub
sbbl
sbb
cmp
push
dec
xorl
mov
in
les
jno
jae
std
mov
push
push
and
dec
fucomip
test
sub
inc
imul
mov
dec
test
popa
in
fs
aaa
or
and
iret
bound
lock
ss
push
add
aam
mov
pusha
div
std
shrb
push
les
mov
cmp
jecxz
pushf
iret
jp
sub
aas
push
iret
or
int3
sbb
stos
jnp
cmp
and
in
movb
inc
jns
loop
pushf
adc
dec
insb
test
or
iret
movl
cmp
jmp
scas
inc
mov
lahf
js
mov
subl
stos
xor
inc
adc
sahf
mov
push
stos
ret
dec
push
push
xchg
fldenv
xchg
cmp
jg
scas
and
xchg
mov
shl
mov
gs
xor
cld
sbb
scas
out
push
push
xor
jae
in
fs
add
adcl
push
jl
sarb
sbb
or
in
inc
jmp
test
cmpb
sub
fists
xchg
mov
mov
es
loopne
sti
popa
mov
adc
mov
push
xchg
mov
pushf
enter
scas
inc
movsl
mov
gs
xchg
mov
cmp
lea
into
call
xor
pusha
sub
mov
stos
pushf
pop
jmp
test
push
mull
mov
sub
inc
ret
into
sbb
push
mov
int
jg
mov
pop
sbb
or
shr
xor
iret
cmp
mov
orl
imulb
xchg
aaa
jg
sub
daa
or
sbb
add
sahf
call
mov
jle
int
ja
sarl
cmp
addr16
fdiv
cmp
sub
dec
sbb
ror
sahf
inc
jno
mov
pop
insb
es
scas
rcrb
or
mov
inc
push
xchg
adc
push
in
inc
sbb
sub
mov
pop
jl
add
lcallw
dec
add
mov
pop
add
into
push
lahf
jb
ljmp
in
out
scas
push
mov
push
xor
test
jmp
fsts
adc
pop
inc
mov
ret
into
jg
or
mov
pop
gs
pop
xchg
imul
or
jge
add
adc
and
loope
scas
mov
loop
ffreep
ss
inc
adc
jmp
mov
mulb
adc
mov
js
sub
into
sbb
dec
fisubs
xchg
sub
jo
sti
push
ljmp
add
xor
push
jmp
add
pop
call
das
jmp
dec
je
add
addl
jg
gs
fwait
lret
mov
dec
fidivl
jge
mov
shlb
inc
mov
xchg
in
ja
inc
dec
adc
rcrl
js
dec
and
fstps
fs
sbb
fwait
cmp
std
daa
scas
scas
push
int
and
test
sbb
xor
ljmp
or
fidivl
inc
pop
lods
adc
int3
stos
sbb
pop
pop
jge
mov
push
and
das
cmp
xor
cmpsl
jl
out
sbb
or
jbe
inc
cld
inc
pop
mov
mov
push
rcrb
int
outsl
cmp
sbb
cmp
vrcpss
add
pushf
dec
mov
dec
pop
xor
cmp
mov
sbbl
out
and
lds
jb
jbe
pushf
loop
js
in
push
add
es
inc
stc
iret
pop
idivb
aad
mov
inc
push
pop
icebp
loope
inc
push
mull
xchg
into
pop
in
cltd
push
push
int
inc
lods
jbe
lret
adc
outsl
imul
inc
into
jb
xchg
adc
push
scas
nop
lock
bound
mov
addr16
fidivs
nop
test
in
push
mov
push
push
mov
sahf
ss
xor
repnz
add
out
push
push
inc
add
cli
out
jbe
pop
loope
cmp
jae
adc
lock
xor
push
jnp
or
mov
adc
inc
sahf
fnstcw
loopne
insb
rcll
daa
ja
add
sti
shlb
cmp
mov
sbb
xor
repnz
pushf
rorl
outsl
test
pop
outsb
mov
sub
xchg
sub
pop
xorl
xchg
inc
pushf
out
xor
inc
test
icebp
popf
int
aam
push
pusha
popa
add
fcomps
scas
sub
pop
cmp
psubb
gs
addr16
xor
fmuls
lods
inc
lcall
sbb
xor
push
shlb
movsl
push
fwait
clc
jge
pop
xchg
inc
mov
mov
insl
dec
jae
mov
jo
adc
pop
pop
and
clc
hlt
pop
fdivrs
add
jp
sub
cwtl
das
stos
insb
sbb
cld
inc
loopne
les
cmpsl
push
xchg
sbb
sbb
stc
jle
mov
pop
cld
imul
js
stc
pop
ds
out
addl
mov
xor
sbb
xchg
andb
cmpsb
mul
sub
test
dec
stc
cwtl
in
sub
xchg
icebp
subb
in
ficompl
jl
dec
ret
pop
sub
push
sbb
pop
fldenv
or
pop
out
adc
aaa
imul
mov
push
adc
sbb
mov
push
mov
aam
clc
inc
xchg
lcall
jb
fisttpll
ljmp
stos
decl
mov
jae
xor
inc
or
shl
pop
mov
inc
insl
lods
loope
cmpsb
cltd
adc
outsb
mov
sbb
scas
stc
push
pop
icebp
xchg
mov
jp
sbb
pushf
or
inc
out
stos
clc
adc
push
call
stc
add
push
insl
push
inc
out
dec
outsl
xchg
sub
shlb
call
es
inc
fucompp
sub
push
flds
das
push
xchg
bnd
xor
mov
fisubl
rorl
ljmp
hlt
jmp
xchg
ret
je
in
ret
stos
adc
repnz
es
pushf
loopne
jp
loope
adc
cmp
divb
xchg
and
add
sbb
and
scas
adc
or
mov
push
or
nop
std
stos
test
scas
movsl
rcrl
or
lods
add
loopne
push
pop
jmp
jg
cmp
dec
sub
hlt
pop
sti
mov
xchg
dec
lods
cmp
cmc
jo
xor
sbb
fistl
enter
rcll
jl
adc
shlb
sub
iret
inc
rol
call
or
jmp
jmp
popl
or
pushf
es
mov
sahf
dec
imul
inc
lods
pop
mov
dec
pop
scas
xchg
inc
int3
imul
dec
dec
mov
sar
cmp
cmpsb
cmp
dec
mov
push
sub
jmp
and
sub
ret
out
xor
mov
jns
sub
test
scas
fbstp
cmp
pop
repz
mov
or
cmpsl
insl
add
in
xor
sbbb
xor
je
sbb
and
sahf
outsb
hlt
mov
jmp
mov
mov
or
imul
xor
push
repnz
jecxz
jle
data16
js
sbb
pop
in
jmp
and
xor
mov
imul
add
ret
adc
sub
das
add
loop
jno
clc
lock
mov
subb
fnstenv
cmc
idiv
arpl
out
pushf
xor
pop
ja
pop
std
add
daa
cld
andb
and
dec
mov
popa
pushf
outsl
aam
ret
xor
es
sbb
stos
xchg
jle
cmp
sub
jl
shl
fisttpll
jecxz
pop
ljmp
out
xchg
cmp
pop
push
out
and
inc
leave
out
jns
lcall
repz
xchg
mov
xchg
cmp
fcoms
mov
cmp
call
jp
mov
les
test
cmpsb
fwait
sub
xor
movsl
push
xchg
add
sub
pop
push
xchg
outsl
lds
in
enter
dec
sub
mov
mov
pop
shlb
fwait
mov
sub
jp
adc
sbb
arpl
lock
adc
leave
jecxz
scas
or
jmp
cs
iret
sub
xor
pop
and
push
pusha
inc
mov
sbb
bound
xchg
adc
xchg
hlt
inc
popl
shld
sub
cmp
inc
andb
data16
add
xchg
and
clc
jg
cltd
xor
add
cwtl
jo
sti
cmp
jbe
inc
jo
push
jbe
cmp
fdivrl
add
xor
mov
adc
out
and
leave
xchg
push
pop
int
add
mov
jmp
pusha
in
ss
push
arpl
scas
mov
and
adc
adc
xchg
sbb
add
adc
sbb
addr16
outsb
xor
inc
adc
push
lret
sbb
fildl
in
loopne
xchg
gs
into
ds
jp,pt
cld
sub
sub
sub
sbb
jae
dec
pop
lock
jno
mov
xchg
add
or
adc
fisttpl
in
push
ss
xchg
pop
cltd
xor
popf
mov
jecxz
adc
shl
inc
push
ss
mov
mov
adc
pop
bound
sarb
stos
bound
sbb
shll
out
lret
sbbl
push
testl
sub
test
and
in
pop
gs
xor
fmull
cli
leave
dec
popa
xor
idivl
and
inc
pop
cli
lock
push
sbb
leave
fdivrp
je
loopne
inc
xchg
stc
mov
divb
xchg
jae
daa
imul
stos
push
mov
ss
fists
mov
pop
stos
mov
xchg
aam
adc
dec
insl
mov
xor
dec
adc
lcall
mov
shrb
daa
data16
addr16
out
or
imul
and
std
xor
and
sub
enter
add
test
ja
out
popa
mov
movsl
ret
xchg
push
cmc
add
movsb
ffree
jno
mov
cmp
stos
fs
mov
outsb
lods
sub
and
fcom
adc
fwait
cli
jnp
addr16
and
jbe,pn
push
imul
mov
addr16
or
cwtl
push
lods
mov
adc
mov
fisubl
jb
adc
xor
xchg
nop
jp
shrb
mov
in
daa
idiv
xor
pushf
lods
mov
repnz
add
sbb
inc
loop
jmp
jo
pop
mov
mov
inc
dec
mov
lds
test
jge
pop
xor
stc
stc
jmp
outsl
scas
cmp
push
push
cmc
inc
jo
cs
cmp
lods
push
addr16
pop
or
jmp
enter
out
rolb
mov
mov
iret
xchg
xchg
cmp
pop
rcll
push
or
js
fs
std
push
xchg
mov
mov
icebp
jl
shrb
adc
jle
add
call
mov
add
lcall
movsl
stc
neg
sbb
adc
insl
and
jmp
xor
in
pop
fidivl
inc
jle
jo
dec
inc
xor
cmpsl
arpl
push
stos
jmp
lahf
test
adc
mov
xor
xor
lahf
insb
shr
movsl
push
std
insl
in
ds
andl
inc
test
cmpsb
pop
jl
sub
add
movsb
sub
cmp
inc
xchg
in
movsl
lods
clc
repz
clc
mov
sarb
xor
mov
add
or
xchg
fsts
fisttpll
mov
clc
jle
cmp
test
or
sub
shrl
aad
shll
push
imul
mov
xlat
jb
sahf
mov
aam
cmpb
xchg
jmp
and
pop
popf
xor
mov
popa
in
jbe
add
mov
idiv
jb
icebp
xchg
repnz
jbe
sub
pop
arpl
and
out
add
cmp
shll
pop
sti
xchg
or
push
xchg
and
lock
shl
push
jno
inc
mov
lahf
push
mov
add
cmp
inc
bound
movsl
aam
out
pop
orl
scas
stos
outsb
cmc
jmp
fstpt
jb
xor
dec
push
in
adc
xchg
out
mov
lret
add
xor
pop
adc
push
mov
mov
inc
inc
stos
sbb
inc
sbb
pop
rorl
leave
roll
pop
inc
sub
arpl
add
pop
or
test
mov
into
jne
rcrl
inc
push
xchg
xor
stos
ja
jbe
cmpl
cmpsb
lcall
xchg
xorb
ja
cltd
or
mov
repz
outsl
dec
pop
sub
add
add
sbb
sub
hlt
pusha
mov
sbb
popf
push
cmp
ret
dec
push
add
mov
stc
ss
js
cmpsl
scas
sbb
jnp
je
ja
mov
fmul
sbb
cli
dec
cwtl
inc
cmp
pusha
call
rcll
jno
xchg
pop
xchg
add
leave
popf
movsl
add
insl
jbe
fstl
adc
ret
sarb
cltd
adc
xchg
dec
pop
push
pop
pushf
mov
out
das
insl
scas
pop
xchg
inc
dec
lret
adc
xor
mov
dec
xchg
jae
jp
lcall
mov
ret
push
or
lcall
lahf
add
cmp
dec
scas
add
push
add
push
mov
xor
add
imul
into
add
pop
and
and
pop
mov
imulb
jno
cmc
push
test
loope
xchg
lea
inc
push
aam
mov
pop
mov
das
data16
out
dec
sbb
jo
lahf
das
and
xor
sub
mov
sbb
lahf
pop
clc
jmp
in
shl
push
cmpsb
xchg
call
repnz
fdivrl
jecxz
mov
psrlw
ds
adc
es
lea
inc
xchg
jb
mov
add
aaa
xor
jno
cmpsb
subb
arpl
sbb
imul
addr16
nopl
lds
sbbb
xchg
cli
loope
repz
xor
or
inc
test
pusha
sbb
daa
sbb
js
cmc
rorl
popa
inc
jbe
and
fxch
cmp
lahf
mov
insl
xchg
fisubs
jbe
stc
test
lea
jmp
and
aad
adc
xchg
pop
pop
dec
popf
add
enter
nop
jns
lcall
inc
cmp
ljmp
pop
adc
js
jno
pop
xchg
mov
ss
inc
movsl
sti
fadd
pop
int3
ja
push
mov
sub
xchg
movsb
stos
jo
push
mov
je
test
mov
imul
inc
int3
cmp
in
jno
dec
arpl
shrl
iret
popl
decl
push
inc
jb
pop
or
stos
sti
test
enter
jns
xchg
and
int
adc
jno
or
push
jmp
push
jecxz
lret
stos
xorb
sbbb
ds
push
mov
bnd
neg
dec
ljmp
into
shll
jnp
in
push
dec
pushf
inc
or
int
les
idiv
adc
subl
sub
inc
gs
arpl
addr16
into
xchg
and
bound
sub
push
int3
outsb
jge
pop
pop
mov
add
dec
jnp
and
inc
pop
cmp
ljmp
pop
ret
pop
imul
fwait
mov
xor
pop
outsl
mov
arpl
fldenv
mov
gs
add
in
dec
ljmp
pop
mov
loop
insl
lds
jecxz
int3
pusha
movsb
lret
imulb
dec
imul
shll
mov
sub
jnp
addr16
mov
pop
ss
sub
dec
mov
mov
add
xchg
xchg
pop
imul
iret
or
lea
jg
push
shlb
sbb
xchg
scas
and
in
loopne
daa
sub
lcall
pop
pushf
out
in
popa
sub
mov
jmp
mov
nop
xchg
fidivrs
aam
push
insl
out
lods
nop
mov
add
xchg
dec
inc
push
adc
sub
mov
dec
mov
rolb
rorb
movl
subl
jne
sbb
jo
test
pop
mov
adc
mov
and
and
into
ds
mov
movsl
jmp
ret
out
add
mov
mov
adc
in
mov
push
mov
or
jno
and
mov
ja
mov
divl
or
leave
lret
mov
dec
push
int3
xchg
pop
or
xor
pusha
pop
je
dec
aam
sahf
pop
unpckhps
dec
inc
mov
pop
iret
push
rcr
sbb
push
lcall
inc
and
pop
push
mov
lret
mov
or
jbe
push
dec
inc
adc
jnp
pop
and
adc
lcall
xchg
adc
sbb
mov
inc
mov
cmc
dec
mov
or
leave
je
aad
shrb
in
sti
mov
jmp
and
ret
xchg
fistps
in
addr16
mov
or
es
push
fsubrp
fs
mov
mov
bswap
inc
pop
stos
lret
pop
jg
cmpsl
mov
dec
and
cltd
data16
adc
fcmovu
fisubl
icebp
mov
movl
adc
mov
jecxz
repz
pop
dec
mov
cmp
and
jle
push
les
cmpsl
cld
mov
scas
push
and
cmp
sbb
xlat
pop
or
out
xor
jle
pop
or
ficoms
pop
popf
movaps
push
pop
popa
scas
add
repnz
pop
inc
push
jmp
outsl
inc
in
jecxz
xchg
add
mov
scas
add
lock
or
pop
mov
imul
into
mov
outsb
xor
adc
pusha
jp
test
jbe
aas
mov
pop
test
mov
movsb
push
mov
test
aad
jnp
notl
sub
and
pusha
adcl
insl
jge
sbb
jl
mov
shr
mov
sbb
pop
fidivrs
cmpb
push
int
mov
fnstsw
jo
jg
and
push
fcmovnu
add
mov
mov
push
inc
rcrb
ficoml
sub
fisubs
xchg
lock
shlb
mov
lcall
add
fs
lds
int
bound
push
add
out
in
loope
and
imul
loop
hlt
mov
std
xchg
mov
sub
dec
rorb
sub
js
fmul
mov
xor
mov
repnz
in
test
pop
sarb
adc
jae
xor
loope
cmc
in
cmpb
inc
jbe
daa
pop
outsl
addr16
pop
inc
inc
daa
stos
mov
adc
mov
adc
test
mov
mov
ficoml
push
add
hlt
mov
xor
mov
arpl
imul
rorl
jecxz
cmpsl
mov
adc
mov
or
dec
cmp
cmp
mov
into
andb
xor
push
jl
xchg
movsl
rcr
xor
lret
adc
loope
jp
mov
sub
jp
mov
out
rcrl
xor
adcb
lods
xchg
ljmp
mov
test
add
xchg
imul
es
xchg
insb
stos
cmp
push
lea
dec
mov
popf
arpl
sbb
sbb
icebp
js
xchg
cmpsb
pop
stos
sarb
xor
sub
stc
push
push
jae
lods
jbe
inc
adcl
and
lds
dec
inc
fidivrl
pop
jne
jmp
pop
cmp
cmp
aam
mov
out
aad
aas
mov
subps
ret
loopne
jae
adc
xor
stc
mov
outsl
push
fsubrp
inc
cmpsb
mov
mov
inc
push
dec
xchg
inc
sub
adc
js
js
rorb
mov
lods
xor
imul
sub
xchg
and
fldcw
lods
mov
mov
addr16
mov
xchg
add
jmp
mov
stc
push
stos
iret
and
cmp
or
push
push
cwtl
mov
xor
inc
jge
push
out
add
xor
pop
out
in
inc
mov
popa
mov
xlat
mov
sub
push
inc
decb
and
stos
out
int
mov
fsubp
cmp
repnz
dec
sahf
in
enter
data16
mov
std
loope
push
jge
fsubr
outsl
nop
outsl
test
fsub
xor
out
jnp
xchg
sub
in
and
imul
xor
cld
push
sbb
mov
cmp
subl
sub
mov
push
lods
jns
int3
popa
inc
gs
cs
push
adc
add
sti
loope
push
jbe
cmp
jmp
add
call
pop
daa
je
add
mov
adc
aam
icebp
or
mov
push
cmc
lcall
in
subl
mov
cmovo
and
pusha
lock
nop
jbe
loopne
lret
shrb
popl
popf
dec
in
icebp
mov
scas
icebp
shrb
jmp
mov
gs
int3
inc
and
jns
lahf
mov
cmp
iret
lock
inc
pop
cmp
cmpl
xchg
pushf
pop
push
add
in
push
sbb
xchg
into
mov
mov
adc
sub
ja
popf
sbb
add
jns
lea
push
mov
sbb
cmc
cmp
mov
push
mov
fs
jg
sub
lret
cmp
je
popa
ret
popa
aad
sbb
jb
js
hlt
rcll
cmp
lods
lahf
add
inc
das
int
sub
arpl
test
gs
cmp
or
popa
lods
in
push
outsb
xor
js
icebp
out
push
sti
inc
ja,pt
jle
fstpl
inc
sbb
jae
stos
ljmp
test
stos
xchg
add
stc
xchg
jae
mov
out
aad
ror
test
fdivrs
push
xor
push
lcall
and
aas
jns
add
loop
xor
push
bound
test
stos
out
shrl
imull
lds
push
cmpsb
cmc
test
int
mov
std
mov
dec
bswap
mov
dec
jl
insb
je
and
sub
lea
movl
or
xor
jg
test
sti
adc
dec
cmpsb
iret
out
jae
fisubs
pop
jl
pop
cld
or
cld
test
dec
adc
aas
mov
fwait
or
insl
sahf
push
mov
mov
push
cmp
xor
mov
cmp
test
clc
pop
inc
leave
cli
ds
out
clc
pop
jp
or
loope
jne
test
iret
and
mov
push
inc
fwait
mov
lret
mov
cmp
std
mov
sub
in
jp
cmp
sub
sub
push
xchg
xchg
andl
and
cmp
push
call
xchg
insb
sub
push
mov
sbb
ret
and
jmp
xchg
mov
pop
dec
sbb
xchg
pop
xchg
jb
orl
scas
loop
cli
mov
or
out
push
shrl
mov
or
xor
pop
mov
pop
das
cmc
cmp
aam
lcall
xor
push
pop
mov
xchg
das
push
jne
hlt
movsl
fs
xchg
xor
insb
mov
pop
sub
ljmp
mov
push
fisubs
int3
xchg
inc
xchg
and
stc
xor
xor
push
loopne
rorb
lds
jb
mov
ja
movsb
jmp
mov
inc
jns
add
push
fcmovne
jge
int
js
push
or
xor
pusha
test
stos
mov
repnz
cmp
cmc
fdivrl
sbb
bound
add
xchg
popa
call
fimull
je
and
sub
movsl
lar
and
sbbb
push
cmp
add
popf
test
test
std
inc
loopne
rcr
addr16
movsl
mov
and
inc
lea
xlat
jno
sub
pop
mov
arpl
push
fbld
call
iret
mov
mov
dec
insb
sbb
pop
lods
daa
scas
or
test
pop
mov
mov
jae
mov
jbe
lret
inc
push
mov
test
arpl
sub
scas
mov
scas
mov
outsl
ret
js
jge
jo
pop
inc
xchg
iret
mov
mov
addr16
pop
jp
mov
pop
sti
pushf
hlt
fistl
and
cmp
cmpsb
xchg
lds
and
in
add
xor
mov
dec
mov
lret
fbld
jbe
mov
mov
mov
inc
mov
jns
or
cmpsl
adc
out
pop
nop
mov
outsb
jg
jg
mov
mov
cwtl
mov
sbb
loop
xlat
adc
into
jbe
je
cmp
or
mov
jmp
adc
stc
jp
push
pop
mov
aad
jbe
inc
mov
jmp
cmp
fs
dec
xchg
inc
scas
cmpsl
sub
loope
and
add
gs
mov
inc
xchg
xchg
or
mov
pushf
aad
data16
add
testb
cmpsl
sysenter
sub
gs
dec
ret
push
test
xchg
jns
shrb
pop
inc
js
and
mov
inc
mov
mov
or
inc
rorb
lds
insl
fldcw
pop
aaa
shlb
mov
sbb
mov
inc
ss
mov
cmp
scas
xor
mov
in
ljmp
jbe
test
iret
mov
push
les
out
mov
jl
in
int
lret
xor
nop
push
xchg
sub
sub
pop
or
mov
jno
cmp
pushf
inc
div
aam
lret
add
loope
daa
inc
in
xchg
jge
fsubrs
bound
cmpsb
mov
and
ret
cmp
cmp
mov
sti
push
pop
mov
popa
repz
cmp
pop
rorb
mov
or
test
mov
std
daa
xchg
hlt
xchg
and
lock
cmc
pop
mov
xor
mov
in
inc
sbb
sub
ret
pop
repnz
sub
pop
mov
cmp
push
mov
dec
orps
pushf
sbb
jo
in
pop
jo
mov
insb
adc
fnsave
ss
daa
je
pop
push
mov
adc
sub
loop
sub
push
sub
nop
or
xor
mov
jge
stos
mov
pusha
lret
popf
ds
or
sub
lahf
cli
popa
in
subb
jbe
ljmp
xchg
out
mov
fidivrl
sub
push
out
insl
push
mov
and
xchg
cmp
push
or
cmp
sub
ss
mov
sbb
pop
and
jmp
sub
or
add
cmp
inc
cmpl
dec
fldl
xchg
jo
lahf
in
ficoms
lcall
call
pop
pop
fidivl
push
loopne
test
imul
push
dec
arpl
fiadds
xor
fwait
aam
clc
pusha
push
lock
pusha
jl
xor
inc
xor
pop
jp
cmp
inc
hlt
push
adc
ds
lahf
and
rcrb
dec
loopne
cmp
pushf
dec
push
roll
mov
shl
mov
adc
aas
jbe
icebp
inc
cltd
inc
test
mov
cmp
and
sub
pushf
inc
dec
ss
push
adc
add
pop
pop
add
jmp
xchg
dec
pushf
mov
pop
add
popa
jg
mov
aad
lret
loopne
repnz
divps
jmp
lods
stos
pop
jl
push
inc
dec
dec
outsl
and
outsl
jb
inc
cmp
int
lods
dec
push
jmp
loope
outsl
and
int3
add
inc
leave
cltd
imul
roll
popa
sbb
and
pop
lret
mov
sbb
imul
imul
repz
jle
push
jns
xchg
fidivl
inc
push
movsb
es
ficompl
mov
into
in
push
and
push
out
add
push
sti
outsb
stos
or
xchg
mov
sti
imul
inc
int3
xor
in
add
mov
jmp
aas
mov
loop
rcll
popf
push
pop
add
lahf
push
or
dec
and
imul
insb
inc
insb
aam
in
insl
dec
push
push
mov
push
adc
xor
mov
pop
sub
fs
adc
mov
push
mov
into
mov
sbb
add
xchg
jbe
pop
icebp
push
xchg
add
rclb
std
in
cli
xchg
add
push
dec
xor
xor
gs
loopne
dec
movsb
int3
movl
scas
inc
loop
sub
mov
adc
push
xlat
adcb
int3
push
repnz
xlat
or
or
pop
cmp
adc
or
int
pop
enter
icebp
mov
aaa
dec
test
insl
pushf
cltd
inc
xor
xchg
mov
xor
hlt
int3
stos
subl
divl
and
cmpsl
lahf
mov
mov
mov
fisubrl
out
or
push
pop
xor
ret
or
and
call
insl
repnz
jmp
and
push
mov
push
mov
into
xor
ds
mov
out
arpl
push
sbb
dec
shr
mov
clc
dec
repz
scas
fdivr
dec
inc
ss
and
or
outsl
sbb
scas
xor
fs
mov
lret
cld
lds
repz
xor
daa
daa
inc
test
xchg
outsl
scas
sub
aas
loopne
dec
call
lock
out
in
or
hlt
loopne
mov
dec
fistps
scas
cmp
popa
scas
enter
fistpl
inc
dec
into
fadd
in
scas
mov
xlat
pushf
imul
or
lret
jnp
sbb
jne
dec
jbe
add
and
dec
push
int
sbb
faddl
stos
lahf
inc
test
sbb
in
jge
out
pop
jnp
fstpt
sbb
lds
loop
adc
cwtl
and
mov
addl
mov
cmp
sub
sbb
addr16
or
js
mov
mov
push
das
push
push
pusha
push
sub
push
stos
out
stc
sahf
pcmpeqd
jo
mov
and
bound
xchg
pop
push
adc
lahf
lcall
xchg
in
cmc
sub
push
insb
cmc
out
cmp
push
jns
neg
lahf
stos
jge
jmp
mov
mov
sub
and
mov
pop
cmp
in
arpl
outsl
sti
into
xor
in
inc
subl
mov
test
ljmp
or
mov
into
push
xchg
jno
xorl
scas
cmp
mov
out
jle
scas
xor
push
mov
sbb
xor
test
clc
push
xor
mov
inc
mov
add
mov
les
es
lock
fisubl
daa
in
inc
addr16
dec
xor
iret
lahf
call
je
mov
xchg
sti
inc
inc
scas
test
jmp
in
fwait
arpl
inc
mov
into
fdivrl
jae
hlt
jle
xlat
sub
jo
test
clc
add
mov
xchg
inc
cmp
js
les
addb
popa
imul
cltd
pop
clc
test
mov
fnstsw
ret
test
out
repz
cmp
hlt
sbb
sbb
and
sbb
push
push
sub
inc
push
or
sub
pop
cld
in
mov
dec
adc
cwtl
scas
push
inc
mov
sbb
je
push
adc
mov
or
dec
pop
xchg
sub
outsl
cs
pop
sub
jg
adc
jg
pop
xchg
punpckhbw
fildl
cmc
add
mov
sahf
xchg
cmp
data16
sbb
repz
aam
cmp
jle
push
sub
repnz
jl
push
ljmp
and
mov
mov
inc
fidivrl
imul
aad
and
xlat
mov
fbld
mov
out
ljmp
int3
cli
mov
jmp
sbb
add
das
lods
scas
popf
or
popf
pop
push
div
adc
mov
mov
mov
push
es
les
arpl
mov
loope
mov
call
insl
aas
mov
aam
addl
loope
inc
dec
xchg
cwtl
xchg
add
out
jle
cltd
sbb
sbb
insl
aas
pop
lcall
stc
int3
pop
sbb
mov
push
cli
stos
sub
xlat
dec
ljmp
repnz
repnz
test
pop
mov
ds
addr16
out
mov
inc
lock
js
ja
cld
xchg
fdivrl
adc
push
in
mov
mov
call
add
inc
movsb
inc
mov
sub
xchg
lret
push
mov
pop
int
jmp
jl
bound
popf
and
pop
sub
add
cltd
std
aam
adc
repz
jle
pop
pop
ljmp
mov
pop
jne
repz
cmpsb
jl
lret
inc
adc
nop
add
xchg
fcmove
adc
sti
jle
jb
pop
pop
clc
stc
push
aam
jecxz
sub
out
mov
jg
push
fisttps
cmpsl
mov
rcrb
jg
scas
stos
stc
dec
inc
add
aam
add
in
inc
dec
pop
mov
test
stos
dec
push
addr16
jnp
pop
test
je
ss
scas
cld
ljmp
push
mov
mov
scas
lods
inc
cltd
fisubs
xchg
out
cmp
mov
scas
ucomiss
mov
aaa
ljmp
sub
push
test
dec
pusha
pop
mov
add
fsubrs
xchg
sub
gs
imul
add
push
shlb
cmp
xlat
xchg
ret
ficoms
adcb
pusha
repnz
pushf
test
jl
outsb
addr16
and
sbb
pop
push
es
mov
out
out
sahf
cmpsl
fcmovbe
xchg
pop
clc
inc
xchg
push
sbb
jle
in
sub
loope
or
ljmp
fcmovnbe
pop
cmc
dec
dec
add
jbe
sub
add
ds
test
or
stos
and
mov
inc
into
adc
mov
dec
je
ljmp
dec
fwait
mov
inc
cmp
insb
cmc
push
fwait
adc
shr
jg
jl
pop
jmp
and
sub
or
sbb
xchg
add
repnz
xor
push
daa
lcall
mov
sub
mov
cmp
push
sub
cmp
fwait
mov
jns
xor
push
dec
mov
jne
aaa
xlat
push
imul
xor
enter
lods
xor
xchg
xchg
mov
sbb
aam
mov
ret
jmp
push
xor
in
data16
sbb
xchg
mov
adc
daa
bound
mov
aaa
sub
push
pop
pop
and
jnp
dec
test
push
sbbb
es
and
dec
iret
jp
ret
push
inc
xchg
xchg
jno
je
and
mov
lcall
xchg
stos
fimull
adc
pop
dec
cwtl
lahf
adc
int
mov
sub
int3
loopne
sbb
test
mov
lret
pop
orb
cmp
pop
shr
pop
jbe
xor
test
or
mov
pop
xor
pop
sub
loop
mov
ds
cltd
dec
adc
dec
in
fldenv
hlt
dec
movsb
cmp
add
mov
ret
and
loope
enter
aam
icebp
jecxz
loopne
dec
adc
es
jmp
je
jp
repnz
pop
das
mov
jb
outsb
xchg
sbb
mov
mov
fdivs
les
lret
jp
push
inc
fstps
test
xor
xorb
icebp
scas
loop
jno
push
ds
sbb
sbb
out
hlt
pop
dec
ljmp
int
ret
push
imul
push
pop
mov
jbe
out
in
int
loopne
outsl
add
push
aad
cmpsb
test
inc
mov
sbb
cmpsl
arpl
xchg
ja
int3
ret
xchg
lock
sbb
fcmove
add
pop
inc
subl
mov
add
xchg
or
push
sub
mov
mov
pop
xchg
sub
rcrl
jecxz
cmp
fstpl
into
mov
xchg
push
add
push
add
cmpsl
inc
add
sar
xor
push
ss
xchg
shrb
fsubl
push
adc
popf
jb
sbb
call
or
dec
jl
pop
xchg
xor
push
aad
mov
in
cmovb
lds
aad
mov
aad
lret
adc
not
mul
enter
fwait
stos
and
or
pop
loope
adc
inc
pop
push
or
and
cs
mull
pop
and
movsb
and
dec
das
jno
jle
cwtl
popf
mov
mov
cmp
imul
inc
xor
push
cmpb
jp
outsl
lcall
mov
jecxz
cld
mov
loopne
pusha
inc
jns
push
fxch
adc
xor
out
fistps
push
jbe
cmp
sbb
jp
outsb
xchg
mov
movsb
or
les
sarl
cmc
dec
pop
push
mov
loopne
das
push
xchg
xchg
push
lret
dec
cld
pop
mov
pop
shll
pop
pop
pushf
jnp
cmp
dec
push
loope
arpl
sarl
sub
cs
cmpsb
push
scas
testb
and
or
pop
adcl
sub
ja
lret
adcb
mov
push
daa
dec
std
mov
testl
mov
jbe
mov
gs
dec
repz
xchg
es
sbb
sub
incl
sbb
push
cltd
adc
out
testl
loop
jo
cmp
shrb
and
cmovo
sub
lret
push
mov
and
cmp
xchg
ljmp
mov
cmp
mov
push
int3
test
pop
mov
mov
aam
push
insl
scas
fwait
outsl
push
mov
ror
adc
lcall
dec
dec
fildll
cld
xchg
ja
std
ret
and
xlat
jnp
bound
or
stc
divb
xor
fdivrp
xor
push
jae
xor
lret
jnp
mov
jno
dec
insb
pop
stos
xor
mov
sbb
cmpsl
mov
cwtl
femms
mov
cmp
xchg
js
mull
stos
or
jo
test
jns
bound
dec
jne
lea
push
sbb
lods
and
sbb
xchg
sub
xor
mov
dec
call
sarb
or
sub
mov
pop
int3
sti
fmuls
out
mov
dec
pop
inc
test
movsb
push
pop
push
push
jle
pop
aam
push
ljmp
xchg
or
jge
inc
nop
loopne
test
cltd
push
add
jbe
gs
lds
stos
repz
into
movsl
popa
ss
jge
aaa
mov
out
lret
aaa
cmp
mov
icebp
jns
test
xor
shrb
jl
hlt
test
sbb
cli
inc
jo
clc
aaa
sub
inc
sbbl
inc
xor
or
call
rcrl
ja
sub
sbb
mov
pop
hlt
sub
push
pusha
inc
insl
cmpsb
fimull
dec
std
aas
iret
int
sbb
fistps
xchg
and
test
jo
mov
imul
cld
jecxz
push
cmc
jp
repz
add
add
jp
outsl
mov
or
dec
lods
pushf
movsb
ror
lock
popf
push
add
ret
or
adc
cmp
cld
add
mov
fdivl
fisubrl
cmp
sbb
push
push
lods
push
sub
lea
pop
push
mov
imul
insl
jo
xor
leave
andl
xorl
loope
xchg
push
xchg
cmpsl
adc
call
and
leave
mov
pop
mov
push
repnz
inc
adc
or
call
clc
mov
push
cli
int3
movsl
ficompl
or
mov
jle
jbe
dec
add
mov
jle
mov
ds
jb
insb
pop
lea
push
test
icebp
mov
pushf
pop
outsb
add
stc
repz
cmp
xchg
aaa
push
cld
punpckhdq
shlb
pop
ljmp
enter
ljmp
lods
push
pop
jae
adc
jno
loop
ret
jecxz
arpl
sbb
ret
hlt
js
jge
dec
fdivrp
dec
dec
pop
mov
nop
ljmp
lcall
fiaddl
mov
xchg
mov
add
mov
push
xor
lea
inc
out
cmc
adc
mov
leave
push
inc
pop
enter
aad
dec
add
mov
dec
mov
pop
in
sbb
pop
stc
rol
xchg
cli
xor
add
ljmp
rol
or
xor
gs
div
mov
or
sub
xor
dec
or
jae
cmpsl
bound
inc
push
inc
push
sub
adcl
mov
inc
loope
cmp
inc
xorl
bnd
out
ret
sub
cmp
movsb
sub
mov
aad
xchg
xchg
mov
rol
loopne
dec
aas
sbb
cmovbe
popf
add
pop
stc
xor
in
mov
outsl
mov
jo
shl
cli
mov
js
aam
push
outsl
xchg
popf
jo
pop
sti
or
inc
xchg
xchg
lods
jmp
and
mov
add
mov
in
inc
movsl
movsl
pop
pop
adc
and
add
sbb
pop
inc
je
add
stos
outsl
xor
sbb
addr16
in
sbb
outsb
and
cmc
pop
shrb
sbb
xchg
and
dec
xor
es
push
ds
negb
jmp
pop
or
mov
ficompl
movsb
xchg
fnstcw
and
lods
mov
mov
mov
cmp
in
or
inc
adc
mov
sub
iret
iret
inc
stos
fcoml
fldenv
inc
push
push
and
call
fwait
nop
in
pop
mov
movsb
dec
dec
push
jmp
fimull
loopne
inc
mov
divl
cmpsl
inc
push
add
mov
mov
in
ljmp
nop
aaa
jg
xor
nop
popa
sub
lret
dec
in
outsl
sub
dec
les
lahf
daa
in
or
hlt
xchg
pop
loop
sub
mov
xchg
std
add
and
pop
popf
and
repnz
xor
and
lods
mov
cmp
dec
adc
outsl
inc
xchg
lods
jae
fisttps
arpl
aaa
mov
pop
mov
pop
out
insb
out
and
sarl
or
sub
jne
jge
or
jecxz
dec
addr16
sub
mov
adc
mull
test
pop
comiss
insb
aas
fldcw
fs
rorb
xchg
sub
movl
jne
aam
incl
add
or
hlt
fs
dec
push
mov
lret
stc
adc
aam
cmpsl
lret
push
lcall
sahf
cmpsb
loope
push
lods
sbb
and
les
push
mov
pop
shll
aaa
cltd
add
pop
mov
sbb
adcl
dec
mov
push
pop
and
adc
xor
cmp
scas
xchg
dec
loope
pushf
insl
mov
mov
mov
or
jne
mov
or
roll
mov
fwait
jnp
mov
sub
push
fldcw
outsl
push
dec
lods
mov
es
push
mov
jmp
inc
mov
mov
in
lret
les
sarb
fildll
jo
add
repz
xor
add
mov
lret
mov
push
outsl
xor
pushf
mov
xchg
pop
repz
sub
or
shll
gs
xor
mov
mov
sub
ljmp
cs
push
push
xchg
iret
dec
cmp
jnp
sarb
inc
ret
or
aaa
pop
pop
call
in
dec
les
lret
dec
pop
add
push
xchg
in
lahf
fadds
mov
repnz
les
iret
pop
adc
cltd
repz
out
mov
jecxz
jbe
js
add
sti
rol
mov
lods
mov
push
gs
mov
aam
push
decb
xchg
daa
outsl
mov
pop
adc
push
clc
mov
mov
xor
jae
push
xlat
xor
add
pop
dec
loopne
mov
sub
aam
lahf
iret
icebp
in
ficomps
sub
inc
imul
xchg
out
orb
ss
xchg
sahf
popl
cs
mov
scas
imul
in
sub
pop
mov
mov
cli
fsubrl
arpl
push
aaa
xacquire
xchg
fisttpll
mov
decb
cmpsl
add
rcl
popf
fwait
inc
or
test
dec
jmp
dec
loopne
shlb
fists
mov
je
mov
jl
imul
loope
pop
jo
pop
mov
pop
mov
sbb
enter
push
cli
jb
lea
adc
std
jge
insl
lahf
cmp
add
pushf
ja
es
push
adc
div
mov
lret
sbb
ret
repnz
and
dec
je
cmc
jb
popa
repnz
adc
mov
pop
inc
fcmovnu
push
ja
lcall
jae
rcrl
jnp
vshufps
jecxz
sbb
in
out
mov
mov
dec
pop
mov
movsb
sub
push
mov
inc
add
ret
mov
mov
fdivr
and
add
push
nop
fadds
pop
xor
imul
mov
les
jmp
sub
inc
icebp
jbe
adc
xor
sbb
and
fsubr
and
inc
dec
adc
les
xchg
sahf
pop
dec
jge
lahf
in
xor
inc
pop
les
pop
test
sub
and
xchg
pop
inc
push
ret
mov
fistps
pop
mov
cmp
or
div
xchg
test
dec
and
and
adc
lahf
test
cwtl
popa
xchg
pop
pop
add
in
dec
mov
add
imul
sbb
jg
mov
decl
xchg
xor
xchg
inc
add
pop
and
sti
inc
push
mov
pop
mov
loope
push
outsl
add
lock
mov
in
loop
les
int
push
icebp
arpl
mov
into
dec
mov
jmp
cwtl
test
imul
imul
add
jle
fldt
into
mov
xchg
pop
sub
movl
lods
push
jl
and
dec
inc
pop
outsl
or
xchg
jp
cwtl
inc
lea
scas
add
cli
js
pop
mov
inc
jecxz
or
sbb
insl
add
leave
inc
into
pop
jl
mov
jae
rol
jns
mov
xor
xchg
sub
negb
xor
pop
in
das
jb,pt
dec
and
fnstenv
pop
xchg
and
cmp
call
test
lcall
sub
xor
loopne
mov
sti
mov
and
int3
scas
int3
imul
aaa
sbb
jno
ljmp
fsts
mov
loopne
je
sbb
out
imul
pop
sub
sub
sbb
mov
add
mov
movsl
push
lods
ret
dec
jcxz
add
addl
push
xchg
addr16
pop
jne
mov
pop
xchg
xor
jle
xor
pop
mov
test
sti
mov
out
jnp
and
add
mov
and
or
mov
push
push
adc
sub
pop
mov
out
mov
enter
adc
dec
dec
repz
jno
push
stos
add
icebp
cltd
mov
lock
int
repz
fs
jle
mul
add
jbe
fs
inc
out
mov
cmpsl
jecxz
mov
mov
xlat
shl
jmp
pop
sbb
bound
adc
push
sub
popf
jmp
imulb
and
cmp
mov
mov
out
cmpsb
pusha
mov
fbld
insb
xor
xor
and
push
cmp
pushf
sub
mov
outsl
xor
push
jecxz
pop
adc
std
sub
inc
sti
out
jge
and
lret
dec
fcoml
test
jp
push
pop
jbe
incl
or
cld
and
xchg
fwait
cmp
xchg
jmp
aad
jmp
outsl
outsl
add
jno
jle
test
fcomp
dec
sub
add
push
mov
cmp
mov
pop
push
sti
xlat
mov
push
lcall
push
clc
xor
dec
cmc
imul
fisttps
popa
rcrb
or
mov
popa
or
dec
jle
pop
faddl
push
and
pushf
lods
sbb
cmpsb
loope
lea
into
icebp
lods
notb
ds
xchg
int3
dec
aam
aam
jp
jb
inc
pop
bnd
fs
mov
ds
les
jge
mov
or
out
out
es
cmp
andl
test
ret
in
sub
or
and
dec
xor
loopne
out
xchg
lea
adcl
jl
addb
call
and
adc
mov
add
movsl
mov
mov
lahf
jnp
popf
dec
insb
jecxz
cmpsb
into
lods
jbe
loopne
adc
cmpsb
jmp
mov
pop
xchg
aaa
sbb
fs
jg
fists
pop
in
enter
sbb
in
inc
out
subb
add
orl
mov
push
mov
aam
cmp
ds
mov
mov
dec
ds
mov
xchg
pop
imul
sti
imul
jmp
or
xor
es
divl
in
sahf
call
cmpsl
mov
dec
and
or
fidivrs
aas
jnp
xor
es
mov
stos
pop
jmp
cmpsl
and
fidivrl
add
pop
and
cmpb
adc
push
fisubl
mov
lods
adc
flds
jbe
ds
fdivs
adc
cltd
gs
pop
xchg
jno
jge
in
add
iret
test
mov
iret
hlt
jo
lea
and
sarl
add
lds
inc
pushf
outsb
subl
add
fidivs
jg
mov
fcmovb
mov
mov
pop
popf
jle
lock
mov
imul
pop
aaa
push
or
popf
es
jp
cld
fnsave
fwait
std
sub
pop
jmp
add
inc
lock
outsl
inc
pop
xchg
daa
out
icebp
sbb
add
dec
mov
repnz
mov
dec
jae
fldl
test
adc
je
loopne
orl
std
ret
cmp
adc
loope
xlat
and
test
scas
xor
addr16
je
jp
push
lcall
scas
and
repnz
ss
cld
jo
xchg
mov
inc
jnp
xchg
aam
sbb
push
xchg
mov
inc
std
fs
sarl
cltd
pop
dec
fistl
add
iret
ret
scas
and
adc
and
pop
lcall
add
rep
push
jecxz
lea
mov
jl
sub
mov
jns
push
sub
add
xor
iret
js
popa
int
mov
cmp
out
gs
or
pop
out
adc
in
test
or
daa
inc
lret
inc
inc
xor
hlt
lods
aam
dec
or
inc
push
lahf
in
sub
pusha
push
and
xor
aad
or
push
mov
dec
cld
or
arpl
or
push
inc
dec
mov
sbb
emms
das
pop
insl
stc
push
leave
aaa
ljmp
ret
ficomps
mov
mov
ret
fisubrs
stc
add
das
cmpsb
iret
or
or
call
out
mov
in
push
in
movsb
fsubp
icebp
shlb
cmp
dec
jmp
and
test
mov
mov
dec
test
ret
popa
or
add
xlat
sarl
rolb
pop
fldcw
outsb
andnps
mov
pop
cli
jl
les
fldz
fwait
and
push
lret
insb
mov
or
imul
mov
fstps
stos
jbe
push
aad
cwtl
mov
inc
sub
fiadds
mov
sbb
pushf
and
jno
ret
sub
pop
pushf
sub
xchg
sbb
lea
sbb
movsb
xchg
pop
movsb
mov
in
add
mov
mov
adc
or
repnz
daa
or
xchg
or
adc
sub
cltd
subb
jne
xor
inc
movb
cltd
or
shl
pop
lret
out
lods
insl
mov
cwtl
and
js
je
cmp
xchg
mov
rorl
push
popa
xchg
int3
clc
out
aad
push
and
or
and
mov
les
xor
xchg
mov
pop
stos
popa
xlat
xchg
cs
shrl
movsl
aas
cli
iret
aaa
mov
or
push
xchg
lods
stos
xchg
mov
int
inc
fcomps
test
in
int3
cmp
fadds
sti
pop
inc
xor
int3
stos
jmp
shlb
nop
sti
jmp
jnp
inc
or
xlat
in
mov
dec
add
or
test
and
leave
xchg
in
stos
inc
mov
dec
mov
sbbb
arpl
pop
sbb
out
ss
and
out
push
dec
stos
xor
imul
push
xor
into
cwtl
jg
push
test
pop
xchg
arpl
cltd
loope
mov
rorb
xchg
mov
stos
add
mov
cmp
cmp
adc
sub
cli
xchg
int
pop
mov
test
sbb
push
add
xchg
push
mov
push
sti
jo
ja
lret
in
pusha
ja
cmpsl
pop
stos
ds
test
mov
sub
outsl
popf
fcoms
sbb
xor
aaa
pushf
cmp
mov
cltd
jle
jle
mov
xor
pop
jle
je
pop
insl
aam
jge
or
fsts
mov
cmpsb
adc
and
sub
xor
lds
lods
rclb
inc
push
jns
hlt
les
sbb
jns
pop
push
nop
cli
std
ss
sub
lcall
xchg
int
mov
push
mov
ja
dec
mov
push
inc
push
sbb
jnp
mov
in
jle
mov
xor
cmp
jmp
fmuls
jb
sbbl
jo
rclb
dec
ja
loope
fs
bound
sub
addl
gs
arpl
add
cmp
loopne
int
add
xchg
ljmp
pop
ja
xchg
mov
or
enter
or
inc
imul
xlat
pop
aaa
lgs
push
into
inc
adc
jmp
and
mov
in
out
fistl
cmpb
pop
insl
sbb
pop
rol
icebp
ret
pop
shll
lds
jne
cmp
adc
inc
sub
push
call
inc
outsb
ret
pop
pop
int
add
push
into
mov
lods
adc
push
das
repz
mov
stos
cmp
cmp
or
ret
jecxz
sub
adc
and
in
fmuls
cmpsb
pop
cld
pusha
jecxz
sbb
dec
xchg
divb
mov
cmp
or
cmp
pop
mov
adc
loop
xchg
dec
mov
shrl
adc
mov
push
mov
pop
and
int
push
pop
mov
jo
lock
dec
adc
mov
mov
inc
mov
jo
int3
pop
roll
mov
cmp
jecxz
push
add
add
in
and
xchg
cld
and
and
xchg
adc
or
lea
push
aas
test
mov
and
sub
mov
xchg
test
jbe
or
mov
xchg
or
and
pusha
pop
or
mov
outsl
scas
lret
hlt
xchg
cs
pop
pop
dec
and
push
xchg
in
sub
loope
loopne
clc
insb
movsl
loop
nop
adc
pop
popf
jmp
add
mov
or
sub
ret
jge
mov
hlt
add
popa
lock
filds
mov
dec
pop
cmp
and
add
mov
clc
mov
jl
add
inc
mov
jecxz
push
push
out
mov
push
jmp
js
std
sub
jp
sbb
popa
mov
jmp
jae
mov
adc
dec
aam
jb
push
mov
xchg
cmp
sti
ret
push
adc
dec
dec
jnp
xor
dec
add
movsb
add
lock
inc
cmp
push
clc
scas
mov
adc
inc
aam
pop
subb
push
xchg
popa
pop
repz
rcrb
loopne
push
and
and
fldenv
mov
jno
lods
or
mov
pushf
test
into
xor
in
inc
mov
inc
fcmovne
clc
andl
aas
js
call
xchg
movsl
mov
stos
jno
gs
insl
dec
cmp
cwtl
inc
inc
test
jb
lcall
std
mov
mov
xor
and
pop
and
fcompl
cwtl
push
clc
fcomps
out
insl
pop
sbb
loopne
add
ret
pop
push
sub
adc
ror
push
popa
add
in
and
repnz
out
xor
pop
imul
in
in
sahf
sarl
inc
mov
test
inc
call
mov
testb
aas
imul
pop
mov
es
arpl
push
out
xor
mov
js
out
cmp
push
sub
aad
xchg
push
adcb
imul
dec
in
das
inc
scas
cmpsl
cmp
test
mov
mov
dec
inc
test
imul
outsb
adc
ja
xchg
add
fbstp
mov
enter
loopne
mov
add
stc
mov
into
mov
ja
test
push
sbb
fcmovnu
dec
cmp
xor
xchg
das
and
jb
push
lcall
fmull
mov
cmp
jnp
stos
xor
lahf
aaa
sub
jp
lock
mov
insb
pusha
sub
ret
aas
stos
das
mov
add
test
and
aas
ljmp
popf
cmpsl
mov
lods
jle
dec
movsb
xor
mov
orl
mov
mov
mov
jge
jne
outsb
pusha
dec
sar
outsl
fwait
pushf
sub
xchg
in
mov
sub
push
iret
sti
or
hlt
popf
movsb
cmp
pop
imul
or
jl
pop
sub
enter
xchg
dec
or
testl
popf
lock
sbb
mov
and
mov
add
mov
inc
xchg
sub
pop
pop
out
cmp
or
popf
ds
imulb
les
in
fcoms
adc
sub
outsl
daa
movsb
jb
push
test
mov
mov
dec
mov
mov
pusha
repnz
add
xlat
sbb
nop
rcrl
adc
cmp
test
inc
das
popf
mov
imul
sti
sbb
popl
push
aad
push
andl
int3
xor
in
in
movsb
fidivrl
fdivl
fistl
mov
imul
add
aas
loope
cli
pop
out
clc
or
dec
int
cmpsb
repz
cltd
je
out
pop
fistpll
repz
inc
xor
xor
lock
pop
mov
fcmovbe
xchg
in
cmc
sub
int3
or
pop
hlt
push
jmp
xchg
bound
add
add
aas
pop
inc
movsl
lods
mov
fsubrs
and
bound
xchg
push
movsl
mov
inc
sbb
push
dec
xchg
daa
out
push
xlat
lea
push
push
mov
insl
mov
ret
fnstenv
fs
pop
jg
scas
sub
inc
ljmp
adc
jo
xchg
outsl
out
ljmp
xchg
mov
testl
pop
ja
jecxz
lods
aaa
or
daa
and
add
nop
push
mov
call
dec
pop
repnz
xchg
push
mov
fwait
adc
stos
lret
stc
sub
ja
out
stos
lods
fisttpl
pop
sub
jbe
pop
jno
icebp
xor
pop
popa
pop
xchg
outsl
pop
push
fst
adc
add
cmp
jge
sti
aad
jns
push
mov
push
mov
sbb
std
pop
cwtl
mov
sub
adc
ror
scas
adc
xchg
dec
adc
shll
out
dec
pop
ret
push
jg
ret
xlat
ds
sub
sbb
arpl
pop
stc
or
imul
adcl
jmp
lret
jp
xchg
xlat
push
orl
mov
and
xorb
in
push
jno
mull
xchg
iret
pop
les
call
xor
inc
fsubs
pushf
loopne
aam
popf
sub
cmpb
shl
xchg
aad
xor
adc
fwait
mov
aaa
fs
jmp
xchg
loop
js
push
push
fsts
adc
xchg
jp
cs
cli
movsl
add
xor
mov
push
adc
dec
ss
fstp
add
cmp
fsub
pop
enter
mov
cmc
cmp
mov
or
pushf
jl
dec
lock
add
fcompl
aad
inc
xchg
out
ljmp
mov
inc
pop
xchg
loop
outsb
jl
sbb
hlt
hlt
in
movsb
cmp
icebp
sti
xor
mov
push
mov
inc
jbe
lcall
add
push
out
std
ja
sub
cmp
adc
mov
push
dec
cmc
or
fcom
push
ss
repnz
mov
stos
popa
jo
jmp
loope
outsb
sahf
xor
jp
xchg
mov
and
mov
mov
xchg
out
mov
dec
and
fs
xchg
xor
mov
sbb
out
jl
lret
hlt
xchg
sub
push
mov
mov
addr16
sti
xor
fisubrl
dec
mov
loop
fs
es
push
sub
mov
fdivs
push
bound
nop
lods
mov
and
or
or
mov
fucomp
ficomps
cmp
push
pop
hlt
or
hlt
push
mov
add
add
inc
stc
jmp
jae
jbe
fcoms
aam
xor
enter
mov
cwtl
das
and
add
jnp
or
pusha
lds
mov
xor
inc
fisubrl
lret
adc
aad
add
cli
add
inc
andb
pop
mov
pop
loope
pop
mov
les
cmpl
cmp
fwait
xorb
pop
inc
pop
lods
and
mov
imul
jb
nop
cmp
hlt
adc
mov
cld
push
xchg
push
sub
orl
pop
mov
lea
mov
push
cmp
enter
and
rcll
es
cmovno
push
push
lods
sti
or
sub
testl
mul
jmp
pop
scas
jecxz
lock
mov
and
in
pop
mov
lods
ljmp
fs
js
lock
xorb
adc
movsl
int
sub
pop
das
sti
or
inc
mov
and
and
pusha
aaa
sbb
push
loop
subl
insl
and
sbb
inc
jg
stos
mov
add
leave
andb
popa
add
mov
mov
dec
js
xor
pusha
sbb
push
adc
inc
jae
mov
cmp
inc
jecxz
inc
inc
push
sbb
subb
pop
dec
or
xlat
stos
adc
aas
or
adc
xor
hlt
and
mov
outsl
andb
or
jb
push
push
dec
xchg
arpl
push
sbb
inc
sbb
or
add
mov
and
dec
cli
scas
ja
stc
dec
rcl
push
pushf
push
fldl
gs
jl
cmp
mov
jl
lods
mov
mov
pop
mov
xor
and
fbstp
mov
cmp
faddl
mov
pop
mov
sahf
xchg
inc
sub
dec
add
leave
adc
push
xchg
mov
test
int3
inc
fcom
mov
leave
rorl
push
cmp
call
sub
popf
pop
in
sbb
cmp
subb
push
movd
push
lods
icebp
mov
dec
adc
repz
xrelease
cwtl
push
add
mov
jo
pop
cmpsb
insl
inc
adc
cmp
rorl
sbb
sub
jb
sub
leave
fisubs
adc
out
sub
cli
xor
test
or
jns
lods
arpl
clc
or
sbb
shl
lock
push
dec
or
fimuls
push
cwtl
sbb
cs
je
inc
stc
stc
push
iret
out
push
rcrl
add
dec
cmp
and
rol
sbb
sub
rorb
sbb
testb
cmpsl
cmp
fiaddl
mov
push
mov
out
hlt
jo
dec
scas
cmp
xchg
loopne
jno
fcoms
xor
data16
outsl
outsb
lock
dec
push
pop
movsb
adc
shlb
mov
call
push
ret
dec
cmp
sar
inc
sub
popf
xchg
pop
xchg
out
mov
jg
xchg
cli
and
das
inc
shlb
sub
fucomi
mov
pushf
shl
sbb
sbb
adc
sub
lds
mov
push
fdivrl
mov
add
mov
movsl
stc
xor
gs
jnp
lods
pop
lahf
lods
in
mov
xchg
xchg
adc
mov
sbb
push
inc
loopne
fwait
jb
jg
int
dec
roll
inc
push
movl
rorb
and
jne
push
jb
mov
rorb
push
xchg
sahf
cmp
dec
testl
or
and
call
scas
jne
insb
popa
add
jp
stos
cmc
dec
addr16
ret
mov
mov
mov
popa
fwait
cmp
pop
xchg
jo
testb
scas
repz
data16
mov
push
mov
sbb
lods
cli
fsubp
mov
shl
dec
ret
add
pop
pop
mov
sahf
daa
popf
cwtl
cwtl
mov
stc
jo
aad
shlb
jmp
add
dec
fs
out
push
ds
gs
fs
adc
lea
stos
lret
dec
jmp
xbegin
xchg
sub
int
inc
movsb
stc
or
insl
and
or
inc
xor
clc
out
jae
psubd
fildl
inc
lea
adc
sub
pop
jp
jb
and
dec
pop
pop
mov
aad
pushf
fnstsw
ljmp
ja
xlat
jle
lds
sbb
jb
cmp
ds
sbb
pop
xor
enter
pop
int
call
fcoms
mov
jle
pop
mov
in
pop
pop
dec
inc
dec
xchg
inc
sub
fcomi
dec
mov
cmc
inc
imull
xor
mov
and
push
sub
scas
loope
sub
jns
add
adc
scas
arpl
cld
push
sub
aam
rcr
subb
add
push
xchg
mov
or
mov
scas
mov
int
adc
inc
pop
jne
mov
mov
addl
gs
fldl
xchg
cmp
add
sbb
scas
jb
clc
lods
push
mov
cmpsl
daa
daa
daa
dec
push
pop
push
push
fcoml
scas
ja
jb
rcll
ljmp
sbb
enter
mov
je
test
pop
or
dec
push
and
mov
inc
or
push
lods
lds
js
mov
xchg
test
jp
inc
pop
xchg
bound
lcall
inc
mov
mov
mov
add
call
test
inc
mov
movsb
ror
out
stos
xchg
mov
cmp
push
pushf
testb
int3
jle
popa
idivl
pop
sbb
arpl
push
divl
mov
jno
sub
out
stos
mov
aaa
aad
in
in
daa
mov
or
push
lret
jbe
addr16
inc
repnz
or
and
in
arpl
ret
and
jle
or
scas
cmp
push
in
jo
xor
loopne
shrb
movsl
ja
sub
adc
adc
icebp
inc
add
push
sbb
jmp
das
xchg
repz
cli
lock
cmpsb
inc
add
sti
fiaddl
out
inc
xor
mov
sbb
cmp
dec
xorl
imul
jae
pop
xchg
mov
mov
dec
xor
shll
popf
ret
lea
push
out
bound
inc
ret
xchg
sub
and
jle
pop
mov
sbb
mov
mov
dec
loope
xchg
jle
mov
inc
ljmp
jb
jg
cmpsl
mov
add
in
lret
xchg
in
dec
adc
clc
repnz
icebp
repz
jl
xchg
sub
jns
fsubrl
xchg
vunpcklps
sysexit
outsb
cmc
push
aaa
stc
push
mov
xchg
adc
lcall
adc
adc
jno
cmc
xor
cld
mov
outsl
test
adc
ficompl
dec
insl
mov
or
or
dec
fisttps
xor
es
cmc
and
jne
lods
jb
jp
test
sysenter
clc
push
and
faddl
mov
imull
xchg
push
lcall
adc
repz
inc
pushf
iret
mov
mov
mov
mov
scas
sub
imul
push
mov
inc
or
repz
pop
xlat
mov
jns
adcl
lahf
sbbl
lea
cmp
mov
je
dec
xor
inc
pinsrw
mov
mov
cmc
int
sahf
call
insb
stc
inc
shrl
push
push
leave
or
xchg
icebp
jns
push
pop
loopne
push
lret
inc
jg
jp
xor
cltd
ljmp
mov
pop
xor
and
popa
outsb
inc
sti
pop
xorl
push
pop
fmuls
lcall
add
sbb
outsl
inc
sbb
add
pushf
addl
cmp
mov
shlb
sar
xchg
shlb
leave
sbb
out
mov
pop
mov
xchg
ret
insb
std
aam
jnp
xchg
pusha
std
repnz
lret
test
xorl
mov
fnstcw
lods
add
mov
jno
or
xor
sub
cpuid
add
xchg
into
or
cmp
dec
imul
xchg
hlt
loope
xchg
mov
pop
test
adc
cmp
addr16
mov
mov
mov
or
fwait
jp
xchg
inc
mov
inc
jae
fiadds
jae
xor
cmp
sbb
ret
sub
sbb
push
nop
mov
dec
cltd
xchg
loopne
stc
add
mov
sbb
cmp
or
push
mov
inc
leave
cmp
inc
adc
sbb
xor
add
adcl
fstps
mov
sub
push
into
mov
mov
xlat
and
adc
push
sub
dec
jmp
fldt
sbbl
pop
in
test
das
mov
cmp
cmp
mov
ret
cwtl
jo
add
mov
inc
sbb
sub
lods
inc
and
pop
xchg
cmpsb
aas
lock
ja
fcmovb
scas
ret
or
pop
xchg
jmp
mov
pop
mov
pop
mov
jecxz
stos
fmul
dec
sub
pop
into
dec
jge
ficoml
and
movsb
jge
mov
inc
push
icebp
negb
shlb
stos
jmp
pop
sbb
stos
pop
test
aaa
lretw
mov
mov
jb
ficoml
out
ret
outsb
jp
je
push
in
movsb
cmp
cmp
andl
stos
mov
into
jmp
mov
dec
loopne
adc
std
int
adc
rcrb
hlt
push
fnstcw
lret
fwait
jo
decb
xor
mov
mov
dec
dec
in
add
bound
andb
popa
fwait
shll
mov
es
pcmpgtd
loope
and
aad
xor
push
out
cld
mov
dec
ret
mov
or
out
inc
and
mov
dec
jle
cmpsb
test
arpl
push
or
cmpsb
sbb
adc
push
lahf
and
pop
cwtl
push
jmp
cmpl
test
and
nop
push
mov
fdivl
sbb
cmp
aam
aas
add
jp
fs
pusha
jns
mov
or
leave
adc
lahf
aas
push
and
fstpt
jnp,pt
or
jae
rorl
jp
push
inc
xchg
dec
iret
push
lods
inc
aam
sahf
lcall
stos
xchg
sbb
dec
sbb
jbe
and
stos
dec
lock
jnp
add
fldt
mov
stos
sti
lock
cmp
xchg
out
stc
adc
shl
push
mov
push
iret
dec
loop
push
mov
out
mov
inc
cmc
add
popf
in
mov
scas
in
dec
js
test
sub
add
and
push
xchg
stos
push
jne
dec
adc
add
in
icebp
testb
fdivl
leave
inc
push
lahf
dec
dec
push
or
jbe
scas
xor
call
cmp
inc
add
fstpt
push
ret
js
push
lcall
fwait
lcall
mov
adc
loope
in
into
mov
mov
mov
jno
fdivrs
popa
add
or
jge
sub
xchg
loop
fsubl
pop
stc
mov
stc
jno
in
mov
out
mov
mov
mov
push
repz
push
lds
movsl
dec
int
xor
movhps
add
xchg
mov
iret
mov
or
repnz
and
mov
stos
xchg
lcall
push
mov
mov
lcall
xchg
xchg
xchg
adc
stos
imul
addr16
sbb
or
inc
dec
xor
mov
inc
pop
int3
mov
aad
in
je
jne
mov
add
fwait
test
loope
xchg
xchg
aad
xchg
in
cmp
ret
jle
mov
pop
mov
sahf
ret
cmp
adc
push
cwtl
out
mov
or
data16
mov
gs
icebp
jg
or
mov
or
lods
add
jge
sti
inc
outsb
xor
xor
movsl
push
loop
movsb
jg
sub
inc
jge
pop
push
and
andl
jno
and
add
adc
mov
nop
cmpsb
cmp
pop
push
aam
data16
jo
add
mov
add
ljmp
mov
stos
ret
jae
jg
mov
fcoml
and
lds
mov
out
pop
dec
cmp
lret
popa
or
in
jnp
fwait
std
test
sub
and
push
cmpsl
stos
jo
push
mov
into
add
adc
enter
xchg
pop
mov
push
out
mov
mov
xor
negb
sbb
add
cs
fmulp
xchg
or
subl
cli
sub
dec
sub
pusha
in
fsubl
lock
rcl
cmc
inc
out
pop
xor
inc
fcmovu
stc
mov
jl
mov
inc
cmp
pop
jb
or
ret
lahf
lahf
fisttps
int
push
shrl
repz
les
cmp
fnsave
popf
mov
ret
push
add
push
sub
imul
fldenv
mov
je
sub
scas
xor
mov
fstl
and
xchg
loope
xchg
or
ja
pop
cmp
ds
icebp
imul
fwait
repnz
bound
int3
pop
ja
or
fs
dec
pop
xorl
pop
add
mov
inc
cmpsl
popf
jo
bound
icebp
adc
lret
mov
les
mov
inc
sahf
jg
mov
mov
test
or
dec
jo
adc
xchg
cwtl
pop
mov
fstpl
int
cld
or
iret
jge
pop
pop
shll
pop
hlt
cs
mov
popa
xchg
inc
call
jecxz
pop
test
sbb
adc
jne
mov
sub
cld
pop
and
cmc
jno
fstpl
xchg
mov
int
mov
adc
testb
sbb
cld
lds
inc
sub
sub
xchg
mov
add
add
sbb
movsl
popa
popf
adc
push
incb
add
imul
shll
cmp
push
xchg
cmpsl
popa
aas
test
cmc
dec
mov
scas
dec
bound
and
bnd
mov
jbe
or
imul
jl
pop
sbb
cmp
mov
popf
fidivs
jo
jo,pt
or
mov
xchg
xchg
fadds
push
adc
sti
lahf
adc
xchg
cmp
jmp
mov
inc
sahf
cltd
ror
xchg
mov
sbb
in
les
fs
mov
shll
sbb
jb
lcall
lods
adc
int3
movsb
rorb
xchg
lods
outsb
mov
add
sbb
daa
mov
cmp
mov
ljmp
cli
cmp
mov
sti
andl
jle
icebp
mov
lret
mov
cmp
push
xchg
jno
mov
inc
pop
adc
ret
pop
xchg
mov
cld
xchg
sbb
mov
in
and
mov
inc
jne
cmp
push
xor
cmp
pop
and
adc
pop
aas
jnp
test
pop
pusha
mov
xor
sbb
mov
xor
or
sar
mov
ss
outsl
popa
cmp
cld
popa
sbb
lods
or
mov
push
mov
lds
push
xchg
mov
imul
xchg
jle
rol
je
dec
inc
cmp
inc
loop
mov
clc
out
push
mov
jmp
outsb
rorb
lcall
inc
lahf
lods
xchg
daa
cmc
pop
xchg
cmpb
jno
or
push
into
je
loopne
mov
into
push
fimuls
mov
push
cli
sub
repz
jbe
rol
sbb
or
sbb
das
jge
imul
and
mov
xorl
cmp
or
cmp
mov
in
and
sysexit
pop
ret
into
cs
sbb
mov
pusha
mov
xchg
sbbl
xor
iret
mov
inc
mov
inc
inc
popf
mov
faddl
bnd
out
mov
iret
cmp
call
fsubl
dec
mov
add
sti
iret
sub
cmp
push
jecxz
lcall
push
insl
es
adc
ss
test
sub
dec
xor
xchg
not
inc
loope
mov
add
sbb
push
add
js
fistpll
mov
scas
inc
flds
xorb
int
je
mov
push
invd
insl
mov
popa
cmpsb
sub
addr16
jmp
cmp
xchg
add
cmpsb
and
jp
out
inc
cmp
movl
ljmp
jnp
cmp
pop
xchg
and
jl
icebp
test
stc
fwait
arpl
push
lahf
mov
mov
mov
add
stos
cld
xchg
test
nop
dec
mov
cmpsb
aaa
mov
enter
hlt
xchg
and
or
add
and
aas
mov
xor
mov
mov
cltd
pushf
repnz
leave
les
js
mov
inc
test
fnstcw
mov
je
inc
arpl
or
jb
jbe
adc
and
add
mov
add
les
loope
loop
jnp
pop
sbb
sub
fdivrp
xchg
int
sbb
sahf
pop
lock
mov
jno
pop
test
jg
adc
daa
push
cmp
lods
sbb
dec
sahf
cmp
mov
sub
xchg
roll
movsb
pusha
xchg
push
add
iret
push
sub
mov
fiaddl
mov
pop
mov
mov
jge
les
pushf
dec
xchg
loope
movsl
fisubs
je
call
imul
shll
addr16
bndstx
aaa
sarb
inc
cwtl
pop
xor
add
inc
jge
add
in
mov
test
adcl
jbe
sub
inc
sbb
pop
sbb
daa
rcrl
aad
sbb
mov
pop
mov
xchg
lods
and
jae
ss
sbb
repz
stos
aam
divb
pusha
jo
dec
ljmp
sub
arpl
movsb
into
jno
test
inc
push
out
test
jge
mov
jns
mov
imul
sbb
test
cwtl
enter
pop
movsl
mov
sbb
dec
stc
adc
mov
scas
orb
fcomps
jle
jp
xchg
rorb
cwtl
scas
push
xor
push
jno
repnz
fs
push
sbb
nop
cli
jmp
rcrl
test
aaa
pop
xchg
mov
or
mov
or
cmp
adc
dec
jb
cmp
sub
cltd
sti
jg
jecxz
sub
jecxz
xor
adc
test
mov
cld
mov
xchg
js
lea
std
xchg
mov
push
das
fiadds
adc
push
shrb
push
idivl
xor
jae
std
xor
mov
scas
daa
int3
outsl
inc
in
movl
in
mov
inc
js
std
xchg
xor
pop
and
mov
or
dec
inc
je
enter
xchg
les
orl
mov
popa
adc
stos
repz
push
jne
shr
jecxz
pop
mov
mov
mov
pop
jp
pop
hlt
fsubrl
push
stc
cmpsl
pop
pop
xchg
mov
roll
xor
xchg
push
loopne
dec
fwait
lret
sbbb
inc
adc
mov
mov
pushf
cmp
ja
dec
sub
popa
fisubs
jnp
aaa
repnz
adc
jae
call
mov
nop
jge
jle
loop
adc
popa
add
xlat
pop
cmpl
mov
mov
enter
and
rolb
dec
and
or
add
aaa
pop
out
pop
cmp
pop
loope
fisubl
adc
adc
or
popa
push
dec
pop
push
jmp
lods
in
mov
sti
mov
lret
lods
movl
xchg
and
push
aas
and
mov
lods
cmp
adc
pushf
nop
fdivrs
test
stc
out
scas
pop
mov
adc
jbe
dec
jne
mov
in
mov
icebp
dec
aad
loope
jg
flds
dec
mov
mov
in
sub
mov
es
adc
lcall
push
xor
jbe
daa
aaa
ret
test
mov
mov
repz
ret
jmp
mov
testl
or
push
leave
insb
pop
test
jae
sbb
loop
cld
in
out
adc
or
pop
cmpsl
mov
call
add
fsts
mov
nop
mov
int3
push
pop
mov
fnstcw
clc
push
inc
into
mov
push
repz
fstp
jp
cmp
pop
and
xchg
test
aad
jl
and
repnz
into
push
mov
mov
lods
shl
int
xchg
xchg
pop
mov
adc
inc
sub
fcoms
outsl
sahf
jp
mov
mov
lret
loop
out
xor
scas
leave
and
es
pop
data16
dec
test
sbb
pusha
lds
sbb
cmpsl
pop
inc
xor
inc
sti
mov
ljmp
push
or
stc
cwtl
sub
dec
mov
out
push
insb
dec
clc
loopne
jle
sbb
stos
enter
scas
push
shl
js
dec
and
std
push
movsl
arpl
ret
mov
test
popf
neg
pop
imul
add
sub
frstor
xor
cmc
push
scas
fldcw
inc
xor
jb
adc
psubusb
out
or
pop
pop
fstpl
inc
xchg
jp
inc
sbb
cmpsl
mov
test
ja
lds
push
aas
adc
lret
sbb
int
and
cmc
pop
andl
pop
add
movsl
push
rorb
int3
fs
rcr
jecxz
push
dec
dec
jno
stos
fptan
mov
or
inc
xor
mov
jne
lods
lahf
add
mov
pop
xor
sahf
mov
lds
test
insb
mov
sub
sub
cltd
out
ret
adcb
adc
mov
add
mov
pop
outsl
add
pusha
dec
pop
jecxz
cmpsb
loope
sub
xorps
jae
jle
rcrb
inc
push
pop
outsb
fstpt
dec
inc
bound
inc
mov
push
pop
ret
movsl
cmp
dec
lret
xor
lcall
neg
xlat
mov
xor
add
sub
mov
cmp
hlt
lcall
lahf
mov
out
cmc
jle
jns
lods
xchg
jne
ret
faddl
imul
leave
pop
sub
stc
stc
lds
xchg
gs
out
or
mov
idivl
int3
dec
jg
mov
or
loope
test
or
repnz
cmpsb
cmc
pop
pusha
xchg
xor
sub
mov
mov
xchg
push
dec
and
mov
push
pop
outsb
dec
out
cwtl
rep
shl
cltd
dec
dec
bound
xor
imul
or
xor
add
xchg
ffreep
jo
jg
cwtl
cwtl
scas
js
and
or
ja
sbbb
fiadds
pop
movsb
imul
out
dec
inc
arpl
pop
cmpsl
sbb
arpl
ret
push
and
jo
aaa
addr16
fistps
in
sub
and
nop
test
cld
out
dec
xchg
push
mov
sub
mov
out
inc
sub
ret
inc
dec
xor
aad
insb
out
int3
mov
sahf
mov
imul
loopne
loopne
aas
dec
adc
shl
push
das
movsl
scas
mov
pop
xor
sbb
cs
rorl
dec
dec
cli
js
iret
jg
jo
test
push
call
in
jp
and
push
hlt
mov
aas
lock
mov
adc
or
inc
mov
rorb
cmp
mov
sub
in
ljmp
mov
xchg
fsubrs
mov
mov
out
hlt
pop
push
aad
loopne
cld
cmp
lods
push
xor
stos
rcll
lods
sbb
out
into
inc
mov
arpl
dec
aas
xchg
test
stc
and
mov
sub
dec
push
mov
add
xlat
repz
shll
or
and
mov
and
out
cltd
outsl
adc
push
xchg
leave
push
cltd
nop
mov
mov
mov
dec
arpl
cmc
pop
mov
lret
cmpsl
push
mov
nop
fsub
push
sub
out
cmc
pushf
mov
xchg
repz
insl
repz
lahf
shl
and
ljmp
scas
jns
test
sbb
lods
out
imul
pop
mov
outsb
adc
iret
mov
pop
adc
adc
lret
daa
leave
add
push
xchg
mov
pop
loop
imul
cmp
mov
push
test
cmc
push
lret
in
fstl
je
push
add
inc
movsl
pop
data16
pop
lock
inc
xchg
jle
test
je
pop
nop
imul
aas
sub
out
aad
xor
xor
adc
cmp
sti
std
testl
aad
lods
xchg
outsb
inc
sbb
in
mov
jmp
adc
jmp
ret
cmp
sub
lret
mov
push
adc
mov
xor
dec
dec
mov
aam
inc
std
stos
or
inc
imul
pop
push
or
movb
jb
jle
jmp
jge
jle
inc
sub
cmpb
cld
rol
aas
dec
outsl
adc
inc
pop
stos
mov
pop
mov
mov
xchg
mov
sub
fldenv
fsts
lahf
mov
test
push
mov
add
hlt
mov
scas
ret
xor
inc
test
lock
sbb
shrl
movsl
in
insl
xor
sbb
pop
adc
out
sub
loopne
cmp
or
mov
push
out
mov
or
lock
or
fwait
push
stos
cmp
stc
sbb
inc
cli
add
popa
xchg
loop
insl
pop
and
insl
mov
mov
cmp
lcall
les
cmpsb
pop
xchg
iret
leave
cld
cmpsb
add
xor
mov
scas
addr16
xchg
jecxz
jecxz
lods
cmpsb
subb
popa
mov
aas
lret
cmp
inc
ss
ret
popa
test
icebp
dec
mov
in
sahf
adc
sub
test
fld
mov
pop
xor
mov
mov
lcall
pop
inc
scas
sub
lea
cmpsb
repz
dec
test
test
es
mov
or
pop
and
dec
push
add
jmp
cmp
jg
into
cmpl
into
adc
inc
ffree
repz
jnp
cwtl
div
mov
rol
jns
shlb
pop
xchg
fs
xorb
orl
int3
or
call
shl
xchg
or
jns
add
sti
pop
dec
and
jg
lcall
int
mov
shlb
addl
loop
adc
call
les
stos
pop
jo
into
ss
leave
stos
das
jbe
sbb
inc
xchg
mov
mov
mov
dec
push
mov
xlat
mov
jno
xor
and
mov
out
sbb
adc
jg
mov
add
mov
mov
outsb
je
push
rolb
push
or
push
cmc
cmp
icebp
add
out
js
or
inc
mov
out
jo
cmp
mov
ret
and
adc
add
and
xchg
jno
pop
sti
mov
mov
pop
push
int
jp
xchg
push
mov
cmpsl
out
adc
aas
insb
pusha
pop
scas
test
clc
xor
sub
repnz
aas
cmpsb
pop
sbb
rcrb
jg
adc
out
and
fwait
jp
xchg
or
jb
cmpsb
leave
and
mov
mov
and
cwtl
outsl
fdivl
jb
inc
mov
jno
xor
mov
inc
icebp
loope
sarb
outsl
in
int3
add
pop
in
add
cwtl
mov
inc
dec
mov
push
repnz
stc
or
es
xchg
push
xor
fisttpll
inc
adc
out
cli
dec
out
push
adc
sub
dec
inc
xchg
mov
jnp
lret
iret
clc
stos
mov
orl
xchg
sub
loop
push
adc
xchg
imul
aaa
dec
jge
cmp
sub
sbb
pop
mov
iret
lcall
mov
and
push
dec
andl
add
les
xlat
add
add
push
mov
push
les
mov
xor
clc
sbb
outsb
loopne
jne
gs
repnz
stc
rcrl
xlat
mov
sbb
add
jbe
popf
and
pop
fucomi
xchg
xchg
imul
xchg
pop
lret
jg
pop
test
pop
aam
lods
test
jl
push
push
adc
in
loop
in
sbb
ds
out
cmp
lret
scas
add
stos
cli
jno
je
enter
mov
mov
js
std
std
cmpb
in
mov
data16
ja
pop
data16
adcb
mov
mov
sbb
and
outsl
lods
inc
aad
mov
inc
or
adc
bound
lret
adc
inc
test
stos
js
test
sarb
pop
push
push
and
stos
push
dec
pop
or
imul
pop
inc
jge
sti
xchg
inc
dec
xchg
in
dec
lret
or
sarb
mov
mov
in
test
outsb
sub
mov
xor
enter
lret
mov
jmp
sahf
pop
lods
fwait
stos
nop
mov
popa
data16
jae
jge
cmp
xchg
mov
cmp
add
std
push
cmp
jnp
js
andl
fldenv
fidivs
pop
fld
das
push
sub
cmpsb
add
push
cmp
add
sub
push
lahf
adcb
outsb
lods
xor
test
mov
into
mov
inc
out
fstl
push
test
not
fistps
scas
inc
pop
fs
xor
das
pushf
movb
sub
outsb
dec
xchg
in
scas
inc
mov
xorl
call
out
mov
aaa
add
dec
pop
ds
pop
sub
inc
in
jnp
test
ljmp
jecxz
leave
mov
mov
lret
dec
sbb
dec
fldl
lcall
sar
or
arpl
mov
xor
pusha
cmpsl
je
repz
inc
inc
ss
sbb
sbb
mov
aam
mov
cmp
inc
jbe,pt
jo
and
mov
dec
addl
xor
mov
data16
pop
adc
xchg
js
test
out
jnp
push
xchg
dec
mov
xchg
and
xchg
cwtl
loopne
pop
mov
inc
aas
dec
sbb
push
std
or
repz
jnp
dec
jecxz
in
icebp
mov
jno
inc
leave
decb
cmp
out
ret
xor
scas
lret
jp
mov
adc
hlt
adc
push
cmpl
xchg
pop
test
add
test
or
in
adc
imul
inc
popa
push
cmp
fidivs
add
adc
mov
xor
shll
lods
ds
popa
xchg
inc
fs
jg
test
loop
pop
pop
dec
ret
xchg
xor
jecxz
xor
pop
cmp
xchg
xchg
leave
ret
ror
jbe
cmp
mov
push
or
adc
cmpsb
movsl
pusha
push
icebp
lock
test
add
movsb
stos
cmp
mov
sbbl
out
xchg
pop
daa
and
dec
push
ret
std
mov
stc
pop
push
adc
inc
push
bound
push
xor
rorl
push
test
outsl
dec
and
cli
orb
push
nop
push
xor
push
in
out
bound
jns
icebp
pop
pop
fldl
mov
mov
push
clc
movsb
cmpsb
push
data16
popf
call
add
out
mov
pushf
pop
mov
stos
push
mov
int
pop
cld
add
es
movsb
mov
movsl
fisubs
mov
add
hlt
fs
out
fs
jmp
or
add
inc
pop
sbb
xchg
mov
sbb
sbb
and
jns
fstpl
adcl
mov
hlt
lds
sbb
xchg
or
loopne
and
or
lcall
ss
mov
push
aam
xor
enter
mov
or
jne
xlat
sahf
and
mov
lds
es
mov
mov
inc
jl
push
jbe
lods
and
cmp
dec
xor
sub
cmpsl
sub
push
mov
popf
test
or
adc
in
cmp
adc
mov
push
jg
adc
mov
enter
pop
aas
fbld
jg
sti
xchg
call
sub
imul
jnp
lcall
fwait
test
dec
push
pop
mov
ljmp
fisttps
call
push
outsl
outsl
sarb
xchg
inc
push
add
repz
lret
mov
mov
sti
aad
idivb
mov
push
pop
popa
stos
cmpb
out
push
outsl
sbb
repz
test
mov
cwtl
loop
pop
aas
mov
ja
ds
sbb
xor
out
pop
sahf
imul
ljmp
add
or
outsl
mov
lcall
push
cmp
push
clc
dec
lret
and
loopne
hlt
jnp
test
test
lock
call
sbb
pop
pop
or
cltd
add
add
aam
push
dec
out
sub
sbb
pop
shll
jg
xchg
or
xchg
and
in
dec
shl
add
dec
inc
mov
fcoml
add
insb
mov
mov
sbb
gs
int3
or
dec
test
push
jge
xlat
daa
pop
adc
call
cwtl
incl
inc
mov
imul
lods
aam
inc
mov
popf
ljmp
adc
pusha
imul
mov
xlat
xchg
jmp
pusha
insl
pop
xor
in
inc
les
cmp
shl
out
inc
test
pop
push
lahf
sub
jmp
lea
lods
add
and
jb
adc
inc
js
das
mov
sub
adc
dec
jb
rcll
je
lods
or
mov
inc
jmp
inc
inc
xchg
or
fistl
mov
rorl
adc
fwait
shll
adc
iret
inc
outsl
iret
pop
inc
mov
popa
sahf
mov
les
fbld
push
sub
ljmp
fmul
jp
add
out
lods
sbb
notb
mov
into
mov
push
lret
or
or
adc
cmp
or
inc
add
adc
inc
loopne
or
push
in
or
add
daa
add
sbb
mov
js
or
mov
pop
push
and
repnz
jecxz
fidivs
mov
into
xchg
imul
pop
ret
adc
jne
pop
aaa
bound
int
ljmp
cli
xchg
es
mov
rorl
sahf
mov
aam
leave
mov
shrl
or
dec
pop
sub
adc
lea
inc
jae
insb
mov
adc
push
daa
in
iret
shll
in
test
inc
sub
out
sub
xchg
popa
inc
iret
lcall
call
rcl
cltd
sub
or
in
bnd
cmpsl
out
dec
pop
inc
lahf
sbb
pop
or
lock
stos
mov
in
mov
jno
sub
cmp
cld
add
es
sub
inc
mov
ss
sbbl
in
sbb
aad
sub
mov
dec
dec
adc
mov
rclb
nop
mov
jae
xchg
jns
fsubrl
mov
pop
fdivrl
adc
push
loopne
push
add
das
adc
mov
outsl
je
and
dec
sub
jae
pushf
dec
xor
mov
dec
vcmpss
sub
movsb
xchg
icebp
dec
imul
lea
arpl
pop
mov
aaa
popf
sbb
pop
jg
test
stos
in
daa
cld
mov
out
int
cmpsl
out
and
push
add
inc
fmull
cmpsl
xlat
sub
or
ss
mov
xchg
jg
mov
add
ret
rorb
fs
hlt
pop
adc
fdivp
mov
bound
add
lcall
into
cmp
stc
pop
aaa
mov
pop
push
gs
and
insb
mov
imulb
mov
mov
into
aas
adc
imul
sbb
and
aad
inc
mov
lock
je
and
loop
mov
lods
or
xor
call
pop
adc
or
pop
push
add
sbb
repnz
addl
pop
sub
or
and
fnsave
stos
dec
push
add
js
mov
cmp
push
ds
iret
std
cmp
mov
cmp
jnp
out
pop
push
dec
scas
mov
insb
loop
mov
sub
rcpps
popa
inc
adc
pop
pushf
fisubrl
cltd
and
bound
lock
mov
outsb
adc
insb
fisubs
leave
roll
ss
pop
jmp
hlt
inc
aad
xchg
mov
mov
sub
ds
jmp
inc
fs
clc
rolb
adc
and
lds
pushf
gs
sbb
xchg
sub
lcall
and
cltd
adc
fsubs
xchg
and
repz
cwtl
push
in
xor
sub
ljmp
push
push
dec
out
ss
jmp
aad
xchg
out
sbb
lods
mov
scas
out
out
mulb
shr
fs
mov
add
aam
mov
or
mov
add
jmp
mov
mov
mov
mov
stos
jo
aam
push
aaa
movsb
dec
aaa
sbb
addb
pop
sub
xor
cmp
jns
and
sbb
lcall
pop
roll
repnz
lds
sbb
sub
shlb
lret
add
fsubrl
into
add
lods
or
add
lock
pop
and
mov
cmp
lret
sti
cmp
fnstcw
js
pop
or
xor
rclb
jg
out
or
mov
mov
mov
mov
jnp
lret
loope
add
movsb
cmpsl
lds
mov
adc
sub
scas
add
arpl
mov
cs
jmp
mov
jae
mov
das
fdivrl
xchg
movsl
test
push
cwtl
das
fs
rcrb
rclb
stos
fdivl
fs
lahf
sub
test
idivl
inc
push
push
xchg
jecxz
dec
adcb
pushf
xchg
fldl
frstpm(287
daa
lods
fucomi
fwait
lock
repnz
scas
mov
leave
and
lret
add
and
sub
mov
cli
mov
sar
addr16
mov
addr16
and
popa
fdivs
or
inc
push
in
loope
push
and
sub
pop
iret
or
pusha
mov
push
cmp
adc
mov
shlb
inc
pop
mov
pop
ja
cmp
sub
pop
xor
sub
fldenv
xor
push
out
pushl
and
sub
lahf
addr16
shl
mov
jp
mov
sub
loope
in
cmc
fidivrs
pop
mul
xchg
jmp
in
insb
jg
and
ja
dec
lret
sub
scas
imul
inc
jne
adc
mov
loopne
clc
into
sub
loopne
loope
rcrb
push
mov
cmpsb
pop
adc
clc
pop
push
cmp
mov
cmp
mov
mov
xor
inc
cmpsb
add
mov
imul
xchg
es
jge
cmp
pop
xor
sub
bound
xchg
and
xchg
mov
sti
std
nop
or
cmpsl
fmuls
arpl
insb
jbe
pusha
xchg
push
sbb
sub
mul
push
gs
pushf
mov
jl
inc
or
or
fistps
mov
into
test
mov
sbb
lds
les
or
mov
push
popf
test
adc
add
bound
sahf
add
push
xor
push
pop
fucom
mov
push
inc
mov
add
or
pop
test
sbb
jp
inc
or
andl
aam
sbb
inc
icebp
sub
dec
rcrb
inc
ret
popf
jge
adc
mov
enter
adc
sti
push
dec
pop
cmc
jle
and
lock
stos
mov
dec
mov
adc
sbb
out
pop
std
and
outsb
xor
push
sbb
popa
mov
sub
and
fdivl
inc
xlat
lcall
ret
insl
lds
and
mov
xor
mov
test
out
iret
push
into
fs
cwtl
cli
sti
sahf
outsb
lret
xor
sub
mov
sbb
dec
js
dec
push
inc
imul
jmp
mov
ret
inc
sub
or
mov
in
xchg
imul
inc
dec
rorl
pop
fbld
mov
xor
jae
addb
mov
and
int3
sahf
jecxz
cld
xor
cmc
mov
xor
and
ss
jg
loope
push
lods
jo
and
mov
adc
daa
in
je
inc
push
mov
mov
rcr
add
out
int
data16
pop
ja
mov
xlat
test
xor
rolb
add
ret
pop
jo
data16
out
inc
pusha
dec
fwait
mov
and
push
stc
divb
outsl
dec
cld
sbb
cmp
xchg
test
repnz
dec
sbb
imul
hlt
scas
sbbl
sarl
dec
xor
mov
pop
xor
aam
ret
mov
hlt
cli
adc
decb
dec
ljmp
push
ffree
push
pushl
mov
sub
inc
lds
or
int3
je
mov
sub
pop
lret
lret
rcr
jne
dec
pop
sbb
dec
inc
data16
xchg
push
scas
and
jge
rorl
cmp
cmp
jns
cs
out
cmp
dec
out
xor
aam
test
fmull
or
push
int3
add
imul
cmc
mov
push
push
adc
aad
add
mov
sub
sub
loope
addr16
add
inc
fstpt
sub
xchg
push
clc
mov
sub
clc
mov
dec
add
daa
aad
jno
stc
lcall
mov
dec
dec
jns
dec
dec
and
xchg
push
nop
mov
insl
cltd
out
push
jecxz
push
jp
push
xorb
ds
icebp
push
ja
lea
outsl
mov
dec
add
cmp
ja
insb
mov
fs
adc
subb
push
push
sbb
mov
pop
pop
dec
inc
es
xchg
push
xor
lcall
inc
pop
xor
scas
and
add
adc
xchg
mov
adc
mov
pusha
movsl
sub
orb
jecxz
add
adc
notb
xchg
dec
inc
test
pop
cmp
daa
movsb
insb
icebp
ret
bswap
int
xchg
hlt
enter
xchg
stos
sbbl
loope
stos
or
push
push
shll
std
push
mov
sub
arpl
scas
pop
mov
test
mov
mov
mov
push
ljmp
and
pushf
shrb
iret
sub
pop
data16
test
outsb
push
jb
cwtl
jns
jne
sub
xchg
xor
data16
enter
mov
loopne
arpl
fnstenv
mov
out
lds
enter
sbb
es
xchg
add
scas
js
sahf
lret
std
inc
mov
push
dec
push
scas
out
sub
jb
push
adc
mov
adc
ja
add
or
call
std
repnz
mov
dec
cld
mov
mov
sub
lcall
in
cmpsb
mov
idiv
dec
dec
popa
and
xor
fildl
std
sbb
add
jmp
pop
pop
cmp
push
jmp
mov
mov
xchg
scas
into
mov
repnz
out
mov
xchg
dec
inc
sbb
inc
cmp
mov
mov
xchg
mov
icebp
add
bound
push
cmp
mov
call
mov
rcll
insl
adc
sti
outsl
lcall
stc
addr16
enter
stc
shll
rclb
cmp
je
and
mov
shrb
xchg
sbb
pop
loop
add
push
add
add
xchg
sbb
fmuls
mov
pop
mov
jecxz
adc
imul
push
ds
pushf
jg
jo
rolb
mov
rcl
mov
dec
nop
insb
adc
push
push
inc
daa
std
fsubrs
and
gs
repnz
insb
cwtl
mov
and
sarl
lds
pusha
mov
test
mov
push
lret
sub
push
pop
pop
mov
cmpsb
jle
loopne
sub
icebp
pop
xor
pop
insl
movsb
sbb
fsts
mov
fdivrl
pop
decl
fiaddl
sbb
jne
pop
in
mov
or
enter
jb
mov
mov
jo
mov
push
sub
xchg
mov
jle
arpl
jae
notl
fnstcw
aaa
or
add
cmp
test
std
mov
mov
fwait
pop
sbb
cmpsb
dec
stos
lods
stos
inc
sub
jmp
mov
cmpsb
jb
or
rcrb
ficompl
scas
and
push
mov
inc
scas
adc
jne
xchg
insl
pushf
ljmp
dec
and
xchg
and
inc
jns
aad
adc
mov
sub
ss
mov
push
insl
outsl
dec
sahf
lret
jae
lea
dec
shrl
imul
inc
out
cmp
lods
pop
add
bound
andl
and
push
xor
cmp
and
pop
and
mov
jg
ret
mov
add
adc
stos
cmp
mov
xchg
jp
cli
dec
and
mov
pop
adc
cmp
add
mov
movsl
jg
popf
pop
das
jmp
push
cmp
jne
push
xor
mov
movsb
int
xchg
dec
adc
lea
jl
out
fsubrl
aad
imul
sub
jb
sub
lcall
cmp
into
adc
testl
cltd
addr16
hlt
scas
jne
xlat
loop
scas
dec
loop
fidivl
pop
mov
mov
dec
add
lret
nop
push
iret
mov
fcomip
test
out
inc
jnp
inc
imul
cld
leave
dec
orb
or
jle
ja
sub
pop
lds
xchg
imul
ret
jl
jmp
push
pusha
lahf
in
xor
cli
lock
lods
inc
jae
pop
adc
cmpsl
and
ljmp
inc
lret
inc
ds
dec
mov
dec
out
mov
pop
and
jecxz
sbb
dec
xchg
cmpsl
cwtl
outsb
movsb
addb
or
movsb
adc
add
addb
sbb
js
cmpsb
pushf
shll
notl
inc
sti
add
xchg
scas
mov
push
call
shl
xor
jp
mov
mov
inc
sub
cmp
mov
add
push
sarl
mov
lea
into
xor
jb
ret
test
adc
imul
cwtl
xor
fwait
dec
push
in
adc
neg
cwtl
ja
in
cmp
push
sarl
jo,pn
fisubl
fdivr
fnop
sar
inc
jg
and
add
cmp
xchg
jl
jo
in
pop
pop
orb
xchg
daa
ljmp
jmp
aas
pop
mov
cs
mov
mov
or
add
sub
aaa
lods
mov
scas
je
sub
or
ss
dec
mov
mov
in
outsb
cmc
adc
scas
cmp
iret
push
jno
ror
pop
adc
mov
inc
outsl
mov
jno
popa
xchg
jno
jae
and
jg
push
xor
mulb
jmp
test
int3
cld
sbb
dec
hlt
mov
loopne
adc
arpl
push
fstpt
outsb
mov
test
inc
sbb
cld
jae
ret
shlb
push
jb
add
ds
test
lea
mov
sbb
jle
inc
cmp
bnd
sub
add
out
aad
jo
push
loope
mov
mov
xor
push
push
cmp
sbb
pop
rcrb
ret
in
imul
dec
out
scas
popa
add
jnp
cmc
xchg
daa
ja
imul
and
dec
push
ss
cld
test
inc
push
decl
aas
scas
leave
in
inc
scas
test
adc
ret
dec
push
popf
or
cmpsb
xor
stos
enter
jge
sti
sahf
movsb
lea
out
out
push
hlt
mov
mov
out
rolb
dec
push
push
and
fiadds
add
ret
push
mov
imul
sti
xchg
xor
inc
rcl
jl
es
sub
push
pop
add
int3
enter
out
xor
loope
stc
call
sbb
push
sbb
cmp
inc
push
lret
fsubl
xchg
add
lods
test
pop
mov
popf
sub
cmp
cmp
fldl
push
cmp
cmp
cmp
or
jns
punpcklwd
out
sub
outsb
mov
insl
mov
inc
fnstenv
mov
shl
cli
popa
movsl
mov
sbbl
std
xor
mov
cld
leave
outsb
cmpsb
mov
pushf
and
jo
and
jae
cmpsl
aad
dec
push
and
xchg
mov
dec
mov
aad
fisubl
sbb
adc
push
pop
xchg
cltd
test
lcall
dec
faddp
jg
hlt
mov
arpl
jbe
cld
push
mov
shlb
mov
push
loope
imul
jmp
cwtl
outsb
and
fisubrs
popf
gs
aad
xchg
add
add
aad
lcall
fistpl
cmp
fldenv
sub
dec
or
sub
jno
stos
stc
cmpsb
addr16
ds
dec
mov
mov
or
adc
fidivrs
mov
clc
arpl
push
push
sti
movsb
rcll
rcrb
imul
fcmove
mov
jmp
mov
dec
sbb
fcmovnu
inc
outsb
jecxz
and
ret
add
cltd
mov
and
shll
pop
dec
adc
scas
clc
dec
pusha
ja
and
adc
inc
and
jmp
push
mov
call
and
mov
or
inc
addps
dec
sbb
or
pop
in
push
int
int3
adc
dec
aad
xor
test
cmp
jbe
insb
pushw
jp
out
xor
mov
mov
mov
bound
repnz
jae
adcl
gs
imulb
in
int3
daa
loop
lock
lds
jnp
cmp
pop
fs
cmc
stos
add
hlt
fidivs
in
mov
pop
nop
jnp
sbb
xchg
std
inc
sub
push
adc
pop
sbb
xchg
mov
push
lret
scas
mov
outsb
xchg
push
pop
mov
pop
xchg
cltd
rcll
or
mov
ret
aas
test
xor
aad
negb
fisubl
pop
ja
out
mov
jbe
mov
js
jbe
rcll
cwtl
dec
cmpsb
dec
cmp
pushf
sub
enter
out
mov
daa
adc
or
or
cli
sahf
dec
push
fcomps
repnz
enter
xor
cs
in
mov
xchg
imul
push
pop
repnz
pop
jno
out
pop
scas
mov
jno
gs
sbb
pop
lods
cmp
mov
aam
jno
fildl
adc
mov
push
lea
loope
mov
xchg
cltd
or
outsb
int
arpl
sahf
or
das
es
sti
popa
sahf
aam
mov
and
cmpsl
lcall
stc
js
or
les
jecxz
iret
cltd
dec
inc
cmpsb
pop
icebp
aaa
xchg
data16
mov
cltd
loope
pop
enter
mov
sti
add
or
nop
dec
int3
adc
and
pop
dec
test
xchg
imul
pop
es
insb
xchg
inc
out
and
cltd
test
and
dec
mov
jo
jl
pop
iret
inc
add
xor
push
jmp
into
iret
mov
jo
out
xchg
mov
push
das
add
jns
xchg
out
or
nop
ljmp
mov
add
fildl
and
inc
adc
inc
pop
clc
or
dec
arpl
inc
repz
sub
bound
scas
mov
pop
inc
add
fbstp
add
adc
inc
popa
js
mov
pop
and
xlat
jmp
test
sub
jmp
mov
sub
dec
stos
int3
mov
mov
mov
xchg
dec
or
mov
loopne
pop
test
sub
dec
loopne
push
sbb
adc
inc
cmp
insl
pop
mov
hlt
sbb
int
push
test
add
mov
or
xor
jbe
dec
addr16
lahf
pop
cmp
adc
pusha
and
sbb
fsubl
cld
repz
cmpsb
jne
cmpsl
dec
pushf
mov
rclb
sbb
xor
pop
test
push
imul
xlat
inc
or
bound
jb
inc
je
popa
repnz
xchg
mov
adcl
inc
cmpsb
enter
push
jmp
cmc
push
xor
cli
pop
pop
hlt
loope
mov
lret
push
cltd
push
mov
insl
jbe
hlt
or
fs
pop
inc
sbbb
int3
and
rorl
incl
fcoms
jns
hlt
lret
ret
imul
js
enter
mov
js
push
jb
roll
jge
ret
loop
aad
inc
out
std
sbb
loope
pushf
mov
shrb
in
jb
xor
or
pop
jmp
inc
xchg
rcr
std
pop
loope
adc
jge
xor
outsl
mov
shll
mov
sub
repnz
rcr
gs
sahf
pop
cmp
enter
mov
fdivs
push
mov
and
sti
push
lcall
movq
fs
imul
xchg
add
dec
leave
xchg
insl
andl
inc
movsl
dec
shrl
data16
pop
jbe
xchg
lea
iret
mov
push
jne
call
and
cmpsw
pop
mov
repz
or
cmp
cld
jbe
je
sub
mov
mov
sub
enter
push
jl
mov
inc
cmp
and
xchg
push
scas
movsl
ret
ffree
mov
sub
mov
nop
mov
xchg
dec
fidivrs
dec
or
outsl
lahf
pop
sub
mov
mov
loopne
out
mov
ds
sub
adc
mov
jg
sbb
mov
test
lock
sbb
mov
pop
mov
lahf
xchg
jb
push
stos
mov
sahf
xchg
test
imul
pop
cmc
inc
pop
hlt
xchg
or
fimuls
xchg
add
jecxz
incl
sub
adcb
jo
rcrb
test
push
leave
popa
mov
dec
cltd
lea
addb
inc
lock
mov
pop
andb
xor
xchg
fs
into
loope
std
leave
in
jle
or
pop
in
mov
stos
testb
xchg
clc
scas
testl
pusha
mov
jne
and
mov
inc
shlb
aam
pop
jle
push
mov
fld
mov
das
jbe
mov
mov
out
jae
ret
mov
daa
lcall
mov
stos
jns
ret
add
mov
push
out
jl
jecxz
repnz
mov
cltd
and
arpl
popa
xchg
adc
test
or
adc
mov
nop
cmpsb
jl
push
fmull
mov
add
mov
popl
xchg
adc
scas
clc
ljmp
mov
jp
add
ret
jae
mov
je
mov
jno
addr16
in
lds
or
mov
sub
cltd
cmp
cmp
add
aam
sbb
cli
sbb
dec
and
jg
or
outsb
mov
xchg
ss
pop
enter
push
inc
lds
aad
cmpsl
cmp
aam
jle
sarl
push
leave
xchg
mov
andb
cmc
pusha
xor
bound
jbe
push
pushf
xchg
pusha
jb
repz
xchg
ffree
push
ljmp
cmc
xchg
xchg
pop
add
cld
fwait
adc
or
pop
cld
pop
add
mov
dec
outsb
outsl
cs
mov
decb
jbe
push
std
lret
filds
push
adc
dec
roll
lea
cli
add
mov
dec
or
mov
ret
std
add
fs
jp
adc
daa
push
push
mov
inc
mov
add
es
not
mov
jp
dec
inc
inc
inc
loope
cmp
add
loop
push
shl
insb
dec
fwait
cltd
or
sbb
xor
jge
mov
jle
sub
nop
cli
xchg
jmp
xor
test
les
gs
add
cltd
jo
push
bound
imul
jnp
mov
dec
pop
xchg
jecxz
subl
fsub
fists
inc
jo
or
push
xchg
jb
mov
les
cmp
test
lret
sbb
pop
adc
jmp
mov
je
pusha
inc
push
iret
in
gs
in
add
das
add
repz
lods
cld
lds
gs
hlt
mov
cwtl
mov
int3
push
jno
dec
xlat
inc
fcompl
repnz
jno
rcrb
pop
mov
insb
sbb
dec
insl
int3
jp
cld
in
adc
push
test
adc
test
mov
inc
and
jno
rorl
pop
xchg
pusha
xchg
mov
out
fldcw
cld
enter
out
cmpsl
cld
jo
push
pop
add
cmc
out
mov
neg
bound
jp
movsl
mov
add
or
pop
out
andb
jne
jp
inc
int3
fdivrp
pop
sahf
push
and
lea
cld
les
push
sbb
pop
ret
inc
push
mov
rcl
mov
out
test
mov
adc
push
andb
test
cmp
or
push
inc
fadds
and
sbb
mov
loopne
mov
mov
inc
and
xchg
or
scas
jmp
fcompl
dec
lahf
mov
jne
pushf
and
xlat
loopne
test
loope
xchg
fdivr
movsb
lods
int
lahf
and
sub
pushf
mov
inc
pop
and
decb
repnz
push
inc
push
dec
push
adc
push
adc
sub
pop
fnstsw
xor
push
add
cs
cli
xchg
sti
fstl
movsl
lahf
sbb
mov
inc
fdiv
xor
ss
pop
mov
sub
mov
call
jecxz
inc
pop
int3
mov
addb
jg
lods
inc
sbb
xchg
scas
sbb
xchg
or
imul
stc
lock
xchg
or
and
cmp
int3
gs
arpl
fidivrl
cwtl
inc
sbb
push
xor
into
adc
cltd
mov
xor
cltd
jge
mov
pop
jo
add
fidivl
mov
add
add
mov
pop
icebp
mov
and
mov
shr
shlb
push
xchg
add
mov
cli
out
mov
mov
jle
cmp
push
lea
push
aaa
mov
movsb
mov
movsb
ret
or
jns
out
and
andb
js
lret
or
jnp
push
mov
test
pop
pop
pop
sarb
iret
adc
insb
test
cmpsb
aad
add
outsl
mov
sub
mov
and
adc
repnz
dec
loope
mov
jo
add
adc
xchg
xorl
nop
pop
push
popa
adc
sub
push
push
inc
inc
pop
xchg
faddp
pop
roll
loop
scas
orl
mov
bound
test
negl
arpl
testb
je
lock
and
repz
and
lahf
xor
or
mov
in
outsb
xchg
aaa
rcrb
cmp
mov
mov
arpl
in
fstl
jecxz
loop
xchg
sub
add
cmp
imull
push
sub
cmp
cltd
lock
sahf
jns
cwtl
mov
add
adc
lcall
and
adc
dec
aam
mov
pop
ret
insl
andb
inc
or
mov
lcall
jb
adc
hlt
push
pop
aam
inc
adc
lock
add
xchg
xchg
into
push
out
xchg
shll
sbb
jecxz
jne
fcmovnbe
jecxz
in
push
xor
in
hlt
mov
les
xor
and
xchg
test
lods
mov
push
add
xor
jecxz
xchg
mov
lds
or
mov
cli
pop
xchg
cli
add
mov
sbb
cmp
push
popa
sbb
cld
adcl
outsb
subb
mov
sub
ljmp
or
cltd
out
aas
push
cmp
sub
mov
cmp
and
scas
es
dec
es
jbe
movsl
orb
insl
dec
mov
jne
fildl
repnz
ds
adc
call
xchg
loope
popf
mov
lods
push
lret
outsl
mov
dec
lcall
push
ret
inc
mov
adc
sub
imul
fisubl
int3
filds
mov
jno
push
in
int3
and
sbb
adc
jg
push
inc
lea
repnz
sub
xor
and
and
cmp
or
loopne
cmc
in
adc
or
and
mov
xchg
xchg
and
lcall
pop
dec
sbb
jne
jnp
add
ss
testl
lahf
mov
rcrb
leave
je
not
push
iret
jp
xchg
les
mov
mov
jp
hlt
les
mov
out
mov
sbb
sbb
inc
mov
in
mov
sti
popf
jb
mov
dec
and
lods
nop
into
inc
popa
xchg
dec
in
add
das
movsb
jp
bound
inc
xchg
in
cmp
shlb
std
clc
stos
call
loop
repz
int3
in
dec
ss
aas
xor
fisttpll
int3
lret
sbb
nop
xchg
mov
sbb
xchg
xchg
cmc
and
cld
mov
popa
cmp
adc
popf
adc
xor
int3
dec
lods
repz
cli
into
push
aad
adc
fcmovbe
mov
repnz
jp
test
dec
fisubrl
xlat
imul
push
shll
xor
daa
xchg
add
mov
fs
jmp
mov
enter
leave
inc
pop
call
cmpsb
cli
pop
and
sbb
sti
jne
imul
xlat
cmp
or
lcall
pop
sbb
ljmp
xchg
insl
orl
jge
pop
lahf
pop
sub
or
addr16
cld
lret
xor
push
dec
add
ret
and
add
cwtl
pop
adc
xor
inc
cmovp
insb
mov
out
sub
dec
out
cwtl
xchg
xor
div
push
cmp
dec
xor
mov
iret
addr16
sbb
loop
in
lods
bswap
mov
ficoms
leave
jo
pop
loop
pop
mov
dec
scas
lds
pop
movsb
and
cmp
scas
divl
shrb
in
mov
jmp
dec
sbb
dec
enter
inc
arpl
pushf
push
std
cmpsb
mov
mov
stos
sub
mov
adc
hlt
leave
push
insb
mov
fsubrl
in
or
jae
jae
mull
push
inc
bound
inc
xor
ljmp
pop
sbb
and
shlb
mov
dec
nop
rcrl
inc
jge
jno
or
dec
push
add
jns
add
ret
clc
iret
cmp
ds
fimuls
mov
and
or
mov
sub
mov
jg
xor
push
cmp
lea
call
arpl
and
daa
jns
js
outsl
gs
adc
pop
std
jns
xor
ret
mov
pop
and
sahf
xor
sub
fbstp
popa
dec
mov
push
push
mov
cmp
es
and
add
jle
fidivrl
cmp
aas
repnz
jg
mov
daa
out
das
sub
lcall
jmp
inc
aad
lret
xchg
les
andb
js,pt
aas
pop
fwait
push
jnp
push
sub
fisttpl
idivb
std
loopne
push
mov
pusha
add
sti
and
mov
bound
jns
mov
push
or
jae
fs
les
lods
ljmp
scas
rcrl
daa
test
push
pop
ss
cmp
adc
call
mov
pop
xor
lods
lahf
dec
or
loop
jmp
jnp
fwait
shll
mov
cli
adc
aaa
add
fnstsw
mov
roll
clc
fadd
cmp
dec
lods
mov
rclb
daa
adc
dec
pop
add
sbb
add
mov
sbb
pop
repnz
rcl
stos
xor
pop
movsl
ljmp
push
fimull
leave
iret
cmpb
orl
sti
out
dec
xchg
or
icebp
sbb
mov
or
or
xlat
in
push
test
ljmp
and
notl
jns
lahf
mov
adc
std
pop
stos
ffreep
pop
sub
out
andb
add
cmp
pop
sahf
xchg
xor
scas
nop
test
push
cmp
mov
hlt
and
mov
inc
lcall
addr16
or
sahf
sbb
xor
lret
fldenv
repz
mov
nop
inc
icebp
jne
rcll
gs
mov
inc
in
adc
or
lds
ret
div
push
cmp
out
pop
dec
mov
xchg
inc
inc
mov
jne
mov
movswl
jge
jp
aad
lcall
fiaddl
mov
add
fwait
das
or
cmpsb
clc
dec
push
inc
outsl
add
push
xor
sbb
incb
push
loope
orl
or
ja
dec
shrb
sahf
scas
int3
mov
mov
inc
xchg
rorb
and
jl
dec
out
xchg
xchg
mov
sub
shlb
jg
pop
fisubrs
ja
adc
lea
iret
add
xchg
xor
addr16
es
popf
push
pop
out
out
jecxz
lahf
push
push
cld
loope
sti
stos
lret
push
aaa
push
shll
jecxz
cmpsb
push
push
or
push
rcrb
orb
xchg
sub
pop
sarl
inc
jge
sbb
xchg
inc
addr16
and
push
sub
js
mov
pop
push
and
inc
sbb
or
lret
sti
dec
push
fldt
pop
mov
adc
leave
rcrl
aaa
popf
mov
sbb
sub
in
lea
xchg
je
mov
popf
lcall
dec
mov
xor
sahf
push
sbb
lods
jbe
mov
les
rcll
aas
insb
xor
hlt
xchg
aam
loop
sub
pop
mov
in
inc
fdivs
popf
sbb
into
pusha
dec
fstps
mov
sbb
test
hlt
dec
pop
mov
test
cld
jmp
mov
loop
and
dec
out
push
sub
in
loopne
cmpsb
add
int3
sub
xchg
repnz
adc
xchg
adc
mov
pop
and
and
sub
jae
jmp
sbb
shl
data16
sbb
mov
push
add
out
data16
cmpl
icebp
pop
outsb
ret
sub
jp
fmuls
ret
stos
cwtl
or
ret
jb
inc
test
scas
inc
xor
into
mov
lcall
loopne
cld
les
aam
push
adc
in
cs
ss
jo
mov
cmp
pop
imul
out
jne
pop
loopne
xchg
bound
int3
lods
loop
pop
fnsave
mov
cld
js
repz
shll
hlt
cli
jbe
repnz
incl
mov
or
divl
push
mov
xchg
xchg
pusha
sti
shlb
mov
push
pop
inc
push
loope
rorl
ds
test
xchg
ja
and
stos
mov
push
cltd
lods
cmp
in
dec
sti
aam
arpl
mov
and
mov
add
aam
enter
pop
icebp
pusha
add
shrb
inc
xor
jno
sbb
addr16
xor
xor
or
outsl
xlat
jae
jns
mov
rclb
sub
test
scas
mov
add
mov
dec
bound
lods
push
call
loop
ss
cmc
fcom
jmp
mov
mov
xlat
das
mov
stc
xchg
lcall
cmp
in
cmc
pop
mov
and
jns,pt
push
loope
jnp
movsl
sub
push
mov
dec
aaa
add
js
mov
cmp
pop
jle
mov
sahf
scas
into
out
xor
shlb
lahf
ffreep
dec
mov
es
sub
inc
mov
ja
xor
sub
mov
hlt
idiv
jecxz
inc
and
push
adc
jp
in
stos
xlat
outsl
pop
or
stos
fcompl
incl
or
push
jmp
iret
xorps
rorb
mov
lea
mov
and
or
and
add
cwtl
sahf
jp
jo
xchg
push
push
dec
pushf
int3
negl
push
xchg
fs
lret
shll
push
and
aas
lods
imull
iret
lods
xchg
pop
sbb
mov
pop
xor
pushf
mov
mov
repnz
cltd
fcoms
es
or
pop
movsb
sbb
call
adc
push
fiaddl
call
dec
add
pop
nop
cmc
inc
jl
pop
cwtl
cmpsl
lea
das
fdivrp
xchg
ret
cmp
xchg
in
xchg
sbb
divl
dec
test
jne
sub
push
xchg
add
jg
daa
cmpsl
mov
pushf
sbb
lret
scas
stos
orl
xchg
fcompl
popf
test
mov
loopne
sub
push
xchg
adc
jg
popf
popa
xchg
fs
jae
ja
jge
ja
jae
cmc
xor
std
fistps
jmp
push
add
sub
mov
jp
pop
test
lcall
jle
add
leave
shrb
test
das
sbb
in
mov
push
repnz
add
mov
inc
popf
adc
fwait
in
jmp
push
mov
mov
aaa
push
movsb
mov
lcall
in
test
or
out
adc
jbe
push
outsb
pushf
gs
push
fxtract
sbb
jnp
jp
stos
idivl
in
scas
repz
shll
out
ret
bound
xchg
lea
les
xor
mov
xor
or
lret
inc
scas
push
sbb
out
jp
arpl
xchg
pop
nop
sbb
add
in
into
pop
enter
xchg
ja
add
mov
data16
xchg
ds
dec
fisttpl
imul
fistl
xlat
stos
inc
inc
pop
call
aam
imul
jmp
push
dec
sub
int3
xchg
or
mov
dec
and
xchg
and
loop
arpl
jo
pop
mov
loopne
jl
dec
xlat
mov
test
pushf
insb
hlt
mov
xchg
adc
scas
aad
pop
outsl
xchg
pop
dec
jl
call
insb
push
jnp
popf
push
nop
outsb
ss
in
lds
pop
xor
hlt
jbe
jge
sub
daa
add
push
sub
sbb
adc
scas
xlat
inc
enter
pushf
xchg
cmp
inc
mov
push
cmp
je
scas
jg
mov
cmc
xchg
push
aam
cwtl
or
push
push
pop
or
ret
rcll
imul
mov
lahf
mov
in
lock
pop
sbb
push
adc
cli
outsl
rcl
leave
in
dec
lock
out
dec
xlat
pop
push
mov
rorb
sub
push
jl
sub
push
andb
leave
jecxz
and
dec
push
in
shl
insl
xor
jbe
mov
cmp
gs
iret
pop
cmpsl
sub
lret
push
inc
push
mov
icebp
sub
sbb
leave
inc
mov
xor
sarb
outsw
add
sbb
jbe
push
xchg
xchg
inc
cld
mov
cli
lret
je
je
in
ljmp
xor
inc
pop
jecxz
pop
jge
jecxz
adc
xchg
adc
ss
and
ret
sarb
xor
push
push
repz
inc
clc
fs
jg
dec
sbb
scas
pop
rcr
xchg
sbb
cltd
lds
test
repnz
pop
cmp
add
push
push
shlb
repz
dec
cmp
cli
jl
mov
cmc
pushl
mov
mov
mov
les
insl
in
cmp
push
cmp
sub
and
and
add
pop
push
cmp
insl
mov
mov
bound
subb
sarl
ret
xchg
pcmpeqw
pop
push
in
push
mov
mov
xchg
and
and
adc
mov
gs
aaa
dec
mov
fcmovnbe
add
pop
cli
sub
rclb
jp
imul
and
shl
pop
int3
or
xchg
mov
sub
inc
fs
jne
imul
mov
fistpl
fsts
dec
je
mov
arpl
shlb
jl
or
cli
pop
popf
mov
and
repnz
int3
pop
call
or
jbe
mov
sbb
xchg
jge
pop
movsb
movsl
popa
sbb
or
bound
xchg
sbb
nop
lds
mov
or
lds
movsb
loope
out
ret
jg
lret
dec
dec
pop
daa
cld
push
loop
cmp
stos
das
arpl
test
adc
mov
fcmovu
xor
mov
push
sbbl
xchg
ja
jg
push
fmulp
inc
mov
push
cli
mov
insl
xchg
and
stos
dec
jle
orps
or
push
out
xchg
lret
inc
add
in
xchg
adc
adcl
dec
stos
ja
or
sar
sbb
sti
add
rcrb
fstl
jecxz
jne
rcr
mov
cmpsl
cmp
fldenv
fbld
add
rcr
dec
lods
mov
sub
mov
je
cmp
sub
vpsadbw
mov
dec
cltd
xor
aad
adc
hlt
aaa
pop
dec
jb
adc
pop
jecxz
cmpsl
aad
sbb
sbbb
mov
mov
mov
xchg
sbb
mov
mul
mov
inc
mov
push
xor
sub
and
adc
mov
mov
mov
adc
dec
stos
push
sub
aam
push
inc
stc
xchg
pop
adc
stc
dec
ss
or
ret
add
add
inc
shr
inc
cltd
pop
fs
inc
ret
shl
mov
mov
pop
cmp
decl
mov
insb
sbb
inc
dec
clc
pop
sti
sbb
xor
mov
lret
mov
cwtl
in
daa
adc
xchg
ja
and
cmpsb
pop
cltd
fmull
cmp
sub
xchg
sarl
and
lcall
insl
je
mov
ret
fbld
and
push
pop
and
dec
cmp
jnp
insb
int
pop
enter
pop
aaa
jo
test
sub
jg
mov
cmp
je
push
std
int
push
lret
dec
xchg
jecxz
leave
mov
ja
and
jmp
xchg
in
mov
cld
in
xor
leave
aad
sti
aaa
push
pop
mov
lcall
cmc
and
xlat
add
mov
std
mov
pop
cmp
frstor
nop
out
and
bnd
mov
push
popa
mov
xchg
cmc
or
and
test
out
loop
dec
xor
mov
rol
xchg
insl
call
mov
dec
xor
pop
jne
sbb
lds
cmp
sbb
mov
jmp
andl
dec
inc
inc
fistpl
jbe
mov
sti
lds
lods
push
jg
jle
xchg
cmpl
ret
jnp
inc
sbb
jb
test
xchg
mov
push
inc
inc
orb
sub
xor
pop
pop
sbb
mov
test
pop
or
movsb
cmp
mov
cli
ljmp
mov
push
and
or
and
das
pop
mov
cmp
mov
xchg
mov
sbb
cmp
in
mov
stos
xchg
dec
mov
mov
mov
add
add
xchg
jnp
cmp
push
cmp
cmp
cmpsb
movsb
out
aas
pop
dec
mov
cmc
popa
call
insl
jle
xor
push
test
push
sub
cmc
and
mov
lret
out
push
std
shrb
pop
movsl
add
or
xchg
lods
push
fs
imul
stc
mov
pop
rorb
pop
push
ds
ljmp
sub
xchg
loope
test
icebp
outsb
test
xchg
pop
insl
sbb
add
adc
xor
or
rcrb
popf
push
call
mov
inc
pop
pushf
rclb
mov
or
mov
loopne
push
jb
data16
cs
mov
pop
and
push
dec
pop
lret
mov
push
stc
cmpsl
cmp
pop
insl
enter
mov
cmp
lods
mov
addr16
mov
inc
pusha
push
push
mov
adc
cmp
in
insb
out
dec
jl
fidivrl
adc
pop
pop
sub
in
adc
mov
loop
notl
adc
mov
imul
mov
add
mov
mov
add
sbb
out
inc
push
adc
jmp
mov
scas
lods
dec
adcb
in
mov
mov
inc
popa
aad
into
cmp
sbb
pop
push
test
add
popf
lcall
mov
add
mov
stos
mov
sbb
mov
je
arpl
jmp
adc
imul
pop
in
push
adc
mov
idivl
decb
push
aas
scas
jl
jb
pop
imul
and
cwtl
sub
lea
cmc
lods
cli
dec
iret
sbb
aad
mov
imul
imul
imul
aad
inc
popa
orl
leave
jae
in
dec
pop
stos
adc
es
lret
test
std
mov
mov
hlt
mov
fdivl
aas
idivl
call
and
rcrl
lods
mov
dec
mov
inc
cmp
mov
in
jnp
fsubs
mov
mov
cmp
dec
sub
mov
rcr
outsl
jg
sar
push
pop
dec
inc
jge
sbb
add
cmp
imul
jle
imul
and
in
mov
cmp
push
in
pop
mov
lahf
outsb
pop
gs
imul
jl
sbb
into
add
xchg
rolb
jle
mov
test
shlb
es
repnz
rcr
js
dec
push
jbe
xchg
fucom
in
mov
fcmovbe
mov
push
nop
popf
xchg
dec
push
dec
jp
repnz
imul
inc
add
dec
ljmp
mov
outsl
enter
js
mov
push
sahf
push
mov
stos
xor
roll
pop
ss
pop
jbe
add
dec
popa
inc
jl
dec
sub
mov
dec
mov
stos
das
popf
fwait
inc
push
mov
shlb
mov
sbb
mov
adc
cmp
mov
jno
outsb
pop
xchg
stos
jae
push
out
mov
leave
stos
push
int3
lret
mov
jns
dec
push
stos
inc
or
lock
or
outsl
xor
insb
jne
cli
ljmp
in
dec
movsl
es
sub
xor
push
das
pop
xor
xchg
push
dec
stc
push
pop
lret
in
dec
and
aaa
sub
adc
jno
xchg
xor
add
mov
pop
aam
xor
jp
mov
jl
ljmp
add
xchg
lods
out
mov
hlt
xchg
bound
mov
bound
in
adc
in
cmp
push
add
hlt
insb
jmp
subb
mov
push
cwtl
arpl
lea
nop
push
push
ficomps
push
roll
aad
jecxz
hlt
push
test
dec
push
int3
sbbb
or
ss
mov
pop
retw
data16
test
mov
fs
dec
and
cmp
push
arpl
in
packuswb
add
sub
adc
sub
jge
pop
jne
adc
sahf
cmp
mov
adc
mov
aas
outsl
mov
pop
cs
pop
das
repz
in
cmp
pop
cmp
cli
stc
js
add
pop
js
sub
pop
fisubrs
test
pop
push
pushf
mov
clc
fmul
pusha
add
test
out
lods
insb
xor
arpl
pop
rclb
add
mov
leave
lcall
insb
dec
ss
call
clc
inc
mov
imul
mov
push
fldcw
bound
imul
mov
xorl
lods
imul
xor
ss
notb
and
xchg
inc
pop
jge
lds
sbb
jb
xor
bnd
xchg
add
and
mov
fwait
mov
xchg
dec
push
insb
mov
mov
in
xor
pop
xchg
push
xchg
cmp
in
fs
cmp
leave
fidivrl
jbe
xchg
shl
ss
cmp
add
std
lret
lcall
jae
popf
mov
movsl
andl
shll
shlb
jmp
pop
stos
sub
mov
pop
add
sbbl
or
ds
and
push
inc
sbb
subl
leave
push
sbb
loop
jo
ljmp
jbe
orb
inc
and
lea
push
jno
fwait
mov
xor
movsb
lret
repz
imul
pop
in
pop
leave
mov
push
mov
inc
ja
or
fistpl
addr16
xor
ret
in
dec
xor
jmp
inc
mov
push
mov
push
push
and
int
xchg
xchg
sbb
xchg
jg
cmp
sarl
xor
mov
insb
or
push
pop
std
add
das
pop
mov
lock
mov
test
jl
mov
lds
pop
or
into
test
or
jns
lods
std
xchg
sbb
faddp
imul
jae
orl
mov
ss
cmc
adc
addr16
adc
add
mov
adc
hlt
dec
jnp
xchg
or
mov
push
pop
sbb
mov
sbb
dec
fwait
push
jecxz
pop
xor
mov
call
dec
cli
adc
sbb
pop
or
mov
je
push
dec
xchg
dec
mov
scas
jl
pop
sbb
mov
push
imul
mov
int
fistps
shl
adc
repz
sbb
xchg
icebp
fbstp
mov
jns
popf
jbe
pop
cmpsb
jmp
add
outsb
adc
adc
mov
or
les
xlat
ja
imul
and
sahf
test
fstpl
cmp
insb
xor
xchg
or
jecxz
pop
aam
lds
aaa
push
int
xor
out
pop
jns
inc
out
xchg
out
inc
mov
aas
push
in
mull
out
stos
xchg
test
xchg
inc
je
fmull
lahf
push
clc
decb
shrl
mov
sbb
lret
cmp
pop
mov
scas
repnz
or
negb
fstpl
jae
ljmp
sub
andl
aam
lahf
dec
pop
ficoms
icebp
mov
pop
enter
out
cmp
xchg
fisttpl
jns
pop
push
cmp
addr16
call
cmp
movsl
in
scas
jmp
das
inc
popf
lahf
mov
xchg
jl
cmp
in
fcomps
inc
lret
pusha
xchg
dec
jg
stos
loopne
pushf
lret
in
sbb
xor
cmp
cs
add
mov
lret
hlt
pop
lock
lods
out
xor
in
mov
ret
inc
add
or
cmp
int
mov
aam
shrb
cmp
scas
lahf
lods
mov
bound
add
shl
cltd
in
repnz
jp
adc
scas
xchg
mov
cmc
ja
aam
loope
je
pushf
mov
lcall
adc
dec
fidivrs
outsb
dec
clc
jne
jae
push
stos
addr16
fcomps
out
and
clc
pop
cmp
into
cwtl
clc
pushf
outsb
mov
sbb
pop
mov
mov
jge
pushf
out
push
jg
shr
subl
cli
add
cmc
mov
cltd
mov
or
lods
push
in
ss
or
js
jae
and
mov
data16
flds
mov
aas
and
xor
gs
and
mov
add
adc
rcll
mov
and
lahf
dec
movsb
pop
repz
ucomiss
cmp
shll
andb
jns
and
rorb
stos
add
popa
les
mov
stc
or
pop
adc
and
imul
jg
popa
cwtl
jg
add
popf
les
dec
call
lcall
insl
loopne
movsl
add
or
dec
xor
add
imul
or
fdivrl
pop
xchg
xorb
xor
sub
sub
mov
xchg
mov
push
mov
mov
mov
dec
adc
insb
ds
push
or
mov
hlt
adc
or
sub
mov
and
dec
je
jnp
mov
or
scas
jae
inc
jmp
adc
push
or
in
add
out
je
mov
stos
jns
cld
stc
mov
loop
andl
clc
jl
pop
inc
pushf
stos
mov
in
outsb
push
xor
nop
cmp
mov
aaa
xor
mov
sub
lret
xchg
push
push
dec
cwtl
lahf
out
push
cmpsl
dec
add
mov
imul
mov
pop
xchg
mov
mov
lret
mov
push
xlat
adc
jg
lock
sti
pushf
js
inc
mov
hlt
in
cmpsl
cmp
stos
out
sbb
stc
adcl
inc
push
adc
clc
cmp
mov
sbb
add
ljmp
sub
loopne
push
add
lahf
add
shl
jae
daa
int3
lret
icebp
jne
inc
sarl
mov
loopne
jmp
in
rcrb
jmp
push
or
inc
int
repnz
int
mov
mov
xor
or
mov
push
pop
sbb
inc
adc
lea
inc
cwtl
adc
or
bound
inc
jecxz,pt
xchg
js
dec
and
ss
inc
lret
fstps
push
push
outsl
add
mov
push
push
fdivr
adc
inc
repnz
add
jl
cmpsb
push
push
pop
mull
xor
push
cli
add
xorl
pop
das
mov
pop
loop
pop
aam
adc
add
stos
push
scas
adc
jl
test
mov
sub
fs
mov
mov
add
call
dec
mov
xchg
iret
je
jle
imul
push
cs
fdivl
orl
movb
test
loope
stos
add
aam
push
pop
cmp
mov
das
jge
xor
pop
dec
and
sub
mov
push
in
or
jecxz
lahf
ss
sbb
dec
aaa
sbb
mov
les
mov
dec
fsubrl
clc
into
and
test
mov
jecxz
lcall
ficoml
cmp
xchg
push
test
sbb
enter
pop
push
xchg
xor
mov
subl
orb
jg
repnz
movsl
dec
stc
arpl
inc
rolb
push
push
movsb
jbe
adc
jbe
fisubrs
push
jnp
aam
cwtl
shll
pushw
jg
pusha
test
in
adc
jns
or
in
fwait
or
in
sbb
or
xchg
popa
inc
push
xchg
push
jne
pop
or
test
mov
js
out
into
xchg
mov
mov
jp
jnp
pop
in
sub
push
test
inc
dec
mov
and
mov
hlt
call
rorl
xchg
pusha
fldenv
addr16
sbb
and
lock
jp
fadd
jns
movsl
sub
cmp
sub
pop
jle
add
jecxz
pop
repnz
mov
xor
js
mov
dec
or
rorb
cmp
push
push
out
inc
xor
lcall
jp
mov
xchg
test
pop
gs
and
cmc
out
mov
adc
lahf
pop
mov
shlb
shll
dec
scas
sub
cmpsl
jno
cmp
jl
inc
jp
imul
lret
jbe
dec
in
cltd
dec
ds
xchg
push
xchg
pusha
sahf
pushf
adc
sti
sbb
adc
inc
mov
lock
jno
mov
mov
dec
mov
pop
je
mov
dec
sub
outsb
loop
inc
dec
inc
cmp
cwtl
push
xchg
sbb
je
sub
test
ljmp
lods
cmc
fadds
mov
mov
sub
fucomip
xchg
daa
cmp
cs
out
loope
into
jne
mov
pushf
fxam
dec
cmpsl
or
sahf
lock
pop
sub
ljmp
clc
mov
mov
stc
add
ret
fnstsw
imul
sarb
idivl
daa
iret
jb
lods
in
popf
cmp
mov
pop
jl
je
inc
pusha
jg
dec
mov
loop
mov
push
push
pusha
cmp
arpl
aad
sub
push
or
add
in
xchg
sbb
mov
testb
push
push
pop
scas
pop
pop
jae
and
scas
cltd
lret
inc
xchg
cmp
int
mov
push
xchg
jns
cmp
jno
aam
decl
dec
lret
and
sub
push
sub
pop
in
jmp
push
sar
cmp
cmp
mov
mov
push
popa
push
xorl
iret
push
or
mov
stc
cmp
push
iret
mov
dec
outsl
cld
daa
jmp
mov
outsb
xchg
sbb
lahf
test
aas
sub
fnstenv
in
stos
pop
fildll
fidivrs
scas
dec
sarl
int3
pushf
leave
cmp
mov
addr16
fadds
and
mov
sbb
int3
mov
or
adc
mov
cwtl
test
inc
add
and
jg
loopne
movsb
retw
inc
jmp
add
out
cld
and
je
push
xchg
xlat
fiaddl
and
cltd
and
in
jns
cmp
push
cmp
add
data16
push
push
test
sub
mov
pushf
scas
xor
xchg
ret
mov
adc
arpl
sub
iret
data16
fisubrl
sub
mov
mov
xchg
push
pushf
jo
xchg
insl
in
jp
cli
xchg
mov
and
jg
pushf
mov
mov
dec
int3
roll
jo
out
in
xor
jp
jmp
stos
pop
jle
and
js
sbb
xchg
aaa
add
mov
in
cs
jg
xchg
loope
sahf
hlt
gs
jbe
leave
loopne
push
dec
lods
and
mov
push
inc
mov
adc
adc
pusha
pop
inc
lcall
pop
pop
rorl
add
push
cltd
push
mov
ja
and
clc
pop
pop
pop
inc
aam
adc
cmp
lea
mov
jb
popf
add
jae
leave
insb
dec
rcll
lea
pop
jp
lods
jle
out
dec
add
aad
xor
inc
push
popf
popa
jbe
xlat
xchg
dec
insl
es
mov
repz
pop
stos
das
andb
pusha
sub
test
add
and
jp
xor
cmpsl
pop
add
pop
pop
push
jnp
clc
mov
cld
mov
dec
lods
out
xor
leave
outsl
jno
inc
sti
cmpsl
pop
pusha
jo
std
lea
out
xchg
and
pushf
cmpsb
in
dec
rorl
stos
mov
pop
insb
xchg
negb
into
lret
lret
dec
rcr
lods
xor
pusha
jg
push
je
adc
rolb
fldcw
inc
in
or
or
and
jae
lea
cs
pop
jne
sbb
lods
scas
mov
ljmp
out
push
ror
enter
ljmp
sbb
pop
outsl
mov
cmp
adc
sub
pop
jp
sub
cwtl
xchg
sub
repz
cltd
add
mov
rorl
incb
xchg
rorl
cmp
scas
adc
popf
cwtl
dec
adc
and
mov
dec
data16
and
push
push
aas
sbb
in
imul
testl
jbe
imul
dec
mov
xchg
sub
into
cmp
add
mov
mov
sub
dec
mov
cmpsb
pop
repz
and
cs
fcomi
ret
add
in
jmp
xchg
xor
or
pushf
push
add
xchg
out
jge
sbb
dec
mov
jae
xorb
sub
and
pop
scas
aad
pusha
inc
aam
sbb
cs
add
jecxz
inc
fs
mov
mov
mov
cwtl
jb
out
add
pop
pop
cmpsb
and
fcomip
inc
mov
sub
mov
scas
lods
popf
sbb
mov
pop
ja
mov
flds
test
and
dec
xor
fucomi
jbe
nop
cld
jae
mov
pop
xchg
cmpsb
js
mov
sub
pop
push
lahf
ss
mov
es
lock
lock
inc
add
add
hlt
repz
mov
pop
xlat
jb
nop
mov
push
cmp
cmp
loop
mov
lock
aad
push
sbb
jnp
add
adc
mov
xlat
or
jge
cli
xchg
sbb
mov
push
sbb
sbb
pop
xor
aas
mov
mov
mov
dec
adc
insb
ljmp
mov
adc
daa
adc
mov
pop
fildl
mov
lcall
js
sbb
xor
pusha
cmp
subb
test
sbb
mov
inc
mov
stos
push
adc
push
mov
mov
mov
leave
pop
dec
mov
mov
repz
dec
cmp
and
call
int3
cmp
or
jno
aam
cmp
mov
xchg
push
and
les
lret
and
lcall
daa
inc
sbb
es
jo
push
fwait
mov
int3
dec
inc
pop
mov
pushf
enter
and
push
fdivrl
setge
lods
adc
push
pop
gs
xchg
imul
or
or
pop
aas
lock
jp
mov
std
push
cmc
xchg
ficoms
mov
cs
push
divb
push
das
and
sbb
out
repnz
cltd
test
lods
int3
xor
lock
in
or
lds
test
xor
push
inc
xchg
das
rclb
es
outsb
mov
jb
in
push
mov
arpl
sub
jnp
shr
out
sahf
xor
jae
xor
fimull
aad
gs
sbb
jp
mov
sub
les
sub
data16
sub
mov
mov
in
sub
xor
out
push
scas
dec
fstpl
push
xchg
or
loope
cmp
test
in
push
xchg
xor
xor
clc
or
mov
inc
mov
xlat
mov
int3
int
sbb
dec
jae
lods
int
xchg
cmp
call
mov
sub
xchg
jmp
jg
pop
pop
inc
scas
rorb
mov
mov
int3
xor
mov
inc
shlb
roll
cmp
xchg
sbb
xchg
push
jp
sbb
arpl
mov
sub
inc
mov
popa
sub
in
out
sbb
sbb
mov
mov
scas
mov
pusha
xor
sub
ss
aad
sbb
fisubs
jbe
xchg
xor
xor
cmp
sbbl
aad
cmp
gs
and
out
xor
adc
push
mov
mulb
nop
add
inc
cmp
xor
add
mov
mov
loope
scas
das
mov
in
lcall
or
jmp
lods
in
fnsave
test
mov
mov
shlb
lret
lcall
fwait
sbb
test
xchg
pop
inc
pop
mov
push
lods
adc
push
sarb
aas
mov
aad
roll
outsb
push
cmp
mov
mov
fcom
sub
pop
inc
fstps
dec
add
ja
dec
adc
mov
adc
or
mov
push
nop
leave
out
ljmp
or
hlt
data16
cwtl
xchg
add
cmp
rolb
xchg
pop
mov
inc
adc
rcr
sbb
add
nop
aas
add
push
out
loopne
lods
fildll
jbe
iret
cmp
inc
mov
movsl
push
xor
dec
cmp
mov
xor
mov
data16
xchg
adcl
xchg
xlat
jne
das
jecxz
shlb
and
out
scas
cmp
insl
aaa
inc
cmp
movsb
jg
in
or
loop
shrb
andb
mov
outsl
addl
inc
mov
cmpsb
inc
sbb
imulb
or
popf
shll
xchg
xchg
filds
mov
lods
mov
fs
lret
and
pop
in
bound
mov
test
and
add
mov
sbb
dec
pop
xchg
je
jno
stos
push
mulb
int3
pusha
mov
xor
imul
repz
jnp
xor
push
add
insl
imul
je
in
stos
xchg
aaa
sub
push
push
mov
repz
mov
add
ja
xchg
lahf
aaa
loop
sub
mov
mov
xor
xchg
lea
pop
test
movsb
push
es
push
add
out
orb
mov
cmpl
hlt
insl
mov
inc
pop
cli
push
sub
loopne
jns
sub
fdivs
sbb
jne
jne
mov
daa
rcl
es
and
std
sbb
jle
sarl
jmp
rorl
mov
fidivs
jle
mov
mov
sbb
xchg
push
pop
cmp
nop
cmpsl
fstpt
pop
dec
test
mov
jl
xchg
inc
inc
jb
xchg
loop
jns
fimull
push
lret
out
mov
push
lret
pop
mov
jg
test
fdivs
leave
cmp
push
and
cmp
lcall
insb
dec
mov
pushf
inc
mov
cwtl
lret
outsb
mov
inc
inc
cmp
rorb
lret
jle
mov
rclb
popf
xchg
das
mov
mov
push
in
push
adc
cmc
ljmp
pop
mov
push
mov
xor
nop
jo
add
cmp
arpl
xlat
or
jge
mov
pop
outsl
clc
idivl
mov
rclb
adc
xlat
fs
pop
add
adc
push
jecxz
test
pop
repz
and
pop
xchg
pop
out
pop
xlat
fwait
inc
push
inc
ss
push
jmp
ds
cmp
call
inc
inc
das
jbe
jecxz
cmp
push
xor
mov
xor
inc
lret
sbb
mov
push
insb
xchg
sub
pop
repnz
xor
push
inc
push
xor
mov
dec
and
xchg
push
inc
rcr
daa
lock
push
xchg
lods
jo
jle
rorb
std
gs
orb
pusha
ret
adc
stos
pop
incl
push
inc
and
jae
in
adc
push
inc
push
dec
iret
jle
lahf
sub
adc
popf
add
arpl
lock
mull
and
push
aad
jo
sbb
fcoml
mov
outsl
rcrb
mov
popf
inc
leave
or
mov
rclb
shl
push
int3
popa
xor
mov
les
aas
in
rcl
add
call
shll
test
adc
pop
mov
cmpsb
cmc
lahf
outsl
pop
shll
frstpm(287
out
cmp
sub
addl
mov
pop
jnp
inc
mov
or
call
dec
xchg
enter
dec
and
movsl
cmpsl
jne
sub
or
fwait
lret
lock
ret
dec
std
xchg
fwait
repz
mov
cld
nop
pop
jno
adc
es
jo
pop
stc
and
mov
lahf
jne
mov
lea
aaa
or
mov
addr16
mov
insl
push
mov
fs
add
out
jb
js
inc
cmp
pushf
mov
jae
mov
inc
outsb
push
push
xlat
mov
xchg
adc
outsb
cltd
insb
inc
add
jns
adc
cltd
shll
test
pop
adc
pop
outsl
nop
inc
cmpsb
cmp
enter
cld
stc
dec
push
mov
loop
xor
icebp
inc
sbb
mov
inc
out
mov
and
lahf
std
inc
pop
popa
fwait
dec
mulb
xor
add
sbb
test
inc
mov
hlt
call
mov
inc
or
enter
push
inc
ss
xchg
mov
mov
out
mov
add
je
out
fidivrs
subb
xor
pop
nop
fxch
fildl
shlb
fiaddl
mov
lock
hlt
in
out
xor
outsl
jp
outsb
mov
adc
iret
cmp
insb
leave
js
stos
adc
rcll
mov
dec
sub
ja
jl
sub
push
push
js
jae
inc
adc
and
push
mov
xor
push
rclb
nop
xor
aaa
mov
xchg
inc
xor
adc
adc
fcompl
in
repz
aas
sahf
mov
adc
imul
ret
enter
cs
mov
mov
sbb
sub
out
sti
lret
js
popa
into
rol
push
sub
jo
mov
icebp
loopne
cmp
adc
loop
and
imul
mov
test
or
mov
ds
dec
sub
xor
ss
mov
adc
mov
xchg
pop
jbe
push
test
rorl
pusha
pop
add
mov
dec
pusha
adc
xor
xchg
mull
je
jnp
fdivs
repnz
lock
pop
cmp
lea
push
ds
mov
dec
adc
les
push
repnz
cmp
inc
lods
push
mov
int
dec
mov
xchg
pop
jmp
xor
mov
iret
jle
pop
sbb
dec
jne
jns
clc
in
push
mov
cs
fistpl
mov
hlt
pop
adc
cmp
add
cmpsl
aaa
nop
daa
sub
ds
cmp
mov
pop
dec
inc
nop
mov
mov
xor
inc
xor
sbbl
inc
mov
mov
je
call
ret
pop
dec
shlb
jle
mov
test
cld
es
insl
cli
mov
add
testb
jo
shr
cs
cmp
aad
in
lods
jmp
fbstp
inc
clc
sub
inc
scas
sbb
aad
imul
mov
jne
mov
sbb
in
mov
cmpsb
xor
pop
pop
adc
xor
push
or
fists
mov
pop
push
pop
das
push
movsl
loopne
mov
ret
iret
call
xor
movb
and
adc
sbb
jmp
call
jae
mov
loope
rcll
sub
mov
xchg
xor
push
sbb
enter
shlb
xchg
cli
sahf
or
cli
dec
inc
mov
mov
inc
sub
mov
jbe
adc
dec
popa
mov
lahf
mov
pop
lock
aad
jne
mov
pop
fdivrs
ljmp
lds
push
aaa
out
js
dec
push
lds
cmp
jmp
iret
cs
adc
pop
dec
pushf
in
or
dec
in
loop
repz
dec
sbb
sub
stc
or
shll
std
push
and
filds
or
div
pop
cld
or
leave
ja
out
rorb
or
stos
jno
outsl
push
mov
ljmp
jl
lods
shlb
sahf
jle
lret
cs
int3
mov
adc
mov
cli
les
fsubrl
sub
mov
rcrb
jp
dec
scas
daa
pop
test
ret
pop
rorl
leave
dec
adc
sub
push
das
ret
lea
imul
xchg
adc
fisubrs
inc
cmpsl
push
xor
enter
push
repz
push
gs
sub
aas
jno
adc
add
cmpsb
cli
imul
jge
and
mov
popf
push
rcrl
inc
xchg
repz
push
jle
jge
mov
mov
sub
cmp
cmp
ja
xchg
pop
or
shll
mov
ja
dec
xchg
fdivrl
fbstp
jns
push
lret
data16
shr
pop
mov
insl
and
pop
dec
push
bound
jne
insl
stos
mov
cmp
add
mov
xor
jo
cltd
lcall
mov
bound
call
mov
stos
or
ret
stos
outsb
or
xor
push
pushf
jp
les
ret
inc
popa
out
jge
cwtl
push
pop
scas
mov
cld
mov
test
sub
xor
mov
pushf
out
push
jecxz
pop
fidivs
jae
stos
cmp
gs
orl
icebp
dec
ljmp
iret
mov
out
loop
cmpsl
mov
dec
add
push
cmp
add
lods
loope
js
sbb
sbb
fbstp
jb
ret
push
push
outsl
stc
mov
sbb
stc
and
outsb
xchg
xlat
movsl
push
addr16
pop
scas
leave
out
iret
inc
ds
or
lods
sarl
mov
xchg
clc
cs
adc
xchg
fldt
mov
fsubr
iret
dec
xchg
sub
shlb
xor
mov
loopne
jb
mov
out
mov
icebp
or
enter
out
fisubs
inc
les
aad
mov
and
cltd
loope
les
shlb
xlat
stos
ds
outsb
jne
add
xor
gs
cli
and
or
cmp
sbb
xchg
or
xor
xchg
mov
shrl
loop
dec
ss
dec
dec
test
pop
shlb
sub
dec
jp
or
sbb
push
lahf
orb
out
das
subb
xorl
and
mov
inc
pushf
add
sub
mov
pop
loop
testl
push
out
lock
lret
repnz
cmp
mov
sbb
popa
xchg
pop
sarb
sub
sub
mov
xchg
pop
out
in
fwait
mov
adc
pop
cmp
add
adc
add
rolb
cmp
mov
popa
fidivs
dec
mov
inc
and
clc
dec
andl
fnstsw
ret
popf
sarl
and
fsubs
push
pushf
mov
xchg
insb
mov
cmpsb
pop
dec
sbb
cmp
add
js
mov
or
pop
jge
or
dec
or
cmp
mov
sub
repz
dec
rol
or
dec
incb
and
xlat
clc
pop
mov
jge
mulb
adc
add
cld
and
push
cmp
pop
adc
inc
xchg
mov
bound
xchg
insb
pop
lods
jecxz
ret
sub
adc
jle
xorb
xor
mov
data16
inc
jne
jle
in
cltd
cld
data16
aas
push
or
jns
mov
sub
repz
in
aaa
xchg
not
mov
jmp
stos
mov
aam
and
movsl
add
cmpsl
stos
jge
mov
repnz
jmp
shlb
or
negb
jl
pop
adc
mov
iret
fimuls
and
scas
cmp
jecxz
and
sbb
enter
sbb
push
lds
cld
in
mov
lcall
sbb
pop
popf
dec
xchg
xchg
repz
mov
loopne
fcompl
scas
push
jbe
cmpsl
stos
xor
pop
cmp
out
cmp
sub
lds
adc
int
and
add
test
pop
out
mov
jmp
movsl
pop
jl
or
push
sahf
in
daa
xlat
dec
ret
push
fdiv
pusha
mov
inc
testb
aas
xchg
mov
sbbb
sub
xchg
add
push
xchg
fwait
js
sbbl
ss
stc
lahf
push
sub
out
sti
in
pop
imul
sahf
daa
mov
xchg
shrb
xchg
insb
mull
xchg
xlat
lods
jg
fistps
ret
jg
scas
xchg
fiaddl
adc
xor
dec
mov
xor
test
and
mov
xchg
test
jne
inc
mov
insb
test
xor
adc
pop
in
xor
pop
inc
mov
and
inc
clc
or
outsl
clc
repz
sbb
fstpl
or
pop
popa
fwait
clc
jb
mov
jle
cmpsb
xor
aaa
das
dec
fucompp
stos
inc
sbb
imul
into
call
push
mov
pop
sarb
push
je
jo
sbb
inc
cltd
mov
lea
movsb
or
cmpsl
out
mov
cld
sbb
scas
cmp
faddp
push
into
mov
adc
sbb
push
scas
mov
shlb
fldcw
fimull
mov
cmp
lods
outsl
inc
movb
and
jp
stos
and
out
popa
dec
std
xchg
mov
cmpsl
jmp
jns
fstps
and
lods
test
movsb
stos
cltd
inc
mov
xchg
adc
mov
cs
push
push
movsl
and
js
icebp
xlat
movsb
out
and
pop
inc
or
cwtl
inc
inc
addl
movl
ficomps
mov
loop
decl
add
mov
mov
mov
mov
mov
gs
in
mov
inc
or
push
jle
dec
das
shl
sbb
push
cs
pusha
je
sbb
sub
ljmp
mov
add
dec
cmpsl
loope
scas
inc
jg
testb
in
mov
cmp
out
in
pop
xchg
clc
mulb
bound
lock
mov
xor
add
lods
push
pop
jecxz
idivl
lds
jne
inc
sbb
bound
enter
fisttps
leave
fildl
mov
enter
dec
dec
mov
jnp
push
push
xor
cwtl
pop
popf
cmp
sub
outsl
adc
mov
stos
clc
sub
push
out
mov
test
pop
sub
cwtl
incl
add
dec
imul
mov
xchg
or
sti
and
inc
sub
adc
out
mov
dec
add
rcrb
jo
mov
dec
je
xchg
dec
mov
sbb
test
dec
adc
pop
cmpsb
dec
inc
in
inc
jb
mov
inc
orb
out
xchg
xchg
inc
pop
mov
pop
adc
inc
xchg
mov
ja
je
bound
xor
shr
insb
or
fisubl
fstpl
add
jmp
bndldx
into
cltd
fsubs
ljmp
gs
mov
push
sub
mov
ss
mov
scas
dec
test
pop
inc
cmp
inc
fisubs
lret
jno
cmpsb
cli
jno
out
ja
pop
pop
sub
lahf
mov
inc
add
inc
test
sbb
test
inc
aam
pop
mov
and
lret
fucomp
lds
push
popf
pop
add
scas
in
sub
push
cs
or
repnz
inc
test
xor
cmp
test
cmp
add
pop
in
cmp
push
adc
jb
cmp
inc
push
push
xor
mov
ljmp
lret
mov
fcmovu
pushf
pop
adc
sbb
lock
jge
and
mov
addr16
xor
aad
adcb
sub
adc
data16
clc
imul
ja
adc
mov
in
add
test
inc
daa
push
lret
push
hlt
jns
mov
add
ds
pop
jbe
movsb
mov
xchg
push
dec
adc
jecxz
sub
or
clc
jl
loop
dec
or
cmpsl
rorl
mov
xchg
adc
insb
subl
pop
jmp
ret
imul
imul
inc
scas
aas
lds
or
dec
and
pop
dec
inc
mov
lcall
jne
lds
jnp
and
or
dec
fs
dec
mov
loop
xchg
dec
fadds
rcll
mov
mov
enter
mov
out
jns
inc
nop
fucomp
xor
sbb
add
inc
fucomip
mov
dec
lret
outsl
mov
arpl
jbe
mov
aad
scas
mov
nop
jb
aaa
insl
push
cld
roll
add
pop
mov
call
orl
bnd
cli
dec
mov
inc
xor
popa
in
push
scas
mull
loope
fdivl
xchg
jp
push
mov
or
loope
loope
mov
rcll
ficoms
pop
lahf
outsl
add
cmp
jns
imul
enter
out
xor
inc
sub
ds
outsl
clc
mov
sahf
adc
ffreep
xor
enter
jns
fistps
lea
mov
lock
adc
mov
cmc
les
scas
insb
imul
lcall
icebp
inc
dec
icebp
rol
xchg
adc
push
lods
inc
sub
test
jns
cmpsb
sub
lea
out
int3
mov
push
xchg
fcmovb
lods
xchg
js
dec
ret
ss
das
xor
sarb
sub
inc
add
imulb
pop
mov
mov
arpl
ja
fisubl
sti
out
cmp
outsl
mov
push
rcr
pop
jne
sub
push
mov
lock
adc
sbb
imul
xchg
jnp
mov
cmp
mov
or
in
aaa
popf
xchg
cld
cmc
es
or
pop
jle
push
inc
pop
cmc
adc
movsb
adc
xchg
in
popa
lret
aas
insb
push
enter
cwtl
mov
ret
xlat
add
push
cmc
outsb
outsb
push
cmp
movsl
int
lods
ret
xor
and
mov
sbb
and
xchg
sti
push
gs
cmp
mov
sub
or
nop
clc
adc
jb
push
pop
fld
subb
jle
dec
aam
cwtl
jl
scas
les
fs
sbb
add
mov
sarb
mov
jb
mov
shr
fidivrs
shrb
push
mov
sub
les
jl
loopne
mov
aas
pop
ret
jns
mov
icebp
adc
inc
add
into
ja
mov
lret
add
cmpsb
add
push
cs
pop
adc
mov
shll
jmp
mov
aaa
cmp
movb
sbb
sbb
mov
js
mov
push
pop
dec
mov
popf
cmc
adc
rcl
mov
mov
negl
in
mov
pusha
mov
arpl
fisttps
mov
sub
mov
sub
and
test
ljmp
adc
jl
dec
sub
xor
mov
adc
push
dec
arpl
test
dec
pop
mov
mov
ret
scas
loopne
inc
pop
stos
cwtl
cmpsb
sub
cmp
adc
push
call
pop
jae
in
jg
xchg
movsl
jecxz
cmp
pushf
mov
push
cli
loope
cmc
or
std
add
testb
push
test
mov
inc
xchg
hlt
xor
sub
outsb
and
lea
jnp
pop
pop
ret
roll
cmp
pop
mull
ret
mov
xor
sub
hlt
and
idivb
inc
dec
xor
les
dec
inc
shr
shlb
adc
adc
jp
and
inc
addr16
jg
movntps
or
fs
jno
mov
inc
or
test
inc
cmc
lds
jno
loopne
sbb
pop
dec
das
std
out
insb
xor
sub
or
cmpsb
add
fcmovnb
cmc
icebp
nop
push
in
stos
nop
dec
fwait
int3
mov
and
bound
add
adc
mov
cmp
lahf
sub
nop
pop
iret
gs
lret
push
xchg
fadds
pop
pop
aas
add
inc
mov
jmp
and
mov
in
in
mov
mov
in
sbb
dec
or
mov
fstps
push
iret
xchg
adc
mov
and
xchg
push
and
inc
gs
mov
dec
jno
push
test
dec
arpl
cmpl
pop
roll
push
or
mov
hlt
loopne
out
ss
test
movsl
rcrl
and
enter
sub
arpl
js
sub
pusha
sarb
xchg
cmp
dec
insl
rclb
or
push
dec
push
dec
je
daa
stos
mov
jp
sbb
sar
jno
cmp
add
pusha
sub
dec
loop
sub
popf
sub
cmp
push
roll
jno
fisubs
int3
xchg
lahf
hlt
and
sbb
scas
mov
push
sbb
loop
insb
pop
aad
mov
into
in
mov
call
jmp
jmp
pushf
test
xor
cwtl
mov
push
cmpsl
jno
imul
js
cmp
push
adc
clc
dec
sbb
jbe
xor
cli
push
in
jo
or
mov
jp
xor
sub
jmp
pop
mov
addl
sub
push
dec
bnd
cmpl
add
mov
pop
jae
ror
mov
shrb
dec
bound
mov
and
pop
stos
dec
inc
pop
data16
push
adc
icebp
inc
adc
xchg
icebp
inc
fstpt
dec
std
cmp
stos
jb
inc
out
hlt
scas
jge
add
lock
rorl
mov
add
mov
fildl
lcall
pusha
addb
jne
mov
cmp
cmp
jp
cmp
leave
mov
push
inc
hlt
mov
iret
dec
cmp
and
lahf
sbb
mov
cmpsb
jne
clc
daa
cmp
sub
cmpb
lea
pop
addr16
insb
call
jp
inc
jl
cld
push
cld
addr16
data16
pop
fildl
pop
aad
in
adc
dec
cmpsb
pusha
ffree
cmc
test
pushf
mov
fadd
xchg
and
bound
ljmp
sbb
sbb
icebp
addb
inc
xlat
shll
gs
push
mov
loopne
pop
insb
push
pusha
pop
sub
lret
daa
in
pop
or
sbb
das
xor
nop
jne
loopne
add
outsl
adc
sub
adc
cltd
push
mov
fs
lods
pop
mov
int3
loopne
xor
xor
cwtl
test
gs
or
or
push
into
mov
loop
mov
push
scas
ret
les
mov
or
int
dec
jbe
xor
fildll
push
int
mov
dec
fsubrs
ss
sbb
push
rcll
cmc
data16
jb
divb
or
push
jg
dec
or
ljmp
test
test
or
add
sub
negb
adc
add
pop
push
bnd
leave
jg
ds
xchg
ljmp
test
movsl
sbb
insb
push
mov
mov
pop
xchg
sbb
push
or
insb
push
xchg
sti
js
or
adc
inc
dec
cld
mov
mov
pop
fwait
neg
cmp
test
fistpll
mov
cmpl
call
lret
jae
nop
sti
dec
cmp
xchg
sbb
sub
or
fs
sahf
inc
stos
cmp
aad
fsubrl
mov
ret
jno
push
cmc
scas
inc
push
inc
cmpsl
mov
es
adc
int3
mov
sarl
mov
cmp
shrb
cmp
lock
xchg
pop
push
mov
in
pop
add
dec
mov
scas
mov
popa
shrb
push
mov
mov
aad
int
or
and
repz
out
fistpll
push
inc
xor
insl
xor
and
or
push
xor
ds
adc
stos
scas
test
jne
aam
pop
xor
pop
cmp
pop
push
aam
dec
pop
or
jl
adc
cmp
push
push
cmp
and
cmp
inc
mov
lock
das
mov
and
pop
insl
or
mov
jp
or
shll
repnz
int
add
mov
push
or
inc
int3
or
out
out
stos
pushw
jp
test
adc
pop
shlb
jg
lcall
xlat
mov
call
out
pop
xchg
jge
fwait
xchg
cmp
pop
xchg
xor
cmp
mov
and
rcrl
sub
sbb
inc
push
arpl
fists
arpl
ja
jae
push
mov
jns
push
dec
popf
fists
push
inc
mov
clc
ja
ret
push
aaa
or
and
gs
mov
adc
mov
sarl
cli
jae
adc
fsubs
mov
xor
inc
out
xchg
cmp
in
dec
out
sbb
insl
mov
mov
stc
xor
mov
daa
int
mov
pop
int
pop
xchg
xchg
insb
in
popf
xchg
fsubrp
fstpl
xor
cltd
sbb
mov
mov
int3
sbb
dec
mov
std
fimull
jmp
or
fcompl
imul
cmp
push
les
mov
in
lret
std
imul
or
sbb
sub
in
out
shll
sbb
fnstcw
aam
mov
cmpsl
cmpsl
test
dec
mov
call
push
jge
bnd
fsubl
jae
lods
push
out
xlat
push
stos
addr16
lret
mov
sbb
fdivl
jne
aad
ljmp
sti
mov
sub
pushf
les
cmpsb
mov
jb
push
sbb
inc
mov
inc
scas
cs
add
dec
int
inc
or
push
xchg
xor
in
or
icebp
pop
mov
mov
mov
pop
add
outsl
out
ds
in
rolb
adc
les
cmpsl
xor
sbb
add
mov
gs
insl
mov
aas
push
in
cmp
cmpsl
push
xchg
sub
jo
ret
xor
repnz
inc
stc
flds
xorb
pop
ljmp
in
fwait
outsb
and
mov
jge
movsl
mov
popf
push
add
ljmp
out
addr16
ss
sub
jg
mov
sti
js
cmpsl
pop
repnz
xor
daa
in
ficoml
mov
jo
xchg
mov
out
jmp
push
mov
es
sub
and
or
loope
add
dec
jecxz
adc
push
fwait
xchg
sub
rcr
aad
and
push
aas
es
mov
lret
pushf
pop
pmullw
xchg
jl
pop
dec
fisubrl
js
stos
inc
outsl
jge
push
sub
ds
inc
repz
push
xlat
sbb
clc
popl
std
and
dec
pop
loope
push
data16
ret
mov
or
cmpb
fisttpl
push
mov
pop
out
loop
fildll
les
fcoml
fadds
je
sar
in
mov
das
stos
scas
lret
lret
out
inc
jns
cwtl
cmp
mov
mov
stos
ja
das
adc
lock
add
nop
stos
lea
mov
addr16
inc
icebp
call
cmp
push
and
aad
movsb
fsubr
mov
sbb
fisttpll
jne
imul
aas
out
mov
xchg
pop
std
imul
push
jmp
mov
scas
loope
ss
sub
mov
mov
or
push
push
leave
les
cld
in
jno
sahf
cmpsl
cmpb
fisttpll
push
test
xor
pop
les
inc
and
xor
sarb
mov
push
pushf
inc
mov
add
mov
dec
or
sbb
dec
jo
adc
dec
mov
xchg
lret
mov
lds
xor
pop
mov
jo
mov
sbb
repz
inc
shlb
fsts
hlt
sbb
inc
push
cmp
cwtl
std
clc
lret
push
sbbb
fbld
aad
mov
mov
sbb
cmp
testb
push
pop
push
fwait
mov
movsb
mov
adc
mov
pop
shlb
cmp
stos
sub
je
fsubl
out
cmp
insb
adc
cltd
aaa
popf
xor
in
and
dec
or
cmpsl
test
test
sub
andb
or
or
cmp
aad
mov
xor
push
xor
push
dec
lods
push
or
adc
gs
sbb
fmuls
jmp
ss
sub
pop
mov
jo
in
or
inc
mov
push
pushw
jb
lods
xchg
sbbl
cmp
sub
lahf
add
pop
pusha
nop
push
mov
fs
cmp
mov
pop
sbb
outsl
orl
ss
or
jg
pop
pushf
es
fsubs
and
adc
lods
mov
inc
mov
cmp
pop
sub
test
ja
jge
jmp
xchg
push
fwait
adc
lcall
outsb
int
subl
mov
push
mov
cld
jecxz
fnstcw
inc
testl
std
cmp
es
mov
loope
and
pop
aaa
inc
add
ds
sub
mov
adc
imul
mov
cld
mov
das
pop
inc
repz
and
scas
scas
mov
ret
mov
pushf
mov
sbb
mov
sbb
fstpt
sub
loope
xor
sbb
outsl
rolb
sub
sub
xor
pop
cmp
push
lcall
enter
xor
mov
je
add
movsb
push
rorl
hlt
adc
add
loop
pusha
das
cmp
ret
fmul
andb
push
mov
shl
adc
dec
data16
sarb
mov
ret
mov
jo
push
push
adc
dec
mov
in
clc
addr16
jae
push
call
popf
cmpsl
pop
push
push
sub
cmc
mov
iret
xlat
pop
and
arpl
mov
push
inc
xor
fistpl
lcall
dec
lahf
cmp
mov
and
rcr
or
fwait
mov
imul
mov
push
push
adc
inc
sbb
outsl
inc
clc
mov
xchg
mov
xor
add
loopne
insl
ds
lock
hlt
mov
shlb
ljmp
loope
adc
data16
ds
push
outsl
mov
imul
add
pop
faddl
mov
gs
dec
in
std
out
sub
sub
sarl
aas
sbb
mov
dec
push
icebp
bound
testb
stos
xor
gs
dec
rcr
aad
repnz
add
inc
inc
mov
fbld
jle
rcr
mov
mul
pusha
cmp
inc
or
push
pop
push
ret
inc
or
leave
aaa
mov
jno
cmpl
xchg
jl
movsb
cmp
stc
mov
lahf
iret
push
sbb
mov
jnp
data16
lock
mov
push
mov
int3
mov
sbb
stc
mov
pop
and
fnstcw
test
in
dec
lret
loope
rcl
pop
push
aad
sub
mov
hlt
dec
outsl
or
repnz
inc
xor
aam
jo
xor
das
rorb
push
mov
pop
repnz
lods
cmc
out
pop
add
xor
movsl
out
popa
cltd
in
inc
push
cltd
cmp
stos
mov
push
cli
gs
test
dec
leave
push
aam
popf
sub
outsb
pop
ja
scas
xchg
sbb
xor
in
xchg
or
addr16
movd
jns
out
pop
ds
das
add
push
mov
cmp
sbb
xor
inc
cli
sbb
xchg
fisubs
pop
mov
jne
jmp
call
insl
fimuls
test
int
sbb
sub
pop
sbb
mov
lock
inc
lock
test
notl
shll
cld
rcll
sbb
aad
xor
scas
adc
mov
xor
dec
pop
sub
lret
fs
int3
ja
aam
mov
push
push
or
lret
and
mov
cld
lds
mov
int3
pop
dec
inc
int3
fidivs
inc
mov
mov
loop
or
mov
mov
push
rolb
cmp
test
push
popa
xchg
cltd
scas
adc
cmp
dec
jb
rorb
pop
or
ja
lret
in
cmpsl
push
mov
sub
xlat
or
insb
jmp
arpl
mov
xor
dec
mov
dec
sbb
jnp
out
repnz
das
in
push
testb
xchg
jne
pop
jp
push
call
push
mov
dec
cld
mov
test
loopne
popf
aad
addr16
fsub
loope
arpl
add
pop
fldt
leave
sahf
call
jns
sbbb
ja
leave
in
cwtl
and
jle
enter
into
pusha
adc
xor
jmp
jge
xor
out
jb
sbb
aaa
mov
rcrb
in
jg
pop
sub
out
pop
cld
jae
mov
lcall
out
test
push
orb
mov
lahf
pop
lahf
cmp
jl
adc
mov
mov
mov
aas
loope
orl
cmc
pushf
xchg
mov
push
jns
in
sub
jns
loopne
out
repz
fsubrs
fstpl
pop
mov
jmp
jns
repnz
nop
inc
addb
lea
je
stos
test
inc
scas
aam
arpl
int
in
imul
xor
push
push
xor
test
mov
nop
fcomip
inc
cltd
incl
fwait
and
push
mov
add
cwtl
mov
xor
test
stos
push
adc
or
jl
int
jne
mov
mov
and
cmp
sub
fimull
mov
xchg
scas
imul
clc
cmp
sub
cmp
stos
jl
cmp
dec
mov
fsts
lahf
xor
push
add
and
scas
push
cmpsb
call
inc
inc
daa
aad
adc
and
or
pop
xchg
aaa
rcr
mov
pop
fldcw
out
push
push
mov
call
mov
in
pop
das
je
sahf
cld
fisubl
cmp
cmpl
push
and
jno
pushf
mov
xor
mov
imul
xchg
das
adc
cmp
mov
jae
pop
push
js
es
stos
shl
and
lock
push
repz
cmp
mov
in
xor
inc
mov
mov
shrb
dec
lock
aam
faddl
pop
dec
es
enter
imul
dec
jae
push
mov
rolb
mov
arpl
faddl
jge
clc
xchg
jno
cmc
int3
dec
pop
dec
push
add
je
jae
jae
gs
cmpsl
rol
mov
mov
das
jne
int
test
iret
in
xchg
into
lea
jno
mov
js
cltd
les
xchg
mov
fidivrl
sbb
ja
adc
lods
out
scas
dec
adc
lock
mov
popf
sbb
or
cmp
mov
sbb
jns
out
in
dec
cs
sqrtps
pop
sub
add
pop
mov
lods
inc
test
add
stos
lds
iret
push
sti
negb
in
aam
scas
je
or
pop
mov
xchg
cmc
xor
mov
cmpsb
jae
push
and
imul
test
gs
ret
lock
stos
mov
dec
dec
xchg
fcoms
sbb
cmpsb
sbb
sub
cld
sbb
daa
insl
or
lock
mov
movsb
xchg
lret
outsl
in
outsb
sbb
ret
push
add
xchg
pop
or
cmp
cltd
test
pop
lds
inc
fldt
xchg
popa
repz
push
sbb
insl
jecxz
arpl
in
jge
mov
or
and
imul
mov
mov
inc
jmp
imul
pop
mov
iret
lock
icebp
push
jns
mov
out
js
mov
lods
or
jae
push
out
cli
xor
sbb
ss
mov
ljmp
stc
jae
lea
jnp
daa
mov
mov
push
mov
mov
divb
das
add
ret
inc
out
dec
cmpsl
mov
mov
leave
repnz
push
push
pusha
je
adcl
fistpll
icebp
stc
frstor
push
inc
inc
repz
cwtl
sub
adc
add
fnstsw
sbb
pop
pop
jo
jb
cmpsb
inc
std
inc
rcll
cmpsl
test
dec
inc
cltd
fwait
push
test
lahf
sbb
gs
mov
and
adc
nop
ds
mov
and
and
push
rcrb
pop
push
xchg
lahf
cmp
pop
jl
and
in
add
popa
add
xchg
js
xchg
test
loope
fadd
cmpsl
pop
jo
ret
ljmp
mov
xorl
sub
mov
call
ret
dec
test
bound
pushf
sub
aad
pop
push
pop
in
sahf
add
cwtl
bound
imul
xchg
jg
jp
xchg
xor
movb
ret
xchg
movsb
mov
mov
cmp
je
mov
mov
or
cmpsb
jae
fisubrs
sub
sar
sub
jne
inc
scas
xchg
mov
push
cmp
clc
xchg
fs
lahf
sbb
xchg
sbb
out
mov
adc
mov
xor
jno
cltd
mov
jge
push
test
stos
sub
paddq
push
icebp
rcrl
lretw
fisubs
mov
int
shlb
mov
xlat
cmpb
loop
inc
sbb
sar
and
add
push
divb
scas
or
xchg
jl
dec
jecxz
jp
jno
std
pop
vpmacssww
adc
aaa
jg
mov
fstpt
mov
sub
jmp
cmp
dec
jl
mov
mov
mov
sub
pop
mov
ljmp
inc
in
loope
inc
cltd
xchg
jg
xor
push
daa
test
xlat
pushf
sbb
test
sbb
xlat
dec
in
adc
pop
enter
cmp
adc
outsb
xor
jns
mov
sub
pop
or
cmc
inc
movsb
mov
dec
push
push
xchg
add
jb
sub
mov
push
adc
adc
sahf
xchg
adc
pop
sar
push
adc
and
mov
cwtl
shrl
lea
and
adc
lods
fdiv
insl
test
or
mov
test
icebp
lock
sahf
sbb
xchg
stos
or
sbb
xchg
and
jno
mov
nop
xchg
lods
inc
push
cmp
jecxz
lea
lods
pop
sbb
mov
and
jp
dec
xchg
xor
inc
xor
movl
scas
or
xor
stos
ljmp
sub
xor
loope
xchg
xor
int
mov
es
jnp
adc
push
das
data16
hlt
mov
cli
iret
jl
sahf
adc
inc
mov
loop
push
add
out
push
ret
sahf
sahf
call
mov
int3
sbb
jg
add
mov
push
call
das
sahf
cs
or
cwtl
mov
stos
mov
sbb
jecxz
push
jmp
and
inc
push
rclb
push
xchg
das
mov
xchg
and
arpl
sbb
push
or
imul
aaa
adc
arpl
daa
insb
bound
and
cmp
scas
sub
dec
incl
or
xchg
int
test
adc
ret
lds
enter
lret
mov
and
mov
cmp
add
pop
mov
or
jle
and
pop
outsl
and
fmul
sub
test
add
adc
sbb
mov
sub
inc
mov
cmp
ss
lret
or
movsl
loope
inc
mulb
int
mov
inc
pusha
xor
sub
add
push
push
iret
push
sbb
jnp
arpl
test
out
fcomps
jmp
xor
mov
roll
rol
or
cli
adc
movsb
inc
adc
cwtl
movsl
lret
or
lahf
aaa
jno
push
ss
bound
setg
iret
cmpl
jno
jno
xchg
mov
adcb
gs
test
add
js
fdivr
xor
and
xchg
jo
pushf
jno
das
jno
scas
or
dec
sbb
ja
lcall
andb
dec
xchg
pop
in
lret
enter
sbb
pop
arpl
lea
gs
mov
sbb
jecxz
jb
leave
xor
xchg
enter
popl
adc
mov
jge
ja
mov
ja
js
jne
add
jbe
js
repz
pop
push
adc
cwtl
lret
mov
mov
ss
jp
mov
mov
mov
xchg
popl
and
xor
imul
movntps
pop
pushf
in
cld
sbb
xchg
arpl
out
frstor
inc
loope
or
inc
jbe
icebp
fmul
sbb
test
outsl
lret
sbb
shll
mov
add
or
and
cmp
in
mov
jns
jle
outsb
popf
movsl
push
or
cmpsb
mov
dec
mov
fwait
mov
gs
daa
mov
xor
jae
jl
aam
das
out
pop
and
dec
adc
enter
popf
and
mov
mov
mov
inc
int
loopne
or
push
movsb
arpl
out
sbb
icebp
out
or
jp
pop
aaa
aam
scas
mov
inc
imul
fwait
test
dec
mov
imul
and
adc
mov
rolb
stos
rcrl
std
inc
shll
call
jnp
leave
or
imul
mov
sbb
sbb
in
push
mov
sbb
xchg
pop
jne
fsub
push
adc
int3
cli
in
jae
dec
xchg
out
iret
xchg
nop
add
push
imul
inc
sub
cmpb
xchg
ficomps
mov
pop
ficomps
inc
aas
cmp
or
out
pop
rcrl
int
jmp
add
jge
xchg
dec
cmp
xchg
pushf
nop
je
loopne
dec
push
int3
iret
dec
pop
mov
hlt
xchg
push
push
jl
and
pusha
or
lock
shl
mov
cmp
mov
lcall
sarb
stc
fistps
cwtl
cmp
sbb
mov
rorb
xchg
jo
or
repz
outsb
filds
mov
pop
cmp
lret
cmp
test
into
flds
jmp
dec
jmp
mov
ljmp
sub
les
mov
push
leave
or
popa
movsb
scas
jp
mov
scas
fucom
dec
adc
enter
dec
push
lret
or
push
mov
outsb
add
mov
fcoml
push
icebp
repz
lods
xchg
and
pushf
mov
ss
jecxz
mov
pop
inc
xchg
sarl
hlt
xchg
xchg
addb
xor
icebp
nop
push
popf
loopne
movsb
push
jmp
out
rol
pop
loop
inc
fcompl
pop
sar
sbb
dec
sti
sub
cmp
pop
scas
js
fdivr
pop
xchg
pop
insb
mov
movsl
jp
test
mov
cmp
pop
mov
out
js
mov
push
xchg
call
inc
cmp
aas
test
or
xchg
mov
dec
cmp
mov
or
mov
rclb
nop
or
sub
mov
xchg
add
cmp
popf
and
pop
mov
jb
test
add
scas
stc
jne
das
or
adc
cltd
call
mov
sub
mov
and
add
repz
xor
mov
xchg
push
mov
dec
test
cmp
push
jle
mov
mov
sahf
sti
cmp
sahf
ja
popa
push
pop
sbb
pop
sub
sarb
ljmp
test
rorb
leave
mov
cmpsl
outsl
hlt
neg
bound
in
xchg
rclb
fisttpll
inc
mov
sarb
lea
imul
mov
pusha
daa
scas
int
jmp
ss
scas
stos
jmp
sahf
int
fcomp
rorb
clc
jp
ljmp
ja
or
xor
lds
inc
adc
rcr
das
call
shr
das
cwtl
mov
adc
int
mov
push
lock
jbe
cli
fnstsw
insl
xor
cmp
xlat
fwait
jg
loopne
outsl
fwait
cld
xor
test
pusha
shrl
mov
jo
push
pop
add
mov
mov
sub
rcll
aas
jl
mov
cmp
sub
shl
push
fsubrl
xor
jbe
sub
pop
aad
sbb
loopne
es
imul
mov
xor
mov
test
sub
into
in
pop
in
ljmp
xor
pusha
shl
outsl
sbb
dec
in
xchg
inc
std
adc
sbb
dec
jge
popf
cmc
fsubs
fiadds
dec
shr
mov
push
sbb
cmp
pop
out
or
int3
xchg
addr16
aam
pop
loopne
and
or
scas
enter
adc
outsb
sbbb
loop
cwtl
mov
adc
pop
mov
cmp
sarl
pop
dec
adc
dec
inc
bound
push
lods
cmp
js
stc
sbb
adc
mov
addr16
xor
stos
aad
pop
mov
sbb
in
xorb
xor
xchg
mov
pop
jg
dec
cmp
pop
xchg
sti
sbb
sbb
test
xor
fs
cmpsb
or
insl
pop
mov
add
pop
aaa
and
lods
xor
jle
scas
out
aad
inc
ret
xlat
and
jo
test
mov
lcall
cmp
popf
loop
or
inc
pushf
pop
xor
jp
add
fmuls
lret
mov
mov
xchg
popa
pop
leave
in
insb
shrl
mov
mov
dec
xor
cmpsb
out
sub
das
mov
jnp
push
cmpl
dec
rorl
dec
in
cwtl
add
test
push
daa
fincstp
jp
or
sahf
sbb
loop
in
pushf
mov
clc
insb
shld
lea
arpl
int3
aam
mov
dec
nop
xchg
movsl
pop
jle
inc
and
arpl
add
subb
ljmp
aad
hlt
sahf
jge
sahf
enter
jmp
jbe
jb
mov
shll
sbb
jg
leave
popa
sub
jo
xlat
inc
add
cli
add
insb
loopne
inc
lahf
jle
les
add
fiadds
xor
cmc
lahf
pop
mov
cltd
shrl
fidivrl
lods
jns
je
mov
fistpll
cld
push
mov
cs
ja
sub
mov
bound
jg
aad
fmul
and
and
pop
rcll
cltd
aad
push
roll
mov
in
subl
arpl
fisubrl
ror
cld
into
stc
mov
push
out
xor
mov
jmp
vpmaxub
daa
arpl
scas
fcompl
fidivs
adc
mov
add
mov
cltd
stc
shl
jp
popf
call
cmpsb
push
push
arpl
mov
cmp
mov
in
xchg
cmpsb
cmpsb
mov
rcrl
cmpb
sti
rcll
ss
pop
dec
nop
subb
test
xor
xchg
loope
fcmovbe
sbb
fbld
mov
call
xchg
pop
inc
jmp
ds
loope
sub
inc
aam
roll
in
loope
js
scas
inc
xor
cmpsl
cs
mov
sub
add
cmp
js
jp
xlat
data16
jne
jns
add
js
lcall
les
jns
jmp
push
xchg
inc
pop
test
push
push
call
jle
data16
jno
hlt
cmp
arpl
jmp
push
pop
push
aas
clc
das
dec
fstpl
xchg
add
adc
addr16
sub
movsl
test
insb
mov
mov
lock
lret
jo
jp
pop
mov
js
push
mov
pop
inc
ss
push
xor
loopne
mov
sahf
cmp
lds
or
push
xor
pusha
call
scas
adc
cwtl
jmp
test
pop
push
loop
sub
les
push
pop
inc
lcall
lahf
sub
das
shld
pop
adc
cmp
cmp
cmp
xor
pop
mov
rcl
mov
mov
mov
jbe
and
inc
aas
or
sar
mov
rclb
int3
jno
aad
insb
xor
cli
jbe
jecxz
fdivp
jns
inc
inc
mov
sub
rclb
jae
aam
mov
mov
jnp
movsl
scas
add
stos
or
dec
int
mov
std
fwait
repz
std
adc
xchg
in
cvtpi2ps
notb
mov
pop
les
mov
rcll
push
lods
pop
es
adc
inc
int3
idiv
leave
les
push
out
jmp
in
mov
stos
fsubrl
gs
xor
movsl
inc
ret
xor
movsb
jnp
pop
loop
ja
dec
sbbb
mov
mov
ds
push
es
iret
iret
pop
add
loope
xchg
sbb
iret
dec
pop
hlt
add
pop
fwait
jmp
ljmp
mov
imul
cmc
scas
xchg
push
ret
add
cmc
add
xor
sbb
test
lock
mov
cwtl
cltd
dec
xlat
lsl
lahf
mov
xchg
fsubl
jp
fwait
adc
rcrl
shrl
or
in
ja
push
mov
xchg
lock
rcr
or
adc
sbb
mov
add
or
addr16
mov
adc
fdivl
mov
adc
loopne
out
push
add
cltd
in
adc
mov
clc
jmp
cmp
mov
cmpsb
mov
xor
lock
hlt
pop
sbb
adc
jge
cs
push
jbe
xchg
rorl
fs
and
ret
mov
mov
inc
push
mov
push
movsl
cwtl
add
call
loope
scas
and
sbb
xor
push
cwtl
push
clc
xchg
pop
xor
sbb
cwtl
sbb
fs
inc
sbb
and
and
rcrb
jo
in
xchg
and
insl
adc
add
and
pop
ds
mov
cmp
fbstp
cli
sarb
sbb
lea
loope
lds
lods
add
mov
cmpxchg
in
fisubl
add
adc
mov
push
push
decl
mov
sub
push
cli
lods
dec
mov
rclb
cmpsb
or
mov
jge
pop
into
jnp
shrb
mov
jp
popf
mov
jo
inc
into
cmpsl
jge
movb
adc
pusha
adc
mov
sub
int3
jno
rorb
cmp
dec
in
cmp
or
xor
jg
fidivrl
movsb
frstor
enter
mov
pop
pushf
add
enter
or
sbb
repnz
es
sbb
dec
and
repnz
mov
jbe
dec
xor
cs
jl
std
stos
clc
push
arpl
dec
push
sbb
xchg
push
gs
lock
movsb
js
jmp
ficompl
bound
pop
push
xchg
gs
mov
aam
push
jmp
sub
jb
das
xchg
popf
pusha
arpl
sahf
cmp
or
dec
push
mov
stos
rorl
add
xchg
push
int
loop
mov
test
stos
clc
pushl
ljmp
mov
push
push
sahf
das
sbb
push
push
imul
jp
insb
xchg
adc
test
lcall
jecxz
lahf
sub
xlat
pop
inc
aad
pushf
scas
aaa
je
fstps
push
push
mov
stos
jg
and
jle
mov
mov
xor
push
addl
inc
jo
jbe
andl
or
das
out
loope
push
rorl
mov
cmp
loop
jecxz
pop
mov
add
mov
inc
repnz
decb
mov
ljmp
and
mov
sti
sbb
enter
push
hlt
lcall
lds
fidivrl
pusha
sub
sub
cmp
repnz
mov
xor
in
loope
dec
std
loope
sub
push
je
out
dec
test
xchg
xchg
lret
in
gs
inc
lret
sub
nop
or
popf
push
lahf
xor
icebp
imul
sti
jae
lret
aaa
or
xchg
mov
inc
ss
cld
dec
mov
xchg
lahf
dec
pop
mov
rcrl
or
into
cs
xchg
inc
adc
repz
jl
jno
jg
sub
sub
call
adcl
dec
adc
movsb
mov
stc
shrb
or
stos
jmp
mov
sub
lds
test
jl
iret
xor
jmp
insb
std
xor
xor
fnstenv
insb
mov
lea
lock
lds
mov
data16
mov
shll
xor
int3
add
mov
cmp
pop
repz
add
enter
je
mov
and
and
ret
fsubl
jle
iret
mov
jp
or
or
and
out
movsl
repz
mov
inc
je
inc
jns
aad
jg
pop
leave
dec
enter
xor
hlt
dec
das
in
fnstenv
mov
jle
insl
cmp
les
mov
aas
push
and
xchg
pusha
clc
inc
inc
push
fistpl
jmp
mov
fadd
mov
nop
cmp
repnz
mov
mov
pop
movsb
test
mov
xor
push
loopne
iret
sbb
stc
out
pop
push
xchg
pop
mov
sub
and
loope
lcall
adc
arpl
lcall
cmp
std
outsl
mov
scas
xor
sbb
xor
or
mov
ret
fldl
xchg
jecxz
scas
jmp
lcall
jne
repnz
push
movsl
push
xchg
stos
cmc
roll
lret
pop
jns
pop
push
cmp
mov
or
xor
xchg
sub
sbb
fs
push
and
mov
jno
call
mov
fs
mov
xor
test
add
dec
push
jno
popa
insb
sbb
rcll
ljmp
shlb
outsb
ja
daa
push
mov
cmpsl
sbb
lods
pop
or
push
push
bound
jg
ffreep
push
xchg
jnp
ss
mov
fcoml
mov
popf
cli
jmp
in
enter
xlat
mov
push
je
pop
xchg
add
lahf
push
push
shld
imul
and
ret
data16
push
mov
fnstcw
jp
pop
xchg
dec
call
xchg
outsb
jnp
test
pop
and
in
fadd
pop
rcll
lcall
jae
int
add
outsb
fildl
adc
daa
stos
pop
call
dec
sbb
cmp
add
jae
insl
or
sbb
or
fcmove
and
mov
jge
lock
out
in
jle
repz
or
jle
sbb
arpl
fsubrs
test
jmp
pop
aad
xchg
mov
push
loopne
lret
sub
or
add
ficoms
xor
fidivs
pop
pushl
jecxz
push
add
cmp
je
jecxz
mov
adc
add
mov
xchg
push
in
popf
int3
ljmp
nop
inc
outsl
or
sub
jne
aam
fmuls
in
sub
imul
and
jbe
testb
lret
mov
and
push
sub
fsts
bound
rcr
inc
mov
xchg
push
andl
call
adc
push
pop
mov
lods
aaa
adc
fiadds
dec
and
addr16
ret
fimull
insb
xor
jge
aas
in
cmp
jae
lcall
movsb
dec
incl
mov
jnp
outsb
bound
dec
push
add
adcl
lcall
mov
jg
cmp
shrb
shll
rorl
lret
cwtl
push
negb
dec
mov
pop
aad
cmp
dec
dec
roll
inc
cmp
mov
test
and
mov
and
jb
xchg
or
jnp
enter
push
mulb
leave
push
out
cmpsb
or
xchg
push
sub
fcmovu
sbb
lret
bound
lods
pop
insl
xchg
adc
cmpsl
movhps
jo
and
pop
mov
push
lods
sbb
push
movsl
fnsave
mov
pop
xor
inc
push
stos
je
stos
in
jb
out
repnz
and
or
rcrl
and
mov
out
or
sbb
fadds
mov
test
inc
repz
lea
xor
push
adc
stc
or
mov
popa
loop
jp
iret
push
adc
mov
fistps
sbb
mov
test
shrl
xchg
mov
inc
xor
mov
es
xorb
shlb
jo
imul
int
subl
dec
sub
pop
mov
mov
test
dec
mov
into
mov
out
js
ja
cmc
out
shrb
push
add
std
shlb
mov
es
cmp
cmp
inc
lods
ret
loopne
sub
ds
aas
mov
clc
aad
fs
mov
ljmp
das
push
movsb
push
mov
push
aam
ja
dec
cmpsl
mov
mov
xchg
dec
mov
adc
lock
jmp
inc
add
aam
add
call
cmp
and
test
repnz
arpl
fiaddl
fdivrp
and
sub
test
nop
add
pop
rclb
push
pop
out
repz
or
daa
xchg
inc
scas
and
enter
mov
data16
and
mov
push
xor
lds
imul
mov
rcrb
cmp
repnz
pop
nop
or
test
mov
sbb
in
jbe
add
pusha
xor
sahf
pop
xor
icebp
inc
cltd
xchg
cwtl
jbe
jo
mov
or
ret
sbbl
xchg
or
xchg
dec
xor
aad
inc
or
xchg
inc
jo
pop
scas
and
stc
lret
js
test
pop
push
inc
data16
mov
jge
cld
cmpl
fimull
pushf
into
push
lds
rcrb
scas
xchg
pop
jbe
xor
push
push
adc
xchg
test
xor
aaa
or
repz
movsb
add
mov
bound
aaa
inc
mov
nop
ss
fidivrs
dec
mov
pusha
mov
rolb
pushf
lock
movsb
or
inc
lea
repz
jmp
inc
sbb
sub
add
imul
add
sub
push
pushl
mov
jecxz
jnp
or
ret
mov
loope
sahf
xchg
mov
jb
jp
sahf
add
push
pop
ds
inc
xor
in
scas
push
insl
mov
jne
jg
sti
fwait
jmp
jb
test
push
imul
add
pop
scas
adc
push
in
out
mov
xchg
xlat
repz
sub
jp
into
sub
add
or
xchg
shr
scas
sub
sub
nop
jge
mov
sbb
imul
imul
xor
shrb
shl
mov
pop
call
lock
rolb
fistpll
ja
xchg
hlt
cmpsb
cld
mov
jp
and
inc
xchg
fs
rclb
lret
lcall
mov
sbb
jb
push
cld
lret
sub
sbb
pop
stc
inc
xchg
xor
xor
or
push
sub
int
mov
add
push
mov
mov
and
rclb
in
push
out
insb
cmc
cli
rcll
in
push
or
lahf
mov
jne
lock
aad
insb
mov
dec
dec
adc
inc
out
cmc
rorl
int3
das
mov
mov
mov
inc
and
orl
or
cli
int
fisubs
mov
dec
cltd
lds
and
cmp
pop
add
cwtl
testb
jno
inc
fwait
jo
shl
adc
insb
ret
xor
nop
mov
js,pn
cli
das
aad
mov
cmp
xchg
mov
hlt
push
lods
push
data16
jno
xchg
pusha
int3
popf
movsl
pushf
es
jnp
adc
sbb
dec
div
jns
and
jle
adc
lret
mov
jne
movl
in
adcb
adc
inc
push
loop
scas
sbb
pop
insb
lock
sahf
pusha
bound
stos
into
adc
mov
subb
bnd
push
int3
shl
lret
lea
pop
xchg
mov
sarb
add
aaa
cmpsb
bound
sbb
lret
push
outsb
rol
xchg
add
aad
jp
xor
gs
ss
xlat
and
jae
mov
push
xor
sahf
or
cmp
mov
push
push
repnz
mov
ret
inc
xchg
roll
jge
mov
ja
mov
cmc
inc
pop
clc
shll
lcall
fsubl
mov
popa
jo
inc
rol
xchg
out
lahf
push
mov
mov
into
lock
cmovae
out
pop
inc
mov
or
rolb
dec
push
addl
dec
and
jmp
or
fwait
in
call
imul
pop
push
pop
mov
sub
ss
mov
cmp
fsts
sarb
lea
jmp
xchg
aad
jp
pop
cli
loop
lcall
and
pop
pop
sub
and
mov
jmp
jne
enter
sbb
inc
loop
outsl
out
roll
xchg
cld
xor
ds
jle
test
jno
shlb
imul
xorb
addr16
inc
adc
jo
pusha
cli
sbb
or
mov
mov
adc
movsb
fnsave
outsb
cmp
dec
movsb
ret
arpl
xchg
addr16
ret
imul
aad
les
sub
pop
cmp
inc
mov
adcb
push
sbb
sub
mov
xchg
pop
repnz
push
jmp
mov
sub
call
test
cs
outsb
add
pop
jg
or
fs
mov
inc
sub
xchg
adc
lcall
mov
fdivrl
dec
and
xor
push
movsb
mov
jp
xor
mov
xchg
or
inc
clc
mov
push
into
mov
push
fs
les
jmp
int
add
out
sub
push
xchg
jns
xchg
jecxz
lods
decb
inc
pop
pop
out
xchg
nop
orb
orb
add
roll
mov
into
mov
nop
cmc
jl
sbb
inc
push
cwtl
adc
in
xor
in
jmp
fwait
add
pop
mov
sbb
inc
cwtl
mov
outsl
pop
mov
arpl
xlat
mov
adc
sbb
mov
fstps
ret
adc
and
in
or
mov
arpl
pop
leave
pop
and
jge
mov
adc
jmp
fbld
sti
dec
imul
push
sub
in
jl
pop
lods
sub
push
loop
pop
and
int3
gs
or
cli
int
mov
pop
aaa
xchg
out
push
push
fwait
std
mov
xchg
jo
int
sub
enter
pushf
clc
nop
sub
enter
mov
add
dec
mov
push
fxam
push
jnp
cmp
or
mov
lcall
cmc
std
and
shr
aad
jle
xor
mov
arpl
and
mov
mov
cmpb
xchg
movsb
testb
loope
bound
sbb
cmp
iret
dec
add
xchg
incl
sub
loopne
aam
jg
ja
insb
out
mov
xor
ret
adc
push
ror
jp
cmp
push
ficomps
outsb
cmp
dec
shl
jmp
stc
jp
xor
dec
mov
inc
add
outsl
mov
loope
jno
push
dec
shlb
stos
negb
fdivrs
dec
imul
jne
push
lcall
int3
imul
cmp
jmp
jae
push
pushf
test
or
add
loop
fs
xor
xor
and
mov
icebp
inc
sbb
insb
popf
lds
push
rcr
clc
cli
scas
sub
push
cwtl
push
jne
repnz
mov
push
bound
or
sbb
mov
or
stos
mov
adc
or
es
pop
and
insb
out
lret
mov
insl
ret
test
cmp
push
inc
es
xor
add
mov
sbb
xor
fwait
ja
xchg
mov
test
test
iret
sbb
inc
test
xor
or
inc
or
mov
mov
push
cltd
sbb
in
imul
lea
add
adc
test
incl
lcall
mov
sub
push
les
dec
mov
rcrl
int
sbbl
jns
pop
imul
lock
repnz
xchg
fdivrl
out
pusha
sub
jnp
jle
jmp
mov
call
das
idivb
dec
test
or
adcl
mov
mov
outsl
scas
push
pop
pop
sar
sbb
test
out
push
loop
xchg
lods
bound
rcrl
pop
fwait
cmp
jp
cmp
xchg
push
or
xchg
imul
inc
dec
lods
scas
dec
push
jp
icebp
jb
push
xchg
adc
or
daa
adc
lahf
xchg
cmp
test
cwtl
daa
lock
xchg
mov
faddl
inc
sbb
out
pop
jns
enter
aam
cmpsb
movsb
adc
fs
and
push
sub
or
pop
aam
mov
and
xchg
cmp
ja
add
add
cld
sbb
jb
pop
sub
call
push
cvtps2pd
imul
adc
xchg
inc
xchg
lods
arpl
pop
call
mov
push
dec
cmp
sbb
and
fwait
sbb
jb
out
fmuls
popf
mov
cmpsb
pand
ret
cmp
cli
ret
push
mov
gs
push
mov
adc
mov
sbb
jbe
das
stos
push
insb
or
inc
dec
inc
or
test
loopne
cmpsb
sub
sbb
dec
dec
rcr
das
imul
in
add
pop
and
mov
aam
addl
les
push
jne
pop
pop
mov
dec
dec
pop
xlat
push
or
scas
bound
mov
add
add
shrl
adc
mov
out
mov
lahf
int
icebp
test
pop
sbb
jno
pop
scas
lods
test
mov
mov
les
cmc
movaps
pop
inc
fwait
cmp
in
and
jo
and
mov
xor
in
ror
add
dec
into
pop
push
sbb
std
mov
dec
pop
negl
leave
in
call
fwait
cmc
in
fstpt
xor
mov
movsl
adc
incb
pop
add
mov
in
cmpsl
mov
enter
repz
int
xchg
mov
pop
pop
xor
loope
leave
sub
pop
xchg
incl
call
addr16
ss
movsb
jo
mov
pop
popa
jp
adc
jmp
xor
lret
js
sbb
xchg
cmp
stc
mov
cmp
jo
cmp
add
test
lods
add
stc
popf
or
pop
jnp
stos
dec
shrb
lods
aam
xorb
fwait
addr16
or
filds
pop
inc
xorl
xlat
imul
pop
add
pop
mov
repnz
push
aam
pop
ds
or
dec
ss
cmpl
inc
push
and
add
ja
or
xchg
adc
pusha
push
daa
mov
fidivl
sub
jmp
jo
add
dec
push
mov
mov
lock
adcb
jae
shl
adc
arpl
inc
mov
sbb
inc
jno
sub
ds
pop
arpl
xchg
pop
scas
sarb
mov
sub
xchg
sbb
aas
mov
jo
xchg
scas
mov
push
xchg
adc
data16
data16
into
stc
mov
lods
inc
outsl
out
insb
cld
lret
cmpsb
lahf
lret
gs
mov
dec
sbb
cmpsb
loop
inc
sahf
jge
inc
cli
sahf
int
dec
lock
call
in
lahf
fstps
rcl
fbld
xchg
out
jmp
out
add
mov
rcll
aad
je
sbb
push
test
mov
mov
mov
jecxz
xchg
lods
out
xchg
jecxz
out
lods
repz
insl
sub
push
clc
xlat
loope
xchg
pop
inc
pusha
mov
imul
pop
jl
sub
les
es
cmp
ret
data16
data16
stc
and
jge
cmp
pop
push
ljmp
jg
loop
cmpsl
add
cmp
mov
aaa
xorb
aas
aam
movsl
mov
jne
jg
inc
ja
cs
adc
ret
daa
lret
xor
lods
clc
rclb
push
xchg
and
jbe
bound
add
in
xchg
call
cmp
pop
cld
negb
out
into
jbe
fs
xchg
pop
in
mov
out
stos
mov
and
popa
adc
cmp
xor
mov
aam
add
gs
test
push
cmp
xor
cwtl
mov
push
mov
cmp
pop
xchg
mov
nop
pop
sar
mov
mov
lock
dec
push
gs
ret
xchg
aad
subl
pop
dec
sbb
rclb
sbb
stc
test
dec
sub
cmp
add
aas
xchg
xor
test
aaa
mov
push
inc
les
pop
mov
mov
pop
sahf
or
cmpsl
mov
mov
pop
ss
les
add
pop
cmpsb
dec
xor
jnp
mov
lods
jmp
pop
fbstp
adc
cmp
sbb
xchg
sub
cmc
outsl
mov
iret
xchg
mov
mov
and
int
mov
inc
cs
int3
out
dec
dec
mov
push
aad
mov
jno
pop
mov
bound
mov
orb
push
fsubs
xchg
inc
xchg
jle
aaa
mov
mov
nop
cltd
sub
and
cmp
lds
sub
jne
lods
das
xor
outsl
shrl
shlb
inc
daa
pop
add
sti
out
add
pop
or
std
mov
xchg
sahf
pop
inc
pop
jne
pop
push
repnz
stc
cmp
xor
ds
addb
pop
mov
or
adc
jecxz
xchg
into
fmuls
mov
pop
push
pop
test
imul
je
gs
cmpsb
fisubs
or
sbb
xchg
negb
inc
pop
jle
push
dec
ljmp
fs
rclb
icebp
rclb
scas
cmp
sub
or
scas
or
pop
popa
sub
nop
addr16
mov
out
pushf
mov
sahf
aad
je
mov
repz
cmp
test
sbb
xor
inc
inc
popa
jmp
es
cli
xchg
mov
popf
and
scas
adc
pop
ljmp
adc
mov
fstl
jg
xor
cmp
sbb
aam
popf
sub
hlt
mov
ja
jle
and
adc
outsl
mov
shll
dec
aaa
xchg
xchg
push
out
push
adc
jo
cs
adc
out
leave
xor
adc
adc
push
pop
mov
movl
xchg
add
addr16
jg
add
pop
test
aas
dec
imul
cltd
cmp
movsl
clc
pop
push
repnz
pop
jb
mov
fisttps
out
pushf
jnp
inc
inc
fcompl
add
pop
or
lret
xor
push
jno
test
and
subps
jnp
add
xlat
inc
out
aam
mov
dec
add
lret
push
cmpsb
decl
or
cmp
enter
dec
dec
mov
loope
sub
sbb
repz
xchg
xlat
mov
lds
arpl
ds
jmp
or
jle
or
gs
cltd
add
cmp
and
adcl
lds
inc
rcr
das
bound
lods
dec
lret
jle
ror
add
pop
add
xor
lret
das
jae
stos
xchg
inc
mov
push
push
lds
lds
into
inc
add
push
outsl
pop
push
pop
xchg
in
jbe
fnstsw
mov
pop
pop
out
pushf
into
and
leave
mov
mov
cmpsl
and
dec
pop
inc
loopne
filds
adc
out
sub
mov
mov
inc
fwait
pusha
movsb
movsb
mov
sbb
add
jecxz
lock
js
not
arpl
or
lcall
mov
loope
je
adc
xchg
jmp
loop
int
mov
mov
adc
sub
or
jb
pop
xchg
sbb
shll
pop
xor
cmp
xchg
gs
xchg
das
jl
in
sbb
jb
ret
jae
mov
ret
jge
hlt
lods
stc
mov
enter
out
arpl
xchg
lret
call
sbbl
mov
test
ret
xor
lret
movsl
fldz
lods
and
sbb
cmp
scas
aad
pop
pop
stos
int
mov
addl
int
cmp
mov
das
loopne
ja
into
sbb
dec
ret
pushf
pop
test
and
fcoml
movsl
adc
cmp
lahf
mov
test
add
mov
ljmp
out
fbstp
xchg
and
addb
adc
or
push
data16
push
dec
fstpl
xchg
xor
test
out
inc
push
xchg
imul
dec
aaa
inc
out
jae
push
mov
xlat
dec
ss
push
jbe
movsb
xor
dec
cmpb
aam
and
int
int
test
jb
jbe
insl
xor
insl
aad
xchg
xchg
cltd
out
inc
sub
stc
mov
mov
mov
push
daa
add
sub
sub
jo
addr16
lret
or
mov
stos
call
mov
out
sarb
sub
out
inc
in
pushf
dec
pop
push
cmpsb
cli
mov
mov
mov
jl
fstpt
sbb
mov
push
fmulp
sub
mov
out
mov
fildll
das
clc
mov
mov
pop
adc
hlt
repnz
xchg
mov
rcrb
cwtl
mov
cmp
mov
dec
jbe
in
xor
push
lcall
dec
insb
sub
shlb
and
mov
sti
cli
xchg
inc
add
fs
insl
inc
xchg
inc
and
ljmp
push
cs
cmp
pop
push
pop
das
mov
xor
xor
xchg
xrelease
sahf
aad
xchg
jp
lret
adc
aad
and
pop
imul
lods
cld
shll
push
orb
stos
push
bswap
lret
xchg
inc
dec
ljmp
lds
test
xor
pusha
jp
insl
dec
add
jecxz
cltd
int
dec
add
push
fcom
pop
xchg
pop
jle
fidivl
dec
scas
lock
jb
enter
jp
or
lds
dec
or
test
lcall
arpl
ja
push
addb
mov
push
push
aam
jp
pushf
cmp
lods
dec
pop
pop
scas
push
dec
or
loop
jle
in
mov
out
and
cld
jbe
mov
movsl
adc
std
push
cs
push
jge
pop
mov
adc
loop
shll
je
rol
dec
push
mov
cmpsl
xor
ljmp
mov
lcall
movsl
mov
adc
pop
and
outsb
push
jbe
xchg
das
inc
addl
add
pop
jo
test
shrl
and
add
sbb
daa
mov
pop
inc
loope
xlat
xchg
sbb
mov
sub
clc
aas
nop
aam
testb
movsl
inc
mov
adc
outsl
jne
scas
sub
fmuls
test
iret
xlat
or
lahf
fldt
in
mov
movsb
dec
and
or
inc
jge
rorb
jg
ja
insl
cmp
mov
push
mov
or
pop
in
movsb
push
mov
pop
scas
inc
mov
cmp
into
and
mov
and
lock
test
push
ffreep
rorl
imul
xor
push
and
dec
int3
and
cmp
or
mov
mov
int3
push
dec
push
enter
repnz
lods
inc
xor
sti
fldl
es
lods
inc
orl
rcrb
or
sbb
xchg
mov
outsl
clc
in
lock
shll
cmp
gs
mov
inc
cmp
scas
mov
pop
adc
loop
cmpsb
mov
aam
nop
xchg
sbb
call
mov
inc
ss
out
xchg
leave
add
cltd
jno
out
cmp
mov
cmp
loope
jae
or
scas
js
sbb
pop
movsb
xchg
orb
gs
repz
lahf
jno
loopne
stos
into
mov
ja
dec
jo
test
pop
pusha
call
stc
xlat
pop
and
movsb
es
cmpsl
cmp
mov
xchg
inc
repnz
mov
push
jle
loope
mov
and
mov
addb
lret
mov
aam
mov
int3
sbb
adc
in
in
pusha
je
xor
sbbb
mov
push
fstpl
ljmp
adcb
mov
aad
sub
adc
int
mov
loopne
pushf
inc
jle
add
inc
aad
sub
arpl
lds
lcall
cmp
xchg
aaa
ret
mov
jge
call
jne
lahf
and
repnz
ss
std
bound
push
lret
lods
xchg
fwait
mov
pop
mov
dec
inc
lods
incl
lret
mov
jmp
push
dec
push
xchg
xor
and
pop
data16
mov
or
cli
inc
dec
mov
adc
inc
jb
and
ret
lock
sub
rcrb
lods
shll
xchg
and
jmp
fnstsw
jl
stos
fmull
mov
cli
mov
ror
cmp
in
loope
hlt
int3
cmp
in
repz
jo
pop
fidivl
mov
jo
jmp
add
push
stc
pop
sub
add
int3
add
jge
cmp
and
shll
adc
rol
sarl
mov
fldt
xchg
dec
in
data16
xchg
mov
cli
xor
daa
cmp
and
add
rcrb
jecxz
or
jnp
mov
daa
ss
push
out
push
pop
roll
jecxz
imul
cltd
sbb
leave
test
xchg
cld
inc
fxam
and
jp
xchg
mov
das
negl
push
pop
sahf
jne
push
mov
pop
adc
cltd
es
mov
xchg
pop
inc
and
or
test
sub
mov
xchg
dec
and
or
mov
inc
jmp
stos
inc
mov
pop
sbb
jle
cmp
inc
mov
xchg
jno
in
jno
jno
inc
repnz
xor
ljmp
add
imull
adcb
or
lea
call
test
mul
scas
xor
lds
adc
pop
or
mov
cmp
sub
xor
imul
jecxz
push
jecxz
into
xchg
inc
lock
mov
imul
push
imul
cmovle
jle
push
pop
fs
mov
mov
mov
jbe
rclb
mov
push
sbb
and
add
sbb
lahf
mov
les
pop
mov
movsl
jl
rcl
ja
in
fdivs
push
aaa
inc
jg
add
cmc
mov
rolb
add
cs
stc
arpl
out
out
shrb
cli
adc
cltd
das
or
es
bound
pop
push
pop
insb
jmp
aad
xchg
and
aas
enter
jecxz
loop
jo
xchg
lods
sub
sbb
cmp
push
push
enter
pusha
sbb
jnp
push
shl
lret
les
repz
mov
xor
sub
pop
pop
leave
dec
or
jns
stc
cmp
das
or
jbe
sbb
lods
jmp
nop
and
mov
push
in
cmc
mov
imulb
lds
sbb
and
inc
es
out
adc
loopne
mull
mov
repnz
scas
dec
sbb
mov
mov
lret
push
push
out
jg
hlt
ror
decb
gs
xor
sub
inc
jo
add
mov
mov
ljmp
fwait
cli
lock
inc
aam
bound
mov
jb
add
adcl
pop
loopne
outsb
inc
add
cmp
imul
push
roll
mov
sub
jne
mov
jbe
xchg
adc
inc
jp
aaa
cmp
out
hlt
mov
neg
xchg
jge
or
lahf
mov
push
dec
shrl
nop
dec
call
out
sub
push
pushf
scas
arpl
jecxz
dec
orb
clc
push
in
icebp
mov
mov
ss
mov
mov
pop
nop
aaa
adc
jg
les
sub
push
pop
aam
in
pop
pop
dec
lock
imul
mov
push
xor
gs
jmp
adc
gs
pop
inc
scas
add
aam
outsl
jge
inc
cmp
jbe
call
sahf
mov
dec
movsl
cld
les
les
dec
shrl
mov
mov
xchg
xchg
orl
and
add
push
ljmp
xchg
clc
mov
push
das
pushf
pop
call
push
jns
dec
xor
cmpsb
or
decl
pmaxub
dec
cmp
mov
sbb
lods
loop
mov
jg
mov
sti
enter
stos
mov
cmp
rorl
xor
pop
ljmp
push
incl
or
jnp
pop
fcomps
scas
sti
fnstcw
mov
xchg
shr
pushf
add
adc
push
decl
scas
cmc
xor
mov
ret
std
aad
in
cld
ret
rolb
adc
pusha
jle
or
in
mov
std
jae
mov
push
call
int3
je
mov
pop
xchg
jns
repnz
loopne
push
dec
jp
add
sub
xchg
addb
pop
xchg
adc
xchg
push
push
in
inc
ret
out
mov
push
loope
mov
adc
jmp
outsb
mov
out
or
movsl
pop
js
bound
jne
hlt
add
lret
dec
pop
mov
pop
add
mov
push
shrb
neg
aad
jnp
cmpsl
es
inc
movsb
addr16
xchg
push
pop
aaa
pop
ljmp
jmp
test
cmpsb
insb
mov
loope
out
sbb
sbb
ds
pop
iret
push
mov
jmp
jecxz
cs
xor
mov
aam
and
push
or
insl
xchg
stos
pop
fdivl
inc
cmpsl
cli
jo
roll
movsb
bound
call
outsb
sub
loop
mov
stos
push
into
fadds
imul
sub
call
aad
dec
push
and
jmp
hlt
lds
mov
push
rclb
nop
cmp
and
mov
in
or
sub
inc
inc
dec
cmpl
adc
push
in
mov
sub
mov
fidivrl
dec
loop
jecxz
xchg
push
jno
mov
push
jp
ljmp
movb
jns
and
sub
pop
ds
push
stos
mov
repnz
mov
test
lock
mov
jp
push
divl
loope
lahf
and
imul
sarb
mov
jb
sti
outsb
aad
cwtl
scas
dec
pop
xor
xor
mov
out
xor
nop
pop
mov
and
out
mov
pop
sbb
in
daa
pusha
ds
inc
scas
push
and
mov
jmp
xchg
test
dec
lea
out
adc
std
scas
stos
mov
push
cld
pop
inc
push
jbe
add
xchg
insb
xchg
stos
repnz
xor
fidivrl
lahf
dec
rorl
insb
sub
xor
into
push
jno
push
push
clc
out
fisttps
sbb
mov
inc
adc
or
into
dec
jbe
scas
cltd
cmpsl
ffreep
pop
subl
repnz
sub
dec
adc
xor
stc
sahf
je
leave
mov
arpl
or
addr16
cmp
pop
jl
inc
cmp
stos
add
or
mov
test
test
pusha
mov
dec
mov
mov
push
pop
test
sbb
or
cmp
lock
notl
sbb
test
lds
inc
mov
daa
out
sbb
or
iret
lret
adc
jno
gs
dec
mov
inc
and
sbb
pop
add
mov
shrl
les
push
je
sub
mov
int
mov
jg
or
imul
rclb
push
out
bound
cmpsl
push
clc
cmp
leave
mov
pushf
push
xor
in
pop
test
jns
inc
fs
adc
pop
lret
stc
and
popa
and
int
mov
bound
adc
lock
mov
std
out
nop
xchg
jns
pop
sbb
cwtl
in
sahf
mov
loopne
xor
sbb
push
inc
pop
lods
cmpsl
mov
lcall
pop
xlat
lret
pop
sbbl
mov
loopne
cmpsb
adc
and
mov
mov
ret
adc
xor
xchg
add
imul
popf
test
jne
dec
cltd
adc
dec
cs
in
adc
sbb
xlat
jno
cmc
mov
mov
lods
out
aad
insb
mov
add
jns
jne
adc
add
arpl
popf
test
xor
mov
incl
mov
lods
shlb
jo
fisttps
jecxz
out
mov
jo
or
inc
push
xchg
clc
sbb
sub
lahf
push
push
mov
cld
cli
cmp
arpl
rcrl
test
sbb
bound
pop
ja
cmpb
cmpsl
pop
sbbl
aaa
sub
xor
loop
lret
imul
pop
sti
icebp
adc
mov
jnp
jl
xor
mov
fidivrl
xchg
clc
addr16
insb
xor
sub
leave
out
andb
mov
divb
push
repnz
mov
stos
inc
sbb
xchg
xor
jne
das
in
cmp
adc
sub
or
mov
js
test
add
test
jns
jl
mov
mov
push
inc
or
cmp
test
stc
adc
testl
inc
bound
fildl
test
loop
rorl
jbe
testl
mov
adc
pop
mov
rorb
movsb
mov
xor
call
fisttps
inc
cmp
ret
insl
adcb
xor
sbb
pop
xor
or
pushf
sarb
xlat
imul
mul
mov
jecxz
add
pop
dec
sub
sbb
and
lods
addr16
adc
icebp
mov
insl
pop
xor
mov
adc
aas
lds
inc
add
mov
add
shrb
mov
push
pop
mov
inc
insl
pop
fsubs
pop
scas
jle
cmp
jg
xchg
or
add
outsl
pop
test
int3
lods
or
test
cmp
pop
mov
add
jg
xchg
in
sbb
or
gs
dec
ret
iret
cmp
push
mov
rcrb
xor
shrb
inc
sub
inc
xor
out
movsl
enter
fdivl
jbe
out
movsl
repnz
push
out
ror
or
mov
xor
out
and
inc
pop
enter
push
flds
mov
push
andb
xchg
mov
lret
mov
pop
test
mov
scas
das
mov
es
adc
ljmp
adc
push
mov
xchg
stos
andl
movsb
in
adc
jl
sbb
mov
mov
adc
test
rcrl
test
pop
jne
iret
ss
sar
pop
cmp
cmp
scas
jmp
arpl
and
nop
movsl
scas
and
scas
scas
jbe
ljmp
repnz
inc
in
xchg
add
inc
in
mov
sbb
pop
outsl
jp
pop
xchg
sub
pop
dec
jp
jno
in
mov
and
jns
test
repnz
das
xchg
adc
and
cmp
sub
mov
stos
pop
loopne
adc
add
pop
fnstsw
ret
into
push
leave
cmp
ljmp
std
xchg
scas
cmp
imulb
sub
push
pop
sbb
loope
in
bound
into
inc
jle
or
insl
scas
ficompl
div
scas
nop
ficoml
xchg
pop
or
pop
xchg
stc
xchg
sub
xchg
imull
mov
push
aaa
fst
jle
push
sahf
xor
in
dec
mov
into
sbb
cltd
aad
pop
sahf
mov
cld
jne
mul
fistpll
hlt
dec
in
mov
in
cmpl
xchg
dec
jge
push
xor
sti
sarb
or
pop
repnz
mov
pusha
mov
inc
mov
cmp
and
xor
mov
div
imul
jno
dec
ljmp
pop
pop
arpl
dec
shll
inc
add
xchg
cmpsl
scas
jmp
mov
enter
xchg
push
scas
aad
es
mov
and
xor
ret
mov
dec
sbb
aad
jl
imul
cli
mov
fnstsw
mov
scas
xor
xchg
sub
sub
inc
in
push
pop
jp
sarl
pop
lahf
push
bound
mov
jp
scas
push
iret
rorl
dec
lods
sbb
hlt
dec
pop
xor
dec
lods
jmp
mov
sbb
fdivrl
arpl
sbb
bound
add
cmpsb
in
add
mov
sub
cmp
fadds
and
xchg
push
repz
lds
sar
shl
fiadds
int
jno
and
cs
ret
stc
jnp
je
adc
push
shl
paddsw
mov
xchg
lcall
je
pop
jb
adc
daa
and
enter
loope
mov
imul
lret
popf
fisttps
cwtl
sub
iret
int3
push
jmp
ja
mulb
mov
and
clc
xchg
mov
in
sbb
jnp
cmpsb
sub
enter
inc
jecxz
add
jno
es
mov
in
mov
popa
shl
push
sbb
divb
adcl
cwtl
jecxz
xchg
or
and
leave
push
fcomp
push
test
movsb
adc
or
push
fs
cld
sbb
pop
mov
sbb
adc
jns
inc
int
mov
mov
outsl
add
mov
inc
stos
and
pushf
pcmpeqb
ljmp
int3
jg
sub
cmp
or
das
or
xchg
mov
xchg
fidivrs
mov
adc
push
mov
fildl
mov
fwait
sbbb
ss
jp
sbb
jo
outsb
ret
int3
ficoml
sbb
lods
push
lods
fmul
inc
mov
sub
stos
jb
movsb
xchg
cmp
pop
mov
mov
ja
call
push
xlat
xchg
adc
fisttpl
xchg
sbb
ret
jno
adc
push
inc
push
add
fstps
cmpxchg
popf
stc
out
subb
cmp
ljmp
movsb
sbb
cwtl
movsl
xchg
cmpsl
push
out
loop
outsl
fidivl
les
int3
jo
and
out
add
shlb
ss
rorb
in
adc
mov
test
ljmp
xchg
add
mov
push
xchg
leave
cld
cmpsb
outsl
or
push
sbb
or
out
shl
or
dec
out
or
sbb
or
subl
xor
adc
push
push
inc
orl
inc
insl
dec
jns
mov
jmp
stos
popf
sbb
jo
cmp
leave
xor
jae
inc
jge
lods
ss
sub
push
and
ret
cltd
adc
cli
inc
and
xchg
gs
call
cmp
push
stc
sbb
mov
jl
outsb
dec
popa
lcall
nop
pop
test
inc
enter
cld
mov
push
fs
out
xor
jmp
je
lods
call
push
movsl
and
int
aas
les
xchg
jmp
cltd
sub
leave
test
jne
sub
add
mov
repz
sub
jge
and
in
and
or
xchg
mov
mov
push
outsb
insb
jns
movsb
stc
adc
ds
cmc
test
mov
mov
dec
hlt
cld
icebp
std
xchg
mov
xor
jl
test
les
adc
insb
xchg
movsl
pushf
stos
and
xchg
push
imul
fwait
xchg
lods
std
or
pop
lock
xor
pop
icebp
clc
enter
ja
push
loope
pop
sbb
mov
push
aaa
sbb
iret
jle
mov
inc
dec
pop
cmp
in
stos
pop
or
rorb
push
cmp
and
fnstcw
sarl
mov
enter
iret
mov
push
pop
into
cmp
outsb
dec
inc
pop
jne
hlt
popw
xlat
fwait
test
lcall
out
enter
mov
rorl
jmp
mov
mov
dec
jae
call
popa
mov
add
pop
std
mov
mov
or
cmc
xchg
out
fs
mov
subb
int3
jl
jno
adc
sub
in
mov
cmp
push
ficomps
xor
aad
je
cmc
lret
mov
jl
cwtl
mov
mov
and
and
aam
xlat
mov
xchg
popf
pop
push
xlat
insl
push
sub
data16
cld
push
scas
mov
pop
decb
jne
popa
add
movl
les
ret
cmpl
adc
ficoms
sarb
adc
fimuls
mov
mov
and
data16
cmpl
jecxz
test
ror
pop
dec
sahf
bound
sub
repnz
testl
push
xchg
pushf
lret
adc
ds
xor
xchg
cmc
dec
mov
ds
call
mov
adc
icebp
mov
in
cmp
fsubs
mov
sbbb
mov
lods
pop
dec
arpl
imul
xor
subl
andl
idivb
cwtl
mov
push
ret
or
push
aas
xchg
lods
cmp
xor
mov
mov
pop
dec
mov
in
sub
push
pop
mov
xchg
jmp
shrb
sahf
lcall
sub
inc
dec
mov
lock
test
mov
push
das
sti
pop
cli
test
mov
pop
imull
popf
pop
jp
inc
sbb
inc
aaa
or
xchg
fisubrl
adc
loope
mov
test
pusha
les
xor
pop
adc
adcl
ljmp
mov
jl
mov
fwait
out
aad
push
aam
cs
or
fucomp
scas
mov
sub
iret
mov
lret
or
ret
dec
in
in
in
cli
rclb
pushf
or
sbb
pop
jmp
xlat
rorl
into
std
mov
test
xchg
xchg
or
mov
dec
ja
xchg
adc
pop
out
inc
mov
iret
inc
ds
mov
sub
int
aas
popa
xchg
sbb
pop
sub
dec
dec
insb
sbb
jns
daa
push
inc
clc
movsl
adc
cmpsl
mov
pop
pop
test
adc
fstps
imul
jle
fisttpll
and
push
scas
std
mov
xlat
iret
out
insl
push
imul
xlat
ss
cmp
mov
shr
scas
rol
jecxz
xor
ds
stc
mov
movsl
xchg
aad
insl
jnp
mov
ret
icebp
and
cli
sbb
xor
roll
mov
outsb
sarl
jge
pushf
fbstp
lcall
cltd
push
inc
pop
push
into
inc
test
loopne
cmp
adc
mov
jno
ljmp
orb
push
jecxz
scas
fucomip
dec
cmc
add
fwait
out
cmp
or
mov
dec
sbb
scas
daa
hlt
or
dec
xchg
loope
pop
mov
sbb
ret
cmp
cmp
hlt
aas
imul
mov
or
lret
push
outsb
aaa
negb
mov
sub
xchg
idiv
adc
jg
mov
aas
xchg
data16
test
pop
outsl
ret
mov
gs
outsl
mov
nopl
lret
sbb
xchg
movsb
stos
xchg
adc
out
int
rclb
bound
fdivr
push
jae
dec
ds
fs
std
cmpl
lahf
inc
mov
daa
call
pop
clc
push
pop
or
mov
sub
test
iret
mov
jno
rcr
dec
test
pusha
sahf
je
jmp
mov
bound
mov
xchg
shl
lods
sbb
lea
sbb
xor
mov
sub
data16
inc
sub
cmc
sbb
aaa
sbb
popf
outsb
mov
xchg
jge
cmp
jno
cmp
add
lods
mov
fwait
mov
movsl
cltd
add
into
fidivrs
sub
int
pop
insb
cmp
lret
cvtdq2ps
sub
clc
lahf
js
ss
cs
enter
loopne
into
leave
lret
dec
push
inc
punpcklbw
iret
std
adc
mov
fmuls
and
xor
sbb
jnp
add
mov
adc
and
pusha
fwait
lret
in
mov
mov
call
xor
lret
loope
mov
jb
sub
pop
inc
mov
inc
lods
mov
test
mov
dec
adcl
into
pop
shrb
enter
fdivp
xor
dec
xor
mov
sbb
lret
cmp
pop
inc
imul
adc
sub
dec
decb
mov
mov
push
jg
inc
inc
aaa
or
jl
movsl
test
add
ljmp
inc
xchg
ds
aas
sub
fucomip
add
xchg
sbb
in
mov
mov
sub
push
cmc
cmp
rol
and
mov
leave
test
add
push
cmp
stos
mov
in
fists
pop
jle
mov
les
pushf
dec
or
adc
ss
stos
mov
aaa
mov
cltd
sahf
fstpl
jecxz
fistps
aas
imul
dec
dec
mov
push
out
data16
push
or
sti
sbb
add
les
jno
xor
out
testb
outsb
inc
mov
pop
mov
xor
int3
push
and
sub
lcall
adc
push
mov
movsb
sbb
or
bnd
inc
xchg
or
and
dec
mov
sete
or
fwait
mov
clc
xchg
pop
push
cs
mov
cld
in
adc
jb
xchg
add
cld
adc
inc
or
pop
jo
mov
pop
sbb
add
int3
xchg
cld
sbb
daa
jne
outsl
jg
out
cmp
pushf
insb
inc
xchg
in
les
mov
filds
js
ja
in
jbe
iret
int
pop
fmull
rclb
ret
scas
int
pop
xchg
and
xchg
jmp
add
repnz
inc
push
sbbb
lret
ljmp
in
mov
rclb
jl
cmovne
sbb
adc
dec
lcall
xor
fs
ds
stc
add
cmp
inc
pushf
fisttpll
dec
mov
ja
mov
mov
pop
loopne
push
clc
cmp
imul
arpl
out
inc
out
add
adc
cmp
jno
and
js
xor
pop
mov
call
imul
add
shrl
cwtl
push
repnz
or
lea
lds
cwtl
mov
je
mov
mov
sbb
movsb
pop
shll
adc
push
test
fildl
xlat
jecxz
jmp
mov
out
cli
adc
outsb
jno
adc
xlat
out
dec
dec
inc
pop
sbb
or
push
pop
jle
dec
xor
or
sbb
jmp
out
out
mov
jb
fadds
xchg
icebp
or
mov
sub
jno
hlt
push
xor
aam
aad
fdivs
mov
and
lcall
xchg
leave
shrl
jmp
mov
adc
jno
mov
mov
xchg
in
lret
popf
lods
mov
push
out
inc
xor
xchg
or
cmpsl
loopne
mov
mov
jns
out
sbb
mov
sub
xchg
sbbb
scas
lods
call
pop
jge
sbb
dec
mov
mulb
mov
mov
in
loope
sti
mov
sarb
aad
sbb
lods
lds
inc
std
shll
jmp
in
xor
lock
jge
int3
sbbl
das
xchg
inc
inc
jne
or
xchg
divb
cmpsl
and
scas
lret
and
loopne
pop
jecxz
or
imul
pop
iret
and
data16
nop
out
jle
arpl
mov
mov
pop
and
adc
test
push
int3
in
pop
mov
decl
mov
pop
loope
or
push
test
cmpsl
jl
push
adc
push
jae
in
mov
xorl
daa
in
mov
test
shlb
mov
sarl
mov
cmp
dec
ret
rolb
dec
aaa
sub
inc
push
das
inc
test
popf
lret
jmp
ret
fidivl
jne
jmp
push
fs
adc
xchg
std
test
les
sarb
xchg
mov
in
and
inc
push
dec
cmc
inc
out
fists
mov
shll
cmpsl
test
cmpb
movb
popa
and
mov
push
push
cmc
fbld
mov
mov
fcompl
pop
jg
cmc
xor
mov
mov
popf
mov
pushf
cld
inc
rcl
hlt
push
mov
and
mov
cmpsl
imul
arpl
xorl
sub
cs
outsl
mov
push
rorb
adc
ret
test
add
and
data16
add
das
das
or
lret
xor
fwait
cmc
inc
add
dec
lods
xor
push
xor
cld
out
jp
repnz
lock
or
mov
adc
push
sarl
andl
jne
jbe
cmp
cmp
sbb
sbb
mov
ds
or
dec
in
insl
in
and
mov
pop
adc
cmc
nop
sbbl
and
insl
mov
push
lahf
fnstcw
xchg
xchg
ds
ret
pop
pop
adc
stc
ret
xor
pop
inc
mov
xor
out
xor
add
sbb
out
push
jmp
popa
xlat
xchg
mov
jb
cmc
cmp
test
xchg
mov
push
test
ret
test
scas
loopne
mov
mov
sub
fadds
or
add
test
lret
sarl
addr16
ret
add
inc
std
pop
push
je
mov
mov
push
dec
jecxz
lods
pop
hlt
cmc
shrb
idivl
and
jnp
push
cmp
repnz
or
lods
outsl
scas
jae
sub
mov
loop
xor
in
mov
pop
pop
xchg
lret
sbb
adc
xchg
dec
pop
jl
add
pop
mov
sub
cmpsl
fdivs
xor
daa
xlat
cld
aaa
cmpsl
ret
cmp
sti
rcrb
push
aaa
cmpsb
ljmp
fs
popf
and
sub
je
add
xchg
xor
inc
fwait
push
cltd
push
jp
mov
jmp
lcall
aam
inc
cmp
call
dec
fisttps
fwait
das
sarb
sub
push
sub
pop
and
mov
xchg
push
inc
dec
repnz
pop
js
mov
gs
sub
insb
subb
mov
les
mov
mov
inc
mov
xor
sbb
lret
pop
fstps
aam
pop
jmp
inc
xchg
aas
jb
cmp
ss
aad
inc
ss
inc
testl
mov
or
hlt
xor
add
push
push
inc
test
sbb
add
das
out
in
into
pop
add
fdivs
and
cld
out
and
mov
in
inc
sbb
ss
insb
and
lcall
mov
inc
jecxz
cmp
jb
aam
cli
test
mov
inc
pop
ret
mov
mov
inc
pop
aad
into
adc
std
int3
and
adc
inc
xchg
xchg
sbb
fimuls
adc
or
inc
inc
sbb
aam
jae
and
push
pop
mov
das
aad
cmp
mov
push
inc
rcl
mov
adc
iret
pop
push
pop
xchg
mov
lock
scas
in
das
fs
xchg
stos
mov
decl
sbb
dec
xchg
jns
xchg
movsb
lret
and
add
gs
adc
pop
aaa
shlb
rcll
icebp
jns
js
std
dec
imul
ljmp
cltd
notb
ficomps
shrb
fdivrp
mov
subb
loope
andb
push
add
je
fldt
lcall
xor
fstps
lds
pushf
lock
ss
mov
lcall
shll
cs
xchg
pop
dec
out
xlat
jle
push
and
jne
sub
add
clts
and
push
pop
into
add
movsb
inc
pop
mov
push
push
call
pop
xor
out
push
js
in
jecxz
js
pushl
out
mov
pop
dec
test
add
inc
push
lea
loop
lcall
jb
pop
xor
mov
push
sbb
fwait
orb
inc
pinsrw
mov
push
stc
leave
imulb
inc
iret
push
push
adc
or
inc
cmp
rorb
or
movsb
test
pop
mov
daa
adc
jle
fs
into
into
mov
popa
data16
jno
mov
mov
das
ljmp
pop
rcr
lea
ja
aaa
aas
add
rcrl
hlt
fwait
leave
jmp
dec
xchg
add
push
mov
inc
iret
ja
xor
pop
sub
mov
xchg
dec
xchg
adc
inc
push
test
or
clc
mov
addr16
hlt
mov
into
mov
sbb
or
test
loope
push
fwait
and
rorb
fimuls
pop
leave
push
fistps
add
dec
and
push
mov
xor
nop
iret
push
cmpsb
lcall
adc
icebp
in
or
arpl
cld
mov
insl
xchg
adcb
das
stos
nop
mov
cmp
insl
mov
adc
add
sahf
insl
out
jae
shr
cs
sbbb
sbb
push
scas
jecxz
mov
test
ficomps
aad
imulb
cmp
mov
fucom
pop
shll
or
mov
mov
addr16
sbb
nop
push
into
lahf
mov
in
fmuls
or
stos
mov
repnz
enter
idiv
jecxz
imul
mov
cmp
fs
je
dec
dec
adc
cmp
fcomps
jns
rcl
adc
pop
adc
mov
sbb
dec
es
cmc
popf
xor
ret
pop
jne
jg
ret
cmp
ret
fisubrs
cmpsb
popa
nop
inc
jecxz
js
in
mov
mov
xchg
adc
mov
adc
cld
pushf
out
push
push
jb
mov
cmp
aas
push
repnz
popa
sbb
mov
push
imul
inc
inc
in
inc
push
sbb
xchg
leave
or
shll
jecxz
xor
xor
inc
push
je
push
fiaddl
divl
jbe
pop
mov
mov
pushf
pop
mov
out
pop
inc
mov
pusha
jmp
lcall
test
in
lret
or
jge
ret
stos
cmp
fisttpll
push
std
pop
or
pushf
and
lahf
outsb
outsb
jae
mov
inc
fwait
dec
lea
test
loopne
loopne
sbb
mov
stc
outsl
cs
inc
cwtl
out
mov
fwait
sub
pop
push
sub
add
rclb
mov
jmp
inc
mov
mov
mov
adc
sub
insl
sbbl
or
inc
xchg
les
mov
xchg
lahf
jp
pop
or
fimull
dec
insb
in
xor
and
cmpsb
dec
pop
mov
loope
aas
fcomp
sub
mov
adc
push
cmp
cli
sub
fnstcw
mov
popa
pop
jp
push
jae
pop
repnz
cmp
push
loopne
jge
subb
rorb
push
cli
mov
or
inc
pusha
dec
in
xchg
test
test
call
gs
lret
push
xchg
aam
test
push
inc
mov
jae
repz
push
repnz
adc
iret
mov
dec
pop
mov
sti
mov
or
mov
fsubrs
call
xor
scas
out
push
push
pop
xor
int3
in
aas
ja
jl
icebp
cwtl
sub
cld
xor
aad
sar
sbb
lcall
fwait
mov
sbb
sub
mov
xchg
mov
lock
jbe
jnp
das
or
adc
add
daa
mov
pop
imul
sbb
fistps
mov
hlt
push
mov
sub
inc
movsb
push
inc
mul
daa
pushf
push
push
xchg
roll
or
xchg
in
pusha
sbb
fmuls
sub
mov
pop
orb
mov
dec
aas
hlt
inc
ss
push
jb
cmp
pop
or
mull
outsb
cs
out
iret
dec
inc
ja
outsl
rcrb
push
scas
hlt
xor
xor
call
push
jns
sbb
aam
pushl
mov
gs
cwtl
mov
jg
push
or
xor
repz
dec
sbb
jb
out
out
xchg
push
or
inc
lock
push
dec
repnz
fiaddl
mov
or
dec
xchg
adc
and
int
dec
das
and
pop
mov
mov
adc
xor
or
mov
cmp
add
insb
test
icebp
test
popa
jl
aas
in
mov
xchg
daa
xor
and
test
inc
jne
into
pop
push
jge
jo
jne
je
je
in
adc
or
cwtl
sbb
into
jb
pusha
sub
lods
negl
dec
test
mov
stos
mov
xlat
test
xchg
popa
shll
adc
mov
addl
add
mov
sbb
loop
jne
xchg
cltd
mov
pop
cmpsl
clc
int
ret
loope
ret
inc
xchg
push
cmpl
fcoml
out
fists
push
xlat
and
mov
and
cld
popf
sbb
inc
mov
pop
pusha
push
stc
into
jae
and
loop
sub
jmp
decl
jp
stos
pop
mov
mov
jp
into
inc
fimull
pop
lds
push
jle
dec
bound
mov
call
adc
sbb
push
and
orl
xchg
sub
add
cmp
adc
aas
xor
dec
sub
in
andb
rcll
addr16
out
add
aam
arpl
jo
ja
or
js
fsubrs
sub
pop
rclb
adc
sub
cmp
cmp
dec
add
repz
mov
pop
mov
jnp
sub
sub
std
or
cli
add
jns
addr16
ret
cmp
push
xor
aas
dec
pop
push
loope
pop
insl
outsb
and
in
sbb
popf
into
jns
mov
pop
cld
jns
mov
mov
push
in
pop
ja
js
jmp
gs
test
mov
xor
stos
jae
sbb
mov
sbb
adc
lahf
and
jns
in
mov
int3
iret
and
jecxz
mov
jmp
lea
ficoml
xor
or
xor
push
sub
iret
push
arpl
jno,pn
daa
les
push
ljmp
mov
lahf
pop
call
lret
outsb
sbb
pop
outsb
popl
fdivr
inc
pop
fcmovb
lahf
adc
ret
pop
cmp
loop
jno
xchg
jl
sub
sbb
xlat
aam
mov
popf
xor
out
dec
je
dec
mov
sub
and
repnz
test
push
fisttpll
aas
mov
lock
push
dec
mov
movsb
mov
sbb
jg
mov
lcall
fsubs
inc
repnz
xchg
sub
subl
mov
out
push
adc
in
mov
fstl
enter
jg
or
push
shl
push
pop
add
push
ss
stc
lods
mov
add
sbb
lock
push
pusha
lret
push
push
pop
ljmp
test
loopne
inc
mov
test
inc
aad
cltd
xchg
aas
sub
aad
lret
decb
out
enter
mov
aad
cmp
xchg
dec
ja
lret
mov
cmp
gs
hlt
movsl
in
jae
sbbb
cmp
ja
push
dec
add
clc
inc
imull
push
sub
test
lcall
xor
iret
add
mov
ds
sub
or
add
shll
dec
push
cwtl
sahf
les
mov
dec
loopne
daa
sub
mov
xor
mov
sub
fiaddl
stos
xchg
fnstsw
std
cwtl
mov
stos
mov
jle
adc
ljmp
mov
adc
mov
xchg
jle
fdivs
shr
pop
sub
popa
cmpsl
pusha
add
inc
cld
test
lahf
inc
test
imull
jle
jle
jle
mov
repnz
xchg
mov
lock
sbb
pushl
add
push
or
jecxz
add
xor
pop
je
mov
cmpsb
in
add
adc
xchg
popa
lea
push
xchg
or
ret
repnz
pop
mov
adc
test
out
jb
shlb
fildll
xchg
xchg
fxch
mov
insb
in
xchg
dec
das
inc
sar
inc
lea
hlt
xchg
lcall
push
loop
lds
mov
stos
in
push
fs
shr
mov
mov
stos
cld
xor
sub
sbb
insb
fsubrs
lahf
shlb
std
stos
jbe
jl
xor
and
adc
in
adc
inc
inc
test
pop
out
sahf
cmp
mov
mov
mov
jae
test
inc
mov
dec
fucomi
in
and
push
sub
xor
cmp
aas
in
push
enter
das
add
or
dec
xchg
ficoms
inc
movlps
jmp
nop
and
sub
pop
pusha
mov
pop
sbb
xchg
adc
pop
jns
lcallw
aad
dec
repnz
addb
mov
insl
nop
inc
mov
mov
sahf
es
jb
mov
mov
rorl
xchg
sub
lcall
scas
cltd
sahf
add
add
push
adc
xor
shll
rcr
cmp
push
add
ds
icebp
les
xchg
mov
sbb
dec
mov
lods
mov
push
xor
in
xchg
sahf
sqrtps
push
sub
aad
fwait
mul
xchg
ljmp
arpl
sbb
loope
stos
or
inc
jb
mov
cwtl
xchg
test
rcrb
in
cmp
pop
flds
pusha
je
scas
inc
cmp
or
ss
jle
fwait
pop
int
add
jo
out
test
and
jmp
mov
inc
cmp
pop
inc
inc
cmp
stos
icebp
push
in
xchg
out
mov
jp
js
mov
insl
and
mov
int3
mov
data16
inc
pop
roll
andb
jno
mov
inc
add
jno
and
faddl
ljmp
pushf
mov
cmpsl
cmp
cmp
push
test
lea
mov
push
pop
das
mov
mov
xor
pop
stos
jge
sbb
xor
add
xor
enter
cwtl
bound
jno
jecxz
mov
cli
std
lods
enter
xchg
xor
lods
cmp
add
jmp
sbb
mov
fwait
dec
lret
xor
fdivrs
xchg
add
xchg
sub
js
mov
sbb
imul
lahf
lock
mov
adc
and
push
fstpt
sub
dec
sarb
push
inc
fcoml
repz
sub
scas
xor
mov
xabort
push
movsl
in
cmp
aas
lret
sub
dec
lock
fwait
mov
mov
aaa
push
jne,pn
in
hlt
sub
iret
cltd
ja
xchg
cwtl
leave
inc
adc
jnp
aad
pop
mov
out
fdiv
xchg
dec
xchg
rcll
xor
xor
adc
xchg
ret
pushf
repz
addr16
xchg
add
inc
aam
mov
cwtl
pop
out
mov
add
int3
fs
xchg
fwait
xchg
test
es
mov
mov
leave
jmp
cli
dec
and
mov
or
cmpsb
mov
jp
add
insb
loopne
fimuls
movsl
fstpt
xor
lea
mov
dec
push
popa
iret
inc
cmc
push
cltd
adc
sbb
push
out
cmp
pop
mov
in
dec
adc
aad
insl
cmp
pop
fadd
pop
popa
cwtl
lret
or
lods
pop
xchg
out
das
data16
sub
std
rorb
lds
popa
lahf
adc
or
mov
adc
icebp
fisttps
mov
pop
xchg
pop
sbb
dec
and
outsb
addr16
cmp
mov
dec
mov
and
jo
lea
aaa
dec
xchg
addl
xchg
movsb
pushf
ss
lock
loopne
out
call
nop
mov
and
jae
add
pop
mov
lea
add
cwtl
dec
adc
dec
add
call
and
fisubs
pop
inc
es
mov
out
test
data16
cmp
and
cmp
mov
jle
add
xchg
leave
out
jl
insb
adc
jb
bound
jb
xlat
mov
dec
push
push
ss
and
dec
fildl
rorb
inc
flds
ror
sbb
mov
inc
divl
pminub
adc
mov
adc
mov
data16
clc
stos
in
sub
add
add
jno
cmpsb
mov
ds
jg
in
pushf
xchg
xchg
filds
and
stos
sbb
or
bound
xchg
pop
ja
sbb
sub
or
test
iret
xor
iret
negl
repnz
test
ljmp
in
mov
bound
mov
in
jg
adc
cld
dec
mov
and
lea
repnz
xchg
mov
sub
fdivs
adc
js
ds
sbb
int3
or
or
inc
add
jnp
sbb
notb
or
fwait
add
arpl
adc
mov
and
mov
frstor
xor
notb
add
pushl
filds
cmpsl
xchg
sub
sbb
sbb
mov
sti
popf
xor
imul
gs
adc
out
gs
cmp
cmp
clc
mov
lods
lods
mov
mov
cmpsb
out
ret
xor
fwait
stos
popf
ss
sahf
ja
and
movsb
mov
jmp
push
in
jle
sbb
jo
cld
adc
stos
mov
das
pusha
mov
insl
mov
int
xlat
mov
push
pop
dec
sub
or
push
dec
xchg
xchg
pop
scas
pusha
fdivr
or
imul
jg
jle
mov
jnp
cmp
sbb
rorl
ret
inc
and
dec
in
pushf
or
hlt
mov
fbld
mov
lods
call
loopne
test
inc
jl
pop
sub
xchg
sti
pop
jns
fbld
inc
xor
cmp
pop
lret
inc
ror
rcrb
mov
out
enter
jge
das
push
xchg
and
sbb
adc
jo
out
cmp
lret
mov
mov
inc
mov
mov
mov
les
in
mov
pop
iret
sbb
cmp
xor
icebp
popf
mov
mov
dec
mov
pop
outsl
addr16
sub
test
mov
mov
jecxz
fdivs
and
enter
out
fstpl
js
xchg
loopne
or
add
repnz
fsub
pop
cmpsb
rol
imul
imul
jl
pop
loop
inc
pop
sub
sub
xor
jle
mov
sub
mov
pop
aam
mov
jnp
popf
pop
inc
lret
out
cmp
inc
in
mov
repnz
shrl
push
cli
mov
pop
inc
dec
test
repnz
adc
lock
pushl
inc
or
push
or
loopne
mov
cmp
mov
xchg
es
add
dec
sbb
fisubl
out
jmp
dec
lahf
mov
xor
clc
pushf
mov
xor
fistl
and
adc
cmp
add
jnp
or
pushf
leave
cmpsl
xchg
clc
js
mov
mov
nop
cmp
jne
and
xor
pop
mov
push
push
pop
add
aam
sub
cmpsb
dec
jmp
xlat
aad
arpl
push
xchg
add
sarb
ja
pop
push
xchg
cmpsl
or
int
push
fld1
clc
ud2
mov
or
jmp
popa
inc
sub
jecxz
inc
mov
cmp
mov
or
xor
aaa
mov
sbb
mov
in
loope
and
cmc
arpl
push
sbb
enter
test
xlat
rcrb
add
mov
out
push
push
loop
mov
shlb
std
mov
clc
leave
add
cmp
pop
sub
sub
stc
cmpsb
mov
popf
daa
and
mov
xchg
cwtl
mov
push
mov
and
dec
or
shll
stc
nop
mov
das
cli
enter
filds
jge
inc
xchg
inc
cmpsl
dec
pop
lret
inc
and
out
les
cmc
inc
lret
frstor
fisubs
lock
stc
mov
and
cmp
xor
es
test
insl
jecxz
cwtl
je
mov
test
in
outsl
mov
notl
jbe
or
aad
mov
shl
xor
jl
data16
nop
cmpsb
cmpsb
lahf
fstpt
sub
add
and
jge
jmp
loope
cmp
pop
fwait
push
sub
xchg
repz
andl
test
aam
sarb
ds
and
and
xchg
xchg
enter
mov
cmpsb
movsl
lock
xchg
fimull
es
xchg
pop
dec
jmp
in
pop
mov
cmp
ret
pop
negb
add
mov
imul
daa
movl
sbb
mov
inc
stos
aas
imul
popf
lods
pop
lret
inc
sub
mov
cmp
shrb
imul
movsl
lret
scas
pop
xchg
int3
dec
push
cmp
js
std
sbb
in
ja
movb
push
pop
shr
inc
aaa
dec
rolb
inc
xor
out
cwtl
dec
aad
in
subb
insl
and
push
cli
bound
cmp
xchg
cmp
lods
test
sub
repz
adc
cmpsb
sub
neg
mov
xchg
add
xor
mov
daa
test
lea
push
mov
or
icebp
insb
lret
push
lds
adc
sti
ss
jnp
dec
das
movsl
iret
sub
fadds
inc
jno
ret
xchg
add
data16
dec
mov
clc
pop
jnp
fstpt
add
xchg
sbb
adc
ljmp
stos
rcl
sarl
addl
push
mov
iret
in
sbb
push
mov
loope
cli
faddl
iret
aad
mov
jp
jle
outsl
inc
aad
orb
jno
dec
and
ffree
xchg
or
cmp
push
push
sti
popa
xchg
cld
test
int3
orb
mov
inc
imull
cltd
mov
inc
cld
adc
xor
fucom
sbb
jecxz
pop
jo
outsl
mov
and
or
into
in
mov
scas
sbb
clc
or
in
lds
xchg
cmp
pop
push
aas
or
mov
loopne
xor
out
pop
jecxz
xchg
insl
sub
sahf
mov
add
inc
sbb
lods
aad
movsl
cwtl
mov
repz
sub
icebp
fwait
mov
sbbl
push
push
js
test
add
movsb
cmp
aad
dec
cmc
in
repz
test
push
sbb
out
jbe
mov
cwtl
cld
and
sbb
mov
jp
jb
ljmp
das
int
outsl
lods
xchg
mov
jl
push
iret
sbb
ljmp
mov
and
aad
push
jl
mov
lcall
je
mov
push
or
jl
je
fdivl
lods
outsl
jecxz
and
imul
sub
daa
jno
aas
pusha
push
adc
add
dec
shrb
rcrl
sti
add
pop
xchg
data16
loop
or
mov
lahf
aas
push
push
xchg
jbe
mov
fistps
out
dec
test
adc
ljmp
jno
mov
ljmp
call
pushf
inc
cli
add
xor
mov
ds
cmpsl
ds
xlat
cmp
fisubl
mov
in
mov
cwtl
mov
adc
lcall
mov
stc
push
fnstenv
or
and
pop
cmc
inc
cwtl
lock
loope
lds
shlb
push
cmp
mov
in
dec
inc
outsb
cltd
mov
sbb
ss
sbb
jle
aad
lcall
repz
jae
xor
sub
insl
inc
adcb
mov
cmc
mov
xchg
xchg
xchg
sub
or
and
nop
dec
pusha
jecxz
loope
push
ds
xlat
aaa
nop
cmpsl
test
dec
or
and
xlat
lea
xor
or
sarb
xbegin
pop
mov
or
or
mov
es
dec
out
bound
xor
ljmp
xor
xchg
jo
push
mov
pop
in
mov
in
xor
pop
incl
icebp
mov
and
xor
push
std
les
cltd
leave
dec
mov
popa
add
clc
push
cmpl
popf
pop
dec
mulb
jge
xchg
jle
and
mov
aad
insb
mov
fldenv
aas
jl
sub
pop
repz
lods
xor
test
push
cmp
push
xorl
int
push
cmpsb
mov
cwtl
leave
mov
aad
out
aaa
enter
jno
sub
mov
pop
mov
jns
out
cmc
xchg
mov
imul
adc
inc
andb
negl
jmp
movsl
loopne
clc
mov
dec
xchg
xor
cld
aas
dec
add
pushf
xchg
aad
movsb
pop
mov
ffree
cltd
push
out
push
cmp
jne
or
pushf
xchg
iret
xchg
mov
imul
push
addr16
sahf
int
xchg
pop
sub
sub
pop
fnstenv
mov
shl
mov
movsl
or
add
pop
addr16
pop
hlt
push
negl
loopne
cmp
aam
push
adc
mov
cmc
stos
mov
es
loop
pop
xchg
xor
add
sbb
xchg
aam
push
call
lahf
jae
shlb
mov
popl
jae
jp
jl
sub
test
int
xchg
in
arpl
sbb
adc
push
aas
pop
sub
test
inc
sbb
mov
adc
or
imul
rcl
add
adcb
push
xor
movsl
test
xor
push
pop
outsb
xchg
adc
nop
dec
mov
incl
lret
pushf
cmpsl
xchg
add
adc
pop
pusha
inc
jp
pop
inc
scas
mov
stc
mov
cmp
loope
sub
pop
mov
mov
sub
mov
es
and
xor
ljmp
out
test
fiaddl
jecxz
cmpsl
cmp
mov
divb
inc
stos
add
mov
xchg
test
xchg
loope
gs
lret
addb
shl
or
mov
loope
fcompl
mov
sbb
cmc
and
jbe
cmp
push
imul
cmp
jo
mov
je
sbb
bound
cld
fs
nop
pushf
sbb
aaa
fldl
mov
or
xchg
lock
sbb
fwait
pop
xchg
insb
test
fs
stos
dec
jl
cld
push
add
push
ret
sahf
ss
les
out
jnp
jg
das
push
cwtl
bound
rcl
dec
and
jle
sar
xchg
push
ficoml
test
mov
enter
test
and
cmpsl
mov
pop
cmpsl
arpl
fwait
sbb
pop
jp
das
pop
movsl
imul
push
mov
or
cmp
in
push
addr16
in
dec
repz
outsb
std
idivb
dec
jl
mov
lds
sbb
push
adc
mov
out
add
outsl
imul
gs
insl
mov
cli
lcall
add
add
push
add
mov
pop
imul
arpl
jne
ret
sub
cmc
dec
pop
xor
mov
mov
das
dec
pop
mov
mov
jne
in
mov
pop
in
mov
imul
sbb
subb
sbb
xchg
dec
jo
cmc
addr16
and
mov
in
stos
mov
aad
ret
stc
mov
xor
or
push
test
stos
and
roll
mov
pop
into
sub
imulb
mov
icebp
imul
jo
or
cld
dec
sbb
rorl
pop
aas
insl
loop
incl
push
adc
push
cmc
and
loopne
testb
int3
shlb
push
jae
or
bound
into
adc
xchg
in
fidivs
adc
sbb
lcall
mov
add
or
sbb
and
sbb
movsl
sbb
andb
inc
or
cmc
int3
int
es
mov
dec
sar
mov
adc
pop
fldenv
incb
push
cs
imul
pop
jg
in
sbb
add
leave
mov
jo
xchg
cmc
jo
das
daa
fwait
and
sbbb
add
sarl
leave
ret
push
jp
pop
addb
cmc
add
jmp
push
movsb
pop
push
push
test
dec
fisubs
or
lret
imul
push
int3
push
test
push
cmpsb
push
sbb
cmp
ret
fldl
xchg
rorl
mov
or
bnd
jg
mov
jne
mov
cwtl
pusha
divl
lock
aad
aam
fwait
xchg
outsb
mov
pop
pop
lret
adc
mov
nop
imul
mov
pusha
adc
movl
push
std
push
and
add
aad
push
pop
fwait
pop
cmp
test
xchg
fwait
std
or
ljmp
jns
xor
fstpt
pop
dec
cli
stos
mov
jno
out
jnp
and
jl
aad
xor
insb
sub
test
xchg
scas
sub
add
out
aas
in
pop
int3
and
data16
cli
loop
and
fisubrl
lahf
stos
popl
adc
ret
insl
repnz
mov
stos
inc
mov
push
inc
std
jmp
xor
adc
loopne
out
dec
push
lcall
inc
lods
call
dec
shl
iret
pop
inc
lods
and
add
mov
popf
pop
and
xchg
push
stos
test
jno
jb
aam
mov
push
mov
test
sub
pushf
xchg
sbb
xchg
dec
sub
inc
outsb
push
addr16
ja
jne
xchg
movsb
ljmp
sub
mov
xlat
cmp
fcmovnb
xchg
mov
xor
jne
xchg
cmpsl
ss
mov
and
imul
scas
or
cltd
and
add
inc
pop
dec
push
mov
mov
dec
popf
aas
mov
mov
mov
xor
or
test
cmpsb
pop
imul
or
sbb
sbb
scas
insb
mov
cmp
in
pop
push
lret
adc
sbb
add
and
les
pop
pop
ss
xchg
test
mov
xor
nop
insl
mov
pop
cmp
aad
subl
mov
ljmp
jbe
add
movsb
repnz
cmp
xchg
mov
mov
push
xlat
pop
es
pop
xor
ret
leave
adc
cmc
jns
insl
mov
das
test
or
push
and
lds
pusha
pop
ss
pushf
mov
andb
fiadds
cmpsl
push
mov
iret
dec
mov
xchg
fadd
inc
fidivs
ficompl
xchg
jp
aaa
add
fs
mov
mov
mov
jo
fs
imul
cmpb
out
mov
cmpsl
out
xchg
adc
add
sbb
arpl
cli
fcoml
jnp
xchg
cmc
test
mov
inc
push
clc
imul
ja
arpl
dec
mov
adc
push
mov
add
pop
in
nop
iret
loopne
mov
inc
inc
fdivl
mov
cmp
cmp
out
sub
ret
xor
xlat
xor
lahf
add
fmul
dec
filds
pop
out
gs
and
in
mov
xchg
int
mov
adcb
aad
lret
es
sub
gs
cmp
dec
cmp
pushf
imul
lods
lds
movsb
add
mov
jo
sbb
inc
pop
push
in
daa
inc
adc
pop
in
xor
cmpsb
mov
cli
aas
push
push
cltd
jbe
ja
jne
mov
stos
pop
add
mov
xchg
repnz
sahf
push
push
cmp
push
leave
aaa
dec
in
push
inc
fmull
stos
jp
test
fidivl
outsb
and
add
dec
rorb
call
movsb
int
mov
ja
push
scas
add
dec
cmpsl
push
xor
inc
sbb
xchg
lds
push
ret
add
icebp
popf
sbb
test
xor
mov
or
popa
sub
add
popf
and
das
and
out
ror
fwait
out
cmp
inc
push
test
je
mov
test
xor
fs
aam
inc
paddq
lea
and
adc
cmpsl
xchg
or
xchg
and
push
aas
in
fsubrl
stos
jnp
or
and
push
mov
leave
xchg
inc
xchg
stos
adc
pop
rorb
push
cli
out
jmp
out
cmp
int3
jns
fmull
sti
clc
scas
inc
sbb
sub
or
clc
icebp
push
out
orl
adc
insb
sub
fs
orl
lds
inc
jnp
push
or
jbe
arpl
popa
add
dec
inc
mov
ss
or
movsb
int3
in
clc
cwtl
cwtl
sbbl
out
push
addb
mov
pop
mov
add
sbb
ss
xlat
in
push
test
inc
rcr
sub
cmpsb
pop
sbb
or
and
push
or
shlb
sub
xchg
adc
roll
int
pop
or
or
rorb
jg
insb
sti
or
sub
cltd
pop
lods
jmp
cwtl
and
mov
ror
lds
cmp
outsb
pop
ljmp
inc
inc
push
and
fildl
and
mov
shrl
cmpsl
or
mov
cmpsl
inc
ss
outsb
arpl
popf
pop
jg
mov
mov
int
fadds
test
call
iret
and
push
popa
xchg
aaa
push
inc
or
scas
mov
jmp
mov
inc
sbb
mov
clc
inc
mov
ds
fdivl
sub
push
sbb
or
imul
ss
rcrb
jae
jns
stc
popa
in
pop
xor
shll
add
mov
dec
mov
fnstsw
insl
in
mov
xchg
out
jg
cli
arpl
lods
mov
sar
push
pushf
iret
addr16
into
dec
gs
mov
mov
push
mov
mov
stos
jbe
out
cmpsb
sarl
ret
jle
pusha
push
add
and
icebp
js
adc
sarl
fisttps
movsw
cs
pop
mov
mov
xchg
xchg
pop
pop
push
ret
sahf
outsb
pop
xor
xor
sbbl
dec
and
aad
aad
inc
mov
outsb
popa
js
jg
fcoml
lods
out
mov
icebp
sbb
mov
ret
aaa
repz
cmp
mov
pop
cmp
xor
mov
shrl
sbb
cmc
jmp
dec
shll
inc
or
fsts
out
dec
mov
xchg
cmp
fsubl
es
pop
imul
dec
inc
inc
inc
insb
cmp
cld
sub
mov
cs
adc
insb
nop
out
push
shlb
dec
sbb
cmp
or
adc
outsl
aam
and
inc
mov
dec
in
sub
lcall
ret
pop
in
arpl
scas
and
and
stc
fst
into
and
jbe
cmc
jnp
push
add
insl
fnstenv
mov
cli
xlat
leave
pop
xorb
sarb
xchg
and
bound
pop
mov
or
xchg
jae
rcrb
sbb
mov
sbb
mov
push
xchg
inc
filds
stos
push
cmp
push
lods
popf
mov
pusha
fisubl
sbb
add
add
mov
scas
ss
cmpsb
dec
and
add
adc
loopne
fucomi
xchg
add
push
test
mov
xlat
jo
xchg
sub
mov
or
roll
in
xor
hlt
lahf
jne
pop
les
repnz
push
or
sub
inc
clc
mov
push
push
roll
and
in
xlat
test
insl
int3
insl
or
cwtl
mov
in
pusha
fildl
and
pushf
mov
push
xchg
xchg
pop
push
dec
in
pop
jecxz
inc
stos
shll
mov
rorb
dec
jl
subb
xor
rcrl
inc
cltd
jecxz
incl
add
add
dec
jp
leave
lahf
jae
cwtl
fstpl
dec
out
fnsave
cltd
or
jp
sbb
mov
sub
xor
fwait
pop
adc
and
inc
mov
in
inc
popf
dec
dec
inc
pop
xor
mov
movsl
add
pop
inc
xor
jo
mov
mov
inc
cmp
mov
fldl
fistpll
xchg
jns
lods
lahf
aam
xchg
pushf
pcmpgtd
aaa
or
mov
arpl
mov
xchg
xorb
fstps
lahf
cmp
stos
jo
cmc
stos
mov
inc
mov
jb
scas
or
dec
jne
dec
add
xor
jbe
mov
cmpsl
fisubrl
sub
fcoms
add
push
jmp
mov
movsl
or
outsl
jae
and
movsl
fisubrs
scas
add
sbb
inc
daa
sub
sub
rclb
and
inc
in
xor
out
inc
mov
testb
sub
mov
dec
aaa
or
sub
sub
inc
inc
fwait
pop
ljmp
sahf
xor
outsb
sahf
cmp
stos
outsl
push
fsubs
or
fnsave
popf
stos
mov
dec
fsubrp
jae
dec
cli
pop
rcrb
add
lret
shr
mov
or
push
inc
pushw
outsb
xchg
or
and
sbb
push
xor
jbe
fsubrp
rcrb
and
decl
pop
xlat
xchg
sarl
mov
fbld
jne
lret
adc
sbb
mov
invlpg
ja
mov
cmc
hlt
sub
jmp
push
jl
pop
lds
xchg
cmp
push
subb
mov
mov
sbb
fucom
lods
mov
jne
es
and
adcb
into
pop
or
and
sbb
test
mov
pusha
push
fmuls
shrl
in
and
adc
mov
inc
jmp
sbb
shrl
pop
jmp
jge
push
mov
lret
pushf
sbb
pop
shlb
add
enter
jge
stos
in
mov
movsb
adc
icebp
cmpsb
in
les
or
jg
iret
xorb
and
and
add
push
icebp
dec
lcall
mov
and
lods
mov
and
xor
int
push
jle
pop
xchg
out
sub
add
imul
repnz
inc
sbb
push
mov
xchg
cli
inc
or
push
push
xchg
inc
mov
adc
sbb
push
cmp
rolb
jne
pop
rcrb
stos
mov
dec
lcall
add
jb
std
jo
lea
lock
xchg
push
pop
jnp
ja
sub
pop
js
rcrb
jne
mov
lock
dec
jg
cwtl
sub
mov
fwait
into
mov
inc
mov
push
lcall
ret
mov
cmpsb
in
int
cs
in
loope
push
jns
insl
int
xor
test
sub
fildl
inc
fnstsw
cmp
push
lcall
in
xchg
sbb
clc
call
dec
clc
aas
fstp
out
jae
icebp
cmp
aas
mov
push
daa
xor
xchg
popa
sub
mov
ret
mov
mov
ds
lods
dec
mov
mov
lcall
test
leave
and
add
jae
jae
adc
mov
mov
sub
mov
stos
xchg
insb
enter
repnz
or
push
sbb
sbb
push
cmc
mov
sbbb
ret
shlb
ss
mov
fs
add
pop
fisttpl
xor
aad
and
cmp
jae
xor
xchg
mov
lret
mov
lcall
orb
pop
xor
adc
mov
dec
mov
jl
cmpl
aam
adc
sbb
cs
add
cmc
mov
pop
fwait
add
andb
je
push
out
movsl
sbb
and
cmpsb
out
test
dec
lret
sbb
push
ja
or
push
jbe
enter
push
jbe
jno
in
push
cmp
test
mov
xchg
inc
fsubrl
add
lods
rolb
daa
jg
mov
and
mov
adcb
hlt
xorb
outsl
jnp
jo
pop
fdivl
push
and
mov
dec
cmp
or
xlat
fucom
xorl
test
dec
add
jmp
push
adc
sub
jge
add
mov
inc
jmp
aam
ds
sbb
andb
mov
mov
inc
push
mov
pop
lret
addr16
lods
outsl
inc
adcb
or
add
xchg
jno
in
incl
mov
mov
pushl
mov
jge
insl
push
loopne
inc
setnp
pop
push
push
jo
je
push
jb
or
jl
cli
ljmp
xor
data16
sbb
fsts
std
js
mov
test
fxch
mov
pop
dec
shll
shlw
adcl
mov
fs
stc
in
xchg
inc
insl
inc
cmp
lret
jecxz
mov
jnp
roll
loopne
lods
loop
lock
lret
fcomps
mov
and
sahf
dec
jb
adc
scas
mov
shlb
ficoml
lret
out
lret
aas
jecxz
iret
dec
into
rolb
mov
cs
inc
mov
push
stc
in
pushaw
pop
dec
mov
clc
or
add
push
mov
dec
arpl
testl
movsb
mov
jae
outsl
js
imul
jg
xor
xchg
push
push
aaa
inc
les
jle
xor
leave
roll
imul
xor
inc
mov
inc
xchg
jmp
push
jne
or
in
mov
enter
div
lock
jl
and
out
insb
cmc
fldenv
jg
loop
movsl
pop
lds
dec
xchg
mov
cmp
bound
or
nop
jg
int
pop
lahf
sbbb
adc
lret
aam
push
enter
push
jge
xadd
test
mov
outsl
xchg
xchg
push
mov
ds
mov
das
or
xchg
adc
mov
inc
mov
out
movsl
adc
mov
ds
test
sbb
or
insl
dec
cmp
test
fsubp
xor
push
dec
mov
int3
call
jae
pop
loope
pop
ja
aad
xchg
ja
cmp
and
lcall
jb
lcall
and
mov
add
ficoms
push
cmp
lock
jl
ja
aaa
adc
test
sub
pop
dec
xor
ret
ret
aas
fldenv
jmp
or
dec
push
cmp
jge
push
cmpsl
pop
in
lock
jg
cmp
insb
in
xchg
or
int3
addr16
frstor
xor
out
xchg
outsl
incb
test
mov
adc
in
dec
add
mov
repz
and
push
jecxz
mov
movsb
push
int3
push
add
inc
negl
test
lahf
outsl
xchg
push
cmp
aam
push
icebp
jae
mov
lds
or
xor
inc
push
in
bound
fcomip
lods
loop
pop
pop
xchg
or
decl
mov
xor
dec
repz
and
ret
ss
and
adc
or
jg
js
aas
and
lods
lcall
jb
fabs
xor
shrb
imul
pop
sbb
cmp
push
push
dec
test
movsb
and
sub
pop
add
ds
inc
add
sub
pop
rcll
insl
pxor
mov
ss
pop
mov
sahf
push
sbb
cmpsb
outsb
jne
inc
mov
das
or
test
xchg
mov
in
leave
mov
push
sbb
pushf
lahf
push
mov
jecxz
or
bound
ret
fidivl
inc
cmpxchg
mov
or
loop
scas
jno
inc
cltd
push
dec
add
or
xchg
or
movsl
mov
pop
inc
ds
mov
sbb
inc
cmp
sarb
movsl
mov
xor
mov
sbb
int3
in
mov
fbld
stos
sbb
repnz
inc
xchg
in
push
jmp
cs
mov
pop
imulb
sbb
movsl
or
push
fstpt
add
fildll
cmp
xchg
and
pop
loop
imul
ja
fisubl
cmp
inc
dec
lods
loope
mov
repz
mov
inc
mov
dec
jg
pop
outsl
and
out
psllq
mov
jne
mov
bound
stos
xor
adc
in
push
xchg
cmp
jecxz
subb
xlat
mov
cmp
lahf
int3
or
jle
mov
or
mov
lcall
stos
sub
testl
jecxz
xchg
dec
fcoms
dec
xchg
inc
jne
inc
out
jns
inc
out
adc
in
jle
fdivrl
rclb
xorl
loop
scas
scas
mov
lds
xlat
enter
pop
add
sub
rcrl
orl
or
into
adc
in
in
cltd
push
int3
xor
out
mov
cmp
sarb
out
jge
in
sub
imul
dec
sub
sub
jl
enter
mov
ss
dec
sbb
fwait
leave
push
shl
xor
pop
xchg
in
jmp
sbb
sub
enter
push
out
daa
pop
add
ret
xor
popf
push
in
out
lret
pop
adcl
popa
popa
adc
inc
sbb
push
lahf
ljmp
jecxz
push
push
xchg
jno
dec
mov
inc
fisubrs
push
add
add
xor
icebp
xor
test
ret
mov
mov
data16
data16
add
cmp
inc
add
sbb
hlt
insb
sub
mov
leave
mov
lock
xchg
lret
loope
sub
xchg
adc
adc
pushf
pop
scas
fcomps
cmpsl
jae
inc
int
idiv
enter
xchg
pusha
jl
sahf
loope
addl
xlat
lret
pop
in
data16
ret
mov
mov
dec
push
dec
ficoms
xchg
leave
mov
sbb
ljmp
jne
mov
adc
dec
ss
mov
loop
xchg
arpl
inc
mov
cmpsb
push
out
sbb
adc
dec
icebp
shrl
sbb
push
and
negl
js
dec
mov
and
mov
push
adcl
aad
cltd
xchg
test
out
lret
rclb
sbbl
loopne
fwait
data16
mov
jge
cli
into
or
lods
lret
adc
pop
sub
cmpsl
lds
xor
gs
mov
cli
lea
xchg
mov
xchg
test
xor
push
aad
lcall
icebp
mov
mov
lods
popf
cmp
bound
jecxz
pop
jecxz
aas
xor
loopne
pop
call
pop
mov
pop
cmp
out
xchg
repz
jnp
es
and
call
dec
cmpsb
pushf
cmp
ljmp
out
lock
sub
movsb
ds
inc
dec
lods
lds
ja
mov
scas
test
fsubrl
enter
jae
xchg
out
inc
out
arpl
divl
jae
pusha
xchg
pop
adc
jle
mov
in
cmp
outsb
push
addr16
dec
out
xor
mov
shl
ja
out
insl
mov
dec
cmc
add
pop
pmulhuw
xor
fcomps
mov
arpl
pop
pop
inc
mov
or
or
scas
adc
inc
and
cwtl
pop
mov
fwait
es
jp
addr16
xor
jle
hlt
imul
pop
push
jge
xchg
aaa
mov
cmpsb
mov
das
addr16
and
cmp
dec
adc
xor
arpl
outsb
ja
ret
js
add
popf
pop
mov
sti
lock
setne
hlt
xchg
test
int3
cmp
dec
test
sti
or
pop
inc
lods
enter
test
ja
push
cmp
xchg
lods
pop
insl
fisubrs
lcall
aas
test
dec
loop
jmp
push
outsb
and
dec
and
mov
xor
xchg
or
rorl
ret
push
pop
jmp
stos
mov
aas
xchg
pushf
lods
rorb
ss
fmuls
sbb
push
mov
add
movsb
repz
ret
or
push
dec
pop
rcrb
repz
repnz
add
in
or
inc
jb
and
call
lds
stos
mov
and
es
das
iret
imul
push
cmp
mov
push
data16
cmp
jae
lds
pushf
mov
xchg
pop
cmp
add
ss
or
push
jb
mov
sub
sti
inc
sbb
mov
pop
nop
sub
lock
adc
sbb
mov
je
addr16
or
adc
and
gs
dec
jae
jl
xor
pop
gs
or
mov
popa
out
mov
sahf
push
out
adc
sbb
push
jnp
stos
and
clc
js
or
sbb
loop
jo
inc
fcomps
xor
cli
or
into
movsb
add
iret
andb
movsl
sbb
xor
adc
fs
loope
push
lock
stc
or
fcomps
jmp
js
pop
adc
repz
cli
and
addr16
xor
pop
leave
loopne
push
add
je
xor
mov
inc
jae
mov
push
into
jecxz
mov
das
inc
mov
xor
sub
cmp
data16
adc
rclb
imul
loopne
mov
jge
setns
cmp
mov
mov
fdivl
iret
cmpsl
sbb
in
cmp
ret
push
flds
mov
mov
rorl
bound
or
ss
sbb
xchg
adc
int
cmp
adc
outsb
xor
jmp
add
xchg
push
in
pop
stc
in
std
jo
outsl
mov
lea
mov
popf
add
adc
pop
xor
push
mov
ret
bound
or
push
inc
ffree
loop
fwait
bswap
dec
adc
icebp
and
outsb
push
repnz
scas
jle
sbb
mov
or
push
mov
fwait
mov
cmp
stos
sub
sub
or
push
repnz
xor
xchg
lds
les
addr16
imul
pop
mov
test
push
popf
aaa
lea
aas
sub
inc
sbb
or
pusha
cmp
mov
pop
cmp
ja
xchg
mov
fdivrl
cmp
into
repz
sbb
imul
pusha
adc
xchg
pop
nop
pop
push
leave
cbtw
jae
lret
ljmp
jmp
fs
sbb
andl
rcl
inc
ss
cmp
sub
pop
cltd
lods
insl
fcomps
mov
sub
loope
test
pop
scas
aas
xor
adc
push
rcr
loop
xor
push
dec
mov
sbb
rolb
adc
mov
sub
lods
out
add
ss
arpl
xor
push
pop
es
ljmp
popf
push
add
test
ljmp
mov
nop
rorb
xchg
fisubl
sub
enter
or
lods
enter
bound
pop
std
in
jecxz
sub
pushl
mov
add
xchg
popf
push
sub
cmpsl
incb
rcrb
adc
push
lods
pop
insl
mov
adc
mov
in
and
push
cmpsb
movsl
lcall
repnz
cmp
lds
pop
xlat
dec
fmuls
jecxz
scas
jns
jmp
insl
pusha
cltd
je
add
sub
clc
push
add
cltd
aas
daa
outsb
pop
xor
pop
orl
xchg
mov
cld
mov
lock
pushf
pusha
dec
dec
aam
jge
cld
ret
cmp
sbbb
fidivrl
icebp
sbb
cmp
fcoml
pusha
and
xor
test
dec
in
jecxz
push
andl
aas
mov
add
int
xchg
lds
or
outsl
sub
jno
cli
push
in
push
aam
bound
cmp
xor
push
sub
fstl
mov
in
ret
lods
xor
cmp
add
repnz
iret
xchg
imul
pusha
adc
outsl
mov
cwtl
pop
inc
sbb
pusha
mov
inc
xor
test
mov
pop
mov
mov
sub
lea
xchg
loope
movsl
aam
or
adc
pop
jecxz
jno
pop
das
sbb
movsl
add
or
xor
aaa
push
aas
ret
dec
ret
aad
inc
dec
xchg
xchg
fwait
in
ror
pop
sub
data16
movsl
or
push
or
mov
int3
leave
sbb
push
imul
rcll
insb
xchg
adc
daa
mov
xor
mov
ja
test
dec
mov
push
daa
xchg
dec
daa
cmp
mov
ret
fs
and
insb
pusha
scas
inc
dec
fnstsw
dec
pop
pop
push
pop
jle
inc
ljmp
test
adc
mov
movsw
fistpl
adc
push
mov
test
push
lret
std
popa
cmp
enter
jp
subl
testl
mov
mov
sbb
push
in
inc
das
dec
test
jmp
movsl
jae
push
and
aas
pop
les
push
add
or
loop
jo
pop
cmpsl
rclb
lret
repz
push
push
sub
and
fwait
xchg
lret
mov
mov
outsb
fchs
cmp
dec
xor
jl
aaa
sar
push
dec
add
daa
xor
push
mov
xchg
push
scas
lcall
pop
and
ss
pop
out
xlat
mov
mov
sbb
xor
pop
out
sub
xchg
mov
push
jmp
mov
and
in
cltd
push
fisttps
lret
pushf
or
sbb
jecxz
sub
ret
dec
xor
add
xchg
scas
andl
int3
add
cmpsl
in
fisttps
mov
and
sbb
test
and
in
shrb
mov
addr16
out
or
mov
and
fstl
lods
movsl
ss
dec
sbb
stos
and
xchg
pop
jae
sbb
repz
xchg
cmpsl
scas
push
je
mov
in
call
or
in
in
jl
sub
adc
insl
pop
xlat
push
fs
fisttpll
add
add
mov
cld
ja
pop
stos
mov
push
bound
lret
push
mov
adc
jge
stc
scas
sbb
or
lea
xchg
cmp
inc
dec
jnp
sub
sbb
lods
mov
bound
adc
mov
pushl
push
dec
push
sbb
xchg
pop
inc
xor
push
or
hlt
fidivrl
testb
cmp
shll
into
mov
arpl
mov
jo
sub
cltd
cmpsl
int
nop
mov
mov
in
aam
mov
daa
sbb
xchg
xor
movsb
xchg
sbb
jno
mulb
jno
in
and
inc
hlt
shlb
adc
xor
pop
sbb
inc
jae
pop
dec
jbe
clc
lahf
hlt
popa
icebp
popa
mov
or
sub
icebp
imul
xchg
pop
mov
movsb
mov
jns
arpl
push
inc
pop
jno
sbb
lret
cmp
or
es
push
or
sub
cmp
pushf
psubsw
and
pop
jmp
gs
pop
xchg
imul
push
scas
out
push
add
sub
jb
push
push
scas
cmp
dec
out
mov
loope
data16
push
mov
hlt
rcrb
xlat
orl
xor
inc
aas
int
fidivl
dec
inc
std
test
fsts
fcoml
sub
lahf
lgs
jno
pop
xor
divb
mov
sub
or
lret
xorb
mov
out
sbb
test
scas
push
insb
js
add
lret
sbb
stos
test
mov
lcall
stc
idivl
push
add
mov
icebp
pop
sbb
pop
mov
mov
ja
out
cltd
cmp
or
or
adc
xchg
sbb
xchg
iret
push
pop
inc
loopne
das
cmc
insb
insl
xchg
int3
mov
in
xchg
or
sbb
and
pop
addr16
out
push
push
jb
data16
adc
cmp
imul
mov
sub
xor
adc
jmp
dec
sub
data16
dec
rcll
fcoms
rep
out
mov
cmpsb
lret
xchg
sbb
lret
pop
cmp
mov
sbb
scas
xor
lahf
and
andb
mov
pop
sbb
aad
fwait
sti
sti
icebp
loop
xchg
add
in
sti
and
mov
mov
jne
out
mov
jp
or
movsb
fdivr
and
adc
jmp
or
pop
pop
lods
fsubrl
jnp
sub
sbb
mov
stos
cld
mov
jae
jle
or
xlat
jnp
pop
pusha
cmp
push
jb
lods
mov
push
push
mov
dec
or
mov
jl
test
lods
pop
dec
sbb
xchg
insl
movsb
xchg
cmc
push
stc
fwait
aam
xor
rol
cmp
enter
push
jle
or
in
out
xlat
lds
lea
push
ret
mov
mov
mov
fadds
pop
cwtl
inc
ficoml
aaa
in
xchg
cmp
ret
out
mov
add
add
mov
dec
jge
push
test
add
int3
lret
jecxz
jbe
dec
xor
push
lea
clc
jle
xor
shrl
lcall
addl
xchg
fisubl
loopne
dec
xor
jno
sub
push
lahf
jae
sub
dec
adc
insb
dec
mov
out
out
mov
cmp
pop
jo
mulb
push
xchg
les
inc
sbb
sbbb
call
lea
xor
inc
testl
fists
sub
cwtl
mov
lods
icebp
out
jecxz
test
adc
cmp
out
mov
mov
mov
data16
inc
stc
ja
cs
out
inc
and
jg
lods
inc
push
xlat
add
es
and
sub
fdivl
mov
popa
dec
push
clc
int3
test
out
stc
pop
cmp
add
call
push
inc
mov
push
pop
jg
jb
popf
inc
cli
inc
xor
das
je
sbb
ret
jl
mov
xchg
mov
add
pop
xorb
and
jnp
dec
and
insl
xchg
mov
xor
int
add
xchg
and
cmp
push
mov
arpl
sbb
or
addr16
fisubs
push
gs
loope
jge
addr16
jbe
nop
andb
fidivl
out
or
inc
push
jnp
push
xchg
pop
xlat
lods
icebp
fisubrl
in
jns
jg
sbb
mov
xchg
dec
mov
mov
xchg
cmp
scas
push
bound
rclb
dec
ja
xor
stos
xor
cmp
sbb
in
xor
pop
inc
push
push
mov
sub
adc
lret
popa
xchg
out
orl
aad
addr16
pop
sahf
inc
rorb
dec
rcrl
jecxz
inc
jge
xchg
mov
xchg
or
and
sbb
loop
push
fldcw
mov
int3
loope
xlat
call
xor
rorl
inc
xchg
mov
push
xchg
outsl
dec
and
or
enter
rcll
push
pop
imul
addr16
adc
push
rclb
das
pop
loope
xor
sbb
dec
dec
addl
mov
aas
and
int3
xor
lds
sub
je
or
mov
pop
outsl
xor
call
jecxz
pop
dec
jnp
jge
rcrb
xor
push
mov
cwtl
xchg
jns
mov
add
and
jbe
ret
push
aam
loope
mov
fucomip
dec
xchg
loope
test
in
cmp
or
data16
insl
sarl
dec
adc
xchg
add
lods
xchg
mov
les
int
push
test
scas
jne
loop
test
mov
mov
andb
aas
popf
jle
push
sti
push
sbb
outsl
leave
into
fmul
movsb
das
or
mov
cmpl
fneni(8087
inc
loopne
rorl
cmp
test
inc
dec
mov
scas
pop
xlat
enter
mov
fadds
jmp
cmp
sub
cwtl
xchg
xor
pushf
std
mov
stos
jg
je
or
mov
mov
out
sbb
push
cs
push
jp
pop
ja
adc
push
jmp
cwtl
push
fstpl
in
ret
push
mov
outsl
sbbl
push
or
mov
sti
cwtl
adc
test
out
fildll
rcll
xlat
mov
push
outsl
sbb
or
mov
std
dec
addl
iret
cmpsl
testb
aad
ss
and
test
scas
movsb
adc
icebp
dec
xchg
enter
stc
sarl
mov
dec
dec
push
or
xor
xor
cmpsl
stos
sub
fcompl
arpl
cmpb
les
test
cmp
add
or
lock
cmpl
inc
in
xchg
pop
iret
xchg
aas
or
pop
fwait
adcb
imul
push
leave
and
shr
mov
je
mov
lods
div
outsb
das
and
out
aas
loop
inc
mov
pop
out
push
pop
inc
xchg
mov
cmp
dec
out
loop
addr16
aam
xor
push
daa
aas
inc
adc
das
mov
idivb
cmpsl
je
ds
mov
jmp
jge
aad
int
jp
inc
aaa
xchg
sbb
iret
or
xchg
ret
pop
hlt
mov
cmp
clc
mov
mov
mov
jnp
jne
mov
mov
lods
mov
mov
pop
pushf
dec
or
ror
xchg
push
add
sub
scas
pop
fs
dec
add
push
popa
pushf
adc
inc
xor
idivl
xor
xor
dec
push
fmull
rclb
jmp
test
push
mov
xor
jae
fstl
jno
jae
aas
adcl
pop
cmp
push
cwtl
mov
aas
or
xchg
ss
jecxz
cmp
lds
sbb
inc
scas
cltd
xchg
push
into
icebp
inc
movsb
pop
ret
out
lock
lret
pop
fsubs
mov
mov
popf
sub
aam
and
ret
clc
pop
scas
mov
push
adcb
test
adc
imul
dec
dec
add
sbb
push
je
sub
cwtl
push
sub
dec
and
sbb
mov
sbbb
push
stos
pop
ljmp
xor
dec
mov
mov
add
pop
ljmp
jp
or
lret
outsl
popf
inc
scas
subb
pop
pop
xchg
hlt
ret
out
adc
adc
push
ljmp
pusha
inc
xchg
inc
push
sub
pop
loope
loopne
aas
lods
mov
ficoms
lods
aaa
inc
int3
in
dec
sub
inc
jbe
lret
jae
inc
js
cmpl
call
and
push
and
dec
movsl
mov
sub
andb
std
mov
inc
js
ljmp
cmp
das
pop
mov
bound
push
sub
sarb
divl
cmp
fnstsw
jle
fmulp
push
adc
jmp
xchg
sub
adc
mov
addr16
std
pop
movsb
lods
fimull
xchg
cmc
inc
inc
pop
mov
sarb
inc
sub
pop
out
cld
addr16
add
inc
leave
dec
sub
lret
inc
test
push
sbb
push
push
jnp
mov
pop
push
dec
or
push
loopne
ds
and
add
mov
js
arpl
cmp
cli
jb
cli
jle
dec
dec
test
lret
and
mov
sbb
push
bound
jnp
cmp
mov
call
decb
jge
adc
fisttps
insb
hlt
fisubl
xor
push
or
inc
xchg
jmp
mov
mov
xor
outsl
jae
imul
xor
mov
dec
roll
popf
mov
push
lock
xorb
or
cli
or
mov
outsb
mov
enter
fnsave
movsl
icebp
xchg
add
mov
mov
jb
ss
sbb
test
scas
mov
push
xchg
loope
cmp
lds
in
xchg
pop
adc
flds
adc
clc
pop
shr
pop
iret
frstor
mov
fisttpl
ret
pusha
or
out
out
push
stos
mov
lds
outsl
incl
push
inc
in
imul
cmpb
push
adc
sub
pop
dec
hlt
jns
inc
cmp
mov
push
xor
inc
inc
int3
inc
lea
lods
and
xchg
ljmp
xor
cmp
fwait
adc
imul
xor
leave
inc
mov
ja
push
stc
adc
bound
add
mov
aaa
std
lock
mov
sub
rcrb
outsl
xor
dec
mov
push
mov
dec
stos
orb
mov
and
sti
jge
call
pushf
sub
shlb
mov
mov
xchg
test
andl
cmpsw
xchg
jns
mov
loop
lock
cs
mov
add
popa
jbe
lods
fimuls
jno
stos
fwait
sbb
and
out
subb
and
add
xchg
test
daa
and
shlb
fidivrs
xchg
jns
fimull
popf
fldl
cmp
push
out
adc
jp
repz
inc
ret
jg
clc
xchg
xlat
popf
inc
jecxz
pop
fdivrs
jge
shll
xor
out
pop
xchg
je
dec
cltd
sahf
lods
and
fnstsw
mov
dec
fbld
sub
call
mov
or
int
outsl
shl
loope
pop
mov
add
push
mov
test
je
or
gs
or
pop
lahf
fwait
jo
mov
mov
popa
mov
inc
push
sbb
adc
mov
inc
sahf
or
pop
or
dec
in
lsl
addl
jmp
les
and
mov
loope
in
push
xchg
addb
jno
jg
push
je
pop
and
lahf
int3
jae
movsb
dec
push
inc
dec
jmp
or
xor
mov
push
push
or
out
addr16
jbe
mov
sbb
or
sub
loopnew
mov
pop
dec
inc
popf
pop
sub
mov
sbb
jle
mov
sarl
inc
add
leave
dec
sbb
movsb
xchg
out
shrl
xchg
adc
rep
xorb
inc
into
ficompl
push
mov
xchg
into
sub
mov
stc
imul
and
dec
aad
inc
mov
push
jb
mov
and
jno
xchg
cmpsl
push
sarb
sbb
ucomiss
jno
jl
mov
shlb
cmpsl
mov
mov
push
mov
push
clc
sbb
mov
jb
rcll
mov
inc
clc
cmpsb
inc
fisttpll
fidivs
mov
cmp
cmc
pop
lock
cli
test
inc
xchg
mov
push
lock
int3
xchg
dec
mov
inc
or
or
aaa
xchg
and
call
or
in
mov
mov
je
xor
xchg
dec
xor
mov
dec
jno
dec
lea
inc
push
adc
leave
filds
fdivrs
repz
jb
push
rolb
sub
aam
cltd
jle
inc
cmpsl
repz
jle
mov
sbb
aam
xor
int
lcall
sbb
mov
xchg
int
fwait
scas
aad
pushf
xchg
inc
and
push
sbb
iret
icebp
and
mov
pop
in
sub
lahf
dec
pop
mov
dec
dec
inc
in
out
xchg
cmp
pusha
test
out
cs
fldcw
bnd
mov
and
call
in
ficomps
xchg
jno
mov
cmp
sbb
in
sahf
loopne
pop
pop
fs
scas
pop
out
xchg
dec
mov
fucomp
sub
jp
frstor
inc
fwait
jns
nop
ret
xchg
inc
repnz
dec
mov
in
in
mov
fdivrl
addr16
iret
nop
jb
xor
aaa
out
outsl
sbb
xchg
mov
push
incl
mov
flds
mov
pop
lock
fucomi
or
mov
mov
push
sub
adc
jns
ss
outsb
adc
adc
or
xor
lods
xchg
outsb
dec
iret
cmp
pop
aad
mov
mov
pop
add
lret
and
jl
cmc
ret
imul
scas
dec
ss
cmp
sbb
xchg
insb
or
aad
out
lret
fimuls
xor
popf
and
adc
hlt
fs
sbb
inc
scas
pusha
das
sub
xchg
sti
jbe
mov
fchs
sbb
mov
xchg
cmp
adc
call
into
or
mov
mov
inc
iret
mov
xor
outsl
orps
xor
push
add
sbb
cmpsb
movsb
pop
xchg
daa
mov
and
or
adc
not
push
fld
xchg
jp
xchg
scas
adc
cmp
mov
aad
jl
inc
bound
out
mov
filds
jge
mov
mov
cwtl
imul
mov
adc
pop
ljmp
iret
mov
adc
and
add
sbbb
daa
ljmp
mov
xor
divb
mov
jg
lahf
inc
cmc
stos
xchg
loope
leave
sti
mov
test
xlat
cs
test
xor
out
jb
or
loopne
adc
sbbl
inc
push
or
jmp
or
jmp
shrl
push
pop
scas
push
fisttps
push
fldln2
mov
lret
mulb
xchg
add
mov
inc
dec
data16
cmp
ror
lret
fldl
in
sub
jmp
lahf
inc
sub
shlb
inc
incl
lds
or
cmp
outsl
jns
jne
loopne
lea
jbe
ds
sbb
and
in
or
dec
es
iret
lret
sub
inc
sub
or
cmp
adc
lods
or
or
mov
inc
adc
outsb
imul
cmp
jno
add
push
dec
js
fldt
cltd
imul
pop
hlt
lahf
jl
and
shrl
repnz
cmpb
cmc
jle
repnz
xor
add
pop
test
pop
repz
sub
xchg
cmp
scas
jl
add
lcall
sub
xor
movsl
mov
jmp
aaa
cmpsb
sbb
es
fidivs
fsub
incl
loopne
cmp
fldcw
mov
insl
lock
jnp
dec
pushf
test
push
pop
test
imul
mov
push
adc
adc
xchg
aad
lret
aas
mov
test
push
inc
imul
sub
cltd
push
not
sub
scas
push
push
fadds
xchg
popf
popa
and
add
add
jl
loop
xchg
cld
add
popf
pop
imul
inc
mov
adc
xlat
mov
inc
mov
mov
out
pusha
jecxz
dec
mov
movsb
push
push
outsl
push
adc
xor
mov
cld
aam
jns
loop
sbb
das
cmp
out
cld
sub
mull
xor
shlb
cmp
or
sub
cmp
enter
push
in
call
push
mov
mov
rcrb
ficoms
xorl
and
rcll
mov
dec
sbb
dec
dec
mov
pushf
xchg
sub
cmpsb
mov
xor
xchg
push
mov
push
inc
in
mov
cmp
or
mov
out
lret
shlb
and
rcrb
xor
dec
mov
xchg
insl
orl
and
dec
stos
dec
in
je
adc
filds
cmp
mov
enter
lret
test
in
xchg
inc
ret
and
xor
lods
jge
test
in
fcompl
inc
inc
pop
sti
loope
jl
enter
jmp
push
ds
mov
pop
imul
push
mov
sub
push
aad
jl
jae
imul
sub
dec
pop
mov
mov
xchg
sbb
in
sti
out
fs
xchg
cmp
push
xchg
inc
ret
mov
add
push
add
dec
xor
dec
pop
or
cmp
mov
mov
inc
sti
cmp
shlb
std
adc
out
inc
cmp
jo
mov
dec
and
fstpt
inc
sbb
ds
cltd
mov
xchg
sti
iret
jle
or
sbb
and
jg
daa
xor
icebp
dec
mov
cmc
mov
out
dec
orl
cmp
mov
repz
cmp
pop
mov
incb
rcrl
dec
stos
sti
out
jle
xchg
test
hlt
popf
mov
pop
or
pop
ret
jmp
das
div
mov
and
imul
inc
nop
dec
jne
icebp
lods
lea
imul
xchg
xchg
sub
push
rclb
mov
mov
dec
test
or
push
ret
jns
and
repz
jge
sbb
test
xchg
dec
cs
push
sub
and
add
xor
sbb
cwtl
push
pop
push
jmp
stos
add
shrb
sbb
push
test
xor
mov
sbb
or
testb
and
mov
mov
loop
mov
pop
pop
sub
lea
ret
xor
shl
and
jns
cmp
cwtl
iret
mulb
daa
iret
cwtl
mov
mov
insb
insb
ss
and
push
aas
ret
jb
fdivrs
cmp
mov
or
add
inc
rorl
cs
mov
inc
loop
jae
pop
int
arpl
dec
cmovb
mov
and
mov
push
adc
mov
push
xor
push
roll
ret
loope
mov
xchg
mov
gs
mov
push
ret
frstor
dec
add
dec
inc
jo
push
jbe
mulb
sbb
xchg
mov
cmp
mov
or
sbb
pop
sub
xlat
in
addr16
or
sbb
int3
jnp
aas
iret
mov
push
ret
pop
jo
shrl
add
mov
xchg
add
mov
cs
or
insb
das
imul
mov
das
or
shrl
sbb
push
inc
add
adc
inc
in
cmpsl
outsb
movsl
sti
imul
mov
lds
inc
rcrl
arpl
jp
popf
orb
cmp
cmp
es
mov
push
fsubl
iret
push
xor
inc
mov
outsb
mov
mov
cmp
push
or
cmc
imul
in
test
jno
movsl
sub
xchg
mov
pusha
test
rcll
sti
add
sbb
mov
and
fldt
test
jno
or
or
mov
push
ljmp
mov
inc
pop
ror
mov
test
bound
cwtl
fwait
idivb
stos
add
and
jle
scas
or
adc
lret
sub
inc
xor
mov
cmp
dec
pop
fsubr
sbb
mov
loopne
jmp
adc
clc
bound
lret
sub
jbe
mov
mov
inc
fnstenv
lahf
cmpsl
pop
loope
rorl
mov
adc
mov
loopne
pop
mov
je
test
jns
jno
shlb
push
prefetch
addr16
jge
cmp
cmp
inc
jecxz
insl
pmuludq
xor
leave
add
popf
sbb
and
sbb
add
fdivr
push
xchg
leave
or
lods
and
jmp
sub
das
add
int3
shrl
icebp
jle
out
mov
daa
pop
sbb
fs
add
iret
pop
sub
test
dec
add
movsl
jp
repnz
sub
push
pop
fimull
jbe
sti
cmp
cmp
dec
push
pop
push
sbbl
mov
sbb
cmc
bound
sub
jb
mov
mov
xchg
inc
mov
cmpsb
in
test
adc
sbb
subb
xor
or
ret
aad
scas
psubsb
or
or
inc
xchg
test
sbb
cmp
and
std
loope
sbb
imul
mov
and
pop
into
js
test
cmp
out
push
mov
enter
jge
xchg
int3
popf
andb
dec
xor
sbb
out
ror
stos
scas
jl
rorb
cmpsl
mov
pop
enter
push
insb
pop
aaa
data16
adc
std
int
loop
adcb
jmp
aas
aaa
jb
pushf
xchg
shrl
mov
mov
sub
rcrb
mov
xchg
fstps
insl
lcall
test
cld
mov
outsl
jle
jo
add
in
ret
mov
xchg
cmp
mov
cmp
fsubrs
mov
adc
sbb
test
or
pop
jb
es
jns
pop
add
pop
inc
adc
xchg
je
mov
int3
int
jmp
inc
sti
mov
dec
in
push
or
lret
mov
pop
xchg
or
pop
std
jb
adc
pop
ds
jae
mov
cmp
mov
push
imul
adc
cmpsl
mov
cmp
jmp
repz
aas
push
and
aaa
push
and
aaa
mov
and
jns
sbb
dec
sbb
mulb
out
pop
enter
jno
sub
arpl
repnz
bound
leave
push
add
mov
dec
out
popf
popf
and
std
and
shrb
inc
pop
mov
sub
int
test
mov
jmp
stos
adc
mov
dec
cltd
and
push
adc
fldcw
iret
dec
push
mov
pusha
and
ja
insl
mov
and
push
into
xchg
push
xchg
add
pushf
ds
mov
cwtl
xchg
pop
ljmp
jp
ficomps
repnz
imul
xor
push
cmpb
lock
nop
cwtl
pusha
xchg
int3
add
pop
cmp
repnz
mov
xchg
hlt
iret
push
fidivs
sub
movsb
cmp
jge
jae
or
jmp
nop
iretw
push
sbb
sbb
push
push
add
sbb
mov
push
pop
or
insb
dec
mov
lock
jecxz
mov
xchg
sbb
out
daa
xchg
dec
mov
popa
pop
xchg
addr16
push
fisubrs
mov
mov
cltd
out
inc
gs
pop
outsb
and
iret
pop
cmc
scas
ja
into
in
insb
xchg
imul
repz
sbb
nop
out
jle
mov
gs
dec
dec
cli
movsb
xor
loop
mov
inc
mov
out
mov
xchg
jb
filds
fisubrs
jae
push
xor
push
dec
mov
push
mov
popf
inc
xchg
mov
jecxz
mov
pop
cs
xor
push
mov
mov
inc
add
mov
xchg
negl
data16
loope
cmp
push
outsl
mov
cmp
mov
push
shrb
out
lret
xchg
lea
jne
xor
sub
mov
andl
lcall
cmp
stc
data16
addr16
fisttps
push
sbb
cvtdq2ps
jns
xor
sbb
add
xchg
xchg
nop
int
fbstp
xchg
out
xchg
mov
sub
cs
lret
arpl
xchg
addr16
cmpsl
mov
jb
jno
cmpsl
adc
out
push
xchg
outsl
enter
lahf
out
or
inc
sbb
pop
push
and
mov
test
lcall
add
push
sbb
ds
into
xchg
mov
lea
nop
dec
or
cmp
mov
ljmp
xchg
xchg
xchg
js
jno
insb
mov
sbb
rcr
sbb
xchg
loope
adc
dec
pop
je
and
test
jns
mov
fs
adc
jns
inc
cmpsb
and
jp
jge
jge
or
mov
inc
fldcw
pop
dec
push
inc
int
push
lahf
jl
scas
addr16
cltd
scas
and
shrl
and
dec
jne
or
out
push
cmp
cmpsl
and
js
mov
inc
fadds
pop
fs
jg
adc
cmc
inc
pop
jg
std
pop
fs
mov
addl
mov
arpl
out
push
loop
or
add
je
xchg
movsl
xor
iret
cmp
pop
cmp
insb
int3
adcl
hlt
mov
xchg
sbb
pop
jnp
int3
mov
sbb
push
adc
cmpsl
jae
fadd
daa
jnp
int3
cmpsb
xchg
xchg
movsl
xor
mov
stos
push
xchg
xor
cltd
sbb
popf
out
test
mov
mov
or
test
insb
test
cli
pop
rcl
int
cs
mov
mov
adc
testb
cmp
mov
and
pop
xchg
lret
xchg
xchg
xchg
cld
in
call
sbb
jle
leave
push
iret
xlat
push
adc
hlt
adc
xchg
xchg
mov
xor
cmp
adc
pop
mov
roll
fldt
repnz
adc
insb
lea
cmpsl
lahf
jl
rolb
lds
fldl
pop
incb
xor
pop
xor
jo
xor
inc
add
repnz
mov
lock
movsb
push
jnp
push
ss
add
je
inc
inc
insb
in
inc
in
je
addr16
cwtl
lock
icebp
dec
add
loope
faddp
cltd
dec
iret
mov
cs
lret
mov
mull
lret
popf
push
dec
ja
ficoms
decl
sbb
pop
andl
pop
test
xor
nop
inc
mov
lock
cmp
adc
add
and
and
fwait
pop
lcall
jmp
mov
movsb
jg
aad
lods
add
imul
in
inc
jg
pop
push
insl
call
push
xchg
or
cltd
andl
bound
jns
dec
dec
jge
mov
in
addr16
les
jmp
fs
pop
push
mov
gs
sub
icebp
aas
lock
cmp
mov
rcl
dec
cmp
or
fildll
xlat
pop
out
mov
inc
add
push
adcl
jmp
int3
xor
sbb
pushf
shlb
sbb
xchg
decl
outsb
or
clc
data16
sti
test
pusha
pop
scas
cmpsb
fsubrp
filds
fcmovnb
mov
das
faddl
imul
in
mov
imulb
mov
pop
lds
sarl
mov
aaa
mov
cli
adc
scas
fs
std
or
sti
jge
gs
les
mov
and
lds
popf
int
mov
mov
mov
mov
out
aam
or
jecxz
icebp
mov
inc
scas
push
and
adc
mov
adc
and
fistpl
jl
inc
inc
movsb
push
and
mov
jle
ret
cmp
fwait
notb
mov
push
scas
testb
mov
aas
sub
outsl
ret
pop
fnstcw
cmp
sbb
in
push
cmpsl
pusha
dec
adc
in
outsb
xor
push
out
addr16
hlt
xor
imul
inc
test
push
in
sbb
repz
xor
adc
jno
cld
push
mov
or
shrl
cmp
mov
hlt
xchg
icebp
push
jo
push
mov
lret
addr16
mov
adc
shr
fdivs
scas
jbe
sbb
mov
test
xchg
inc
lods
outsl
daa
sub
mov
ja
es
scas
adc
sbb
lcall
fimuls
loopne
dec
cmp
stc
add
mov
cmp
mov
rcll
pop
das
mov
fistpl
negl
lcall
rorb
add
std
vcvttpd2dqy
bound
inc
shll
push
adc
std
mov
mov
xor
jb
push
imul
test
mov
scas
xchg
lods
ret
dec
or
or
cltd
pop
addr16
call
or
mov
mov
or
fnstenv
and
xrstor
test
test
pop
mov
dec
in
xchg
loope
cwtl
cmp
je
cmp
clc
iret
int
mov
cld
repz
dec
pop
popf
sahf
sahf
xor
add
iret
rorl
bound
cmc
shlb
mov
xor
sahf
or
mov
jae
into
loopne
inc
xchg
push
xchg
add
test
bnd
fld
adc
jnp
or
scas
nop
outsl
cltd
mov
push
sub
cld
jno
out
push
jl
pusha
mov
sub
xchg
out
xchg
ljmp
adc
mov
and
in
fmulp
lahf
push
cmpb
mov
adc
pop
call
sbb
scas
xor
pop
testl
idivb
xchg
mov
push
fnsave
inc
mov
jns
cmp
ds
push
popf
lock
jo
out
mov
into
cmp
js
mov
es
push
jge
sti
push
mov
pop
shrb
leave
dec
push
mov
adc
std
ss
roll
xchg
pop
nop
pop
adcl
orl
lea
cmp
iret
adcl
push
push
cmp
push
iret
xchg
andb
push
movsb
bound
and
sub
adc
pop
ret
rcll
jle
mov
add
loope
add
xchg
mov
adc
test
xchg
fnstenv
inc
test
aas
cmpsl
rorl
mov
or
pop
in
cmp
xchg
mov
shr
jno
in
rcrb
lds
inc
popf
out
add
jge
bound
outsl
call
cwtl
push
fidivrl
mov
test
test
cmp
std
xor
lahf
js
cmc
mov
mov
arpl
pop
and
mov
and
pop
fstps
add
mov
fst
mov
mov
out
mov
push
dec
pop
outsb
mov
push
pusha
pop
pop
orl
ds
lret
xchg
push
and
call
jmp
add
jbe
push
mov
xchg
cmp
cmc
xor
push
xor
add
xchg
xchg
add
aaa
jmp
in
dec
test
leave
pop
movsl
out
add
add
mov
cltd
xchg
mov
mov
lods
cmp
push
inc
sub
cmp
ds
mov
cmp
pop
mov
ja
xchg
popf
dec
popa
pop
pop
and
hlt
mov
lcall
jo
sbb
sbb
adc
daa
fwait
das
xchg
repz
xor
cmp
pop
stc
mov
ja
rcl
in
and
fsts
xchg
gs
test
out
shr
mov
pushf
ja
cmpsl
in
mov
push
repz
test
adc
lea
iret
fs
shl
lods
fidivrs
pop
xchg
push
gs
push
test
pop
adc
outsb
pop
mov
sbb
in
pop
shrl
add
adc
mov
xor
popa
and
ret
add
int3
rcl
pop
mov
jge
pop
int
jmp
ljmp
js
cmp
or
out
inc
stos
pop
andl
sub
les
insl
mov
pop
cmp
es
out
out
sub
jns
xor
and
hlt
out
xchg
stos
push
jnp
xchg
leave
sbb
adc
lret
into
outsb
push
adc
jmp
jno
cld
cld
sbbl
out
loope
mov
mov
call
leave
pop
xchg
adc
out
jecxz
sub
push
adc
push
or
add
xchg
test
and
dec
add
and
pop
lods
pop
inc
sub
es
ja
test
les
add
fisubrl
xchg
pop
sub
sub
inc
stos
mov
push
jne
lock
adc
ss
mov
daa
jo
mov
jo
mov
mov
mov
bswap
in
jmp
fbld
adc
lods
pop
dec
cmpsb
or
repz
ljmp
mov
arpl
sub
pop
std
inc
or
decl
out
dec
dec
lock
call
jmp
in
jnp
lods
sbb
stos
dec
pop
jge
sbb
jge
xchg
and
leave
es
jecxz
sbb
push
loopne
mov
pop
mov
pusha
aaa
cmp
fldl
call
dec
lcall
in
push
mov
sbb
mov
sbb
fs
jl
push
push
mov
ret
jge
repz
rorl
adc
mov
ss
mov
pop
faddl
inc
andl
mov
jmp
imul
cwtl
inc
xor
dec
sti
adcb
repnz
xchg
pop
test
and
dec
add
daa
inc
adc
das
mov
adcl
andb
pop
sarb
add
cltd
dec
outsb
test
and
sbb
and
aad
imul
lret
int3
jnp
mov
mull
ss
xor
pop
ret
inc
aam
pop
pop
lahf
imul
pop
push
ret
lret
iret
lds
push
xchg
mov
pushl
xor
into
out
jecxz
aaa
imull
xor
xchg
clc
mov
xor
mov
in
xchg
jle
xor
add
movsl
scas
sub
repz
dec
icebp
inc
pop
xchg
pop
cmpsb
cltd
sub
inc
pop
mov
int
scas
je
jae
sbb
mov
popa
and
in
push
test
or
mov
xchg
popa
loope
fisubrl
pop
and
pop
jmp
cmp
jns
scas
dec
iret
arpl
popf
popf
sub
cmpsl
jle
mov
js
pop
scas
cmpps
jbe
mov
in
incb
fnsave
dec
or
cmp
sbb
pop
xchg
inc
add
jo
mov
loop
lret
push
repnz
adcb
cmpsb
mov
push
xchg
xor
lods
or
repz
mov
inc
lods
and
and
test
pop
aam
jo
shll
es
faddl
xor
pop
mov
jns
cmc
je
or
enter
push
lret
nop
mov
mov
je
mov
add
and
fcoms
pop
lds
jecxz
lret
in
icebp
push
rolb
mov
cmp
sbb
arpl
pop
pop
imul
push
adc
inc
pavgw
inc
lods
lock
pop
xor
cs
push
mov
test
repz
ss
xor
push
in
jle
inc
stos
test
inc
dec
xchg
jp
aam
lock
lret
xor
xlat
jnp
push
jns
imul
mov
push
mov
mov
mov
or
dec
jnp
mov
xor
ss
jne
jno
jns
xchg
in
add
pop
hlt
sbb
jo
dec
loop
sub
mov
xchg
test
faddl
aas
dec
test
sub
push
add
fists
mov
js
dec
push
scas
add
lcall
mov
xchg
sbbl
ds
out
inc
mov
fwait
mov
mov
and
xor
mov
daa
jg
mov
nop
jb
push
and
sub
ficoml
xchg
cld
cmp
adc
dec
lods
lret
clc
sbb
sub
push
mov
jne
outsb
mov
xchg
aaa
xchg
pop
ror
stos
mov
inc
sub
xchg
fldl
push
lcall
or
pop
xchg
add
mov
jo
imul
or
daa
testl
mov
icebp
cmp
xor
xchg
mov
sti
xlat
insl
std
push
mov
adc
inc
test
and
inc
push
sahf
xchg
sub
inc
adc
and
mov
cli
popl
or
add
aaa
lret
loop
stc
pushf
filds
inc
adc
sbb
sub
xlat
cmp
mov
xor
adc
icebp
cwtl
adc
inc
out
int
jb
jmp
jnp
push
sahf
sbb
jo
and
lret
cmp
cltd
xlat
ljmp
xchg
mov
lods
jge
xor
push
mov
pop
sbb
or
pop
xor
clc
jb
ret
add
enter
or
lods
mov
mov
cli
aam
and
aaa
cwtl
push
leave
mov
push
and
aam
inc
out
xor
incb
xor
adc
mov
xchg
sub
mov
pop
scas
sarl
cmp
cmp
rcr
dec
ret
div
testb
jnp
adc
mov
ja
mov
and
xchg
sbb
adc
jecxz
xchg
xchg
hlt
sbb
movsl
mov
pop
fsubrl
or
daa
mov
popf
int
inc
jb
push
into
jbe
mov
test
ljmp
jo
hlt
xchg
jb
movups
aaa
in
pop
icebp
in
push
scas
fbstp
inc
fistl
mov
ja
sbb
jp
cmp
dec
xor
popa
ss
shlb
inc
mov
dec
movsl
lods
imul
fldt
and
shl
mov
sbb
fcmovu
pop
arpl
dec
mov
es
popf
ret
pop
xchg
jmp
clc
pop
and
xchg
dec
sub
dec
and
arpl
lcall
leave
movsb
lods
adc
stos
addr16
dec
sbb
mov
pop
push
gs
mov
and
sbb
shrb
and
add
popf
mov
in
out
pop
or
iret
cld
adc
mov
lcall
or
pusha
xor
addb
pusha
push
out
shlb
push
enter
jns
xchg
sub
xchg
into
add
pop
fisubrs
pop
mov
xor
mov
mov
xchg
jno
enter
out
pop
dec
lea
adc
mov
flds
rcr
adc
sub
nop
aaa
jne
pop
mov
lods
lea
insb
aad
fstps
push
inc
or
mov
dec
fldl
nop
popf
xchg
dec
xchg
adc
mov
jo
js
outsb
mov
mov
out
dec
subb
push
imul
push
dec
adc
or
scas
and
add
adc
test
push
mov
out
leave
push
push
add
pop
out
inc
sbb
das
jae
lods
push
sub
xor
shll
stc
jmp
aaa
or
loop
icebp
dec
pop
push
popa
dec
or
test
rcr
jg
pushf
imul
insl
and
jl
fisubrs
mov
dec
push
mov
dec
sub
daa
gs
xchg
out
imul
ds
mov
pop
sbb
xchg
jg
mov
call
lret
shr
jmp
and
push
enter
adc
lods
ja
sbb
dec
aaa
sbb
and
sbb
bound
fwait
mov
imul
add
cmp
mov
pop
iret
test
mov
lea
sub
iret
pop
insb
fisubrs
ret
sarl
adc
lahf
rcrl
ja
xor
ljmp
std
lcall
dec
jl
ret
adc
and
xchg
addr16
roll
gs
ret
push
fcomps
sarl
mov
mov
add
sti
and
cld
imul
cli
in
jl
push
or
mov
dec
xchg
jo
loope
test
fidivl
cmp
and
mov
and
or
out
lds
inc
neg
cmp
shll
add
mov
inc
dec
pop
pop
clc
cld
jle
mov
push
mov
jl
inc
cs
rolb
lds
xor
push
cmc
push
sbb
imulb
mov
shrb
movsb
fisubl
or
cmc
xor
popa
push
xchg
jbe
sbb
sbb
push
movsl
cld
jp
stos
cmp
or
ds
jmp
cwtl
add
ljmp
fiadds
clc
xchg
jnp
sub
pop
jle
ljmp
push
dec
fdivrl
and
mov
rorb
dec
dec
sarl
pop
mov
test
ret
sbb
pushf
mov
mov
inc
rol
adc
cwtl
fisttps
aaa
icebp
jmp
stos
int3
stos
inc
push
idivb
jo
sub
xchg
cmp
xchg
jbe
xor
arpl
jge
shll
jle
xor
xchg
test
adc
rorb
pop
dec
movsb
pop
repnz
test
inc
inc
jge
mov
cmp
out
fidivl
ljmp
inc
jecxz
pushf
sub
mov
and
loope
nop
jb
bound
sbb
aas
arpl
out
push
push
mov
mov
stos
mov
add
xlat
aad
cmp
jl
pop
xchg
mov
shlb
xor
sub
cmp
add
or
push
xchg
add
inc
jnp
mov
cmp
fists
jp
jo
clc
lret
sbb
adc
inc
jmp
test
and
repz
pop
xorl
sbb
xchg
pop
cmp
add
popf
sbb
out
pop
push
sysret
pusha
std
gs
cmpsl
xchg
dec
ret
pop
pop
leave
cmpsb
addb
lods
arpl
jbe
fisttps
mov
or
test
popa
addr16
out
fdivrl
and
or
fwait
lods
sarl
rcr
dec
xchg
xor
mov
insl
xor
push
test
hlt
cmp
inc
jne
or
bound
int
icebp
xchg
pop
or
dec
mov
aas
xchg
xchg
cmp
loop
jnp
andl
cmp
testb
mov
lea
imul
data16
das
repnz
xchg
scas
or
push
sbb
cmp
pop
les
push
adc
sub
mov
sub
lock
pop
pop
ret
jle
mov
sbb
loope
sahf
mov
loopne
imul
das
push
dec
cmp
mov
fisttpl
sar
jp
call
push
push
aam
adc
pusha
mov
stc
push
jle
pop
add
test
mov
test
fmul
inc
xor
imul
push
push
mov
xor
jae
bound
insl
mov
fnstcw
sub
sbb
stos
lock
dec
shlb
iret
xor
aaa
sbb
xchg
cltd
push
mov
mov
xchg
jo
pop
jno
call
or
pop
sub
lods
adc
out
adc
push
dec
loop
rcr
int3
es
sub
pushf
movd
fsubr
int3
orl
aam
imul
adc
adc
ljmp
xchg
cld
sbb
xchg
das
add
cs
or
inc
stc
or
jb
fmulp
jmp
loope
xorl
lock
mov
sbb
or
push
mov
addr16
pop
cwtl
jns
mov
mov
aaa
adc
inc
xor
push
dec
psraw
lds
pop
divb
push
pop
xor
mov
and
pop
fdiv
jno
dec
mov
push
dec
mov
dec
xchg
dec
xchg
call
cmp
es
ja
sarl
in
sbb
pop
xor
fmul
pop
fnstsw
scas
jnp
jns
mov
and
push
testl
enter
clc
xchg
shrb
mov
jo
jge
and
sbb
xlat
mov
orl
fcoml
push
xchg
adc
loop
xor
inc
mov
push
je,pt
and
movsb
add
jge
pushl
or
lea
das
test
dec
je
fistl
mov
imul
movsl
lret
pop
or
push
mov
cmp
test
jge
test
enter
dec
push
push
push
adc
xchg
sub
daa
and
hlt
mov
xchg
sbb
cs
fdivrp
lret
lret
fistl
mov
xchg
mov
in
lcall
jo
imul
push
pop
sbb
lret
pop
jecxz
lds
pushf
js
pop
insl
in
adc
fcompl
out
jno
je
push
subl
sarl
cli
dec
leave
pushf
sub
sti
mov
jg
loop,pt
mov
and
iret
sub
decb
pop
out
and
push
fists
and
mov
outsl
jne
jnp
fdivrs
fsubrl
in
shrb
insb
rcrb
dec
mov
sbb
pop
push
ljmp
dec
inc
inc
sub
test
push
out
lret
jl
or
enter
mov
dec
mov
mov
addl
in
or
enter
fnstcw
mov
xor
jge
xor
ficompl
sbb
mull
mov
adc
mov
cmp
add
test
lret
stos
icebp
das
repz
push
test
test
decl
loop
xor
test
push
pushl
fsubrs
mov
push
test
push
lods
cld
inc
jle
xchg
sub
and
std
pop
outsb
push
insl
jge
jnp
pop
lods
shlb
ja
dec
mov
add
jns
lret
sbb
pop
push
mov
int3
addr16
mov
rcl
jb
pop
cmp
stc
jae
xor
loope
lds
add
xchg
ret
pusha
dec
lret
mov
jge
shrb
test
roll
mov
sub
jl
dec
stos
int3
scas
jg
inc
jl
addr16
cmp
loop
adc
or
repnz
pop
adc
inc
dec
addr16
fdivrs
in
pop
sub
or
adc
jnp
das
add
ljmp
je
xor
push
pop
daa
pop
mov
sbb
mov
scas
add
into
lods
or
mov
push
sbb
jmp
mov
pop
aaa
pop
lret
dec
fiaddl
fsubp
fxch
aas
cli
imul
insl
sbb
pop
jl
jge
lret
push
jecxz
hlt
pop
neg
cmp
mov
aad
out
and
push
inc
inc
pop
in
mov
dec
xor
push
dec
repz
adcl
test
xor
xor
ret
cmp
add
and
out
je
scas
ret
xor
jb
js
stc
iret
pop
cld
sarl
imul
idiv
loopne
inc
lods
pop
clc
out
pop
ret
iretw
sbbb
add
push
and
jge
aam
mov
add
pushf
lcall
push
cwtl
push
sar
mov
jo
xorl
or
push
out
aam
xorb
add
lock
push
jns
jg
mov
xchg
mov
roll
sahf
xor
sbb
fisubrl
push
call
jle
mov
mov
jae
test
mov
sbb
stos
sub
pop
cld
mov
sub
fwait
jo
mov
xchg
or
mov
cld
in
subb
add
int3
lea
mov
and
mov
cmp
cltd
mov
cmp
fdivs
cmp
in
sbbb
or
pushf
jecxz
test
mov
ds
xor
mov
and
mov
jg
and
fcomi
push
xchg
add
imul
push
sub
sub
or
sub
push
aad
mov
iret
push
xchg
lahf
pop
mov
jae
mov
pop
mov
out
popf
pusha
mov
in
jle
popf
es
add
andb
dec
loope
adc
std
das
sub
cmp
addr16
je
in
gs
ja
mov
je
or
pushf
xlat
out
dec
cmc
push
jp
or
ret
inc
jl
cmp
cmp
lock
lret
in
outsl
rolb
push
ss
loopne
pop
in
add
sbb
sti
data16
cmp
je
inc
cld
cltd
aaa
dec
aas
sbb
in
xchg
mov
push
inc
out
sub
cmpsb
imul
outsl
sub
mull
lret
mov
sbb
adc
fstps
outsb
push
fcompl
sar
add
in
ret
lret
mov
mov
xlat
mov
sub
ret
daa
roll
out
iret
fnstcw
add
mov
mov
mov
jecxz
in
jge
ret
popa
pop
popf
cltd
sub
dec
lret
or
lds
aas
mov
add
repnz
sub
xor
movsl
mov
fists
mov
push
push
xchg
ret
inc
or
jg
sub
out
mov
dec
je
sub
cld
pop
dec
aam
mov
fcomps
xlat
sbb
cmp
sti
mov
cmpsb
scas
ljmp
pop
ljmp
repz
and
push
js
imul
push
notl
jno
fsts
test
shrb
imul
addl
loopne
rcr
push
add
je
add
repz
mov
or
mov
outsb
roll
leavew
sahf
cmc
lcall
jae
les
and
inc
xchg
stos
or
repz
sub
lds
dec
aad
adc
mov
cmp
sar
push
fsubrl
scas
pop
push
add
add
scas
addl
pop
jnp
jmp
repz
sub
inc
ret
lock
xchg
and
in
cmp
sub
or
and
adc
pop
push
xchg
aam
jp
sub
push
addr16
lahf
adc
addr16
inc
dec
push
jecxz
sahf
xchg
testb
xchg
xchg
and
enter
add
xchg
cli
mov
mov
movsl
into
mov
shlb
add
scas
mov
outsl
das
inc
fldenv
pop
nop
push
les
mov
mov
push
push
jmp
jne
push
and
cmpl
dec
aad
jns
mov
dec
cwtl
shl
push
mov
cmpb
out
in
push
adc
out
xor
fs
loop
mov
mov
push
movsb
lods
and
or
fldenv
cmp
pop
xor
scas
pop
stos
add
cmp
mov
out
fstl
jg
mov
sbb
outsl
mov
xor
add
movsb
lods
adc
sub
dec
xchg
xchg
dec
push
das
sbb
jl
les
push
inc
sub
push
jmp
inc
in
jge
lret
push
lods
push
add
out
and
push
pusha
stc
mov
int
pop
sub
xchg
into
and
daa
xchg
into
pop
and
sub
fldenv
clc
pop
sar
cmp
addb
lods
fistpll
push
cs
cmp
mov
lcall
sub
jl
or
mov
cmp
insb
mov
mov
cltd
cmp
mov
and
andl
ljmp
ret
sub
fs
push
js
mov
pop
pusha
mov
cwtl
push
das
icebp
add
bound
add
sbb
clc
xchg
repnz
push
and
add
adc
fwait
ret
aam
lods
mov
pop
and
vpshlw
xor
int3
loopne
icebp
imul
add
pop
mov
xor
pop
mov
inc
mov
fldcw
std
cmp
sub
fcomps
jno
dec
push
bound
iret
test
cwtl
ja
sbb
into
pop
in
cmp
mov
dec
mov
lods
dec
out
cmc
outsb
scas
aam
fnstcw
mov
popf
and
or
insl
fsubrl
cmpsl
je
js
and
pop
sub
cmp
and
jnp
ret
mov
dec
lret
adc
jmp
xchg
jne
push
mov
mov
xor
or
inc
xchg
outsb
loope
xor
loop
or
gs
push
cs
shlb
pusha
jecxz
clc
mov
popf
into
jecxz
insb
jns
imul
xor
shll
scas
int
sbb
sbb
mov
push
fisttpll
sbb
enter
out
and
xor
aaa
jns
push
mov
and
stos
push
inc
jl
cmp
cmp
adc
xor
mov
daa
fisttpll
xor
insb
mov
or
std
sub
fnstsw
cmpl
clc
mov
xor
clc
mov
popf
fdivrl
sahf
out
sahf
std
in
or
dec
outsb
mov
pusha
sbb
repnz
scas
push
stos
decb
enter
pop
dec
and
xchg
jg
and
mov
rorl
adc
cmc
or
or
xchg
push
pop
pop
add
mov
cli
jns
mov
lahf
sarl
bnd
adc
xor
insl
adc
push
xchg
xor
popw
sub
testb
pop
scas
cli
ds
test
push
mov
inc
in
jne
xchg
jb
adc
aad
inc
xlat
loop
lret
cmp
stos
inc
push
jb
cmp
pop
mov
mov
adc
mov
inc
push
repnz
les
int
push
jg
inc
int
fs
push
xchg
sub
pop
out
mov
call
jecxz
faddl
loope
fwait
pop
ss
clc
sbb
pop
cmp
inc
cmp
adc
push
flds
pop
testl
adc
aam
daa
mov
punpcklwd
dec
sub
adc
sub
je
mov
mov
mov
nop
xchg
xchg
repnz
jge
hlt
mov
aam
iret
xchg
fstps
dec
lcall
adc
pop
imul
push
arpl
or
push
std
aas
mov
jo
mov
out
leave
xchg
jo
push
mov
or
mov
mov
pop
mov
frstor
push
sub
cmp
sub
cmpsl
cmp
insl
fnstcw
push
lret
data16
xor
ljmp
cmp
filds
push
lcall
loop
ret
outsb
aaa
cli
jp
dec
jl
in
cmpsb
out
mov
sti
enter
inc
rolb
incl
mov
pop
push
popa
aad
dec
and
shlb
mov
insb
pop
jne
xlat
mov
pop
mov
sub
int3
xlat
sti
popf
dec
sbb
add
aaa
je
pushf
call
imul
iret
and
push
xor
mov
cmp
sub
scas
lods
or
sbb
lea
mov
out
mov
int
jo
jp
daa
sub
pop
out
and
and
shrb
sub
arpl
xor
ficompl
in
lods
add
iret
sbb
out
pop
lret
gs
iret
ret
rol
orb
iret
push
xor
cmp
lods
mov
adc
std
rcll
in
sbb
jle
sahf
mov
push
adc
dec
mov
int
pop
dec
movsb
pushf
pop
imul
cld
xor
xor
movsb
je
pop
xor
and
shlb
andl
inc
lahf
adc
fsubrs
jp
les
pusha
pop
out
idivl
clc
test
lods
pusha
mov
xchg
push
jnp
loop
mov
mov
jle
aam
lret
pop
xor
fcmovu
cmp
sub
dec
rcll
mov
mov
inc
inc
test
andl
bound
add
imul
fcmovnb
push
jne
pop
enter
jb
mov
add
xor
test
adc
mov
jnp
cmp
or
in
cs
jo
mov
aad
adcl
dec
fstps
insl
in
dec
sub
dec
mov
std
ret
pop
rol
cmp
aaa
rorl
gs
sti
pop
movsb
and
outsb
lods
das
jl
out
push
jne
lahf
mov
insb
mov
mov
pop
std
pop
sarl
clc
pop
adc
sbb
xchg
push
mov
dec
or
xchg
xor
cmpsl
inc
sub
pop
pop
xor
xchg
or
imul
lock
pop
push
ljmp
ret
dec
mov
push
jmp
pop
mov
movsb
push
add
movsl
dec
lret
or
stos
fisubl
ret
and
leave
lock
push
add
mov
add
xor
mov
lret
mov
add
into
jne
push
push
mov
aas
or
adc
enter
jo
xchg
push
leave
bound
popf
shrb
sti
cltd
je
stos
jnp
or
pop
mov
mov
cmp
ret
shrl
fmull
sbb
dec
shrl
in
mov
mov
js
jmp
outsl
jl
fdivrp
les
fdivrl
adc
mov
roll
adc
xlat
movsl
leave
or
aaa
dec
dec
mov
dec
sbb
mov
enter
jns
lcall
xchg
add
inc
shrb
mov
jo
push
fnsave
mov
sbb
test
fdivs
mov
sub
ds
and
gs
jge
ret
out
pop
loopne
xlat
data16
jo
mov
fdivrp
jmp
aas
jge
xchg
ds
xchg
fcompl
mov
push
sub
sub
jp
scas
dec
dec
stos
orb
mov
lods
push
imul
je
xor
fadds
xor
mov
shlb
bound
xchg
out
je
lcall
xor
jge
loope
mov
and
mov
xchg
cmp
xchg
cmc
bound
sub
popa
pop
lock
add
mov
push
mov
push
ljmp
ljmp
lods
insb
data16
jmp
adc
mov
push
in
aas
jno
das
push
subb
adc
sbb
xchg
subl
stos
pop
mov
scas
xchg
out
and
mov
mov
push
std
bound
cmp
xchg
repz
mov
pop
jae
ret
xchg
xor
mov
imul
cmp
movsl
mov
es
pop
outsb
sbb
test
dec
outsl
jne
nop
mull
mov
scas
mov
sub
cmp
in
pop
cmp
sub
or
orb
popa
enter
and
add
mov
pop
enter
clc
sbb
mov
cltd
lret
inc
dec
cld
jno
push
pop
ret
dec
sbb
jle
arpl
xchg
dec
into
cli
cmp
mov
push
out
call
mov
jbe
jp
add
lea
pusha
popa
mov
lods
jb
pop
push
inc
loop
push
ds
inc
mov
xlat
sub
enter
inc
icebp
rcrl
sbb
sub
mov
clc
sub
or
test
inc
out
lcall
cmp
dec
loope
in
mov
movsl
fimuls
jbe
addb
xchg
test
xchg
pop
jbe
pop
aas
xor
xor
or
das
fsts
xchg
movsb
xlat
mov
mov
pop
jl
in
mov
xchg
cld
jge
fwait
outsb
pop
mov
push
pusha
jp
jmp
cmp
inc
in
jg
sbb
add
adc
jecxz
cmp
scas
sub
inc
daa
paddusb
mov
pop
inc
dec
leave
sarl
cld
ljmp
xlat
enter
pop
loope
test
nop
and
add
insl
pop
dec
add
movsl
xchg
pop
std
imul
fldl
jb
mov
push
push
movaps
inc
sbb
mov
enter
mov
push
jp
fistpll
fwait
dec
es
push
mov
stc
fs
push
aam
dec
in
mov
and
popf
adc
out
dec
cmp
push
imul
fisubl
loopne
cmp
push
arpl
push
cmpsb
call
jmp
out
sarb
mov
inc
insl
push
and
adc
cmp
pop
int
cs
mov
repnz
jb
cmp
or
dec
ret
inc
jae
cmp
rolb
mov
mov
lret
jl
dec
add
fistpl
int
testb
adc
xor
jno
dec
add
in
xorl
fs
fiadds
or
les
sub
fstl
jle
movl
mov
cmp
xchg
sub
cwtl
dec
daa
cmp
call
ljmp
and
pop
scas
arpl
lods
pop
mov
and
orb
jge
lods
jae
xor
and
mov
ja
and
leave
xchg
mov
cmp
das
movsl
inc
stos
int3
sarl
jns
subl
sbb
loop
push
clc
stos
shr
mov
xchg
lcall
jecxz
or
sbb
or
hlt
jbe
fld
sti
pop
push
js
test
push
aam
push
mov
mov
pusha
or
push
and
pop
sub
add
cmp
cmp
or
fcomps
mov
jbe
push
pushf
pusha
xchg
pop
scas
mov
mov
int3
orb
cmp
sub
push
dec
leave
lods
dec
bound
pop
aaa
dec
mov
xor
lds
sbb
sbb
adc
pop
dec
cmp
aas
sbb
cmpsb
dec
push
ja
add
movsl
mov
and
frstpm(287
fcmovbe
pusha
jno
test
inc
in
ss
inc
pop
lahf
scas
outsl
ret
jne
jns
popa
adc
pusha
mov
push
mov
adc
lods
adc
stos
xchg
lods
mov
inc
pop
in
lahf
notl
das
out
aas
mov
and
outsl
aam
cmc
dec
stos
push
fsubp
add
add
pop
inc
add
mov
ret
push
stos
dec
idivb
loope
dec
add
pop
lcall
gs
mov
nop
aaa
adcb
scas
mov
rclb
xchg
inc
loopne
cmp
cmp
pusha
pop
lcall
fwait
cmp
jecxz
push
ljmp
sbb
add
push
loope
sbb
ret
cmp
xchg
push
and
add
ljmp
testl
xchg
push
mov
xchg
jecxz
xchg
in
aam
ljmp
pop
insb
jl
scas
fucomip
test
ucomiss
stos
pop
lock
mov
cmp
data16
std
imul
rolb
scas
pop
data16
mov
lahf
mov
add
sti
mov
mov
sbb
data16
inc
push
movl
test
xchg
ret
push
mov
sbb
and
xchg
hlt
adc
fdiv
daa
sub
divl
sar
pusha
int
frstor
adc
sarb
or
and
pop
jmp
xchg
or
stc
popa
pusha
repnz
and
mov
inc
rcrl
popf
leave
xlat
push
aaa
push
mov
and
add
add
cmp
maxps
lods
lds
je
fcmovb
ret
je
sub
pop
xor
in
xchg
mov
mov
addr16
and
cmp
jnp
cli
push
push
inc
in
in
insb
adc
mov
lds
clc
jb
insl
mov
je
outsl
sar
daa
cwtl
rcll
jbe
inc
sub
cmp
outsb
imul
push
dec
ljmp
or
mov
cmpb
push
iret
add
adc
adc
stos
test
dec
loop
sub
cld
das
scas
adc
out
dec
lock
out
or
arpl
ja
adcl
mov
or
data16
mov
jle
adc
dec
ds
cld
sbb
pusha
adc
in
push
lret
jno
stc
jno
std
cmp
jns
or
repz
xchg
mov
cmc
mov
fisubrs
bound
mov
mov
outsb
jle
xchg
lds
cmpsl
out
out
mov
gs
xor
push
cmp
test
aas
sub
xchg
cltd
cmpsl
mov
push
pop
stc
shl
out
mov
cli
push
in
mov
stos
mov
adcb
repz
movsl
inc
xchg
dec
shll
sbb
pusha
inc
rcrl
dec
dec
push
inc
sahf
mov
adc
jae
pop
jnp
cltd
adc
cmp
mov
mov
sub
xchg
jl
mov
stos
mov
aas
ret
in
cltd
pop
cwtl
repz
ds
sub
adc
inc
cmc
ja
push
mov
outsb
jo
mov
in
fisubrs
adc
pop
dec
fwait
inc
mov
dec
std
xor
ja
and
repnz
cmp
push
xchg
std
test
adc
ds
mov
hlt
pop
int
dec
jbe
sub
push
enter
in
rcl
insb
pop
push
popf
out
sti
inc
or
xchg
mov
mov
movsl
push
lds
jbe
push
ja
mov
adc
jb
fucomi
int3
mov
aaa
dec
push
and
arpl
inc
iret
sub
pusha
test
pop
js
pop
add
bound
rorl
out
test
mov
outsb
sub
scas
xor
dec
jmp
mov
xor
mov
cltd
push
outsb
pop
rclb
call
sarl
jl
popf
gs
ljmp
addr16
fwait
out
andl
sbb
sub
aad
and
lea
mov
jg
test
add
or
jecxz
mov
loop
int
add
push
dec
xor
outsb
pushf
in
xchg
sub
adc
aad
push
inc
mov
jae
mov
cmp
mov
push
or
fucomi
mov
imul
jmp
aaa
adc
outsl
cwtl
mov
bound
sub
jmp
dec
push
xor
aam
jp
fwait
push
push
jl
sahf
adc
stos
pop
xchg
xchg
bound
sub
icebp
fidivrs
je
jae
mov
xchg
inc
cli
mov
add
mov
jbe
cld
movsl
push
icebp
sbb
fwait
mov
aam
mov
mov
in
repz
push
xchg
mul
cmpsb
mov
jne
stos
sub
bound
mov
les
cmpb
add
jmp
jmp
lock
fmull
sti
in
or
xchg
lds
into
mov
addr16
filds
iret
testb
movsl
mov
out
and
dec
jnp
lods
lcall
fidivrl
js
outsb
iret
mov
jns
xchg
rorb
insl
inc
scas
or
xchg
lret
xchg
lods
mov
in
daa
sub
lock
mulb
or
xchg
lods
fsub
or
xor
jl
sub
dec
test
fwait
repz
cld
dec
jne
faddl
push
pop
pop
int3
inc
mov
pop
inc
pop
and
lahf
mov
pop
repz
pop
leave
insl
push
mov
loop
xchg
shrl
fstpl
test
arpl
cmp
pop
jb
dec
enter
jmp
adc
adc
rcll
pop
pop
lret
leave
xchg
fstl
add
dec
inc
sbb
mov
and
cmpsl
cmp
out
fisttpl
rclb
test
in
xor
and
mov
mov
int
sti
test
imul
sbb
mov
mov
push
cmpsb
xchg
mov
hlt
clc
out
inc
xor
mov
cmp
pop
add
frstor
jae
xchg
sbb
in
insl
sub
push
push
call
es
jnp
or
imull
movsl
ret
jge
jno
xor
fstp
push
mov
cmp
xchg
jl
adc
mov
hlt
test
dec
push
inc
int3
mov
dec
push
cmpsl
pushl
ljmp
bound
lods
pop
dec
mov
call
movsl
lcall
xchg
mov
aaa
subl
dec
sub
pop
into
fsub
push
mov
inc
pusha
stos
jecxz
cmp
shll
or
je
add
dec
icebp
in
pop
ja
xchg
adc
ret
jae
or
dec
subb
xchg
dec
adc
xlat
pop
aam
lret
inc
pop
sub
insb
cld
aaa
sarl
cli
xlat
iret
outsb
enter
mov
dec
mov
pop
fsubl
sub
stc
push
sub
imul
fstl
push
lret
enter
ret
and
outsl
icebp
cltd
cmpsl
inc
lods
aas
jge
mov
out
push
sti
int3
sar
pop
pop
sbb
adc
push
mov
cltd
push
push
push
xor
bnd
mov
push
jno
inc
inc
pop
incb
imul
adc
inc
jle
fsubrs
mov
push
push
mov
sbb
add
std
cmpsl
ja
and
sarb
cld
movl
dec
sbb
cmp
jae
mov
iret
aas
fimuls
aas
std
xchg
pop
and
in
or
dec
mov
push
mov
push
sbb
mov
pop
pop
push
fdiv
cmp
jge
mov
add
gs
add
call
jnp
sub
mov
sbb
sbb
lea
test
lret
stos
mov
and
jno
sahf
sub
ret
sbb
xchg
xchg
add
pop
das
out
in
pop
jns
xor
aaa
loop
addr16
aad
xor
cltd
test
adc
popf
inc
enter
fcoms
iret
adc
xchg
push
xchg
xlat
xchg
shrb
fstpt
adc
ljmp
inc
or
and
mov
sbb
sbb
adc
push
mov
push
push
cli
push
mov
clc
jns
dec
push
sub
ret
mov
insb
lcall
jae
fisttpl
cwtl
repnz
or
fwait
out
add
lret
cmp
dec
xor
mov
aam
add
mov
scas
add
push
jmp
stc
pusha
outsb
mov
xor
popa
xchg
sub
pop
mov
xchg
xor
pop
cmpsl
xchg
int
lret
mov
mov
shll
push
mov
mov
out
cmp
in
out
inc
rcll
inc
scas
dec
mov
stos
sti
leave
insb
arpl
push
daa
fnsave
aam
aad
insl
adc
adcl
enter
stos
mov
fnsave
adc
mov
cmpsl
and
popf
in
out
nop
dec
clc
dec
dec
pop
outsb
gs
jg
cli
fstpl
cmc
mov
into
dec
je
aam
xorl
jne
push
sbb
pushf
push
sarb
nop
mov
push
lret
in
jns
mov
arpl
push
dec
lods
inc
add
lds
dec
or
jl
call
jne
jae
xchg
inc
xor
pop
sbb
loope
add
cmp
mov
incl
push
or
insl
aaa
sbb
aad
push
add
or
sbb
popf
or
xlat
shr
mov
dec
fmull
pop
repnz
dec
das
sub
rclb
mov
pop
dec
das
mov
out
rcl
add
sub
xor
xor
pop
xor
push
es
inc
adc
push
pop
sub
roll
clc
aam
fsubp
stos
in
std
mov
frstor
push
jbe
ds
lret
loope
jb
inc
mov
and
jne
sbb
mov
mov
insb
pop
or
push
push
sahf
sub
pusha
push
jle
push
sub
aaa
in
pop
fsubrs
pop
xchg
add
xchg
add
mov
lods
xchg
dec
cmp
lret
sub
scas
sbb
cwtl
mov
fucomp
mov
sub
mov
push
mov
and
aaa
pop
aam
cmp
adcl
inc
pop
insb
add
pop
mov
mov
mov
push
xchg
fdivrl
jmp
xchg
inc
les
mov
sub
sti
jb
push
hlt
or
iret
dec
aam
mov
cmp
loopne
cmp
clc
call
js
pop
int3
jp
out
cs
pushf
loop
aas
fwait
cmpb
rcll
orl
mov
inc
dec
and
ret
sbb
std
in
jae
leave
gs
push
jecxz
pop
push
test
add
xor
jmp
sbb
std
pop
out
in
cmp
mov
dec
movsb
jmp
mov
cmp
roll
adc
fnstsw
test
and
push
or
jmp
orb
adc
lret
pop
call
into
fucomp
push
mov
push
mov
aam
out
jg
call
xor
sub
out
mov
pop
mov
mov
subl
andl
mov
cmp
cmpsb
shlb
insb
sbb
std
fstpl
aam
fldl
cld
insb
mov
mov
je
jg
pshufw
mov
addb
mov
push
lcall
fidivrl
push
cs
mov
lock
dec
xchg
inc
cmp
cmpb
xchg
div
push
or
mov
scas
dec
lret
fldl
jne
adc
mov
or
iret
xchg
bound
fdivrs
cmp
fnsave
and
inc
fucomip
sarb
mov
pminsw
pop
cmp
ljmp
mov
cmp
xor
in
pop
std
fs
sub
lds
hlt
aas
push
roll
pop
je
dec
dec
jns
popa
hlt
out
and
shl
lds
xor
adc
cmp
jle
movsl
sub
imul
pop
cwtl
ljmp
lret
in
xor
lds
mov
addb
dec
int
sbb
jp
xor
and
lahf
data16
sti
pop
cmp
addl
mov
fadds
arpl
adc
or
out
dec
pushf
mov
mov
loope
xor
fs
jnp
sti
push
mov
and
jno
sub
lods
adc
in
xchg
lods
cmpsb
fadds
or
inc
push
fisttpl
loope
and
sub
and
fcomps
sarb
and
clc
mov
clc
in
test
jecxz
aaa
movsl
add
add
inc
out
pop
les
mov
dec
outsl
cmp
leave
sbbl
cld
clc
pop
fwait
ret
sbb
inc
jbe
push
adc
inc
xor
xor
lcall
stos
imul
or
push
mov
push
add
mov
cli
bound
pop
int
cli
cltd
je,pt
movsb
jnp
stos
adc
xlat
ficomps
inc
push
into
pop
add
daa
xor
negb
nop
mov
jecxz
dec
iret
fimuls
sarb
out
aam
fildl
mov
arpl
popf
sbb
clc
and
rcll
mov
andb
lea
cmp
sub
sahf
aas
ds
and
jmp
fldenv
sub
decl
imul
fwait
jne
and
pop
ss
hlt
enter
xorps
ss
mov
cmpsl
xchg
fwait
mov
out
ret
push
test
in
xchg
rcr
or
and
shl
not
jbe
cmpsl
loop
sub
jmp
mov
out
stc
xor
stc
lret
jge
push
in
sahf
aam
jo
and
push
stos
scas
push
add
imul
fistpl
test
fnsave
cmp
mov
subl
mov
and
fucomp
mov
addr16
pushf
cmc
adc
pop
mov
fisttps
mov
add
loop
dec
or
movsb
xor
xor
sbb
xchg
pop
fwait
add
outsb
inc
sub
push
imul
jae
xchg
addb
and
adc
push
aas
mov
mov
sub
fisttpll
sbb
dec
rorl
cld
cmp
aaa
int3
xchg
outsb
xor
pop
into
fsts
bound
ret
bound
cs
xchg
data16
repz
test
pop
movl
push
push
lods
std
push
add
in
call
add
inc
clc
outsb
lock
arpl
or
xlat
push
sbb
cmpb
cmpsl
stos
jbe
mov
lds
cli
jo
negb
or
sbb
out
arpl
mov
cmpsl
jmp
scas
fisubrs
mov
xor
and
sub
ds
sbb
loope,pt
rorb
nopl
jmp
adcl
xchg
std
cmpsb
imul
loop
not
repz
je
aam
lods
xor
stos
sub
mov
imul
push
sub
pushl
repnz
js
adc
cmp
dec
jnp
ja
dec
hlt
clc
inc
sbb
mov
sar
aaa
add
jno
mov
push
addr16
sub
cmpsl
push
xchg
rorl
xchg
add
mov
loope
push
pop
fcompl
and
push
subl
mov
pop
lcall
jns
aad
sahf
bound
int
hlt
std
into
jge
xor
sub
or
lods
cld
xchg
jge
sbb
xor
cli
fwait
nop
fwait
pop
mov
add
aas
outsl
shrl
cmpsl
mov
sub
inc
jno
jmp
add
push
push
fs
xchg
cmp
ret
mov
pop
jge
cmp
jae
sahf
insl
fbstp
jo
push
xchg
add
fisubl
fistpl
icebp
and
cmp
test
nop
rcrb
add
xchg
mov
ds
fcmovb
stos
es
mov
fldcw
sub
mov
sti
aam
fnstcw
pushf
adc
mov
xchg
fiadds
subb
mov
fisubs
outsl
ret
jb
add
lock
dec
imul
mov
mov
gs
mov
xor
sub
test
js
test
imul
adc
mov
mov
cmc
push
lods
das
sbb
fcmovnbe
or
xor
in
pop
das
adc
shr
inc
lods
pop
popf
fbstp
xchg
lea
mov
lahf
movb
jmp
mov
out
sub
push
xlat
divb
test
sub
push
loopne
mov
sbb
loope
rorl
xchg
mov
and
adc
mov
dec
int3
fs
sub
or
jbe
repz
test
mov
mov
ds
mov
or
adc
bound
lock
test
pop
loopne
sub
cmp
mov
jnp
mov
mov
mov
cmp
mov
inc
mov
out
faddl
mov
cld
xchg
out
movl
imul
dec
mov
addr16
cmp
or
jg
repz
rcll
rcrl
repnz
cli
xchg
mov
jp
xor
lret
loopne
clc
push
sbb
adc
cmpsb
inc
cwtl
cli
dec
mov
jae
aad
push
xor
inc
shlb
je
hlt
ljmp
cmp
sbb
repnz
rcrb
inc
or
lock
jle
imul
insl
outsl
push
jle
lods
rcr
arpl
pop
and
adc
into
and
sbb
adc
in
push
test
insb
push
and
fsin
jae
jmp
push
ljmp
xlat
lret
jne
shl
xchg
les
inc
pop
mulb
sub
decl
add
test
sti
cmp
dec
mov
test
add
outsl
lret
ret
cmp
cmp
pop
arpl
push
pushl
ret
xchg
nop
xchg
lods
cmc
inc
pushf
or
arpl
mov
cmpsb
pusha
mov
mov
jbe
jae
pop
loop
add
out
inc
cmp
xchg
loopne
ret
out
shlb
adc
mov
pop
jb
rorl
stos
sbb
or
fdivr
ljmp
ljmp
cmc
dec
aas
test
fsubrs
mov
xorb
xchg
jge
sbb
xchg
and
sub
xor
sub
das
push
push
push
rclb
jne
sbb
sbb
inc
mov
nop
dec
into
cwtl
decl
mov
dec
pop
bound
xlat
sub
inc
mov
stc
mov
mov
dec
add
push
mov
xchg
mov
xchg
mov
inc
leave
enter
mov
sub
jne
daa
cmpsb
mov
and
xchg
xor
adc
xor
mov
pop
jns
xchg
dec
fs
stc
shl
xchg
mov
data16
pop
mov
fs
scas
fs
sti
dec
push
fldl
xchg
mov
das
jns
pop
mov
jmp
ja
cmp
sub
push
cmc
cwtl
js
repz
mov
push
jb
lods
fsubp
mov
cld
sbb
adc
mov
lods
jne
icebp
loop
lahf
mov
sahf
cwtl
data16
iret
adc
lcall
into
pop
mov
ret
movsb
ret
rcll
or
ret
jle
inc
sbbb
cmp
and
or
adc
adcb
xchg
jmp
test
lock
ss
loopne
mov
ret
call
xor
inc
out
ss
or
inc
or
loop
xchg
notl
xor
jge
mov
dec
test
and
fsts
dec
lods
test
push
stc
pop
shl
rcrl
pop
jmp
jecxz
adc
and
icebp
mov
enter
dec
loopne
adc
icebp
jl
cmpsb
cltd
adc
sub
outsb
addr16
xchg
or
dec
aam
js
mov
mov
sub
ja
pop
lock
adc
cmc
and
andb
inc
cmp
imul
fsubrs
and
mov
jb
and
into
sub
add
sbbb
cmp
sub
ficompl
fiaddl
adc
bound
add
fldl
lods
es
adc
imul
fildll
mov
dec
dec
ja
and
das
pop
enter
xchg
jb
negl
fwait
mov
mov
xor
lret
xchg
outsb
xchg
xchg
mov
mov
insl
mov
test
cli
xor
push
xlat
adc
fstl
adc
xchg
cmc
pop
add
shr
and
mov
jns
push
or
xchg
jae
nop
cmp
dec
and
add
push
stos
scas
inc
jbe
adc
push
pop
pushf
ret
neg
fcomps
dec
push
adc
std
jo
nop
jle
pop
pop
mov
in
js
sub
dec
and
jb
xor
fcoml
in
lahf
add
bound
dec
mov
add
sbb
iret
inc
mov
push
push
in
pop
and
pop
dec
xchg
daa
adcb
or
hlt
pop
mov
mov
test
sbb
or
dec
mov
popa
lock
push
adcb
mov
dec
lcall
xchg
adc
mov
cmp
mov
mov
std
incb
test
jp
mov
out
pop
imul
jne
inc
frndint
in
sbb
shr
sub
sub
aas
fdivs
mov
add
sub
lods
add
xchg
scas
test
lcall
std
movsb
pop
xchg
cltd
mov
push
mov
jg
test
cmp
cmp
lock
and
add
add
dec
sbb
out
fisubl
into
xchg
das
ja
push
stos
xchg
les
dec
cmp
or
mov
and
jle
cmp
sbb
sti
gs
push
lret
cmp
and
jae
hlt
in
adc
and
in
fwait
adc
in
ja
test
mov
xor
les
cmc
lea
rorl
test
fistpll
sub
mov
movsb
aaa
adc
arpl
mov
mov
inc
stos
cmpsl
push
sbbl
into
subl
jbe
push
aam
sub
sbb
inc
and
out
pushf
ret
sub
ret
outsb
popf
and
lret
sbb
mov
xchg
cmpl
push
mov
and
movsl
mov
push
pusha
test
mov
fstp
and
xchg
xor
lods
pop
mov
push
int3
cmp
cmpsb
mov
mov
mov
jg
push
inc
pop
mov
mov
sub
pop
aas
gs
int3
outsb
pop
lock
ds
pop
arpl
loope
lret
leave
xchg
xchg
mov
push
cmpsb
leave
das
sarl
aas
cmpsl
dec
pushf
cli
cmp
loopne
mov
mov
and
lock
lods
popa
or
cmpsb
shrl
push
cmp
jbe
lods
add
mov
rclb
mov
push
jle
xor
cmpsl
pop
cmpsl
xchg
sahf
sub
jl
fsubs
test
mov
dec
push
out
addb
xchg
mov
mov
test
out
dec
dec
xor
aad
sti
ss
ss
and
stos
mov
jecxz
xor
jp
dec
or
loopne
pop
sahf
jns
or
and
in
pop
or
int
fstpt
arpl
arpl
jmp
fdivs
pop
das
xlat
add
xor
mov
mov
aad
adc
inc
cmpsb
fbld
pop
sar
mov
lods
cld
inc
lret
push
cltd
loop
lods
ds
sahf
out
and
je
call
lcall
daa
pop
aas
dec
jns
mov
xor
in
mov
sub
sahf
cmp
hlt
ljmp
mov
push
out
jmp
in
into
jne
xlat
arpl
mov
cmp
dec
repz
dec
outsl
pop
push
fbstp
fisttpl
inc
or
fidivrl
call
mov
cli
ljmp
inc
fisttpl
repz
fidivrl
addr16
lret
ret
popf
mov
out
jno
sub
add
test
dec
inc
or
jmp
nop
sarb
lods
jns
stos
xchg
lret
ss
popf
sbb
rcrb
subl
fidivs
inc
pop
outsb
inc
xchg
dec
push
jle
mov
sub
js
jl
xchg
lods
xchg
add
cmp
pop
lret
sub
ret
mov
and
ret
mov
movntps
adc
mov
push
bound
rorb
mov
push
lods
aas
adc
xor
sbb
inc
inc
xorb
les
sbb
je,pt
pop
test
pop
inc
dec
gs
ror
daa
sti
movsl
out
dec
push
cmp
nop
jge
loop
push
cmp
loop
mov
pop
pop
aaa
push
aaa
das
loop
lds
adc
add
and
mov
imul
push
lea
jae
adc
sbb
shll
imulb
xchg
sbb
shlb
dec
dec
xchg
xchg
int3
lcall
in
test
mov
popf
fstps
lock
jp
test
sbb
test
cwtl
notl
mov
xor
rcrl
loop
shr
arpl
push
loope
xchg
and
lret
mov
lock
and
inc
add
call
adc
push
mov
pop
push
flds
mov
aam
adc
inc
xor
hlt
push
and
mov
movsl
aad
test
test
fstpt
jmp
xchg
sbb
pop
mov
icebp
jo
das
mov
dec
inc
xor
xchg
mov
inc
std
mov
leave
frstor
or
and
in
sub
sbb
out
xlat
hlt
stos
xorb
push
xchg
cmp
es
int
cltd
fnstenv
repz
xor
stos
mov
lock
mov
rol
stos
mov
lock
loop
push
mov
pop
cli
jecxz
mov
mov
xchg
dec
mov
stos
in
xorb
push
sahf
cmpsl
and
std
shrb
aad
imul
fwait
or
adc
in
outsb
or
jno
push
cld
ret
or
imul
xor
popf
stc
xchg
adc
xchg
push
adc
mov
test
pop
sbb
nop
inc
or
test
repz
dec
addr16
xlat
pop
sbb
imul
xor
pop
mov
fisttpl
scas
or
dec
not
out
ja
fwait
and
add
mov
mov
jecxz
push
pop
pop
xchg
push
and
sub
out
mov
inc
and
mov
xlat
xchg
mov
sbb
xchg
mov
fisubl
xor
jns
inc
sar
ja
sahf
rcll
jns
mov
testl
repnz
in
mov
nop
in
sbb
and
jl
xchg
push
add
int
adc
test
ss
fwait
popf
std
inc
mov
and
and
test
mov
pop
add
dec
hlt
stos
les
aam
ljmp
pop
das
inc
call
jae
les
sahf
aam
xchg
push
pop
mov
mov
dec
sbb
in
jae
xchg
mov
imul
test
dec
jle
push
filds
loop
aas
ret
lds
mov
stos
jecxz
sbb
xor
cwtl
fldt
adc
aam
sub
push
adc
xor
sub
mov
xchg
jp
aas
test
test
mov
xor
cmp
dec
push
ret
lods
mov
sub
mov
cmp
clc
fs
mov
dec
jle
cltd
mov
movsb
out
nop
jbe
cmp
roll
data16
repz
aaa
dec
imul
pushf
loope
imul
mov
cld
sarl
pop
jle
and
mov
imul
cmp
cmp
mov
push
test
push
pop
push
inc
neg
or
dec
mov
lahf
xchg
xor
aaa
out
enter
add
fnstenv
int
cmp
pop
xchg
dec
and
push
pop
xor
push
xor
sbb
adc
shrb
lods
adc
jmp
push
aas
addr16
scas
rorb
mov
scas
hlt
repz
cltd
movnti
lock
jnp
and
sbb
sti
sbb
ret
lahf
or
mov
mov
out
mov
jmp
push
pop
xchg
sahf
sub
cmpsb
sbb
je
push
sbb
mov
je
stos
inc
cmc
sbb
jp
jo
pushw
xchg
push
ret
pop
outsl
mov
cmc
cltd
orb
pop
add
adc
push
mov
and
pusha
mov
pop
stos
lcall
jno
mov
and
inc
out
jl
or
ret
out
movsb
mov
int3
shll
adc
pop
in
push
add
sub
out
hlt
ljmp
fwait
js
pop
cmp
sti
pop
rorl
mov
int
push
dec
stos
sbbb
xor
jmp
xor
cmp
adc
outsb
orb
mov
out
imul
pop
stos
nop
aaa
loop
jb
andl
enter
xlat
movsl
mov
jl
push
movsl
aad
jae
frstor
stc
outsb
fcmovnu
pop
mov
rolb
jle
int3
mov
ljmp
mov
cmpl
mov
adc
fildl
mov
cmp
pop
mov
icebp
pop
xor
je
cmp
jae
cmp
and
mov
cltd
cli
xchg
add
pop
sbb
sbb
mov
popf
stos
notl
test
adc
mov
mov
mov
cmp
adc
pop
add
dec
cwtl
sbb
cltd
gs
testl
ja
xor
notl
into
xor
dec
dec
ljmp
je
dec
push
popl
je
movsl
enter
adc
fldl
and
inc
out
test
mov
imul
mov
adc
lahf
imul
push
out
movsl
rcl
clc
or
push
dec
push
in
jge
push
add
fs
pop
xor
jmp
out
xchg
adc
xchg
ja
je
pop
xor
add
push
inc
push
mov
cmp
test
pop
adc
ja
push
fisttpll
stos
mov
in
lods
or
pop
sbb
fiaddl
ret
fisubs
sbb
and
lret
cs
clc
adc
and
push
lds
insb
clc
das
mov
jne
shrb
mov
xor
pop
dec
in
mov
mov
jae
dec
and
push
addr16
fisttpl
jecxz
cld
jnp
cli
lods
cli
add
ja
adc
adc
mov
les
ret
add
add
mov
fidivrl
mov
sbb
push
and
pushf
xor
aas
push
or
push
mov
adc
ds
rcll
mov
imul
scas
sub
int
jl
imul
mov
xchg
mov
adc
in
or
iret
dec
leave
sbb
mov
hlt
ret
or
jb
mov
mov
aaa
std
js
add
shr
xorl
or
nop
pusha
xor
push
mov
popa
and
jl
leave
int
jle
push
xor
jmp
xchg
mov
lcall
pop
inc
push
rcrb
push
adc
mov
lret
and
pusha
lods
jo
mov
mov
dec
outsl
jae
cmpl
xchg
jns
data16
mov
jbe
es
push
push
inc
lea
ret
inc
xor
popf
lret
inc
loop
es
sbb
inc
aam
fistl
lcall
int
gs
ret
fsubs
sbb
xchg
lret
mov
push
xchg
adc
cmp
inc
es
inc
sarb
lret
imul
test
inc
jge
or
adc
jmp
movsl
popf
or
aas
pushf
fscale
imul
adc
cli
pop
pop
push
mov
test
sar
insl
loope
push
ja
jmp
outsb
addr16
xchg
pop
adc
push
mov
enter
jg
dec
adc
fisubs
sbb
push
jnp
stc
xchg
icebp
mov
adc
das
inc
sub
add
in
lock
xchg
jb
adc
mov
lea
mov
dec
test
and
add
test
pop
addr16
xlat
inc
jge
movsl
cs
outsl
cmp
cmpsl
repnz
cmc
pop
inc
jecxz
sti
test
aas
inc
pop
out
fcmovnbe
in
adc
inc
inc
call
adc
pop
mov
pop
jmp
in
aaa
scas
ljmp
insl
shlb
push
mov
in
idiv
enter
or
out
push
sub
aad
xchg
sub
inc
sub
mov
inc
outsb
xor
xor
add
aas
mov
orb
pop
outsb
push
dec
sbb
inc
add
xor
push
jbe
cmp
aaa
iret
sbb
push
es
dec
testl
pminub
rcrb
add
out
push
cmpsb
mov
jg
je
das
dec
mov
adc
inc
aad
and
nop
adc
scas
adc
mov
xchg
push
or
mov
nop
mov
aaa
fs
shrl
in
sub
xchg
sub
pop
mov
mov
rolb
inc
fxch
jle
in
outsb
std
mov
xor
cld
mov
add
add
pushf
pop
or
shll
daa
jge
sbb
ja
call
insl
mov
lcall
pop
xor
xchg
mov
mov
call
cmpsl
push
pusha
out
stos
pop
sbb
mov
pop
mov
push
stc
xchg
or
imul
shrl
inc
add
and
add
out
jge
jmp
push
ja
mov
push
aas
lahf
inc
clc
in
jp
das
and
ret
aam
pop
adc
pushf
pop
lock
mov
xchg
lcall
dec
pop
xor
repnz
cltd
dec
xchg
nop
sub
jmp
jne
mov
idivb
ljmp
shll
adcl
popf
sub
mov
or
pop
xor
dec
ljmp
mov
jle
cmpsb
cld
cmpsl
add
vunpcklps
dec
mov
insb
pop
outsl
and
imul
and
xor
test
pushl
xchg
push
leave
popf
mov
pop
jle
call
pop
pop
rolb
das
mov
push
xchg
pop
jge
ss
dec
aaa
hlt
jge
out
and
add
fisttps
adc
mov
stos
mov
repnz
int3
jns
loope
aam
inc
mov
xor
dec
cli
iret
fbstp
push
icebp
cmpsl
inc
je
sub
cmpsl
pop
pushf
jno
mov
jnp
inc
scas
mov
xchg
ljmp
aas
fmuls
repnz
adc
mov
xchg
cmp
sub
out
popf
inc
xlat
cmp
sbb
adc
inc
je
popa
fimull
lcall
into
sti
push
subb
stc
mov
sub
inc
adc
cwtl
lea
cmp
pushf
aas
cmpsb
iret
adc
add
xor
and
cli
push
das
fnstcw
mov
pop
jo
inc
cmp
dec
or
lds
sub
dec
cmp
inc
mov
jmp
icebp
sub
push
cmp
mov
mov
scas
cmpsl
mov
adc
lahf
popf
addr16
mov
jno
popa
mov
lods
arpl
dec
sbb
mov
lret
cmp
push
push
sbb
push
icebp
sbb
fiadds
push
bound
xchg
repnz
mov
scas
xor
stc
xorb
es
adc
movsb
mov
notl
mov
fcomi
inc
jns
sbb
and
inc
sbb
jmp
push
add
cmp
push
bound
andb
lahf
aaa
mov
add
add
xchg
cmp
push
test
cmp
jae
add
inc
mov
data16
jp
jmp
xor
call
mov
ret
loopne
test
in
call
or
fisttpl
jle
out
pop
and
sub
pop
fs
dec
movsl
sub
dec
dec
lock
push
out
jnp
mov
pop
in
pop
push
mov
pop
gs
out
jmp
insb
mov
sub
notb
or
sub
push
mov
mov
push
jno
ds
sbb
push
outsl
je
jne
mov
loopne
call
xchg
clc
mov
les
mov
jno
shll
jmp
ret
mov
dec
test
mov
or
dec
addr16
jle
iret
jmp
mov
sti
pusha
pop
xchg
test
pop
daa
decl
ja
sbb
in
cli
adc
scas
popf
je
cmp
mov
daa
sub
mov
in
jg
push
in
addl
jb
xchg
add
ficompl
dec
bswap
ret
aam
aam
pop
aaa
daa
sarl
mov
mov
dec
fimuls
pop
jge
inc
xlat
adc
sub
lock
xchg
insl
jo
cmpsb
call
test
push
imul
jge
inc
pop
jae
xchg
xor
cltd
bnd
mull
cmp
jg
in
fbld
or
lea
mov
lods
mov
xor
sahf
xor
jge
pusha
jecxz
jno
sbb
shlb
sti
inc
push
stos
mov
lcall
fisttpl
pop
pop
pop
test
test
mov
fstpl
pop
push
lods
pop
xchg
pop
or
push
mov
mov
push
xchg
jbe
pop
push
gs
dec
pop
fisttps
fcoms
aas
mov
cmp
mov
pushf
add
sarl
loopne
mov
mov
fwait
pop
lret
bound
fistpll
and
xorb
int3
je
jecxz
loop
or
xchg
repnz
sbb
arpl
add
repnz
add
cmc
int
imul
adc
push
adc
jb
lods
insb
push
addr16
and
mov
xor
insb
push
in
jp
xor
and
and
xor
or
sbb
jo
mov
add
call
sti
mov
add
cmp
dec
movsb
push
sub
push
rcrl
jl
adc
sbb
les
xor
inc
js
mov
xchg
fs
sahf
jp
adc
les
lret
mov
leave
push
mov
jmp
hlt
inc
out
ss
mov
xor
mov
push
cmp
push
aaa
jg
test
jnp
test
imul
sti
scas
xor
dec
cmp
loope
subl
pop
in
cld
mov
movsb
push
xorb
xrelease
xor
nop
jae
setae
add
movsb
and
call
inc
pushf
mov
loopne
lock
and
rcrl
or
sub
pusha
jno
packuswb
inc
daa
ficoms
jge
xor
mov
test
popf
pop
xor
insl
nop
imul
stos
push
lea
pop
adc
stos
mov
mov
push
out
sbb
pop
test
call
jb
mov
das
andl
fidivrl
cli
push
sbb
push
mov
push
aas
imul
mov
mov
add
jb
cmp
stos
je
int3
push
orb
cltd
xor
or
lret
xor
inc
mov
inc
xlat
inc
cs
adc
mov
es
xchg
ftst
movhps
xchg
aaa
into
daa
lret
dec
add
lods
push
loopne
mov
out
push
inc
cs
adc
ret
stos
mov
inc
adc
jbe
outsl
xchg
test
mov
cmpl
jmp
xchg
in
leave
insb
dec
xchg
jecxz
xchg
adc
shll
nop
push
in
popf
lock
outsb
aam
xor
outsb
add
in
aas
xchg
hlt
mov
shl
mov
xor
push
or
popf
mov
push
and
jmp
push
inc
icebp
jp
addb
push
out
push
repnz
addr16
mov
movsl
pop
fcomps
push
fs
into
pop
ret
lea
loopne
std
adc
push
in
test
sbb
out
testl
and
mov
xor
xchg
xchg
jno
xor
cmp
insl
sbb
bound
mov
jp
sbb
cmp
add
and
push
mov
xor
and
in
cli
and
adc
mov
cmc
add
lods
dec
cmp
dec
imulb
dec
push
testb
and
push
xor
out
stos
and
adc
sbb
mov
inc
les
pop
mov
pop
sub
adc
jne
cmp
sbb
mov
loop
mov
notl
andl
adc
jecxz
out
rorl
jb
loopne
push
shll
push
mov
xchg
mov
push
adc
mov
lods
cmp
aaa
clc
jne
mov
cmp
xchg
push
xor
jnp
stos
cmc
addr16
cmp
call
cmp
test
idivl
mov
add
addr16
fidivrs
fwait
mov
pop
cmp
decl
stos
mov
dec
mov
or
mov
sbb
sub
mov
dec
dec
dec
pop
lea
or
rcrl
adc
imul
ss
test
mov
and
mov
lahf
andl
pop
xchg
sti
js
pop
shll
in
ret
out
inc
test
xor
inc
stos
xchg
xchg
add
inc
outsl
pop
adc
and
add
repz
add
dec
aam
sub
sti
fsubl
nop
test
cmp
int3
mov
lock
mov
lods
psubd
aam
cld
mov
je
lods
push
repnz
xor
out
icebp
cmp
int
jp
out
cmc
leave
jns,pn
cld
xchg
fucom
fisubl
aaa
pop
adc
pop
fdivrs
lock
call
cld
push
lcall
popf
adcb
jo
adc
out
loopne
icebp
lds
and
fiaddl
sub
cmpsb
pop
icebp
add
repz
jnp
add
and
rorb
fcmove
cmp
hlt
add
imul
add
push
js
std
cmp
adc
je
mov
std
int3
cmp
bound
fimuls
adc
call
std
push
dec
in
and
jbe
fdivrs
imul
mov
inc
mov
and
sub
orb
jae
out
sub
xor
jo
repnz
mov
xchg
mov
rorl
shlb
sub
and
or
pop
push
js
fiadds
imul
jge
xchg
mov
lcall
sar
adc
inc
xchg
cmp
cli
xorb
iret
push
enter
pop
out
jmp
pop
push
push
and
aaa
inc
addb
or
icebp
add
bound
push
xor
push
add
and
cmpsl
xchg
cmp
stc
jg
lcall
mov
call
cli
daa
mov
movsl
xchg
cli
cli
mov
mov
mov
and
adc
mov
bnd
push
insb
or
mov
inc
add
roll
mov
repnz
loopne
cmp
lds
xor
adcb
fs
and
enter
inc
push
mov
mov
call
es
add
cmp
lret
loopne
and
dec
call
xor
mov
jl
call
movsl
push
jns
sub
pop
jns
fwait
bound
cmp
in
mov
xlat
dec
dec
mov
adcl
sbb
inc
push
ja
or
push
sarl
sar
inc
add
fidivrs
mov
push
es
and
xchg
jbe
inc
dec
mov
incb
add
lcall
and
sbb
repz
pop
outsl
test
or
sbb
into
xchg
dec
lahf
arpl
daa
adc
xchg
mov
nop
dec
hlt
in
orb
cltd
in
add
inc
sbb
pusha
in
mov
and
add
scas
jae
in
loop
fisttpll
jmp
adc
test
loopne
jmp
mov
dec
mov
cmovne
push
jl
or
xor
adc
mov
dec
ja
push
cmpsb
loope
sbb
fwait
cmc
xor
daa
or
lahf
xor
push
mov
push
stos
js
sbb
inc
sahf
dec
sbbl
mov
pop
subb
negb
leave
icebp
cltd
xor
cmp
sub
or
daa
jno
pop
xchg
and
pop
pop
mov
cmpsl
ljmp
push
mov
add
and
lcall
sbb
mov
dec
lock
hlt
data16
add
jo
xor
fdivs
test
fs
jns
and
cmc
add
xchg
inc
imulb
mov
ret
jns
pusha
xor
iret
mov
or
inc
sbb
dec
and
jl
pushf
sbb
adc
daa
inc
cmp
ficomps
pushf
add
xlat
outsb
xchg
aad
std
pop
jecxz
repz
xchg
imul
icebp
push
xor
fistpll
mov
clc
push
xchg
mov
xchg
cwtl
loope
push
mov
mov
in
xchg
int
iret
imul
or
jno
cmc
dec
xchg
cmc
mov
frstor
dec
stos
int3
sarl
sub
or
mov
jae
push
mov
outsl
lahf
adc
xrelease
add
hlt
dec
inc
in
push
aad
and
fcmovnbe
sub
push
xor
jne
ss
jle
pop
sbb
cwtl
xchg
inc
and
pop
xor
or
ficomps
mov
push
hlt
das
mov
mov
mov
add
fisubrs
mov
push
mov
fisubs
fs
ds
pop
mul
mov
jle
filds
add
loopne
xchg
cmp
push
repnz
dec
sub
loope
mov
mov
and
cmpl
aad
lods
lock
xchg
mov
je
cmpsb
adc
xor
dec
push
jecxz
popf
lea
xchg
movsl
xchg
fdivrl
mov
inc
jecxz
daa
enter
cmp
mov
frstor
int
jo
sub
shlb
cmp
and
hlt
movsb
mov
and
push
inc
iret
xor
int
push
xlat
pushf
inc
loope
icebp
inc
xorb
inc
dec
push
jge
xor
mov
mov
fadds
sbb
outsl
cmc
pop
out
imul
ret
add
mov
orb
mov
in
fstps
inc
mov
subl
scas
addb
sub
add
and
dec
add
enter
into
cmp
jae
icebp
lods
loope
cltd
mov
sti
and
inc
cmp
mov
decb
jg
out
mov
into
cmp
cmpsb
inc
mov
aad
jmp
movsb
mov
insl
sbb
pusha
xor
and
and
pusha
adc
xchg
dec
mov
dec
out
xchg
xchg
mov
sbb
daa
pop
push
sbb
dec
pop
mov
ret
mov
popa
dec
mov
mov
push
pushl
int3
sbb
mulb
subb
psllw
jmp
jnp
hlt
cmpsl
mov
mov
lret
ja
mov
fnstsw
cmp
test
pop
jae
dec
sti
mov
xlat
inc
push
jle
xlat
pop
mov
mov
sub
cmp
rclb
adc
push
leave
leave
mov
shrl
int3
js
mov
jge
dec
xor
insl
inc
test
xchg
jne
adc
outsl
dec
int
lret
push
xchg
les
pop
sub
push
xchg
dec
sbb
push
into
popf
adc
movsl
gs
ja
add
ss
lea
mov
lds
cmp
fwait
mov
in
sbb
into
push
aaa
cmc
jo
inc
jae
mov
fidivs
mov
pop
jge
push
and
jge
mov
lahf
shrl
mov
popf
out
dec
aas
fwait
popf
add
aas
jg
and
pop
sbb
and
mov
and
std
or
mov
push
jecxz
add
xchg
in
pop
fsubrl
subl
add
xchg
mov
fdivs
sub
xor
ljmp
adc
ja
or
or
dec
mov
mov
mov
or
xor
pop
add
pop
mov
movsl
push
mov
sbb
sbb
lds
cmp
pop
or
and
daa
dec
shl
mov
bound
cmp
push
nop
adc
xchg
pop
and
sti
and
in
xchg
data16
inc
scas
xchg
bound
aam
fcmovne
ss
adc
adc
cmp
adc
or
inc
idiv
cmp
sbb
xchg
std
lock
notl
inc
inc
push
divb
sbb
cs
pop
xchg
enter
push
mov
inc
mov
movsb
and
cs
les
popa
pop
xchg
mov
imul
mov
xlat
mov
dec
pop
sub
jne
inc
xchg
rolb
fsubl
inc
fwait
movsb
negb
cmp
in
and
test
dec
iret
rclb
rclb
cmp
cld
mov
adc
mov
lcall
sbb
outsl
shlb
std
xchg
cmp
fistps
movsb
push
dec
stc
test
jl
jge
mov
xor
xchg
ret
mov
inc
and
cmp
jmp
ja
stos
cmp
push
into
ficompl
ret
addr16
outsl
jg
and
inc
int
in
arpl
push
ret
test
cmp
andb
xor
aad
aaa
int
loopne
adc
cmp
gs
negl
mov
fists
arpl
xchg
mov
jecxz
mov
dec
jle
mov
or
jo
push
push
lea
aad
xlat
xchg
insl
and
xor
mov
fmul
movsl
je
sbb
jo
push
std
cmp
mov
sub
scas
jl
xchg
mov
ret
push
pusha
cmp
out
aaa
mov
add
jl
jg
or
js
je
sar
cmp
pop
aaa
jns
or
add
jecxz
dec
shr
andl
movsl
out
lahf
outsl
xchg
in
adc
rclb
imul
xchg
test
sbb
shlb
insl
sbb
sub
mov
addr16
setnp
and
or
repnz
nop
imul
fildl
mov
cmp
mov
in
jae
mov
push
pop
cli
rclb
fldl
pminsw
scas
inc
ret
lahf
pop
push
shrb
fdivs
pop
mov
or
sti
xor
mov
faddl
and
xor
cmp
sarl
sub
sbb
ja
mov
int3
mov
into
sub
sbb
xorl
popf
sbb
cmp
mulb
mov
cwtl
add
sbb
mov
or
sbb
xlat
fs
inc
addr16
push
stos
cltd
sbb
lock
or
int3
lods
xlat
inc
jo
shll
xchg
add
xchg
unpckhps
scas
lahf
data16
mov
scas
sbb
enter
xlat
pop
test
jle
inc
or
ja
nop
add
movsb
xchg
or
add
roll
xchg
pusha
cltd
in
call
pusha
xchg
cs
mov
add
ret
jmp
dec
shll
or
push
addr16
test
aaa
decb
insl
cmpsb
cltd
add
sbb
pop
enter
pop
mov
aad
xor
cld
cli
mov
cli
lock
in
jns
push
jb
ffree
divl
cmp
push
cmpsb
test
fmull
daa
sahf
add
xchg
jns
mov
adc
sub
or
pop
push
insl
pop
ficompl
jnp
mov
dec
mov
cmp
mov
sub
or
xchg
jae
fnstenv
ss
shrb
mov
mov
stos
sahf
push
lods
loop
inc
pop
mov
inc
jecxz
dec
test
les
clc
mov
sub
adc
jo
out
dec
mov
xchg
dec
inc
negl
pop
jb
sbb
sbb
in
pop
cwtl
gs
iret
xlat
pop
adc
imul
jl
fdivrl
stos
and
mov
out
test
and
fistps
bound
addr16
hlt
or
orl
xlat
test
flds
push
das
jle
jb
sbb
rclb
repz
pop
mov
inc
mov
iret
or
pop
repnz
sub
jl
mov
push
popf
or
mov
movsl
stos
cmp
stos
fwait
out
mov
push
sub
hlt
cmp
cwtl
adc
xor
pop
inc
lods
mov
mov
ss
stc
fisubrl
cltd
loope
fcmove
mov
adc
cltd
cmp
and
lahf
icebp
push
ret
in
or
fs
dec
insl
sub
jns
pop
aam
inc
add
lret
popf
test
inc
addr16
sbb
push
xchg
addr16
mov
int
inc
pusha
movsl
aam
lds
rcl
push
push
mov
lods
inc
dec
pop
testb
cmpsl
out
sahf
jmp
mov
shr
push
adc
lea
pop
jl
ret
ds
sbbl
icebp
sar
jns
mov
jmp
idivb
sbb
hlt
inc
mov
jbe
ja
test
cmp
popl
push
pop
cmp
xchg
ljmp
or
pop
sub
jmp
pop
lds
mov
aas
aam
aad
mov
add
lret
enter
enter
stos
in
push
sub
fwait
lret
arpl
sub
dec
jmp
mov
or
lahf
or
or
test
fisttpll
ljmp
sbb
cmp
insl
or
xlat
add
add
bt
insl
adc
mov
add
leave
inc
pushf
or
test
mov
out
cs
push
test
cmp
test
or
xlat
testl
add
aaa
gs
pop
in
xchg
mov
hlt
ss
cmpsl
jle
scas
cmpsl
popa
std
pop
mov
int3
ret
jecxz
fstpl
or
pop
or
rcr
xor
push
mov
sub
mov
cs
pop
divps
cld
lods
add
cmpsl
call
push
pop
pop
cmpsb
cld
gs
bound
mov
sbb
or
imul
inc
add
das
xor
adc
xor
aaa
mov
in
jle
aaa
mov
popa
fisttps
repz
mov
paddsw
xor
mov
mov
mov
mov
jae
xor
jnp
dec
in
fucomi
fisubrs
sbb
jns
sub
inc
or
pop
dec
xor
push
push
stos
stos
sub
in
mov
jecxz
xchg
adc
rcll
sbb
ljmp
int3
les
xchg
dec
add
sbb
jae
dec
fiadds
outsl
int3
ljmp
dec
inc
stc
sbb
adc
aaa
cmp
pmuludq
add
adc
pop
repnz
pop
xor
in
sarl
out
push
test
lahf
andl
fisubs
in
mov
sbb
sbb
inc
in
xor
inc
mov
push
dec
and
ljmp
pop
inc
mov
inc
sahf
pop
xor
or
inc
in
xchg
sbb
xor
dec
pop
inc
mov
push
dec
data16
mov
xlat
push
pop
popl
xchg
out
adc
inc
aad
lods
cmp
lds
adc
iret
pop
jp
and
xor
and
fs
mov
dec
dec
out
sub
lahf
cmpl
mov
sub
xchg
cmp
and
add
inc
push
inc
jb
ss
jbe
sarl
je
xchg
stc
loope
push
inc
or
lds
mov
popa
sub
and
xchg
pop
cmc
sub
push
cli
aas
mov
fadd
shll
insl
mov
in
cmp
stos
paddd
int
fsubrl
loope
and
jmp
dec
and
lret
jns
lcall
fcoml
xlat
sbb
mov
mov
sub
leave
out
shll
jns
arpl
mov
cwtl
cli
orb
jl
sub
xor
out
sbb
xor
push
add
adc
inc
or
inc
mov
cli
repnz
xor
mov
fcoml
and
cmpl
fwait
mov
in
sbb
push
adc
cmp
aas
stos
push
sub
mov
lret
adc
std
mov
or
push
pop
push
stos
ja
fidivrs
addr16
add
popf
inc
aas
sub
rolb
das
mov
pushf
push
leave
fbstp
enter
push
fsub
mov
mov
pushf
mov
loope
imul
and
mov
jmp
or
shrb
adc
stos
lds
roll
xchg
xchg
fiadds
inc
test
pop
lock
lahf
sub
je
inc
negb
xor
cmp
jmp
movzwl
inc
or
sahf
call
incl
ja
shrb
push
jecxz
adc
sub
push
ljmp
inc
adc
mov
cmp
ja
jo
xchg
mov
mov
mov
mov
mov
sarb
jne
sub
adc
mov
aas
xor
jno
push
lahf
and
sbb
fcom
inc
inc
push
frstor
jno
outsl
inc
xchg
insl
push
push
push
cmp
push
int
ds
xchg
sub
dec
xchg
jge
fs
xor
mov
mov
testl
cmp
jg
out
add
cmpsb
lds
pop
adc
inc
cld
aaa
roll
pop
or
cmp
negl
sbb
jecxz
xor
add
mov
aad
insl
ficompl
es
sti
clc
iret
jb
int3
pop
adc
jnp
out
rcll
mov
pop
mov
daa
mov
dec
sub
inc
lock
push
cmpsb
mov
pop
mov
shrl
dec
xor
xor
xchg
movsl
pop
scas
test
fisubrs
mov
cmpl
xchg
sub
in
add
pop
fwait
jp
bound
fistps
push
jmpw
daa
adc
cmp
inc
inc
xchg
jmp
fmull
ret
ja,pt
repz
inc
add
jecxz
jle
int
clc
aad
andb
aam
add
mov
je
mov
push
leave
fcmovne
xchg
pop
js
ficomps
movsb
jp
rep
push
cld
pop
xlat
adc
rcr
lea
inc
xorb
sbb
sbb
jl
jg
subb
testb
cld
out
out
in
in
dec
xchg
lds
popa
dec
rol
xchg
push
jle
sti
dec
inc
add
rolb
push
stos
aad
jl
int3
xchg
cmp
sti
insb
mov
dec
jecxz
mov
push
push
lret
cmp
loop
stos
jo
pop
hlt
inc
ja
dec
stc
push
inc
sub
mov
jecxz
inc
sbbl
mov
addr16
cli
or
mov
dec
in
cmp
clc
pop
xchg
filds
pop
popf
mov
aam
es
mov
push
mov
or
es
push
inc
repnz
sbb
push
jmp
daa
lods
repnz
or
out
movnti
pop
push
hlt
jle
jp,pt
and
es
out
stc
fistps
or
imul
je
repz
in
sub
xchg
lds
cmp
ffreep
mov
push
iret
stos
addr16
shr
dec
ret
es
xchg
mov
adc
cmpsb
xor
jecxz
mov
add
mulb
mov
cmpsl
out
xchg
xchg
sub
clc
cmp
roll
lret
sbb
mov
lcall
out
dec
xor
xchg
xchg
pop
leave
daa
xchg
or
ds
and
push
xor
rorb
cs
sbb
push
je
or
push
add
mov
lcall
xchg
mov
push
pop
jge
int
lods
sarb
sbb
loope
loopne
stc
adc
arpl
mov
dec
mov
inc
push
rcl
push
fbld
dec
outsb
adc
fiaddl
sbb
adcb
xchg
push
add
push
dec
xchg
loopne
jnp
sub
lahf
add
sbb
adc
mov
mov
js
jo
xor
in
mov
inc
adc
ds
ret
sub
es
loope
into
fdivs
sbb
outsb
fwait
pop
jg
scas
mov
sbb
or
dec
dec
mov
adc
and
fistl
add
mov
cli
sub
xchg
lods
cmp
dec
movsl
aas
ret
out
lahf
mov
jmp
aas
push
mov
fnstsw
mov
mov
in
ret
and
pop
dec
testb
xor
leave
xchg
cmp
pop
xor
cmc
adc
and
mov
fcmovne
inc
add
mov
cmp
xchg
push
movsl
call
push
mov
bound
daa
jb
icebp
or
push
mov
fcoml
sub
dec
lods
mov
int3
out
adc
sbb
cltd
mov
sbbl
loop
adc
mov
mov
pop
test
mov
sbb
fidivl
pop
or
out
mov
sbb
xor
dec
jnp
shlb
gs
inc
cmpsb
cmp
fnstcw
rolb
jae
jg
in
imul
mov
xchg
pop
add
and
out
inc
inc
xor
cmpsb
cmpsl
jmp
adc
or
out
pop
mov
das
imul
fldl
or
lret
in
mov
push
popf
repz
leave
in
mov
cli
mov
mov
jp
nop
iret
pop
push
loop
add
mov
sub
pop
push
aad
dec
cmpsb
mov
ret
jmp
push
lds
andb
fs
or
sbb
xor
mov
mov
xchg
test
fwait
xor
push
mov
mov
out
push
push
pop
scas
cmp
pop
push
xchg
testl
mov
and
xchg
add
sarb
cmpsb
aas
jb
adc
ret
call
pop
lret
pop
jmp
xchg
loop
rcl
stos
je
out
cld
cwtl
lcall
pop
jnp
mov
jne
clc
es
sub
les
sub
test
aas
and
mov
cmc
int3
push
out
cmp
bnd
jp
je
fmulp
cmp
daa
stos
sub
in
mov
arpl
dec
cs
push
lcall
pop
jmp
and
dec
shrl
cmc
add
shrb
pop
mov
shl
call
dec
xor
lods
inc
push
das
fwait
mov
cltd
iret
das
call
out
xor
sbb
jle
mov
mov
scas
pop
sub
ret
cwtl
cwtl
mov
add
cwtl
mov
outsb
test
push
xchg
loope
or
loopne
push
push
add
sbb
popf
imul
div
icebp
scas
rolb
cmp
jnp
add
mov
mov
mov
andb
xor
insb
sarl
test
pop
mov
adc
cmc
sub
jno
aas
adc
scas
ja
inc
pop
outsb
or
andb
or
pop
mov
mov
dec
mull
xor
pop
xlat
dec
mov
mov
sbb
or
jbe
sti
cwtl
dec
xchg
fiaddl
int
ficomps
ljmp
roll
int
std
repnz
stos
mov
rorl
rcl
jae
cmpsb
enter
in
cmp
push
out
dec
xchg
aaa
sbb
jae
xchg
pop
bound
int3
daa
fs
fldenv
xor
in
cmp
outsb
xchg
add
lcall
fildl
xchg
jle
cmp
icebp
add
and
lret
idivl
gs
subb
xchg
sbb
aad
fidivrs
xchg
rorl
ss
cltd
mov
ret
dec
daa
movsb
sbb
es
xchg
aad
adcl
pop
and
xor
add
inc
cltd
shr
pop
and
int
fucomp
mov
popa
into
cmpsl
pop
pop
das
xchg
test
mov
push
in
push
push
jb
cld
fbstp
mov
jmp
cld
test
dec
inc
and
movsl
xchg
sub
sbb
or
inc
std
mov
adc
xor
stos
dec
sbb
outsb
xchg
xor
das
push
and
adc
sub
mov
aaa
mov
mov
arpl
arpl
sbb
mov
lret
call
xchg
xor
je
scas
ffreep
lock
mov
call
insl
insl
add
cmp
popa
icebp
test
and
or
xor
jle
mov
lea
popa
push
outsl
loop
outsb
mov
inc
mov
lcall
pop
pop
movsb
mov
loop
loope
fcmovu
les
inc
dec
push
loope
and
push
icebp
sbb
inc
pop
stos
jns
fimuls
cmp
add
rcll
mov
push
outsl
push
in
lods
sbb
fdivl
andl
dec
mov
insl
outsb
aad
test
popf
icebp
sbb
sarl
imul
jno
sti
in
and
push
sub
stc
dec
cmpsl
je
cmp
add
sub
insb
test
loope
fs
fldcw
rol
xchg
aad
icebp
dec
iret
imul
shrb
mov
pop
insb
scas
pop
jmp
cmp
push
cmp
jp
push
mov
push
bound
sahf
sbb
fadd
add
ja
loope
out
les
movsl
bound
pop
and
pop
out
inc
ds
call
push
fs
push
mov
or
xchg
hlt
aad
outsb
fs
sub
mov
xchg
adc
outsb
sub
inc
and
sub
adc
pop
pop
mov
jecxz
push
jno
or
mov
pop
outsl
add
xchg
mov
dec
cmp
or
push
cmpps
dec
cmp
pushf
lock
cmp
lcall
popa
inc
mov
xlat
sbb
inc
ret
repz
roll
xchg
sub
int3
dec
mov
pushl
ljmp
cmpsl
pop
aas
mov
imul
adc
ficoms
loop
jge
jb
cmp
rolb
add
push
scas
push
dec
scas
in
inc
movsb
int
and
mull
and
pusha
lea
xchg
cmpsl
fisttpll
int3
fstl
dec
orb
sbb
pushf
mov
mov
pop
adc
shlb
or
adc
push
js
ljmp
inc
addl
sub
or
sbb
inc
mov
inc
test
mov
push
mov
jmp
data16
or
ret
lahf
cmpsb
mov
dec
add
roll
pop
lret
ret
xchg
repz
out
rcrl
mov
test
or
loop
sub
mov
push
sarb
fiaddl
jnp
push
mov
xchg
mov
jb
sbb
repz
sbb
pop
mov
ss
insb
mov
fdivrs
add
mov
flds
dec
or
mov
fcomps
pop
xlat
dec
adc
push
xchg
flds
jg
or
stos
outsl
cld
inc
ljmp
cmp
inc
jg
sub
mov
push
movsb
mov
in
dec
scas
add
adc
fidivrs
hlt
mov
lcall
ficoms
mov
loope
cmpsb
push
enter
or
lahf
arpl
jne
sub
rorl
std
xor
adc
shlb
test
lods
or
test
mov
xor
into
imull
jbe
inc
stos
inc
lahf
mov
xor
int3
repnz
js
xchg
xchg
xor
out
rclb
gs
ret
ret
mov
sub
mov
add
add
jge
add
mov
jl
fdivs
shl
cmp
pop
push
cmc
push
out
xor
jle,pt
mov
lea
add
int3
dec
or
pop
push
push
xor
iret
daa
pop
lea
jecxz
mov
enter
popa
bound
repnz
loopne
lret
xchg
fnstenv
jecxz
inc
insl
and
jmp
ja
hlt
outsb
or
cmp
jns
and
dec
stos
aaa
adc
xor
ret
fwait
mov
inc
dec
cmp
rcl
fisttpll
sbb
dec
in
or
scas
mov
leave
lahf
test
in
mov
pop
cs
pop
out
mov
inc
push
cmp
add
loope
gs
lock
es
movsl
in
mov
mov
fiaddl
sti
sarb
imul
dec
pop
sub
hlt
xor
mov
pushf
test
jno
ja
lret
jle
fnstcw
rcrl
mov
xchg
fstl
aad
cmp
or
test
das
mov
shl
jb
inc
jno
mov
push
je
pop
xchg
mov
xor
push
dec
and
xchg
push
lock
mov
mov
mov
jae
jns
push
push
ds
sbb
mov
gs
in
xlat
pop
mov
lods
inc
loope
inc
mov
cmp
in
xchg
outsl
jge
inc
sarl
loope
je
inc
mov
into
iret
xchg
ljmp
je
les
pop
and
imull
pop
ret
sub
rcll
test
inc
xor
iret
push
fistps
push
push
push
jmp
mov
daa
and
orl
scas
out
nop
sub
push
into
add
stos
adc
mov
inc
fs
outsb
cmp
sbb
add
shr
pop
vpmacsswd
or
and
daa
cmp
sbb
jmp
sahf
pop
mov
add
lock
and
adc
sahf
sbb
xchg
add
mov
movb
orl
adc
iret
adc
adc
fstl
sbb
sub
push
or
sub
inc
lods
adc
dec
aam
dec
fwait
mov
scas
pop
fidivrs
add
pop
inc
pop
mov
sub
adc
in
mov
scas
lods
add
int3
sbb
or
aas
mov
cmp
test
not
adc
sbb
loopne
cmp
push
adc
pop
sub
getsec
test
in
inc
and
add
loop
repz
xchg
mov
aam
pop
shrl
in
add
jle
pop
push
sbb
cmp
pop
mov
and
es
pusha
pop
push
iret
xchg
push
jmp
repnz
sar
mov
out
movsb
push
imul
scas
and
add
pusha
in
xchg
xchg
clc
nop
mov
adcb
sarb
add
xor
jb
adc
adc
cmp
jge
negb
mov
adc
imul
push
fmulp
in
pop
adc
repz
int3
rclb
pop
mov
jg
into
sub
scas
das
mov
das
inc
cmpl
cmp
fists
pop
xlat
repnz
shrl
dec
shlb
xorb
movsl
xor
les
lods
decb
jne
jo
push
mov
jle
sub
add
loopne
xchg
leave
push
dec
mov
push
add
movlps
sbb
pop
push
jecxz
hlt
lea
adc
dec
cmp
insb
jl
xor
cltd
cmp
adc
xchg
add
or
push
pop
outsl
pop
cmc
clc
dec
pop
shrl
or
xchg
jl
out
test
aaa
xchg
sub
push
jecxz
insb
sub
sub
or
aas
mov
cli
add
repnz
jecxz
out
pop
xchg
scas
jno
rcll
cmp
in
aaa
adc
insb
xchg
cmp
fbld
add
daa
xchg
add
sar
in
icebp
or
or
fldenv
push
adc
sbb
jae
and
test
lods
mov
int
add
push
std
mov
xor
clc
mov
push
outsl
sahf
popa
mov
leave
xchg
lahf
sti
fadds
pop
adc
movsb
jmp
iret
pusha
and
es
adc
ffree
inc
jns
movsb
rorb
mov
push
xchg
arpl
xchg
stos
dec
ret
in
lods
sub
xchg
popa
rorb
pop
mov
cmpsb
test
repz
jmp
out
pop
pop
shl
in
fwait
movsb
inc
sub
mov
out
mov
jp
mov
add
mov
inc
xchg
call
adc
in
xor
ss
and
fldl
sub
adc
mov
nop
sub
imul
sbb
call
mov
sbb
sbb
daa
push
push
imul
adc
rcrb
pop
cmp
add
add
aad
pushf
pushf
jle
lods
jmp
cld
or
js
pop
push
shll
mov
mov
ds
or
cmp
or
stos
movsb
xchg
lock
pop
mov
add
into
mov
pop
cmpsb
xchg
dec
idivb
scas
test
outsb
sbb
movb
sbb
jnp
push
sarb
fwait
sub
mov
pop
mov
sbb
xchg
fcomp
sub
xchg
jbe
les
add
dec
or
mov
push
mov
test
inc
xchg
dec
repz
jecxz
out
clc
sub
push
imul
popf
in
push
sbb
bound
std
orl
mov
jae
push
jo
mov
clc
cld
mov
outsb
stos
popf
inc
out
popf
lock
es
add
gs
fwait
test
xchg
out
pusha
mov
mov
cld
int3
or
pop
cmpsb
aad
imul
adc
imul
cmp
aad
repz
sub
in
sbb
lret
jns
scas
mov
rcr
insb
add
testb
mov
fidivl
jae
sbb
clc
das
pop
or
out
add
jecxz
or
mov
shll
enter
leave
and
mov
pop
aas
dec
lret
iret
test
pop
mov
dec
lret
pop
insl
cmp
mov
cmp
ds
popa
cmp
mov
nop
out
xor
in
imul
cmp
sbb
sbb
adc
pop
sbb
loop
jecxz
mov
dec
scas
inc
scas
fwait
popa
pop
push
mov
inc
iret
pop
cmp
data16
dec
iret
xor
push
xlat
push
aas
mov
or
sbb
filds
or
or
or
inc
and
cmp
pop
sbb
dec
fcomps
loope
clc
xorl
fisttpll
adc
mov
cmp
push
push
sbb
xor
aaa
dec
mov
outsb
mov
sbb
test
sahf
lret
cmp
scas
lahf
mov
dec
mov
rclb
call
and
stos
xor
insl
adc
add
jns
mov
movsb
inc
add
insl
xlat
gs
adc
xchg
xchg
dec
pop
mov
jl
fbstp
lret
push
aad
lods
movsl
and
scas
sub
xorl
pop
aad
fnstenv
packsswb
ficomps
pop
orb
cwtl
fstpl
mov
data16
adc
dec
data16
pop
mov
mov
popf
testb
repnz
pop
loop
dec
inc
mov
call
rorb
rcll
pop
cli
pushf
xor
adc
sbb
sub
aaa
xor
std
or
mov
sub
and
add
cmp
mov
js
mov
pushf
negb
dec
xorb
mov
iret
leave
leave
push
fcoml
pusha
clc
and
popa
mov
pop
mov
sub
sub
les
mov
imul
popa
sub
enter
stos
popa
mov
out
push
inc
inc
mov
cmpl
loop
cmp
mov
mov
jno
popa
mov
inc
scas
mov
mov
mov
fld
push
aam
jmp
inc
xchg
sbb
cvtps2pi
sti
add
out
xchg
imull
adc
and
cmp
and
push
scas
movsl
fxch
pop
aaa
or
mov
inc
ljmp
sbb
xor
cmpsb
inc
push
test
sbb
jge
leave
mov
popa
int3
dec
cmc
push
jmp
call
mov
insl
sbb
movsb
push
negl
push
outsb
add
jno
or
pop
dec
jle
adcb
ss
rorl
cmp
jp
sbb
ss
hlt
jno
mov
and
fldcw
int3
das
push
inc
test
jmp
icebp
mov
sbb
dec
pop
repnz
dec
data16
sub
push
xchg
testl
jns
and
insl
les
push
xchg
push
adc
push
and
jp
cmp
push
push
add
mov
stos
mov
jl
stos
pop
sub
jg
rcl
mov
in
xchg
leave
mov
mov
lods
mov
fcomip
enter
unpckhps
shrb
loopne
sti
cmp
and
out
pop
or
rorl
mov
inc
and
mov
enter
fstl
dec
pop
mov
or
mov
mov
jbe
xlat
jbe
inc
mov
xchg
and
imul
les
dec
sbb
jge
dec
dec
add
shll
pop
ret
shrb
sbb
sti
add
shrb
cmc
xor
mov
out
or
push
movsb
insl
xor
jno
sarl
lret
rcll
clc
pop
jb
push
pop
in
push
mov
xor
inc
mov
movsl
mov
lret
mov
adc
test
inc
sahf
xor
imul
and
mov
mov
mov
call
out
daa
lea
idivb
jnp
sbb
xchg
sub
nop
dec
ret
out
ljmp
mov
sub
jae
mov
mov
popf
shlb
insb
push
adc
xlat
ds
inc
ret
les
sub
jge
adc
pop
sbbl
pushf
ljmp
cli
test
cmp
jge
xchg
cmp
xchg
jmp
rcll
push
sub
jl
mov
mov
mov
xor
sahf
aaa
outsl
and
aad
out
rcll
stos
cmp
mov
leave
sbb
xor
pusha
mov
sar
dec
bound
sub
rclb
int3
outsb
daa
pop
jnp
and
imul
jb
or
fistl
jnp
shlb
jmp
test
lret
adc
inc
jg
xchg
sbb
push
in
jl
rcll
repnz
jl
dec
xor
cld
js
push
pop
add
mov
out
and
shrb
or
inc
aas
cli
fildl
or
ret
add
into
push
outsl
loop
mov
sub
add
dec
mov
test
in
or
cs
cmp
dec
das
popf
adc
fcmovnu
pop
push
repz
xchg
int3
cld
outsl
dec
dec
push
pop
fnstsw
mov
jge
pop
mov
sub
mov
cmpsb
into
aam
push
cs
ficoms
insb
mov
push
cmp
jne
aaa
mov
lods
push
pop
nop
add
and
jae
fbstp
xor
leave
push
out
mov
sbb
adc
outsl
loopne
stos
push
xchg
shr
adc
cmp
push
mov
insb
push
aaa
jne
pop
push
fisttpll
mov
add
imul
pop
call
mov
lret
sub
push
rclb
stc
mov
pop
push
test
loop
jg
sub
gs
sub
inc
movsb
pop
movl
sub
pop
xchg
jbe
dec
es
pop
leave
sbb
ss
sbb
bound
cmc
jp
mov
out
and
xor
jg
enter
movsb
clc
out
daa
je
je
test
pop
xor
mov
mov
call
cmp
arpl
adc
xor
jo
int3
lret
jnp
xchg
add
filds
sbb
fcompl
xchg
rol
mov
pop
cmpsb
pop
popa
lret
cmp
cli
test
sub
cmpl
fisttpll
roll
push
inc
mov
mov
adc
pop
adc
xor
or
jae
roll
ss
sbb
or
rorb
lds
xchg
fdivrs
or
mov
notl
fstl
cmp
xchg
mov
cmp
test
cmp
and
les
inc
addl
push
adc
jns
sahf
mov
xchg
jl
fwait
cwtl
dec
xor
adc
push
inc
mov
sbb
clc
sub
rcrl
int
cld
push
data16
jg
das
mov
movsl
push
sbb
les
lds
jg
loop
repz
mov
jl
and
sbb
aaa
add
sub
jmp
into
jae
push
in
mov
ficompl
fiaddl
adc
push
fsts
xchg
les
out
fsts
jb
loop
adc
xchg
insl
imul
mov
inc
cwtl
xor
insb
iret
and
pop
daa
sar
lods
cmp
sub
loopne
mov
xor
in
push
push
pop
add
cmp
xchg
mov
push
xchg
aas
stc
sahf
xchg
fsubrp
and
test
cmpsl
xchg
sbb
aad
into
in
mov
pop
xchg
mov
adc
das
pop
out
adc
insb
cmpl
hlt
fldt
jecxz
inc
mov
jge
pop
iret
ja
out
and
gs
hlt
jns
jae
add
mov
cmpsl
imul
sbb
push
pop
mov
ja
mov
roll
xor
fwait
lea
jb
aas
gs
jl
lahf
pop
sbb
aaa
adc
daa
add
and
stc
sub
or
push
xchg
jne
lock
je
into
lods
sbb
in
hlt
icebp
xor
pmaxub
mov
jb
pop
daa
cltd
testb
adc
in
leave
fwait
mov
ret
adc
mov
jmp
fdivs
xchg
gs
imull
xchg
pop
jbe
pop
stc
jge
insb
add
jl
xchg
mov
jge
jmp
adc
cmp
dec
aam
push
std
jb
push
shlb
push
leave
inc
jl
into
sbb
es
mov
inc
lahf
rcl
bound
fldcw
cmpsb
push
cmpl
test
pop
cmp
sar
movsb
dec
pop
mov
jmp
jp
or
add
loopne
sub
jno
notl
sbb
call
inc
movsl
std
mov
pop
test
popf
adc
cmp
ficompl
lcall
pop
ret
fildl
cwtl
sbb
sahf
or
into
andb
mov
xchg
cli
and
or
pop
repnz
or
add
movsl
fwait
dec
divb
fcmovu
ret
daa
fnstsw
mov
ds
ret
and
push
cmp
mov
xor
pop
mov
and
das
lock
and
rolb
int
sbb
sbb
xor
les
jle
clc
jo
or
inc
icebp
add
ljmp
aad
in
and
adc
sbb
inc
pop
sbb
int
outsb
pop
mov
ja
pop
cld
test
pop
andl
mov
out
in
push
and
pop
mov
das
mov
lods
dec
movsb
je
mov
faddl
aam
popf
aad
xchg
scas
mov
int3
mov
jae
adc
outsb
addb
enter
pop
pop
inc
pop
xlat
dec
push
mov
inc
je
sbb
sub
mov
lcall
and
inc
aaa
bound
xchg
rol
push
int3
je
pop
or
jecxz
or
ret
shrl
shrl
pop
outsb
lcall
mov
mov
sbb
push
inc
rolb
fcom
cs
shlb
sbb
js
lahf
je
out
or
sahf
dec
retw
xlat
outsl
test
dec
xchg
mov
cld
jmp
and
stos
mov
scas
fs
sub
inc
popf
movsb
je
adc
push
cmp
cld
and
add
jnp
cmpsb
mov
or
cmpsl
sti
mov
leave
rclb
popf
mov
ret
jne
stos
ficompl
out
and
into
mov
or
pop
xchg
dec
adc
mov
sub
lret
mov
xor
sub
insl
mov
sbb
cmp
jmp
push
pop
movsb
jmp
xchg
jnp
jne
inc
mov
mov
xor
dec
jmp
repz
and
in
jecxz
lcall
adc
add
pop
decl
daa
int3
xor
repnz
test
add
loop
or
test
lods
jnp
int3
lret
decb
pop
ja
sbb
lret
cmp
mov
clc
ret
popa
movsb
push
sub
aaa
push
sub
nop
xlat
xchg
scas
jmp
push
scas
or
jns
sti
hlt
hlt
mov
mov
push
stos
inc
sbb
cmpb
setno
jns
shlb
xchg
movsl
or
dec
jge
icebp
jle
and
adc
int
jns
daa
gs
jae
mov
dec
jl
fnsave
or
in
inc
mov
jmp
jno
sbb
jb
inc
psubw
mov
out
mov
pop
xor
rcl
test
and
or
xor
push
mov
sub
cmp
jg
adcb
mov
je
xchg
xchg
jo
cli
enter
mov
and
mov
sbb
int
lret
add
cmpsb
dec
lds
icebp
mov
mov
imul
jge
mov
lcall
sub
xlat
test
push
loopne
test
jecxz
add
lock
xor
pop
bound
jg
fwait
cmp
gs
xchg
jle
test
pop
orb
pop
xchg
fdivl
xchg
imul
and
mov
pop
push
push
mov
dec
call
dec
fcoms
or
jnp
imul
xchg
fcompl
loope
mov
add
loope
lret
push
mov
nop
call
pop
xchg
lods
fdivs
xchg
ja
test
mov
xchg
mov
pop
or
out
mov
mov
mov
mov
adc
push
addb
xor
out
stc
mov
loope
sub
mov
dec
fnsave
inc
xor
lret
in
andl
dec
add
daa
into
xchg
cmpsb
scas
imul
and
push
push
push
xchg
aad
cwtl
jp
mov
or
push
jge
clc
mov
aaa
fmul
add
pop
fisubs
repz
jo
lea
add
test
cwtl
jle
clc
das
stos
xchg
repz
outsl
dec
scas
push
dec
rcl
addr16
xchg
and
mov
nop
push
inc
out
dec
mov
pop
ja
sahf
push
and
int
aam
out
mov
lcall
cmc
cmp
out
push
cmp
xor
inc
xor
lret
test
jmp
fnstsw
xchg
jne
adcb
dec
xlat
push
sbb
les
pop
lock
outsl
and
inc
in
fsubrl
mov
fldt
cmp
sub
stos
inc
mov
into
mov
sub
xor
jo
pop
mov
xchg
and
sub
lret
lods
cli
mov
pusha
jo
sbb
mov
cs
xchg
jb
mov
pop
repz
and
adc
inc
jo
mov
push
inc
hlt
and
int
push
das
fimuls
mov
int3
pusha
imulb
and
sti
pop
nop
mov
jp
in
out
mov
and
test
bound
loopne
mov
inc
push
push
shll
fbstp
push
sub
ljmp
decl
and
pop
out
pop
fld
inc
mov
or
popa
pop
sbb
push
pushf
leave
popa
mov
push
and
mov
mov
jns
daa
or
add
push
dec
inc
sbb
mov
jne
push
repnz
sbb
push
jb
addr16
inc
or
lea
jo
dec
add
jecxz
movsl
lret
jae
ja
push
jp
out
mov
xchg
cld
outsl
jmp
mov
ret
lcall
aaa
cmp
imul
cmc
pop
outsl
jmp
mov
je
daa
int3
pop
loope
mov
in
push
pushf
popf
aam
daa
xor
mov
and
in
jno
es
je
jbe
in
out
movsl
subl
add
lret
adc
addr16
rcrb
push
adc
add
push
out
popf
sub
lea
pushf
fcomp
xchg
std
push
sub
and
push
ds
lahf
jno
jmp
cs
icebp
mov
insl
movsl
or
out
mov
mov
inc
sti
mov
stc
jne
flds
mov
push
or
cmpb
dec
mov
cwtl
cwtl
adc
mov
or
pop
lods
cld
cmp
out
xchg
mov
xchg
and
adc
xlat
mov
test
mov
test
cmp
mov
fsubr
sub
mov
push
cmp
gs
into
pop
test
call
imul
ret
push
loope
cmp
das
out
movsb
jbe
cmp
lods
mov
sbb
test
sbb
inc
fcomps
adc
xchg
ljmp
add
jl
clc
rcr
jp
scas
into
pusha
adc
repnz
negl
inc
dec
inc
and
repz
bound
repnz
sbb
mov
pop
xchg
xor
pushf
sub
push
inc
inc
cmpsb
mov
cmp
das
pop
adc
test
xchg
or
loop
test
cmp
jmp
loop
jnp
xchg
mov
mov
scas
add
mov
gs
inc
cmp
push
fwait
fwait
addb
popa
add
lock
repz
jmp
cwtl
cmp
leave
call
add
call
jmp
ret
lahf
aad
out
fistpll
adc
sbb
inc
cli
scas
call
cltd
mov
push
outsb
push
jl
pop
loope
popf
inc
lea
or
sub
jl
repz
adc
cmp
imul
xchg
addb
fistpll
ja
dec
mov
lds
mov
or
int3
imul
mov
dec
mov
ja
mov
inc
inc
ja
xchg
loope
mov
adc
add
aaa
aas
es
int3
out
mov
mov
pop
pop
xchg
scas
add
repnz
je
jnp
loop
cwtl
jb
push
adc
sarb
shr
sbb
sbb
ds
jbe
arpl
adc
out
test
roll
pop
clc
mov
je
mov
fs
add
or
icebp
pop
mov
cmp
mov
push
pop
sub
orb
pop
pop
xchg
push
mov
inc
clc
sbb
and
push
or
out
icebp
push
cld
subl
inc
cmp
stos
mov
cltd
cmp
jns
mov
xor
pop
lret
cmp
mov
es
mov
mov
repnz
fdiv
pop
shr
repz
xchg
sti
bound
mov
ljmp
and
or
jg
xor
jl
add
fldenv
mov
lods
cmp
cli
ret
or
add
mov
ljmp
inc
and
loop
insl
mov
push
cs
jb
xorb
popa
and
lods
push
testl
jmp
sbb
stc
mov
test
cmp
mov
faddl
pop
jnp
fisttps
cs
push
xor
and
adc
lds
sub
xor
insl
mov
lret
dec
call
dec
jg
sub
push
mov
pushf
hlt
sarb
push
dec
pop
stos
add
mov
arpl
lods
jno
jbe
call
sub
ljmp
movsl
shr
adc
cmc
xchg
ss
push
and
aaa
push
jno
xchg
cld
add
lock
lea
shrb
push
xchg
test
and
aaa
inc
fs
mov
jb
mov
add
es
mov
add
add
imul
idiv
lea
mov
sub
fisttpl
mov
pop
xor
idivb
mov
jmp
shl
jp
cmpsb
cs
div
pop
or
mov
jno
jnp
les
enter
mov
data16
mov
adc
sbb
adc
xor
adc
push
addl
jmp
aad
in
mov
test
mov
or
mov
pop
sarl
je
xor
cmp
add
mov
clc
std
sbbb
jbe
push
jl
mov
std
int
xor
orl
shll
lcall
sbb
stos
aaa
lock
jg
repnz
pop
mov
cmp
iret
pop
and
icebp
sbb
gs
push
xchg
dec
cli
mov
rclb
sbb
into
xor
int3
add
cmp
pop
mov
or
adcl
add
push
xchg
push
mov
add
fimull
mov
call
lods
enter
xor
cld
mov
das
or
in
cwtl
adc
int3
sbb
stos
add
aad
test
jno
lds
mov
sbb
in
jns
push
adc
sarb
inc
stos
cmp
adc
xchg
bound
rcll
lods
inc
enter
sti
mov
divl
imul
rcl
ficompl
mov
add
subl
xor
rcl
mov
sti
imul
push
pushf
dec
movsb
sbb
shlb
in
add
pop
inc
push
in
cmpsb
cvttps2pi
add
lods
sbb
add
mov
dec
or
xor
mov
mov
mov
adc
ds
xor
sub
sbb
aas
movsb
or
dec
inc
cmp
out
xchg
adc
sub
test
xchg
pusha
ret
adc
pop
lahf
sub
sub
mov
jne
xor
adc
dec
mov
aad
inc
pushfw
vmovsd
test
xchg
push
sub
push
insb
fwait
mov
test
push
and
pushf
fisubl
xor
dec
jmp
dec
jnp,pt
cmp
pop
sub
mov
jge
add
mov
insb
push
outsb
lcall
or
push
mov
bound
iret
mov
pop
arpl
fnstsw
push
dec
les
inc
out
sbb
jl
inc
sarb
cmp
int3
dec
nop
pop
data16
mov
sub
test
or
outsb
jg
add
inc
loope
mov
out
nop
sbb
xor
lret
fdivl
mov
ljmp
mov
mov
mov
ljmp
dec
jecxz
int3
pushf
jbe
outsb
test
mov
out
lock
cmp
loope
mov
cmp
sarb
pusha
pop
xor
cmp
imul
sahf
mov
sub
adc
mov
adc
lds
je
test
enter
inc
and
xchg
jmp
adc
bound
inc
data16
sub
dec
mov
mov
push
or
sahf
clc
out
or
loop
subb
jp
lds
push
sub
pop
mov
into
stos
andb
fst
clc
mov
jns
add
push
iret
pop
mov
imul
arpl
loope,pn
sub
add
mov
sub
mov
test
cmp
in
inc
dec
dec
mov
xchg
inc
cmovb
cmp
jns
addr16
mov
pop
movsb
inc
or
outsb
jmp
idivl
add
jle
shlb
and
jb
fdivs
fistps
sub
je
aam
leave
xchg
fldl
fsubrs
xchg
xchg
push
ja
fdivs
in
mov
dec
ficompl
out
addr16
aam
push
je
xor
cmpl
insb
and
pop
cmp
outsb
or
rclw
inc
cmc
mov
lret
pop
mov
fidivrs
adc
mov
out
iret
push
aaa
fwait
sahf
shll
das
push
mov
pop
inc
stos
xchg
jne
jbe
jge
shl
imul
or
out
or
ja
test
dec
cltd
fsub
jno
mov
fldt
push
cld
andl
not
push
pop
jecxz
roll
inc
sbb
fdivl
xchg
jecxz
leave
iret
gs
imul
mov
in
mov
adc
cmp
dec
enter
rorb
cmp
jbe
lds
mov
pop
add
rorb
cwtl
add
add
out
lahf
lea
dec
mov
daa
jp
adc
jle
enter
or
lods
xor
push
xor
add
cwtl
sahf
and
gs
cli
int
sbbb
xchg
jmp
cmpsb
mov
add
mov
imulb
push
jb
into
sbb
jne
mov
test
jbe
sub
jb
xchg
mov
dec
fcmovne
mov
xchg
iret
pop
jne
dec
sbb
dec
mov
cmpsl
sub
lret
ret
inc
jp
sbb
inc
add
div
mov
mov
inc
cmpsl
mov
fucomi
stos
mov
adc
mov
dec
push
pop
mov
mov
mov
loopne
inc
aad
push
scas
aaa
popf
mov
jnp
das
cmp
in
xor
mov
or
push
test
dec
jl
test
movsb
stos
xor
xchg
pop
cltd
andl
lcall
es
mov
test
xchg
scas
adc
sbb
pop
sahf
push
push
dec
data16
mov
movsl
mov
bound
movsb
xchg
test
andl
push
mov
rcrb
jbe
popa
aam
fs
inc
fsubrl
data16
test
fs
es
sbb
sahf
les
stos
repz
jno
inc
outsl
mov
outsb
push
sub
iret
push
or
push
cltd
and
lret
pop
imul
xlat
xchg
jmp
lahf
jnp
sti
addr16
jmp
nop
inc
bound
xchg
les
dec
testl
pop
xor
push
hlt
cmp
xchg
mov
fwait
mov
and
adc
or
add
out
add
cltd
jbe
add
outsb
mov
popf
dec
jg
xor
mov
xchg
mov
add
mov
mov
pop
negb
daa
adc
cld
mov
sbb
inc
in
divb
xor
and
xchg
jne
jne
lock
lock
xor
and
adc
inc
scas
aam
and
in
test
es
ret
xchg
xor
clc
leave
add
mov
mov
xchg
push
mov
cli
xchg
addr16
cmp
test
stc
ficoms
sub
push
sub
jp
cmpsl
aaa
mov
hlt
add
add
lret
dec
push
inc
sbb
data16
imul
inc
adc
inc
xchg
dec
shr
loope
adc
sub
test
es
adc
xchg
pop
aas
or
addl
stos
hlt
jns
popf
sub
fcmovnb
lret
cmpsl
mov
adc
dec
mov
aad
xchg
xchg
subb
or
incb
scas
pop
ret
fmulp
pop
adc
xor
aam
push
in
pusha
leave
orb
xchg
sbb
pop
cmp
mov
pop
push
jl
lds
sub
shl
pop
pop
aaa
pop
dec
adc
sub
mov
jl
mov
xor
test
xchg
inc
adc
cld
sub
mov
xor
ds
cs
mov
fcoms
dec
xchg
stc
cmp
mov
mov
lret
pop
sbb
mov
pop
stc
mov
inc
lods
adc
jg
outsl
insb
jo
mov
repnz
adc
xor
xlat
sbb
sub
mov
outsb
fsqrt
repz
js
jecxz
lcall
dec
shll
fmull
add
cmp
das
cli
pop
add
jg
push
cmp
test
xor
rolb
pop
orb
cmpsl
or
adc
aad
and
jno
std
mov
cmp
hlt
cli
sarl
inc
push
into
aas
adc
push
dec
lahf
pop
inc
out
clc
sub
shlb
mov
jle
int3
fiaddl
jmp
jle
pop
sbb
cmp
and
fsub
adc
ret
ljmp
or
cmc
negb
pop
out
fidivl
into
enter
fwait
pop
pusha
jecxz,pn
add
es
cltd
aam
icebp
cmp
push
daa
adcl
xchg
addr16
xchg
shl
addl
dec
rcrl
dec
push
xor
sarb
sbb
arpl
lods
loopne
push
cmp
inc
lea
mov
adc
and
movsl
jle
sbb
int3
repnz
and
lea
pop
or
cmp
imul
xor
adc
jge
outsl
mov
dec
in
orb
mov
mov
push
in
jb
and
mov
dec
sub
sbb
and
inc
mov
inc
dec
addr16
xchg
jmp
mov
lods
push
hlt
push
push
cld
fidivs
xchg
mov
push
std
in
popa
mov
popa
and
popa
jmp
inc
scas
dec
pop
lock
or
sbb
xchg
fisttpll
mov
pop
andb
rorl
jno
sbb
mov
lcall
cld
mull
aas
aad
dec
jnp
insl
adc
int
jne
in
sub
out
cmp
xor
pushf
sub
dec
pop
shll
scas
pop
imul
xchg
fdivl
mov
jne
jb
push
aas
jg
sbb
and
push
add
xchg
add
scas
outsb
jno
shll
icebp
adc
aas
sbb
addr16
je
loope
dec
add
insl
mov
adc
jl
mov
data16
daa
sbb
fistl
mov
popa
cs
call
adc
pop
hlt
addb
inc
popf
in
mov
pop
out
mov
and
mov
xchg
mov
pop
jmp
clc
mov
out
repz
movsb
mov
pop
cmpl
and
pop
mov
xor
and
add
or
or
xor
push
add
jne
aad
inc
jmp
lahf
push
cld
ret
test
mov
mov
js
push
iret
add
fldt
test
sbb
add
cltd
lcall
dec
imulb
fistps
mov
xchg
int3
lods
int3
or
lock
dec
adc
mov
divb
sbb
outsb
and
jae
mov
outsb
dec
xchg
sahf
loope
js
mov
cmpsl
pop
adc
dec
ret
out
ficompl
sahf
nop
rclb
cs
add
into
push
inc
push
or
or
ficompl
shrl
repz
je
dec
pop
and
adc
fidivrs
push
sti
cli
inc
add
mov
aam
mov
rorl
push
subl
mov
adc
jle
mov
incb
dec
in
fdiv
iret
pop
inc
les
cwtl
imul
sbb
hlt
stos
movsl
loopne
outsb
scas
gs
xlat
push
stc
sub
mov
test
cltd
fimuls
jb
cmp
lret
mov
outsl
bound
xor
cli
rclb
cmp
arpl
insl
in
xor
push
jo
or
leave
dec
insb
jbe
clc
and
out
scas
cltd
in
xor
shl
dec
lret
mov
jmp
sub
in
xchg
mov
mov
das
jmp
mov
mov
and
fwait
or
mov
inc
in
fistpll
cs
jae
repz
out
outsb
mov
push
cmp
and
jb
popf
xor
cs
or
fstl
pop
and
adc
mov
clc
xchg
out
out
cs
pop
mov
pop
mov
call
xor
xchg
in
into
sahf
std
jp
pop
inc
nop
inc
call
pop
addr16
sahf
jg
bound
push
cmp
push
pop
lock
repz
cwtl
leave
xchg
popa
jo
inc
ljmp
lods
push
jmp
out
add
icebp
dec
and
and
push
dec
mov
cmpsb
mov
cmp
rolb
movsb
xchg
int3
pop
push
rcll
dec
pop
cmpsl
pop
xorl
subl
pop
je
pushl
cmp
cli
cltd
pop
or
add
imul
pop
jne
add
adc
lock
sahf
cmp
aam
gs
outsl
loopne
add
std
mov
ljmp
rcl
aad
scas
or
adc
mov
insl
seta
loopne
arpl
mov
scas
outsb
adc
jp
dec
clc
loope
cwtl
mov
adc
sahf
pop
insb
and
repnz
call
jecxz
loop
insb
in
lret
xchg
dec
xchg
push
mov
jl
mov
out
outsb
jnp
xorb
inc
std
and
sub
mov
stc
jle
test
jnp
or
xchg
scas
mov
fcoms
faddl
pop
out
sbb
fnsave
jnp
push
xor
mov
int
clc
js
sbb
jecxz
inc
push
outsb
ds
sub
popa
dec
mov
iret
push
cmp
inc
pusha
iret
mov
cmp
cmp
out
ss
add
mov
push
push
inc
mov
xor
lds
fildll
pusha
pop
sub
mov
or
int3
sbb
aad
lcall
sarl
mov
out
xchg
rcll
jp
adc
xor
mov
push
mov
mov
ss
lods
pushf
pop
in
or
aas
mov
aad
arpl
sub
jnp
sbb
test
imul
imul
push
pop
adc
popw
add
inc
mov
int3
xchg
mov
fs
lods
push
add
cltd
xchg
ret
inc
repz
xor
daa
into
or
and
fcoml
fwait
mov
test
push
lret
mov
mov
jnp
cli
sub
pop
ret
xchg
pop
cmc
jnp
dec
mov
das
add
sub
sti
adc
idivl
iret
scas
idiv
out
test
or
fisubrs
popf
in
gs
jnp
out
dec
push
call
xor
insb
xor
in
add
add
and
inc
ljmp
insb
push
adc
test
pop
or
mov
sahf
pop
mul
push
push
negb
out
and
mov
xchg
push
repnz
ss
in
or
push
call
sarl
out
cs
mov
adc
jb
sub
inc
sbb
inc
mov
xor
rcl
mov
inc
lods
lahf
fcompl
mov
push
ret
jl
ss
sbb
mov
cmp
xorl
fwait
jge
aas
nop
and
and
pop
inc
daa
js
in
push
filds
xchg
shlb
call
cld
mov
mov
lods
jae
mov
pop
and
mov
in
leave
rcrl
and
ret
lock
imul
ds
xchg
jnp
push
dec
jp
pop
inc
daa
dec
cld
lcall
pop
pop
jo
adcb
cmp
shrl
pop
push
push
xor
out
outsb
dec
dec
or
and
bound
mov
lret
divl
push
repnz
fstps
in
aaa
enter
mov
mov
lret
mov
sbb
clc
outsb
loopne
es
das
pop
ds
sub
in
and
xor
popf
pop
fstps
enter
movsl
sbb
test
sbb
push
mov
push
and
add
out
cmc
lret
sub
add
mov
stos
lret
mov
pop
rcrb
leavew
lods
icebp
imul
aas
imul
mov
rcrl
imul
mov
pop
inc
rolb
or
mov
dec
std
aad
fdivr
xchg
jp
loopne
pusha
aaa
cltd
xchg
sbb
scas
je
pop
jmp
lods
popa
lea
lds
push
push
lods
or
pop
sbb
jnp
dec
add
ror
xor
sbb
fucomip
ds
nop
cmp
test
or
mov
rcll
push
dec
inc
mov
or
shlb
popa
jno
les
cmp
dec
loope
in
outsl
cs
jnp
mov
cmp
inc
dec
sub
add
mov
imul
mov
popf
dec
addr16
addr16
lret
out
aam
lcall
mov
push
jp
cmp
xchg
add
call
mov
mov
movsb
sbb
mov
sbb
fidivrs
jns
popa
lea
mov
das
repnz
in
push
xor
push
into
loopne
in
jmp
ja
jns
push
bound
mov
cmp
or
xor
repnz
xlat
and
adc
push
jbe
pop
mov
jno
mov
fsts
push
stc
dec
inc
cmp
pop
stc
mov
call
jle
jnp
add
dec
lret
movsl
in
movsl
push
xor
les
jne
testl
xchg
jo
jae
out
push
adc
insb
int
jg
sub
test
dec
and
and
rcrl
leave
pusha
lods
mov
fsub
je
push
daa
int
idiv
mov
xor
incb
test
xchg
mov
mov
nop
in
adc
dec
testl
or
sbbl
fwait
push
cli
pop
mov
sbb
outsl
pop
shlb
subl
push
fucomi
push
fiaddl
xor
mov
pop
mov
imull
adc
and
fsubrl
imul
jp
rcrb
add
pop
fstl
test
mov
dec
cmp
scas
mov
into
xchg
lock
cltd
push
jae
mov
fcmovu
daa
test
or
in
xor
mov
faddl
aas
xchg
push
sub
ficompl
cmpb
std
mov
dec
mov
bound
and
push
mov
ss
mov
push
out
es
dec
data16
lods
inc
add
pop
mov
sarl
loop
add
and
cmpsl
inc
sbb
pop
pusha
int
addr16
out
fwait
and
sahf
and
sub
jge
aaa
jmp
hlt
sbbl
fcompl
pop
and
xor
lds
mov
hlt
jp
mov
mov
repz
push
inc
test
jbe
push
add
sbb
outsl
int3
inc
and
xchg
aaa
jne
jns
jno
mov
or
adc
sub
ss
aam
outsb
lods
xor
add
rcr
dec
in
xchg
and
mov
into
push
imul
mov
repz
int3
xchg
shufps
popa
out
movsb
scas
inc
xchg
mov
jne
leave
or
xchg
xchg
pop
inc
push
jns
movsl
popf
hlt
ja
adc
jbe
dec
lret
inc
loop
xor
jnp
cmp
les
and
lods
call
pop
mov
inc
rorb
sub
popa
movsl
xorl
repz
rcrl
cmp
insb
repz
aas
jp
cli
test
add
sahf
mov
ret
neg
inc
inc
aas
dec
movsb
rol
adc
ds
arpl
jo
imul
jno
or
xor
scas
das
adc
or
push
or
addr16
loopne
pop
lret
fstpt
mov
or
pusha
fmull
xchg
or
inc
fists
in
fists
je
test
xchg
xor
pop
cmp
scas
cltd
add
xor
push
fwait
mov
in
push
std
cmp
dec
pop
scas
daa
fisttpl
pop
mov
sbb
cmpsl
cltd
fsts
push
stos
or
fxch
adcl
xchg
push
jle
inc
ret
outsb
pop
cwtl
fwait
or
lods
and
adc
pop
popf
rorl
aam
in
mov
shrl
nop
pop
push
sbb
fbstp
pop
vpunpckhdq
les
mov
mov
scas
inc
stc
ljmp
xchg
rorb
cmp
xchg
loopne
cmp
mov
push
aam
inc
xor
shlb
jno
sub
xchg
pushf
dec
lret
shrb
cmp
pop
mov
add
add
leave
in
cmp
or
adcl
cmp
fs
adc
scas
cmp
ret
test
mov
mov
push
ret
mov
xchg
loope
scas
data16
xorb
shl
cmc
push
inc
jno
xchg
test
lods
mov
sti
inc
inc
add
test
lcall
add
mov
jl
lahf
movd
mov
sub
pusha
mov
fldenv
test
mov
js
pop
mov
lahf
jecxz
hlt
sbb
adc
addr16
fimuls
movsb
mov
and
mov
xchg
pop
test
xlat
decb
jp
xor
adc
imul
fdiv
int
and
push
cli
loopne
js
jmp
repz
pop
rcll
mov
repz
lret
out
mov
leave
xchg
mov
mov
data16
sbb
or
clc
sbb
lock
or
or
jle
push
push
and
jnp
jle
loopne
and
notl
icebp
mov
or
outsb
out
fwait
arpl
rorb
xchg
repnz
push
inc
sbb
subl
push
std
std
xchg
fcoml
stos
ljmp
in
adc
int3
cmp
jnp
mov
or
shll
adc
shlb
mov
pop
push
cld
mov
mov
cs
test
out
nop
xor
dec
std
or
sub
xchg
sbb
jl
pop
insb
cli
jge
inc
subl
mov
mov
mov
dec
iret
dec
fs
xchg
cmp
cmp
mov
insb
repz
sahf
repz
mov
rcl
pop
sub
pusha
jp
int
inc
jge
shl
bound
lahf
inc
mov
adc
fidivs
aaa
enter
shlb
mov
dec
test
aad
fdivrl
addb
mov
sahf
sub
mov
cmpsb
fwait
sbb
popa
shll
popa
push
xor
and
outsb
inc
adc
or
or
xrelease
fdivrs
lret
stc
imul
mov
fisttps
cltd
pop
xchg
mov
shll
push
add
sbb
add
cltd
dec
aam
lret
pop
pop
sbb
jmp
jge
push
or
cmp
stos
xor
lock
test
push
insl
out
pop
xchg
pop
rclb
xchg
mov
mov
xchg
into
jle
xchg
lret
fwait
das
mov
xchg
inc
sbb
loope
and
iret
jno
pop
imul
cmp
add
ret
sbb
cltd
cmp
into
fnstsw
or
iret
mov
mov
cmc
xlat
call
lcall
dec
or
sub
ja
les
jp
jnp
out
and
jno
insl
sbb
je
mov
jl
mov
lds
enter
xchg
mov
sbb
sti
pop
cmpsl
into
arpl
xchg
adc
mov
jnp
sub
stc
cwtl
jnp
sub
nop
imul
out
push
out
and
push
xor
sub
push
inc
sub
pop
dec
insl
xchg
ljmp
adc
lret
aaa
xchg
pushf
xor
out
xchg
in
add
scas
subb
mov
lcall
fisubrs
pusha
fnstcw
int3
sbb
pop
mov
lock
jl
ret
scas
ret
scas
ss
popa
pop
fistpll
adc
test
aas
arpl
aas
mov
xchg
sbb
test
imul
div
push
dec
data16
push
ss
push
inc
mov
addr16
or
push
bsr
cmc
pop
andl
repz
orl
jbe
sub
lock
lock
fs
rcrl
aad
jbe
xchg
addb
and
movsl
stc
out
sbb
push
ss
andl
repz
inc
push
dec
cmpsb
fwait
out
pop
xor
iret
in
fmull
xor
xchg
pop
mov
and
jge
mov
sub
out
dec
xchg
daa
xor
xchg
daa
js
cmpsb
popf
cltd
xor
jl
xchg
aas
imul
jo
nop
nop
insb
cmpl
xor
sbb
or
outsl
xchg
xor
test
xchg
add
push
aam
int
stc
outsb
push
lahf
sarb
lret
ficoms
lds
xchg
dec
mov
mov
inc
sahf
pop
push
and
test
push
mov
mov
iret
pop
inc
in
shrb
dec
add
jl
mov
mov
dec
dec
cld
cmp
add
pop
sbb
mov
pop
out
sbb
inc
xlat
push
insb
mov
arpl
push
push
lret
jge
xchg
inc
or
leave
mov
push
jge
xor
outsl
nop
sbb
test
mov
dec
mov
xchg
test
lret
in
xchg
fsubrs
loop
lods
inc
inc
inc
into
ljmp
jno
xchg
or
adc
add
imul
jge,pn
fstp
xchg
loopne
ds
and
jno
mov
add
lret
ds
push
cmp
dec
push
scas
ljmp
xchg
xor
insl
insl
aas
lods
mov
mov
jno
dec
aam
gs
lcall
mov
dec
pusha
cmp
enter
call
js
stos
ret
inc
roll
outsb
push
or
push
lds
cmp
mov
jb
jle
das
xchg
pop
push
or
sti
push
pusha
leave
or
push
sbb
cmp
mov
jmp
ret
xchg
lds
cmp
adc
cmpsb
inc
push
sbb
or
xchg
mov
repnz
jne
mov
inc
mov
sbb
stc
and
or
imul
pop
lods
pop
or
sbb
test
cwtl
jbe
xor
and
mov
push
test
mov
pop
pop
loop
cmp
insb
inc
push
sar
adc
fstpt
cld
lods
mov
xchg
aas
into
data16
in
loope
and
pop
jns
into
pop
adc
movsb
in
fmul
clc
cmp
cmp
adc
mov
leave
leave
pop
and
jnp
fcmovu
inc
or
nop
adc
and
jbe
mov
dec
xchg
mov
jge
xchg
xor
dec
nop
or
mov
mov
cmpsb
loope
jecxz
fnstenv
test
imul
sub
pop
les
repnz
je
out
lahf
imul
push
insl
stos
jno
insl
mov
and
les
lret
std
pop
mov
jg
das
lret
mov
lods
add
adc
loop
rolb
sbb
cmp
sbb
xchg
fs
sbb
insl
shlb
loop
mov
xchg
aas
jge
and
mov
dec
repnz
adc
cmp
mov
pushf
sbb
pop
jae
mulb
sbb
jns
in
ja
notl
sub
dec
pop
out
imul
xor
mov
pop
cltd
lock
sub
sbb
xorl
icebp
stc
push
mov
cmpsl
add
in
pop
mov
add
ds
inc
bound
fbld
imul
movsb
mov
jno
push
in
pop
int
push
mov
outsb
andl
sbb
jnp
arpl
add
aam
sub
add
pop
jge
cmc
fistpll
nop
xchg
out
hlt
pop
test
in
xchg
fsubs
insb
shlb
dec
loop
sahf
imulb
mov
push
das
loop
pop
pop
push
movsb
insl
je
lds
adc
mov
daa
mov
sbb
pop
cmpsb
cs
sub
movsb
xor
loopne
hlt
lahf
push
adc
scas
jne
lret
push
push
in
and
adc
sbb
add
sub
xchg
mov
and
mov
pop
lret
mov
ss
fs
and
or
mov
iret
dec
movsl
call
mov
lods
addr16
or
cli
into
lahf
dec
jle
cs
add
push
pop
loop
outsb
mov
mov
leave
jnp
popa
inc
jp
mov
shrb
pop
andb
pop
push
push
inc
mov
lcall
movsl
xchg
inc
enter
adc
xor
or
inc
push
mov
add
xlat
test
cmp
lods
into
mov
jb
daa
add
sbb
arpl
cmp
pushf
test
cmpb
inc
dec
stc
mov
add
lea
push
push
mov
cmp
clc
popa
movsl
jb
mov
je
ljmp
add
push
sbb
cli
adc
cmpb
mov
dec
add
pop
mov
jns
pop
mov
or
pop
push
dec
mov
adc
aas
test
dec
push
mov
and
les
fisubrs
scas
jmpw
mov
push
imul
jmp
jp
stos
jmp
jb
push
jb
int
xor
inc
rcll
mov
push
ret
mov
pusha
cltd
mov
add
dec
lods
sti
jecxz
sub
sub
test
gs
in
jno
mov
sbb
out
add
jmp
adc
push
jle
mov
push
push
shlb
pop
cmp
inc
push
xor
adc
aam
das
mov
scas
push
shl
stc
push
mov
dec
jecxz
mov
sahf
incb
mov
push
dec
addr16
sbb
pop
xchg
addr16
jle
xchg
mov
in
cmp
stos
xchg
mov
inc
lcall
popl
xlat
mov
aam
sub
adc
mov
gs
pop
sbb
bound
popf
mov
enter
popa
mov
xorb
xchg
push
dec
arpl
out
aad
push
push
aaa
mov
rcr
dec
cmp
push
mov
gs
pop
jmp
fwait
mov
decb
nop
aad
push
pop
repz
call
lea
sub
mov
adc
in
pop
dec
inc
jnp
sub
mov
jb
or
loop
aaa
mov
subb
sahf
xor
adc
mov
arpl
lret
popa
pop
cmp
out
movsl
adc
iret
sub
sti
push
jnp
aad
andb
and
pop
ret
cli
xchg
hlt
out
mov
pop
jle
insb
add
notl
lret
arpl
in
ret
pop
push
jno
icebp
bnd
fxch
dec
mull
lret
push
sti
out
mov
aaa
fmul
fcmovne
insb
stos
popa
jl
sbb
dec
push
ss
xchg
xor
lret
imul
inc
dec
sub
cli
mov
ja
cmc
lahf
cmpsb
mov
push
pop
jp
jne
mov
mov
xor
scas
sbb
or
mov
scas
pop
imul
lahf
out
std
cltd
jp
push
mov
fwait
jne
loopne
fcmovne
cmpsl
cli
testl
inc
pushf
lods
data16
dec
popf
jl
je
mov
outsl
int
push
mov
js
fst
xor
stc
ss
dec
pminsw
mov
mov
push
lods
dec
cmpsl
xchg
not
xchg
into
pop
mov
lret
and
cmp
jne
jnp
sub
mov
stos
xchg
push
adc
cmp
xor
xchg
sub
cmp
mov
repz
xchg
inc
mov
aas
in
sbb
mov
pop
adcl
arpl
ljmp
mov
push
enter
cmp
adc
int
xchg
push
and
sub
loope
mov
jns
xchg
mov
sbb
imul
fdivrp
cmp
jmp
jmp
divl
in
cmpsb
je
mov
inc
sub
mov
mov
cmp
pusha
mov
pop
fldl
jbe
pop
sub
fadd
sub
cmc
xchg
dec
or
dec
imul
jge
imul
jle
ljmp
scas
and
mov
mov
jle
gs
scas
xchg
fmull
or
pop
mov
mov
sti
fdiv
sub
std
and
jno
pop
arpl
cs
sbb
xchg
std
loopne
mov
lcall
mov
ror
push
and
jae
mov
icebp
dec
or
aad
cmp
das
push
push
out
and
mov
dec
jmp
and
mov
pushw
nop
xchg
dec
inc
or
sti
imulb
shll
test
cmp
xlat
jnp
and
sahf
lahf
mov
pop
leave
xchg
pop
xchg
mov
cmp
xchg
in
mov
aam
data16
lock
in
repz
cli
cli
mov
lock
es
stos
cmp
mov
cmpsb
dec
mov
hlt
es
in
push
ret
arpl
stos
pop
popf
ss
jno
movsl
fadds
cmp
sub
cli
pop
xor
dec
jns
xchg
dec
cs
sahf
stos
lcall
insl
pop
push
fwait
outsl
ficoml
cmp
popf
pusha
test
jns
pop
dec
pop
sbb
jo
das
push
pushf
mov
call
adc
add
xor
stos
mov
into
mov
mov
sub
pop
sbb
jne
out
xchg
pop
test
sbb
and
fcomip
stos
sbbl
dec
push
dec
pop
inc
dec
dec
cwtl
les
ret
push
mov
push
sahf
ror
cltd
test
dec
subl
fnstenv
mov
jge
cmp
push
sub
fst
ss
xchg
pop
xchg
xchg
adcl
mov
xor
icebp
xchg
mov
mov
ficoml
fcomi
push
out
or
std
test
cwtl
rcl
mov
jg
sti
outsb
add
insb
popa
mov
fxch
mov
pop
loop
xor
inc
loope
xlat
jne
add
xchg
mov
lret
out
jne
jo
out
cmp
mov
adc
hlt
je
mov
mov
fbstp
or
sbb
add
mov
int
out
cmp
cs
outsb
mov
call
pop
test
jmp
mov
dec
inc
lods
lds
gs
daa
scas
mov
push
xchg
fucomp
outsb
sbb
in
jge
or
or
cs
mov
push
jmp
mov
je
sbb
out
pop
xchg
adc
ds
loop
in
testb
add
xor
or
mov
or
add
and
pop
ljmp
or
push
bound
sbb
cmp
dec
lret
mov
and
test
pop
push
lret
movb
xor
xor
jmp
cmp
pop
out
push
or
dec
jl
and
mulb
les
pusha
test
mov
cld
mov
sbb
cmp
jp
push
cs
js
lods
enter
in
sysret
lods
fadds
loopne
mov
push
jne
mov
jmp
fldl2t
jecxz
sub
cmp
dec
pop
sub
shll
adc
sub
cmp
fsubrl
stc
pop
nop
push
xchg
xorl
sub
aad
push
cmp
push
subl
cmp
dec
shlb
into
push
rcrl
jge
jb
add
incl
sbbb
or
in
out
test
lcall
loop
inc
test
cmc
sbbl
pop
cmc
xor
mov
push
aas
adc
jnp
das
mov
popf
or
lcall
mov
sbbb
sub
pop
mov
test
fs
xchg
fcmovbe
push
fwait
js
pop
in
jl
insb
and
fisubrl
sbb
cmp
dec
test
insl
mov
fsts
loope
ret
pop
outsl
shr
mov
add
arpl
jge
daa
int
mov
leave
cmpl
dec
ror
push
mov
sbb
add
sub
push
pop
imul
enter
jae
push
inc
pop
or
pop
pop
or
hlt
fwait
cli
mov
out
sbb
xor
cmpsb
cmp
scas
call
add
add
repnz
add
ret
add
ljmp
jmp
movsl
outsl
lahf
aaa
sub
mov
or
dec
jae
pusha
ret
pop
int3
mov
mov
cmc
mov
in
pop
or
mov
or
cmp
push
lret
ljmp
test
das
cmp
push
cltd
pop
jns
dec
popf
fsub
dec
pop
jecxz
mov
outsb
into
jmp
jg
and
mov
push
push
test
ja
lods
sbb
add
gs
loope
das
int
loope
decl
push
inc
cltd
dec
movsl
insl
jp
mov
hlt
mov
pusha
insb
test
pop
in
jmp
cmp
mov
ret
push
shlb
icebp
sbb
xorl
mov
shl
xor
add
pop
fisttpll
xchg
dec
cmp
mov
jno
mov
or
iret
in
test
lods
fsubl
mov
pop
aad
push
test
xor
inc
mov
stos
scas
ret
je
in
mov
insl
and
add
in
pop
cli
js
sbbb
sub
push
das
rcrl
ljmp
xchg
je
lea
lods
xor
inc
shlb
mov
and
mov
in
or
adc
lea
inc
mov
pushf
mov
mov
dec
ja
jge
cs
lock
gs
es
cwtl
cs
mov
pop
call
test
adc
cmp
cmp
call
mov
aam
or
add
out
add
adc
adc
xchg
pop
pop
outsb
jp
inc
ja
mov
xchg
mov
repz
push
insb
sub
cmp
sahf
xchg
rcrl
xor
jecxz
aaa
mulb
movsl
pop
mov
int
das
mov
pop
rol
push
xlat
xchg
pop
adc
mov
dec
rcrb
int
fstpl
sub
push
fldl
pop
jno
hlt
popa
xchg
in
popf
ret
and
call
sub
loopne
jecxz
jbe
sbb
and
pop
mov
mov
xlat
adc
mov
pop
mov
add
divb
mov
insl
add
add
cmp
mov
in
dec
cmp
clc
adc
sbb
dec
mov
or
xor
ds
test
mov
fmulp
cld
negb
rorl
mov
lret
mov
ja
hlt
cmp
push
mov
cli
push
enter
in
jge
sub
push
jl,pn
gs
aaa
inc
jo
outsl
push
aaa
outsl
pop
xchg
lods
sbb
and
mov
hlt
cmp
jle
icebp
js
jae
fiaddl
in
mov
adc
inc
and
loop
sbb
loope
inc
hlt
inc
repz
xchg
xchg
outsb
outsl
mov
dec
adc
xor
fsubl
sub
mov
push
dec
cmpsb
testl
pop
sub
cld
cmpsl
add
mov
xor
mov
mov
jnp
fnstsw
xor
sahf
enter
out
cmp
icebp
mov
dec
mov
jmp
adc
and
ror
mov
and
mov
or
xor
and
dec
in
jp
xor
push
jp
fadd
clc
in
es
aaa
jecxz
and
jne
mov
mov
push
insb
and
stos
pop
fwait
push
cltd
lods
movsl
out
fcomip
mov
cmp
repz
jne
push
outsl
ficoms
jns
addr16
add
sbb
insb
add
insb
sti
insb
lcall
ficomps
lahf
dec
push
scas
loop
adc
push
add
add
loope
out
repz
pusha
outsl
stos
cmp
xor
sbb
mov
adc
dec
ja
or
outsb
int3
fwait
push
lea
jmp
mov
ss
mov
jge
push
inc
pop
lret
push
mov
fstpt
aaa
cmp
dec
fs
or
mov
cmp
inc
sub
xchg
jns
out
vprotq
jno
gs
push
add
sahf
jns
and
fisttpll
test
dec
loope
pop
cmpsb
out
adc
scas
mov
push
imul
hlt
xchg
insl
stc
or
jno
jmp
dec
cmpsb
jnp
lcall
push
or
popf
test
cmpsl
lret
clc
shr
adc
sbb
lods
adc
xor
lock
lods
push
mov
xchg
mov
fldcw
test
jle
stos
ficomps
xchg
popf
or
bound
sbb
fcomps
sub
mov
xchg
fiaddl
add
mov
movsb
movsb
xlat
aam
add
ss
mov
mov
ret
lret
movsl
cmp
xor
sahf
loopne
push
fs
adc
repz
into
rorb
cmp
in
out
dec
scas
inc
scas
push
nop
jp
mov
repnz
pop
cmp
stos
data16
out
mov
push
xchg
fnstsw
dec
das
add
fisubrs
xor
mov
daa
das
fwait
inc
push
inc
adc
lock
aaa
jmp
fwait
pmuludq
movsl
sarb
fmulp
mov
pop
xchg
scas
testl
call
add
fcoml
jg
and
popa
daa
int3
cmp
insl
lea
mov
sbb
push
mov
test
lea
sahf
and
cmpsb
lret
int
fs
xor
imul
ds
and
out
dec
mov
hlt
add
aaa
mov
xor
fistl
mov
push
mov
dec
dec
ja
cmc
je
mov
sub
stc
sub
int3
dec
jl
in
test
lods
xor
jb
addl
mov
je
inc
enter
pop
inc
ds
lea
jecxz
pop
scas
shlb
mov
xchg
dec
cwtl
scas
mov
les
movsb
mov
lahf
xor
daa
cmp
jbe
mov
and
add
pusha
sbb
mov
cmpsb
push
pop
mov
aam
add
jae
mov
or
push
xor
data16
ret
loopne
xchg
dec
fwait
adc
jmp
mov
push
xchg
lret
lcall
lahf
cs
das
out
test
jecxz
inc
filds
xchg
ljmp
or
and
scas
lock
test
sub
cmpb
outsl
dec
sbbb
loopne
repz
sbb
je
imul
cld
imul
jecxz
shlb
dec
jg
inc
stos
lcall
pop
das
rolb
arpl
ret
cs
test
pop
fidivrs
jp
and
lcall
icebp
dec
sbb
mov
in
sub
shll
fstpl
dec
ret
leave
jle
cmp
cmc
jo
lret
mulb
nop
cmp
mov
les
shlb
es
dec
pop
int
push
sti
rol
sbb
inc
stc
cmpsl
xor
adc
outsl
mov
xor
adc
pop
sub
cwtl
dec
pop
pop
pop
ret
cwtl
xor
shrl
out
sbb
stc
notl
ds
sarl
push
fbld
cmc
ss
jns
push
imul
mov
dec
repnz
ret
or
xor
adc
push
pop
call
gs
add
icebp
lock
out
daa
pop
xchg
test
pop
or
call
ret
scas
cmp
cmc
jle
mov
lock
roll
cltd
dec
mov
mov
add
mov
mov
mov
dec
addl
adc
outsb
lods
pop
in
js
mov
ret
pop
jp
inc
sub
pop
sub
xchg
sarl
loopne
mov
jmp
pop
test
mov
sbb
xlat
push
adc
mov
add
mov
or
loop
test
dec
fmul
mov
jg
lods
dec
rcll
int3
fidivrs
push
xor
dec
jne
mov
sub
xor
xlat
icebp
fisttpll
inc
fiaddl
adc
in
cmp
jns
stos
lret
insb
hlt
xchg
std
int
lods
cmp
mov
xor
clc
lods
jmp
adcl
out
mov
push
loope
loope
mov
push
adc
lcall
xlat
pop
mov
je
push
test
incl
les
int
mov
popf
dec
inc
loope
jl
jge
or
jp
push
sub
xor
nop
das
push
xchg
cmp
add
imul
xchg
pmovmskb
inc
in
mov
movsb
stos
mov
lret
test
mov
lods
jns
add
rcll
repnz
in
dec
lcall
cltd
dec
imul
pop
loopne
in
dec
mov
pop
push
aam
popa
xor
push
pushf
repnz
cmp
mov
inc
jno
add
data16
mov
aaa
out
pop
push
xor
cmp
inc
fwait
js
scas
pop
sbb
out
push
push
pop
push
jo
mov
or
mov
repz
dec
jnp
outsl
jb
xchg
ret
aam
adcl
imul
iret
cmc
mov
mov
cmpsb
or
push
je
and
mov
mov
mov
insb
cld
daa
adc
mov
out
cmpsb
clc
mov
xchg
lahf
pop
mov
adc
pop
in
xchg
repnz
cmc
jmp
imulb
aad
push
out
xor
mov
inc
lcall
fcmovb
sub
das
inc
cmp
and
xor
sub
jb
cli
filds
int3
mov
jp
aad
test
push
loop
inc
sbb
inc
addl
mov
sbb
cmpsl
sub
fldl
div
lds
aam
or
mov
lods
xchg
lods
js
and
leave
aas
ret
pop
mov
das
imul
call
pop
sbb
aam
sbb
icebp
and
push
sub
bound
inc
daa
dec
cmc
mov
clc
pushw
repnz
lods
mov
mov
push
and
dec
lret
es
and
lret
dec
dec
xor
shrb
inc
mov
mov
push
icebp
scas
pop
loope
xorb
shll
fisubs
mov
adc
out
xchg
sbb
or
aaa
xchg
out
or
push
lret
cmp
cmp
adc
addr16
in
cmc
mov
daa
lods
call
pushf
lahf
in
push
dec
lds
test
pushf
shlb
sub
push
mov
and
out
adc
in
add
aad
imul
repnz
pop
arpl
xchg
insl
mov
mov
fwait
rclb
fstpt
and
mov
and
dec
mov
arpl
into
jg
enter
sbb
cmc
lods
mull
ljmp
repnz
fsubs
xchg
push
adc
mov
lods
test
adc
out
gs
inc
aad
les
fnstsw
jle
push
js
aaa
or
xchg
shlb
jae
pop
dec
sub
mov
or
shl
testl
rorl
loopne
mov
push
or
cmp
ja
mov
add
xchg
lods
stos
rorl
xchg
pusha
test
in
jbe
lea
jno
gs
sub
cmc
mov
inc
dec
jno
loope
xchg
and
imulb
out
mov
jae
aad
cmpsb
int
dec
outsl
dec
ror
sbb
push
cmp
xchg
pop
pop
jbe
lret
imul
imul
mov
sub
mov
mov
mov
in
cmpsb
int
jecxz
fidivrs
jmp
add
adc
inc
and
test
cltd
sub
push
mov
imul
movsb
sub
std
std
in
or
add
jo
push
lret
adc
pop
outsb
adc
sub
shlb
jg
std
push
or
leave
cmp
rol
arpl
idivb
pop
inc
icebp
out
pop
jno
pop
cmp
out
leave
push
mov
outsb
adc
mov
or
iret
inc
jno
clc
pushf
inc
pop
movsb
subb
lahf
scas
jno
hlt
test
shrb
and
cmp
cmpsb
inc
aaa
sbb
bound
hlt
testb
sub
push
movsl
lea
sarl
mov
push
push
outsl
outsl
fisttpll
add
mov
inc
pop
xor
mov
push
test
xchg
iret
test
mov
xchg
mov
es
xchg
repnz
jnp
mov
stos
jle
cmp
mov
int3
push
in
xor
mov
adc
or
push
cmpsl
xchg
inc
cmp
xchg
imul
movsl
lret
cmp
cli
cmp
loopne
mov
pop
test
mov
xchg
xorb
addr16
cmp
mov
cwtl
imul
dec
imul
aas
jl,pt
mull
pop
out
mov
ss
mov
sub
cmp
das
dec
mov
push
push
mov
xor
push
pop
loop
mov
dec
out
shlb
jb
aad
jne
scas
mov
les
pop
ds
lcall
cltd
enter
push
mov
xchg
fcoms
pop
and
idiv
dec
test
lods
ljmp
test
in
outsb
imulb
fwait
int3
ja
mov
testl
jecxz
repz
jmp
push
scas
loopne
jno
mov
xchg
jecxz
inc
jnp
mov
rol
mov
jo
ljmp
push
sbb
cmpsl
fdivs
or
pushf
aad
push
cmp
ret
lcall
ret
mov
ja
or
inc
fwait
rcr
adc
dec
dec
mov
out
mov
scas
aaa
cmpsl
cmp
push
mov
mov
jae
sbb
sbb
daa
sbb
push
pop
add
cmp
mov
mov
sbb
add
clc
popf
in
mov
mov
jge
cmp
dec
sar
and
jle
icebp
sub
cmpsl
xchg
das
pop
push
adc
cld
sahf
sbb
jge
mov
pop
outsl
ret
mov
push
cmp
xchg
sahf
adc
cltd
jecxz
shlb
sbb
push
and
inc
shr
hlt
adc
mov
repnz
push
and
push
les
push
push
cmp
aas
pop
rolb
mov
xchg
mov
daa
xchg
mov
pop
and
mov
insl
add
adc
jns
adc
or
imul
adc
test
cmp
cwtl
aaa
sub
ljmp
leave
jnp
inc
pop
jle
sahf
shll
aas
jge
ficoms
addb
incb
fs
int3
pop
mov
loopne
stc
popf
add
sbb
movsl
loopne
pop
dec
or
popa
push
xor
shl
andl
imul
mov
sub
or
in
mov
jecxz
movsl
dec
cli
in
fs
mov
lahf
cvtps2pi
int
int3
mov
mov
clc
icebp
mov
adc
iret
jns
aaa
add
adc
in
lret
cltd
or
mov
xchg
outsb
and
mov
mov
sub
enter
sub
dec
mov
add
dec
push
adc
cmc
dec
es
sub
loopne
sti
std
sub
movsl
dec
jl
mov
add
push
push
cmpsl
xchg
cmc
call
lret
push
sahf
or
jnp
cmpsl
mov
dec
and
outsl
adc
and
imul
mov
mov
loopne
shr
loopne
enter
lahf
xchg
jp
pop
repnz
push
dec
jg
xchg
out
inc
sub
ret
xchg
or
mov
lock
jo
ljmp
mov
push
xor
rcrl
push
into
into
inc
out
cmpsb
and
addl
jl
mov
fcoms
mov
jg
mov
xchg
imul
push
inc
ss
jo
ror
push
pop
les
inc
jge
adc
jne
inc
adc
fstpt
in
lock
pop
cmp
xchg
jns
stc
lret
popf
push
add
test
leave
fsubp
pop
cltd
gs
dec
inc
bound
xchg
repnz
mov
sbb
std
cmp
push
loope
pop
ljmp
inc
nop
mov
xchg
push
jbe
xorl
xor
pop
adc
in
movsl
shrb
enter
mov
sbb
push
out
cmp
sub
stc
incb
mov
and
cltd
nop
and
daa
roll
and
stc
sbb
mov
dec
loope
inc
repz
jecxz
adc
mov
push
imul
add
pop
shll
icebp
sbb
nop
cmp
sbb
sub
or
leave
outsl
rolb
lods
push
jl
int
push
mull
jge
iret
xor
nop
mov
sbb
jmp
jp
xchg
pop
popa
ljmp
enter
adc
add
aas
mov
jnp
dec
leave
aaa
fucomi
lock
shrb
mov
ds
hlt
cmp
mov
push
pop
xor
sub
rolb
hlt
popf
sub
aas
xchg
push
int3
iret
aaa
dec
jmp
inc
into
daa
faddl
jecxz
jl
add
jle
lods
movb
xchg
daa
in
mov
dec
enter
mov
cmpsl
out
repnz
sbb
sbb
sbb
movsl
lods
lods
shrb
cmp
or
dec
mov
stc
roll
xchg
add
and
pop
jae
cs
adc
cmp
dec
test
fsubrp
pop
shl
xorl
daa
jno
icebp
repnz
sub
dec
dec
rolb
daa
or
adc
std
push
call
stos
sub
or
lcall
ficomps
sbb
sti
lret
xchg
xor
movsl
cli
push
test
pop
imull
dec
lods
adcb
outsl
sbb
sub
push
pushf
add
xchg
push
jmp
lock
cmc
fisubrl
mov
xor
add
ret
mov
mov
loop
cmp
push
jp
push
shrl
lods
pop
outsl
cmp
xor
mov
push
adc
aaa
rclb
and
mov
stos
rorb
sti
inc
inc
orb
addr16
cld
jo
jae
data16
insl
sbb
mov
pushf
repnz
lods
xchg
jnp
call
inc
negl
lret
shr
fucomi
add
jnp
sub
dec
xor
adc
hlt
pop
int
adc
sub
push
push
daa
push
jg
aaa
inc
je
push
xor
adc
mov
pavgb
inc
lret
sub
fwait
ds
out
adc
inc
popa
pushf
xchg
loopne
mov
in
inc
inc
or
call
mov
sbb
pushf
lcall
or
loope
test
cltd
adc
fsubl
push
xor
sahf
add
rclb
push
xchg
inc
popa
inc
inc
stos
fisubrs
add
int
outsb
fsts
int3
jl
jge
fidivs
mov
cmpb
sti
cmc
or
enter
xor
sarl
ret
pop
dec
das
push
sbb
arpl
jl
adc
outsl
add
sti
mov
dec
add
movsb
xchg
xchg
xchg
sub
pop
xchg
inc
call
xchg
and
ss
lods
dec
xlat
push
ja
repz
inc
push
iret
call
dec
push
mov
dec
lds
out
pop
lcall
xor
xor
loop
push
mov
hlt
aam
cmp
int
adc
push
adc
sti
data16
lds
push
adc
test
add
lahf
popf
mov
jns,pt
jae
mov
mov
repz
jbe
and
sub
or
dec
xchg
pop
stos
inc
inc
out
repz
stos
or
or
lea
sbb
mov
outsl
sbb
jae
dec
and
je
lods
loopne
xor
mov
or
testl
out
xor
lret
cmp
push
lock
inc
data16
movsb
cmp
jle
insb
jp
pop
xor
and
inc
inc
xchg
xor
push
cmp
roll
xor
xchg
mov
sub
ret
xor
sahf
push
cmp
mov
cmp
rclb
lret
dec
xchg
int3
ror
ja
mov
jmp
stos
insb
dec
ss
inc
jmp
inc
stos
in
fcmovne
mov
je
rorl
pop
cmc
pop
pop
cld
insb
xchg
push
dec
idivl
fmuls
es
loopne
mov
mov
mov
movsl
aam
shrb
aas
mov
xchg
aas
loop
sti
cmp
daa
sub
cli
xchg
xlat
cmpl
push
adc
jle
xchg
mov
out
outsl
lea
aaa
outsl
js
inc
outsl
fbstp
add
sbb
cmp
popl
out
adc
stc
cmp
inc
xchg
retw
jnp
mov
imul
push
andl
xchg
mov
push
inc
cmp
cmc
sbb
jno
push
add
mov
inc
xchg
jecxz
cwtl
and
xor
pop
xchg
sub
lret
add
ja
in
popa
mov
adc
sahf
mov
rolb
out
js
loope
mov
arpl
sub
inc
out
push
pop
hlt
inc
cmp
ret
cwtl
xor
or
or
test
pushf
addl
jecxz
js
jp
data16
and
mov
pop
dec
ret
xchg
pop
in
leave
add
stos
das
fcoms
xor
cmpl
xor
outsl
lret
xchg
sbb
lret
or
fidivrl
loop
jo
add
mov
stos
lods
mov
mov
or
je
pop
nop
dec
pop
xor
dec
or
rorb
jnp
xor
pop
xor
std
jecxz
clc
adc
std
outsb
scas
cmpsb
iret
sbb
movsl
mov
mov
and
and
jecxz
xchg
fbstp
loopne
sub
mov
and
cmp
push
ret
pop
fwait
test
mov
out
subl
jb
js
mov
add
lock
sahf
imul
lock
pop
std
fdivs
cmpsl
push
into
cwtl
repnz
push
adc
cwtl
xor
mov
arpl
pop
pushf
xor
stos
rorl
push
and
cmp
add
dec
icebp
jnp
push
xchg
std
pop
xor
iret
jnp,pt
cld
int3
mov
lret
and
sbb
cmp
cmpsb
adc
mov
add
aas
in
xlat
outsl
pop
jno
ret
test
test
cmc
cmc
nop
pushf
in
shl
stos
or
fs
stos
xor
or
pop
jno
icebp
test
adcb
add
das
cli
sbb
inc
dec
mov
mov
mov
mov
std
cs
mov
in
ds
hlt
mov
imul
fcomps
lea
mov
add
cmpsb
mov
aam
jbe
adc
scas
clc
pop
sbb
add
bound
jo
jb
test
pop
loopne
jae
enter
fstpt
cltd
xor
sbb
push
mov
xchg
jg
in
or
push
bnd
jb
repnz
add
out
dec
xchg
inc
push
cltd
out
mov
mov
aaa
xchg
sub
jmp
test
jle
sbb
jno
lret
or
ds
icebp
pop
push
idivl
jno
mov
add
leave
lods
or
rorb
and
or
addl
enter
jmp
lods
ret
imul
das
push
inc
inc
mov
cmp
mov
cmp
xor
push
jno
movsb
push
inc
jnp
sub
leave
daa
out
dec
in
js
sarb
cmpsb
stos
jb,pn
les
out
aaa
shr
shll
xchg
daa
or
ret
shrl
push
push
lret
adc
mov
cmp
fwait
mov
jbe
jne
xor
dec
mov
test
cltd
xchg
scas
cmc
ret
aad
mov
repnz
int
cmpsl
inc
push
sti
into
sbb
xorb
adc
sbb
fists
shrl
pop
xchg
or
push
mov
push
pop
pusha
call
les
mov
shrb
outsb
add
movsl
or
mov
mov
into
cmp
mov
dec
mov
in
dec
and
inc
popl
mov
insl
cwtl
and
dec
add
inc
repz
ret
sub
pop
in
vunpcklps
mov
pusha
pop
xor
fistpl
xor
fs
imul
push
das
adc
out
shl
dec
dec
das
shld
cmp
cld
leave
sahf
jle
add
cld
or
xor
sub
cmp
push
xchg
push
pusha
aam
ret
inc
js
mov
sbb
pop
pop
into
dec
clc
ljmp
out
mov
popa
pusha
testb
mul
inc
hlt
adc
push
fwait
inc
or
cwtl
lret
xchg
outsb
cmp
mov
xor
nop
or
jge
inc
cltd
seta
jbe
push
sahf
vpcmpgtw
imul
iret
aam
cwtl
cli
sub
fnsave
mov
test
sub
pop
mov
sub
in
imul
push
shr
cmpb
das
test
pop
shrb
pop
popf
dec
nop
pop
je
adc
cltd
jbe
in
dec
adc
mov
dec
icebp
je
test
or
xor
jl
aaa
inc
rorb
jmp
int
loopne
mov
dec
mov
xor
icebp
mov
cwtl
dec
les
movsb
imulb
xor
imul
push
jnp
cmp
jg
cwtl
mov
xchg
lret
xor
jle
iret
push
jmp
inc
lods
into
sarb
leave
movsl
push
or
mov
push
xchg
pop
add
test
ss
jo
mov
shll
iret
jae
aas
test
jmp
fcmovnb
roll
dec
es
rcrb
lcall
mov
mov
imul
mov
cli
in
adc
aad
repz
decl
sbb
jl
imul
je
cli
cwtl
add
jge
and
inc
dec
mov
icebp
in
pop
std
pop
std
cs
inc
scas
int3
jns
jo
lds
jo
xchg
push
jg
fwait
sbb
pop
and
fsubrs
lcall
dec
cmpsl
mov
adc
jne
scas
cmp
pop
shlb
imul
xor
xchg
dec
pop
cmc
sub
inc
and
out
test
or
push
jecxz
lret
mov
push
cmpb
xor
inc
out
push
and
mov
outsb
xlat
add
sub
es
cltd
jg
jge
insl
xor
mov
leave
jno
xchg
leave
out
dec
repz
inc
xor
fucomp
std
outsl
xor
or
inc
nop
call
arpl
mov
mov
and
mov
fcoml
and
arpl
inc
mov
inc
fiadds
add
test
stc
jno
mov
sub
out
cmp
mov
aaa
sub
mov
and
loop
add
mov
jmp
adc
mov
pop
outsb
pop
or
icebp
mov
mul
insb
imulb
in
scas
cmp
clc
pop
pop
iret
jno
cmp
jmp
stc
ds
xchg
pusha
adc
or
and
les
sub
mov
fstl
push
fsts
cs
enter
addb
inc
in
movsl
mov
pop
lods
push
loope
cmc
push
pop
lods
into
test
fnsave
inc
fwait
pop
jno
mov
icebp
push
lret
mov
add
mov
int
ja
imul
nop
addr16
filds
pop
scas
mov
adc
adc
dec
push
sarl
cmp
arpl
addr16
test
lods
daa
cld
jbe
xchg
and
pop
enter
fnstenv
xorb
leave
dec
push
out
xchg
loope
out
mov
add
test
rol
es
js
ljmp
movsb
data16
sbb
es
dec
lds
inc
loope
fildl
stos
mov
dec
xchg
jne
cmp
lret
jecxz
mov
gs
push
lret
or
add
adc
xchg
sub
sub
sbb
fcmovu
cld
and
xor
jle
in
inc
ds
dec
xchg
cmp
mov
cwtl
or
and
lret
inc
jne
mov
sbb
ficoml
out
les
imul
pusha
mov
adc
stos
sbb
dec
add
add
gs
cld
push
enter
cmp
pushf
notl
mov
mov
out
jne
outsl
add
cld
daa
pop
in
daa
mov
xchg
xchg
add
xchg
mov
fldt
adc
push
mov
cli
pop
xchg
xchg
mov
lahf
mov
sbb
in
jp
fwait
mov
stc
dec
arpl
sbb
int3
mov
push
jns
stos
cmp
mov
mov
sbb
pusha
sub
pop
aad
arpl
push
in
aaa
fmulp
cmpsl
pop
imul
cmp
jo
aad
xchg
lea
loop
jae
inc
mov
and
dec
xor
cwtl
leave
pop
add
push
into
or
notb
mov
jb
xchg
mov
ret
sbb
xor
push
inc
sbb
pop
jp
jecxz
loop
push
sbb
adc
movsb
cmp
mov
and
and
arpl
jp
sarl
cmpb
das
cltd
mov
mov
xchg
mov
pusha
cmp
mov
mov
add
loopne
inc
push
inc
outsl
push
inc
fxch
and
inc
push
or
inc
loop
enter
pusha
repnz
inc
pop
mov
cmc
popf
in
inc
in
in
fstp
ret
not
push
mov
pop
test
dec
inc
mov
cli
sub
lret
loope
jge
inc
outsb
js
pop
dec
push
je
loopne
pshufw
nop
popf
add
adc
js
mov
xchg
cmpl
les
inc
mov
mov
cwtl
mov
ret
pop
push
rol
inc
sub
mov
adc
andb
shlb
stc
jle
jle
or
scas
push
jmp
inc
cmpsl
testl
aaa
in
inc
sub
movsl
add
or
outsl
xchg
inc
cmp
xor
xor
mov
out
xchg
mov
push
out
jb
mov
icebp
jl
cld
add
adc
or
repnz
sbb
loop
xchg
add
cltd
sbb
leave
jnp
pop
cmpl
aaa
out
or
mov
inc
cmp
inc
xorb
jl
inc
mov
fidivl
xchg
rcll
xchg
jne
adcl
hlt
mov
xchg
and
loop
lea
xor
stc
mov
add
addl
in
push
add
jbe
aad
xchg
add
fstpt
push
fcmovne
pop
int
aad
cs
imul
add
adc
sub
xchg
mov
mov
add
pop
xchg
ss
mov
and
call
sbb
leave
fisttpl
imul
pop
rcll
test
lret
in
ss
sbb
dec
mov
add
test
mov
movsb
in
cmp
aam
add
lea
dec
push
shlb
adc
jne
popa
dec
and
leave
cld
xchg
inc
iret
je
push
dec
adc
jecxz
loopne
or
pop
mov
adc
idivl
pop
push
outsb
in
cltd
mov
mov
out
in
cld
sbb
push
push
mov
mov
mov
in
mov
xchg
test
inc
sti
inc
lret
leave
push
sbb
adc
outsl
cmp
xor
cmp
sub
outsb
test
jno
sbb
addl
mov
ss
jbe
sub
cmpsb
lods
add
loop
or
inc
push
addr16
pop
dec
xor
mov
shrl
pop
jno
cli
aam
inc
enter
repz
pop
xchg
inc
scas
lea
in
ret
or
movsb
mov
aas
xchg
cmc
adc
and
scas
jno
mov
cs
add
test
fcomps
cltd
rorl
fdiv
fucom
cmp
test
cld
add
cmp
test
mov
pop
push
xor
int
jp
mov
jle
sar
sbb
ficoms
ljmp
cs
pop
imul
or
mull
imul
fildl
jmp
xchg
sbb
into
jp
cmp
test
iret
jl
pushf
cmpsl
jg
inc
sbb
scas
add
in
lods
adc
xchg
leave
cmp
sti
sbb
fs
inc
dec
push
xlat
roll
gs
nop
xchg
adcl
add
sarb
sub
push
inc
aaa
call
jl
pop
mov
and
sub
mov
jo
sub
adc
fmul
aaa
mov
xchg
outsl
adc
rcrl
out
pop
fsubp
or
pop
ds
lahf
aaa
xchg
dec
fcompl
inc
lahf
push
mov
inc
mov
pop
and
inc
std
imul
repz
loop
mov
mov
jo
imul
push
push
aam
imul
xor
inc
mov
icebp
stc
add
lcall
xchg
xor
rcrb
movsb
cmp
test
or
repnz
loopne
fs
sahf
fidivrs
out
and
mov
arpl
xchg
pop
pop
lahf
or
jl
cwtl
and
pop
test
mov
pushf
mov
push
cmp
adc
jg
shll
xchg
lock
xor
ss
mov
gs
and
imul
mov
mov
dec
pop
sti
add
mov
fsubl
jae
mov
aam
loop
inc
movsl
lcall
jg
add
sub
outsb
lahf
jno
psllq
and
and
xchg
xor
cld
jns
fcmovu
mov
adc
pop
pop
xor
test
ss
push
ss
test
lahf
leave
cli
and
inc
enter
mov
xchg
das
dec
les
aad
iret
mov
sub
imul
out
sbbl
jmp
ljmp
mov
inc
pop
mov
sbb
lods
cmp
add
cli
fimuls
add
mov
inc
rdtsc
ds
hlt
inc
test
jns
xorb
dec
xor
xacquire
negl
sahf
mov
out
dec
cmp
scas
mov
dec
int
push
mov
popa
in
movsl
or
ret
xlat
std
icebp
xor
js
sub
xchg
and
orl
mov
mov
fsubrl
inc
jns
out
or
xor
and
mov
insb
cltd
loopne
fsubrs
iret
daa
or
stos
xor
sarl
shll
shll
mov
ret
cmp
sub
or
stos
mov
jae
dec
fs
jbe
sbb
mov
or
das
sub
or
cmp
pop
loopne
inc
cmpsl
cmp
lret
add
adc
and
mov
inc
fstp
hlt
xchg
pop
push
mov
mov
dec
mov
decb
jle
ss
in
mov
insl
leave
scas
rcll
int
fstl
imul
dec
xor
rclb
jle
xchg
loop
loop
fcmovb
dec
mov
add
std
mov
mov
lret
push
es
jmp
in
mov
call
and
jnp
int
inc
add
inc
icebp
adc
mov
bound
call
xor
jo
add
xor
sahf
call
test
lock
xchg
decl
and
lret
pop
adc
addr16
jbe
cli
in
aam
jb
stos
ss
movsb
push
incl
js
std
mov
pushl
in
cmp
filds
movsl
sub
jno
cmc
imul
lods
sbb
inc
lea
dec
hlt
out
or
pop
xor
xor
enter
adc
pop
mov
pusha
cmpl
pop
inc
ss
iret
push
jp
xor
out
in
mov
mov
pop
mov
shlb
add
cmp
lds
push
pushf
fbstp
cmp
push
jg
mov
ret
dec
ret
mov
cmp
dec
hlt
cmpsl
xlat
push
loope
mov
cltd
insb
in
insb
sti
fsubl
sbb
dec
jne
ljmp
push
imul
xor
andb
jnp
mov
sbb
sahf
test
outsl
cmc
repnz
jnp
sbb
xor
lods
dec
fwait
cmp
ja
es
and
shlb
lret
lcall
pop
pop
jae
loope
mov
call
addl
pop
movsb
or
push
mov
mov
lock
jge
jns
pop
sbb
rcrl
movsl
fwait
in
xor
mov
lods
adc
dec
dec
lahf
scas
push
mov
cmp
jno
cmp
clc
mov
ficomps
mov
int
mov
jecxz
and
mov
dec
imull
or
sahf
jns
pop
mov
jns
das
mov
in
or
popa
or
mov
bound
mov
xor
mov
movsb
movsl
movsb
lea
clc
dec
imul
lret
scas
dec
cmpsb
xchg
inc
addr16
add
mov
dec
outsb
sbb
mov
sbb
in
and
pop
xchg
leave
mov
sbb
mov
sbb
pop
insb
popf
iret
test
xchg
or
pop
xor
lcall
cmp
call
movsb
mov
push
insb
push
mov
push
scas
add
pop
pop
and
sbb
in
cmc
mov
ljmp
add
dec
inc
clc
cmp
loop
push
add
pop
subl
jle
inc
lods
sarb
adc
push
js
popa
push
jnp
sub
call
lret
faddl
movb
xchg
xchg
stos
sub
jl
cs
les
sub
lcall
jge
hlt
pop
cmp
inc
imul
loopne
adc
jbe
test
cltd
lret
hlt
icebp
jmp
out
lcall
cmp
sub
xlat
lods
lock
pop
add
test
ror
addr16
push
dec
mov
lcall
mov
mov
rcrl
push
ret
push
add
scas
add
or
jo
and
sbb
bound
mov
idivl
mov
xchg
mov
seto
stc
into
mov
test
cs
push
movd
inc
xor
je
bound
mov
shlb
gs
push
push
imulb
movlps
int3
je
movsl
gs
pop
clc
scas
cs
cmpsl
bound
adc
jns
adc
test
inc
idivb
xchg
xchg
inc
fbld
aas
pop
or
popa
add
lcall
gs
out
jl
xor
sub
mov
ja
dec
cmp
mov
pop
adcb
sti
xchg
and
ds
pop
add
ficompl
cmp
lock
movsb
das
xchg
mov
aaa
dec
add
mov
cmp
divl
push
xchg
shl
lods
dec
rcrb
out
aam
es
cmp
add
testl
jg
fs
jns
test
gs
inc
test
xchg
mov
adc
xchg
xor
mov
push
jge
or
nop
fstpt
lods
push
xchg
mov
stos
fsubs
mov
mov
rorb
orl
mov
jne
dec
cmp
out
sub
decl
ds
mov
scas
xor
push
ds
sbb
sub
xor
ja
rorb
movsl
sahf
push
repnz
add
test
nop
jnp
mov
xor
dec
cli
mov
andl
or
push
out
mov
scas
sbb
sub
aad
ljmp
lahf
adc
repz
add
nop
ret
xchg
add
test
sti
insb
daa
inc
stc
sbb
fcoms
out
and
insb
insl
push
xor
js
mov
stos
sbb
popa
scas
loopne
mov
adc
loop
insb
xor
insb
cmp
icebp
pop
std
frstor
cmpsl
ljmp
lds
ficompl
insl
cmp
aaa
ja
xchg
adcl
dec
pushf
repz
test
jae
push
fsts
sbb
jae
adc
divl
shl
pushl
loop
rolb
test
fistps
fstpt
sbb
fnstcw
nop
jb
inc
mov
sbb
ds
cmp
add
outsl
add
mov
pop
push
test
mov
repz
cmp
lods
ds
adcl
out
and
ficoml
cmp
jb
mov
aaa
mov
imul
fcmovbe
and
ss
das
pop
sarl
std
or
jb
push
popf
je
js
addb
or
out
dec
push
jo
dec
xchg
inc
adc
xor
jp
pop
xchg
xor
mov
xor
jo
and
loopne
test
mov
add
cwtl
push
sbb
imul
dec
mov
and
lret
xor
sub
adc
add
aam
or
sbb
push
push
aas
outsb
cmpsl
lret
jb
xchg
lcall
jae,pn
add
pop
jge
mov
pushf
dec
sahf
lret
or
ljmp
pusha
cmpsb
lret
and
pop
mov
fldt
pop
fdivr
mov
dec
movsl
stos
mov
loopne
fidivrs
xor
mov
pop
pop
outsb
and
test
inc
je
jmp
pusha
mov
leave
mov
sbb
cbtw
daa
pushf
cmp
jmp
adc
cmp
jl
daa
daa
lods
pop
cs
add
pop
shlb
push
mov
int
jl
push
pusha
cs
mov
mov
sti
xchg
shrb
mov
test
or
pop
aaa
sbb
jno
fsts
mov
movsl
sub
std
pusha
jmp
cmpsl
jg
sbb
sbb
rclb
inc
jmp
imul
fdiv
inc
lahf
pop
push
int3
cs
inc
and
aad
mov
dec
adc
or
xchg
mov
sarb
mov
mov
movsl
or
push
pop
jbe
sbbb
lret
int3
pop
inc
pop
loope
fistps
fadds
jno
inc
fwait
jmp
or
call
mov
xorl
aaa
jmp
mov
jne
ja
mov
lock
sub
push
xchg
pop
cmp
out
popa
fs
jle
mov
das
or
mov
fisubrs
lahf
shlb
push
mov
repz
add
sub
xor
cld
ds
icebp
dec
add
lret
dec
stc
movsl
lods
mov
sub
arpl
lds
sub
mov
andb
pop
jle
scas
gs
jl
ret
pop
or
mov
push
cmp
push
cmp
and
adc
bound
call
inc
test
rcll
push
enter
aas
in
out
dec
test
jns
sub
fcmovbe
mov
gs
movzbl
inc
mov
jecxz
in
dec
clc
push
mov
sti
jne
xor
xor
xchg
mov
or
cmp
les
das
shl
push
dec
das
or
or
pushf
ja
push
push
cwtl
mov
test
psrld
mov
add
xor
scas
pop
cld
subb
dec
aad
in
repz
stos
add
je
nop
and
cmc
push
das
lock
cmp
iret
inc
mov
lahf
push
mov
idivl
ljmp
mov
stos
lcall
cmp
ss
xchg
das
cmp
insl
fistps
xchg
mov
outsl
sbbb
int3
stos
fwait
adc
cli
cs
mov
rolb
xchg
jmp
add
sbb
xchg
icebp
dec
out
pop
jp
sub
adc
aas
and
adc
mov
rcll
mov
xchg
dec
jne
jecxz
xchg
aaa
lock
inc
fnstenv
insb
repz
shll
xor
xor
mov
xor
mov
shr
jecxz
scas
sbbl
pushf
rcl
lret
inc
adc
mov
xchg
and
mov
inc
or
lea
out
push
mov
xor
cmp
jnp
addr16
mov
mov
mov
or
jno
xchg
mov
cld
jbe
pop
cmp
inc
adc
icebp
divb
lods
or
jge
shlb
les
or
push
or
or
jmp
scas
shl
mov
lcall
push
divb
pop
cltd
sub
arpl
mov
inc
add
push
loope
les
aad
adc
in
mov
mov
std
cmp
cmp
out
mov
push
mov
pop
mov
pop
cli
dec
adc
cld
test
inc
or
scas
jmp
jg
dec
and
push
mov
pop
int3
cmp
mov
cwtl
mov
mov
inc
or
mov
push
movsl
fbstp
pushf
or
scas
pop
lock
inc
and
push
fiadds
lea
std
sbb
jo
jbe
mov
adc
sbb
cli
mov
popf
adc
push
pop
sub
pop
jb
insl
aad
fs
inc
mov
adc
outsl
push
add
mov
mov
sub
test
movsb
arpl
inc
pop
xchg
adc
push
jbe
cmp
fs
xchg
or
xor
pop
mov
or
lods
and
push
es
jle
imul
cmp
dec
lods
mov
xchg
ret
dec
data16
mov
mov
inc
lods
sbb
pusha
dec
xor
in
lahf
aas
add
es
xchg
int3
mov
cmp
xchg
andb
mov
fcmovnbe
in
or
and
push
lret
rcrb
ffreep
out
sub
es
lahf
pop
jo
aad
into
addb
jmp
outsb
nop
sub
cmp
mov
outsb
cmp
lods
int3
in
roll
and
mov
mov
or
mov
or
data16
jno
imul
ja
dec
dec
test
fdiv
sbb
adc
fs
jnp
imul
jnp
jmp
in
int3
dec
push
sub
ret
push
pusha
push
dec
xor
dec
rolb
enter
pop
xchg
stc
pop
mov
sbb
cmp
daa
inc
call
repz
mov
imul
test
mov
dec
mulb
out
hlt
scas
add
push
gs
enter
shrl
sbb
adc
subb
inc
mov
xchg
fidivrl
ret
fsts
push
cmpsl
loopne
out
es
int3
mov
icebp
les
cmp
ret
mov
ljmp
loopne
or
mov
int3
adc
mov
loopne
push
jns
mov
cmp
insb
inc
add
insl
insb
and
cmpl
pop
xchg
repnz
mov
outsb
lcall
lock
scas
add
push
data16
add
and
xor
loopne
es
idivl
add
adc
insl
inc
sub
mov
pushf
xor
mov
sbb
fwait
push
jo
mulb
cmpsl
mov
xchg
mov
mov
mov
cs
pop
aas
lods
sti
in
das
pusha
mov
lcall
fdivrp
ja
adc
fs
out
lods
inc
mov
repnz
xchg
dec
arpl
xchg
fs
scas
xchg
push
gs
lea
arpl
xchg
mov
rcll
les
mov
mov
insb
cmp
mov
jle
bound
lcall
daa
mov
sub
test
ljmp
xchg
fistl
movsb
movsl
fcmovnbe
mov
lods
pop
jae
and
fwait
ljmp
and
aas
dec
xchg
adc
sbb
jp
out
shll
rorb
mov
lcall
jg
mov
insb
xchg
iret
cmp
inc
xchg
movsb
into
std
xchg
ss
adcl
popa
jge
loope
mov
mov
adc
rorl
movsb
cltd
jns
cmp
jne
push
and
or
ja
xchg
cmp
mov
ss
in
sbb
sbb
pop
enter
popf
sub
aaa
sub
cli
out
stc
cmpsl
cmp
cwtl
pop
adc
ret
into
xlat
sub
sub
in
pop
sub
push
movsb
jge
push
es
adc
clc
jecxz
inc
push
mov
pop
adc
loopne
sub
sbb
add
dec
pusha
ja
xor
sub
mov
cmpsb
loopne
lock
jo
test
inc
int
sar
sub
add
cli
and
js
jno
add
sbb
mov
pop
je
mov
fidivs
lods
ds
arpl
imul
jae
dec
cwtl
mov
lods
pop
clc
test
pop
sahf
ss
mov
inc
dec
push
popf
dec
repz
test
ljmp
mov
inc
fildll
sti
leave
loopne
lods
dec
xor
adc
add
lods
jb
stc
or
imul
fldl
wbinvd
pop
mov
dec
and
jge
cld
pop
rcr
test
jl
sub
icebp
push
int3
decl
fsub
icebp
pop
pop
popf
fiadds
lods
or
loop,pt
push
push
sbb
sbb
add
xor
out
xlat
mov
pop
pop
sbb
mov
xchg
fwait
adc
adc
aas
addr16
aad
xor
push
mov
pop
outsb
lds
lea
out
mov
cmp
cmp
mov
inc
mov
add
loopne
xchg
lret
sahf
push
cmp
std
aas
pop
mov
push
dec
mov
lcall
into
pop
and
loopne
xchg
sbb
pop
jecxz
push
mov
jns
inc
sub
xadd
das
imul
fsubrl
scas
lcall
dec
pop
clc
mov
adc
aas
and
loope
push
add
out
imul
test
loope
lods
push
rolb
mov
pop
mov
cmp
cmp
stc
scas
mov
imul
fstpt
insb
test
int3
mov
mul
sbb
xor
cld
js
addr16
or
xchg
in
pop
sbb
popf
xlat
imul
fldcw
in
cmpsb
dec
loop
xchg
clc
mov
mov
and
into
cmp
jno
call
pusha
add
xor
pop
fisubs
lds
mov
xor
add
out
xchg
minps
sahf
jnp
test
pop
dec
sub
mov
popa
loope
mov
mov
ss
fdivp
push
inc
pushf
popf
sub
dec
mov
loop
cmpsl
adc
sbb
and
mov
adc
leave
mov
dec
inc
adc
out
dec
imul
cld
cmp
mov
nop
repz
inc
sti
push
jecxz
mov
int
lods
dec
mov
outsb
scas
sub
fs
int
fistpl
scas
sysenter
aaa
pushl
out
jge
shr
fwait
loope
fiadds
cli
insb
dec
pop
mov
or
dec
cli
shr
sbb
xor
adc
addr16
adc
test
loope
ret
jne
and
imul
dec
mov
or
push
lods
xor
into
in
mov
lods
dec
inc
cmp
mov
mov
add
mov
add
loop
shl
sub
push
jb
and
pop
sub
stc
or
xchg
xchg
in
pop
sub
jge
dec
cmp
shrb
jb
xor
stc
mov
loop
pop
ds
mov
mov
sbb
or
adc
std
mov
jl
in
and
sbb
adc
mov
adc
adcb
leave
push
xlat
nop
mov
adc
add
test
push
pop
test
movl
cs
or
adc
mov
ja
ljmp
dec
pop
stc
insb
mov
shlb
push
sbbb
and
mov
cmp
into
adc
ja
fisubrs
pop
in
mov
xor
ljmp
mov
xchg
pop
sahf
test
push
cwtl
es
ljmp
cs
cli
repnz
xorl
mov
sbb
in
adc
jmp
fcomps
mov
scas
dec
adc
inc
pop
push
cmc
inc
push
movsb
dec
pop
inc
sahf
out
sbb
push
cmpsb
mov
xchg
test
xchg
fwait
sbb
movsl
jae
cmp
fld
pop
push
repz
notb
xor
daa
mov
cmp
push
arpl
cmp
dec
popa
cli
push
mov
repz
inc
filds
lcall
lret
in
add
dec
bound
mov
and
mov
outsb
enter
adc
faddl
int
les
jo
adc
push
loopne
dec
dec
push
loopne
adc
fbld
stc
pop
xor
lcall
pop
push
jae
pmaxsw
dec
mov
rorb
xchg
mov
in
cmp
cli
imul
add
xchg
sub
dec
int
and
sbbl
repnz
gs
push
add
jns
dec
incl
jl
sub
int
xor
insl
mov
les
call
mov
dec
add
int
inc
test
in
mov
clc
jbe
addb
stos
pop
or
clc
push
adc
mov
lea
inc
loope
ss
shrb
lock
dec
fwait
clc
jg
jge
mov
add
insb
xor
dec
movsb
cmp
inc
orl
push
push
jae
xchg
add
fucomi
aad
stos
int3
sub
jmp
xor
or
add
rorl
mov
sahf
dec
or
scas
sub
sarl
or
hlt
xor
xor
sub
scas
adc
jmp
mov
push
ret
call
sub
fldl
bswap
cli
lea
cmp
inc
push
jle
xchg
push
push
add
mov
xor
jo
push
roll
jg
cld
jg
xchg
test
mov
lock
rorl
shll
iret
in
imul
mov
hlt
aas
xchg
sub
lcall
rclb
push
mov
jmp
sti
cmpsl
mov
mov
jne
js
in
xchg
push
inc
mov
lahf
push
sarb
jae
cmp
mov
fidivs
xor
jecxz
leave
xchg
mov
out
mov
sbb
pop
cmp
stc
mov
dec
or
ret
xchg
lret
push
cld
int
pop
bound
cmc
pop
repz
dec
add
ss
jle
cltd
scas
shlb
pop
and
mov
sbb
adc
pop
test
pusha
xchg
loop
mov
pop
inc
addr16
mov
xor
mov
mov
inc
xlat
xchg
enter
cld
and
add
pusha
cltd
arpl
lret
dec
clc
outsl
mov
enter
add
idivl
fucom
out
call
xchg
xor
dec
outsb
mov
mov
into
jecxz
call
pop
mov
insb
sbb
mov
cmp
adc
cwtl
and
or
or
mov
cmp
stc
loopne
lods
push
mov
xor
adc
mov
mov
mov
repz
mov
mov
iret
and
xchg
adc
mov
sub
adc
push
or
cmp
cmpb
aad
adc
push
fadds
push
or
pop
out
adcl
fiaddl
fmull
hlt
out
lock
pop
cltd
sbb
inc
dec
xchg
ror
mov
and
sub
pusha
popf
xchg
or
sub
and
loop
outsl
rorb
mov
inc
and
push
mov
int3
insb
xchg
add
pop
fisttpll
sub
bound
or
xchg
jecxz
xlat
pop
mov
lds
mov
popf
jne
sub
cwtl
xchg
loopne
daa
js
ret
repnz
adc
xor
mov
ret
push
cmp
filds
mov
sbb
pusha
xor
lods
mov
cmp
jns
push
in
pop
xor
pop
xchg
dec
fstps
mov
addr16
adc
mov
cmp
das
adc
mov
mov
mov
mov
dec
xchg
mov
sbb
adc
mov
imul
or
sub
push
loop
push
xchg
mov
incb
pop
add
bound
mov
and
or
sbb
out
cmp
ss
or
in
in
imul
addl
and
cmp
ljmp
xchg
push
pop
sub
dec
inc
dec
ret
pop
adc
loope
loopne
mov
add
dec
mov
repnz
jg
sub
sbb
in
rclb
add
test
add
jae
mov
in
xor
cmp
addr16
xor
push
mov
lods
pusha
mov
mov
and
add
mov
and
add
add
inc
mov
add
sub
dec
mov
shr
and
add
ret
stos
mov
mov
in
inc
lret
push
loope
mov
push
out
sbb
inc
xchg
jmp
lahf
or
adcb
pop
push
and
jecxz
xchg
sub
daa
dec
xor
lods
xor
fistpll
int3
mov
cmpb
mull
jle
cmp
sbb
push
cmp
loopne
loop
mov
into
mov
into
jns
sub
inc
adc
push
sub
out
mov
jg
arpl
clc
cs
popf
push
adc
xchg
jae
das
stc
push
adc
aam
mov
push
stc
jmp
jp
mov
stc
rcll
aad
repz
lret
flds
dec
es
xchg
cld
mov
add
pushf
cmpsb
inc
inc
inc
pop
xor
xchg
outsl
xchg
xchg
shrl
jmp
fdivrs
nop
adc
scas
pop
push
sahf
lret
dec
lcall
dec
inc
add
andb
bound
pushf
sahf
push
ss
xchg
and
xor
pop
xchg
xchg
loopne
js
or
cs
cld
sbbl
insb
mov
jmp
jp
ss
fimuls
xor
sahf
out
mov
rcll
adc
lods
cli
es
mov
push
sahf
imul
adc
adc
std
sti
popa
lret
jbe
cmp
mov
mov
or
sbb
leave
mov
adc
hlt
dec
or
int3
mov
inc
adc
mov
pop
dec
inc
mov
loope
hlt
nop
mov
repnz
lock
data16
push
jecxz
cld
rorb
inc
incb
out
call
adc
jge
leave
lock
inc
insb
out
sti
popa
inc
movsl
jl
mov
adc
stos
or
imull
lea
inc
js
mov
push
js
dec
push
pop
adc
cmp
xorl
mov
popf
push
sub
cmp
in
rorl
out
mov
mov
pop
xchg
cmpl
loop
fs
mov
mov
rcrl
push
push
xchg
ja
xor
push
rclb
inc
pop
mov
in
in
adc
imul
cmp
adc
popf
jne
cmp
mov
inc
repnz
mov
pop
outsl
jl
mov
mov
xor
pop
add
or
pop
sbb
mov
fs
xchg
cld
pop
movsb
add
leave
cmc
push
cmpsl
adc
inc
int3
and
push
pop
sbb
sub
adc
pop
mov
sub
inc
mov
jns
loopne
bound
mov
pushf
repz
aad
and
cmp
flds
in
push
jmp
out
or
das
jne
xchg
les
push
sahf
inc
jge
or
xchg
mov
cmp
mov
idivb
push
cmp
pop
sti
or
test
xchg
loope
jmp
xor
enter
cmp
sahf
enter
out
push
mov
inc
fisttpll
mov
lods
fisttpll
movsl
fsts
push
dec
lods
pop
pop
mov
mov
lods
sub
fisubrl
imul
movsb
pusha
out
scas
adc
pop
enter
les
mov
push
test
xlat
repnz
inc
int3
mov
mov
add
not
jg
jb
pop
cmp
cltd
leave
add
adc
enter
jo
test
fsubrl
pop
or
ljmp
push
xor
popf
les
cmp
test
push
cmp
shll
push
shl
and
mov
mov
cmp
enter
mov
mov
stos
pop
test
push
movsb
or
addb
mov
js
dec
addb
es
call
or
xlat
xchg
mov
cmp
sahf
inc
add
leave
xorl
fmuls
mov
call
loop
jl
cmp
into
adc
add
popf
or
out
xchg
lock
bound
sub
jge
iret
sbb
fstl
int3
popa
or
xchg
add
inc
shlb
les
and
addb
adcl
ret
sbb
xchg
sub
or
cmp
xchg
adc
loopne
lahf
sbb
add
xchg
sbb
sbb
inc
mov
les
push
clc
add
daa
cmc
in
popf
mov
inc
lds
es
int
insl
popf
enter
or
pusha
sub
sahf
cmp
lret
lret
mov
sub
and
push
push
inc
rolb
xchg
addb
and
add
scas
cs
loope
rcrb
sarl
cld
xchg
xchg
dec
cs
mov
dec
sub
jmp
int
cmp
movzwl
je
lret
imul
mov
mov
adc
fwait
or
aad
fstpt
pop
aam
lcall
dec
mov
inc
lods
shlb
push
movsb
ja
or
jmp
mov
dec
add
xchg
jmp
not
mov
dec
pop
jne
dec
add
mov
and
in
sub
cmp
stos
cmpb
cmpsb
jo
mov
xchg
faddp
push
addb
shrl
and
hlt
dec
aad
sbb
movsl
and
adc
movsb
in
or
jp
sahf
js
cmpsl
push
sarb
loopne
icebp
lock
idiv
sub
aad
repnz
fcomip
imull
pop
loope
cmp
sub
aad
cmpsl
lcall
add
fs
push
mov
fwait
xor
cmp
or
dec
outsb
ror
mov
test
mov
sbb
mov
jo
jmp
sub
loopne
push
enter
fstpt
pop
cli
jns
call
scas
xchg
rolb
bound
ljmp
sti
lcall
movl
cmp
stc
daa
mov
sub
lret
gs
mov
into
hlt
rcl
fsubrs
mov
mov
pop
xchg
adc
movsb
fs
mov
xor
jae
cltd
aaa
inc
imul
or
xchg
es
jecxz
iret
mov
stc
add
jp
and
mov
stc
dec
adc
out
jns
inc
mov
inc
add
test
dec
or
mov
inc
incb
cmc
jns
xchg
or
xor
xchg
arpl
aam
mov
xor
je
mov
movsb
pop
xchg
add
mov
aad
jne
cs
pop
movsb
dec
call
mov
mov
sbb
sub
fwait
mov
jbe
cmp
mov
pop
xchg
imul
cmp
pop
loop
cmp
js
mov
dec
or
flds
adc
aaa
insl
lret
cmp
loop
in
and
inc
sbb
lods
pop
dec
push
add
add
out
adc
scas
nop
and
mov
mov
xchg
push
int
or
cmc
add
mov
jecxz
mov
lret
inc
or
out
movsl
into
aaa
and
enter
cmp
arpl
sub
mov
lahf
mov
pop
lods
fnstenv
movsl
pop
jbe
lods
mov
push
pop
mov
mov
jge
pop
lods
push
xchg
mov
dec
push
sub
sub
and
in
adc
dec
xor
xchg
jl
out
adc
pop
repnz
push
jp
jge
cmp
inc
outsb
negb
dec
push
xchg
rol
lcall
repnz
xchg
inc
and
adc
mov
pushf
xor
mov
xlat
in
jae
lods
mov
fcomps
test
mov
stos
bound
dec
test
mov
pop
pop
fmuls
mov
pusha
insl
push
outsl
pop
cmc
jp
push
es
jg
repz
pop
inc
shlb
dec
xchg
pop
movsl
scas
jle
ret
push
out
call
ret
mov
push
mov
mov
outsw
push
pop
fwait
aas
mov
out
and
in
mov
sti
stos
cmp
mov
sub
fcomi
or
sbb
adc
outsb
cmpsb
out
jg
popf
cmp
test
lret
sahf
mov
test
lods
test
pop
hlt
push
out
test
jne
dec
inc
sub
stc
push
sahf
push
int3
enter
addr16
fisubl
push
inc
inc
outsl
mov
out
or
bound
push
xchg
sbb
out
sahf
pusha
movsl
pop
lahf
jb
enter
in
shlb
fnstenv
adc
sub
add
cwtl
mov
sub
subb
adcb
mov
add
and
lret
cmpsl
stos
jge
mov
sbb
bound
mov
in
nop
or
cltd
dec
inc
stos
mov
repz
es
add
jmp
lret
or
cmpsb
int3
mov
xchg
jge
inc
xor
repz
loope
incl
jge
sahf
stc
jnp
shlb
sbb
stos
cmc
adc
mov
mov
enter
sub
mov
jo
les
jge
jno
fs
push
loopne
stc
sbb
sub
cs
in
push
int3
pop
mov
and
mov
insb
xor
call
mov
inc
mov
jmp
push
mov
pop
out
leave
dec
cmpsb
out
aaa
test
cmp
sbb
scas
adc
push
pop
pop
rcll
loop
loop
xchg
jge
mov
dec
dec
mov
clc
inc
repnz
pop
sbb
jg
shrl
js
int3
std
jecxz
and
not
ficomps
cmpsl
push
and
or
adc
aam
pushf
rcrb
push
repz
or
aad
xchg
sbb
adc
or
mov
cmp
push
push
pop
repnz
js
cltd
lds
movsl
jl
jnp
and
in
ja
xchg
sub
jg
cmp
inc
mov
mov
arpl
cmp
or
push
pop
pop
lds
mov
sbb
lods
in
jl
mov
inc
add
mov
jno
inc
pop
mov
sub
negl
outsl
sub
loope
xor
jge
daa
arpl
stos
xlat
out
sub
mov
push
dec
fists
push
dec
adc
ficompl
imul
jle
jle
or
in
aas
lahf
ss
flds
insb
pop
push
das
dec
jmp
mov
fldl
stc
jg
xchg
cltd
aam
and
cmp
xorb
add
xchg
filds
fs
sbb
ret
fisttps
sub
in
loop
add
jo
dec
in
sub
nop
adc
lods
dec
popa
popa
jo
cmp
bound
mov
lea
out
in
or
repnz
mov
sub
ret
xor
add
fs
aam
pop
or
lret
sub
loopne
jbe
out
call
jns
sub
inc
mulb
or
sub
ja
daa
adc
int
loop
jge
jnp
call
scas
mov
in
jp
sbb
cli
jl
xor
iret
dec
inc
adc
pop
mov
lds
inc
insl
lcall
je
cmp
adc
shrb
add
mov
outsl
and
add
mov
pusha
iret
pop
add
std
gs
xor
arpl
mov
cmp
mov
int
push
adc
xchg
std
addr16
jp
lret
test
sbb
imul
int
sbb
mov
adc
xlat
inc
rorb
add
add
xchg
adc
adcl
add
pushf
ja
lret
out
adc
ss
xchg
mov
shll
je
xchg
sub
cmc
mov
lret
cmp
sbb
mov
ret
out
sahf
pop
lds
fstpt
lahf
cld
push
ljmp
push
cmp
cwtl
xor
and
shll
jecxz
jmp
adc
and
jnp
inc
inc
sbb
adc
or
add
out
jae
or
outsb
ljmp
dec
mov
add
xchg
jmp
je
xchg
popf
cmp
or
outsb
pop
and
test
pop
bound
sub
sbb
ret
scas
int
sub
dec
lret
pop
jge
cltd
dec
lds
or
dec
mov
loop
add
mov
mov
in
out
mov
xchg
jns
and
fwait
test
aas
and
or
add
lods
mov
xchg
inc
shrl
je
imul
and
and
xor
out
mov
xchg
lock
push
or
addb
push
in
jg
adc
mov
xchg
sub
push
out
rclb
add
jnp
cmp
mov
push
inc
adcl
push
xor
ret
mov
push
into
push
sub
shll
push
pop
sti
mov
jl
and
jno
xor
pushf
mov
sarl
out
fstp
bound
jne
adc
pushf
jo
shrb
fdivl
lods
stos
ret
nop
push
int
jecxz
cmp
cmpsl
in
push
rol
sbb
mov
and
int
jp
rol
or
fs
pop
mov
dec
fimull
xchg
jmp
jmp
sbb
mov
sub
cltd
push
xlat
sub
and
stc
or
icebp
fucomi
lahf
jp
rorl
inc
sarl
jge
ljmp
stc
dec
cwtl
cmpsb
pop
dec
xchg
aas
jnp
cmp
lahf
or
fs
adc
adcb
dec
sub
scas
rcrl
xchg
cmp
mov
dec
sub
or
pop
jno
push
cmp
imul
out
shlb
aaa
mov
mov
mov
lods
mov
push
dec
jo
jno
je
es
mov
cmp
and
xchg
lret
mov
push
push
mov
sbb
out
icebp
in
and
cmpsl
fistl
test
out
idivl
iret
lret
dec
sti
push
push
les
pop
test
fwait
sbb
xor
cmpsl
push
in
xchg
shlb
stos
xor
pop
jle
push
fdivs
fcoms
mov
sbb
mov
push
sub
and
fbstp
sti
mov
cmp
sub
mov
xchg
mov
inc
shll
push
test
icebp
sbb
outsl
enter
mov
xchg
add
push
pop
mov
pop
mov
test
in
xchg
sbb
adc
loop
insb
test
into
out
xor
aas
popf
sub
rcl
jo
dec
mov
mov
push
jecxz
mov
jge
loop
je
jp
icebp
lods
dec
adc
arpl
xchg
lret
inc
xor
test
push
pop
ret
push
dec
jne
mov
jns
rcl
jne
test
shlb
jae
push
pop
mov
fiaddl
xchg
arpl
mov
inc
and
cmp
clc
pushw
or
push
xchg
push
pusha
out
arpl
pop
xor
lods
gs
sub
push
ljmp
nop
mov
xor
mov
add
jo
popl
insb
and
repnz
pop
int
ja
adc
repz
xchg
mov
imul
dec
int
in
inc
push
sub
inc
sbb
sbb
or
xchg
int
sub
loopne
lods
test
push
stc
cmp
xchg
cmpsb
pop
out
push
mov
lret
int
add
or
add
rolb
xor
mov
push
pop
negl
adcb
mov
push
fs
test
push
bound
mov
aam
ljmp
push
push
xor
xchg
lahf
mov
jmp
xor
call
xchg
jae
adc
daa
es
or
test
mov
mov
ds
jg
dec
mov
inc
cmp
rol
test
inc
dec
jl
sbb
aas
or
lods
sbb
jbe
cltd
std
in
jecxz
jnp
outsl
jno
add
adc
lahf
inc
lods
ss
and
push
out
rclb
jp
push
jl
enter
mov
nop
jne
inc
loope
add
jbe
jne
mov
add
stos
mov
mov
add
add
mov
cmc
in
sub
mulb
outsl
out
mov
out
rolb
mov
insb
sbb
cmp
adc
push
adc
push
cmp
cmp
iret
add
cli
ficomps
aaa
pop
dec
jge
mov
cmp
leave
lds
push
sub
data16
mov
scas
xchg
sti
jecxz
add
sbb
lods
sbb
xchg
cmp
sub
push
out
sub
cmp
fstp
xchg
popf
dec
push
pop
xor
prefetch
or
sbb
and
mov
dec
xor
pop
inc
push
aam
clc
js
dec
jge
aas
inc
cmp
mov
clc
ror
and
add
push
cwtl
cmpsb
push
out
scas
lea
ret
sub
cmp
mov
bound
arpl
insl
push
cli
xchg
push
icebp
xchg
and
aad
cmc
dec
mov
mov
imul
popf
pop
push
push
push
pop
cmpsl
push
lret
fisubrl
div
xchg
repz
jne
xchg
test
rcrb
and
andl
std
scas
aad
sbb
push
pop
mov
xchg
gs
flds
push
test
adc
in
nop
int
push
pop
dec
aam
sbb
dec
push
iret
bound
into
push
test
dec
mov
cmp
orb
cmp
loop
sti
mov
popa
ficompl
inc
shlb
into
fadds
sti
je
fisubrl
mov
add
pop
xchg
adc
scas
sti
xor
outsb
test
mov
scas
push
sbb
bound
mov
adc
mov
out
call
loop
fs
cmp
mov
and
test
mov
outsl
loopne
incb
clc
adc
xchg
into
cmp
imull
push
adc
push
lcall
dec
pop
inc
pop
and
std
lock
ds
dec
cmp
add
and
sahf
cld
sahf
enter
mov
fimuls
mov
lcall
lret
mov
xor
out
adc
pop
push
iret
xlat
das
cmp
mov
pop
into
daa
imul
pop
push
insb
mov
test
dec
adc
xchg
dec
sti
sub
push
ja
mov
ret
push
mov
outsl
cltd
sarl
inc
jge
pop
jnp
adc
les
push
fldl
sbb
test
xchg
shlb
repz
mov
cmpsb
cmp
cmp
jl
in
jo
xchg
lahf
btc
scas
loope
outsl
cld
in
push
push
in
jno
bound
add
xorl
jbe
add
cmp
es
sub
ficomps
iret
imul
xchg
js
enter
mov
sbb
out
or
inc
out
pop
and
pusha
mov
fisttpl
mov
mov
ds
mov
adcb
pop
add
ficompl
sbb
subb
sub
xchg
test
sub
inc
xlat
ja
js
insb
nop
pop
xor
sub
xor
gs
sbb
stc
sahf
out
mov
pop
pop
cmp
pop
dec
addr16
sbb
dec
stos
and
enter
in
pop
jo
lods
push
xchg
stc
xchg
pushf
sbb
pop
jl
scas
in
pop
out
scas
adc
das
sub
in
jmp
push
xchg
jns
push
mov
cmp
mov
add
mov
test
mov
sahf
dec
rcl
mov
xchg
push
mov
add
jae
shr
dec
fwait
ss
mov
xor
in
inc
fwait
addl
cld
adc
mov
inc
dec
inc
ljmp
sub
jl
push
pop
mov
jnp
subl
mov
andl
mov
int3
push
xchg
push
jae
daa
sbb
push
xor
pop
push
and
inc
test
test
arpl
stos
cmp
loopne
xor
jne
das
xchg
loope
mov
jne
movsb
lret
xor
sbb
fistpll
sbb
adc
add
mov
lahf
xor
cmpsb
cwtl
add
iret
xor
mov
or
cmp
mov
inc
jne
cmp
add
xchg
push
repz
sub
leave
and
fdivrl
pop
test
pop
movsl
mov
inc
sbb
iret
and
inc
mov
or
mov
push
mov
int
test
and
fildll
das
jbe
and
push
xor
ret
or
pop
ficomps
lahf
cmc
push
xor
ds
or
fnstsw
scas
xlat
cltd
call
out
fnstsw
push
into
xor
jecxz
frstor
roll
cmp
rorl
int
add
or
pop
addr16
lcall
sub
fisubrl
and
mov
xchg
jge
push
sub
cld
xor
cmp
into
shrb
adc
and
je
fisubl
mov
data16
and
jp
addr16
sti
push
bound
lahf
les
push
and
movsl
and
mov
sahf
loopne
imul
pop
xor
sub
lods
lcall
repz
test
inc
xor
popf
test
ficoml
fs
mov
insb
lcall
sbb
push
mov
mov
xchg
hlt
hlt
push
jns
xor
sbb
leave
and
jne
add
mov
xchg
add
leave
adc
divl
scas
push
cmp
aas
xor
mov
or
ljmp
mov
pop
xor
jb
and
lahf
sbb
rol
outsl
leave
je
mov
adc
mov
xlat
sbb
out
jo
sub
adc
jno
mov
dec
mov
outsb
cmp
ds
inc
jne
in
push
mov
xchg
mov
int3
mov
es
movsl
fmull
aas
add
jecxz
mov
adc
aad
cld
push
out
das
std
pop
or
inc
je
in
insl
bound
lds
mov
xor
pop
jl
daa
pop
rol
mov
popf
mov
in
int3
mov
sub
aam
popa
push
loopne
dec
test
jg
xorl
rorb
rclb
hlt
insb
popf
adc
jbe
add
movsb
rcll
and
push
out
loope
cs
ljmp
cltd
leave
pop
shlb
in
call
ret
ret
int3
in
pop
ja
push
cltd
jg
xchg
imul
inc
aas
stos
rorb
inc
xchg
inc
push
int
xor
aas
jmp
cwtl
scas
inc
in
rorb
imulb
mov
jno
mov
iret
cmp
sbb
sti
test
push
add
sarb
mov
mov
mov
repz
push
shr
hlt
xchg
icebp
push
outsb
or
test
mov
pop
and
cltd
mov
and
mov
xchg
cmp
pop
sub
pop
pop
in
push
xlat
loop
stc
lcall
dec
dec
xchg
xor
stc
push
addr16
int
jecxz
or
mov
push
insb
rorl
lods
or
cmp
nop
ds
xor
test
test
cld
cmp
js
stc
dec
add
mov
mov
push
insb
cmp
push
in
push
xor
cmp
sbb
aad
adc
ficompl
mov
lret
cmp
dec
cmp
addr16
jp
push
in
int
cmp
scas
es
and
sbb
mov
xor
inc
push
and
inc
xchg
mov
icebp
icebp
jmp
push
mov
inc
mov
cli
icebp
mov
imul
imull
daa
push
mov
jecxz
adc
aaa
sub
cmp
data16
mov
pop
cmpsb
xchg
adc
stc
sbb
jecxz
pop
je
mov
inc
movsb
clc
lods
leave
arpl
mov
leave
pop
cmc
enter
aaa
in
mulb
inc
jae
jnp
mov
repz
mov
out
hlt
sbb
sti
ret
andb
nop
aaa
fnstcw
insb
mov
shrb
sbb
pusha
xchg
out
mov
mov
pop
rcrb
rcrl
out
push
aas
push
push
aas
sbb
decl
xor
push
pushf
cmp
es
lea
jae
jmp
sub
mov
push
ljmp
lret
sbb
push
cli
pop
call
pop
jl
push
mov
add
push
insb
sbb
or
or
push
add
ret
push
rorl
adc
sub
movsl
arpl
pop
pop
enter
inc
loope
xchg
mov
or
adc
dec
mov
add
scas
mov
pusha
scas
enter
cmp
inc
add
dec
js
ja
pop
and
cltd
pop
nop
lea
sti
fsubp
sarb
jp
iret
mov
xchg
adc
xchg
out
mov
pop
and
fcmovnb
cmpsl
iret
adc
xor
push
mov
outsb
cmpsb
shll
push
sbb
adc
push
and
mov
sub
in
mov
dec
cmp
mov
jno
mov
inc
mov
nop
dec
mov
push
inc
adc
fcoms
or
adc
repz
int3
lcall
ss
mov
fcompl
idivb
mov
adc
cltd
aam
daa
jns
xchg
icebp
xor
iret
cmp
add
stos
sbb
out
mov
xor
daa
sbb
daa
sbb
adc
shrl
mov
in
push
imul
mov
cmp
std
rcpps
sub
loopne
xor
ja
mov
push
ja
add
xorl
add
sbb
push
xchg
mov
xchg
loopne
mov
xor
jno
dec
bound
pop
xchg
or
sti
xlat
jl
dec
dec
jg
call
pop
outsb
inc
pop
movsl
xchg
cmp
fdivrs
adc
inc
sub
sar
enter
add
cmpsl
push
gs
ljmp
gs
sbb
stos
xchg
xchg
xchg
mov
sbb
pushf
stc
jne
pusha
clc
psrad
and
mov
cmp
cli
jne
cmpl
xlat
leave
xchg
mov
imul
mov
mov
icebp
mov
or
in
int
mov
jns
mov
sbb
jg
scas
push
pop
mov
and
test
int3
pushf
pop
inc
insl
stc
ja,pt
jno
popa
jmp
imul
jno
dec
stc
sbb
jg
mov
adc
je
xchg
push
in
push
cli
push
std
sti
add
inc
in
test
leave
aas
xchg
lock
or
loop
std
popf
pop
enter
xchg
mov
shl
sarb
adc
cli
or
mov
xor
inc
mov
xor
neg
jnp
iret
mov
adc
pop
test
out
loop
adc
add
and
into
jle
xchg
pop
adc
sub
and
fdivs
or
xchg
adc
lcall
xchg
das
out
adc
xchg
dec
sub
insb
mov
mov
add
push
cld
push
or
bound
lods
push
imul
inc
adc
out
je
enter
pop
rcrl
xchg
sbb
mov
cmpsb
xor
dec
pop
adc
xchg
or
les
or
mov
fs
fwait
into
out
das
adc
dec
gs
fwait
ljmp
addr16
xor
pop
pop
and
sub
xor
aas
jmp
sub
push
scas
cmp
je
push
movsb
push
cmpsb
test
aas
test
fwait
data16
adc
mov
cwtl
js
push
push
xchg
dec
sub
insb
jno
mov
out
mov
or
jno
shrd
mov
pop
xchg
mov
dec
hlt
sbb
mov
les
sarb
add
pop
pop
ret
cmp
mov
seta
sbb
lahf
mov
orl
pop
sbb
clc
sbb
push
movsb
test
dec
sub
les
inc
cmc
mov
push
xor
in
mov
cld
ret
aad
call
aad
stos
popa
or
dec
xor
inc
jmp
push
jnp
xchg
test
sarb
repnz
jb
push
mov
mov
repz
jg
cmc
jne
sub
in
push
out
in
stos
mov
dec
mov
xchg
int
pop
fwait
pop
mov
lret
aam
rclb
loopne
rclb
xor
clc
xchg
and
icebp
xchg
lret
pop
lods
jno
sbb
lcall
mov
je
je
lahf
mov
stos
jl
fnsave
jp
sbb
mov
and
inc
push
mov
mov
dec
xchg
ret
inc
mov
daa
sbb
imul
sub
shll
mull
adc
loop
mov
inc
inc
clc
xor
pop
dec
jle
fs
add
test
lds
into
mov
aaa
imul
mov
dec
dec
dec
or
push
adcl
int3
pop
dec
adcl
push
mov
adc
ret
xchg
push
add
or
negb
fistps
outsb
insb
out
sub
mov
movsl
in
mov
pop
cmp
xor
ret
push
jmp
mov
mov
jmp
in
mov
das
ret
mov
push
fisttps
mov
pushf
testb
push
xchg
call
mov
sbb
adc
add
loop
mov
pushf
lret
jecxz
out
hlt
xor
add
sbb
out
mov
imul
jecxz
inc
mov
add
or
and
cltd
call
outsl
sbb
out
insl
imulb
jo
add
push
mov
pop
repnz
dec
insl
bound
fs
hlt
xchg
cmpsb
lcall
popa
test
insl
cs
aad
push
push
test
inc
and
adc
dec
loopne
leave
add
lcall
mov
fmulp
movsb
sub
xor
das
and
lods
sbb
cld
scas
mov
or
cmpb
int
xor
and
jae
popa
pusha
mov
lods
inc
loopne
mov
and
cmpb
push
test
xor
xchg
fisttpl
sbb
insb
and
jbe
jnp
les
jmp
and
cmp
call
xor
test
flds
inc
aaa
imul
lock
js
adc
mov
adc
inc
popf
jle
ss
add
mov
pusha
loope
jbe
jae
mov
or
xchg
sub
xor
popf
insl
jns
push
mov
jle
add
icebp
and
push
add
cmp
pop
iret
pop
push
popa
pusha
add
push
mov
lds
inc
cmpb
mov
push
inc
jbe
pop
adcl
iret
mov
fsubs
pop
xor
xchg
jb
daa
pop
test
xor
clc
les
pop
movsl
sub
xor
push
jge
sub
ljmp
in
cmp
push
popf
je
xchg
adcb
call
cld
inc
arpl
ret
shlb
jecxz
bound
mov
pop
pop
dec
cli
jae
dec
sahf
or
and
and
push
jbe
fcmovnbe
into
mov
out
js
decl
lock
imul
or
sbb
mov
jae
pop
lahf
jne
ljmp
push
cmp
cmp
test
dec
xchg
mov
cmpsl
and
add
fdiv
bound
std
add
dec
aas
cmp
mov
sbb
stc
popf
xor
test
xor
xor
repz
sub
ss
pop
mov
mov
xchg
mov
ret
xor
and
lock
aaa
movsl
lret
cmp
or
aas
and
xchg
or
aas
aad
adc
lock
mov
pop
xchg
push
cs
ret
lds
cmp
xchg
sti
call
mov
testb
test
mov
es
test
push
cli
adc
lds
std
dec
sub
push
loope
cmp
push
fwait
mov
leave
jbe
push
jle
mov
xor
push
int
add
lds
sbb
inc
push
lea
test
sbb
pop
adc
out
fisubrs
sbb
sbb
test
jbe
xor
inc
push
adc
inc
outsl
adc
ja
and
outsl
add
movsb
daa
cmpsb
sbb
out
xor
out
add
pop
call
test
cmp
lcall
jns
daa
mov
xlat
out
cmp
fsubrs
jb
aaa
dec
sub
or
inc
mov
cpuid
lcall
xor
dec
mov
sahf
and
push
shrl
adc
lcall
cltd
cmpl
cmp
and
ss
jbe
cs
cmp
jp
jbe
xor
ret
push
fsubrs
fnstcw
dec
shl
cld
cmp
lret
mov
jle
and
in
popa
jmp
or
hlt
xor
push
xchg
ret
fmulp
js
push
or
stc
fdivrs
ficoms
lahf
jmp
mov
mov
fmuls
mov
cmpsb
iret
push
js
daa
sbb
sub
iret
add
hlt
ds
cmp
dec
in
in
sbb
jae
mov
adc
dec
mov
loop
and
mov
push
jl
mov
imul
adc
fiadds
or
lahf
mov
jmp
cmp
jae
rorl
jb
xchg
scas
xlat
jno
cmp
mov
test
popa
scas
and
or
jo
comiss
out
pop
pop
test
sub
pop
sahf
incb
inc
push
test
pop
fs
mov
insl
movsb
into
add
push
cmp
mov
mov
xor
loopne
jge
outsl
icebp
jbe
lods
aaa
shrb
cmp
sbb
mov
aaa
mov
fstpl
fnstcw
nop
and
mov
aam
rolb
and
fsubrp
je
pop
xor
cld
std
imul
imul
inc
xor
push
test
mov
je
or
bound
mov
test
mov
test
jp
mov
adc
pop
push
lret
cmp
mov
cmp
fadd
scas
out
mov
popa
cmpsb
aam
lods
aaa
cmp
sub
inc
repnz
sub
aas
mov
inc
fstps
mov
cld
push
inc
rcll
cwtl
sbb
xor
pop
in
pop
xchg
imul
push
sahf
sbb
in
enter
xchg
mov
mov
out
mov
push
push
or
sbb
and
in
sbb
fld
leave
pop
cmpsl
cmp
gs
ss
dec
subl
adc
xor
push
push
pop
rorl
xchg
add
mov
lods
xchg
mov
pushf
xor
popf
xchg
lds
push
and
rorl
push
loop
shll
mov
lahf
roll
cmpsl
xchg
cmpb
daa
mov
mov
adcl
and
ret
inc
addr16
xlat
mov
push
xorl
icebp
pop
cmp
sub
ljmp
das
cmp
loop
mov
lret
test
ja
scas
sbb
xchg
dec
adc
out
cmp
inc
leave
ret
push
or
jl
cmpsl
outsb
push
or
xchg
add
push
mov
push
ljmp
lret
xor
imul
pop
in
insb
mov
ljmp
adc
lret
stc
or
jns
adc
cmp
push
sub
call
sub
aam
push
and
and
jmp
arpl
push
loopne
sbb
loope
adc
testb
stos
xorb
std
mov
jp
fdivp
scas
std
scas
sub
hlt
aam
insl
andb
dec
andl
fmull
data16
and
in
scas
push
lods
pusha
lret
in
sti
cmp
aas
ss
adc
insl
inc
sbb
popa
sub
sbb
cwtl
sbb
push
data16
dec
scas
mov
adcl
or
loopne
xchg
push
add
jbe
lea
stos
mov
mov
cld
insl
mov
xlat
dec
inc
mov
inc
aaa
mov
sbb
stc
jno
test
sub
push
mov
cld
sarb
je
ja
out
popf
mov
adc
data16
stos
inc
pop
mov
leave
mov
cmpsb
jle
pop
lret
lahf
clc
xchg
inc
outsl
xchg
cmp
popa
push
pop
and
jb
popa
je
cmpsl
outsb
and
test
add
movsb
dec
rcrl
inc
push
jmp
scas
adcl
jl
push
daa
push
outsb
push
sub
inc
fcoms
iret
fabs
dec
inc
fmul
cmp
dec
inc
movl
into
cmp
loopne
fwait
and
repz
mov
pop
add
gs
cmp
addl
aaa
sub
outsl
cmpsl
insb
test
mov
and
push
sub
xlat
and
fstp
test
push
lea
lret
pop
cltd
xchg
pop
mov
inc
inc
sub
xor
mov
xlat
add
les
cmpsl
push
fndisi(8087
scas
out
sub
hlt
leave
mov
jp
dec
sub
add
cmp
in
insb
push
mov
vmwrite
jecxz
jnp
mov
insl
xor
icebp
data16
push
mov
pop
out
add
push
push
xlat
pop
xchg
sbb
mov
or
es
enter
sub
rcrb
or
push
bound
cmpsl
dec
push
jg
mov
adc
jbe
xor
gs
in
or
jae
push
mov
pop
jo
fdivs
adcb
sub
sti
adc
lahf
insl
cmp
add
add
movsl
mov
push
pop
xchg
pop
and
rclb
sbb
xor
out
cmp
inc
mov
mov
ret
pusha
mov
cs
add
push
clc
std
xor
data16
out
pop
addb
in
sbb
push
loope
sbb
mov
mov
mov
fistpll
mov
sahf
push
jmp
add
stos
inc
xchg
push
scas
push
jae
cwtl
arpl
sub
sub
arpl
mov
int3
inc
cmp
xchg
jno
fwait
cmp
inc
int3
jle
outsb
sbb
pop
mov
xchg
or
mov
xchg
cmp
lock
jecxz
mov
fsubrl
daa
loope
xlat
mov
mov
sub
pop
pushl
mov
add
lds
outsb
add
and
cmp
jg
dec
test
aad
push
mov
fnstsw
cld
dec
in
xor
push
xchg
xlat
mov
cmp
div
mov
cmpsl
pop
xor
std
daa
xor
in
mov
dec
adc
ret
call
stos
test
aas
mov
cmp
xchg
je
fistps
jle
insb
std
loopne
cmpsb
inc
std
imul
lahf
mov
movsl
inc
add
mov
insb
pop
pop
pop
dec
inc
inc
stc
jnp,pn
push
out
push
xchg
push
cmc
pushf
js
mov
jp
sbb
lret
xchg
icebp
cwtl
lret
int3
cwtl
cs
std
je
sar
mov
ja
jmp
pop
fxtract
mov
mov
push
fists
push
and
mov
fldl
sarb
jg
std
in
mov
inc
sbb
xchg
insb
adc
cmp
xchg
out
mov
jno
fst
pop
push
cmp
xchg
jae
call
adc
jb
xchg
in
adc
in
mov
push
mov
mov
and
and
lret
loop
jge
or
pop
sbb
sarl
dec
jns
jne
jnp
cltd
push
clc
gs
lock
mov
mov
pop
inc
imul
test
push
sub
and
daa
and
popf
jmp
push
sarb
adc
xor
jbe
mov
add
pop
cmpsl
mov
in
aam
jp
cltd
lea
rclb
scas
mov
scas
sub
pop
repnz
repz
sub
cmp
std
cmp
shlb
jbe
pop
and
or
lods
adc
leave
sbb
stc
fwait
sbb
mov
movsb
mov
xchg
mov
or
xor
das
mov
cmpsb
leave
adc
xchg
repnz
adc
out
out
pop
fcmovne
jnp,pt
xor
push
or
sbb
cwtl
cmp
adc
mov
ja
sub
test
sbb
test
cmp
mov
data16
cvtdq2ps
jbe
mov
das
es
dec
decb
ss
popa
cltd
sbb
daa
fcomps
ret
adc
mov
cwtl
insb
cmpb
cmc
aaa
push
sbb
int
aaa
push
cmp
out
cmp
in
aas
dec
scas
in
cmc
mov
mov
sbb
fimull
adc
adc
sub
sahf
orb
inc
cltd
mov
push
or
out
jno
mov
inc
push
in
dec
dec
cltd
test
mov
push
push
movsl
push
loop
xchg
cmp
and
stos
test
sub
mov
xor
mov
icebp
out
pop
xor
jb
push
inc
push
dec
aaa
lea
mov
aad
out
cmp
inc
fildll
cmc
fdivr
in
xlat
loop
fstps
imul
ret
xchg
int3
xorl
aad
or
xor
rcr
inc
lret
divb
xchg
pusha
xchg
inc
mov
fwait
movb
push
outsl
movsb
lea
aaa
popa
inc
mov
pop
pusha
addb
outsl
fbstp
pop
out
jbe
dec
insb
jl
pop
icebp
pop
in
sub
shlb
lea
push
jecxz
pop
push
inc
aam
test
mov
pop
imul
addr16
push
out
js
ret
xor
dec
xor
dec
pop
aas
mov
add
mov
fcomi
jg
mov
adc
shll
or
nop
lret
jno
or
adcb
les
in
sbb
arpl
xchg
adc
sbb
popa
int3
and
cmpsl
push
adc
push
sahf
repnz
mov
jmp
adcl
addr16
aaa
addr16
andb
loope
adc
es
lahf
sbb
xor
in
lea
push
ss
jmp
lds
gs
mov
mov
repz
mov
pushf
jl
movsl
adc
jmp
mov
lret
adc
cmp
push
cmp
push
ds
lahf
cmp
jg
xchg
jno
mov
sarb
push
mov
fcomip
out
inc
inc
cmp
adc
jb
jae
fstpl
xchg
scas
push
add
mov
cmp
imul
cld
mov
adc
jnp
mov
jbe
sbb
xor
xchg
fwait
push
sbb
pop
int3
cmpsl
inc
outsb
ja
arpl
jb
cmp
jo
pop
inc
arpl
pop
in
pop
int3
pop
ret
sub
sti
lret
push
sbb
psrlw
or
sub
fsubrs
subb
das
lcall
test
jb
filds
mov
add
incl
insl
repz
cs
popf
jb
adc
das
cwtl
mov
mov
xchg
pop
mov
add
iret
loopne
xlat
sbb
addb
out
lcall
scas
xor
cmp
lcall
sti
xchg
sti
mov
addb
fmuls
mov
sub
repnz
mov
lock
adc
xchg
xor
mov
pop
lods
sahf
add
jno
movsb
add
dec
sahf
dec
dec
dec
jecxz
add
cmp
xchg
icebp
push
leave
call
push
incl
sub
xor
dec
fwait
xchg
pop
mov
xchg
jno,pn
out
or
inc
xchg
and
mov
inc
ljmp
mov
imul
cmp
jnp
xor
sbb
in
xchg
gs
dec
orb
ficoms
dec
jno
cld
jmp
repz
sbb
or
xor
and
push
outsb
cmp
inc
hlt
jns
mov
stos
and
mov
inc
push
push
in
shlb
data16
movsb
mov
jno
xor
inc
adc
inc
mov
pop
popf
push
and
cmpsb
jno
ljmp
add
xchg
push
cmpl
idivb
sar
popa
mov
mov
pop
iret
push
mov
adc
out
negl
lcall
cld
dec
jecxz
ljmp
push
push
sarl
inc
mov
or
push
dec
add
sub
ds
imul
sub
pusha
inc
cs
cli
stos
or
sbb
inc
inc
xchg
cmp
repz
iret
or
bound
insl
and
pusha
mov
out
sbb
jecxz
loopne
test
call
mov
repnz
add
add
addr16
leave
sbb
xchg
mov
sarl
sbb
pop
cs
pop
aad
imul
mov
cmp
push
sub
jle
cmpsb
das
mov
pop
jl
xchg
gs
cmp
mov
out
adc
leave
jge
lret
hlt
notb
jecxz
xchg
push
sub
jne
nop
in
fs
sub
iret
shlb
movsl
jmp
or
adc
cld
pcmpeqb
sbb
je
jno
inc
cli
cmpb
xor
iret
fsts
sub
and
pop
iret
ret
xchg
add
cltd
adc
dec
pop
add
movsl
cmc
stos
fistpl
test
xchg
mov
xchg
mov
jae
js
jne
mov
sub
pop
jl
mov
mov
mov
jp
jno
and
pusha
dec
add
test
insl
dec
ret
push
inc
incb
and
shll
jl
sub
mov
clc
neg
push
mov
inc
lock
mov
pushf
rol
ja
cmp
push
cmc
dec
push
mov
scas
dec
xor
mov
mov
mov
sbb
xor
fidivrs
add
mov
outsl
add
std
sbb
das
xchg
stos
call
or
push
unpckhps
imul
jns
and
les
xchg
dec
test
xor
aaa
scas
dec
and
rcrb
test
std
gs
push
mov
inc
pop
jg
and
cmpsb
sti
mov
insb
xor
popf
cmpsl
xorb
cmp
mov
push
jmp
or
lock
test
mov
xchg
and
and
mov
cmp
ret
add
fcompl
punpckhdq
fwait
push
mov
rorl
out
loope
std
cld
ja
imul
mov
push
mov
mov
xor
or
test
sbb
fidivrl
test
push
mov
add
and
enter
insl
mov
xchg
and
iret
xchg
leave
add
js
scas
xchg
mov
cmp
pusha
jnp
jno
sub
lods
dec
sub
or
fdivl
hlt
inc
dec
or
adc
and
insl
fcmove
push
jg
pop
out
scas
sub
cmp
out
mov
ficoms
pop
mov
test
jp
imul
mov
loope
xor
cltd
add
loopne
cmp
in
xor
add
adc
cs
mov
pop
test
pop
sub
dec
jb
mov
leave
imul
fbstp
repz
inc
jmp
pop
jns
mov
outsl
sbb
mov
pop
sub
pop
icebp
icebp
sub
jecxz
jo
ret
xchg
push
jo
xor
mov
jmp
sbb
sbb
xchg
and
pop
push
cs
imul
loop
pop
mov
fstp
sarb
pop
xor
fldl
aad
mov
outsl
push
add
lods
xor
insl
jnp
adc
or
mov
adc
les
mov
iret
add
sbb
inc
mov
loopne
ds
sbb
out
popf
scas
inc
adc
push
jb
sub
insl
adc
or
xchg
lods
in
pop
cmp
lea
ja
mov
movb
adc
xor
fsubrp
mov
rorl
xor
rorl
jbe
shlb
sub
sbb
roll
pushf
or
stos
dec
xchg
cmp
sub
xlat
loop
add
mov
or
call
jno
xchg
push
pushf
int
mov
push
scas
sbb
subl
out
xchg
push
push
js
fisubrs
imul
mov
andl
jo
or
outsl
in
clc
sub
int
mov
rcrl
dec
rorb
cmpb
and
jl
outsl
push
mov
pop
repz
decl
pop
jb
push
sub
ret
imul
out
neg
scas
push
cltd
ss
subb
sbb
stos
cmp
xchg
mov
shlb
insl
cmp
notb
clc
into
fisubrl
xor
lret
add
jae
xchg
pop
fwait
test
dec
mov
xor
pop
cs
outsl
xchg
push
shl
inc
into
jnp
ja
into
enter
aaa
mov
xor
dec
cli
sbb
or
mov
jmp
adc
rorb
push
dec
mov
test
jg
popf
sub
das
in
xor
sbb
adc
lret
fsts
inc
imul
adc
mov
or
cld
xchg
pop
xchg
adc
lods
jbe
mov
add
pop
js
divl
bound
std
imul
and
imul
repnz
jge
inc
pop
adc
test
inc
mov
mov
add
jecxz
jmp
push
call
pop
jbe
push
xchg
out
cmp
pop
dec
xchg
testl
xchg
test
xor
or
push
mov
mov
rcll
mov
gs
mov
add
mov
jge
in
push
xchg
das
push
test
bound
mov
sbb
outsb
mov
inc
hlt
mov
xchg
mov
mov
sbb
sub
lea
sub
addl
imul
sbb
mov
pop
fistl
test
push
js
arpl
push
mov
cmp
pop
dec
idivb
test
mov
jge
subl
sbb
jns
popa
mov
jnp
xchg
dec
dec
push
add
stos
bound
pop
sub
xor
pop
adc
scas
repz
jp
xchg
mov
add
adc
push
fisubl
mov
adc
cmp
and
add
jae
pop
jb
sub
mov
mov
pop
mov
sti
dec
or
push
sti
lret
sahf
rcrb
jb
test
dec
pop
mov
and
mov
mov
xor
pop
flds
xor
cld
cld
mov
lcall
or
fmul
sub
mov
sbb
dec
into
lods
and
mul
push
jns
cwtl
enter
pop
lods
push
nop
push
jne
mov
sbb
xor
orb
add
mov
test
push
or
aaa
mov
cmp
jae
dec
dec
jae
mov
xchg
aad
addb
popa
dec
stc
cltd
stos
jp
dec
out
movsl
jecxz
add
divl
inc
sti
dec
cltd
jb
ja
arpl
push
add
mov
imul
adc
pusha
and
mov
call
sbb
sbb
data16
sbb
sbb
add
clc
andl
push
adc
mov
and
addr16
pop
cmpb
push
cwtl
out
aad
mov
push
xor
or
and
arpl
inc
fnstcw
rorb
push
pop
jl
xor
insl
mov
or
mov
xchg
fcmovne
andb
sahf
sub
out
cmp
pushf
jae
add
subl
test
lret
scas
fwait
in
movsl
jb
mov
test
xorb
ljmp
roll
sub
movsl
ds
insl
insl
sub
jae
cmp
nop
mov
inc
addb
clc
leave
mov
lods
mov
mov
scas
pop
addr16
xor
scas
adc
pop
test
jns
cmp
and
imul
xchg
xor
and
xchg
pop
pop
push
arpl
cwtl
lods
pop
pop
icebp
sub
ficomps
mov
xchg
ret
das
lret
shll
lahf
adc
jo
je
repnz
cs
jg
cmpsb
lods
jl
xor
ret
jmp
mov
lea
cld
hlt
and
aas
pop
or
add
bound
aaa
lods
out
pop
pop
mov
push
xchg
ja,pt
fs
pop
stos
lods
shrl
adc
and
jbe
xor
fldenv
outsl
jns
daa
pop
push
loopne
lret
sub
mov
jmp
mov
sbb
pop
daa
pop
pushf
lahf
adc
rcrb
push
out
jne
push
test
stc
inc
ret
aaa
dec
add
adc
jns
mov
inc
xor
cli
inc
jmp
pop
sub
jo
mov
jb
and
lock
mov
push
outsl
test
mov
nop
cmp
mov
push
sbb
ljmp
mov
shr
mov
cmpsl
lret
mov
test
mov
out
inc
mov
lea
cmpb
sti
cltd
fxch
divb
cmpb
fsubl
inc
xorl
inc
jne
rorl
push
cs
cmc
test
pushl
pop
dec
dec
ljmp
jl
and
mov
cmpsl
out
mov
sub
push
mov
outsb
or
int3
mov
aaa
movsl
sti
mov
sub
cmp
call
inc
cmpsl
orl
mov
cltd
or
sbb
scas
push
or
and
add
fsts
adc
fcmovu
xor
mov
scas
add
scas
negb
leave
movsl
mov
pop
in
out
js
pop
scas
xor
xchg
popa
cmpsl
mov
insl
or
or
cli
cmp
jecxz
sahf
push
ret
mov
outsl
out
push
xor
jmp
xor
adc
sbb
or
pop
cmp
fisttps
pop
sbb
jae
xchg
pop
lahf
scas
xor
sbb
aas
and
test
xchg
mov
jbe
lods
mov
out
rcl
iret
pop
add
mov
dec
outsb
cltd
jb
inc
test
add
push
bound
adc
mov
filds
in
inc
push
pop
jecxz
or
mov
in
insl
cmc
jge
fisubs
dec
cmp
aaa
lods
int3
push
push
fs
js
pop
mov
mov
xchg
sbb
xor
test
adc
mov
sub
stos
sub
cmovs
sub
xor
ljmp
test
imul
popa
pushf
jl
xor
jns
std
out
jp
ret
repnz
add
or
mov
ljmp
xchg
popf
pop
dec
jne
loop
pop
outsl
xor
xor
sub
fidivrl
lret
pop
mov
push
std
and
out
cmpsb
or
xor
adc
cmpsl
andl
push
fldl
out
xor
push
outsb
scas
rclb
add
cltd
adc
cmp
mov
push
inc
mov
adc
inc
fs
mov
inc
dec
pop
les
push
xchg
lods
aad
loopne
sti
mov
jo
or
mov
adc
hlt
sbb
daa
jns
pop
mov
lea
stc
fcomps
jbe
jae
xchg
lea
fldenv
lret
shll
in
jne
dec
dec
ss
lds
iret
xor
lods
sbbb
xchg
push
nop
sbb
dec
and
inc
and
scas
jnp
mov
testb
inc
xlat
inc
aas
inc
inc
rclb
add
cli
out
xor
push
inc
jmp
mov
ljmp
mov
fnstcw
rcrl
pop
inc
cwtl
ret
and
leave
pop
enter
fistps
push
mov
jecxz
filds
adc
stos
pop
je
inc
xchg
jl
mov
lahf
pop
xchg
mov
or
pop
mov
pop
les
push
cltd
adc
fs
int
xchg
enter
push
dec
mov
mov
xchg
jne
sub
stc
and
popf
clc
popa
adc
je
jb
jb
ss
xor
cld
pop
mov
cmc
std
and
test
dec
imul
jmp
adc
push
imul
adc
fwait
pusha
movl
rorl
inc
bound
push
push
test
mov
and
clc
lds
or
aas
push
dec
adc
sti
push
and
mov
mov
in
mov
scas
inc
adc
ds
xchg
jo
sahf
adc
mov
sarl
jno
jge
cmp
add
jl
pop
imul
mov
jle
add
ja
mov
push
enter
cmpsl
stos
fcmovnb
dec
sarl
mov
out
in
loope
mov
dec
sbb
daa
sti
mov
mov
dec
xor
add
mov
int3
and
ss
dec
sbb
pop
sub
xchg
dec
out
mov
je
out
out
xor
cmp
call
xor
cmp
mov
enter
push
and
adc
cmpsb
pusha
arpl
cmp
jmp
and
shll
jns
repz
sti
or
sti
sbb
cwtl
dec
cmp
add
xor
xchg
in
adc
cmp
int
xor
sub
mov
sub
fs
shlb
mov
add
std
call
outsl
hlt
out
nop
pop
jns
and
add
or
into
adc
push
aas
jp
fldln2
or
push
inc
aas
cmp
adcl
test
js
flds
ja
cmp
cmp
and
fldenv
mov
sub
sub
dec
jb
jle
xchg
arpl
sbb
jnp
leave
push
test
add
pop
and
into
mov
rcll
insb
dec
dec
jae
cmp
push
mov
lcall
fs
xor
pusha
xchg
mov
mov
int
or
ja
cwtl
xor
jae
cmp
out
or
mov
dec
leave
mov
iret
in
repz
or
lret
dec
and
in
bound
xchg
adc
add
test
cmp
cmp
icebp
jge
bnd
bound
or
jnp
cmp
clc
mov
pop
lods
or
movq
scas
push
pop
setnp
push
pop
dec
dec
pop
repz
sub
in
dec
cmp
cmpsl
fisttpl
add
fnsave
push
cmovbe
test
jg
dec
sub
or
or
lods
and
fisubrs
add
mov
sbb
mov
xor
data16
adc
mov
es
jmp
subb
sub
flds
mov
loope
scas
lods
pop
ficoml
ljmp
cmp
and
cmp
sub
sbb
adc
out
fcoms
push
cltd
mov
es
aad
dec
or
and
push
ljmp
push
jl
aas
xchg
bound
mov
jle
out
sub
shlb
ds
sbb
inc
sbb
das
jl
or
frstor
cs
xor
cmp
sets
sarb
push
sub
call
and
pop
dec
xchg
push
jle
inc
nop
ret
mov
mov
xchg
mov
push
test
repz
filds
js
mov
sbbb
xor
mov
je
dec
rcrl
loopne
mov
dec
pop
push
fidivrs
scas
popa
pop
xor
imul
adcb
lock
fstps
pop
sbb
adc
xchg
cmp
in
clc
insl
lods
mov
scas
fs
subps
mov
mov
cli
mov
hlt
aam
push
scas
aad
dec
shr
add
stos
xchg
xor
fchs
inc
or
add
stos
aaa
and
out
hlt
shlb
sbb
ss
imul
adc
or
jp
or
sbb
pop
and
in
pop
fcmovnu
gs
aam
jae
mov
addr16
fwait
outsb
daa
xchg
push
flds
mov
out
addl
roll
sub
xor
sub
xchg
cmpsb
ja
sbb
mov
test
jg
les
daa
insb
xor
lods
xchg
lods
addr16
pop
stos
mov
leave
repz
xchg
mov
cld
xchg
mov
or
shlb
stos
jae
fwait
out
jb
fsubl
jg
cmp
negb
and
mov
sbb
sbb
sub
outsl
mov
cmpsb
jl
aam
inc
mov
daa
lcall
fistl
xor
clc
add
into
cmovle
lock
inc
mov
dec
jg
sub
sub
stos
mov
ret
xchg
testl
inc
lret
mov
and
jp
mov
and
test
incb
neg
add
iret
shll
push
add
xor
and
lea
dec
cli
cltd
and
add
mov
jg
pop
mov
inc
mov
fidivrs
dec
pop
je
dec
fsubs
das
lret
push
mov
and
and
cld
and
push
cwtl
push
add
addr16
mov
cwtl
or
int3
and
mov
mov
out
inc
repz
mov
jl
push
cmp
cmpsl
jb
mov
jmp
cmp
adc
mov
jle
cli
push
pop
mov
dec
jnp
pop
jo
das
or
movl
or
ja
cli
out
es
int
or
add
stos
push
xor
in
sub
or
xchg
lods
fstl
shr
push
inc
ds
orb
add
sbb
and
add
fstpl
inc
xlat
mov
rcrl
outsb
jge
push
pusha
in
insl
pop
outsb
xlat
add
mov
mov
repz
loopne
dec
mov
fwait
pop
mov
orl
push
jno
jb
out
lods
loopne
cld
cmc
mov
imul
push
pop
inc
ja
in
mov
add
icebp
xchg
pop
out
add
in
add
mov
lcall
mov
popa
dec
pushf
xchg
inc
dec
xor
adc
pop
lods
call
rcll
in
stos
mov
inc
cmp
cmpsb
jecxz
cmpsb
dec
push
push
xor
test
jecxz
scas
inc
mov
aam
or
jge
sbb
and
add
xlat
fs
inc
gs
loope
call
call
jecxz
inc
nop
jbe
pop
xchg
sbb
sub
xor
ret
jne
aaa
lds
ss
out
stos
adc
aas
stc
ja
imul
xchg
or
jo
xchg
negl
ret
push
mov
sbb
add
cwtl
cmp
inc
add
sub
jge
imul
popw
adc
enter
fisubrl
sub
mov
stc
dec
mov
out
jne
cmp
dec
fwait
cmp
inc
jg
ds
jmp
mov
mov
mov
iret
push
and
stc
cwtl
pop
push
popf
test
data16
mov
arpl
xchg
xchg
jle
xchg
aam
fucomi
push
loop
js
lock
test
xlat
daa
adc
push
ret
sbb
or
mov
jg
sbb
incb
and
xchg
add
or
test
sbb
inc
fdiv
adc
inc
call
call
add
add
push
dec
fimull
mov
pusha
mov
mov
int3
xchg
and
mov
movsl
mov
jo
dec
cmp
push
mov
dec
test
inc
inc
cmp
sbb
out
sub
mov
aam
xor
pop
loop
arpl
fcom
adc
add
inc
enter
push
push
or
push
scas
aas
out
add
sbb
in
jecxz
mov
in
cld
cmp
iret
loope
fsub
and
adc
cmp
mov
fistpll
out
iret
inc
cmc
aad
lcall
or
out
xor
fs
pop
pop
add
xor
mov
jle
shrb
cmp
fucomip
pop
pop
cwtl
loopne
or
popa
repnz
fcoml
or
enter
call
es
stos
jns
push
les
movsl
adc
cmpb
sbb
lds
imulb
cmp
adc
imul
loop
ljmp
jno
inc
rcrl
inc
ss
sub
adc
adc
ljmp
es
mov
imul
stos
sbb
lea
push
pop
repz
loopnew
fwait
sarl
out
ljmp
unpckhps
push
in
dec
outsl
dec
sete
mov
xchg
out
movsl
in
jl
push
icebp
int
fildl
dec
cmp
lods
sub
fists
icebp
xor
cwtl
rcr
or
enter
cmpsb
add
fimull
mov
xlat
push
adc
adc
xor
stos
mov
cmpsl
jbe
jg
or
xchg
jb
xor
mov
jne
imul
imul
add
pop
test
aaa
cmp
inc
enter
xlat
or
add
mov
sarl
repz
lret
xlat
popf
mov
sbb
out
call
and
lret
xor
in
cmp
and
add
dec
and
bound
ficoml
cld
cli
sbb
divl
mov
adc
fdivs
jbe
stos
jmp
jle
pusha
mov
jge
and
shr
jae
hlt
out
outsb
mov
mov
call
mov
xchg
pop
outsl
sub
das
push
inc
imul
jmp
cwtl
rol
je
add
xchg
cli
aaa
dec
icebp
mov
inc
mov
leave
dec
push
adcb
ss
lahf
test
pop
push
fnstsw
int3
insl
andb
jns
scas
sub
insb
adc
in
xchg
inc
push
arpl
lahf
loop
mov
cmc
mov
sub
or
mov
orb
push
sahf
fnstenv
bound
mov
andb
push
jmp
addr16
pop
and
sub
les
jbe
dec
shlb
add
dec
int
dec
inc
std
adc
pop
hlt
xlat
fisubrs
jb
jae
lret
xchg
ret
int
sub
xchg
das
in
rcrl
cmp
mov
and
inc
mov
pushf
fs
jmp
out
aad
xchg
cmp
popa
or
jno
cli
xor
sub
lock
pop
fwait
into
pop
out
xchg
sbb
cmp
lahf
movsl
fisttpl
xor
pop
shl
mov
dec
pop
and
fisttps
cs
push
sbb
mov
cmpsl
sub
scas
loop
pop
insb
cmp
add
in
push
lea
out
fcomps
sti
stc
rorb
sub
lods
leave
jo
arpl
pop
or
jnp
loop
pop
ret
icebp
mov
stc
adc
pop
popa
aaa
es
push
iret
or
adcb
daa
pop
and
mov
out
jp
pop
mov
xor
stos
add
cmp
lret
jecxz
push
gs
xchg
pop
xchg
cli
add
into
push
fwait
jns
pop
call
testl
cmpsl
and
cmp
ja
movsb
les
aaa
dec
jbe
mov
mov
pop
in
fstpl
addb
fsubrl
cmpsb
xchg
in
push
notb
inc
outsl
cmp
sbb
mov
test
sub
push
add
hlt
xchg
inc
in
cs
fs
cmp
shl
movsl
repnz
pop
popa
add
adc
or
nop
data16
dec
mov
and
cmc
lea
repnz
xchg
push
mov
mov
hlt
inc
xlat
or
jb
mov
mov
or
mov
mov
push
mov
lock
repz
loope
jg
icebp
push
cmp
jo
dec
popa
mov
xchg
add
sbb
push
dec
imul
inc
inc
inc
mov
jl
xchg
lods
sbb
data16
and
pop
lea
outsl
pop
dec
adc
jl
loope
cli
nop
fld
fsubrp
and
mov
popf
outsb
sub
lods
mov
in
fnstsw
mov
pop
cmp
movsl
or
or
in
test
lahf
pop
fisttpll
addr16
push
sub
ja
push
push
lods
adc
jg
jecxz
or
jge
lret
mov
jmp
add
mov
add
adc
andb
shrb
or
and
enter
mov
cmp
sub
je
cmp
pop
psubsw
jl
push
mov
and
ljmp
popa
mov
and
clc
rol
dec
out
js
xchg
mov
mov
test
pop
adc
jp
xlat
unpcklps
push
pushf
dec
aad
push
pusha
add
xor
xchg
sbb
mov
push
sbb
pusha
mov
cmpsb
pop
and
int
pop
jo
mov
lahf
xor
or
fcompl
xlat
mov
xor
leave
and
sahf
test
push
loopne
std
stos
ret
xchg
cmc
jg
add
addr16
emms
xchg
fisubs
xor
call
ret
push
addl
fst
dec
sub
add
push
xor
lcall
popa
jg
inc
enter
getsec
or
loop
xor
test
add
and
jle
insb
andb
dec
push
adc
jne
push
testb
iret
mov
dec
into
aaa
cwtl
cwtl
subl
jbe
add
int3
jp
mov
mov
or
fidivl
neg
xchg
mov
adc
pop
push
fwait
xor
sub
inc
loop
jecxz
sbb
in
adc
insb
mov
pop
mov
mov
subb
mov
movsb
hlt
inc
push
xor
mov
inc
sbb
mov
leave
sarb
sub
iret
push
add
sub
xchg
pop
xchg
test
dec
and
leave
arpl
and
ds
ret
mov
mov
in
add
jl
fnstsw
sbb
mov
add
stc
jl
cld
flds
mov
rep
sarb
pop
sbb
adc
and
fmulp
jno
divb
pusha
imul
es
bound
and
xchg
mov
mov
sbb
icebp
xor
push
xor
add
or
repz
dec
add
test
addl
sbb
pop
xor
adc
imul
or
mov
repz
add
repnz
mov
scas
fcmovbe
sbbl
lods
mov
out
push
xchg
xchg
das
leave
xorl
sti
cmp
dec
inc
fdivs
push
mov
sahf
shrl
rorl
aas
iret
cs
call
enter
enter
call
lahf
int3
push
mov
repnz
stos
xchg
fdiv
jp
in
out
xchg
or
lds
add
aas
or
sbb
cmpsl
enter
jle
insb
jmp
push
outsl
mov
arpl
mov
jp
out
outsb
sbb
jle
adcb
je
sbb
add
mov
pop
dec
mov
cli
add
jno
repnz
xor
sub
adc
cmp
ss
lds
mov
or
push
movsb
mov
sbbl
aad
and
push
xchg
out
add
xorb
arpl
mov
andnps
leave
sar
repnz
xchg
xor
or
call
popf
pop
es
xchg
inc
or
ffreep
xchg
mov
inc
inc
cmp
in
test
mov
mov
mov
lds
fdivrl
ja
movsb
dec
ja
fcmovu
leave
mov
adcb
ja
xor
lret
call
aad
das
rorb
lock
je
jae
fstl
addr16
ret
sub
push
pushl
nop
pop
enter
xor
fisubs
in
sub
jl
ja
sub
fwait
aas
loope
jmp
cmp
add
mov
dec
sub
ljmp
js
js
out
mov
rcrl
loop
ret
lcall
cltd
mov
fs
mov
lock
test
pushf
scas
fcoms
and
xchg
mov
xchg
ja
xchg
fcoms
jo
cmpsb
ja
sbbb
popl
inc
and
xor
repz
sub
orl
pop
out
loope
outsb
shrb
add
das
std
dec
scas
int
cs
jb
add
cli
pusha
adc
push
cltd
xor
shr
fdiv
add
std
xchg
xor
daa
stos
pop
pusha
sbb
sbb
scas
adc
add
xchg
xor
mov
call
cs
bound
xor
ret
mov
mov
jge
fstl
jae
loope
dec
inc
shrl
mov
lret
call
test
daa
jmp
or
dec
stc
outsl
and
jecxz
lods
fstps
rol
jle
rcrl
sahf
sbb
shlb
mov
cmp
mov
pop
test
xchg
dec
push
lods
mov
in
leave
adc
cmpsb
dec
or
daa
sbb
rorl
sbb
push
jo
int
inc
lds
xchg
icebp
sub
mov
mov
iret
mov
ds
sahf
ds
cmp
int
int
daa
add
xchg
loop
inc
dec
ret
test
push
neg
mov
negb
push
add
cmp
sbb
dec
cmc
sub
mov
push
and
jo
test
mov
ds
lock
stos
pop
lret
mov
lea
cmp
rolb
sub
mov
cld
popf
hlt
mov
mov
xchg
int
or
out
push
sub
mov
add
popa
cmp
push
rcrl
daa
sarb
jae
add
rorb
push
dec
or
add
clc
push
mov
insb
daa
xlat
pop
mov
dec
jne
xlat
xor
cld
or
sub
or
dec
xorl
addr16
mov
cmpl
push
or
iret
imul
sahf
xchg
mov
imul
stc
mov
shrb
out
pop
fisttpl
lret
loop
and
jmp
mov
clc
out
push
aad
scas
jmp
lds
mov
mov
repz
es
dec
bound
aas
push
lahf
test
lcall
nop
ljmp
xchg
aam
movsl
mov
in
in
loop
das
aaa
ret
out
adc
mov
cmp
inc
mov
repz
faddl
dec
repz
pop
ret
repnz
cmpsl
dec
mov
aam
cmp
mov
out
jnp
ljmp
test
xor
xchg
mov
mov
nop
mov
push
mov
push
xor
or
mov
outsb
inc
test
mov
jecxz
dec
fiaddl
ret
pop
cmp
cmp
pop
cltd
fwait
popa
dec
mov
add
into
aad
add
repz
movhps
shlb
add
dec
dec
xchg
nop
arpl
mov
sub
mov
mov
push
ja
push
and
inc
cmp
sahf
or
mov
pop
xchg
sbb
es
leave
fwait
in
pop
sbb
dec
jp
pop
xchg
dec
and
shlb
sbb
xor
insb
call
lret
enter
add
les
or
popl
dec
iret
xchg
cmp
jg
jge
pop
les
insb
xor
data16
push
dec
daa
imul
push
decl
pop
pop
inc
rcl
sbb
jle
js
mov
std
pop
aas
pop
or
pop
dec
xchg
mov
jl
push
jl
jg
mov
mov
xchg
mov
out
cltd
push
pop
inc
jae
mov
outsl
pop
xchg
lods
rcrl
icebp
in
fistl
ss
pushf
dec
data16
incb
mov
xchg
pop
pop
mov
es
mov
sbb
sbb
pop
cmp
and
adcl
std
pop
inc
aad
scas
dec
out
add
push
mov
push
add
sbb
jno
add
addr16
shr
add
mov
popa
mov
jnp
or
mov
pop
pop
sbbb
and
xchg
pusha
add
inc
out
pop
pop
mov
push
mov
stc
scas
dec
push
movsl
pop
pop
leave
lods
cmp
push
sub
xchg
and
and
xchg
dec
sbb
xor
adc
mov
jecxz
push
shll
mov
daa
cwtl
xor
aas
sbb
aas
lret
or
popf
fldenv
les
les
xor
dec
dec
inc
mov
add
pop
and
lcall
add
mov
mov
andl
punpcklbw
repz
hlt
and
mov
xchg
iret
cwtl
mov
mov
push
sarl
inc
xchg
fisubl
es
repz
mov
dec
dec
adc
push
fcomip
xchg
iret
cmp
out
test
dec
lods
cmp
ret
cli
imul
stc
fsubrl
notb
and
scas
pop
inc
ret
pop
sub
mov
xchg
inc
push
pop
fstps
jp
fwait
jecxz
push
arpl
cli
push
in
lret
loopne
jno
hlt
xchg
inc
dec
les
es
subl
pop
jle
jno
inc
inc
mov
fmuls
pop
popa
add
jmp
int
daa
scas
xchg
hlt
mov
test
mov
or
sbb
test
and
rcr
add
xchg
cld
outsl
inc
fdivp
stos
insb
pop
lea
loopne
arpl
call
pusha
dec
inc
imul
xchg
pop
mov
mov
dec
jmp
inc
xchg
xchg
adc
push
push
xor
xchg
dec
dec
call
scas
mov
loopne
leave
cltd
cltd
pop
popl
lcall
insl
jae
pop
lcall
sub
or
xor
ljmp
xchg
cmc
pop
cmp
sbb
inc
sbb
push
icebp
movsl
add
enter
and
jno
and
dec
js
mov
jae
cmp
lock
cmp
roll
add
hlt
fisubl
mov
sbb
or
ljmp
lea
dec
mov
fcmovu
jmp
repnz
inc
mov
cmp
mov
pop
dec
repz
fisubl
stos
sub
loopne
xchg
lret
mov
rcll
fwait
in
aaa
mov
pop
test
xor
lcall
adcl
out
add
pop
insl
push
adc
sbb
and
jle
add
jnp
mov
rcrb
add
jb
fcomps
mov
inc
push
pop
adc
ja
mov
pop
imul
stos
inc
adc
sbb
movsb
jmp
and
stos
stc
mov
ret
test
stos
pop
mov
fwait
push
popa
push
add
mov
pusha
repnz
inc
xchg
mov
push
add
sub
push
jnp
sbb
fidivl
xor
jmp
xor
adcb
mov
cmovg
push
mov
xor
pop
sub
and
lods
jmp
mulb
add
aam
cld
sub
dec
es
inc
mov
mov
loop
cli
lret
mov
push
loopne
test
or
sub
push
mov
mov
cmp
lds
mov
sbb
sbb
pop
cmc
rcll
and
add
in
inc
imul
pop
cmp
xlat
add
jecxz
dec
jmp
inc
ret
mov
mov
jg
iret
push
nop
mov
rcl
mov
es
sarl
mov
pop
jno
pusha
rol
movsb
jne
cmpsl
add
xor
cmp
push
xchg
cmpsl
pop
movsb
jb
lock
xchg
loope
xchg
sub
bound
insb
and
xchg
dec
push
jg
adc
sbb
sub
cmpsb
adc
lahf
sbbb
mov
xchg
in
mov
push
in
push
rolb
mov
imul
add
mov
dec
test
pop
iret
adc
insb
cmp
mov
or
mov
push
mov
es
sub
and
dec
adc
jbe
pop
mov
add
add
bound
jo
jne
or
push
loopne
add
cltd
xlat
loop
cs
mov
mov
cld
mov
sti
cmp
fdivrl
rep
inc
movsb
jl
dec
mov
mov
or
inc
or
sti
test
xchg
and
addr16
daa
jbe
xchg
loop
incb
mov
or
or
popa
xchg
mov
sbb
pop
push
mov
mov
fsubrl
ds
ror
js
sbb
xor
enter
cmp
loop
xor
cltd
imul
rolb
adcb
dec
aas
mov
xchg
fsubr
mov
in
sarl
call
xchg
cmpsl
loope
sti
in
push
push
fsubr
test
xor
xor
outsb
add
and
enter
push
xor
out
ss
mov
lock
dec
dec
insb
mov
mov
pop
and
imul
inc
add
adc
pop
imul
cmp
push
ret
inc
adc
pop
or
mov
orl
cmp
xlat
nop
cltd
out
sub
int3
add
stc
push
push
push
lahf
gs
inc
sbb
fsub
aad
cmpsb
pop
pushf
mov
push
or
pop
mov
dec
cli
mov
pop
cmp
pop
lods
jns
shlb
mov
inc
sbb
lds
cmc
test
cmp
bound
and
idivl
cli
dec
cmp
adc
sbb
jae
push
das
std
aad
sbb
and
mov
fs
or
inc
sub
jle
stos
fs
test
andl
fldenv
xor
dec
cmp
add
icebp
rclb
lretw
and
aaa
test
add
jbe
mov
out
inc
enter
in
pop
ret
js
ljmp
push
movsl
in
lods
add
cmp
mov
add
loop
shl
mov
sub
or
mov
cmp
mov
add
hlt
push
push
mov
and
and
cltd
rorl
sbb
dec
lret
xchg
dec
into
cmp
pushf
movsl
xchg
insb
imul
lods
inc
loopne
inc
aas
out
lock
push
lock
add
sbb
cld
stos
shll
cmpsl
das
gs
jnp
adc
push
or
adc
mov
inc
add
mov
dec
mov
inc
inc
cld
clc
test
pusha
bound
sbb
imul
jae
sub
xor
push
mov
or
mov
add
dec
add
stc
and
jp
call
lret
push
lock
mov
add
xchg
and
bt
movsl
insb
stos
mov
ret
mov
add
push
das
mov
jnp
or
loop
hlt
push
push
mov
outsl
mov
xchg
and
mov
lods
call
mov
subl
mov
ljmp
sub
or
into
jg
dec
dec
shlb
cmpsb
adc
or
sbb
aas
int3
cmp
inc
sbb
push
mov
sub
mov
lahf
insb
lret
pop
pop
mov
popf
iret
in
ret
lret
test
add
mov
fcoms
je
pop
cmp
inc
hlt
test
cmp
pop
pushf
inc
xchg
push
shrb
mov
inc
and
and
outsb
inc
pop
adc
xchg
xlat
adc
dec
sar
inc
rorb
fisubl
nop
push
jl
cmp
adcl
mov
push
mov
lcall
cmp
negb
push
inc
sbbb
jle
pusha
jnp
pushf
mov
jp
and
or
fs
stc
in
mov
daa
dec
cmp
cmpsb
xchg
stc
sbb
cwtl
or
js
addr16
out
call
and
out
movsl
pop
mov
or
mov
ds
mull
push
lods
mov
cli
inc
pop
cmp
pop
sbb
push
inc
das
cmp
sbb
cmp
and
mov
mov
jp
mov
mov
sbb
mov
adc
push
movsb
aaa
adc
push
inc
xor
jmp
sub
mov
pop
ss
sub
add
cmpl
lcall
dec
mov
aam
sahf
xchg
push
outsb
fnstcw
stos
jmp
xchg
mov
jbe
loopne
shr
or
jne
pop
adc
movsb
sub
incl
test
mov
adc
adc
cmpb
in
pop
add
adc
aas
mov
dec
sahf
call
pushf
iret
adc
aad
jge
and
inc
cmc
enter
repnz
test
movsb
lahf
fsub
xchg
add
or
sahf
addr16
movsl
mov
imul
xor
mov
in
adc
je
lret
rorl
popf
mov
mov
sbb
ret
push
mov
push
adc
xor
adc
sbb
hlt
int
inc
pop
jae
mov
adcb
sar
pushf
mov
push
dec
lods
push
popf
dec
rorb
xor
cld
dec
rcl
ret
xor
jmp
out
sub
or
das
sbb
daa
stos
mov
jmp
inc
inc
aas
ret
cmp
pop
into
in
iret
xchg
stc
dec
mov
mov
or
add
jmp
xchg
arpl
sub
lret
out
lock
xchg
push
xchg
mov
xchg
insl
daa
fisubs
stos
inc
xorl
mov
out
lea
sub
mov
push
and
jns
ficomps
or
in
xchg
push
into
cwtl
in
or
out
and
pop
xchg
aaa
jg
mov
dec
sub
cmp
jge
lcall
divl
push
jbe
pop
fwait
test
add
pop
inc
out
mov
dec
ss
pop
andb
inc
fidivrs
adc
ja
loope
xchg
loop
movsl
ret
or
ffreep
mov
pop
xchg
jle
mov
aaa
add
dec
sub
jmp
and
fldt
loope
js
ljmp
mov
xor
push
fldt
das
push
inc
movsl
jo
jno
leave
loope
fwait
push
inc
push
mov
imul
cmp
push
lret
mov
stc
and
mov
loop
mov
xlat
pop
mov
jle
ret
add
adc
sub
jle
add
pop
add
loopne
push
out
pop
rep
and
sbb
int3
dec
out
jp
xlat
pop
data16
scas
lret
pop
pop
mov
ret
xchg
es
in
push
lret
mov
mov
jmp
int3
shll
mov
scas
outsb
in
sub
cltd
sahf
dec
mov
fdivrl
mov
jae
pop
cmp
sbb
sahf
shlb
aam
imul
popa
outsl
repz
pop
mov
adc
mov
mov
push
daa
in
cmp
jecxz
insb
loopne
sbb
paddd
mov
fidivl
out
mov
add
dec
nop
loopne
idiv
push
mov
xchg
mov
pop
ret
push
dec
jl
aaa
stos
mov
and
pusha
enter
jne
stos
clc
test
inc
movsl
sti
dec
pop
or
inc
rcll
inc
gs
inc
fistl
and
or
xchg
test
add
xchg
fstpl
insl
add
fdivrl
add
add
sahf
pop
js
cmpsb
mov
popl
popf
cmpsl
movsl
cmp
loopne
out
add
testb
push
adc
imul
aam
cmp
sbb
nop
mov
lcall
clc
mul
mov
or
out
ljmp
xor
addr16
fidivrl
add
sub
shll
mov
cmp
aad
xorb
mov
mov
sbb
pcmpeqb
and
and
jbe
rcl
push
mov
mov
test
bswap
add
repnz
outsb
pushf
jbe
mov
rorb
mov
dec
jge
fistps
rcll
jne
cld
popa
fnstcw
adc
cmp
mov
dec
cmpsb
int3
rcrb
sbbl
stc
popf
lods
pop
cmpsl
imul
rcl
in
cmp
lods
jp
fwait
inc
push
out
mov
test
mov
mov
sbb
adc
lcall
std
out
xor
xchg
xor
or
fnstsw
pop
mov
sets
cmp
dec
mov
push
scas
sti
mov
ds
out
test
nop
adc
in
jno
jb
push
cvtdq2ps
push
add
mov
mov
pop
lds
jmp
incl
inc
jp
js
sarb
pop
pop
cltd
fists
shlb
nop
pushf
in
cmpsl
jae
andl
push
push
sbb
lret
and
insb
jnp,pn
xchg
fcos
mov
int
push
test
in
push
in
leave
lahf
pop
lcall
movsb
sbb
and
xor
pop
popf
cmp
dec
daa
push
inc
iret
inc
pusha
jp
es
push
lret
push
fnstsw
ja
xor
add
cmpsl
adc
and
sub
ja
stos
push
and
jecxz
aaa
enter
adc
xchg
int3
xchg
inc
into
inc
shrb
fstl
inc
stos
add
jp
cmpsl
notb
fadds
pop
repnz
fldl
or
aaa
jmp
mov
push
cmpsl
movsb
lds
adcl
or
pop
adc
cmpsl
xlat
or
into
dec
cmpsl
mov
rcl
sbb
xor
mov
xor
aas
stos
jb
lea
leave
rcr
outsb
test
pop
in
arpl
sbb
or
out
fucomp
ja
leave
scas
push
imul
mov
xchg
lock
jno
imul
fstpt
lods
inc
rcrb
ret
adc
cmp
mov
insb
mov
xchg
test
lahf
inc
mov
dec
adc
idivb
inc
roll
pop
lahf
enter
clc
prefetch
add
mov
mov
insb
add
sub
scas
add
stc
or
rorl
cmp
aad
lods
incl
sub
dec
push
loopne
pop
mov
fisttpll
dec
and
inc
fwait
mov
outsl
inc
andl
lods
jno
or
adc
sbb
int3
lret
mov
mov
pop
jecxz
cli
sbb
in
arpl
and
and
insl
sub
sbb
xor
ljmp
int
mov
jmp
popf
jbe
mov
jnp
mov
adc
ficomps
pusha
ljmp
ljmp
hlt
push
inc
sahf
les
or
add
add
mov
sub
mov
imul
bound
dec
loopne
outsb
in
sbb
insb
sbb
aaa
xlat
test
dec
mov
inc
test
cmp
aam
pop
cmpsl
mov
stc
push
xchg
lret
sti
and
adc
pop
push
or
push
gs
dec
imul
fs
mov
mov
dec
call
dec
fstps
push
in
enter
cltd
ds
jle
inc
push
mov
inc
push
sahf
xchg
imul
addb
lea
mov
repnz
test
xor
xor
push
sbb
jp
rcll
cmp
mov
pop
add
push
jns
loope
jo
dec
inc
xchg
push
mov
rclb
sbb
sbb
sahf
fidivl
jecxz
scas
and
and
mov
adc
mov
rcrb
sbb
inc
fcmovnb
test
mov
test
add
xor
mov
jns
loopne
popl
stc
out
cwtl
xlat
inc
cltd
inc
popf
xchg
rcrb
aaa
mov
loop
mov
je
js
shrl
mov
clc
stos
aas
leave
pop
loop
pop
xchg
push
enter
aas
jo
cltd
xchg
int
notl
test
es
dec
inc
rclb
arpl
inc
cs
pop
test
arpl
inc
bound
add
push
sub
push
mov
push
xlat
sub
xchg
mov
xor
filds
loop
inc
jne
js
mov
xor
loop
pop
nop
pop
xchg
push
negl
jno
clc
cmpb
dec
sub
popf
shll
ljmp
mov
incl
cmc
mov
shll
mov
lds
pop
push
xlat
xchg
add
sti
adc
int
repnz
out
subb
loopne
cltd
ret
dec
cld
in
loop
and
mov
ljmp
pop
insb
inc
ljmp
or
imul
data16
xchg
aas
xlat
lea
dec
jne
jno
mov
or
push
jbe
fdivs
add
out
sbb
in
lret
mov
fidivs
mov
out
inc
push
mov
mov
xor
lret
sti
adc
dec
test
fs
fdiv
popf
mov
leave
shlb
cwtl
loope
test
aad
xchg
addr16
subb
loope
test
je
add
sub
cwtl
adc
mov
lods
jg
das
stos
sti
dec
mov
cmc
mov
hlt
leave
mov
push
pop
lea
idivb
lods
adc
and
popf
ficomps
mov
pop
loop
out
pop
je
xor
outsb
repz
xchg
sub
loopne
pop
xor
jae
sub
insb
scas
movsb
add
repz
outsb
add
pop
push
test
mov
mov
cmp
sbb
lods
andl
xchg
sbb
orl
inc
fdivrl
outsb
test
sub
ret
add
or
mov
lods
jnp
xor
fidivrs
mov
cs
es
ret
insl
ja
jne
sbb
and
mov
or
jb
scas
rep
ror
in
aas
cmp
inc
lret
jne
inc
ret
mov
test
inc
jns,pt
adcl
push
out
cs
pop
negl
jle
in
cwtl
dec
outsb
inc
add
lds
dec
dec
into
in
ret
adcl
cs
inc
mov
adcl
jns
cmp
mov
pop
pusha
mov
fnsetpm(287
sbb
sbb
xchg
aas
and
loopne
and
mov
jo
inc
fucomp
repnz
push
or
jb
push
sub
mov
pop
fcompl
outsl
lea
out
push
in
sub
push
clc
shlb
ret
push
std
sub
push
jns
aad
lret
fcompl
mov
mov
mov
movl
sahf
pop
icebp
sub
jbe
ss
stos
popf
stos
xchg
mov
jne
inc
cwtl
dec
inc
dec
jp
pop
and
add
shll
mov
push
jne
adc
push
push
je
clc
sahf
cs
insb
stos
jecxz
and
aad
pop
outsb
movsl
dec
add
inc
inc
sbb
pop
ud0
jg
xchg
and
jmp
inc
and
into
jle
addr16
dec
subl
mov
int
ficoms
cmc
jp
jne
insb
movsl
in
loopne
loop
test
cmp
shll
jo
addr16
adc
or
in
dec
pop
inc
dec
or
or
mov
mov
xchg
lods
insb
outsl
push
rclb
and
and
pop
pop
mov
in
cmp
jne
mov
mov
lods
fs
aam
or
push
imul
add
dec
mov
fistps
popf
xchg
push
sbb
push
xor
mov
stos
inc
fidivs
test
lds
push
xchg
int
xor
loop
or
push
es
loop
shlb
test
jo
test
popa
xlat
lods
out
jg
mov
arpl
xor
lret
sub
push
adc
icebp
mov
cld
in
mov
fisubs
mov
movsl
inc
xchg
push
mov
cmp
pop
add
jae
or
divl
stc
loope
and
sub
popa
jle
jns
out
pop
test
add
int
daa
pop
mov
lock
add
sbb
in
dec
push
arpl
scas
repz
push
in
mov
lcall
fmull
fsubl
pop
pop
loope
dec
xchg
fsts
aam
aam
mov
arpl
fld
in
notb
or
insb
xchg
lock
cs
xchg
jmp
sbb
cli
fimuls
inc
mov
jg
xorb
repz
and
xchg
aas
xchg
jle
or
test
inc
nop
mov
bound
je
and
mov
or
jbe
leave
jbe
mov
or
in
js
pushf
ljmp
mov
jbe
fisttpl
ss
push
orb
dec
sbb
xchg
xchg
sub
cmp
scas
xlat
mov
xor
in
xrelease
add
test
mov
popa
mov
mov
aas
je
dec
dec
testl
adc
negb
push
push
frstor
mov
sbb
sub
pop
inc
sbb
lock
mov
adc
push
divl
xchg
pop
mov
rol
xor
push
add
inc
shlb
inc
jp
xchg
jo
in
jns
dec
sahf
ficompl
jne
rorl
adc
push
fcoml
push
es
inc
sysret
ret
sbb
test
std
add
jno
out
sub
rclb
movsl
roll
loopne
cmp
sub
xchg
leave
cmpsb
and
pop
mov
sbb
lea
pushf
outsb
aaa
adcb
in
ljmp
shrl
int
mov
popf
out
jnp
mov
jl
jno
push
icebp
movsb
jl
xor
pop
test
push
inc
add
push
in
jne
push
imul
sub
xchg
mov
pop
jb
clc
hlt
mov
call
test
or
push
jg
aas
call
push
scas
pop
fs
mov
sar
stos
sbb
addps
and
pop
or
out
lds
dec
adc
enter
jmp
sarb
dec
cmc
push
shrb
jbe
das
xor
popa
and
xchg
mov
xchg
fdivl
clc
and
push
addb
lods
iret
stc
mov
push
adc
out
lock
cmpsb
out
add
add
inc
sbbb
lahf
test
dec
rclb
cwtl
mov
push
in
lock
jbe
cwtl
ret
push
stc
int3
lods
fnstsw
lds
or
test
cli
out
pop
mov
lds
ja
mov
andb
ret
cld
sbb
sbb
jp
shlb
in
stos
gs
jle
pushf
je
divl
inc
cmp
out
dec
les
xchg
xchg
push
and
lds
out
mov
lret
cmpl
gs
mov
pusha
sbb
cmp
imul
mov
repz
sbb
and
sahf
adc
dec
inc
mov
and
xor
es
lahf
mov
jnp
sbb
mov
xchg
pop
push
pop
cmc
cmpsb
mov
sbb
mov
mov
ror
sbb
cmpb
popf
dec
test
cmpsl
fisttpl
mov
shr
stos
xchg
lods
clc
push
add
add
mov
inc
xchg
rorb
or
cld
aaa
mov
xchg
fstpl
dec
dec
sbb
into
aas
pop
inc
adc
jl
bound
pop
lahf
mov
jb
lahf
outsl
out
add
add
das
popf
rorb
lods
jno
es
arpl
mov
cmp
in
dec
test
jo
push
sub
pop
call
mov
xchg
xchg
jo
data16
data16
jns
jle
test
dec
sbb
pop
shrb
xor
add
mov
inc
mov
out
mov
icebp
sbb
repz
fistpll
and
test
shll
loop
lcall
jnp
es
insl
cs
lcall
adc
inc
pop
xorb
mov
sahf
arpl
xchg
pop
mov
adc
inc
inc
ss
in
push
jns
lds
push
or
mov
stc
add
clc
mov
or
std
cmp
mov
test
fisubrl
inc
sbb
mov
push
xor
fucom
mov
call
jbe
int
jmp
xchg
cmp
xor
adc
icebp
cmp
insl
and
bound
pop
jbe
cmp
and
pop
xor
mov
idivb
adc
cli
out
fnsave
ss
bound
fsubrs
inc
lock
dec
fs
xchg
jle
movsl
seto
gs
ljmp
push
push
add
fwait
mov
adc
cmpsb
or
test
shrl
jb
lret
xchg
lods
fcomi
push
and
adcl
movsb
movsl
sub
faddp
in
cmpsl
out
jmp
aaa
mov
and
cli
hlt
test
aas
cmp
cmp
inc
sbb
add
add
xor
cld
mov
jmp
dec
cmpsl
sbb
pop
mov
lahf
lret
mov
sbb
std
data16
outsl
pop
pop
dec
aam
into
pop
jae
sbb
adc
dec
jo
push
dec
ret
nop
lods
into
mov
ret
pushf
dec
mov
leave
pusha
sbb
arpl
pop
inc
xchg
rdpmc
movsl
js
add
xor
stos
adc
or
test
rcrb
or
pop
sub
dec
out
daa
xor
icebp
add
sub
cli
sbb
xor
inc
and
ljmp
test
aam
cmc
loope
jl
shrb
lods
ret
rorl
jl
aam
imul
jecxz
jge
sub
fcmovb
aaa
fnstenv
xor
mov
mov
pushf
mov
cmpsb
jno
cmp
dec
jnp
push
sub
xor
add
and
insl
xor
inc
add
insb
push
movsl
inc
jo
cld
mov
scas
xchg
roll
dec
xor
push
inc
daa
mov
stos
das
and
popf
jp
cmp
inc
mov
sub
sub
fsqrt
icebp
adc
imul
shll
ljmp
fcomi
enter
stos
jge
popf
pop
cli
cmp
mov
push
lods
xchg
pop
add
je
out
int
roll
add
ret
add
mov
ljmp
jp
jmp
cltd
dec
or
mov
xor
sub
xchg
enter
pop
add
adc
jmp
andb
push
fisttpll
maskmovq
pop
aad
pop
pop
mov
jl
adc
hlt
sti
xchg
ljmp
cmp
adc
push
test
cltd
xor
rcl
lahf
add
push
fstps
pop
mov
pop
cmp
rorl
push
imul
push
out
and
and
add
cmp
outsb
adc
outsb
inc
add
or
or
or
addr16
cld
sbb
push
dec
cmpsl
lret
add
stos
aad
ja
in
sbb
movsb
or
jno
and
lret
sub
fwait
xchg
adc
inc
mov
and
cmpb
mov
jecxz
add
sub
notl
xor
xor
es
push
pop
cwtl
arpl
hlt
jno
out
xchg
cltd
push
pushf
mov
ret
dec
out
dec
call
push
scas
pop
cmp
lods
mov
lock
insb
pop
les
xchg
fstps
sahf
cmc
stos
outsl
enter
addr16
xchg
movsb
xchg
mov
and
pushw
dec
adc
repnz
sbb
lret
fld
pop
dec
dec
pop
imul
sbb
add
mov
mov
std
push
xchg
scas
cli
lods
and
rcrl
orl
fs
hlt
xor
jmp
mov
or
lock
and
gs
aam
or
push
jp
out
cld
out
adcb
lcall
pop
jecxz
jge
xchg
scas
mov
cltd
xor
and
outsb
jp
je
cli
stc
pop
cmp
cmp
adc
xchg
loope
fcoml
ss
inc
mov
push
daa
mov
enter
push
add
das
roll
sub
fistpl
call
push
int
adc
rorb
mov
popf
scas
imul
cli
cs
dec
je
leave
and
icebp
sub
push
cmc
pop
pop
inc
mov
add
testl
jecxz
jbe
xor
and
dec
test
xchg
mov
ljmp
cmp
xor
scas
push
std
or
dec
push
aaa
loope
rorb
and
cli
sbb
pushf
mov
sti
xchg
dec
pop
js
jg
cltd
xor
jbe
mov
aam
sarb
and
and
sub
orl
jg
fwait
mov
jnp
jp
xchg
idivl
add
and
cmp
and
fs
and
jae
testl
es
or
push
aam
push
pushf
pop
rclb
pop
sbb
into
inc
daa
insb
cld
jne
lret
shll
jle
or
or
mov
cmp
xchg
push
ret
scas
out
pop
mov
std
fs
idivl
into
dec
int3
or
int3
push
je
outsl
xchg
sub
sub
pop
into
cmc
cmpsb
shll
ja
push
mov
shlb
ret
cmp
leave
das
in
xchg
sub
jp
hlt
imul
jnp
shll
cmp
inc
xchg
add
sub
fimuls
sbb
push
mov
add
mov
mov
xor
cmp
fidivrl
sub
mov
xor
cmc
dec
sub
mov
inc
jbe
add
aaa
xor
fadds
push
jae
fisttpll
mov
mov
mov
jae
and
stc
js
add
jbe
xor
or
mov
andl
ret
rcr
jg
in
bound
mov
rcrb
xchg
pop
rolb
out
add
leave
popa
orb
sti
push
les
daa
cmpsl
mov
popf
cmpsb
mov
test
repnz
or
jns
iret
mov
xor
pusha
mov
sbb
push
add
aam
fstpl
in
jg
inc
xchg
add
cmpl
mov
outsb
lods
sub
outsb
push
cld
and
repnz
imul
popf
nop
add
in
call
mov
test
push
inc
mov
lods
push
cmc
fistl
inc
mov
and
pop
push
add
stos
sub
or
cmp
sub
outsl
pop
call
adc
sub
test
outsl
mov
lods
jns
or
xor
add
movsb
cld
cmp
je
lahf
add
pop
popf
adc
fwait
std
leave
xchg
jne
imul
mov
jbe,pt
rcrb
push
xchg
xchg
xorb
aad
out
sbb
in
mov
mov
push
inc
sbb
inc
adc
insl
cltd
stos
lock
xor
cwtl
lea
inc
cmpsl
stos
cmpsb
add
sbb
stc
imul
and
mov
adc
int
mov
rcll
add
mov
stc
sbb
out
mov
cmp
daa
pop
pusha
lahf
pop
std
push
bound
jbe
loop
popf
addr16
dec
add
jge
idivl
jle
pop
rorl
sbb
jmp
and
lret
lahf
clc
inc
aas
ja
testb
dec
dec
adc
sbb
mov
and
rcrb
mov
daa
das
into
mov
aaa
lret
pop
pop
pop
insb
repz
in
mov
push
sbb
cmp
adc
pop
aaa
ja
bound
mov
jbe
mov
inc
mov
loope
out
or
out
xlat
dec
push
sub
stos
int3
fwait
add
imul
shrl
and
enter
inc
test
xor
sub
shrb
pop
outsl
flds
xchg
mov
ljmp
mov
test
mov
pcmpgtd
pop
sahf
dec
xlat
or
mov
xlat
cmp
sti
mov
adc
inc
xchg
loop
push
mov
dec
lret
cmpsl
dec
gs
in
mov
sub
xor
lret
jne
es
repz
lock
dec
mov
xchg
int
fldl
xchg
iret
add
jae
push
jl
out
mov
pop
cmc
movsb
js
fcompl
je
es
shll
fdivs
sub
xor
roll
pop
add
mov
inc
scas
xchg
aas
sbb
adc
test
push
outsl
adc
test
jno
in
lock
sbb
jmp
inc
subl
inc
mov
and
icebp
push
xor
pop
xor
sbb
jns
mov
ja
xchg
popa
dec
stos
jns
adc
call
lds
cmp
push
into
lods
jo
pop
push
dec
lahf
pop
or
or
loop
jg
daa
and
cmp
jp
cmp
xor
jmp
decl
int3
fdivs
dec
add
in
inc
cmp
arpl
int
adc
outsb
outsl
or
or
push
sub
cmp
gs
sti
sub
mov
sarb
adc
sub
pusha
cmpsb
imul
ficompl
sbb
sub
lock
mov
push
jge
pmulhuw
inc
adc
mov
test
cmp
lea
mov
stos
cs
scas
hlt
mov
pop
xor
mov
icebp
pop
out
cmp
xor
ss
out
inc
pop
or
ret
in
repnz
push
jl
pop
mov
jo
imul
ret
xchg
add
jns
rolb
sub
sbb
pop
es
xor
sahf
dec
cmpsb
repnz
jae
dec
int
add
lods
mov
lods
add
lret
push
xor
das
push
out
mov
pop
outsb
out
cwtl
inc
push
or
test
dec
sbb
inc
jge
adc
push
mov
push
xor
gs
adc
sbb
and
out
xchg
xor
fldcw
sti
aas
loop
add
mov
mov
dec
cmp
mov
sarb
ljmp
pop
repnz
mov
nop
sub
or
sub
scas
cli
pop
test
push
addl
enter
or
mov
dec
inc
add
into
xor
mov
stos
mov
gs
popf
push
cmp
loopne
push
mov
sbb
adc
mov
push
imul
dec
mov
enter
fs
dec
hlt
lock
adcl
xor
fs
mov
push
sub
push
adc
mov
shlb
cmp
movsl
push
mov
ss
xchg
out
shlb
test
in
sarl
dec
sahf
testb
sbb
fs
pushl
daa
shlb
dec
out
fnstsw
mov
aas
sti
xchg
imull
pop
sbb
arpl
ljmp
mov
hlt
mov
cmp
fsubs
jae
mov
fcomp
and
lcall
adc
fcmovnbe
dec
xor
sub
cld
lea
jle
cmp
ret
ret
sbb
pop
aam
jmp
insl
loope
fwait
mov
jl
mov
in
popa
inc
push
jl
ja
sti
xlat
mov
mov
lods
nop
rcll
daa
jns
mov
outsb
push
or
jmp
jno
jne
out
testl
ds
dec
imul
mov
mov
jbe
lcall
popa
xchg
pop
push
mov
mov
xor
mov
out
stc
fldt
fisubrs
inc
repz
movb
mov
lret
ljmp
pop
ret
mov
sbb
pushf
je
lods
dec
repnz
push
jo
mov
cltd
mov
or
sti
xchg
fidivl
mov
stos
pop
ds
vandnpd
sub
paddd
sbb
xchg
mov
adcl
mov
and
xor
xchg
jae
test
and
movl
cwtl
jg
xchg
fimull
outsb
leave
push
bound
popa
mov
bnd
xchg
mov
xor
gs
add
push
divl
out
sbb
xor
imul
inc
sahf
outsb
dec
cltd
pop
hlt
and
add
repz
iret
inc
mov
or
into
aad
mov
in
mov
inc
add
jb
mov
out
out
sub
repz
jb
cmpsb
jmp
jmp
jmp
lods
sub
cmp
stos
pop
pop
nop
inc
clc
push
aad
fildl
jmp
xchg
or
xchg
fiaddl
mov
mov
sbbb
cltd
shl
es
aas
ficomps
repz
xor
lcall
mov
mov
xchg
xor
pushf
adc
cmp
mov
loop
xchg
adc
jmp
imul
fldenv
push
loope
shll
inc
mov
inc
out
add
cmp
push
pop
shll
cmp
stos
xor
repz
dec
adc
push
lahf
in
daa
inc
jb
scas
in
sub
movsl
jns
mov
mov
inc
add
push
jne
lods
jbe
xchg
or
cmovbe
dec
outsl
adc
shlb
fdivl
test
je
xchg
sub
stc
jle
popa
xchg
into
dec
cmp
popf
xlat
in
outsl
xor
adc
add
push
adc
push
jb
into
jecxz
jge
js
jge
clc
stc
xbegin
dec
jecxz
rcll
dec
in
mov
inc
jle
loop
jmp
push
push
loopne
and
ret
jbe
mov
movsb
into
dec
add
aaa
popa
call
js
adc
adc
out
mov
sub
test
ret
outsb
lret
jle
add
test
cli
push
sub
imul
dec
push
sbb
dec
jbe
aad
pop
les
mov
cld
loope
adc
cmp
push
fwait
pop
jo
and
ds
movsb
adc
lea
push
loope
cmpsl
sub
xchg
push
cmp
leave
pop
arpl
or
sar
lret
and
pop
stos
push
adc
mov
push
add
push
xchg
popa
mov
pop
and
sti
incl
popa
xchg
add
dec
push
push
dec
sub
jmp
jno
xor
cmp
xchg
mov
int
add
iret
sub
push
cltd
inc
dec
insl
shrl
cmp
xchg
xor
mov
stos
orl
mov
jge
sub
inc
pop
cmpsl
sub
nop
jbe
scas
aaa
mov
sub
cmp
mov
mov
or
aas
push
and
push
push
in
call
jo
pop
pop
call
add
push
sbb
lret
clc
sarb
xor
insb
add
ret
pop
dec
dec
mov
xor
push
or
int3
pusha
push
ror
xor
into
das
mull
and
push
aam
inc
xlat
out
add
cld
push
jge
xlat
pop
xor
sbb
cmp
xchg
sar
lods
lcall
mov
add
stos
inc
cmpsl
mov
cltd
mov
les
xor
push
dec
unpcklps
ljmp
orl
movsb
fmull
xor
xchg
jmp
icebp
mov
addr16
mov
mov
cs
sti
lea
stos
pop
stos
stos
negl
add
and
ljmp
jmp
and
test
add
or
add
pop
and
sti
jg
outsb
add
and
pop
fcom
xor
rorl
pop
mov
mov
ds
mov
adc
mov
loopne
push
pop
bound
lea
sub
gs
scas
pop
aam
clc
xlat
jge
cmp
cwtl
cmp
test
sbb
ret
imul
in
data16
mov
add
mov
pop
fsts
mov
jp
inc
pusha
loopne
adc
inc
mov
in
repz
mov
mov
lea
imul
xchg
add
xchg
out
popa
popa
loop
mov
outsl
sti
adc
mov
je
aad
mov
inc
sub
dec
xchg
and
mov
enter
test
pop
in
xor
ret
pop
xor
in
push
lods
sbb
inc
arpl
lret
push
adc
jecxz
stos
fs
cld
jns
xchg
pop
ret
mov
xchg
mov
outsb
mov
int3
or
sub
jmp
xor
sarl
cmpsl
and
push
scas
adc
int3
roll
fnstsw
loop
rol
into
enter
ss
imul
out
pushf
mov
sub
xchg
or
dec
dec
jno
mov
and
xchg
pusha
hlt
jg
repz
sbbl
inc
fdivl
or
test
cltd
repnz
jl
leave
into
frstor
pop
popf
mov
fidivl
ljmp
out
pushf
mov
das
adc
out
hlt
int3
aaa
lcall
cmc
jge
jno
pop
les
icebp
pop
lret
add
inc
shrl
in
fstpl
jb
sub
sub
sbb
test
mov
dec
sub
or
ja
ffree
push
sahf
loop
and
jge
inc
std
sbb
outsb
ljmp
in
into
loope
into
mov
push
lock
mov
xchg
lock
inc
fbstp
cltd
ds
imul
cmp
add
jmp
popf
jmp
cmp
dec
mov
aas
iret
add
les
or
or
mov
or
xchg
add
das
leave
or
aad
repnz
pop
jle
mov
mov
adc
ljmp
inc
and
add
lahf
and
orb
out
or
push
cld
push
dec
inc
std
ja
orb
add
mov
jmp
mov
popf
mov
jge
ljmp
rcr
add
loope
mov
ja
arpl
jecxz
xchg
adc
out
ret
ljmp
ss
out
fistps
outsb
push
loop
lcall
in
das
push
xchg
iret
mov
cmpsl
jmp
jmp
repnz
ljmp
mov
push
cmp
mov
clc
inc
mov
dec
jmp
cli
call
xchg
call
add
xchg
enter
daa
sti
xor
jp
push
or
sahf
decl
icebp
pop
fistl
adc
scas
gs
jge
adc
push
je
fidivrl
mov
push
test
xchg
insl
test
cmpsl
repz
xlat
mov
mov
jns
xor
repz
adc
jae
ljmp
sub
ret
pop
pop
movsb
pop
jne
lods
xchg
add
icebp
cltd
stc
or
adc
jo
xchg
pop
mov
and
lret
cmp
cmp
sarl
sbb
jbe
add
push
jmp
mov
mov
rcl
and
fmull
ret
jp
rcl
inc
and
inc
mov
es
sbb
rolb
push
aad
popf
cli
lahf
leave
insb
ret
imul
mov
fwait
cmc
stc
andb
addr16
push
add
inc
addl
mov
addr16
jg
add
imul
lret
sbb
in
and
push
sbb
mov
mov
add
inc
cmp
enter
sbb
in
pushf
mov
pop
pop
mov
inc
cmp
mov
push
loop
pop
gs
lods
dec
or
inc
pop
sarl
gs
mov
mov
pop
pop
push
sub
xchg
adc
inc
imul
push
inc
push
in
sub
add
add
xor
adc
xor
cmpsl
sub
sbb
pop
imul
sahf
je
test
int
icebp
dec
insb
add
aam
push
lock
fistps
cmp
pop
mov
sahf
pop
in
xchg
push
test
adc
cmp
jne
icebp
test
mov
fistps
mov
std
mov
in
pop
jecxz
adcl
mov
stc
add
pusha
icebp
pop
cmp
or
ds
mov
push
mov
rcrl
daa
mov
clc
sar
mov
xor
insb
xor
push
xchg
add
xchg
shlb
add
push
xchg
jge
into
sub
andb
xor
call
rorl
cli
lds
mov
mov
mov
add
ds
sub
test
in
adc
jecxz
rol
es
rcr
outsb
rorl
jecxz
pushf
inc
mov
xchg
inc
sub
mov
jno
icebp
in
pushf
loopne
add
push
je
mov
xchg
sbb
in
add
ljmp
daa
pop
call
pushf
mov
push
loope
sub
cltd
repz
adc
push
insl
mov
and
pop
cmpsl
enter
aam
shlb
ds
jb
jp
mov
dec
xchg
xchg
pop
mov
pop
sub
add
shll
xchg
sar
fsubrp
dec
ret
hlt
dec
into
dec
dec
xchg
jnp
ja
aas
loopne
fs
adc
outsl
pop
jg
loope
push
sub
in
test
sub
shrl
sbb
loope
out
lret
mov
lretw
mov
adc
and
out
call
cli
mov
sub
add
push
dec
scas
push
cmpsb
sbb
scas
mov
mov
mov
pop
push
xchg
inc
cs
and
jmp
pop
testl
or
inc
xchg
mov
mov
in
add
leave
aad
push
xor
std
mov
ret
and
sbb
js
cmp
subl
dec
ljmp
cmp
xor
adc
lods
adc
and
jmp
dec
jb
lret
or
mov
cmp
loopne
repnz
nop
stos
fistpl
daa
gs
int
adc
sub
test
test
popl
bound
popa
lcall
or
imul
or
ret
dec
or
cmp
dec
push
cmp
mov
adcb
jno
and
adc
lods
lcall
adc
or
out
divl
xchg
or
sub
sbb
cmc
mov
xor
negb
sahf
popf
sti
and
xor
lods
add
jle
lds
cli
mov
int
jne
jecxz
push
call
pop
xchg
nop
xchg
or
iret
sub
sub
andb
clc
mov
sbb
lcall
dec
dec
aaa
test
cmp
fnstenv
bound
imul
pop
sub
ss
jg
mov
out
pop
roll
jno
xchg
xor
repnz
pop
sbb
xlat
or
out
cltd
cmp
out
int
jge
fwait
dec
fdivrl
icebp
into
inc
in
call
js
imul
cmc
jg
add
rcll
fsubs
and
fwait
test
pusha
sub
cld
and
sbb
push
mov
cmpl
adcl
xor
loop
jbe
dec
mov
dec
sbb
cltd
scas
dec
push
sahf
xchg
mov
aas
js
imul
inc
test
mov
lods
cmp
mov
mov
das
aaa
lods
dec
jbe
std
loop
test
mov
aam
jb
xor
lahf
adc
mov
rorb
jbe
push
xor
mov
add
push
andb
jecxz
subl
aaa
pop
inc
repz
lret
sub
push
pop
and
xor
jo
pop
mov
ljmp
cs
xchg
cmp
sahf
mov
jae
add
icebp
pop
dec
xchg
pop
inc
xchg
rcll
pop
mul
or
sub
jge
shlb
sbb
xchg
ret
inc
ret
mov
xlat
pop
dec
or
sub
outsb
out
adc
imul
mov
scas
push
xor
pop
fidivl
jb
bound
lods
decb
push
clc
lock
inc
pop
in
shr
std
adc
mov
push
pop
loop
sub
out
gs
mov
jl
insl
fwait
insl
mov
jno
or
mov
outsb
das
xor
les
int
mov
xor
mov
test
xor
movsl
mov
mov
push
stos
dec
shrl
out
or
push
scas
mov
test
jbe
ja
sbb
rcrl
repz
sbb
lds
out
push
andb
test
imul
jo
xor
push
frstor
dec
mov
xor
lods
pop
mov
ss
push
lds
daa
cli
inc
inc
lcall
rclb
xchg
cmpsl
ds
out
mov
hlt
and
cltd
popa
sub
lahf
mov
push
xchg
push
inc
aam
xchg
repz
sub
orb
xchg
in
in
movsb
lds
sbb
in
call
sbb
dec
das
gs
sbb
mov
cltd
xchg
xor
pop
cmp
xchg
out
mov
sbb
dec
push
and
stc
movsl
cmp
lods
mov
enter
dec
add
orl
inc
mov
push
fwait
aam
dec
mov
mov
lods
push
jecxz
jns
sahf
fdivl
xchg
jp
cld
jp
orl
mov
in
lds
jbe
lods
mov
iretw
int3
mov
ret
les
adc
jg
mov
sub
repz
mov
hlt
xlat
jbe
imul
push
cmpb
push
add
movsb
or
and
mov
mov
stos
in
xor
adc
or
out
adc
dec
push
pop
mov
cmp
xchg
pop
arpl
and
mov
mov
adc
cmp
xchg
jo
setnp
jmp
sub
xor
repz
sub
je
jl
jp
aad
les
add
dec
xlat
mov
mov
loope
inc
movsb
jecxz
xor
or
and
addr16
movl
cmpsl
je
mull
mov
mov
std
and
mov
int
in
cltd
outsb
sbb
cmp
loopne
daa
and
jns
loop
movsb
orb
popa
cli
ds
insl
xlat
lds
inc
jno
push
sti
xor
or
cli
lods
mulb
movsb
and
lods
lods
mov
pop
ja
push
dec
add
repnz
enter
aad
lahf
mov
and
rorl
int3
clc
cld
inc
test
jbe
xlat
stos
int
xchg
repz
loopne
lcall
scas
mov
xchg
push
std
repnz
inc
lret
sbb
ret
stc
or
cmp
mov
pop
sbb
mov
clc
lods
dec
iret
arpl
and
movsb
adc
inc
add
push
jecxz
sbb
sub
pop
or
mov
fadd
cld
cmpsb
loop
pop
lcall
dec
pop
sub
cmp
add
in
outsb
outsl
popf
test
pop
xor
xchg
std
mov
mov
movsb
out
xchg
jmp
jl
xorb
add
or
das
sbb
inc
testb
dec
dec
les
outsl
mov
push
cld
xlat
test
stos
and
loop
int3
pop
int3
inc
sub
inc
sub
loope
sub
adc
int
lock
jno
hlt
cmp
cmpsl
cmpsb
out
je
inc
and
inc
ret
cmp
and
mov
and
test
or
cmpsl
aas
out
test
fwait
jmp
fdivl
jbe
iret
sbb
fdivrl
xorb
and
scas
mov
in
orb
pop
xchg
mov
idivl
sahf
rcl
mov
pop
or
movsl
mov
xchg
shll
scas
sbb
adc
clc
mov
pop
add
popa
rcrl
sbb
ljmp
pop
cmp
or
mov
scas
cltd
mov
out
mov
mov
lea
dec
enter
cmp
jg
jecxz
sub
jne
add
fsubrl
mov
in
xchg
sub
movsl
dec
daa
testl
add
popa
dec
push
mov
xchg
mov
xor
pop
shrl
mov
ja
sbb
mov
inc
lcall
xchg
sbb
mov
pop
aad
fldcw
adc
mov
loop
testl
mov
sub
push
test
dec
mov
std
repz
xchg
xchg
fists
inc
cmpsl
stos
jmp
mov
mov
dec
and
or
cltd
into
subl
inc
cmp
dec
pop
addb
xorb
test
iret
jns
mov
sub
sub
aaa
add
es
rcrb
fcomps
jne
xor
and
inc
in
clc
ret
adc
adc
and
or
and
pusha
andb
add
sub
fmull
jp
adc
mov
sub
add
jp
add
imul
sub
outsb
iret
sahf
outsb
insb
nop
xchg
sbb
insb
or
mov
ret
fnsave
aas
dec
out
xchg
orb
mov
rorb
mov
cld
pop
or
jp
inc
sti
subl
sbb
test
shll
lods
sbb
cmpl
jne
adc
jmp
and
push
cmp
mov
cmp
imul
mov
lret
lcall
lcall
bound
in
jbe
add
sarb
insl
outsb
test
mov
cmp
fs
incl
mov
xor
insl
dec
jb
andb
mov
xlat
fstpt
jo
sarb
pop
mov
push
aad
stos
bound
mov
adc
mov
lret
mov
xadd
cmp
sub
stos
sbb
dec
pushl
fcompl
in
lock
sti
mov
cs
dec
adc
sbb
into
mov
pop
imul
outsb
ret
je
aad
mov
shlb
xchg
loop
add
std
push
xchg
sub
push
sub
cmp
adc
pop
cld
mov
sahf
insb
pop
sahf
jp
lea
inc
xchg
movsb
mov
adc
je
orl
outsl
pop
scas
das
lahf
rorb
push
fwait
ds
push
add
pop
pop
or
insl
xchg
inc
mov
sbb
xchg
les
stc
mov
movsl
ja
push
push
cmp
lds
jnp
outsb
or
notl
inc
dec
rolb
dec
mov
lods
int3
xchg
into
mov
movsl
xor
and
jbe
pop
push
xchg
jmp
push
test
fidivs
mov
sub
enter
sbb
in
sbb
rclb
aaa
fwait
cmp
dec
aas
lret
fwait
sbb
popf
shll
sbb
ret
mov
adc
sub
je
dec
nop
inc
jns
inc
mov
lret
aam
cmp
inc
sub
or
hlt
sbb
gs
adc
or
aam
ror
fsubrp
mov
cmp
inc
test
fistpl
mov
inc
dec
inc
mov
fwait
popa
push
cmp
push
mov
add
gs
cwtl
fcmovnbe
and
in
out
test
gs
test
adc
and
stos
aaa
pop
mov
push
fildll
les
sub
data16
testl
lea
rolb
repz
mov
pop
add
adc
xor
repz
andl
jae
cmpsl
dec
adc
mov
pop
push
sbb
leave
inc
pop
mov
jmp
inc
pop
or
dec
push
idivl
shll
xchg
imul
psllw
jecxz
xchg
jne
js
call
repnz
out
push
mov
inc
ljmp
pop
jmp
inc
clc
out
dec
rcr
or
loopne
pop
add
cwtl
stos
cld
xchg
adc
into
stc
adc
daa
out
lret
sbb
data16
jne
sub
sub
lea
jg
cmpb
aam
lret
icebp
movsl
jne
push
out
loop
iret
into
and
cmp
ficoml
pop
fdivrl
out
inc
mov
jg
xchg
adc
cmp
dec
push
fsubrl
pushf
push
in
push
dec
mov
mull
adc
mov
mov
pop
push
lcall
lret
push
fs
clc
stos
les
ret
sub
cmpsb
jbe
jmp
stc
mov
mov
call
lret
cmp
mov
hlt
mov
mov
or
xchg
lret
mov
pop
jp
dec
push
in
jg
jmp
push
push
mov
push
test
jecxz
dec
xor
clc
xchg
jne
inc
jnp
inc
mov
out
cmp
inc
fcmovu
sub
adc
pusha
pop
sub
dec
imul
jmp
je
shrb
adc
push
inc
mov
js
mov
mov
xlat
mov
in
mov
aam
jae
jns
out
lds
sbb
iret
clc
and
cmp
lahf
daa
xor
and
dec
imul
lock
pop
lds
cmpsb
or
mov
int3
imul
xor
dec
pop
negl
mov
jecxz
xchg
jo
gs
fidivs
xchg
sub
push
adc
insl
push
cmp
je
roll
dec
push
push
insb
in
mov
jnp
inc
add
scas
push
dec
mov
nop
dec
mov
mov
orl
xchg
pop
xchg
push
inc
add
hlt
icebp
mov
das
xchg
mov
outsb
sahf
push
push
jo
pop
jnp
jnp
mov
bound
sbb
xchg
or
movsl
subl
je
push
cmc
aam
xchg
fistpll
adc
in
ljmp
stc
add
inc
fildl
call
outsl
call
cmc
mov
test
jne
mov
inc
shl
les
jbe
xchg
push
loope
out
xchg
push
sbb
dec
dec
ljmp
mov
std
loopne
and
into
sbb
lock
cmp
les
pop
push
xchg
out
lahf
and
jb
pusha
mov
cmp
dec
jmp
addr16
incb
push
rcll
sub
mov
push
fcomps
xor
mov
or
and
inc
dec
mov
jno
or
into
mov
aad
pusha
insb
lea
rcrb
jge
xchg
xchg
arpl
add
mov
jns
subl
imul
dec
cli
popf
imul
enter
into
lret
notl
mov
ds
insl
ja
syscall
aad
clc
jnp
lods
enter
mov
movsl
push
fcoml
scas
mov
lds
lret
cmp
js
lods
mov
loope
jo
add
jo
es
je
xchg
jp
fsubrs
aaa
or
pop
ss
cmp
jns
jo
push
in
nop
pop
es
mov
inc
and
repnz
push
xchg
fildll
enter
dec
test
imul
aaa
mov
jns
jbe
insl
xchg
cmc
loop
int
dec
ror
fucomp
mov
mov
adc
push
cld
lea
std
into
mov
int
hlt
cmc
adc
jo
mov
jp
or
mov
sub
mov
outsl
xorl
and
push
cmpsl
sub
xorl
dec
or
ret
push
inc
or
sbb
and
add
mov
cld
lahf
loopne
mov
sahf
mov
jmp
cli
fstpt
loopne
mov
scas
and
addps
in
ljmp
jnp
shlb
icebp
mov
sub
push
outsb
xor
repnz
test
movsb
mov
inc
sbb
adc
idiv
mov
test
cld
ret
add
div
cmpb
fstpt
in
stc
xchg
sti
jmp
mov
sbb
shrb
outsl
or
cmp
stos
enter
jne
jae
mov
xchg
push
push
rclb
in
xchg
push
sti
gs
push
shll
call
inc
shll
pop
sbbl
jne
xchg
call
push
pop
xchg
pop
loop
outsb
fsubr
inc
lock
icebp
enter
adc
filds
sbb
push
fstps
in
and
dec
and
stc
out
movsb
sub
add
adc
ljmp
push
xor
xchg
push
movsb
mov
stos
jns
inc
dec
loopne
mov
jnp
fdivrl
cli
xchg
aaa
pop
xchg
aam
dec
sti
adc
xchg
cltd
fstpt
push
aaa
in
mov
int
sbb
mov
sub
mov
leave
ret
inc
pusha
das
clc
jns
scas
in
xchg
xor
pop
jns
test
mov
pusha
adc
push
fidivrl
lret
cmpsl
arpl
add
stos
fldcw
inc
add
nop
mov
mov
and
pop
addr16
push
aad
push
sub
jmp
je
pop
cmc
cli
into
pop
cld
mov
test
jo
nop
mov
out
pop
mov
xor
scas
add
sbb
inc
in
jb
mov
stc
push
lds
cmpsb
sub
subl
pop
lahf
mov
notb
add
in
sub
sahf
jns
or
sub
xchg
nop
xor
xchg
mov
addr16
call
sub
mov
out
xchg
aaa
ret
jb
arpl
xchg
sbb
mov
mov
daa
push
add
daa
shlb
outsb
inc
xchg
lock
js
dec
sbbb
pop
fsts
shll
aas
outsb
out
test
mov
and
clc
jg
mov
adc
test
adc
movsl
testl
cmp
dec
sbbb
jge
nop
and
cmovne
iret
nop
jmp
dec
mov
ret
les
daa
sub
jmp
shlb
aad
pop
repz
pop
or
lods
int
push
fldt
fsub
xchg
jbe
out
inc
pop
mov
pop
test
push
mov
mov
fcmovnu
dec
mov
aad
call
mov
stc
andb
push
and
test
mov
inc
inc
fisttpl
mov
in
adc
fcmovb
sbb
or
cld
lret
std
add
ds
pushf
and
xor
scas
inc
out
repnz
ss
xchg
cmp
inc
fld
pusha
xchg
mov
scas
ss
ja
push
mov
hlt
sub
or
in
sti
stc
lret
xlat
or
pop
dec
iret
stc
mov
in
sarb
and
fcmovnbe
lea
out
mov
fldenv
xchg
cli
cld
and
das
xlat
shrb
sub
shlb
flds
inc
xor
inc
sbb
into
push
fsubp
fsubrl
sub
sub
out
scas
jnp
push
pop
pop
aas
ret
push
cmp
repz
ss
call
and
add
mov
cli
aas
xchg
scas
dec
arpl
movsb
sbb
mulb
sub
lods
daa
push
jp
andb
push
lds
imul
lods
mov
lods
pop
dec
xor
xchg
and
stos
mov
jmp
std
xchg
cmpsl
hlt
nop
movsb
test
jnp
sub
loop
push
div
cld
mov
xor
cmpsb
push
mov
push
xor
bound
arpl
pop
aam
imulb
mov
xchg
jne
je
rolb
fadds
repnz
push
adc
sub
ret
rorb
loop
pop
imul
mov
fidivrs
and
sbb
push
sbb
pop
cmp
dec
sub
mov
aam
dec
inc
into
add
jne
call
sbb
stos
mov
sub
data16
aaa
les
pop
sbb
pop
mov
adc
xor
mov
pushw
bound
mov
jae
subl
pop
cmpsb
outsb
sbb
stc
cmp
rorb
ret
or
lret
adc
jmp
or
shlb
ret
fldl
mov
adcl
lahf
pop
fdivrs
xchg
hlt
dec
or
outsb
shlb
xchg
out
cwtl
xchg
iret
fidivrs
push
subl
jno
mov
lahf
cli
adc
popf
int3
add
xchg
mov
ljmp
sbb
cld
xchg
outsb
inc
mov
loop
dec
mov
sub
push
mov
in
jbe
test
int3
adc
rclb
sahf
scas
enter
cmpsb
pop
push
int3
ljmp
adc
push
pop
iret
movl
repnz
nop
leave
jecxz
sahf
inc
cmp
cmp
mov
inc
push
scas
test
jo
sbb
mov
push
cmpsb
rcl
xor
push
pop
stc
les
mov
mov
adc
js
inc
fnstsw
xchg
xchg
sahf
mov
add
jmp
and
das
inc
dec
jle
movsl
mov
sbb
or
outsl
or
scas
sti
in
mov
loop
cmp
data16
pop
movsl
and
push
push
hlt
fimuls
fwait
aas
das
or
pop
and
push
cltd
inc
mulps
in
sahf
out
sub
sbb
push
add
repz
add
dec
adc
or
push
or
or
repz
push
addr16
and
jae
pop
pushf
push
mov
cmpsb
mov
mov
and
bound
and
lock
push
movsb
inc
loopne
shll
cmp
sbb
aaa
insl
cwtl
mov
je
push
xor
cltd
repz
pop
inc
cmpsl
add
popf
clc
pop
xor
lods
mov
xorl
mov
lahf
pop
inc
pusha
fs
mov
cs
out
popf
dec
notb
xor
loop
mov
or
outsb
push
xorl
aaa
inc
xchg
push
add
mov
repz
scas
push
fwait
lahf
mov
pop
cmp
adc
xor
sub
xchg
dec
add
xchg
xchg
cmp
sbb
pop
dec
ret
ja
adc
push
lahf
cwtl
jecxz
fcmovnb
push
stc
sti
xor
lret
adc
adc
in
fnstcw
push
dec
or
es
cmc
sbb
add
dec
jle
repz
dec
dec
jecxz
mov
push
std
xchg
jle
push
test
fwait
push
enter
mov
push
mov
enter
enter
sub
sbb
inc
sbb
cmpsl
inc
imul
sub
cmp
out
fildl
addr16
jmp
adc
add
addr16
push
cwtl
and
mov
sub
mov
lret
and
jg
stos
add
iret
push
lret
sub
cltd
jp
in
inc
mov
sub
les
xlat
add
mov
jnp
sub
into
xor
pusha
scas
hlt
dec
dec
into
ret
cmp
mov
iret
inc
xchg
mov
jg
fwait
repz
stc
mov
xchg
scas
inc
jno
outsl
hlt
and
mov
lods
add
push
faddl
jle
aas
imul
scas
setbe
and
or
outsl
dec
repz
daa
mov
cwtl
stos
mov
xchg
inc
jne
cmp
lret
xchg
out
sub
shll
and
loop
xor
xchg
rcrl
mov
out
fmulp
fs
pop
mov
ret
repz
aas
ret
cmp
into
les
mov
dec
into
xchg
loope
pop
xchg
cmp
sub
adc
mov
es
sub
fldcw
daa
dec
add
movsl
xorl
cmpsl
cmc
out
xchg
sub
popf
roll
int3
aas
mov
scas
jns
movsl
hlt
imul
mov
sub
cmpsl
fstl
aad
iret
movsb
jmp
mov
sbb
loop
mov
mov
xchg
push
loop
push
mov
mov
out
inc
shrl
xor
jno
inc
ret
int3
outsb
push
add
xor
cmpsw
cmc
cmp
stos
js
out
out
sbb
jae
and
and
jne
pop
jp
repz
repz
shl
xor
lea
std
negb
pop
lock
cmc
mov
fbstp
rcll
rcr
push
subb
test
call
sbb
cmp
xlat
adc
sub
cltd
test
arpl
and
cwtl
jmp
push
cmp
push
ljmp
in
mov
nop
mov
and
stos
shrb
dec
js
into
sbb
mov
cmp
mov
or
fnstcw
push
pop
arpl
int3
stc
testl
sahf
xor
pushf
push
lock
mov
mov
scas
xor
add
dec
cmp
adc
lods
and
cmc
adc
and
lds
andb
mov
clc
inc
xor
pop
rorl
cli
mov
lock
es
clc
add
lret
adc
das
lret
xor
jl
mov
cmp
xchg
sti
sub
sub
mov
mov
es
or
cmc
dec
jnp
ficoms
pop
push
fcompl
sbb
mov
addr16
stc
cmp
fdivl
clc
std
insl
and
sub
push
jne
in
pop
cmc
fwait
and
xchg
es
xor
fwait
pop
jge
xchg
add
mov
ds
fwait
lea
xor
pop
fldenv
loopne
push
xor
shlb
xchg
sbbl
test
cmp
fwait
jae
dec
push
dec
mov
into
shll
push
jmp
mov
pop
dec
or
add
rol
and
rorl
mov
xchg
clc
fs
and
jae
mov
loop
fsubr
or
imul
lret
hlt
dec
fnstenv
inc
sahf
imul
mov
mov
aam
ss
imul
gs
out
mov
cmp
insl
shrl
ffreep
movsb
xchg
aaa
fwait
push
repnz
nop
xchg
mov
lcall
loope
bound
inc
sahf
dec
and
jmp
es
insl
jmp
js
dec
and
push
xchg
adc
subl
jmp
leave
pop
sub
fcmovu
pusha
xor
fdivrs
enter
push
nop
cmp
sbb
in
add
add
andl
sbb
jno
mulb
stc
stc
pop
adc
xor
nop
jb
aas
pop
lret
push
mov
cmp
mov
or
push
lock
sarl
and
aaa
cwtl
bound
pop
sub
sub
lret
jle
ret
lret
ss
mov
ljmp
mov
cltd
inc
dec
sbb
cmp
jb
sbb
outsb
fldl
test
outsl
mov
or
dec
pop
pusha
call
xlat
inc
sbb
iret
sbb
fs
outsl
mov
push
xor
out
lea
mov
push
aam
shrl
aas
add
test
xchg
xchg
imul
mov
jo
call
and
mov
sbb
mov
cmp
cmp
mov
ds
int3
add
out
mov
or
sahf
mov
cld
into
rolb
jno
jae
rolb
stos
roll
push
neg
xchg
stc
pop
sbb
xchg
sub
add
stos
push
xchg
aas
xlat
std
ret
arpl
fldl
xor
and
xor
es
push
jne
adc
xchg
lock
mov
iret
test
rcll
insl
pop
dec
cmp
xor
cmp
scas
mov
mov
jne
lods
xor
test
xor
iret
or
inc
cltd
jecxz
les
pushf
jl
fs
daa
mov
es
test
fsts
ret
pop
jnp
ds
and
lea
insb
lods
xchg
mov
and
std
sbb
jge
js
sub
jl
sub
jl
mov
xchg
les
sbbl
mov
add
out
push
cwtl
data16
mov
cmp
or
jne
xchg
push
imul
fdivrs
decb
testl
popa
and
in
or
adc
mov
jns
roll
xchg
jno
sub
test
add
mov
test
push
cmp
movsb
push
shrl
xchg
pushf
sbb
mov
repz
push
addb
pop
cli
mov
ja
pop
test
ret
mov
ret
push
jbe
iret
jge
mov
xchg
cwtl
mov
scas
xchg
sub
popl
and
inc
cmp
dec
enter
fimull
pop
int3
or
xchg
and
movsl
aaa
adc
pop
xor
push
push
fidivrs
leave
jle
mov
dec
std
gs
insl
pop
and
pushf
xlat
sbb
das
sub
cmp
sub
mov
push
xor
cltd
rorl
xchg
das
sub
stos
rcrb
fsubl
adc
out
mov
pop
pop
mov
mov
imul
adc
xlat
lds
pop
add
mov
shlb
cmpsl
imul
in
lahf
cmpsb
cmpsl
xchg
rcrb
mov
and
icebp
cs
mov
cmpsl
scas
and
ljmp
nop
push
jno
cmp
call
xchg
and
movsb
push
arpl
mov
push
mov
jl
add
insl
in
insl
imulb
shrl
jbe
sarb
push
push
enter
xchg
call
iret
pop
jecxz
outsb
bound
push
je
sub
decl
inc
mov
fistl
inc
out
cmp
and
push
dec
xchg
adc
in
ret
loop
cltd
sbb
jecxz
insb
lods
cmpsb
jecxz
aam
in
cld
xor
mov
mov
cmp
insl
lret
xchg
ficompl
imul
add
js
inc
cli
add
daa
push
lods
lock
bound
xor
test
xor
pop
cld
adc
hlt
xchg
stos
rorl
add
mov
mov
lret
xor
push
mov
iret
mov
xchg
mov
jl
pop
xchg
mov
xchg
cld
jp
mov
cmp
mov
scas
int3
rclb
outsb
inc
push
in
in
mov
jl
lock
imul
adc
sbb
mov
inc
push
mov
insl
int
jbe
xor
cmp
dec
icebp
sub
loop
mov
inc
add
mov
jae
push
adc
outsb
dec
ret
lea
xor
jae
cltd
nop
loopne
fwait
aam
mov
or
jecxz
bndstx
test
clc
add
pop
adc
lahf
xchg
enter
ja
adc
push
push
stos
xchg
gs
sbb
jns
shl
imul
sti
inc
aad
sbb
and
and
mov
cwtl
fdiv
or
mov
loope
pop
xchg
inc
jp
sub
adc
ret
xor
mov
int
in
xor
or
push
xor
bound
xchg
adc
push
pop
lahf
arpl
clc
hlt
adc
fwait
sub
hlt
jp
out
negb
sbb
pushf
notl
inc
popf
pop
jp
jns
or
jp
into
mul
and
xor
fwait
mov
dec
ja
xchg
xchg
add
push
psrlq
imul
add
xchg
sbb
xor
jge
xor
jne
or
push
mov
outsl
sub
xchg
repz
divl
out
mov
into
xlat
subb
dec
sti
and
fs
add
xchg
and
fisttpl
jl
and
pop
or
jb
daa
lcall
sub
or
outsl
inc
xor
pop
xchg
jnp
lds
xor
xor
cld
out
mov
movb
dec
and
inc
or
jecxz
jmp
dec
int
pop
leave
jne
int
cmp
enter
mov
in
lods
adc
out
in
inc
shlb
negl
inc
jle
js
jecxz
mov
sbb
addr16
pop
dec
test
or
cmp
mov
loop
sub
push
jmp
fdivrp
dec
push
jno
outsl
jb
dec
lods
in
mov
in
test
mov
push
bound
xor
jae
out
int3
subl
repz
jp
test
stos
xlat
sub
and
adc
sub
test
xchg
mov
dec
inc
js
hlt
sub
gs
fdiv
pusha
scas
enter
orb
or
in
mov
jno
in
xchg
scas
ret
cmpsl
jns
xchg
subl
in
mov
and
pop
jge
xchg
and
and
lods
mov
inc
lret
sub
lods
inc
scas
cmp
dec
sub
cmpsb
rcl
push
sub
xchg
pushf
pop
inc
or
pop
mov
call
leave
mov
dec
push
pop
fcomp
jecxz
pop
pusha
std
push
dec
inc
jo
xchg
jae
or
imul
clc
dec
outsb
movsl
insl
xchg
mov
adc
in
xchg
fildll
cmp
xor
out
mov
xor
mov
sub
enter
push
jbe
sti
pop
cmp
iret
adc
int
add
inc
andb
insb
movsb
mov
jle
cmp
push
into
jbe
jle
aaa
pop
push
mov
icebp
mov
shrb
iret
jmp
jle
mov
popf
mov
loopne
int
out
andb
mov
cwtl
stc
adc
aaa
fs
lret
dec
dec
movsl
arpl
stos
out
ffreep
inc
pop
inc
test
popf
mov
es
xchg
filds
stos
or
adc
add
fwait
pop
ss
ficompl
xchg
inc
fstps
add
mov
jg
sar
pop
rorl
outsl
sbb
push
test
notb
xor
pop
xchg
inc
lcall
std
add
xor
cli
leave
movsb
or
nopl
dec
fistps
sbb
sbb
scas
idivl
cmp
xchg
repz
add
adc
out
lahf
lret
sub
adc
ret
push
push
mov
sti
test
les
xor
push
mov
adc
in
mov
or
xchg
jb
jbe
cmp
scas
addl
adc
mov
push
dec
sub
cmp
popw
inc
leave
jge
test
jns
lods
cmpsl
out
xchg
inc
and
inc
in
inc
pause
mov
xchg
loopne
xchg
cmc
imul
xchg
out
xchg
mov
cmp
rep
inc
call
sbb
mov
leave
dec
mov
pop
mov
movsl
aad
mov
sub
mov
push
fs
into
xchg
movsl
or
sub
pop
addr16
inc
add
loop
inc
and
movsl
decl
mov
mov
sbb
movsl
push
mov
test
scas
testb
inc
inc
lods
clc
and
sub
movsl
outsl
out
ret
jbe
lods
and
mov
popf
push
inc
cmp
and
rdtsc
mov
sarb
pop
lods
lock
mov
test
adc
adc
jae
xor
cli
ret
jne
lret
xchg
and
es
test
push
pop
jo
fsubl
fidivs
xchg
test
jg
sbb
jo
stos
push
and
repnz
xchg
in
insl
cltd
es
sub
xor
loope
lcall
mov
pop
mov
push
insb
xchg
xchg
dec
mov
add
jo
shlb
test
rorl
push
mov
dec
hlt
enter
je
push
lahf
push
inc
hlt
push
enter
lret
xchg
mov
ffree
mov
das
mov
cmp
dec
popf
insl
push
repz
or
jnp
mov
popa
jmp
je
pop
je
aaa
psllq
jo
fdivrs
cmc
insl
lods
or
mov
and
out
pop
lods
mov
leave
dec
push
insl
and
adcl
in
les
sarl
push
fcoms
inc
ljmp
lret
jecxz
sub
pop
jge
dec
push
fistpl
jg
std
sbb
dec
jle
mov
cmp
shl
lcall
cltd
leave
mov
addl
xchg
icebp
push
lods
out
fisttpl
mov
pop
mov
sub
jg
enter
lds
pusha
xor
sbb
sbb
sub
jl
mov
test
in
mov
push
mov
and
dec
pop
sbb
adcl
push
dec
xor
mov
jp
jae
rcrb
push
jl
cmp
jns
pop
sbb
gs
adc
ds
or
das
xchg
lds
ljmp
push
adc
adc
setp
int
sbb
cwtl
std
and
daa
rcll
push
push
div
outsb
fnstsw
sbb
push
xchg
dec
sbb
xor
jns
sub
nop
es
setl
sbb
or
cmp
loopne
js
sub
insb
mov
repz
adc
notb
add
sbb
hlt
shl
repz
aam
or
cmp
hlt
aam
movsl
leave
je
sbb
and
inc
jne
cli
sahf
push
push
inc
fistpll
cmp
es
pop
push
push
ss
js
or
jne
and
or
mov
mov
sarb
aaa
mov
movb
mov
aad
repz
test
xorl
adc
push
inc
sbb
xchg
out
adc
sub
fdivp
ja
inc
std
imul
dec
xor
jg
pop
push
sbb
cmp
mov
inc
xchg
pop
jg
pop
test
fildl
mov
movsl
mov
es
mov
rclb
pusha
lds
scas
test
pop
add
aad
out
movsb
jae
lods
mov
repnz
mov
dec
pusha
xchg
rorl
lret
fdivrl
dec
push
mov
fadd
daa
into
xor
in
jne
mov
cmp
test
or
pop
cld
ret
je
stos
lods
mov
xor
mov
push
mov
or
jo
mov
cmp
dec
pextrw
pop
pushf
rcrl
ret
sbb
scas
jmp
ja
pop
aam
pop
add
mov
or
ljmp
pop
fstpt
adc
cli
aam
jns
inc
test
adcl
movb
jl
jbe
pop
imul
push
test
add
mov
dec
sub
dec
push
dec
call
mov
scas
fs
inc
pop
mov
xchg
xor
jle
rorb
jbe
rol
in
incb
and
xchg
inc
push
xor
cmpsl
push
aad
pop
jmp
xor
scas
lcall
cmp
js
aaa
fucomp
mov
data16
pop
add
push
jb
pop
inc
pop
xchg
int3
loope
xchg
imul
jle
std
xchg
loop
cmp
pop
mov
jge
sub
sub
push
push
dec
push
loopne
in
int
or
scas
dec
enter
jne
jae
fucomp
adc
cltd
cmpsl
xlat
lods
jno
cwtl
mov
mov
mov
shll
jnp
in
jmp
inc
add
aad
arpl
aaa
xor
jae
cmpsl
mov
ljmp
ret
inc
mov
cltd
dec
push
dec
lcall
mov
inc
pop
pop
jp
dec
les
icebp
push
mov
shl
dec
inc
je
test
mov
push
test
in
cmp
sti
roll
xor
sbb
ds
jp
pop
sbb
and
jo
mov
cmp
mov
cmp
adcb
mov
jl
dec
mov
sub
xor
addr16
dec
add
cmc
fs
addb
aas
lret
sub
imul
dec
or
pop
jp
out
and
pop
test
fiadds
stos
mov
jb
lock
and
scas
cltd
lds
jns
inc
sbb
push
xchg
das
fs
icebp
leave
scas
pop
pushl
sub
cmp
jmp
xchg
dec
pop
out
divw
add
rcr
push
sti
sub
jl
jno
mov
cs
and
cli
lods
dec
ljmp
dec
push
out
lcall
add
xor
test
mov
dec
xor
sbb
jmp
sub
inc
lock
in
int
into
mov
jns
push
nop
push
jns
fmuls
xchg
mov
sti
cmp
sub
lods
sarl
movsl
lret
jp
ljmp
test
pop
jge
sti
or
cmp
data16
xor
inc
lea
int3
adc
fstl
iret
outsl
lcall
data16
and
lcall
dec
sub
int
xchg
or
cld
repz
pop
fstps
cld
add
rolb
pushf
sub
add
lcall
popa
arpl
push
xchg
popf
pushf
cmpsl
cmp
pushf
ret
les
sbb
jbe
outsl
out
sub
adc
jnp
fldz
lret
sbb
adc
dec
or
push
mov
call
cwtl
and
shr
or
dec
and
in
cld
sti
mov
xchg
in
xor
xor
push
fisubrl
cmp
sub
xchg
and
inc
sub
cwtl
sbb
stos
out
jp
dec
xor
sbb
je
jmp
cmp
das
xchg
stos
inc
mov
mov
push
pusha
ja
push
sbb
idiv
cmp
jo
stos
ljmp
sub
roll
out
adc
sarl
je
stc
add
loope
lds
xchg
adc
adc
popf
test
orb
in
pop
lcall
fsubs
hlt
xchg
outsb
arpl
gs
les
int
aad
iret
dec
ss
sbb
mov
cld
pop
rcrl
dec
rorl
stos
adc
lds
add
mov
dec
dec
or
pop
mov
rorb
cli
ret
int3
mov
fwait
xor
pop
cmp
cmpsb
pop
int
xor
xchg
imul
aad
ds
mov
push
mov
mov
in
xchg
je
pop
add
jl
jbe
add
push
js
leave
jle
inc
or
rolb
fnstsw
xchg
inc
xlat
jb
inc
sub
mov
push
jb
imul
and
adc
xor
add
dec
ret
scas
shll
testb
mov
outsb
std
fadd
out
das
daa
outsl
xor
pop
fcoml
mov
mov
mov
or
mov
xor
cmc
out
cli
push
movb
push
pop
push
or
repz
dec
lock
cld
lahf
pop
sbb
adc
dec
mov
xchg
sarl
cs
testb
sbb
cltd
dec
insb
in
cmp
pop
xor
test
adc
shl
test
mov
mov
scas
mov
jmp
pusha
inc
dec
inc
inc
pop
aam
mov
test
xchg
adc
in
pushf
popf
rcll
sti
sarl
push
fistps
pusha
jb
jb
ljmp
pop
push
mov
int
cmc
dec
stos
dec
movsb
jb
mov
xchg
and
jmp
in
mov
imul
fs
and
stos
inc
cmc
outsb
add
lahf
mov
jmp
push
or
jmp
xchg
xchg
pop
sub
shrb
adc
sahf
hlt
and
scas
xor
sub
mov
add
lret
and
sbb
mov
jl
add
add
sti
jecxz
in
repnz
push
clc
je
add
sub
idivl
in
sbb
or
pop
jb
jae
mov
pop
sbb
dec
inc
shll
adc
cmpsb
stc
sbb
inc
out
shrb
in
mov
mov
sub
pop
movsb
or
xlat
data16
int
arpl
mov
mov
ja
push
inc
xchg
pop
leave
nop
xor
push
jo
pop
cmpsb
xchg
adc
out
and
ret
insl
ja
lds
inc
jnp
arpl
ret
int3
daa
sub
cmp
dec
ljmp
mov
sub
test
roll
xor
pusha
out
and
sahf
insl
shl
hlt
gs
rcrl
mov
jge
xor
push
xchg
dec
lahf
sbb
rorl
outsl
mov
or
cmpsl
sub
js
and
movl
xor
stos
filds
lods
xchg
pop
adcb
mov
int
pop
int
jmp
jg
imul
mov
sub
mov
and
pushf
shll
xor
inc
sbb
iret
adc
add
fucomip
les
fstpl
jae
cmpsb
pop
adc
cmp
insb
jge
xchg
cmp
cmp
sub
mov
pop
push
cmp
dec
mov
fcomps
add
mov
pop
pop
mov
rorl
mov
mov
movsb
repnz
dec
xchg
fs
ror
outsb
outsl
inc
dec
lret
bound
out
movsl
push
addr16
adc
fcmovnu
sbb
addr16
cwtl
rolb
test
push
add
dec
les
popa
cmp
mov
dec
outsb
cwtl
loopne
jmp
std
pop
outsl
xor
jbe
push
jns
fucomp
cmp
call
fists
repnz
dec
and
push
fldcw
lods
mov
dec
.byte
and
test
imul
and
addr16
rorl
shrl
push
out
lods
xor
das
out
mov
push
pop
stos
dec
cmp
mov
callw
in
shlb
nop
xchg
lds
xchg
test
push
rcrb
cmp
mov
dec
out
imul
stos
andl
xchg
lret
fwait
cli
push
fwait
je
sbb
mov
mov
cli
sub
repnz
push
dec
jecxz
aas
inc
jae
aas
push
aad
sub
pop
repz
iret
push
cmp
jbe
gs
andb
loope
ja
fdivs
dec
rcrl
lcall
dec
push
push
int
cmc
sti
pop
mov
pop
aas
subb
mov
mov
mov
popa
pop
pop
jmp
mov
and
loopne
pop
dec
pop
movsl
pop
xlat
fldcw
aam
into
loop
cmpsl
aas
jno
add
cs
lods
mov
lock
sahf
cmp
movsl
xlat
lds
mov
inc
pop
loope
rorl
sub
add
mov
xor
sub
and
psubusw
mov
sub
cmpsb
hlt
xor
arpl
hlt
insl
cmp
pop
mov
cmpsb
out
in
ljmp
adc
pop
dec
loopne
scas
orl
or
jl
add
push
sbb
dec
xlat
shr
aaa
insb
xchg
and
sub
mov
outsb
in
xchg
ret
jl
mov
aaa
push
xchg
mov
fwait
loop
scas
test
out
dec
outsb
aaa
out
into
xchg
popf
jae
cltd
or
out
xchg
and
cmp
xorb
push
icebp
out
pushf
sub
shl
lea
hlt
loopne
push
push
mull
js
jg
outsl
mov
or
cmp
adc
push
xor
xchg
jbe
aas
push
adcb
jmp
daa
pop
ljmp
in
sub
sar
dec
add
xchg
push
and
and
mov
xchg
arpl
push
sub
clc
fsubl
lods
rcl
jo
mov
and
push
mov
cmp
scas
mov
xchg
dec
push
lods
adcl
add
loop
sahf
in
adc
dec
or
in
mov
mov
movsl
jge
push
repz
cmp
pop
scas
es
push
xor
test
imul
jecxz
stos
daa
adc
cs
stos
dec
dec
ret
movsb
adc
das
ret
and
sub
jmp
push
cmp
push
jae
or
and
and
cmpsb
mov
cld
push
in
xor
ficoms
negb
mov
aas
call
mov
fcmovnu
ss
cmc
rcrl
pop
push
inc
xchg
data16
mov
repnz
mov
xor
xchg
decl
out
ds
sub
push
jno
push
pop
push
in
mov
add
jle
push
xor
gs
mov
jb
push
frstor
inc
in
into
in
nop
or
icebp
sbb
mov
cs
mov
jl
push
rcr
cmc
gs
cld
pop
gs
sub
jo
pop
mov
jne
cmpsl
sbb
xchg
cltd
mov
shll
cmpsl
mov
out
shll
fisubrl
cltd
lock
mov
mov
fnstcw
pop
xchg
negl
dec
rclb
call
jbe
push
sbb
sti
cwtl
mulb
jmp
loopne
push
test
pop
add
add
inc
xor
cmp
cmp
push
fiadds
sbb
cmp
mov
and
orb
hlt
stos
shl
sbb
push
cmpsb
clc
push
xor
inc
cmp
sbb
jne
pushf
lret
inc
mov
repz
call
outsb
repz
sti
out
mov
lahf
fidivl
setns
or
push
lret
into
call
enter
jo
aam
mov
xchg
mov
xor
outsb
pop
or
and
push
pushf
stos
mov
xchg
aam
mov
and
adc
int3
call
sub
lds
lcall
leave
pop
mov
ficoml
inc
in
nop
pushf
pop
mov
sub
inc
xor
loop
push
push
pop
pop
jg
lods
adc
ds
jae
cmp
adc
idiv
and
adc
dec
dec
mov
ret
test
movsl
jmp
jecxz
cld
std
and
mov
ret
cmpsl
int
sbb
push
mov
xor
lds
movsl
fsubp
cli
je
mov
sub
imul
fstl
leave
mov
nop
jg
jl
inc
mov
cmp
in
cld
lahf
cmpsb
add
ret
cmc
cli
and
pop
popf
out
arpl
mov
jo
cmpb
or
in
xorb
mov
xor
xchg
mov
inc
pop
jo
push
clc
cmp
cmpsl
mov
mov
mov
scas
addl
cmp
das
loope
fistl
mov
pop
mov
aam
sub
pop
in
call
sbb
rcll
faddl
dec
insb
and
fwait
je
cmpsb
imul
sub
jns
fadds
xor
adc
arpl
fadds
or
mov
cmpsl
mov
adc
jb
icebp
and
adc
mov
enter
and
mov
xchg
ja
test
test
push
int
jp
dec
test
add
bnd
outsl
cmpsl
leave
loope
enter
and
add
stc
jae
pop
cmpsb
test
sub
jp
mov
loope
dec
int3
es
in
dec
cltd
fstl
and
cltd
das
repz
and
xorb
jl
call
pop
cwtl
loop
stos
cmp
movsl
and
ror
or
loope
ficoml
pop
sbb
fadds
insl
sub
add
sbb
adc
dec
call
in
outsl
shr
jbe
mov
fbld
pop
cltd
dec
pop
adc
test
push
push
inc
sbb
flds
das
jbe
mov
repz
int
mov
sub
mov
rorb
xchg
and
fdivl
cmpsl
jg
gs
test
adcb
scas
and
popl
in
inc
jnp
mov
dec
xchg
or
push
js
leave
dec
pop
adc
xor
ficoml
jmp
movsb
test
xor
jne
dec
ret
nop
adc
xor
push
push
rcr
insl
pop
mov
mov
mov
xor
dec
cwtl
loop
aaa
es
push
inc
sub
or
scas
adc
push
mov
fwait
jge
add
fbstp
jmp
sarb
jae
cmp
inc
xchg
ret
enter
lock
leavew
pop
int3
add
out
jmp
ret
jl
sub
mov
das
adcl
sti
xchg
cmp
adc
mov
mov
scas
lods
or
mov
in
sub
cs
movsb
adc
data16
adc
inc
jmp
cmc
jg
dec
jg
enter
jmp
jp
push
outsl
ret
mov
pusha
mov
insb
xlat
out
imul
ret
mov
push
lea
lahf
and
and
sbb
pop
fs
cmpsl
loop,pn
enter
push
push
push
je
data16
jnp
lcall
out
imul
in
arpl
dec
xor
popa
hlt
jae
shl
outsl
imul
andb
lahf
ja
xor
jns
out
mov
cld
loope
addr16
aad
and
sbb
jmp
jp
les
push
pop
rcl
ficoml
inc
sbb
lcall
in
sub
mov
or
dec
ret
stos
jle
cmp
stos
outsb
sti
jp
imul
jae
xlat
cld
ljmp
sbb
xchg
loop
rcll
es
xchg
aaa
sbb
pushf
dec
movsb
jo
aaa
xlat
cs
jecxz
mov
mov
in
fisttps
arpl
sub
mov
xchg
push
dec
xchg
neg
mov
mov
xchg
push
adc
pop
mov
pop
loop
push
aad
aas
push
ja
mov
ja
dec
pop
pop
dec
or
xor
sarb
push
call
mov
mov
test
mov
mov
out
mov
ds
xchg
mov
pop
sbb
adc
mov
xchg
dec
cmpsl
ret
iret
arpl
scas
pusha
mov
movsb
xor
cmp
negl
jg
jecxz
setae
shr
fsubs
test
sti
mov
mov
rorb
pop
jg
fmuls
and
loopne
aad
mov
xchg
jp
mulb
mov
je
fildl
dec
xchg
dec
mov
adc
pop
dec
inc
imul
lea
inc
daa
xchg
cmp
lret
fsub
inc
push
cmc
outsl
jl
cmp
test
negl
mov
loope
mov
pop
pushf
lahf
jne
cmp
cmp
orb
mov
clc
sbb
aas
mov
mov
push
mov
xor
sub
jbe
mov
cmp
mov
jl
dec
fmul
adc
xor
adc
mov
fwait
clc
fwait
adc
cmp
pop
pop
adc
sbbb
xchg
stc
adc
shr
cmpb
sti
arpl
add
jno
movsl
push
push
mov
mov
mov
pushf
jmp
mov
inc
push
xor
stc
shrl
mov
sahf
mov
ror
sti
mov
out
popf
push
sar
mov
in
jl
push
xorl
lock
in
pop
adc
lahf
jne
rcrb
imul
adc
sbb
jle
pop
lds
cmp
mov
leave
xchg
add
sbb
push
push
push
dec
pop
xchg
xor
movsb
in
xorl
test
popl
clc
scas
jg
mov
mov
mov
dec
stos
mov
mov
jecxz
jg
aaa
rcll
data16
jmp
pop
int
sub
fsts
and
loop
hlt
divb
add
pop
and
stc
fisttpl
dec
lret
out
mov
call
loop
xchg
xchg
xor
pop
pop
xchg
dec
pop
inc
pop
cmp
mov
imul
int3
lock
js
cmpsb
lea
push
push
and
cs
cli
add
mov
mov
out
inc
add
pop
sti
cmp
mov
sub
jnp
ficompl
jecxz
cmp
mov
in
loopne
popf
xchg
cmp
aam
insb
daa
mov
arpl
jbe
scas
xchg
inc
and
lock
xlat
daa
cmp
cli
lds
pop
and
ret
and
inc
push
inc
mov
fmulp
inc
jns
outsl
pop
mov
testl
mov
cmp
es
in
push
xor
or
sub
sarb
dec
icebp
inc
popa
fstpt
lods
jns
jne
adc
jle
out
fldenv
sbb
xchg
add
sub
andb
mov
in
pop
fcomp
cmp
pop
jae
in
jmp
push
or
and
add
pop
inc
out
aas
test
in
imul
shl
inc
and
xchg
int
mov
data16
adc
pop
rcr
lock
popf
icebp
popf
add
xor
je
sub
jg
hlt
adc
pop
mov
out
xchg
inc
adc
xchg
mov
pop
xor
mov
outsb
int3
add
adc
aam
cmp
add
xchg
dec
ret
movsl
int3
das
adc
cmp
jecxz
and
jb
out
cmp
dec
sbbl
out
fld
inc
mov
lock
sbbb
cld
jp
out
jbe
stos
lea
fidivrs
cmp
push
jg
cmpsb
adc
popf
xor
imul
out
loope
add
and
mov
inc
js
test
cmp
mov
inc
adcl
sbb
pop
mov
or
sub
push
cmpsl
xchg
pop
sub
cmp
imul
pop
cmp
cld
push
xor
pop
sub
addl
sub
and
push
mov
cmp
adc
xor
dec
rcl
mov
in
jae
cmp
cli
cld
je
and
in
mov
pop
aam
addr16
jl
inc
dec
adc
xchg
inc
cmp
mov
push
xor
pop
jg
shrl
or
sub
inc
cmp
jmp
mov
add
stos
mov
dec
lock
imul
mov
jp
xor
push
add
dec
outsl
enter
rcll
sbb
js
add
scas
xor
or
push
movsl
aam
jge
mov
sbb
mov
repnz
or
adc
orl
js
and
mov
inc
mov
orl
xorl
cmc
enter
fldenv
movsb
lock
add
out
xor
dec
jnp
and
jmp
out
mov
mov
sahf
adc
int
fwait
popa
cs
mov
adc
or
jle
lret
and
into
xor
push
outsl
mov
rep
push
aad
test
adcb
addr16
lods
nop
sub
sbb
imul
jae
mov
cmp
lcall
mov
or
pop
mov
bound
stc
jl
adc
loop
lret
add
iret
and
stos
cmp
pop
lret
pop
aad
mov
lock
outsb
in
lret
mov
cmpsb
sub
test
clc
xchg
lcall
je
in
in
cwtl
fldenv
test
push
addr16
pop
push
out
sahf
repnz
ficoms
les
jge
es
mov
cmp
jae
leave
fisubl
ds
sbb
shrl
mov
sub
mov
insb
lock
popl
add
stos
mov
out
mov
pop
or
std
subb
test
push
mov
mov
sub
xor
cmp
enter
enter
nop
fstl
aaa
cmp
xor
mov
nop
daa
mov
cli
push
inc
nop
sahf
pop
clc
iret
push
call
pop
sub
mov
xorl
mov
test
mov
mov
mov
dec
popa
adc
pop
add
dec
push
dec
into
and
stos
shrl
dec
pop
mov
and
and
scas
add
xchg
pop
inc
aam
in
adc
inc
cmpsb
adc
addr16
dec
loopne
pop
cli
or
pop
sbb
lods
in
stos
scas
test
jle
xor
cltd
push
inc
sub
jns
xchg
jmp
je
pop
data16
outsb
jmp
jecxz
rorl
jae
iret
popa
jecxz
xchg
sti
lods
mov
adc
push
out
das
insl
adc
shll
dec
out
pushf
clc
or
outsl
ror
faddp
mov
pop
lcall
xor
out
add
xlat
aas
out
inc
inc
mov
mov
cltd
popa
arpl
xchg
or
pop
xor
mov
cmp
pop
mov
mov
push
xor
mov
ffree
xchg
lods
mov
bound
xor
adc
lds
iret
xchg
jg
shll
das
das
aas
div
add
mov
mov
cmp
jmp
fdivs
cltd
lea
xchg
push
cmp
add
mov
mov
imul
or
jns
aad
xor
scas
push
pop
adc
cmpsb
clc
repnz
cwtl
xchg
pop
test
lods
sbb
jo
add
push
stc
push
cmp
mov
mov
jne
sub
cltd
push
or
and
sti
cmp
aad
dec
and
cmp
inc
in
add
je
mov
and
arpl
dec
lea
or
mov
int3
xor
cmp
push
xor
inc
mov
push
pop
jno
popf
jne
mov
jno
dec
cwtl
or
push
jnp
cmp
and
cmpl
aad
push
inc
shrb
push
fstps
add
insl
inc
inc
xchg
xor
loop
in
outsl
and
fcoml
cltd
xchg
push
add
pop
dec
bound
pop
adc
mov
lods
pop
cltd
cltd
test
inc
adc
xor
mov
enter
or
xchg
cmp
sub
jg
bound
insl
aas
push
pushf
test
clc
dec
xchg
pushf
stc
imul
bound
leave
aaa
stos
rol
imul
add
daa
sbb
dec
popf
push
aad
icebp
xor
mov
stc
sbb
rclb
ret
jl
scas
push
inc
pop
pusha
xchg
fxch
mov
aaa
cwtl
lret
cmpb
mov
es
mov
or
icebp
jns
push
es
dec
movsl
cmp
pusha
int3
push
cmpb
push
xlat
sub
sbb
test
lahf
sbb
dec
fistps
fst
fwait
enter
loop
cmpsb
push
cmc
cmp
inc
adc
jl
sti
hlt
adc
inc
shl
mov
gs
inc
jbe
int3
xor
aaa
mov
xchg
in
fistl
mov
adc
xchg
xor
cld
pop
data16
stos
fcmovbe
sub
pusha
fnstcw
mov
pop
mov
sahf
ret
sub
and
pushf
mov
inc
mov
cli
bound
pusha
xchg
shrb
fidivs
jno
xchg
add
cmp
pop
jmp
mov
out
and
jae
or
mov
push
jnp
stos
ja
into
and
ds
ret
lahf
cmp
in
inc
scas
leave
insl
lds
add
into
and
nop
int3
push
mov
cmpsl
lret
mov
xchg
inc
push
or
call
fisubrs
xchg
cmp
insb
push
lcall
inc
mov
aam
mov
fnstcw
mov
xchg
cs
pop
stos
int
mov
aad
std
cmpsl
in
mov
pop
mov
mov
iret
addr16
pop
push
dec
jge
jl
cld
repnz
pop
add
xor
or
out
mov
jecxz
push
insl
xchg
es
int3
xor
ss
xchg
outsl
cld
or
push
and
cmpsb
out
add
mov
cld
xchg
push
divb
movb
adcl
mov
sbb
xchg
ret
and
fs
imul
sahf
out
inc
jns
and
sub
sbb
sbb
inc
aas
mov
idivb
sbb
mov
xchg
mov
mov
ss
call
sub
lcall
nop
xchg
sub
xor
xchg
push
jb
push
out
mov
cmp
dec
adc
out
xchg
mov
and
mov
and
out
in
fnstcw
sub
fmuls
in
push
mov
adc
aas
adc
mov
gs
repz
hlt
jecxz
mov
int
and
shrl
out
xor
inc
push
pop
xchg
icebp
push
dec
iret
cmp
lcall
cmpsb
sbbl
fs
sbb
push
stos
and
test
xor
xchg
insb
xor
or
pop
or
dec
ja
lods
or
xchg
push
push
sub
movsl
cs
pop
inc
pop
andb
sarb
lods
iret
scas
lcall
rorl
xchg
xchg
in
shlb
lds
in
js
daa
xor
mov
or
push
fdecstp
fisubrs
stos
into
jg
cmpsb
aaa
xchg
fistl
icebp
popa
pop
sbb
adc
dec
mov
sbb
pop
adc
sbb
ffree
add
sbb
jno
mov
cmp
and
lock
jl
xlat
pushf
test
stos
rcrb
add
insb
jl
or
ja
leave
jmp
pop
insl
shl
and
out
add
test
inc
and
dec
xor
scas
out
xchg
ret
sbb
cltd
clc
call
ret
lahf
sub
pop
lret
jae
inc
ficoml
repnz
fdivl
xchg
das
cmpsb
test
jns
add
scas
sub
jne
dec
mov
movsl
push
mov
jne
pop
jbe
pop
cwtl
xchg
ljmp
mov
ficomps
pop
lret
and
orl
adc
dec
inc
leave
push
ljmp
out
pop
test
xlat
sbb
sbb
fs
jb
testl
loope
addb
lahf
leave
orl
and
mov
jo
dec
call
inc
int3
sbb
test
add
adc
out
push
jge
pop
arpl
pop
inc
cmp
clc
pop
cmp
shll
cmp
dec
into
pop
xlat
mov
inc
xchg
mov
les
adc
jp
enter
jp
mov
or
inc
sbb
xchg
pop
sbb
mov
cld
test
cs
cmp
insl
jno
mov
push
into
inc
cmp
leave
jl
aam
pop
cmpb
bound
mov
mov
std
cli
or
shrl
bsf
out
add
push
arpl
jecxz
inc
jge
push
jmp
imull
mov
cld
rcrb
fcoms
aaa
out
mov
mov
mov
mov
pop
pop
addps
dec
dec
xlat
push
mov
gs
jl
mov
shll
shll
stc
push
pop
cmp
jns
fs
outsl
pop
int3
jg
rcl
out
add
xor
jbe
pop
les
insb
pusha
sub
arpl
mov
ja
std
lret
call
loope
sub
mov
jae
into
ljmp
shl
je
or
xchg
dec
jno
jne
loopne
xlat
ss
add
cmp
dec
lcall
lds
sbb
add
lahf
je
mov
leave
xor
sar
out
lcall
xchg
clc
jecxz
add
mov
jno
lahf
push
ret
jg
cmpsl
test
add
mov
mov
mov
push
mov
call
push
fstenv
aam
pmullw
sub
hlt
imul
cmp
cli
or
sub
pop
xchg
fcoms
add
push
rclb
push
pop
jno
and
mov
jmp
xor
pop
sbb
mov
and
push
lock
js
adc
lcall
imul
das
and
in
xor
outsb
test
movsl
lea
ss
pop
jmp
dec
rolb
aad
dec
shl
lcall
lcall
lcall
jae
js
outsl
js
add
pushf
cmp
pop
arpl
pop
subb
out
pop
sub
out
cli
mov
adc
scas
lret
inc
xorl
mov
loope
mov
push
xchg
hlt
fdivl
mov
lcall
xchg
pop
add
insb
mov
mov
sarb
lea
mov
xor
clc
dec
or
test
xor
fwait
push
jg
mov
lea
add
stos
mov
and
xlat
scas
imul
xor
mov
push
lods
xchg
xor
imul
sub
gs
lcall
int
cli
inc
or
push
jge
push
sar
repnz
mov
sti
fdiv
cmpsl
popf
sub
out
les
in
xchg
fwait
addb
cmp
in
dec
or
cltd
mov
addr16
icebp
ret
dec
jle
dec
aas
mov
cld
push
jb
mov
push
lock
mov
testl
push
mov
pop
adc
data16
test
add
adc
je
test
lcall
adc
outsb
pop
adc
mov
mov
lods
test
aaa
jp
roll
es
cmp
mov
faddl
xlat
xlat
addb
or
push
aam
inc
daa
fldt
push
mov
mov
push
xor
punpckldq
mov
gs
and
scas
pushf
mov
mov
in
stos
leave
add
ljmp
movhps
imul
jge
aam
into
cmpsl
adc
call
cmovle
call
xor
iret
or
sub
ja
sub
adc
or
xchg
shlb
lds
sbb
jb
mov
imul
incb
pushf
pop
insb
cmp
inc
and
xchg
test
mov
adc
and
mov
xchg
adc
sub
mov
mov
pop
sub
ret
scas
ljmp
outsb
scas
sbb
push
bound
xchg
aam
aas
gs
mov
ret
lret
fildl
mov
and
movsb
andl
inc
pop
test
fisubl
xchg
clc
xchg
sbb
adc
lods
or
popf
sbb
xor
mov
imul
add
ret
xor
cmpsb
in
mov
cltd
or
dec
loope
add
sti
das
inc
jno
mov
mov
loope
push
sbb
mulb
popa
push
cwtl
push
lods
outsb
pop
into
push
and
push
adc
inc
mov
push
jns
pop
add
hlt
inc
arpl
outsl
rclb
and
sar
cmpsb
add
add
sbbb
adc
lds
inc
roll
enter
cld
stos
mov
scas
xlat
inc
ja
clc
insl
lods
mull
jnp
jp
fisttps
xorl
push
cltd
jo
divb
jo
shrl
std
jecxz
sub
xchg
lcall
push
ud1
push
push
roll
and
adcl
mov
test
dec
mov
hlt
ds
and
dec
and
add
pop
mov
sub
fucomi
testl
jmp
cmp
xor
and
int
sbb
dec
mov
xor
insb
jae
repz
stos
dec
pop
outsb
cmp
je
add
push
cld
outsl
insl
cmpsb
push
pop
push
adc
mov
and
xchg
or
xchg
cs
xor
mov
icebp
cmpsl
and
pop
jne
cmp
frstor
mov
add
lods
inc
sub
enter
in
jne
std
cmc
divl
imul
sub
pop
push
add
call
sbb
pop
mov
push
push
stc
xchg
iret
icebp
pop
pop
cmp
and
cld
jne
add
lds
lods
push
xchg
add
jge
jecxz
adc
stos
mov
push
dec
stc
mov
xor
and
dec
ffree
pop
cli
test
ret
add
push
cmp
cmp
pop
xchg
dec
enter
lret
scas
cmp
jg
cld
lods
and
jp
popf
mov
test
ss
setno
sub
out
pop
arpl
jmp
mov
or
test
inc
xchg
and
mov
les
jmp
push
mov
in
dec
arpl
leave
inc
and
loopne
jecxz
faddl
in
sbb
xor
data16
std
mov
arpl
sub
into
aam
add
jo
lcall
ret
xor
jmp
int3
fdivrl
leave
addr16
fiaddl
jno
sbb
prefetch
and
cmp
jl
subb
loop
cmp
xchg
or
xchg
xorl
pop
scas
sub
jne
cmpsl
je
sub
inc
fsubrs
push
ret
mov
inc
jle
aad
sub
cmp
mov
js
seto
ret
sbb
cmp
stc
and
adcl
or
inc
js
lret
arpl
xchg
js
xchg
incb
cmpsl
push
and
outsl
mov
pop
jns
push
push
and
mov
dec
adc
inc
jne
stc
std
imul
scas
scas
xorl
cmpl
or
into
aam
daa
lea
in
ja
movsl
pop
fdivs
popa
sub
xchg
lcall
or
dec
rclb
movl
jne
hlt
imul
jg
cmp
xchg
add
push
movsb
and
pop
adc
aaa
cmp
pop
mov
inc
sti
mov
pop
sbb
push
and
rclb
stos
iret
cwtl
rcl
clc
lahf
pop
leave
mov
int
dec
or
int3
cmp
xor
ficoml
outsl
pop
lcall
fdivrp
cmc
push
push
jbe
mov
mov
cmp
ret
lret
fisttpll
cmpsb
insb
je
xlat
repnz
mov
notb
add
and
inc
in
das
push
mov
shlb
in
and
mov
popa
dec
idivb
sbb
stc
cmp
jmp
out
stos
pop
push
das
and
clc
mov
xchg
jge
xor
movsl
adc
rorl
xchg
fimull
pop
ficoms
mov
icebp
xor
ljmp
xchg
mov
movsl
add
enter
stos
iret
sbb
cmp
popf
xlat
pop
and
int3
insl
sub
outsb
enter
sub
addb
sub
repnz
outsl
sbb
das
les
xor
not
out
testl
inc
xchg
popf
jecxz
jge
pop
inc
mov
fwait
adc
pop
push
sub
fcmovb
scas
dec
jnp
in
into
out
andb
adc
fadd
sbb
jo
stos
push
gs
shl
mov
mov
popf
and
std
data16
dec
sahf
or
mov
scas
test
std
add
ljmp
mov
adc
pusha
fadd
adc
loop
shlb
mov
mov
in
dec
stos
and
push
ret
mov
in
pop
test
js
xchg
pop
push
inc
xor
cmpsl
out
clc
mov
pop
iret
mov
addb
es
mov
lret
xchg
subl
adc
loopne
lock
sub
adcl
xor
push
sarl
aam
xchg
ds
and
dec
test
xchg
loope
cli
jg
lret
aaa
mov
aam
or
mov
repnz
rorb
and
add
jg
js
and
out
cmc
sahf
insb
jl
xor
inc
and
mov
cmp
pop
mov
cld
add
into
loop
push
xor
add
lret
adc
aad
push
daa
test
inc
cmc
xchg
sar
xchg
cmp
ljmp
sbb
cmpl
sarb
and
push
cmp
lods
adc
mov
sub
jmp
sub
hlt
testl
cld
test
rorb
aas
ljmp
cmc
popa
xchg
inc
fsubs
in
push
lret
clc
sti
cld
inc
xchg
imul
push
mov
or
call
push
sub
clc
hlt
outsl
loop
xchg
out
test
adc
sbb
dec
mov
stc
mov
popl
movsl
cltd
push
enter
or
shll
mov
mov
dec
nop
xor
ja
scas
xor
pop
shll
mov
dec
inc
inc
fimull
xor
mov
jbe
cmp
shlb
lret
or
jnp
inc
iret
repz
insb
xor
mov
call
push
scas
fcmovnu
insl
xor
xchg
dec
jne
xchg
outsb
push
adc
daa
add
pop
fsubrs
cmp
inc
sar
and
mov
xor
pop
mov
clc
push
xchg
loopne
int
jbe
mov
pop
cmp
adc
mov
ss
loop
or
jecxz
loopne
or
pop
inc
std
sub
les
orl
movl
jae
mov
dec
je
sahf
bound
pusha
fsubrs
out
and
in
imul
or
mov
in
stos
push
andl
movsl
dec
fldcw
mov
pop
daa
and
push
pop
popf
mov
and
in
or
mov
sub
scas
cli
add
xchg
ds
xor
pushf
mov
mov
add
lahf
push
or
out
mov
and
hlt
mov
push
xlat
mov
idivb
test
cmc
sbb
cli
mov
pop
jno
shll
test
jge
dec
inc
hlt
test
cmpsb
mov
adc
lcall
or
out
loopne
inc
adc
test
mulb
lods
je
aaa
fdivrl
pop
xchg
aaa
in
cmpsl
int3
mov
jb
mov
xchg
push
popf
mov
adc
lret
mov
inc
rclb
scas
push
scas
fwait
test
insb
mov
push
mov
in
xor
sub
mov
mov
cmp
nop
sbb
sbb
lcall
add
sarb
test
sub
subl
arpl
sbb
ds
lahf
aad
bnd
data16
shrl
popa
lods
sub
dec
mov
gs
push
stc
fcoml
xorb
adc
dec
pop
push
add
in
xlat
add
fisubs
in
xor
in
icebp
adc
cmp
dec
ss
xorb
stos
sub
add
ljmp
jne
cli
fdivs
and
jecxz
lret
icebp
sbb
xor
xor
pop
pop
inc
cmp
dec
jmp
inc
fs
lret
jnp
mov
subl
and
outsb
loope
xchg
mov
daa
mov
sbb
inc
fisttpll
stos
inc
out
mov
or
pop
sub
fbstp
sti
lods
nop
arpl
dec
mov
mov
pop
and
and
imull
push
cmc
popf
mov
jno
lds
cwtl
repz
outsl
call
cmc
in
stos
push
hlt
loope
and
cwtl
jge
pusha
push
test
fists
xchg
fwait
insb
mov
vfrczss
jae
xor
jo
cmp
mov
aad
inc
or
sbb
jb
inc
out
repnz
pop
mulb
out
loop
movsl
push
nop
jae
es
pop
mov
xchg
mov
ljmp
lods
fdiv
jle
inc
and
push
jmp
hlt
lods
pop
std
mov
sub
jne,pt
pop
xchg
mov
lret
xchg
sub
sahf
imul
cli
fistpl
cmpsb
repz
mov
add
inc
pop
mov
sub
push
dec
imul
add
cmp
dec
push
sbb
pop
in
enter
aad
mov
out
aas
sbb
dec
ja
and
jne
in
out
scas
cmp
xchg
pop
mov
adc
test
push
addr16
sbb
popa
test
mov
test
lds
pop
lock
lcall
es
cmpsl
add
cli
cs
dec
sub
mov
xor
push
mov
std
jnp
sbb
add
lcall
hlt
and
mov
out
lret
and
xchg
lods
or
cwtl
xor
stos
hlt
pop
adc
add
jg
ss
test
loop
cmp
into
test
pushf
cmp
pop
lods
es
mov
xor
faddl
mov
xor
inc
outsl
sbbb
and
insl
out
mov
push
dec
lcall
icebp
and
ds
aad
xor
xchg
push
lods
mov
mov
mov
jmp
push
pop
fmuls
clc
mov
jne
stos
push
push
sahf
rol
insl
divl
aaa
and
mov
mov
insb
push
clc
mov
pop
mov
test
and
imul
xor
clc
fs
cwtl
push
mov
xchg
std
call
hlt
in
pop
clc
mov
out
aaa
push
mov
or
cmp
jne
mov
mov
cwtl
xchg
dec
jmp
jae
aad
xor
les
add
inc
idivl
xchg
ss
popf
les
cwtl
add
and
rcll
popa
jle
aam
int
pop
scas
sbb
xchg
jp
mov
stos
mov
aas
loope
jbe
int3
jb
ljmp
inc
sbb
push
cmpsb
jg
loope
mov
inc
mov
xor
xor
cmp
sbb
adc
loopne
test
addr16
lock
xor
jmp
nop
xchg
mov
sahf
xchg
popf
rolb
jmp
push
or
ja
enter
rcrl
movsl
mov
sbbl
mov
lds
xor
in
mov
lock
je
imul
dec
icebp
fbstp
mov
test
push
mov
pop
xlat
js
loop
xchg
jg
je
pop
mov
mov
lret
out
and
mov
sub
int
loop
jmp
xlat
stc
add
cmp
mov
lods
add
int3
je
pop
or
mov
cmp
push
xor
aam
pusha
cmp
or
dec
add
and
test
gs
je
sub
shl
push
ljmp
flds
les
iret
push
add
daa
lods
push
adc
cmpsl
ret
loope
dec
sbb
aam
int3
fidivrs
scas
cli
push
push
mov
mov
lea
jp
jp
in
or
js
iret
jnp
in
push
pop
stos
and
mov
outsb
dec
cmp
shl
lds
mov
inc
xchg
xchg
gs
mov
push
addr16
mov
mov
loopne
add
or
inc
jmp
mov
shrl
sarl
movsl
mov
in
xchg
adc
push
sub
push
enter
pop
in
std
outsl
add
add
cwtl
cmp
push
cwtl
ja
out
pop
in
mov
pop
sub
dec
mov
imul
mov
add
adc
xchg
dec
lcall
lds
jmp
aaa
test
shrb
fimuls
cmpb
lods
jns
sarb
loopne
mov
icebp
leave
push
sub
ficomps
xor
test
mov
sbb
dec
subb
jg
inc
mov
dec
nop
dec
dec
jl
jnp
test
out
pop
lock
mov
lea
mov
sub
test
clc
cmp
cmp
sub
jo
sbb
inc
mov
adc
inc
aam
out
add
lahf
and
fcmovu
mulps
fdivs
inc
test
mov
sub
fwait
xchg
sahf
hlt
dec
xor
into
push
popw
dec
test
les
mov
imul
lods
repnz
and
icebp
add
jge
incb
mov
lret
jns
push
jge
cmpsb
addr16
pop
add
or
jl
xlat
inc
mov
cmp
aam
sub
ljmp
movsb
lahf
push
scas
adc
mov
in
sub
mov
int
and
sub
repnz
jae
cltd
dec
adc
int3
jnp
dec
movsl
cld
js
ss
loopne
pushf
call
loop
jae
xchg
mov
mov
sub
in
jns
sub
scas
leave
mov
mov
test
adc
in
cmp
mov
lahf
push
punpcklwd
mov
lods
loop
lcall
rclb
push
enter
sbb
iret
cmp
inc
jle
lahf
jnp
push
cmpsl
lods
xlat
lock
or
hlt
out
outsb
loope
je
scas
popf
or
aad
cld
sbb
jmp
mov
sti
mov
lods
sub
xor
ds
mov
sti
inc
out
int3
xchg
pop
push
jae
mov
or
sti
mov
stc
inc
mov
sbb
les
pop
pop
enter
or
cmp
aad
pop
lret
lcall
mov
popf
adc
pop
and
cli
mov
fidivs
pop
cltd
enter
cmp
in
jae
mov
add
loop
data16
sbb
jmp
push
into
ret
sub
xchg
dec
mov
nop
subl
inc
mov
pop
mov
inc
movsl
je
or
or
inc
sahf
rclb
push
ss
or
scas
sbb
ljmp
fs
lods
ds
jl
in
push
or
mov
add
xor
add
pop
add
es
test
orl
jbe
inc
and
add
in
cwtl
movsl
outsb
dec
lods
neg
imul
aam
in
mov
ljmp
mov
or
mov
cmpl
out
cmp
mov
dec
push
fnstcw
imul
dec
iret
adc
imul
xor
xchg
sar
push
jp
imul
into
push
push
loopne
stos
push
jl
mov
les
fsts
push
jb
stos
jp
outsl
jbe
dec
lea
adc
stc
call
inc
ja
cmpsb
inc
pop
adc
loop
mov
iret
push
cmp
xorl
xchg
int
mov
jl
daa
fmul
cli
jg
not
cmc
cmp
jl
sti
les
cmpsb
daa
add
popf
sub
int3
outsb
iret
cltd
out
dec
loope
mov
pop
pop
mov
test
sbb
cltd
test
xor
add
push
daa
mov
rcll
sub
fcmovnbe
test
ret
mov
shrl
out
or
addr16
pop
iret
pop
bound
in
cmpsl
adc
xor
in
mov
aas
jmp
lock
adc
divb
mov
inc
filds
hlt
mov
mov
fdivr
xlat
mov
pushf
loopne
pop
ds
stos
cmpsb
mov
daa
inc
cld
cmpb
int
decb
add
sub
and
sbb
aas
shlb
inc
lock
ret
fsubrl
dec
add
add
in
stos
cwtl
push
daa
scas
cmpsl
inc
xorb
push
repnz
push
pusha
sbb
fistps
scas
adc
aad
xor
cli
adc
sub
push
in
shrb
daa
jbe
jge
andl
inc
pop
cltd
repnz
mov
sti
insl
adc
mov
jae
in
stos
aam
mov
adc
jae
scas
call
inc
sahf
outsb
out
dec
sbb
aad
pop
adc
aam
push
rcrb
xchg
jg
cmpsb
dec
call
shll
fisubrs
fs
xchg
ficompl
cmc
in
insl
push
sbb
push
sbb
popf
or
and
jl
mov
and
hlt
fwait
push
add
aas
divl
cmp
lret
and
xor
jmp
mov
gs
mov
lods
add
popa
bound
fsubl
cld
sbb
cs
js
dec
adc
daa
gs
pop
dec
pop
aam
mov
stos
fcomi
dec
leave
iret
icebp
loopne
or
mov
and
shrl
and
insl
or
dec
mov
mov
enter
test
test
lcall
dec
idiv
bound
jns
aam
es
sbb
cmp
call
cmp
and
fistps
imul
popf
loop
lcall
sbb
les
and
adc
mov
fldcw
xchg
jnp
lds
jmp
ret
int3
push
data16
mov
fbstp
mov
dec
jbe
sub
test
pop
mov
pop
xor
dec
mov
and
xor
jne
push
jae
push
aas
enter
out
les
cs
lock
aam
in
imul
test
mov
inc
shll
cmp
call
test
orl
insb
std
out
jl
mov
jl
add
dec
ljmp
addb
mov
cmp
dec
pop
popf
loop
adc
test
pusha
adc
test
in
xor
rorl
mov
lock
xchg
mov
xor
js
push
inc
and
fwait
cmpsb
je
cmp
inc
jbe
je
imulb
shll
or
cmp
aas
imul
aad
out
cmc
arpl
ss
stos
mov
xchg
in
sub
lock
stc
xchg
lcall
outsl
cwtl
subb
pop
xlat
jecxz
pop
fisubs
adc
xor
push
lret
shl
testb
in
call
ret
je
xchg
dec
das
fildl
mov
gs
or
push
lcall
pop
mov
push
or
mov
lcall
cld
inc
push
xor
mov
xor
ja
repz
xchg
jmp
sbb
mov
and
dec
xchg
sub
in
dec
pop
loopne
push
call
xchg
cwtl
dec
jge
adc
or
imul
loope
pop
push
stos
mov
mov
cmpsb
hlt
loope
push
mov
or
and
lods
dec
pop
pop
test
jmp
js
in
xchg
mov
cmc
push
mov
add
pop
pop
adc
aam
fsts
pusha
imul
notl
cmp
pop
loope
add
inc
cmpsb
jmp
cmp
and
movsb
mov
and
cmp
inc
aaa
jecxz
push
out
inc
xchg
inc
adc
shll
xor
test
dec
movzbl
sbb
push
cmp
inc
lds
les
lret
mov
sub
insl
mov
sbb
not
insb
loop
push
xchg
sub
jle
and
cli
out
push
xor
adc
adc
je
dec
daa
inc
and
cltd
rclb
fst
mov
sti
ss
inc
fisubs
mov
imul
adc
repz
pop
out
and
ret
in
sbb
push
dec
dec
fisubrl
addr16
add
mov
xor
or
sbb
mov
insl
or
cmp
inc
mov
and
and
leave
jno
push
rorl
adc
insl
insb
cmp
insb
icebp
xor
scas
push
dec
pusha
mov
pushl
jae
shr
mov
lahf
push
inc
mov
pminub
aad
xchg
mov
aaa
in
pop
adc
test
adc
jp
inc
ja
push
jae
mov
lret
aaa
fnstcw
and
or
repz
fwait
mov
inc
inc
jno
mov
inc
pop
xlat
shrb
jno
cltd
bnd
adc
sahf
in
enter
push
or
adc
and
push
fwait
out
push
mov
clc
and
xchg
test
addr16
xchg
mov
movsl
mov
jp
fs
and
jae
jg
pop
hlt
jo
pop
mov
mov
jp
dec
jne
out
sbb
in
shlb
enter
cli
adc
pop
icebp
xor
push
out
in
movsl
push
lret
xor
inc
mov
mov
in
xchg
jne
cmp
push
arpl
je
pop
adc
and
xor
xchg
cmp
div
or
testb
fcompl
xlat
sti
inc
cmpsl
fwait
dec
mov
jmp
lahf
int3
xor
ljmp
mov
sti
lret
aaa
mov
inc
xchg
test
popf
pushf
jo
or
ljmp
and
mov
xlat
and
push
das
shlb
sahf
outsl
cmp
jno
push
dec
xchg
cmp
mov
pop
iret
ret
mov
jo
push
push
mov
movsl
jae
imul
adc
adc
aam
mov
test
or
cmpsb
inc
xor
fwait
aam
push
cmc
mov
les
addr16
pop
sbb
adc
and
lret
jg
or
popf
bound
pop
int
dec
cmp
les
mov
movsb
mov
idivl
inc
popa
add
in
fnstenv
lods
push
ljmp
and
push
cmp
pop
or
jmp
lods
pop
iret
sarb
in
push
insl
scas
and
cwtl
mov
inc
inc
mov
inc
jo
lods
mov
dec
push
dec
outsb
int
daa
sub
cld
pusha
repnz
fistps
jmp
dec
fs
psrlw
negl
or
aam
jl
xchg
lds
push
lahf
jo
mov
gs
xor
stos
xchg
insl
daa
call
pop
dec
jns
inc
sahf
pop
iret
data16
fnstcw
xchg
movsb
push
test
cmp
xchg
mov
aad
mov
mov
pop
insl
rcrl
int3
test
push
mov
movsb
in
push
repz
iret
sbb
and
cmpsb
ss
fidivl
cmp
mov
pusha
js
shll
pop
adc
dec
cwtl
cmp
dec
adc
mov
sub
mov
pop
lahf
dec
pop
jmp
mov
fnstcw
fistl
hlt
inc
imul
leave
dec
lods
jno
fwait
mov
sti
imull
icebp
pop
ss
push
jnp
ljmp
push
adc
dec
ret
adc
mov
loop
ljmp
cwtl
or
mov
xchg
negl
daa
outsl
cld
push
or
pusha
sub
lods
shrl
dec
sbb
jle
gs
jb
push
and
mov
in
pop
mov
mulb
test
mov
ret
xor
or
add
xchg
outsl
popf
cld
jl
and
push
xorl
call
lret
arpl
push
mov
out
ss
add
adc
push
inc
sub
por
les
int3
push
cmp
or
int
adc
into
into
sub
in
cld
xchg
icebp
mov
mov
lahf
mov
sub
idivb
enter
dec
pop
aaa
nop
inc
lea
movsl
aad
sahf
xorl
and
insl
inc
ss
ds
addr16
pop
add
xor
xlat
jne
or
add
pop
xor
cmc
inc
mov
or
imul
xchg
jge
xchg
inc
adc
lods
mov
cli
push
push
lret
sub
inc
jne
aas
xor
xchg
mov
jmp
pop
rcl
test
adc
dec
push
fmul
dec
dec
decl
ljmp
xlat
cmp
arpl
adc
stos
add
xchg
jge
popf
int
scas
leave
sti
xchg
mov
dec
fldcw
add
sub
out
testb
push
imul
inc
jecxz
cwtl
les
stc
push
aam
pushf
xor
xchg
sub
cld
addr16
xchg
fwait
mov
frstor
dec
mov
pop
xchg
ja
das
scas
sub
stos
jmp
dec
insl
xchg
movsb
sub
push
es
mov
loop
or
inc
test
cs
sub
int
icebp
es
out
mov
inc
mov
ret
mov
lods
mov
cmp
xchg
pushf
in
les
add
cltd
popf
pop
push
stos
in
push
add
mov
xchg
xchg
dec
sarb
push
add
into
je
out
mov
add
xor
xchg
pop
push
cmp
ret
lods
mov
orl
xchg
pop
pop
jnp
inc
dec
sarl
lods
inc
std
sub
sbb
aaa
pop
jae
xor
adc
in
insl
xor
test
cmp
jge
mov
into
or
jbe
pop
bound
add
pop
and
dec
xor
and
mov
clc
mov
jmp
and
ljmp
in
cwtl
arpl
lahf
mov
push
ljmp
pop
jno
mov
mov
mov
mov
int
adc
jg
xor
xor
xor
adc
ljmp
inc
lods
or
roll
dec
out
dec
or
test
adc
adc
mov
mov
mov
mov
int3
pop
outsb
fs
scas
adc
xchg
jmp
lret
notb
sub
das
psubusw
pop
mov
inc
pop
dec
cmpl
pushf
shlb
cmp
fisubrl
xchg
sub
sbb
gs
adc
cmp
adc
out
int3
mov
pop
divb
andl
jno
fsubl
adc
shll
sub
fdivl
push
pushf
leave
shrb
mov
dec
hlt
dec
inc
lret
stos
adc
and
dec
jle
pop
push
lds
xchg
cmp
mov
mov
nop
jmp
push
jnp
lods
jae
xchg
jns
pop
imul
xchg
sti
or
inc
or
adc
inc
xchg
jl
push
clc
cmp
jbe
popf
jb
mov
cmp
loop
pop
push
lods
mov
sarl
cli
pusha
pop
dec
xor
lret
ss
shr
push
insb
ds
cmp
add
decb
aaa
or
jge
fs
loope
xchg
push
pop
enter
lods
xchg
ret
jle
inc
jbe
repz
sub
jg
fadd
mov
mov
or
les
arpl
sub
xchg
mov
pop
inc
mov
iret
decb
out
clc
idiv
mov
imul
mov
and
mov
and
clc
jmp
loope
rorb
lcall
cmp
push
add
out
lods
add
cli
pop
loopne
movsb
rclb
pushl
daa
adc
out
mov
mov
cld
xor
mov
cltd
pop
stos
cltd
lock
lds
mov
inc
clc
sbb
sub
push
or
idiv
faddp
aas
sub
mov
adc
movups
pop
ljmp
fldenv
xchg
gs
pshufw
dec
lret
and
insl
lcall
and
cld
and
stos
insb
jmp
int
scas
and
jmp
or
mov
lret
mov
jmp
sub
xor
pushf
xorb
std
xor
rcll
or
aad
jns
sub
push
and
ret
xor
js
movsl
push
movsb
jecxz
mov
fnstenv
aam
push
mov
sub
ss
or
jl
mov
lea
test
mov
inc
rclb
mov
leave
dec
mov
mov
add
add
adc
jg
pop
scas
orb
rorb
mov
sub
sub
or
aaa
mov
addr16
ja
repnz
roll
lock
push
hlt
pop
mov
lock
inc
jecxz
push
enter
hlt
out
mov
and
enter
rcrb
xchg
or
mov
mov
cltd
xchg
out
mov
or
push
cs
leave
test
mov
imul
lea
bts
or
outsl
sbb
jne
mov
movsb
repz
or
push
out
lds
aas
int3
push
push
dec
in
push
rcl
daa
fmulp
test
mov
mov
pop
xchg
xchg
mov
push
loopne
test
push
imull
shll
pop
je
fisttpll
popa
jne
insl
inc
push
test
xor
fmuls
inc
xor
adc
shll
sbb
mov
ja
mov
push
inc
lock
cmpsl
div
mov
or
lods
or
dec
test
push
cmp
add
mov
inc
adc
pop
pop
inc
xchg
fisubl
out
sti
xchg
in
in
push
inc
in
mov
cmpsb
das
test
and
in
inc
sbb
iret
imull
das
lods
dec
push
jns
adc
adc
mov
iret
dec
xorl
jle
ljmp
test
mov
push
in
xor
in
into
enter
xchg
test
pop
in
hlt
xchg
addr16
call
xor
xchg
dec
ds
fdivl
cmp
cmc
jne
outsl
es
jns
mov
aas
xchg
loopne
aam
jns
and
imulb
insl
lahf
dec
and
test
orl
daa
and
jmp
data16
jecxz
leave
push
xor
mov
push
outsb
scas
lds
pop
lahf
sbb
rep
push
cmc
outsl
mov
leave
lea
jg
mov
je
and
sub
or
mov
or
ret
mov
xchg
sub
dec
sbb
xchg
dec
out
mov
or
sbb
fsubrs
cmp
xor
mov
leave
insb
lods
pop
nop
pop
dec
and
pop
cmp
fnstsw
push
call
inc
lea
fcmovb
mov
add
rorb
push
jo
jmp
lahf
inc
test
imul
lret
rorl
fwait
dec
pushf
pop
decl
fucomi
repnz
pop
mov
je
add
aam
in
jnp
test
dec
jp
jle
es
and
popa
jmp
adc
cmp
sbb
scas
cmp
sub
insl
push
inc
or
mov
mov
jge
push
add
cmpsb
out
jmp
mov
xchg
cmp
lea
xchg
sub
xor
int3
add
inc
pop
xor
push
mov
insb
push
data16
out
mov
mov
popa
imul
push
inc
outsb
test
outsb
pusha
cltd
nop
test
sub
hlt
jmp
or
push
jecxz
xor
dec
mov
push
jp
mov
movsl
push
testb
jae
arpl
pop
fsubrs
inc
dec
test
mov
xchg
jge
jae
cmp
add
xchg
adc
lret
or
mov
arpl
xchg
dec
lret
fistl
sub
xor
imul
xchg
xchg
pop
lea
rcr
push
bound
fcomi
ret
sub
xchg
push
cmp
adc
add
xlat
int3
dec
mov
adc
in
popf
in
xchg
sbb
lock
or
mov
inc
in
pop
ret
mov
imul
dec
or
mov
nop
cmpsb
lock
std
and
xchg
mov
fs
inc
xor
test
sahf
push
leave
mov
add
adcl
mov
mov
fistpll
pusha
or
push
repz
xchg
aas
stos
and
and
movsl
into
movsb
add
pop
add
push
shlb
shr
aam
outsb
test
int3
stos
jb
push
fwait
cltd
dec
outsb
xor
clc
mov
fadds
rcr
xchg
sub
adc
movsb
xlat
mov
int
out
vmovss
aaa
sub
sbb
scas
mov
pop
hlt
insb
hlt
sub
cli
add
popf
in
pop
push
arpl
sti
outsb
mov
jmp
gs
dec
add
inc
sub
pop
mov
aam
xchg
xor
cli
nop
aad
push
xor
push
jne
pop
nop
mov
or
xor
cltd
scas
loop
out
outsl
fdivp
adc
adc
js
imul
test
lods
gs
inc
adc
add
repnz
and
xor
mov
mov
cmpsb
xchg
cli
loopne
adc
push
daa
stos
mov
jecxz
les
pushf
adc
ljmp
mov
clc
ljmp
divl
arpl
push
not
inc
repnz
stos
sub
jmp
pushf
mov
loop
rclb
pop
push
loopne
in
orl
mov
js
imul
mov
adc
xorb
sub
insb
dec
int3
adc
mov
imul
xlat
jb
fwait
adc
pushf
decl
test
addr16
jecxz
inc
call
clc
mov
cli
bsr
inc
sub
cltd
addl
sbb
and
xchg
leave
aam
test
daa
clc
les
pushf
push
jns
mov
sbb
lcall
popa
sbb
pop
inc
dec
aas
xor
mov
xor
test
cmp
outsl
filds
mov
push
pop
mov
imull
xchg
mov
jmp
mov
out
inc
out
sub
int3
in
cmp
and
sti
mov
cmp
loopne
xor
test
sbb
popa
aaa
mov
cmpsb
adcb
sbb
add
push
mov
xor
into
push
dec
sbb
leave
mov
mov
inc
test
insb
fstpt
xor
pop
out
or
xchg
adc
pop
sub
test
inc
ficomps
jg
pop
lahf
pop
pop
add
in
adc
shlb
sbb
and
je
outsb
cltd
mov
jle
cmp
inc
leave
xchg
stos
adc
push
xchg
clc
test
sbb
pop
js
xor
insb
mov
in
stos
aas
mov
adcb
shrb
pop
aam
repz
inc
mov
fsubrp
jae
cld
mov
mov
cmp
stos
imul
movsb
xor
cmp
cmp
iret
xor
mov
test
mov
push
mov
push
add
pushf
dec
mov
lret
jp
xor
out
mov
movsb
mov
jo
scas
data16
jecxz
mov
xchg
in
ljmp
xor
push
incl
pop
js
pop
scas
rcrb
lds
adc
xchg
add
mov
aad
and
or
fdivs
les
sbb
cmpsl
lock
nop
or
mov
test
rcrb
dec
push
sbb
push
mov
ss
clc
enter
shrb
in
sbb
dec
sti
adc
mov
out
movsl
xchg
int
jmp
jb
or
out
lods
mov
inc
cli
cs
mov
jle
cwtl
test
dec
sub
xor
gs
push
ret
adc
insl
inc
cmp
sbb
sbb
in
fwait
or
pop
fstpl
or
adc
insl
cmpsl
loopne
pop
pop
cmp
pusha
push
fdivrl
insb
add
sub
cmpsl
stos
lods
pop
mov
lds
inc
jmp
mov
sbb
mov
xor
cmp
sbb
jns
rolb
inc
jbe
or
jne
sbb
test
mov
cmp
outsb
adc
dec
lcall
push
push
icebp
daa
adc
or
push
push
push
dec
addr16
gs
pop
inc
out
dec
push
pop
pushaw
sahf
insb
inc
int
fisubrs
std
cmpl
add
cmp
pop
pop
sahf
sarl
sbb
xchg
push
fsubl
sbb
push
and
xchg
test
cmp
stos
push
mov
mov
and
dec
jns
jmp
xchg
fs
mov
mov
outsb
sbb
test
jne
out
xor
les
add
mov
hlt
rcll
retw
cmp
inc
adcb
cmp
xchg
mov
adc
push
mov
inc
add
rol
push
or
mov
faddl
inc
cwtl
xor
pop
pop
and
fidivs
insl
adc
sbb
mov
cwtl
pop
cmp
imul
adc
xor
lds
xchg
roll
push
cmp
fwait
fdivrs
xor
mov
and
movsl
xor
aam
arpl
adc
dec
or
dec
hlt
aam
xchg
jge
pop
cmp
enter
xorb
gs
gs
adc
std
loopne
shrl
inc
and
mov
add
popl
lcall
into
xor
jbe
arpl
mov
mov
gs
sbb
cld
xor
and
xlat
cmp
fisttpll
sbb
les
cmpsl
jne
and
jns
fildll
rcrl
loope
lods
adc
fptan
sub
sub
sbb
jne
lock
test
lret
fisttpl
xor
fsin
sub
outsb
pop
sbb
lcall
push
out
imul
push
jl
fsubr
and
pop
data16
nop
lcall
mov
sub
or
insb
test
lods
sbb
lods
shlb
dec
and
adc
sar
push
mov
sbb
ret
mov
jmp
inc
and
test
jg
gs
and
jnp
sbb
jns
iret
aad
das
push
sbb
lret
fsubl
xor
jg
daa
mov
sbb
jae
sbb
out
ljmp
mov
pop
push
and
adc
adc
sbb
loop
daa
outsl
mov
int
and
cs
ja
inc
mov
jg
scas
xorb
cltd
hlt
es
mov
push
pop
dec
es
jle
test
cmpsb
mov
out
out
popf
inc
sti
rcrb
lret
jno
cmp
xor
cltd
jnp
or
dec
lods
mov
xor
fwait
and
sbb
pop
or
out
call
test
ret
ja
xchg
mov
imul
jmp
call
daa
cli
addr16
and
jno
cld
je
mov
jo
stc
lock
lret
cwtl
dec
pop
lcall
jb
fists
pop
scas
test
dec
push
rcrl
push
outsl
jne
mov
movl
dec
xchg
cltd
das
inc
adc
divl
or
jge
in
pop
mov
ja
icebp
pushf
or
js
jns
in
adc
jmp
lcall
ds
pusha
shr
lret
push
outsb
popl
jmp
scas
inc
in
jnp
pop
cmc
push
or
xchg
popa
rcrl
mov
in
clc
ja
xchg
mov
hlt
push
ja
sti
testb
sub
es
inc
xor
mov
push
lret
pop
ljmp
xchg
xchg
xchg
sub
imulb
cmp
mov
adc
pop
mov
dec
addr16
aad
or
fdivp
inc
jno
cmpsb
clc
mov
and
sub
push
mov
or
stc
int
mov
jne
add
mov
xchg
orb
mov
subl
js
dec
sub
daa
mov
inc
in
push
pop
mov
xor
mov
in
ret
mov
mov
sub
push
dec
push
jl
mov
int3
jp
push
mov
ret
lret
imul
cwtl
inc
pop
insb
daa
or
call
cmp
stos
gs
push
pop
sub
jne
insl
dec
mov
orl
jl
dec
pop
xor
mov
xchg
push
jo
jno
pop
add
int
mov
movsl
movl
adc
cmp
or
add
and
stc
and
sbb
das
cwtl
push
in
imul
pushf
sahf
rclb
push
icebp
sti
jge
push
mov
adc
dec
int
in
sbb
loopne
xor
dec
fisttps
ss
inc
xor
xchg
inc
lcall
mov
dec
sub
inc
imul
adc
xor
shl
std
fs
insl
cmp
test
pop
cmpsb
aaa
xor
loopne
shlb
test
xor
ja
pop
inc
add
dec
arpl
adc
ficoms
inc
dec
xor
inc
int
mov
xor
push
lahf
aas
cmp
mov
push
scas
fs
fbld
dec
inc
mov
and
add
.byte
add
or
or
add
add
add
addb
addb
add
mov
add
xor
add
pusha
add
addb
add
loopne
add
dec
add
orb
add
jo
add
add
add
add
add
cwtl
add
addb
add
mov
add
enter
add
add
add
add
loopne
add
clc
add
addb
add
adc
add
sub
add
add
push
add
add
add
add
pop
add
xorb
add
add
mov
add
mov
add
add
add
add
add
xorb
add
add
cmpb
add
add
cmpb
add
add
add
add
xor
adcb
add
dec
add
adcb
add
pusha
add
adcb
add
add
add
add
add
add
nop
add
addb
add
test
add
rolb
add
add
fadds
addb
add
jg
add
lock
orb
add
or
or
xchg
add
add
add
add
cmp
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
loopne
add
clc
add
or
add
add
adc
add
sub
add
inc
push
add
pop
push
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
add
add
or
add
pop
add
xor
add
dec
pop
add
add
add
and
add
jg
add
js
add
nop
pop
add
add
add
add
add
test
add
add
add
mov
add
add
add
enter
add
add
add
add
fadds
add
add
add
call
add
add
add
clc
pop
add
add
add
or
add
add
add
sbb
add
add
add
sub
add
add
add
cmp
add
add
add
dec
or
add
add
add
add
pop
or
add
add
add
add
push
add
add
add
js
add
add
add
mov
add
add
add
cwtl
or
add
add
add
add
test
add
add
add
mov
add
add
add
enter
add
add
add
add
fmuls
add
add
add
call
add
add
add
clc
or
add
add
add
add
or
add
add
add
sbb
add
add
add
sub
add
add
add
cmp
add
add
add
dec
or
add
add
add
add
pop
or
add
add
add
add
push
add
add
add
js
add
add
add
mov
add
add
add
cwtl
or
add
add
add
add
test
add
add
add
mov
add
add
add
enter
add
add
add
add
fmuls
add
add
add
call
add
add
add
clc
or
add
add
add
add
or
add
add
add
sbb
add
add
add
sub
add
add
add
cmp
add
add
add
dec
or
add
add
add
add
pop
or
add
add
add
add
push
add
add
add
js
add
add
add
mov
add
add
add
cwtl
or
add
add
add
add
test
add
add
add
mov
add
add
add
enter
add
add
add
add
fmuls
add
add
add
call
add
add
add
clc
or
add
add
add
add
add
add
add
adc
xor
add
shlb
xor
add
adc
add
add
dec
data16
mov
add
inc
cmp
add
add
mov
add
sarb
adc
pop
add
add
inc
adc
pop
add
add
add
add
inc
adc
pop
add
add
inc
adc
pop
add
add
add
add
inc
adc
pop
add
add
dec
adc
pop
add
add
adc
in
add
clc
insl
adc
mov
add
add
add
add
add
add
jo
add
add
dec
adc
call
add
add
add
add
dec
adc
sub
add
pusha
jp
add
add
add
adc
sub
add
fcomps
add
add
call
add
add
pop
adc
cwtl
add
add
adc
jp
add
fcomps
add
add
add
add
add
adc
scas
or
add
pop
adc
mov
add
mov
add
add
adc
mov
add
adc
add
add
add
pop
adc
mov
add
push
add
add
add
add
jno
add
add
pusha
jb
add
add
add
add
add
adc
inc
add
add
je
add
add
sarb
add
add
jbe
add
add
add
add
add
jp
add
add
clc
adc
adc
add
test
adc
adc
add
add
add
add
add
adc
and
add
clc
dec
adc
adc
add
cmp
add
add
or
push
add
pop
add
add
inc
add
add
add
inc
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
sub
add
inc
add
add
add
add
add
add
add
loopne
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fldl
add
add
add
fldl
add
add
add
fst
add
add
add
fst
add
add
add
fmuls
mov
mov
mov
fisttpll
mov
fdivr
jnp
jnp
jnp
fdivr
sti
sti
sti
sti
sti
sbb
mov
mov
mov
mov
fdiv
mov
mov
mov
fdivr
mov
sbb
jnp
jnp
jo
fdivr
sti
sti
sti
sti
lock
jnp
jnp
jnp
fdivr
sti
sti
sti
sti
sti
sbb
mov
mov
addb
mov
mov
mov
mov
fdivr
mov
orb
or
sti
sti
or
jnp
jnp
fdivr
sti
sti
sti
sti
sti
orb
pop
orb
pop
sbb
mov
mov
mov
fdivr
mov
orb
mov
mov
jnp
jnp
jnp
fdivr
sti
sti
sti
sti
sti
sbb
mov
mov
mov
fdivr
mov
sbb
incl
incl
jg
incl
incl
js
mov
js
mov
clc
mov
mov
fldl
fstp
fisttpll
fstp
fisttpll
fstp
fisttpll
fstp
fstp
mov
fstp
mov
fstp
mov
fstp
mov
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
sub
add
and
add
or
add
add
add
add
add
faddl
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
clc
mov
mov
mov
lock
add
decl
clc
incl
add
add
clc
decl
clc
ja
ja
lock
add
mov
lock
clc
xchg
xchg
mov
decl
clc
xchg
mov
add
jnp
decl
clc
xchg
mov
jnp
jnp
decl
clc
xchg
mov
jnp
jnp
decl
clc
xchg
xchg
jnp
jnp
clc
decl
clc
ja
ja
jnp
jnp
decl
clc
incl
jnp
jnp
clc
mov
mov
mov
jnp
jnp
add
add
add
add
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
mov
cmpb
add
mov
cmpb
add
mov
xorb
add
mov
cmpb
add
mov
cmpb
add
mov
cmpb
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
adc
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
mov
addb
mov
add
js
or
mov
or
mov
or
mov
or
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
js
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
adc
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
adc
add
adc
add
add
add
add
add
lock
add
push
add
les
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
adc
add
adc
add
add
add
add
add
lock
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
adc
add
adc
add
add
add
add
add
lock
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
ud0
incl
add
incl
ud0
incl
add
incl
ud0
incl
add
push
add
add
incl
add
push
add
add
incl
add
push
add
add
incl
add
incl
ud0
incl
add
incl
ud0
incl
add
incl
ud0
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
adc
add
add
add
add
add
lock
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
add
add
incl
add
push
add
add
incl
add
push
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jae
jne
arpl
push
add
and
arpl
and
popa
data16
gs
push
add
and
imul
pop
pop
dec
dec
pop
push
push
dec
dec
push
push
inc
push
pop
push
inc
push
dec
push
push
inc
inc
push
or
imul
inc
inc
pop
pop
dec
dec
pop
dec
dec
inc
pop
push
inc
push
dec
push
push
inc
inc
push
or
imul
inc
inc
pop
pop
dec
dec
pop
push
push
inc
inc
dec
inc
push
pop
push
inc
push
dec
push
push
inc
inc
push
or
imul
inc
inc
pop
pop
dec
dec
pop
push
push
dec
push
inc
push
push
pop
pop
push
inc
push
dec
push
push
inc
inc
push
or
imul
imul
pop
pop
push
inc
push
dec
push
push
inc
inc
pop
inc
dec
dec
sub
jl
and
imul
pop
pop
push
inc
push
inc
pop
inc
dec
push
sub
fs
dec
dec
xor
or
inc
push
inc
inc
inc
and
and
or
popa
insl
popa
and
fs
jo
sub
xor
sub
imul
dec
dec
xor
or
arpl
and
insb
arpl
pop
popa
data16
gs
jb
and
and
and
and
and
and
das
and
popa
outsb
fs
jb
and
insl
jo
outsb
outsb
je
or
imul
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
jo
add
add
add
add
add
mov
add
pop
add
ja
jo
or
sti
sti
sti
pop
jo
add
ja
add
jo
mov
jo
add
ja
add
sti
sti
sti
sti
sti
lock
add
add
add
add
mov
mov
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
or
movswl
mov
add
sysret
or
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
pop
ja
pop
add
add
add
add
mov
mov
add
add
lock
sti
sti
sti
sti
lock
mov
mov
add
sti
sti
sti
sti
movswl
add
add
cld
pop
push
pop
jmp
add
rolb
add
add
add
add
add
add
add
jo
add
add
add
add
clc
addb
stc
addb
inc
pop
jmp
ud0
clc
aas
incl
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
incl
add
push
add
add
decl
incl
lock
decl
lock
out
popl
add
push
out
popl
add
push
decl
decl
incl
push
add
add
incl
add
incl
add
push
add
add
incl
add
addb
add
add
add
add
add
add
add
add
add
pop
add
addb
add
pop
add
cmpb
add
incl
add
add
add
add
adc
add
add
sub
add
add
add
add
rorb
addb
add
add
add
add
add
add
add
add
jo
mov
pop
fisttpll
or
mov
dec
add
add
add
add
add
add
add
and
or
incl
push
cmp
add
add
add
add
add
push
add
add
sub
or
mov
outsb
add
add
incl
add
add
add
push
add
add
loopne
pop
add
add
add
incl
jg
add
add
sub
add
add
add
add
add
add
add
add
add
or
inc
add
incl
push
xor
testb
add
add
add
addb
push
add
add
dec
add
add
incl
add
add
add
push
add
add
cmc
add
adc
or
incl
add
add
add
add
add
push
add
add
or
xor
jne
dec
add
incl
fisttpll
dec
dec
cmp
jmp
jae
sub
add
add
add
inc
add
incl
add
add
add
add
add
add
inc
add
add
jmp
add
add
add
add
add
add
add
add
adc
inc
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
dec
add
incl
add
add
add
add
add
add
dec
add
add
ljmp
add
add
add
add
add
add
add
adc
dec
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
pop
add
incl
add
add
add
add
add
add
pop
add
add
dec
add
incl
add
add
add
add
add
pop
add
adc
dec
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
imul
add
add
incl
add
add
add
add
add
add
imul
dec
add
incl
add
add
add
add
add
add
add
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
pop
add
push
add
add
popl
xor
jbe
dec
add
incl
add
add
add
or
add
add
add
add
add
incl
xor
jle
pop
add
add
or
add
add
add
add
add
incl
lea
push
sub
push
mov
add
add
add
push
add
add
cltd
add
xor
or
popa
add
incl
pop
dec
dec
cmp
add
add
add
add
add
incl
gs
push
push
aam
cmp
add
add
add
andb
push
add
add
xlat
add
daa
add
pop
add
incl
add
add
add
add
add
add
or
adc
pusha
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
pop
add
push
add
add
or
xchg
xchg
imul
incl
push
add
add
add
add
add
add
add
add
incl
push
jne
mov
add
add
add
add
add
push
add
add
inc
add
add
incl
add
add
add
push
add
add
adc
cmpsb
add
add
incl
push
inc
bound
addr16
add
add
or
add
add
add
add
add
incl
push
jne
add
add
or
add
add
add
mov
cmp
or
push
add
incl
push
dec
mov
xor
add
add
add
add
add
add
add
add
add
add
add
lret
pop
jne
notl
add
add
add
add
add
rolb
add
push
add
incl
add
add
add
add
add
mov
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
add
add
add
incl
addr16
notl
add
add
add
add
add
into
add
add
push
add
incl
add
add
add
add
add
int3
add
adc
push
add
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
add
incl
push
xor
jle
pop
add
add
add
add
add
add
add
add
incl
push
std
dec
jo
cmp
add
add
andb
push
add
add
roll
xchg
add
add
inc
add
incl
add
add
add
add
add
add
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
incl
push
dec
dec
outsb
jg
add
add
add
add
push
add
add
roll
cmpsl
add
add
push
add
incl
add
add
add
push
add
add
cltd
add
add
incl
cwtl
push
bound
jne
notl
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
add
incl
push
int
or
mov
inc
push
ds
jne
jp
jge
add
add
add
add
add
add
add
add
add
incl
push
sti
insl
mov
push
add
add
add
add
add
add
add
or
incl
cwtl
push
bound
dec
mov
sub
cmp
add
subl
add
add
add
add
add
stc
add
add
pop
add
incl
add
add
add
add
add
add
add
insl
add
arpl
je
insb
add
pop
add
jo
add
ja
outsb
add
add
add
add
jo
imul
add
add
add
add
add
add
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
add
add
add
incl
insl
sub
add
sub
add
add
add
rorb
addb
add
add
add
add
mov
add
add
bound
cmp
add
or
mov
dec
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
adc
daa
add
jmp
add
add
add
add
add
push
add
add
inc
add
add
add
add
add
incl
pop
sub
add
sub
add
add
add
add
add
add
incl
insl
sub
add
sub
add
rorb
addb
add
add
add
add
loopne
insl
add
add
add
sub
bound
or
testl
add
add
add
add
add
add
push
add
add
push
add
cmp
adc
incl
imul
push
sub
add
sub
adcb
add
or
daa
add
add
add
insl
add
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
push
add
outsl
add
jb
add
jae
xor
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
or
addb
add
push
add
add
add
add
add
add
mov
incl
add
add
add
adc
push
add
add
pop
add
add
add
add
incl
add
add
add
push
add
add
or
or
in
sbb
push
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
aas
add
aaa
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
add
incl
insl
sub
add
sub
add
rorb
addb
add
add
add
add
add
add
add
add
mov
incl
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
push
add
add
push
add
add
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
add
incl
insl
sub
add
sub
add
les
rolb
add
add
add
add
add
add
arpl
push
fisttpl
jo
or
testl
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
incl
push
pop
dec
sbb
push
sbb
add
add
add
pop
add
add
add
add
incl
imul
push
add
add
add
add
add
incl
push
out
jbe
jbe
incl
add
add
add
push
add
add
add
add
add
incl
bound
std
dec
jo
sbb
add
add
add
add
add
incl
push
jne
notl
incl
add
add
add
push
add
add
add
add
add
incl
add
add
add
push
add
add
add
add
add
incl
add
add
add
push
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
mov
or
repnz
incl
add
add
add
push
add
add
add
mov
or
repz
incl
add
add
add
add
or
addb
add
add
add
add
repz
add
add
add
add
add
add
adc
push
add
add
add
pop
add
add
incl
add
add
add
add
sub
push
add
jmp
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
incl
add
add
sgdtl
add
add
dec
add
add
cmc
add
incl
add
add
add
add
or
addb
add
or
add
add
and
out
add
add
add
or
mov
dec
add
add
mov
add
add
add
add
incl
add
add
mov
add
add
add
add
incl
add
add
add
inc
add
add
push
add
add
add
lods
sub
add
sub
add
add
add
adc
pop
add
incl
imul
sub
add
add
push
add
add
pop
add
add
add
add
add
incl
jp
add
add
sub
add
add
add
add
add
add
add
add
incl
push
sub
add
sub
add
add
add
int3
add
add
add
incl
push
sub
add
sub
add
add
add
add
add
add
add
add
add
add
incl
pop
add
add
sub
add
add
add
add
add
adc
add
incl
insl
add
add
sub
add
rorb
addb
add
push
add
add
add
add
add
add
pop
add
gs
add
or
mov
dec
add
add
add
add
add
add
add
or
incl
gs
jo
outsb
arpl
xchg
pop
add
incl
add
add
or
push
add
add
mov
add
incl
add
add
add
push
add
add
pop
add
rolb
or
stc
add
incl
add
add
add
add
or
add
add
incl
add
add
add
push
add
add
push
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
add
incl
insl
sub
add
sub
add
addb
xorb
add
adc
add
add
add
add
add
add
push
xchg
cltd
mov
push
pop
or
inc
add
add
add
popa
add
add
jo
add
add
push
add
add
add
push
ds
mov
push
pop
or
inc
add
add
add
popa
add
add
add
outsb
add
add
add
add
add
add
dec
add
mov
or
inc
add
add
add
add
add
add
add
dec
add
mov
or
inc
add
add
add
add
add
add
add
dec
add
cwtl
or
push
add
add
push
add
add
add
or
add
add
dec
add
cwtl
or
push
add
add
inc
add
ja
outsb
add
add
add
add
push
pop
arpl
pop
or
inc
add
add
add
add
adc
add
add
mov
add
add
push
andb
inc
add
add
push
xchg
cltd
push
pop
mov
or
inc
add
add
add
outsl
add
add
add
add
andb
dec
add
add
push
ds
push
pop
mov
or
inc
add
add
add
outsb
add
add
add
andb
push
add
add
dec
add
pop
mov
or
push
add
imul
sub
push
add
bound
add
add
or
add
dec
add
pop
mov
or
push
add
bound
das
add
outsb
add
add
add
add
or
add
dec
add
mov
add
add
andb
inc
add
add
dec
add
mov
add
add
add
add
add
add
add
add
cs
insl
mov
mov
or
inc
add
add
add
add
add
add
add
fcoms
push
fs
mov
add
add
je
jb
insb
add
add
add
add
add
add
bound
stos
mov
push
fs
mov
push
pop
add
addb
add
add
add
outsb
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
add
add
add
addb
adc
add
add
movsl
sub
add
add
add
sub
add
add
adc
add
addb
lds
add
addb
add
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
std
clc
push
jg
jmp
aas
pushl
incb
add
cld
add
incb
add
lcall
pushl
aas
adc
sbb
cld
cmp
cmp
call
jg
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
xor
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
pop
incl
add
incl
add
incl
add
incl
add
insl
addb
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
cld
add
cld
add
clc
add
clc
add
lock
lock
jmp
add
jmp
add
inc
add
incl
add
decl
add
clc
add
clc
add
clc
pop
clc
jg
clc
jg
clc
jg
clc
jg
cld
incl
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
pusha
add
add
add
add
add
adc
add
sbb
add
pop
cld
add
pop
rolb
pop
rolb
pop
rolb
pop
rolb
pop
addb
pop
add
add
add
add
add
sbb
add
adc
add
incb
incb
incb
incb
incb
incl
incl
pop
incl
pop
incb
pop
dec
push
pop
inc
push
pop
inc
push
add
rcrb
inc
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
shlb
jg
jo
inc
clc
add
sar
inc
inc
dec
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
pop
addb
add
add
test
add
leave
dec
add
test
dec
add
or
add
rolb
add
cmp
add
addb
nop
jl
add
add
add
jg
add
pop
add
js
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
addl
pop
incl
add
incl
add
add
add
add
add
add
add
add
add
xor
add
add
adc
and
add
add
mov
add
add
add
add
add
sub
add
inc
add
add
add
add
add
add
add
jl
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
clc
mov
mov
clc
clc
dec
mov
push
js
jp
mov
jo
add
js
jp
mov
mov
pusha
xchg
incl
mov
mov
xchg
add
add
mov
mov
mov
faddl
lock
mov
mov
clc
addb
add
add
orb
xchg
incl
invd
jp
or
or
add
add
jp
or
or
js
mov
mov
str
jp
mov
mov
clc
add
jo
push
or
addb
xchg
str
lock
or
or
or
jo
or
or
js
mov
mov
orb
mov
mov
mov
str
or
addb
xchg
add
incl
add
or
or
or
incl
or
or
js
mov
loopne
add
add
add
mov
clc
cmp
push
mov
addb
xchg
xchg
add
add
mov
mov
xchg
incl
mov
mov
mov
ret
mov
add
js
jp
stos
stos
stos
stos
clc
mov
push
js
jp
stos
stos
stos
stos
clc
jp
stos
stos
stos
stos
clc
cmp
mov
ja
mov
mov
ja
mov
ja
ja
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
ja
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
mov
mov
mov
ja
mov
mov
ja
push
vpmacssdql
xchg
mov
jg
xchg
mov
jg
and
mov
mov
clc
mov
clc
mov
clc
mov
clc
inc
jp
mov
jp
add
pop
mov
jp
mov
xchg
add
xchg
jp
ja
ja
clc
add
mov
jp
add
pop
mov
jp
mov
xchg
add
xchg
jp
ja
ja
clc
push
mov
add
pop
mov
jp
mov
xchg
add
xchg
jp
ja
ja
clc
cmpb
mov
mov
clc
jp
mov
mov
add
xchg
jp
ja
js
clc
aam
jnp
mov
jnp
ja
js
mov
mov
js
mov
ja
js
xchg
js
xchg
mov
js
xchg
mov
js
add
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
ja
mov
mov
ja
mov
mov
ja
mov
clc
clc
clc
clc
clc
jno
mov
jp
mov
mov
jp
mov
mov
loopne
mov
clc
jp
mov
jp
mov
mov
jp
decl
jp
mov
jp
or
mov
jp
or
xchg
ja
clc
sbb
mov
jp
add
mov
jp
add
xchg
ja
clc
dec
jp
mov
jp
add
or
mov
add
or
ja
mov
nop
jp
mov
jp
mov
mov
mov
mov
jp
xchg
mov
xchg
jp
mov
jp
add
or
mov
add
or
ja
clc
clc
loop
mov
clc
jp
add
mov
jp
add
xchg
ja
clc
popf
jp
mov
jp
or
mov
jp
or
xchg
ja
clc
jo
mov
clc
jp
mov
jp
mov
mov
jp
mov
jp
stos
stos
stos
test
jp
stos
stos
stos
test
jp
stos
stos
stos
test
jp
stos
stos
stos
test
jp
stos
stos
stos
test
loopne
ja
ja
ja
ja
ja
ja
mov
ja
ja
mov
ja
ja
mov
ja
ja
mov
les
enter
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
incl
pop
sub
add
sub
add
add
add
add
mov
add
add
add
xor
fs
incl
add
add
add
push
add
add
mov
push
add
add
add
add
incl
pop
add
add
add
add
add
add
incl
insl
add
add
add
add
add
incl
push
sub
add
sub
add
sub
add
or
add
or
add
add
add
add
add
push
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
sub
add
daa
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
ud0
incl
ud0
incl
add
lock
incl
lock
push
lock
str
incl
decl
decl
lock
lock
incl
push
push
push
str
incl
decl
ud0
add
lock
incl
push
push
str
incl
decl
ud0
add
lock
incl
push
push
push
str
incl
decl
decl
lock
lock
incl
lock
push
lock
str
incl
ud0
incl
add
lock
add
add
add
add
add
add
add
add
add
add
add
faddl
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
add
decl
clc
xchg
ja
addb
add
mov
lock
clc
xchg
ja
addb
add
mov
add
clc
xchg
ja
addb
add
mov
add
clc
xchg
add
add
mov
str
clc
xchg
add
add
mov
push
add
xchg
add
add
mov
incl
clc
xchg
js
addb
add
mov
push
clc
xchg
ja
addb
add
mov
clc
xchg
ja
addb
add
mov
mov
add
add
add
add
add
add
add
dec
pop
pop
cmp
add
or
testb
sub
sub
add
add
add
add
gs
push
add
push
add
dec
sub
push
or
dec
push
add
add
add
sub
or
xchg
pop
or
push
sbb
add
or
push
bound
sti
jl
jle
dec
das
add
jbe
fs
dec
add
or
lds
xchg
test
lea
insb
xchg
pop
xor
xor
pop
or
xor
add
push
mov
xchg
addr16
test
xchg
out
mov
add
add
gs
test
testb
add
pop
add
add
arpl
pop
and
add
dec
pop
pop
xchg
push
add
or
push
pop
cmp
push
fisttpll
pop
xor
add
decl
add
pop
lret
jp
jp
arpl
pop
and
add
mov
pop
daa
pop
or
loopne
aad
push
bound
pop
add
or
loopne
aad
das
push
test
push
bound
pop
dec
sbb
xor
add
push
test
cs
test
lea
xor
add
pop
sub
jp
pop
cli
push
sbb
jge
in
xor
lea
xor
mov
lea
pop
test
push
pop
pop
bound
int
pop
dec
add
and
sti
jl
jle
insb
mov
cwtl
repnz
stos
mov
jns
xchg
jbe
adc
clc
jbe
pop
test
add
dec
add
and
xchg
dec
or
inc
push
sbbb
sub
lcall
stos
mov
push
fs
add
sbb
or
bound
test
jl
jle
insb
mov
cwtl
or
push
bound
add
dec
add
and
xchg
dec
or
std
nop
stos
mov
jns
xchg
add
adc
sub
jl
jle
dec
mov
bound
push
imul
pop
add
xchg
dec
and
xor
add
jp
pop
fimuls
xchg
dec
and
and
add
pop
test
cli
push
and
and
add
xor
addr16
orb
add
dec
and
and
add
pop
test
jb
add
add
or
loopne
aad
sti
mov
push
cltd
push
jns
daa
pusha
add
or
loopne
aad
cltd
push
ljmp
pusha
add
add
add
or
pop
xchg
test
xchg
dec
cmp
maxps
xor
add
gs
jle
xor
mov
xor
add
mov
cli
push
test
lea
testb
das
es
arpl
js
xor
add
jbe
jbe
js
jbe
lcall
loope
add
pop
add
gs
stc
pop
and
and
add
dec
mov
mov
fs
dec
or
sbbl
iret
jle
mov
dec
mov
pop
add
pop
add
gs
stc
pop
and
and
add
dec
mov
dec
or
loopne
cmp
pop
das
ljmpw
testb
repnz
iret
jle
mov
dec
mov
pop
add
sbb
sub
pop
and
and
add
dec
mov
mov
fs
dec
mulb
push
pop
jne
dec
add
dec
pop
xchg
test
sbb
sbb
sub
pop
and
and
add
dec
mov
dec
mulb
push
pop
jne
dec
add
dec
pop
xchg
test
sbb
or
testl
je
jo
add
pop
add
mov
xchg
gs
add
dec
jo
add
adc
sbb
testl
sub
add
add
dec
dec
hlt
xchg
test
gs
add
sbb
and
mov
gs
add
dec
sub
add
add
dec
dec
hlt
xchg
test
gs
pop
add
sbb
and
mov
gs
or
dec
and
dec
test
pop
es
xor
mov
nop
jmp
dec
or
xchg
add
adc
sbb
testl
sub
add
xor
xchg
test
gs
add
sbb
and
mov
gs
add
dec
arpl
gs
add
sbb
and
mov
gs
add
dec
in
pop
mov
add
mulb
xchg
cmp
add
sbb
and
mov
gs
add
dec
daa
lea
pop
cmp
add
sbb
add
add
add
sbb
pop
jne
xor
pop
and
and
add
dec
mov
rcll
jne
dec
add
dec
or
xchg
out
mov
xor
add
bound
push
and
and
xor
and
add
push
loopne
dec
test
lea
loopne
aad
push
bound
pop
and
and
add
push
cmp
pop
sbb
testb
stos
mov
add
xor
stc
pop
and
and
add
stos
mov
fnstsw
xor
add
dec
sub
gs
test
testb
push
dec
and
and
add
jbe
push
push
addb
adc
loopne
aad
and
xchg
and
and
add
push
cmp
pop
das
push
pop
dec
push
out
jbe
pop
add
push
add
mov
jbe
pop
repnz
loope
or
loopne
aad
sbb
pop
and
and
xor
stc
pop
and
and
add
dec
mov
addr16
xor
lea
xor
add
push
pop
pop
push
and
and
add
add
dec
insb
js
dec
xchg
gs
das
add
xchg
out
mov
push
add
verw
push
pop
pop
push
and
and
add
rcll
jne
push
stos
dec
fisttpll
push
add
push
pop
pop
push
and
and
add
rcll
jne
xchg
fisttpll
or
pop
push
and
and
add
sarl
repnz
loope
add
adc
aad
push
mov
ds
out
jp
pop
and
and
add
dec
mov
mov
add
add
sbb
pop
jne
xor
pop
and
and
add
dec
mov
rcll
jne
dec
add
dec
or
xchg
out
mov
xor
add
mov
push
sub
pop
and
and
add
dec
mov
mov
fs
dec
test
push
mulb
pop
jbe
fisttpl
int
pop
dec
add
adc
aad
push
mov
ds
out
jp
pop
and
and
add
dec
mov
mov
add
mov
push
sub
pop
and
and
add
dec
mov
dec
test
push
mulb
pop
jbe
fisttpl
int
pop
dec
add
pop
add
add
maxps
xchg
add
or
and
add
push
or
xchg
test
stc
pop
popa
mov
xor
add
add
xchg
out
mov
add
or
loopne
aad
lds
testb
fistpll
gs
arpl
xor
scas
nop
testb
fistpll
add
add
add
gs
add
or
and
nop
scas
nop
testb
std
andb
adc
add
add
add
popa
mov
jge
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
addb
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
ja
ja
ja
ja
ja
mov
mov
mov
add
incl
add
add
ljmp
add
add
add
add
add
add
add
add
add
rolb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
incl
incl
incl
incl
incl
incl
incl
mov
inc
inc
lock
inc
addb
ja
mov
mov
add
add
incl
add
incl
add
add
add
add
and
add
add
call
add
adc
add
add
sub
add
add
sbb
ret
lcall
xchg
push
stos
mov
int
bound
push
mov
hlt
xor
jmp
and
mov
push
ljmp
lods
dec
jae
pop
adcl
jno
dec
jb
sti
aam
nop
icebp
jns
lods
pop
gs
or
jmp
inc
add
inc
add
jg
mov
cltd
add
sub
pop
int3
sti
sbb
inc
lcall
adc
adc
imul
sub
sbb
ret
push
mov
cmp
add
sbb
fisubl
imul
cmc
inc
adc
das
shll
push
bound
cltd
sub
fdivp
jp
inc
jmp
and
negl
add
xchg
xor
xlat
aas
sbb
mov
mov
xor
push
addr16
xchg
xor
jmp
pushf
jecxz
aad
pop
test
mov
fstpl
sub
and
int
pushf
cld
shr
and
adc
test
hlt
push
xchg
outsl
fmull
test
popl
mov
pop
dec
out
xor
jmp
outsl
sbb
mov
add
jns
xchg
and
ds
xor
xchg
out
pop
ds
aam
outsb
jle,pn
ljmp
xchg
fwait
into
xchg
outsl
add
cmpsb
xor
add
mov
jnp
jmp
repnz
test
inc
xor
cmp
out
call
repnz
inc
test
test
mov
imul
int3
out
negl
in
clc
inc
xlat
and
xchg
pop
aad
int3
repz
inc
movsl
iret
and
addr16
push
sbb
add
movsb
mov
xchg
ret
lcall
add
ljmp
inc
shlb
xchg
sbb
or
mov
call
daa
pop
clc
in
in
test
pusha
pop
pop
mov
repnz
or
aas
and
mov
mov
ljmp
jl
xchg
int
iret
mov
bnd
xor
in
outsl
jecxz
ljmp
or
pusha
pop
out
adc
leave
fs
xor
sub
push
fneni(8087
push
lcall
or
add
imul
cmp
loopne
add
jne
dec
push
cmp
cmpsb
or
adc
sarb
into
in
push
ret
leave
pop
ud1
shrl
pusha
into
mov
imul
lods
dec
scas
pop
sbb
repz
or
xchg
xchg
mov
sti
insb
out
and
loopne
mov
cwtl
fisttpl
out
test
out
or
push
cmpsb
or
jne
je
or
ds
movq
incb
ftst
push
dec
gs
loop
repz
out
xor
push
xor
jmp
fcoms
dec
mov
int
add
rol
jmp
rcl
push
cmc
push
insb
sub
fs
inc
rolb
popf
rol
cmp
in
xchg
neg
mulb
cltd
fldcw
mov
cmp
jg
jb
enter
sarl
sub
aaa
ficompl
inc
insb
bound
adc
add
cmp
adc
stos
xchg
and
add
in
add
jb
ret
cltd
imul
cmp
loopne
outsl
xor
inc
cmovns
jbe
daa
das
psrad
adc
ret
or
ja
mov
adc
nop
cmp
inc
push
xchg
push
test
outsl
clc
lcall
sub
bound
sub
lahf
call
rorl
dec
mov
and
or
xchg
test
faddp
pop
fcomps
pop
testb
pop
sub
mov
pop
clc
scas
push
mov
xchg
adc
test
sarb
and
pop
lds
adc
cli
lret
dec
adc
call
jne
xor
cltd
jle
icebp
xchg
fidivrs
jbe
lret
push
sub
hlt
in
add
and
in
mov
movsl
sub
mov
sbb
dec
dec
pop
movsb
gs
pop
in
scas
lods
js
filds
mov
jecxz
pop
push
gs
dec
sub
popw
test
ret
push
es
cli
imul
movsb
lahf
ret
divl
push
aam
popf
push
js
add
fcoml
pop
imul
jne
jno
orb
out
xorl
in
jne
or
insb
jg
mov
lahf
mov
ficomps
aas
es
mov
mov
mov
js
nop
add
fbstp
cmp
adc
or
inc
add
adc
mov
lods
dec
jo
fnstcw
and
out
adc
sub
and
aam
lcall
xor
into
orb
xor
adc
xor
push
icebp
pop
mov
ret
out
pop
push
jle
addl
xor
rorb
sbb
fstpl
cltd
inc
fs
inc
xchg
xor
sub
sub
movsb
clc
xchg
push
inc
shrl
ljmp
cmc
in
pushl
cmpsb
and
fldl
mov
inc
cmp
xor
test
adc
fisubrs
mov
cmp
push
sbb
xor
jbe
jne
cmp
pop
call
notl
int
inc
movsl
adc
jbe
inc
inc
push
add
shll
mov
jnp
pop
hlt
lea
out
xor
pop
lret
ljmp
enter
and
pop
rcll
jp
scas
shrl
aad
test
aam
fwait
data16
push
inc
inc
cmp
bound
fbstp
lods
pop
adc
ss
shll
sbb
adcb
rcrl
jg
rclb
adc
xchg
adc
or
int3
loopne
sbb
push
imul
imul
pop
dec
es
rcll
jecxz
repnz
or
mov
xor
aad
add
xchg
xchg
mov
arpl
outsl
aas
pop
mov
cld
inc
inc
aas
add
dec
mov
lahf
nop
dec
fwait
in
rcrl
pop
inc
bound
dec
sub
pop
pop
mov
ja
into
mov
cmc
inc
mov
lcall
aam
sub
jp
pop
je
int3
lea
bound
sbb
cmp
jbe
arpl
enter
add
pop
cmp
mov
xchg
xchg
test
sub
pusha
ficoml
flds
shlb
stc
fisttps
jg
rcrb
in
insl
xlat
xchg
or
jne
mov
dec
repz
push
sbb
pop
sti
outsl
loop
inc
insl
dec
bnd
and
mov
mov
sub
cli
lret
push
sar
push
mov
sub
divb
bound
push
aaa
mov
inc
cmpsl
imul
pop
pushf
outsb
dec
and
fimull
pushf
cmp
mov
fs
inc
jae
cmp
push
add
int3
shr
das
inc
xor
jge
in
cli
mov
cltd
sti
push
push
ds
ret
lods
add
sub
jg
push
nop
mov
xchg
mov
out
pop
jne
inc
stos
fldenv
xchg
cmc
push
dec
in
add
outsb
mov
sbb
inc
push
mov
jnp
subl
cmp
mov
lock
sub
inc
pop
sub
leave
and
mov
mov
rorl
int
outsl
in
add
nop
addr16
cmp
adc
cmpsl
pushf
inc
add
xchg
mov
outsb
inc
xchg
push
or
fadds
mov
addr16
int3
fwait
cmp
arpl
in
adc
in
cmp
xchg
sub
gs
out
aam
test
sub
jns
mov
ja
scas
repnz
sti
stos
mov
sti
inc
test
mov
push
stc
pushf
jns
mov
das
shrl
or
lods
mull
push
fisubrs
xchg
xor
cmpsb
gs
sub
outsb
fsubrl
jl
lret
aam
push
or
jo
out
addr16
lret
sub
js
sbb
rorl
mov
mov
mov
sub
pop
inc
ja
push
or
lock
mov
scas
jbe
push
cmp
subb
inc
sub
xor
lahf
cmp
cs
lcall
jb
paddd
sahf
cmp
inc
lret
sbb
sbb
hlt
lret
and
xor
call
lods
mulb
sbb
push
std
xor
divps
pusha
es
aaa
into
lahf
rcr
scas
addr16
mov
scas
mov
push
sub
xor
out
outsb
cwtl
sub
xchg
or
ss
repz
inc
push
divb
ret
dec
ds
aam
adc
cld
dec
jb
pop
dec
cli
fstps
jae
dec
sub
rolb
mov
dec
mov
xchg
dec
fs
inc
and
mov
lds
inc
dec
loope
push
mov
xor
lret
push
dec
lahf
mov
into
push
popl
adc
or
sbb
push
repnz
into
adc
dec
push
cmp
cmpsl
cwtl
xor
xchg
push
movsb
or
xchg
in
gs
cmc
lcall
inc
in
fidivrs
sarl
gs
dec
lcall
lcall
gs
aas
push
cmpsl
lods
or
fs
push
outsb
jbe
or
and
pop
dec
mov
repz
mov
or
inc
pavgb
pop
shl
mov
fistl
mov
arpl
cmp
lods
inc
idivb
sbb
repz
in
mov
xchg
vaddpd
lods
cli
adc
stos
or
movsb
jl
cmp
aas
mov
mov
mov
pushf
lds
adc
mov
pop
das
inc
add
imul
lcall
ljmp
cli
fwait
int3
xchg
xor
pop
jg
lods
push
je
mov
scas
aam
mov
sarl
pushw
adc
push
leave
and
enter
mov
cmp
add
pop
xchg
and
test
gs
loopew
pusha
and
dec
cmpsb
je
mov
mov
test
lea
cmp
es
push
dec
orb
je
cmp
mov
ffreep
data16
lret
ljmp
cmp
mov
imul
rolb
pop
in
hlt
mov
or
or
hlt
inc
out
cltd
push
aas
jl
push
or
andb
mov
cltd
push
aas
add
outsb
loopne
scas
dec
das
testb
cmpsl
fadd
dec
divps
aaa
call
cmc
mov
xchg
stos
inc
in
mov
push
stos
mov
dec
ficompl
or
jge
shlb
insb
test
xor
pop
idivl
cmpsb
and
inc
mov
nop
dec
push
pop
push
gs
popf
dec
lds
enter
dec
mov
mov
sbb
lea
xchg
mov
cmp
in
mov
sub
fldcw
sbb
lret
lock
popa
es
inc
lods
cmc
or
lcall
mov
lret
jmp
xor
idivb
mov
ficoml
and
test
rcl
iret
push
pop
leave
fwait
rcrb
in
rcll
int3
sbb
fcompl
jb
outsb
sub
stc
das
orb
adc
adc
loope
pop
push
xchg
orb
pop
subb
dec
testl
loop
ret
mov
mov
mov
stos
mov
adc
movsl
jle
push
shll
sub
xchg
push
lahf
push
push
das
cmp
orb
add
ljmp
loope
les
xchg
pushf
gs
movsb
mov
ljmp
push
rcr
or
mov
stc
jnp
jne
xlat
pop
jae
inc
mov
jne
jle
dec
out
ror
imul
out
jecxz
stos
jp
mov
test
test
pop
xchg
mov
lret
popa
outsl
out
mov
or
and
xor
cli
adc
mov
and
out
jge
leave
push
xor
sbb
pop
inc
or
cmp
mov
test
sub
cmp
in
lods
hlt
dec
sub
insl
xor
mov
repz
jecxz
test
repnz
mov
sub
dec
cmpsl
testb
adc
int3
xchg
jne
mov
xor
in
adc
imul
fistpll
cmp
push
mov
mov
pop
add
push
adc
aas
cmp
mov
scas
jl
inc
xchg
orb
ret
mov
mov
xchg
pop
jb
movsl
test
in
ss
pop
jae
lret
icebp
rclb
cli
ss
int
ds
add
mov
jcxz
nop
pop
in
stos
arpl
jge
sbb
cmp
inc
mov
cmp
mov
xchg
icebp
inc
loopne
icebp
xor
gs
sbb
inc
mov
push
jmp
inc
inc
sub
out
cmpb
xchg
jbe
mov
in
push
cli
mov
push
test
loop
jns
dec
mov
shlb
dec
mov
push
hlt
fsubrl
or
push
data16
xchg
in
or
and
xchg
lret
lret
inc
pushf
mov
mov
lods
and
lods
push
mov
addl
mov
test
pop
add
cmp
jecxz
mov
es
ds
mov
ret
sub
mov
jno
repz
inc
fwait
std
xorb
mov
ja
sti
sub
cli
or
popa
mov
xchg
mov
cmc
dec
leave
inc
or
mov
push
arpl
pop
pop
jns
mov
push
jno
fstpl
mov
push
addr16
mov
adc
adc
add
out
jns
push
loopne
mov
and
out
test
pusha
xlat
out
sbb
faddp
adc
lret
xchg
jge
insl
out
fldt
xchg
andl
mov
xlat
das
cmp
lds
lcall
jns
dec
sbb
adc
jmp
or
insb
in
xchg
in
lds
lods
adc
jnp
mov
call
mov
je
push
and
loopne
inc
lahf
aam
ret
pop
mov
jbe
sti
sub
ss
pop
cltd
frstor
or
cmp
cli
or
inc
insl
test
mov
mov
rolb
stos
sar
fidivrl
sub
ja
or
jle
mov
out
cmp
push
fcompl
cmpsl
cwtl
mov
cmp
rcrl
and
es
es
inc
aam
sahf
cwtl
js
dec
xor
aam
jl
out
imul
jns
sti
jns
ljmp
std
shrb
cmp
jmp
mov
fbld
cld
cmovne
popa
rorl
sub
aam
mov
jns
and
xchg
mov
sub
mov
fsubs
fnstenv
jo
jecxz
jmp
bound
cmpsb
out
ret
pop
push
add
sub
and
jl
out
pop
aam
rclb
data16
aad
dec
pop
fadd
mov
lods
sahf
orb
fbld
fcmovnu
cli
xchg
movsb
icebp
and
lret
fstl
mov
jle
dec
xlat
xchg
cmpsb
orl
mov
into
or
add
pop
pop
and
out
add
int3
in
jmp
mov
xor
push
into
ret
js
imul
sbb
mov
out
xchg
cmp
mov
lret
fldenv
sub
mov
adc
dec
cwtl
adc
int3
insl
mov
int
mov
movsl
sub
xor
clc
or
loope
lods
inc
test
lcall
add
insb
mov
and
aas
arpl
or
mov
fdivr
cmc
leave
jae
dec
shlb
cmp
fildl
push
ret
push
lret
mov
shl
movsl
int3
imul
xchg
divl
mov
cmpsl
xor
jmp
pop
xlat
outsl
ficomps
adc
negl
jge
or
mov
test
pop
pop
pusha
dec
xchg
cmp
xor
imulb
out
mov
es
ss
dec
jl
adc
xchg
mov
fdivrp
push
test
mov
int
jb
mov
mov
test
xchg
add
xor
aaa
clc
xlat
out
xchg
aam
inc
sub
lret
xor
rolb
std
in
shl
in
int3
sub
xchg
in
mov
sbb
movb
mov
mov
popf
leave
scas
mov
push
gs
cmp
test
std
dec
mov
popf
jnp
outsl
js
outsb
gs
inc
jg
enter
addr16
ret
sub
push
dec
loope
jae
in
mov
pop
pop
pop
jnp
adc
cmp
inc
flds
addr16
fsubrl
mov
sub
int
mov
nop
pop
fmulp
dec
fmuls
ret
mov
arpl
nop
jbe
mov
adc
stos
or
push
jge
dec
mov
xor
imul
mov
lods
mulb
and
or
and
or
test
pop
dec
movsl
jecxz
cltd
call
jp
or
xor
cmc
int
mov
iret
mov
xchg
inc
fldcw
dec
xchg
add
in
cmpsb
insl
in
into
cmp
outsb
dec
in
ljmp
add
sbb
xor
imul
int
ud2
push
and
sbb
lods
xchg
fwait
sti
cld
clc
sub
add
sub
test
lds
leave
fidivrl
xchg
into
cwtl
cmp
jg
cwtl
push
jno
int3
jo
sub
das
aad
adc
cmp
insb
sub
loop
sub
mov
repnz
mov
cld
imul
int
rorb
mov
pop
add
and
xchg
fisttps
pop
aam
push
stos
inc
push
fcoms
inc
and
sbb
push
ja
popa
out
xlat
fstpt
fs
pop
mov
and
in
sub
add
cmpsl
sbb
loop
repnz
adc
add
push
push
push
lahf
imul
int
and
add
inc
fwait
push
adc
insb
jle
rolb
xchg
dec
dec
pop
push
test
repz
stos
or
rcrb
dec
test
jp
sbb
divl
arpl
push
mov
xchg
cmp
add
addb
push
mov
sub
cmp
scas
test
sbbl
icebp
das
push
push
sbb
push
sbb
sahf
pop
fildll
popa
orl
stc
sbb
pop
pop
fdivl
xchg
ret
cmp
sbb
movsb
les
cmpsb
aad
das
push
jp
or
mov
sbb
mov
cmp
lods
push
adc
insl
inc
mov
xor
jnp
jns
xor
jge
lret
push
lds
clc
cmp
jb
pmaxub
mov
out
aad
lahf
pop
leave
imul
popa
mov
jecxz
or
xchg
popf
nop
ljmp
mov
cmp
jp
jb
push
dec
shll
iret
lods
testb
pop
lods
loopne
xchg
push
adc
mov
nop
dec
sub
fsub
iret
inc
mov
popf
bound
add
jge
insl
mov
gs
inc
arpl
in
gs
dec
mov
stos
in
mov
repz
js
imul
sub
fdivrl
jbe
xlat
loope
mov
lahf
xchg
repnz
leave
cmp
ja
cmpsb
arpl
mov
pop
jb
xor
in
adc
fistpll
adc
add
sub
scas
inc
fcomps
inc
aaa
cmp
int
icebp
in
inc
js
dec
lock
push
and
inc
cld
lock
sahf
lcall
addb
sub
popa
sbb
repz
fs
sub
hlt
sti
je
cmc
gs
sub
cwtl
iret
xchg
jbe
inc
xchg
pop
pop
dec
mov
pop
adc
out
aas
lcall
xor
in
pop
cmpsb
xchg
push
mov
adc
add
int
or
test
cltd
sti
je
mov
nop
aad
mov
adc
lcall
jp
cmpsb
adc
or
mov
fnsave
sbb
test
sub
ret
push
movsl
mov
push
sahf
sub
adc
stos
and
cs
sbb
jmp
not
cltd
es
imul
xchg
push
popa
mov
adc
mov
addb
xor
dec
stc
jae
lea
in
cmpsl
stos
add
lock
in
adc
movsb
lods
scas
sub
notb
jecxz
inc
jne
repz
lcall
lcall
push
sbb
xchg
test
mov
pushf
sbb
xchg
mov
dec
mov
mov
aam
mov
int3
in
inc
cmpsb
cmp
lds
dec
and
mov
idivl
mov
lahf
jl
loopne
hlt
mov
dec
lahf
push
or
ds
dec
mov
sub
or
sub
scas
sbb
jno
repnz
outsb
pop
xor
lock
fidivrl
and
or
sbb
mov
or
enter
xchg
sbb
orl
dec
adc
push
sti
iret
push
decl
jne
out
out
jecxz
iret
pop
and
movsb
daa
pop
pusha
scas
xchg
mov
lret
jno
xorl
push
mov
fadd
in
int3
xchg
cmc
pop
fistps
push
mov
mov
cmp
cmp
ret
jae
or
fnsave
inc
imul
addr16
div
pop
mov
lcall
sbb
or
bound
dec
add
mov
gs
adc
ffree
dec
inc
jnp
adc
mov
sub
daa
jno
and
jns
in
mov
movsb
cld
cld
cli
inc
sar
inc
push
inc
out
sarl
sub
jl
cmp
jge
and
pop
cmpsb
adc
imul
loop
leave
xchg
lea
fldenv
icebp
jg
iret
lods
adc
and
mov
fisubrl
imul
pop
int3
add
xor
and
pop
or
test
pop
or
imul
out
iret
sbb
int
repz
sbb
out
sbb
inc
mov
punpckhwd
pusha
inc
mov
jo
mov
imul
add
lock
mov
fnstenv
rcll
xlat
or
mov
js
sti
outsb
fsubrl
sti
jae
lods
out
inc
sub
stc
xor
ficompl
aad
ss
add
dec
lea
xor
add
lods
js
pusha
hlt
mov
pop
adc
xor
rcr
subb
or
sbb
push
gs
fsubs
scas
xor
sarb
mov
out
fisttpll
inc
xchg
pop
mov
adc
clc
cmp
popa
add
ljmp
mov
pop
cmp
mov
loop
cmc
dec
sbb
movsb
sar
mov
sti
sub
fnstenv
inc
push
lock
enter
imul
dec
shll
cmc
insb
cli
scas
xor
xchg
fisubl
pushf
into
sbb
popa
call
sbb
inc
mov
cmc
into
xor
lock
dec
or
pop
mov
popf
sbb
pop
std
lods
and
xor
testb
mov
pop
xchg
arpl
push
inc
cmpsl
sbb
push
outsb
xor
sub
cmp
mov
lcall
ljmp
mov
popa
aas
ror
fstpt
mov
xor
jbe
inc
stos
mov
push
add
cltd
mov
push
bound
shll
in
ret
cmp
mov
cwtl
shr
xchg
rorb
pop
sub
ljmp
push
jge
push
xor
mov
fs
push
out
test
mov
lret
inc
sti
ljmp
mov
out
jl
cmpsb
mov
cli
push
ljmp
fnstcw
lock
fnstcw
pusha
cwtl
and
mov
jge
std
inc
rcll
testl
mov
es
out
lea
dec
lds
loope
sbb
mov
je
cmc
xchg
mov
addr16
mov
pop
les
jg
xchg
popf
or
xabort
fisubrs
out
loope
pop
scas
xorl
or
and
or
mov
mov
into
xor
cmc
cmp
inc
and
int
push
lds
pop
aas
cmp
lcall
negb
pop
cmpb
push
push
cld
xor
test
or
push
cmp
out
push
mov
add
add
test
les
adc
lock
xor
cs
stos
xor
jl
dec
pop
mov
xor
cs
xchg
mov
loopne
dec
cmpsl
fs
mov
lcall
hlt
or
lock
idivl
lea
pop
mov
adc
sti
pushf
mov
push
push
repz
stos
xchg
orb
addr16
in
cmp
jge
push
xor
pop
sbb
popa
xchg
nop
push
int3
fcmovu
pop
mov
mov
add
xor
push
in
iret
inc
dec
sub
inc
ret
std
test
pop
stc
push
roll
and
sbb
dec
adc
dec
cs
adc
test
stos
ret
lcall
cmp
xlat
and
jmp
callw
mov
jmp
fstps
or
or
dec
jbe
in
sub
jg
popa
out
jle
xor
jo
stc
lretw
xchg
imul
lret
mov
mov
call
and
mov
sbb
fnsave
call
jnp
mov
dec
pusha
dec
add
pushf
shll
testb
sbbl
push
adcl
sub
cmp
cmc
enter
jmp
lock
add
cld
mov
pushl
jl
sbb
pushf
test
shlb
push
pop
mov
out
push
jecxz
mov
pop
cmp
data16
cli
ljmp
xchg
xor
and
cld
inc
icebp
test
les
iret
cltd
cmp
sub
popa
fiaddl
popa
stos
jb
ljmp
dec
sbb
popa
jbe
jecxz
pushf
inc
inc
mov
mov
sti
sti
mov
add
aas
outsl
sub
outsb
in
dec
lret
push
mov
mov
lea
cld
pop
mov
mov
stos
andl
stc
adc
jne
push
and
cmovge
fucomip
lahf
lock
imul
divb
dec
loopne
or
jmp
insl
aam
fdivs
fidivl
sub
adc
icebp
call
dec
daa
iret
outsb
pop
sbb
mov
stc
fistl
pop
bound
rorb
test
mov
cmpsl
mov
cld
jno
js
aaa
pop
adc
insl
sub
dec
aam
cmp
inc
fildl
sbb
sub
sub
or
cli
inc
mov
lcall
cltd
mov
es
addr16
or
xor
push
jae
cs
rolb
aad
cmpsb
sbb
push
xorl
or
popa
pop
cmp
idivl
stos
lock
inc
in
adc
adc
data16
out
pcmpgtb
pop
add
cli
push
adc
jbe
inc
sbb
jmp
or
orb
scas
jno
jge
mov
fs
cmp
add
sbb
outsl
mov
lret
inc
jns
or
jno
scas
imul
pop
repnz
inc
mov
ja
popa
into
add
test
push
mov
sub
push
adc
sub
mov
icebp
in
mov
addr16
dec
push
push
push
xor
mov
das
shrb
fnstsw
jg
mov
cmp
mov
jo
dec
cmc
data16
mov
call
mov
fsubrl
dec
or
inc
insl
ror
ret
pop
loop
and
dec
nop
arpl
xchg
rol
std
ss
cld
insb
or
xor
int
mov
jae
dec
xchg
push
sub
gs
out
jbe
stos
je
jle
sub
xorb
add
das
pop
out
pop
pop
in
aam
pop
lea
mov
push
mov
mov
push
mov
lds
jecxz
int3
idivb
pop
push
fsubl
mov
ret
inc
add
jns
fsubr
and
rcrb
inc
gs
jp
adc
cmc
or
jne
loop
int3
pop
lcall
fildl
push
inc
int3
add
xchg
push
push
push
std
daa
scas
rcrl
lods
mov
rcr
lcall
xchg
aad
or
lods
xor
jg
std
popa
fstpl
mov
push
lret
push
mov
inc
xor
rol
movsl
cmp
xchg
adc
push
inc
jmp
daa
fs
lret
mov
aam
sarb
fsubl
push
pushf
sti
sbb
pop
push
fsubrs
sub
out
stc
out
shrb
aas
inc
sti
push
jge
aad
add
or
mov
aad
ret
shrb
add
add
pop
jb
imul
adc
scas
faddp
dec
sbb
jno
pop
adc
aas
xchg
xor
ja
nop
popf
mov
xor
mov
fistpl
bound
iret
ja
pushf
inc
mov
int3
int3
pop
lahf
inc
push
movsl
out
add
out
xchg
fstpt
imul
xor
mov
and
in
fmull
mov
dec
scas
dec
sub
mov
inc
adc
sub
aam
movsb
push
pop
call
cld
sub
test
dec
fcomip
shrb
push
fsubl
int
rclb
jl
mov
scas
pop
stos
les
push
pop
jns
outsb
sub
pop
mov
imull
pop
clc
mov
jns
jmp
cmp
out
pop
je
or
cmc
push
hlt
jp
in
cwtl
sub
ret
data16
sahf
fwait
dec
cmp
sbb
sbb
cmp
xor
out
xor
loopne
sub
in
loope
xchg
and
loopne
test
inc
scas
shrb
sub
inc
lcall
inc
outsb
call
or
and
test
mov
insb
sbb
pop
jnp
sarb
test
mov
test
lods
iret
pop
repnz
in
inc
xor
dec
int
sub
outsb
dec
cmp
popa
cmp
addr16
repnz
xchg
mov
iret
or
sbb
lret
pop
lods
cmp
jne
popa
jmp
sahf
xchg
mov
lahf
dec
lahf
push
movsl
cmpsb
mov
repz
das
push
add
push
pop
sub
sub
std
scas
hlt
mov
ja
push
xchg
cmp
jp
push
and
push
mov
mov
xchg
sbb
stos
dec
dec
shrb
pop
cs
lods
jge
pop
jmp
mov
negb
mov
mov
xchg
cs
mov
push
sbb
cwtl
aam
mov
jo
mov
into
xchg
or
xchg
cmc
adc
lret
sbb
test
pop
pop
xlat
jae
dec
sbb
pop
loop
push
cmp
cmp
imulb
add
jge
faddp
clc
data16
pop
adc
filds
ljmp
mov
lods
xchg
jbe
xlat
cld
rorb
xlat
aad
add
or
jg
and
in
in
sbb
inc
es
mov
cmp
test
mov
outsb
fs
sbb
fsave
mov
mov
decl
mov
xlat
cld
mov
mov
jno
push
cmpl
xchg
lea
cltd
cltd
and
mov
dec
fldcw
and
aas
inc
enter
xchg
or
hlt
mov
cltd
mov
mov
nop
leave
and
out
lahf
and
aad
js
pusha
lcall
push
mov
shr
pop
push
nop
movswl
ja
pop
lock
xor
cmp
inc
call
dec
popf
sub
pop
leave
pop
fcoms
das
outsw
sbb
lock
mov
ds
pop
ds
insl
rcl
lea
pusha
sbb
dec
add
jns
ja
call
dec
and
mov
or
push
sti
imul
jmp
cmp
pop
dec
push
nop
fisubs
xor
inc
mov
pop
jne
dec
cmpl
out
pop
mov
push
push
and
xor
je
jle
in
sub
cmpsl
jg
xor
pushf
push
cmpsb
xor
sub
outsb
ja
push
pop
imul
scas
jl
pop
test
xor
les
xor
ror
cli
add
stos
mov
ja
jmp
int
fiaddl
cmp
mov
out
cmp
lds
adc
sbb
jae
sbb
xlat
xchg
jne
pminub
push
outsb
out
roll
pop
xchg
sub
mov
addr16
movsb
sub
sbb
loopne
leave
xchg
cmp
pop
jecxz
mov
outsb
dec
dec
xchg
and
pushf
add
outsb
pop
pop
scas
loope
jl
aad
xor
lret
cli
test
add
call
roll
std
adcl
and
add
outsb
leave
popf
mov
call
out
sbb
out
test
adc
jb
ret
sub
mov
pop
rorl
fcmovu
dec
pop
mov
fcmovne
push
imul
cmp
clc
cmpsb
inc
mov
xor
loopne
xchg
sahf
pop
pop
xchg
sbb
add
pop
aaa
shlb
sbb
pop
dec
dec
pop
mov
out
pop
mov
add
jl
adc
ret
xor
adc
sbb
and
sub
xchg
mov
dec
xchg
imul
ss
ljmp
mov
sub
popa
pop
or
insb
in
sub
mov
icebp
outsb
mov
into
das
in
dec
mov
cmp
inc
ficomps
lcall
cmp
inc
paddsb
insb
enter
xchg
mov
ljmp
lods
mov
xor
xor
adc
cmp
mov
xchg
and
push
stc
push
xlat
sbb
outsl
or
imul
clc
pop
jb
cmp
cmpsb
int
das
dec
and
mov
xor
mov
test
bound
jmp
mov
cmp
mov
leave
mov
cmp
outsl
lret
pop
sub
adc
addr16
pop
ret
cmp
repz
cli
pushf
stos
mov
into
pushf
mov
inc
pusha
add
jl
sbb
int3
out
mov
out
leave
dec
sub
aam
and
dec
fldl
pop
test
sub
adc
xchg
cmpl
jae
mov
adc
insb
in
pop
xchg
push
pop
jno
dec
xorl
daa
scas
pop
add
push
pop
dec
sbb
add
sub
pop
and
xor
jbe
jne
fs
cmp
and
loopne
int3
cli
dec
dec
lret
dec
test
test
inc
sahf
lock
pop
sub
cmp
adc
sti
mov
movsl
mov
enter
cmp
sbb
or
jl
ret
data16
xor
sbb
scas
pop
jbe
and
fidivl
lahf
scas
push
mov
or
lods
mov
fcmovnu
test
jg
ss
lcall
cmpsb
clc
adc
pusha
lcall
cmp
testb
es
and
pop
test
add
scas
dec
lods
cmp
inc
jecxz
add
lds
add
xchg
mov
rorl
push
xchg
dec
mov
hlt
adc
fwait
mov
je
inc
sahf
xchg
and
sbb
push
pop
lcall
stc
or
fsts
or
mov
cmp
negl
cmp
mov
mov
or
pop
jp
mov
mov
roll
push
jmp
ss
repz
das
dec
imulb
cmp
dec
lods
mov
xchg
ret
adc
enter
pop
mov
scas
xchg
loopne
mov
out
pop
adc
cmc
fptan
pushf
into
mov
cmp
into
loopne
ja
pop
shr
repz
push
jns
jmp
jmp
mov
out
push
cmpsl
imul
and
movsl
mov
shlb
inc
vpor
mov
fsubl
jbe
push
shrl
inc
insb
das
mov
mov
in
insb
mov
cs
ret
sub
call
mov
jp
mov
insb
je
addr16
dec
cmp
jb
and
jne
sahf
movsl
xchg
adc
push
pusha
jb
push
jnp
cmp
sbb
loop
nop
cmove
xchg
adc
pop
mov
xor
ucomiss
sti
mov
adc
mov
in
test
ficoml
adc
mov
aas
xlat
push
inc
or
std
int3
cmpsl
shrl
cmp
adc
lods
lods
das
test
dec
sub
iret
adcb
mul
inc
inc
out
add
sub
int
ficomps
dec
int3
aad
scas
out
push
aad
xor
loop
or
xor
sbb
pop
loopne
in
and
lret
cmp
arpl
ss
clc
sti
mov
je
dec
or
inc
rcrb
test
imul
dec
mov
and
add
shl
xchg
ja
mov
cwtl
aas
jnp
inc
add
in
ficoml
xchg
out
dec
dec
xstore-rng
cmpsl
ret
loopne
cmp
fidivrs
mov
jns
orb
pop
sub
pop
mov
cmpsl
cmpsl
js
xor
lods
push
push
dec
sbb
imul
xchg
pop
xchg
mov
outsl
mov
dec
push
in
insb
dec
and
inc
enter
push
add
frstpm(287
clc
mov
test
int
cwtl
andl
mov
insb
leave
hlt
or
jb
pop
pop
xor
lock
dec
gs
xchg
dec
enter
pop
jmp
adc
movsb
mov
xor
je
cmc
cwtl
jge
imul
inc
push
cmp
push
loopne
add
or
sub
inc
xchg
movsl
cmp
mov
arpl
xchg
inc
sbb
adc
in
shlb
push
cmp
cltd
push
cmp
movsl
pop
test
lcall
aam
cmpsl
push
jbe
mov
dec
lods
pop
or
push
mov
and
fcomi
and
sub
hlt
jbe
dec
dec
mov
shr
push
sahf
xor
mov
loopne
out
xchg
hlt
xchg
add
or
jne
sar
push
push
mov
pop
scas
push
push
pusha
popa
add
dec
out
cmp
test
xchg
pop
mov
xchg
ljmp
jo
adc
imul
inc
js
jo
push
xchg
sub
mov
in
loopne
mov
mov
outsl
fs
inc
push
and
jne
mov
pop
arpl
push
shrl
popf
cmpb
arpl
add
jg
jp
std
popa
sub
bound
imul
pop
sbb
jmp
pop
push
in
outsl
into
fdivrs
mov
into
fs
shlb
in
inc
shll
xor
mov
fcomps
or
adcb
sbbb
push
add
les
push
cld
movsl
rcrb
jae
cwtl
cvtps2pi
in
sub
xor
add
fimull
pop
rclb
sub
mov
add
fsubl
aas
rcrb
mov
in
rorl
xor
fwait
cmp
mov
xor
and
sub
cli
inc
push
inc
pushf
cmp
nop
jle
hlt
push
dec
gs
je
aaa
bound
orb
pop
adc
insb
sbb
repnz
outsb
int
and
mov
test
lcall
jmp
popf
es
lcall
or
pop
clc
ja
dec
lds
es
xor
dec
or
dec
mov
mov
test
jne
aam
sbb
out
xchg
repz
jmp
ret
dec
pop
mull
cmp
outsl
imul
pop
inc
ret
jns
fdivl
scas
dec
cltd
out
movb
data16
jmpw
sbb
jle
sbb
inc
rcrl
daa
nop
jbe
pop
push
jecxz
mov
jg
mov
mov
xchg
pusha
test
fs
add
test
xchg
sub
test
add
cmp
pushf
sub
shlb
pusha
xor
inc
mov
shr
jg
jp
sbb
scas
out
imul
ja
dec
push
xor
inc
test
jecxz
xor
push
movsl
xor
xchg
std
jl
insb
movsl
sbb
xchg
inc
ret
movsl
push
and
jae
mov
push
rorl
insl
mov
shlb
out
push
sbb
sub
scas
iret
inc
mov
cmc
or
in
pop
mov
push
fcomps
add
daa
dec
loop
ljmp
mov
mov
push
pop
mov
sbb
shlb
pop
cmpl
dec
pop
ficompl
dec
inc
bnd
cmc
lock
adc
mov
mov
ss
xor
push
negl
and
jg
arpl
fadds
add
into
stos
cli
mov
jl
ja
mov
sbb
push
js
jno
lods
aaa
lret
sbbb
xchg
sub
pop
fsub
shlb
jle
fwait
test
push
enter
fs
fwait
adc
fsubs
mov
cmp
clc
je
lods
xchg
sub
jmp
inc
sbb
mov
cmp
leave
jge
pop
dec
cmp
sti
jo
pop
cmp
push
into
cs
dec
mov
cmp
pop
push
sub
sarl
sub
in
xlat
and
mov
jle
jb
sbb
flds
add
addb
mov
mov
scas
imul
sbb
xor
daa
das
test
xor
out
mov
and
jmp
sub
sbb
jb
mov
sbb
sub
jge
cwtl
cmp
out
incb
jb
and
adc
test
mov
push
mov
push
roll
pop
mov
xorb
or
jge
sahf
and
jge
sbb
jge
ss
jno
pop
and
xchg
or
cmp
push
lea
test
xor
scas
mov
push
cmp
inc
adc
pop
sub
jmp
inc
cmp
mov
cltd
sbb
jno
clc
xor
or
xchg
sub
aam
int3
aam
cmovp
lock
fidivl
jg
ficoms
negb
insb
mov
xchg
in
insb
adc
mov
ret
rcrb
xchg
ficomps
adc
inc
pop
out
sbb
inc
xor
rolb
xor
mov
orb
xchg
scas
xor
push
call
push
test
and
cmp
dec
lods
xchg
jns
cmp
fistps
js
dec
inc
jb
and
jb
lds
add
and
push
fcoml
dec
push
or
sbb
xchg
arpl
lds
add
jle
add
cmpb
fadds
fstp
loope
addr16
insl
iret
dec
imul
cmpb
dec
mov
add
dec
aam
imul
pusha
icebp
sbb
int3
pop
inc
or
or
roll
lock
aaa
xor
push
cmp
fistps
cwtl
out
mov
push
ljmp
sub
aaa
negl
xor
test
imul
decb
andl
xor
repz
jge
mov
mov
in
push
loopne
fistpl
xchg
xchg
sbb
lret
imul
fistps
sahf
add
enter
outsb
and
sub
pop
sbb
clc
jle
dec
mov
out
jns
adc
cmpsl
scas
mov
stc
repnz
aaa
repz
add
loop
push
daa
fidivl
rorb
jb
lea
scas
jae
sbb
mov
mov
pop
aam
lcall
lret
sbb
enter
stos
xchg
cmc
mov
pop
loopne
outsl
sti
aaa
int3
daa
push
out
mov
mov
mov
es
mov
push
rcll
sbb
rcrl
dec
test
sbb
adc
mov
inc
xor
scas
std
bound
insb
xor
pop
stos
in
cli
movsb
sub
test
nop
test
cmc
cmp
xor
xor
push
add
add
dec
pop
icebp
xchg
dec
frstor
movsb
inc
out
test
mov
cmpsb
xchg
cmp
sub
xor
movsb
mov
std
xchg
cmp
es
and
push
push
jae
cmp
mov
xchg
fimull
mov
push
sbb
cmp
stos
sbb
addr16
jno
lret
std
mov
dec
xchg
cld
jnp
inc
pop
fs
mov
adc
and
movb
stos
ret
dec
icebp
pop
dec
shrb
sbb
scas
cmp
mov
xor
cmpb
popa
fxch
inc
pop
pop
ja
push
out
mov
cmc
add
and
adc
test
xlat
push
pop
pop
cs
dec
adc
in
push
cmp
stc
xchg
mov
cmp
inc
jne
mov
rolb
jne
in
fistps
sbb
rcrb
popa
push
sub
out
jnp
push
xor
cwtl
xor
orl
call
mov
out
mov
xchg
mov
icebp
gs
iret
push
jp
cmp
xchg
jle
xchg
and
jecxz
xchg
sahf
mov
loope
je
add
stc
movsb
insl
sub
pusha
cmp
and
scas
or
ffree
jp
ss
dec
xchg
mov
shll
sub
jae
cs
andb
call
rolb
insb
cmp
xchg
jl
mov
mov
dec
add
cmp
mov
cld
icebp
into
lahf
lods
add
js
sbb
mov
aad
push
out
sub
mov
es
xchg
imul
inc
rcr
sub
ja
add
ss
adc
in
and
xchg
fimuls
push
xchg
test
test
push
lret
in
xchg
inc
icebp
jo
stc
pop
adc
jo
bound
and
inc
sbb
dec
test
xchg
jmp
xchg
mov
outsb
inc
lret
xchg
xor
in
je
popf
gs
xchg
inc
jns
into
mov
int
mov
and
xchg
out
cmp
adc
test
xchg
addr16
out
jmp
loopne
dec
montmul
cmpsb
inc
fs
in
fdivrs
adc
push
popf
xor
add
cmp
mov
push
movsl
dec
fsubs
aad
xor
inc
iret
punpckhdq
ret
mov
loope
cmp
js
repz
sub
outsb
roll
sbb
xchg
mov
stos
gs
cs
pop
cmc
inc
dec
push
inc
scas
pop
pusha
imulb
leave
in
mov
mov
inc
jb
jno
adc
shl
xor
aad
inc
inc
lods
aam
lock
mov
or
dec
xor
js
mov
inc
dec
ja
mov
mov
rorl
jns
pop
notl
mov
and
dec
xor
inc
jmp
lds
mov
mov
adc
or
aaa
inc
addr16
mov
test
mov
jle
je
in
mov
push
insb
enter
mov
sbb
and
adc
jbe
mov
mov
ficoml
mov
xchg
jg
imul
xor
adc
sub
cmp
adc
insl
sub
in
jecxz
dec
push
lret
mov
mov
dec
push
cli
test
jl
pop
cli
int3
mov
jne
rcll
cmp
fs
inc
rolb
adc
mov
adcl
jge
and
test
cltd
cli
cmp
imul
andb
mov
in
roll
fwait
xchg
and
loop
or
popf
sub
mov
mov
fidivs
cs
pop
jbe
lock
jge
aad
out
push
dec
insb
jnp
es
cmp
adc
xchg
cmp
sub
mov
mov
testl
xchg
mov
push
movsl
filds
test
or
repnz
or
and
hlt
out
in
mov
jno
and
arpl
xor
jb
imul
xchg
scas
mov
out
in
jbe
cmc
das
test
jo
cmp
push
js
jge
jbe
pop
outsb
out
push
fdivl
pop
aaa
cmp
pop
pop
pop
cmp
clc
lds
loop
sbb
cwtl
out
lds
fidivl
and
aam
mov
sbb
loope
mov
push
xor
sub
sbb
xor
push
and
stos
int3
mov
scas
pop
push
dec
mov
jle
js
popa
jl
add
xor
lret
ret
mov
fcoms
mov
repz
ror
scas
lods
sub
leave
lods
jae
push
popa
bound
adc
jge
sub
dec
mov
les
xchg
addr16
imul
xor
mov
cs
adc
push
cmc
fisttps
sahf
mov
lret
fildll
mov
ljmp
ds
data16
jo
imul
add
add
inc
pop
jae
loop
inc
out
inc
icebp
cmp
pushf
js
movsl
xchg
out
fsubp
out
cmpsb
nop
fidivrl
xchg
cmp
in
test
je
test
push
mov
pop
mov
decb
dec
push
cmpl
movb
xchg
mov
or
idiv
xorl
int3
mov
sub
lods
add
mov
aam
add
mov
jb
or
cli
daa
jno
mov
dec
repz
xchg
dec
fdivr
and
mov
or
aad
mov
add
subl
sub
shll
push
cmpsl
pop
lods
sbb
jmp
lcall
das
xor
jmp
mov
add
mov
dec
pop
dec
aad
xchg
inc
test
jae
sbbl
push
cltd
jne
test
pop
test
sub
xor
outsl
inc
sahf
fstpl
cmpsb
sub
imul
mov
aad
pop
xlat
sub
roll
int
mov
mov
sub
leave
cmpl
sbbb
testl
jnp
adc
in
loop
push
mov
ja
add
jmp
hlt
sub
int3
icebp
call
sub
ljmp
ds
fcmovnu
pop
jnp
ja
imul
and
pop
jae
ret
pop
iret
pop
jo
xor
sbbb
cmpl
jns
inc
mov
dec
sub
test
mov
mov
test
sub
mov
inc
mov
iret
dec
inc
pop
lahf
test
orl
push
fdivrl
xor
inc
pop
inc
outsb
or
xlat
push
dec
mov
imul
lock
incb
leave
sbb
xorb
jae
adc
jle
mov
add
les
imul
add
inc
add
inc
mov
push
sub
xchg
in
test
sahf
cs
adc
jno
daa
push
fbstp
mov
pushf
jns
aam
pop
mov
xor
bound
pop
in
scas
cld
or
fnsave
add
mov
xchg
imul
lret
ja
jno
les
mov
pop
and
aad
fdivrs
jne
mov
out
pushf
push
inc
ficoml
popf
bswap
mov
sahf
cmp
add
dec
out
aad
jne
or
xchg
ljmp
shll
ss
mov
ret
cmp
stos
push
pop
mov
repnz
ljmp
mov
add
mull
add
sbb
push
pushf
adc
out
jl
sbb
gs
gs
and
mov
movsl
insl
push
pop
iret
data16
stos
pop
popf
dec
jns
stos
cmp
lahf
jmp
xchg
cmp
fcmovnb
lods
jmp
mov
neg
jnp
out
les
mov
sahf
push
jns
xchg
and
ljmp
lods
push
mov
scas
aaa
or
imul
and
lret
or
addb
inc
add
jnp
jmp
add
sub
fisubrl
loop
clc
cmp
into
push
pop
addl
mov
pop
jge
xor
adc
std
or
cmc
aas
dec
push
stos
lds
mov
mov
mov
adc
lahf
cmp
cmp
mov
xchg
sub
xchg
in
mov
jp
call
outsb
push
nop
push
sub
mov
jns
ret
xchg
pop
mov
mov
mov
cmp
xlat
sbb
add
addl
aaa
pusha
popf
lds
lahf
inc
iret
mov
seta
lahf
push
jae
test
xchg
xor
insl
sbb
je
es
adc
or
and
popa
push
dec
mov
pusha
scas
sbb
cli
insl
jo
sti
cmpps
dec
pop
jnp
sbb
nop
popa
lret
into
mov
dec
jae
mov
or
mov
frstor
adc
xor
xchg
jmp
or
lods
aaa
and
lods
mov
fdivrp
jecxz
mov
je
cmp
popa
mov
xor
cmp
insl
testb
sbb
mov
sbb
pop
pop
insl
mov
pushf
iret
hlt
call
cmp
pop
sub
divl
push
pop
pop
int3
push
mov
mov
je
sub
push
in
sahf
or
pop
test
push
aas
scas
jle
loop
test
cs
ljmp
sub
adc
or
push
sahf
std
sub
das
aas
pop
add
push
push
jge
mov
gs
addr16
mov
mov
sbb
imul
adc
js
or
xchg
mov
lods
push
inc
movsb
sub
fists
fs
xchg
mov
dec
insb
cwtl
ds
push
mov
inc
xchg
jecxz
cmc
outsl
jmp
xchg
inc
jns
jbe
add
mov
mov
les
xchg
adc
and
push
cmpl
pop
ljmp
mov
loopne
mov
outsb
pop
mov
mov
fcomp
ja
xor
mov
add
lret
xchg
repz
es
cld
add
repz
push
cli
xchg
and
jp
push
test
xchg
pop
dec
xchg
jb
add
xchg
xchg
inc
push
xchg
fnsave
or
arpl
or
int3
pop
push
or
or
jg
push
push
clc
xchg
rcr
mov
cmp
test
add
jle
pop
xlat
jno
and
mov
lahf
icebp
dec
pop
les
pop
jecxz
mov
sub
dec
push
sub
fcomps
stos
loopne
outsl
pop
lcall
sti
dec
push
and
lea
mov
xchg
xchg
lahf
sub
adc
stos
push
adc
addr16
lahf
xchg
dec
aas
je
mov
or
and
mov
fcomps
ja
and
push
std
mov
jge
sbb
jge
and
loop
aaa
inc
test
idiv
inc
pop
stc
ret
mov
adc
ror
cmp
dec
into
dec
pop
popa
sub
es
xor
out
popa
sbb
insb
ljmp
sbb
lods
iret
mov
in
xchg
push
out
dec
adc
das
fcompl
inc
fisubs
icebp
push
adc
cmp
test
call
cmpsl
addr16
cwtl
dec
sbb
inc
ficompl
mov
iret
cmp
cmp
add
repnz
pusha
daa
outsb
and
repnz
pop
pushf
bound
lock
adc
add
sub
sti
cltd
fwait
sarb
fiadds
pop
mov
decb
mov
jne
mov
dec
sub
pop
aam
cmp
ret
rcr
mov
test
rorb
inc
pop
ljmp
xor
and
push
sbb
fldt
and
ret
ficoms
mov
loope
leave
loopne
mov
sub
mov
inc
lock
ds
jmp
push
dec
xchg
addr16
into
mov
mov
sub
mov
push
es
mov
cmp
loope
push
jmp
xchg
ja
in
mov
inc
insl
dec
xchg
stc
cli
dec
ficomps
mov
sbb
pop
rcrl
mov
cmp
sbb
out
xor
cmpsb
add
mov
mov
daa
sahf
xchg
push
xchg
popf
push
inc
and
xor
inc
insb
into
mov
fildll
stos
stos
lcall
lret
and
or
add
sub
test
mov
stc
adc
movsl
outsb
clc
mov
leave
hlt
mov
clc
je
mov
sub
add
cmp
add
inc
mov
and
adc
or
aad
or
add
in
sub
mov
insb
adc
xchg
sti
xchg
mov
jo
daa
xchg
insl
or
dec
lea
push
leave
jg
jmp
cmp
test
sub
and
mov
xor
mov
dec
jbe
push
ds
leave
sbb
cmpsb
xchg
jl
xor
cwtl
rcll
and
mov
sbb
aad
mulb
add
dec
shlb
dec
aad
and
xchg
xchg
adc
in
mov
cmp
in
fstpl
jl
cmp
cld
pop
cmp
add
jb
movsl
add
decb
js
jmp
mov
push
stos
pusha
jne
mov
insb
xchg
lods
filds
mov
adc
push
inc
mov
or
cwtl
mov
popf
dec
divb
cmp
sbb
fdivr
jmp
sub
insb
sti
stc
add
into
dec
sub
in
shrl
outsl
push
dec
popa
adc
xor
cmc
mov
cli
push
mov
repnz
movsl
stos
cmpsb
fiaddl
add
addl
add
insb
xchg
adc
or
add
scas
add
adc
popa
int3
pop
pushf
jg
push
repz
add
xor
or
adc
insl
or
xchg
outsl
jnp
sub
fwait
mov
adc
xchg
mov
and
cwtl
jle
imul
outsb
jb
test
test
sub
stos
push
or
mov
mov
iret
ja
gs
xchg
mov
es
push
cmp
pop
fstpt
adc
pop
jmp
mov
mov
xlat
inc
sarb
clc
dec
loope
add
data16
insb
add
dec
jbe
aas
movsl
sub
or
jge
xchg
js
jle
mov
pop
shl
stos
xlat
xchg
dec
xchg
and
cmpsb
outsb
push
dec
jns
imul
and
dec
sbb
inc
xchg
and
push
xchg
xchg
or
pop
pop
cwtl
lcall
mov
out
dec
ret
dec
inc
js
in
lret
addl
sti
mov
sub
dec
xchg
or
hlt
push
xchg
push
movsl
lcall
fsts
cli
push
dec
rorl
mov
or
mov
xor
daa
or
inc
or
fs
xor
jmp
push
mov
and
adc
mov
jge
add
jmp
push
mov
lods
into
mov
xchg
nop
into
sub
mov
inc
fstps
xor
fstps
push
xchg
xchg
dec
jl
dec
sbb
inc
mov
je
outsl
inc
add
ss
scas
ficoms
cmpl
add
cmp
sbb
sti
imul
xor
and
test
jmp
xchg
cmp
dec
mov
clc
outsl
mov
dec
mov
jo
push
ja
data16
cmp
and
insb
mov
inc
sbb
jae
lret
cmc
sub
fcomi
popf
sbb
xchg
pop
inc
not
add
addl
and
mov
test
shlb
repnz
es
js
daa
lret
cli
inc
or
xor
iret
fcomi
jge
xchg
out
push
jnp
test
inc
lock
sub
cmp
call
daa
js
inc
imul
inc
aas
lods
cmpsb
sbb
push
rcrb
pusha
std
and
imul
push
mov
dec
in
test
std
push
jnp
adc
ret
repnz
jbe
shrb
mov
mov
xchg
aaa
fwait
bnd
xchg
in
dec
pop
lea
push
out
add
subb
dec
or
mov
or
mov
inc
mov
jp
rol
fiaddl
rol
jno
sub
cmpsl
stos
aam
or
inc
adc
out
insl
punpcklwd
mov
xor
mov
imul
or
xchg
lock
jb
ss
iret
sbb
stos
xor
xchg
out
jle
aas
lret
imul
icebp
fcompl
and
icebp
and
into
lock
xchg
je
fdivrl
sbb
mov
stos
pop
push
or
adc
sbb
pusha
pushf
mov
and
fsts
movsb
and
dec
xor
aaa
or
lcall
mov
lea
push
lds
cwtl
and
ret
sti
xchg
dec
mov
bound
push
mov
jl
dec
add
pop
fld
popa
and
jmp
stos
and
mov
xor
ja
loopne
fwait
es
insb
cmp
cmp
movsb
or
imul
adc
push
call
imulb
les
push
test
mov
adc
push
bound
inc
jo
popa
or
aad
aam
fsts
inc
cld
cmp
sbb
xchg
mov
iret
xchg
out
cmp
lods
jle
idivb
inc
stos
cmp
movsb
fs
dec
mov
push
push
shrl
cmp
jns
ss
mov
xor
inc
iret
cmp
xchg
hlt
push
idiv
sub
pop
pop
fsts
push
gs
dec
sbb
call
add
mov
mov
mov
push
insl
sti
xor
lods
mov
inc
int3
pop
pop
sbb
test
pop
sub
mov
push
in
std
jmp
mov
aas
jecxz
add
or
scas
hlt
xor
inc
or
jo
rclb
pop
test
mov
dec
cld
ror
xor
xchg
xor
je
xchg
jno
out
inc
test
lea
push
stos
ljmp
xchg
xor
adc
pop
inc
or
shlb
jbe
jmp
jp
hlt
xchg
es
pop
outsl
mov
jae
lret
mov
stos
in
int
cmp
or
add
cmp
xchg
stos
dec
xchg
cmp
lds
jp
xchg
sbb
cmpsl
sub
pop
adcl
pop
dec
imul
add
cli
mov
ja
in
mov
sub
xchg
add
mov
xor
enter
adc
cmp
push
les
sahf
jge
loope
mov
pop
push
or
lods
neg
mov
fwait
daa
mov
mov
not
lret
dec
fistpll
push
arpl
loopne
jbe
push
xor
adc
cs
fidivs
es
cmp
inc
call
test
ret
push
pop
hlt
fimuls
jmp
pop
xchg
mov
lds
pusha
shrb
iret
xor
cmpsb
fucomp
lods
sahf
or
dec
sbb
add
xor
jle
in
ds
popa
sbb
mov
in
pop
push
cmpl
jg
pushf
push
push
and
add
push
push
dec
movsl
jbe
ja
or
adc
and
mov
jge
outsb
outsl
mov
ja
pop
pop
cli
test
sub
xlat
in
sbb
ds
pop
jmp
out
in
ret
cltd
mov
sbb
test
cli
jle
ja
cmp
push
xchg
cmc
inc
icebp
pop
mov
pop
es
push
xor
jl
xchg
insl
ss
xchg
repnz
inc
movsb
ret
cmpsl
movsb
adc
hlt
outsl
movsl
fstps
subl
add
aas
jno
pop
fisttps
dec
sub
sar
cwtl
or
outsb
push
dec
adc
outsb
or
testb
push
and
xchg
mov
stc
enter
and
adc
pop
rorl
fsubrs
out
ja
cmp
pop
and
cwtl
testl
es
inc
or
repnz
push
pushf
push
sub
in
jmp
sti
inc
fs
or
hlt
pusha
fs
clc
dec
xor
cmp
idivl
sahf
lock
cmp
loopne
lahf
pop
in
inc
pop
add
sti
fstp
mov
bound
push
mov
test
mov
arpl
mov
push
dec
aaa
mov
add
mov
nop
jmp
add
fsubs
push
insb
push
js
movsb
cwtl
and
or
mov
es
cmpl
mov
sub
faddl
mov
push
sbb
mov
push
sbb
push
fdivrl
leave
xchg
and
pop
dec
adc
stos
mov
cmp
pop
repnz
pushf
dec
hlt
cmpsb
adc
pop
pop
push
in
fimuls
in
inc
cld
jbe
xor
cltd
or
mov
mov
cld
ds
shl
mov
cltd
xchg
mov
ja
nop
insb
inc
xchg
inc
xor
rcr
outsl
mov
jmp
sub
lcall
out
jmp
push
fdivl
arpl
xchg
push
mov
mov
cmp
cmc
ret
outsl
sbb
push
mov
pop
jmp
mov
cli
leave
vcvttss2usi
icebp
sarl
ret
jecxz
xchg
mov
imul
mov
cwtl
aaa
mov
out
jl
inc
aam
test
sbb
push
std
jns
mov
adc
loop
pop
cld
lret
add
add
push
lea
ss
insb
adc
jns
out
jmp
mov
dec
push
mov
fnsave
mov
mov
mov
or
nop
mov
xchg
push
in
testb
leave
xor
pop
mov
xchg
cmp
xor
pop
xor
pop
addl
cltd
dec
cwtl
inc
mov
xor
jbe
shl
insl
or
xchg
push
inc
shrb
ret
cs
xchg
xor
xor
daa
inc
pop
xchg
and
cmc
push
add
clc
pop
ljmp
pop
push
fnsave
mov
xchg
jecxz
stos
shl
cmp
in
cmp
lea
cmp
js
in
pop
hlt
sbb
xor
maskmovq
imull
mov
call
movsl
mov
ljmp
xchg
pop
insl
pop
push
rcr
jmp
leave
push
data16
shlb
jecxz
stos
sbb
sbb
push
js
in
mov
fstl
pop
sahf
xor
mov
in
inc
pop
fmul
test
ja
dec
aad
or
adc
aaa
les
jmp
push
cmp
mov
mov
jbe
dec
sbb
pop
stos
mov
cmp
cmp
dec
lea
adc
popf
fildll
movsl
in
es
cmc
icebp
cld
xor
add
fstpt
fs
and
gs
jns
popf
clc
mulb
sub
mov
and
fst
mov
sbb
xor
inc
jnp
movsb
xor
and
shlb
aam
push
jb
mov
pop
rcrl
std
sbb
sti
and
dec
sbb
inc
pop
enter
subb
add
mov
into
and
data16
movsb
jbe
stos
stos
mov
pop
arpl
pop
push
inc
movsl
add
pop
add
dec
cmp
mov
push
cwtl
in
mov
inc
aas
mov
push
pop
mov
nop
cmc
in
and
std
stc
btr
xor
lret
fisubrl
push
andl
jg
inc
cmp
sbb
stos
test
popf
push
das
dec
mov
or
mov
in
pusha
dec
clc
fldt
loopne
dec
fsts
imul
adc
pop
ficoml
or
jne
outsl
cwtl
mov
test
ret
xchg
movsl
or
xchg
icebp
movsl
cmpsb
sbb
xchg
add
int3
jnp
mov
xor
dec
xchg
insb
sbb
rorl
cmp
imul
xchg
imul
bound
or
xchg
fisubrs
xchg
jae
insl
mov
rclb
and
push
mov
arpl
sbb
out
mov
inc
pop
outsl
imul
fcomps
sub
or
out
lods
sub
mull
aam
dec
mov
or
adc
xor
xor
xchg
loop
clc
mov
adc
popa
push
cwtl
push
adc
aaa
pop
ret
and
gs
xor
dec
stos
aaa
in
popf
nop
pop
mov
cltd
loop
inc
cwtl
ret
ljmp
test
jge
mov
adc
cli
mov
scas
pop
dec
out
out
mov
mov
iret
push
inc
xchg
inc
dec
idivb
add
lods
mov
arpl
repnz
shll
xchg
leave
adc
insb
xor
xchg
mov
pop
xchg
cmp
aam
inc
popl
push
addb
les
jge
xor
arpl
leave
sti
scas
dec
jl
enter
xor
push
xchg
xchg
lea
insl
add
test
rcll
in
pop
or
cmc
push
icebp
cmpsb
and
push
out
pusha
mov
dec
sub
mov
sub
sahf
cmp
in
mov
jne
es
fnstcw
cmpsb
sbb
jg
push
lcall
xor
pop
jle
push
push
cmc
adc
dec
mov
push
push
or
lds
jns
adc
movsl
cmp
lahf
lock
stos
pop
jbe
in
pop
clc
sahf
in
lods
hlt
cs
ret
xchg
int
jb
jae
dec
shl
in
gs
testl
movsl
push
dec
stos
popa
shlb
je
out
xchg
ljmp
dec
dec
aas
cltd
or
push
andb
mov
lahf
call
add
dec
aam
sub
adc
int
and
push
sub
fidivrs
cld
or
ficomps
mov
or
int3
int3
out
mov
les
sbb
and
int3
or
orl
add
lret
shlb
pusha
pop
add
xor
inc
push
add
cltd
jo
inc
outsl
mov
mov
pop
pop
jge
cmpsb
cltd
jl
push
ret
pop
dec
rcrb
std
pop
mov
mov
cmp
shll
iret
in
daa
stc
xor
mov
mov
jp
sbbb
push
cltd
sub
aam
jle
fcomp
mov
gs
fs
xchg
mov
push
mov
je
in
push
jne
adc
testl
mov
lea
lahf
jnp
add
loop
popf
punpcklwd
aad
xor
push
ret
out
repz
in
xor
pop
and
roll
clc
pop
mov
sub
fs
add
ficoml
xor
xor
inc
rolb
call
cwtl
dec
jns
or
clc
pop
rorb
add
test
cmc
push
imul
out
xor
dec
xor
push
mov
jge
adc
cmp
jb
popa
push
lret
and
imul
in
dec
gs
dec
cmp
sti
clc
aas
cmp
sarb
jns
call
idiv
movsb
xlat
add
cmpsb
jl
or
fnstcw
xchg
das
rcll
mov
gs
outsl
fs
xor
inc
enter
sarb
xchg
lds
adc
push
imul
xchg
cmpsb
cmc
stos
sahf
lods
js
rcll
inc
or
push
loope
xor
mov
test
push
inc
jns
pop
push
push
das
jmp
lcall
push
xchg
fs
inc
sub
jmp
xor
imul
dec
data16
aaa
in
ljmp
mov
shr
out
xor
mov
push
inc
xchg
movsb
xchg
shrd
jg
fistpl
add
pop
xor
aad
mov
xchg
ljmp
fadds
rorl
push
xor
adc
inc
aaa
xchg
or
insl
aas
dec
or
mov
clc
xlat
out
mov
ja
daa
ljmp
dec
lcall
push
jo
mov
mov
mov
adc
stos
cmp
push
inc
sar
adc
sbb
dec
lods
dec
mov
dec
test
mov
mov
mov
cmp
adc
rorb
xor
push
sbb
jl
stos
call
jecxz
out
adc
test
or
push
fwait
cmp
in
cmc
dec
sub
xchg
inc
lods
fnstsw
cmp
in
mov
addb
adc
adc
jbe
scas
loopne
clc
mov
dec
adc
movsl
dec
repz
sub
aaa
mov
xor
and
aam
cmp
jmp
hlt
shrl
pop
mov
pushf
std
and
stos
test
lret
daa
jb
enter
arpl
fiadds
pop
xor
cmpsb
int
cmpsb
pop
cmp
mulb
scas
stos
add
push
xor
add
jne
mov
mov
mov
out
loope
test
je
jecxz
rclb
xor
mov
xchg
mov
lea
sbb
adc
or
and
insl
repnz
jae
xchg
imul
inc
xchg
sar
xchg
mov
inc
sub
frstor
outsb
mov
xchg
mov
aad
hlt
in
fistpl
insl
mov
or
xchg
in
and
pusha
push
mov
daa
inc
scas
aas
push
fisttpll
and
pop
or
xorl
pusha
sarb
ds
push
dec
mov
mov
jo
inc
fsubrs
pop
out
sub
jp
cmpl
xor
mov
test
push
fsubs
imul
or
jmp
jb
mov
jmp
mov
inc
mov
stos
xor
insb
cmp
popw
fistpll
es
xor
ret
clc
test
loope
push
out
adc
les
dec
sbbl
arpl
adc
xor
inc
rorl
dec
enter
adc
jb
xorl
mov
jne
inc
pushf
ficoms
mov
xchg
inc
mov
ret
negl
into
mov
sbb
add
mov
fistps
sbb
add
sub
cmp
pop
addr16
js
cmpsl
pop
fbstp
fdivl
out
push
enter
adc
or
mov
ja
pop
push
cmp
dec
imul
sbb
cmovne
in
sbb
cmp
inc
mov
xor
lods
fcmove
fcomp
jmp
shlb
rolb
or
sarl
outsl
test
mov
mov
cmp
cmpsl
imul
fs
arpl
rcrl
or
rcrb
pop
xchg
push
bound
sbb
lea
add
lret
add
sub
leave
pop
mov
jmp
stc
xchg
push
jb
sbb
outsb
dec
aas
mov
mov
popa
shlb
mov
add
mov
dec
lock
xor
dec
xchg
mov
mov
dec
adc
scas
add
in
iret
jl
xchg
pop
dec
enter
stos
pop
icebp
ficoms
cltd
and
add
test
mov
inc
lds
xor
adc
push
push
outsl
or
xor
imul
popa
sarb
dec
lock
and
aam
rclb
xor
or
cli
stos
popa
cmp
lret
pop
inc
mov
nop
hlt
testb
and
mov
adc
loop
xchg
andl
outsb
icebp
sbb
add
xchg
lods
pop
dec
es
sbb
add
sub
loope
popa
sub
stos
js
or
mov
xor
aas
enter
out
sbb
jns
and
sbb
in
sbb
xchg
sarb
xor
jo
xchg
sar
test
sahf
adcb
out
ret
outsl
fisttpll
jae
jp
cmp
int3
and
or
push
mov
sub
inc
outsb
and
cmpps
nop
jno
ret
sub
push
xor
std
xchg
ljmp
push
cmpsl
test
fmul
mov
add
mov
push
gs
cmp
xor
dec
imul
bound
jmp
pop
out
push
negl
inc
out
adc
jae
xchg
pop
dec
push
mov
dec
dec
jb
cli
mov
mov
push
ret
out
lods
jo
das
mov
add
sarb
xor
testb
ficoms
jmp
pop
movsb
popa
out
nop
shll
shl
sub
insl
or
mov
sub
out
mov
adc
push
mov
sbb
cmpsb
adc
inc
mov
sarb
jmp
adc
aad
sub
fwait
sbb
out
jnp
jb
cwtl
sub
xchg
xchg
cmc
dec
lock
bound
jno
aad
into
jg
or
adc
test
mov
rorl
sub
mov
out
mov
fistps
clc
mov
ja
cmc
out
mov
mov
sub
psrlq
add
pop
sarl
fs
adc
dec
imul
jecxz
and
cmc
pushf
daa
push
insl
dec
mov
xchg
xor
mov
adc
sbb
pop
addl
mov
enter
and
and
mov
ret
pop
add
adc
data16
test
cmp
push
xchg
jmp
clc
sbb
subl
or
push
int3
out
rcrb
lcall
xchg
fnstsw
jmp
pop
lret
test
adc
mov
daa
mov
lret
incl
cmpsl
loope
xor
mov
repz
stc
mov
out
pop
push
push
psraw
push
push
sub
mov
and
shll
sbb
fmull
sahf
adc
rcl
adc
test
jo
mov
mov
sbb
mov
mov
loopne
jecxz
mov
iret
mov
aas
andps
jmp
cs
lods
loop
test
adc
pop
jbe
mov
mov
ss
movsl
test
dec
sbb
pop
pop
test
xchg
xor
inc
adc
jne
sbb
call
sub
and
inc
dec
push
sub
lock
sub
icebp
lcall
inc
xlat
mov
jbe
add
sub
jae
pop
popa
scas
data16
ss
pop
shl
sub
lahf
jno
adc
push
test
jns
fisttps
adc
add
stos
outsb
xchg
loopne
cli
fistps
jmp
hlt
aas
sti
jmp
lds
and
jbe
fld
mov
or
mov
or
aaa
cwtl
pop
push
push
sbb
outsb
andb
xor
mov
cwtl
add
add
or
movb
adc
pop
xor
movsl
mov
iret
dec
inc
mov
sub
dec
pop
cmpsl
pusha
dec
sbb
sarb
pushf
sbb
lods
xchg
fidivrl
dec
xchg
sub
cmp
sub
push
std
pop
in
add
xor
repz
sbb
neg
lods
out
stos
xchg
rcrl
repnz
sbb
aaa
das
sbb
gs
sub
mov
dec
lea
dec
pop
jle
movd
inc
sub
pop
inc
scas
fstpl
loop
orb
pop
sbb
sbb
inc
or
dec
push
pop
sub
popf
leave
push
notb
mov
pop
je
popf
pop
xchg
gs
jge
loopne
jns
add
icebp
push
cmpb
sti
test
xor
popa
cmp
mov
jo
mov
mov
fldlg2
add
xchg
inc
sarb
mov
and
adc
in
pop
insl
fistpll
pop
mov
or
pop
bound
movsl
mov
mov
lret
dec
cltd
xor
fists
orb
in
dec
mov
mov
pop
mov
enter
xchg
loopne
mov
dec
outsl
mov
xorl
loopne
dec
popa
mov
add
jo
cmpsl
imul
push
dec
dec
pop
into
jp
rcr
test
rorl
lock
test
icebp
out
dec
nop
jge
fdivs
mov
lret
xchg
ffree
pop
adc
xchg
insl
enter
scas
loopne
stc
icebp
adc
fcomps
push
mov
inc
stc
int
js
push
rolb
ss
ds
subl
jae
pop
jae
mov
movsb
mov
addb
lahf
xchg
dec
pushf
sub
sub
dec
cs
stc
leave
dec
pop
jo
inc
in
pop
sub
jbe
ret
push
mov
push
out
sub
arpl
cmp
fwait
imul
adc
xchg
jg
iret
mov
mov
mov
mov
shl
adc
mov
aad
loopne
popf
imul
sbb
sarl
mov
xor
loop
in
push
adc
jno
in
ret
xchg
lahf
and
pop
or
push
lahf
ret
cmp
shrl
fisubl
or
fidivs
loope
and
mov
adc
lret
faddl
jb
inc
push
push
daa
test
int
adc
xor
mov
lock
mov
stos
add
sub
adc
push
mov
sbb
scas
fcmovnu
ss
mov
inc
jno
fwait
add
or
ret
aam
and
mov
fcomps
scas
lds
inc
xor
inc
jbe
pop
icebp
fildl
push
lods
fs
jnp
or
sub
xor
out
jmp
lds
rcll
dec
shrb
mov
cmpsl
in
hlt
fsubl
add
push
xchg
cmpl
insb
xor
imul
jo
and
cli
jmp
and
push
shr
jo
int3
sbb
jg
xchg
mov
lods
inc
test
sub
cmp
gs
ja
mov
out
mov
add
xor
mov
xor
js
inc
shrl
push
arpl
add
fcompl
lret
shlb
out
insb
xor
cli
pop
dec
jne
int3
xchg
aad
jne
jmp
push
andb
movl
pop
pop
dec
add
test
movl
pop
shl
xchg
insb
mov
cld
push
mov
xchg
add
repz
xchg
lods
cltd
add
mov
cli
xchg
lahf
js
pop
or
loop
clc
cmpsb
das
xlat
xor
loope
stos
rorb
mov
or
stos
lea
divb
mov
cmp
idivl
jnp
jg
jnp
shlb
xor
sbb
adc
mov
test
clc
enter
loope
ds
fnstsw
mov
cmp
mov
test
mov
scas
xor
ja
mov
pop
aad
adc
je
loop
add
movsb
add
or
std
add
dec
shlb
test
mov
dec
icebp
lods
out
push
pop
in
inc
iret
fldl
cmc
bswap
jb
mov
mov
ror
cmc
cmp
rolb
xor
dec
popa
mov
enter
inc
cmp
iret
test
addr16
inc
xchg
fcompp
in
leave
int3
adc
jne
mov
int
addr16
push
fidivrl
xor
scas
or
dec
ja
into
mov
inc
xchg
out
ret
inc
dec
xor
inc
imul
imull
xchg
and
popa
loopne
sbb
jge
sbbl
out
and
and
dec
lock
pop
pop
gs
iret
bound
or
out
dec
es
les
jle
enter
pop
xchg
mov
loopne
shrb
jns
imul
movsb
clc
ljmp
xchg
scas
add
adc
inc
push
loopne
aas
add
dec
clc
fcompl
jge
jne
jae
xchg
push
mov
aam
pop
xchg
mov
xor
mov
pop
push
jns
jb
mov
notb
scas
push
adc
dec
fdivr
sbb
and
lret
xor
add
repnz
dec
imul
push
adc
pushf
mov
pop
xchg
in
in
push
imul
lret
leave
js
pop
sub
inc
ret
ljmp
adc
mov
lods
jmp
pop
insb
push
arpl
in
xchg
cmp
mov
imull
pop
mov
ret
or
push
pop
lret
jne
mov
ficoml
pop
adc
mov
inc
in
adc
int3
jo
cmp
xchg
sti
ficomps
xor
or
mov
push
sbb
test
xchg
mov
mov
adc
mov
rorl
mov
js
push
sti
xchg
ss
movsl
mov
jg
sti
js
loope
push
dec
movsl
jns
xrelease
pop
pop
mov
das
add
leave
cld
inc
cmp
jmp
shlb
or
pop
xchg
shrl
lret
in
push
lret
xchg
mov
out
sbb
mov
cld
xor
adc
inc
inc
leave
sbb
vcvtps2pd
sbb
imul
push
cld
and
adc
push
mov
dec
xchg
dec
cmpsb
cmp
pcmpeqb
out
sub
leave
ds
xchg
cmpsl
jle
add
out
lods
xchg
xor
pop
rcll
mov
dec
stos
stc
sbb
popa
dec
cmpsb
popf
or
or
mov
xor
jno
addr16
jg
bound
imull
lock
movsb
sub
jnp
and
pop
pop
jne
lret
into
pop
out
enter
mov
jns
xchg
call
xchg
sub
pop
or
xor
fsubrl
imul
test
xlat
into
mov
test
sbb
stos
nop
xorl
pop
fwait
cmp
stos
jmp
mov
mov
add
jne
loope
add
lods
jp
lds
cmp
add
mull
fisttpl
mov
je
lock
shlb
add
cmp
in
sub
xor
pop
dec
icebp
jge
mov
loopne
pop
dec
pop
nop
or
cmp
in
add
dec
push
rolb
add
push
bound
adc
jp
push
pop
in
mov
pop
loop
adc
and
orb
fwait
arpl
mov
into
enter
mov
lcall
test
out
ficoml
orps
xor
pop
xor
cmpsb
xchg
std
cmp
jbe
clc
int
sbb
in
inc
push
cmp
lods
and
cmp
and
or
aaa
cmp
pop
or
xchg
movsl
mov
mov
mov
xchg
push
mov
mov
cmp
mov
out
loop
pop
leave
or
icebp
cltd
fists
pusha
imul
clc
push
mov
stos
shlb
popf
cld
leave
adc
out
mov
xchg
push
popa
fimull
xchg
mov
cmp
inc
xor
adc
int
leave
xchg
enter
mov
cmpsl
frstor
rolb
mov
xchg
xchg
sbb
push
mov
adc
pop
das
pop
out
fnsetpm(287
test
push
scas
int
push
repz
data16
xchg
adc
scas
mul
jmp
pop
dec
je
mov
add
adc
enter
mov
xchg
insb
xor
lret
jle
push
inc
movsl
arpl
or
fisttps
fstpl
mov
add
pop
in
mov
cmpsl
fmull
cld
pop
sti
dec
add
inc
add
bnd
scas
jno
mov
adc
sti
fcompl
or
xor
adc
pop
insb
icebp
imul
mov
mov
shll
mov
inc
repnz
or
arpl
sbb
sub
mov
xor
out
jp
ljmp
sbb
aas
cmc
popf
fidivrs
sbb
test
addl
insb
mov
xor
dec
ss
loopne
push
inc
stc
pop
jp
lock
adc
mov
sbbb
and
and
lock
jecxz
fisttpl
in
or
cli
mov
stc
adc
jecxz
fwait
outsb
xchg
test
imul
xchg
pop
cmpsl
inc
pop
and
aas
inc
mov
clc
pop
insl
cmp
test
jl
sbb
mov
idivb
cmpsb
mov
mov
xor
mov
sub
push
movsb
ret
cmp
mov
fucomip
cmp
sub
fbstp
cwtl
mov
popf
jno
clc
pop
aad
jle
xchg
fisubrs
cli
mov
leave
lahf
push
fildl
aas
xor
rcll
adc
loopne
or
enter
inc
aaa
cmpsl
sbbl
scas
cmc
xchg
mov
cmp
xor
xchg
sarb
pop
sbb
or
int
cmpsb
into
sbb
movsb
lods
addr16
add
adc
aad
dec
mov
rcrb
xor
dec
jp
in
pushw
xchg
nop
pop
push
out
push
mov
scas
call
movsl
pop
cwtl
notl
jae
fwait
jb
or
jno
iret
add
pop
pop
lea
or
lods
aas
rcrl
dec
cld
mov
ret
mov
pop
gs
push
sahf
icebp
cld
gs
sarl
push
movsl
xlat
insl
mov
push
int3
cltd
insb
dec
shrb
jmp
scas
fisubl
lods
push
mov
and
je
ss
movsb
lret
lcall
add
das
popf
mov
and
push
sub
push
sub
cld
nop
sbb
push
ficomps
nop
out
inc
subb
repz
mov
cmp
or
mov
cs
mov
xor
stc
fidivs
pop
mov
aad
mov
dec
in
jnp
and
cmp
in
and
mov
or
mov
dec
fwait
pop
mov
or
mov
mov
mov
jl
lret
outsl
push
cli
push
mov
mov
jg
pop
push
pop
adc
imul
sbb
std
mov
pcmpgtw
jge
in
imulb
jge
xchg
std
test
mov
or
or
jbe
cmpsb
ja
call
or
mov
lcall
dec
mov
add
popl
sub
mov
mov
mov
add
cld
arpl
and
insl
sbb
add
outsb
cmpb
filds
nop
dec
push
sub
jmp
stos
or
cmc
sarl
outsl
cmp
filds
les
mov
imul
cmp
mov
mov
xchg
and
or
out
aaa
dec
jno
ret
aad
dec
push
xor
mov
mov
xchg
lods
jns
push
mov
clc
pop
push
add
or
repnz
lahf
cmp
sub
inc
mov
int
or
jmp
dec
into
jne
cmpsl
push
push
push
mov
and
ja
test
std
sbb
stc
icebp
inc
xchg
and
push
mov
cmc
fiadds
pop
mov
fs
cmp
inc
bound
nop
xchg
das
shlb
out
and
push
ja
sti
shll
mov
out
mov
lock
inc
inc
out
movl
jnp
sbb
and
pop
mov
xor
push
pop
test
lahf
imul
dec
push
and
xor
aaa
jne
ss
or
int3
push
mov
test
les
push
subl
push
xacquire
icebp
and
push
movsb
dec
fdivp
lret
das
lock
call
adc
fs
hlt
orb
fimuls
inc
mov
idivl
adc
dec
insl
mov
cltd
xchg
lea
add
and
pop
in
cli
xor
call
inc
push
fnstsw
xchg
and
leave
xor
pop
test
imul
xlat
cltd
pop
inc
adc
adc
xchg
push
sbbl
loop
lods
movsb
push
in
cmc
sbb
cmp
lcall
mov
jmp
lea
sti
mov
add
imul
jp
fisubs
dec
pop
repnz
jg
lock
cmc
mov
lock
push
adc
les
cmp
inc
std
pop
stc
mov
inc
push
adc
xchg
add
push
mov
stos
mov
inc
or
inc
lock
fdiv
push
cmc
jns
cli
out
out
xor
and
nop
mov
add
stos
and
nop
stos
inc
sarl
gs
jge
dec
aaa
xchg
fwait
mov
inc
and
loope
lahf
test
jb
mov
cmovl
mov
int3
push
adc
adc
fadd
rol
es
bound
push
sbb
and
xor
inc
cmp
arpl
cltd
sbb
scas
sub
sarb
push
and
mov
xor
gs
test
fbstp
jne
jl
push
es
lahf
int3
or
enter
jle
scas
pop
movsl
rorb
fldt
sahf
push
ja
gs
pop
adc
pop
or
jg
adc
inc
inc
push
sbb
inc
in
inc
mov
push
in
jae
rcl
jle
clc
ljmp
cs
fwait
xor
inc
pop
and
xor
enter
adc
int3
cmc
gs
xchg
dec
lods
cmp
sbb
repz
lock
in
jnp
dec
movb
or
int3
ficoml
and
test
xchg
ljmp
or
and
mov
ss
daa
rorb
xor
neg
lds
and
inc
xchg
popf
adc
push
icebp
sub
adc
sahf
dec
adcb
add
jns
mov
pop
adc
mov
push
aam
mov
enter
in
push
movsl
jo
lock
xchg
adc
cmp
imul
ja
dec
roll
imul
push
loopne
inc
pop
divb
adc
cmp
mov
hlt
lods
jle
mov
sahf
fwait
ret
xchg
add
cli
std
clc
clc
mov
cmc
andl
sahf
add
or
adc
out
notl
xor
push
pushl
xor
sbb
stos
js
add
push
scas
lods
mov
leave
out
push
or
hlt
push
mov
adc
cwtl
push
loop
cmp
add
mov
dec
mov
mov
xchg
dec
jne
movsb
in
out
add
in
mov
dec
xlat
dec
jne
mov
and
ret
pop
popa
loop
jmp
mov
xchg
aas
fidivl
adc
mov
lods
push
popf
aaa
cli
jb
shrl
int3
xor
aaa
push
in
xorl
or
dec
xor
dec
xchg
push
cmp
pop
push
ret
lcall
inc
fcomi
repz
mov
clc
inc
inc
cmp
cmp
mov
sub
gs
movsb
jp
add
add
test
jecxz
mov
call
jno
pop
in
push
fimull
add
addr16
pop
xor
in
sti
loopne
jmp
lret
das
sub
loope
addb
add
out
mov
xor
fstpl
and
lret
aaa
pop
or
xchg
sbb
cltd
dec
pusha
xchg
xor
fptan
scas
imul
aam
mov
aad
arpl
ljmp
hlt
jae
and
cmpsb
xchg
movsl
fs
inc
inc
mov
mov
out
xchg
sub
mov
mov
dec
into
iret
cmpsl
add
enter
movb
lods
ficomps
xchg
popaw
and
or
xor
mov
stos
adc
pop
xlat
or
mov
lcall
lcall
insb
ret
xor
imul
push
pusha
subl
push
jns
fdivrs
test
int
ss
rol
push
mov
push
js
mov
cmc
iret
cld
jae
adc
dec
aas
xchg
sbb
sbb
xor
cmpsb
mov
adc
das
sbb
lret
push
jnp
neg
test
inc
pop
ror
ror
lret
push
je
cmpsl
push
lret
push
in
sbb
mov
pushf
mov
mov
xchg
sub
sub
inc
std
and
pop
add
movsb
rorb
xchg
in
push
mul
out
cs
filds
std
sub
aad
add
or
and
test
add
scas
movsb
out
inc
cli
jbe
int
pop
orb
adc
notb
stos
and
adc
xlat
push
sbb
sbbl
sbb
into
sbb
fstl
lret
cld
icebp
xchg
sbb
aas
adc
bound
scas
mov
leave
lds
xor
cmpsl
loope
scas
lds
lcall
inc
dec
add
cwtl
ja
mov
ret
push
pop
pusha
mov
pushf
sub
sub
mov
jecxz
call
sti
cmp
xor
icebp
in
addr16
push
push
inc
insl
xor
movsb
push
inc
xor
sub
outsl
scas
sbb
fiadds
push
lcall
and
or
pop
xor
or
cli
jae,pt
cmp
sbb
and
pop
test
test
dec
andb
clc
ja
shlb
test
dec
hlt
ret
mov
loopne
aas
mov
gs
fwait
movsl
dec
iret
push
scas
popf
loope
lods
out
ljmp
mov
mov
leave
lock
jne
inc
xor
in
or
daa
ret
inc
adc
mov
repz
mov
or
jl
fisttpll
sbb
pop
add
lods
sbb
inc
mov
ret
btr
pop
and
stc
into
sbb
out
fisubl
stos
sbb
mov
fstps
shll
jle
mov
ss
pusha
mov
neg
xchg
sbb
call
sub
sub
leave
stc
in
ret
adcb
mov
shll
and
mov
mov
pop
lds
scas
fcomps
ret
jge
jp
sub
lods
sbb
stos
xor
cmp
xchg
popa
push
dec
jmp
add
or
mov
nop
dec
mov
fsubl
sub
test
repnz
in
pop
in
addr16
roll
pop
push
cli
push
push
les
rclb
pop
popa
mov
and
cmpsb
pushl
dec
gs
dec
xchg
inc
jne,pt
jge
int3
mov
std
out
fcmovnu
cmp
mov
pop
ss
arpl
inc
pop
js
lods
jle
dec
insl
mov
push
dec
inc
testl
js
shrl
push
sub
cmp
adcb
sbb
xor
rorl
cli
xchg
inc
insl
stos
add
scas
test
daa
add
add
popf
movsl
and
sub
sub
and
mov
or
push
inc
movsl
pop
aaa
dec
and
add
mov
mov
sbb
xor
daa
addr16
imul
push
pusha
mov
addr16
sub
push
lds
jno
lock
jbe
add
into
xor
dec
add
scas
lock
dec
shrb
sbbl
push
repnz
xchg
mov
jno
mov
adc
mov
push
cmp
sarl
lahf
pop
and
mov
pushl
out
out
add
out
sub
fidivl
xchg
sbb
adc
or
rcrb
in
sbb
push
shrl
mov
repz
and
fnstenv
or
loopne
aad
dec
xor
call
imul
loop
and
lahf
shlb
ror
repz
push
sbb
lods
ret
insb
xor
and
dec
hlt
inc
pushf
inc
test
pop
xchg
xchg
adc
push
lock
lds
aam
and
lcall
push
ror
jnp
xchg
push
lock
push
shlb
cli
dec
adc
sbb
sbb
sarl
add
jns
mov
or
popl
push
in
mov
mov
sbb
or
mov
lods
xchg
xchg
lock
push
stc
nop
shll
jns
push
ds
push
jno
addb
std
mov
pop
icebp
fstpl
iret
test
ror
fstpl
repnz
pop
jb
xor
int3
movsb
lea
rorl
out
pop
ret
push
in
lret
dec
pop
cmp
mov
roll
push
jmp
cmc
rcll
add
jo
mov
inc
or
ljmp
mov
sub
inc
xchg
or
daa
js
lret
in
imul
dec
xor
fdivrs
enter
inc
aam
scas
mov
in
sbb
mov
xchg
cwtl
push
or
add
dec
inc
dec
sbb
xor
movsb
fwait
call
sbb
popf
jg
fisttps
xchg
cmp
bound
inc
imul
dec
ret
mov
push
sub
xchg
rolb
mov
imul
push
js
inc
ja
and
xchg
cmpsb
jmp
and
push
jns
mov
aam
psubsw
dec
push
ss
add
mov
adc
jge
xor
push
sub
ds
out
test
lret
dec
sub
shl
leave
inc
push
in
in
leave
jns
insl
mov
lahf
pop
nop
sbb
inc
adc
mov
dec
xchg
addr16
and
mov
mov
js
inc
push
mov
iret
xor
pop
ss
data16
sbb
pop
iret
push
mov
xchg
pop
xchg
add
adc
out
mov
pop
in
push
dec
mov
in
fwait
in
sbb
jns
mov
stos
mov
int3
pop
clc
repnz
cmp
pusha
fwait
pop
pop
push
mov
shlb
push
inc
mov
insb
fldl
iret
addb
add
and
push
scas
mov
cwtl
dec
addb
sbb
cld
enter
xchg
ljmp
and
jmp
xor
ljmp
int3
shr
pop
push
insb
cld
pop
sti
out
pushf
ret
push
imul
mov
call
js
inc
inc
nop
inc
test
adcl
mov
mov
jb
jno
cltd
cwtl
stos
add
mov
xchg
fwait
into
leave
cmpsl
arpl
xchg
jle
js
aaa
test
cs
inc
icebp
mov
test
add
sub
aaa
pushf
jne
int
in
xor
jecxz
xor
mov
rclb
pop
aaa
aas
std
sbbb
xchg
in
cld
jae
xchg
sti
pop
pop
pusha
jge
hlt
aas
xorl
or
ljmp
call
push
push
ss
loop
arpl
pop
call
lock
xlat
or
jl
insl
lahf
cmc
and
fldt
dec
lods
into
daa
lcall
mov
sbb
fs
xchg
es
fdivs
fnstsw
test
sub
fcomip
add
xchg
pop
ljmp
arpl
push
inc
adc
lret
rclb
ljmp
adc
hlt
cmc
xor
mov
fisubrl
mov
cmp
sub
in
int
das
imul
mov
inc
xchg
mov
sti
xor
lods
sarl
pop
dec
js
popl
out
dec
and
add
push
je
push
add
dec
in
cld
inc
jb
xor
sbb
dec
and
cmp
push
ljmp
ljmp
cmp
inc
int3
sti
cmc
popf
aad
pop
sub
int3
aam
clc
hlt
fdivrs
loopne
pop
and
and
inc
aaa
insl
ss
pop
rclb
lret
xor
aad
or
mov
add
add
push
sbb
dec
add
add
inc
add
add
add
add
add
add
add
sub
adc
xor
adc
inc
add
aam
add
xrelease
add
adc
push
add
add
add
add
inc
dec
inc
int3
in
mov
cli
cs
push
jne
inc
insb
insb
dec
outsl
jae
inc
popa
insb
insb
inc
popa
arpl
mov
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
add
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
adc
pop
call
mov
pop
lods
jne
cwtl
sub
push
adc
pop
pop
push
push
mov
pop
pop
add
xor
mov
add
movswl
mov
mov
sub
push
mov
pop
sub
call
cmp
xchg
pop
add
and
pushf
movsl
call
and
xor
shlb
int3
adc
sub
sbb
mov
mov
sub
jmp
addl
jle
sub
dec
adc
dec
jne
movswl
outsl
and
mov
std
cmp
xchg
jge
mov
jnp
in
pop
mov
enter
jo
pop
stos
or
pop
mull
adc
mov
enter
xchg
aam
cwtl
bound
sub
push
mov
push
dec
lret
dec
aad
cmp
dec
pop
pushf
push
out
or
xor
xor
ds
aam
pop
mov
int3
sbb
dec
movsl
or
mov
add
jns
jl
sbb
repz
lods
pop
fsubs
loopne
icebp
fistpl
fsubrs
mov
mov
jbe
enter
adc
mov
pop
mov
xchg
int3
in
bound
mov
loop
mov
cld
cmpsl
pop
or
shrl
test
arpl
loop
sbb
lcall
add
lret
stos
and
sahf
jo
cltd
arpl
mov
shrl
pushf
es
and
xor
jno
xchg
or
mov
sar
xchg
mov
and
movsb
lock
fmull
in
lock
lcall
fldenv
mov
fwait
sbb
inc
imul
xchg
push
rcrb
cmp
movb
jnp
das
outsl
scas
incb
mov
pushf
loope
imul
mov
push
mov
dec
in
xchg
adc
push
mov
mov
aam
sbb
adc
xchg
pop
out
push
mov
lods
andb
in
push
push
cltd
lahf
lcall
dec
mov
scas
jo
pop
gs
push
gs
dec
jp
xlat
mov
lods
out
xlat
roll
sub
jmp
ret
xchg
fistps
out
rcl
add
mov
movsl
out
or
dec
push
and
push
inc
mov
mov
ja
lcall
jge
out
push
mov
mov
sub
fadds
cmp
out
fsubs
lods
out
dec
dec
loop
shl
lds
out
stos
outsb
ljmp
push
cli
imulb
or
repnz
cmc
jl
sub
mov
scas
out
inc
and
push
mov
xchg
dec
mov
and
or
xchg
dec
mov
shl
ret
in
sbb
inc
adc
mov
and
in
pop
mov
fwait
mov
mov
sbb
jb
jmp
and
ja
xorl
leave
iret
push
jmp
leave
jns
bound
icebp
movsl
sbb
push
movsl
pop
dec
xor
loopne
add
pop
lods
leave
nop
push
and
xchg
xor
inc
push
movsl
pop
dec
xor
loopne
daa
daa
aas
xor
and
pop
repz
movsl
mulb
cld
std
idivl
xor
enter
and
into
loop
jns
xchg
jnp
repz
adc
and
pop
repz
pop
repz
pop
repz
ljmp
jb
repz
xor
out
imul
iret
ret
and
add
cmp
xor
and
pop
adcl
mov
and
pop
loope
xor
pop
mov
jmp
add
xchg
mov
jns
add
cmp
icebp
add
xchg
xor
ss
inc
ret
mov
push
ds
push
inc
sub
push
mov
jmp
int3
leave
cmpsl
das
leave
and
clc
icebp
cmp
pop
push
sbb
xchg
cmp
pop
push
pop
inc
jae
pop
loop
repz
mov
inc
mov
adc
dec
icebp
add
cmp
cmpsl
xor
and
mov
xor
cmp
pop
repz
pop
push
mov
jmp
mov
and
ljmp
ss
or
mov
leave
and
or
cmp
outsb
in
stos
dec
ss
pause
or
and
popa
cwtl
leave
dec
test
xor
and
xor
pop
repz
repz
pop
repz
push
push
sub
push
mov
pop
dec
dec
mov
les
lods
bound
mov
jmp
outsl
xor
xor
lock
jno
pop
sbb
and
ret
mov
cmp
jne
lock
xchg
loopne
ret
les
in
push
xchg
lods
jb
inc
repnz
sbb
and
iret
loop
xchg
popf
ljmp
and
pop
leave
in
inc
xchg
lods
jb
inc
repnz
sbb
and
insb
cmp
and
mov
fmul
and
pop
leave
in
inc
xchg
lods
jb
inc
sub
mov
jmp
insb
cmp
jge
push
mov
and
or
pusha
icebp
or
cmp
call
in
push
xchg
lods
jb
cmpsb
mov
insb
mov
pop
ret
xchg
fidivrl
jmp
mov
and
popa
cmp
aaa
push
push
fwait
rorl
out
ret
mov
dec
lods
push
sti
mov
inc
cmp
mov
fwait
rorl
out
ret
imul
mov
sbb
pop
repz
pop
push
pusha
push
mov
repz
xor
and
pop
repz
jb
push
jmp
xchg
mov
push
sbb
cmp
stos
dec
mov
das
mov
add
call
repz
repz
add
cmp
mov
add
icebp
cmp
and
pop
push
lahf
adc
filds
pop
jns
add
cltd
xchg
data16
mov
loopne
and
addr16
mov
ss
and
mov
pop
mov
ss
add
js
pop
fstps
jo
adc
test
mov
sub
xchg
and
jecxz
inc
jge
xchg
mov
jne,pn
stos
pop
repz
pop
repz
pop
repz
pop
repz
pop
repz
pop
repz
pop
repz
pop
stos
and
iret
rolb
push
mov
xor
and
pop
repz
imul
xor
and
pop
repz
outsb
pop
and
pop
repz
pop
repz
pop
repz
pop
xchg
dec
in
adc
mov
dec
add
imul
add
fs
stc
in
mov
out
mov
and
sub
xchg
mov
cmp
sbb
adc
imul
push
loopne
push
jmp
jae
adc
push
adc
scas
lds
mov
sub
cwtl
dec
push
push
push
lret
mov
push
lret
pop
mov
into
out
lcall
fdivs
cmp
lret
sub
xor
leave
cmp
mov
loopne
jns
push
ror
jge
aas
mov
and
adc
popf
adc
inc
dec
pop
push
insl
xchg
mov
test
lods
mov
aad
mov
push
mov
out
jns,pt
mov
outsb
or
fcoms
cli
lea
femms
pop
add
mov
add
jnp
add
xchg
xchg
lods
mov
push
and
loop
fs
lds
xor
lret
or
mov
mov
fdivp
es
mov
dec
sbb
cmp
xchg
in
inc
gs
mov
add
fstps
lods
xor
jne
pop
loope
and
mov
dec
mov
inc
outsb
imul
dec
xor
mov
fidivrs
pushl
mov
xchg
mov
int
or
pop
fisttpll
cmp
push
stos
mov
repz
icebp
je
xor
out
pop
dec
dec
cmp
loopne
mov
push
stc
cmp
scas
jp
mov
negl
rcll
or
out
jmp
ss
xor
xchg
lea
adcl
inc
sbb
sbb
pop
push
fdivrl
adc
adc
mov
lock
xor
loope
pop
sbb
shlb
or
sbb
aad
aaa
ja
faddp
cld
aam
imul
sbb
ds
test
in
clc
inc
cmp
or
dec
call
decb
mov
test
mov
lock
fisubs
cmpsl
enter
or
fs
pop
push
mov
or
jns
insl
pop
push
bound
inc
adc
adc
mov
xchg
cmpb
mov
je
and
sbb
stos
ds
repnz
or
fisubrs
in
or
xor
mov
ljmp
nop
push
pop
sbb
rorl
in
cld
mov
inc
sbbb
pop
sahf
jne
repz
out
mov
push
arpl
repz
aaa
out
adc
pop
bound
add
add
or
add
adc
sbb
add
sbb
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sbb
add
sbb
pushf
sbb
adc
test
push
adc
mov
adc
pusha
push
adc
mov
push
adc
leave
sbb
adc
rcrl
adc
loopne
adc
sbbb
add
sbb
adc
stc
sbb
adc
add
adc
cwtl
push
adc
adc
adc
mov
add
add
push
adc
sub
adc
mov
adc
ss
adc
mov
add
add
adc
rcrb
add
jae
jo
xor
cs
insb
add
outsb
insl
insl
cs
insb
add
xor
xor
fs
insb
add
gs
xor
fs
insb
add
imul
insb
add
outsb
jae
outsl
outsl
insb
cs
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
outsb
imul
insb
add
insl
fs
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
push
adc
add
add
fistps
adc
add
add
add
add
add
push
adc
add
add
add
adc
add
add
or
add
add
adc
add
add
sub
adc
add
add
inc
pop
adc
add
add
mov
add
add
adc
add
add
popw
adc
add
add
jns
adc
add
add
mov
adc
add
add
mov
add
add
add
jae
gs
outsl
outsb
outsb
arpl
popa
je
jae
add
add
imul
push
gs
popa
jb
add
add
je
jne
dec
outsb
jne
add
push
gs
popa
jo
outsl
fs
add
outsb
push
jb
outsb
je
jb
add
add
addr16
jo
outsb
dec
gs
js
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
add
gs
outsb
imul
add
add
popa
addr16
imul
add
add
je
jb
gs
outsl
outsb
outsb
arpl
add
inc
gs
popa
jbe
inc
imul
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
sub
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
testb
push
jg
addr16
or
add
add
add
xchg
xor
inc
cmp
jns
pop
filds
jge
mov
xchg
mov
push
xchg
insl
dec
push
pop
pop
daa
jp
stos
adc
dec
jl
movups
lcall
pusha
mov
mov
pop
add
sbb
inc
jns
inc
pop
mov
sbbb
inc
int
xor
jb
mov
sub
dec
xor
sbb
sbb
dec
pop
leave
popf
mov
cmpsb
out
add
lahf
xchg
sahf
xorb
mov
xchg
xor
jbe
cmp
mov
les
xor
into
scas
fstps
mov
lcall
push
sahf
xchg
cwtl
outsb
cs
sub
push
and
iret
jle
mov
cmp
rcrl
inc
mov
shlb
mov
inc
sbb
jp
dec
jns
xchg
aad
push
lock
sbb
cmp
sbb
add
out
adc
adc
int3
jle
bound
leave
xchg
imul
xlat
lcall
cmp
dec
xchg
sub
push
testl
test
jge
add
loopne,pt
pop
js
and
pop
iret
jg
jae
es
jae
jno
in
jne
pop
sahf
mov
mov
adc
xor
xchg
aad
repz
adcl
ret
xor
fstpl
mov
mov
popf
xchg
clc
or
jl
pop
cmp
cmc
xchg
roll
and
lahf
xchg
ror
push
dec
mov
sbb
add
mov
mov
jecxz
cs
lods
or
icebp
or
sub
rcrl
fwait
pop
repnz
je
adc
daa
inc
mov
mov
and
insb
outsb
fsts
jnp
mov
mov
sub
pushf
xor
cmpsb
cmc
enter
pop
jecxz
jo
out
mov
scas
xchg
push
mov
pop
pushl
lcall
in
xchg
mov
popa
jmp
test
out
mov
push
push
clc
cld
mov
cwtl
mov
sbb
pop
daa
push
sub
inc
push
dec
pop
dec
ja
pop
clc
adc
ret
xlat
xchg
shll
call
mov
pop
scas
scas
sub
out
push
and
pop
cmp
shr
ret
sub
int
lcall
cmp
sti
push
xorl
in
sub
and
xchg
rolb
mov
mov
test
lahf
and
out
adc
mov
mov
xchg
fisubl
add
jns
cmp
cwtl
lcall
mov
insl
mov
loopne
ja
fistpl
movsb
ss
mov
inc
int3
mov
mov
ljmp
inc
cmc
cmpsb
or
jg
add
pop
fidivrs
jnp
sbb
xchg
daa
jge
cltd
adc
mov
fwait
push
das
mov
push
repnz
aad
ds
xchg
test
mov
fs
push
or
sbb
jmp
adc
xor
xchg
jl
lock
leave
dec
mov
jno
dec
fnstenv
fstps
outsl
adc
cmp
push
test
push
insb
xchg
push
jo
jnp
negb
sbb
inc
and
or
mov
push
jbe
nop
mov
dec
mov
repz
inc
sbb
sub
xor
enter
insl
test
movsl
leave
cmp
sbb
add
and
fnstenv
pop
cmp
push
mov
lahf
sbb
loopne
lods
push
lcall
mov
mov
call
push
icebp
mov
mov
test
push
mov
out
test
sub
mov
ret
pusha
inc
mov
test
lds
inc
or
cwtl
lahf
cmp
outsb
movl
scas
sbb
xchg
repz
and
icebp
pop
inc
test
sub
lods
fnstenv
adc
rclb
adc
sbb
popa
scas
sbb
xchg
out
arpl
and
push
or
add
cmp
push
outsb
jecxz
daa
xchg
les
jne
cmpsl
push
push
push
inc
xchg
jno
sub
pop
dec
jo
push
add
and
imul
rol
sub
rep
xor
sbb
add
push
cmpl
jo,pn
or
sub
out
xlat
and
fildl
inc
stos
jmp
sub
xchg
cmpsb
icebp
pop
jg
fcmovbe
out
jb
movsb
xor
jp
dec
sbb
loop
fstl
cmp
outsl
inc
cmpsl
and
push
or
add
test
cmp
fwait
jnp
cld
add
inc
jecxz
dec
mov
cli
lahf
outsb
push
pop
cmpsb
pop
leave
sahf
mov
cs
xchg
mov
mov
mov
adc
pop
subl
leave
add
add
jle
mov
inc
jbe
in
shlb
ss
push
dec
ja
mov
xor
ja
add
out
movsl
fs
loopne
xchg
sahf
cmpsb
sbb
push
ret
dec
ss
pop
pop
fcomps
in
or
notb
movsl
push
jp
cltd
sbb
ret
in
int3
repz
mov
xor
pop
inc
mov
push
loope
jp
or
mov
or
fwait
mov
inc
xor
push
push
outsb
mov
mov
mov
add
out
stos
mov
xor
out
push
cmp
out
xchg
sbb
push
xchg
into
jno
in
pop
or
add
loopne
pusha
pop
xor
push
fstpl
imul
inc
enter
fcomip
push
cli
push
dec
es
fs
cmp
jmp
cltd
dec
addb
lods
out
xchg
push
add
xchg
jmp
mov
les
sbb
pop
bound
mov
pusha
inc
push
adc
add
inc
imul
dec
jno
loop
or
sti
pusha
shll
aad
pop
insb
cwtl
and
ss
or
mov
cmpb
adc
in
fidivs
jmp
sbb
js
movsb
xchg
cmp
fisubs
push
popa
je
in
sub
dec
sti
shlb
jbe
mov
adc
jnp
push
mov
pop
gs
out
pusha
dec
adc
jns
sti
ficoml
dec
pop
jno
out
and
mov
jo
fdiv
je
lret
mov
fsubl
cmp
inc
ret
jg
cli
fstl
xor
mov
mov
sub
jge
sbb
jl
enter
imul
icebp
push
ret
test
xchg
mov
inc
daa
cmp
pop
push
inc
loopne
inc
je
test
outsb
mov
into
sahf
jmp
sahf
jb
xlat
pop
xor
cmp
add
or
cld
outsl
or
xor
lret
addr16
fdivrp
pop
cmp
rcrl
adc
and
inc
pushf
jne
push
fbstp
in
add
jno
lahf
xor
rcrl
push
fwait
sub
mov
fwait
xlat
pop
jmp
cmc
sub
or
fcomp
xchg
popa
je
jmp
das
sbb
addr16
and
adcl
or
cmp
push
flds
xor
das
adc
mov
jno
dec
and
xlat
int3
jecxz
cli
dec
pop
fisttpll
cmp
and
sbb
pop
stos
pop
push
lock
jp
pushf
call
fmull
testb
jg
out
inc
sbb
out
pop
pop
in
cs
mov
push
add
sbb
ret
negl
add
stos
lahf
inc
mov
xor
pusha
pop
and
shlb
or
nop
int
ret
and
lea
lods
or
clc
fsubr
sbb
js
add
dec
xchg
orl
fsin
out
in
out
dec
xchg
and
mov
mov
push
lds
test
push
add
call
ljmp
out
and
sarb
dec
jl
adc
pop
aas
cmpsl
lds
mov
mov
mov
xchg
into
jb
pop
mov
or
mov
push
das
lock
sbb
out
pop
jmp
or
add
jnp
call
int3
add
mov
iret
mov
sti
aaa
xacquire
jb
xchg
pop
addr16
pop
hlt
pop
ret
jbe
adc
movsb
mov
cmp
jg
cmpsb
inc
pushf
cmp
or
fs
xchg
shrl
stos
bound
daa
std
inc
cmp
in
dec
jmp
sub
xor
test
xchg
gs
xchg
cmc
mov
or
arpl
jns
pushf
add
div
adc
mov
loopne
mov
aaa
fs
inc
aaa
pop
dec
lret
addb
cmp
xor
pop
es
xor
clc
jl
sbb
dec
arpl
insb
sti
daa
sub
xor
cli
mov
clc
aas
mov
js
stc
outsl
mov
ljmp
adc
push
pop
cltd
repz
enter
mov
dec
dec
enter
add
ret
and
fwait
sbb
movsb
imul
xlat
add
mov
in
or
loop
xor
sbb
or
jmp
xchg
ljmp
repz
pusha
mov
dec
ret
orl
pushf
mov
test
nop
jae
arpl
fisttpl
sbb
push
dec
test
sti
call
scas
das
push
mov
cmp
loope
pop
je
xchg
out
jb
or
push
cmp
pop
popa
sub
jp
daa
into
fsubrs
and
mov
xlat
xchg
push
jl
shlb
je
es
lock
int3
rcr
mov
fwait
aad
dec
movsb
and
jmp
or
push
test
jp
push
mov
mov
sti
daa
push
stos
fdivp
ret
cs
add
mov
jne
cltd
adc
rcrb
cmpsb
test
inc
popf
adc
int3
insl
bound
cmp
lock
adc
mov
lea
mov
aaa
popa
out
loopne
xchg
addr16
add
fildll
cmp
jmp
push
cmp
xor
out
sub
mov
or
sbb
lods
lock
lret
pop
mov
pop
or
adc
xor
xchg
mov
movsl
mov
push
mov
repz
xchg
mov
out
shll
cmpsb
add
xor
xchg
pop
inc
leave
cmp
cmp
sbb
jb
pop
jno
fnstenv
sbb
ret
hlt
add
fwait
mov
mov
sbb
inc
std
loope
mov
orl
je
loop
test
repnz
cmp
sub
in
gs
push
ffreep
test
pop
sub
hlt
pop
inc
fsubrl
adc
add
pop
int3
jb
pop
rolb
sti
dec
mov
push
xchg
adc
dec
cmp
lret
push
jp
push
cmpsb
sbb
ss
ss
dec
pop
xlat
cltd
int
aam
popa
adc
xor
mov
sub
ss
add
dec
lret
loopne
jge
mov
loopne
mov
jo
mov
pop
mov
rcl
push
lret
sub
aas
shrb
sub
sub
loopne
sub
push
test
fldenv
invd
xlat
mov
jle
mov
das
xchg
lahf
loope
outsl
sbb
fcmovnbe
lret
add
jo
fistps
je
lock
mov
shll
out
fsubrl
jge
imul
std
or
sub
push
ljmp
push
sub
sub
dec
rcll
popa
fs
xchg
in
mov
jb
ljmp
xchg
mov
adc
mov
mov
bound
in
jmp
stc
test
test
imul
cmp
fdivl
sar
decb
fwait
or
hlt
sub
add
call
stc
cwtl
sub
jp
out
xor
jnp
aad
out
adc
in
in
loop
dec
pop
xchg
pushf
out
mull
xchg
mov
mov
test
mov
push
sub
mov
pop
lods
and
aaa
fs
pusha
inc
jmp
insb
pop
pop
add
xchg
dec
adc
das
fnstcw
mov
out
dec
or
mov
xor
pop
mov
xchg
dec
fdivl
push
adc
test
push
sbb
mov
inc
enter
cmp
dec
jmp
das
jne
mov
sahf
mov
lahf
addr16
mull
repnz
cmp
mov
fimuls
dec
jmp
bound
fwait
lock
in
or
push
lods
repnz
aad
int
mov
cmp
mov
lretw
mov
pop
negl
out
cmp
subl
jnp
outsb
cmp
add
xor
popf
ja
je
pop
mov
add
loopne
decb
leave
mov
adc
call
iret
fcmovnbe
sahf
or
mov
adc
jae
cli
rcrb
aam
xchg
int3
out
cmpsb
rcrl
lahf
lret
push
jle
xchg
lahf
sahf
and
adc
sbb
gs
jge
std
pop
add
fwait
push
test
pop
stos
xchg
pop
in
fmull
xor
ror
cli
pusha
mov
sub
out
mov
gs
fiadds
cmp
cmp
scas
imul
ja
dec
xchg
loop
dec
imul
adc
lods
pop
mov
incb
xor
imul
shll
pusha
loopne
add
rolb
inc
in
stc
shrb
jnp
fildll
jge
ret
xchg
mov
push
sbb
sti
inc
mov
or
jecxz
mov
xor
push
das
fistps
sub
lods
and
mov
shr
pop
pop
and
div
or
inc
ret
push
jo
jmp
cmp
or
mov
shlb
add
sub
mov
push
xor
lods
xor
mov
mov
add
mov
push
inc
shll
mov
xchg
gs
sub
dec
mov
mov
adc
inc
cli
or
fadd
lds
jo
into
pop
and
fadds
inc
andl
sbb
mov
arpl
pop
sub
cs
mov
cmp
mov
cmp
pushf
mov
leave
cs
jno
mov
mov
daa
jb
mov
adc
and
jb
icebp
xor
add
scas
shrb
push
gs
mov
xchg
out
call
or
xlat
loopne
shrl
pop
cmp
aas
push
dec
mov
sub
sub
mov
ffree
ljmp
dec
fst
sbb
and
fs
push
push
xor
aam
out
aad
xorl
push
jns
cmpsb
enter
pusha
push
popf
dec
stos
xchg
fwait
inc
mov
push
lds
movsl
repz
jmp
jle
arpl
jecxz
add
jns
int3
sahf
dec
int3
or
push
lret
stos
jp
xchg
push
out
jmp
mov
loop
inc
inc
std
adc
testb
push
mov
or
dec
inc
dec
lcall
outsl
dec
jp
lods
nop
cmp
mov
and
dec
sbb
mov
push
add
or
dec
adc
sahf
stos
fdivl
and
lods
xor
mov
xchg
mov
out
test
and
mov
pop
mov
dec
mov
mov
pop
movsb
push
push
xchg
lock
push
xchg
addr16
fnstsw
mov
mov
call
sub
lcall
cmpsl
mov
icebp
stos
xchg
pop
test
sahf
ret
fmuls
and
into
add
dec
hlt
cmpsb
or
sbb
fwait
in
call
inc
out
add
das
and
xor
mov
jns
ljmp
sbb
sbb
mov
cmp
inc
mov
pop
scas
and
dec
enter
aam
icebp
push
out
cli
sub
jg
xor
cmp
pushf
adc
rcl
imul
sub
sti
inc
push
stos
pushf
aas
andl
enter
sub
jae
mov
dec
fnsave
inc
test
and
jnp
or
jecxz
push
cltd
push
call
adcl
xor
xorb
mov
mov
push
or
addr16
popf
sahf
xor
pop
clc
cmpsb
mov
sbb
sub
rcll
ret
rol
aam
mov
xlat
jg
or
add
stc
mov
pop
dec
sbb
or
insb
and
mov
daa
adc
adc
jns
and
lods
pop
xor
xlat
dec
aam
push
xlat
dec
into
push
inc
ficomps
repz
cmp
push
into
pop
adc
sbb
add
in
je
push
and
popf
jns
and
jecxz
fdivl
jp
mov
jmp
push
and
movsl
xchg
and
mov
mov
dec
cmp
into
cmp
ficomps
fbld
xor
xchg
popf
in
xlat
sub
aaa
lods
mov
das
mov
dec
inc
or
shl
cmpsl
mov
jecxz
mov
push
subb
mov
stc
lret
jmp
imul
js
outsb
ret
dec
cmp
push
push
in
mov
inc
in
inc
std
gs
movsb
in
mov
and
inc
rcll
xchg
aas
push
and
add
or
and
stos
pushf
and
dec
jge
es
insb
sub
jnp
mov
int
mov
dec
mov
hlt
pushf
cmp
leave
sub
test
mov
and
imul
jns
add
xor
lret
cs
fucom
mov
into
loope
mov
rcrb
adcb
or
outsl
int3
xchg
jmp
xor
popa
fs
adc
out
in
stc
jbe
insb
push
gs
xchg
sub
data16
adc
cmp
nop
bound
ret
iret
push
sbb
inc
and
movl
inc
jns
cmp
scas
into
pop
add
lret
ret
add
test
addr16
cmp
jnp
pop
scas
push
dec
push
rcll
cmp
push
or
or
enter
into
mov
out
adc
and
mov
orb
xor
add
popa
add
test
lahf
mov
lret
mov
jl
mov
gs
std
fistps
repz
fsubl
mov
pusha
xor
sar
or
push
shrl
sub
nop
out
shl
sahf
cmpsb
or
mov
rolb
fwait
gs
xor
fidivrl
out
xlat
mov
xor
scas
clc
adc
sarl
movsb
xchg
outsl
jnp
rcll
insb
fwait
enter
aad
push
popa
mov
pop
das
xor
lcall
rclb
jle
cld
sarl
mov
iret
test
push
sbb
call
or
and
pop
add
jecxz
mov
mov
loope
orl
popf
and
test
push
out
cmc
rol
imul
jl
lcall
dec
dec
loopne
xchg
mov
int3
xchg
frstor
fiaddl
repnz
nop
scas
std
and
and
pop
shrl
cli
mov
cwtl
dec
cmp
xchg
sbbl
jno
stos
fldcw
mov
das
es
cli
rcll
shrl
adc
fbstp
jge
and
and
and
rolb
push
test
cmpsl
mov
std
cmpb
push
insb
push
sahf
icebp
imul
cltd
ss
xchg
test
or
cli
testl
xorl
dec
sbb
stos
cld
inc
pop
outsl
cld
mov
and
outsl
jae
push
rcll
das
daa
lret
sbbl
and
xchg
das
cs
lock
xor
dec
lods
pop
mov
je
cmp
jnp
adc
sbb
dec
into
mov
mov
jo
mov
lahf
js
xchg
fwait
jmp
xchg
adc
sbb
xchg
jnp
stos
clc
inc
add
jp
popf
cmc
or
push
clc
pop
dec
inc
ficomps
bound
or
test
xor
jge
scas
std
cli
jle
cmp
aas
pop
cmpb
mov
cmp
jp
mov
outsl
int
stos
inc
sbb
lods
scas
addr16
lea
sbbb
adc
push
lds
inc
lcall
movsl
cmpsl
loope
add
dec
hlt
iret
test
in
decb
pop
shrb
xchg
sub
adc
push
jns
mulps
in
push
les
cli
fdivl
pop
sub
cmp
push
fidivrl
fsubrl
mov
cld
dec
aas
jbe
pop
aad
xchg
xchg
cltd
and
sahf
mov
loopne
mov
gs
jmp
mov
pushf
cmp
cmc
mov
dec
cmp
sbb
jl
fisttps
xor
cmpsl
test
fnstenv
and
lret
dec
fsubl
xchg
xor
cs
mov
and
scas
les
rcrb
pop
cmpsl
ret
test
pop
idivl
cli
push
jbe
mov
jo
mov
dec
push
int3
cmpsb
jl
and
lds
xchg
push
jbe
out
push
je
sbb
or
jmp
in
popf
inc
mov
and
fcoms
push
inc
xor
cmp
imul
rcrb
out
push
negb
stos
mov
cmp
and
sti
xor
bound
pop
mov
mov
inc
dec
xchg
dec
jbe
test
stc
imul
ja
jp
clc
push
push
inc
push
stos
cltd
das
outsl
xchg
test
stos
stos
not
rorl
mov
and
cmc
shll
aas
jmp
aad
xor
in
je
and
mov
lret
arpl
dec
xor
or
sbb
arpl
and
test
int3
imul
sbb
inc
sbb
inc
in
fnstcw
mov
shlb
mov
aam
cmp
inc
popf
arpl
add
inc
negb
mov
mov
or
add
test
push
fisttpl
xor
outsb
icebp
push
fcmovnu
leave
inc
leave
dec
jecxz
out
push
xchg
mov
movsb
fsubs
sub
adcb
lret
sbb
pop
xchg
jo
in
sbb
shl
iret
mov
jle
mov
shrb
jb
or
std
pop
push
in
roll
mov
adc
mov
ljmp
out
test
add
jp
out
dec
xor
fcoms
sbb
int3
adc
imul
sub
movsl
gs
push
inc
push
mov
sbb
decb
push
or
rolb
dec
jbe
mov
aas
sti
add
push
xor
cmc
jne
adcb
leave
test
cmp
stc
cli
out
lret
jle
js
add
mov
xor
push
addb
adc
push
xor
incb
jo
leave
jae
inc
int3
inc
sbb
int
push
out
xor
xchg
adc
mov
pop
pop
fimuls
and
or
mov
out
int3
add
orb
sahf
jbe
mov
loope
pop
and
xchg
mov
mov
inc
jmp
subl
pop
testl
jmp
or
pop
test
add
fs
addl
mov
push
cmp
dec
adc
pop
pop
cmp
aaa
dec
jl
lock
sbb
xchg
lods
or
xlat
sbb
cmpsl
pop
jbe
out
jl
pop
pusha
adc
std
arpl
mov
lret
loopne
xlat
mov
and
loope
mov
call
mov
inc
test
jbe
cmpsb
adc
test
jle
pop
and
fiadds
icebp
lahf
sbb
pusha
fdivrs
mov
jl
jl
insb
xor
inc
daa
daa
xchg
jne
fdivl
and
fildl
push
xchg
push
lret
jno
fists
inc
xor
mov
cmp
stc
dec
and
sub
or
inc
andb
cmp
rorl
xorl
cld
fs
sbb
add
dec
aas
mov
mov
imul
jo
movsb
push
in
dec
sbb
mov
movsb
or
dec
cmp
fmul
mov
push
xor
int3
shlb
xlat
loope
andl
aam
add
mov
and
in
dec
loop
inc
rcll
lret
sti
xlat
stos
test
jecxz
add
sub
jle
lock
push
sbb
push
or
sbb
sbb
popf
daa
jne
sub
call
mov
ja
xchg
sbb
ljmp
aaa
lods
pushf
and
les
mov
and
adc
cli
stos
sub
idivl
stc
call
sub
ret
pop
xchg
rsm
xor
inc
call
add
add
xorb
psrlq
xor
inc
mov
lea
adc
push
and
adc
xchg
imul
mov
xor
sahf
daa
sbb
ja
mov
add
ja
sub
pop
mov
pop
mov
or
gs
and
jae
and
adc
insl
ret
rolb
mov
scas
sub
outsb
bound
lods
mov
ds
sbb
mov
cmp
cmpsl
in
lret
inc
pushf
scas
iret
and
adc
pop
ss
addl
push
popa
sub
lcall
enter
fdivrl
icebp
cmc
ss
movsl
pusha
bound
push
andl
mov
sarl
jb
push
inc
loope
dec
loop
add
outsb
test
mov
outsb
mov
mov
mov
mov
fucomip
aam
loope
add
or
jb
sub
out
jbe
iret
adc
and
test
movsl
dec
sti
jno
mov
fmuls
fstps
xor
dec
dec
pusha
ljmp
movsl
lret
aad
push
sti
jns
outsb
mov
xor
pop
fs
adc
enter
pop
jmp
into
call
stos
test
and
out
lea
fistl
fimuls
outsl
xchg
inc
insb
hlt
pushf
xchg
sbb
je
les
outsl
push
test
dec
cmp
mov
mov
hlt
ljmp
cli
pop
sub
mov
xchg
mov
mov
cmc
inc
mov
push
mov
cwtl
add
ds
movsl
and
sub
pop
adc
fldenv
jno
push
in
data16
mov
cmpsl
lret
fistl
or
outsl
int3
jo
xlat
add
lds
repnz
subb
lahf
mov
inc
inc
sub
cmp
leave
es
xor
adc
mov
adc
jno
jecxz
ja
push
leave
lods
jl
inc
push
lret
mov
adc
decb
cli
sub
jecxz
into
mov
dec
aas
xor
and
inc
psrad
dec
jle
data16
clc
stc
sub
cltd
fistps
and
pop
pop
xor
adc
mov
xchg
pop
inc
add
adc
push
shr
push
push
pop
faddl
adc
sub
cwtl
insl
mov
xchg
and
and
adc
pusha
jae
popa
jmp
je
div
xchg
fcomps
data16
loopne
repnz
shll
negb
cmpsl
add
mov
adc
inc
pop
mov
nop
addl
pushf
or
addr16
cmpsb
mov
outsl
in
inc
or
jo
add
sub
outsl
nop
mov
imul
mov
mov
add
or
xor
pop
addr16
fisubrs
fists
xor
push
adc
lods
or
mov
or
or
adc
jns
fiaddl
fisttps
lret
sarb
repnz
and
xor
cmp
mov
mov
cs
fistps
out
add
push
jle
shrl
push
sbb
outsb
mov
adc
js
cmc
mov
js
insl
fiaddl
xor
ds
xor
stc
mov
mov
aaa
test
test
addr16
stos
jae
icebp
push
imulb
mulb
or
add
dec
cmc
and
outsb
push
rcll
ds
sub
push
lcall
into
rcrl
out
fists
cli
xchg
sbb
cmp
jge
mov
or
scas
scas
shll
cmp
roll
mov
cmp
lea
sbb
fcmovbe
ret
imul
and
int3
lret
mov
add
xor
and
loop
inc
pushf
push
int3
pusha
push
jo
mov
in
and
ja
mov
mov
mov
test
mov
into
into
adc
sub
push
jae
outsb
jno
push
popa
shll
rorb
pop
mov
inc
sub
fcmovnbe
and
lcall
out
push
dec
or
inc
ja
jae,pn
jnp
sub
sub
pop
push
xchg
scas
or
leave
push
fistl
orl
lods
dec
ja
popa
push
jne
into
sbb
sbb
push
jl
sub
jb
pop
frstor
xchg
pop
pop
fwait
js
mov
mov
inc
dec
jle
rol
ret
mov
cltd
lret
outsb
dec
pop
nop
inc
aad
pop
das
adc
xchg
xor
rclb
sbb
cmc
lcall
test
rep
push
mov
call
dec
out
mov
jge
out
arpl
mov
push
or
cwtl
jle
je
mov
xchg
cwtl
lods
mov
insb
pusha
or
jnp
adc
ret
lret
shll
in
xchg
or
lret
cltd
arpl
mov
test
add
aam
mov
lret
mov
pop
push
adc
pop
dec
and
pusha
sbb
lahf
add
cmp
mov
and
add
mov
les
mov
popf
push
sub
cmp
shr
mov
inc
lcall
imul
add
xchg
int3
enter
in
and
ja
cmpsl
adc
cld
imul
and
xor
jge
add
cltd
lret
lcall
orb
aas
jp
test
in
mov
inc
lods
mov
cli
push
mov
pusha
cmp
jae
mov
icebp
pop
cmp
aaa
mov
add
or
xchg
or
ret
add
punpckhwd
xchg
jp
jno
dec
fistps
adc
pusha
cs
loop
xchg
dec
fstpt
push
xchg
jl
add
repnz
push
dec
call
lods
aas
cmp
aas
cmp
mov
push
xchg
add
lods
mov
adc
pusha
dec
xchg
xchg
mov
push
mov
jmp
or
sbb
popa
lret
and
mov
sbb
sbb
mov
sahf
hlt
pushf
rcll
std
std
inc
fsubs
or
sub
in
push
add
and
testb
push
push
loope
xor
insl
cmp
push
pop
addr16
pop
bound
stos
pushf
add
popf
push
mov
rcr
or
mov
clc
lea
adc
jmp
loopne
push
scas
xor
mull
or
int
xchg
xchg
jb
mov
inc
pop
jnp
xor
je
pop
mov
loop
lcall
xchg
cwtl
or
fnstcw
test
mul
fstpl
and
int
int3
rcrl
or
mov
outsb
test
das
mov
jbe
push
in
stos
push
dec
shr
dec
pop
scas
fsts
int
movsb
pop
jnp
xor
outsb
jge
in
call
push
in
test
lods
pop
dec
icebp
or
addr16
fmull
lret
test
cwtl
inc
dec
into
repz
and
adc
ficomps
push
les
adc
and
fs
in
imul
pop
cmp
sub
es
in
push
xor
push
std
lods
cmpl
jns
arpl
xchg
andl
add
sbb
push
or
jbe
or
and
xlat
push
pop
rcll
lock
test
imull
jecxz
push
outsb
and
fistps
jne
aaa
sarb
sbb
stc
test
dec
push
push
pop
jno
je
xchg
out
dec
mov
imul
pop
mov
mov
in
jae
call
adc
out
push
mov
movsl
insl
add
mov
andb
jmp
sub
add
mov
xchg
into
adc
pcmpeqb
aaa
xor
cs
aam
mov
fs
jmp
je
sbb
pop
or
jle
scas
jns
stos
inc
mov
mov
ret
cmpsb
adc
insb
adc
test
add
sub
push
push
test
jle
fadd
or
cmp
int3
or
insl
cmp
bound
xchg
rolb
push
sub
outsb
pop
mov
and
and
xchg
stos
mov
push
add
add
bound
popa
gs
and
push
cmp
popa
xor
fs
add
rclb
shr
mov
fisubrs
mov
aaa
in
int
pop
and
dec
pop
mov
pop
cmpsl
mov
out
push
or
add
lcall
and
fnstcw
inc
xor
test
scas
pop
dec
xor
lret
sti
jno
jns
outsl
mov
icebp
das
test
mov
mov
data16
push
mov
movsb
mov
movsb
inc
mov
pop
pop
aam
lret
aam
push
int
cmp
xchg
in
add
pushf
xor
xor
mov
bound
sub
ret
clc
popa
jne
divb
enter
adc
inc
out
add
popa
ss
test
or
dec
bound
pusha
pop
sbb
rcr
sbb
push
xchg
sbb
andl
je
cltd
xchg
jno
jl
push
xor
lret
hlt
cmp
push
pushf
mov
test
aad
cmp
sub
aaa
cmpsb
dec
sbb
fwait
fwait
xchg
sbb
or
mov
add
and
or
mov
mov
test
gs
cld
lds
and
aam
mov
cltd
and
pop
mov
lock
add
push
mov
loop
add
pop
sub
jp
hlt
push
leave
insl
dec
lock
mov
jle
mov
and
sbb
shl
jle
push
inc
imul
cmpsb
loopne
aaa
xor
ret
pop
and
loop
nop
in
repz
cmp
inc
jp
add
gs
xchg
jae
jmp
dec
loop
and
inc
test
aad
dec
jno
dec
mov
popa
ds
sbb
test
out
and
inc
or
mov
test
daa
ss
testb
mov
mov
ss
fwait
test
enter
mov
push
mov
push
movsb
insl
dec
loop
negb
sbb
icebp
add
cmpb
push
jmp
aaa
xor
jne
xorb
xor
sbb
sub
and
cli
push
call
push
push
cmc
mov
inc
jbe
test
xchg
cwtl
lcall
jle
mov
js
dec
aaa
lds
cmp
adc
cltd
xchg
jp
jmp
lods
dec
pop
push
data16
lahf
lds
out
or
lods
cmpsb
push
xchg
insb
cli
inc
add
imul
cmpsl
mov
xor
fistps
jp
pop
or
sbb
addr16
aam
cli
push
pop
ficomps
mov
ror
add
inc
jmp
neg
cli
in
xchg
cltd
mov
fcomps
adc
dec
mov
sbb
xchg
fwait
jns
gs
repz
fcmovnb
push
pop
mov
movsl
adcl
and
pop
in
stos
mov
repnz
jbe
sub
jle
sub
test
cmp
sub
or
or
sbb
or
fisubl
lea
jnp
pushf
gs
push
push
pop
xchg
outsb
mov
cmc
push
push
dec
mov
dec
loop
test
je
sub
mov
nop
mov
cli
push
fs
pop
adc
daa
jecxz
dec
das
nop
dec
push
push
pushf
out
int3
out
aas
mov
scas
jmp
pushl
std
pop
outsl
xchg
pushf
pop
rorb
out
decb
mov
shl
dec
pop
mov
cwtl
and
ret
mov
outsl
test
cmp
xchg
mov
and
fcomps
or
iret
push
inc
gs
out
xchg
mov
test
lods
movsb
lcall
stc
scas
jg
adc
mov
mov
ds
pop
cmpsb
xchg
inc
ficomps
test
inc
es
scas
lea
pop
jp
movlps
lock
sbb
sar
pushf
outsb
lret
stos
mov
sti
xchg
push
hlt
cld
out
andb
gs
add
jmp
insb
repz
je
scas
push
stc
out
das
imul
icebp
jge
fstl
cmp
adc
int3
jbe
push
push
nop
sbb
outsb
fldenv
mov
cmpl
dec
jmp
test
push
jmp
cmp
or
add
push
inc
fsubrs
cmp
pop
imul
jnp
fadds
jmp
test
and
mov
pop
xchg
mov
insb
add
jp
push
mov
lahf
mov
insl
and
cmp
ljmp
fdivs
adc
push
ds
mov
sbb
add
and
cltd
mov
mov
or
stos
ffreep
test
ret
sti
fdivs
pop
jl
cmpsl
pop
insb
out
outsl
das
je
icebp
xor
fcoms
fdiv
cltd
out
push
sub
cmpsl
pop
clc
out
jbe
out
mov
mov
js
rcrl
add
cmp
add
imul
push
or
pushf
or
faddl
xchg
repz
fstps
inc
inc
cmp
mov
cs
xor
js
dec
enter
or
add
jo
mov
std
lods
sub
lock
push
lcall
insb
pop
and
pusha
or
jb
std
mov
inc
mov
mov
jecxz
push
clc
xchg
jg
dec
cmp
mov
push
jp
jne
jle
cmp
jecxz
pop
cmp
imul
loop
pushf
shrl
adc
lahf
out
add
lret
push
mov
pop
shlb
jp
xchg
js
jo
lahf
stos
rcrl
mov
inc
inc
sub
mov
testl
stc
jmp
or
testb
mov
scas
pusha
push
sub
mov
mov
jnp
dec
addr16
test
add
and
cmp
cltd
or
xchg
pop
push
or
loopne
xor
lcall
test
add
mov
xlat
pop
add
mov
testb
inc
add
fldl
test
sahf
lea
jl
dec
jge
pop
lods
mov
push
jns
arpl
xchg
and
sub
adc
int3
negb
dec
insl
nop
dec
dec
xchg
mov
or
xor
xchg
inc
xor
inc
shrl
jae
enter
mov
push
push
add
and
jno
pushf
sub
cmp
popa
incl
mov
sbb
inc
sbb
inc
jle
ret
xor
xor
icebp
xor
inc
ljmp
mov
pop
lret
pushf
mov
pusha
jae,pn
ds
icebp
xor
cwtl
cmp
insb
lret
fwait
loopne
push
test
js
in
cmc
movsl
add
and
mov
sahf
push
mov
mov
int
enter
xchg
add
test
in
ja
imul
mov
xchg
in
add
add
fildl
lret
dec
gs
fisubrs
pop
mov
xchg
in
cmp
and
shrb
cmpsl
cmp
mov
mov
dec
jmp
or
out
xchg
scas
or
lock
push
or
outsl
and
int
sub
sub
mov
jo
imul
dec
mov
add
int3
mov
add
sub
jae
test
repz
fldenv
insl
int
mov
lahf
jmp
xchg
aam
push
mov
pop
popa
push
adcb
aam
and
xor
fbstp
inc
fcoml
mov
jle
punpckhwd
cmc
stos
gs
sub
ret
outsl
ss
add
fucomip
jecxz
xlat
incb
cwtl
jne
loopnew
dec
dec
test
jge
scas
ljmp
inc
push
cmpsl
add
test
jns
test
test
inc
into
push
sti
mov
xchg
rcr
sub
xor
ror
inc
jg
mov
dec
sub
cmpsb
int3
xor
xchg
test
mov
xchg
sbb
dec
add
jo
fs
cmpsb
fwait
mov
loopne
sbb
dec
fmuls
sbb
mov
pop
aad
cld
movsl
mov
repnz
pop
lahf
pop
push
pop
ror
mov
sub
ficomps
adc
and
jns
and
js
xchg
and
out
xor
jmp
pop
add
mov
adc
mov
push
scas
sbb
mov
add
mov
sahf
jae
push
int
bound
sbb
jo
adc
dec
jae
fildl
adc
mov
inc
jle
dec
xor
clc
mov
mov
in
mov
jne
cmp
js
int3
scas
pushf
in
xchg
add
push
stc
ja
mov
and
sbb
mov
xsaves
mov
adc
jl
mov
cmp
sahf
inc
and
inc
fwait
scas
imul
cmp
fidivl
mov
sti
dec
fstps
pop
lret
jle
fnstcw
jl
push
mov
mov
dec
xor
aaa
sbb
popa
xor
in
or
inc
lds
testb
test
sbb
daa
stos
pop
dec
repz
popa
fs
jl
pop
daa
sbb
pop
adc
mov
js
test
leave
int3
and
repnz
sbb
mov
jb
or
leave
pop
aam
out
mov
test
aaa
iret
jns
bound
test
xlat
inc
mov
loope
ljmp
mov
dec
inc
push
out
xchg
mov
pop
into
mov
nop
popa
xchg
cs
std
stc
nop
repz
fcmovnbe
outsb
sarl
mov
and
sbb
or
jo
sarb
pop
inc
stc
lods
orl
mov
fldt
shrb
icebp
mov
xor
mov
adc
add
cwtl
call
mov
aas
fwait
jge
into
push
mov
cli
inc
fsubrs
jecxz
or
pop
nop
or
mov
cltd
test
jmp
dec
jno
bound
pop
in
push
mov
pop
and
aam
js
lea
filds
xchg
sahf
jb
push
in
out
out
add
and
pop
sub
movsl
jmp
xor
cld
or
xchg
scas
jne
fstps
in
jl
repnz
add
frstor
xchg
mov
adc
loop
lods
scas
sub
push
mov
outsl
inc
jbe
and
mov
cmc
mov
sbb
mov
dec
or
pop
faddl
inc
in
push
add
in
outsb
adc
js
fiadds
clc
inc
cmp
push
xchg
jp
push
push
xchg
les
aaa
cmp
xlat
scas
and
mov
mov
outsl
ja
cs
test
cmp
loopne
fsubl
mov
inc
inc
cs
sbbl
or
adc
add
das
and
mov
ss
sahf
cli
pop
xchg
movsl
or
lret
push
cmpsl
call
xor
jns
add
imul
out
aas
xchg
fldenv
mov
pop
or
add
in
mov
jp
dec
scas
scas
jmp
xchg
xor
into
add
xchg
shlb
xor
xchg
call
pop
cwtl
insl
cltd
push
adc
inc
xchg
push
sti
dec
insl
sarl
gs
mov
xor
sub
out
ret
adc
adc
imul
test
xchg
mov
xor
cltd
and
mov
repz
gs
cmpsb
movsb
sub
out
cld
mov
aas
mov
jge
and
dec
sbbl
xor
pop
sbb
idiv
cld
pop
mov
aam
lahf
movsb
in
sub
xor
dec
and
push
xchg
push
lods
mov
pop
mulb
cmp
adc
into
ljmp
sub
jae
lds
in
insl
add
inc
mov
pop
loop
movsb
inc
sbb
mov
ljmp
cli
fwait
jmp
popl
addl
or
cs
mov
mov
mov
sar
pop
into
repz
sub
es
es
ljmp
shrl
sarl
mov
push
push
mov
addr16
jbe
fwait
mov
jo
lret
gs
mov
das
push
sbb
pop
jnp
dec
lods
pop
inc
out
pop
and
sub
sub
inc
push
cmpsb
mov
arpl
adc
inc
or
outsb
lds
inc
cmp
aas
mov
adc
push
ljmp
sahf
mov
sbb
sub
jmp
lock
mov
jbe
movsl
mov
out
fisubrs
setnp
xor
or
shrd
mov
out
or
add
iret
test
add
jno
inc
out
push
lods
ss
test
imul
adc
out
mov
jb
cmpsb
and
mov
sbb
or
inc
pop
cltd
jle
pop
xor
cli
pushf
cmp
pop
sub
dec
jl
dec
icebp
arpl
adc
out
xor
daa
lahf
loopne
in
decl
jle
cmp
xchg
mov
cmpsb
sub
inc
insb
leave
lret
ficomps
ss
dec
sbb
mov
mov
mov
add
scas
cmpsl
icebp
loope
xchg
ret
sti
insb
push
and
into
out
xor
popa
pop
push
mov
jb
fcmove
inc
sub
adc
xor
lods
aaa
sahf
test
jge
std
out
icebp
dec
movsb
xchg
add
leave
mov
dec
lret
push
mul
xlat
push
ds
push
nop
ja
jae
jp
adc
int3
dec
fadds
int3
inc
mov
jge
sahf
push
out
orb
sbb
jne
out
jecxz
jb
mov
push
adc
leave
aam
je
cwtl
mov
pop
es
inc
fs
mov
mov
mul
or
iret
and
push
pop
push
cmp
iret
jge
add
xor
jg
es
push
fildll
icebp
imull
pusha
js
out
in
xchg
cwtl
jmp
popa
dec
dec
movsb
xor
cmp
je
pop
or
in
ret
divb
sbb
ret
lods
and
pop
sbb
xchg
pusha
and
mov
rcl
leave
roll
or
xchg
pusha
mov
mov
pop
mov
cmp
stos
in
push
movsb
rcrl
add
mov
out
sbb
push
dec
out
mov
inc
sarb
cmp
ja
xlat
fcmovnb
mov
int3
push
loope
dec
mov
icebp
push
enter
xchg
inc
in
mov
lret
xor
xlat
cmpsb
jo
cmp
sub
sarb
adc
and
scas
add
movsb
adc
xor
jmp
jg
rorl
bound
iret
push
iret
jmp
push
or
mov
xchg
jae
push
jmp
pop
cmpsl
dec
mov
jb
jmp
addr16
fs
mov
in
into
es
shrl
mov
cwtl
test
push
loopne
sbb
fisttpl
imul
jno
mov
stos
or
test
nop
pop
or
dec
sub
push
icebp
subb
nop
push
mov
fisubs
repz
sbbb
mov
lret
jg
popa
jg
pop
cld
cltd
and
push
cli
pop
jns
inc
mov
fisubl
imul
mov
inc
cwtl
xor
mov
adc
scas
add
shl
pop
scas
xor
push
or
dec
lcall
out
jo
lods
outsb
dec
mov
fsubl
mov
sub
imul
cmp
ret
add
add
xchg
xor
shrb
and
out
mov
adcl
sbbl
sbb
add
inc
out
mov
push
cmp
andl
sbb
or
push
out
dec
sub
loop
mov
fiaddl
or
call
daa
push
lock
dec
push
cmp
push
xchg
fldt
ret
xchg
jns
test
sbbl
inc
mov
xor
add
fs
icebp
ss
fisttpl
aam
rcrl
movsl
pop
sbb
mov
fsts
loopne
and
dec
mov
push
inc
lock
cmp
std
mov
dec
cmp
ficompl
adc
and
mov
loop
pop
stc
cmp
xchg
pushw
mov
dec
jge
xor
and
cmp
iret
jb
mov
mov
subb
testl
es
repnz
jmp
jns
sub
and
divl
push
add
std
jg
cmp
loopne
in
out
test
jmp
mov
es
mov
sbb
adc
adc
addr16
mov
mov
inc
cmp
cmp
dec
mov
into
sti
roll
mov
jne
les
clc
inc
and
jmp
pop
xchg
jecxz
icebp
add
cmc
fcoms
jbe
add
mov
pop
push
pushf
andl
push
cwtl
out
les
xchg
sub
xchg
cmpsb
push
inc
mov
adc
cmp
das
shrl
cmpsb
inc
cmc
lods
pop
cmovns
inc
scas
nop
adc
insb
jl
pop
or
cmp
ret
xlat
aas
mov
mov
rorb
dec
jb
outsb
insl
sbbl
rcrl
bound
xor
mov
sub
loop
fistps
xchg
test
pop
and
nop
test
data16
cmpb
jp
push
push
pop
adc
and
cmp
mov
add
jae
les
add
aam
fsubp
mov
or
xchg
dec
jo
sub
gs
in
inc
sbb
gs
into
ss
add
outsb
std
mov
inc
sbb
mov
sbbl
inc
gs
inc
or
inc
jle
jp
adc
mov
mov
or
loopne
jno
mov
aam
dec
and
aas
pop
or
stos
and
pop
inc
fdivrl
jo
je
mov
mov
in
cli
dec
cmpsl
mov
add
pop
jns
out
lret
outsl
xchg
std
and
jo
add
notl
jno
jle
mov
cmp
sbb
jmp
fsts
jg
aam
adc
mov
mov
push
in
pusha
ljmp
in
in
xor
sti
jae
loopne
outsl
pop
pop
and
xchg
stos
fbld
push
sub
mov
push
cmp
or
xchg
inc
mov
enter
and
xchg
insl
daa
cmp
fs
xor
inc
cs
in
ficoml
mov
mov
mov
cmc
adc
add
jp
mov
fists
decl
dec
je
int
test
std
iret
inc
dec
icebp
sbbb
pop
ss
pushf
dec
je
in
sub
in
popl
das
pop
push
or
inc
test
and
push
push
sbb
xchg
push
push
in
nop
mov
adc
or
loop
push
nop
cmp
ds
push
aad
inc
jmp
jae
xlat
sbb
in
jge
cmp
ja
jle
cmp
jns
and
dec
hlt
rorl
mov
xchg
mov
add
pop
stc
pop
pop
inc
fstpl
sub
lea
jle
pop
aas
adc
pushf
push
pop
jecxz
ja
inc
fimull
push
shlb
mov
jg
xlat
xchg
dec
push
pop
pop
mov
les
mov
dec
inc
aas
shll
rorl
jae
lret
push
std
leave
pop
je
jnp
sbb
sub
pop
shlb
xor
pusha
test
imul
cs
add
pusha
push
and
jecxz
adc
pop
aad
lds
dec
sbb
push
aam
mov
jb
addl
das
cmp
push
aam
mov
arpl
rcrl
gs
daa
adc
mov
repz
xchg
add
into
ljmp
in
rclb
loopne
or
insb
pop
in
mov
test
pop
fnstcw
or
out
mov
jge
aaa
mov
mov
lock
jmp
fsubp
fbstp
mov
and
cmp
push
cmc
xchg
les
mov
enter
and
lret
sbb
imul
pop
jae
lcall
sbb
cld
cld
push
shrb
sub
push
outsb
cwtl
rorb
push
cmp
push
jae
adc
push
dec
jecxz
stos
les
cmp
lods
xchg
pop
mov
call
adc
cmc
adc
xchg
jbe
jg
mov
mov
and
xchg
pop
lea
dec
shll
ja
push
or
xchg
ja
pop
mov
and
cmp
loope
jle
cli
cmpsb
xlat
xor
pushl
mov
sbb
nop
push
cmpsl
clc
outsl
sbb
int
xchg
mov
fildl
popa
jmp
adc
popa
loope
hlt
dec
add
cltd
fldl
mov
jecxz
negb
xchg
mov
sbb
jo
xchg
xor
cmp
js
std
add
mov
bound
scas
int3
out
jp
mov
pop
fnstsw
outsb
pop
xchg
outsl
ja
cs
inc
adc
sbb
sub
orb
dec
mov
xor
pop
mov
aam
pop
into
add
adcb
dec
cmpsb
or
js
mov
cmpsb
sti
jno
lock
or
and
mov
push
jb
jecxz
stos
mov
das
and
and
mov
pop
testb
cmp
or
es
cmp
ja
idiv
mov
imul
mov
js
pop
notl
cmp
dec
adc
jg
imul
sub
cmp
jae
mov
push
mov
je
int
push
and
lods
shll
les
test
or
scas
aaa
add
popf
mov
loopne
aas
ret
dec
xchg
mov
jnp
jae
leave
fnop
pop
sub
lods
popa
mov
jae
inc
sub
mov
sub
imul
gs
inc
mov
daa
adc
iret
add
mov
jp
xchg
fisubrs
mov
pop
push
lahf
icebp
sbb
lcall
icebp
jnp
mul
arpl
pop
push
sti
ret
push
test
or
and
lock
sbb
psadbw
cmp
out
pop
inc
lret
xchg
cld
insb
adc
push
fsts
xlat
rcl
cld
mov
push
ja
add
out
xor
add
or
imul
dec
jbe
js
xchg
mov
sub
mov
cli
push
jecxz
fmull
add
addr16
sub
dec
xchg
jno
mov
mov
mov
scas
mov
sbb
inc
jmp
pop
jb,pn
cmovs
add
fcmovne
fisttpl
jae
jecxz
pop
mov
shlb
push
sub
or
insl
out
mov
imul
sbb
inc
repnz
jns
aaa
jle
ja
push
psllw
push
pop
jns
shlb
jbe
add
pop
insl
cs
xor
xor
mov
or
pop
out
xchg
add
inc
fidivl
movsb
leave
sub
clc
mov
adc
dec
jmp
mov
leave
or
ss
jmp
cmp
push
fistpll
sub
lods
or
scas
lret
add
mov
jo
xor
sarl
and
js
pushf
jno,pn
clc
int
xor
cmp
aaa
enter
jb
mov
lret
cmp
mov
add
call
imul
loopne
push
rcrl
fsub
sbb
inc
clc
ret
repz
mov
or
sbb
popf
jecxz
cwtl
sbb
jo
insb
enter
test
out
stc
loope
cmpsb
sbb
sbb
jle
mov
xchg
push
sarl
adc
stc
ret
mov
fsts
cmpsb
outsl
cmpb
popa
pusha
add
push
cld
es
pop
or
add
inc
out
inc
scas
lods
std
push
fcmovnu
jbe
fsubs
and
out
add
mov
testb
stos
shll
or
inc
and
sbb
dec
sbb
jg
jp
inc
xor
loopne
insl
or
loope
sarb
add
pop
loope
sub
sbb
jmp
scas
jno
testb
push
aaa
and
cld
rcll
outsb
cmc
stc
loopne
inc
xor
xchg
call
pop
and
add
xor
pop
sub
clc
into
pop
lock
fs
push
addl
test
int3
mov
pop
imulb
sbb
add
sub
sbb
pop
cli
jno
and
ret
in
push
iret
push
sbb
popf
int
aad
out
lods
adc
push
mov
cld
repnz
sbb
sbb
xchg
sbb
repnz
shl
mov
cwtl
xor
xchg
jbe
jg
dec
cld
or
sbb
loope
cmp
mov
js
dec
shl
subl
push
je
or
pushf
jae
fsts
popf
arpl
insl
jne
iret
or
jl
mov
push
pop
xor
clc
out
rclb
into
and
rol
shr
out
sbb
cmp
and
cmp
add
fdivl
add
lea
cmp
loopne
push
mov
mov
fsubs
inc
mov
push
pop
dec
sbb
xor
arpl
repz
lahf
out
ret
dec
mov
mov
outsl
push
sahf
jo
xor
in
ljmp
xlat
dec
hlt
cltd
xchg
mov
xchg
push
cltd
insl
outsb
xchg
mov
mov
push
nop
popf
cwtl
and
cmpsl
dec
jae
insb
mov
cltd
mov
push
xor
inc
loopne
jp
dec
dec
jae
pop
sbb
out
mov
push
cwtl
inc
pop
mov
ja
and
cmp
jge
mov
push
pop
dec
xor
sbb
clc
push
jo
lret
push
ficomps
adc
cs
or
cltd
mov
sbb
fstpl
push
and
das
movsl
pop
mov
stc
dec
mov
jl
dec
jmp
in
add
mov
cmp
les
adc
outsb
dec
outsl
lret
loop
dec
xchg
dec
sarl
decb
jnp
ret
dec
inc
insb
and
rcrb
jmp
push
int3
adc
sub
push
push
jmp
out
xor
and
scas
mov
pop
push
int
sbb
cmp
test
xor
add
out
sbb
push
shll
out
movsl
divl
jo
mov
sahf
lea
push
cmpsl
aaa
xchg
into
mov
ds
xor
xor
sbb
pop
add
imulb
int
dec
bound
jbe
cmpsl
mov
adc
popf
sub
sbb
out
sbbb
jge
filds
clc
nop
mov
cmp
stc
cmc
test
sbb
add
and
imul
xor
jle
sbb
lahf
stos
js
sub
test
sbb
add
cmp
sarb
and
xchg
movsl
pusha
push
shr
lcall
dec
filds
mov
pop
cld
jo
insl
ret
adc
loope
sub
jg
inc
pop
and
dec
fbld
sbb
out
xchg
sub
test
jne
mov
or
gs
push
sahf
pop
jmp
and
lock
sub
testb
mov
jne
aaa
into
lock
rol
mov
scas
xchg
push
sbb
xchg
jbe
push
daa
lahf
cmp
and
xor
adc
push
stc
movsb
inc
decl
fcmovb
xchg
test
andl
push
aam
lcall
test
and
and
xor
mov
inc
filds
test
and
out
imul
cwtl
cmp
repnz
mov
dec
cmpsb
sbb
and
stc
jecxz
rcl
pop
lock
std
outsb
inc
pavgw
sbb
bound
dec
push
push
cmc
js
and
jp
ret
and
repz
movsb
mov
mov
clc
add
imul
pop
das
inc
pop
sub
mov
and
jecxz
cmp
mov
not
cwtl
mov
hlt
jb
mov
out
pop
or
push
mov
sbb
pop
test
add
mov
cmp
pop
and
lods
mov
ds
fildll
mov
mov
out
fiaddl
sub
fsubl
dec
in
sti
rcrl
pop
enter
push
sbb
push
into
imul
adc
sub
mov
aas
adc
in
add
xchg
shll
jecxz
fcmove
push
mov
push
outsb
mov
pop
mov
push
and
mov
pop
xchg
or
xor
lock
fdivrs
dec
mov
repz
xorl
xchg
into
repnz
pop
xchg
xchg
xchg
repz
insl
testb
cltd
xor
inc
mov
sub
inc
pop
adc
sub
fwait
xorl
push
and
out
mov
xchg
mov
loopne
jns
and
adc
test
iret
dec
rorb
nop
adc
enter
and
jg
or
push
mov
popa
cmp
gs
pop
jg
mov
cmp
adc
clc
ss
mov
in
fbstp
insb
ds
mov
arpl
ljmp
xchg
hlt
xor
mov
and
mov
xor
inc
imul
in
fsubrs
inc
adc
xchg
mov
or
and
xchg
add
cltd
jp
jecxz
or
jecxz
dec
imull
flds
push
mov
inc
bound
popa
sbb
sub
movhps
lock
and
sbb
lahf
add
jmp
ljmp
dec
lods
es
jb
inc
leave
fs
mov
fnstsw
dec
jecxz
jge
outsl
data16
mov
std
jb
sub
or
nop
cltd
jbe
jecxz
add
xchg
push
lcall
or
std
arpl
fnclex
fidivl
bound
je
dec
jg
mov
loop
adc
dec
bswap
inc
in
iret
or
xchg
mov
or
sbb
fwait
push
jnp
add
pop
xor
dec
lcall
movsl
xor
xchg
decb
cmp
mov
into
outsl
and
dec
mov
leave
aaa
push
lret
popf
mov
add
jmp
push
jmp
dec
stos
inc
and
sti
mov
mov
ret
push
mov
cmp
call
jmp
dec
pushf
loop
xchg
negb
stc
mov
mov
sbb
xor
popf
and
xchg
push
daa
fists
fnsave
repnz
arpl
fisubrl
xchg
mov
cmp
and
mov
mov
adc
inc
fcmovb
mov
mov
pushf
sub
mov
mov
add
arpl
mov
wrmsr
stos
cmp
xchg
jb
pop
add
lock
adc
sbb
mov
rcl
adc
jle
int
jmp
and
jmp
and
mov
xchg
add
cmp
lods
inc
fwait
xchg
outsb
lret
cmpsl
aam
mov
push
lcall
inc
jl
outsb
daa
jg
movsl
mov
cmp
in
ret
inc
and
add
paddsb
cmp
adc
call
sub
int
add
or
imul
es
mov
sbb
or
repnz
js
add
and
xchg
xor
adc
mov
inc
pop
and
popa
sub
cmp
xor
sub
loopne
out
lock
cltd
push
mov
sbb
mov
icebp
mov
out
xchg
xor
sub
and
pop
xor
xor
js
mov
aas
dec
mov
ds
scas
subb
jnp
push
aaa
cmp
add
mov
or
test
repnz
dec
repz
jecxz
xor
cmpsl
les
clc
xchg
sbb
pop
mov
jge
loopne
enter
das
icebp
arpl
adc
mov
xchg
mov
aas
jo
lret
es
jno
and
imul
daa
cld
push
jge
fs
sbb
loope
xchg
hlt
incb
and
xor
cli
xchg
cmp
in
cltd
shl
lods
jnp
jns
into
in
mov
scas
jle
pop
mov
inc
or
lahf
xchg
call
mov
sbb
imul
cmp
add
mov
adc
in
movsb
dec
xor
loopne
jnp
or
fistpll
and
rclb
mov
pop
int3
movsl
int
in
scas
fldenv
pop
pop
adc
clc
loope
js
shlb
sub
test
adc
fadd
inc
mov
movsb
insb
jle
mov
mov
mov
iret
push
xchg
dec
push
pushf
jg
and
or
cmp
inc
mov
daa
int3
popa
xchg
fisubrl
pop
xor
loop
jge
test
je
pushf
push
fcmovnbe
pop
test
or
jmp
cli
cs
inc
imul
cmpl
lods
pop
fwait
lahf
and
aam
pop
inc
pop
bound
dec
push
stos
push
addl
xchg
mov
dec
addr16
pusha
jecxz
cmp
sub
out
sbb
fadds
jg
outsb
ss
mov
or
jle
push
dec
in
scas
stc
inc
addb
call
orl
push
jle
outsl
push
cmp
imul
pop
add
sub
xor
push
jns
sbb
cmpsl
lods
push
test
es
aam
push
hlt
icebp
sub
sbb
loop
cmp
sbb
je
push
pop
mov
repnz
mov
fcos
iret
in
mov
push
sbb
mov
mov
jmp
dec
push
mov
sbb
cli
fmul
push
orl
inc
mov
aas
loop
xchg
mov
sbb
pushf
jle
lea
inc
mov
repnz
es
scas
xor
or
mov
pop
out
in
fstps
jnp
lret
sti
jmp
push
das
mov
and
and
mov
das
xor
jns
enter
and
cs
pop
ror
xchg
pop
pushf
dec
data16
outsb
jmp
pop
jecxz
fnstenv
or
sbb
test
out
mov
rcrl
fsub
imul
daa
jo
cmpsb
into
outsl
data16
or
pop
mov
mov
lret
cmpsb
pop
mov
dec
cli
xchg
decl
push
jle
jecxz
xchg
dec
cli
and
jne
pop
adc
fcoml
test
jae
dec
sub
add
out
jle
or
outsl
test
pop
mov
outsl
pop
or
repz
push
lret
jp
sbb
pop
test
mov
and
mov
mov
fiadds
shl
push
pop
jmp
mov
shlb
xlat
ror
xchg
movsl
insl
sub
rorl
jp
cwtl
pop
lock
inc
fs
rcr
lret
cmp
mov
jns
in
or
xlat
cmp
push
out
mov
lock
loope
rorl
mov
adc
adc
xchg
nop
mov
imul
ljmp
dec
pop
push
jns
lods
loop
mov
push
stc
in
xlat
sbb
popf
push
mov
dec
dec
imul
fsubrp
sub
adcb
sahf
inc
ja
push
inc
rolb
pop
popa
jp
shll
or
or
fmuls
adc
mov
loopne
addl
cs
pop
aas
in
leave
xor
inc
push
lret
jg
andl
dec
nop
pop
ret
and
adc
inc
movb
rclb
mov
mov
mov
mov
cmp
push
hlt
fisubs
or
leave
sbb
jae
sub
xchg
mov
cli
fmull
cmpb
lock
stos
mov
incb
jns
lods
rcrb
lcall
mov
xchg
scas
and
in
jbe
push
dec
test
stos
jnp
inc
add
jns
les
sbb
stos
adc
mov
push
aaa
js
or
inc
cltd
lods
cwtl
xchg
ljmp
test
add
lods
pop
in
mov
mov
pushf
arpl
loopne
cmc
popf
mov
pop
push
sbb
es
aad
adc
cwtl
hlt
sbb
js
sbb
leave
pop
xlat
les
bound
out
pusha
inc
test
sub
adc
xchg
xchg
or
outsl
add
xchg
ja
arpl
aas
insb
jno
sti
and
pop
icebp
mov
add
addb
xchg
mov
inc
inc
inc
mov
fldenv
sub
pop
jno
jae
cmp
sbb
sbb
stos
jl
or
arpl
test
push
mov
cli
add
test
bound
inc
leave
or
dec
imul
dec
dec
and
xchg
mov
mov
jns
lock
arpl
aad
movl
xor
push
xchg
adc
insl
pop
mov
imul
or
out
int3
outsl
sbb
ljmp
jg
add
test
in
sbb
dec
clc
xchg
adcb
xchg
daa
pusha
sar
push
inc
mov
outsl
push
hlt
popa
dec
shl
pop
sbbb
clc
mov
inc
jne
in
push
lds
dec
movsb
add
inc
movsl
xchg
sub
push
add
fcom
push
mov
cwtl
xchg
lcall
mov
pop
imul
jnp
aaa
sahf
std
daa
cmp
pop
inc
jg
punpckldq
pop
sarb
enter
das
pop
or
push
cmpsl
cmp
xchg
mov
in
ror
imull
pop
xor
sub
mov
lds
push
pop
add
mov
popa
cld
arpl
imul
cmp
mov
leave
pop
lcall
sub
aad
jnp
push
pop
flds
jle
push
test
pop
mov
cmp
and
pop
cmpsb
cmp
inc
mov
scas
fcomi
push
lret
pop
fadd
or
mov
push
in
xchg
xlat
mov
mov
jle
pop
mov
es
jmp
push
int
subl
sbb
pop
pop
jle
ljmp
popa
pop
in
pop
jecxz
push
sbb
dec
popa
adc
cli
sbb
adc
inc
nop
mov
push
push
lret
loope
mov
jbe
icebp
mov
daa
push
pusha
in
in
fbld
mov
mov
lret
sbb
cmc
lahf
or
scas
pusha
arpl
mov
jbe
mov
out
loop
fcmovbe
cmpsb
push
or
and
jns
add
or
in
mov
ret
cs
mull
lahf
mov
pop
inc
jmp
lea
pop
cmp
and
sti
jb
scas
ficomps
inc
in
or
insb
inc
lock
les
repnz
out
dec
repz
icebp
add
jmp
dec
jno
mov
mov
hlt
xchg
aad
icebp
pop
fsubl
mov
lock
lret
push
hlt
jae
push
out
and
ficomps
push
shlb
leave
sbb
test
and
xchg
xor
mov
jp
or
cld
roll
ret
incl
jno
cmp
xchg
xchg
int
adc
or
test
mov
insb
xchg
sti
cltd
out
jge
int3
popa
rclb
xchg
cmp
aam
push
flds
ljmp
push
cmpsb
repnz
lods
int
rcll
decb
mov
repnz
add
xor
stos
or
fadd
jbe
scas
jecxz
fwait
inc
jne
and
xor
popf
shll
addr16
mov
cwtl
idivb
ds
inc
bound
jne
push
ret
push
push
add
pop
pop
scas
adc
and
mov
icebp
xchg
leave
mov
mov
popa
scas
andb
mov
jmp
push
dec
in
xchg
icebp
pop
inc
out
mov
pop
cmp
mov
dec
and
or
mov
js
jae
dec
sbb
push
inc
mov
popa
out
int
in
pushf
mul
dec
cmpsl
test
addr16
adcl
jnp
stc
push
imul
xor
adcb
xchg
andb
out
cmpsb
sub
sbb
test
sub
xchg
outsb
pop
adc
jbe
in
jne
mov
xchg
mov
mov
xor
cmp
pop
ljmp
aam
outsl
leave
sar
mov
fldenv
stos
int
sbb
push
pop
xor
outsb
sub
mov
subb
fmuls
andb
clc
jae
call
adcb
scas
dec
cmpl
xchg
push
cmpsl
ss
test
push
pop
adc
pop
in
xor
cltd
cmp
mov
push
rcrb
xlat
jno
test
pop
aas
gs
jp
xlat
pop
repz
pusha
xor
and
inc
bound
inc
dec
repz
jmp
push
fiaddl
xchg
dec
scas
adc
int3
mov
xchg
jmp
dec
pop
jnp
cwtl
pushf
shlb
pusha
xor
bound
out
cli
pop
adc
inc
mov
outsb
cmp
stos
and
push
mov
or
lcall
push
shlb
dec
jmp
xchg
mov
xchg
je
cmpsl
cmp
dec
jnp
pop
and
popf
jo
pusha
inc
jmp
push
je
aam
aas
repz
mov
sub
jge
mov
cmpsb
pop
mov
rcr
inc
test
test
inc
push
sbb
arpl
xor
outsb
bound
inc
mov
sbb
dec
adc
jb
jno
and
ret
xchg
pop
das
sbb
jmp
stos
movb
shlb
adc
cmp
inc
and
fdivrl
and
frstor
push
cmp
adc
mov
and
fisttps
stc
xor
mov
loope
shll
mov
into
and
out
je
arpl
cli
pop
pushf
cmp
lret
lock
pusha
insb
mov
pop
xchg
mov
movsl
andb
sub
mov
mov
cmpsb
fidivs
adc
cmp
outsb
sbb
xchg
xor
mov
cs
and
cmpsl
mov
mov
sub
in
mov
bound
sahf
int3
sbb
mov
aam
out
dec
cwtl
inc
mov
nop
pop
dec
mov
dec
mov
imul
xor
jno
mov
addl
lret
jne
sub
adc
fisttps
jne
loope
cmp
rorb
idivb
movsl
arpl
es
jne
int
orb
es
testl
sbb
ret
nop
or
movsl
sar
or
clc
push
rcll
ret
test
dec
icebp
leave
cmp
mov
mov
sub
pop
int3
mov
dec
xchg
pop
add
nop
outsl
fld
pop
and
inc
mov
dec
dec
sub
out
pop
xchg
iret
sti
or
stos
cmpsb
add
sub
into
sbb
daa
and
jmp
jecxz
mov
mov
cltd
stc
xor
cmp
ljmp
outsb
jne
pop
push
or
scas
mov
adc
cwtl
lods
cli
mov
nop
cli
or
scas
or
addb
push
adc
mov
fcompl
mov
clc
fisubs
push
mov
outsl
jp
xchg
fsub
mov
xor
or
push
cmp
and
mov
mov
mov
sub
test
adc
stos
push
divb
std
dec
xlat
ds
xchg
xor
push
icebp
bound
in
pop
cld
add
adc
pop
lock
mov
sub
gs
out
jbe
sub
mov
insl
dec
xor
cwtl
push
mov
loope
jl
insb
mov
into
xor
mov
cmp
movsl
outsb
mov
cwtl
leave
mov
popa
mov
sub
xor
sub
insb
mov
hlt
sub
outsl
lea
sbb
mov
cmp
push
push
addb
out
je
addb
or
pusha
ss
mov
mov
int3
push
orl
mov
cmpsl
icebp
xchg
incl
mov
outsl
push
jp
scas
inc
ficomps
mov
pop
xor
mov
xchg
inc
js
mov
mov
hlt
test
fnsave
add
sub
pop
push
push
dec
dec
imul
jb
jle
push
xor
add
xchg
outsb
fwait
repnz
sbbl
rorl
lret
fyl2x
into
addr16
jp
pusha
push
call
xchg
daa
lds
push
in
sub
pop
aaa
pop
mov
add
dec
jb
stos
sahf
jo
cwtl
in
and
push
jne
into
mov
cmp
push
push
and
out
ret
sub
lea
mov
inc
shlb
loopne
xchg
and
pop
cmp
sar
movsl
add
lea
lods
inc
test
imul
mov
xchg
int3
jge
mov
in
jl
pop
fwait
in
mov
adc
inc
mov
xor
dec
enter
or
pop
cs
jp
call
adc
inc
lret
dec
mov
leave
decl
cmp
sub
and
or
sbb
js
pop
fistpll
push
jecxz
test
aam
test
scas
sbbl
jnp
cltd
xchg
mov
add
sbb
push
dec
pop
push
cmp
push
nop
test
add
and
add
fs
rcrb
out
pusha
aad
cmp
les
lods
in
mov
sub
pop
sbb
lea
shrl
loop
ret
or
add
sbb
ret
inc
insl
pop
scas
sub
in
inc
fiaddl
cmp
cmp
std
mov
out
in
cmp
or
mov
in
pop
cli
movsb
fdivrl
icebp
fdivl
jb
sahf
adc
xor
icebp
lret
mov
cltd
out
and
vmread
daa
jg
stos
mov
xchg
lea
stos
push
push
mov
inc
mov
jge
loopne
addb
mov
sub
pushf
add
sub
loope
sbb
addr16
jae
cmpsb
dec
aaa
xlat
les
in
cmc
pop
into
sub
lods
scas
mov
sbb
test
push
fnstcw
dec
xchg
outsb
mov
pushf
aas
mov
lock
loop
ljmp
stos
lea
add
xchg
outsb
clc
xor
arpl
int
mov
pop
test
mov
xchg
or
test
add
ds
ror
out
mov
ret
cmp
leave
add
jg
pop
inc
push
push
sub
lock
stos
dec
cmp
xchg
into
fcompl
sbb
adc
ja
sarl
jge
push
imul
jecxz
lods
push
outsl
inc
pop
inc
ss
push
jne
xorl
sar
test
mov
xlat
enter
jle
fisttpl
fidivs
lahf
mov
mov
mov
pop
daa
stos
cli
addr16
push
adc
push
sub
rorb
push
inc
jp
lahf
lret
repz
outsl
in
jbe
add
int
into
xor
ds
daa
or
or
cmp
mov
pusha
cltd
push
jmp
mov
dec
pop
or
inc
xor
es
sub
int
cmp
out
vmwrite
mov
cmp
adc
mov
ja
xor
fdivrl
mov
cmpsl
jecxz
inc
cwtl
inc
dec
or
lods
and
js
inc
sub
ret
push
or
ljmp
push
jl
ret
mov
ret
mov
jb
das
sbb
in
inc
dec
inc
push
sahf
cltd
aaa
fsubrs
or
std
lahf
mov
movsb
sub
leave
ret
shl
rcll
adc
popa
sub
pop
push
sbb
xor
jecxz
aaa
test
and
or
adc
and
inc
jns
xchg
jge
fstp
mov
mov
xchg
cmp
leave
pop
mov
mov
fsubrl
mov
test
mov
inc
testl
outsb
xchg
jg
jne
and
ja
into
jp
and
outsb
lds
jb
sub
lods
xor
scas
mov
iret
ds
mov
aam
lods
orl
fstps
sub
adc
out
xor
orl
cli
iret
inc
lds
mov
add
je
sbb
js
mov
test
rcrb
cmc
enter
jae
in
or
mov
mov
scas
int
lds
gs
roll
daa
pop
sbb
lret
fsts
int
and
cmc
add
or
or
push
inc
or
adc
xor
push
cmp
inc
ss
sub
stos
fnstcw
ss
dec
cmp
arpl
adcl
shrb
enter
call
mov
test
dec
dec
xchg
std
push
sti
aaa
lods
mov
ljmp
mov
sub
out
lret
lret
insb
subl
cmp
push
jb
mov
sarb
aaa
or
cmpsb
loope
xor
or
mov
data16
push
sbb
adc
cltd
enter
xor
repz
sub
shll
mov
clc
inc
mov
jne
loope
cmp
andb
pushf
inc
xchg
popf
in
dec
jp
push
aaa
cmc
pop
leave
das
shr
das
dec
fnstsw
pushf
rcl
mov
xchg
push
fstl
jno
in
xor
es
mov
fnstenv
lods
inc
or
call
dec
stos
mov
test
and
mov
xchg
loopne
pushf
mov
stc
xchg
mov
sbb
jp
in
mov
gs
jp
pushf
xchg
test
xor
out
dec
push
ret
jnp
bound
adc
fcomp
ret
xor
adc
xchg
stc
push
pop
adc
into
pop
pop
stos
jle
jecxz
loopne
pop
cmp
push
stos
cmp
fs
jae,pt
imulb
testl
cwtl
sub
mov
jbe
xorb
push
mov
sub
fwait
lret
movsl
and
test
fistps
ficoml
hlt
cltd
fstpl
subl
dec
inc
aas
fcompl
fistpl
fsubs
jmp
mov
or
inc
stos
rol
insb
cmp
rorb
xchg
pop
roll
orb
mov
xchg
loope
push
repnz
ror
xor
test
sahf
enter
hlt
cwtl
xor
push
sti
orb
setp
cs
nop
cmp
inc
or
out
xchg
sti
fcomps
sub
adc
nop
sbb
data16
loopne
dec
imul
cmpsb
lcall
daa
test
add
mov
inc
stos
mov
movsl
enter
mov
out
sub
scas
adc
lret
or
or
sub
test
or
xchg
movsl
cmc
andl
popf
mov
xor
cmp
cmp
pop
mov
sbb
lock
sub
popa
xchg
into
xor
cwtl
call
arpl
in
movsb
cmpb
push
mov
ret
aam
jl
popa
sbb
push
xor
cs
sub
pop
inc
ljmp
push
lcall
dec
sbb
shrl
cli
data16
mov
or
out
mov
xchg
push
daa
dec
ss
test
push
cmp
test
cwtl
push
negl
sub
mov
push
pop
cs
jge
shl
mov
jae
sub
je
cs
mov
jl
pop
mov
jbe
out
sbb
sbb
cmpsb
rcrl
mov
jmp
cmpsb
test
daa
out
test
push
mov
shll
in
xor
mov
movsl
in
popa
mov
cmpsb
xchg
sarb
adc
hlt
add
dec
insl
mov
cmp
dec
dec
push
mov
xor
sub
sbb
mov
sbb
add
cmc
out
loopne
jae
jno
add
or
and
cmp
add
shrb
outsb
pop
add
jecxz
sub
notl
jg
push
mov
pushf
sbb
and
mov
lret
mov
mov
xchg
test
lcall
insb
adc
push
mov
movsb
arpl
in
sbb
xor
sahf
and
or
xchg
push
test
and
pushf
frstor
add
inc
lcall
xchg
mov
push
push
rcrb
lea
and
pop
inc
cmp
ljmp
aam
inc
das
jno
mov
dec
es
icebp
iret
pop
cltd
lret
inc
mov
nop
out
pop
pop
fstps
stos
push
or
lds
and
addl
adcb
fidivs
mov
push
mov
push
sbb
arpl
and
enter
lcall
ds
pop
cmp
test
xchg
add
dec
ds
mov
xchg
outsb
movsb
push
insl
or
jecxz
and
pop
outsb
aad
mov
or
xchg
nop
mov
cltd
gs
lods
inc
xor
int3
adc
scas
jae
sub
rorb
mov
imul
addl
gs
loopne
push
fnstenv
add
jge
mov
and
int
call
dec
xor
and
call
pop
push
mov
cmp
push
cmp
xor
cmp
stos
aad
movsl
mov
push
adc
lcall
and
rcrl
leave
arpl
lahf
in
out
dec
mov
sbb
ja
icebp
cmpsl
dec
add
adc
mov
push
mov
pop
inc
orb
je
mov
into
sbb
jg
push
and
aam
mov
mov
fdivrl
lret
ss
lock
arpl
pop
movsb
es
mov
lock
pushf
mov
dec
test
xchg
jg
sahf
data16
loop
jecxz
and
mov
adc
cmp
sub
mov
icebp
dec
mov
mov
repz
in
or
int
ret
cmp
pop
nop
push
adc
jae
cmp
push
xchg
enter
adc
in
into
and
jge
imul
std
and
and
xchg
dec
push
jecxz
mov
les
test
sub
pop
in
xor
and
mulb
adc
push
mov
pop
mov
rcrl
out
cli
or
sbb
call
int
fsubrs
ret
xor
mov
push
inc
and
mov
mov
fsubl
pop
push
push
add
gs
push
cmp
test
daa
dec
lret
jae
pop
cmp
mov
push
pop
out
loopne
mov
adc
inc
mov
adc
pop
sub
pop
mov
pop
jmp
mov
lahf
loop
inc
pop
jnp
pop
dec
sbb
mov
lea
hlt
add
pop
insb
push
popf
cltd
push
pusha
xchg
stc
outsb
insl
iret
dec
stc
arpl
movsb
mov
adc
or
mov
in
and
push
mov
cmp
add
fcmove
cmpsb
sbb
loope
fidivrs
aad
daa
and
cmp
add
jb
and
jp
push
add
sub
or
loop
mov
inc
cmc
ftst
aas
add
and
data16
xchg
lcall
jl
and
subl
fs
jg,pn
in
dec
loope
inc
les
enter
test
imul
pop
cmp
sbb
fsubs
push
cld
loop
mov
mov
nop
mov
adc
jl
in
cwtl
or
enter
cmp
or
mov
lret
movb
cwtl
xor
add
xchg
add
movsb
into
dec
and
sub
stc
mov
idivl
jmp
push
or
inc
scas
add
sahf
jp
aaa
daa
rclb
scas
push
ret
mov
jg
popf
sbb
xor
stc
test
xor
lds
bound
int
es
out
push
mov
out
fisttpl
je
negl
cmp
push
xlat
aaa
pop
cmp
adc
or
xchg
shrl
adc
adc
jle
cmc
imul
add
into
stos
sarl
dec
xor
jbe
add
stc
inc
in
rcrl
jnp
mov
adc
dec
adc
pop
mov
sub
cld
and
jno
outsl
scas
leave
in
lcall
jl
sbb
jge
jbe
lock
mov
adc
repz
mov
push
aam
xchg
aam
jmp
stc
mov
inc
sbb
xchg
adc
mov
dec
sbb
cmp
lods
lds
and
push
pop
sahf
inc
outsb
mov
pop
push
lret
push
push
lods
fcomip
not
test
stos
cmp
das
lcall
in
bound
xchg
mov
jne
mov
adc
cmc
cwtl
arpl
xchg
icebp
jae
sbb
mov
cld
jne
pop
push
mov
adc
ljmp
sub
call
icebp
pop
pop
addr16
ds
mov
mov
jb
sub
daa
sti
xchg
fsubrs
bound
mov
daa
mov
mov
xchg
pop
ja
loopne
dec
shll
fsubrl
int3
loop
repnz
decl
inc
and
das
cs
minps
ficompl
es
sbb
adcb
rolb
pop
fiaddl
daa
sahf
push
adc
and
pop
mov
jne
pop
lret
lods
divl
adc
mov
call
pop
and
inc
push
push
fs
test
aam
ljmp
dec
pop
les
push
xor
andb
mov
mov
int
bound
xchg
das
lds
dec
inc
cwtl
pop
rcr
int3
js
cli
arpl
movsb
mov
loopne
jmp
filds
adc
mov
mov
jbe
pop
sbbl
xor
clc
cmp
mov
popf
cmp
jl
adc
mov
fidivl
out
lds
sub
pusha
sub
cmp
xor
popa
sbbl
rol
cmp
cltd
sub
add
in
jg
pop
add
orb
cmp
shl
cmpsl
pop
test
and
and
cmp
outsb
fiaddl
push
movsl
sub
insl
and
sub
andb
inc
jle
or
or
and
imul
ret
iret
jle
imul
lret
xchg
jmp
notl
mov
sbb
adc
mov
xchg
sahf
push
and
cmpsl
inc
sub
shl
negl
jge
stc
add
pop
test
and
rcrl
mov
iret
mov
or
rolb
sbb
lods
xchg
inc
aaa
outsb
push
addb
mov
inc
mov
les
push
mov
in
lds
mov
adc
aaa
cmp
dec
jae
out
dec
add
push
inc
sbb
fwait
in
fmull
pop
mov
mov
or
ret
mov
mov
adc
jg
jo
cld
mov
mov
jle
test
pop
jbe
push
stos
adc
bnd
ret
sahf
inc
xchg
repnz
aas
clc
mov
adc
fs
popf
ljmp
mov
leave
je
lahf
jb
add
cmc
imul
cmp
push
inc
jl
test
jae
mov
aad
fisttpl
mov
mov
push
sbb
ja
push
insb
xor
mov
adc
pop
and
push
or
imul
subb
int
out
push
insb
adc
imull
adc
jae
jg
imul
inc
mov
mov
in
fsubl
adc
arpl
jmp
movsb
lock
fcoml
or
inc
xchg
mov
xchg
jnp
or
push
and
jbe
outsb
mov
pusha
cmp
pop
cmp
ja
andl
ss
add
jle
jmp
pop
out
and
dec
mov
jns
cmpsl
fcomps
push
fdivrl
bnd
fbstp
inc
addl
mov
divl
cmc
std
out
push
sbb
push
or
sub
jne
and
dec
mov
adc
out
mov
push
inc
adc
jecxz
sub
mov
rolb
enter
ret
xchg
int
iret
mov
inc
jb
out
lods
mov
sbb
lret
adc
roll
cs
jmp
xor
or
sub
pop
sbb
xchg
push
inc
xor
ret
lret
ret
in
enter
cmc
sub
and
sbb
pop
call
setp
push
sbb
xor
or
mov
pusha
or
test
ds
dec
sbb
push
mov
xor
mov
sbb
mov
aas
add
ss
add
clc
std
jmp
jmp
sub
jbe
cmpsl
inc
xchg
mov
fdivr
fldenv
imul
pop
push
mov
test
sbb
comiss
xor
push
lods
je
add
add
pop
xor
leave
popf
xor
hlt
xchg
hlt
stos
leave
scas
mov
popf
sub
je
ljmp
mov
mov
or
insb
lcall
inc
push
pop
or
dec
mov
inc
jle
jne
stos
fsub
aad
lock
lock
enter
int
nop
jo
inc
mov
lret
inc
jmp
add
add
out
sub
out
dec
hlt
loope
push
and
sbb
push
lcall
flds
out
mov
jl
xchg
dec
xor
popf
loopne
lods
jne
setl
jge
mov
fs
lods
xorb
notb
out
pusha
jnp
jp
stos
jae
mov
pop
fwait
sub
loope
cmpsb
xchg
fisttps
add
imul
daa
cs
mov
cs
inc
out
push
shll
leave
or
dec
push
ret
add
stos
xchg
pushf
jb
mov
imul
lock
sub
mov
mov
xchg
sar
into
orb
daa
push
jmp
call
xchg
shlb
push
add
mov
cmp
pop
aam
repz
scas
or
into
out
mov
mov
inc
mov
sbb
pop
xchg
cmp
mov
movsl
inc
xor
ss
fimull
aam
sub
or
orb
mov
cli
and
aas
into
cmpsb
jns
jno
lods
idivl
aad
rcll
sub
pop
dec
pop
sahf
scas
movsb
lret
adc
lret
popa
sub
fisubrs
mov
addr16
test
cli
loopne
rolb
pop
cli
insl
aaa
fiadds
push
inc
fistl
scas
pop
adc
and
xchg
sub
mov
inc
fs
pusha
es
stos
insb
sub
cmpsl
outsl
xchg
rclb
inc
xchg
push
sahf
int
xor
and
mov
orl
ss
ror
jns
pop
fsubs
lds
push
push
bound
pop
sbb
bound
adc
xchg
jns
outsl
test
cmpsl
mov
bound
test
pop
lcall
mov
loope
addr16
inc
adc
and
xchg
xchg
out
in
std
dec
xchg
test
jnp
xor
cmpsl
call
addr16
cmpsl
sbb
or
add
cmp
rcrl
test
icebp
xchg
jne
dec
mov
pusha
pop
push
bound
mov
xrstors
stos
test
jae
imul
mov
add
mov
sbb
inc
xor
push
jne
pop
push
clc
ret
icebp
sub
jnp
ret
push
dec
std
pop
test
sub
and
lret
push
mov
testb
icebp
adc
rol
jns
movl
or
cs
pop
sbb
enter
lds
push
shufps
fimull
notb
rcll
add
and
push
pop
and
in
cmp
cwtl
dec
mov
adc
pop
xlat
outsb
inc
pop
or
movsb
fwait
stc
aas
inc
aas
lahf
sub
push
aas
ja
add
lahf
push
xorb
mov
in
jp
clc
xchg
add
out
push
lods
cli
mov
push
lret
scas
jp
inc
jge
stc
mov
sub
cmp
and
insb
dec
inc
or
jecxz
fdiv
fsubp
je
or
jns
pop
iret
into
mov
inc
or
decb
add
pop
pop
testb
xchg
into
leave
js
les
ljmp
out
cwtl
cltd
imul
out
sti
int3
mov
dec
xchg
pop
ds
lahf
dec
and
push
leave
pop
jae
in
lahf
arpl
push
cltd
aam
mov
decl
inc
push
sub
fdivs
and
dec
sbb
xchg
shll
pop
add
jnp
ds
mov
cmc
add
lds
mov
cs
call
inc
inc
mov
icebp
leave
negb
xchg
ss
imul
xchg
bound
cli
pop
icebp
loop
icebp
movsb
mov
lret
insb
adc
arpl
pushf
mov
xchg
inc
mov
fsts
sti
add
lods
cmp
imul
dec
mov
fsubrs
test
cmp
mov
xorb
pmulhw
push
testl
xor
pop
rcrl
adc
inc
jno
and
arpl
sub
mov
arpl
call
fdivrs
popa
mov
or
std
or
push
pop
sbb
and
neg
sbb
dec
xor
xor
xorl
or
ret
inc
inc
dec
insb
cld
push
rorl
inc
xchg
pushf
push
jnp
repnz
ss
iret
mov
roll
pop
cwtl
adc
xor
sbb
push
cmp
mov
inc
shrl
out
cmpsb
fisubrs
subl
mov
aam
inc
jmp
lret
insl
bound
lret
shlb
cltd
in
sbb
xchg
insb
push
sub
lds
shlb
out
sub
stc
fwait
jo
pop
mov
sub
in
mov
in
push
adc
insb
test
sbb
mov
in
aad
add
push
stos
pop
gs
push
rorb
pop
mov
dec
js
dec
xor
movsl
test
scas
lods
fildll
inc
jp
pusha
and
repnz
sahf
xchg
mov
dec
lock
mov
or
test
pusha
lahf
jno
rcrl
push
pop
shlb
jge
pop
jg
out
lods
mov
push
dec
clc
imul
sub
adc
repnz
cmp
out
cmp
or
pop
jo
add
int
cltd
sbb
xchg
out
and
pop
addr16
shrb
jae
adc
in
pop
stos
inc
inc
cltd
sbb
cmpb
loope
mov
jb
addr16
dec
outsb
or
lahf
icebp
mov
std
add
jp
pop
dec
sarl
jne
mov
jp
jp
es
sbb
mov
inc
in
inc
int
mov
xlat
xor
push
sub
or
pop
pop
shr
rcll
clc
loope
push
add
aaa
push
mov
add
rcrl
in
inc
lds
cmp
dec
rcll
sbb
push
pop
mov
xlat
and
mov
sub
xchg
nop
pop
je
mov
push
cli
clc
pop
xchg
xchg
inc
notl
and
mov
jb
add
and
xor
mov
add
mov
cmp
fs
movsl
or
push
push
push
xchg
xchg
xchg
mov
xchg
add
lea
and
pop
sarl
inc
fsubs
insl
mov
fwait
test
push
jecxz
inc
les
or
and
push
shrb
jmp
aas
dec
jecxz
mov
inc
jae
test
jl
mov
jle
mov
sub
popa
cmp
daa
test
dec
addb
insl
scas
jecxz
xor
push
sbb
cmp
jle
sbb
adc
mov
jns
pop
clc
mov
jl
lea
pop
push
imul
push
aad
and
insl
inc
push
push
add
xor
call
data16
mov
lahf
xchg
pop
cmp
mov
iret
lcall
dec
scas
lods
mov
mov
dec
push
jge
push
sbb
sbb
dec
les
lods
xor
or
repnz
lock
xchg
cmp
mov
push
loope
push
lds
push
inc
cmp
mov
jl
xorl
jmp
fwait
push
sub
outsl
and
sub
mov
cmp
in
sar
push
xchg
mov
xor
in
out
sub
and
int3
and
and
and
cs
dec
nop
test
inc
inc
pop
and
inc
sbb
aaa
enter
scas
pop
stos
xchg
inc
nop
sbb
fmull
and
daa
inc
ss
or
mulb
jp
jmp
inc
inc
or
lods
sbb
lahf
xchg
jne
dec
bound
loope
insb
sub
push
jo
rcll
or
xchg
out
dec
pusha
loop
cmpsl
xchg
inc
int
test
cld
jge
loop
push
mov
orb
ljmp
dec
mov
cmc
push
sbb
sbb
cltd
fwait
cmp
dec
mov
jns
xor
add
jae
pusha
or
aam
fildl
ds
mov
xor
repnz
orl
add
cmp
ds
cmpsl
mov
mov
adc
inc
sub
or
stc
jle
add
adc
push
sbb
lea
jo
sbb
adc
mov
stos
mov
ljmp
jmp
add
mov
imul
cmp
lds
cmc
ja
mov
enter
adc
jp
scas
lea
rorb
lds
aam
cld
ja
add
repz
pop
add
pop
lea
pop
or
sti
sub
jge
in
add
cmpsb
mov
or
lcall
shr
data16
cmpsb
sbb
sub
repnz
add
sbb
add
cmp
push
ljmp
mov
ja
push
mov
jecxz
add
dec
jmp
rorl
cmp
cmp
jae
sub
mov
cmpl
xchg
test
push
lea
enter
xchg
add
loop
jle
lret
mov
popf
out
mov
push
cmp
sub
cmc
daa
js
pop
mov
movsb
xlat
data16
xor
xor
sbb
or
shrb
jg
sub
sub
xchg
xchg
sub
inc
push
push
inc
xor
test
movsl
and
or
or
xor
cmp
jmp
pop
addb
and
adc
aad
lods
push
shlb
fsubrl
or
shlb
adc
lea
sub
fs
add
or
scas
scas
push
incb
mul
mov
push
jle
ret
faddl
call
int
jle
lds
adc
xchg
jb
cwtl
cmpsl
cmp
jbe
push
inc
push
jle
aam
pop
mov
aam
dec
dec
push
aam
insl
insl
add
or
xor
test
xchg
hlt
adc
mov
hlt
add
mov
rcll
pop
clc
leave
fadds
pusha
mov
sbb
aaa
inc
pop
sbb
and
cmp
mov
rolb
dec
jae
mov
cld
inc
sbb
mov
jp
rclb
cmc
inc
or
mov
cmp
mov
pop
sub
xlat
mov
shr
sahf
push
jo
mov
cltd
lea
cmp
sti
repz
fdiv
movsl
push
mov
mov
push
mov
mov
sbb
shrl
outsb
jl
into
cmp
push
mov
adc
xlat
cmp
mov
pop
stc
adc
test
stc
popf
iret
sub
jl
sub
sub
dec
lcall
mov
les
je
sub
popf
inc
mov
xorl
cld
xor
pop
inc
pop
pop
lret
lods
in
fcmovnu
ljmp
xchg
inc
fldenv
or
sbb
push
test
pop
or
popa
cmp
push
test
loope
xor
jmp
pop
hlt
aad
rcrl
push
pop
not
pop
scas
mov
adc
xchg
and
push
ud0
sub
inc
cwtl
sarb
mov
jecxz
stos
fisubrs
mov
push
ror
stc
enter
push
out
sbb
add
sub
orb
jecxz
mov
test
insl
dec
cmc
cmpl
mov
adc
out
lods
jae
les
das
loope
inc
cli
mov
loopne
jnp
push
sbb
popa
push
pop
out
mov
push
lahf
xor
push
add
jo
jp
js
popl
mov
xchg
ret
out
mov
pop
sti
lret
pop
inc
add
jnp
roll
insl
mov
pop
outsb
mov
adc
jnp
test
stc
and
jns
pop
and
jle
clc
out
sbb
call
pop
emms
shr
xchg
lret
push
adc
stos
pextrw
adc
push
enter
das
push
mov
outsb
and
cwtl
sahf
mov
mov
adc
and
shl
pop
mov
push
xor
jo
or
inc
or
xchg
out
push
mov
fwait
lahf
mov
inc
in
sub
dec
cmpsb
shl
inc
cmpsl
bnd
mov
popa
jo
pop
mov
int
sub
xor
xor
xchg
or
outsb
mov
pop
insb
xor
and
inc
xchg
movsl
sub
aam
aam
enter
jnp
cmc
rcrl
jmp
push
or
in
push
aas
and
movsl
jp
std
je
add
mov
push
mov
sti
in
fwait
push
ret
and
jae
adc
cli
lea
or
in
mul
sti
xchg
sbb
mov
mov
daa
lock
lods
pop
repnz
cmp
fsubs
out
or
sub
icebp
xor
or
push
dec
rolb
mov
pusha
or
outsb
jmp
scas
imul
sahf
fchs
mov
in
mov
inc
out
sbb
and
fidivs
add
jne
cltd
fcmove
add
ret
lds
sub
mov
cli
and
sub
mov
push
out
pop
push
shrb
out
mov
jne
and
fstpt
pop
stos
test
or
in
loop
mov
adc
jmp
mov
jnp
sahf
xor
sub
testb
cmc
push
cltd
fstpt
jbe
and
inc
inc
mov
pop
inc
mov
lcall
dec
mov
repz
xor
xor
or
inc
leave
mov
insb
rcrb
pop
xchg
pop
mov
imul
add
aam
sub
sbb
lcall
lcall
cmp
sbb
mov
lods
test
lea
test
jmp
dec
shll
daa
push
insb
decb
daa
xor
or
mov
pop
pop
mov
jge
nop
out
sub
inc
push
test
sbb
in
fidivrl
adc
mov
sti
cltd
dec
in
jb
or
push
sub
jne
push
andb
aam
adc
jl,pn
shrl
data16
movsl
cmpsb
sub
pop
xchg
gs
cld
ds
mov
dec
add
mov
cmpsb
and
out
push
xor
out
call
add
and
inc
jmp
add
jecxz
jge
repz
sub
add
in
not
aam
sbb
add
cmpsl
dec
xlat
fisttpl
mov
inc
inc
je
arpl
xchg
mov
out
mov
adc
adc
in
sahf
pop
aaa
arpl
xor
dec
mov
lcall
out
jne
xchg
sub
testl
push
sarl
sbb
sbb
dec
bound
adcb
or
inc
mov
gs
push
push
push
or
mov
adc
and
fdivr
cmp
and
inc
xlat
in
icebp
and
outsl
add
orl
ret
or
mov
push
push
cmp
clc
jae
xchg
imul
xchg
out
stc
sub
hlt
in
repnz
and
pop
add
ret
adc
jle
jge
adc
and
jbe
or
popa
xchg
jno
mov
jb
ret
clc
push
or
mov
pusha
andb
or
xor
mov
mov
testb
mov
dec
repz
sti
pop
lds
xchg
pop
jp
pop
out
mulb
outsb
out
out
push
dec
xor
sub
test
pop
add
sbb
nop
or
inc
stc
arpl
nop
popa
add
cmp
pop
jbe
mov
pop
call
push
ja
sbb
iret
lcall
nop
sbbl
cmp
repz
lcall
pushf
mov
mov
ss
sub
jg
lahf
inc
pop
inc
sub
daa
call
lret
roll
ja
push
add
lea
jle
stc
aam
pusha
and
inc
add
orb
mov
ljmp
xchg
call
cwtl
repz
test
xchg
inc
jns
dec
pop
or
dec
cmp
push
imul
sar
or
repz
bound
mov
aas
sub
pop
xchg
das
sub
ret
and
es
loopne
xchg
jg
in
insl
mov
push
jle
out
mov
add
lahf
mov
aam
mov
push
pusha
dec
sub
push
clc
pop
mov
out
rcll
xchg
les
out
mov
fisttpl
repz
xchg
out
or
dec
int3
push
lods
xor
mov
cmp
mov
jl
movsl
shll
push
decb
jecxz
lods
call
insl
push
jbe
loope
add
adc
cmp
fdivrp
pop
sub
mov
pop
aam
inc
jmp
sbb
hlt
imul
pop
add
rcrb
rolb
inc
and
mov
jns
adc
das
rol
addr16
mov
mov
fstl
xor
jle
mul
jle
jbe
out
xor
inc
adc
dec
lods
shlb
rcrl
stos
aad
and
ret
and
inc
cmp
jbe
lret
jle
call
or
adc
fsubp
test
iret
rep
out
sub
mov
xchg
sti
mov
lea
jns
dec
mov
cmc
out
ljmp
ficoms
subb
icebp
call
lea
in
cmp
pop
repz
inc
ss
popf
es
xor
insl
pop
lcall
xchg
lods
pushf
ja
gs
fistpll
nop
mov
jg
test
std
jecxz
fwait
sbb
fcoml
jmp
cltd
aas
call
jnp
sub
stos
cmpl
push
pop
mov
sahf
out
out
shl
cli
pop
mov
into
jo
cmp
push
mov
inc
clc
or
hlt
lret
cmp
inc
mov
push
cmp
je
add
sbb
add
jl
dec
jbe
sub
jl
cmp
lret
mov
sar
push
mov
loopne
mull
mov
xchg
aad
mov
fs
xor
or
jb
sar
ja
movsb
mov
cmpsb
out
mov
xchg
pop
lods
hlt
mov
hlt
push
cli
pop
dec
cmc
adc
lret
movsb
dec
jnp
lds
pop
dec
insb
pop
ficomps
pop
out
sbb
or
movsl
and
and
and
cmp
pop
push
adc
sbb
in
sub
or
in
mov
xor
nop
je
mov
ret
cmp
fdivl
rolb
ss
xchg
imulb
mov
add
pop
scas
mov
xchg
mov
inc
sbb
scas
mov
shll
jle
lret
sbb
insb
pusha
stc
inc
shr
ljmp
or
sar
lock
lods
pop
je
push
sub
xor
dec
or
xchg
lods
mov
hlt
jmp
in
sub
sub
movsb
adc
fidivl
cmpsb
outsb
insb
scas
push
mov
push
pushf
movsb
xor
sub
pcmpeqd
repz
sub
push
add
push
addl
and
aaa
or
lcall
test
push
inc
cld
and
popa
cmp
imul
mov
idivb
jne
mov
mov
sti
mov
das
sub
iret
scas
dec
and
push
leave
cmp
lock
pop
adc
sub
stos
pop
stos
add
xlat
iret
dec
push
jmp
and
cmp
clc
dec
jg
jg
cmp
mov
sub
mov
fprem
sub
add
orl
adc
inc
jecxz
mov
xor
fidivrl
stc
jge
pusha
popa
mov
shl
icebp
sub
mov
fimuls
mov
xlat
test
mov
and
xor
dec
stos
lds
sti
rcll
push
lret
cmp
jne
push
cld
sub
push
enter
push
xchg
pusha
mov
pop
cmpsb
or
xor
sbb
insb
dec
adc
aam
cmp
in
sub
dec
lods
mov
push
mov
jp
insb
gs
ja
jb
in
int
test
and
cmp
push
in
jp
mov
aad
jnp
idivb
sarl
xchg
add
out
xchg
dec
arpl
cmp
xlat
inc
xor
xor
dec
stos
adc
test
gs
mov
mov
add
mov
pop
bnd
int3
cmc
push
repnz
dec
ljmp
mov
dec
cmpsl
xchg
ljmp
lcall
popf
mov
enter
lods
xchg
pop
adcl
test
xor
fsubr
lods
rorl
negl
jle,pn
test
push
mov
mov
adc
pushf
dec
or
or
sti
mov
or
sub
aas
nop
dec
jl
sbb
pop
pop
xchg
mov
roll
out
cmc
repz
stos
arpl
xor
jbe
dec
aaa
dec
pushf
ja
pop
in
ds
lods
repnz
mov
push
mov
pop
dec
leave
shlb
lods
dec
ret
icebp
xchg
leave
pop
aam
cld
adc
cs
mov
clc
fists
jno
mov
fdecstp
jecxz
push
jecxz
sub
inc
into
out
daa
pop
xor
sbb
xor
xlat
add
aas
mov
and
in
mov
mov
dec
jg
lods
mov
mov
jae
cld
test
pop
adc
mov
jno
fs
and
sbb
inc
cmpsl
fsubrs
adc
jbe
pop
push
int3
shrb
pushf
mov
xor
mov
xchg
adc
push
mov
dec
mov
xor
idiv
pop
inc
sbb
lods
xchg
scas
lahf
ss
test
cmp
and
xor
inc
pop
cwtl
adc
sbb
fs
jecxz
inc
pop
out
ret
fwait
call
pusha
shlb
sbbl
xor
leave
mov
cwtl
jecxz
add
int3
lock
add
outsl
xor
mov
ds
cltd
xchg
lods
andl
mov
mov
add
ret
mov
ror
outsb
fwait
insb
imul
push
inc
fs
sbb
jmp
das
cmpsl
shlb
push
dec
in
imul
sbb
iret
lods
mov
mov
in
jae
insb
fisubs
push
imul
les
mov
out
loopne
in
push
clc
fisttpl
cmp
mov
mov
inc
inc
lahf
test
popf
or
cltd
mov
sub
xchg
scas
inc
cmp
ja
lret
mov
ss
ret
push
xchg
inc
arpl
jb
shlb
lcall
cld
test
xchg
sub
push
cmp
lods
add
dec
and
cmp
test
outsl
mov
pushf
data16
inc
fsub
and
sub
rcll
sbbb
pop
aas
mov
dec
rcrl
clc
in
mov
mov
jl
jne
shll
stos
pop
ljmp
mov
jnp
xor
xchg
pop
fstp
std
adc
dec
mov
in
push
jo
mov
sbb
das
aaa
add
ljmp
inc
adc
mov
jle
data16
call
fcomip
sub
fucomi
out
mov
cmp
pop
arpl
cmpsb
mov
mov
and
into
mov
movsb
mov
mov
lds
and
neg
xchg
std
lds
rcll
repz
call
sarl
loopne
mov
mov
xchg
inc
mov
pop
sbb
orb
jp
push
cld
mov
data16
inc
mov
jge
fcompl
loopne
sub
push
es
in
js
add
ss
mov
out
dec
mov
xchg
inc
mov
jp
lds
loope
xchg
fbld
mov
jne
negb
sahf
and
test
jns
ret
jo
mov
cmp
or
cmp
or
dec
shll
scas
cmp
pop
push
xor
into
jge
xlat
pushf
loop
jo
fs
jns
and
shlb
pop
xor
mov
push
cmp
test
fwait
pop
dec
out
push
xlat
scas
outsb
aam
adc
mov
sub
xchg
jmp
sub
lea
rolb
outsl
fldenv
hlt
daa
adc
jmp
gs
pop
jmp
jnp
iret
scas
dec
mov
sti
cmp
or
mov
push
pusha
jmp
sub
sub
div
and
in
repnz
clc
dec
es
jno
xchg
cmpl
xor
in
in
push
popf
inc
pop
pop
sbb
push
hlt
sarb
faddl
aad
shll
xchg
cmp
inc
push
scas
sub
or
stos
subb
cwtl
sbb
fdivr
mov
ds
mov
cmp
adc
outsb
pop
icebp
mov
pop
sahf
or
or
das
leave
jae
xor
mov
in
xlat
xor
sarb
popa
dec
xor
inc
pushf
jle
out
shlb
sbb
rcrb
sarl
int
ss
loop
ja
mov
jmp
cli
jno
out
cltd
pop
add
hlt
jge
nop
mov
cld
pushf
insl
mov
jbe
movsb
sbb
popf
add
ja
cmpsl
jge
into
sti
mov
imul
ret
push
lods
inc
and
cmp
dec
jp
data16
aad
pop
lock
enter
sahf
adc
std
dec
cmp
lods
ljmp
out
mov
push
pop
mov
shr
mov
outsb
cld
rorb
scas
add
jo
addr16
rcrl
insb
adc
stos
pusha
cmp
pop
imul
jecxz
xor
push
pop
jb
jmp
sub
addb
test
mov
lret
jmp
dec
test
sti
fisttpl
shrl
movsb
and
pop
inc
rcl
mov
xchg
lods
pusha
popf
dec
popa
fdivs
sbb
pop
mov
scas
mov
test
sbb
ljmp
pop
iret
bound
sub
fucomip
sbb
or
out
or
mov
mov
movsl
rorb
dec
sbb
dec
xchg
mov
mov
jns
jae
dec
into
sti
fcmovne
sub
add
jl
jl
mov
xchg
jae
shll
add
stc
pop
sbb
mov
jmp
mov
push
jne
dec
add
jae
and
movsl
mov
imul
sbb
in
xor
ja
and
or
cmpb
sarb
shlb
popa
pusha
js
dec
mov
pop
push
mov
out
jno
scas
mov
out
jb
iret
sbb
fldl2e
imul
and
into
icebp
and
mov
jae
imul
dec
push
xchg
pop
fnstsw
in
dec
dec
push
sub
jno
out
int3
pop
mov
xlat
pop
fildl
pop
movsl
add
pop
test
loope
mov
mov
mov
in
ror
xor
dec
mov
call
jb
push
es
cmc
adc
mov
repnz
lock
sti
outsl
out
sub
call
scas
fistps
xchg
push
xlat
stos
int3
inc
fsub
mov
js
xor
iret
aaa
dec
push
mov
mov
mov
lret
loop
test
add
sub
aam
addr16
inc
fildl
sbb
cmp
ss
push
sarb
mov
mov
inc
pop
dec
loope
xorl
or
xorb
mov
mov
dec
js
dec
mov
sub
int
add
and
sub
lret
iret
mov
outsl
cmpsb
cli
sub
push
cmp
or
mov
stc
mov
out
test
pop
cmp
mov
enter
mov
xor
dec
in
mov
xchg
das
ficomps
push
dec
mov
faddl
cltd
addr16
ret
mov
xchg
sahf
cmp
and
mov
mov
and
add
cwtl
dec
or
js
fucom
pushf
addr16
cwtl
xor
aas
pop
sbb
testl
mov
mov
or
mov
or
sub
ret
dec
jecxz
xchg
ljmp
mov
adc
call
xor
not
xchg
mov
jg
pop
or
js
mov
cmp
lods
hlt
rorb
mov
sbb
mov
and
sub
jbe
repz
inc
push
shlb
cmpsb
sti
mov
ret
mov
dec
push
gs
fnstcw
stc
out
in
js
sahf
push
and
mov
mov
push
fucomp
dec
push
imul
pop
cmp
aam
mov
xor
pop
inc
sbbl
pop
dec
xor
cmp
popf
or
pop
jns
mov
or
test
sub
mov
test
js
jne
out
pop
jo
loopne
dec
dec
push
popa
jno
in
test
lds
stos
repnz
je
std
fidivl
lcall
adc
test
imul
test
adc
lahf
movsb
dec
jmp
movsl
scas
lcall
ss
ja
sahf
out
fsub
push
jno
cmpsb
dec
dec
shrd
out
test
aad
push
adc
clc
fs
das
adc
fistl
jge
adc
and
xchg
enter
daa
sbb
sub
cmc
lods
jmp
out
aas
push
mov
lods
ret
mov
xor
je
mov
cmp
pop
sbb
lods
fldcw
into
mov
xorb
test
lods
mov
mov
dec
ret
cmpsb
std
xor
lea
js
mov
jg
xchg
lret
or
pand
test
ljmp
rorl
push
cmp
insl
dec
jmp
or
in
jg
lret
adc
into
xchg
rol
inc
repnz
movl
nop
shl
jg
sbb
js
mov
arpl
loope
arpl
sbb
mov
add
push
fptan
inc
xchg
or
leave
mov
pop
sub
mov
out
inc
stos
je
pop
lds
fsubl
mov
sbb
arpl
out
daa
outsl
insl
inc
loopne
loop
pop
xchg
dec
pop
in
xchg
mov
mov
enter
leave
pusha
pop
jno
push
addr16
fisttpll
clc
dec
mov
insb
sub
mov
mov
mov
adc
mov
xchg
out
pop
add
sbb
add
loop
test
add
scas
ss
testl
inc
popa
inc
sbb
inc
fdiv
xor
icebp
cmpsb
pop
sbb
movsl
das
aam
cmp
jle
mov
sub
mov
negb
iret
xor
fsubl
dec
mov
arpl
ja
stos
hlt
mov
jmp
sub
sahf
movsb
add
sbb
in
push
push
sub
jp
dec
scas
aam
mov
sbb
dec
testb
push
fisttpl
mov
sbb
call
scas
loopne
dec
mov
xor
ds
bound
push
call
push
fs
imul
fiaddl
shlb
aad
out
xchg
push
cli
cmp
push
push
les
xlat
xchg
mov
loop
xchg
test
sarb
scas
dec
imul
inc
imul
xchg
ret
rcr
nop
cltd
test
lret
popa
or
inc
cmp
mov
xlat
mov
mov
mov
mov
jbe
xchg
mov
imul
and
inc
adc
rcl
nop
les
jg
or
add
jo
andb
popf
nop
mov
dec
in
call
xchg
lods
adc
add
push
dec
fucomip
adcl
movsl
test
xlat
pop
repz
mov
repz
out
lods
outsb
xchg
lea
inc
lea
daa
insl
jb
sub
or
pop
enter
pop
or
xchg
aad
in
xchg
push
jnp
pop
ficoml
popf
int3
call
loopne
mov
pusha
dec
insb
mov
leave
or
add
dec
mov
mov
sbb
mov
addr16
adc
in
pushf
pop
lret
and
rorl
daa
push
add
jmp
das
xchg
ret
enter
fimuls
enter
fs
in
sbb
mov
movsl
lods
inc
dec
inc
jmp
popf
fistl
jns
fiaddl
out
xor
mov
pusha
mov
pop
aas
call
insl
ja
int
mov
cmp
mov
rorl
push
hlt
lret
in
xchg
lcall
add
add
pushf
idiv
aas
test
pushl
add
icebp
movsl
sarl
or
lock
xor
lahf
sub
mov
mov
mov
repnz
fisttps
repz
mov
insb
div
mov
mov
stos
clc
push
int
in
nop
sti
enter
cli
repz
imul
lock
jge
pop
push
je
mov
xchg
inc
and
add
pop
dec
jbe
inc
jns
ds
loop
dec
add
fisttps
inc
cld
dec
xor
mov
xchg
jp
mov
into
sbb
adc
jb
inc
jmp
mov
jecxz
jbe
lods
xorl
lods
loop
push
pop
xlat
hlt
or
push
in
arpl
mov
mov
popf
in
mov
sbb
fcomi
cmp
fcoms
pop
enter
cld
mov
jmp
mov
out
push
cmp
and
xor
mov
mov
ljmp
mov
ss
repnz
stc
leave
sub
popa
jnp
inc
inc
das
cmp
ret
pop
sarb
aas
fcomps
ljmp
fldl
mov
push
pop
or
pop
jge
jo
es
stos
and
cld
pushf
xchg
or
popa
iret
jmp
push
imul
pop
loopne
mov
inc
sbb
add
push
mov
imul
outsb
aaa
daa
dec
sub
divl
cmp
icebp
pop
ja
sub
cmpsb
cld
jb
jmp
pop
cmp
hlt
jge
xchg
das
sbb
loop
loop
pusha
fldt
aaa
dec
push
inc
jg
rcr
lret
push
adc
and
xchg
or
lock
das
xor
adc
jno
enter
mov
adc
dec
ss
mov
imul
xor
lret
notb
dec
arpl
test
daa
jmp
into
pop
pop
lcall
adc
in
or
lahf
mov
into
cmpb
arpl
mov
movsb
inc
and
push
lods
xor
insb
je
insl
add
add
xchg
mov
test
in
mov
test
stos
push
es
jo
lcall
dec
test
pop
lods
mov
int
rcrb
mov
and
je
loop
popa
sub
repnz
jg
gs
add
pop
popa
clc
push
mov
call
es
sub
push
out
mov
call
or
inc
mov
enter
js
push
mov
shll
adc
mov
adcb
int
shlb
dec
push
mov
pop
stos
hlt
testl
data16
loope
mov
ljmp
out
jmp
add
or
sub
pop
mov
jo
cmp
or
add
xchg
mov
xor
out
rcr
dec
ljmp
or
into
fistl
xchg
mov
adc
adc
jle
pop
sbbl
shrl
xchg
or
lret
dec
pop
lods
add
test
mov
add
jecxz
leave
or
rcll
push
mov
adc
int
push
mov
mov
ljmp
inc
js
cmpsb
lods
mov
xchg
xchg
cmc
mov
jnp
sub
inc
push
sar
mov
lds
shl
adc
adc
in
pop
imul
pop
lcall
sbb
aad
fnstsw
sbb
add
shll
aas
jge
int3
mov
xchg
mov
jecxz
cmpb
pop
add
lret
jg
mov
aad
inc
jno
dec
or
mov
push
add
les
jb
mov
inc
push
pop
mov
insb
xlat
sbb
ret
or
mov
and
jmp
inc
scas
lods
sbb
dec
sarb
push
push
dec
pop
addl
in
dec
cmp
rcrb
pushf
xlat
push
call
mov
fstpt
jo
shrl
cmp
pop
dec
inc
inc
jmp
sbb
jno
sub
xlat
fildl
sub
mov
int
xchg
jb
cwtl
lahf
mov
lcall
push
in
and
pop
outsl
pop
lret
pop
or
xchg
scas
lds
push
mov
mov
or
lods
aaa
stos
jne
pop
inc
push
jp
or
and
lods
xor
push
and
dec
out
xor
cmp
pop
add
sarl
popa
add
sub
loopne
add
sbb
adc
arpl
push
fcoms
aad
xor
pop
jmp
insb
inc
arpl
add
dec
dec
sub
push
sub
int
xlat
jg
lahf
cmc
hlt
outsb
aam
cmp
mov
inc
stos
and
pop
mov
rclb
or
in
out
xlat
cmp
imul
cmp
nop
lret
imul
or
movsb
dec
xchg
aas
pop
jge
mov
popf
std
jns
dec
add
scas
sub
dec
push
jp
and
test
pop
je
dec
roll
lahf
jecxz
loop
cmp
and
mov
push
xchg
dec
or
xor
xchg
push
repz
fcmovne
and
adc
ficoml
ret
pop
lret
push
xchg
jmp
mov
std
outsl
adc
mov
fstp
insb
dec
xor
cwtl
xor
int3
das
addr16
xor
xchg
push
cmp
xchg
push
sahf
jae
mov
dec
xor
push
push
mov
inc
scas
cmp
lea
pop
push
in
xor
push
mov
mov
mov
lods
pop
add
cmp
andl
jae
sub
imul
xor
test
stos
add
in
cmp
sahf
popa
xchg
push
scas
push
sarl
xchg
add
ss
loop
cltd
push
and
adc
inc
xor
xchg
or
hlt
adc
rclb
sub
lcall
sub
pop
sub
rol
sbb
int
sub
jmp
movsl
pop
sbb
mov
jne
push
fnstsw
xlat
mov
mov
sbb
mov
ret
orl
jnp
loopne
aad
cmp
sub
sbb
movsl
imul
mov
xor
adc
jb
imul
xchg
sbb
cwtl
mov
push
bound
mov
jbe
repnz
movsb
das
mov
insl
out
pusha
xor
jl
into
push
mov
dec
jp
xchg
enter
add
sbb
dec
sbb
dec
fistpl
xor
lcall
xchg
lock
shrl
aaa
sub
xchg
adc
lahf
movsl
jmp
rorl
pusha
out
push
inc
inc
dec
jns
cmp
sub
add
enter
xchg
mov
xchg
ret
fiaddl
sbb
daa
fmull
cmp
int
push
sub
jecxz
je
dec
mov
xor
aaa
or
fwait
cs
test
gs
mov
adc
or
xchg
jmp
bound
dec
shlb
cmp
fisttpll
xchg
arpl
enter
ds
or
lods
in
push
fstpl
lret
jmp
dec
jl
inc
sarb
push
add
xchg
insl
mov
mov
hlt
xchg
aas
inc
out
icebp
push
adc
loopne
push
and
push
idivb
and
repnz
icebp
lcall
push
or
outsb
imul
outsl
es
bound
rorb
pop
dec
cmpsl
popa
sbb
nop
adc
scas
lea
mov
fildl
stc
cmp
cld
icebp
or
dec
mov
cltd
mov
xchg
aas
push
shll
add
xor
mov
jmp
mov
aad
pop
iret
arpl
jb
mov
popa
mov
cwtl
sbb
xor
fwait
loop
movsl
cmp
fldt
loop
insb
leave
out
repnz
pop
stos
in
xchg
loopne
js
mov
cmp
outsb
and
je
test
pushf
into
adc
cvttps2pi
pop
jne
xchg
pusha
and
push
ds
stos
push
es
scas
mov
cmp
jg
into
or
sub
outsb
orb
and
mov
movsl
mov
pop
inc
push
pushf
in
add
shl
cmp
mov
cli
scas
ret
sarb
xchg
cwtl
cltd
or
inc
stos
scas
mov
xchg
pusha
lock
cltd
jecxz
xor
adc
movsb
jl
push
cli
fcomps
dec
clc
clc
and
ret
mov
inc
mov
cmp
sub
mov
in
mov
push
mov
out
jle
lret
push
or
mov
in
push
and
lea
test
mov
jl
adc
xchg
adc
adc
xor
movsl
add
xor
inc
mov
outsl
shll
cmp
cmp
test
or
dec
mov
or
leave
dec
push
stos
add
mov
cmc
jb
xor
pop
adc
aam
jo
lods
neg
in
xchg
imul
shll
jb
mov
ret
cwtl
and
fchs
ljmp
and
dec
es
pop
mov
leave
into
pop
push
bound
rolb
jle
mov
dec
adc
cmp
pop
lret
mov
lret
sub
bound
cmp
cli
or
call
rcrl
pop
dec
popa
pop
lds
scas
push
add
icebp
imulb
mov
mov
cmp
outsl
nop
test
and
mov
inc
xchg
mov
and
mov
sub
jge
fwait
push
test
cmp
inc
mov
adc
xchg
or
testb
xor
ret
adc
sbb
rcl
jno
lock
adc
sti
sbb
adc
adc
adc
inc
cmp
pop
or
ja
mov
out
ljmp
fs
fcomps
scas
stos
xor
and
int
fmulp
jb
fimuls
jmp
divb
xchg
aaa
fs
sub
mov
ret
adc
outsl
cmp
push
xchg
and
repz
fidivrs
mov
push
jno
or
dec
data16
cmp
xchg
xor
xor
push
dec
ds
stos
add
dec
fbstp
pop
in
das
mov
aas
mov
sbb
mov
adc
mov
in
sub
or
loop
mov
xchg
cmp
cmp
inc
data16
cmp
push
sbb
push
jp
jp
aam
sarl
xchg
adc
shlb
cmp
fstpt
xor
jmp
imul
or
mov
and
jnp
in
lret
mov
push
test
jge
es
or
xchg
ds
xchg
stc
inc
mov
clc
repz
pop
jge
clc
push
iret
rcl
push
ret
outsb
xchg
dec
xchg
inc
cmp
cwtl
mov
aaa
push
push
pop
nop
jle
mov
das
clc
loop
fldl
xor
xchg
jmp
add
fnstcw
sub
std
adc
ret
jg
mulb
hlt
xchg
dec
pop
mov
jns
pop
xor
or
test
mov
dec
or
int3
stc
or
fs
jne
int
jmp
jno
sub
adc
sti
add
push
sub
pop
repz
cmp
xor
ficomps
jg
sti
mov
outsb
dec
in
ret
push
push
mov
push
insb
adc
inc
mov
shlb
sbb
add
pop
add
pop
lcall
mov
std
xor
shr
hlt
hlt
das
mov
popa
test
add
fildll
inc
push
addr16
sbb
adc
sub
lahf
xor
aam
mov
pop
test
jg
decb
push
adc
add
pop
enter
shlb
je
roll
js
push
sub
dec
push
fstp
enter
pusha
cmpsl
mov
flds
negb
rcrl
inc
cmp
mov
ja
cmpsl
dec
es
pop
xlat
stos
sub
outsl
mov
in
movsl
jle
dec
std
sub
pushf
mov
mov
mov
fisttpl
xor
sarl
outsl
xchg
pop
imul
sub
cmpsb
lock
enter
pop
push
or
mov
pop
jae
jmp
test
ljmp
push
xor
sbb
mov
jo
and
dec
pop
int3
inc
fisttps
repz
lret
movsl
dec
lock
fwait
push
pusha
in
hlt
push
mov
mov
mov
je
loopne
push
mov
pop
add
rorl
pop
push
in
out
ss
stos
adc
outsl
fcompl
es
push
popf
add
loop
jbe
adc
jae
repnz
or
movsl
or
into
add
out
mov
push
and
shlb
push
std
pop
dec
push
notb
jmp
cli
sahf
mov
adc
cmp
mov
or
add
dec
jae
test
bound
xor
push
into
dec
mov
adc
dec
cmpsl
js
std
fstl
out
and
pop
xor
dec
cltd
add
lret
mov
add
shl
xchg
mov
movsb
shll
mov
adcl
ss
roll
es
xor
jl
inc
xor
lret
out
subl
aas
sub
loope
icebp
nop
sub
push
pop
inc
dec
inc
std
add
mov
mov
mov
fcmovnbe
aad
sub
pop
stos
dec
je
dec
jle
pop
fdivs
mov
push
in
andl
out
jmp
in
or
mov
mov
xchg
cmp
mul
test
fwait
sub
push
sub
jbe
inc
xlat
sbb
push
scas
popa
scas
je
shl
sbb
xchg
push
ret
das
arpl
push
mov
pushf
insb
mov
jb
and
mov
dec
shr
dec
out
dec
add
mov
xor
xchg
flds
push
mov
cs
iret
adc
jne
ds
int3
mov
insb
adc
fwait
mov
ss
mov
clc
gs
js
sub
cmp
iret
jns
cmp
in
sbb
imul
fldt
pop
jns
fdivrp
cmp
jle
or
push
and
push
push
cld
es
pushf
int3
dec
mov
mov
jns
daa
jne
shll
xor
iret
lock
mov
lods
cmc
jl
and
pop
cs
inc
lds
pop
push
pop
pop
add
lcall
cmc
pop
add
adc
mov
xchg
cmpsl
insb
in
mov
fldl
jae
fadd
sub
dec
roll
and
lret
clc
mov
lods
push
sub
push
jns
sbbb
pop
fcoms
or
cwtl
fidivs
cmpsl
mov
scas
or
sbb
outsb
jo
out
popl
mov
sbb
popf
jae
nop
lods
arpl
push
cmp
idivb
test
inc
faddl
adc
out
neg
pop
sti
cmp
das
push
std
adc
cmp
mov
push
pop
or
dec
pop
jo
in
mov
mov
cmp
mov
cmc
xor
inc
sahf
ret
scas
dec
aas
mov
add
call
jle
pop
pop
out
xchg
sti
sahf
xor
add
sbb
jne
ret
jo
xchg
inc
pushf
sub
lret
ja
dec
int
ret
lret
sub
jb
scas
outsl
jb
sbb
push
mov
lods
adc
jo
test
jle
jno
mov
sub
cmc
std
icebp
mov
push
ficompl
sarb
subb
les
call
iret
lds
nop
jl
xchg
jne
pop
pop
jae
cmpsb
xchg
leave
aas
jle
sub
dec
mov
sub
adc
fbstp
aam
fisttpl
mov
fs
cmp
imul
cmp
les
xor
sbb
jns
in
adc
test
xor
dec
jno
fidivl
sbb
out
mov
cmp
das
dec
mov
pushf
lea
enter
je
and
add
mov
add
outsl
and
dec
push
xchg
pushf
or
mov
test
add
pop
mov
mov
stc
push
xor
rcrb
mov
push
testb
jge
push
xor
mov
bound
lcall
daa
sbb
dec
push
pushf
mov
mov
mov
ja
xor
pop
icebp
sbb
gs
jnp
pusha
jecxz
inc
xchg
adc
jmp
fcoml
out
mov
sbb
les
push
das
inc
add
mov
sub
repnz
jp
sarb
sbb
pop
dec
dec
cmpsb
xchg
mov
lods
push
adc
and
mov
loope
int
mov
mov
or
arpl
pusha
jp
and
mov
xor
mov
mov
sbb
mov
mulb
mov
pop
pop
adc
mov
jb
and
xchg
lods
sarb
es
arpl
daa
sahf
sahf
mov
jb
out
mov
lods
inc
test
popa
sub
in
jecxz
mov
stos
inc
outsl
mov
fisubl
mov
jge
les
in
inc
test
bound
inc
sbb
dec
and
fildl
imul
push
and
movsl
loop
xchg
rorb
ret
scas
movsb
test
mov
pushf
mov
stos
sahf
mov
lret
mov
and
mov
xchg
test
loop
push
adc
cmp
mov
out
enter
sbb
xchg
xchg
cmpsb
pushf
mov
xor
pop
mov
jl
mov
imul
lahf
push
jmp
ss
stc
cs
aam
push
sti
xchg
call
dec
gs
pop
fistl
inc
pop
js
fdiv
mov
inc
ret
mov
stos
cmpb
cltd
scas
pop
mov
stos
out
mov
notl
loop
mov
dec
push
xchg
mov
push
mov
jno
sbb
das
fmul
addr16
lret
hlt
inc
test
mov
sbb
popf
dec
icebp
xor
and
xor
pop
sti
push
insb
mov
xor
jne
ljmp
cmpsl
fwait
mov
mov
sub
test
xchg
stos
ss
js
lods
cmp
mov
subb
xchg
sub
push
nop
fildl
dec
push
inc
fisubl
pop
in
insl
scas
pop
xchg
mov
loopne
or
dec
xchg
jge
mov
xchg
mov
add
cmp
dec
push
pop
test
xchg
xchg
xor
jo
dec
xor
or
inc
repz
outsl
xor
or
pop
cmpsl
sbb
cmpsl
mov
pop
sub
lds
daa
inc
sub
mov
push
lock
or
mov
sarb
sub
pop
out
bswap
mov
sahf
inc
cmp
out
ret
or
outsl
pop
test
mov
xor
jge
push
lods
push
mov
fsubrl
test
pusha
es
scas
ror
or
ljmp
sub
jecxz
mov
add
and
mov
test
push
push
mov
movsl
test
mov
ret
loopne
fimuls
inc
mov
lcall
cmp
adc
nop
mov
out
fnstcw
mov
repnz
inc
xchg
jl
sub
cltd
jno
inc
rcrl
jo
and
std
add
adc
popa
sarb
push
or
or
sbb
mov
ret
scas
jmp
cmp
inc
cltd
fildll
aas
out
xchg
ret
aaa
int
sub
or
pop
cmp
pop
ss
sub
enter
pushf
jne
test
fimuls
xor
push
cld
hlt
mov
ss
mov
dec
and
jecxz
jns
push
xchg
gs
ljmp
aam
shlb
xor
push
loop
test
movsl
in
mov
arpl
mov
fisttpll
mov
mov
xor
pop
mov
cmp
add
sub
pushl
xchg
movsb
sar
pop
mov
mov
gs
aam
push
inc
adc
mov
mov
mov
lea
cltd
and
adc
test
inc
xor
pop
jecxz
cmc
js
pop
fwait
add
mov
inc
lret
dec
out
hlt
push
lock
pop
mov
in
xor
mov
ljmp
nop
inc
push
shll
mov
test
lea
out
loop
idivl
aad
sbb
mov
sub
stos
push
sahf
insb
mov
sub
insl
pop
push
pop
ds
ja
mov
in
gs
fcomip
adc
jae
cld
stos
mov
mov
jnp
mov
fdivrs
int3
ud2
dec
fbld
jo
scas
mov
dec
pop
inc
mov
mov
xchg
push
jg
pop
lahf
inc
mov
push
mov
lret
mov
adc
stc
xor
push
imul
popa
sti
cmc
mov
call
sub
sub
mov
cmpsb
sbb
and
iret
mov
fcmovnb
cmp
in
rorb
ljmp
addb
inc
mov
inc
xchg
popf
pop
out
sbb
dec
fisubl
faddp
leave
hlt
mov
hlt
fbld
or
cmpsb
movsl
daa
fmuls
pop
hlt
dec
push
mov
push
rolb
add
cs
or
sbb
leave
adc
lock
inc
push
mov
jg
inc
mov
cmp
inc
pushf
int3
add
or
mov
adc
xchg
hlt
mov
adc
xor
mov
add
aam
movsl
outsb
cmpl
mov
mov
lock
les
push
repz
loope
fnstcw
jecxz
into
out
mov
nop
fwait
pop
fisubl
pop
xor
enter
cmp
loope
dec
out
sbb
push
lods
xchg
ficoml
cmp
int
rorl
adc
push
test
dec
js
scas
lock
xchg
aas
cld
sbb
xlat
movsl
cltd
push
or
jmp
add
mov
cmp
imul
push
mov
mov
sarl
repz
loop
jns
xor
cwtl
jne
xor
pop
into
notb
jge
test
inc
jo
xchg
outsl
fcmove
ljmp
or
jbe
jle
mov
cmp
in
xchg
je
dec
loopne
adc
in
sbb
sub
pop
sti
mov
outsb
fstpt
loopne
stc
pavgb
push
mov
sbb
sub
mov
shrb
jae
jb
mov
and
sbb
bound
pushf
cmc
jmp
pop
mov
rcll
outsb
push
sbb
sbb
clc
std
and
mov
adc
xor
fwait
push
rcll
mov
pop
sbb
lret
xchg
mov
or
adc
into
mov
rcr
repnz
pop
adc
movsb
insb
cmpl
dec
sub
mov
jecxz
sub
push
pushf
sbb
adc
add
pop
sti
sub
sahf
mov
insb
mov
fwait
dec
mov
arpl
inc
int
jecxz
sbb
pop
and
xlat
dec
movsb
ret
pop
mov
xchg
jae
or
outsl
int
mov
dec
xor
sbb
into
add
hlt
sub
inc
jae
mov
jne
loope
or
rorb
out
and
fistpll
fucomp
int3
add
adc
in
pop
cmp
movsl
push
add
mov
mov
popf
jns
outsb
or
xchg
sub
decl
aad
fstpl
jno
jle
cmp
push
aaa
push
push
xchg
addr16
mov
imul
andl
aaa
sbb
fs
push
or
icebp
mov
inc
lcall
mov
in
movsl
in
adc
ficomps
xchg
rorl
aas
and
or
xor
jnp
cmpsl
and
or
jg
or
fcoml
shlb
pusha
flds
iret
add
push
das
rorl
test
in
or
xchg
mov
mov
sub
push
shrl
dec
mov
jns
pusha
dec
sarl
jmp
sahf
idiv
idivl
sti
dec
lcall
push
jecxz
jge
sbb
jmp
fmull
fisubrl
test
push
daa
icebp
and
aad
dec
repz
test
inc
inc
fstl
lds
pop
roll
sbbl
sti
mov
jl
jg
xor
jno
add
ds
gs
or
movsb
pop
mov
mov
cs
sahf
rolb
xchg
repz
outsw
orb
enter
in
fnstenv
xor
jmp
dec
js
outsl
push
add
push
addr16
mov
mov
pop
rorb
adc
jbe
movsl
xor
pop
mov
push
sbb
pop
adc
inc
fdivr
cmp
inc
xor
cltd
mov
in
lods
add
pop
pop
push
int
call
fistpll
loope
sbb
pop
movsb
test
call
fsubrp
rclb
das
int3
add
xor
addl
sub
jecxz
push
mov
mov
in
xchg
int3
or
mov
cmp
gs
or
pop
sbb
and
call
push
out
cld
iret
sbb
out
and
jle
jae
and
cmp
das
mov
inc
out
das
movsl
add
xchg
dec
repnz
or
clc
xor
xchg
pop
fstpl
aas
pop
push
sbb
insl
add
mov
and
xor
gs
push
enter
lock
sbb
fldl
add
mov
jns
pop
popf
pop
pop
inc
cmp
jp
repz
push
les
in
fstps
bound
test
roll
popf
sbb
test
cmpsb
test
pop
mov
in
xchg
pop
jo
loop
pusha
std
dec
push
jne
fdivl
stos
add
sbb
dec
negb
mov
add
jbe
pop
mov
jl
dec
pop
dec
test
xchg
add
mov
adc
inc
inc
xorl
xchg
emms
dec
pop
mov
push
stos
push
inc
lds
jle
aam
add
jne
nop
sbb
pop
pop
mov
dec
pop
fbstp
pop
cmp
dec
mov
dec
lea
call
or
out
mov
cmc
sahf
incl
jne
out
out
popa
xchg
test
or
loopne
es
inc
inc
cmp
imul
push
dec
mov
cmp
inc
add
push
nop
cmp
mov
pushl
sbb
cmp
lea
inc
dec
dec
dec
in
push
adc
adc
in
jg
sbb
in
cwtl
xor
push
arpl
push
xchg
jmp
lcall
ja
sbb
fsubs
ja
clc
push
xchg
ffreep
sub
shll
sbb
and
popf
mov
pop
jnp
push
pop
int3
xchg
push
inc
in
xor
es
adc
imul
push
leave
add
js
in
and
add
pushf
imul
adc
out
cwtl
sbb
js
pushf
sbb
sbb
jecxz
sub
mov
mov
gs
add
add
arpl
jmp
add
adc
roll
push
xchg
xlat
sbb
js
ja
test
push
and
daa
mov
popf
repz
dec
mov
ljmp
scas
pop
lock
push
jmp
xchg
pop
sub
aad
mov
adc
mov
mov
loopne
rcr
fstl
push
mov
popf
ljmp
shlb
and
jae
jno
xor
test
jae
jnp
jno
push
je
inc
arpl
inc
pop
add
pop
push
dec
fsubrl
sub
icebp
and
xchg
jp
pop
negb
stos
comiss
mov
test
stos
adc
lock
push
mov
lret
xor
jmp
and
mov
mov
imul
test
adc
ljmp
fstps
inc
fnstsw
push
jne
or
in
jbe
dec
pop
mov
push
mov
fnstsw
sbb
mul
out
inc
leave
jg
jecxz
loopne
pop
jmp
add
sti
mov
xchg
dec
sub
gs
dec
push
repnz
or
cld
call
ss
dec
xor
adc
popa
jae
push
addl
cmp
sub
mov
das
into
daa
xor
push
jp
push
xor
push
stos
mov
fnsave
in
push
inc
mov
popf
clc
pop
inc
xchg
std
popa
xchg
neg
pop
pusha
filds
push
je
lcall
pop
sahf
sub
dec
mov
call
push
ror
or
in
push
dec
xchg
jle
hlt
inc
jno
jbe
xchg
cs
hlt
lahf
xchg
dec
out
inc
mov
push
inc
inc
xchg
mov
fsubr
jp
scas
ret
jle
dec
orl
jbe
mov
jecxz
out
outsl
inc
cmp
lcall
ret
outsb
jg,pt
sub
mov
and
sbb
cwtl
inc
xchg
shl
aas
push
ret
dec
int3
outsl
popa
jecxz
mov
popf
sub
incb
loop
adc
leave
adc
popf
scas
lds
sub
inc
nop
add
andl
mov
xchg
add
inc
add
xor
sete
sbb
iret
push
and
fnstsw
sbbb
stos
gs
lods
inc
dec
mov
clc
addr16
insl
mov
icebp
mov
mov
test
mov
es
xchg
das
cmp
cmp
dec
loop
jl
adc
pop
ret
inc
xchg
fcmovu
imul
mov
call
jg
cmc
test
adc
pop
push
mov
into
jno
mov
cwtl
adc
and
xchg
iret
cld
dec
insb
mov
movsl
pop
xor
jne
lock
rol
and
loop
jp
cmp
mov
bound
jl
outsb
fsts
push
test
orb
dec
inc
cmpsl
and
out
push
and
jp
in
icebp
insl
xchg
mov
add
xlat
je
fimull
adc
aaa
cmp
out
jmp
mov
push
loope
adc
push
cwtl
stc
mov
xchg
mov
pop
int
pop
and
in
scas
push
imul
sbb
xlat
cmp
gs
sub
adc
sti
rorl
lods
les
int3
or
or
fimuls
mov
dec
fisttps
mov
test
and
and
push
push
popf
test
sub
jmp
loope
push
out
cmp
mov
test
xchg
arpl
aas
popa
lret
adc
dec
sahf
mov
cwtl
pop
xor
mov
jbe
in
loopne
and
int
cmp
jl
xchg
jnp
inc
lock
mov
or
dec
or
les
sbb
lds
mov
pop
bound
loop
sahf
sub
leave
adc
cmp
lahf
push
outsb
mov
push
nop
cmc
xchg
jl
add
test
add
outsb
mov
cs
jecxz
cwtl
sbb
xchg
in
mov
es
jno
movsl
sti
add
imull
rcl
mov
sbb
mov
mov
sbb
cmp
xchg
inc
or
fwait
iret
imul
rcrb
mov
stos
mov
and
cwtl
rcr
popf
mov
mov
mov
pop
ret
adc
scas
pop
cmc
popa
cmp
cmp
stos
dec
and
call
mov
jo,pt
jo
adc
pop
leave
into
bound
jae
out
in
or
stc
scas
mov
mov
add
int3
lahf
outsl
mov
in
pop
sahf
rcll
xchg
out
das
dec
inc
and
cli
mov
add
push
ljmp
or
inc
push
xor
cmpsb
xor
or
and
add
cmp
sbb
mov
push
jl
push
idivb
loope
xor
mov
lds
in
mov
jp
and
aas
or
leave
cwtl
movsb
sahf
xor
popa
enter
add
arpl
jnp
cmp
add
aas
push
fildll
dec
push
fidivl
add
push
fisttpl
dec
jle
push
lods
xor
pop
mov
inc
mov
mov
push
adcb
jmp
inc
repnz
test
js
lea
pop
hlt
aas
jle
leave
call
add
insl
add
push
xor
push
daa
insb
and
cmp
testb
sbb
mov
insl
xlat
cwtl
fcompl
jmp
sti
arpl
sahf
mov
test
test
jge
in
cmp
jge
xorb
push
cmpsl
out
xchg
mov
in
aas
xchg
cwtl
test
cltd
stc
les
add
dec
cwtl
inc
cs
stos
or
sbb
in
das
loope
cs
mov
and
loope
shlb
out
and
inc
xchg
ss
out
aad
inc
push
dec
lods
and
fcmovne
std
push
outsl
mov
out
js
out
repnz
pop
add
jns
cmpb
ds
push
sub
subb
fcoms
mov
bound
dec
push
insl
add
fisttpl
xchg
jne
gs
jge
lcall
test
sbb
push
jo
add
sub
lea
push
hlt
hlt
push
pop
mov
add
jno
jl
pop
sbb
sbb
mov
mov
cmpsl
add
pop
cmp
dec
daa
inc
jbe
dec
sub
cmc
inc
iret
imul
inc
xchg
xchg
jg
data16
ret
les
pop
loope
es
pop
sub
lock
mul
insl
popa
or
popl
push
xchg
out
testb
jbe
ja
into
jp
mov
sbb
dec
arpl
mov
mov
adc
cld
ret
outsb
adc
jecxz
mov
dec
sbb
pop
and
je
mov
aad
jnp
push
lock
mov
shr
repz
or
and
cmp
jg
std
xor
jbe
sbb
ja
loopne
loope
pop
and
and
cltd
in
dec
mov
aam
push
jo
sub
lahf
xor
fisubs
nop
clc
leave
xor
push
repz
sar
mov
mov
pop
iret
rorl
sbb
popa
les
das
jo
movsl
adc
arpl
fcmovb
mov
cmp
cmpsb
jge
jns
adc
stos
call
sub
in
ret
xchg
jge
arpl
loop,pn
xlat
or
inc
ss
mov
stc
push
sub
jecxz
mov
push
les
sub
in
jmp
xchg
push
push
adc
inc
faddl
mov
xor
cs
cmp
int3
out
push
inc
xchg
adc
stos
pop
pushf
pop
sbb
push
lea
test
cld
dec
or
pop
sar
jns
int
mov
pop
cmp
sub
lahf
inc
repz
lret
and
pusha
fsubs
cmp
mov
dec
sahf
lea
pop
notb
dec
scas
pop
fisttpll
xor
sub
stos
add
or
push
adc
rcrb
lret
jae
lcall
outsl
adc
test
add
lea
test
sbb
out
aas
ret
sbbb
mov
mov
xchg
mov
cmp
add
pop
addr16
es
mov
cmp
mov
or
mov
cmp
and
aaa
or
xchg
xchg
fs
out
mov
push
push
fldenv
jns
stos
enter
jbe
scas
cmp
xorl
push
or
dec
scas
stos
cmp
mov
icebp
or
xor
dec
cmp
push
loope
out
push
add
pop
es
scas
movsb
cmp
in
xor
inc
mov
pop
movsb
and
push
inc
jb
xchg
mov
mov
sub
mov
pop
rcrl
push
scas
inc
dec
mov
adcl
dec
scas
popa
ret
roll
push
or
inc
stos
xor
adc
shll
mov
jp
out
dec
in
inc
or
lods
push
dec
ror
sbb
push
xorb
push
leave
push
out
adc
inc
inc
mov
jno
xor
push
mov
mov
pop
scas
cli
and
cmp
push
pop
and
lea
jge
es
stos
aaa
in
push
mov
subb
push
dec
cmpsb
popf
push
test
push
shl
divl
pop
jmp
out
cmp
push
jb
xor
push
cmpsb
arpl
push
jmp
push
or
mov
mov
loope
les
mov
repz
dec
into
cmp
std
insb
out
out
inc
test
sti
mov
out
sti
jp
outsl
test
or
pop
inc
dec
call
add
and
int
pushf
jne
repnz
or
push
rcrb
or
int3
dec
jle
mov
jmp
push
lcall
and
inc
lret
mov
or
mov
xor
test
adc
subb
mov
imul
xor
mov
mov
pushf
ret
pop
xchg
and
pop
scas
ret
mov
dec
sbb
jge
cld
adc
mov
rolb
stc
and
repnz
add
pop
out
sbb
sbb
cmp
xor
jmp
stos
js
vcvtpd2dq
jmp
cmpsb
or
mov
das
dec
mov
sbb
mov
and
sub
adc
add
mov
das
fsubs
cmp
jmp
fisubl
lds
cld
lods
pop
aas
push
sub
lahf
push
or
push
rol
and
push
and
jle
aad
imul
xor
add
xchg
adc
pop
adc
sbb
cmp
lods
mov
add
cs
pop
cmp
sbb
jp
icebp
push
mov
mov
pusha
mov
lock
mov
or
and
mov
outsl
jns
push
frstor
push
bound
dec
add
jbe
into
sub
cld
jbe
xchg
lret
adc
int3
fwait
sbb
inc
mov
cmp
and
repnz
aad
mov
stc
andl
adc
push
adc
ret
sbbl
adc
dec
cld
xchg
xor
cli
sahf
push
fstpt
and
scas
sbb
leave
sub
pusha
lret
and
push
cli
push
push
xor
testl
rorb
and
pushf
stos
cwtl
jne
fisubl
je
nopl
cld
cltd
int
mov
xor
iret
dec
loopne
aad
or
nop
orb
stos
jne
sub
pop
adc
aaa
ds
gs
fistl
std
xchg
int
inc
pop
daa
push
xchg
jb
jb
into
sbb
mov
push
sbb
js
aad
jmp
lahf
lahf
lret
mov
fwait
sbb
ret
push
adc
scas
add
movsl
in
cmpsb
roll
data16
pushf
push
xchg
sbb
mov
adc
xchg
and
pop
sbb
jne
mov
or
jmp
or
add
jnp
mov
fbld
lods
dec
mov
xchg
ss
imul
or
leave
cmp
inc
sub
enter
sbb
stos
mov
cwtl
cmpl
test
pushf
scas
pop
push
mov
insb
bound
mov
std
xchg
cmpsl
jo
xchg
pop
push
mov
out
mov
sub
sub
xor
aad
in
loope
lods
addr16
fistpl
mov
imul
or
into
push
mov
mov
fstpl
pusha
popf
adc
add
xor
push
push
xor
out
mov
and
icebp
repnz
das
leave
or
and
data16
mov
lcall
inc
push
xchg
imul
xchg
jle
aam
sub
loopne
stc
mov
mov
andl
int
cmp
mov
movsb
cmp
aad
loopne
xchg
into
xor
lcall
inc
cmp
imul
push
xlat
xchg
adc
enter
nop
pushf
andl
or
pop
dec
mov
je
movsb
adc
push
jne
inc
insb
pop
mov
outsl
ss
popf
sbb
mov
pop
fnstenvs
adc
sbb
js
add
push
and
push
stos
adcl
jmp
or
cltd
fisubrs
cltd
sub
scas
and
popa
push
sub
scas
mov
jmp
mov
push
out
in
push
adc
lods
cmp
fists
lcall
and
icebp
imul
pop
call
cli
sbb
or
data16
and
divb
inc
mov
je
outsb
loopne
fstl
pop
popa
insl
mov
jmp
fwait
bound
nop
ja
xchg
ja
add
dec
sub
adc
push
pushf
inc
popa
inc
sbb
call
pop
sti
or
sbb
iret
mov
ret
pop
xchg
out
loopne
inc
jae
adc
or
imul
int
int
dec
das
push
test
cmp
mov
mov
arpl
adc
notb
jl
rcr
push
scas
and
scas
cwtl
les
mov
sti
ss
bswap
and
push
sub
xlat
adc
inc
loopne
and
or
push
sbb
popf
cmp
mov
stc
mov
mov
shll
test
xor
cmc
pushl
iret
push
add
mov
loop
add
xchg
mov
out
clc
lret
add
mov
andl
mov
aam
push
mov
sub
xor
js
sub
lcall
push
bound
loopne
jl
xchg
and
iret
xchg
pop
fdivrs
inc
adc
jp
stos
adc
and
sbb
jle
mov
mov
and
pop
or
adc
adc
sbb
sub
and
ror
inc
pop
sub
mov
cmp
cmc
jne
jb
pushf
jae
pop
mov
jge
add
xchg
repnz
out
pop
dec
hlt
inc
and
pusha
cmp
inc
xlat
inc
pusha
xchg
sbb
and
xchg
call
push
out
lock
mov
jle
pop
or
jmp
out
imul
xchg
jg
dec
aad
push
fidivrs
out
loope
movsl
xor
pushf
hlt
push
pop
inc
mov
sub
pop
or
lods
sub
stos
mov
imulb
aad
leave
pop
nop
sub
vmaxpd
xchg
xchg
dec
mov
sbbl
fnstcw
aad
jmp
push
sbbb
sub
mov
mov
inc
push
out
adc
xlat
pop
cmpsl
xor
cmp
les
icebp
js
cmp
or
push
bound
dec
shl
lahf
arpl
int
or
adc
pop
jne
or
stos
push
es
test
in
inc
push
adc
rcll
push
test
pop
sub
inc
sub
pop
cmp
stos
inc
jbe
add
cmpsb
fwait
xlat
lods
pop
jmp
ret
jb
pop
sub
pop
sub
and
les
dec
adc
xor
sbb
pop
fsubrs
pusha
jl
pop
lods
cltd
push
push
xchg
mov
and
and
call
ja
add
fcmovne
xchg
out
add
pop
xor
jb
sbb
sub
sti
adc
inc
adc
pop
addl
jb
mov
mov
les
push
adc
insl
sbb
sar
mov
repnz
lods
imul
dec
out
out
scas
sub
add
das
lcall
leave
adc
xchg
push
out
jno
dec
add
dec
sub
push
jecxz
in
xor
mov
jmp
andb
push
les
les
xor
jle
add
shrl
cmp
xor
cmp
pusha
and
mov
mov
fwait
mov
push
sbb
add
jnp
cmpsb
xchg
sub
pop
shlb
adc
nop
jl
pop
adc
fstpt
movsb
dec
imul
add
inc
adc
out
test
adc
inc
out
push
shl
pop
mov
mov
xchg
test
divb
mov
adc
pop
add
mov
cmp
lcall
movsb
push
jne
pop
gs
ret
sub
fsqrt
sti
aaa
xchg
adc
iret
mov
fisttpl
xchg
lahf
test
hlt
mov
inc
popf
dec
loope
scas
sbbl
xchg
lret
pop
sub
xlat
jge
xor
popa
pop
out
shrl
out
mov
in
repz
mov
and
add
fiadds
inc
xchg
or
dec
and
sbb
cmp
inc
cmp
mov
sub
cmpb
ret
fdivrl
and
mov
into
lock
inc
cmp
aaa
icebp
jmp
fldpi
ja
cmp
test
adc
cltd
addr16
fninit
aad
sub
xor
test
fs
mov
mov
inc
sub
xor
or
jl
xor
jg
add
out
aaa
push
sub
inc
and
jb
lds
add
and
cli
mov
and
imul
or
and
xchg
lret
sbb
jg
jno
or
mov
or
push
mov
popf
in
divl
fistpl
or
arpl
or
pcmpeqd
fisttpll
jmp
mov
jl,pt
dec
fstpl
js
push
popa
cld
push
loopne
mov
es
scas
add
mov
push
repz
sub
subb
int3
xchg
sbb
gs
jmp
data16
push
aad
pop
jnp
xor
sbbb
lcall
les
das
push
mov
mov
inc
icebp
sbb
jmp
mov
sub
sub
sahf
lret
push
xchg
or
insb
adc
lods
int3
cmc
and
mov
inc
xchg
cmp
mov
mov
sbb
int3
and
icebp
sub
stos
push
mov
outsl
inc
mov
je
andb
push
pusha
icebp
or
ficompl
jecxz
cmp
jle
jo
jnp
scas
jbe
icebp
insb
or
insl
sbb
mov
sub
sub
mov
enter
jg
loope
push
add
cmp
mov
cmpsl
push
sub
pop
sub
cld
xor
and
dec
push
insb
aaa
and
jl
lods
int
loop
int3
in
rorl
cmpsb
push
pop
ds
fld
pop
jae
sbb
or
loope
dec
sarl
addr16
movsl
add
and
cmp
sarb
xor
std
dec
inc
mov
cmp
mov
adc
inc
insl
aad
test
pusha
aaa
xor
sbb
mov
in
cltd
sbb
or
lods
pop
lret
xchg
sub
inc
adc
pop
lahf
in
lret
sbb
push
xor
outsb
sub
mov
adc
sbb
test
jg
mov
or
sub
push
std
and
mov
jb
cmp
mov
mov
cmpsl
popf
mov
push
push
mov
call
aam
lahf
push
lock
imul
and
std
imul
mov
ljmp
xlat
data16
nop
xlat
lea
arpl
outsl
inc
mov
cmpsl
sub
imulb
or
mul
int3
add
repnz
add
push
xor
mov
mov
sbb
mov
mov
into
iret
cwtl
push
hlt
fisttpl
and
into
sbb
sahf
push
fnstsw
dec
jmp
dec
and
arpl
xor
lods
scas
mov
rcll
nop
stos
inc
mov
repz
iret
sbb
fsubs
or
jge
mov
sarl
int3
xchg
jae
mov
or
sbbb
inc
ss
sbb
les
inc
dec
dec
into
dec
leave
fnstsw
out
fiaddl
pusha
jg
pop
dec
adc
cmp
push
jl
cmp
mov
dec
leave
dec
pop
xor
cmpsl
adc
cmp
and
push
ret
test
popa
out
outsb
movsb
push
jmp
mov
out
mov
testb
xor
nop
lahf
mov
jae
rcrb
lods
or
ucomiss
cmp
push
jge
pop
mov
push
icebp
mov
dec
xchg
lcall
lods
cmp
sub
popa
adc
test
into
xlat
mov
ret
cmpsl
push
pop
pop
and
arpl
jge
cmp
lods
and
pop
xchg
popa
push
jnp
dec
xor
dec
into
inc
in
cltd
mov
hlt
test
sub
xchg
jecxz
in
imul
iret
pop
and
enter
xchg
mov
and
lods
cmp
shlb
jge
adc
movsb
ss
mov
sbb
push
mov
sar
fwait
cld
or
sar
dec
fsubl
inc
inc
daa
jp
jns
leave
test
jg
or
out
push
cld
ret
mov
inc
ds
and
jmp
cmp
mov
cs
imul
daa
add
adc
xor
int3
movd
call
dec
inc
imul
nop
cmc
push
mov
xor
sbb
loope
in
mov
cmp
scas
lcall
sub
xchg
mov
lock
shrl
rol
fmuls
pop
ret
cmpsl
sbb
out
dec
repnz
jmp
aas
mov
mov
adc
es
and
loope
mov
repz
sub
out
dec
fwait
out
neg
test
lds
xor
mov
add
xor
jnp
sub
and
xchg
outsl
cwtl
fiaddl
mov
cwtl
insl
xlat
sbb
in
nop
pusha
xchg
and
push
into
dec
xorb
and
add
mov
dec
jle
clc
push
adc
shll
inc
jmp
xor
add
loop
js
and
push
adcl
xor
push
dec
cmp
jae
push
ljmp
cmc
or
sarl
leave
fs
sbb
cmp
ss
out
loopne
mov
mov
mov
or
es
js
push
je
out
mov
add
jnp
inc
sub
mov
mov
or
int3
fsubr
in
out
mov
pop
mov
and
sbb
jnp
fadds
cmpsl
inc
xor
add
or
sahf
jno
hlt
loop
mov
clc
sahf
lods
xor
pop
mov
mov
add
sbb
mov
aas
sbb
add
lret
in
cmp
push
aas
xor
out
inc
loopne
leave
dec
jne
sbb
rolb
cmp
inc
jge
ljmp
xor
jnp
aaa
jp
dec
pop
cld
mov
pop
mov
rolb
inc
hlt
jo
mov
xchg
pop
cs
jmp
addr16
adc
test
outsb
in
sub
in
dec
icebp
stc
xchg
sbb
inc
pop
jmp
add
dec
add
lods
mov
insb
loope
cmp
xchg
or
in
daa
dec
add
cmp
jo
cmp
jge
mov
outsl
and
repz
repnz
iret
jae
dec
outsl
push
out
lock
push
stos
fs
lock
cmp
adc
adc
mov
push
dec
scas
mov
inc
and
dec
sbb
mov
cmp
pushf
dec
mov
jbe
sub
aad
xchg
mov
pop
ret
jp
push
arpl
std
xchg
xchg
jp
les
les
push
imul
add
xor
mov
dec
mov
cmpl
cmp
xchg
jnp
stos
in
jae
movsb
rorb
repnz
adc
pop
or
repnz
jnp
mov
cmp
jns
cmp
jg
lock
mov
fisttpl
jae
jnp
stos
lret
push
mov
sub
cmp
cmp
push
cmp
and
ret
out
test
push
cmp
xchg
and
add
stos
ret
lea
inc
fsubrl
pop
stc
mov
jae
shl
lods
imul
sub
jnp
daa
aas
mov
loop
xchg
or
mov
add
in
stc
cltd
pop
xchg
push
inc
orps
cmpsl
xor
movsl
jg
fimull
repnz
jg
lea
cmp
loopne
pop
dec
push
aam
popa
xlat
in
jp
sbbl
stc
xor
mov
loop
mov
jp
mov
sahf
push
rol
mov
cmp
mov
out
decb
pop
pop
cmp
jp
push
mov
movsb
cmpl
icebp
add
testb
sub
xlat
xchg
movsl
popf
jp
pop
jbe
cmp
mov
cmp
sub
mov
mov
call
ret
daa
aas
and
nop
insb
fisttpl
mov
mov
adc
rclb
gs
rorb
sub
mov
jae
inc
aas
jbe
dec
xor
cmc
js
mov
insb
and
repz
sub
jmp
scas
clc
jg
dec
jb
dec
sbb
dec
jbe
enter
mov
pop
add
cld
inc
insb
sbb
jnp
je
in
cmp
insl
and
push
pop
loopne
jo
mov
mov
mov
pop
repz
cltd
gs
cmp
push
int3
notb
ds
or
scas
xor
cld
js
jge
ret
mov
mov
push
stos
icebp
aad
and
fidivrs
dec
movsl
and
adc
ja
daa
push
rolb
aaa
mov
fldt
push
stos
cmpl
dec
movsl
jae
int3
sbb
or
push
mov
lock
popf
test
insl
adc
mov
in
add
xorl
hlt
xchg
xchg
pop
cwtl
and
fwait
cwtl
inc
dec
xchg
mov
push
and
popa
cli
cmpsl
and
or
sub
shlb
inc
shrl
pop
pop
sub
xor
and
outsl
or
push
enter
mov
rorl
pop
mov
sbb
mov
sub
stos
sbb
dec
pop
popf
cld
popa
ret
or
sbb
jge
sbb
or
inc
mov
xchg
sbbb
shll
scas
mov
jmp
sub
xchg
pop
xor
int3
pop
sub
push
nop
test
adc
mov
decl
repz
pop
mov
in
loop
jo
jp
ret
push
and
dec
aam
mov
int
and
fsubl
into
inc
jo
dec
repz
rol
jbe
jns
fdivs
inc
pop
mov
mov
push
xor
out
lods
in
sarb
clc
int3
scas
fnstsw
les
sbb
clc
inc
cmpl
mov
push
inc
xor
sbb
cmp
push
pushf
inc
pop
adc
push
leave
sti
jg
enter
rcll
or
scas
xchg
imul
adc
xchg
xlat
add
add
pop
xor
inc
mov
cmp
rol
push
and
dec
stos
out
insb
push
cs
add
mov
and
std
sbb
pop
cld
lcall
jp
fmul
fldenv
and
xchg
lret
into
mov
inc
loop
mov
mov
cmovno
mov
sub
stos
aam
pop
xchg
sahf
mov
or
sahf
jb
out
pop
subl
inc
and
inc
ljmp
mov
hlt
mull
jmp
cwtl
sub
movsl
inc
arpl
pop
in
scas
inc
sbb
push
cmp
push
mov
nop
test
inc
mov
adc
cs
jnp
pop
pop
into
sbb
fidivrl
jp
stos
dec
push
mov
pop
jmp
cmp
adc
std
call
cwtl
das
pop
xchg
adc
js
jle
mov
nop
inc
btr
push
mov
push
xchg
fbstp
pop
add
loop
xchg
adc
jmp
test
stc
testb
stos
pop
mov
fidivrs
fcmovu
push
sbb
outsb
sbb
mov
addr16
int
fiaddl
mov
cli
sub
bound
add
aad
adc
or
pop
xor
sbb
mov
leave
mov
movsb
fmuls
repnz
dec
aas
xor
inc
subb
jne
pushf
push
push
cmp
hlt
icebp
stos
sub
test
inc
addb
enter
jae
pop
add
pushf
imul
adc
adc
lret
pushf
fs
mov
add
cmp
std
out
test
hlt
outsb
sbb
dec
mov
adc
out
sub
aad
sarl
mov
mov
push
outsb
jnp
arpl
test
jae
sbb
adc
dec
xor
jmp
out
imul
push
imul
xor
jge
dec
scas
leave
sbb
add
shll
push
pop
push
xor
test
inc
ret
cmpsl
push
aad
mov
xor
fisubrs
les
gs
mov
insb
push
sti
loopne
dec
mov
call
jno
test
push
mov
jge
pop
inc
aad
pushf
mov
pop
popa
dec
icebp
mov
enter
stos
es
loopne
dec
push
jg
hlt
int
mov
jecxz
pushl
lahf
and
mov
daa
pop
adc
cmpsl
popf
and
mov
mov
pop
cld
jno
mov
cmpsl
cli
xchg
jne
jnp
mov
jge
test
push
daa
imul
std
rcll
jo
stos
imul
xchg
push
and
popa
push
ret
adc
or
dec
sbb
adc
push
rcrb
mov
pop
das
fildl
lea
mov
jmp
jns
call
popa
push
addb
iret
cwtl
mov
push
testb
aas
cmp
add
cmp
sbb
ret
xchg
stos
xor
cld
push
sub
test
cmc
cmp
sbb
lds
mov
cmp
imul
inc
lds
aad
and
mov
xor
xor
fwait
xchg
add
lea
ret
into
mov
cmp
cmp
movsl
mov
test
cli
cmp
dec
ret
push
js
mov
lock
xor
push
cmpb
mov
cmpsl
mov
cmc
lds
lret
mov
rol
cmp
and
mov
cmpsb
dec
out
dec
xchg
out
cmc
jbe
sbb
cwtl
add
inc
mov
ja
sub
jl
inc
rcll
mov
xor
rorl
cmp
mov
add
inc
push
mov
jnp
fucomi
mov
xchg
cmc
mov
lahf
clc
mov
or
shl
cld
mov
or
movsl
mov
add
fcomps
icebp
mov
loope
lcall
dec
or
pop
icebp
jg
fnstsw
cmp
pop
popf
xchg
or
movsl
imul
fiaddl
lcall
pop
adc
adc
xor
pop
cltd
mov
add
xchg
cmpsb
aaa
data16
fidivrl
or
pop
jno
bndldx
int3
or
pop
popf
repnz
dec
adc
dec
xor
mov
xchg
loopne
pusha
xchg
jmp
js
sub
sarb
pop
pop
int3
jae
shl
and
frndint
inc
repnz
push
ds
rcll
scas
inc
mov
insl
loopne
movsb
mov
pop
pop
sarl
dec
and
mov
pop
nop
jl
cmp
adc
xchg
sarl
shlb
adc
add
test
shl
xchg
xchg
movsb
mov
mov
je
movsl
mov
or
or
mov
loopne
sti
fstpt
dec
mov
icebp
cmpsb
mov
testl
aam
push
or
sarb
incb
fstps
push
shrb
ret
jbe
inc
cmc
and
lods
aas
icebp
push
ds
dec
test
lea
in
adc
xor
jno
xchg
fstps
push
sbb
test
sub
movsb
repnz
cmpsb
pushf
ret
dec
fisttps
jb
fwait
cmp
dec
repnz
out
jle
loop
xor
cli
and
xchg
daa
lock
mov
loop
push
jno
push
lret
test
test
cltd
cmpsb
jmp
xchg
sbb
dec
cwtl
inc
int
je
shll
gs
or
jbe
pop
mov
nop
xor
icebp
jmp
lds
inc
repnz
sbb
icebp
pop
and
adc
cmp
pop
cs
or
imul
pop
iret
xchg
jp
dec
xchg
and
int
jle
sub
inc
mov
das
mov
addl
and
xchg
movsb
add
lcall
gs
ja
mov
popf
stc
sub
lcall
jge
mov
add
fucomi
aam
inc
sub
es
xor
out
roll
sti
stc
sbb
xlat
pop
jp
icebp
mov
fwait
push
mov
jl
leave
and
test
call
xchg
shll
shrb
mov
movsb
mov
dec
out
insl
and
into
pop
shlb
xchg
or
sti
jo
iret
ficomps
ds
leave
lds
jb
adc
xchg
xchg
pop
and
sarl
sub
push
xchg
sub
cmpsb
dec
inc
xor
add
addr16
out
jns
enter
inc
clc
dec
bt
mov
out
xchg
addr16
xorl
icebp
mov
scas
adc
inc
mov
ja
xchg
mov
push
test
fnstcw
xchg
shl
ret
jbe
rorl
icebp
aad
jge
aad
inc
icebp
out
mov
mov
test
mov
cmpxchg
push
xorb
mov
jnp
call
adc
insb
shrl
xchg
lock
rcr
rolb
push
cmp
sub
in
pushf
gs
cmpsb
andl
outsl
add
mov
xor
movb
int
pop
inc
inc
test
in
mov
or
jno
inc
inc
adc
xorl
jle
mov
cmp
mov
ret
incb
divl
in
sbb
jmp
pop
mov
add
jge
add
fstpt
out
in
sbb
repz
nop
adc
sbb
mul
dec
or
pop
arpl
subb
pop
jmp
andl
mov
fwait
and
je
hlt
repz
js
ja
jno
ja
les
mov
jge
gs
mov
xchg
xor
mov
stos
xchg
mov
dec
sub
aam
les
pop
mov
aaa
in
imul
lret
repz
daa
inc
mov
cld
stos
xchg
fnstsw
outsb
lods
loope
jmp
mov
cmpsb
xchg
sub
test
test
xchg
xchg
jmp
rcl
sahf
nop
jg
cli
jge
jmp
fmul
mov
inc
inc
or
cmp
fstl
icebp
cld
add
xchg
push
xchg
mov
cmp
mov
call
mov
mov
jg
cmp
loope
and
xchg
in
insl
inc
xor
ja
fsub
add
test
arpl
roll
in
mov
mov
xor
push
mov
xchg
test
cltd
data16
incl
jbe
or
aaa
btc
out
outsl
fstl
sbb
fcompl
pop
enter
sbb
dec
or
sbb
ss
inc
pop
or
in
jp
insb
lahf
xchg
fbld
test
push
shr
jl
pop
ja
loopne
lods
mov
in
add
in
cmp
sti
jns
and
mov
dec
or
pop
roll
jmp
inc
data16
leave
cmp
ss
hlt
popf
mov
imul
aas
gs
push
push
in
mov
xor
popf
pusha
sub
jecxz
cli
adc
cltd
addb
push
inc
in
xor
adc
xor
xchg
pop
xchg
ret
iret
sub
cld
imul
xlat
sub
ret
adc
mov
sbb
lcall
add
mov
mov
dec
es
push
enter
das
pop
xchg
cwtl
std
cwtl
ljmp
inc
dec
pop
push
cmp
dec
cmpb
inc
jb
xchg
cmpsb
adc
in
ror
shlb
or
and
mov
dec
inc
mov
jb
nop
lahf
xor
nop
into
scas
xchg
adc
repz
sbb
inc
adc
mov
outsl
in
daa
test
das
inc
stos
xchg
or
mov
xor
sbb
xor
data16
sbb
xor
pop
shrl
arpl
inc
movsb
mov
mov
cli
insb
cwtl
pop
lods
out
aas
sub
clc
insb
out
shlb
inc
pop
daa
xchg
mov
dec
sti
divps
movsb
xchg
or
cmp
mov
jne
add
jp
inc
pusha
shlb
dec
cmp
ficoml
fdivs
sub
cld
enter
filds
jb
andb
lods
cld
mov
in
mov
sbb
notb
sti
pusha
fwait
lds
jle
fwait
pop
mov
push
daa
xchg
add
nop
insb
add
jge
xchg
sbb
and
lret
sbb
pop
mov
dec
ja
outsb
xchg
mov
mov
daa
add
sbb
mov
outsl
stc
sbb
adc
pop
movsb
xchg
jae
std
mov
mov
lret
pmulhuw
sub
pop
es
xchg
mov
fsubl
pusha
insl
fbstp
jmp
cmp
fwait
pusha
or
in
mov
sti
repnz
add
inc
jns
add
mov
push
inc
enter
jb
sbb
fisttps
stc
mov
jbe
and
push
lahf
jge
mov
hlt
mov
or
cs
lea
sahf
enter
push
aas
add
stos
inc
xchg
push
fs
mov
int3
or
fistpl
add
pop
xor
sub
movsb
xchg
leave
sub
icebp
test
ret
lock
pop
ds
xchg
add
adc
pop
pop
and
clc
les
fistpll
clc
lods
idivl
in
imul
mov
js
and
pop
jo
jo
jo
in
push
dec
fsubs
in
inc
lds
outsl
push
nop
hlt
push
xchg
jne
adc
cmc
and
ret
std
jl
in
pusha
je
or
pop
xchg
xchg
mov
cltd
sub
or
shlb
cltd
push
repnz
loop
ljmp
stc
andl
sub
outsl
fisubrl
adc
mov
shll
add
loop
test
into
adc
push
adc
popa
mov
test
cld
push
lock
xchg
ds
repnz
jns
xor
adc
movsb
xor
mov
add
pop
mov
mov
xchg
mov
mov
xor
int
xor
adc
push
inc
mov
fidivl
push
shlb
jl
xchg
cmp
clc
dec
pop
mov
cld
inc
cld
lcall
ja
out
mov
or
cwtl
fcmovbe
adc
fadds
loope
cwtl
sbb
lahf
lea
push
fsub
outsb
cmp
mov
jle
xor
xchg
in
in
mov
add
dec
cs
and
sub
icebp
cmc
mov
lcall
fdivl
xorl
pop
add
xchg
scas
inc
xor
scas
pop
scas
or
lret
jmp
cmp
mov
or
mov
push
dec
mov
dec
push
test
xor
push
movsl
out
cs
xor
jbe
sbb
cmp
test
int
inc
stc
push
mov
pushf
inc
adc
push
xor
js
flds
mov
push
dec
push
jne
sbb
sbb
fnstenv
fnstsw
add
out
aas
arpl
int3
add
mov
mov
cmp
xor
xchg
frstor
mov
movsb
and
lods
lcall
test
popl
mov
lret
pop
clc
push
push
cmp
cmpsb
or
cmp
bound
sbb
out
or
mov
jp
xlat
sub
incl
js
adc
or
jnp
sub
adc
xchg
add
je
test
push
mov
lret
or
pop
dec
pop
loope
loopne
or
dec
lret
mov
pop
movsb
das
cld
sbb
sbb
lret
cmc
jb
int
xor
nop
xchg
xchg
je
fcoml
dec
sbbb
xor
ficomps
fistps
and
fwait
popa
rorb
mov
xchg
mov
add
out
xchg
jmp
cltd
jnp
lahf
sbb
inc
add
stos
cmpl
add
or
cwtl
fsubl
xchg
iret
push
pop
sbb
test
jl
mov
and
int
cmpsl
or
ret
std
decb
stos
xor
jecxz
loopne
je
popa
mov
arpl
dec
and
fstpt
cmp
fstpt
dec
jo
pop
pmaxub
add
add
xor
xor
adc
and
cltd
mov
jmp
movsl
clc
lret
lret
jnp
test
cltd
fmull
pop
jne
xor
push
daa
sub
fsubr
loop
pop
ds
sbb
repnz
xchg
aaa
mov
and
inc
sbb
sbb
add
loopne
pop
push
or
push
pop
adc
mov
inc
loopne
push
pop
sahf
pop
pop
xorb
insb
pop
daa
push
mov
jae
call
daa
popa
push
lahf
mov
mov
add
push
loop
shlb
lret
into
mov
es
ret
and
sbb
je
inc
adc
mov
xor
int3
sbb
sub
rcrl
push
mov
inc
mov
movsb
jecxz
popa
adc
cmp
or
mov
jge
imul
mov
rcll
clc
and
cmp
pop
and
xchg
mov
js
ja
xor
movsl
mov
mov
and
mov
pop
ljmp
incl
cmp
rcl
clc
adc
push
loopne
nop
in
or
lods
loopne
or
cmp
jg
es
test
dec
mov
or
call
test
test
ret
push
and
scas
in
push
out
fwait
daa
mov
sub
icebp
aad
push
in
and
aas
testb
inc
push
mov
loopne
and
popa
jecxz
jns
std
jp
mov
mov
andl
xor
or
mov
jo
loop
cmp
pop
mov
call
icebp
cmp
mov
sbb
mov
jne
mov
pop
or
sbb
xor
add
fwait
push
aad
cwtl
bound
scas
shr
jg
arpl
ja
xlat
pop
sbb
fcmovb
adc
inc
ret
das
adc
or
mov
xchg
bound
jle
xchg
push
outsl
mov
adc
sti
pop
sti
dec
push
dec
lcall
push
int3
cmp
test
jns
push
out
xchg
in
mov
pop
fdiv
inc
mov
dec
outsb
sbb
insl
dec
sub
xchg
sarb
insb
cwtl
and
loopne
scas
and
loop
sub
sbb
test
adc
dec
ljmp
out
mov
xchg
xchg
aam
dec
ljmp
jns
or
lcall
jno
mov
call
decl
dec
jecxz
push
sbb
push
pusha
push
pop
enter
cmp
jb
in
xor
jne
lods
sub
sub
ret
xor
xor
jnp
jg
or
bound
xchg
xchg
mov
pop
out
xor
test
sub
jbe
fstpl
out
ret
pusha
lods
push
je
addr16
loop
sbb
rcrb
or
cld
jno
adc
mov
nop
fs
mov
jb
jns
in
mov
inc
xor
aad
fs
pop
dec
loopne
pop
fmull
and
xchg
daa
nop
inc
clc
and
sti
icebp
fldcw
mov
in
push
mov
lock
cltd
outsl
inc
test
adc
outsb
enter
mov
xor
pop
cmp
mov
xor
pop
jo
fildl
daa
mov
popl
pop
hlt
jg
je
or
cmpsl
cmp
inc
and
xor
fmull
aad
ljmp
xor
shrl
jmp
sbb
movsl
fadds
mov
push
jp
je
popf
dec
shl
mov
pop
arpl
cmpl
xchg
ret
jns
popa
and
dec
sbb
mov
dec
dec
scas
mull
icebp
jne
mov
push
xor
add
mov
stc
push
ja
adc
out
and
call
cmpsl
aas
push
fldcw
imull
inc
loopne
imul
push
leave
lods
dec
lcall
push
xor
stos
in
xchg
or
inc
pop
scas
std
jns
aaa
pop
lds
xor
icebp
jg
inc
repz
lahf
cmp
or
stos
outsb
xchg
jecxz
test
fidivrs
push
incl
sub
sbb
jnp
and
call
cs
jmp
push
andb
inc
push
pusha
jne
jecxz
xchg
leavew
stos
jno
popa
mov
sub
mov
inc
mov
in
clc
sbb
jne
fadd
or
xchg
rcll
lds
cmp
pop
imul
pop
std
mov
pop
jp
lock
mov
pop
in
cs
jae
mov
lock
into
stos
pusha
hlt
shlb
jnp
outsb
push
movsb
xchg
sti
out
movsl
outsb
dec
jnp
shlb
adc
or
aaa
pop
repnz
xchg
inc
fyl2x
loope,pn
and
iret
test
test
xchg
sbb
ds
sbb
out
sbb
mov
pop
dec
jb
test
lret
mov
jmp
enter
sub
push
push
aad
xchg
push
or
call
mov
insl
dec
shrb
in
dec
inc
inc
fsubl
sti
dec
lcall
imul
mov
mov
jae
xor
movsl
and
xor
mov
cmc
lods
mov
lea
xor
mov
fisttps
add
js
es
aas
add
adc
ds
adc
jns
jns
and
enter
cltd
xchg
cmp
sbb
and
les
notb
jge
nop
push
adc
mov
std
call
imul
or
jg
imul
xor
in
repnz
xor
push
dec
mov
mov
dec
jo
sbb
fistpl
pop
mov
push
mov
adcb
nop
dec
push
xchg
sbb
mov
mov
sub
roll
dec
fadds
mov
cmp
int
inc
mov
ficoml
push
and
jno
out
scas
add
and
jp
sbbb
xor
lea
ret
add
int
fisubrs
insb
repnz
movsb
aad
roll
movsb
or
pop
adc
js
rolb
ss
aaa
out
mov
mov
test
movsb
inc
xchg
pop
dec
mov
push
mov
or
rorl
sub
lcall
push
icebp
addr16
repz
stos
cwtl
sahf
out
jg
out
insl
shll
pop
stos
xor
and
shrb
lret
inc
xchg
add
lods
incl
aaa
cs
dec
test
xlat
mov
mov
jmp
xchg
mov
fiadds
xchg
xchg
cld
xor
cmp
jp
jp
fs
push
xor
sub
xor
rcll
mov
iret
aaa
mov
pop
jg
insl
add
inc
lcall
test
inc
sub
jmp
sub
jo
xor
inc
das
push
pop
xchg
mov
repnz
es
mov
xchg
push
lret
xor
rol
mov
popl
inc
xor
pop
dec
jae
push
cli
add
scas
fnstsw
ret
mov
test
outsl
rcrb
jecxz
xchg
pusha
aad
push
jle
cmpsl
andb
adc
dec
lret
loopne
cli
xor
ja
mov
in
ljmp
mov
jbe
das
jae
xchg
push
outsl
popa
popf
stos
outsb
imul
cmc
and
mov
inc
shll
addr16
leave
movsb
mov
leave
adc
mov
lods
rcll
push
jmp
xlat
cli
dec
sub
lcall
dec
leave
pop
daa
mov
pop
push
inc
inc
pop
lock
jns
mov
movsl
fsts
sbb
sub
jp
mov
cmp
shll
insb
nop
in
stos
fidivs
cmp
xchg
aas
xor
sti
add
sub
jns
adc
negb
test
xchg
dec
idivb
mov
push
hlt
mov
cs
into
cs
scas
sbb
scas
xchg
jmp
cmpsb
mulb
pop
movsl
push
adc
gs
inc
lea
lock
insb
inc
push
or
pusha
mov
js
psubq
sub
out
xlat
int
xchg
mov
sahf
mov
hlt
insb
insb
hlt
inc
lahf
add
and
xor
nop
ja
stos
or
fildll
subl
out
shl
sbb
test
mov
and
hlt
shld
lods
jecxz
aaa
cmp
daa
aas
adc
int3
xchg
pop
jns
inc
addr16
clc
xlat
and
decl
out
and
test
mov
pushf
or
mov
sbb
push
adc
jnp
mov
pusha
sub
or
imul
lret
mov
ds
xchg
mov
cmp
repz
mov
and
fiadds
in
and
imul
mov
bswap
xchg
js
push
xor
movsb
scas
mov
addr16
repz
jnp
out
push
subb
jl
addl
xor
shr
sub
jno
fnstcw
or
vmwrite
cli
lea
shl
cmpsl
mov
jns
lret
mov
les
pop
cmpsl
cli
xchg
pusha
jmp
lahf
in
ljmp
lret
sub
cld
or
sub
pop
shll
das
jno
and
adc
push
shl
mov
ds
lcall
movsb
cmp
ret
shlb
flds
rcrb
rol
iret
nop
jae
mov
aad
fcomip
jns
adc
pop
in
aas
adc
xor
push
hlt
pop
pushf
pop
push
cwtl
mov
out
mov
sbb
mov
mov
and
mov
and
dec
add
loopne
shll
pop
pop
jae
out
xor
cmp
cmp
mov
sbb
xchg
cmc
push
or
ss
test
pop
cmpsl
adc
mov
test
push
mov
stos
stos
test
mov
dec
add
call
fbld
daa
jl,pt
cmpsb
sarl
xchg
orps
lods
test
xchg
insl
pushf
dec
xchg
outsb
lret
lret
cmp
mov
adc
mov
shrl
ret
into
sbb
out
sti
dec
outsl
repnz
sbb
adc
hlt
pop
inc
scas
in
dec
insl
test
jge
das
lahf
adc
ret
mov
popf
je
and
jno
jle
fcomps
jg
jb
jno
std
cmc
add
lret
cmp
or
jo
icebp
cltd
and
popa
inc
xlat
push
jne
add
and
loope
adc
jne
mov
mov
test
loope
dec
dec
insb
mov
xchg
add
or
cmp
popa
pop
push
cmp
roll
or
daa
or
jge
and
sbb
lds
push
ja
mov
ret
call
iret
add
and
dec
xor
push
xor
dec
or
popa
mov
mov
stos
stos
cmpsl
repz
lods
rcr
insb
mov
inc
loopne
push
adc
push
dec
sub
mulb
sub
dec
lahf
in
jae
into
adc
lds
jmp
jb
mov
insl
push
pop
daa
adc
mov
lret
cmp
test
lahf
xor
pop
mov
lods
pop
inc
cs
stc
clc
cwtl
mov
xor
mov
add
fcompl
push
cmp
xchg
push
pop
or
cmp
clc
adc
sub
outsb
adc
mov
jae
dec
sbb
push
cmp
dec
xor
aas
imul
mov
ljmp
and
out
mov
ret
arpl
mov
cmp
ret
nop
adc
shl
xor
jg
dec
and
in
test
sub
bound
ror
sbb
je
aas
aam
dec
fidivrl
in
jae
mov
or
and
adc
lahf
sbb
cmpsl
ss
push
gs
jbe
mov
outsb
xchg
fistpl
xchg
jno
ljmp
dec
ljmp
inc
push
mov
adc
sub
pushf
fcmove
nop
loopne
aad
xor
mov
cmp
xchg
call
daa
pop
dec
adc
loop
int
sub
cmp
add
lea
add
nop
mov
add
mov
test
popa
push
mov
scas
loope
and
lret
mov
lods
rorb
sahf
cs
js
aad
sahf
jns
mov
out
push
and
rcr
mov
mov
rorl
mov
jmp
sub
xor
xor
ja
out
dec
mov
sbb
aas
mov
mov
mov
jnp
lods
inc
adc
inc
subl
arpl
inc
test
insb
inc
pop
push
fadds
and
jp
mov
pusha
jg
aaa
cs
sti
inc
xchg
hlt
lret
negl
scas
leave
ss
and
push
add
leave
push
aas
rcrl
mov
out
add
jmp
ret
inc
cwtl
push
je
scas
div
xchg
popf
insb
add
stos
push
into
lea
xchg
inc
cmp
push
sbb
sbb
inc
sti
aad
mov
das
jle
sahf
inc
cmp
mov
inc
loopne
aas
push
addl
fidivs
sbb
push
rcll
out
je
movsl
sbb
les
push
jns
jbe
inc
adc
lea
loop
test
xchg
push
or
xlat
or
js
sbb
fdivrl
and
add
sub
mov
mov
and
scas
push
int3
out
mov
jle
xor
outsl
iret
test
and
pop
add
jb
mov
jbe
dec
out
add
fs
cli
xchg
mov
sub
push
ds
inc
das
std
xchg
out
and
ret
ss
cmp
lahf
mov
leave
aaa
rcr
lock
mov
mov
xchg
sysenter
push
shll
dec
inc
pop
push
add
outsl
push
fnstcw
cmp
inc
sbb
orl
shl
xor
cmpsl
sbb
in
cmp
sbb
pop
cmp
pop
fisubl
jmp
scas
sbb
cmpsb
add
fstpl
in
dec
inc
shlb
add
jb
imul
int
mov
repnz
lret
sub
or
popa
aam
jge
mov
dec
ljmp
adc
xchg
push
sti
inc
incl
xor
mov
xchg
aas
dec
mov
ja
fs
push
cmp
cmc
imul
inc
scas
xchg
cmc
stos
fisttpll
xchg
rol
leave
sti
mov
xchg
daa
push
mov
dec
cmp
call
add
or
movsl
jp
dec
test
sbb
cmp
mov
mov
test
xor
iret
fisubs
xchg
rorb
add
andl
incl
xor
stc
lahf
xchg
loopne
cmpb
pop
std
cld
push
mov
loop
scas
pop
xchg
mov
pop
stc
or
fs
xor
ljmp
jmp
mov
pushf
add
aam
aam
insb
fwait
push
arpl
fiadds
xor
pop
lret
dec
or
scas
xchg
adc
sbb
orl
leave
ret
or
in
loopne
insb
addb
in
imul
ja
cmpsl
xchg
jge
jno
push
lds
cmp
imul
and
sbb
push
xor
xor
enter
push
mov
mov
mov
call
or
inc
mov
pop
mov
push
push
flds
push
addr16
sbb
fwait
xor
call
cmp
pop
js
imul
nop
push
xchg
push
cltd
ret
inc
js
mov
inc
mov
pop
aas
jmp
jnp
cmp
mov
sti
gs
jecxz
xor
pushw
sub
fsubs
insl
in
popa
cmp
std
cmpl
pop
sahf
jmp
jbe
sahf
sbb
dec
dec
out
pop
jle
int
aas
pusha
cmp
scas
xlat
cli
ficoml
pop
mov
pop
xchg
loop
pop
jno
cmp
pop
std
into
insl
pop
pop
aas
arpl
and
hlt
xchg
lret
test
les
xor
orb
repnz
movsl
xchg
cmpsb
lock
aam
iret
xor
aas
adc
cmpsl
add
mov
cmp
in
das
jbe
sbb
pop
loope
int3
pop
insl
pushf
jmp
scas
sahf
outsl
jo
repnz
lods
xor
sub
lods
mov
xor
xlat
fdiv
test
jmp
push
xchg
and
scas
scas
cmp
mov
push
dec
sbb
mov
data16
jae
xchg
pop
fldz
test
dec
faddl
sub
icebp
cltd
test
jmp
xchg
imul
mov
js
pushf
lods
mov
aad
dec
pop
lcall
mov
fcmove
adc
lods
adc
pop
mov
add
int
ret
dec
out
mov
scas
rdmsr
shlb
ret
mov
repnz
cmpb
and
push
ds
ss
xor
xchg
adc
cmp
inc
jecxz
js
sti
push
outsl
lods
cltd
mov
fsubs
inc
jne
jge
push
cmp
jmp
outsb
pop
iret
sbb
xor
and
inc
sbb
push
mov
fstl
and
daa
jno
xorl
dec
ret
int3
ret
mov
in
jp
test
lea
data16
mov
lds
dec
in
in
sbb
mov
mov
ljmp
cmpsb
addr16
cmp
aad
test
cmp
gs
xor
xchg
cld
adc
add
ja
aaa
pop
and
sti
push
cmp
xor
js
cmp
and
int3
loope
xlat
data16
mov
xor
test
add
and
repnz
mov
xchg
sbb
mov
test
cmpsb
test
mov
mov
xchg
dec
pop
int
scas
jbe
or
movsl
dec
dec
pop
adc
leave
mov
adc
sbb
sub
mov
popa
lret
sbb
and
xchg
ret
iret
in
and
mov
sub
dec
inc
sbb
and
lcall
jg
jmp
jo
stos
subl
xchg
mov
mov
jmp
imul
sbb
mov
insl
inc
imul
lea
das
push
lahf
jo
dec
mov
imull
cmp
mov
clc
lret
sub
aaa
mov
mov
sbb
xchg
ja
ja
lahf
lds
inc
mov
loop
imul
out
frstor
xor
xor
inc
jl
adc
repnz
dec
outsb
or
cltd
in
push
add
call
jbe
add
sbb
int
out
outsl
or
cld
mov
insb
enter
ss
jne
ficompl
fists
imulb
jl
lahf
insb
or
jbe
pop
cmp
dec
incl
arpl
lea
jecxz
cmp
mov
mov
imul
std
jnp
icebp
add
insl
in
pop
adc
and
cmp
adcb
rep
popa
push
leave
bound
ja
data16
push
push
lahf
in
and
popa
pushw
xchg
mov
lock
sbb
mov
or
mov
mov
dec
jns
popa
std
repz
ljmp
iret
adc
fcoml
out
es
mov
or
sahf
stos
xchg
pop
or
cmp
mov
sbb
imul
pop
push
mov
inc
sbb
mov
mov
mov
dec
mov
fisttps
out
push
jl
inc
nop
lcall
outsl
inc
pushf
sub
cmp
dec
xchg
xor
push
out
xchg
scas
lock
pop
push
mov
or
lods
cld
dec
push
xchg
cltd
xchg
rorb
pop
inc
cmp
sub
adc
scas
mov
ret
imull
fs
arpl
mov
pop
popa
mov
inc
jecxz
sbb
inc
setne
lods
stos
loope
lods
adc
jecxz
icebp
cld
inc
ds
or
and
xchg
xorb
push
or
pop
push
inc
mov
xchg
in
jl
mov
iret
mov
stos
and
push
jge
or
dec
outsb
aas
ficoml
out
sbb
mov
rcr
mov
ficomps
scas
fcmovu
sub
loope
loopne
pop
out
adc
notb
jl
xor
add
out
dec
iret
mov
mov
inc
scas
nop
xchg
fcomps
imul
mov
shll
gs
in
lods
shrl
mov
jp
aad
xchg
fs
xchg
fcomp
pop
xchg
pop
fbld
and
pop
xlat
mov
clc
iret
xor
lahf
or
mov
or
mov
inc
std
pushf
mov
popa
imul
jnp
sbb
aam
cmp
fdivrl
cmp
pusha
push
std
add
stos
aam
cs
pop
xor
into
std
and
pusha
pop
das
cwtl
push
mov
sub
jae
inc
mov
jne
or
mov
pushf
cmp
or
mov
jg
jne
bound
repz
xor
jne
or
dec
jne
lods
xchg
ja
inc
mov
mulb
mov
incb
out
mov
ja
jecxz
ret
lret
xchg
jne
enter
fdivp
dec
jle
stc
sub
sbb
lret
andb
icebp
cld
mov
call
stc
and
and
jb
xchg
out
mov
xor
add
rclb
in
sbb
filds
xor
dec
pop
push
pop
into
jl
jmp
mov
xor
sbb
xchg
add
adc
xchg
cmp
enter
inc
fs
sub
sub
sarl
or
nop
mov
and
sbb
push
fimuls
lahf
and
lds
or
pop
out
lea
mov
jnp,pn
imul
scas
in
cmpsl
or
pop
push
mov
inc
addr16
ja
push
cs
mov
sub
inc
packsswb
xchg
xchg
adc
push
lea
cltd
jae
in
js
mov
mov
pop
out
cmp
out
pop
bound
adc
movsb
clc
addl
roll
dec
fidivl
mov
add
jb
cmpl
sbb
sub
aam
shl
push
je
xchg
xor
clc
int3
inc
pop
sbb
add
test
xchg
or
add
xchg
mov
push
push
jp
ror
inc
addr16
xlat
mov
jp
xchg
lahf
pop
out
xor
shll
icebp
sti
orb
adc
push
in
lcall
xchg
insl
push
jo
fs
mov
sbb
xchg
rolb
add
rcl
imul
and
mov
jbe
fisubrl
xor
cmpsl
cmp
popa
or
repz
xorb
adc
cmp
pop
or
jl
dec
imul
jmp
mov
fisttps
jnp
mov
fildll
ficompl
add
add
cmp
and
movntq
daa
pop
cmp
mov
add
xchg
jbe
fsubrs
in
mov
mov
call
dec
mov
xor
out
mov
sbb
xchg
es
loope
cmp
push
cs
and
in
in
inc
fisttps
rcrb
in
sub
outsl
pop
insb
leave
adc
sub
lds
jmp
xor
mov
ja
sub
fwait
xlat
lret
push
lret
les
repz
ds
les
mov
icebp
div
sbb
mov
lret
filds
mov
cmp
ds
adc
xchg
xchg
dec
xchg
fldlg2
sub
mov
or
push
pop
outsb
pop
pop
bound
cmpsb
sbbl
int
mov
xor
test
iret
sbb
in
gs
add
push
mov
es
push
pop
subl
cmpl
sub
push
ds
jge
sbb
or
lods
je
pop
mov
mov
mov
xor
inc
jmp
jl
add
sub
push
cmp
jbe
in
xor
add
mov
pop
xor
xchg
jecxz
mov
add
loopne
xor
jge
lock
je
shlb
dec
sub
imul
xchg
flds
cmp
xor
test
xor
clc
dec
das
sbb
daa
rol
enterw
push
jge
bnd
call
add
inc
inc
dec
xor
cmc
sbb
hlt
jmp
decl
clc
outsl
mov
pop
imul
and
das
pop
and
out
sub
mov
xchg
or
pop
ja
pushf
or
and
inc
xorl
orb
mov
mov
icebp
inc
and
imul
mov
mov
cmp
jne
andl
jg
cmp
xchg
out
xor
test
dec
jge
aam
and
sbb
adc
test
je
fld
lcall
int
cmpsl
and
in
add
mov
jl
xor
fldcw
dec
and
add
cwtl
pop
pop
dec
fsubrp
sub
jge
nop
cwtl
add
and
xchg
mov
adc
dec
jge
pushf
loop
jae
dec
dec
pushw
jg
sbb
adc
repnz
xchg
sbb
test
movb
dec
pusha
cld
jo
mov
lods
mov
push
movsl
inc
inc
out
dec
mov
imul
fmul
jne
adc
mov
xchg
jnp
mov
pop
jl
mov
in
inc
hlt
dec
and
inc
push
jo
pop
add
out
adc
xchg
iret
jl
addr16
push
lods
xlat
or
sti
test
sar
into
dec
and
xchg
sub
push
ds
in
cmp
push
rorl
sub
xchg
aaa
mov
adc
pop
fbstp
hlt
aam
jb
sub
mov
das
rorb
mov
test
pop
push
inc
test
movsb
popa
xchg
pushl
les
sti
repnz
shlb
add
addr16
lcall
or
adc
je
mov
dec
cmpsb
sub
inc
mov
aaa
out
sti
int3
jg
pop
mov
jge
jmp
in
fistpll
pusha
push
mov
mov
aaa
cmp
js
rcll
enter
int
outsl
sbb
xchg
ffreep
ja
cmp
cmpsb
inc
enter
mov
popa
jne
inc
es
push
push
vpsllw
fidivs
sub
mov
adc
pop
jmp
sub
jmp
jae
outsl
ret
test
andb
fs
insb
mov
xor
mov
cwtl
mov
mov
push
pop
cmpps
icebp
xorps
cli
cmp
mov
test
xor
rorl
pop
aam
cltd
dec
cmp
jecxz
pushf
test
cmp
inc
jl
fstps
cmp
cld
sub
je
add
xor
aad
push
icebp
faddl
iret
xor
and
ret
mov
add
in
loop
xchg
jno
cld
mov
dec
sbb
dec
mov
jns
mov
xchg
lock
mov
cmp
push
cs
jmp
mov
insl
test
mov
mov
clc
inc
inc
xor
inc
inc
mov
sarb
jnp
roll
aad
jns
sbb
insb
icebp
ds
add
and
loop
inc
mov
out
and
je
movsl
mov
or
xor
pop
jge
hlt
lret
call
test
adc
add
add
fcmovu
add
out
movsl
rcrb
ja
int3
sub
jne
pop
jns
inc
mov
imul
in
mov
xor
rcr
insl
jmp
sbb
sub
xor
idivb
cmc
in
lret
test
mov
ret
ret
setbe
sbb
add
sub
or
out
mov
mov
xor
std
push
cwtl
push
test
mov
bound
je
pop
jnp
orl
clc
pusha
inc
add
stc
or
lret
shlb
sbb
inc
stc
cmp
popa
shlb
jecxz
popa
push
js
cwtl
fucomi
or
dec
push
out
sub
int
jp
pop
clc
sbb
lret
add
sti
inc
sub
and
cmpsb
sbb
mov
daa
or
nop
inc
push
iret
popf
add
test
fstpl
ret
mov
mov
into
mov
mov
cmc
lea
in
repz
add
or
jo
stos
into
push
stc
icebp
orb
and
sbb
fwait
daa
pop
sarb
and
hlt
test
clc
xchg
and
push
je
ret
gs
push
adc
rolb
or
xor
gs
sbb
inc
push
outsl
sbb
sahf
and
in
adc
push
stos
les
jl
fldenv
dec
adc
aaa
cwtl
cltd
push
ds
and
jns
lock
out
sbb
dec
hlt
jnp
pop
and
inc
xor
clc
push
mov
loope
cli
jne
mov
jmp
fnstsw
and
xor
test
test
aas
cmc
ret
stos
in
sbb
mov
enter
aam
push
jecxz
xor
xchg
inc
pop
sbb
push
mov
mov
push
mov
out
inc
cmc
mov
pop
sub
sbb
lods
stc
cmpsl
mov
das
sub
call
fdiv
dec
cmp
les
mov
mov
sahf
scas
mov
push
lods
xchg
stos
jl
scas
imul
cmp
xchg
xor
xchg
dec
lea
daa
js
fistps
insl
scas
aaa
mov
sub
cmp
frstor
and
pop
das
dec
test
xor
dec
push
adc
sbb
and
push
pop
jnp
adc
aas
add
fs
mov
enter
cltd
xchg
push
pop
xchg
or
daa
mov
test
mov
shr
loopne
dec
jns
add
icebp
iret
or
jecxz
and
push
fld
inc
lods
and
mov
sbb
mov
pusha
sbb
jmp
jne
push
adc
mov
in
aam
out
pop
pop
leave
ret
aaa
icebp
cs
test
push
ljmp
add
aam
sbb
cmp
xor
in
cs
inc
cmpb
push
mov
in
xchg
push
xchg
lods
mov
inc
sbb
sbb
push
and
lods
cli
or
add
cmp
shrb
push
jg
push
sub
sbb
scas
fimuls
push
jp
sahf
shlb
dec
aas
push
dec
mov
loopne
jb
xchg
xor
or
std
in
cmp
jno
fucomp
orb
andl
enter
or
outsl
adc
shlb
mov
aad
and
jle
lock
aaa
popf
push
mov
data16
jb
mov
outsb
fidivrs
cmp
sub
fwait
shlb
mov
or
scas
fldpi
jle
mov
flds
and
and
mov
sar
xchg
jbe
jne
lea
arpl
mov
mov
dec
add
jae
pop
jno
cmp
sbb
bound
shl
in
cmp
push
or
pop
xor
out
fsts
xchg
in
xorb
testb
arpl
dec
imul
mov
jns
cmpsb
push
mov
adc
lret
cmp
or
and
xor
mov
pop
xchg
xchg
bswap
pop
insl
adc
sub
scas
loopne
mov
scas
pop
sbb
loop
popa
out
xchg
int3
push
stos
jbe
cwtl
leave
lds
not
cmp
mov
std
dec
mov
jno
out
mov
popa
into
insb
in
insb
lods
jg
sub
in
xor
pop
ret
dec
xor
mov
cmp
or
mov
dec
shrl
jbe
pusha
and
mov
lahf
mov
cmpsl
dec
mov
mov
and
aam
iret
pop
nop
xchg
fwait
xor
cmpb
roll
xchg
dec
xor
add
call
in
out
cld
mov
or
mov
aas
adc
mov
nop
in
mov
push
add
outsl
add
push
loop
pop
mov
gs
stc
rolb
dec
or
cmp
in
inc
xor
add
dec
movsb
sbb
mov
adc
or
das
pop
ss
xor
push
dec
sbb
jmp
inc
xchg
jmp
mov
ror
test
mov
and
push
mov
or
out
adc
jl
xor
ficomps
add
loop
dec
sub
fmull
mov
frstor
fisubrl
aam
loopne
movsb
lahf
jge
imul
movsb
sub
jmp
mov
adc
fsub
xor
cld
mov
sbb
dec
aaa
icebp
sub
repz
mov
dec
rolb
mov
mov
loopne
repz
and
insl
pop
xchg
mov
jne
push
and
xchg
cmpsl
icebp
outsb
iret
mov
lahf
xchg
insb
pop
pop
jge
cmp
sar
sub
outsl
cli
das
repnz
cltd
push
mov
inc
aas
xchg
imul
jp
test
mov
push
xorl
les
jmp
pusha
stc
fbstp
cli
mov
outsl
sbb
or
fwait
movsb
mov
push
xlat
insl
in
shll
adc
jnp
mov
and
add
out
test
xor
fsts
mov
sti
and
pop
mov
imul
icebp
or
and
bound
xchg
mov
bound
adcl
inc
sbb
aad
inc
push
mov
arpl
aas
adc
rorl
jl
jb
mov
mov
mov
cltd
js
aam
fdiv
cs
add
jno
push
mov
repnz
mov
data16
pop
pop
pop
cmp
fiadds
enter
cmp
out
sahf
add
fmuls
aam
pop
fcomps
outsb
sub
rorl
stc
jle
jnp
les
mov
mov
or
fstl
test
outsb
inc
daa
jbe
dec
fcomip
dec
xlat
int3
test
inc
jns
ret
add
jno
pop
push
adc
gs
mov
xchg
in
movsl
mov
andl
in
mov
sbb
js
sbb
xor
or
xchg
cltd
fwait
dec
xor
fdivs
mov
loopne
iret
xchg
cmp
xor
inc
inc
adc
int
lock
icebp
test
sbb
push
push
lods
int3
xchg
or
xchg
cmp
test
int
out
or
adc
pop
inc
jp
fstpt
cmpsb
das
cmp
addb
rcrb
repz
fsubs
jmp
out
inc
mov
loopne
pusha
shrl
imulb
pop
orl
push
dec
movb
inc
cmpsb
jns
mov
ret
dec
cmp
cli
clc
xchg
jle
xor
jae
out
mov
andb
mov
rorl
repnz
mov
pop
insb
cmp
adc
cmpsl
out
mov
push
sub
inc
bound
ds
jo
dec
add
sub
push
rcl
leave
sub
outsb
test
cmpsl
stos
fnsave
mov
clc
mov
mov
xchg
sti
mov
sub
cmc
xchg
xchg
shrb
sbb
imul
push
add
pop
fisttpl
pslld
in
loop
push
jnp
ret
pop
mov
cld
sarb
stos
add
je
dec
xor
jbe
mov
nop
pop
adc
sub
pop
xor
int3
xor
hlt
dec
sbb
cmpsl
or
cmc
out
adc
mov
nop
lds
mov
and
jo
loopne
aas
sub
jb
cmp
sbb
xor
and
aas
sub
mov
mull
std
rcll
in
push
lcall
jno
xor
add
push
and
mov
popf
stos
adc
into
adc
scas
mov
xor
loop
sub
cmp
dec
dec
repz
loopne
mov
test
cmp
jle
sar
adc
jbe
jbe
ss
test
shl
cmp
cmp
pop
sbb
je
xor
ds
stos
shr
repz
pop
roll
mov
push
xchg
shlb
test
xchg
jb
push
mov
mov
push
sub
or
xchg
test
jp
fwait
jno
sub
cltd
or
dec
std
in
rorb
xor
cmpsb
jbe
ret
popa
cld
out
repz
in
jbe
cs
jg
xchg
lods
subl
int
subl
es
cmc
sti
inc
clc
loope
push
mov
movsl
or
sbb
cmp
fistl
in
imul
or
mov
ds
rorb
lea
cmpsb
xchg
cmc
cmpsb
loop
cmp
pop
pop
inc
movsl
jbe
mov
pop
mov
mov
lcall
arpl
cld
in
inc
les
mov
fwait
aad
and
mov
scas
xchg
adc
mov
cld
push
adc
es
push
test
pop
lcall
sarl
dec
outsb
cmp
and
add
inc
push
sbb
ret
and
mov
jb
pushf
fbld
test
inc
lods
add
popa
ja
in
adc
sbbl
in
pop
sbb
mov
sbbb
mov
mov
add
movsb
jno
mov
loop
loop
je
addr16
push
insl
lds
adc
mov
xor
int
aas
aad
mov
jge
shrl
roll
adc
lahf
scas
inc
rorl
insb
dec
das
lds
insl
xlat
hlt
jp
jge
sarl
xor
push
fucom
cmp
lcall
mov
pop
stos
sbb
jne
or
push
outsl
push
in
sbb
push
sbb
adc
movsb
or
mov
andb
mov
xor
shlb
sbb
in
lahf
rcrl
xchg
daa
inc
push
mov
sbb
push
ja
pop
rep
ja
xchg
add
xchg
sti
pop
xor
flds
lods
test
xchg
movsb
xor
mov
sub
or
test
mov
hlt
mov
test
pop
pop
movsl
lods
in
sbb
pop
lds
lcall
add
imul
dec
xchg
push
divb
mov
shrb
add
aam
pushf
mov
ja
xor
xor
push
lods
sub
or
fs
mov
pop
call
sbb
iret
out
gs
push
xchg
pop
aaa
rcll
fdivl
push
lea
dec
gs
cmpsl
arpl
push
lret
and
pushf
xor
cmp
cs
roll
test
les
cmp
leave
jnp
lcall
iret
addl
in
xchg
cmp
add
mov
inc
jo
lods
mov
mov
in
xchg
ret
jno
les
cmpl
daa
es
cmp
aam
dec
loop
test
scas
jae
sbb
iret
jg
mov
aam
lock
stc
pop
xor
add
sahf
mov
xchg
mov
cli
dec
cltd
sbb
movsl
fldl
push
pop
ss
popf
pop
pop
xor
sub
inc
ja
push
rolb
fidivrl
jns
sti
jmp
imul
stc
dec
cmp
outsb
je
das
xchg
sbb
mov
int
popl
movsb
repnz
les
ja
mov
jmp
cwtl
add
leave
xchg
and
mov
rorl
cmp
loop
les
nop
sbb
dec
loopne
fs
pushl
stc
jnp
pop
cmpsb
mov
cs
mov
adc
mov
movsb
int
xor
sub
cmp
imul
ds
jecxz
insb
mov
sub
push
push
jno
xor
and
add
in
jp
mov
and
and
push
pop
in
add
imul
cli
js
int3
lret
pop
push
sub
mov
cmpsl
sbb
dec
sbb
callw
dec
pop
shrb
sti
pop
and
out
repnz
je
xor
mov
dec
add
lea
aam
pop
mov
xchg
xchg
push
scas
lods
mov
movsl
push
mov
adc
or
ret
popa
in
xor
jb
cmp
adc
mov
loop
ftst
xchg
sarl
outsb
hlt
mov
sbb
adc
mov
clc
jmp
cmp
fdivrs
jbe
mov
repnz
out
mov
dec
div
and
pop
or
jl
lret
nop
jno
in
cld
lret
cmp
mov
push
neg
lods
es
add
adc
imull
shr
int3
shll
fisttpl
lods
mov
inc
daa
push
lret
movsl
dec
pop
enter
fisubs
stc
call
lea
hlt
add
inc
jge
ss
mov
add
pop
das
outsl
mov
sub
xor
sub
jae
lock
xchg
fidivrs
push
mov
push
aas
data16
xor
push
decb
je
int
ds
mov
inc
cmp
push
xchg
sbb
or
mov
ret
xchg
stc
dec
xchg
jp
cmc
cmc
dec
push
cld
xchg
inc
aas
in
rcrl
fistl
adc
xor
popf
in
dec
pop
sti
fs
xchg
aaa
loop
dec
lds
jae
fcomp
dec
shrb
cmp
and
insb
jecxz
test
cmp
dec
icebp
notl
mov
mov
daa
dec
xchg
test
cmp
lcall
ret
arpl
js
or
scas
lret
lcall
jecxz
arpl
inc
loop
int3
inc
jmp
fisubl
int3
sub
dec
jl
cmp
out
cmpsl
rcrb
mov
fadds
push
inc
call
popa
fwait
sbb
pop
dec
insb
jmp
sarb
setge
in
sub
ja
leave
scas
addb
ret
imul
add
xchg
iret
pop
xor
dec
sbbl
data16
sub
into
push
popa
jae
loopne
mov
repnz
nop
dec
stos
jmp
loopne
mov
and
xchg
cmp
sti
shll
pusha
lret
pop
push
xchg
mov
xor
mov
sub
add
lret
xchg
xor
pop
or
cmpsl
icebp
xlat
mov
cltd
xor
rclb
mov
cmp
mov
push
into
sti
xor
loopne
fxch
insl
or
or
push
cmpsl
cmp
adcl
or
jmp
outsl
aaa
xchg
jo
push
sahf
shlb
dec
imul
movsb
xchg
loopne
sub
adc
pop
lods
cs
out
data16
cli
add
jns
popa
cmc
adc
lods
mov
cmpsb
xor
sbb
bound
xchg
adc
mov
aas
and
cwtl
lods
lds
dec
xor
mov
aaa
mov
fadds
pop
in
imul
mov
push
sahf
jne
sub
sbb
cmpsb
out
xor
xor
sbb
rcr
adc
pop
sub
sub
xchg
icebp
push
pop
clc
hlt
orb
call
mov
mov
loop
pop
sbb
jge
movzbl
int3
cmp
sub
adc
adc
movsb
xor
xlat
add
insl
cmp
push
add
lcall
and
jge
add
lcall
dec
repnz
jae
pop
call
sbbb
mov
mov
es
rcl
mov
inc
clc
sti
adc
xor
or
stos
gs
fucom
adc
pop
ret
mov
or
pusha
pop
repnz
enter
cmp
out
out
lahf
adc
lret
aaa
int3
shll
inc
fadd
sub
lods
idivl
jle
and
add
xchg
mov
xchg
jne
jecxz
sub
add
jne
movsl
popa
ds
sbb
or
jmp
stc
push
fsts
das
mov
adc
movsl
and
icebp
pop
je
inc
adcb
icebp
xor
test
mov
je
sbb
idivl
sbb
xor
cltd
mov
and
lods
outsl
jl
add
notb
lret
int3
ljmp
add
push
fwait
outsb
push
das
lds
cmp
lret
inc
pop
and
jp
mov
xchg
dec
lcall
std
cmp
mov
dec
test
out
ret
inc
cmc
roll
sub
lock
xchg
test
test
xor
fstl
addr16
popf
sub
ss
es
sbb
adc
push
scas
rorl
cmpsl
int
pop
sarb
sbb
movsl
lret
sbbb
aam
xchg
and
out
stos
push
arpl
xlat
push
icebp
push
movsb
sbb
mov
jl
popf
dec
jne
push
fld
fildll
ljmp
fs
imul
lret
mov
mov
clc
int
mov
sbb
out
cwtl
stos
jo
add
fistl
cmp
mov
data16
xor
dec
jns
into
push
rep
and
je
call
out
push
lock
sub
int3
sti
dec
push
stos
test
pop
call
push
mov
rolb
cmp
add
lcall
xchg
sbb
xorb
cs
mov
push
scas
push
repz
aam
mov
mov
push
and
lods
pop
rcrb
jns
mov
out
or
fstpt
lods
jge
inc
sahf
xchg
aaa
lcall
dec
jg
mov
sbb
lea
pop
inc
pusha
das
mov
adcb
xchg
inc
ret
push
ficoml
arpl
fwait
push
cmp
xor
les
adc
popf
lock
mov
pop
scas
sti
or
inc
push
push
lock
popf
pop
pop
arpl
lret
movsb
std
addr16
test
jle
cmp
scas
aas
mov
cwtl
in
jne
push
pop
xor
orl
out
or
test
push
syscall
cltd
or
mov
popf
xchg
and
mov
mov
fists
xchg
and
and
sub
stos
imul
imul
dec
ret
inc
es
push
jno
lret
inc
jp
xlat
imul
jns
xlat
and
popf
add
movsl
mov
pop
or
and
fadds
sub
mov
in
dec
out
daa
addr16
inc
sbb
xor
jbe
mov
aam
fwait
xor
je
stos
out
test
fs
and
pop
clc
push
xor
push
repz
or
dec
pop
dec
add
loope
push
sub
lods
and
stc
lea
movsl
mov
sub
push
shl
cmp
sbb
push
or
mov
pop
mov
lcall
xor
cs
cwtl
mov
addb
sub
daa
outsb
loopne
mov
sarb
in
sarb
pop
mov
mov
xor
push
push
cmp
mov
into
or
jns
cmp
xor
mov
push
movd
lock
jo
jb
pushf
xor
add
pop
xor
in
cmc
cmp
dec
inc
push
fisubs
lcall
push
push
out
dec
movsb
loopne
mov
lahf
add
or
inc
add
dec
pop
cltd
cmp
test
test
js
and
or
in
inc
pop
sarl
fs
xchg
in
stos
loope
insb
or
js
pop
leave
push
outsl
xor
sub
adc
mov
pop
jae
test
add
dec
es
push
dec
inc
arpl
cli
rclb
push
lret
call
data16
test
ljmp
mov
je
mov
or
fsts
xchg
mov
xchg
dec
insl
dec
sub
fs
aam
enter
subl
jle
or
lea
mov
pop
xor
mov
test
stc
fs
lods
xor
cmp
stc
cmpps
mov
push
inc
dec
adc
xlat
andb
dec
mov
cmc
ret
add
jbe
sbb
or
cmp
mov
pop
ret
test
imul
or
pop
jae
sbb
mov
mov
jge
shrl
jo
adc
shll
xor
movsb
jmp
lret
cmpl
rolb
mov
test
dec
or
sub
adc
jle
jmp
mov
sub
rcr
mov
mov
les
into
imul
scas
test
inc
cmp
add
aaa
or
cmpsl
imul
mov
xor
aaa
adc
sahf
pop
in
push
loopne
fucomip
shrl
addr16
pop
xchg
popf
mov
cmc
jge
popa
andb
sahf
mov
loope
pop
imull
mov
stos
test
stos
fadd
out
leave
push
aas
cltd
icebp
dec
pop
dec
cmp
fistps
push
subb
pop
movsl
in
dec
lods
fidivs
push
hlt
push
loopne
cmp
jns
xor
movsl
inc
sbb
add
loop
cltd
ja
cmp
jne
ds
inc
sbbl
sub
mov
cmp
icebp
and
adc
push
jb
insb
imul
push
nop
cmpsl
es
inc
cmp
aam
add
xor
arpl
or
out
aas
fisubrs
loope
int
pop
xchg
jne
insl
inc
pop
push
jae
rcl
popf
in
mov
xor
xchg
les
adc
loope
sbb
mov
stos
dec
movsl
scas
xchg
push
push
jns
test
inc
les
dec
cmp
inc
mov
sub
inc
sub
lahf
fsubs
ss
mov
ja
pop
rorb
cmovp
add
xchg
rolb
jle
push
pop
jne
mov
pop
cs
dec
xor
jl
shrb
clc
push
dec
aaa
push
aam
or
cmp
movsb
xchg
pop
pop
xchg
cmp
mov
sub
les
jo
aas
mov
loop
rolb
rorb
pusha
or
inc
push
addr16
aad
shl
call
test
jbe
iret
and
sub
xlat
pop
jne
adc
repz
dec
mov
dec
hlt
sbb
dec
mov
movsb
mov
push
nopl
dec
aaa
int
enter
inc
loop
int3
cli
pop
mov
push
sahf
dec
pop
test
lock
add
out
aam
jle
push
push
or
ds
enter
xchg
jns
jns
or
popf
sub
xchg
int3
leave
mov
lahf
pushf
movb
outsl
cmpsl
mov
das
mov
pop
sub
jle
shlb
push
mov
rolb
hlt
loopne
std
mov
push
and
jb
xor
dec
clc
push
jbe
add
out
mov
cmc
mov
shlb
addr16
daa
pop
inc
jl
adc
mov
inc
sbb
xor
in
jo
inc
mov
dec
jecxz
cmp
sti
jno
ror
repz
dec
mov
orl
inc
push
lret
es
int
test
jg
setle
xor
dec
sbb
push
fcomps
ret
sub
push
mov
mov
push
andb
sarb
jns
mov
popf
xchg
lret
mov
shlb
dec
sti
imul
lock
mov
sub
ret
mov
add
lahf
mov
fsubp
popa
daa
imul
rcrl
push
dec
adc
stos
xor
fwait
adc
mov
xchg
notb
dec
sub
mov
xor
push
xchg
lods
lcall
fmul
add
fdivrs
xor
and
mov
and
in
ja
dec
cmpsl
dec
lea
aad
dec
daa
xorl
sub
pop
cmp
shll
lahf
or
call
fsubl
test
sahf
in
icebp
push
inc
repnz
jbe
lods
hlt
sub
pop
lods
fcompl
scas
dec
cmp
lds
cmp
in
movsb
insb
fcmovbe
loop
or
fisubrs
xchg
mov
or
mov
jno
loope
and
test
std
push
cmp
xchg
mov
xchg
xor
jg
imul
mov
inc
pop
scas
test
loope
xor
addr16
jp
mov
std
out
push
pop
fldcw
lcall
outsl
xchg
mov
repz
add
scas
pop
jo
js
movsb
inc
arpl
out
cmp
pusha
out
mov
or
cmp
cmovno
shl
jmp
inc
inc
push
dec
std
arpl
xor
xorl
aad
aad
xor
add
enter
data16
push
shlb
lods
and
mov
imulb
sbb
or
jge
fsubl
jg
or
pop
lods
cmp
dec
dec
xchg
fwait
jp
lock
addl
stc
push
outsl
xorb
daa
out
jns
cmp
inc
addr16
test
cmp
mov
adc
stos
pop
cwtl
mov
fsubl
push
les
in
mov
into
sub
mov
sub
inc
add
sub
orl
fisttpll
sbb
dec
cmpsb
push
and
addl
cmp
adc
xchg
jb
mov
xor
push
pop
xchg
dec
mov
popa
loope
daa
cmp
fildll
test
pop
pop
jle
mov
nop
dec
xchg
mov
dec
std
sub
mov
rcl
jecxz
mov
lret
push
out
fists
xchg
arpl
imul
dec
mov
ret
mov
cli
sub
rcll
xor
ds
or
div
loop
bound
mov
out
mov
test
insb
mov
sahf
mov
lea
and
test
leave
dec
mov
in
lret
xor
cli
aaa
daa
mov
aas
mov
add
lds
daa
jmp
out
adc
pushf
lcall
and
pop
adc
fstl
push
popf
add
lea
cmpsb
fidivrl
pop
cmp
inc
mov
xchg
shlb
or
adc
and
mov
cmp
xchg
jns
data16
pushf
shll
xchg
rol
cld
adc
and
outsl
lods
out
cmp
dec
sbb
aas
adc
lahf
or
mov
xchg
sbb
sbb
or
outsb
cli
sarl
mov
cmp
dec
repnz
nop
mov
lea
addb
mov
cmpsl
imul
int3
push
pop
stc
xchg
addr16
push
mov
push
loop
xchg
ja
repnz
jns
mov
shll
dec
sbbb
loop
test
insl
jae
and
push
insb
cwtl
loop
push
popf
inc
xchg
jns
call
cmp
mov
cs
or
mov
sub
pop
mov
pop
add
inc
loopne
clc
stos
sbb
add
in
sbb
or
lcall
push
mov
and
pushl
push
add
sbb
das
pop
push
cmp
dec
or
ja
ljmp
sub
dec
xchg
jecxz
lds
daa
ret
ret
xor
jle,pn
xchg
test
mov
xor
push
out
mov
imul
stos
jnp
mov
mov
testl
outsl
jns
int3
arpl
test
or
mov
nop
mov
cld
xchg
call
mov
xchg
jl
daa
mov
inc
clc
sbb
pop
xor
cmp
inc
in
daa
jmp
in
mov
push
lcall
lretw
sbb
lea
int3
stos
jbe
das
shll
push
loopne
xor
push
int
jmp
loop
lods
adc
push
or
mov
xchg
loopne
cwtl
lods
mov
jmp
ffree
sbbb
mov
add
daa
out
aam
mov
outsl
enter
cli
sub
xchg
loop
add
loopne
in
roll
and
sti
inc
inc
pop
ja
pusha
pop
mov
loop
fidivs
into
insb
cmp
jb
mov
out
das
jl
aaa
or
jmp
test
mov
sbb
jne
inc
imul
cs
jle
sbb
pop
ja
pop
pop
mov
mov
sbb
inc
xchg
mov
pop
pusha
je
mov
mov
clc
mov
inc
dec
sbb
cmc
bound
sub
jge
xor
adc
mov
push
sub
sbb
xchg
cmp
add
testl
xor
mov
sahf
cmpl
popf
jmp
push
and
sbb
dec
fdivr
faddl
imul
fs
dec
cwtl
jb
popa
maskmovq
negl
and
push
dec
adc
dec
mull
mov
imul
test
lds
jno
mov
lahf
mov
and
dec
lods
or
leave
pop
add
push
insl
addr16
add
xchg
xchg
pop
decl
repnz
sub
into
mov
lds
xchg
sub
outsl
jb
cmc
sarl
enter
pop
loopne,pn
adc
bound
jns
arpl
popa
mov
jae
aas
jle
push
pop
test
ret
mov
test
loopne
test
repz
cmp
test
sub
mov
dec
lock
int3
iret
adc
inc
clc
adc
in
jno
push
enter
mov
or
fsubp
xor
inc
daa
stos
call
scas
div
xchg
ja
jle
xchg
cmpsb
andb
scas
lahf
push
cmp
push
test
push
mov
int3
cltd
sub
xor
stos
lcall
fucomip
test
pop
clc
sub
iret
pop
xor
pop
sbb
mov
mov
into
test
cs
xorb
test
mov
mov
int3
in
femms
les
pop
pop
je
xchg
xor
and
and
scas
adc
sub
test
and
pop
enter
xor
aam
mov
mov
push
lds
out
stc
cmp
push
add
inc
cmc
outsl
sti
dec
shlb
aad
sahf
mov
out
inc
cmp
out
add
jnp
rorl
roll
push
nop
mov
stos
fstpt
int3
lcall
dec
push
imul
mov
xor
loop
lock
push
jae
out
sti
ret
addl
rcpps
mov
mov
and
movsl
sbb
jle
pop
lahf
popf
aam
mov
and
jmp
mov
leave
mov
cmc
mov
sub
add
mov
jno
sub
sub
pop
sbb
test
aaa
out
fs
adc
jno
testl
fistps
xchg
jp
rol
shll
jmp
adc
mov
jp
jo
fucom
xchg
xor
cmpsl
jbe
inc
pop
sub
dec
dec
jb
mov
and
xor
sbb
and
mov
out
outsb
jle
and
mov
imul
cmpsb
jecxz
jbe
mov
mov
mov
mov
jl
test
push
add
lahf
push
fwait
xorb
addl
addr16
pop
sti
repz
adc
out
in
xchg
jg
mov
and
mov
cwtl
mov
jmp
icebp
ljmp
scas
into
sbb
push
popf
xchg
jb
pop
mov
fldl
or
xor
mov
daa
popa
sub
cs
pop
or
pop
int3
push
adc
push
jp
ljmp
sub
loop
jbe
sbb
xlat
stc
or
test
push
scas
pop
fnsave
out
pop
lret
push
sbb
push
dec
mov
mov
out
and
dec
xchg
pop
popl
sbb
pop
lretw
pop
inc
or
arpl
xor
jns
in
movsb
outsb
ror
mov
cld
mov
loope
loop
sub
mov
push
cmp
jns
add
sbb
adc
das
test
cmp
jne
fwait
jae
xchg
lahf
mov
jl
and
push
dec
cltd
mov
dec
shll
scas
jp
imul
push
arpl
xor
imul
repz
push
fstpt
fstl
dec
mov
movsl
pusha
call
mov
in
test
cmp
es
jl
push
insb
std
jnp
inc
pop
fs
mov
pop
or
jb
les
popa
inc
add
test
in
xchg
push
gs
pushf
loop
ja
cs
frstor
fcom
and
es
xor
inc
sbb
jl
or
cltd
jns
cmp
sahf
test
pop
cmp
sbb
imul
int3
cmpsb
dec
or
jb
fstpt
cltd
dec
lcall
shlb
push
xlat
xchg
jecxz
push
xlat
fwait
xchg
pop
cmpsl
out
pop
push
inc
sbb
lret
js
cmp
lret
jo
loop
je
inc
mov
sbb
jo
sbb
jae
lret
clc
lods
push
jns
idivl
jns
movsl
jmp
test
test
xchg
push
leave
mov
jbe
lea
adc
shll
pop
ds
test
in
xor
aas
jns
stc
mov
push
or
popa
mov
sub
adc
es
pop
shlb
in
lds
push
adc
lahf
test
test
sub
out
mov
mov
enter
iret
xor
adc
roll
cmp
popf
and
outsb
xchg
stos
aam
pop
mov
outsl
lods
inc
and
pop
pushw
mov
cmp
push
jae
ret
movsl
cld
fucomip
ss
test
aam
out
imul
or
or
sbb
push
insl
arpl
xchg
popf
movsl
xor
jo
inc
cwtl
sub
dec
xchg
out
sbb
insl
pinsrw
imul
repnz
or
xchg
xor
pop
pop
cmp
cmpsl
ja
jb
sahf
test
loop
imul
dec
repz
js
iret
sarb
shll
pop
dec
bound
mov
adc
pusha
imul
out
push
dec
mov
movsl
js
xchg
pop
sub
js
push
clc
rcrb
xor
in
push
xchg
dec
hlt
add
lods
outsl
mov
pop
stc
adc
adc
clc
xlat
cmp
jnp
adc
test
arpl
cmp
sbb
mov
lahf
and
loopne
icebp
xchg
call
into
adc
mov
or
adc
cmp
push
mov
mov
push
daa
dec
sub
jbe
mov
mov
ret
add
xor
int
mov
jno
or
mov
dec
lret
cmpsl
xor
pop
sub
call
in
ljmp
mov
jbe
bnd
movsb
xor
negl
push
js
xchg
ss
cli
insb
fwait
adc
push
sbb
incl
dec
mov
negl
mov
pop
mov
jge
push
subl
outsb
cmp
mov
pop
add
sub
cmp
je
mov
subl
add
lock
push
add
xlat
pop
cmp
sbbl
gs
push
les
add
sbb
js
inc
xlat
imul
xor
ret
fs
inc
lea
add
repz
adc
andb
cmp
mov
xchg
or
insb
cli
mov
popa
jl
jp
lods
adc
jb
dec
mov
jg
rclb
cmp
adcb
adc
sbb
ljmp
push
mov
sub
in
xchg
ja
enter
in
adc
inc
xchg
lds
sub
call
mov
pop
inc
or
jg
popf
push
dec
pop
stos
ja
test
rcl
call
and
sub
and
push
dec
pop
cmp
jns
dec
push
mov
xchg
push
imul
mulb
sbb
loop
jp
mov
dec
test
ds
insl
cmp
pop
leave
pop
mov
arpl
pop
aad
xchg
push
mov
shlb
and
outsb
into
mull
fwait
push
notl
cmp
push
lea
inc
mov
cwtl
scas
push
sbb
push
jo,pt
loop
jo
push
xor
incl
repz
mov
xor
and
sub
shl
jae
roll
mov
nop
dec
into
add
pop
insb
pop
js
push
in
stos
fidivl
inc
jno
xchg
test
sbb
cs
rcrb
cmp
add
shrb
dec
mov
out
or
inc
xchg
cmpsl
movsb
push
popa
repz
pop
jno
sub
dec
stc
mov
push
mov
popa
inc
jb
hlt
lret
jle
aas
fs
cmp
add
clc
mov
fldl
cli
adc
test
fwait
shrl
insb
les
fnsave
jno
pop
push
cli
cmp
push
leave
iret
add
sbb
mov
sub
popa
sbb
sbb
in
and
adc
or
es
jmp
hlt
and
xchg
pop
mov
mov
insl
jb
xor
or
aaa
add
adc
in
lcall
ret
std
dec
or
test
faddl
ficomps
sbb
iret
jb
cltd
out
mov
cltd
rcll
jecxz
lahf
add
lcall
cld
sti
orl
xor
jecxz
cmpsl
hlt
rolb
inc
jb
lea
rclb
out
aaa
mov
cltd
lods
jge
and
into
fmull
push
xchg
dec
jge
shll
and
sbb
es
sbb
sbb
xchg
clc
in
sbb
push
jg
test
push
icebp
xor
pop
popf
divb
xor
dec
push
mov
into
mov
push
and
cmp
xor
cld
xchg
xor
lods
es
decl
dec
push
cmp
jecxz
dec
mov
pop
xor
les
sub
dec
sbb
insl
lahf
mov
fwait
or
es
scas
outsl
dec
loop
jbe
xor
decb
lcall
leave
mov
ficoml
aad
test
cmp
sbb
fisttps
outsb
notl
sbb
lods
out
ret
insl
imul
dec
lods
sub
xlat
ret
or
inc
sub
aam
sbb
lods
dec
je
pop
cmp
adc
pop
or
stos
push
and
push
sahf
pop
xchg
mov
push
movhps
movb
cmc
mov
ja
icebp
push
mov
and
cwtl
addb
mov
xchg
imul
push
dec
test
je
cltd
push
adc
mov
fnsave
subb
adcb
jle
jbe
inc
mov
lods
cmp
pop
cmp
xchg
xor
push
or
and
inc
mov
xor
pop
loop
dec
test
cmp
mov
xor
adc
ss
mov
pushf
push
out
push
idivl
js
rcrb
daa
dec
sbb
dec
sbb
ss
and
adc
js,pn
cmpsb
inc
mov
sbb
mov
sbb
ficompl
push
fldl
jmp
add
push
clc
add
mov
inc
and
dec
into
sbbb
leave
sub
sub
push
push
outsb
push
in
mov
popaw
outsl
pop
jmp
mov
aas
outsb
repz
jo
shlb
mov
mov
lahf
stos
xchg
popf
popa
xchg
cmp
stos
push
jg
pop
inc
jnp
mov
push
pop
test
mov
out
rolb
add
subb
mov
mov
scas
cmp
push
xchg
sbbl
sub
mov
mov
iret
fbld
icebp
xchg
dec
cmp
sbbl
inc
movsb
dec
inc
fcmovnbe
insl
out
pop
imulb
sub
push
push
mov
pusha
cmp
out
mov
add
xchg
push
adc
push
lret
sub
and
pop
pop
icebp
fwait
cwtl
cmp
fldenv
aad
in
or
mov
loopne
mov
shlb
sub
push
jp
pop
mov
jno
push
mov
sbb
sub
push
cmp
jbe
shrb
jno
imul
xor
cmp
adc
adc
cmp
and
stos
cmpsb
xor
and
jne
mov
inc
or
ffreep
mov
dec
mov
test
dec
cmp
scas
mov
test
push
add
or
loope
por
std
pxor
fucomp
add
mov
ds
stos
pop
pop
fsubl
pop
aad
or
call
filds
sub
pushf
or
or
pop
adc
sbb
inc
lods
nop
jl
xchg
repz
xchg
test
sbb
xor
mov
es
and
fstp
xchg
fwait
ds
mov
xor
or
mov
xor
orb
pop
mov
dec
mov
movsb
dec
or
push
dec
leave
mov
cs
pop
loope
in
clc
sahf
pop
sbb
in
add
push
dec
lahf
push
pop
xchg
ror
out
jne
pop
add
push
mov
push
xor
imul
fistpl
mov
push
adc
xor
cmp
dec
cltd
push
sbbl
movsb
jle
inc
inc
fs
loop
mov
stos
loop
out
jnp
sub
andl
in
inc
ds
sub
and
add
fiaddl
pushf
loopne
data16
stos
xchg
jns
jl
dec
add
out
imul
cmp
inc
insb
arpl
test
jecxz
lock
push
pop
aaa
inc
sahf
adc
test
and
mov
test
mov
inc
add
leave
jg
xchg
shll
pop
mov
adc
and
sbb
mov
popa
pop
dec
scas
mov
sti
adc
mov
repnz
sub
cmp
daa
bound
dec
rorb
push
push
jg
popf
sbb
insb
add
ds
mov
out
mov
adc
mov
insb
xlat
push
fnstcw
mov
mov
jnp
jno
stc
jb
sti
std
mov
inc
xchg
dec
icebp
rorb
insb
jo
pop
movsl
lea
ss
or
dec
lahf
or
lret
mov
push
jle
push
inc
or
stc
or
test
mov
dec
pusha
adc
ds
jecxz
jnp
test
mov
out
and
sti
fistl
or
lahf
pusha
mov
stos
and
push
mov
lea
cli
stos
pop
pop
int
cmp
cmp
add
lods
into
sti
cld
jns
cwtl
xchg
rorl
jae
test
mov
mov
jo
adc
xchg
xlat
cmp
dec
cmc
icebp
jb,pt
cmpsl
test
ljmp
xchg
adc
inc
or
cld
add
jp
jo
jno
inc
je
pop
rorl
sbb
jp
and
fnstcw
xchg
jecxz
stos
ret
jp
shrl
sbb
mov
and
xchg
std
movsb
ret
rcrb
pushf
fistpl
sbb
and
pop
nop
scas
mov
jle
cmp
dec
mov
ret
mov
data16
and
xchg
imul
adc
adc
fs
pop
aam
out
sbb
and
dec
sub
xchg
mov
push
dec
icebp
inc
stc
imul
jns
sbb
iret
shl
cmp
add
mov
mov
pop
pop
lea
or
and
jp
and
pop
fnstenv
cs
adc
mov
movsb
xchg
pop
adc
push
or
stos
mov
inc
mov
mov
shl
dec
out
pusha
add
jae
mov
sub
scas
leave
arpl
xor
mov
dec
lahf
mov
in
scas
popf
pop
ret
movsl
sbb
inc
cmp
outsb
pop
les
addb
repnz
leave
or
jmp
jne
or
stc
dec
add
int
xor
jge
or
jp
sar
rorb
xor
adc
rorb
lods
inc
movsl
je
dec
jmp
mov
cld
push
lods
xor
lret
inc
shlb
cmp
gs
clc
jmp
jmp
imul
fsub
jp
sub
loope
xchg
pop
adc
sbb
mov
addr16
rcll
push
aad
mull
cli
aad
les
push
shll
and
loop
mov
mov
jp
shlb
add
sbb
das
cmp
dec
dec
fs
mov
mov
das
mov
loop
mov
inc
xchg
adc
or
and
cmc
shlb
scas
in
insb
dec
push
or
push
data16
or
xchg
jae
out
test
js
out
jmp
ljmp
push
xlat
and
inc
bound
inc
lods
bound
xchg
mov
sub
adc
inc
add
pop
push
or
add
sub
push
inc
std
inc
negb
xlat
or
xor
hlt
imul
lods
test
daa
xchg
dec
xor
push
mov
das
push
in
sub
sub
xor
sub
pop
scas
and
cli
ret
roll
cltd
sti
hlt
jnp
sbb
shlb
xor
inc
bound
mov
out
test
outsl
jns
mov
stos
sub
in
sbb
aad
inc
out
xchg
xchg
repnz
stos
addl
xchg
adc
pushf
and
xchg
pop
xor
ror
or
or
and
pminsw
pop
es
xlat
jp
shll
addr16
sarl
enter
mov
push
mov
int
pop
inc
push
dec
in
adc
stos
push
loopne
lds
dec
push
jmp
cmp
xchg
pop
leave
mov
nop
mov
and
dec
out
push
outsl
std
rclb
mov
push
in
push
fiaddl
pop
xchg
rol
ret
cld
cmpsb
hlt
rcrl
mov
stc
add
adc
xchg
and
sti
arpl
arpl
ficoms
and
xchg
fldt
ja
inc
stc
and
xlat
dec
inc
adc
xchg
fcmovnbe
push
xchg
pop
mov
es
cmp
ret
into
add
iret
fimull
push
and
test
jmp
loopne
movsb
shlb
push
cmp
mov
rol
push
sbb
call
scas
ret
add
popf
jbe
pop
adc
out
daa
xadd
insl
inc
ror
in
or
sbb
adc
ds
and
adc
mov
dec
jne
push
inc
int
popa
and
mov
insb
jl
hlt
or
fdivs
cmp
mov
mov
clc
clc
adc
ret
xchg
ficoml
adc
out
fdivl
push
jno
mov
idivb
push
push
or
imul
ljmp
mov
push
mov
jl
or
pop
loopne
lret
divb
lods
adc
xchg
mov
or
sbb
xchg
nop
cmpb
addl
xor
fisubs
jo
inc
popf
push
adc
sar
push
pushf
xor
jle
mov
xchg
pusha
fists
fistpl
lcall
and
jmp
or
loope
add
mov
xchg
dec
lret
mov
adc
sti
sbb
call
aam
inc
xlat
or
dec
ret
push
pusha
popf
cmp
mov
and
adc
push
jecxz
fwait
pop
mov
jecxz
mov
cmpsl
fistl
xor
fwait
cmp
movsb
lods
xor
movswl
sbb
pop
adc
dec
jge
fst
je
popa
mov
mov
xor
dec
mov
xor
sbb
add
add
mov
lret
icebp
push
mov
ja
mov
sbb
lods
fisttpll
dec
and
mov
push
hlt
pop
scas
xor
xchg
lahf
ja
adc
xchg
imul
rclb
mov
pop
xlat
scas
mov
popl
addr16
repnz
repz
xor
cwtl
pop
adc
add
not
sbb
pmaxub
push
add
movsb
jmp
add
dec
jl
add
or
frstor
js
outsb
push
in
std
mov
or
jae
ficompl
jp
mov
and
xor
jns
js
sti
dec
mov
pop
les
mulb
jne
psubusw
mov
push
ljmp
icebp
movsb
loope
lods
mov
stos
int3
imul
into
inc
push
and
adc
je
pop
mov
dec
ja
loope
mov
stos
fcmovnb
loop
gs
addr16
aaa
fistpl
xchg
push
pop
mov
out
imul
jecxz
movl
mov
add
mov
or
mov
add
pop
in
jbe
testl
mov
push
in
aas
push
pusha
and
cs
movsl
xchg
sub
or
jbe
daa
inc
mov
mov
imul
or
movsb
lods
pushf
dec
cltd
xchg
and
inc
roll
cmp
lea
sub
lret
mov
xor
jmp
mov
cld
int3
and
cmp
in
loopne
dec
cmpsb
or
cmp
xchg
jbe
mov
jo
pusha
outsb
jno
lcall
jecxz
pop
mov
pop
ficomps
ja
movsl
xchg
call
mov
and
movsl
std
sub
mov
jg
lods
stos
stc
push
push
popa
sbb
inc
ret
arpl
dec
aas
push
xchg
fisttpl
js
xchg
mov
xlat
testl
pop
xchg
insl
adc
pop
mov
inc
xchg
mov
mov
addb
jge
rcrb
cmpsl
jg
ljmp
test
push
shrb
jnp
stos
xor
pop
lea
mov
fdivrp
out
cwtl
enter
xor
lcall
mov
cmp
stos
or
mov
imul
fs
dec
ret
mov
ss
mov
and
push
or
inc
push
push
rclb
xlat
sub
push
mov
push
sbb
xchg
push
or
aam
sahf
loop
sahf
jmp
xchg
pop
push
add
sbb
push
sbbl
dec
test
mov
xor
std
inc
cld
add
sbb
adc
mov
fisttpl
jl
dec
jecxz
and
fistpl
add
mov
repnz
add
sbb
adc
sub
mov
mov
push
sub
dec
ljmp
fsubrs
icebp
pop
cli
pusha
fidivs
mov
out
ds
mov
lods
outsb
lock
mov
cmpsl
xlat
jb
push
jmp
aas
repz
lds
mov
test
xchg
iret
jp
inc
idiv
push
pushf
fs
rorb
sub
jbe
imul
shr
sub
xor
jns
dec
and
push
adc
stos
repz
or
sbb
xor
aam
mov
fs
rolb
adc
xchg
test
push
faddl
scas
lcall
lcall
lret
push
insb
mov
fwait
jne
jp
cld
mov
dec
or
je
fcoms
xchg
mov
notl
pop
or
xchg
and
dec
ret
dec
orl
mov
clc
lea
mov
pop
pop
jne
pusha
or
lret
insl
stos
xchg
xchg
repnz
xchg
jecxz
and
jns
mov
call
pop
repz
mov
pop
xchg
pop
cs
ja
jmp
jnp
sbbb
lahf
out
mov
aad
and
and
stc
loop
push
jle
hlt
mov
mov
pop
dec
push
shrl
daa
fcoml
or
test
sub
je
inc
or
push
adc
pop
bound
jge
lret
mov
sbb
test
mov
inc
xor
xor
shl
sub
adc
sub
xor
sub
mov
lret
xchg
xchg
push
daa
and
pop
push
addr16
inc
sbb
pop
sahf
das
mov
in
lret
sbb
int
sub
jmp
stc
mov
out
xchg
add
xor
mov
xor
cs
testb
jb
push
nop
popf
cmp
inc
cmp
mov
outsl
addr16
lcall
shl
xchg
xor
xchg
stos
dec
ffreep
aas
cld
insl
and
jbe
pop
pop
pop
mov
mov
xor
cmp
mov
push
pop
mov
and
fstpl
sbb
sahf
lock
pusha
mull
pop
mov
cmp
cmp
cmpsb
mov
loope
jmp
adc
cltd
jnp
lret
adc
mov
repz
subb
sbb
lcall
addr16
adc
adc
cmpsb
mov
jp
push
dec
ret
mov
fisubs
loopne
inc
fcmovb
inc
sbb
sbb
pushf
rcr
adc
push
adc
fdivr
xor
push
and
push
faddl
jg
mov
cmp
add
out
scas
mov
sti
pop
lret
sar
test
negb
or
xchg
mov
test
fistps
test
jl
jb
mov
mov
and
adc
mov
dec
lahf
pop
pop
jne
ffree
call
ljmp
adc
add
aaa
sti
pop
insl
push
mov
leave
stos
jg
xchg
and
insb
pop
into
movsl
jl
cmp
fwait
popf
xor
stc
adc
inc
lods
push
addb
push
add
into
aas
jmp
stc
inc
ljmp
sarl
test
push
clc
cmp
pop
dec
xchg
lret
xor
xor
in
jbe
cmp
add
sub
push
and
and
rol
out
cmpsl
ret
xor
mov
out
xor
mov
jno
sbb
adc
sbbb
outsl
add
stc
call
gs
xor
jno
mov
pop
test
fdivp
xlat
minps
jg
push
in
sarl
in
inc
sbb
insb
ss
into
cmp
rorb
imul
sarb
ja
push
or
mov
les
es
lret
xor
cmp
dec
test
imul
dec
pop
jbe
pushf
cld
mov
xchg
xchg
push
xchg
jp
rclb
das
cmpsl
fcom
xchg
mov
mov
or
inc
mov
into
xchg
mov
cltd
andb
dec
and
repnz
mov
jp
jae
push
or
out
xchg
or
xchg
fdivs
adc
shrb
pop
aam
nop
sbb
dec
cmc
xor
mov
xchg
pusha
hlt
add
mov
xchg
fimull
repnz
push
push
jae
dec
std
test
jmp
jnp
gs
dec
sbb
cs
inc
rolb
jnp
mov
sbb
sbb
and
xchg
cmp
mov
orl
in
int3
in
out
mov
fcomi
pop
imul
dec
and
imul
fbld
arpl
loope
addl
ret
mov
into
jbe
sbb
incb
fbld
mov
fs
cmp
aam
mov
test
addr16
bound
punpcklbw
filds
lcall
cmpsl
inc
cmp
dec
dec
and
adc
test
cmp
movsl
push
push
push
lods
and
mov
pop
hlt
lods
or
test
repz
loopne
or
pop
cs
push
push
and
mov
sbb
pop
repz
jbe
stos
jmp
adc
out
add
xchg
in
and
push
mov
imul
test
sbb
push
mov
iret
add
adc
cmp
mov
dec
aaa
mov
mov
cs
adc
xchg
mov
in
gs
lods
mov
cmp
cmc
movups
es
push
ret
cmc
sbb
and
pop
pop
dec
push
jne
mov
push
pop
or
or
repz
jne
jns
es
jno
mov
out
std
xlat
inc
ja,pt
or
sbb
in
cmpsb
fdiv
or
orb
insl
ljmp
ljmp
aas
loope
inc
sti
pop
add
into
dec
inc
xchg
mov
cld
pusha
and
and
nop
dec
movsl
mov
pop
lahf
jp
jb
pop
pop
push
aaa
sti
sbb
and
ret
jle
shl
mov
ja
movsl
out
add
adc
sbb
push
mov
in
mov
push
ret
gs
add
pop
jp
in
ret
loope
cmovbe
cli
fdivrp
pushf
repnz
pop
popa
sahf
int3
btc
popa
mov
jg
sbb
adc
xchg
insl
xchg
mov
cmp
imul
pop
xorb
and
pop
fsubl
push
movsl
sbb
fldl
imul
cmpsb
fnsave
mov
adc
bswap
int
aad
int
scas
hlt
adc
cmp
stos
mov
fstpt
jmp
and
insb
push
fbld
mov
xor
pop
test
dec
dec
cwtl
fldt
jmp
cmp
in
mov
cmp
xor
xchg
pop
sub
daa
popl
ret
out
pop
jbe
daa
fadd
cmpsb
jecxz
xchg
mov
sti
fisubs
jnp
mov
mov
mov
sbb
pop
lods
cmpsb
jmp
mov
je
sbb
rclb
push
adc
bound
imul
xchg
in
add
shlb
push
ret
jnp
or
sbb
hlt
and
lock
int
xchg
sbb
insl
pop
mov
sbbl
jno
xor
aas
cmp
mov
mov
and
movsl
cmp
js
cmc
sub
sub
lcall
negb
push
jnp
rolb
or
test
iret
and
roll
jb
inc
jo
xchg
xorb
jbe
pop
mov
add
dec
ret
das
outsl
data16
lods
jae
jnp
int
inc
add
leave
loop
and
orb
out
adc
inc
fcmovne
jle
adc
lret
xor
fisubs
rol
push
mov
lods
stc
dec
cmp
sbb
dec
fcoml
leave
cmp
push
push
sub
adc
pop
fwait
mov
xchg
mov
test
cli
pop
xchg
enter
inc
inc
pusha
js
or
clc
hlt
out
loopne
in
std
sub
push
mov
sub
cli
push
xlat
sti
std
mov
cmpsb
mov
ret
jns
rcll
xchg
lahf
cmpsb
xchg
mov
mov
ret
iret
sbb
pop
int
xlat
pop
dec
aam
pop
das
push
mov
pushw
cs
xlat
and
ror
jmp
mov
mov
jns
das
mov
jbe
xchg
pop
in
inc
mov
stc
adc
cmp
push
insl
clc
scas
jb
out
int
mov
mov
xchg
pop
bswap
stos
fmull
loopne
pop
insb
popf
push
push
add
dec
push
mov
push
dec
outsb
adc
fadds
mov
leave
int3
xor
out
test
push
pop
sub
inc
mov
add
insb
inc
lods
and
mov
inc
pop
mov
jnp
fistps
xor
test
loop
loop
jg
cmc
nop
mov
iret
loopne
xor
or
aam
pop
imul
in
je
and
test
inc
popa
mov
ret
pop
inc
mov
mov
jg
mov
mov
dec
je
movsl
xor
mov
mov
in
bound
mov
jg
push
ret
push
in
enter
jg
adc
pop
sbb
mov
rcr
fnstcw
mov
jo
cli
adc
cmp
adc
mov
std
fnstenv
cld
loope
push
mov
gs
jnp
lret
mov
jne
stc
sbb
push
xchg
in
ficoml
or
cmp
das
fsubrs
xor
mov
xor
clts
les
imul
int3
mov
pop
je
jnp
xchg
or
arpl
movsb
icebp
mov
rorl
inc
add
stc
bound
rclb
les
push
imul
cmpsb
scas
push
or
outsl
lods
push
test
push
lea
sbb
js
add
lret
jbe
in
or
outsl
or
scas
icebp
inc
or
add
int3
jg
dec
jnp
inc
mov
sbb
addr16
shrl
lret
in
xchg
sbb
lret
xchg
xchg
cmpsb
push
dec
adc
pop
xchg
inc
sbb
icebp
sbb
inc
rclb
pop
pop
adc
cmp
nop
insb
sub
in
pop
js
inc
cmp
or
inc
xor
int
pushf
dec
and
push
repz
dec
jecxz
neg
fisttpl
in
sbb
out
mov
popa
cli
cmpsl
aas
inc
cmp
sub
sub
jb
rorb
xor
jne
jg
inc
cld
cli
xchg
lret
add
mov
adc
int
ljmp
pusha
test
mov
lahf
out
out
arpl
xchg
fistpll
dec
hlt
lret
cltd
jb
jecxz
daa
dec
add
cmp
jp
jno
popa
cld
inc
stc
pop
lods
fmul
adc
xorl
dec
fld
sbb
add
and
xchg
jne
iret
dec
imul
lcall
lret
mov
roll
adc
int
lods
inc
movsb
bound
pop
inc
jnp
xor
mov
rep
xor
out
jmp
std
test
stos
fistpl
fldl
bound
and
decb
vminss
mov
mov
cli
test
jb
pop
lret
stc
add
push
adc
nop
cmpsl
orl
mov
pop
mov
rcr
mov
into
in
push
or
push
cmp
dec
in
loop
xor
das
push
pop
adc
cmp
dec
cmp
dec
inc
or
jmp
mov
in
cmp
add
pop
jns
out
add
pop
mov
mov
sbb
push
lock
and
push
xchg
das
js
out
jo
jnp
test
arpl
repnz
and
shrl
iret
mov
cld
inc
cmp
mov
sbb
leave
or
sub
push
ret
dec
setp
sub
fnsave
push
ja
mov
and
in
hlt
mov
fadds
stc
sbb
shld
aam
add
scas
stos
inc
insl
mov
xor
add
push
mov
jle
pop
aas
rcll
aas
in
mov
lds
sub
xchg
out
dec
mov
aad
adc
lock
sahf
push
dec
adc
lret
cmp
pop
pop
and
stos
aad
aaa
cs
insb
cmp
out
mov
shl
push
ret
divl
test
mov
scas
aas
ja
int3
push
ss
js
xchg
mov
nop
lret
push
mov
and
cmp
idivb
adc
mov
stos
sti
pop
movsb
pop
punpckhdq
xor
push
jns
popa
jge
enter
ficoms
fcmovbe
and
in
push
sbb
and
xchg
xchg
pop
jmp
mov
jecxz
jnp
jnp
movsb
mov
rcr
popf
cld
pop
push
and
mov
mov
bound
cltd
sub
insl
sti
out
cmp
mov
enter
and
inc
ret
mov
ss
mov
sbb
fs
xchg
adc
dec
xchg
clc
jne
sub
sbb
sbb
jge
pusha
sub
pop
mov
adc
test
ret
mov
xchg
and
cmc
inc
push
gs
rolb
dec
out
mov
bound
mov
mov
xor
lods
xchg
mov
adc
imul
mov
pop
xor
insb
repnz
mov
mov
fldenv
and
cmp
sbb
popl
sbb
pop
jl
mov
mov
lret
push
lahf
cmpb
in
push
mov
movsb
sbb
and
mov
push
repnz
add
push
cmp
push
cmc
or
in
push
sub
lcall
mov
insb
sti
jle
rclb
and
daa
out
andl
jns
push
adc
pop
xchg
or
push
ja
scas
es
ret
mov
call
push
loop
into
das
add
lock
mov
jg
imul
mov
movsb
sahf
aad
aam
sti
inc
fyl2x
xlat
shlb
data16
insb
icebp
int3
inc
out
jg
jno
pop
rorb
popa
cmp
adc
mov
push
aam
xor
xor
jns
movsl
jmp
xchg
icebp
lcall
outsl
cmp
xchg
aas
adc
sbb
cltd
jno
sub
in
add
jl
sub
cmc
movb
rcrb
and
stos
jb
shlb
jl
jmp
mov
repnz
sbb
stos
dec
mov
inc
je
pop
and
fdivl
mov
push
je,pt
and
xchg
jbe
lods
inc
mull
push
xor
lret
add
mov
add
sarl
cmc
or
sbb
push
push
testl
sahf
lods
jge
inc
aaa
pop
les
push
leave
add
mov
fistpl
jecxz
pop
add
enter
inc
mov
push
jo
and
jp
outsl
cmp
fucomi
sbb
mov
lds
lret
outsb
adc
sub
mov
int3
add
bound
or
sbb
adc
xchg
dec
hlt
daa
pop
cmp
es
std
scas
jmp
sub
inc
mov
inc
add
ret
std
iret
xor
add
xchg
int
cltd
mov
test
repnz
lods
xlat
inc
leave
jge
adc
ss
push
pop
dec
dec
mov
pop
cli
int
cmp
lcall
js
jne
orl
test
scas
inc
mov
out
jno
cltd
daa
inc
dec
scas
lds
cmpl
or
add
dec
jnp
xchg
stos
push
fiadds
add
andl
ret
xchg
hlt
sbb
and
jle
fimuls
loopne
in
in
push
pop
xchg
lods
or
xchg
or
push
loopne
or
push
pop
mov
jb
inc
imul
push
jle
std
xchg
sbbb
dec
lods
shlb
xor
inc
roll
stos
movsb
mov
add
sub
xor
jg
push
mov
push
mov
mov
sub
shll
inc
push
or
ret
sub
in
lds
inc
jp
dec
jl
mov
push
loope
adc
cmp
cmp
test
mov
jle
push
mov
jg
pop
mov
pcmpgtw
mov
mov
push
mov
dec
dec
leave
adc
and
cmp
add
jge
insl
subl
push
clc
push
in
mov
lock
push
push
fsub
adc
aas
xchg
sti
cmp
test
into
movsl
add
insb
stc
sub
cmp
adc
clc
mov
lock
mov
insl
pushf
jno
mov
inc
std
int
pop
xchg
jg
mov
adc
inc
push
inc
xchg
imul
add
cmp
ret
lds
das
mov
mov
gs
or
cmp
mov
mov
xor
dec
fistpl
xlat
adc
xchg
ljmp
mov
inc
inc
loopne
add
lea
or
push
xor
sub
pushf
add
or
insl
clc
cmpsl
lret
call
out
insb
mov
jne
jl
or
mov
fldl2e
mov
fldt
sbb
jge
adc
std
push
xchg
push
or
push
sub
or
mov
pushf
cld
mov
jae
mov
fstpt
insl
inc
leave
sub
outsb
push
or
insl
mov
arpl
adc
mov
sub
and
and
jo
dec
addr16
clc
into
cs
add
lods
cmp
mov
in
inc
mov
movsb
cmpsb
jno
cmp
jp
lea
lods
stc
jmp
adc
ret
push
in
sub
lods
test
addb
or
pop
faddl
into
ljmp
cld
leave
jae
dec
mov
movsb
ret
das
js
inc
mov
or
stos
cmp
cmc
fbld
xor
pop
sub
sbb
stc
xchg
mov
stos
enter
js
scas
dec
sbb
push
lcall
imul
loop
inc
push
cmp
mov
inc
xchg
mov
nop
inc
adc
pop
mov
nop
jno
mov
sbb
xor
mov
pop
int3
out
out
xor
mov
fnstenv
or
incl
and
into
push
arpl
or
aad
lock
push
sub
dec
ss
add
xchg
cwtl
shlb
push
notb
pop
leave
and
mov
pop
adc
add
bound
je
xchg
ja
jmp
cmpb
repz
cltd
or
ss
leave
clc
and
jb
aaa
pop
dec
mov
stos
xor
test
cli
xchg
rorl
call
fcompl
out
jae
sub
imul
push
xchg
std
orl
xchg
mov
test
sub
jge
mov
out
push
sbb
loop
out
ret
add
outsl
test
insl
inc
dec
add
inc
inc
dec
lods
or
pop
xor
fcomps
cmp
iret
loopne
mov
push
jo
adc
pushf
repnz
fbstp
in
cmp
inc
mov
inc
ror
loop
xchg
xchg
mov
xchg
mov
xchg
jle
sbb
pop
xchg
in
xor
aad
fstl
and
int3
mov
sbb
dec
inc
xchg
push
cs
addr16
push
aad
add
inc
icebp
sbb
in
scas
ret
mov
sbb
cld
aad
stc
adc
push
push
dec
xchg
push
and
loope
dec
adc
andl
bound
cs
in
test
in
shrb
pop
aaa
ljmp
fistpl
arpl
je
cmp
dec
rolb
iret
adc
leave
pop
inc
xlat
mov
lcall
in
add
push
or
jne
mov
sub
addr16
mov
add
mov
movsb
out
in
sub
lods
pop
call
aaa
scas
dec
cmpsb
in
sbb
lods
push
pusha
sub
jecxz
mov
mov
jmp
ret
xchg
cld
mov
pop
push
mov
sub
mov
xchg
mov
into
mov
test
enter
mov
xor
push
pop
mov
cli
mov
jne
xor
icebp
or
insl
dec
pushf
daa
popa
dec
dec
cmp
out
mov
push
push
shlb
pop
lret
push
mov
or
pop
xor
push
cld
mov
dec
or
mov
in
icebp
mov
adc
in
test
aas
insl
fsubl
mov
movaps
jg
xchg
sub
xchg
ret
sbbb
inc
popa
jg
xchg
mov
mov
mov
pop
cltd
jmp
cmp
cmp
rcll
movsl
lcall
int3
cltd
sub
movsb
out
push
filds
adc
kaddb
pushl
inc
lcall
mov
ret
fsubl
add
inc
cmp
stc
test
jo
in
mov
movsl
cltd
mov
dec
adc
inc
pop
shll
enter
mov
mov
jo
adc
js
adc
inc
je
jo
and
outsb
js
mov
ss
loopne
imull
leave
sub
jecxz
scas
sub
xor
mov
mov
gs
push
inc
mov
out
dec
stc
mov
sub
sti
jmp
popa
rcll
adcl
ret
gs
cmp
lock
add
mov
fldenv
jns
idivb
in
sti
rol
pop
pop
mov
mov
jns
dec
mov
sbb
lcall
sub
sbb
in
cmpsl
test
ficomps
rclb
adc
scas
fimull
adc
test
int3
sbb
pop
rcrb
jp
inc
xlat
sub
ss
fadds
jo
xchg
aad
xchg
popf
sub
outsl
ja
fs
xorl
add
clc
fs
cli
cmpsb
mov
fstp
ficoml
jo
bound
cmpsl
jns
cmpsb
jno
stos
xlat
aad
jl
push
aam
loope
ret
jmp
adcb
push
cmp
pcmpgtd
push
sar
lock
push
clc
push
stc
test
cltd
aam
and
daa
sbb
dec
test
ret
imul
pop
aaa
sahf
outsl
jg
and
dec
gs
pop
icebp
cmpsb
or
sbb
sti
int3
in
dec
fcmovnbe
pop
mov
mov
push
push
add
xlat
mov
mov
andb
push
fidivrs
or
cli
add
scas
test
adc
jge
jge
mov
das
es
fistpl
test
jnp
int3
mov
and
jo
dec
adc
sub
sub
xorl
xchg
insl
ret
stc
cs
adcb
jg
adc
ja
clc
mov
incb
je
xchg
add
lcall
add
int3
mov
sub
repz
xchg
out
je
or
mov
cmpsl
inc
movsb
xchg
stos
test
cs
sbb
addr16
rclb
testl
daa
cmp
lret
stos
fs
mov
sub
aas
test
fisttpll
aam
push
push
xor
jb
fistps
or
addr16
mov
daa
sahf
aas
adc
push
icebp
push
pushf
push
mov
add
cmp
in
adc
int3
pushf
repz
pop
lds
aam
mov
xor
test
mov
inc
dec
insl
pop
xor
sub
inc
jns
aad
xchg
bnd
cmpsl
repz
popa
adc
inc
adc
outsb
xor
into
push
mov
push
decb
mov
or
xlat
sub
insl
ret
scas
and
cmp
mov
lods
inc
out
push
cmp
fstl
ret
or
iret
cmp
push
out
imul
jge
cmpl
cmp
clc
insl
jp
push
mov
les
xor
sahf
scas
and
cmpsl
jl
pop
pushf
lock
or
dec
mov
fildll
mov
mov
psubq
test
imul
popf
popa
xor
ss
mov
xor
ret
xchg
mov
cmc
pop
lcall
xchg
add
pop
cmp
mov
bound
push
xor
cli
mov
dec
in
cmp
add
jno
add
mov
stos
xchg
int
aaa
sti
jnp
mov
aad
pusha
inc
jg
pop
int
rolb
lea
test
or
jae
outsb
dec
insl
fidivs
stc
xchg
lahf
daa
imul
dec
ljmp
or
lock
fsubr
sbb
stc
adcl
adc
in
je
xor
sbb
lret
xchg
add
sub
lds
mov
xor
les
das
shll
subb
mov
adc
scas
pop
fstpt
roll
pop
inc
rorl
cmp
xor
lods
jnp
xor
icebp
adc
js
mov
pusha
lods
dec
or
mov
cmp
jp
loopne
xchg
andb
dec
mov
push
push
rorl
push
lret
loope
es
push
sub
sbb
fxam
fadds
into
cmp
xor
pop
outsl
add
mov
mov
fldt
stc
push
cmp
into
pop
sbbl
loop
jmp
stc
mov
jge
in
dec
lods
pop
push
push
or
test
insb
cmp
dec
mov
push
inc
mov
inc
dec
xlat
test
daa
arpl
ret
shrb
cwtl
out
inc
insl
dec
dec
hlt
xor
dec
mov
push
push
add
sbbl
add
in
lcall
std
push
dec
pop
xlat
outsl
dec
popf
mov
cwtl
ljmp
out
aas
clc
xor
add
xchg
or
aad
pop
fs
aam
sbb
push
leave
jae
icebp
or
imul
xor
cwtl
dec
dec
xor
sub
adc
mov
inc
mov
adc
jg
popf
daa
mov
sbb
inc
sbb
rorb
pop
jb
jno
pop
ljmp
jg
out
or
adc
ja
out
fstpt
xchg
and
cs
sub
outsl
mov
cmp
cs
mov
jnp
fisubs
mov
lods
movl
in
pushf
mov
adc
or
mov
jge
jne
out
fs
sti
mov
bts
jge
imul
shll
arpl
lret
ret
mov
inc
pop
cmc
sub
pop
sahf
xchg
adc
mov
cwtl
mov
cmp
ljmp
cli
push
mov
bound
jge
and
mov
pusha
scas
clc
cmpsb
sbb
test
mov
inc
pushf
fwait
ss
xchg
fsubs
and
stos
leave
add
loopne
pusha
push
mov
push
std
jno
mov
cmp
stc
jmp
out
push
mov
test
dec
inc
mov
icebp
push
or
mov
add
test
or
sub
fidivrs
call
mov
xor
scas
enter
mov
daa
jge
cmp
rcrb
mov
jmp
mov
and
divb
js
dec
mov
fcmove
addb
mov
iret
shrb
jecxz
je
insl
std
cmp
into
or
lods
jo
sti
sbb
out
into
push
xchg
push
sub
push
mov
mov
sbb
push
fcomps
xor
pop
je
cmp
adc
push
leave
into
lahf
movsl
int
xor
rorb
jle
loope
inc
insb
mov
add
sub
or
pop
inc
out
push
sub
into
pop
jl
mov
movsb
push
out
mov
mov
insl
sub
mov
fistpll
push
cmp
push
jl
pop
pop
loop
jae
js
pop
dec
cmpsb
jmp
lret
jl
ds
pushf
outsb
out
aam
cltd
std
sti
pushf
outsl
das
ret
data16
fdivrl
sub
inc
mov
push
lods
xor
loope
inc
in
xchg
pop
cmp
push
xor
imulb
call
xor
mov
pop
dec
aam
sahf
fistps
and
xchg
int
js
cltd
insl
jle
push
cli
jmp
xor
mov
decl
pop
xor
xchg
loop
test
pop
insl
mov
clc
jnp
mov
add
cmp
pop
xlat
mov
pop
jg
xor
idiv
out
mov
movsb
int3
lds
dec
jns
inc
adc
pop
mov
dec
stos
jg
or
fcomps
push
insb
jae
add
das
xor
push
sbb
sub
cmp
data16
into
sbb
ljmp
roll
adc
and
call
sub
fs
and
mov
cmp
inc
jl
arpl
mov
rcll
dec
jnp
add
inc
xlat
addr16
into
and
nop
mov
mov
mov
ds
subl
ljmp
jmp
and
sti
ret
pop
push
sbb
xchg
mov
inc
push
sarb
inc
jg
daa
dec
sbb
mov
pop
mov
sub
jo
mov
in
adc
dec
adc
dec
and
pop
sbb
cmp
imul
jbe
arpl
pop
sahf
dec
in
es
addr16
notl
cltd
rcr
xchg
mov
imul
iret
in
add
mov
lds
mov
jmp
inc
jb
and
mov
sub
sub
ja
inc
jmp
iret
je
pop
imul
cs
xor
inc
insb
mov
cmp
rcll
cmp
push
jp
inc
mov
push
xlat
clc
and
lods
jb
jbe,pn
xor
sbb
lea
sub
pop
pop
or
sbb
adc
sbb
out
sub
ds
cmpsb
inc
mov
pop
push
es
out
push
fistpl
push
pop
xchg
lahf
movsl
add
sbb
sbb
stos
mov
mov
pop
adc
pusha
sub
jno
mov
inc
jl
clc
dec
xor
fs
mov
add
dec
jne
jcxz
imull
sub
test
out
and
push
data16
adc
dec
jnp
xchg
repz
shrb
out
sarl
pop
pop
cmc
push
bound
jb
aam
addr16
dec
gs
dec
xchg
dec
xor
lcall
neg
lods
jo
push
jl
pop
add
in
mov
ja
push
cmp
sub
in
jae
in
icebp
seta
fcoms
int
adc
outsl
sbb
pop
mov
inc
cli
cwtl
adc
leave
movsl
ja
out
sbb
aam
sub
cmpsl
sub
addl
sbb
in
stc
xchg
pop
mov
or
cmp
sub
mov
xor
inc
addb
mov
idiv
and
shll
push
mov
test
push
in
lsl
aad
out
mov
add
add
push
loop
imul
hlt
xor
lods
rcr
pop
push
sbb
jmp
stos
dec
and
mov
xor
sbb
mov
adc
inc
xor
mov
arpl
dec
mov
leave
iret
cmpsb
pusha
fdivrs
push
xor
add
clc
pop
mov
xchg
jle
dec
jecxz
pop
xchg
dec
lcall
dec
push
loopne
sub
rcrl
sbb
rcrl
jg
push
jge
inc
ljmp
into
xchg
push
xchg
add
nop
shl
outsb
push
inc
das
cld
test
add
jb
push
cmp
jbe
test
add
fmuls
xchg
or
mov
dec
xor
jmp
test
stos
pop
out
or
cmp
jo
jecxz
dec
decl
inc
aas
mov
pop
sub
mov
fldt
jecxz
push
and
into
jns
lahf
icebp
cmp
pop
aad
push
loope
dec
mov
mov
fisubs
int3
nopl
mov
inc
arpl
scas
cmp
fs
cli
lods
adc
jge
xor
repz
push
imulb
xor
inc
push
push
cmp
sub
lds
shl
ja
xchg
jle
sti
lcall
sbb
xor
leave
cmp
inc
nop
sbb
mov
sub
xor
adc
ret
pop
push
fimull
cli
pop
loope
add
fsub
cmp
adc
sbb
idiv
and
test
leave
inc
enter
push
lods
sub
sbb
push
pusha
cmp
mov
push
mov
es
add
add
pusha
or
ret
setp
xor
adc
sub
jl
jne
pop
std
or
shll
add
or
ret
add
js
leave
fcoml
lcall
ret
sti
lds
pushf
push
mov
xchg
loop
rclb
mov
pusha
fsubp
mov
or
movsl
push
pushf
inc
dec
lock
mov
das
jecxz
mov
or
mov
mov
iret
insl
xchg
outsl
push
fimuls
out
xchg
pop
test
or
fimull
leave
lds
jg
iret
jne
and
push
or
sti
and
and
mov
xchg
sbb
outsb
ret
shll
addr16
hlt
sub
addr16
mov
fcomps
jne
pop
cmp
dec
sahf
pop
push
ret
sub
in
and
in
daa
xor
add
stos
jne
ljmp
cmc
adc
mov
xor
jge
pusha
cmc
in
push
shrb
push
xor
lock
ds
pop
rclb
pop
mov
int
mov
xchg
orl
cli
scas
mov
ret
nop
cmp
inc
imul
xor
and
dec
push
push
loopne
cmc
lret
mov
xchg
inc
mov
push
pop
xor
test
imul
into
mov
lret
out
add
mov
lahf
sub
testb
int
pop
xor
mov
rol
sbb
lcall
cltd
mov
add
fbld
shl
icebp
sub
push
adcb
inc
mov
imul
xor
mov
cli
in
lea
faddl
jne
and
roll
push
sbb
push
sbb
clc
bound
adc
shrl
adc
mov
push
insb
adc
push
arpl
inc
add
inc
outsl
jge
cwtl
leave
ss
push
dec
popa
int
imul
sti
enter
inc
cmp
add
mov
in
add
mov
jno
and
daa
jl
call
jp
ljmp
repz
lea
out
out
xor
mov
arpl
stos
cmp
xor
cld
hlt
in
leave
push
xchg
sbb
subl
insl
sbb
xchg
into
mov
lahf
cmp
lods
add
cmp
xor
movsb
rep
insb
sbb
mov
adc
lret
call
ds
inc
fs
testl
pop
jle
sub
dec
push
loopne
icebp
out
andb
addb
es
andl
mov
jge
int3
out
add
push
or
jl
mov
cmp
inc
aas
insb
xor
dec
stos
cmp
pop
test
std
test
nop
push
sub
and
add
dec
sub
inc
add
and
out
cmp
outsb
scas
and
mov
or
stc
pop
pop
sti
outsl
std
mov
pusha
and
cld
mov
xchg
pop
xchg
cmpsb
jnp
sub
xor
sub
pop
sbb
inc
lds
push
jecxz
loopne
es
adc
mov
lock
or
ficoms
mov
outsl
daa
add
cmp
insb
sbb
dec
fninit
ja
xchg
jl
jp
adc
inc
aas
cmp
inc
lret
stos
jns
add
jns
jns
add
mov
scas
pop
shlb
push
ss
dec
ret
or
jge
jbe
test
loopne
or
inc
and
fcmovnu
or
hlt
push
mov
sbb
repnz
xchg
or
push
or
popf
dec
pusha
mov
xor
cld
fistpl
imull
add
mov
mov
and
pop
and
int3
js
mov
jns
add
sbb
lret
std
inc
fisttpll
push
push
aaa
sarl
fistpl
mov
fiaddl
dec
imul
aad
pop
popa
es
js
dec
repz
cmp
jnp
leave
pop
sub
aam
popa
mov
outsl
sbb
jecxz
fbstp
push
jae
mov
xchg
in
or
fistps
sub
jo
aaa
push
cmp
inc
test
repz
test
repz
in
cld
movsb
bound
es
mov
lahf
ret
inc
inc
gs
cmp
xor
jle
pop
mov
add
jge
daa
xor
dec
sub
sub
xchg
push
stos
out
fmuls
mov
fs
mov
xor
movsb
add
add
ss
mov
xorl
ficompl
jo
add
adc
out
pushf
mov
dec
test
pop
cmp
or
push
popa
clc
dec
inc
enter
jp
ja
aaa
scas
pop
insl
jb
scas
ret
pop
add
lock
in
sub
jmp
jge
lret
popf
cmp
lcall
jle
cld
sbb
in
movsl
lahf
xor
mov
fcoml
jnp
xchg
xorl
rorl
fsubr
test
pusha
repnz
popf
xor
inc
fldln2
adc
adc
and
out
faddp
loope
jbe
sbb
push
rcl
mov
and
cmpsl
test
xor
fs
mov
mov
repnz
xchg
call
mov
jns
dec
xchg
cmpsb
sidtl
fidivl
inc
push
and
cmp
cmpsb
xchg
jp
mov
mov
cmpsb
popf
fldcw
in
jge
lret
stos
es
mov
lods
push
ret
pop
cwtl
mov
ffreep
testb
xchg
jl
pop
and
add
dec
mov
gs
jb
adc
popa
sti
sbb
mov
mov
mov
lea
fimull
aad
pusha
test
insl
jbe
movsb
mov
clc
sbb
mov
inc
hlt
adcl
push
push
stc
mov
mov
jo
xchg
popl
xor
shrb
mov
ret
push
or
sbb
jo
push
push
cmp
imul
pop
in
popf
insb
mov
xor
push
push
je
lea
adc
pop
das
push
cwtl
push
sarl
mov
adc
xchg
inc
int3
and
in
insb
cs
mov
mov
lahf
pusha
push
into
xor
in
push
stc
ficomps
mov
mov
dec
cs
lahf
out
adc
cmpsb
mov
lret
icebp
sbb
sbb
sub
push
repz
sbb
pop
arpl
add
mov
iret
lea
mov
mov
jmp
push
bound
fisubs
cmp
add
and
out
iret
pop
mov
dec
mov
push
cmp
jns
pop
lcall
test
mov
rclb
dec
xor
cmp
hlt
std
push
scas
pop
mov
dec
push
bts
pushf
xorl
aam
addl
stos
xlat
add
dec
daa
add
mov
sahf
subb
push
faddl
cmp
movl
rcl
ret
inc
lock
imul
inc
fs
mov
sar
jmp
sub
mov
je
push
jmp
popf
into
pop
stc
arpl
sub
adc
pop
jae
sbbb
cmpsl
xchg
dec
shlb
enter
mov
in
pusha
insb
push
pop
popl
out
sbb
or
ss
mov
inc
xor
cmc
cmp
rcr
mov
mov
rorl
jle
dec
jno
stos
movsb
and
daa
sub
lcall
cmpsb
data16
addr16
imul
pop
popa
enter
push
test
test
sub
iret
xor
add
icebp
jo
mov
xchg
push
dec
shlb
mov
arpl
and
pop
pop
xor
testl
jne
loop
adc
inc
push
pop
enter
lret
inc
xor
int
mov
and
and
cmp
rcrb
popf
fwait
xor
ljmp
and
hlt
aas
sub
push
rorl
filds
jmp
mov
aaa
je
aad
clc
movsl
enter
outsl
subl
fstl
lds
shr
aad
lods
push
push
cmp
mov
mov
jb
cmp
and
pop
cmp
outsb
add
fcoml
mov
addr16
xor
add
and
aam
cmp
jge
pop
jp
call
ror
fucomi
jb
pop
xorl
cld
idiv
jmp
sbb
out
mov
sub
push
mov
je
testb
jmp
idivb
test
ficoms
mov
mov
fwait
xchg
cmpsl
jae
pop
mov
adc
and
adc
sahf
adc
fadds
loopne
hlt
inc
sbb
push
into
dec
lea
xor
mov
cmp
and
pop
add
xchg
shlb
push
xchg
mov
adc
test
out
lods
push
cltd
sbb
outsb
dec
or
push
gs
adc
outsl
mov
jb
int
fisubrs
push
pop
add
pop
inc
rcll
dec
andl
add
repz
aad
or
ret
add
icebp
or
inc
lock
movsl
push
outsl
inc
pop
mov
mov
ja
mov
ret
cli
adc
iret
ja
or
push
or
fs
mov
movl
pop
shll
pop
jno
xor
jp
test
test
fistpl
dec
inc
loop
pop
std
movsb
out
shl
mov
lahf
xchg
mov
repz
mov
add
pop
popf
mov
leave
fwait
repnz
jae
int3
loopne
stc
adc
sub
mov
jp
or
jmp
mov
popf
xchg
rorb
out
mov
mov
fldcw
movl
adc
stc
ds
jnp
fstps
iret
jno
iret
fs
mov
std
push
addr16
pop
fsub
xor
jbe
pushf
add
xor
pushf
dec
pusha
or
jo
and
mov
jbe
jns
sti
out
js
iret
inc
inc
mov
dec
cmpl
mov
stc
test
add
xchg
mov
push
ss
decl
outsl
fisubrs
and
and
xchg
and
xchg
inc
call
fldcw
and
leave
dec
mov
lods
jmp
int
ret
out
cmp
fmuls
ss
pop
sahf
or
mov
loope
std
xor
xchg
cmpsb
cmpb
cmp
fbstp
jmp
and
dec
hlt
fmuls
pop
lods
fwait
popf
xchg
dec
dec
popf
test
scas
scas
sub
fs
adc
sbb
jecxz
or
insb
mov
pop
sbb
nop
fmul
sbb
cmp
data16
xchg
push
cmpl
pop
sbb
xchg
stos
add
js
jnp
rcl
out
fisubrl
cmp
mov
lret
movsl
stc
mov
imul
push
outsb
cmp
icebp
or
mov
cmp
stos
pop
mov
mov
pop
outsl
add
adc
mov
push
jg
sub
ret
xchg
mov
or
in
jmp
xchg
cmc
cmp
cmp
sbb
jne
test
jmp
dec
sbb
loop
cmp
sub
sub
push
aaa
xchg
ds
les
dec
push
clc
mov
pushf
xchg
mov
lea
xchg
jl
sub
aas
outsl
add
push
or
xor
scas
mov
jp
aas
mov
ljmp
sub
call
cmp
ljmp
jecxz
negb
roll
mov
jns
lds
or
mov
outsl
shrb
xor
into
pop
xchg
mov
rcr
lret
arpl
popa
into
rcl
inc
add
fisubl
lods
mov
fs
sub
push
add
pop
popa
test
das
lods
mov
subl
xchg
or
mov
pop
lea
push
popa
push
jle
mov
sar
aam
push
and
cmp
testl
insb
outsb
out
and
inc
imul
add
or
push
stos
popa
clc
in
push
jge
sbb
xor
daa
sbb
das
xchg
dec
sbb
jae
sub
pop
sub
inc
mov
and
lret
stos
and
scas
mov
arpl
cltd
xchg
sbb
test
dec
inc
into
test
in
daa
inc
fildl
xor
sbb
les
aaa
rclb
dec
fimull
cld
cmp
dec
into
cltd
jne
xchg
push
test
push
rorl
cmpsb
imull
pushf
cmp
cmpsl
push
inc
mov
mov
push
push
pop
into
sbb
dec
lcall
fstl
aam
jbe
arpl
popa
jnp
pop
test
dec
out
test
push
mov
cmp
mov
mov
pop
and
inc
push
or
sahf
adc
insb
cs
outsb
popf
sub
sbb
arpl
cli
fiadds
mov
xchg
jae
push
push
sub
movsl
inc
mov
adc
xor
pop
push
xchg
add
sub
cmp
add
add
addr16
sub
push
out
bound
mov
sub
int3
fistpl
cwtl
cld
pop
cmp
in
das
xchg
orl
inc
push
xor
mov
xor
jecxz
dec
std
call
sbb
lock
arpl
or
jns
movsb
lret
sbb
fsubrs
js
mov
fcomp
mov
dec
xor
jmp
clc
add
inc
sar
push
cmp
rcll
adc
adc
negl
out
sbb
call
jae
xchg
mov
insl
icebp
dec
and
loop
xchg
lods
xchg
mov
sbb
and
cs
push
pusha
fadds
out
rclb
push
and
aam
xchg
add
clc
sbb
insl
ror
lods
xor
mov
cmp
cmpb
mov
inc
in
test
dec
shrl
sub
xor
les
dec
push
pop
mov
pop
xor
inc
dec
dec
shll
out
dec
movsl
pop
pop
arpl
sbb
xlat
aaa
cli
dec
inc
inc
int
sub
out
hlt
outsb
out
in
xchg
lock
or
push
aas
pop
sub
adcb
sub
mov
xor
inc
xchg
sar
inc
pop
push
jp
or
jmp
add
jecxz,pn
or
inc
ret
xchg
jle
inc
les
ret
adc
aaa
icebp
sub
add
xor
dec
push
inc
arpl
jae
cmp
ffreep
int3
mov
scas
sub
aam
xchg
ja
out
loop
nop
xchg
sbb
push
test
mov
arpl
dec
lock
scas
es
xor
sub
aaa
shlb
in
in
sbb
cwtl
sbb
movsb
push
mov
and
xchg
js
lahf
xchg
xor
inc
pusha
sbb
stos
dec
ret
cmp
lock
stos
jns
mov
xor
inc
inc
mov
sub
jnp
add
movsb
fadds
shlb
leave
cmp
add
push
addr16
cwtl
or
jl
pop
mov
cmp
dec
fs
cmpb
out
loope
jecxz
jg
xchg
push
mov
popa
jae
push
jmp
pusha
push
ret
aam
cmpsl
daa
xlat
cmp
or
mov
pop
jnp
jl
scas
sub
test
loopw
outsb
arpl
outsb
and
ret
out
mov
cmpsb
and
pop
outsl
ret
fcomi
xchg
out
dec
xor
or
aaa
fiaddl
lds
pusha
mov
dec
je
mov
sub
test
pushf
lock
cmp
add
add
inc
inc
nop
jp
cmpsl
shl
xor
sub
pusha
mov
fnstcw
bound
jl
push
inc
mov
std
jp
xchg
nop
mov
sub
mov
arpl
jbe
out
int
leave
mov
das
stc
movups
xchg
out
sub
lret
cwtl
mov
ss
aas
and
jmp
push
iret
jp
std
gs
dec
insl
fists
cmp
push
fs
leave
repnz
lock
repz
push
je
imul
fisubl
cmp
loop
mov
ja
cmp
lds
mov
push
mov
scas
test
or
mov
mov
dec
xchg
adc
and
in
jg
call
mov
pop
mov
adc
stos
xchg
in
or
xor
arpl
add
mov
jbe
mov
xchg
cmp
or
int3
mov
fldenv
or
aas
xchg
mov
mov
pop
sti
call
mov
and
push
or
fimuls
arpl
cmp
outsl
inc
repz
sbb
popf
shr
sub
jno
insb
jnp
push
insl
add
ss
pop
mov
stc
adcl
pop
popf
or
and
dec
jg
ret
aad
mov
popf
or
xor
push
clc
jo
xchg
ds
dec
and
mov
nop
jmp
fmull
push
bound
and
repz
je
sbb
cmpsl
or
adc
mov
mov
xchg
shr
fcompl
inc
test
xchg
jo
mov
adc
mov
in
mov
cwtl
pop
popa
pop
aad
mov
sbb
call
loop
add
dec
jb
movsb
xor
in
fldl
iret
jb
sub
or
push
iret
adc
fcmovb
xchg
icebp
into
push
sub
jne
add
push
push
or
and
cli
push
or
sbb
cmc
outsl
and
sbb
jl
icebp
mov
mov
jns
sub
scas
jmp
sub
lock
lods
mov
jo
mov
je,pn
imul
or
jnp
sahf
ret
dec
push
jmp
ljmp
mov
shrb
inc
inc
fisttps
aam
sub
mov
sti
adc
repz
push
scas
sarb
mov
out
or
xor
push
add
cli
xor
std
mov
fdivs
jo
push
lea
sbb
push
or
stc
xor
adc
mov
xchg
dec
fldt
rcll
pusha
pop
sahf
in
repnz
lret
in
fwait
or
dec
and
or
rolb
push
pop
movsb
pop
cmpsl
pushf
xlat
push
cmp
push
pusha
mov
ffreep
in
dec
mov
cmpsb
imul
inc
mov
hlt
cmc
enter
fmull
jmp
push
xchg
mov
pop
scas
mov
aaa
in
jle
xor
fwait
movsb
jmp
int3
inc
push
dec
ficompl
add
sbb
jle
fadds
ljmp
mov
fimuls
cld
push
int3
ss
subl
mov
lret
push
ret
mov
cmp
aas
aaa
arpl
mull
rcll
jbe
into
scas
bound
sub
stos
cmp
data16
mov
divb
repz
sbb
sub
push
lret
jge
mov
xor
in
pop
dec
jo
das
dec
insl
out
mov
mov
push
aad
dec
out
add
mov
nop
push
arpl
out
add
xchg
pop
das
jbe
clc
ljmp
jmp
imul
add
pop
mov
sarb
lods
cli
xor
loopne
cmp
push
push
xchg
add
ja
push
sub
mov
aad
xchg
lea
outsl
loope
aaa
push
lea
mov
je
cld
add
ljmp
pop
adc
pop
scas
loop
hlt
test
pushf
rep
js
adc
cmp
aad
movsl
lods
mov
mov
pop
and
add
xor
es
jo
push
std
dec
pop
rcll
outsl
pop
add
mov
jne
jnp
jle
divb
push
sbb
jnp
rcll
ficoms
enter
cmpsl
in
inc
and
loope
pushf
push
lods
lcall
mov
test
insl
xchg
clc
repnz
rcrb
add
or
or
stos
fwait
leave
ljmp
cltd
cmc
sub
hlt
add
sbb
cmp
cmp
rorl
fcomps
adc
out
out
mov
inc
adc
mov
flds
jle
pop
leave
sarb
in
and
pop
pop
pushf
aaa
mov
sbb
out
inc
ss
add
inc
ljmp
and
inc
mov
sarb
popa
loope
aaa
inc
test
dec
cmp
jge
popf
and
inc
stc
fldl
cmpsl
cmpb
xor
negb
les
jl
xchg
mov
dec
test
adc
pop
aad
dec
in
leave
test
scas
test
negb
jle
add
pop
aaa
adc
das
xchg
dec
mov
xchg
mov
fwait
mov
pop
cmp
cmp
jae
aad
lea
mov
hlt
pop
or
inc
jno
js
xchg
arpl
stc
stos
je
cmp
das
fisubrs
dec
and
push
inc
les
inc
cmp
bound
sbb
fisubs
mov
dec
mov
mov
cld
movsb
or
scas
mov
mov
mov
lds
xor
sub
cltd
int3
loop
ss
mov
leave
and
cld
or
jno
and
aad
test
push
sub
pusha
loop
fucomp
and
out
xchg
mov
mov
pop
pusha
aam
pusha
fisubs
or
fcomi
daa
rolb
hlt
in
lcall
jge
in
test
cmc
fwait
or
dec
pop
push
sbb
cltd
and
or
xlat
loop
dec
jmp
mov
adc
cld
adc
xchg
cmpsl
lret
mov
xchg
popf
les
cmc
ljmp
mov
xchg
and
mov
cld
js
push
jns
pop
mov
andb
dec
push
and
dec
lret
dec
and
sbb
dec
push
and
in
rcrb
inc
xor
jnp
xor
loope
push
inc
cwtl
fcmove
icebp
and
lds
loop
test
das
test
pusha
mov
mov
sub
enter
mov
sbb
movsl
int
mov
push
lods
ja
fbstp
lea
sbb
jne
fstp
dec
mov
jne
push
ds
outsl
cwtl
xor
add
dec
jb
mov
mov
xlat
gs
test
mov
lods
movsb
sbb
les
cmp
or
jns
dec
inc
mov
jb
dec
xor
mov
pop
and
mov
out
or
int
rcrb
jecxz
xor
ret
cmpsl
in
cmp
lahf
adc
push
xchg
or
pop
xchg
push
loopne
mov
dec
inc
or
in
jae
or
or
das
and
mov
shrl
das
lahf
lods
sbb
sub
mov
imul
pusha
mov
les
idivb
loop
xchg
mov
sahf
ds
andb
jmp
cmpsl
or
mov
mov
ret
shrb
dec
negb
pop
insb
sbb
stos
or
sti
and
mov
xchg
xor
repnz
cwtl
adc
bound
sbb
xchg
pushf
push
mov
xor
sahf
in
jbe
fwait
shll
mov
call
test
imul
dec
mov
mov
iret
scas
inc
xchg
imul
dec
pop
sub
mov
clc
jns
lret
loop
push
outsb
pop
or
aaa
sub
mov
xchg
sub
out
pop
mov
push
jg
jne
mov
lock
aam
or
icebp
repz
push
or
outsl
movsb
jmp
rclb
pop
push
pop
jne
out
adc
xor
cli
push
add
jmp
aaa
add
flds
push
mov
mov
jle
pop
lahf
icebp
lret
push
leave
fldt
xlat
popa
daa
and
ljmp
sub
cltd
xchg
push
data16
or
ljmp
out
sbb
int
jae
out
jle
pushf
adc
call
fnsave
orb
stos
imul
mov
sbb
mov
push
mov
add
pop
sahf
push
mov
push
cmp
imul
dec
les
lea
imul
test
pop
adc
cli
inc
mov
dec
pop
pop
adc
cld
xor
lock
aas
into
jns
arpl
test
and
xlat
pop
push
daa
jo
test
das
and
adc
push
lahf
in
cmp
pop
jnp
fmul
mov
sub
sbbl
xor
dec
dec
push
xchg
cld
or
ret
xor
xchg
dec
jbe
push
sbb
lods
mov
jo
push
adc
dec
mov
jmp
or
movsl
mov
sub
xchg
fildll
gs
jp
stc
in
push
cmp
out
arpl
mov
fbld
fwait
mov
and
les
hlt
fs
mov
mov
fs
aad
les
jle
loope
aad
adc
stc
je
loope
loope
and
ds
xchg
mov
add
aad
subb
lret
insb
cli
xchg
fwait
add
enter
lods
xorb
lea
mov
sub
cmp
movsb
pop
aad
jge
ljmp
or
jl
and
or
inc
dec
dec
cmp
mov
lcall
clc
jmp
dec
out
mov
pop
les
inc
mov
push
and
mov
divb
mov
or
xchg
xchg
mov
out
xor
es
cmc
push
sbb
mov
nop
test
push
pushf
inc
cmp
loopne
push
shlb
loope
jnp
stc
mov
test
int3
std
dec
scas
inc
int3
xchg
call
in
xor
sbb
inc
mov
cmp
jnp
adc
les
iret
xor
loope
mov
pop
out
mov
daa
cmp
mov
xchg
insb
add
jb
sub
adc
jno
jae
int3
fidivs
dec
popf
je
ja
aad
out
les
stos
ret
mov
ss
add
repz
aad
or
cs
cld
add
pop
rorl
loope
decl
and
mov
shlb
test
fsubrl
ja
fdivrs
pop
sub
sbb
cmp
andl
pusha
test
aas
fincstp
outsl
xchg
mov
cmc
rclb
out
pop
adc
push
jmp
push
loopne,pt
xchg
push
repz
cmpsl
lret
sbb
lds
sbb
cli
outsb
popa
jge
negb
mov
call
dec
pop
nop
sahf
or
fsubr
fdivl
lds
les
mov
cmpsl
cmpsb
sbb
pop
pop
enter
insb
cmp
dec
xlat
cmp
imul
jo
adc
loope
pop
iret
ret
loope
stos
add
lahf
jle
push
fdivrs
cld
sti
dec
rolb
insl
sub
dec
xchg
aam
repz
movhps
sub
int
aaa
shll
jecxz
mov
jae
mov
cli
mov
scas
out
xor
xor
in
add
scas
cld
inc
push
sbb
mull
hlt
call
cmp
mov
push
das
outsl
stos
pop
lcall
mov
mov
in
fistpl
pop
test
dec
mov
lds
test
pop
xchg
inc
ss
mov
inc
adc
inc
mov
adc
add
sbb
dec
cmpsl
int
add
mov
and
jno
fwait
sarb
mov
mov
insl
mov
sub
dec
or
into
jne
inc
cld
fs
mov
mov
pop
ljmp
dec
insb
lock
gs
push
stc
lods
add
jnp
sbb
cmpsl
icebp
neg
sahf
push
and
push
pop
dec
lea
std
mov
test
pop
xchg
add
aaa
cmpsb
xchg
aam
ficoml
sub
aas
cmc
dec
sti
pusha
sti
nop
lods
sarb
out
pop
pushf
fimuls
lmsw
mov
add
iret
ret
jle
cli
fnstenv
push
sbb
call
push
adc
sbb
inc
inc
xchg
fstl
fdivrs
sbb
sbb
in
inc
sbb
sbb
add
pop
icebp
nop
and
rcr
jb
aam
add
into
repz
cmc
add
mov
jl
sbb
mov
cli
pop
in
push
loop
notl
mov
xchg
mov
cmpsl
fwait
add
inc
cmp
xor
lcall
pop
jl
int
lahf
test
and
jo
adc
out
fists
xchg
lea
cld
negb
lds
adc
and
aaa
ss
xchg
in
imul
cmpl
mov
into
inc
movsb
daa
sbb
adc
loop
pop
mov
dec
xchg
lods
push
mov
xchg
lcall
iret
les
negl
xchg
ds
pop
outsl
mov
mov
mov
push
jp
push
cmp
mov
test
xchg
std
xchg
sahf
push
xor
arpl
xorl
mov
je
shlb
nop
clc
ficoml
xor
mov
enter
hlt
in
jno
mov
inc
clc
ret
sar
inc
sahf
push
push
jbe
jge
mov
dec
jmp
or
test
cltd
mov
das
aad
testb
jmp
insb
dec
je
mov
rorl
test
sub
mov
shll
xor
clc
scas
lahf
xchg
xchg
mov
fildll
ret
cmp
push
add
push
mov
adc
bound
mov
mov
and
popf
mov
mov
jecxz
cwtl
push
push
mov
lcall
fistpl
add
imul
add
in
mov
jae
cmc
jns
push
push
inc
xorb
popa
dec
jmp
mov
mov
xchg
mov
mov
or
packuswb
lods
mov
sub
push
std
cmpsl
std
or
mov
inc
sub
imulb
subb
xchg
test
add
outsl
pop
or
jbe
adc
mov
push
adc
test
loope
mov
mov
scas
jo
jge
xchg
xchg
sbb
pop
pop
jp
outsb
mov
std
inc
and
add
dec
mov
inc
mov
leave
cmpsl
movsb
adc
dec
fwait
pushl
fdivrl
stos
dec
ds
stos
test
push
insb
loop
test
sbb
loopne
addr16
cmp
dec
add
nop
out
mov
in
and
leave
test
mov
repnz
setne
push
repnz
sub
mov
push
push
cwtl
push
push
or
loop
fldl
cmp
lods
mov
mov
add
ret
jp
jno
push
or
stc
add
jge
lds
adc
fsub
jle
cs
push
or
pop
jecxz
decb
and
stc
pushf
jne
fcomps
cld
xor
mov
ret
jb
mov
xlat
ret
mov
jecxz
push
pop
ja
mov
icebp
ror
arpl
cmpb
bound
mov
sbb
push
es
jle
mov
enter
ret
bnd
pop
in
cmpsl
iret
jno
or
pop
stos
mov
loope
lods
jnp
call
call
adc
dec
adc
movsl
lds
jb
cs
fwait
cmp
inc
mov
pusha
add
lods
mov
test
pop
pop
jb
hlt
shrb
out
add
mov
push
movl
pop
lds
inc
xor
sbb
test
mov
outsl
shll
dec
js
cmpsl
inc
cmp
das
mov
xchg
or
out
push
test
fisttps
fcomip
out
imul
std
stos
and
shlb
and
pop
and
mov
fists
pop
push
das
push
je
out
dec
in
xchg
xchg
xor
fs
loope
push
out
inc
jp
adc
push
orl
roll
mov
cmp
and
mov
cmp
in
cmp
lods
inc
inc
mov
cmp
cmp
inc
lock
xchg
push
xchg
push
jne
lret
mov
xchg
les
jne
xor
aam
or
insl
mov
or
xchg
iret
das
mov
mov
xor
fidivs
xor
sub
push
test
aaa
cmpsb
jp
fs
mov
inc
xchg
sub
inc
subb
push
mov
mov
sbb
xlat
hlt
in
mov
imul
mov
mov
add
mov
mov
out
adc
lcall
fnsave
rcr
scas
mov
out
loopne
cld
sbb
mov
fwait
divl
cmp
and
test
lret
jge
mov
dec
or
fstpt
loopne
lret
dec
jb
test
repnz
push
xchg
mul
lods
scas
data16
into
orb
ja
push
jg
cmpsb
daa
and
std
adcl
notl
sbb
aad
stc
cmpsb
or
cmc
mov
xchg
popa
adc
fstpt
and
inc
out
jno
jae
inc
shll
int3
jl
xchg
and
xchg
xchg
testb
jns
sbb
aad
out
rorb
and
dec
xchg
std
pop
rorl
loop
xchg
xchg
lods
fcmovb
xchg
adcl
subps
jle
xor
adc
in
lret
jnp
paddsb
icebp
ret
ficomps
ljmp
in
aam
jg
xchg
lcall
in
imull
xchg
xor
mov
sahf
and
mov
mov
cld
es
out
negl
imul
lret
cmp
or
mov
pop
xchg
scas
sub
aaa
dec
rcrb
dec
mov
xchg
push
lahf
call
or
xchg
xor
xor
add
test
insb
jne
inc
ficomps
ljmp
js
outsl
lock
pop
inc
enter
xchg
xor
ja
push
inc
hlt
cld
mov
xchg
jl
and
lret
jecxz
sub
inc
jne
cmpsl
cwtl
jecxz
and
popf
cmp
ss
jp
pushf
xchg
nop
pop
ja
fs
mov
or
test
cltd
mov
je
cmp
bnd
std
cmpb
roll
and
mov
jmp
nop
and
cmpsl
mov
push
repnz
jmp
cmpsb
sub
std
leave
outsb
push
test
mov
scas
cmpb
fwait
dec
rorb
pop
mov
pop
or
push
lods
cli
sbb
clc
test
adc
push
cmp
mov
cli
inc
or
push
mov
pushf
push
push
or
adc
or
inc
or
mov
pushf
test
dec
movsl
in
nop
dec
outsl
shlb
cmp
cmp
sbb
mov
adc
neg
pusha
xchg
enter
packuswb
cmp
push
stos
popf
repz
ja
sub
inc
out
leave
enter
sbb
fbstp
jo
cmp
jecxz
xor
out
dec
out
loopne
and
sbb
lret
scas
aad
in
int
cmc
pusha
sub
stos
dec
push
mov
clc
cs
push
sbbb
popa
push
emms
xchg
fadds
adc
paddd
fsts
dec
push
inc
push
adc
fcoms
and
cli
fsts
lcall
outsb
adc
sahf
insb
jns
movsb
inc
sub
lcall
xchg
std
xor
cmp
cmp
dec
sbb
dec
lods
jb
ss
push
movsb
movsl
lods
or
mov
add
js
mov
dec
sub
dec
std
jmp
cmp
sbb
sub
rcll
aas
add
stc
mov
push
add
aad
adc
sbb
movsl
lret
and
outsb
addl
push
in
lds
lret
adc
pop
xchg
or
adc
int
fmull
xor
iret
jp
and
pop
in
cmp
mov
repz
mov
idivb
jecxz
sbb
fldpi
insb
icebp
in
pop
jle
iret
adc
xchg
jecxz
mov
pop
lret
inc
popl
incb
bound
fsubr
mov
scas
xor
push
and
in
sbb
rolb
js
mov
xchg
jns
push
pop
scas
cmc
loop
mov
mov
int3
dec
cmp
stc
sub
cmp
pop
mov
mov
xchg
jge
sahf
int3
lret
xchg
or
rcll
cltd
vpcomuq
mov
hlt
mov
and
or
dec
xorb
icebp
mov
ljmp
pushf
pop
xchg
add
aas
int3
mov
test
pop
mov
sahf
sbb
mov
xchg
out
dec
mov
not
fiadds
cwtl
frstor
repz
cmp
out
lds
sub
push
add
adc
enter
or
ljmp
jge
in
inc
ljmp
and
mov
pop
stc
out
pushf
pop
stos
outsl
je
push
cwtl
push
stos
hlt
push
aas
je
aas
xlat
lods
mov
pop
or
sub
xchg
mov
push
cmpsl
sub
push
iret
jb
cld
pushf
adcl
iret
sub
push
in
jle
dec
popf
cmp
mov
les
cltd
push
lea
aad
and
scas
cltd
sub
test
cmp
xor
ja
sbb
das
test
icebp
and
mov
out
mov
or
lods
test
lret
xchg
dec
inc
or
or
lock
dec
xor
int3
inc
bound
mov
mov
aad
inc
shlb
xchg
pop
fidivrs
test
push
jp
pop
out
daa
push
mov
leave
dec
dec
sahf
mov
popf
sub
adc
or
add
jp
dec
scas
inc
rorb
push
sti
arpl
pop
clc
adc
mov
rol
jbe
jns
mov
jae
sbb
mov
mov
pop
mov
jge
scas
sub
imul
popf
and
cmp
or
lds
insb
lock
sbb
jb
lret
xchg
popa
arpl
push
jp
pop
pop
xor
daa
adc
and
or
into
jge
add
mov
lock
outsb
xchg
jge
mov
dec
mov
test
mov
jmp
pop
mov
push
imull
pop
fwait
dec
push
in
cli
insl
test
scas
lea
lahf
call
xchg
aaa
icebp
lret
movsb
stos
mov
pop
jecxz
mov
lret
bound
push
jl
sti
mov
jl
xchg
mov
inc
pusha
aaa
jl
js
jnp
in
adc
sub
cmp
imul
sahf
inc
ret
js
cmpsb
xchg
xor
push
aaa
paddusw
in
out
stos
xchg
ja
mov
push
loopne
add
shrb
xor
pop
jne
xor
inc
and
sti
test
xor
cltd
dec
and
push
out
cmpsl
or
push
pushf
pop
jnp
ffree
mov
aas
lock
je
shlb
outsl
xorl
inc
call
inc
daa
movsl
xor
and
jb
in
or
jmp
mov
data16
ljmp
aaa
pop
pushf
mov
je
add
jmp
xor
cli
call
inc
adc
aam
inc
outsl
or
rcll
lret
cltd
mov
repnz
testl
mov
jge
popf
das
lahf
dec
sbb
dec
cmc
xor
sub
mov
mov
scas
and
push
mov
and
sbb
inc
or
mov
dec
jl
and
jbe
xor
test
mov
push
test
jmp
js
xchg
add
imull
and
inc
mov
ljmp
outsl
ss
sbb
pusha
and
fists
cs
jl
push
into
enter
frstor
lods
hlt
dec
aas
idiv
jb
and
leave
adc
jg
daa
fldt
mov
mov
nop
scas
xorb
cltd
insb
pusha
scas
and
out
lcall
dec
lods
lods
in
and
mov
inc
fisubl
popf
push
lea
arpl
scas
maxps
enter
repnz
or
sbb
fs
cmp
ss
or
mov
mov
lock
fcomps
or
lods
mov
dec
std
and
repnz
dec
jge
mov
push
out
lds
movsb
push
and
loope
and
sub
js
add
mov
stos
scas
mov
cmp
popa
push
dec
add
in
dec
shll
js
les
ret
adc
adc
add
cmp
pop
jnp
imul
fcomps
iret
daa
rolb
ret
inc
icebp
mov
in
stos
fstps
pop
pop
scas
adcl
sbb
or
sub
scas
jmp
pop
inc
cmpsl
dec
fnsetpm(287
daa
ds
lods
es
gs
jmp
push
cmp
and
mov
lret
jnp
mov
push
dec
out
sub
jnp
lcall
push
mov
push
jo
inc
and
sub
outsb
jno
in
movb
xor
xchg
sahf
sbbl
sbb
mov
adcb
pop
jo
testb
xor
aaa
flds
xor
ds
jmp
cmp
or
stos
test
sbb
lock
fldl
sbb
shl
repz
ds
rolb
mov
fcmovnbe
mov
cld
popa
imul
aas
or
push
inc
data16
add
jg
js
pop
or
ficoml
je
sar
outsl
daa
and
rolb
mov
test
and
jnp
sub
pushf
adc
daa
mov
std
test
nop
insl
es
leave
das
fcompl
rclb
inc
inc
inc
loopne
lret
sbb
or
loope
mov
ss
sti
cmp
in
jecxz
mov
imul
sub
arpl
mov
shlb
shll
push
and
imulb
adc
aad
pusha
cmp
mov
xlat
and
sub
adc
out
ljmp
fmulp
xchg
rcll
mov
jnp
mov
loopne
xor
adc
pop
ss
mov
sub
mov
test
cmp
sub
lods
lds
lret
or
cmp
das
rcll
sub
sahf
mov
or
mov
sahf
jb
jle
cltd
repnz
cmp
aas
mov
pop
cmpsb
cmp
sar
je
mov
adc
fildl
push
dec
dec
inc
iret
dec
pop
stc
mov
out
xchg
rorb
movsb
leave
sahf
std
cmc
mov
je
sahf
mov
and
sbb
jne
add
dec
xor
jmp
icebp
pop
cmp
pushf
shll
adc
push
jecxz
cmp
dec
test
sarl
adc
shlb
pusha
std
push
dec
sbb
outsb
jae
clc
push
push
movsl
aam
aaa
mov
lock
dec
push
call
dec
and
add
lods
fwait
or
mov
mov
cmp
fsubl
outsl
mov
es
test
js
push
in
jae
xchg
xlat
mov
mov
sbb
gs
push
jns
ret
into
call
stos
xor
push
jno
ficoml
dec
pop
in
popa
pop
push
out
fyl2xp1
push
in
adc
scas
cmp
lods
out
in
push
cmpsb
xor
push
sub
push
xchg
in
neg
gs
add
cmp
cmp
clc
jnp
add
ud2
mov
xchg
pop
les
fildl
add
add
xchg
add
or
sbbl
mov
faddl
xchg
mov
cli
adc
inc
pushf
dec
cmp
cld
jne
push
push
arpl
outsb
pop
push
mov
push
outsb
sahf
pusha
jo
inc
fwait
mov
adc
xor
outsl
outsl
test
mov
sub
adc
jmp
sub
mov
sub
shlb
lds
add
mov
jns
cmpsl
adc
cmp
mov
inc
addb
cmpsl
mov
dec
stc
sub
mov
xlat
push
push
stc
mov
cmp
shll
in
jge
sbb
inc
scas
repz
lahf
sbb
lods
sub
pop
xchg
sbb
repnz
push
xor
adc
in
sarl
out
pop
out
mov
sbb
mov
je
pop
sub
jae
nop
adc
inc
cli
pop
bnd
inc
mov
pop
and
and
pop
adc
pop
outsl
and
add
les
imul
out
int3
sti
mov
movsl
jns
and
mov
cmp
mov
lock
fcoms
jecxz
subl
xor
cs
jl
frstor
jl
jmp
pop
mov
dec
imul
mov
repz
outsl
bound
or
lods
mov
mov
ret
subl
notb
push
pop
mov
sbb
int
mov
jmp
in
inc
cli
xchg
push
into
repnz
insb
bound
inc
minps
lock
or
sahf
and
inc
pop
mov
mov
filds
xchg
andl
add
or
js
inc
add
in
pop
daa
stos
adcl
adc
or
test
or
fwait
sbb
rcr
or
sbb
clc
add
sbb
nop
ljmp
add
in
cmc
jle
vpcomw
and
mov
roll
sbb
jmp
mov
lock
scas
push
and
mov
xchg
jbe
jae
pop
push
sub
adc
inc
sub
arpl
push
xchg
imul
or
inc
and
fbstp
mov
jg
pop
fsubs
mov
cmpb
outsl
jmp
loope
lret
xchg
cmp
push
dec
sbb
inc
les
push
popf
cli
pushf
pop
mov
inc
inc
insl
mov
clc
and
mov
or
mov
mov
enter
push
inc
dec
out
jmp
jns
fistpl
out
adc
lods
sti
sub
scas
xor
sti
cmpsb
fadd
mov
stc
pop
jns
clc
xchg
pop
jnp
and
pop
ror
iret
leave
insb
adcb
dec
add
push
sub
stos
repnz
loopne
push
fistps
mov
repz
rorl
sbb
sbb
push
dec
jne
inc
xchg
xor
cmpsl
imul
inc
repnz
mov
or
cltd
push
cmpsl
rcll
movhlps
stc
push
pextrw
and
sahf
ror
cli
add
xchg
enter
push
fs
out
adc
xor
imul
cmp
lea
int
mov
adcl
dec
jnp
adc
into
cmp
fldenv
insl
sbb
mov
shlb
jne
ret
into
jae
inc
adc
push
test
fcmovu
mov
or
sbb
ret
and
mov
lds
xor
push
add
and
addr16
adc
cmc
and
adc
out
pusha
dec
jne
in
inc
cmpl
and
pop
push
sbb
int3
lea
push
push
jbe
imul
push
fiadds
fistpll
mov
cmp
jb
inc
sub
xchg
add
jae
dec
inc
adc
adc
mov
cmp
add
ret
outsl
add
push
mov
or
cld
ljmp
adc
into
pop
inc
stos
mov
fidivrl
cmpb
xchg
subl
pop
in
inc
ljmp
mov
imul
sbb
test
fyl2xp1
sub
aas
int3
xchg
adc
leave
and
jae
pop
push
push
lods
repz
jns
dec
cli
lcall
aad
jge
sbb
pop
mov
shl
test
and
and
das
mov
inc
sbb
lcall
sub
addr16
xchg
sbb
cs
movsl
loop
push
push
mov
bnd
mov
iret
cld
jb
push
inc
mov
cmp
fmulp
xor
sbb
ds
fstpl
lock
aam
sbb
xorb
push
clc
and
dec
lahf
push
mov
cld
scas
xor
mov
sbbb
mov
cmpsb
gs
mov
cli
test
lock
cmp
and
pop
jg
push
adc
or
fsubrs
mov
cwtl
push
sbb
push
addr16
adc
movsb
test
aas
cld
insb
insl
in
fbstp
in
movsl
or
push
and
iret
clc
mov
clc
pop
lock
xor
mov
or
xchg
jne
xchg
push
cmp
or
adc
or
out
in
add
das
mov
push
sbb
leave
rcl
popf
push
pop
mov
mov
xorb
bndstx
adc
cli
pop
ret
dec
daa
test
in
rorb
sub
xchg
pushf
xchg
xchg
push
xor
and
mov
sbb
daa
jae
lods
mov
mov
andb
jg
inc
daa
aaa
push
adc
and
xchg
je
mov
pushf
mov
mov
or
inc
dec
dec
nop
lea
inc
ja
cwtl
jge
shl
int
fcmovnbe
in
lods
fs
lret
inc
push
fnstsw
mov
test
mov
push
pop
bnd
pop
mov
popa
xchg
loope
adc
imul
nop
sub
movsb
insb
xor
les
sbb
xchg
jp
sub
sti
jg
sub
pop
test
mov
pop
push
sbb
orb
or
mov
mov
push
stos
sub
xchg
sub
adc
sbb
call
xchg
xchg
push
scas
test
mov
outsb
add
hlt
rorb
sahf
sti
xor
ret
add
sub
xchg
inc
xchg
pop
mov
scas
sbbb
call
imul
imul
scas
sbb
sbb
cmpb
addr16
negl
in
ss
xchg
subb
fldenv
test
pop
ret
mov
flds
movsl
insl
pop
dec
pop
leave
call
sub
jnp
lock
repz
sbb
test
sahf
sbb
sbb
xchg
pop
cmpsb
push
pop
pop
xchg
stos
lods
lcall
jge
cmc
imul
sbb
scas
dec
xchg
hlt
daa
lret
adc
sub
mov
fadd
ret
mov
test
push
sti
sub
push
push
ficoml
pop
pop
xor
xchg
mov
fucomp
test
push
out
sub
lret
jg
in
outsb
jmp
fisubrl
fwait
sub
xchg
mov
cmp
cmp
cld
inc
push
outsb
faddl
mov
lock
or
add
mov
mov
xchg
adc
push
outsb
outsl
shlb
xchg
inc
js
sub
fsubs
dec
enter
in
or
pop
mov
push
ret
or
stos
lock
xor
mov
jecxz
jnp
adc
cmp
js
int
dec
arpl
sbb
push
or
bound
repnz
or
push
imul
pop
cli
jb
cmp
jns
stos
cmp
frstor
jne
call
mov
jo
jnp
dec
in
pop
test
out
std
adc
std
rorl
jge
lods
shl
cmp
testl
mov
inc
stc
mov
mov
pop
inc
repnz
aas
inc
pop
leave
enter
adc
imul
les
pop
hlt
jne
jle
cmp
stc
movsl
xor
push
repz
and
adc
andb
sbbl
dec
loope
mov
xor
out
orl
and
add
jbe
cwtl
repnz
add
push
sahf
lret
movsl
fcmovnb
mov
repz
sbb
inc
fdivrp
sub
jecxz
xlat
test
sbb
cmpsl
xor
jnp
mov
outsl
nop
notb
pop
and
clc
fisubl
mov
aas
les
lods
xor
mov
clc
test
int
repz
adc
mov
es
dec
aad
test
push
or
sti
jp
outsb
repnz
fnsave
jge
mov
xchg
ljmp
clc
lcall
mov
add
cmpb
test
roll
sbb
push
mov
cld
int3
sub
pop
adc
dec
inc
scas
in
ljmp
pop
mov
rol
cmp
std
xchg
ret
std
mov
aaa
bound
push
iret
rcl
xor
mov
bound
pop
inc
pop
mov
leave
dec
mov
mov
or
adc
lahf
test
dec
dec
push
sahf
fsubrs
imul
push
mov
js
adc
movsl
les
xchg
xor
inc
cmp
outsb
setno
out
in
call
push
push
and
ljmp
jns
push
scas
lock
pop
cltd
rcr
or
stc
pop
sbb
dec
sarl
sub
push
insl
or
stos
shl
push
mov
ret
loop
rorl
stos
pop
dec
adcl
push
mov
lahf
int3
sub
pop
inc
lahf
cmpl
mov
add
push
sbb
stc
popa
bound
pop
push
pop
sbb
jl
push
jo
in
cmp
xor
loopne
lds
jle
in
imul
shlb
jb
int
xchg
inc
cmp
mov
and
jae
insl
das
fucom
xor
and
add
cmp
xchg
inc
push
ret
int3
and
fldl
sub
pop
out
jnp
inc
xchg
popa
xor
sub
inc
aam
sbb
mull
jo
mov
inc
lret
pop
fmul
ss
xchg
leave
xor
push
ja
inc
push
outsb
loopne
mov
add
xchg
mov
xchg
xbegin
es
je
gs
inc
pop
push
scas
push
pop
es
mov
mov
push
adc
xor
lea
in
leave
mov
fldenv
sbb
cli
cmp
mov
testl
pop
and
jo
repz
in
cmc
sub
jmp
loope
lret
sbb
imul
fsqrt
out
jno
leave
sahf
jbe
das
fidivrl
xor
cmp
jle
les
dec
sub
mov
sbb
inc
rcrb
cmp
mov
add
jnp
je
adc
jo
push
pushf
je
lods
sub
dec
xlat
sub
mov
xchg
lret
adc
mov
enter
push
jbe
push
push
pop
shrb
mov
or
pop
mov
lods
and
insb
jmp
std
enter
movsl
xor
xor
push
loop
xor
pop
pushf
adc
outsl
addl
xor
icebp
addr16
inc
fildl
mov
sti
inc
dec
or
aad
mov
sub
movl
inc
lods
rcl
sar
inc
mov
lods
add
push
sbb
aas
xchg
test
mov
sbb
imul
lcall
out
pop
data16
scas
orb
mov
dec
lret
push
add
pop
and
mov
push
bound
rcr
push
sbbl
scas
xor
xchg
jle
jecxz
sub
frstor
das
inc
insl
dec
out
pop
lea
adc
mov
aam
ret
in
push
ret
push
call
xor
gs
fbld
aam
movsl
adc
pop
fnstcw
shll
mov
cmp
jno
or
scas
or
cmpsb
mov
xchg
xlat
xchg
or
pop
adc
setne
adc
jmp
inc
mov
push
pop
imul
sbb
jl
je
jmp
lret
divb
pop
cmp
or
dec
lods
sub
xlat
or
scas
loope
sub
leave
popf
iret
in
adc
imul
iret
jns
xchg
lcall
lret
jne
roll
orb
inc
fwait
mov
inc
jecxz
dec
jmp
jecxz
or
inc
daa
xor
xor
push
cmc
div
add
mov
lods
inc
or
insb
mov
sub
cwtl
cmp
cli
clc
lods
sarb
jb
push
nop
and
pop
mov
sub
rclb
mov
into
rcrb
mov
js
jg
mov
mov
and
test
popf
jp
cld
repz
pop
adc
mov
out
mov
dec
pop
cmp
pop
scas
scas
lret
mov
mov
jp
sbb
mov
jb
push
jge
adc
ret
cmp
cmp
out
xchg
test
sahf
inc
lcall
mov
fisttpll
mov
cmp
xor
test
or
call
sub
push
mov
imul
sbb
into
data16
mov
add
push
mov
in
dec
pop
pop
xchg
xor
subl
cmp
cli
sbb
jp
sub
jl
inc
arpl
mov
cmp
push
or
jns
loopne
mov
pop
xchg
bound
sub
inc
popa
dec
stos
push
jp
sub
mov
lcall
shrb
fwait
add
inc
pusha
xchg
test
xor
paddsb
pop
mov
pushl
sub
add
mov
fildl
dec
gs
cmp
les
mov
jg
ror
jmp
jo
push
fcomps
insb
jns
cmpsl
mov
lcall
movsl
sbb
push
stos
popa
add
lcall
mov
xor
or
aad
inc
call
adc
cld
cs
int3
inc
flds
shl
sbb
lea
dec
jne
xor
scas
popa
es
sub
xchg
push
fdivrs
xor
cltd
sbb
lods
pop
xchg
push
insl
repnz
sbb
scas
and
jle
and
jmp
push
push
mov
out
mov
and
mov
daa
jno
nop
mov
jno
mov
adc
sbb
jmp
jge
push
mov
test
sbb
ds
xlat
cmp
iret
mov
repnz
clc
lods
pop
mov
xor
adc
cmp
mov
cmpsb
push
out
loope
pop
mov
imul
or
pop
lock
mov
sub
pop
sbb
adc
inc
jp
movsl
push
push
lahf
xchg
jl
pop
mov
loop
adc
adc
aam
call
mov
add
test
inc
aas
call
in
jbe
push
add
ds
sub
icebp
sub
or
ret
mov
shll
fisubrs
add
push
les
jne
in
imul
stos
std
lock
lea
lds
pushf
xchg
add
mov
fstps
push
jnp
jmp
out
call
sub
xchg
jbe
sub
push
mov
jno
xor
stos
xchg
cmp
sub
pop
mov
lret
cs
sbb
or
push
inc
adc
pop
call
shrb
in
dec
jne
repnz
cmpsl
in
inc
clc
mov
lods
push
imull
addr16
mov
inc
inc
orb
rcrb
lcall
and
dec
loope
mov
push
xor
mov
sbb
xchg
into
xor
push
mov
test
push
ret
mov
xchg
mov
rorl
xor
sahf
cmp
xlat
dec
rolb
dec
movsb
clc
mov
jmp
push
mov
jle
push
and
mov
add
imul
pop
jmp
test
pop
jnp
mov
adc
dec
shlb
jle
lea
inc
mov
xor
testb
push
mov
mov
repz
loope
cld
sub
out
jg
in
out
sbb
inc
lahf
test
cli
sbb
ja
aas
cmc
test
and
mov
inc
es
mov
dec
test
movsl
pop
or
fidivrl
out
or
sbb
mov
jo
adc
in
js
popf
popf
sub
inc
fstl
data16
push
and
jecxz
into
jmp
sbb
das
mov
xchg
and
out
pop
mov
jo
pop
loope
aas
es
es
iret
addr16
dec
aas
cld
xchg
sarl
fnstcw
shll
lar
adc
stos
sete
in
mov
pop
scas
out
dec
int
imull
mov
fwait
mov
cmpsb
lret
rolb
fmuls
sub
in
out
dec
in
nop
lret
testl
fwait
inc
push
xchg
das
dec
sub
mov
cs
sub
mov
lea
mov
push
cmp
xor
or
sbb
mov
adc
mov
and
daa
xor
lods
fsubrl
sti
adc
pop
inc
int3
fcomps
imul
or
iret
test
popf
lds
lock
test
adc
sti
inc
inc
loop
cmp
lea
cmpsl
pop
cld
pop
adcb
sahf
fisubrl
sub
add
add
xchg
inc
jmp
mov
lret
sbb
xor
mov
out
adc
xchg
mov
push
sub
fnsave
add
dec
fbld
call
out
and
mov
stos
nop
loopne
imul
bound
mov
xor
or
adc
cmpsl
jmp
sub
jbe
push
bound
jl
test
cmp
dec
inc
or
loopne
mov
xorb
test
or
push
outsl
int3
push
ds
fbld
and
xchg
out
fdivrs
jno
hlt
jg
jp
je
cmp
das
pop
inc
test
out
push
adcl
es
popf
cmp
push
lret
mov
push
inc
dec
inc
sbb
sbb
lods
clc
ret
loopne
jb
cmpsb
cmpsl
sbb
sar
inc
inc
daa
cmpl
sub
loope
cmp
dec
cld
inc
bound
mov
icebp
ret
clc
outsl
inc
ja
mov
orl
orl
popa
dec
icebp
js
mov
jne
in
daa
stos
cmp
in
out
loopne
les
les
mov
insl
call
imul
jecxz
cmpsl
lret
add
dec
inc
dec
test
mov
out
or
and
and
outsl
sub
xchg
loop
test
sbb
das
jae
cmp
adc
push
dec
insl
shll
mov
adc
xor
lods
out
scas
daa
xchg
jb
mov
movsl
mov
je
lahf
cmpsb
repz
push
sbb
xchg
push
xor
xchg
sbb
test
xchg
mov
popf
mov
xchg
test
mov
leave
jmp
xchg
outsb
popa
push
mov
lahf
ret
outsl
mov
push
xchg
stos
pop
es
dec
push
jne
mov
rcrl
inc
aas
xor
adc
mov
adc
cwtl
xor
or
ret
jl
es
xor
fisubs
cmp
push
and
push
leave
pop
jne
pop
fnsave
jns
cmpxchg
jo
lret
xchg
insl
pop
adc
shll
dec
lahf
mov
push
icebp
adc
mull
test
jbe
lods
and
xor
shll
sti
fldenv
inc
mov
pop
xchg
les
cmp
cmpsb
mov
and
mov
adc
popf
sub
in
and
mov
jnp
rorl
dec
je
or
and
sbb
xor
inc
test
jnp
imul
mov
and
sub
or
xchg
fisttpll
jg
pop
fisubrl
mov
cmp
out
mov
into
loopne
lcall
mov
push
into
repnz
icebp
faddl
mov
xchg
test
lods
jnp
pop
loopne
jno
cwtl
pop
dec
jmp
mov
sbb
lcall
push
movsl
push
sbb
out
inc
hlt
ret
adc
mov
in
sub
pop
xor
sub
inc
lret
test
sub
sarb
cmp
cmp
cmp
rorb
int
mov
xchg
or
jge
cmp
pushf
mov
or
mov
push
mov
inc
movsl
jae
in
into
cmpsl
dec
shll
lahf
scas
add
mov
jne
dec
pop
adc
stos
test
xchg
arpl
stc
cmpsl
xor
pop
cmp
mov
arpl
inc
mov
mov
push
cmp
or
add
xchg
sbb
inc
jmp
aam
add
sbb
out
mov
js
cmp
sub
js
enter
int3
jl
insb
lods
xor
cmp
mov
fcoms
pop
int
mov
adc
in
ss
xor
popa
add
pop
mov
pop
mov
pop
dec
jle
mov
ljmp
jecxz
add
test
notl
mov
or
loope
jnp
mov
enter
and
xchg
fiaddl
cli
sub
and
push
mov
mov
adcl
arpl
das
cmpsl
xchg
inc
xchg
push
mov
dec
stc
push
and
cmp
or
in
dec
add
sub
mov
test
sarb
mov
lahf
stos
dec
jl
xor
mov
xchg
cmpb
cld
mov
push
call
or
pop
pop
adc
lahf
pop
mov
sub
xlat
movsl
mov
adc
or
jge
fisttps
cmpsl
lret
es
inc
mov
mov
rcr
repnz
addr16
int3
imul
pop
outsl
in
jp
iret
lret
cltd
cmp
outsl
sbb
sbb
push
push
pop
mov
rcll
add
lahf
cmpsl
rcpps
cwtl
in
inc
test
out
fists
push
inc
into
cmc
add
jl
mov
mov
push
outsl
push
mov
inc
stc
push
orb
push
lods
dec
mov
aaa
mov
mov
shll
mov
xchg
sbb
sub
mov
cmp
stos
jbe
mov
sub
sbb
mov
mov
scas
or
repnz
adc
jbe
loop
mov
push
lret
scas
jae
fs
sbb
movl
outsb
sbb
icebp
pop
sbb
xor
push
pop
fmull
xor
mov
add
test
addb
bound
loope
repnz
call
insb
push
lods
mov
divb
mov
ret
push
sbb
lods
or
inc
jmp
loope
mov
jge
mov
fwait
in
pop
cmc
mov
pop
mov
into
mov
fxch
pop
hlt
or
pop
adc
mov
mov
mov
inc
xor
lds
mov
mov
mov
push
fdivs
movsl
rol
xchg
lahf
push
in
and
push
cmp
adc
orb
pop
jl
mov
mov
inc
push
and
cld
rcrl
push
int3
mov
lret
jecxz
das
lock
or
push
addr16
mov
lea
and
xchg
decl
mov
sub
cmc
jo
sti
sbb
mov
andb
inc
lock
xchg
lods
pop
cs
dec
repnz
jnp
in
movsb
insb
cld
xor
or
jge
das
cltd
push
push
dec
adc
mov
imul
push
out
movsl
repz
cmp
sbb
xor
push
in
rclb
xchg
daa
std
icebp
js
or
aaa
dec
fildll
sub
sahf
leave
push
xor
mov
ss
sbb
xchg
fcomps
pushf
cld
jne
pop
pop
cwtl
leave
sbb
push
clc
add
call
push
cmp
cmp
shlb
js
push
les
mov
push
jae
sahf
cld
sbb
mov
mov
xor
dec
jmp
fisttps
jb
xchg
divl
rorb
das
mov
pop
movsl
adc
inc
into
push
cmp
and
insb
pmuludq
orb
scas
sub
xor
fildll
inc
out
out
jge
leave
fcmovb
inc
lods
sahf
push
cld
bound
popa
cmp
cmp
push
sub
cwtl
aaa
divb
dec
inc
sub
fisttpll
fcomps
add
div
adc
or
or
add
lods
or
movsl
push
xchg
fwait
pop
dec
addb
in
vpmacsdd
lret
stos
pushf
pusha
mov
add
loop
mov
push
mov
sahf
pop
outsb
fiaddl
jmp
ja
sub
xchg
pop
mov
xlat
mov
push
cmp
push
add
lds
pop
jmp
dec
pop
cmp
sbb
xchg
adc
int
inc
jae
in
out
scas
pop
ficompl
lock
mov
shrb
pop
cmp
inc
sbb
in
ja
cmp
pop
xor
sti
mov
or
mov
mov
fimuls
dec
jne
sub
iret
movsl
lods
and
lcall
push
jnp
push
mov
fcmovbe
push
or
sub
or
add
sub
addr16
jnp
xchg
inc
aas
int
push
mov
or
mov
ret
nop
mov
and
lahf
js
sbb
cwtl
jg,pt
incb
cmp
cmp
sub
mov
data16
aaa
out
js
leave
loop
fcmovnb
jmp
push
or
sub
mov
sub
ss
jo
imul
lret
nop
bnd
cli
jge
and
dec
fsubs
test
pop
adc
aad
js
sar
jo
and
icebp
popa
arpl
dec
stos
sub
out
inc
iret
dec
mov
loop
popf
sarl
mov
ljmp
or
push
jnp
les
call
ror
test
clc
add
testb
in
pop
jo
mov
fwait
adc
shl
je
mov
or
dec
cmp
adc
pushf
xchg
shr
rcrb
rol
inc
pop
arpl
pop
jmp
inc
std
adc
mov
cld
testb
jecxz
scas
mov
xlat
mov
cltd
push
cmc
dec
dec
pop
inc
fidivrs
aaa
outsl
loop
dec
mov
movsb
stc
addl
mov
jle
xchg
adc
or
test
dec
aaa
cmp
sub
mov
push
in
inc
fwait
mov
js
test
pop
mov
xchg
mov
fs
lret
push
clc
pop
cwtl
push
popf
int3
push
mov
jle
xlat
std
inc
lock
ret
lods
lret
in
add
pop
enter
xchg
add
ret
fisttps
inc
push
sub
jp
mov
stos
sbbl
mov
sti
fists
pop
stos
pop
shrl
lret
push
cld
addr16
push
xor
sub
cmpb
cli
je
ret
sub
filds
xor
mul
jns
mov
mov
mov
int3
ffree
repz
enter
mov
or
call
push
adc
shrl
les
std
sub
cli
cli
into
dec
nop
add
adc
sub
jl
push
negb
xor
cmpsb
push
and
movsb
in
dec
aaa
push
dec
dec
adc
adc
adc
lods
push
xor
mov
sarl
ja
mov
jle
xchg
inc
stc
fldt
pop
ret
xor
repz
fiadds
sbb
adc
test
daa
in
mov
adc
mov
or
mov
mov
std
outsl
xlat
push
mov
inc
pop
daa
ret
inc
add
movsl
lds
and
ret
imul
cmpsl
xor
into
insb
insb
and
mov
pop
sbb
fwait
xchg
mov
dec
dec
stos
hlt
lods
ret
fstps
imul
sbb
lcall
roll
mov
lret
jbe
cmp
and
out
push
std
clc
mov
push
inc
stos
popf
jmp
shrd
mov
stos
lahf
jge
repnz
aaa
jo
std
sub
jae
decl
push
cmp
jnp
xor
scas
jno
or
mov
fbstp
mov
add
sbb
lcall
dec
xchg
popf
mov
fisubl
or
adc
xor
jno
dec
outsl
dec
or
pushf
pop
pop
scas
in
mov
cmc
nop
lods
sbb
rcrb
aaa
dec
push
xor
cltd
push
jb
adc
jae
or
rcll
push
out
dec
loopne
lock
or
adcl
mov
cltd
mov
test
cli
push
inc
test
push
das
dec
stos
sbb
scas
push
daa
in
push
lret
sbb
iret
xchg
and
mov
dec
hlt
jecxz
or
xor
or
ljmp
dec
loop
sbb
das
xor
fdivl
push
aam
add
sbb
or
dec
pushf
adc
out
test
lds
cmpsl
mov
cli
popf
jge
add
inc
scas
mov
daa
add
clc
mov
ds
dec
lods
xchg
jp
add
vsqrtpd
les
lds
push
loopne
push
adc
and
sub
bound
xchg
and
arpl
mov
aaa
in
decl
rclb
inc
and
jmp
cli
mov
leave
bound
fmul
out
push
lret
movsb
stos
dec
adc
cmpsl
dec
add
test
les
cmc
or
cld
cli
gs
stos
bound
sub
jo
and
mov
cmp
mov
jne
outsb
xor
imul
sub
icebp
stos
dec
in
jnp
ss
pop
mov
gs
fisttpll
mov
mov
repz
or
mov
in
outsb
xchg
scas
jp
xchg
mov
sbb
jg
pop
push
sti
jp
call
lods
add
test
movsb
add
lods
imul
push
jb
jns
xlat
inc
adc
rcrb
gs
push
xchg
xchg
fldt
cmp
sub
add
daa
mov
sub
xchg
fmuls
lock
popa
int3
mov
cmp
push
push
lret
inc
mov
mov
push
sub
and
lahf
add
ljmp
mov
out
das
shrb
pop
out
and
imul
fs
dec
enter
mov
inc
outsb
adcl
lahf
pop
jge
ret
add
pop
jne
inc
mov
adc
xor
popf
sub
jg
shrb
call
xchg
cmp
xor
inc
mov
mov
add
imul
xchg
daa
or
out
es
stos
mov
mov
adc
fildll
dec
add
int
mov
sub
ds
lsl
das
aas
subb
mov
cmp
dec
jno
test
inc
int3
aas
sub
rclb
aaa
das
fdivrl
ds
adc
ret
pop
stos
xchg
add
xchg
into
mull
loopne
dec
sahf
mov
enter
addr16
hlt
insb
xchg
cmpsl
out
xchg
sahf
jae
or
ljmp
dec
sbb
mov
test
das
cwtl
or
or
push
mov
pop
xchg
cli
adc
push
jns
rcrb
mov
sub
dec
sub
add
sbb
mov
aas
imul
inc
cmp
enter
mov
lods
xor
xor
or
je
xchg
xchg
shl
scas
cmp
lea
hlt
loop
cmpsb
dec
fcmovnbe
repnz
cmp
enter
mov
adcb
sbb
arpl
sbb
dec
ja
pop
out
pusha
mov
ret
pop
push
daa
inc
jecxz
and
jmp
stc
xchg
xor
xchg
mov
pushf
int
or
push
push
ret
sbb
xor
and
pop
mov
xchg
jne
sbb
xchg
jne
and
test
ret
sub
aaa
add
xchg
or
add
and
into
pop
mov
mov
sub
cwtl
dec
icebp
out
outsb
pop
pop
inc
cwtl
lea
xor
out
data16
sbb
lret
xchg
xor
xlat
pop
fildll
cld
xor
cmp
sbbl
arpl
in
ds
xor
mov
lea
pop
mull
xchg
pavgb
clc
push
sbb
push
or
mov
dec
outsl
cli
pop
test
jl
lcall
add
outsl
lret
ds
gs
inc
daa
pop
or
nop
xchg
cmpsl
inc
mov
mull
mov
inc
push
lods
xchg
ret
sub
int
mov
jb
test
mov
pop
ja
cltd
add
mov
in
icebp
movsb
popf
jb
lahf
cld
imul
inc
mov
sti
pop
jbe
loopne
bound
arpl
pop
adc
arpl
sahf
aaa
sub
scas
mov
jle
icebp
dec
divb
mov
lods
jg
sahf
out
xor
test
xchg
mov
or
insb
and
shll
xchg
fwait
movsl
add
pop
push
mov
fistl
lods
das
dec
flds
lret
pop
mov
jo
sub
mov
xor
jl
pop
or
mov
add
cld
data16
xchg
dec
push
sti
lods
or
inc
or
jl
fcomip
and
cld
sarb
inc
fst
cltd
sar
fbld
dec
loopne
cltd
sbb
out
pop
sub
movsb
cltd
aaa
inc
pop
xchg
mov
adc
movsb
push
jne
aam
cmpsb
aaa
mov
inc
out
jo
out
cmp
adc
push
or
bound
aad
sahf
mov
ljmp
ret
sub
mov
or
imul
nop
pop
iret
mov
bound
mov
mov
imul
mov
add
jmp
xchg
out
out
hlt
aas
sub
imul
xor
push
jnp
and
gs
dec
cmpsb
add
sbb
pop
popf
in
xor
or
outsl
add
push
jbe
mov
dec
cmp
sub
push
cwtl
or
push
cmp
mov
mov
arpl
outsb
push
or
int
divl
or
xlat
push
push
loopne
jb
sbbb
hlt
into
pop
jle
mov
xchg
or
fwait
pusha
fiadds
in
add
hlt
adc
andb
loopne
xchg
cmp
xchg
lock
iret
es
test
scas
test
mov
sbb
daa
in
dec
shrl
mov
xchg
jae
imul
mov
insl
scas
mov
sub
loopne
sub
int
mov
jns
daa
aad
mov
mov
scas
lds
movsl
add
dec
lds
aad
vpshab
cli
adc
and
pop
xor
test
hlt
dec
adc
sahf
mov
pop
int3
ds
nop
sbb
xchg
pop
sahf
lea
ds
fsts
pop
xchg
push
or
les
add
sub
dec
movsb
std
or
fldenv
cltd
inc
dec
cmpsl
dec
xor
add
jmp
mov
push
shlb
jb
fs
out
inc
mov
jae
es
lahf
and
jo
cmp
xlat
push
je
int3
push
xchg
fistpl
xchg
xchg
imul
loop
loop
xchg
jmp
push
add
or
rcl
pop
push
inc
mov
add
inc
imul
pop
cmp
add
sub
dec
cmp
jo
mov
icebp
lock
push
jl
les
sbb
mov
cmp
scas
pop
cmp
jp
xlat
sub
sub
std
xor
out
cmp
lahf
add
lods
jae
push
mov
lea
pushf
mov
xor
push
xor
mov
jo
shlb
fdivr
add
push
loope
mov
rclb
pop
repnz
rep
scas
out
iret
movl
rorb
stc
jae
rcr
mov
xchg
sub
add
and
fildll
in
dec
sub
jg
push
sahf
rolb
sti
test
dec
push
cmp
cmp
lret
jae
test
scas
inc
dec
movsl
mov
mov
leave
out
mov
mov
cmp
jnp
daa
push
xor
in
cli
xchg
mov
mov
cmp
test
out
push
push
pushf
mov
dec
or
jl
add
fldcw
ds
gs
dec
and
js
pop
jge
xor
psubsw
push
or
and
jb
in
outsb
xchg
fbld
or
push
xor
repnz
jne
cmp
js
mov
rolb
pop
sti
aaa
hlt
aam
or
insb
rolb
inc
cmp
mov
cld
pop
pop
lret
cmp
inc
inc
push
xchg
push
addl
mov
push
data16
mov
pop
lret
dec
xor
cmpsb
jmp
sbb
lock
lret
mov
fwait
jne
mov
inc
dec
mov
aas
insb
push
lock
stos
pop
sub
ficoms
pop
clc
aad
es
scas
test
dec
dec
mov
shr
mov
lods
push
cmpsb
fwait
jmp
dec
out
clc
sub
mov
adc
jo
cmp
cmpsb
sti
and
fists
out
pop
cmp
xchg
iret
repz
push
popf
xor
mov
das
sub
aas
orb
and
pop
mov
jne
pop
mov
and
add
xchg
sbb
imul
sarl
scas
call
fldcw
xorl
out
loopne
fidivrl
jp
fucomp
pop
adc
or
cmp
jne
pop
add
daa
mov
loopne
adcl
call
rol
mov
and
xor
mov
cmpb
test
sub
dec
push
adc
pop
mov
xor
mov
xchg
insb
sti
cmp
xchg
add
push
dec
leave
cmp
loopne
push
pop
sbb
cmp
add
xchg
shr
pop
cmp
pop
ud2
cmp
shlb
cwtl
loope
popa
jnp
mov
jne
sub
js
repz
rcr
scas
scas
test
pushf
imul
data16
lret
pop
dec
ret
mov
xlat
cmp
dec
pop
inc
and
sub
add
inc
mov
jmp
and
mov
cmp
push
xor
sub
lret
fistl
mov
mov
pop
outsb
cmp
std
repz
loope
push
sarl
insb
test
pop
jp
xor
adc
add
and
mov
pop
dec
cmpsb
xor
mov
mov
pop
out
ret
popf
xchg
fdivr
adc
test
inc
jle
jns
and
xor
das
ret
push
push
mov
mov
pop
ret
ffreep
repnz
test
and
pop
and
into
pop
mov
add
aas
push
sub
int3
fwait
ja
pop
inc
adc
cmp
aad
mov
mulb
les
add
inc
fmuls
mov
jno
lods
pop
cwtl
dec
inc
xor
outsb
subb
push
aam
je
fldt
das
add
xchg
jo
movsl
or
arpl
sbb
pop
jle
xchg
inc
push
push
cwtl
test
xchg
add
hlt
push
pop
xchg
cs
test
inc
xor
data16
mov
pusha
add
mov
imul
inc
rcrl
rcrl
shrl
lock
jg
loopne
ja
data16
push
outsb
jg
sbb
test
sahf
xchg
adc
jg
dec
std
in
xchg
sarl
add
adc
xchg
orl
sti
inc
add
scas
inc
out
shlb
dec
and
pop
inc
ja
int
orb
inc
aam
add
xchg
in
int3
xorl
mov
or
or
fisubl
xchg
adc
sbb
xchg
push
dec
lcall
and
shr
inc
sbb
push
std
mov
or
mov
int3
mov
call
cltd
add
fisttpl
shr
js
shrl
test
dec
in
loop
addl
jnp
cmp
jle
add
lods
jnp
add
mov
add
pop
push
insb
sarb
inc
pop
in
sbb
mov
push
int
std
push
pop
dec
dec
mov
and
sbb
fisttpl
xor
mov
aam
popa
in
xchg
pop
adc
pop
sbb
adc
iret
add
adc
cmp
aad
in
push
jae
out
popa
mov
lods
stc
inc
pop
in
test
adcb
lcall
push
push
xor
lcall
cmp
xor
mov
dec
mov
in
mov
cld
jge
jo
cmpsb
lea
popa
out
ret
ja
fidivl
push
adc
dec
outsb
dec
loopne
divb
mov
ja
pop
adc
lods
jne
adc
nop
jecxz
enter
push
out
daa
test
pop
mov
stc
rcrb
xchg
adc
sub
das
mov
insl
outsl
loopne
mov
jle
dec
test
cmpsl
call
inc
loope
sub
pop
test
mov
sbb
aad
sub
out
mov
add
imul
dec
push
and
adc
mov
ljmp
lcall
sti
out
movsb
dec
inc
jns
shrl
loopne
and
cmp
xchg
cmp
or
pop
in
xchg
push
shr
and
stos
adc
cmp
xchg
es
mov
outsb
das
dec
shl
hlt
test
mov
clc
dec
jmp
pop
shrb
mov
sbb
iret
imul
in
jo
sbb
loope
cwtl
scas
pop
push
mov
and
fbstp
add
xchg
mov
sbb
fimull
mov
adcb
dec
adc
cs
xor
mov
push
out
ret
lods
aam
into
pop
int
into
mov
jns
sbb
shr
jne
daa
ret
addr16
push
push
cli
pop
push
pop
jecxz
xchg
loop
push
pop
cwtl
inc
mov
cmpl
in
dec
push
aaa
adc
negb
mov
lcall
cmp
jle
insl
push
or
adc
lods
cmc
ss
ret
dec
xor
sub
out
cwtl
push
cmpsb
adc
mov
movsb
imull
push
stc
faddl
andb
cmp
test
mov
enter
insl
xchg
jmp
and
hlt
xchg
push
jg
sub
jmp
adc
add
xor
cmp
add
mov
dec
lahf
mov
repnz
mov
dec
xor
pushf
add
loope
je
adc
in
jb
les
sub
and
out
mov
imul
rorl
aad
cld
lods
test
mov
cmp
push
add
push
inc
mov
jg
dec
and
enter
mov
outsl
popf
xor
dec
inc
mov
jl
jmp
jns
pminub
aad
push
push
push
repz
mov
push
pop
dec
addr16
and
push
push
scas
xor
jmp
jge
pop
adc
dec
outsb
jmp
push
ja
fwait
out
jbe
or
mov
xchg
lcall
test
push
test
add
inc
imul
dec
fisttpll
fnclex
mov
ret
inc
push
or
je
and
mov
mov
inc
push
jp
dec
adc
push
loopne
fidivrl
cmc
mov
and
mov
dec
popa
cmpsl
lcall
cmp
ficomps
push
add
dec
sub
incl
xchg
add
mov
loope
outsl
aad
xchg
orb
fsubrl
das
lods
stc
adc
lds
daa
pop
or
mov
aas
xchg
mov
xor
pusha
in
movb
inc
enter
mov
mov
ds
mov
pop
xchg
aaa
mov
mov
or
lahf
mov
mov
mov
out
and
dec
mov
xor
mov
add
mov
mov
std
or
pushf
jae
insb
into
push
aaa
and
ss
adc
js
adc
sbb
jnp
add
orb
bound
add
bound
fwait
xchg
mov
sbb
add
daa
add
xorl
fidivrl
pop
lock
dec
cli
scas
push
pop
es
aad
loope
cmpsb
mov
subl
or
dec
pop
mov
sahf
mov
mov
int3
aaa
push
imulb
jl
test
pop
movsl
cmp
andl
dec
xchg
add
and
add
pushf
cmp
sbb
jp
fdivp
mul
pop
xlat
pop
pop
clc
push
adcb
sub
dec
sbb
xchg
xchg
dec
lcall
cwtl
inc
lods
jg
add
aad
lock
ds
xchg
movsl
lock
sbb
call
ljmp
adc
xor
jo
dec
mov
lods
pop
addr16
push
mov
cmp
xchg
sbb
push
xchg
cmpsl
dec
test
push
repz
fidivs
cmp
mov
jle
push
pop
dec
sbb
dec
xchg
push
test
mov
dec
xor
movsb
mov
add
and
sub
aam
add
xor
fucomi
in
fcos
xchg
or
mov
pop
and
jmp
push
push
sbb
shll
test
fcoml
lcall
pusha
or
pop
lea
call
jns
nop
in
push
out
pop
neg
das
sub
lret
bound
and
in
fiadds
sbb
shl
into
clc
and
xor
inc
addr16
and
sbb
jns
jl
repnz
and
pushf
shr
les
inc
adcb
fwait
mov
pop
mov
scas
push
andb
xlat
outsb
cwtl
jmp
in
fs
test
adc
cmp
test
vmwrite
dec
xchg
lods
ss
xor
cltd
nop
jmp
xor
es
outsl
fcomi
imul
jecxz
add
push
mov
fsub
aaa
push
or
adc
jl
mov
shll
lret
sbb
aaa
adc
jns
push
test
adc
ret
jmp
out
out
lret
fsubl
pop
push
in
shr
iret
arpl
sbb
loope
add
jge
bound
push
stos
js
inc
das
and
mov
sbb
dec
pop
andb
leave
push
shll
aam
mov
addl
push
inc
shll
xorb
push
repnz
jns
fistps
daa
cmp
inc
inc
ds
fwait
push
cmp
jno
std
mov
xchg
pop
dec
sti
sub
mov
cmp
or
loop
mov
in
inc
cltd
mov
cmp
ja
add
lods
insb
pusha
push
lods
mov
pusha
dec
lods
out
cmp
out
jo
popa
cmp
inc
sbb
cmc
scas
pop
mov
mov
dec
push
and
sub
or
push
cmpsl
insl
roll
and
adc
jnp
lock
dec
mov
push
jo
jp
pop
cmpsl
popf
sub
adc
mov
fs
cltd
orl
psadbw
sub
inc
inc
add
or
mov
pop
push
test
in
ljmp
push
call
nop
in
rclb
incb
daa
std
sbb
lea
adc
xlat
cmp
xchg
scas
mov
sbb
fmulp
in
ret
ret
fcoms
xchg
jge
push
jo
and
repz
pop
sub
fisubrs
insl
call
dec
push
cs
dec
or
mov
or
paddsw
sub
mov
push
pop
cmp
xor
or
push
jl
or
bound
push
aad
test
and
dec
sub
or
out
jae
mov
mov
cmp
xchg
filds
cwtl
call
lret
or
test
xor
inc
add
cld
pop
push
stc
push
inc
push
pop
mov
pop
imul
insl
or
std
cmp
fs
shlb
ljmp
inc
test
mov
jno
push
movsb
mov
pop
mov
sbb
or
out
pop
jo
jl
frstpm(287
xchg
in
xchg
nop
cltd
fcomi
jmp
jle
sti
and
xor
push
popf
mov
das
pop
sarb
sbb
out
jp
sub
loopne
aaa
fwait
mov
sti
or
in
inc
push
mov
pushl
mov
mov
imul
aam
push
and
adc
xor
xchg
adc
bound
aam
dec
out
lret
jl
or
and
lcall
add
push
nop
jne
xchg
pushf
cmp
jp
dec
dec
adc
mov
sbb
mov
mov
dec
sub
outsl
pop
aad
imul
cmp
jp
mov
sbb
jae
adc
xchg
into
cmpsl
mov
js
dec
mov
adc
addl
add
add
jl
mov
stos
out
pop
mov
push
xlat
dec
jmp
fwait
andb
je
call
pop
outsl
sub
jno
rorl
mov
jmp
push
hlt
stos
xor
sub
mov
sti
lods
call
inc
je
loopne
dec
xor
adc
adc
push
adc
mov
xor
into
cmp
test
mov
cli
mov
imul
int3
sbb
mov
aas
inc
iret
cs
sti
or
dec
enter
pop
xchg
insl
jmp
clc
cmp
roll
sbb
pop
jle
xor
icebp
in
stos
mov
add
lods
fcmovbe
scas
aas
jp
push
mov
pop
movsl
into
lea
xchg
sub
lds
push
insb
sbb
pop
sbb
out
cmpsb
lret
loope
adcl
mov
fwait
and
cmp
fidivs
test
xchg
dec
fs
data16
lret
push
icebp
mov
sti
mov
push
int3
pop
mov
jne
sahf
js
ljmp
mov
mov
xchg
push
mov
push
mov
daa
adc
pop
insl
xor
or
mov
mov
and
dec
cli
hlt
push
aam
pop
add
inc
adc
notl
lret
movsl
cmpb
push
cmc
ljmp
mov
or
addl
mov
adc
fmull
arpl
and
cmp
loopew
push
mov
call
cmp
pop
cmp
xor
mov
ror
dec
nop
popf
and
das
sbb
arpl
xchg
stos
cmp
pop
pop
jl
data16
inc
adc
cltd
arpl
inc
or
rol
je
std
pop
adc
xchg
pop
pop
xor
insl
fstp
popa
ret
stos
lcall
into
not
cmp
add
mov
fcoms
mov
gs
mov
js
addr16
xchg
inc
mov
mov
int
push
flds
adc
push
pop
sbb
pop
push
divl
sbb
add
sbb
cltd
and
in
add
shr
push
fwait
scas
adc
insl
in
sub
outsl
mov
clc
push
push
or
mov
fwait
neg
sub
inc
pop
lret
mov
shlb
or
sub
clc
sub
mov
loop
ret
inc
ja
lahf
jecxz
dec
push
fs
jnp
js
ret
sub
andl
push
not
aaa
in
out
in
daa
shrl
mov
pop
outsl
or
int3
fnstsw
adc
mov
jge
subb
daa
inc
data16
inc
rclb
jno
fwait
adc
ret
cld
or
popf
aaa
adc
loope
jle
in
jns
or
adc
out
ja
mov
jne
dec
in
pop
mov
sbb
sbb
push
pop
push
test
lret
dec
dec
xor
sbb
mov
adcb
daa
or
mov
insl
sub
insb
call
test
xchg
pop
outsl
cmpsb
mov
leave
jno
mov
pop
dec
adc
hlt
or
xor
loop
je
xor
rcll
pop
push
loope
jns
jecxz
push
mov
sar
add
adc
pop
or
stos
jl
inc
lea
insl
rclb
cmp
dec
or
repnz
outsl
mov
test
mov
scas
mov
sub
imul
fidivl
data16
faddl
jmp
roll
cmp
repz
dec
sub
add
jmp
pusha
lcall
fsubl
out
je
addb
dec
nop
cmp
sti
and
inc
ja
in
push
or
push
cmp
pushf
stc
sub
xchg
mov
sbbb
sbb
loopne
cmpb
mov
neg
divl
ret
test
sbb
adc
jmp
jnp
scas
mov
es
cmp
xchg
mov
push
push
repz
and
push
pop
sub
hlt
mov
sbb
fildl
in
ja
stos
sti
leave
ret
sbbb
jg
jecxz
pop
adc
orb
fsubrl
push
lds
loope
cmpsl
xchg
call
cmp
mov
xor
inc
notl
inc
inc
mov
sbb
adc
dec
xor
fstpt
xchg
inc
dec
cltd
adc
and
or
aad
daa
insb
or
xchg
cmpl
in
mov
push
push
cmpsl
imul
sti
je
jge
and
jle
sahf
xor
fstps
pusha
cmpsl
jne
outsl
dec
sbb
imul
pop
sbb
gs
mov
shll
jle
hlt
sub
dec
out
ror
stos
pop
mov
xlat
adc
jg
xchg
adc
ret
inc
sti
fnstenv
jmp
jle
mov
and
jmp
jnp
and
sti
cmc
mov
cmp
xchg
dec
push
sub
or
int
mov
imul
daa
sbb
xchg
pop
cltd
lret
mov
ror
imul
adc
mov
sbb
test
inc
cmpsb
push
xchg
push
xor
xchg
les
divl
std
cmc
mov
aas
push
sti
sahf
add
adc
arpl
shufps
fstps
jns
test
cltd
testb
movsl
insb
fstp
mov
js
clc
rolb
jae
mov
pop
pop
push
dec
mov
fidivs
fstpt
jp
test
movsb
jo
sub
and
lret
cmp
inc
insl
repnz
into
sbb
sbb
jb
pusha
cmp
data16
dec
fdivrl
ret
mov
sbb
push
js
ret
out
jno
outsl
jbe
dec
icebp
mov
pop
dec
xor
addr16
dec
push
in
loop
mov
ljmp
cwtl
add
jae
scas
xlat
mov
xchg
dec
mov
mov
fldl
push
xchg
and
jp
dec
sub
repz
lea
jne
lret
ljmp
lcall
xchg
jb
and
xchg
mov
pusha
inc
scas
adc
xor
mov
cmpsl
xchg
mov
jb
cmp
lods
lahf
sub
and
loope
ss
les
push
jmp
cmpsb
aaa
xor
pop
rcr
lcall
fists
fxch
dec
or
push
sti
push
test
adc
mov
scas
lea
mov
fimull
jae
rolb
xchg
adc
lret
dec
in
inc
add
loope
inc
mov
cmp
inc
mov
lock
cli
mov
les
dec
mov
mov
and
ja
cld
and
inc
icebp
xchg
aam
cli
cmpsb
mov
lods
aas
push
pop
insl
iret
inc
in
pop
mov
cli
xor
mov
mov
xchg
cmpb
je
and
dec
gs
mov
fistpll
jo
daa
jge
je
xchg
dec
xchg
jnp
inc
inc
rorb
or
dec
movsb
into
int
mov
xchg
out
aam
or
jp
inc
mov
rorl
push
xchg
sbb
adc
mov
ret
mov
and
shll
lret
shrl
nop
loope
mov
push
add
mov
scas
loop
pop
push
or
loopne
xor
subb
aaa
pop
xchg
or
mov
jecxz
stos
dec
in
mov
dec
out
inc
adc
std
push
cmpsl
inc
inc
xor
inc
cltd
ret
lds
xor
mov
dec
or
stc
shlb
pop
add
pop
mov
in
and
dec
dec
sbb
pop
xchg
repz
push
mov
gs
jmp
mov
lret
insl
lds
dec
aas
cmpsl
add
push
dec
mov
iret
lods
mov
imul
jne
mov
mov
test
icebp
data16
add
shr
pop
in
adc
das
daa
sarl
leave
mov
pusha
out
and
mov
dec
or
dec
xchg
jmp
popf
stos
cmp
mov
dec
loop
pushf
xlat
sti
clc
shl
cmp
mov
jmp
jae
dec
sbbb
mov
and
push
adc
inc
stos
and
outsb
popa
fxch
push
lret
xor
stos
push
roll
shl
shrb
faddl
xlat
inc
out
lcall
sub
les
lahf
mov
cmp
inc
sub
inc
xchg
or
rorb
aam
push
scas
pop
adc
pop
imul
repnz
sub
and
mov
sub
stos
jle
mov
cmp
ret
push
int3
shl
mov
mov
push
push
adc
cmc
mov
dec
sbbl
leave
and
sbb
rcrl
lcall
test
jge
das
xchg
add
sbb
in
imul
mov
mov
sub
mov
fwait
xor
fcomps
push
xchg
xchg
int
lock
rdpmc
outsb
or
out
mov
inc
mov
cwtl
xor
orl
lcall
xchg
inc
call
pop
jl
inc
int
mov
push
fmul
mov
cld
les
mov
mov
call
push
int3
dec
mov
rcrl
jns
inc
and
nop
mov
sbbb
ss
cmp
nop
or
fs
fiaddl
lea
pusha
lahf
inc
lods
mov
pop
incb
mov
inc
cli
or
sti
jno
adc
adc
nop
xor
rorl
push
jg
xor
dec
sub
inc
scas
jne
std
mov
sar
repnz
call
ja
dec
insl
in
inc
add
sbb
and
pop
int
std
and
jl
pop
cli
pop
pop
pusha
mov
fs
mov
pop
negb
xchg
mov
pop
fildl
pusha
jp
test
mov
jns
add
mov
shr
or
xchg
aaa
push
mov
pop
push
mov
sbb
jbe
arpl
ret
fdivl
in
sbb
lods
clc
shll
jns
outsb
shrb
adcb
sub
mov
adcb
push
push
mov
xor
cmp
lret
fidivs
xor
fistpll
jmp
dec
jno
movups
aam
xor
jp
mov
ss
pop
outsl
mov
cmp
cmp
pop
sbb
stos
inc
imul
icebp
sbb
cs
xor
dec
icebp
mov
iret
clc
push
mov
pop
test
mov
sub
cmc
xchg
test
fcom
push
out
je
shlb
rcrl
adc
mov
fcomi
mov
ja
sub
xchg
in
pop
clc
jmp
in
jp
adc
pop
adc
out
ljmp
scas
mov
out
or
cli
inc
sbb
cltd
int
xor
sub
sbb
mov
mov
xchg
xchg
sahf
mov
jns
adc
enter
cmp
or
adc
sbb
jnp
repnz
cmp
out
pusha
adcb
ds
in
imul
mov
mov
and
addr16
pop
jmp
bound
dec
mov
fcmovnu
push
in
les
inc
outsb
xchg
adc
xchg
les
addb
in
punpckhbw
cmp
pop
loopne
mov
push
in
push
test
inc
jno
push
pop
rcr
iret
pop
in
push
adc
pop
ss
mov
push
mov
sbb
jno
shll
pop
mov
lret
sbb
xlat
stc
xlat
mov
and
int3
push
pop
test
push
jne
dec
adc
add
aaa
dec
ret
add
mov
nop
out
jle
cmp
out
sbbb
xorb
mov
in
pop
ja
das
out
lods
push
or
push
test
nop
sbb
das
pusha
stos
cmpl
mov
adc
in
mov
pop
or
cltd
xchg
mov
jnp
sti
out
aam
popa
rcrl
adc
cmpsl
push
fidivs
imul
and
cwtl
fwait
les
fsubl
clc
push
arpl
dec
sub
adc
mov
jno
insb
lea
jg
mov
push
in
aad
and
push
icebp
fcomps
in
or
jo
popf
flds
mov
je
push
lock
iret
sub
movsl
cs
cmp
xor
in
fsubs
subl
lret
or
sub
bound
scas
ret
in
xor
and
mov
je
mov
pop
in
jle
dec
vpshufhw
imul
shrl
arpl
imul
mov
add
jno
sbb
push
mov
sbb
mov
inc
jge
cmpsl
pushf
in
mov
loopne
cmp
rclb
dec
loop
xchg
movsl
dec
adc
iret
leave
insb
jp
jge
aaa
rolb
mov
ss
and
out
daa
xchg
insl
cmp
push
sub
xchg
mov
sbb
or
lret
repnz
dec
lcall
lahf
cmc
or
loop
fbld
enter
int3
sub
fcoms
jns
insb
lret
mov
push
mov
xor
dec
stos
lret
sub
loope
movzwl
jae
jns
adc
movb
mov
test
insl
push
cld
iret
fcoml
add
stos
lcall
ret
xor
lods
adc
andl
test
imul
mov
xchg
rorb
mov
push
sub
clc
sub
or
cmpb
out
pop
inc
adc
pushf
and
xchg
js
push
fnsave
add
mov
cmp
xchg
add
movsl
loop
ret
out
stos
popa
or
and
lret
insl
out
js
sbb
gs
bound
out
mov
aas
imul
div
ljmp
iret
repnz
or
or
jecxz
fcomp
ds
popf
mov
jl
xchg
and
sub
daa
sbb
mov
fisubl
sub
repz
daa
mov
push
xchg
mov
cmp
adc
dec
pop
cmp
js
mov
mov
push
push
mov
or
jl
xor
sub
andb
jmp
add
add
sbb
push
mov
xor
xor
xchg
les
rcl
xchg
cmp
mov
inc
aas
cmc
adc
lds
sub
inc
push
scas
aas
xor
and
add
aam
xchg
mov
sbb
mov
rclb
cmp
loop
ljmp
mov
mov
mov
inc
xchg
lds
ss
in
inc
lds
loop
pop
sbb
test
push
ret
fs
fdivrs
ret
mov
ja
inc
xor
pop
imul
push
dec
je
inc
scas
cmp
push
mov
mov
sti
pop
ret
add
leave
movsb
jecxz
push
jecxz
mov
sbb
ljmp
nop
outsl
je
jl
xchg
lret
mov
mov
lods
xor
fisttpll
movsb
xchg
aam
icebp
bound
push
idivb
cmpsb
sahf
mov
shrl
sub
mov
pop
jno
fs
push
pop
repz
stos
insl
and
mov
or
jnp
gs
adc
pop
lods
and
movsl
imul
xchg
xchg
lods
ss
pop
cltd
mov
imul
pextrw
loopne
aaa
in
lahf
lods
rolb
sbb
lret
bswap
outsb
jle
out
push
and
aam
and
aas
sbb
mov
xor
mov
in
push
lahf
fisubrl
repnz
xchg
cli
xor
xchg
fistps
stc
lods
fcompl
test
xchg
push
jnp
int3
push
and
sti
into
adc
jecxz
shrb
outsb
pop
sbb
pop
mov
or
and
xor
pop
sub
in
xchg
ret
or
imul
in
je
inc
jl
std
or
out
adc
add
push
mov
call
cmpsb
cmp
pusha
cwtl
test
dec
lock
or
out
ds
scas
cmp
popl
pop
rolb
jp
jl
cmp
mov
popw
cwtl
cli
sbb
stc
addr16
push
adc
popf
inc
mov
jo
int
cmpsl
imull
sti
pop
push
cmp
repnz
jmp
sub
cli
sub
repz
xchg
push
xchg
mov
mov
sti
jno
cli
jo
mulb
popf
mov
or
ss
es
in
dec
cli
int3
xor
inc
and
jbe
rorb
jns
bound
or
push
ret
inc
push
shr
stos
push
mov
mov
movsl
in
cmpsb
dec
arpl
mov
add
out
and
mov
jge
pop
fs
xchg
or
cli
imull
xor
jns
push
cmc
jae
push
or
push
bound
in
push
add
aad
shll
sahf
jp
jp
or
loop
dec
jmp
cmp
jo
popf
mov
scas
je
repz
mov
and
xchg
add
push
pusha
out
mov
xchg
gs
xchg
jecxz
mov
mov
inc
sbb
pop
in
aaa
xchg
pushf
cmp
add
jl
xabort
push
jmp
mov
jo
sbbb
lret
in
mov
ljmp
pop
int
mov
sbb
fdivrl
ret
mov
jle
popf
mov
push
insl
inc
adc
mov
scas
cmp
cmp
scas
cld
in
sahf
jbe
adc
mov
sbb
arpl
sub
fdivrs
pop
je
movsb
addl
push
test
leave
jle
cmp
mov
fldl
add
mov
arpl
adcb
pop
and
xchg
push
inc
popf
aam
inc
shr
lea
ljmp
inc
lds
nop
nop
or
cs
fisttpl
mov
into
xchg
out
adc
in
clc
sti
adc
es
out
hlt
xchg
or
jb
cwtl
pop
xchg
lods
movb
fimuls
hlt
jno
push
outsb
rolb
push
and
mov
enter
pusha
jno
jmp
in
fidivs
mov
outsb
lods
mov
iret
outsl
cmp
xor
repz
daa
in
adc
repnz
insl
add
mov
xor
xchg
rcll
xchg
sbb
inc
jae
xor
into
imul
jecxz
or
orb
in
and
loop
mov
jno
sub
inc
das
imul
mov
js
adc
cmpsb
mov
push
mov
push
lods
imul
icebp
xor
xlat
push
push
data16
pop
mov
adc
cmp
loop
push
xchg
lret
insb
add
mov
scas
jge
sar
out
cmc
in
out
mov
jb
fs
jp
xchg
push
cmp
sub
ret
cmp
lds
scas
addr16
repz
idiv
xlat
gs
ss
repz
add
leave
lods
xlat
stos
stc
sahf
iret
sub
into
xchg
out
add
lahf
xor
hlt
dec
ja
mov
mov
mov
or
jb
xchg
mov
stc
pop
rorl
lret
dec
xlat
jl,pn
movsl
jp
cmp
mov
mov
aas
out
in
out
aaa
test
scas
jle
push
adc
mov
jle
mov
pop
inc
pop
inc
add
rcll
out
ja
frstor
divl
lcall
lods
ret
repnz
lcall
das
mov
idivb
aaa
sbbl
cmp
sbb
xchg
push
repnz
inc
stos
insl
insb
out
xchg
inc
cmc
pop
ret
jnp
lock
mov
shlb
int
push
mov
sub
pop
ret
pop
xor
pop
sbb
out
into
sbb
jl
daa
ss
mov
mov
imul
testb
out
nop
jg
jns
mov
mov
pop
jmp
scas
jo
adc
adc
cmp
dec
inc
shrl
cmp
xchg
jno,pt
imul
pop
leave
sarl
adc
rol
xchg
mov
push
aas
jle
xchg
out
push
jbe
push
sbbl
fnstcw
dec
mov
jl
movl
pop
stos
popa
xchg
mov
adc
push
inc
loop
lret
das
sbb
dec
test
dec
push
ja
push
ret
lds
das
call
outsl
sub
es
jo
jg
and
fwait
sub
jge
dec
and
push
jne
push
add
and
cmpsl
nop
into
pop
push
scas
inc
inc
jle
xchg
push
jae
shll
or
lret
sti
xchg
mov
fisttpl
sbb
or
jl
mov
xchg
sti
inc
mov
sbb
adc
mov
mov
mov
pop
filds
mov
cld
dec
aam
push
stos
imul
int
imul
bound
adc
add
lods
aas
push
mov
mov
cmp
cld
shrb
call
pop
and
addb
cmp
adc
fadds
add
inc
pushl
popf
cmp
mov
outsb
sahf
mov
fbstp
xchg
shll
incb
ficoml
ljmp
mov
push
mov
cmpl
out
fcmovne
std
loop
mov
jb
in
sbb
mov
jne
cmp
call
push
add
aad
lcall
movsl
loope
sub
lock
in
jge
add
cmp
in
inc
dec
ret
xchg
ja
pop
fldcw
xchg
cltd
xor
push
push
cs
outsl
aam
sbb
pushf
test
jb
hlt
cmp
and
fcmovnu
bswap
test
add
dec
icebp
pop
les
into
push
sub
inc
ja
mov
sub
shll
mov
pushf
lea
adc
addr16
mov
and
enter
mov
dec
xor
and
xor
loope
lock
xor
lret
sbb
pop
enter
xchg
mov
mov
das
sbb
inc
pop
push
inc
inc
int3
cmpsl
and
push
xchg
mull
std
cmp
outsl
adc
mov
roll
push
and
divl
movsb
or
rcll
in
lahf
push
jge
inc
xchg
dec
push
outsb
ds
lea
xlat
shll
lret
and
out
jg
push
jl
scas
sub
ficoml
dec
lahf
mov
testb
jns
orl
cmc
push
divl
push
dec
mov
pop
adc
mov
popa
xchg
ljmp
add
ljmp
xchg
ds
cmp
push
adc
cwtl
push
ss
cmp
lock
outsb
cmp
scas
or
adc
fnstenv
mov
jp
dec
int
dec
and
xchg
cmp
sbb
sub
cmpsb
pop
data16
ret
inc
ret
test
mov
stc
mov
jae
aas
shrl
aaa
xchg
pop
mov
rol
mov
in
fimuls
or
xor
pop
add
jp
pusha
sbb
inc
sbb
mov
fidivl
ljmp
cmp
add
rcll
test
in
cmc
dec
dec
fistps
fldenv
lods
jae
imul
arpl
std
repnz
inc
in
mov
sbb
fwait
loope
repz
pop
lret
fimull
add
xlat
sub
cwtl
push
mov
lcall
add
push
cmp
dec
neg
push
xorb
mov
sbb
push
add
inc
jl
jecxz
xor
mov
xor
jno
sbb
test
mov
mov
into
xchg
cvtps2pd
stos
clc
mov
mov
dec
popf
sar
aam
loop
ret
movsl
xchg
pusha
cmpsb
mov
sahf
add
xor
xchg
fsubr
bound
mov
iret
aas
iret
int3
mov
movsl
das
loope
jmp
std
cmp
scas
push
pop
lret
pop
sbb
jbe
cli
dec
lock
and
imul
popf
push
clc
push
divb
mul
call
int
cmp
cmp
or
push
orb
sbb
daa
or
mov
jbe
imul
jo
addl
imul
cmpsl
xor
lods
xor
sub
js
xchg
mov
jnp
pop
pop
hlt
out
andl
orl
sbbl
mov
sbb
cmp
scas
cltd
out
pop
ffree
and
cmp
sbb
jnp
ret
adc
sub
inc
or
xchg
rcr
xchg
or
xor
stc
mov
push
int
lret
shll
mov
or
addr16
sbb
stc
repz
sub
xchg
lock
out
insb
add
mov
outsl
psubusb
mov
pop
rep
and
test
imul
lea
fs
mov
inc
js
aaa
xchg
cltd
ret
test
bndldx
test
and
outsb
jns
add
jo
jmp
pop
jle
pop
in
sbb
int3
lcall
mov
shll
lea
push
jno
dec
insl
xchg
notb
sbb
fidivrl
cmp
or
adc
push
cmpsb
mov
or
cmp
gs
nop
add
pop
lret
es
les
sti
mov
or
or
out
iret
cmc
in
push
sbb
push
arpl
jl
mov
jb
ficoml
inc
loope
fimuls
xchg
pop
lret
mov
into
sbb
mov
mov
pop
out
cmpsl
pushf
test
cmp
rorb
lcall
loop
adc
pop
nop
xchg
sub
mov
mov
shl
xor
push
push
push
popa
sub
push
orl
push
jle
mul
xchg
jns,pn
enter
push
push
adc
loope
inc
aaa
repz
mov
lods
cmpb
push
cmp
jno
clc
xlat
lods
sub
sbb
fadd
add
aas
stos
or
mov
lock
mull
mov
fisubl
cli
pop
test
or
pop
popa
push
jb
hlt
xchg
jo
dec
gs
jae
xchg
jbe
xchg
ffree
bound
xor
pop
xchg
in
and
mov
xor
arpl
xchg
push
imull
sub
int
fnstcw
mov
fistl
cwtl
ret
outsb
mov
xor
dec
adc
cs
in
push
sub
sbb
mov
mov
bound
jg
mov
mov
and
mov
fs
dec
or
cld
and
and
add
outsb
mov
mov
pop
loope
mov
mov
popf
test
lcall
bound
out
ret
xor
mov
bound
or
mov
push
test
jmp
mov
cmp
ljmp
inc
out
pop
jns
test
pop
xchg
fmuls
dec
ficoml
test
xchg
adc
cmp
lcall
aad
stos
rorb
dec
lock
mov
adc
fcoml
or
sub
or
dec
xchg
insb
addl
pop
push
subb
adc
dec
dec
neg
sub
repz
es
decl
fcom
inc
mov
sbbl
inc
dec
cld
jp
and
loope
cmp
mov
cli
cmp
jo
mov
mov
lahf
in
add
push
xchg
clc
mov
ret
ja
fdivl
adc
cs
cvtdq2ps
and
jne
std
and
dec
imul
inc
test
jge
movl
and
mov
cmp
out
movsl
sar
jge
push
jns
add
xor
mov
or
adc
clc
mov
test
jecxz
xchg
rorl
cs
scas
dec
lea
xor
inc
subb
mov
mov
inc
test
roll
or
lfs
push
and
in
jmp
sarb
incl
mov
fwait
xchg
icebp
xor
incl
and
jg
sbb
mov
push
fst
movsb
mov
ljmp
cmp
jg
dec
jne
cmpsl
scas
lock
cld
into
insl
sarl
jmp
mov
mov
fnsave
aas
mov
pop
mov
xchg
pop
cwtl
outsb
or
cld
into
ja
loope
cmp
jge
cmp
popa
stos
push
in
out
and
fcoml
mov
inc
mov
xchg
out
nop
mov
pushf
and
cmc
xchg
movsl
push
cli
xor
xor
test
mov
arpl
call
int3
leave
or
insb
mov
fldt
fnstsw
adc
inc
and
jbe
jno
cmc
fnstcw
mov
movsb
xlat
fisttps
xlat
jmp
or
push
jmp
call
dec
mov
into
aam
jns
adc
xchg
sub
mov
cltd
test
add
cmp
gs
cmp
insl
pop
fidivs
jns
stc
lcall
jl
mov
stos
rcll
mov
adc
repz
js
mov
cmp
mov
cltd
in
lods
jg
mov
sub
jo
sub
jge
imul
and
loop
mov
aas
xchg
mov
pop
xor
jne
test
ret
test
enter
ret
lods
clc
push
and
test
aam
jb
loope
fmull
dec
adc
sahf
into
out
arpl
mov
adc
cltd
nop
ffreep
jp
pusha
maxps
push
cltd
dec
popf
mov
jb
mov
sti
loop
mov
push
in
test
popf
or
mov
je
inc
jnp
mov
in
dec
insl
pop
jmp
popa
lret
stos
jl
fimuls
cmp
dec
rcrl
jmp
and
cmpsb
cs
ror
inc
mov
rcrl
mov
push
push
pop
or
lods
mov
jne
push
jp
jns
inc
pop
mov
jge
xchg
jo
bound
mov
stos
test
jnp
mov
mov
jecxz
sbb
mov
dec
and
push
pop
addr16
sbb
ret
loopne
clc
and
xchg
mull
pop
push
pop
inc
mov
lds
xor
jge
jge
lea
mov
inc
mov
psubusw
inc
out
jb
xchg
mov
cli
loop
repz
loopne
stc
jmp
inc
das
ljmp
sti
jb
mov
pop
sbb
fsubr
inc
jbe
jle
cmpb
jge
je
mov
mov
sbb
pop
call
ret
inc
mov
aam
push
lods
mov
out
mov
sbb
outsl
gs
sub
mov
mov
xchg
mov
fiaddl
and
fwait
movsl
outsl
add
sbb
mov
out
mov
rcrl
and
sub
xorl
and
lods
cltd
ja
aad
loope
stc
mov
rolb
jl
lods
hlt
int3
mov
pusha
adc
push
dec
cltd
aas
dec
xor
pop
xchg
xor
or
imul
sbb
mov
sub
enter
jmp
adc
cs
and
aad
jbe
sub
cmp
vandpd
adc
test
xchg
ficomps
dec
inc
mov
mov
jo
ja
and
and
inc
js
pop
outsl
arpl
icebp
ds
pushf
mov
sbb
inc
jae
outsl
push
sti
dec
jl
cmpsl
lock
out
fsub
mov
sbb
add
loope
into
add
pcmpeqb
repnz
mov
test
andl
or
xchg
fs
mov
inc
popf
cmp
subl
jg
add
into
in
dec
cld
mov
into
insb
jmp
push
adc
rorb
jno
mov
scas
fistl
add
add
xor
lahf
cmp
xchg
add
arpl
adc
test
mov
arpl
cmp
mov
scas
lock
mov
pop
sub
sub
cld
jmp
adc
jne
jg
fcmovnb
inc
jecxz
inc
mov
adc
jae
or
lcall
push
leave
hlt
ret
dec
push
xchg
fisttps
leave
in
stc
out
ret
sub
int3
ljmp
xchg
js
pop
add
lods
inc
rcr
seta
mov
pop
shr
sti
pop
ljmp
push
in
cmp
lcall
std
daa
int3
jmp
xchg
outsb
inc
dec
jmp
outsl
iret
inc
sub
inc
add
loope
js
dec
lcall
out
xor
xchg
sub
jns
nop
test
aam
cmp
in
add
push
cmp
inc
sub
jecxz
rorb
in
lods
ret
push
outsl
sbb
imul
lea
xchg
add
imull
lret
mov
add
mov
or
xor
cs
test
mov
sub
and
or
mov
or
insb
mov
adc
dec
xchg
jp
lcall
es
popa
je
push
push
lods
pop
lds
sbbb
repnz
mov
and
sub
fmuls
xlat
frstor
mov
mov
xlat
jne
cmp
cltd
fisubs
push
push
and
mov
js
int
push
leave
pop
push
iret
xlat
jae
dec
scas
cmp
repz
test
xchg
repz
or
in
jge
emms
jo
pop
ja
in
push
jge
jno
addr16
xchg
adc
mov
or
mov
or
enter
mov
mov
mov
pop
mov
scas
push
jb
mov
adc
pop
mov
xor
arpl
iret
jmp
add
mov
ss
rcrb
pop
in
push
movsb
pop
es
and
xchg
push
insl
lret
jl
xchg
sub
sub
cmp
mov
jge
ror
sbb
ja
adc
pop
lods
addr16
sbb
adc
movsl
enter
fsubr
xor
aam
imul
xchg
inc
inc
fdivrl
lret
xlat
sbb
cltd
pop
jae
dec
mov
ret
or
rcrl
fmull
xchg
sarb
mov
mov
fstps
stc
insb
popf
popf
popf
sub
dec
pop
and
pop
push
bnd
sbb
sbb
test
ja
sbb
lahf
jns
cmp
dec
cmp
addr16
bound
cmpsl
ret
ficoms
sub
xchg
add
inc
out
cld
xchg
sbb
call
sub
movhps
imul
sar
es
mov
fprem1
cwtl
jnp
xchg
or
adc
pop
xlat
adc
mov
sbb
into
repz
incl
add
lods
adc
mov
pop
fmul
lock
mov
inc
mov
rorl
mov
roll
mov
adcl
test
adc
inc
mov
add
push
pop
outsb
dec
fcoml
andl
shll
adc
sarl
test
imul
push
xor
cwtl
xchg
adc
jbe
sarb
bound
mov
mov
sub
sbb
mov
lret
mov
stos
xor
and
cmpsb
or
popa
subl
sahf
sbb
bts
pop
insl
mov
insl
push
mov
pop
fisttps
in
loop
ds
decl
inc
jmp
pop
pop
mov
push
orl
inc
test
inc
fisubs
jbe
aas
mov
mov
add
test
pop
or
aam
imul
xchg
iret
mov
cmpl
xor
or
sahf
adc
fsubr
pop
xor
fwait
lea
stc
inc
enter
test
and
inc
ds
mov
mov
inc
pop
pop
mov
push
scas
ljmp
inc
push
in
fldenv
popa
jg
test
sbb
jmp
in
dec
loopne
out
push
lods
mov
rcrl
ljmp
ss
cli
xchg
stos
insb
dec
adc
sbb
mov
dec
fbstp
int
mulb
xor
js
insl
movsl
cmpsb
inc
testl
cmp
inc
push
addr16
cli
sub
cmp
sahf
outsl
adc
dec
inc
mov
bound
pusha
or
data16
dec
add
clc
push
ss
dec
inc
addb
cmp
gs
lods
js
pop
lds
popw
cmp
cmp
lcall
dec
mov
fisubs
ret
push
mov
add
scas
lahf
aaa
jge
push
test
pop
xchg
imul
jne
ret
in
dec
and
or
lret
call
test
cmp
movsl
das
sub
sbb
out
ljmp
pop
push
sbb
push
pop
call
call
xor
je
mov
loop
out
sub
or
push
mov
pusha
or
les
sub
xchg
add
lret
mov
cmp
sub
sbb
mov
jo
mov
outsl
flds
in
jb
jae
mov
in
mov
imulb
xor
dec
inc
rcrb
pop
push
aaa
repnz
xchg
arpl
cmp
xlat
loopne
insb
pop
jbe
lahf
add
out
jo
and
adc
push
sub
mov
or
data16
in
test
sbb
icebp
pop
les
or
mov
int
cmc
sub
cmp
or
rclb
push
cmp
or
inc
jbe
or
cmp
pushf
adc
cld
sarl
xchg
push
mulb
xor
mov
cwtl
mov
inc
jl
les
icebp
repz
loop
aad
add
mov
push
shl
and
push
cmpl
out
sub
js
test
jmp
dec
add
inc
movsl
or
in
les
sbb
andl
aas
mov
sub
int
sbb
movsl
inc
jge
shll
shrb
outsl
sub
sahf
cwtl
inc
xchg
sti
xchg
mov
jmp
lahf
dec
lods
mov
cmp
shrb
mov
sbb
lret
scas
xor
push
or
pop
inc
lock
xchg
push
test
xchg
xor
push
cltd
dec
adc
or
jbe
mov
push
frstor
imul
or
dec
dec
lods
push
inc
mov
and
dec
mov
push
sbb
test
aam
pop
xchg
imul
cwtl
push
ljmp
or
lods
iret
jo
xchg
out
outsl
loope
lea
mov
and
inc
sahf
cmc
inc
fnstsw
shlb
aad
in
outsb
xor
dec
xchg
xor
push
adc
adc
addb
and
jae
outsb
repnz
cmp
add
mov
je
dec
in
repnz
ficoml
mov
leave
cld
or
cmc
adc
lods
cmc
mov
fndisi(8087
ffree
stos
mov
mov
lcall
aam
idivl
jmp
outsb
cmp
pop
imul
add
sub
hlt
mov
xor
pop
mov
mov
cmp
sub
xor
adc
push
iret
xchg
and
ljmp
sahf
and
or
pop
fsubl
popa
or
mov
push
outsb
mov
lcall
cltd
icebp
daa
shrl
enter
fwait
in
xor
jecxz
inc
mov
stos
insl
mov
push
shl
xor
arpl
bound
arpl
xor
icebp
std
push
dec
inc
mov
pop
sub
stos
mov
insb
cmc
push
or
jbe
inc
xor
mov
or
repnz
push
mov
int3
push
mov
je
xchg
imul
in
inc
pop
out
add
dec
xor
jb
pusha
loop
ret
dec
inc
mov
faddl
jp
mov
insl
adc
push
dec
mov
xor
cmp
xchg
pusha
mov
int
jbe
inc
push
outsl
popf
pop
es
dec
and
cli
lret
jmp
gs
stc
repz
adc
pop
ror
or
test
fmull
mov
or
mov
pop
jg
clc
cmp
mov
aam
and
mov
mov
icebp
or
push
pop
cmpsl
add
mov
in
cwtl
loop
std
xor
adc
insb
sub
test
testb
adc
dec
nop
push
rcl
inc
xlat
das
and
sbb
xchg
jle
pusha
sbb
sbb
inc
lds
int
jbe
out
mov
sub
in
mov
call
ret
rcll
sbb
rcr
rorb
jge
jno
out
pop
ds
mov
dec
xchg
fs
adc
mov
mov
hlt
leave
sub
fcoms
push
gs
jne
and
mov
xchg
and
or
sbb
outsb
inc
cwtl
movsb
and
movsb
hlt
lea
pop
xchg
clts
fisttpll
rorb
sub
cmpsb
sbb
mov
mov
sbb
and
jmp
sub
stos
add
mov
jp
jp
roll
adc
sbb
mov
xor
pop
cmc
push
out
jne
movsl
sub
mov
popf
jno
adc
add
movb
mov
sub
xlat
dec
add
add
adc
xchg
sub
mov
roll
outsb
add
jb
fwait
mov
adc
jp
mov
dec
sbb
or
mov
sub
jp
rorl
mov
ss
ss
xchg
out
or
scas
pop
shlb
ss
stc
add
fwait
inc
insl
mov
jg
push
cltd
cmpb
sbb
mov
cli
xchg
push
mov
jbe
ja
cwtl
jle
or
xor
inc
fisttpll
shll
and
sahf
inc
cmp
inc
mov
cmp
leave
lret
ror
push
stc
cmp
outsb
xchg
and
push
pop
and
aaa
pop
stc
or
add
mov
adc
popf
addr16
fisubrl
sbb
mov
test
xchg
push
mov
arpl
xorl
fdivrs
fld
mov
and
mov
stc
pop
je
sub
dec
les
rcrl
push
push
push
negb
and
jg
mov
mov
cmp
out
pushf
cmp
xchg
adc
jmp
push
mov
sahf
add
movsb
cmp
arpl
add
cwtl
fistpll
jl
pop
jecxz
mov
push
outsl
jl
mov
xlat
sbb
xor
adc
cs
stos
call
aas
subl
cmp
jl
ds
push
lahf
cwtl
enter
push
insb
inc
sarl
inc
cmp
pop
jecxz
repz
icebp
scas
cltd
pop
push
mov
out
push
clc
xchg
cs
jnp
fcoml
aas
mov
mov
sti
test
dec
pop
jae
sbb
dec
adc
or
mov
adc
dec
xor
mov
fs
adc
paddsb
cmp
mov
mov
mov
les
push
cs
lcall
rcrl
popa
xchg
cmpl
sti
inc
sti
in
sbb
lret
hlt
pop
mov
lock
xor
dec
inc
ljmp
cmp
add
jp
push
jmp
cmp
faddl
jae
bound
test
loopne
movsb
enter
ret
xchg
lock
les
cmp
stos
bound
out
mov
lock
lods
pusha
jle
ret
sti
fnstenv
addr16
push
mov
xchg
repz
jge
sub
xchg
inc
xlat
aad
decl
jp
repnz
int
out
push
mov
inc
push
fdivl
adc
fs
dec
test
insl
pop
xlat
fidivrl
dec
dec
ss
mov
in
jno
or
aas
imul
push
bound
cmp
fimull
sub
fcompl
push
in
pop
push
add
mov
push
pop
xor
lret
out
sub
push
or
inc
mov
sbb
out
push
in
movsb
push
cltd
mov
daa
inc
add
dec
in
pusha
jo
mov
cmpsb
int
and
jae
jb
int
push
sub
jbe
xorb
pop
xchg
cld
test
push
xchg
fmuls
inc
aas
xor
imul
inc
dec
push
pop
fdivp
sbb
inc
pop
insb
push
mov
loope
js
mov
aas
xchg
outsb
cmc
cmpsb
sbb
cmp
cli
test
adc
fmulp
mov
pop
and
ds
loop
rcrl
xor
scas
jbe
mov
insb
mov
mov
fisubrl
push
mov
adc
or
xchg
lret
sbb
sbb
jnp
out
rcrl
fs
loopne
add
xlat
push
pop
mov
mov
sub
pusha
cmp
add
xchg
out
ret
cmp
dec
inc
fdivl
pushf
mov
jne
leave
add
mov
insl
pop
xchg
lea
data16
ret
push
xchg
and
cmp
cmp
push
stc
dec
pop
mov
pop
xchg
xor
rcrl
and
fwait
bound
pop
out
bound
and
das
xchg
lock
stos
xor
aam
sub
xorb
icebp
mov
aaa
dec
push
out
cmp
sbb
ljmp
mov
cli
insl
mov
sub
adc
pop
in
push
mov
and
cmp
sbb
xor
jne
insl
push
lock
adc
fidivrs
xchg
pop
cltd
popf
lods
test
inc
stos
sbb
jns
jns
js
inc
jmp
pop
inc
mov
in
add
fimull
jle
sti
and
scas
dec
insb
test
push
cld
mov
push
or
subl
cwtl
xor
inc
scas
psraw
xorb
add
dec
sub
and
jl
mov
aam
mov
jo
mov
les
stos
ret
push
inc
sub
arpl
sarb
lret
push
pushf
jle
hlt
ss
adc
xchg
int3
cmpsl
cmp
jns
or
scas
add
out
pop
stos
mov
cmpsl
imul
in
rcl
xchg
data16
cs
jmp
or
in
dec
ret
jmp
fsts
xchg
out
xchg
leave
xor
aam
xor
fidivrs
mov
ret
dec
dec
cmpsb
and
xchg
mull
dec
inc
loopne
mov
pop
or
sahf
lods
outsb
int
aas
xchg
inc
cmp
inc
ds
jle
sbb
add
bound
imul
and
sarl
add
xchg
dec
adc
ds
fwait
pop
out
push
mov
scas
xor
pop
test
fistpl
mov
sbb
xor
ret
jle
xchg
loop
lret
mov
test
loopne
inc
ja
fdiv
pushf
sbb
jecxz
ja
stos
sub
mov
or
out
dec
sbb
andb
push
mov
cmp
xchg
lds
mov
scas
or
cmpsl
jp
scas
and
inc
add
movsl
inc
stos
shll
imul
push
or
mov
cmp
xor
push
sbb
dec
push
jbe
push
cmp
aam
addr16
or
or
out
subb
add
imull
mov
mov
push
cwtl
push
mov
sahf
pop
pop
lds
dec
inc
and
jle
jp
cmp
mov
pop
cmp
mov
inc
or
mov
sbb
test
jno
xor
inc
xchg
push
jnp
inc
push
bound
jl
inc
mov
scas
cwtl
push
test
je
cltd
sub
cld
mov
cltd
repz
es
xchg
pop
scas
and
imul
inc
add
jmp
cli
loope
sahf
arpl
in
sbb
or
pop
mov
xchg
adc
pop
push
mov
push
jmp
and
mov
dec
dec
sub
aaa
mov
jbe
fbstp
push
jb
fwait
imul
cmp
dec
fs
repnz
scas
cwtl
sub
in
sub
dec
ret
sbbb
adcl
pop
js
outsl
mov
dec
and
lahf
xchg
sub
mov
pop
jmp
xchg
ja
fidivrs
in
inc
push
ret
inc
mov
in
mov
insb
sub
ss
push
std
enter
movq
mov
hlt
xchg
fnstsw
pop
mov
int
xchg
xor
pop
xor
loop
xchg
add
jge
cltd
xor
fs
outsl
mov
pop
notl
inc
cwtl
or
js
lret
int3
rorl
insb
pop
cmpb
sbb
adc
scas
out
mov
ds
lods
addr16
push
rcl
xrelease
push
jnp
adc
idivl
or
repnz
mov
ja
test
outsb
call
jno,pn
adc
add
xor
xlat
cmp
pand
push
repnz
jecxz
push
sub
loop
test
arpl
push
or
jb
insb
xor
push
fwait
movsb
popf
and
push
scas
xor
aas
pop
aad
outsb
hlt
add
cmpsb
sub
add
sbb
pop
movsl
lods
and
roll
push
ss
and
loopne
iret
jmp
jnp
mov
lret
je
stc
sbb
inc
jo
push
cmp
loopne
test
pop
or
mov
mull
mov
add
push
outsl
subl
pop
mov
xchg
rolb
je
xor
mov
sub
outsb
mov
mov
xchg
int
sarl
mov
shll
adc
lods
inc
ljmp
xchg
loopne
xor
lods
test
cli
xchg
mov
fs
dec
mov
cmpl
mov
and
stos
es
cmpsb
in
push
mov
sbb
ret
test
iret
cld
pop
loop
js
pop
push
or
daa
mov
pushf
xor
sbbb
fbld
out
jl
and
lds
cwtl
add
mov
xchg
xor
movsb
gs
mov
xchg
fisttpl
sbb
mov
int3
gs
sti
sub
inc
jne
out
jg
dec
mov
pop
sbb
xchg
mov
fwait
jge
bound
rcr
fst
lds
xlat
mov
dec
pop
jae
sub
push
fadds
mov
daa
push
or
icebp
aam
shll
cmpsl
sti
adc
mov
dec
sub
xchg
sub
popa
jge
inc
int3
pop
jp
aad
hlt
push
mov
push
pop
int3
jecxz
push
andb
std
addb
push
xor
or
divb
push
and
daa
add
ss
mov
mov
out
fidivrs
cltd
sarb
testb
cs
fiaddl
stc
loopne
pop
in
inc
jp
jge
mov
in
fldl
loopne
xchg
sti
and
pop
mov
test
daa
sbb
pop
inc
jge
loope
xor
sub
and
repz
adc
outsb
xchg
add
or
lock
cmp
dec
push
sahf
sbb
imul
mov
mov
int
and
addb
insb
dec
rol
outsl
xchg
cmp
test
mov
add
push
loop
inc
inc
adc
pop
inc
hlt
ja
cmp
outsb
out
and
mov
inc
dec
pushf
data16
repnz
adc
xchg
fs
jbe
sbb
mov
loope
divb
xchg
push
inc
popa
mov
fsubrs
cmp
pop
or
mov
aam
ss
push
add
cmpsb
dec
je
sbb
adc
push
in
push
xchg
xor
pop
xor
pop
push
stos
jae
or
and
mov
rorb
out
repz
data16
adc
gs
adc
imul
in
xchg
adc
gs
pop
sub
int3
or
and
inc
sbb
loop
mov
movsb
ljmp
mov
cmp
sub
mov
mov
adc
lahf
cmp
bound
sbb
mov
cmp
lret
lahf
in
sub
jge
mov
popa
andb
sub
nop
pop
cmpl
cmp
push
shr
roll
std
jae
pop
sub
and
cmp
adc
add
mov
lcall
jg,pn
loopne
cs
jmp
lahf
pusha
ficoms
das
ss
cmp
sub
xchg
flds
adc
aad
jb
scas
outsb
cmp
addl
imul
sub
mov
fbstp
loopne
dec
mov
push
or
ficoms
shlb
xchg
subb
ret
adc
in
lock
push
ret
mov
fmuls
jl
add
andl
incl
jnp
adc
lret
jb
jle
pop
xor
push
mov
mov
dec
fnstcw
insl
sbb
or
adc
jl
cltd
mov
and
jp
stc
das
cltd
jbe
jno
add
adc
add
pop
xchg
aas
push
cwtl
imul
lret
clc
rorb
aam
xor
outsl
jmp
mov
and
je
cmp
movsb
push
jle
faddl
xor
jge
mov
rcr
adc
cmp
out
frstor
pop
jae
mov
fs
std
into
cli
fiadds
dec
inc
xor
xorl
and
sub
lods
adc
push
push
push
inc
fsubr
ficoms
mov
addb
xchg
leave
rcll
and
sub
pop
cmpsl
sub
jae
push
push
addr16
adc
andb
dec
xor
or
aad
movsl
xchg
jae
xchg
pop
push
fistpl
inc
lret
jl
xchg
xlat
xchg
push
pop
incb
jge
sbb
jl
test
daa
out
cmpsl
xchg
mov
lock
je
and
int
xchg
mov
add
cmp
jns
call
jo
cld
xchg
add
inc
adc
lcall
pushl
push
push
sub
pop
jbe
sbb
in
hlt
gs
in
push
adc
insl
pop
inc
lea
jnp
es
insl
sbb
mov
stos
add
jo
loop
push
shl
js
out
or
jbe
out
inc
jb
inc
pop
icebp
sbb
lock
mov
pop
fcmovnb
mov
int
cli
repnz
xor
push
mov
pop
inc
push
popf
daa
lret
push
xlat
out
push
ret
repz
fcomip
test
out
sarl
xor
xor
mov
notb
dec
fs
aas
sbb
mov
rorl
pusha
sub
in
cmpsb
dec
fildl
push
imul
jp
rol
jae
inc
sbb
pop
or
xchg
pushl
in
addr16
faddl
sub
mov
loopne
and
mov
xor
pop
xlat
icebp
adc
xor
andl
jns
add
xchg
adc
xchg
cltd
cmpsb
push
cmpsb
inc
mov
jno
sbb
shlb
ja
ret
mov
push
and
adc
aas
sbb
lods
adc
mov
dec
imul
jno
lcall
cs
jae
jb
in
and
rcr
pmaxub
mov
mov
mov
fdivs
xor
mov
sarl
or
clc
cld
add
hlt
aam
adc
pop
sahf
fbstp
jb
add
aas
repnz
in
idiv
movsb
jae
add
call
mov
in
inc
xor
rcl
xchg
rcll
inc
mov
lret
sub
stos
xchg
movsl
scas
cmpsb
shll
les
push
aad
repz
pop
int3
daa
xchg
lods
pop
aam
mov
cli
dec
and
mov
stos
fldenv
sub
jnp
mov
pop
out
outsb
loopne
push
fldenv
daa
xor
sub
and
xchg
dec
or
or
out
pop
and
pop
inc
pop
nop
movsl
push
lock
ja
sahf
mov
popf
jb
mov
loopne
mov
or
cmp
out
arpl
scas
sbb
aaa
out
xchg
xor
cmc
in
mov
mov
xor
sti
loope
es
lods
mov
in
and
mov
mov
xor
into
je
jg
in
sub
loop
test
cli
jmp
fisttpll
sbb
and
pop
mov
aaa
push
call
xchg
pop
cwtl
ja
dec
bound
push
movsl
in
pop
jb
push
imul
call
or
jp
dec
ret
push
out
mov
test
inc
mov
add
pop
mov
icebp
push
jbe
push
into
add
in
jo
aam
push
outsl
fldl
pop
cmp
mov
xchg
repnz
std
out
pop
dec
sub
mov
dec
clc
jae
fsqrt
add
jb
adc
or
in
jecxz
jb
test
add
xor
jg
scas
pop
stc
ret
pop
ljmp
das
cmpsb
cmp
stos
push
mov
inc
jb
mov
sub
call
movsl
call
push
scas
jae
sub
loopne
mov
imul
insl
popa
push
test
adc
cmp
or
xchg
lea
daa
xlat
aad
je
xchg
xor
or
test
pop
add
sbb
jbe
or
sbb
add
cltd
lods
enter
jbe
test
push
mov
push
jp
push
das
jg
rcl
or
cmp
adc
sub
inc
fs
aad
add
pushf
pop
fildl
dec
cmp
and
and
jmp
jne
cmp
fnstsw
inc
jae
mov
jb
sbb
mov
in
fsub
jnp
mov
ret
xor
or
or
scas
push
cwtl
xchg
xchg
lea
cmp
add
and
sti
mov
sbb
sbb
add
stc
push
das
jno
adc
das
add
jl
ljmp
xchg
mov
jmp
fsin
repnz
flds
or
mov
pop
mov
cmp
xchg
out
mov
pop
gs
outsb
jb
mov
stc
dec
pop
aam
jg
mov
int3
push
fidivs
xor
insb
in
out
push
je
xchg
add
jl
jecxz
mov
xor
mov
pushf
push
fcmovnb
pop
stc
das
repnz
leave
daa
and
imul
addr16
inc
movb
mov
xor
fstp
mov
xchg
hlt
cmp
fbld
mov
and
test
lret
ss
imul
sbb
sahf
mov
fdivl
push
xor
enter
test
inc
jbe
push
fadd
dec
pop
cmpsb
test
frstor
adc
loope
dec
add
int3
push
scas
sti
inc
add
aaa
clc
adc
add
cmp
sub
pop
xchg
dec
cwtl
xlat
daa
lret
xchg
inc
adc
pop
ss
cmp
outsb
fs
cmpsl
and
xchg
jae
push
xor
stc
push
pop
jl
mov
pop
jno
or
ficoms
add
outsl
sbb
imul
cmp
ret
in
rcr
mov
mov
int
mov
cwtl
mov
mov
mov
in
lahf
mov
rorl
sbb
sub
pop
jns
and
lods
pusha
adc
mov
and
or
popf
push
repz
ja
lea
movsl
lret
sub
pop
dec
cmp
dec
adc
int3
inc
aaa
mov
pop
and
imul
push
fcmovu
es
stos
outsl
ljmp
sub
out
jg
pop
mov
jecxz
jo
jecxz
push
mov
dec
callw
fxtract
xorl
cmp
dec
into
xchg
test
push
aad
pop
push
imull
or
jnp
gs
test
out
mov
cmpsl
mov
bound
push
bound
xor
push
push
mov
cmpl
push
or
movsb
cmp
out
push
ss
xor
popa
in
movsl
cmpsl
add
fcmovne
mov
out
scas
paddb
filds
roll
adc
movsl
sahf
pop
scas
aas
pop
xchg
dec
fdivs
sbb
je
dec
jg
push
add
les
dec
leave
dec
xchg
inc
or
pop
enter
bound
xor
outsb
mov
mov
outsb
dec
clc
movb
jnp
sub
jae
aas
xor
mov
mov
jg
loope
pushl
inc
fdiv
enter
cmp
jge
dec
xchg
fidivs
test
sub
push
sub
shll
stos
pop
insb
inc
and
mov
fs
push
sub
adc
aam
daa
addr16
mov
xchg
sub
xchg
jl
mov
js
xchg
test
int
sbbb
ret
dec
sub
lods
and
loopne
addr16
adc
or
inc
jae
or
xchg
jecxz
aam
inc
sbb
lods
mov
clc
and
fnsave
xchg
mov
mov
or
add
xor
inc
out
leave
and
into
shll
es
and
cmp
cmp
push
inc
js
mov
mov
push
repz
pop
xor
insb
das
gs
xor
ja
call
sub
mov
testl
mov
sbb
aaa
mov
add
es
pop
push
ljmp
pop
jb
sub
fdivl
lods
fs
bound
repz
inc
adc
aam
and
mov
fidivrs
shll
in
xchg
notb
std
pop
shlb
pop
pop
xlat
mov
roll
dec
jp
push
xchg
mov
push
or
mov
sahf
fisttpl
stos
aad
cmp
sahf
pop
scas
ret
and
jecxz
ss
inc
and
xchg
iret
mov
cmp
push
cmp
dec
sub
ja
cmp
push
outsl
data16
push
sub
cmp
shr
xorl
out
cmp
push
fsubrs
stos
clc
inc
add
sbb
xor
test
lock
loop
add
xchg
add
xor
push
jp
jne
dec
subb
or
push
shlb
pop
pushf
push
movsb
mov
rcl
xlat
jmp
movsl
mov
cmp
sbb
mov
arpl
mov
xchg
pushf
push
pop
xlat
or
jmp
aaa
stos
push
pop
adc
cmpl
dec
push
mov
dec
mov
int
jb
test
aaa
dec
inc
inc
mov
in
pop
inc
mov
push
lret
push
mov
enter
arpl
aad
cmp
mov
les
inc
pusha
xchg
movsl
dec
sub
in
jno
mov
push
xchg
stc
cmpsb
in
and
or
mov
jg
ds
add
add
pop
cli
and
lds
insl
pop
push
pop
roll
mov
lods
cmp
dec
ljmp
xchg
push
cmp
das
lods
mov
ret
mov
orl
cmpsl
pop
mov
mov
lock
add
in
rcrb
sub
das
jbe
jb
orl
int3
mov
cmp
xchg
out
mov
cmpsb
adc
lea
int3
push
xlat
push
ja
mov
outsb
inc
jbe
jge
sar
and
jg
insb
enter
out
and
xor
ss
push
add
pop
enter
mov
shrl
imul
jg
jl
ror
add
in
aam
dec
jmp
add
scas
mov
inc
dec
add
sub
fsubl
and
cli
cmp
sti
xchg
xor
xor
add
hlt
outsb
lds
clc
stos
mov
test
mov
pop
cltd
jge
shr
popa
pop
cmpsb
stos
movsl
ljmp
lcall
scas
ds
leave
xor
inc
fwait
cmpsb
rcl
jp
pushf
or
daa
sub
aas
outsl
push
add
xchg
sbb
cmpsb
lcall
push
loop
in
int3
ja
inc
cmp
testl
xchg
imul
iret
loope
pop
cmp
xchg
push
and
pop
inc
adc
icebp
cli
sub
out
xchg
mov
enter
jl
dec
scas
and
xor
cld
push
lds
lea
adc
jb
xor
lods
dec
or
test
push
mov
push
push
mov
mov
jnp
cmp
push
xor
jnp
push
mov
fwait
outsl
push
out
cmc
sub
push
sub
sub
pop
mov
mov
xor
loope
out
mov
loope
call
or
and
add
jno
pop
add
std
in
sub
mov
add
pop
rclb
aaa
fstl
mov
jno
leave
sub
popa
push
btsl
movsb
popl
inc
add
pop
fiaddl
cwtl
mov
mov
xchg
push
loop
andl
sub
lds
mov
lret
jmp
inc
xchg
or
out
jne
mov
lods
lods
inc
shll
adc
leave
mov
and
je
and
and
loop
icebp
push
xor
push
push
insb
jle
daa
into
ror
les
shll
sbb
mov
test
shll
jno
mov
mov
aad
in
ds
rcr
popf
xchg
mov
dec
dec
sarb
leave
mov
mov
sub
adc
shlb
jno
testl
mov
sub
in
lret
sub
les
and
test
inc
aaa
mov
jbe
bound
xchg
in
test
pop
cli
faddl
in
je
push
mov
daa
jecxz
sbb
jo
das
repnz
mov
cmc
mov
ja
test
push
adc
push
jecxz
insb
add
ja
push
mov
adc
sub
insl
out
leave
mov
add
in
ja
inc
sbb
pop
fldenv
adc
shll
xor
cli
mov
push
inc
mov
mov
sbb
inc
insb
into
cmpsb
mov
mov
push
push
std
sahf
dec
lock
lock
insb
mov
leave
addr16
add
pop
dec
xchg
mov
sub
push
mov
jp
sbb
test
loope
jbe
outsb
test
bound
out
mov
push
ljmp
push
sub
xchg
cmp
jge
sbb
iret
push
insb
inc
mov
pop
aam
pop
test
push
mov
jae
outsb
arpl
mov
lock
cmp
loop
mov
lds
int3
out
int
push
das
orl
out
ds
sub
fbstp
popa
repnz
std
cmp
pop
xchg
xor
push
add
shlb
inc
in
sbb
cltd
dec
jbe
shlb
sbb
fmull
sbb
pop
xor
sbbl
xor
in
leave
sub
out
add
inc
into
mov
adc
sbb
push
inc
test
dec
outsl
push
daa
stos
js
push
sbb
adc
or
sub
call
and
push
movsl
mov
xor
push
sub
sti
jns
jno
ret
loopne
mov
or
jge
push
cmp
cmc
pop
jne
ss
nop
subl
sbbl
cld
pop
insl
int3
sub
cltd
das
nop
aaa
push
add
dec
leave
neg
int
push
adc
sub
outsb
es
nop
cld
xchg
addr16
aas
jno
in
shrl
aam
jecxz
fidivl
or
lea
pushf
push
xor
in
aad
jb
cmp
xchg
mov
cmp
imul
loopne
push
mov
pop
pop
scas
jbe
mov
shlb
js
pop
movsl
or
mov
arpl
pusha
pop
pop
shr
shll
ret
mov
aaa
loop
mov
in
xor
pusha
mov
mov
in
mov
push
out
jne
ret
pusha
cld
dec
pop
ja
sbb
sub
arpl
adcb
mov
dec
lds
sbb
jmp
and
xor
mov
add
addl
jbe
sub
cmp
cmp
sbb
enter
lods
je
data16
mul
lock
sar
and
add
sbb
xchg
fsub
cmp
fdivr
xchg
inc
xchg
sbb
hlt
mov
fucom
mov
scas
arpl
xor
and
add
negl
pusha
shlb
repnz
out
push
jno
leave
xchg
dec
dec
adcb
and
jge
cmp
movsb
or
insb
mov
movsl
dec
ss
cmp
dec
push
fcoms
mov
wrmsr
jp
loopne
and
fcoml
jne
notl
pop
push
mov
scas
pmulhuw
hlt
xor
out
ficomps
outsl
cltd
xlat
outsb
fnstenv
mov
or
mov
imul
ljmp
repnz
jle
dec
js
mov
bound
fstpt
inc
shlb
adc
push
adc
and
cmp
mov
sbb
enter
das
dec
jg
push
cmp
iret
call
out
push
icebp
push
cmp
cmp
xchg
sbb
ljmp
dec
arpl
add
push
dec
mov
mov
cs
mov
aas
test
dec
or
addr16
jecxz
test
gs
sarb
and
sub
loop
roll
cwtl
mov
sbb
adc
insb
xor
inc
mov
mov
mov
lock
push
mov
push
xchg
add
mov
dec
jmp
push
push
dec
push
imul
shl
mov
mov
repz
push
xor
jae
sbb
xor
xor
int
inc
push
ljmp
mov
outsl
mov
mov
xor
in
adc
jb
cltd
mov
mov
mov
push
add
rcrb
dec
arpl
out
pusha
cmp
frstor
outsl
pop
cmovne
push
xchg
or
push
cs
dec
icebp
fstp
lods
test
add
std
sarb
jmp
inc
aad
dec
push
inc
and
add
sub
and
jmp
test
call
or
adc
mov
mov
pushf
out
mov
inc
xchg
mov
and
xor
add
add
cli
insb
ret
xor
sub
ret
lock
cmc
dec
xor
mov
jl
jp
push
loope
out
lcall
dec
out
mov
shl
incl
fmuls
js
adc
aad
dec
test
out
pop
stos
in
xor
lea
enter
imul
lock
xchg
cmp
shlb
xor
sbb
arpl
shlb
dec
iret
in
sbb
into
jl
add
sti
in
push
test
cmpsl
stos
inc
pusha
ret
mov
inc
lds
jecxz
inc
sahf
mov
das
sub
inc
pop
fcoml
fwait
mov
dec
mov
jmp
adc
shrl
jmp
mov
and
cmp
aas
testb
or
xor
sbb
call
cmp
cmp
push
scas
xchg
mov
push
sbb
ss
jmp
addb
fisttps
mov
mov
dec
pop
push
jp
pop
pop
push
imul
cmp
or
inc
sahf
push
mov
jg
xor
mov
mov
and
xor
mov
pop
mov
aaa
popa
xbegin
sub
jns
xor
insl
std
nop
cmpsb
rcr
mov
cmp
mov
push
xchg
int
dec
lock
aas
scas
sbb
dec
out
pop
les
jle
adc
das
seto
jne
gs
mov
mov
jnp
inc
mov
pusha
sub
xchg
icebp
push
xor
aas
dec
int
scas
push
mov
repz
jae
clc
stos
mov
mov
adc
pushl
into
inc
iret
fiaddl
sub
sbb
xchg
lods
sbb
jge
insl
or
adc
ljmp
mov
and
sub
cli
pop
adc
aaa
test
xor
adc
dec
subb
fstpl
imul
mov
ret
int3
add
lcall
dec
scas
mov
add
dec
cltd
xchg
into
mov
sub
mull
data16
or
leave
test
jbe
js
sbbb
or
or
loop
nop
dec
add
mov
mov
das
sahf
xlat
lods
insb
fistl
xchg
xchg
test
incl
cltd
and
mov
sub
mov
push
ret
mov
add
mov
outsl
dec
jnp
dec
xchg
aam
xchg
in
sarb
inc
and
inc
pop
test
bound
inc
inc
movsb
push
pop
pop
mov
dec
jmp
mov
xchg
sbb
mov
mov
int
mov
mov
xchg
sti
lods
ljmp
scas
jae
sub
push
xor
test
test
xchg
inc
inc
addb
xchg
xchg
jp
xor
loope
mov
inc
jmp
rolb
mov
mov
mov
jecxz
pop
xchg
xor
xor
push
jp
int
pop
lret
mov
adc
repnz
push
test
sub
cmpsl
cmp
add
jmp
jns
jno
fstpt
dec
insl
test
mov
or
push
mov
lret
jle
lds
cli
ja
ret
mov
out
push
dec
fs
adc
sub
negb
cmp
jns
mov
xchg
pop
or
cmp
add
fcoms
sbb
mov
and
mov
nop
xlat
jo
inc
lret
mov
loopew
and
mov
jle
sbb
decb
imul
add
add
xorl
addr16
orl
mov
adcb
sbb
xchg
test
push
cs
lcall
test
es
lods
jae
lods
cmp
in
popf
js
scas
push
or
xchg
stos
int3
pop
dec
inc
imul
ds
mov
stos
fstl
jb
xchg
rol
loop
cld
aad
popa
mov
add
adc
cwtl
pop
add
adc
leave
test
push
pop
cmp
mov
ficomps
and
test
adcl
fwait
jmp
mov
lret
stos
loopne
adc
or
dec
push
fildl
mov
mov
add
lods
add
cmp
int3
fimull
clc
xor
test
pop
rolb
sti
cmp
sbb
rcrl
bound
cmpsb
cwtl
insb
daa
lock
cmp
jmp
mov
or
mov
dec
jl
movsl
jo
inc
test
jecxz
cmp
fldcw
or
call
xlat
sub
lock
inc
test
dec
in
int
and
sub
idivb
cwtl
mov
pop
jl
leave
inc
adc
int3
sahf
cmpsb
add
testl
inc
outsl
rcl
cmpsb
lret
push
sub
dec
add
xchg
xchg
in
sub
jb
and
push
pop
cmp
xor
std
andb
push
pop
push
mov
dec
dec
sub
jmp
adc
mov
push
cmpsb
out
addl
jne
outsl
orl
and
xchg
test
lcall
lock
out
push
sarl
lods
scas
mov
mov
mov
shr
mov
das
mov
repz
les
icebp
scas
pop
lock
mov
mov
sub
sub
sbb
in
dec
sub
push
push
int3
lods
fimuls
popa
sbbl
lret
cli
in
add
mov
jp
sti
rcrl
sub
mov
test
das
sbb
ljmpw
aaa
dec
data16
shll
ss
hlt
dec
dec
push
test
cmp
and
or
dec
arpl
xchg
push
or
stos
cld
xor
jne
push
inc
and
bound
cmc
xor
cs
jge
sub
enter
bound
pop
pushf
mov
int3
sub
enter
sbb
and
popa
lock
mov
mov
shlb
and
enter
sbb
incl
out
nop
adc
pusha
cmpsb
jg
lds
jp
pusha
ja
or
dec
aad
sub
cmp
stc
in
adc
push
outsb
pusha
jle
int3
inc
push
lret
loop
push
mov
mov
jmp
adc
dec
jb
movsl
and
aaa
sbb
mov
mov
ds
gs
icebp
jnp
popf
nop
ds
ret
ss
insb
pop
adc
push
cmpsb
icebp
into
mov
mov
lahf
mov
sub
aad
push
inc
dec
xchg
inc
sbb
sbb
fimuls
test
cmp
xor
stos
dec
out
cmp
adc
xor
test
fimull
scas
xor
jae
jl
out
es
sub
mov
mov
fcmovnbe
push
data16
add
inc
inc
insb
adc
mov
adc
push
dec
cltd
and
push
enter
add
sub
ficoms
jl
jge
imul
pop
mov
lods
int3
repnz
addr16
jnp
icebp
mov
pop
aad
jecxz
lods
sbb
ljmp
jl
adc
mov
adc
jle
rorl
sbb
pushf
idivb
ja
and
out
out
mov
dec
mov
dec
inc
jno
jecxz
cmp
and
pop
hlt
in
cmpsl
outsb
push
sbbb
shrl
push
out
dec
add
adc
test
jmp
sbb
fiadds
incl
adc
aas
or
jno
xor
inc
push
in
sub
in
xor
repz
stc
pop
imul
sarb
xchg
insb
js
dec
addb
sub
insl
adc
pop
mov
pop
jl
outsw
and
or
btr
xchg
daa
out
xchg
and
ror
sarl
ja
das
add
iret
jns
mov
jmp
or
cmp
inc
add
mov
movsb
xchg
loope
adc
movb
sub
dec
sbb
nop
ret
int
jmp
adc
pop
es
inc
dec
xorb
sbb
pop
nop
pop
push
dec
outsb
das
or
mov
clc
mov
add
dec
shr
in
test
sub
push
iret
scas
pop
incl
andb
cmp
bound
xor
int
xchg
aad
cli
push
inc
lret
push
fisubs
out
push
scas
in
mov
add
mov
loop
sub
dec
dec
lods
and
test
lahf
aam
stos
cmp
call
pusha
aaa
mov
xchg
test
lcall
dec
cld
jae
inc
mov
adc
push
fidivrs
js
dec
pand
dec
push
outsl
lcall
sub
lea
std
sar
jecxz
mov
shl
cs
roll
ficoml
or
push
sarl
mov
mov
cmpsw
aad
xor
popa
sti
fisubs
xlat
pop
cld
pop
dec
ret
inc
jno
leave
mov
push
popa
jne
fs
fidivs
mov
add
fcmovnb
xchg
add
cli
test
push
jbe
int3
push
iret
gs
cmp
aaa
insb
std
orb
cltd
cmp
in
push
aad
mov
adc
push
or
leave
inc
insb
lret
sbb
out
fstp
inc
insb
popf
insb
mov
icebp
mov
sbb
mov
dec
mov
int3
jg
push
dec
aas
int
testl
scas
sbbb
push
pop
push
ret
mov
jno
shlb
pop
leave
les
rcll
mov
lods
mov
push
push
gs
call
loope
cwtl
cmp
cmp
jbe
inc
push
subb
shr
adc
inc
mov
jno
and
mov
sub
gs
mov
dec
sub
xlat
les
xor
scas
jge
fcompl
in
out
test
adcl
mov
push
out
les
adc
pop
sub
push
js
cmp
pop
leave
es
lock
aas
mov
jno
loopne
pushl
inc
aam
addr16
jg
addr16
pop
scas
mov
clc
sbbl
jnp
mov
jns
mov
insb
adc
push
inc
xchg
into
pushf
cmp
arpl
add
std
cwtl
fstps
ja
out
ljmp
cmpsl
push
pop
notl
vmaskmovdqu
loope
sub
or
repnz
dec
sub
leave
hlt
outsb
xchg
mov
push
jl
dec
dec
inc
push
insb
mov
dec
sub
and
bound
mov
stc
push
call
orb
add
and
rorl
test
in
mov
shll
push
shrl
cmp
test
subps
pop
aam
mov
mov
push
push
stos
adc
shll
pop
and
jp
pop
popf
mov
rorb
push
cwtl
adc
or
mov
push
push
adc
xchg
addl
ret
push
jge
or
call
push
popa
mov
pop
jb
aas
pop
or
jns
pushf
call
fistps
es
in
xor
int
ret
pop
aaa
xor
push
jmp
nop
pushf
cs
into
inc
mov
pop
adc
cmpsb
leave
sbbb
test
push
add
push
pusha
mov
and
adc
negl
inc
add
negb
cltd
or
fsubrl
lds
or
xor
shlb
cltd
cld
aas
lock
aad
adc
sbb
stc
ljmp
push
out
jmp
icebp
cmp
mov
icebp
push
cmp
xlat
aaa
aas
in
aas
es
movsb
pushf
cmp
pop
aad
cmpsl
jnp
sub
fcmovnb
xchg
inc
or
inc
pop
add
out
aas
sub
xor
pop
pushf
es
dec
pop
jne
lds
cltd
sub
mov
or
loopne
dec
mov
fwait
cmp
xor
jmp
jecxz
shr
adc
inc
iret
xchg
inc
add
test
push
stos
daa
test
add
cmp
in
es
iret
xor
and
cmp
mov
push
lret
cmp
imul
mov
cmp
loopne
mov
sbb
xor
loop
pushf
out
push
pop
test
sbb
daa
and
cmc
adc
mov
or
sbb
xchg
cmp
push
mov
jl
mov
add
jmp
lret
sub
sbb
shrb
xchg
or
mov
in
mov
mov
into
jge
int
lret
mov
dec
in
jae
jcxz
cmp
push
xor
jmp
adc
movsb
add
cli
adc
adc
mov
push
pop
sahf
or
xchg
push
pop
xchg
jne
sbb
mov
mov
push
in
xchg
jae
stos
add
loopnew
mov
or
pop
fldenv
xchg
jo
inc
addl
dec
inc
cmp
mov
dec
adc
pop
fisubs
gs
mov
cmp
lea
fptan
inc
or
xor
adc
xchg
aas
popa
shrl
aas
icebp
repnz
ds
imul
push
std
movsl
sub
dec
stos
jmp
jnp
jns
jnp
iret
mov
cmp
cwtl
mov
stos
fisttpll
mov
cmpsl
rolb
out
pusha
jle
mov
test
jae
shr
xchg
inc
lret
or
test
sub
add
dec
xor
add
sti
bound
dec
mov
mov
out
xchg
es
add
fnstcw
dec
xchg
add
pop
lock
rolb
cwtl
aad
jbe
aad
outsb
add
imul
mov
cmp
lret
mov
adc
dec
adc
fsubrl
pop
cmp
test
mov
xchg
xor
sbb
and
cmpsl
inc
jmp
xor
pop
and
mov
and
push
xchg
xchg
testl
aas
mov
adc
xchg
mov
lret
xlat
dec
xchg
inc
sub
sub
pop
pop
out
sbb
pusha
cs
aaa
ret
js
jne
std
jp
inc
push
adc
mov
negl
rcll
movsl
js
xchg
bound
gs
imul
fprem1
ret
and
jae
notb
rclb
add
push
pop
mov
jg
imul
addl
imul
inc
mov
pusha
cmp
inc
pop
push
es
pop
add
adc
mov
mov
pushf
jo
dec
inc
add
fldenv
mov
sub
aaa
mov
or
dec
loopne
dec
push
leave
les
xchg
xchg
mov
xor
stos
jp
js
mov
cmp
mov
add
fdivs
gs
adc
adc
fstl
das
or
mov
dec
mov
out
pop
cmp
cmp
push
addr16
pop
addr16
xor
dec
mov
pop
rolb
jo
pop
mov
je
cmovle
pop
xlat
mov
test
aad
or
cmpl
fwait
out
sbb
lds
push
and
icebp
icebp
xchg
xchg
mov
mov
adc
popf
orl
scas
sub
dec
lea
sub
stc
adc
fwait
add
je
pop
push
cmp
les
xchg
dec
loopne,pt
dec
and
lods
jg
mull
sbb
adc
xchg
bound
push
inc
dec
in
cltd
push
pusha
push
aad
cltd
jecxz
xor
aam
sub
out
outsb
inc
js
loop
loop
addr16
xor
xor
jo,pn
aam
in
sub
jg
rcr
or
adc
or
ss
repz
push
les
mov
test
inc
push
sub
and
dec
xchg
popf
aad
push
shll
movl
call
jae
mov
shll
mov
xor
mov
test
aaa
jl
stos
icebp
jecxz
lds
jge
mov
jecxz
fsubs
je
aaa
shll
add
push
mov
movsb
and
adc
adc
sub
sahf
pushf
dec
xchg
add
testl
hlt
cmp
fnstcw
xchg
dec
ret
imul
out
pop
fldenv
int
fbld
dec
jg
cmp
and
pop
data16
or
test
ljmp
leave
shlb
sbb
testl
pusha
dec
out
out
adc
lods
sub
jle
mov
test
push
loopne
cmp
cmp
sbb
pop
xor
mov
lahf
leave
and
das
ret
inc
push
sbb
jb
repnz
repnz
fstl
adc
jo
mov
cmpsl
mov
sbbl
clc
rcll
jle
pusha
sbb
cmpsb
adc
jl
out
xchg
jge
jle
scas
xchg
mov
cmp
push
in
mov
jb
xchg
inc
movsl
sbb
fs
xchg
subl
test
bound
mov
and
cmp
xchg
cmp
pop
outsl
rolb
lea
mov
sub
stc
hlt
les
xorb
inc
jle
cmpsl
inc
stos
das
pop
push
adc
mov
ss
xor
out
jmp
pop
outsl
out
mov
mov
mov
push
mov
and
popa
jp
push
mov
dec
shlw
cmc
lea
dec
pop
filds
imul
xchg
xor
add
out
movsl
mov
add
pop
mov
mov
insl
cmp
or
lods
mov
adc
push
sahf
lods
lds
xor
lods
sbb
dec
push
fidivs
enter
ja
xchg
sbb
mov
lret
pop
xor
lods
negb
mov
inc
ss
das
mov
xchg
movsl
enter
xchg
stc
aaa
data16
dec
shll
dec
ret
or
ficoml
sbb
aad
and
jmp
jge
mov
mov
iret
add
sbb
and
lods
push
imul
es
jle
xchg
mov
aad
stos
rol
cmp
inc
shlb
lods
pop
fldcw
jecxz
sarb
mov
dec
int
cmpsl
les
push
aam
into
cld
flds
cmp
cltd
in
test
xchg
arpl
pop
push
mov
out
pop
fistpl
jns
mov
popa
pop
ror
push
in
adc
movsb
xchg
pop
jbe
mov
adc
cmp
xchg
mov
inc
es
out
flds
sub
movups
nop
call
xor
int3
mov
rolb
scas
lds
and
mov
aad
add
outsb
sub
lcall
xchg
aam
and
inc
mov
test
jae
xor
sbb
mov
xchg
cmp
cwtl
outsb
mov
cltd
pop
or
js
sahf
xchg
scas
sbb
inc
or
or
aam
jle
adc
cmp
ficompl
mov
push
xchg
jbe
inc
imul
dec
fsubrl
xchg
insl
push
add
push
inc
rcll
or
loop
jns
push
repz
shrl
dec
pushf
inc
ret
pop
push
loopne
fincstp
movsl
fstpl
jmp
pop
cli
test
sub
adc
imulb
push
es
lcall
pop
and
adc
cmp
cltd
faddl
fdivp
jns
testb
lea
rcrl
xchg
lcall
mov
cmp
std
lret
push
clc
fwait
push
push
xor
leave
sub
mov
push
push
xchg
repnz
sti
sub
arpl
pop
sbb
out
imul
ljmp
ljmp
jo
or
jmp
aas
add
lret
xchg
loope
mov
mov
push
mov
das
sub
jae
xlat
test
cmpsb
dec
lock
cwtl
enter
aad
aam
xchg
imul
test
mov
jle
mov
cli
pop
test
cmpsl
addb
das
pop
arpl
outsl
ljmp
pusha
mov
das
pop
or
push
test
das
add
xor
lods
stc
and
dec
lahf
pop
pop
sbb
jnp
push
js
pop
lret
lods
repnz
pop
out
xchg
jg
repnz
cmp
push
adc
dec
xor
sbb
jb
insb
hlt
fstpt
inc
push
mov
jecxz
in
mov
pop
jmp
loop
test
mov
sti
pusha
popa
adc
cmp
insb
sahf
jbe
mov
jge
out
cmp
push
in
xchg
mov
and
mulb
call
dec
aam
cmpsb
add
jne
mov
jne
jle
mov
cwtl
pop
aad
xchg
fmul
aad
xchg
fcoml
mov
or
dec
ss
or
enter
aaa
dec
das
mov
loope
leave
xor
ljmp
in
fstl
addb
mov
sbb
push
xor
aaa
ja
inc
incl
sub
and
loop
or
mov
push
mov
int3
mov
hlt
pop
sarb
pop
mov
fcomip
test
lret
enter
mov
lods
lods
shlb
or
cmp
xchg
test
xchg
pop
cmp
mov
xor
aam
sbb
and
mov
cmp
mull
ljmp
in
adc
cmc
add
adc
xchg
xor
jmp
in
xchg
scas
out
imul
out
or
insl
xlat
call
xchg
cmp
cltd
into
cmp
dec
inc
jns
bound
xchg
cmpsb
xor
xorb
out
adc
sahf
orb
fs
sub
cltd
sub
movsb
jae
ret
ret
adc
repz
jp
lds
and
add
mov
test
popa
scas
and
and
ret
dec
and
add
mov
ss
clc
mov
pop
cmpsl
mov
mov
or
or
inc
and
add
imul
and
mov
nop
inc
xchg
add
jo
push
dec
fimuls
jge
mov
jle
lods
add
jg
ljmp
out
fildll
xchg
push
inc
mov
sub
dec
jne
xor
push
cmp
in
lret
push
pop
mov
out
mov
out
inc
pop
jns
iret
ds
pop
jl
adc
adcl
cmp
lcall
jno
mov
add
push
xor
add
dec
lock
aas
outsl
add
int3
sub
mov
mov
sbb
jnp
sti
and
shr
aas
movsb
mov
popa
fisubl
jno
ja
loop
ror
and
push
mov
xchg
int
push
stos
aas
add
jle
dec
cmp
bound
loope
xlat
pop
loop
arpl
push
repz
jp
lods
dec
leave
mov
xor
loopne
ficomps
subb
xchg
mov
hlt
sarl
mov
subb
sub
dec
jp
adcl
out
decb
sbbb
lret
sbb
sub
inc
mov
enter
mov
imul
push
out
xchg
pop
icebp
sbb
adc
cld
mov
mov
mov
loopne
jno
push
repnz
and
or
outsb
fs
lock
fmuls
jl
mov
pop
dec
adc
call
lcall
sti
sub
shll
adc
xor
push
mov
cmp
and
movsb
popf
pop
faddp
push
inc
pop
ret
sbb
aas
jecxz
push
daa
fsubrs
pop
out
insl
sti
loop
jnp
mov
sub
sub
pop
sarl
jbe
call
sub
xchg
test
data16
mov
add
push
jg
imul
adc
mov
adc
fstpt
gs
mov
movsl
enter
cld
dec
xor
aaa
dec
lcall
dec
and
out
dec
xor
adc
jns
fbstp
lcall
lret
pop
out
mov
aam
fdecstp
js
dec
jmp
jno
sbb
or
fcom
mov
adc
inc
test
mov
rcrb
addr16
pop
xchg
call
sub
push
mov
push
cld
sub
mov
hlt
or
or
jne
int
dec
fwait
addr16
sbb
aad
mov
int
cmp
pop
adc
ljmp
cltd
insb
fstpl
sbb
push
or
lret
pusha
insl
cs
shrl
inc
das
fisttpl
bound
add
mov
test
pop
das
sbb
sbb
ss
pop
dec
lock
mov
push
and
in
xlat
loop
lods
push
shl
cmpsb
cli
xor
cmp
mov
movsl
pop
dec
dec
mov
push
sub
inc
add
adc
sbb
sub
sbbl
es
xchg
jge
leave
sub
push
cli
cmpsb
push
call
xchg
scas
in
pop
sbb
xchg
jne
push
dec
mov
lahf
sbb
rcrb
push
and
and
lods
int
add
push
jne
pop
rclb
stos
fldl
push
xor
and
stc
lock
std
insb
xor
mov
cmp
mov
sti
lds
mov
adc
jmp
movsb
movsb
jae
repz
jecxz
int3
popf
dec
int
push
xchg
xchg
mov
push
rol
sbb
pop
mov
cmc
mov
and
mov
or
pop
wrmsr
mov
test
dec
pop
push
mov
push
cmpl
mov
sahf
icebp
mov
test
adcl
dec
mov
jmp
pop
xor
push
pop
push
out
das
add
rcl
lds
subb
hlt
cli
push
iret
and
loopne
push
xor
xor
xchg
sbb
sbb
or
or
fnstenv
cmp
xlat
adc
sub
pop
imul
testb
sub
stc
leave
test
shlb
pusha
mov
adc
ficoml
xlat
inc
cmp
aaa
dec
jae
stc
adc
outsb
int3
mov
xor
fistpl
add
subl
pop
mov
adc
mov
in
inc
sbb
add
cwtl
clc
leave
inc
in
sub
ljmp
enter
cmp
xchg
mov
sub
rorl
inc
jns
or
push
jmp
cmpsb
jno
cld
addr16
pop
in
xor
test
lds
nop
fisubl
fidivrs
pop
jns
lret
stc
and
in
fs
adc
movsl
aaa
or
xor
mov
or
and
fstps
mov
fisttpll
jo
cld
mov
jecxz
ret
cmp
mov
pusha
addr16
adc
xor
jae
mov
fildl
scas
iret
sbb
push
add
lds
rcr
mov
dec
mov
repnz
jns
jb
mov
or
outsl
pop
test
dec
mov
and
rcl
cmp
movd
inc
cmp
push
or
pop
test
fbld
fcmovb
outsb
xorl
in
arpl
fimull
cmc
cmp
pop
addr16
lock
mov
sub
call
or
sbb
xchg
push
loopne
or
jge
fwait
dec
mov
out
add
sub
call
imul
popa
ficomps
cltd
or
dec
jmp
aad
iret
push
ja
mov
dec
mov
push
lahf
stos
or
pop
or
push
adc
push
dec
mov
and
lods
add
jmp
cli
and
xchg
cmp
push
inc
inc
pop
rcll
shl
sbb
sbb
mov
movsl
xlat
psllw
dec
pusha
mov
orl
sbb
outsl
clc
ret
cwtl
gs
cmp
add
shll
push
xor
mov
lret
mov
jno
sub
mov
mov
mov
push
mov
stos
inc
faddl
push
xor
dec
jle
jg
xchg
cwtl
mov
cld
cmp
xchg
or
bound
sbb
idiv
mov
sbb
cmpsb
lock
jno
mov
test
inc
sbb
jae
sub
cmp
cs
mov
hlt
inc
mov
sub
cld
insl
ret
mov
in
xchg
mov
jp
dec
mov
push
xchg
jo
mov
xchg
xchg
in
pop
stc
sahf
jge
into
mov
inc
sbb
mov
mov
js
subl
push
mov
or
aas
pusha
mov
or
xlat
dec
movsl
push
into
mov
enter
andb
dec
cmp
jecxz
pushf
lcall
mov
movsb
mov
in
mov
pop
fcoms
sbb
std
add
push
into
lods
pop
aaa
lock
cmp
push
dec
xchg
test
iret
ret
cmc
cmp
das
mov
pop
lods
add
mov
push
xor
push
inc
and
adc
loop
shl
lock
mov
test
fwait
pusha
enter
sbb
aas
add
mov
mov
jae
sbb
inc
xchg
in
inc
in
loopne
arpl
cld
scas
jmp
cmpl
cmp
lock
outsl
cli
stos
addl
mov
pop
orl
cwtl
mov
dec
pop
adc
nop
push
mov
pop
roll
orb
stos
or
out
call
sahf
lret
shrb
ss
lods
daa
mov
imul
jecxz
adc
cmpsb
sbb
jo
add
push
mov
lret
popa
incl
push
xor
mov
js
mov
xor
clc
aam
aas
shr
xor
fwait
sub
pop
jb
roll
into
ret
push
pop
jns
and
mov
jmp
cmpsb
movsl
gs
mov
lods
rolb
cmp
dec
or
sbb
jb
pop
in
xor
push
leave
rcr
jmp
std
fnstsw
fidivs
clc
push
xchg
outsl
mov
and
push
arpl
push
push
loopne
cld
or
pop
add
in
dec
gs
out
aaa
sti
stos
sub
cld
in
inc
movsl
cmp
leave
pop
xchg
out
cmc
int
mov
ficomps
sbb
xchg
xor
jno
or
push
pop
les
adc
jae
inc
cmpsb
movsb
or
mov
jge
in
dec
fisttpl
je
xor
hlt
dec
sahf
negb
push
and
mov
sub
xchg
sbb
cmp
add
push
push
insb
lods
jae
nopl
enter
or
jnp
lret
ja
ror
jle
jne
insl
cli
xchg
add
xlat
out
mov
movsb
and
inc
add
test
jecxz
mov
inc
les
ret
lahf
pop
sbb
pop
cmp
and
mov
popf
xorb
jp
jle
inc
movsl
sarl
daa
inc
hlt
bound
cmp
out
cmp
xorl
mov
lods
mov
in
stos
cmp
adc
dec
cmp
xchg
scas
jg
das
xchg
xor
sbb
jo
ljmp
jns
push
test
repz
dec
push
mov
int3
jbe
mov
outsl
fwait
gs
push
xchg
mov
ret
pop
sub
cmp
jl
popf
and
lar
xchg
aad
cli
int3
out
adc
imul
mov
inc
inc
dec
jecxz
movsl
jbe
push
or
sub
movsl
aam
out
movsl
jns
push
daa
addb
pushf
dec
xorl
dec
test
jg
or
jno
fists
xor
imul
into
insb
push
test
fucom
lcall
xor
and
in
loopne
les
cld
int
ss
xchg
jecxz
js
out
insb
call
jo
movsl
add
mov
xor
cmp
dec
pop
cld
dec
sub
jecxz
dec
xorb
pop
sub
push
xchg
lret
inc
stos
jno
mov
inc
call
jle
mov
loope
jne
mov
cmp
mull
pop
sub
dec
fisubl
hlt
or
sub
int
call
je
mov
subb
pop
lret
add
add
fs
imul
push
clc
rcll
aad
or
imul
push
call
hlt
test
inc
adc
and
adc
ljmp
fsubrs
add
bound
lods
xor
jns
fs
add
outsl
dec
nop
int
fwait
mov
daa
cmp
stos
frstor
adc
sar
jno
cmp
std
fmull
sbb
adc
xor
cmpsl
pop
ss
and
mov
push
cltd
adc
scas
xchg
fnstcw
mov
mov
cwtl
negl
dec
cmc
dec
es
enter
repz
not
ret
xor
pusha
sbb
test
fiadds
into
sub
subl
lret
mov
xor
fisubs
out
inc
outsl
jecxz
dec
and
add
jp
mov
jge
sub
rcr
push
cs
xorl
lock
push
fimuls
lds
insb
rorl
pop
movsb
cmpsl
je
push
out
add
rolb
rcl
mov
jns
inc
jge
adc
push
stos
pop
sbb
data16
push
dec
insb
icebp
test
cmp
out
das
inc
mov
dec
int
cltd
int3
mov
data16
sub
mov
push
cmc
ljmp
pop
xlat
dec
or
repnz
inc
fiadds
arpl
jp
out
or
int
inc
movb
leave
cli
fildll
mov
push
jmp
xor
pop
addb
rcl
mov
mov
inc
jns
cli
mov
shrb
movsb
and
or
xchg
jmp
push
mov
fsubrs
sub
bound
cmp
mov
cld
or
add
pushf
shr
sbb
pop
mov
filds
repz
data16
push
cmpl
push
cld
mov
jge
movsb
sbb
xchg
pushf
mov
jae
enter
repnz
cltd
jnp
or
dec
aas
ljmp
xchg
lods
rclb
es
jle
lods
in
nop
inc
andl
sbb
dec
push
cld
pushf
fistpll
cmp
cltd
xor
mov
mov
loope
push
adc
cmp
cmpsb
in
inc
jl
mov
pusha
cmp
in
jmp
loope
fnstenv
or
mov
xchg
or
and
das
mov
in
mov
call
sbbl
jmp
daa
adc
pusha
sarl
jl
and
mov
popa
ja
mov
pop
cmpb
push
insb
push
cmp
fstpl
test
pop
adc
mov
adc
xlat
fs
int
fs
inc
inc
stc
jns
iret
fwait
mov
test
push
add
jne
jp
add
push
jecxz
inc
mov
ljmp
push
lcall
cmp
movsl
insl
sbb
jns
rolb
inc
fcoml
sub
popf
hlt
xchg
lret
mov
mov
imul
mov
cmpb
sbb
jmp
lods
mov
and
insl
mov
sub
sub
fcoms
test
xchg
notb
cli
sahf
stos
scas
dec
pop
ljmp
sbb
fbld
cld
mov
pop
adc
test
daa
mov
dec
fwait
xchg
pusha
xchg
ds
jo
cli
dec
ret
or
and
das
jnp
ljmp
mov
sub
xor
or
lret
into
clc
fisubl
cld
mov
add
sbb
je
push
outsb
jnp
lods
jecxz
xor
sbb
xchg
jno
cltd
dec
popa
mov
test
cmp
xchg
push
ds
push
pushf
lret
mov
inc
sub
lahf
fstpt
out
enter
cmp
sub
cmpsl
cmpsl
jne
test
inc
jp
and
pop
addr16
pop
shlb
cmp
lret
lret
cmpsb
xchg
mov
pop
push
mov
sahf
aam
mov
lahf
dec
add
xchg
lods
and
popa
dec
dec
add
ds
sub
push
mov
pusha
cmp
mov
es
jmp
push
and
into
cmp
adc
sahf
or
test
jb
sub
and
sbb
fwait
ss
in
call
jg
dec
sahf
fldt
lret
es
or
fdivr
add
ret
cmp
fs
flds
dec
sub
out
test
and
enter
mov
into
fldcw
or
push
pop
pop
mov
sbb
nop
xor
lret
mov
flds
fcoml
add
jmp
out
in
ss
or
enter
and
in
jl
or
adc
in
push
lret
subl
push
pushf
loope
mov
insb
fptan
test
loopne
mov
or
sti
out
imul
mov
cmp
addl
xchg
jb
push
sbb
pusha
jmp
xor
nop
fcmovne
dec
testb
ljmp
xor
sub
sarl
sbb
xor
sarb
lcall
outsl
call
sbb
add
out
test
cmp
xchg
cmp
mov
jecxz
jge
pop
sub
ds
cwtl
pop
xchg
sbb
jecxz
loope
mull
ja
aas
pop
or
inc
xchg
sub
sahf
jbe
push
jae
scas
fcmovnu
push
mov
scas
push
lock
jo
jne
adc
sbb
lcall
lcall
and
sahf
stos
mov
cs
inc
imul
inc
push
ds
fsubrl
lret
add
sub
sbb
in
mov
cld
add
xchg
lret
push
inc
repz
in
pop
jns
out
fidivl
sbb
test
jmp
aaa
movsb
sub
lods
or
iret
cmpsb
mov
fstl
pop
xor
push
cmp
jmp
insb
cmpb
cmc
stos
es
xor
cmp
mov
inc
imul
lods
mov
adc
jb
mov
mov
jle
daa
fwait
shlb
aam
in
push
arpl
scas
aam
mov
push
adc
movsb
cmp
mov
mov
jmp
lock
pop
xor
fcomps
mov
xchg
push
jp
pop
push
push
mov
push
fisubs
test
adc
add
mov
jns
stos
push
fxch
jno
aad
ljmp
sub
es
inc
leave
mov
rorl
imul
push
pop
cmp
sbb
cmp
xchg
xor
hlt
inc
pop
xchg
sbb
add
subb
pop
mov
xor
mov
cmp
push
xchg
daa
cmp
mov
mov
ss
or
lock
xor
fwait
subl
inc
cmp
daa
mov
mov
mov
jp
jecxz
xor
mov
fs
stos
push
mov
sub
inc
adc
cmp
lret
lds
push
cmp
sbb
in
pop
jle
jns
jnp
pop
imul
cmpsb
outsl
shlb
cmc
add
sbbb
incb
fsubr
sub
nop
lock
mov
push
pop
cmpl
in
or
aam
int
jg
jo
sbb
sbb
mov
add
scas
add
ss
xchg
fdivl
inc
push
rcrl
pop
mov
mov
mov
lret
inc
pop
stos
add
pop
jl
loop
andl
js
jp
dec
pusha
pop
outsb
nop
mov
lret
mov
push
ljmp
and
inc
ja
sub
sub
jbe
sarb
mov
cld
imul
inc
xor
insl
add
loopne
insb
ja
xchg
or
cmc
xor
pop
jne
mov
add
pop
mov
dec
xor
push
sbb
inc
mov
xor
push
int
mov
xlat
sub
xchg
gs
jp
push
push
jne
pop
mov
jg
and
adc
in
out
sub
int
sbb
add
sub
fildll
adc
adc
cmp
roll
pop
adc
fisttpl
push
std
loope
mov
int3
jmp
ljmp
pop
sub
jg
daa
xor
out
lock
inc
adc
pop
push
mov
push
dec
add
lret
test
lcall
xor
enter
icebp
aaa
addr16
jp
out
add
push
push
loopne
inc
dec
fadd
mov
adc
cmp
xchg
add
shrb
aam
loop
std
out
pop
xchg
mov
jl
mov
in
mov
xchg
push
cli
into
out
jp
ss
gs
stos
movsl
xchg
stos
jne
cs
cwtl
rorb
or
in
shrb
lods
or
fwait
movsl
mov
xor
ficoms
icebp
mov
out
xor
push
mov
call
ljmp
loopne
iret
jae
xchg
dec
nop
cld
in
add
mov
inc
sbb
rol
sbb
loopne
mov
lods
dec
mov
movsl
push
sub
push
mov
mov
js
sub
popf
out
divb
xchg
ret
jns
mov
xor
inc
cli
push
push
int3
mov
sbb
pushl
imul
push
movsb
cwtl
cmp
call
push
mov
sbb
lret
loope
je
jge
mov
and
add
jbe
imul
lds
imul
fadds
inc
pop
dec
xor
out
fbstp
repz
cmp
jb
and
pop
shll
repnz
adc
and
mov
sub
xchg
adc
push
xlat
jbe
adc
js
mov
fcom
addr16
sub
jne
mov
mov
rolb
dec
push
xchg
in
icebp
aas
jns
jp
xor
shlb
pop
adc
shrb
inc
mov
mov
in
mov
imul
jmp
mov
test
movsb
movsb
test
add
je
mov
mov
mov
outsb
sbb
scas
bound
jmp
in
aad
mov
jbe
daa
pop
push
sbb
ret
ret
jae
mov
nop
into
adc
inc
mov
add
cli
mov
lahf
lock
movsl
xchg
mov
ljmp
aas
mov
int
test
adc
pop
je
nop
fldt
outsb
dec
test
loopne
dec
push
and
dec
push
sub
pop
ds
sbb
pop
push
dec
aad
mov
jecxz
loopne
addr16
inc
mov
add
pop
lea
cs
loopne
jb
push
or
sub
inc
cli
les
pop
int3
call
jns
or
cmp
movsb
ret
shlb
nop
jle
movl
out
mov
je
xor
sub
movsl
std
mov
xor
push
shrb
outsb
insb
in
xchg
lret
int3
dec
jmp
pop
test
adc
sub
inc
mov
into
mov
adc
dec
outsb
mov
adc
test
mov
push
inc
out
fcmove
push
xlat
push
sahf
ja
push
sub
out
mov
add
xor
mov
in
add
cmc
mov
cltd
imul
icebp
ret
mov
dec
mov
addr16
pop
cwtl
stos
mov
loope
cld
inc
mov
out
clc
repz
sarl
mov
sbb
mov
cmpsb
mov
mov
pop
sbb
jg
push
hlt
jg
and
inc
test
xchg
xor
inc
and
sahf
orb
lea
sub
push
adc
jo
sbb
mov
jge
in
dec
pusha
and
xor
inc
jbe
mov
fnstcw
dec
adc
xor
jecxz
sbb
mov
push
data16
add
mov
adc
outsb
in
mov
addl
cmp
dec
loop
ret
push
in
mov
leave
sarl
or
cmc
dec
lahf
out
push
fildll
fs
cmpsl
mov
sub
inc
lret
or
test
fwait
aam
test
xchg
sbbb
mov
lods
fdivrl
jno
cmp
mov
out
mov
popf
and
sbb
into
add
push
lahf
leave
dec
js
scas
cmpsl
mov
negb
sti
pusha
repnz
xchg
xor
mov
xchg
test
jne
dec
insl
dec
clc
ret
imul
fadd
scas
dec
mov
rorb
jne
cmp
xlat
jae
push
mov
push
add
lahf
cmp
imulb
mov
das
sub
xchg
mov
xchg
cmpsb
and
hlt
inc
fdivr
mov
dec
sbb
push
cmp
fcmovb
mov
cmp
push
jae
inc
ljmp
scas
push
popf
in
repnz
mov
outsb
add
scas
outsb
arpl
xchg
lods
inc
and
ret
inc
cmpsb
lods
mov
movsb
dec
mov
ret
int
cltd
dec
and
loope
test
orb
jno
popl
sbb
data16
push
ret
lds
lods
pusha
mov
adcl
insl
dec
sarl
icebp
adc
xchg
bound
lret
push
adc
std
out
ljmp
fsubrl
mov
lods
imul
nop
lret
mov
into
in
jmp
xchg
sbb
aas
mov
jge
jp
xchg
lods
pop
xor
cwtl
jl
test
sub
aad
lret
stos
mov
add
dec
popa
cwtl
stos
xchg
inc
sub
repnz
mov
mov
pop
xlat
and
loope
and
sti
mov
out
fimuls
push
or
icebp
push
mov
test
sbb
xor
pop
mov
ja
fwait
xor
jbe
xor
scas
sub
imulb
sub
xor
jg
mov
or
test
mov
add
repz
push
repz
in
and
mov
xor
popf
mov
sub
test
aam
je
andl
outsb
jle
add
insl
adc
jle
xorl
cmc
dec
push
jae
lock
cbtw
lahf
xchg
in
sarl
push
pop
lea
lods
in
xor
and
pop
sti
cmp
loop
mov
jle
lods
fisubs
nop
int
pop
jle
imul
mov
popa
inc
cmpl
xchg
in
int3
stos
andb
loopne
mov
mov
sub
pop
mov
cmp
mov
xor
popa
cmp
jge
push
and
pop
xor
mov
rsm
push
outsl
sub
and
jb
push
fiaddl
das
push
lret
das
adc
popa
dec
call
push
jne
xchg
cli
mov
add
out
add
push
and
je
or
shlb
adcl
push
rcrl
fcomip
dec
pop
jge
insl
pop
dec
testl
arpl
in
adc
mov
rcrl
repz
loope
adc
xchg
pop
mov
dec
out
xor
stc
movsl
add
hlt
fwait
mov
xchg
in
mov
arpl
push
mov
out
mov
adc
jns
shl
pop
repnz
jo
cmp
cmp
dec
and
lea
jge
dec
adc
nop
js
test
outsb
push
rdmsr
push
add
test
inc
sbb
int
ja
dec
lret
lods
or
repnz
adc
out
in
adc
inc
stc
cs
pop
cmc
push
xchg
cmc
mov
pop
movsb
arpl
and
xchg
jle
jp
js
pop
jmp
jg
add
mov
ret
pop
mov
test
push
push
adc
mov
in
jo
cmc
mov
mov
or
or
jno
arpl
test
mov
ds
pop
in
jle
xor
arpl
dec
push
popa
dec
cmc
mov
push
cmpsl
pop
and
mov
xchg
scas
xchg
xor
ss
addr16
ficoms
sbb
pusha
jge
arpl
jge
popa
ret
adc
bound
xlat
inc
or
cmpsl
mov
sub
mov
jecxz
inc
aad
pushf
faddl
mov
push
sub
filds
xchg
les
mov
xchg
sbb
daa
sub
add
out
adc
in
in
mov
or
in
jae
lods
xor
sarl
adc
scas
cmp
inc
addl
and
xchg
mov
sahf
stc
ss
sti
fstpl
xor
daa
shl
add
loope
mov
mov
pop
test
push
shr
ds
xchg
clc
jnp
out
and
out
cltd
sbb
xchg
mov
pop
popa
inc
xor
lods
adc
lahf
push
cmpsb
addr16
mov
pop
mov
and
cmp
test
push
popf
fstl
lret
push
xchg
into
in
or
test
add
inc
pop
push
out
sbb
sti
sbb
shrl
movsb
push
jmp
pop
mov
subl
int
sub
push
cmp
xchg
dec
not
aaa
mov
lcall
add
cmpsl
fstpl
push
dec
nop
jnp
std
pop
std
inc
outsl
push
or
jge
and
jne
xchg
inc
xor
cmpsl
shrl
call
mov
cmc
stc
into
inc
push
jo
xchg
mov
cli
adc
add
dec
aas
popf
inc
cmpsb
xor
sub
mov
inc
jle
push
xlat
mov
daa
push
lds
adc
xorl
pop
das
cwtl
fsts
fs
std
adc
test
divl
imul
iret
xor
dec
lods
inc
popa
add
in
mov
mov
xchg
jmp
or
scas
jbe
and
dec
xchg
sar
insl
iret
clc
mov
mov
sub
xchg
adc
and
jae
adc
mov
cmp
inc
int3
pop
pop
sarb
fidivrl
in
cwtl
push
repz
repz
das
int3
fisubrl
outsb
xlat
cltd
popa
loopne
or
xchg
lods
jp
jbe
lret
lea
in
add
hlt
mov
jbe
or
adc
push
loop
add
mov
mov
lret
faddl
subb
xor
push
stos
pushf
mov
jo
add
adc
and
mov
mov
lahf
xchg
sbb
arpl
insl
bound
hlt
dec
mov
fwait
inc
adc
inc
ja
sbb
dec
push
push
mov
in
in
insl
dec
cmpsb
nop
lods
pop
pushf
adc
inc
hlt
imul
ret
popa
cld
std
or
hlt
fldcw
mov
sahf
cmc
cltd
adc
data16
pushf
xchg
imul
xorb
into
das
push
lock
mov
xchg
adc
cmp
jo
sbb
lods
popa
mov
add
popf
fists
inc
and
and
cwtl
int
imul
rorb
aad
popf
dec
jle
movsb
mov
outsb
rcl
movb
inc
mov
push
inc
dec
dec
and
sub
sbb
jnp
pop
xor
js
dec
dec
cltd
push
aaa
ja
push
push
push
pop
hlt
outsb
xor
xor
adcb
push
dec
or
dec
outsb
ret
inc
pusha
push
int
enter
jae
pop
insl
stos
test
xchg
insl
outsb
es
fwait
sbb
mov
sub
pop
push
sub
mov
mov
cmp
dec
in
cmp
cmpsl
loope
cmp
pop
aam
out
stc
jae
cs
fsin
sub
or
movsl
fadd
jl
cltd
fwait
jns
cmpsl
dec
lret
jb
xor
rsqrtps
xor
push
scas
int3
cmpsb
xchg
xor
dec
pop
mov
xorb
test
and
cmp
ljmp
mov
scas
pop
push
std
test
sub
es
inc
call
fdivl
adc
imul
test
inc
sbb
fsts
xor
and
repnz
dec
cld
mov
stos
push
fadds
pop
mov
sbb
int
xor
int
dec
addr16
je
xchg
dec
and
add
and
fwait
das
push
pushf
sub
loopne
cmp
movsl
in
lret
push
std
ficompl
cmp
test
xchg
pop
xor
cmp
rcrb
fwait
test
lds
pushf
repnz
bound
insb
aad
test
push
int3
xor
ss
in
les
xchg
loop
inc
push
adc
test
sbb
xlat
std
testl
mov
movsb
scas
negl
cmc
mov
cmp
in
sub
dec
loopne
xor
xchg
stc
push
icebp
andl
dec
lea
xor
sub
cli
sbb
sahf
mov
jmp
adc
outsb
mov
ds
inc
xchg
out
mov
and
daa
mov
aaa
cmpsl
push
cld
mov
dec
mov
sub
and
push
jb
mov
mov
sub
popa
insl
int3
sahf
js
fdivr
pop
pop
shrb
ret
jb
adc
mov
jg
cmp
cwtl
es
insl
xchg
fs
sbb
pop
enter
cmpb
cmc
jp
jl
or
mov
jg
scas
jp
nop
hlt
adc
popf
xor
ljmp
xor
and
sbb
pop
jp
aas
and
cli
lahf
inc
dec
pop
insb
into
push
pop
pop
push
ljmp
push
cmp
cmp
inc
jge
sub
std
sbb
xchg
and
push
imul
lea
into
jo
sbb
outsb
and
dec
mov
in
test
aam
mov
or
stos
adc
pop
pop
mov
inc
daa
push
inc
sub
xorl
jmp
sbb
jno
addr16
cmp
sbb
hlt
xchg
stc
out
xchg
xor
dec
mov
dec
xchg
add
js
add
loope
jae
push
cld
fs
popa
jne
stos
xchg
sub
test
das
aad
or
fisttpll
lods
int
xchg
xchg
jg
xchg
xor
fdivs
mov
sbb
in
imul
lahf
pusha
rcrl
ja
fisttpll
ret
xchg
push
aad
lock
inc
movsb
jbe
xchg
mov
push
fnstcw
mov
sti
repnz
test
jge
test
or
and
outsl
stos
inc
rorb
pop
test
out
xor
arpl
daa
sub
jo
sbb
int
mov
mov
jae
or
das
sub
xor
leave
rclb
mov
incl
loop
hlt
push
ds
xchg
push
icebp
sub
scas
jmp
dec
sub
xchg
pop
pushf
test
repnz
ret
jg
fcoml
loop
cmp
sub
std
aaa
repnz
jmp
jmp
or
dec
int
lret
in
stc
fxch
xchg
xchg
daa
mov
push
loop
cmpsl
jo
lds
push
arpl
mov
inc
int3
int
mov
fstp
xor
cltd
push
push
xchg
jne
rolb
scas
push
and
insl
jg
in
inc
sub
push
in
loop
adc
stos
mov
cli
clc
adc
pop
pop
aas
fnsave
dec
lret
arpl
or
fldcw
or
jmp
sahf
pop
iret
push
jmp
stos
cmpsb
dec
scas
mov
aad
inc
fs
adc
mov
fstpl
addr16
xor
lods
mulb
or
and
mov
imul
dec
stos
jle
jns
xlat
arpl
mov
imul
addr16
xchg
fistps
mov
dec
das
adc
push
mov
fildll
pusha
xchg
inc
sbb
dec
add
mov
mov
cmp
mov
dec
jg
in
mov
or
push
sbb
testw
add
ss
ret
xchg
stc
mov
xchg
in
pop
aam
imul
lahf
fadds
xor
mov
sahf
sarl
cld
adc
fistps
mov
inc
and
pop
mov
mulb
sub
mov
rcll
cmp
rolb
insl
mov
jb
sub
daa
je
test
or
int
mov
popf
ja
mov
outsl
imul
leave
inc
das
fucompp
out
xchg
push
cli
add
nop
xlat
cmp
jp
mov
ljmp
jbe
sbb
push
jbe
mov
ficoml
cld
cmp
fwait
mov
pop
cs
test
and
xor
mov
stos
repz
inc
nop
push
adc
pop
sbb
or
in
push
mov
in
pushf
pop
jl
mov
mov
xchg
call
je
cmp
lret
mov
addb
sbb
enter
popf
in
dec
imul
loopne
fwait
xchg
addb
dec
and
fcoml
in
xlat
adc
cmp
jle
test
ss
int3
jl
ja
mov
inc
jmp
paddusw
scas
push
subb
mov
and
add
popf
addr16
push
dec
mov
add
mov
into
insb
jo
loopne
jg
mov
mov
or
pop
lock
lret
daa
into
pop
mov
xchg
mov
pop
dec
adc
jmp
out
or
xchg
adc
pop
sbb
sub
add
jae
dec
jecxz
xchg
mov
pop
gs
je
scas
int3
jno
mov
loope
cmp
mov
jp
lods
scas
inc
popa
data16
mov
sub
jo
je
xor
out
jmp
ret
out
cwtl
imul
inc
mov
mov
pusha
add
shlb
sarw
iret
pop
inc
iret
enter
mov
es
sub
outsb
mov
push
xor
jl
add
jae
inc
cltd
test
adc
jp
or
or
xor
dec
jle
add
sahf
add
mov
dec
xor
push
cld
aad
dec
mov
gs
nop
xchg
mov
insl
in
and
pop
cmpsl
lcall
jnp
xchg
cmpsl
jno
mov
push
mov
sbb
or
pop
push
xchg
inc
inc
inc
pop
fdivl
cmp
ficompl
dec
dec
sub
pop
xchg
mov
adc
sbb
and
push
arpl
iret
mov
ror
leave
mov
sbb
loop
or
push
xor
mov
cli
or
xchg
loop
xor
test
push
push
ss
dec
add
push
ljmp
faddp
fistpl
arpl
loop
das
jne
sub
in
es
and
icebp
jmp
pop
inc
jnp
rolb
push
mov
sub
jmp
mov
std
cwtl
out
mov
mov
aaa
xor
out
push
inc
mov
stc
cli
into
xchg
movsl
xchg
test
mov
mov
cmp
cwtl
in
aaa
popf
mov
xor
dec
jmp
push
roll
cwtl
cmp
arpl
push
call
push
cmp
ficomps
mov
mov
xor
js
add
xchg
subb
sub
daa
iret
in
ror
push
jae
mov
jae
les
leave
xchg
cmp
adc
pop
sbb
mov
and
push
and
fcomps
movsb
mov
jge
sahf
mov
frstor
fisttps
fnclex
imul
addr16
sbb
mov
stc
lods
xchg
jmp
push
out
pop
mov
push
push
jae
stos
pop
or
cmpsl
mov
adc
jno
roll
in
enter
dec
jg
bound
lock
sub
out
ljmp
ffree
mov
inc
and
xchg
pop
jo
fildl
in
adc
cmp
das
js
mov
testb
cmpsl
ja
adc
add
cmpsl
inc
xchg
mov
loopne
mov
stc
lret
cmpsl
xchg
out
pop
xlat
out
mov
cmc
add
pushf
inc
cmpsl
das
adc
out
jl
cmpsb
pop
movl
outsl
jg
les
push
pop
mov
mov
pop
pop
jne
mov
mov
sub
mov
mov
pop
mov
repz
inc
scas
jnp
mov
icebp
ds
in
mov
lods
lock
inc
ret
pop
adc
jb
in
mov
push
roll
test
flds
std
addr16
dec
cltd
out
pop
mov
or
daa
test
fsubp
scas
push
mov
inc
adc
fsubl
in
out
and
pop
nop
pop
mov
xor
mov
shlb
jns
aam
dec
pop
stos
std
adc
xchg
cwtl
ret
push
call
push
lods
dec
sti
inc
int
mov
sub
xor
mov
imul
insl
jbe
or
in
pushf
inc
mov
movsl
pop
adc
scas
mov
iret
dec
and
pop
mov
push
addb
push
jmp
jno,pn
cwtl
sub
or
aas
fdivs
mov
enter
mov
es
lahf
jne
ret
pop
movlps
jg
clc
rcll
lods
or
int3
fwait
lahf
mov
push
daa
rclb
mov
lods
stos
add
js
testb
popl
pop
insl
fwait
mov
cmp
aam
fs
dec
push
decl
or
adc
repz
notl
xor
mov
xchg
dec
sbb
pop
xlat
imul
loope
add
sbb
jge
adc
test
mov
jo
or
bound
jle
enter
jne
stos
repnz
push
cltd
data16
push
jg
inc
adc
mov
fs
stos
push
scas
lcall
or
add
ljmp
inc
fcmove
push
das
xchg
dec
push
ret
sub
xchg
push
mov
mov
sbb
dec
jbe
out
push
ds
sahf
rcr
xor
and
mov
adc
arpl
adc
stos
sub
jae
inc
cld
pop
sbb
lods
hlt
push
loopne
sub
fadds
sub
sti
jecxz
inc
lds
mov
push
in
pop
jmp
mov
hlt
jnp
or
mov
imul
call
test
xchg
push
aaa
sub
aas
xchg
fcoms
jge
dec
add
ret
push
sub
insb
int
hlt
add
cld
mov
jne
mov
add
push
cmp
insl
sub
dec
outsl
cmp
xchg
pop
pop
adc
cmp
stc
leave
les
mov
pushf
jb
fstl
stos
mov
cmc
movsl
imul
push
mov
call
lds
lock
pop
sbb
icebp
out
jle
out
mov
mov
lods
rolb
push
leave
push
mov
sbb
stc
popa
fs
jns
jge
out
and
mov
dec
jl
cs
nop
mov
jecxz
leave
cmp
adc
or
mov
pop
pop
test
aam
sbb
cltd
in
jne,pt
repz
insb
out
pop
mov
sbb
mov
pop
jno
jns
mov
addl
scas
cmp
cmp
inc
or
mov
mov
scas
nop
push
cwtl
pop
mov
or
jg
test
dec
fisubs
dec
jecxz
shl
insl
cmpsl
adc
and
mov
rcr
mov
add
lock
sbb
jmp
sbb
in
mov
push
xchg
testb
dec
nop
or
loope
sahf
repz
popa
mov
aam
push
pop
jle
aam
rclb
or
jmp
ja
add
mov
add
cmp
mov
jo
int
repnz
stos
mov
mov
mov
cmpsb
pop
loopne
imull
pushf
lock
fmulp
shlb
arpl
fimuls
cmp
mov
mov
xrelease
addr16
mov
fmull
add
cmpsb
inc
jns
movsl
mov
jg
add
and
jno
ror
push
jno
insl
xchg
sti
adc
mov
lods
xor
jo
push
lock
addb
push
xchg
mov
int3
sub
loopne
outsb
aaa
jne
xchg
lahf
mov
add
jae
cmp
les
cs
ficomps
sti
scas
jmp
jecxz
jnp
rcll
andb
fdivr
adc
or
mov
movsl
cwtl
cli
fisttpl
inc
scas
push
leave
lret
fstpl
filds
incb
or
bnd
xor
and
sub
jb
push
in
sbb
fiadds
subl
fwait
xor
leave
cmp
rclb
lret
clc
mov
cld
shl
shl
and
in
jae
and
cmp
shll
sub
scas
clc
push
mov
xchg
xchg
mov
add
mov
or
mov
leave
push
dec
rcr
inc
lds
cwtl
cli
sbbl
sub
mov
fcmovnb
push
push
insl
cld
mov
test
push
or
in
stc
test
or
mov
sahf
sub
inc
icebp
fisubrs
loope
dec
cmp
cmpsl
ret
loop
push
repnz
call
mov
mov
push
mov
out
lcall
repz
imul
xchg
adc
or
popa
adc
jmp
mov
mov
adc
nop
sub
adc
ret
push
mov
cld
rcl
xchg
rorl
cli
fldl
inc
push
push
cli
cmp
in
fdivrs
xor
mov
mov
add
ss
add
dec
or
push
das
imul
sub
inc
mov
andl
add
pop
retw
fs
sbb
sahf
mov
pop
flds
dec
pop
hlt
test
xorl
xlat
loop
dec
xchg
sub
sub
dec
outsb
push
inc
or
cmpsb
neg
and
jl
inc
clc
insl
mov
mov
cmpsl
pop
sub
iret
cltd
pusha
dec
fstl
cltd
or
imul
mov
dec
push
and
jae
mov
push
adc
xor
aas
dec
ja
xor
mov
adc
mov
cmp
outsl
adcl
ds
inc
scas
icebp
repnz
iret
sub
jg
aaa
cld
mov
xchg
repz
imul
cmc
addr16
or
iret
repnz
pop
rolb
mov
mov
cli
imull
push
dec
clc
nop
es
cmp
sbb
popf
cli
sbb
leave
popa
sub
stos
repz
jb
jecxz
out
sbb
sbb
and
and
jmp
mov
pop
lds
fadd
pop
call
test
test
test
push
clc
jmp
shlb
adc
imul
in
lahf
bound
dec
ljmp
imul
or
inc
mov
lock
jmp
sub
sti
mov
pop
lret
lock
sub
pusha
dec
ja
dec
inc
jnp
inc
fldenv
inc
xchg
stos
lods
mov
add
outsl
iret
sbb
cmpsb
test
sti
sti
cmp
sub
jno
mov
daa
imul
sbb
and
cld
mulb
dec
pop
jmp
inc
test
dec
ret
out
mov
aad
cmp
repnz
fwait
cmp
and
sbb
js
std
pop
sub
and
into
in
test
pop
push
jmp
or
iret
sbbb
and
add
xor
out
out
jmp
fldenv
and
add
xor
mov
lcall
clc
adc
pop
outsb
xchg
dec
mov
outsl
arpl
mov
sbb
mov
data16
movsb
ja
sub
mov
mov
fldenv
pop
mov
loopne
fstps
dec
cmpsb
insb
fwait
and
stos
jl
cmp
testl
inc
ficomps
sbb
scas
jmp
xchg
stos
jp
mov
stos
push
cmpsb
jg
clc
add
mov
repnz
decb
or
xor
int
ret
inc
sbb
adc
fs
cmp
mov
movsb
lock
arpl
inc
aad
or
scas
push
divl
xchg
xor
sbb
rolb
inc
cmp
roll
lcall
jge
test
cmpsb
pushf
mov
xor
adc
js
jmp
in
add
and
mov
and
pop
lds
jnp
sub
das
and
imul
jmp
cmp
loop
fmuls
add
push
lods
sub
mov
xchg
rcrb
xlat
and
push
stc
mov
pop
fcomps
pop
xor
test
call
mov
cmp
fnstenv
jmp
outsb
cmpsl
or
sub
and
mov
shrb
icebp
xchg
or
sbb
mov
ljmp
inc
fldcw
dec
imul
mov
ljmp
int3
and
mov
int
add
cmpsb
gs
insb
sahf
insb
sbb
sarb
outsb
add
aaa
sub
add
xchg
test
repnz
shrl
in
pop
jg
pop
pop
push
inc
into
pop
std
shll
sti
in
push
mov
and
into
sub
shlb
test
leave
mov
insl
in
dec
adc
xor
xorb
imul
test
jns
pop
dec
sysexit
inc
jno
xchg
pop
push
xor
stos
mov
fdivl
xchg
repnz
ret
lods
xor
cmpsl
cmp
shr
test
pop
jle
jne
fcomip
loopne
push
mov
xchg
std
mov
and
test
sub
or
test
shrb
outsl
sbb
cmc
addb
mov
dec
ficoms
insb
xchg
mov
in
mov
mov
xchg
xchg
adc
push
add
imul
inc
mov
lcall
adc
xor
andb
push
rcrl
je
xchg
cli
xor
hlt
jb
loope
jg
add
cmp
sub
cmp
imul
pop
push
movsb
and
negl
enter
in
jno
xchg
inc
mov
repnz
xor
cwtl
cmp
les
mov
lahf
add
xor
cmc
mov
mov
mov
cmp
xchg
enter
pop
decb
push
lods
mov
mov
mov
je
imul
fdiv
shrl
mov
jae
popa
popf
sub
lds
xchg
dec
ret
xchg
std
daa
cmp
xor
xlat
cwtl
pop
out
xor
xor
jle
out
int
adc
dec
stos
data16
jecxz
into
notb
jge
gs
lds
movsl
inc
stos
jge
mov
in
xor
or
scas
loop
inc
and
int
jns
xchg
push
outsb
mov
adc
std
mov
jmp
cltd
mov
xchg
mov
push
mov
cwtl
add
lods
inc
xor
xlat
fsubl
in
pop
sub
mov
ljmp
int3
cld
jae
int
mov
push
and
mov
add
add
ja
mov
push
dec
lcall
imul
roll
fsts
shl
mov
shrb
bound
xchg
or
xor
cwtl
cmp
lahf
roll
cli
mov
daa
cmp
stos
rolb
push
gs
subb
shr
cli
pop
mov
add
sub
stos
rolb
orb
fstl
sarb
bound
xor
push
cmc
xchg
mov
fidivl
jno
sub
or
or
popa
push
std
mov
movsb
repnz
mov
xlat
lods
mov
or
ror
sbb
cmp
add
sbb
in
data16
shlb
sbb
jbe
mov
test
std
jne
data16
xchg
pop
adc
fs
lret
fldcw
mov
repz
cwtl
testl
test
cmp
jae
pop
cltd
jae
cltd
cmp
and
mov
jge
sarb
cmc
sbb
jnp
dec
adc
lods
lock
out
gs
adc
push
mov
out
pop
mov
fnstenv
xor
ret
addl
jb
dec
ja
es
loopne
rol
pop
dec
add
rol
fimull
jne
cmp
xor
stc
pop
inc
push
lret
gs
xor
aaa
repz
push
dec
fidivrs
inc
mov
rorb
jne
loopne
xchg
loop
pop
sub
lret
imul
lods
and
dec
mov
push
call
js
ret
es
cli
fbld
sub
jecxz
pusha
insl
or
mov
dec
and
cld
push
jl
xlat
fisubrl
push
sahf
inc
dec
dec
loopne
shrl
decb
xor
call
inc
add
dec
insl
bound
and
mov
test
add
cmp
sub
ja
dec
xchg
scas
cld
dec
add
jmp
sbb
inc
fcomp
decl
mov
xchg
pop
push
and
jp
inc
push
xchg
jmp
insb
mov
sbb
push
push
idivl
fnstcw
fcoms
imul
sahf
punpckldq
scas
add
int3
inc
es
stc
cmp
repnz
imul
sbb
adcl
stc
xor
and
bound
inc
out
or
mov
mov
es
pop
lods
sub
aam
sub
rcrl
ret
pop
test
mov
adc
imul
mov
aas
mov
out
xchg
push
mov
adc
xor
pop
pop
mov
mov
stc
fcmove
lret
and
pop
mov
fwait
push
fcmovnu
int3
or
idiv
mov
and
dec
cmp
mov
fnstcw
js
andl
mov
inc
or
rcll
pushaw
xchg
pop
test
insb
pop
adcb
jl
mov
or
xchg
jge
je
mov
mov
fwait
addr16
cmp
push
jge
mov
addr16
dec
sarb
and
fwait
ljmp
mov
fs
std
jp
mov
lods
jo
mov
sbb
fcomps
repz
mov
push
out
cltd
sti
cltd
shlb
stc
lods
icebp
inc
jg
and
cmpsb
aas
push
arpl
arpl
out
scas
push
push
jge
sbb
fwait
jecxz
pushf
pop
out
sahf
aad
pusha
test
ret
mov
aad
icebp
cwtl
outsl
inc
push
out
pop
mov
and
in
push
sahf
test
dec
mov
mov
push
add
or
incl
cmp
mov
sbb
cs
icebp
lods
fidivrs
xor
jg
dec
stc
push
stos
fwait
imul
push
iret
out
call
mov
cmp
sub
cmp
test
js
lods
xor
mov
adc
shl
or
jl
push
jp
mov
pop
aaa
mov
cmc
jecxz
jge
or
dec
inc
sbb
jle
bnd
and
and
repnz
sbb
in
imul
dec
push
mov
jmp
xchg
jb
dec
or
adc
jb
dec
cltd
ret
nop
shlb
test
dec
pop
push
lds
or
aas
cmpsl
in
push
pusha
jmp
fstpt
or
mov
andl
lea
lds
scas
mov
rol
add
jae
insb
mulps
push
decb
or
jae
das
adc
or
test
sahf
sti
jg
add
lret
push
loope
imul
push
jecxz
lcall
xor
jnp
mov
sub
icebp
orl
xchg
mov
add
into
cmpsb
andl
inc
enter
orb
xchg
out
addr16
pusha
pop
xchg
lret
fwait
sub
in
push
outsb
jae
pop
in
cwtl
repz
mov
pop
jno
jnp
cmp
jo
and
xor
pop
jbe
out
test
pop
jns
push
leave
push
adc
jae
adc
pmulhw
dec
popa
add
cmp
xchg
and
push
jg
popf
lods
flds
sbb
mov
or
sti
outsb
dec
jp
dec
xorb
or
andl
cmp
sub
stos
pop
shll
neg
jp
mov
jge
push
pop
out
ficompl
sub
js
cmpsb
ja
rcrl
jns
push
lods
stc
mov
add
push
icebp
add
cli
or
jmp
filds
sbb
lods
icebp
dec
out
pop
in
mov
fisttpl
loop
inc
pop
mov
dec
pop
ret
xlat
push
mov
mov
fsubs
mov
sbb
mov
dec
xchg
push
test
negb
lods
xor
or
mov
xor
and
add
sub
inc
in
mov
cmpb
xlat
movsb
sub
fsubp
sbb
lcall
jge
cmpsl
je
sahf
mov
mov
inc
inc
inc
data16
insl
int3
pop
jl
sbb
scas
cld
pop
testl
adc
popw
shl
mov
sbb
movsl
data16
bnd
ret
into
lret
iret
cmp
inc
xor
clc
scas
ja
sbb
mov
add
in
outsl
out
or
ljmp
inc
test
sbb
dec
add
sahf
stc
outsl
ds
inc
sbb
adcl
xor
ja
js
in
fs
out
add
arpl
mov
adc
out
cmc
or
stos
dec
and
dec
insb
popf
aaa
xchg
xor
xor
add
aas
adc
inc
xchg
adc
adc
in
add
inc
lret
mov
mov
xchg
repz
pop
adc
loopne
mov
out
addr16
cli
jns
bnd
popa
scas
mov
incb
xor
xchg
fstpl
push
and
aas
mov
xlat
mov
lea
mov
data16
loopne
daa
mov
sbb
movsl
push
jg
loop
pop
sub
in
xor
push
ret
push
test
decb
lcall
mov
daa
flds
pusha
rorl
pop
inc
sahf
xor
out
in
ja
add
xor
je
lret
cmc
push
out
fsubrp
lods
push
jns
sbb
jecxz
cmpb
mov
aas
push
push
or
testb
paddb
mov
mov
call
mov
or
ret
adc
outsb
pop
aaa
xor
dec
cmp
mov
icebp
inc
sbb
iret
in
push
movsl
je
mov
push
js
fisttps
mov
sarb
call
ja
mov
data16
dec
adc
cmpsl
or
mov
rcrl
lods
mov
aas
mov
and
sbb
xchg
ds
mov
cs
in
sub
xchg
lret
xchg
rolb
in
pop
lahf
mov
xchg
jb
adc
divl
cli
add
test
inc
xchg
decl
cwtl
add
loop
lahf
sbb
fcoms
imul
push
rorl
mov
jbe
cwtl
xchg
push
mov
cmpsb
jl
inc
or
popf
adc
mov
mov
insl
mov
mov
inc
mov
inc
push
xor
imul
push
cmpsb
xchg
insl
dec
lcall
or
jg
jno
in
add
sbb
sub
shll
add
pop
lret
clc
dec
inc
icebp
pop
cmpsl
das
cli
push
push
bound
mov
pop
adc
inc
in
lock
jno
imulb
int3
shlb
or
mov
sbb
imul
ja
shrb
cmp
mov
rcrl
sbbb
mov
or
cmc
pop
xor
push
and
lcall
int
in
adc
addb
push
sub
out
or
xor
lcall
jmp
out
or
or
dec
loopne
into
fisubrs
mov
fs
xor
and
inc
and
loop
jg
xchg
jno
pop
imul
cmp
mov
push
push
notl
mov
inc
fbld
fisttpl
icebp
test
lahf
aam
jg
fidivs
stc
fstps
cltd
bnd
cli
inc
or
cltd
icebp
push
bnd
ret
mov
fildl
dec
cs
add
xchg
mov
mov
inc
ret
cld
ss
pop
andb
jns
xor
out
xor
xchg
lretw
xlat
mov
cld
iret
cmpb
adc
hlt
in
rcl
and
ljmp
pop
je
pop
cmc
into
rcr
daa
sbb
xchg
cmpsb
xor
std
cmp
mov
fldpi
pop
xlat
cli
adc
les
mov
pop
add
jae
fsubrl
xor
jmp
or
dec
push
pop
sahf
sbb
lock
jmp
std
aas
and
lret
sbb
sbb
sbb
xlat
xor
iret
sti
cmc
cmp
dec
or
and
mov
scas
loop
sbb
int3
xchg
loope
dec
into
shrb
cli
ret
mov
lahf
sbb
add
stos
inc
and
in
mov
addb
and
shrb
pushf
lcall
cwtl
hlt
outsl
pop
mov
jmp
stos
sbb
iret
jmp
mov
shrl
lods
outsb
dec
or
dec
mov
mov
pop
sbb
stc
rolb
mov
sub
push
sbb
sti
xor
aas
and
sti
and
insl
adc
notb
aad
cmp
mov
ret
sub
push
cli
sbb
push
jnp
in
ja
js
je
movsb
int
ret
xchg
jnp
mov
rcll
pop
and
push
adc
mov
push
dec
cmp
fsubl
in
inc
dec
inc
xchg
icebp
incb
hlt
xor
push
mov
pop
inc
lret
mov
and
and
mov
or
cmp
test
pop
dec
mov
or
cmp
filds
pop
and
ja
nop
xacquire
lods
sbb
into
jecxz
adc
fsts
addb
loopne
jb
fdiv
push
jb
push
inc
test
or
jg
ret
ds
push
xchg
xchg
xchg
addr16
dec
sar
mov
add
js
mov
or
dec
sub
jge
popf
pop
cmp
push
cmp
mov
insl
xchg
cmpsl
enter
pop
ss
cmp
and
shlb
push
loopne
lret
mov
jns
inc
fstpt
jnp
daa
push
dec
call
or
sub
cwtl
ljmp
ret
inc
lret
mov
int3
in
ficompl
fldt
sbb
push
push
aas
mov
mov
mov
aas
outsl
sub
mov
sub
inc
pop
cli
cmp
dec
xor
mov
pmaddwd
ret
and
fimull
or
mov
inc
mov
test
dec
mov
mov
lds
ret
out
sbb
das
jb
add
lock
push
push
pop
sub
cwtl
cmpl
jle
jo
fnstsw
mov
inc
add
add
outsl
pusha
cwtl
fildl
add
inc
jne
cwtd
mov
in
mov
fldcw
loopne
rcrb
std
repz
pop
or
and
js
outsb
sub
je
int3
daa
fistl
incl
xchg
insl
loopne
cmp
scas
je
cmp
out
pushf
js
shl
dec
data16
dec
stc
inc
enter
test
sub
outsl
cmp
ljmp
inc
rcr
xor
xchg
pop
ficoml
std
push
fs
into
adc
xorb
push
sbb
adc
sbb
add
rcr
xor
cltd
or
adc
int3
ficoml
cmp
or
adc
mov
stc
cmp
imul
jo
repz
fildll
inc
mov
add
clc
pop
popa
inc
jp
out
pushf
ja
outsb
pop
jle
mov
or
inc
stc
into
test
fnstsw
adc
sub
test
out
mov
push
sbbl
sbb
into
xor
add
adc
mov
stos
mov
aad
and
pop
aad
jg
mov
insl
iret
jecxz
and
xor
jb
cmpsl
loop
jle
pop
mov
insl
in
cld
mov
jns
faddl
xor
addr16
sbb
jae
sub
or
filds
imul
je
add
sbb
xor
xchg
xchg
mov
insl
add
push
adc
sbb
int
pop
jge
sbb
push
aam
add
inc
cmp
cli
lods
iret
dec
or
into
lea
mov
insb
dec
out
shrd
lea
pop
vmovss
pop
push
inc
stos
lret
adc
mov
sbb
mov
mov
jns
js
cmc
je
adc
dec
sbb
add
sbb
lea
inc
jo
je
scas
sub
fxch
pusha
roll
push
xor
jae
andl
inc
inc
mov
pop
clc
mov
sarl
xchg
fs
daa
mov
in
mov
jbe
mov
pop
sub
and
pop
push
out
bnd
aam
xchg
incb
je
sub
xchg
add
pop
xchg
iret
sbb
movsb
adc
xor
mov
push
loopne
mov
pop
pop
mov
lods
out
cmp
jns
push
cmp
xchg
mov
imul
push
cmp
test
ljmp
inc
es
insb
pop
movb
lcall
fildl
mov
scas
sahf
jl
push
stc
pop
push
cs
fimull
mov
sub
cmc
aas
and
cmpsl
jle
int
push
pusha
and
daa
out
push
dec
pushf
jmp
inc
es
xor
sub
lcall
test
pushf
std
inc
mov
into
mov
dec
mov
jbe
inc
mov
or
outsb
or
xchg
jmp
xchg
or
sar
icebp
push
insb
lret
mov
push
xlat
mov
daa
or
imul
imul
ss
outsl
mov
and
sbb
cli
insb
jbe
adc
jp
xchg
mov
jl
dec
cmp
shl
mov
mov
jmp
jge
inc
iret
add
decl
scas
addl
adc
aaa
out
data16
ds
lret
adc
inc
push
int3
lods
cwtl
rorl
add
cmp
loop
es
sti
push
sub
jbe
mov
dec
fisubrl
loope
push
push
cmp
and
and
adc
ja
into
shl
rorl
sub
sbb
test
mov
push
popa
adc
jae
mov
or
ja
in
imul
jle
lock
adc
cmp
and
test
sbb
inc
or
sbb
xchg
xor
mov
dec
pop
aad
xchg
scas
std
nop
adc
insl
popf
or
inc
xor
or
jns
cs
data16
mov
repnz
mov
add
sar
and
mov
test
mov
outsl
fst
dec
jmp
xchg
cmp
sbb
jae
lods
nop
pop
sbb
test
popf
push
outsb
js
xchg
sbb
insb
icebp
jnp
jmp
sub
shl
cmp
mov
jmp
dec
mov
push
push
pushf
xchg
pop
test
aad
or
cmp
cmc
stc
cs
push
movsl
adc
notl
call
jne
insb
mov
sub
xchg
jle
scas
or
outsl
nop
xchg
xchg
mov
fidivs
inc
rorl
or
call
or
adc
shr
cwtl
fsubs
incb
dec
dec
inc
int
cmc
insl
jmp
int3
mov
ret
push
sub
sub
and
dec
cs
fdivrp
adc
or
mov
call
aaa
fisubs
adcb
mov
mov
mov
scas
cld
xor
insb
push
sub
xor
pop
mov
pop
rorl
arpl
pop
dec
cli
sub
lahf
out
push
jae
xor
in
mov
cli
fisubrs
dec
stc
inc
or
add
hlt
outsb
adc
icebp
int3
cld
jge
mov
cwtl
jg
mov
pop
fs
loopne
clc
sahf
insl
mov
into
cs
sbb
int
in
pop
scas
in
movsl
out
pop
mov
cmc
pop
stos
cmp
and
lea
icebp
lcall
insl
sahf
adc
icebp
andb
imul
adc
scas
push
stc
xchg
jnp
cli
dec
popa
loopne
popl
add
rcrl
cltd
adc
or
jecxz
aaa
pop
add
std
jge
fnstcw
sbb
jle
fcoms
mov
xchg
cmp
loope
mov
mov
adc
push
xchg
ljmp
inc
or
movsl
pop
add
sbb
cmp
mov
and
xchg
repz
xlat
nop
xor
dec
popa
stos
cmpsb
fcomi
lret
lret
push
addr16
dec
outsl
sub
fisttps
arpl
fscale
cwtl
cmp
loope
repz
mov
sub
jge
dec
test
je
loopne
icebp
mov
cmc
arpl
add
cmpsl
pushf
rorl
mov
jecxz
jp
iret
imul
inc
push
movsl
xor
mov
add
test
ljmp
xor
subb
push
dec
cs
add
sub
xchg
lock
xchg
mov
repnz
ja,pt
or
mulb
sbb
popa
mov
enter
pop
dec
ror
int
mov
dec
lea
jno
lods
shlb
out
imul
rol
dec
push
rolb
mov
stos
out
stos
xchg
inc
sti
sbb
mov
inc
sbb
nop
shll
xor
mov
inc
lcall
xchg
punpckldq
push
add
outsb
imul
loopne
jle
and
gs
test
pop
xchg
icebp
cmp
jl
repnz
jecxz
mov
repnz
jns
mov
cmc
dec
adc
loope
or
jl
mov
mov
pop
xchg
rcl
xlat
cli
jp
jno
sub
negl
pop
mov
out
insl
or
arpl
mov
daa
sub
arpl
sbb
add
or
sub
fisttps
clc
aam
lds
jns
and
test
rclb
sub
popa
loope
movsl
pop
mov
fistl
push
inc
les
push
imul
ss
mov
daa
leave
cmp
and
les
sub
mov
sbb
stos
xor
mov
dec
pop
arpl
xor
ss
lahf
push
in
and
cmc
scas
mov
enter
fs
shrl
loopne
testb
adc
mov
jge
pusha
test
mov
dec
insl
push
ficoms
pop
fdiv
inc
fsubr
cmp
jmp
je
xchg
sarl
mov
inc
neg
xchg
ja
cmp
inc
jmp
inc
xchg
cmp
cmpsl
pusha
xchg
push
enter
notl
jg
push
in
stos
xchg
lret
ret
stos
xchg
stos
das
mov
nop
pop
div
adc
sub
nop
add
cmpsb
je
loope
repz
sbb
ret
stos
jns
mov
lret
xor
in
mov
insl
es
xor
jle
mov
aam
sub
into
ret
mov
fnstcw
fnstcw
out
imul
add
sub
push
sbb
int3
idivl
pop
test
add
lcall
fs
stos
jb
mov
orl
lds
cwtl
push
outsb
ja
push
or
and
cmp
out
push
js
stos
push
or
rorb
add
movl
push
sub
out
je
sahf
scas
dec
out
and
xchg
ret
add
push
jg
mov
dec
inc
enter
leave
inc
int
cmpsb
lds
sub
addb
and
addr16
arpl
sub
ja
inc
sbb
pop
cmp
fs
testb
dec
xor
int
jg
push
fs
sbb
and
fs
lods
out
mov
jl
mov
scas
jle
lds
jnp
jno
cwtl
in
pop
pop
dec
fcoml
out
pusha
std
popf
lods
sbb
stos
inc
push
push
call
sub
push
mov
rcll
pusha
cmp
jle
imul
jmp
movsl
add
lcall
dec
sarl
sbb
sti
lock
repz
push
pop
mov
or
inc
mov
test
icebp
ljmp
push
pop
push
int
xchg
inc
lret
insb
test
xor
xor
pop
dec
cmc
pop
xchg
sub
add
cmp
xor
adc
nop
jge
xchg
out
jg
push
arpl
imul
pushf
movsb
sbb
ds
insb
adc
dec
testl
sbb
dec
push
gs
sbb
add
flds
lds
scas
loope
cltd
xor
add
pop
ss
cmp
xor
fnstsw
cs
mov
hlt
flds
jl
sub
std
div
out
dec
jae
daa
jo
mov
push
imul
adc
push
inc
shl
jbe
das
pop
daa
pop
or
aaa
dec
and
out
mov
out
dec
test
xchg
jb
jl
scas
sbb
ja
inc
push
movsl
or
pop
fucomi
cmc
enter
adc
sub
into
xchg
cmp
jns
push
cli
movsl
ret
pop
sar
and
sub
and
xor
adc
movsb
mov
inc
cli
cmc
dec
enter
arpl
push
sarl
cs
push
or
imul
jg
xchg
flds
xlat
push
dec
imul
xor
dec
mulb
adc
cmpsb
cmp
inc
iret
inc
or
fimuls
fwait
or
push
idivb
test
mov
pop
lds
gs
pushf
jno
jmp
lret
adc
outsb
out
movsl
cmp
xchg
pop
and
fdivl
inc
add
enter
arpl
mov
fisttps
repnz
xor
test
xchg
ret
leave
inc
outsb
ds
hlt
hlt
mov
jb
scas
movsb
add
lcall
loopne
push
or
hlt
push
xor
mov
xor
push
pop
xor
movsl
jp
loope
fnsave
mov
jne
jmp
xchg
jo
cmp
sbb
ds
or
pop
lret
add
lods
mov
dec
lds
mov
cmp
pushw
fistpl
dec
pop
xchg
sti
aaa
aas
mov
daa
sub
or
mov
mov
arpl
sub
push
daa
paddb
pop
mov
inc
mull
fnstcw
mov
data16
pop
cmp
shlb
aad
jl
call
jno
xor
inc
iret
cld
push
mov
or
inc
test
jmp
push
add
imul
pop
hlt
cbtw
and
inc
pop
ret
jno
fistps
pop
movsl
faddl
dec
aas
mov
aad
xchg
inc
ficoml
dec
icebp
daa
or
nop
sub
sub
out
cmp
int
jl
cltd
sub
ret
lcall
gs
adc
cmp
lds
pop
push
ja
inc
adc
mov
scas
ds
mov
repnz
fwait
in
clc
mov
and
sub
mull
iret
pushf
and
mov
lret
and
push
lock
or
xchg
into
xlat
or
cmp
pop
ret
inc
jo
sbb
addr16
stc
loop
mov
aas
mov
test
cwtl
cmp
sarb
pop
and
dec
cmp
pusha
sub
jbe
jne
mov
jp
stos
hlt
jns
add
xchg
push
lock
add
fldenv
mov
sbb
mov
jnp
popa
mov
jecxz
in
lods
xor
orl
movsl
push
and
jo
mov
dec
push
push
je
fisubs
sub
jbe
xlat
mov
bound
add
inc
dec
leave
push
mov
addl
out
and
stc
pop
sub
cli
outsb
xchg
xchg
xchg
icebp
dec
pop
test
fwait
add
popa
cmp
cmp
mov
pop
xchg
repnz
add
jb
roll
lfs
ja
in
xchg
push
aaa
cltd
imull
dec
xchg
inc
and
add
jmp
xor
xor
fbstp
cmp
push
test
seta
xlat
jne
in
ja
jo
dec
iret
enter
mov
addl
lahf
das
add
clc
popf
mov
in
cltd
fadds
cmpsl
test
lods
hlt
xor
cmp
and
and
cmp
stos
dec
adc
imul
and
iret
movsl
aaa
fstpl
or
push
cmp
add
lods
in
push
and
mov
cmp
aad
sbb
lahf
ret
adc
push
outsl
ret
mov
pop
or
cmpb
mov
aam
fildl
iret
adc
rcrb
mov
sarb
inc
add
mov
mov
pop
adc
aad
mov
shrb
in
inc
test
test
insl
nop
dec
shrb
adc
push
ficomps
test
lds
scas
loopne
jl
sub
cmpsb
es
mov
push
sbb
fidivl
mov
aaa
fistl
loopne
loope
aad
scas
xor
addr16
jnp
push
push
lret
imul
mov
mov
out
dec
sahf
mov
cmpsb
or
cld
mov
out
sub
push
pop
xchg
jp
sti
stos
jno
std
int3
push
daa
test
rdtsc
jge
sub
jae
fdivrl
xchg
mov
adc
je
daa
lods
xorb
mov
mov
lods
inc
ds
lds
jmp
ja
push
inc
int3
rcll
ss
push
xchg
xchg
cmp
xchg
in
push
je
popa
pushf
arpl
mov
dec
add
inc
jno
fistpl
push
repnz
dec
ret
add
out
jl
mov
inc
or
jno
inc
pop
into
dec
push
movsl
ret
jne
inc
push
dec
pop
mov
or
push
imul
sub
lret
daa
jae
fs
jecxz
lret
mov
and
je
mov
mov
lret
fldt
mov
and
push
mov
jl
fildl
pop
sti
mov
xor
lahf
push
loope
mov
jae
inc
jne
xchg
mov
sub
lds
push
jae
mov
imul
test
aas
fadds
mov
stos
test
clc
dec
or
inc
mov
sub
mov
cli
mov
and
out
inc
ds
enter
pop
add
dec
cld
pop
xchg
addr16
mov
jnp
add
dec
clc
cmp
mov
scas
and
push
sub
notl
mov
into
les
push
xchg
and
mov
rorb
inc
mov
pusha
or
mov
mov
or
xchg
rcrl
fildl
fdivrs
jg
add
mov
popf
notl
pop
popa
ss
cld
iret
inc
adc
cmpl
mov
dec
dec
sbb
xchg
fistpl
mov
and
ret
dec
mov
mov
dec
xchg
xchg
ret
mov
cwtl
leave
mov
push
jns
mov
arpl
loope
mov
xchg
add
repnz
imul
in
mov
scas
add
sbb
jp
inc
repz
sti
int3
notb
sub
mov
fstpt
hlt
insb
lods
inc
mov
push
xlat
mov
or
xor
jb
pop
enter
clc
lods
imul
fcomi
inc
jmp
dec
pushf
out
pop
js
cmp
pop
fadds
jns
xor
mov
test
cmp
fidivrl
mov
mov
pop
test
xlat
dec
xchg
push
fcomps
loope
gs
loop
push
mov
in
push
daa
pusha
orb
addr16
add
or
jp
ja
or
xchg
pop
cmp
pop
mov
pop
cwtl
xor
pop
popl
adc
mov
xor
enter
fwait
mov
pop
and
cs
fists
mov
out
imul
mov
mov
std
jno
mov
loopne
dec
mov
es
scas
pop
mov
jle
out
jle
int3
and
and
inc
outsb
pushf
dec
xchg
sbb
test
jns
add
stc
sub
outsb
outsb
scas
sub
jno
jg
sbb
sbb
mov
pop
adc
mov
jo
xchg
inc
mov
pop
inc
mov
mov
aam
pop
outsb
in
inc
mov
push
xchg
mov
inc
mov
and
dec
and
int
jp
int
dec
or
in
mov
leave
push
jle
mov
push
test
jnp
jbe
sbb
icebp
test
pop
mov
inc
xchg
lods
jbe
cmp
stos
dec
sbb
mov
fucomi
popl
xlat
or
scas
fsubrl
dec
xchg
ficoml
xchg
or
fcomp
and
sbb
out
std
mov
scas
sahf
cmp
mov
pop
imul
pop
inc
jl
cmp
adc
sbb
clc
mov
mov
leave
xorl
lahf
cmp
dec
lahf
stos
pusha
shrl
push
xor
cltd
shrl
mov
and
inc
pusha
bound
dec
mov
sub
ss
xor
dec
mov
sbb
ficomps
xorb
lea
push
rolb
cmp
pushf
repnz
ljmp
pop
movb
mov
stc
inc
cmc
sbb
lods
jno
fists
pop
repz
mov
add
jg
scas
xchg
sbb
ret
aas
mov
divb
pop
popa
xchg
and
xor
dec
fldenv
cmpb
jmp
out
daa
fwait
stos
cld
mov
stos
push
xchg
rcll
mov
mov
xchg
jb
dec
inc
sbb
push
dec
into
jmp
shr
or
inc
pushf
movb
cmpsb
xlat
out
push
or
icebp
add
or
jmp
xor
sub
jo
mov
xchg
out
xchg
pop
mov
cld
jae
cmc
jne
dec
pop
js
je
stos
adc
cmp
adc
push
xchg
jl
push
and
xchg
rcrl
inc
shrb
popf
lock
out
xchg
sbb
jno
mov
sar
mov
repz
mov
mov
inc
stc
add
pop
mov
cmc
xchg
cmpsl
adc
cli
push
in
or
data16
in
mov
jb
inc
dec
xor
xor
sub
hlt
fdivl
dec
push
adc
out
int3
xchg
in
fdiv
jno
add
movsb
insl
in
xchg
into
inc
jp
jmp
into
cmp
push
insb
xor
add
sub
aaa
adc
sbb
cmp
push
out
push
test
mov
mov
inc
push
ds
mov
and
aas
sbb
es
test
cmp
pop
adc
jle
fwait
jbe
lret
sbb
xchg
push
icebp
loop
cmp
cmp
mov
add
in
adc
mov
xor
xchg
sbb
push
mov
adc
add
orl
pop
mov
push
xchg
push
push
sbb
outsb
push
xchg
jmp
push
xchg
inc
mov
test
xor
mov
push
or
arpl
dec
pop
jae
push
in
mov
stos
adc
push
mov
and
out
stos
cmp
jl
in
and
lahf
add
jns
jno
pop
xchg
out
push
ljmp
jge
adc
adc
into
fldenv
rorl
adc
hlt
pushf
in
cwtl
cmpsb
jg
mov
test
sub
mov
ret
out
inc
or
cli
pop
push
stc
xlat
rorl
inc
ret
mov
lods
mov
scas
bound
cmpsb
jmp
cwtl
std
sbb
inc
add
and
imul
jae
or
dec
inc
gs
sbb
repz
push
out
and
xorb
push
icebp
ror
xchg
insl
mov
mov
inc
xchg
dec
test
push
jbe
aam
mov
addr16
jns
add
push
fwait
or
addr16
iret
sub
mulb
xchg
adc
ret
pop
sub
pop
out
pop
mov
mov
or
fsubs
xchg
lea
pop
cmp
push
insl
push
test
pop
adc
int3
sub
xchg
pop
xor
data16
mov
push
push
inc
sbb
insb
push
enter
push
lahf
loope
gs
pop
stos
lds
cmp
dec
ret
push
pop
not
cmpsl
movsl
mov
push
or
pop
insl
leave
int3
leave
int3
add
sub
movsl
dec
cmp
movaps
das
pusha
cmc
movsl
outsl
push
test
je
addr16
insl
xchg
add
fsubrs
or
pop
cmp
lahf
and
jle
dec
loope
cmpsb
not
or
xchg
rcl
mov
lods
fldl
movsb
pop
in
jnp
addb
xor
rorl
popa
iret
inc
pop
imul
xor
div
push
leave
push
call
sti
jae
outsb
pop
jno
jle
push
popf
adc
jne
xor
aam
xchg
add
sbb
aaa
insb
loop
mov
outsb
jp
fucom
lock
add
mov
faddl
inc
iret
and
xor
aas
pop
mov
mov
push
pop
iret
loopne
xchg
pop
insb
out
pop
jae
dec
shlb
addr16
pop
mov
xor
fldt
xchg
xchg
xchg
push
xor
mov
sbb
or
add
in
sbb
mov
leave
scas
cmp
cmp
pop
push
stc
in
xor
xor
pop
push
fldl
mov
lret
lret
jg
ljmp
icebp
scas
cltd
inc
push
mov
movl
mov
lahf
js
add
lds
clc
push
arpl
repz
add
cld
add
incb
push
jl
fsubr
dec
dec
sbb
sub
test
pop
mov
push
xor
or
lods
xor
xor
jae
loopne
loopne
shlb
aaa
subb
xchg
loopne
fmuls
repnz
mov
mov
rorb
jo
cwtl
cmp
cmp
dec
arpl
xchg
push
mov
mov
idiv
pushf
mov
mov
outsl
imul
or
es
cmp
xor
rol
shrb
in
outsl
inc
cli
sub
ss
jle
and
movsb
pop
mov
movsl
lock
lret
in
sbb
aad
pushf
mov
push
cmp
fdivp
push
jns
arpl
xor
cltd
leave
lock
dec
test
ss
add
andb
mov
dec
out
mov
mov
jge
xorl
fdivr
out
scas
cmp
adc
pusha
push
shr
dec
ljmp
in
mov
repz
iret
stc
add
bound
stos
cmp
test
das
les
push
mov
cmp
pop
out
stos
and
arpl
in
xor
pop
int
mov
mov
lret
mov
int3
push
adc
mul
popa
sbb
in
icebp
jo
cmp
add
sbb
mov
xchg
jb
ljmp
sub
or
dec
enter
insl
out
mov
push
addr16
mov
cltd
call
pcmpeqw
mov
aad
mov
ds
or
andl
mov
inc
imul
add
xchg
push
xchg
das
mov
xor
mov
icebp
mov
imul
jb
xchg
jg
lcall
adc
mov
popa
aaa
scas
pop
inc
dec
or
or
xchg
aam
lods
fisubl
xchg
fcmovne
xchg
push
in
jno
dec
xor
sub
jb
out
clc
or
jns
hlt
or
std
inc
xlat
mov
dec
dec
fwait
movsl
inc
lods
pop
shrb
js
mov
sbb
pfacc
pop
jo
jae
test
dec
fwait
aaa
jne
inc
popl
sbb
adc
inc
repnz
shlb
test
fmulp
fs
cmpl
and
out
dec
xchg
lret
adc
adc
faddl
and
shl
lock
push
jns
pop
notl
push
sub
scas
add
push
mov
dec
enter
add
addr16
addb
rcrl
fwait
adc
and
mov
in
mov
daa
icebp
arpl
inc
stos
rorb
pop
inc
arpl
adc
pop
or
imul
jl
rorb
cmp
jp
cmc
les
fnsave
mov
sbb
push
or
sbb
pop
mov
mov
pop
mov
cmp
adc
xlat
mov
dec
push
jg
fistl
mov
in
je
push
sub
jmp
sub
cmp
popa
out
jbe
insb
aaa
pop
call
xlat
mov
mov
test
push
inc
pop
outsb
enter
das
cmp
sti
inc
mov
pusha
insl
jns
and
jnp
cmp
loope,pt
int3
out
test
std
push
mov
es
xor
jl
mov
inc
jns
jg
stos
jae
sub
imul
gs
loop
pushf
push
pop
test
adc
out
adc
addr16
sub
das
int
jo
jbe
mov
push
sarl
xchg
data16
adc
int3
neg
sbb
pop
push
cwtl
je
nop
mov
imul
fwait
and
jne
rcr
enter
pop
jmp
arpl
mov
mov
push
inc
dec
jl
or
out
lret
rorl
pusha
andnps
icebp
insb
pushf
repz
mov
push
sti
and
dec
xor
inc
jl
xchg
xor
popa
cmp
ds
push
and
and
ja
test
js
aam
mov
scas
push
pop
cmp
and
mov
adc
push
in
imul
and
push
jle
mov
pop
and
pop
and
loop
jae
cmpsl
fisttpll
bound
xor
cmp
outsb
shr
je
mov
jo
sub
test
sti
inc
insl
adc
icebp
push
mov
xor
psubd
adc
icebp
xchg
mov
pop
add
mov
sub
lcall
lret
nop
aam
pop
jg
mov
lahf
jg
lahf
jne
jl
xor
sbb
lods
pop
cmp
test
aam
incb
cmpsb
sbb
js
mov
fs
dec
push
jnp
out
and
scas
fisubl
cmp
cs
jmp
and
enter
adc
push
xor
ljmp
sub
xchg
fadds
pop
fs
sub
xchg
dec
sbb
ret
xchg
ja
lea
push
xchg
xchg
xor
adc
push
jbe
in
out
jl
jb
aaa
xor
xchg
aaa
or
xchg
scas
clc
add
adc
adc
daa
ds
jns
mov
cmpsb
push
mov
cmp
sbb
stos
hlt
insl
lods
xchg
sarb
mov
mov
aas
hlt
aad
push
sub
lods
sub
jle
pop
addr16
aas
movsl
loopne
adc
mov
push
mov
nop
inc
fildll
cmpsb
jmp
mov
inc
fwait
shll
xor
xchg
cmp
rolb
cld
xor
sbb
sub
push
mov
je
test
and
sti
inc
pop
and
add
cld
inc
enter
subl
daa
or
pop
mov
imul
std
or
xor
jg
test
push
sbb
mull
aam
jo
stos
dec
and
and
push
ficoms
cmp
subl
dec
aaa
incb
fildll
push
xor
cmp
cld
sub
jge
mov
jmp
pop
push
mov
shlb
push
mov
into
sbb
dec
xchg
push
popa
jbe
out
inc
out
insb
cwtl
and
add
add
std
inc
or
mov
in
cmpl
mov
xchg
out
pusha
cmp
lods
mov
nop
cld
aas
fsubrl
rclb
push
arpl
mov
push
mov
fisubrl
xor
lahf
xchg
cmp
mov
inc
les
or
mov
jno
mov
and
jne
cmpsb
mov
ficomps
adc
and
data16
push
imul
leave
fimuls
push
and
xlat
mov
lock
in
and
jg
and
popf
roll
cmp
and
loope
fisttps
push
fs
cmp
in
dec
cmp
adc
insl
push
fcom
sub
dec
jmp
fldl
inc
daa
jge
sub
mov
mov
shll
inc
aad
aam
jo
push
scas
shll
sti
std
pop
shll
push
in
dec
pop
ds
push
lret
lods
out
xor
mov
inc
or
dec
ja
rcrb
shl
sub
push
cli
cmp
lea
jp
stos
cmp
fmul
or
cs
int
mov
push
pop
xor
orb
lret
stos
push
push
xchg
dec
inc
jmp
dec
pop
jecxz
and
out
lret
mov
dec
movsb
addr16
mov
mov
cmp
movsb
cmp
mov
jbe
dec
ficoml
pop
fwait
addr16
sti
ljmp
pusha
add
and
mov
mov
xchg
push
xchg
mov
adc
aam
jb
cmc
icebp
sbb
je
int3
arpl
outsl
cmp
xor
ja
adc
mov
jnp
lret
lock
push
dec
negl
aam
lcall
movsl
sbb
sbb
ss
cmp
bound
or
or
test
mov
jl
xchg
pop
sub
fistps
ss
sub
in
sbb
and
imul
xor
pop
shl
xor
lret
dec
sar
mov
mov
ficomps
cmp
jno
pop
sub
pushf
out
xor
test
loope
mov
add
leave
mov
sbb
mov
cs
cmpsl
and
insb
cmp
lahf
or
jbe
js
daa
dec
adc
mov
insl
push
mov
push
leave
std
enter
mov
arpl
mov
jno
sbb
dec
in
sub
xchg
mov
and
cmpb
add
ss
add
scas
das
sbb
sti
lock
pop
sub
and
push
fs
mov
pop
call
sub
and
das
mov
sbb
jl
cmp
negl
test
pushf
mov
xchg
adc
push
or
fsubs
cmp
sti
fistps
sti
aam
fldl
es
add
jns
lds
in
mov
sbb
mov
insb
shl
xchg
jbe
ret
mov
sub
or
dec
imul
or
xor
inc
add
mov
dec
dec
or
test
js,pt
lods
cmp
ljmp
pop
fdivrp
ds
inc
pop
js
ss
adc
outsb
aas
out
out
mov
add
or
arpl
std
jb
xchg
sti
sbb
hlt
lods
mov
rcrb
lea
mov
dec
leave
outsl
out
fsubs
sahf
cltd
scas
inc
cli
cmp
push
sbb
jecxz
cmp
aaa
out
inc
mov
nop
pop
ss
mov
xchg
mov
dec
jns
xor
mov
scas
dec
dec
rclb
jp
ret
insb
mov
aaa
insb
cmp
sbb
lds
lods
loope
or
cwtl
cli
xor
repz
test
enter
add
inc
imul
in
sbb
sbb
push
rcl
dec
nop
lods
bound
scas
out
push
inc
insl
out
pop
notl
mov
in
pop
iret
jne
push
lods
push
push
outsb
movsb
mov
mov
lret
add
insb
sub
inc
ficomps
jp
xchg
ror
ds
je
daa
cld
sub
adc
xor
adc
int
push
leave
cmp
popf
add
cmp
sbb
test
ret
mov
push
jns
dec
adc
mov
xchg
sbb
dec
jno
xor
mov
loope
loope
adc
subl
fnstsw
repnz
jne
lea
imul
imul
std
dec
sub
div
adc
test
dec
insb
cmp
cmp
shrl
inc
out
pop
mov
fwait
enter
popf
push
pop
or
lret
sbb
or
sahf
pop
pop
inc
push
inc
xchg
out
mov
push
add
test
jl
jno
dec
out
mov
push
lcall
les
xlat
loope
or
sti
stos
push
inc
test
cmc
push
jg
adc
scas
mov
xchg
lods
jae
mov
out
mov
mov
inc
mov
out
outsb
xchg
xchg
and
mov
pop
cmpsb
xchg
mov
imul
and
cmpsb
dec
mov
jge
fldl
cs
or
add
loop
cmpsl
cmpsb
aad
fbld
ret
xor
idivl
in
nop
pusha
out
mov
xor
repz
xor
add
push
add
pop
aaa
adc
cs
sbb
fsubl
shll
mov
and
xchg
pop
aad
and
xchg
xchg
mov
mov
jmp
mov
push
and
add
ja
shlb
imull
cmp
sti
repz
jmp
inc
popf
fwait
int3
fmuls
push
cmp
jecxz
pop
mov
dec
lret
cmp
and
popa
hlt
mov
xor
stos
sub
add
lods
in
rcrl
rcll
dec
mov
xchg
xor
dec
dec
xchg
xchg
push
cmp
stos
std
cwtl
pusha
scas
mov
sar
daa
mov
call
pop
int3
in
idiv
xor
shrl
xchg
gs
fbld
in
scas
stos
xor
out
mov
sbb
fldenv
vcomiss
stos
sub
cli
cmc
or
jns
pop
sbb
das
jmp
or
leave
sbb
lea
and
sub
lock
ror
mov
insl
xor
xor
push
adc
shll
inc
xchg
dec
fldt
ret
cmp
icebp
cmp
dec
aam
mov
rcrl
xor
inc
hlt
inc
mov
sub
and
sub
cmp
or
add
outsb
gs
in
push
or
jnp
adc
push
push
cmp
push
dec
inc
hlt
add
in
incb
adc
and
fldcw
pushf
add
movsl
ds
cmp
data16
inc
xchg
xor
sahf
pop
scas
aam
cmp
mov
cltd
dec
lock
stos
shr
sbb
ja
addr16
fimuls
and
les
sbb
add
jno
cwtl
adc
adc
ret
jns
cmp
stos
rclb
cwtl
xchg
adc
in
mov
mov
sub
mov
mov
push
lret
lret
jp
stos
ror
addr16
lods
mov
stc
test
adc
dec
push
mov
hlt
in
int3
andl
inc
inc
xchg
je
cmc
mov
and
inc
push
jne
sarl
popa
pop
sub
jg
push
cmp
loopne
cmp
fcomps
xor
or
scas
hlt
jno
outsb
cmpsl
fwait
or
int3
rolb
cmp
xchg
test
leave
lret
out
insl
aaa
mov
inc
sbb
mov
insb
lock
and
test
loope
jg
push
das
pop
sbbb
or
add
lahf
call
lds
dec
addb
cmp
scas
pop
sar
jnp
add
push
call
sub
shll
add
lcall
and
in
mov
and
cld
das
fcomps
loope
out
stos
pop
ds
hlt
sub
lock
mov
add
push
int
sub
push
cmpsb
push
mov
push
test
inc
sbb
pusha
ret
pop
xchg
inc
popa
mov
sti
mov
sbb
aas
add
sub
cmp
popa
adc
or
push
fs
sbb
out
inc
out
dec
in
test
mov
jb
scas
inc
xor
inc
inc
fbstp
and
inc
clc
jge
pop
cltd
pop
xchg
mov
fidivs
mov
ljmp
xchg
sbb
adc
popa
mov
xchg
cmpsl
push
cltd
xchg
xchg
shr
sbb
pop
rcrb
xor
add
out
lock
not
sub
jbe
rorl
outsl
xlat
xchg
lods
aaa
or
jbe
cltd
rcrl
outsl
pop
and
scas
lods
loop
and
daa
roll
adc
pop
shlb
fsubs
es
push
mov
dec
or
pop
in
sar
dec
jnp
gs
mov
ss
adc
sub
outsl
adcb
mov
or
fstl
inc
or
lods
daa
bound
cs
aas
or
dec
adc
cmp
enter
pop
cmp
xor
pusha
xor
add
icebp
loop
lods
lcall
pop
dec
pop
sub
cmp
jmp
pop
push
nop
xchg
gs
in
test
sbb
mov
out
dec
rol
sbb
pop
xchg
fildll
xor
pop
in
aas
fldcw
enter
jo
dec
cmpsb
inc
cmp
jae
push
inc
movsl
mov
mov
inc
jg
sbb
cmp
inc
cmp
mov
aad
lahf
inc
mov
mov
lods
xchg
fbld
jae
inc
popf
sbb
dec
leave
dec
mov
nop
xchg
scas
insl
ret
sbb
sbb
cmp
out
jg
loope
inc
jecxz
xchg
pushf
adc
dec
sbb
jae
xchg
add
or
and
and
push
movsl
inc
adc
xchg
mov
inc
into
jl
ljmp
lea
mov
pop
jo
xchg
cmpsl
aam
mov
pop
fcoml
jae
in
cwtl
fistl
dec
pop
shr
dec
repnz
sbb
jns
ds
mov
push
mov
repnz
cmp
adc
test
cmc
jae
adc
daa
push
lret
test
lret
icebp
pop
mov
daa
andb
cli
adcl
scas
dec
adc
or
xchg
aaa
mov
stc
sbb
movsb
lock
or
mov
imul
pop
xchg
enter
scas
addb
dec
xchg
dec
sbb
mov
mov
loopne
cwtl
inc
pop
mov
mov
sub
pop
jbe
cmp
cmc
xchg
mov
jl
jge
xor
dec
adc
lods
call
xchg
fcoml
fwait
imul
and
iret
jmp
mov
aaa
mov
pop
cmp
popa
lods
gs
movb
js
shlb
loopne
adc
dec
fwait
push
into
and
mov
push
push
jmp
es
aas
jecxz
clc
in
and
shl
cmp
push
es
dec
sbb
add
jns
pop
sbb
adc
jp
bound
and
mov
loop
clc
dec
mov
into
mov
bound
movsb
iret
repz
and
outsl
dec
movl
mov
lock
inc
jo
aaa
in
cmp
mov
je
ds
lods
ja
fildll
js
je
ljmp
and
adc
popf
in
sahf
sbb
jg
fdivrp
ja
and
aam
jp
xor
xchg
fstpt
xchg
xor
lret
enter
dec
movsb
xchg
popf
sub
sahf
leave
mov
daa
daa
jnp
mov
fs
xchg
popa
outsl
cmp
std
pop
adc
ret
mov
insl
mov
push
push
cltd
push
movsl
pop
adc
mov
mov
popa
cs
fisubrs
jno
ja
test
jo
jnp
mov
jbe
ljmp
test
mov
pop
and
std
rcrb
outsl
pop
out
pop
popf
out
and
imul
pop
cmpsl
jne
insl
andb
andl
pop
insb
xor
cli
mov
dec
aas
aad
aad
push
and
push
repnz
pop
leave
cli
jecxz
mov
into
and
enter
or
push
in
ja
jae
inc
mov
sbb
mov
adc
mull
and
iret
sub
loopne
mov
test
mov
pop
ret
pusha
push
mov
test
imull
mov
xor
call
in
jmp
loope
fwait
sbb
pusha
or
loopne
fcoms
jmp
inc
bound
cmp
shll
outsl
sub
fdiv
dec
jo
cmpsl
push
test
iret
shll
or
push
jb
lea
repz
mov
sbb
sarb
cmp
cli
in
lcall
xor
xchg
pop
mov
mov
fidivs
jne
daa
cmp
push
sbb
loope
and
aaa
in
mov
dec
daa
sbb
into
mov
jo
ss
shrl
jno
and
fnstcw
jbe
shr
jnp
adc
mov
xchg
call
inc
insl
and
pop
pop
sub
mov
mov
mov
pop
cmp
mov
ljmp
test
clc
inc
or
pop
cmp
inc
lock
lea
sbb
push
test
cli
je
xchg
pop
and
into
rcl
push
fcompl
jnp
mov
dec
mov
jmp
pop
cmp
sub
icebp
sti
data16
popa
add
mov
icebp
jg
in
cmp
adc
push
adc
aad
inc
aad
inc
fcoml
sub
bnd
dec
fiaddl
sbb
mov
out
enter
dec
mulb
jecxz
test
or
divb
cmp
out
adc
mov
jl
or
bound
fisttpll
mov
xchg
and
int3
ljmp
jmp
jnp
sbbl
pop
push
inc
push
pop
dec
dec
es
mov
xchg
insl
mov
cmp
push
cmp
fisttpll
xchg
mov
insb
sub
adc
out
sti
call
mov
lret
jmp
adc
mov
in
push
xor
je,pn
lea
mov
inc
push
push
jecxz
xlat
leave
mov
das
pop
jg
xchg
call
imul
outsb
call
cmp
dec
push
mov
sbb
xchg
xor
stc
in
jecxz
imul
call
inc
add
add
gs
adc
mov
stos
xor
dec
je
testl
das
jo
mov
sbb
stos
gs
inc
pop
pushl
cld
sub
pusha
aas
and
nop
mov
jp
outsl
mov
pop
adc
jmp
fs
imul
adcb
sub
pop
popa
pop
jl
movsl
jmp
adc
xor
movsb
sbb
sub
shrb
pop
dec
mov
addr16
dec
sbb
outsb
sub
sub
cltd
jmp
push
sub
add
les
sbb
popa
roll
sub
dec
pushf
pop
mov
in
and
inc
jne
mov
jl
dec
push
stos
testl
xor
adc
and
push
jnp
sbb
stos
push
clc
jle
pop
divb
cmp
sbb
cmpb
mov
cmp
cmp
jo
lcall
daa
jne
xlat
push
inc
dec
dec
fisubs
out
sbb
movq
pop
ja
push
repz
addr16
fcmove
sub
out
int
je
xor
iret
adc
or
arpl
mov
or
out
sbb
adc
mov
cmp
outsl
xchg
xor
or
mov
subl
sub
xorl
popl
hlt
shrb
insb
mov
pop
test
mov
pop
add
cmpsl
fs
pop
gs
push
imul
mov
dec
jge
ja
and
and
mov
push
test
xor
nop
in
pop
call
mulb
imul
cmp
push
and
mov
inc
xchg
hlt
roll
inc
pushf
ret
mov
push
push
sub
repz
sahf
add
xor
inc
mov
jle
jp
mov
xor
pop
mov
cld
mov
insl
mov
and
xor
in
xchg
jae
je
xchg
fistl
fiadds
call
mov
add
xchg
mov
xor
aad
insb
adc
scas
xor
sahf
pop
dec
sub
std
inc
mov
add
add
or
rorl
imul
clc
or
aaa
jo
hlt
add
pop
loopne
test
cmp
pop
add
test
ret
into
pop
mov
pop
fwait
push
mov
xchg
mov
pop
cmp
rorb
push
push
jle
repnz
filds
and
push
xor
adc
cmp
sbb
push
adc
std
incb
inc
mov
mov
test
fs
shrb
orl
sub
dec
fldenv
push
lock
scas
jle
ret
repz
aas
mov
daa
sub
mov
in
jecxz
xchg
push
repz
popf
cld
push
adc
dec
shrl
and
lret
cmp
daa
out
pop
imull
mov
pop
mov
adc
rcll
lds
rcrb
in
xor
jle
add
cs
test
add
mov
loop
lock
cld
outsl
cmp
xchg
xchg
ret
adc
dec
and
jecxz
mov
stos
cmp
mov
jge
xchg
into
inc
arpl
mov
mov
repnz
fildll
cmp
pushf
pop
sub
stos
in
stc
adc
stos
repz
xor
pop
inc
mov
stos
lret
popa
loop
and
cli
mov
enter
mov
mov
push
outsb
shll
push
inc
xchg
xor
xor
icebp
mov
in
push
fnstcw
movsb
xchg
sbb
mov
jo
mov
sbb
mov
fidivl
insb
lahf
xor
rclb
das
mov
cmp
jnp
repz
fdivs
push
cli
sbb
push
cli
sub
out
pop
jne
xor
in
xor
int3
cltd
adcb
out
cmp
frstor
data16
iret
in
ret
mov
xchg
pop
arpl
xor
std
xor
cwtl
xchg
in
fucomp
mov
mov
cli
mov
sub
jae
sbb
mov
sub
dec
cmp
jnp
pop
jmp
xchg
and
jmp
insb
mov
lret
inc
lea
dec
scas
push
dec
call
fs
jecxz
stc
jge
repz
pcmpgtd
std
in
mov
sbb
fimull
mov
dec
add
out
aaa
jo
adc
jns
lret
xchg
aas
dec
add
fisttpll
hlt
and
insl
adc
mov
insl
bound
aaa
daa
sbb
std
adc
inc
int3
enter
movsb
orb
jmp
push
pop
xchg
sub
stos
jnp
sub
stos
cmp
mov
mov
out
and
inc
int
shlb
ja
sbbl
inc
push
add
rcr
shrb
cwtl
add
cmp
loope
addr16
jne
icebp
ja
and
mov
push
cld
cltd
mov
inc
cmpsb
pop
ds
cwtl
shrl
cmp
loop
dec
cmpsl
push
lods
push
cmpl
mov
mov
mov
outsl
out
mov
addl
xlat
add
dec
dec
aad
push
mov
clc
mov
fwait
push
push
ret
cmp
jb
jae
xchg
stos
push
ret
cltd
movsb
insb
add
mov
sbb
int
xor
adc
or
loopne
or
mulb
pop
push
test
push
test
mov
sbb
pop
iret
xlat
inc
add
daa
xchg
fscale
jle
add
sarb
fs
aam
or
int3
out
aad
shll
testl
mov
xchg
in
lods
movsl
mov
dec
push
fdivrp
dec
daa
lock
pop
orl
shlb
lds
stos
shlb
sbb
testl
pusha
pop
sub
test
into
mov
mov
outsb
pop
mov
adc
sahf
and
mov
dec
and
add
sub
push
push
scas
scas
in
mov
add
test
ja
xchg
leave
mov
lret
push
loope
stos
scas
lds
xchg
jmp
cmpsb
xor
mov
faddl
and
mov
and
push
lds
jp
ret
mov
xchg
xchg
cli
jg
jl
movsb
out
enter
fpatan
dec
addr16
fisttpll
pop
repz
add
add
ss
mov
cld
mov
jle
mov
add
aad
push
jmp
das
shll
pop
lds
push
adc
ljmp
xor
pop
test
arpl
xchg
xor
xlat
xchg
inc
insb
mov
aam
push
movsl
mov
xor
das
inc
push
pop
test
and
roll
sub
sbb
jb
ret
cltd
bound
aad
cmp
pop
sbb
cld
icebp
cmp
lahf
lods
push
pushf
adc
sub
std
mov
xchg
mov
pop
push
pop
or
mov
insb
sbbl
insl
sub
scas
mov
aas
adc
dec
xchg
repnz
xchg
aad
das
dec
jae
dec
lret
or
push
es
fucomip
inc
dec
pop
andb
and
pop
and
gs
std
insb
cmp
bound
lds
insb
pop
into
lcall
jl
inc
in
loopne
iret
dec
scas
mov
push
inc
push
mov
mov
pop
mov
mulb
lcall
lock
sbb
call
mov
cmp
and
inc
out
out
jl
mov
push
jo
test
cld
and
sbb
and
jb
insl
call
mov
ror
leave
jmp
cmp
fcoml
pop
inc
lock
notl
cmp
ret
dec
fdivp
jecxz
cmpsb
test
inc
pusha
ja
cwtl
mov
mov
fwait
push
jl
sub
mov
cs
xchg
pop
aas
out
xchg
push
push
inc
xor
insl
inc
jno
int3
jbe
add
pop
sbb
dec
ljmp
sbb
aas
int
xor
aad
push
xorl
lds
mov
mov
mov
inc
adc
into
loopne
pop
push
shll
mov
insb
mov
jmp
daa
push
xchg
jo
mov
repz
xor
xor
call
addr16
pop
stos
push
daa
cmpsb
loopne
xchg
out
loope
int
mov
and
dec
sub
pop
cmpsl
mov
scas
push
lret
jno
adc
lods
sub
fldt
push
mov
xchg
mov
adc
push
push
iret
and
vpavgw
mov
or
js
mov
insl
mov
mov
jle
leave
add
dec
lds
lret
test
or
in
test
orl
mov
inc
in
testb
mov
sti
lock
adc
test
jb
pop
ds
outsb
or
cmpb
pushf
xchg
mov
mov
push
jne
jp
daa
es
mov
lea
in
sbb
nop
adcl
mov
and
in
inc
xor
cmc
shll
fists
fsin
push
iret
int3
pop
int3
fwait
cltd
popf
or
or
dec
add
in
bound
gs
xchg
jo
rol
jp
std
test
insl
lea
inc
push
iret
push
mov
scas
int3
cwtl
lret
mov
arpl
jo
xor
cs
jbe
xor
adc
popa
cmp
xor
sub
movsl
jg
fwait
xchg
stos
cmc
cmp
mov
pop
inc
lds
xchg
xor
cmp
test
sahf
xchg
and
enter
hlt
mov
in
int
mov
xchg
clc
test
mov
mov
sahf
mov
sub
or
xchg
inc
mov
fidivl
outsl
loope
cmp
andl
fmuls
adc
dec
xorl
mov
add
sbb
dec
mull
mov
sub
test
dec
push
push
jae
shlb
xchg
mov
fisubrs
lcall
xchg
lcall
stos
testb
popf
xchg
out
mov
sti
cmovno
sbb
pop
adc
popa
xlat
iret
incb
ss
mov
aaa
add
xchg
hlt
stos
dec
loope
cmc
xor
dec
or
inc
mov
adc
sbb
mov
jle
push
or
inc
imul
ret
adc
pop
inc
mov
jb
sub
cwtl
into
adcl
fcoml
test
in
aad
adc
fwait
push
aas
xchg
xchg
cmp
push
mov
mov
scas
movsb
addb
clc
aaa
mov
jp
sbb
imul
lcall
scas
lods
add
inc
push
pop
clc
push
pop
call
add
rclb
mov
jmp
inc
dec
xchg
and
iret
push
rcrb
mov
pop
or
cltd
rorl
ljmp
pop
adc
mull
outsb
scas
scas
mov
stc
jne
add
sarb
add
les
mov
fucomip
mov
jmp
xor
xchg
sub
push
nop
popf
add
sub
movsl
lcall
inc
jmp
aad
and
pop
jbe
sbb
out
mov
ret
sub
mov
mov
shlb
rcrb
dec
popf
lret
insb
xor
add
xchg
xlat
jne
and
pop
fs
cld
mov
xchg
jle
popa
push
mov
repnz
xchg
jl
jbe
dec
insl
mov
imul
push
in
addr16
add
mov
fbstp
fwait
add
rolb
mov
xor
iret
and
pop
rorb
std
aas
sub
shlb
sub
sbb
idiv
or
dec
outsl
dec
xor
pop
aad
rcll
fstpt
popf
xchg
jge
stos
out
fldt
les
inc
mov
inc
lods
adc
add
lods
ja
or
add
xchg
jnp
or
mov
adc
adc
in
repnz
xor
mov
and
sbb
fidivrs
js
test
clc
or
jns
inc
mov
add
out
mov
jle
push
sub
outsb
test
xchg
jp
in
pop
mov
xor
fstl
inc
popf
lea
mov
xor
and
ss
mov
sub
dec
lret
sarb
aam
add
sbb
mov
or
adc
sub
mov
jne
js
enter
pop
mov
repz
push
push
rorb
gs
mov
mov
push
xchg
imul
enter
outsb
or
pop
stos
scas
insb
sub
daa
insb
cld
push
and
adc
mov
jnp
push
aam
jle
mov
and
je
movb
mov
xchg
fidivrl
xor
jno
mov
lds
or
mov
outsb
add
fistps
ret
adc
lods
inc
push
pop
fdivrs
pushf
into
mov
sbb
pop
inc
mov
ljmp
xlat
mov
xlat
lret
icebp
jle
mov
push
mov
in
mov
insb
adc
xchg
cmp
push
jl
ljmp
add
mov
cmpsl
push
addr16
fwait
sub
ret
fsubrs
push
pop
ret
pop
sub
jmp
jl
nop
or
popa
lahf
cmpsb
pop
xchg
mov
out
jne
push
sahf
pushf
sahf
dec
push
int
xchg
adc
ret
mov
in
cltd
je
loope
sub
int
push
or
ret
sti
das
into
cmpsl
jno
adc
push
jge
in
mov
mov
mov
lock
dec
aaa
xlat
inc
jo
jns
or
push
nop
push
adc
inc
xchg
orb
jl
adc
jno
cmpsb
jae
or
sbb
mov
or
mov
jmp
nop
xchg
int
push
sub
mov
lods
cli
inc
ljmp
cmp
xor
int3
js
lret
mov
iret
lret
push
push
mov
xchg
mov
in
sub
and
in
popa
or
mov
sub
loope
and
xor
scas
xchg
xor
cmp
pushf
push
inc
mov
lock
aad
cmp
mov
out
fcoms
shl
fists
and
inc
stos
iret
insl
pop
shlb
in
js
dec
cmp
sub
aam
adc
mov
fmuls
les
sbb
jns
aad
lret
xchg
or
push
jg
pop
insl
insl
pop
mov
popa
aaa
ud1
loope
jne
rclb
xor
fists
arpl
cld
mov
push
imul
bound
xorl
dec
mov
ja
sbb
or
in
out
add
fldenv
push
and
inc
aam
iret
pop
fmull
xchg
xchg
mov
mov
push
push
insb
fdiv
dec
arpl
sub
mov
jb
xlat
sbb
xchg
jns
js
adc
add
js
aad
adc
mov
sbb
dec
sbb
sar
add
aaa
pusha
inc
int
out
leave
mov
cwtl
mov
ss
dec
mov
int3
in
pusha
dec
ret
lcall
mov
ret
aam
aad
pop
cmpsl
mov
jmp
xor
cwtl
bound
xchg
inc
lods
out
jae
push
icebp
push
push
aaa
pop
js
out
sub
test
dec
incb
xor
pop
cmp
xchg
cs
pop
lock
pusha
rcrl
sti
mov
pushf
adc
shlb
aaa
mov
or
les
xorb
pop
inc
mov
add
bound
out
sub
add
mov
jne
add
adc
push
push
add
pop
repnz
cmp
push
push
mov
push
stos
dec
addr16
sbb
movsl
imul
mov
adcb
std
mov
pusha
fisubs
add
gs
outsl
insb
pop
jnp
mov
xchg
mov
ds
in
jne
das
xor
inc
jl
xlat
pushf
lea
gs
pop
lea
lahf
and
mov
jne
loopne
sub
jg
loop
rol
repz
test
aaa
popf
lcall
mov
xor
jle
shll
imul
movsb
mov
mov
mov
mov
adc
inc
xor
xchg
push
push
cmpsb
es
mov
dec
loope
adc
out
pop
cmp
icebp
out
cmp
jns
sbb
xchg
mov
sub
stos
loope
sti
cmp
adc
popf
xchg
push
les
outsl
loope
mov
cmp
js
xor
and
cs
jns
insl
repnz
movsl
jae
fmul
xchg
call
pop
jmp
sbb
out
cwtl
cmpsb
jge
lods
mov
sti
xorb
in
loop
sub
popf
lock
sahf
jmp
sub
push
lcall
aam
fldenv
dec
mov
jg
loopne
test
shlb
les
sub
and
sbb
loopne
out
mov
addr16
inc
sbb
sub
jbe
mov
fiadds
pop
pushf
mov
sbb
xor
xor
mov
cmp
hlt
push
mov
inc
lret
inc
adc
aas
pop
cmp
inc
inc
nop
xor
mov
sahf
scas
js
orb
adc
mov
fidivs
enter
cwtl
std
pop
fdivr
fiadds
iret
jbe
pop
pop
dec
cmpsb
mov
movb
mov
mov
mov
pop
cmp
mov
push
imul
sub
icebp
jge
pop
mov
mov
cmp
nop
ja
mov
xchg
jp
sbb
cmc
leave
mov
cmpl
cs
mov
pop
mov
cmp
sub
xchg
cmp
mov
cmpb
mov
insl
popf
int3
sub
popa
sarb
mov
cmpsb
fwait
in
adc
std
faddl
mov
mov
xlat
jmp
adc
cwtl
test
or
adc
in
jge
lret
mov
rcrl
push
add
es
ffree
xchg
mov
imulb
aaa
mov
mov
inc
aaa
adcb
inc
out
imul
dec
dec
adc
mov
sbb
bound
mov
or
add
loop
jbe
dec
jp
inc
pop
pushf
scas
sub
jbe
mov
imul
sbb
stc
daa
sub
mov
daa
loopne
subb
xchg
mov
sahf
in
mov
adc
imul
push
es
pushf
out
dec
fs
jp
lcall
repnz
imul
cmp
mov
repnz
in
xor
das
push
push
pushf
lahf
sub
cld
cld
out
aas
in
adcb
mov
add
ja
pop
xchg
mov
call
sar
inc
mov
jge
xchg
mov
movsl
cvtpi2ps
stos
xor
and
pop
in
inc
lds
cmpsl
fmull
fadd
cmpsl
adcl
enter
jg
pop
add
inc
repnz
es
ret
mov
mov
frstor
mov
lcall
adc
cld
push
out
mov
lods
jae
bound
int3
ret
and
mov
js
mov
xor
daa
pop
sbb
fs
mov
sub
into
cmp
hlt
fwait
push
imul
dec
fisttps
ret
jmp
or
repnz
jno
sub
or
fimull
test
cmp
sbb
pop
cltd
sbb
btr
mov
outsl
aaa
push
mov
sub
idivl
les
out
mov
push
fisttpl
in
hlt
mov
sub
in
push
aas
shrl
js
out
loopne
or
fsubs
mov
inc
outsb
int3
in
cwtl
xor
repnz
shlb
xchg
mov
insl
inc
mov
and
rcrl
repz
mov
jbe
push
lret
testl
xchg
in
adc
xchg
sub
xchg
insb
out
xor
inc
pop
mov
mov
xlat
jae
repz
mov
pop
pop
aas
inc
and
dec
mov
sbb
mov
inc
cmp
out
rorb
enter
sbb
mov
mov
repnz
cmp
insl
daa
mov
lods
pop
and
and
push
dec
push
xor
fadds
jecxz
xor
lods
mov
out
movsl
jmp
dec
ror
clc
push
push
js
add
pop
sub
lcall
popf
int3
jecxz
test
sbbl
mov
insl
inc
cmp
cwtl
hlt
jae
lret
int
xchg
mov
call
pop
jl
mov
inc
jmp
adc
xchg
adc
ja
pop
aam
adc
push
push
cltd
sahf
xor
xor
inc
fcoms
xlat
add
repz
pop
push
fidivl
jle
pop
jecxz
imul
xchg
lods
imul
xchg
mov
int3
pop
int3
out
pop
repnz
in
dec
and
or
pop
adc
or
jb
cmpsb
pop
cmp
xor
aas
inc
fmulp
into
jbe
push
mov
push
mov
push
int
sarl
enter
nop
jmp
dec
stos
mov
xchg
lea
cmc
iret
fdivrl
sbb
mov
scas
ds
push
das
ret
dec
push
hlt
xor
mov
sub
dec
and
sbb
mov
lret
pop
cmp
xchg
mov
xchg
nop
int
sbb
or
in
inc
pop
mov
jle
in
jle
xlat
push
fsubs
dec
in
in
std
cltd
pop
scas
std
push
push
xor
out
ds
inc
ret
xchg
std
testl
add
xchg
adc
sbb
jle
sbb
mov
xor
cmpsl
nop
cmp
sahf
int3
or
xorb
xchg
insl
repz
das
push
ja
outsb
or
xor
fwait
mov
test
jmp
sti
pop
or
rcrb
idivl
push
out
jmp
or
xchg
inc
scas
mov
orl
enter
or
mov
mov
pop
add
pop
dec
aam
dec
mov
cmpsb
fldenv
popf
and
aas
pop
int
repnz
fstpt
dec
das
fucom
cmp
sbb
pop
fldt
inc
mov
stos
stc
fimull
shlb
pop
shlb
shll
sahf
xchg
test
test
aam
lahf
sti
test
shrb
or
sbb
loopew
jge
outsb
sbb
sahf
stos
cli
xchg
dec
ja
hlt
out
push
add
in
jge
pop
mov
fidivl
xchg
cwtl
xchg
outsb
adc
inc
cltd
enter
insl
cbtw
stc
lods
mov
out
xor
mov
insb
xor
mov
mov
sub
mov
clc
leave
imul
sbb
mov
adc
and
stc
sbb
jle
jg
and
cmp
sbb
cmp
fnstsw
mov
fmull
dec
lahf
test
fidivl
xchg
mov
jne
pop
int
cld
in
adc
inc
das
out
les
adc
loope
cmp
inc
xor
lahf
daa
fsubrs
mov
inc
mov
test
mov
jl
aam
xchg
pop
es
cmp
movsl
push
dec
xor
xchg
lock
rcrl
pop
leave
movsb
xor
sbb
mov
scas
dec
mov
enter
adc
adc
cmp
cmp
gs
add
inc
mov
mov
mov
push
popf
test
pop
or
xchg
gs
icebp
mov
comiss
mov
adc
or
scas
dec
pop
divl
ja
lock
es
in
lods
gs
mov
test
aad
or
fcoms
pop
mov
jge
and
popf
ds
add
ret
ja
je
fmuls
rcl
adc
jl
mov
lods
xlat
pop
cltd
mov
loop
fwait
xor
divb
out
js
dec
leave
pop
xchg
push
std
roll
pop
add
xchg
clc
jl
sbb
or
sbb
data16
stos
test
add
and
sub
in
nop
cmpsb
push
addr16
lcall
mov
cmp
or
imul
rorl
in
jmp
mov
sahf
dec
popa
pop
sti
nop
push
sub
repnz
mov
fistl
push
loopne
jecxz
outsl
lea
jb
inc
outsb
sahf
lds
repnz
lret
stos
sbb
fs
out
mov
mov
push
std
fwait
rcl
pop
stos
mov
clc
mov
je
ljmp
pop
call
cmp
mov
ds
imull
repz
cli
sub
lock
in
or
pop
jg
push
jo
popf
in
xor
jae
add
sub
cmp
adc
test
adc
adc
sbb
add
in
fs
out
hlt
push
ret
stc
lahf
je
mov
mov
sub
sub
shlb
sti
orl
push
jno
int3
in
shl
sbb
rolb
mov
repnz
dec
sbb
adc
je
inc
mov
add
pop
sub
ljmp
inc
jge
rorb
cmp
xor
pop
sub
test
in
push
add
xor
leavew
into
pusha
and
out
test
or
in
xchg
inc
sub
mov
dec
dec
pop
sar
lar
push
cwtl
push
scas
sbb
test
mov
jg
mov
movsb
lea
adc
sahf
push
les
inc
fsubp
clc
test
js,pt
mov
pop
jnp
xchg
sbb
ss
in
xchg
mov
cmpsb
mov
insb
cld
and
cwtl
dec
add
mov
adc
fistps
mov
mov
cmpsb
and
cli
dec
ret
cmp
ljmp
xor
test
in
mov
andl
xor
ss
lds
jae
fdivrs
decl
adc
xor
cmpsb
xchg
mov
cs
dec
pop
into
pushf
loopne
das
mulb
addr16
push
ljmp
jae
stc
mov
push
shlb
arpl
sbb
in
sub
loopne
sbb
pop
dec
push
in
scas
ja
aaa
rcll
sbb
mov
mov
jle
fsubs
pop
pop
push
rcrb
push
call
cmpsb
cmp
arpl
insb
sub
push
call
sbb
xor
add
pop
cmp
rcrb
pushf
add
adc
leave
mov
xor
bound
push
inc
fsts
push
xchg
mov
shld
test
adcb
arpl
push
fs
ret
dec
lock
rcr
mov
call
loop
ret
pop
pop
hlt
test
in
push
sub
aas
fwait
cmp
fsts
sub
cld
imul
sub
outsb
ljmp
push
push
stc
aad
jecxz
cs
sub
sbb
jecxz
pop
iret
or
xor
cmp
pop
in
dec
inc
fdivs
mov
and
rcll
cmp
pop
div
mov
pop
int
sbb
mov
pop
fsubs
mov
jmp
cmc
push
shrb
or
jmp
xchg
roll
pop
lret
adc
into
aas
clc
push
dec
das
inc
jge
jp
pusha
push
out
sahf
pop
and
lahf
pop
xchg
in
cmp
sti
cwtl
cwtl
into
adc
push
repnz
scas
adc
aad
and
inc
push
and
sahf
ror
push
into
cwtl
lock
dec
xchg
popf
outsb
insl
pop
add
jb
xor
mov
lret
in
insb
and
adc
and
inc
jb
mov
scas
xor
push
jmp
lea
mov
mov
and
int
mov
add
js
cmp
sbb
cli
cmp
mov
mov
repnz
fcompl
mov
test
insl
iret
ja
pusha
mov
push
jns
das
jb
sub
jae
aaa
xchg
les
lds
test
push
xchg
sahf
xchg
stos
iret
dec
ficoml
adc
pop
testb
outsl
sti
sub
jno
sti
or
popf
stos
ljmp
sub
lock
lods
mov
fcmovne
arpl
mov
testl
aad
das
mov
sbb
push
leave
lock
mov
std
lahf
mov
jne
lret
out
lds
jae
daa
xchg
movsl
xchg
xor
insb
lock
outsl
sahf
addr16
inc
inc
xchg
loope
imul
out
mov
fs
inc
outsl
js
int3
adc
sub
cmp
sahf
subb
test
mov
loopne
insl
les
out
mov
int
lock
inc
push
xchg
mov
jmp
push
mov
stos
lock
sti
sub
std
leave
jl
repnz
imul
xchg
mov
shrl
ljmp
add
dec
stc
addl
xchg
pop
cwtl
push
jge
test
int3
cmpsl
push
jns
jno
shrb
jmp
rcrb
cmp
data16
mov
mov
in
dec
data16
inc
gs
mov
hlt
jae
pop
mov
cmpsl
ror
in
cmp
inc
xchg
jle
mov
dec
imul
fisubs
or
mov
sub
add
add
mov
lcall
add
or
sahf
cmp
push
and
jb
pop
or
sbb
cmpsb
scas
xor
cmp
lahf
std
test
xor
popf
lea
in
lcall
or
jbe
sbb
xor
lds
jns
ja
inc
out
test
in
cwtl
daa
jle
cli
ja
aad
imul
pop
mov
mov
outsb
cltd
repnz
xor
pop
shlb
vmread
scas
adc
pop
cmp
push
push
call
mov
inc
not
xchg
sub
lds
sbb
add
js
sbb
movsl
cli
or
ret
cmp
pop
xchg
sti
push
mov
test
cmc
decb
jbe
mov
ret
sahf
out
pop
push
xorl
jl
mov
in
insb
loop
push
mov
or
shrb
and
les
ds
inc
rcrb
xchg
push
jl
or
pop
icebp
shl
fdivrl
es
in
dec
and
dec
pop
cld
stos
sbb
push
mov
mov
fildll
mov
push
imul
data16
inc
inc
and
jno
push
xchg
lods
mov
pop
cmp
or
mov
mov
fadd
outsb
add
inc
mov
pop
push
mov
cld
cmp
repz
out
xchg
sub
imul
data16
fidivl
aas
pop
xchg
mov
pusha
jo
dec
shlb
test
hlt
mov
movsb
push
jno
jl
push
mov
dec
cmp
pop
push
mov
jno
mov
shlb
inc
push
adc
addl
pusha
mov
ja
cltd
mov
clc
out
dec
or
adcb
adc
fmuls
stos
enter
js
cmp
jb
leave
jecxz
push
adc
push
iret
pop
add
out
inc
imul
fstpl
adc
leave
sahf
hlt
clc
clc
out
cwtl
jecxz
stos
push
jnp
add
adc
xchg
add
dec
adc
lods
xchg
mov
stos
outsl
fstpt
adcb
xchg
mov
xchg
sahf
mov
aam
xchg
test
movsl
jmp
cld
movsl
imul
add
loope
rcrb
popf
add
int3
ret
add
ret
pop
cmp
aad
pop
push
sub
mov
and
mov
outsb
daa
in
popa
mov
test
mov
cmc
aam
sub
addr16
int
jo
and
cmp
cwtl
sub
mov
or
inc
mov
stos
push
or
nop
inc
add
ror
js
cmpsl
pusha
icebp
pop
or
push
iret
cmp
mov
je
test
pusha
mov
dec
pushf
lea
push
jb
jno
push
mov
xchg
in
xchg
sbb
mov
imul
loope
insl
inc
push
push
add
inc
ljmp
std
add
stos
xor
mov
xchg
fnstcw
mov
mov
mov
or
adc
mov
fsubs
xchg
fadds
mov
enter
push
insl
mov
repz
repz
call
test
je
jne
inc
and
in
jp
sbb
or
leave
mov
mov
testl
mov
lea
adc
mov
add
push
popa
sarl
pop
je
incl
pop
mov
aad
scas
mov
fiadds
test
mov
inc
mov
or
les
inc
adc
adc
sub
es
push
xchg
mov
into
add
ja
das
movsb
push
or
jecxz
jle
mov
filds
std
mov
mov
lcall
outsl
fs
xchg
mov
aas
insb
xchg
mov
ss
outsb
nop
lret
or
stos
inc
or
jae
adc
scas
pushf
or
imul
jl
xchg
xchg
mov
ds
inc
andl
enter
in
xchg
and
push
inc
jl
push
mov
pop
push
pusha
and
js
ret
outsb
jae
sbb
mov
adc
adc
lods
adc
pop
stos
mov
test
push
push
test
test
push
add
push
xor
mov
test
cmp
fistps
adcl
pop
adc
iret
loop
in
test
lods
push
sub
inc
sub
jmp
push
jns
cmp
das
sbb
es
dec
hlt
xchg
push
pop
lods
mov
aaa
push
aaa
adcl
and
mov
sub
or
inc
sbb
subb
aas
adc
pop
xchg
push
fisubs
push
inc
mov
mov
mov
shl
pop
fldcw
xor
inc
xchg
jns
movsb
mov
gs
test
shlw
mov
fisubrs
pusha
mov
pop
mov
dec
lock
cs
dec
pmaxub
push
push
sub
imul
fstl
js
push
dec
pop
ljmp
xchg
xchg
xor
inc
cwtl
sub
mov
nop
xchg
add
in
sub
mov
ficoms
popf
jno
pop
or
bound
out
mov
xchg
adc
xor
int3
outsb
xor
jbe
andl
push
cmpsl
cmp
pop
add
push
cwtl
jnp
std
xchg
daa
jne
inc
divb
pop
xor
fldenv
dec
ljmp
mov
and
cmp
lds
cmpsb
jmp
bound
inc
and
xor
sub
test
sub
pop
lods
cmpl
add
outsb
inc
iret
es
cld
dec
inc
add
sub
sub
jns
inc
xor
cltd
jg
sbb
mov
loopne
iret
ss
dec
or
int
pushf
scas
lea
ficomps
xchg
inc
clc
shll
cmp
push
xor
mov
lcall
mov
sahf
or
dec
dec
imul
std
pop
lcall
push
cmc
inc
xchg
gs
imul
hlt
xor
xor
dec
push
repnz
aam
push
push
std
pop
outsl
or
subl
jne
jbe
xor
mov
imul
lods
pop
popa
and
icebp
adcb
lods
mov
clc
pop
clc
and
mov
insb
lock
addr16
imull
icebp
jnp
pop
mov
cli
mov
enter
fwait
repnz
sbb
fmull
in
and
movsb
xchg
add
imul
pop
jo
mov
loopne
mov
push
addl
roll
je
xchg
es
movsb
sbb
jecxz
cld
pusha
andb
xchg
push
outsb
sarl
jno
sub
jno
in
cmp
xor
aam
pop
xchg
fldcw
push
inc
clc
adc
cld
adc
inc
addl
push
sub
jns
xchg
divb
cltd
inc
xchg
add
add
imul
sbb
orb
jge
push
loope
aas
xchg
lret
adc
jmp
dec
jp
rcll
sbb
push
jb
and
add
call
subl
es
sti
and
mov
xchg
push
hlt
fstps
rclb
in
mov
adc
loop
jge
mov
movsl
and
mov
push
js
mov
xor
pop
cmp
mov
sub
ret
sub
inc
inc
pop
pushf
xchg
jmp
xor
sbb
mov
xchg
inc
ds
sub
mov
lds
cmc
sub
insl
push
out
inc
into
dec
adc
add
or
movsl
sub
xchg
dec
jp
jl
push
nop
js
sbb
clc
push
and
push
lods
cmpsb
lea
test
sbb
cmc
xchg
repnz
arpl
outsl
shlb
repz
pop
sti
les
in
mov
sbb
xor
pop
xchg
adc
test
or
int
loopne
shr
icebp
inc
push
imul
cld
pop
or
push
add
cltd
enter
pop
aad
push
jg
std
fmull
fldenv
push
or
movsb
insl
sub
add
adc
sub
lret
shll
pop
sub
push
sbb
mov
or
add
out
dec
xchg
nop
sbb
pop
dec
add
xchg
outsl
push
mov
inc
pop
cmpsl
xorl
or
fsts
inc
xchg
pop
flds
xchg
adc
movsl
xchg
push
fsubrs
jno
addr16
cmp
into
cmp
xchg
lea
popf
inc
inc
int
call
adc
add
cmpsb
push
xchg
arpl
push
adc
jne
stos
sub
fsubrl
cli
cld
decb
or
add
push
shr
fistps
dec
sub
mov
es
cmc
add
icebp
push
mov
lahf
aam
pop
add
xchg
xchg
jle
and
mov
mov
pop
dec
cmpsb
sarb
pop
inc
ja
or
sbb
jo
adc
fdivs
cmp
sub
popa
xor
cltd
adc
dec
mov
addr16
inc
sti
pop
cmpsb
mov
ficompl
xchg
jno
dec
dec
jle
in
cmp
popa
mov
data16
jg
cmp
fcompl
mov
jns
and
inc
mov
inc
mov
dec
or
mov
pop
std
stos
inc
addr16
jge
mov
iret
jp
sti
mov
jno
sub
arpl
pop
mov
shr
xchg
push
push
add
in
push
das
sub
cmp
imul
adc
daa
outsl
inc
xor
dec
stos
rclb
out
outsl
test
mov
mov
push
mov
test
xchg
testb
cld
mov
sub
movsb
push
lea
repnz
in
push
out
je
jge
adc
inc
or
scas
aaa
mov
cmpsl
jge
jg
addb
stos
arpl
jl
xchg
int3
lret
fcom
fs
sti
addr16
cmpsb
jns
loopne
mov
push
insl
dec
aam
mov
pusha
mov
xchg
jp
jmp
mov
xchg
mov
xor
loope
inc
and
pop
push
pop
rcll
sub
scas
pop
push
insl
jl
mov
in
or
jb
push
insb
pop
js
lods
dec
ljmp
add
mov
dec
aaa
or
hlt
fmuls
mov
or
sbb
frstor
jge
and
lea
and
jmp
pop
lds
push
sbb
hlt
or
sub
pop
mov
xchg
mov
or
fsub
outsl
clc
sub
aad
sbb
fbstp
dec
mov
ja
and
sub
data16
jae
jecxz
inc
jge
inc
fwait
loop
sbbb
loop
setae
enter
mov
or
test
cltd
xchg
jle
das
pushf
jle
in
mov
xor
xchg
lahf
lret
rcr
sar
popa
pop
faddl
lret
data16
ds
adc
inc
enter
mov
push
push
cmp
stc
ret
mov
dec
addr16
pop
push
pop
mov
lcall
cli
jmp
pop
adc
ja
test
mov
pop
jg
sub
dec
dec
mov
mov
cmp
out
sub
insl
js
das
cld
pop
scas
inc
xchg
or
xchg
mov
mov
dec
add
cmpsl
mov
aad
mov
movsb
stos
nop
ja
mov
fildll
aas
in
jecxz
lea
xabort
lea
push
lcall
jae
dec
mov
sbb
leave
nop
adc
lret
ror
or
lahf
sub
mov
movsl
push
mov
dec
aam
lret
cs
int3
pop
imul
push
push
aas
outsb
mov
adc
fmull
sub
sub
cs
mov
xchg
gs
or
jg
pop
ret
push
out
sub
aas
icebp
arpl
pop
hlt
ret
repnz
jmp
push
jbe
mov
xor
aam
and
mov
mov
push
mov
and
rolb
icebp
test
mov
ja
push
cwtl
pop
imul
sub
jae
addb
jg
nop
pop
xlat
inc
imul
sub
xor
lock
push
mov
cli
cmpsb
sahf
lcall
sbb
out
add
loop
pushf
test
or
out
decb
mov
call
das
push
mov
js
sahf
ret
xchg
xor
int
test
orb
decl
lea
push
in
mov
sbbb
jo
xchg
lods
cs
mov
pop
into
into
ret
cs
xchg
test
add
push
inc
mov
sahf
fisttps
scas
add
adc
incl
popa
scas
jbe
and
scas
in
or
loope
jmp
push
nop
mov
and
cmpsl
fistps
inc
or
add
jno
push
mov
cmpsl
jmp
cmp
sub
mov
pop
push
dec
rcr
mov
call
jno
mull
xchg
push
arpl
jbe
add
pop
jl
jge
mov
xchg
fdivl
ljmp
xorl
imul
dec
xor
stc
xor
jg
clc
sub
inc
repz
lock
push
popf
lret
pop
jmp
fs
jne
pop
or
loop
and
dec
dec
fiadds
lret
sub
mov
fdiv
mov
xchg
sbb
cmp
testl
mov
xor
in
insb
dec
sub
push
adc
push
add
push
in
dec
call
push
inc
shr
add
inc
inc
push
and
mov
sbb
sbb
mov
jae
mov
sbb
dec
push
sbb
mov
cmp
pop
mov
pushf
pusha
aaa
sahf
rorb
add
test
push
dec
scas
xor
inc
lret
jne
pop
lret
push
dec
mov
lods
cmp
push
adc
push
daa
cmpsl
lcall
loopne
lds
xchg
mov
xor
pushf
loope
das
and
das
ja
mov
cmp
xchg
inc
test
icebp
lret
push
mov
sub
adc
cld
repz
pop
ds
aaa
push
mov
ret
pop
dec
push
call
ds
dec
sub
adc
sub
into
cmc
inc
xor
ret
outsl
imul
cli
shlb
in
jmp
mov
out
mov
or
fdivl
sbb
mov
jb
cmpsb
or
std
ficompl
sbb
sbb
ss
sbb
inc
sbb
pop
decl
cmc
mov
out
pop
and
scas
inc
sub
or
jecxz
insl
or
cmpsb
jge
shll
sbb
mov
out
push
rcl
dec
push
fs
pop
or
inc
in
rorb
ror
cmc
pop
lcall
iret
inc
lcall
mov
mov
addb
movb
pop
call
jmp
push
mov
pop
ja
stos
imul
dec
pop
jne
or
xor
cs
lods
lahf
repnz
ss
mov
aad
fistpll
imul
xchg
pop
jp
mov
test
addl
loop
int
mov
add
xor
fcoml
pusha
inc
pop
lock
scas
push
aad
lret
aam
push
icebp
ret
insb
mov
jecxz
mov
push
mov
push
or
lds
push
mov
lcall
and
ret
mov
push
insb
rcl
call
or
daa
mov
lea
repz
call
inc
add
add
fsts
or
aas
adc
hlt
add
daa
inc
dec
pushf
cmp
jmp
xor
adc
jmp
jl
push
mov
xchg
inc
push
test
test
shr
push
xchg
cmp
hlt
push
mov
pop
lock
out
dec
or
dec
inc
adc
fcomps
sahf
inc
push
or
and
mov
mov
mov
mov
adc
arpl
ss
dec
in
ret
stc
dec
dec
cld
sbb
cmc
xchg
out
cltd
push
xchg
cmp
cmp
pop
incb
cmpsl
dec
lret
roll
push
fwait
mov
popa
je
push
mov
addr16
ja
icebp
lea
xchg
andb
pop
mov
mov
push
jmp
loopne
imulb
clc
and
hlt
cmp
sbb
add
lret
lods
mov
stos
ds
mov
mov
pop
scas
pop
sbb
push
mov
ja
out
mov
jp
out
fildll
mov
sbb
push
enter
ja
loop
insl
push
repnz
pop
xchg
inc
aam
add
dec
xchg
xchg
es
mov
dec
dec
mov
out
icebp
mov
mov
xor
sahf
aam
out
xchg
push
loop
sti
imul
pop
out
fmull
lret
ss
pop
push
add
movsl
push
mov
outsl
push
fcmove
or
xchg
mov
ds
dec
scas
sub
and
and
std
movsl
xlat
xlat
xchg
mov
std
stos
mov
sbb
pusha
jbe
fistl
dec
mov
xchg
cmp
insb
cltd
lods
rcll
fwait
sarl
aas
add
daa
aad
mov
inc
mov
shl
push
cwtl
inc
mov
mov
fstp
sbb
cmp
lds
or
stos
or
xchg
lret
out
sbb
mov
aad
repz
int3
repz
push
dec
mov
push
cmc
in
mov
gs
mov
adc
xchg
iret
mov
jmp
fnstsw
mov
je
mov
fildll
les
xchg
adc
adc
mov
dec
pop
push
mov
incb
lahf
cltd
ret
jo
mov
adc
popa
xchg
scas
xlat
ja
dec
push
lods
dec
mov
push
leave
ss
jmp
lods
clc
loop
test
iret
mov
inc
addb
jne
das
jmp
imul
or
push
shr
aas
mov
mov
cmpsl
mov
mov
arpl
cli
xor
aaa
loopne
sub
xchg
sbb
stos
mov
sub
mov
notb
dec
dec
shrb
fbstp
aas
push
in
insb
xor
xchg
rcrl
ret
inc
adc
adc
shlb
and
imul
ret
mov
in
in
filds
inc
cli
pop
cmc
pop
lds
icebp
jmp
mov
add
mov
adc
mov
and
mov
js
popf
cmp
notl
inc
repnz
aad
xor
jbe,pn
lds
jae
adc
sahf
sbb
shll
adc
mov
add
mov
sar
cmpsb
mov
push
pop
pop
xchg
adc
and
lcall
push
cli
jmp
rcrl
xchg
stos
notb
cmp
loop
out
inc
sub
out
jle
les
leave
loope
fwait
in
lret
cmp
cli
movsb
jl
cmpsl
jl
xchg
mov
mov
cmp
sbb
sti
cmp
shll
push
loop
pop
dec
fistpll
dec
pop
push
or
ljmp
cmp
dec
add
icebp
mov
cmpsl
mov
movsl
insb
movsb
int3
add
dec
es
push
sbb
mov
sbb
mov
or
push
sarl
inc
in
inc
out
out
aas
sub
aas
pop
mov
or
cld
test
sbb
mov
pop
movsb
cwtl
dec
inc
push
xchg
mov
dec
cmp
out
into
and
scas
and
cli
push
or
push
jl
cs
xorb
add
inc
aas
mov
fucomi
push
out
jecxz
es
push
movsb
mov
int
push
test
xlat
and
popa
xchg
shl
cmp
scas
hlt
xchg
scas
gs
xor
shll
jnp
adc
inc
add
xchg
andb
sbb
jl
xchg
xchg
dec
dec
nop
xor
pop
jbe
push
sub
mov
fcoml
aas
fadd
adc
dec
lds
push
push
or
mov
dec
xor
fcompl
call
out
mov
mov
pushf
pop
popl
sbb
fsubrl
xchg
mov
mov
xchg
into
pop
xlat
divl
je
sbb
lods
mov
enter
pop
mov
out
and
xor
xorb
mov
jmp
sbb
in
pusha
adcl
pop
push
push
mov
inc
test
push
cmp
jbe
xchg
jb
shll
dec
jne
inc
into
mov
test
stc
jo
mov
inc
pop
inc
cmpsl
cmp
jmp
inc
sub
stos
test
and
es
call
notb
push
mov
dec
lea
push
bound
dec
loop
sbb
stos
cmpsb
cmp
ja
inc
fimull
mov
outsb
nop
popf
call
das
pop
leave
cs
cmc
inc
aad
test
lret
xchg
pop
test
add
arpl
mov
xor
push
fs
lods
lahf
xchg
addr16
iret
lock
neg
cmp
jmp
inc
and
cmp
inc
ss
add
inc
add
push
push
cs
in
test
mov
dec
jecxz
or
loopne
inc
or
cmp
neg
std
out
lock
mov
lea
icebp
outsl
sbb
icebp
xor
xor
push
adc
lahf
mov
cmc
jge
push
pop
add
pop
mov
jo
sbb
sub
jns
sub
sbb
lods
jle
mov
jcxz
aam
jno
xchg
adc
imul
cmp
in
rcll
movsl
sbb
add
jae
fcoms
cmp
outsb
test
mov
movb
clc
jnp
jl
int3
cmp
jnp
xchg
dec
add
xor
pushf
andb
test
je
imul
mov
mov
push
xchg
push
je
pop
xor
xor
cmc
sbb
rorl
or
pop
shll
out
pop
dec
mov
xchg
enter
pop
and
sti
test
push
jb
shrl
mov
pushf
sbbb
jo
pop
pusha
aam
pop
jae
rcrb
xor
test
jmp
inc
fisttps
into
lods
push
jle
insl
mov
les
xchg
adc
sbb
xlat
jle
loope
jp
sbb
xlat
sbb
dec
mov
out
es
mov
jnp
movsb
jo
dec
xor
pop
cmpsb
jo
jno
lods
jo
fimuls
mov
out
and
sbb
gs
and
and
add
sbb
cmp
pop
je
bound
in
outsl
pop
push
lret
idivb
mov
lahf
xchg
cwtl
sbb
jmp
adc
shrb
push
cmp
lea
jp
push
enter
adcl
loop
push
xrelease
jle
adc
cli
mov
dec
sahf
ret
fisttpl
push
mov
mov
je
imul
rorl
fsubrl
mov
fwait
arpl
js
lods
insb
mov
jns
cwtl
push
movsb
enter
pop
xor
jae
lahf
or
or
loope
call
sbb
push
cli
outsb
and
mov
fs
jg
sbbb
leave
ret
inc
xchg
add
and
outsb
cmc
arpl
inc
mov
xchg
fnstsw
and
cmp
jg
dec
jbe
sub
insl
jge
gs
cmp
push
test
movsl
shrl
inc
in
mov
cmp
push
mov
outsb
mov
scas
inc
popf
clc
jne
js
imul
test
cmpsb
push
adc
test
add
sub
fidivrs
pop
mov
sub
push
bound
xor
loope
repnz
push
sbb
cltd
xchg
and
leave
dec
sbb
scas
out
mov
push
mov
push
aam
jg
pusha
into
jae
sbb
sub
jle
mull
loop
sbb
int
ljmp
stos
scas
mov
ret
xor
jae
adc
aad
cltd
jle
je
jnp
ret
mov
movsb
xchg
aas
insb
and
aam
inc
mov
fadd
rep
xor
out
cli
cmpsb
aad
dec
push
xorl
inc
jns
pop
pop
aas
fwait
sarl
test
shll
mov
insl
cmp
pop
ss
cmp
or
mov
cmp
inc
sbb
cmp
je
mov
inc
int3
out
cltd
sub
or
sahf
aad
popf
arpl
xor
dec
pop
dec
xor
pusha
or
xchg
test
cmc
loope
add
add
dec
data16
loop
dec
mov
push
repz
wrmsr
ss
mov
mov
popf
ds
add
ret
cmpsb
mov
int3
and
and
mov
lds
lock
into
stos
cmp
add
and
and
inc
pop
rcrl
mov
inc
cmp
jnp
cld
mul
xchg
nop
adc
dec
sub
add
adc
mov
mov
xchg
pop
or
sahf
bound
fs
aaa
ret
cwtl
into
dec
dec
out
bound
jbe
xchg
jno
pop
inc
sub
sub
daa
cmpsl
push
testb
iret
das
xchg
sti
fisttpl
xor
inc
pop
sub
jmp
fld
pop
xchg
and
xor
xchg
inc
cld
data16
inc
mov
mov
cltd
mov
dec
xchg
es
stos
sbb
repz
and
out
test
jl
gs
xor
mov
lahf
inc
pop
cld
and
add
pop
jg
je
stc
mov
or
push
fnstenv
into
cwtl
lahf
sbb
adc
or
out
arpl
push
xchg
add
adc
cmp
cwtl
cmp
mov
shl
jns
movsl
pusha
mov
or
mov
scas
mov
push
cli
xchg
jge
ss
dec
fs
cwtl
popf
je
repnz
jb
in
push
fisttpl
pop
cmp
ret
out
arpl
in
lahf
mov
cmp
or
fwait
sub
inc
je
xchg
dec
cs
push
outsb
fst
adc
repnz
mov
push
data16
cmc
push
xor
addr16
inc
xchg
lcall
inc
fstl
adc
jno
mov
or
inc
flds
add
cmp
test
mov
nop
jb
das
adcl
or
adc
dec
xor
push
push
pop
aam
movb
ja
mov
inc
sbb
push
add
insb
scas
rolb
jo
out
int3
mov
hlt
pop
pcmpeqb
cs
jle
cmpl
into
rol
loop
pop
out
push
sub
lock
dec
mov
mov
pop
xchg
ret
aam
insl
sbb
cmp
lahf
in
mov
xchg
xchg
adc
mov
inc
pop
jecxz
xor
sti
ljmp
mov
inc
test
lods
xchg
cmp
cmpsb
scas
outsb
sub
inc
mov
aam
mulps
xor
mov
pop
in
jno
add
insl
xor
xchg
mov
bound
fcmovb
dec
and
push
bound
xor
out
test
xchg
cmp
cltd
jge
cmp
push
pop
or
mov
fnstsw
mov
test
adcb
inc
push
mov
xor
addr16
mov
mov
xchg
pop
inc
push
addr16
jl
call
fnstcw
dec
inc
aaa
ss
mov
push
or
dec
jno
sarl
sbb
lock
jbe
push
jge
dec
test
xchg
mov
xor
clc
insb
clc
pop
mov
inc
cmp
push
fildll
pop
push
fadd
adc
xchg
xor
add
aam
addr16
xchg
cmpsl
lock
pop
inc
aas
cmpsb
clc
and
outsl
xlat
pop
pop
or
push
xchg
or
mov
mov
sahf
arpl
in
imul
pop
xchg
sub
out
mov
inc
cwtl
cs
pushf
pop
jns
test
pusha
rcll
out
xchg
cmp
enter
popa
fistpl
sbb
cld
cwtl
jo
inc
fnstsw
mov
push
sbb
cmp
jne
ja
out
sbb
sub
jnp
sbb
lock
test
dec
pop
push
mov
ret
fimuls
adcl
lds
stos
jo
outsl
ret
xor
stc
or
aam
adc
nop
test
jle
cmp
mov
scas
xchg
mov
pop
sarb
jbe
pop
subl
sbb
dec
mov
mov
iret
cmp
insb
addr16
fidivrl
pop
inc
stc
mul
sbb
cmp
mov
aas
jl
mov
xchg
inc
add
xchg
dec
cmpl
ret
and
mov
orl
stc
pop
movsb
std
loopne
sub
enter
stos
mov
jno
or
ret
les
xor
stc
adc
scas
mov
xchg
or
cmpsb
push
cmp
lds
lods
and
in
rcll
std
pop
lods
outsb
jp
popf
movsl
mov
add
cmpsb
mov
es
inc
dec
cmp
mov
jne
nop
mov
aas
in
cmp
mov
jnp
inc
mov
cwtl
jne
push
fiadds
repnz
pop
push
adc
addr16
mov
dec
addl
lahf
jl
pop
in
in
pop
dec
js
mov
test
subl
std
mov
fcmovne
jne
adc
push
in
pop
push
xchg
xchg
jb
xchg
mov
push
inc
add
lds
jg
rcrl
andb
xchg
movsl
jg
jmp
fcoml
in
iret
lahf
xchg
test
cmp
adc
imul
clc
pop
jns
jg
fcom
mov
pop
pop
pushf
int
push
aam
ret
inc
scas
xor
sub
sarb
idiv
nop
imull
stc
push
dec
testl
mov
cwtl
call
add
pop
cmp
insb
nop
dec
mov
arpl
fs
roll
popa
or
cmc
push
sbb
xlat
stos
cli
cmp
jp
neg
adc
fdivs
shlb
sub
and
rorl
dec
out
cld
xchg
andl
popa
jno
sub
mov
adc
cmpsl
shrl
rclb
xor
nop
and
xor
fidivs
gs
push
pop
xor
shl
xor
jbe
ja
loopne
adc
cmp
into
push
mov
mov
adc
mov
fistpl
ret
fwait
lahf
lea
jae
cmp
jo
mov
inc
mov
ja
sbb
fdivs
insl
sbb
mov
jp
nop
fucomi
aas
or
cmp
and
scas
add
dec
xchg
jae
jbe
aad
mov
mov
adc
cli
inc
xchg
je
cmpsl
ret
xor
jge
imul
shlb
test
int3
mov
ja
fdivs
out
movsb
adc
repnz
sbb
xor
sbb
adc
cmpsl
es
cmpsb
sar
out
cmp
popf
dec
and
test
enter
negb
dec
enter
inc
rol
shl
xchg
sbb
lods
mov
dec
in
test
mul
fwait
ss
cmp
ret
mov
shlb
ret
in
cli
test
or
push
sbb
int
mov
nop
sbb
push
jb
test
lods
mov
mov
jmp
add
add
mov
mov
aaa
popf
ss
data16
cmp
outsl
mov
mov
mov
and
jg
jnp
lcall
and
arpl
repnz
dec
add
scas
xchg
mov
mov
adcb
cmp
mov
cmp
test
int3
pop
call
push
sahf
enter
push
push
push
in
bound
inc
test
inc
pop
adc
xchg
and
dec
pop
mov
insb
inc
ja
in
mov
pop
push
mov
or
mov
lret
xor
rolb
xor
cs
push
imul
push
fbstp
outsl
lds
xchg
int3
pop
inc
adcl
xor
inc
cmp
sbb
mov
stos
sbb
fsubs
aas
sbb
fisubl
jge
xor
add
aaa
xor
push
push
push
unpckhps
dec
out
mov
ret
mov
or
push
cmp
andb
test
sub
jge
test
sahf
xchg
les
dec
mov
aam
stos
fs
repnz
xor
push
sahf
sub
xor
sbb
inc
add
insb
add
adc
scas
pop
ljmp
mov
inc
cmp
xchg
xchg
ret
leave
ret
aad
loope
lods
out
dec
fstl
pop
and
sbb
push
cmp
add
jl
movsb
mov
push
inc
js
bound
insb
or
push
mov
stc
int3
aaa
test
xchg
cmpl
aaa
and
xchg
sub
push
inc
jle
sub
xchg
inc
pushf
out
pop
shrl
adc
xchg
ret
mov
dec
lret
jns
ljmp
aaa
or
int3
jg
sbb
ret
in
mov
test
pop
adc
in
in
dec
movsb
or
aas
sub
in
ficoml
adc
push
adcb
test
mov
push
incb
imul
loope
idiv
cmp
iret
mov
mov
dec
lods
jmp
xchg
and
lock
mov
push
xchg
mov
cltd
loop
int3
jae
ljmp
lcall
mov
cmp
mov
push
xchg
leave
insb
insl
mov
nop
ds
ss
outsl
inc
into
sbb
ljmp
pop
std
test
dec
jmp
adc
int3
dec
mov
aam
fisttps
dec
mov
outsl
add
dec
sbb
lahf
push
stos
push
mov
mov
cmp
and
cmpsb
flds
mov
jg
bound
mov
clc
pop
dec
rcrb
mov
xchg
push
adc
cmp
cmc
mov
adc
jnp
and
arpl
sbb
mov
inc
adc
sbb
push
dec
jo
pushf
adc
dec
push
iret
lock
outsl
push
loope
out
and
fwait
sub
dec
and
in
mov
call
jns
movsb
cmp
iret
clc
stos
clc
aaa
xchg
jo
cmp
popa
scas
aam
cli
sbb
adcl
out
das
call
cmp
cmc
cmp
pop
loopne
push
ret
testb
xchg
adc
out
insb
out
outsl
xchg
stc
mov
insb
ss
sub
daa
xchg
sub
xchg
and
xchg
jl
push
push
pop
pop
mov
popa
rcrl
insb
out
sub
fwait
loop
inc
jmp
imul
stos
andb
and
cli
mov
dec
and
dec
xchg
xlat
outsb
ret
pop
pop
stos
dec
xchg
and
fwait
mov
jno
xor
add
cmpsb
loope
sbb
sub
enter
fcmovne
pop
mov
cmp
test
xchg
pop
ds
cmpb
popa
and
andb
shrb
clc
mov
lret
imul
fcomps
je
out
jo
mov
mov
mov
pop
rcl
lods
mov
inc
aam
pop
je,pt
iret
sub
xor
int3
rsm
cwtl
out
jno
push
xchg
popa
inc
push
mov
or
ficoml
jge
ret
sbb
and
fptan
add
lret
jmp
lret
fs
lods
lods
sbb
mov
add
jo
js
jo
scas
add
loop
mov
pop
mov
out
add
mov
mov
adc
adc
cmp
sub
aaa
xchg
add
das
mov
sahf
jmp
sbb
adc
or
negb
int3
add
sbbl
mov
mov
xor
arpl
dec
sbb
arpl
inc
dec
adc
inc
out
cmpsb
jae
mov
lret
and
es
aas
adc
sbb
pop
xchg
fadds
sub
or
shl
inc
push
fwait
lcall
mov
mov
push
mov
jecxz
fidivrs
jg
and
out
test
pusha
lahf
jp
jmp
push
popl
pop
test
aas
sbb
std
ds
loop
outsb
cmp
push
loop
subl
ds
jbe
cltd
jle
dec
jbe
and
xor
push
xorl
sub
lret
mov
push
xor
daa
dec
sbb
sbb
fisttpll
lods
jecxz
popf
mov
sub
push
dec
adc
jae
in
pop
in
lods
jns
lret
loope,pt
aad
fsubrs
scas
mov
clc
leave
addl
and
and
ss
mov
inc
cmp
sub
stos
out
pop
into
sbb
inc
hlt
lock
enter
outsl
xor
inc
iret
mov
jp
ret
sahf
bound
add
jle
mov
fwait
xchg
mov
in
sbb
daa
aas
cmp
.byte
