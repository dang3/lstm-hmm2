out
bnd
in
add
imul
mov
add
mov
paddw
mov
adc
pop
rolb
leave
imul
imul
sub
std
fucomi
mov
cld
and
cmp
cmp
adc
sub
cmp
sub
jnp
mov
pop
push
xor
add
aas
or
lcall
add
sub
mov
mov
or
cmp
pop
aas
mov
repnz
sub
add
sub
sub
mov
mov
sbb
rorb
lods
std
mov
or
or
sarl
into
or
xor
lods
mov
pop
add
ds
subl
inc
push
sub
mov
pop
pcmpgtb
pop
jae
add
pop
cs
daa
sbb
sbb
add
jae
pop
aaa
imul
mov
add
aas
sti
insl
push
push
mov
mov
pop
push
repz
xlat
mov
add
cmp
dec
repnz
cmp
outsb
arpl
inc
mov
add
sbb
pop
adc
mov
mov
push
outsb
ja
cmp
test
je
cmp
sbb
mov
rol
add
sbb
in
or
or
and
aad
jl
mov
lahf
imul
mov
cmp
mov
adc
mov
jnp
add
sarb
jnp
mov
sbb
mov
rcrb
pop
imul
mov
fwait
imul
mov
xor
jg
push
mov
outsb
imul
mov
mov
out
sbb
add
cmove
mov
adc
lret
mov
mov
push
pop
arpl
sub
mov
ret
mov
fcmovu
je
add
adc
mov
into
sub
lock
sbb
xlat
sub
sub
mov
adc
add
lcall
out
mov
pop
mov
or
add
mov
stc
jae
mov
push
cld
mov
fisttpl
add
xor
and
roll
sbb
rorl
mov
mov
in
leave
push
xor
ljmp
mov
push
mov
lock
mov
out
sbb
or
faddl
shrl
mov
leave
fwait
cmp
sbb
aas
lock
or
jnp
fnsave
mov
stc
pop
add
adc
inc
jl
or
add
push
push
mov
lods
data16
mov
test
or
or
or
in
or
mov
or
negb
xchg
jno
fists
dec
leave
sbb
cmp
shlb
insb
mov
adc
mov
rcll
add
adc
ret
add
pop
and
jmp
sub
fists
sub
and
push
xlat
sbb
sbb
sub
adc
jl
cmp
outsl
fcmovnb
dec
rcl
pop
mov
jp
cmpb
in
mov
mov
cltd
insl
xchg
fiaddl
or
adc
cwtl
mov
add
repnz
push
pop
out
lods
pop
out
rol
incl
and
push
ja
add
adc
mov
adc
push
fsubrs
and
mov
or
add
js
mov
adc
daa
cmpsl
mov
mov
xchg
mov
inc
lock
adc
pop
jmp
gs
jmp
leave
std
cmp
mov
add
and
cmc
sarl
mov
mov
dec
enter
jbe
mov
push
js
adc
into
mov
xor
push
int
mov
mov
ret
sbb
popf
jbe
dec
loop
mov
icebp
lods
xor
add
or
push
rcrl
lcall
dec
or
jmp
adc
adc
xchg
mov
int
jl
div
rcrb
sti
addr16
cmp
mov
add
add
int
faddl
test
adc
jge
je
or
jo
adc
pop
push
pop
pop
fadd
add
lock
or
ret
icebp
fcomps
insl
or
jae
push
pop
jns
daa
and
mov
mov
cmp
shrl
inc
clc
in
daa
or
add
int
icebp
xlat
add
imul
xchg
or
push
aam
push
loopne
xor
rcll
pop
data16
push
mov
rol
or
sub
sbb
sbb
adc
mov
mov
pop
cwtl
jp
adc
out
xor
dec
jecxz
flds
add
ret
push
jg
jmp
ljmp
jnp
pushf
arpl
or
imulb
sub
repz
sbb
shrb
mov
test
pusha
imul
jle
lock
xchg
mov
cltd
ss
cmp
sbb
icebp
jmp
pop
push
mov
jmp
lcall
clc
or
or
pop
sbb
bound
ret
sbb
mov
pop
mov
dec
mov
sbb
pop
rcrb
call
imul
addr16
loope
je
mov
cmpsl
mulb
and
push
mov
jmp
mov
enter
loopne
popa
bound
sub
je
and
xor
jb
or
adc
or
aam
and
sub
xor
lcall
scas
fwait
sub
xlat
loop
adc
cmp
and
mov
pop
jno
icebp
out
add
incb
sub
or
and
inc
add
jl
jp
sub
icebp
adc
or
fstpl
movsl
sbb
sbb
inc
test
adc
mov
sbbl
push
mov
dec
adc
pushf
mov
jmp
or
xchg
mov
jge
sbb
xor
xor
jbe
add
jecxz
repz
add
nop
clc
xor
xor
add
or
pop
mov
push
hlt
jle
lods
imul
test
outsb
sub
xor
adc
push
mov
adc
add
fcmovnbe
aad
push
push
test
push
adc
hlt
mov
dec
ja
lock
sbb
aam
dec
call
sti
sub
pop
pop
pop
dec
adc
jl
mov
mov
popa
lock
and
fmuls
mov
lock
mov
pusha
daa
into
push
cli
adc
nop
mov
sbb
cmp
lods
sarl
sbb
movsl
jle
cmp
addl
push
push
bound
ljmp
lret
sbb
in
sbb
in
add
mov
jnp
rolb
push
adc
xchg
mov
divl
jmp
mov
mov
lret
sti
fstpl
sahf
add
mov
jne
fucom
jge
test
repnz
cli
int
ficompl
add
into
push
movsb
insb
clc
call
pop
push
leave
insl
mov
sbb
leave
push
fnstsw
inc
fdivs
jmp
es
xor
xchg
out
add
das
pop
int
mov
add
aas
xchg
pop
xchg
rcrb
xor
add
les
xor
pop
mov
lods
arpl
ss
fchs
aam
mov
lcall
mov
into
mov
lods
xchg
push
mov
incb
rcrb
insl
seta
roll
push
adc
cltd
sbb
fbstp
adc
jb
inc
mov
shr
stc
and
mov
or
push
pushf
cmpl
mov
mov
fdiv
xor
or
adc
mov
punpcklbw
je
leave
or
bound
xor
cwtl
jo
mov
lea
mov
icebp
add
in
cli
cmp
xchg
jecxz
fucom
repnz
sbb
pushf
push
pop
lret
pop
cmp
xor
negl
push
xchg
scas
sbb
sub
mov
and
negl
call
insb
out
jno
sbb
add
sahf
pop
rcrl
shufps
or
fucomp
and
rorb
inc
mov
xor
pop
aam
test
mov
lock
rolb
dec
cmpsb
lods
shr
sub
jbe
out
add
ljmp
or
sbb
jne
inc
test
fistl
or
adc
adc
mov
mov
mov
xor
out
xor
clc
push
je
ljmp
ror
test
hlt
mov
xchg
imul
jne
or
idivb
mov
push
fldt
lahf
add
push
in
xchg
xchg
inc
and
data16
sub
pop
call
or
pop
add
sub
sub
mov
cwtl
sbb
cmp
sbb
hlt
aad
push
xor
xor
testb
sbb
lods
sarl
cmp
dec
sub
lock
scas
sbb
test
sbb
pop
add
mov
ret
push
sub
shl
call
add
aas
or
hlt
inc
or
mov
push
mov
and
sub
rcr
out
jl
rorb
call
cmc
fmuls
loop
movsl
icebp
fldt
mov
xor
jle
mov
test
dec
cs
loopne
jg
push
push
jp
stc
add
out
dec
inc
sbb
into
mov
popf
cmp
jo
test
or
dec
adc
fstl
xor
or
inc
xlat
sub
popf
or
ret
push
movl
push
sbbl
js
lcall
or
add
add
jne
aam
pop
sbb
sbb
pop
lds
and
inc
mov
mov
leave
or
inc
and
cmp
js
add
xor
lcall
ss
sbb
lea
ljmp
push
cmp
vmwrite
fsubr
sbb
pop
mov
adc
ret
cmp
sbb
leave
mov
mov
sub
xor
rclb
push
adc
or
sbb
mov
sub
jg
test
or
in
xor
cmp
cmp
inc
shl
cmp
mov
fistpl
jo
fsubrp
push
mov
or
push
jl
sbb
inc
dec
sbb
call
add
sub
sbb
loopne
ss
out
lcall
icebp
pop
push
fwait
or
pusha
xor
cmp
mov
enter
mov
xor
movsl
push
rcr
mov
mov
push
add
gs
mov
push
cli
add
push
popf
in
push
push
push
fucomi
push
xor
xor
add
mov
out
fcmovnu
add
roll
cmc
mov
sub
push
aas
xor
dec
fldenv
adc
pop
mov
loopne
mov
rorl
adc
movups
ds
xorl
jo
je
add
push
inc
push
mov
xchg
andl
or
cmpsb
or
cmp
clc
ljmp
rorb
lods
mov
shrl
or
pop
sti
or
push
push
mov
insl
test
dec
add
add
add
mov
and
add
xchg
rorb
and
xlat
mov
sub
sbb
adc
clc
cli
sar
cmp
push
xlat
xchg
adc
sbb
les
inc
add
sti
mov
add
or
test
jb
in
dec
mov
mov
pop
mov
mov
adc
or
stc
sbb
push
inc
add
push
ret
or
lcall
test
push
cs
or
pop
mov
adc
push
and
aas
push
push
cli
push
sbb
cli
and
sbb
mov
jmp
sbb
sbb
rcl
xor
sarb
dec
lret
inc
xor
xor
notb
punpckhbw
xchg
push
rcr
jne
pop
xchg
xor
add
cli
adc
icebp
jp
addr16
loopne
jmp
notb
push
enter
jb
out
ficompl
loope
push
leave
mov
aad
xchg
loop
push
js
shlb
imul
sub
lret
cmp
repnz
push
imulb
dec
pop
mov
jo
call
adc
inc
scas
cmpsb
repnz
push
loope
sub
sahf
shrb
mov
sub
mov
in
pop
pop
leave
xorl
lock
clc
push
loopne
adc
add
mov
clc
push
pusha
mov
rcrl
mov
outsb
ret
popf
mov
es
je
leave
xorl
pop
lea
jl
mov
out
mov
aam
xor
stos
orb
mov
jo
sub
mov
ret
mov
sti
cmp
dec
or
das
mov
dec
cmp
pushf
scas
enter
test
pop
push
inc
movb
xor
pop
popf
jp
rcll
add
repnz
push
adc
addl
insl
leave
jge
mov
idivb
and
dec
test
xor
into
mov
mov
andl
cmpsb
xor
jbe
pop
xchg
repnz
xor
or
mov
push
push
and
sub
adc
cmp
jge
test
pop
or
adc
cwtl
cltd
push
jmp
pop
xchg
sbb
cwtl
icebp
push
push
cmpl
cmp
std
stos
fmuls
pop
pop
dec
andl
cli
fsubs
ret
imul
sarl
shl
xchg
xchg
lret
mov
cmp
ret
jecxz
adc
cmc
xor
xchg
mov
inc
inc
sub
and
pop
push
push
movsb
push
outsb
sbb
sbb
push
mull
mov
adc
decb
adc
pop
or
addb
pop
mov
xchg
cli
sbb
outsb
add
xchg
pop
lock
mov
fs
cmp
sbb
movsb
push
mov
sbb
leave
ret
and
aam
nop
sub
cmp
and
mov
mov
pop
xchg
pop
jo
xor
push
xor
or
push
fwait
arpl
sbb
and
scas
push
jae
ja
push
mov
adc
sbb
push
xlat
jp
inc
add
mov
jmp
orl
insl
enter
pop
stc
push
push
or
rol
fsts
or
pop
cli
mov
out
movsb
add
xor
push
int
sbb
push
cmpl
repnz
xchg
or
lods
adc
mov
push
gs
add
lret
inc
add
dec
push
lds
fstl
cmp
sbb
and
or
sbb
and
into
jle
fwait
pop
pop
mov
repnz
add
pop
mov
jmp
rorl
mov
cmpb
adc
jne
popl
sub
sub
aad
psubusw
pop
mov
jno
mov
and
call
idiv
sti
imul
cmp
mov
test
call
sub
push
js,pt
xlat
mul
dec
je
rorb
testb
cmp
push
sti
in
mov
adc
push
mov
mov
adc
enter
ret
push
and
sub
in
cmc
rorl
push
sbb
push
cld
mov
shrl
push
cmpsl
dec
arpl
iret
rorb
inc
xchg
clc
gs
movzwl
roll
mov
jp
ljmp
sub
inc
mov
popa
cld
fisttpll
inc
push
les
test
push
xchg
or
adc
mov
in
call
sbb
cmp
fs
add
imul
add
aad
push
fmul
cmpsl
pop
adc
or
clc
jae
sbb
pop
dec
pop
repnz
stos
into
push
and
sub
push
mov
add
dec
negb
out
add
pushf
aad
pop
or
pop
push
ret
inc
inc
mov
insb
sub
and
ds
add
add
movaps
incb
pop
push
jns
or
push
mov
addr16
rcl
sbb
adc
and
test
pushf
repnz
or
shrb
sub
push
imul
shr
lret
sub
push
sbb
es
mov
idiv
adc
out
mov
out
inc
repnz
stos
stos
lock
mov
cli
mov
or
or
mov
rclb
xchg
cmp
add
pop
xor
xor
mov
xor
rorb
sub
sbb
jmp
cmp
subl
xchg
xor
fiadds
enter
mov
dec
enter
mov
and
jno
rorb
orb
sub
add
or
dec
mov
push
inc
xchg
call
adc
loopne
sbb
loopne
pop
es
or
rclb
add
inc
push
jnp
push
shl
mov
jo
popa
push
cmpsl
test
ljmp
lret
fsubrs
cld
sub
inc
jne
add
pop
ret
rcrb
dec
cs
pop
jg
mov
icebp
cmp
lret
push
adc
add
mov
outsb
cli
sub
mov
or
mov
pushf
jp
aad
in
xchg
out
lods
inc
stc
mov
push
mov
push
mov
push
rorb
inc
inc
xlat
xchg
aaa
cmp
xor
sbb
pop
jmp
cmpsl
cwtl
or
insl
cmp
xor
pop
fiadds
xor
rorl
icebp
das
or
adc
lds
or
lods
push
mov
roll
mov
cmc
sbbl
push
push
roll
mov
outsl
roll
inc
pop
dec
lret
rolb
rorl
pop
mov
add
test
and
mov
adc
outsb
cli
sbb
rorb
push
test
cli
add
test
leave
or
and
jb
push
cbtw
sbb
cwtl
enter
mov
mov
enter
adc
setno
mov
pop
push
push
imul
bound
fmull
xor
test
inc
jl
xchg
push
sbb
lcall
or
rcl
addb
mov
and
or
call
test
repz
push
insb
xor
pop
or
mov
jmp
popf
mov
sbb
pushf
xchg
mov
leave
inc
mov
arpl
ss
inc
pop
repz
inc
rcrl
pushf
jg
lea
push
stos
push
ret
adc
iret
inc
push
xchg
ja
fisttpll
cmp
test
sbb
or
cmp
imul
cmp
call
incb
pop
mov
cmp
popf
cmpsl
lret
jo
shrb
ret
sbb
loop
xor
xor
clc
mov
adc
movsb
push
inc
dec
add
add
add
cmp
pop
icebp
addb
push
mov
push
mov
inc
or
dec
dec
cmp
cld
out
adc
mov
enter
arpl
aam
push
aas
push
inc
stc
rcll
nop
sbb
inc
adc
repnz
pop
mov
popa
imulb
mov
push
pop
or
push
mov
pop
mov
lret
add
xor
int
in
and
sbb
pop
push
adc
mov
push
adc
push
mov
sbb
aad
stos
mov
pop
movl
sub
xrstors
push
adc
sub
mov
mov
nopl
adc
lods
leave
add
out
nop
sbb
adc
pop
xchg
adc
enter
addl
cmp
out
pop
shl
dec
xchg
call
icebp
push
jmp
rcrb
sub
test
fbld
push
into
add
add
or
push
adc
xor
int3
stos
add
jns
sbb
jo
pop
xchg
les
mov
imul
xor
scas
addr16
leave
or
inc
xor
adc
iret
pop
or
lret
clc
das
jp
jbe
mov
pop
insb
shr
mov
add
fimull
loope
mov
ljmp
jns
xlat
inc
push
cmp
add
jne
out
insb
or
push
pushf
mov
daa
pusha
sbb
mov
xchg
not
cwtl
mov
add
jo
fcmovnb
aas
inc
out
push
or
jo
out
adc
sbb
sarl
add
imul
shlb
or
xor
pop
iret
mov
mov
lds
rcrb
mov
clc
inc
enter
or
lock
sarb
fwait
push
out
popa
jno
dec
fstpl
adc
xchg
js
jo
and
pop
lret
adc
ret
iret
dec
in
vxorpd
movsb
dec
cmp
scas
add
cmp
cmp
pusha
neg
lret
sub
dec
xor
sbb
sub
leave
jae
jae
mov
clc
ret
movsl
push
inc
push
sahf
sub
mov
adc
mov
adc
sub
mov
xchg
sti
mov
rol
inc
xchg
jl
call
and
rcll
cmpsb
adc
clc
out
rolb
and
push
push
adc
lret
repnz
mov
pusha
test
cmp
je
add
push
sbb
addr16
lret
jns
cmp
rcrl
xchg
lret
add
adc
lcall
pop
aad
loopne
movb
fadd
mov
sbb
mov
roll
andb
pop
in
jecxz
or
jne
inc
add
clc
faddl
inc
cmp
adc
ret
xor
rcrl
mov
lret
mov
jae
cmpsb
push
sbb
repnz
stos
faddl
sbb
outsb
push
dec
sbb
sbb
pop
pop
cltd
or
mov
jecxz
pusha
into
mov
inc
inc
cwtl
sbb
push
fwait
and
pop
lods
je
xorl
inc
xchg
sbbb
or
push
or
xor
mov
add
and
push
pushf
dec
into
fidivl
pop
cmp
imul
inc
xor
stos
xor
mov
add
es
cmpsl
lock
jg
scas
push
mov
push
xchg
iret
nop
dec
ljmp
dec
hlt
or
sarb
or
lahf
add
mov
add
or
xchg
mov
or
push
pop
lods
jo
movsl
sbb
cmp
jne
scas
mov
jl
adc
ret
clc
dec
into
push
push
push
icebp
pop
and
mov
adc
adc
dec
adc
sar
adc
pop
mov
mov
and
push
pop
jl
push
lock
ret
and
and
sub
mov
add
js
js
push
xor
and
shlb
xor
ljmp
dec
inc
pop
fisttpl
xchg
test
cmp
inc
xchg
mov
mov
loopne
loopne
cmc
dec
and
or
inc
cmpsl
or
adc
push
dec
add
sub
jl
rolb
in
and
test
dec
shll
dec
ja
or
dec
movups
inc
mov
jo
and
punpckldq
fadds
cmp
mov
test
push
or
movsl
ljmp
push
into
ds
add
sbb
packuswb
int3
sbb
inc
lret
in
cs
dec
in
inc
fisubrl
ret
xor
rolb
adc
lcall
push
adc
mov
pop
cmp
stc
sbb
fldcw
push
pusha
pusha
sbb
popl
icebp
xor
ljmp
sbb
pop
pusha
mov
lods
lods
pop
scas
adc
rorl
inc
add
mov
jl
aad
pop
rclb
mov
push
cmpl
add
pop
orb
adc
subb
clc
pop
cmp
xor
movsl
inc
or
sbbl
pop
cmp
lret
ss
pop
or
sbb
and
mov
stos
scas
icebp
add
jecxz
push
inc
je
scas
insl
sub
inc
or
pop
or
sub
add
mov
cwtl
sub
push
mov
mov
mov
lods
ja
pusha
roll
or
mov
aam
mov
movsb
add
sbb
add
lcall
mov
cmp
adc
jp
inc
dec
xchg
or
push
ja
bound
push
ficoml
inc
lret
stc
or
add
sahf
testl
stos
lds
jne
leave
test
mov
jb
test
sub
test
ds
sbb
aaa
adc
in
aad
clc
dec
icebp
je
pop
jge
mov
mov
xchg
mov
dec
adc
sub
jp
add
or
and
or
mov
bound
add
and
mov
inc
jo
pop
shlb
mov
push
movaps
std
sbb
idivb
aad
or
push
mov
mov
les
pop
push
in
jnp
push
jae
sub
in
cmp
inc
jnp
mov
or
push
sub
les
scas
aad
in
or
inc
jae
es
or
sub
enter
rolb
mov
shr
js
lcall
bound
inc
scas
cltd
sbb
inc
jle
mov
cli
out
adc
push
inc
dec
les
add
dec
rcll
xor
bound
iret
xchg
jmp
adcl
test
fdivs
mov
ret
push
xor
mov
or
mov
push
lock
sub
das
jbe
add
scas
sbb
lcall
push
pop
fs
lds
or
shlb
subl
push
push
sbb
push
cmc
or
rol
je
pop
xchg
lea
xor
or
xchg
gs
mov
jnp
insb
mov
adc
push
dec
lret
mov
in
pop
popa
lret
push
sbb
filds
imul
push
or
mov
and
ficomps
fadds
cmp
adc
or
xchg
test
test
push
stos
pop
lods
cmp
push
insl
ret
push
sub
add
les
ret
ror
adc
pop
push
test
lods
sbb
and
pop
mov
add
sahf
pop
clc
enter
adc
lcall
loope
aad
inc
cmp
add
mov
adc
adc
daa
add
sub
cmpsb
mov
mov
sub
or
bound
sbb
std
and
stos
ficompl
mov
push
popa
xchg
mov
sub
sub
dec
les
inc
fwait
bound
or
jle
into
add
cmp
scas
js
cmpsb
or
cmp
push
or
pop
sbb
sub
decb
mov
cwtl
mov
cli
lret
ljmp
sbb
xor
inc
stc
pop
add
into
loope
sbb
sub
adc
inc
dec
cwtl
in
lahf
into
sub
adcl
mov
dec
outsl
stc
sbb
sub
test
dec
jge
push
push
xchg
lods
xor
in
push
push
loope
dec
and
adc
inc
xchg
pop
icebp
mov
xor
mov
mov
sbb
mov
icebp
adc
adc
or
int3
push
stos
je
adcb
enter
inc
jl
pop
xor
repz
jmp
test
out
pop
int
or
push
std
or
push
add
dec
xor
push
or
sbb
fidivrl
fdivr
lods
std
rclb
adc
or
or
sar
push
repz
cmc
cmp
lret
pop
pushf
push
shrl
popa
pop
mov
sub
inc
xor
data16
lock
dec
movsl
push
cmp
pop
cmpsl
jo
repz
adc
outsb
add
test
outsl
rcll
push
fs
cli
into
push
pop
xchg
rclb
xchg
rcl
sarb
jmp
mov
test
inc
div
inc
push
adc
mov
shlb
push
sbbb
fldcw
push
pop
imul
sub
rolb
xchg
cwtl
mov
cmp
mov
xor
in
out
lods
out
cli
call
pop
jae
inc
nop
sar
and
test
mov
jbe
adc
mov
cli
add
rcl
std
push
dec
jp,pn
inc
call
sbb
test
inc
mov
sarb
add
push
jle
aad
das
jmp
push
stos
xor
lret
jne
aaa
or
ret
and
mov
push
xor
mov
mov
cmpsl
andb
sub
sbb
pop
arpl
test
or
inc
repnz
jmp
push
mov
pop
mov
cmpsb
mov
rcll
push
cmpsb
leave
xor
mov
push
pusha
cli
or
add
sbb
sbb
pop
ret
dec
xchg
and
mov
sbb
imulb
jl
loop
xchg
mov
ljmp
ret
push
cmp
dec
cmp
push
lea
pusha
lahf
inc
shlb
roll
pushf
movsb
lret
pop
adc
psrlq
call
push
pop
add
in
xchg
or
jp
mov
xchg
lea
push
pop
in
mov
addl
inc
je
push
sbb
enter
rcll
mov
loope
movsl
pop
hlt
inc
pop
inc
les
cwtl
dec
popa
mov
mov
in
es
mov
xchg
imul
or
sbb
adc
jmp
mov
scas
mov
mov
mov
ret
cmpsl
cltd
mov
jo
pusha
xor
enter
inc
sub
sub
jbe
sbb
scas
popl
aam
imulb
stos
or
mov
mov
mov
icebp
adc
cmp
inc
mov
bound
or
adc
mov
popa
jnp
rcrl
mov
jg
rolb
mov
insb
pop
push
add
or
and
and
mov
mov
shll
into
test
inc
mov
inc
loope
les
and
xor
pop
xchg
sub
jmp
mov
das
iret
mov
push
rclb
inc
rcll
fstpt
mov
push
cs
xchg
inc
ss
lods
loope
sub
test
stos
inc
enter
lret
pop
mov
jle
in
sub
scas
movb
dec
popf
rcrl
and
adc
push
xor
fwait
hlt
add
leave
or
mov
mov
xchg
dec
and
pushf
mov
mov
push
jno
data16
cmp
push
aas
leave
add
push
test
movsb
pop
pop
les
rorb
rcrb
push
shll
inc
shr
adc
sbb
subl
push
jo
idivl
sbb
es
dec
es
stos
ljmp
push
and
loopne
repnz
push
mov
xor
rcr
aam
lods
cmp
pop
pusha
inc
and
push
adc
adc
pushf
sub
xor
sub
mov
aad
lock
into
push
stos
js
test
cli
popa
pusha
sbbl
sbb
mov
cwtl
fistl
ret
out
pop
jl
ret
cmpsb
sbb
js
out
andl
daa
push
and
clc
jmp
mov
cwtl
andb
add
mov
outsl
shl
or
stc
pop
adc
sub
dec
sub
jo
jno
scas
push
sub
sub
sbb
mov
xor
or
xchg
push
sbb
leave
sub
imul
add
fisubl
dec
in
pop
adc
adc
push
int
jae
or
scas
add
jle
push
sub
insb
mov
mov
push
ret
jb
js
leave
jo
or
arpl
bound
sbb
clc
test
adc
test
mov
jne
mov
adc
loope
add
lahf
cmp
or
pop
xchg
xchg
or
cs
cltd
ret
cmpsl
sbb
push
sbb
and
das
fldt
pop
adc
lods
push
in
push
out
pop
add
or
and
pop
ret
adc
stos
stos
inc
add
mov
or
push
jg
loope
inc
fstpt
enter
inc
fldenv
popf
sub
cmp
jmp
clc
inc
push
mov
push
push
xchg
or
or
rolb
mov
fs
inc
jo
rorb
adc
decb
call
pop
sbb
sub
cmpsl
mov
xor
div
roll
lea
lea
call
sub
inc
lock
inc
adc
roll
adc
add
icebp
addl
dec
adc
stos
mov
lods
or
jmp
cmp
and
outsl
mov
cs
call
into
stos
pop
dec
or
xor
pop
sbb
push
loope
cmp
imul
mov
pop
rcll
mov
push
jecxz
movsl
add
gs
pop
rcll
cmpl
jmp
into
add
inc
pop
shlb
push
ret
aam
adc
sbb
and
jmp
jbe
ss
sub
adc
xor
cmpsl
and
ret
or
addl
cmpsb
scas
fs
leave
vxorps
mov
scas
adc
mov
dec
push
je
jb
lahf
or
int3
push
test
je
push
add
ret
sbbl
subl
lods
cmp
push
lcall
leave
sbb
insb
std
adc
andb
mov
or
mov
or
or
pusha
and
jno
push
mov
pop
or
jo
adc
popa
jmp
cmp
popf
push
and
xor
sbb
sbb
roll
cmp
lret
cltd
js
mov
repnz
mov
and
add
and
inc
loope
pusha
stos
add
jecxz
cmpsl
sbb
shlb
nop
dec
fiaddl
mov
sbb
lret
into
inc
mov
add
mov
fucom
mov
sbb
sub
loopne
inc
lret
gs
mov
or
shlb
out
push
fmul
jb
test
inc
adc
mov
incb
ljmp
sbb
sarl
or
add
jbe
sbb
inc
or
mov
sbb
pop
popa
xchg
ljmp
pop
cmp
or
scas
adc
push
test
cltd
stos
inc
das
push
sbb
push
pop
lahf
stos
xor
mov
and
inc
aas
pop
lcall
shl
ss
call
mov
shll
fsubrl
push
push
test
cmp
lret
mov
inc
inc
loop
shll
xchg
pop
push
push
push
xor
imul
mov
addl
movsl
jo
rcrl
movsl
inc
arpl
pop
scas
rcrb
or
sbb
add
loopne
cli
sub
push
sbb
and
test
pop
cmp
lret
lea
and
stos
xchg
std
adc
cmc
jo
scas
pop
aaa
movsl
add
sti
mov
push
inc
sbb
fs
jp
jmp
ret
pop
xor
push
add
lods
loop
into
add
pop
movb
arpl
movsb
push
subl
and
ss
ret
or
and
xor
mov
dec
int
push
test
mov
mov
mov
dec
adc
mov
test
pop
push
adc
scas
add
lret
push
xor
rorb
add
mov
inc
pop
mov
sub
and
adc
push
mov
sbb
mov
or
push
stc
jno
testl
add
pop
call
jb
adc
cld
push
and
sbb
lahf
pop
in
jo
and
jge
and
daa
sbb
jbe
push
jp
imul
into
lock
repnz
or
add
add
sbb
cmp
add
pop
and
sub
cmp
push
sbb
movsb
std
or
fistpl
outsl
pop
adc
sbb
repz
test
mov
cmc
lret
dec
xchg
shlb
mov
loopne
popf
cmp
xor
popf
dec
xor
sbb
or
ja
mov
pop
push
shl
enter
testb
movsl
xchg
adc
add
mov
mulb
sahf
stos
or
dec
sub
jo
push
orb
inc
mov
dec
or
sahf
pop
mov
pop
outsb
sbb
pop
cld
inc
arpl
sub
adc
in
jle
rorl
icebp
sbb
dec
and
repnz
inc
or
add
mov
icebp
push
adc
sbb
pop
mov
push
mov
xchg
lea
daa
rcrb
mov
lds
adc
hlt
outsl
add
enter
fnstenv
cs
mov
sahf
stos
scas
fsts
and
mov
sub
test
mov
inc
std
lahf
incb
fwait
and
push
mov
mov
add
shl
jmp
out
ds
pop
hlt
inc
test
pop
and
push
push
outsl
leave
or
les
push
loopne
cmp
pop
cmc
cli
sbb
or
xor
stc
dec
cmp
xor
add
mov
imul
or
adc
mov
sub
sbb
shrl
pop
or
push
lock
dec
xchg
mov
cli
aad
mov
test
test
xor
scas
repz
movsl
js
mov
jbe
cmp
push
inc
add
pop
std
rorb
in
push
pop
mov
cmpsb
pop
push
enter
push
add
dec
xchg
and
shll
jo
ljmp
or
push
dec
push
sbb
bound
repnz
and
or
sbb
nop
push
mov
xchg
pop
test
inc
jecxz
mov
push
xchg
push
out
add
push
mov
lock
and
add
inc
or
lock
pusha
loope
pop
andb
adc
popl
ret
pop
es
and
xchg
sbb
call
call
push
lcall
mov
aad
shlb
add
fsts
and
adc
pop
repnz
sarl
sahf
jne
decl
inc
ret
rol
in
pushf
mov
ficoml
incl
mov
lds
jo
or
adc
je
ja
add
push
xchg
cmp
inc
xchg
cmpsl
jne
cltd
or
dec
rorl
shrl
push
xor
xor
dec
and
inc
push
sub
out
jge
mov
shlb
cmp
inc
xor
adc
test
inc
add
push
push
adcb
mov
push
roll
lock
inc
pop
or
mov
adc
xchg
pusha
add
mov
mov
mov
xchg
iret
add
dec
xchg
movsb
mov
add
jbe
push
lods
pop
jne
adc
adc
or
or
mov
sbb
push
outsb
or
pminsw
push
cmp
int3
jb
repnz
loop
nop
sbb
cltd
sub
lcall
add
or
retw
adc
aad
push
ja
addl
mov
or
adc
push
or
adc
cmp
push
push
daa
fsubrl
idivl
lret
jno
pop
xor
inc
pop
and
out
lods
sub
xor
cmpsb
adc
rorl
pop
cmpsl
mov
sbb
scas
inc
adc
inc
inc
xor
sub
push
or
inc
push
das
lcall
out
das
imul
xchg
sbb
dec
test
mov
lcall
loop
icebp
rorb
cmp
push
mov
mov
sbb
sarl
adc
xchg
shll
sbb
push
push
and
or
sbb
sbb
add
or
test
push
jo
lods
fdivr
xchg
and
inc
in
inc
sbb
lret
test
aad
sbb
push
xor
inc
les
rorb
jbe
pop
lds
mov
sahf
test
into
mov
xchg
xor
xchg
pop
popa
dec
inc
push
push
stos
inc
test
loopne
fcoml
outsl
push
sbbb
cli
add
cmp
jp
clc
dec
icebp
mov
fwait
addb
in
sub
lahf
sub
inc
jecxz
ds
loope
xchg
xor
add
in
repnz
out
xchg
mov
in
push
aam
rcr
sbb
xlat
push
xor
ljmp
pop
or
xchg
or
sbb
les
mov
imul
fbstp
out
cmpsl
sbb
rcl
sbb
cmp
push
leave
adc
inc
rclb
sbb
xor
pop
les
arpl
dec
lcall
and
pop
adc
xchg
roll
and
xchg
pop
pop
jnp
fisubrs
jp
ss
and
pop
popf
adc
mov
popa
stos
fiaddl
js
sti
movsl
ret
hlt
jns
mov
sbb
push
mov
repz
mov
shrl
insb
add
pop
push
xor
mov
lcall
sub
cmp
ror
mov
fcompl
pop
adc
sti
into
push
push
inc
or
shrb
movb
xchg
and
clc
test
sbb
xor
mov
or
enter
xor
pop
xchg
sub
inc
ljmp
or
mov
inc
pop
aam
xchg
std
lock
setp
rol
pop
ret
aam
shr
dec
aas
sbb
dec
or
pop
mov
loopne
ljmp
or
and
push
adc
shlb
and
lea
xor
fs
push
pop
push
inc
sub
jl
jmp
ret
push
and
pusha
daa
mov
add
nopl
call
cmp
sbb
cmc
pop
dec
or
fstl
aaa
test
xor
push
mov
ret
and
mov
xor
cvtps2pd
mov
push
mov
das
add
sub
aas
xor
adc
or
adc
inc
push
cli
push
and
lahf
aam
into
repnz
push
aas
pop
rorl
cmp
mov
add
and
and
push
dec
xor
fwait
leave
pop
jnp
mov
xchg
call
pushl
or
xlat
or
mov
mov
mov
enter
mov
inc
popa
insl
loop
pop
xor
shrb
push
cmpsl
lods
fiadds
and
inc
inc
mov
jge
add
inc
mov
out
mov
jns
scas
or
push
mov
inc
je
push
pushf
mov
xor
divb
push
add
pcmpeqw
cmp
add
shlb
leave
xchg
mov
ljmp
mov
mov
dec
mov
xlat
daa
cmp
cltd
loop
xor
in
cmc
mov
sbb
push
imul
div
mov
js
sbb
pop
dec
push
add
lock
or
jmp
addb
adc
je
mov
mov
dec
xor
jl
mov
jns
push
xor
jnp
cwtl
mov
adc
into
mov
jo
mov
xor
push
stc
dec
mov
push
and
sbb
sub
and
xchg
xchg
sub
sbb
dec
xchg
add
jp
add
ret
adc
add
inc
fs
js
dec
cs
push
lods
cli
inc
mov
movsl
sub
test
mov
pushw
pop
and
xchg
das
cmp
enter
inc
popa
xor
mov
mov
ljmp
and
mov
jb
sti
into
andl
jo
fistps
sbb
and
mov
adc
push
xchg
dec
push
jecxz
nop
mov
mov
mov
or
mov
push
js
add
mov
jp
outsl
adc
int3
or
pushf
mov
and
inc
lds
pop
adc
pop
push
push
xor
lret
fimull
lret
or
hlt
test
sbb
sbb
xor
in
pop
or
je
outsl
jge
nop
mov
and
dec
and
pop
sbb
and
or
or
shlb
sbb
add
push
mov
mov
loope
cmp
out
int
inc
insl
push
movsb
fimull
xor
push
inc
mov
push
ret
rclb
xchg
push
mov
movsl
mov
sub
leave
int3
mov
daa
leave
pop
push
dec
test
ss
xlat
mov
dec
dec
lds
or
sarl
xor
rcll
push
add
pop
add
sbb
mov
sbb
sbb
data16
xchg
imul
mov
aad
and
pushf
fisttpl
shll
into
fstp
test
or
or
push
or
in
and
scas
mov
push
sbb
xor
or
inc
jl
aas
les
mov
idivb
pop
and
sub
pushf
xor
in
jge
jmp
push
adc
pop
loop
jns
scas
push
lds
or
cmp
sbb
push
outsb
and
inc
xchg
adc
adc
fxam
add
xorb
leave
inc
jge
ja
scas
add
lods
add
ret
jmp
addr16
mov
ret
inc
fldenv
and
jo
or
add
icebp
sbb
jmp
or
jno
xor
imul
or
test
xchg
mov
and
pusha
call
mov
push
adcb
dec
jno
or
add
add
inc
xor
das
add
test
or
mov
rorb
mov
jmp
cltd
or
inc
sub
repz
add
mov
adc
lret
repz
js
or
pop
das
aad
jne
push
xor
lcall
shlb
loope
lea
jne
dec
scas
xchg
rolb
jae
adc
and
xchg
adc
xchg
cmc
mov
jb
xlat
adc
je
inc
sub
and
out
stos
lret
pop
scas
pusha
push
dec
sub
orb
std
adc
jb
test
ja,pn
dec
xor
movsl
or
ds
cli
mov
insl
inc
insl
adc
shll
hlt
mov
bnd
hlt
mov
xor
imul
call
cmp
insb
push
rclb
aam
or
cmp
dec
stc
stos
dec
mov
into
inc
push
add
scas
push
stc
jb
xchg
or
and
idivl
orl
shl
aam
mov
sbb
xchg
or
inc
cmpsb
pop
sub
or
lods
adc
test
adc
cmpsb
jecxz
mov
adc
and
add
sbb
bound
negb
pop
push
or
mov
push
dec
mov
add
scas
lcall
adc
or
shr
sbb
add
nop
clc
pop
sub
xor
xor
xchg
popa
sbb
stos
cli
push
je
fmul
adc
add
jmp
ss
dec
push
outsl
cmove
push
push
jp
mov
xorl
and
xchg
fdivl
push
scas
add
add
adc
les
negb
xchg
stc
add
js
mov
cwtl
popa
pop
mov
sub
cld
push
sbb
inc
or
pop
jo
mov
inc
pusha
enter
lods
sub
cli
push
cmp
es
push
push
cmp
sbb
into
mov
ret
shlb
notb
lret
adc
lret
aam
sti
sbb
inc
mov
cmp
jno
jmp
sub
testl
push
fisttpl
fdivrs
cmp
pop
cmp
pop
mov
or
pop
enter
sbb
and
sbb
jns
movsb
push
stos
xchg
dec
aas
mov
test
or
push
mov
imul
add
dec
mov
push
ret
sbb
jns
sbb
call
scas
fldenv
or
ret
stos
xchg
jl
cmp
mov
daa
jo
pop
test
mov
shrb
sub
dec
xchg
sub
sarb
push
inc
mov
aam
inc
jl
pushw
push
xor
pop
aad
xchg
leave
push
mov
js
inc
inc
sbb
roll
int
adc
or
ds
adc
pop
testb
js
pop
or
or
or
jp
popf
sub
pop
stc
pop
ror
mov
sbb
or
mov
bound
mov
cmpsl
sbb
xchg
cmc
in
mov
lock
dec
popf
adc
adc
pop
push
add
xor
xlat
rolb
adc
inc
stos
sbb
xchg
jno
sbb
cmp
adc
mov
add
xor
or
push
xor
cvtps2pd
shlb
adc
add
mov
loopne
jge
jge
cmp
data16
iret
dec
cwtl
xor
inc
push
stc
scas
mov
lods
ljmp
lahf
bound
rolb
sub
aaa
sub
imul
shlb
xor
adc
adc
lret
push
xor
adc
mov
incb
add
add
sti
or
adc
jnp
test
loop
cmpsb
push
mov
xchg
sti
cmpsl
stos
push
stos
pop
mov
add
es
sub
movsl
pop
push
xchg
jb
inc
adc
test
push
ret
mov
std
lock
adc
push
inc
push
inc
xlat
push
push
das
bound
repnz
js
adc
js
mov
sbb
inc
repnz
aas
push
push
or
push
xchg
je
test
ljmp
adc
push
arpl
push
sub
dec
negb
orb
fwait
cmp
adc
adc
xchg
inc
push
mov
adc
out
jbe
movsl
dec
adc
xor
pop
lea
cli
subb
ret
fsubl
cwtl
pop
xor
pop
frstor
addl
pop
push
mov
lcall
mov
pop
add
add
jmp
shlb
pop
aad
pop
mov
call
add
rolb
pop
sbb
xchg
push
mov
repnz
pusha
add
rcl
popa
mov
inc
leave
roll
pop
setg
fsubrp
andb
pop
mov
mov
pop
cmpl
shrl
jnp
adc
sbb
enter
push
or
ret
mov
pop
aas
ss
or
les
inc
sub
or
sbb
int3
adc
rolb
inc
jae
jp
or
mov
push
ret
xchg
mov
jmp
or
push
in
jge
sbbl
mov
ret
mov
mov
adc
fwait
ljmp
push
cmp
inc
and
push
sbb
xchg
nop
call
inc
test
xor
sub
add
add
shlb
adc
xor
loop
adc
sti
xor
push
xor
and
mov
sub
sbb
lea
pop
inc
mov
lock
subl
pop
mov
lcall
loopne
inc
inc
mov
jbe
lods
in
rolb
addb
lock
mov
mov
fistps
push
in
rcll
mov
push
inc
movsb
loopne
inc
shlb
rcrl
or
dec
cwtl
mov
or
es
and
mov
and
and
lcall
push
into
daa
call
cmpsb
or
cmpsl
mov
daa
mov
nop
mov
inc
sbb
sahf
rclb
sub
xlat
ret
push
mov
lods
jo
push
adc
ljmp
adc
inc
adc
pusha
and
das
sub
adc
xorb
in
arpl
push
mov
out
adc
lock
adc
cld
mov
inc
enter
xchg
cmp
jmp
ljmp
ret
or
lock
adc
fwait
lods
push
mov
push
enter
call
xor
lock
jge
mov
div
test
arpl
cmc
imul
push
add
push
ja
cs
push
add
daa
dec
hlt
inc
inc
or
dec
addr16
mov
fisubl
loope
sbb
push
xchg
ljmp
les
inc
and
pop
add
jns
push
or
ror
into
insb
clc
adc
repnz
adc
mov
xor
rolb
movsl
scas
sub
push
jl
mov
mov
sbb
mov
xchg
push
inc
sub
inc
dec
pop
xchg
es
stc
add
ret
pop
add
loopne
cltd
pop
test
dec
sbb
sbb
add
mov
add
pushw
test
push
sti
or
nop
test
add
sbb
add
lret
adc
xchg
push
cmpsb
popl
adc
aad
pop
xchg
mov
mov
pop
arpl
rcrb
jo
outsb
add
or
daa
jb
pushf
mov
push
jo
adc
popf
shrl
aam
push
jb
rol
es
mov
push
xchg
or
mov
std
cmp
sub
fisttpl
jp
push
xorb
mov
and
or
add
js
xchg
jnp
in
add
in
pop
aam
aad
adc
pop
cmp
icebp
rcrb
punpckhdq
add
jp
lods
adc
add
sar
out
adc
scas
cmp
not
lods
xchg
into
lock
add
ret
aam
adc
push
adc
daa
sbb
push
les
js
arpl
inc
stos
jno
jnp
and
aaa
pop
mov
inc
adc
mov
sbb
loopne
dec
add
mov
shl
jae
scas
pop
lods
pop
int
dec
xchg
jne
mov
or
pop
sarb
dec
adc
cmp
and
call
mov
pop
mov
add
mov
leave
add
dec
test
xorb
mov
jbe
push
out
add
xlat
mov
mov
mov
lcall
dec
ljmp
and
fs
push
ret
enter
xlat
imul
aad
ss
or
add
lods
dec
inc
adc
or
orl
cmpl
std
add
xchg
adc
movsl
repnz
cmpsb
notb
sarb
or
loopne
jne
aaa
cltd
incb
push
test
or
scas
cwtl
into
pop
cmp
lret
push
cld
int
ljmp
or
add
adc
push
repz
jo
lret
add
xchg
inc
sub
xchg
dec
out
add
jnp
mov
add
arpl
in
insb
or
adc
rcrb
xor
mov
adc
inc
jo
xor
mov
inc
lods
rolb
test
add
push
push
iret
push
or
call
push
sbb
lds
push
int
pop
les
test
push
or
mov
sub
cmc
mov
pop
jl
ds
icebp
loope
push
push
mov
mov
adcb
xchg
cmp
cmpsb
jns
jle
inc
insb
jne
ljmp
mov
dec
adc
mov
or
push
shll
data16
cmpl
inc
and
sti
or
movsl
jns
stos
adc
cmpsb
js
sub
rorl
orl
scas
ret
or
fsub
stos
fsubrl
add
push
addr16
dec
xor
or
cmp
in
xor
dec
aam
pop
jo
or
sub
sbbb
fwait
pop
subb
test
xchg
inc
sbb
adc
sub
sbb
cltd
dec
sub
xlat
lock
lret
cli
jmp
add
rorb
xchg
ds
xor
sbb
pop
push
lods
lret
jmp
pop
shll
insl
pop
gs
mov
add
ljmpw
adc
mov
cmpsl
inc
xor
adc
or
pop
jno
mov
cmp
test
inc
cwtl
xchg
inc
add
test
xor
sbb
inc
push
mov
pusha
xchg
sbb
jo
lds
test
mov
outsl
pop
pop
inc
sbb
jmp
dec
leave
sub
mov
cmc
ljmp
mov
dec
push
mov
enter
cmpsl
dec
notb
adc
pop
pop
sub
mov
pop
add
pop
jp
call
push
clc
pop
xor
mov
mov
adc
les
lock
lcall
jo
inc
insb
and
mov
call
es
cmp
mov
loope
dec
pop
sub
js
push
fmuls
inc
push
mov
ja
and
push
cmp
push
pusha
and
adc
int3
adc
faddl
ljmp
cmp
test
xor
bound
ja
pop
sarb
adc
fisttpll
mov
je
xor
daa
push
or
adc
push
enter
mov
loop
iret
aaa
into
lods
push
popa
stos
sbb
fistpl
cli
adc
jg
jo
jecxz
mov
push
mov
in
lock
ljmp
sub
orb
pusha
int
lds
xor
movb
ss
inc
sahf
shrb
adc
mov
xor
and
loopne
stos
jg
lret
in
adc
je
sbb
mov
adc
cmp
mov
inc
sbb
mov
add
mov
push
push
ljmp
adc
add
ljmp
mov
push
test
pusha
cwtl
ss
pop
xor
data16
loope
sub
xor
test
push
sub
cmp
adc
and
mov
push
xor
das
adc
pop
inc
or
xor
push
shr
xlat
adc
cmp
adc
push
lahf
add
sub
pop
daa
dec
pushf
cli
adc
jl
xor
popa
enter
push
imul
sub
pop
push
cmp
push
or
loop
leave
mov
pop
lods
fdivp
pop
nop
and
xor
inc
or
jbe
add
aad
dec
xor
push
gs
divb
rolb
enter
pop
and
mov
mov
add
jb
add
push
push
daa
js
sbb
push
xchg
xchg
mov
mov
mov
mov
rcll
mov
adc
mov
push
sbb
or
mov
push
int
femms
push
xor
cmp
rorl
inc
push
sbbl
rclb
cmp
shrd
push
aam
or
adc
ret
insl
push
sub
push
cmp
cmp
xchg
lods
icebp
xor
push
push
xchg
stc
repnz
adc
adc
outsl
sar
push
xor
popf
push
cwtl
mov
mov
rcrb
repnz
adc
mov
mov
cmp
dec
es
sbb
sbb
das
dec
pop
repnz
outsb
sar
in
mov
or
ret
addl
or
call
jle
addr16
jp
push
adc
lods
add
mov
dec
pop
loopne
les
push
add
mov
in
add
adc
rol
dec
adc
xchg
sbbl
in
ret
test
cmp
pop
add
cltd
add
sahf
push
or
push
adc
adc
test
push
and
sahf
push
xchg
ret
mov
mov
rclb
enter
xchg
inc
pop
hlt
inc
push
or
shrl
push
sbb
inc
subl
rcl
xchg
ror
cld
lds
pop
scas
sub
bound
sub
push
add
mov
sahf
test
fstl
scas
lods
xor
cmp
or
test
cmpsb
pop
clc
orl
mov
bound
or
cmpsl
pop
aaa
jl
mov
enter
push
icebp
adc
push
orl
fs
inc
sub
stos
add
test
or
scas
mov
clc
pop
inc
cmp
popa
ret
stos
inc
inc
and
movaps
push
pop
test
scas
leave
dec
push
add
sbb
push
pop
cmp
jmp
rorb
xchg
test
mov
in
insb
stos
je
mov
fidivl
test
pop
and
mov
lcall
add
ret
sbb
das
xor
enter
push
hlt
and
lock
lds
mov
mov
xchg
in
loopne
lcall
dec
sbb
mov
xchg
rcrb
xchg
jecxz
stc
push
pop
xor
dec
push
sub
loop
inc
adc
mov
mov
mov
inc
pusha
mov
es
in
sbb
dec
push
bsf
es
popa
mov
sahf
leave
adc
and
xor
pop
adc
sbb
das
adc
pop
adc
subl
cli
cmp
sbb
mov
pop
and
ret
out
icebp
orb
add
cmp
rolb
push
rcrb
aam
bound
add
je
mov
pop
mov
sbb
jg
mov
fs
movsl
sub
adc
jge
and
or
sub
mov
dec
and
shlb
and
push
aaa
pop
and
cmp
sbbb
daa
rolb
adc
rolb
push
mov
jmp
mov
out
or
cmp
inc
sbb
clc
pop
mov
cmp
test
adc
add
mov
or
out
subl
aad
leave
pop
add
sub
inc
adc
arpl
test
popa
popa
push
push
aad
aaa
push
pop
push
test
pop
inc
or
adc
pusha
mov
adc
mov
sbbl
push
lret
rorb
inc
xor
cmpsb
cmpsb
and
add
push
ret
in
jns
lds
adc
int
mov
lret
push
add
shll
adc
xor
mov
mov
mov
mov
and
decb
add
sbb
stos
lock
enter
sub
xchg
sbbl
push
or
mov
inc
and
xchg
fmull
sbb
ja
lea
or
push
icebp
cld
jmp
sub
pop
sub
outsb
inc
shl
mov
cs
dec
sub
cmpsl
and
int
mov
ja
mov
js
sbb
scas
sbb
push
mov
test
add
push
or
push
sbb
pop
xor
mov
inc
sbb
aam
fisubs
addb
imul
lds
sbb
mulps
jmp
cmp
add
or
test
inc
out
xlat
add
push
dec
or
ret
mov
add
pop
ljmp
push
loop
pusha
stos
push
mov
or
xor
insl
sbb
repnz
arpl
inc
sub
push
mov
jno
icebp
orb
and
xor
das
cwtl
sub
push
adc
push
adc
mov
test
xchg
test
pop
sti
and
inc
fistps
ffree
add
mov
pop
hlt
lods
jg
or
loopne
mov
and
cmp
and
or
aad
sbb
rorb
mov
xor
dec
adc
jge
mov
stos
adc
mov
jle
sub
add
enter
jne
mov
cmc
push
adc
add
cmp
sub
inc
test
je
cmpps
and
and
movsb
roll
pop
addb
mov
push
lds
add
inc
mov
sub
push
jle
orl
shlb
sbb
jo
cmp
xor
nop
das
ds
hlt
notl
aas
add
ljmp
pusha
mov
or
jb
pop
fsubr
mov
outsl
jne
cmp
sbb
int3
std
add
inc
addl
clc
push
inc
mov
test
cmpsl
cmp
sbb
add
push
adc
mov
fldenv
lods
mov
pop
pushf
out
mov
pop
adc
add
popl
sbb
std
sub
pop
aad
mov
loop
or
cmp
push
add
mov
leave
xchg
aam
xor
mov
nop
addl
shlb
inc
test
push
pop
call
ret
negb
arpl
and
xor
or
add
loopne
or
jbe
push
movb
mov
leave
add
bound
adc
bound
addr16
or
add
loopne
mov
mov
pop
call
sbb
or
mov
orb
in
xor
repnz
into
pop
push
dec
mov
adc
ja
sarb
aad
test
dec
mov
inc
sub
cmc
enter
mov
jl
inc
movsl
sub
sub
jnp
mov
push
fdivl
xchg
push
stos
adc
xor
bound
in
dec
or
pusha
push
mov
lret
out
xlat
iret
adc
ret
jp
xchg
enter
fpatan
push
clc
push
sub
add
xchg
loope
pushf
and
sub
leave
das
mov
or
ja
push
sbb
rcrl
cmp
adc
test
xlat
dec
arpl
rolb
xlat
sbb
sbb
aas
dec
popa
inc
inc
shll
repnz
sub
sahf
jns
add
in
loopne
loopne
add
mov
and
xor
push
push
adc
adc
scas
lret
or
cmp
xchg
jecxz
add
je
or
dec
pop
adc
mov
adc
adc
popa
push
inc
out
and
inc
cmp
xchg
cwtl
push
or
stos
add
inc
scas
lods
adc
pop
sub
xor
in
fs
cmovno
ljmp
inc
sar
adc
and
pop
mov
inc
or
stos
lea
xchg
ffree
insb
sub
cmp
inc
sbb
in
cmp
and
xor
js
sub
icebp
or
loope
inc
hlt
pop
sub
adc
and
cli
enter
or
or
outsb
jae
cmp
leave
into
shl
cmp
insb
jle
sbb
je
daa
arpl
scas
dec
adc
push
dec
lret
mov
push
sub
test
push
js
popf
outsb
inc
in
sub
add
pop
insb
movsb
mov
jo
xchg
add
das
rolb
ljmp
pop
push
mov
stos
mov
pop
scas
jbe
rcr
jb
pop
stos
sti
add
push
dec
push
xor
notb
lahf
add
and
xchg
push
pusha
fdivs
cmp
lock
movsl
andl
xchg
or
xchg
stos
inc
mov
add
sbb
cmp
loope
jge
mov
mov
push
add
sbb
xchg
leave
xchg
stos
xchg
sbb
add
push
leave
adc
inc
int
pop
stos
lods
push
and
mov
jmp
mov
push
add
jne
les
push
sub
cmpxchg
daa
or
adc
test
inc
push
icebp
pop
add
cmp
les
or
and
aad
mov
and
js
int3
js
xor
cmp
lods
stos
push
push
sbb
pop
into
push
xchg
adcb
push
or
aam
jno
rol
pop
inc
xorl
adc
add
mov
or
loope
ret
jne
rcrb
inc
cmp
adc
lret
ret
mov
aam
call
test
dec
push
adc
int
lea
push
or
and
dec
mov
push
inc
mov
mov
jp
ret
mov
fcmovbe
rcrb
cmpb
pusha
add
popa
sbb
in
dec
cwtl
cmp
and
stos
or
or
call
sub
sahf
add
xchg
lret
fs
setns
filds
sbb
call
inc
adc
iret
mov
sbb
mov
in
mov
rcrl
push
or
push
daa
inc
pop
jb
xchg
mov
push
sub
into
cmp
and
ja
pop
mov
shrl
adc
cmpsb
shlb
mov
xchg
fucomp
or
mov
inc
cmp
pop
lahf
mov
sbb
les
mov
jb
jle
pop
add
or
shl
and
push
add
adc
xor
adc
xor
mov
aad
dec
je
and
add
sti
sarl
nop
lock
push
sub
add
pop
aam
or
pop
lods
mov
push
xchg
pop
cmpsl
push
mov
pop
lea
jo
test
dec
ret
arpl
loop
push
sbb
push
inc
pop
adc
sahf
gs
push
leave
cmp
scas
sbbl
clc
popl
repnz
repz
xchg
push
xor
add
add
dec
add
shrl
hlt
imul
out
rcll
femms
jmp
ljmp
adc
mov
add
add
or
cwtl
lea
mov
mov
mov
sub
aam
add
cmp
les
mov
sahf
ret
adc
scas
push
push
mov
mov
sub
sub
xor
jae
pop
xchg
popa
push
mov
lods
cs
rcrl
push
push
loopne
ret
jecxz
sbb
mov
adc
push
clc
mov
shll
pop
test
test
inc
dec
aad
add
pop
pop
pop
jl
or
out
add
leave
andnps
push
sbb
test
inc
aam
sbb
add
fadd
sub
xor
push
dec
mov
js
mov
lds
mov
cmp
push
pop
mov
insb
fidivl
and
dec
into
add
mov
sub
add
mov
icebp
pop
bndldx
cmp
mov
les
cmp
adc
sbb
jmp
test
push
push
xor
scas
adc
data16
or
popa
adc
xchg
and
add
mov
stc
sbb
pop
pop
test
sbb
lds
test
cmp
push
or
aad
jl
das
and
movsl
push
jecxz
inc
cmp
adc
mov
mov
add
es
out
test
iret
scas
aad
call
mov
lcall
push
or
jo
dec
dec
push
dec
add
popa
cltd
movsb
subb
stos
or
push
mov
in
aad
jae
add
mov
add
sbb
cmp
adc
push
cmp
popa
lcall
icebp
or
cmp
mov
mov
pop
addr16
sub
std
jb
add
sbb
popa
nop
js
mov
cwtl
push
push
dec
cmc
mov
add
or
mov
adc
cmp
inc
xchg
pop
pop
bnd
pop
or
movsl
mov
pusha
adc
jo
inc
mov
punpckhdq
in
push
sub
jne
pop
call
pusha
ja
adcb
call
out
ret
aad
scas
adc
inc
add
pop
cmp
jo
mov
xor
mov
scas
add
mov
sarb
push
adc
aam
inc
imul
add
push
push
mov
or
rorb
adc
pop
adcb
inc
ret
inc
hlt
enter
jp
add
sbb
into
pop
sbb
std
rorb
dec
add
sub
icebp
add
add
rcll
sbb
mov
xchg
imul
dec
loope
les
push
adc
adc
dec
inc
add
mov
test
sub
inc
xor
mov
push
jb
push
insb
add
pop
or
test
dec
scas
ja
std
or
movsb
clc
shl
bsf
xor
mov
aad
xchg
inc
sub
or
shll
inc
jno
adc
dec
mov
sbb
rolb
fldl
adc
cltd
adc
stos
mov
test
push
push
adc
fcomps
ljmp
dec
push
sbb
push
pop
test
mov
pop
rolb
pop
imul
sbb
andl
adc
leave
pop
xor
add
sub
into
fldenv
pop
addl
and
and
mov
adc
test
mov
push
and
into
test
aad
popf
jb
lock
xchg
jb
iret
mov
sub
xchg
pusha
push
push
je
loopne
or
and
sub
ret
leave
sbb
push
dec
mov
cmc
ret
lock
ljmp
inc
out
push
xchg
stc
or
cli
pop
push
pop
pop
test
xchg
add
mov
pop
in
and
adc
clc
adc
adc
lret
sub
in
sub
cmp
roll
xor
mov
push
gs
push
dec
xor
testb
lods
dec
addr16
pop
dec
lahf
add
jo
xchg
push
enter
inc
stc
or
adc
divb
sub
cs
cmpsb
push
jno
sti
dec
and
adc
rol
fidivrl
test
andl
cmpsl
shrl
jmp
push
rolb
rcll
fs
sbb
es
mov
rorl
adc
roll
fcmovne
test
lret
shll
pop
cmp
shll
push
test
repz
daa
ret
dec
leave
insb
imul
int3
rorl
push
mov
and
inc
movsb
scas
xchg
pop
dec
imul
sbb
popa
dec
lods
test
or
scas
or
jg
sbb
push
adcb
jp
hlt
and
or
mov
push
push
inc
call
sbb
xchg
jp
call
loope
mov
push
push
cmp
mov
mov
dec
mov
sub
and
imul
rcrl
push
scas
or
rolb
push
int
and
mov
rcll
xor
pop
inc
ret
xchg
stos
jge
ret
scas
push
add
movsb
sti
push
mov
xor
notb
or
or
push
int
add
lods
popf
enter
mov
push
mov
stos
dec
sbb
pop
or
pusha
mov
add
shll
or
push
mov
scas
jno
fs
pop
data16
or
in
push
sbb
pusha
lcall
lea
xchg
or
icebp
sbb
lcall
stc
and
inc
retw
imull
cltd
clc
pop
gs
icebp
cmp
jle
jmp
aad
sti
filds
add
or
dec
add
and
add
imulb
cmp
lret
adc
sbb
test
xor
sbb
fisubrl
cltd
iret
mov
das
adc
sub
fptan
push
aaa
js
xchg
add
aad
rclb
imul
or
scas
js
and
sarl
xorl
out
shl
scas
into
mov
jmp
fwait
sub
xor
scas
test
sub
bound
test
push
push
mov
jne
fldl
pop
pop
push
jne
inc
iret
or
hlt
enter
decb
or
call
rcrb
rclb
jmp
lahf
push
xchg
push
sti
mov
xchg
sbb
testl
ljmp
mov
stos
xchg
push
sbb
add
add
push
push
out
inc
mov
add
das
pusha
sub
test
xor
pop
cld
or
inc
sbb
ljmp
sbb
enter
sbb
loop
inc
rclb
lods
les
sbbb
test
add
mov
push
sarb
push
shlb
call
sbb
adc
cmp
xchg
sbb
xor
aad
jecxz
xchg
sub
sub
mov
pusha
and
mov
add
cmp
jmp
push
adc
jo
loopne
shr
adc
xchg
addl
xchg
jne
push
cmp
xor
inc
sti
int3
int3
or
jle
lock
mov
adc
into
ficoml
push
repnz
lods
xchg
cmp
cmp
mov
dec
jbe
pusha
adc
push
mov
push
mov
sbb
test
inc
enter
cmp
add
inc
idiv
adc
xor
mov
loopne
pushf
push
pusha
jb
filds
push
jns
push
mov
popa
pop
sbb
dec
push
xchg
stos
daa
xor
jp
icebp
test
adc
loop
jle
mov
cmpsl
and
sub
and
gs
pop
cmp
dec
cmpsb
sub
adc
sbb
jp
cmp
adc
test
mov
sub
xchg
adc
stos
rol
lret
push
cwtl
mov
sbb
xchg
adc
add
add
jg
mov
and
mov
inc
push
testl
push
inc
push
dec
cmp
rolb
clc
inc
sbb
test
push
sbb
pop
mov
lock
clc
sbb
cmpsl
xor
stos
or
mov
rorl
xlat
inc
jno
xor
and
aad
push
add
das
inc
in
xor
add
push
cmp
jecxz
adc
jle
clc
or
ljmp
or
scas
inc
mov
sbb
lock
mov
adc
mov
xchg
adc
jo
pop
adc
or
cmp
mov
das
dec
movsl
jo
inc
lods
or
and
loop
dec
mov
sbb
mov
dec
sub
sbbb
xchg
cmp
test
push
test
or
mov
lret
inc
mov
jb
arpl
cmp
lcall
mov
push
xchg
or
js
shrl
or
shlb
test
sbb
leave
sti
iret
push
add
sub
adc
imul
mov
lret
out
push
int
push
pop
movl
filds
xor
push
das
repnz
or
sub
push
lods
jp
xchg
add
in
push
imul
test
jmp
push
mov
push
mov
aaa
xchg
test
add
loopne
jb
pop
into
push
test
outsl
das
pop
mov
adc
mov
push
jne
cli
push
mov
inc
push
sbbl
addb
ss
push
push
lcall
popf
sub
das
push
cs
inc
es
rclb
ja
inc
inc
imul
ret
inc
cmp
movsb
xchg
push
in
inc
add
clc
lret
test
sbb
mov
mov
or
push
add
es
fstps
aam
jo
push
pop
les
sub
stos
dec
out
push
mov
lret
jb
xor
je
inc
xchg
inc
add
ret
scas
cli
getsec
inc
vmxoff
jnp
lea
pop
xor
shrb
push
repnz
adc
mov
add
pop
enter
mov
push
mov
inc
pop
ret
push
shll
adc
add
or
jo
testb
lock
mov
stos
xor
pop
adc
mov
cli
adc
add
call
jmp
test
push
adc
mov
orb
cwtl
xor
jno
rcr
add
push
mov
push
std
adc
sbb
sub
and
hlt
add
lods
pop
popa
lods
loop
xor
dec
and
pop
xchg
add
or
inc
ja
pop
xor
movl
fsubr
pop
sub
lock
stos
and
pop
lds
sbb
loop
jge
push
loope
test
mov
leave
mov
icebp
ret
add
testb
add
call
cmp
add
adc
clc
push
in
fstl
and
lret
or
xlat
nop
lods
daa
std
xlat
cmp
mov
lret
icebp
lcall
push
mov
adc
xchg
popa
mov
lock
inc
and
add
imul
pop
cmpsl
inc
mov
into
push
xor
cmc
hlt
push
xchg
adc
nop
jecxz
mov
in
outsb
arpl
and
test
inc
mov
lock
lret
sub
xchg
mov
adc
icebp
into
in
mov
out
adc
or
sbb
lea
inc
int
mov
and
pusha
add
adcl
mov
mov
xchg
ds
and
in
mov
hlt
cmp
inc
pop
jmp
jb
daa
imul
or
add
sub
mov
rcr
sbb
scas
pop
pop
adc
mov
inc
mov
les
dec
push
fisubs
enter
ret
icebp
bound
or
inc
xor
outsl
sbb
push
loopne
sahf
popf
enter
rol
mov
out
push
pop
pop
jne
push
cmpsb
jo
fistl
push
mov
rol
or
inc
lret
das
push
pop
test
add
sarb
sbb
mov
negb
scas
pushf
call
pop
pextrw
mov
xor
ret
ja
mov
rcrl
xor
pop
sbb
jmp
and
cwtl
jns
mov
int
xlat
ljmp
lcall
enter
pusha
mov
xchg
xchg
fiaddl
sti
ret
or
mov
je
add
push
sbb
inc
test
fwait
mov
adc
mov
pusha
push
and
adc
add
push
test
mov
sbb
add
cli
pop
and
jb
lcall
adc
cmp
xor
pop
out
jecxz
lcall
adc
sub
pop
sbb
inc
xchg
inc
cmp
adc
jp
sub
call
inc
fisubl
inc
push
push
daa
push
add
lds
add
dec
push
and
jne
or
sbb
cmpsb
jbe
or
addb
inc
cmp
mov
clc
pop
xor
test
call
adc
sub
adc
cmp
shll
push
imulb
push
sub
cmp
adc
dec
mov
jl
jb
das
mov
out
testb
mov
test
jne
cmp
pop
jno
mov
dec
test
pop
add
faddl
dec
shll
pop
lds
dec
adc
push
or
mov
js
mov
popa
movsb
adc
ret
push
cltd
jp
rcl
in
mov
jnp
and
mov
sbb
and
jp
lahf
or
mov
lds
inc
mov
mov
movsb
sarl
data16
fidivl
mov
add
aas
adc
lods
mov
sbb
test
negb
pusha
add
or
sarl
mov
adc
mov
cli
mov
inc
movsb
or
shl
sbb
add
add
dec
lock
ficoml
pusha
pop
push
sbb
sub
rcrl
sbb
enter
jbe
and
icebp
push
xor
pop
arpl
out
adc
mov
cmp
and
dec
push
inc
data16
sub
cwtl
sti
and
call
inc
dec
push
test
testl
lret
mov
and
sbb
stos
jg
cmpsl
rol
out
stos
out
or
adc
adc
cmp
adc
jl
arpl
mov
push
out
ror
mov
loop
xchg
add
push
scas
fwait
xorb
addl
mov
test
and
cmp
jge
jle
push
and
cmp
dec
and
adc
sbb
scas
rorb
push
fisttps
stos
lock
in
lret
shlb
pop
push
outsl
jae
sub
mov
or
imul
sbb
enter
stc
xlat
test
mov
loop
test
dec
adc
enter
sbb
inc
add
aad
xor
aam
cwtl
inc
gs
mov
push
cmp
inc
mov
adc
or
adc
fwait
push
push
loop
push
push
dec
push
xorb
rcl
adc
push
push
pop
sub
pop
scas
jbe
xor
lret
pop
iret
iret
jo
stos
inc
aam
movsb
sarl
or
push
sub
stos
pop
push
pop
mov
popl
scas
cmp
add
test
lock
inc
push
js
pop
mov
or
push
scas
push
loope
xchg
add
mov
inc
ret
and
push
sbb
xchg
sub
mov
adc
test
dec
aam
or
xchg
push
lret
cmp
sub
jg
arpl
adcb
sbb
ds
call
adc
push
test
jl
js
mov
add
jo
pop
add
cmp
push
fcompl
xor
shlb
daa
scas
sub
sbb
sbb
sbb
mov
xchg
or
mov
add
rcrl
test
inc
pop
test
cmpsb
jae
pop
sbb
pop
adcb
pop
cmp
rol
adc
pop
rclb
pop
pop
enter
or
pop
or
into
xchg
or
xchg
jle
shl
stos
inc
jo
leave
std
push
cmpsb
test
gs
or
push
test
push
pop
push
out
sbb
push
xor
sub
add
or
or
out
icebp
mov
add
cmp
xchg
mov
ds
shlb
stos
or
sub
xchg
mov
add
push
cltd
shlb
jecxz
cs
scas
mov
or
mov
xchg
jne
push
add
leave
je
sub
rcrl
and
mov
hlt
adc
lret
fwait
jp
pop
xorb
rorl
add
pop
push
inc
sub
push
xor
adc
inc
scas
lcall
scas
and
mov
ljmp
or
cwtl
test
pop
sti
xor
mov
push
inc
add
test
jb
mov
pusha
or
ficompl
cltd
test
inc
pop
add
dec
in
push
sub
aaa
mov
or
xor
xchg
sub
scas
xlat
js
push
mov
push
mov
jge
test
push
mov
mov
lret
and
adc
into
push
popf
sub
addl
push
pop
aaa
insb
push
add
scas
imul
pop
clc
and
sub
mov
jb
add
clc
push
lret
cmp
dec
add
leave
dec
add
test
mov
lds
xor
rcrb
push
cmp
dec
fmull
sub
push
mov
mov
mov
cmpsb
push
into
lcall
push
adc
sbb
scas
andl
jle
cli
mov
cmpsl
sbb
and
mov
shll
dec
sub
add
mov
mov
in
rcrb
push
test
jbe
adc
ficoml
or
adc
or
xchg
adc
add
inc
or
and
outsb
add
add
inc
loopne
out
pop
test
mov
sbb
ljmp
addb
test
push
sbb
jno
add
sbb
dec
ljmp
mov
insl
cwtl
loopne
test
xchg
cmp
push
mov
and
xor
enter
adc
adc
mov
addb
inc
mov
orl
push
jle
jne
jmp
jo
hlt
mov
mov
js
stc
xchg
fsubrl
adc
enter
jnp
inc
jb
push
cmp
out
cmp
add
fsubl
sbb
cmpl
lahf
ja
lock
push
mov
adc
cmp
xchg
notb
arpl
inc
rclb
or
xor
xchg
js
cli
mov
je
inc
pusha
test
fmul
rorb
stc
adc
popa
jo
and
jl
sbb
aam
push
jns
jp
loopne
sbb
pop
xor
push
into
mov
das
pusha
push
popa
leave
mov
jne
shlb
push
mov
imul
sbb
jp
adcb
xor
xchg
xor
xor
lods
push
inc
adc
out
lods
sbb
mov
mov
push
xchg
mov
mov
jo
popf
and
fsts
loop
mov
xchg
inc
cmp
dec
push
push
stos
call
sbb
or
test
add
xlat
pop
xchg
ret
sbb
inc
mov
push
inc
in
cli
cmp
stos
jge
add
pop
pop
push
xor
push
loopne
das
and
out
sbb
insb
add
add
mov
loope
xor
xor
or
fisubrl
or
movsb
push
clc
call
dec
and
test
push
mov
mov
or
push
cmp
bound
xchg
or
add
sbb
bound
xchg
sub
sbb
xchg
add
mov
les
ss
mov
dec
icebp
dec
dec
sbb
and
push
dec
push
lods
mov
mov
jns
cwtl
lods
ret
jmp
jb
por
filds
push
shr
xchg
mov
divb
inc
out
cmp
jecxz
or
mov
test
adc
cmp
push
xor
shl
popa
and
jo
push
xorb
adc
mov
sub
fistl
lds
mov
add
pusha
add
in
add
iret
mov
andb
jnp
cmc
test
xchg
sub
aaa
das
xor
sti
sbb
enter
cld
lock
add
gs
aam
push
pusha
mov
xor
out
mov
push
adc
mov
mov
pusha
and
mov
mov
push
push
sbb
push
mov
push
pop
popa
add
ljmp
add
push
sbb
inc
test
and
into
mov
mov
add
jb
aaa
arpl
push
xchg
and
shlb
jl
stos
fwait
push
adc
int
test
bound
orl
push
bound
cmp
mov
cmc
jg
xchg
dec
mov
sbb
push
sub
rcll
or
sti
xor
or
or
negb
add
sarb
xorb
mov
mov
cmp
mov
je
dec
movsb
sub
and
orb
sahf
popa
sbb
cwtl
stos
xchg
into
sbb
cmp
push
out
push
shr
sub
push
xchg
add
mov
pop
mov
sub
xchg
or
or
add
add
cmc
mov
es
out
stos
pop
lea
loope
int3
scas
mov
into
add
lods
bound
adc
add
cmp
pop
push
inc
insl
jmp
pop
mov
cmp
shll
sbb
pop
and
inc
aad
sbb
adc
sub
lock
and
dec
test
and
xchg
imul
sub
das
ret
lods
xor
add
cld
andl
cmp
mov
dec
xchg
mov
ja
pop
jo
aam
dec
jns
push
add
pop
int
rorb
ss
inc
popa
loope
shrl
xchg
in
xor
mov
test
inc
sub
stos
ret
mov
push
mov
sbb
xchg
bnd
lock
and
or
and
mov
mov
insl
rcll
or
roll
lret
inc
subb
mov
test
jge
or
push
adc
bnd
add
psubb
mov
ret
sbb
lods
pushf
push
push
mov
in
inc
subb
mov
adc
push
xor
sbb
call
leave
arpl
add
or
fwait
xchg
and
dec
addr16
fs
loope
jae
xchg
scas
sbb
add
roll
ret
addb
pop
add
lea
rol
push
js
dec
jp
js
add
js
jo
xor
or
fldln2
jnp
inc
test
fwait
sbb
pusha
mov
fstl
adc
leave
adc
mov
xor
cmovnp
mov
mov
pop
scas
insl
test
pusha
out
cmpsl
push
out
xchg
sysret
adc
hlt
loop
pusha
mov
lcall
mov
sub
mov
inc
test
mov
repnz
adc
push
add
sbb
pop
rorb
shll
mov
lret
js
das
mov
sbb
push
aad
sub
lret
mov
test
stos
out
arpl
or
xor
mov
sbb
sbb
xchg
aad
inc
sub
pop
bound
lds
pushf
adc
cmp
mov
lods
jecxz
das
or
mov
cmpsb
cmp
rorb
sbb
or
push
cmc
mov
mov
push
add
fcmove
ret
mov
or
mov
or
inc
adc
sbb
sub
stos
icebp
int3
adc
mov
mov
inc
movsl
inc
push
pop
adc
adc
xlat
pop
inc
test
push
adc
dec
aam
or
repnz
ret
push
test
in
cmp
mov
or
nop
inc
mov
daa
adc
add
or
and
stos
jp
inc
sbb
lret
lret
jno
fcmovnb
aas
push
and
xchg
in
add
and
pop
jg
jnp
push
xor
cmp
push
adc
push
push
mov
test
dec
adc
add
mov
pop
sbb
add
mov
arpl
nop
add
cmp
mov
xor
dec
adc
sbb
and
mov
pop
mov
test
push
out
test
or
mov
inc
xor
inc
pop
or
push
out
pop
adc
rorl
or
test
mov
push
cmpsl
add
push
cmpsl
sbbb
inc
mov
sbb
sbb
les
push
cmpsb
repz
aam
push
sbb
xchg
bound
sahf
mov
sbb
push
scas
sub
in
add
sub
sub
adc
lcall
add
test
sbb
stos
inc
xchg
xchg
lcall
in
cltd
jp
adc
inc
sub
ret
mov
gs
mov
or
mov
sbb
xchg
add
push
adc
push
out
ror
mov
popf
sbb
mov
cmpsl
subb
loop
mov
rcll
rol
cmpsl
ret
cmpsb
loope
bound
iret
mov
push
sbbl
stos
arpl
cld
adc
xor
ja
bound
or
push
jno
nop
mov
dec
ljmp
cmp
inc
or
lods
jge
mov
mov
jb
popf
and
adc
cld
shlb
push
add
sub
daa
sbb
or
dec
subl
xor
inc
imul
jne
mov
inc
mov
or
and
dec
aas
stc
data16
cwtl
xor
mov
push
es
adc
lock
loopne
pop
lods
inc
addl
push
cmp
sbb
mov
int
cmp
mov
push
push
out
aam
add
into
bound
jo
xchg
xchg
and
pop
imul
mov
or
cmp
ret
pop
scas
and
mov
in
lds
outsb
xchg
cmc
sbb
insl
and
ret
dec
jb
or
push
cwtl
shrb
or
inc
stos
lea
inc
push
pusha
nop
cmc
ret
dec
sbb
jle
push
insl
test
cmp
fisttpl
pop
inc
xor
hlt
mov
mov
and
push
jno
cs
adc
mov
loop
push
push
and
into
mov
int
lods
sahf
rolb
or
xchg
addl
adc
push
push
shrb
mov
sub
pop
push
lods
ss
data16
lea
inc
inc
jmp
ret
hlt
mov
arpl
mov
repz
adc
cmpl
xor
bound
fdivrs
call
mov
pushf
push
roll
mov
outsb
or
sbb
push
mov
mov
mov
inc
adc
jnp
or
ror
pop
and
and
xor
xor
aad
test
popa
dec
or
mov
js
jle
dec
icebp
mov
fldenv
cmp
fstpl
xchg
mov
sub
sbb
jo
add
xor
adc
push
pop
jmp
xor
or
mov
mov
inc
add
lret
or
and
stos
adc
and
pop
andb
icebp
jne
sbb
add
mov
and
inc
mov
push
jo
mov
test
sbb
clc
push
sub
js
imul
bound
nop
mov
cs
add
sbb
enter
aam
fwait
sbb
mov
sbb
daa
ret
xor
lock
call
call
leave
mov
insb
test
rolb
test
aam
stos
icebp
add
inc
xor
loopne
movsb
lret
push
mov
mov
roll
js
jb
push
js
jne
pushf
and
sbb
fiaddl
inc
xchg
push
into
inc
lods
incl
jo
in
rclb
rcll
es
add
lods
lock
fs
mov
and
jl
fmull
movsb
andb
jmp
mov
rolb
and
sbb
mov
mov
ss
or
mov
cmp
rorl
sub
xchg
sbb
push
push
sbb
mov
dec
sbb
sub
out
xor
mov
push
and
xchg
or
push
and
xchg
imul
mov
adc
inc
mov
add
adc
pop
sub
cltd
es
add
dec
filds
push
shll
icebp
push
push
cs
sbb
outsb
jbe
in
push
cwtl
testb
nop
cmp
mov
or
add
xchg
aam
xchg
push
jnp
in
adc
xor
push
add
aad
cli
movb
add
or
inc
pop
test
mov
jo
enter
insb
jp
and
add
sarl
inc
in
addb
add
mov
dec
cltd
and
cmp
sub
scas
or
pop
in
push
cmp
in
cwtl
aad
adc
lods
ret
mov
push
add
adc
sub
je
cmovs
imul
sub
sbb
movb
ret
outsb
test
lcall
add
jo
stc
xchg
sub
orl
inc
aaa
dec
repnz
es
and
movsl
add
mov
and
loopne
sub
push
lcall
das
mov
push
cwtl
xor
aad
dec
int
test
pop
sub
pop
inc
mov
xchg
jb
int3
sarl
in
loop
ret
sbb
repnz
push
jge
mov
dec
ljmp
shr
or
mov
jne
ljmp
sub
mov
inc
mov
addl
push
sbb
or
js
or
bound
push
sub
push
movsb
enter
or
push
sbb
adc
mov
or
shrl
mov
or
sub
push
and
add
mov
add
or
add
mov
mov
and
sub
inc
loop
test
adc
out
mov
xchg
or
loopne
mov
and
xor
or
lods
mov
aad
add
push
dec
cwtl
push
ljmp
inc
cwtl
mov
jmp
mov
xor
adc
inc
stos
mov
and
js
das
pop
cli
add
test
add
iret
push
arpl
pop
adc
out
mov
dec
adc
lock
ljmp
daa
test
je
add
add
dec
test
inc
cmp
jp
mov
inc
sub
add
sbb
stos
or
andl
sub
and
xor
pop
lret
in
dec
inc
es
ret
cs
dec
pop
es
jns
imul
push
or
rorb
jmp
inc
cmpsb
or
mov
mov
int
sub
aad
pop
pop
clc
and
push
sbb
aad
add
lcall
mov
push
sbb
pand
or
add
pop
add
sbb
outsb
jmp
and
leave
dec
and
subl
cmp
adc
add
xchg
int
jge
ljmp
and
or
push
mov
mov
jbe
adc
push
shlb
push
push
std
mov
cwtl
mov
pop
mov
cmpb
inc
cmp
ret
adc
rorb
sbb
es
sti
pop
adc
push
pop
jge
push
jl
add
xchg
mov
add
pusha
or
unpcklps
test
or
leave
push
int
mov
add
adc
lahf
push
in
loopne
xchg
mov
sub
mov
mov
push
or
cmp
les
mov
push
xor
inc
clc
and
outsl
add
pushf
push
sbb
and
adc
sbb
sub
dec
xchg
xlat
into
adc
and
cmp
jbe
push
cmpsb
mov
pop
test
push
or
add
lock
mov
push
test
cmp
rorl
aas
nop
push
movsl
sub
arpl
or
rcr
stos
inc
sbb
adc
idivb
jb
pop
cmp
jg
loop
xchg
dec
add
push
sub
cmp
dec
or
adc
in
bound
dec
mov
jbe
mov
and
jp
scas
inc
add
sub
jnp
inc
lds
jo
mov
sub
in
xor
mov
jb
mov
cmp
cmpsb
mov
orb
loop
dec
arpl
add
and
inc
mov
push
sbbb
pop
adc
and
mov
sub
test
ss
fdivs
movb
dec
xchg
push
mov
sbb
sub
bound
inc
int
ret
sbb
inc
and
inc
stos
or
stc
sub
jp
outsl
xchg
sub
rol
mov
xor
lock
and
add
sbb
add
leave
stos
sub
pushf
xchg
add
stos
je
cmpsl
sbb
inc
jae
adc
push
inc
mov
loope
cmp
push
push
rcll
aad
stos
sbb
mov
repnz
mov
cltd
stos
dec
lcall
fists
add
jl
nop
add
lret
sbb
jo
call
or
dec
lods
ret
mov
jbe
stos
inc
psraw
fldl2e
addb
mov
shrl
sub
jnp
and
pop
push
sub
pop
or
xchg
orl
jno
xchg
je
push
addb
pop
add
pop
jno
pop
push
es
add
lds
cmp
int3
and
xor
cmp
sbb
add
add
nop
xchg
or
mov
mov
sub
gs
adc
daa
adc
rcrb
pop
pop
adc
rorb
push
inc
rorl
dec
add
cmp
sar
popf
addl
scas
mov
sub
mov
aad
push
pop
jmp
les
fdivrl
stos
dec
or
in
mov
dec
icebp
cltd
xchg
push
mov
fwait
sbb
adc
hlt
pop
lds
and
dec
or
dec
fucomip
lods
jb
vmwrite
mov
aam
and
cmp
inc
inc
je
xor
pop
or
adc
dec
adcb
cmpsl
xor
sbb
test
cmp
shl
popa
sub
inc
addr16
fs
fbstp
sub
xor
addl
jo
sbb
sbb
xor
jno
sub
adc
fcmovne
pop
adc
mov
sbb
and
call
popf
mov
jno
inc
inc
movsb
pop
inc
add
dec
add
das
rorb
lret
xchg
inc
test
add
sbbb
orl
push
push
xor
rolb
sbb
cmp
sub
loopne
add
jne,pn
jnp
lods
mov
push
frstor
and
cmp
mov
sub
jns
rcrb
daa
test
cmp
push
subb
jb
pop
mov
xchg
jmp
cmp
push
test
sub
lret
lock
mov
inc
xor
call
jae
in
push
xor
mov
iret
aaa
push
js
pop
sub
sub
or
adc
fiadds
inc
test
pop
lods
adc
push
cmpsb
sarl
or
das
push
and
push
outsl
push
push
push
test
test
call
mov
mov
mov
inc
je
cmp
repnz
rolb
jne
sbb
mov
pushf
stos
or
popf
jmp
fnstcw
addl
ret
mov
roll
push
faddl
xor
xor
push
push
mov
stos
clc
nop
mov
pop
xchg
mov
sahf
push
cmp
and
mov
inc
mov
push
lods
add
pop
cwtl
push
out
nop
pop
imul
xchg
inc
popa
adc
mov
rorl
inc
add
js
mov
incb
stc
mov
shrb
dec
loopne
lret
xor
stos
enter
loopne
cs
push
adc
into
and
xor
adc
ret
dec
test
push
mov
jecxz
push
mov
fldcw
ljmp
test
pop
mov
ret
jecxz
in
jmp
mov
arpl
bound
add
mov
xchg
mov
add
sub
xor
pop
lret
aad
lock
add
xor
jne
add
mov
sub
mov
pop
cmpsl
add
addb
pop
mov
orl
jl
dec
mov
pop
into
xor
scas
pop
mov
adc
sub
pop
push
cmpsb
jge
pop
scas
jle
repnz
push
adcb
adc
sub
add
movsb
mov
jne
inc
and
sbb
test
fbstp
inc
test
roll
clc
adc
jb
add
xchg
dec
int3
scas
inc
sbb
insb
lret
mov
test
js
pop
hlt
mov
pop
cmpsb
push
testl
jmp
dec
rclb
sarb
rcl
les
push
adc
xchg
adc
adc
sub
je
loopne
xchg
add
xor
pop
push
orb
addr16
es
adc
les
into
push
xchg
mov
les
cmpsl
mov
je
pop
sub
std
sbb
xchg
adc
aam
push
sbb
jmp
mov
bnd
sbb
add
adc
push
jle
stos
loopne
mov
dec
mov
and
sahf
jmp
push
lcall
rclb
sbb
xchg
and
hlt
and
shr
add
aad
scas
push
mov
leave
pop
push
pop
mov
mov
dec
mov
inc
shlb
and
shl
cmc
mov
jbe
in
pop
sbb
int
rclb
cmp
ret
push
pop
ja
add
mov
pop
sbb
sbb
add
mov
sub
push
ficoml
enter
fimull
push
adc
mov
mov
and
sar
dec
bound
or
mov
inc
or
pop
loope
cmp
inc
je
or
inc
mov
xor
adcl
xor
cwtl
add
enter
rorb
test
add
adcl
loopne
pusha
add
sub
adc
lea
les
daa
int3
sub
clc
stos
mov
add
fildll
pop
mov
inc
sub
clc
pop
fisttpl
js
xchg
push
decb
clc
xor
into
adc
cmp
add
out
setbe
adc
mov
ds
lods
shl
push
rcrb
inc
loopne
call
repnz
stos
xor
test
dec
adc
sub
lods
pop
add
cltd
pop
jno
push
xor
pop
aad
push
jo
mov
jge
xor
movl
imul
push
dec
mov
xchg
adc
sbb
mov
jge
push
scas
xor
inc
icebp
aad
add
cwtl
push
push
mov
fldenv
mov
rcrl
mov
pop
pop
adc
jo
jmp
sub
jmp
mov
dec
push
sbb
jl
jg
cmp
and
push
pop
test
daa
dec
jp
adc
outsl
lret
push
cmp
shlb
and
xor
jae
popa
add
in
jmp
rorb
pushf
dec
adcl
dec
sub
orb
cmp
dec
orl
addb
icebp
jno
leave
cli
add
pop
xchg
mov
push
rolb
out
or
pushf
or
lea
enter
push
and
mov
movb
js
pop
pop
xor
imul
add
sub
mov
fistpl
das
mov
push
lock
mov
or
loopne
fdivr
add
inc
mov
lds
test
inc
pop
mov
lret
fwait
aam
xor
inc
push
lret
push
jb
adc
push
scas
pop
movsl
inc
lods
in
push
lds
sbb
mov
aam
in
jb
lock
mov
pop
xchg
mov
jo
cmp
es
jo
ret
pop
and
xchg
clc
fadds
aad
loope
test
cli
and
or
data16
in
or
or
imul
add
je
sbb
test
dec
add
push
push
je
mov
addr16
inc
imul
push
mov
dec
adc
sbb
sbb
out
scas
lret
adc
adc
test
sub
add
adcl
pop
adc
sti
pop
xor
aam
cli
sbb
pusha
add
and
xchg
cmova
mov
mov
sbb
clc
test
adc
or
mov
and
xchg
xor
sbb
or
bound
fstpt
push
int
rol
mov
lods
jne
pop
adc
push
xchg
addb
sti
sub
xchg
sarb
and
call
dec
add
fxch
and
jo
jge
sbb
popf
dec
cmp
sub
sbb
inc
test
xor
jo
loope
jge
lcall
sbb
roll
mov
fldcw
loop
mov
sub
test
sbb
shlb
daa
ret
pop
repz
pop
adc
cmpb
sub
leave
xor
add
or
add
cmpsl
test
mov
cmp
pop
cmpsl
push
push
stos
adc
add
mov
inc
adc
inc
pop
aam
jecxz
ret
incl
adc
cmpsb
loopne
or
adc
loope
pop
mov
addl
sbb
sbb
loopne
push
cmpsl
jg
hlt
push
xchg
pop
xchg
ljmp
or
or
in
mov
imul
push
and
push
gs
push
push
in
xor
push
ret
jge
jno
or
or
pop
in
or
adc
sub
stc
cmpsb
mov
mov
inc
loope
addl
stos
pop
adc
push
dec
mov
adc
mov
test
daa
adc
or
pop
push
fsubs
xchg
test
xchg
jecxz
stos
lods
lret
stos
and
xchg
dec
add
mov
push
add
stos
icebp
ds
mov
jmp
shll
in
test
sbb
sub
je
es
xchg
or
test
aam
sub
jl
sbb
mov
inc
mov
data16
cmp
jp
sub
xor
xchg
inc
inc
lods
cmp
sub
test
ret
pop
es
std
movsl
sbb
add
out
shll
mov
xor
roll
add
inc
dec
mov
pushf
jb
lds
stos
adc
rorl
movsl
int3
dec
inc
test
push
xor
sahf
sbb
and
jne
add
test
rorl
mov
mov
push
test
adc
or
cmpsl
ljmp
das
xor
add
or
push
jnp
andb
addr16
ljmp
dec
adc
jp
cmp
mov
sbb
cmpsb
add
mov
and
adc
mov
addl
and
push
adc
xor
mov
inc
sub
call
or
inc
and
and
loope
sub
cmp
loope
cli
sti
lock
cld
adc
sbb
stos
inc
push
inc
cmc
mov
es
cvttps2pi
sub
and
pop
test
cli
into
and
dec
add
scas
push
push
add
add
mov
dec
loop
xor
jns,pt
xchg
dec
arpl
testb
push
add
adc
loopne
scas
out
push
inc
adc
adc
pop
clc
jle
es
or
nop
mov
hlt
or
or
data16
sbb
xor
sahf
lahf
push
insb
out
outsl
push
pop
movsb
sub
push
shll
rclb
rcrl
mov
jb
push
imul
pop
pextrw
call
adc
mov
push
and
push
mov
mov
xor
jo
pop
push
sbb
mov
test
call
push
jl
push
jp
out
ror
inc
cmp
jbe
and
jmp
cs
push
pop
icebp
mov
and
pop
push
or
jl
dec
dec
int3
or
mov
mov
add
cmp
pop
aad
ror
xchg
mov
in
sahf
cmp
icebp
push
sub
movsl
enter
jmp
push
sub
mov
inc
sub
ret
xchg
add
or
xor
push
mov
out
or
pop
push
mov
addl
push
pop
add
or
sub
inc
movsl
push
dec
push
jbe
jb
mov
cs
addr16
jae
mov
push
jnp
dec
jmp
xor
rolb
jp
adc
jp
push
loopne
inc
mov
sub
subl
mov
imul
lock
push
cmpsb
mov
add
cmp
add
mov
into
or
pop
icebp
adc
inc
adc
pushf
nop
sbb
mov
pop
daa
add
sar
mov
add
inc
cmp
inc
sub
xchg
add
inc
pop
rorl
add
mov
mov
lcall
or
jmp
pop
ret
roll
into
lret
sbb
sub
pop
push
cwtl
push
vunpcklps
push
in
sbb
cmp
loope
bound
push
xchg
test
pop
mov
lds
xor
and
lahf
cmp
jle
leave
push
pop
cmp
dec
add
push
inc
xchg
jp
push
xlat
sahf
xor
sbb
jb
inc
sbb
filds
push
sbb
mov
es
out
adc
mov
pop
loop
inc
test
int3
sub
jo
lds
or
add
scas
or
cmc
rolb
mov
jp
scas
inc
adc
or
xchg
insl
addr16
pop
out
sbb
pop
sbb
sbb
add
insl
sub
cmpsb
jbe
jbe
sbb
movsb
cltd
push
push
rcl
or
push
pop
movsl
scas
push
je
dec
ljmp
jo
lock
pushf
es
test
sbb
pop
add
jmp
js
jb
push
sbb
cmp
push
in
jnp
push
lds
adc
loope
mov
rcll
lea
xchg
addl
mov
push
inc
push
or
lock
jb
adc
or
mov
xlat
sub
pop
cmp
lret
xor
sbb
aam
xchg
push
xchg
and
ret
sbb
dec
js
dec
in
or
xor
mov
adc
in
push
xchg
push
sub
fdivrl
add
out
les
setb
cmp
bound
add
mov
or
mov
outsl
lcall
push
stos
push
jo
sbb
pusha
mov
mov
outsl
adc
leave
adc
add
adc
mov
mov
loop
xchg
adc
xchg
aaa
or
lahf
pop
subl
ret
xor
inc
pop
popf
pop
cli
push
xor
add
mov
lods
orb
testb
xchg
adc
or
dec
add
ret
in
rclb
lret
repz
shll
xor
sbb
jno
dec
je
dec
icebp
dec
pop
pop
add
jno
add
jne
mov
in
mov
mov
jp
dec
faddl
sbb
and
es
dec
and
or
cltd
lods
repnz
out
cmpb
dec
xchg
enter
je
andl
lods
or
sbb
mov
add
push
or
mov
adc
xchg
clc
loop
mov
lods
rcrl
mov
sbb
lods
mov
inc
add
inc
inc
ljmp
push
mov
sar
pop
adc
push
lahf
lds
push
rolb
push
or
add
inc
je
jmp
sbb
xor
dec
test
xor
mov
rolb
push
stc
jle
push
lock
or
aad
cmpsb
jbe
adc
adc
pop
into
enter
xchg
xchg
jb
cmpsb
pop
cmp
call
xchg
mov
and
and
pop
adc
sub
andl
mov
sub
sbbl
shlb
mov
cmp
loope
ljmp
xchg
inc
jnp
aam
dec
fistl
sub
insl
adc
sub
sbb
push
movsl
dec
xlat
push
inc
sub
cmpsl
xor
cmp
cmp
inc
inc
pop
sbb
push
inc
fisttpl
or
and
mov
or
dec
push
cmp
mov
cmp
sbb
mov
add
inc
cli
xor
loope
adc
push
push
test
imul
mov
cmpsl
push
sarl
fs
aad
cmp
iret
adc
jecxz
lret
pop
jg
pop
lea
mov
push
cmp
call
jge
fldl
cltd
pop
cli
lds
add
dec
push
jmp
roll
push
and
inc
icebp
aam
adc
or
adc
fsts
push
fistpll
aad
mov
cs
push
inc
shlb
in
pushf
cmp
sysret
rorb
add
or
lds
or
int
stos
sbb
lahf
sub
int3
shrb
stos
xor
leave
lods
test
in
pop
enter
push
dec
push
es
inc
mov
push
push
rorb
xchg
sbb
mov
adcb
popa
inc
and
pushf
iret
shlb
rorb
mov
push
lret
add
sbb
sub
adc
negl
cmp
mov
orb
in
mov
sub
sti
lods
mov
jae
and
insb
jl
inc
and
add
xor
jmp
mov
add
jmp
and
xor
ret
add
je
divb
ret
pusha
pop
es
rcl
push
inc
sbb
push
dec
cmovno
gs
mov
inc
push
es
pop
les
or
cmpsl
jne
enter
adc
dec
mov
testb
lret
call
jns
push
mov
dec
hlt
jle,pt
jp
push
xor
shll
fldl
aad
or
addr16
mov
sub
test
or
push
dec
xchg
or
and
cmp
mov
sbb
mov
jb
xchg
gs
loope
hlt
test
push
push
es
inc
xchg
hlt
add
xor
adc
lods
adc
pop
sub
mov
or
nop
rcr
push
push
and
icebp
rorb
jecxz
and
mov
scas
inc
loope
add
mov
call
sub
scas
cmc
shrl
pushf
mov
out
mov
cmp
clc
pop
ficoml
xor
mov
shlb
lret
push
loope
cmp
dec
rcll
cmp
sbb
add
sahf
mov
idivb
pushf
dec
inc
insb
loopne
sahf
cli
pop
int
sub
mov
xor
push
sbb
push
jmp
addl
ret
dec
xchg
adc
push
rolb
cmp
test
pop
mov
rcll
mov
add
or
aam
pop
mov
rcrl
adc
mov
mov
ds
mov
hlt
add
push
fwait
mov
push
ljmp
jecxz
cmpb
adc
adc
daa
add
mov
pop
mov
shrl
imul
inc
xchg
mov
cli
and
sub
in
ljmp
inc
aam
mull
outsb
into
push
movsl
mov
out
in
fdivrs
js
fisttps
or
test
pop
icebp
mov
cmp
lea
ror
xor
xchg
pop
jno
enter
pop
inc
cmpsb
ror
loopne
push
test
fiadds
mov
jbe
testb
mov
dec
push
aaa
inc
push
popl
test
stos
mov
and
cmp
scas
push
enter
mov
movsl
jge
xchg
sbb
add
cmp
incl
orl
sub
xorb
aam
add
push
jo
lahf
xchg
inc
jae
aaa
out
ret
roll
inc
mov
addb
sbb
nop
mov
adc
sti
mov
pop
sbb
rcrb
or
sbb
cmp
js
push
mov
or
rclb
aas
add
mov
and
loopne
mov
jo
add
cmp
add
cmpsb
and
dec
les
or
mov
scas
inc
je
cmp
add
xor
inc
loope
jno
call
subl
pop
mov
cmp
pop
or
inc
ds
inc
orl
addr16
pop
cwtl
jno
cmp
rcrb
xor
insl
sbb
add
mov
dec
inc
mov
sbb
xchg
mov
pop
xor
out
stos
pusha
push
int
cmp
mov
les
cli
mov
adc
push
mov
sbb
xchg
insb
xchg
in
and
mov
fistps
jns
ljmp
shrb
into
mov
in
mov
mov
ss
dec
inc
adc
mov
push
popf
add
sub
adc
xchg
stos
pop
sbb
dec
or
repnz
add
cli
adc
add
ljmp
pop
push
or
in
push
sub
stos
in
sub
inc
ss
mov
ret
mov
jns
test
push
add
jecxz
pushl
push
push
xchg
popf
sarb
dec
fisubs
add
lahf
mov
ds
pop
mov
pop
je
lret
jle
imul
jae
cli
pop
loop
lret
cmp
inc
fs
and
sub
push
xchg
andb
pop
lcall
pop
push
xor
pop
adc
xor
xor
ror
data16
sub
jno
xor
cmp
pop
mov
int3
push
dec
roll
insl
adc
stos
es
dec
and
mov
out
loopne
ljmp
inc
leave
cltd
cmp
jle
and
and
push
inc
jp
roll
adc
mov
sbb
or
add
or
rorl
xchg
mov
imul
stos
mov
test
push
add
push
adc
andb
push
test
hlt
cmp
aad
xor
xor
xchg
js
mov
and
xor
lock
loopne
out
adc
inc
push
mov
jl
adc
pop
jp
cltd
popf
dec
mov
pop
inc
inc
jbe
pop
add
push
or
inc
test
std
push
lock
rcrl
adc
mov
pop
inc
popf
mov
push
test
sbb
mov
call
mul
push
push
test
shll
ret
inc
ror
in
hlt
push
popf
mov
icebp
lahf
xchg
clc
cmp
push
jnp
loope
sbb
add
mov
lcall
cltd
mov
pop
lcall
add
mov
xchg
loopne
add
sub
aam
mov
pop
ret
dec
pop
pop
in
test
or
push
pop
mov
shlb
adc
jo
or
mov
enter
sbbb
mov
pushf
sbb
cli
push
jo
xor
sbb
std
mov
sub
movl
stc
testb
stos
mov
mov
sbb
iret
lahf
aas
call
pop
sbb
push
xor
out
dec
sub
out
sbb
lahf
aas
sub
dec
imul
out
pop
call
test
cld
mov
lock
mov
and
in
xor
pop
dec
dec
pop
fs
or
jg
cld
stc
sub
sub
ljmp
aaa
add
and
aas
cld
mov
mov
lret
xor
mov
cld
stc
repz
fdivl
adcb
movsl
push
repz
lahf
aas
jg
addr16
andl
repz
int3
pushf
jbe
std
mov
adc
sarb
jbe
aas
jg
test
mov
rcll
stc
repz
divb
inc
push
mov
cmc
arpl
jg
cld
add
imul
in
pop
lahf
inc
mov
lahf
ret
mov
int
push
jo
jg
cld
stc
insb
leave
pop
in
push
ja
test
mov
xor
out
lahf
aas
shlb
sbb
pop
push
jo
jg
stc
repz
adc
test
testl
out
lahf
loope
mov
cltd
or
jo
movsl
sub
jg
cld
stc
adc
fsubr
jnp
ljmp
in
sbb
je
test
enter
xor
repnz
xor
jg
cld
stc
rcrl
dec
sub
icebp
pop
xchg
mov
stos
das
out
lahf
aas
sbb
mov
push
or
mov
mov
lret
and
lcall
lods
popf
mov
jg
add
add
jl
jmp
stc
repz
test
and
push
ss
out
es
lahf
aas
jg
test
icebp
fsubr
lcall
repz
and
fcomps
inc
roll
test
outsl
aas
jg
cld
fistps
and
out
shl
into
cmp
repz
lahf
inc
xor
mov
sarb
in
pop
pop
add
jno
lds
call
cmp
jmp
cld
stc
repz
movsl
loopne
pop
ja
and
cmc
fwait
es
dec
jae
enter
jecxz
pusha
mov
sahf
sbb
cmp
jl
cld
stc
repz
rorb
sahf
xchg
lds
iret
lahf
aas
jg
xchg
lea
or
aam
stc
repz
sub
pop
int3
imul
fisttpll
pop
imul
xor
ja
outsl
lcall
int
xor
call
loop
cli
pop
jg
rcrb
mov
or
lahf
xor
iret
lahf
aas
xchg
pop
push
dec
cli
loope
mov
and
cld
stc
repz
or
sub
mov
mov
lahf
aas
jg
push
test
mov
enter
stc
repz
ja
inc
xor
sub
nop
xor
jg
mov
arpl
aaa
mov
jo
stc
repz
flds
mov
mov
fwait
xor
xchg
aas
jg
cld
jae
xor
pop
bnd
fstpt
repz
lahf
out
add
mov
test
sti
jg
cld
stc
cmpsl
fnstsw
in
lea
cmp
iret
lahf
aas
add
mov
push
test
lret
cld
stc
repz
leave
or
xchg
faddl
wrmsr
iret
lahf
aas
jg
ret
sbb
dec
in
cmp
cld
stc
repz
lds
dec
adc
iret
stc
inc
test
xchg
cmp
call
sbb
repz
xchg
pop
lcall
pop
inc
jno
add
mov
arpl
mov
or
out
lahf
aas
rcrl
pop
scas
and
jmp
cld
stc
repz
aas
mov
mov
movl
aam
andb
lods
imul
sbb
xchg
push
jb
pushf
mov
test
popf
lahf
aas
jg
and
lea
je
rcl
mov
loopne
test
repz
adcl
mov
cmpsb
lock
scas
add
aas
jg
cld
mov
or
lods
jle
inc
idiv
pushf
sbb
popf
repz
lahf
pop
movsl
aad
mov
mov
sub
andl
or
outsb
sahf
jecxz
lahf
aas
jo
les
xcrypt-ofb
cmpsl
outsl
aas
jg
cld
cld
repz
mov
adc
xchg
cmc
int3
mov
repz
lahf
stos
or
mov
jp
aas
pop
stc
stc
dec
dec
jmp
popa
rcll
out
lahf
ss
xlat
adc
js
aaa
mov
cld
stc
or
lret
pop
jl
xor
mov
iret
lahf
aas
push
test
mov
test
cmpsb
cld
stc
repz
jbe
push
or
sub
xchg
lahf
aas
jg
scas
mov
das
mov
cmc
addr16
cmp
repz
dec
and
popa
xor
fadd
jbe
lahf
aas
jg
rol
inc
or
sbb
push
ds
fnsave
repz
imul
lock
jg
cld
push
inc
xor
push
ret
or
pop
out
cmp
out
lahf
push
outsb
dec
addr16
push
subl
jg
cld
stc
lods
sbb
or
outsl
mov
scas
popf
mov
sbb
iret
lahf
aas
pusha
pop
and
cs
cmc
inc
pop
shrb
test
inc
pop
push
outsl
sbb
ds
out
mov
aas
jg
sahf
and
sti
arpl
leave
movsb
repz
stos
cld
stc
repz
mov
es
xor
mov
lahf
aas
jg
sbb
fxch
shll
mov
out
movsb
mov
out
bound
in
jg
cld
mov
pop
or
pushf
ficomps
repz
lahf
or
shl
mov
aas
mov
cmp
jg
cld
stc
mov
mov
jg
inc
sub
sti
idiv
out
lahf
aas
pop
int3
cli
lods
mov
pusha
cld
stc
repz
jp
lret
cmpsb
pop
sbb
cmp
iret
lahf
aas
jg
sti
enter
mov
and
mov
and
insb
outsl
cmp
addr16
aas
jg
or
add
or
stos
out
loope
xchg
js
repz
mov
sbb
adc
aas
pop
stc
scas
sub
idivb
leave
mov
iret
inc
or
loop
das
push
pop
jne
stc
repz
cld
bound
loop
mov
cmp
jg
cld
push
dec
cld
aaa
mov
test
jmp
rolb
out
lahf
cli
or
les
iret
or
push
jl
xchg
pop
pop
sub
xchg
sbb
iret
lahf
aas
bound
pop
insl
add
jnp
cld
stc
repz
lock
int
mov
pop
iret
lahf
aas
jg
ja
pop
xchg
add
mov
mov
ds
stc
ret
enter
nop
and
push
cld
cld
or
cmp
add
mov
lahf
push
jo
mov
and
repz
inc
inc
adc
add
sub
jg
cld
stc
ljmp
insb
sub
or
out
out
lahf
aas
loop
bound
sbb
out
cmpsl
cld
stc
repz
mov
sbb
add
sti
jecxz
lahf
aas
jg
add
pop
jge
dec
mov
cmc
xor
cld
stc
repz
cmp
push
push
outsl
add
pop
jns
stos
dec
cmp
popf
pop
cltd
notl
and
repnz
ret
sbb
shrl
out
fs
out
lahf
push
push
test
jnp
pop
or
cld
stc
rep
dec
stos
lahf
jg
mov
adcb
in
pop
lods
jle
mov
loop
mov
pop
sub
stc
repz
stos
mov
mov
test
jg
cld
add
push
js
sbb
jne
jnp
insl
add
lahf
ds
adc
xchg
les
int
adc
jg
cld
stc
adc
mov
pushf
jo
jnp
out
lahf
aas
shrl
scas
jmp
in
cld
stc
repz
add
sbb
idivb
aas
jg
or
leave
sub
inc
pop
dec
cld
stc
repz
pop
bound
cmpsl
xchg
or
test
lahf
aas
jg
fstl
xor
mov
decl
repz
dec
sbb
inc
or
in
aas
jg
cld
add
cmp
add
int
enter
xchg
fcomi
out
lahf
mov
inc
lcall
jg
cld
stc
adc
mov
add
jmp
mov
lret
pop
out
lahf
aas
addr16
cmpxchg
test
xor
stc
repz
push
mov
adc
outsb
lods
stc
iret
lahf
aas
jg
fisubl
mov
mov
cmp
cld
stc
repz
in
popf
jno
out
outsl
adc
lahf
aas
jg
hlt
sub
mov
mov
insl
stc
repz
push
mov
repz
cld
dec
push
adc
ljmp
hlt
in
lahf
cmp
jns
push
outsb
jle
xchg
out
lahf
jg
bound
add
or
repz
or
push
stc
repz
jbe
lret
xchg
lahf
jnp
sub
lahf
aas
jg
out
jecxz
dec
add
fs
lret
add
insl
out
stc
repz
sub
mov
pop
sub
aas
jg
cld
jp
push
fsubp
jmp
adc
mov
lahf
test
lods
and
cli
jl
cld
stc
data16
sti
inc
hlt
jl
repz
mov
xchg
lahf
aas
pop
lcall
rcll
pop
stc
repz
sub
hlt
dec
xbegin
push
inc
fwait
aas
jg
cld
xor
stc
and
ss
xor
push
repz
lahf
movsb
or
cwtl
or
or
aaa
cmp
jg
cld
stc
ret
jbe
and
xor
inc
pop
scas
mov
sub
iret
lahf
aas
jo
pop
loope
shr
pop
mov
cld
stc
repz
fwait
jecxz
pop
movsb
xor
mov
aas
jg
add
daa
jne
sub
sbb
ret
nop
mov
stc
repz
jge,pn
shrb
and
mov
in
in
jg
lahf
aas
jg
ss
imul
lock
sub
iret
pop
cld
dec
mov
ljmp
adc
cld
pusha
cld
testl
pop
mov
lahf
out
adc
andb
inc
nop
jp
mov
daa
je
sub
add
cs
jbe
cld
push
pop
out
lahf
aas
test
cmpsb
mov
or
pop
xchg
scas
pop
cld
stc
repz
dec
add
jmp
mov
push
fldl
mov
shlb
int3
fwait
mov
stc
repz
sub
pop
out
neg
lods
sti
jno
iret
lahf
cld
adc
cld
mov
js
cld
stc
repz
loope
int
pop
fidivl
ljmp
jle
leave
jb
mov
pushf
fldenv
cld
stc
repz
mov
mov
ljmp
inc
sbb
jo
in
cld
stc
repz
cli
dec
sub
cmpsl
popf
or
rclb
jbe
lahf
aas
jg
cmp
pop
mov
faddp
rolb
xor
jle
nop
lahf
aas
jg
scas
scas
add
into
les
pop
loope
mov
repz
jmp
test
mov
ficompl
xchg
aas
jg
cld
sbb
movl
mov
and
out
lahf
fldcw
sub
test
fidivrs
cmpl
cwtl
sub
add
mov
out
lahf
aas
clc
cmpsl
mov
lret
std
dec
cld
stc
rep
pusha
pop
push
jmp
push
push
adc
lahf
aas
jg
xchg
or
movsb
xlat
stc
cld
stc
repz
add
sbb
sub
es
sbb
lahf
aas
jg
add
mov
mov
fdivrp
repz
dec
cwtl
cmc
xchg
bound
setge
movsb
xor
aas
jg
cld
jnp
xor
call
ret
leave
iret
lahf
dec
mov
in
inc
outsb
fdivl
out
dec
insb
mov
inc
adc
sub
lahf
aas
cmp
push
mov
and
adc
repnz
rcrb
ret
into
aas
jg
mov
testb
push
outsb
fidivrl
iret
lahf
xor
test
clc
ret
cld
push
jg
cld
stc
pop
fwait
mov
js
cld
adc
insb
in
add
iret
lahf
aas
mov
or
or
dec
push
shl
cld
stc
repz
sarl
jecxz
sbb
stos
iret
lahf
aas
jg
in
hlt
pusha
sbb
ror
rorl
and
stc
repz
icebp
fs
subl
aad
out
xor
jl
mov
je
pop
sti
jg
lret
inc
repz
lahf
pop
push
lock
push
jecxz
jg
cld
stc
mov
sub
ss
loope
add
repz
pop
and
xor
shr
arpl
ss
pop
mov
add
cmpsb
adc
repz
adc
dec
jge
xchg
add
xchg
sub
jle
cld
add
xchg
shrl
cltd
es
scas
adc
dec
cld
stc
pause
mov
inc
and
cmp
push
in
out
aas
jg
cmpsb
test
in
shlb
inc
leave
cld
stc
repz
sbbb
adc
fwait
and
lahf
aas
jg
insb
mov
mov
dec
cld
stc
repz
out
ss
pop
cmpsl
push
movsl
mov
decb
cmpsb
sbb
mov
sar
repz
jae
and
mov
adc
cld
icebp
sbb
addr16
inc
stc
sbb
icebp
scas
les
push
push
stos
and
repz
stc
push
pop
data16
dec
out
jg
cld
shlb
call
mov
push
jns
or
lahf
inc
pop
movsb
unpckhps
mov
cld
stc
xchg
xor
pop
loop
adc
push
inc
aas
mov
aas
xorl
fiadds
iret
ja
in
out
lahf
insb
xor
jae
int
or
testb
and
cmp
adc
lahf
aas
cmpsl
cs
sub
mov
rclb
cld
stos
mov
rcrl
insl
add
jg
push
mov
push
sbb
inc
xlat
mov
jg
repz
faddp
clc
push
out
mov
out
mov
lahf
repz
pop
int
pop
test
push
xor
idivb
jg
cmp
int3
inc
jmp
lret
and
jge
cwtl
iret
lahf
lea
xchg
dec
or
add
loop
aas
jg
cmp
and
cmp
loop
add
fld
repz
lahf
push
mov
pop
jnp
test
jg
cld
stc
xlat
iret
dec
xor
sbbb
imul
xchg
iret
lahf
aas
xchg
inc
stos
push
cmp
loope
push
push
lods
mov
out
jno
sbb
sbb
and
repz
lahf
mov
cld
aam
cmpsb
mov
cld
stc
jnp
xor
sbb
stos
in
in
test
leavew
jecxz
iret
lahf
aas
fstl
cli
mov
jle
cmp
fdivrs
sbb
dec
scas
mov
mov
mov
xor
out
lahf
aas
lahf
mov
push
lds
pop
push
sti
out
push
stc
stc
repz
sti
inc
enter
lcall
mov
sub
mov
cmc
mov
or
add
aaa
outsl
setle
mov
test
lea
test
out
cwtl
mov
inc
aam
and
fcompl
xor
cmc
xor
sbb
call
out
pop
addb
xlat
adc
movhps
jo
aaa
outsl
fidivrs
notb
popa
push
inc
stos
sbb
sub
inc
sbb
pop
mov
sub
jg
cld
stc
mov
inc
mov
cmp
fadds
lahf
aas
sbbl
pop
rep
pop
lahf
aas
jne
aad
insl
xchg
lcall
repz
dec
push
imul
int3
adc
xchg
fnstsw
jg
cld
add
pushf
aam
push
mov
les
test
fcomps
iret
lahf
out
mov
nop
sbb
fisubs
jg
cld
stc
dec
testl
hlt
xor
jbe
xlat
xchg
aas
scas
jb
push
jmp
sarb
cld
sbb
scas
into
xchg
pop
and
fs
js
stc
repz
mov
and
ja
outsl
fwait
jo
aas
jg
int3
adc
xchg
stc
repz
xchg
sbb
lea
fiadds
aas
jg
cld
pop
in
pop
cmp
dec
jp
das
call
pop
repz
lahf
mov
aad
hlt
into
cmp
xchg
cld
stc
or
sbb
mov
popa
ror
xorb
xor
fpatan
xchg
lahf
aas
add
in
adc
insb
jg
cld
stc
loope
add
leave
repz
in
fs
jns
push
lret
lahf
aas
mov
mov
cld
stc
repz
cltd
popa
out
ret
add
inc
sbb
aas
jg
dec
movsl
bound
jp
rorb
repz
cmp
outsb
je
dec
adc
adc
aas
jg
fwait
das
lahf
fcmovnb
mov
popl
pop
xchg
xchg
stc
repz
fucomp
insl
ret
pop
pushf
mov
or
pop
in
jg
cld
cmp
stc
ret
fstpt
repz
lahf
std
insb
cwtl
sub
stc
iret
fcomi
sub
pop
lret
inc
cld
stc
inc
push
ret
add
or
add
mov
icebp
sub
outsl
ficomps
sub
out
pop
dec
cli
out
cmpsb
rorb
jns
out
shrl
stos
inc
int3
cltd
lds
mov
push
fnstcw
leave
adc
fwait
outsl
lock
hlt
in
divb
xlat
cli
les
dec
shrl
inc
jle
push
mov
aam
roll
or
sbb
insl
cmp
add
mov
clc
adc
lret
aaa
imul
repz
fwait
mov
mov
bound
adc
pop
push
mov
lcall
aaa
outsl
fidivrs
jecxz
pop
mov
or
repz
fwait
mov
adc
test
fidivrs
aad
xchg
mov
sahf
xor
insb
aam
aaa
cmp
cmpsl
lret
ret
dec
jle
mov
out
mov
push
out
fwait
aaa
out
sub
mov
push
and
pusha
icebp
rorl
push
out
ret
ja
out
add
cmp
call
xchg
mov
cld
stc
out
xor
mul
clc
and
repz
pop
cmpsb
ljmp
enter
cld
stc
lods
sub
rclb
stos
sbb
ja
cmp
jp
out
lahf
aas
xchg
push
in
jle
pop
mov
cld
cmp
adc
push
clc
aad
outsb
and
iret
mov
mov
sub
dec
and
cld
stc
repz
out
push
mov
mov
jle
scas
xchg
mov
jg
mov
js
xor
cld
stc
repz
or
mov
fbld
inc
push
and
jg
in
cld
mov
cmp
xchg
aas
jmp
sti
daa
scas
jae
cli
aas
jg
shlb
inc
and
cltd
mov
enter
dec
jle
sbb
add
stc
repz
aas
push
loopne
fidivl
lds
lea
cltd
xlat
aas
jg
cld
loope
push
scas
fdiv
inc
or
push
inc
sar
clc
cld
loope
lahf
cltd
xor
push
fpatan
pop
iret
mov
cmp
pushf
xchg
aam
loop
xchg
cmp
aaa
shl
xlat
test
fs
mov
add
mov
sub
lret
inc
mov
outsl
fisubs
add
mov
imul
scas
push
jae
out
mov
shrl
cs
les
fiadds
mov
sbb
in
or
jns
mov
mov
repz
xchg
lahf
aas
jg
sahf
push
inc
or
decb
cld
mov
js
arpl
xchg
shrb
imulb
aas
jg
rorb
test
stc
inc
mov
push
or
pop
ss
mov
cld
push
xchg
imul
repnz
repz
lahf
mov
lret
out
out
out
inc
jg
cld
stc
insl
ja
jbe
sbb
test
aas
xchg
scas
pop
ret
aaa
adc
pop
ljmp
cli
dec
cmp
das
dec
push
cld
stc
pop
jg
sbb
lahf
test
test
test
aas
jg
jmp
dec
cld
dec
xchg
jge
or
push
adc
push
ljmp
inc
rclb
decb
stos
addr16
icebp
dec
lahf
bound
sahf
lods
dec
daa
aas
jg
clc
in
movb
sbb
ljmp
inc
and
xchg
inc
js
jle
fmul
pop
stc
repz
mov
lret
pop
xchg
push
in
jg
cld
cmp
nop
or
out
lahf
or
sbb
or
test
fs
jg
jl
repnz
outsl
decb
xlat
addr16
lahf
jmp
dec
pop
mov
lods
sub
cltd
imull
xor
inc
cmp
fwait
inc
pop
mov
aaa
mov
cld
sti
shl
stos
add
mov
sbb
repz
lahf
dec
in
in
test
jp
cmp
push
jle
cld
stc
xlat
in
sbb
mov
mov
jg
mov
sarb
cld
ret
in
gs
movsb
or
xchg
mov
popa
dec
out
outsl
fidivrs
pusha
in
mov
aas
mov
movsl
jmp
leave
out
fwait
aaa
test
clc
shrb
nop
das
test
push
jle
xor
ljmp
dec
int
aaa
outsl
adc
mov
add
shll
push
incl
mov
jle
add
mov
inc
cmc
lea
out
mov
mov
ficoms
aad
aas
jg
stc
cmp
bnd
popa
cmp
lods
add
inc
push
iret
lahf
jge
fstps
inc
or
add
jg
push
inc
jg
push
inc
insb
faddl
mov
mov
stc
repz
or
mov
ret
push
xchg
mov
inc
cmc
lahf
aas
jg
xlat
ret
cmp
mov
jbe
lret
mov
out
and
or
jae
les
aas
jg
cld
ficomps
mov
pop
orl
jns
enter
jge
fisubrl
add
enter
fdivl
imul
popl
adc
sub
jg
aaa
outsl
fidivrs
cmp
or
repz
fwait
push
xor
clc
imul
fidivrs
hlt
sub
hlt
test
pop
movsl
xchg
out
fwait
aaa
xchg
lods
mov
cmpsl
pop
rorb
fidivrs
xchg
inc
mov
addr16
sbb
xor
xchg
aaa
outsl
mov
and
mov
sbb
std
add
loopne
push
dec
arpl
mov
sub
enter
inc
ret
sbb
mov
dec
jo
pop
icebp
add
outsl
fidivrs
es
mov
rcrb
mov
int
aaa
int3
dec
pop
insb
push
or
js
loopne
out
mov
sub
popa
sbb
pop
ljmp
and
pop
movsl
adc
mov
jecxz
xchg
or
cmp
stc
movsb
mov
xor
out
insb
push
mov
push
test
jns
out
lods
fildl
xchg
mov
repz
jp
insb
fidivrs
fs
push
or
repz
mov
push
test
adc
cld
cld
stc
std
ror
adc
call
lock
fdiv
out
lahf
ret
dec
or
xor
sub
xchg
cld
stc
into
ficoml
aaa
iret
inc
add
out
lahf
aas
mov
fildl
inc
lret
stc
mov
dec
cld
stc
repz
fldl
mov
popf
scas
sub
lahf
aas
jg
es
mov
jbe
push
fwait
inc
jl
out
mov
inc
iret
sub
lods
and
mov
adc
pop
cli
fwait
arpl
out
leave
lahf
inc
clc
mov
push
inc
fiadds
inc
jg
jl
aad
fistpll
in
sub
cmp
testb
lahf
aas
test
mov
inc
fwait
xor
jge
and
cld
stc
repz
push
inc
mov
push
pop
xchg
cmpl
lahf
aas
jg
cld
test
test
mov
cmpsl
out
cld
stc
repz
cmp
hlt
dec
in
into
adc
mov
ss
and
dec
je
xchg
push
data16
repz
push
cmc
iret
jne
movsb
adc
mov
scas
lahf
inc
cld
subb
mov
or
shlb
iret
dec
cld
out
ss
fstl
cld
inc
or
into
je
push
and
and
mov
jb
arpl
fwait
aaa
outsl
ud0
aas
ret
and
pop
add
out
movsl
mov
fdivl
fxtract
lcall
sub
lcall
or
jg
dec
rorl
rorl
iret
lahf
subb
jmp
int
aaa
les
pop
ret
xchg
mov
in
jl
pop
sub
mov
cld
insl
xlat
inc
push
lahf
mov
fidivs
or
adc
outsl
mov
xlat
insl
mov
enter
push
out
jne
out
or
aaa
outsl
fidivrs
jno
repz
lods
inc
movswl
out
dec
lcall
pop
int
cld
stc
repz
dec
mov
loopne
mov
cwtl
mulb
or
aas
push
arpl
or
push
xchg
push
lods
sbb
out
and
pop
subb
in
jge
nop
fsubrl
lahf
aas
jg
sbb
mov
ds
inc
stc
repz
xchg
fsub
jp
into
or
push
push
cmp
add
jg
cld
mov
icebp
mov
lods
push
xchg
jbe
out
daa
lahf
int3
pop
add
scas
push
push
xchg
jg
cld
stc
hlt
adc
adc
xchg
add
mov
jmp
out
lahf
aas
subb
xorb
cwtl
pusha
cld
mov
xor
mov
push
lahf
aas
jg
das
xor
testl
jno
stc
repz
cmp
push
sarb
enter
mov
jg
cld
jnp
jmp
inc
jg
push
loope
sub
ljmp
adc
fs
mov
cld
stc
in
pop
push
ret
inc
int
pop
mov
out
and
push
mov
xor
cld
stc
xchg
lret
sbbb
pop
cmp
mov
lahf
aas
cmp
xchg
call
add
sbb
repz
ret
loop
sbb
adc
aas
loope
aaa
outsl
fidivrs
test
mov
outsb
pop
aad
out
fwait
out
out
xor
mov
xlat
or
fidivrs
sub
and
mov
push
sti
int
aaa
outsl
rcrl
xor
popf
mov
mov
mov
xchg
cs
dec
jo
scas
nop
movsb
and
repz
ret
mov
inc
outsb
fisubrs
jmp
inc
cmpl
stc
xchg
jno
stc
add
lahf
jg
cld
stc
fwait
mov
inc
std
aad
out
das
adc
fwait
pop
pop
xchg
aas
outsl
test
push
jg
cld
stc
inc
or
scas
es
inc
jl
xchg
cmpsl
shl
iret
lahf
aas
repz
stos
nop
icebp
mov
outsb
push
imul
cld
stc
repz
int
cwtl
sub
mov
mov
hlt
sbb
mov
iret
dec
xchg
leave
unpcklps
mov
in
out
cmp
mov
xchg
mov
js
fidivrs
mov
sub
mov
dec
int
aaa
outsl
adc
icebp
sub
fdiv
xorl
loope
fwait
mov
mov
dec
stc
je
mov
aaa
outsl
fdivrp
mov
jb
sbb
pop
jns
out
aas
mov
and
in
popa
jnp
test
mov
adc
data16
dec
or
adc
outsl
stos
clc
shrd
mov
or
jge
cmp
outsb
outsl
fidivrs
shrl
xchg
mov
roll
jmp
ret
repz
pop
cmp
repz
js
ss
jge
sti
dec
xchg
push
shll
fiadds
pop
dec
add
mov
imul
repz
fwait
jecxz
arpl
sub
xor
mov
xor
push
mov
inc
outsl
cld
test
adc
bound
bound
iret
lahf
aas
jg
dec
hlt
pop
repz
insl
cld
sar
stc
repz
jge
insl
and
into
jle
xchg
jmp
cmp
mov
pop
popf
cmpsl
popa
pop
mov
push
iret
lahf
jg
sti
mov
mov
xor
stc
repz
push
pop
call
dec
fimuls
jp
fs
lahf
aas
jg
call
xchg
loopne
sbb
aaa
mov
aaa
popf
jne
popf
xchg
inc
insb
stos
fidivrs
loopne
pop
inc
popa
xchg
shr
inc
jnp
add
fwait
aaa
outsl
test
shld
notrack
jb
push
cmpsl
cmp
and
or
inc
cli
scas
mov
pop
jmp
outsl
fidivrs
fisubrl
ret
lea
fistpll
fwait
mov
adc
mov
jo
fisttpl
push
jge
xchg
mov
ja
mov
sbb
std
je
pop
push
outsl
fidivrs
fcoms
cmpb
iret
out
fwait
aaa
xorl
cmpsb
adc
push
je
fidivrs
cmpb
mov
imul
aaa
outsl
push
movsl
fildl
xchg
pcmpeqd
fsubrl
repnz
xor
out
fstpl
shll
pop
hlt
push
aaa
jg
cld
stc
jne
andl
test
cmp
lock
sub
sahf
mov
cwtl
loop
jg
cld
stc
arpl
cmc
sub
loop
mov
xchg
out
lahf
aas
test
and
sbb
cld
stc
repz
mov
pop
call
das
scas
inc
iret
lahf
aas
jg
aas
and
hlt
fwait
and
stc
repz
aas
sub
mov
xchg
adc
lea
out
lahf
aas
jg
dec
xor
enter
bnd
mov
repz
xchg
adcl
mov
cmp
xchg
lcall
jge
pop
xchg
push
adc
mov
jg
push
mov
fwait
aaa
outsl
ficoms
test
xchg
cmp
movsl
lret
lahf
push
js
loop,pn
iret
push
mov
insb
fidivrs
stos
xchg
xor
cwtl
inc
cli
push
shll
out
orb
mov
cmp
outsl
or
sub
jns
rorb
cmp
jecxz
rcrb
out
lahf
aas
jg
xlat
adc
or
fisttps
mov
out
xorl
inc
std
fsubl
lds
jg
cld
xchg
and
jae
imul
repz
jmp
cmp
nop
xor
xor
jg
cld
cltd
sahf
popf
sti
test
fs
inc
aas
pop
and
out
lahf
mov
ljmp
gs
cld
stc
ret
dec
lock
icebp
shrb
xchg
push
stc
and
out
lahf
aas
mov
in
dec
js
jbe
xor
cld
stc
repz
loopne
pop
mov
arpl
repnz
lahf
aas
jg
ret
mov
je
mov
clc
leave
das
mov
shrb
mov
and
repz
mov
mov
xlat
cmp
sbb
outsl
fiadds
dec
lds
mov
jb
out
adc
outsb
xchg
ficoml
imul
push
mov
add
imul
fwait
aaa
outsl
fisubrs
pop
je
call
cmpsb
loope
or
out
xor
mov
dec
push
lods
inc
pop
aaa
outsl
fidivrs
movsl
aam
adc
out
fwait
ds
xchg
movsl
push
pop
xchg
sbb
inc
jae
fidivrs
xchg
push
cmp
jnp
movhps
int
aaa
stos
adc
aam
add
stos
fidivrs
gs
gs
mov
arpl
bswap
fwait
aaa
outsl
inc
out
mov
jne
jmp
call
js
jns
push
push
sti
repz
mov
in
xor
jns
popf
notl
test
stc
xor
lods
in
cmp
lds
test
dec
out
lahf
aas
mov
fimull
je
cld
stc
repz
cwtl
jo
and
xor
into
mov
pop
iret
lahf
aas
jg
shll
xchg
jb
scas
sub
in
in
out
mov
mov
int
mov
out
xor
add
cmp
and
and
xchg
xchg
iret
lahf
aas
jge
leave
dec
pop
push
pop
xchg
fstl
cld
stc
repz
sub
jo
scas
out
mov
add
and
mov
ljmp
loopne
aas
jg
cld
mov
ja
jg
cmp
inc
out
repz
lahf
pop
xor
jno
inc
fstpl
data16
stc
lcall
sbb
enter
das
leave
push
test
das
cld
jns
push
cli
stos
in
jbe
sub
bound
cmp
aaa
outsl
fidivrs
sti
mul
ret
mov
and
lds
bound
fidivrs
lea
sbb
movsl
sub
int
aaa
outsl
out
repnz
ljmp
sub
push
add
mov
sub
fisubrs
and
jb
push
xor
jge
cltd
dec
jns
out
jbe
nop
test
sub
enter
aaa
outsl
fidivrs
adcb
xchg
and
ljmp
fs
jns
ljmp
in
and
dec
sub
rcll
or
sbb
repz
fbld
sub
lcall
aaa
aaa
outsl
fidivrs
or
ret
cmp
out
fwait
ja
sbb
cmp
push
mov
rclb
outsl
fidivrs
pop
mov
adc
scas
or
nop
dec
or
inc
lahf
int
dec
jl
repz
xor
hlt
cmc
mov
mov
repz
decl
leave
inc
mov
lahf
aaa
out
and
int3
mov
sub
iret
repz
fwait
jbe
ljmp
out
loope
jne
inc
sbb
and
sbb
push
and
rorl
sub
fidivrs
add
sbb
and
out
lahf
mov
xor
or
out
repnz
cld
stc
cmp
add
xchg
push
sub
lcall
iret
lahf
aas
dec
cmp
push
and
rcrl
push
mov
loopne
ja
or
pop
outsb
fidivrs
inc
sub
adc
es
push
or
mov
das
sbb
in
sbb
mov
fdivrs
jg
jne
call
cmpsb
fldt
cwtl
mov
out
lahf
jno
and
inc
sbb
pusha
rorl
sti
cmp
cld
stc
jg
fldt
jbe
inc
daa
cli
rolb
iret
lahf
aas
mov
cmpsl
sbb
ss
cld
stc
repz
movl
rorb
add
inc
iret
lahf
aas
jg
mov
pop
lret
xchg
cmp
stc
repz
call
in
dec
cld
sbb
xchg
mov
lahf
aas
jg
sub
push
out
pusha
xor
pop
xchg
jnp
sub
in
iret
mov
imul
push
in
in
out
inc
sub
outsl
sarb
pop
in
cmp
pop
mov
iret
jg
fidivrs
push
push
test
shll
fwait
aaa
outsl
lea
cltd
notl
pushf
add
mov
jmp
pop
rcrb
mov
es
movsb
addb
gs
lret
cmpsl
jge
push
mov
inc
outsl
jmp
cmpsb
les
lahf
out
fwait
aaa
xchg
ret
mov
aaa
test
mov
sub
shll
repz
fwait
aaa
outsl
mov
addr16
and
jns
out
xlat
lahf
cwtl
fst
out
jbe
xchg
das
add
pop
pop
pop
and
aaa
fisttpll
stc
repz
call
jmp
pop
pop
push
push
xchg
inc
mov
inc
jle
mov
mov
mov
xchg
js
jns
out
test
jl
mov
out
add
repz
notl
xor
dec
jmp
enter
stc
clc
shlb
shl
push
mov
and
repz
lahf
ljmp
out
cmp
fisubrl
stc
inc
mov
aas
add
ja
das
pusha
cs
out
lahf
aas
and
cmpsb
loop
cwtl
das
sbbb
cld
stc
repz
popf
or
ds
negb
imul
cld
in
iret
lahf
aas
jg
jne
mov
ds
inc
jmp
repnz
ret
js
jbe
mov
lahf
dec
push
cmpsl
popa
and
lcall
mov
mov
loopne
ret
push
rorb
lahf
aas
jg
insw
xchg
or
jle
in
idiv
cld
stc
repz
or
sbb
mov
or
lahf
aas
jg
imulb
jl
leave
and
xchg
sub
iret
mov
jns
fldl
lcall
repnz
nop
fmuls
pusha
setno
outsl
fimuls
lret
jmp
daa
int
aaa
out
ja
es
mov
pop
and
pop
mov
jns
call
mov
ror
jne
int3
fwait
aaa
outsl
ficoms
std
inc
lahf
into
aas
lret
fs
int
fwait
hlt
lock
out
ljmp
fwait
xor
cmpsb
jo
pop
out
stos
ds
dec
mov
pop
pushf
mov
out
fwait
aaa
sahf
lret
insl
cs
cltd
mov
repz
inc
or
and
sti
fidivrl
fwait
aaa
outsl
fidivs
push
push
out
scas
in
xor
push
xchg
int3
data16
xchg
out
mov
outsl
fidivrs
xor
adc
aas
movsl
sub
dec
loop
fwait
aaa
loope
cmp
in
xchg
sub
out
fwait
xor
lds
xor
pop
xchg
insb
fidivrs
mov
enter
nop
cld
orl
push
cmp
out
lahf
aas
jg
and
adc
test
sub
out
es
pop
adc
mov
loopne
das
popa
fcomip
out
hlt
out
or
scas
push
nop
lds
or
mov
dec
cmp
cmp
mov
out
fwait
aaa
andl
fpatan
fld
xchg
mov
dec
shrl
negb
testl
outsl
aad
test
inc
call
out
cmp
mov
enter
in
mov
repz
in
push
jb
stos
mov
out
add
pop
outsb
sub
push
lahf
dec
or
inc
repz
fwait
pop
out
stos
inc
and
mov
or
and
repz
js
add
insl
out
lods
lahf
pusha
jae
leave
outsb
fidivrs
lods
push
bound
adc
cld
add
sbb
aaa
adc
fidivrs
inc
mov
and
test
xlat
xchg
into
es
out
or
mov
loope
and
jmp
loop
fwait
aaa
adc
scas
sbb
fstl
into
scas
loopne
sbb
and
jns
pop
mov
xchg
sbb
xor
push
pushf
sub
xchg
fwait
aaa
outsl
mov
xchg
dec
and
das
pop
sbb
int
loop
into
outsb
ud0
push
cmp
clc
enter
mov
ss
scas
out
sbb
cmp
arpl
push
cld
cld
stc
repz
fimuls
and
pop
adcl
xor
out
sub
jl
xchg
cli
sub
stc
cmp
xor
outsl
ficoms
sbb
xor
fcomp
aaa
xor
sti
dec
les
js
xchg
adc
in
cmp
movsl
dec
dec
cmp
repz
jge
pop
aas
lret
leave
sub
push
sub
cld
stc
stos
inc
push
loop
nop
fisttpl
mov
fadd
das
xor
iret
lahf
aas
cmc
mov
and
inc
iret
stos
cld
stc
repz
js
loopne
sbb
push
into
sub
mov
dec
xor
aad
jle
mov
iret
iret
lcall
lock
add
mov
outsb
fidivrs
add
cmp
arpl
sbb
sub
inc
pop
stos
std
xor
pusha
jnp
out
fwait
mov
adc
stc
sbb
push
iret
mov
arpl
lret
repnz
push
aaa
outsl
fidivrs
fs
cltd
jne
pop
cmc
enter
pop
ret
add
sbb
aaa
or
fidivrs
popa
jno
mov
mov
add
mov
lods
xchg
push
addb
jns
out
aad
mov
hlt
sub
insb
fisubs
mov
js
aas
pop
aas
jg
cld
xchg
or
dec
cmp
mov
mov
stc
repz
lahf
sbb
pusha
cmp
and
jg
push
stc
mov
dec
sub
xchg
lahf
aas
movsb
insl
test
dec
mull
pop
push
jmp
sub
aaa
movsl
mov
ja
stos
inc
test
mov
jo
ja
aaa
outsl
fidivs
cld
fisubs
mov
jns
out
add
xlat
ret
fisttps
movsl
aas
outsl
fidivrs
push
dec
xchg
jns
mov
int
aaa
les
add
std
dec
fidivrs
leave
sub
out
stc
sarb
int
aaa
outsl
fcmovu
call
mov
jns
out
pop
mov
adc
idivl
aad
mov
or
fs
int3
mov
out
in
mov
lds
cmc
outsl
jle
mov
pop
xchg
or
jns
push
out
fwait
aaa
adc
aaa
mov
nop
cmp
mov
mov
pop
loope
adc
add
leave
cmp
aaa
outsl
mov
xchg
test
outsl
cmp
jns
out
cmp
sub
sbb
push
sub
push
test
push
sub
mov
mov
rcrb
out
mov
dec
sahf
jnp
test
mov
mov
fidivrs
popf
aam
mov
cld
mov
and
cmp
cmp
movsb
push
ja
cwtl
int
jnp
dec
aam
loope
pop
inc
fcompl
cmp
mov
aam
les
dec
repz
jle
int
aaa
outsl
cli
push
jge
sub
xchg
lret
mov
add
adc
call
mov
cld
nop
std
push
ja
out
out
pop
mov
fisubrs
xor
inc
ret
stc
repz
and
xchg
cmp
mov
out
and
push
xor
test
stc
pop
outsl
mov
cld
inc
lea
dec
jg,pt
adc
movsb
sbb
in
fimull
push
pop
xchg
push
testl
add
aaa
std
fucomp
push
call
fwait
aaa
lods
clc
cmpsb
adc
mov
movsl
lds
repz
sub
and
inc
lods
jge
push
add
stc
push
xchg
arpl
push
into
and
push
and
adc
sti
call
popf
xchg
jns
scas
loopne
jne
xchg
aad
sbb
hlt
add
outsl
fidivrs
cmp
je
in
mov
xchg
dec
lock
int
or
pop
test
jl
xchg
inc
xchg
daa
out
lahf
aas
outsl
and
mov
cmpsb
cld
cld
stc
repz
inc
cmpsl
repz
mov
jbe
fwait
aaa
inc
lahf
cmc
jns
daa
out
jns
cltd
dec
call
xlat
popf
mov
pop
shlb
jns
aaa
outsl
fidivrs
pop
sbb
mov
clc
aaa
out
test
movsl
mov
sbb
jns
lret
aaa
fidivs
outsl
mov
in
pushl
mov
jo
int
int3
shr
push
pop
leave
movsl
jo
loop
jns
jns
out
out
push
dec
stos
sub
es
mov
mov
mov
mov
adc
out
fwait
ja
pop
cmpsl
pop
pop
lds
xchg
dec
mov
sub
lods
pop
push
xor
lds
in
lahf
aas
lds
mov
mov
pusha
push
jbe
std
xor
ds
adc
sarb
test
xchg
aaa
movsl
jno
inc
into
data16
int
ljmp
pushf
sbbl
mov
adc
pop
mov
loope
sbb
dec
mov
cld
scas
lret
out
lahf
aas
xchg
pop
sbb
mov
lds
repnz
popf
jmp
xor
lahf
jg
daa
and
leave
jo
gs
repz
ja
xlat
xor
sub
mul
push
adc
insl
test
fidivrs
pusha
push
mov
lahf
stos
cmpsb
ljmp
mov
pop
pop
fidivrs
lahf
xlat
sub
adc
pop
int3
xchg
xlat
outsl
cmpsb
sbb
aas
aaa
outsl
fstl
lea
adc
je
cld
stc
loop
pop
fnstcw
int3
stos
and
mov
xchg
lahf
aas
jg
mov
adc
ds
out
loopne
push
add
outsb
fsubl
aaa
outsl
fidivs
inc
adc
jo
jo
lret
jb
out
xchg
sahf
pop
aas
std
inc
jle
pop
inc
clc
and
aas
jg
cmp
mov
sub
jae
loopne
out
sub
out
lahf
add
js
lea
lahf
aad
cwtl
lahf
cld
cld
stc
sub
sub
push
gs
pop
jmp
aaa
outsl
fiadds
addr16
dec
fcmovnu
dec
dec
repz
fwait
gs
add
inc
fdivrl
imul
mov
xlat
test
fbld
push
inc
mov
les
out
test
xchg
xor
loope
xchg
out
fwait
mov
dec
mov
out
mov
cmpsl
mulps
jp
movsb
lahf
push
and
or
add
sub
test
push
aad
stc
ret
inc
inc
mov
mov
hlt
lahf
aas
jg
inc
push
cmp
inc
les
pushf
fcmovb
test
leave
out
push
xor
jmp
gs
sub
aas
mov
mov
push
insb
sahf
loop
stc
repz
incl
jno
mov
dec
xchg
mov
fwait
cwtl
cmp
lds
test
push
push
pop
cmc
fs
loope
repz
sti
test
fincstp
xor
test
fidivrs
adc
inc
aaa
aad
fwait
mov
pop
call
sub
xchg
xor
outsl
fidivrs
mov
cs
mov
out
fwait
aaa
inc
out
sbb
xlat
cmp
mov
pop
and
or
dec
leave
js
aaa
outsl
ficoms
add
dec
fildl
push
jns
out
out
negl
xor
fs
sbb
outsl
fidivrs
fldt
jle
pop
loop
adc
pop
out
cmpl
lcall
jns
out
inc
shrb
and
adc
int3
aaa
outsl
fidivrs
cmp
sbb
lock
movsl
lret
mov
repz
fwait
xor
or
push
or
push
push
cmp
fidivrs
movsb
cmc
inc
inc
inc
rcrb
icebp
push
mov
jmp
pinsrw
fs
scas
mov
cwtl
out
lods
mov
or
mov
aaa
outsl
fidivs
jnp
test
jmp
mov
repz
add
call
mov
in
pop
aaa
outsl
fidivrs
mov
pop
or
xor
aad
inc
data16
out
iret
lahf
aas
cmc
in
out
ja
cmp
xorl
pop
cld
stc
repz
adc
push
and
clc
pop
mov
cmp
jg
insb
popa
mov
hlt
dec
adc
push
stc
repz
mov
jbe
mov
inc
push
add
cld
mov
lds
adc
and
cmovp
pop
xchg
jg
clc
add
int
fldcw
adc
insb
fidivrs
icebp
movsb
mov
sub
sub
cmpsl
int3
jg
adc
out
cld
stc
ret
adc
push
pop
push
dec
sub
and
mov
push
pop
add
arpl
dec
lock
iret
jecxz
mov
xchg
and
jns
out
dec
mov
mov
inc
test
xchg
aaa
outsl
fidivs
sti
out
ss
arpl
sahf
aas
jg
rorb
lea
into
movsb
sbb
out
lahf
imul
xlat
bound
pop
inc
jg
cld
stc
cmc
mov
inc
cmc
js
test
add
repz
rcr
mov
lahf
jg
repz
jp
sfence
dec
mov
in
mov
ljmp
jbe
pop
shl
cmp
xchg
jg
scas
sbbb
cld
stc
repz
fwait
loopne
cmp
inc
or
or
jg
bound
mov
gs
cld
stc
repz
das
mov
or
push
inc
push
xchg
xchg
ljmp
ficompl
cmc
jns
mov
aaa
test
loopne
outsl
and
fidivrs
std
fadds
mull
out
fwait
test
dec
icebp
and
out
mov
xchg
mov
cmpsb
mov
adc
pop
rcr
push
mov
int
aaa
aas
shrb
fisubrl
out
fidivrs
repnz
arpl
push
rorl
dec
int
aaa
outsl
insb
sub
outsl
sahf
out
or
repz
pop
sub
and
stos
adc
xor
inc
popf
push
xchg
fwait
aaa
outsl
faddp
stc
dec
jae
push
add
scas
shl
xor
int
lret
lcall
inc
fidivrs
daa
lret
jge
xor
mov
aaa
xchg
or
sbb
fucomip
xlat
jbe
inc
ret
dec
push
and
pop
stos
add
in
fstl
cld
cld
stc
repz
cltd
out
adc
fdivs
scas
sar
push
xchg
xlat
pop
cmpsb
stos
add
mov
lods
mov
lcall
aad
aas
int
aaa
outsl
inc
call
sarb
cmp
bound
jns
out
sbb
jecxz
lea
sbb
fildll
cld
jbe
ja
out
jmp
jmp
enter
xchg
aas
jns
cmp
js
iret
lahf
aas
insb
mov
std
inc
mov
pop
hlt
fiadds
jb
repz
sub
int
aaa
outsl
xchg
xor
push
jns
js
nop
ss
add
out
int3
lods
mov
movsl
mov
adc
mov
ficomps
mov
pusha
fmul
inc
repz
fwait
call
orl
jae
add
decl
mov
mov
dec
push
dec
mov
lahf
aas
out
repnz
jp
pop
mov
int3
cs
sub
xor
out
fidivrs
lret
bound
adcl
jp
cmp
addr16
mov
test
mov
cmpsl
add
nop
mov
out
mov
mov
aaa
in
daa
mov
cld
stc
repz
popa
sarb
cmp
dec
sub
aas
jg
test
mov
fcmove
sub
repz
loopne
hlt
cltd
or
push
int3
lcall
pop
xor
sbbb
dec
xchg
fwait
aaa
push
xchg
jle
fwait
ja
lea
pop
notb
jns
out
clc
dec
popa
in
push
imul
outsl
fidivrs
enter
jl
je
mov
repz
fwait
xchg
or
mov
jne
outsl
fidivrs
lds
jne
fwait
push
mov
push
jnp
out
fwait
aaa
icebp
jmp
xchg
sbb
aam
mov
hlt
xorb
stos
mov
repz
mov
and
outsl
mov
mov
mov
scas
call
xchg
cs
jg
fnstcw
js
enter
pop
outsb
repz
lahf
adc
mov
jmp
mov
fldcw
aas
and
push
subl
shlb
add
cmp
fidivs
xorl
jno
dec
fwait
iret
lahf
aas
jg
and
das
fs
jb
pusha
cld
stc
repz
mov
test
or
jle
inc
push
rorl
addr16
xchg
stc
repz
scas
hlt
sub
adc
minps
jb
mull
sub
xor
or
repz
sub
int3
xlat
push
lods
xor
mov
jg
cld
fadd
aas
mov
push
inc
repz
lahf
lock
jp
or
hlt
dec
rclb
repnz
cmc
jl
fwait
scas
jae
jns
out
cld
add
jg
inc
push
aad
fld
fwait
aaa
outsl
fisubs
pop
shr
or
mov
jns
out
lcall
mov
jp
aaa
outsl
fidivrs
ret
in
mov
pop
cs
enter
xor
sub
in
lods
test
cmp
adcb
aad
push
fwait
aaa
out
or
jmp
sub
sbb
out
lahf
pop
dec
push
adc
loope
inc
mov
jg
sub
repz
pop
daa
cmpsl
aas
jg
out
lahf
aas
popf
int3
add
pop
adc
mov
stc
repz
cmc
lods
xor
je
ja
call
and
add
inc
movsb
mov
pushl
fiadds
pop
push
out
dec
cmp
loopne
inc
lock
lret
dec
or
mov
inc
mov
filds
cmc
xchg
test
imull
fwait
aaa
outsl
fimuls
or
in
sarb
or
repnz
jns
out
ja
sbb
push
push
stc
dec
in
xor
sub
dec
push
in
cld
dec
movsb
pop
inc
int
mov
sbb
sbb
pop
and
repnz
out
inc
xor
push
push
xchg
mov
sarl
jno
addb
sbb
lahf
jg
or
jle
scas
and
imul
sarl
aaa
outsl
fiadds
pop
arpl
inc
lret
cmp
jns
out
mov
frstor
add
hlt
movsl
xor
push
inc
fidivrs
mov
loop
xchg
aaa
out
cs
rorl
add
imull
addr16
sub
out
mov
dec
adc
sbb
fs
ja
lret
iret
sub
sbb
xchg
int
sbb
cmp
mov
repz
sbb
pop
sahf
xor
pop
orl
fwait
aaa
outsl
fisubrs
ret
mov
nop
push
or
jns
out
outsb
pop
push
ss
loopne
test
bound
mov
cmp
or
leave
repz
fwait
into
push
add
arpl
mov
aas
or
jns
mov
inc
mov
rcr
iret
mov
andl
subl
mov
mov
aaa
filds
cmc
insl
in
iret
mov
jne
xchg
xor
ds
mov
aas
repnz
mov
in
nop
fwait
aaa
outsl
out
mov
add
out
jnp
fidivrs
lods
cmp
cld
leave
in
int
aaa
outsl
test
jne
rorb
in
push
push
sub
out
xchg
cwtl
or
mov
sbb
leave
fiadds
das
subb
stos
and
pop
dec
push
inc
js
mov
mov
jns
out
aas
mov
add
pop
mov
inc
sbb
jne
cmpb
push
aam
aas
jg
cld
dec
pop
mov
call
xor
repz
lahf
nop
sbb
cld
inc
cmp
push
call
jg
cld
stc
inc
or
loope
ss
daa
inc
xor
aas
push
jnp
lds
jge
loop
and
push
popl
iret
lahf
aas
jg
cmp
and
scas
test
in
xchg
out
push
icebp
mov
dec
sbb
repnz
sub
idivl
dec
jle
mov
bsf
pop
aaa
in
cld
stc
repz
inc
add
pop
xor
lahf
aas
jg
add
fcoms
adc
pop
cmp
repz
test
cmp
jo
or
mov
int3
pushf
add
aaa
outsl
fiadds
scas
sahf
fs
xor
cmp
mov
ret
mov
hlt
add
or
jae
insl
mov
mov
stc
mov
iret
stc
xchg
ds
xchg
mov
lahf
aas
jg
imul
inc
sub
dec
jo
cmp
stc
repz
jo
push
movsl
mov
fs
dec
mov
push
jae
add
cld
or
arpl
mov
sahf
into
psubd
lock
outsl
fiadds
pop
out
cmp
jmp
aaa
repz
aam
cwtl
aaa
xor
push
ficoms
mov
lods
and
data16
pop
inc
mov
int
aaa
cmp
dec
xor
cmp
lahf
aas
lock
adcb
pop
in
cmp
cmp
cld
stc
repz
jb
gs
sti
xor
cmp
inc
lahf
cld
sub
int
inc
jmp
and
int3
pop
push
sub
movsb
push
pop
mov
push
jns
out
lret
pop
sub
sub
ds
inc
enter
js
adc
and
xlat
movsb
imul
push
int
aaa
outsl
iret
divl
xor
mov
inc
mov
xchg
mov
jo
sbb
jle
push
fldl
negl
popf
pop
sbb
xor
mov
jns
out
xor
mov
pop
imull
stc
dec
loop
js
aaa
outsl
fidivrs
mov
je
cmp
jg
xchg
fwait
testl
mov
sub
lahf
aas
popa
imull
push
ljmp
repz
inc
loop
std
dec
or
out
fwait
cmpsb
fidivrs
adc
xchg
aas
aam
adc
cmp
jb
fimull
pop
mov
pushf
dec
cld
stc
repz
adc
rolb
and
mov
pop
ljmp
xchg
push
sub
enter
repz
dec
jne
enter
in
and
aas
jg
repnz
ret
clc
rcrl
push
xlat
cs
je
stc
repz
fildll
ja
push
addr16
jecxz
iret
mov
xor
shrl
mov
stc
repz
ds
xchg
iret
sti
shrl
lahf
aas
jg
js
pop
inc
pusha
popf
jecxz
cmp
sbb
out
call
push
daa
das
mov
adc
cld
stc
repz
shl
or
xchg
mov
jg
xor
outsl
mov
jg
das
repnz
cmp
ljmp
lods
xor
lret
inc
shlb
cmp
push
addr16
fdiv
aaa
outsl
fidivrs
jo
xor
fcomi
ret
sar
repz
fwait
xchg
data16
shl
loopne
mov
lahf
xchg
or
out
stc
jecxz
mov
xor
xchg
fwait
aaa
mov
ficompl
int
jo
cmc
ds
repz
clc
sub
inc
les
push
jne
fcompl
sub
push
push
add
xchg
or
xchg
int
inc
push
mov
sub
pop
mov
lock
fsubrs
inc
pop
out
lods
lds
aaa
outsl
imul
imul
xchg
lods
push
mov
mov
ds
jnp
loope
mov
push
in
mov
mov
flds
fbld
out
fwait
xor
xchg
inc
dec
add
mov
jns
cld
xchg
pop
jmp
mov
mov
fwait
aaa
outsl
mov
or
std
insb
push
nop
mov
lret
adc
out
repz
out
push
fwait
aaa
outsl
fsubp
dec
dec
mov
test
mov
out
arpl
insl
aaa
cs
pop
push
loop
jne
and
loope
push
cwtl
adc
pop
aam
dec
jns
and
mov
inc
outsl
fidivrs
xor
daa
lds
mov
cs
int
aaa
icebp
and
inc
xchg
and
adc
fidivrs
push
jge
inc
cmp
stos
sbb
popf
ljmp
xchg
outsb
je
jne
jns
out
loope
jo
cli
les
andb
outsl
fisubrs
push
pop
shl
cld
cltd
ljmp
jns
out
sub
xor
popa
sahf
loopne
outsl
fidivrs
int3
or
mov
mov
repnz
fwait
mov
push
mov
fwait
shll
push
testb
and
or
sub
fwait
aaa
outsl
push
sbb
jbe
inc
jg
push
inc
ret
jns
out
jg
mov
or
aaa
outsl
ficomps
fiadds
lock
in
add
jno
loop
mov
ja
aaa
lea
call
mov
ds
mov
lods
and
pop
jg
movsb
popf
mov
fwait
aaa
outsl
stos
out
jp
dec
sbb
mov
jecxz
adc
inc
add
movsb
push
jns
jo
outsl
lret
popa
in
adc
cld
fisttpl
cmpsl
mov
subl
xchg
inc
sbb
adcl
adc
cwtl
cmc
fwait
bound
jo
jg
cld
arpl
mov
xor
mov
lahf
aas
sbb
jbe
ss
pusha
pop
xlat
push
inc
in
sub
xor
jle
cld
stc
and
mov
push
adc
out
adc
movsl
rclb
or
notl
cmpsb
or
scas
xchg
iret
lahf
aas
jg
mov
in
js
lock
jns
hlt
xchg
pop
aas
sub
aaa
outsl
fidivrs
and
xor
stc
push
mov
jae
sub
sub
pop
outsl
fidivrs
scas
dec
cmp
scas
pop
inc
repz
fwait
aaa
scas
mov
mov
shll
repz
mov
push
or
mov
xorb
fwait
aaa
outsl
push
vpshaq
out
fcompl
mov
jg
cld
popa
loop
outsl
push
les
push
imul
enter
xor
icebp
fwait
ja
add
xchg
insl
jbe
jns
out
int
pushl
lds
push
fdivrl
ja
dec
je
shlb
cld
cmp
inc
xchg
insb
lahf
aas
jg
pop
cmovno
and
ret
out
sahf
inc
int3
aam
sbbl
xchg
dec
aas
jg
cld
and
push
dec
cli
sbb
sbb
lcall
mov
mov
movsb
mov
sarb
stc
stc
pop
lret
call
cmp
mov
mov
lcall
adc
cld
push
cmp
lahf
push
repz
loopne
lds
in
xchg
push
outsl
fidivrs
mov
xor
insb
stc
jecxz
out
les
aaa
into
hlt
inc
mov
xcrypt-ecb
cmpsl
or
stc
ret
xchg
fwait
pop
xchg
lret
test
mov
fmull
cmp
push
pop
cmpsb
inc
outsb
ficoms
xor
cmp
cmc
in
mov
mov
mov
mov
mov
mov
xchg
aaa
outsl
cmp
sbb
fisttpll
movaps
adc
out
sbb
or
pop
inc
roll
mov
mov
lahf
lea
repnz
int
aaa
outsl
pop
inc
repz
xchg
std
cmp
jns
out
lds
pop
jb
mov
cmp
mov
lret
dec
xchg
push
dec
mov
sbb
shlb
push
and
rolb
fiadds
add
mov
pop
icebp
daa
fwait
aaa
outsl
jmp
cmp
imul
xor
jmp
fdivrp
mov
dec
loopne
xlat
inc
push
imul
roll
adc
xchg
cmp
cmp
out
fbld
push
vaddsd
cmp
cld
jmp
xor
jl
jl
mov
pushf
cs
loopne
stos
xchg
aaa
mov
inc
outsl
fidivrs
mov
popf
sti
jae
dec
fs
out
fwait
aaa
cltd
adc
and
cld
mov
fidivrs
mov
and
adc
sbb
inc
int
aaa
outsl
jl
out
cs
dec
mov
outsl
mov
loopne
inc
push
loop
ret
enter
out
ljmp
jb
addb
push
or
movsl
rcrl
sub
daa
imull
sub
adc
cmpl
outsl
ficomps
dec
lods
lret
jmp
addr16
lods
loopne
push
jns
out
fldenv
aad
imul
fnstcw
ss
stc
repz
out
adc
outsb
das
xor
cmpl
cmp
scas
add
mov
jns
les
enter
sub
fwait
aaa
outsl
ficomps
out
fs
dec
push
aaa
lea
imul
add
ja
pop
jb
lret
sub
add
jno
repz
mov
imul
lahf
push
lcall
int3
repz
shll
scas
out
hlt
into
xchg
mov
fidivrs
pop
in
jmp
shll
add
adcb
ret
mov
adc
loope
push
mov
stos
pushf
sbbl
sub
mov
mov
jbe
inc
pusha
aas
lock
and
fwait
movsb
cmp
xor
push
andb
ficoms
ss
stc
inc
negb
out
fwait
inc
adcb
sub
cltd
jle
ja
push
movsb
jns
enter
add
int
test
inc
mov
add
leave
repz
inc
stc
int
mov
out
add
andl
pusha
xchg
cmc
dec
cs
daa
xchg
out
fwait
aaa
dec
nop
scas
dec
add
sbb
dec
push
xchg
mov
xlat
lds
mov
inc
jge
pop
mov
fwait
aaa
outsl
sub
or
xor
loopne
popf
out
outsb
icebp
jg
nop
out
aad
inc
enter
jle
arpl
shlb
aas
sbb
cmp
jecxz
push
hlt
out
lds
movsl
bound
mov
pop
pop
sub
xchg
pop
adc
aaa
and
fwait
aaa
outsl
iret
mov
notb
dec
xchg
ret
sbbb
jmpw
flds
mov
enter
push
into
mov
push
sub
fidivrs
pop
adc
aam
rcrl
fwait
aaa
outsl
cmc
cmp
outsl
pop
mov
arpl
repz
push
std
in
cmp
rcpps
ds
pop
int
scas
mov
mov
leave
out
sub
dec
out
pop
mov
lahf
or
pop
in
pop
xchg
jp
lock
push
enter
sbb
in
aaa
outsl
mov
pop
dec
mov
xor
repz
fwait
stos
and
mov
test
jns
lahf
push
mov
neg
arpl
in
jno
scas
pop
mov
stc
enter
or
stc
dec
xor
cmp
aaa
inc
lahf
cld
dec
sub
xchg
jl
popf
sbb
fwait
lods
dec
mov
sbb
mov
inc
outsl
fidivrs
mov
notl
addr16
imul
stos
jp
dec
jecxz
in
adc
mov
int3
xlat
jle
pop
and
or
pop
and
insb
scas
mov
adc
addb
mov
xlat
adc
fwait
aaa
out
sub
inc
cwtl
inc
fiaddl
jecxz
les
jns
out
test
cld
add
xor
dec
les
scas
cli
inc
fidivs
push
out
mov
imul
mov
outsl
pop
lods
sub
push
loopne
inc
loopne
pop
jae
inc
ja
inc
cmpl
jns
test
icebp
push
lods
mov
into
lods
aaa
outsl
fidivrs
add
xchg
cmp
and
out
fwait
lahf
leave
cltd
ficoms
jle
and
inc
jge
and
int3
add
out
xchg
pop
add
fwait
aaa
outsl
icebp
lret
xor
dec
jmp
mov
jb
out
mov
inc
pop
out
aas
out
fidivrs
sbb
xchg
fwait
aaa
outsl
setle
fbstp
mov
into
je
inc
mov
fistl
std
in
subb
cmp
aaa
add
fidivs
pop
mov
loopne
push
repz
fwait
cmp
mov
sbb
fidivrs
aam
iret
test
out
cmp
out
mov
int
aaa
insb
loope
fildl
rcrb
mov
adc
scas
or
lcall
int
aaa
outsl
repnz
dec
imul
mov
into
aad
out
out
test
outsb
lcall
fisubs
fistpll
ljmp
in
push
pop
daa
lret
out
push
push
inc
fstpl
fstpt
pop
xchg
in
jae
fs
push
fldt
adc
std
dec
sub
loope
loopne
js
lret
aad
xchg
sub
push
out
lahf
aas
wrmsr
imul
mov
or
cld
stc
repz
icebp
pop
xorb
je
adc
inc
fwait
adc
sahf
aas
jg
aad
pop
jnp
ret
cltd
iret
lahf
aas
jg
xchg
arpl
pusha
ret
mov
insb
jb
cld
stc
repz
push
out
or
addr16
sub
or
dec
jge
push
jno
outsb
sbbl
repz
push
imul
clc
inc
and
push
aas
jg
cld
out
popf
daa
aad
rclb
jmp
push
in
iret
lahf
das
loope
and
sbbl
mov
scas
push
jns
rclb
cmpb
push
idiv
stc
repz
test
jmp
lcall
aas
jg
aaa
pusha
inc
sub
mov
jo
repz
jge
and
push
inc
cmp
sbb
jg
cld
pop
jge
jecxz
sbb
test
cs
in
xor
out
lahf
pop
sub
mov
sti
jg
cld
stc
repz
fidivrl
mov
mov
out
lahf
aas
inc
push
ja
iret
and
cld
stc
repz
sbb
jns
cmpsl
and
pusha
inc
call
and
loop
mov
mov
aad
or
stos
mov
mov
out
stos
and
pminsw
stc
repz
cmp
das
mov
jg
aaa
shrl
test
mov
or
dec
lock
je
mov
jp
mov
adc
aas
jecxz
iret
lahf
jg
lret
pop
jns
xlat
xor
fs
stc
repz
add
mov
pushf
shll
push
inc
test
out
lahf
scas
mov
or
xor
push
jg
cld
stc
mov
dec
repz
sub
ljmp
lahf
aas
nop
xor
jl
int3
int
xchg
in
adc
ja
mov
int
aaa
xchg
push
xlat
or
divl
cld
in
loope
and
scas
imul
js
aas
int
aaa
outsl
adc
inc
into
pop
popf
stc
dec
test
lret
repz
das
nop
dec
jne
mov
adc
stc
aad
fwait
sub
test
lcallw
bound
outsl
fdivrp
lods
and
out
stos
adc
xor
addl
enter
xchg
fwait
sbb
cs
aas
jg
cld
ret
dec
jmp
dec
mov
in
gs
sbb
add
iret
lahf
mov
push
xchg
jno
cld
stc
xor
and
dec
sti
jb
mov
fisttps
lods
adc
testl
stc
repz
push
decl
push
sbb
inc
jle
xchg
adc
xlat
push
in
inc
inc
jbe
xchg
pop
push
int
pop
fsts
lcall
loop
int
int
fwait
ja
dec
xor
movsb
test
out
inc
fiadds
inc
push
jecxz
add
xor
mov
outsl
inc
jno
sub
jg
jg
cld
inc
adc
jno
and
cmpsl
jnp
pop
mov
pushf
cmp
sub
aas
jne
push
cmpsl
mov
cmp
pop
hlt
xchg
add
rcrl
jp
outsl
fidivrs
xorl
les
pop
jg
out
fwait
cmpl
sbb
mov
mov
lret
xchg
mov
or
popl
fidivrs
dec
cmp
jne
ja,pn
jns
scas
mov
enter
int3
push
xor
sarb
xlat
stos
mov
aaa
ret
sub
jle
push
adcb
icebp
sbb
pop
push
xorb
lods
clc
xchg
mov
mov
int
aaa
add
xchg
push
emms
aas
adc
fs
cmp
stc
cli
dec
or
fwait
aaa
outsl
cltd
dec
outsb
cmp
fcmovbe
repz
insb
jbe
das
rolb
out
int3
js
pop
jl
sahf
mov
dec
imul
repz
sarb
inc
and
std
and
dec
repnz
fiadds
leave
repnz
jecxz
aaa
stos
lods
add
int
aaa
outsl
jecxz
jl
popa
jl
rcrl
jns
out
sub
mov
push
xor
sbb
call
fnstcw
mov
xchg
pop
mov
jl
cmp
lds
xchg
les
push
ds
repz
sub
push
and
outsl
fidivrs
mov
xor
ja
out
fwait
aaa
mov
and
mov
icebp
mov
repz
inc
pop
pop
and
inc
sub
in
push
xchg
test
sbb
pop
aad
adc
fidivrs
and
and
ljmp
mov
int
aaa
outsl
inc
and
jno
jbe
stos
into
shl
sbb
cmp
push
mov
ja
ds
inc
jne
jle
in
out
cwtl
out
pop
mov
inc
aad
insb
test
cld
stc
repz
pushf
mov
push
xchg
lret
pop
outsb
inc
jle
add
negb
loop
stc
repz
fisttps
xchg
mov
inc
js
in
cld
push
push
xchg
xor
and
repz
test
mov
fcoml
push
jg
cld
stc
out
in
js
aam
xchg
xor
sbb
rcrb
cmp
iret
lahf
aas
mov
mov
cli
mov
ret
andb
cld
stc
mov
std
test
outsb
out
jge
addl
lods
xchg
mov
stc
repz
lahf
cmp
inc
sti
xor
fisubs
loop
out
xor
jle
cwtl
sbb
inc
xor
insb
addb
sbb
inc
sahf
jge
inc
mov
lods
stc
repz
scas
out
xor
add
dec
stc
adc
cld
lea
movsl
inc
mov
pop
add
hlt
out
cwtl
movsb
mov
fwait
aaa
outsl
fiadds
dec
sahf
fiadds
jns
out
push
xor
nop
or
fidivrs
in
fists
enter
jne
in
out
fwait
mov
cli
sub
add
fidivrs
add
cwtl
out
lret
xchg
aaa
in
push
scas
es
jg
cld
jmp
aaa
and
mov
xor
ja
xchg
aas
mov
leave
push
adc
imul
push
outsl
frstor
cmp
fidivrs
cmp
cld
mov
pop
mov
cltd
in
fwait
aaa
shll
outsl
test
mov
xchg
mov
cs
movsl
sub
or
fwait
aaa
outsl
fiadds
test
jmp
pop
jmp
out
jns
xchg
add
fldcw
push
adc
outsl
fidivrs
sub
adc
cmp
out
lahf
lret
call
leave
mov
mov
jns
insl
pop
add
fmull
rorb
decb
scas
push
mov
xchg
fwait
aaa
outsl
fstl
add
int
jl
cld
cld
jecxz
pop
imul
out
push
shr
inc
aad
pushf
jno
and
dec
fidivrs
or
popa
push
jg
and
sti
cmp
inc
lock
mov
fwait
aaa
inc
outsl
out
pop
inc
xchg
dec
mov
repz
inc
adc
leave
xchg
lods
xchg
outsl
push
jns
xor
fidivrs
dec
mov
sarl
mov
jb
bound
aas
lea
aas
dec
stc
ds
jle
scas
mov
cld
stc
repz
inc
xchg
inc
rorl
es
lahf
aas
jg
pop
add
xor
xchg
push
xor
jg
and
in
ret
movsb
pop
mov
aaa
outsl
fidivrs
pop
mov
mov
pop
das
sbb
xor
mov
mov
or
adc
xor
or
fnstenv
lcall
out
sbb
xchg
pop
data16
mov
mov
jb
mov
push
xor
int
aaa
outsl
pop
adc
xor
or
dec
mov
adc
mov
movsb
stc
fmul
cmpl
sub
faddp
pop
fnstcw
test
push
add
xchg
int
mov
rcrl
fs
push
inc
mov
dec
out
push
inc
outsb
mov
and
xchg
js
repz
fisttpl
sub
pop
xor
sbb
out
mov
gs
pushf
lahf
xchg
xchg
xorl
pop
sbb
and
icebp
xchg
test
fistpll
outsb
fidivrs
lods
and
test
outsl
mov
out
fwait
test
push
fisttpll
xchg
mov
or
insl
andb
and
out
mov
enter
fisubs
jns
out
sbb
jne
insb
dec
mov
jno
jae
test
mov
sub
dec
jge
fbld
mov
mov
fwait
lock
aas
xchg
nop
test
je
dec
jle
add
in
dec
int
pushf
xchg
cld
stc
repz
inc
push
cmp
in
xchg
dec
mov
out
mov
aas
jg
cmpsl
fadd
jnp
or
add
xlat
lahf
aas
jmp
je
out
inc
outsl
es
test
nop
stc
repz
push
xor
cmc
imul
push
cmp
cld
mov
dec
loop
and
iret
lahf
mov
pop
insb
mov
ljmp
sti
lods
testl
stos
aaa
outsl
fidivrs
jl
scas
lods
pop
or
test
loope
out
fwait
aas
into
das
jb
sub
mov
stc
mov
lock
insb
xchg
insb
xchg
aas
aaa
adc
mov
les
push
test
out
fwait
add
shll
cmp
xor
mov
push
mov
int
aaa
out
inc
push
jecxz
cmp
push
movsl
push
jae
jns
out
sub
mov
stc
mov
ficoms
and
in
xchg
imul
into
popf
js
jns
out
push
mov
shrl
fnsave
outsl
fidivrs
add
xor
and
aam
cmp
and
mov
mov
out
jle
fidivrs
mov
pop
and
adcb
dec
fildll
out
fwait
aaa
xchg
dec
fs
pop
adc
scas
xlat
in
imul
sti
leave
int
xchg
iret
inc
icebp
pusha
mov
xchg
fwait
aaa
outsl
sahf
arpl
movl
jno
jns
push
loop
or
scas
std
push
rorl
mov
pop
push
mov
in
idivl
add
pop
test
jns
out
outsl
mov
int3
mov
outsw
fidivrs
inc
cwtl
push
push
inc
pop
jno
add
imul
inc
mov
sti
loopne
inc
rcrl
enter
jmp
lahf
jg
add
movups
pop
repnz
mov
pop
loop
testl
mov
rclb
inc
cmp
pop
pmuludq
ret
sbb
out
ja
in
jg
shrb
or
jg
cld
push
fildl
inc
bound
sbb
adc
out
lahf
xor
inc
sahf
lock
sub
cld
stc
insb
std
push
repnz
push
out
out
cwtl
pop
sarb
cmp
cmp
cmp
inc
mov
mov
sbb
loop
jns
push
imull
xchg
addb
aam
lahf
xor
fidivs
mov
jo
push
lock
mov
lahf
inc
cmp
jo
push
or
repz
clc
mov
push
sbb
daa
mov
cmpb
cmp
vcvtsd2si
outsl
fisubs
mov
call
out
xchg
add
lea
bound
cmpsl
in
sahf
cld
fidivs
sbb
push
pop
mov
sbb
iret
std
inc
test
repz
inc
ljmp
repz
lahf
insb
and
shll
jb
cld
stc
repz
xlat
lahf
icebp
inc
sti
cmpsb
and
fcoml
xchg
aas
jg
xor
fwait
pop
lods
icebp
in
iret
pop
sbb
push
aas
loopne
mov
stc
repz
out
push
fs
jg
fidivrs
or
sbb
lds
int
aaa
fdivl
stos
mov
rcr
daa
or
movsl
xor
shr
pop
into
inc
cmpsl
adc
push
mov
fwait
aaa
outsl
bound
fcoms
mov
enter
sar
fwait
sub
adc
or
ja
lahf
jg
ljmp
jmp
stc
repz
mov
icebp
inc
int
mov
cmpsb
sti
rcr
aas
stc
pushf
xor
jmp
insb
xlat
ljmp
outsl
xor
xor
fs
xor
push
add
in
sub
and
aaa
mov
subl
push
leave
adc
lret
pop
cs
pusha
mov
jmp
iret
mov
iret
dec
movsb
lahf
and
or
sahf
cld
mov
scas
cmp
dec
pusha
sbb
outsl
loopne
cli
imul
and
loope
push
sub
inc
mov
pop
ljmp
stc
pop
mov
jecxz
cltd
out
int
stc
out
lahf
aas
add
into
jle
jnp
jnp
cmp
cld
stc
repz
ljmp
ror
xchg
insl
adc
adc
aad
stc
aaa
outsl
fiadds
add
push
lods
xchg
cmp
push
imul
out
fwait
push
push
aaa
mov
jecxz
cmp
jns
mov
mov
sahf
or
cld
adcl
or
jb
pop
fisubrs
mov
jge
inc
mov
dec
cli
loope
sub
sti
jecxz
data16
push
inc
pop
mov
mov
out
or
mov
js
lock
pop
and
jle
xchg
add
aas
call
add
arpl
insb
cld
stc
repz
mov
mov
mov
test
inc
sub
jns
mov
cmpl
loope
repz
insb
idiv
and
jbe
mov
and
aas
jg
cld
inc
out
xorl
in
in
adc
iret
lahf
popa
pop
mov
movsb
repnz
jno
jge
scas
jg
cld
stc
and
xlat
shll
repz
aas
nop
leave
rorb
jnp
mov
aad
cld
stc
repz
xchg
mov
inc
jno
mov
xchg
call
jns
movsb
outsl
stos
and
xor
xchg
es
enter
jle
mov
and
mov
cld
mov
jecxz
out
aaa
sbb
inc
jle
in
test
jecxz
jo
cmp
cld
stc
rep
xchg
lds
fwait
dec
dec
push
inc
cmp
stc
mov
jg
and
sbb
jg
jo
ja
aas
jg
cld
cmpsb
dec
call
clc
lret
pop
cmp
out
lahf
lret
xorl
shld
pop
sub
stc
dec
mov
pop
arpl
jns
sbb
call
sub
test
dec
loope
test
insl
leave
insb
dec
mov
mov
xchg
adcb
cmc
xchg
cld
jmp
or
scas
mov
icebp
mov
das
popa
mov
testb
inc
int
fs
cld
stc
repz
xchg
fwait
xor
ficoms
xchg
iret
lahf
aas
jg
arpl
outsl
call
repz
stc
repz
test
imul
mov
test
lea
adc
inc
out
inc
les
icebp
hlt
icebp
sub
test
iret
mov
push
outsl
xor
xlat
mov
jg
xchg
int3
push
push
mov
stc
repz
mov
int
ret
pop
mov
mov
aas
jg
cld
add
sti
jmp
outsb
push
xor
cmpsb
or
jns
movsb
and
jns
jne
or
dec
push
imul
fmulp
pop
mov
push
add
dec
cmp
mov
pop
xor
dec
pop
xlat
addr16
jno
mov
dec
sbb
xchg
and
mov
push
out
repnz
inc
or
sbbb
rolb
orb
mov
call
les
xchg
xrelease
mov
out
adc
jno
pop
fiadds
xchg
fwait
aaa
outsl
fsubp
out
lock
imul
test
repz
nop
push
pop
das
pop
daa
or
push
push
mov
inc
adc
fnstcw
std
leave
lahf
lcall
pop
jnp
stos
fimull
dec
packuswb
insb
fidivrs
or
test
out
xchg
mov
imul
cld
stc
repz
test
jno
ret
jae
out
and
test
lahf
aas
jg
xchg
dec
add
mov
outsb
push
xor
lret
repz
pusha
dec
push
xchg
xor
ja
xor
mov
adc
fidivrs
dec
mulb
test
lahf
rcrl
mov
dec
loop
dec
aad
incl
repz
lahf
sbb
test
mull
jle
jle
cld
stc
nop
fsub
enter
aas
fidivrs
sub
xor
pop
jb
fwait
in
pop
and
jg
cmp
dec
adc
xor
lahf
jg
jle
mov
fistpl
sub
out
push
bound
call
repz
cmp
sbb
aaa
fcomip
scas
mov
mov
movsb
jns
dec
idivb
jb
xchg
int
loop
subl
sbb
cwtl
xchg
fsubrl
mov
jns
outsl
aas
clc
mov
clc
addl
inc
outsl
aam
and
xchg
cmpsb
popa
leave
xchg
cmpsl
scas
stc
stc
repz
mov
es
loop
add
sbb
sti
mov
lds
fs
cmp
in
mov
fnstsw
es
outsb
stc
pop
adc
pop
je
pushf
mov
xor
popf
cld
movb
add
jb
fnstsw
jb
ja
ficoms
nop
inc
dec
movsl
mov
test
decl
inc
lret
fs
add
shrb
call
push
sbb
jle
jl
out
movsb
das
push
pop
lret
inc
pop
lock
dec
xchg
and
mov
test
add
xchg
mov
dec
loope
add
ret
add
shr
insl
adc
inc
ss
out
pop
mov
sbb
jle
cmpsb
adc
pusha
repnz
inc
das
mov
dec
jge
out
fsubs
inc
add
dec
mov
adc
adc
xchg
rorb
mov
imul
repz
mov
xchg
mov
cs
outsl
cld
stc
xlat
fdivs
lahf
jmp
inc
xor
aas
jg
je
mov
insl
loopne
pop
cld
stc
repz
jge
cmp
scas
shll
cwtl
add
into
lahf
aas
jg
scas
ds
add
scas
cwtl
sbb
pop
in
stc
repz
popa
sub
mov
daa
sti
cmp
jg
cld
mov
xchg
sbb
or
out
adc
add
rolb
fs
dec
outsl
fidivrs
roll
test
int
aaa
mov
ret
push
or
lock
cli
cmpsb
loop
jns
out
shr
movsb
stc
lods
and
out
stos
adc
xor
mov
loop
inc
jle
je
jl
push
mov
push
jnp
cmp
xchg
int
aaa
mov
pop
jne
xchg
and
addr16
lahf
jg
or
mov
fcoms
stos
add
out
fiadds
sub
or
push
adc
ljmp
xorl
push
dec
movl
out
aas
jg
cld
push
mov
mov
mov
xchg
lahf
inc
jb
hlt
adc
shl
out
inc
ljmp
mov
fucomip
adc
adc
outsl
call
push
call
inc
xor
lods
adc
ja
adc
add
call
inc
call
inc
sub
aad
mov
cmpsl
dec
push
mov
xchg
xchg
sub
aas
call
inc
call
mov
adc
push
adc
das
sub
push
call
movsb
push
adc
out
lcall
clc
sub
sub
pop
call
daa
call
sub
addr16
mov
call
scas
sbb
call
out
call
push
call
dec
call
mov
call
push
call
inc
xchg
imul
cmpsl
inc
adc
inc
call
sub
daa
jg
jg
in
mov
push
xor
push
call
insb
call
scas
call
adc
xcrypt-ecb
cmpsl
or
inc
decb
pop
adc
stos
mov
call
sub
call
mov
xor
inc
pop
cmp
dec
push
movsb
das
call
inc
call
mov
in
push
adc
lahf
xchg
cmp
mov
push
movsl
sub
pop
call
sub
das
adc
pop
inc
xchg
sub
pop
push
in
sub
inc
push
sbb
call
push
psubsw
movsl
call
mov
call
adc
adc
call
push
call
push
movsb
psubsb
push
and
push
call
dec
call
adc
fucomip
inc
adcb
inc
or
mov
daa
scas
repnz
mov
jae
fwait
aaa
outsl
in
pop
loop
adc
push
inc
adcl
and
xlat
outsb
fidivrs
insb
xor
jae
int
fwait
aaa
add
mov
mov
and
stos
inc
add
pop
cmp
mov
cmp
add
sbb
pop
jmp
pop
fcompl
icebp
insl
pusha
in
iret
add
ficoml
xor
stc
xlat
sub
xchg
push
imul
adc
inc
out
mov
inc
cmp
xor
cmp
mov
pop
test
push
xor
testb
out
fwait
aaa
inc
jmp
lret
and
jge
cwtl
jns
lea
xchg
dec
or
pop
xor
xlat
sub
nopl
fcoml
imul
jle
cld
imul
push
mov
pop
jnp
test
add
cmp
out
lahf
fildll
sbbb
imul
xchg
repnz
sub
cmp
loope
push
push
lods
cmp
int
ja
xchg
sbb
and
mov
aaa
push
mov
aam
cmpsb
mov
xor
sbb
stos
in
in
aas
lcall
cmp
jecxz
push
inc
push
cli
mov
cmc
lods
inc
add
jg
sti
xor
sub
out
subb
xchg
mov
fwait
aaa
push
lds
pop
push
inc
jg
out
jl
sar
inc
test
mov
iret
mov
out
aam
jae
mov
jg
inc
or
add
cs
mov
jo
les
cmp
inc
in
mov
insl
inc
xchg
mov
adc
andb
sbb
mov
aaa
call
push
adc
xor
dec
push
jo
lock
add
cmp
popa
push
inc
stos
sbb
sub
jb
sbb
xchg
pop
xchg
cmp
cmp
cwtl
stos
iret
lahf
aas
jg
cmp
fadds
mov
enter
cmp
subl
insl
sahf
test
ss
out
fwait
insb
loopne
push
xchg
fldl
pusha
rcrb
and
sbb
cmp
and
aas
out
mov
cld
stc
xlat
cmp
cmpsb
pusha
dec
std
cmp
subl
aas
jg
cmp
xor
jbe
jb
inc
push
mov
push
rorb
cmp
add
xchg
pop
cmp
and
call
fs
js
mov
stc
insl
sub
xchg
cmpsl
ja
outsl
fwait
push
fdivrl
cmpsl
mov
xchg
and
scas
sbb
lea
mov
pop
jns
cmp
dec
jp
sub
repnz
call
pop
aad
and
cmp
push
iret
xchg
jp
repz
popa
sbb
jp
lea
inc
outsl
flds
scas
mov
in
fs
add
loope
cld
stc
inc
fcomip
leave
repz
in
fs
jns
push
enter
lret
jnp
xchg
leave
mov
inc
in
out
cltd
popa
out
push
inc
in
sub
sbb
test
out
es
pushf
out
aam
cmp
cld
cmp
cmp
outsb
je
sub
into
fwait
das
lahf
iret
lahf
aas
jg
ret
mov
popl
pop
xchg
xchg
fucomp
mov
ret
xor
xacquire
mov
adc
stc
ret
pusha
insb
nop
int
mov
push
cmp
imulb
negb
insb
fidivrs
sub
repz
adc
lret
pop
icebp
sub
stc
ret
sub
out
pop
dec
cli
out
cmpsb
sarb
pop
sub
sub
enter
jb
out
fisubl
jg
out
mov
xlat
sub
push
sub
idiv
rep
or
dec
dec
mov
shrl
mov
xor
pop
sarl
xchg
aas
jg
mov
insl
cmp
xchg
mov
adc
push
push
mov
adc
bnd
dec
mov
mov
push
push
mov
inc
outsl
outsb
sub
ficomps
cmp
pop
mov
or
aas
jg
cld
mov
adc
test
and
iret
lahf
dec
mov
jecxz
mov
sahf
xor
cmp
insb
cmp
cmpsl
aas
jg
cld
pop
lret
ret
xchg
test
les
and
mov
in
lahf
or
scas
sub
mov
push
mov
dec
rcrl
outsl
ficomps
ret
je
jge
dec
cmp
out
adc
in
mov
adc
add
out
and
sub
cmp
or
icebp
inc
pop
ljmp
pop
xlat
and
and
lods
sub
rclb
inc
jle
cld
stos
sbb
ja
cmp
jp
xchg
in
inc
lea
cmp
in
mov
pop
adc
inc
outsb
and
add
dec
cmp
sub
dec
mov
cmp
mov
pop
mov
cmp
adcb
repz
xchg
mov
js
es
mov
sub
xchg
fwait
aaa
mov
fbld
xchg
lahf
aas
jg
outsl
cld
mov
cmp
test
leave
sti
daa
scas
push
ror
jae
cli
mov
or
xchg
mov
lea
cmp
mov
int3
mov
sbb
cld
imul
cmp
fidivl
lds
add
xor
cmp
out
mov
inc
or
push
inc
sar
clc
inc
cmp
push
fpatan
pop
pop
mov
cmp
cmp
aam
loop
xchg
inc
mov
cmp
int
ja
adc
fs
mov
repz
leave
jns
in
mov
mov
push
inc
cmp
scas
push
repnz
shll
sub
popf
cmpsl
mov
cmpsb
mov
dec
sbb
or
xor
sbb
push
inc
enter
cmp
sbb
decb
roll
cmp
iret
lahf
jg
das
imulb
or
sbb
stc
repz
push
or
pop
leave
or
outsl
fiadds
xor
xchg
imul
int
aaa
xchg
repnz
mov
lret
out
inc
dec
repz
out
out
inc
ja
shrb
cmp
xchg
jge
repz
fwait
or
push
ljmp
add
inc
in
mov
movb
sbb
out
mov
je
or
sbb
cmp
pslld
pop
mov
call
js
xlat
sub
cmp
in
or
cmp
or
sbb
or
cwtl
cmp
sbb
decb
inc
sbb
daa
xchg
jg
add
divl
xchg
cmp
fwait
inc
inc
add
pop
cmp
mov
in
add
jbe
mov
or
jmp
outsl
fiadds
iret
jp
cmp
push
xlat
in
addl
fwait
aaa
ffreep
mov
mov
test
mov
jns
out
ret
in
gs
mov
xor
andl
jg
call
scas
aas
mov
movsl
jmp
leave
test
repz
in
clc
shrb
nop
das
test
mov
cld
xor
ljmp
cmp
adc
sub
cmp
inc
add
xchg
aaa
outsl
stos
cli
add
dec
mov
dec
aad
cmc
pop
fmuls
sub
scas
push
ficoms
aad
scas
push
ror
push
repnz
stc
stc
repz
cmp
lods
add
inc
jge
flds
cmp
mov
aas
xor
insb
faddl
mov
pop
sahf
mov
mov
adc
mov
aaa
xchg
mov
inc
lahf
aas
jg
cmc
xlat
ret
cmp
mov
jbe
lret
mov
iret
aam
xchg
dec
les
mov
shrl
cmp
sbb
sbb
enter
orl
jns
pop
mov
cmp
lret
loopne
repnz
test
fdivl
pop
popfw
push
in
cmp
fucomip
sub
jg
dec
int
add
popf
adc
addb
push
xor
clc
imul
dec
std
lret
xchg
hlt
sub
mov
test
pop
movsl
xchg
xchg
cmp
pop
rorb
fwait
adc
xchg
fists
and
xchg
push
ja
xor
repz
and
mov
push
sbb
add
adc
dec
push
dec
arpl
xor
inc
ret
sbb
stos
adc
add
adc
repnz
icebp
add
decb
mov
imul
es
mov
mov
xor
dec
insb
lahf
aas
lcall
cmp
lret
out
shrb
adcl
jnp
adc
pop
ljmp
imul
movsl
adc
mov
jg
xchg
or
adc
movsb
mov
inc
insl
jo
iret
push
mov
test
add
cmp
mov
mov
repz
jp
xchg
fwait
ja
ljmp
dec
iret
mov
or
movsl
push
test
enter
out
jo
pop
ror
adc
call
bnd
fcoms
ret
dec
or
out
lahf
mov
xchg
inc
adcl
shll
in
cmp
aas
jbe
dec
mov
xchg
iret
lahf
aas
fsubs
ret
int3
scas
jmp
cmpsl
sbb
sbb
cs
jmp
add
jno
mov
leave
test
sbb
mov
ret
mov
stos
xchg
add
mov
pop
adc
or
inc
inc
adc
xchg
xchg
adc
shlb
leave
test
test
js
adc
rcrl
loopne
and
stos
pop
pop
push
cmp
adc
sbb
lea
pop
push
add
fistpl
add
sbb
imul
cmp
inc
add
or
push
icebp
add
nop
ds
dec
pop
mov
clc
pop
or
add
cmp
movsl
lds
sub
sub
rolb
push
adc
inc
pop
push
jne
and
xlat
push
rolb
pop
adc
or
testb
add
test
or
adc
or
mov
and
xorl
jecxz
add
mov
pusha
int3
xor
iret
pop
les
sub
sbb
jne
mov
push
mov
rorb
orl
fnstcw
or
in
in
fisubl
pop
adc
ret
inc
cmpsl
or
sbb
cmp
push
fidivl
daa
push
outsb
stc
sbb
test
ljmp
sub
cmp
mov
push
mov
or
leave
subl
push
loope
xor
adc
cmp
enter
repnz
jge
adc
or
inc
pusha
sbb
or
decb
inc
cmp
add
adc
inc
adc
push
mov
ljmp
sub
fildll
mov
ret
jae
fildll
pop
push
test
push
adc
dec
cwtl
mov
orb
add
adc
cltd
aam
xlat
cmp
adc
mov
testl
aam
cmp
inc
test
adc
cwtl
in
add
rcl
fucomi
pop
lods
int
rolb
push
imul
incl
cmp
inc
sbb
stc
or
sub
rcrb
mov
sti
sbb
mov
xor
add
bound
and
inc
cmp
mov
icebp
insb
shrl
pop
das
lods
or
andb
adc
sbbb
jo
mov
adc
push
cwtl
inc
aad
mov
or
adc
stos
mov
dec
hlt
and
rcrb
adc
and
ljmp
rolb
inc
lds
cli
add
fwait
ret
push
xor
cmp
push
shll
cmovo
addb
call
or
push
les
sbb
ljmp
or
sahf
pop
or
mov
fisttpl
dec
or
sbb
mov
sub
push
call
mov
xchg
sbb
and
and
push
add
pop
mov
mov
inc
cmpsb
pop
roll
ficoml
inc
adc
rolb
inc
xchg
sbb
mov
inc
add
xor
or
daa
pusha
adc
fdivl
cmc
push
jbe
out
cmpsl
into
add
pop
push
cs
or
sbb
lods
movb
and
mov
or
and
inc
mov
push
push
std
rolb
jae
jno
addl
jmp
push
or
pop
mov
rcll
add
pop
rclb
add
adc
cmp
shl
or
or
mov
push
inc
loopne
clc
adc
mov
popl
sbb
pusha
add
add
sbb
or
sbb
push
andb
dec
or
filds
adc
push
imul
and
loop
pop
dec
pusha
cmpsb
and
push
enter
mov
push
movsl
adc
fildll
push
and
xor
call
dec
mov
test
pop
adc
add
inc
add
push
mov
stos
cmp
inc
dec
add
mov
mov
sbb
mov
xor
jo
pop
into
aas
loop
xor
sub
push
sbbb
dec
fnstcw
dec
adc
arpl
outsl
or
inc
loopne
lret
add
cmpsb
mov
andb
push
push
add
dec
lods
mov
imul
lods
sbb
inc
cltd
ljmp
rorb
or
pusha
xor
sbb
insl
cmp
adc
xchg
andb
push
push
cmp
mov
push
mov
cmp
adc
cmp
push
adc
push
xchg
es
inc
xor
inc
sbb
pop
push
aaa
sub
mov
jecxz
adc
sub
mov
into
std
sub
mov
test
adc
xor
adc
sub
xchg
testb
aam
cmp
pop
push
sti
sub
xchg
cmc
roll
lods
cli
push
ret
mov
int
adc
xor
adc
push
inc
sub
cmp
scas
jne
jb
sub
mov
leave
out
add
adc
rcrb
xchg
mov
mov
sbb
loopne
sbbb
mov
mov
sub
mov
and
stos
lds
mov
add
adc
mov
mov
jne
xchg
mov
and
test
and
cwtl
repnz
sub
es
mov
mov
mov
mov
cwtl
aaa
sub
dec
inc
shl
inc
pop
add
mov
or
fcmovnb
add
add
xchg
or
mov
arpl
rcl
or
enter
lret
xchg
mov
xor
test
sub
lock
pop
dec
adc
mov
adc
mov
mov
push
int3
add
inc
adc
and
stos
jbe
inc
and
lret
add
or
rcr
sub
adc
nop
jnp
pop
insb
insb
insb
out
sbb
push
add
shll
cmc
mov
or
hlt
jnp
nop
mov
xor
mov
popa
adc
adc
jo
cmp
xchg
jmp
je
leave
das
imul
sbb
xor
add
push
jnp
in
popf
shl
andb
xor
push
mov
ror
jb
cmp
jge
mov
stc
les
scas
dec
inc
and
mov
mov
mov
or
leave
xor
or
cmpsl
movsb
inc
mov
stos
bound
test
sub
or
jnp
add
adc
push
adc
inc
push
mov
cmpsb
inc
push
add
dec
or
jns
inc
add
and
sbb
jbe
or
and
or
addl
sub
and
xchg
cmp
sbb
faddl
fs
inc
fdivrs
test
push
xor
rol
sub
add
jmp
mov
pop
ffreep
push
pop
sbb
or
sub
xchg
imul
add
rcrb
inc
cmp
ret
enter
mov
mov
rol
aad
ljmp
enter
adc
imul
push
or
push
ret
in
movsl
mov
ljmp
or
in
xchg
adc
or
and
jnp
out
push
push
push
adc
sbb
repnz
repnz
arpl
inc
jg
mov
add
movsb
andl
inc
fisubl
jbe
leave
rorl
push
or
push
inc
mov
call
inc
xor
pop
movzbl
inc
mov
mov
jo
test
stos
mov
and
push
cmp
pop
shlb
int
xchg
jle
push
mov
rcrl
jns
sbb
adc
pushf
mov
jl
add
testl
test
mov
mov
fistpl
dec
gs
js
push
jge
or
pop
mov
in
ret
xor
jno
add
push
mov
pop
into
daa
mov
mov
leave
sbb
ss
sub
adc
lahf
add
push
pop
sbb
mov
sarl
pop
jge
divl
or
pop
xchg
adc
sub
pop
icebp
je
call
and
xchg
sbb
lret
loope
add
outsb
adc
or
dec
pusha
add
roll
leave
push
jo
lret
lock
or
add
stos
mov
inc
addb
roll
cmp
nop
roll
or
sahf
mov
movsw
adc
add
jo
sbb
cmpsb
cli
rcrl
cmpsl
fs
jbe
mov
pop
pushf
and
pop
jle
leave
sbb
lock
test
push
dec
icebp
and
jb
xor
aam
jb
xorb
adc
ret
or
adc
lcall
loopne
sbb
js
sub
mov
sub
outsb
push
pop
adc
and
push
add
fnstsw
dec
int3
or
pop
push
scas
jge
or
mov
dec
or
push
adc
push
stos
lock
nop
and
sub
xchg
rorl
jae
out
dec
mov
add
inc
enter
and
fdivrs
test
imul
lods
lods
pop
or
scas
and
push
xchg
push
in
mov
jo
arpl
mov
mov
mov
sbbb
push
add
mov
sahf
mov
jo
xchg
xlat
and
push
or
pop
rcrb
cmp
test
mov
cmp
push
xchg
mov
adc
loopne
test
mov
js
movl
rolb
jnp
mov
sbb
and
call
inc
jmp
jmp
or
adc
adc
or
push
inc
lods
loope
inc
sti
jge
mull
movb
movq
jne
lret
loopne
add
and
dec
or
push
es
mov
mov
add
test
push
sub
pop
cmp
jecxz
sub
ss
mov
cmc
and
inc
jnp
movsb
push
ds
fisubrs
xlat
push
xchg
adc
dec
jge
clc
subb
inc
insb
mov
push
and
lds
push
les
pop
xchg
gs
and
push
test
addr16
or
imul
inc
push
or
and
and
aas
dec
jne
jecxz
adc
ret
pop
adc
into
sahf
inc
add
enter
orb
pushf
add
lcall
jo
dec
inc
sbb
mov
lcall
mov
or
sbb
cmpb
inc
push
addr16
add
jno
pop
addr16
in
jne
fsincos
push
add
mov
adc
inc
pop
add
aaa
mov
push
mov
xchg
subl
scas
xor
imul
and
addl
add
call
subb
adc
and
scas
mov
jmp
pop
jne
inc
inc
mov
push
mov
ljmp
fcoms
scas
mov
enter
add
push
sbb
and
loop
sbb
loopne
or
adc
mov
xlat
jo
popa
cli
add
and
push
mov
enter
jo
xchg
movsb
mov
call
mov
add
adc
nop
sbb
add
cmpsb
cwtl
mov
sub
sub
addb
add
push
add
ss
xor
mov
shlb
shrl
sub
sbb
push
dec
sbb
cmp
xchg
xchg
or
add
pusha
pop
mov
and
mov
mov
or
mov
loopne
in
xorl
add
repnz
loopne
mov
push
call
adc
sti
add
mov
test
test
aad
push
cmc
mov
xchg
das
push
vrsqrtss
rcrl
push
test
and
les
xor
inc
lods
add
adc
shlb
rorb
push
inc
iret
stc
sub
cmpsb
dec
pushf
es
mov
or
mov
mov
dec
clc
pop
xchg
aam
mul
sarb
or
jo
jg
add
add
jae
mov
add
push
out
adc
faddp
fsubl
adc
shrl
mov
sbb
lds
adc
cmp
sbb
mov
js
inc
loop
inc
inc
jge
rcll
test
push
add
in
leave
inc
mov
call
pop
inc
add
push
add
pop
inc
loopne
cmp
shrl
aad
ret
les
jo
sbbb
div
lcall
jl
or
adc
add
add
data16
mov
pop
push
testl
testl
pop
inc
xor
movb
sub
sbb
sbb
lods
int3
outsb
sbb
push
mov
cmp
add
nop
pop
adc
adc
out
push
stc
mov
fmull
lock
xor
mul
rcrb
inc
sbb
call
sub
pop
in
ret
lds
ret
add
mov
daa
pusha
add
pop
nop
hlt
rcl
jb
cmc
hlt
cli
lods
push
cmp
add
adc
aam
and
sarl
inc
push
push
push
out
push
xchg
mov
fistpll
and
or
push
xchg
pusha
loopne
ficoml
jns
inc
sbb
pop
ret
icebp
js
pop
push
inc
or
push
add
loop
and
mov
fnsave
adc
sub
jmp
inc
pusha
pop
pop
stos
mov
bound
xchg
pop
out
push
scas
push
or
push
jo
pop
shrb
js
orb
and
pop
cmp
je
movsb
stc
adc
inc
pop
push
sbb
jmp
iret
jp
mov
push
xchg
mov
add
imul
cmp
jl
push
cmp
and
sub
dec
add
int3
xor
push
je
sbb
clc
sub
jae
sarl
mov
cmp
cmp
add
bound
stos
movl
add
iret
add
sub
xor
testl
icebp
and
test
push
sub
adcl
push
ljmp
cmp
imul
xchg
popa
cmc
push
inc
pop
jmp
mov
mov
movsb
divb
aam
addb
dec
cmp
push
shlb
std
adc
mov
call
push
adc
push
push
sub
push
sbb
adc
mov
pop
lock
pop
sub
ret
pop
dec
sub
and
rorl
push
pop
movsl
inc
mov
sub
dec
adc
stos
lock
loope
inc
push
pop
shld
out
adc
lret
mov
mov
and
adcb
ret
and
js
jnp
cmp
add
popa
je
sbb
sbb
lock
or
fcompl
lods
push
enter
incl
les
pusha
fs
adc
lock
cmp
dec
test
pop
or
pop
jmp
hlt
and
or
or
in
nop
lret
into
out
push
subl
pop
mov
add
adc
add
push
cmp
push
mov
mov
stc
rclb
mov
lea
or
cmp
rcrb
inc
jne
mov
add
icebp
dec
sbb
mov
subb
or
inc
mov
mov
lret
xchg
xorl
cmp
cmc
push
push
inc
inc
adc
push
leave
andl
pusha
or
mov
push
and
mov
inc
fidivs
shr
out
mov
adc
test
adc
movb
je
lods
sbb
fnsave
inc
push
lds
addb
pop
jae
sbb
ret
aam
lods
mov
mov
push
int3
sbb
js
dec
and
add
movsl
and
daa
mov
lret
adc
pop
jo
cli
leave
and
sbb
push
mov
jne
shrl
imul
xor
lcall
xchg
or
adc
insb
jne
movsb
pop
lock
or
dec
inc
loopne
stc
xor
mov
dec
add
add
push
jecxz
mov
mov
shl
fcoml
imul
inc
mov
sub
cmpsb
or
dec
repnz
sub
mov
sub
pop
fwait
loopne
lods
cmp
leave
fs
dec
jno
inc
add
push
dec
ja
in
cmpsb
push
ljmp
ret
inc
stos
adc
cmp
cs
dec
movzbl
mov
and
pop
sub
dec
idivb
dec
jo
popa
hlt
mov
pushf
test
sub
push
dec
sbb
je
or
rclb
lds
and
imul
sub
push
and
push
or
scas
cltd
sbb
sub
xor
mov
sbb
in
std
dec
pusha
cs
rclb
jno
add
push
push
pop
ret
shr
and
ljmp
inc
mov
jg
xor
push
xor
cmpb
cwtl
loopne
sub
sub
add
shll
push
cmpb
pop
insl
sarb
mov
rol
gs
ret
ds
add
cmp
shlb
call
fwait
lea
or
les
xchg
bound
in
adc
push
cmp
rolb
mov
push
adc
andb
and
jmp
and
rcll
pop
ljmp
sub
or
jg
jmp
cmpl
test
sub
push
adc
sahf
and
adc
pop
pop
xor
fadds
mov
rcrb
inc
fsts
sbb
xchg
jo
popf
scas
push
xchg
lods
dec
cli
or
add
pop
add
sbb
pushf
stos
into
sub
mov
idiv
adc
sub
add
mov
mov
push
push
adc
or
addl
enter
add
adc
aad
and
push
je
pop
add
addb
popa
cwtl
test
inc
dec
jg
aad
inc
shrb
negl
cmp
aad
sbb
mov
sbb
dec
popf
sbb
pop
pop
fcomip
mov
movsl
jo
jno
ret
sbb
sub
cltd
mov
sbb
call
inc
inc
add
cmp
pop
push
inc
inc
cs
mov
push
xchg
int
or
aam
je
pop
movsb
or
outsb
jl
notb
daa
nop
test
add
mov
add
or
add
gs
inc
jge
sub
cwtl
adc
test
enter
lcall
subb
dec
loopne
ficompl
adc
jmp
ds
mov
js
test
push
dec
inc
push
xchg
shl
push
or
sub
adc
push
xchg
pop
or
ficoml
or
lods
add
je
test
adc
aam
rclb
mov
cmpsb
mov
jno
lock
inc
loopne
xor
add
inc
xor
cltd
pop
pushf
inc
or
aaa
test
test
push
xor
lds
xor
xlat
lret
loope
shrl
loop
leave
outsb
mov
add
mov
sub
into
clc
add
in
clc
xor
ljmp
sbb
pushf
adc
mov
jl
xor
adc
loopne
mov
adc
add
pop
and
jno
cwtl
mov
push
xor
jae
aas
dec
xchg
shl
jge
mov
icebp
pop
push
std
sbb
inc
dec
cmpsb
mov
sbb
sbb
rcll
sbb
pop
jne
stos
jmp
add
dec
push
add
mov
sahf
or
mov
add
mov
cwtl
mov
lock
add
clc
mov
add
jg
mov
dec
mov
bound
xchg
in
add
in
cli
adc
ja
jo
sub
adc
shlb
mov
xchg
or
jo
mov
aam
push
lods
aaa
hlt
stos
pop
adc
jmp
wbinvd
push
sub
push
xchg
pop
lcall
add
inc
pushw
dec
inc
mov
rcrb
mov
sbb
pop
mov
daa
pusha
pusha
mov
rcrb
cmpsb
sbb
ja
in
cmp
sti
shrl
add
arpl
mov
add
ret
or
sbb
jo
inc
push
adc
flds
mov
int
mov
inc
or
inc
test
insl
ljmp
or
sub
nopl
das
xor
or
jne
daa
lcall
ret
push
pop
mov
inc
cmp
lret
and
add
add
pop
outsb
and
andb
ljmp
push
and
into
push
cmp
cmc
mov
pusha
mov
adc
push
arpl
or
jb
js
imul
repnz
cmpsb
inc
mov
int
std
adc
push
xor
mov
sbb
ret
sbb
in
jae
addb
sub
lods
rcrb
pop
push
movsl
and
fld
fsubrl
fstl
into
in
push
cs
lods
dec
subl
mov
sbb
insb
jno
push
cli
ds
push
aam
cmpsb
add
ret
loop
subps
dec
jo
es
rcl
jp
lret
lret
jae
test
sub
jae
or
insl
fdivrl
aam
in
sub
pop
adc
clc
dec
dec
roll
jl
mov
sbb
ja
adc
ja
imul
aaa
sbb
testb
add
push
outsl
popf
add
lea
mov
enter
orb
sti
push
push
sbb
dec
hlt
daa
inc
dec
or
push
bound
ljmp
rorl
stos
dec
xor
adc
mov
out
mov
pop
lods
xchg
sbb
xchg
rclb
inc
sub
das
xor
adc
sbb
mov
stos
mov
lcall
mov
mov
mov
inc
jo
pop
ja
or
push
lock
repnz
xchg
rcll
mov
or
into
test
push
sbb
sbb
cmp
dec
adc
lea
or
lds
inc
pop
pop
bound
aam
lock
nop
push
cld
jmp
jecxz
rcrb
outsl
add
sbb
jno
out
rorb
inc
push
mov
add
stc
push
jg
adc
sbb
xlat
in
mov
ja
iret
loope
test
cli
add
cmp
mov
rorl
pop
aam
pop
dec
adc
cmp
shrb
add
loope
lock
xchg
add
mov
orl
pop
sbb
cmp
js
gs
xchg
mov
data16
xchg
jecxz
fidivrl
and
dec
sbb
jmp
pop
les
mov
in
sub
xchg
jns
and
call
mov
pop
lods
addr16
inc
add
sub
test
mov
call
dec
push
pop
adc
add
test
add
adc
or
bound
in
add
inc
ja
lds
mov
lret
jo
pop
testl
mov
adc
in
jle
and
icebp
or
sub
and
lds
jo
loope
xchg
stos
lods
jle
gs
or
push
add
sarb
and
outsl
scas
or
rcl
push
mov
or
push
icebp
add
mov
mov
push
xchg
sub
inc
mov
cmp
cmp
test
push
xor
mov
insl
sub
and
stos
sbb
push
cvtps2pi
add
fbld
and
push
or
cli
or
sbb
mov
ljmp
lcall
das
loop
cwtl
getsec
inc
mov
add
and
aam
jp
loopne
push
sub
shlb
call
ret
cli
push
push
stos
inc
mov
fldt
stos
jnp
roll
mov
push
shlb
mov
xlat
rcl
push
cmp
popf
xor
sub
sbb
icebp
jge
roll
mov
lret
sbb
xor
inc
mov
aad
or
in
call
adc
adc
mov
pop
mov
mov
xchg
jns
or
test
adc
lret
mov
cmp
call
push
icebp
sbb
stos
fsub
push
pop
xor
push
or
sbb
fsubrs
mov
mov
pop
xchg
sbb
cwtl
ljmp
push
sbbb
pop
add
cmp
cwtl
popl
andb
test
scas
xchg
sbb
adc
pop
add
push
push
mov
fcompl
or
subl
shrb
movsl
inc
icebp
stos
insl
pop
cmp
aad
mov
lds
negb
mov
pop
test
cmp
push
test
icebp
adc
and
add
test
enter
lcall
out
or
pop
push
dec
xchg
xor
cmp
je
cmp
data16
push
ret
mov
mov
fbld
lcall
or
mov
sub
xchg
into
stos
popf
pop
xor
or
scas
cmp
aaa
hlt
jo
or
fisubl
bound
imul
sbb
enter
aam
jmp
sub
stos
add
push
adc
add
je
ret
rolb
jmp
out
sbb
mov
out
sbb
jmp
jbe
sub
add
or
popf
add
and
adc
inc
and
fidivrs
test
add
test
sub
dec
and
pop
inc
push
jmp
xorb
leave
cwtl
or
ret
rolb
sub
in
adc
call
pop
cwtl
push
mov
popf
fs
aad
jecxz
pop
icebp
sbb
sbb
ljmp
jg
or
cmpsb
mov
push
movsb
xchg
loop
push
lret
pop
cmp
adc
fisubl
sbb
xor
dec
lcall
cld
pop
sbb
add
push
ljmp
sbb
pushf
sub
inc
adc
in
sbb
out
mov
pop
shl
add
dec
jbe
xorb
mov
je
xor
xor
insl
xchg
jle
loope
rolb
scas
in
sub
inc
ret
cli
push
push
add
push
and
cmp
inc
ljmp
out
aam
dec
loopne
rolb
rolb
and
and
dec
movsl
out
inc
sub
mov
imul
rorl
mov
or
push
ret
jle
push
or
icebp
sub
out
pop
outsl
mov
jo
into
push
cmp
xor
jmp
jge
add
cmp
push
mov
jnp
add
loopne
mov
add
loopne
out
or
lcall
inc
xor
call
stc
add
mov
lahf
nopl
inc
adc
mov
and
fldl
push
fsubs
push
pop
fwait
adc
faddl
insl
les
pop
cs
shlb
call
sub
push
into
rorl
add
fldcw
adc
pop
insb
add
sub
aam
inc
or
cmpsl
xorb
mov
add
cs
push
mov
call
adc
jne
inc
add
adc
and
add
push
add
mov
out
pop
pop
push
aam
adcl
rcrl
les
cmp
add
push
jecxz
sbbb
imul
pop
jne
push
dec
push
jecxz
rcll
and
nop
push
nop
mov
testb
rolb
push
lea
cmpsb
aas
hlt
mov
mov
mov
mov
inc
rcrl
lock
loopne
fsub
adc
clc
push
mov
jbe
xchg
fiaddl
out
shlb
arpl
cmp
push
jne
rorl
es
fxch
adc
lods
adc
adc
cmp
icebp
ds
scas
test
pop
xchg
or
fs
inc
push
leave
cmp
add
mov
rcrb
call
cwtl
mov
pushf
push
je
and
adc
cli
and
sbb
mov
stc
mov
push
sahf
jo
add
jmp
ret
lock
subl
lock
mov
test
add
add
in
rcr
fmuls
adc
push
test
sti
sub
rclb
dec
mov
adcl
mov
test
adc
adc
pop
in
mov
add
xor
ret
fsubp
adc
int3
adc
adc
enter
roll
pop
popa
aas
cli
xchg
lret
in
add
sub
xchg
cmpsl
xchg
clc
adc
mov
xchg
adcb
push
pop
sub
int
pushf
mov
add
or
bound
adc
jecxz
movsl
mov
adc
add
xchg
testb
fistpl
sbb
aad
xchg
jg
xchg
and
es
enter
lods
xchg
sbb
push
dec
xor
and
mov
adc
mov
mov
lret
leave
imul
fs
andl
leave
daa
dec
push
or
arpl
push
sbb
mov
subb
jae
push
adc
inc
mov
call
ljmp
adc
test
pop
push
lock
push
sbb
push
mov
mov
call
call
xor
mov
adc
mov
pop
je
lock
xchg
or
shlb
sbb
add
mov
aas
cli
or
loope
call
mov
jmp
stos
je,pn
inc
std
outsb
adc
mov
adc
mov
adc
push
shl
shl
xor
jo
xchg
mov
sub
shlb
mov
add
imul
push
hlt
xor
movsb
sbb
xchg
sub
push
cwtl
adc
dec
mov
and
sbb
mov
pop
adc
xor
jbe
adc
xchg
push
ficoms
push
pop
aam
lods
test
mov
push
push
push
xor
xchg
sar
cmc
cli
lret
pop
mov
sub
xor
mov
addl
lds
push
cmp
shrl
movsb
xor
mov
add
or
add
popa
dec
xchg
fcoms
mov
mov
inc
test
or
push
pop
pusha
or
mov
sbb
and
orb
adc
sub
dec
sbb
mov
das
mov
pop
or
insb
push
cmp
mov
out
sbb
dec
mov
mov
and
inc
outsb
fcoml
sbb
inc
mov
sub
cmp
ret
and
xor
sbb
push
dec
popa
xchg
jb
sahf
cmpsl
sbb
adc
sub
out
sbb
cwtl
pop
cmp
pop
mov
lds
lahf
xor
jmp
sbb
xchg
rorl
rorb
add
inc
jnp
imul
and
imul
test
shrl
adc
pop
inc
imul
inc
mov
mov
push
int
cmp
sti
and
jno
pop
cltd
sub
jmp
gs
cmp
xor
xchg
arpl
and
cwtl
push
movb
push
push
daa
sbb
push
add
sub
ds
inc
mov
test
inc
scas
xchg
test
push
call
xorl
mov
and
sbb
inc
popa
ljmp
enter
mov
add
push
test
adc
adc
cmp
shll
std
les
push
push
pusha
push
pop
aam
inc
cmovp
lock
mov
out
fwait
and
adc
and
sub
cmp
or
mov
adc
lods
leave
sbb
pop
fs
add
shl
enter
icebp
sub
aas
jno
lret
loopne
inc
data16
ret
fs
addb
dec
arpl
addl
sbb
mov
cwtl
push
fistpll
or
jle
sub
addl
adc
jo
movsb
out
popa
mov
rclb
call
loopne
das
sbb
shll
in
fisttpl
push
add
mov
test
push
dec
xor
pop
inc
leave
clc
pop
xchg
add
cwtl
xor
das
mov
repnz
cmp
test
xor
mov
popa
repnz
xor
adc
mov
push
jge
mov
mov
add
mov
cmp
icebp
andb
add
sbb
push
loopne
cmpsl
cmp
es
sbb
and
jl
icebp
add
inc
outsl
repnz
jo
mov
popf
sub
daa
enter
or
xchg
or
xor
add
sbb
pushw
add
mov
mov
mull
sub
sub
adc
outsb
or
int3
mov
int
lcall
xor
fadds
pop
in
aam
xor
loope
push
dec
push
popf
test
or
mov
mov
subb
or
jns
adc
add
mov
xchg
pop
adc
adcl
xchg
push
shl
mov
or
test
les
jl
movsb
cs
mov
sbb
stos
mov
lock
push
adc
ficompl
jne
mov
inc
ret
ja
aad
lea
stos
stos
push
cmp
pop
inc
pop
in
pusha
fsubl
stos
pop
nop
sub
push
sub
or
fdivs
and
pop
dec
xchg
cmp
xor
out
clc
xor
js
push
lea
or
pop
push
adc
add
push
fwait
stos
and
in
inc
jge
loop
scas
rclb
rclb
add
ljmp
sub
push
mov
xor
lds
jge
mov
lret
or
pop
in
adc
push
push
lea
push
push
fsubl
lret
pop
icebp
mov
or
push
stc
shll
test
or
ja
stc
and
test
sbb
dec
sub
mov
test
mov
jp
push
mov
pop
scas
scas
shl
inc
inc
sub
ret
jmp
and
inc
add
mov
icebp
inc
fstpl
adc
enter
sub
push
jo
inc
sub
fs
pop
sbb
sub
mov
add
mov
cmp
je
push
test
rcll
cld
sub
push
sbb
and
and
mov
xchg
mov
pop
sub
cmp
push
icebp
jg
pusha
ret
adc
push
cmp
rep
push
pop
xor
add
in
mov
or
dec
pop
or
push
xor
sub
inc
popf
add
add
xchg
les
adc
rorb
mov
jp
fmull
lock
mov
fadd
imul
sub
in
add
das
push
mov
jp
jmp
aaa
push
lock
js
mov
cwtl
mov
xchg
dec
es
adc
sbb
lea
sbb
push
das
or
notb
dec
dec
push
push
adcl
mov
cmp
or
add
xchg
cwtl
adc
inc
ds
push
insb
rcl
push
xor
ljmp
and
inc
lret
xorb
and
icebp
sbb
add
daa
dec
or
xor
dec
cs
xor
cmp
mov
das
test
jg
aaa
sub
leave
imul
add
fs
push
add
std
add
pusha
nop
push
push
movsl
out
or
push
mov
pop
xchg
std
push
jns
and
or
lds
xchg
sbb
push
inc
push
aam
pop
call
xchg
push
mov
loope
adc
icebp
jae
stos
lcall
push
iret
mov
ret
test
int
aad
cmpsl
ret
inc
xchg
cmpsl
stos
push
or
push
add
add
xor
cltd
push
fisubl
add
sbb
xor
cmpb
adc
test
add
sbb
test
fildl
shrl
or
shlb
push
add
lret
cmp
push
mov
inc
adc
sbb
inc
mov
mov
xchg
shl
in
loop
xchg
mov
mov
add
rcll
or
mov
xor
roll
scas
mov
lret
add
pop
add
enter
mov
clc
sbb
movsb
ljmp
aam
dec
sub
scas
cmp
jb
pop
sarl
mov
dec
aad
xchg
adc
pushf
je
adc
pop
fsubrl
cwtl
push
andb
and
xchg
push
repz
adc
push
daa
and
testb
mov
sbb
lret
pop
jbe
arpl
pop
test
mov
lcall
push
mov
loop
or
mov
movsl
xor
mov
push
sbb
push
inc
mov
mov
into
cmp
xchg
push
stos
ds
or
orl
mov
cwtl
adc
mov
imulb
daa
mov
stc
sbb
fsubl
push
jp
add
sub
ljmp
mov
iret
add
pop
add
and
dec
cwtl
mov
mov
inc
xchg
xlat
ret
mov
adc
and
mov
sub
stos
jle
mov
pop
vsubps
add
jp
cmp
js
shlb
xchg
add
mov
xchg
lods
popf
push
mov
leave
loopne
and
loope
mov
add
mov
rolb
in
test
push
and
cmc
stc
inc
jmp
and
adc
fildl
test
sub
cmpsb
mov
stc
sbb
cmp
lods
push
popa
push
sub
add
pop
add
outsb
fldl
sbb
inc
mov
in
mov
ljmp
add
sbbb
dec
inc
fdivrl
aaa
push
ret
push
mov
add
dec
fmul
pop
add
std
adcl
or
rorb
pop
leave
add
pop
dec
adc
loopne
daa
rorb
push
inc
sub
inc
adc
imul
pop
dec
dec
mov
stos
sbb
sub
inc
mov
popf
mov
shll
sbb
jge
xchg
sbb
add
clc
orb
ret
adc
mov
daa
stc
push
popa
mov
xchg
sbb
aam
and
pop
mov
icebp
mov
lds
pop
mov
orb
push
push
push
int
outsb
fwait
jbe
xchg
sub
add
js
nop
fisubrl
sub
lock
and
jg
sbb
mov
adc
rol
push
or
sbb
pop
mov
scas
cwtl
ljmp
sub
push
test
jl
or
and
push
pop
sub
or
inc
push
dec
lds
or
pop
mov
mov
rorl
ret
sbb
or
inc
push
sbb
mov
mov
lock
leave
lods
mov
or
push
sbb
data16
mov
adc
clc
push
pop
adc
orb
rolb
inc
roll
icebp
sbb
popa
loopne
and
inc
adc
dec
push
lret
mulb
jb
adc
pop
cmp
sub
mov
enter
sub
fs
sbb
aas
adc
push
jbe
ret
push
sub
clc
add
dec
stc
mov
sub
loope
mov
cmp
push
pop
push
rcrl
xor
out
push
jb
push
sub
sub
or
dec
test
push
pop
jnp
sub
mov
stc
jo
lcall
mov
enter
jp
push
inc
into
inc
add
push
in
jnp
mov
pop
inc
insb
mov
pushf
loope
sbb
or
fisubrs
pop
les
mov
push
pop
hlt
mov
add
mov
mov
inc
push
test
xor
loope
pop
mov
sbb
ret
ret
test
rcrl
andb
aad
and
mov
test
movsb
ret
cmp
jae
sub
lcall
and
test
push
test
ret
or
cmp
add
fs
test
test
inc
push
fistl
push
inc
dec
add
mov
and
rorl
fisttpll
add
shl
push
xor
enter
xchg
sbb
dec
lock
out
sbb
pusha
or
pop
lock
ficoms
push
test
inc
push
push
cmp
inc
nop
jne
ds
or
ljmp
mov
push
daa
mov
xchg
cmpsl
pop
and
subl
call
test
lret
adcb
push
adc
dec
add
scas
cmp
cmp
sbb
or
popw
fcoml
push
xor
in
sar
mov
addr16
lret
cpuid
scas
sub
xchg
stos
adc
addr16
adc
rorl
cmpsb
imul
not
push
adc
pop
jg
adc
mov
imul
shlb
ret
loopne
dec
imul
data16
mov
cmp
add
icebp
jo
sub
dec
mov
pop
dec
inc
adc
ret
adc
cwtl
sub
aam
out
fistpl
xor
negl
subl
add
loopne
mov
lret
es
push
mov
cmp
adc
xlat
and
mov
imul
push
arpl
addr16
push
cmc
jo
aad
.byte
xchg
.byte
out
bnd
in
add
imul
mov
add
mov
paddw
mov
adc
pop
rolb
leave
imul
imul
sub
std
fucomi
mov
cld
and
cmp
cmp
adc
sub
cmp
sub
jnp
mov
pop
push
xor
add
aas
or
lcall
add
sub
mov
mov
or
cmp
pop
aas
mov
repnz
sub
add
sub
sub
mov
mov
sbb
rorb
lods
std
mov
or
or
sarl
into
or
xor
lods
mov
pop
add
ds
subl
inc
push
sub
mov
pop
pcmpgtb
pop
jae
add
pop
cs
daa
sbb
sbb
add
jae
pop
aaa
imul
mov
add
aas
sti
insl
push
push
mov
mov
pop
push
repz
xlat
mov
add
cmp
dec
repnz
cmp
outsb
arpl
inc
mov
add
sbb
pop
adc
mov
mov
push
outsb
ja
cmp
test
je
cmp
sbb
mov
rol
add
sbb
in
or
or
and
aad
jl
mov
lahf
imul
mov
cmp
mov
adc
mov
jnp
add
sarb
jnp
mov
sbb
mov
rcrb
pop
imul
mov
fwait
imul
mov
xor
jg
push
mov
outsb
imul
mov
mov
out
sbb
add
cmove
mov
adc
lret
mov
mov
push
pop
arpl
sub
mov
ret
mov
fcmovu
je
add
adc
mov
into
sub
lock
sbb
xlat
sub
sub
mov
adc
add
lcall
out
mov
pop
mov
or
add
mov
stc
jae
mov
push
cld
mov
fisttpl
add
xor
and
roll
sbb
rorl
mov
mov
in
leave
push
xor
ljmp
mov
push
mov
lock
mov
out
sbb
or
faddl
shrl
mov
leave
fwait
cmp
sbb
aas
lock
or
jnp
fnsave
mov
stc
pop
add
adc
inc
jl
or
add
push
push
mov
lods
data16
mov
test
or
or
or
in
or
mov
or
negb
xchg
jno
fists
dec
leave
sbb
cmp
shlb
insb
mov
adc
mov
rcll
add
adc
ret
add
pop
and
jmp
sub
fists
sub
and
push
xlat
sbb
sbb
sub
adc
jl
cmp
outsl
fcmovnb
dec
rcl
pop
mov
jp
cmpb
in
mov
mov
cltd
insl
xchg
fiaddl
or
adc
cwtl
mov
add
repnz
push
pop
out
lods
pop
out
rol
incl
and
push
ja
add
adc
mov
adc
push
fsubrs
and
mov
or
add
js
mov
adc
daa
cmpsl
mov
mov
xchg
mov
inc
lock
adc
pop
jmp
gs
jmp
leave
std
cmp
mov
add
and
cmc
sarl
mov
mov
dec
enter
jbe
mov
push
js
adc
into
mov
xor
push
int
mov
mov
ret
sbb
popf
jbe
dec
loop
mov
icebp
lods
xor
add
or
push
rcrl
lcall
dec
or
jmp
adc
adc
xchg
mov
int
jl
div
rcrb
sti
addr16
cmp
mov
add
add
int
faddl
test
adc
jge
je
or
jo
adc
pop
push
pop
pop
fadd
add
lock
or
ret
icebp
fcomps
insl
or
jae
push
pop
jns
daa
and
mov
mov
cmp
shrl
inc
clc
in
daa
or
add
int
icebp
xlat
add
imul
xchg
or
push
aam
push
loopne
xor
rcll
pop
data16
push
mov
rol
or
sub
sbb
sbb
adc
mov
mov
pop
cwtl
jp
adc
out
xor
dec
jecxz
flds
add
ret
push
jg
jmp
ljmp
jnp
pushf
arpl
or
imulb
sub
repz
sbb
shrb
mov
test
pusha
imul
jle
lock
xchg
mov
cltd
ss
cmp
sbb
icebp
jmp
pop
push
mov
jmp
lcall
clc
or
or
pop
sbb
bound
ret
sbb
mov
pop
mov
dec
mov
sbb
pop
rcrb
call
imul
addr16
loope
je
mov
cmpsl
mulb
and
push
mov
jmp
mov
enter
loopne
popa
bound
sub
je
and
xor
jb
or
adc
or
aam
and
sub
xor
lcall
scas
fwait
sub
xlat
loop
adc
cmp
and
mov
pop
jno
icebp
out
add
incb
sub
or
and
inc
add
jl
jp
sub
icebp
adc
or
fstpl
movsl
sbb
sbb
inc
test
adc
mov
sbbl
push
mov
dec
adc
pushf
mov
jmp
or
xchg
mov
jge
sbb
xor
xor
jbe
add
jecxz
repz
add
nop
clc
xor
xor
add
or
pop
mov
push
hlt
jle
lods
imul
test
outsb
sub
xor
adc
push
mov
adc
add
fcmovnbe
aad
push
push
test
push
adc
hlt
mov
dec
ja
lock
sbb
aam
dec
call
sti
sub
pop
pop
pop
dec
adc
jl
mov
mov
popa
lock
and
fmuls
mov
lock
mov
pusha
daa
into
push
cli
adc
nop
mov
sbb
cmp
lods
sarl
sbb
movsl
jle
cmp
addl
push
push
bound
ljmp
lret
sbb
in
sbb
in
add
mov
jnp
rolb
push
adc
xchg
mov
divl
jmp
mov
mov
lret
sti
fstpl
sahf
add
mov
jne
fucom
jge
test
repnz
cli
int
ficompl
add
into
push
movsb
insb
clc
call
pop
push
leave
insl
mov
sbb
leave
push
fnstsw
inc
fdivs
jmp
es
xor
xchg
out
add
das
pop
int
mov
add
aas
xchg
pop
xchg
rcrb
xor
add
les
xor
pop
mov
lods
arpl
ss
fchs
aam
mov
lcall
mov
into
mov
lods
xchg
push
mov
incb
rcrb
insl
seta
roll
push
adc
cltd
sbb
fbstp
adc
jb
inc
mov
shr
stc
and
mov
or
push
pushf
cmpl
mov
mov
fdiv
xor
or
adc
mov
punpcklbw
je
leave
or
bound
xor
cwtl
jo
mov
lea
mov
icebp
add
in
cli
cmp
xchg
jecxz
fucom
repnz
sbb
pushf
push
pop
lret
pop
cmp
xor
negl
push
xchg
scas
sbb
sub
mov
and
negl
call
insb
out
jno
sbb
add
sahf
pop
rcrl
shufps
or
fucomp
and
rorb
inc
mov
xor
pop
aam
test
mov
lock
rolb
dec
cmpsb
lods
shr
sub
jbe
out
add
ljmp
or
sbb
jne
inc
test
fistl
or
adc
adc
mov
mov
mov
xor
out
xor
clc
push
je
ljmp
ror
test
hlt
mov
xchg
imul
jne
or
idivb
mov
push
fldt
lahf
add
push
in
xchg
xchg
inc
and
data16
sub
pop
call
or
pop
add
sub
sub
mov
cwtl
sbb
cmp
sbb
hlt
aad
push
xor
xor
testb
sbb
lods
sarl
cmp
dec
sub
lock
scas
sbb
test
sbb
pop
add
mov
ret
push
sub
shl
call
add
aas
or
hlt
inc
or
mov
push
mov
and
sub
rcr
out
jl
rorb
call
cmc
fmuls
loop
movsl
icebp
fldt
mov
xor
jle
mov
test
dec
cs
loopne
jg
push
push
jp
stc
add
out
dec
inc
sbb
into
mov
popf
cmp
jo
test
or
dec
adc
fstl
xor
or
inc
xlat
sub
popf
or
ret
push
movl
push
sbbl
js
lcall
or
add
add
jne
aam
pop
sbb
sbb
pop
lds
and
inc
mov
mov
leave
or
inc
and
cmp
js
add
xor
lcall
ss
sbb
lea
ljmp
push
cmp
vmwrite
fsubr
sbb
pop
mov
adc
ret
cmp
sbb
leave
mov
mov
sub
xor
rclb
push
adc
or
sbb
mov
sub
jg
test
or
in
xor
cmp
cmp
inc
shl
cmp
mov
fistpl
jo
fsubrp
push
mov
or
push
jl
sbb
inc
dec
sbb
call
add
sub
sbb
loopne
ss
out
lcall
icebp
pop
push
fwait
or
pusha
xor
cmp
mov
enter
mov
xor
movsl
push
rcr
mov
mov
push
add
gs
mov
push
cli
add
push
popf
in
push
push
push
fucomi
push
xor
xor
add
mov
out
fcmovnu
add
roll
cmc
mov
sub
push
aas
xor
dec
fldenv
adc
pop
mov
loopne
mov
rorl
adc
movups
ds
xorl
jo
je
add
push
inc
push
mov
xchg
andl
or
cmpsb
or
cmp
clc
ljmp
rorb
lods
mov
shrl
or
pop
sti
or
push
push
mov
insl
test
dec
add
add
add
mov
and
add
xchg
rorb
and
xlat
mov
sub
sbb
adc
clc
cli
sar
cmp
push
xlat
xchg
adc
sbb
les
inc
add
sti
mov
add
or
test
jb
in
dec
mov
mov
pop
mov
mov
adc
or
stc
sbb
push
inc
add
push
ret
or
lcall
test
push
cs
or
pop
mov
adc
push
and
aas
push
push
cli
push
sbb
cli
and
sbb
mov
jmp
sbb
sbb
rcl
xor
sarb
dec
lret
inc
xor
xor
notb
punpckhbw
xchg
push
rcr
jne
pop
xchg
xor
add
cli
adc
icebp
jp
addr16
loopne
jmp
notb
push
enter
jb
out
ficompl
loope
push
leave
mov
aad
xchg
loop
push
js
shlb
imul
sub
lret
cmp
repnz
push
imulb
dec
pop
mov
jo
call
adc
inc
scas
cmpsb
repnz
push
loope
sub
sahf
shrb
mov
sub
mov
in
pop
pop
leave
xorl
lock
clc
push
loopne
adc
add
mov
clc
push
pusha
mov
rcrl
mov
outsb
ret
popf
mov
es
je
leave
xorl
pop
lea
jl
mov
out
mov
aam
xor
stos
orb
mov
jo
sub
mov
ret
mov
sti
cmp
dec
or
das
mov
dec
cmp
pushf
scas
enter
test
pop
push
inc
movb
xor
pop
popf
jp
rcll
add
repnz
push
adc
addl
insl
leave
jge
mov
idivb
and
dec
test
xor
into
mov
mov
andl
cmpsb
xor
jbe
pop
xchg
repnz
xor
or
mov
push
push
and
sub
adc
cmp
jge
test
pop
or
adc
cwtl
cltd
push
jmp
pop
xchg
sbb
cwtl
icebp
push
push
cmpl
cmp
std
stos
fmuls
pop
pop
dec
andl
cli
fsubs
ret
imul
sarl
shl
xchg
xchg
lret
mov
cmp
ret
jecxz
adc
cmc
xor
xchg
mov
inc
inc
sub
and
pop
push
push
movsb
push
outsb
sbb
sbb
push
mull
mov
adc
decb
adc
pop
or
addb
pop
mov
xchg
cli
sbb
outsb
add
xchg
pop
lock
mov
fs
cmp
sbb
movsb
push
mov
sbb
leave
ret
and
aam
nop
sub
cmp
and
mov
mov
pop
xchg
pop
jo
xor
push
xor
or
push
fwait
arpl
sbb
and
scas
push
jae
ja
push
mov
adc
sbb
push
xlat
jp
inc
add
mov
jmp
orl
insl
enter
pop
stc
push
push
or
rol
fsts
or
pop
cli
mov
out
movsb
add
xor
push
int
sbb
push
cmpl
repnz
xchg
or
lods
adc
mov
push
gs
add
lret
inc
add
dec
push
lds
fstl
cmp
sbb
and
or
sbb
and
into
jle
fwait
pop
pop
mov
repnz
add
pop
mov
jmp
rorl
mov
cmpb
adc
jne
popl
sub
sub
aad
psubusw
pop
mov
jno
mov
and
call
idiv
sti
imul
cmp
mov
test
call
sub
push
js,pt
xlat
mul
dec
je
rorb
testb
cmp
push
sti
in
mov
adc
push
mov
mov
adc
enter
ret
push
and
sub
in
cmc
rorl
push
sbb
push
cld
mov
shrl
push
cmpsl
dec
arpl
iret
rorb
inc
xchg
clc
gs
movzwl
roll
mov
jp
ljmp
sub
inc
mov
popa
cld
fisttpll
inc
push
les
test
push
xchg
or
adc
mov
in
call
sbb
cmp
fs
add
imul
add
aad
push
fmul
cmpsl
pop
adc
or
clc
jae
sbb
pop
dec
pop
repnz
stos
into
push
and
sub
push
mov
add
dec
negb
out
add
pushf
aad
pop
or
pop
push
ret
inc
inc
mov
insb
sub
and
ds
add
add
movaps
incb
pop
push
jns
or
push
mov
addr16
rcl
sbb
adc
and
test
pushf
repnz
or
shrb
sub
push
imul
shr
lret
sub
push
sbb
es
mov
idiv
adc
out
mov
out
inc
repnz
stos
stos
lock
mov
cli
mov
or
or
mov
rclb
xchg
cmp
add
pop
xor
xor
mov
xor
rorb
sub
sbb
jmp
cmp
subl
xchg
xor
fiadds
enter
mov
dec
enter
mov
and
jno
rorb
orb
sub
add
or
dec
mov
push
inc
xchg
call
adc
loopne
sbb
loopne
pop
es
or
rclb
add
inc
push
jnp
push
shl
mov
jo
popa
push
cmpsl
test
ljmp
lret
fsubrs
cld
sub
inc
jne
add
pop
ret
rcrb
dec
cs
pop
jg
mov
icebp
cmp
lret
push
adc
add
mov
outsb
cli
sub
mov
or
mov
pushf
jp
aad
in
xchg
out
lods
inc
stc
mov
push
mov
push
mov
push
rorb
inc
inc
xlat
xchg
aaa
cmp
xor
sbb
pop
jmp
cmpsl
cwtl
or
insl
cmp
xor
pop
fiadds
xor
rorl
icebp
das
or
adc
lds
or
lods
push
mov
roll
mov
cmc
sbbl
push
push
roll
mov
outsl
roll
inc
pop
dec
lret
rolb
rorl
pop
mov
add
test
and
mov
adc
outsb
cli
sbb
rorb
push
test
cli
add
test
leave
or
and
jb
push
cbtw
sbb
cwtl
enter
mov
mov
enter
adc
setno
mov
pop
push
push
imul
bound
fmull
xor
test
inc
jl
xchg
push
sbb
lcall
or
rcl
addb
mov
and
or
call
test
repz
push
insb
xor
pop
or
mov
jmp
popf
mov
sbb
pushf
xchg
mov
leave
inc
mov
arpl
ss
inc
pop
repz
inc
rcrl
pushf
jg
lea
push
stos
push
ret
adc
iret
inc
push
xchg
ja
fisttpll
cmp
test
sbb
or
cmp
imul
cmp
call
incb
pop
mov
cmp
popf
cmpsl
lret
jo
shrb
ret
sbb
loop
xor
xor
clc
mov
adc
movsb
push
inc
dec
add
add
add
cmp
pop
icebp
addb
push
mov
push
mov
inc
or
dec
dec
cmp
cld
out
adc
mov
enter
arpl
aam
push
aas
push
inc
stc
rcll
nop
sbb
inc
adc
repnz
pop
mov
popa
imulb
mov
push
pop
or
push
mov
pop
mov
lret
add
xor
int
in
and
sbb
pop
push
adc
mov
push
adc
push
mov
sbb
aad
stos
mov
pop
movl
sub
xrstors
push
adc
sub
mov
mov
nopl
adc
lods
leave
add
out
nop
sbb
adc
pop
xchg
adc
enter
addl
cmp
out
pop
shl
dec
xchg
call
icebp
push
jmp
rcrb
sub
test
fbld
push
into
add
add
or
push
adc
xor
int3
stos
add
jns
sbb
jo
pop
xchg
les
mov
imul
xor
scas
addr16
leave
or
inc
xor
adc
iret
pop
or
lret
clc
das
jp
jbe
mov
pop
insb
shr
mov
add
fimull
loope
mov
ljmp
jns
xlat
inc
push
cmp
add
jne
out
insb
or
push
pushf
mov
daa
pusha
sbb
mov
xchg
not
cwtl
mov
add
jo
fcmovnb
aas
inc
out
push
or
jo
out
adc
sbb
sarl
add
imul
shlb
or
xor
pop
iret
mov
mov
lds
rcrb
mov
clc
inc
enter
or
lock
sarb
fwait
push
out
popa
jno
dec
fstpl
adc
xchg
js
jo
and
pop
lret
adc
ret
iret
dec
in
vxorpd
movsb
dec
cmp
scas
add
cmp
cmp
pusha
neg
lret
sub
dec
xor
sbb
sub
leave
jae
jae
mov
clc
ret
movsl
push
inc
push
sahf
sub
mov
adc
mov
adc
sub
mov
xchg
sti
mov
rol
inc
xchg
jl
call
and
rcll
cmpsb
adc
clc
out
rolb
and
push
push
adc
lret
repnz
mov
pusha
test
cmp
je
add
push
sbb
addr16
lret
jns
cmp
rcrl
xchg
lret
add
adc
lcall
pop
aad
loopne
movb
fadd
mov
sbb
mov
roll
andb
pop
in
jecxz
or
jne
inc
add
clc
faddl
inc
cmp
adc
ret
xor
rcrl
mov
lret
mov
jae
cmpsb
push
sbb
repnz
stos
faddl
sbb
outsb
push
dec
sbb
sbb
pop
pop
cltd
or
mov
jecxz
pusha
into
mov
inc
inc
cwtl
sbb
push
fwait
and
pop
lods
je
xorl
inc
xchg
sbbb
or
push
or
xor
mov
add
and
push
pushf
dec
into
fidivl
pop
cmp
imul
inc
xor
stos
xor
mov
add
es
cmpsl
lock
jg
scas
push
mov
push
xchg
iret
nop
dec
ljmp
dec
hlt
or
sarb
or
lahf
add
mov
add
or
xchg
mov
or
push
pop
lods
jo
movsl
sbb
cmp
jne
scas
mov
jl
adc
ret
clc
dec
into
push
push
push
icebp
pop
and
mov
adc
adc
dec
adc
sar
adc
pop
mov
mov
and
push
pop
jl
push
lock
ret
and
and
sub
mov
add
js
js
push
xor
and
shlb
xor
ljmp
dec
inc
pop
fisttpl
xchg
test
cmp
inc
xchg
mov
mov
loopne
loopne
cmc
dec
and
or
inc
cmpsl
or
adc
push
dec
add
sub
jl
rolb
in
and
test
dec
shll
dec
ja
or
dec
movups
inc
mov
jo
and
punpckldq
fadds
cmp
mov
test
push
or
movsl
ljmp
push
into
ds
add
sbb
packuswb
int3
sbb
inc
lret
in
cs
dec
in
inc
fisubrl
ret
xor
rolb
adc
lcall
push
adc
mov
pop
cmp
stc
sbb
fldcw
push
pusha
pusha
sbb
popl
icebp
xor
ljmp
sbb
pop
pusha
mov
lods
lods
pop
scas
adc
rorl
inc
add
mov
jl
aad
pop
rclb
mov
push
cmpl
add
pop
orb
adc
subb
clc
pop
cmp
xor
movsl
inc
or
sbbl
pop
cmp
lret
ss
pop
or
sbb
and
mov
stos
scas
icebp
add
jecxz
push
inc
je
scas
insl
sub
inc
or
pop
or
sub
add
mov
cwtl
sub
push
mov
mov
mov
lods
ja
pusha
roll
or
mov
aam
mov
movsb
add
sbb
add
lcall
mov
cmp
adc
jp
inc
dec
xchg
or
push
ja
bound
push
ficoml
inc
lret
stc
or
add
sahf
testl
stos
lds
jne
leave
test
mov
jb
test
sub
test
ds
sbb
aaa
adc
in
aad
clc
dec
icebp
je
pop
jge
mov
mov
xchg
mov
dec
adc
sub
jp
add
or
and
or
mov
bound
add
and
mov
inc
jo
pop
shlb
mov
push
movaps
std
sbb
idivb
aad
or
push
mov
mov
les
pop
push
in
jnp
push
jae
sub
in
cmp
inc
jnp
mov
or
push
sub
les
scas
aad
in
or
inc
jae
es
or
sub
enter
rolb
mov
shr
js
lcall
bound
inc
scas
cltd
sbb
inc
jle
mov
cli
out
adc
push
inc
dec
les
add
dec
rcll
xor
bound
iret
xchg
jmp
adcl
test
fdivs
mov
ret
push
xor
mov
or
mov
push
lock
sub
das
jbe
add
scas
sbb
lcall
push
pop
fs
lds
or
shlb
subl
push
push
sbb
push
cmc
or
rol
je
pop
xchg
lea
xor
or
xchg
gs
mov
jnp
insb
mov
adc
push
dec
lret
mov
in
pop
popa
lret
push
sbb
filds
imul
push
or
mov
and
ficomps
fadds
cmp
adc
or
xchg
test
test
push
stos
pop
lods
cmp
push
insl
ret
push
sub
add
les
ret
ror
adc
pop
push
test
lods
sbb
and
pop
mov
add
sahf
pop
clc
enter
adc
lcall
loope
aad
inc
cmp
add
mov
adc
adc
daa
add
sub
cmpsb
mov
mov
sub
or
bound
sbb
std
and
stos
ficompl
mov
push
popa
xchg
mov
sub
sub
dec
les
inc
fwait
bound
or
jle
into
add
cmp
scas
js
cmpsb
or
cmp
push
or
pop
sbb
sub
decb
mov
cwtl
mov
cli
lret
ljmp
sbb
xor
inc
stc
pop
add
into
loope
sbb
sub
adc
inc
dec
cwtl
in
lahf
into
sub
adcl
mov
dec
outsl
stc
sbb
sub
test
dec
jge
push
push
xchg
lods
xor
in
push
push
loope
dec
and
adc
inc
xchg
pop
icebp
mov
xor
mov
mov
sbb
mov
icebp
adc
adc
or
int3
push
stos
je
adcb
enter
inc
jl
pop
xor
repz
jmp
test
out
pop
int
or
push
std
or
push
add
dec
xor
push
or
sbb
fidivrl
fdivr
lods
std
rclb
adc
or
or
sar
push
repz
cmc
cmp
lret
pop
pushf
push
shrl
popa
pop
mov
sub
inc
xor
data16
lock
dec
movsl
push
cmp
pop
cmpsl
jo
repz
adc
outsb
add
test
outsl
rcll
push
fs
cli
into
push
pop
xchg
rclb
xchg
rcl
sarb
jmp
mov
test
inc
div
inc
push
adc
mov
shlb
push
sbbb
fldcw
push
pop
imul
sub
rolb
xchg
cwtl
mov
cmp
mov
xor
in
out
lods
out
cli
call
pop
jae
inc
nop
sar
and
test
mov
jbe
adc
mov
cli
add
rcl
std
push
dec
jp,pn
inc
call
sbb
test
inc
mov
sarb
add
push
jle
aad
das
jmp
push
stos
xor
lret
jne
aaa
or
ret
and
mov
push
xor
mov
mov
cmpsl
andb
sub
sbb
pop
arpl
test
or
inc
repnz
jmp
push
mov
pop
mov
cmpsb
mov
rcll
push
cmpsb
leave
xor
mov
push
pusha
cli
or
add
sbb
sbb
pop
ret
dec
xchg
and
mov
sbb
imulb
jl
loop
xchg
mov
ljmp
ret
push
cmp
dec
cmp
push
lea
pusha
lahf
inc
shlb
roll
pushf
movsb
lret
pop
adc
psrlq
call
push
pop
add
in
xchg
or
jp
mov
xchg
lea
push
pop
in
mov
addl
inc
je
push
sbb
enter
rcll
mov
loope
movsl
pop
hlt
inc
pop
inc
les
cwtl
dec
popa
mov
mov
in
es
mov
xchg
imul
or
sbb
adc
jmp
mov
scas
mov
mov
mov
ret
cmpsl
cltd
mov
jo
pusha
xor
enter
inc
sub
sub
jbe
sbb
scas
popl
aam
imulb
stos
or
mov
mov
mov
icebp
adc
cmp
inc
mov
bound
or
adc
mov
popa
jnp
rcrl
mov
jg
rolb
mov
insb
pop
push
add
or
and
and
mov
mov
shll
into
test
inc
mov
inc
loope
les
and
xor
pop
xchg
sub
jmp
mov
das
iret
mov
push
rclb
inc
rcll
fstpt
mov
push
cs
xchg
inc
ss
lods
loope
sub
test
stos
inc
enter
lret
pop
mov
jle
in
sub
scas
movb
dec
popf
rcrl
and
adc
push
xor
fwait
hlt
add
leave
or
mov
mov
xchg
dec
and
pushf
mov
mov
push
jno
data16
cmp
push
aas
leave
add
push
test
movsb
pop
pop
les
rorb
rcrb
push
shll
inc
shr
adc
sbb
subl
push
jo
idivl
sbb
es
dec
es
stos
ljmp
push
and
loopne
repnz
push
mov
xor
rcr
aam
lods
cmp
pop
pusha
inc
and
push
adc
adc
pushf
sub
xor
sub
mov
aad
lock
into
push
stos
js
test
cli
popa
pusha
sbbl
sbb
mov
cwtl
fistl
ret
out
pop
jl
ret
cmpsb
sbb
js
out
andl
daa
push
and
clc
jmp
mov
cwtl
andb
add
mov
outsl
shl
or
stc
pop
adc
sub
dec
sub
jo
jno
scas
push
sub
sub
sbb
mov
xor
or
xchg
push
sbb
leave
sub
imul
add
fisubl
dec
in
pop
adc
adc
push
int
jae
or
scas
add
jle
push
sub
insb
mov
mov
push
ret
jb
js
leave
jo
or
arpl
bound
sbb
clc
test
adc
test
mov
jne
mov
adc
loope
add
lahf
cmp
or
pop
xchg
xchg
or
cs
cltd
ret
cmpsl
sbb
push
sbb
and
das
fldt
pop
adc
lods
push
in
push
out
pop
add
or
and
pop
ret
adc
stos
stos
inc
add
mov
or
push
jg
loope
inc
fstpt
enter
inc
fldenv
popf
sub
cmp
jmp
clc
inc
push
mov
push
push
xchg
or
or
rolb
mov
fs
inc
jo
rorb
adc
decb
call
pop
sbb
sub
cmpsl
mov
xor
div
roll
lea
lea
call
sub
inc
lock
inc
adc
roll
adc
add
icebp
addl
dec
adc
stos
mov
lods
or
jmp
cmp
and
outsl
mov
cs
call
into
stos
pop
dec
or
xor
pop
sbb
push
loope
cmp
imul
mov
pop
rcll
mov
push
jecxz
movsl
add
gs
pop
rcll
cmpl
jmp
into
add
inc
pop
shlb
push
ret
aam
adc
sbb
and
jmp
jbe
ss
sub
adc
xor
cmpsl
and
ret
or
addl
cmpsb
scas
fs
leave
vxorps
mov
scas
adc
mov
dec
push
je
jb
lahf
or
int3
push
test
je
push
add
ret
sbbl
subl
lods
cmp
push
lcall
leave
sbb
insb
std
adc
andb
mov
or
mov
or
or
pusha
and
jno
push
mov
pop
or
jo
adc
popa
jmp
cmp
popf
push
and
xor
sbb
sbb
roll
cmp
lret
cltd
js
mov
repnz
mov
and
add
and
inc
loope
pusha
stos
add
jecxz
cmpsl
sbb
shlb
nop
dec
fiaddl
mov
sbb
lret
into
inc
mov
add
mov
fucom
mov
sbb
sub
loopne
inc
lret
gs
mov
or
shlb
out
push
fmul
jb
test
inc
adc
mov
incb
ljmp
sbb
sarl
or
add
jbe
sbb
inc
or
mov
sbb
pop
popa
xchg
ljmp
pop
cmp
or
scas
adc
push
test
cltd
stos
inc
das
push
sbb
push
pop
lahf
stos
xor
mov
and
inc
aas
pop
lcall
shl
ss
call
mov
shll
fsubrl
push
push
test
cmp
lret
mov
inc
inc
loop
shll
xchg
pop
push
push
push
xor
imul
mov
addl
movsl
jo
rcrl
movsl
inc
arpl
pop
scas
rcrb
or
sbb
add
loopne
cli
sub
push
sbb
and
test
pop
cmp
lret
lea
and
stos
xchg
std
adc
cmc
jo
scas
pop
aaa
movsl
add
sti
mov
push
inc
sbb
fs
jp
jmp
ret
pop
xor
push
add
lods
loop
into
add
pop
movb
arpl
movsb
push
subl
and
ss
ret
or
and
xor
mov
dec
int
push
test
mov
mov
mov
dec
adc
mov
test
pop
push
adc
scas
add
lret
push
xor
rorb
add
mov
inc
pop
mov
sub
and
adc
push
mov
sbb
mov
or
push
stc
jno
testl
add
pop
call
jb
adc
cld
push
and
sbb
lahf
pop
in
jo
and
jge
and
daa
sbb
jbe
push
jp
imul
into
lock
repnz
or
add
add
sbb
cmp
add
pop
and
sub
cmp
push
sbb
movsb
std
or
fistpl
outsl
pop
adc
sbb
repz
test
mov
cmc
lret
dec
xchg
shlb
mov
loopne
popf
cmp
xor
popf
dec
xor
sbb
or
ja
mov
pop
push
shl
enter
testb
movsl
xchg
adc
add
mov
mulb
sahf
stos
or
dec
sub
jo
push
orb
inc
mov
dec
or
sahf
pop
mov
pop
outsb
sbb
pop
cld
inc
arpl
sub
adc
in
jle
rorl
icebp
sbb
dec
and
repnz
inc
or
add
mov
icebp
push
adc
sbb
pop
mov
push
mov
xchg
lea
daa
rcrb
mov
lds
adc
hlt
outsl
add
enter
fnstenv
cs
mov
sahf
stos
scas
fsts
and
mov
sub
test
mov
inc
std
lahf
incb
fwait
and
push
mov
mov
add
shl
jmp
out
ds
pop
hlt
inc
test
pop
and
push
push
outsl
leave
or
les
push
loopne
cmp
pop
cmc
cli
sbb
or
xor
stc
dec
cmp
xor
add
mov
imul
or
adc
mov
sub
sbb
shrl
pop
or
push
lock
dec
xchg
mov
cli
aad
mov
test
test
xor
scas
repz
movsl
js
mov
jbe
cmp
push
inc
add
pop
std
rorb
in
push
pop
mov
cmpsb
pop
push
enter
push
add
dec
xchg
and
shll
jo
ljmp
or
push
dec
push
sbb
bound
repnz
and
or
sbb
nop
push
mov
xchg
pop
test
inc
jecxz
mov
push
xchg
push
out
add
push
mov
lock
and
add
inc
or
lock
pusha
loope
pop
andb
adc
popl
ret
pop
es
and
xchg
sbb
call
call
push
lcall
mov
aad
shlb
add
fsts
and
adc
pop
repnz
sarl
sahf
jne
decl
inc
ret
rol
in
pushf
mov
ficoml
incl
mov
lds
jo
or
adc
je
ja
add
push
xchg
cmp
inc
xchg
cmpsl
jne
cltd
or
dec
rorl
shrl
push
xor
xor
dec
and
inc
push
sub
out
jge
mov
shlb
cmp
inc
xor
adc
test
inc
add
push
push
adcb
mov
push
roll
lock
inc
pop
or
mov
adc
xchg
pusha
add
mov
mov
mov
xchg
iret
add
dec
xchg
movsb
mov
add
jbe
push
lods
pop
jne
adc
adc
or
or
mov
sbb
push
outsb
or
pminsw
push
cmp
int3
jb
repnz
loop
nop
sbb
cltd
sub
lcall
add
or
retw
adc
aad
push
ja
addl
mov
or
adc
push
or
adc
cmp
push
push
daa
fsubrl
idivl
lret
jno
pop
xor
inc
pop
and
out
lods
sub
xor
cmpsb
adc
rorl
pop
cmpsl
mov
sbb
scas
inc
adc
inc
inc
xor
sub
push
or
inc
push
das
lcall
out
das
imul
xchg
sbb
dec
test
mov
lcall
loop
icebp
rorb
cmp
push
mov
mov
sbb
sarl
adc
xchg
shll
sbb
push
push
and
or
sbb
sbb
add
or
test
push
jo
lods
fdivr
xchg
and
inc
in
inc
sbb
lret
test
aad
sbb
push
xor
inc
les
rorb
jbe
pop
lds
mov
sahf
test
into
mov
xchg
xor
xchg
pop
popa
dec
inc
push
push
stos
inc
test
loopne
fcoml
outsl
push
sbbb
cli
add
cmp
jp
clc
dec
icebp
mov
fwait
addb
in
sub
lahf
sub
inc
jecxz
ds
loope
xchg
xor
add
in
repnz
out
xchg
mov
in
push
aam
rcr
sbb
xlat
push
xor
ljmp
pop
or
xchg
or
sbb
les
mov
imul
fbstp
out
cmpsl
sbb
rcl
sbb
cmp
push
leave
adc
inc
rclb
sbb
xor
pop
les
arpl
dec
lcall
and
pop
adc
xchg
roll
and
xchg
pop
pop
jnp
fisubrs
jp
ss
and
pop
popf
adc
mov
popa
stos
fiaddl
js
sti
movsl
ret
hlt
jns
mov
sbb
push
mov
repz
mov
shrl
insb
add
pop
push
xor
mov
lcall
sub
cmp
ror
mov
fcompl
pop
adc
sti
into
push
push
inc
or
shrb
movb
xchg
and
clc
test
sbb
xor
mov
or
enter
xor
pop
xchg
sub
inc
ljmp
or
mov
inc
pop
aam
xchg
std
lock
setp
rol
pop
ret
aam
shr
dec
aas
sbb
dec
or
pop
mov
loopne
ljmp
or
and
push
adc
shlb
and
lea
xor
fs
push
pop
push
inc
sub
jl
jmp
ret
push
and
pusha
daa
mov
add
nopl
call
cmp
sbb
cmc
pop
dec
or
fstl
aaa
test
xor
push
mov
ret
and
mov
xor
cvtps2pd
mov
push
mov
das
add
sub
aas
xor
adc
or
adc
inc
push
cli
push
and
lahf
aam
into
repnz
push
aas
pop
rorl
cmp
mov
add
and
and
push
dec
xor
fwait
leave
pop
jnp
mov
xchg
call
pushl
or
xlat
or
mov
mov
mov
enter
mov
inc
popa
insl
loop
pop
xor
shrb
push
cmpsl
lods
fiadds
and
inc
inc
mov
jge
add
inc
mov
out
mov
jns
scas
or
push
mov
inc
je
push
pushf
mov
xor
divb
push
add
pcmpeqw
cmp
add
shlb
leave
xchg
mov
ljmp
mov
mov
dec
mov
xlat
daa
cmp
cltd
loop
xor
in
cmc
mov
sbb
push
imul
div
mov
js
sbb
pop
dec
push
add
lock
or
jmp
addb
adc
je
mov
mov
dec
xor
jl
mov
jns
push
xor
jnp
cwtl
mov
adc
into
mov
jo
mov
xor
push
stc
dec
mov
push
and
sbb
sub
and
xchg
xchg
sub
sbb
dec
xchg
add
jp
add
ret
adc
add
inc
fs
js
dec
cs
push
lods
cli
inc
mov
movsl
sub
test
mov
pushw
pop
and
xchg
das
cmp
enter
inc
popa
xor
mov
mov
ljmp
and
mov
jb
sti
into
andl
jo
fistps
sbb
and
mov
adc
push
xchg
dec
push
jecxz
nop
mov
mov
mov
or
mov
push
js
add
mov
jp
outsl
adc
int3
or
pushf
mov
and
inc
lds
pop
adc
pop
push
push
xor
lret
fimull
lret
or
hlt
test
sbb
sbb
xor
in
pop
or
je
outsl
jge
nop
mov
and
dec
and
pop
sbb
and
or
or
shlb
sbb
add
push
mov
mov
loope
cmp
out
int
inc
insl
push
movsb
fimull
xor
push
inc
mov
push
ret
rclb
xchg
push
mov
movsl
mov
sub
leave
int3
mov
daa
leave
pop
push
dec
test
ss
xlat
mov
dec
dec
lds
or
sarl
xor
rcll
push
add
pop
add
sbb
mov
sbb
sbb
data16
xchg
imul
mov
aad
and
pushf
fisttpl
shll
into
fstp
test
or
or
push
or
in
and
scas
mov
push
sbb
xor
or
inc
jl
aas
les
mov
idivb
pop
and
sub
pushf
xor
in
jge
jmp
push
adc
pop
loop
jns
scas
push
lds
or
cmp
sbb
push
outsb
and
inc
xchg
adc
adc
fxam
add
xorb
leave
inc
jge
ja
scas
add
lods
add
ret
jmp
addr16
mov
ret
inc
fldenv
and
jo
or
add
icebp
sbb
jmp
or
jno
xor
imul
or
test
xchg
mov
and
pusha
call
mov
push
adcb
dec
jno
or
add
add
inc
xor
das
add
test
or
mov
rorb
mov
jmp
cltd
or
inc
sub
repz
add
mov
adc
lret
repz
js
or
pop
das
aad
jne
push
xor
lcall
shlb
loope
lea
jne
dec
scas
xchg
rolb
jae
adc
and
xchg
adc
xchg
cmc
mov
jb
xlat
adc
je
inc
sub
and
out
stos
lret
pop
scas
pusha
push
dec
sub
orb
std
adc
jb
test
ja,pn
dec
xor
movsl
or
ds
cli
mov
insl
inc
insl
adc
shll
hlt
mov
bnd
hlt
mov
xor
imul
call
cmp
insb
push
rclb
aam
or
cmp
dec
stc
stos
dec
mov
into
inc
push
add
scas
push
stc
jb
xchg
or
and
idivl
orl
shl
aam
mov
sbb
xchg
or
inc
cmpsb
pop
sub
or
lods
adc
test
adc
cmpsb
jecxz
mov
adc
and
add
sbb
bound
negb
pop
push
or
mov
push
dec
mov
add
scas
lcall
adc
or
shr
sbb
add
nop
clc
pop
sub
xor
xor
xchg
popa
sbb
stos
cli
push
je
fmul
adc
add
jmp
ss
dec
push
outsl
cmove
push
push
jp
mov
xorl
and
xchg
fdivl
push
scas
add
add
adc
les
negb
xchg
stc
add
js
mov
cwtl
popa
pop
mov
sub
cld
push
sbb
inc
or
pop
jo
mov
inc
pusha
enter
lods
sub
cli
push
cmp
es
push
push
cmp
sbb
into
mov
ret
shlb
notb
lret
adc
lret
aam
sti
sbb
inc
mov
cmp
jno
jmp
sub
testl
push
fisttpl
fdivrs
cmp
pop
cmp
pop
mov
or
pop
enter
sbb
and
sbb
jns
movsb
push
stos
xchg
dec
aas
mov
test
or
push
mov
imul
add
dec
mov
push
ret
sbb
jns
sbb
call
scas
fldenv
or
ret
stos
xchg
jl
cmp
mov
daa
jo
pop
test
mov
shrb
sub
dec
xchg
sub
sarb
push
inc
mov
aam
inc
jl
pushw
push
xor
pop
aad
xchg
leave
push
mov
js
inc
inc
sbb
roll
int
adc
or
ds
adc
pop
testb
js
pop
or
or
or
jp
popf
sub
pop
stc
pop
ror
mov
sbb
or
mov
bound
mov
cmpsl
sbb
xchg
cmc
in
mov
lock
dec
popf
adc
adc
pop
push
add
xor
xlat
rolb
adc
inc
stos
sbb
xchg
jno
sbb
cmp
adc
mov
add
xor
or
push
xor
cvtps2pd
shlb
adc
add
mov
loopne
jge
jge
cmp
data16
iret
dec
cwtl
xor
inc
push
stc
scas
mov
lods
ljmp
lahf
bound
rolb
sub
aaa
sub
imul
shlb
xor
adc
adc
lret
push
xor
adc
mov
incb
add
add
sti
or
adc
jnp
test
loop
cmpsb
push
mov
xchg
sti
cmpsl
stos
push
stos
pop
mov
add
es
sub
movsl
pop
push
xchg
jb
inc
adc
test
push
ret
mov
std
lock
adc
push
inc
push
inc
xlat
push
push
das
bound
repnz
js
adc
js
mov
sbb
inc
repnz
aas
push
push
or
push
xchg
je
test
ljmp
adc
push
arpl
push
sub
dec
negb
orb
fwait
cmp
adc
adc
xchg
inc
push
mov
adc
out
jbe
movsl
dec
adc
xor
pop
lea
cli
subb
ret
fsubl
cwtl
pop
xor
pop
frstor
addl
pop
push
mov
lcall
mov
pop
add
add
jmp
shlb
pop
aad
pop
mov
call
add
rolb
pop
sbb
xchg
push
mov
repnz
pusha
add
rcl
popa
mov
inc
leave
roll
pop
setg
fsubrp
andb
pop
mov
mov
pop
cmpl
shrl
jnp
adc
sbb
enter
push
or
ret
mov
pop
aas
ss
or
les
inc
sub
or
sbb
int3
adc
rolb
inc
jae
jp
or
mov
push
ret
xchg
mov
jmp
or
push
in
jge
sbbl
mov
ret
mov
mov
adc
fwait
ljmp
push
cmp
inc
and
push
sbb
xchg
nop
call
inc
test
xor
sub
add
add
shlb
adc
xor
loop
adc
sti
xor
push
xor
and
mov
sub
sbb
lea
pop
inc
mov
lock
subl
pop
mov
lcall
loopne
inc
inc
mov
jbe
lods
in
rolb
addb
lock
mov
mov
fistps
push
in
rcll
mov
push
inc
movsb
loopne
inc
shlb
rcrl
or
dec
cwtl
mov
or
es
and
mov
and
and
lcall
push
into
daa
call
cmpsb
or
cmpsl
mov
daa
mov
nop
mov
inc
sbb
sahf
rclb
sub
xlat
ret
push
mov
lods
jo
push
adc
ljmp
adc
inc
adc
pusha
and
das
sub
adc
xorb
in
arpl
push
mov
out
adc
lock
adc
cld
mov
inc
enter
xchg
cmp
jmp
ljmp
ret
or
lock
adc
fwait
lods
push
mov
push
enter
call
xor
lock
jge
mov
div
test
arpl
cmc
imul
push
add
push
ja
cs
push
add
daa
dec
hlt
inc
inc
or
dec
addr16
mov
fisubl
loope
sbb
push
xchg
ljmp
les
inc
and
pop
add
jns
push
or
ror
into
insb
clc
adc
repnz
adc
mov
xor
rolb
movsl
scas
sub
push
jl
mov
mov
sbb
mov
xchg
push
inc
sub
inc
dec
pop
xchg
es
stc
add
ret
pop
add
loopne
cltd
pop
test
dec
sbb
sbb
add
mov
add
pushw
test
push
sti
or
nop
test
add
sbb
add
lret
adc
xchg
push
cmpsb
popl
adc
aad
pop
xchg
mov
mov
pop
arpl
rcrb
jo
outsb
add
or
daa
jb
pushf
mov
push
jo
adc
popf
shrl
aam
push
jb
rol
es
mov
push
xchg
or
mov
std
cmp
sub
fisttpl
jp
push
xorb
mov
and
or
add
js
xchg
jnp
in
add
in
pop
aam
aad
adc
pop
cmp
icebp
rcrb
punpckhdq
add
jp
lods
adc
add
sar
out
adc
scas
cmp
not
lods
xchg
into
lock
add
ret
aam
adc
push
adc
daa
sbb
push
les
js
arpl
inc
stos
jno
jnp
and
aaa
pop
mov
inc
adc
mov
sbb
loopne
dec
add
mov
shl
jae
scas
pop
lods
pop
int
dec
xchg
jne
mov
or
pop
sarb
dec
adc
cmp
and
call
mov
pop
mov
add
mov
leave
add
dec
test
xorb
mov
jbe
push
out
add
xlat
mov
mov
mov
lcall
dec
ljmp
and
fs
push
ret
enter
xlat
imul
aad
ss
or
add
lods
dec
inc
adc
or
orl
cmpl
std
add
xchg
adc
movsl
repnz
cmpsb
notb
sarb
or
loopne
jne
aaa
cltd
incb
push
test
or
scas
cwtl
into
pop
cmp
lret
push
cld
int
ljmp
or
add
adc
push
repz
jo
lret
add
xchg
inc
sub
xchg
dec
out
add
jnp
mov
add
arpl
in
insb
or
adc
rcrb
xor
mov
adc
inc
jo
xor
mov
inc
lods
rolb
test
add
push
push
iret
push
or
call
push
sbb
lds
push
int
pop
les
test
push
or
mov
sub
cmc
mov
pop
jl
ds
icebp
loope
push
push
mov
mov
adcb
xchg
cmp
cmpsb
jns
jle
inc
insb
jne
ljmp
mov
dec
adc
mov
or
push
shll
data16
cmpl
inc
and
sti
or
movsl
jns
stos
adc
cmpsb
js
sub
rorl
orl
scas
ret
or
fsub
stos
fsubrl
add
push
addr16
dec
xor
or
cmp
in
xor
dec
aam
pop
jo
or
sub
sbbb
fwait
pop
subb
test
xchg
inc
sbb
adc
sub
sbb
cltd
dec
sub
xlat
lock
lret
cli
jmp
add
rorb
xchg
ds
xor
sbb
pop
push
lods
lret
jmp
pop
shll
insl
pop
gs
mov
add
ljmpw
adc
mov
cmpsl
inc
xor
adc
or
pop
jno
mov
cmp
test
inc
cwtl
xchg
inc
add
test
xor
sbb
inc
push
mov
pusha
xchg
sbb
jo
lds
test
mov
outsl
pop
pop
inc
sbb
jmp
dec
leave
sub
mov
cmc
ljmp
mov
dec
push
mov
enter
cmpsl
dec
notb
adc
pop
pop
sub
mov
pop
add
pop
jp
call
push
clc
pop
xor
mov
mov
adc
les
lock
lcall
jo
inc
insb
and
mov
call
es
cmp
mov
loope
dec
pop
sub
js
push
fmuls
inc
push
mov
ja
and
push
cmp
push
pusha
and
adc
int3
adc
faddl
ljmp
cmp
test
xor
bound
ja
pop
sarb
adc
fisttpll
mov
je
xor
daa
push
or
adc
push
enter
mov
loop
iret
aaa
into
lods
push
popa
stos
sbb
fistpl
cli
adc
jg
jo
jecxz
mov
push
mov
in
lock
ljmp
sub
orb
pusha
int
lds
xor
movb
ss
inc
sahf
shrb
adc
mov
xor
and
loopne
stos
jg
lret
in
adc
je
sbb
mov
adc
cmp
mov
inc
sbb
mov
add
mov
push
push
ljmp
adc
add
ljmp
mov
push
test
pusha
cwtl
ss
pop
xor
data16
loope
sub
xor
test
push
sub
cmp
adc
and
mov
push
xor
das
adc
pop
inc
or
xor
push
shr
xlat
adc
cmp
adc
push
lahf
add
sub
pop
daa
dec
pushf
cli
adc
jl
xor
popa
enter
push
imul
sub
pop
push
cmp
push
or
loop
leave
mov
pop
lods
fdivp
pop
nop
and
xor
inc
or
jbe
add
aad
dec
xor
push
gs
divb
rolb
enter
pop
and
mov
mov
add
jb
add
push
push
daa
js
sbb
push
xchg
xchg
mov
mov
mov
mov
rcll
mov
adc
mov
push
sbb
or
mov
push
int
femms
push
xor
cmp
rorl
inc
push
sbbl
rclb
cmp
shrd
push
aam
or
adc
ret
insl
push
sub
push
cmp
cmp
xchg
lods
icebp
xor
push
push
xchg
stc
repnz
adc
adc
outsl
sar
push
xor
popf
push
cwtl
mov
mov
rcrb
repnz
adc
mov
mov
cmp
dec
es
sbb
sbb
das
dec
pop
repnz
outsb
sar
in
mov
or
ret
addl
or
call
jle
addr16
jp
push
adc
lods
add
mov
dec
pop
loopne
les
push
add
mov
in
add
adc
rol
dec
adc
xchg
sbbl
in
ret
test
cmp
pop
add
cltd
add
sahf
push
or
push
adc
adc
test
push
and
sahf
push
xchg
ret
mov
mov
rclb
enter
xchg
inc
pop
hlt
inc
push
or
shrl
push
sbb
inc
subl
rcl
xchg
ror
cld
lds
pop
scas
sub
bound
sub
push
add
mov
sahf
test
fstl
scas
lods
xor
cmp
or
test
cmpsb
pop
clc
orl
mov
bound
or
cmpsl
pop
aaa
jl
mov
enter
push
icebp
adc
push
orl
fs
inc
sub
stos
add
test
or
scas
mov
clc
pop
inc
cmp
popa
ret
stos
inc
inc
and
movaps
push
pop
test
scas
leave
dec
push
add
sbb
push
pop
cmp
jmp
rorb
xchg
test
mov
in
insb
stos
je
mov
fidivl
test
pop
and
mov
lcall
add
ret
sbb
das
xor
enter
push
hlt
and
lock
lds
mov
mov
xchg
in
loopne
lcall
dec
sbb
mov
xchg
rcrb
xchg
jecxz
stc
push
pop
xor
dec
push
sub
loop
inc
adc
mov
mov
mov
inc
pusha
mov
es
in
sbb
dec
push
bsf
es
popa
mov
sahf
leave
adc
and
xor
pop
adc
sbb
das
adc
pop
adc
subl
cli
cmp
sbb
mov
pop
and
ret
out
icebp
orb
add
cmp
rolb
push
rcrb
aam
bound
add
je
mov
pop
mov
sbb
jg
mov
fs
movsl
sub
adc
jge
and
or
sub
mov
dec
and
shlb
and
push
aaa
pop
and
cmp
sbbb
daa
rolb
adc
rolb
push
mov
jmp
mov
out
or
cmp
inc
sbb
clc
pop
mov
cmp
test
adc
add
mov
or
out
subl
aad
leave
pop
add
sub
inc
adc
arpl
test
popa
popa
push
push
aad
aaa
push
pop
push
test
pop
inc
or
adc
pusha
mov
adc
mov
sbbl
push
lret
rorb
inc
xor
cmpsb
cmpsb
and
add
push
ret
in
jns
lds
adc
int
mov
lret
push
add
shll
adc
xor
mov
mov
mov
mov
and
decb
add
sbb
stos
lock
enter
sub
xchg
sbbl
push
or
mov
inc
and
xchg
fmull
sbb
ja
lea
or
push
icebp
cld
jmp
sub
pop
sub
outsb
inc
shl
mov
cs
dec
sub
cmpsl
and
int
mov
ja
mov
js
sbb
scas
sbb
push
mov
test
add
push
or
push
sbb
pop
xor
mov
inc
sbb
aam
fisubs
addb
imul
lds
sbb
mulps
jmp
cmp
add
or
test
inc
out
xlat
add
push
dec
or
ret
mov
add
pop
ljmp
push
loop
pusha
stos
push
mov
or
xor
insl
sbb
repnz
arpl
inc
sub
push
mov
jno
icebp
orb
and
xor
das
cwtl
sub
push
adc
push
adc
mov
test
xchg
test
pop
sti
and
inc
fistps
ffree
add
mov
pop
hlt
lods
jg
or
loopne
mov
and
cmp
and
or
aad
sbb
rorb
mov
xor
dec
adc
jge
mov
stos
adc
mov
jle
sub
add
enter
jne
mov
cmc
push
adc
add
cmp
sub
inc
test
je
cmpps
and
and
movsb
roll
pop
addb
mov
push
lds
add
inc
mov
sub
push
jle
orl
shlb
sbb
jo
cmp
xor
nop
das
ds
hlt
notl
aas
add
ljmp
pusha
mov
or
jb
pop
fsubr
mov
outsl
jne
cmp
sbb
int3
std
add
inc
addl
clc
push
inc
mov
test
cmpsl
cmp
sbb
add
push
adc
mov
fldenv
lods
mov
pop
pushf
out
mov
pop
adc
add
popl
sbb
std
sub
pop
aad
mov
loop
or
cmp
push
add
mov
leave
xchg
aam
xor
mov
nop
addl
shlb
inc
test
push
pop
call
ret
negb
arpl
and
xor
or
add
loopne
or
jbe
push
movb
mov
leave
add
bound
adc
bound
addr16
or
add
loopne
mov
mov
pop
call
sbb
or
mov
orb
in
xor
repnz
into
pop
push
dec
mov
adc
ja
sarb
aad
test
dec
mov
inc
sub
cmc
enter
mov
jl
inc
movsl
sub
sub
jnp
mov
push
fdivl
xchg
push
stos
adc
xor
bound
in
dec
or
pusha
push
mov
lret
out
xlat
iret
adc
ret
jp
xchg
enter
fpatan
push
clc
push
sub
add
xchg
loope
pushf
and
sub
leave
das
mov
or
ja
push
sbb
rcrl
cmp
adc
test
xlat
dec
arpl
rolb
xlat
sbb
sbb
aas
dec
popa
inc
inc
shll
repnz
sub
sahf
jns
add
in
loopne
loopne
add
mov
and
xor
push
push
adc
adc
scas
lret
or
cmp
xchg
jecxz
add
je
or
dec
pop
adc
mov
adc
adc
popa
push
inc
out
and
inc
cmp
xchg
cwtl
push
or
stos
add
inc
scas
lods
adc
pop
sub
xor
in
fs
cmovno
ljmp
inc
sar
adc
and
pop
mov
inc
or
stos
lea
xchg
ffree
insb
sub
cmp
inc
sbb
in
cmp
and
xor
js
sub
icebp
or
loope
inc
hlt
pop
sub
adc
and
cli
enter
or
or
outsb
jae
cmp
leave
into
shl
cmp
insb
jle
sbb
je
daa
arpl
scas
dec
adc
push
dec
lret
mov
push
sub
test
push
js
popf
outsb
inc
in
sub
add
pop
insb
movsb
mov
jo
xchg
add
das
rolb
ljmp
pop
push
mov
stos
mov
pop
scas
jbe
rcr
jb
pop
stos
sti
add
push
dec
push
xor
notb
lahf
add
and
xchg
push
pusha
fdivs
cmp
lock
movsl
andl
xchg
or
xchg
stos
inc
mov
add
sbb
cmp
loope
jge
mov
mov
push
add
sbb
xchg
leave
xchg
stos
xchg
sbb
add
push
leave
adc
inc
int
pop
stos
lods
push
and
mov
jmp
mov
push
add
jne
les
push
sub
cmpxchg
daa
or
adc
test
inc
push
icebp
pop
add
cmp
les
or
and
aad
mov
and
js
int3
js
xor
cmp
lods
stos
push
push
sbb
pop
into
push
xchg
adcb
push
or
aam
jno
rol
pop
inc
xorl
adc
add
mov
or
loope
ret
jne
rcrb
inc
cmp
adc
lret
ret
mov
aam
call
test
dec
push
adc
int
lea
push
or
and
dec
mov
push
inc
mov
mov
jp
ret
mov
fcmovbe
rcrb
cmpb
pusha
add
popa
sbb
in
dec
cwtl
cmp
and
stos
or
or
call
sub
sahf
add
xchg
lret
fs
setns
filds
sbb
call
inc
adc
iret
mov
sbb
mov
in
mov
rcrl
push
or
push
daa
inc
pop
jb
xchg
mov
push
sub
into
cmp
and
ja
pop
mov
shrl
adc
cmpsb
shlb
mov
xchg
fucomp
or
mov
inc
cmp
pop
lahf
mov
sbb
les
mov
jb
jle
pop
add
or
shl
and
push
add
adc
xor
adc
xor
mov
aad
dec
je
and
add
sti
sarl
nop
lock
push
sub
add
pop
aam
or
pop
lods
mov
push
xchg
pop
cmpsl
push
mov
pop
lea
jo
test
dec
ret
arpl
loop
push
sbb
push
inc
pop
adc
sahf
gs
push
leave
cmp
scas
sbbl
clc
popl
repnz
repz
xchg
push
xor
add
add
dec
add
shrl
hlt
imul
out
rcll
femms
jmp
ljmp
adc
mov
add
add
or
cwtl
lea
mov
mov
mov
sub
aam
add
cmp
les
mov
sahf
ret
adc
scas
push
push
mov
mov
sub
sub
xor
jae
pop
xchg
popa
push
mov
lods
cs
rcrl
push
push
loopne
ret
jecxz
sbb
mov
adc
push
clc
mov
shll
pop
test
test
inc
dec
aad
add
pop
pop
pop
jl
or
out
add
leave
andnps
push
sbb
test
inc
aam
sbb
add
fadd
sub
xor
push
dec
mov
js
mov
lds
mov
cmp
push
pop
mov
insb
fidivl
and
dec
into
add
mov
sub
add
mov
icebp
pop
bndldx
cmp
mov
les
cmp
adc
sbb
jmp
test
push
push
xor
scas
adc
data16
or
popa
adc
xchg
and
add
mov
stc
sbb
pop
pop
test
sbb
lds
test
cmp
push
or
aad
jl
das
and
movsl
push
jecxz
inc
cmp
adc
mov
mov
add
es
out
test
iret
scas
aad
call
mov
lcall
push
or
jo
dec
dec
push
dec
add
popa
cltd
movsb
subb
stos
or
push
mov
in
aad
jae
add
mov
add
sbb
cmp
adc
push
cmp
popa
lcall
icebp
or
cmp
mov
mov
pop
addr16
sub
std
jb
add
sbb
popa
nop
js
mov
cwtl
push
push
dec
cmc
mov
add
or
mov
adc
cmp
inc
xchg
pop
pop
bnd
pop
or
movsl
mov
pusha
adc
jo
inc
mov
punpckhdq
in
push
sub
jne
pop
call
pusha
ja
adcb
call
out
ret
aad
scas
adc
inc
add
pop
cmp
jo
mov
xor
mov
scas
add
mov
sarb
push
adc
aam
inc
imul
add
push
push
mov
or
rorb
adc
pop
adcb
inc
ret
inc
hlt
enter
jp
add
sbb
into
pop
sbb
std
rorb
dec
add
sub
icebp
add
add
rcll
sbb
mov
xchg
imul
dec
loope
les
push
adc
adc
dec
inc
add
mov
test
sub
inc
xor
mov
push
jb
push
insb
add
pop
or
test
dec
scas
ja
std
or
movsb
clc
shl
bsf
xor
mov
aad
xchg
inc
sub
or
shll
inc
jno
adc
dec
mov
sbb
rolb
fldl
adc
cltd
adc
stos
mov
test
push
push
adc
fcomps
ljmp
dec
push
sbb
push
pop
test
mov
pop
rolb
pop
imul
sbb
andl
adc
leave
pop
xor
add
sub
into
fldenv
pop
addl
and
and
mov
adc
test
mov
push
and
into
test
aad
popf
jb
lock
xchg
jb
iret
mov
sub
xchg
pusha
push
push
je
loopne
or
and
sub
ret
leave
sbb
push
dec
mov
cmc
ret
lock
ljmp
inc
out
push
xchg
stc
or
cli
pop
push
pop
pop
test
xchg
add
mov
pop
in
and
adc
clc
adc
adc
lret
sub
in
sub
cmp
roll
xor
mov
push
gs
push
dec
xor
testb
lods
dec
addr16
pop
dec
lahf
add
jo
xchg
push
enter
inc
stc
or
adc
divb
sub
cs
cmpsb
push
jno
sti
dec
and
adc
rol
fidivrl
test
andl
cmpsl
shrl
jmp
push
rolb
rcll
fs
sbb
es
mov
rorl
adc
roll
fcmovne
test
lret
shll
pop
cmp
shll
push
test
repz
daa
ret
dec
leave
insb
imul
int3
rorl
push
mov
and
inc
movsb
scas
xchg
pop
dec
imul
sbb
popa
dec
lods
test
or
scas
or
jg
sbb
push
adcb
jp
hlt
and
or
mov
push
push
inc
call
sbb
xchg
jp
call
loope
mov
push
push
cmp
mov
mov
dec
mov
sub
and
imul
rcrl
push
scas
or
rolb
push
int
and
mov
rcll
xor
pop
inc
ret
xchg
stos
jge
ret
scas
push
add
movsb
sti
push
mov
xor
notb
or
or
push
int
add
lods
popf
enter
mov
push
mov
stos
dec
sbb
pop
or
pusha
mov
add
shll
or
push
mov
scas
jno
fs
pop
data16
or
in
push
sbb
pusha
lcall
lea
xchg
or
icebp
sbb
lcall
stc
and
inc
retw
imull
cltd
clc
pop
gs
icebp
cmp
jle
jmp
aad
sti
filds
add
or
dec
add
and
add
imulb
cmp
lret
adc
sbb
test
xor
sbb
fisubrl
cltd
iret
mov
das
adc
sub
fptan
push
aaa
js
xchg
add
aad
rclb
imul
or
scas
js
and
sarl
xorl
out
shl
scas
into
mov
jmp
fwait
sub
xor
scas
test
sub
bound
test
push
push
mov
jne
fldl
pop
pop
push
jne
inc
iret
or
hlt
enter
decb
or
call
rcrb
rclb
jmp
lahf
push
xchg
push
sti
mov
xchg
sbb
testl
ljmp
mov
stos
xchg
push
sbb
add
add
push
push
out
inc
mov
add
das
pusha
sub
test
xor
pop
cld
or
inc
sbb
ljmp
sbb
enter
sbb
loop
inc
rclb
lods
les
sbbb
test
add
mov
push
sarb
push
shlb
call
sbb
adc
cmp
xchg
sbb
xor
aad
jecxz
xchg
sub
sub
mov
pusha
and
mov
add
cmp
jmp
push
adc
jo
loopne
shr
adc
xchg
addl
xchg
jne
push
cmp
xor
inc
sti
int3
int3
or
jle
lock
mov
adc
into
ficoml
push
repnz
lods
xchg
cmp
cmp
mov
dec
jbe
pusha
adc
push
mov
push
mov
sbb
test
inc
enter
cmp
add
inc
idiv
adc
xor
mov
loopne
pushf
push
pusha
jb
filds
push
jns
push
mov
popa
pop
sbb
dec
push
xchg
stos
daa
xor
jp
icebp
test
adc
loop
jle
mov
cmpsl
and
sub
and
gs
pop
cmp
dec
cmpsb
sub
adc
sbb
jp
cmp
adc
test
mov
sub
xchg
adc
stos
rol
lret
push
cwtl
mov
sbb
xchg
adc
add
add
jg
mov
and
mov
inc
push
testl
push
inc
push
dec
cmp
rolb
clc
inc
sbb
test
push
sbb
pop
mov
lock
clc
sbb
cmpsl
xor
stos
or
mov
rorl
xlat
inc
jno
xor
and
aad
push
add
das
inc
in
xor
add
push
cmp
jecxz
adc
jle
clc
or
ljmp
or
scas
inc
mov
sbb
lock
mov
adc
mov
xchg
adc
jo
pop
adc
or
cmp
mov
das
dec
movsl
jo
inc
lods
or
and
loop
dec
mov
sbb
mov
dec
sub
sbbb
xchg
cmp
test
push
test
or
mov
lret
inc
mov
jb
arpl
cmp
lcall
mov
push
xchg
or
js
shrl
or
shlb
test
sbb
leave
sti
iret
push
add
sub
adc
imul
mov
lret
out
push
int
push
pop
movl
filds
xor
push
das
repnz
or
sub
push
lods
jp
xchg
add
in
push
imul
test
jmp
push
mov
push
mov
aaa
xchg
test
add
loopne
jb
pop
into
push
test
outsl
das
pop
mov
adc
mov
push
jne
cli
push
mov
inc
push
sbbl
addb
ss
push
push
lcall
popf
sub
das
push
cs
inc
es
rclb
ja
inc
inc
imul
ret
inc
cmp
movsb
xchg
push
in
inc
add
clc
lret
test
sbb
mov
mov
or
push
add
es
fstps
aam
jo
push
pop
les
sub
stos
dec
out
push
mov
lret
jb
xor
je
inc
xchg
inc
add
ret
scas
cli
getsec
inc
vmxoff
jnp
lea
pop
xor
shrb
push
repnz
adc
mov
add
pop
enter
mov
push
mov
inc
pop
ret
push
shll
adc
add
or
jo
testb
lock
mov
stos
xor
pop
adc
mov
cli
adc
add
call
jmp
test
push
adc
mov
orb
cwtl
xor
jno
rcr
add
push
mov
push
std
adc
sbb
sub
and
hlt
add
lods
pop
popa
lods
loop
xor
dec
and
pop
xchg
add
or
inc
ja
pop
xor
movl
fsubr
pop
sub
lock
stos
and
pop
lds
sbb
loop
jge
push
loope
test
mov
leave
mov
icebp
ret
add
testb
add
call
cmp
add
adc
clc
push
in
fstl
and
lret
or
xlat
nop
lods
daa
std
xlat
cmp
mov
lret
icebp
lcall
push
mov
adc
xchg
popa
mov
lock
inc
and
add
imul
pop
cmpsl
inc
mov
into
push
xor
cmc
hlt
push
xchg
adc
nop
jecxz
mov
in
outsb
arpl
and
test
inc
mov
lock
lret
sub
xchg
mov
adc
icebp
into
in
mov
out
adc
or
sbb
lea
inc
int
mov
and
pusha
add
adcl
mov
mov
xchg
ds
and
in
mov
hlt
cmp
inc
pop
jmp
jb
daa
imul
or
add
sub
mov
rcr
sbb
scas
pop
pop
adc
mov
inc
mov
les
dec
push
fisubs
enter
ret
icebp
bound
or
inc
xor
outsl
sbb
push
loopne
sahf
popf
enter
rol
mov
out
push
pop
pop
jne
push
cmpsb
jo
fistl
push
mov
rol
or
inc
lret
das
push
pop
test
add
sarb
sbb
mov
negb
scas
pushf
call
pop
pextrw
mov
xor
ret
ja
mov
rcrl
xor
pop
sbb
jmp
and
cwtl
jns
mov
int
xlat
ljmp
lcall
enter
pusha
mov
xchg
xchg
fiaddl
sti
ret
or
mov
je
add
push
sbb
inc
test
fwait
mov
adc
mov
pusha
push
and
adc
add
push
test
mov
sbb
add
cli
pop
and
jb
lcall
adc
cmp
xor
pop
out
jecxz
lcall
adc
sub
pop
sbb
inc
xchg
inc
cmp
adc
jp
sub
call
inc
fisubl
inc
push
push
daa
push
add
lds
add
dec
push
and
jne
or
sbb
cmpsb
jbe
or
addb
inc
cmp
mov
clc
pop
xor
test
call
adc
sub
adc
cmp
shll
push
imulb
push
sub
cmp
adc
dec
mov
jl
jb
das
mov
out
testb
mov
test
jne
cmp
pop
jno
mov
dec
test
pop
add
faddl
dec
shll
pop
lds
dec
adc
push
or
mov
js
mov
popa
movsb
adc
ret
push
cltd
jp
rcl
in
mov
jnp
and
mov
sbb
and
jp
lahf
or
mov
lds
inc
mov
mov
movsb
sarl
data16
fidivl
mov
add
aas
adc
lods
mov
sbb
test
negb
pusha
add
or
sarl
mov
adc
mov
cli
mov
inc
movsb
or
shl
sbb
add
add
dec
lock
ficoml
pusha
pop
push
sbb
sub
rcrl
sbb
enter
jbe
and
icebp
push
xor
pop
arpl
out
adc
mov
cmp
and
dec
push
inc
data16
sub
cwtl
sti
and
call
inc
dec
push
test
testl
lret
mov
and
sbb
stos
jg
cmpsl
rol
out
stos
out
or
adc
adc
cmp
adc
jl
arpl
mov
push
out
ror
mov
loop
xchg
add
push
scas
fwait
xorb
addl
mov
test
and
cmp
jge
jle
push
and
cmp
dec
and
adc
sbb
scas
rorb
push
fisttps
stos
lock
in
lret
shlb
pop
push
outsl
jae
sub
mov
or
imul
sbb
enter
stc
xlat
test
mov
loop
test
dec
adc
enter
sbb
inc
add
aad
xor
aam
cwtl
inc
gs
mov
push
cmp
inc
mov
adc
or
adc
fwait
push
push
loop
push
push
dec
push
xorb
rcl
adc
push
push
pop
sub
pop
scas
jbe
xor
lret
pop
iret
iret
jo
stos
inc
aam
movsb
sarl
or
push
sub
stos
pop
push
pop
mov
popl
scas
cmp
add
test
lock
inc
push
js
pop
mov
or
push
scas
push
loope
xchg
add
mov
inc
ret
and
push
sbb
xchg
sub
mov
adc
test
dec
aam
or
xchg
push
lret
cmp
sub
jg
arpl
adcb
sbb
ds
call
adc
push
test
jl
js
mov
add
jo
pop
add
cmp
push
fcompl
xor
shlb
daa
scas
sub
sbb
sbb
sbb
mov
xchg
or
mov
add
rcrl
test
inc
pop
test
cmpsb
jae
pop
sbb
pop
adcb
pop
cmp
rol
adc
pop
rclb
pop
pop
enter
or
pop
or
into
xchg
or
xchg
jle
shl
stos
inc
jo
leave
std
push
cmpsb
test
gs
or
push
test
push
pop
push
out
sbb
push
xor
sub
add
or
or
out
icebp
mov
add
cmp
xchg
mov
ds
shlb
stos
or
sub
xchg
mov
add
push
cltd
shlb
jecxz
cs
scas
mov
or
mov
xchg
jne
push
add
leave
je
sub
rcrl
and
mov
hlt
adc
lret
fwait
jp
pop
xorb
rorl
add
pop
push
inc
sub
push
xor
adc
inc
scas
lcall
scas
and
mov
ljmp
or
cwtl
test
pop
sti
xor
mov
push
inc
add
test
jb
mov
pusha
or
ficompl
cltd
test
inc
pop
add
dec
in
push
sub
aaa
mov
or
xor
xchg
sub
scas
xlat
js
push
mov
push
mov
jge
test
push
mov
mov
lret
and
adc
into
push
popf
sub
addl
push
pop
aaa
insb
push
add
scas
imul
pop
clc
and
sub
mov
jb
add
clc
push
lret
cmp
dec
add
leave
dec
add
test
mov
lds
xor
rcrb
push
cmp
dec
fmull
sub
push
mov
mov
mov
cmpsb
push
into
lcall
push
adc
sbb
scas
andl
jle
cli
mov
cmpsl
sbb
and
mov
shll
dec
sub
add
mov
mov
in
rcrb
push
test
jbe
adc
ficoml
or
adc
or
xchg
adc
add
inc
or
and
outsb
add
add
inc
loopne
out
pop
test
mov
sbb
ljmp
addb
test
push
sbb
jno
add
sbb
dec
ljmp
mov
insl
cwtl
loopne
test
xchg
cmp
push
mov
and
xor
enter
adc
adc
mov
addb
inc
mov
orl
push
jle
jne
jmp
jo
hlt
mov
mov
js
stc
xchg
fsubrl
adc
enter
jnp
inc
jb
push
cmp
out
cmp
add
fsubl
sbb
cmpl
lahf
ja
lock
push
mov
adc
cmp
xchg
notb
arpl
inc
rclb
or
xor
xchg
js
cli
mov
je
inc
pusha
test
fmul
rorb
stc
adc
popa
jo
and
jl
sbb
aam
push
jns
jp
loopne
sbb
pop
xor
push
into
mov
das
pusha
push
popa
leave
mov
jne
shlb
push
mov
imul
sbb
jp
adcb
xor
xchg
xor
xor
lods
push
inc
adc
out
lods
sbb
mov
mov
push
xchg
mov
mov
jo
popf
and
fsts
loop
mov
xchg
inc
cmp
dec
push
push
stos
call
sbb
or
test
add
xlat
pop
xchg
ret
sbb
inc
mov
push
inc
in
cli
cmp
stos
jge
add
pop
pop
push
xor
push
loopne
das
and
out
sbb
insb
add
add
mov
loope
xor
xor
or
fisubrl
or
movsb
push
clc
call
dec
and
test
push
mov
mov
or
push
cmp
bound
xchg
or
add
sbb
bound
xchg
sub
sbb
xchg
add
mov
les
ss
mov
dec
icebp
dec
dec
sbb
and
push
dec
push
lods
mov
mov
jns
cwtl
lods
ret
jmp
jb
por
filds
push
shr
xchg
mov
divb
inc
out
cmp
jecxz
or
mov
test
adc
cmp
push
xor
shl
popa
and
jo
push
xorb
adc
mov
sub
fistl
lds
mov
add
pusha
add
in
add
iret
mov
andb
jnp
cmc
test
xchg
sub
aaa
das
xor
sti
sbb
enter
cld
lock
add
gs
aam
push
pusha
mov
xor
out
mov
push
adc
mov
mov
pusha
and
mov
mov
push
push
sbb
push
mov
push
pop
popa
add
ljmp
add
push
sbb
inc
test
and
into
mov
mov
add
jb
aaa
arpl
push
xchg
and
shlb
jl
stos
fwait
push
adc
int
test
bound
orl
push
bound
cmp
mov
cmc
jg
xchg
dec
mov
sbb
push
sub
rcll
or
sti
xor
or
or
negb
add
sarb
xorb
mov
mov
cmp
mov
je
dec
movsb
sub
and
orb
sahf
popa
sbb
cwtl
stos
xchg
into
sbb
cmp
push
out
push
shr
sub
push
xchg
add
mov
pop
mov
sub
xchg
or
or
add
add
cmc
mov
es
out
stos
pop
lea
loope
int3
scas
mov
into
add
lods
bound
adc
add
cmp
pop
push
inc
insl
jmp
pop
mov
cmp
shll
sbb
pop
and
inc
aad
sbb
adc
sub
lock
and
dec
test
and
xchg
imul
sub
das
ret
lods
xor
add
cld
andl
cmp
mov
dec
xchg
mov
ja
pop
jo
aam
dec
jns
push
add
pop
int
rorb
ss
inc
popa
loope
shrl
xchg
in
xor
mov
test
inc
sub
stos
ret
mov
push
mov
sbb
xchg
bnd
lock
and
or
and
mov
mov
insl
rcll
or
roll
lret
inc
subb
mov
test
jge
or
push
adc
bnd
add
psubb
mov
ret
sbb
lods
pushf
push
push
mov
in
inc
subb
mov
adc
push
xor
sbb
call
leave
arpl
add
or
fwait
xchg
and
dec
addr16
fs
loope
jae
xchg
scas
sbb
add
roll
ret
addb
pop
add
lea
rol
push
js
dec
jp
js
add
js
jo
xor
or
fldln2
jnp
inc
test
fwait
sbb
pusha
mov
fstl
adc
leave
adc
mov
xor
cmovnp
mov
mov
pop
scas
insl
test
pusha
out
cmpsl
push
out
xchg
sysret
adc
hlt
loop
pusha
mov
lcall
mov
sub
mov
inc
test
mov
repnz
adc
push
add
sbb
pop
rorb
shll
mov
lret
js
das
mov
sbb
push
aad
sub
lret
mov
test
stos
out
arpl
or
xor
mov
sbb
sbb
xchg
aad
inc
sub
pop
bound
lds
pushf
adc
cmp
mov
lods
jecxz
das
or
mov
cmpsb
cmp
rorb
sbb
or
push
cmc
mov
mov
push
add
fcmove
ret
mov
or
mov
or
inc
adc
sbb
sub
stos
icebp
int3
adc
mov
mov
inc
movsl
inc
push
pop
adc
adc
xlat
pop
inc
test
push
adc
dec
aam
or
repnz
ret
push
test
in
cmp
mov
or
nop
inc
mov
daa
adc
add
or
and
stos
jp
inc
sbb
lret
lret
jno
fcmovnb
aas
push
and
xchg
in
add
and
pop
jg
jnp
push
xor
cmp
push
adc
push
push
mov
test
dec
adc
add
mov
pop
sbb
add
mov
arpl
nop
add
cmp
mov
xor
dec
adc
sbb
and
mov
pop
mov
test
push
out
test
or
mov
inc
xor
inc
pop
or
push
out
pop
adc
rorl
or
test
mov
push
cmpsl
add
push
cmpsl
sbbb
inc
mov
sbb
sbb
les
push
cmpsb
repz
aam
push
sbb
xchg
bound
sahf
mov
sbb
push
scas
sub
in
add
sub
sub
adc
lcall
add
test
sbb
stos
inc
xchg
xchg
lcall
in
cltd
jp
adc
inc
sub
ret
mov
gs
mov
or
mov
sbb
xchg
add
push
adc
push
out
ror
mov
popf
sbb
mov
cmpsl
subb
loop
mov
rcll
rol
cmpsl
ret
cmpsb
loope
bound
iret
mov
push
sbbl
stos
arpl
cld
adc
xor
ja
bound
or
push
jno
nop
mov
dec
ljmp
cmp
inc
or
lods
jge
mov
mov
jb
popf
and
adc
cld
shlb
push
add
sub
daa
sbb
or
dec
subl
xor
inc
imul
jne
mov
inc
mov
or
and
dec
aas
stc
data16
cwtl
xor
mov
push
es
adc
lock
loopne
pop
lods
inc
addl
push
cmp
sbb
mov
int
cmp
mov
push
push
out
aam
add
into
bound
jo
xchg
xchg
and
pop
imul
mov
or
cmp
ret
pop
scas
and
mov
in
lds
outsb
xchg
cmc
sbb
insl
and
ret
dec
jb
or
push
cwtl
shrb
or
inc
stos
lea
inc
push
pusha
nop
cmc
ret
dec
sbb
jle
push
insl
test
cmp
fisttpl
pop
inc
xor
hlt
mov
mov
and
push
jno
cs
adc
mov
loop
push
push
and
into
mov
int
lods
sahf
rolb
or
xchg
addl
adc
push
push
shrb
mov
sub
pop
push
lods
ss
data16
lea
inc
inc
jmp
ret
hlt
mov
arpl
mov
repz
adc
cmpl
xor
bound
fdivrs
call
mov
pushf
push
roll
mov
outsb
or
sbb
push
mov
mov
mov
inc
adc
jnp
or
ror
pop
and
and
xor
xor
aad
test
popa
dec
or
mov
js
jle
dec
icebp
mov
fldenv
cmp
fstpl
xchg
mov
sub
sbb
jo
add
xor
adc
push
pop
jmp
xor
or
mov
mov
inc
add
lret
or
and
stos
adc
and
pop
andb
icebp
jne
sbb
add
mov
and
inc
mov
push
jo
mov
test
sbb
clc
push
sub
js
imul
bound
nop
mov
cs
add
sbb
enter
aam
fwait
sbb
mov
sbb
daa
ret
xor
lock
call
call
leave
mov
insb
test
rolb
test
aam
stos
icebp
add
inc
xor
loopne
movsb
lret
push
mov
mov
roll
js
jb
push
js
jne
pushf
and
sbb
fiaddl
inc
xchg
push
into
inc
lods
incl
jo
in
rclb
rcll
es
add
lods
lock
fs
mov
and
jl
fmull
movsb
andb
jmp
mov
rolb
and
sbb
mov
mov
ss
or
mov
cmp
rorl
sub
xchg
sbb
push
push
sbb
mov
dec
sbb
sub
out
xor
mov
push
and
xchg
or
push
and
xchg
imul
mov
adc
inc
mov
add
adc
pop
sub
cltd
es
add
dec
filds
push
shll
icebp
push
push
cs
sbb
outsb
jbe
in
push
cwtl
testb
nop
cmp
mov
or
add
xchg
aam
xchg
push
jnp
in
adc
xor
push
add
aad
cli
movb
add
or
inc
pop
test
mov
jo
enter
insb
jp
and
add
sarl
inc
in
addb
add
mov
dec
cltd
and
cmp
sub
scas
or
pop
in
push
cmp
in
cwtl
aad
adc
lods
ret
mov
push
add
adc
sub
je
cmovs
imul
sub
sbb
movb
ret
outsb
test
lcall
add
jo
stc
xchg
sub
orl
inc
aaa
dec
repnz
es
and
movsl
add
mov
and
loopne
sub
push
lcall
das
mov
push
cwtl
xor
aad
dec
int
test
pop
sub
pop
inc
mov
xchg
jb
int3
sarl
in
loop
ret
sbb
repnz
push
jge
mov
dec
ljmp
shr
or
mov
jne
ljmp
sub
mov
inc
mov
addl
push
sbb
or
js
or
bound
push
sub
push
movsb
enter
or
push
sbb
adc
mov
or
shrl
mov
or
sub
push
and
add
mov
add
or
add
mov
mov
and
sub
inc
loop
test
adc
out
mov
xchg
or
loopne
mov
and
xor
or
lods
mov
aad
add
push
dec
cwtl
push
ljmp
inc
cwtl
mov
jmp
mov
xor
adc
inc
stos
mov
and
js
das
pop
cli
add
test
add
iret
push
arpl
pop
adc
out
mov
dec
adc
lock
ljmp
daa
test
je
add
add
dec
test
inc
cmp
jp
mov
inc
sub
add
sbb
stos
or
andl
sub
and
xor
pop
lret
in
dec
inc
es
ret
cs
dec
pop
es
jns
imul
push
or
rorb
jmp
inc
cmpsb
or
mov
mov
int
sub
aad
pop
pop
clc
and
push
sbb
aad
add
lcall
mov
push
sbb
pand
or
add
pop
add
sbb
outsb
jmp
and
leave
dec
and
subl
cmp
adc
add
xchg
int
jge
ljmp
and
or
push
mov
mov
jbe
adc
push
shlb
push
push
std
mov
cwtl
mov
pop
mov
cmpb
inc
cmp
ret
adc
rorb
sbb
es
sti
pop
adc
push
pop
jge
push
jl
add
xchg
mov
add
pusha
or
unpcklps
test
or
leave
push
int
mov
add
adc
lahf
push
in
loopne
xchg
mov
sub
mov
mov
push
or
cmp
les
mov
push
xor
inc
clc
and
outsl
add
pushf
push
sbb
and
adc
sbb
sub
dec
xchg
xlat
into
adc
and
cmp
jbe
push
cmpsb
mov
pop
test
push
or
add
lock
mov
push
test
cmp
rorl
aas
nop
push
movsl
sub
arpl
or
rcr
stos
inc
sbb
adc
idivb
jb
pop
cmp
jg
loop
xchg
dec
add
push
sub
cmp
dec
or
adc
in
bound
dec
mov
jbe
mov
and
jp
scas
inc
add
sub
jnp
inc
lds
jo
mov
sub
in
xor
mov
jb
mov
cmp
cmpsb
mov
orb
loop
dec
arpl
add
and
inc
mov
push
sbbb
pop
adc
and
mov
sub
test
ss
fdivs
movb
dec
xchg
push
mov
sbb
sub
bound
inc
int
ret
sbb
inc
and
inc
stos
or
stc
sub
jp
outsl
xchg
sub
rol
mov
xor
lock
and
add
sbb
add
leave
stos
sub
pushf
xchg
add
stos
je
cmpsl
sbb
inc
jae
adc
push
inc
mov
loope
cmp
push
push
rcll
aad
stos
sbb
mov
repnz
mov
cltd
stos
dec
lcall
fists
add
jl
nop
add
lret
sbb
jo
call
or
dec
lods
ret
mov
jbe
stos
inc
psraw
fldl2e
addb
mov
shrl
sub
jnp
and
pop
push
sub
pop
or
xchg
orl
jno
xchg
je
push
addb
pop
add
pop
jno
pop
push
es
add
lds
cmp
int3
and
xor
cmp
sbb
add
add
nop
xchg
or
mov
mov
sub
gs
adc
daa
adc
rcrb
pop
pop
adc
rorb
push
inc
rorl
dec
add
cmp
sar
popf
addl
scas
mov
sub
mov
aad
push
pop
jmp
les
fdivrl
stos
dec
or
in
mov
dec
icebp
cltd
xchg
push
mov
fwait
sbb
adc
hlt
pop
lds
and
dec
or
dec
fucomip
lods
jb
vmwrite
mov
aam
and
cmp
inc
inc
je
xor
pop
or
adc
dec
adcb
cmpsl
xor
sbb
test
cmp
shl
popa
sub
inc
addr16
fs
fbstp
sub
xor
addl
jo
sbb
sbb
xor
jno
sub
adc
fcmovne
pop
adc
mov
sbb
and
call
popf
mov
jno
inc
inc
movsb
pop
inc
add
dec
add
das
rorb
lret
xchg
inc
test
add
sbbb
orl
push
push
xor
rolb
sbb
cmp
sub
loopne
add
jne,pn
jnp
lods
mov
push
frstor
and
cmp
mov
sub
jns
rcrb
daa
test
cmp
push
subb
jb
pop
mov
xchg
jmp
cmp
push
test
sub
lret
lock
mov
inc
xor
call
jae
in
push
xor
mov
iret
aaa
push
js
pop
sub
sub
or
adc
fiadds
inc
test
pop
lods
adc
push
cmpsb
sarl
or
das
push
and
push
outsl
push
push
push
test
test
call
mov
mov
mov
inc
je
cmp
repnz
rolb
jne
sbb
mov
pushf
stos
or
popf
jmp
fnstcw
addl
ret
mov
roll
push
faddl
xor
xor
push
push
mov
stos
clc
nop
mov
pop
xchg
mov
sahf
push
cmp
and
mov
inc
mov
push
lods
add
pop
cwtl
push
out
nop
pop
imul
xchg
inc
popa
adc
mov
rorl
inc
add
js
mov
incb
stc
mov
shrb
dec
loopne
lret
xor
stos
enter
loopne
cs
push
adc
into
and
xor
adc
ret
dec
test
push
mov
jecxz
push
mov
fldcw
ljmp
test
pop
mov
ret
jecxz
in
jmp
mov
arpl
bound
add
mov
xchg
mov
add
sub
xor
pop
lret
aad
lock
add
xor
jne
add
mov
sub
mov
pop
cmpsl
add
addb
pop
mov
orl
jl
dec
mov
pop
into
xor
scas
pop
mov
adc
sub
pop
push
cmpsb
jge
pop
scas
jle
repnz
push
adcb
adc
sub
add
movsb
mov
jne
inc
and
sbb
test
fbstp
inc
test
roll
clc
adc
jb
add
xchg
dec
int3
scas
inc
sbb
insb
lret
mov
test
js
pop
hlt
mov
pop
cmpsb
push
testl
jmp
dec
rclb
sarb
rcl
les
push
adc
xchg
adc
adc
sub
je
loopne
xchg
add
xor
pop
push
orb
addr16
es
adc
les
into
push
xchg
mov
les
cmpsl
mov
je
pop
sub
std
sbb
xchg
adc
aam
push
sbb
jmp
mov
bnd
sbb
add
adc
push
jle
stos
loopne
mov
dec
mov
and
sahf
jmp
push
lcall
rclb
sbb
xchg
and
hlt
and
shr
add
aad
scas
push
mov
leave
pop
push
pop
mov
mov
dec
mov
inc
shlb
and
shl
cmc
mov
jbe
in
pop
sbb
int
rclb
cmp
ret
push
pop
ja
add
mov
pop
sbb
sbb
add
mov
sub
push
ficoml
enter
fimull
push
adc
mov
mov
and
sar
dec
bound
or
mov
inc
or
pop
loope
cmp
inc
je
or
inc
mov
xor
adcl
xor
cwtl
add
enter
rorb
test
add
adcl
loopne
pusha
add
sub
adc
lea
les
daa
int3
sub
clc
stos
mov
add
fildll
pop
mov
inc
sub
clc
pop
fisttpl
js
xchg
push
decb
clc
xor
into
adc
cmp
add
out
setbe
adc
mov
ds
lods
shl
push
rcrb
inc
loopne
call
repnz
stos
xor
test
dec
adc
sub
lods
pop
add
cltd
pop
jno
push
xor
pop
aad
push
jo
mov
jge
xor
movl
imul
push
dec
mov
xchg
adc
sbb
mov
jge
push
scas
xor
inc
icebp
aad
add
cwtl
push
push
mov
fldenv
mov
rcrl
mov
pop
pop
adc
jo
jmp
sub
jmp
mov
dec
push
sbb
jl
jg
cmp
and
push
pop
test
daa
dec
jp
adc
outsl
lret
push
cmp
shlb
and
xor
jae
popa
add
in
jmp
rorb
pushf
dec
adcl
dec
sub
orb
cmp
dec
orl
addb
icebp
jno
leave
cli
add
pop
xchg
mov
push
rolb
out
or
pushf
or
lea
enter
push
and
mov
movb
js
pop
pop
xor
imul
add
sub
mov
fistpl
das
mov
push
lock
mov
or
loopne
fdivr
add
inc
mov
lds
test
inc
pop
mov
lret
fwait
aam
xor
inc
push
lret
push
jb
adc
push
scas
pop
movsl
inc
lods
in
push
lds
sbb
mov
aam
in
jb
lock
mov
pop
xchg
mov
jo
cmp
es
jo
ret
pop
and
xchg
clc
fadds
aad
loope
test
cli
and
or
data16
in
or
or
imul
add
je
sbb
test
dec
add
push
push
je
mov
addr16
inc
imul
push
mov
dec
adc
sbb
sbb
out
scas
lret
adc
adc
test
sub
add
adcl
pop
adc
sti
pop
xor
aam
cli
sbb
pusha
add
and
xchg
cmova
mov
mov
sbb
clc
test
adc
or
mov
and
xchg
xor
sbb
or
bound
fstpt
push
int
rol
mov
lods
jne
pop
adc
push
xchg
addb
sti
sub
xchg
sarb
and
call
dec
add
fxch
and
jo
jge
sbb
popf
dec
cmp
sub
sbb
inc
test
xor
jo
loope
jge
lcall
sbb
roll
mov
fldcw
loop
mov
sub
test
sbb
shlb
daa
ret
pop
repz
pop
adc
cmpb
sub
leave
xor
add
or
add
cmpsl
test
mov
cmp
pop
cmpsl
push
push
stos
adc
add
mov
inc
adc
inc
pop
aam
jecxz
ret
incl
adc
cmpsb
loopne
or
adc
loope
pop
mov
addl
sbb
sbb
loopne
push
cmpsl
jg
hlt
push
xchg
pop
xchg
ljmp
or
or
in
mov
imul
push
and
push
gs
push
push
in
xor
push
ret
jge
jno
or
or
pop
in
or
adc
sub
stc
cmpsb
mov
mov
inc
loope
addl
stos
pop
adc
push
dec
mov
adc
mov
test
daa
adc
or
pop
push
fsubs
xchg
test
xchg
jecxz
stos
lods
lret
stos
and
xchg
dec
add
mov
push
add
stos
icebp
ds
mov
jmp
shll
in
test
sbb
sub
je
es
xchg
or
test
aam
sub
jl
sbb
mov
inc
mov
data16
cmp
jp
sub
xor
xchg
inc
inc
lods
cmp
sub
test
ret
pop
es
std
movsl
sbb
add
out
shll
mov
xor
roll
add
inc
dec
mov
pushf
jb
lds
stos
adc
rorl
movsl
int3
dec
inc
test
push
xor
sahf
sbb
and
jne
add
test
rorl
mov
mov
push
test
adc
or
cmpsl
ljmp
das
xor
add
or
push
jnp
andb
addr16
ljmp
dec
adc
jp
cmp
mov
sbb
cmpsb
add
mov
and
adc
mov
addl
and
push
adc
xor
mov
inc
sub
call
or
inc
and
and
loope
sub
cmp
loope
cli
sti
lock
cld
adc
sbb
stos
inc
push
inc
cmc
mov
es
cvttps2pi
sub
and
pop
test
cli
into
and
dec
add
scas
push
push
add
add
mov
dec
loop
xor
jns,pt
xchg
dec
arpl
testb
push
add
adc
loopne
scas
out
push
inc
adc
adc
pop
clc
jle
es
or
nop
mov
hlt
or
or
data16
sbb
xor
sahf
lahf
push
insb
out
outsl
push
pop
movsb
sub
push
shll
rclb
rcrl
mov
jb
push
imul
pop
pextrw
call
adc
mov
push
and
push
mov
mov
xor
jo
pop
push
sbb
mov
test
call
push
jl
push
jp
out
ror
inc
cmp
jbe
and
jmp
cs
push
pop
icebp
mov
and
pop
push
or
jl
dec
dec
int3
or
mov
mov
add
cmp
pop
aad
ror
xchg
mov
in
sahf
cmp
icebp
push
sub
movsl
enter
jmp
push
sub
mov
inc
sub
ret
xchg
add
or
xor
push
mov
out
or
pop
push
mov
addl
push
pop
add
or
sub
inc
movsl
push
dec
push
jbe
jb
mov
cs
addr16
jae
mov
push
jnp
dec
jmp
xor
rolb
jp
adc
jp
push
loopne
inc
mov
sub
subl
mov
imul
lock
push
cmpsb
mov
add
cmp
add
mov
into
or
pop
icebp
adc
inc
adc
pushf
nop
sbb
mov
pop
daa
add
sar
mov
add
inc
cmp
inc
sub
xchg
add
inc
pop
rorl
add
mov
mov
lcall
or
jmp
pop
ret
roll
into
lret
sbb
sub
pop
push
cwtl
push
vunpcklps
push
in
sbb
cmp
loope
bound
push
xchg
test
pop
mov
lds
xor
and
lahf
cmp
jle
leave
push
pop
cmp
dec
add
push
inc
xchg
jp
push
xlat
sahf
xor
sbb
jb
inc
sbb
filds
push
sbb
mov
es
out
adc
mov
pop
loop
inc
test
int3
sub
jo
lds
or
add
scas
or
cmc
rolb
mov
jp
scas
inc
adc
or
xchg
insl
addr16
pop
out
sbb
pop
sbb
sbb
add
insl
sub
cmpsb
jbe
jbe
sbb
movsb
cltd
push
push
rcl
or
push
pop
movsl
scas
push
je
dec
ljmp
jo
lock
pushf
es
test
sbb
pop
add
jmp
js
jb
push
sbb
cmp
push
in
jnp
push
lds
adc
loope
mov
rcll
lea
xchg
addl
mov
push
inc
push
or
lock
jb
adc
or
mov
xlat
sub
pop
cmp
lret
xor
sbb
aam
xchg
push
xchg
and
ret
sbb
dec
js
dec
in
or
xor
mov
adc
in
push
xchg
push
sub
fdivrl
add
out
les
setb
cmp
bound
add
mov
or
mov
outsl
lcall
push
stos
push
jo
sbb
pusha
mov
mov
outsl
adc
leave
adc
add
adc
mov
mov
loop
xchg
adc
xchg
aaa
or
lahf
pop
subl
ret
xor
inc
pop
popf
pop
cli
push
xor
add
mov
lods
orb
testb
xchg
adc
or
dec
add
ret
in
rclb
lret
repz
shll
xor
sbb
jno
dec
je
dec
icebp
dec
pop
pop
add
jno
add
jne
mov
in
mov
mov
jp
dec
faddl
sbb
and
es
dec
and
or
cltd
lods
repnz
out
cmpb
dec
xchg
enter
je
andl
lods
or
sbb
mov
add
push
or
mov
adc
xchg
clc
loop
mov
lods
rcrl
mov
sbb
lods
mov
inc
add
inc
inc
ljmp
push
mov
sar
pop
adc
push
lahf
lds
push
rolb
push
or
add
inc
je
jmp
sbb
xor
dec
test
xor
mov
rolb
push
stc
jle
push
lock
or
aad
cmpsb
jbe
adc
adc
pop
into
enter
xchg
xchg
jb
cmpsb
pop
cmp
call
xchg
mov
and
and
pop
adc
sub
andl
mov
sub
sbbl
shlb
mov
cmp
loope
ljmp
xchg
inc
jnp
aam
dec
fistl
sub
insl
adc
sub
sbb
push
movsl
dec
xlat
push
inc
sub
cmpsl
xor
cmp
cmp
inc
inc
pop
sbb
push
inc
fisttpl
or
and
mov
or
dec
push
cmp
mov
cmp
sbb
mov
add
inc
cli
xor
loope
adc
push
push
test
imul
mov
cmpsl
push
sarl
fs
aad
cmp
iret
adc
jecxz
lret
pop
jg
pop
lea
mov
push
cmp
call
jge
fldl
cltd
pop
cli
lds
add
dec
push
jmp
roll
push
and
inc
icebp
aam
adc
or
adc
fsts
push
fistpll
aad
mov
cs
push
inc
shlb
in
pushf
cmp
sysret
rorb
add
or
lds
or
int
stos
sbb
lahf
sub
int3
shrb
stos
xor
leave
lods
test
in
pop
enter
push
dec
push
es
inc
mov
push
push
rorb
xchg
sbb
mov
adcb
popa
inc
and
pushf
iret
shlb
rorb
mov
push
lret
add
sbb
sub
adc
negl
cmp
mov
orb
in
mov
sub
sti
lods
mov
jae
and
insb
jl
inc
and
add
xor
jmp
mov
add
jmp
and
xor
ret
add
je
divb
ret
pusha
pop
es
rcl
push
inc
sbb
push
dec
cmovno
gs
mov
inc
push
es
pop
les
or
cmpsl
jne
enter
adc
dec
mov
testb
lret
call
jns
push
mov
dec
hlt
jle,pt
jp
push
xor
shll
fldl
aad
or
addr16
mov
sub
test
or
push
dec
xchg
or
and
cmp
mov
sbb
mov
jb
xchg
gs
loope
hlt
test
push
push
es
inc
xchg
hlt
add
xor
adc
lods
adc
pop
sub
mov
or
nop
rcr
push
push
and
icebp
rorb
jecxz
and
mov
scas
inc
loope
add
mov
call
sub
scas
cmc
shrl
pushf
mov
out
mov
cmp
clc
pop
ficoml
xor
mov
shlb
lret
push
loope
cmp
dec
rcll
cmp
sbb
add
sahf
mov
idivb
pushf
dec
inc
insb
loopne
sahf
cli
pop
int
sub
mov
xor
push
sbb
push
jmp
addl
ret
dec
xchg
adc
push
rolb
cmp
test
pop
mov
rcll
mov
add
or
aam
pop
mov
rcrl
adc
mov
mov
ds
mov
hlt
add
push
fwait
mov
push
ljmp
jecxz
cmpb
adc
adc
daa
add
mov
pop
mov
shrl
imul
inc
xchg
mov
cli
and
sub
in
ljmp
inc
aam
mull
outsb
into
push
movsl
mov
out
in
fdivrs
js
fisttps
or
test
pop
icebp
mov
cmp
lea
ror
xor
xchg
pop
jno
enter
pop
inc
cmpsb
ror
loopne
push
test
fiadds
mov
jbe
testb
mov
dec
push
aaa
inc
push
popl
test
stos
mov
and
cmp
scas
push
enter
mov
movsl
jge
xchg
sbb
add
cmp
incl
orl
sub
xorb
aam
add
push
jo
lahf
xchg
inc
jae
aaa
out
ret
roll
inc
mov
addb
sbb
nop
mov
adc
sti
mov
pop
sbb
rcrb
or
sbb
cmp
js
push
mov
or
rclb
aas
add
mov
and
loopne
mov
jo
add
cmp
add
cmpsb
and
dec
les
or
mov
scas
inc
je
cmp
add
xor
inc
loope
jno
call
subl
pop
mov
cmp
pop
or
inc
ds
inc
orl
addr16
pop
cwtl
jno
cmp
rcrb
xor
insl
sbb
add
mov
dec
inc
mov
sbb
xchg
mov
pop
xor
out
stos
pusha
push
int
cmp
mov
les
cli
mov
adc
push
mov
sbb
xchg
insb
xchg
in
and
mov
fistps
jns
ljmp
shrb
into
mov
in
mov
mov
ss
dec
inc
adc
mov
push
popf
add
sub
adc
xchg
stos
pop
sbb
dec
or
repnz
add
cli
adc
add
ljmp
pop
push
or
in
push
sub
stos
in
sub
inc
ss
mov
ret
mov
jns
test
push
add
jecxz
pushl
push
push
xchg
popf
sarb
dec
fisubs
add
lahf
mov
ds
pop
mov
pop
je
lret
jle
imul
jae
cli
pop
loop
lret
cmp
inc
fs
and
sub
push
xchg
andb
pop
lcall
pop
push
xor
pop
adc
xor
xor
ror
data16
sub
jno
xor
cmp
pop
mov
int3
push
dec
roll
insl
adc
stos
es
dec
and
mov
out
loopne
ljmp
inc
leave
cltd
cmp
jle
and
and
push
inc
jp
roll
adc
mov
sbb
or
add
or
rorl
xchg
mov
imul
stos
mov
test
push
add
push
adc
andb
push
test
hlt
cmp
aad
xor
xor
xchg
js
mov
and
xor
lock
loopne
out
adc
inc
push
mov
jl
adc
pop
jp
cltd
popf
dec
mov
pop
inc
inc
jbe
pop
add
push
or
inc
test
std
push
lock
rcrl
adc
mov
pop
inc
popf
mov
push
test
sbb
mov
call
mul
push
push
test
shll
ret
inc
ror
in
hlt
push
popf
mov
icebp
lahf
xchg
clc
cmp
push
jnp
loope
sbb
add
mov
lcall
cltd
mov
pop
lcall
add
mov
xchg
loopne
add
sub
aam
mov
pop
ret
dec
pop
pop
in
test
or
push
pop
mov
shlb
adc
jo
or
mov
enter
sbbb
mov
pushf
sbb
cli
push
jo
xor
sbb
std
mov
sub
movl
stc
testb
stos
mov
mov
sbb
iret
lahf
aas
call
pop
sbb
push
xor
out
dec
sub
out
sbb
lahf
aas
sub
dec
imul
out
pop
call
test
cld
mov
lock
mov
and
in
xor
pop
dec
dec
pop
fs
or
jg
cld
stc
sub
sub
ljmp
aaa
add
and
aas
cld
mov
mov
lret
xor
mov
cld
stc
repz
fdivl
adcb
movsl
push
repz
lahf
aas
jg
addr16
andl
repz
int3
pushf
jbe
std
mov
adc
sarb
jbe
aas
jg
test
mov
rcll
stc
repz
divb
inc
push
mov
cmc
arpl
jg
cld
add
imul
in
pop
lahf
inc
mov
lahf
ret
mov
int
push
jo
jg
cld
stc
insb
leave
pop
in
push
ja
test
mov
xor
out
lahf
aas
shlb
sbb
pop
push
jo
jg
stc
repz
adc
test
testl
out
lahf
loope
mov
cltd
or
jo
movsl
sub
jg
cld
stc
adc
fsubr
jnp
ljmp
in
sbb
je
test
enter
xor
repnz
xor
jg
cld
stc
rcrl
dec
sub
icebp
pop
xchg
mov
stos
das
out
lahf
aas
sbb
mov
push
or
mov
mov
lret
and
lcall
lods
popf
mov
jg
add
add
jl
jmp
stc
repz
test
and
push
ss
out
es
lahf
aas
jg
test
icebp
fsubr
lcall
repz
and
fcomps
inc
roll
test
outsl
aas
jg
cld
fistps
and
out
shl
into
cmp
repz
lahf
inc
xor
mov
sarb
in
pop
pop
add
jno
lds
call
cmp
jmp
cld
stc
repz
movsl
loopne
pop
ja
and
cmc
fwait
es
dec
jae
enter
jecxz
pusha
mov
sahf
sbb
cmp
jl
cld
stc
repz
rorb
sahf
xchg
lds
iret
lahf
aas
jg
xchg
lea
or
aam
stc
repz
sub
pop
int3
imul
fisttpll
pop
imul
xor
ja
outsl
lcall
int
xor
call
loop
cli
pop
jg
rcrb
mov
or
lahf
xor
iret
lahf
aas
xchg
pop
push
dec
cli
loope
mov
and
cld
stc
repz
or
sub
mov
mov
lahf
aas
jg
push
test
mov
enter
stc
repz
ja
inc
xor
sub
nop
xor
jg
mov
arpl
aaa
mov
jo
stc
repz
flds
mov
mov
fwait
xor
xchg
aas
jg
cld
jae
xor
pop
bnd
fstpt
repz
lahf
out
add
mov
test
sti
jg
cld
stc
cmpsl
fnstsw
in
lea
cmp
iret
lahf
aas
add
mov
push
test
lret
cld
stc
repz
leave
or
xchg
faddl
wrmsr
iret
lahf
aas
jg
ret
sbb
dec
in
cmp
cld
stc
repz
lds
dec
adc
iret
stc
inc
test
xchg
cmp
call
sbb
repz
xchg
pop
lcall
pop
inc
jno
add
mov
arpl
mov
or
out
lahf
aas
rcrl
pop
scas
and
jmp
cld
stc
repz
aas
mov
mov
movl
aam
andb
lods
imul
sbb
xchg
push
jb
pushf
mov
test
popf
lahf
aas
jg
and
lea
je
rcl
mov
loopne
test
repz
adcl
mov
cmpsb
lock
scas
add
aas
jg
cld
mov
or
lods
jle
inc
idiv
pushf
sbb
popf
repz
lahf
pop
movsl
aad
mov
mov
sub
andl
or
outsb
sahf
jecxz
lahf
aas
jo
les
xcrypt-ofb
cmpsl
outsl
aas
jg
cld
cld
repz
mov
adc
xchg
cmc
int3
mov
repz
lahf
stos
or
mov
jp
aas
pop
stc
stc
dec
dec
jmp
popa
rcll
out
lahf
ss
xlat
adc
js
aaa
mov
cld
stc
or
lret
pop
jl
xor
mov
iret
lahf
aas
push
test
mov
test
cmpsb
cld
stc
repz
jbe
push
or
sub
xchg
lahf
aas
jg
scas
mov
das
mov
cmc
addr16
cmp
repz
dec
and
popa
xor
fadd
jbe
lahf
aas
jg
rol
inc
or
sbb
push
ds
fnsave
repz
imul
lock
jg
cld
push
inc
xor
push
ret
or
pop
out
cmp
out
lahf
push
outsb
dec
addr16
push
subl
jg
cld
stc
lods
sbb
or
outsl
mov
scas
popf
mov
sbb
iret
lahf
aas
pusha
pop
and
cs
cmc
inc
pop
shrb
test
inc
pop
push
outsl
sbb
ds
out
mov
aas
jg
sahf
and
sti
arpl
leave
movsb
repz
stos
cld
stc
repz
mov
es
xor
mov
lahf
aas
jg
sbb
fxch
shll
mov
out
movsb
mov
out
bound
in
jg
cld
mov
pop
or
pushf
ficomps
repz
lahf
or
shl
mov
aas
mov
cmp
jg
cld
stc
mov
mov
jg
inc
sub
sti
idiv
out
lahf
aas
pop
int3
cli
lods
mov
pusha
cld
stc
repz
jp
lret
cmpsb
pop
sbb
cmp
iret
lahf
aas
jg
sti
enter
mov
and
mov
and
insb
outsl
cmp
addr16
aas
jg
or
add
or
stos
out
loope
xchg
js
repz
mov
sbb
adc
aas
pop
stc
scas
sub
idivb
leave
mov
iret
inc
or
loop
das
push
pop
jne
stc
repz
cld
bound
loop
mov
cmp
jg
cld
push
dec
cld
aaa
mov
test
jmp
rolb
out
lahf
cli
or
les
iret
or
push
jl
xchg
pop
pop
sub
xchg
sbb
iret
lahf
aas
bound
pop
insl
add
jnp
cld
stc
repz
lock
int
mov
pop
iret
lahf
aas
jg
ja
pop
xchg
add
mov
mov
ds
stc
ret
enter
nop
and
push
cld
cld
or
cmp
add
mov
lahf
push
jo
mov
and
repz
inc
inc
adc
add
sub
jg
cld
stc
ljmp
insb
sub
or
out
out
lahf
aas
loop
bound
sbb
out
cmpsl
cld
stc
repz
mov
sbb
add
sti
jecxz
lahf
aas
jg
add
pop
jge
dec
mov
cmc
xor
cld
stc
repz
cmp
push
push
outsl
add
pop
jns
stos
dec
cmp
popf
pop
cltd
notl
and
repnz
ret
sbb
shrl
out
fs
out
lahf
push
push
test
jnp
pop
or
cld
stc
rep
dec
stos
lahf
jg
mov
adcb
in
pop
lods
jle
mov
loop
mov
pop
sub
stc
repz
stos
mov
mov
test
jg
cld
add
push
js
sbb
jne
jnp
insl
add
lahf
ds
adc
xchg
les
int
adc
jg
cld
stc
adc
mov
pushf
jo
jnp
out
lahf
aas
shrl
scas
jmp
in
cld
stc
repz
add
sbb
idivb
aas
jg
or
leave
sub
inc
pop
dec
cld
stc
repz
pop
bound
cmpsl
xchg
or
test
lahf
aas
jg
fstl
xor
mov
decl
repz
dec
sbb
inc
or
in
aas
jg
cld
add
cmp
add
int
enter
xchg
fcomi
out
lahf
mov
inc
lcall
jg
cld
stc
adc
mov
add
jmp
mov
lret
pop
out
lahf
aas
addr16
cmpxchg
test
xor
stc
repz
push
mov
adc
outsb
lods
stc
iret
lahf
aas
jg
fisubl
mov
mov
cmp
cld
stc
repz
in
popf
jno
out
outsl
adc
lahf
aas
jg
hlt
sub
mov
mov
insl
stc
repz
push
mov
repz
cld
dec
push
adc
ljmp
hlt
in
lahf
cmp
jns
push
outsb
jle
xchg
out
lahf
jg
bound
add
or
repz
or
push
stc
repz
jbe
lret
xchg
lahf
jnp
sub
lahf
aas
jg
out
jecxz
dec
add
fs
lret
add
insl
out
stc
repz
sub
mov
pop
sub
aas
jg
cld
jp
push
fsubp
jmp
adc
mov
lahf
test
lods
and
cli
jl
cld
stc
data16
sti
inc
hlt
jl
repz
mov
xchg
lahf
aas
pop
lcall
rcll
pop
stc
repz
sub
hlt
dec
xbegin
push
inc
fwait
aas
jg
cld
xor
stc
and
ss
xor
push
repz
lahf
movsb
or
cwtl
or
or
aaa
cmp
jg
cld
stc
ret
jbe
and
xor
inc
pop
scas
mov
sub
iret
lahf
aas
jo
pop
loope
shr
pop
mov
cld
stc
repz
fwait
jecxz
pop
movsb
xor
mov
aas
jg
add
daa
jne
sub
sbb
ret
nop
mov
stc
repz
jge,pn
shrb
and
mov
in
in
jg
lahf
aas
jg
ss
imul
lock
sub
iret
pop
cld
dec
mov
ljmp
adc
cld
pusha
cld
testl
pop
mov
lahf
out
adc
andb
inc
nop
jp
mov
daa
je
sub
add
cs
jbe
cld
push
pop
out
lahf
aas
test
cmpsb
mov
or
pop
xchg
scas
pop
cld
stc
repz
dec
add
jmp
mov
push
fldl
mov
shlb
int3
fwait
mov
stc
repz
sub
pop
out
neg
lods
sti
jno
iret
lahf
cld
adc
cld
mov
js
cld
stc
repz
loope
int
pop
fidivl
ljmp
jle
leave
jb
mov
pushf
fldenv
cld
stc
repz
mov
mov
ljmp
inc
sbb
jo
in
cld
stc
repz
cli
dec
sub
cmpsl
popf
or
rclb
jbe
lahf
aas
jg
cmp
pop
mov
faddp
rolb
xor
jle
nop
lahf
aas
jg
scas
scas
add
into
les
pop
loope
mov
repz
jmp
test
mov
ficompl
xchg
aas
jg
cld
sbb
movl
mov
and
out
lahf
fldcw
sub
test
fidivrs
cmpl
cwtl
sub
add
mov
out
lahf
aas
clc
cmpsl
mov
lret
std
dec
cld
stc
rep
pusha
pop
push
jmp
push
push
adc
lahf
aas
jg
xchg
or
movsb
xlat
stc
cld
stc
repz
add
sbb
sub
es
sbb
lahf
aas
jg
add
mov
mov
fdivrp
repz
dec
cwtl
cmc
xchg
bound
setge
movsb
xor
aas
jg
cld
jnp
xor
call
ret
leave
iret
lahf
dec
mov
in
inc
outsb
fdivl
out
dec
insb
mov
inc
adc
sub
lahf
aas
cmp
push
mov
and
adc
repnz
rcrb
ret
into
aas
jg
mov
testb
push
outsb
fidivrl
iret
lahf
xor
test
clc
ret
cld
push
jg
cld
stc
pop
fwait
mov
js
cld
adc
insb
in
add
iret
lahf
aas
mov
or
or
dec
push
shl
cld
stc
repz
sarl
jecxz
sbb
stos
iret
lahf
aas
jg
in
hlt
pusha
sbb
ror
rorl
and
stc
repz
icebp
fs
subl
aad
out
xor
jl
mov
je
pop
sti
jg
lret
inc
repz
lahf
pop
push
lock
push
jecxz
jg
cld
stc
mov
sub
ss
loope
add
repz
pop
and
xor
shr
arpl
ss
pop
mov
add
cmpsb
adc
repz
adc
dec
jge
xchg
add
xchg
sub
jle
cld
add
xchg
shrl
cltd
es
scas
adc
dec
cld
stc
pause
mov
inc
and
cmp
push
in
out
aas
jg
cmpsb
test
in
shlb
inc
leave
cld
stc
repz
sbbb
adc
fwait
and
lahf
aas
jg
insb
mov
mov
dec
cld
stc
repz
out
ss
pop
cmpsl
push
movsl
mov
decb
cmpsb
sbb
mov
sar
repz
jae
and
mov
adc
cld
icebp
sbb
addr16
inc
stc
sbb
icebp
scas
les
push
push
stos
and
repz
stc
push
pop
data16
dec
out
jg
cld
shlb
call
mov
push
jns
or
lahf
inc
pop
movsb
unpckhps
mov
cld
stc
xchg
xor
pop
loop
adc
push
inc
aas
mov
aas
xorl
fiadds
iret
ja
in
out
lahf
insb
xor
jae
int
or
testb
and
cmp
adc
lahf
aas
cmpsl
cs
sub
mov
rclb
cld
stos
mov
rcrl
insl
add
jg
push
mov
push
sbb
inc
xlat
mov
jg
repz
faddp
clc
push
out
mov
out
mov
lahf
repz
pop
int
pop
test
push
xor
idivb
jg
cmp
int3
inc
jmp
lret
and
jge
cwtl
iret
lahf
lea
xchg
dec
or
add
loop
aas
jg
cmp
and
cmp
loop
add
fld
repz
lahf
push
mov
pop
jnp
test
jg
cld
stc
xlat
iret
dec
xor
sbbb
imul
xchg
iret
lahf
aas
xchg
inc
stos
push
cmp
loope
push
push
lods
mov
out
jno
sbb
sbb
and
repz
lahf
mov
cld
aam
cmpsb
mov
cld
stc
jnp
xor
sbb
stos
in
in
test
leavew
jecxz
iret
lahf
aas
fstl
cli
mov
jle
cmp
fdivrs
sbb
dec
scas
mov
mov
mov
xor
out
lahf
aas
lahf
mov
push
lds
pop
push
sti
out
push
stc
stc
repz
sti
inc
enter
lcall
mov
sub
mov
cmc
mov
or
add
aaa
outsl
setle
mov
test
lea
test
out
cwtl
mov
inc
aam
and
fcompl
xor
cmc
xor
sbb
call
out
pop
addb
xlat
adc
movhps
jo
aaa
outsl
fidivrs
notb
popa
push
inc
stos
sbb
sub
inc
sbb
pop
mov
sub
jg
cld
stc
mov
inc
mov
cmp
fadds
lahf
aas
sbbl
pop
rep
pop
lahf
aas
jne
aad
insl
xchg
lcall
repz
dec
push
imul
int3
adc
xchg
fnstsw
jg
cld
add
pushf
aam
push
mov
les
test
fcomps
iret
lahf
out
mov
nop
sbb
fisubs
jg
cld
stc
dec
testl
hlt
xor
jbe
xlat
xchg
aas
scas
jb
push
jmp
sarb
cld
sbb
scas
into
xchg
pop
and
fs
js
stc
repz
mov
and
ja
outsl
fwait
jo
aas
jg
int3
adc
xchg
stc
repz
xchg
sbb
lea
fiadds
aas
jg
cld
pop
in
pop
cmp
dec
jp
das
call
pop
repz
lahf
mov
aad
hlt
into
cmp
xchg
cld
stc
or
sbb
mov
popa
ror
xorb
xor
fpatan
xchg
lahf
aas
add
in
adc
insb
jg
cld
stc
loope
add
leave
repz
in
fs
jns
push
lret
lahf
aas
mov
mov
cld
stc
repz
cltd
popa
out
ret
add
inc
sbb
aas
jg
dec
movsl
bound
jp
rorb
repz
cmp
outsb
je
dec
adc
adc
aas
jg
fwait
das
lahf
fcmovnb
mov
popl
pop
xchg
xchg
stc
repz
fucomp
insl
ret
pop
pushf
mov
or
pop
in
jg
cld
cmp
stc
ret
fstpt
repz
lahf
std
insb
cwtl
sub
stc
iret
fcomi
sub
pop
lret
inc
cld
stc
inc
push
ret
add
or
add
mov
icebp
sub
outsl
ficomps
sub
out
pop
dec
cli
out
cmpsb
rorb
jns
out
shrl
stos
inc
int3
cltd
lds
mov
push
fnstcw
leave
adc
fwait
outsl
lock
hlt
in
divb
xlat
cli
les
dec
shrl
inc
jle
push
mov
aam
roll
or
sbb
insl
cmp
add
mov
clc
adc
lret
aaa
imul
repz
fwait
mov
mov
bound
adc
pop
push
mov
lcall
aaa
outsl
fidivrs
jecxz
pop
mov
or
repz
fwait
mov
adc
test
fidivrs
aad
xchg
mov
sahf
xor
insb
aam
aaa
cmp
cmpsl
lret
ret
dec
jle
mov
out
mov
push
out
fwait
aaa
out
sub
mov
push
and
pusha
icebp
rorl
push
out
ret
ja
out
add
cmp
call
xchg
mov
cld
stc
out
xor
mul
clc
and
repz
pop
cmpsb
ljmp
enter
cld
stc
lods
sub
rclb
stos
sbb
ja
cmp
jp
out
lahf
aas
xchg
push
in
jle
pop
mov
cld
cmp
adc
push
clc
aad
outsb
and
iret
mov
mov
sub
dec
and
cld
stc
repz
out
push
mov
mov
jle
scas
xchg
mov
jg
mov
js
xor
cld
stc
repz
or
mov
fbld
inc
push
and
jg
in
cld
mov
cmp
xchg
aas
jmp
sti
daa
scas
jae
cli
aas
jg
shlb
inc
and
cltd
mov
enter
dec
jle
sbb
add
stc
repz
aas
push
loopne
fidivl
lds
lea
cltd
xlat
aas
jg
cld
loope
push
scas
fdiv
inc
or
push
inc
sar
clc
cld
loope
lahf
cltd
xor
push
fpatan
pop
iret
mov
cmp
pushf
xchg
aam
loop
xchg
cmp
aaa
shl
xlat
test
fs
mov
add
mov
sub
lret
inc
mov
outsl
fisubs
add
mov
imul
scas
push
jae
out
mov
shrl
cs
les
fiadds
mov
sbb
in
or
jns
mov
mov
repz
xchg
lahf
aas
jg
sahf
push
inc
or
decb
cld
mov
js
arpl
xchg
shrb
imulb
aas
jg
rorb
test
stc
inc
mov
push
or
pop
ss
mov
cld
push
xchg
imul
repnz
repz
lahf
mov
lret
out
out
out
inc
jg
cld
stc
insl
ja
jbe
sbb
test
aas
xchg
scas
pop
ret
aaa
adc
pop
ljmp
cli
dec
cmp
das
dec
push
cld
stc
pop
jg
sbb
lahf
test
test
test
aas
jg
jmp
dec
cld
dec
xchg
jge
or
push
adc
push
ljmp
inc
rclb
decb
stos
addr16
icebp
dec
lahf
bound
sahf
lods
dec
daa
aas
jg
clc
in
movb
sbb
ljmp
inc
and
xchg
inc
js
jle
fmul
pop
stc
repz
mov
lret
pop
xchg
push
in
jg
cld
cmp
nop
or
out
lahf
or
sbb
or
test
fs
jg
jl
repnz
outsl
decb
xlat
addr16
lahf
jmp
dec
pop
mov
lods
sub
cltd
imull
xor
inc
cmp
fwait
inc
pop
mov
aaa
mov
cld
sti
shl
stos
add
mov
sbb
repz
lahf
dec
in
in
test
jp
cmp
push
jle
cld
stc
xlat
in
sbb
mov
mov
jg
mov
sarb
cld
ret
in
gs
movsb
or
xchg
mov
popa
dec
out
outsl
fidivrs
pusha
in
mov
aas
mov
movsl
jmp
leave
out
fwait
aaa
test
clc
shrb
nop
das
test
push
jle
xor
ljmp
dec
int
aaa
outsl
adc
mov
add
shll
push
incl
mov
jle
add
mov
inc
cmc
lea
out
mov
mov
ficoms
aad
aas
jg
stc
cmp
bnd
popa
cmp
lods
add
inc
push
iret
lahf
jge
fstps
inc
or
add
jg
push
inc
jg
push
inc
insb
faddl
mov
mov
stc
repz
or
mov
ret
push
xchg
mov
inc
cmc
lahf
aas
jg
xlat
ret
cmp
mov
jbe
lret
mov
out
and
or
jae
les
aas
jg
cld
ficomps
mov
pop
orl
jns
enter
jge
fisubrl
add
enter
fdivl
imul
popl
adc
sub
jg
aaa
outsl
fidivrs
cmp
or
repz
fwait
push
xor
clc
imul
fidivrs
hlt
sub
hlt
test
pop
movsl
xchg
out
fwait
aaa
xchg
lods
mov
cmpsl
pop
rorb
fidivrs
xchg
inc
mov
addr16
sbb
xor
xchg
aaa
outsl
mov
and
mov
sbb
std
add
loopne
push
dec
arpl
mov
sub
enter
inc
ret
sbb
mov
dec
jo
pop
icebp
add
outsl
fidivrs
es
mov
rcrb
mov
int
aaa
int3
dec
pop
insb
push
or
js
loopne
out
mov
sub
popa
sbb
pop
ljmp
and
pop
movsl
adc
mov
jecxz
xchg
or
cmp
stc
movsb
mov
xor
out
insb
push
mov
push
test
jns
out
lods
fildl
xchg
mov
repz
jp
insb
fidivrs
fs
push
or
repz
mov
push
test
adc
cld
cld
stc
std
ror
adc
call
lock
fdiv
out
lahf
ret
dec
or
xor
sub
xchg
cld
stc
into
ficoml
aaa
iret
inc
add
out
lahf
aas
mov
fildl
inc
lret
stc
mov
dec
cld
stc
repz
fldl
mov
popf
scas
sub
lahf
aas
jg
es
mov
jbe
push
fwait
inc
jl
out
mov
inc
iret
sub
lods
and
mov
adc
pop
cli
fwait
arpl
out
leave
lahf
inc
clc
mov
push
inc
fiadds
inc
jg
jl
aad
fistpll
in
sub
cmp
testb
lahf
aas
test
mov
inc
fwait
xor
jge
and
cld
stc
repz
push
inc
mov
push
pop
xchg
cmpl
lahf
aas
jg
cld
test
test
mov
cmpsl
out
cld
stc
repz
cmp
hlt
dec
in
into
adc
mov
ss
and
dec
je
xchg
push
data16
repz
push
cmc
iret
jne
movsb
adc
mov
scas
lahf
inc
cld
subb
mov
or
shlb
iret
dec
cld
out
ss
fstl
cld
inc
or
into
je
push
and
and
mov
jb
arpl
fwait
aaa
outsl
ud0
aas
ret
and
pop
add
out
movsl
mov
fdivl
fxtract
lcall
sub
lcall
or
jg
dec
rorl
rorl
iret
lahf
subb
jmp
int
aaa
les
pop
ret
xchg
mov
in
jl
pop
sub
mov
cld
insl
xlat
inc
push
lahf
mov
fidivs
or
adc
outsl
mov
xlat
insl
mov
enter
push
out
jne
out
or
aaa
outsl
fidivrs
jno
repz
lods
inc
movswl
out
dec
lcall
pop
int
cld
stc
repz
dec
mov
loopne
mov
cwtl
mulb
or
aas
push
arpl
or
push
xchg
push
lods
sbb
out
and
pop
subb
in
jge
nop
fsubrl
lahf
aas
jg
sbb
mov
ds
inc
stc
repz
xchg
fsub
jp
into
or
push
push
cmp
add
jg
cld
mov
icebp
mov
lods
push
xchg
jbe
out
daa
lahf
int3
pop
add
scas
push
push
xchg
jg
cld
stc
hlt
adc
adc
xchg
add
mov
jmp
out
lahf
aas
subb
xorb
cwtl
pusha
cld
mov
xor
mov
push
lahf
aas
jg
das
xor
testl
jno
stc
repz
cmp
push
sarb
enter
mov
jg
cld
jnp
jmp
inc
jg
push
loope
sub
ljmp
adc
fs
mov
cld
stc
in
pop
push
ret
inc
int
pop
mov
out
and
push
mov
xor
cld
stc
xchg
lret
sbbb
pop
cmp
mov
lahf
aas
cmp
xchg
call
add
sbb
repz
ret
loop
sbb
adc
aas
loope
aaa
outsl
fidivrs
test
mov
outsb
pop
aad
out
fwait
out
out
xor
mov
xlat
or
fidivrs
sub
and
mov
push
sti
int
aaa
outsl
rcrl
xor
popf
mov
mov
mov
xchg
cs
dec
jo
scas
nop
movsb
and
repz
ret
mov
inc
outsb
fisubrs
jmp
inc
cmpl
stc
xchg
jno
stc
add
lahf
jg
cld
stc
fwait
mov
inc
std
aad
out
das
adc
fwait
pop
pop
xchg
aas
outsl
test
push
jg
cld
stc
inc
or
scas
es
inc
jl
xchg
cmpsl
shl
iret
lahf
aas
repz
stos
nop
icebp
mov
outsb
push
imul
cld
stc
repz
int
cwtl
sub
mov
mov
hlt
sbb
mov
iret
dec
xchg
leave
unpcklps
mov
in
out
cmp
mov
xchg
mov
js
fidivrs
mov
sub
mov
dec
int
aaa
outsl
adc
icebp
sub
fdiv
xorl
loope
fwait
mov
mov
dec
stc
je
mov
aaa
outsl
fdivrp
mov
jb
sbb
pop
jns
out
aas
mov
and
in
popa
jnp
test
mov
adc
data16
dec
or
adc
outsl
stos
clc
shrd
mov
or
jge
cmp
outsb
outsl
fidivrs
shrl
xchg
mov
roll
jmp
ret
repz
pop
cmp
repz
js
ss
jge
sti
dec
xchg
push
shll
fiadds
pop
dec
add
mov
imul
repz
fwait
jecxz
arpl
sub
xor
mov
xor
push
mov
inc
outsl
cld
test
adc
bound
bound
iret
lahf
aas
jg
dec
hlt
pop
repz
insl
cld
sar
stc
repz
jge
insl
and
into
jle
xchg
jmp
cmp
mov
pop
popf
cmpsl
popa
pop
mov
push
iret
lahf
jg
sti
mov
mov
xor
stc
repz
push
pop
call
dec
fimuls
jp
fs
lahf
aas
jg
call
xchg
loopne
sbb
aaa
mov
aaa
popf
jne
popf
xchg
inc
insb
stos
fidivrs
loopne
pop
inc
popa
xchg
shr
inc
jnp
add
fwait
aaa
outsl
test
shld
notrack
jb
push
cmpsl
cmp
and
or
inc
cli
scas
mov
pop
jmp
outsl
fidivrs
fisubrl
ret
lea
fistpll
fwait
mov
adc
mov
jo
fisttpl
push
jge
xchg
mov
ja
mov
sbb
std
je
pop
push
outsl
fidivrs
fcoms
cmpb
iret
out
fwait
aaa
xorl
cmpsb
adc
push
je
fidivrs
cmpb
mov
imul
aaa
outsl
push
movsl
fildl
xchg
pcmpeqd
fsubrl
repnz
xor
out
fstpl
shll
pop
hlt
push
aaa
jg
cld
stc
jne
andl
test
cmp
lock
sub
sahf
mov
cwtl
loop
jg
cld
stc
arpl
cmc
sub
loop
mov
xchg
out
lahf
aas
test
and
sbb
cld
stc
repz
mov
pop
call
das
scas
inc
iret
lahf
aas
jg
aas
and
hlt
fwait
and
stc
repz
aas
sub
mov
xchg
adc
lea
out
lahf
aas
jg
dec
xor
enter
bnd
mov
repz
xchg
adcl
mov
cmp
xchg
lcall
jge
pop
xchg
push
adc
mov
jg
push
mov
fwait
aaa
outsl
ficoms
test
xchg
cmp
movsl
lret
lahf
push
js
loop,pn
iret
push
mov
insb
fidivrs
stos
xchg
xor
cwtl
inc
cli
push
shll
out
orb
mov
cmp
outsl
or
sub
jns
rorb
cmp
jecxz
rcrb
out
lahf
aas
jg
xlat
adc
or
fisttps
mov
out
xorl
inc
std
fsubl
lds
jg
cld
xchg
and
jae
imul
repz
jmp
cmp
nop
xor
xor
jg
cld
cltd
sahf
popf
sti
test
fs
inc
aas
pop
and
out
lahf
mov
ljmp
gs
cld
stc
ret
dec
lock
icebp
shrb
xchg
push
stc
and
out
lahf
aas
mov
in
dec
js
jbe
xor
cld
stc
repz
loopne
pop
mov
arpl
repnz
lahf
aas
jg
ret
mov
je
mov
clc
leave
das
mov
shrb
mov
and
repz
mov
mov
xlat
cmp
sbb
outsl
fiadds
dec
lds
mov
jb
out
adc
outsb
xchg
ficoml
imul
push
mov
add
imul
fwait
aaa
outsl
fisubrs
pop
je
call
cmpsb
loope
or
out
xor
mov
dec
push
lods
inc
pop
aaa
outsl
fidivrs
movsl
aam
adc
out
fwait
ds
xchg
movsl
push
pop
xchg
sbb
inc
jae
fidivrs
xchg
push
cmp
jnp
movhps
int
aaa
stos
adc
aam
add
stos
fidivrs
gs
gs
mov
arpl
bswap
fwait
aaa
outsl
inc
out
mov
jne
jmp
call
js
jns
push
push
sti
repz
mov
in
xor
jns
popf
notl
test
stc
xor
lods
in
cmp
lds
test
dec
out
lahf
aas
mov
fimull
je
cld
stc
repz
cwtl
jo
and
xor
into
mov
pop
iret
lahf
aas
jg
shll
xchg
jb
scas
sub
in
in
out
mov
mov
int
mov
out
xor
add
cmp
and
and
xchg
xchg
iret
lahf
aas
jge
leave
dec
pop
push
pop
xchg
fstl
cld
stc
repz
sub
jo
scas
out
mov
add
and
mov
ljmp
loopne
aas
jg
cld
mov
ja
jg
cmp
inc
out
repz
lahf
pop
xor
jno
inc
fstpl
data16
stc
lcall
sbb
enter
das
leave
push
test
das
cld
jns
push
cli
stos
in
jbe
sub
bound
cmp
aaa
outsl
fidivrs
sti
mul
ret
mov
and
lds
bound
fidivrs
lea
sbb
movsl
sub
int
aaa
outsl
out
repnz
ljmp
sub
push
add
mov
sub
fisubrs
and
jb
push
xor
jge
cltd
dec
jns
out
jbe
nop
test
sub
enter
aaa
outsl
fidivrs
adcb
xchg
and
ljmp
fs
jns
ljmp
in
and
dec
sub
rcll
or
sbb
repz
fbld
sub
lcall
aaa
aaa
outsl
fidivrs
or
ret
cmp
out
fwait
ja
sbb
cmp
push
mov
rclb
outsl
fidivrs
pop
mov
adc
scas
or
nop
dec
or
inc
lahf
int
dec
jl
repz
xor
hlt
cmc
mov
mov
repz
decl
leave
inc
mov
lahf
aaa
out
and
int3
mov
sub
iret
repz
fwait
jbe
ljmp
out
loope
jne
inc
sbb
and
sbb
push
and
rorl
sub
fidivrs
add
sbb
and
out
lahf
mov
xor
or
out
repnz
cld
stc
cmp
add
xchg
push
sub
lcall
iret
lahf
aas
dec
cmp
push
and
rcrl
push
mov
loopne
ja
or
pop
outsb
fidivrs
inc
sub
adc
es
push
or
mov
das
sbb
in
sbb
mov
fdivrs
jg
jne
call
cmpsb
fldt
cwtl
mov
out
lahf
jno
and
inc
sbb
pusha
rorl
sti
cmp
cld
stc
jg
fldt
jbe
inc
daa
cli
rolb
iret
lahf
aas
mov
cmpsl
sbb
ss
cld
stc
repz
movl
rorb
add
inc
iret
lahf
aas
jg
mov
pop
lret
xchg
cmp
stc
repz
call
in
dec
cld
sbb
xchg
mov
lahf
aas
jg
sub
push
out
pusha
xor
pop
xchg
jnp
sub
in
iret
mov
imul
push
in
in
out
inc
sub
outsl
sarb
pop
in
cmp
pop
mov
iret
jg
fidivrs
push
push
test
shll
fwait
aaa
outsl
lea
cltd
notl
pushf
add
mov
jmp
pop
rcrb
mov
es
movsb
addb
gs
lret
cmpsl
jge
push
mov
inc
outsl
jmp
cmpsb
les
lahf
out
fwait
aaa
xchg
ret
mov
aaa
test
mov
sub
shll
repz
fwait
aaa
outsl
mov
addr16
and
jns
out
xlat
lahf
cwtl
fst
out
jbe
xchg
das
add
pop
pop
pop
and
aaa
fisttpll
stc
repz
call
jmp
pop
pop
push
push
xchg
inc
mov
inc
jle
mov
mov
mov
xchg
js
jns
out
test
jl
mov
out
add
repz
notl
xor
dec
jmp
enter
stc
clc
shlb
shl
push
mov
and
repz
lahf
ljmp
out
cmp
fisubrl
stc
inc
mov
aas
add
ja
das
pusha
cs
out
lahf
aas
and
cmpsb
loop
cwtl
das
sbbb
cld
stc
repz
popf
or
ds
negb
imul
cld
in
iret
lahf
aas
jg
jne
mov
ds
inc
jmp
repnz
ret
js
jbe
mov
lahf
dec
push
cmpsl
popa
and
lcall
mov
mov
loopne
ret
push
rorb
lahf
aas
jg
insw
xchg
or
jle
in
idiv
cld
stc
repz
or
sbb
mov
or
lahf
aas
jg
imulb
jl
leave
and
xchg
sub
iret
mov
jns
fldl
lcall
repnz
nop
fmuls
pusha
setno
outsl
fimuls
lret
jmp
daa
int
aaa
out
ja
es
mov
pop
and
pop
mov
jns
call
mov
ror
jne
int3
fwait
aaa
outsl
ficoms
std
inc
lahf
into
aas
lret
fs
int
fwait
hlt
lock
out
ljmp
fwait
xor
cmpsb
jo
pop
out
stos
ds
dec
mov
pop
pushf
mov
out
fwait
aaa
sahf
lret
insl
cs
cltd
mov
repz
inc
or
and
sti
fidivrl
fwait
aaa
outsl
fidivs
push
push
out
scas
in
xor
push
xchg
int3
data16
xchg
out
mov
outsl
fidivrs
xor
adc
aas
movsl
sub
dec
loop
fwait
aaa
loope
cmp
in
xchg
sub
out
fwait
xor
lds
xor
pop
xchg
insb
fidivrs
mov
enter
nop
cld
orl
push
cmp
out
lahf
aas
jg
and
adc
test
sub
out
es
pop
adc
mov
loopne
das
popa
fcomip
out
hlt
out
or
scas
push
nop
lds
or
mov
dec
cmp
cmp
mov
out
fwait
aaa
andl
fpatan
fld
xchg
mov
dec
shrl
negb
testl
outsl
aad
test
inc
call
out
cmp
mov
enter
in
mov
repz
in
push
jb
stos
mov
out
add
pop
outsb
sub
push
lahf
dec
or
inc
repz
fwait
pop
out
stos
inc
and
mov
or
and
repz
js
add
insl
out
lods
lahf
pusha
jae
leave
outsb
fidivrs
lods
push
bound
adc
cld
add
sbb
aaa
adc
fidivrs
inc
mov
and
test
xlat
xchg
into
es
out
or
mov
loope
and
jmp
loop
fwait
aaa
adc
scas
sbb
fstl
into
scas
loopne
sbb
and
jns
pop
mov
xchg
sbb
xor
push
pushf
sub
xchg
fwait
aaa
outsl
mov
xchg
dec
and
das
pop
sbb
int
loop
into
outsb
ud0
push
cmp
clc
enter
mov
ss
scas
out
sbb
cmp
arpl
push
cld
cld
stc
repz
fimuls
and
pop
adcl
xor
out
sub
jl
xchg
cli
sub
stc
cmp
xor
outsl
ficoms
sbb
xor
fcomp
aaa
xor
sti
dec
les
js
xchg
adc
in
cmp
movsl
dec
dec
cmp
repz
jge
pop
aas
lret
leave
sub
push
sub
cld
stc
stos
inc
push
loop
nop
fisttpl
mov
fadd
das
xor
iret
lahf
aas
cmc
mov
and
inc
iret
stos
cld
stc
repz
js
loopne
sbb
push
into
sub
mov
dec
xor
aad
jle
mov
iret
iret
lcall
lock
add
mov
outsb
fidivrs
add
cmp
arpl
sbb
sub
inc
pop
stos
std
xor
pusha
jnp
out
fwait
mov
adc
stc
sbb
push
iret
mov
arpl
lret
repnz
push
aaa
outsl
fidivrs
fs
cltd
jne
pop
cmc
enter
pop
ret
add
sbb
aaa
or
fidivrs
popa
jno
mov
mov
add
mov
lods
xchg
push
addb
jns
out
aad
mov
hlt
sub
insb
fisubs
mov
js
aas
pop
aas
jg
cld
xchg
or
dec
cmp
mov
mov
stc
repz
lahf
sbb
pusha
cmp
and
jg
push
stc
mov
dec
sub
xchg
lahf
aas
movsb
insl
test
dec
mull
pop
push
jmp
sub
aaa
movsl
mov
ja
stos
inc
test
mov
jo
ja
aaa
outsl
fidivs
cld
fisubs
mov
jns
out
add
xlat
ret
fisttps
movsl
aas
outsl
fidivrs
push
dec
xchg
jns
mov
int
aaa
les
add
std
dec
fidivrs
leave
sub
out
stc
sarb
int
aaa
outsl
fcmovu
call
mov
jns
out
pop
mov
adc
idivl
aad
mov
or
fs
int3
mov
out
in
mov
lds
cmc
outsl
jle
mov
pop
xchg
or
jns
push
out
fwait
aaa
adc
aaa
mov
nop
cmp
mov
mov
pop
loope
adc
add
leave
cmp
aaa
outsl
mov
xchg
test
outsl
cmp
jns
out
cmp
sub
sbb
push
sub
push
test
push
sub
mov
mov
rcrb
out
mov
dec
sahf
jnp
test
mov
mov
fidivrs
popf
aam
mov
cld
mov
and
cmp
cmp
movsb
push
ja
cwtl
int
jnp
dec
aam
loope
pop
inc
fcompl
cmp
mov
aam
les
dec
repz
jle
int
aaa
outsl
cli
push
jge
sub
xchg
lret
mov
add
adc
call
mov
cld
nop
std
push
ja
out
out
pop
mov
fisubrs
xor
inc
ret
stc
repz
and
xchg
cmp
mov
out
and
push
xor
test
stc
pop
outsl
mov
cld
inc
lea
dec
jg,pt
adc
movsb
sbb
in
fimull
push
pop
xchg
push
testl
add
aaa
std
fucomp
push
call
fwait
aaa
lods
clc
cmpsb
adc
mov
movsl
lds
repz
sub
and
inc
lods
jge
push
add
stc
push
xchg
arpl
push
into
and
push
and
adc
sti
call
popf
xchg
jns
scas
loopne
jne
xchg
aad
sbb
hlt
add
outsl
fidivrs
cmp
je
in
mov
xchg
dec
lock
int
or
pop
test
jl
xchg
inc
xchg
daa
out
lahf
aas
outsl
and
mov
cmpsb
cld
cld
stc
repz
inc
cmpsl
repz
mov
jbe
fwait
aaa
inc
lahf
cmc
jns
daa
out
jns
cltd
dec
call
xlat
popf
mov
pop
shlb
jns
aaa
outsl
fidivrs
pop
sbb
mov
clc
aaa
out
test
movsl
mov
sbb
jns
lret
aaa
fidivs
outsl
mov
in
pushl
mov
jo
int
int3
shr
push
pop
leave
movsl
jo
loop
jns
jns
out
out
push
dec
stos
sub
es
mov
mov
mov
mov
adc
out
fwait
ja
pop
cmpsl
pop
pop
lds
xchg
dec
mov
sub
lods
pop
push
xor
lds
in
lahf
aas
lds
mov
mov
pusha
push
jbe
std
xor
ds
adc
sarb
test
xchg
aaa
movsl
jno
inc
into
data16
int
ljmp
pushf
sbbl
mov
adc
pop
mov
loope
sbb
dec
mov
cld
scas
lret
out
lahf
aas
xchg
pop
sbb
mov
lds
repnz
popf
jmp
xor
lahf
jg
daa
and
leave
jo
gs
repz
ja
xlat
xor
sub
mul
push
adc
insl
test
fidivrs
pusha
push
mov
lahf
stos
cmpsb
ljmp
mov
pop
pop
fidivrs
lahf
xlat
sub
adc
pop
int3
xchg
xlat
outsl
cmpsb
sbb
aas
aaa
outsl
fstl
lea
adc
je
cld
stc
loop
pop
fnstcw
int3
stos
and
mov
xchg
lahf
aas
jg
mov
adc
ds
out
loopne
push
add
outsb
fsubl
aaa
outsl
fidivs
inc
adc
jo
jo
lret
jb
out
xchg
sahf
pop
aas
std
inc
jle
pop
inc
clc
and
aas
jg
cmp
mov
sub
jae
loopne
out
sub
out
lahf
add
js
lea
lahf
aad
cwtl
lahf
cld
cld
stc
sub
sub
push
gs
pop
jmp
aaa
outsl
fiadds
addr16
dec
fcmovnu
dec
dec
repz
fwait
gs
add
inc
fdivrl
imul
mov
xlat
test
fbld
push
inc
mov
les
out
test
xchg
xor
loope
xchg
out
fwait
mov
dec
mov
out
mov
cmpsl
mulps
jp
movsb
lahf
push
and
or
add
sub
test
push
aad
stc
ret
inc
inc
mov
mov
hlt
lahf
aas
jg
inc
push
cmp
inc
les
pushf
fcmovb
test
leave
out
push
xor
jmp
gs
sub
aas
mov
mov
push
insb
sahf
loop
stc
repz
incl
jno
mov
dec
xchg
mov
fwait
cwtl
cmp
lds
test
push
push
pop
cmc
fs
loope
repz
sti
test
fincstp
xor
test
fidivrs
adc
inc
aaa
aad
fwait
mov
pop
call
sub
xchg
xor
outsl
fidivrs
mov
cs
mov
out
fwait
aaa
inc
out
sbb
xlat
cmp
mov
pop
and
or
dec
leave
js
aaa
outsl
ficoms
add
dec
fildl
push
jns
out
out
negl
xor
fs
sbb
outsl
fidivrs
fldt
jle
pop
loop
adc
pop
out
cmpl
lcall
jns
out
inc
shrb
and
adc
int3
aaa
outsl
fidivrs
cmp
sbb
lock
movsl
lret
mov
repz
fwait
xor
or
push
or
push
push
cmp
fidivrs
movsb
cmc
inc
inc
inc
rcrb
icebp
push
mov
jmp
pinsrw
fs
scas
mov
cwtl
out
lods
mov
or
mov
aaa
outsl
fidivs
jnp
test
jmp
mov
repz
add
call
mov
in
pop
aaa
outsl
fidivrs
mov
pop
or
xor
aad
inc
data16
out
iret
lahf
aas
cmc
in
out
ja
cmp
xorl
pop
cld
stc
repz
adc
push
and
clc
pop
mov
cmp
jg
insb
popa
mov
hlt
dec
adc
push
stc
repz
mov
jbe
mov
inc
push
add
cld
mov
lds
adc
and
cmovp
pop
xchg
jg
clc
add
int
fldcw
adc
insb
fidivrs
icebp
movsb
mov
sub
sub
cmpsl
int3
jg
adc
out
cld
stc
ret
adc
push
pop
push
dec
sub
and
mov
push
pop
add
arpl
dec
lock
iret
jecxz
mov
xchg
and
jns
out
dec
mov
mov
inc
test
xchg
aaa
outsl
fidivs
sti
out
ss
arpl
sahf
aas
jg
rorb
lea
into
movsb
sbb
out
lahf
imul
xlat
bound
pop
inc
jg
cld
stc
cmc
mov
inc
cmc
js
test
add
repz
rcr
mov
lahf
jg
repz
jp
sfence
dec
mov
in
mov
ljmp
jbe
pop
shl
cmp
xchg
jg
scas
sbbb
cld
stc
repz
fwait
loopne
cmp
inc
or
or
jg
bound
mov
gs
cld
stc
repz
das
mov
or
push
inc
push
xchg
xchg
ljmp
ficompl
cmc
jns
mov
aaa
test
loopne
outsl
and
fidivrs
std
fadds
mull
out
fwait
test
dec
icebp
and
out
mov
xchg
mov
cmpsb
mov
adc
pop
rcr
push
mov
int
aaa
aas
shrb
fisubrl
out
fidivrs
repnz
arpl
push
rorl
dec
int
aaa
outsl
insb
sub
outsl
sahf
out
or
repz
pop
sub
and
stos
adc
xor
inc
popf
push
xchg
fwait
aaa
outsl
faddp
stc
dec
jae
push
add
scas
shl
xor
int
lret
lcall
inc
fidivrs
daa
lret
jge
xor
mov
aaa
xchg
or
sbb
fucomip
xlat
jbe
inc
ret
dec
push
and
pop
stos
add
in
fstl
cld
cld
stc
repz
cltd
out
adc
fdivs
scas
sar
push
xchg
xlat
pop
cmpsb
stos
add
mov
lods
mov
lcall
aad
aas
int
aaa
outsl
inc
call
sarb
cmp
bound
jns
out
sbb
jecxz
lea
sbb
fildll
cld
jbe
ja
out
jmp
jmp
enter
xchg
aas
jns
cmp
js
iret
lahf
aas
insb
mov
std
inc
mov
pop
hlt
fiadds
jb
repz
sub
int
aaa
outsl
xchg
xor
push
jns
js
nop
ss
add
out
int3
lods
mov
movsl
mov
adc
mov
ficomps
mov
pusha
fmul
inc
repz
fwait
call
orl
jae
add
decl
mov
mov
dec
push
dec
mov
lahf
aas
out
repnz
jp
pop
mov
int3
cs
sub
xor
out
fidivrs
lret
bound
adcl
jp
cmp
addr16
mov
test
mov
cmpsl
add
nop
mov
out
mov
mov
aaa
in
daa
mov
cld
stc
repz
popa
sarb
cmp
dec
sub
aas
jg
test
mov
fcmove
sub
repz
loopne
hlt
cltd
or
push
int3
lcall
pop
xor
sbbb
dec
xchg
fwait
aaa
push
xchg
jle
fwait
ja
lea
pop
notb
jns
out
clc
dec
popa
in
push
imul
outsl
fidivrs
enter
jl
je
mov
repz
fwait
xchg
or
mov
jne
outsl
fidivrs
lds
jne
fwait
push
mov
push
jnp
out
fwait
aaa
icebp
jmp
xchg
sbb
aam
mov
hlt
xorb
stos
mov
repz
mov
and
outsl
mov
mov
mov
scas
call
xchg
cs
jg
fnstcw
js
enter
pop
outsb
repz
lahf
adc
mov
jmp
mov
fldcw
aas
and
push
subl
shlb
add
cmp
fidivs
xorl
jno
dec
fwait
iret
lahf
aas
jg
and
das
fs
jb
pusha
cld
stc
repz
mov
test
or
jle
inc
push
rorl
addr16
xchg
stc
repz
scas
hlt
sub
adc
minps
jb
mull
sub
xor
or
repz
sub
int3
xlat
push
lods
xor
mov
jg
cld
fadd
aas
mov
push
inc
repz
lahf
lock
jp
or
hlt
dec
rclb
repnz
cmc
jl
fwait
scas
jae
jns
out
cld
add
jg
inc
push
aad
fld
fwait
aaa
outsl
fisubs
pop
shr
or
mov
jns
out
lcall
mov
jp
aaa
outsl
fidivrs
ret
in
mov
pop
cs
enter
xor
sub
in
lods
test
cmp
adcb
aad
push
fwait
aaa
out
or
jmp
sub
sbb
out
lahf
pop
dec
push
adc
loope
inc
mov
jg
sub
repz
pop
daa
cmpsl
aas
jg
out
lahf
aas
popf
int3
add
pop
adc
mov
stc
repz
cmc
lods
xor
je
ja
call
and
add
inc
movsb
mov
pushl
fiadds
pop
push
out
dec
cmp
loopne
inc
lock
lret
dec
or
mov
inc
mov
filds
cmc
xchg
test
imull
fwait
aaa
outsl
fimuls
or
in
sarb
or
repnz
jns
out
ja
sbb
push
push
stc
dec
in
xor
sub
dec
push
in
cld
dec
movsb
pop
inc
int
mov
sbb
sbb
pop
and
repnz
out
inc
xor
push
push
xchg
mov
sarl
jno
addb
sbb
lahf
jg
or
jle
scas
and
imul
sarl
aaa
outsl
fiadds
pop
arpl
inc
lret
cmp
jns
out
mov
frstor
add
hlt
movsl
xor
push
inc
fidivrs
mov
loop
xchg
aaa
out
cs
rorl
add
imull
addr16
sub
out
mov
dec
adc
sbb
fs
ja
lret
iret
sub
sbb
xchg
int
sbb
cmp
mov
repz
sbb
pop
sahf
xor
pop
orl
fwait
aaa
outsl
fisubrs
ret
mov
nop
push
or
jns
out
outsb
pop
push
ss
loopne
test
bound
mov
cmp
or
leave
repz
fwait
into
push
add
arpl
mov
aas
or
jns
mov
inc
mov
rcr
iret
mov
andl
subl
mov
mov
aaa
filds
cmc
insl
in
iret
mov
jne
xchg
xor
ds
mov
aas
repnz
mov
in
nop
fwait
aaa
outsl
out
mov
add
out
jnp
fidivrs
lods
cmp
cld
leave
in
int
aaa
outsl
test
jne
rorb
in
push
push
sub
out
xchg
cwtl
or
mov
sbb
leave
fiadds
das
subb
stos
and
pop
dec
push
inc
js
mov
mov
jns
out
aas
mov
add
pop
mov
inc
sbb
jne
cmpb
push
aam
aas
jg
cld
dec
pop
mov
call
xor
repz
lahf
nop
sbb
cld
inc
cmp
push
call
jg
cld
stc
inc
or
loope
ss
daa
inc
xor
aas
push
jnp
lds
jge
loop
and
push
popl
iret
lahf
aas
jg
cmp
and
scas
test
in
xchg
out
push
icebp
mov
dec
sbb
repnz
sub
idivl
dec
jle
mov
bsf
pop
aaa
in
cld
stc
repz
inc
add
pop
xor
lahf
aas
jg
add
fcoms
adc
pop
cmp
repz
test
cmp
jo
or
mov
int3
pushf
add
aaa
outsl
fiadds
scas
sahf
fs
xor
cmp
mov
ret
mov
hlt
add
or
jae
insl
mov
mov
stc
mov
iret
stc
xchg
ds
xchg
mov
lahf
aas
jg
imul
inc
sub
dec
jo
cmp
stc
repz
jo
push
movsl
mov
fs
dec
mov
push
jae
add
cld
or
arpl
mov
sahf
into
psubd
lock
outsl
fiadds
pop
out
cmp
jmp
aaa
repz
aam
cwtl
aaa
xor
push
ficoms
mov
lods
and
data16
pop
inc
mov
int
aaa
cmp
dec
xor
cmp
lahf
aas
lock
adcb
pop
in
cmp
cmp
cld
stc
repz
jb
gs
sti
xor
cmp
inc
lahf
cld
sub
int
inc
jmp
and
int3
pop
push
sub
movsb
push
pop
mov
push
jns
out
lret
pop
sub
sub
ds
inc
enter
js
adc
and
xlat
movsb
imul
push
int
aaa
outsl
iret
divl
xor
mov
inc
mov
xchg
mov
jo
sbb
jle
push
fldl
negl
popf
pop
sbb
xor
mov
jns
out
xor
mov
pop
imull
stc
dec
loop
js
aaa
outsl
fidivrs
mov
je
cmp
jg
xchg
fwait
testl
mov
sub
lahf
aas
popa
imull
push
ljmp
repz
inc
loop
std
dec
or
out
fwait
cmpsb
fidivrs
adc
xchg
aas
aam
adc
cmp
jb
fimull
pop
mov
pushf
dec
cld
stc
repz
adc
rolb
and
mov
pop
ljmp
xchg
push
sub
enter
repz
dec
jne
enter
in
and
aas
jg
repnz
ret
clc
rcrl
push
xlat
cs
je
stc
repz
fildll
ja
push
addr16
jecxz
iret
mov
xor
shrl
mov
stc
repz
ds
xchg
iret
sti
shrl
lahf
aas
jg
js
pop
inc
pusha
popf
jecxz
cmp
sbb
out
call
push
daa
das
mov
adc
cld
stc
repz
shl
or
xchg
mov
jg
xor
outsl
mov
jg
das
repnz
cmp
ljmp
lods
xor
lret
inc
shlb
cmp
push
addr16
fdiv
aaa
outsl
fidivrs
jo
xor
fcomi
ret
sar
repz
fwait
xchg
data16
shl
loopne
mov
lahf
xchg
or
out
stc
jecxz
mov
xor
xchg
fwait
aaa
mov
ficompl
int
jo
cmc
ds
repz
clc
sub
inc
les
push
jne
fcompl
sub
push
push
add
xchg
or
xchg
int
inc
push
mov
sub
pop
mov
lock
fsubrs
inc
pop
out
lods
lds
aaa
outsl
imul
imul
xchg
lods
push
mov
mov
ds
jnp
loope
mov
push
in
mov
mov
flds
fbld
out
fwait
xor
xchg
inc
dec
add
mov
jns
cld
xchg
pop
jmp
mov
mov
fwait
aaa
outsl
mov
or
std
insb
push
nop
mov
lret
adc
out
repz
out
push
fwait
aaa
outsl
fsubp
dec
dec
mov
test
mov
out
arpl
insl
aaa
cs
pop
push
loop
jne
and
loope
push
cwtl
adc
pop
aam
dec
jns
and
mov
inc
outsl
fidivrs
xor
daa
lds
mov
cs
int
aaa
icebp
and
inc
xchg
and
adc
fidivrs
push
jge
inc
cmp
stos
sbb
popf
ljmp
xchg
outsb
je
jne
jns
out
loope
jo
cli
les
andb
outsl
fisubrs
push
pop
shl
cld
cltd
ljmp
jns
out
sub
xor
popa
sahf
loopne
outsl
fidivrs
int3
or
mov
mov
repnz
fwait
mov
push
mov
fwait
shll
push
testb
and
or
sub
fwait
aaa
outsl
push
sbb
jbe
inc
jg
push
inc
ret
jns
out
jg
mov
or
aaa
outsl
ficomps
fiadds
lock
in
add
jno
loop
mov
ja
aaa
lea
call
mov
ds
mov
lods
and
pop
jg
movsb
popf
mov
fwait
aaa
outsl
stos
out
jp
dec
sbb
mov
jecxz
adc
inc
add
movsb
push
jns
jo
outsl
lret
popa
in
adc
cld
fisttpl
cmpsl
mov
subl
xchg
inc
sbb
adcl
adc
cwtl
cmc
fwait
bound
jo
jg
cld
arpl
mov
xor
mov
lahf
aas
sbb
jbe
ss
pusha
pop
xlat
push
inc
in
sub
xor
jle
cld
stc
and
mov
push
adc
out
adc
movsl
rclb
or
notl
cmpsb
or
scas
xchg
iret
lahf
aas
jg
mov
in
js
lock
jns
hlt
xchg
pop
aas
sub
aaa
outsl
fidivrs
and
xor
stc
push
mov
jae
sub
sub
pop
outsl
fidivrs
scas
dec
cmp
scas
pop
inc
repz
fwait
aaa
scas
mov
mov
shll
repz
mov
push
or
mov
xorb
fwait
aaa
outsl
push
vpshaq
out
fcompl
mov
jg
cld
popa
loop
outsl
push
les
push
imul
enter
xor
icebp
fwait
ja
add
xchg
insl
jbe
jns
out
int
pushl
lds
push
fdivrl
ja
dec
je
shlb
cld
cmp
inc
xchg
insb
lahf
aas
jg
pop
cmovno
and
ret
out
sahf
inc
int3
aam
sbbl
xchg
dec
aas
jg
cld
and
push
dec
cli
sbb
sbb
lcall
mov
mov
movsb
mov
sarb
stc
stc
pop
lret
call
cmp
mov
mov
lcall
adc
cld
push
cmp
lahf
push
repz
loopne
lds
in
xchg
push
outsl
fidivrs
mov
xor
insb
stc
jecxz
out
les
aaa
into
hlt
inc
mov
xcrypt-ecb
cmpsl
or
stc
ret
xchg
fwait
pop
xchg
lret
test
mov
fmull
cmp
push
pop
cmpsb
inc
outsb
ficoms
xor
cmp
cmc
in
mov
mov
mov
mov
mov
mov
xchg
aaa
outsl
cmp
sbb
fisttpll
movaps
adc
out
sbb
or
pop
inc
roll
mov
mov
lahf
lea
repnz
int
aaa
outsl
pop
inc
repz
xchg
std
cmp
jns
out
lds
pop
jb
mov
cmp
mov
lret
dec
xchg
push
dec
mov
sbb
shlb
push
and
rolb
fiadds
add
mov
pop
icebp
daa
fwait
aaa
outsl
jmp
cmp
imul
xor
jmp
fdivrp
mov
dec
loopne
xlat
inc
push
imul
roll
adc
xchg
cmp
cmp
out
fbld
push
vaddsd
cmp
cld
jmp
xor
jl
jl
mov
pushf
cs
loopne
stos
xchg
aaa
mov
inc
outsl
fidivrs
mov
popf
sti
jae
dec
fs
out
fwait
aaa
cltd
adc
and
cld
mov
fidivrs
mov
and
adc
sbb
inc
int
aaa
outsl
jl
out
cs
dec
mov
outsl
mov
loopne
inc
push
loop
ret
enter
out
ljmp
jb
addb
push
or
movsl
rcrl
sub
daa
imull
sub
adc
cmpl
outsl
ficomps
dec
lods
lret
jmp
addr16
lods
loopne
push
jns
out
fldenv
aad
imul
fnstcw
ss
stc
repz
out
adc
outsb
das
xor
cmpl
cmp
scas
add
mov
jns
les
enter
sub
fwait
aaa
outsl
ficomps
out
fs
dec
push
aaa
lea
imul
add
ja
pop
jb
lret
sub
add
jno
repz
mov
imul
lahf
push
lcall
int3
repz
shll
scas
out
hlt
into
xchg
mov
fidivrs
pop
in
jmp
shll
add
adcb
ret
mov
adc
loope
push
mov
stos
pushf
sbbl
sub
mov
mov
jbe
inc
pusha
aas
lock
and
fwait
movsb
cmp
xor
push
andb
ficoms
ss
stc
inc
negb
out
fwait
inc
adcb
sub
cltd
jle
ja
push
movsb
jns
enter
add
int
test
inc
mov
add
leave
repz
inc
stc
int
mov
out
add
andl
pusha
xchg
cmc
dec
cs
daa
xchg
out
fwait
aaa
dec
nop
scas
dec
add
sbb
dec
push
xchg
mov
xlat
lds
mov
inc
jge
pop
mov
fwait
aaa
outsl
sub
or
xor
loopne
popf
out
outsb
icebp
jg
nop
out
aad
inc
enter
jle
arpl
shlb
aas
sbb
cmp
jecxz
push
hlt
out
lds
movsl
bound
mov
pop
pop
sub
xchg
pop
adc
aaa
and
fwait
aaa
outsl
iret
mov
notb
dec
xchg
ret
sbbb
jmpw
flds
mov
enter
push
into
mov
push
sub
fidivrs
pop
adc
aam
rcrl
fwait
aaa
outsl
cmc
cmp
outsl
pop
mov
arpl
repz
push
std
in
cmp
rcpps
ds
pop
int
scas
mov
mov
leave
out
sub
dec
out
pop
mov
lahf
or
pop
in
pop
xchg
jp
lock
push
enter
sbb
in
aaa
outsl
mov
pop
dec
mov
xor
repz
fwait
stos
and
mov
test
jns
lahf
push
mov
neg
arpl
in
jno
scas
pop
mov
stc
enter
or
stc
dec
xor
cmp
aaa
inc
lahf
cld
dec
sub
xchg
jl
popf
sbb
fwait
lods
dec
mov
sbb
mov
inc
outsl
fidivrs
mov
notl
addr16
imul
stos
jp
dec
jecxz
in
adc
mov
int3
xlat
jle
pop
and
or
pop
and
insb
scas
mov
adc
addb
mov
xlat
adc
fwait
aaa
out
sub
inc
cwtl
inc
fiaddl
jecxz
les
jns
out
test
cld
add
xor
dec
les
scas
cli
inc
fidivs
push
out
mov
imul
mov
outsl
pop
lods
sub
push
loopne
inc
loopne
pop
jae
inc
ja
inc
cmpl
jns
test
icebp
push
lods
mov
into
lods
aaa
outsl
fidivrs
add
xchg
cmp
and
out
fwait
lahf
leave
cltd
ficoms
jle
and
inc
jge
and
int3
add
out
xchg
pop
add
fwait
aaa
outsl
icebp
lret
xor
dec
jmp
mov
jb
out
mov
inc
pop
out
aas
out
fidivrs
sbb
xchg
fwait
aaa
outsl
setle
fbstp
mov
into
je
inc
mov
fistl
std
in
subb
cmp
aaa
add
fidivs
pop
mov
loopne
push
repz
fwait
cmp
mov
sbb
fidivrs
aam
iret
test
out
cmp
out
mov
int
aaa
insb
loope
fildl
rcrb
mov
adc
scas
or
lcall
int
aaa
outsl
repnz
dec
imul
mov
into
aad
out
out
test
outsb
lcall
fisubs
fistpll
ljmp
in
push
pop
daa
lret
out
push
push
inc
fstpl
fstpt
pop
xchg
in
jae
fs
push
fldt
adc
std
dec
sub
loope
loopne
js
lret
aad
xchg
sub
push
out
lahf
aas
wrmsr
imul
mov
or
cld
stc
repz
icebp
pop
xorb
je
adc
inc
fwait
adc
sahf
aas
jg
aad
pop
jnp
ret
cltd
iret
lahf
aas
jg
xchg
arpl
pusha
ret
mov
insb
jb
cld
stc
repz
push
out
or
addr16
sub
or
dec
jge
push
jno
outsb
sbbl
repz
push
imul
clc
inc
and
push
aas
jg
cld
out
popf
daa
aad
rclb
jmp
push
in
iret
lahf
das
loope
and
sbbl
mov
scas
push
jns
rclb
cmpb
push
idiv
stc
repz
test
jmp
lcall
aas
jg
aaa
pusha
inc
sub
mov
jo
repz
jge
and
push
inc
cmp
sbb
jg
cld
pop
jge
jecxz
sbb
test
cs
in
xor
out
lahf
pop
sub
mov
sti
jg
cld
stc
repz
fidivrl
mov
mov
out
lahf
aas
inc
push
ja
iret
and
cld
stc
repz
sbb
jns
cmpsl
and
pusha
inc
call
and
loop
mov
mov
aad
or
stos
mov
mov
out
stos
and
pminsw
stc
repz
cmp
das
mov
jg
aaa
shrl
test
mov
or
dec
lock
je
mov
jp
mov
adc
aas
jecxz
iret
lahf
jg
lret
pop
jns
xlat
xor
fs
stc
repz
add
mov
pushf
shll
push
inc
test
out
lahf
scas
mov
or
xor
push
jg
cld
stc
mov
dec
repz
sub
ljmp
lahf
aas
nop
xor
jl
int3
int
xchg
in
adc
ja
mov
int
aaa
xchg
push
xlat
or
divl
cld
in
loope
and
scas
imul
js
aas
int
aaa
outsl
adc
inc
into
pop
popf
stc
dec
test
lret
repz
das
nop
dec
jne
mov
adc
stc
aad
fwait
sub
test
lcallw
bound
outsl
fdivrp
lods
and
out
stos
adc
xor
addl
enter
xchg
fwait
sbb
cs
aas
jg
cld
ret
dec
jmp
dec
mov
in
gs
sbb
add
iret
lahf
mov
push
xchg
jno
cld
stc
xor
and
dec
sti
jb
mov
fisttps
lods
adc
testl
stc
repz
push
decl
push
sbb
inc
jle
xchg
adc
xlat
push
in
inc
inc
jbe
xchg
pop
push
int
pop
fsts
lcall
loop
int
int
fwait
ja
dec
xor
movsb
test
out
inc
fiadds
inc
push
jecxz
add
xor
mov
outsl
inc
jno
sub
jg
jg
cld
inc
adc
jno
and
cmpsl
jnp
pop
mov
pushf
cmp
sub
aas
jne
push
cmpsl
mov
cmp
pop
hlt
xchg
add
rcrl
jp
outsl
fidivrs
xorl
les
pop
jg
out
fwait
cmpl
sbb
mov
mov
lret
xchg
mov
or
popl
fidivrs
dec
cmp
jne
ja,pn
jns
scas
mov
enter
int3
push
xor
sarb
xlat
stos
mov
aaa
ret
sub
jle
push
adcb
icebp
sbb
pop
push
xorb
lods
clc
xchg
mov
mov
int
aaa
add
xchg
push
emms
aas
adc
fs
cmp
stc
cli
dec
or
fwait
aaa
outsl
cltd
dec
outsb
cmp
fcmovbe
repz
insb
jbe
das
rolb
out
int3
js
pop
jl
sahf
mov
dec
imul
repz
sarb
inc
and
std
and
dec
repnz
fiadds
leave
repnz
jecxz
aaa
stos
lods
add
int
aaa
outsl
jecxz
jl
popa
jl
rcrl
jns
out
sub
mov
push
xor
sbb
call
fnstcw
mov
xchg
pop
mov
jl
cmp
lds
xchg
les
push
ds
repz
sub
push
and
outsl
fidivrs
mov
xor
ja
out
fwait
aaa
mov
and
mov
icebp
mov
repz
inc
pop
pop
and
inc
sub
in
push
xchg
test
sbb
pop
aad
adc
fidivrs
and
and
ljmp
mov
int
aaa
outsl
inc
and
jno
jbe
stos
into
shl
sbb
cmp
push
mov
ja
ds
inc
jne
jle
in
out
cwtl
out
pop
mov
inc
aad
insb
test
cld
stc
repz
pushf
mov
push
xchg
lret
pop
outsb
inc
jle
add
negb
loop
stc
repz
fisttps
xchg
mov
inc
js
in
cld
push
push
xchg
xor
and
repz
test
mov
fcoml
push
jg
cld
stc
out
in
js
aam
xchg
xor
sbb
rcrb
cmp
iret
lahf
aas
mov
mov
cli
mov
ret
andb
cld
stc
mov
std
test
outsb
out
jge
addl
lods
xchg
mov
stc
repz
lahf
cmp
inc
sti
xor
fisubs
loop
out
xor
jle
cwtl
sbb
inc
xor
insb
addb
sbb
inc
sahf
jge
inc
mov
lods
stc
repz
scas
out
xor
add
dec
stc
adc
cld
lea
movsl
inc
mov
pop
add
hlt
out
cwtl
movsb
mov
fwait
aaa
outsl
fiadds
dec
sahf
fiadds
jns
out
push
xor
nop
or
fidivrs
in
fists
enter
jne
in
out
fwait
mov
cli
sub
add
fidivrs
add
cwtl
out
lret
xchg
aaa
in
push
scas
es
jg
cld
jmp
aaa
and
mov
xor
ja
xchg
aas
mov
leave
push
adc
imul
push
outsl
frstor
cmp
fidivrs
cmp
cld
mov
pop
mov
cltd
in
fwait
aaa
shll
outsl
test
mov
xchg
mov
cs
movsl
sub
or
fwait
aaa
outsl
fiadds
test
jmp
pop
jmp
out
jns
xchg
add
fldcw
push
adc
outsl
fidivrs
sub
adc
cmp
out
lahf
lret
call
leave
mov
mov
jns
insl
pop
add
fmull
rorb
decb
scas
push
mov
xchg
fwait
aaa
outsl
fstl
add
int
jl
cld
cld
jecxz
pop
imul
out
push
shr
inc
aad
pushf
jno
and
dec
fidivrs
or
popa
push
jg
and
sti
cmp
inc
lock
mov
fwait
aaa
inc
outsl
out
pop
inc
xchg
dec
mov
repz
inc
adc
leave
xchg
lods
xchg
outsl
push
jns
xor
fidivrs
dec
mov
sarl
mov
jb
bound
aas
lea
aas
dec
stc
ds
jle
scas
mov
cld
stc
repz
inc
xchg
inc
rorl
es
lahf
aas
jg
pop
add
xor
xchg
push
xor
jg
and
in
ret
movsb
pop
mov
aaa
outsl
fidivrs
pop
mov
mov
pop
das
sbb
xor
mov
mov
or
adc
xor
or
fnstenv
lcall
out
sbb
xchg
pop
data16
mov
mov
jb
mov
push
xor
int
aaa
outsl
pop
adc
xor
or
dec
mov
adc
mov
movsb
stc
fmul
cmpl
sub
faddp
pop
fnstcw
test
push
add
xchg
int
mov
rcrl
fs
push
inc
mov
dec
out
push
inc
outsb
mov
and
xchg
js
repz
fisttpl
sub
pop
xor
sbb
out
mov
gs
pushf
lahf
xchg
xchg
xorl
pop
sbb
and
icebp
xchg
test
fistpll
outsb
fidivrs
lods
and
test
outsl
mov
out
fwait
test
push
fisttpll
xchg
mov
or
insl
andb
and
out
mov
enter
fisubs
jns
out
sbb
jne
insb
dec
mov
jno
jae
test
mov
sub
dec
jge
fbld
mov
mov
fwait
lock
aas
xchg
nop
test
je
dec
jle
add
in
dec
int
pushf
xchg
cld
stc
repz
inc
push
cmp
in
xchg
dec
mov
out
mov
aas
jg
cmpsl
fadd
jnp
or
add
xlat
lahf
aas
jmp
je
out
inc
outsl
es
test
nop
stc
repz
push
xor
cmc
imul
push
cmp
cld
mov
dec
loop
and
iret
lahf
mov
pop
insb
mov
ljmp
sti
lods
testl
stos
aaa
outsl
fidivrs
jl
scas
lods
pop
or
test
loope
out
fwait
aas
into
das
jb
sub
mov
stc
mov
lock
insb
xchg
insb
xchg
aas
aaa
adc
mov
les
push
test
out
fwait
add
shll
cmp
xor
mov
push
mov
int
aaa
out
inc
push
jecxz
cmp
push
movsl
push
jae
jns
out
sub
mov
stc
mov
ficoms
and
in
xchg
imul
into
popf
js
jns
out
push
mov
shrl
fnsave
outsl
fidivrs
add
xor
and
aam
cmp
and
mov
mov
out
jle
fidivrs
mov
pop
and
adcb
dec
fildll
out
fwait
aaa
xchg
dec
fs
pop
adc
scas
xlat
in
imul
sti
leave
int
xchg
iret
inc
icebp
pusha
mov
xchg
fwait
aaa
outsl
sahf
arpl
movl
jno
jns
push
loop
or
scas
std
push
rorl
mov
pop
push
mov
in
idivl
add
pop
test
jns
out
outsl
mov
int3
mov
outsw
fidivrs
inc
cwtl
push
push
inc
pop
jno
add
imul
inc
mov
sti
loopne
inc
rcrl
enter
jmp
lahf
jg
add
movups
pop
repnz
mov
pop
loop
testl
mov
rclb
inc
cmp
pop
pmuludq
ret
sbb
out
ja
in
jg
shrb
or
jg
cld
push
fildl
inc
bound
sbb
adc
out
lahf
xor
inc
sahf
lock
sub
cld
stc
insb
std
push
repnz
push
out
out
cwtl
pop
sarb
cmp
cmp
cmp
inc
mov
mov
sbb
loop
jns
push
imull
xchg
addb
aam
lahf
xor
fidivs
mov
jo
push
lock
mov
lahf
inc
cmp
jo
push
or
repz
clc
mov
push
sbb
daa
mov
cmpb
cmp
vcvtsd2si
outsl
fisubs
mov
call
out
xchg
add
lea
bound
cmpsl
in
sahf
cld
fidivs
sbb
push
pop
mov
sbb
iret
std
inc
test
repz
inc
ljmp
repz
lahf
insb
and
shll
jb
cld
stc
repz
xlat
lahf
icebp
inc
sti
cmpsb
and
fcoml
xchg
aas
jg
xor
fwait
pop
lods
icebp
in
iret
pop
sbb
push
aas
loopne
mov
stc
repz
out
push
fs
jg
fidivrs
or
sbb
lds
int
aaa
fdivl
stos
mov
rcr
daa
or
movsl
xor
shr
pop
into
inc
cmpsl
adc
push
mov
fwait
aaa
outsl
bound
fcoms
mov
enter
sar
fwait
sub
adc
or
ja
lahf
jg
ljmp
jmp
stc
repz
mov
icebp
inc
int
mov
cmpsb
sti
rcr
aas
stc
pushf
xor
jmp
insb
xlat
ljmp
outsl
xor
xor
fs
xor
push
add
in
sub
and
aaa
mov
subl
push
leave
adc
lret
pop
cs
pusha
mov
jmp
iret
mov
iret
dec
movsb
lahf
and
or
sahf
cld
mov
scas
cmp
dec
pusha
sbb
outsl
loopne
cli
imul
and
loope
push
sub
inc
mov
pop
ljmp
stc
pop
mov
jecxz
cltd
out
int
stc
out
lahf
aas
add
into
jle
jnp
jnp
cmp
cld
stc
repz
ljmp
ror
xchg
insl
adc
adc
aad
stc
aaa
outsl
fiadds
add
push
lods
xchg
cmp
push
imul
out
fwait
push
push
aaa
mov
jecxz
cmp
jns
mov
mov
sahf
or
cld
adcl
or
jb
pop
fisubrs
mov
jge
inc
mov
dec
cli
loope
sub
sti
jecxz
data16
push
inc
pop
mov
mov
out
or
mov
js
lock
pop
and
jle
xchg
add
aas
call
add
arpl
insb
cld
stc
repz
mov
mov
mov
test
inc
sub
jns
mov
cmpl
loope
repz
insb
idiv
and
jbe
mov
and
aas
jg
cld
inc
out
xorl
in
in
adc
iret
lahf
popa
pop
mov
movsb
repnz
jno
jge
scas
jg
cld
stc
and
xlat
shll
repz
aas
nop
leave
rorb
jnp
mov
aad
cld
stc
repz
xchg
mov
inc
jno
mov
xchg
call
jns
movsb
outsl
stos
and
xor
xchg
es
enter
jle
mov
and
mov
cld
mov
jecxz
out
aaa
sbb
inc
jle
in
test
jecxz
jo
cmp
cld
stc
rep
xchg
lds
fwait
dec
dec
push
inc
cmp
stc
mov
jg
and
sbb
jg
jo
ja
aas
jg
cld
cmpsb
dec
call
clc
lret
pop
cmp
out
lahf
lret
xorl
shld
pop
sub
stc
dec
mov
pop
arpl
jns
sbb
call
sub
test
dec
loope
test
insl
leave
insb
dec
mov
mov
xchg
adcb
cmc
xchg
cld
jmp
or
scas
mov
icebp
mov
das
popa
mov
testb
inc
int
fs
cld
stc
repz
xchg
fwait
xor
ficoms
xchg
iret
lahf
aas
jg
arpl
outsl
call
repz
stc
repz
test
imul
mov
test
lea
adc
inc
out
inc
les
icebp
hlt
icebp
sub
test
iret
mov
push
outsl
xor
xlat
mov
jg
xchg
int3
push
push
mov
stc
repz
mov
int
ret
pop
mov
mov
aas
jg
cld
add
sti
jmp
outsb
push
xor
cmpsb
or
jns
movsb
and
jns
jne
or
dec
push
imul
fmulp
pop
mov
push
add
dec
cmp
mov
pop
xor
dec
pop
xlat
addr16
jno
mov
dec
sbb
xchg
and
mov
push
out
repnz
inc
or
sbbb
rolb
orb
mov
call
les
xchg
xrelease
mov
out
adc
jno
pop
fiadds
xchg
fwait
aaa
outsl
fsubp
out
lock
imul
test
repz
nop
push
pop
das
pop
daa
or
push
push
mov
inc
adc
fnstcw
std
leave
lahf
lcall
pop
jnp
stos
fimull
dec
packuswb
insb
fidivrs
or
test
out
xchg
mov
imul
cld
stc
repz
test
jno
ret
jae
out
and
test
lahf
aas
jg
xchg
dec
add
mov
outsb
push
xor
lret
repz
pusha
dec
push
xchg
xor
ja
xor
mov
adc
fidivrs
dec
mulb
test
lahf
rcrl
mov
dec
loop
dec
aad
incl
repz
lahf
sbb
test
mull
jle
jle
cld
stc
nop
fsub
enter
aas
fidivrs
sub
xor
pop
jb
fwait
in
pop
and
jg
cmp
dec
adc
xor
lahf
jg
jle
mov
fistpl
sub
out
push
bound
call
repz
cmp
sbb
aaa
fcomip
scas
mov
mov
movsb
jns
dec
idivb
jb
xchg
int
loop
subl
sbb
cwtl
xchg
fsubrl
mov
jns
outsl
aas
clc
mov
clc
addl
inc
outsl
aam
and
xchg
cmpsb
popa
leave
xchg
cmpsl
scas
stc
stc
repz
mov
es
loop
add
sbb
sti
mov
lds
fs
cmp
in
mov
fnstsw
es
outsb
stc
pop
adc
pop
je
pushf
mov
xor
popf
cld
movb
add
jb
fnstsw
jb
ja
ficoms
nop
inc
dec
movsl
mov
test
decl
inc
lret
fs
add
shrb
call
push
sbb
jle
jl
out
movsb
das
push
pop
lret
inc
pop
lock
dec
xchg
and
mov
test
add
xchg
mov
dec
loope
add
ret
add
shr
insl
adc
inc
ss
out
pop
mov
sbb
jle
cmpsb
adc
pusha
repnz
inc
das
mov
dec
jge
out
fsubs
inc
add
dec
mov
adc
adc
xchg
rorb
mov
imul
repz
mov
xchg
mov
cs
outsl
cld
stc
xlat
fdivs
lahf
jmp
inc
xor
aas
jg
je
mov
insl
loopne
pop
cld
stc
repz
jge
cmp
scas
shll
cwtl
add
into
lahf
aas
jg
scas
ds
add
scas
cwtl
sbb
pop
in
stc
repz
popa
sub
mov
daa
sti
cmp
jg
cld
mov
xchg
sbb
or
out
adc
add
rolb
fs
dec
outsl
fidivrs
roll
test
int
aaa
mov
ret
push
or
lock
cli
cmpsb
loop
jns
out
shr
movsb
stc
lods
and
out
stos
adc
xor
mov
loop
inc
jle
je
jl
push
mov
push
jnp
cmp
xchg
int
aaa
mov
pop
jne
xchg
and
addr16
lahf
jg
or
mov
fcoms
stos
add
out
fiadds
sub
or
push
adc
ljmp
xorl
push
dec
movl
out
aas
jg
cld
push
mov
mov
mov
xchg
lahf
inc
jb
hlt
adc
shl
out
inc
ljmp
mov
fucomip
adc
adc
outsl
call
push
call
inc
xor
lods
adc
ja
adc
add
call
inc
call
inc
sub
aad
mov
cmpsl
dec
push
mov
xchg
xchg
sub
aas
call
inc
call
mov
adc
push
adc
das
sub
push
call
movsb
push
adc
out
lcall
clc
sub
sub
pop
call
daa
call
sub
addr16
mov
call
scas
sbb
call
out
call
push
call
dec
call
mov
call
push
call
inc
xchg
imul
cmpsl
inc
adc
inc
call
sub
daa
jg
jg
in
mov
push
xor
push
call
insb
call
scas
call
adc
xcrypt-ecb
cmpsl
or
inc
decb
pop
adc
stos
mov
call
sub
call
mov
xor
inc
pop
cmp
dec
push
movsb
das
call
inc
call
mov
in
push
adc
lahf
xchg
cmp
mov
push
movsl
sub
pop
call
sub
das
adc
pop
inc
xchg
sub
pop
push
in
sub
inc
push
sbb
call
push
psubsw
movsl
call
mov
call
adc
adc
call
push
call
push
movsb
psubsb
push
and
push
call
dec
call
adc
fucomip
inc
adcb
inc
or
mov
daa
scas
repnz
mov
jae
fwait
aaa
outsl
in
pop
loop
adc
push
inc
adcl
and
xlat
outsb
fidivrs
insb
xor
jae
int
fwait
aaa
add
mov
mov
and
stos
inc
add
pop
cmp
mov
cmp
add
sbb
pop
jmp
pop
fcompl
icebp
insl
pusha
in
iret
add
ficoml
xor
stc
xlat
sub
xchg
push
imul
adc
inc
out
mov
inc
cmp
xor
cmp
mov
pop
test
push
xor
testb
out
fwait
aaa
inc
jmp
lret
and
jge
cwtl
jns
lea
xchg
dec
or
pop
xor
xlat
sub
nopl
fcoml
imul
jle
cld
imul
push
mov
pop
jnp
test
add
cmp
out
lahf
fildll
sbbb
imul
xchg
repnz
sub
cmp
loope
push
push
lods
cmp
int
ja
xchg
sbb
and
mov
aaa
push
mov
aam
cmpsb
mov
xor
sbb
stos
in
in
aas
lcall
cmp
jecxz
push
inc
push
cli
mov
cmc
lods
inc
add
jg
sti
xor
sub
out
subb
xchg
mov
fwait
aaa
push
lds
pop
push
inc
jg
out
jl
sar
inc
test
mov
iret
mov
out
aam
jae
mov
jg
inc
or
add
cs
mov
jo
les
cmp
inc
in
mov
insl
inc
xchg
mov
adc
andb
sbb
mov
aaa
call
push
adc
xor
dec
push
jo
lock
add
cmp
popa
push
inc
stos
sbb
sub
jb
sbb
xchg
pop
xchg
cmp
cmp
cwtl
stos
iret
lahf
aas
jg
cmp
fadds
mov
enter
cmp
subl
insl
sahf
test
ss
out
fwait
insb
loopne
push
xchg
fldl
pusha
rcrb
and
sbb
cmp
and
aas
out
mov
cld
stc
xlat
cmp
cmpsb
pusha
dec
std
cmp
subl
aas
jg
cmp
xor
jbe
jb
inc
push
mov
push
rorb
cmp
add
xchg
pop
cmp
and
call
fs
js
mov
stc
insl
sub
xchg
cmpsl
ja
outsl
fwait
push
fdivrl
cmpsl
mov
xchg
and
scas
sbb
lea
mov
pop
jns
cmp
dec
jp
sub
repnz
call
pop
aad
and
cmp
push
iret
xchg
jp
repz
popa
sbb
jp
lea
inc
outsl
flds
scas
mov
in
fs
add
loope
cld
stc
inc
fcomip
leave
repz
in
fs
jns
push
enter
lret
jnp
xchg
leave
mov
inc
in
out
cltd
popa
out
push
inc
in
sub
sbb
test
out
es
pushf
out
aam
cmp
cld
cmp
cmp
outsb
je
sub
into
fwait
das
lahf
iret
lahf
aas
jg
ret
mov
popl
pop
xchg
xchg
fucomp
mov
ret
xor
xacquire
mov
adc
stc
ret
pusha
insb
nop
int
mov
push
cmp
imulb
negb
insb
fidivrs
sub
repz
adc
lret
pop
icebp
sub
stc
ret
sub
out
pop
dec
cli
out
cmpsb
sarb
pop
sub
sub
enter
jb
out
fisubl
jg
out
mov
xlat
sub
push
sub
idiv
rep
or
dec
dec
mov
shrl
mov
xor
pop
sarl
xchg
aas
jg
mov
insl
cmp
xchg
mov
adc
push
push
mov
adc
bnd
dec
mov
mov
push
push
mov
inc
outsl
outsb
sub
ficomps
cmp
pop
mov
or
aas
jg
cld
mov
adc
test
and
iret
lahf
dec
mov
jecxz
mov
sahf
xor
cmp
insb
cmp
cmpsl
aas
jg
cld
pop
lret
ret
xchg
test
les
and
mov
in
lahf
or
scas
sub
mov
push
mov
dec
rcrl
outsl
ficomps
ret
je
jge
dec
cmp
out
adc
in
mov
adc
add
out
and
sub
cmp
or
icebp
inc
pop
ljmp
pop
xlat
and
and
lods
sub
rclb
inc
jle
cld
stos
sbb
ja
cmp
jp
xchg
in
inc
lea
cmp
in
mov
pop
adc
inc
outsb
and
add
dec
cmp
sub
dec
mov
cmp
mov
pop
mov
cmp
adcb
repz
xchg
mov
js
es
mov
sub
xchg
fwait
aaa
mov
fbld
xchg
lahf
aas
jg
outsl
cld
mov
cmp
test
leave
sti
daa
scas
push
ror
jae
cli
mov
or
xchg
mov
lea
cmp
mov
int3
mov
sbb
cld
imul
cmp
fidivl
lds
add
xor
cmp
out
mov
inc
or
push
inc
sar
clc
inc
cmp
push
fpatan
pop
pop
mov
cmp
cmp
aam
loop
xchg
inc
mov
cmp
int
ja
adc
fs
mov
repz
leave
jns
in
mov
mov
push
inc
cmp
scas
push
repnz
shll
sub
popf
cmpsl
mov
cmpsb
mov
dec
sbb
or
xor
sbb
push
inc
enter
cmp
sbb
decb
roll
cmp
iret
lahf
jg
das
imulb
or
sbb
stc
repz
push
or
pop
leave
or
outsl
fiadds
xor
xchg
imul
int
aaa
xchg
repnz
mov
lret
out
inc
dec
repz
out
out
inc
ja
shrb
cmp
xchg
jge
repz
fwait
or
push
ljmp
add
inc
in
mov
movb
sbb
out
mov
je
or
sbb
cmp
pslld
pop
mov
call
js
xlat
sub
cmp
in
or
cmp
or
sbb
or
cwtl
cmp
sbb
decb
inc
sbb
daa
xchg
jg
add
divl
xchg
cmp
fwait
inc
inc
add
pop
cmp
mov
in
add
jbe
mov
or
jmp
outsl
fiadds
iret
jp
cmp
push
xlat
in
addl
fwait
aaa
ffreep
mov
mov
test
mov
jns
out
ret
in
gs
mov
xor
andl
jg
call
scas
aas
mov
movsl
jmp
leave
test
repz
in
clc
shrb
nop
das
test
mov
cld
xor
ljmp
cmp
adc
sub
cmp
inc
add
xchg
aaa
outsl
stos
cli
add
dec
mov
dec
aad
cmc
pop
fmuls
sub
scas
push
ficoms
aad
scas
push
ror
push
repnz
stc
stc
repz
cmp
lods
add
inc
jge
flds
cmp
mov
aas
xor
insb
faddl
mov
pop
sahf
mov
mov
adc
mov
aaa
xchg
mov
inc
lahf
aas
jg
cmc
xlat
ret
cmp
mov
jbe
lret
mov
iret
aam
xchg
dec
les
mov
shrl
cmp
sbb
sbb
enter
orl
jns
pop
mov
cmp
lret
loopne
repnz
test
fdivl
pop
popfw
push
in
cmp
fucomip
sub
jg
dec
int
add
popf
adc
addb
push
xor
clc
imul
dec
std
lret
xchg
hlt
sub
mov
test
pop
movsl
xchg
xchg
cmp
pop
rorb
fwait
adc
xchg
fists
and
xchg
push
ja
xor
repz
and
mov
push
sbb
add
adc
dec
push
dec
arpl
xor
inc
ret
sbb
stos
adc
add
adc
repnz
icebp
add
decb
mov
imul
es
mov
mov
xor
dec
insb
lahf
aas
lcall
cmp
lret
out
shrb
adcl
jnp
adc
pop
ljmp
imul
movsl
adc
mov
jg
xchg
or
adc
movsb
mov
inc
insl
jo
iret
push
mov
test
add
cmp
mov
mov
repz
jp
xchg
fwait
ja
ljmp
dec
iret
mov
or
movsl
push
test
enter
out
jo
pop
ror
adc
call
bnd
fcoms
ret
dec
or
out
lahf
mov
xchg
inc
adcl
shll
in
cmp
aas
jbe
dec
mov
xchg
iret
lahf
aas
fsubs
ret
int3
scas
jmp
cmpsl
sbb
sbb
cs
jmp
add
jno
mov
leave
test
sbb
mov
ret
mov
stos
xchg
add
mov
pop
adc
or
inc
inc
adc
xchg
xchg
adc
shlb
leave
test
test
js
adc
rcrl
loopne
and
stos
pop
pop
push
cmp
adc
sbb
lea
pop
push
add
fistpl
add
sbb
imul
cmp
inc
add
or
push
icebp
add
nop
ds
dec
pop
mov
clc
pop
or
add
cmp
movsl
lds
sub
sub
rolb
push
adc
inc
pop
push
jne
and
xlat
push
rolb
pop
adc
or
testb
add
test
or
adc
or
mov
and
xorl
jecxz
add
mov
pusha
int3
xor
iret
pop
les
sub
sbb
jne
mov
push
mov
rorb
orl
fnstcw
or
in
in
fisubl
pop
adc
ret
inc
cmpsl
or
sbb
cmp
push
fidivl
daa
push
outsb
stc
sbb
test
ljmp
sub
cmp
mov
push
mov
or
leave
subl
push
loope
xor
adc
cmp
enter
repnz
jge
adc
or
inc
pusha
sbb
or
decb
inc
cmp
add
adc
inc
adc
push
mov
ljmp
sub
fildll
mov
ret
jae
fildll
pop
push
test
push
adc
dec
cwtl
mov
orb
add
adc
cltd
aam
xlat
cmp
adc
mov
testl
aam
cmp
inc
test
adc
cwtl
in
add
rcl
fucomi
pop
lods
int
rolb
push
imul
incl
cmp
inc
sbb
stc
or
sub
rcrb
mov
sti
sbb
mov
xor
add
bound
and
inc
cmp
mov
icebp
insb
shrl
pop
das
lods
or
andb
adc
sbbb
jo
mov
adc
push
cwtl
inc
aad
mov
or
adc
stos
mov
dec
hlt
and
rcrb
adc
and
ljmp
rolb
inc
lds
cli
add
fwait
ret
push
xor
cmp
push
shll
cmovo
addb
call
or
push
les
sbb
ljmp
or
sahf
pop
or
mov
fisttpl
dec
or
sbb
mov
sub
push
call
mov
xchg
sbb
and
and
push
add
pop
mov
mov
inc
cmpsb
pop
roll
ficoml
inc
adc
rolb
inc
xchg
sbb
mov
inc
add
xor
or
daa
pusha
adc
fdivl
cmc
push
jbe
out
cmpsl
into
add
pop
push
cs
or
sbb
lods
movb
and
mov
or
and
inc
mov
push
push
std
rolb
jae
jno
addl
jmp
push
or
pop
mov
rcll
add
pop
rclb
add
adc
cmp
shl
or
or
mov
push
inc
loopne
clc
adc
mov
popl
sbb
pusha
add
add
sbb
or
sbb
push
andb
dec
or
filds
adc
push
imul
and
loop
pop
dec
pusha
cmpsb
and
push
enter
mov
push
movsl
adc
fildll
push
and
xor
call
dec
mov
test
pop
adc
add
inc
add
push
mov
stos
cmp
inc
dec
add
mov
mov
sbb
mov
xor
jo
pop
into
aas
loop
xor
sub
push
sbbb
dec
fnstcw
dec
adc
arpl
outsl
or
inc
loopne
lret
add
cmpsb
mov
andb
push
push
add
dec
lods
mov
imul
lods
sbb
inc
cltd
ljmp
rorb
or
pusha
xor
sbb
insl
cmp
adc
xchg
andb
push
push
cmp
mov
push
mov
cmp
adc
cmp
push
adc
push
xchg
es
inc
xor
inc
sbb
pop
push
aaa
sub
mov
jecxz
adc
sub
mov
into
std
sub
mov
test
adc
xor
adc
sub
xchg
testb
aam
cmp
pop
push
sti
sub
xchg
cmc
roll
lods
cli
push
ret
mov
int
adc
xor
adc
push
inc
sub
cmp
scas
jne
jb
sub
mov
leave
out
add
adc
rcrb
xchg
mov
mov
sbb
loopne
sbbb
mov
mov
sub
mov
and
stos
lds
mov
add
adc
mov
mov
jne
xchg
mov
and
test
and
cwtl
repnz
sub
es
mov
mov
mov
mov
cwtl
aaa
sub
dec
inc
shl
inc
pop
add
mov
or
fcmovnb
add
add
xchg
or
mov
arpl
rcl
or
enter
lret
xchg
mov
xor
test
sub
lock
pop
dec
adc
mov
adc
mov
mov
push
int3
add
inc
adc
and
stos
jbe
inc
and
lret
add
or
rcr
sub
adc
nop
jnp
pop
insb
insb
insb
out
sbb
push
add
shll
cmc
mov
or
hlt
jnp
nop
mov
xor
mov
popa
adc
adc
jo
cmp
xchg
jmp
je
leave
das
imul
sbb
xor
add
push
jnp
in
popf
shl
andb
xor
push
mov
ror
jb
cmp
jge
mov
stc
les
scas
dec
inc
and
mov
mov
mov
or
leave
xor
or
cmpsl
movsb
inc
mov
stos
bound
test
sub
or
jnp
add
adc
push
adc
inc
push
mov
cmpsb
inc
push
add
dec
or
jns
inc
add
and
sbb
jbe
or
and
or
addl
sub
and
xchg
cmp
sbb
faddl
fs
inc
fdivrs
test
push
xor
rol
sub
add
jmp
mov
pop
ffreep
push
pop
sbb
or
sub
xchg
imul
add
rcrb
inc
cmp
ret
enter
mov
mov
rol
aad
ljmp
enter
adc
imul
push
or
push
ret
in
movsl
mov
ljmp
or
in
xchg
adc
or
and
jnp
out
push
push
push
adc
sbb
repnz
repnz
arpl
inc
jg
mov
add
movsb
andl
inc
fisubl
jbe
leave
rorl
push
or
push
inc
mov
call
inc
xor
pop
movzbl
inc
mov
mov
jo
test
stos
mov
and
push
cmp
pop
shlb
int
xchg
jle
push
mov
rcrl
jns
sbb
adc
pushf
mov
jl
add
testl
test
mov
mov
fistpl
dec
gs
js
push
jge
or
pop
mov
in
ret
xor
jno
add
push
mov
pop
into
daa
mov
mov
leave
sbb
ss
sub
adc
lahf
add
push
pop
sbb
mov
sarl
pop
jge
divl
or
pop
xchg
adc
sub
pop
icebp
je
call
and
xchg
sbb
lret
loope
add
outsb
adc
or
dec
pusha
add
roll
leave
push
jo
lret
lock
or
add
stos
mov
inc
addb
roll
cmp
nop
roll
or
sahf
mov
movsw
adc
add
jo
sbb
cmpsb
cli
rcrl
cmpsl
fs
jbe
mov
pop
pushf
and
pop
jle
leave
sbb
lock
test
push
dec
icebp
and
jb
xor
aam
jb
xorb
adc
ret
or
adc
lcall
loopne
sbb
js
sub
mov
sub
outsb
push
pop
adc
and
push
add
fnstsw
dec
int3
or
pop
push
scas
jge
or
mov
dec
or
push
adc
push
stos
lock
nop
and
sub
xchg
rorl
jae
out
dec
mov
add
inc
enter
and
fdivrs
test
imul
lods
lods
pop
or
scas
and
push
xchg
push
in
mov
jo
arpl
mov
mov
mov
sbbb
push
add
mov
sahf
mov
jo
xchg
xlat
and
push
or
pop
rcrb
cmp
test
mov
cmp
push
xchg
mov
adc
loopne
test
mov
js
movl
rolb
jnp
mov
sbb
and
call
inc
jmp
jmp
or
adc
adc
or
push
inc
lods
loope
inc
sti
jge
mull
movb
movq
jne
lret
loopne
add
and
dec
or
push
es
mov
mov
add
test
push
sub
pop
cmp
jecxz
sub
ss
mov
cmc
and
inc
jnp
movsb
push
ds
fisubrs
xlat
push
xchg
adc
dec
jge
clc
subb
inc
insb
mov
push
and
lds
push
les
pop
xchg
gs
and
push
test
addr16
or
imul
inc
push
or
and
and
aas
dec
jne
jecxz
adc
ret
pop
adc
into
sahf
inc
add
enter
orb
pushf
add
lcall
jo
dec
inc
sbb
mov
lcall
mov
or
sbb
cmpb
inc
push
addr16
add
jno
pop
addr16
in
jne
fsincos
push
add
mov
adc
inc
pop
add
aaa
mov
push
mov
xchg
subl
scas
xor
imul
and
addl
add
call
subb
adc
and
scas
mov
jmp
pop
jne
inc
inc
mov
push
mov
ljmp
fcoms
scas
mov
enter
add
push
sbb
and
loop
sbb
loopne
or
adc
mov
xlat
jo
popa
cli
add
and
push
mov
enter
jo
xchg
movsb
mov
call
mov
add
adc
nop
sbb
add
cmpsb
cwtl
mov
sub
sub
addb
add
push
add
ss
xor
mov
shlb
shrl
sub
sbb
push
dec
sbb
cmp
xchg
xchg
or
add
pusha
pop
mov
and
mov
mov
or
mov
loopne
in
xorl
add
repnz
loopne
mov
push
call
adc
sti
add
mov
test
test
aad
push
cmc
mov
xchg
das
push
vrsqrtss
rcrl
push
test
and
les
xor
inc
lods
add
adc
shlb
rorb
push
inc
iret
stc
sub
cmpsb
dec
pushf
es
mov
or
mov
mov
dec
clc
pop
xchg
aam
mul
sarb
or
jo
jg
add
add
jae
mov
add
push
out
adc
faddp
fsubl
adc
shrl
mov
sbb
lds
adc
cmp
sbb
mov
js
inc
loop
inc
inc
jge
rcll
test
push
add
in
leave
inc
mov
call
pop
inc
add
push
add
pop
inc
loopne
cmp
shrl
aad
ret
les
jo
sbbb
div
lcall
jl
or
adc
add
add
data16
mov
pop
push
testl
testl
pop
inc
xor
movb
sub
sbb
sbb
lods
int3
outsb
sbb
push
mov
cmp
add
nop
pop
adc
adc
out
push
stc
mov
fmull
lock
xor
mul
rcrb
inc
sbb
call
sub
pop
in
ret
lds
ret
add
mov
daa
pusha
add
pop
nop
hlt
rcl
jb
cmc
hlt
cli
lods
push
cmp
add
adc
aam
and
sarl
inc
push
push
push
out
push
xchg
mov
fistpll
and
or
push
xchg
pusha
loopne
ficoml
jns
inc
sbb
pop
ret
icebp
js
pop
push
inc
or
push
add
loop
and
mov
fnsave
adc
sub
jmp
inc
pusha
pop
pop
stos
mov
bound
xchg
pop
out
push
scas
push
or
push
jo
pop
shrb
js
orb
and
pop
cmp
je
movsb
stc
adc
inc
pop
push
sbb
jmp
iret
jp
mov
push
xchg
mov
add
imul
cmp
jl
push
cmp
and
sub
dec
add
int3
xor
push
je
sbb
clc
sub
jae
sarl
mov
cmp
cmp
add
bound
stos
movl
add
iret
add
sub
xor
testl
icebp
and
test
push
sub
adcl
push
ljmp
cmp
imul
xchg
popa
cmc
push
inc
pop
jmp
mov
mov
movsb
divb
aam
addb
dec
cmp
push
shlb
std
adc
mov
call
push
adc
push
push
sub
push
sbb
adc
mov
pop
lock
pop
sub
ret
pop
dec
sub
and
rorl
push
pop
movsl
inc
mov
sub
dec
adc
stos
lock
loope
inc
push
pop
shld
out
adc
lret
mov
mov
and
adcb
ret
and
js
jnp
cmp
add
popa
je
sbb
sbb
lock
or
fcompl
lods
push
enter
incl
les
pusha
fs
adc
lock
cmp
dec
test
pop
or
pop
jmp
hlt
and
or
or
in
nop
lret
into
out
push
subl
pop
mov
add
adc
add
push
cmp
push
mov
mov
stc
rclb
mov
lea
or
cmp
rcrb
inc
jne
mov
add
icebp
dec
sbb
mov
subb
or
inc
mov
mov
lret
xchg
xorl
cmp
cmc
push
push
inc
inc
adc
push
leave
andl
pusha
or
mov
push
and
mov
inc
fidivs
shr
out
mov
adc
test
adc
movb
je
lods
sbb
fnsave
inc
push
lds
addb
pop
jae
sbb
ret
aam
lods
mov
mov
push
int3
sbb
js
dec
and
add
movsl
and
daa
mov
lret
adc
pop
jo
cli
leave
and
sbb
push
mov
jne
shrl
imul
xor
lcall
xchg
or
adc
insb
jne
movsb
pop
lock
or
dec
inc
loopne
stc
xor
mov
dec
add
add
push
jecxz
mov
mov
shl
fcoml
imul
inc
mov
sub
cmpsb
or
dec
repnz
sub
mov
sub
pop
fwait
loopne
lods
cmp
leave
fs
dec
jno
inc
add
push
dec
ja
in
cmpsb
push
ljmp
ret
inc
stos
adc
cmp
cs
dec
movzbl
mov
and
pop
sub
dec
idivb
dec
jo
popa
hlt
mov
pushf
test
sub
push
dec
sbb
je
or
rclb
lds
and
imul
sub
push
and
push
or
scas
cltd
sbb
sub
xor
mov
sbb
in
std
dec
pusha
cs
rclb
jno
add
push
push
pop
ret
shr
and
ljmp
inc
mov
jg
xor
push
xor
cmpb
cwtl
loopne
sub
sub
add
shll
push
cmpb
pop
insl
sarb
mov
rol
gs
ret
ds
add
cmp
shlb
call
fwait
lea
or
les
xchg
bound
in
adc
push
cmp
rolb
mov
push
adc
andb
and
jmp
and
rcll
pop
ljmp
sub
or
jg
jmp
cmpl
test
sub
push
adc
sahf
and
adc
pop
pop
xor
fadds
mov
rcrb
inc
fsts
sbb
xchg
jo
popf
scas
push
xchg
lods
dec
cli
or
add
pop
add
sbb
pushf
stos
into
sub
mov
idiv
adc
sub
add
mov
mov
push
push
adc
or
addl
enter
add
adc
aad
and
push
je
pop
add
addb
popa
cwtl
test
inc
dec
jg
aad
inc
shrb
negl
cmp
aad
sbb
mov
sbb
dec
popf
sbb
pop
pop
fcomip
mov
movsl
jo
jno
ret
sbb
sub
cltd
mov
sbb
call
inc
inc
add
cmp
pop
push
inc
inc
cs
mov
push
xchg
int
or
aam
je
pop
movsb
or
outsb
jl
notb
daa
nop
test
add
mov
add
or
add
gs
inc
jge
sub
cwtl
adc
test
enter
lcall
subb
dec
loopne
ficompl
adc
jmp
ds
mov
js
test
push
dec
inc
push
xchg
shl
push
or
sub
adc
push
xchg
pop
or
ficoml
or
lods
add
je
test
adc
aam
rclb
mov
cmpsb
mov
jno
lock
inc
loopne
xor
add
inc
xor
cltd
pop
pushf
inc
or
aaa
test
test
push
xor
lds
xor
xlat
lret
loope
shrl
loop
leave
outsb
mov
add
mov
sub
into
clc
add
in
clc
xor
ljmp
sbb
pushf
adc
mov
jl
xor
adc
loopne
mov
adc
add
pop
and
jno
cwtl
mov
push
xor
jae
aas
dec
xchg
shl
jge
mov
icebp
pop
push
std
sbb
inc
dec
cmpsb
mov
sbb
sbb
rcll
sbb
pop
jne
stos
jmp
add
dec
push
add
mov
sahf
or
mov
add
mov
cwtl
mov
lock
add
clc
mov
add
jg
mov
dec
mov
bound
xchg
in
add
in
cli
adc
ja
jo
sub
adc
shlb
mov
xchg
or
jo
mov
aam
push
lods
aaa
hlt
stos
pop
adc
jmp
wbinvd
push
sub
push
xchg
pop
lcall
add
inc
pushw
dec
inc
mov
rcrb
mov
sbb
pop
mov
daa
pusha
pusha
mov
rcrb
cmpsb
sbb
ja
in
cmp
sti
shrl
add
arpl
mov
add
ret
or
sbb
jo
inc
push
adc
flds
mov
int
mov
inc
or
inc
test
insl
ljmp
or
sub
nopl
das
xor
or
jne
daa
lcall
ret
push
pop
mov
inc
cmp
lret
and
add
add
pop
outsb
and
andb
ljmp
push
and
into
push
cmp
cmc
mov
pusha
mov
adc
push
arpl
or
jb
js
imul
repnz
cmpsb
inc
mov
int
std
adc
push
xor
mov
sbb
ret
sbb
in
jae
addb
sub
lods
rcrb
pop
push
movsl
and
fld
fsubrl
fstl
into
in
push
cs
lods
dec
subl
mov
sbb
insb
jno
push
cli
ds
push
aam
cmpsb
add
ret
loop
subps
dec
jo
es
rcl
jp
lret
lret
jae
test
sub
jae
or
insl
fdivrl
aam
in
sub
pop
adc
clc
dec
dec
roll
jl
mov
sbb
ja
adc
ja
imul
aaa
sbb
testb
add
push
outsl
popf
add
lea
mov
enter
orb
sti
push
push
sbb
dec
hlt
daa
inc
dec
or
push
bound
ljmp
rorl
stos
dec
xor
adc
mov
out
mov
pop
lods
xchg
sbb
xchg
rclb
inc
sub
das
xor
adc
sbb
mov
stos
mov
lcall
mov
mov
mov
inc
jo
pop
ja
or
push
lock
repnz
xchg
rcll
mov
or
into
test
push
sbb
sbb
cmp
dec
adc
lea
or
lds
inc
pop
pop
bound
aam
lock
nop
push
cld
jmp
jecxz
rcrb
outsl
add
sbb
jno
out
rorb
inc
push
mov
add
stc
push
jg
adc
sbb
xlat
in
mov
ja
iret
loope
test
cli
add
cmp
mov
rorl
pop
aam
pop
dec
adc
cmp
shrb
add
loope
lock
xchg
add
mov
orl
pop
sbb
cmp
js
gs
xchg
mov
data16
xchg
jecxz
fidivrl
and
dec
sbb
jmp
pop
les
mov
in
sub
xchg
jns
and
call
mov
pop
lods
addr16
inc
add
sub
test
mov
call
dec
push
pop
adc
add
test
add
adc
or
bound
in
add
inc
ja
lds
mov
lret
jo
pop
testl
mov
adc
in
jle
and
icebp
or
sub
and
lds
jo
loope
xchg
stos
lods
jle
gs
or
push
add
sarb
and
outsl
scas
or
rcl
push
mov
or
push
icebp
add
mov
mov
push
xchg
sub
inc
mov
cmp
cmp
test
push
xor
mov
insl
sub
and
stos
sbb
push
cvtps2pi
add
fbld
and
push
or
cli
or
sbb
mov
ljmp
lcall
das
loop
cwtl
getsec
inc
mov
add
and
aam
jp
loopne
push
sub
shlb
call
ret
cli
push
push
stos
inc
mov
fldt
stos
jnp
roll
mov
push
shlb
mov
xlat
rcl
push
cmp
popf
xor
sub
sbb
icebp
jge
roll
mov
lret
sbb
xor
inc
mov
aad
or
in
call
adc
adc
mov
pop
mov
mov
xchg
jns
or
test
adc
lret
mov
cmp
call
push
icebp
sbb
stos
fsub
push
pop
xor
push
or
sbb
fsubrs
mov
mov
pop
xchg
sbb
cwtl
ljmp
push
sbbb
pop
add
cmp
cwtl
popl
andb
test
scas
xchg
sbb
adc
pop
add
push
push
mov
fcompl
or
subl
shrb
movsl
inc
icebp
stos
insl
pop
cmp
aad
mov
lds
negb
mov
pop
test
cmp
push
test
icebp
adc
and
add
test
enter
lcall
out
or
pop
push
dec
xchg
xor
cmp
je
cmp
data16
push
ret
mov
mov
fbld
lcall
or
mov
sub
xchg
into
stos
popf
pop
xor
or
scas
cmp
aaa
hlt
jo
or
fisubl
bound
imul
sbb
enter
aam
jmp
sub
stos
add
push
adc
add
je
ret
rolb
jmp
out
sbb
mov
out
sbb
jmp
jbe
sub
add
or
popf
add
and
adc
inc
and
fidivrs
test
add
test
sub
dec
and
pop
inc
push
jmp
xorb
leave
cwtl
or
ret
rolb
sub
in
adc
call
pop
cwtl
push
mov
popf
fs
aad
jecxz
pop
icebp
sbb
sbb
ljmp
jg
or
cmpsb
mov
push
movsb
xchg
loop
push
lret
pop
cmp
adc
fisubl
sbb
xor
dec
lcall
cld
pop
sbb
add
push
ljmp
sbb
pushf
sub
inc
adc
in
sbb
out
mov
pop
shl
add
dec
jbe
xorb
mov
je
xor
xor
insl
xchg
jle
loope
rolb
scas
in
sub
inc
ret
cli
push
push
add
push
and
cmp
inc
ljmp
out
aam
dec
loopne
rolb
rolb
and
and
dec
movsl
out
inc
sub
mov
imul
rorl
mov
or
push
ret
jle
push
or
icebp
sub
out
pop
outsl
mov
jo
into
push
cmp
xor
jmp
jge
add
cmp
push
mov
jnp
add
loopne
mov
add
loopne
out
or
lcall
inc
xor
call
stc
add
mov
lahf
nopl
inc
adc
mov
and
fldl
push
fsubs
push
pop
fwait
adc
faddl
insl
les
pop
cs
shlb
call
sub
push
into
rorl
add
fldcw
adc
pop
insb
add
sub
aam
inc
or
cmpsl
xorb
mov
add
cs
push
mov
call
adc
jne
inc
add
adc
and
add
push
add
mov
out
pop
pop
push
aam
adcl
rcrl
les
cmp
add
push
jecxz
sbbb
imul
pop
jne
push
dec
push
jecxz
rcll
and
nop
push
nop
mov
testb
rolb
push
lea
cmpsb
aas
hlt
mov
mov
mov
mov
inc
rcrl
lock
loopne
fsub
adc
clc
push
mov
jbe
xchg
fiaddl
out
shlb
arpl
cmp
push
jne
rorl
es
fxch
adc
lods
adc
adc
cmp
icebp
ds
scas
test
pop
xchg
or
fs
inc
push
leave
cmp
add
mov
rcrb
call
cwtl
mov
pushf
push
je
and
adc
cli
and
sbb
mov
stc
mov
push
sahf
jo
add
jmp
ret
lock
subl
lock
mov
test
add
add
in
rcr
fmuls
adc
push
test
sti
sub
rclb
dec
mov
adcl
mov
test
adc
adc
pop
in
mov
add
xor
ret
fsubp
adc
int3
adc
adc
enter
roll
pop
popa
aas
cli
xchg
lret
in
add
sub
xchg
cmpsl
xchg
clc
adc
mov
xchg
adcb
push
pop
sub
int
pushf
mov
add
or
bound
adc
jecxz
movsl
mov
adc
add
xchg
testb
fistpl
sbb
aad
xchg
jg
xchg
and
es
enter
lods
xchg
sbb
push
dec
xor
and
mov
adc
mov
mov
lret
leave
imul
fs
andl
leave
daa
dec
push
or
arpl
push
sbb
mov
subb
jae
push
adc
inc
mov
call
ljmp
adc
test
pop
push
lock
push
sbb
push
mov
mov
call
call
xor
mov
adc
mov
pop
je
lock
xchg
or
shlb
sbb
add
mov
aas
cli
or
loope
call
mov
jmp
stos
je,pn
inc
std
outsb
adc
mov
adc
mov
adc
push
shl
shl
xor
jo
xchg
mov
sub
shlb
mov
add
imul
push
hlt
xor
movsb
sbb
xchg
sub
push
cwtl
adc
dec
mov
and
sbb
mov
pop
adc
xor
jbe
adc
xchg
push
ficoms
push
pop
aam
lods
test
mov
push
push
push
xor
xchg
sar
cmc
cli
lret
pop
mov
sub
xor
mov
addl
lds
push
cmp
shrl
movsb
xor
mov
add
or
add
popa
dec
xchg
fcoms
mov
mov
inc
test
or
push
pop
pusha
or
mov
sbb
and
orb
adc
sub
dec
sbb
mov
das
mov
pop
or
insb
push
cmp
mov
out
sbb
dec
mov
mov
and
inc
outsb
fcoml
sbb
inc
mov
sub
cmp
ret
and
xor
sbb
push
dec
popa
xchg
jb
sahf
cmpsl
sbb
adc
sub
out
sbb
cwtl
pop
cmp
pop
mov
lds
lahf
xor
jmp
sbb
xchg
rorl
rorb
add
inc
jnp
imul
and
imul
test
shrl
adc
pop
inc
imul
inc
mov
mov
push
int
cmp
sti
and
jno
pop
cltd
sub
jmp
gs
cmp
xor
xchg
arpl
and
cwtl
push
movb
push
push
daa
sbb
push
add
sub
ds
inc
mov
test
inc
scas
xchg
test
push
call
xorl
mov
and
sbb
inc
popa
ljmp
enter
mov
add
push
test
adc
adc
cmp
shll
std
les
push
push
pusha
push
pop
aam
inc
cmovp
lock
mov
out
fwait
and
adc
and
sub
cmp
or
mov
adc
lods
leave
sbb
pop
fs
add
shl
enter
icebp
sub
aas
jno
lret
loopne
inc
data16
ret
fs
addb
dec
arpl
addl
sbb
mov
cwtl
push
fistpll
or
jle
sub
addl
adc
jo
movsb
out
popa
mov
rclb
call
loopne
das
sbb
shll
in
fisttpl
push
add
mov
test
push
dec
xor
pop
inc
leave
clc
pop
xchg
add
cwtl
xor
das
mov
repnz
cmp
test
xor
mov
popa
repnz
xor
adc
mov
push
jge
mov
mov
add
mov
cmp
icebp
andb
add
sbb
push
loopne
cmpsl
cmp
es
sbb
and
jl
icebp
add
inc
outsl
repnz
jo
mov
popf
sub
daa
enter
or
xchg
or
xor
add
sbb
pushw
add
mov
mov
mull
sub
sub
adc
outsb
or
int3
mov
int
lcall
xor
fadds
pop
in
aam
xor
loope
push
dec
push
popf
test
or
mov
mov
subb
or
jns
adc
add
mov
xchg
pop
adc
adcl
xchg
push
shl
mov
or
test
les
jl
movsb
cs
mov
sbb
stos
mov
lock
push
adc
ficompl
jne
mov
inc
ret
ja
aad
lea
stos
stos
push
cmp
pop
inc
pop
in
pusha
fsubl
stos
pop
nop
sub
push
sub
or
fdivs
and
pop
dec
xchg
cmp
xor
out
clc
xor
js
push
lea
or
pop
push
adc
add
push
fwait
stos
and
in
inc
jge
loop
scas
rclb
rclb
add
ljmp
sub
push
mov
xor
lds
jge
mov
lret
or
pop
in
adc
push
push
lea
push
push
fsubl
lret
pop
icebp
mov
or
push
stc
shll
test
or
ja
stc
and
test
sbb
dec
sub
mov
test
mov
jp
push
mov
pop
scas
scas
shl
inc
inc
sub
ret
jmp
and
inc
add
mov
icebp
inc
fstpl
adc
enter
sub
push
jo
inc
sub
fs
pop
sbb
sub
mov
add
mov
cmp
je
push
test
rcll
cld
sub
push
sbb
and
and
mov
xchg
mov
pop
sub
cmp
push
icebp
jg
pusha
ret
adc
push
cmp
rep
push
pop
xor
add
in
mov
or
dec
pop
or
push
xor
sub
inc
popf
add
add
xchg
les
adc
rorb
mov
jp
fmull
lock
mov
fadd
imul
sub
in
add
das
push
mov
jp
jmp
aaa
push
lock
js
mov
cwtl
mov
xchg
dec
es
adc
sbb
lea
sbb
push
das
or
notb
dec
dec
push
push
adcl
mov
cmp
or
add
xchg
cwtl
adc
inc
ds
push
insb
rcl
push
xor
ljmp
and
inc
lret
xorb
and
icebp
sbb
add
daa
dec
or
xor
dec
cs
xor
cmp
mov
das
test
jg
aaa
sub
leave
imul
add
fs
push
add
std
add
pusha
nop
push
push
movsl
out
or
push
mov
pop
xchg
std
push
jns
and
or
lds
xchg
sbb
push
inc
push
aam
pop
call
xchg
push
mov
loope
adc
icebp
jae
stos
lcall
push
iret
mov
ret
test
int
aad
cmpsl
ret
inc
xchg
cmpsl
stos
push
or
push
add
add
xor
cltd
push
fisubl
add
sbb
xor
cmpb
adc
test
add
sbb
test
fildl
shrl
or
shlb
push
add
lret
cmp
push
mov
inc
adc
sbb
inc
mov
mov
xchg
shl
in
loop
xchg
mov
mov
add
rcll
or
mov
xor
roll
scas
mov
lret
add
pop
add
enter
mov
clc
sbb
movsb
ljmp
aam
dec
sub
scas
cmp
jb
pop
sarl
mov
dec
aad
xchg
adc
pushf
je
adc
pop
fsubrl
cwtl
push
andb
and
xchg
push
repz
adc
push
daa
and
testb
mov
sbb
lret
pop
jbe
arpl
pop
test
mov
lcall
push
mov
loop
or
mov
movsl
xor
mov
push
sbb
push
inc
mov
mov
into
cmp
xchg
push
stos
ds
or
orl
mov
cwtl
adc
mov
imulb
daa
mov
stc
sbb
fsubl
push
jp
add
sub
ljmp
mov
iret
add
pop
add
and
dec
cwtl
mov
mov
inc
xchg
xlat
ret
mov
adc
and
mov
sub
stos
jle
mov
pop
vsubps
add
jp
cmp
js
shlb
xchg
add
mov
xchg
lods
popf
push
mov
leave
loopne
and
loope
mov
add
mov
rolb
in
test
push
and
cmc
stc
inc
jmp
and
adc
fildl
test
sub
cmpsb
mov
stc
sbb
cmp
lods
push
popa
push
sub
add
pop
add
outsb
fldl
sbb
inc
mov
in
mov
ljmp
add
sbbb
dec
inc
fdivrl
aaa
push
ret
push
mov
add
dec
fmul
pop
add
std
adcl
or
rorb
pop
leave
add
pop
dec
adc
loopne
daa
rorb
push
inc
sub
inc
adc
imul
pop
dec
dec
mov
stos
sbb
sub
inc
mov
popf
mov
shll
sbb
jge
xchg
sbb
add
clc
orb
ret
adc
mov
daa
stc
push
popa
mov
xchg
sbb
aam
and
pop
mov
icebp
mov
lds
pop
mov
orb
push
push
push
int
outsb
fwait
jbe
xchg
sub
add
js
nop
fisubrl
sub
lock
and
jg
sbb
mov
adc
rol
push
or
sbb
pop
mov
scas
cwtl
ljmp
sub
push
test
jl
or
and
push
pop
sub
or
inc
push
dec
lds
or
pop
mov
mov
rorl
ret
sbb
or
inc
push
sbb
mov
mov
lock
leave
lods
mov
or
push
sbb
data16
mov
adc
clc
push
pop
adc
orb
rolb
inc
roll
icebp
sbb
popa
loopne
and
inc
adc
dec
push
lret
mulb
jb
adc
pop
cmp
sub
mov
enter
sub
fs
sbb
aas
adc
push
jbe
ret
push
sub
clc
add
dec
stc
mov
sub
loope
mov
cmp
push
pop
push
rcrl
xor
out
push
jb
push
sub
sub
or
dec
test
push
pop
jnp
sub
mov
stc
jo
lcall
mov
enter
jp
push
inc
into
inc
add
push
in
jnp
mov
pop
inc
insb
mov
pushf
loope
sbb
or
fisubrs
pop
les
mov
push
pop
hlt
mov
add
mov
mov
inc
push
test
xor
loope
pop
mov
sbb
ret
ret
test
rcrl
andb
aad
and
mov
test
movsb
ret
cmp
jae
sub
lcall
and
test
push
test
ret
or
cmp
add
fs
test
test
inc
push
fistl
push
inc
dec
add
mov
and
rorl
fisttpll
add
shl
push
xor
enter
xchg
sbb
dec
lock
out
sbb
pusha
or
pop
lock
ficoms
push
test
inc
push
push
cmp
inc
nop
jne
ds
or
ljmp
mov
push
daa
mov
xchg
cmpsl
pop
and
subl
call
test
lret
adcb
push
adc
dec
add
scas
cmp
cmp
sbb
or
popw
fcoml
push
xor
in
sar
mov
addr16
lret
cpuid
scas
sub
xchg
stos
adc
addr16
adc
rorl
cmpsb
imul
not
push
adc
pop
jg
adc
mov
imul
shlb
ret
loopne
dec
imul
data16
mov
cmp
add
icebp
jo
sub
dec
mov
pop
dec
inc
adc
ret
adc
cwtl
sub
aam
out
fistpl
xor
negl
subl
add
loopne
mov
lret
es
push
mov
cmp
adc
xlat
and
mov
imul
push
arpl
addr16
push
cmc
jo
aad
les
xchg
mov
cwtl
fsub
inc
cmpsb
or
out
test
jo
mov
sbb
fwait
adc
cmp
adc
jp
mov
popf
or
mov
ds
cmp
cmp
sbb
std
push
rcl
xor
add
aad
xor
in
mov
and
faddl
push
add
adc
adc
xchg
xchg
mov
xor
mov
push
adc
adc
call
push
dec
scas
dec
leave
jno
inc
lods
mov
insl
xchg
or
rcl
push
xor
and
leave
add
mov
adc
adc
sarb
xor
adcb
xchg
loopne
sub
out
cwtl
add
test
jbe
or
xor
loope
adc
enter
test
sbb
es
loopne
int
out
mov
jo
and
mov
int
inc
sub
xor
push
pop
xor
clc
aad
add
add
inc
push
sti
adc
sbb
ja
push
mov
fldenv
and
mov
aas
call
pop
inc
fdivrl
adc
cs
sub
xorl
pop
add
xor
jno
and
in
sahf
imul
ljmp
mov
push
lods
adc
mov
push
ret
shll
aam
mov
rcl
leave
std
insl
xchg
mov
add
or
xchg
mov
lcall
adcl
and
or
xchg
popa
test
call
lock
cli
or
xor
cmc
or
jnp
push
jno
push
int3
and
call
jmp
sub
repz
cli
pop
xor
call
sub
mov
arpl
jp
insl
sbb
mov
dec
xor
jp
sbb
loope
fcoms
push
mov
dec
stos
push
cmp
add
outsl
mov
jno
adc
adc
mov
aam
and
push
pusha
adc
and
rclb
mov
icebp
loop
mov
jge
cmp
sbbb
push
orb
adc
xchg
icebp
mov
or
push
or
cmp
xor
dec
test
fsubrs
test
mov
lods
or
and
pushf
in
les
or
addr16
loop
push
mov
ss
cmp
push
push
clc
dec
dec
adc
std
rolb
enter
shll
loopne
mov
mov
stos
lock
push
test
dec
leave
aas
inc
mov
call
add
push
jle
cltd
lcall
mov
add
test
xchg
lock
pusha
push
loope
push
mov
add
pop
dec
scas
rdpmc
inc
dec
mov
adc
jle
mov
pop
ret
mov
xor
sub
mov
add
sbb
sbb
dec
sbb
ljmp
mov
add
lds
jo
adcl
dec
and
or
loop
insb
mov
inc
push
pop
cmpsb
jge
xor
ret
mov
xor
pushf
add
adc
and
icebp
cmpsb
pop
lods
jb
mov
inc
mov
inc
negl
sbbl
add
icebp
movsb
add
mov
sub
cmp
sbb
sbb
hlt
shlb
je
jo
mov
inc
gs
aas
pop
mov
fwait
push
aas
enter
inc
fs
les
sahf
mov
mov
add
push
vmread
push
xchg
mov
dec
loop
out
add
add
pop
xor
mulb
pop
add
stc
out
cltd
inc
or
out
xchg
aam
adc
pop
lock
jp
decb
push
sub
adc
pushf
aam
leave
adc
or
lret
pop
or
fmuls
dec
xor
aad
or
imulb
add
sub
ret
jp
lcall
leave
xchg
add
cpuid
loopne
or
aam
mov
aas
aam
cmp
rolb
mov
push
and
lea
ret
sub
push
sub
adcb
insl
push
iret
xchg
or
stos
adc
ss
jns
rcll
adc
ds
cmpsb
jle
jg
test
xor
in
fidivl
pop
sbb
mov
and
xchg
out
int3
or
ret
adc
test
push
je
out
and
or
repnz
mov
daa
or
adc
cmp
xchg
or
add
push
icebp
les
popf
lcall
sar
push
adc
adc
mov
rorb
sub
cli
inc
adc
or
push
adc
xchg
mov
xchg
test
jecxz
add
push
das
xor
lods
fxch
ficompl
push
cmpsb
inc
scas
ds
cmp
cmpsb
int3
cmp
add
sti
xor
test
mov
mov
rcll
sbb
push
push
mov
mov
es
into
aas
add
push
cmpl
push
mov
cmp
lret
pusha
adc
adcb
out
mov
add
lahf
or
sbbl
adc
iret
add
sub
pop
test
or
rcrb
imul
adc
test
mov
mov
or
xor
sub
xchg
idivb
add
and
mov
sbb
sub
aas
ret
cmpsl
xorb
cmp
inc
pop
dec
add
xor
jp
push
or
jns
mov
and
lretw
add
fcompl
rorb
rorl
bound
xchg
jb
or
mov
adc
in
adc
jbe
jmp
and
xor
sub
mov
cltd
bound
cmp
pop
loop
pop
add
pop
xor
xchg
ret
push
roll
enter
nop
pop
mov
imul
test
arpl
push
push
scas
roll
mov
add
sub
nop
fisubs
add
ds
and
mov
in
shlb
dec
jb
pop
inc
cwtl
add
xor
or
pop
push
adc
dec
das
adc
fdivrl
gs
sub
jle
ja
into
push
push
adc
and
and
xor
xchg
cltd
int3
jecxz
push
mov
mov
jge
rorb
mov
sub
adc
mov
push
inc
cmp
sub
xor
push
es
and
cltd
mov
sbb
or
push
and
icebp
cmpps
xchg
jo
adc
dec
xor
inc
stos
mov
adcl
pop
dec
push
nop
pop
adc
cmp
cmp
test
adc
pop
jae
mov
notl
or
adc
inc
rclb
out
adc
aad
inc
add
pusha
js
cmp
lret
lret
pop
pop
inc
enter
mov
pop
or
mov
add
sub
repnz
sbb
push
fwait
adc
pop
orl
fsubr
push
add
xor
addb
scas
inc
add
sarl
int
enter
repnz
mov
std
movsb
mov
leave
pusha
mov
loopne
rol
les
scas
dec
icebp
lea
dec
adc
inc
jno
das
mov
sbb
jmp
out
pushf
push
icebp
popa
adc
or
adcl
and
push
in
pcmpgtb
sbb
dec
jbe
inc
pop
rclb
sbb
add
mov
xor
ret
mov
cwtl
ret
out
mov
sahf
ja
or
mov
jns
enter
push
cmp
shrb
arpl
outsl
and
adc
xor
in
mov
js
and
test
push
add
add
xlat
adc
cmp
add
rcrl
int3
inc
or
sbb
cmp
mov
add
add
pop
gs
cmpsb
add
mov
and
inc
ret
lods
lret
mov
pop
mov
pop
add
orb
or
mov
xchg
mov
adc
cmpsl
or
jae
mov
inc
loope
adc
add
xor
mov
push
push
add
andb
adc
test
or
dec
inc
mov
add
xchg
add
sbb
sbb
mov
mov
add
and
lret
cmp
insl
or
mov
or
xchg
and
outsl
imul
imul
lret
add
pop
xor
in
push
scas
lcall
into
adc
pop
cmp
jo
push
int
cwtl
scas
push
mov
cli
adc
sti
testl
or
aad
push
push
inc
out
mov
scas
lock
rorb
inc
popa
xchg
pushf
adc
pusha
dec
cltd
cmpsl
xchg
dec
sbb
and
xor
imul
mov
pushf
loop
mov
sbb
adc
insl
add
adc
inc
or
cmp
mov
mov
roll
mov
test
jp
lea
and
add
std
sub
jle
hlt
mov
es
js
push
jo
xor
pop
adc
imull
inc
fs
push
ljmp
loopne
mov
cmp
out
ss
pop
add
mov
cwtl
jo
ret
or
rcrb
pop
adc
xorl
push
or
push
add
bound
pop
in
xchg
andl
hlt
mov
cwtl
inc
insb
leave
jmp
xchg
push
mov
push
mov
cmc
adcl
mov
add
sub
sub
pusha
aad
lock
push
add
mov
inc
stos
sbb
xor
sub
sbb
push
arpl
popf
aaa
push
pushf
push
rcr
popa
in
lret
inc
mov
leave
jbe
pop
lahf
add
out
mov
pop
pop
inc
pop
lea
push
or
pop
or
add
mov
push
pop
add
xchg
add
inc
popf
or
jb
mov
loope
lods
ret
push
clc
lea
in
and
sub
mov
sysret
push
lods
jno
or
ljmp
pushw
pop
jnp
and
sti
lcall
mov
lds
jnp
cld
ret
xchg
or
call
test
sbb
or
cwtl
pop
add
jo
pushf
and
sub
adc
add
or
into
xor
xor
cwtl
add
xchg
loopne
cwtl
js
or
push
adc
scas
pop
rclb
or
add
xor
push
rorb
cli
stos
jbe
xor
stc
sub
orl
xor
xor
lds
mov
in
adc
lcall
test
adc
pop
adc
xorb
jp
push
scas
push
pop
xor
das
inc
jmp
push
push
cmp
inc
cmp
add
cmc
mov
push
adc
sbb
sbb
pop
and
push
stos
das
sub
or
or
jno
cmp
or
gs
sbb
or
je
xor
sub
insl
sarl
test
out
pop
leave
mov
xor
leave
ret
dec
icebp
outsb
ret
push
and
sub
mov
lahf
loop
mov
push
push
mov
call
dec
les
rorb
mov
mov
mov
or
pop
lret
rcll
mov
insb
adc
pop
test
jne
sbb
std
leave
fdivs
sbb
and
adc
testb
fisttpl
adc
sbb
pop
sbb
adc
mov
add
cs
sub
lea
push
das
lock
mov
testb
je
mov
aam
mov
jmp
push
pop
sbb
and
and
push
jl
dec
lcall
push
ds
mov
mov
mov
push
push
adc
jbe
or
pop
ret
mov
jne
push
jge
cmp
loop
xchg
add
xor
je
add
cmp
out
das
daa
dec
push
dec
das
and
jmp
fstps
inc
and
mov
add
idivl
mov
push
outsl
jecxz
iret
add
add
ret
pop
push
es
mov
or
push
pop
divl
sub
adc
cmp
jne
sbb
jge
sub
sub
mov
outsb
mov
mov
mov
and
out
or
lea
sub
push
pushf
jl
or
jae
pop
cltd
sbb
jl
repnz
adc
sbb
jne
or
ret
subl
repnz
pop
mov
mov
sbb
push
mov
enter
mov
xchg
jo
jmp
ret
jo
sbb
xor
or
or
aaa
cmp
or
pop
je
dec
mov
outsb
mov
or
jne
outsb
pop
mov
pusha
or
pop
jmp
daa
loop
mov
das
insb
dec
push
int
mov
mov
mov
lock
sub
scas
shl
xor
aam
push
xor
push
movsb
inc
mov
outsb
cmpb
fs
and
jo
fistpll
sarl
add
dec
xchg
pop
jle
cmp
mov
pop
jbe
pop
cmp
aas
xchg
dec
cmp
xchg
bnd
iret
test
cmp
popl
cld
sbb
push
cmp
sti
mov
push
rcrl
js
pop
jmp
call
incl
push
or
jmp
xor
clc
xor
leave
mov
push
mov
push
popa
cmp
push
insl
je
lea
add
jne
jae
cmp
jne
out
adc
mov
inc
cmp
sbb
inc
cmp
lcall
mov
cmp
jne
mov
inc
pop
je
test
dec
movzbl
in
outsl
sub
jmp
je
inc
jmp
cmpb
mov
pop
or
jbe
inc
or
ja
xor
add
mov
stos
push
push
xor
cmp
sub
mov
hlt
xchg
cmp
je
cmp
je
inc
out
push
sub
lea
add
lret
mov
mov
pushf
pop
cmp
mov
ljmp
scas
int3
sbb
or
std
cmp
cmp
mov
mov
pop
inc
cmpb
and
cmp
mov
xchg
sub
pushl
js
pop
bound
add
aaa
jne
pop
incl
call
push
add
add
scas
insb
mov
push
mov
lock
push
push
ja
dec
sbb
ret
fmull
mov
mov
push
add
inc
sti
sti
cld
push
push
push
lahf
push
orl
popa
aam
sbb
mov
insb
das
daa
and
push
push
xor
cld
daa
adc
pop
les
sbb
cwtl
dec
sbb
xorl
jne
jecxz
or
add
sub
jle
aaa
add
mov
cmp
inc
mov
inc
cmp
sub
mov
inc
pop
loope
je
add
mov
inc
std
fcoms
jmp
or
andb
inc
mov
fsubr
inc
sbb
inc
push
add
dec
fiadds
sbbl
mov
inc
and
ficomps
jne
jne
dec
mov
sub
jmp
idivb
sub
loopne
sub
ror
icebp
pop
enter
adc
add
sti
mov
imul
test
pop
jne
inc
inc
jmp
xchg
das
fsubrl
sub
ret
add
or
push
jecxz
jmp
andl
mov
mov
add
dec
test
push
pop
inc
jne
andb
aam
fisttps
mov
je
je
sub
adc
lods
sbb
push
pop
sbb
add
cmovo
adc
xlat
xchg
push
cmp
add
daa
mov
pop
sti
pop
ret
dec
inc
mov
push
mov
mov
sbb
add
or
dec
jnp
hlt
ret
ds
pop
inc
inc
cmp
pop
pusha
addr16
int3
ljmp
sbb
insl
inc
or
lods
add
cmp
test
inc
or
jne
push
repnz
imul
inc
add
sub
inc
and
call
xor
xor
sbb
and
and
movsb
scas
mov
pop
or
adc
add
ret
jmp
fs
pop
or
jne
movsl
test
je
pusha
mov
je
inc
cmp
add
xchg
mov
dec
movl
mov
jmp
mov
mov
arpl
pop
pop
dec
xlat
or
orb
addr16
outsl
repz
pop
sbb
and
jecxz
ret
jae
outsl
add
andl
out
pop
into
movb
mov
pop
jmp
mov
enter
lock
jns
cmp
in
or
cmp
pop
add
cmp
push
clc
jl
divl
rcrb
jge
mov
lcall
jae
mov
sub
popl
pusha
or
xlat
fmuls
mov
add
adc
xor
mov
push
mov
adc
test
je
dec
lock
loop
mov
inc
lcall
push
xor
and
shl
sub
ss
or
shll
add
in
mov
mov
mov
add
inc
cmp
jl
pusha
pop
sub
cmp
decl
ss
das
and
push
enter
jmp
ret
dec
neg
sbb
cmc
or
jp
push
jo
xor
or
ret
ds
orb
sub
or
jne
or
add
imul
bound
xchg
dec
ret
pop
push
sbb
pop
test
pop
mov
pusha
inc
das
jne
xor
mov
je
imulb
inc
cmp
loope
sub
sbb
lcall
pop
adc
ficoml
pop
pop
pushl
push
pop
fstp
sbb
popf
add
fisubrl
mov
adc
inc
lods
int
stos
insb
inc
mov
sbb
sbb
mov
push
into
es
outsl
pop
jge
add
push
dec
xor
xchg
call
enter
push
jle
mov
punpcklwd
jo
push
nop
ret
int3
add
push
sbb
aam
push
lret
dec
sarb
cli
pop
sub
testl
aad
je
ljmp
adc
adc
push
push
add
push
add
ss
and
mov
mov
cmp
and
outsb
or
mov
jne
outsl
pushl
jge
push
call
ret
fs
into
cltd
fimuls
call
hlt
std
jno
in
push
xchg
cmp
mov
fwait
mov
inc
or
or
cmp
add
lods
std
add
ret
push
inc
xor
pop
inc
xor
pop
aaa
fimuls
or
sahf
pop
or
mov
push
insb
testl
mov
shlb
jae
insl
icebp
pop
jnp
shll
mov
out
mov
lea
test
pop
pop
inc
insl
mov
xor
and
mov
adc
push
or
or
jo
mov
mov
mov
push
or
or
fidivs
xor
jmp
mov
jmp
pop
test
lods
fidivrl
pop
push
xchg
mov
cmp
push
add
push
and
cmp
and
addl
ss
jge
aam
test
mov
sbb
dec
jge
clc
pop
loop
adc
roll
or
leave
mov
pop
orb
mov
mov
icebp
fldl
addb
lods
popa
outsb
loope
es
insb
cltd
xchg
cltd
call
test
clc
mov
cli
jne
icebp
incb
xchg
sbb
xor
jbe
outsl
rcll
inc
in
push
push
pop
adc
insl
jno
jb
pop
inc
inc
pop
jbe
outsl
gs
sub
push
push
clc
or
andl
add
clc
inc
call
outsb
sub
dec
addr16
lea
sbb
lahf
int
mov
and
adc
and
mov
in
dec
sub
xor
insb
ss
push
test
dec
aas
jb
sbbb
inc
test
nop
inc
mov
pop
in
nop
and
mov
cmp
cmp
imul
push
fwait
xor
sbb
call
pop
push
aad
cmpl
or
outsb
dec
adc
xor
pop
mov
sbb
mov
call
mov
add
adc
add
sbb
mov
mov
mov
sbb
out
mov
movzwl
xchg
cmpsb
and
add
xor
sbb
lods
cmp
sbb
pop
adc
or
or
add
fisttps
push
pushl
sbb
js
sbb
inc
cmp
push
call
jne
fnstcw
cmp
popa
and
andl
lods
jmp
cmp
rep
stos
mov
xchg
cmpb
mov
lods
rorb
int3
jnp
and
inc
incl
xchg
xchg
adc
ljmp
jge
stos
lea
dec
and
dec
je
mov
not
lods
mov
add
xchg
ja
adc
mov
ja
or
cmc
inc
inc
cmpb
aaa
fsubrs
enter
jge
jb
out
shll
or
icebp
push
int3
lods
push
mov
movups
jl
push
shlb
mov
push
inc
jns
jno
lds
lods
lret
mov
jb
push
cmp
mov
jmp
or
clc
je
fiadds
mov
push
jo
pusha
jne
negl
xchg
cs
add
insb
sbb
daa
xchg
or
sub
mull
mov
mov
or
inc
cwtl
adc
mov
leave
std
xchg
cld
cmp
adc
cmp
or
out
rcll
lea
fstps
push
push
mov
xchg
lock
or
adc
jge
sbbb
rcrb
int3
pop
cmp
mov
iret
pop
xchg
sub
adc
push
push
aas
sarb
shl
xor
mov
jb
mov
movb
sub
push
repz
push
lea
inc
mov
shr
test
and
xrelease
std
stos
inc
inc
mov
xor
rcrb
push
in
cli
mov
lea
push
mov
sbb
adc
sbb
fs
push
xor
sub
cld
xor
daa
loopne
fcmovnbe
jb
lret
jb
mov
test
pop
mov
add
mov
cmp
outsl
or
adc
pop
sar
insl
sbb
sbb
inc
inc
adc
faddl
mov
inc
jb
packssdw
mov
enter
mov
ss
sbb
ja
and
and
dec
dec
mov
subl
pop
adc
push
xor
jmp
pop
jp
push
push
cmp
jge
sbb
or
lret
insb
mov
fimull
loop
loope
pop
push
imul
icebp
jnp
pop
jmp
lea
sbb
imul
add
add
jmp
lret
cmp
jne
mov
mov
inc
adc
lock
lods
test
clc
add
and
dec
out
jb
lods
push
add
int
pop
jmp
xchg
xchg
mov
add
jmp
std
jmp
cld
pusha
or
fcomps
inc
loop
mov
inc
bound
add
out
jmp
mov
fsubl
mov
cwtl
imul
xor
sbb
outsl
stc
daa
test
cmp
insb
jecxz
adc
inc
and
xchg
lods
jmp
adc
add
scas
ret
sarl
loopne
and
add
inc
sbb
jo
jne
int
adc
loop
xor
hlt
ficomps
inc
push
jo
sbb
add
ss
adc
insb
movl
add
pop
or
adc
jb
or
inc
pop
or
sbb
xor
xchg
pushf
xor
adc
dec
xor
imulb
rol
std
cld
fidivrl
mov
aad
inc
or
sbb
andl
clc
jb
in
insb
test
call
test
movsl
jmp
adc
jne
mov
ss
loopne
enter
push
negl
lea
movsl
pop
pop
mov
pop
and
dec
jo
rorl
mov
add
mov
fsts
dec
add
and
add
add
into
and
inc
aas
mov
xor
xlat
push
out
add
pop
aam
sar
aaa
dec
mov
mov
mov
call
call
hlt
xor
xor
clc
clc
cld
inc
mov
cli
clc
shll
or
lock
sbb
pop
fiaddl
test
lds
ss
adc
adc
sub
mov
or
cmp
jg
or
adc
ja
nop
neg
and
mul
in
stc
sub
cwtl
and
lcall
add
lock
add
out
push
cmp
dec
pop
dec
push
mov
or
pop
xchg
pop
mov
nop
out
out
add
mov
loope
stos
sub
or
inc
pop
test
inc
xor
shll
push
pop
fs
xor
inc
shll
sbb
sbb
xor
rcrl
adc
adc
dec
shll
add
je
popa
and
add
dec
inc
sarl
sub
jae
adc
pop
or
movsb
fists
mov
ja
ljmp
or
cld
daa
fs
xor
sub
or
mov
push
cwtl
cmc
mov
and
sbb
or
inc
push
cmp
or
popa
cltd
xchg
sbb
jne
cmpsb
pop
or
pusha
js
mov
insb
mov
add
mov
pop
test
and
inc
mov
push
sub
push
incb
lods
aad
test
pop
push
or
and
jb
jnp
imul
test
shlb
adc
jno
pop
mov
cmpb
out
jp
imul
fidivrs
mov
inc
cltd
jge
mov
pop
inc
dec
dec
or
test
or
jne
rcrl
aas
dec
pop
or
mov
dec
adc
add
mov
sbb
sub
scas
lock
lock
lea
xlat
and
decb
sub
insb
or
and
jmp
loopne
sub
and
jns
int
mov
adc
add
jbe
mov
or
sar
icebp
aas
jnp
fst
mov
pop
das
mov
int3
xor
bound
mov
mov
dec
pop
cmp
cmpsb
jbe
repz
mov
inc
ds
jbe
cli
pusha
fistl
mov
push
mov
xor
mov
adc
popa
shll
mov
sub
mov
pop
pop
into
or
adc
loope
or
cmp
in
imul
mov
mov
add
push
lret
dec
arpl
add
jg
xchg
dec
paddd
mov
jae
scas
cmovbe
mov
mov
or
or
sbb
sti
fsubr
sub
lea
sbb
sbb
or
mov
push
cli
add
sbb
cli
lcall
fisttps
or
loope
add
push
adcb
sti
mov
mov
push
call
pop
xor
pop
and
push
or
cmp
out
roll
paddd
jnp
test
or
jns
adc
mov
cs
insb
sub
jo
pop
mov
mov
or
stc
hlt
adc
sbb
in
add
xchg
cmp
movsl
dec
adc
push
lea
push
push
std
xor
out
imul
mov
add
and
ljmp
inc
mov
shlb
out
data16
ds
cmp
sub
dec
pop
jbe
cwtl
ss
pop
push
xor
push
sbb
loope
sub
out
sub
mov
jmp
es
xor
shr
push
or
mov
mov
cmp
lret
jae
mov
cmp
imul
outsl
sub
decb
iret
jne
clc
adc
lcall
out
jne
mov
cmp
es
add
pop
and
push
jnp
fnstcw
aaa
jmp
es
cmp
popf
stos
insl
test
test
mov
pop
pop
mov
sbb
lcall
sub
xchg
fcmovbe
jge
test
mov
cli
dec
mov
mov
mov
nop
inc
mov
mov
jo
push
fnsave
inc
or
mov
jne
add
movsb
xchg
adc
sbb
les
and
and
je
mov
mov
pop
pop
dec
jbe
push
into
jne
in
out
push
push
fs
test
jl
shl
inc
jmp
mov
push
stc
add
ljmp
jnp
incb
cwtl
mov
jle
pop
aam
or
xchg
and
and
adc
mov
inc
jl
pushf
shl
in
and
mov
push
out
add
pcmpeqw
loope
and
jmp
xor
and
sub
outsb
xor
sbb
ss
sub
in
test
add
mov
jne
add
test
iret
add
test
movsl
and
add
fs
out
sub
or
les
bound
mov
mov
cmp
xchg
or
insl
or
das
sub
nop
mov
jnp
mov
lods
push
mov
out
or
push
je
mov
mov
cld
mov
sub
shll
add
xor
lahf
mov
and
jne
pop
lods
popf
push
lea
dec
cmp
or
mov
inc
add
rcll
xchg
add
mov
fnstsw
mov
push
push
clc
xorb
mov
jle
or
pushf
sarb
lcall
lods
and
adc
push
iret
pop
pop
scas
and
push
sbb
mov
js
fsubrs
and
mov
incl
mov
mov
inc
add
jno
mov
or
fcmovnb
dec
loopne
ret
aaa
mov
sbbl
jbe
arpl
add
dec
mov
mov
shl
jns
mov
es
xor
addb
sar
sub
mov
xchg
add
cli
ja
lea
out
push
orl
in
data16
push
movl
jmp
dec
add
sub
adc
push
sub
mov
or
add
push
add
mov
jo
inc
mov
xor
enter
mov
arpl
cmpsb
or
mov
lods
addb
sub
stos
leave
push
fs
sub
xor
test
inc
out
mov
mov
popa
fs
adc
sti
cltd
sbb
add
adc
or
insb
mov
or
push
call
cmp
add
push
adc
add
dec
ror
cmp
and
cs
xchg
jp
mov
insl
call
adc
sub
mov
jno
jne
jmp
inc
inc
mov
clc
push
inc
inc
dec
je
adc
pop
mov
jmp
sbb
je
and
test
ret
adc
push
pop
je
cmp
dec
adc
out
insb
sbb
les
cmp
arpl
cmp
xchg
fisubrs
or
adc
cmp
sbb
imul
xor
push
icebp
push
popa
mov
mov
pop
jne
mov
test
pop
inc
dec
jg
stos
enter
nop
jne
hlt
sub
push
push
or
xor
or
jne
sbb
push
sbb
and
mov
pop
cwtl
arpl
and
inc
push
nop
pop
adc
mov
cmp
jo
pop
or
call
cs
mov
push
sbb
sbb
pop
and
sbb
dec
fsubrl
insl
in
roll
mov
ficompl
andb
mov
mul
or
aaa
and
sbb
imul
in
test
test
mov
sbb
mov
and
push
mov
fimuls
pop
jnp
icebp
jmp
lock
adc
cmp
je
push
dec
fsubl
in
mov
dec
in
sbb
mov
jbe
dec
divl
inc
or
sbb
mov
mov
jg
fidivl
dec
rorb
sub
addr16
add
nop
lods
sub
add
loopne
movsl
and
adc
out
xchg
jne
jge
je
push
fs
je
jo
jne
add
push
mov
push
int3
xchg
aad
mov
adc
jno
rclb
or
dec
or
sub
es
dec
xchg
repz
out
call
push
add
popa
xor
outsl
add
xchg
lods
jns
lea
push
push
andb
pop
push
push
movsl
mov
push
xchg
mov
into
xchg
pop
mov
xlat
sub
push
js
push
and
xor
rclb
dec
lea
xor
mov
pop
loopne
je
adc
mov
gs
jl
pop
sub
psraw
sub
or
in
mov
dec
sub
push
pop
sbb
divb
push
push
clc
xlat
xchg
pop
dec
push
ds
mov
or
ret
xor
int3
add
subl
popf
loopne
je
sbb
mov
stc
add
cs
sub
sub
addr16
out
insl
push
add
add
push
adc
ficoms
lret
je
rep
cmp
and
pop
cmpsb
dec
mov
data16
mov
push
push
pushl
enter
adc
inc
je
loopne
or
xor
xor
pop
sub
push
scas
add
mov
adc
mov
adc
add
fdiv
mov
xor
add
and
or
mov
mov
adc
xor
push
add
dec
shll
adc
and
adc
inc
shll
mov
pop
add
mov
lahf
pop
orb
push
cmp
push
jle
sub
add
jae
push
mov
or
loope
jb
test
out
cmp
xor
shrb
xor
xor
cld
clc
hlt
in
xor
xor
call
xor
add
fadds
add
lret
fildl
out
jb
outsb
je
insl
and
jb
jle
pop
mov
push
dec
dec
push
push
aas
and
int
push
add
dec
inc
add
inc
fucomi
das
imul
push
xor
cmp
sub
jge
lret
bound
and
imul
push
div
int
daa
aaa
outsb
outsl
je
add
add
std
push
arpl
data16
outsl
ja
cmp
gs
push
outsl
outsb
aaa
ss
aas
add
je
xor
jbe
jb
fidivl
xor
or
fistl
lds
pop
xor
sub
mov
mov
pop
das
pop
push
fsub
pop
aaa
testl
xor
xchg
add
jbe
fs
sub
inc
test
inc
and
gs
and
push
and
insl
jne
lods
xor
mov
arpl
sbb
xor
mov
cs
pop
imul
and
add
addr16
push
fcomp
popa
insl
and
ss
pushw
xor
dec
adc
enter
sub
sub
cmp
out
push
popa
jb
jne
jae
xor
mov
mov
outsb
subb
cmp
pushf
mov
adc
dec
sub
inc
cmp
push
imul
push
mov
dec
imul
sub
push
inc
push
and
push
aam
insl
fsubs
ret
add
jae
sub
insb
ja
sbb
je
popa
bound
out
fdivs
inc
add
push
scas
jne
adc
pop
fcmovne
xorps
jae
popa
addr16
outsl
js
xor
jne
and
sub
mov
pop
add
adc
push
test
jbe
or
xchg
add
adc
add
mov
xor
fldt
mov
fdivs
push
nop
jge
js
insb
daa
add
addl
or
or
sbb
fs
lea
mov
fs
nop
fs
push
fs
xchg
xchg
jmp
add
js
or
mov
push
or
and
sbb
daa
decl
add
add
or
enter
or
adc
adc
dec
sahf
cmp
adc
sbb
jns
in
sbb
sbb
dec
sahf
cmp
js
jns
jp
leave
xchg
cld
and
adc
push
rclb
xor
dec
jge
mov
xchg
add
add
leave
inc
jle
das
movsb
add
jns
and
in
movsl
sbbl
sbb
fisubl
pop
inc
and
xorl
fnsave
mov
call
mov
iret
mov
ficompl
pop
pop
fisubrl
xor
into
in
scas
rcr
fsubp
stc
cmp
jle
jae
inc
repnz
add
add
add
sub
add
dec
add
test
addl
aas
addb
add
and
and
or
fists
add
subb
mov
inc
add
add
popa
jo
insb
insb
outsl
sti
mov
dec
outsl
fs
gs
popa
outsb
fs
inc
adc
popa
sub
outsb
pcmpeqd
mov
adc
insl
insl
pop
dec
imul
insb
add
inc
lods
push
push
jnp
xor
insb
or
push
gs
mov
jb
outsb
and
outsb
push
out
cmp
jo
inc
inc
imul
pop
adc
popa
insl
imul
inc
fsubrs
add
jb
addr16
loopne
das
push
push
push
imul
dec
gs
add
inc
jns
pop
sub
jne
insb
push
inc
push
pop
adc
ss
jne
adc
fdivrs
jns
gs
ja
jle
jo
fs
insb
jae
push
popa
insb
add
test
jne
or
push
dec
cmp
inc
jnp
test
insb
out
sahf
sbb
or
and
gs
mov
xchg
or
je
dec
ja
add
lock
xor
popa
jbe
or
jae
je
xor
or
push
in
lock
insb
jbe
rcll
or
fisubs
inc
or
dec
inc
dec
or
rcll
sbb
and
inc
fs
dec
fcoml
or
add
test
mov
mov
or
or
inc
divb
imul
mov
bound
pop
pop
push
insb
daa
je,pn
xchg
adc
mov
inc
mov
sub
push
stos
adc
add
sbb
cmp
mov
dec
add
fdivs
mov
or
inc
sahf
jae
lret
insb
and
cwtl
outsb
daa
xor
insl
sbb
lds
cmp
test
xlat
push
in
inc
loope
push
adc
das
push
outsl
add
std
sub
push
outsl
outsl
je
lret
add
js
mov
hlt
mov
mov
outsb
imul
cmp
loope
test
popf
cmp
jmp
fidivl
cmp
lock
add
xchg
add
push
add
jg
jg
inc
add
cmp
cmp
inc
lock
fiaddl
add
aaa
mov
add
push
add
idiv
mov
nop
add
lock
cmp
inc
inc
add
scas
fs
pop
add
and
sti
add
cmp
mov
push
or
cmp
lock
sbb
jg
filds
into
add
or
inc
ds
ds
or
testb
sbb
lahf
es
aad
lods
pop
or
addb
jg
fildl
cmp
sub
jnp
cmp
lock
add
add
into
cwtl
loop
add
test
pushl
add
add
add
lock
push
outsb
add
arpl
in
outsl
jnp
lock
add
adc
mov
jne
shrl
mov
pop
xor
aad
inc
lock
or
mov
lods
js
add
inc
xor
mov
mov
ja
arpl
dec
add
xchg
test
cli
and
jae
add
add
stos
mov
adc
inc
pushl
add
adc
add
add
into
xchg
add
test
lock
lock
ret
outsl
add
lea
add
idivb
xor
sub
jno
incb
out
mov
xor
ret
mov
es
cmpsb
add
shll
aaa
mov
lds
and
negb
mov
cmpsl
lock
push
add
mov
es
or
stc
test
ret
or
inc
mov
lock
insb
add
movsb
inc
adc
lock
aam
mov
cmp
lock
mov
add
add
fsubrl
cld
and
or
pop
jle
inc
inc
jle
mov
cmpl
imul
repz
push
push
xor
mov
fists
repnz
push
push
add
or
mov
aas
xor
aam
add
inc
cmp
mov
add
ja
cld
outsl
cmp
ja
mov
scas
jg
lock
add
lock
mov
scas
jne
cwtl
aam
add
add
mov
jg
loop
add
jl
test
jb
mov
mov
xor
xor
push
sbb
sbb
or
mov
or
or
push
push
push
test
cmovl
xor
mov
or
adc
or
dec
inc
jecxz
xor
aas
push
adc
push
and
pop
mov
in
call
and
push
xor
adc
add
inc
or
icebp
call
pop
sbb
adc
sbb
sbb
add
adc
or
inc
mov
lods
std
adc
or
adc
adc
sub
fstpt
or
xor
mov
and
mov
pop
adc
fidivl
or
inc
cwtl
add
push
outsl
mov
adc
outsl
test
and
push
movups
pop
inc
cmp
ret
sbb
scas
mov
add
sbb
add
dec
push
add
or
pop
push
sbb
nop
xor
push
or
jecxz
xor
ret
idivb
add
mov
or
adc
push
fimuls
pop
push
jno
inc
cmpsb
lock
add
adc
test
fwait
sbb
or
int3
adc
or
out
pop
adc
sbb
pop
mov
sar
push
push
sbb
xor
cmp
pop
adc
adc
sbb
fwait
xchg
add
fstpl
aas
lock
jg
add
add
movsb
or
or
fcmovnbe
ljmp
and
adc
mov
add
push
inc
lret
add
pop
jne
dec
fiaddl
pop
les
jg
shlb
repnz
adc
push
push
fucomp
mov
das
lret
pop
adc
jle
mov
jle
inc
subl
out
and
insb
push
add
js
add
rolb
or
sub
cmpsl
push
pop
popa
or
jbe
jge
jbe
dec
xor
add
push
adcb
xor
jb
popf
xchg
outsb
or
or
or
cmp
xor
es
sbb
xchg
xor
pusha
push
inc
shrb
jae
arpl
sti
mov
fisttpl
data16
int3
or
or
call
pop
incb
and
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
