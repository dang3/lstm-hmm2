hlt
cmp
popf
dec
jecxz
orb
incb
mov
call
testl
pop
aam
cli
mov
rclb
stc
jo
xor
sti
inc
add
icebp
push
outsl
dec
les
pop
outsl
js
adc
xor
sub
or
adc
xor
push
or
jne
jb
dec
test
dec
sbb
pop
or
sub
bound
xor
push
or
jns
icebp
out
scas
pushf
inc
mov
mov
sbb
add
dec
repnz
lock
mov
adc
push
iret
sub
jmp
add
sti
add
xchg
icebp
xlat
dec
bound
and
xchg
pop
repnz
sti
sbb
mov
cmp
int3
cmp
xor
insl
pusha
mov
sbb
lods
push
xchg
sbb
fsts
xchg
les
ss
add
nop
pop
pop
push
dec
rep
bswap
pop
mov
mov
movb
push
pushf
pushf
lea
jmp
xor
dec
pusha
xlat
pop
loopne
imul
mov
pop
or
ficoml
and
xor
imul
and
add
adc
stc
inc
dec
pop
out
push
mov
and
nop
push
dec
jne
shlb
add
jge
jb
in
out
adc
jbe
imul
in
jns
and
divb
xchg
xchg
dec
or
jne
popl
cwtl
pushf
mov
movb
jmp
push
push
mov
stos
pushf
lea
jmp
jmp
jmp
dec
mov
lds
addr16
jo
enter
aas
pop
cmp
dec
or
ljmp
xor
pusha
and
push
sub
cmp
cmp
iret
adc
jb
jp
into
fisttps
out
scas
push
mov
cmp
in
nop
pop
out
jnp
and
mov
movsl
xlat
fidivrs
or
lahf
mov
add
pop
cmp
aas
cli
leave
cld
push
pusha
xchg
mov
nop
adc
pop
pushf
bt
cmp
pusha
lea
jb
cmc
pusha
test
bt
cmp
pusha
pushl
pushf
movw
lea
jae
ror
and
mov
xadd
bt
shrd
cmp
mov
pusha
mov
pushf
pushf
sub
mov
repnz
lea
jne
pusha
pusha
pushf
lea
jne
bswap
pushf
rcr
shl
mov
pushf
shl
rcr
sub
dec
shl
cmc
not
lea
cmc
push
sub
bt
bt
pushl
popl
mov
cmp
push
pushf
lea
ja
clc
mov
sub
cmp
call
push
repnz
pushf
call
fstpl
ret
cmpsl
dec
cmpsl
loope
push
int3
adcb
or
cmpsb
or
xchg
push
scas
pop
mov
and
push
or
xchg
jne
cld
lret
in
call
outsl
dec
adc
icebp
imul
sbb
les
mov
into
bound
push
adc
xor
xor
testb
and
je
imul
out
mull
aaa
jns
cltd
and
jne
jge
les
std
pop
xchg
and
push
dec
or
jne
into
mov
fistpl
xor
std
shll
cmp
in
vmovapd
out
xrelease
jo
ljmp
sub
int
cli
sbb
in
call
pusha
fwait
inc
pop
push
test
daa
out
mov
cmpsb
sti
js
ds
push
cmpsb
inc
add
pusha
popa
lds
outsb
sub
in
aam
xor
popf
pop
xchg
mov
dec
neg
popa
and
mov
imul
sahf
jo
pop
lahf
mov
je
hlt
in
ret
ret
addr16
push
lret
dec
cs
fistpl
les
frstor
out
stc
loopne
fdivrs
add
fisubrs
ljmp
inc
cmc
mov
lea
mov
aaa
pop
test
inc
push
xchg
pushaw
fnstenv
jne
mov
adc
sub
jecxz
in
sbb
pop
ds
or
pushf
mov
xchg
xor
sub
mov
sbb
call
sub
jmp
sbb
ror
test
mov
clc
call
or
shll
inc
daa
sbb
movsb
aad
dec
rcll
leave
cltd
and
addr16
jge
into
aas
sbb
xor
pop
std
data16
jmp
cli
add
repz
fisubrl
js
add
inc
bts
arpl
push
xchg
sub
ss
shll
push
in
outsb
adc
sub
mov
or
cmc
push
loop
add
jg
sub
popa
mov
add
jmp
inc
addr16
aad
aam
mov
push
mov
ss
pop
push
data16
xor
mov
jno
cmp
lock
sbb
pop
fdivl
jo
mov
inc
ja
cmpb
int
xchg
add
addr16
frstor
into
in
dec
mov
mov
lahf
cmp
jbe
ds
mov
gs
and
rorl
adc
mov
jge
loopne
pop
sbb
jp
jns
mov
xor
pop
sbb
cmp
int3
sbb
mov
adc
and
xor
fistpll
jno
lods
shr
inc
mov
or
lds
or
ja
add
dec
mul
dec
lea
je
push
pushl
lea
jmp
fxch
mov
pop
insl
in
cmp
repnz
pop
incb
or
scas
leave
jne
call
pop
mov
sub
and
mov
icebp
push
sar
imul
mov
je
jne
mov
push
dec
pop
mov
ljmp
loop
adc
mov
out
mov
icebp
dec
mov
jb
mov
insl
ja
cmp
mov
js
loopne
cmp
ret
pushf
push
xchg
scas
dec
or
add
adcl
or
pusha
pushf
pushf
movl
jmp
scas
in
mov
icebp
je
jp
rcrl
dec
mov
lret
sub
push
jae
fwait
or
and
inc
push
out
xchg
fdivrs
insb
testl
je
add
ljmp
scas
fidivl
lahf
sti
or
outsl
pushf
mov
push
in
loopne
mov
cmpsl
dec
adc
in
sbb
or
in
data16
cmp
rolb
out
lods
adc
sub
rolb
lods
in
mov
cmp
in
mov
xchg
cs
pop
push
test
pop
push
xor
in
push
jmp
outsl
add
fisubrl
add
mov
inc
cmp
mov
sbb
in
push
mov
dec
cmp
shlb
dec
insb
call
mov
or
mov
pop
insb
push
aad
out
jp
shrl
mov
pop
pushf
lcall
sub
pusha
das
sub
jmp
movzwl
mov
movzbw
mov
cmp
add
bt
mov
cmp
stc
clc
test
call
jmp
pushf
movzbw
mov
movb
push
pusha
movb
lea
jmp
dec
jmp
or
stc
pop
or
or
push
maxps
jmp
mov
out
sub
or
pop
inc
push
jle
out
loop
xchg
dec
fidivrs
lods
fisttpll
les
fldl
dec
cmp
push
fldt
dec
test
aas
inc
test
jbe
jbe
cmpsb
out
and
test
mov
inc
pushw
lds
push
jbe
out
mov
pop
fistpl
fwait
outsl
ja
push
movsl
xor
in
gs
insb
mov
pop
addr16
cltd
or
idivb
es
inc
xor
mov
popw
mov
aas
stc
imul
push
add
in
in
dec
or
movsw
add
inc
aam
int
addr16
pop
in
leave
or
push
inc
push
xor
in
jne
in
inc
or
inc
pop
mov
dec
pop
xchg
add
ja
dec
mov
enter
inc
xchg
push
lds
xor
jbe
addr16
pop
mov
enter
ja
jbe
es
dec
in
mov
aaa
mov
or
in
xlat
xchg
push
pop
aaa
movsl
aas
pop
sbb
xchg
xlat
out
dec
mov
out
sub
xor
cmp
add
and
insl
xchg
imul
out
or
xlat
push
aam
jne
sub
cmp
jns
sbb
das
je
testb
xchg
loopne
inc
pop
jmp
push
pop
adc
pop
push
adc
cmp
push
das
enter
aam
in
xchg
cmp
inc
mov
jbe
clc
mov
out
out
push
adc
lds
push
cltd
pop
sub
les
mov
push
inc
jne
cmp
shrb
mov
push
neg
ret
std
les
inc
push
mov
and
pop
outsb
jbe
mov
adcb
es
push
popf
movsl
lds
sub
pop
clc
sub
pop
add
jne
out
adc
sub
pop
leave
imul
xor
das
pop
leave
sub
out
xor
and
scas
push
aad
out
dec
mov
lcall
pop
mov
sub
bound
pop
test
enter
jne
test
inc
mov
cltd
jmp
sub
data16
jae
fstp
arpl
inc
loope
push
push
mulb
pop
cli
mov
or
dec
pop
ret
push
push
ja
pop
pop
push
clc
in
pop
pop
xchg
pop
pop
bnd
inc
inc
push
das
sub
insl
adc
lds
dec
aam
loop
negb
jmp
lds
lods
lods
xchg
pop
inc
dec
or
ljmp
jecxz
xor
push
add
pop
fimull
push
xchg
insb
inc
mov
mov
movsl
in
push
dec
mov
mov
dec
jns
data16
sub
mov
push
in
mov
sub
out
jns
test
ljmp
push
sbb
sub
out
pop
movsb
push
mov
and
or
aaa
cltd
pop
lret
pop
adc
aam
xlat
sbb
dec
lods
stos
push
divb
lods
push
push
out
xchg
out
stc
jns
sbb
push
push
xchg
inc
adc
stc
sbb
ds
mov
and
pop
into
insl
data16
test
push
mov
leave
mov
pop
ja
pop
dec
sub
inc
lods
pop
dec
fmul
test
push
xchg
push
nop
mov
dec
push
xlat
imul
adc
dec
cmp
imul
test
mov
xlat
push
push
push
dec
stc
out
push
xchg
test
push
sub
jp
sub
lcall
mov
ja
fcompl
xor
cwtl
lret
daa
xorl
push
movsl
sbb
cwtl
pop
push
inc
xchg
loop
test
lods
stc
pop
pop
leave
mov
mov
mov
dec
jnp
fsubrl
in
xor
mov
sub
fisubrs
push
inc
dec
pop
aaa
out
add
xchg
fidivrs
leave
in
movsl
decl
das
jmp
das
mov
in
lretw
cwtl
pop
cmpb
xor
xchg
mov
test
inc
pop
push
push
lods
xlat
sbb
cwtl
es
jecxz
jg
aaa
jmp
sbb
or
cltd
cwtl
xchg
insl
es
cmp
es
inc
dec
xchg
lcall
adc
and
adc
xchg
fnstenv
sub
sub
lds
mov
inc
aaa
adc
pop
sub
in
sub
cwtl
jmp
jmp
or
and
adc
fimull
aaa
data16
adc
and
clc
lods
fcoms
push
fldt
pop
aad
enter
inc
cmp
cltd
movsl
push
gs
or
lds
cmp
out
mov
cltd
lret
sbb
fdivs
lret
sub
movsl
mov
ss
stc
jns
sbbb
bound
cwtl
push
leave
push
aaa
push
mov
adc
fisttpl
lea
ret
fimull
inc
mov
sbb
iret
mov
es
leave
sub
xor
dec
jne
imul
jmp
xchg
mov
dec
pop
pop
aaa
and
dec
pop
cs
inc
cmp
and
adc
push
rolb
sbb
shll
negb
adc
dec
cwtl
inc
ja
aaa
pop
xchg
cld
push
out
pop
push
gs
cwtl
cmpsb
push
das
enter
cmp
aad
movsl
inc
aaa
cmp
xchg
in
aaa
bound
es
pop
sbb
sbb
sub
inc
ljmp
lods
aaa
pop
in
push
sub
sbb
sub
and
dec
push
adc
pop
xor
aaa
and
xchg
es
fmull
inc
inc
iret
testb
shrl
daa
pop
xlat
or
cmpsb
test
push
adc
jmp
lret
sub
gs
aaa
mov
cltd
sub
dec
in
cmp
xor
mov
into
pop
sub
push
stc
cmp
int3
aaa
ficoml
in
aaa
inc
clc
pop
inc
std
in
sub
dec
or
pop
aaa
jae
push
out
fdivr
aad
push
xlat
std
lods
aad
or
aaa
dec
jbe
push
adc
roll
aaa
pop
pop
sub
aad
lods
aaa
imulb
lea
dec
fs
fxch
add
lods
movsl
fs
movl
scas
adc
aaa
push
lds
or
push
adc
xor
mov
pop
es
pop
outsb
addr16
test
push
push
lods
das
pushf
inc
pusha
test
insb
daa
testb
jp
adc
iret
ret
push
or
dec
pop
sub
or
aaa
lret
push
mov
fmull
out
ss
xorl
xchg
jo
jl
aaa
rcr
sub
mov
sbb
dec
mov
leave
aaa
lret
psubw
nop
scas
mov
xlat
movsb
adc
pushf
aad
lods
sbb
push
shll
aaa
push
dec
mov
jae
push
jmp
int3
dec
sbb
mov
xchg
dec
xchg
loop
pop
mov
sbb
rorl
xchg
aam
or
pop
xlat
out
lret
or
dec
xchg
mov
jmp
enter
out
pusha
add
mov
xor
cwtl
lds
pusha
pop
fdivs
mov
mov
jnp
pop
mov
aaa
push
lds
mov
test
xlat
pusha
out
in
inc
orl
xchg
add
mov
sbb
jl
invd
in
adc
lahf
fldcw
sub
sub
daa
in
mov
cmp
xor
and
cs
and
aam
mov
xor
xchg
add
aad
aaa
movsl
cmp
pop
sahf
fmull
cmp
aam
and
pop
pop
push
sub
test
adc
aam
pop
aaa
mov
es
dec
push
fdivl
adc
shll
ljmp
stc
loope
cwtl
cmpsb
aaa
push
push
test
mov
out
cmp
test
movsl
dec
ror
mov
push
es
or
mov
mov
lods
inc
push
sub
loope
xchg
aas
sbb
ja
fcmovb
or
in
xlat
popl
sbbb
test
add
adc
inc
cmovge
test
pop
cwtl
adc
fcompl
lods
aaa
add
jnp
cmovge
or
push
stc
sbb
add
movsl
arpl
sub
push
aaa
push
lods
test
cmpsb
push
loop
notb
movsb
xchg
add
mov
idivl
mov
and
cmpsb
and
cmp
into
pop
pop
aaa
daa
pop
test
jmp
fs
int
cmpsl
xlat
xor
sbb
pop
not
mov
dec
xchg
fstl
xor
pop
xchg
cmp
push
int
es
insb
insb
xchg
movl
sub
xchg
daa
jae
nop
dec
leave
cmpsb
dec
cmpsl
ss
fsubl
pop
dec
fnsave
insb
xchg
pop
mov
aas
sub
cmpsl
xchg
pop
sbb
divl
xor
into
xchg
and
xchg
movsl
out
and
fistpll
leave
push
das
movsl
fidivrs
push
imul
loopne
fimuls
and
xchg
pop
jecxz
pop
stos
into
sub
fdivrs
cmp
dec
js
aad
cwtl
push
cmp
repnz
fisttps
mov
sbb
add
sub
addr16
js
sbb
sub
add
aam
xchg
jmp
push
repnz
cmpsl
pop
cmp
stc
dec
movsl
jge
imul
inc
in
cmpsl
mov
popa
out
or
xor
cmp
pop
dec
fdivrs
call
push
sbb
repnz
lcall
mov
outsb
test
cld
mov
in
push
scas
dec
dec
nop
sub
out
push
arpl
sbb
sarl
imul
outsb
jmp
out
push
scas
insb
dec
or
and
lret
out
stos
jecxz
data16
push
lcall
jnp
shrb
sti
sub
push
pop
test
enter
sub
out
cmpsl
jle
xchg
out
fucom
jle
pop
punpckhwd
mov
test
fnstenv
cld
push
in
jnp
xchg
push
pop
cs
gs
cmp
inc
out
mov
es
push
dec
jecxz
dec
js
and
dec
ret
in
fisttps
xchg
pop
xchg
daa
push
mov
ljmp
daa
sub
mov
adc
pop
ds
loopne
fldenv
jle
repnz
imul
out
pop
aas
arpl
scas
mov
insl
stc
punpckhdq
mov
call
jl
mov
mov
or
imul
xchg
xchg
sub
or
test
cmp
imul
filds
mov
call
or
pop
jge
push
insb
mov
imul
sub
xchg
xchg
push
xchg
push
es
mov
add
in
addr16
jg
xchg
pop
scas
enter
dec
cmp
inc
jg
xchg
xor
out
insl
fildl
scas
inc
xor
dec
loopne
sti
xor
jecxz
mov
xor
cmpb
xchg
inc
or
ret
jns
cmp
mov
push
and
ja
pop
insb
outsl
adc
jg
pop
sti
fwait
loop
inc
sbb
insl
aaa
mov
cmp
sahf
jo
sub
das
jae
fisubrs
ljmp
movzbl
sub
test
outsb
cmpsl
cmp
xchg
sub
xlat
test
in
jb
or
addr16
xchg
stc
sbb
cwtl
pop
ds
arpl
cmpsl
xorl
pop
jo
sub
mov
popf
push
pop
adc
gs
pop
xchg
fwait
call
data16
das
xor
xlat
sbb
fldl
das
push
xor
fisubrl
repnz
fiaddl
sti
fidivrs
add
pop
fst
push
shl
les
comiss
sahf
xor
in
out
push
sti
inc
mov
cs
imul
out
fisubl
mov
dec
or
in
icebp
sub
or
mov
push
aaa
imul
mov
mov
scas
cmp
fs
xchg
push
add
and
fistpl
out
stos
jle
or
mov
xchg
or
mov
insb
pop
pusha
std
loopne
fldenv
push
push
or
loopne
fs
inc
and
rorb
pop
dec
push
bound
roll
pop
mov
mov
out
xor
mov
mov
sahf
call
insl
rorl
arpl
cli
das
pop
movsl
enter
aas
ljmp
loop
push
out
in
jle
mov
leave
ljmp
scas
dec
xchg
push
push
arpl
cld
push
fisubrl
or
push
dec
xchg
mov
push
push
dec
insb
fimuls
mov
jle
cltd
add
ds
data16
loope
xchg
and
imul
xchg
in
es
daa
push
dec
call
and
fdiv
addr16
xor
inc
xchg
add
push
sbb
and
fmulp
adc
imul
jecxz
in
sbb
imul
and
add
sbb
xchg
outsb
fninit
imul
push
andb
out
dec
and
xchg
in
lods
mov
sub
cmp
jle
nop
sub
lcall
in
adc
pop
cli
stc
sub
or
sbb
sti
pop
in
or
dec
arpl
inc
mov
push
push
enter
sbb
enter
sbb
push
mov
and
push
das
das
and
ljmp
or
popf
dec
sub
pop
mov
nop
imul
jge
cli
cmp
jecxz
dec
xchg
inc
pop
xor
xor
imul
push
sub
xchg
js
jge
push
sbb
aam
dec
sahf
push
hlt
shlb
ds
jl
add
mov
lea
arpl
push
loope
push
pop
sbb
cs
dec
mov
test
int3
call
lods
mov
lret
in
jp
mov
xchg
out
pusha
sub
inc
outsb
shl
stos
imul
mov
orl
adc
lods
mov
icebp
ficompl
call
inc
sahf
mov
jg
mov
push
sbb
mov
jo
inc
inc
stos
lahf
mov
push
addr16
or
push
addr16
cmpsl
dec
xchg
dec
loope
std
inc
data16
push
data16
sbb
inc
scas
enter
jae
push
aam
addr16
push
out
xor
sbb
jle
negb
fsubr
movsl
call
into
dec
lods
outsb
mov
lret
sub
cltd
ret
mov
mov
sahf
sub
push
jae
mov
dec
fisubrs
test
int3
cltd
dec
push
shrb
test
cmp
fidivl
cs
test
mov
mov
mov
stos
xchg
in
pop
mov
ret
js
loop
out
pop
aaa
mov
cmpsl
sti
sub
sub
je
outsb
inc
sub
test
call
pop
clc
push
and
adc
insl
push
push
mov
adc
cmp
add
mov
addl
mov
add
out
lret
into
fcompl
bound
sbb
idivl
mov
adc
dec
mov
ljmp
arpl
dec
jmp
ret
repnz
or
sarl
int3
and
sub
push
pop
data16
fwait
sub
mov
jle
in
jecxz
pop
addr16
mov
cmp
loopne
mov
adc
sbb
ss
push
sahf
test
fyl2xp1
ljmp
lcall
test
je,pt
jnp
out
js
bound
push
dec
pop
sub
adc
sub
adc
jo
mov
pop
lds
fisttpll
push
sub
fdivp
cmp
fdivp
fadd
fs
mov
or
dec
lret
mov
ja
sbb
insb
call
in
dec
pushf
stos
push
cmp
mov
or
repz
cld
mov
out
aas
push
or
fdivl
dec
pop
shl
mov
shrl
sbb
dec
mov
aas
sub
stos
into
and
cli
xchg
or
and
and
pop
push
pop
and
mov
loope
xchg
and
pop
arpl
sbb
movsl
rcr
pusha
out
push
jbe
outsl
mov
imul
sub
fsubrs
movsb
pop
les
divb
xor
jno
imul
ljmp
jp
jle
inc
shr
jp
fisubrl
das
pusha
scas
pop
insl
scas
outsb
push
sub
repnz
mov
jb
int
cli
pop
bound
test
dec
cmpsl
insl
outsb
mov
sbb
lock
pcmpgtd
sti
xchg
inc
xor
scas
out
xchg
mov
popw
push
jne
pop
addr16
sub
mov
call
gs
mov
popf
in
fs
inc
xchg
out
mov
out
push
jge
push
adc
scas
pop
scas
dec
pop
sahf
xchg
int3
lret
xor
loop
push
and
jae
push
mov
lods
inc
dec
das
popa
das
sbb
shrb
jecxz
lds
push
nop
push
adc
or
aam
aas
mov
cmp
lcall
stc
add
cmpsl
fnstcw
inc
int3
add
cs
lods
mov
or
outsb
fisubl
sbb
sbb
jmp
push
daa
add
daa
or
sbb
repz
jge
sub
pop
push
ja
pop
negb
push
sbb
xchg
pop
pop
imul
push
daa
sub
sarb
ljmp
pop
sbb
push
cmp
shrb
das
lods
test
jae
sbb
xchg
xlat
fldenv
lret
leave
sub
push
into
xchg
and
pop
data16
sbb
in
mov
push
mov
icebp
das
xlat
lods
dec
das
stos
xor
cmp
sbb
loopne
push
idivl
js
addr16
xchg
call
pop
mov
adc
sbb
out
fwait
icebp
cmp
iret
sub
push
pop
test
leave
and
mov
mov
mov
inc
fsubrs
nop
mov
stc
data16
mov
sub
xchg
int
ljmp
xchg
loopne
data16
out
iret
ss
mov
xchg
loopne
enter
and
out
and
pop
sub
sbb
das
inc
in
xor
sbb
cmp
lret
sub
and
stc
cmp
fistl
pushl
dec
scas
ret
inc
cwtl
stos
dec
lcall
scas
arpl
mov
and
insb
stc
jge
rorl
mov
mov
repnz
push
out
mov
or
sub
sub
jle
cmp
insl
out
imul
dec
or
pop
and
inc
mov
lcall
sar
adc
adc
inc
jb
enter
sub
loope
adc
in
and
leave
mov
sarb
fcoml
call
outsb
dec
jle
cmp
cltd
and
mov
es
xor
lods
pop
loopne
dec
lods
repnz
push
ljmp
add
xlat
sbb
int3
mov
add
mov
loopne
hlt
xchg
mov
hlt
dec
in
cmp
scas
jmp
sbb
test
sub
pusha
dec
or
loopne
inc
adc
scas
mov
adc
ljmp
fwait
sub
inc
aam
adc
daa
js
mov
sbb
adc
cmc
fmul
js
out
mov
mov
or
jmp
mov
mov
mov
cmp
pop
fs
push
mov
push
out
loopne
cmp
cmp
out
cmp
xchg
or
push
sub
pop
push
out
test
out
lret
outsb
push
mov
icebp
inc
add
mov
out
cmpsl
in
shl
pop
sti
or
int
adc
imul
std
scas
add
sbb
mov
out
sub
sahf
push
inc
rcrb
sub
imul
outsb
push
loopne
syscall
and
loop
jg
xchg
mov
out
sub
enter
pop
imul
scas
imul
insl
outsb
aaa
out
jg
push
lret
into
push
push
mov
push
iret
pop
adc
pusha
push
jge
mov
push
insb
xchg
mov
shll
arpl
sbb
mov
stos
push
fistps
lahf
popa
rorl
das
or
sub
add
je
pop
mov
lcall
and
lahf
jle
insb
push
outsb
sub
insl
rcrb
stos
and
xor
outsb
lods
push
out
ret
sahf
jmp
arpl
stc
add
fs
mov
popf
int
xor
mov
adc
in
ds
lret
daa
in
sub
cmp
pop
loopne
popa
fwait
pop
xor
fsubrp
sbb
ja,pt
xor
xchg
cmp
pop
leave
dec
cmc
popa
test
sub
out
push
jns
sar
imul
push
lods
adc
sub
cwtl
fbstp
mov
pushw
xchg
stc
pop
data16
arpl
add
scas
sub
jae
aad
dec
test
dec
test
add
or
pop
arpl
pop
mov
lods
scas
mov
sub
dec
xor
loope
scas
mov
xor
cmp
mov
dec
ljmp
push
ds
cmpsb
push
pop
sub
dec
ds
xchg
and
mov
pop
cmp
mov
pop
or
out
pushf
pop
push
or
pop
sbb
jl
add
mov
mov
pop
pusha
xchg
pop
outsb
push
mov
or
cmp
jg
in
inc
je
sub
xor
das
cmp
push
push
mov
or
jb
mov
add
mov
enter
fwait
jns
mov
shl
sub
dec
movsl
popf
pop
shl
inc
nop
pop
pop
fistpl
adc
or
fnstsw
mov
mov
cmp
mov
js
mov
rolb
enter
sbb
push
jne
cmp
jl
nop
lret
add
jle
or
add
sbb
mov
aad
iret
ss
icebp
lcall
push
bound
xor
test
gs
outsb
ror
jne
dec
aas
cs
cmp
sbb
enter
outsb
and
xorb
mov
pop
clc
pop
add
dec
push
rcrl
and
cmp
aaa
sbb
in
push
and
ds
xor
cld
cmpb
call
push
jmp
xchg
cmp
inc
and
in
movsb
and
and
add
in
push
inc
lds
pop
pop
cmp
sub
and
mov
fwait
dec
mov
mov
sub
addr16
push
ljmp
pmaxsw
fsubrp
sbb
jp
sbb
insl
bound
sti
fs
inc
sub
mov
jns
jge
aad
jp
sbb
push
shr
popa
or
insl
pop
sub
nop
out
popf
dec
jnp,pn
inc
pop
fwait
scas
pop
or
sahf
lods
pop
popf
out
scas
pop
cmp
jmp
cmp
pushf
scas
cmp
movsl
jbe
insb
pop
popf
adc
stos
das
dec
in
in
out
push
outsb
pop
lret
sbb
stc
shll
sub
fisubrs
lods
aam
mov
mov
sub
mov
jmp
xor
inc
int
pop
xchg
adc
out
fs
dec
push
insb
dec
aaa
fwait
xchg
iret
dec
fiaddl
cmp
leave
xchg
andl
dec
xor
cli
push
hlt
push
mov
in
adc
enter
fsub
pop
mov
xor
ss
lahf
paddsw
insb
push
mov
push
dec
popa
out
xchg
sbb
setne
daa
pop
adc
out
xchg
mov
out
pop
xchg
mov
pop
and
adc
mov
adc
lods
xchg
lcall
ret
and
fisubrl
repnz
inc
std
sub
or
and
fs
ss
push
pushf
lret
dec
lods
out
dec
loopne
dec
sub
int3
lret
mov
push
ret
sti
pop
adc
cmp
aas
sub
cltd
jg
pop
ja
fwait
rolb
cltd
gs
mov
jp
sub
pop
aaa
fistps
nop
outsb
pop
das
testl
dec
pop
sub
mov
loop
mov
or
or
insb
inc
pavgw
pop
or
pop
sub
scas
test
sbb
inc
ja
insl
pop
cmp
add
std
fnstenv
sahf
mov
jl
jecxz
pushf
ficoms
jbe
ficompl
push
jecxz
imul
mov
loopne
push
int
insb
cmp
lods
test
inc
ja
lea
fsub
cmp
popa
pop
enter
mov
cmp
sarl
mov
push
std
outsl
scas
dec
aaa
push
insl
add
push
in
fucomip
cmp
outsb
stc
mov
cs
out
pop
sar
jl
push
iret
aaa
lock
mov
cld
sub
pop
hlt
dec
pop
ja
dec
loopne
dec
cmpb
insl
nop
insl
sub
fwait
out
call
push
pop
in
sbb
add
leave
mov
cmp
jae
dec
dec
push
loope
fcomip
int
cmpb
push
cmp
mov
into
fidivs
add
out
mov
xor
data16
fisubrs
xchg
push
fisubrs
mov
ljmp
insl
push
cmp
dec
scas
iret
mov
imul
imul
pop
ficompl
dec
sub
stos
imul
cs
xchg
ds
adc
dec
aaa
and
out
call
aam
scas
sbb
cltd
and
pxor
mov
or
pop
insl
sub
bts
fistl
shrb
lcall
femms
jp
inc
das
mov
scas
repnz
pop
inc
jno
mov
ljmp
mov
jb
stos
dec
in
pop
or
jle
cmp
jae
or
mov
dec
andl
cmp
inc
shll
jae
in
insl
dec
out
pop
daa
mov
cli
outsb
in
data16
into
into
in
aas
das
jle
push
in
sti
fistl
lcall
shlb
xor
mov
sub
repz
xor
mov
inc
push
jge
dec
in
mov
popa
pop
loop
mov
lods
sarb
notb
or
sbb
push
cmp
jnp
push
sub
test
pop
in
cmp
cmovbe
int3
pushl
addr16
jno
sbb
sub
stos
or
loopne
push
test
imul
mov
push
cld
ret
pop
adc
lcall
outsb
outsb
mov
lods
sbb
fld
jg
daa
pusha
aaa
lods
cmc
dec
xlat
in
enter
jecxz
gs
loopne
stos
inc
jmp
addr16
fwait
sbb
mov
pop
call
jnp
add
sub
call
pop
or
push
and
jge
out
dec
dec
outsl
pop
enter
bound
lret
das
decb
es
jmp
lods
int
ds
mov
loopnew
inc
inc
andl
fmuls
or
push
push
sbb
inc
inc
mov
pop
fs
imul
int
cmp
scas
pusha
jmp
out
lds
lods
dec
test
enter
pop
fdivrs
repnz
das
ss
and
sbb
push
mov
cwtl
popa
mov
xchg
jb
dec
mov
fistpl
mov
in
sbb
ljmp
or
dec
add
mov
sbb
jg
fs
push
cld
in
sub
sub
mov
cmp
sub
xchg
push
int3
mov
push
sub
push
add
jmp
or
sahf
sti
push
sbb
adc
xor
sbb
push
push
pavgb
mov
in
sbb
mov
push
pop
out
sub
xchg
mov
and
mov
mov
push
clc
sub
lods
das
and
int
jge
lods
aaa
jp
xchg
xor
fcomps
jle
adc
inc
out
ds
sub
and
xchg
mov
and
cmp
dec
sbb
loopne
out
es
sub
adc
popa
jo
jmp
xor
cs
sahf
ftst
jns
pop
and
enter
test
in
enter
cmp
in
cmp
test
bnd
mov
outsb
data16
mov
das
das
aas
jb
scas
push
stos
js
repz
int
sbb
out
dec
outsb
jns
sbb
imul
in
cwtl
push
clc
inc
outsl
xchg
sbb
stos
cmp
dec
scas
add
imul
shrb
inc
test
sbb
shrb
sbb
mov
mov
pop
imul
test
loope
nop
sbb
sub
mov
inc
lret
loopne
sbbb
sub
test
shrb
push
fstpt
cmp
fwait
push
ja
jp
insl
call
loop
dec
sub
sbb
repz
push
in
sbb
gs
scas
fwait
loopne
test
push
sub
or
loop
push
std
lcall
ss
sahf
pop
and
out
dec
sbb
fisttpl
dec
ds
stc
mov
dec
pop
sti
shrb
out
push
rclb
ret
call
mov
fdivp
sbb
jmp
cmp
aam
pop
push
scas
push
mov
jb
das
pop
inc
or
xor
in
push
mov
mov
ds
leave
pop
adc
out
loopne
lds
sub
imul
stc
mov
xor
pop
xchg
sete
cmp
out
je
dec
dec
into
test
jg
lret
call
movd
loopne
jl
adc
dec
jecxz
cmp
xor
jg
xor
orb
fmull
sbb
xlat
mov
push
popf
cmc
inc
lea
insb
push
mov
ss
inc
push
loop
xor
inc
or
stos
add
xchg
cmp
push
mov
cltd
insl
xchg
test
dec
pop
push
cmpsb
jne
mov
dec
in
aaa
add
loope
sub
jp
mov
inc
pop
jle
ljmp
cmp
mov
stc
xchg
stos
dec
pop
sub
fcoml
sbb
loopne
lods
xchg
mov
movsl
pop
mov
enter
xchg
jmp
das
mov
fnstsw
xchg
jg
pop
out
pop
insl
xchg
jns
mov
movsl
daa
aaa
push
adc
inc
add
fnsave
or
mov
sub
mov
jp
fninit
xchg
dec
push
add
adc
loopne
fdiv
out
in
or
shll
xchg
sahf
in
loope
leave
dec
inc
ror
pop
pop
ljmp
pop
jmp
scas
pop
jecxz
mov
insl
sub
roll
dec
sbb
aaa
mov
imul
xchg
popf
fiadds
mov
add
fiadds
jg
imul
pop
mov
push
mov
add
ljmp
sub
mov
sar
aas
sbb
fimuls
xor
mov
mov
lret
inc
jnp
or
jmp
xchg
mov
scas
add
mov
shrl
dec
aaa
ja
loop
lods
inc
addr16
cmpxchg
scas
jb
xchg
pop
cmp
cmp
mov
inc
and
jmp
sarb
mov
sub
dec
or
add
rcrb
pop
arpl
rolb
inc
inc
pop
and
mov
pusha
pop
mov
sub
loop
daa
decb
inc
lret
dec
or
ret
pop
sub
and
addr16
fs
cmp
pop
sbb
movsb
idivb
aaa
imul
inc
mov
sbb
dec
fld
or
hlt
clc
cld
cld
enter
push
and
out
cld
out
pop
dec
mov
mov
push
sub
inc
pop
fistps
cmpsl
sub
loop
jle
mov
mov
das
push
ds
xchg
in
xchg
popaw
jne
mov
cmpsb
daa
inc
sub
popw
cmp
xchg
dec
cmpsb
in
jle
mov
lods
insl
stos
jmp
orb
addr16
mov
das
sub
sub
cld
enter
das
aas
ficoms
es
js
push
jle
adc
mov
sub
pop
aaa
xchg
dec
lret
sub
daa
mov
push
push
ds
pusha
aam
loop
rorb
adc
push
gs
aas
sub
out
cli
sbb
popf
aas
jb
call
out
sarb
jnp
cmpsl
pop
sub
pop
test
mov
mov
ds
fmulp
lods
cmpsl
mov
loopne
mov
scas
mov
jle
out
dec
call
sbb
mov
ret
out
bound
lret
shl
sti
adc
loopne
push
sub
out
sub
loopne
inc
sbbl
or
pop
cmpsl
jbe
or
mov
fisubrl
sbb
call
shr
dec
testl
push
rcrb
sbb
cmp
test
dec
outsb
pushf
scas
lock
and
outsl
jmp
or
popf
addr16
mov
sub
std
cmp
pop
stos
cmp
pop
dec
fstl
pop
pop
xchg
ds
sbb
pop
xchg
outsb
js
adc
pop
xchg
outsb
out
adc
jmp
es
xchg
pop
dec
cltd
mov
popf
inc
sub
cmp
mov
movl
in
out
adc
mov
and
cmp
daa
bound
and
inc
pop
rcrb
out
es
loopne
gs
xlat
ret
xor
pop
pop
sub
fwait
jmp
stos
insl
inc
pop
jle
inc
insl
repnz
mov
insl
fimull
fistl
dec
or
pop
and
gs
ljmp
jle
rclb
fisubrl
sbb
stos
in
push
mov
sbb
mov
mov
ficomps
rorl
lret
fsubrl
mov
call
insl
push
das
repz
ljmp
gs
sbb
jecxz
shlb
fisubl
es
mov
in
cld
rcrl
test
cmp
sub
push
scas
push
call
daa
jo
sbb
pop
mov
ret
ret
mov
mov
mov
cmp
cmp
xor
movsb
mov
fcmove
sub
out
scas
cmp
daa
loopne
add
repz
xchg
push
adc
pusha
push
mov
std
push
out
mov
imul
out
inc
push
xor
jae
sbb
clc
push
xchg
pop
into
mov
in
inc
dec
cmpsb
mov
add
ja
jmp
pop
xchg
pop
mov
mov
pushf
and
sub
mov
int
sti
imul
dec
loope
adc
cs
fstpl
rolb
imul
into
int3
mov
lods
call
stos
test
and
mov
and
rcll
push
mov
clc
aam
les
push
fnsetpm(287
scas
xchg
mov
std
push
sbb
and
xchg
jnp
adc
fldl
cltd
cmp
nop
push
repz
in
fsubrl
gs
mov
jnp
add
fucomp
dec
out
shrl
push
jb
es
inc
dec
loopne
scas
call
dec
pop
cmp
mov
push
into
mov
loope
out
lods
push
lock
dec
sub
sbb
sbb
dec
aad
mov
bound
and
pop
adc
push
push
mov
es
adc
mov
aas
dec
mov
repz
sub
mov
sub
add
jno
sahf
cli
in
lods
cmpsb
add
repnz
repz
cld
fimuls
mov
pop
das
mov
or
or
adc
bound
sbb
pop
mov
add
int
push
daa
xor
xor
sbb
test
sub
scas
push
aas
push
dec
fdivrl
sbb
ja
std
cmpsl
scas
outsl
add
pop
jmp
aaa
push
xchg
or
mov
cmp
mov
sti
mov
jle
int
sub
jmp
inc
out
mov
repnz
adc
xchg
xor
mov
sbb
jge
sub
push
shr
mov
daa
dec
fildl
gs
mov
or
mov
sbb
mov
fcoms
and
adc
aam
enter
andb
insb
jae
loope
jno
movq
pop
insb
imul
jnp
and
in
add
dec
mov
fisubl
cmpsl
mov
dec
fsubrs
arpl
push
dec
test
sub
aam
mov
fisubrs
in
in
sahf
jbe
je
je
in
mov
andb
pop
add
mov
bound
das
scas
sbb
mov
out
dec
and
pop
enter
adc
pop
mov
adc
into
loopne
adc
jb
into
das
sbb
out
data16
loopne
and
fsubrp
push
cmpsb
dec
out
adc
sti
push
fimuls
dec
and
in
or
cmp
pop
sbb
fstpt
push
outsb
stos
xchg
hlt
out
lcall
xchg
mov
jge
mov
pushf
ds
ds
push
sbb
jp
add
sub
dec
insl
jmp
and
ds
pop
fsubp
jns
dec
aaa
adc
pop
pop
das
aas
out
push
sub
or
rclb
leave
mov
test
push
stc
jno
dec
sbb
sub
loop
push
jmp
sbb
fcmovne
sub
arpl
sti
xchg
sub
movsl
sub
sub
imul
adc
sti
push
xor
scas
dec
xchg
scas
xchg
out
push
mov
add
lea
in
mov
into
stos
out
sub
popa
sub
lret
arpl
mov
sahf
jmp
pop
push
dec
jnp
jecxz
aaa
and
subb
pop
into
mov
bound
jmp
jmp
add
push
sbb
cmpsl
dec
mov
xchg
popa
dec
mov
loopne
lret
mov
xchg
dec
scas
add
pop
push
push
add
int3
and
sub
ss
insl
jmp
es
aas
add
jg
fistpl
jmp
aaa
jmp
popa
lods
pop
jo
cwtl
push
xor
mov
pop
fisubs
out
daa
mov
xlat
ret
jnp
stos
mov
popa
add
and
add
jge
imul
jns
push
loopne
or
inc
mov
push
jne
inc
xchg
das
jo
dec
scas
daa
out
cmp
aaa
or
testb
mov
push
dec
sbb
pop
mov
jns
fsubp
mov
das
fnsave
pop
or
mov
push
icebp
mov
fisubl
push
testb
arpl
popf
adc
jnp
movsl
jmp
sbb
inc
or
fidivs
in
std
out
movsl
push
cli
ficomps
sub
inc
call
jg
aas
jle
clc
jno
sub
fs
imul
mov
iret
or
stc
addl
xchg
neg
jbe
mov
xchg
fsts
repnz
inc
pop
out
dec
inc
jg
loopne
mov
or
xor
and
cmpsl
stos
andl
repnz
imul
fsubl
adc
push
lahf
mov
mov
js
pop
jnp
addr16
dec
rcrb
add
pop
int
sbb
mov
bound
mov
mov
scas
ja
sbb
lahf
push
cmp
pop
negb
sti
loopne
ljmp
pushf
or
inc
call
scas
leave
jmp
or
int
mov
subb
enter
adc
sub
lret
jno
loopne
les
jecxz
jp
mov
sarb
outsb
out
in
xchg
stc
inc
insl
int
or
popa
xchg
enter
flds
enter
sub
sbb
inc
add
jns
imul
dec
cs
test
fwait
lret
scas
mov
sub
inc
insb
lods
pop
mov
loopne
mov
mov
scas
popa
data16
insb
lahf
cmp
andl
and
negb
jb
sub
inc
cmp
adc
add
dec
inc
xchg
jmp
stos
pusha
push
lods
add
fstpl
das
or
lcall
das
int3
cld
scas
ret
or
loopne
btl
dec
xor
mov
ss
or
adc
pmaxsw
push
sbb
inc
sbb
fimuls
push
push
test
bound
dec
or
leave
add
sbb
xchg
out
cld
add
and
paddsw
lods
loop
gs
mov
mov
cmpsb
or
dec
int3
or
scas
jle
movsl
ds
pushl
pop
push
sbb
cltd
lret
lret
lea
dec
enter
into
sub
ds
lods
movsb
imul
dec
jl
push
jle
sub
repz
movsl
adc
mov
loop
dec
stos
sbb
test
repz
jecxz
push
or
jge
jb
dec
jmp
sub
push
ret
daa
dec
mov
pop
cmpsb
outsb
cmp
fstpl
adc
in
mov
sbb
sahf
cmpsl
js
push
out
lret
sbb
fnsave
scas
lret
loopne
cmp
fmul
test
sahf
testl
mov
in
lods
lods
jbe
jbe
cmp
push
xchg
mov
daa
sub
arpl
rorb
das
lods
arpl
in
push
jg
je
push
xor
pop
pusha
ret
sub
clc
xchg
out
mov
movsb
das
int3
adcb
out
cmp
pop
cmp
sbb
int3
mov
mov
jnp
mov
jmp
push
mov
ds
ret
ds
dec
test
pop
loopne
push
insl
imul
insb
pop
in
loop
and
sbb
leave
mov
aaa
fsubrl
inc
je
xchg
dec
mov
dec
in
sahf
data16
dec
xchg
adc
pop
out
out
popf
cmp
mov
subl
adc
add
push
mov
xchg
pop
jle
sbb
push
mov
das
sub
divps
fisubrs
pop
insl
sub
sbb
push
jle
xchg
in
mov
pop
jo
sbbl
imul
out
loop
insb
xlat
ja
inc
roll
mov
ds
rcr
xchg
sbb
mov
mov
cmp
enter
in
pop
cmp
pusha
xchg
mov
or
aaa
xchg
imul
xchg
dec
int3
call
push
prefetch
cmpsb
movsb
sbb
pop
das
mov
dec
lret
lods
jl
enter
cmpl
pop
das
fnstcw
mov
imul
lods
in
xor
scas
popf
mov
push
daa
imul
cmpsb
in
daa
sub
in
pop
jecxz
sbb
sahf
mov
cmc
fs
movsb
sahf
mov
mov
in
fs
and
push
xchg
ficoms
add
out
cli
and
mov
sbb
fstl
xchg
imul
dec
fisttps
dec
xchg
int3
dec
pop
push
mov
pop
sbb
xlat
push
insl
lods
js
adc
push
scas
jmp
and
cmpsl
fimull
inc
sbb
scas
push
in
pop
sahf
es
pop
enter
push
jge
push
sbb
jl
sub
dec
cwtl
pop
movsb
pop
hlt
movsl
or
xchg
sbb
popf
andb
cltd
dec
mov
test
sbb
les
out
sub
mov
mov
pop
mov
pop
cmpl
fidivs
dec
in
jnp
mov
loopne
call
clc
fldcw
cmp
subl
xor
cmpsb
pushf
mov
dec
or
or
loopne
ds
adc
or
in
mov
mov
loopne
pop
imul
push
mov
in
mov
ds
sbb
mov
cmpsb
cmp
aaa
and
inc
jnp
stc
out
in
sbb
cmc
inc
xchg
out
and
fsubp
fcmovbe
xchg
aam
add
outsb
jg
dec
repnz
scas
jl
sub
pushf
daa
xchg
xor
pop
shrb
xor
loopne
add
sub
movsl
in
std
and
dec
push
xchg
aas
cld
dec
and
cmp
push
push
push
flds
dec
imul
into
cmp
push
or
into
sahf
sahf
jle
fbld
insl
sbb
mov
mov
or
imul
loop
cmp
push
cli
xor
lock
jp
or
or
subl
ljmp
out
in
pop
clc
aam
sbb
clc
xchg
sub
lahf
imull
sub
sti
xor
jb
cmp
shrb
cmp
aaa
loopne
or
xor
jno
or
or
inc
fs
cmp
jno
decb
fstps
cld
int
pop
xchg
daa
shrb
mov
aaa
or
mov
jl
rorl
gs
dec
xchg
mov
call
pop
pop
push
or
pop
push
sub
sbb
insb
mov
les
lods
sbb
fcompl
hlt
aas
inc
test
mov
mov
push
shll
jno
outsb
rcrl
push
popf
jnp
pop
out
fisttpll
mov
pop
push
cmp
jl
push
inc
scas
xchg
xlat
movups
ljmp
mov
xlat
out
dec
imul
scas
out
jb
movsl
mov
inc
inc
aad
daa
xor
outsb
cli
and
pop
fstpl
adc
adc
lods
mov
ds
mov
shll
gs
jmp
pusha
jg
icebp
aaa
mov
inc
push
pop
inc
dec
adc
in
leave
add
insb
mov
or
fidivs
rorb
imul
daa
sbb
movsl
xor
pop
js
mov
imul
loope
out
out
xchg
push
xor
mov
or
sub
lahf
sub
ss
mov
ja
ud2
and
sub
gs
pop
xor
sarb
mov
ljmp
xchg
dec
leave
dec
pop
popf
pop
xchg
jmp
sbb
scas
inc
fmuls
pop
inc
xchg
cmp
loopne
lret
sub
in
adc
loop
and
jp
pushf
loope
dec
cmp
std
xor
popa
dec
loopne
dec
inc
xchg
fnstsw
mov
outsb
sbb
fnstenv
aaa
int
out
lods
dec
aas
ljmp
stc
icebp
sbb
fdivrl
xor
dec
fistpll
xlat
pop
inc
sbb
xor
repnz
jle
stos
movsb
in
push
scas
or
sub
or
gs
or
mov
add
lods
iret
sub
mov
cwtl
enter
das
js
pushf
enter
pop
call
outsb
imul
push
aas
ds
scas
mov
test
adc
xor
outsb
dec
dec
out
pop
cmp
cmp
inc
fsubrl
xchg
mov
cmp
cmp
loopne
pusha
ljmp
insl
xor
test
aad
inc
in
pop
push
dec
sbb
pop
out
test
test
rcrb
ss
dec
push
pusha
dec
daa
pop
pop
pop
daa
int
fadd
jnp
adcb
aad
rolb
inc
cli
dec
movsl
sarl
fs
sub
stos
cmp
xchg
int
dec
jmp
jl
push
fdivrs
loopne
js
fildll
inc
pop
push
sub
in
dec
pop
or
jae
test
in
xchg
ljmp
ud0
or
adc
sub
xor
lods
xor
jmp
scas
aas
outsb
cs
scas
cmp
mov
mov
mov
subl
pop
xor
mov
test
or
push
push
mov
mov
mov
dec
fldt
add
jp
pop
sub
outsb
cld
aaa
out
int
sbb
test
adc
dec
mov
ret
repnz
test
add
loopne
and
mov
daa
in
gs
push
sbb
mov
pop
loopne
movsb
mov
sub
pop
ja
add
lret
stos
inc
insb
xchg
sub
push
jae
mov
jl
mov
pop
pushf
mov
loopne,pn
push
or
cwtl
mov
cmp
aas
pop
aaa
loop
and
push
arpl
aaa
pop
push
lds
xor
xchg
pop
scas
jb
pop
imul
enter
rcrb
cmp
sbb
add
sub
aaa
fwait
and
jb
aas
push
cmp
das
loopne
std
ljmp
or
std
adc
mov
add
pop
xchg
repnz
xchg
dec
insl
jnp
sti
cmp
mov
pop
sbb
push
xor
movsb
out
sbb
clc
mov
mov
les
xchg
push
test
popf
testb
outsb
inc
sbb
stc
popa
and
mov
push
ds
adc
data16
add
daa
xor
repz
add
leave
push
gs
icebp
stc
loopne
stos
out
mov
sub
popa
sub
and
fmul
push
bound
iret
fcomp
gs
flds
sub
outsl
mov
pop
aam
fnstcw
jnp
arpl
jo
int3
pop
sti
int3
pop
aam
and
xchg
ficompl
insl
out
adcb
push
cmp
rolb
cmpsl
sub
outsb
pop
scas
xchg
cmovs
popa
cmp
in
mov
mov
in
pop
xchg
lods
movsb
inc
es
or
subl
add
fdivrl
mov
aas
add
das
mov
cmpsl
lods
cs
lahf
or
es
mov
lahf
test
es
xor
lea
bswap
jg
stos
jns
or
pusha
inc
bswap
cmc
jl
das
jae
adc
xchg
ds
aas
gs
fbld
cld
imul
add
fistpl
and
mov
mov
shrb
iret
leave
sbb
jle
daa
mov
popa
lahf
and
mov
insl
jno
xor
add
push
dec
xor
xor
or
dec
cmpsl
xchg
ret
jmp
pop
inc
jge
push
imul
and
repz
loope
mov
enter
push
test
aad
pop
lret
push
test
add
jmp
imul
sub
notl
imul
sbb
ljmp
fldt
add
aam
fucom
lea
ljmp
imul
jle
jl
jae
pop
sbb
adc
mov
cmp
mov
push
sbb
xor
dec
cmp
sub
inc
into
mov
mov
in
fmulp
jge
es
jns
sub
push
pop
sbb
into
std
push
lcall
adc
mov
subl
fld1
int
mov
or
fucomp
call
test
leave
or
test
mov
sbb
sarb
inc
dec
push
cli
out
insb
sbb
int3
adc
shlb
lods
sub
push
pop
loopne
ret
sub
dec
pop
out
add
push
es
xorl
cli
int
push
sub
insl
mov
cmpsl
and
insb
sbb
adc
push
sahf
pop
and
insl
sbb
ljmp
jnp
xchg
cli
xchg
sub
mov
popf
das
jg
pop
xchg
daa
outsb
scas
jmp
int3
and
mov
imul
ficomps
cmpsl
in
sbb
add
mov
loopne
gs
cmc
sub
dec
dec
jb
push
fidivrs
test
inc
mov
cmp
inc
loopne
divl
push
adc
lods
int3
xor
movsb
jae,pt
pop
or
xchg
sti
mov
fimuls
stc
or
mov
mov
mov
push
and
aas
or
jl
lret
cmp
sub
in
enter
je
mov
xchg
fistps
add
xlat
loopne
push
xor
pop
aad
inc
data16
data16
pop
cli
push
inc
loope
jle
daa
out
jb
or
imul
pop
sub
sub
push
pop
imul
and
pop
iret
out
scas
ljmp
sub
lret
mov
xchg
xchg
lods
pop
int3
int
lcall
ds
out
leave
stc
loopne
lret
scas
in
inc
fisubrl
inc
inc
fldl
dec
sub
mov
pop
cs
push
aaa
cmp
sbb
ret
rorl
jmp
lcall
data16
mov
jae
push
into
sub
mov
cld
and
fisubl
jne
cmp
mov
fidivl
fdivrl
pop
aad
add
push
push
mov
push
addb
mov
and
loop
test
call
loope
movsl
out
into
xor
add
or
out
sub
pop
dec
xlat
fsubr
xor
fwait
xor
xlat
sub
fisubrs
adc
push
sub
add
repnz
aaa
fistl
mov
stos
int
mov
pop
cmc
ret
or
clc
jl
neg
mov
push
das
outsb
push
jnp
leave
adc
pop
loopne
dec
outsb
sub
out
pop
pop
dec
jmp
cs
and
xchg
sub
call
dec
pop
jb
mov
xor
stos
cli
mov
fldcw
mov
mov
adc
rol
stc
and
mov
pop
dec
test
and
mov
push
and
and
and
mov
add
loopne
inc
loopne
dec
lret
popf
stos
sub
xchg
scas
lret
dec
fsts
std
lods
fcmovne
je
mov
add
mov
adc
jle
stc
jae
or
rclb
cli
push
js
imul
xchg
adcl
pop
or
mov
out
out
jge
or
xchg
fdivl
cmp
jb
std
sub
outsb
and
shrl
mov
inc
xchg
pop
cmpsb
pop
mov
scas
sub
xor
jo
getsec
dec
xor
add
mov
mov
dec
pushf
leave
dec
lds
in
or
insb
scas
dec
mov
popa
sub
fucomp
aaa
out
loopne
and
xlat
int3
into
movl
mov
inc
pop
inc
xor
sub
ficompl
mov
icebp
fcomp
insl
push
sub
sbb
das
sub
push
test
xchg
cmc
pop
pop
call
in
and
jns
adc
das
push
mov
jnp
in
call
pop
mov
loopne
cmp
pop
cmp
popf
or
adc
cmpsb
sub
inc
out
enter
add
jns
fcoml
popa
cld
loope
lret
int3
mov
pusha
sbb
aaa
subb
mov
loopne
sti
fisttpl
sub
nop
mov
dec
jge
cmpsl
and
jle
or
dec
sbb
jecxz
mov
pop
leave
mov
mov
loope
push
dec
sbb
mov
call
test
mov
call
out
jp
mov
push
jge
xor
lcall
pop
ljmp
jge
sub
cmp
cmp
int3
sbb
lret
fdivrl
add
insl
loopne
outsb
fisubrl
lret
pop
fadds
pop
outsb
repz
pushf
in
cs
sbb
aam
push
pop
psubusb
ficomps
aas
rsm
call
mov
inc
ljmp
push
loop
fisubrs
loopne
insl
and
sbb
xchg
sub
outsb
stos
fwait
sub
pop
shrb
push
xchg
daa
pop
popf
out
enter
fiadds
dec
cmp
inc
jl
push
mov
aaa
cmp
loope
cmp
insl
cld
pop
add
loopne
inc
inc
xchg
mov
pusha
popa
sbb
inc
jle
loop
mov
int
xor
in
iret
push
loopne
push
pop
pop
sbb
bnd
xchg
sub
push
mov
sub
mov
pop
mov
xchg
push
pusha
lahf
inc
out
sbb
push
popa
add
fisubrs
outsb
ficomps
sub
rorl
push
xchg
insb
stos
xor
jle
in
or
mov
push
mov
add
out
cmpl
xchg
or
loopne
stc
cmp
inc
fs
lcall
out
or
jno
mov
dec
cmc
pop
into
dec
aam
mov
into
fisubrs
das
add
jg
lahf
dec
shl
jge
xor
stos
lret
imul
mov
mov
mov
fistpll
cmpsb
fs
lcall
insb
or
test
mov
jge
or
dec
addr16
stc
pop
arpl
repnz
and
sar
push
dec
ficoml
push
jae
sbb
push
and
out
aaa
pop
mov
add
jle
adc
mov
pop
adc
xchg
bound
dec
pop
cmp
mov
adc
loope
sub
rorb
mov
pop
xchg
rorb
sbb
and
mov
and
and
out
popf
movsl
and
sub
push
rorl
addr16
mov
mov
aas
xchg
in
push
jbe
xchg
and
into
pop
insb
fwait
nop
jnp
lret
and
notb
lock
ds
das
jle
enter
mov
push
fsubrl
fdivrl
aas
stc
or
rcrb
sub
dec
pop
call
mov
push
gs
arpl
mov
jnp
xor
pop
inc
insl
xor
mov
cmpsb
dec
aaa
outsl
out
out
into
enter
fnsave
out
jecxz
sbb
or
fdivrs
ret
repnz
or
jge
out
lret
mov
rcr
cmp
out
aaa
mov
xchg
popa
call
into
or
sub
and
push
in
jl
sbb
or
sbb
lcall
loopne
nop
dec
sub
shld
push
dec
pop
cmp
or
pop
dec
inc
sub
imul
mov
add
and
loopne
inc
stos
int3
fnstenv
out
mov
xchg
rcrb
mov
loopne
cmp
push
loop
repnz
shl
sbb
pop
stc
in
add
or
decb
repnz
push
dec
in
sbb
aaa
add
jne
xchg
call
mov
clc
inc
cmc
scas
dec
cltd
xor
lahf
mov
xchg
and
and
cwtl
loop
add
xchg
inc
mov
cmp
arpl
aad
addr16
jg
scas
movsb
std
es
repnz
cmp
mov
dec
push
popf
dec
jns
or
mov
xor
loopne
inc
add
push
push
xlat
lea
sub
jbe
aaa
ret
cmpsb
divb
gs
mov
push
push
aas
sarl
test
or
cmp
or
push
mov
push
mov
jp
adc
mov
insl
mov
xchg
test
daa
mov
stos
pop
pop
add
jl
jg
movsb
mov
dec
push
nop
pop
outsl
mov
jecxz
in
sahf
push
xor
sbb
push
aas
pop
fistpll
shrb
xchg
or
jge
out
dec
int3
aas
jno
fidivrs
cld
out
xchg
mov
fdivp
or
ror
pop
mov
fwait
dec
outsb
push
outsb
mov
pop
mov
das
mov
outsb
lea
mov
sbb
cli
pop
cmp
out
les
cmp
cs
mov
adc
jne
or
adc
mov
sbb
loopne
fldenv
mov
inc
push
das
sbb
inc
outsl
cmp
jae
add
xor
adc
push
adcl
jmp
das
cli
mov
imul
jecxz
mov
lods
cmp
and
and
clc
push
repz
subl
ja
int
mov
jp
adc
mov
arpl
popa
outsb
and
fwait
cmpsl
incl
bound
push
mov
das
jge
xchg
sbb
and
test
bound
push
iret
jo
mov
and
cmc
mov
imul
pop
call
rcll
push
out
fwait
cmpsl
pop
cmp
fs
dec
popa
out
aas
inc
daa
outsb
cmp
aaa
inc
lods
scas
rol
pfmul
xor
into
in
pop
rcrb
ss
das
and
jecxz
ja
inc
jns
bound
sbb
imul
dec
push
ss
inc
cld
sub
pop
repz
aas
or
cmpsl
ds
in
add
jns
sbb
mov
push
xchg
ja
mov
mov
or
clc
and
cmp
jae
dec
lea
stos
adc
push
jae
lea
jp
inc
xor
das
in
loopne
sahf
jo
sub
sub
cmp
imul
cmp
subb
subl
hlt
inc
aaa
push
ds
xchg
sahf
mov
and
hlt
and
data16
pop
addr16
mov
dec
ficoms
sbb
push
in
insl
add
mov
sbb
insl
mov
hlt
lea
rcll
jle
xchg
and
and
xchg
lods
lret
lea
ljmp
sub
sub
push
fisttpl
mov
mov
jmp
inc
cmc
xorb
pop
enter
fidivrs
dec
imul
add
std
int3
in
dec
inc
sbb
inc
stc
mov
decb
fmulp
cmpsl
daa
dec
push
or
inc
sbb
pop
fsubrp
mov
and
scas
ds
jg
jle
out
enter
xchg
jnp
or
push
rcrl
in
leave
das
add
outsb
addr16
mov
popa
out
and
push
and
inc
into
loope
ds
sahf
dec
into
int3
adc
mov
inc
ror
sbb
cmp
mov
shrl
cmpsb
inc
pop
loop
pop
xchg
aas
ljmp
pop
xor
das
addr16
aas
mov
arpl
addr16
cmp
imul
aaa
mov
xchg
or
sbb
ja
dec
jno
pushf
shlb
out
mov
add
dec
sub
ss
dec
jns
mov
cmp
mov
mov
fmulp
ljmp
sbb
stos
test
pusha
add
sub
aas
cmp
out
scas
push
xor
movd
xor
cmp
das
push
mov
ja
sub
mov
cwtl
jns
sbb
aas
dec
pop
imul
out
cmp
pop
or
fwait
ret
stos
imull
mov
cmp
inc
cmpsl
dec
cmpsb
ljmp
or
pop
jecxz
push
sbb
addr16
cmp
sbb
mov
rcrl
push
das
mov
fwait
pusha
je
fcomip
outsl
aas
ficoms
insl
fucomp
mov
push
pop
std
inc
add
push
sub
and
pusha
into
rcll
dec
nop
jecxz
call
stos
mov
add
mov
enter
dec
mov
daa
pusha
xor
mov
ret
sti
insl
cli
ljmp
arpl
mov
sbb
shll
jnp
xlat
xor
xchg
loopne
mov
jns
mov
stos
nopl
inc
xor
dec
jmp
mulb
mov
mov
mov
sti
sub
shlb
repz
leave
xor
leave
inc
jnp
push
out
imul
mov
jg
outsb
ret
mov
dec
or
dec
out
dec
das
subl
inc
outsb
dec
sub
lahf
movsl
sbb
ljmp
movsb
ja
push
js
in
dec
mov
getsec
jb
stc
jb
xchg
clc
ja
sub
movsl
push
dec
jmp
dec
sub
inc
jg
daa
jo
subl
fsubp
cmpsb
jp
jecxz
int
ja
rorb
aad
mov
insb
push
sub
pop
cmp
pop
pop
or
xor
cmpb
insb
lods
jae
sbb
rolb
pop
sub
cmp
inc
xchg
mov
rcrb
imul
fisttps
fmull
popf
dec
adcb
pop
decb
sbb
lods
mov
orb
mov
jmp
gs
add
fisubrl
loopne
dec
in
mov
fisttpl
jne
mov
repz
and
daa
daa
and
fdivs
std
les
mov
das
les
stos
sbb
roll
ljmp
sbb
add
popa
lcall
inc
test
sahf
inc
mov
inc
sub
rcrb
lret
or
sub
imul
mov
fmull
sbb
cmp
loop
dec
xchg
push
xchg
loopne
mov
cli
sbb
and
dec
in
push
outsb
loope
dec
jg
sub
and
push
and
or
adc
mov
mov
and
mov
std
cmp
push
mov
dec
or
shrb
pop
pop
daa
mov
add
cli
cmp
adc
jae
and
ret
es
mov
jge
add
ss
mov
fwait
pop
adc
push
aas
loop
xchg
mov
jl
jno
scas
pop
xchg
push
jl
or
out
dec
aas
lcall
mov
jnp,pt
scas
sbb
outsl
arpl
addr16
ja
ret
out
jmp
lahf
sbb
aaa
shrb
mov
nop
pop
dec
stos
xchg
mov
mov
mov
lcall
adc
dec
push
lock
test
inc
xor
mov
and
call
and
jl
fnop
mov
lret
movl
sbb
imul
adc
sub
nop
adc
in
mov
loopne
xor
aad
jmp
or
ja
pop
movsl
ficomps
negl
out
in
add
sub
sbb
or
jge
roll
scas
dec
adc
and
aas
mov
loopne
out
sub
dec
ret
and
mov
xchg
daa
mov
dec
out
les
sub
sub
incb
into
subb
loopne
insb
scas
push
and
in
test
push
push
add
pop
mov
mov
jecxz
ljmp
sbb
rclb
flds
xor
sbb
cwtl
ljmp
addr16
mov
cmpsb
das
or
in
outsb
pop
inc
bound
sbb
pop
clc
push
pop
imul
jb
mulb
mov
or
fidivs
lods
daa
sbbl
in
push
add
sub
das
push
fsubrl
fcoms
out
pop
adc
fmul
lcall
sbb
dec
lret
xor
pop
inc
mov
imulb
cmp
stos
push
jbe
mov
scas
sahf
dec
testl
mov
or
push
dec
insb
pop
sahf
in
test
sub
xchg
scas
dec
add
outsb
sub
sahf
call
into
ret
mov
js
adc
cli
inc
push
scas
sub
ficoms
std
push
mov
sub
add
ljmp
and
loop
push
out
sbbl
push
sahf
into
xor
ficoms
cwtl
mov
mov
ljmp
jp
rol
mov
je
add
cmp
inc
and
cmp
das
pusha
loopne
ret
loope,pn
and
jns
lret
cmp
jmp
dec
pop
out
movsl
xchg
cmp
fs
cmp
out
jmp
mov
jge
in
fcmovnb
adc
dec
or
push
das
jmp
sub
xor
lea
cmp
pop
sbb
mov
popf
lret
mov
fisubrl
out
loop,pt
dec
mov
mov
bound
or
lret
lret
insb
or
std
sub
xor
lret
psubsb
or
jge
sub
sub
push
push
push
imul
cmp
and
fsubrs
xor
mov
pop
adc
sbb
push
arpl
cmc
fiaddl
jl
mov
lods
cmp
sbb
jle
push
jg
jo
mov
popa
cmpsb
outsb
test
lahf
movsl
addr16
xchg
fmuls
mov
jecxz
cmpsl
cs
or
pop
sub
aas
std
push
push
jmp
sub
sbb
and
add
mov
mov
ljmp
cmp
int
pop
psubsb
fs
in
mov
xchg
jle
imul
mov
loop
dec
aaa
stos
arpl
stos
add
loopne
mov
mov
vpcomq
mov
scas
rcr
out
cs
mov
jl
call
sbb
sbb
push
cs
int
scas
out
out
mov
imul
sub
repnz
sbb
aad
pop
dec
mov
pusha
in
arpl
int3
dec
leave
in
hlt
call
shlb
push
xchg
push
sub
insl
sub
outsb
fwait
push
dec
out
sub
cmp
cmp
js
cld
and
push
fsubrl
jl
outsb
xor
pop
loop
lods
rcrb
data16
jg
sbb
ja
cmp
or
xor
data16
mov
mov
sub
and
fidivrl
fimuls
fdivl
cmc
rcrl
mov
pop
push
xlat
das
sbb
pop
shrb
out
cs
mov
hlt
mov
mov
xchg
mov
stos
fidivs
xchg
xor
pop
push
jmp
inc
pusha
jg
bound
xchg
sahf
movsb
and
dec
sbb
cmpl
out
idivl
mov
movsl
cld
int
mov
mov
pushf
and
data16
mov
sahf
jbe
ljmp
xor
movsb
sbb
movd
jbe
push
mov
cmpsb
dec
cmp
xchg
mov
lods
daa
push
jae
out
enter
pop
xchg
xchg
out
cmc
dec
outsb
mov
mov
rcll
rol
outsb
into
mov
mov
cs
outsb
imul
call
pop
ljmp
pop
push
and
inc
stc
jno
add
orl
dec
mov
and
stos
out
pop
aaa
imul
dec
scas
and
pop
cmp
nop
dec
pop
insl
subl
test
pop
testl
pop
es
insl
enter
out
mov
jmp
loope
out
fs
clc
xchg
call
mov
loopne
dec
add
pushf
lahf
push
stc
jge
fs
dec
sahf
fsubrl
pop
jecxz
inc
jae
sbb
or
pop
sbb
js
mov
mov
nopl
das
stc
mov
ror
push
outsb
insl
aad
out
and
jl
push
out
add
fisubrs
mov
sbb
or
jne
daa
into
rcr
scas
mov
nopl
aas
bound
insl
aaa
mov
add
jno
xor
dec
daa
fistpll
rol
sub
mov
test
je
and
jmp
popf
stos
xchg
mov
scas
cs
push
ja
or
std
mov
call
loopne
push
pop
jg
xor
xor
mov
or
mov
mov
or
or
mov
sbb
cli
call
mov
pop
pop
mov
mov
shlb
out
sub
mov
inc
aas
popf
inc
fcoms
repnz
sub
mov
sbb
sbb
loop
mov
mov
lret
and
imul
daa
mov
xor
rcrb
mov
ja
dec
inc
stc
jg
js
jl
push
out
cmpsb
loopne
js
hlt
sarb
mov
jecxz
and
push
cmpsl
xor
insb
fwait
pusha
std
dec
in
lock
loopne
lahf
mov
push
push
sub
sti
cld
repnz
loope
shrb
ljmp
pop
ds
cmp
adc
ja
int3
cmpsb
shlb
mov
push
inc
cmp
sbb
loopne
pop
and
addr16
xor
aas
push
xchg
sbb
mov
rorb
inc
in
pushf
xchg
jmp
add
shlb
and
mov
popa
xchg
push
bound
movsl
aas
mov
or
enter
inc
pop
cmp
addr16
out
sub
cli
push
out
or
push
sbb
push
in
jecxz
ds
push
ret
shrl
inc
aaa
dec
shlb
cmp
mov
sbb
aas
mov
xor
imul
pop
sub
insb
loopne
inc
lret
push
and
dec
icebp
cli
shl
jg
xor
aas
popf
das
fs
roll
adc
cmp
pop
out
imul
fbstp
repz
dec
cmp
cmpsl
mov
mov
les
fistpl
push
aaa
loop
sbb
and
out
out
movsb
repnz
lcall
sarl
dec
jns
mov
jb
bound
stc
pop
push
call
xchg
mov
pop
mov
out
rcr
mov
testl
cmp
jecxz
cmp
adc
popa
mov
cmp
insl
in
sbb
or
push
dec
mov
fwait
dec
sub
fidivrs
clc
fwait
push
adc
pop
mov
jmp
int
fdivl
shrb
addr16
outsb
out
pop
test
lret
pop
sbbb
shrb
cmp
jne
loope
jl
mov
loopne
fwait
aad
outsl
xchg
sahf
stos
in
lods
pop
out
fs
fisttpll
shrb
inc
inc
test
jecxz
daa
lods
add
call
ret
loop
sbb
icebp
sbbb
insb
in
pushf
rcl
xor
insl
push
mov
dec
loope
mov
enter
orl
or
mov
fstpt
dec
enter
lods
xor
xchg
loop
cld
push
fildl
mov
xchg
mov
in
fs
cmp
leave
lods
jecxz
std
and
add
or
xor
shrl
inc
xchg
mov
or
xchg
cmp
dec
imul
out
iret
bound
dec
jae
fsubrl
int3
loopne
ds
mov
mov
lds
cmp
in
in
xchg
andl
mov
jmpw
dec
cmpsb
in
push
sbb
pop
sahf
cmp
hlt
bound
xchg
xchg
dec
leave
out
imul
ja
jecxz
xchg
sbb
dec
aaa
mov
sbb
stos
fs
das
std
inc
mov
xor
out
add
pop
test
inc
inc
rcrb
cmp
hlt
jmp
jo
fcomps
sub
and
pop
inc
xchg
jns
cmc
or
lods
pop
aaa
mov
mov
dec
outsb
xor
pop
pop
cmp
jbe
idiv
pop
mov
lds
jge
aam
or
xor
pop
inc
jb
xchg
arpl
stc
adc
or
push
lret
mov
pushf
xor
or
xchg
sbb
arpl
in
jge
out
adc
pusha
in
or
aaa
sub
std
jg
cmp
push
roll
in
scas
popa
inc
add
mov
inc
cmp
fcomps
xor
pop
stc
xchg
adc
lret
pop
xchg
mov
outsl
ftst
inc
sbb
loopne
leave
push
inc
loope
xchg
cmp
fs
jl
pop
loop
fs
mov
jmp
mov
push
popf
das
adc
xchg
imulb
mov
je
dec
mov
or
out
fcomp
sbb
out
arpl
push
jne
dec
sub
dec
jp
mov
adc
scas
mov
adc
incl
inc
pop
stc
sbb
mov
mov
in
mov
mov
popf
stc
push
mov
imul
std
jecxz
xlat
mov
outsb
mov
fistpll
daa
repz
stc
push
sub
jo
fstl
repz
sub
xchg
inc
pop
loopne
or
cmp
sub
iret
out
mov
scas
jmp
ret
js
es
sub
ss
push
mov
mov
jns
mov
ja
mov
repz
inc
mov
mov
mov
out
in
dec
jg
iret
lret
lret
loop
cmp
fistpl
imul
push
or
insl
mov
stos
push
sub
pop
aaa
cmp
mov
sbb
into
jecxz
xchg
and
pop
lods
ret
jg
pop
xchg
bound
pusha
push
cmp
ret
push
and
sub
mov
scas
sbbb
xchg
and
cmp
jle
popa
dec
mov
xchg
ja
push
or
dec
lahf
loop
rclb
or
mov
dec
ljmpw
sbb
in
out
aad
pop
outsb
lea
mov
aas
ja
mov
lds
mov
in
and
mov
jle,pn
movsl
mov
or
push
sarl
fisubs
and
sub
mov
ljmp
inc
pop
int3
mov
mov
mov
or
decl
das
divl
enter
enter
sub
xlat
aam
xlat
push
jp
push
rcrb
addl
sbb
fs
mov
adc
inc
jne
and
out
mov
cmp
xor
pop
das
xchg
pop
mov
cmpl
dec
sub
cmc
fiaddl
clc
lea
out
icebp
pop
cmp
sarb
mov
dec
xchg
jmp
adc
mov
enter
out
in
popa
cmc
sahf
cmp
mov
out
das
pop
sbb
jns
pop
leave
out
sbb
pop
push
mov
mov
adc
fst
inc
mov
push
cmp
push
out
clc
pop
inc
xor
sub
in
out
aas
fstl
cli
aas
sub
xor
rcrb
imul
incb
add
pop
imul
push
pop
mov
fimuls
or
push
out
std
scas
inc
loopne
sub
pop
dec
ret
push
call
xchg
pop
mov
rcrl
outsl
sbb
pop
or
out
std
jle
and
sahf
sbb
mov
test
add
fistpll
loope
lods
push
dec
sub
je
adc
fbstp
jg
push
jmp
xchg
data16
ret
lea
shrb
dec
ret
ret
call
daa
dec
pop
out
xchg
mov
insl
pop
out
or
mov
cmp
mov
add
add
dec
repnz
push
and
mov
mov
or
sub
and
xor
arpl
in
gs
cli
aaa
xor
xor
loopne
sub
pusha
inc
sub
out
inc
sub
das
stc
pop
cli
aas
pusha
shr
lcall
and
out
jbe
lods
hlt
leave
sbb
bound
scas
push
dec
push
and
or
cmpsl
sub
ss
sub
lahf
cmp
scas
outsb
push
addr16
call
ss
pusha
in
fbld
jbe
data16
es
loop
popa
inc
mov
popa
and
pop
dec
inc
mov
movsl
movsb
js
sbb
pop
subb
add
hlt
and
andb
mov
sub
jle
fisubrs
stos
dec
sub
imull
test
mov
pop
sbb
inc
sub
outsb
inc
sub
out
inc
sub
inc
xor
test
ljmp
add
cmpsb
inc
outsb
je
pop
cs
jb
hlt
xor
jecxz
lahf
pop
xchg
test
lret
loope
loopw
push
pusha
out
sub
cmp
and
cs
or
sahf
mov
mov
in
pop
xchg
push
dec
adc
inc
and
sbb
pop
cs
jl
inc
xchg
pop
sub
stc
mov
popf
fidivrs
dec
adc
mov
sub
dec
das
xor
and
sbb
sahf
loopne
pop
jmp
cld
fxtract
or
fdivrs
mov
imul
jg
std
das
out
scas
call
sub
stos
xor
std
sbb
out
cmc
pop
shrb
hlt
cmp
sub
or
or
xchg
iret
jg,pt
int3
mov
xlat
sub
ljmp
sub
push
popa
into
inc
loop
mov
cmpsb
sbb
loopne
fbld
mov
scas
or
or
dec
sub
mov
ljmp
stc
push
rcrb
ljmp
push
pop
or
cmc
lock
out
or
loope
scas
mov
repz
das
dec
ljmp
test
jmp
dec
out
cs
stc
jae
jp
xor
pop
je
bound
sbbb
outsb
ja
mov
push
aaa
xchg
inc
shrl
pop
mov
push
mov
cmp
and
cli
je
adc
dec
int
aam
and
cmpsb
test
je
cmc
add
pop
les
lds
mov
adc
and
out
and
sbb
push
sub
scas
enter
imul
sbb
sbb
or
leave
fs
aas
pop
loop
mov
sahf
out
lock
outsl
dec
mov
sub
push
cmpsl
lea
imul
test
in
xlat
xor
pop
mov
and
dec
push
mov
fisttpl
cmp
mov
popf
jb
in
adc
push
push
rorb
sub
fnstsw
es
cmpsl
cmp
cs
in
sbb
add
lods
fnstenv
cld
mov
mov
addr16
push
pop
seta
mov
cmp
dec
cmp
pop
movsb
cmpsb
cltd
wbinvd
in
loopne
scas
scas
mov
arpl
subl
mov
pop
adc
cmp
mov
dec
pop
mov
dec
lods
xchg
fldl2e
cmc
scas
out
push
out
lret
movsb
mov
lcall
pop
mov
notl
pop
pop
push
mov
dec
dec
or
push
sbb
aam
mov
aaa
scas
call
mov
mov
cltd
lds
sbb
data16
adc
scas
lahf
adc
jb
jo
sbb
pushf
punpcklbw
ret
ret
mov
addr16
mov
sarb
dec
popa
loopne
xchg
rcrl
inc
popa
fisttpl
std
or
jle
divb
ds
mov
pop
jo
scas
dec
pop
sbb
add
loopne
popf
imul
dec
mov
jmp
cltd
mov
mov
in
mov
shl
adc
xlat
lret
and
outsb
mov
and
mov
sahf
gs
xchg
push
add
movsb
mov
pushf
sahf
stc
inc
jmp
sub
dec
aas
pusha
sbb
test
ror
push
push
insb
test
shrb
sahf
pop
std
lods
xchg
mov
gs
mov
cmp
sarl
ljmp
out
daa
call
sbb
and
inc
and
gs
or
pop
mull
in
inc
pusha
sub
xchg
cmp
out
int3
lret
and
dec
cli
mov
jle
sbb
dec
fcoml
repnz
mov
push
popa
out
and
loopne
mov
outsb
shlb
pusha
push
dec
lock
leave
push
loop
fldenv
ds
jns
movsb
imul
or
lea
mov
jne
repnz
ja
in
pop
loope
push
cld
imul
sub
addr16
repz
out
fidivrl
sub
sti
imul
aaa
xchg
in
sahf
and
pusha
out
imull
fsubp
cltd
insb
sahf
dec
mov
and
ret
inc
fsubrs
dec
outsb
imulb
js
xorl
xchg
lock
mov
mov
ret
ret
inc
jnp
lea
mov
arpl
mov
sbb
sub
mov
in
jp
mov
fisubrs
ret
mov
dec
mov
cmp
xchg
cmp
ja
add
imul
insl
cmpsl
insl
inc
shl
push
inc
dec
movsl
das
pop
or
fisubs
imul
jmp
pop
mov
inc
addr16
loop
fisubrl
loopne,pt
data16
xchg
sub
push
sbb
shrl
repz
mov
adc
mov
push
adc
fmul
aam
cmc
push
mov
loop
sahf
scas
sbb
pop
dec
das
call
sub
icebp
scas
shl
cmpsl
xor
push
sahf
xor
mov
mov
dec
and
push
push
add
pop
dec
fidivs
arpl
mov
and
or
je
mov
clc
mov
scas
or
fidivl
shrb
adc
jmp
cmpsb
pop
sub
lock
clts
mov
scas
mov
xor
pop
xchg
lods
pop
mov
sbb
or
scas
scas
out
xorb
pop
pop
add
or
push
iret
popf
das
lret
jnp
aas
enter
mov
push
sbb
push
ret
insl
cmp
mov
xor
jb
pop
pop
test
sbb
mov
add
popa
test
pushf
movsl
jecxz
mov
jle
ret
hlt
mov
jb
and
dec
sbb
sub
insb
mov
iret
push
test
ljmp
in
and
sbb
or
imul
mov
ret
or
ja
mov
sbb
mov
fs
and
push
filds
mov
mov
cmp
pop
sub
stos
aas
das
xlat
sbb
int
mov
or
das
or
ficompl
in
push
push
sub
push
fcoml
popa
mov
mov
hlt
lret
xlat
cltd
jno
dec
pop
mov
sub
jle
push
ret
sbb
addr16
mov
mov
fstpl
scas
dec
mov
jbe
sub
fcompl
or
ret
clc
rclb
mov
psrad
insb
nop
sub
jg
pop
xorl
add
sbb
pop
push
sahf
mov
mov
call
push
jle
sub
scas
fs
cmpl
jg
fisubrl
cmp
test
jle
inc
sti
outsb
popf
aaa
and
mov
cmp
xlat
push
in
lds
das
dec
inc
out
imul
push
movsl
ret
mov
or
lock
loop
fwait
pop
mov
jecxz,pn
cld
mov
sub
iret
jg
mov
or
cwtl
lods
out
lea
and
inc
out
gs
fwait
and
sbb
loope
in
mov
jg
shrb
sub
ret
push
aam
stc
testb
mov
out
pop
pop
or
pop
xor
out
call
adc
push
or
pop
or
das
adc
aad
aad
movsb
push
mov
dec
adc
xor
mov
mov
daa
iret
mov
pop
sahf
cmp
inc
add
test
pop
or
adc
pop
sub
add
cmp
arpl
insl
xchg
xchg
ja
stos
xor
loope
and
insb
sub
leave
push
imul
bswap
or
lret
pop
push
mov
scas
push
daa
push
lock
inc
adc
xchg
mov
xor
dec
push
jo
fmul
or
mov
xchg
dec
cli
outsb
pop
aaa
ljmp
mov
cmpsb
jle
outsb
pop
jo
insl
jge
es
jle
push
xchg
loopnew
dec
sahf
pop
addr16
icebp
xchg
sarl
sahf
jp
hlt
sub
push
xchg
ds
sub
test
or
xchg
loop
fbld
es
rcrb
dec
movntq
or
lds
faddp
incl
out
xor
cltd
scas
addb
rcll
icebp
mov
insl
push
sar
add
jp
aaa
add
fidivrl
jge
sub
sbb
lock
pushf
aas
sar
out
ljmp
in
das
jmp
imul
adc
mov
divb
popa
fistps
int
call
pop
push
loop
sub
cs
mov
mov
xchg
fidivs
ja
leave
xlat
lea
mov
fsts
adc
sub
fnstsw
jp
pop
mov
jns
and
lods
mov
imul
mov
cmpl
sbb
out
or
test
jg
aaa
and
sub
fwait
aaa
and
sub
xchg
jp
fwait
es
adc
mov
sub
scas
mov
loopne
rcll
popa
sub
dec
pop
dec
int3
out
shrb
mov
push
jle
xchg
adc
push
mov
mov
ficompl
push
das
cmp
mov
inc
ss
adc
cmpsb
fst
popf
mov
dec
orb
sbb
mov
btc
testl
push
mov
data16
popf
xchg
scas
push
inc
xlat
cld
mov
lock
rorl
cmp
lods
cmp
jo
fisttpl
stc
dec
sbbb
lds
popf
inc
xlat
lods
stc
mov
inc
sbb
adc
dec
pop
in
scas
out
ss
mov
mov
add
pusha
dec
push
sub
or
xchg
idivl
xorb
test
mov
je
rol
jl
movsb
adc
popl
out
jp
into
in
cmp
sahf
mov
mov
dec
xor
outsl
push
out
mov
out
pop
ja
popf
outsb
fldcw
inc
mov
call
lods
lret
pusha
pop
lods
fdivp
lods
push
rcrl
push
loopne
mov
adc
mov
push
cli
loopne
mov
outsb
cmp
push
xchg
jmp
sub
and
adc
aaa
lods
aaa
mov
dec
mov
cmpsl
dec
cli
cmp
sbb
faddl
or
sub
in
mov
stos
out
push
daa
add
mov
popf
daa
aad
xlat
stos
movsb
sbb
sbbb
mov
fidivs
sar
cmp
mov
cli
sub
ss
mov
jle
jo
xchg
jg
sbbb
stos
lret
push
test
lods
xchg
rorb
jb
fsubrl
gs
mov
cmpsl
fimuls
insb
scas
popa
fistps
mov
cld
pop
cmpsb
out
xchg
dec
mov
sbb
mov
shrb
cld
xor
addr16
out
and
cmp
js
push
in
mov
das
es
out
xchg
pop
cmp
push
mov
or
jo
mov
in
cmpsl
aam
mov
cmp
fimuls
pop
mov
frstor
addl
sti
rcl
mov
mov
pop
ds
lea
pusha
movsb
push
loope
cld
dec
inc
icebp
push
cmp
mov
movsl
call
lock
outsb
imul
inc
ds
fistl
adc
mov
insl
flds
mov
inc
xchg
mov
jle
std
jnp
data16
cmp
cmpsl
test
jnp
mov
out
mov
ds
and
lds
into
add
and
sbb
xchg
inc
dec
dec
imull
push
loopne
inc
daa
cmp
and
std
les
cli
jg
mov
jl
pop
les
outsb
test
shll
iret
dec
mov
mov
cmp
fildll
sbb
repz
popf
mov
pop
lock
aaa
scas
pxor
scas
dec
pop
loop
xchg
out
pop
cld
mov
in
loopne
movl
pop
mov
mov
inc
sbb
xchg
sbb
push
push
xchg
xor
aaa
or
dec
mov
sub
dec
or
mov
xor
cltd
xlat
jnp
jp
pop
dec
or
push
mov
loop
push
sti
dec
outsb
int
adc
inc
push
mov
xor
aas
jmp
and
add
hlt
jecxz
insb
dec
fldt
jg
int3
insl
mov
jae
dec
cld
rcll
out
xchg
icebp
add
test
lock
mov
jne
out
rolb
pop
lahf
jl
sarl
movsl
add
pop
scas
fsubr
sbb
aad
scas
psraw
imul
sub
sbb
jg
cmp
outsb
mov
or
insb
dec
pusha
jle
leave
cmc
xchg
dec
test
fcmovne
inc
jle
insl
je
cmp
scas
inc
into
xor
pop
dec
mov
outsb
ret
loopne
xor
std
into
xchg
mov
jle
mov
add
out
inc
aad
push
pop
xor
adc
xor
jp
dec
mov
fimull
mov
popa
pop
aas
pusha
sahf
mov
dec
push
imul
cmp
loopne
jecxz
in
push
sub
add
mov
fcoml
adc
xlat
and
add
mov
insl
repz
in
scas
jb
pop
bound
idiv
loopne
lahf
aad
inc
sbb
sub
imul
adc
push
jecxz,pt
int
xchg
lret
sarl
fucomip
das
pop
sub
push
mov
loop
dec
insb
cld
fistpl
add
cld
loopne
mov
mov
add
pop
lret
cmp
cmp
jae
xchg
or
ja
addr16
repnz
jmp
bound
xchg
clc
cld
sahf
and
push
or
call
inc
fidivs
outsl
sbb
push
jno
scas
rcr
cmp
sbb
pop
lods
jecxz
mov
inc
ljmp
inc
das
cmp
sub
xor
mov
daa
sub
lods
aam
test
inc
sub
push
xchg
insl
and
cld
pusha
mov
mov
push
pop
pop
lahf
mov
sub
sub
pop
fnstsw
add
dec
jae
lds
dec
popa
leave
repnz
mov
addr16
into
add
aaa
stc
push
push
aaa
mov
push
push
xchg
xchg
push
lcall
bound
mov
loopne
push
add
lret
mov
sub
popa
sub
imul
fstp
pop
decl
sub
xor
pop
ja
add
and
sti
ljmp
push
enter
and
mov
lea
icebp
pop
mov
mov
int
cmp
cwtl
xchg
pop
subb
and
mov
push
jnp
fwait
das
xor
imul
fistl
push
jl
jmp
jle
push
pop
aaa
dec
xchg
insl
push
movsl
leave
xchg
fsubrl
call
add
cmp
outsb
fcmovne
cmp
cmpsb
jb
mov
jmp
cmp
popa
daa
dec
sbb
pop
jle
cmp
shrl
push
cmp
out
out
mov
pop
fdivl
shrb
loopne
sti
sbbb
call
dec
in
sub
enter
aam
loopne
test
sbb
push
test
sar
pop
mov
fadd
ds
sub
lods
sub
adc
xorl
pop
xchg
inc
mov
daa
dec
dec
mov
mov
lret
insl
std
in
aaa
adc
lods
in
sbb
jnp
cli
cmp
mov
stos
add
dec
mov
out
andb
dec
sahf
imul
push
xchg
ffree
ds
ret
pusha
mov
loope
stos
mov
sbb
sub
xchg
fs
dec
pop
lcall
push
sbb
mov
cs
stos
rorl
shrb
sbb
dec
rcll
xor
dec
stos
popf
outsb
or
fldenv
sub
icebp
sbb
pop
fs
jl
mov
lahf
jns
sar
inc
or
ds
popa
pop
adc
testl
mov
popa
data16
imul
cmpsl
dec
cli
shlb
loop
ljmp
stos
sub
pop
push
fidivrs
cmp
jnp
add
and
pop
inc
in
dec
jae
cmp
cmc
add
mov
mov
mov
push
jle
lods
and
shl
mov
ljmp
add
aad
bound
scas
in
aas
adc
xor
mov
adc
sbb
push
dec
das
out
xchg
mov
rolb
pop
pop
enter
cmp
mov
pop
imul
imul
sbb
sub
inc
sbb
push
loopne
mov
insb
xor
orl
jge
or
pusha
imul
jle
inc
addr16
or
pop
sub
lods
pop
dec
push
xor
add
sarb
sub
mov
pusha
js
and
loope
jp
das
xchg
inc
ja
cmpb
xlat
jbe
pop
inc
xchg
std
out
xchg
xlat
clc
ss
mov
jae
push
mov
sbb
out
jp
aam
mov
mov
cmp
mov
dec
xor
xchg
mov
xchg
ds
lock
and
out
mov
xor
int
stc
add
cmp
loopne
out
out
and
scas
add
scas
cltd
push
decb
sbb
and
push
fwait
adcl
xchg
pop
xchg
fucom
sbb
test
cmp
pop
adc
push
scas
call
xchg
lret
cs
mov
testl
mov
add
add
leave
cmp
test
push
stc
icebp
loopne
jp
dec
popa
aaa
popa
int
notb
push
cmp
and
sar
out
cmpsl
inc
gs
pusha
mov
shll
and
iret
ds
pop
popa
pop
add
loop
aas
movsl
arpl
mov
jg
and
or
aaa
add
jp
out
out
icebp
adc
sbb
es
dec
cli
pop
xor
cmc
fidivrs
js
pop
push
shlb
testl
push
and
push
divl
out
and
sub
push
add
or
arpl
add
add
dec
sbb
xchg
or
add
sbb
push
inc
rclb
mov
jle
push
dec
xchg
in
xchg
sbb
lret
neg
xchg
inc
or
enter
sti
pop
sub
dec
add
daa
push
mov
pop
ss
das
mov
cmp
pop
or
int3
stos
fistpl
out
sub
sub
outsb
nop
sbb
iret
cmp
xchg
pop
inc
out
ret
ds
ja
in
fsubrl
cvtps2pi
cmpsl
es
inc
in
outsb
xorl
lahf
loop
shlb
stc
aam
test
push
inc
ds
repz
adc
scas
ss
sbb
xor
xor
add
aad
popa
ljmp
ficompl
rorb
mov
dec
out
ljmp
jge
and
scas
ljmp
sbb
arpl
jmp
scas
gs
mov
jne
movsb
in
in
fistpl
sbb
pinsrw
cmp
ljmp
pop
out
lcall
push
enter
aad
loopne
pushf
inc
cld
add
ja
mov
mov
adc
mov
sbb
popw
and
sbb
lods
pop
mov
lods
inc
jno
movsl
sub
into
dec
repz
sbb
jge
pop
fisttps
mov
dec
stos
aaa
fsub
dec
sbb
movsb
mov
add
dec
sbb
or
shrb
push
mov
jge
fisttpll
xchg
insl
dec
fimuls
jne
fwait
adc
das
fbld
pop
shlb
push
jne
xchg
or
inc
iret
int
das
clc
inc
xchg
gs
dec
or
inc
cmp
dec
jmp
cmp
in
ljmp
dec
push
pop
mov
std
push
pusha
mov
stos
mov
dec
out
inc
or
mov
cs
fnstenv
mov
mov
adc
pop
sbb
sbb
imul
mov
mov
dec
cmpb
aas
loopne
xchg
jl
sbb
sub
pop
cmpsb
fisubrs
clc
sahf
xchg
cmp
dec
dec
mov
cld
bound
pop
fucomp
call
cs
das
cmp
mov
jmp
mov
rorl
mov
test
dec
push
adc
insl
mov
pop
add
daa
inc
push
inc
dec
imul
or
jae
adc
add
mov
loope
sbb
std
pop
sub
dec
divb
mov
add
jecxz
push
mov
cli
popf
ret
mov
or
mov
call
jg
inc
fisubrl
and
xchg
cld
cmp
sub
jp
dec
popa
popf
jmp
pushf
push
sbb
ret
adc
ficomps
insb
cmpsl
sub
loop
cs
jge
xor
cmp
fmull
pusha
fwait
sbb
imull
mov
outsb
inc
mov
xor
lahf
cld
das
scas
loopne
inc
dec
and
inc
js
pop
cmpl
sbb
jle
push
mov
sbbl
jecxz
xchg
addr16
test
mov
adc
in
dec
sahf
push
add
pushf
imul
data16
xchg
in
fcoml
sbb
xor
or
ljmp
out
adc
leave
hlt
test
push
xchg
mov
gs
enter
pusha
and
aaa
outsb
xlat
or
aam
in
repz
dec
loope
pop
cmpsb
loope
or
movsb
testl
fnstcw
out
cmp
test
into
mov
out
push
push
leave
mov
add
pusha
rolb
iret
jnp
or
or
adc
xlat
int3
inc
sub
imul
inc
jge
ds
test
mov
popa
pop
push
fidivrs
mov
xchg
mov
icebp
mov
pop
sbb
or
into
loopne
clc
insl
movsb
xchg
insl
dec
popa
push
sbb
loope
gs
mov
jns
ret
dec
dec
out
sub
loopne
sbb
xchg
aaa
dec
xor
mov
jg
test
fldt
pusha
xchg
insl
gs
loop
jle
js
into
xchg
mov
mov
cwtl
pop
xchg
dec
jne
jbe
jbe
and
pop
out
into
add
jp
movb
or
push
lret
adc
sub
das
mov
inc
out
and
inc
movsb
xor
and
into
xchg
ret
fs
into
das
sbb
and
pop
add
imul
xchg
mov
cld
mov
orl
aas
ret
dec
xchg
fldl
stc
test
and
pop
mov
loopne
dec
jbe
cltd
cli
pop
gs
jge
lods
sub
sbb
adc
mov
xlat
push
inc
aaa
push
lods
cli
aad
pop
out
add
pop
pcmpgtd
bound
push
mov
mov
addr16
cmp
es
daa
cld
test
mov
data16
or
adc
sbb
xor
icebp
dec
jae
adc
mov
cmp
in
mov
cmc
cmpb
das
fwait
out
jae
hlt
push
add
push
sub
dec
or
inc
scas
fidivrs
mov
xchg
fsubrs
popf
leave
testl
sbb
daa
addr16
xlat
xor
dec
xchg
lahf
gs
je
mov
jp
out
dec
lds
fsubrs
mov
sub
mov
cmpl
data16
lods
ja
mov
insl
out
sub
push
imul
rorb
ficompl
bound
pop
outsb
in
sbb
pusha
sahf
iret
dec
mov
adc
repnz
aaa
inc
ja
push
mov
and
inc
mov
pop
lods
sbb
jnp
aas
push
jb
inc
jg
out
in
mov
mov
mov
jno
repnz
pusha
mov
std
xchg
xchg
mov
aas
loop
bound
xchg
pop
int3
loopne
stos
dec
scas
or
xchg
push
pop
jecxz
and
in
push
pop
popf
mov
mov
popa
inc
popf
test
dec
xor
pusha
sbbl
ljmp
pushf
data16
out
aas
movsl
jmp
insl
push
mov
push
pop
jle
pop
lea
cmp
jecxz
js
jecxz
out
mov
movsb
mov
mov
test
mov
mov
loopne
cld
xor
lea
inc
std
aas
push
xor
outsb
stc
mov
lock
stos
jb
push
mov
mov
ds
mov
movsb
popf
daa
scas
pop
iret
loop
push
push
test
test
push
in
inc
push
ficomps
addb
jnp
int
mov
fiadds
loopne
out
push
lods
filds
add
jmp
xor
fsubr
daa
repnz
shlb
mov
cmpb
fsubr
loop
mov
mov
sbb
or
mov
mov
mov
cld
lods
cmp
aam
dec
test
mov
loopne
cltd
mov
sbb
add
xor
test
add
mov
test
jmp
xchg
sti
mov
mov
cmp
testl
dec
jne
dec
fxch
sbb
pop
fbld
mov
mov
inc
pop
ret
adc
out
mov
ja
fwait
xor
arpl
jg
leave
cmp
dec
adc
pop
pop
push
dec
cld
scas
or
pop
loopne
call
clc
std
mov
and
dec
aad
fiaddl
call
das
lret
add
xlat
pop
mov
in
mov
xchg
emms
xor
add
in
xchg
mov
movsb
sub
push
mov
adc
push
out
outsb
aaa
jmp
fwait
sbb
adc
mov
jecxz
in
ja
cmpsl
jo
mov
lods
lahf
das
jae
and
or
jl
fstps
ljmp
cld
push
cmp
fsub
mov
aas
call
paddq
xchg
add
js
sbb
hlt
mov
outsb
mov
add
ret
jmp
sbb
enter
lahf
daa
and
mov
adc
push
out
pop
and
xor
cmpb
das
cld
loopne
clc
mov
sbbb
stos
pop
fidivrs
dec
pop
pop
jno
dec
stc
inc
sahf
gs
ljmp
sbb
or
enter
je
push
lret
ret
mov
push
pop
jg
outsb
cltd
scas
sub
imul
sbb
lods
out
ljmp
sbb
xchg
fnsave
inc
pop
xchg
movsb
add
xchg
rclb
out
fstpl
fs
rorb
test
je
icebp
cli
fistpl
sti
inc
pop
mov
dec
test
decl
xchg
aas
out
inc
icebp
inc
pop
xchg
push
inc
ds
fidivs
das
nop
or
lea
call
loopne
lret
and
sub
scas
test
in
insl
aas
cmp
pop
das
ljmp
lea
test
loope
clc
out
dec
imul
popa
xchg
push
add
addr16
mov
stos
inc
sbb
mov
fisubs
pop
jno
scas
pop
mov
ljmp
push
cmp
aas
dec
or
loopne
xor
push
jp
push
jp
fcomps
dec
dec
mov
lods
or
mov
sti
cmpsb
push
idiv
mov
mov
or
stos
xchg
add
cmp
dec
cs
jp
adc
pop
call
push
shr
mov
mov
jno
push
sbb
mov
dec
mov
pop
stos
int
mov
out
cmp
pop
cltd
std
shlb
mov
jnp
enter
pop
or
push
mov
int
add
test
cwtl
jg
inc
mov
add
and
aaa
xchg
mov
xor
hlt
sub
xchg
inc
incb
loop
mov
mov
lcall
adc
hlt
xchg
loop
std
das
int3
pop
cmp
inc
outsb
inc
cli
add
lds
xchg
ljmp
mov
bound
fsubl
out
mov
lret
loop
mov
sarb
dec
repnz
pop
mov
ja
mov
insl
mov
mov
rorb
dec
jle
subb
loopne
sub
cmp
jle,pn
das
aas
loope
imul
pop
sub
imul
int3
add
sbb
mov
or
dec
mov
aad
xchg
loope
inc
sarl
push
fmuls
mov
fsubrl
mov
inc
mov
adc
out
cmp
fnstenv
lcall
mov
leave
lea
pop
pop
pop
push
pop
cmp
out
ja
std
cmp
pusha
test
arpl
in
push
insb
or
mov
or
xchg
pop
jg
clc
dec
repz
sub
fmul
icebp
push
push
lods
jmp
mov
and
add
inc
lea
sbb
enter
pusha
dec
cli
dec
daa
sub
sub
das
out
mov
xor
out
mov
rolb
ss
and
sbb
jmp
int3
dec
fwait
cmpsl
and
loop
dec
fdivr
int
in
lahf
dec
sbb
sbb
mov
orl
outsb
imul
sbb
rclb
mov
imul
insb
rcr
in
push
imul
rcrb
test
mov
pop
imul
lock
push
mov
in
bound
pop
subl
mov
pop
insb
and
in
cmc
in
mov
std
mov
out
rol
ss
neg
outsb
sub
or
movsb
jl
mov
sub
push
or
mov
and
jmp
scas
outsb
xchg
push
sub
ljmp
inc
or
dec
xor
mov
mov
pop
mov
stc
fdiv
sub
mov
mov
lods
jmp
loopne
imul
dec
xchg
sbb
adc
out
js,pn
dec
mov
insb
pop
push
cmc
push
stc
das
popa
xlat
das
push
cmc
mov
out
pop
mov
loop
addr16
dec
push
imul
repz
jns
addr16
fcmovb
mov
xchg
pop
movsb
sub
push
pop
jecxz
pusha
mov
cld
push
out
sub
pop
popf
mov
hlt
pop
and
jae
sahf
sbb
jecxz
cmp
pusha
xor
mov
jns
outsb
sti
jns
enter
xchg
sahf
movsb
test
cmp
nop
fimuls
stc
icebp
cmp
jae
fsubs
inc
pop
fdivrs
repnz
lock
aad
push
outsb
jmp
mov
sbbl
and
in
loopne
insl
jnp
in
push
mov
rclb
mov
xchg
testl
sub
addr16
int3
mov
movsb
jb
mov
sub
fadd
cli
jmp
pushf
sub
pusha
xchg
mov
pusha
sbb
or
in
fistpl
sbb
inc
repz
jns
mov
push
cmovne
and
mov
push
adc
insl
sti
shrb
push
movsb
xlat
pop
enter
push
mov
adc
dec
dec
xchg
mov
pop
rorb
mov
repz
outsb
cmp
jecxz
outsl
daa
inc
sub
pop
scas
prefetcht2
pop
stos
jno
sti
das
scas
imul
outsb
psraw
mov
push
dec
inc
mov
dec
adc
lret
popf
ficompl
mov
rcl
dec
dec
scas
mov
mov
lret
pop
repz
pop
jg
cmpsb
shll
mov
dec
pmaxub
or
loopne
push
jmp
add
mov
test
jl
loop
cs
xchg
js
and
out
jge
jmp
ret
push
call
and
out
xlat
xchg
and
fwait
inc
cmp
and
repnz
ds
in
addb
adc
scas
imul
sbb
add
ror
scas
cs
ljmp
gs
insb
xor
aaa
movsb
movsb
and
out
and
mov
dec
inc
insl
ret
subb
pusha
sbb
jle
roll
sub
mov
dec
pop
cld
das
adc
lret
mov
insl
sbb
pushf
xchg
add
mov
dec
sti
push
lods
jnp
fwait
sbb
arpl
ds
mov
mov
jmp
arpl
cmpsl
and
cld
sub
popa
and
or
mov
mov
jb
adc
gs
and
pop
sub
out
mov
cmp
adc
aaa
mov
fsubrl
lods
cmp
lcall
movsl
paddsw
lret
cld
ss
add
jae
fsubrp
push
loopne
sbb
mov
repnz
jae
inc
xchg
xor
or
pushf
cmp
mov
sub
and
and
inc
sbb
mov
int3
leave
mov
lret
xchg
mov
mov
shlb
ret
test
aam
mov
jb
aaa
int
sub
fistpl
pop
mov
fchs
xchg
pop
jge
add
jno
push
icebp
stc
push
pop
test
daa
sub
inc
pop
scas
int
mov
std
mov
add
cmp
xchg
xchg
jmp
fmull
dec
push
lods
sbb
repnz
push
push
mov
outsb
and
jg
cmp
leave
xor
mov
and
das
fidivs
je
insl
push
out
mov
jno
hlt
out
add
sub
loopne
cwtl
scas
mov
je
mov
push
sub
es
int
repnz
cmc
pop
stc
pop
pop
lds
inc
and
add
jmp
shlb
fidivl
dec
inc
mov
scas
push
in
mov
scas
sub
loopne
scas
dec
bound
sub
jb
cmpsb
fdivl
lock
inc
jbe
pop
icebp
or
in
lock
sbb
mov
mull
mov
arpl
daa
cmp
daa
dec
in
sub
mov
jmp
pop
lods
mov
jnp
push
adc
lds
arpl
and
fadds
push
or
aaa
inc
mov
sbbl
xchg
push
ljmp
mov
iret
add
sbb
sbb
popf
cmpsb
xchg
pop
rolb
sbb
and
mov
jnp
push
outsl
cli
mov
adc
dec
scas
loopne
mov
sbb
lret
ficoms
add
aam
push
jg
mov
adc
inc
daa
pop
jg
dec
mov
inc
mov
lret
push
dec
lods
popf
std
or
pop
cmp
bsf
dec
push
xor
adc
dec
hlt
out
outsb
daa
into
cmp
inc
dec
int
adc
aaa
jnp
or
xor
jg
aam
aam
sub
pusha
mov
out
cmp
stos
insb
pop
mov
sub
xor
sbb
jmp
xor
stos
dec
mov
inc
imul
mov
pusha
in
out
ljmp
pop
push
icebp
addr16
sub
fucomp
push
push
pop
out
adc
out
cmp
test
ljmp
out
jmp
out
insb
dec
cmpsl
inc
pop
add
pusha
pop
outsl
decb
adc
out
mov
das
frstor
pop
data16
and
sub
dec
in
loope
movsl
daa
cmp
loop
sub
dec
in
movsb
push
out
dec
lods
mov
sbb
btc
push
mov
pop
sbb
xchg
and
sub
not
or
sbb
dec
insl
pushf
sbb
inc
mov
scas
das
test
xor
out
pop
sub
jge
in
out
call
das
test
mov
push
aas
aaa
xchg
pop
icebp
push
jle
mov
lods
cmp
out
pop
stos
into
dec
in
jle
jmp
sub
dec
jp
je
outsl
add
out
repz
ja
fldt
in
sub
mov
push
pop
repz
popa
stos
dec
into
repz
push
test
das
sub
stc
sarb
pop
mov
mov
cmp
mov
push
lods
mov
lret
xor
cmc
ds
daa
cmp
lcall
movsl
push
cli
lea
out
jb
lea
ret
daa
xor
mov
jge
into
pop
out
imul
mov
jle
jno
adc
orb
out
jo
mov
fsubrs
loope
dec
push
test
out
sub
das
inc
pop
mov
das
iret
stos
incl
pop
movsb
in
cmp
mov
stos
or
xchg
test
push
push
loopne
push
pop
dec
push
frstor
pop
in
aas
loope
hlt
in
popf
lock
or
push
sbb
pop
push
popa
aaa
push
pop
lock
out
in
imul
mov
or
in
pushf
add
adc
out
clc
outsl
fsubl
and
loop
push
xchg
sub
sbb
mov
loopne
loop
lcall
sahf
aaa
fisubrl
mov
das
xchg
xchg
call
and
adc
arpl
pop
xchg
outsl
fimull
sub
adc
adc
test
push
dec
test
or
fisubl
adc
xchg
movsl
pop
jnp
pop
push
stc
lcall
sub
xor
dec
cmpsl
sarb
fiadds
into
xchg
aaa
shll
mov
sbb
inc
mov
push
lds
into
pop
dec
aaa
popa
insl
add
jge
cli
mov
addr16
lcall
mov
cs
mov
mov
dec
fiadds
push
sub
int3
inc
dec
insb
add
stos
imul
sub
int3
jmp
pop
outsb
pop
into
xchg
mov
mov
or
cli
cmp
subl
arpl
add
gs
mov
cmpsl
cmpsl
subl
shrb
rolb
push
jge
pop
jno
mov
pop
imull
aas
sub
push
iret
sarb
fstl
xchg
loope
insb
dec
cld
add
pop
jge
jae
loope
push
lea
out
cs
mov
out
fwait
jbe
mov
cmpb
bound
mov
jns
in
jae
inc
out
fwait
pop
cs
pop
push
push
xchg
mov
dec
addr16
ja
or
add
xchg
xlat
adc
pop
mov
hlt
sbb
lcall
push
jecxz
and
in
cmp
decl
inc
push
loope
scas
mov
in
sub
adc
jl
inc
adc
pop
sub
jbe
dec
fs
xchg
cmp
sub
or
push
add
mov
loope
pop
in
setbe
jle
jmp
mov
insb
lahf
adc
dec
jns
js
ret
inc
mov
or
cmp
fdivl
dec
idivl
push
xor
xor
inc
lods
push
and
divb
xor
shl
in
mov
cmp
mov
mov
xor
jp
lret
xchg
xorb
mov
ds
cld
adc
mov
sahf
out
mull
data16
aas
xor
loope
or
mov
cmp
xor
mov
stos
sarl
outsb
push
and
into
stos
jo
or
scas
sbb
dec
pop
loopne
pop
dec
mov
dec
sti
bound
fisttpl
xor
sbb
sub
mov
dec
adc
sahf
dec
insb
cmpb
pop
movsb
rcl
pop
mov
loope
jmp
push
mov
imul
push
lock
ficomps
or
in
rcll
out
jbe
filds
mov
mov
shlb
aaa
jg
pop
push
sbb
fstps
ucomiss
push
inc
outsb
jmp
sbb
and
jmp
pop
and
or
mov
mov
xor
lcall
and
inc
add
cmc
out
pop
pusha
out
insl
xor
rclb
mov
or
std
iret
xor
ljmp
rdtsc
pop
in
dec
clc
imul
das
notl
xlat
sbb
insb
add
inc
sbb
or
xorl
repz
push
hlt
or
cvtps2pi
data16
push
mov
xchg
les
sbb
ljmp
push
ret
stos
xchg
es
mov
jns
fdivrl
sbb
popa
sub
les
pop
ret
loop
jns
mov
ja
cmpsl
idiv
push
xchg
neg
sbb
fists
in
xchg
xchg
or
sub
dec
fisubl
or
jl
mov
cmp
mov
aad
dec
xlat
dec
lea
in
mov
fildl
mov
btc
lods
adc
sub
cmp
pop
sahf
cmp
icebp
ja
xorl
dec
dec
les
xchg
cld
mov
inc
jmp
lret
and
pop
pop
rolb
jnp
push
adc
jbe
xor
sti
jne
mov
stos
xor
push
mov
jae
lock
test
pop
push
daa
push
movsl
push
jb
repnz
out
fldenv
adc
sub
out
push
or
scas
xorb
not
sub
stos
cmp
jbe
xor
sub
int
lahf
push
ds
data16
stos
mov
pop
push
sti
and
inc
subb
inc
dec
add
xlat
push
mov
scas
push
or
xchg
das
testb
in
cs
cmpsb
ja
in
aad
sub
out
xorb
push
das
inc
lea
mov
fisubs
loope
bound
loop
jecxz
add
nop
adc
out
adc
stos
mov
xor
inc
pop
xor
and
fucom
fidivrs
addl
pop
gs
cmp
dec
fisubrs
sub
daa
sub
insl
adc
sub
fsubp
sub
insl
and
sub
sub
leave
sub
jg
cli
dec
out
push
push
sub
pop
iret
push
cmpb
push
in
fbld
fwait
dec
es
push
jb
cmp
xchg
jo
inc
sbb
push
iret
mov
imul
mov
les
test
sbb
push
fstpl
insl
cmp
sub
adcb
sbbl
mov
cmp
xor
lahf
sub
sub
pop
mov
sbb
mov
lret
fldenv
jg
push
shlb
dec
add
shl
and
mov
inc
loope
adc
popa
push
enter
mov
popa
inc
cmc
dec
mov
cmp
stc
mov
test
mov
pop
adc
das
sub
dec
fdivp
enter
inc
ret
sbb
cmp
dec
pop
insl
leave
jo
ret
sbb
xor
jo
int3
fwait
cmpsb
jl
push
loopne
sbb
in
ds
pop
loope
pop
xchg
xor
test
int3
mov
cmp
xchg
sub
pushf
les
xchg
ljmp
xor
loop
imul
sub
fnstcw
ljmp
jns
insb
jae
and
pop
xchg
jp
popf
cli
cld
pop
cli
lret
xor
jo
mov
xchg
cmp
fsts
lods
xchg
fstp
fwait
out
daa
cmp
movsbl
cld
sub
in
ficoms
ljmp
cmp
xchg
cwtl
mov
sbb
lods
push
gs
sub
out
shlb
sbb
lret
loopne
in
jne
cmp
cmp
sbb
cmpsl
lea
dec
xchg
scas
into
xor
xchg
sub
lcall
ret
mov
xchg
test
loop
or
sbb
mov
xor
push
adc
das
popf
ret
xchg
loopne
push
sbb
les
loop
imul
jo
push
xchg
inc
loope
rolb
adc
pop
mov
xchg
pop
push
imul
push
adc
stc
adc
dec
or
out
add
mov
inc
lods
loopne
std
stos
shlb
mov
leave
pusha
cwtl
sub
adc
xor
and
mov
pop
push
jmp
adc
mov
in
shlb
xor
testl
repnz
cmp
cmc
pop
andb
push
xor
dec
insl
push
loopne
pop
cmc
mov
pop
lahf
enter
out
rcr
pop
and
gs
jg
push
hlt
vaddpd
sub
rolb
add
stos
sub
scas
lcall
jns
jo
testl
dec
neg
negl
inc
or
cmpsb
test
cmp
pop
outsb
mov
int
xchg
scas
repz
xor
add
insl
cmp
or
sub
xchg
daa
int3
cmp
lock
sub
lods
xor
dec
mov
andl
xor
stc
mov
and
adc
aas
xchg
sarl
aas
dec
dec
call
mov
mov
mov
das
mov
pop
push
lods
es
sbb
pop
into
sbb
push
mov
out
or
sub
xor
pop
add
mov
mov
sbb
push
dec
scas
lcall
and
jns
sub
dec
lahf
xchg
leave
rolb
imul
push
ljmp
jnp
and
mov
cmp
aaa
insb
xor
loopne
mov
or
push
jge
cmp
jle
in
repnz
jmp
pushf
stc
cmp
mov
mov
orl
pusha
jl
stos
push
mov
pop
repnz
mov
xchg
mov
dec
movaps
xchg
das
or
inc
and
lods
push
dec
or
jp
xchg
stos
ja
jl
push
lods
pop
cmp
xor
fiadds
popf
jle
in
dec
addr16
sub
or
test
movsl
adc
mov
sbb
mov
or
push
ficompl
mov
jo
pop
dec
sub
jle
cs
scas
jp
popa
xchg
sbb
mov
sub
aad
out
das
mov
mov
rol
add
push
data16
mov
insb
loopne
nop
push
mov
adc
je
or
xchg
imul
jne
xor
inc
pop
sbb
stc
shrb
sub
or
imul
data16
dec
mov
sub
sbb
and
pop
fabs
pop
sbb
sub
into
adc
daa
mov
jb
push
in
pop
enter
stc
push
ficoms
repz
ljmp
addr16
fbstp
push
xor
jb
add
pushf
push
push
or
in
push
sub
lret
add
jmp
dec
mov
dec
scas
push
sub
jo
stos
sbb
push
leave
lock
or
movd
mov
push
test
push
pop
lahf
out
pop
jg
sub
jecxz
out
push
insl
mov
jg
repnz
movsb
repnz
pop
jo
push
fs
lret
scas
and
cmp
loop
mov
out
dec
and
sub
lret
push
mov
daa
loopne
and
jmp
and
das
push
aas
loopne
jnp
fbstp
xchg
xchg
mov
outsl
or
outsl
inc
jle
punpckhdq
shll
aaa
ficomps
mov
or
mov
iret
dec
in
sbb
popf
lret
cmp
je
and
pmaddwd
mov
js
out
push
add
pop
pop
sbb
mov
lcall
and
ret
ds
push
sar
adc
adc
mov
loopne
mov
subl
sbb
scas
into
sbb
jo
bound
jnp
insb
mov
outsl
cmp
in
lret
fnstsw
dec
into
imul
cmp
mov
roll
jno
add
and
nop
pop
xor
push
lods
test
adc
ret
into
jb
lcall
mov
and
loopne
mov
lds
mov
aam
mov
pusha
sub
in
imul
call
push
dec
push
mov
repnz
sbb
ds
jp
mov
sbb
aas
loopne
push
push
jmp
divl
or
lret
adc
xlat
fnstcw
mov
out
jecxz,pt
rcrb
add
or
push
scas
xchg
jae
or
repnz
inc
jp
lock
or
mov
lea
push
mov
aaa
lret
mov
out
aas
mov
loopne
rcll
jnp
loopne
sbb
mov
cmp
imul
or
pop
test
call
sar
orl
jmp
mov
inc
xchg
aas
and
sub
inc
xor
cmp
mov
loopne
test
mov
inc
ret
daa
sub
insb
xchg
mov
loop
aas
add
bndstx
or
pop
jmp
ds
pushf
or
sub
leave
jg
scas
mov
jno
push
lret
repnz
stos
xchg
aaa
mov
insb
sbb
movsl
mov
push
loopne
jne
dec
xchg
or
xor
mov
mov
scas
push
mov
adc
and
scas
and
adc
insb
loopne
sbb
das
repz
aam
cmpsb
in
scas
jl
pop
std
js
push
fidivs
or
xorb
adc
leave
xchg
mov
push
pop
loopne
inc
ds
xchg
pop
mov
dec
and
sbb
arpl
sub
out
mov
fldl
dec
and
rorl
popa
jl
push
loopne
mov
js
lahf
es
sub
mov
lds
sti
mov
aas
mov
test
push
dec
mov
movzbl
push
in
sub
sub
ds
sbb
sub
insb
add
outsb
sub
xchg
nop
prefetch
arpl
ja
js
jmp
mov
mov
mov
cs
jg
pop
dec
cmp
movd
mov
jns
push
inc
sbb
das
mov
es
jb
lods
fimuls
lods
xorb
mov
sub
cwtl
insb
rol
frstor
pushf
inc
out
insb
out
stos
insb
sub
sbb
loop
popa
das
stos
out
or
clc
icebp
push
sbb
gs
in
shrb
test
into
add
sahf
rorb
shrb
loop
dec
jp
cltd
in
out
add
addr16
ja
push
cltd
jmp
pusha
ja
xorb
push
mov
mov
push
and
pop
xchg
push
cld
pop
pusha
mov
dec
xor
pop
sbb
pop
cs
push
jno
dec
pop
outsb
mov
daa
loop
inc
test
in
pop
imul
mov
fwait
shlb
stc
mov
adc
lcall
repnz
mov
push
dec
loopne,pt
fisubrl
or
pop
insb
mov
fisttpl
dec
aas
xor
xchg
stos
lea
loop
out
arpl
or
or
sahf
cmpsl
pop
xchg
sub
mov
pop
test
pop
jge
fistps
mov
insb
ljmp
inc
std
push
dec
and
lret
push
imul
loop
loop
imul
cltd
dec
mov
insb
imul
out
es
mov
jne
sarb
adc
pop
push
sub
mov
push
or
jge
insl
or
cmp
cmp
mov
out
scas
mov
mov
jne
sub
mov
xlat
cmpsl
dec
sub
ficoml
mov
adc
sbb
dec
stos
pusha
out
lcall
cmpsl
lea
ret
stc
or
or
lcall
data16
into
dec
in
mov
test
not
pop
mov
lret
mov
adcb
fildll
mov
push
sub
lret
mov
cmp
loope
pop
cmp
or
mov
lds
dec
jnp
aas
add
lret
pop
ljmp
cld
ss
cmp
das
not
je
xorb
daa
loopne
push
cmc
dec
adc
out
sub
mov
testl
in
inc
enter
pop
and
mov
cmp
stc
dec
add
or
leave
mov
adc
pop
and
leave
xchg
dec
xchg
test
gs
andb
dec
mov
xor
push
outsb
in
cmc
pop
cmp
xchg
adc
pop
cwtl
fdivl
xor
insb
mov
ds
mulb
dec
mov
or
mov
jmp
add
push
mov
addl
dec
popa
xor
stos
insb
adc
imul
loop
and
shr
jp
into
lea
into
jle
push
jg
scas
cmpsl
pushf
mov
dec
jl
cli
subl
bound
inc
and
mov
int
fwait
sbb
es
dec
in
icebp
pop
arpl
sbb
jns
into
adc
or
sbb
js
xor
pop
sub
fucom
out
dec
or
push
fucom
neg
data16
mov
hlt
enter
sub
loopne
inc
pop
pushf
lods
dec
mov
push
push
cmp
inc
cmpsb
in
stc
jp
out
jl
mov
in
cld
xchg
shrb
sbb
push
add
je
out
sub
cmpsl
loopne
sbb
sbb
or
out
cwtl
shrl
pop
push
sarb
out
call
push
lods
fists
cmc
add
pop
add
push
nop
shll
push
push
push
sarb
mov
leave
roll
push
mov
jne
repnz
jns
js
and
scas
test
lock
stc
push
and
mov
and
shll
loope
xor
cmp
pushf
int
jno
movsl
in
add
insl
aas
sbb
mov
push
xchg
enter
jl
ljmp
mov
cmp
jmp
ljmp
push
xchg
mov
out
mov
jge
testb
xchg
sbb
fbld
dec
xlat
scas
loop
loopne
xchg
jl
push
cli
pxor
pop
adc
scas
or
push
inc
inc
cmp
arpl
scas
test
fistpll
and
imul
xchg
jle
inc
lock
sar
mov
aas
enter
jecxz
lret
shl
xor
in
cmpsl
mov
jnp
xchg
sahf
or
fnsave
decl
sbb
jg
pop
mov
imul
mov
dec
outsb
mov
fwait
pop
mov
dec
ja
stc
pop
add
movsl
aas
sbb
inc
rorb
dec
imul
test
sbb
scas
bound
arpl
out
push
push
popa
stos
add
jle
adcl
dec
cli
sub
leave
scas
jg
xor
jnp
dec
repz
mov
loop
mov
add
inc
jb
in
inc
pushf
orb
insl
out
imul
cmpsl
mov
mov
repnz
pop
in
add
push
xor
or
adc
cs
in
mov
dec
xchg
mov
repz
test
and
imul
scas
adc
stos
ds
cmp
hlt
mov
or
stos
int
das
stos
push
sub
add
out
adcl
loopne
stos
mov
cmp
sbb
cmp
rclb
xchg
push
cli
sbb
popa
out
dec
loope
shll
ret
leave
mov
mov
jmp
mov
mov
mov
outsb
pop
push
in
sbbl
aaa
sub
mov
push
loop
sub
lods
xchg
outsb
dec
in
cmp
lcall
jp
cs
cltd
mov
and
scas
fildll
push
into
insl
mov
xchg
dec
bound
ror
inc
add
cmc
loopne
xor
and
sarb
scas
jp
call
cmp
subb
xor
fwait
sbb
jg
adc
dec
lods
cwtl
call
push
jns
popf
sbb
mov
fidivrs
loopne
mov
pop
mov
xchg
push
push
adc
ljmp
push
xchg
dec
lcall
push
dec
jecxz
ds
xor
test
mov
jnp
addr16
stc
rorb
dec
loopne
mov
sbb
jg
in
test
imul
lods
rclb
lods
xchg
popa
mov
enter
rclb
mov
sbb
fimuls
pop
mov
adc
xchg
daa
test
dec
push
aad
inc
jge
xchg
inc
add
adc
and
pop
lret
ret
xchg
cmpsl
in
add
jge
fnstcw
add
sar
lahf
xor
imul
dec
inc
pop
sub
jle
mov
pop
outsb
push
pop
jb
rorb
push
fnstcw
add
imul
mov
in
out
stos
call
inc
push
dec
dec
adc
loopne
mov
sub
dec
pop
pop
mov
popl
sbb
mov
lcall
mov
ds
pop
aam
dec
aaa
mov
mov
xor
cmp
dec
add
push
mov
shll
jns
mov
sbb
pop
negl
sti
adc
push
add
push
sub
fidivs
dec
mov
lock
sbb
icebp
jns
fldcw
push
adcb
pusha
push
pop
add
mov
jae
xchg
add
add
icebp
and
lods
push
add
push
mov
daa
sub
out
sub
ficoms
inc
xchg
lock
faddl
mov
and
or
bound
mov
push
aas
outsl
dec
das
inc
iret
sub
dec
out
ds
fistl
pop
orb
sbb
faddl
pop
mov
ljmp
and
mov
les
es
adc
fxam
lret
insl
leave
pop
push
mov
jne
jle
xchg
push
pushf
test
es
addr16
inc
push
push
in
pop
xchg
lods
shrb
shlb
push
sbb
push
pop
aas
loope
movsb
inc
sbbb
sub
cmpsl
xchg
movsb
into
jb
add
jo
mov
mov
add
pusha
pop
bound
fsubr
xchg
xor
popa
call
sbb
ss
out
cltd
popa
aaa
fildll
rol
and
inc
adc
das
arpl
into
inc
sub
mov
add
imul
cli
imul
scas
out
pop
pop
das
imul
stc
stos
sub
push
mov
cmpsl
xchg
or
inc
mov
dec
out
out
in
scas
or
sar
sub
loope
cmpsb
scas
mov
scas
and
pmulhuw
insl
imul
or
mov
outsl
loop
mov
fisubrs
cmp
pop
movsb
dec
stos
insl
sub
inc
stc
xor
sahf
sbb
jmp
mov
xor
mov
fistpll
imul
xchg
loop
fcmovnbe
pop
daa
fucomip
testl
xchg
push
xor
xchg
fmulp
pop
dec
pop
cmp
enter
repnz
popf
ljmp
cltd
xor
sub
icebp
jle
inc
pop
in
sbbl
in
je
aam
pop
das
cmc
aas
jnp
stos
lret
in
lret
pushf
jl
push
mov
pusha
cmp
xchg
outsb
add
in
dec
insb
mov
adc
in
pop
enter
push
lret
rcl
and
in
les
pop
dec
popf
cwtl
stc
imul
outsb
or
movsb
shr
ja,pn
push
mov
stos
imul
das
int3
xor
jecxz
sub
fs
scas
mov
pop
jne
mov
pop
xlat
ficoml
out
pop
fcompl
cmpsb
in
adc
pop
dec
mov
and
cs
mov
mov
adc
test
or
stos
enter
jl
jns
sub
cmp
rolb
aaa
lcall
imul
outsb
mov
jle
fs
pop
stos
das
sbb
inc
shr
xor
mov
xchg
sub
jmp
aad
xchg
inc
pop
dec
ss
push
push
data16
push
aas
xchg
out
push
xchg
or
pop
lcall
lea
jp
vcvtss2si
pop
enter
mov
enter
mov
jae
icebp
jl
nop
cmpl
xchg
fstpl
insl
mov
pusha
ret
outsl
cmp
push
fildll
adc
ja
dec
jg
arpl
rcrl
pop
pusha
movsl
sarb
mov
push
test
and
sbb
incb
in
sbb
lods
pop
out
test
movsl
cmp
adc
pop
in
dec
jmp
aas
inc
push
cmp
outsb
in
imul
test
les
mov
fs
cmpsb
cmpsb
mov
rcr
outsb
xchg
stos
repz
movsb
mov
dec
pop
xchg
sahf
pop
shrl
mov
fcompl
mov
push
fisttpll
aad
and
movsb
push
or
lods
mov
mov
fistl
xchg
aas
aaa
test
repz
dec
dec
xchg
xchg
mov
das
push
mov
test
out
or
lods
xor
inc
stos
ret
mov
mov
cmp
and
loope
sub
ret
sub
mov
push
add
or
cmp
sub
or
or
pop
xchg
dec
imul
jae
adc
icebp
pop
mov
jne
andl
add
sahf
daa
test
mov
jl
sbb
add
dec
lcall
lret
in
jbe
outsb
into
and
mov
shlb
sbb
cmp
pop
jle
fstpt
das
orb
lods
mov
mov
in
add
mov
or
aas
loope
je
sarb
xchg
sub
and
scas
gs
mov
lcall
ficompl
je
jle
dec
scas
xchg
sub
mov
pusha
pop
and
cld
imul
push
cmpsl
incb
gs
cmp
mov
xchg
jnp
push
push
inc
dec
arpl
pop
inc
xchg
popf
mov
mov
cmp
loope
bound
push
sbb
loopne
popa
stc
aas
add
jno
lea
sub
push
push
sbb
dec
sbb
pop
pop
lcall
mov
xor
scas
pusha
aas
add
inc
pop
jmp
mov
aad
cwtl
and
or
jo
out
mov
push
dec
loopne,pn
mov
ror
sbb
insl
sti
fs
sub
or
mov
in
mov
xorw
and
scas
sbb
xor
popl
not
enter
lods
decb
imul
xor
out
into
shl
add
jecxz
es
bound
out
fcom
dec
les
pushf
inc
popf
and
mov
std
lcall
or
dec
mov
and
mov
sbb
pop
mov
sub
mov
dec
das
pop
cmpsb
fisttpl
mov
ficoms
stos
stc
notrack
inc
sbb
sub
sbb
testb
mov
fistps
jl
pop
jle
ds
fsubrs
dec
mov
jle
cli
into
sub
dec
fdivrp
pandn
xchg
jmp
fdivrp
into
dec
leave
sub
mov
or
adc
out
jl
or
stc
xchg
sbb
daa
xchg
cmp
dec
xchg
ret
into
cmp
fisubrl
add
dec
bound
ljmp
add
loope
rorl
mov
aaa
test
dec
lcall
dec
pushf
mov
sahf
mov
bound
jl
cli
add
xchg
sahf
das
push
cmpb
out
or
mov
mov
lea
sbb
xor
jne
or
add
aas
jecxz
mov
data16
incl
popf
imul
sub
sbb
pop
aas
xlat
ds
add
mov
sahf
cmp
insb
jge
iret
jmp
xchg
loop
enter
dec
movsb
mov
sbb
mov
sahf
outsb
pop
mov
fsubr
insb
lods
dec
add
mov
loopne
ret
rcr
shrb
push
sbb
mov
in
pop
fwait
cmp
mov
xor
pusha
scas
nop
mov
outsb
or
gs
pop
mov
rcrb
add
inc
and
std
bound
sub
dec
lahf
daa
push
sub
push
mov
clc
xchg
sub
dec
mov
out
dec
das
or
jno
mov
add
sbb
push
ljmp
xor
inc
cmp
es
push
fsubp
subl
andb
jecxz
clc
into
test
andb
add
xor
outsb
push
lock
imull
ljmp
popa
shlb
pop
es
outsb
loopne
and
lods
rcrb
pop
add
ds
push
insb
sub
int3
inc
add
popf
lods
repz
xchg
shlb
xchg
ds
sahf
popa
roll
fstpl
fdivr
movsb
xchg
scas
add
dec
loop
lds
sbb
push
cld
out
andb
cmovge
sub
fs
movsl
jmp
mov
arpl
outsl
xchg
es
imul
xor
sbb
and
movsl
push
sbb
bound
arpl
sub
nop
shlb
mov
insl
cwtl
ja
dec
pop
lcall
daa
addr16
add
movsb
movl
cwtl
mov
mov
cs
sarb
into
jb
test
orb
inc
xchg
inc
cmp
or
iretw
xchg
data16
jno
outsb
add
inc
mov
sub
outsb
jecxz
and
inc
loopne
aam
pop
cmpsb
mov
mov
int
stos
outsb
ret
movsb
jnp
fld
and
and
xchg
mov
insl
punpcklbw
incb
rorl
roll
xor
and
sbb
test
sub
xchg
dec
stos
aad
stos
inc
cmp
jecxz
mov
sbb
and
ficoms
rolb
and
inc
mov
dec
inc
mov
popa
push
push
scas
imul
add
insl
xchg
pop
sbb
jg
sub
dec
mov
push
std
add
inc
inc
sub
shrb
ja
popf
or
adc
pop
aad
cmp
pop
shll
in
sbb
sahf
mov
into
and
and
repz
lcall
xchg
cmpsb
loope
jecxz
jae
lds
inc
lcall
pop
xor
jge
scas
xchg
stos
lods
push
dec
rorl
mov
xor
cwtl
jecxz
imul
lret
sub
cli
cmpsb
jb
out
aad
add
add
push
out
pop
push
jbe
inc
rcrb
inc
mov
xchg
ss
push
jmp
decl
pop
pusha
sub
lea
mov
dec
rcrb
pusha
jmp
inc
and
push
pop
pop
sbb
push
sub
popa
loopne
dec
lods
inc
loopne
sub
push
arpl
sub
inc
push
ja
js
and
arpl
add
aas
pop
es
insl
nop
insb
out
inc
rorb
push
jno
into
mov
fisubs
out
subb
ljmp
xor
int3
icebp
stos
out
push
in
cltd
and
pusha
push
pushf
mov
ficomps
and
and
sub
dec
incl
fadds
xlat
cwtl
and
es
out
or
jle
inc
pop
ret
cli
pop
mov
arpl
and
inc
arpl
dec
sbb
insb
mov
jecxz
mov
push
jno
xchg
pop
scas
ficomps
bound
push
inc
out
add
inc
push
push
fimuls
cmc
dec
clc
dec
mov
and
mov
call
xlat
adc
leave
xor
ror
add
add
jne
and
pop
push
push
xchg
cs
imul
cmp
pop
sub
mov
jnp
adc
mov
outsb
jge
aas
mov
ljmp
pusha
out
cmp
and
jl
mov
lret
mov
aas
jecxz
sbb
addr16
aas
stos
insb
mov
inc
inc
gs
out
das
cmp
or
loope
addr16
out
inc
add
pop
das
fisubrl
call
fiadds
cmpsl
insb
sbb
or
leave
pop
add
mov
xor
imul
mov
addr16
sahf
xchg
and
push
pop
insb
int3
inc
bound
add
outsb
xorl
aaa
loop
shrl
xchg
push
dec
out
outsb
push
pop
out
insl
out
andb
mov
jecxz
outsl
cmp
sub
pushl
sub
loopne
jecxz
jp
aam
lret
mov
sarl
mov
dec
das
sahf
call
sub
movsbl
lods
mov
xchg
cs
insl
das
loop
outsb
mov
xchg
shl
sub
mov
imul
stos
js
pusha
out
sbb
lret
jae
inc
decl
repnz
subl
and
pop
imul
rcll
aas
pop
jns
push
mov
gs
xchg
out
and
push
dec
sbb
dec
sbb
mulb
imul
push
subl
ljmp
dec
enter
lret
ret
out
lret
push
dec
dec
insl
jl
pop
outsb
dec
xorps
xor
or
add
pop
sub
std
icebp
jp
sbb
test
dec
push
sti
sub
push
mov
rcr
dec
dec
sbb
cmp
sub
scas
dec
out
push
aas
jb
popf
stos
scas
mov
mov
ss
mov
scas
rcrl
and
in
mov
sub
cmp
arpl
fists
mov
call
es
add
mov
lock
mov
adc
and
sub
xchg
pop
pop
movsl
sub
daa
jecxz
into
out
add
fwait
pop
push
mov
dec
scas
or
xchg
imul
cmp
daa
stos
jae
push
cmp
scas
test
sahf
push
fisttpll
lcall
pop
push
and
lcall
inc
stos
add
sub
fs
loopne
lahf
pushf
lret
fld
mov
sub
aaa
daa
shlb
push
push
and
call
and
sbb
int
push
lret
and
pop
sbbb
int3
jbe
xor
insl
cmpsb
cmpsb
jb
inc
inc
shll
popf
insb
pop
add
std
in
aaa
rolb
lret
popf
push
icebp
repnz
daa
cli
ret
push
sahf
mov
leave
lret
pop
sub
pusha
addr16
inc
dec
sbb
in
test
repz
repnz
cmp
push
aam
cld
pop
xchg
hlt
adc
dec
jmp
jl
ret
jnp
dec
cs
inc
inc
xor
cmpsl
rcr
andb
in
lret
sbb
rcll
sbb
adc
add
and
icebp
sub
sub
fsubrs
out
mov
fistpl
mov
mov
aam
sub
or
sbb
xchg
lods
pop
and
fst
mov
xchg
cmp
pop
test
pop
stos
pop
cmpsl
xchg
scas
jnp
icebp
pushf
sub
stos
test
iret
or
dec
cmp
loope
adc
push
jmp
mov
test
aaa
inc
inc
fcompl
leave
lcall
or
push
mov
inc
xlat
jg
or
or
lods
mulb
push
gs
mov
jne
push
shrb
push
xchg
scas
and
sbb
dec
pusha
jg
cltd
sub
sub
int3
shlb
sbb
xchg
mov
pop
jg
int3
arpl
and
push
ss
sub
push
and
pop
in
pushf
bound
xchg
aad
into
lods
ljmp
and
lret
dec
pop
pop
mov
insb
pop
outsb
sub
pop
add
lods
and
and
pop
addr16
dec
inc
sbb
mov
das
mov
fs
loopne
xorb
sub
fucomp
fisubrs
ljmp
outsb
dec
pop
fwait
js
fs
subb
mov
dec
insb
sub
imul
push
inc
dec
add
loop
inc
dec
pusha
sub
out
dec
push
lret
dec
ljmp
les
popa
dec
xorb
ljmp
daa
data16
inc
dec
jecxz
and
and
dec
inc
sub
sub
sub
out
daa
sub
and
sub
insl
dec
sbb
and
sub
imul
adc
int3
or
outsb
out
inc
shrl
jae
in
outsb
pop
mov
xchg
es
or
in
pop
sub
stos
push
arpl
sub
or
or
sbb
cmp
push
in
cmp
inc
sbb
add
pop
fsubr
ja
lahf
incl
std
pop
gs
push
js
outsb
test
das
sbb
pop
std
sbb
pop
add
lea
mov
sti
insb
mov
jb
insl
jg
ret
movsl
imul
out
js
mov
xor
push
js
sbb
fcoms
rorl
pop
mov
mov
dec
sub
rclb
leave
lods
mov
test
xchg
adcl
scas
cli
lea
push
js
cmp
sbb
fsubrs
push
lea
pop
cmp
xchg
dec
push
jae
mov
out
daa
pop
aad
cs
das
loop
xlat
xchg
dec
out
fildl
stos
push
mulb
inc
lea
dec
aas
das
pop
packssdw
fmulp
outsl
mov
outsb
pop
dec
outsl
ds
push
std
in
outsl
mov
insl
pop
dec
outsl
cmp
in
fmul
outsl
mov
insb
pop
dec
outsl
cmp
sbb
sti
jmp
lret
outsl
mov
imul
cmp
outsl
or
ljmp
mov
pop
dec
cmp
outsl
sbb
stc
jmp
xchg
imul
jnp
or
call
test
mov
pop
dec
cmp
inc
mov
inc
pop
mov
addr16
cmp
jnp
sub
enter
in
inc
add
in
cld
mov
dec
nop
xlat
and
inc
pop
sub
adc
cwtl
fidivl
and
sub
testl
sbb
fcomps
jge
cld
aas
cwtl
sahf
into
out
sub
ljmp
cli
adc
pusha
jp
pop
dec
or
insb
cmpsb
push
dec
pop
in
mov
mov
mov
iret
cmp
cwtl
decl
ror
sbbb
lret
push
pop
out
xor
outsb
call
cmpsl
clc
or
pop
icebp
xlat
jbe
leave
sub
imul
into
push
mov
jmp
sub
dec
mov
cld
shl
or
lea
adc
stc
xchg
cwtl
out
jo
std
sbb
gs
pushf
jecxz
div
fstpl
rcrl
xor
mov
fsubs
push
jnp
sub
dec
in
jo
cs
or
or
inc
add
jns
sub
ss
sbb
sbbl
movsb
mov
gs
iret
mov
sahf
jb
test
push
sub
lds
pop
pushf
dec
add
in
in
jl
dec
dec
fadd
jne
stos
ljmp
cmp
or
push
setge
sub
lcall
dec
dec
out
ja
js
sbb
push
jne
insl
or
data16
cmp
sbbb
cli
pop
bound
sub
int
adc
shl
mov
es
pop
sub
dec
jmp
ds
aaa
bound
gs
lods
movsb
dec
or
and
idiv
inc
jecxz
jmp
jmp
push
stc
sub
jmp
sbb
push
fdivrs
push
add
hlt
push
fadd
sub
dec
in
sub
imul
das
xchg
sub
fisttpl
addr16
pop
cmp
cmpsl
loopne
lods
push
jmp
xchg
inc
shrl
cmp
out
sub
mull
mov
stos
shufps
sbb
pop
jecxz
cmp
xor
pop
sbb
push
rcr
or
and
sub
adc
cmp
xor
mov
or
lods
jmp
js
jg
sbb
stc
cmp
pop
dec
std
or
push
bound
sub
roll
dec
lcall
lods
or
in
cmp
inc
adc
in
into
cltd
mov
mov
clc
mov
pusha
cmpsb
cmp
sbb
cmpsb
pop
test
lret
insl
dec
pop
mov
insl
orl
jno
mov
cli
outsb
inc
daa
std
xor
dec
pop
pop
iret
lods
imul
loop
jns
stos
ds
mov
adc
pop
dec
and
dec
es
dec
dec
lahf
cmp
sbb
dec
loop
push
mov
inc
pop
xchg
pop
loopne
push
dec
jp
add
jbe
jnp
pop
mov
out
mov
xchg
xchg
outsl
push
inc
ss
push
cmc
in
aad
mov
xchg
test
outsl
push
inc
xor
in
aam
mov
xchg
test
push
inc
xor
adc
repz
rol
mov
xchg
xorl
push
inc
xor
adc
repnz
rol
mov
xchg
xorb
push
inc
xor
adc
icebp
loope
rol
mov
xchg
xorl
and
add
loopne
rol
mov
nop
xorb
push
inc
xor
adc
out
pop
mov
cmpsl
fadd
cmc
mov
adc
addr16
ja
or
int3
addr16
lret
pop
cwtl
lock
or
outsb
lods
insl
lcall
xor
jl
adc
jge
imul
mov
popa
mov
and
jle
cmp
sbb
aaa
pop
sbb
add
out
sbb
sbb
push
lcall
or
dec
cmp
loope
lret
mov
pop
push
imul
pop
ljmp
das
imul
js
ss
test
enter
or
sub
or
stc
sbb
iret
sahf
dec
sub
data16
lcall
sbb
call
inc
insb
out
in
sub
jl
sub
out
xor
divl
add
ljmp
jp
enter
add
fstps
bound
pushl
xchg
ja
push
push
outsb
data16
mov
jge
pop
clc
test
out
sbb
pop
sbb
dec
mov
stos
add
cs
pop
data16
sbb
sbb
pop
sbb
sbb
push
popf
sbb
sub
sbb
push
jg
mov
mov
iret
ret
mov
mov
pop
mov
jg
int
das
sbb
lret
test
cli
cwtl
pop
test
adc
ds
gs
jmp
cmp
sub
movaps
ljmp
push
dec
lcall
or
gs
lahf
outsl
xchg
dec
cmc
xor
outsb
dec
sub
jns
test
cmp
lcall
out
fwait
or
arpl
sub
sbb
and
das
pop
sbb
arpl
lods
addr16
cli
cmp
test
subl
movsl
out
sbb
pop
cmp
out
fidivl
or
dec
sub
cmp
ljmp
scas
or
aas
add
mov
cmc
mov
add
outsl
mov
imul
xor
mov
aad
stc
cmp
out
and
cmpsb
add
lds
movsb
insl
cwtl
cmp
sub
cmc
aaa
into
test
test
pop
imul
cmp
dec
cmp
popa
sbb
imul
cmpsb
insl
and
outsb
push
sub
insl
daa
and
jecxz
clc
cld
jmp
lret
bound
inc
cmpsb
lea
cmp
push
je
inc
ss
xchg
imul
mov
inc
and
pop
mov
scas
push
loope
push
pusha
mov
loop
in
mov
bound
js
loope
imul
in
clc
mov
xor
loop
mov
jmp
push
addr16
xlat
cli
push
push
cli
pop
mov
repz
insl
pop
in
inc
loop
sub
pop
bound
push
cld
call
xchg
insl
add
adc
inc
fadd
lcall
insl
ret
loope
mov
or
rcr
in
aas
stc
push
arpl
sarb
outsb
jno
imul
adc
sti
mov
fsubrp
lret
and
jmp
insl
out
lods
push
lret
stos
fwait
popf
sub
jl
out
adc
dec
cli
test
js
pop
dec
sub
push
add
inc
add
sbb
aam
das
stc
fsubrs
inc
cmp
pop
dec
sub
xchg
dec
xlat
mov
lcall
xor
stc
mov
pop
in
add
lret
jmp
push
cmpsl
add
push
pop
lcall
cmpsb
or
sub
cmp
xchg
pop
das
pop
cmp
adc
and
mov
loope
dec
data16
mov
xchg
or
fisubl
jg
pop
pushf
addr16
inc
rorl
mov
lock
mov
and
sbb
inc
iret
dec
bound
ds
mov
jle
sbb
sub
dec
xchg
cmp
test
js
aaa
adc
push
stos
and
das
sub
inc
mov
bound
mov
daa
fcomps
cmp
sbb
ror
scas
fmull
das
in
jge
ficoms
fidivrl
mov
andb
in
fstpt
fwait
hlt
push
push
test
xchg
or
jo
stos
testb
shr
inc
aas
xlat
dec
lahf
jne
imull
loopne
push
xchg
ljmp
cli
cmp
sub
pop
sbbl
sub
push
popa
jmp
lcall
xlat
int
inc
push
pop
push
dec
ljmp
jmp
cmp
lea
dec
and
mov
add
inc
sub
ljmp
in
insb
sbb
in
xor
xchg
cmp
xchg
arpl
ss
sub
push
test
cwtl
and
sbb
mov
pop
mov
pop
fists
adc
fildl
insl
pop
in
lret
leave
sbb
push
mov
pop
jae
into
fldl
jecxz
nop
dec
adc
dec
int3
mov
jne
loop
sub
int
aam
lock
ljmp
pop
jo
sti
push
out
adc
inc
lret
les
shrb
xlat
bound
and
or
add
lods
jmp
push
adc
sub
shrb
aam
jnp
mov
mov
dec
scas
int
int
inc
ds
or
lcall
sub
sub
jge,pt
push
mov
fs
push
pop
mov
xchg
add
xor
sub
and
dec
inc
push
jle
pop
bound
ljmp
repz
cld
pop
xchg
pushf
outsb
or
ljmp
pusha
or
pop
int3
sub
adc
inc
mov
jno
shrl
int3
jb
xchg
dec
dec
sbb
or
stos
and
movsl
sub
cs
lea
cmp
push
xor
adc
sbb
imul
loopne
stos
xchg
inc
fchs
popf
andb
aad
push
jp
shrb
cmovo
cmpsb
or
stos
sarb
lods
loop
add
pop
mov
xchg
dec
xchg
in
das
cmp
pop
imul
insl
arpl
xlat
ret
in
mov
les
mov
into
jle
mov
iret
arpl
push
fnsave
sub
push
lea
das
mov
sub
fdivrp
dec
scas
cmp
out
cmp
loop
xlat
push
lcall
outsb
stos
cs
dec
lcall
stos
outsb
pop
xchg
cmp
push
es
in
ret
sbb
dec
imul
in
cwtl
insl
dec
push
movsb
adc
dec
insb
shll
push
stos
out
inc
add
daa
ljmp
outsb
mov
push
dec
gs
icebp
lods
in
inc
push
ljmp
movsb
pop
out
xchg
mov
int
ljmp
pop
pop
cltd
mov
cmp
fidivrs
aas
addr16
cmp
mov
cs
and
or
jle
stc
adc
out
inc
jne
call
inc
jge
cmp
pop
frstor
mov
xor
daa
enter
sahf
dec
insl
mov
iret
rorl
les
data16
dec
das
out
insl
and
xlat
es
in
adc
adc
popa
scas
inc
imul
push
xor
out
push
adc
out
adc
insb
sub
add
jb
and
int
adc
loopne
mov
push
into
pop
pop
pop
faddp
mov
enter
xor
outsb
andl
inc
scas
lods
pop
and
cmp
outsb
sbb
jne
movsb
out
mov
in
or
pop
out
insl
cwtd
call
out
and
dec
das
xchg
fsubr
int
fsubrl
sub
sub
fidivrs
sub
push
sub
pop
push
cs
dec
insl
pusha
cld
sub
and
in
dec
cmpsb
sub
int
lods
sub
mov
ljmp
dec
pop
dec
in
sbb
sub
xlat
jmp
ljmp
sub
jp
inc
shlb
dec
xchg
pop
push
aas
inc
call
in
imul
dec
in
sbb
add
out
dec
sub
mov
push
arpl
sub
and
fs
movsb
sub
gs
movsl
sub
out
addr16
out
insb
push
ljmp
sub
lods
dec
insl
sub
fisubrs
and
and
mov
mov
test
sbb
ja
xor
or
xlat
cmc
cs
negb
aas
cmp
in
pusha
push
repz
push
fisubrl
jecxz
push
push
imul
arpl
cli
jns
cmc
push
das
xor
push
scas
out
ret
mov
sub
fmulp
mov
and
sbb
fimuls
sub
sub
push
dec
and
xor
outsb
dec
jl
lcall
cmp
lret
pop
push
and
dec
mov
dec
addr16
out
insl
dec
ja
rcrl
gs
imul
dec
out
sub
xor
inc
sub
addr16
in
push
mov
das
jae
mov
push
nop
mov
mov
pusha
test
push
xchg
fsubr
bound
lahf
sbb
fisttpll
push
icebp
push
cmp
je
fbstp
sub
jb
roll
jb
jge
arpl
popa
cmpsb
outsl
shlb
cli
ret
ss
outsl
mov
fistl
cmpsl
dec
addr16
xchg
mov
les
push
add
xor
push
test
std
out
test
xor
and
and
ljmp
lret
outsl
jb
sbb
pop
test
xor
scas
lods
sbb
arpl
shr
lcall
fstpt
nop
cmp
mov
cltd
fwait
adc
mov
inc
leave
jg
add
arpl
adc
push
lahf
mov
imul
cltd
fildll
clc
les
out
xor
jae
inc
loop
xchg
mov
cmc
outsl
insl
dec
dec
imul
sub
mov
jnp
pop
fwait
into
icebp
xor
addr16
sub
cmc
mov
adc
xor
std
repz
push
out
jle
daa
cli
mov
sub
outsl
add
pop
xchg
sti
mov
mov
cmp
mov
jle
jae
lock
sbbb
jle
mov
stos
mov
andl
add
xor
cmp
jbe,pn
je
cmp
sbb
sub
mov
xchg
outsl
sbb
push
xchg
cmpsl
dec
mov
addr16
cmpb
addl
mov
adc
shlb
pusha
xchg
movsb
outsl
push
and
xchg
outsl
sbb
cmp
jg
push
fwait
in
lret
cmp
stos
outsl
pop
push
jmp
cli
cmc
jecxz
lahf
outsl
icebp
mov
mov
pop
add
sbb
incb
lret
cmp
lods
inc
cmp
outsw
leave
fildl
shrl
dec
inc
call
dec
jne
fpatan
popa
cmp
or
jp
test
fldcw
and
outsl
mov
lock
outsl
stc
push
stos
jae
aaa
dec
in
decb
addr16
insb
xchg
pop
test
inc
loop
xchg
add
outsb
sub
jno
lret
push
in
pop
sbb
fwait
add
stc
addr16
out
data16
xchg
fsubrl
dec
ljmp
into
and
mov
out
mov
popa
fwait
dec
sbb
dec
test
dec
sub
add
ret
dec
aas
mov
pop
dec
insl
mov
out
mov
fistpl
pop
mov
sahf
jmp
insl
xchg
stos
loope
mov
inc
leave
dec
mov
sbb
insb
cmp
fsubrs
xlat
add
mov
or
clc
xor
xor
out
divl
inc
stos
mov
ret
inc
gs
js
mov
fcomps
cmp
xchg
pop
test
bound
stos
jl
fwait
bound
sub
cwtl
movsb
push
lea
cwtl
pop
aam
push
add
sub
outsb
rolb
test
cld
sbb
ljmp
jbe
xor
pop
inc
ss
aas
dec
scas
and
in
mov
out
push
scas
jbe
in
ret
scas
xchg
fstpt
lret
jae
iret
mov
xchg
mov
push
sbb
mov
and
loopne
mov
mov
dec
lret
mov
fwait
mov
lock
mov
fimull
push
jle
jp
jbe
xor
sub
iret
bound
lret
int3
and
loopne
mov
scas
fbld
das
and
loopne
mov
in
out
lods
scas
insl
scas
sub
scas
insb
scas
sub
jmp
stos
scas
imul
scas
push
sub
loopne
scas
push
scas
xchg
scas
es
movsl
scas
push
scas
inc
scas
xor
pop
fldt
into
fwait
lock
xor
dec
and
mov
adc
insb
and
loopne
mov
aas
adc
call
arpl
into
sbb
and
ret
pusha
push
fisttpl
stos
push
jnp
jnp
mov
js
xchg
xchg
jb
jge
mov
jnp
mov
fimuls
lea
jp
jbe
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
xor
fildl
xor
arpl
lret
pop
and
pusha
arpl
add
sub
aam
jge
mov
inc
xchg
jb
jb
jb
jb
xor
stos
dec
ss
xor
and
loopne
mov
rcrl
popa
push
loopne
and
xor
adc
fcmovbe
xor
xor
aaa
andb
mov
inc
loop
xchg
lods
aad
mov
cld
push
cli
add
push
inc
loop
mulb
cld
test
sti
pop
shrb
testl
rcrb
jbe
sub
movsl
xchg
stos
mov
fists
shrb
fistpll
fbld
out
mov
cmp
cwtl
out
movl
test
in
sbb
fwait
leave
mov
shll
jle
sti
dec
mov
hlt
jb
jle
cmp
fdivl
pop
xor
xchg
inc
in
xchg
mov
xchg
shl
cld
iret
psllq
popf
and
and
cmpsb
fists
jb
lock
out
pop
stos
dec
cs
jmp
fwait
cmpsl
cmp
dec
jmp
mov
lds
push
xchg
lods
scas
fwait
stos
inc
dec
popf
iret
test
test
jge
mov
mov
mov
cli
mov
xor
jnp
rcrb
push
cli
rcrb
mov
inc
scas
xchg
scas
inc
scas
les
xchg
scas
and
shrl
jo
mov
imul
xchg
mov
jle
jp
jbe
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
xor
xor
xchg
repz
arpl
mov
lahf
dec
rorb
sub
inc
scas
aam
mov
int3
ja
and
loopne
mov
js
push
xchg
mov
adc
rolb
mov
test
jne
mov
popf
jmp
jne
jge
jne
imulb
mov
sub
nop
inc
call
jmp
or
jge
jne
imul
fstpt
clc
adc
ret
xor
popa
pusha
cs
frstor
cld
loopne
inc
out
dec
cmpsl
mov
xchg
xchg
xchg
xchg
or
sbb
mov
add
iret
js
mull
aaa
out
hlt
scas
je
ret
scas
popa
data16
add
rclb
mov
xchg
push
fldenv
jnp
mov
xchg
fnstcw
jp
cmpsb
hlt
in
lock
dec
test
push
pop
aad
es
jo
or
out
enter
ret
sbb
testb
jl
stos
cli
stc
clc
mov
ss
les
sti
sbb
xor
call
ja
xchg
out
repz
push
cltd
fstpl
shr
inc
push
aam
and
and
test
and
jl
inc
or
sub
cltd
idiv
hlt
mov
add
xor
add
dec
pop
and
loopne
mov
cmp
sub
sub
xchg
xchg
popf
jbe
les
push
jne
testb
jle
testb
clc
cmp
repnz
lock
test
cld
pusha
mov
xor
inc
pop
xor
add
jmp
cld
sub
stos
int3
insb
push
loopne
jo
inc
scas
popa
mov
sub
out
scas
daa
scas
out
out
xchg
xchg
xchg
dec
cmpsl
loopne
mov
out
push
scas
mov
ja
cltd
in
arpl
push
lods
sub
sub
lahf
and
jne
jne
jne
negb
xchg
clc
mov
int
adc
xchg
add
fcomps
pop
pop
or
sarb
push
pop
in
or
xchg
inc
outsl
or
popa
dec
sub
dec
mov
bound
cld
popf
pop
push
or
loop
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
mov
mov
andl
cs
insb
imul
push
call
lods
movsb
dec
jecxz
mov
pop
cmp
cld
pop
cmp
rorb
push
in
mov
mov
or
lods
sub
or
stos
xchg
cmpsb
lods
fdivrp
sbb
sarl
jp
aaa
outsb
jmp
inc
daa
push
lahf
push
mov
xor
fisttpl
sub
test
shlb
stos
ficomps
mov
sbb
call
test
and
arpl
adc
dec
mov
leave
or
cmpsl
inc
lods
fnstsw
popf
cmp
cmp
ss
xor
scas
clc
sbb
and
arpl
loopne
mov
sti
dec
lret
int3
push
out
inc
cmpsl
rolb
add
push
movsl
in
jnp
jnp
mov
fisttpl
jb
fidivs
cmpsb
pop
lret
mov
aad
test
jne
jne
movsb
into
lods
pop
inc
pop
aaa
addr16
xor
xor
pop
inc
mov
into
rcl
add
mov
call
mov
xchg
insb
sub
out
dec
ja
mov
xchg
aas
cmp
sbb
daa
shr
sub
mov
mov
dec
pop
xor
arpl
scas
lret
push
and
mov
sub
dec
ficompl
sub
shl
bound
and
pop
insb
mov
and
fimull
call
inc
loop
push
mov
jle
dec
repz
sub
sbbl
mov
add
popa
insl
out
pop
lods
push
fwait
lods
pop
jle
std
popf
lods
test
sub
jne
jne
jne
jne
jne
jne
push
movsb
jp
and
sub
outsb
inc
or
push
cmpsl
movsl
fdivs
fs
jb
xor
stos
xor
xor
xor
inc
stos
shl
lds
andl
ret
lods
scas
sub
xchg
pop
popf
jnp
fimull
dec
jne
jne
jne
push
fs
or
xchg
jp
jbe
jb
jb
jb
mov
push
cmp
imul
and
and
inc
pusha
pop
sti
in
and
pusha
cmpsl
and
jmp
mov
arpl
sub
mulb
pop
fldt
psubusb
mov
imul
and
xchg
mov
jnp
mov
jne
jne
jecxz
pusha
dec
popa
push
jle
insb
shl
pop
pop
aas
mov
jmp
fldt
dec
fwait
push
fisttpll
xchg
jnp
adc
fmuls
in
leave
enter
mov
insb
out
mov
fstl
mov
ficomps
jmp
cld
shll
xchg
int3
jnp
xor
xor
xor
xor
repnz
xor
xor
dec
movsb
outsb
pop
inc
cmpsl
jge
insb
ror
add
addr16
sbb
xchg
in
fucomp
imul
addl
fisubrs
int
test
popa
sub
shl
push
cmpsb
lods
into
sub
dec
es
jecxz
and
jb
inc
fisubrs
popl
out
es
sbb
lods
ss
inc
stos
rol
push
fbld
pusha
fildll
shr
push
out
pavgw
and
loope
out
push
lea
jmp
ss
push
push
popa
loopne
and
dec
out
cmp
scas
loopne
sub
inc
es
out
jmp
mov
in
add
jnp
cld
incb
mov
popa
ret
mov
scas
and
scas
scas
das
cld
stos
scas
incb
clc
sub
mov
scas
sub
mov
jle
sub
jb
inc
mov
xchg
jb
jle
jp
jbe
mov
mov
in
and
jecxz
mov
loop
mov
fisubl
mov
daa
mov
and
add
scas
add
lret
fwait
mov
jnp
jnp
jnp
jnp
jnp
jnp
sbb
subl
test
test
push
imul
sub
pop
lahf
add
lcall
pop
lret
insl
scas
sahf
into
cmp
sub
sbb
pushf
mov
mov
and
dec
pop
sub
jns
xor
fwait
dec
pushf
or
leave
jns
das
push
sbb
pop
cmp
dec
adc
mov
sbb
sti
sub
sbb
push
das
and
andb
repnz
mov
in
mov
inc
xor
push
xor
add
stc
sbb
mov
and
in
popf
lea
loop
sarl
and
xchg
out
mov
inc
sub
repz
and
add
aas
mov
push
popa
mov
xchg
hlt
xor
imul
pop
mov
inc
and
xlat
lods
fisttpll
stc
adc
hlt
filds
sbb
push
in
addr16
les
int3
jbe
dec
jae
js
mov
pusha
xor
into
dec
mov
dec
orb
jg
cs
add
cmp
loope
hlt
mov
pop
or
jl
or
push
shlb
pop
sbb
pushf
push
adcl
aad
mov
insl
aaa
cmp
ss
and
fisubs
cmpsb
cmpsb
enter
xchg
cmp
sub
push
clc
mov
aaa
inc
inc
sbb
fistpl
mov
sub
cmp
pop
lods
push
dec
push
mov
jg
lret
cmpsl
clc
jnp
dec
inc
sbb
pushf
ret
mov
push
cmpsb
bnd
mov
inc
adc
cmp
and
fadds
pop
adc
jmp
adc
xchg
sahf
fisubrl
mov
or
cmp
xor
or
fldt
stos
repnz
sbb
jp
repnz
adc
jmp
test
cmpsl
mov
aam
jl
roll
dec
dec
or
fidivrs
mov
add
sbb
sbb
int3
lods
loopne
andl
cmpsl
lcall
dec
stos
pop
sar
mov
pop
cltd
daa
xchg
ret
xlat
push
or
mov
dec
adc
fildll
test
in
cmp
or
dec
mov
and
mov
inc
and
into
stos
jl
dec
das
adc
daa
cmp
rorb
cltd
outsb
mov
arpl
dec
sub
add
outsb
cmp
xor
cld
pop
mov
loop
cmp
insb
xor
jl
sub
insb
jmp
dec
gs
fistpl
sub
and
cmp
inc
mov
sub
cld
adc
lret
es
sub
jae
call
sbb
sbb
call
cmp
daa
pop
or
add
cmpsl
cmpsb
mov
xchg
xor
data16
rorb
pop
rorb
mov
dec
dec
imul
or
sub
mov
pop
leave
xor
sbb
mov
xor
pushf
mov
loope
add
iret
leave
bound
and
or
cmp
shr
int
jmp
mov
and
call
dec
mov
rolb
rcll
dec
loopne
mov
imull
mov
push
sub
jle
jge
out
xchg
dec
or
push
cmpsl
lods
ljmp
sub
cmpsb
mov
clc
cs
xchg
and
outsb
mov
mov
cmp
mov
xlat
mov
cmp
test
mov
mov
ljmp
fisubrl
test
cmp
insl
daa
cs
icebp
xlat
fisubrl
push
js
inc
inc
inc
mov
push
mov
pop
cli
jo
sub
inc
sub
cld
mov
pop
jl
pop
push
dec
js
or
test
xlat
ljmp
sub
call
jbe
rclb
pop
cli
pop
loop
jge
push
stos
xchg
push
or
lret
mov
gs
repnz
fsubrs
fimull
test
pusha
mov
sub
mov
cld
clc
mov
lcall
data16
mov
pop
test
movsb
lods
cmp
sbbl
outsb
icebp
and
pop
out
fwait
int
sub
orb
rcrb
sbbb
jl
cs
inc
cmp
cmp
sbb
into
mov
into
int3
sbb
in
orb
cmp
mov
dec
dec
lds
push
add
or
xor
mov
pop
in
xor
insl
mov
icebp
aad
lods
ljmp
sub
dec
push
mov
inc
sub
cmp
mov
mov
jmp
test
int
pop
dec
ds
enter
fwait
in
or
fldz
data16
dec
sbb
sub
imul
or
pop
jecxz
push
out
push
stos
jo
call
xchg
leave
sbb
adc
mov
sbb
mov
inc
add
push
lcall
sub
or
insl
jl
iret
lret
fsubrl
mov
push
cmp
popw
nop
jmp
and
int3
and
xchg
pop
and
cmp
imul
pushf
mov
dec
fidivs
cmp
testb
fidivrl
pusha
push
pushf
mov
insl
movsl
xchg
or
insb
lds
dec
dec
out
insl
loopne
pushf
lret
pop
jae
push
sti
xchg
test
arpl
pop
cmp
movsb
in
leave
clc
sub
mov
ret
pop
or
or
mov
and
out
lret
mov
mov
stos
decb
ficoms
sub
dec
dec
push
pop
addl
jae
jo
arpl
mov
jge
test
or
pop
mov
pop
sahf
or
jle
nop
mov
ljmp
lret
jmp
dec
xor
shrb
mov
mov
fwait
pop
push
sbb
inc
lret
and
enterw
cmp
lret
push
push
jns
adc
imul
mov
mov
jo
mov
fistps
mov
cmp
popf
in
dec
push
push
lret
pop
adc
dec
sarb
jns
cmp
dec
and
sub
icebp
notb
or
mov
cltd
mov
hlt
into
sarl
imul
int3
frstor
adc
flds
iret
push
insl
sarl
andb
mov
aam
or
insl
scas
dec
adc
nop
repnz
dec
mov
push
insl
jmp
stos
or
outsb
mov
sti
cmp
decb
divb
pop
sub
sbb
or
push
popf
inc
fisttpl
adc
pop
das
dec
push
test
ljmp
sbb
cs
mov
xor
and
lret
iret
into
adc
std
dec
insb
fsubr
jle
mov
jno
or
dec
into
das
pop
cmpsb
dec
fstl
mov
jg
in
jp
aam
push
xor
lahf
or
dec
pop
or
in
subl
insb
ds
js
sbb
sti
lret
fucomi
call
dec
insb
dec
inc
movsl
sbb
xor
jecxz
lret
jae
mov
inc
mov
jbe
xchg
je
ret
mov
ljmp
pop
mov
into
fldz
test
or
adc
sub
mov
cld
ss
std
test
js
adc
shrw
loop
sbb
sarl
enter
sub
leave
xor
sbb
sbb
clc
or
sbb
aaa
xchg
pop
pop
xor
jbe
mov
push
cmp
dec
sahf
sub
ficompl
dec
stos
pop
lcall
sub
mov
call
jg
in
fnstenv
cmpsb
adc
xchg
fcoml
sub
out
insl
insb
add
aaa
adc
into
fdivr
pop
cmc
add
xor
movsb
inc
fcomip
pop
ja
ss
dec
ds
jno
add
ret
xchg
or
test
call
dec
lret
xchg
lea
mov
stos
push
std
adc
movsl
cmp
ljmp
popf
cld
aad
mov
imul
popl
pop
in
push
imul
and
insl
cmp
into
fldl2t
jp
sahf
sti
add
sbb
sbb
mov
and
stos
jp
pop
jmp
shrl
stos
test
xor
cmpsl
adc
mov
sar
xlat
movsl
cmp
jecxz
bound
push
mov
cmpsb
jecxz
sbb
rcl
das
push
in
test
pop
jp
and
ja
in
leave
push
sbb
inc
xchg
in
call
sarb
jbe
dec
xor
sti
insb
js
mov
cmp
add
add
lods
push
add
or
lret
mov
insl
dec
mov
pop
cltd
dec
mov
fs
sbb
sbb
pop
cmpsl
mov
add
mov
or
sub
pxor
js
push
sahf
mov
mov
push
inc
cmp
mov
mov
cltd
call
sub
jae
clc
test
pop
jge
fistpl
jp
out
cmp
ret
xchg
sub
test
mov
insl
adc
push
loope
adc
mov
ret
sbb
lcall
pop
mov
cld
push
cmpsl
mov
jp
mov
and
aam
xchg
int
scas
xor
sbb
pop
hlt
popf
add
sbbl
in
fildl
sub
pop
lret
xor
pop
pop
pop
mov
je
push
das
inc
jecxz
jbe
sti
mov
fsubr
int3
roll
sarb
pop
pop
insb
fmuls
fdivrs
dec
mov
dec
sbb
lret
dec
loope
push
sub
sbb
or
lods
ss
es
es
sub
dec
jb
ja
cmp
jg
push
or
lcall
and
mov
pushfw
pop
cmp
xor
jno
sbbl
cmp
dec
notl
jg
jp
faddp
or
movsb
xchg
std
sti
das
sbbl
lock
dec
mov
inc
aam
dec
or
add
mov
pop
add
inc
and
js
pushf
sub
jb
clc
cmp
push
xchg
out
lcall
lds
sbb
loop
push
aas
xchg
into
sbb
aaa
mov
sbb
push
out
insb
fucomi
cmpb
sub
cmp
jmp
jnp
cltd
jmp
cmp
dec
jmp
test
pop
xor
and
push
push
cmp
cli
xchg
test
sub
sbb
xchg
pop
lea
sub
mov
push
mov
inc
mov
mov
dec
xorl
add
pop
push
xchg
mov
scas
ret
cli
iret
pop
sub
les
arpl
mov
sets
into
subl
inc
repnz
adc
xor
pop
and
lret
adc
mov
popf
fcompl
add
dec
inc
adc
test
test
push
insl
mov
shlb
mov
sub
insb
sbbl
shlb
aad
xor
stos
jmp
test
adc
fnstsw
jne
adc
in
and
mov
add
inc
outsb
push
jl
or
dec
sbb
mov
fldt
xchg
subl
cmpsl
push
mov
or
aad
adcl
pop
or
or
pushf
push
clc
adcl
xchg
or
rep
daa
mov
faddl
sbb
push
pop
jg
mov
outsb
mov
jp
xorl
xor
adc
xchg
stos
dec
idiv
stos
stos
dec
fucomi
ja
mov
add
sahf
xchg
iret
inc
and
sub
mov
pusha
mov
loopne
stc
mov
jp
dec
mov
xchg
mov
testb
or
rclb
and
sbb
addb
jl
mov
mov
cmp
sti
fildll
fadds
test
and
rcll
sti
push
dec
into
inc
or
or
pop
lcall
pop
sub
mov
push
aam
cmp
ja
dec
aas
icebp
fildl
sarb
int
sub
dec
pop
sub
sub
mov
xchg
aaa
pop
cmpsb
sub
mov
sub
insb
inc
ficoml
addb
test
sti
add
xchg
sahf
adc
int3
ja
and
sub
inc
std
sub
adc
icebp
inc
neg
iret
xchg
sub
cld
ss
aam
sub
dec
out
mov
push
in
fldpi
into
and
mov
hlt
mov
xor
mov
sbb
movsl
iret
icebp
data16
movsl
cmp
repnz
or
push
jmp
scas
lds
adc
ficompl
mov
enter
lret
jl
mov
xor
mov
js
leave
jl
push
and
or
sti
or
repnz
imul
ret
in
xchg
popf
jmp
sub
jne
push
cmp
pop
add
sub
cwtl
cmp
jge
icebp
xor
ret
ljmp
mov
int3
lcall
jg
scas
sub
xchg
push
rclb
push
jbe
lcall
jecxz
xchg
mov
xor
lds
sub
sbb
or
push
daa
aam
push
and
jne
fidivs
adc
fsubrs
stos
inc
das
adc
test
ss
add
inc
sub
mov
insl
lret
sarb
push
repnz
pop
or
fisttpll
rolb
push
dec
cld
jecxz
rcrb
xchg
xchg
lcall
cmp
sti
shrb
pop
shlb
daa
pop
mov
add
enter
xor
mov
or
mov
push
dec
sbb
mov
movntq
pop
pop
inc
adc
dec
jmp
dec
pusha
jle
ret
jnp
dec
cmp
cli
stc
sbb
push
stos
dec
stos
sbb
pop
jns
pop
push
or
xchg
call
data16
rep
and
xor
jp
xchg
mov
ss
sarb
ds
add
and
divb
mov
adc
cmp
std
aaa
into
stc
ficoml
sbb
and
fcomps
rcll
add
push
into
fdivs
mov
or
xchg
mov
leave
add
add
add
insb
or
cmp
mov
mov
and
shll
sbb
sbb
ljmp
inc
mov
sub
ss
dec
inc
jmp
push
mov
fisttpl
rcr
push
dec
stc
cld
nop
push
adc
subb
push
lahf
jl
out
jmp
test
or
push
adc
inc
dec
xor
cmp
sbb
xchg
sub
sub
cli
loop
popa
xchg
mov
aad
lock
lret
sti
lcall
or
add
mov
inc
imul
inc
pushf
insl
push
fistps
jg
fildll
jbe
out
jae
inc
cmp
imul
add
xor
push
xor
jnp
or
sbb
cmp
adc
daa
enter
dec
addb
xchg
push
add
fisttpl
mov
stos
xchg
in
and
ficoml
ja
mov
sub
push
sti
mov
push
mov
mov
fsts
or
adc
sbb
aas
jns
incb
lock
cmp
inc
pop
xor
pushf
out
fdiv
clc
mov
cmp
or
mov
lret
ljmp
je
sbb
mov
movsb
adcb
pop
pop
cmp
mov
and
mov
adc
jmp
sub
sbb
jns
test
mov
cltd
ljmp
cmp
pop
dec
ret
rorb
inc
ss
push
mov
inc
scas
xchg
ror
pop
and
shl
pop
push
dec
mov
mov
lock
bound
mov
fstps
and
xor
movsb
dec
pop
push
out
adc
decb
shlb
mov
jmp
cmp
dec
xchg
iret
fildl
fcoms
mov
sub
jo
adc
mov
xchg
or
mov
mov
sub
mov
mov
lret
sub
ljmp
sub
add
int
cltd
mov
mov
inc
jo
lret
push
jo
imul
xchg
stos
das
and
dec
aas
jp
imull
push
js
push
aas
mov
sbb
sbb
push
insb
or
mov
fisubl
dec
sub
cmp
xor
or
addr16
dec
cmp
or
orb
sbb
fistpl
sbb
sti
sub
outsl
ljmp
mov
mov
mov
fimull
lret
sbb
jl
leave
and
stos
push
sub
dec
jmp
adc
cmp
leave
sub
movsl
or
dec
jnp
mov
test
movsl
movsl
mov
cmp
ficompl
mov
add
dec
dec
jmp
jmp
cmpsl
pusha
dec
jae
xor
pop
pop
lcall
xor
dec
or
lods
pop
cmp
mov
or
pop
aas
dec
js
cli
ljmp
jmp
pop
mov
inc
pop
imul
enter
push
pop
add
orb
mov
lcall
or
mov
outsl
sti
sbb
push
arpl
popf
xlat
sbb
jmp
lahf
pop
cmc
pop
clc
push
in
cmp
test
fsubs
pop
mov
stos
cwtl
dec
outsl
xlat
cmp
jp
mov
sub
or
push
mov
decb
out
sbb
jp
or
or
test
pop
cmp
lcall
insl
pop
jmp
clc
pop
dec
test
lcall
mov
data16
dec
sub
cwtl
outsl
ljmp
lcall
or
mov
scas
sbb
popf
ljmp
mov
sub
aaa
or
loopne
or
ljmp
jns
and
movsl
push
mov
push
pop
insb
stos
sbb
jle
cwtl
sub
jl
fcomps
mov
testl
mov
or
insb
xlat
sbb
call
addr16
dec
sub
mov
insb
sub
ja
sbb
mov
mov
cli
pop
cmp
movsl
fxch
push
jp
jmp
leave
mov
cmp
ljmp
call
jle
jp
dec
into
sub
ljmp
fisubrl
pop
pop
out
or
iret
inc
xchg
leave
jle
cmp
js
subb
stc
sbb
and
or
aam
idivb
or
stc
in
test
sub
fisttpl
gs
or
stc
mov
popf
insb
ja
pop
leave
dec
jl
cmp
in
sub
pop
dec
sbb
call
mov
dec
dec
sub
insb
neg
sub
cmp
jl
cmp
sti
or
push
stc
insb
jp
iret
sub
clc
push
daa
jmp
cmp
dec
jle
arpl
rorb
sub
mov
sub
push
pop
mov
pop
xlat
pop
imull
enter
sti
ret
mov
fistps
cs
cmp
stos
lret
or
sub
std
sub
jmp
or
repnz
mov
cwtl
insl
jmp
in
sbb
arpl
sti
pop
mov
jge
inc
movsl
sub
xchg
pop
add
out
jmp
sbbl
fcomps
fldt
pop
in
enter
fisubl
mov
pop
push
and
mov
sbb
dec
jae
or
dec
dec
or
test
cmp
cmp
sub
jle
sub
or
pop
test
mov
pop
mov
or
cwtl
ficomps
leave
mov
outsl
cmp
lcall
jmp
out
jl
cmp
data16
cmp
or
mov
jae
and
pop
jno
xor
loopne
pop
lcall
jmp
fmulp
cli
cmp
call
xchg
sbb
dec
fisttpl
popf
jp
dec
lds
add
cmp
pop
push
xchg
mov
mov
xlat
loope
ljmp
sub
out
xlat
cmp
sub
push
movsl
loope
test
mov
and
jmp
lcall
ret
sub
dec
push
mov
testl
aad
pop
ljmp
stos
add
lock
in
pop
jmp
sti
divl
dec
scas
insb
mov
sub
leave
movsb
sbb
fstpt
popa
or
fs
inc
jmp
sub
jno
lods
lods
cmp
testl
and
adcl
outsb
mov
pop
xchg
add
enter
jmp
sub
sbb
shrl
and
and
sbb
enter
push
lcallw
mov
mov
mov
lcall
push
mov
leave
inc
mov
or
jp
neg
nop
lcall
mov
daa
cmp
mov
inc
call
js
jle
sbb
out
or
cmp
mov
xlat
xor
leave
cli
ljmp
ljmp
adc
push
sbb
pop
fimull
sbb
sub
lea
cmp
in
mov
pop
ljmp
xchg
cli
dec
lret
insb
subl
cmp
pop
and
stos
fldt
jmp
push
cmp
jo
pop
pop
insb
push
ljmp
out
jno
repz
arpl
dec
jmp
pop
add
stc
sbb
xchg
sbb
out
lcall
or
jge
dec
jp
jmp
or
sub
or
cmp
test
xor
dec
js
or
fimull
lea
pop
inc
mov
fisttpl
xor
out
sub
dec
pop
cmp
pop
test
gs
jmp
dec
sbb
pop
dec
xlat
cmp
js
es
out
sbb
mov
imul
dec
enter
cmp
dec
cmp
cwtl
sbb
test
push
das
fisttpl
sub
icebp
rorl
and
call
and
in
test
jge
repnz
cmp
addr16
pop
dec
mov
dec
leave
loopne
stc
cmp
sub
or
sbb
sbb
loopne
daa
rorb
push
gs
sahf
cmp
dec
cli
jmp
sbb
sti
sbb
sbb
add
pop
mov
fptan
sbb
or
xor
lcall
sbb
dec
out
fs
outsl
push
dec
jmp
pop
mov
pop
lret
sbb
repnz
mov
xor
cmp
mov
lret
mov
insb
lods
sub
mov
stos
mov
mov
pop
push
fstps
rolb
leave
out
pop
jmp
cwtl
dec
stos
sbb
idiv
jne
enter
jmp
pop
push
inc
cmp
clc
xlat
in
cmp
jo
inc
scas
stc
sbb
out
pop
jecxz
gs
pop
cmp
sub
mov
imul
movsl
insb
sti
dec
pop
dec
leavew
jmp
std
push
mov
sub
xlat
pop
push
sub
cmp
jmp
dec
scas
mov
jl
fnstcw
subb
sti
jmp
aam
enter
sub
xlat
cmpsb
movsl
cmp
sub
mov
pop
pop
xlat
dec
or
js
jecxz
xchg
pop
insl
test
mov
jp
and
inc
and
pop
dec
cwtl
sub
sub
enter
sub
pushf
rep
pop
mov
cli
sub
insb
sub
fnstcw
in
int
sbb
xchg
loope
mov
idivl
adc
push
or
pop
insb
sbb
addr16
stos
fidivrl
das
or
cmp
in
outsl
pop
fistpl
jmp
cs
lret
sbb
call
cmpsl
push
sbb
push
shlb
sub
dec
fxch
dec
lock
or
inc
xchg
arpl
sub
fmul
fstpt
into
push
cmp
dec
jl
dec
ret
push
dec
sub
sbb
cs
xchg
xchg
mov
pop
mov
or
xor
rclb
jecxz
decb
mov
aaa
mov
xor
gs
push
push
gs
stos
sbb
cmovae
cmp
jl
add
aam
into
pop
and
test
lcall
enter
call
movsl
ficoml
sub
pop
xor
pop
sbb
fisttpl
push
push
test
pop
cli
jl
repnz
xlat
inc
xchg
pop
inc
insb
cmc
inc
sub
out
sub
push
cmp
dec
out
dec
and
jae
daa
out
add
sti
mov
jp
cmp
push
dec
and
mov
or
inc
dec
or
fcmovnu
jecxz
lock
pushf
mov
dec
dec
sub
push
dec
roll
das
jnp
or
ja
fldl2t
leave
popf
sub
fsubrp
cmp
sarl
lcall
dec
jae
idivl
add
sub
pop
enter
mov
adc
aam
mov
mov
and
lcall
xchg
cmp
dec
dec
sbb
cmp
dec
test
shrl
or
lret
aaa
out
push
stos
pop
jmp
jmp
dec
mov
lret
call
mov
xor
dec
mov
or
cmp
push
push
fisubl
mov
cmp
xchg
lods
mov
or
pop
insb
cli
jns
enter
clc
pop
fisubrl
lret
sbb
pop
nop
imul
jmp
stc
out
jp
sub
pop
sub
mov
pop
repnz
fimull
fsubl
mov
add
ljmp
mov
clc
sbb
ja
sub
cltd
ds
add
or
cmovnp
mov
ret
xor
sub
mov
sub
mov
outsl
cmp
dec
pop
mov
sub
aam
js
jbe
fcomps
aas
dec
or
fldl2t
dec
jo
loopne
jecxz
fs
sarb
jp
js
xor
inc
lret
jmp
arpl
dec
jmp
push
fs
xlat
dec
popf
pop
jp
xchg
jge
or
cli
mov
fsubrl
loop
cld
dec
jae
clc
pop
sahf
cli
insb
jo
jmp
mov
xor
dec
xor
xchg
cmp
lahf
ja
or
add
mov
and
sbb
enter
push
fidivrs
sub
xor
clc
jp
ljmp
push
or
cmc
sbb
or
sbb
fdivr
adc
dec
cwtl
ds
pop
test
test
push
or
cmp
mov
lods
mov
pop
cmp
iret
jp
dec
xchg
xchg
mov
stos
inc
sti
movsl
dec
pop
cmp
pop
sub
outsb
fcmovnbe
pop
dec
pusha
insb
sbb
pop
xlat
jecxz
das
cmp
cli
dec
jp
in
jns
cwtl
mov
jle
sub
dec
jle
stos
jmp
dec
inc
add
aad
sub
pop
gs
mov
repnz
nop
sub
pop
jp
push
push
sbb
and
or
cwtl
dec
mov
pop
jl
xlat
or
jmp
sbb
clc
fnstcw
insb
icebp
or
or
stc
mov
addr16
or
fxch
out
lods
push
jmp
dec
fsubr
clc
dec
stos
hlt
nop
scas
in
and
stc
test
inc
mov
data16
insb
rcrb
movsl
ljmp
lods
mov
fidivrs
dec
xlat
dec
and
pop
popf
sbb
cmp
outsl
mov
fmuls
sub
fcmovnbe
mov
enter
dec
jb
fstps
sub
xchg
jnp
mov
mov
sbb
addr16
jmp
or
in
in
or
push
or
leave
jg
jl
fdivrl
stc
sbb
dec
cli
pop
push
push
jl
icebp
push
leave
ljmp
or
dec
push
push
adc
pop
and
movsl
daa
sub
cmp
xchg
in
out
dec
test
cmp
scas
leave
mov
popa
cmp
gs
sub
out
lods
pop
dec
pop
jp
mov
insb
test
dec
sbb
jl
jg
gs
push
cmp
xlat
imul
cmp
test
pop
sub
push
push
sub
insb
mov
bswap
dec
js
mov
sti
xchg
mov
fcmove
push
loope
cmp
aas
pop
mov
inc
mov
out
or
cmp
fld1
mov
mov
hlt
cli
mov
push
jmp
sbb
sub
sub
fldenv
cwtl
dec
stos
jmp
in
clc
loop
pop
dec
jle
dec
sti
fcomp
or
cmp
fcompl
inc
stos
arpl
cmp
test
sbb
or
cmp
lock
leave
cmp
push
clc
lret
pop
cmc
cli
mov
jmp
lods
movsl
enter
mov
js
in
dec
stos
cmp
inc
rcrl
push
or
in
into
or
sbb
ds
cwtl
sbb
mov
lcall
cli
sbb
int3
stos
cli
dec
fldt
cmp
jmp
cmp
sub
addr16
cmp
sbb
push
lcall
stos
pop
sbb
pop
sub
cmp
fistpl
inc
or
pop
imull
push
cmp
push
jp
dec
enter
iret
leave
lcall
sub
xlat
mov
pop
push
sub
sbb
jle
hlt
clc
sbb
pop
cmp
or
fildll
or
dec
mov
stos
enter
sbb
imul
mov
push
sub
call
stos
fimull
das
sarb
fdivrs
sub
lret
inc
xchg
repnz
fisubrl
sbb
dec
insb
insb
sub
sub
sub
pop
or
ljmp
jl
xlat
repz
js
mov
mov
xchg
xlat
ljmp
jb
push
insb
imul
jmp
lret
jle
call
xchg
cli
jl
sub
fimuls
dec
mov
fimull
sbb
pop
push
pop
cmp
sub
ljmp
pop
addb
mov
aas
imul
ljmp
sub
lock
fstps
fistl
call
outsl
push
sbb
call
loopne
or
fmull
sbb
divl
cmp
jl
sti
jge
xor
dec
pop
sbb
mov
aaa
xchg
loope
cmp
sub
addr16
pop
pusha
add
and
rcr
lret
pop
or
sbb
xor
notb
into
jbe
jnp
movsl
sti
dec
or
push
rcr
add
inc
sub
cmpsb
shll
sub
push
in
dec
sbb
insb
sti
aaa
pusha
call
iret
mov
dec
mov
fsubs
shlb
pop
lcall
sub
cmp
ljmp
mov
sti
sub
mov
jmp
mov
cmp
jmp
negl
xlat
mov
stc
fsubrl
or
sbb
and
sub
cmp
data16
or
sub
jmp
or
fsubrl
jl
movsl
dec
lret
jp
lret
pop
dec
lcall
dec
dec
cmp
pop
sub
int3
decb
sub
subb
inc
dec
leave
adc
cwtl
dec
pop
or
and
dec
sub
sub
dec
cli
inc
cld
or
mov
stc
adc
pop
mov
cmp
pop
ret
fistpl
lcall
fisttpll
and
test
sub
jl
mulb
sbb
leave
sub
cmp
adc
sti
sbb
jmp
cwtl
lret
inc
fildl
jb
adcl
xlat
sub
ret
js
or
inc
xchg
testl
sbb
push
jmp
jbe
jl
lods
pop
out
fs
in
sti
mov
arpl
dec
in
or
ljmp
pop
mov
gs
or
movsl
pop
dec
lcall
dec
fidivrl
enter
testl
rcrb
pop
dec
mov
pop
aaa
aad
js
cmpsb
xlat
mov
fsin
xor
fcmovnbe
testb
cmp
mov
ret
insb
cwtl
lcall
pop
in
push
addr16
jmp
push
sbb
cmp
dec
pop
cmpsl
insb
cli
cmp
leave
clc
jns
cmp
cli
insb
fmuls
sbb
or
adc
add
mov
scas
into
mov
ljmp
jmp
mov
scas
ret
test
pop
dec
mov
sahf
jbe
imul
xor
jl
clc
or
jp
mov
cmp
jb
cwtl
fmuls
fwait
dec
scas
cmp
iret
cmp
mov
insb
clc
push
cmp
sub
fstps
jl
ficompl
fisttpl
sub
sbb
lods
sbb
scas
lea
fldl
cmp
inc
mov
push
lock
cmp
or
mov
ljmp
inc
mov
test
jp
sub
cwtl
or
sub
shrw
shrl
or
in
and
and
mov
dec
cmp
aas
fmuls
jmp
mov
jecxz
stos
call
out
add
or
pop
jmp
daa
or
push
inc
icebp
or
ljmp
cmp
lret
and
cmp
in
scas
or
js
test
jmp
fiaddl
sbb
sbb
push
cli
mov
pop
sbb
jbe
jl
dec
mov
pop
js
enter
push
stos
fcomi
xchg
cli
add
push
into
test
iret
pop
pop
inc
sbb
lock
xchg
shl
dec
or
sbb
dec
ds
pop
xlat
or
pop
cmp
sub
das
dec
jp
out
lods
inc
sub
imul
or
fistl
gs
cmp
pop
sti
and
out
mulb
sub
or
dec
lods
cmp
cmp
data16
push
push
dec
fs
lods
sub
lret
stos
ljmp
test
in
ljmp
mov
dec
cmp
or
xlat
dec
mov
pop
pop
or
cmp
inc
mov
loope
push
dec
jp
imul
pop
or
mov
sub
out
pop
fwait
sub
and
movb
imul
fistpll
xlat
xor
inc
xchg
mov
pop
rorb
inc
mov
xor
push
arpl
or
rcrb
sbb
rorb
ljmp
pop
pop
in
hlt
push
jbe
insl
cltd
jl
sub
in
repnz
push
cwtl
lret
cs
dec
leave
mov
jo
pop
js
pop
sti
movsl
pop
push
sbb
cli
and
mov
sbb
mov
xchg
dec
xor
mov
push
aas
ljmp
in
mov
jecxz
sub
jmp
or
xor
cmp
cmp
sbb
pop
das
jmp
add
dec
lret
adc
sti
out
fisubs
cmp
mov
pop
insb
or
pop
pop
cmp
mov
mov
in
fcmovnu
cmp
xchg
leave
mov
mov
lret
cmp
inc
imul
stos
cmp
fcmovnu
fcomps
cmp
aas
arpl
or
mov
mov
bts
lret
sbb
mov
dec
mov
cmp
jbe
out
pop
cwtl
sub
dec
sti
lret
jmp
outsb
mov
sbb
imul
jbe
cli
cmp
fucomp
fldcw
mov
andl
cwtl
or
imul
jl
sbb
lcall
or
adc
daa
mov
cwtl
outsb
mov
je
mov
mov
testl
push
pop
test
sub
pop
cltd
leave
pop
xor
mov
and
mov
lret
sub
cmp
ja
xchg
sub
imul
mov
mov
mov
push
fs
call
jb
pop
dec
mov
lret
mov
and
popf
js
neg
push
testl
out
ljmp
fmull
popa
pusha
sbb
add
cmpsl
cmp
cmp
or
and
stc
push
loop
dec
ljmp
lcall
sbb
std
dec
sbb
sub
dec
or
pop
jmp
jmp
outsl
jl
pop
or
dec
adc
jmp
in
out
pop
sbb
or
jmp
sub
sbb
cmp
leave
mul
mov
or
mov
jno
jl
mov
out
cld
addr16
add
int
mov
cmpl
or
pusha
mov
lahf
rolb
fsubr
sahf
cwtl
pop
insb
push
movsl
clc
fisubs
mov
sbb
sub
push
insb
mov
or
or
outsb
pop
pop
negl
lret
pop
call
xchg
or
dec
loopne
push
pop
enter
mov
sbb
sbb
loopne
xor
mov
pop
inc
outsl
inc
stos
enter
sub
out
arpl
pop
dec
sti
test
pop
jg
add
sbb
in
sbb
cmp
data16
sbb
jmp
sub
mov
inc
int
add
cmp
mov
xor
pop
mov
movsb
arpl
cmp
pop
sbb
pusha
stos
lret
cmpsl
sub
jle
test
sbbb
enter
xor
sti
inc
outsb
sub
nop
lods
or
or
fs
and
or
jl
clc
outsb
int3
inc
stos
std
cmp
movsl
enter
pop
push
insb
inc
sbb
and
leave
test
popf
lods
sub
fsts
outsl
loop
jmp
mov
out
push
xchg
add
cmp
cwtl
dec
ljmp
scas
pop
or
cmp
notb
push
invd
mov
fldenv
aad
call
shrb
jmp
jns
adc
arpl
sbb
cwtl
pushf
test
mov
add
cli
push
dec
insl
jnp
pushf
cmp
pop
mov
xlat
ljmp
sub
or
out
movsl
ret
test
sub
outsl
push
sbb
call
or
inc
mov
jmp
or
cmp
sbb
pushf
dec
sbb
clc
lcall
pop
in
in
pop
or
inc
js
sbb
pop
lcall
lds
cmc
dec
jp
xchg
mov
enter
lret
xchg
xchg
aas
lahf
jp
sub
dec
jp
gs
test
push
or
inc
sbb
sub
jne
sub
scas
scas
dec
jl
mov
sub
pop
jmp
lahf
enter
and
cmp
arpl
mov
xlat
call
std
jb
jecxz
push
push
lods
movl
js
inc
es
scas
pop
rol
imul
stc
mov
lcall
adc
cmp
adc
or
xor
out
jnp
lret
das
in
adc
mov
adc
enter
fisttpl
inc
inc
add
fisubs
cmp
lret
enter
sti
or
pop
or
push
fcmovnu
rorl
pop
push
jle
shrl
cmp
jmp
dec
xlat
call
cmp
fstps
fcmovne
or
out
inc
call
sbb
jge
stc
negl
sub
int3
in
cmp
sub
gs
xor
sbb
dec
mov
mov
cli
fnstenv
inc
fisubrl
test
dec
dec
sub
negl
adc
mov
push
mov
cmp
sub
stos
pop
jmp
js
dec
mov
lret
int3
dec
push
std
dec
ficomps
subb
cli
sub
or
pushl
cmp
dec
xchg
addr16
mov
es
imul
out
in
dec
push
pop
pop
fsubrs
push
leave
mov
pop
push
call
sub
push
and
je
and
std
push
mov
mov
fsub
int
or
bound
dec
or
sbb
cmp
push
mov
cmp
sub
sub
outsl
clc
js
dec
sti
das
or
jp
pop
arpl
sub
sbb
jle,pn
dec
cmp
sbb
pop
jmp
imul
mov
ljmp
sbb
sub
pop
call
cmp
fstps
xor
or
dec
inc
pop
xchg
pop
fstps
jecxz
push
sub
jb
mov
dec
or
pop
or
outsb
rorb
stos
out
in
cmp
movsl
cmp
outsl
ficompl
lcall
cwtl
add
add
cmp
pop
add
cli
or
push
fldt
adc
ret
dec
dec
fcomps
jle
sbb
cmp
cmp
scas
inc
stos
pop
push
or
pop
sbb
xchg
sbb
movsl
pop
or
arpl
fmuls
cmp
out
pop
push
ljmp
gs
sub
mov
or
push
pop
out
out
lcall
ficompl
lods
sbb
push
cmp
stc
mov
dec
call
fwait
sub
iret
lea
or
mov
jbe
outsl
dec
mov
pop
pusha
call
push
outsl
lock
testl
dec
push
sub
cld
stos
dec
movl
into
arpl
or
addb
cmpsl
dec
fsubs
sbb
inc
or
adc
pop
xchg
xchg
negb
daa
ficoml
pop
sub
movsb
or
push
lahf
dec
jmp
fisttpl
add
call
sub
iret
push
dec
push
cmp
mov
fcmovu
mov
fs
in
out
xlat
in
pop
push
sub
or
cmp
or
js
inc
gs
jecxz
sub
dec
inc
repnz
sbb
stos
sub
mov
jmp
pop
dec
mov
xlat
push
pop
fstps
mov
dec
lea
mov
xlat
imul
lods
cmp
mov
stc
dec
cmpsb
movsl
dec
test
inc
pop
pop
cmp
cmp
leave
cmp
outsl
jp
jmp
lcall
mov
ljmp
out
movsl
in
push
fldl2t
mov
scas
dec
in
xchg
fidivrs
loopne
pop
dec
dec
mov
enter
jmp
pop
jb
hlt
or
mov
push
pop
pop
mov
call
test
notl
fisttpl
jl
outsl
movsl
pop
or
or
lret
add
add
pop
sbb
imul
rcrl
cmp
pop
cmp
lcall
in
aas
dec
sub
sub
xchg
push
out
cwtl
pop
rcrb
xchg
stc
and
dec
add
sbb
push
leave
cli
imul
mov
jae
dec
addr16
dec
insb
cmovs
stos
test
lods
lods
or
mov
sub
sbb
lcall
bound
or
test
sub
pop
adc
mov
dec
inc
mov
mov
pop
std
jb
jecxz
dec
jl
dec
cli
sbb
ljmp
imul
jbe
cmp
fnstenv
jmp
sub
or
xlat
out
sub
pusha
popf
fcomps
sbb
mov
leave
in
addr16
das
call
repnz
cli
mov
jle
or
pop
jl
ret
lret
out
stos
mov
cmp
lret
inc
cmpsl
lea
or
sub
inc
sub
sbb
sub
dec
sub
jno
and
fldcw
xchg
fsubrs
ljmp
push
leave
fnstcw
stos
enter
mov
pop
xchg
imul
push
pop
pop
jmp
cmp
stos
cwtl
inc
fwait
jp
iret
mov
push
inc
pop
pop
fldenv
ljmp
sbb
stos
cmp
mov
std
cli
dec
push
push
mov
sub
pop
mov
pop
fimull
call
mov
js
dec
push
xor
mov
mov
mov
mov
mov
clc
mov
or
dec
jmp
sti
cmp
sbb
and
cmp
jmp
in
loopne
in
fcomps
stos
ljmp
lods
mov
leave
jbe
aaa
sbb
ljmp
push
call
jne
stos
cmovl
sbb
and
sub
sbb
xchg
clc
or
pop
dec
enter
mul
or
data16
lea
or
dec
jmp
jmp
mov
mov
dec
out
jmp
push
js
lea
xlat
enter
sti
ljmp
add
fld
popa
insl
mov
test
imul
jb
dec
push
or
notl
xor
inc
test
xchg
stos
inc
jbe
call
mov
cmp
popa
sar
dec
jns
mull
sub
sti
and
jmp
cmp
out
mov
std
dec
dec
jmp
mov
loopne
in
ljmp
ret
and
les
or
inc
lea
dec
mov
xor
jmp
add
js
lock
sub
xlat
jl
mov
jge
enter
lret
leave
push
fdivrs
pop
pop
movsb
and
stc
in
loopne
out
sbb
insb
cmp
jge
push
call
dec
rcr
aaa
and
aas
mov
sti
arpl
stc
ljmp
out
mov
lods
dec
or
dec
push
negl
insb
sub
cld
insb
mov
mov
or
push
outsl
mov
sbb
jecxz
mov
pop
jg
cmp
stos
and
fdivrp
mov
and
sbb
pop
xor
mov
cmp
stc
lcall
shl
icebp
clc
jp
sbb
addr16
dec
cmp
jnp
jmp
sub
dec
or
stos
daa
fistl
repnz
stos
dec
in
lods
jmp
dec
jp
sbb
addr16
pop
cmp
xchg
dec
outsb
ljmp
outsb
push
sbb
ss
pop
dec
mov
cs
mov
testl
mov
jmp
pop
sub
sbb
lcall
xlat
cmp
test
dec
cli
ljmp
add
mov
rorb
and
stos
in
fld
popf
xor
in
sbb
cmc
cmpsb
pusha
imul
or
dec
shrb
or
mov
pop
fisttpll
pop
ljmp
or
dec
dec
sub
mov
data16
lcall
pop
mov
mov
imull
xchg
xor
sbb
pop
pop
insl
insb
mov
dec
xchg
iret
jl
pop
and
xchg
testl
fisubrs
fdivrp
pop
adc
insl
daa
cmp
lods
cmp
adc
push
pop
fistpl
push
cmp
test
dec
or
test
gs
cwtl
out
jge
sub
sbb
enter
sub
cmp
mov
sub
jl
mov
fmull
adc
popa
inc
jp
mov
out
cmp
dec
stos
sbb
shll
out
popa
enter
dec
xchg
jp
negb
out
cmp
loopne
jecxz
lods
sub
sbb
sub
dec
insb
test
dec
dec
into
imul
pop
enter
push
test
leave
sbb
jg
sub
rclb
lahf
or
pop
sbb
lahf
pop
scas
cli
or
out
sub
push
mov
sarl
add
mov
int
insb
ret
loopne
aaa
pop
loop
mov
lahf
push
aas
adc
insb
enter
popf
mul
push
in
stos
mov
sub
jbe
or
cs
in
fsub
data16
sbb
lock
cli
ljmp
idivb
pop
xor
sbb
popf
dec
jmp
dec
outsl
mov
sub
cmp
sbb
fisubl
movsl
scas
enter
inc
and
les
pop
or
jae
nop
jle
popa
fldt
or
lods
or
push
cmp
mull
stos
sbb
js
lods
call
pop
mull
cmp
sub
sbb
aad
lods
sbb
fistpl
lcall
sub
jne
stos
imul
dec
pop
cli
mov
push
stos
icebp
stos
mov
cmp
addl
fisttpl
ljmp
ret
int
pop
and
add
sub
add
cmp
daa
sbb
push
shr
scas
push
mov
or
jp
sub
dec
cld
popf
mov
jp
in
lods
sub
daa
jno
iret
xlat
xlat
sti
lcall
je
inc
gs
xlat
dec
sub
stos
inc
lahf
and
addr16
sbb
dec
cmp
push
pop
leave
test
inc
or
cwtl
cmp
jmp
dec
imull
lcall
xchg
stos
jbe
cli
ds
outsl
push
dec
ljmp
pop
movsl
sub
inc
mov
insb
inc
pop
negb
mov
ficoml
rorb
sbb
push
jno
and
stc
mov
movsl
jp
and
cwtl
sub
pusha
das
sbb
dec
push
sbb
push
push
mov
sub
cmpl
arpl
pop
stos
ljmp
sti
push
sub
clc
dec
xlat
imul
mov
xor
icebp
dec
sbb
pop
insb
pop
or
sti
cmp
das
sbb
idivl
pop
sbb
pop
aad
imul
lret
enter
push
cwtl
scas
leave
clc
or
jmp
aaa
out
lahf
and
ljmp
mov
dec
mov
jmp
jle
push
out
pop
call
push
fnstsw
push
mov
data16
pop
clc
pop
push
jb
stos
out
dec
pop
mov
jnp
js
pop
mov
arpl
nop
xchg
fimull
dec
imul
rcrb
rorb
mov
lods
pop
pop
mov
stos
sbb
cmp
data16
sbb
sub
dec
or
stos
mov
in
es
adc
out
ljmp
aas
or
push
leave
mov
out
mov
outsl
insl
test
or
test
and
xlat
cmpsl
jmp
cmpsl
or
xlat
sbb
cli
mov
dec
test
sbb
outsl
dec
sub
mov
add
cli
mov
das
clc
out
das
ljmp
pop
or
sub
daa
out
jecxz
jge
call
insb
stc
mov
adc
daa
or
mov
xor
hlt
mov
lret
fidivrs
cli
aaa
insb
out
mov
cwtl
xor
lods
clc
sub
inc
mov
pop
test
imul
jge
sbb
sub
inc
in
cli
movsl
pop
mov
icebp
lock
sti
or
cltd
sbb
cmp
test
jge
flds
into
jmp
mov
rcrb
dec
mov
xlat
or
mov
aas
sub
sbb
jp
push
lea
push
fnstcw
or
sub
leave
jmp
lcall
or
insb
lds
push
out
xchg
lea
popf
push
sbbl
popf
cld
lret
push
insl
pusha
xlat
mov
sbb
out
push
movsl
clc
pop
cmp
movsb
lea
fcomps
pop
sub
repnz
sbb
out
xor
mov
call
lret
ljmp
mov
dec
cmp
push
test
pop
aam
mov
pop
cli
xchg
cmp
out
gs
lret
pop
xlat
ljmp
or
push
cmp
cltd
addr16
jl
pop
sub
sbb
jl
pop
push
cmpsl
imul
ljmp
jecxz
ljmp
xlat
movsl
dec
sub
loope
sbb
dec
and
es
out
sbb
test
mov
jmp
cld
pop
dec
arpl
or
sub
jmp
stc
pop
jl
in
leave
enter
stos
jecxz
lods
js
and
cmp
ljmp
dec
das
sbb
pop
or
mov
add
cwtl
sbb
pusha
bound
mull
cli
inc
pop
jle
call
lock
mov
or
sub
xlat
sbb
dec
insb
or
cld
push
out
jo
xlat
or
or
xor
andl
sub
dec
dec
lcall
or
fisttpl
cli
jge
jmp
sub
mov
lods
fxch
out
cmp
repnz
inc
mov
xor
loopne
sbb
dec
sbbb
push
sbb
shlb
in
stos
cmp
fsubrs
sbb
and
sub
push
dec
lcall
push
adc
pop
xchg
pop
sbb
cmpsb
mov
call
sub
sarl
or
sub
fldcw
leave
mov
lcall
out
in
fsubrs
dec
fisttpl
jmp
xor
fstps
pop
sub
scas
out
ds
jge
jne
lods
push
mov
test
stos
add
mov
testl
sti
xlat
adcb
adc
inc
cltd
push
cmp
push
push
sbb
mov
sbb
stos
cmp
mov
push
mov
push
push
sub
gs
dec
pushf
sbb
jae
out
sub
pop
push
cli
add
mov
mov
repnz
pop
aad
xorl
and
sbb
movsb
cmp
push
pop
test
push
jecxz
stos
lcall
or
ljmp
out
or
or
movsl
ja
jecxz
ljmp
jmp
int
or
pop
sbb
cmpsb
pop
cmp
call
mov
mov
jp
lods
sti
or
jg
js
test
lea
add
enter
jmp
dec
jmp
sbb
ljmp
fcomps
sti
dec
pop
sub
push
imull
pop
rcrb
push
jmp
into
insb
sub
mov
loope
add
int
cmpsb
cmp
arpl
fisubs
aaa
ds
dec
imul
push
icebp
in
dec
sub
mov
push
pop
push
adcl
sub
outsl
js
xlat
or
stc
negl
ljmp
lret
xor
mov
ficompl
leave
and
adc
loope
cwtl
fs
das
mov
adc
div
or
ret
imul
stos
push
adc
push
pop
cwtl
ficomps
out
das
push
fwait
sbb
sti
sub
sub
push
pop
lods
mov
stc
fldl2e
or
mov
push
popa
mov
sbb
pop
movl
pop
jg
pop
insl
lret
mov
ljmp
sub
add
test
lret
mov
scas
pusha
mov
and
sub
pop
test
cmpl
orb
leave
js
test
jle
inc
movsb
into
ljmp
mov
ljmp
dec
std
cmp
add
ljmp
dec
das
or
sahf
addr16
sbb
cmp
pop
sub
push
sub
hlt
stos
imul
daa
clc
or
cmp
fistl
mov
dec
aas
dec
or
sub
mov
flds
mov
lcall
stos
or
scas
adc
test
pop
call
push
inc
fisubl
stos
fstpt
pop
lcall
les
pop
cmp
arpl
outsl
fimull
test
push
cli
pop
stos
stc
cmp
out
sub
insb
jp
idiv
mov
sbb
xor
lds
js
pushf
mov
pop
movb
pop
push
fistps
inc
sti
mov
pop
std
stc
cmp
xchg
test
mov
lret
inc
and
sub
cmp
sbb
ficoms
popf
out
js
sub
pop
inc
mov
dec
fcomps
xchg
fucomi
jp
xor
insb
mov
jnp
cwtl
test
dec
push
xor
push
loope
subb
fmuls
pop
rolb
sub
dec
or
popa
xlat
or
das
cli
jp
dec
lret
leave
sbb
mov
mov
nop
pop
ljmp
stc
imul
repnz
jns
sub
pop
call
pop
in
xor
and
push
dec
push
add
movl
popf
cmp
push
sub
cmp
xor
inc
dec
push
lret
xchg
push
xor
mov
or
adc
sbb
sbb
sub
daa
jle
push
stos
mov
adc
inc
pop
push
cmp
dec
lret
jl,pt
lods
mov
jp
add
stc
ljmp
dec
addr16
dec
jmp
imul
fcomp
pop
cwtl
cli
enter
loopne
cmp
xchg
stos
mov
ficompl
xlat
sub
pop
sahf
and
pop
lahf
sub
mov
or
inc
stc
mov
sub
scas
pop
pop
sub
in
cmp
divl
call
dec
icebp
sub
filds
or
mov
testl
shrb
stos
scas
ljmp
or
stos
pop
mov
dec
sub
dec
gs
js
mov
or
jmp
lret
lea
out
sbb
fildll
stos
mov
pop
mov
stc
pop
in
sub
xchg
fistpl
dec
dec
out
sub
jecxz
loopne
lret
fucomi
lret
insl
cmp
cmp
dec
inc
xlat
fistpl
sbb
sbb
xchg
cli
sbb
cmp
jp
fsubrp
fld1
sub
or
xchg
lods
data16
mov
mov
daa
mov
sbb
fsub
jnp
cli
mov
pop
cmc
scas
adc
or
out
js
jb
mov
outsl
and
in
dec
in
pusha
fcomps
jl
sub
stos
sub
mov
leave
dec
sbb
mov
sbb
outsl
std
lret
je
daa
fisttpl
out
jb
dec
movsl
mov
cmp
sub
negb
pop
mov
mov
or
xor
inc
clc
pop
sbb
pop
mov
mov
xor
mov
fsubrp
clc
insb
pop
mov
mov
fisttps
das
cltd
sub
mov
lods
or
sub
fimuls
sub
out
jne
mov
stc
dec
mov
sbb
or
dec
flds
fisubrs
mov
jns
in
out
fiaddl
das
cwtl
cmp
jmp
jle
pop
out
or
sbb
xor
pop
popf
fcomps
pop
insb
cmp
fs
out
jle
lcall
sbb
ljmp
or
pop
fwait
and
or
jmp
cmp
push
or
insl
cmp
sbb
pop
xchg
push
or
stos
lcall
es
jbe
pop
sbb
repz
dec
jbe
stos
fsubrp
daa
addr16
out
sbb
subb
jno
call
sbb
pop
dec
jmp
adc
call
cmp
mov
or
cmp
sti
push
rcrb
out
jecxz
push
out
fldt
cli
dec
mov
cmc
sub
inc
jl
push
or
adc
ret
pop
nop
pop
cld
adc
pop
lods
adc
insb
cmp
fldcw
jmp
subl
imul
js
fisubrl
repz
dec
fwait
sbb
or
leave
sub
push
subl
cmp
leave
test
push
or
sbb
cmp
mov
fistpll
inc
sub
jmp
mov
sbb
cmp
imul
jns
cld
fiadds
insl
pop
push
mov
cmp
cwtl
das
lret
aaa
dec
cmp
or
sti
push
xchg
xchg
pop
out
movl
and
out
sub
pop
and
fs
push
enter
or
sbb
sub
dec
push
xchg
sub
sub
notl
decb
mov
mov
test
enter
movsl
mov
addr16
testb
ds
mov
push
pop
jnp
ljmp
clc
test
daa
movsl
sbb
push
int
dec
stc
fisubrs
mov
or
iret
or
mov
jmp
aas
into
fxch
push
sub
cmp
out
mov
jmp
mov
test
addr16
ficompl
adc
call
or
pop
clc
or
sbb
js
ret
pushf
lret
stc
stos
or
mov
push
pop
or
jl
cli
notb
jp
aas
stc
sub
sbb
jle
or
inc
pop
pop
cmp
sahf
mov
sub
lcall
dec
pop
dec
dec
mov
xor
rcr
add
addr16
jmp
loope
cli
cmp
jl
stc
pop
fdivrs
cmp
sbb
or
pop
scas
fwait
imul
in
xchg
lods
stos
sub
dec
movsl
jp
stc
or
stos
push
or
out
or
mov
in
aas
repz
ljmp
pop
cmp
js
jge
jnp
jge
stos
sub
ficomps
call
mov
or
movsl
jl
and
leave
jp
cmp
add
add
lods
ljmp
call
stc
pushf
pop
lret
enter
das
adc
sti
addr16
pop
stos
push
imul
scas
pop
fisubrl
sub
pop
movsl
sti
lret
sub
in
mov
jl
negb
sti
fiaddl
imul
movsl
cmp
insb
mov
aaa
aad
or
pop
out
test
dec
fbstp
lret
dec
adc
stos
cmp
push
mov
cmp
pop
data16
dec
stos
pop
ja
out
popa
test
or
jp
cmp
cmp
adc
sub
sub
jecxz
repz
xor
or
xor
sbb
mov
dec
cmp
lret
xchg
daa
cs
addr16
mov
jo
lcall
das
jp
enter
ss
mov
sbb
out
insb
test
push
or
cmp
rcr
sub
bswap
dec
dec
movl
into
ret
stc
sar
push
xchg
dec
and
nop
arpl
sub
loopne
aas
js
jp
mov
and
insb
stos
jmp
out
add
out
jecxz
test
ljmp
fildl
or
dec
test
dec
stos
cmc
sub
fmuls
fcomi
pop
aad
add
cmc
sub
in
mov
mul
sbb
jmp
xchg
pop
sub
dec
inc
ljmp
mov
leave
insb
call
push
jmp
dec
xlat
imul
bound
scas
clc
mov
ret
cmp
sti
es
adc
cmp
insb
dec
in
mov
xor
pop
sub
push
aas
sarl
mov
cmp
or
dec
insl
pushf
sbb
test
sub
mov
jmp
mov
mov
pop
sbb
or
jl
mov
xor
mov
rcrl
stc
adc
sar
les
or
popa
xlat
mov
flds
ljmp
cs
pop
scas
imul
sub
lods
jp
sbb
pop
jge
or
negb
mov
fidivrs
cwtl
aaa
mov
lcall
sub
lret
test
dec
sbb
inc
lcall
jge
cmp
outsl
test
lret
fwait
stc
push
rcr
fldcw
ficoml
dec
cli
or
cmp
jl
or
bound
shl
out
push
inc
adc
xor
and
test
arpl
insl
sub
lods
dec
pop
aas
mov
cs
fnstsw
xchg
into
iret
pop
jle
sbb
or
cmp
gs
pop
sub
pop
cmp
mov
dec
xor
sbb
lcall
sub
cwtl
pop
cmp
sarb
sbb
pushf
in
push
daa
xlat
insb
mov
jmp
dec
jp
fisttpl
inc
pop
incb
sti
sbb
push
add
movsl
out
jmp
cld
sbb
in
or
jmp
cmovl
add
imul
dec
sub
mov
push
das
shrb
das
sbb
pop
dec
pop
fs
and
js
insb
pop
or
mov
jp
xchg
dec
add
stos
xor
jo
aaa
add
stc
jno
sub
jge
sub
sbb
fsubrp
dec
repz
fisubl
lods
ja
jge
dec
mov
dec
cmp
movsl
clc
cmp
mov
inc
hlt
loopne
imul
mov
dec
mov
popf
mov
sbb
out
jmp
jae
addb
imul
js
arpl
popa
sbb
pop
jle
pop
inc
jg
cmp
dec
fisubrl
push
push
push
jmp
dec
or
dec
or
or
leave
cmp
mov
jecxz
cmp
or
sbb
dec
xlat
lret
arpl
call
rorb
or
icebp
js
mov
xchg
clc
lods
stos
cmp
jnp
sbb
outsb
adc
pop
sbb
fdiv
sbb
es
xchg
or
ljmp
js
sbb
daa
dec
adc
jge
xor
test
jle
cwtl
sti
xchg
mov
dec
icebp
fdivrs
imul
js
or
loopne
cmp
ljmp
mov
fimull
mov
mov
jle
icebp
push
sub
and
xchg
jmp
mul
add
leave
jmp
mov
movups
mov
imul
testl
jmp
mov
ljmp
pop
xchg
lahf
cmp
mov
inc
jmp
sub
stos
jl
jnp
jmp
jle
inc
push
shrl
or
xlat
fbld
stos
pop
sub
leave
jp
insb
sub
stos
mov
pop
imul
and
and
roll
xlat
and
insl
mov
pop
fidivrl
leave
repz
jmp
ljmp
outsb
xorl
stc
sbb
sub
dec
add
or
fisttpl
mov
mov
in
xor
nop
jnp
enter
fld1
fstpt
ficoml
outsl
xlat
stc
or
mov
in
jge
sti
lcall
dec
stc
call
iret
sub
out
push
cld
xlat
out
imul
daa
dec
pop
jp
pusha
pop
mov
scas
sti
mov
adc
lea
jmp
pop
mov
inc
push
sub
outsb
aad
pop
fistps
jl
or
repnz
das
or
mov
fcompp
or
sub
or
call
scas
mov
mov
lret
ljmp
popf
arpl
enter
sub
imull
sbb
aam
mov
lock
and
pusha
ret
fdivrs
or
repz
sbb
xlat
pop
imul
neg
mov
dec
pop
dec
sbb
add
or
sub
dec
test
push
jns
in
xchg
outsl
loop
dec
or
enter
leave
inc
daa
imul
insb
mov
jg
out
xchg
insb
sbb
dec
das
sbb
push
mov
adc
das
pop
sti
ljmp
test
sbb
mov
inc
flds
clc
jmp
pop
dec
cwtl
xor
sub
insb
pop
imul
push
or
jle
jmp
add
xlat
cmp
pusha
inc
jmp
mov
cmp
loop
ljmp
push
enter
cmp
pop
push
or
addr16
ljmp
push
mov
outsl
loope
cmp
popa
push
sub
mov
fdivr
push
lcall
or
mov
sbb
fmul
mov
aas
sub
jge
mov
pop
or
imul
or
fisttpl
pop
or
jbe
movsl
out
mov
sbb
push
addr16
push
dec
cmp
sbb
push
movsl
fidivrl
insb
inc
cmp
sbb
outsl
mov
and
xchg
lret
sub
pop
imul
cmp
xlat
adc
addr16
pop
imull
orb
jp
sub
adc
js
sbb
jns
sbb
lahf
insl
into
push
jle
sub
test
sub
out
stos
pop
lret
fisubrl
mov
or
popf
mov
cmp
mov
cmp
dec
inc
cmp
push
in
mov
pop
cmp
outsl
decb
or
sbb
mov
jmp
and
mov
jns
repnz
sub
adc
jo
cmpsb
cmpsb
dec
or
notl
pusha
mov
ds
jp
std
pop
push
lahf
scas
xor
js
cmp
pop
dec
jp
fimull
clc
das
stc
lret
sbb
sbb
imul
lret
cmp
cmp
sbb
in
pop
dec
lret
jp
addl
or
pop
inc
xlat
leave
imul
stos
xor
cld
jmp
mov
fsubrs
dec
stc
das
enter
mov
pusha
pop
cmp
cmp
adc
add
sbb
fldcw
or
test
mov
mov
mov
pop
push
call
mov
std
fdivs
inc
cwtl
rorl
pop
mov
dec
or
cli
sub
xchg
sub
sub
sub
popa
in
test
enter
pop
inc
fistps
imul
or
lods
mov
sbb
aas
mov
lcall
pop
pop
sbb
push
xor
jmp
cwtl
cmp
sub
sbb
cmp
push
push
hlt
js
mull
cli
cmp
add
scas
sbb
out
out
push
ljmp
fisubrl
out
stc
sub
into
aas
mov
jne
push
dec
lahf
inc
adc
pop
add
jp
mov
or
mov
test
popa
push
pop
das
inc
clc
push
push
sbb
adc
hlt
dec
add
mov
jecxz
pushw
adc
call
pop
sbb
inc
js
test
cmp
fdivr
daa
push
jl
pop
sub
pop
dec
subl
xor
sub
or
and
mov
jb
pop
xlat
addr16
ljmp
in
cmp
jge
cmp
inc
cmp
cli
sbb
or
inc
shlb
push
jb
out
mov
dec
cmc
arpl
sub
in
cmp
jbe
push
stos
sub
push
mov
cmpsl
icebp
cmc
pop
xlat
sub
fistpl
mov
jmp
mov
cwtl
js
out
scas
dec
mov
mov
pop
sbb
test
sub
mov
push
xor
ss
sub
mov
notl
sti
repnz
jo
je
jp
ficomps
cmp
fxam
mov
push
imul
lcall
or
in
insb
adc
mov
push
and
icebp
mov
sub
mov
adc
fisubrs
cmpsl
cmp
ljmp
fsub
lret
dec
cmp
sub
push
ret
jno
jbe
jp
mov
mov
dec
mov
loope
stos
or
jnp
mov
insb
dec
testl
or
rcrb
pusha
dec
insb
jecxz
das
sub
rorl
insb
pop
fs
dec
xchg
sti
pop
or
push
sbb
inc
psubsb
xor
xor
pop
nop
addr16
fsts
insb
mov
cmp
sbb
repnz
out
hlt
sub
inc
mov
leave
push
pop
sbb
shrb
das
inc
sbb
mov
fisttpl
sbb
mov
fidivrl
xlat
sti
add
push
mov
cwtl
arpl
lcall
cli
mov
or
sub
fldt
cwtl
mov
sub
fdivrs
pop
fnstcw
lahf
push
notl
cli
mov
jae
mov
js
jb
cmp
and
xor
inc
sub
cmp
push
fstps
or
push
pop
jl
enter
jmp
fstpl
negl
je
or
sti
sbb
imulb
das
std
fstpt
cmp
mov
or
js
stos
mov
rorl
outsl
fstps
pop
cmp
jno
mov
stos
pusha
ficomps
pop
das
sub
jmp
jae
out
xchg
pop
in
xor
push
lods
pop
lret
addr16
in
push
call
xor
dec
adc
call
or
push
inc
mov
pop
pop
fimull
ss
popf
sbb
cmp
sbb
add
test
jl
push
pop
jb
push
cmp
pop
or
call
push
xchg
imul
pop
movsl
js
cmp
mov
jge
subl
xchg
cmp
test
add
jmp
dec
jmp
or
pop
sbb
jo
cli
jmp
sbb
mov
insb
sub
push
cli
cmp
dec
pop
and
mov
test
sub
mov
mov
mov
test
repnz
jl
int3
xchg
dec
pop
dec
hlt
jge
orl
jns
jl
stos
test
jg
adc
leave
out
push
sbb
call
lahf
cmp
sbb
dec
sbb
cmp
leave
sub
enter
lea
in
dec
test
cmp
lret
mov
cmp
int
or
les
sbb
add
add
cmp
xchg
or
insb
stc
cmp
mov
jp
fcmovu
pop
or
das
loope
push
fstps
mov
cwtl
call
jle
movl
stos
adc
mov
enter
sbb
mov
sbb
pop
jmp
movsb
sbb
fwait
hlt
jmp
jecxz
cmp
std
stos
fldl2e
mov
or
sub
js
cmp
leave
sbb
fnstcw
or
sti
insb
fimuls
subb
fisttpl
or
fsubrl
dec
sbbb
cltd
jle
adc
sub
push
sub
jg
xlat
icebp
xchg
and
or
lcall
or
cs
fsubrp
jl
in
push
mov
ds
pop
pop
dec
sub
or
sbb
mov
push
decl
shl
jp
lret
add
or
mov
mov
cmp
fisubrs
mov
pop
sbb
cmp
in
jle
pop
xlat
cs
mov
into
addr16
dec
repz
sbb
bound
mov
jmp
cmp
test
dec
stos
sbb
sbb
xchg
and
push
hlt
stos
dec
iret
popa
loop
or
ljmp
push
sub
add
mov
pop
push
dec
lret
mov
cli
pop
pusha
sub
mov
aas
xlat
lcall
ljmp
insb
mov
and
or
sub
pop
das
mov
xchg
clc
jg
or
repnz
dec
xor
call
add
cld
sbb
pusha
sub
mov
sub
ficoml
stc
push
cmp
jp
bnd
mov
pop
dec
dec
push
sbb
pop
pop
aad
clc
xchg
cwtl
sbb
fisubrl
insb
dec
bound
dec
in
repz
cmp
ds
and
or
testb
scas
xor
dec
fistpl
lcall
add
ljmp
ljmp
sub
and
das
fimuls
or
mov
mov
bound
mov
pop
cmp
stc
out
daa
test
jb
leave
test
cmp
jp
dec
xchg
sbb
push
lods
push
hlt
sub
pop
sub
fidivrl
sbb
jp
adc
lea
call
in
in
cmp
in
lret
mov
cwtl
fldpi
sub
pop
in
dec
sub
inc
popf
or
cmp
pop
ja
daa
test
pusha
pop
sub
sub
mov
popa
dec
call
faddp
sbb
decb
clc
sar
add
pop
adc
fiaddl
sub
shrl
pop
cmp
sub
pop
mov
sbb
dec
jbe
or
or
outsl
enter
dec
mov
fcoml
mov
cwtl
jbe
repnz
jnp
clc
or
mov
mov
sbb
or
push
jl
test
imul
dec
sbb
cmp
jns
cmp
mov
movsb
mov
fsubs
pop
pop
push
dec
xor
cmp
cli
enter
sbb
fwait
call
or
js
mov
push
push
leave
dec
fisubrl
cli
and
movsl
dec
add
inc
or
xchg
or
lods
in
xchg
sub
mov
iret
scas
dec
sti
mov
mov
push
ljmp
dec
fs
dec
out
dec
testl
mov
pop
mov
sti
dec
mov
sub
clc
jmp
stos
cwtl
test
icebp
sbb
das
push
daa
pop
pop
jl
xor
mov
inc
fdivrs
mov
sbb
jbe
gs
dec
cmp
out
sti
cmc
loope
adc
cmp
jl
pop
or
loope
xchg
mov
dec
stos
out
mov
or
sub
lret
out
cmp
mov
insb
add
mov
arpl
jmp
mov
jmp
sub
cmp
push
dec
push
xor
leave
loop
mov
xchg
push
xchg
cmp
push
and
dec
sub
sub
jp
cmp
jmp
or
rorl
das
jbe
inc
out
daa
jmp
mov
or
enter
push
pop
fucomi
in
or
or
scas
sub
scas
inc
ljmp
sarb
inc
inc
pop
jno
push
pop
sbb
or
pop
iret
out
out
xor
cmp
pop
lea
aas
add
enter
imul
cmp
jl
dec
inc
inc
xor
xchg
test
scas
pop
push
cmp
mov
or
push
sub
enter
adc
add
negb
sub
push
cmp
lret
sub
or
mov
jl
add
sti
lods
or
in
dec
and
mov
movsb
mov
cli
outsl
sub
sti
clc
sbb
mov
ljmp
pop
je
dec
insl
or
dec
stc
pop
jl
ror
jge
mov
hlt
pushf
stos
xor
inc
cmp
fisubrl
test
cmp
pop
mov
arpl
clc
inc
mov
dec
push
dec
mov
pop
sbb
ficompl
lahf
outsl
ja
fisttpll
dec
xlat
mov
push
add
pop
pop
xchg
in
mov
iret
mov
std
sub
cwtl
inc
outsl
cmp
ret
sub
sub
cmp
pop
movsl
outsw
or
dec
jl
or
add
inc
mov
into
call
lret
or
pop
fldt
outsl
pop
lahf
insl
push
sbb
sbb
xor
mov
xchg
insb
leave
movsl
jmp
add
lcall
pop
jl
pop
negb
add
xrelease
push
imul
dec
sbb
pop
cwtl
sub
mov
push
push
jnp
sahf
dec
cld
sbb
inc
jecxz
insl
imul
lods
test
push
pop
dec
lcall
push
jno
xchg
out
jl
adc
sbb
cmc
sub
push
inc
cmp
sub
cmp
pop
inc
pop
mov
clc
cli
jae
push
stos
test
mov
sub
dec
cli
lcall
lods
mov
dec
js
lods
movsb
sub
dec
cli
sbb
sub
stc
sbb
jmp
push
stc
clc
pop
sub
repnz
cmp
sub
arpl
fadds
out
imul
dec
flds
fidivrs
mov
lods
fidivrs
or
loope
mov
or
or
scas
outsl
scas
call
add
jno
dec
and
pop
cmp
dec
cmp
es
repnz
addr16
sbb
cmpsl
xor
cli
inc
mov
inc
mov
inc
aaa
scas
cmp
sti
in
sti
jl
xor
sub
mov
enter
sbb
stos
dec
pop
cmp
adc
push
out
and
lret
pop
mov
sub
negb
jmp
rcll
lret
insb
cld
js
pusha
mov
or
jmp
daa
in
pminub
iret
pop
int
mov
push
shrl
jge
jb
ret
pop
cwtl
jmp
push
jae
mov
out
dec
cmp
mov
imul
iret
pop
push
inc
cmp
bound
pop
pusha
call
ljmp
leave
cmp
ret
push
stos
dec
xor
mov
push
in
test
cmp
or
pushf
into
sub
pop
sub
xor
testl
lods
stc
mov
dec
sbb
dec
inc
jge
push
out
pop
pop
mov
jg
pop
fs
xlat
adc
gs
sub
mov
negb
push
dec
sbb
mov
fimull
in
lods
cli
sbb
mov
jmp
leave
and
mov
sar
lcall
cmp
or
in
or
mov
lahf
sub
pop
add
cmp
rcrb
adc
adc
adc
adc
and
jge
pop
fisttpl
int
sub
test
jp
dec
dec
pop
mov
jg
pop
adcb
jns
inc
sub
cmpsl
ja
jmp
dec
sub
or
push
pop
cwtl
ret
loopne
push
sbb
pop
outsl
adc
cmp
clc
lods
stc
cmp
cmp
lret
dec
mov
aad
stc
inc
adc
push
jle
gs
jmp
pop
or
xor
sbb
jmp
js
or
std
outsl
jp
dec
dec
sbb
dec
sbb
cmp
dec
leave
mov
pop
jmp
or
test
cwtl
in
dec
or
sbb
ljmp
outsb
mov
sbb
cmp
mov
xlat
push
lea
or
push
jle
jmp
jmp
cli
ljmp
daa
fisubl
pop
push
leave
mov
xlat
stos
ficompl
mov
repnz
dec
imul
jmp
push
fcomps
pop
sbb
in
lret
mov
xlat
jp
cs
push
pop
jno
cwtl
fadds
mov
adc
pop
dec
mov
push
repz
jp
clc
jg
inc
repnz
test
cmp
dec
push
sbb
pop
idivl
imul
cmp
sub
add
sub
jmp
push
ljmp
fyl2xp1
push
inc
pop
aaa
sub
pop
add
mov
dec
or
insb
inc
jmp
adc
out
mov
pop
cli
pop
test
repz
gs
call
pop
sub
stos
sbb
mov
imul
pop
pop
rorl
pop
inc
fcom
dec
mov
or
pop
les
or
mov
cmp
jbe
shr
pop
mov
in
mov
dec
stos
decb
sbb
movsb
xor
sub
mov
fiaddl
cmp
jle
sub
sbb
or
adc
lods
out
test
test
cmp
sti
lods
push
mov
or
sub
mov
mov
inc
jnp
data16
das
jmp
pop
out
aaa
cmp
ret
rolb
pop
xchg
leave
sub
jnp
sbb
in
push
rcr
push
data16
divl
insl
stos
inc
add
je
loop
ljmp
lea
push
insb
xlat
clc
sbb
ret
pop
test
jecxz
mov
push
in
sub
dec
gs
data16
test
xchg
dec
in
fsubrs
insl
hlt
lds
cmp
imul
jecxz
ds
cwtl
sub
jmp
pop
xor
push
or
bound
jp
add
or
int
call
push
ficompl
bound
sub
mov
sub
mov
daa
or
loopne
sub
sbb
push
lea
or
call
pop
jmp
sub
pop
leave
xor
out
sub
in
push
mov
mov
fs
leave
stc
or
push
sbb
push
jmp
in
stc
cmpsl
stos
popf
insb
dec
sbb
pop
enter
pop
outsl
insb
mov
mov
cmpsb
jmp
fcomps
enter
and
pop
dec
imul
or
or
xchg
mov
lret
jmp
jecxz
jl
or
sbb
andb
fisubrl
dec
dec
or
add
lods
pop
lds
cmp
or
outsl
aas
lcall
icebp
jl
das
dec
test
lcall
cmp
rorb
dec
sbb
dec
pop
leave
insb
insl
cmpsl
or
cli
inc
dec
sub
dec
dec
sbb
mov
repnz
movsb
and
xchg
ljmp
inc
sub
push
repnz
pusha
sbb
enter
cmp
adc
out
jl
sub
pop
pop
in
jmp
dec
sub
mov
cld
fucompp
push
dec
push
jp
rorb
push
dec
sbb
add
js
out
or
dec
enter
dec
sbb
sub
mov
jl
hlt
movsl
das
jg
daa
int
cmc
or
test
mov
sub
jge
cmp
je
insl
cmp
aad
aas
fisttps
jbe
or
adc
ja
mov
arpl
pop
jl
fisubrl
testl
xchg
stc
dec
rorl
imul
sub
lcall
fisttps
sarb
aaa
orb
aas
mov
pop
cmp
xchg
repnz
adc
jo
push
mov
outsb
pop
stos
leave
clc
sbb
orb
dec
stc
fimull
or
repnz
pop
pop
ljmp
dec
cli
sti
notb
stos
cld
call
test
xchg
arpl
cmp
and
cmp
iret
or
cmpb
in
and
mov
scas
loopnew
pop
mov
dec
jmp
sub
movsl
sti
outsl
and
dec
sub
js
cli
fstps
pop
mov
xchg
arpl
jl
fs
sub
mov
in
ret
inc
iret
jl
xlat
sti
rclb
or
popf
add
xor
mov
sub
jp
and
cmp
cmp
js
stos
fldt
cmp
sub
dec
nopl
push
arpl
fldcw
jp
leave
ret
call
popa
sub
negl
cli
jmp
pop
or
pop
jmp
gs
ljmp
or
sbb
or
jmp
xchg
push
imul
out
pop
inc
mov
pop
xor
and
push
loop
pusha
cld
push
xor
pusha
enter
cwtl
xlat
sti
cmc
out
out
cs
clc
mov
insl
addr16
js
push
cli
mov
data16
or
mov
mov
orb
sbb
or
imul
or
imull
in
cmpsl
call
iret
mov
xchg
xchg
rorb
pop
rclb
test
mov
xor
push
cmp
in
cmp
lcall
jmp
xlat
push
xchg
leave
insb
std
cli
aas
test
sub
dec
sub
in
lods
dec
adc
push
fdivr
xor
dec
and
sbb
pop
call
mov
or
pop
mov
pop
cmpsb
fidivrs
pop
mov
push
sbb
stc
sbb
arpl
out
fldt
lret
clc
cmpsl
jmp
cwtl
sbb
xchg
arpl
fstpt
push
leave
mov
jge
fcmovb
loop
pop
adc
jbe
cltd
dec
iret
test
pop
dec
fadd
pop
sub
testl
js
mov
mov
jae
jmp
notl
inc
test
in
inc
inc
mov
xor
loopne
inc
lret
clc
pop
das
mov
imull
ja
mov
fimuls
das
xor
and
xlat
mov
mov
dec
lea
cmp
wbinvd
out
mov
ljmp
dec
sub
dec
adc
xlat
mov
insl
jmp
xchg
pop
lods
fmuls
insl
dec
pop
sbb
sbb
enter
push
cmp
dec
pop
ret
mov
into
sti
push
les
js
test
cmpsl
jle
mov
jg
jmp
sbb
fsubr
sbb
lret
cmp
test
cmp
sub
outsl
mov
jmp
xlat
lods
pop
jp
jge
push
mulps
sbb
mov
mov
inc
test
inc
sub
loop
outsb
mov
das
or
or
pop
jl
insb
out
test
popa
pop
dec
dec
push
adc
add
cli
cli
inc
mov
outsb
pop
call
or
mov
fsubs
or
pop
stos
sbb
mov
loope
or
sbb
pop
loopne
inc
jb
jle
mov
add
push
mov
dec
jge
sbb
push
inc
pop
imul
sub
dec
jle
sub
dec
sub
movsl
insb
dec
repz
idiv
pop
adc
adc
cmp
sbb
push
idivb
lcall
fisttpl
push
sbb
jmp
dec
and
cmp
fisttps
sbbb
and
or
or
or
and
sbb
sub
leave
test
enter
mov
jecxz
jns
sarb
clc
ljmp
or
mov
lcall
js
cld
stos
lock
mov
push
cmp
jp
sub
or
adc
movsl
jecxz
mov
test
popa
xor
sbb
sbb
mov
aas
sbb
lret
fisubrl
cmp
push
idivl
pop
mov
sub
ljmp
lods
enter
sti
js
pop
xchg
mov
add
test
cmp
or
out
push
lret
or
push
icebp
push
mov
jmp
jbe
or
pop
push
out
in
cld
js
cmp
call
or
movsb
pop
jle
xlat
lret
dec
or
out
shll
and
mov
sbb
imul
xor
xchg
xorl
pop
push
mov
stos
cmpsl
lret
fisubrl
mov
loop
or
and
inc
ss
sub
mov
push
js
lcall
ljmp
cmp
sbb
mov
jmp
cli
cmpsb
daa
dec
daa
mov
jl
inc
ds
sbb
cmpsl
call
dec
add
pushl
jl
les
lods
imull
and
ljmp
clc
cmp
pushl
jo
es
enter
pop
hlt
ret
dec
test
imul
lods
fidivrs
inc
cmp
cmp
popa
and
jmp
sub
in
cli
data16
divb
or
cltd
fadds
stos
fcmovne
lahf
in
cmp
lret
stos
cmp
inc
xor
dec
das
cmp
sub
jl
push
cmc
push
fstps
adc
es
imull
dec
or
jbe
cli
sub
xlat
aaa
int3
jmp
lods
jp
fmuls
loope
data16
sbb
sbb
jg
outsl
div
inc
sbb
pop
push
add
fadds
mov
mov
stos
xor
gs
fisubrl
sbb
test
jp
fildl
pop
pop
pop
sbb
mov
ret
sub
push
sbb
push
jno
popa
mov
clc
fsubrp
mul
xor
sbb
fstps
jp
leave
das
lcall
jnp
pop
adc
or
jmp
insb
fldt
jl
jle
fs
cmp
sub
fldl2t
dec
lods
ja
insl
jmp
or
clc
mov
mov
fists
mov
enter
sbb
dec
push
lea
fucomi
data16
or
stos
push
sbb
xlat
dec
negb
dec
add
ljmp
sub
cmp
ljmp
cmp
mov
cmp
in
js
inc
dec
enter
cmp
push
sahf
stos
dec
into
imull
orb
dec
sbb
jecxz
stos
cwtl
pop
jne
pop
mov
mov
pop
leave
add
jb
mulb
mov
es
dec
sub
mov
cmp
call
cmp
arpl
sub
std
cmp
push
lret
das
add
mov
or
test
jl
fwait
daa
fdivs
js
push
in
sbb
pop
pop
cmp
pop
mov
and
jmp
dec
lret
loope
jl
xchg
leave
dec
iret
cs
inc
inc
jle
mov
add
sub
or
xchg
or
aas
lret
insb
jno
stc
mov
xchg
sub
lret
int3
xor
decb
sbb
dec
jbe
cmp
clc
push
inc
sub
out
ja
in
pushf
mov
insb
sbb
cmp
jb
jmp
aas
xor
movsl
adc
mov
push
jbe
rorl
loope
cmp
xchg
cmp
sbb
or
mov
xchg
fiadds
test
jmp
push
mov
in
test
pop
stos
dec
cmp
ficomps
dec
stos
popa
lcall
leave
ljmp
mov
adc
inc
cs
push
pop
jl
enter
push
add
push
adc
add
mov
pop
sbb
js
sub
jmp
jbe
and
gs
jmp
enter
cmp
add
dec
imul
ds
sbb
movsb
push
and
fldpi
cmp
sub
fucom
or
test
mov
js
leave
sti
enter
loopne
cli
jmp
stos
mov
inc
sbb
idivb
jge
inc
test
dec
cmp
test
xchg
ficompl
cmp
jmp
jmp
jg
jp
sub
subb
fs
xlat
sti
out
cwtl
jae
outsb
test
dec
lods
cmp
dec
xchg
mov
adc
das
jmp
insb
xor
adc
out
pop
sbb
sub
pushaw
insb
ljmp
fs
arpl
pop
pop
adc
inc
call
dec
lcall
sub
dec
call
imul
jg
inc
daa
cmp
dec
jmp
dec
sub
pop
sbb
js
mov
xor
pop
sbb
cmc
dec
push
mov
jb
sti
sub
cmp
or
mov
sub
inc
adc
mov
pop
sbb
sub
and
ljmp
enter
lcall
insb
add
jecxz
lods
cmp
fistpl
cmp
pop
xchg
and
arpl
push
sti
mov
sub
inc
mov
insb
cmpsb
mov
fstps
test
sub
pop
inc
mov
push
push
loopne
jnp
fildl
cli
fisubrl
out
das
pushf
sub
idivl
sub
pop
lea
cmp
pop
jg
dec
mov
dec
add
sbb
negl
lcall
cmp
or
loopne
stos
fmul
dec
ljmp
imul
fcmovnu
cwtl
stos
inc
lods
stc
imul
mov
xlat
dec
lret
mov
jno
mov
nop
jmp
ljmp
mov
stos
out
sub
lea
or
mov
sub
nop
insb
lahf
mov
sbb
mov
or
loopne
ljmp
testb
imul
or
push
jmp
stc
pop
mov
xchg
inc
lock
lcall
inc
adc
lock
pop
adc
pop
rorl
mov
addl
movsl
rorb
jne
test
mov
fucomi
fildll
mov
mov
int
enter
bound
mov
aam
xorl
repnz
inc
ljmp
movsl
jnp
sub
in
inc
aaa
xchg
inc
xlat
mov
decb
sub
es
pop
inc
movsb
cmp
sbb
leave
enter
jp
setl
cmp
push
dec
or
dec
pusha
fcmovnbe
outsb
sub
or
push
mov
sub
and
xchg
fmuls
and
inc
in
stos
inc
cmp
aas
mov
or
stc
test
adc
out
sbb
orb
push
enter
subl
push
mov
xor
mov
out
and
neg
cmp
mov
insl
and
sbb
ror
enter
dec
mov
dec
fsubrs
cmp
jl
mov
stos
clc
inc
in
or
outsl
dec
dec
jmp
mov
dec
nop
icebp
and
rcrl
ror
stos
inc
arpl
or
loop
int
jle
fistpl
xor
arpl
fnstcw
xchg
adc
pop
cmpsb
loop
sbb
addr16
sbb
mov
dec
jp
cmp
ljmp
sbb
bound
dec
xchg
mov
repnz
cmp
cmp
dec
sbb
dec
sti
push
clc
dec
or
call
fisttpl
cli
sti
pop
pop
fisttpl
mov
xchg
ss
repz
push
test
mov
mov
daa
xchg
daa
repnz
pop
cmpsl
jp
dec
mov
jmp
data16
jge
add
loopne
sahf
dec
dec
cmp
pop
xchg
stc
dec
enter
loopne
in
test
lret
sub
repnz
out
or
jle
cmp
jle
ljmp
fs
jge
mov
aaa
sti
xlat
iret
or
jo
jl
add
je
xchg
pop
jle
pop
add
out
stos
jp
jl
enter
and
and
ret
cld
fcomps
and
lea
or
pop
sub
enter
mov
ret
xlat
sbb
or
sub
arpl
inc
jge
cli
insb
cwtl
dec
and
inc
iret
or
dec
lcall
jmp
mov
daa
sbb
jmp
or
dec
and
lcall
sbb
out
xor
cmp
pop
in
jmp
das
sbb
or
mov
push
pop
cmp
into
cmpsb
mov
aas
or
mov
sbb
or
test
sub
mov
or
or
sub
sub
or
enter
fsubr
pop
cmp
adc
std
or
mov
pop
dec
imull
cmp
test
imul
jl
sub
int3
stos
push
lcall
cmp
jmp
sbb
sti
stos
sub
mov
or
sbb
pop
sub
js
cmp
sti
mov
pop
jns
popa
mov
xchg
jnp
or
pusha
push
push
pop
cltd
or
dec
sbb
xlat
jge
cmp
inc
dec
pop
inc
inc
add
sub
pop
std
pop
add
imul
push
out
or
not
jmp
in
push
inc
sub
pop
mov
aaa
add
ljmp
cmc
mov
sbb
or
decb
push
mov
imul
sub
mov
arpl
enter
iret
pop
test
mov
imul
fmul
js
inc
or
popa
in
inc
mov
fdivrl
pop
mov
arpl
ljmp
mov
les
js
das
cmp
jb
mov
loope
fmul
push
or
sub
mov
pop
mov
pop
mov
lcall
jmp
pop
sbb
stos
shlb
aas
or
sbb
sub
shrl
sub
jp
sbb
sahf
sub
imul
in
dec
push
add
pop
jmp
aam
lcall
or
gs
fcmovu
pop
insb
fsubrs
enter
insb
addr16
pop
inc
jmp
dec
push
add
pop
enter
jae
mov
pop
jmp
call
push
in
cwtl
push
jp
pop
push
fs
sub
jmp
lahf
cmpsl
jecxz
loopne
test
push
test
inc
lcall
sti
or
lret
jne
clc
and
push
push
sub
cmp
jp
push
sbb
push
sbb
cwtl
orb
inc
dec
jmp
xor
iret
jp
rolb
movsl
out
pop
test
stos
jecxz
loopne
call
fnstenv
lea
adc
aam
cmp
movsb
repnz
je
push
sbb
xlat
arpl
fldt
sti
cmp
mov
ljmp
and
mov
xchg
orb
or
inc
mov
and
cmp
mov
fyl2xp1
cmp
sub
mov
pop
popa
cmp
sub
rcrb
gs
xchg
dec
mov
jmp
ljmp
mov
test
or
aam
xlat
mov
jnp
sbb
lret
ret
push
pop
stos
sbb
jmp
stos
leave
pop
fldenv
mov
add
popa
das
cmp
sub
lret
push
jbe
mov
imul
pop
cmp
push
xchg
mov
xlat
insl
lea
sub
add
sarb
shrb
adc
jne
pop
lods
fucomi
sbb
sarb
cld
xchg
dec
pop
jge
jnp
outsl
out
sbb
fstps
cmp
or
push
inc
daa
dec
mov
pop
xlat
mov
cmp
movsl
pop
sbb
in
pop
sub
enter
dec
ret
mov
pop
lcall
fnop
cli
jne
test
popa
sub
inc
inc
dec
pop
sbbl
negb
inc
adc
negl
push
rol
cmp
pop
insb
stc
call
fcmovb
loopne
jle
fxch
sub
or
shll
ret
jb
push
adc
testl
insb
cmpsb
js
out
in
fstpt
or
mov
push
jnp
loope
lret
sbb
pop
cli
cmpsb
shll
sbb
jl
out
cmpl
push
mov
js
cmp
jp
out
lods
jl
pop
lods
pop
daa
add
popa
cmp
jl
testl
and
or
addr16
movsl
cli
pop
sub
insb
pop
dec
and
sub
mov
cmp
out
sub
mov
sbb
inc
mov
add
xchg
std
fdivrs
jle
mov
out
test
call
dec
mov
or
jg
mov
movsl
pusha
out
push
dec
xlat
insb
pop
hlt
dec
fistpl
mov
fisubs
sub
dec
pop
add
ljmp
sbb
push
rorl
cli
mov
ds
mov
out
jp
cmp
xchg
mov
in
mul
leave
jp
xlat
or
int3
sub
mov
lods
cmp
jl
push
mov
dec
lret
xlat
ds
mov
push
lods
jne
movsb
cwtl
cmp
dec
test
dec
jle
xlat
dec
or
pop
sub
fucom
dec
pop
data16
and
cmc
out
cmp
pop
sub
push
and
js
adc
testl
lea
jmp
bswap
or
out
add
fldt
gs
push
cmp
fwait
sbb
out
xor
enter
pop
dec
out
stos
mov
xchg
data16
jns
daa
jecxz
mov
sbb
push
cmp
ja
dec
dec
ret
pop
aaa
mov
sub
inc
pop
imul
data16
mov
daa
cmp
lret
mov
out
or
mov
sbb
pop
or
xlat
sbb
mov
add
jp
aas
or
sub
cmp
xor
lock
fistpl
insl
ds
jecxz
and
sbb
div
jp
fidivrl
outsl
sti
pop
test
sub
lcall
call
enter
movsl
fistpl
leave
sbb
lea
lods
fdivrp
insb
sub
lea
ljmp
leave
addr16
cmp
sbb
push
xlat
aam
or
and
cmp
dec
dec
or
out
in
std
stc
cmp
sub
sub
dec
addb
add
jo
das
fisttpl
cmp
gs
cmp
sbb
mov
lods
js
outsl
out
fsubrs
sbb
dec
mov
fisttpl
sub
or
xor
push
jmp
loop
jp
mov
enter
sub
dec
push
cmp
sbb
jne
out
ljmp
ss
pop
sbb
jmp
jge
pop
mov
addr16
mov
and
xchg
xchg
enter
stc
js
sbb
fmul
sbb
pop
xlat
cmp
cli
ss
pop
in
jmp
shrb
sbb
bound
push
or
insb
sub
or
idiv
xlat
fsubp
out
and
sbb
mov
mov
mov
clc
push
inc
jmp
pushf
fidivrs
dec
pop
icebp
cmp
pop
xchg
push
pop
enter
dec
call
lock
xlat
xor
shr
or
sbb
dec
sti
pop
mov
daa
clc
sub
mov
lods
test
sub
push
cmpsl
test
clc
jbe
scas
fisubrl
pop
mov
dec
lret
pop
data16
enter
pop
cmp
enter
sub
js
push
stos
fimuls
cmp
pop
sbb
jne
cli
shrl
xsaves
sub
jmp
loope
out
cmc
bound
stos
dec
inc
mov
pop
stos
enter
mov
mov
ret
mov
dec
jp
lahf
sti
xor
insl
or
jecxz
fs
mov
call
data16
sbb
das
pop
lret
lcall
scas
jmp
and
dec
xlat
sub
aaa
test
mov
imul
mov
dec
cmp
ljmp
pop
or
pop
sub
pop
add
pop
enter
dec
mov
andl
sub
or
add
pop
fcomps
jae
movsl
js
pop
cmp
sbb
adc
mov
or
stos
sti
cmp
stc
enter
jp
and
call
jne
sbb
or
push
outsl
sbb
cmp
imull
movsl
stc
fistpl
inc
pop
sub
sbb
orl
jg
insl
enter
cmp
dec
rcrb
or
int
test
sahf
lcall
mov
popa
daa
sbb
insb
jmp
ror
push
das
call
inc
dec
pop
shrb
dec
pop
test
or
sub
cwtl
ljmp
sbb
mov
popa
ljmp
jmp
lret
xor
data16
out
sub
ds
in
dec
lods
pop
jmp
mov
aaa
repz
mov
out
xchg
xchg
sub
ljmp
or
mov
jns
inc
cmp
pop
lods
enter
fstpt
inc
inc
pop
xchg
lret
push
or
jg
push
fisttpl
push
mov
popf
insb
cmc
lcall
sub
imul
jmp
sbb
push
jne
dec
lcall
sbb
cmpb
fimull
push
pop
adc
fistpl
cmp
icebp
jno
pop
cmp
mov
or
sub
push
adc
dec
or
repz
cmp
div
nop
add
sbb
or
xchg
and
jmp
stos
jnp
xchg
or
adc
add
cld
mov
dec
pop
mov
dec
sbb
sbb
pop
in
jnp
jmp
sbb
imul
cwtl
leave
out
or
dec
stos
xchg
or
out
stos
stos
pop
pushf
push
clc
push
jmp
cmp
enter
pop
sbb
jl
ja
insl
sub
pop
daa
mov
sbb
insb
aam
xor
ljmp
fs
sbb
or
cmp
ljmp
dec
shrl
lds
adc
aaa
jae
mov
stos
ljmp
cwtl
lret
xlat
insb
fistps
mov
insl
xchg
mov
cmpsb
cli
int3
idivl
mov
cmp
or
cmc
push
mov
cmp
test
dec
fs
jne
sti
fidivrl
clc
push
sub
ljmp
mov
mov
out
pop
stos
mov
cmp
fsubrl
sbb
fsubs
sub
fwait
jp
ljmp
pop
call
sub
sbb
jg
imull
pop
fcmovnb
dec
stos
xchg
inc
mov
test
out
fnstsw
mov
mov
xor
pop
out
stc
fistpl
negl
or
jns
inc
ljmp
jmp
scas
mov
dec
mov
sub
jns
or
fimuls
andl
or
aam
dec
scas
sub
xlat
iret
sti
cwtl
mov
pop
scas
aas
aam
iret
dec
loop
pop
mov
call
fwait
addr16
or
dec
enter
dec
pop
cmp
inc
and
test
lret
call
push
flds
or
out
dec
push
mov
stos
cmc
insl
test
xchg
sub
sbb
or
push
insb
push
or
ljmp
pop
pop
dec
dec
test
sbb
ss
mov
ljmp
cmc
cli
dec
dec
imul
cmp
mov
cmp
ds
inc
sub
dec
mov
ds
jae
les
fmuls
dec
addr16
mov
cltd
or
mov
cmpsl
call
dec
bound
pop
sbb
jmp
leave
call
pop
dec
pusha
cmp
push
fnstcw
ds
ds
test
push
pop
lahf
mov
xchg
fstpt
sub
enter
jmp
xchg
mov
out
data16
cmpsl
sub
pusha
les
or
gs
sbb
insl
cmpsb
push
imul
mov
pop
fstpt
lods
xor
fs
jmp
dec
push
fcomps
nop
insb
inc
or
out
cmp
jnp
add
sub
sub
leave
ficoml
fsubs
cmp
jmp
xchg
lcall
mov
jne
pop
leave
sbb
jecxz
stos
pop
stos
stos
mov
stc
or
in
mov
inc
cmp
int3
mov
movsb
sarb
sub
pop
xor
add
push
mov
sub
sbb
lret
xlat
sub
adc
inc
sbb
mov
dec
jl
jle
sub
inc
add
pop
fisttpl
dec
jmp
dec
jge
je
cld
mov
clc
call
cmp
les
lea
sbb
push
inc
xchg
xchg
js
cmp
dec
dec
add
cli
ljmp
mov
movsl
and
adc
sub
les
dec
cmpsl
cli
cwtl
imul
ljmp
lahf
jnp
jp
into
pop
insb
daa
pop
dec
fadd
inc
push
ss
mov
inc
dec
arpl
jl
push
or
cmp
adc
xchg
sbb
lahf
cwtl
pop
dec
pop
cmpl
xlat
sub
in
push
vandnps
push
in
jp
arpl
cmpsb
imul
sti
jmp
or
dec
pop
call
lret
test
in
ds
cmp
sub
cs
in
push
sub
cmp
pusha
pop
pop
ljmp
sti
jmp
push
pop
fsubr
add
sbb
mov
xor
sti
scas
inc
fldcw
mov
cmp
stos
bswap
dec
dec
mov
cmp
pusha
ja
enter
sbb
adc
jp
into
lret
aam
jmp
and
or
lcall
mov
pusha
jg
cld
jmp
out
mov
je
xor
ret
mov
pop
sbb
lret
loopne
pop
xchg
cmp
sbb
jecxz
leave
jge
ret
xchg
dec
fisubrs
testl
jmp
bound
test
stc
call
repnz
sub
insb
dec
sub
cmp
test
add
dec
xor
lods
sub
sub
clc
cli
insl
xor
jp
push
jmp
ficomps
jmp
jmp
scas
pusha
test
mov
ds
mov
xlat
stc
sub
fistps
test
popf
js
sub
ds
les
dec
or
mov
jp
jl
sbb
and
dec
stos
sbb
dec
movsb
dec
sub
leave
lret
mul
mov
jb
push
out
js
push
push
mov
mov
mov
stc
lcall
js
push
call
xor
call
sub
xchg
or
enter
pop
shlb
dec
sbb
inc
jp
push
stc
mov
push
sub
sub
pop
mov
outsl
pop
dec
cli
pop
insb
sbb
jecxz
sti
dec
or
insb
test
mov
xor
jl
lea
test
sti
mov
movl
jle
push
mov
mov
jp
sub
push
fidivrl
mov
ljmp
cmp
enter
sub
sub
jl
sub
add
add
ljmp
push
mov
icebp
test
stc
js
mov
dec
rcrl
jmp
push
enter
es
out
data16
dec
cmp
call
fld
dec
lods
test
or
push
sbb
call
sub
jl
push
dec
pop
std
aas
popa
insl
cmp
clc
js
mov
decl
dec
sub
cmp
popa
lods
push
shlb
cmp
xlat
inc
or
push
inc
lret
insb
or
in
or
jmp
test
insl
addr16
or
mov
mov
cmp
addr16
pop
push
and
mov
or
sbb
pop
pushf
dec
or
sub
mov
sub
sub
jb
sbb
pop
xor
cli
sbb
adc
dec
sub
stc
pop
clc
sbb
out
pop
sti
sub
das
xlat
jp
call
insl
sbb
xor
lods
movsl
xlat
mov
leave
cmp
pop
push
sub
aaa
pusha
sbb
push
mov
sub
pop
sub
call
xlat
dec
jae
xor
and
je
xor
jnp
repnz
pushf
or
push
push
repz
in
pop
cmp
dec
sub
cmp
pop
test
arpl
mov
jecxz
fisttpl
mov
add
push
dec
stos
test
pop
daa
sub
jbe
fs
pop
pop
ret
or
dec
ljmp
sub
ret
or
cmpl
pop
cmp
xor
jp
clc
pop
or
push
fmul
flds
sbb
sub
imul
stc
fs
push
out
jmp
sub
pushf
dec
push
mov
rorb
dec
xchg
das
push
test
xchg
sub
xchg
cmp
clc
or
ljmp
or
inc
adc
dec
repz
mov
adc
jl
cwtl
dec
fistpl
sub
enter
push
cmp
mov
shrb
jmp
and
out
mov
xor
xchg
leave
xlat
daa
and
enter
mov
cli
repnz
mov
push
mov
in
xor
lret
push
stc
pop
jp
jecxz
or
cs
sti
loop
dec
sub
dec
testl
test
out
sub
dec
arpl
pop
dec
or
imulb
out
mov
cltd
push
mov
insl
jmp
mov
push
mov
in
and
js
dec
mov
inc
movsb
mov
cwtl
jecxz
pop
imul
cli
data16
stos
xchg
fiaddl
mov
mov
data16
mov
jmp
int
testl
add
insl
mov
sub
js
jp
sub
fnstenv
cmp
insb
cmp
xor
dec
mov
cli
sbb
dec
xlat
call
push
into
add
jb
enter
out
push
xchg
ljmp
fmuls
aad
add
out
push
adc
sbb
test
mov
add
stos
ljmp
push
pop
or
movsl
pop
cmp
or
lea
movl
jne
aas
negl
inc
es
mov
jp
out
mov
movsb
adc
or
ljmp
fiadds
xlat
and
popa
inc
call
imul
enter
nop
lods
jle
sbb
cmp
mov
or
pop
pop
js
or
and
mov
or
mov
rorb
in
fidivrl
sub
ss
jge
cld
int
adc
mov
movl
lret
ds
sbb
mov
push
dec
leave
cs
sub
or
sbb
lods
and
cld
jl
popa
jb
leave
lahf
ljmp
scas
sub
into
push
sub
dec
jl
push
clc
dec
sbb
fisttpl
add
lods
movsl
lret
dec
dec
stos
fimuls
fistpl
in
xor
and
or
push
rolb
arpl
cmp
jmp
pusha
mov
sbb
mov
jle
jl
jecxz
test
in
push
add
mov
mov
pop
in
push
cli
jmp
inc
inc
lds
sub
xor
mov
cmp
or
popa
cmp
or
or
pop
lret
xchg
into
dec
cmp
cwtl
loope
or
sub
call
xbegin
test
mov
aaa
push
cmp
arpl
push
xor
pop
mov
es
cmpl
and
mov
std
sub
cmp
call
lret
mov
xchg
aam
jbe
add
test
mov
or
fwait
icebp
push
or
outsl
daa
jp
sbb
pop
dec
jge
fcmovu
enter
shll
mov
sbb
dec
sbb
inc
push
dec
or
xor
mov
sbb
js
add
xchg
sub
dec
fisubrs
ja
pop
imul
mov
or
jge
jle
sbb
decb
negl
mov
jmp
jmp
pop
cmp
push
pop
pop
insb
xchg
mov
lcall
in
cmp
ficompl
fs
fdivrs
push
cmp
stos
daa
inc
dec
dec
sbb
xchg
mov
data16
sub
dec
sbb
adc
dec
dec
imul
in
push
xor
pop
xor
cmp
inc
dec
inc
xor
dec
push
xchg
movsl
sub
mov
or
testl
cwtl
or
mov
adc
shrl
sub
stos
push
fs
pusha
dec
or
cmp
sbb
loope
cmp
and
ret
aas
sub
fcmovnbe
adc
push
or
dec
and
iret
dec
sbb
dec
pop
imul
sub
fdivr
daa
dec
or
sbb
pop
gs
cmp
push
jp
pop
outsb
sub
ljmp
lcall
cmp
inc
dec
sub
sub
leave
mov
test
jmp
dec
mov
sub
aam
or
pop
fisttpl
loop
mov
sub
fistpl
add
jmp
dec
push
push
enter
popa
or
jmp
pusha
mov
mov
fs
jp
fs
pop
jecxz
jl
or
ja
movsb
push
enter
dec
insb
insb
cmp
fistpl
xchg
cs
pop
mov
pop
dec
sbb
sbb
jmp
movsb
push
lret
sub
xchg
jl
test
jle
sub
sub
xchg
inc
out
inc
push
push
nop
sbb
outsl
loop
stc
enter
jg
dec
push
or
fisubrl
out
cmpb
pusha
arpl
sti
dec
push
jno
and
movsl
cmp
mov
scas
insb
mov
jl
lods
pop
bound
mov
jmp
cmp
call
sbb
sbb
insl
shrb
push
push
leave
xchg
aad
sub
into
mov
lea
or
dec
cmp
pop
adc
sti
lcall
cli
ljmp
mov
lahf
mov
insb
lret
sub
imul
mov
jg
mov
out
pop
inc
mov
test
insb
pop
jmp
sub
pop
pop
add
loopne
dec
mov
lret
cli
movsl
ljmp
push
sbb
arpl
dec
sub
dec
stc
sub
lret
add
cmp
sbb
cmp
mov
and
jp
in
sub
hlt
pop
jmp
clc
dec
leave
ds
movsl
dec
insb
clts
pop
sbb
or
xor
add
push
cmp
ret
mov
dec
sbb
sub
push
scas
cmp
mov
idivb
imul
pop
test
sbb
fldenv
mov
movsb
stos
mov
jmp
loopne
leave
sbb
push
lods
push
mov
push
mov
mov
popa
sub
dec
or
sub
mov
pop
push
or
js
dec
inc
ret
jbe
push
sarb
fdivr
test
sbb
adc
adc
insl
pop
sub
xlat
cwtl
pop
call
or
insl
data16
mov
enter
ljmp
push
sub
cli
inc
push
imul
mov
cmp
iret
dec
mov
add
jno
add
out
xchg
in
pop
jl
sbb
add
ljmp
push
dec
sub
sbb
dec
mov
dec
fincstp
lea
das
mov
xor
xlat
fmul
mov
cmp
pop
out
pop
sbbl
pop
sub
dec
fsubs
jecxz
xor
cmp
loope
cmp
pop
cs
jmp
std
cmp
push
mov
mov
sub
fs
push
and
sub
adc
jle
mov
mov
jle
dec
orl
inc
dec
sbb
xor
ljmp
lret
ds
pop
fsts
sbb
leave
pop
and
stos
mov
jmp
call
mov
mov
xor
out
sbb
ss
or
sub
sub
pusha
dec
scas
in
sub
cmp
ret
dec
cwtl
jae
jmp
pop
push
inc
mov
jp
lea
add
lret
sbb
mov
ret
pushf
out
mov
jbe
ror
pop
xchg
sub
mov
mov
ljmp
imul
enter
sbb
lods
pop
push
jge
nop
pop
sbb
dec
pop
inc
movsb
inc
ds
jmp
jl
mul
sub
clc
movsl
movsb
sub
push
mov
into
or
pop
cli
mov
lcall
stos
pop
jmp
mov
cmp
loopne
jl
lret
in
lret
push
insb
sub
lcall
cmp
fimull
or
fsubrs
mov
insb
xor
adcb
stos
jg
sub
and
mov
pop
mov
mov
jp
pop
adc
mov
xlat
and
mov
rcr
mov
pop
lods
enter
scas
or
xchg
movsl
mov
inc
loop
out
or
sub
mov
sti
jmp
out
jp
mov
mov
adc
cmp
sub
inc
cmp
cwtl
clc
fistl
jmp
jno
push
int
mov
pop
cli
ss
ret
push
jmp
cmp
movsl
push
push
sbb
pop
dec
jmp
inc
add
cmp
call
mov
sbb
ljmp
sbb
or
dec
sbb
cmp
cmpsl
jno
call
sbb
es
mov
nop
mov
scas
push
int
mov
sti
fldt
sbb
addb
cmp
roll
jecxz
jl
stos
sub
ljmp
sarl
cmp
add
sub
jmp
dec
leave
fisubrl
xchg
test
fisubl
clc
jmp
push
out
sbb
xchg
inc
dec
jno
mov
mov
stos
rcrb
js
xchg
imul
jecxz
test
dec
sbb
enter
leave
stos
in
or
fistps
cwtl
ljmp
sbb
sub
jmp
mov
jp
and
sbb
xlat
mov
pop
out
fs
sub
sub
jmp
push
fiaddl
dec
pop
mov
xor
lods
mov
mov
cmp
pop
lods
js
jl
mov
insb
jp
or
out
push
jp
dec
jmp
mov
bound
jae
imul
add
jp
jo
stc
or
push
sub
dec
pop
gs
mov
sti
fildl
inc
pop
or
pop
sbb
jmp
xchg
sti
inc
mov
cmp
cmp
push
mov
lahf
or
movsb
cli
mov
inc
add
jns
mov
dec
or
inc
adc
pop
dec
nop
ja
cmpsb
cltd
cmp
cmp
jle
cmpl
or
dec
jmp
mov
and
scas
lret
lds
sbb
fisubrl
repz
pop
push
and
xchg
iret
mov
test
ljmp
mov
push
lcall
jl
ja
xor
sbb
pop
pop
adc
dec
imul
enter
outsl
pop
dec
stos
or
lahf
loop
mov
sbb
and
jl
dec
cmpsl
xlat
pop
lea
cmc
sub
insb
mov
ja
mov
out
ds
sbb
lods
cwtl
xchg
bound
ds
pop
cli
ret
pop
and
lcall
ja
dec
mov
jecxz
ret
or
jl
mov
insb
sti
jo
or
lea
mov
xchg
jl
jl
sbb
pop
mov
dec
xor
inc
dec
out
pop
imul
jl
je
pusha
sub
sbb
lea
addr16
pop
fistpl
ficomps
sub
pusha
jp
test
test
mov
mov
daa
cmp
fsubr
aaa
ljmp
dec
insb
xlat
pop
cli
arpl
mov
cmp
pop
jl
jg
or
xchg
lret
push
xor
jmp
jmp
js
push
clc
pop
dec
out
insb
dec
jmp
leave
push
push
js
inc
mov
mov
test
sbb
push
mov
or
mov
pop
scas
mov
mov
push
pop
sub
popf
sti
sub
mov
push
insb
std
sub
sub
lods
ds
mov
outsl
xlat
cmp
dec
or
sbb
xchg
arpl
stos
or
sub
imul
iret
pop
push
lock
stc
or
and
adc
sbb
leave
xchg
fadds
mov
rorb
dec
push
insb
insl
daa
or
popa
sbb
cmp
out
push
or
jg
mov
jg
cmp
mov
cmp
in
cltd
ds
sbb
jl
das
dec
sti
push
ljmp
sub
fidivrl
pop
scas
sub
pop
lcall
sbb
cmp
aas
sub
cli
cmp
dec
pop
movsb
pop
inc
cmp
ljmp
sub
aaa
cvtps2pd
stos
out
adc
mov
daa
into
dec
jmp
sbb
ds
push
or
notl
mov
stc
sub
push
ss
inc
or
sbb
out
dec
stos
pop
or
les
call
sbb
mov
add
dec
ljmp
cwtl
push
mov
dec
aaa
sub
cmp
dec
cmp
cmp
testl
inc
jbe
jg
mov
fldcw
sub
sub
adc
aaa
dec
dec
sbb
movsl
out
clc
pop
aaa
call
ficompl
jmp
loope
in
adc
jmp
xchg
fildll
lret
push
fs
dec
jb
dec
push
call
mov
push
sub
fimull
lret
sbb
mull
dec
inc
cmp
pop
jp
insb
pop
sbb
cmp
jmp
out
xlat
enter
sahf
jmp
cmc
out
push
inc
dec
cwtl
test
mov
sbb
lea
jmp
fidivs
les
push
sti
or
pop
lock
shr
stos
lcall
add
jle
sbb
or
inc
cmp
leave
jmp
sub
sub
mov
ds
lock
dec
cli
rcrb
lock
sub
cmpsl
in
cmp
adc
jmp
pop
xor
iret
jns
cwtl
push
sbbb
and
jb
lcall
scas
and
push
and
dec
pusha
cmp
sbb
or
dec
sbb
in
pop
lds
test
sub
dec
dec
lret
bound
test
stos
jnp
lods
lcall
mov
inc
fisttps
cmp
and
or
and
mov
dec
insl
insb
cli
or
std
pop
push
dec
jl
push
mov
jecxz
or
pop
add
pop
pop
or
fxch
call
jl
aaa
adc
xchg
test
das
dec
push
fcom
lods
sbb
or
test
dec
insb
lcall
jp
pushf
dec
dec
fsub
divl
or
out
pop
jb
dec
mov
arpl
sbb
inc
inc
cmpsb
sbb
mov
dec
ret
sub
iret
adc
addr16
pop
mov
and
pop
sbb
dec
jp
inc
addr16
movsl
or
pop
xchg
mov
push
mov
daa
mov
sub
sub
inc
mov
dec
push
mov
xor
les
stos
inc
mov
push
mov
pushf
jl
out
mov
out
sti
pushf
sub
xchg
add
stos
jbe
mov
fisttpl
fmull
mov
cmp
mov
mov
push
loop
out
and
stos
push
push
mov
sub
lcall
pop
cmp
movsl
inc
subl
inc
cmpsb
lods
addr16
or
dec
mov
xchg
fcomp
jmp
ljmp
mov
fwait
lea
adc
loopne
fs
fs
fs
inc
push
lahf
imul
das
negl
dec
dec
clc
inc
cmpsb
in
sub
mov
cmp
mov
test
mov
ljmp
fisttps
jmp
fs
jp
lret
xor
sbb
or
jmp
sbb
sbb
jp
stc
or
sbb
and
imul
sub
lret
cmp
loope
pop
add
clc
fadds
or
cs
jnp
ds
sbb
sahf
add
push
fsubr
popa
sbb
dec
pop
mov
cmp
mov
ds
leave
shrb
inc
imul
dec
sub
fldcw
push
scas
mov
xchg
mov
test
inc
pushf
stos
dec
mov
jp
mov
cs
lret
out
or
stos
or
orl
sti
movsl
pop
test
stos
lret
mov
xchg
pop
mov
or
adc
mov
mov
in
mov
sub
enter
dec
jmp
aam
divb
xchg
and
pop
jbe
inc
mov
pop
mov
push
mov
out
mov
pop
mov
fmuls
pushf
mov
inc
dec
lods
or
sub
xchg
out
inc
sbb
mov
sarl
es
jl
dec
sbb
mov
sub
lock
inc
cmp
and
dec
fidivrs
clc
push
popa
sub
dec
xchg
ret
sub
jp
jmp
cmp
stos
imul
clc
enter
pop
pop
in
inc
xchg
cmp
lret
lret
mov
xor
dec
inc
push
in
fwait
leave
daa
rcll
pop
pop
inc
out
int
enter
sub
into
dec
stos
jg
fisubrl
push
pop
incl
jo
push
jge
sbb
fldt
cs
loop
sub
push
or
sahf
sub
push
and
pushf
sbb
sti
mov
mov
sub
or
or
ret
dec
or
sub
scas
aam
lcall
sbb
mov
or
pop
lret
pop
jbe
dec
subb
sbb
sub
dec
jo
fcomps
ljmp
sbb
call
cmpb
jae
cmp
fcmovu
fidivrs
jg
dec
dec
pop
imul
inc
mov
sub
dec
push
jp
pusha
pop
sub
sbb
sbb
inc
js
pusha
testl
data16
insb
sbb
cwtl
inc
stc
push
mov
arpl
jp
notl
sub
push
push
imul
sub
push
push
cmp
push
imul
jl
orb
pop
aad
dec
daa
lret
addr16
mov
das
pop
pop
out
fcompl
jp
jmp
pop
dec
or
lret
leave
aaa
inc
sub
aad
stos
or
shll
in
mov
jmp
and
push
push
jno
inc
aam
xchg
bound
sets
neg
cs
mov
sub
outsl
sbb
dec
pop
pop
sbb
fcomps
pop
sarb
xlat
or
mov
repnz
dec
dec
jmp
leave
jp
js
jle
cwtl
mov
sub
lcall
sub
xchg
pop
cmpsb
cmp
sub
xchg
sub
jne
lds
insb
fcomp
call
or
or
jp
or
sbb
stos
cmp
sti
mov
in
shrl
xchg
dec
sbb
outsl
nop
xlat
or
and
cmpb
push
insb
sub
mov
or
fimull
sub
push
insl
aam
jp
fprem
sti
push
sub
sbbl
push
xlat
loopne
xlat
pop
dec
cmp
jl
mov
inc
stos
js
arpl
imul
sbb
in
imul
dec
or
inc
pop
mov
jo
xlat
adc
xchg
cli
sarl
dec
std
cmp
stos
int3
or
leave
lcall
push
cmpl
sbb
or
or
sub
pop
rcrb
sbb
mov
cli
push
ljmp
cli
sub
in
jmp
jnp
lcall
sub
lds
xor
cli
sti
ljmp
dec
fildll
fxam
and
cmp
cmp
jmp
popf
pop
jp
pop
out
and
xchg
push
mov
lcall
xlat
push
mov
movsl
pop
inc
movsl
mov
sti
jb
cmc
xor
mov
pop
push
fsubrs
mov
pop
cmpb
jp
cli
arpl
mov
dec
sbb
mov
imul
repnz
sub
pop
ljmp
sub
pop
xorb
cmp
xor
pushl
pop
mov
jo
outsl
push
cmp
insb
das
lret
js
rclb
jl
cmp
insl
fs
push
into
fldt
sbb
pop
or
or
insl
mov
sti
sub
out
scas
or
aam
scas
inc
cmp
xchg
daa
jle
pop
cvtps2pd
leave
xor
or
popa
jle
pop
jno
pop
xchg
stos
add
pop
mov
outsb
ret
sbb
mov
cmpsl
push
xor
xchg
out
jle
jg
bound
ljmp
or
push
push
xor
jle
dec
cmp
out
or
std
js
jns
cs
idivb
insl
inc
lea
test
dec
movsl
or
add
or
mov
in
or
cmp
mov
mov
ljmp
mov
pop
xlat
ret
in
push
dec
mov
xchg
or
sbb
inc
js
mov
test
jo
movsl
icebp
scas
push
jae
leave
outsl
fldpi
cwtl
sbb
out
negl
xchg
sub
or
sar
sbb
jecxz
cmpsl
mov
sub
sub
push
outsl
sub
dec
pop
inc
sbb
jecxz
movsl
fmul
dec
sub
sub
insb
mov
mov
cmp
add
xor
mov
into
arpl
or
std
stos
rcr
or
sbb
xor
push
pop
mov
cmp
sbb
jmp
das
sub
mov
insb
subb
call
push
jmp
fcomi
adc
aaa
pop
push
ftst
cmp
cmp
movl
push
mov
pop
icebp
cli
jmp
loop
test
jp
or
xor
sub
sub
rcrb
lret
fs
ret
outsl
outsl
sbb
dec
jmp
test
dec
pop
sbb
fnstcw
je
jmp
or
cmp
mov
xchg
dec
lret
jmp
daa
lds
cs
or
call
rorb
fs
jb
mov
into
cld
leave
mov
xchg
gs
push
mov
insl
in
leave
sub
pop
cmp
adc
test
mov
pop
push
or
js
dec
cwtl
sbb
imul
pop
in
in
std
jl
push
and
sbbl
jp
loopne
xchg
push
jae
iret
dec
push
xchg
dec
mov
or
push
cmp
and
add
cmp
sbb
jmp
mov
mov
mov
scas
ret
stos
idiv
movsl
mov
or
decb
mov
fmuls
xlat
sub
mov
push
lods
dec
sub
ss
pop
in
mov
inc
xchg
mull
xor
jle
icebp
or
loope
cmp
jmp
jle
repnz
push
fistpl
les
lcall
pop
sub
jl
lods
adc
sarl
sbb
stos
cmp
jge
jmp
pop
sbb
sub
add
sbb
xor
data16
push
mov
dec
data16
dec
xlat
leavew
fstpt
movsb
cwtl
stc
dec
ljmp
insb
pop
jg
or
jne
mov
ja
mov
data16
jbe
sub
or
jne
or
mov
sub
movsl
andb
arpl
enter
dec
bound
dec
jmp
jge
sbbb
xor
loope
into
push
fmuls
xor
sub
jmp
jnp
sub
enter
sub
jl
sti
sbb
mov
pop
or
mov
sbb
imul
jmp
push
fisttpl
jg
xlat
cmp
data16
lret
or
dec
adc
dec
pop
mov
pop
push
outsb
shlb
push
or
outsl
xor
mov
jmp
gs
std
sbb
sub
pop
repnz
mov
fprem
fucomi
jmp
stos
sti
xor
dec
mov
pop
insb
push
cmp
sbb
mov
in
sub
fmuls
rcrl
jb
sub
insb
dec
imul
xlat
fcomps
ret
aad
lock
fisttpl
leave
or
fisttps
sub
lock
push
and
xorb
sbb
enter
dec
mov
xor
movsl
das
data16
or
or
dec
push
pop
iret
jmp
divb
cs
jne
pop
movsb
pop
mov
and
sbb
pop
sahf
test
imul
dec
sbb
sub
ja
movsb
cmp
fstps
notl
and
inc
inc
clc
arpl
or
out
dec
mov
stos
mov
lret
jnp
loop
fs
cmp
sub
sbb
sarl
sub
mov
pop
jmp
or
mov
ret
pop
lcall
idivl
stc
jp
repnz
adc
gs
pop
or
sbb
sbb
lret
cmc
out
sub
push
xchg
pop
mov
cmp
imul
push
xor
pop
and
test
mov
ljmp
pop
fldcw
fimull
sub
mov
leave
test
sub
mov
adc
or
adc
cmp
mov
jmp
or
movsl
dec
movl
fwait
lods
lret
ljmp
or
push
mov
imul
daa
inc
aaa
inc
cmp
xchg
leave
aaa
pop
or
sbb
jbe
sub
push
lret
mov
sbb
fwait
jmp
pop
jl
dec
lahf
aaa
and
sub
cmp
jp
pop
fnstsw
push
cmpl
or
arpl
in
dec
mov
sub
cltd
mov
or
add
stc
insb
pop
pusha
fs
ret
inc
ljmp
xor
jp
aam
inc
mov
pop
jecxz
cmp
push
fs
imul
pop
scas
inc
xor
add
sub
sub
inc
jl
mov
les
xor
sub
mov
cs
xor
mov
ficoml
out
pop
jmp
out
cmp
xorl
mov
rcrb
sub
inc
dec
sbb
ljmp
insb
fmul
movsl
xor
ljmp
sbb
fiadds
pop
add
addr16
pop
or
fwait
dec
lcall
push
aas
xchg
sti
fisubrl
push
iret
sbb
sub
and
inc
jl
subl
stc
loopne
sub
pop
sub
test
dec
cmp
sbb
mov
cmc
mov
lahf
addr16
clc
lcall
jmp
jmp
dec
aad
dec
push
idiv
fidivrl
inc
popa
mov
mov
movsb
insl
in
mov
clc
and
pop
dec
ret
daa
mov
jno
es
pop
int
test
dec
stc
fisubl
or
or
das
inc
sub
cmpsb
or
or
js
adc
sarl
sti
cwtl
ret
stos
fmuls
sub
enter
pop
das
std
sbb
cli
mov
sbb
or
or
fldcw
stos
push
xchg
dec
dec
lret
fstps
push
mov
es
adc
fiadds
cwtl
jmp
test
mov
scas
cmp
fcomps
in
or
pop
fnstcw
cmp
cwtl
dec
lods
mov
ds
daa
sti
lret
inc
ljmp
movsl
into
cmp
inc
cmp
sub
jecxz
mov
or
cmp
jnp
cmp
mov
or
fsubrs
mov
pop
push
stos
loopne
lret
cmp
mov
sbb
dec
lock
int3
xchg
fcmovb
mov
pop
pop
outsl
fsubs
stos
stc
cmp
sbb
sbb
or
insb
mov
and
std
sub
jg
int
dec
ret
xor
lahf
pop
lds
jmp
mov
leave
pop
jae
sub
sbb
pop
ljmp
pop
lcall
sbb
dec
sub
sub
sub
xor
dec
add
sub
sbb
mov
ds
push
inc
jmp
jl
lods
fcmovne
loope
ds
inc
pop
mov
dec
push
sub
ja
out
movsl
pushf
dec
test
pop
outsl
sbb
dec
dec
jp
stos
testl
jnp
mov
jne
cmc
stos
fadds
push
lock
sbb
xchg
pushf
jmp
push
push
sub
mov
cmp
fiadds
addr16
out
sbb
sbb
xorl
lahf
pushf
mov
test
push
mov
pushf
lahf
xchg
out
mov
sub
adc
data16
mov
shll
xchg
cs
iret
sub
frstor
pop
lret
out
lock
cmp
imulb
mov
mov
outsb
sbb
mov
mov
movsl
adc
cwtl
imul
fidivrs
sub
js
addr16
push
sub
jge
cmp
xchg
lcall
insl
or
fnstenv
or
insb
sti
mov
out
xor
or
aam
mov
fs
dec
mov
inc
les
and
pop
mov
sbb
jp
enter
out
cmpb
movsl
lods
sub
clc
sbb
cmpsb
idivl
sbb
cmp
scas
fisubrl
jbe
jecxz
add
std
sbb
mov
cmp
sub
fisubrl
das
mov
jb
pop
popa
lcall
mov
cli
scas
xchg
pop
dec
xor
adc
push
or
pop
lods
adc
sub
or
bound
xchg
aaa
loope
jns
in
mov
pop
testb
test
jle
jmp
insb
cli
cmc
int
sbb
inc
mov
dec
cwtl
mov
lea
sub
or
push
sub
xchg
fstpt
mov
sub
enter
sub
ljmp
pop
in
inc
dec
or
cmp
mov
mov
cmp
jo
inc
dec
or
scas
in
test
jbe
sbb
scas
mov
or
lods
in
inc
popf
outsb
rep
cmp
lret
adc
cmovp
or
je
cmp
pop
bound
ljmp
mov
cltd
and
addr16
sbb
bound
pusha
sbb
jp
sbb
daa
ljmp
pop
pop
jns
shrb
fldcw
push
cwtl
cmp
call
insb
mov
cmp
sbb
pop
xchg
inc
xchg
pop
daa
lock
mov
xor
cmpsl
test
js
pop
dec
in
cmp
sarb
mov
sub
pop
sbb
push
hlt
cmp
arpl
cmp
sub
jmp
push
pop
mov
fnstsw
enter
js
or
dec
out
push
js
les
mov
fsts
sbb
or
mov
xchg
cltd
out
test
fsts
push
loop
pop
insb
or
push
cmp
cmp
sbb
out
xchg
and
sub
jae
jp
das
pop
dec
enter
fistpll
mov
or
movsl
out
jb
mov
popf
dec
cli
dec
fcompp
cmpsl
lock
cmp
push
ljmp
pop
cmp
dec
pop
jp
mov
in
dec
push
mov
fs
or
jg
mov
xor
inc
jmp
enter
cmp
sbb
leave
or
cmp
jp
sub
out
sbb
lea
jmp
pop
push
or
sbb
pop
cli
imul
lcall
mov
mov
xchg
js
leave
pop
xchg
cmp
jl
lret
test
pop
lcall
inc
mov
push
fisttpl
sbb
iret
insl
sbb
mov
xchg
xchg
mov
jg
hlt
or
test
or
xlat
out
negl
insl
enter
jmp
push
repz
popf
dec
es
mov
sbb
sub
cmp
jmp
fimull
push
movsl
out
pop
ficoml
arpl
test
scas
pop
mov
and
out
jmp
sbb
ret
adc
or
or
negl
js
sbb
loope
fdivrs
mov
in
sti
addr16
and
adc
cmp
mov
push
mov
cwtl
inc
mov
into
lret
inc
data16
or
nop
mov
test
ret
in
jg
sub
and
cmp
or
call
fiaddl
scas
hlt
sub
fdivrl
mov
push
xchg
insl
sahf
cmp
jge
lret
lret
xchg
mov
and
insb
subps
cli
or
ja
and
jo
fidivrs
lahf
dec
sub
leave
push
into
cwtl
mov
fadds
cwtl
int
dec
jp
mov
or
int3
sbbb
test
sbb
add
pusha
dec
mov
xlat
dec
cmp
orb
sub
sbb
inc
insl
sbbl
jp
ljmp
mov
and
pop
insb
out
add
push
jne
shl
push
outsb
xchg
movsl
cmp
and
add
in
roll
dec
repz
out
insb
jnp
insb
enter
sub
cmp
and
push
lcall
push
mov
mov
jmp
movsb
lcall
lcall
jp
and
out
dec
mull
push
fdiv
dec
in
and
testl
aam
and
adc
xlat
call
rcrb
es
jbe
pop
dec
pop
dec
jge
fimull
xchg
sbb
jmp
mov
rorb
mov
gs
mov
and
call
inc
or
pop
xchg
and
xlat
cmpsb
lret
movsl
push
add
aam
and
and
pop
pop
dec
cmp
sub
mov
fs
outsl
mov
call
push
clc
loop
xchg
or
fstpt
jb
push
push
sbb
mov
mov
push
out
ficompl
jmp
cmp
dec
stc
sub
mov
pop
insb
test
call
fcompl
inc
clc
mov
sub
push
pop
cmp
movsl
push
dec
les
sub
pop
dec
mov
arpl
fmuls
dec
sub
jp
sub
mov
fdiv
out
push
ds
loope
mov
idivl
dec
lret
push
cmp
ret
sti
fsubs
pop
lea
sbb
mov
out
sub
sub
fnstcw
or
push
push
test
sub
jo
xchg
jmp
pop
push
stc
cmp
cltd
imul
pop
pop
sub
push
push
adc
addl
movsl
stos
lret
lods
push
sbb
sahf
sbbl
cs
xlat
sbb
fidivrl
sti
mov
sub
test
insb
xchg
adc
pop
sbb
push
add
dec
fsubrs
mov
out
cmp
mov
js
push
loopne
enter
adc
or
scas
outsl
sbb
dec
mov
sub
sub
pop
mov
mov
daa
xchg
sub
cmp
bound
pop
out
jl
cmp
mulb
cmp
or
pop
movsl
sub
test
sub
or
cmp
loopne
xlat
push
jbe
jmp
clc
or
test
arpl
mov
dec
sbb
call
dec
sti
ficoms
add
imul
inc
dec
mov
aad
mov
push
fisubrl
mov
mov
add
inc
out
sbb
or
or
or
and
pop
fistpll
stc
jo
jnp
add
cmp
cmp
out
mov
js
ja
loop
test
push
stc
push
and
or
mov
add
mov
outsb
cmpsl
sbb
pop
shl
ja
or
aaa
pop
cmp
or
sub
xlat
jae
cmpsb
mov
cmp
jmp
lcall
aas
pop
call
jae
dec
cmpsb
pop
out
subb
daa
dec
jle
mov
stos
jle
enter
sbb
sahf
outsb
pop
add
enter
popf
fucomi
sbb
mov
sub
testl
sub
fldcw
or
mov
sbb
dec
test
out
aas
cmp
push
sbb
add
pop
addb
ljmp
jp
xor
dec
dec
xchg
out
xchg
pop
lods
popa
push
sbb
pop
sub
or
jnp
sbb
pop
jmp
fistpl
call
cmp
mov
bound
push
jge
test
or
lahf
dec
dec
in
add
clc
insb
in
push
xchg
pop
add
push
pop
jnp
or
or
jnp
les
cltd
imul
leave
testl
sub
pop
sbb
call
sbb
ds
jg
cmp
fnstcw
sub
movhlps
sbb
xchg
sub
or
ljmp
sub
fxch
sbb
fmuls
add
ficoml
dec
clc
xchg
fs
mov
jae
repz
sti
add
arpl
movaps
sbb
xor
or
ds
mov
cmp
or
mov
cmp
xor
outsl
dec
jmp
xchg
push
or
or
movsb
lret
scas
cmp
out
or
dec
call
sub
mov
dec
xlat
pop
jb
dec
outsl
mov
fstps
xlat
sub
jmp
mov
rcrb
and
push
mov
cmp
cmp
jle
pop
repz
imul
or
jl
jle
sbb
pop
pop
or
sbb
fisubrl
stos
sbb
xor
jle
jmp
adc
jl
dec
addr16
or
sub
sti
leave
jmp
in
arpl
pop
cmp
sbb
bound
and
stc
sti
sbb
push
mov
subb
sub
xorb
or
or
cmp
jl
cmp
ljmp
pop
pop
mov
dec
xchg
cmp
js
sbb
or
inc
pop
push
xor
cbtw
and
dec
push
dec
or
xlat
sarl
sub
push
cwtl
pusha
pop
mov
mov
jns
push
scas
push
js
mov
cmpsb
pop
jp
sub
addr16
or
ljmp
push
nop
imul
cmp
lods
xchg
incl
fisubrs
push
push
sbb
sbb
or
lcall
fsubl
sub
sub
dec
or
movsl
push
add
repnz
out
mov
negb
pop
push
sub
paddsw
sub
fprem
pop
ljmp
sub
cmp
pop
int3
mov
clc
stos
das
sbb
inc
outsl
jmp
xlat
sub
cmp
xchg
sbb
inc
push
ret
adc
leave
mov
mul
sub
xchg
jne
inc
dec
in
ja
cmp
lret
mov
lret
sbb
push
dec
clc
sub
fstpt
insb
jbe
and
test
dec
dec
jp
jl
enter
jbe
mov
int3
pop
push
inc
mov
insl
lods
sbb
sbb
push
stos
mov
addr16
adc
xchg
jnp
les
pop
sbb
shrb
mov
mov
mov
dec
xor
daa
pop
daa
mov
mov
dec
sahf
jo
neg
inc
insb
shr
adc
insl
mov
fldenv
sbb
or
push
inc
cmp
cmp
pop
cmp
dec
sub
jne
out
fdivs
ret
fisttpll
or
add
insb
popa
sub
fstps
and
lods
cltd
sub
xchg
dec
arpl
pop
xchg
mov
sbb
test
xchg
loope
jmp
in
cwtl
clc
nop
jae
xor
out
pusha
sbb
sbb
out
dec
xchg
lods
mov
and
loope
jmp
test
cmp
insb
fcmovnb
sub
jbe
test
movsb
inc
or
je
or
dec
mov
pop
sti
pop
cmp
pop
outsl
imul
ljmp
sti
xchg
fisubrs
stc
repnz
jecxz
or
in
lods
lret
ds
into
adc
loopne
xchg
pop
adc
insb
out
imul
xor
push
out
xor
fdivs
lret
cmp
push
out
pushf
and
push
pop
jg
das
mov
sub
dec
or
cmp
sub
pop
hlt
fisttpl
mov
lcall
pop
leave
push
daa
mov
dec
mov
dec
fdivrs
dec
js
cmp
xor
xor
push
dec
sbb
xor
cwtl
popf
test
sub
cmp
mov
sub
ljmp
ret
jo
add
testl
dec
leave
or
dec
push
insl
jl
lcall
ljmp
dec
cmpsb
cmpsl
cwtl
pop
pop
xchg
push
sbb
jp
mov
into
pop
xchg
dec
mov
sub
jecxz
std
stos
jp
ds
xchg
lret
iret
leave
fcom
sub
testl
pop
insb
test
xchg
pop
add
movsl
adc
lods
inc
loopne
jmp
jp
mov
cvtdq2ps
pop
jl
dec
push
movsl
aas
add
ret
xor
dec
cli
insl
pop
stos
add
loopne
xlat
push
xchg
sub
cmp
cmp
movsl
cmpsb
fildl
popf
int3
stos
sbb
insb
in
nop
movsb
movsl
xor
mov
mov
div
dec
hlt
or
pusha
into
loopne
jecxz
int
push
test
xor
movsb
xor
call
fnstcw
iret
cli
out
cli
mov
jo
dec
or
xlat
jmp
jno
cmp
jl
pop
jp
or
dec
pop
inc
insl
jbe
bound
jmp
mov
clc
inc
daa
mov
daa
dec
push
ljmp
cmp
mov
dec
stos
push
cli
mov
jp
aad
pop
out
mov
sbb
mov
insb
js,pt
pop
jne
movsb
sbb
mov
jle
stc
cs
js
mov
cwtl
pop
subl
jmp
icebp
fimuls
sub
mov
stos
stos
lret
push
jnp
cmp
dec
cmp
inc
add
movsl
aas
cmp
pop
sbb
jne
push
sub
dec
sub
sti
push
clc
xor
jbe
pop
or
negb
xlat
sti
lret
test
sahf
jge
rorb
dec
jle
mov
call
jp
dec
sbb
inc
mov
fistpll
ja
sbb
sub
pusha
sbb
lcall
push
fisttpll
dec
loope
pop
push
jecxz
in
fstpl
cli
enter
push
out
and
xchg
jle
pop
sub
rcrl
cmp
dec
movsl
mov
mov
mov
dec
and
lods
popa
fwait
test
clc
dec
mov
ljmp
add
stc
div
popa
xlat
sbb
jne
cli
dec
sub
sub
or
aaa
cmp
or
jp
inc
add
and
aam
xor
icebp
jmp
int3
in
and
cmc
inc
mov
rorb
fidivs
fidivrl
jle
stc
loope
enter
sahf
insb
call
mov
inc
pop
sbb
inc
mov
sbb
daa
pop
mov
or
movsl
cmp
test
insl
dec
lret
mov
cli
jmp
dec
jp
arpl
dec
or
in
fs
clc
fidivrl
loop
dec
cmpsb
push
cvtdq2ps
sbb
sbb
cmp
pop
pop
sub
dec
ljmp
and
pop
mov
sbb
jb
icebp
lods
mov
daa
cmp
jl
inc
mov
push
mov
jnp
cmp
or
out
ljmp
insb
pop
cmp
or
gs
outsb
fimull
sub
movsl
loope
cmp
scas
sub
mov
pop
sbb
imul
in
das
pop
jmp
dec
jl
lcall
loop
pop
or
jp
jno
movsl
in
push
or
jno
inc
push
mov
dec
or
call
jp
or
dec
mov
push
ljmp
std
mov
sti
imulb
fiadds
in
or
sub
pop
jle
and
stos
imul
test
or
jl
dec
jg
sahf
sub
loopne
cmp
adc
xor
jmp
out
xchg
lods
or
sahf
sub
leave
inc
outsl
stos
pop
sti
out
mov
push
push
cmp
cli
xor
js
subl
ljmp
mov
stc
sbb
mov
jl
sub
push
mov
pop
movsl
pop
push
jmp
stos
sbb
cmc
enter
adc
js
fisubrl
cmp
jb
xchg
pop
lcall
shrl
gs
adc
pop
repz
cwtl
cmp
xchg
mov
stos
jmp
mov
or
imul
sbb
notl
pop
ret
test
movl
hlt
outsl
jp
lret
push
insb
jg
mov
orl
cmpb
lret
mov
cli
pop
dec
dec
fnstsw
adc
stos
and
sub
int3
test
jp
icebp
fdivl
insb
xor
insb
js
xchg
insl
inc
sub
cmp
rorl
mov
cmp
dec
pop
fmuls
arpl
pop
push
cwtl
scas
cs
jne
pusha
ds
mov
leave
xchg
inc
popa
fs
inc
add
das
sub
pop
cmp
fs
dec
jge
clc
sbb
sahf
stos
jmp
ficompl
add
mov
lret
jle
insb
or
adc
add
jmp
sbb
ljmp
addr16
mov
pop
call
dec
sub
dec
sub
fisttps
mov
js
mov
cmp
inc
or
pop
insb
lret
aad
adc
fmuls
pop
dec
xchg
mov
mov
fstps
pop
ret
or
dec
clc
stc
out
or
notl
fistpl
repnz
insb
jmp
pushf
dec
cmp
orl
js
adc
push
arpl
lcall
faddp
clc
dec
inc
scas
push
xor
notb
fisubrl
addr16
call
std
outsl
xor
jns
mov
or
lods
xor
pop
das
in
ljmp
sti
leave
ljmp
in
sbb
jecxz
sbb
in
jnp
add
xchg
pop
and
clc
test
mov
repz
pop
shrb
ret
mov
xchg
ds
daa
lock
gs
mov
pop
out
dec
fisttpl
push
or
cmp
or
jmp
stc
enter
mov
fistpl
and
enter
push
dec
dec
push
mov
or
insb
insb
add
cbtw
in
pop
sbb
xorb
pop
and
xor
dec
nop
adc
push
sbb
sbb
and
pop
cmp
xlat
out
jg
dec
cmp
call
or
jecxz
jmp
dec
cmpsb
sub
mov
orb
dec
das
rcl
sbb
sub
push
sub
imul
or
mov
dec
jns
push
fadd
pop
enter
pop
pop
movsl
stc
lret
ljmp
pop
icebp
mov
aas
les
mov
xchg
dec
jecxz
xchg
cwtl
iret
daa
arpl
mov
mov
pop
xlat
mulb
clc
inc
iret
mov
mov
push
sti
mov
fisubs
dec
imul
sarb
mov
dec
or
sub
aas
add
stos
test
fwait
sub
sub
scas
out
out
fs
out
imul
call
dec
jne
and
cmp
mov
push
mov
movsl
cmpsb
push
subb
imul
mov
cs
test
push
or
pop
or
mov
dec
cmpsl
dec
fidivrl
sbb
outsl
push
jmp
sub
aaa
iret
jp
cmp
aas
or
dec
or
scas
push
nop
mov
mov
cmp
lret
xor
js
dec
lahf
push
cmp
add
push
fnstsw
cmp
stos
mov
xchg
cmp
jo
mov
clc
xor
cmp
orb
jle
or
insb
addr16
mov
outsl
hlt
sub
clc
or
sub
sub
dec
sub
pop
or
sub
sub
outsb
jmp
outsl
mov
fcmove
fsincos
sub
data16
test
xchg
push
std
mov
clc
dec
sub
sub
cmp
test
pop
clc
sub
leavew
sbb
sbb
xchg
test
ds
sbb
les
aas
cmp
sbb
or
and
sub
sub
int
call
sbb
dec
sbb
cmp
pop
idivl
push
out
sub
stc
cmp
or
push
pop
mov
stc
push
push
sbb
mov
sbb
cmp
testl
arpl
sbb
dec
into
add
mov
sbb
sub
sub
mov
sbb
or
jmp
imul
inc
pop
leave
sub
mov
jl
dec
xor
lock
mov
imul
popf
sbb
pop
jl
cmp
pop
add
imul
std
insb
insb
or
dec
lods
or
pop
cmpl
popf
cmp
movl
mov
stos
lret
test
sub
mov
std
sbb
lods
rcrl
sub
cmc
or
out
or
jp
push
movsl
pop
sbb
ficoml
pop
shll
mov
push
or
das
adc
enter
push
jecxz
pusha
cmp
mov
in
mov
or
bound
ja
fs
andb
fs
shll
pusha
and
pop
clc
movsl
ret
lret
clc
dec
faddl
push
mov
or
inc
leave
ljmp
movsl
int
pop
add
push
aaa
xchg
cmp
dec
sub
or
test
insl
mov
jns
fs
jmp
lea
sub
scas
jmp
sub
pop
stos
or
mov
sub
js
cmp
stos
sbb
jmp
mov
js
xor
mov
jo
cld
sbb
jl
sbb
inc
pop
lahf
ficomps
inc
sbb
dec
popa
mov
ja
dec
mov
mov
jo
gs
sub
or
cmp
dec
dec
std
lret
popf
aam
or
dec
clc
xlat
loopne
jmp
xor
enter
or
or
pop
pop
dec
adc
in
fs
inc
cmp
jmp
or
inc
mov
dec
pop
pop
pusha
sub
dec
dec
sub
cli
adcl
inc
movsl
pop
and
inc
and
xor
jge
jmp
int3
pop
insb
stc
mov
pop
leave
sbb
cmpl
push
insl
imul
xchg
jbe
add
rep
sbb
ret
sbb
pop
pop
out
call
pop
lahf
dec
add
dec
add
jno
sub
addb
pop
or
jmp
dec
out
test
insb
pop
or
stos
cmp
movsb
sub
ljmp
or
leave
dec
jb
cwtl
movsl
dec
mov
cwtl
fldt
pusha
cmp
pop
in
add
jo
paddd
aaa
mov
insb
dec
aaa
adc
xlat
push
dec
sbb
rorb
jecxz
mov
out
std
sbb
cmpl
mov
mov
sbb
movl
fcomi
mov
push
les
jp
dec
icebp
movsl
notl
mov
sub
fistpl
mov
into
xchg
cli
mov
mov
dec
movsl
sbb
lret
mov
iret
mov
xchg
pop
or
xor
inc
lret
movsl
mov
nop
sub
xchg
dec
sub
test
repnz
addl
test
adc
mov
sub
js
jbe
fcomps
pushf
xlat
insl
jns
add
sbb
fs
out
sbb
push
lret
out
mov
mov
and
adc
fistpl
and
call
sub
mov
and
xchg
jbe
pop
and
loop
dec
sbb
xor
pop
lret
sarl
pop
jno
test
mov
call
or
adc
loop
mov
mov
cli
jp
sbb
add
or
cmp
dec
push
in
inc
sub
lret
and
inc
jecxz
pop
fiaddl
lahf
daa
mov
mov
lret
push
jg
xchg
testb
sub
xchg
ficoms
stc
cmc
jmp
jle
push
mov
jne
fdivrs
cmp
sbb
cmp
js
je
adc
mov
cmp
pop
shll
jae
or
idivb
test
mov
out
mov
insl
dec
jg
mov
cmp
pop
push
cli
stos
sub
sub
sbb
or
and
mov
dec
or
outsl
mov
mov
mov
xor
sub
adc
std
cmp
jmp
dec
sub
clc
fcomps
xor
mov
xlat
push
icebp
pavgw
dec
insl
jmp
and
sub
cmp
xchg
pop
mov
enter
or
lret
sub
dec
decl
cmp
sub
pop
jp
sbb
jl
je
idiv
sbb
cmp
inc
fstpt
push
cli
adc
data16
dec
es
cmp
sub
arpl
sbb
ljmp
dec
cs
lock
mov
das
jno
cwtl
and
lcall
dec
std
fsubrs
push
or
jmp
pop
mov
and
inc
stc
inc
jge
stos
mov
dec
aaa
jo
cmp
jnp
ljmp
sbb
cmp
or
mulb
sbb
stc
cmp
in
sub
inc
fildll
subb
testb
outsl
hlt
fdivrs
orb
add
mov
push
cmp
dec
xchg
stos
fstpt
out
dec
out
jge
shrb
stos
outsl
pop
sub
call
pop
sbb
sub
pop
pop
popa
rcr
adcl
fisubrs
call
in
mov
xchg
xchg
rorl
sbb
mov
enter
std
cmp
mov
jne
lret
sbb
pop
stos
add
popf
fcmovne
pop
ds
push
or
cmp
dec
sbb
add
dec
enter
sbb
lea
push
out
lock
in
mov
adc
push
ds
dec
xchg
jns
and
pop
sub
imul
push
je
jp
popa
xlat
dec
mov
jne
xchg
scas
stc
sub
inc
pop
sub
ret
jnp
push
out
gs
pop
jp
dec
insb
pop
movsb
test
mov
dec
cmpb
stc
dec
push
call
cmpb
enter
fldenv
shll
and
scas
sub
xor
add
or
add
and
cmp
dec
sub
cmp
push
clc
sbb
dec
dec
out
dec
jge,pt
jle
insb
scas
cmp
jmp
sbb
sub
enter
fdivs
imul
cmp
xchg
dec
and
fldt
and
cmp
int
clc
cmp
repnz
pop
inc
pop
push
adc
and
nop
mov
jmp
outsl
lods
xlat
dec
stc
mov
sub
fadds
test
or
mov
cmp
dec
out
jbe
or
adc
cli
std
fsubrs
pop
stc
lret
mov
sub
jge
dec
lret
ljmp
loopne
mov
or
pop
dec
push
js
or
in
scas
stos
sub
mov
cmp
or
sub
dec
or
cmp
sub
cmp
pop
jp
mov
inc
sti
push
dec
insb
cmp
imul
cwtl
or
call
xchg
lret
int
lock
popa
dec
ds
jo
push
dec
jp
pop
stc
cwtl
push
mov
fstpt
or
rclb
push
scas
call
sub
into
stos
cli
pop
loope
std
jmp
sbb
sbb
pop
fcomps
pop
inc
imul
pop
sub
negl
aaa
ret
addr16
fisttpl
sub
mov
insb
cwtl
inc
dec
push
xor
sub
bound
or
dec
or
lea
loop
shl
jmp
push
or
sub
orl
mov
scas
mov
mov
dec
push
pop
dec
pop
mov
pop
pushf
das
cmpsb
repnz
inc
and
into
repnz
lret
jge
test
das
stos
cwtl
out
dec
imul
jne
mov
mov
lcall
xchg
cmp
out
daa
mov
aaa
arpl
cwtl
enter
enter
cmp
out
pop
jmp
imul
insl
mov
add
popf
sub
ljmp
fsubr
mov
push
dec
pop
push
cmp
in
addr16
fstps
out
stc
mov
jmp
inc
jmp
dec
test
out
pop
pop
inc
and
clc
outsl
sub
sbb
dec
sub
sti
push
popf
iret
mov
fmul
call
bound
data16
movb
xlat
in
and
pop
jp
pop
push
inc
test
lods
das
mov
mov
sbb
cmp
cmp
pop
lods
sbb
sub
cmp
add
jmp
cmpsb
sbb
cmp
inc
add
ljmp
or
cmp
sub
shrb
sub
pop
inc
inc
pop
dec
shrb
cmp
lret
fstpt
dec
jp
jl
mov
mov
sbb
cmp
jecxz
mov
fldt
mov
scas
test
xchg
out
sub
sbb
dec
pop
xchg
cmp
rcll
or
out
test
cli
sub
mov
jg
mov
ljmp
repz
ds
or
in
fsubr
inc
or
dec
jae
std
movsl
jp
sbb
pop
push
popa
call
ljmp
sub
pop
mov
dec
ljmp
sub
repz
outsl
jmp
mov
dec
jecxz
inc
cmp
push
cmp
andb
clc
ljmp
dec
sbb
mov
sbb
sbb
pop
mov
mul
push
cmc
mov
sbb
pop
dec
sbb
clc
cmp
sub
xlat
sbb
int3
push
cmc
or
pop
inc
mov
pop
out
inc
gs
jne
out
sbb
loope
fcomps
sub
fs
xor
dec
or
subl
sub
pop
or
jmp
jge
movsl
sub
cwtl
mov
es
or
std
sbb
scas
es
mov
dec
xchg
push
mov
mov
mov
push
cwtl
dec
outsl
cmp
bound
leave
add
fcompl
mov
or
rsm
mov
enter
ljmp
xchg
pop
mov
fcmovnb
adc
std
int3
popa
sub
add
into
mov
mov
dec
mov
mov
xor
dec
push
push
clc
dec
test
hlt
mov
push
stos
pop
sub
ljmp
daa
scas
lret
add
lds
lock
call
dec
dec
cmp
xor
lret
sti
push
ret
or
pop
sbb
in
jl
sbb
dec
push
imul
jecxz
mov
push
jbe
push
stc
or
out
pop
sbb
push
or
addr16
out
xchg
bound
adc
sub
js
call
cltd
pop
cmp
pop
movsl
stc
idivb
leave
aam
pop
pushf
daa
clc
pop
and
cmp
xor
leave
dec
jmp
stos
jmp
cmp
stos
sub
stc
sub
in
insb
xchg
scas
pop
or
sub
test
adc
cvtps2pi
fisttpl
inc
loop
into
xchg
aas
mov
and
push
leave
xchg
inc
gs
xchg
addr16
out
and
popf
cmp
stos
ds
pop
fucomi
insb
fs
sarb
pop
ljmp
dec
adc
and
insb
insl
push
sbb
dec
xlat
pop
cmp
imul
out
insb
sub
in
adc
fdivrs
sub
inc
sbb
out
dec
test
dec
dec
jmp
leave
insb
enter
stc
pop
mov
inc
sbb
inc
cwtl
or
sahf
cmp
and
sti
js
and
pop
outsb
mov
movsl
dec
or
sub
insl
lea
insb
push
popa
and
jne
or
dec
mov
fbstp
in
in
mov
push
repnz
daa
andb
and
idivl
push
lods
sub
mov
cltd
sti
mov
or
jo
inc
xlat
stos
cltd
xchg
xchg
subb
cmpsb
jge
lods
push
pusha
in
in
or
sbb
mov
sbb
int
mov
cmp
ljmp
das
add
stos
test
push
sbb
bound
pop
js
lcall
push
fstps
pusha
jl
jmp
fsubs
pop
dec
adc
jb
dec
stc
xor
movsl
dec
jle
leave
or
mov
and
ret
inc
xchg
or
pop
lcall
cwtl
call
dec
enter
cmp
lea
shl
fsubrs
adcl
das
ljmp
dec
and
dec
adcl
ss
dec
loop
addr16
repnz
stos
xor
sub
repnz
movsl
cmp
xchg
mov
inc
pop
jl
xor
mov
stos
dec
dec
cmp
or
xor
fists
sbb
dec
sbb
in
sub
scas
fwait
test
mov
cli
pop
in
add
ds
sahf
fucomi
adc
xor
pop
mov
xchg
sbb
sub
cmp
push
or
pushf
push
in
sbb
lods
dec
pop
test
dec
stc
cwtl
lret
lds
dec
sbb
mov
sbb
icebp
ficoms
and
arpl
es
js
or
mov
jp
cmc
les
pop
lret
push
sub
dec
int
sbb
dec
dec
sbb
or
jmp
fldcw
fucomi
cmpsl
pop
pop
mov
je
out
mov
inc
scas
ljmp
in
fisubrl
push
cli
insb
into
enter
ljmp
push
and
cmp
enter
push
js
hlt
pop
sub
jmp
pop
add
insl
fldpi
negl
data16
lea
sbb
jle
mov
addr16
in
push
test
jp
test
idivb
sbb
or
cmp
pop
enter
cli
cmp
fcoml
lcall
fnstcw
test
pop
sbb
in
outsb
in
popf
jmp
sub
xchg
adc
push
fs
leave
js
and
out
pop
testl
and
imul
call
cmp
pop
pop
stos
pop
jmp
aaa
cmp
mov
adc
jge
test
les
out
inc
add
sub
lds
shlb
pop
sub
sbb
or
mov
popf
or
ljmp
or
inc
push
mov
aas
sub
push
rorb
pop
mov
xlat
testl
cs
mov
ja
js
arpl
stos
xor
movsl
xchg
mov
pop
test
insb
imul
push
dec
call
push
cmp
dec
xor
arpl
cli
ds
cmp
mov
sbb
fdivs
mov
mov
and
inc
cld
lcall
ljmp
sbb
fisttpl
divl
mov
lret
pop
inc
add
cmp
xlat
mov
arpl
call
lds
xor
sub
insb
sub
pop
sbb
push
sub
dec
add
insb
fxch
push
in
jmp
jl
loope
push
xlat
dec
mov
mov
clc
sbb
sub
sub
dec
pop
mov
add
pop
sbb
jg
push
cmp
dec
dec
xchg
shlb
jp
ja
add
and
das
jae
mov
mov
je
sbb
stos
dec
cmp
push
in
stos
add
cli
in
insl
pop
stos
push
lret
or
cmp
cli
pop
lds
stos
mov
clc
sbb
ret
mov
jmp
std
sbb
adc
sub
cmp
pop
call
push
mov
xor
sub
push
in
stos
or
stos
stc
iret
subb
pop
leave
mov
dec
or
inc
pop
shrb
jecxz
icebp
lcall
jl
fistpl
cmp
stc
cli
cmp
stos
pop
fadd
daa
pushl
add
pop
sbb
inc
cmp
mov
js
pop
dec
push
mov
stc
test
or
sbb
pop
cmp
pop
lea
data16
mov
subb
jmp
push
jbe
jno
test
push
repz
cmp
nop
pop
push
sub
lret
jbe
lret
mov
sub
ja
dec
out
lcall
das
xor
and
imulb
xlat
inc
push
stc
mov
or
pop
mov
sub
rcr
mov
mov
sub
or
mov
push
add
mov
jmp
aam
jae
sub
test
mov
sub
inc
xchg
ja
shll
cmp
push
repnz
push
cmp
in
pop
sbb
push
das
push
inc
xchg
cmp
sarb
inc
cmp
imul
dec
dec
clc
sbb
or
pop
imul
jne
stc
cmp
fdivr
inc
test
sbb
dec
push
mov
jp
or
shrl
inc
push
cmp
pop
xchg
pop
jo
dec
pop
sbb
out
or
cmp
sub
loopne
daa
fidivrs
add
dec
ret
lahf
push
jl
insl
pop
dec
cli
or
mull
or
leave
fisttpl
sub
test
add
stos
cmp
not
dec
sub
dec
dec
out
fimuls
pop
ljmp
daa
dec
fucomi
add
cs
andl
fstps
pop
push
sub
or
jns
sub
stos
test
insb
or
dec
push
shr
cli
mov
sub
stos
and
rol
ret
insb
mov
dec
pop
xchg
sbb
adc
outsb
mov
add
outsb
jmp
in
jl
or
fldlg2
pop
clc
xchg
loopne
adc
pop
scas
mov
sub
inc
mov
loope
fldt
xchg
in
mov
enter
lcall
fdivrs
cmp
cmpb
loop
in
js
dec
sub
test
sbb
xor
sti
out
cmp
sub
inc
movsl
xor
addr16
or
js
mov
fcomps
mov
lock
cwtl
pop
mov
call
insl
adc
mulb
xchg
ss
fisubs
xchg
insb
loope
ljmp
mov
dec
enter
fimull
testb
mov
sbb
mov
fisttpl
shr
test
lret
lret
leave
repnz
movsb
daa
sbb
scas
mov
inc
data16
sub
sbb
cmp
call
shl
ficompl
push
cmp
jo
sbb
aaa
stc
cmp
or
gs
sub
sub
push
pop
mov
sti
jmp
insb
iret
ds
mov
jmp
xor
enter
rcrl
out
mov
pop
pop
test
mov
push
lcall
mov
or
out
xchg
push
pop
pop
jp
fidivrl
pop
adc
in
out
adc
shl
xchg
push
ret
leave
pushf
movsl
lea
push
cmp
jp
xchg
push
xchg
icebp
stos
sub
dec
data16
pop
clc
imul
sub
fistpl
loope
mov
insb
push
mov
imul
stos
cmp
daa
jg
dec
dec
jo
fiaddl
xor
pop
and
mov
and
mov
mov
pop
in
fisubrs
push
push
lods
test
or
out
inc
addr16
call
add
leave
push
mov
movsb
add
fwait
jl
lods
pushf
cwtl
push
ret
lret
dec
call
icebp
ret
mov
das
lods
dec
fsubrs
mov
insb
cmpl
faddp
push
sub
dec
mov
pop
dec
pop
leave
ficoms
mov
call
pop
and
sbb
cmp
testb
data16
out
in
mov
inc
aaa
sub
outsl
fdiv
jmp
test
sub
ds
pop
cld
insl
add
ljmp
mov
dec
jg
jmp
movsl
jg
inc
cltd
mov
pop
xchg
sbb
sbb
mov
mov
negb
and
add
stc
xchg
outsb
and
mov
jo
gs
mov
add
and
fldcw
test
sub
insb
jno
fwait
pop
dec
lret
jp
fldcw
sub
sbb
add
setns
mov
pop
pop
enter
pushf
das
add
mov
mov
pop
jbe
testl
push
push
sbb
shr
add
dec
clc
sbb
pop
loope
lret
adc
lods
mov
dec
xor
xchg
sti
cmp
cmp
lods
popf
cmp
sbb
leave
fsubrs
lea
lret
mov
inc
dec
cli
pop
xor
icebp
inc
sbb
push
fldt
inc
mov
sbb
lods
lock
sbb
or
jo
dec
jmp
sbb
sti
leave
mov
lcall
dec
sub
leave
test
sti
cmc
push
mov
mov
cmp
cmc
xor
mov
push
xor
sub
push
sahf
pop
pop
stos
in
push
dec
sahf
or
sbb
jl
test
dec
rorl
fisubrl
loope
enter
js
arpl
es
pop
enter
or
cmp
sahf
stos
mov
clc
pop
test
mov
cmp
pusha
sbb
gs
dec
jmp
adc
lds
les
loope
sub
loop
sub
icebp
sub
dec
arpl
fnstcw
dec
clc
lock
mov
call
push
mov
push
loopne
sbb
mov
inc
cmpsl
or
cmpsl
push
sbb
push
or
lret
push
xchg
jbe
stc
lret
xor
push
mov
es
mov
add
lcall
push
add
mov
pop
test
arpl
test
stos
lcall
dec
popa
lods
sub
mov
xchg
pop
aaa
lds
out
movsl
pop
inc
sub
mov
dec
pop
negl
push
mov
pop
inc
sub
dec
cltd
arpl
mov
pop
insb
sub
test
jge
cmpsb
out
imul
mov
push
adc
lret
enter
lds
sub
xor
rcrb
inc
sbb
dec
notb
adc
aaa
cmp
repz
jmp
push
mov
imul
mov
daa
and
ret
ss
outsb
popf
clc
lcall
pusha
ficompl
pop
sbb
add
in
arpl
cmp
cwtl
jmp
mov
test
out
pop
mov
sub
dec
add
adc
daa
cmp
nop
enter
fdivs
inc
cmp
aas
or
or
in
dec
sbb
data16
xlat
dec
jl
aam
sub
les
aam
dec
cmp
fs
jg
nop
mov
in
and
sub
sbb
jbe
dec
call
inc
clc
flds
in
mov
push
insb
sub
pop
xlat
push
lcall
cmp
jo
loope
and
fadds
push
lret
push
insb
push
push
mov
pop
jge
mov
addr16
sub
cmp
popf
lcall
stos
arpl
dec
cwtl
repnz
flds
out
push
xor
cmp
leave
das
fidivrl
mov
ljmp
dec
mov
pop
push
in
mov
icebp
imul
xchg
push
cli
dec
cmp
push
cmp
fsubl
pusha
sbb
add
bound
mov
fdivs
xchg
out
lcall
jg
cmp
mov
js
mov
insb
jbe
dec
sbb
fsubs
xchg
out
mov
ljmp
arpl
mov
mov
pop
add
xchg
lods
jb
jno
push
cmp
inc
and
jbe
mov
sar
mov
test
imul
cmp
inc
jge
mov
or
fisttpll
and
mov
call
test
sbb
jl
jno
fstl
mov
scas
push
clc
fcmovnu
cltd
in
jnp
ret
sbb
cmp
les
sbb
ficompl
adc
rclb
lcall
out
sbb
mov
sbbl
mov
jbe
cmp
insl
xchg
fptan
lea
cmp
out
push
lret
fsubr
sub
sbb
lahf
and
jns
insb
clc
push
pop
test
sbb
sbb
cmp
pop
mov
push
jmp
push
stos
jge
test
dec
out
pop
pop
cmp
lods
mov
cmpsb
jge
fcomps
and
lcall
jp
lcall
jge
dec
jmp
sub
dec
dec
out
xor
cmpsb
push
fstps
sub
cmp
sub
pop
jp
imul
jmp
add
dec
mov
mov
test
sbb
or
in
mov
enter
imul
lock
out
lock
lods
mov
sub
xlat
jb
das
insb
out
or
sbb
mov
fs
jg
outsb
dec
or
leave
stos
test
pop
mov
sub
ljmp
and
stos
ljmp
or
sbb
psubq
dec
call
stos
leave
or
mov
push
push
sbb
lret
es
pop
xchg
push
and
rolb
sbb
mov
insb
jmp
push
stc
cli
repnz
lcall
clc
xchg
cmp
jl
fldcw
popf
cmp
data16
mov
mov
xchg
dec
icebp
fs
lcall
outsl
and
sub
pop
lods
test
xchg
sbb
pop
addr16
cwtl
js
sub
lds
jmp
xchg
sub
popa
or
sbb
loope
pop
imul
push
js
sbb
dec
movb
jge
cs
js
js
xchg
mov
pop
or
or
adc
sti
pop
sub
leave
rcr
sub
notb
xor
or
push
std
mov
imull
aam
and
addr16
out
stos
xchg
pop
ss
movsb
mov
or
and
enter
ljmp
lret
insb
push
push
mov
sbb
cmp
or
sub
mov
or
lret
or
or
sub
jae
aaa
jle
cmp
mov
and
in
xor
dec
jg
push
cmp
imul
movsb
cmp
jge
lods
leave
xchg
sub
insb
lcall
push
mov
adc
insl
popa
data16
pop
out
cli
cwtl
inc
cmp
push
scas
push
mov
xor
pop
dec
sbb
mov
fidivl
ret
repnz
mov
dec
fcmovnb
stos
or
arpl
test
adc
mov
or
ljmp
imul
mov
xlat
jecxz
dec
or
fdivrp
mov
mov
fcomip
shlb
cwtl
push
sbbb
sub
stos
pop
jl
mov
ds
jp
enter
mov
popf
sub
sbb
pushf
decb
fnstcw
mov
sub
ljmp
ret
dec
jns
imulb
aaa
sub
stos
cmp
in
stos
fld
cmpsl
gs
jmp
or
in
stos
pop
pop
daa
mov
mov
jmp
cmpsl
mov
outsb
pop
iret
pop
lret
lret
outsl
loop
jmp
cmp
negl
xlat
or
in
sbb
scas
call
push
cwtl
stc
dec
jle
push
jo
ja
cmp
insb
mov
movsb
js
push
pop
ljmp
repz
xlat
jle
dec
cmp
clc
and
inc
push
fldcw
sbb
pushf
js
popl
pop
nop
in
mov
fsubp
cwtl
aas
push
pop
sbb
dec
sbb
or
outsl
and
or
mov
fwait
ljmp
mov
dec
jo
scas
jl
sbb
inc
popl
jno
fs
insb
mov
stos
cmp
xlat
cld
leave
ljmp
fdivr
jmp
sbb
mov
popa
icebp
insb
ds
stos
popf
test
sub
and
push
sti
test
push
clc
jne
or
cmpb
aas
pop
lods
in
xchg
mov
insb
sbb
clc
icebp
jb
jle
stc
adc
mov
push
sbbl
sbb
dec
dec
dec
in
into
pop
dec
add
dec
fucomip
mov
push
mov
imul
jle
test
dec
lods
dec
pop
cmp
negl
out
cmp
repnz
addl
cmp
jp
insl
mov
sti
or
sub
fs
pop
pop
iret
call
mov
sub
or
mov
pop
enter
jbe
leave
scas
sub
fnsave
sahf
mov
cmp
mov
or
mov
jmp
faddl
or
mov
js
xor
repnz
in
or
jmp
mov
jge
xchg
mov
push
jl
in
pop
lret
leave
jno
mov
jecxz
jg
jns
outsb
sub
add
cmp
inc
lret
jge
jmp
stc
sub
ja
call
jmp
xlat
push
jecxz
popa
or
mov
fimull
mov
sbb
push
movsl
sub
scas
xor
sub
dec
sti
jnp
mov
jns
push
int3
mov
lods
mov
push
dec
ljmp
lahf
sarb
or
aaa
push
sbb
xlat
lret
stos
fld
xor
or
cmp
push
push
pop
movsb
cli
dec
jmp
push
push
mov
pop
or
cmp
dec
sbb
scas
sub
stos
leave
stos
pop
clc
enter
jo
lcall
leave
jbe
fsubr
dec
das
adc
sub
sbb
imul
inc
mov
or
inc
adc
jecxz
push
sbb
mov
pop
les
in
call
mov
fdivrp
dec
sub
sub
dec
inc
aaa
mov
cmp
fcomps
jmp
dec
sub
and
mov
stc
pusha
in
test
pusha
inc
cmp
mov
jo
inc
mov
sub
jb
sbb
sbb
mov
mov
into
fisubrl
xor
mov
dec
fs
cmp
sbb
sub
pop
mov
dec
les
lcall
sbb
mov
pop
fcmovbe
cli
sarl
mov
push
xchg
xchg
inc
lret
rcr
je
adc
lods
sub
sbb
or
jmp
push
leave
test
sub
ret
pop
push
ficoml
cmp
cmp
and
jno
or
cmp
fmul
fcmovbe
std
lret
sbb
mov
add
cmp
dec
ret
sub
sbb
mov
dec
or
out
or
call
sub
dec
xlat
jecxz
sbbb
mov
orl
sti
mov
das
xor
mov
sub
push
imul
insb
cld
jl
cmc
sub
stc
xchg
pushaw
jae
xchg
pop
mov
or
addr16
dec
cwtl
jmp
or
sub
call
stos
mov
loop
aaa
testl
clc
pop
les
cmp
loopne
lcall
leave
sbb
xlat
ud2
cmpsl
mov
insb
sbb
lcall
inc
leave
jp
and
sbb
loopne
cli
and
test
sub
cmp
ret
jnp
stos
dec
jge
mov
jle
mov
sbb
xor
out
inc
ficomps
loop
mov
sub
iret
lret
std
cmp
jle
jp
sub
cmp
arpl
cmp
pop
leave
out
js
fildll
sub
dec
dec
mov
sbb
stos
sub
dec
fidivrs
iret
cwtl
dec
xlat
jp
leave
push
push
fcomi
inc
movsl
rcl
punpckhwd
xor
sbb
call
inc
out
dec
shll
sub
xorl
or
daa
adc
out
lret
push
xchg
insl
inc
mov
or
cmp
sti
cmp
cmpsl
clc
addr16
sub
lretw
add
dec
mov
js
mov
test
sub
stos
fnstcw
mov
and
sub
cmp
cmp
out
fs
cli
sbb
sub
iret
cs
sbb
stos
popf
dec
jl
ds
std
test
sub
and
and
cmp
xor
jmp
inc
inc
sbbl
cmp
subl
ds
aas
into
xchg
jl
fcmovu
xchg
jbe
js
fldenv
lret
imul
insb
out
mov
mov
outsb
jle
fwait
cmpsl
test
push
movsl
js
sbb
adc
pop
out
cmp
cmpl
std
jnp
scas
lret
call
test
push
enter
jbe
sub
or
arpl
jno
mov
mov
mov
movsl
stos
jmp
add
sahf
cmp
or
stos
or
ja
je
sti
sub
or
sub
mov
mov
out
mov
into
mov
fidivrs
lods
sbb
movsb
mov
movsl
or
mov
fisttpl
ds
cmp
test
mov
ljmp
pop
insb
cmp
ret
in
out
sbb
inc
nop
cmp
cmpsl
fisttpl
loop
mov
pop
orl
fcomps
mov
mov
lcall
imul
jae
insl
test
sti
fidivrs
fildl
push
pop
add
and
stos
xchg
hlt
sub
jb
jbe
push
cmp
int
test
adc
pushf
daa
daa
daa
insb
inc
scas
pop
cmpsb
inc
or
fwait
sub
shl
mov
sbb
or
scas
mov
sub
rolb
jbe
inc
xlat
mov
pop
cli
call
out
push
rcrl
mov
out
fidivl
jbe
negb
clc
mov
sub
insb
push
in
in
adc
jmp
jmp
stos
shll
jae
inc
lret
ds
cmpsl
mov
clc
ljmp
inc
imul
inc
pop
call
xor
ljmp
scas
mov
and
fadd
stos
ljmp
or
sub
pop
icebp
mov
scas
test
pop
sbb
jmp
pop
sahf
sbb
mov
push
jle
lock
dec
mov
sub
fdivrs
or
or
enter
xor
push
ss
adc
mov
dec
or
lds
sub
and
insl
xchg
and
pop
idivl
cmp
or
mov
cwtl
pop
stc
sub
insb
adc
in
pop
cmp
ljmp
andl
add
or
mov
dec
iret
or
lcall
test
or
jmp
cmp
push
push
inc
mov
out
cli
fimull
sti
pop
stc
lret
dec
or
in
in
inc
test
sub
cmp
fstpt
cmp
pop
mov
adc
dec
or
and
movsl
or
sub
pop
fwait
push
dec
mov
outsb
inc
or
mov
test
and
ds
lods
mov
sbb
push
lods
dec
test
rcr
cmp
xchg
js
ljmp
loopne
pop
data16
mov
insl
dec
mov
cli
pop
stos
jl,pn
jle
dec
mov
push
cmc
lret
dec
sub
push
rcrb
call
sub
addr16
sub
ret
jle
mov
jp
imul
out
jmp
jle
xlat
cmp
or
out
jl
pop
sub
jo
les
int3
pusha
fisttps
shll
mov
dec
inc
lcall
pop
cmp
dec
cmp
aaa
fs
add
dec
and
cwtl
inc
dec
jbe
call
scas
in
sub
adc
lea
stc
sti
fisubs
sbb
es
fidivl
push
out
cwtl
lds
xchg
sub
arpl
pop
or
xchg
scas
dec
cli
push
cmp
iret
inc
lret
mov
mov
mov
mov
xor
push
fucomi
or
mov
or
mov
sub
mov
or
and
out
pop
cmpsb
inc
outsb
fs
push
dec
lret
lret
push
dec
xor
out
mov
cltd
jp
outsb
lods
sub
test
fwait
cmpsl
push
jecxz
inc
fistl
sub
sub
adc
dec
mov
cli
mov
pop
ficompl
lcall
pop
cli
insb
push
cmp
mov
sti
push
insl
inc
movb
insb
jmp
xlat
cwtl
insl
icebp
sbb
pushf
out
mov
or
int3
ret
xchg
sbb
popf
mov
pop
add
test
fldcw
test
lret
dec
mov
xlat
leave
mov
add
leave
dec
or
gs
adc
xlat
sbb
adc
das
xor
test
lods
cmp
xchg
pop
loope
mov
enter
push
sbb
jb
fistps
dec
cmp
jb
dec
mov
stc
mov
scas
sub
cli
lahf
push
fsubrs
jp
pop
inc
dec
add
or
ljmp
lods
mov
pop
sbb
jmp
jg
pusha
incb
lret
out
inc
retw
iret
fld
jmp
mov
cli
loopne
lods
pop
fldt
cmp
js
popa
xor
iret
mov
inc
xlat
push
sti
sbb
lods
shll
cmp
idiv
dec
test
fsubrs
and
dec
pop
mov
fmuls
dec
pop
adc
pop
sub
cs
dec
lea
fwait
out
imul
pop
sub
cmp
cli
dec
sti
stc
fs
test
or
dec
fldcw
jge
clc
jmp
mov
adc
lret
mov
xor
xchg
rorb
xchg
push
mov
cld
push
enter
mov
dec
cmp
sbb
push
test
stos
push
cld
sub
outsb
jbe
pop
cltd
adc
pushf
sbb
jmp
cmp
cmp
ret
movsl
imul
fs
rcrb
push
nop
pop
jno
popa
pop
stos
jo
sti
adc
sbb
leave
cwtl
add
sub
shlb
cmp
cmp
mov
pop
ljmp
fldcw
fdivp
insb
sub
sbb
cwtl
sbb
dec
sub
flds
leave
xchg
das
or
mov
insb
cmp
fcmovne
sub
data16
adc
cmp
xor
jg
call
mov
mov
mov
mov
fimull
cld
cmp
xor
sub
jl
ret
and
xor
push
gs
ljmp
and
push
imul
inc
pop
sub
xor
mov
mov
push
stc
mov
inc
fadds
pop
cmp
sub
popf
inc
mov
push
inc
cmp
dec
in
push
cmp
bound
push
popa
lahf
fisttpl
mov
pop
loop
xlat
leave
adc
ds
mov
jmp
sbb
andb
adc
lcall
lea
mov
int
fldl2e
int3
dec
adc
sbb
sub
cmpsb
ljmp
or
pop
add
mov
dec
mov
call
sbb
fld
sahf
sbb
and
cmp
test
pop
mov
insb
pop
cmp
mov
pop
outsb
cmp
lcall
dec
call
jno
and
xchg
hlt
sbbl
loopne
ficoml
mov
jo
leave
insl
ret
cmp
test
pop
or
ljmp
in
jle
pop
mov
call
cld
xchg
cmp
clc
pop
insl
lahf
push
mov
inc
dec
rcl
push
fisubrs
addr16
or
aam
dec
js
xor
clc
test
stos
cmp
push
leave
pop
mov
pop
inc
imul
mov
insb
testb
dec
sbb
notb
push
cwtl
sbb
leave
cmc
out
int
mov
movsl
inc
ljmp
jne
sbb
lock
stos
pop
pop
gs
fistps
adc
mov
out
sti
enter
testl
xchg
mov
test
or
sub
and
mov
sub
cmp
sbb
add
jl
xor
sti
call
cmc
dec
pop
mov
sbb
insl
dec
pop
adc
jge
and
dec
lret
movsl
or
ljmp
pop
pushf
pop
aaa
add
test
call
cmp
pop
sbb
xorl
out
arpl
stos
jl
xlat
mov
pop
cmp
jge
repnz
dec
pop
sbb
dec
bound
js
mov
mov
xor
imul
out
insl
mov
xor
dec
imul
push
sub
sub
insb
test
pop
sbb
scas
fs
inc
pop
push
pop
pop
adc
mov
adc
or
sbb
stos
cli
hlt
fimuls
mov
or
lods
push
stc
stos
or
dec
ljmp
jl
js
icebp
pop
sub
loopne
outsl
push
pop
cmp
pop
clc
int
mov
or
xchg
les
mov
sbb
jmp
mov
jae
sbb
pop
negl
sub
cmp
cmpb
pop
dec
lret
dec
mov
mov
lock
fstps
out
test
jae
mov
mov
sub
dec
mov
xchg
push
cmc
dec
pop
xor
inc
call
inc
outsl
mov
mov
jmp
ret
sbb
jl
out
fmuls
sbb
cmpb
dec
aas
sti
mov
push
testl
push
push
cli
dec
xlat
adc
cmc
sahf
call
adc
xor
sti
or
fcomps
add
mov
fisttpll
popa
js
aam
jg
push
jl
xchg
mov
sbb
in
stos
mov
js
or
insb
pop
sbb
dec
mov
mov
ret
lcall
fidivl
mov
pop
subl
imul
push
lods
cmp
cmp
sub
jne
dec
cmp
outsl
rcrb
dec
adc
loopne
imull
shrb
leave
stos
cmp
dec
mov
sub
ficomps
sub
push
cmp
sub
cmp
push
cwtl
iret
or
mov
sbb
mul
cmp
testb
pop
stos
mov
cltd
dec
mov
sub
push
mov
pop
dec
jl
jne
pushf
stc
fldcw
aas
cli
lret
mov
pop
xchg
mov
mov
fildll
push
mov
cmc
or
fsubrs
insb
popf
sbb
dec
in
sbb
das
enter
cmp
push
jl
cmp
jmp
fwait
or
xlat
cmp
or
ficoml
pop
outsb
je
loope
dec
mov
jl
and
cwtl
ja
mov
pop
xchg
lret
mov
sub
ret
jl
mov
nop
pop
ss
xchg
jmp
movb
sbb
outsl
mov
pop
sbb
mov
fsts
enter
sub
sub
addr16
js
fldl2e
or
lcall
pop
sbb
loopne
into
pop
cmp
pop
sub
sbb
jnp
das
repnz
shr
pop
ljmp
inc
pop
push
dec
ficompl
flds
mov
mov
jns
and
pop
adc
or
cwtl
movsl
insb
fmull
dec
sbb
in
push
insb
dec
jl
push
imull
ret
or
cli
das
lea
lcall
lret
lret
lret
or
mov
notb
push
sbb
imul
es
or
xchg
push
sub
cmp
pop
sub
aaa
es
jp
out
arpl
cli
or
inc
xor
add
pop
cmp
push
fcom
sub
insb
inc
out
or
leave
add
push
in
nop
adcb
pop
por
ljmp
iret
lcall
pop
imul
sub
outsl
cmp
mov
dec
push
cmpsb
fcomps
dec
sbb
insl
or
xor
jmp
push
push
sub
imul
fwait
iret
sbb
or
fisubrl
jle
cmp
mov
or
pop
mov
stos
sub
jp
cwtl
in
mov
xlat
out
fstps
dec
push
sub
cmp
pop
jbe
lret
dec
mov
mov
cmp
ja
mov
enter
mov
movsl
je
pop
cli
xchg
lock
pop
sbb
push
or
sub
push
cmp
jge
lret
movsb
pop
or
insb
dec
jl
add
jmp
imul
leave
out
jmp
sbb
pop
cwtl
mov
xor
hlt
mov
fdiv
add
or
cmp
call
aaa
add
stos
scas
pop
mov
sub
fwait
dec
cwtl
scas
lds
sbb
sub
jle
sbb
jne
inc
mov
sub
cltd
imul
gs
fldt
das
iret
sub
pop
jne
cmc
call
mov
push
sub
lret
iret
push
sub
sub
cmp
push
addl
pop
arpl
sbb
sbb
cmp
pop
mov
jbe
inc
sahf
daa
add
ljmp
or
xlat
out
or
cmp
ljmp
cwtl
lret
push
testl
test
jmp
pop
sbb
leave
movsl
in
jl
sub
in
into
mov
mov
inc
fimuls
jp
fcom
pop
shrb
repz
aas
decl
dec
inc
pop
out
mov
xor
pop
push
mov
push
out
sti
mov
outsl
or
pop
cmp
outsb
or
adc
jmp
cwtl
stos
ljmp
or
into
inc
dec
push
push
cmp
push
clc
sti
push
lods
test
xchg
mov
add
insb
pop
sub
jl
je
int
sbb
pop
xlat
pop
inc
sub
sub
sub
test
pop
call
inc
iret
inc
push
icebp
enter
pusha
negl
pop
or
insb
stos
fisubrl
jmp
in
mov
dec
in
call
mov
mov
lcall
push
and
rclb
insl
xor
lea
mov
sub
pop
sti
cmp
mov
fcmove
enter
mov
cmp
mov
les
cmp
or
cmp
enter
das
dec
fcmovbe
inc
mov
jg
ljmp
dec
clc
jmp
mov
sub
imul
sti
out
cmc
pop
xchg
sbb
jle
inc
cmp
sbb
jbe
inc
jnp,pt
cmp
cmp
out
addr16
mov
cmp
into
and
gs
mov
sbb
cmp
mov
sub
inc
mov
push
cmp
clc
jecxz
data16
adc
mov
dec
or
xor
les
jnp
jge
dec
mov
daa
pusha
cmp
das
lret
sub
or
push
cmp
fsts
cwtl
pop
call
test
adc
sub
sub
or
xchg
mov
fldt
and
jmp
mov
data16
sub
mov
roll
clc
enter
sub
dec
dec
pop
push
sbb
or
pop
dec
mov
rclb
imul
mov
jg
out
mov
cs
pop
cmp
pop
inc
or
xchg
cmp
fs
stos
fimull
std
pop
sub
in
clc
pop
sbb
push
scas
lds
jmp
ret
loopne
stos
mov
lret
push
pop
pop
or
fisubrl
in
leave
jmp
jge
sbb
mov
mov
mov
in
outsl
test
sub
stos
cli
fs
clc
sub
fidivl
mov
pop
cmp
and
mov
sub
mov
insl
aad
jecxz
pushf
cmp
inc
push
push
lods
fs
rclb
sbb
or
jp
jbe
xlat
fnstenv
cwtl
push
cmp
lret
fwait
pop
ljmp
add
das
sbb
aas
dec
mov
fimull
insl
punpckhbw
neg
pop
dec
stos
pop
stc
jp
sbb
or
outsl
push
cmp
mov
and
mov
pop
push
inc
pushf
cmp
xchg
and
leave
stos
sub
or
fisttpl
or
jo
cs
jp
je
lcall
xor
mov
push
pop
cmp
jbe
mov
inc
push
cs
mov
or
rcrl
push
fidivrl
daa
xchg
jmp
dec
dec
imul
pusha
sub
jmp
pop
ror
stc
adc
inc
push
mov
movsb
pop
xlat
cmp
insl
sub
ljmp
cli
or
enter
bound
fcomps
sub
repnz
movsl
or
or
test
mov
lds
push
jmp
leave
movsb
pop
pushf
mov
stos
or
repz
cwtl
dec
xchg
pop
mov
out
or
sub
mov
and
sub
xor
fisubl
adc
mov
int3
addr16
out
xchg
cmp
inc
fisubl
dec
xlat
sahf
sub
add
cmpsl
loopne
sarl
or
enter
fisubrl
cmp
dec
jle
jmp
pop
test
cmp
stc
loopne
rcll
idivl
and
into
jmp
xlat
mov
push
fistpl
scas
inc
sbb
or
pop
stos
mov
sub
cmp
mov
push
pop
or
in
jb
dec
popf
stos
sub
fcmove
or
fwait
jg
pusha
jge
xchg
out
rcrb
fstpt
aas
inc
dec
out
and
cmp
or
pop
sti
mov
scas
jmp
ljmp
cli
data16
loop
jge
lcall
shlb
popl
lcall
dec
add
or
inc
jp
imul
mov
mov
add
push
ja
imull
mov
mov
mov
dec
mov
cmp
push
loopne
jp
pusha
insb
stos
lock
repnz
xor
imul
pop
lahf
fdivrs
sub
or
adcl
jecxz
inc
dec
jmp
jp
cmp
or
test
ret
push
sub
ds
inc
sub
push
xor
adc
loop
mov
sub
and
sarb
dec
sub
popf
dec
or
leave
mov
cmp
add
xchg
push
test
fsub
cmp
jmp
in
mov
mov
dec
js
push
xor
movsl
jl
xor
mov
xor
je
pop
test
lods
pop
or
mov
mov
or
in
js
jno
in
lret
cli
repz
movsl
lret
insl
sub
and
cmc
aam
test
add
dec
mov
leave
ljmp
sub
scas
pop
sbb
insb
push
sbb
cli
fildl
dec
bnd
rorl
insb
mov
nop
lahf
pop
jne
cmp
adc
mov
sti
dec
xchg
icebp
xlat
testl
out
notb
mov
fldt
xchg
jle
and
push
lcall
cmpl
pop
dec
insl
lret
mov
mov
insl
cwtl
fcomps
fimull
jmp
add
jge
adc
in
mov
mov
idivb
stc
out
aaa
js
mov
movsl
mov
in
jmp
push
js
sbb
dec
cmp
xchg
sbb
lret
shlb
movsl
dec
and
cmp
pop
push
loopne
fidivrs
jl
mov
pop
sbb
pop
inc
psubq
ljmp
lods
fisubrl
cmp
xor
mov
movsb
sbb
or
or
xor
sti
pushf
jmp
jmp
fildl
cwtl
mov
cmp
jo
or
sub
daa
mov
call
js
dec
pop
pop
stc
jp
mov
ss
jle
jmp
sub
outsl
pop
or
stc
sub
or
cli
jp
fisttpl
push
sub
pop
out
sbb
adc
pop
testl
or
pop
jl
sbb
dec
cmp
xor
inc
enter
push
inc
stc
sub
decb
xlat
ficompl
jmp
jmp
sub
jne
cmp
cmp
fld
js
mov
cmp
insl
mov
sub
pop
or
sub
popf
cmp
mov
cmp
jmp
dec
jnp
sub
dec
mov
cltd
roll
jecxz
imul
arpl
sti
sub
fs
jae
sbb
inc
pushf
negl
jmp
dec
scas
cs
stos
jmp
cmp
subl
ljmp
add
sub
xchg
ret
add
mov
stc
or
or
ds
popf
mov
push
cld
or
call
sbb
cmpsl
insb
push
insb
sub
mov
lcall
insl
fsubrs
inc
int
sti
rcrb
push
lcall
ljmp
or
sub
stos
insb
insb
dec
mov
outsl
sbb
adc
dec
jmp
dec
push
and
push
pusha
jmp
int3
repnz
jno
jg
cmp
or
fisttpl
insb
das
jne
mov
dec
jmp
mov
fldt
dec
fs
insb
outsb
dec
mov
fsts
push
adc
hlt
rcl
cmp
fstps
inc
cmpsl
xchg
jmp
inc
jnp
out
adc
popa
call
mov
mov
mov
ljmp
xor
jae
mov
jnp
ss
push
and
xchg
pop
mov
repnz
fs
xchg
mov
pop
loopne
mov
pop
nop
sub
jl
enter
pop
insb
mov
push
dec
cmpsl
mov
sub
cmp
sbb
sbb
mov
imul
dec
sub
repnz
addb
or
out
or
adc
call
jl
addr16
stc
sbb
mov
arpl
mov
push
sbb
sbb
mov
sub
or
call
movsl
sub
test
loop
cmp
cmp
cmp
clc
call
lods
or
jl
in
lcall
fsubrs
insl
mov
sar
jo
sbb
outsl
mov
sbb
stc
jp
cli
or
lret
inc
loopne
xchg
fmulp
pop
mov
loop
sbb
jmp
mov
jp
std
imull
pop
mov
sub
sbb
jmp
fisttpl
test
cwtl
movsb
aaa
or
mov
icebp
pop
or
stc
adc
inc
insl
or
xlat
sbb
sub
jmp
sub
sub
dec
cli
push
mov
sub
cmp
jg
dec
dec
sbb
idivl
ss
pop
sub
insb
repz
jle
pop
inc
push
in
js
out
test
dec
cmp
cmp
dec
pop
fisttpl
lret
movsl
fnstcw
mov
sub
ficompl
lret
sbb
pop
stos
sub
ds
sbb
dec
rcr
out
js
or
cmp
pop
jmp
dec
out
negl
xchg
iret
sub
jb
pop
sub
mov
and
popf
dec
jl
stos
cmp
loopne
jns
ljmp
js
mov
in
and
inc
hlt
insb
sbb
jge
movsl
and
mov
leave
xchg
dec
pop
xor
dec
dec
xlat
cmp
or
mov
fisttpl
cltd
fisubrl
fstps
xchg
push
dec
lret
xchg
imul
stos
lcall
or
insb
icebp
mov
push
stos
daa
enter
pop
scas
adc
scas
sbb
pop
jbe
push
test
and
push
imul
rcrl
cmp
sub
pop
or
arpl
es
inc
cmp
pop
sub
rcrb
pushf
in
jno
dec
adc
pop
dec
call
loope
inc
fdivrs
push
aad
pop
loopne
pop
clc
xor
sbb
dec
inc
xchg
fidivrl
xlat
pop
call
mov
dec
popa
loopne
fs
jnp
sbb
scas
sub
insb
mov
xchg
fldcw
in
movsl
test
cli
addr16
fsubrs
or
sub
pop
sbb
dec
fldcw
ljmp
jp
fs
xor
xchg
dec
sbb
mov
mov
sti
push
shlb
push
xchg
sbb
movsb
xchg
push
add
or
or
or
mov
subb
mov
je
mov
fiadds
clc
cmp
rorl
insb
add
sub
test
cmp
fwait
sub
call
or
arpl
stos
pop
xor
sub
dec
fidivrl
pop
adc
add
push
pop
insb
lock
adc
or
inc
push
pop
fistl
leave
or
sbb
fsubs
pusha
cmp
or
sar
out
lods
stos
test
lea
cmp
lcall
dec
in
stos
or
loope
ficoml
shl
push
dec
lahf
testl
cld
leave
pop
and
push
xchg
loope
fs
adc
sahf
std
sub
punpcklwd
mov
cli
inc
decl
jns
jnp
mov
or
jl
pop
bound
jbe
cmp
mov
cmp
sub
fimull
sbb
outsb
js
pop
cmp
jl
or
fcmovne
push
adc
fnstcw
adc
mov
jmp
insb
pop
push
dec
push
mov
jp
imul
push
leave
adc
xor
notb
outsl
fildl
sbb
mov
inc
icebp
jno
lret
sbb
pop
scas
xlat
enter
jle
inc
cmp
xchg
adc
ja
push
pop
inc
xchg
imul
dec
jecxz
mov
pop
test
lods
fwait
lret
aaa
cmp
mov
or
push
xchg
in
xchg
add
test
dec
mov
out
dec
imul
sbb
fsubs
fidivrl
out
dec
adc
cmp
or
mov
dec
insb
push
imul
sti
movl
jp
leave
xchg
movsl
jne
cld
sub
ds
and
xchg
dec
out
insb
pop
or
out
sbb
mov
movsl
addr16
or
sub
cmp
mov
dec
jecxz
sub
outsl
stos
push
or
sub
mov
sub
out
dec
cmp
aaa
data16
sub
cli
cmp
sub
outsl
xor
dec
pop
jmp
divl
and
push
inc
mov
jno
dec
dec
arpl
fdivrs
cmp
push
pop
test
or
inc
jb
fcoms
sub
repnz
sub
mov
lock
cmp
push
dec
insb
insb
push
mov
in
mov
clc
jl
dec
sbb
sti
xor
mov
dec
cli
jp
dec
mov
sub
push
bound
nop
insb
fwait
pop
sub
outsb
mov
pop
dec
sbb
fldl
sub
dec
jg
xchg
sbb
mov
adc
fidivrs
push
pop
shlb
in
push
fldln2
sub
fiaddl
dec
jnp
lret
cmp
push
or
cmp
loopne
lret
rol
mov
or
cmp
ret
testb
mov
pop
les
sbb
orb
sub
fstps
mov
mov
mov
jnp
mov
cmp
mov
jle
jp
icebp
and
push
cmc
out
pop
xchg
icebp
and
mov
cmpsl
adc
sbb
xchg
push
stos
movsl
cmp
and
pop
clc
ljmp
dec
pop
or
cmp
insl
inc
mov
cmp
inc
dec
cmp
fsubrs
pop
popa
push
sbb
add
sub
dec
nop
hlt
ficompl
and
cmp
das
sub
subl
sbb
stc
imul
push
or
call
clc
push
pusha
lcall
mov
pop
pop
xor
add
das
push
pusha
xor
push
adc
inc
mov
sarb
sbb
es
leave
movsl
fildll
xchg
mov
mov
sbb
sbb
int
repz
imul
stos
xchg
or
stos
ss
out
pop
cld
jl
out
dec
sti
in
ja
test
lcall
sub
jmp
dec
mov
mov
cmpsl
ljmp
sub
aas
std
mov
adc
sub
shl
movsl
aam
mov
mov
pop
cmpsl
sub
insb
in
add
jge
ficompl
leave
sub
sub
ljmp
sub
sub
test
add
aam
pop
loopne
mov
add
or
out
mov
inc
mov
dec
cld
rdpmc
fisttpl
and
inc
out
dec
push
add
xor
jp,pt
sub
dec
loop
sub
cmp
add
fdivr
faddp
out
add
fsubrl
daa
jmp
dec
xchg
jbe
das
shr
out
sti
lcall
jmp
jmp
call
dec
dec
push
sbb
cmp
or
xor
je
add
je
or
shll
add
fadd
inc
dec
sahf
insb
movsl
mov
leave
decl
je
leave
xchg
shrb
lcall
lds
xchg
sbb
int3
in
add
sbb
add
les
add
sub
add
jo
ljmp
neg
mov
sub
xchg
pop
dec
lret
cli
push
in
mov
xchg
mov
xchg
push
pop
jae
jmp
mov
movsl
mov
cs
mov
cmpb
mov
pushf
dec
adc
sub
scas
or
stc
fsubrl
gs
fistpl
mov
inc
jp
jo
aaa
lods
ret
in
sbb
mov
or
and
sbb
or
pop
cmp
in
mov
clc
mov
dec
idivl
shrb
xlat
popl
call
clc
dec
mov
movsl
dec
sti
insb
inc
mov
rcrb
sbb
enter
xchg
jmp
mov
mov
lcall
mov
sbb
fldl2t
sub
push
jbe
cmpsl
jb
stos
idivl
mov
mov
pop
pop
dec
pop
xor
clc
sub
dec
cmp
or
ljmp
loope
mov
mov
or
sub
pop
pop
push
cmp
sbb
out
dec
mov
addr16
enter
leave
pop
cmp
pop
fisubl
or
jle
pop
sahf
call
jae
leave
cmp
daa
cmp
push
dec
fcomps
push
stos
and
sbb
sahf
jmp
jp
das
sbbb
decl
push
mov
adc
jmp
in
dec
pop
pop
stos
std
sub
stc
sbb
std
test
push
mov
stc
loopne
mov
enter
sub
insb
sbb
pminub
nop
sub
sub
mov
pop
jns
mov
cmc
in
mov
jl
or
sub
shr
cltd
daa
fwait
or
leave
sbb
lret
mov
dec
push
shrb
jl
sub
sbb
mov
mull
divps
push
ljmp
out
mov
mov
cs
shlb
out
xchg
insl
xor
jmp
mov
movl
push
xchg
or
sti
call
sbb
mov
or
sar
mov
sbb
sbb
jmp
push
je
sbb
arpl
lcall
sub
jns
mov
insl
mov
imul
js
cmp
scas
dec
jp
sub
cmp
mov
pop
in
loopne
push
add
pop
pop
sbb
clc
outsl
cmc
out
sub
sbb
call
call
xchg
in
sti
cli
add
jmp
cmp
pop
ljmp
addr16
sbb
cmp
dec
cmp
pusha
mov
std
fimull
out
sbb
pop
std
out
dec
push
xor
mov
mov
sub
dec
mov
add
or
leave
enter
dec
and
jmp
pop
pop
sar
mov
neg
jmp
cli
dec
pop
pop
push
lret
jge
out
pop
das
push
dec
and
outsl
dec
sbb
sub
js
lret
out
jmp
dec
loope
sarb
fisttpll
lcall
cmp
or
xchg
test
cmp
scas
mov
push
enter
gs
cli
adc
push
in
pop
pop
popa
cmp
in
pusha
out
cmp
fcmovnu
pop
cmpsl
cmp
jge
clc
pop
cwtl
test
fsubrp
pop
ficomps
jbe
fdivrs
mov
sub
pop
xlat
out
push
dec
mov
in
push
mov
pop
fmuls
test
pop
dec
xchg
leave
cmp
push
mov
lret
outsl
xchg
in
push
in
imul
test
inc
inc
mov
pop
fmuls
mov
jl
push
pop
jp
pop
js
pop
or
call
sti
leave
and
push
sbb
js
sarl
movsl
into
sbb
in
stos
sbb
push
cmp
leave
cmp
pop
cli
add
cmp
cmc
inc
xlat
cwtl
xchg
push
cmp
fcomi
or
mov
enter
scas
pusha
or
arpl
dec
pop
mov
push
add
jmp
mull
lcall
cmp
push
adc
loop
sbb
fs
shl
cmp
popa
sub
fisttpl
jmp
stc
insb
xchg
jmp
stos
mov
js
sbb
jmp
pop
iret
mov
cs
mov
mov
cmp
scas
icebp
jmp
jecxz
jmp
in
cmp
or
fidivrl
jl
outsl
shr
cwtl
dec
ljmp
cmp
push
inc
cltd
fcomps
lahf
imul
pop
fincstp
out
call
dec
rcrl
jb
xlat
lcall
mov
sbb
lahf
fldt
stos
leave
push
sub
push
pusha
pop
cmp
pop
xor
mov
fisubrs
ds
or
sbb
imulb
je
xchg
movsb
push
jmp
pop
dec
cli
cmpsb
icebp
mov
imul
mov
or
sub
test
std
sbb
pop
jmp
aas
enter
mov
jmp
sets
in
cmp
push
dec
loopne
sbb
and
movsl
pop
sbb
negb
js
and
outsl
mov
or
or
pop
mov
loope
jmp
insl
cmp
mov
dec
test
call
adc
xlat
sbb
xchg
cmp
cmp
mov
push
and
jb
mov
cmpsl
add
lods
dec
push
jnp
sarb
or
xchg
mov
ja
mov
dec
sub
xchg
aas
cltd
ljmp
jp
out
xor
sbb
outsb
dec
push
scas
xlat
dec
scas
sub
or
pop
or
sbb
sbb
movsl
pop
xlat
stc
dec
jb
mov
inc
xchg
sub
gs
pop
sub
mov
mov
outsl
mov
or
add
and
ljmp
orb
and
lret
mov
push
or
ljmp
cld
in
in
pushf
clc
call
mov
pop
add
jl
lds
push
stos
and
or
inc
or
dec
and
push
sbb
sbb
jo
xchg
inc
out
inc
jbe
lods
pop
inc
fwait
dec
cwtl
in
pop
lret
pop
sbb
dec
or
pop
pop
sub
sub
insb
cmp
push
aam
xor
xchg
std
or
mov
mov
adc
fldt
sbb
push
fidivrl
mov
movsl
call
outsl
mov
jo
pop
sbb
pop
mov
cmp
pop
xorb
out
sub
std
fisubrl
push
sub
push
jl
je
scas
cmp
outsl
mov
lret
lods
pop
divl
xor
rcr
jmp
xchg
jmp
sbb
mov
mov
dec
das
xchg
sub
and
mov
imul
stc
xorl
sub
inc
or
inc
clc
pop
leave
cmp
lds
push
das
mov
fstps
adc
pop
daa
jge
inc
gs
sub
loope
mov
pusha
cld
or
pop
mov
ja
int
dec
ljmp
mov
scas
test
push
sub
jle
dec
clc
adc
sub
out
xlat
lret
ljmp
clc
cmp
sbb
jmp
pop
lcall
shll
jno
pop
pop
pop
fstps
pop
adc
dec
insl
push
pop
xor
bound
in
js
outsb
cmp
in
xchg
out
outsb
sbb
ds
pop
push
out
pop
mov
cli
dec
sub
fstps
mov
or
xlat
push
stos
jmp
clc
mov
clc
js
pop
mov
idivb
sbb
cmp
sbb
loope
push
xchg
rorb
mov
cmp
fistpl
pop
test
mov
inc
sub
insl
hlt
mov
push
inc
mov
leave
js
aad
or
fdivrs
call
sub
js
pushw
jmp
xlat
fstps
mov
sbb
stc
pop
or
pop
add
jmp
sub
dec
int3
fmuls
ja
fdivr
inc
out
pcmpgtd
adc
add
jl
add
cs
jb
mull
sub
sti
subb
stos
jecxz
push
cmp
mov
or
fcompp
mov
sub
sub
pusha
add
or
cli
mov
daa
add
movsl
push
ljmp
mov
popf
sti
fdiv
insb
pusha
pop
jp
rcrb
push
jb
push
orb
addr16
cmp
or
or
test
pop
lret
movsb
dec
push
add
in
or
dec
test
sub
fstps
sbb
mov
enter
add
sub
pop
ljmp
mov
cmp
jbe
movsl
add
aas
mov
cli
push
fcmovne
cmp
sbb
xor
pop
xchg
jne
dec
add
push
das
mov
in
fisubl
pop
in
leavew
adc
inc
lea
enter
sub
pop
lretw
sbb
jl
inc
dec
cmp
xchg
pop
stc
jmp
mov
push
inc
fisttpl
ficoml
adc
or
dec
fldcw
dec
inc
dec
test
cmp
sub
xor
ljmp
jl
scas
jg
cmp
or
pop
bnd
inc
cmp
ja
int3
fs
pop
adc
mov
fmuls
cs
push
pop
jo
fcomip
std
mov
fmuls
cld
cmp
stc
outsl
cmpsb
ljmp
mov
pop
out
add
stc
jnp
fisttpll
jp
int
sub
test
dec
cwtl
sub
or
lcall
lret
fmuls
sbb
xor
cmp
inc
inc
push
nop
push
popf
cmp
int
adc
cmp
js
cmc
pop
mov
cmp
push
pop
jl
mov
js
adc
popa
or
dec
or
imul
mov
jp
ficomps
fmuls
lret
sub
pop
push
daa
lret
iret
aaa
loop
dec
insl
mov
enter
imul
sub
sub
inc
lretw
or
movsl
xchg
enter
popf
xchg
dec
pop
cmp
stos
cli
jmp
mov
jmp
mov
loop
pop
ficoml
loope
sub
sbbl
xchg
push
xchg
in
adc
push
mov
push
cwtl
mov
lods
cwtl
push
sbb
in
mov
push
pop
jmp
stos
stc
or
dec
sbb
xchg
loopne
sub
nop
mov
cmp
cvtpi2ps
pusha
mov
imul
data16
mov
das
movsl
sub
pop
or
sub
cmp
sbb
gs
cli
test
icebp
or
jne
in
cmp
testl
rcr
sub
xchg
mov
testl
jne
test
cmp
xlat
repz
or
jmp
mov
lret
mov
roll
lods
dec
mov
fprem1
push
fcmovb
inc
out
sbb
call
sub
sbb
sub
stc
iret
dec
fistpl
lods
mov
lret
pop
cmp
aaa
stc
add
insb
mov
clc
lods
cwtl
leave
mov
mov
or
scas
repnz
pusha
fmuls
dec
sbb
push
dec
mov
jbe
sbb
fsubr
imul
inc
das
mov
insl
je
pop
sti
ficoml
push
out
cmp
pop
xor
xlat
out
xor
pop
or
jmp
push
dec
sbb
dec
ficompl
and
push
ljmp
mov
cltd
sub
fs
lock
pop
enter
sbb
cld
fisubl
cmp
pop
js
scas
push
pop
push
jnp
lods
lret
bound
arpl
fidivrl
or
testb
das
adc
cli
repz
dec
mov
push
adc
outsl
sbb
jmp
ljmp
cmpl
push
or
mov
xchg
or
out
dec
imul
test
or
aaa
mov
fcmovnu
dec
cmp
dec
cmp
or
mov
scas
xchg
push
into
sub
repnz
in
sub
cmp
inc
mov
fwait
mov
enter
movsb
sbb
loopne
shr
cmp
sbbl
inc
fcmovnu
inc
jl
inc
lret
push
lock
or
sub
ret
mov
lcall
push
pop
dec
sti
sub
stos
and
cmp
movsl
addr16
fnstcw
xor
and
push
cmp
loopne
or
cmp
dec
pop
xor
sbb
cmp
je
ljmp
rol
ret
enter
pop
jb
and
movups
insl
icebp
movsl
jle
sub
scas
iret
mov
cli
sub
insb
shlb
enter
xlat
lcall
addr16
or
jp
sbb
icebp
or
dec
push
ljmp
push
idivl
push
out
lds
pop
aad
inc
adc
cmpsb
cwtl
lret
mov
mov
insb
dec
jmp
gs
mov
outsl
leave
fptan
mov
jp
xacquire
fwait
cmc
cmp
fldcw
pop
sbb
dec
test
sti
ljmp
push
mov
dec
sub
mov
movsb
or
leave
insb
pop
sub
clc
mov
test
or
dec
sbb
mov
clc
pop
insb
jmp
pop
cltd
cwtl
call
lcall
sub
pop
insb
test
mov
popa
decl
cmp
out
mov
xor
sbb
jne
xchg
and
push
in
dec
dec
jmp
ret
mov
in
stc
insb
sub
cmp
sbb
movsl
hlt
flds
bound
sahf
pop
dec
cmp
pop
and
cmc
cmpsb
test
fildll
call
sti
push
mov
or
pop
stc
jne
int
lods
mov
cwtl
aaa
or
add
cmpsl
stos
and
mov
aad
fdivrs
cmp
xor
imul
outsb
in
sbb
mov
clc
sbb
cmp
sbb
cmpsb
movsl
int3
in
xor
jno
ds
push
jp
push
jg
ret
fistps
sbb
push
cli
fs
lods
stc
insl
ljmp
in
xlat
sub
jp
dec
push
pop
mov
and
ficompl
das
jmp
sti
repnz
fdivrs
loopne
sub
push
sbb
jp
cmp
insb
jbe
add
movsb
lods
cmp
push
mov
cwtl
sbb
les
xchg
out
xor
movsb
mov
cwtl
xchg
fcoml
mov
lret
jo
fstp
jle
inc
call
cmp
push
cmovs
movsl
sub
or
or
jmp
negl
mov
jge
leave
cli
cmp
insb
out
addr16
pop
dec
sub
test
sub
mov
xlat
dec
dec
lcall
pushf
and
jmp
cwtl
clc
or
movsl
stos
dec
in
mov
call
call
mov
jp
std
inc
pusha
ds
in
xchg
cmpsb
xchg
fisttps
sub
pop
cmp
cwtl
mov
xchg
adc
mov
mov
or
cmp
fisubl
stc
int3
leave
sub
negb
push
or
sbb
ljmp
jp
push
mov
xlat
testl
and
mulb
jbe
lds
push
stos
iret
dec
ret
inc
cmc
sub
jmp
ret
mov
mov
std
insb
lahf
xor
lcall
sbb
loope
fwait
sub
jmp
sbb
ljmp
sub
xor
adc
pop
sahf
idiv
cmp
xchg
dec
repnz
out
dec
sub
fnstcw
xchg
das
pop
cmp
cltd
sti
cli
pop
xchg
ds
out
lds
mov
lret
enter
push
test
cmp
fistl
sbb
xor
inc
push
pop
fs
call
jae
imul
push
neg
xor
cmp
into
mov
dec
imul
inc
sub
dec
mov
ss
lcall
stc
push
ljmp
clc
sbb
push
lcall
sti
push
dec
mov
push
cmp
push
push
popf
inc
enter
sbb
orb
aad
sub
movsb
pop
shl
test
mov
negb
shrb
pop
test
fimull
out
cld
inc
les
in
movsl
mov
subl
sub
test
rcrl
dec
inc
xchg
bound
mov
xchg
imul
lods
sbb
leave
add
lods
push
cmc
cli
jp
ljmp
bound
pushf
sbb
pusha
sahf
push
mov
dec
rolb
or
out
jnp
fsub
sahf
pop
pop
fsincos
pop
push
mov
ds
mov
bsf
or
mov
stos
mov
out
xor
sub
lret
in
xchg
stos
dec
shrb
sub
mov
aad
sbb
add
dec
pop
add
imull
jecxz
cmp
mov
fldcw
adc
es
leave
stos
ret
test
adc
movsl
stos
imul
aam
mov
movsl
xchg
lods
dec
sti
mov
rcl
movsl
sbb
xchg
movsl
lret
mov
ljmp
cmp
dec
lods
mov
movsl
mov
aad
cltd
cmp
dec
rcr
mov
mov
or
inc
cmp
stos
movsl
dec
test
lds
mov
mov
sahf
mov
mov
sbb
ret
lods
dec
les
lret
push
test
sbb
rorb
pop
sahf
pop
xlat
data16
sbb
leave
decb
dec
fstps
or
dec
mov
sub
orl
xor
fimull
mov
ret
dec
inc
lahf
imul
out
push
lret
lods
popa
shll
dec
xlat
leave
sub
js
jl
fimull
cmp
jg
xor
fldt
mov
adc
lock
and
je
pop
lahf
cmp
sub
mov
or
sbb
leave
cmp
les
push
push
push
dec
push
cmc
ja
pop
enter
out
fsts
cmpb
sub
ljmp
and
or
fldcw
call
jne
jbe
fisubrl
ljmp
sbbb
pop
xlat
sbb
sub
mov
dec
and
in
int3
xor
fucomip
push
pop
mov
or
int3
xchg
sbb
sti
adc
xchg
or
sbb
js
insl
insb
pop
ficompl
push
jg
cld
jmp
ljmp
push
mov
jl
sbb
testl
cmp
out
sbb
mov
lock
jmp
out
mov
ljmp
enter
cmp
pushf
test
mulb
stos
jne
cli
cli
mov
addl
adc
push
mov
mov
and
iret
sbb
cmp
dec
cli
push
adc
pop
push
fmuls
lret
sbb
mov
sub
sub
lock
stos
nop
mov
leave
or
cmp
push
iretw
xor
sub
dec
cmp
xorl
fnstcw
jge
into
cmp
in
insl
clc
sub
jp
movsl
lcall
dec
sub
stc
call
ret
sbb
cmpsb
aas
cwtl
or
jle
cmp
enter
addr16
imull
mov
insb
dec
out
dec
sub
mov
fisubrl
call
leave
pop
pop
push
pop
pop
inc
shl
mov
push
sti
mov
popf
mov
in
ljmp
and
dec
cmp
test
gs
test
mov
adc
jmp
dec
mov
dec
movsb
pop
outsl
sti
dec
sub
sbb
sbb
or
lret
sbb
sub
ljmp
lcall
call
clc
punpckhbw
dec
sbb
stc
mov
cmp
or
stos
cwtl
sub
mov
pop
roll
outsb
jle
mov
inc
js
sbb
movsl
mov
inc
shlb
cmp
gs
mov
stc
or
popa
fildl
jge
cmpl
movsb
cmp
ljmp
insb
dec
xor
stos
lret
lret
fldcw
cmc
aad
in
adc
sti
mov
pop
fmul
fisubrl
fnstenv
sti
data16
jmp
or
mov
fimull
jg
dec
push
xchg
pminsw
xchg
mov
ljmp
mov
fmuls
xchg
sub
daa
push
push
pop
dec
pop
push
lcall
push
dec
arpl
es
jl
std
gs
mov
icebp
push
sti
dec
stos
mov
clc
sub
cwtl
test
aas
enter
dec
lcall
add
push
add
in
ljmp
mov
jle
fisubrl
into
in
fildl
lds
enter
mov
dec
push
mov
pop
lret
jp
cmp
shll
or
sti
pushf
ds
stc
fmull
pop
dec
testb
sub
ja
mov
cmp
sub
lods
js
into
sbb
in
cwtl
das
push
call
stos
fadds
data16
or
test
das
mov
insb
aaa
mov
dec
pop
cmp
out
or
lret
dec
mov
shrb
jl
gs
stc
fs
xor
clc
outsb
dec
sbb
push
fmuls
aad
sub
ljmp
and
pop
ret
sub
sbb
jge
push
inc
or
push
scas
icebp
sbb
lcall
mov
dec
clc
sub
loop
push
push
pop
sub
aaa
cmp
outsb
push
hlt
fstpt
jmp
fisttpl
add
mov
aam
int3
popa
jo
adc
subb
lock
jns
pop
imul
insb
or
pop
push
sub
dec
bnd
adc
mov
sbb
aaa
outsl
stc
cmp
pop
repnz
loopne
sbb
in
jo
mov
mov
mov
mov
sbb
insb
jmp
fnstsw
imul
add
push
inc
xchg
arpl
jmp
cwtl
imul
pop
push
or
push
cmp
jmp
push
sub
sub
mov
or
pop
mov
sbb
sub
or
jmp
mov
dec
ljmp
mov
mov
jbe
pop
out
insb
repz
mov
pop
or
dec
push
in
dec
push
movsl
pop
test
idiv
insb
test
cwtl
jecxz
in
jl
clc
sub
cmp
mov
mov
or
aas
mov
repz
or
aad
sub
pop
fincstp
or
movl
xchg
les
cmp
insb
test
jmp
mov
shll
stc
mov
repz
sub
sti
jmp
push
cmpl
ljmp
push
pop
or
stos
stos
ljmp
jp
jns
sub
dec
call
cli
fs
data16
dec
je
hlt
imul
enter
mov
jmp
add
cli
lret
pop
mov
mov
and
cmpl
es
leave
sub
and
leave
sub
jbe
sub
outsl
aaa
cmp
cmp
fistpl
addr16
jecxz
lods
idivl
lods
jp
or
add
mov
idivb
mov
mov
movsl
jmp
pop
jmp
pop
fwait
dec
mov
xlat
orl
daa
js
ficompl
or
xor
test
lcall
pop
dec
cmp
pop
pop
imulb
sub
fisubrs
enter
stc
repz
jl
sub
jmp
pusha
sub
enter
jmp
mov
pop
pop
pop
insb
xlat
sbb
sti
dec
leave
neg
jle
sbb
cwtl
jmp
sbb
mov
xchg
out
into
dec
cmp
or
add
stc
sub
jnp
movsl
clc
cmp
jmp
cvtdq2ps
mov
rorl
dec
dec
pop
das
stos
inc
or
xor
pop
push
insb
fcomp
or
lea
lods
jle
sbb
sarb
mov
sbb
mov
dec
lret
pop
ljmp
pop
out
in
aad
sub
pop
lods
fimull
sub
push
sti
xchg
enter
mov
lahf
push
inc
mov
insl
in
fdivrs
hlt
sub
mov
jmp
cmp
jecxz
stos
pop
dec
rcr
stos
cmc
ljmp
sbb
cmp
xchg
or
dec
std
cwtl
fstpt
scas
inc
jge
fsub
cmp
fnstsw
insb
jnp
pop
fs
stc
iret
sub
pop
lods
aaa
jge
mull
jecxz
pop
jl
or
cmp
sub
call
popa
cwtl
dec
sub
jno
or
leave
pop
out
lret
mov
fstpt
jle
mov
mov
repz
pop
cwtl
mov
test
fiaddl
into
sahf
add
fimuls
sub
push
jmp
sbb
mov
pusha
sti
fdivrs
adc
mov
mov
cwtl
dec
or
dec
jecxz
rcrb
sub
dec
imul
sbb
ljmp
lcall
push
and
fwait
xchg
jmp
add
dec
or
jg
xchg
fstpt
leave
mov
add
jmp
in
inc
jo
loopne
sub
dec
pop
or
xlat
pop
sub
mov
stos
testl
lret
push
mov
mov
not
inc
sbb
popa
mov
mov
decb
cmp
or
js
dec
inc
cmpsl
lahf
sbb
sarb
push
or
repnz
xchg
mov
jecxz
sub
pop
ds
js
adc
sti
cmp
dec
aas
cmp
je
leave
pop
pop
sbb
test
inc
mov
dec
stc
imul
sub
or
divl
mov
sub
out
sub
das
call
mov
push
push
sti
pop
or
push
shrb
push
mov
xor
jl
sbb
arpl
mov
push
mov
pop
cmpsl
jo
jg
sbb
outsl
sbb
or
mul
in
cvtps2pd
mov
sbb
enter
fdivrs
enter
imul
cmp
jp
mov
jne
loope
and
out
mov
scas
mov
dec
lahf
movsl
xlat
pop
scas
pop
inc
mov
mov
push
mov
out
clc
test
aaa
cmpsl
dec
sbb
repnz
fisttpl
jns
aas
test
pop
sub
or
mov
pushf
repnz
movsl
pop
pop
sub
loope
mov
jl
dec
sub
stc
cmp
aas
js
sub
xchg
dec
push
inc
dec
cmp
push
mov
sbb
jp
jp
arpl
sbb
stc
pop
push
xor
mov
mov
aas
xchg
stos
dec
mov
xor
arpl
xor
jo
mov
jae
add
sub
sti
out
mull
jmp
sub
dec
sti
sahf
or
icebp
inc
js
xchg
mov
cs
inc
dec
sti
sub
add
insl
xchg
nop
adc
lahf
push
es
cli
inc
pop
sbb
push
outsl
loopne
or
mov
pop
out
imul
std
dec
mov
cmp
ficomps
inc
jb
mov
push
ljmp
cmp
lret
adc
mov
jbe
hlt
js
dec
in
in
mov
fwait
daa
cmp
or
lods
imul
sbb
sub
test
gs
pop
jns
movsb
pop
inc
xor
mov
fdivs
call
pop
sub
jnp
or
cwtl
pop
negb
insb
xchg
jae
fiadds
push
in
enter
adc
outsb
xlat
cwtl
and
lods
jmp
sbb
enter
lret
aad
dec
sub
stos
sbb
lea
and
dec
dec
push
enter
cmp
gs
clc
jmp
jo
imul
pop
out
add
jge
pop
sub
jae
xchg
in
loop
mov
xchg
lcall
imul
mov
stos
or
mov
cmc
test
pop
xor
xlat
jbe
testl
inc
adc
test
dec
mov
pop
gs
sti
mov
pop
dec
gs
mov
jmp
mov
sub
pop
sarb
loop
xor
pop
fists
add
xchg
call
insb
or
xchg
dec
fwait
cmp
xchg
cmp
add
lret
out
xsha1
cmpsb
mov
fs
xor
imul
jno
fisttpl
mov
jbe
dec
js
pop
pop
fldt
and
sbb
mov
mov
lods
inc
xchg
mov
add
push
dec
jne
or
push
ja
sub
push
mov
push
sbb
ds
stc
adc
cmp
pop
or
ficomps
pop
lahf
lcall
or
cmp
movsl
add
mov
jae
mov
dec
aaa
sbb
out
fsubr
out
mov
mov
pop
xchg
jmp
cs
add
or
jo
xchg
push
popa
fistpl
fsubr
stos
push
in
mov
dec
or
mov
xchg
push
negb
imul
mov
or
testl
fldt
leave
dec
in
fs
out
xchg
outsl
sub
enter
dec
jecxz
fs
inc
lds
dec
lret
dec
cs
insb
jno
mov
movsl
sbb
dec
aam
xchg
mov
cmp
aas
cmpsb
pop
dec
ret
jmp
fcmovnb
or
or
xchg
pop
pop
xor
add
push
pop
in
lock
daa
pop
jae
lods
test
stc
mov
adc
inc
divb
mov
push
sbb
testb
push
sbb
mov
leave
ds
leave
jecxz
jmp
shrl
mov
push
iret
sub
mov
fisubrl
stos
rorb
xor
sub
add
mov
sub
call
mov
mov
scas
inc
dec
test
clc
xchg
jle
or
and
pop
pop
fstps
adc
jnp
jbe
pop
inc
or
int3
negb
jecxz
lods
ficompl
fwait
in
insb
dec
ljmp
or
push
outsb
lret
jp
inc
mov
lea
movsl
stc
xchg
xlat
jmp
mov
jmp
dec
cltd
mulb
negl
xlat
mov
xor
xchg
pop
dec
fcomp
fstpt
ds
cmpsb
stos
pop
int3
jl
mov
jmp
into
addr16
dec
sub
mov
jl
cs
lds
fsubrp
pop
fdivrs
and
lret
sub
sbb
add
fucomp
enter
popf
ljmp
pop
mov
and
mov
sbb
xor
jmp
sbb
jns
dec
rorw
movsl
or
pop
iret
or
sti
clc
cwtl
xlat
sbb
xchg
cli
dec
cmpl
mov
in
ds
sbb
sbb
in
lods
jmp
mov
dec
xor
pop
xchg
repnz
jl
xchg
mov
shrl
stc
sbb
and
lods
jmp
mov
cli
cmp
in
jmp
lret
sbb
inc
sti
out
xor
in
xchg
fsubrp
cmp
cmp
sub
ja
cwtl
ja
repz
pop
or
adc
push
sbb
insb
or
sub
rcrb
fisubrl
stc
fisttps
idivl
adc
sbb
pop
nop
in
push
mov
dec
int
pop
call
cmp
jp
dec
push
lcallw
addl
stos
movsl
or
into
and
sbbb
mov
xor
into
clc
imul
dec
sbb
ja
fidivrl
jl
and
pop
sub
or
fmuls
inc
cmp
and
imul
pop
sar
mov
call
pop
arpl
lea
js
jp
dec
ds
lahf
pop
je
jne
jns
lods
mov
mov
fstpt
jae
mov
or
and
mov
or
mov
sbb
popa
cs
popw
cmp
and
sbb
xor
jbe
sub
pop
inc
in
xchg
jbe
jmp
dec
lret
int3
pop
mov
repnz
pop
push
dec
dec
push
pop
cmp
mov
push
push
jmp
cmp
movsl
negl
mov
jg
aas
jmp
inc
outsl
ljmp
data16
in
jle
insb
mov
cmp
sahf
std
inc
popa
cmpsl
cmp
fmuls
cwtl
sbb
mov
cmp
mov
dec
cmp
clc
jmp
mov
or
xlat
jecxz
fucomip
mov
leave
pop
inc
inc
push
inc
js
imul
pop
cwtl
push
imul
xchg
and
insb
jmp
call
clc
out
pop
push
xchg
sub
mov
dec
mov
sahf
add
das
popa
mov
mov
stos
sbb
mov
or
dec
inc
outsl
fcmovnu
pop
sub
out
jmp
mov
call
mov
mov
dec
sub
cmp
imul
sbb
jp
pushf
cmp
out
adc
cmp
daa
jmp
enter
cld
mov
xchg
push
sbb
insb
xchg
push
cmp
pop
xor
or
inc
stos
dec
dec
enter
cmp
insb
test
lods
pop
popf
dec
sub
xor
jmp
cmp
sti
loopne
sub
add
aas
std
or
dec
xchg
ficoms
cli
clc
aam
divl
mov
out
sti
xlat
test
shll
call
cmpb
ljmp
mov
nop
lods
mov
cmp
fnstcw
lahf
movsb
dec
movsb
jmp
lock
cs
std
mov
push
clc
jge
addr16
cmp
out
pop
cmp
stos
data16
mov
in
data16
xor
ljmp
mov
daa
xor
cmp
jg
stc
push
out
mov
sbb
xor
cwtl
or
cmp
mov
lcall
pop
int
sbb
cmp
insb
push
fdivrs
scas
test
jns
cli
lret
pop
test
or
mov
lahf
insb
cmp
pop
insw
aas
jmp
mov
jmp
jnp
out
lahf
push
sbb
clc
jl
testl
jmp
pop
lds
jge
loopne
ljmp
out
or
sub
mov
pop
or
mov
sti
mov
or
dec
jg
push
dec
sub
or
stos
sbb
fidivrs
dec
pop
mov
mov
or
sbb
popf
xchg
outsl
fcmovnbe
dec
jp
std
lret
lods
push
dec
stos
dec
sub
xor
push
arpl
or
sbb
inc
call
jbe
push
ficompl
cmp
fs
mov
rcrb
or
mov
sti
dec
or
ficomps
push
outsl
or
dec
or
fidivrs
or
mov
or
inc
loope
arpl
pop
sbb
pop
mov
pop
mov
sbb
insb
xlat
cmp
insl
ja
cmpb
mov
clc
fwait
mov
fmul
cwtl
lret
ljmp
lret
cmc
lcall
dec
cmp
push
sbb
pop
fldenv
sbb
enter
dec
imul
scas
sub
enter
jecxz
lea
jmp
mov
outsl
mov
bnd
pop
arpl
and
mov
sbb
jmp
inc
sub
or
cmp
push
or
sarb
or
sub
int
call
mov
pop
mov
xchg
in
aaa
fldt
pusha
pop
mov
pop
push
mov
je
mov
testl
or
stos
or
xlat
fldcw
leave
mov
test
mov
repz
sti
jmp
insl
rol
stos
sbb
out
sbb
or
sti
test
push
xchg
iret
and
pop
jecxz
test
mov
jmp
data16
sub
dec
js
mov
add
pop
mov
pop
lahf
adc
mov
leave
mov
pop
fmuls
push
sbb
fidivrl
out
cmc
pusha
movsb
jge
dec
or
sbb
stos
popa
icebp
sub
std
fistpl
xchg
dec
fimull
cli
js
and
icebp
repz
fwait
pop
cwtl
in
xchg
pushf
mov
dec
mov
dec
cli
jl
push
dec
lret
sarl
stos
jmp
jnp
andb
out
mov
insb
jns
and
in
lds
mov
inc
fs
js
cli
fistpl
cmp
cmp
test
mov
call
insb
push
or
lea
and
sbb
or
call
inc
pushf
mov
ss
adc
push
dec
lret
or
fcom
and
dec
popa
cmp
cmp
or
test
sbb
jp
lcall
ret
jmp
sbb
push
out
add
stos
lock
jl
iret
outsl
dec
sti
dec
cmp
jg
xchg
pop
pop
mov
and
jno
cltd
or
inc
pop
imul
pop
cwtl
pop
js
arpl
call
dec
sbb
mov
clc
fsubrs
sub
sub
lahf
clc
ficomps
enter
test
popa
sbb
mov
leave
cmp
or
pop
sub
aaa
and
addr16
clc
sbb
push
mov
cmpsb
inc
cmp
xor
cmp
std
sbb
ret
dec
jl
dec
sbb
ret
pop
pop
push
imul
xlat
or
pop
jmp
xchg
cmp
mov
xor
xchg
shl
enter
push
dec
sub
insl
jbe
test
into
sub
in
sbb
insl
xchg
sub
pop
andl
cli
daa
sub
mov
sub
pop
test
andb
push
mov
mov
push
popf
mov
dec
sub
mov
icebp
dec
nop
neg
pop
arpl
xor
ja
sub
pop
jl
jmp
lods
pop
sbb
mov
cmp
jp
xchg
testl
loope
in
pop
jmp
xor
js
enter
arpl
out
stos
sti
in
pop
sbbl
bound
in
inc
in
mov
pop
dec
cli
enter
out
or
jp
jmp
lcall
js
xchg
repnz
inc
sbb
pop
leave
sti
pop
or
pop
sbb
cwtl
insl
gs
sbb
fdivr
stos
xor
mov
pop
test
jp
inc
mov
inc
loopne
sti
cmpl
sbb
out
pop
mov
out
push
inc
dec
jp
test
cmp
or
stc
mov
insb
fsubr
out
and
idiv
pop
adc
ss
fcoms
fisttpl
add
sub
pop
jmp
mov
push
sbb
xchg
ljmp
or
jmp
cmp
or
fnstcw
inc
fidivl
daa
mov
jo
jmp
dec
imul
sbb
scas
add
sbb
mov
pop
leave
cs
pop
fisttps
sti
insb
pop
or
sbb
inc
sarb
icebp
mov
clc
fsqrt
sarl
adc
dec
int
movsl
imul
mov
aas
pop
cmp
sbb
js
test
push
jmp
sub
xchg
pop
sub
push
adc
leave
jmp
xor
or
lods
ljmp
inc
cli
push
add
bound
or
imul
sbb
clc
es
sti
iret
or
or
dec
jecxz
lea
sbb
loope
outsl
fisubrl
pop
out
clc
cmp
jno
mov
pop
pop
fdecstp
insb
sub
pop
mov
out
pop
pop
mov
rcrb
in
or
insb
call
add
leave
cli
xlat
pop
sti
dec
adc
sbb
and
pop
inc
jbe
sub
ljmp
loopne
xchg
jmp
xor
xlat
pop
mov
lret
ds
daa
push
iret
ficoms
or
or
mov
ljmp
cmp
out
mov
dec
add
push
jle
jmp
stos
sub
es
call
leave
popf
fcompp
mov
sub
pop
jmp
pop
pusha
insb
or
mov
aad
fistpl
cmp
sub
jecxz
das
dec
pop
lret
inc
cli
sbb
jmp
into
jecxz
sti
sbb
xchg
outsl
mov
and
mov
stos
cmp
stos
stos
xchg
ljmp
or
ljmp
dec
sub
push
mov
mov
pusha
clc
adc
insl
mov
or
ljmp
cmp
push
push
in
dec
pop
dec
mov
call
add
scas
cs
jmp
lods
sbb
shlb
pop
out
loopne
vmread
cwtl
test
mov
cmp
outsl
insl
iret
mov
sub
sub
imull
or
cmc
sub
scas
cmp
cmp
xor
shl
sub
dec
cmp
cmpsl
pop
mov
dec
pop
data16
sub
xor
sub
aaa
test
lcall
out
push
jl
addr16
xlat
or
mov
mov
lahf
sub
fs
sbb
orb
or
shrb
sbb
test
or
jo
pop
mov
testb
mov
hlt
or
loope
xor
jl
and
pop
mov
jmp
or
or
in
mov
and
mov
imull
add
lods
ja
xlat
jl
dec
mov
lods
outsl
jmp
pop
dec
pop
sahf
push
insb
jl
xor
pop
imul
neg
mov
mov
pushl
mov
jmp
pop
into
imul
dec
lret
xchg
cmp
jecxz
lret
or
mov
mov
cli
cmpsb
popf
cwtl
cmpsl
mov
or
or
inc
loopne
pop
mov
fld
jb
std
cmpl
std
mov
ret
imul
rolb
inc
fidivs
or
arpl
mov
insb
sub
pop
fistps
mov
out
jo
dec
dec
sbb
stos
sbb
mov
sub
mov
movsl
push
sbbl
dec
xchg
sub
stos
sbb
xlat
jne
loopne
out
rcr
popl
jecxz
call
dec
arpl
dec
adc
mulb
sub
movsb
outsl
lea
cwtl
inc
push
aaa
fidivl
pop
std
dec
fldenv
sbb
cli
js
ljmp
dec
insb
push
mov
pop
mov
sub
dec
push
mov
cmp
jecxz
push
insl
inc
scas
sbb
sbb
call
out
jne
addr16
mov
and
out
dec
dec
xor
not
fidivrl
pop
xchg
enter
out
fwait
sub
out
iret
dec
xchg
ljmp
sbb
push
fidivrl
jp
lret
sub
popa
push
mov
mov
or
add
sub
insb
xchg
pusha
sbb
aam
dec
repz
cmpl
lods
lret
stos
cli
stos
iret
push
sbb
out
jl
stos
movsl
fabs
add
and
pop
inc
insb
lods
dec
ss
dec
lcall
cmc
sbb
mov
orb
fcomi
scas
stos
jl
shl
cwtl
push
imul
dec
out
aam
fcmovnbe
stos
imulb
jp
test
cli
out
xor
ss
fisubrs
or
imulb
or
cmp
dec
dec
cwtl
sub
idiv
pop
inc
pop
xor
in
mov
ljmp
or
out
push
enter
pop
add
ljmp
push
negl
testl
jne
sub
stc
insb
cmp
sti
popf
mov
or
daa
cmpsb
sub
xchg
push
ljmp
mov
cmpsb
xchg
cmpsl
stc
jg
xlat
mov
jo
test
fldl2e
mov
bound
push
jge
stc
pop
ds
pop
dec
sbb
adc
test
mov
test
jne
xchg
or
enter
jl
sub
idivl
mov
push
test
leave
pop
pusha
aam
pop
jmp
jecxz
jmp
sub
cwtl
mov
mov
lcall
stos
lret
mov
decb
sub
cwtl
shlb
sub
jl
insb
sbb
aaa
adc
xlat
jb
popa
mov
adc
in
es
mov
popa
leave
sub
imul
add
or
mov
clc
ja
test
mov
mov
dec
stos
fldl2e
scas
add
dec
dec
into
imul
sub
jl
or
daa
test
sbb
cmp
pushf
enter
pop
mov
enter
inc
aad
cmp
xrelease
iret
or
pop
or
jl
lret
jae
cmpsl
xchg
loope
mov
stc
mov
pop
mov
sbb
call
push
fisttps
xlat
sbb
jecxz
mov
ret
or
flds
sub
add
xor
sarb
nop
fldcw
or
std
leave
scas
inc
pop
inc
dec
dec
cmp
test
xor
pop
int3
dec
jmp
xlat
stos
call
loopne
and
sbb
inc
dec
xlat
mov
dec
sub
or
or
mov
test
je
jbe
aaa
insl
jp
lods
leave
sbb
cwtl
out
or
popa
jae
push
inc
cmp
mov
push
fidivrl
pop
sarl
js
shrl
pusha
or
sbb
iret
jl
fisubrl
roll
ret
sbb
ret
insb
mov
popf
cwtl
adc
pop
cmp
jg
out
jecxz
adc
or
call
mov
mov
sbb
dec
pop
and
cmp
leave
add
lods
pop
or
and
stos
adc
add
push
aas
clc
cltd
xchg
movsl
call
or
xor
cmc
mov
idivb
dec
pop
jl
popa
inc
test
xor
icebp
cmp
jp
dec
sub
outsb
lahf
inc
cmp
jmp
test
cmp
sub
pop
sti
dec
std
test
out
popa
dec
arpl
test
and
andb
lcall
cwtl
cmp
mov
outsl
adc
cmp
xchg
jmp
pop
mov
out
imul
sbb
pop
sbb
mov
or
or
imul
leave
pop
dec
mov
test
lret
or
mov
fdivrs
aam
js
mov
dec
fsub
shrl
lcall
dec
mov
jmp
jmp
push
test
sub
insl
test
clc
pop
sbb
xlat
fsubrs
fstpt
dec
cmp
mov
mov
push
orb
dec
js
fsubrs
stos
or
dec
call
pop
pop
dec
sub
stos
mull
pop
cs
cmp
push
dec
js
cli
pop
pop
fcmovb
and
push
dec
sbb
mov
lods
or
fwait
adc
sub
cmp
cmp
call
cmpsb
fisubrs
fld
jl
and
pop
sti
pop
adc
push
lds
or
rorl
push
fidivrs
cmp
cmp
inc
enter
push
lods
sub
inc
test
fsubrl
push
cmpb
lods
sti
sbb
leave
fstpt
lret
js
loop
lret
popa
sbb
retw
push
mov
bound
jb
cli
negb
cmpb
dec
fidivrl
sub
pop
xchg
lcall
jmp
xor
loopne
jle
sbb
sbb
enter
ficompl
lea
jp
cmp
sub
mov
lahf
xchg
inc
movsl
insb
pop
mov
jne
inc
lock
or
inc
push
and
add
lods
testb
dec
imul
in
sub
cmp
outsb
cmovl
push
sbb
adc
sub
test
rorl
fs
aas
dec
sti
sub
jl
jecxz
sbb
out
jp
out
push
mov
mov
ja
fldt
cmc
orl
or
inc
insb
icebp
sbb
sti
cmpsl
dec
movl
pop
pop
aam
or
cmc
mov
andl
outsl
mov
lret
das
cmp
cwtl
fdivs
inc
stos
jmp
push
cs
sub
push
insb
sub
pop
insb
popf
cli
mov
stos
lcall
clc
xchg
sub
sbb
mov
push
sbb
bound
mov
jne
dec
sbb
lcall
mov
push
mov
cmp
push
pop
cli
in
mov
fimull
and
add
fwait
popa
or
enter
sub
or
inc
and
fidivrl
dec
mov
mul
mov
jmp
jmp
dec
enter
das
arpl
jp
jo
bound
jecxz
in
xchg
sub
leave
or
icebp
icebp
lret
fistl
fcomps
jbe
dec
sbb
jmp
jo
jne
jle
jp
jae
sbb
icebp
mov
mov
mov
test
orb
pusha
or
daa
add
dec
sbb
insl
jge
sbb
xor
push
or
sub
jmp
sub
loop
push
movsb
mov
or
push
das
stos
dec
push
xchg
lret
inc
pop
fldenv
sbb
testl
cmp
popa
test
cmp
dec
cli
or
into
pop
push
jl
ret
jae
dec
call
notb
pop
rorb
xchg
pop
scas
sbb
mov
lret
popa
fcomi
movsl
data16
dec
leave
sbb
fisubl
lock
call
xchg
test
xlat
lahf
insl
popf
stos
or
add
mov
dec
idivl
mov
shll
movb
ljmp
dec
scas
mov
push
fs
fisttpl
fchs
pop
dec
mov
adc
xlat
lock
arpl
sub
push
sub
mov
and
sbb
ljmp
pusha
pop
xchg
xor
cmp
mov
outsl
jge
or
adcl
xor
stos
insb
cmp
das
push
stc
shrb
sbb
dec
data16
sbb
mov
add
and
ljmp
stos
push
push
idiv
xchg
or
sbb
pop
mov
stos
cmp
aaa
mov
pusha
push
jmp
or
pop
cmc
cmpsb
movsl
movsl
cmp
dec
pop
gs
fsubs
and
enter
dec
push
mov
pop
dec
adc
jle
dec
xor
gs
inc
xlat
testl
push
xor
call
push
and
mov
sbb
in
movsl
arpl
ljmp
cmp
sbb
jmp
call
mov
enter
in
mov
cmp
cmp
pop
sub
sbb
fcomp
jl
lods
push
inc
push
inc
mov
data16
pop
push
clc
sub
push
sub
dec
or
fisttpl
inc
sub
pusha
cmp
push
movsl
mov
testl
enter
fldt
and
in
data16
sub
dec
insb
jp
push
xor
js
mov
jg
movsb
clc
lods
lret
cmp
cmpsb
popa
dec
imull
dec
psubsb
sbb
and
enter
insb
dec
sbb
push
arpl
inc
arpl
push
cmp
dec
ljmp
fnstcw
decl
clc
xchg
stos
or
pop
or
les
js
jecxz
iret
cwtl
pop
in
cmp
jp
pop
fistl
and
sbb
sub
testl
or
mov
insl
inc
sub
pop
mov
ret
jmp
push
pop
fadds
sub
icebp
push
or
mov
bound
pusha
or
push
mov
imulb
adc
ds
lret
out
rclb
addr16
insb
testl
sbb
pop
leave
repnz
pop
stos
js
shlb
dec
jge
xlat
mov
xlat
sbb
stc
pop
and
inc
jp
xor
xor
sbb
ljmp
scas
enter
ljmp
mov
cmp
ljmp
and
idivl
inc
cmp
lods
insb
cmp
or
or
xchg
inc
push
or
sub
sbb
out
pop
jmp
sub
out
cmp
scas
xlat
mov
std
loop
mov
or
jmp
lret
add
sub
pop
mov
mov
pop
dec
insb
sbb
pop
dec
leave
stc
cmp
dec
dec
out
mov
psraw
jecxz
jg
movsl
sbb
inc
cs
hlt
lret
sbb
ljmp
push
push
leave
out
sub
in
dec
pop
dec
sub
push
sub
push
aam
enter
sar
les
add
fcompl
pop
sbb
pop
sub
add
sbb
stos
pop
mov
pushf
push
cmp
addb
pop
shrb
in
loop
arpl
lret
enter
insb
sbb
sbb
retw
xor
xchg
dec
mov
out
test
dec
adc
rorl
negl
aaa
dec
cmp
cmp
jl
jle
fstpt
and
repnz
mov
pop
js
fnstenv
sub
ret
jp
int
popf
mov
pop
stc
inc
insb
pop
ja
sub
insb
mov
jbe
push
lods
mov
sti
clc
cmp
mov
les
popf
lret
sub
pop
imul
outsl
popf
jmp
out
xchg
add
sbb
leave
jae
scas
mov
inc
fwait
sub
lret
lcall
clc
xlat
mov
mov
mov
fucomi
mov
cwtl
mov
cmp
xor
fstps
daa
ficoms
out
xchg
mov
xchg
push
mov
pop
fsubp
dec
imulb
sbb
inc
inc
sbb
dec
divb
subb
test
sub
adc
fcompl
or
dec
push
pop
int3
jp
int3
out
out
cmp
inc
cltd
sbb
addr16
ljmp
cli
daa
inc
jge
cmpb
mov
stos
mov
sbb
das
enter
mov
fstps
int
dec
jne
mov
aam
xchg
ror
and
dec
sbb
fld
jmp
or
stos
push
cwtl
sub
enter
push
test
cmp
sub
or
fs
dec
xlat
sub
stos
dec
push
int
cmp
pop
xchg
cli
fs
dec
out
sub
sti
or
cmp
jmp
fistl
lcall
dec
inc
pop
enter
xor
cmp
or
enter
or
lret
jmp
mov
inc
fcmovnu
xchg
testl
dec
psubw
jp
out
fs
test
stc
movsl
pop
leave
pop
mov
mov
pop
lods
outsl
iret
insb
stos
sub
call
or
dec
jmp
xchg
jp
test
pop
xor
dec
or
js
mov
orb
jecxz
push
cwtl
sbb
outsb
mov
ficomps
pop
adc
rcrb
adc
cmp
test
cmp
mov
cwtl
mov
mov
sbb
imul
mov
cmp
sbb
cmc
clc
enter
jbe
sub
lods
nop
sbb
sbb
pop
cmp
or
mov
jnp
test
pop
sbbl
sbb
test
fsub
into
pop
stc
sub
mov
in
mov
or
or
icebp
bound
sub
fsubrs
or
cmc
cmp
mov
movsl
pop
jnp
lea
cmp
scas
or
cwtl
jmp
mov
fistpl
and
sub
sahf
pop
mov
fs
or
sbb
sub
jl
iret
push
je
ret
inc
subl
dec
xor
lahf
fisubl
sbb
data16
pop
sub
jmp
lock
xlat
mov
arpl
stos
dec
stos
enter
cmp
xchg
sub
dec
outsl
mov
out
lods
push
and
jl
push
push
leave
call
out
mov
mov
imul
popf
pop
sub
insb
jl
or
sti
mov
mov
or
or
repnz
jl
or
leave
or
call
incb
sbb
lcall
push
rcrl
sub
mov
andb
divl
mov
sub
notb
mov
mov
xchg
popf
mov
push
pop
negb
cmp
jb
pop
dec
sbbb
mov
jae
es
add
fistpl
push
punpckhbw
nop
mov
mov
in
fcmovne
js
cli
cwtl
insb
into
test
dec
data16
xchg
or
or
cmp
sbb
adc
lock
sbb
and
jl
push
mov
insb
leave
cmp
and
and
aaa
or
inc
test
xchg
ljmp
mov
js
lds
cmp
imul
or
sbb
fistpl
jge
lcall
dec
or
push
inc
inc
sbb
xlat
adc
sub
cmp
pusha
arpl
sub
je
sub
cmp
push
in
out
out
inc
inc
dec
mov
xor
jno
jle
push
mov
cmp
scas
scas
pop
rcrl
mov
pusha
sbb
inc
jmp
or
addr16
sub
or
jmp
sbb
jp
fs
mov
lods
pop
out
clc
loopne,pn
mov
cmp
notl
pop
mov
sub
ret
mov
scas
cli
sbb
ljmp
cmp
testl
xchg
ds
mov
loope
stos
dec
dec
enter
inc
jne
outsl
push
dec
call
shlb
push
icebp
jbe
int
sarl
mov
mov
popa
sti
mov
stos
stos
stos
dec
jne
cmp
test
sub
clc
out
jmp
js
or
in
call
lea
popa
mov
mov
mov
clc
cmp
sti
insb
sbb
rorb
dec
cmp
lcall
add
pop
out
sar
sbb
test
sub
push
decl
insb
insb
sbb
aaa
pop
mov
jmp
insl
inc
ljmp
mov
sub
test
fdivr
and
mov
jne
js
lock
push
mov
outsb
dec
ljmp
out
jo
in
pop
push
pushf
mov
jne
ds
or
cmp
jmp
xor
cwtl
xlat
sub
out
mov
pop
mov
flds
pop
loop
clc
mov
es
dec
sbb
cmp
je
sub
jmp
mov
pop
sbb
mov
cmp
js
mov
dec
sub
pop
decb
sti
push
stos
dec
std
push
pop
cs
sahf
mov
sub
icebp
pop
push
dec
inc
cli
daa
lds
sub
pop
out
lret
jle
sub
lcall
or
sbb
or
jp
ret
sub
dec
out
pop
cmp
pop
or
xlat
sbb
and
cmp
inc
cli
push
pop
lea
or
adc
sub
pop
clc
stos
or
mov
push
and
pop
cmpsl
or
cmp
xchg
push
aad
xor
call
fidivrl
cmc
xchg
inc
movsl
mov
adc
aaa
pop
or
jg
and
jecxz
in
cmpsl
sub
jmp
mov
fsubp
nop
mov
jecxz
insb
push
cmp
stos
outsl
pop
dec
or
clc
push
jmp
and
pop
or
pop
movsb
repz
leave
xchg
stc
negl
and
jge
pop
pop
orb
or
pop
bnd
stos
mov
cmp
out
adc
adc
pop
push
lret
stc
cmp
sub
inc
insb
popa
push
sub
mov
mov
leave
cmp
push
in
ljmp
push
addr16
mov
jecxz
orw
decb
sbb
addr16
dec
testl
ljmp
insl
lahf
or
mov
dec
lods
cmp
lcall
pushf
jmp
shr
stc
ljmp
cmp
sbb
mov
lret
pop
testl
push
dec
pop
lcall
xchg
cmpsb
stos
and
jge
rorb
jl
stc
xor
adc
mov
in
sub
or
sbb
in
xor
pusha
insb
fiaddl
clc
leave
or
andb
push
push
dec
pop
leave
jl
pop
sbb
dec
jmp
pop
clc
xlat
push
pop
mov
dec
xchg
popa
pop
cli
sbb
dec
cmp
test
stos
sbb
in
inc
push
loop
insb
sbb
in
jnp
or
mov
push
div
cwtl
sub
add
pop
ja
enter
mov
out
push
jb
dec
lahf
sbb
or
arpl
sub
mov
push
cwtl
orb
sbb
ds
mov
ljmp
stc
jge
mov
fcmove
xchg
mov
daa
mov
and
jp
stos
in
mov
arpl
sbb
mov
repz
cmp
dec
jmp
and
or
sub
pop
pop
or
push
fcoms
sbb
lcall
popf
js
ficomps
imul
or
cs
mov
cmc
and
mov
clc
cli
jp
dec
or
fcmovnu
cmp
pop
adc
mov
fldenv
lea
jmp
test
fucomi
fimuls
sbb
xchg
test
fs
jmp
dec
stos
sub
scas
jmp
and
xchg
cmp
sub
cmp
cli
psubw
lcall
mov
sub
dec
leave
std
sbb
cmp
outsb
sub
mov
xor
fsubrs
enter
mov
or
mov
mov
fdivs
sub
cwtl
pop
out
mov
xor
or
mov
lahf
lcall
jmp
sub
mull
or
aam
lret
ret
sbb
fisubrl
push
lcall
or
insb
xchg
pushf
and
jmp
lcall
mov
jg
shl
sub
mov
sbbl
lret
jnp
sbb
sbb
cmpsb
mov
jmp
test
insl
gs
stos
cmp
sub
dec
jl
xchg
lret
or
das
mov
dec
arpl
clc
sub
inc
inc
les
inc
data16
jg
adc
adc
jp
out
cmp
ljmp
stos
mov
clc
call
cmp
stos
fcmovne
or
or
negl
dec
je
fsubr
mov
popf
mov
add
sub
sbb
int3
imul
lret
mov
inc
stos
push
inc
mov
movsl
in
call
das
cld
enter
mov
cwtl
dec
ljmp
in
push
outsl
push
sub
leave
jecxz
loopne
repz
sbb
jmp
js
into
dec
pop
pop
mov
cli
cmp
sub
into
and
xchg
push
sub
pushf
cli
inc
imul
pop
std
sbb
jmp
add
pop
sub
imul
fcompl
fimuls
repz
sti
jns
mov
push
or
xorl
aas
cmp
and
dec
mov
fcomp
pop
fprem1
xor
out
or
dec
fs
push
dec
cmpsb
or
or
xor
stos
clc
lods
sub
cli
mov
add
jp
loopne
sub
mov
insb
stc
outsl
pop
pop
sbb
ljmp
mov
js
nop
xchg
lret
jno
enter
pop
sbb
or
mov
jl
jge
leave
add
lods
das
enter
rorb
lods
mov
cmp
dec
testl
jnp
jle
cli
fnstcw
rcl
pop
mov
arpl
jmp
mov
test
dec
das
clc
jp
add
mov
dec
dec
and
daa
fisubrs
and
pop
and
sbb
stos
jmp
or
sub
dec
pop
jl
sub
sbb
fabs
out
mov
and
imul
jmp
fisttpl
test
cwtl
mov
call
lcall
pop
fimull
sub
xchg
push
pop
pop
xchg
scas
dec
mov
or
cwtl
sbb
dec
daa
ja
cmc
stc
js
jmp
ljmp
sbb
sub
xlat
push
cmp
stos
std
mov
fadds
popa
arpl
sub
pop
mov
stc
cmp
cmp
insb
sbb
test
scas
mov
sbb
inc
and
and
inc
sbb
dec
jp
mov
jne
add
dec
leave
pop
fcomps
fcoml
sub
bndstx
pop
sbb
or
dec
push
inc
lret
mov
inc
lea
pop
inc
cmp
aas
and
xlat
sub
stos
sti
or
rcr
xchg
dec
jmp
dec
push
js
mov
leave
cli
sbb
push
sub
fnstcw
push
sbb
out
loop
out
xchg
das
push
testl
sub
jne
out
imul
movsl
and
decl
pop
outsl
insb
sub
leave
pop
push
repz
sbb
xchg
jmp
cmpsl
xchg
aas
sub
pop
popa
cmp
mov
sub
in
int
stos
jae
js
pop
or
fwait
jmp
ja
xchg
stc
or
add
pop
ljmp
or
clc
push
leave
or
sub
cld
jnp
sub
pop
call
mov
pop
int
cli
out
ja
pop
push
sub
stos
sub
cmp
cmp
negb
push
sub
leave
mov
call
out
addr16
mov
stos
push
in
jmp
pop
orl
cmp
cmp
xlat
cmp
push
sbb
sbb
jp
mov
adc
cmp
mov
test
sbb
addr16
clc
cmp
stos
mov
fldcw
sub
call
push
jl
mov
repnz
sub
cmp
mov
movsl
pop
pop
push
rcrb
ret
arpl
cmp
lret
inc
mov
and
jp
push
sbb
sub
fcompl
mov
jp
push
adc
mov
out
cwtl
imul
negb
cmpsl
ljmp
mov
mov
inc
jmp
lds
jnp
arpl
fadds
adc
add
inc
mov
addb
out
jmp
inc
lret
mov
inc
test
sub
mov
stos
cmp
mov
jecxz
test
popf
test
lods
mov
leave
sbb
dec
lea
enter
mov
popf
fimull
xchg
dec
pop
push
dec
jo
popa
mov
dec
add
or
test
cmpb
daa
leave
sub
sub
pop
mov
adc
mov
scas
mov
xlat
adc
mov
cmp
or
xchg
sub
jp
pop
dec
mov
sbb
das
push
mov
pop
fcmovu
cmp
xchg
imul
arpl
sbb
jp
push
sti
ljmp
cmpsl
pop
mov
sub
push
mov
in
cwtl
popa
sub
mov
ljmp
insb
sbb
dec
loope
pop
sbb
ficompl
inc
mov
push
sub
insl
fwait
or
clc
adc
or
rol
jle
push
dec
test
imul
enter
sub
dec
push
sub
pop
pop
aaa
leave
aaa
outsb
sub
stos
cmp
dec
dec
fnstcw
mov
movsl
mov
inc
stos
insb
das
mov
sar
or
or
cli
data16
fs
sbb
pop
cmp
add
jae
aad
leave
sub
mov
xor
icebp
fists
jl
enterw
cmp
push
sbb
call
cld
pop
xchg
fneni(8087
sbb
dec
xor
movsb
sti
dec
dec
or
dec
sbb
ss
sbb
loop
out
or
pop
add
outsl
adc
stos
mov
sbb
mov
aas
repz
enter
jp
pop
fisubrl
mov
dec
int3
lea
test
push
xor
or
mov
rorb
mov
mov
add
sub
jg
shr
mov
shrl
push
jnp
dec
pop
xor
or
sub
aas
push
leave
sbb
rep
fimull
mov
adc
mov
or
cmp
lock
mov
mov
enter
push
lret
dec
jbe
or
mov
mov
mov
pop
pop
sub
cwtl
ljmp
dec
jge
repnz
insb
mov
rclb
mov
xchg
jmp
fnstcw
and
sub
cwtl
sub
mov
mov
push
in
or
mov
mov
dec
push
daa
mov
insb
out
ja
nop
outsl
dec
fisttpl
dec
add
sub
loopne
cvttps2pi
mov
push
jmp
mov
dec
mov
ljmp
jp
pop
dec
jl
sbb
fisubrl
pop
adc
cs
adc
mov
lahf
sub
sub
out
push
loop
in
and
repnz
sbb
stos
mov
or
jmp
fcomps
rcr
or
dec
sub
js
pop
mov
sub
mov
sub
dec
outsl
jle
mov
or
fs
mov
into
sub
jg
dec
out
add
push
sbb
sti
sub
sbb
mov
mov
cmp
or
mov
clc
aad
cltd
rcr
dec
pop
mov
imul
outsl
sub
clc
mov
or
clc
jle
cmp
pop
sbb
mov
sbb
mov
push
lea
or
fstpt
add
mov
stc
lret
lcall
les
dec
sbb
xchg
dec
and
mul
fnstenv
cmp
cmp
cwtl
inc
pop
daa
push
dec
sbb
jle
or
test
xchg
push
loopne
push
das
mov
stc
inc
xchg
lods
call
stos
jecxz
sub
dec
sbb
fs
inc
sub
dec
xlat
ja
ljmp
clc
lret
cmp
sbb
into
sub
mov
mov
out
sbb
aas
mov
push
fsts
pop
sti
adcb
jle
enter
popf
sbb
int
das
stc
arpl
sbb
push
jae
or
sub
mov
pop
and
shlb
lret
sub
cs
aas
inc
jmp
mov
mov
jge
enter
in
xchg
mov
xchg
insb
rorl
pop
enter
js
mov
mov
sub
pop
aaa
fiaddl
enter
mov
or
lahf
aas
into
jmp
pop
jmp
sub
out
iret
pop
and
popf
mov
lea
mov
cli
pop
push
sub
bound
cmp
test
sbb
out
xchg
testb
mov
adc
out
insb
shll
pop
push
sub
test
add
sbb
dec
data16
mov
mov
sub
mov
jnp
filds
push
mov
int3
loop
or
lea
jb
insb
xchg
cmp
movsl
movsb
movsl
jb
clc
sarb
das
fsubr
lcall
mov
dec
idivb
cmp
add
dec
clc
ljmp
sbb
lret
xlat
insb
mov
scas
pop
sbb
or
imul
jmp
stos
loopne
xchg
jle
orl
mov
or
call
sub
out
js
mov
fcmove
mov
sbb
sub
int
movsl
arpl
sbb
stos
xor
lods
in
clc
or
cmp
jmp
jo
repz
jmp
jmp
jge
xchg
dec
ljmp
hlt
imul
or
cmp
cmp
sbb
cmp
nop
sub
fisubl
dec
sub
mov
mov
add
jmp
cmp
les
xchg
mov
test
mov
lds
out
ficompl
sub
sahf
mov
mov
pop
cmp
lret
ljmp
sub
lret
pop
clc
stc
in
mov
out
int3
push
jne
pusha
fnstsw
dec
ljmp
lahf
pop
test
enter
aas
cmp
sbb
jbe
out
cltd
ljmp
movsb
mov
inc
xchg
adcb
rclb
dec
out
inc
mov
ljmp
insl
dec
jp
jmp
stos
sbb
test
xchg
cmp
rcrl
push
flds
ljmp
stos
mov
pop
mov
dec
addr16
pop
jmp
imul
cwtl
sbb
xor
xchg
cmpb
jno
cmp
pop
xchg
fimull
fiadds
fcom
or
or
inc
mov
in
out
sub
pop
jmp
pop
stos
and
jl
or
movsl
lods
inc
gs
or
or
cmp
mov
sbb
scas
cmp
jp
mov
fstpl
flds
in
push
mov
push
stc
sub
icebp
sbb
dec
dec
outsl
sub
leave
or
pop
jp
mov
insl
cmp
cmc
xchg
pusha
call
out
loop
mov
sub
mov
pushf
cmp
and
js
subb
movsb
pop
inc
es
sub
or
test
jmp
pop
mov
jle
imul
aas
sbb
cmp
sub
inc
mov
into
sbb
imull
xchg
lret
sbb
leave
insb
rcr
sbb
into
mov
insl
inc
xor
or
cmpsl
popf
jmp
adc
std
dec
js
pop
jmp
push
sub
xchg
pop
fcmovne
call
pop
les
test
sub
loope
xchg
jmp
aas
std
jp
cs
ljmp
ljmp
stc
cmp
sub
dec
sti
mov
inc
cmp
push
fistpl
push
push
icebp
js
sti
pop
push
fdivr
pop
out
idivl
or
mov
mov
cli
jp
idiv
mov
pop
leave
cmp
fcom
push
aad
pop
test
or
jmp
lods
dec
ljmp
push
cmpsl
data16
inc
adcl
adc
pop
ljmp
xlat
or
jle
cmp
dec
pop
cmp
ljmp
cli
pop
cmp
fcmovu
push
out
jo
xchg
mov
pop
pushf
jmp
repz
mov
cli
xchg
stos
movsl
js
jp
fcmovu
pop
sub
sbb
out
scas
dec
mov
pop
push
sub
dec
daa
loop
fs
mov
ds
xor
mov
popf
in
lret
cld
mov
mov
cmp
pop
dec
xlat
cmp
push
lock
mov
test
nop
dec
fisttpl
dec
mov
fimuls
je
iret
sbb
and
stos
in
cmp
iret
pop
shlb
movsb
push
mov
adc
stos
pusha
fcom
cli
pop
pop
mov
push
inc
cmp
fwait
gs
add
movsl
mov
mov
dec
mov
stos
jmp
cwtl
jmp
sahf
push
fldcw
inc
mov
add
mov
mov
aas
data16
or
cli
push
movsl
pop
pop
cmp
and
cmp
inc
stos
cmpsl
pop
in
cmp
loope
out
cmp
jmp
mov
fsubl
jge
push
sub
fmuls
enter
add
addb
out
nop
sub
mov
cmp
or
ret
fcmovnb
dec
inc
lods
jp
shrl
mov
or
sub
out
ja
mov
das
outsb
fldenv
or
sbb
dec
xlat
testl
cmp
and
outsl
test
mov
pop
and
inc
add
test
or
pop
push
sub
sbb
lea
pop
jmp
jl
inc
or
fimull
aaa
leave
push
pop
inc
or
pop
stc
inc
jmp
mov
js
leave
movsl
clc
ret
pop
inc
ljmp
cmp
insb
dec
sub
sub
mov
aas
dec
stc
mov
lods
xchg
lods
ljmp
es
out
dec
aad
add
lods
sub
fucomp
out
in
dec
dec
add
mov
xor
sub
in
dec
ja
mov
dec
push
fistpl
pop
cmp
or
cmp
fisttpl
cmp
sub
push
jae
adc
pop
cwtl
xchg
dec
imul
xor
movsl
int3
fmulp
cmp
lret
cli
jmp
stos
scas
ljmp
inc
dec
lods
adc
stc
test
sbb
cli
or
sbb
push
pop
inc
in
mov
sub
jp
push
es
dec
das
mov
push
mov
pop
mov
push
pop
dec
nopl
mov
hlt
sub
call
mov
mov
ljmp
or
pop
fimull
sbb
dec
dec
lahf
lcall
xor
out
leave
push
and
js
sub
jo
inc
ds
push
jle
mov
xlat
in
or
leave
pushf
mov
leave
sub
data16
sub
jnp
dec
sti
pop
sub
cmp
or
lahf
jbe
bound
mov
xchg
and
sbb
or
rcr
lods
fs
aam
xor
adc
mov
das
and
lcall
add
popa
sbb
fs
stos
xlat
mov
cmp
sbb
jmp
testb
dec
sub
dec
sbb
bound
sbb
mov
pop
popa
cmovnp
mov
or
cltd
inc
nop
das
push
dec
out
pop
jecxz
shll
push
push
fwait
lcall
stos
insb
push
fstpt
sub
cmp
in
mov
insb
ds
pop
xlat
fidivs
pop
fmull
dec
xchg
push
mov
loop
cmp
stos
add
fmuls
testb
or
lcall
jo
dec
cwtl
xlat
call
sbb
jae
mov
bswap
dec
or
clc
mov
cwtl
xchg
or
jmp
pop
cltd
cmp
stos
shr
pop
sbb
test
xchg
popa
fcmovne
fisubrs
sub
movsb
outsl
sub
jmp
dec
test
pop
push
cmp
rorl
insl
pop
mov
and
js,pn
or
or
mov
fadd
jg
insb
sbb
movsb
xchg
stos
add
xor
movsl
insl
movsl
cwtl
jecxz
insb
sub
fisubrl
or
hlt
xor
xlat
aas
inc
lcall
cli
sub
out
es
lcall
popf
enter
inc
mov
xchg
sbb
add
pop
hlt
sbb
cltd
dec
or
sahf
push
dec
pop
call
mov
pop
stos
arpl
mov
fxch
sub
enter
push
mov
fsubs
or
pop
mov
lds
sub
adc
pop
jg
test
cli
lcall
out
xchg
xchg
pop
test
xlat
jp
fadds
imul
jmp
daa
mov
mov
dec
pop
lret
push
dec
lret
dec
sub
enter
dec
xor
or
mov
pop
adc
repz
les
insb
mov
cmp
push
cwtl
pusha
ds
scas
mov
sbb
cmp
pop
push
sbb
cmp
mov
pop
xlat
sub
pop
jp
inc
into
dec
pop
jl
popa
or
leave
jmp
cli
fwait
mov
stos
movsl
clc
and
push
mov
jne
pop
and
sbb
pop
iret
pop
arpl
cmp
or
stos
jmp
xchg
mov
sbb
or
mul
inc
sub
dec
adc
fimuls
pop
bound
pop
cwtl
mov
sbb
testb
push
movsb
ljmp
gs
cmp
stos
rcrw
mov
loope
mov
pop
jbe
out
pop
or
xchg
out
addr16
or
mov
sbb
stos
and
cmp
xor
pop
push
dec
jmp
cmpsb
push
sbb
call
and
dec
stc
jb
or
pop
pshufw
and
xlat
enter
loop
clc
jae
cmp
xchg
push
xchg
inc
sti
lods
mov
fldt
in
cli
nop
sub
push
mov
out
fiadds
testl
fldt
leave
dec
dec
sub
jmp
fdivrs
xchg
rcl
fmulp
shll
or
into
gs
push
mov
sbb
sti
test
push
sub
sub
jbe
js
test
and
enter
pop
mov
test
jmp
pop
out
or
leave
call
jbe
dec
pop
cmp
pop
or
mov
call
repnz
mov
mov
leave
sbb
fidivrs
jmp
imul
jmp
dec
cwtl
ja
xor
xlat
mov
inc
insl
js
xchg
rorb
xchg
gs
ret
sub
mov
vmread
test
or
aaa
xor
sub
jp
and
mov
sub
mov
cmp
hlt
cmp
sub
insb
xchg
sub
lcall
es
clc
mov
aam
push
sub
ds
dec
cmp
cwtl
or
aaa
xabort
and
repnz
xorl
pop
test
jl
ret
inc
dec
pop
inc
ja
maskmovq
testl
inc
jbe
dec
clc
stos
test
cmpsw
push
xor
inc
cmp
cs
lea
xchg
pop
sbb
jmp
or
outsl
sti
sub
or
and
std
dec
jp
test
sbb
mull
or
arpl
pop
sbb
lods
out
and
jp
add
and
fucomi
fsubr
out
sub
pop
fmulp
dec
test
mov
sti
pushf
pop
dec
and
sti
in
lcall
push
lods
cwtl
outsb
jnp
addr16
sub
dec
enter
or
and
dec
add
loop
jmp
mov
roll
pop
mov
adc
cmp
lahf
jge
inc
push
pop
or
call
sub
data16
dec
aaa
imul
sbb
xchg
sub
or
mov
inc
andb
push
ljmp
into
dec
fildll
jmp
and
adc
lcall
sbb
pop
fmuls
loopne
or
fldcw
stos
test
jp
pop
and
cli
sub
loope
jnp
loope
cld
mov
sub
leave
mov
jmp
mov
inc
aam
and
sub
cmp
call
test
lock
jmp
dec
fs
cmp
scas
fcomps
sbb
idivl
mov
gs
cmp
dec
mov
or
cmpsl
pop
das
mov
cmp
dec
push
mov
lahf
dec
cli
pop
push
pop
push
aad
xchg
out
add
aas
xor
cli
js
dec
test
sub
sbb
or
adc
cli
mov
dec
into
das
mov
push
sub
notl
or
dec
ret
in
or
sbb
lret
and
cmp
or
sub
enter
dec
push
mov
lret
push
dec
mov
scas
orb
clc
lea
cmp
dec
je
out
in
es
addl
movsb
mov
push
mov
dec
and
cmp
dec
ljmp
sub
add
mov
xchg
push
jmp
push
iret
cmp
or
movsb
addr16
dec
cmp
add
cli
jp
cmp
movsl
test
mov
sbb
dec
outsl
pop
lret
push
mov
mov
and
imull
test
sbb
test
and
jno
fsubs
lret
call
fucompp
inc
inc
or
arpl
mov
dec
pop
inc
cs
scas
mov
and
dec
orb
imul
pop
clc
insb
fdivr
or
fimull
dec
out
jns
sub
sbb
pop
aam
fadds
testb
paddusb
and
aam
stos
shr
out
in
popf
cmp
cmc
scas
negb
dec
xlat
cmp
dec
stos
arpl
xchg
movsl
push
push
jp
dec
test
pop
hlt
mov
test
pop
sbb
push
sar
cwtl
pop
and
push
flds
or
fcmovu
in
push
shl
out
mov
mov
pop
push
movsl
mov
out
fxch
xchg
cmpsb
mov
mov
cmp
or
sub
arpl
imul
cmp
dec
adc
lret
cmp
negl
stos
xlat
pop
iret
jo
icebp
push
add
sub
imul
dec
sbb
xchg
pop
enter
push
fidivrl
mov
or
dec
mov
push
cmp
ds
mov
das
das
sbb
xchg
push
lret
sahf
imul
xor
cli
call
outsl
dec
leave
js
mov
push
insl
sub
jb
sbb
cmp
sub
fptan
iret
lret
xor
inc
sbb
inc
test
pop
sbb
enter
adc
mov
or
mov
das
lcall
mov
lods
push
pop
stos
push
adc
stc
sub
ja
jne
jmp
call
and
jbe
mov
push
inc
sbb
ja
or
js
mov
mov
adcb
pop
pop
fiaddl
xchg
aaa
pop
sub
mov
mov
popf
lret
imul
mov
mov
cwtl
sbb
lods
xorb
aam
repz
jae
and
xchg
jmp
jmp
mov
cli
aam
xchg
cld
mov
adc
stc
jecxz
lcall
aad
sbb
cs
ljmp
inc
fs
popa
dec
cli
mov
jmp
lods
in
mov
mov
sub
enter
inc
or
or
sub
dec
lahf
lret
sbb
sbb
push
jbe
jmp
or
stos
inc
insb
mov
dec
dec
sbb
mov
xchg
inc
enter
mov
xor
scas
ror
js
ja,pn
loop
xor
jo
xchg
insl
shr
sti
stos
sub
clc
stc
stos
or
xlat
pop
test
testl
push
pop
movsb
cmp
pushf
inc
into
jmp
dec
sub
pop
jmp
mov
mov
dec
cmp
stos
mov
pop
push
fiadds
daa
pop
imul
dec
imul
mov
inc
insb
loop
dec
push
fsubr
out
out
mov
ljmp
xchg
jle
enter
rcr
outsb
sbb
rorb
out
dec
test
mov
js
cld
inc
rcrl
push
dec
inc
jae
out
jns
pop
mov
add
cmp
lea
ret
and
sbb
cli
mov
insb
dec
sub
cwtl
jmp
data16
sub
sub
push
dec
jp
dec
cmp
cmp
fnstcw
lret
ret
aaa
xchg
movsl
fucomi
mov
pop
pop
jnp
test
dec
cmc
ds
push
lea
icebp
push
add
sub
sbb
sub
and
cmp
fs
mov
add
stos
xchg
xlat
cmp
sbbb
inc
sbb
leave
sub
add
lret
xor
enter
ljmp
push
xchg
daa
mov
test
and
leave
adc
arpl
jnp
or
or
sub
pop
cmp
dec
push
sbb
mov
mov
and
pop
pop
cmp
dec
jp
pop
ds
lea
xlat
mov
mov
mov
mov
push
shll
outsb
or
or
sub
jge
xchg
push
mov
pop
shl
xchg
dec
sbb
pop
aaa
in
and
or
or
enter
or
jmp
mov
mov
cmc
mov
xchg
dec
push
mov
mov
or
scas
fs
or
jne
leave
fstpt
dec
mov
sbb
stc
sub
sub
or
jle
mov
pop
jmp
arpl
pop
leave
leave
sbbb
test
popf
es
dec
aas
or
sbb
data16
scas
dec
push
dec
cmp
sahf
orl
mov
negl
lock
mov
xor
iret
push
mov
cmc
fldenv
popf
lods
adc
mov
inc
pushf
adc
pop
stc
js
mov
sub
fdivr
lret
sub
dec
jmp
out
cld
loopne
dec
cli
cmp
inc
dec
ljmp
dec
pop
test
lea
dec
dec
push
lret
or
or
push
cmpsl
lahf
out
jl
arpl
jmp
pop
dec
ret
cmp
add
cmpsl
sbb
dec
jl
jge
jle
clc
jp
idivl
mov
or
mov
mov
xlat
push
mov
dec
rcrb
into
add
insl
dec
jo
jge
test
cld
stos
dec
mov
pop
xor
nop
jle
sub
addr16
or
sub
or
dec
in
jno
jl
out
xlat
dec
jbe
or
aaa
push
out
mov
bound
push
sub
mov
dec
dec
ret
adc
mov
and
and
jns
iret
mov
lret
stc
cmp
pop
cmp
out
dec
jns
bound
push
movsl
cs
insb
or
xchg
cs
mov
js
or
xchg
inc
jl
mov
xchg
stos
into
mov
push
ds
test
push
cmpb
dec
jge
mov
mov
movsl
cmpsl
sarl
lds
scas
push
movsl
cmpsl
fs
enter
xor
stc
in
cmp
inc
pop
mov
mov
stos
dec
neg
adc
test
pop
or
jp
xchg
sub
mov
or
je
sub
call
pop
fldt
sbb
mov
dec
cli
lcall
cltd
popa
dec
or
cmpsl
jmp
leave
fs
jmp
dec
dec
pop
sti
pop
cmp
stos
lcall
pop
pop
xchg
out
loopne
xor
pop
jmp
sub
mov
inc
pop
xor
cmp
scas
xchg
subb
cli
movsb
jnp
push
mov
jl
rorl
lcall
pop
mov
repz
push
pop
fwait
dec
enter
les
dec
pop
inc
sbb
inc
out
insl
icebp
stos
clc
sub
jmp
sub
call
mov
out
arpl
mov
xlat
iret
aas
and
jb
sub
pop
or
dec
in
cld
sbb
push
adc
outsl
sub
fs
test
push
lods
push
fxch
sti
dec
sbb
outsl
cmp
jg
notb
mov
arpl
cmp
sbb
pusha
cmc
leave
and
mov
sub
jae
ficomps
cwtl
or
movsb
cltd
fimuls
adc
imul
cmp
push
mov
js
inc
sbb
or
mov
loope
daa
sbb
fisttpl
mov
or
push
xchg
js
cld
cmp
xchg
xchg
leave
mov
test
test
inc
cmp
ljmp
cmp
sub
leave
or
lret
cmp
loopne
outsl
or
xchg
out
mov
jns
push
jo
in
sbb
fsubrl
lahf
xor
jecxz
pop
mov
or
pusha
or
xchg
mov
insb
mov
cmp
cli
pop
ljmp
pop
test
push
fimull
cmp
mov
sub
mov
out
mov
std
loop
cmpsl
push
movsl
dec
fmuls
enter
push
js
loop
dec
stos
mov
ja
dec
mov
and
std
sbb
adc
pop
into
sbb
jmp
out
fimuls
ljmp
and
insl
stos
dec
xchg
push
mov
jp
adc
cmp
pop
mov
mov
adcb
or
roll
rcr
dec
sbb
dec
test
cmp
into
sub
fisubrs
mov
add
fincstp
mov
sub
or
mov
in
push
popf
push
xchg
fmul
fidivrs
sub
mov
sub
cmp
pop
push
adc
lahf
sub
cmp
xchg
jp
xchg
ja
push
cmp
xchg
jmp
dec
lods
or
and
jbe
clc
fisubrl
jp
pop
or
lahf
loope
lret
push
jmp
cmp
lcall
jg
clc
fstpt
mov
sub
sub
mov
pop
lcall
cli
jl
cmp
sbb
gs
xchg
movsl
stos
sub
insb
in
scas
fcmovnb
dec
dec
mov
dec
mov
pop
add
pop
notb
jl
push
push
popa
dec
pop
sub
out
xchg
daa
test
repz
je
and
sub
xchg
mov
dec
jmp
jmp
sub
sbb
cmp
es
mov
fs
in
sbb
std
mov
ficompl
sub
adc
cmp
sti
mov
call
icebp
ret
fmuls
loope
cmp
sbb
test
inc
pop
or
pop
lods
pop
push
aaa
mov
ljmp
pop
mov
cwtl
pop
mov
mov
dec
fidivrl
inc
dec
sbb
mov
fidivs
or
lcall
mov
mov
rorb
sbb
push
inc
push
or
xchg
sub
cmp
sbb
pop
push
pop
imul
dec
dec
aas
mov
sub
stc
ljmp
xor
movsb
daa
dec
adc
addr16
clc
lret
or
fldt
sub
pop
cmp
pop
pop
test
in
repz
cmpsb
jmp
imul
sti
lods
idivl
or
cwtl
sbb
add
stos
pop
pusha
enter
das
cmp
into
push
lret
out
dec
lahf
mov
mov
pop
and
popf
dec
sbb
cmp
pop
fnstcw
or
movsb
sbb
dec
dec
stos
jmp
sub
jl
push
lods
and
mov
fdivrp
jmp
sub
pop
cmp
pop
insb
pop
jmp
adc
insb
jle
stos
jp
gs
sbb
enter
push
das
mov
out
adc
push
jne
sub
and
pop
mov
dec
stc
cli
mov
sbb
jp
mov
pop
ror
mov
cmp
mov
cmpsl
nop
pop
int3
dec
clc
or
dec
aas
subl
loope
xchg
cwtl
js
movsb
leave
lods
pop
lret
or
ret
pop
jmp
test
mov
and
popf
jmp
scas
stc
sbb
cmp
push
loop
call
pop
sub
jns
push
inc
pop
popf
inc
bnd
jle
stc
cmp
jbe
xor
popa
mov
insb
jl
dec
mov
dec
sbb
or
and
adc
xor
fsubrp
cmp
sub
jno
pop
mov
push
push
or
ljmp
inc
mov
cmp
jecxz
cmp
sub
mov
lret
cmp
mov
jge
sub
test
dec
dec
or
jne
movswl
inc
mov
lcall
inc
mov
or
xchg
loope
jne
daa
push
leave
jo
inc
stos
pop
je
sbb
xchg
push
outsl
sbb
fcmovbe
jp
mov
repz
xor
movsb
cwtl
addr16
jmp
push
repz
jmp
cmp
fstpt
and
mov
xlat
dec
in
add
clc
sti
jmp
jmp
call
roll
sbb
pop
sbb
pop
adc
and
pop
inc
push
pop
or
movsl
jge
mov
idivl
cmp
jmp
inc
shr
mov
pop
lock
add
rolb
xor
or
xlat
ljmp
ljmp
pop
sub
xchg
imul
mov
insb
ds
std
aad
mov
dec
inc
out
aas
push
cmp
jno
ds
dec
pop
or
mov
rorl
negl
cmp
xchg
push
into
fucomi
mov
ds
pop
dec
mov
push
enter
cmpb
addr16
cli
pushf
cmp
sub
in
dec
sub
out
sbb
cmp
mov
cmp
test
cld
and
pop
mov
mov
or
or
pop
xor
inc
loopne
mov
pop
outsl
leave
mov
cmc
lret
into
mov
sub
shlb
cli
js
inc
jp
arpl
fstps
cmp
cmc
pusha
inc
jmp
jmp
or
in
imul
in
cmp
and
dec
sub
dec
fnstcw
pop
dec
sti
enter
lret
xor
or
sub
mov
pop
insb
cli
lret
popa
mov
lcall
insb
push
xlat
cmp
in
or
out
repz
mov
jle
mov
or
mov
add
pop
sbb
dec
iret
imul
lret
jl
int
inc
cmp
sar
and
shrb
ret
jle
cwtl
sbb
cli
ficoms
jbe
push
or
sbb
mov
pop
jo
pop
jmp
lcall
jl
sbb
stos
sub
leave
or
stos
mov
inc
mov
xor
mov
data16
ds
fsts
out
ljmp
jbe
sub
dec
mov
push
mov
lret
or
sub
mov
call
ficomps
sarb
insb
jl
sarl
jmp
fsub
jmp
stos
cmp
clc
aas
std
sub
xor
clc
inc
xchg
daa
loopne
inc
std
mov
add
cmp
dec
push
bswap
cmp
mov
imul
negl
dec
add
pop
push
xor
sub
stc
ficompl
rorb
mov
out
sbb
push
sti
jmp
iret
sub
imul
in
or
pusha
fsubrs
in
fwait
pop
jmp
in
sub
fs
and
dec
imul
sbb
popa
and
jp
cmp
pop
push
test
pop
push
sbb
cmp
out
mov
jmp
add
movsl
inc
add
and
push
sti
fistpl
pop
stos
push
and
jmp
sub
dec
in
int
or
pop
xchg
cs
inc
popf
jmp
push
mov
pop
icebp
xor
ja
cmp
sbb
scas
movsl
sub
cwtl
dec
dec
mov
stos
fisubrs
xchg
adc
dec
mov
mov
cli
adc
jo
fimuls
leave
xor
jae
pop
push
dec
mov
or
push
mov
sbb
fincstp
rcrb
enter
rorl
or
mov
inc
pop
mov
lret
inc
fcomps
or
sub
dec
pop
cwtl
mov
lret
roll
lods
cli
jmp
test
mov
fisttpl
jne
jmp
mov
imul
out
xchg
inc
dec
jmp
push
aaa
sub
sbb
stos
bound
pop
push
jmp
bound
stc
pop
cli
rcrb
imul
fdivrl
popf
cltd
hlt
into
pop
pop
cli
ficompl
dec
sbb
sub
arpl
call
jnp
lods
sbb
mov
test
das
xchg
cmp
scas
sar
dec
rorb
sbb
cmp
pop
loopne
or
or
ljmp
enter
push
icebp
jmp
xor
ja
cli
clc
sbb
idivl
sub
push
lods
jl
pusha
divl
mov
stos
or
dec
dec
loopne
push
cmpb
data16
stos
dec
and
cmp
sbb
aad
test
movsl
adc
je
sbb
inc
lahf
cmpsl
imul
mov
out
cli
lret
stc
pop
mov
dec
jle
cmp
mov
ficoms
out
push
mov
xor
jnp
fcoms
dec
test
add
mov
fsubrs
jp
stos
imul
cmp
mov
and
stos
push
pop
mov
dec
jmp
stos
mov
insb
mov
sbb
insl
loopne
ds
xchg
xlat
push
pop
movsl
pop
call
push
jl
mov
stos
sbb
mov
mov
and
pop
test
enter
jle
jmp
cmp
jecxz
inc
jp
dec
or
cmp
jl
jns
jmp
or
jae
stos
movsl
add
xorb
fisubs
mov
sub
insl
testl
inc
mov
mov
mov
insb
jmp
mov
arpl
sbb
xor
adc
pop
js
and
aaa
clc
fadds
xchg
fmul
neg
cld
bound
aas
sbb
out
pop
nop
std
pop
in
sub
mov
sbb
lea
leave
xchg
ja
popf
xchg
xchg
fildl
jmp
inc
pop
and
mov
mov
sti
mov
icebp
arpl
jl
sahf
mov
dec
add
and
lods
sbb
and
sbb
jmp
pop
jae
xor
test
into
mov
mov
sbb
pop
pop
mov
sub
or
les
jno
mov
cmp
and
arpl
push
outsl
or
or
jmp
sub
lods
cmp
pop
mov
mov
shll
dec
cmp
aas
nop
leave
sub
and
imul
movsb
push
test
ss
jb
sbb
cmp
mov
sub
fdiv
add
imull
pop
mov
in
popf
jmp
mov
sbb
fisubrs
pop
and
sub
dec
loope
inc
nop
push
int3
or
orl
cwtl
and
fmuls
pop
test
jmp
or
stc
jmp
cmp
sub
into
call
jp
mov
dec
cmp
mov
stc
push
in
fists
pop
rolb
sbb
push
pop
pop
in
jecxz
push
mov
test
insl
mov
mov
test
outsl
lock
dec
lcall
leave
sub
sub
dec
dec
sub
dec
int3
inc
xchg
jno
push
mov
out
mov
jle
fyl2x
das
xor
sub
nop
cmc
jp
inc
mov
or
mov
fcompl
ds
mov
imul
std
sub
in
mov
sub
sub
jmp
cmp
or
test
xorl
jp
stos
cli
mov
loopne
in
ljmp
pop
sbb
pop
in
jle
into
sbb
mov
adc
fimull
cmp
adc
fsubs
leave
jmp
dec
inc
jo
imul
pop
shr
xor
js
dec
xchg
cmpsb
sbb
xchg
jge
sub
stc
mov
movsl
pop
loop
push
dec
sbb
jle
push
stos
enter
es
ficompl
sbb
lds
dec
adc
pop
sti
jp
rorb
ss
or
ret
cli
imul
stos
fdivr
inc
push
not
mov
xor
mov
pop
mov
pop
or
inc
push
ja
sbb
jp
in
pop
ljmp
jb
cmc
jge
test
ds
cmp
pop
dec
out
cld
mov
cli
sub
fists
test
push
lds
sub
cs
push
mov
or
js
sti
xlat
or
movsl
pop
insb
push
dec
sbb
std
sbb
fdivrs
mov
lret
inc
jnp
lahf
sub
cs
sub
mov
mov
inc
outsl
fwait
or
leave
jecxz
test
push
jmp
outsl
or
cmp
clc
sti
adc
jmp
sub
dec
cwtl
cmp
xchg
inc
sbb
insb
test
xor
push
fnstcw
pop
int
stos
jno
jbe
sub
or
mov
jp
addr16
push
fwait
sub
arpl
ljmp
sub
or
das
lds
stos
add
mov
shll
adc
push
mov
and
in
mov
jl
cmp
fldl2t
clc
inc
xor
clc
dec
mov
pushf
xchg
fadd
int3
iret
xlat
repz
adc
mov
and
jmp
fmuls
cbtw
jnp
jp
sub
test
sbb
pushf
inc
in
negl
dec
pop
mov
xlat
sahf
sti
mov
out
push
xchg
cmpsl
mov
testb
pop
jge
and
outsl
pushw
lret
andl
addr16
outsl
fistpl
sbb
cmp
ljmp
add
prefetcht2
scas
adc
loope
mov
cli
sbb
dec
sub
pop
cmp
cmp
pop
js
imul
dec
ljmp
mov
adc
cmp
arpl
aas
push
cmp
fildll
movsl
mov
or
fsubs
jl
int3
ljmp
mov
sub
js
sub
fldt
mov
test
test
or
enter
jmp
in
add
dec
sub
movsl
cmp
cmp
fucomi
mov
sub
jbe
rorb
mov
jo
inc
cli
cmp
test
ror
mov
push
mov
add
lea
or
sub
insl
or
stc
fs
js
stos
aas
dec
sub
sub
lock
dec
imul
ret
or
hlt
xorb
movsl
scas
dec
xchg
inc
sub
pop
jmp
jle
js
push
sub
add
leave
sub
insb
in
stos
dec
fiaddl
enter
popf
jns
daa
repz
xchg
mov
mov
out
jmp
mov
iret
test
dec
enter
fdivr
sti
pop
mov
mov
shlb
clc
sbb
push
pop
mov
jmp
ljmp
data16
dec
inc
mov
cmp
orl
sbb
stos
fnstenv
arpl
sti
mov
xor
pop
movsl
pop
rorl
jo
inc
aaa
sbb
in
lahf
pop
cmp
inc
add
ss
fs
sbb
iret
cmp
call
xchg
cld
aam
es
mov
int
and
sub
idivl
cmp
mov
std
dec
mov
insb
or
fidivrl
sub
sbb
lret
or
adc
addr16
repnz
fsubr
push
pusha
std
lret
test
adc
imul
outsl
ljmp
mov
xchg
cwtl
mov
fcoms
je
xor
imul
lcall
mov
aaa
rcrb
inc
fcos
pop
mov
int3
ds
fs
or
clc
or
or
fninit
mov
jmp
sbb
xlat
jb
push
sbb
mov
lods
or
or
lods
sub
adc
jne
jmp
ljmp
push
jnp
cmp
inc
leave
inc
and
xlat
insl
test
jns
pop
and
dec
mov
sbb
or
dec
call
push
mov
in
shll
fs
gs
lret
fidivrs
jae
jp
mov
fnstenv
sub
dec
mov
pop
jne
pop
or
lods
in
outsl
or
enter
sbb
sbb
test
mov
cs
cmp
ljmp
cs
push
or
xchg
cmpl
out
leave
jmp
mov
ds
lea
cli
jmp
je
daa
cmpsl
mov
loop
or
ljmp
in
push
lret
jmp
cmp
mov
dec
sti
jae
iret
sbb
arpl
or
jecxz
add
add
adc
in
lcall
push
jo
sti
lret
fmuls
xchg
fstps
jmp
xor
inc
imul
lods
sbb
cmp
leave
push
pop
pop
nop
test
call
jge
xchg
sub
dec
xorl
lret
push
mov
cmp
push
into
cmc
xor
js
mov
or
stc
mov
mov
aaa
mov
cmp
mov
adc
enter
cmp
shrl
mov
insb
pop
in
fidivrs
cmp
sbb
or
jne
cwtl
test
mov
jecxz
and
inc
push
insl
movsb
movsl
xchg
dec
mov
cwtl
in
sbb
push
lods
or
sub
in
popf
inc
cmc
cli
fidivrs
pop
cmp
or
repnz
or
jmp
lret
cli
adc
dec
cs
inc
testb
lds
enter
cmp
fisubl
stos
or
cmp
mov
fwait
stc
call
push
out
mov
arpl
popa
add
cli
or
mov
dec
push
inc
out
sbb
pusha
xchg
jne
xchg
leave
sub
fistpl
jmp
pop
icebp
and
sbb
iret
sbb
jbe
xor
cli
lret
sub
mov
shl
ficompl
insb
cs
bnd
pop
adc
jmp
scas
push
cmp
xchg
or
loope
sub
int
pop
dec
lods
stc
inc
mov
pop
dec
push
js
sbb
mov
pop
mov
sbb
sbb
mov
stc
jl
fs
mov
mov
fiaddl
jmp
and
dec
das
outsb
popa
rorb
or
cs
cmp
xlat
loope
stos
mov
pop
adc
dec
xlat
mov
sbb
insl
ret
jl
enter
lea
inc
orl
in
mov
movsl
jae
dec
dec
jg
or
push
dec
inc
stos
insb
leave
adc
mov
mov
das
in
out
add
imull
cwtl
mov
das
jl
ret
popa
xor
imul
lahf
jp
sbb
dec
mov
mov
sbb
or
sbb
jp
adc
ret
sbb
in
dec
mov
jmp
enter
pop
push
or
fisttpl
sub
data16
pop
sti
nop
push
or
aaa
inc
or
xlat
sub
addr16
xchg
jecxz
add
sbb
in
inc
mov
xchg
lea
jae
inc
sub
aaa
in
ret
sub
jl
mul
ficoml
pop
or
ljmp
test
mov
sub
dec
imull
out
sub
or
fistpl
sbb
js
outsl
orl
xor
sbb
test
sbb
add
test
add
jl
mov
insb
fisttpl
jmp
mov
aaa
lea
insb
lods
fisubl
lods
sti
outsl
mov
sub
fyl2xp1
mov
dec
dec
nop
imul
or
pop
sub
or
jle
mov
lret
push
or
push
mov
int3
enter
pop
mov
insb
aas
sbb
mov
sbb
xlat
and
mov
gs
push
sbb
daa
cltd
push
aam
fildl
movsl
adc
xchg
inc
mov
mov
push
fidivs
and
rcr
jg
dec
mov
dec
or
in
pushf
out
add
xchg
or
rcrb
mov
dec
rep
mov
pop
xchg
dec
cmp
mov
jmp
dec
lret
movsl
mov
shr
icebp
cmc
mov
sub
les
neg
xchg
scas
bound
inc
sub
imull
or
pop
stos
push
or
sbb
lret
sub
fwait
pop
test
sub
mov
sub
out
sahf
stos
inc
ljmp
pop
mov
arpl
test
cmp
sbb
dec
mov
mov
arpl
fldt
js
push
mov
mov
outsl
test
fcomps
sub
and
sub
add
imull
xchg
jmp
mov
cmc
jp
push
cld
mov
jo
mov
cli
sub
fcoms
test
or
pop
adc
jge
mov
leave
aaa
fistps
sbb
add
aas
jp
sub
mov
sub
call
out
inc
cmp
movsl
sbb
cmc
outsb
cmp
cmp
jnp
cmc
sbb
jl
xor
ret
iret
mov
push
arpl
sub
mov
leave
div
xchg
sub
mov
mov
sub
sub
sbb
dec
push
or
dec
loop,pn
pop
lcall
outsb
pop
jo
insl
pop
cmc
loop
xchg
pop
lcall
pop
xor
movd
or
in
cmp
mov
jge
push
dec
sbb
push
add
dec
pop
xlat
xchg
mov
in
jl
pusha
dec
dec
or
mov
jbe
das
pop
insb
addr16
sub
or
jl
cmp
sbb
fstpt
cltd
jle
mov
push
dec
scas
js
movsb
insb
dec
sarb
lret
cmp
stos
stc
test
mov
or
jle
stos
idivl
inc
lods
xlat
jnp
call
sub
mov
mov
fisubl
and
ret
mov
mov
jecxz
in
mov
jmp
xchg
fstl
mov
shlb
sbb
dec
pop
and
dec
xor
in
sub
xchg
lret
pop
jno
cmc
clc
lods
dec
mov
add
mov
pop
mov
push
or
in
cwtl
inc
push
or
dec
pop
subl
and
cli
outsb
test
icebp
shrl
lcall
mov
pop
imul
shrl
call
sbb
stos
cwtl
dec
adc
sbb
stc
iret
dec
inc
ljmp
mov
and
add
xor
call
imull
in
mov
out
cwtl
cmp
outsb
cmp
in
cli
call
or
dec
jge
mov
cld
test
insb
mov
push
imul
inc
leave
push
dec
jmp
es
sub
jb
sbb
jne
gs
cmp
pop
xor
stos
test
cmp
fcmove
mov
mov
test
pop
jb
sub
clc
or
js
pop
push
dec
lret
cmp
push
dec
cmp
cmp
out
stos
or
sbb
or
leave
sub
cwtl
mov
mov
cmp
dec
negl
sub
mov
xchg
or
mov
fsincos
cmp
sbb
cmp
xchg
aaa
loop
mov
imull
jae
xor
mul
ret
pop
cmc
enter
pushf
lret
mov
cmp
sti
clc
leave
test
pop
addr16
cli
or
and
pop
cwtl
data16
sub
jecxz
jmp
cmp
cmpsl
sub
dec
sbb
test
or
inc
add
in
aaa
popf
mov
lret
lahf
bound
cmp
in
jne
jbe
outsb
push
push
pop
popf
pop
sbb
in
push
xchg
sub
sub
push
pop
sti
stc
cmp
ret
dec
jno
js
jp
testl
or
mov
mov
dec
call
or
dec
cmp
dec
push
dec
push
inc
mov
sbb
stos
pop
loope
lods
cli
mov
sbb
lret
xchg
test
inc
fadds
daa
and
je
maxps
pop
mov
cmp
sbb
ss
es
fcmovbe
dec
lds
xchg
push
in
dec
push
fsubs
jp
mov
aaa
jmp
hlt
sbb
mov
pop
mov
notl
push
mov
mov
in
xor
pop
std
mov
iret
mov
dec
fwait
mov
les
inc
shrl
xchg
and
xor
fs
dec
ljmp
fucomp
xor
or
rcrb
dec
cmp
mov
test
cwtl
mov
adc
out
mov
jecxz
cmpsb
cmp
mov
add
test
xchg
pop
call
enter
aas
cmp
pop
xor
and
sub
cmp
pop
dec
clc
xor
flds
or
adc
dec
push
or
adc
addr16
cltd
and
fiadds
mov
clc
mov
xchg
mov
push
es
add
jno
mov
jnp
xor
jmp
inc
addr16
data16
int3
dec
cmpsb
int3
push
cmc
lret
in
mov
and
test
arpl
fsts
out
mov
in
inc
popw
test
sub
xlat
add
cmc
mov
push
sub
in
pop
in
xchg
sti
adc
or
or
add
mov
lods
clc
call
sub
clc
sub
addr16
and
pop
rorl
mov
pop
sub
jbe
sub
or
push
pop
cmp
push
xchg
movsb
pop
sti
cs
stc
arpl
mov
inc
push
jmp
fmull
inc
cmc
sarl
in
arpl
cwtl
and
movsl
mov
cmp
sub
push
lock
ss
or
xchg
push
cmc
pop
or
add
data16
cwtl
rclb
movsl
jbe
mov
sahf
jbe
jmp
cmp
in
sub
cmp
jo
insl
or
add
in
jae
addr16
push
sahf
sub
push
stos
decb
cmc
dec
jmp
pop
sbb
mov
or
clc
push
xor
adc
and
rolb
js
sub
ss
cmp
jbe
lods
or
jne
sub
mov
add
movsl
jmp
dec
cli
xor
sbb
inc
xchg
adc
sub
arpl
jo
lret
inc
sub
dec
cmc
mov
dec
push
cmc
mov
rorb
fadd
ljmp
cwtl
movsb
push
addr16
dec
add
test
xchg
mov
insl
out
fs
lret
sub
push
sahf
cwtl
lods
into
ss
xchg
and
dec
jmp
test
cmc
push
in
cmp
fdiv
lret
clc
pop
test
and
out
and
mov
stc
mov
out
lcall
movsb
stos
or
dec
pop
ljmp
sub
adc
mov
fildl
movsb
dec
testb
loop
jecxz
or
mov
movsb
push
shll
lret
int3
shll
add
mov
movsl
add
mov
movsl
jmp
dec
jg
or
scas
clc
stos
sub
inc
sbb
fsubrs
mov
jp
loop
enter
or
mov
test
js
outsl
jp
inc
or
test
xlat
dec
scas
lret
push
pop
enter
sbb
mov
push
adc
jmp
div
xchg
mov
or
es
outsb
ret
or
movsl
mov
nop
mov
sbbb
hlt
ftst
inc
pop
xor
sbb
mov
add
sub
jmp
cmp
sub
xlat
fisubrs
pop
cmc
loope
mov
cli
mov
je
mov
cmp
or
cld
fstpt
sbb
xor
jo
sbb
fstpt
jmp
enter
dec
or
jmp
cmpb
and
mov
cli
out
fstps
enter
fdivrs
add
mov
in
and
jecxz
jmp
call
mov
fcmovnu
in
lcall
jmp
jmp
jle
and
fisttps
cwtl
cmp
sub
cmpl
stc
xchg
mov
sbb
cmp
mov
inc
adc
xor
mov
lods
adc
cmpsl
popf
enter
push
movsl
push
cmp
pusha
clc
mov
out
dec
stos
cmp
fstpl
sbb
jmp
or
inc
cmp
ljmp
idivl
inc
sar
shrl
movsl
lods
push
outsb
sub
sub
dec
sbb
or
or
addr16
ss
int
cs
lods
stc
popf
insl
fistl
cmp
sub
mov
or
cmp
inc
outsb
es
add
lods
fimull
cmp
cmp
sbb
pop
and
sub
pop
push
mov
xlat
pop
clc
sub
enter
cmp
pop
or
pop
mov
cmp
mov
cmp
adc
sub
stc
sbb
pop
dec
aas
or
xchg
sub
sahf
cli
cmp
mov
and
adcw
jmp
dec
sub
js
jns
dec
jmp
or
bound
mov
jg
mov
repnz
sbb
or
push
sahf
in
jl
inc
in
bound
cmp
sbb
dec
mov
jmp
aas
jae
mov
cmp
and
insb
lds
icebp
das
pop
sub
xchg
cmp
arpl
das
xchg
gs
dec
xor
lret
or
push
add
sub
fidivrs
scas
push
dec
jl
sti
or
jmp
push
subb
lcall
fidivrl
push
jp
or
sbb
stc
cmp
sbb
cmc
push
mov
in
dec
mov
lahf
pop
mov
insl
pop
lcall
xlat
jecxz
data16
lock
movsl
sbb
stos
cmp
addr16
mov
dec
push
fldt
sbb
rorb
or
sbb
jecxz
scas
js
call
mov
jge
clc
jns
mov
mov
sub
jae
rorl
sub
das
cmp
jns
jmp
cmp
cmp
dec
add
div
dec
in
jne
push
sub
dec
fsubrs
sti
dec
aaa
mov
ljmp
dec
dec
sub
nop
sbb
mov
jmp
mov
outsl
lret
sbb
and
jb
push
cmp
dec
mov
loopne
sub
dec
or
jo
aas
sbb
mov
movsb
cmp
mov
adc
out
push
or
fsub
sbb
mov
push
test
ficompl
jno,pt
sub
dec
in
jg
jmp
push
ljmp
or
cli
call
and
repnz
sbb
sbb
stos
clc
insl
clc
pop
fimull
idivl
js
fstpt
out
sbb
cmc
bound
push
jne
mov
or
outsl
jno
fcompp
pop
aam
inc
cmp
stc
sub
shr
ljmp
out
cmc
sbb
imul
xchg
loop
cli
in
jl
andl
cltd
dec
jmp
xchg
pop
jmp
pushf
stc
dec
loope
lret
ljmp
mov
mull
loopne
push
ljmp
fimull
or
in
negl
pop
push
lods
cmp
sbb
dec
lret
jecxz
stos
xor
repz
dec
jge
dec
pop
scas
inc
dec
pop
xor
jl
lret
fsubs
xor
leave
cli
push
fucomi
push
or
imul
dec
js
ljmpw
fwait
mov
insb
stos
push
flds
ljmp
inc
jne
fisubrl
sub
mov
pop
pop
mov
jo
movsl
jl
mov
or
addr16
sub
and
test
rcr
or
adc
leave
or
loop
and
stc
mov
js
test
sub
ret
jae
xlat
or
movsl
stc
data16
clc
dec
sub
outsl
stc
insb
lret
inc
mov
cmp
imul
imul
cmp
pop
mov
sbb
mov
jl
cmp
mov
stos
lahf
jbe
mov
sbb
out
fidivrl
lahf
jl
cmp
sub
sub
jmp
loope
aaa
xlat
sahf
mov
cli
gs
fistpl
mov
lret
sbb
lret
jge
mov
dec
jne
mov
jmp
jle
outsl
jp
clc
sub
mov
ss
popa
sub
ret
enter
dec
xlat
sbb
cmp
mov
roll
jg
cmp
sub
pop
out
pop
jle
call
fadds
cmp
pop
sbb
fstpt
dec
cmp
push
shrl
jl
xchg
ljmp
sbb
pop
mov
icebp
jb
jmp
shll
stos
mov
scas
xor
sub
pop
jl
mov
in
push
push
loopne
xchg
xor
sub
mov
cmp
sbb
imul
lret
sub
stos
xlat
std
cs
out
push
cli
mov
jmp
mov
in
cmp
sub
jmp
sub
ljmp
pop
lock
pop
cwtl
insl
outsl
cwtl
outsl
fmuls
or
jle
sub
leave
aaa
loope
sub
imul
lret
lods
xlat
sub
add
testl
ljmp
das
sub
push
fstpl
bnd
pop
std
lret
insb
dec
pop
test
inc
dec
fwait
imul
dec
sub
cmp
jmp
cmp
test
push
inc
sub
cmp
std
leave
fsubrs
btr
ja
lret
pushf
jmp
bound
call
jae
jl
or
mov
mov
fwait
loope
out
sub
dec
cld
js
mov
xchg
imul
lcall
das
fnstcw
insb
push
mov
les
push
xlat
lcall
push
je
mov
mov
mov
or
psllq
inc
into
dec
or
add
mov
inc
pushf
lcall
test
test
dec
fisubrl
stos
ja
in
jmp
mov
pusha
dec
cld
push
push
data16
pop
adc
pop
cmp
rorl
pop
idivb
outsl
and
push
sub
ljmp
cmp
pop
inc
leave
dec
nop
mov
inc
jle
sub
imull
jecxz
ja
pop
ret
lret
pop
jecxz
push
xchg
pop
jg
aaa
push
lcall
je
sub
mov
xchg
ljmp
lods
mov
movsb
sbbb
arpl
dec
sbb
xchg
popa
adc
mov
cmp
sub
js
pop
dec
loope
popa
cmpsb
or
add
imul
fstl
aam
push
inc
sbb
loop
js
and
fsubr
dec
xchg
pop
cmp
dec
sub
and
push
std
jl
xor
push
xor
and
sbb
hlt
pop
negb
mov
jmp
enter
jp
pop
jg
clc
stos
mov
cmp
outsb
scas
daa
xlat
xor
call
or
lcall
stos
jp
or
nop
mov
push
mov
sub
stos
jmp
pop
nop
cld
add
push
or
movsb
fldt
pop
out
sbb
mov
sub
ljmp
sbbb
pop
subb
fsubrs
stc
out
mov
scas
dec
data16
lea
or
pop
jmp
adc
stos
das
dec
xlat
pop
pop
mov
cmp
fiaddl
xor
stos
or
pop
leave
dec
fimull
jge
mov
xchg
jg
daa
pop
sub
out
or
cmp
lods
sbb
push
or
iret
push
test
and
fwait
dec
sbb
sub
jmp
jle
cli
orb
or
or
daa
test
xlat
dec
and
jg
sbb
sub
inc
add
cmc
or
and
push
fcmovb
pop
clc
jp
lahf
les
dec
sbb
inc
sbb
cmp
lea
mov
and
ljmp
sbb
sti
xor
dec
mov
movsl
push
je
jecxz
sub
jl
pop
sub
jns
out
mov
stos
xor
je
cmpsl
ljmp
lods
or
lods
iret
fidivrs
xchg
pop
mov
cs
stos
and
mov
or
popa
xchg
fcmove
sub
stos
push
jle
cmp
sbb
stos
outsl
test
pop
or
enter
sbb
lods
stos
dec
jne
pop
fdivrs
add
arpl
and
inc
mov
cmp
js
pop
xchg
push
push
sbb
inc
jecxz
push
fisttpll
arpl
mov
pop
outsl
fcmovnu
fstps
sub
leave
jbe
add
xchg
pop
dec
into
ljmp
in
xor
inc
lret
in
pop
jmp
mov
cmp
pop
hlt
pop
push
sub
jns
jecxz
sbb
dec
or
jmp
sub
insb
mov
int3
push
push
movsl
cmpsb
pop
stc
sbb
adc
out
orl
jmp
mov
pop
jle
push
in
xchg
push
or
mov
jmp
mov
cmp
js
in
scas
sti
pop
xchg
add
rcrl
or
mov
stc
mov
and
dec
sub
push
push
push
sbb
pop
push
sub
shrb
sub
fimull
adc
push
bound
out
mov
stos
or
or
cwtl
cmp
fsubr
sub
dec
mov
dec
stos
roll
dec
pop
push
lahf
enter
jne
sub
repnz
clc
cwtl
cli
pop
mov
mov
pushf
ret
and
das
call
cmp
dec
cli
push
cmc
sbb
ret
scas
sbb
jp
or
add
pusha
pop
or
mov
sbb
popf
jmp
scas
std
lcall
cmp
outsl
adc
fisubrs
or
repnz
push
fisubrs
fidivs
dec
sub
dec
inc
cmc
sbb
cmp
push
xor
add
cld
imul
inc
fxam
adc
imul
mov
mov
or
xor
inc
or
fiadds
sub
or
cmp
popf
aaa
daa
cmp
mov
mov
js
cmp
ds
or
imul
leave
cmp
adc
enter
pop
or
fdivrs
cli
insl
sti
sbb
shll
fisubrl
stos
pushf
cmp
or
std
testl
jl
sti
sub
adc
sbb
stos
adc
add
arpl
jp
or
dec
jg
dec
dec
cmp
pop
mov
sahf
movsl
mov
cwtl
test
mov
ficoml
cmp
mov
sbb
mov
into
ljmp
dec
or
mov
roll
enter
in
fldt
dec
std
sbb
xchg
out
fsubs
dec
out
cmp
stos
or
pusha
ret
leave
or
icebp
sbb
adc
arpl
or
dec
mov
dec
enter
or
in
and
dec
jp
bound
scas
sub
jmp
fimuls
push
xchg
test
push
popw
xchg
sbb
lret
mov
js
push
mov
outsl
daa
sub
or
jle
sub
fsubs
stos
cwtl
test
sub
inc
fnsave
fcompl
sub
punpcklbw
loopne
or
dec
or
sbb
mov
xlat
imul
pop
dec
pop
sbb
cmp
or
jmp
enter
xlat
or
ljmp
sub
xlat
push
dec
mov
jp
call
loope
ds
dec
xor
pop
lcall
in
pop
sub
jmp
fcom
push
pop
jns
leave
ljmp
mov
xor
data16
add
std
dec
arpl
sti
sub
mov
mov
clc
ljmp
push
lock
sbb
lcall
addr16
or
adc
jno
sub
jne
fs
test
stc
adc
insl
addr16
jne
out
sbbb
pop
insb
cmp
or
mov
xor
add
in
imull
jg
popf
rcr
sub
pop
xchg
dec
lcall
pop
negl
stos
fimull
push
adc
ret
sar
sub
and
sub
push
push
pop
lcall
mov
scas
mov
cltd
lret
popf
jg
lcall
sub
jmp
jns
push
mov
push
dec
pop
dec
jmp
pop
inc
push
pop
adc
mov
xor
fs
or
call
mov
jmp
sub
xlat
stos
movsl
out
mov
jge
cmpb
fldt
mov
mov
stc
pop
sub
out
sub
add
add
jmp
lret
sub
fidivrs
inc
lock
or
out
sarl
cpuid
sti
stos
stos
lret
dec
stc
test
push
mov
cwtl
test
inc
adc
xor
sub
jle
das
js
aaa
sti
hlt
je
sbb
xor
lods
adc
jp
pop
enter
push
mov
xchg
imull
cmpsl
xchg
jmp
or
or
fs
push
jmp
std
sub
fidivs
or
and
mov
movsb
mov
sub
test
loope
lods
enter
sub
movsl
pop
mov
push
jl
push
pop
push
stos
ds
cmp
pop
in
and
pop
mov
hlt
sub
xor
jmp
sub
enter
mov
cmp
test
push
sub
push
dec
xchg
scas
dec
ds
cwtl
insb
dec
or
fmuls
or
mov
pop
movsb
mov
insb
imul
or
outsl
or
js
enter
nop
dec
sub
jge
shrb
xor
push
lret
dec
jecxz
jmp
in
dec
pop
or
cmp
xor
out
xlat
push
dec
mov
adc
cli
pusha
test
out
jno
rcrl
dec
push
inc
ljmp
push
repnz
cmc
mov
into
jg
dec
dec
mov
fdivs
jnp
adc
pusha
cmp
lods
cmp
push
pop
jge
jne
and
aaa
decb
push
js
lret
or
or
jae
push
fldt
and
xchg
cltd
out
inc
push
sti
lods
outsl
xchg
mov
jbe
sbb
ret
dec
pop
push
cmp
ljmp
sub
dec
fsubrs
xlat
jmp
or
sbb
loopne
int3
dec
movsl
fimuls
js
sub
fsubp
push
push
stc
mov
xlat
jo
insl
xchg
outsl
or
cmp
sub
outsl
dec
fcomps
sbb
sub
in
or
jmp
cld
jp
ljmp
call
pop
mov
inc
dec
cmpsb
jns
cli
fistl
cmp
sbb
push
add
jmp
dec
into
sub
pop
xchg
aas
mov
inc
jb
arpl
dec
clc
pop
sub
dec
sub
mov
data16
test
test
pop
mov
test
loopne
dec
insb
in
sub
mov
or
mov
into
popf
jb
sub
sbb
cmp
js
mov
dec
sub
push
jmp
pop
add
cwtl
lcall
ja
call
lahf
imulb
inc
sbb
ficoms
mov
xchg
cmp
pop
jnp
lret
stos
mov
fistpl
or
dec
imul
cvtps2pd
sub
lret
or
imul
inc
xlat
call
dec
mov
cmpsb
sbb
rcrl
mov
nop
or
cli
mov
cmpsl
mov
sti
inc
icebp
stos
dec
adc
lahf
cli
lock
into
inc
mov
jge
push
cmp
mov
popa
orl
clc
loopne
jmp
sub
xor
push
pop
dec
shrb
lret
push
or
sarl
mov
jmp
iret
xchg
sbb
mov
sbb
mov
fmull
movsb
mov
pop
insl
iret
imul
pop
jp
mov
push
cli
mov
adc
mov
enter
cmp
jecxz
std
pop
js
ds
std
push
push
out
fchs
mov
jmp
jp
jmp
and
jle
jle
dec
icebp
ds
pop
xor
jl
and
loop
sub
pop
adc
xchg
sub
xor
mov
jge
xor
fnstsw
lods
dec
jnp
cmp
cmp
push
cli
ljmp
mov
pop
dec
push
push
cmp
push
dec
sbb
das
inc
mov
idivl
adc
sbb
pop
and
sub
jmp
dec
jae
fidivrl
or
sub
dec
sbb
mov
dec
push
outsl
sahf
fisttpl
dec
jno
pop
mov
jle
lea
push
adc
imul
leave
into
push
or
insl
je
popf
dec
pop
sbb
push
lret
sub
insb
inc
push
outsb
push
sub
and
or
insb
sub
mov
lret
lods
dec
iret
mov
ds
into
or
insb
dec
sti
mov
pop
pop
sbb
das
dec
test
mov
enter
cmp
push
or
shll
leave
sti
cmp
test
lods
dec
jmp
lods
sub
ret
dec
outsl
pop
mov
cmp
sbb
jmp
sub
xchg
gs
or
cli
sub
inc
outsb
sbb
loopne
clc
mov
decl
add
xor
add
jbe
mov
jp
enter
push
movsb
adc
mov
out
jp
mov
mov
incb
test
cmp
fmuls
or
sti
ljmp
dec
pop
push
nop
sub
mov
dec
dec
into
jae
sub
in
cmpsl
sub
xlat
cmp
jp
sub
in
push
pop
xchg
jnp
daa
nop
dec
sbb
xor
or
push
and
lret
sbb
inc
push
stc
popa
dec
dec
pop
test
outsb
movsl
mov
pop
sbb
fldcw
popa
fdivs
shr
das
leave
jmp
lret
mov
dec
mov
cmpsb
stc
call
cmp
dec
cli
mov
fisubrl
jecxz
out
jmp
fcmovnbe
xlat
jl
mov
or
push
pop
or
pop
ljmp
insb
mov
mov
loopne
ficompl
testl
mov
lods
jmp
pop
repz
lods
ljmp
mov
jp
lods
pop
in
mov
leave
jmp
inc
lahf
ljmp
dec
mov
jg
fildl
cmc
out
lods
pop
cmp
dec
or
cmp
dec
mov
stos
mov
pop
cld
daa
adc
sub
stos
in
sbb
in
out
mov
movl
into
lret
dec
push
lea
clc
mov
dec
out
sbb
not
pop
push
cmp
sbb
cwtl
inc
inc
sbb
repz
js
sbb
sub
sub
pop
ficompl
pop
out
sub
call
xchg
aaa
arpl
enter
sub
insb
mov
das
ljmp
mov
push
mov
pop
xchg
stc
popa
lds
insb
sbb
mov
pop
aaa
sbb
cmp
dec
or
insb
xor
xchg
mull
lret
lods
mov
pop
sbb
xlat
adc
add
sub
ret
jnp
sub
pop
adc
dec
dec
inc
sbb
pop
and
jecxz
push
or
stc
push
sbb
sbb
jmp
divb
push
pop
in
sar
or
cmp
sbb
scas
movsb
push
mov
mov
mov
fdivs
leave
add
ljmp
xlat
mov
sarl
fwait
dec
pop
stc
pop
cs
mov
clc
sub
dec
arpl
fstps
cwtl
in
data16
mov
lea
cmp
mov
mov
mov
clc
testl
fs
mov
pop
lcall
icebp
mov
sbb
dec
mov
inc
enter
or
or
sub
ds
mov
mov
dec
pusha
push
inc
add
sub
aaa
in
fsubs
mov
mov
imul
cmpl
xor
movsb
arpl
push
rcrb
cld
dec
pop
or
push
jecxz
inc
cmpsl
icebp
xor
stos
rcr
cmp
mov
jmp
jnp
sub
cmp
pop
pusha
mov
enter
mov
mov
inc
aas
enter
jp
stos
pusha
sub
cmp
scas
jae
out
std
dec
jl
inc
repnz
cmp
sub
pop
addr16
xlat
dec
fmul
pop
cmp
fs
dec
sub
ficompl
out
mov
pop
outsb
xchg
testb
js
jmp
add
out
ljmp
cwtl
adc
int3
into
fidivrs
clc
outsl
ja
insb
xlat
test
mov
cmp
leave
dec
mov
rorb
test
push
cmp
repz
add
sub
bnd
pop
or
repnz
movsb
or
cmpsl
sti
jmp
lods
cmp
lcall
rolb
mov
jge
mov
ret
push
dec
stc
aas
outsb
or
add
inc
sub
popa
cmp
cmp
cs
or
call
decb
js
inc
add
cmp
fldl2e
out
idiv
inc
push
insb
pop
mov
dec
mov
fcmovnbe
dec
sbb
inc
cli
sub
fnstenv
dec
or
mov
mov
outsl
cmp
negl
pop
ljmp
ds
pop
mov
in
shr
shlb
fidivrs
sbb
cmpb
push
movsl
test
popa
mov
sub
cld
dec
pop
sub
popa
sti
fdivrs
shr
call
cmp
pop
lcall
dec
test
add
adc
inc
jp
or
loope
data16
lret
push
stos
iret
lock
sbb
gs
cwtl
sbb
or
mov
mov
inc
push
mov
or
pop
imul
sahf
lret
call
data16
popa
pop
pop
or
or
pop
xchg
jl
xor
lods
mov
mov
mov
outsb
cmp
dec
lods
or
inc
jecxz
shrb
sub
mov
mov
pop
pop
or
mov
aas
call
or
pop
push
pop
lock
imul
jmp
ljmp
pop
sub
gs
pop
nop
pop
imul
xlat
sbb
pop
call
pop
sub
and
mov
stc
push
mov
jl
mov
and
sub
fisttpl
mov
pop
fs
pop
lock
leave
sub
or
bound
fisubs
inc
stc
dec
ljmp
inc
sbb
dec
std
aad
jge
adc
or
ss
insb
mov
dec
cwtl
fidivs
pop
and
jg
fcom
jl
fstps
pop
insb
jmp
jmp
ljmp
cwtl
sub
pusha
pop
mov
cmpsl
es
ds
push
fldt
jbe
insb
fistl
loope
add
sahf
jle
pop
call
push
dec
ds
outsl
sahf
sub
jmp
dec
add
xchg
push
cmpsl
mov
or
cmc
cmp
fs
insb
jge
idivl
mov
fmull
das
orl
mov
out
adc
scas
stc
dec
and
clc
pop
dec
dec
pop
addr16
lcall
fimull
mov
sub
sbb
in
pop
sbb
sub
cmp
clc
call
pop
addr16
cmp
jmp
sub
jmp
pop
out
mov
clc
dec
test
repz
testl
adc
inc
or
dec
loop
cmpsb
outsb
cvtps2pd
or
cmp
ljmp
pop
pavgb
movsl
or
or
cmp
call
jmp
gs
sub
pop
pop
dec
push
cli
fisttpl
pop
mull
call
mov
inc
sarb
pop
fnstcw
insl
pop
dec
or
ljmp
sbb
leave
negb
idiv
cmp
add
movsl
rcrl
out
or
leave
enter
scas
or
pop
sti
pop
imul
jp
fsubrp
dec
dec
fcmovbe
pop
mov
test
clc
iret
frstor
shr
pop
xor
add
pop
nop
or
adc
sbb
fcomps
notl
dec
leave
data16
sbb
loope
loopne
out
mov
lret
pop
cli
sbb
pop
jmp
imull
test
inc
out
cli
mov
into
je
dec
sub
leave
dec
xchg
or
dec
xchg
xor
cld
pop
jp
sbb
inc
stc
pop
clc
pop
cmp
sbb
or
insb
jmp
imul
or
stos
sti
dec
ja
mov
fistpl
test
insl
movsl
iret
pop
in
dec
cwtl
dec
or
sbbl
jae
sbb
pop
and
mov
andb
arpl
sti
add
data16
sbb
ret
mov
rorb
pop
rcrb
mov
ljmp
sti
adc
add
push
jg
adc
js
cmp
mov
fsts
mov
enter
adc
dec
insb
test
js
orb
loop
pop
cmp
loope
sub
sbb
push
cmp
pusha
sub
clc
jecxz
popf
pop
sbb
test
push
jmp
add
stc
cmp
mov
in
adcb
xchg
call
or
ljmp
push
sar
xchg
xlat
jns
jns
or
push
push
dec
mov
cmp
mov
js
orl
outsl
mov
test
mov
outsl
xor
enter
xchg
fs
and
jmp
jmp
or
and
pop
mov
inc
dec
sbb
pop
or
mov
inc
fidivrs
dec
iret
cmp
or
ja
js
mov
pop
adc
adc
mov
jecxz
call
fildl
dec
cwtl
insb
nop
shr
pop
je
shr
jecxz
repz
stos
cmp
shr
out
stos
mov
pop
js
pop
ret
ret
dec
pop
sub
nop
xlat
pop
movsl
ficompl
negl
xchg
pop
cmp
sub
pop
jo
imulb
dec
inc
cwtl
xlat
mul
pop
fs
enter
ljmp
mov
or
mov
lods
fwait
mov
add
imul
lahf
pop
and
or
cli
sbb
jge
in
mov
das
dec
sbb
sub
call
cmp
sub
insb
jae
add
insl
sarb
cltd
insl
pop
sub
insb
sub
jmp
leave
mov
sub
fsts
sub
xor
dec
shll
xor
imul
lea
sub
cmp
jl
xlat
imul
dec
gs
sub
mov
fcomps
inc
ja
inc
mov
dec
mov
sub
jmp
ljmp
mov
or
in
mov
sbb
xor
cmp
mov
or
jmp
fdivs
arpl
mov
inc
cmp
fldenv
fwait
movsl
andl
sbb
sub
push
jno
jp
outsb
push
xor
jmp
mov
fldt
or
mov
and
out
or
sbb
fidivl
dec
dec
test
cmp
leave
and
and
std
enter
or
or
cmp
cli
hlt
push
pop
lea
xor
cmp
mov
push
sbb
inc
insl
or
sub
outsl
sti
sbb
mov
or
pop
sub
outsl
push
stc
mov
or
out
push
push
clc
cmp
mov
ljmp
test
stos
dec
push
cmp
or
sbb
push
call
lods
xor
cwtl
or
sbb
adc
loopne
stc
fisttpll
sub
add
push
push
sub
jg
sti
mov
push
std
or
aas
pop
cmp
cmp
cmp
jnp
in
push
icebp
scas
sbbl
pop
testl
pop
or
test
mov
dec
dec
mov
and
or
or
ror
ljmp
jp
lahf
mov
ds
pop
lea
or
lods
mov
cmp
insb
in
jge
cmp
cmp
aam
lods
jmp
mov
loopne
sbb
das
jecxz
mov
inc
cmp
push
fdiv
insb
ds
cwtl
lods
lret
ds
outsb
xor
fidivrs
push
dec
mov
jmp
cmpsl
in
jmp
stc
fsubrp
xor
and
mov
in
imul
mov
pusha
sub
jge
lods
int3
push
sti
push
pusha
adc
push
or
dec
rcr
mov
mov
sbb
stos
cmp
addl
lret
lret
or
loope
movsb
xlat
loop
or
jmp
out
mov
push
sbb
stos
sub
pusha
inc
imul
xlat
mov
cmpsl
hlt
pushf
pop
or
adc
adc
cmp
xchg
sub
inc
sarl
jg
out
gs
stc
or
mov
xlat
jp
mov
cwtl
sbb
test
sub
mov
pusha
pop
dec
mov
stc
ljmp
sbb
vsubpd
or
jg
lret
insb
push
das
js
clc
and
pop
sub
sbb
cmp
xlat
ficompl
ljmp
mov
jl
jmp
adc
pop
cmc
fcoml
fsubs
push
xlat
sub
pop
scas
mov
icebp
mov
push
pop
dec
lret
pushf
cmp
mov
clc
test
les
stc
dec
sub
jle
cmp
jge
test
mov
popf
jmp
mov
pop
fisttps
xchg
sbb
inc
mov
insb
cmp
mov
sbb
stos
pushf
jge
dec
pop
ljmp
mov
mov
xlat
dec
push
xor
sbb
mov
mov
leave
jp
ljmp
or
movsl
sub
nop
fisttps
insl
jae
inc
push
sub
stos
adc
push
xchg
push
fidivl
sbb
or
jmp
cld
and
pop
arpl
xlat
jmp
jmp
pop
pop
insb
outsl
mov
fwait
sbb
sub
sbb
mov
sub
push
or
cli
pop
js
push
sub
imul
dec
sub
lcall
stc
sbb
sti
ficompl
inc
pop
dec
mov
pop
test
pusha
mov
ljmp
sub
pop
dec
sti
pop
or
sub
and
clc
sbb
stos
jp
lahf
sub
push
sub
mov
sub
movl
mov
mov
imul
shll
push
insl
mov
dec
push
mov
xlat
xor
push
idivb
dec
test
stos
inc
lods
dec
sbb
cwtl
mov
fsubs
mov
jl
stc
sub
dec
sub
dec
or
sub
pop
cmp
test
mov
push
adc
pop
cmc
jp
add
mov
cmpsl
mov
ficomps
cmp
pop
sub
jmp
dec
rcrl
aas
cmp
sub
inc
pop
fsubrs
out
cmp
cmp
mov
mov
fdivp
pop
jns
mov
or
pusha
push
sub
pop
pusha
mov
dec
jmp
cmp
cwtl
cmp
pop
push
or
mov
sbb
scas
push
or
cmp
stc
pop
outsl
or
ljmp
pop
pop
xchg
pop
cmp
dec
pop
mov
fisubrl
mov
mov
ljmp
xlat
cmp
test
xlat
sub
dec
and
sarl
or
mov
and
das
cmp
sub
sub
inc
jno
xor
mov
dec
jp
pushf
stos
movl
or
loopne
ja
les
str
mov
mov
orl
xor
imul
pop
repnz
pusha
popf
or
pop
pop
mov
mov
lea
xchg
movsl
aas
dec
or
sub
enter
outsb
push
cmp
pop
inc
lods
jge
inc
mov
and
ficomps
fimuls
and
js,pn
mov
decl
or
jp
in
mull
or
mov
push
dec
sbb
mov
sub
bound
jl
lods
inc
sub
pop
pop
dec
stc
lret
push
lahf
cmp
rcrb
orb
iret
insl
mov
jmp
cmp
sti
jl
ljmp
arpl
or
push
enter
jl
fidivrs
mov
dec
sbb
dec
bound
stos
cmp
sub
jmp
pop
fdivs
pop
inc
repnz
stos
xlat
imul
add
data16
pop
sub
call
ljmp
fucompp
outsb
mov
ds
in
and
jp
adc
cmp
jae
sbb
xlat
jmp
cwtl
out
sbb
in
neg
sti
stc
or
in
pop
xchg
scas
xchg
dec
stos
fistpl
dec
mov
inc
jge
or
cli
jl
mov
fcomps
leave
fldenv
pop
mov
xlat
sbb
std
cmp
lea
push
or
std
sub
inc
xchg
ljmp
pop
or
jle
xlat
test
mov
insb
stc
pop
jl
test
std
sbb
ljmp
ds
cmp
dec
setno
call
stc
push
xor
movsb
pop
cld
jmp
mov
scas
mov
sub
mov
fsubrs
les
mov
arpl
dec
and
push
ficompl
into
pop
enter
sub
pop
mov
das
add
xor
sub
imul
xchg
and
and
lcall
jmp
cmp
or
stos
call
pop
dec
out
xor
xor
cmc
dec
sbb
jmp
fisubl
dec
mov
xlat
fnstenv
dec
jmp
sbb
xlat
push
imul
sbb
dec
stos
sub
adc
out
adc
sub
pop
cmp
imul
mov
jle
mov
xlat
test
rorb
dec
iret
loop
cmp
pop
fadd
aas
xchg
sub
pop
jp
pop
pop
inc
fldt
arpl
out
shlb
inc
out
js
in
push
jo
pop
mov
imul
pusha
jl
mov
out
mov
sbb
js
push
jecxz
or
sub
jb
out
xor
dec
mov
pop
loope
mov
ljmp
mov
cli
adc
sbb
ret
loop
pop
clc
cmp
or
lcall
sbb
imul
in
jne
jp
sbb
add
in
and
repnz
jp
jmp
movsl
or
imull
insb
and
xchg
add
push
shr
insb
movsl
lcall
lods
sarl
fistps
sbb
cwtl
dec
push
aad
imull
cmpsl
jmp
mov
js
lcall
pop
out
fidivrl
insb
mov
jle
aas
lret
lods
or
push
xlat
jle
insb
jle
mov
mov
aas
punpckhdq
ljmp
sbb
pop
stos
inc
mov
push
imull
sub
jmp
cmpsb
cwtl
fimull
call
movsl
sbb
aaa
das
jmp
dec
cmp
pop
sbb
loopne
imul
lock
mov
jmp
js
in
push
clc
mov
cltd
pop
shrl
and
pusha
push
mov
sbb
call
push
lcall
cmp
fstpt
dec
push
sbb
std
fstpt
sti
lcall
stos
or
push
stos
sbb
inc
out
insb
enter
aam
sub
aaa
aam
cmc
inc
jp
sub
enter
aas
out
cmp
mov
rsm
or
sub
xchg
ds
cs
fsubp
icebp
dec
es
cmp
jo
pop
push
fadds
pop
mov
sbb
xchg
test
sbb
fmuls
jecxz
cld
dec
pop
sub
pusha
sub
loopne
in
fidivrl
sbb
mov
lret
pop
pop
call
sarb
fisttps
or
movl
cmp
sbb
cmp
pop
fstps
add
stos
dec
ja
cwtl
sbb
push
mov
call
pop
mov
dec
leave
push
cmpb
pop
push
dec
cmc
sbb
pop
sbb
sti
pop
popf
sub
loop
jmp
outsb
sub
dec
push
call
xlat
fidivrl
rol
xlat
mov
scas
frstor
sti
pop
pop
mov
fistpl
leave
mov
sub
in
sub
jmp
rorb
mov
xchg
scas
cmp
sbb
cmpsb
test
adc
xor
cs
mov
fbstp
inc
stos
lret
out
imul
lea
pop
or
stos
mov
inc
dec
and
sub
xor
call
test
fmuls
popa
xor
cmp
jmp
pop
inc
xchg
imul
leave
sahf
xchg
fisubl
repnz
xchg
sub
or
mov
cmp
ds
mov
popa
cmp
enter
inc
lret
push
push
pop
mov
enter
fldcw
cmp
mov
pop
sub
mov
int3
jmp
dec
sub
sbb
test
cwtl
pop
push
fs
dec
arpl
idivl
cmp
jmp
pop
jg
addr16
cmp
jge
std
cmp
popa
fcomps
lahf
or
push
cmp
outsb
dec
mov
push
fs
pop
mov
test
imul
jecxz
jge
ljmp
xor
jne
sbb
jmp
test
pop
xchg
mov
ja
cmp
movsl
cwtl
mov
out
ret
cmpsl
loop
jge
xlat
in
loop
sub
or
or
daa
movsl
cmc
out
jns
test
sbb
push
add
sbb
lds
jmp
jbe
sbb
stos
or
dec
pop
pop
outsl
popa
test
fsubr
pop
sti
fldt
mov
cmp
or
aaa
sahf
stc
xor
xchg
adcb
testl
clc
mov
es
inc
pop
push
pop
jle
sbb
jnp
in
repnz
fidivrl
xchg
scas
push
push
sub
xlat
adc
dec
dec
fistpl
mov
and
movsl
add
mov
pop
data16
add
jp
idivl
xchg
sub
jmp
sub
clc
cmpsl
cli
jns
sbb
movsl
sbb
fxch
pop
xchg
out
mov
and
dec
rorb
stos
pop
sub
pop
mov
jne
enter
push
mov
insl
mov
sbb
data16
out
xchg
cmpsb
dec
ret
or
fdivrs
fdivrl
jecxz
mov
push
and
lods
fildl
enter
push
call
mov
jbe
out
mov
cmp
fcomps
sbb
sti
cmc
push
xor
sub
imul
fisubrl
jge
adc
pop
push
xchg
das
jmp
pop
mov
push
ss
sub
mov
out
xchg
sbb
fldenv
inc
pop
jp
sahf
jge
cli
jmp
or
adc
pop
fcomi
ljmp
mov
xchg
xchg
ljmp
ljmp
jmp
out
inc
sub
insl
dec
sbb
jmp
test
enter
xchg
fimuls
pop
cli
out
or
add
mov
fdivs
adc
out
sbb
add
push
imul
cmp
mov
or
mov
mov
mov
mov
pop
fidivl
mov
dec
pop
idivl
shrb
dec
xor
dec
imull
js
cmp
dec
testl
pushf
dec
dec
inc
sub
push
fwait
pushf
pop
imul
jle
fcompl
ja
mov
repnz
mov
mov
in
adc
iret
lret
aaa
jmp
out
mov
fs
xor
sbb
sub
mov
cmp
inc
js
enter
orb
add
test
cli
fnstcw
cmp
in
stos
mov
jno
cmc
sub
dec
cmp
push
daa
mov
pop
cwtl
push
jae
fldt
push
pop
fbstp
sbb
pop
sti
jmp
sub
sub
dec
sub
push
pop
cmp
mov
js
fcmovb
sbb
enter
dec
dec
out
leave
ljmp
inc
jae
sub
jl
or
mov
clc
fstps
lahf
dec
test
or
sub
rol
jbe
sarb
mov
lahf
arpl
sbb
gs
ljmp
mov
test
rol
cltd
push
fnstcw
adcl
leave
sbb
mov
sub
mov
testl
sub
mov
push
inc
popf
sub
pop
sub
jmp
imul
push
imul
pop
insl
adc
mov
or
and
fildl
fmuls
xchg
dec
test
pop
test
mov
out
or
fadds
adc
daa
test
addr16
sbb
sti
stc
pop
dec
movsl
sbb
pop
mull
mov
xchg
and
mov
sbb
fcompl
jnp
cmpsb
sbb
jmp
popa
cs
inc
test
and
jp
mov
lds
pop
je
sbb
nop
mov
js
mov
push
enter
jle
jmp
push
cmp
fnstsw
clc
daa
cwtl
adc
xlat
fsubrs
insb
js
inc
dec
sbb
arpl
out
jmp
sbb
inc
jns
or
int
int3
incb
mov
lcall
movsl
mov
mov
sbb
add
mov
ss
bound
sub
adc
sub
pop
leave
push
out
add
jle
mov
mov
sub
push
lea
data16
lret
int3
mov
sub
mov
pop
sub
clc
out
ds
mov
dec
daa
jp
mov
pop
stc
cmp
call
dec
mov
arpl
mov
dec
sub
sbb
dec
jmp
dec
cmp
ljmp
dec
data16
adc
adc
imul
pop
lret
cmp
sub
das
mov
xor
xor
js
daa
arpl
or
dec
xor
sbb
adc
mov
lcall
xchg
cmc
mov
mov
movsl
stc
and
mov
push
xor
fxch
mov
fstpl
cs
pop
sub
dec
sub
push
sub
aas
cwtl
sti
dec
jp
in
sub
pop
ljmp
cwtl
pop
ss
pop
js
inc
or
rol
call
test
leave
cmpsl
push
adc
insb
stc
mov
mov
lcall
jl
cmp
push
jp
mov
jmp
lret
lcall
xchg
leave
stc
movsl
mov
inc
fisttpl
mov
iret
jmp
push
loop
rcrb
inc
fadds
leave
sub
push
cmp
inc
jg
push
mov
mov
call
mov
mulb
insb
inc
or
dec
sub
sbb
lea
sti
lcall
mov
cmp
pop
test
aad
mov
add
jmp
push
js
aas
sub
clc
cwtl
imul
pop
cli
jmp
insl
ss
cmp
dec
or
sbb
sbb
or
leave
mov
fimull
stos
lcall
sub
mov
icebp
mov
sbb
loope
sub
mov
add
jo
jno
or
dec
in
test
insb
mov
sbb
sub
or
out
push
inc
movsl
or
inc
and
sbb
jmp
mov
movsb
aas
call
negb
cld
push
mov
and
popf
jl
dec
push
imul
dec
stos
fiaddl
fdivr
pop
or
cmpb
stos
xchg
dec
dec
add
fiaddl
mov
fmull
dec
mov
dec
test
neg
pop
imul
sub
mov
ljmp
or
pop
xor
sub
add
movsb
ret
outsl
loopne
test
mov
lret
ljmp
or
fsubrs
daa
stc
pop
sub
push
mov
ficompl
add
pop
pop
jmp
repnz
arpl
mov
or
cmc
dec
jo
sti
enter
xchg
call
enter
or
jl
loop
insb
adc
rcrb
xor
or
cmpsl
arpl
cmp
or
test
test
and
ja
ljmp
pop
sub
imul
dec
iret
cs
fs
pop
lods
or
ds
jae
add
xlat
sbb
out
cmp
popa
dec
sub
stos
sti
xor
out
rol
flds
fisttpll
dec
js
cmp
mov
stc
xchg
mov
jl
stos
movsl
and
mov
mov
push
lods
sub
push
dec
fsubrs
aad
insb
dec
in
dec
les
ficomps
daa
add
daa
lods
dec
jbe
mov
push
test
sub
aas
xor
xlat
pop
lea
sbb
sub
cmp
add
cmc
lret
fldenv
dec
mov
pop
lods
and
xlat
gs
mov
push
dec
dec
jl
in
mov
enter
jb
jp
imul
dec
loopnew
jl
leave
pop
sbb
cmp
jne
adc
pop
inc
das
xlat
or
mov
repz
enter
shrl
cmpsl
stos
das
cmp
pop
pop
cwtl
pop
pop
xchg
sbbb
sbb
scas
inc
inc
call
repz
mov
fldt
xchg
sub
sub
scas
inc
pop
popa
roll
xor
mov
mov
call
xlat
dec
nop
pop
cld
dec
stos
dec
imul
or
cmp
add
sub
xchg
out
push
outsl
jmp
sub
mov
outsl
or
xor
mov
adcl
pop
and
sti
mov
daa
jno
push
mov
js
rcrl
lea
mov
jge
icebp
mull
sub
mov
sbb
cwtl
pop
scas
addr16
daa
sub
pop
fcmove
mov
pop
inc
cli
pop
mov
daa
int
pop
sti
testb
divl
cmc
cmp
arpl
cmp
ljmp
or
jo
sbb
pop
adc
inc
mov
mov
leave
mov
neg
test
xlat
mov
int3
sbb
imul
cs
dec
ljmp
jnp
sub
enter
mov
cmp
fs
push
test
in
inc
std
dec
popf
pop
popf
jmp
ljmp
stos
or
leave
mov
push
movsl
cmp
pop
fstps
lock
lcall
jp
imulb
mov
daa
bound
or
lret
pop
imul
cltd
idivl
arpl
or
add
dec
xchg
fs
mov
xchg
lcall
push
xor
mov
ficoml
addr16
outsl
mov
sbb
pop
out
dec
mov
fabs
xor
mov
mov
jns
testb
xlat
sub
inc
fistpl
sbb
cmp
lahf
lods
dec
cli
insb
data16
pop
sub
pop
leave
sub
or
sbb
ljmp
sti
sbb
pop
xchg
or
sbb
dec
sub
mov
xchg
or
out
mov
movsb
mov
mov
enter
jge
and
lret
jne
adc
push
push
imull
sub
add
inc
loop
xlat
pop
insb
mov
jge
insb
cmp
pop
out
dec
test
sub
sub
fs
cli
cs
mov
pop
fstps
or
imul
push
lahf
dec
lods
stos
lcall
pop
or
mov
push
cmp
lods
dec
or
pop
lcall
out
mov
in
or
and
fldcw
sub
mull
cmp
dec
lret
sbb
js
mov
sub
fldcw
out
leave
add
popf
inc
stc
arpl
jmp
mov
jmp
sub
cmp
jg
ljmp
push
imul
sbb
call
dec
fwait
movsb
and
test
enter
mov
sbb
repz
xlat
pop
jne
sti
add
jecxz
fs
aaa
loop
call
fisttps
mov
sbb
andb
dec
sbb
bound
and
lahf
add
pop
fcomps
notl
jl
mov
subb
stos
lods
pop
cmp
leave
clc
cli
jl
rorb
mov
or
or
pop
mov
dec
lods
jg
aaa
inc
cmp
add
gs
push
enter
inc
push
jmp
cmp
fucomi
jl
or
xor
inc
dec
fstps
dec
mov
mull
sbb
in
dec
mov
imul
lcall
xchg
rol
push
fistps
imul
leave
xor
xlat
mull
stos
stos
xchg
xlat
fistpl
clc
enter
pop
jp
dec
pop
dec
into
cmp
jle
stc
cmp
fistpll
or
and
loopne
sub
rep
and
test
push
mov
pop
in
in
cmp
push
xor
add
and
leave
xchg
lahf
enter
addr16
mov
jp
mov
insl
psubusb
cmc
sub
shrl
sub
stc
pusha
push
push
pop
mov
test
and
pop
sub
dec
loopne
sbb
push
shrl
inc
jmp
scas
test
and
and
sub
call
lret
dec
cmp
mov
in
push
inc
insl
jns
cmp
js,pn
fnstenv
jo
mov
cmp
pop
dec
or
lahf
jne
cmp
xor
sub
imul
push
sbb
bound
cmp
mov
and
sub
les
or
jp
push
leave
movsb
orl
jge
lods
push
shlb
jp
aaa
xor
lea
lea
adc
mov
adc
mov
sbb
addr16
dec
ljmp
add
call
mov
movsl
imul
das
pop
pusha
mov
sub
mov
fiadds
push
sub
fdivrs
jae
stos
push
adc
inc
dec
adc
or
loope
sub
push
or
and
push
subl
imul
lret
mov
cwtl
inc
dec
cmp
lret
push
pop
or
into
cmp
imul
test
add
xor
mov
jl
jmp
sub
mov
sub
push
inc
in
dec
cmp
sbb
add
jecxz
pop
fsubrs
int3
push
push
or
enter
cmp
lret
push
aad
lret
loope
add
testl
clc
insb
add
pop
pop
pop
stc
pop
repnz
iret
adc
inc
stos
cmp
jo
dec
test
sbb
xchg
sbb
dec
xchg
jle
pop
push
cmp
or
or
dec
xchg
cs
shrb
sub
sbb
sbb
mov
and
dec
ljmp
stos
jge
sbb
lock
push
xlat
add
mov
pop
sub
mov
iret
out
pop
int
lock
dec
jbe
rorb
mov
sub
sbb
mov
dec
sbb
enter
mov
mov
pop
push
fcmove
mov
das
sbb
inc
lock
cltd
iret
sbb
and
clc
cmpsl
enter
leave
scas
js
inc
cmp
pop
push
mov
xlat
out
insb
out
mov
pop
mov
push
sbb
aaa
cmp
popa
je
pop
in
js
leave
adcl
fsubs
cmp
mov
lret
mov
push
jnp
inc
clc
or
shrb
jl
jmp
fcomps
sub
addr16
adc
inc
leave
cmp
xchg
aad
sbb
imul
enter
push
cmp
xlat
sbbb
icebp
push
push
xor
inc
add
sbb
and
dec
ds
cmp
js
fnstcw
mov
stc
mov
mov
cs
movsl
loopne
sbb
imul
fldcw
jmp
insb
pop
cwtl
inc
in
sbb
push
adc
pop
mov
jae
mov
ljmp
iret
mov
loopne
lods
pop
mov
mov
add
lods
or
sbb
dec
push
sbb
popf
lods
hlt
inc
ret
sbb
push
xchg
stc
call
fldt
icebp
cwtl
dec
or
sarb
jp
sti
or
jecxz
or
sub
jmp
ficoml
xlat
cmpsb
jmp
js
xchg
jns
cs
mov
test
lret
cmp
or
clc
cli
cwtl
popf
stc
cld
in
ljmp
sub
push
rclb
cli
mov
and
or
gs
fldcw
sub
inc
stos
dec
testb
lcall
ss
clc
rcrb
cmp
sub
or
push
sub
mov
mov
lcall
dec
inc
sub
cmp
out
stc
and
arpl
jmp
jmp
adc
insb
xchg
addr16
enter
adc
pusha
or
jp
stos
xor
jno
dec
mov
adc
mov
dec
push
ficomps
aas
enter
loopne
inc
fmuls
dec
lea
xlat
adc
rcrb
fstps
sbb
aaa
mov
xchg
or
jo
add
or
outsl
mov
push
or
sbb
insb
mov
add
call
jae
push
cmp
stos
sti
sbb
jp
mov
dec
cmp
and
pop
ficompl
xchg
ds
lcall
mov
repz
repz
or
enter
out
push
das
cmp
fldt
sub
jp
cmp
or
out
xlat
pop
push
arpl
jge
test
pop
add
lret
test
call
adc
mov
ret
inc
scas
dec
addr16
pop
mov
ds
cmp
das
mov
test
loop
in
scas
pop
enter
pop
sbb
mov
lea
ret
lret
mov
push
jecxz
or
jmp
call
cmp
lods
jmp
pop
aaa
pop
test
arpl
jmp
mov
sti
dec
fldl2e
pop
ret
mov
inc
dec
mov
inc
fldcw
dec
scas
push
jns
cmc
std
adc
das
ds
cli
outsl
stos
mov
or
movsl
lods
ljmp
aaa
lock
in
lret
lret
imull
fs
jg
pusha
push
or
inc
xor
and
scas
fisubrs
mov
shrb
into
or
fisubrs
xor
stos
call
jmp
mov
movsl
mov
mov
cs
fidivs
mov
or
mov
repnz
jge
dec
sbb
and
sbb
daa
mov
sub
imul
mov
es
mov
icebp
js
cwtl
jecxz
stos
mov
jno
lret
push
gs
push
sbb
addr16
lods
xlat
stos
adc
stc
cs
fs
sub
imul
fs
fs
lret
adc
mov
xchg
mov
mov
repnz
rorb
enter
fistpl
lahf
sbb
sbb
add
test
dec
pop
mov
pop
ret
pop
aaa
lcall
sbb
popf
jo
pop
lods
ljmp
rclb
arpl
inc
sbb
push
int3
or
cwtl
lea
lods
fildll
and
adc
mov
or
mov
mull
out
in
test
daa
lcall
mov
push
xlat
jl
ds
fldl
and
or
sti
push
push
xchg
enter
sub
and
pop
bound
jae
int
and
ds
or
push
rorl
js
push
push
lret
stos
stc
sbb
xlat
push
rorb
jp
mov
lret
test
dec
ret
and
adc
int3
mov
pop
or
enter
and
lcall
cs
stc
push
stos
shlb
cs
pushf
fucomp
pop
out
mov
or
or
dec
fs
mov
stos
lock
mov
clc
inc
or
stc
or
movsl
outsb
into
or
mov
mov
or
fldcw
cmpsl
fldenv
or
fs
push
mov
sbb
adc
popf
add
pop
arpl
xor
pop
sub
sub
mov
xlat
push
ror
mov
or
daa
adc
fcmovnu
mov
pop
imul
arpl
sbb
sub
ljmp
insl
test
pop
clc
pop
jmp
jmp
stos
ljmp
ljmp
sbb
pop
sbb
mov
cli
xchg
das
jne
in
imul
mov
cmp
sbb
xchg
and
outsl
mov
pop
ds
cwtl
test
adc
dec
sbb
sub
fisubs
test
xlat
stos
fsubl
or
cli
pop
sub
mov
fldt
imul
or
xchg
xor
sbb
inc
icebp
cmp
adc
and
push
test
push
jnp
fisubs
mov
aas
sbb
dec
fs
cmp
jmp
in
js
xor
insl
repnz
cmp
inc
sti
scas
dec
fistps
pop
sub
or
out
sbb
idiv
cmp
ss
mov
loopne
inc
cmp
orb
imull
or
ljmp
cmp
cmc
fsubs
ss
push
test
cmp
push
std
gs
mov
enter
insb
push
lods
mov
mov
mov
fcomp
mov
movsl
test
add
add
pop
sub
insb
mov
out
fidivrl
insl
test
rolb
or
push
mov
insl
xchg
in
sahf
lods
or
sub
dec
jge
ljmp
cmc
in
mov
dec
pop
lcall
dec
xchg
pop
daa
fs
enter
sub
pop
jmp
adc
lods
mov
cmp
mov
fimull
fst
bound
insb
int3
push
mov
cmp
ljmp
movsb
inc
test
out
xchg
cli
xor
lahf
pop
insb
xchg
call
xchg
add
cltd
neg
mov
lods
sbb
cmp
ss
cmp
idivb
cmp
fstpt
fdivrs
idiv
xlat
sbb
cli
adc
fistpll
sub
pop
cmc
shll
dec
mov
insb
mov
cwtl
fdivrp
out
flds
pop
pop
dec
fs
leave
mov
inc
fimuls
jns
and
inc
dec
jne
dec
inc
pop
push
pop
dec
sub
lods
lret
jne
cmp
cli
movsl
pop
mov
cmpsb
sbb
pop
dec
dec
pop
cmp
or
cmp
pop
xlat
imul
lock
sbb
pop
lds
pop
jg
popa
sbb
mov
push
insb
sbb
push
stos
insb
jmp
in
sub
stos
add
fdivrs
pop
imul
ljmp
fisubrl
push
popf
cmp
sahf
aas
cmc
jp
jmp
enter
sbb
push
test
sub
jmp
sub
or
or
lods
cmp
push
pop
dec
ds
out
scas
push
sbb
jb
scas
out
pop
movsl
xlat
xchg
jmp
movsl
sub
stc
insl
idivl
mov
stc
dec
push
xchg
arpl
sub
enter
mov
out
fprem1
or
lods
fstpl
insb
pop
lods
ja
loopne
sbb
mov
jp
addr16
push
jl
fdivr
jle
cmp
mov
lcall
insb
dec
pop
sub
dec
adc
inc
inc
aad
pop
mov
cmp
js
push
pushl
pushf
rcrb
mov
cltd
xor
popa
test
ljmp
mov
stos
mov
xchg
inc
pop
stc
mov
adc
push
mov
stos
cmp
sbb
in
insl
pop
push
loopne
repz
lea
pop
push
dec
stos
leave
movsl
fmuls
mov
or
pop
pop
sti
ljmp
enter
sub
jp
add
outsb
int
sub
outsl
sub
ret
stos
sbb
mov
fwait
jle
jl
xchg
add
sub
popf
dec
xchg
enter
add
imul
adc
inc
dec
test
jmp
cmp
data16
flds
or
jp
or
sub
sub
insb
test
pop
mov
in
stos
dec
inc
jae
dec
mov
cmp
or
xchg
sub
push
jecxz
sub
push
js
enter
test
dec
and
insb
popa
cmp
pop
mov
pop
call
xlat
sub
sub
pop
imul
sub
push
pop
ds
sbb
dec
jge
mov
pop
leave
test
add
inc
jl
testl
mov
lret
adc
pop
mov
shlb
inc
subl
ds
or
movsb
jnp
mov
lret
pop
inc
dec
fmuls
pop
clc
bsf
sub
pop
pop
mov
cwtl
hlt
push
sbb
adc
call
dec
popa
or
leave
add
fs
bound
lock
pop
and
dec
push
aaa
dec
dec
sbb
lea
mov
leave
lret
sub
sub
mov
lahf
ja
test
cwtl
ljmp
scas
jecxz
sbb
pop
imull
out
sbb
out
js
stc
dec
bound
lret
xlat
enter
lahf
test
lcall
add
sbb
stc
sti
sub
insb
dec
pop
push
jg
mov
inc
repnz
fldl
or
rcrl
lret
add
sbb
pop
js
sbb
xchg
dec
push
nop
cmp
nop
insl
mov
adc
out
pop
sub
stos
cld
adc
sti
ljmp
mov
pop
lcall
insb
imul
sbb
sbb
fsubrs
pop
fidivl
xor
xlat
or
jp
pusha
jmp
clc
mov
leave
clc
sub
cs
mov
inc
mov
sti
jecxz
popf
stos
mov
inc
sub
sub
mov
add
adc
loopne
leave
dec
loopne
stos
mov
cmp
mov
iret
mov
xor
ret
cmp
gs
stc
sub
inc
int3
cmp
ret
dec
sbb
xlat
dec
fstpt
or
ja
cs
stos
mov
data16
mov
idivb
sbb
jge
jno
mov
fucomi
jecxz
sub
sub
push
imul
pop
stos
push
test
aaa
not
ljmp
repnz
push
neg
call
sub
sbb
stos
jmp
inc
or
dec
je
stos
sbb
xor
call
ret
repnz
test
jp
cli
mov
ljmp
sbb
js
and
jge
xor
sbb
hlt
sub
pop
push
jnp
xchg
or
dec
push
stos
ret
fisubs
insb
fyl2xp1
lcall
or
xor
dec
loopne
leave
sub
sub
or
imul
sbb
fldt
xchg
or
fsts
sbb
dec
outsl
adc
cmp
fs
ljmp
pop
fs
dec
in
mov
sbb
mov
xchg
jmp
outsb
adc
push
mov
xchg
mov
pop
lret
movsl
and
sbb
lcall
call
mov
push
or
mov
enter
cmp
add
sbb
stos
pop
mov
cwtl
or
or
cmp
pop
popf
lahf
iret
es
fadd
std
dec
insb
mov
mov
pusha
mov
test
xchg
or
dec
divb
mov
lods
call
sbb
aas
cwtl
sbb
cmp
inc
xlat
push
inc
pop
into
inc
push
jnp
lcall
lret
pop
icebp
mov
pop
fidivrl
push
push
jp
sbb
pop
movsl
fsubrs
inc
pop
xchg
pop
mov
dec
fstpt
ljmp
test
das
outsl
clc
pop
dec
dec
dec
dec
idivl
stc
dec
enter
or
pop
sub
cmp
addr16
sub
int3
in
sbb
mov
mov
cmp
dec
fimull
cmpsl
or
pop
sbb
jp
pop
sar
arpl
test
repnz
cmp
js
push
daa
pop
outsl
in
fld1
clc
dec
pop
popf
enter
jecxz
or
sub
insl
fldenv
cli
jle
mov
repnz
pop
dec
fcmovu
mov
adc
out
mov
push
clc
xlat
or
inc
and
adc
mov
test
inc
inc
sub
dec
mov
jle
jge
push
loop
jmp
std
ja
and
mov
lret
jmp
ja
inc
or
in
js
add
cltd
inc
mov
data16
insb
pop
mov
mov
sub
arpl
xlat
jecxz
and
cli
cmp
sub
scas
jmp
mov
out
inc
out
mov
mov
mov
dec
sbb
cmp
adc
outsb
sub
loopne
jmp
stc
mov
pop
dec
enter
ficomps
jbe
js
sbb
ljmp
and
dec
fsub
out
mov
jmp
repnz
push
leave
pop
sub
sub
std
sub
fidivrs
push
sub
xchg
push
or
enter
repz
add
ljmp
loop
enter
int3
pop
gs
inc
jl
pop
cmpsl
aaa
in
fiaddl
adc
pushf
cmp
sbb
jecxz
xchg
push
mov
add
jge
lret
xor
popa
jp
call
clc
sub
fstl
mov
loopne
cmp
jmp
sbb
or
andl
imulb
in
pop
push
sub
mov
or
pushf
xor
pop
lods
popa
sub
xor
mov
loope
pop
push
pop
cwtl
xor
clc
xchg
repnz
cmp
mov
sub
or
enter
cmp
pop
cmpsb
cmc
dec
popf
ja
imul
push
mov
cmp
or
mov
loopne
cmp
pop
sbb
dec
scas
cmp
or
mov
push
pop
xchg
sbb
pop
push
insb
ja
fstpt
jbe
dec
stos
cmc
popa
push
stos
or
xchg
mov
xlat
mov
xchg
lods
inc
std
sub
les
loopne
mov
js
ljmp
or
push
sti
cmc
movsl
sub
or
mov
aas
fstpt
cmp
pop
lahf
fsubr
out
adc
rorb
jg
popa
sbb
xchg
addl
fs
add
jmp
call
lods
or
ret
jp
sbb
out
or
sti
cmp
les
insb
es
test
dec
push
arpl
or
lret
mov
sarl
jmp
stc
dec
insb
data16
sbb
mov
push
push
and
sbb
sti
and
pop
adc
mov
sbb
sbb
or
cmp
lret
nop
pop
js
push
add
jmp
dec
or
mov
sbb
mov
xlat
sbb
ficoms
xchg
arpl
cmp
scas
push
in
stc
call
pop
cmp
jmp
dec
pop
sbb
dec
mov
retw
push
outsb
pop
jmp
fcmovnbe
negl
add
jne
pop
adcl
call
cmc
mov
adc
mov
cmp
push
popa
jns
jle
fdiv
ljmp
mov
enter
js
in
or
dec
fucomi
rcrb
cmp
jmp
in
sbb
clc
pushl
push
cmp
imul
mov
dec
pushf
add
arpl
jmp
ljmp
popa
mov
dec
cmp
sbb
nop
xor
cli
adc
cs
cmp
dec
dec
pop
mov
arpl
pop
sbb
sub
stc
movsw
adc
js
mov
ficoml
mov
add
lods
pop
lret
enter
sub
out
data16
cmp
or
test
int
enter
call
xlat
js
mull
or
stos
mov
xchg
decb
sbb
sbb
dec
jg
and
mov
dec
call
mov
es
adc
jmp
sbb
ret
cmp
pop
sbb
lds
jp
aaa
test
daa
bound
push
xchg
pmaddwd
lea
scas
insl
add
or
sbb
testb
jg
stc
sub
push
aam
push
ret
inc
mov
dec
stc
mov
movsl
xchg
mov
lcall
sub
sub
pop
sub
jmp
jecxz
xlat
stc
lcall
push
pop
mov
hlt
sub
cmp
push
lretw
pop
fsubrs
and
jl
sbb
sbb
jp
test
movsl
stc
pop
sub
rolb
inc
lret
mov
sbb
pop
popf
sbb
cmp
fistpl
iret
push
out
sub
fsqrt
cmp
cwtl
scas
sbb
fs
ds
push
push
leave
dec
adc
add
sti
pop
add
roll
out
or
negl
mov
cmc
es
aaa
lock
out
xchg
lret
fsubrl
mov
les
pop
mov
sub
pop
sbb
pop
fstps
mulb
inc
sub
xchg
jl
pop
mov
fs
stc
decb
mov
jmp
mov
push
mov
dec
push
and
insl
xor
cwtl
data16
jmp
jp
dec
leave
test
mov
pusha
dec
push
fcomp
js
mov
es
lods
insb
jl
sti
fmuls
cli
insb
push
cmp
dec
xor
pop
enter
cli
fidivrl
inc
imul
loopne
test
sbb
out
aas
aam
jp
adc
or
xlat
ret
in
push
sub
mov
and
neg
dec
in
gs
fxch
data16
push
fs
mov
dec
and
mov
or
jl
out
stc
lcall
sbb
sbb
test
enter
push
jecxz
inc
push
ja
fisubrs
mov
jmp
movb
or
sbb
fcomp
test
idivw
dec
jne
sbb
sbb
les
cmovb
insb
or
imul
push
jmp
rorl
movsl
insb
pop
dec
jne
adc
sub
les
adc
cmp
or
bound
xlat
mov
hlt
sub
xor
and
jmp
cltd
ss
loopne
mov
test
es
cmc
shrb
xor
inc
dec
mov
dec
insb
sbb
fmuls
inc
or
push
push
stos
adc
arpl
data16
jecxz
std
pop
insb
popf
xchg
mov
dec
cmp
dec
inc
lcall
and
fldenv
sti
dec
sub
ljmp
cmp
ljmp
dec
js
std
cmp
int
dec
push
xchg
mov
lret
fmuls
cmpsl
dec
sti
lcall
push
fs
cmp
outsl
jns
push
inc
fisttps
inc
fs
inc
test
cld
mov
and
daa
gs
jp
cli
sbb
mov
sub
and
dec
test
mov
cmp
popa
pop
mov
stc
jl
js
and
fcoms
mov
and
das
sub
adc
test
xlat
or
add
add
pop
test
sub
xchg
pop
insb
sbb
jmp
push
jmp
sub
jmp
push
add
imul
enter
jmp
dec
cmp
sbb
dec
data16
jmp
out
pop
fcmovnb
mov
or
fdivrp
sti
mov
ljmp
cmp
sub
jbe
adc
pop
inc
cli
mov
pop
xlat
into
test
jge
cmpsl
xchg
in
in
mov
inc
filds
pop
mov
mov
test
pop
pop
jnp
sub
cli
xor
sarb
pop
js
loopne
aas
dec
xlat
ljmp
xchg
out
negb
pop
stos
sub
or
mov
pop
xor
or
mov
addr16
leave
push
std
mov
pop
or
and
clc
scas
dec
daa
fldcw
aad
pop
jmp
sbb
sub
push
dec
inc
sbb
push
arpl
cmp
push
ficompl
dec
jmp
mov
test
fs
lcall
in
push
into
dec
mov
ljmp
xlat
sbb
outsb
stos
orb
jecxz
pop
jmp
mov
xlat
cli
jmp
inc
dec
or
mov
das
int3
dec
jno
dec
sbb
mov
stos
cli
sub
or
fdivr
daa
imul
inc
out
mov
aaa
adc
imull
mov
pop
in
xor
push
and
sub
or
inc
pop
fldcw
pop
or
call
bound
inc
cli
jmp
sub
lret
xchg
ds
in
and
dec
notb
or
addb
sbb
ret
fs
jmp
daa
mov
lea
fcmovnu
mov
or
cmp
out
fldt
jp
sub
les
mov
pop
negl
mov
test
data16
in
adc
dec
mov
lahf
insl
clc
pop
or
sub
cmp
mov
leave
xor
jge
jg
cmp
fistpl
js
pop
sbb
mov
mov
int
sub
imul
push
fidivs
pusha
pop
aas
out
stos
pop
clc
divl
out
shl
jl
jle
mov
and
push
cmp
fidivrl
mov
popf
sbb
dec
mov
stos
pop
adc
mov
insb
add
enter
cmp
mov
cs
add
pop
sbb
adc
cs
sbb
out
or
iret
jmp
or
lret
je
adc
cmp
pop
pop
test
jno
dec
push
jl
fs
cmp
out
fldl2t
lcall
stos
mov
test
push
jmp
sub
imulb
mov
dec
mov
mov
loope
and
in
lea
mov
insl
add
in
test
fimull
lea
cld
jle
dec
jnp
dec
mov
js
ljmp
push
push
test
negb
jle
and
hlt
sub
sub
and
ljmp
pop
clc
pop
jl
push
repnz
dec
lahf
push
cwtl
pop
stc
movsb
and
call
jmp
jl
out
clc
test
push
out
jp
loopne
mov
inc
mov
xchg
push
out
js
pop
add
cmpsl
sub
mov
jmp
jmp
nop
sbb
enter
pushf
jp
pop
pop
movsb
lret
cmp
or
cwtl
insb
or
xlat
sub
jbe
pop
or
inc
sub
adc
cwtl
ljmp
enter
fimull
sarl
mov
mov
fimuls
mov
sbb
inc
das
mov
cmp
sti
enter
jl
inc
sub
sbb
sub
loope
test
outsl
xlat
idivl
dec
push
inc
aad
out
pop
lret
push
mov
dec
pop
dec
negl
pop
mov
aaa
fsubrs
push
dec
jmp
cmp
cmp
dec
jmp
stos
pop
dec
test
cmp
out
sub
lret
jge
push
fldt
test
dec
pop
dec
inc
cmp
cmpsl
cwtl
pop
add
xchg
sbb
pop
sub
insb
jae
in
fs
outsl
or
pop
pop
cmp
test
fs
lea
cmc
sbb
push
jecxz
ljmp
out
out
das
sub
leave
or
hlt
inc
cltd
push
test
pop
test
lods
cmp
pop
mov
jnp
sahf
movsl
push
dec
pop
pop
xchg
dec
push
mov
mov
mov
xchg
cs
or
pop
jns
cmp
mov
dec
push
sbb
push
sar
out
out
pop
test
push
jge
push
inc
push
out
pop
cmpsl
mov
or
jp
test
jae
dec
insb
daa
xor
mov
aaa
xor
dec
shr
pop
mov
fcmovne
in
cmp
add
mov
int
jmp
roll
mov
testl
jmp
mov
dec
or
enter
pusha
lcall
stos
gs
jmp
jl
cwtl
or
lret
loop
jl
arpl
js
and
dec
mov
jo
lea
ret
xchg
lods
jb
add
and
pop
fistpl
inc
insb
test
pop
outsl
sub
sbb
or
or
pop
lcall
cwtl
sti
lods
pop
pushf
dec
jl
jbe
jnp
inc
test
aas
addr16
fsubrs
dec
jp
xchg
test
xor
mov
js
mov
loopne
sub
fsqrt
push
je
loopne
daa
add
daa
mov
lods
repnz
out
xchg
popa
sbb
jmp
push
or
push
mov
mov
aaa
push
jno
or
xlat
mov
sub
mov
clc
pop
xchg
cmp
in
hlt
jnp
push
sub
dec
mov
stc
lcall
cmp
sub
dec
push
sahf
sbb
fs
clc
clc
pop
inc
sub
mov
sub
test
cs
sbb
and
sti
mov
movsl
leave
pushf
popa
testl
js
dec
ds
mov
xor
sub
pop
mov
call
mov
or
inc
or
dec
test
fcmovne
xchg
mov
lock
sub
imul
movsb
jp
dec
mov
sub
mov
pop
test
and
xchg
insb
sti
ss
incb
enter
dec
mov
call
xor
xchg
loopne
stos
xor
or
or
mov
in
ljmp
jp
pop
add
clc
dec
cmp
mov
sub
xor
in
stos
inc
movl
hlt
sbb
pop
sub
sar
pop
stc
nop
sbb
sub
mov
cmp
pop
flds
pop
loop
and
push
jl
stos
sbb
push
pop
insb
or
push
lock
mov
push
fistpl
dec
pop
sbb
cmovo
xor
and
in
jne
sub
cmp
pop
ficomps
cli
mov
jp
fbld
sti
imul
dec
scas
pop
jo
push
psubsb
jg
movsl
mov
decw
dec
mov
jmp
cmp
inc
push
sub
cmp
pusha
out
sti
dec
fs
sub
push
iret
xor
push
testl
pop
jle
flds
or
or
repz
pop
sbb
out
mov
dec
dec
ljmp
fiadds
cmp
push
std
or
adc
rcr
call
pop
mov
incb
jp
cwtl
or
or
push
in
push
ljmp
or
dec
sti
aas
jecxz
sbb
je
scas
sub
jge
dec
mov
push
stc
mov
stos
sub
lret
data16
pusha
mov
jne
cltd
xor
pop
sub
lret
leave
cli
cwtl
dec
mov
or
jb
sub
add
or
mov
jo
movsb
mov
or
cmp
and
stc
jp
jmp
insb
or
stos
adc
pop
es
sbb
push
inc
or
fs
xchg
leave
sbb
repz
sub
jl
pop
insl
jno
jmp
aad
pop
inc
out
fs
fs
adc
leave
cmp
popa
cmp
or
or
test
mov
pop
sub
jl
mov
or
prefetcht0
out
mov
in
xchg
xor
cmc
push
mov
jmp
add
inc
cs
loope
pop
test
fstps
mov
cmp
jns
jno
pop
sbb
ljmp
pop
insb
sub
pop
pop
sub
mov
push
push
sbb
aas
bound
sbb
sti
cmp
push
mov
pop
mov
dec
mov
or
insb
mov
dec
cli
cmp
gs
mov
sub
lods
pop
mov
dec
stc
bound
jle
mov
addr16
fldcw
dec
sbb
sub
or
pop
add
or
lcall
outsl
lret
ficompl
mov
orl
out
sbb
jp
fs
mov
fidivrl
mov
push
ficoms
dec
xchg
pop
pop
or
dec
arpl
jmp
call
add
push
mov
jnp
stc
sbb
sub
cmp
pop
cmp
sbb
aaa
mov
mov
dec
cmp
jl
loop
scas
leave
push
pusha
clc
ret
sbb
fcmovu
iret
sub
cmp
sub
ljmp
sbb
bound
call
pop
cmp
les
popa
rorb
popf
sub
jno
or
pop
imull
addl
lea
movsl
ljmp
cmp
sub
or
dec
ljmp
cmp
fisubrs
pop
clc
ds
sub
mov
pop
idivl
and
inc
gs
insl
push
dec
jmp
cmp
mov
popa
nop
cmp
data16
ljmp
mov
out
fsubrs
out
icebp
outsl
pop
jmp
cwtl
js
add
stos
or
int
sti
movsb
pusha
into
jp
mov
sub
xor
sub
push
cmp
mov
lahf
mov
mov
in
jns
jmp
sbb
imul
cmp
and
fistl
dec
or
sbb
mov
and
ljmp
or
push
cmp
push
push
push
mov
movsl
mov
pop
or
sbb
mov
mov
push
cmp
dec
pop
call
inc
and
sub
test
fmull
sti
dec
dec
ret
test
mov
ss
lcall
testl
dec
dec
jmp
cwtl
inc
in
ficoms
xor
dec
sub
push
sti
dec
enter
sbb
mov
xchg
mov
orb
mov
pop
push
enter
pop
sub
arpl
fldenv
mov
cmp
or
lahf
imul
sub
xor
xchg
cmpsb
pop
xchg
jmp
or
mov
leave
jge
push
ljmp
test
adc
cli
pop
xlat
pop
adc
inc
movsl
mov
stc
jecxz
jmp
push
inc
insb
dec
mov
mov
js
leavew
push
jmp
sub
lods
cmp
jle
cli
mov
inc
popa
dec
mov
pop
sub
sub
and
and
mov
cmp
out
push
lret
dec
stos
pop
sarb
dec
aas
or
cmp
movsl
xor
sti
or
sub
pop
lcall
cs
inc
lea
cli
jle
jmp
aas
mov
dec
hlt
mov
dec
mov
sbb
mov
jmp
dec
mov
dec
cmp
mov
lret
jp
daa
xor
fcoms
clc
je
scas
pop
jmp
or
movsb
mov
jl
mov
rol
sub
push
clc
cmp
or
jmp
mov
inc
sahf
leave
sub
pop
cmp
push
in
stos
pop
loop
mov
inc
sbb
sub
pop
scas
cli
repnz
shll
cmp
pop
jno
bound
lcall
leave
sub
xor
push
push
push
jp
insl
mov
popf
jmp
dec
lahf
or
dec
cli
cmc
or
ljmp
lret
push
adc
or
sub
pop
pop
pop
ret
enter
sub
dec
sti
movsl
lahf
pop
mov
cwtl
or
jmp
or
sbb
dec
dec
or
andl
call
xchg
loope
andl
clc
ret
pop
dec
div
sti
mov
fisttpl
test
cmp
test
cld
stc
stos
sbb
int3
adc
aaa
scas
test
dec
cmc
lods
sbb
lret
mov
pop
inc
sub
cmpsb
lret
clc
enter
push
cmp
or
scas
addr16
ds
call
pop
inc
add
call
out
xor
sub
jbe
jg
loopne
xchg
test
or
jp
mov
movb
mov
imul
lea
clc
cmp
std
dec
scas
jns
in
lret
sub
and
fcomp
inc
pop
daa
or
dec
pop
inc
sub
dec
shr
scas
inc
mov
cmp
test
int
sbb
sub
iret
jl
pcmpgtd
add
mov
call
pop
inc
sub
pusha
xchg
imul
mov
adc
flds
leave
mov
push
mov
cmc
out
mov
or
dec
xlat
cmp
mov
xor
sti
out
scas
jl
fidivl
xchg
test
add
push
shrb
mov
je
push
sub
call
sahf
sub
xchg
imul
dec
ja
cmc
push
jo
test
xor
cli
pop
or
sub
stc
fnstcw
enter
dec
jp
push
sbb
xchg
inc
movsl
pop
int
fxch
mov
adc
sub
shrb
pop
mov
push
fidivrs
daa
stc
pop
jo
insb
fcomps
cmp
daa
jno
or
pop
mov
addr16
insl
sti
sbb
pop
sbb
out
cs
pop
es
gs
sbb
jmp
lret
push
lahf
pop
test
scas
incb
jp
std
dec
dec
jmp
leave
mov
jmp
ds
aaa
lret
jo
lret
sub
xor
sbb
fcmovu
notl
inc
jle
js
jp
xlat
add
std
cwtl
fisttpl
push
pusha
enter
flds
js
stc
sti
mov
or
arpl
into
lds
sub
sub
lret
mov
aas
push
sub
mov
sub
inc
sub
mov
popa
pop
sbb
mov
pop
nop
or
inc
jmp
out
pusha
sbb
sti
pop
idiv
dec
sub
mov
pop
stos
lcall
xchg
insb
inc
jmp
fcomp
sub
sub
es
and
lods
push
jmp
insl
and
in
jl
das
inc
dec
push
mov
push
fstps
mov
jb
xchg
out
sbb
lods
lea
sbb
aad
std
mov
dec
jmp
mov
out
stc
cmpsb
add
push
inc
dec
pop
inc
dec
lock
mov
pop
xchg
mov
cmp
lcall
sub
fdivrs
ret
mov
lret
cli
test
inc
imul
ljmp
sti
nop
push
cmp
cmp
adc
cld
sub
mov
dec
stos
daa
lcall
dec
or
cmp
pop
lret
fildll
sub
inc
cmp
ret
enter
cmp
xor
sbb
fidivrs
pop
mov
test
cmpb
mov
lret
dec
inc
ljmp
pop
testl
mov
ficomps
dec
sbb
fbstp
dec
lret
lods
jl
cwtl
and
mov
lret
lods
sub
in
xchg
or
push
sbb
jmp
pop
dec
lods
notl
dec
pop
dec
enter
fisttps
faddl
inc
loope
cmp
add
arpl
xlat
mov
push
stc
clc
repnz
jle
insb
sub
dec
dec
pop
mov
sahf
ficoms
je
mov
test
xchg
aaa
sub
push
xchg
add
addr16
dec
mov
outsl
sti
sub
sbb
lcall
xor
lock
out
push
cmp
sti
jmp
idivl
or
ret
pop
mov
stos
jp
sbb
or
orb
cli
push
scas
fldt
or
mov
add
js
mov
leave
fmuls
inc
pop
loopne
daa
into
scas
imul
pop
sbb
repnz
push
cli
xlat
sub
dec
enter
dec
lcall
cmp
stc
in
fmulp
sbb
inc
mov
clc
test
insb
stos
sbb
xchg
adc
dec
jl
stc
cmp
inc
mov
and
pop
push
xchg
cmp
enter
test
cmp
fsubp
dec
je
jl
out
ljmp
pop
filds
xchg
imul
jmpw
ljmp
adc
pop
pop
aas
sbb
sub
movsl
jecxz
jl
or
sbb
pop
in
pop
sbb
int3
ljmp
push
out
pusha
scas
mov
jl
stos
inc
mov
mov
xchg
mov
jecxz
mov
pop
sub
js
outsb
jb
mov
stos
sub
push
lods
xchg
in
mov
jle
js
lahf
mov
lock
fldenv
or
frstor
mov
dec
push
jge
shll
stc
jno
cld
xchg
lea
int3
sti
loop
inc
mov
cmp
pop
stc
sub
xor
pop
out
sub
sub
dec
add
divl
mov
out
sub
sbb
sub
pop
inc
stos
fisubrs
test
dec
jp
movsl
sbb
stos
cmp
pop
mov
dec
mov
inc
mov
push
push
or
cwtl
cli
decb
lds
dec
dec
les
pop
mov
mov
lcall
in
sub
sub
mov
scas
clc
cwtl
xlat
lcall
in
pop
sbb
leave
pop
fsubrs
jbe
cmp
arpl
das
scas
out
ret
icebp
movsb
sub
jg
movb
clc
cmp
fs
ljmp
sub
add
dec
mov
sbb
push
or
into
test
mov
enter
mov
cli
repnz
mov
cmp
dec
and
fldcw
pop
jp
sub
jge
mov
in
dec
movsb
lcall
test
cmp
rorl
or
enter
out
fadd
jle
insb
icebp
das
mov
mov
in
lahf
scas
pop
jecxz
add
repz
sbb
das
nop
addr16
cmp
stos
ljmp
pop
ret
faddl
js
insb
mov
pop
fistpl
sbb
push
cmpl
pop
mov
insb
out
dec
js
inc
fmulp
stc
sahf
pop
lret
pop
or
pop
xorl
popa
adc
cli
xor
imul
lret
adc
idivb
jbe
mov
inc
or
sarl
bound
cmp
stos
mov
sbb
inc
or
push
dec
dec
or
insl
pop
ficompl
pop
and
nop
jmp
dec
or
stos
sub
sbb
outsb
inc
shrb
push
pop
lret
pop
push
mov
sahf
cmp
dec
dec
int3
push
push
pop
faddl
imul
out
loop
sbb
cwtl
dec
movl
sub
pop
shll
cmp
js
leave
mov
iret
fdivs
push
adc
mov
dec
arpl
sbb
dec
sub
fstps
sub
pop
push
or
cmp
and
mov
pop
add
jmp
inc
mov
not
clc
mov
outsb
sub
std
mov
mov
sub
or
push
imul
jecxz
lret
sub
mov
lret
inc
push
cmp
arpl
call
popf
sbb
mov
jno
dec
out
and
lret
loopne
cltd
inc
dec
mov
cmpb
fildll
jge
xchg
arpl
cmp
dec
clc
ljmp
pop
sbb
mov
arpl
js
mov
lcall
mov
mov
sub
ljmp
pop
push
pop
insb
cwtl
fnclex
jmp
out
negl
pop
lcall
fcmovnbe
lcall
add
cmp
jo
jno
mov
or
sbb
mov
sbb
mov
push
and
fs
push
lea
out
ret
das
jns
sub
jae
ljmp
cs
sbb
stos
or
mov
fidivrl
mov
and
jecxz
inc
or
leave
jb
cli
xlat
pop
dec
cmp
inc
mov
adc
add
rorb
pop
push
iret
pop
sbb
enter
sub
insb
test
sbb
mov
push
sub
mov
lcall
stc
insb
sahf
sub
bound
inc
mov
sub
mov
lret
ds
push
movsb
inc
idiv
mov
enter
mov
or
lea
push
inc
pop
cmp
jl
dec
out
repnz
sbb
cld
dec
push
pop
stos
cld
lea
cmp
nop
lahf
lods
icebp
mov
mov
test
inc
mov
sbb
mov
popa
fmuls
cmp
lcall
dec
das
les
leave
adc
sub
mov
insb
sub
lcall
fcmove
mov
or
and
sub
arpl
ds
shrb
xchg
fs
sbb
and
faddp
sbb
int
or
jmp
push
stos
cmp
lret
sbb
add
pop
lock
cmp
pop
cmpsl
push
sub
mov
loope
jle
lcall
fnstcw
inc
cmp
adc
sbb
std
in
dec
mov
clc
cwtl
lods
sub
push
sahf
lret
imul
ljmp
aas
shrb
add
cmp
repnz
enter
js
lahf
insb
push
stos
fs
sbb
cmp
pop
clc
mov
dec
xor
inc
scas
sub
jg
lret
loop
jmp
push
dec
stos
or
inc
mov
pop
add
cmp
cmp
gs
push
stos
in
jmp
or
push
pop
fnstcw
mov
jl
js
cwtl
or
add
mov
addr16
or
jmp
dec
stos
cmpsb
sbb
sub
call
add
jmp
inc
jl
gs
gs
pop
xor
mov
push
mov
mov
jmp
test
mov
push
cmp
push
cmp
pop
jle
xor
sbb
addr16
dec
cmp
cmp
dec
outsb
jne
fucomi
iret
in
mov
mov
cmpb
sbb
stc
fcmovb
call
outsl
mov
test
mov
mov
lods
sub
fisubrs
sub
sbb
enter
out
mov
cli
imul
lcall
jle
fstps
fidivs
das
js
inc
sbb
push
pop
sbb
in
out
dec
jg
mul
mov
xchg
cld
movsb
sub
ss
pop
fstpl
leave
mov
repz
fs
cld
sub
dec
fsubrs
pop
cli
jmp
sbb
aaa
mov
pop
pusha
cli
fistpl
and
mov
dec
or
rcll
aad
dec
or
sbb
pop
shrb
pop
out
adc
xchg
dec
sbb
jns
leave
cmpl
xlat
xor
insl
push
push
add
out
stc
mov
maskmovq
divl
lahf
clc
mov
or
test
popa
dec
dec
jmp
lcall
push
sbb
cmp
and
insl
and
clc
enter
xchg
sub
not
dec
pop
push
int
js
and
pop
mov
add
mov
in
sub
cs
insb
mov
lret
repnz
in
or
movsb
jnp
jp
inc
jmp
sbb
std
sub
dec
negl
jmp
aas
stc
fldcw
mov
subb
jno
into
jle
leave
fcomp
mov
push
mov
cmpsl
jp
fxch
test
cmp
inc
aad
mov
sahf
mov
sbb
imul
dec
lret
insl
imul
jmp
dec
push
idivb
mov
sub
jp
xor
cmp
rcr
dec
xchg
xchg
inc
fimull
lret
or
in
das
js
cmp
and
sub
jns
sbb
push
movsb
imul
sbb
inc
mov
mov
dec
add
cmp
dec
push
js
dec
ds
fiadds
pop
xor
popl
and
or
sti
sub
and
pop
into
sub
push
test
mov
jb
aas
cs
aad
lods
cwtl
movsb
mov
cmp
adc
dec
push
popl
dec
or
jnp
xchg
notl
or
clc
popa
pop
mov
sub
pop
testl
ljmp
pop
stos
add
push
fistpll
pop
insb
mov
pusha
or
dec
dec
stos
cmp
cmc
imulb
div
or
cmp
sbb
cmp
or
ds
je
outsb
cmp
fimull
insb
sub
or
xchg
movsb
fstpt
cmp
ljmp
sub
fld1
sti
mov
mov
idivl
in
sub
sub
sbb
scas
ret
mov
js
mov
sbb
negb
pop
jl
fisubs
stc
push
out
sub
mov
and
add
insl
imulb
pop
js
xchg
dec
js
adc
enter
mov
inc
pusha
pop
lea
fistpl
jp
ja
push
mov
sbb
in
mov
fadds
lahf
adc
movsb
scas
push
push
mov
jmp
dec
insl
test
and
fmuls
data16
xlat
jmp
pop
test
ds
mov
stc
mov
inc
lcall
jp
and
jl
jno
cmp
sbb
ljmp
stos
sub
dec
sub
or
pop
negl
lcall
mov
xchg
mov
icebp
aam
mov
push
sub
pop
aam
das
or
adc
jl
sub
in
dec
pop
fs
mov
or
inc
lods
mov
adcb
das
or
dec
arpl
jmp
sub
push
pusha
xor
push
jb
or
pop
dec
adc
pop
int
arpl
push
dec
pop
dec
cmp
inc
ljmp
int
sub
lret
outsl
mov
lcall
pop
subb
cmp
cmp
jecxz
xchg
insb
dec
rcrb
gs
jl
call
adc
ljmp
push
xchg
in
leave
bound
sbb
fcomp
mov
lds
in
inc
pushf
ljmp
pop
in
sbb
adc
loopne
sub
xor
mov
lcall
adc
lea
jbe
pop
jge
test
cwtl
insb
jns
mov
lea
fisubrl
xchg
or
bound
idivl
clc
cli
adc
testl
fldl2t
repz
add
aam
scas
cmpl
adc
into
clc
mov
ljmp
xlat
cli
mov
sbb
xchg
lcall
aaa
stos
push
fmuls
inc
or
inc
lcall
jmp
adc
or
sti
and
jnp
sub
sbb
aaa
pop
sbb
jb
cmp
enter
jmp
jl
jp
out
dec
stos
sub
pop
sub
sub
iret
icebp
push
in
ljmp
test
mov
sub
mov
jmp
jle
clc
xor
mov
fisubl
sbb
jecxz
xchg
imul
or
test
movsl
jp
sti
pop
sbb
sbb
mov
pop
lods
sub
pop
mov
dec
jns
sub
pop
stc
xchg
push
cmp
and
gs
mov
push
dec
jmp
xlat
cmpsl
jle
ljmp
leave
pusha
int
xchg
jbe
xchg
mov
cli
mov
les
sub
gs
test
or
sbb
mov
loopne
ds
pop
stos
sbb
dec
xchg
negl
mov
mov
in
pop
push
sub
cmc
pop
daa
stos
add
push
add
sbb
mov
pop
push
scas
jl
enter
sub
leave
xchg
jbe
xchg
xor
jge
mov
cli
jbe
and
fnstenv
sbbb
sbb
mov
jge
lock
dec
test
clc
xlat
cmp
shlb
cwtl
dec
std
ret
test
pop
leave
sbb
movsl
sub
fcomi
pusha
clc
pop
pop
dec
mov
arpl
mov
fdivrs
lods
nop
add
dec
mov
cli
cwtl
sub
add
mov
dec
rcrb
mov
inc
stos
test
fs
dec
sbb
dec
stos
inc
subb
call
pop
jl
sub
insb
scas
or
sbb
shrb
sub
pop
xlat
jb
repnz
dec
stc
sub
out
sbb
call
dec
ret
jl
add
leave
aam
add
in
and
sbb
inc
pop
cmp
mov
je
imul
insl
loope
test
cli
pop
and
dec
or
or
mov
mov
loop
jmp
out
add
daa
test
enter
ret
aas
dec
dec
mov
adc
in
ljmp
in
mov
fwait
outsl
mov
xlat
cwtl
lret
jae
fldt
pop
pop
push
ja
imul
js
sub
cld
in
jmp
xchg
dec
push
out
popa
pop
dec
jmp
sub
cwtl
stc
loopne
cld
or
adc
pop
fstpl
sub
adcb
push
movsl
sbb
inc
test
xor
idivb
mov
mov
jl
push
daa
test
xor
pop
sbb
lret
pop
xchg
mov
jo
mov
movsb
mov
dec
notl
cmp
cli
jae
push
fmuls
add
lods
movsb
inc
mov
lods
jnp
sbb
jle
insb
je
loope
or
fs
sub
leave
cmp
dec
jns
jge
xchg
fdivs
push
cli
cmp
test
mov
sti
imul
cmp
jae
cmp
rcrl
adc
pop
setp
gs
fmulp
daa
xchg
or
push
inc
mov
imul
enter
mov
cmp
insl
arpl
pushf
sbb
inc
jge
cmp
or
lods
push
jnp
pop
dec
adc
or
sti
xchg
mov
idiv
lret
push
inc
sub
push
out
sbb
sbb
scas
cmp
ds
insb
jge
or
sub
movsb
pusha
cmp
in
jmp
decb
or
mov
xor
or
lret
or
pushf
jp
mov
dec
ljmp
imull
jecxz
popl
dec
push
stos
inc
stc
imul
mov
push
je
rorl
ljmp
pop
push
push
push
js
std
lcall
mov
pusha
imul
pop
and
stos
aam
or
jl
or
pop
leave
sbb
test
sti
xchg
mov
push
cmp
repnz
push
push
nop
prefetch
movsl
mov
mov
testb
xchg
jmp
pop
jge
and
fstps
mov
idivl
pusha
sub
jae
dec
ljmp
mov
xchg
leave
pop
test
enter
ljmp
sbb
jne
sub
shr
movsb
bound
dec
repnz
pop
fcomp
int
loope
arpl
mov
out
or
fdivrs
dec
dec
adc
mov
ljmp
sub
out
dec
sub
lcall
jmp
push
cli
mov
dec
fimull
cmp
dec
mov
pop
jo
jmp
or
cs
dec
subb
mov
dec
das
stc
sbb
aaa
pop
sbb
cmp
and
sub
jb
movsl
or
push
jmp
aaa
xor
mov
shrb
sti
lret
data16
ljmp
cmp
flds
dec
imul
out
in
scas
dec
leave
dec
pop
lret
dec
out
and
pushf
dec
dec
bound
adc
fsubl
push
dec
in
lret
stc
lods
mov
pop
test
or
jg
sub
push
lock
dec
mov
dec
pop
stc
cmp
xor
pop
mov
sub
sub
lds
push
fistpl
pop
clc
cmp
pop
cmpsl
pop
test
mov
or
jl
sub
xor
cwtl
mov
mov
xlat
sarb
mov
or
cmp
sbb
outsl
or
out
ljmp
sub
dec
fisttpll
sub
cli
fstpt
pop
or
sub
sbb
or
mov
in
sbb
testl
pop
adc
or
xchg
test
or
push
dec
xor
jmp
mov
ljmp
xlat
pop
inc
movsl
push
or
js
xlat
mov
mov
loop
call
test
out
dec
sub
mov
adc
test
or
mov
enter
mov
imul
stc
incl
scas
outsl
cmp
sti
lcall
pop
cltd
hlt
pusha
jmp
mov
adcl
sbb
jp
repnz
xchg
rorb
shll
ljmp
fcmovnu
fwait
pop
add
mov
dec
mov
incl
out
pop
dec
in
je
mov
push
and
dec
dec
pop
jo
cmpsl
iret
push
call
pop
clc
or
cli
inc
adc
pop
jmp
insb
cmp
lcall
repnz
cmp
fisubrl
das
pop
fsubs
stc
sub
scas
cmp
out
fsubrs
inc
mov
popa
out
gs
sbb
xchg
cli
push
inc
sub
out
fs
ds
xlat
cmp
mov
add
pop
or
fldenv
fdivrs
xlat
jecxz
ljmp
xlat
lcall
insb
pop
fsubrp
push
fcmovne
xchg
inc
ja
push
push
mov
jo
jno
sub
mov
idivb
push
sahf
mov
pop
jmp
dec
mov
push
fidivrl
cmc
jmp
or
or
jmp
call
outsl
adc
jmp
test
xor
mov
inc
sbbl
mov
jmp
adcb
jl
aas
idivb
fldcw
stc
cmp
mov
adc
inc
and
in
mov
les
pop
or
sbb
jo
jb
lret
call
xor
cmp
cmp
push
inc
ret
stc
push
les
mov
int
dec
push
jo
sub
push
jo
cmp
adc
fs
int
test
clc
imul
push
shr
negl
mov
or
arpl
push
jl
loope
outsl
or
pop
sbb
sub
cmp
sbb
inc
inc
add
je
push
in
fdivr
fs
testl
sbb
bound
jp
pop
dec
call
mov
outsl
cmpsb
dec
test
push
xlat
sbb
lret
push
push
sub
imulb
jns
js
mov
cmp
and
lods
add
sub
xchg
sbb
xchg
loope
jmp
fildl
fs
push
xor
incl
out
mov
and
pop
mov
and
jp
mov
outsb
push
push
sti
mov
push
mov
stos
xlat
fldcw
sbb
xlat
shrb
sbb
xchg
faddl
js
stos
sbb
outsb
mov
add
testb
repnz
js
fstps
mov
inc
adc
dec
pop
pop
js
imul
jge
ljmp
mov
lret
clc
cmpsl
sti
lret
nop
scas
rorb
out
dec
jno
cwtl
and
or
or
or
stc
jnp
xlat
jmp
sub
or
sbb
mov
gs
lods
mov
push
jnp
clc
imul
sti
insb
pop
mov
test
fcmovnu
pop
cli
inc
or
lcall
or
call
fsubrp
leave
cmp
outsl
ljmp
imul
pop
sub
push
enter
dec
insl
aaa
testl
dec
fsubp
dec
imul
clc
enter
scas
ds
sbb
mov
dec
jno
push
clc
imul
in
sub
or
sbb
call
xor
mov
xchg
jl
pop
sbb
enter
sub
jbe
xlat
call
sub
inc
jl
clc
stos
xchg
cli
inc
pop
mov
lods
pop
mov
mov
js
mov
fsubr
jp
sahf
fs
sti
dec
lcall
sub
repz
cmp
shr
in
pop
out
clc
fld
dec
or
repnz
sar
sub
ficomps
push
bound
adc
roll
bound
mov
mov
cli
mov
xchg
aad
sub
fnstcw
dec
dec
ljmp
call
cs
dec
mov
repz
sub
mov
mov
dec
mov
data16
mov
mul
addr16
lcall
js
ret
mov
pop
jbe
and
in
or
jbe
imull
jae
pop
or
pop
adcl
inc
subl
dec
imul
lods
or
ficompl
add
daa
aaa
adc
and
lock
jno
adc
arpl
push
sub
dec
call
push
mov
pop
cmp
mov
lcall
test
fisubrs
jno
mov
pop
mov
jge
lahf
jmp
jp
fistpl
pop
cmp
loop
cmp
sub
mov
xlat
jl
ljmp
sbb
mov
repz
fprem
lcall
adc
mov
fs
pusha
ljmp
arpl
pop
xor
sub
push
test
loope
ficompl
fwait
clc
mov
pop
lods
jmp
repz
jbe
pop
leave
pop
dec
or
fcoms
and
cmp
js
lcall
test
call
inc
fcmovbe
sub
mov
inc
ret
add
fidivrl
sbb
cwtl
xchg
sbb
stc
add
popa
lret
sub
pop
push
sub
pop
push
sub
stos
pop
addb
push
dec
dec
push
push
sti
push
push
mov
xor
or
fimull
pop
push
and
jg
inc
mov
lcall
add
call
xor
jg
fwait
ds
lret
or
push
aas
lcall
push
dec
fcmovbe
dec
adc
ds
push
cmpsl
gs
jmp
leave
leave
jmp
pop
popf
mov
jge
jg
or
adc
fimull
adc
mul
mov
push
fldenv
or
sub
sbb
mov
mov
jge
in
test
mov
popa
dec
pop
and
in
mov
out
fbld
or
mov
pop
push
scas
in
xor
push
dec
cli
pop
and
sub
mov
or
ficoms
into
movl
pop
mov
das
scas
or
dec
mov
lret
insl
push
test
jle
insb
cmp
adc
mov
call
cli
dec
mov
sbb
xor
dec
cmp
mov
cmp
enter
and
pop
fsubrs
xlat
insb
mov
leave
js
mov
mov
cmp
cwtl
jo
loope
fs
jl
pop
arpl
lret
cmp
cmp
das
arpl
arpl
sub
test
mov
in
stos
pop
pop
aas
sbb
js
cmp
jg
mov
pop
mov
mov
mov
aam
testl
dec
dec
orb
inc
sbb
mov
jbe
imull
mov
jnp
adc
cmp
pop
dec
adc
out
jbe
test
dec
sub
jle
call
dec
bound
loope
int3
pop
or
fisubl
jb
cmp
pop
out
and
jae
and
mov
ds
sbb
test
push
pop
ret
add
mov
push
shrl
gs
sbb
test
inc
cli
pusha
mov
insl
sub
sub
sbb
jge
movsl
cwtl
or
sub
in
push
cmc
pusha
xor
pop
push
out
mov
ljmp
push
dec
pop
imul
sbb
imul
ljmp
cmp
out
push
mov
shlb
mov
mov
mov
adc
sub
lods
add
fwait
lcall
fs
cmc
pusha
lock
sbb
js
mov
test
stc
xlat
imul
lcall
mov
pop
cvttps2pi
pop
mov
insl
aad
data16
clc
mov
std
cmp
call
xlat
dec
mov
insb
fs
jp
pusha
sub
xchg
stos
movsb
leave
sbb
and
call
enter
mov
adc
or
pop
jp
pop
fstps
xor
inc
stos
inc
clc
imull
mov
insb
lea
or
insl
rorb
cli
or
mov
fdivrs
lods
pop
inc
dec
into
jp
and
cli
fsubrp
sbb
in
cli
sbb
jmp
push
stc
out
jle
js
inc
popf
or
mov
pop
pop
js
xlat
pop
cmp
popf
sub
mov
jge
aas
sbb
dec
repz
aas
test
js
or
push
and
or
fcmovnbe
xchg
mov
pushf
cli
mov
xor
pop
xchg
pop
and
iret
mov
sub
mov
push
pop
call
out
sub
and
sbb
inc
dec
fld
lods
std
xor
adc
in
clc
or
jp
pop
fxch
insb
enter
sbb
ds
in
sbb
sbb
inc
cmp
das
cwtl
pop
or
out
lret
cmp
pop
stos
dec
jl
pop
dec
pop
push
dec
and
pop
mov
jle
and
or
sub
push
inc
popf
sbb
mov
loopne
cmp
pop
push
iret
das
in
dec
pop
jp
jecxz
lea
or
lcall
jns
loopne
cmpsl
inc
push
adc
lahf
mov
mov
mov
mov
int
out
ficomps
xor
gs
xchg
push
push
inc
pop
loop
movsl
in
test
mov
stos
and
push
icebp
ret
mov
dec
sub
pop
mov
mov
js
mov
insb
and
out
ja
icebp
dec
mov
xlat
fstpt
inc
data16
push
lcall
or
testb
inc
adc
mov
sbb
adc
inc
jo
test
cmpb
lock
jg
and
jge
in
clc
cmc
aaa
xchg
or
les
scas
adc
loopne
inc
pusha
enter
push
cmp
sub
out
inc
push
roll
dec
mov
xor
pop
pop
rsm
call
xlat
mov
mov
aam
pushf
ds
or
bound
push
call
lcall
fwait
dec
jmp
jmp
mov
into
sbb
in
dec
lcall
adc
lret
pusha
out
fs
sti
or
gs
sub
dec
out
mov
call
out
loope
mov
popf
cmp
or
fldt
stc
cmp
xchg
scas
inc
or
push
dec
adc
pop
cmp
cli
sbb
push
in
ljmp
pushf
dec
pop
arpl
pop
xlat
ficoml
adc
repz
xor
push
jge
sbb
pop
cmp
insb
ret
push
test
lea
sti
movl
pop
adc
dec
mov
pop
xchg
or
cli
lock
fsubrp
pop
push
mov
pusha
pop
dec
sub
repnz
leave
sbb
mov
ds
pusha
cwtl
jmp
std
pop
sub
loopne
pop
fcomps
cmp
ljmp
push
jl
xlat
pop
sub
call
std
stc
cmp
clc
pop
pushf
or
mov
call
mov
iret
orb
clc
dec
sbb
mov
sub
fisubrl
sbb
imull
xlat
adc
fwait
ret
stos
sbb
fs
cmp
int
adc
jle
or
dec
jp
sti
or
mov
dec
mov
sbb
fisubrl
jl
fmuls
cli
pop
mov
pop
sbb
imul
push
cmp
xor
mov
pop
push
or
test
js
dec
cli
jp
jl
jg
testl
fs
sub
ja
mov
add
mov
mov
jge
sbbl
mov
push
out
adc
cmp
jb
mov
test
sarl
pop
out
repnz
mov
push
ja
and
pop
cmp
push
push
or
call
or
dec
imul
or
sub
dec
das
jg
jmp
add
sbb
fistl
sbb
or
jl
xchg
insl
jno
gs
lret
mov
jmp
out
pop
jmp
icebp
inc
dec
ljmp
jmp
cld
bound
fs
sbb
push
inc
push
jp
out
fwait
lret
xor
jecxz
int
or
dec
pop
int3
sbb
jl
ffreep
jb
sub
mov
jp
sbb
or
pop
inc
sti
insb
jecxz
cs
out
loopne
sbb
jge
sub
gs
sub
push
pushf
bound
or
sbb
pusha
jle
dec
and
fcoms
out
sub
das
sti
sbb
enter
das
out
pop
mov
popf
cmp
inc
in
jl
sbb
sub
inc
in
jl
dec
or
ja
cld
lea
or
stc
popa
xor
js
dec
gs
jmp
popa
in
pop
jp
pop
fwait
jl
dec
sub
in
arpl
jmp
out
pop
fs
push
testw
push
popa
mov
lods
dec
mov
cwtl
inc
push
or
inc
mov
push
fstps
push
test
stos
xlat
dec
mov
pop
lds
pop
insb
ljmp
lcall
xorl
scas
or
mov
cli
stc
sub
sbb
insb
gs
pop
cmp
push
fbld
in
jnp
or
or
sub
mov
iret
push
stos
dec
das
mov
mov
sbb
insl
xor
jnp
pop
xlat
test
jecxz
dec
sbb
js
sub
inc
sti
mov
fnstcw
adc
lock
test
and
loope
inc
sbb
sub
cmp
pop
jp
sub
dec
sti
mov
neg
fucomi
dec
mov
xchg
lods
test
jo
sbb
mov
int3
pop
test
insb
call
push
jae
sub
out
pop
xchg
dec
fistps
inc
mov
fdivrs
dec
leave
or
popf
push
ja
sbb
or
jno
or
imul
jl
or
data16
lret
out
bnd
mov
mov
fldcw
jne
xchg
mov
dec
cmp
pop
pop
push
sub
js
into
imul
sti
leave
sub
lock
stc
or
pop
in
push
pusha
js
out
and
ja
mov
adc
fmuls
xlat
nop
cmp
jo
cmpsl
gs
push
fcom
pop
imul
sbb
test
add
pop
push
mov
gs
jb
cmp
outsb
nop
out
sub
adc
or
daa
sbb
sti
pusha
pop
jg
sbbl
test
ret
sub
mov
push
or
fcomps
cmpsb
sbb
das
mov
or
add
pop
inc
pop
call
sub
test
leave
mov
mov
repz
sbb
inc
das
jae
ljmp
outsl
ror
fsubr
sbb
stc
cwtl
sub
out
jmp
iret
jle
xlat
xor
daa
sbbl
dec
cmp
xor
mov
sub
sub
pop
jp
stos
cmp
or
sti
xchg
jecxz
sub
movsl
idivl
call
jae
xor
cmp
jne
dec
jb
pop
imul
lcall
aam
clc
fcomi
mov
cmp
arpl
mov
in
xor
fldt
pop
mov
or
push
push
adc
dec
lret
sbb
fisubs
xlat
fimuls
push
cli
call
lret
mov
pushf
push
sub
pop
jp
push
pop
leave
leave
addr16
or
jmp
stos
ret
into
mov
test
jmp
sbb
inc
ds
push
xchg
lret
jg
cmp
mov
inc
push
dec
dec
clc
fcmovnu
xchg
dec
nop
push
dec
mov
mov
push
inc
mov
mov
mov
pop
xorb
andb
cmp
or
sub
push
mov
not
ds
rcrl
out
pop
xlat
sub
stc
sbb
stos
ror
outsl
stos
enter
mov
sbb
sub
push
stc
jg
lret
push
pop
mov
ljmp
mov
aaa
cmp
push
sti
mov
pusha
les
mov
jbe
sbb
lcall
cmp
sub
mov
push
xor
lods
leave
pop
js
test
sub
sbb
cld
out
loopne
sub
add
sbb
sbb
and
mov
jns
mov
sub
mov
mov
xlat
xchg
das
fldcw
sbb
in
fisubl
cmp
mov
out
int3
daa
mov
adc
std
pop
les
fcmovu
mov
lret
cwtl
sub
cmpsl
orb
cli
sarb
pop
sub
movsl
dec
outsb
add
mov
push
jo
pop
ja
mov
fiadds
clc
cmp
mov
scas
pusha
in
xchg
out
lock
sub
js
dec
pop
inc
das
and
pop
ret
out
pop
and
xlat
cmp
dec
sbb
clc
repz
pop
repnz
nop
bnd
js
cmp
insb
sub
test
push
sub
mov
stos
call
jbe
inc
lea
sbb
int3
push
fldt
loopne
pop
sarb
call
popa
mov
sbb
cmp
sub
pop
rolb
popa
and
fdivp
sub
int
lods
jle
jl
leave
arpl
lret
mov
mov
outsl
fnstcw
sub
sub
enter
inc
sub
lock
mov
push
jp
scas
lcall
inc
fs
and
or
movsl
jnp
sub
test
int
mov
mov
or
mov
jle
push
sar
jae
sbb
jmp
jl
icebp
inc
jmp
or
insb
stos
js
clc
mov
fimull
call
and
dec
dec
in
jmp
int
xlat
cmp
pop
iret
sbb
cli
imul
lods
sub
cltd
or
xchg
fmulp
jbe
cmp
aad
cmp
sub
mov
jg
mov
iret
out
arpl
mov
add
test
mov
or
adc
push
xor
int3
aaa
in
fbld
loopne
jmp
pop
or
cmp
shl
out
shr
stos
jmp
sub
jnp
sbb
dec
mov
jo
imul
pop
ret
or
pop
insb
sbb
xor
bound
dec
mov
mov
lahf
pop
mov
int
mov
mov
pop
push
or
lahf
insl
xchg
or
pop
jmp
pushf
test
cmp
sti
dec
fwait
dec
sbb
jp
inc
sub
jl
fs
fcmovnbe
pop
sub
xor
cwtl
fimull
cmp
sub
ss
test
mov
sarb
imul
cli
hlt
pop
pop
imul
enter
adc
cwtl
pop
pop
xor
cmp
inc
lods
lock
imul
sbb
dec
dec
xchg
cmp
xlat
lods
js
popf
leave
add
dec
gs
inc
imul
inc
in
stc
out
jecxz
inc
idivl
cmpsl
mov
or
sub
jg
mov
and
mov
push
and
cmp
cmp
and
push
aam
pop
into
dec
xchg
cmp
aas
inc
out
lahf
pop
shr
cwtl
push
arpl
arpl
test
mov
or
pop
xchg
sub
mov
jmp
or
scas
jl
push
shrb
pop
add
sub
pop
stos
or
inc
leave
or
or
sbb
pop
and
add
gs
leave
inc
push
sbb
shlb
in
push
outsl
insl
push
dec
stos
or
ja
pop
arpl
ret
bound
xorb
gs
cmp
jmp
test
mov
imulb
push
sbb
mov
rcll
fdivp
xchg
sub
add
pushf
cmp
call
fs
stos
jecxz
xor
pop
cwtl
out
dec
cli
push
fiaddl
enter
ja
sub
pop
xchg
negl
pop
pop
fbstp
pop
cmpsl
fs
push
adc
dec
inc
sbb
sub
outsb
adcl
enter
ljmp
cmc
add
jg
daa
je
sub
sbb
dec
data16
arpl
cwtl
sub
sti
push
imul
nop
pop
js
stc
leave
sub
mov
or
or
xlat
adc
ds
fidivrl
shrl
std
lcall
pop
repz
addr16
mov
into
xlat
movsl
cld
sub
cmc
jmp
std
popf
stos
movsb
test
jmp
mov
inc
inc
xlat
inc
mov
arpl
test
jnp
imull
out
or
cmp
dec
mov
or
or
mov
stos
mov
aaa
or
sub
enter
in
insb
cwtl
dec
sub
lods
jmpw
stos
pusha
push
add
or
pusha
dec
lcall
sbb
lret
fisubrl
xor
arpl
ficompl
data16
flds
sbb
jg
cvtdq2ps
dec
push
jle
leave
lea
imul
out
fidivl
fstps
popa
mov
add
lcall
xlat
lock
in
lods
push
inc
lods
push
jl
inc
lods
inc
pop
mov
mov
adcl
out
sbb
data16
fimuls
cwtl
push
jmp
ljmp
pop
loop
sub
mov
adc
dec
sub
pusha
aaa
fwait
cmp
stos
and
mov
sbb
dec
shr
fisubl
jp
mov
pop
leave
enter
pop
cmp
push
sbb
sub
xchg
insl
xchg
pop
jb
push
movsb
inc
sub
imul
mov
dec
jp
lret
mov
and
enter
in
sub
add
add
or
mov
dec
pop
sbb
sti
dec
add
cmp
aaa
xor
negl
ja
call
fistpl
insb
sahf
cli
jp
and
adc
dec
sbb
mov
scas
mov
sub
sbb
mov
mov
fisttpl
lods
fxch
dec
jg
ljmp
jmp
sub
push
cmp
pop
ja
test
cwtl
mov
mov
or
stos
or
insb
mov
out
aas
ljmp
insl
dec
sub
jae
jo
adc
ds
sbb
or
fcomp
scas
mov
mov
cli
pop
push
movsl
clc
test
sub
sbb
jmp
dec
fistl
bound
insb
jle
cmp
outsb
lret
fildll
and
hlt
stos
dec
push
push
sbb
jle
dec
add
aad
cmp
mov
shr
mov
sub
dec
test
in
into
movsl
cli
mov
dec
sbb
sbb
push
cmp
out
sbb
in
add
and
sti
dec
aad
dec
lret
push
push
fadd
mov
push
pop
cmp
adc
iret
inc
loop
add
push
mov
dec
mov
jnp
mov
xchg
dec
mov
pop
pusha
mov
dec
jl
call
and
dec
jp
add
fsub
adc
sub
cmp
notl
or
imul
sbb
sbb
fsqrt
or
js
mov
push
je
mov
daa
dec
sbb
leave
popa
sbbl
ret
outsl
jmp
mov
push
push
fwait
loope
imul
orl
or
sbb
push
imull
inc
insb
or
pop
fcmove
test
in
loopne
out
cmp
jns
mov
aad
data16
pop
lret
insl
je
ja
ljmp
sub
inc
ds
imul
out
dec
lcall
or
popf
sub
or
std
sub
mov
fimuls
mov
mov
mov
or
loopne
push
sbb
inc
outsl
sbb
fimull
or
pop
lds
loope
mov
xor
mov
lret
lret
and
or
push
out
push
mov
push
xchg
in
mov
stos
pop
jl
inc
mov
mov
mov
or
push
lcall
mulb
cwtl
mov
xlat
mov
cltd
ds
scas
bound
fildll
pop
adc
psubusb
sbb
pop
lret
in
sbb
inc
cmp
push
add
push
jno
pop
pop
pop
hlt
pop
xor
movsl
pop
sbb
leave
cmp
gs
icebp
pop
mov
mov
ja
idiv
dec
cmp
add
pop
pop
sti
pop
lcall
and
sub
aaa
clc
or
iret
imul
fiaddl
jnp
js
sbb
inc
mov
insl
pushf
stos
jmp
fiadds
pop
jecxz
repnz
ficompl
mov
sbb
add
insb
add
and
pop
test
sub
sbb
fistpl
xchg
fildll
loope
in
sbb
pusha
out
in
mov
testl
push
ficomps
mov
dec
jle
mov
or
jmp
dec
enter
jp
in
mov
pop
aaa
repnz
lds
push
sub
pop
data16
jo
pop
cmp
xchg
mov
dec
mov
cmp
test
dec
dec
mov
mov
or
adc
or
sbb
mov
mov
stos
insl
mov
sti
xlat
mov
dec
xchg
insb
dec
xchg
xlat
push
ret
clc
leave
cli
add
cs
sbbl
inc
lahf
cwtl
inc
push
mov
out
dec
mov
dec
mov
sti
js
inc
push
scas
jb
insb
cli
sub
dec
mov
mov
xchg
testl
adc
jecxz
js
lret
shr
cmp
and
clc
adc
insl
inc
fsub
inc
adc
insb
rcrb
fwait
shrw
or
das
sbb
jg
jae
stos
jmp
sub
cli
inc
iret
jge
in
fwait
sub
mov
sbb
jp
movsl
xchg
dec
pop
mov
scas
sub
cmp
jmp
cld
sbbl
push
mov
scas
data16
mov
pop
mov
fists
scas
inc
push
sbb
js
sub
movsl
repz
jbe
jne
popa
sbb
mov
lret
jmp
add
iret
testl
cmp
adc
scas
cwtl
jmp
sub
in
pop
jmp
pop
jecxz
fs
sub
enter
imul
out
push
sub
dec
lret
and
inc
sbb
insl
mov
imulb
inc
fsts
ljmp
jle
sub
ljmp
add
push
gs
loop
dec
in
in
or
inc
sbb
ret
movsb
adc
out
sbb
fistpl
pushf
pop
movsb
mov
cmp
lea
cmp
dec
jecxz
inc
adc
push
lock
and
leave
inc
popf
test
cs
jmp
dec
or
push
in
ficomps
mov
jecxz
inc
and
pop
sub
mov
popl
lods
xchg
lods
dec
cld
pop
not
int
inc
and
inc
in
jmp
cmpsb
sarb
dec
out
cmp
push
jle
or
mov
push
adc
stc
or
cld
or
out
pop
into
js
dec
mov
or
jle
sub
fidivs
loope
jmp
lcall
rorb
aas
adc
dec
in
mov
cs
sub
ret
icebp
sbb
lods
mov
sti
shll
sub
iret
out
in
ljmp
xlat
cmp
cmp
fsubrs
or
or
int3
jecxz
pushf
fadds
das
jl
and
or
push
lods
dec
mov
in
jecxz
shrb
cwtl
xchg
test
sub
mov
call
lea
sbb
dec
pop
pop
push
jecxz
ljmp
arpl
dec
fidivrl
sub
jecxz
inc
pop
neg
or
in
pop
mov
sbb
dec
addr16
mov
push
or
sti
imul
pop
mov
ljmp
lods
jp
push
xlat
lods
and
and
ja
call
pop
cmp
jecxz
test
jo
dec
das
adc
mov
dec
jae
out
fdivp
adcl
in
jmp
jmp
push
rorb
xor
fisubrs
pop
sub
lret
fistpl
push
mov
test
js
in
inc
fcomps
cmp
test
sbb
dec
lcall
ficoms
lods
int
stc
ds
movsb
and
sti
jmp
icebp
jle
sti
lods
in
stc
dec
mov
xchg
aad
fistpl
push
jb
mov
push
sarb
mov
sub
lods
shl
jmp
xchg
fwait
dec
sub
or
jmp
mov
daa
xchg
inc
cmp
test
pop
dec
mov
and
cmp
leave
movsl
mov
adc
aas
adc
dec
es
mov
ljmp
mov
leave
mov
enter
test
sbb
dec
lcall
sti
cmc
pusha
or
ljmp
cs
outsl
or
bnd
dec
and
leave
xor
fiadds
mov
jge
imulb
cmp
imul
jnp
popa
or
cmp
repz
mov
btc
leave
sbb
scas
or
jbe
push
mov
jge
stos
mov
sub
sub
clc
sub
mov
stc
xchg
dec
or
mov
jl
pushl
pop
xchg
inc
outsb
mov
repnz
jae
push
push
pop
sub
cmp
insb
adc
add
or
push
scas
cmp
pop
dec
lods
cmp
jl
pop
mov
jno
movsl
sub
ret
jge
cli
insb
clc
fisttpl
leave
pop
lret
js
inc
icebp
cmp
sarb
stc
pop
gs
fldl2t
push
test
lret
dec
cld
insb
sub
cmp
or
in
xchg
mov
pop
sbb
jl
in
fcoml
out
std
or
clc
push
or
mov
and
add
stc
insl
and
leave
stos
fisttpl
or
cmp
pushf
sbb
out
mov
jl
xor
hlt
mov
mov
or
xchg
mov
jmp
pop
movsl
sbb
test
in
xchg
or
test
pop
dec
mov
pop
xlat
fstpt
sub
ret
inc
mov
fnstsw
test
push
out
mov
fistpl
ljmp
pop
mov
lea
repnz
dec
push
das
stc
sbb
pop
sub
lock
stos
aam
or
pop
add
jg
mov
fs
dec
aaa
lcall
and
sarl
lods
xor
das
adc
mov
cmpsb
out
mov
pop
push
and
pop
xchg
daa
push
rcrl
test
jl
mov
cmp
pop
imul
sub
movsl
jge
push
mov
stos
dec
mov
jmp
test
lea
inc
lcall
dec
or
adc
clc
xchg
jl
insl
or
mov
sbb
pop
jmp
or
test
jp
cmp
imul
or
lcall
pop
subb
sbb
jmp
push
js
push
xor
pop
call
or
addr16
sbb
cmp
jp
pop
sbb
pusha
ja
sti
in
lods
jmp
in
ljmp
imul
stos
xchg
in
ljmp
jmp
sub
das
sub
popa
or
pop
jmp
and
lcall
or
add
movsl
push
lahf
cmp
add
rcrl
add
out
cmpb
out
pop
bound
addr16
dec
mov
mov
sub
testb
outsl
in
pop
xlat
neg
in
fs
sti
push
push
incl
enter
cmp
leave
push
push
lahf
dec
pop
sbb
pop
scas
xlat
pop
adc
iret
push
sub
sbb
pop
enter
les
adc
dec
cli
fldcw
pusha
cmc
sti
jmp
mov
cmp
xor
pop
sbb
testl
inc
fldt
stos
enter
aas
lret
dec
dec
icebp
adc
dec
adc
cmp
daa
jb
mov
sub
imul
jmp
xor
test
sub
call
xlat
or
xchg
cld
bound
call
mov
mov
xlat
inc
inc
dec
or
add
push
pop
sub
insb
pusha
jp
sub
cmp
mov
js
dec
xchg
mov
push
enter
push
or
or
mov
mov
aam
dec
or
pop
push
leave
shll
das
jmp
sbb
call
rorb
lock
inc
imul
sub
dec
sub
and
arpl
cmp
shr
jmp
ljmp
inc
stos
dec
adc
adc
pop
jae
stc
call
mov
cmp
out
mov
mov
decl
pop
xorb
jmp
mov
ljmp
inc
add
out
or
cltd
dec
xchg
imul
pop
sbb
mov
sub
popl
or
inc
sub
mov
fs
lret
sbb
sub
fdivrs
stos
ss
out
inc
cmp
aas
int3
pop
dec
ret
stc
xor
inc
or
adc
mov
test
fdivs
inc
pop
mov
jp
mov
mov
popa
pushf
sub
pop
test
out
ljmp
sub
cmp
fisubrs
xor
repnz
pop
xchg
leave
pop
fs
pop
cmp
mov
out
jge
mul
fldenv
jl
fimuls
repz
cmp
pop
or
enter
pop
pop
lret
shrb
sbb
sbb
std
fbld
jmp
bound
dec
mov
scas
dec
in
stc
dec
fmuls
fstpt
arpl
es
dec
aaa
jo
mov
inc
dec
arpl
call
mov
insb
or
mov
mov
jmp
imul
pop
clc
loopne
cmp
xlat
das
sbb
or
sub
push
or
cmp
in
inc
in
adc
sbb
stc
sti
lods
jp
fldt
sbb
fcoms
lret
jl
pop
clc
cmp
sbb
js
sbbl
fldl
sbb
pop
fidivl
sbb
mov
ficompl
jbe
in
loope
loope
sub
clc
add
testb
cmp
mov
sbb
jl
out
stos
cs
mov
cmp
negl
ljmp
stos
fmuls
pop
sbb
mov
lret
scas
fmuls
mov
adc
push
out
cld
enter
imul
arpl
loope
sub
jle
pop
pop
fdivr
push
adc
or
pop
stos
cmp
sbb
or
jo
and
dec
and
call
mov
icebp
cmp
pop
jae
out
adc
insl
add
inc
or
mov
into
cmp
mov
jmp
shrl
dec
or
mov
mov
and
pop
mov
mov
jle
mov
xlat
scas
fwait
stos
xchg
xchg
pop
cmpsb
sub
pop
gs
mov
cmp
out
add
xchg
mov
daa
js
inc
mov
lret
sti
sub
adc
iret
pop
out
adc
cs
pop
fucomi
sti
sub
stos
cmp
movsb
sub
or
push
lret
pop
ret
lret
lahf
out
lods
pop
fcmovnu
cld
dec
push
and
xor
pop
lcall
sub
mov
fucomi
jg
pop
js
or
in
fisubs
sub
mov
clc
push
pop
jp
loop
or
leave
js
or
andl
in
int
mov
fcmovu
stc
idivb
sbb
clc
sub
dec
or
or
or
fsincos
js
jmp
ljmp
imul
xor
jmp
pop
pop
mov
pop
arpl
fisttps
xchg
popl
dec
fisubrs
idivl
pop
mov
mov
jmp
fxch
sbb
push
es
ja
sarb
inc
testb
lret
jmp
out
repz
sub
cli
jmp
sbb
push
dec
call
adc
inc
repnz
lret
int3
xchg
call
cwtl
std
or
mov
testb
cli
movsl
stos
jecxz
jnp
fsts
sub
cs
scas
ljmp
or
out
pop
lods
cli
fstpt
xchg
jbe
and
fidivl
cwtl
sbb
add
mov
mov
orl
ljmp
add
push
dec
sub
xlat
push
sahf
xor
pop
mov
sarl
enter
arpl
outsl
stos
inc
pop
daa
mov
dec
test
icebp
lds
dec
ficoml
stos
push
fcmovnbe
dec
jmp
mov
cli
js
movsl
stc
dec
fwait
stos
sub
sbb
leave
or
imul
sub
mov
pop
mov
cmp
cmp
or
js
sbb
test
pop
iret
ss
cmp
pop
inc
inc
shlb
push
out
cmpsl
jmp
pop
leave
sub
lahf
ja
or
repnz
mov
mov
orl
sub
inc
clc
dec
sbb
xchg
adc
dec
adc
mov
xor
data16
sub
fidivrl
sub
pop
dec
dec
stos
or
sbb
fs
gs
insb
sub
lcall
es
and
xchg
adc
adc
cmc
bound
mov
adc
fistpl
pop
cmp
test
sub
and
js
xchg
inc
dec
lcall
js
cmp
popa
sub
pop
clc
mov
fsubs
sbb
aam
imul
cmp
fmuls
lods
sub
jge
jbe
dec
orb
mov
movsl
scas
or
fisttpl
stos
or
fstpt
bound
mov
out
xor
dec
inc
jp
jmp
pop
cmp
cmp
clc
mov
insb
sbb
loop
and
loope
in
repz
xchg
push
inc
aad
sti
out
cmp
popa
addb
into
and
dec
shrl
fimull
stc
clc
pop
cmp
mov
mov
subl
mov
inc
pop
cmp
and
loop
cmp
das
insb
pop
or
lds
dec
pop
mov
lods
sub
sub
aaa
ljmp
mov
fnstcw
or
mov
xor
xlat
push
movsl
pop
sbb
js
aam
mov
test
sub
dec
push
bound
or
out
mov
sub
movl
inc
imul
aad
fcomi
fsubp
xchg
pop
adc
sub
call
decl
aaa
adc
je
in
insb
jmp
jmp
divl
movsl
adc
and
pop
out
addr16
js
mov
or
xlat
pop
ljmp
sbb
sub
mov
jmp
mov
xchg
pop
push
push
mov
sbb
push
or
int3
jge
stc
insb
arpl
fstpt
fisubrs
arpl
xchg
enter
lret
movsb
loope
or
lcall
or
pop
cmp
sbb
adc
fstpt
dec
test
mov
cwtl
ljmp
les
sbb
test
sbb
fdivr
leave
push
push
adc
push
pop
insb
outsb
divl
movsl
jmp
dec
ljmp
pop
dec
cmp
push
bound
cmp
aad
sub
cmp
pop
push
cs
xchg
popa
fsubr
call
lcall
jmp
or
xchg
cmpsl
add
fidivl
movsl
pop
push
cmp
pop
pop
addr16
call
lods
sub
sti
sub
sbb
dec
sub
mov
outsl
sub
sub
data16
fmuls
jmp
pop
rcrl
pop
sbb
pop
es
and
adc
mov
fsub
notb
sub
sbb
mov
xchg
push
pop
out
pusha
dec
or
ljmp
repz
call
ds
mov
mov
mov
mov
sbb
call
popa
loopne
sub
or
stos
push
push
mov
push
and
jne
xor
jbe
sub
push
ljmp
cli
push
inc
out
ret
dec
sti
clc
ficompl
call
out
leave
or
ds
outsb
sbb
mov
pusha
aas
leave
pushfw
fcmovnu
imul
les
or
xlat
cmc
popa
js
pop
pop
sbb
out
pop
push
test
lret
orb
dec
imul
fucomi
or
leave
test
dec
daa
cmp
or
lcall
dec
loopne
jmp
or
sbb
lods
aas
adc
jl
lcall
or
cwtl
test
add
outsb
cmp
jns
in
popf
cmp
sub
push
xor
jmp
aaa
dec
dec
scas
aaa
push
xchg
arpl
in
jnp
dec
sbb
or
or
mov
pop
es
inc
idiv
push
fcomps
adc
cmp
les
das
sbb
pop
sub
clc
adc
push
pop
sbb
call
dec
leave
jmp
mov
push
or
push
pop
pushf
sub
push
and
pop
inc
or
test
mov
xchg
sub
dec
or
fucomi
or
sbb
mov
arpl
js
push
dec
push
lcall
jae
xchg
mov
loop
stos
inc
cmp
sbb
jl
out
jl
mov
arpl
dec
sbb
js
addr16
sbb
loop
testl
stos
cli
je
inc
inc
pop
out
pop
sbb
fisubrl
leave
test
mov
or
sarb
data16
sub
imul
lret
sti
mov
pop
sub
test
idivb
jp
or
fs
push
jecxz
jns
inc
addr16
cmp
jbe
dec
js
sbb
ds
sub
push
dec
push
mov
sub
add
pop
pop
xchg
dec
dec
test
or
fisubrl
xor
mov
sbb
jge
push
sti
or
mov
dec
sub
xchg
sub
jmp
sbb
out
std
add
fmul
push
dec
pop
jo
lret
sub
sti
call
or
clc
pop
push
push
out
cmp
mov
lahf
insb
and
cwtl
stc
sbb
pop
jo
stc
fwait
movsl
lret
push
dec
pop
daa
imul
jl
pop
push
mov
or
push
leave
dec
sub
jmp
dec
or
int3
mov
sub
add
jmp
inc
addr16
pop
jp
sbb
pop
dec
mov
mov
or
lcall
test
mov
fdivs
or
lret
inc
ret
cmp
lahf
cmp
in
test
push
sbb
xchg
ljmp
jge
xor
notl
inc
arpl
pusha
or
imul
jg
push
mov
in
fs
sbb
in
jnp
enter
imul
aas
adc
fiadds
ljmp
jmp
mov
ds
dec
push
jge
mov
sub
sbb
popa
sti
pop
pop
negl
sub
jmp
jnp
mov
dec
xor
sub
mov
dec
mov
sub
dec
or
arpl
pop
test
orb
lcall
insl
xor
cmc
xchg
mov
inc
sbb
dec
xor
stos
sub
adc
jmp
dec
jmp
jae
test
repz
cmpsb
ljmp
pop
fcmovnbe
movsl
movl
sbb
clc
inc
ds
sub
sbb
punpckhdq
movsb
inc
fidivrs
mov
fprem
addr16
sub
xor
data16
mov
lret
pop
and
and
es
mov
das
pop
test
mov
inc
aas
sti
or
dec
dec
dec
enter
clc
decl
sbb
cmp
add
xor
sub
push
push
mov
test
aaa
pop
repnz
mov
cmp
out
dec
fidivrs
dec
les
mov
add
pop
jmp
leave
ljmp
stos
cld
jp
into
ficomps
mov
sub
jmp
push
jb
or
and
pop
sarl
cmp
aas
adc
ljmp
cmp
lods
xor
call
jnp
aaa
adc
loope
insb
jp
notl
cmp
sti
out
push
fidivrs
and
dec
js
rcrb
xor
push
lcall
mov
movsl
push
mov
outsl
xchg
cmp
mov
jp
sub
mov
lods
testl
adc
xchg
push
mov
ret
pop
repz
ljmp
cmp
ret
inc
push
pop
or
fs
dec
data16
in
fisubrs
dec
cmp
jp
xor
sahf
test
fwait
jmp
dec
ret
mov
fsubrl
jl
mov
addr16
pop
sbb
fs
pop
push
pop
insb
pop
pop
add
call
mov
mov
addr16
lret
mov
and
movsb
mov
imul
mov
jmp
cltd
inc
jmp
sub
mov
sbb
jl
in
lret
mov
ret
or
fsubrs
js
inc
iret
dec
sub
cwtl
dec
outsl
mov
jmp
pop
cmp
sub
pop
imul
paddsb
jmp
movsb
sbb
stc
daa
mov
mov
sbb
pop
xor
nop
scas
and
and
or
cmp
mov
jg
test
fiaddl
mov
mov
sbb
jae
lods
jmp
sub
jl
lret
or
mov
sub
adcl
insb
popa
aam
ljmp
dec
dec
dec
mov
imul
xchg
les
fs
cmp
lret
or
dec
pop
movsb
ljmp
mov
fcmovnbe
cmp
sbb
pop
and
push
and
jnp
pop
test
arpl
xlat
or
call
fsubrs
js
ds
mov
push
inc
ret
push
dec
dec
mov
gs
inc
cmpl
aaa
leave
out
aad
sbb
fcomps
mov
sub
pop
inc
addl
add
dec
or
pop
daa
add
gs
pop
fldcw
push
pop
or
mov
call
mov
fistpl
lret
or
mov
mov
pop
aas
sti
push
sbb
dec
pop
imul
mov
sahf
push
leave
xor
inc
inc
sbb
sti
xor
stc
push
adc
insb
jno
sub
dec
or
div
and
sbb
sub
arpl
cmp
sub
cmp
xlat
mulb
mov
daa
loopne
imul
mov
inc
add
sbb
sbb
cmp
clc
or
incb
mov
dec
mov
inc
lret
pop
and
insb
cmpsb
sbb
pop
lcall
imul
pop
inc
jl
or
cltd
inc
lock
cwtl
dec
jl
push
xchg
out
jmp
ret
mov
sbb
inc
or
pop
inc
jmp
loopne
js
cmp
push
lahf
or
xor
mov
dec
clc
sbb
ljmp
movsl
mov
add
sub
pusha
cmpsl
stc
or
sbb
mov
mov
jmp
adc
popa
fidivrl
cmp
fwait
cli
fistpl
jmp
lret
xor
outsb
sbb
mov
jbe
sub
iret
repnz
sbb
clc
sub
jns
in
add
fcmovnb
mov
ja
in
dec
mov
xchg
xor
or
inc
cmpb
add
sarb
fisubrl
notb
cmp
std
or
lds
in
add
subb
enter
loop
pop
sub
lret
pop
cmp
or
push
stos
leave
out
dec
dec
jl
call
jecxz
ljmp
or
pop
push
dec
dec
in
jp
push
jae
imul
sub
sub
sbb
push
std
dec
sti
and
test
dec
sub
jns
fstpt
pop
enter
adc
cwtl
insb
jecxz
in
fs
icebp
imul
or
cmp
adc
aad
cmp
mov
fadd
jae
sbb
jmp
xor
andb
sbb
mov
mov
dec
cmp
popl
sbb
sbb
stos
js
jp
cmp
mov
lods
in
pop
dec
xchg
sbb
push
dec
cltd
aaa
cmpsb
js
loopne
sti
pop
and
int
sub
dec
sbb
push
leave
pop
sti
outsl
mov
mov
push
mov
push
jae
inc
inc
push
outsb
mov
pop
fbld
pop
mov
fldl2e
stos
sub
adc
adc
inc
imul
or
jp
push
out
mov
loope
push
mov
cmp
or
and
mov
dec
sub
daa
pop
adc
push
aas
pusha
mov
in
stos
mov
mov
cmpsl
sbb
bound
dec
jmp
pop
and
add
lret
inc
jp
push
daa
add
mov
push
es
sub
sbb
jecxz
lods
leave
sbb
mov
arpl
dec
sub
sbb
sbb
jmp
fidivrl
mov
sub
mov
xor
mov
cld
cmp
sbb
xlat
stos
insb
xor
gs
jmp
mov
or
int3
in
sbb
fldcw
sbb
pop
push
fs
jl
dec
fnstcw
push
sbb
and
sub
mov
mov
dec
inc
jmp
lret
dec
jmp
sub
pop
mov
mov
aaa
loope
or
or
mov
sbb
test
out
sub
jle
sbb
or
sub
xorps
clc
insl
loope
jl
sbb
insb
decb
fs
jae
fnstcw
arpl
call
lcall
xchg
or
push
jne
gs
push
leave
or
movsl
mov
in
jle
sub
push
lea
cltd
sbb
mov
mov
aas
subl
cmp
ljmp
sub
sti
out
push
pop
xchg
mov
push
test
cs
jno
pop
cmc
pop
daa
lods
push
dec
ljmp
pop
xchg
call
mov
push
filds
imul
xlat
jmp
inc
in
ja
testl
xchg
mov
movsb
fwait
cld
jmp
outsl
xchg
orb
sub
xlat
dec
fcmovnu
add
pop
and
pop
jno
sbb
sbb
jge
adc
aad
ficompl
pusha
jnp
add
movsl
lcall
mov
pop
fdivrs
jmp
dec
out
stos
test
cmp
lret
pop
imul
dec
inc
adc
lahf
pop
lret
ljmp
cmp
outsl
ja
lcall
out
es
gs
push
movsl
dec
clc
pop
sub
pop
aaa
xchg
inc
dec
outsl
sub
mov
adc
int
js
pop
sarl
sbb
xor
or
or
test
lods
jl
in
js
mov
andl
push
pop
pop
enter
out
mov
mov
cltd
sbb
test
stos
sbb
xchg
mov
and
or
test
pop
cmp
cmp
pop
movsl
xchg
or
inc
loope
push
loope
aas
sub
jmp
out
mov
add
add
inc
jnp
pop
mov
sub
sti
dec
lock
mov
mov
pop
in
fs
jmp
enter
stos
cld
and
mov
imul
fs
xchg
gs
mov
jmp
dec
jg
lret
pusha
negb
push
fldcw
ficompl
add
mov
les
call
pop
mov
xchg
dec
lcall
dec
lods
push
mov
subl
rorl
sub
ds
or
jl
mull
inc
sub
jmp
jl
push
jecxz
cmpl
insl
sbb
dec
fcomp
stos
lret
cli
pop
or
sbb
addl
imul
pop
imul
sbb
inc
ljmp
call
mov
sbb
out
mov
dec
clc
aas
dec
stos
inc
or
adc
cmp
pop
jmp
jecxz
fisttpl
xchg
jl
fucompp
ret
dec
push
or
arpl
jmp
int
js
xchg
divb
arpl
sub
or
pop
sbb
arpl
inc
mov
or
clc
dec
insb
dec
xor
ljmp
cld
repnz
sti
mov
icebp
popa
stos
stos
cli
jns
movsb
es
pop
fisttps
arpl
or
shlb
leave
pop
daa
adc
or
dec
push
inc
mov
xor
lods
mov
dec
or
scas
fisttpl
sti
repnz
cmp
icebp
cmc
cmp
out
mov
jl
mov
push
daa
enter
xor
mov
sub
idivl
sti
clc
cmp
push
stos
pop
in
ljmp
test
push
mov
dec
jmp
test
lahf
lods
enter
pop
cwtl
mov
pop
pop
dec
sub
clc
pop
jecxz
out
push
jnp
in
enter
fwait
dec
or
push
inc
xor
test
mov
daa
cmp
addr16
dec
jmp
sbb
fcomp
push
insb
mov
xchg
fwait
adc
and
push
int3
pop
adc
adc
dec
pop
xchg
movsl
dec
or
or
inc
idiv
mov
sub
stc
lcall
add
cmp
xor
dec
lea
mov
jns
dec
sub
inc
dec
pop
sti
push
mov
cwtl
or
repz
pusha
sbb
pop
mov
out
jae
movsl
ljmp
or
iret
arpl
dec
test
jmp
mov
mov
sub
inc
fidivrl
and
pop
jbe
xchg
dec
mov
loopne
sub
sbb
mov
push
mov
jmp
push
mov
cmp
sbb
xor
pop
sbb
jb
xor
lret
out
push
dec
cwtl
push
jae
adc
or
iret
sbb
lods
dec
stos
sbb
xor
jbe
in
outsl
lret
jmp
mov
jle
sub
hlt
push
inc
sub
mov
ljmp
sub
into
inc
pop
insb
dec
je
cmp
cmp
sbb
insb
mov
test
dec
insb
fsubs
clc
pop
in
sub
stos
or
xchg
dec
mov
stc
mov
fmuls
sti
push
xor
sbb
mov
ljmp
scas
adc
sbb
dec
jno
test
das
fmuls
dec
cmp
cmp
sub
mov
pop
arpl
jl
fsts
mov
lcall
or
sub
sub
sbb
adc
or
gs
leave
mov
xor
imul
js
pop
icebp
nop
mov
push
sbb
call
lret
in
in
or
push
inc
leave
subl
jmp
dec
sub
inc
sbb
mov
jmp
mov
jmp
or
xor
fs
sbb
mov
jl
dec
fldt
xor
dec
jp
xchg
dec
cmp
adc
pop
addr16
push
jle
inc
cmp
jecxz
and
popl
out
or
inc
mov
sbb
push
pusha
mov
scas
dec
jecxz
mov
dec
add
dec
push
dec
cmp
aas
pop
dec
mov
push
sbb
testb
pop
sub
ljmp
mov
mov
leave
lock
sub
inc
cmp
imul
mov
lods
sbb
jge
push
xchg
or
push
sub
dec
xchg
cmp
mov
mov
mov
mov
push
fldt
sti
mov
test
pop
lea
ror
dec
mov
sub
and
leave
and
dec
push
lret
gs
ljmp
inc
movsl
cmp
jbe
enter
jp
sub
xor
icebp
dec
and
js
lds
mov
sbbb
shrb
insb
ds
dec
loopne
mov
mov
push
or
push
add
out
imul
sub
dec
pop
jge
jo
push
push
call
mov
sbb
pop
or
inc
mov
cmp
je
mov
ja
adc
inc
pop
mov
or
pusha
pop
cmc
dec
sub
dec
dec
outsl
adc
js
mov
jle
fstps
sbb
ret
scas
idivb
ja
cmp
and
cmp
stc
arpl
clc
sub
stc
mov
mov
add
test
mov
lods
test
and
fnstcw
or
iret
jmp
sub
ret
stos
sub
std
or
or
jle
dec
jnp
push
inc
mov
fadds
dec
test
sbb
push
jmp
ja
xchg
sar
out
xchg
lods
dec
in
repnz
stc
data16
out
fwait
inc
mov
jnp
lcall
movsl
stc
pop
mov
les
ds
fisubs
mov
dec
mov
ja
loope
sbb
pop
in
bound
dec
adc
cli
push
sbb
insl
ss
cwtl
fildll
pushf
sbb
cmpsl
sti
xchg
cmpsb
mov
je
jl
sub
imulb
dec
pop
cmp
pop
pushl
ss
inc
fwait
adc
mov
inc
or
inc
mov
repz
sub
sbb
pusha
pop
cwtl
outsb
cmp
jp
cli
lcall
or
push
dec
pop
push
cmc
inc
je
sbb
cli
pushf
xchg
ficoms
mov
mov
dec
pusha
push
cmp
incb
sub
jl
in
fs
out
sub
orb
xor
jge
test
test
outsl
dec
mov
lcall
jl
sub
into
mov
popa
pop
xchg
mov
addr16
fistpl
xchg
dec
lret
insb
sbb
mov
out
dec
lret
dec
pop
fstps
jg
test
mov
sub
jbe
inc
cmp
ljmp
pop
divl
xchg
adc
xchg
mov
out
push
mov
dec
rcrb
repnz
sub
mov
cltd
fstps
xchg
xchg
sub
sbb
pop
popf
xchg
jmp
and
sbbb
cmp
sti
call
lea
add
jmp
jl
pop
sub
dec
push
sahf
and
dec
fld
aam
pop
test
add
xor
fisttps
call
or
stos
or
add
insb
fwait
add
inc
mov
jae
inc
push
pop
add
sbb
gs
and
pop
xchg
jbe
aam
lret
lret
popf
push
ret
ret
pop
repnz
in
push
sub
inc
adc
mov
adc
fisubrl
dec
adc
mov
sahf
dec
jmp
sbb
rol
sbb
mov
aad
sti
jmp
call
push
dec
cmc
fdivrl
movsl
inc
jp
inc
or
in
push
and
movsl
in
push
lret
ds
sub
cmp
cmc
fadds
inc
sub
push
out
pop
ljmp
movsl
xchg
ror
xor
in
out
xor
add
sub
mov
push
dec
dec
lcall
es
adc
movsl
mov
add
inc
leave
into
addr16
out
xlat
xchg
and
xchg
mov
movsl
xchg
dec
jle
ds
xchg
pop
mov
insb
aad
or
insl
test
pop
xor
xchg
rorb
shlb
mov
aad
insb
cld
xor
push
fwait
dec
pop
jp
xlat
shll
sub
mov
lcall
pop
std
daa
rclb
movsl
jo
nop
enter
movsl
mov
icebp
xchg
enter
cmpsl
shrl
ljmp
cwtl
push
inc
adc
and
movsl
xor
out
add
movsl
and
mov
ljmp
dec
push
sarb
movsl
xchg
cmp
cmc
int
pop
dec
pop
sub
int
sub
test
xor
sub
fsubrl
add
jne
and
iret
cwtl
movsl
hlt
in
mov
cmp
aam
movsl
or
mov
sbb
mov
mov
test
stc
or
jmp
pop
mov
mov
or
and
cmp
lea
pop
stos
pop
mov
faddl
or
cmp
sti
jmp
fisubrl
out
lcall
pop
out
fwait
or
out
xor
mov
outsl
clc
sbb
jmp
repz
cmp
push
and
repnz
enter
test
dec
sti
sbb
add
ds
fs
outsl
js
jmp
mov
sub
inc
jae
aam
push
aad
and
cmp
cmp
stos
or
cmp
sub
sub
add
lret
sub
dec
sti
insb
call
ljmp
cmp
dec
cmp
mov
or
sub
lock
cli
out
sbb
push
insl
push
stos
dec
pop
ljmp
jg
mov
inc
xlat
addr16
mov
or
or
xchg
bswap
sbb
dec
fildll
sub
push
or
dec
pop
push
adc
pop
sbb
dec
jmp
dec
fsubr
dec
mov
in
js
fnstcw
mov
repz
scas
sub
leave
cmp
leave
fs
mov
mov
sti
cmpxchg
and
int
dec
push
cmp
cmpsl
cmp
test
push
mov
pop
movsl
sbb
adc
leave
js
dec
sub
ret
inc
cmp
ret
sbb
lods
fisubrs
mov
cmp
sbb
mov
mov
push
push
dec
test
pop
dec
sbb
imul
sub
xchg
mov
xchg
lret
xlat
dec
fstpt
add
pop
jp
shll
push
mov
ret
cmpb
and
and
xor
mov
mov
ds
cli
and
sub
add
cmp
out
or
mov
je
stos
cmp
call
das
sbb
call
cmp
mull
cld
les
mov
test
xchg
lea
jg
test
pop
movl
add
je
add
mov
push
push
inc
or
xlat
inc
pop
dec
jmp
movsl
negb
pop
dec
cmc
xchg
mov
add
movsl
sahf
jecxz
lods
cmp
jecxz
loop
xchg
mov
hlt
insl
repnz
adc
and
mov
rcrb
inc
stos
push
les
dec
push
out
movsl
and
dec
jge
mov
and
push
js
pop
out
and
sub
movsl
push
or
lods
call
das
mov
in
outsb
dec
add
or
rolb
lods
scas
xor
andl
inc
fcmovne
cmp
mov
movsl
lods
inc
mov
shr
cmpsl
push
mov
push
mov
lret
lcall
or
ljmp
dec
pop
enter
cmc
push
out
jnp
test
push
xlat
pop
fistps
lock
jb
imul
fldt
xlat
mov
push
stos
loopne
jle
insb
dec
fadds
sbb
cmp
dec
or
cmp
in
rorl
iret
mov
sbb
xchg
jno
pop
js
xor
adc
enter
cwtl
les
js
test
sbb
dec
popa
popf
or
in
dec
out
sub
cmp
pop
sbb
sub
popa
dec
push
dec
sub
bound
test
imul
adc
daa
dec
mov
sbb
sar
adcb
out
leave
ljmp
jmp
or
inc
aas
or
stc
sub
or
dec
in
or
psubsw
insb
jmp
imul
inc
out
sbb
xor
or
insl
cmp
std
test
dec
jecxz
in
fcoms
or
mov
adc
pusha
gs
cmp
cli
lcall
mov
inc
cltd
sbb
imul
or
loope
loopne
pop
stos
test
in
test
mov
pop
data16
mov
mov
test
fstps
or
push
fisubrl
mov
xchg
pushf
pop
bound
sub
dec
cmpsl
dec
sbb
call
dec
xlat
js
mov
or
lret
call
sub
out
adc
popf
jmp
xor
sub
sbb
xchg
mov
ljmp
jne
push
aaa
mov
imul
and
sub
loopne
lods
jmp
pushaw
lret
cmp
dec
mov
imul
mov
dec
stos
cwtl
aaa
outsl
jmp
negl
ficompl
jnp
sub
fdivrs
inc
jae
pop
dec
cmp
sub
jmp
or
idiv
fidivrl
or
dec
repnz
pop
or
ljmp
cmp
sub
sbb
fstpt
sub
or
cmp
cmp
sub
pop
ret
sti
movsl
pop
cli
pop
xlat
pop
xchg
add
or
pushf
cmp
ljmp
cmp
dec
sub
cmp
jmp
lcall
sbb
pop
pop
gs
sub
stos
psubd
pop
or
pop
cmp
lods
or
mov
outsl
subl
dec
cmp
iret
push
dec
test
jge
sub
fimull
sub
js
sub
cmp
mov
insb
cmp
push
das
dec
lret
xchg
sub
cmp
or
cwtl
clc
lods
jmp
movsl
dec
pop
cmp
outsl
stc
sub
xlat
mov
cmp
add
mov
inc
adc
jmp
push
sti
cmp
subl
mov
in
lret
jp
js
mov
repz
push
jmp
pop
lret
jns
pop
enter
iret
pop
add
mov
adc
xchg
mov
out
fcoms
sub
out
imul
jmp
jmp
sbb
mov
int
movsl
pop
adc
fisubs
jmp
scas
repnz
xlat
sti
bound
fdivr
dec
cmp
dec
cltd
sub
jnp
mov
mov
jnp
stos
sub
aaa
inc
or
pop
xchg
pop
pop
sub
dec
pop
xor
enter
sbb
iret
cs
fidivrs
dec
out
popa
push
fmuls
bound
sbb
test
or
insb
mov
dec
lods
pop
js
sbb
sbb
dec
mov
push
daa
xor
int
mov
dec
data16
loopne
divb
cmp
out
adc
pusha
pop
insb
rorl
jp
out
cmp
pushf
js
pop
pusha
out
lret
into
jmp
xlat
dec
gs
mov
fcom
jecxz
sti
sbb
call
cmp
pop
xchg
sbb
cmpsl
push
pop
cmp
cmp
addr16
fld1
sub
pop
xlat
cmp
bound
or
out
jmp
loop
gs
jmp
fcmovu
mov
jp
js
xor
jl
jo
les
test
xchg
insb
data16
lret
jecxz
pop
jmp
pop
sub
das
jge
arpl
leave
test
fs
mov
cmp
pop
sbb
or
mov
or
pop
inc
jnp
xchg
jecxz
dec
jp
push
pop
xchg
xor
inc
inc
xor
sbb
push
jp
insb
and
clc
dec
dec
testl
pop
cmp
frstor
sbb
mov
and
insb
jge
jmp
enter
fdivr
imul
out
ds
ret
fistpl
pop
push
imul
insb
sbb
xchg
jmp
in
in
imull
les
clc
sbb
adc
pop
cmp
jmp
cli
sbb
mov
sub
cmp
leave
pop
push
xchg
icebp
testl
sbb
ljmp
jmp
mov
addr16
push
and
mov
mov
cld
push
adc
insb
mov
subb
fcoml
pop
and
cli
adc
ds
scas
pop
push
pop
repnz
stc
fcom
sbb
jp
push
insb
dec
sti
call
cli
lcall
clc
pop
imul
int
dec
dec
dec
and
jg
dec
popa
push
mov
test
dec
mov
cwtl
jmp
push
mov
mov
js
popl
cmp
xlat
mov
test
pop
mov
mov
lret
sbb
stos
clc
xor
sub
stc
imul
in
call
cmp
or
jmp
insb
xchg
mov
cwtl
sub
mov
cmp
sti
imul
sbb
or
std
pop
jmp
push
cmp
sub
pop
fwait
lret
lcall
cli
cmp
leave
ljmp
pop
xor
adc
jmp
pop
stos
mov
or
cmc
pop
cmp
test
push
sub
in
in
or
ret
fldcw
dec
sbb
cmp
pop
push
cmp
js
sbb
cwtl
mov
sub
jns
insb
or
out
cmp
js
dec
dec
lcall
data16
xor
and
scas
aas
stos
or
or
sub
daa
ret
pop
movsl
mov
lea
or
pop
dec
or
and
or
and
test
enter
pop
outsl
dec
pop
test
sbb
outsl
fimull
js
dec
or
mov
cli
stos
popf
xlat
in
data16
sub
scas
dec
cmpsl
fiaddl
pushf
sub
stos
das
dec
sbb
stos
pop
ret
movsl
cmp
sbb
mov
pop
push
pop
call
stos
daa
cmpsb
dec
or
pop
push
rcrb
cli
sbb
test
dec
daa
js
pop
mov
in
mov
data16
mov
in
mov
adc
sub
dec
lcall
cmp
or
or
sbb
insl
xchg
sub
fucomi
test
lea
push
sub
sbb
mov
sub
jmp
clc
jg
in
rorb
lret
out
sbb
mov
sub
js
sub
cmp
inc
sub
pop
outsl
jg
sub
and
scas
loop
stos
stos
xlat
in
stos
mov
leave
pop
push
sbb
jl
enter
push
repnz
imul
dec
bnd
sub
stc
fmuls
cmp
das
push
sub
mov
in
shll
pop
lods
fwait
or
fisubs
scas
jp
ljmp
add
pop
and
fisubrl
pusha
push
add
dec
aam
mov
stc
adc
scas
xor
out
jno
fdivrp
mov
sub
aaa
jne
fwait
leave
insb
ss
rcll
pop
cmp
sbb
cmp
sbb
stos
jmp
test
pop
loope
fsts
pop
cmp
cmp
mov
movsl
cmp
and
lcall
mov
pop
jmp
jl
cmp
jl
push
jne
xor
nop
sarb
pop
shrl
mov
test
lods
cld
or
out
enter
dec
repz
aad
dec
dec
pop
mov
imul
inc
fldt
inc
data16
jmp
rorb
adc
sti
sbb
sub
cmp
pop
leave
pusha
fdivrs
dec
enter
sbb
ja
jnp
xchg
call
inc
sbb
leave
sbb
jle
mov
jmp
insl
xchg
inc
gs
lcall
rcrb
mov
jnp
push
pop
sub
mov
es
sbb
lods
pop
mov
ficompl
ljmp
push
mov
push
popf
ljmp
sub
push
adc
cmp
push
pop
or
out
insb
jb
lds
xchg
notb
pop
fucomi
cmp
sbb
or
xor
and
pop
xor
clc
jbe
das
rcrb
inc
ret
in
outsl
mov
sbb
mov
mov
aam
jmp
xlat
or
ljmp
push
sti
sub
mov
lret
sub
sub
xor
fimuls
lcall
push
ret
or
mov
pop
sbb
out
test
add
xchg
mov
sub
pop
lcall
sub
test
xlat
pop
pushf
enter
lea
sbb
clc
pop
lahf
and
ret
inc
scas
out
iret
cmp
aad
dec
or
out
mov
mov
jge
hlt
pusha
pop
adc
out
pop
push
adc
xor
cli
out
xchg
inc
test
or
sbb
fcompl
mov
jns
adc
cli
ljmp
sti
push
stc
dec
pop
and
mov
push
rcrb
xor
mov
push
inc
loopne
mov
in
aas
leave
cwtl
sbb
sub
sub
fsubs
mov
mov
imul
mov
dec
stos
ljmp
std
sub
jbe
mov
pop
dec
cli
cmp
pop
pop
xor
ficompl
out
sub
popf
arpl
jp
gs
cmp
lock
dec
scas
fistpl
or
push
push
cmp
movsl
fimull
dec
xchg
scas
iret
cld
sub
test
ljmp
cld
pop
call
sbb
mov
mov
xchg
sub
shll
lcall
push
or
bndstx
movsl
in
popf
mov
mov
sbb
cwtl
or
pop
or
sub
or
pop
in
jmp
sub
pop
fcoms
adc
rolb
pusha
mov
pop
mov
fistps
sbb
sub
dec
sub
fldcw
pushf
dec
sbb
and
mov
cmpsl
jmp
mov
add
cmp
push
imul
sub
jmp
out
ror
rcrl
or
sbb
push
fdivrp
fiaddl
arpl
jl
stc
pop
mov
mov
pusha
scas
ficoml
pop
dec
imul
stc
xchg
pop
mov
dec
hlt
dec
andl
pop
mov
mull
stos
sbb
ljmp
popl
dec
test
pop
jmp
daa
pop
lods
aam
sbb
push
out
cmp
out
and
jmp
sub
iret
cs
or
repnz
cmp
push
sbb
jo
push
fs
enter
mov
lret
or
stos
orb
mov
stos
xchg
or
push
or
popf
xchg
and
ljmp
js
pop
sti
sbb
sbb
fcomps
cmp
pop
adc
cwtl
sarb
sbb
or
mov
in
or
stc
jp
fstpl
push
js
or
fistpl
ret
insl
fdivrs
lcall
lods
inc
lret
or
jle
or
ds
mov
mov
and
and
rcrb
sarb
dec
pop
lret
sub
movsl
test
cltd
jns
out
stc
jp
test
push
push
mov
mov
cmp
in
dec
jo
inc
mov
mull
enter
dec
cmp
sbb
jl
jno
lods
sbb
or
dec
push
daa
and
xchg
pop
pop
cli
sbb
cmp
fcomps
insl
dec
dec
dec
sbb
mov
out
or
sub
and
inc
jne
mov
dec
push
mov
stc
sub
stos
dec
sbb
das
rorl
lcall
call
imulb
pop
enter
sbb
push
enter
xor
push
mov
fistps
add
fsub
das
adc
cmp
xchg
dec
cmpsb
cmp
mov
mov
cmp
js
push
mov
or
int
xor
out
mov
sbb
adc
jb
inc
in
insb
outsb
pop
leave
push
gs
fldcw
pop
jno
sub
inc
decl
and
cs
cli
movsb
or
sub
xchg
lea
jmp
xchg
test
out
lods
inc
xor
pop
fistl
fs
and
aad
cmp
dec
mov
outsb
dec
dec
dec
or
mov
or
int
xchg
cmp
push
jmp
lret
popa
test
out
cmp
stc
fsubr
pop
mov
push
jp
rorb
into
cwtl
daa
add
push
das
cli
or
aaa
sub
in
or
mov
test
fincstp
sahf
cmpsl
mov
subb
or
sbb
adc
orl
lock
pop
inc
insl
push
pop
jmp
or
pop
clc
lods
bnd
stc
decb
sbb
insb
mov
mov
mov
inc
xchg
call
repz
jmp
mov
mov
pop
out
lret
das
movsb
stos
jmp
mov
pop
mov
sub
mov
push
outsl
mov
jmp
jmp
sub
push
mov
cmp
jmp
cmpsl
ljmp
std
sti
pop
cltd
imull
or
inc
push
aam
sbb
movsb
sbb
cmpsl
in
sub
stos
or
sub
xor
mov
push
lahf
or
jae
xlat
push
divl
push
jno
idivb
jg
cmp
mov
fidivl
les
fs
testl
js
lret
scas
jmp
pop
pop
stos
fstps
sub
sub
sub
mov
sti
or
sahf
or
dec
lcall
jmp
aas
dec
xlat
or
xor
hlt
sub
leave
imul
insb
fisubs
pusha
xchg
mov
stc
fidivs
leave
or
adc
lds
fsubs
das
mov
repnz
adc
fdivrp
dec
sbb
pop
add
popf
mov
addr16
stc
cwtl
jmp
mov
jl
fidivrl
or
mov
mov
jne
lcall
xlat
das
icebp
cmp
rcrl
mov
cwtl
mov
pusha
push
sub
lcall
sub
dec
or
iret
sub
cwtl
fldt
push
jmp
cli
ja
test
js
leave
clc
cmpsl
sbb
lods
cmp
sub
jp
cld
jle
mov
inc
insl
jle
or
repz
cmpsb
aaa
dec
push
insb
fldt
int
popa
daa
mov
push
fcomps
pop
pop
lods
sub
adcl
and
into
and
and
fstps
sbb
mov
in
out
cmp
dec
clc
imulb
lret
jmp
pop
or
daa
jp
daa
addr16
push
xlat
fsubr
mov
dec
inc
sub
inc
or
lock
stc
dec
xchg
rorl
mov
dec
dec
imul
cmp
fiaddl
cmp
enter
mov
sub
xor
cli
test
movsb
push
mov
test
shrb
arpl
sbb
arpl
mov
pop
loope
lahf
lret
sbb
sbb
or
stos
mov
fbld
sbb
mov
nop
stos
addr16
lret
out
jmp
jecxz
in
mov
dec
jmp
pop
mov
or
push
push
inc
jl
in
cwtl
sbb
stos
xor
sub
mov
add
rorb
dec
push
xchg
xor
inc
push
fistl
sub
les
pop
cli
or
adc
clc
fldcw
aas
pop
pop
sub
fistpll
or
insb
int
out
cmp
pop
fs
clc
rorb
mov
iret
lcall
enter
stc
dec
mov
dec
pop
sub
cmp
dec
das
sbb
cwtl
les
sub
enter
dec
insb
sbb
jp
lcall
and
aaa
jl
push
xchg
ja
data16
push
dec
sbb
mov
jb
cmp
scas
sub
cmpsb
ss
sub
pop
jnp
pop
js
xlat
mov
inc
pusha
mov
mov
in
xor
sub
sbb
dec
test
fmulp
xlat
hlt
subl
jp
jg
scas
or
test
jg
pusha
inc
push
push
mov
sbb
clc
fs
mov
mov
popf
push
pop
or
jmp
cmp
repnz
pop
lret
sub
stos
pop
inc
pop
push
mov
cwtl
dec
and
mov
insb
inc
sub
add
push
jecxz
sub
imul
pushfw
stos
iret
mov
pop
cwtl
or
push
fisubrl
daa
jnp
mov
sbb
jge,pt
sbb
call
mov
cmp
mov
das
sti
or
dec
cmp
mov
insl
mov
std
jp
das
daa
cmp
push
out
sub
inc
pop
imul
fs
jl
stos
inc
dec
cwtl
pop
ret
dec
or
mov
xor
pop
jne
clc
add
movsl
movsb
push
addr16
scas
pop
or
push
xor
or
jl
fnstcw
dec
int
mov
jmp
lret
imul
sub
add
push
push
jno
pop
cwtl
inc
test
cmp
leave
imul
jmp
pop
es
movsb
cmp
int
and
lds
lcall
imul
cmp
and
test
ljmp
lods
jecxz
cltd
lds
fcomps
pop
insl
enter
sbb
test
sub
fs
lret
mov
scas
out
or
js
pop
in
push
jmp
mov
sub
test
icebp
inc
fdivs
dec
mov
sti
stos
jg
test
in
add
in
sub
lcall
mov
or
cltd
dec
popa
stos
mov
sbb
sbb
mov
or
inc
stc
enter
dec
inc
cmp
fcomps
lock
sbb
adc
pop
popa
pushf
sub
push
pushf
sbb
sub
add
pop
fstpt
inc
int
or
call
imul
or
jl
sub
jg
insb
mov
leave
out
or
leave
pop
sub
dec
sti
mov
aam
jmp
inc
lcall
fmuls
outsl
or
cmp
scas
pushf
inc
cmpsb
shl
mov
stc
mov
and
push
daa
cmp
and
mov
lcall
sbb
or
movsl
xor
imul
ljmp
enter
pop
inc
cmp
test
or
mov
js
or
inc
test
js
pop
mov
sbb
adc
inc
or
iret
cmpsl
add
cmp
sti
enter
mov
ljmp
add
xchg
xor
sbb
lahf
int3
mov
fisttps
jl
mov
push
in
push
aam
pop
lahf
xlat
add
dec
sbb
ss
dec
inc
lds
into
jge
adc
stc
jno
rcr
lret
or
jno
mov
jne
push
jmp
xlat
cmp
imul
adc
dec
push
or
mov
push
in
sbb
sbb
loop
mov
cmp
jl
stos
or
pop
sbb
fsubrp
lcall
jmp
sub
movsl
fldcw
xchg
fs
data16
cmp
jmp
cld
stc
fldt
stc
lods
mov
out
jg
or
and
pop
data16
cmp
scas
jmp
inc
or
imul
jne
sbb
imull
dec
insb
jg
not
mov
sbb
mov
jo
and
pop
sub
in
lcall
adc
or
push
repnz
sub
inc
push
cmp
fs
lcall
jge
mov
lahf
dec
mov
mov
sbb
sbb
daa
push
repnz
addr16
sbb
pop
dec
fs
and
pop
mov
jecxz
mov
jg
dec
jl
aaa
inc
clc
jne
add
rcrb
sub
cmp
imull
stc
jo
std
pop
cmp
pop
mov
insb
dec
dec
dec
pop
leave
test
or
sti
mov
dec
adc
fsubrs
js
pop
fistps
push
fldt
or
jp
out
test
sbb
pop
add
add
or
loopne
les
pop
inc
and
daa
push
sbb
xor
sub
mov
mov
xor
pop
cmp
mov
ljmp
out
cmovg
mov
jo
mov
push
test
insb
dec
mov
sbb
pop
mov
and
stos
int
ljmp
int
fistpl
divb
push
dec
rclb
movsl
mov
mov
xor
mov
lcall
pop
movsl
ljmp
jl
icebp
dec
out
popa
mov
js
out
fcompl
jmp
dec
cmp
lret
push
jne
cmp
movsl
sbb
das
xor
addr16
cwtl
or
lock
sarb
jns
loopne
call
shll
sbb
xchg
daa
sbb
sub
mov
fcmovnbe
scas
or
cmp
dec
jb
imul
cmp
inc
enter
sub
stos
sub
sti
into
xor
dec
xchg
or
idivl
test
leave
mov
sti
lcall
push
outsl
bound
inc
or
int
movsl
lods
xchg
jne
sti
sub
sub
pop
pusha
fadd
movsb
and
pusha
push
movsb
xor
cwtl
stc
into
cli
pusha
add
test
xchg
insl
pusha
aas
ljmp
test
movsl
pop
out
hlt
sub
pop
pop
es
jl
bound
sbb
sti
cmp
or
push
stos
xor
push
out
inc
jp
inc
jbe
inc
sbb
stc
test
pop
xorl
mov
jnp
stos
lods
xlat
cltd
lods
jmp
stc
cmp
jp
mov
cwtl
and
adc
xchg
dec
mov
mov
inc
ficomps
sbb
popa
enter
push
inc
mov
cmp
jmp
inc
sub
mov
ja
into
jl
sbb
cmc
inc
jmp
mov
fstpl
and
mov
adc
push
popa
cmp
push
jns
repnz
jbe
jae
push
and
das
lcall
cmc
mov
cli
mov
mov
sbb
xchg
das
and
push
fimull
es
add
iret
cmp
add
popf
push
sbb
or
add
ja
mov
int3
outsb
fsubs
xchg
call
add
pop
sbb
mov
add
push
sub
rorl
pop
imul
mov
ljmp
inc
cwtl
xlat
in
insb
pop
jne
movsl
insl
xlat
inc
lcall
mov
jmp
adc
fs
push
sub
add
das
cmp
repnz
call
sti
out
insb
jp
mov
sub
jge
mov
rorb
push
aaa
fmuls
sbb
or
xor
cmp
mov
jecxz
dec
sbb
lock
push
or
xchg
lds
mov
or
mov
add
dec
xlat
dec
pop
sub
mov
lcall
loop
insb
sbb
in
or
inc
leave
rolb
inc
mov
lret
push
cmp
mov
jg
sub
pop
mov
stc
xchg
sbbb
rcr
negl
out
cs
lods
jp
pop
sub
or
test
scas
or
fildl
fisubs
cli
lock
cwtl
stos
lock
sub
cwtl
xor
fmul
or
pop
jg
sti
enter
pop
loop
jle
xor
cmp
repz
inc
adc
mov
fiaddl
mov
dec
sub
or
mov
or
sbb
sub
lret
or
enter
and
movl
movsl
or
out
fwait
lret
mov
movsl
add
aaa
fmuls
pop
dec
sti
test
loopne
mov
notl
add
aad
push
cmp
fisttpl
mov
cmp
or
xchg
enter
sub
pop
movsl
out
jno
ljmp
xor
push
jmp
lea
cmp
test
mov
inc
jae
rcrb
dec
lcall
shll
xor
sub
aad
cltd
cmp
add
shll
sub
jo
dec
inc
adc
jecxz
hlt
mov
sub
repnz
ljmp
sbb
sar
clc
xor
sub
sbb
pop
add
jmp
leave
sub
and
mov
adc
das
in
notl
pop
das
dec
pop
adc
cltd
pop
ja
sbb
mov
mov
pop
mov
push
xor
push
lcall
sub
jmp
out
ficompl
push
mov
xchg
jg
push
mov
mov
ds
das
movsl
dec
into
sbb
sub
in
sub
jmp
sub
mov
adc
loope
jg
adc
inc
cmp
or
out
js
insb
pop
test
or
lods
stc
sub
pop
pop
jmp
mov
clc
stc
xlat
cmp
mov
xchg
pusha
dec
sti
int
dec
sbb
pop
loopne
jg
sub
pop
stc
mov
sahf
movsl
mov
push
ja
sub
mov
jmp
cmc
repz
dec
call
jmp
sarl
jge
jbe
cmp
insb
mov
jnp
enter
popf
mov
sub
or
not
test
dec
cmp
cmp
aas
out
not
sub
and
pop
stos
addr16
inc
mov
dec
push
insb
dec
cltd
inc
das
pop
lret
or
push
loope
xlat
enter
cmp
dec
out
in
lret
ljmp
adc
xor
cwtl
cmp
or
mov
das
andl
mov
push
insb
mov
jl
adc
enter
sub
sbb
int3
lods
aas
xor
outsl
out
dec
ljmp
sub
movaps
fsubr
fwait
jp
cmc
or
in
bound
adc
fldpi
or
push
push
mov
cli
jne
popa
pop
subb
movsb
jp
in
push
test
sub
pusha
dec
fsubs
push
mov
sbb
enter
lods
mov
cmp
ss
xor
dec
inc
inc
jl
jp
adc
ljmp
push
into
stos
nop
das
dec
cwtl
cmp
or
add
imul
or
ljmp
mov
pop
sub
mov
pop
dec
rclb
in
add
sbb
dec
imul
arpl
sbb
pop
stos
scas
orb
popa
sbb
pop
mov
ljmp
minps
mov
das
shrl
pop
mov
or
mov
xchg
xor
cmp
push
stos
sub
sbb
push
lock
jno
sbb
xchg
add
sbb
jp
sbb
loop
mov
fimull
daa
clc
out
pop
adc
pusha
dec
jp
fdivrs
and
ja
or
es
jo
push
pop
push
mov
push
jmp
adc
inc
xchg
jle
rorb
pop
mov
mov
cmp
adc
addr16
lods
and
dec
subb
dec
mov
iret
mov
sbb
jmp
push
lret
leave
pop
mov
not
dec
lock
push
fcompp
dec
cwtl
sbb
repnz
cmp
dec
fs
stos
test
scas
imul
lret
cwtl
rcrb
lcall
dec
out
fs
sub
dec
decb
sti
lret
nop
in
pop
movsl
jmp
dec
xchg
sub
imul
ljmp
sti
leave
mov
pop
mov
mov
sbb
mov
mov
pop
sub
shr
lds
lock
leave
fbstp
jmp
das
push
sbb
inc
and
pop
sti
fldcw
cmp
mov
popa
scas
mov
dec
dec
stos
dec
cmp
cmp
mov
or
fiaddl
fdivrs
rorb
outsl
cmp
fimull
insb
xor
sbb
sbb
inc
mov
mov
ljmp
sub
addr16
dec
enter
push
fdivp
clc
fucompp
fisubs
lret
jp
pop
sub
dec
pop
jne
lods
ret
cmpsb
xchg
aaa
or
cli
jmp
lret
sti
push
pop
adc
mov
stos
out
cmp
stc
test
mov
xchg
addr16
sub
jmp
or
sbb
push
jg
leave
dec
insb
pop
enter
dec
mov
cld
fs
in
clc
aaa
mov
ja
mov
inc
add
mov
push
fisubrs
fcoms
and
sub
ret
pop
push
cmp
sub
fisubrs
mov
xlat
shl
mov
dec
dec
mov
jne
sbb
sub
fimull
push
shr
inc
mov
cmp
movsb
push
mov
xor
xlat
dec
and
cwtl
les
ss
and
pop
inc
scas
dec
enter
mov
jl
lock
lret
or
enter
int3
inc
xlat
rclb
push
jmp
aam
scas
test
jmp
add
outsl
pop
sbb
jmp
leave
dec
cli
icebp
add
dec
fisubrs
sti
enter
dec
fnstcw
adc
imul
dec
shlb
mov
sub
cmpsb
stos
sub
mov
lret
mov
jl
sub
cltd
icebp
pop
dec
stos
andl
mov
jo
sbb
lcall
fldcw
dec
push
das
pusha
call
fucomi
bound
mov
push
mov
mov
dec
dec
pop
jp
inc
clc
mov
sarb
or
mov
stc
mov
dec
sbb
popa
xor
xchg
push
push
imul
ljmp
clc
fsubrp
mov
stc
inc
lods
dec
shrl
pop
inc
bound
jbe
nop
push
rcrb
dec
fsqrt
cmp
push
lret
jle
das
call
push
ljmp
rorb
out
sub
jmp
dec
adc
divb
icebp
or
sbb
sbb
dec
sub
fildl
addl
pop
pop
leave
mov
push
lret
sub
jbe
sti
xchg
dec
cwtl
dec
pop
adc
adc
in
xlat
call
cmpb
inc
cmp
fs
in
pop
stos
xchg
jne
mov
leave
rorb
dec
ljmp
lahf
push
or
sbb
mov
sbb
push
ljmp
lea
sbb
sub
das
sub
jl
lea
rcrb
mov
cmp
stos
cli
mov
sub
xor
push
or
sub
ljmp
clc
mov
xchg
cmp
jp
mov
stos
pushf
sbb
sub
mov
loopne
cmp
lods
mov
ret
pop
dec
xchg
dec
cs
cmp
push
insb
sbb
jecxz
push
movd
cltd
fisttpll
das
sti
inc
arpl
jmp
into
or
pop
push
or
push
jge
xlat
sbb
cmp
pushf
push
xchg
jl
add
bound
jnp
or
out
xor
movsl
jp
pop
sub
dec
pop
mov
rcr
outsb
and
cwtl
in
ret
xchg
repz
fs
fildl
decb
clc
xchg
adc
out
sbb
jecxz
clc
cmp
pop
dec
imul
adc
inc
subl
dec
ljmp
jp
jle
dec
cltd
imul
sbb
sbb
and
mov
mov
cli
dec
lods
pop
or
test
jmp
aaa
fld
jmp
mov
jmp
jo
dec
cmp
inc
pop
or
mov
pop
ds
mov
adc
sbb
popa
adc
and
pushf
push
add
lea
inc
enter
dec
jbe
dec
push
push
pop
mov
lea
dec
or
dec
sub
insb
xchg
mov
cmp
pop
sbb
hlt
out
sub
mov
mov
adc
dec
call
pcmpeqd
les
jl
mov
sub
lods
jmp
push
in
xlat
ljmp
lret
idivl
test
push
outsl
call
ljmp
ffree
or
mov
idivb
adc
scas
xlat
leave
mov
xor
iret
stos
jge
push
ficomps
ss
std
jmp
dec
dec
mov
lret
push
pop
dec
clc
lcall
popf
stos
cmp
and
jg
xlat
movsb
or
xchg
mov
sbb
enter
xor
int
sub
in
fs
out
xor
jae
inc
pushf
sub
sub
fldt
sub
cltd
mov
fcoms
mov
add
iret
mov
dec
sub
cmp
jge
fwait
push
cmp
ret
sbb
arpl
test
mov
ficomps
or
sub
jmp
aaa
xchg
pop
cli
into
jo
or
testb
lods
inc
or
dec
ja
add
or
push
fistpl
cmp
int3
fadds
imul
sub
outsb
sub
dec
mov
jno
or
scas
js
movsl
lods
pop
mov
enter
bound
mov
mov
in
mov
push
dec
cmp
sub
sbb
test
lcall
inc
sbb
dec
mov
xchg
push
cmp
jo
fmuls
fcmovnb
and
call
mov
or
inc
pop
or
sbb
sbb
cmp
cli
int3
test
fnsetpm(287
sti
fsubrl
xor
imul
sub
cmpsb
ss
pusha
sarb
mov
jbe
imul
cwtl
mov
dec
mov
cmp
pop
rcrb
jle
mov
call
pop
insb
pop
pop
sti
xchg
sub
push
jmp
pop
icebp
pop
clc
cwtl
leave
jo
xchg
xchg
sub
aam
dec
or
dec
pop
aas
mov
fdivr
adc
add
jmp
adc
es
xchg
pop
rorl
popf
fcmovu
pop
test
ljmp
add
adc
cmp
or
pop
pop
mov
lcall
push
push
arpl
pop
data16
xlat
icebp
mov
sbb
sub
cmp
scas
sbb
insb
sbb
test
mov
stos
fisubrl
pop
mov
loope
dec
sbb
fs
outsl
pop
sub
sub
push
hlt
test
pop
cmpsl
ficoml
sub
sub
fcos
aaa
mov
mov
sub
test
shlb
mov
mov
mov
pop
jecxz
in
and
es
pushf
popa
mov
pop
xchg
pop
lds
add
mov
jnp
cmc
dec
movsl
insb
push
and
leave
pop
jp
jmp
inc
cmp
or
popf
jl
mov
or
and
fmul
inc
xlat
cmp
rcrb
insb
pusha
jmp
addr16
dec
or
push
push
dec
clc
mov
or
int
mov
sbb
cli
cwtd
pop
dec
test
fsubr
mov
in
dec
js
stc
inc
jns
out
fisubrs
stos
ret
daa
out
dec
call
leave
or
dec
ret
or
and
sti
add
cmp
daa
imull
dec
sbb
stc
fs
js
or
sti
or
sarl
not
ss
cmp
lret
pop
dec
cli
sub
dec
jl
les
mov
push
jp
pushf
or
loop
stos
aam
dec
pushf
pushf
mov
sbb
sti
stc
push
test
xchg
sbb
pop
insb
in
sbb
jl
or
nop
js
iret
lods
push
adc
sbb
inc
aam
enter
push
sub
and
xchg
fidivs
clc
fiadds
das
xor
repnz
out
jge
push
lcall
push
fildl
sbb
inc
sub
or
mov
sbb
cmp
repnz
sub
movsl
repnz
and
lcall
adc
sub
stos
std
or
loope
jno
gs
pop
fmuls
sbb
inc
jp
loopne
mov
fdivr
pop
pop
or
sub
movsl
cmp
stc
push
jmpw
push
add
mov
pop
call
sub
test
lds
fmul
std
lods
movsb
jne
mov
jbe
cli
fimull
repnz
sbb
cmp
jns
mov
rclb
jp
jmp
dec
xchg
enter
ljmp
clc
sub
repnz
insl
push
adc
xchg
cmp
sub
into
pop
mov
repnz
fnstcw
mov
scas
fimuls
push
movsb
jne
sbb
pop
cmp
dec
andb
negl
rorb
inc
push
pop
push
call
in
pop
ljmp
mov
es
push
push
dec
mov
sbb
les
sub
std
cmp
outsb
or
push
dec
cmc
mov
cmpsb
mov
inc
cli
inc
adc
movsl
out
aas
call
sbb
fsubrl
fsubs
call
popa
decl
out
mov
leave
daa
ds
sarl
or
rorb
sub
add
sbb
out
sbb
pop
cli
push
or
or
cli
scas
popf
sub
fstp
add
btr
or
call
sbb
clc
test
enter
mov
mov
test
push
sti
insb
js
ja
dec
jle
mov
or
ds
fmull
movsl
xchg
push
int
popa
in
std
or
mov
enter
jb
mov
fiaddl
xlat
cli
dec
icebp
dec
in
ja
or
mov
cmp
cli
push
push
cltd
pop
out
or
movsl
bound
cmp
sbbl
push
sub
pop
mov
leave
mov
in
or
jecxz
mov
cs
and
sbb
mov
ret
pop
aas
sti
movsb
push
outsl
out
insb
mov
and
call
pop
sub
jg
jae
int3
add
int
pop
iret
inc
mov
arpl
or
nop
pop
das
adc
andb
add
es
inc
sbb
insb
repz
dec
mov
jmp
add
fstps
stc
in
fwait
xor
pop
stc
adc
stos
arpl
sbb
pushf
or
xor
sbb
cld
push
pop
das
adc
or
js
sub
add
call
insl
out
sbb
idivl
cmp
dec
xor
mov
lret
mov
fcom
lcall
addr16
cmp
jae
and
jecxz
xor
dec
aaa
mov
leave
add
mov
out
cwtl
push
das
jl
sub
mov
inc
mov
jecxz
jle
insb
or
sbb
push
addr16
pop
pop
call
xlat
and
push
mov
xor
aam
js
adc
sub
insb
cmp
dec
add
cmp
push
dec
lcall
cmp
movsl
stos
mov
ljmp
pop
dec
rorb
loop
insb
sbb
inc
push
sub
xchg
adc
inc
sbb
hlt
sub
shrl
fmuls
cli
sub
fistpll
lret
push
jp
in
out
mov
pusha
dec
sub
jl
pusha
dec
push
stos
cmp
mov
push
fisttpl
mov
dec
pop
cmp
cltd
xchg
or
fildll
insb
push
ljmp
orb
fistpl
dec
adc
lea
aas
mov
ds
mov
stc
sub
lds
cmp
jmp
sub
jmp
adc
popf
dec
lret
push
or
sub
stc
div
mov
mov
cmc
in
cli
notb
stos
sub
ret
gs
rcl
dec
mov
pop
cmp
xor
cmp
iret
mov
pop
jmp
or
sub
inc
sub
pop
and
mov
inc
sub
fstps
push
enter
pop
sbb
cli
mov
dec
sub
pop
aaa
or
subl
xlat
scas
pop
push
lcall
arpl
imul
mov
pop
cmp
xchg
inc
sbb
or
pop
or
imull
mov
movl
sub
dec
gs
mov
lods
ljmp
fisubrl
cmp
xlat
and
dec
dec
in
sbb
adc
and
mov
leavew
std
js
pop
push
jno
sub
push
cmp
jmp
cmpsl
inc
frstpm(287
cmp
bound
or
cmp
sbb
lret
jg
sbb
lcall
fisubl
sti
stos
movsl
mov
cwtl
xchg
pop
jb
movsl
ds
stos
outsl
adc
pop
enter
insl
jl
mov
xor
mov
sbb
fisubl
push
adc
jns
bound
push
pop
jnp
lret
mov
aas
dec
dec
js
inc
fstps
movsl
mov
lahf
push
data16
insl
dec
leave
xor
sub
cmpsb
pop
call
bnd
or
mov
and
leave
xlat
imul
or
js
and
insl
imul
cmp
sub
xchg
lret
std
je
ss
add
das
cmp
xor
fbstp
pop
test
dec
out
sub
inc
jno
push
test
jge
test
cli
pop
cmpl
js
inc
sbb
xchg
stc
dec
rcrb
cli
orb
mov
lods
out
rorl
cwtl
dec
repz
mov
int
sub
mov
mov
insb
jl
pop
dec
adcl
jcxz
push
data16
pop
sub
or
jl
inc
fs
or
sub
cmp
sub
add
outsl
negb
jo
add
xor
xlat
inc
movsl
sub
subb
xlat
out
out
xor
pop
dec
mov
aaa
xchg
sbb
mov
sub
dec
sbb
das
sub
ss
cmp
daa
or
pop
xchg
cs
adc
fnstenv
shr
lds
sti
mov
cld
fxch
push
clc
int3
movsb
add
jmp
orl
call
sub
mov
mov
jmp
dec
pop
ss
repnz
jecxz
xchg
inc
jge
jge
cmpb
insl
pop
dec
or
sti
or
mov
or
mov
mov
aas
pushf
out
iret
or
sub
jmp
or
cli
test
mov
fmuls
sub
out
pop
cmp
scas
stc
fwait
sbb
ds
leave
fistpl
fiadds
mov
jno
and
and
arpl
cwtl
rcrb
sub
scas
or
rcrb
jg
dec
xor
inc
leave
insb
fadds
add
cli
shl
lods
mov
pop
sbb
sub
sub
sbb
dec
movsl
mov
inc
mov
popa
dec
cwtl
jmp
pop
pop
pop
ret
pop
pop
aaa
iret
dec
pop
insb
cwtl
xchg
addr16
mov
sbb
js
dec
or
pop
jb
enter
or
ljmp
insb
xor
dec
popf
push
adc
jge
sbb
cmp
loopne
sbb
mov
mov
push
mov
aaa
add
jae
fidivrl
leave
clc
cmp
xchg
dec
mov
jnp
or
adc
dec
inc
pop
jmp
and
push
pop
sub
cmp
mov
stc
push
aaa
sahf
xlat
out
and
xchg
stos
jmp
stos
loop
lret
jl
pushf
sub
std
or
xchg
mov
repz
push
cmp
push
sbb
ljmp
dec
mov
pop
mov
jo
negb
shll
fldcw
movsb
jmp
sbb
mov
or
sti
mov
xor
or
dec
jno
jecxz
fwait
dec
jmp
je
data16
stos
sub
movsl
mov
jns
stos
fmuls
sub
rcl
lea
cmp
arpl
mov
adc
outsl
fimull
js
pop
sbb
jecxz
popf
insb
mov
test
popf
xor
ret
leave
imul
or
sbb
daa
cmpsl
das
cmpsb
out
popa
cmp
loope
mov
push
data16
mov
xlat
aam
pop
lret
sbb
sbb
mov
fwait
dec
push
shr
cmpsb
pop
dec
push
rcrb
push
adc
imul
lcall
or
mov
test
fcmovu
push
fldenv
jp
dec
cmp
adc
mov
addr16
mov
mov
out
dec
lock
sub
dec
insb
sbb
xchg
sarl
pop
fildll
sbb
dec
jmp
popa
pop
sub
pop
add
sub
mov
stc
sub
gs
test
jmp
sbb
mov
sub
clc
loope
pop
dec
mov
das
jns
jmp
sahf
negl
dec
fcmove
pop
mov
ja
xlat
sbb
jp
xchg
insl
movsb
cmp
inc
in
and
fcmovnbe
xchg
cli
add
repnz
push
mov
adc
arpl
pop
sbb
pop
lret
flds
jecxz
sub
inc
dec
jp
repz
pop
out
insl
mov
inc
pop
mov
inc
je
pop
pop
push
sti
add
xchg
jmp
cmp
ljmp
jl
or
int3
iret
sbb
push
enter
xchg
pop
clc
pop
lret
push
test
aas
mov
je
dec
jle
xor
cs
inc
and
loop
or
insl
add
mov
dec
cmp
rcrl
addr16
cmp
adc
adc
jno
lea
or
or
xor
mov
dec
js
lret
mov
into
pop
pop
int
pop
add
sbb
js
mov
loopne
std
jl
scas
shr
ret
jmp
xlat
int3
jmp
pushf
xchg
lret
loopne
adc
pop
insl
sub
mov
pop
sub
or
daa
xchg
cwtl
sbbb
sub
jmp
push
insb
and
dec
pop
dec
cmp
dec
into
add
test
mov
pop
enter
imul
popa
lcall
lret
out
imul
jmp
das
sub
or
or
mov
pop
cmp
inc
or
sbb
insb
pop
fmul
insl
xchg
pop
pusha
enter
mull
sti
or
stos
cmp
cmp
leave
loop
or
mov
jmp
leave
outsl
inc
cmp
pop
or
jl
jno
sub
adc
jmp
lret
push
mov
or
or
in
mov
lods
xchg
sbb
scas
push
pop
mov
sub
sub
sub
cmp
sub
test
sub
cwtl
or
cli
lret
xor
cmp
jmp
mov
test
sub
add
fbstp
mov
fisttpl
movsb
in
push
or
mov
std
xorb
mov
nop
mov
dec
mov
mov
sbb
jmp
and
sub
mov
stos
sbb
cmp
neg
add
pop
sub
fldt
mov
test
push
inc
sub
push
xor
sbb
popf
push
add
inc
dec
mov
cmp
pop
mov
jmp
cmp
cmp
fisttpl
sbb
or
inc
pop
lds
cs
imul
or
pop
ja
in
mov
out
push
out
ds
dec
leave
pusha
lret
outsl
and
or
pop
rcl
pop
cmp
push
pop
or
sub
xchg
and
inc
imulb
mov
clc
in
jle
pop
insb
mov
lods
cltd
sub
sbb
orb
jge
add
jmp
sbb
lods
sub
or
scas
mov
fidivrl
sub
inc
push
pop
mov
jmp
fdivrs
mov
sbb
enter
dec
sub
dec
and
adc
pop
scas
push
push
lcall
insb
xchg
ljmp
xor
mov
mov
movsl
imulb
lea
sbb
cmc
inc
xor
pop
data16
pop
or
push
push
cs
scas
outsb
mov
xchg
ljmp
mul
xchg
clc
cli
or
sbb
rcrb
fldt
imul
sbb
or
in
sti
cmp
testl
fimull
pop
mov
mov
push
or
or
dec
cmp
lods
cmp
xchg
inc
pop
pop
sub
fs
mov
fistl
mov
or
xor
cmp
leave
imul
or
aas
mov
add
sub
jnp
es
jno
arpl
stc
mov
jle
cmp
lret
lret
pop
sbb
adc
fmull
jbe
fldcw
mov
sub
or
popa
setp
push
dec
fcmovnb
mov
out
nop
stos
jl
or
sub
jmp
ret
inc
enter
dec
sub
pop
push
fldt
sbb
pop
ds
or
dec
mov
cmp
mov
out
push
ljmp
sub
xor
mov
out
jmp
test
ja
ljmp
stc
testb
incb
cs
lcall
loop
cmp
or
mov
dec
jl
sbb
jmp
pop
jg
jae
dec
xchg
or
out
or
pop
cmp
sbb
daa
dec
inc
mov
adc
xlat
lret
or
imul
sub
cmp
cmpsl
push
cli
push
iret
popf
inc
inc
mov
sti
and
mov
cwtl
je
or
or
js
sbb
push
test
mov
sub
js
stc
push
add
mull
xlat
jmp
jp
sub
sub
addr16
xchg
xchg
lds
outsl
stos
mov
or
xchg
or
mov
or
popf
test
adc
fdivrs
out
mov
aas
out
sbb
mov
fsubrs
xchg
popa
push
sbb
mov
or
mov
cld
leave
sbb
cwtl
dec
and
test
sub
sub
lahf
jp
jmp
pop
aas
dec
cmp
or
cmp
pop
dec
imul
dec
cmp
fsubs
or
dec
sub
xchg
jne
pop
sub
inc
lods
mov
cmp
push
sub
fldt
fsubs
lahf
pop
xor
inc
std
cwtl
inc
jb
pop
daa
mov
je
popf
in
ss
add
lods
mov
js
mov
xchg
pop
pop
imul
out
push
shll
cmp
bound
mov
gs
arpl
fs
das
dec
sbb
shl
dec
shrb
fldt
push
jo
or
sti
loopne
jmp
leave
loope
mov
das
push
xchg
cmp
mov
js
mov
dec
adc
or
mov
inc
addr16
out
pop
xor
fstpt
movsl
in
data16
cmpsb
gs
sub
fmuls
call
idivl
sub
or
sbbl
or
dec
call
sbb
inc
sbb
inc
jp
lahf
xor
sbb
mov
idiv
sub
xchg
jle
cmp
pop
inc
dec
ljmp
dec
insb
xchg
mov
testl
jecxz
jg
sub
mov
pop
les
mov
sub
imull
cmp
fdivr
insb
mov
test
pop
push
decb
xlat
lret
pop
xor
out
inc
fldcw
negl
aam
lret
outsl
cmp
insb
pop
cli
fs
jl
xchg
or
push
push
xchg
fstps
js
mov
pop
mov
dec
inc
cmp
sbb
sub
or
xchg
lret
jmp
into
repz
pop
popf
sub
dec
and
dec
dec
jp
sbb
ficoms
push
fsubrl
push
jl
mov
jecxz
fcomps
out
jmp
sub
and
sub
add
out
or
or
lret
jo
add
push
cmpsl
sbb
jmp
jo
push
leave
fimuls
pop
pop
push
call
stos
dec
insb
pop
repz
xchg
aam
jmp
xor
xor
mov
mov
and
pop
cmp
lret
sub
dec
jmp
test
clc
pop
aam
outsb
lret
add
aas
or
mov
xor
dec
push
cltd
imul
pop
add
outsl
insb
fsubr
leave
clc
sti
ljmp
jmp
iret
sbb
das
jmp
aaa
mov
ret
mov
jl
and
inc
jmp
sub
sbb
mov
or
inc
cli
cmp
and
mov
stos
inc
mov
lahf
pop
aas
insb
lahf
pop
ja
push
or
cmp
mov
fnstenv
dec
sub
test
push
int3
mov
cli
ljmp
jmp
mul
fsts
xchg
test
xchg
dec
dec
and
scas
adc
cmp
sbb
insb
rcr
js
sub
mov
fistps
cmp
test
stc
sarb
push
cli
cwtl
pop
insb
jae
dec
js
mul
gs
or
insb
mov
in
xor
adc
cmp
stc
out
push
rcr
mov
sbb
and
outsl
fs
enter
lcall
dec
mov
pop
lret
jmp
inc
je
cmpsb
jns
push
jae
adc
jno
adc
pop
div
xor
test
rcr
jl
jno
dec
fisttpl
mov
mov
lock
test
jl
lret
insb
push
clc
mov
pop
push
dec
insb
in
inc
stc
and
cwtl
push
fidivrl
jp
sti
cmp
sbb
addl
repnz
js
jecxz
adc
cmp
xor
lock
jg
sbb
inc
jl
xor
dec
mov
stc
clc
xchg
shrb
call
sub
aas
negl
sub
subl
sub
addr16
mov
jge
mov
call
push
out
add
mov
std
pop
fimull
push
sbb
movsl
adc
stos
sbb
mov
leave
sbb
dec
rorb
sbb
fs
adc
sub
pop
jp
dec
adc
cmp
xor
mov
fstpl
mov
js
nop
sbb
mov
mov
cli
jns
outsb
pusha
or
stc
dec
insb
inc
sti
and
ds
sub
fdivr
mov
cmpsb
xor
sub
ds
pop
and
fmuls
mov
jb
cmp
lea
iret
in
push
subb
lcall
outsb
sarl
arpl
mov
cmp
jmp
sti
hlt
xchg
push
mov
sbb
xchg
sti
movsl
shrl
push
mov
mov
pop
dec
jl
popa
push
cmp
cwtd
repz
pusha
lret
mov
cmp
xchg
fimull
lcall
cmp
arpl
cmp
cmp
pop
mov
sub
add
test
in
shrb
sub
sbb
dec
jmp
inc
xlat
push
mov
rorb
pop
sbb
pop
adc
cmp
out
inc
sti
push
sbb
and
cmp
xchg
iret
aaa
data16
fmuls
ljmp
mov
dec
dec
ds
lods
sbb
bound
jge
inc
dec
adc
xlat
push
aad
shr
aam
xchg
or
or
jmp
enter
push
dec
cmc
scas
test
or
sub
pop
inc
or
movsl
stos
sub
mov
cmp
dec
dec
sti
sub
fdivrs
cmp
inc
cmp
inc
test
stos
push
aad
lahf
sbb
gs
cmp
lcall
or
dec
mov
sbb
sbb
xchg
sub
jmp
ljmp
dec
leave
sub
adc
sbb
imul
sub
sub
cmp
test
sbb
stos
dec
pop
sbb
fmuls
pop
sub
sub
daa
jns
push
mov
pop
mov
mov
sbb
stc
push
sub
rorb
sbb
mov
cmpsb
int
jmp
stc
cmp
cmp
sbb
test
cmc
pop
jmp
fcmovb
fstps
cmp
lcall
dec
push
lret
push
sub
or
imul
ds
sahf
ret
insb
sbb
addr16
cwtl
sbb
imull
insl
dec
sub
scas
stos
fistpl
add
fs
pop
add
ds
std
nop
cs
lret
ljmp
jge
jmp
fnstenv
dec
stc
xlat
cmp
sub
sub
jg
push
dec
cmp
sbb
push
lret
xchg
ds
das
jnp
jl
and
pop
sub
mov
insl
fisttps
ja
dec
fimull
or
ljmp
aaa
hlt
mov
cmp
sub
loopne
cmp
fs
adc
aaa
mov
jnp
cmc
stos
cmp
mov
jl
jl
iret
sbb
push
mov
into
stc
jb
push
dec
daa
imul
or
adc
ficompl
pop
cmc
pop
mov
mov
js
dec
dec
cwtl
movsl
cmp
push
stos
pop
dec
pop
mov
push
adc
ficoml
dec
lahf
testb
push
test
cmp
or
mov
scas
pushf
bound
inc
sarb
ds
dec
cmp
dec
in
xlat
jmp
cmp
lret
inc
add
dec
bound
pop
js
pop
add
es
fs
stc
pop
dec
fwait
sti
or
pop
or
cmp
ss
lock
mov
negl
mov
pop
or
cmc
scas
mov
pop
cmp
dec
pop
sbb
fsubs
jmp
imul
testl
or
push
into
dec
pop
test
lcall
movsb
stos
cmp
stos
pop
dec
fsubr
jle
or
fiadds
sti
dec
mov
mov
js
repz
sti
out
mov
pop
das
mov
andl
neg
mov
mov
fstpt
leave
jne
insb
push
sbb
push
jecxz
adc
pop
mov
ljmp
out
test
or
cmp
push
cmp
sub
les
lret
pop
sub
mov
push
pop
stos
sbb
js
or
and
dec
dec
mov
imul
lcall
mov
mulb
ja
dec
test
addr16
cmp
cld
imul
ficompl
dec
into
std
leave
loopne
or
out
mov
stos
clc
xchg
pop
pop
xor
stc
adc
mov
ret
pop
mov
int
test
movsl
mov
add
ljmp
dec
inc
movsb
addr16
call
neg
cltd
inc
fwait
cmp
inc
push
lret
movsb
jl
push
clc
pop
or
loopne
dec
sbb
mov
sbb
dec
sbb
jmp
mov
stos
inc
dec
ljmp
add
pop
cmp
pop
cmc
shl
rorb
sub
cmp
pop
jnp
lret
dec
mov
int3
mov
pop
cmp
call
mov
dec
add
mov
stos
mov
std
and
out
pop
cmp
call
pusha
lea
and
cmp
ficomps
dec
sub
pop
sbb
cli
enter
dec
outsl
and
lret
jmp
bound
add
or
mov
dec
sbb
sub
push
test
push
pop
pop
loopne
cmp
insb
pop
fninit
js
sub
jmp
pop
mov
xlat
or
jae
enter
enter
dec
mov
cs
out
sub
cmp
cmp
call
popf
jmp
daa
jl
hlt
pop
lret
sub
cmp
in
jns
mov
out
xchg
sub
fcomps
pop
mov
pop
enter
jmp
sbb
movsb
cmp
dec
rolb
in
aad
insl
cmc
dec
mov
or
aas
push
xlat
cmp
leave
push
sbb
jge
lock
xor
scas
ljmp
inc
push
cmp
sub
or
sub
pop
pop
sbb
iret
adc
add
jns
rolb
in
jmp
mov
cmp
push
inc
clc
stos
mull
mov
sbb
data16
ja
lret
aaa
ljmp
pop
pop
dec
clc
lods
lock
jp
sub
out
ljmp
jl
mov
inc
subb
sbb
enter
mov
mov
sub
pop
insb
enter
or
insb
mov
cmpsl
jmp
sbb
push
sbb
test
sbb
xlat
enter
pop
jecxz
std
jmp
jbe
xchg
mov
dec
gs
scas
sbb
jmp
jbe
stos
int3
das
sub
pop
pop
xor
add
ljmp
add
test
in
dec
js
imul
movsl
sub
pop
sbb
mov
js
and
js
adc
push
in
cmpsb
mov
into
ljmp
dec
xor
jno
daa
pop
mov
cmp
fs
cli
pop
cmp
cwtl
push
xlat
js
push
cmp
leave
pop
lds
and
imul
sarb
sub
jnp
test
stos
arpl
or
decl
cli
mov
sarb
test
push
push
adc
sbb
push
leave
cli
mov
jp
int3
rcll
out
sub
pop
lret
push
orb
push
lret
sub
aas
push
sub
sbb
addb
adc
dec
out
pop
push
inc
pop
sbb
imul
and
dec
push
pop
and
mov
sbb
cmp
and
loope
ljmp
fistpl
test
xor
insb
add
mov
in
push
adc
xor
cli
mov
or
jl
filds
mov
out
sub
inc
mov
sub
pop
mov
imul
sub
jl
fidivrs
cli
or
fidivrl
test
sbb
jmp
dec
cmp
loop
lret
mov
add
push
nop
jmp
fisubrl
pop
dec
pop
addr16
sahf
imul
mov
lods
leave
pop
mov
inc
pop
das
lcall
mov
jmp
dec
mov
sub
ljmp
lret
dec
sub
inc
cmp
test
dec
mov
pop
push
fcompl
or
ljmp
xor
cmp
sbb
arpl
idivl
in
pop
test
mov
test
dec
jp
xor
sbb
mov
mov
in
jecxz
add
dec
cli
jmp
subl
sub
jmp
cltd
cmp
sbb
flds
adc
jle
leave
mov
mov
js
lahf
inc
add
dec
jb
leave
jge
into
fistpl
inc
dec
or
sbb
test
scas
sbb
subl
js
jl
cld
sub
mov
pop
or
sub
imul
mov
clc
jge
mov
jp
scas
mov
lods
insb
addl
push
sbb
cmp
dec
pop
inc
mov
orl
or
pop
inc
imul
fs
pop
cmp
test
sbb
not
idivl
push
cwtl
pop
sub
ds
lcall
or
pusha
stos
cli
test
jmp
xchg
jecxz
leave
or
aas
mov
sub
add
stos
fdiv
jns
dec
mov
rcrl
mov
push
das
insb
pop
cli
scas
stc
mov
fisubl
push
jno
stos
prefetchw
mov
push
testl
or
lods
bnd
sbb
sub
mov
adc
dec
xor
dec
xorb
out
insb
dec
dec
out
mov
pop
addr16
dec
push
push
or
sub
insb
jo
roll
jmp
or
sub
adc
lahf
cmp
pop
jmp
cmp
xchg
push
jmp
push
add
pop
cli
imul
cmpsl
mov
pusha
fdivs
cld
ljmp
pop
mov
pop
cmp
out
cwtl
jns
test
mov
sub
sub
xorps
dec
insb
movsb
mov
ljmp
retw
lea
xlat
scas
out
dec
mov
sub
call
jns
testl
pop
pop
pop
fdivrp
ret
cld
pusha
jno
enter
mov
sbb
fsubrs
dec
pop
out
add
lods
inc
clc
movsb
movsl
cmp
sub
add
cmpsb
outsb
out
icebp
pop
or
lret
stos
sub
imull
insb
or
pop
aad
stos
insl
mov
iret
call
cmp
jmp
pop
dec
cmp
sbb
das
sbb
or
push
and
or
push
imul
jge
sbb
loopne
mov
mov
sti
subl
mov
pop
sti
or
mov
pop
sub
fimull
mov
fs
sub
sbb
sub
cmp
lods
or
jmp
stc
data16
xlat
mov
clc
lcall
daa
jnp
mov
fnstcw
sub
fcomi
sbb
ds
mov
cltd
clc
bound
mov
mov
out
dec
jmp
ds
movl
pop
sbb
enter
cli
fildl
push
xchg
aam
int3
sbb
sbb
adcb
outsl
hlt
pop
sbb
mov
enter
cmp
dec
test
or
push
movsl
push
inc
cmp
sub
imul
or
not
sub
fimuls
aaa
xchg
lret
into
adc
cmpsl
ljmp
fldt
mov
fisubrl
std
jp
mov
or
popa
sbb
fsubr
sub
inc
add
aaa
pop
sbb
push
pop
stos
fsubrs
inc
daa
pop
out
add
lret
push
mov
jnp
mov
addr16
dec
sti
jecxz
xchg
enter
ret
popa
cmp
fisttpl
dec
dec
jp
scas
and
cmp
cmpsl
and
mov
jg
aam
out
aam
sub
sbb
pop
into
pop
scas
fimuls
jo
jp
scas
insl
mov
cmp
loopne
sbb
int
flds
rorl
adc
leave
pop
insb
fldenv
stc
movsl
dec
pop
cmp
pop
insl
jp
add
ljmp
jl
daa
arpl
push
cmp
push
out
lods
inc
xchg
xchg
inc
fistpll
sub
sub
popa
pop
cmp
push
lcall
enter
push
jl
inc
pop
or
or
rolb
pop
aas
insb
jae
std
mov
or
and
enter
sbb
repz
ja
mov
fisttpl
out
test
jg
dec
jp
or
dec
subl
test
push
and
mov
sub
cmp
mov
negb
jns
sub
pop
add
cmp
subl
dec
out
nop
bound
leave
data16
sub
cmp
push
mov
sbb
in
pop
in
sub
push
ret
or
dec
xor
adc
push
sbb
mov
xchg
cmp
adc
enter
scas
ljmp
push
call
jmp
xchg
int
sbb
pop
inc
sub
scas
lret
cli
dec
xorl
lahf
lcall
or
cmp
sub
stos
int
lea
and
sarl
leave
or
mov
cld
sbb
sahf
cmp
enter
or
inc
gs
mov
popf
pop
ljmp
or
add
xchg
inc
cltd
or
insl
testb
sbb
int3
mov
xlat
and
aas
lods
out
add
out
xacquire
enter
jecxz
clc
push
fiaddl
stos
pop
sti
leave
in
push
push
insl
repnz
cwtl
mov
iret
pop
pop
jp
or
div
mov
aad
enter
test
cmp
jle
sbb
or
fs
mov
push
stc
dec
sahf
lea
jle
cmp
cmp
ds
mov
mov
or
xor
ljmp
fucomi
xor
jo
adc
push
call
cld
sti
fisubrs
dec
sub
jmp
sahf
push
xchg
fisubrs
dec
dec
jo
call
daa
pop
enter
cmp
les
sbb
jmp
xor
mov
adc
dec
test
pop
testl
xor
sbb
or
xor
pushl
mov
mov
jge
test
pop
dec
orl
cmp
sbb
mov
arpl
cmp
pop
jecxz
sbb
dec
jl
cli
sub
scas
jp
xlat
xor
or
ds
imull
pop
sbb
shrb
lea
jp
jnp
popa
xor
xlat
mov
stc
adc
stc
out
fidivl
pop
mov
push
dec
xlat
dec
sub
or
push
xor
xchg
leave
pop
hlt
mov
pushf
push
shr
negl
mov
mov
ljmp
push
sbb
adc
call
insb
jecxz
and
jnp
xchg
dec
imul
scas
ljmp
insb
das
mov
pop
and
test
pop
jmp
mov
pop
jle
mov
jle
icebp
jge
jae
pop
sub
cmp
or
adc
lea
pop
sbb
fcmovnb
adc
push
ss
sub
imul
clc
enter
push
jmp
sbb
insb
loope
imulb
xlat
mov
jmp
fisubrs
mov
es
mov
mov
cmp
sbb
sbb
or
jmp
ds
cmp
outsl
fs
push
xchg
std
pop
into
pop
flds
jnp
in
cli
sbb
mov
fbstp
hlt
cmp
repz
xlat
inc
movsl
fidivrl
cmp
push
or
in
cld
mov
xchg
pop
pop
sbb
stc
cmp
cmp
or
push
mov
sti
sub
cmp
cmp
push
xchg
popf
aaa
icebp
mov
and
sar
sub
fidivl
popf
fldt
jb
xlat
pop
stc
test
int3
clc
inc
push
push
fisttps
fimull
data16
clc
out
ljmp
das
pusha
call
ret
mov
add
outsb
add
in
ljmp
imul
lea
popf
sbb
add
and
sub
ret
repnz
bound
pop
pop
cwtl
push
mov
sti
js
xchg
lret
jl
sbb
loop
cwtl
jp
ficomps
test
mov
mov
sbb
or
mov
sub
mov
adc
repnz
jo
add
sbb
pop
sbb
leave
idivb
push
jecxz
lret
scas
stos
pop
pushf
or
mov
and
scas
jmp
fs
test
sub
out
lea
jge
out
mov
lcall
jae
stc
jmp
sub
mov
imul
fldenv
or
pop
stc
insb
stos
cld
sub
xor
push
aaa
testl
jb
outsb
adcb
dec
dec
das
icebp
push
sub
mov
sub
stc
inc
arpl
data16
cwtd
mov
leave
stos
adc
dec
test
inc
outsb
sub
inc
cwtl
or
adc
mov
or
into
add
sbb
pop
rcr
pop
into
stos
jmp
ljmp
pop
scas
dec
jl
dec
sti
subb
and
pop
inc
push
dec
sbbl
mov
cmc
pop
test
fidivl
data16
cli
imull
sti
dec
and
dec
jl
mov
nop
js
adc
sbb
push
fisubrs
mov
jle
sub
orl
pop
sub
sbb
test
push
mov
or
mov
or
dec
mov
mov
dec
xor
mov
mov
inc
leave
fcmovnb
into
jmp
dec
pop
push
sbb
cmp
movsb
push
daa
dec
dec
sub
jp
mov
sar
stc
mov
sbb
jmp
mov
jmp
xchg
sbb
sbb
inc
fiadds
fsubr
push
cmp
xchg
or
push
mov
and
pushf
popa
jmp
lret
in
mov
mov
sub
sti
mov
stc
dec
mov
data16
sbb
js
inc
xlat
jmp
push
mov
fmuls
lret
idivb
idivl
mov
sbb
mov
xchg
xchg
xor
sub
sbb
add
jae
dec
dec
dec
lds
pop
sbb
repnz
jmp
inc
sub
pop
lret
cmp
sub
jne
adc
or
lods
fistpl
inc
xchg
xchg
push
mov
cmp
sub
adc
jae
inc
dec
mov
fs
mov
dec
aas
push
pop
mov
insl
ret
sbb
mov
xlat
dec
or
imul
jl
dec
pop
popf
enter
cli
out
push
inc
cmp
or
pop
jmp
dec
inc
jmp
or
push
mov
dec
ss
enter
fiaddl
dec
aas
or
sbb
push
movsl
dec
mov
addr16
insb
mov
push
out
jl
ds
pop
jge
test
dec
sbb
inc
cmp
sbb
fmuls
mov
inc
in
data16
sbb
shrb
cmpsl
in
push
orb
jmp
inc
mov
dec
sub
int3
mov
int3
xchg
push
inc
or
pop
dec
pop
aaa
mov
sub
jl
stos
add
push
sbb
sbb
sti
xlat
pop
mov
bound
add
jl
fdivs
pop
dec
sbb
cwtl
inc
dec
adc
pop
pop
addr16
xor
sub
sbb
cmp
pop
data16
pop
jp
mov
pusha
das
lret
xor
sub
stc
add
inc
lock
pop
sbb
adc
inc
inc
mov
std
dec
test
jecxz
sbb
enter
mov
arpl
or
fs
out
jecxz
clc
fisubl
test
sti
imul
adc
cli
dec
je
stc
xchg
ffreep
inc
enter
dec
dec
dec
enter
cs
dec
adc
pop
test
mov
and
fbstp
jns
pop
mov
arpl
out
adc
sti
clc
daa
mov
mov
add
call
mov
outsl
out
sti
mov
adc
loope
xlat
cli
adc
ret
xor
popa
icebp
jl
sub
or
sub
sahf
xor
movsl
out
pop
aaa
popa
cmp
inc
push
pop
dec
mov
hlt
pop
in
cwtl
sub
mov
mov
ljmp
fs
mull
gs
in
mov
jecxz
jne
push
jmp
fs
fistps
add
int
movsl
sub
push
fs
inc
mov
lret
jmp
fwait
jmp
cmp
arpl
pop
testl
fisubrl
out
test
sub
pop
clc
sti
subb
sbb
pop
cmp
add
ds
cmp
dec
cld
xor
mov
sbb
or
ljmp
clc
jp
push
cmc
ds
loop
jnp
add
mov
jle
jp
sbb
dec
inc
stc
out
mov
insb
sub
jg
sbb
or
daa
mov
in
jmp
insb
jmp
sbb
jmp
mov
fldt
push
or
js
xchg
or
shlb
mov
out
lcall
addr16
sti
push
sar
push
cmp
dec
stos
sar
fldl
sub
lods
mov
or
pop
fisttps
dec
call
inc
ljmp
cmp
pop
imul
pop
jo
daa
ljmp
jge
xchg
pusha
cmp
arpl
js
or
cmp
leave
push
lret
or
outsl
mov
or
mul
mov
mov
lret
sub
aam
mov
loopne
stos
mov
popa
cmp
leave
fistl
sbb
leave
leave
mov
les
sub
sbb
das
sub
lret
sbb
pop
and
mov
pop
iret
out
sbb
jge
in
jge
sti
sub
jl
pop
mov
popf
add
orb
js
testl
out
pop
sbb
out
or
or
mov
test
fimull
ficoms
sub
push
clc
lret
lcall
ret
xor
mov
mov
pop
mov
mov
ret
jge
push
fimull
mov
sti
sbb
cld
imul
xlat
jecxz
sbb
in
pop
mov
stc
enter
mov
push
das
cwtl
jmp
dec
les
dec
stos
xchg
out
cmp
fstpt
or
and
sbb
sahf
cli
dec
in
daa
movsl
sub
daa
popfw
add
daa
dec
sub
pop
dec
mull
pop
cmp
stos
sbb
sbb
repnz
fsts
mov
adc
das
pop
dec
dec
movsb
mov
sbb
cmp
mov
in
mov
leave
xchg
in
jge
hlt
jle
cmp
fldcw
sbb
iret
push
add
cmp
mov
push
fidivrl
jns
xchg
out
or
jp
rorb
std
or
call
pop
jle
imul
jae
add
ljmp
adc
out
sbb
adc
mov
dec
ljmp
xchg
jl
dec
aas
xchg
jmp
adc
mov
jb
or
add
call
or
dec
inc
sti
push
popf
lods
sub
daa
mov
mov
fwait
cmp
cwtl
cmpw
inc
cli
enter
sub
sub
xor
fistpll
xlat
lcall
enter
mov
pop
sbb
scas
and
sub
out
push
clc
test
mov
adc
into
add
cmp
je
dec
cli
js
xchg
push
fidivrl
pop
xchg
and
cwtl
jl
enter
leave
mov
cmp
inc
dec
mov
lret
jns
mov
and
push
pop
pop
adc
and
js
out
sbb
jp
ds
das
rcrl
and
into
arpl
rcrb
sbb
sbb
mov
inc
push
shrl
push
or
dec
mov
adc
add
or
cli
roll
sbb
andl
dec
test
cwtl
or
inc
push
fs
lods
add
fdivs
adc
pop
rorb
dec
jnp
jecxz
cltd
sti
and
pop
aam
xor
push
mov
jmp
loope
les
pop
out
js
xor
sub
push
mov
cmp
test
jmp
pop
sub
aas
gs
sbb
mov
bswap
push
movsl
or
cli
insb
jle
add
addr16
scas
test
loope
rep
xchg
inc
gs
xor
sub
inc
rcrb
cmp
xlat
bound
jp
insb
mov
cmp
push
ficoml
inc
sub
enter
mov
out
cltd
inc
scas
pushf
cwtl
out
ljmp
out
ljmp
loopne
xchg
or
cmp
pop
pop
push
fimuls
cmp
xchg
xor
fldt
ds
sti
mov
sub
mov
popa
inc
ljmp
ljmp
push
out
mov
inc
fs
fwait
js
mov
out
sub
dec
mov
mov
xorb
imull
jo
and
fidivrs
insl
ss
or
insb
cmp
sbb
sub
pop
insb
cmc
jle
push
cmp
mov
mov
sbb
pop
sub
ret
movsb
cwtl
or
call
sbb
inc
jae
or
jle
jl
xor
fs
jp
sub
inc
xchg
imul
lahf
clc
sub
stc
mov
repz
xchg
or
leave
or
sbb
ljmp
out
into
jne
inc
into
fldl2e
sti
sub
jge
mov
dec
pop
pop
push
aam
fdivs
popf
sbbb
dec
js
cli
or
inc
jmp
imul
or
ljmp
add
lds
pop
pop
pop
lcall
dec
jae
and
push
in
dec
dec
push
cmp
cmp
fsubrp
pop
jecxz
sbb
testb
bound
ljmp
sbb
pop
popf
cmp
sub
into
push
xchg
xlat
fisubrs
lret
cmpsl
pop
aad
jbe
dec
insb
rorb
xchg
test
int3
push
push
push
ljmp
out
or
pop
dec
stos
cwtl
insb
sbb
ljmp
and
and
fnstcw
lret
movsl
inc
js
sub
add
mov
stc
pop
pop
cli
sub
int
add
sti
pop
pop
mov
jmp
insb
xchg
cli
pushf
stos
or
out
cld
pop
add
mov
mov
push
decb
sbb
dec
or
cmp
cltd
xlat
test
out
jnp
or
testl
push
lock
aam
daa
imulb
xchg
inc
inc
fadds
cmpsb
mov
cmc
arpl
sbb
or
jne
push
pop
push
pop
js
imul
dec
es
mov
push
dec
and
sbb
adc
dec
push
pusha
dec
leave
stos
pop
scas
xlat
data16
fucomi
test
xchg
fsubrp
sbb
lds
mov
mov
out
cli
and
mov
in
fs
inc
mov
cmp
inc
pop
cmp
push
addr16
imul
insb
jecxz
mov
mov
ss
inc
sbb
out
dec
push
mov
push
mov
enter
mov
inc
and
dec
ficoms
or
and
lods
cmp
jge
test
mov
fisubrl
bound
jp
stc
cmpsb
loop
mov
cmp
js
mov
jo
sahf
test
movsl
or
cmp
jnp
jmp
push
mov
cmpsb
scas
enter
movsl
mov
or
or
sub
jg
cmp
mov
cmp
gs
insb
lea
cmp
into
cli
stc
sbb
lret
cmp
jmp
in
mov
inc
fs
fs
rol
inc
adc
cltd
cmpsl
iret
lods
ds
scas
mov
push
lods
lcall
adc
mov
push
pop
mov
sbb
jp
push
add
out
js
cmp
sub
mov
testl
incb
out
push
xlat
dec
jmp
and
push
jmp
test
jnp
das
sub
clc
cmp
jb
jmp
ja
ljmp
cmp
pop
push
cmp
jae
hlt
cmp
mov
push
dec
pusha
lcall
jecxz
sub
inc
dec
mov
lcall
out
jmp
mov
stos
mov
jmp
or
lds
sbb
push
and
pop
imul
stos
iret
cmp
cs
pop
sti
jp
fwait
push
lock
pop
push
jmp
mov
pop
mov
xlat
cli
cmp
lret
adc
dec
cs
xlat
mov
dec
sbb
push
xor
mov
nop
add
stc
push
add
lds
sbb
mov
jge
add
or
mov
xor
sbb
dec
out
shll
int
dec
sub
pop
sub
push
sub
in
fldl
xchg
popf
add
lret
sub
iret
dec
sti
sti
or
out
arpl
das
adc
ljmp
sub
cmp
pop
dec
jle
cmp
mov
ror
subl
cmp
mov
or
insb
mov
pop
sub
lods
sbb
iret
xchg
push
mov
sub
popa
mov
lods
jmp
sar
push
movsb
cmp
add
test
xor
or
mull
in
mov
xchg
stc
sub
adc
mov
sbb
mov
sbb
dec
lods
iret
fucomp
out
pop
xor
sub
lods
enter
or
jmp
dec
clc
sbb
mov
es
mov
in
shrb
das
stos
jp
mov
sbb
js
pop
dec
sub
test
sub
std
xlat
pop
shll
negl
cmp
xor
sub
test
pop
jg
scas
lret
lds
sbb
pop
push
jmp
jge
in
inc
sbb
mov
sub
pusha
clc
repz
rclb
mov
cli
nop
cmp
pusha
cmp
dec
sbb
sub
je
dec
scas
pusha
enter
in
or
fsubs
in
ljmp
stc
mov
les
xor
roll
sub
push
sub
loopne
sub
cmp
call
popa
cwtl
cmp
dec
push
in
sarb
pop
jns
push
mov
sarb
mov
enter
cmp
dec
sti
std
adc
push
ljmp
inc
pop
mov
pop
jecxz
data16
mov
lods
mov
imul
leave
sbb
mov
dec
stc
ds
jge
jg
cmp
cmp
adc
or
dec
inc
lods
or
sub
jmp
std
out
orl
mov
cwtl
cmp
lods
dec
stos
call
inc
xlat
inc
fdivrl
sbbl
adc
dec
or
mov
sub
out
stos
cli
popaw
aaa
xor
xlat
pop
cmp
dec
push
js
adc
add
out
jmp
push
orb
stos
lahf
fldt
cmp
lds
dec
jmp
sbb
repz
sub
ficompl
fdivs
stos
movsb
and
pusha
dec
cltd
dec
inc
fimuls
cli
dec
push
call
or
pop
xchg
test
sbb
int
pop
aaa
mov
fsubs
ret
decb
call
sbb
fcmovb
data16
cmp
lods
sbb
sub
movsb
jl
insb
imul
mov
jle
sub
leave
jmp
cmp
sub
fs
clc
lret
cmc
ljmp
or
or
fisubrl
cltd
sub
mov
ss
std
pop
sbb
mov
sbb
ret
pop
int3
inc
jge
cmp
cmp
lcall
sbb
mov
xor
push
cmp
ret
mov
js
sbb
sub
ja
daa
or
testl
jl
dec
push
mov
dec
sahf
sub
fsts
pop
jp
push
rclb
imul
fldcw
lret
mov
or
mov
sbb
lret
jle
cwtl
test
adc
cmp
pop
xor
popa
pop
cli
sub
stc
leave
jmp
xor
dec
cmp
mov
mov
into
pop
and
rcr
jl
ljmp
pop
dec
cli
jb
cmp
mov
dec
xlat
cmp
movsl
cmp
ds
mov
push
xor
add
aas
mov
sub
or
push
adc
pop
xor
jno
mov
mov
or
mov
jo
fidivrl
mov
pop
dec
arpl
fnstcw
jnp
sbb
push
sbb
pop
cli
orb
es
inc
stos
mov
xchg
leave
cwtl
movsl
mov
movsl
test
movsl
enter
rcl
movsl
outsb
sub
leave
xor
movsl
enter
lds
xor
movsl
ret
data16
movsl
jne
and
add
lds
dec
jns
loopne
enter
or
rolb
clc
or
jne
mov
scas
jecxz
imul
or
mov
je
mov
in
sub
jmp
jl
in
mov
jmp
sub
mov
dec
scas
dec
or
idivl
dec
out
outsl
pop
sti
clc
fdivrs
cwtl
popa
dec
dec
js
leave
fistpl
enter
stc
cmp
dec
or
leave
or
js
fsubrs
dec
xchg
mov
enter
movsl
sbb
push
lret
or
sbb
stc
out
test
mov
sbbl
cmp
out
flds
leave
push
dec
pop
add
mov
dec
cltd
pop
xchg
mov
std
lret
iret
scas
rol
data16
add
test
ss
jmp
sbb
sub
pop
xlat
gs
insb
dec
dec
pop
leave
fisubrl
lcall
or
stc
fistpl
sti
mov
mov
jl
movsl
mov
mov
enter
cmpsl
clc
sbb
jmp
out
jnp
sub
data16
sti
and
push
js
mov
popa
stc
mov
xchg
sub
daa
or
sub
xchg
insb
jns
fstpt
outsb
clc
cmp
insb
test
cmp
pop
aaa
sub
or
inc
cmp
add
clc
cmpsb
call
sbb
mov
cmp
inc
cmp
xchg
sbb
push
fnstcw
movsl
dec
fnsave
outsb
sub
movsb
pop
sbb
push
jg
and
and
sub
out
add
add
push
cmp
push
fildl
call
in
xchg
fisttpl
jo
imul
push
add
stc
dec
inc
call
dec
push
pmovmskb
jmp
clc
mov
push
mov
ret
lcall
sub
sub
call
sbb
jmp
dec
pop
fstl
jne
push
cmp
xlat
pop
pop
push
sahf
rcrb
test
or
imulb
sbb
inc
xchg
mov
insb
dec
sub
sub
dec
cli
pop
jmp
mov
test
push
sub
sub
sbb
je
in
std
cmp
out
sbb
mov
jmp
cmp
out
ljmp
into
cwtl
mov
dec
fmuls
mov
dec
loopne
iret
mov
sti
sahf
popa
dec
pop
cmp
cs
fiaddl
cld
sbb
fwait
sbb
mov
xor
push
enter
jnp
scas
mov
xor
aam
jp
xor
sub
mov
mov
or
test
mov
or
push
movsl
mov
jp
cwtl
int3
pusha
test
stos
pop
es
fcmovbe
xor
dec
cmp
outsl
clc
js
pop
fstps
mov
inc
pop
cmp
sub
sti
dec
push
lcall
hlt
movsb
and
or
leave
stos
sub
jo
jmp
sbb
lods
sub
xchg
movsl
mov
rcrl
jbe
and
bnd
sbb
xorps
jmp
push
sbb
mov
jp
cmp
sub
pop
cmp
adc
scas
cmp
dec
leave
sub
mov
ljmp
ljmp
push
in
sub
cmp
lret
mov
orl
in
js
sbb
or
ljmp
lcall
popf
shl
call
pop
es
or
dec
jl
pop
fisubrl
leave
out
or
call
scas
test
daa
ret
sub
pop
scas
or
mov
dec
inc
push
in
mov
test
into
cmp
ret
push
out
pop
mov
notl
test
hlt
insb
call
add
lret
imul
insl
jb
lret
cwtl
cmp
sub
sbb
jns
cli
mov
inc
out
sub
mov
mov
out
add
stos
dec
gs
ficoml
dec
cmp
lahf
aam
scas
das
or
jg
iret
pop
cld
mov
sbb
pusha
out
xor
or
sbb
popa
mov
mov
adc
cmp
push
ljmp
and
mov
mov
lcall
pop
sub
sub
pop
xor
rcrl
jne
jl
and
movsl
leave
add
jae
bound
movsl
or
sbb
ret
fucomi
fsubs
or
sbb
mov
imul
lcall
mov
dec
sub
push
mov
lret
or
sbb
push
icebp
jae
sub
mov
enter
lahf
mov
movsl
aam
inc
das
xor
push
jp
cmp
pop
loop
fsubs
in
xor
insb
dec
leave
sbb
cli
push
ret
loop
mov
cmp
or
jmp
dec
popf
xlat
jp
or
fstpt
pop
dec
lods
push
into
cmp
pop
ds
mov
insl
sub
mov
cmp
or
sbb
fnstcw
test
jle
mov
fistpl
imul
insb
and
jmp
mov
pop
cs
addr16
or
and
movsb
mov
loop
lret
mov
loop
sbb
fiaddl
mov
adc
ja
test
sti
leave
pop
aad
sub
inc
das
mov
and
pushf
in
adc
dec
out
out
lods
and
jmp
loopne
pop
sbb
das
call
lods
pop
call
cmp
dec
or
nop
jmp
in
and
fnsave
pop
jmp
mov
cmp
jle
jp
inc
insb
fdivrp
or
xor
loopne
mov
jmp
imul
insb
push
xlat
fcmovb
jmp
cmp
orl
icebp
daa
xchg
pop
dec
sub
pop
mov
imul
pop
cmpsl
jl
mov
std
cli
addr16
test
jmp
cli
add
cmp
pop
outsb
sub
inc
out
out
test
call
or
mov
pop
xchg
js
push
cli
inc
stc
sub
leave
sub
out
xor
xchg
addb
push
dec
cmp
inc
add
mov
dec
sar
test
mov
dec
lods
push
lods
js
adc
dec
out
push
pop
insb
call
xlat
inc
adc
int
cwtl
jp
movsl
lods
adc
dec
cmp
repz
dec
dec
mov
cmp
xor
push
inc
or
dec
pop
sub
mov
jmp
or
sbb
icebp
jae
pushf
pop
mov
std
iret
dec
cmp
lret
pushf
adc
aaa
movsb
test
ss
dec
inc
sub
scas
xchg
arpl
lcall
mov
and
fwait
pop
scas
cld
sub
mov
in
push
or
fcmovnbe
dec
sti
sub
cli
repnz
dec
movsl
call
ficoms
mov
sbb
in
sub
xchg
stos
or
jmp
jae
pop
push
sub
adc
aad
xlat
sub
mov
mov
pop
fisttpl
pop
add
push
cs
sti
mov
push
cli
or
fiaddl
xor
fildll
sub
inc
push
inc
xor
test
dec
xor
sub
jae
loopne
mov
lret
pop
dec
inc
cmp
sbb
pop
leave
les
mov
mov
xorb
fisubrs
in
mull
ficoms
daa
jnp
popf
fs
test
push
movsl
xor
mov
leave
sbb
imul
or
sbb
inc
or
pop
sub
push
movsl
xchg
ret
adc
push
sbb
lret
imul
jl
clc
loope
sub
mov
negb
cmp
xor
lahf
inc
pop
sbb
inc
xlat
sbb
cmp
scas
cmp
or
test
xchg
jg
insb
js
addr16
lcall
cmp
popf
or
js
adc
mov
pop
adc
adc
sahf
cmp
pop
sahf
sbb
push
scas
mov
mov
int3
leave
insb
movsl
dec
or
mov
add
pop
cmp
mov
test
pusha
xor
jmp
fsub
cmp
shlb
or
sbb
jmp
xchg
das
push
scas
stos
pop
mov
dec
jg
test
mull
push
pop
dec
jmp
sbb
pop
gs
pop
into
or
or
sub
sbb
fcmovnbe
mov
sub
mov
lock
pop
xor
inc
dec
arpl
dec
cmp
pop
jl
sbb
test
ljmp
in
lcall
sbb
and
shl
or
out
stos
sub
lods
sti
sbb
sti
or
pop
enter
dec
dec
fldcw
jl
outsl
pop
ljmp
stos
cmp
dec
pop
sub
or
stos
fstpt
dec
out
mov
fcmove
sub
stos
or
push
stc
mov
sub
push
sti
mov
sbb
lods
loopne
jmp
fcmovb
ret
fisttps
mov
or
lcall
pop
xchg
dec
mov
daa
sub
fsubr
dec
pop
push
insb
jne
jecxz
out
clc
jp
dec
call
sub
movsl
repz
in
sar
das
cmp
jg
in
stos
cmp
stc
popa
cmp
dec
ljmp
movsl
dec
mov
mov
xor
inc
inc
dec
or
dec
cmp
cmp
sub
cmp
jnp
in
lret
pop
loopne
mov
jmp
and
sbb
lcall
enter
sti
dec
dec
insb
sbb
lds
sub
mov
or
ret
mov
int
leave
jp
or
jecxz
mov
dec
loop
js
adc
xchg
pop
dec
imul
outsl
stc
dec
jp
dec
sub
movsl
mov
and
and
in
and
xlat
sub
cwtl
cmc
fcmovnu
into
lods
stc
dec
in
mov
xchg
sub
push
sbb
movsl
sti
dec
push
inc
icebp
xchg
scas
dec
enter
test
cmp
std
sub
jge
inc
push
popa
pop
mov
fcoms
or
lods
sub
sub
push
cmpb
add
or
xlat
cmp
int
movsl
gs
pop
xchg
push
or
lret
dec
call
xchg
mov
mov
sub
jl
movsl
fstpl
fisubl
mul
push
cmp
fdivs
iret
sub
or
jmp
pop
dec
clc
mov
cmp
icebp
stos
int3
or
mov
in
fbstp
mov
ret
mov
pop
cmpsb
test
ror
jae
dec
jmp
clc
adc
cmp
icebp
cmp
xor
ret
pop
fadds
cwtl
jbe
out
pop
clc
stc
xor
js
sbb
cmp
jmp
sbb
mov
add
popf
stc
sub
lea
dec
jns
das
insl
ljmp
push
and
shl
mov
mov
iret
jmp
ljmp
jo
mov
fisttpl
bound
xlat
or
js
jo
ret
and
inc
clc
add
and
lock
inc
das
mov
cmpsl
mov
jbe
js
pop
daa
xor
dec
fwait
outsb
sbb
push
mov
xchg
cmp
or
sbb
stc
mov
test
mov
jne
mov
mov
int3
sti
mov
clc
cltd
fcmovne
call
popf
pop
loopne
mov
jnp
lcall
dec
ljmp
pop
ficomps
dec
in
jle
lret
or
divl
dec
fdivrs
pop
dec
sub
cmp
inc
cmp
adc
dec
lret
push
or
pop
cmp
pop
xchg
push
push
dec
sub
out
or
sbb
movsl
adc
sbb
mov
lret
in
ljmp
fld
jmp
inc
jo
inc
xchg
or
or
call
lods
fs
pop
mov
enter
adcl
sub
mov
or
lcall
push
fistpll
es
push
imul
fimull
and
dec
add
push
or
xor
stos
movsl
inc
and
ret
mov
pop
or
out
pop
outsb
clc
mov
shrl
add
std
or
lcall
or
jns
mov
fcmovnb
dec
rcrb
cmp
cmp
pop
stc
push
xor
imul
sbb
loope
stos
sub
push
sub
fldenv
test
loopne
aam
lcall
mov
dec
aam
xchg
sub
pop
movsb
and
add
mov
test
sarb
jp
js
orb
sub
inc
lods
jecxz
xchg
push
push
push
mov
or
out
and
scas
or
xlat
cmp
mov
lods
fmulp
ljmp
imul
lret
push
or
xchg
loope
data16
sbb
push
sub
testl
sbb
mov
mov
clc
pop
orb
cmp
ds
push
cwtl
dec
cmp
dec
addr16
out
mov
std
gs
subb
sbb
lret
aad
fxch
stos
lret
arpl
cmp
mov
test
dec
push
fistl
sbb
sarb
sbb
adc
sahf
lds
pop
cmp
inc
sbb
testl
mov
sbb
push
popa
sbb
mov
pop
int
xchg
fisttpl
jmp
push
stos
das
loopne
dec
jp
dec
imull
xor
aas
aas
mov
sbb
sbb
push
or
insb
mov
push
pop
mov
or
jnp
add
dec
insb
in
data16
call
push
cmp
sbb
or
pop
mov
lret
ds
cmp
leave
mov
mov
cmp
push
nop
inc
ljmp
cmp
std
pop
sbb
mov
cmp
sub
jnp
sub
addr16
clc
or
dec
shr
mull
stos
cwtl
mov
pop
fidivrl
xlat
sub
notl
popl
pop
jge
push
sub
mov
ljmp
cmp
sub
repnz
sbb
push
sbb
inc
jnp
lock
cli
cmp
mov
push
push
xlat
jmp
clc
or
sbb
ds
jae
mov
popf
call
icebp
xchg
mov
leave
pop
jne
sbb
or
lds
lock
testb
dec
pop
xchg
outsb
and
fcmovu
pop
sbb
sbb
dec
xchg
insb
push
idivb
push
or
cmp
push
fimull
ljmp
sbb
xor
shrb
enter
cltd
mov
cmp
pop
inc
call
clc
test
arpl
pop
sbb
or
lods
idivl
das
push
pop
sbb
aaa
or
jg
lret
mov
lcall
push
aas
jl
mov
fldenv
fwait
pop
sub
push
dec
ljmp
test
jmp
or
sbb
sti
sbb
mov
mov
cli
cmp
cmpsb
pop
mov
leave
lea
xlat
mov
push
mov
or
jp
mov
sub
ja
adc
sbb
sub
push
popf
cmp
sbb
mov
add
sti
sub
fsubrp
or
adcl
sbb
sti
adc
sarl
mov
or
fldenv
mov
sub
sti
or
popa
popf
out
add
gs
or
pop
cmp
xor
addr16
fstps
jl
popa
je
sbb
xchg
stos
adc
adc
or
jle
push
or
sti
and
and
cmp
sbb
xor
testb
hlt
push
fmuls
mov
pop
arpl
out
ret
jge
mov
js
cli
xlat
xchg
gs
in
lods
idiv
adc
or
in
in
dec
fmul
sub
test
mov
pop
push
push
lret
dec
loopne
dec
sub
dec
flds
pop
out
add
mov
cmp
xor
jmp
pop
fistpll
enter
xor
pop
xchg
inc
mov
mov
pusha
pop
ficompl
cwtl
xlat
pop
sub
inc
ret
mov
dec
test
jmp
push
sahf
jmp
or
pop
mov
dec
push
dec
lret
cwtl
mov
mov
fstps
leave
addr16
fimull
clc
mov
mov
mov
xor
or
inc
and
icebp
into
aaa
nop
push
dec
mov
xor
dec
pop
sbb
repz
iret
out
inc
lahf
push
push
gs
or
pop
cs
leave
sbb
mov
insb
pop
sti
es
xchg
mov
fs
pushf
ljmp
stc
mov
dec
push
adc
xchg
xor
repz
fnstenv
aas
loop
dec
popa
ljmp
sub
mov
mov
dec
cli
cmp
sub
stc
fidivrs
fisubs
or
push
push
cmp
dec
in
pop
or
mov
pop
jo
mov
jmp
cwtl
sub
sub
scas
test
bound
les
cs
jp
fs
call
inc
xchg
xlat
inc
mov
jne
sbb
or
insb
pop
in
sub
repz
push
xchg
scas
cltd
mov
cmp
add
xor
and
adc
sub
mov
aas
shrl
fldcw
pop
adc
pusha
xor
fstpl
jmp
mov
ret
mov
xchg
enter
jp
push
aaa
sbb
dec
clc
or
popf
dec
pop
sub
jp
cmp
pop
cmp
sub
clc
jp
dec
outsb
jge
jne
sbb
jle
imul
pop
sub
pop
and
test
cmp
out
sbb
sbb
push
add
xchg
out
mov
push
dec
pop
clc
lods
pop
ljmp
fwait
call
sbb
shrb
sbb
pop
pop
ljmp
insl
nop
dec
or
cmp
jnp
lds
cwtl
fs
push
mov
ljmp
mov
dec
dec
insl
in
fs
fistpl
jmp
stos
decb
mov
or
push
xchg
nop
or
sahf
stc
mov
sub
cli
xor
mul
dec
stos
enter
jp
dec
sbb
je
test
pop
xchg
inc
mov
scas
testb
rclb
dec
out
pop
mov
imul
stos
mov
mov
fs
inc
inc
imul
mov
mov
pop
mov
andb
sub
nop
push
jp
mov
dec
mov
jg
test
ficomps
mov
mov
cmp
sub
cmp
insb
push
stos
sub
mov
push
jb
or
test
mov
dec
mov
adc
repnz
sub
jne
rcrb
jmp
ror
sub
test
jl
js
dec
pop
xchg
jmp
push
or
cwtl
cmp
call
lds
sub
outsl
add
jmp
sbb
js
imul
xor
imul
jl
xchg
jmp
pop
mov
dec
dec
xchg
int3
sub
sub
cli
fsubr
mov
lods
insb
outsl
lods
lret
pop
xchg
stos
stc
aad
imul
mov
mov
lret
loope
fwait
pop
add
jnp
sti
xchg
or
sub
imull
adc
sub
sub
inc
andl
pop
stos
cmp
mov
fs
fwait
fwait
sub
dec
leave
or
inc
adc
pop
pop
loope
dec
or
ficoml
sub
pop
jne
fisttpl
sbb
mov
ljmp
pop
sbb
mov
xor
xor
push
cmp
insb
adc
or
cmp
aas
in
sbb
adc
jns
in
addr16
test
cmp
jl
lret
dec
decl
jg
mov
sub
and
arpl
mov
cmpsl
pop
dec
sti
dec
mov
lock
pop
js
ds
lret
dec
push
sbb
cmp
fmuls
or
movsb
jl
into
divl
dec
ficoml
js
fs
sub
fsubr
scas
lret
das
dec
sbb
xor
dec
mov
stos
pop
fistpl
repnz
imul
imul
test
or
cmp
test
lcall
iret
jle
dec
lea
int3
ret
jle
cmp
mov
lods
push
mov
jmp
outsl
rorb
sub
enter
jp
dec
dec
in
dec
sbb
pop
cmp
imul
mov
test
aas
cmp
sub
dec
pop
cmp
jl
pop
test
and
fdivrs
ss
sbb
xchg
std
inc
out
cli
dec
push
fisubs
pop
je
notb
inc
lds
jge
and
addl
or
dec
xchg
scas
sub
cmp
sbb
fcmove
dec
cmp
or
addr16
push
out
out
sbb
outsl
out
mov
or
clc
out
mov
mov
ret
insl
pop
fidivrl
dec
xchg
rclb
icebp
and
movsb
push
shrl
jbe
sub
pop
lret
js
je
dec
or
stos
pop
cmpsl
push
xlat
push
cmpsl
jp
je
add
dec
pop
jb
dec
mov
or
cmpsl
ds
sub
lods
fs
shr
scas
sbb
in
sub
and
test
or
neg
fyl2xp1
pop
mov
adc
inc
cmp
dec
mov
cmp
mov
xchg
and
xlat
fimull
movsl
push
lret
cli
push
idivl
dec
dec
and
nop
sbbb
pop
data16
sbb
lods
in
or
pop
or
insl
lcall
push
dec
pop
inc
pop
gs
sub
add
clc
sbb
push
ljmp
pop
jmp
sub
fidivl
sub
stos
loop
mov
pop
jnp
sub
sub
add
jle
idivl
mov
daa
dec
inc
or
in
pcmpgtd
out
leave
stos
cmp
out
loope
push
test
sub
or
xor
lock
pop
pop
insb
pop
and
ja
dec
jmp
iret
movb
fucomp
mov
lock
in
rclb
dec
ret
stos
xor
push
push
cwtl
push
movsl
js
mov
outsl
jmp
or
sbb
jmp
stos
add
inc
or
xor
sub
sub
in
mov
jecxz
dec
cmp
pop
mov
pop
sarl
sub
lea
test
fsubr
or
fisubrl
subl
jl
in
imul
fs
mov
mov
sub
pop
mov
mov
cmp
jns
popa
fnstcw
mov
leave
cmp
mov
lock
test
imull
movsl
std
sahf
push
jge
imul
sbb
js
fistpl
test
pusha
pop
xchg
dec
fbstp
cmp
ljmp
sub
lcall
cmp
arpl
fs
pop
xchg
add
dec
sbb
out
mov
xlat
lea
sub
sbb
mov
fldt
xlat
ljmp
data16
mov
sbb
mov
out
sub
sti
mov
push
lods
sbb
cmpl
sbb
mov
or
jl
ds
cmp
leave
dec
dec
jnp
out
stos
sub
jmp
insb
mov
sbb
push
jl
fwait
sub
dec
ret
sahf
out
ret
pop
out
jge
loopne
dec
jmp
and
or
mov
push
cmp
mov
popa
sarb
cmp
ljmp
dec
fcomps
xchg
jl
insl
fildll
fs
out
subb
adc
pop
push
sub
cmp
popf
mulb
sbb
sahf
das
xlat
mov
ljmp
lcall
ficoml
enter
sti
mov
jnp
pop
mov
mov
fs
test
stc
fsubrp
cmp
jle
mov
out
mov
mov
out
push
in
push
and
pop
inc
or
sti
or
out
sub
lcall
sub
mov
push
mov
sti
pop
ds
push
jae
jb
fmuls
dec
cs
out
push
sbb
xor
ljmp
push
loopne
in
dec
or
fs
mov
jmp
fcmovnb
out
jns
add
fdivp
stos
mov
pop
push
dec
notb
cmpsb
test
into
cmp
mov
dec
push
mov
jl
ja
fisttpl
lret
xor
popa
mov
js
ljmp
inc
fistpl
sub
jp
jns
dec
xchg
leave
sub
imul
xchg
jae
sbb
subb
cmp
psubq
lret
lods
or
out
stos
sbb
sub
cmp
pop
sahf
or
mov
jo
sbb
jl
jmp
clc
cmp
popa
sbb
sub
fstps
cmp
mov
stc
fimuls
pop
sti
pop
push
ficomps
leave
fsubrs
fnstcw
push
mov
in
adc
sbb
leave
mov
push
or
pop
pop
pop
insl
sti
lcall
ds
aaa
mov
adc
mov
test
dec
sbb
test
clc
cmpsl
fcoms
cs
je
or
dec
cmp
sub
mov
cld
cli
sub
jg
out
push
pop
popf
adc
sbb
fidivs
leave
jle
das
or
sbb
jbe
subb
jmp
mov
sbb
xchg
jmp
xlat
dec
imul
sbb
dec
mov
push
or
pop
jne
pop
sti
rolb
movsb
mov
cli
or
jmp
sub
push
pop
mov
jp
inc
adc
daa
adc
aaa
adc
sbb
iret
sub
stc
mov
inc
test
dec
imul
sub
es
mov
popf
dec
jne
bswap
ljmp
adc
test
dec
movsb
vmptrst
jmp
or
mov
pop
stos
sbb
int
or
setns
push
sub
sbb
fisttpll
dec
repnz
cli
push
lcall
xchg
test
sub
mov
leave
sub
fwait
pop
sub
sti
fnstcw
ljmp
pop
sub
sbb
pop
mov
inc
cmp
add
mov
mov
xchg
sahf
data16
testl
clc
or
sub
rcrb
jne
dec
iret
adc
mov
or
bound
idivl
sbb
xor
jno
enter
scas
popf
shl
imul
jmp
sub
xor
push
ljmp
mov
jmp
sbb
int
in
push
out
iret
arpl
or
hlt
jg
fxch
fimuls
dec
mov
lods
js
jp
push
stc
outsl
clc
xlat
sti
sub
fstps
mov
arpl
pop
cmp
sub
xlat
insb
call
mov
gs
shl
scas
pop
or
leave
sbb
push
mov
ljmp
jmp
fmul
pop
jnp
jp
test
mov
sub
loope
lods
sub
sub
ds
mov
xchg
or
stos
arpl
xlat
in
cs
sub
mov
cmp
daa
jg,pt
jge
rol
xor
pop
xchg
cs
xlat
push
jnp
jmp
insb
cmp
adc
pop
cmp
cmp
test
dec
js
cmc
sbb
jp
ljmp
dec
enter
pop
push
sub
push
dec
in
mov
cwtl
mov
inc
test
clc
mov
push
sti
ud0
mov
fcmovnu
xchg
dec
mov
enter
mov
fcmovnu
sbb
xor
or
lock
mov
shlb
stos
ret
sbb
daa
lds
sti
lret
shrb
cwtl
xchg
sub
addr16
or
mov
xlat
mul
add
les
push
push
int3
inc
jge
cmp
mov
popf
popf
sbb
push
in
lret
mov
xchg
fmuls
sti
ds
popf
sub
imul
imull
cmp
lods
dec
jnp
inc
jecxz
js
in
js
mov
test
lcall
or
pusha
pminsw
mov
jmp
xchg
lret
or
mov
ja
dec
enter
add
or
fsubs
sbb
dec
sbb
push
ror
fmuls
or
cli
sbb
clc
dec
cmp
mov
or
fnstcw
xor
dec
mov
pusha
outsb
ljmp
idivl
mov
jle
jmp
lret
lea
lret
cmp
mov
out
dec
insl
and
mov
xor
sbb
dec
sub
sbb
addr16
adcb
push
aad
imul
cmp
sub
movsl
jmp
loop
or
push
lods
sbb
adc
leave
enter
inc
ret
loope
in
jge
pop
lret
popf
and
cmp
mov
sti
ss
push
sub
addr16
cmp
add
push
flds
cmp
push
insl
or
mov
pop
or
sub
or
or
pop
ljmp
lea
push
stos
ficomps
mov
mul
fstpt
mov
push
repz
mov
jne
negl
data16
movsl
jl
stos
inc
daa
jae
stos
hlt
push
pop
inc
enter
sub
call
inc
inc
test
push
jp
gs
outsl
inc
pop
stos
sub
jno
sub
or
js
inc
sbb
movntq
or
xor
mov
or
dec
push
fidivs
mov
test
nop
dec
push
fs
mov
sbb
jnp
out
fidivs
test
mov
das
sub
call
sub
out
inc
cmp
pop
testl
idivl
pop
hlt
jnp
stos
clc
or
enter
sub
mov
adc
xchg
mov
dec
dec
mov
sbb
sub
push
mov
cmp
clc
mov
dec
sub
push
pop
arpl
mov
repnz
sub
fsubrs
or
mov
cli
ja
mov
pop
cltd
insl
outsl
jl
repnz
fwait
imul
or
or
decb
lret
outsb
xchg
cld
pop
clc
lds
pop
outsb
jmp
and
jl
or
jmp
mov
jo
pop
out
pop
cli
out
sbb
dec
insb
pop
pop
imul
or
inc
mov
pop
or
push
ljmp
movsl
pop
js
dec
xor
outsl
ret
cwtl
sti
pop
xlat
jmp
into
das
or
mov
dec
jnp
jae
push
das
cmp
pop
inc
loopne
xor
pop
mov
pop
mov
xchg
jmp
mov
test
mov
popl
stc
mov
rcrb
sub
cmp
cli
lea
pop
in
data16
jmp
leave
gs
jl
mov
sub
jmp
stos
pop
adc
mov
mov
imul
mov
push
pop
xlat
sub
mov
dec
pop
pop
mov
sub
data16
sbb
loop
js
fcoml
add
test
stos
or
out
testl
or
cmp
mov
fcompl
pop
stc
ss
xchg
mov
push
push
pop
sub
enter
and
xlat
dec
or
fisubl
lret
push
pushf
insl
push
pop
sub
fstps
adc
call
mov
nop
push
sub
lret
jne
loope
jns
xchg
and
pop
iret
pop
sub
cmp
nop
orb
sti
popf
loop
and
cmc
sub
sbb
ljmp
sub
inc
sub
call
jl
xlat
lcall
mov
fld
mov
loop
movsl
sbb
pop
dec
ljmp
dec
loopne
lcall
repnz
xor
sub
or
std
cwtl
pop
js
dec
jp
dec
sub
xchg
or
mov
std
jno
lea
sbb
or
ds
sbb
test
pusha
sub
lock
sbb
clc
cld
sub
aam
cmp
sbb
call
notl
pusha
fidivrl
push
and
xor
dec
lahf
jl
jb
push
jae
mov
dec
mov
dec
fcmove
insl
fs
cmp
jmp
jp
repnz
jl
imul
ror
cmp
mov
jge
add
imul
cs
cmp
clc
sbb
pop
push
mov
lcall
sti
add
inc
subl
pop
or
mov
dec
xor
or
dec
cli
cwtl
fsubrs
lahf
mov
mov
ficompl
sbb
ljmp
fs
int
cmpsb
popa
movsl
mov
sub
ds
lods
mov
sbb
jge
std
dec
jge
orl
cmp
or
lahf
pop
push
or
cmp
pop
cli
sbb
ss
fiadds
out
bnd
shll
loope
sti
and
in
fsub
lods
faddl
ljmp
pop
popa
dec
jne,pn
or
rorb
mov
in
push
ljmp
pop
mov
cmp
jp
pop
push
negl
inc
loope
push
ret
lcall
mov
mov
cli
xlat
jmp
fcomps
xchg
cmp
clc
or
lret
sub
mov
leave
ficomps
jp
pop
mov
sub
nop
push
add
cmp
and
das
add
pop
addr16
xchg
dec
cmp
mulb
insl
xchg
jmp
clc
aam
stos
mov
mov
ds
ds
adc
stos
neg
sti
out
lcall
jmp
adc
adc
or
cmp
or
ja
or
dec
enter
scas
or
sub
call
sti
neg
sbb
leave
stos
mov
lahf
mov
daa
cli
aam
das
dec
jmp
or
mov
cmp
paddsb
jl
jecxz
andb
or
movsl
aas
sti
cwtl
stos
sub
and
cmp
pop
mov
test
monitorx
pop
imul
or
imul
jo
or
push
movsb
mov
mov
into
into
sub
or
pop
shrl
arpl
mov
leave
mov
loope
shr
arpl
cli
mov
mov
push
mov
adc
dec
push
xor
dec
sub
clc
stos
sub
sub
pop
jne
pop
or
testb
clc
and
and
pop
stos
out
cmpsl
ljmp
inc
lods
fidivrl
lods
or
pop
jge
fwait
or
jge
jmp
rorb
loope
leave
or
je
xor
loop
cmp
js
fisubl
xor
push
xor
arpl
mov
out
das
call
dec
ja
mov
or
push
sbb
or
mul
jge
dec
xlat
pop
add
gs
cwtl
fisubrl
cmpl
leavew
sbb
cmp
stc
jle
dec
pop
sub
fidivrl
ljmp
jp
push
ljmp
enter
or
push
or
jnp
mov
cli
mov
test
addr16
mov
mov
fimull
outsl
push
jmp
sbb
insb
in
push
dec
pop
add
push
sub
xchg
das
bound
jnp
cmpsl
repz
sbb
adc
sbb
cmp
ds
xor
loopne
mov
pusha
sub
sub
adc
insl
bound
test
sbb
ficompl
cld
sub
fmulp
lret
fisubrl
pop
or
das
clc
mov
mov
cmp
fldt
inc
ret
cwtl
stc
scas
ljmp
insl
sbb
sti
sbb
bound
dec
cli
jl
decl
stos
dec
stos
jge
gs
sbb
scas
cwtl
sub
sbb
jmp
addl
sub
jne
in
adc
sbb
adc
mov
fnstenv
mov
sub
or
inc
jmp
cmp
test
leave
sub
in
fstps
sti
sbbl
jmp
xchg
pop
lock
mov
adc
out
aad
jmp
and
stc
fsubr
sbb
imul
mov
lret
dec
mov
dec
loopne
dec
or
fstpt
cld
pop
jecxz
sbb
sub
rcrb
or
in
shl
ds
mov
push
in
pop
sar
sub
push
mov
cmp
insb
pop
out
sub
mov
jle
dec
fcompp
ficoms
jbe
dec
sbb
lahf
xor
loopne
push
or
popa
dec
sbb
jp
or
jb
out
daa
jmp
neg
sub
mov
mov
cmp
pop
test
mov
mov
imul
loop
jl
outsl
xchg
cmp
js
lea
or
xchg
leave
daa
scas
pop
pop
and
dec
push
and
das
enter
xlat
push
push
cmp
dec
or
mov
es
cmp
pop
sub
dec
call
push
mov
pop
jecxz
jl
dec
pop
jmp
sbb
int
cmp
xor
push
mov
sub
ljmp
out
push
pop
dec
fmuls
insb
out
lcall
mov
sbb
js
adc
dec
addr16
cmp
ljmp
in
mov
pop
sahf
sub
dec
xor
aaa
inc
out
lahf
push
psllw
push
in
or
insl
shrb
dec
pop
call
dec
enter
pop
sbbl
pop
or
sub
mov
fxch
enter
mov
popa
jp
insb
data16
insb
in
mov
jmp
sub
aaa
fs
rcrb
fs
mov
pop
fcom
rol
gs
or
test
or
movsl
push
stc
insl
repz
inc
mov
test
cld
sub
mov
xchg
or
add
mov
or
sti
mov
push
pop
or
push
loop
cmp
pop
repz
sub
movsl
jmp
negb
stc
or
ljmp
push
mov
mov
movsb
mov
pop
sub
mov
clc
push
mov
ljmp
sub
xchg
jg,pt
cmp
mov
iret
xchg
xor
inc
sub
cmp
fcmovnu
or
mov
sbb
fsubrs
cmp
xlat
nop
xor
pop
push
out
jno
sub
mov
mov
pop
dec
mov
jecxz
stc
or
loope
decb
push
sub
ds
sub
or
movsl
adc
aas
jns
js
jns
push
cvtdq2ps
or
mov
sub
mov
jp
fprem
loope
outsb
test
out
jp
daa
clc
jl
mov
sbb
or
mov
mov
insl
insl
dec
and
out
xlat
mov
jnp
or
jb
or
arpl
lahf
movsb
lods
lods
movsl
push
fstpt
sbb
jmp
out
xlat
pop
cli
clc
sbb
mov
call
jl
inc
xchg
push
jmp
loop
jge
cmp
sub
xlat
pop
dec
in
das
lret
lcall
lahf
mov
sub
sbb
sub
jmp
lret
cmp
cwtl
inc
lods
ja
cmp
clc
inc
xchg
or
out
mov
cwtl
enter
out
std
pop
fiadds
jge
std
cmp
enter
mov
sbb
cs
stos
test
sti
mov
arpl
pop
sub
pop
cmp
mov
rcrb
fimull
call
repz
sub
sub
pop
lcall
add
sbb
enter
stos
pop
pop
jo
cmp
dec
subl
cmp
ljmp
adc
sbb
cli
std
mulb
jge
mov
jne
jp
clc
fmulp
mov
dec
and
jmp
lcall
stc
cmp
fistl
and
push
cmp
jae
xor
fldt
sub
flds
sub
fdivl
jo
cmp
pop
cmp
or
dec
mov
jno
dec
neg
or
cmp
fiaddl
jg
inc
ljmp
jns
sbb
pop
arpl
js
inc
mov
test
rorb
pop
out
fmuls
jbe
idivl
daa
fnstcw
or
pop
mov
cmp
jo
jbe
xor
xchg
out
add
jecxz
in
lods
call
leave
clc
ds
jge
xchg
dec
sub
jno
gs
pop
sbb
sub
pop
cmpsl
sbb
imul
or
fwait
jl
mov
pop
push
inc
fcmovne
adc
ds
popa
push
or
and
scas
stos
lret
pop
adc
enter
arpl
cmp
cld
mov
push
gs
dec
clc
popf
cwtl
insb
jp
xchg
jmp
mov
push
sbb
mov
testb
pop
imul
sarb
sti
leave
aas
mov
pop
addr16
pop
pop
pop
xchg
pop
sub
iret
pop
lods
dec
iret
fiadds
sbb
pop
mov
or
pop
dec
or
scas
mov
sub
movsl
fadd
fistpl
les
std
out
or
insb
push
push
aaa
imul
pop
xlat
and
in
xor
sbb
push
stos
mov
addl
pop
dec
inc
jno
push
jle
fsubrs
sbb
jg
arpl
xlat
fwait
mov
scas
cmp
test
inc
or
mul
stc
repz
mov
out
aaa
xor
pop
loopne
cli
sub
pop
add
mov
mov
stc
pop
jle
std
mov
xor
jo
jp
sub
mulb
mov
sahf
mull
pop
dec
shr
pop
jge
sub
cmp
add
imul
stos
cli
jecxz
jmp
pop
loop
std
or
mov
pusha
mov
insb
push
jb
and
mov
mov
cwtl
arpl
sbb
fstps
adcl
cmp
mov
sbb
or
fucomi
cmp
xchg
cmp
scas
sbb
iret
aaa
arpl
jp
in
pop
and
pop
out
cli
or
nop
sub
xchg
lds
icebp
lock
js
jmp
pop
dec
or
inc
xchg
rolb
ja
rorb
push
cvtps2pd
jmp
testb
pop
stos
mov
fisubl
sbb
dec
fnstenv
dec
pop
sub
mov
enter
jecxz
stos
jmp
dec
ficompl
jle
pop
and
dec
sub
cmp
cwtl
lret
out
mov
sbb
dec
mov
sub
test
clc
or
sbb
popa
imul
jae
sub
pop
xlat
jmp
imull
fsubr
leave
out
cli
add
mov
sub
repz
ret
cmp
jp
ljmp
mov
pop
sti
jp
and
js
sbb
fisubrl
and
cmc
sbb
data16
dec
or
adc
divb
sbb
rorl
mov
cmp
or
mov
pop
ljmp
lods
enter
or
push
shrb
dec
int3
mov
cmpsb
push
and
sub
and
cmp
call
mov
xor
and
sti
iret
or
mov
icebp
dec
xlat
out
mov
and
push
mov
xchg
ja
enter
push
xor
cmp
ds
jle
js
cmp
adc
and
jle
pop
mov
outsl
insl
sub
or
enter
lods
fisttps
insl
sub
jecxz
push
sbb
inc
imul
sbb
or
push
cwtl
pop
jecxz
inc
lret
mov
iret
imul
inc
mov
sbb
jae
inc
jmp
js
dec
stos
out
jae
call
dec
mov
neg
dec
xor
subb
sub
fstpl
pop
mov
dec
jg
dec
cmp
dec
xlat
dec
mov
pop
test
dec
mov
pop
fwait
mov
push
daa
add
cltd
sbb
push
cmp
sbb
ljmp
js
dec
movsl
sub
lea
cwtl
or
mov
sub
dec
lret
jge
push
sub
loope
hlt
jae
or
mov
leave
fnsave
add
adc
and
lcall
or
inc
pop
dec
dec
dec
dec
xchg
out
testl
push
popf
cmp
pop
test
sbb
stc
push
pop
imul
testl
pop
pop
add
scas
xchg
push
xchg
or
imul
dec
inc
cmp
adc
add
dec
out
mov
sub
fs
test
adc
aaa
jne
lods
and
lret
lods
fwait
sar
cwtl
xor
data16
call
lret
enter
jmp
data16
inc
push
mov
fsubrs
sbb
iret
xlat
cmp
lret
imul
pop
fcmove
das
sbb
sub
push
push
xor
jp
and
imull
cmp
sub
daa
jb
sbb
pusha
int
cwtl
dec
test
fs
jl
push
or
mov
adc
mov
imulb
imul
mov
fstps
push
sbb
inc
cld
lret
lret
pop
cmp
fnstcw
adc
pop
cmp
sub
sahf
sub
fs
mov
push
sti
dec
insl
mov
mov
jmp
add
push
stos
inc
jmp
pop
enter
jge
xchg
mov
dec
or
jp
outsl
add
or
pop
enter
sbb
mov
pop
imul
cmp
sub
mov
xlat
test
pusha
ljmp
imull
das
sti
cmp
lret
mov
fsqrt
in
data16
cmc
sbb
mov
sbb
xor
push
lds
ret
subb
loopne
mov
call
sub
add
sub
dec
lret
sbb
adc
ss
push
sbb
scas
cwtl
or
call
loopne
sbb
out
fs
and
rcrl
mov
mov
cli
cmp
sub
mov
addr16
js
data16
pop
leave
lret
dec
and
mov
in
hlt
mov
jecxz
nop
fisttpl
dec
lahf
out
jp
int3
rclb
or
jo
sub
pmulhw
mov
movsl
jg
or
mov
stc
sbb
pop
cmp
ljmp
mov
outsl
sti
sbb
or
enter
or
cmp
das
repnz
repnz
mov
stos
outsl
jl
cwtl
mov
lea
inc
leave
std
xor
mov
inc
les
and
jl
fldt
sbb
mov
insl
and
push
push
mov
xchg
sub
ret
jns
pop
test
scas
mov
in
cmp
dec
insb
jp
stc
enter
sub
sti
lret
lcall
xchg
mov
fwait
dec
or
clc
lcall
sbb
inc
adc
int
scas
ja
gs
sbb
call
fsubrl
cli
dec
xlat
gs
push
or
fimull
push
sub
js
lahf
icebp
test
ljmp
sbb
lcall
repnz
xchg
dec
arpl
pop
xlat
ljmp
stc
imul
or
enter
lret
mov
leave
repnz
pop
out
sbb
call
pop
xchg
mov
int
repz
pop
cli
pop
ret
movsb
mov
push
leave
jno
jbe
out
xchg
mov
dec
rorl
shrb
cwtl
pop
pop
ljmp
lret
mov
sub
cwtl
lods
data16
cmpl
sub
in
pop
movsl
jmp
js
lcall
lods
mov
sbb
sbb
popf
sbb
xchg
jle
sub
jl
mov
mov
dec
enter
xchg
pop
stos
imul
test
cli
test
cmp
push
sbb
pop
out
mov
cmp
insb
gs
mov
fcmovbe
clc
pop
insb
lret
ret
xor
jl
lcall
jmp
rcr
sar
or
mov
or
negl
cmp
jmp
sti
mov
icebp
cmp
out
sub
aaa
in
lret
jmp
jg
cwtl
sub
dec
ret
cwtl
jmp
or
lods
pop
cli
sub
inc
or
js
test
lock
jb
arpl
test
jecxz
jmp
jb
jmp
leave
inc
cmp
xchg
cmp
movsl
cmp
xor
sub
jmp
sbb
jns
jg
mov
clc
out
pop
sbb
insb
mov
ljmp
mov
fdivrs
jp
inc
or
cmp
or
jnp
dec
daa
adc
insb
sbb
sub
sti
sbb
jecxz
inc
enter
movsl
pop
call
lods
adc
sbb
push
xor
rorl
xchg
push
xlat
fimuls
out
pop
jmp
in
push
jmp
leave
fldt
adc
sub
jns
cmpsl
sub
pop
pop
dec
les
jp
xor
insl
in
cli
dec
sub
out
pop
fimull
lret
or
push
jge
dec
push
xlat
jnp
cmp
mov
jl
mov
dec
scas
or
dec
stos
mov
and
sub
push
pop
es
and
inc
mov
or
int
pop
fisttpll
das
arpl
pop
push
in
mov
or
out
flds
or
pop
mov
pop
push
in
jne
push
gs
sbb
push
stc
std
cmp
cwtl
ds
sub
xchg
cld
fsubrs
mov
mov
cmp
cmp
daa
jl
popa
or
xlat
push
inc
dec
mov
adc
fisubrs
out
or
push
or
pop
inc
sbb
cmc
push
jp
xlat
adc
lea
cwtl
test
xchg
dec
mov
xchg
push
das
sbb
cli
aaa
or
mov
vpshad
mov
dec
push
fstpt
fld
call
pop
pop
jbe
ljmp
pop
cmp
cmp
call
jo
dec
lds
fcomp
dec
cmpsl
dec
dec
mov
cmpsl
imul
pop
sub
jl
sub
js
movsl
mov
cs
data16
push
mov
pop
dec
add
test
ljmp
fcoms
cmp
lods
pop
scas
insl
add
shlb
js
int3
inc
pop
jmp
jl
mov
ljmp
jge
leave
sti
mov
ficompl
cmp
sub
sbb
push
ljmp
or
dec
dec
je
jns
cmp
mov
pop
fsts
push
xchg
mov
jnp
fisubrl
sti
push
or
push
inc
pop
pop
aad
xor
lock
cmp
out
xchg
lods
or
dec
xor
pop
lds
stos
xchg
out
mov
lea
sbb
sub
hlt
ljmp
jnp
mov
mov
es
js
test
repnz
dec
stos
dec
leave
mov
mov
scas
es
push
sub
stc
push
pop
mov
cmp
jp
outsl
mov
sub
sub
dec
mov
gs
addr16
dec
jecxz
sub
sub
dec
filds
out
daa
orb
jb
jge
fcmovu
test
sbb
inc
daa
cli
xlat
imul
cwtl
and
fisubrs
push
or
sbb
notl
or
sbb
fidivrs
adc
jmp
fsubr
inc
add
ret
sbb
shrb
push
sub
in
cwtl
xchg
stc
pusha
mov
fs
ljmp
mov
dec
xchg
inc
ljmp
sbb
dec
sub
dec
out
adc
add
jmp
sub
lock
je
mov
inc
mov
imul
popf
lcall
pop
cli
mov
arpl
pop
in
xchg
data16
sbb
cmp
enter
stc
mov
sub
or
jle
cmp
xorl
jmp
fisubrs
fnstsw
mov
orb
pusha
adc
pop
inc
lret
push
imul
into
sti
xor
dec
cld
scas
std
or
fidivrs
cmp
sahf
ja
pop
sbb
mov
movsl
ljmp
xchg
pop
push
add
pop
stos
test
mov
jns
dec
sbb
out
push
xchg
mov
push
dec
pop
sub
push
mov
call
push
inc
clc
inc
dec
fwait
pop
sub
call
js
ss
pop
scas
loopne
lds
cmpsl
jmp
sub
lcall
push
or
xlat
fidivs
push
ljmp
fimull
push
sbb
movsb
adc
fmuls
std
stos
sub
mov
mov
dec
leave
stc
push
xchg
pop
icebp
add
cmp
push
js
and
add
stc
fldl2t
jecxz
inc
pop
pop
negl
pop
cmp
and
inc
scas
push
mov
lret
jle
dec
jmp
call
insl
gs
mov
jle
or
or
xlat
or
stc
xchg
leave
or
into
in
lods
cmp
data16
in
imul
push
leave
pop
mov
cs
ja
inc
enter
sbb
jg
inc
imul
movsl
dec
enter
fldenv
dec
stc
ljmp
cld
jp
sub
cs
sub
incb
mov
jle
dec
dec
rorb
dec
mov
pop
mov
or
and
shl
push
pop
pop
sbb
mov
mov
or
or
xchg
and
cmp
inc
jp
das
dec
or
sub
leave
push
lcall
mov
cmpsl
std
fcomps
in
pop
adc
dec
fs
ljmp
out
adc
inc
mov
lcall
leave
or
cmp
pop
adc
out
dec
lcall
fwait
cmpsb
clc
ljmp
dec
lods
scas
cmp
insl
sub
mov
movsb
pop
cmpsb
inc
dec
push
pop
paddusw
mov
repnz
mov
xchg
dec
test
and
fimull
xchg
sarb
psubb
fcom
inc
push
sbb
sbb
dec
xor
sbb
notb
inc
mov
adc
popa
pop
daa
cwtl
addr16
cmp
stos
jp
jmp
sub
inc
push
sub
lods
out
dec
xchg
stos
push
jp
pop
or
insb
xor
fisttps
or
stc
nop
jg
mulb
jg
repnz
movsb
pop
fidivrl
sub
lret
int3
mov
fdivrs
or
push
je
mov
pop
push
imull
dec
dec
fildl
dec
sub
push
pop
sub
or
out
jg
cmp
push
mov
idiv
push
cmp
sbb
push
push
pop
pop
cmp
movsl
jge
and
mov
enter
pop
fildl
or
dec
orb
cmc
stos
add
test
mov
data16
xchg
idivb
jb
js
cmp
mov
jl
cmp
iret
or
inc
jg
fstpl
pushf
insb
push
ljmp
sub
enter
lret
sbb
sti
aam
xlat
cmp
dec
sub
sub
leave
in
gs
fsts
pop
mov
mov
cmp
sbb
pop
pop
pusha
sbb
clc
lret
sti
push
pop
aaa
insl
std
mov
shr
jmp
cmp
mov
leave
adc
inc
stos
fimull
push
sub
push
sub
std
mov
push
push
je
inc
dec
jne
fsts
fstps
lahf
pop
shrl
pop
aaa
int
leave
test
push
std
sbb
out
enter
mov
out
popa
fistpl
call
insl
adc
sub
cmp
pop
inc
arpl
push
scas
push
out
movl
cli
test
repnz
sbb
pop
sub
cmpsb
jle
sub
js
mov
loope
mov
das
stos
mov
or
in
fs
jg
push
cmp
fadds
hlt
sar
into
dec
shr
andb
fcomp
cli
sub
xor
xor
notb
xor
repnz
fbld
or
push
mov
int3
js
dec
fidivrs
lods
fstpl
dec
insb
adc
jg
add
mov
xor
dec
out
pushf
jmp
sti
mov
fldt
mull
cs
loope
mov
repz
mov
sub
pop
cmp
push
lret
jns
dec
inc
jle
or
sub
and
add
popf
fnstcw
pop
jge
mov
dec
sarb
adc
pushf
and
add
sub
sub
mov
mov
sbb
cltd
out
mov
leave
pop
jmp
mov
push
fisttpll
call
dec
sub
jl
jp
or
add
xchg
sarb
or
mov
pop
jp
stc
fldt
dec
sbb
mov
pop
ljmp
pop
push
loope
and
push
imul
jbe
sti
lods
sub
js
cmpsl
aaa
fcomps
sbb
ret
testl
call
cmp
cmc
data16
scas
pushf
dec
enter
pop
jb
loope
imul
cmp
lcall
test
or
fldenv
loope
insb
fwait
sub
sbb
dec
pop
shr
jle
jne
sbb
sbb
lods
xchg
pop
or
fisubrl
jbe
je
sub
sub
mov
add
or
mov
inc
jl
out
cltd
jbe
lds
mov
mov
add
mov
sbb
les
mov
or
sbb
fisttpl
mov
mov
shrl
cmp
or
out
sub
cmp
decl
arpl
fs
pop
sub
idivl
into
cli
clc
sbb
rcrl
or
fsubrs
cmp
dec
xlat
or
mov
sbb
aaa
add
or
mov
icebp
scas
jmp
dec
cmp
loopne
cmc
xchg
pop
cltd
ljmp
les
lret
cmpb
or
addr16
sub
mov
push
lret
leave
jg
ljmp
mov
sbb
cmp
sub
fmuls
sub
mov
hlt
in
loopne
jne
stc
or
insl
decl
std
sbb
pop
je
pop
mov
insl
mov
mov
jle
sbb
in
pop
pop
xor
pop
dec
test
cwtl
movsl
lea
push
sbb
dec
pop
pop
dec
aam
dec
xor
divb
leave
out
mov
jbe
scas
mov
out
and
popf
or
add
lcall
fwait
pop
and
jne
dec
xor
or
lret
mov
push
insl
dec
pop
sub
nop/reserved
push
pop
bound
cmp
out
fdivrs
or
jp
sub
testl
jno
pushf
jmp
push
iret
fsubrp
dec
cmpsl
and
cmp
mov
dec
push
ljmp
sbb
mov
dec
xor
cmp
iret
dec
scas
fimuls
ds
dec
je
test
cmp
jbe
sub
mov
sbb
setp
adc
std
cmp
pop
addr16
push
fisttps
jmp
push
ds
out
mov
aad
sub
add
in
mov
mov
dec
lods
sbb
cs
or
stos
jg
dec
push
fstpt
jmp
pushf
add
ret
push
daa
pop
aaa
adc
shl
dec
imul
add
out
adc
insl
pusha
push
pop
jecxz
lods
sti
xchg
add
or
pop
push
ret
ret
testl
or
push
fsubrp
push
cmc
push
inc
test
in
std
mov
stc
mov
popa
enter
sub
dec
fwait
push
ljmp
jge
cs
jmp
mov
sub
sbb
nop
push
xor
sahf
dec
fld1
sub
adc
stos
mov
pop
or
notb
mov
xor
jne
test
fwait
cmp
mov
or
js
push
ljmp
cmp
fsubr
jge
idivl
lods
mov
fmuls
sub
pop
imul
stos
inc
sub
and
int3
sub
movsl
xchg
push
mov
sub
js
mov
sub
sbb
dec
push
out
xor
push
fwait
dec
pop
testb
push
pop
jmp
loope
imul
stos
enter
out
fimuls
lcall
ss
cmp
int3
addr16
stos
fnstcw
jnp
stos
imul
fcomps
pop
push
stc
sub
rcrb
xchg
inc
outsb
jl
ljmp
sub
inc
sbb
idivb
mov
dec
dec
adc
cmp
mov
cmp
leave
jne
push
xor
test
add
call
sbb
pop
jl
lret
sub
fs
dec
clc
loope
mov
pop
jp
cmp
call
mov
sub
dec
sbb
movsl
cmp
or
inc
cmp
mov
mov
leave
nop
dec
pop
stos
add
cmp
lods
sub
ljmp
out
pop
mov
sar
pop
dec
test
mov
in
rcrl
pop
test
cmp
push
dec
pop
sbb
movsl
iret
fidivs
xchg
je
xor
pusha
adc
jecxz
sbb
dec
sub
call
js
mov
test
fldl2e
sub
pop
or
push
lock
clc
inc
jae
pop
fldcw
pop
inc
and
pop
sub
push
fdivr
jmp
data16
and
or
inc
ret
pop
xchg
dec
fcomps
pop
daa
or
sti
sbb
cmp
pop
or
mov
out
pop
mov
dec
outsl
add
imull
or
cmp
sub
sbb
sbb
fimuls
jmp
mov
js
push
sub
sbb
xchg
insb
and
jl
pusha
cmp
dec
pop
cs
mov
cli
fidivrl
mov
jmp
adc
ds
jle
or
dec
inc
aam
cmp
mov
cmp
punpcklwd
and
test
dec
adcl
fsubr
lock
xor
or
hlt
sbb
pop
mov
xor
mov
sbb
es
dec
jmp
das
cmp
jmp
adc
movsb
sbb
insb
in
lret
push
std
sahf
xchg
jp
out
dec
sub
pop
out
jl
inc
dec
or
addr16
into
pop
and
dec
loopne
sub
jecxz
js
cmp
jbe
lods
movsl
aas
pop
mov
or
mov
cmpsb
jmp
cs
notb
push
mov
pop
fs
js
sub
inc
dec
sbb
sub
pop
or
push
js
dec
mov
jl
fidivl
lcall
stc
fxch
sub
dec
pop
clc
out
stos
cmp
mov
mov
mov
lods
cmp
lea
and
adc
rcrb
sub
or
push
dec
bound
push
in
insl
dec
fsubrs
lods
or
dec
or
mov
stos
lret
pop
cmp
xlat
xchg
xchg
cmp
pop
cwtl
inc
add
mov
jns
popa
gs
out
loope
das
fcomps
or
pop
imul
jp
lahf
ja
push
dec
push
sbbb
sub
push
fcomp
es
movsl
enter
dec
mov
mov
in
or
jb
fsubr
jmp
iret
leave
mov
sbb
adc
add
andb
sbb
push
shr
mov
sub
cmp
pop
push
test
dec
or
inc
xor
dec
jno
mov
pop
jle
sub
mov
push
adc
ljmp
insb
cmpsl
push
iret
lods
mov
push
enter
dec
pop
fs
sbb
popa
pop
stc
jmp
mov
jns
jbe
sbb
test
or
lods
sbb
lret
popa
jp
imul
or
sub
sbb
mov
xlat
sub
fstps
and
in
shrl
test
xchg
inc
fbld
mov
jl
jb
sti
test
scas
enter
js
out
pop
sub
mov
stos
cmp
cmp
lds
mov
pop
inc
sub
sti
and
stc
pop
add
or
fs
jge
shrl
imul
dec
sub
cli
aam
dec
push
and
sahf
nop
pop
sub
push
aad
jmp
push
in
mov
outsl
rcrb
or
ds
out
sarb
jmp
fcomp
mov
mov
in
jmp
sub
es
sub
cmp
pop
xchg
or
sub
mov
pushf
addr16
dec
imul
mov
pop
dec
clc
js
dec
sub
push
arpl
jmp
lret
mov
insb
lcall
arpl
testl
or
into
jmp
jae
daa
repz
sahf
stc
xor
mov
je
out
cmp
push
xor
and
mov
sbb
mov
das
xbegin
inc
testb
test
push
jl
sbb
arpl
sub
sub
sti
xor
xchg
xchg
dec
leave
dec
out
sti
xlat
in
sub
cmp
sbb
push
push
push
stc
ja
js
and
xor
jmp
jae
sbb
pop
in
call
rcrb
jmp
jecxz
fwait
jmp
std
leave
cwtl
or
fidivs
lcall
jg
jge
and
cmp
inc
movsb
mov
fsts
jno
subb
clc
fisttpl
push
fimuls
adc
pop
mov
cld
ficompl
sub
push
test
lcall
cmp
enter
dec
in
daa
lret
lea
sarb
outsb
mov
leave
cli
inc
outsb
insb
out
lods
jmp
push
jnp
cmpsl
fsubr
ljmp
pop
push
mov
sub
pop
movsl
inc
mov
cmp
insl
pop
ljmp
sti
imul
or
jno
and
mov
in
test
cmp
cmp
sbb
fdivr
sub
clc
or
jl
sbb
dec
mov
sbb
add
dec
mov
add
fidivrs
pop
cbtw
daa
or
mov
dec
jg
mov
sub
push
xchg
dec
lods
cmp
push
pop
sub
movsl
xchg
test
in
xchg
sbb
testl
xchg
mov
enter
ljmp
out
pop
dec
push
pop
or
enter
jle
dec
fwait
mov
out
adc
sub
jne
fmuls
sub
dec
xorb
or
mov
push
jns
daa
adc
pop
in
inc
jmp
lds
mov
in
lret
fldcw
cmp
cwtl
dec
rcr
ljmp
and
cli
inc
inc
xchg
imul
sub
aaa
dec
pop
clc
xlat
lahf
pop
dec
subl
ficomps
insb
psrlq
and
mov
dec
sbb
lcall
mov
loop
call
or
jns
enter
and
gs
shll
xchg
xor
inc
dec
or
aaa
xchg
aaa
xchg
lahf
arpl
or
popa
das
pop
push
negl
add
jecxz
sub
stc
dec
dec
dec
xor
dec
jmp
xchg
clc
imul
or
in
mov
dec
pop
dec
sub
sub
cmp
jne
jl
sbb
or
scas
shl
or
test
xchg
dec
gs
lret
or
cmpsl
sub
divb
dec
xlat
sbb
loopne
lret
jo
lret
or
cwtl
cmp
mov
pop
dec
jbe
js
xchg
mov
xchg
mov
in
jecxz
push
clc
pop
cmpsl
cmp
push
std
mov
or
fs
scas
sub
insl
fs
pop
call
sbb
in
mov
arpl
push
pop
dec
mov
enter
pop
mov
mov
sbb
dec
xchg
cmp
imul
das
jno
repnz
frstor
fstps
fstpt
aaa
movsl
or
loopne
mov
lret
push
jg
xor
insb
jbe
jmp
cld
lods
and
clc
out
inc
fwait
testl
add
inc
xchg
jmp
xlat
arpl
dec
push
inc
insb
in
adc
cmp
fistps
test
enter
pop
data16
ljmp
stos
pop
mov
cli
popf
pop
sub
ds
sbb
mov
imul
mov
sbb
jo
sub
xlat
cmp
xchg
daa
pushf
lret
mov
cmp
inc
cmp
mov
clc
icebp
mov
mov
addr16
out
scas
jp
sbb
into
sub
sti
fisttpl
jns
sbb
cmp
lods
cmp
push
inc
pop
jle
sub
imul
jmp
clc
sbb
leave
mov
dec
data16
insb
push
cmpl
lret
repz
test
les
pcmpgtd
or
cmp
xor
dec
test
lea
sub
pop
push
sub
fsub
xor
lret
test
or
xor
inc
loop
or
sbb
sbb
loopne
rorb
push
pop
push
add
pop
mov
stc
out
idivb
pop
das
ljmp
imul
scas
sub
pop
dec
jmp
pop
pop
dec
push
pop
jl
jl
lret
jg
bound
inc
xor
inc
aas
fsub
mov
je
pop
pop
mov
sub
xor
movsl
daa
popa
dec
les
cwtl
dec
or
popa
pop
imul
jmp
flds
aam
sbb
popa
test
mov
mov
pop
jp
or
mov
inc
jae
mov
pop
mov
jmp
cli
dec
dec
popf
sbb
stos
lods
leave
jo
xlat
mov
sti
cmp
mov
aam
sub
jp
enter
fistpl
sbb
mov
pop
shr
pop
pop
loope
clc
pop
cli
lahf
cmp
sub
out
mov
int
jmp
lret
push
add
inc
dec
insb
push
pop
cmp
sub
movsl
add
pop
rcrb
mov
push
jecxz
mov
or
xchg
inc
xchg
pop
or
mov
mov
xchg
mov
push
aam
sub
gs
cld
or
pop
imul
movsb
mov
addl
ljmp
sbb
ljmp
fcompp
clc
dec
dec
lret
or
arpl
dec
fs
jne
sub
sbb
xor
insb
dec
sbb
jno
inc
out
testb
fstp
ljmp
xchg
pop
in
data16
fdivrs
lahf
xor
or
div
adcb
jge
push
cmp
add
in
ljmp
repnz
pop
fimull
arpl
test
outsb
cli
xchg
imulb
mov
inc
push
and
push
cbtw
add
in
push
loopne
insb
mov
cld
test
out
sti
sub
mov
dec
imul
or
insb
push
leave
jo
movsl
sub
jb
or
enter
xchg
or
pop
mov
jmp
mov
xor
inc
or
pop
sbb
sub
in
push
mov
mov
sub
fisubrs
mulb
popa
push
dec
jge
push
push
clc
or
sub
jp
or
jmp
cli
mov
push
stos
insb
sbb
stc
mov
pop
xlat
push
dec
test
mov
xchg
jg
sbb
pop
out
enter
jne
push
dec
sub
mov
or
out
xlat
lods
leave
stc
mov
sbb
sbb
popf
lret
std
pop
clc
sarb
lahf
out
jno
dec
push
push
arpl
xlat
cwtl
imulb
aas
mov
sbb
sbb
or
jg
loop
mov
cmpsl
jmp
js
enter
icebp
mov
sbb
mov
daa
and
mov
movsl
mov
jmp
call
sub
out
test
jmp
jno
inc
pusha
inc
sub
jns
add
out
fiaddl
divl
and
or
jle
dec
push
stos
outsl
or
pop
jp
dec
inc
in
jp
pusha
cmp
fwait
sbb
ljmp
cwtl
or
xor
or
sbb
jmp
push
mov
add
push
mov
fsubr
rorb
sub
and
mov
fisubrs
or
mov
dec
stos
loope
jmp
dec
clc
cmp
mov
mov
sub
cmc
call
sbb
insl
cmpsb
jo
cwtl
or
or
push
lea
mov
mov
jmp
das
stos
pop
sbb
push
push
add
cmp
lret
arpl
pop
jecxz
test
sti
or
icebp
sbb
ljmp
in
sbb
test
ljmp
addr16
cwtl
lret
stos
jmp
dec
lahf
stos
cli
sbb
push
insb
adc
jecxz
xor
dec
mov
stc
outsl
insl
inc
mov
push
insb
loopne
out
push
jmp
xor
daa
popf
mov
dec
push
mov
sub
or
or
add
lret
sarl
std
imul
fsubrs
ds
sbb
out
xor
pop
or
test
sub
dec
cmp
jmp
popf
add
dec
lret
popf
or
xchg
sub
cmp
pop
mov
js
sbb
mov
out
shr
or
fwait
pop
fcomps
dec
pop
mov
sub
pop
sub
push
lcall
jmp
dec
sbb
push
clc
mov
or
fdivrs
sarl
jle
sub
push
movsl
fs
xchg
push
sbb
lcall
ljmp
sbb
sbb
repz
stc
cmp
and
and
dec
or
sub
je
jmp
out
mov
mov
sti
push
cld
sub
jmp
dec
pop
mov
sti
stos
enter
icebp
lret
adc
sbb
jp
mov
insb
xor
lcall
shrb
aas
pop
sbb
mov
aam
dec
or
fs
dec
inc
arpl
xor
jmp
fsubrs
mov
xor
mov
cmp
add
pop
pop
or
in
dec
pop
add
pusha
aaa
push
hlt
repz
decb
sbb
pop
cmp
pop
pop
iret
cltd
xor
push
ljmp
jge
cmc
sbb
aad
or
lds
sbb
lcall
sbb
mov
cmp
xchg
dec
cmp
dec
out
jmp
push
mov
or
push
jl
ds
movsl
jmp
sub
mov
insb
sti
push
mov
fst
adc
adc
stos
fmuls
sbb
mov
imull
pop
dec
mov
jb
lret
stc
jl
jb
mov
mov
jae
add
dec
sarb
outsl
aam
mov
leave
cmp
fcomps
jmp
pushf
notl
mov
cwtl
xor
jb
enter
pusha
cmp
push
stos
jns
rcrl
inc
dec
cmp
in
adc
inc
xor
and
jp
cmp
scas
sub
movsl
fisttpl
sbb
fimuls
dec
cmp
push
mov
out
or
jmp
sub
test
cmp
cmp
jmp
data16
out
lcall
out
mov
mov
neg
mov
imul
pop
test
xchg
push
xor
pop
sub
cmp
push
lods
or
lods
lcall
ljmp
adc
imul
sbb
dec
gs
push
dec
sbb
mov
mov
orl
outsl
scas
call
cmc
or
mov
xor
xor
mov
dec
cli
daa
xlat
jno
mov
cmp
dec
fs
nop
pop
lods
sub
aaa
xor
sarl
arpl
clc
ljmp
mov
xor
in
aaa
rolb
movsl
fs
cmp
call
mov
cmp
and
mov
adc
repnz
aaa
cmp
adc
sbb
dec
xor
and
or
push
jmp
cmp
insb
sub
add
ret
dec
ds
xor
lret
mov
dec
lahf
fwait
out
jge
insb
loopne
mov
pop
and
dec
inc
aaa
inc
cmpsb
enter
xor
add
add
mov
jle
stos
xchg
push
jmp
inc
stos
pop
pop
lret
mov
es
pop
sbb
cwtl
stc
sub
push
dec
xchg
pop
test
sub
test
or
mov
clc
pop
outsl
out
ljmp
call
mov
scas
sub
movsb
stos
or
pop
jp
sbb
mov
pop
or
in
xchg
leave
sub
dec
icebp
cmp
inc
jbe
aad
fldcw
sti
xor
sbb
in
data16
stos
jge
pop
movl
daa
mov
loope
dec
pop
rcrb
pushl
fcoms
fxch
push
data16
ss
cmp
sub
jp
notl
dec
sbbl
fstpl
pop
cli
jecxz
add
pushf
sub
jae
dec
data16
lods
pop
cmp
mov
cmc
shlb
imul
rorl
and
lcall
repz
xor
and
mov
fdivrs
xlat
sbb
fs
fldenv
leave
xor
xchg
gs
lods
push
std
js
test
jne
test
mov
fld1
mov
dec
fistpl
test
push
leave
sbbl
pop
push
dec
dec
insb
test
pop
movsb
cmp
dec
mov
mov
cmc
out
and
pop
repnz
fcompl
push
cmp
cmp
mov
pop
adc
test
popa
cmp
mov
ds
jecxz
mov
dec
push
sbb
mov
mov
mov
lret
lds
lret
in
fucomi
pop
outsb
sub
insb
sbb
enter
pusha
pop
jle
pop
scas
mov
sub
sub
sub
popa
les
in
pop
stc
pop
or
mov
leave
fwait
lret
call
push
push
aaa
imul
sbb
push
dec
dec
leave
ljmp
in
dec
cmpsl
pop
cli
jmp
ficoml
or
jg
mov
push
cwtl
out
insb
push
cmp
jecxz
roll
cmpb
insb
sbb
flds
dec
jmp
rcrl
sbb
and
mov
out
addl
push
ffreep
test
xchg
mov
sbb
mov
inc
jp
stos
mov
cmp
in
adc
xlat
mov
sbb
div
and
inc
insb
test
sbb
sbb
xor
lret
sub
shlb
insb
inc
dec
adc
cmp
jmp
ret
mov
aaa
int
fnstenv
jl
mov
mov
aas
ror
mov
cmp
xlat
faddp
cwtl
outsl
mov
cmp
sub
js
fdivr
insb
mull
in
mov
fisubrl
jp
lods
inc
mov
pusha
insl
jmp
insl
add
jmp
test
ja
mov
stc
cs
jmp
sbb
jg
jmp
mov
inc
mov
lcall
cmp
inc
dec
jp
cmp
addb
push
or
enter
or
clc
push
push
loope
out
in
stos
pop
jns
test
negl
mov
leave
dec
sbb
pop
push
add
sub
clc
popf
pop
pop
xlat
or
shlb
sbb
arpl
sbb
jmp
mov
pop
pop
pop
sbb
insb
sub
rorb
pop
cmp
nop
adc
mov
js
push
pusha
jl
das
call
push
hlt
jmp
and
cmpl
push
xchg
ficomps
cmp
jl
sub
out
inc
cmp
ds
out
sbb
leave
fistpll
jmp
sub
pop
add
insb
out
cld
sub
in
or
push
data16
pop
sbb
pusha
xchg
pop
cmp
dec
call
sbb
loop
lret
test
dec
cli
cmp
sbb
test
jge
sub
js
scas
mov
dec
push
or
and
lret
cmpl
dec
jge
stos
mov
mov
pushf
sbb
rcl
pop
test
fmuls
fstpt
sti
mov
mov
or
push
and
pop
xor
xlat
sub
clc
dec
add
jmp
sub
or
pop
popa
cmp
stc
out
fsubrs
mov
push
sub
fstpt
cmp
lret
int3
fldenv
xor
and
mov
idivl
mov
in
fs
vmovddup
jmp
stos
and
clc
fadds
xchg
push
push
shrb
aas
mov
repz
jnp
jp
push
test
mov
insb
cmp
or
fcmovu
or
cmovae
enter
cwtl
loopne
lea
push
pop
dec
sbb
imul
jmp
mov
or
adc
push
jmp
cmp
test
pop
push
and
dec
clc
icebp
sub
fptan
in
cmp
stos
imul
xchg
popa
push
sub
dec
lret
jb
inc
dec
jno
cmp
test
xchg
jmp
imul
leave
stos
or
jmp
sub
or
cli
andl
sbb
dec
or
outsl
imul
mov
lcall
iret
mov
sub
jp
cmp
rcrb
cmc
mov
movsb
push
test
movsl
cmp
and
fs
push
scas
or
clc
cwtl
dec
dec
mov
push
sbb
sbb
jecxz
scas
cmp
sub
enter
push
sbb
test
sti
outsl
mov
stos
insb
mov
mov
aaa
cmpsb
pop
xchg
push
iret
rorl
pop
or
sbb
xchg
dec
fisttpl
stos
dec
jmp
fildll
arpl
mov
sti
cmpsl
enter
stc
xchg
stos
sbb
scas
jle
dec
ljmp
pop
loop
outsb
pop
test
int
sub
mov
lret
mov
addr16
pop
sbb
jmp
fisubs
sbb
jns
pusha
lds
jecxz
fisttpll
je
sub
inc
test
jb
imul
pop
out
pop
insl
out
sti
cmp
mov
jl
add
jge
cmpsl
push
pop
rorb
sbb
pop
hlt
xor
data16
push
pop
or
out
fs
gs
lcall
adc
ljmp
sub
leave
push
sub
enter
cli
add
leave
lock
and
out
shr
or
lahf
dec
fidivrl
out
fiadds
fildl
lahf
pop
test
in
ret
mull
data16
mov
or
inc
pop
xor
xchg
push
je
sub
push
jle
hlt
or
mov
sbb
orb
mov
sbb
mov
sbb
xor
sub
repnz
test
in
insb
call
ljmp
sub
mov
jle
xchg
icebp
sbb
shrb
mov
sbb
movsl
insl
jp
inc
jge
adc
push
cmp
stc
jle
js
pop
daa
cmp
add
mov
mov
xor
out
arpl
mov
cmpsb
xlat
outsb
test
sub
in
out
dec
sbb
and
lret
xor
cmp
pop
cmpsb
dec
lret
repnz
testl
pop
sub
stos
mov
lcall
sub
dec
or
sbb
xchg
jmp
sarb
fdivr
pop
push
mov
ljmp
pop
repnz
std
ds
cmp
or
stos
dec
int3
lea
or
fadds
imul
dec
adc
insb
shll
lcall
lahf
inc
xlat
out
negl
leave
popa
sbb
stos
or
pop
or
cmp
hlt
or
lods
out
test
lcall
mov
pop
addl
mov
mov
push
sbb
incb
insl
test
cmp
js
movb
push
or
jle
or
popf
lret
test
pop
sub
push
push
insb
or
sub
imul
and
int
mov
sub
or
out
loopne
cmp
pop
std
jg
sti
stc
pusha
repnz
cli
in
negl
cs
pop
cwtl
leave
jmp
je
lock
and
std
or
ljmp
cli
hlt
gs
out
movsl
cmp
sub
test
cli
pop
dec
sub
stc
push
enter
test
pop
inc
dec
outsl
fiadds
sbb
sub
inc
pop
shr
scas
sbb
subb
push
lret
xchg
enter
ljmp
stc
js
dec
jns
xchg
imul
jmp
sbb
int
add
mov
jge
dec
call
enter
ds
das
ljmp
jg
cmp
sbb
pop
mov
ret
jl
xor
shrl
sti
mov
jnp
mov
loope
dec
imul
pop
mov
test
lods
adc
sub
pop
add
inc
dec
dec
into
sbb
lods
sbb
xchg
xchg
fimuls
xchg
ljmp
dec
and
sbb
idiv
sub
pop
mov
stos
or
outsb
pop
add
fstpt
pop
icebp
es
jle
jge
mov
mov
dec
jnp
mov
lds
dec
jmp
sbb
cmp
xchg
mov
or
cmpsl
sub
lahf
mov
cmp
sub
dec
dec
mov
or
enter
push
lods
lcall
dec
pop
or
pop
cmp
sbb
xor
sub
fadd
cwtl
sti
mov
js
pop
push
cmp
add
xlat
cmp
fcoms
sbb
clc
push
and
push
bound
subl
testl
cli
dec
add
stos
sbb
sub
dec
dec
mov
leave
and
mov
lcall
or
mov
pop
pop
dec
js
add
test
adc
lock
cmp
inc
fsub
sbb
jecxz
data16
imull
jecxz
dec
cmp
mov
cmpsb
cmp
mov
lcall
insb
xlat
pop
sub
sbb
sbb
sub
cmp
mov
xchg
jle
dec
mov
dec
leave
sub
in
cs
jmp
cmp
leave
or
out
fcmovbe
in
popf
or
pop
mov
or
dec
pop
or
loope
mov
clc
stc
repz
lea
pop
xlat
xchg
jne
cmc
sbb
jns
xor
mov
push
sbb
pop
test
jmp
bound
mov
in
test
popa
leave
inc
negb
out
in
inc
arpl
mov
leavew
aas
cmp
sub
cli
sub
jp
pop
loope
enter
andb
rorl
cmp
out
inc
ss
mov
enter
xchg
int
jmp
pop
iret
sbb
dec
pop
inc
xchg
lret
or
jg
stos
sarl
aam
dec
inc
sub
dec
cmp
or
cwtl
loopne
mov
jne
lcallw
insl
mov
mov
mov
jno
jb
jl
arpl
push
or
dec
outsl
cs
cmc
imul
sub
mov
imul
test
ret
xchg
daa
js
mov
jae
jne
sub
leave
popa
into
or
jp
cmp
bound
xlat
add
leave
clc
les
push
or
dec
ljmp
loopnew
lret
jl
lcall
out
call
outsl
add
pop
cmp
fisubrs
lret
inc
push
fsubr
or
mov
mov
add
pop
push
add
dec
dec
or
pop
sbb
cmp
cwtl
pop
stos
sub
pop
sbb
push
cli
bound
stos
cmp
lcall
pop
jmp
ds
cs
cmp
pop
push
stc
jns
std
js
add
mov
or
lea
dec
stos
mov
xor
inc
ljmp
cmp
or
lds
in
mov
jbe
test
dec
jbe
inc
mov
cmpsb
gs
jmp
sub
repnz
outsl
mov
sbb
add
or
dec
dec
cmp
lcall
cmpsl
xlat
or
stos
daa
push
dec
fisubrl
mov
pop
or
lret
mov
out
jno
dec
pop
push
pop
sbb
imul
loopne
jns
pop
stos
push
jle
cmp
xor
outsl
scas
nop
in
dec
push
or
add
insl
mov
and
pop
stc
ja,pt
adc
jmp
adc
testb
adc
and
popa
xchg
out
mov
xchg
divl
pop
mov
comiss
add
or
std
cmp
clc
lods
jp
aas
cmp
jmp
leave
hlt
sti
or
dec
scas
adc
sbb
mov
mov
pop
jl
pop
or
cwtl
call
jmp
push
test
mov
cwtl
xchg
push
sbb
mov
fidivl
cmp
cmp
cli
mov
or
lods
or
jbe
sarb
xchg
xor
sub
imul
or
xlat
mov
sub
dec
jmp
jl
subb
cmp
fimuls
lds
or
ljmp
cmpsl
scas
sub
jp
outsl
mov
mov
rcr
mov
fldt
jmp
push
ljmp
pop
ds
aas
jb
call
shr
sbb
lods
dec
cmp
out
pop
sbb
in
and
ds
pop
mov
mov
push
int
jnp
xchg
insb
sbb
xor
subb
cs
dec
adc
cmp
fcomps
add
or
cwtl
daa
fidivl
and
inc
or
dec
push
xor
xorl
mov
and
dec
sub
mov
stc
mov
clc
add
cmp
dec
sub
ljmp
or
psubq
pop
mov
pop
sbb
rorl
pop
out
add
ficomps
pop
roll
jmp
loope
clc
pop
test
js
pop
sbb
pop
cmp
insb
js
adc
call
sub
add
lret
xchg
pop
dec
outsb
dec
ret
mov
ja
lahf
sub
neg
sbb
out
movsb
dec
lret
add
insb
dec
and
testl
fcmovne
cmp
stc
push
insb
dec
or
ds
call
cld
sbb
pop
nop
shl
pop
mov
mov
loope
ja
fstpt
mov
xor
rclb
pushf
in
ljmp
and
cmp
push
sub
cmp
out
sub
mov
dec
testl
cmp
cwtl
inc
sbb
lret
and
pop
js
into
push
jp
or
mov
jae
cltd
mov
bound
jmp
lret
call
push
add
xor
out
iret
pop
jge
sub
testb
pop
sub
aas
imul
jno
sbb
pop
pop
out
mov
imul
push
test
jo
movsl
xchg
push
and
imul
sub
jae
lret
test
pusha
mov
or
out
clc
pop
push
shrb
lds
or
or
xchg
cli
pop
push
inc
mov
shlb
stos
insl
dec
or
dec
js
cli
adc
loop
cmp
loopne
pop
enter
mov
cwtl
out
lret
mov
push
dec
dec
xchg
cmp
jnp
pop
outsl
popf
stc
mov
mov
popa
lret
dec
repz
fcoms
dec
and
das
mov
stos
and
mov
xor
arpl
push
push
dec
sbb
mov
xlat
mov
jmp
sub
repnz
shrb
dec
cmp
jle
jbe
adc
xlat
movsl
adc
leave
ret
pop
jno
cvtps2pd
arpl
pop
mov
jo
jecxz
lods
inc
lock
mov
sbb
test
dec
pop
pop
dec
cmp
stos
sub
imul
roll
cmp
addr16
cmp
mov
outsb
mov
popa
sub
inc
gs
test
stc
sub
popf
pop
and
loope
pop
cmpsb
imul
xor
cmp
jecxz
ljmp
sub
js
or
add
mov
lret
sbb
addr16
xor
out
pop
jmp
pop
addl
dec
dec
jmp
and
mov
orl
sub
dec
das
add
mov
adc
sub
es
push
dec
neg
mov
imull
insb
scas
lcall
enter
xorl
sbb
or
sub
popf
out
sbb
or
mov
mov
cld
pusha
imul
cs
add
mov
mov
cli
cwtl
movsl
in
sti
push
scas
sbb
daa
test
adc
mov
mov
jns
xchg
or
cmc
enter
fistpl
add
sub
lods
fwait
or
add
fwait
dec
loop
mov
lods
sti
cmp
orb
ficoms
pop
mov
stos
cmp
movsb
fidivrs
out
xor
jmp
insb
test
and
push
push
jle
js
scas
out
sbb
mov
stos
jo
and
or
cwtl
lahf
lods
scas
movsl
mov
lret
arpl
pop
leave
cmp
enter
test
or
int
jecxz
push
xor
insl
negb
mov
int3
push
mov
and
jmp
xchg
sbb
sub
sbb
je
pop
cmp
insb
in
ljmp
lret
ret
pop
pop
call
jl
movaps
sub
out
data16
in
loopne
ljmp
fadds
fcmovnbe
ljmp
loope
addl
in
mov
dec
pop
jg
imull
fimull
cmp
sub
imul
mov
andl
push
fldenv
fs
sar
sbb
cmp
jecxz
cmpsl
adc
insb
subb
push
mov
mov
leave
mov
das
testb
aaa
mov
cmpsb
dec
loope
xchg
pop
addr16
mov
mov
les
jmp
test
cmc
push
xchg
imul
pusha
push
push
pop
sub
dec
push
ret
repz
fwait
cmp
ds
stos
jle
test
or
inc
dec
popa
clc
pop
push
inc
sbbl
or
sub
repnz
sbb
push
mov
xlat
xchg
pop
imul
fs
pop
mov
sti
fidivrl
or
mov
call
sbb
cmp
outsb
dec
fimuls
pop
dec
ror
loopne
dec
jmp
outsl
out
xlat
cmp
scas
stc
inc
sub
jnp
ljmp
lods
enter
leave
testl
jp
mov
lcall
inc
pusha
fsubp
mov
mov
mov
inc
sbb
sbb
icebp
movsb
out
inc
leave
or
fdivr
cli
ds
popf
outsb
adc
loopne
popa
inc
stos
cmp
pop
sbb
mov
push
cmp
cmp
outsl
mov
sub
xor
sbbb
repnz
ljmp
jge
jmp
or
orl
sub
lret
pop
das
imul
fprem
fcomp
sub
or
sub
mov
sbb
lods
shlb
mov
fadds
adc
fnstenv
or
inc
jp
mov
sub
sbb
adc
stos
in
into
sbb
pop
mov
or
or
mov
xor
sbb
pop
sbbl
or
pusha
lret
ficoml
mov
or
sbb
in
pop
mov
setnp
push
pop
cmpsl
add
dec
push
pop
push
push
or
call
cld
sub
ljmp
call
popf
sbb
push
aas
pop
fistpll
fidivrs
or
punpckhbw
cmp
jnp
add
pop
cli
ljmp
movsl
mov
iret
mov
dec
gs
or
lcall
xchg
xlat
or
and
cwtl
in
pushf
cmp
push
jns
mov
mov
adc
cmp
enter
or
ljmp
dec
jecxz
fidivrl
and
sbb
aaa
sbb
lret
insb
mov
inc
out
data16
test
in
cmp
test
fisttpll
sbb
sbb
jmp
cld
mul
scas
test
ljmp
in
imul
lods
sub
mov
sbb
push
arpl
sub
fisubrl
jmp
jecxz
jne
pop
out
push
out
pop
cmpsb
mov
fdivs
dec
call
mov
jbe
cmp
lret
outsl
jmp
dec
dec
push
xor
pop
mov
fs
bswap
stc
sub
sbb
addr16
fmul
lret
mov
arpl
call
dec
ds
sub
insl
xchg
sub
call
sub
outsl
imul
adc
hlt
jl
cmp
js
mov
ljmp
jg
std
enter
xchg
daa
pusha
mov
mov
inc
loope
cmp
and
jp
mov
out
fldenv
push
sub
rorb
out
lret
pop
sarb
inc
jo
lcall
addr16
sub
sub
fcmove
insl
xchg
addl
fstps
movsl
enter
mov
in
add
mul
inc
push
dec
mov
sub
test
jecxz
mov
cmp
scas
sub
mov
lcall
pop
dec
inc
icebp
aas
ret
lahf
add
pop
mov
push
arpl
fstpt
or
dec
prefetch
ljmp
push
and
mov
loope
dec
insb
push
add
aaa
mov
subl
cmp
imul
dec
cmp
xor
sub
and
inc
imul
aad
negl
insb
psubq
mov
dec
stos
jmp
insl
mov
lcall
cmp
test
sbb
js
jbe
sub
pop
or
call
sub
fcomps
push
lcall
cmp
jl
inc
push
lock
lods
mov
pop
xlat
out
or
sub
sub
jmp
ljmp
jp
enter
pop
add
inc
scas
test
lcall
repz
or
lret
and
addr16
dec
or
arpl
out
test
or
cmp
mov
pop
mov
inc
or
pop
cmc
cli
jnp
leave
push
out
cwtl
pop
jmp
movsb
ljmp
pop
enter
insb
inc
jl
push
jae
inc
or
call
jmp
jmp
aaa
int3
pop
adc
or
flds
dec
sbb
pop
lock
lret
stos
pop
lea
insb
pop
outsl
sbb
cmp
inc
cltd
pop
ljmp
ficompl
aam
lret
or
xor
jb
push
push
inc
out
jmp
jl,pt
bound
in
inc
fimuls
dec
cmp
inc
jmp
dec
inc
pop
xchg
dec
push
push
push
pop
stos
inc
movsl
sbb
daa
cmp
jmp
adc
or
fnstcw
fcmovnbe
aaa
adc
push
dec
cli
sbb
sub
mov
jae
gs
fpatan
std
dec
gs
neg
dec
das
clc
movsl
lcall
mov
adc
imul
jl,pt
mov
or
or
fwait
mov
or
and
dec
mov
dec
sub
and
das
outsb
sti
xor
jg
das
dec
pop
jmp
movsb
pop
popf
sub
pop
enter
sub
mov
jns
fld
inc
pop
pop
sub
leave
sti
or
push
xor
pop
jb
and
lods
cwtl
dec
sub
sbb
jg
push
popf
dec
inc
and
sub
stos
lret
push
loop
ret
sub
stos
hlt
pop
or
fldt
lcall
cmp
sahf
mov
ds
add
and
stos
push
dec
dec
adc
xchg
xor
test
add
or
jp
sub
leave
cmpsb
push
cli
das
xchg
push
sahf
sub
push
push
cwtl
sbb
jp
sub
dec
pushf
js
adc
outsl
adc
mov
pop
mov
sbb
cmp
pushaw
ljmp
jl
out
js
and
push
sbb
jg
lahf
into
dec
pop
inc
clc
flds
js
addr16
ljmp
jmp
sbb
sarl
imul
ljmp
shr
dec
or
dec
mul
pop
sub
cmp
mov
mov
inc
dec
and
lods
push
sbb
inc
lea
dec
es
sbb
or
les
fdiv
adc
sub
pop
imul
dec
or
sbb
sub
or
dec
fisubrl
leave
cmp
add
leave
sbb
sub
push
sub
lods
dec
sbb
sub
xchg
sub
sbb
gs
lods
sbb
xchg
mov
sub
or
dec
sti
sub
imul
jp
fdiv
pop
lods
pop
lea
mov
or
push
sub
cmp
insb
out
xor
xor
gs
dec
jecxz
mov
push
jns
adc
call
and
and
push
xor
jg
jmp
ss
call
fisttpl
lcall
xchg
jecxz
sub
cmp
pop
push
imul
dec
mov
xorl
ljmp
add
push
into
je
xchg
in
jne
loope
fs
inc
pop
xchg
pop
jmp
cmp
sub
cli
pop
jle
fisubrl
js
cmp
push
insb
mov
jp
in
jne
mov
das
or
adc
out
jl
add
and
and
or
dec
mov
stos
jmp
dec
sub
inc
pop
and
addr16
test
dec
inc
jp
or
or
sub
adc
outsl
mov
jmp
test
repz
cmp
cmpsb
lcall
leave
sbb
pop
push
mov
fldt
fstpt
xlat
or
sub
push
or
dec
hlt
inc
pop
and
imul
sti
pop
jp
negw
jmp
mov
popa
sub
dec
mul
inc
xchg
mov
cmp
outsl
xchg
sub
push
jmp
out
jp
insl
xchg
sub
enter
sti
push
mov
sti
mov
js
or
pop
dec
pop
in
mov
xor
dec
in
ljmp
sub
jp
stos
insb
call
pop
enter
lret
sub
dec
xlat
jge
sbb
jle
call
ljmp
addr16
sub
push
sub
loop
dec
data16
mov
lea
loopne
or
negl
sbb
stc
cmp
or
sub
call
repnz
fistpl
inc
pop
mov
mov
pop
jbe
xlat
jnp
cmpsl
and
ljmp
pop
dec
ret
sub
mov
stos
or
js,pt
cli
cli
dec
mov
push
jbe
cmp
sub
enter
or
inc
cs
ljmp
jnp
adc
pop
movsl
sub
int3
dec
lea
dec
dec
movsb
or
out
and
imul
sbb
xchg
pusha
sti
in
mov
inc
ljmp
data16
push
xchg
lcall
push
mov
ficomps
clc
daa
sarb
repnz
dec
insb
pop
stc
cmp
sbb
dec
sbb
clc
sti
repz
outsb
add
das
jp
or
cmp
pop
cmc
outsb
test
pop
inc
enter
jae
jb
repnz
inc
enter
pop
cmp
call
xor
ds
dec
je
or
std
cwtl
sub
jo
out
xor
dec
mov
mov
jl
pusha
ja
data16
cld
or
adc
mov
pop
xlat
dec
mov
cmp
std
arpl
jge
fidivrl
pop
mov
xor
push
sub
inc
mov
xor
inc
movsl
dec
fs
sub
addr16
push
mov
cmp
jmp
ja
push
lret
xlat
leave
sub
mov
push
mov
jecxz
pop
mov
or
leave
mov
jae
cmp
pop
jmp
in
push
lcall
mov
and
push
or
jmp
test
js
in
iret
add
sbb
cmp
addr16
stc
insb
sub
mov
and
out
call
push
call
mov
mulb
dec
aad
xchg
pfpnacc
jge
mov
mov
pop
leave
mov
lock
lret
mov
jecxz
dec
pop
lods
cli
lcall
aad
sbb
cmp
pop
lahf
push
call
clc
insb
adc
sbb
mov
ret
or
fmuls
jle
and
inc
xchg
push
pop
pop
sbbb
lcall
je
sbb
fsub
clc
and
fs
or
pop
lret
lahf
das
jp
push
pop
outsb
mov
ljmp
mov
jmp
jnp
sti
cmp
dec
mov
sub
mov
bound
stos
pop
lret
insb
stos
mov
shl
in
sub
or
dec
pop
lret
push
out
jns
push
or
loop
leave
aaa
outsb
cmp
sub
in
add
or
mov
ljmp
mov
fcomps
mov
outsb
dec
or
mov
xor
push
pusha
cs
fldl2e
xlat
sbb
cli
sbb
or
mov
stc
pop
adc
in
pop
mov
dec
stos
insb
lods
cmp
jl
call
cmp
jno
jo
pop
pop
mov
stc
and
lea
sub
or
sbb
push
jno
xchg
or
pop
call
leave
sub
jle
mov
xchg
cwtl
inc
pop
cli
popa
insl
sub
inc
jp
addr16
dec
fmul
or
scas
lods
pop
cmc
sbb
js
fistpll
cmp
dec
mov
jp
adc
aaa
cld
cmp
ljmp
push
idivl
stc
dec
and
sbb
or
sub
jl
enter
cmp
rorb
mov
movsl
mov
cmpsb
pop
pop
movsl
sbb
push
negb
sbb
fcomps
sti
enter
mov
jo
jl
pop
cmp
ljmp
clc
add
or
fmulp
ljmp
sub
lret
rorb
out
notb
dec
mov
das
je
loopne
test
gs
sub
mov
pop
test
addr16
sti
dec
jecxz
pop
pop
mov
stos
clc
cli
sub
fdivrs
cmp
sbb
mov
int
movsl
cmp
sarb
jl
or
leave
pushf
sbb
fnstcw
ljmp
mov
mov
mov
jne
xchg
or
xor
jl
push
cli
ljmp
iret
pop
mov
idiv
xchg
leave
sbb
gs
jae
ljmp
pop
sbb
subb
jp
push
xor
lret
pop
cli
inc
in
fnstenv
adc
sub
mov
shrb
mov
pop
mov
adc
in
inc
stc
pop
enterw
pop
sti
imul
andl
mov
inc
sub
js
dec
fs
pushf
push
cmc
sti
or
loopne
sbb
jns
jge
enter
fldt
jmp
jp
popf
jmp
fbld
or
pop
mov
aam
sbb
xchg
out
adc
push
dec
call
test
mov
sub
jp
or
jecxz
sub
xlat
dec
xlat
or
jg
mov
call
push
hlt
cmp
sbb
insb
test
cmp
pop
sahf
mov
test
std
mov
pop
movsl
pop
sbb
sbb
adc
nop
jmp
mov
push
stos
lret
imul
icebp
add
mov
aad
imul
adc
pop
or
dec
or
mov
movsl
sub
insb
sub
mov
lock
xchg
sub
aaa
or
mov
dec
fucomi
push
mov
mov
sbb
push
xchg
pusha
and
xor
popf
test
test
adc
stc
cmc
unpckhps
mov
in
enter
pop
push
adc
adc
js
cs
jmp
cmp
cmp
xlat
scas
or
add
out
add
mov
test
cmpsl
leave
ljmp
pop
xor
sbb
mov
or
movsb
in
mov
and
inc
imul
fisttpl
js
sub
mov
jp
flds
cmovnp
andb
or
pushf
popa
popa
or
leave
and
in
mov
sbb
and
jmp
and
bound
pop
stos
xlat
call
insb
testb
xor
sub
ljmp
mov
std
dec
popf
mov
stos
sti
stos
sub
cli
cmp
stc
add
mov
or
sbb
clc
shrl
inc
pop
outsb
ret
sbb
push
jo
inc
sbb
pop
or
jp
jle
mov
daa
push
imulb
inc
or
mov
jp
loope
test
jl
fcomps
pop
push
dec
imul
or
test
jae
aas
clc
fsubr
or
jp
div
add
mov
mov
pop
fisubrl
push
xchg
loope
out
pop
and
gs
cli
jge
or
sbb
daa
shlb
fwait
stc
mov
sbb
mov
ds
sbb
push
or
test
cli
mov
push
or
pop
mov
push
ss
lcall
lock
xor
repnz
fcomp
cmpsb
pop
jbe
xlat
stos
ret
inc
stos
lods
clc
dec
mov
push
test
mov
out
mov
test
sarl
jbe
sub
call
out
or
adc
scas
mov
icebp
fsubs
out
lahf
pop
cli
push
outsl
hlt
insb
mov
cmp
inc
inc
mov
enter
cltd
or
push
mov
inc
sbb
pop
pop
mov
pop
mov
imul
fucomp
orl
sti
mov
enter
sub
cli
nop
ret
or
mov
sbb
mov
mov
movsl
dec
dec
cwtl
mov
push
stos
call
sahf
sbb
sarb
sub
stos
mov
sbb
mov
mov
xor
dec
xor
push
fwait
jp
scas
in
data16
pop
sbb
cmpb
or
mov
mov
xor
jp
push
cmp
cmp
jne
or
cmp
sbb
and
dec
sbb
and
daa
in
enter
mov
lods
cmp
or
ret
jle
sub
or
fmuls
inc
sbb
dec
mov
fisubrs
pop
data16
sbb
in
push
adc
fsubs
lret
dec
jmp
jnp
sub
xor
shll
dec
out
jp
xor
pop
push
sets
push
cmp
pop
je
cmp
jmp
mov
arpl
pop
sbb
ljmp
dec
jecxz
jne
xor
push
pop
in
fs
repz
les
sbb
cli
pop
lret
insb
lea
ja
mov
jecxz
mov
fnstcw
dec
push
inc
sub
ljmp
in
jp
sub
stc
jae
loopne
sbb
push
and
mov
cmp
dec
mov
sbb
call
dec
dec
aaa
dec
cmc
mov
out
imul
ja
cwtl
mov
pop
ficomps
js
jecxz
std
pop
mov
dec
arpl
fidivrl
sbb
test
cwtl
cmp
stos
fnstcw
sub
jl
pop
insl
imul
sub
dec
das
pop
fcomps
sbb
idivb
push
nop
mov
movsl
cmp
imul
jle
cmp
sub
or
and
subl
jl
sbb
test
sbb
cmp
out
sti
or
push
jmp
in
mov
dec
lret
dec
pop
jns
push
xchg
dec
pop
sub
out
stos
jecxz
ljmp
fmuls
cmp
pop
jecxz
negl
addr16
jp
or
stc
pop
iret
in
aas
mov
stos
pop
rcr
movsl
inc
or
sub
inc
lcall
dec
loope
clc
loopne
push
xor
fcompl
lcall
fisubl
out
ljmp
shlb
fnstcw
ljmp
and
rcrb
push
push
dec
add
pop
addl
out
popf
in
and
dec
xor
cmp
popa
aaa
mov
imul
push
or
push
add
pop
cmp
or
mov
sub
imul
out
out
data16
mov
lcall
js
ljmp
cld
pop
sub
aaa
mov
scas
addr16
or
sbb
dec
dec
int
pop
mov
push
cld
sbb
pop
fisttpl
mov
cmp
shrl
imul
enter
dec
mov
cmp
add
push
adc
sub
and
popf
je
and
add
jns,pt
movsl
test
sub
jp
popa
rorb
cmp
testl
adc
jae
inc
pop
insb
pop
loop
dec
aas
push
pop
sbb
fldcw
loope
dec
out
sub
dec
in
sbb
sub
pop
cwtl
imul
add
cmpsl
sbb
arpl
push
mov
xor
insb
out
sub
add
jmp
loop
out
lahf
imul
or
fldl
cmp
sub
pop
lcall
mov
xlat
jae
or
xchg
dec
sub
mov
add
idivl
xchg
push
jmp
lea
or
or
fcmove
push
nopl
pop
pop
dec
xchg
dec
ja
jp
mov
sub
pop
dec
movsb
push
leave
fimuls
push
call
test
add
nop
fildl
pushf
mov
call
leave
cmp
jl
cmp
inc
cld
dec
dec
add
jp
pop
or
sbb
jmp
out
sbb
call
mov
ret
inc
test
imul
lcall
and
mov
dec
cmp
or
pop
xor
or
dec
leave
pop
negl
das
out
sti
fdivrs
xor
adc
sbb
and
push
mov
sbb
insb
fistpll
test
mov
lret
sub
je
push
dec
jo
or
push
hlt
push
sub
jp
fcompl
shl
add
cmp
mov
sbb
stos
dec
lea
mov
sub
pop
pop
dec
call
mov
jmp
jmp
or
jmp
inc
mov
pop
xor
rorl
pop
xor
mov
fnstenv
inc
ret
in
push
xchg
jmp
jp
jg
or
clc
fs
push
bound
push
loop
cwtl
test
fidivrs
push
dec
pop
sub
addr16
sub
insb
stos
or
lods
cmp
in
push
std
enter
ja
stc
jmp
fisubrs
sub
pop
insb
out
and
mov
dec
inc
mov
adc
xchg
or
jp
dec
out
sbb
adc
sarl
xor
scas
pop
sbb
cmp
fs
pop
pop
cli
loop
mov
cmp
js
or
pop
sub
push
jmp
cmc
pop
sbb
dec
rcll
dec
insb
xchg
cli
jp
scas
sti
mov
call
in
jnp
mov
cmp
stos
mov
and
jno
xor
gs
and
mov
fs
sbb
dec
popf
sbb
pop
push
xchg
pop
or
and
push
push
imul
sbb
ja
nop
ss
inc
dec
adc
iret
jg
fsubrl
cmp
data16
cmp
mov
dec
js
fucomp
sti
mov
jmp
out
stc
stos
xchg
jmp
imul
cmp
clc
test
jp
push
mov
lods
push
mov
fmuls
cmp
lret
call
fstpl
jecxz
sub
xlat
adc
mov
stos
cmp
leave
mull
lcall
dec
jp
xlat
jle
dec
jecxz
jmp
mov
ljmp
out
jo
int
inc
in
fcomi
inc
adc
sbb
leave
stos
pop
lea
shlb
sub
js
out
into
pop
or
sub
jmp
pusha
lret
dec
negb
or
out
insb
dec
cmp
in
in
mov
mov
aas
and
dec
fstpt
das
enter
ficompl
pop
push
test
sbb
pop
sub
or
xchg
push
add
sub
js
pop
jo
and
ret
stos
sub
addr16
shll
sbb
sub
pushf
outsb
and
lods
pop
sti
scas
cmp
out
stos
bound
or
sbb
mov
push
lods
sbb
js
pop
aad
jg
call
cli
fcomps
cmp
into
dec
pop
mov
sbb
cmp
shrl
js
fdivr
mov
or
lcall
or
ds
ljmp
out
int3
fmul
subl
mov
cmp
lcall
mov
bound
xor
mov
arpl
sbb
jg
jle
ljmp
mov
mov
insl
jo
fidivrl
cmp
pop
pop
xchg
cmp
std
or
jp
dec
cwtl
das
pushf
jmp
jmp
pop
mov
adc
or
sub
inc
leave
sti
sbb
inc
int
ljmp
sbb
in
cmpsl
cmp
or
dec
mov
aas
sbb
pop
cmp
gs
dec
test
data16
mov
ficompl
pop
cs
leave
scas
jecxz
mov
fldl2t
fdivs
decl
addl
mov
sub
jmp
mov
mov
sbb
or
or
push
mov
fprem
lods
mov
arpl
fistl
sub
testl
sub
push
pushf
cmp
mov
fsubrs
repz
fidivrs
fisttps
shll
add
add
insl
jl
stos
jp
popa
sub
orl
mov
xchg
shr
ret
sub
ja
or
or
imul
js
mov
cmp
jne
ret
jp
lods
dec
stos
sub
inc
fs
pop
cmp
adc
bound
dec
sub
or
fsubrs
pop
inc
insl
adc
cmp
popa
clc
clc
sbb
add
push
jge
orb
xor
pop
leave
mov
dec
dec
lcall
call
pop
cmp
or
pop
cli
dec
cmp
jmp
daa
lods
jl
jmp
ljmp
or
in
in
dec
sbb
sub
out
sbb
xlat
pop
sbb
stc
fldcw
mov
scas
sub
jp
popa
cmp
cmp
and
cmp
pop
addb
incl
das
push
cmp
or
mov
mov
mov
pop
jecxz
lods
jp
addl
cmp
cmp
dec
lcall
lret
dec
pop
dec
pop
lea
fstpt
sbb
leave
out
and
insl
adc
lock
mov
dec
sbb
lret
popf
sbb
mov
popf
push
popa
std
outsl
cld
jmp
mov
stos
dec
lea
pop
or
incb
out
call
sub
jo
test
insb
cmp
orl
cmp
push
sti
decb
cmp
lret
clc
pop
sti
pop
or
mov
stc
jo
jl
pop
pop
sub
xchg
or
push
repz
stc
dec
sti
jcxz
sub
lds
mov
test
and
pop
pop
cmp
cs
mov
lods
pop
pushf
and
scas
dec
sbb
lret
cwtl
stc
imull
adc
jl
dec
das
dec
insb
mov
sub
fnstcw
pop
fsubp
pop
idivb
or
pusha
popf
dec
cmp
jg
push
push
testl
es
out
ds
in
or
mov
pop
ljmp
dec
out
daa
vpmacsdqh
mov
or
jmp
popf
pop
sti
fnstenv
dec
cmp
addr16
js
mov
call
xchg
scas
dec
or
repz
mov
push
sub
ljmp
xchg
cmp
dec
sub
dec
sbb
pop
in
scas
cmp
xor
push
js
call
mov
inc
int3
jmp
pop
enter
adc
jmp
jbe
sub
push
cmpsb
pop
jo
imul
sbb
pop
ljmp
aaa
or
cmp
dec
icebp
outsl
mov
or
sub
lds
dec
jg
pop
shl
pop
push
sbb
jbe
outsb
or
ljmp
daa
dec
sub
pop
push
or
sub
inc
test
cwtl
adc
jne
xorb
fldt
push
dec
cmp
mov
rcrb
xchg
ds
push
cli
mov
mov
icebp
sub
jecxz
aas
dec
sub
sbb
or
sbb
xor
sub
fimuls
mov
xchg
fsubs
stc
or
ljmp
shl
nop
sub
test
mov
cs
sbb
repz
js
xchg
jp
out
mov
push
lods
mov
mov
lret
loopne
sub
sub
jmp
mov
repz
adc
fucomi
dec
test
xchg
lret
stos
mov
gs
or
inc
js
push
fcomps
pop
sbb
cmpsb
sti
sbb
mov
fcmovnb
mov
into
or
jp
nop
pop
dec
or
out
xor
add
sub
mov
test
ljmp
lret
ror
mov
repnz
in
mov
and
cmpsb
movlps
mov
call
testl
pop
add
ds
incb
fnstenv
xchg
cmp
jmp
dec
js
xchg
daa
out
dec
inc
add
xor
mov
push
xlat
pop
xchg
sub
std
test
push
adc
rorl
or
into
sub
jp
or
sbb
imulb
rcl
pop
scas
movd
push
imulb
mov
cmp
je
xchg
dec
js
mov
sub
adc
or
inc
in
or
imul
mov
ljmp
jmp
push
insb
movsl
pop
sub
xchg
and
inc
ljmp
push
scas
stc
lcall
leave
insb
jl
sub
or
mov
bound
in
std
idivl
or
das
pop
mov
sbb
ja
add
jle
sbb
or
psrlq
sub
ficomps
jg
push
lcall
dec
imul
dec
stc
pop
mov
push
addr16
or
cmp
push
jp
jmp
sbb
pop
neg
sub
fstps
insl
gs
cmp
dec
xchg
or
or
xor
cwtl
movsl
pop
push
xchg
fsub
jmp
test
mov
mov
or
insl
jg
xchg
subl
xlat
jmp
sbb
jmp
call
pop
sub
jp
cwtl
clc
mov
push
add
call
or
in
addr16
cmp
push
xchg
cmp
ja
add
jo
insb
sti
lret
push
dec
in
adc
fadds
lcall
sub
lret
sub
cmpsl
xchg
or
sub
jg
dec
enter
pop
fcomi
sub
xchg
cli
and
cld
mov
mov
insl
sbb
or
lret
mov
mov
mov
fistl
adc
lret
push
mov
push
movsb
sahf
stos
push
ja
sub
sub
pusha
jno
scas
leave
test
inc
add
sub
pop
ret
cmp
out
cmp
pop
cmp
adc
in
sbb
pop
pop
aam
mov
inc
mov
or
mov
fadds
std
lret
imul
cld
mov
dec
jmp
xor
stc
push
arpl
daa
icebp
cli
outsb
sbb
pop
push
insb
jnp
mov
cmp
in
xchg
push
aaa
das
lcall
ss
lea
lret
or
shlb
mov
or
les
lcall
fiaddl
insl
sub
fs
movsl
or
out
vmread
out
cmp
mov
sti
fldt
cmp
xchg
xor
and
sti
mov
add
mov
out
jb
sbb
adc
cwtl
add
mov
imul
shlb
add
mov
dec
xor
scas
sub
pop
addr16
push
pop
jno
sub
stos
insb
dec
jmp
cmp
mov
stos
jmp
push
cli
out
dec
jecxz
imul
mov
sti
sbb
jo
shlb
mov
cmp
jnp
inc
sub
push
loope
cmp
or
xchg
add
pop
mov
or
push
pop
or
jg
jmp
dec
bound
push
fimull
jmp
jo
aam
icebp
lea
cli
adc
popa
push
mov
jecxz
inc
push
sbb
jnp
fcomip
test
add
shlb
fnstcw
cwtl
inc
mov
pop
jg
fstl
movsl
and
mov
jl
cwtl
negb
sub
mull
pushf
repnz
dec
pop
dec
push
adc
jmp
and
testb
inc
movsl
ja
mov
sbb
enter
ljmp
sbb
jmp
rclb
pushf
sub
push
pop
sub
inc
and
or
ret
pop
adc
or
js
xchg
test
add
call
bound
push
test
and
fldt
mov
pop
push
subb
fs
sub
mov
inc
fwait
call
movsl
stos
out
mov
movsl
inc
pop
sub
or
jnp
cmp
cmp
and
jecxz
sub
jp
fucomi
jmp
mov
push
pop
jg
push
cmp
sub
sub
push
inc
jl
scas
fisttpl
imull
sbb
ds
push
xor
call
dec
cmp
dec
cmp
das
call
inc
inc
sub
inc
call
sti
add
lret
cmp
lret
jp
inc
mov
test
jmp
or
sbb
std
mov
dec
stos
or
xor
and
imul
mov
inc
mov
sbb
dec
xchg
push
stos
cwtl
insb
nop
push
inc
decb
fcos
popa
mov
sub
adc
pop
int3
xchg
dec
loope
fildl
inc
pop
aaa
jmp
je
insl
or
dec
pop
nop
mov
test
lea
and
mov
dec
push
pop
stc
js
pop
sub
mov
cmp
jmp
jne
jnp
push
lock
out
stc
jb
sbb
sbb
push
or
inc
jb
xchg
jl
cmpsl
jmp
push
pop
mov
lcall
imul
push
xlat
aad
pop
add
imul
sbb
dec
jecxz
loope
adc
addr16
dec
or
insb
pop
mov
sub
cli
daa
repz
dec
dec
mov
cld
out
or
dec
aaa
jl
push
enter
mov
xor
fisubrs
or
negb
jl
push
xlat
cmc
arpl
xor
inc
or
pop
lea
shl
ljmp
leave
mov
das
dec
test
dec
cmp
mov
dec
pusha
andb
mov
ljmp
mov
sbb
leave
xchg
mov
inc
cmp
dec
mov
add
test
sbb
cld
ljmp
pop
cwtl
aas
sub
mov
std
call
inc
pop
movsl
hlt
add
xor
imul
test
or
mov
or
pop
outsb
dec
jo
or
cld
loope
xor
sub
sbb
cltd
jae
data16
imul
sub
aas
cli
sbb
sbb
jp
movsl
test
mov
pop
push
jmp
pop
fstps
js
bound
shlb
fsub
int
pmaxub
cmp
sub
pop
inc
mov
fldenv
ds
mov
pop
stos
mov
in
fmul
dec
lcall
fs
push
xchg
cmp
or
jmp
lahf
dec
cli
add
inc
sub
pop
mov
adcb
fldcw
insb
mov
test
push
sub
pop
leave
lock
popf
jp
cwtl
fcoms
lods
or
or
mov
mov
pop
ljmp
jecxz
ljmp
sub
pop
loope
xor
sub
sbb
cmp
add
mov
xlat
push
out
cmc
jmp
leave
sbb
in
in
sbb
cmp
push
pop
sbb
or
xchg
pop
mov
dec
dec
ljmp
cs
stos
push
pushf
fndisi(8087
mov
sbb
push
jb
lret
fldlg2
mov
sbb
push
sbb
call
cli
cld
dec
dec
cmpsl
ret
mov
adc
push
shll
or
stc
sub
jbe
dec
cwtl
mov
call
leave
or
jnp
sbb
mov
ljmp
in
loopw
sub
ret
push
dec
loopne
jp
cmpsl
fistpll
add
xchg
dec
push
mov
inc
pop
aaa
insb
popf
mov
lahf
and
mov
ret
ljmp
jmp
mov
sub
arpl
fsubr
cltd
dec
inc
mov
pop
add
sbb
cwtl
push
dec
pop
jae
push
fldcw
mov
div
or
inc
out
lcall
movsb
push
ljmp
pop
clc
test
cli
dec
ljmp
xchg
or
jl
cmp
popa
divb
fmul
xchg
sti
push
popf
mov
sti
or
and
push
dec
clc
jmp
sub
adc
pop
jno
cmp
cwtl
stc
sub
push
jge
jmp
or
clc
cmp
add
jmp
jle
cmp
or
daa
bound
push
lret
popf
test
js
xchg
or
out
or
jmp
or
ds
cmp
push
xchg
push
mov
jl
subl
xlat
mov
leave
in
adc
popa
mov
sub
fidivrs
into
jmp
cmp
cmp
and
jo
adc
cltd
pop
push
fstpt
cs
subb
es
out
jb
sbb
or
cmp
imul
mov
xlat
cmp
cmp
or
fmull
sub
loope
or
mov
cmp
inc
mov
sbb
and
jp
jmp
idivl
mov
xchg
rorb
pop
imul
enter
cmp
push
sbb
jnp
das
or
sti
pop
daa
imul
imul
leave
fnstcw
mov
negl
pop
jb
mov
fcomps
data16
jne
stc
mov
pop
sub
sbb
mov
pop
movsl
cmp
cwtl
and
aaa
cli
je
jbe
add
rcl
push
addr16
adc
pop
mov
dec
mov
arpl
sbb
repnz
jl
cmp
xchg
leave
pop
jne
jp
pop
sub
mov
mov
sti
cmp
js
pop
xlat
pop
fisubrl
or
inc
mov
sbb
mov
sbb
stc
or
cmp
test
es
mov
dec
or
lock
sub
inc
mov
jmp
sbb
lret
lret
mov
shrl
stos
cmp
insb
or
lret
jp
pop
mov
sbb
push
xlat
mov
cmp
pop
cwtl
loopne
jp
leave
xlat
inc
xor
leave
stc
xor
imul
mov
rcll
lcall
sbb
rorb
and
sbb
dec
push
fstps
clc
pop
adc
ljmp
lret
xor
cmp
sub
out
or
movsl
test
negl
cmp
sub
and
ds
arpl
fsts
ficomps
bound
mov
inc
inc
dec
clc
roll
lea
or
dec
stos
sub
pop
xchg
scas
sbbl
lret
out
or
jo
insb
sti
fisttpl
js
dec
sub
pop
cmp
mov
fidivrl
orl
mov
mov
icebp
cmp
pop
cmpps
or
movsb
std
sub
sahf
mov
daa
xor
jl
push
or
or
push
enter
mov
sub
push
sub
sub
cwtl
fisttpl
in
mov
pop
pop
push
or
aas
mov
dec
daa
inc
dec
inc
adc
mov
sub
cmc
aas
or
mov
pop
adcl
ja
cmp
test
push
fisttpl
mov
and
xchg
mov
cwtl
jmp
mov
push
mov
incl
jno
jge
pop
inc
push
fidivrs
xchg
sbb
insb
pop
shr
and
cs
sbb
pop
test
pop
mov
jnp
xchg
push
push
mov
ds
lcall
push
pop
jmp
push
mov
sahf
cmpl
cs
cmp
ljmp
mov
pop
mov
idiv
test
mull
adc
adc
sti
xchg
xchg
out
ljmp
push
or
pop
ja
add
pusha
mov
mov
jmp
stos
or
sbb
sbb
mov
pusha
data16
cmp
dec
pop
mov
scas
negb
movsl
mov
inc
mov
pop
dec
xor
add
out
lods
jp
sti
movsb
mov
jecxz
sub
inc
mov
int3
ja
push
mov
sti
out
hlt
inc
addr16
clc
pusha
mov
dec
leave
jmp
cmp
and
jmp
cmp
scas
mov
and
mov
stc
es
cmp
mov
xlat
jecxz
pushw
add
fcomps
pop
cli
call
pop
or
mov
cmp
sbb
push
sbb
fimull
sub
and
test
xchg
sub
testl
test
or
sub
mov
cmp
stc
sub
mov
inc
dec
test
push
or
push
pop
xlat
jo
testl
cmp
jb
cmp
push
icebp
pop
push
test
test
and
cmp
jp
cwtl
in
pop
scas
jno
pop
dec
sti
ljmp
sbb
xchg
in
scas
cmp
push
or
or
cmpsl
bound
push
in
xlat
cwtl
js
lret
push
xchg
sub
sbb
stos
cmp
xchg
mov
jb
and
push
int
icebp
loopne
insb
fistpl
jo
and
cmc
test
fdivp
push
or
ds
pop
inc
sbb
cmp
jb
xlat
jae
pavgb
in
sub
mov
or
add
scas
sbb
sbb
fsubl
sub
lock
inc
lcall
sub
decb
insb
scas
in
mov
push
out
cmp
mov
cmp
or
pand
pop
test
jmp
mov
inc
fldcw
inc
pop
out
cmp
shll
push
ljmp
sub
push
sbb
leave
pushf
cmp
dec
int
lret
mov
cmc
mov
pop
js
xor
mov
mov
jge
nop
xchg
imul
jecxz
mov
jecxz
push
or
imul
pop
sub
push
mov
jle
pop
mov
adc
pop
pop
jno
mov
test
pop
in
sbb
pop
insb
in
cwtl
sub
inc
subl
sbbb
and
sbb
sub
mov
clc
cmp
jge
xchg
dec
aas
cwtl
test
enter
lcall
cvtdq2ps
or
pop
inc
add
jne
lret
sub
dec
cmp
mov
add
icebp
lods
or
sbb
pop
dec
out
push
sbb
sarl
mov
add
loop
push
push
ljmp
icebp
sub
cmp
dec
xchg
mov
ja
and
daa
in
inc
mov
pop
push
mov
dec
mov
or
fisubrl
xor
nop
dec
xor
inc
push
or
mov
pop
out
stos
sbb
xor
clc
stos
or
aas
or
pop
test
cwtl
pop
mov
xor
mov
ljmp
into
pop
ret
jecxz
jmp
mov
imull
lret
and
sub
pop
cmp
dec
jmp
es
jl
sbb
sbb
sarb
push
es
lret
lock
rol
dec
pop
daa
inc
cmp
stos
dec
js
sub
leave
fdivs
jmp
pop
mov
out
sub
and
sarb
das
testb
pop
data16
fstpt
js
imul
sbb
pop
pop
xlat
cmp
pop
push
leave
sbb
inc
stos
das
or
test
addr16
ljmp
jmp
pop
int
cmp
mov
mov
mov
dec
stc
adc
dec
sub
js
lea
repz
lods
dec
pop
pop
aaa
xchg
pop
mov
add
sub
pop
mov
and
sti
pop
xlat
cmp
call
sub
jne
cmc
popa
mov
insl
lock
cmpsl
dec
nop
imul
cmp
xor
jmp
mov
xlat
push
lcall
js
ljmp
nop
pop
jno
inc
jmp
xor
iret
jp
sbb
vpsubd
sbb
popf
lret
mov
out
mov
pop
or
jae
cmp
cmp
jg
pop
cmp
stos
insb
sbb
mov
in
sbb
xor
out
sub
fldcw
dec
pop
or
sahf
sub
mov
std
mov
insb
add
ret
push
cwtl
mov
fcoms
sti
push
clc
pop
leave
cmp
sub
mov
fs
in
fisttpl
mov
adc
cli
dec
call
jmp
sub
cmp
stos
mov
dec
ret
or
popf
jmp
lcall
ret
ret
mov
outsb
lea
mov
sub
sbb
sbb
mov
in
mov
inc
sti
jns
mov
test
out
js
daa
in
mov
sbb
scas
loope
xlat
sbb
dec
lret
das
xchg
xlat
sbb
lds
or
or
jae
mov
negl
pop
dec
stos
mov
movsl
out
in
sbb
dec
mov
sub
pop
pop
sbb
maskmovq
negl
dec
jp
gs
fildl
aas
and
sub
fisttpl
dec
add
jg
bound
mov
fiadds
pop
leave
or
pusha
mov
mov
call
ljmp
adc
push
sub
orl
fsubrp
sbb
fincstp
into
iret
cmp
and
jecxz
fisttps
sub
negb
dec
add
mov
cmp
mov
or
cmc
jl
sbb
pop
stc
flds
cwtl
push
fs
sub
inc
lret
or
fs
sub
or
scas
mov
lock
sbb
movsb
mov
sub
jmp
xchg
push
xchg
stos
xchg
sub
mov
mov
mov
inc
mov
mov
subb
lahf
inc
movsl
jmp
mov
xchg
outsl
or
sbb
ljmp
or
xlat
jl
mov
fnstcw
sub
sub
test
stos
push
jmp
dec
mov
push
out
inc
test
loopne
cld
cmp
pushf
cwtl
dec
cmpsb
jne
ljmp
js
test
dec
push
lock
sbb
cmp
fsubr
mov
inc
je,pn
jle
sbb
cmpsl
and
jl
cld
lcall
gs
push
pop
movsl
mov
test
mov
push
das
fisttpl
fcoms
cwtl
jmp
cmpsb
ljmp
fisttpl
fistpl
imul
and
dec
xor
cmp
inc
inc
cmp
push
data16
mov
sub
insb
out
xlat
sub
xor
pop
mov
imul
xor
in
cmp
imul
jmp
mov
pop
call
or
lret
add
xchg
cmpsl
cs
sbb
mov
sbb
dec
cwtl
push
sbb
dec
sub
addr16
sti
ja
bound
mov
sub
or
fsub
dec
sbb
lret
and
push
enter
stc
fldcw
pop
ret
xchg
pop
xor
cmp
insb
add
cmp
mov
insb
pop
mov
inc
outsb
daa
adc
cmc
negb
pop
cmp
sbb
cmp
jmp
cmp
dec
cs
push
popf
lret
mov
sub
cmp
div
pop
xchg
js
fs
enter
fmul
mov
test
push
inc
cwtl
rolb
mov
sub
push
jae
ljmp
lcall
dec
jo
sarl
cmp
jmp
fidivrl
mov
cmp
jmp
imul
out
lret
js
fcmovnu
into
push
inc
cld
cmpsl
stos
lea
js
dec
arpl
or
dec
popf
clc
lods
mov
pop
pop
and
inc
push
cmp
xchg
cmpsb
or
sbb
cmpl
or
dec
aam
fcomps
jl
jl
inc
push
mov
mov
out
cli
andl
fldl2t
jg
xchg
outsl
sbb
jl
pop
sub
dec
js
xlat
xor
cmp
mov
mov
mov
into
sbb
fs
pop
inc
jp
popa
xchg
dec
pop
dec
popa
addr16
jl
ljmp
leave
jmp
fldt
fstpl
mull
addb
iret
add
cmp
fs
lret
stos
insb
jae
xchg
fcomps
jp
dec
push
pop
pushf
cmp
pop
mov
mov
arpl
push
test
sbb
movsl
mov
lcall
std
insb
test
cwtl
or
pop
cmp
pop
lahf
or
cmp
xchg
test
lea
push
sub
inc
or
sbb
inc
sub
stc
xlat
scas
cli
fidivrs
pop
sub
or
fisubs
addr16
jmp
inc
or
xor
pop
mov
adc
or
lret
js
rcrl
scas
xlat
jecxz
ljmp
inc
jp
lret
ljmp
sti
lret
push
or
cmp
xlat
jp
push
call
mov
jp
sbb
mov
jmp
out
pop
cmp
mov
dec
sbb
cmp
adc
push
lea
mov
lods
repnz
sti
adc
xchg
dec
divb
pop
lahf
mov
or
xor
xor
je
movsl
outsl
inc
jl
ljmp
sbb
popf
sub
mov
pop
sbb
xor
sub
jns
and
adc
daa
repz
mov
inc
clc
sbbb
pop
mov
insb
dec
pop
sub
sbb
dec
loop
int
sub
pop
xchg
mov
pushw
sbb
divl
imul
jbe
fwait
mov
fwait
ljmp
mov
sbb
pop
lret
call
les
xor
nop
dec
in
sbb
fisubrl
sarl
stos
ljmp
jge
fstpt
lods
dec
pop
mov
enter
and
cmp
xchg
das
popa
clc
mov
sti
dec
mov
ljmp
stos
jp
adcb
sbb
or
and
in
stos
mull
mov
jp
xor
js
call
stos
lret
sub
xor
lea
push
testl
mov
fldenv
dec
sbb
or
jmp
dec
test
aad
fistl
and
xchg
test
xlat
mov
loope
call
add
cs
sbb
sub
push
movsl
push
mov
push
aaa
add
or
sub
fimull
cli
sbb
cmp
imul
rcr
shrb
lret
js
xchg
mov
mov
sarb
pop
test
pushf
enter
push
stos
mov
fiadds
xlat
stos
or
ljmp
sti
bound
dec
out
into
ljmp
test
testl
dec
dec
and
pop
sub
cltd
xchg
mov
sub
dec
mov
xchg
fdivrp
or
lahf
jp
xor
push
dec
pop
cmp
nop
or
aaa
out
mov
aas
shrl
cmp
dec
mov
or
addr16
testl
fnstcw
pop
sti
in
je
enter
inc
out
sub
or
fwait
jl
dec
cmp
push
jmp
enter
mov
cwtl
or
xchg
cli
xchg
cmp
sti
test
mov
cwtl
sbb
stos
mov
cmp
pop
movsl
adc
dec
jb
cmp
imull
int
ljmp
imul
pop
push
insl
nop
mov
sub
cli
xchg
ds
mov
insb
arpl
enter
sbb
xchg
mov
scas
cmovs
cld
sub
or
movsl
repnz
jns
repz
push
mov
sbb
repnz
insb
lahf
or
jge
nop
adcl
lods
test
or
or
fdivr
addb
jl
sbb
mov
bound
inc
fldcw
sub
dec
test
mov
jl
cmp
inc
push
push
cmp
sbb
icebp
arpl
imul
outsl
ljmp
mov
pop
mov
push
fucompp
repz
xor
sbb
pop
jb
dec
xor
push
dec
and
fistl
mov
repnz
enter
sbb
outsl
cmp
cmp
fisttpl
pop
jge
clc
pop
or
sbb
push
mov
mov
or
pop
add
push
xchg
pusha
jnp
dec
scas
or
sbb
dec
loope
inc
and
jmp
push
sbb
jp
std
xlat
mov
lea
fstpt
insb
inc
pop
into
cmp
dec
pop
rorb
jp
cmp
cmp
insb
or
inc
stc
pop
insb
call
pop
les
clc
or
jp
xchg
sbb
lret
je
in
inc
jp
inc
cli
out
xor
or
inc
jo
in
dec
sbb
sbb
pop
xlat
jl
inc
xchg
fistps
cmp
sub
out
sbb
sub
jnp
mov
movsl
mov
movl
and
pop
dec
push
pop
fs
push
mov
push
dec
dec
insl
jne
ljmp
jle
ficompl
add
jle
jmp
jmp
call
jp
cwtl
add
or
jo,pt
data16
or
or
leave
sbb
out
mov
mov
divl
es
clc
cmp
mov
dec
push
les
int3
mov
idiv
js
push
sub
sbb
lret
sub
aas
mov
cmp
sbb
divb
cltd
movsl
pop
or
sbb
pop
out
rcll
or
or
cmp
lcall
dec
jno
mov
push
test
jl
jo
sub
pop
pop
jp
sub
jmp
das
jbe
es
sbb
cli
popa
sub
mov
dec
test
aas
add
dec
dec
aad
pop
addr16
cmp
dec
imull
fisubl
sbb
pop
mov
int
rorl
dec
out
in
fcomi
cmpsb
stos
leave
enter
inc
pop
mov
push
or
fldt
and
dec
divb
in
sbb
mov
arpl
add
xchg
dec
and
sahf
stc
loope
or
dec
push
pop
lret
cmp
mull
sti
add
cmp
or
imul
push
dec
mov
sbb
cwtl
enter
dec
cs
mov
and
pop
pop
dec
pop
cmp
js
and
sub
das
mov
pusha
sbb
cli
pop
call
test
movsb
and
pop
or
insl
push
mov
mov
out
cwtl
ja
jmp
sub
pop
push
cmp
xchg
stos
pop
call
in
pop
cli
pop
jp
sbb
cmp
cmp
decb
push
add
into
js
sti
sbb
std
fisttpl
test
inc
clc
or
pop
fldenv
sar
fidivl
pop
sbb
pop
leave
mov
movsl
sti
out
sbb
pop
jmp
cmp
addr16
pop
sti
out
dec
scas
mov
sub
fildll
add
inc
dec
popf
xor
jecxz
xchg
xor
push
fwait
lret
jne
out
push
test
test
push
repz
popa
scas
or
in
fs
fidivrl
sbb
lahf
pusha
inc
sbb
cmp
in
fs
cwtl
inc
xchg
and
popf
pusha
subl
push
mov
jl
mov
mov
sbbb
gs
push
jmp
jp
jns
pmaxub
xor
mov
fdivp
ficompl
mov
fmull
push
movsl
out
pop
or
dec
movsl
out
into
or
movsl
pop
out
and
xchg
das
popa
dec
sub
xchg
mov
repnz
insb
cmp
sub
jp
push
adc
filds
sub
push
fisubs
sub
add
aam
mov
mov
repnz
jno
mov
jo
aaa
out
lret
push
out
fcmovnu
jp
scas
subb
cmp
mov
ficompl
cmp
sti
mov
stc
or
or
stos
aam
dec
sbb
mov
fs
pop
insb
fdivrs
or
cmp
lds
neg
pop
insl
cli
out
fnstcw
dec
sub
jg,pt
jle
fdiv
cli
divl
lock
arpl
or
push
or
out
cmp
push
or
sub
inc
mov
std
dec
or
iret
std
test
leave
pop
imul
pop
js
stc
xlat
and
xor
xchg
or
mov
cmp
clc
xchg
sbb
mov
mov
inc
cmpl
inc
mov
outsl
lret
cmp
test
outsl
sbb
mov
js
mov
into
pop
xlat
cli
lcall
fcomps
jp
adc
adc
mov
mov
rcr
mov
fninit
or
and
inc
mov
pushf
sbb
sahf
cmp
add
xchg
xchg
ljmp
lcall
clc
inc
cmp
xchg
jl
push
sbb
cmp
stc
enter
test
push
pushf
xor
mov
adc
inc
pop
jo
in
adc
dec
push
push
xlat
mov
mov
pop
mov
addr16
clc
dec
pop
jecxz
sbb
pop
dec
call
sub
js
sbb
pop
insb
inc
adc
stos
lcall
leave
test
insl
jmp
dec
xor
sbb
repz
add
jmp
xchg
incl
cmp
insb
sub
popl
pop
addr16
bound
test
cmp
push
ljmp
sub
test
mov
dec
mov
or
jge
and
sub
popa
jmp
pop
sub
push
test
or
in
mov
loopne
ss
sbb
pop
sbb
fcmovb
je
out
cmp
push
ljmp
push
mov
mov
inc
fsubrs
jbe
jno
push
mov
cmp
pop
decb
pop
dec
sbb
call
ljmp
pop
and
pop
imul
jmp
sar
sbb
jb
stc
je
enter
js
fdivrs
jecxz
into
sub
cli
clc
push
popf
or
cmp
push
test
cmp
mov
inc
mov
pop
dec
mov
and
sub
lret
js
decb
ficompl
je
inc
cmpb
jp
or
icebp
test
push
dec
or
or
pop
dec
adc
sub
or
cmp
mov
mov
clc
pop
mov
mov
sti
or
div
stc
or
das
dec
cmp
sbb
imul
sub
in
ljmp
or
popa
pop
xlat
insb
or
out
jle
mov
call
push
das
dec
cmp
ss
xlat
jge
inc
lds
sbb
lahf
insl
test
rcll
das
xor
fldt
sbb
fucomi
cmp
mov
sbb
out
sub
fidivl
pushf
or
data16
or
in
daa
push
je
and
xlat
jg
dec
pop
inc
dec
sbb
add
into
sbb
scas
mov
mov
cmp
addr16
sub
call
pop
pop
mov
icebp
mov
jmp
imul
pop
shrb
push
push
jo
mov
xor
ljmp
dec
stos
fsubrs
sub
int3
adc
cmp
out
fldt
pop
shl
mov
mov
fsubrl
es
mov
or
stos
sbb
pop
dec
scas
push
dec
ljmp
stos
std
dec
pop
dec
sbb
mov
jecxz
mov
in
pop
sbbl
inc
add
out
mov
dec
jns
daa
push
daa
js
dec
xchg
test
je
out
push
scas
mov
cli
xchg
loopne
leave
lcall
adc
stc
dec
addr16
neg
sub
stos
jnp
sbb
sub
js
stc
inc
int3
push
jbe
rolb
dec
pop
sub
sbb
mov
add
in
sub
or
add
sbb
lret
test
enter
dec
test
dec
out
xchg
sbb
add
jecxz
sbb
test
or
dec
or
out
dec
iret
pop
xchg
sub
decl
cli
ljmp
lret
sti
imul
jp
dec
movsl
out
push
or
mov
jno
dec
aaa
push
jl
dec
cwtl
dec
push
iret
mov
add
arpl
or
xchg
cmpsl
sub
jp
pop
adc
stos
arpl
sti
push
cmp
jl
repnz
js
cltd
xor
repnz
out
leave
imul
cmp
push
subl
pop
inc
mov
pop
test
mov
add
cwtl
sbb
or
or
lret
outsb
push
xor
jae
test
sub
mov
jge
sub
add
fiadds
mov
leave
adc
out
fidivrl
cmp
cmp
dec
pop
sbb
or
test
fnstsw
ljmp
cmpsb
mov
push
pop
mov
leave
inc
sbb
pushf
inc
call
sbb
arpl
dec
or
fildll
fmul
cli
jmp
pop
mov
fldenv
jae
ds
mov
inc
sbb
xor
test
stos
add
std
sub
cmpsl
or
fstp
mov
movsl
jp
pop
sbb
in
gs
or
push
or
cwtl
mov
push
pusha
ljmp
mov
jmp
sbb
insb
jecxz
sbb
dec
out
fidivrl
daa
inc
or
jmp
sbb
insb
and
pop
movsl
xor
pusha
fcom
and
cmp
xor
mov
pop
aaa
mov
sub
fimuls
sub
push
adc
js
mov
rorl
jl
cli
stc
dec
pop
addb
lahf
movsl
pop
sbb
into
xchg
dec
xchg
sahf
scas
cwtl
lcall
add
sub
sbb
xor
mov
dec
daa
clc
sbb
cmp
mov
imul
push
lret
cmp
cmp
arpl
cmp
adc
sbb
test
sbb
lods
insb
pop
dec
or
pop
jae
jle
jp
loope
sub
pop
leave
call
jl
outsl
fmull
cmp
fimull
push
stc
mov
xchg
adc
sbb
in
lods
mov
cmp
aaa
std
fucomi
repnz
dec
mov
sub
or
addr16
cmp
jmp
sub
pusha
out
dec
pop
mov
add
pop
sbb
inc
cmp
sbb
imul
jmp
sub
sub
or
subl
enter
data16
ljmp
push
jmp
pop
pop
fildll
sub
cmp
pop
imul
call
adc
ds
aam
test
cmp
or
aas
nop
mov
insb
sub
dec
inc
xchg
pop
pushl
dec
and
sub
push
jo
arpl
call
loope
sbb
enter
and
pop
dec
aas
add
fld
adc
js
mov
scas
stc
ljmp
dec
xor
jp
lods
dec
and
cwtl
sub
sbb
jmp
data16
insb
ljmp
jp
and
sub
push
inc
sub
fisttpl
dec
mov
sahf
popa
sbb
add
aaa
xchg
or
or
in
cmc
imul
pop
or
mov
sub
pop
stc
add
lds
fldt
push
std
pop
out
xor
ds
dec
or
mov
sbb
mov
aam
fidivl
fldcw
add
sbb
jnp
daa
cmpsl
push
jecxz
sbb
xlat
pop
ljmp
dec
jl
and
ljmp
enter
fldcw
dec
cwtl
insb
ret
cmp
test
push
cmp
adc
gs
stos
lcall
sub
pop
adc
out
sbb
dec
xchg
mov
stos
sub
mov
cmpsl
lea
lods
daa
mov
fdivr
mov
faddp
or
pop
testl
out
jns
push
jmp
jbe
sti
or
mov
addr16
out
mov
sub
in
xor
call
stos
int3
pop
add
sbb
insb
pop
pop
cmp
mov
lret
dec
mov
popf
neg
push
dec
cmp
js
insb
stos
sbb
or
jp
xor
dec
loope
mov
sbb
jmp
lret
push
dec
inc
clc
enter
lret
pop
outsb
sbb
cmp
push
lods
mov
push
or
pop
sub
clc
mov
jmp
inc
sbb
dec
dec
or
mov
pop
xor
pop
cmp
jl
dec
mov
sbb
imul
ljmp
cmc
cmc
jle
add
stos
dec
je
pop
fldt
jae
jae
cmp
pop
cmp
pop
pop
pop
testb
sbb
mov
sub
push
cmpl
fidivrl
incb
jl
cmpb
cmp
mov
pop
dec
mov
and
mov
dec
jle
dec
pop
or
pop
mov
out
sahf
orb
pop
ror
push
loopne
jp
dec
jnp
jmp
sub
or
sti
dec
inc
jl
outsl
stc
cwtl
mov
jbe
mov
inc
in
xor
stos
jmp
dec
fidivrs
stc
push
mov
sub
mulb
inc
mov
pop
xchg
add
xlat
imul
xor
lret
movl
lods
test
sub
mov
sbb
cmp
aas
inc
jmp
pop
mov
sub
aas
sbb
lret
or
and
fsubs
popa
imull
mov
out
sub
stc
call
dec
iret
jge
and
cmp
cmp
sub
sbb
dec
sbb
test
jle
enter
out
das
or
pop
test
sti
daa
sub
pop
fxch
lods
pop
mov
test
and
sbb
stc
dec
je
dec
mov
pop
mov
mov
sbb
or
cmp
or
andl
ljmp
inc
or
cmp
mov
jmp
mov
inc
adc
sub
xlat
jg
mov
arpl
pop
leave
dec
fdivrs
fisubs
imul
stc
in
stos
pop
sub
shrb
dec
lds
inc
cmp
arpl
insb
ljmp
stos
cmp
xor
sub
cmp
dec
out
lret
cwtl
cld
aas
or
or
lcall
push
sub
xlat
ffreep
sub
sbb
xchg
fimull
imul
push
sub
mov
enter
movsl
mov
test
insb
or
mov
pop
push
sbb
mov
scas
cmp
pusha
cmp
cld
pop
fisubrl
repz
cmp
cltd
insl
aaa
sub
cwtl
sbb
sub
fwait
or
sub
jp
aam
pop
cmc
out
pop
or
mov
pusha
cmp
out
mov
lahf
push
pop
cmp
test
jecxz
push
jmp
aas
cwtl
sub
lcall
into
add
push
cmp
sbb
gs
negl
call
out
and
pop
sub
mov
mov
sbb
bswap
pop
lds
or
dec
cmp
mov
sub
push
and
mov
test
dec
dec
sub
xlat
daa
insb
dec
sbb
inc
add
xor
push
dec
sub
andl
clc
jp
enter
or
dec
sub
mov
fdivrp
clc
sub
xchg
sub
ds
lods
push
mov
insl
add
insb
in
mov
or
dec
imul
adcl
test
jg
nop
out
cmp
sub
mov
push
sub
sti
add
call
sbb
out
adc
fadds
or
stc
jnp
and
jo
sub
or
mov
or
imul
aas
stc
jp
add
dec
or
cli
cmp
push
es
fstpl
inc
arpl
dec
js
insl
test
fstpl
jp
pop
clc
pop
mov
jb
push
mov
dec
out
xor
fistl
lcall
out
mov
inc
cwtl
repnz
bound
mov
sbb
imull
pop
mov
mov
scas
aam
dec
lret
sub
sbb
sbb
pop
push
sti
dec
sub
and
insl
pop
ljmp
lock
or
pop
insb
stos
popa
sub
jecxz
xchg
push
mul
cwtl
stos
xchg
jge
mov
ffreep
dec
mov
lcall
mov
ljmp
xlat
dec
cmp
sti
lods
lret
shlb
das
dec
dec
call
add
dec
imul
push
insl
fmull
pushf
sbb
push
ret
push
mov
jnp
mov
or
testb
les
ljmp
inc
mov
in
jp
sub
arpl
push
in
fidivrs
sbb
out
sbb
pop
cmp
loope
fcmovu
sub
jmp
ljmp
out
push
insl
xchg
sbb
andb
insl
jno
jmp
jmp
sti
xchg
outsl
push
call
fmul
mov
xchg
add
push
dec
cli
aaa
sub
or
dec
call
stos
xor
mov
sub
dec
out
insb
lret
lret
mov
js
lds
lret
inc
pop
pop
lcall
addr16
enter
mov
dec
jne
sbb
cmp
pop
cmc
mov
xchg
aad
cmp
and
add
dec
leave
bound
cwtl
rcr
or
movsb
insb
cmp
sbb
das
cmp
cmc
negl
stos
dec
jmp
cmp
ljmp
addb
call
jno
outsl
in
cmp
inc
popa
adc
and
mov
lret
or
inc
mov
sub
ficomps
jbe
lahf
ja
sub
jle
cwtl
icebp
ret
ds
push
fidivrl
inc
mov
ljmp
or
inc
cwtl
aas
out
cmp
clc
mov
movsl
imul
dec
and
pop
inc
pop
loopne
mov
dec
fmuls
lahf
std
testl
aaa
add
rorb
ficoms
sub
adc
sub
dec
xor
mov
sbb
sti
jmp
sub
arpl
sbb
gs
in
cmpsl
leave
stos
cli
dec
push
fcomp
lods
rclb
jmp
in
mov
dec
sti
mov
icebp
ljmp
outsl
js
pop
cmp
jp
stos
dec
fstpt
lret
or
loop
outsl
sub
or
lret
sub
je
dec
xlat
pop
js
sbb
jp
insl
scas
jmp
jno
lret
mov
add
lods
repz
fcmovu
pop
or
inc
pushf
ljmp
mov
arpl
in
cli
sbb
jae
lcall
fisttpl
jp
sub
fs
in
das
jbe
or
cmp
xchg
das
pop
jae
jmp
or
enter
or
jp
or
shll
xchg
inc
mov
push
clc
sbb
mov
sub
add
pop
cmp
lods
pop
pop
mov
clc
js
cmp
dec
cmp
dec
pop
stos
test
add
dec
jge
push
dec
daa
cmpsl
scas
mov
pop
and
mov
or
imul
lock
pop
inc
or
decl
sub
mov
ss
dec
shrb
or
mov
fcoms
mov
loopne
jp
dec
cmp
push
imul
or
add
mov
scas
into
sahf
movsb
in
jmp
or
or
mov
lahf
les
fidivrl
jo
add
ss
mov
fistpl
out
insb
orb
mov
lret
call
cmp
sub
scas
mov
jp
shll
testl
mov
dec
dec
pop
or
enter
sbb
aam
mov
outsl
xor
test
pop
cmp
sbb
sub
pop
jbe
dec
ja
cmp
sbb
jmp
or
push
shrb
cmp
pop
and
sub
stos
sub
jo
das
gs
les
stc
imul
test
xor
insb
sbb
in
popf
stc
pop
dec
lds
cli
dec
sub
movsb
jae
jp
mov
sub
adc
pop
push
push
sbb
scas
call
mov
inc
leave
loope
rcrb
ficomps
push
scas
dec
stc
sub
insb
fisubrs
pop
lret
jb
dec
and
imul
jl
mov
xchg
xor
push
inc
and
inc
push
imull
lods
lret
mov
mov
or
mov
popf
sub
or
sub
cwtl
jle
dec
cli
mov
aas
sub
sbb
add
push
out
stos
jo
cmp
or
lret
jmp
pop
dec
outsl
rcrl
push
jmp
shll
arpl
sub
xor
push
push
push
add
pop
cmp
out
fs
aaa
icebp
and
and
jecxz
cmp
dec
aaa
dec
xlat
mov
inc
fdivr
sbb
sbb
cmp
pop
mov
sbb
testl
js
je
jg
dec
lcall
push
leave
je
inc
call
dec
xlat
push
mov
les
push
dec
or
fstpl
sbb
leave
arpl
dec
fcmove
repz
outsb
test
or
pop
imul
js
sbb
cmp
pop
sti
sahf
clc
dec
sub
movsl
xor
js
pop
mov
test
xlat
sub
idivb
gs
stos
cli
mov
dec
enter
inc
push
idiv
dec
sub
hlt
cmpsb
arpl
xlat
cmp
sub
sarl
fisubs
shrb
inc
outsl
jns
mov
and
into
fdivrs
jnp
xor
clc
insb
xlat
js
or
cmpl
jnp
bound
or
das
jge
enter
mov
rorl
sub
inc
popf
movsl
jae
ljmp
mov
sti
imul
mov
les
mov
imul
xlat
out
jl
mov
test
js
push
lret
scas
cmpsb
movsl
ljmp
shrb
or
test
sub
aas
into
cmp
call
test
cmp
rorb
pop
adc
dec
sbb
push
mov
loopne
cmp
test
add
push
aad
call
pop
dec
xchg
pop
insb
dec
fstpt
push
adc
out
push
xor
jp
mov
fcomps
ds
pop
cltd
stc
sub
cs
pop
icebp
jmp
mov
test
or
or
sub
inc
test
or
ljmp
pop
or
hlt
pop
sub
sahf
test
sbb
cmp
dec
fld
lret
mov
sub
icebp
dec
in
incb
pop
fistpl
pop
jnp
or
sbb
jno
cmp
shlb
or
sahf
dec
or
dec
scas
inc
sub
pop
test
xchg
mov
punpcklwd
inc
push
fisubrs
fcoms
iret
push
jl
xchg
lcall
in
sub
dec
push
add
cmc
xchg
mov
jns
pop
mov
dec
pop
test
xor
sar
jmp
lret
mov
in
jo
cli
data16
nop
jl
scas
test
ret
das
fimull
call
or
mov
popa
dec
jp
mov
cmp
dec
or
jo
or
gs
subb
add
stc
in
or
enter
mov
andl
addr16
out
dec
pop
push
jne
stc
dec
cmp
sub
pop
push
sbb
mov
mov
out
add
ret
pusha
leave
push
lret
ret
repnz
cmp
sahf
dec
pop
dec
negl
sub
dec
sbb
push
jb
push
pop
jle
fmuls
fidivrl
subl
aad
mov
ljmp
ds
int
mov
push
mov
pop
xchg
mov
dec
fldt
mov
stos
aad
loopne
divl
fcoms
sbb
arpl
dec
jp
rolb
pop
adc
leave
dec
push
lcall
push
pop
cwtl
fstpt
sub
push
inc
fsqrt
add
loopne
jge
jbe
ljmp
mov
dec
dec
push
push
jp
gs
cltd
pop
lea
divb
fldcw
neg
lahf
adc
cmp
stos
sbb
cmp
xchg
stc
cmp
mov
out
stc
pop
mov
into
push
jp
mov
enter
jnp
xor
xchg
cmp
push
jl
out
jns
push
outsl
mov
rcr
fisttpl
stc
cmp
lahf
cmp
mov
jmp
mov
jle
sti
xlat
jp
lret
out
dec
cmp
pop
sub
fisttpl
dec
lea
pop
add
xor
jmp
dec
mov
leave
fisubrs
add
jl
or
adc
sbb
jne
lcall
arpl
sub
lret
insb
mov
sub
fbld
cmp
out
je
cld
lret
dec
or
dec
lcall
fimuls
std
cmp
sti
inc
stc
nop
dec
in
cmp
lcall
add
out
sbb
addr16
or
jl
js
outsl
shrl
cmp
push
out
in
push
pop
or
popf
mov
mov
xlat
repnz
jge
fistpl
mov
lret
outsl
pop
inc
addb
add
dec
push
out
arpl
sbb
jb
pop
leave
jg
or
outsl
jecxz
cmp
jmp
push
aaa
add
out
mov
stc
movsl
mov
push
popa
push
pop
pop
push
sbb
pop
mov
cmp
pop
mov
sub
sarb
outsb
dec
or
add
arpl
negl
pop
push
stos
es
xlat
insb
leave
stc
dec
cmp
js
sub
ljmp
xor
iret
pop
imul
cwtl
mov
or
mov
or
negb
pop
negl
add
stc
or
push
je,pn
imull
bound
cmp
dec
ljmp
iret
out
pop
or
bnd
mov
push
jmp
xlat
jae
push
sub
gs
dec
mov
test
insl
lock
pop
mov
out
mov
clc
testb
push
jmp
or
hlt
dec
sbbl
mov
mov
sub
idiv
xchg
jo
dec
push
js
leave
jae
xchg
dec
jmp
sbb
out
icebp
fs
test
pop
xor
fdivrp
adc
sti
pop
xor
push
push
sbb
fimuls
fcom
fstps
xchg
pop
sub
bound
pop
sub
fisubrl
xchg
outsb
jge
mov
mov
cmp
jge
sbb
sbb
pop
in
lods
or
insb
stc
inc
lea
sbb
mov
pop
or
mov
or
dec
dec
movsl
cmp
test
push
mov
gs
or
cmp
mov
mov
cwtl
sbb
test
repz
mov
push
outsb
adc
lret
idiv
cmc
jmp
lahf
cmc
mov
imul
out
test
or
movsb
sbb
jg
stc
dec
arpl
imul
sub
pop
or
and
push
ja
pop
cli
aad
pop
mov
je
test
enter
insb
or
sarb
and
sbb
sub
ljmp
jmp
push
stc
mov
or
push
xchg
mov
icebp
sbb
or
clc
jg
adc
sbb
dec
cmp
popa
ja
dec
test
dec
jmp
mov
push
pop
sub
aaa
adc
insl
or
outsl
pop
xlat
enter
dec
dec
jg
sub
ss
mov
adc
mov
arpl
out
das
cs
push
test
out
mov
inc
ja
xor
lods
ljmp
leave
pop
xor
or
dec
dec
cwtl
fucompp
cmp
push
mov
out
xlat
stc
sub
js
arpl
cmp
pop
loop
pop
sub
pop
mov
sub
mov
addr16
clc
jmp
cwtl
xor
push
insb
sub
mov
sbb
or
push
cli
sub
out
mov
mov
and
sbb
cmp
push
sbb
cld
mov
out
hlt
pop
push
pusha
sub
dec
inc
adc
leave
dec
stos
push
stos
add
cld
cmp
lret
in
jmp
sbb
add
dec
dec
and
or
mov
out
popf
stc
insb
jmp
jmp
call
out
divl
lret
sub
addr16
in
cmp
hlt
in
out
jae
pop
adc
mov
mov
fstpt
lret
insl
cmp
call
jnp
dec
jl
insb
mov
pop
cld
pop
cwtl
sub
push
mov
sub
out
pop
jl
sub
mov
movsb
sbb
sbb
aad
rorb
jmp
mulb
or
pop
dec
in
jns
jecxz
aas
cmp
lret
rcr
mov
sbb
js
inc
and
dec
add
cwtl
cmc
cmp
xchg
arpl
sub
sbb
jl
sub
loop
mov
dec
add
push
insb
pop
lret
pop
jbe
dec
or
cmp
adc
ljmp
insb
fs
cmp
cmp
lret
mov
stos
mov
leave
out
stos
lods
pop
adc
push
pushf
mov
sti
lret
cwtl
es
jnp
sub
cmp
adc
sub
mov
lds
cmp
dec
imul
dec
sbb
xor
inc
mov
or
jle
add
adc
stos
into
dec
cmp
mov
fnstenv
mov
push
fisubrl
lods
pop
pop
dec
sbb
sbb
call
or
fisubrs
pop
cmp
popf
xlat
scas
imull
sub
sub
jle
clc
pop
push
mov
int
jmp
sub
scas
or
shr
mov
push
das
fisttpl
cmp
shrl
lret
ljmp
leave
jg
or
stos
cmp
sbb
and
pop
sbb
push
cmp
mov
test
inc
mov
fcomps
ljmp
sbb
sub
sbb
out
mov
xchg
frstor
imul
mov
push
sub
cmp
adc
out
test
lea
insb
sub
xor
aas
stc
stos
mov
leave
fmuls
popa
cwtl
or
mov
inc
lret
adc
jle
leavew
or
sbb
inc
add
sti
push
jp
pop
or
int
sbb
roll
das
aaa
mov
inc
fimull
dec
dec
imul
sbb
xchg
cmpb
and
lret
sbb
call
push
dec
ss
enter
ljmp
sbb
dec
or
sbb
pop
fs
call
push
inc
jmp
dec
insb
inc
jmp
test
ds
or
pop
pop
pushf
popa
sub
fdivrp
dec
mov
call
test
jmp
mov
inc
or
mov
sbb
leave
inc
lret
stos
xchg
xlat
sub
pop
dec
ret
cmp
cmp
sub
dec
decb
pop
and
dec
rorb
scas
xchg
clc
in
cli
lods
pop
mov
mov
int
add
mov
or
pusha
ret
jmp
int
insl
clc
insb
mov
push
insl
sbb
sub
fsincos
popf
sub
lcall
test
lcall
jecxz
sub
sbb
xor
jnp
idivl
inc
push
xor
fucomi
int3
inc
sahf
sbb
out
mov
mov
hlt
xor
movsl
inc
mov
loope
in
jnp
or
dec
test
out
mov
mov
jmp
fistl
imul
mov
idivb
mov
dec
outsl
jge
sbb
or
repz
in
xor
jae
fisubrl
adcb
sbb
pop
das
js
jmp
cli
adc
push
push
out
mov
mov
sub
lret
inc
dec
jmp
test
and
cld
mov
mov
scas
add
or
mov
jl
dec
loopne
faddp
imul
fdivp
pop
xchg
sub
xor
fmul
lods
xchg
xchg
clc
call
cmp
push
xchg
dec
bound
mov
daa
jg
jg
pop
sub
clc
mov
out
movsb
cmc
xor
and
push
jg
sub
or
add
shr
dec
fimuls
testl
sbbl
sub
jns
jge
sub
push
scas
leave
pop
mov
push
xchg
cwtl
mov
push
pop
pop
mov
ljmp
lcall
pop
dec
xlat
cmp
test
stc
mov
push
xchg
fisttpl
adc
pop
loop
les
aas
sub
dec
lahf
inc
sar
mov
js
insb
pop
test
sub
pop
jmp
mov
sbb
out
mov
cmp
dec
mov
or
stc
mov
or
in
cmp
js
sti
jmp
or
loope
stc
enter
imul
lds
lods
jp
or
enter
xor
mov
and
pop
push
ds
dec
push
dec
aad
pusha
lcall
fidivl
lods
inc
cmp
pop
insb
push
push
jl
mov
dec
jle
call
test
imul
jp
pop
in
mov
nop
lret
jl
ljmp
dec
jmp
dec
out
arpl
cmp
cmp
insb
pusha
jnp
or
scas
iret
call
and
fildll
ljmp
xor
repnz
adc
adc
jp
imul
lret
stos
insb
push
in
pop
xlat
xchg
stos
inc
mov
push
out
shl
insl
lcall
fmuls
movsb
in
fs
or
test
push
push
stc
mov
stos
sub
sub
bound
sbb
sbb
xor
pusha
ljmp
fidivrs
mov
dec
jge
leave
sub
sbb
cmp
mov
fsubrs
dec
jmp
arpl
xchg
pop
xchg
push
lods
cmp
popa
cmp
stos
lret
or
mov
jle
push
add
mov
mov
mov
pop
inc
fucomi
dec
dec
out
sbb
pop
fs
fbld
dec
iret
or
dec
mov
test
in
repz
in
mov
into
cmp
sub
subl
cwtl
inc
ljmp
out
subl
sbb
aas
lret
leave
sti
add
nop
popf
fmuls
ljmp
or
mov
sti
pop
pop
jne
push
cmp
pop
or
stc
jl
rcrb
or
add
fsts
mov
push
pop
jle
mov
sub
lret
jg
sbb
stos
pop
sbb
xchg
sub
pop
inc
pop
ljmp
addr16
fldenv
jmp
sub
clc
pop
sub
mov
adc
arpl
cwtl
stc
leave
enter
test
push
mov
xchg
stos
dec
lcall
jnp
fldcw
jmp
popa
negl
int
mov
dec
andb
lock
scas
adc
pop
cmpsl
inc
dec
dec
push
push
cs
mov
cmc
sbb
sub
cmp
fs
pop
jl
sbb
outsl
fstpt
cmp
sti
push
xchg
pop
inc
pop
inc
mov
sub
dec
push
cmp
imul
push
lea
fnstenv
stc
mov
sti
testl
dec
call
adc
cli
pusha
add
lods
pop
push
sbb
jne
idivl
fisubrs
xchg
mov
pop
enter
stos
pop
pop
mov
sub
addr16
or
sbb
lea
jmp
adc
lcall
outsl
and
sub
push
fwait
insb
repz
jmp
cmp
pop
mov
pop
mov
andl
push
pop
push
xchg
cwtl
cmp
pop
inc
or
fadd
sbb
insb
cmp
mov
mov
mov
or
fstps
or
dec
dec
ljmp
sbb
iret
inc
loope
and
dec
inc
mov
jmp
fsubrl
clc
ja
sub
sub
sti
mov
pop
or
pop
lea
inc
xchg
sbb
xchg
std
xchg
imul
cmpsl
and
call
out
imull
or
push
sbb
shl
lret
pop
push
push
in
lea
or
scas
xor
sbb
push
js
mov
sbb
test
pop
push
test
clc
cmp
xchg
push
dec
fdivr
jbe
cmp
push
or
movsl
pop
jp
mov
xor
inc
and
stc
push
divl
fwait
out
sbb
test
jmp
cmp
mov
subb
sub
out
cmp
jns
mov
out
mov
imul
xchg
jmp
dec
pop
repnz
dec
cmpsl
ljmp
ljmp
cmp
xchg
data16
pop
pop
mull
pusha
dec
sub
ljmp
pop
test
cmp
mov
xchg
pop
shrl
mov
dec
call
sub
dec
iret
push
push
testl
push
fstpt
test
insl
jne
cld
imul
std
xlat
mov
mov
mov
enter
dec
jae
jae
jb
jle
add
adc
mov
imul
leave
or
jne
push
mov
or
or
je
cmp
dec
popf
arpl
stc
cmp
push
in
jne
call
cmp
sub
add
and
pop
stc
js
cwtl
movsl
inc
sbb
jb
cmp
ffree
xor
jnp
sub
mov
add
sbb
imul
mov
fistpl
add
cmp
cmpsl
push
cwtl
fldenv
movsl
call
loope
fdiv
dec
es
mov
jo
out
test
jmp
test
push
je
out
dec
mov
aad
js
xor
dec
pop
cmp
cs
lds
scas
enter
jecxz
push
jmp
or
mov
fcoml
sub
stos
pop
sub
cwtl
xlat
call
and
shr
das
sbb
rorb
pop
ss
jp
stos
dec
inc
or
jo
cmpl
mov
fdivs
sbb
jmp
push
js
in
jp
ss
push
js
jp
outsb
jp
jecxz
jbe
fsubs
fcomps
test
jo
jp
dec
cmp
dec
aad
fistl
mov
clc
aas
call
lea
mov
dec
mov
out
pop
callw
leave
jecxz
mov
movsl
push
jno
mov
sub
mov
ljmp
mov
sub
jmp
mov
lret
mov
mov
sbb
out
clc
sbb
or
mov
jp
sub
pop
inc
mov
sti
jnp
sub
mov
sbb
jge
cmp
leave
dec
push
cli
call
clc
lcall
jmp
and
sub
dec
or
sbb
out
call
imul
adc
push
js
mov
pop
cmpsl
xchg
dec
or
fistpl
pop
cmp
arpl
jno
sub
cwtl
sbb
lcall
or
sub
decb
push
stc
pop
dec
repnz
sbb
cli
or
cmp
jl
pop
aas
insb
push
sbb
gs
dec
addl
add
jmp
inc
push
or
sar
mov
ljmp
out
sti
movsl
repnz
add
fistpl
imul
mov
fmul
rcrb
ljmp
sub
or
sbb
stc
outsl
pop
sub
sub
neg
cmp
test
jbe
jle
gs
mov
dec
insb
or
or
mov
mov
lret
jp
adc
ljmp
dec
dec
sbb
push
inc
push
or
stos
sbb
dec
leave
stc
arpl
sbb
dec
outsl
out
ljmp
pop
or
pop
or
sbb
imul
sub
enter
mov
clc
mov
lea
add
inc
jns
cmpb
jp
sbb
js
pusha
cmp
pop
sub
push
jmp
jp
imul
in
mov
dec
fstpt
cmp
sub
sbb
pop
sbb
dec
jmp
icebp
stc
mov
dec
outsl
pop
sbb
cwtl
dec
fmul
fisubrl
cmp
mov
insb
dec
dec
popf
or
sub
ret
mov
ljmp
mov
jbe
jne
dec
cmpsl
mov
ret
sbb
or
scas
lcall
imul
sti
enter
lret
dec
or
dec
sub
lea
cli
js
out
add
mov
inc
ficompl
aaa
cmp
sub
xor
push
out
lea
in
pop
push
sub
out
rcrl
sbb
fldt
sub
jp
pop
cwtl
stos
popf
sbb
dec
jb
dec
repnz
jl
jp
fsubr
jmp
sub
mov
jo
rcrb
push
mov
or
mov
call
movsl
jne
lock
les
dec
inc
arpl
lret
enter
push
xor
fisttpl
mov
lock
or
jg,pt
lahf
inc
int3
cwtl
dec
push
mov
out
orb
mov
cli
cmp
or
fstps
jmp
fadds
dec
je
pop
sub
outsl
cmc
mov
push
mov
pop
mov
imul
sbb
push
jns
sbb
insl
lret
mov
lods
dec
or
jo
dec
sub
cmp
sahf
hlt
and
repz
sbb
inc
jno
outsb
in
vcvtsd2ss
or
cmp
push
inc
fstps
xchg
and
ja
lock
push
sub
dec
das
imul
js
clc
subl
fbld
dec
push
inc
sub
int
or
stos
pop
xchg
fmuls
or
dec
mov
xor
movsl
out
dec
aas
clc
xlat
fcomps
sti
adc
cmp
outsl
test
sbb
jge
sti
stc
jno
pop
pop
mov
jmp
ds
sbb
call
push
cmp
sub
jl
sbb
or
leave
fcomps
movsl
push
rcr
sub
cmp
lea
xchg
dec
jo
cmp
insb
pop
cltd
imul
addb
push
xlat
and
fldenv
test
sub
jbe,pn
sub
fistpl
or
in
cmpsl
fmul
test
cmp
or
stos
insb
jo
jp
mov
scas
push
pushf
fstps
test
out
mov
or
scas
lds
cmp
jmp
hlt
out
iret
pop
mov
lock
repnz
test
in
jne
and
pop
push
jmp
cli
dec
sbb
ret
cs
std
dec
mov
push
jo
insl
outsb
stc
in
fs
mov
aas
mov
movsl
or
sarl
js
xor
xchg
dec
jmp
adc
pop
cmc
sub
jge
or
fld
movsl
gs
fcmovne
pop
dec
mov
sub
adc
xor
pop
icebp
sbb
mov
lahf
out
sub
xlat
dec
adc
sti
mov
and
sbb
jmp
fnstenv
jp
cmp
iret
cmp
lret
subb
push
dec
imul
mov
jmp
loop
pop
push
popa
into
clc
test
out
test
cwtl
jmp
mov
fldt
shr
mov
sbb
out
ljmp
js
xchg
inc
pop
fcmovnu
loop
mov
cmp
xor
stos
lret
pop
xchg
rolb
fistpl
sub
mov
fisubrl
ds
push
inc
cli
call
into
test
jg
jmp
add
lret
aad
or
or
movsl
dec
dec
push
sti
cmp
popf
pop
in
xor
out
xchg
pop
pop
stc
sub
imul
fisubs
pop
push
or
cmp
mov
pop
adc
out
pop
mov
cmp
inc
xchg
in
or
pop
into
testb
pop
or
lods
movsl
out
or
cmp
sub
jno
enter
inc
stc
push
das
call
inc
lret
call
push
ljmp
jl
pop
sub
pop
dec
or
sub
pop
pop
jmp
fcomp
dec
hlt
push
sbb
lahf
sub
das
ljmp
cmp
fisubl
fmuls
mov
sub
mov
cmp
leave
mov
pop
xchg
or
shrb
jl
cmpsl
xchg
sub
lret
dec
cmp
sub
stos
test
out
or
xchg
jae
lret
sub
cli
mov
sbb
enter
cmp
sarl
mov
sbb
sbb
xchg
ret
lds
in
icebp
pop
test
popa
test
pop
cmp
cmp
sahf
fimull
mov
aaa
xchg
fildl
dec
xchg
dec
lods
arpl
lcall
sbb
xor
push
xlat
stc
mov
or
pop
jae
jb
or
pop
or
pop
insb
cmp
push
push
out
jnp
sbb
pop
rorb
insb
sbb
mov
jnp
ljmp
fmuls
xor
sbb
enter
lea
clc
pop
mov
fstpt
shrb
nop
je
lods
mov
mov
fstps
sbb
lret
dec
fiaddl
or
movsl
jmp
neg
jecxz
dec
sub
clc
cli
imul
insl
lcall
fildll
dec
or
iret
sub
push
fidivrs
lcall
sbb
sbb
idivl
leave
stos
test
stos
enter
insb
or
fidivrs
sahf
jmp
mov
dec
test
lcall
xlat
push
subps
xchg
or
mov
jmp
mov
mov
imul
or
sub
stos
lcall
movsl
sub
jmp
cld
and
pop
out
push
lret
sbb
dec
lods
jmp
pop
out
cli
adc
push
popf
dec
mov
imul
lret
jp
leave
xor
or
add
jp
push
fstpt
call
fsubrs
insb
pop
test
insl
dec
xlat
jmp
pusha
mov
stos
test
sbb
gs
jmp
gs
mov
fdivp
push
test
cwtl
sbb
cs
popa
lods
jmp
fdivrl
iret
icebp
popa
mov
lret
mov
sbb
clc
sbb
les
cs
sub
sub
cmp
jae
xor
sbb
popl
out
sub
push
cli
cmp
std
ret
test
xchg
daa
into
push
and
mov
movsl
pusha
sbb
adc
push
stc
fwait
data16
sbb
fwait
nop
aam
sub
imul
cmp
fldcw
fldcw
mov
xchg
test
inc
shrl
push
dec
insb
dec
mov
dec
jmp
xchg
pop
and
add
jmp
inc
sbbb
sub
cmovl
scas
pop
sbb
fld
push
and
out
std
jp
mov
ljmp
inc
mov
stos
push
pop
mov
iret
int
or
mov
xchg
or
in
stos
sbb
into
sub
pop
jne
mov
adc
movsb
gs
jl
sbb
neg
sub
pop
cmp
out
xor
dec
sbb
mov
data16
ret
stos
dec
fiaddl
push
or
movsl
fldcw
fcoms
stos
icebp
xchg
push
addb
fistpll
dec
int
add
inc
repz
in
cmc
push
cs
and
sbb
sbb
adc
inc
cmp
insb
dec
mov
cs
pop
or
cli
and
sub
inc
dec
add
fistl
jmp
jmp
add
lods
push
movsl
icebp
inc
pop
movsl
ficoml
lock
sbb
jle
fcmovb
cmpsl
xor
sub
clc
dec
fisttpl
dec
sub
fsubs
xchg
inc
pop
or
fisubrl
pop
pop
ss
pop
aam
xchg
sub
test
adcb
ljmp
inc
ret
roll
call
fimull
fcmovu
mov
or
clc
cmp
cwtl
movsl
ss
test
sti
scas
inc
xlat
fistpll
pop
lret
pop
sub
xlat
pop
leave
subl
movl
pop
push
mov
jbe
cmp
sub
xchg
jp
xchg
push
sub
sbb
sbb
pop
pop
adc
out
int
or
aas
mov
insb
mov
mov
sub
xchg
mov
test
mov
pop
sub
mov
stos
in
fsts
jno
or
jne
fsubrs
dec
cmp
sub
sbb
js
jp
scas
sub
adc
js
or
roll
pop
shrb
dec
jl
pop
push
pusha
sub
push
mov
lods
add
dec
push
add
cmp
mov
out
xchg
mov
or
sub
sahf
ljmp
lret
lods
lret
dec
or
fists
insb
or
out
pushf
bound
sbb
mov
jb
fwait
sub
call
cltd
inc
pop
out
or
sub
test
leave
mov
pop
jl
and
lcall
jl
sub
lahf
fmul
push
dec
dec
fisubl
sti
dec
out
gs
push
fsubrs
dec
sub
cwtl
jmp
jp
popa
iret
dec
xor
sbb
and
sub
sbb
test
jmp
or
add
jge
pop
sub
pusha
fcompl
enter
push
cmp
pop
cmp
movl
dec
mov
sub
fldenv
lret
sbb
cmp
sub
dec
cmp
mov
lods
loop
sbb
clc
sub
ljmp
cmp
pop
mov
stos
cmp
mov
jne
lret
add
cmp
jmp
and
dec
mov
and
loopne
lret
add
mov
mov
mov
outsl
test
sbb
clc
in
cmp
sbb
push
mov
jge
mov
cmp
cwtl
xlat
sbb
dec
lock
cwtl
jns
sub
push
cmp
ficompl
leave
ficompl
adc
or
xor
call
jae
fidivrs
cltd
dec
sbb
lcall
arpl
std
sbb
dec
cmpb
add
push
sti
lcall
and
movsl
cli
xlat
hlt
sub
or
mov
push
int
dec
scas
jle
sub
dec
bound
ljmp
out
push
vmread
fimull
leavew
sbb
testl
mov
mov
cmp
dec
lcall
pop
sbb
enter
jle
dec
mov
popa
sub
lret
dec
sti
movsl
pop
cwtl
daa
pusha
cmp
and
test
cmp
xor
lock
sbb
mov
or
jg
jp
shlb
outsl
cmp
push
mov
fsubr
xlat
imul
fidivs
pop
popf
stc
idivl
xchg
cmp
inc
xchg
rolb
mov
ljmp
adc
iret
repnz
pop
cmp
sub
dec
push
and
pop
sub
clc
xor
rcll
fmuls
sbb
shrl
dec
mov
or
movsl
push
dec
pop
push
call
dec
dec
mov
dec
mov
in
sbb
div
inc
sti
idivl
xchg
inc
out
fiadds
mov
pop
mov
test
inc
vmread
aad
sarl
mov
arpl
mov
pushf
pop
sti
push
imul
js
test
std
pop
pop
mov
inc
sti
jno
js
ret
sub
mov
sub
pop
inc
dec
add
xlat
jmp
cmpb
in
stos
inc
mov
lahf
negl
cmp
clc
add
mov
sub
call
mov
xchg
insb
cmp
test
mov
pop
push
jg
imul
push
cmp
push
dec
or
les
pop
movntsd
sbb
or
sbb
pop
dec
leave
mov
or
rcll
addr16
sub
xchg
mov
data16
ljmp
jno
ret
dec
cmp
icebp
cmp
sub
loope
data16
sub
sub
icebp
test
jp
and
jmp
cmp
lcall
cmc
fisttpl
in
pop
push
lahf
dec
dec
adc
push
out
fstpt
push
lcall
push
sub
push
push
sub
dec
movsl
jno
sbb
xlat
stc
jb
cmp
aas
stos
jp
lret
sub
nop
push
daa
ret
pop
lcall
stos
dec
mov
sub
mov
or
ljmp
mov
inc
cmp
ljmp
adc
sbb
insl
aas
jmp
push
stc
pop
fucomi
sbb
fwait
sub
lea
lods
cwtl
in
loopne
pop
lret
and
popf
xchg
fs
dec
enter
pushf
inc
outsb
push
in
lret
rcr
sbb
sar
push
stc
adc
push
lahf
call
or
js
mov
jne
or
mov
sub
pop
dec
pop
jmp
pusha
in
mov
sub
and
mov
xlat
cmp
call
jmp
lret
mov
cltd
mov
sbb
stos
sub
orb
mov
inc
fidivs
cli
xchg
call
push
es
inc
mov
cltd
pop
lcall
cmp
sbb
cs
incl
fildl
mov
int
jne
pop
jge
mov
out
ja
cmp
repnz
sbb
jo
dec
dec
inc
jp
enter
sbb
aaa
cwtl
sbb
arpl
mov
pop
cmp
mov
loop
insb
jecxz
cmc
dec
sub
subl
js
mov
ss
xlat
fisubs
mov
frstor
cli
insb
jmp
fucomi
pushf
sbb
dec
jg
push
stos
sti
push
mov
sbb
sub
or
std
or
daa
in
inc
mov
jmp
or
mov
xchg
sbb
pop
or
dec
cmp
lods
cli
jae
stos
rol
jmp
fcomps
sbb
cld
push
cld
jp
inc
icebp
dec
fsubp
xor
dec
dec
sub
sbb
or
pop
pop
in
sub
stos
movsl
pop
cmp
loop
leave
or
test
sbb
lcall
dec
mov
addr16
dec
fs
pop
dec
mov
aam
sbb
cs
xor
pop
add
iret
mov
negl
enter
stc
inc
popa
sub
cmp
jmp
repz
loope
call
push
cmpsl
lods
cmp
dec
test
ljmp
mov
push
pop
ljmp
pop
mov
jmp
add
push
sub
call
pop
or
cmpsl
xor
repz
aaa
test
sub
cwtl
mov
cs
or
push
sbb
call
jae
or
xor
adc
movsb
stos
or
xchg
push
mov
rcr
cmp
lret
pop
sub
leave
insb
jne
jae
sub
mov
pop
sub
mov
mov
pusha
iret
or
test
inc
fnstcw
insb
dec
and
mov
sahf
das
insl
mov
pusha
ret
xor
sub
push
sbb
idivl
adcb
xlat
push
mov
clc
dec
xchg
dec
test
mov
xchg
das
mov
cmp
iret
lods
push
jp
cli
push
or
sti
data16
push
pop
das
popw
sub
pop
adc
test
hlt
data16
push
loop
test
popf
div
sbb
sbb
push
mov
jnp
and
pop
arpl
cmp
sahf
leave
lret
addr16
mov
cmp
or
rcrb
insb
push
mov
sbb
sub
pop
sub
push
sub
pop
cmp
aad
cmp
mov
sub
push
cmp
movsl
clc
fdivrs
out
push
stos
jne
push
imul
cmp
jmp
loope
inc
fcmovnb
mov
jge
xlat
push
stos
push
loopne
cli
mov
iret
shll
stos
shrb
clc
mov
mov
add
inc
fidivrl
lds
sub
imull
jmp
jmp
dec
scas
out
pop
sti
das
push
gs
jl
ljmp
sbb
fldl2e
mov
cmpsl
into
mov
cmpsl
dec
push
enter
add
out
shl
cmp
mov
pop
dec
addr16
pop
dec
cmp
cmp
dec
push
xchg
imul
subl
or
push
or
lea
sbb
loope
mov
leave
stc
push
in
enter
cmp
inc
fisttps
or
sbb
out
pop
pushl
jmp
adc
repnz
fisubs
xor
push
inc
out
movsb
pusha
mov
or
sub
mov
push
mov
or
sub
aas
lcall
xor
push
in
imul
enter
movntq
out
stos
or
mov
out
mov
mov
dec
clc
popf
sti
xchg
add
sbb
mov
or
and
push
cmp
jbe
inc
leave
fidivl
jp
or
dec
loop
lret
jmp
xchg
pop
pop
push
aam
cmp
add
mov
test
jp
enter
mov
pop
inc
jge
dec
and
repnz
mov
lret
popf
pop
sub
or
loop
cmp
cmp
scas
or
ljmp
mov
fimull
pop
inc
insb
cwtl
fistpl
lcall
ret
xchg
fxam
mov
or
pop
sub
xlat
cmpsl
pushf
pusha
fistl
loope
data16
xchg
insb
push
or
fucomi
sub
push
cmp
enter
out
xorl
dec
push
xchg
out
cwtl
cmp
push
ds
jle
ljmp
push
sbbl
imul
sbb
in
dec
mov
scas
inc
jmp
push
stos
add
dec
fldl2t
cwtl
orl
mov
dec
mov
sti
imull
cmp
movl
inc
leave
adc
pop
insb
insl
lds
jno
mov
dec
xlat
idivl
dec
mov
pop
lret
sub
cli
xor
sbb
adc
cwtl
and
fs
pop
mov
stc
sub
sbb
lcall
dec
lret
repnz
clc
sub
loop
jp
stos
movsl
jbe
sub
mov
and
sbbl
enter
dec
mov
cwtl
dec
sub
jge
xlat
fsubs
or
inc
dec
sub
cmp
sbb
and
push
clc
mov
mov
cmp
and
push
jne
cmp
imul
clc
mov
js
pop
xlat
cmp
sbb
mov
sub
call
mull
fdivr
and
cmp
imul
enter
dec
cs
push
mov
push
or
add
fwait
dec
sub
aas
push
call
inc
daa
cwtl
imul
jp
jno
adc
fisubrs
mov
in
in
imul
jl
pusha
mov
sub
mov
push
or
fnstenv
xor
js
movsl
cwtl
mov
mov
sub
pop
mov
pop
cli
scas
pop
subb
aaa
insl
cmp
cmp
dec
mov
test
sub
xor
cmp
ljmp
inc
dec
sub
or
stos
fs
fxch
fisubl
pop
jno
and
or
mov
pushf
mov
lahf
pop
xchg
inc
adc
push
in
mov
dec
xlat
call
iret
int
fcomps
push
lret
sbb
pop
pop
aad
jmp
push
insl
pop
or
push
pop
gs
push
int
pop
pop
frstor
stc
sbb
mov
jmp
sbbb
loopne
jp
pop
loope
dec
aas
std
pop
scas
jns
aas
imul
fisubrs
push
stos
add
out
out
pop
shll
stc
test
sub
jmp
or
stos
inc
sub
fimuls
pop
cs
leave
pop
and
lret
lea
in
xchg
pop
ret
pop
xlat
mov
dec
fadds
push
push
insb
push
int3
push
lcall
cli
jmp
testl
sub
andl
cli
sub
mov
dec
sbb
js
pop
out
insb
scas
cmp
add
cli
inc
add
in
inc
out
or
call
sub
dec
pop
dec
sub
popa
js
or
leave
mov
adc
push
hlt
lret
sarl
movsl
leave
iret
filds
dec
cwtl
cmp
sbb
fidivs
imul
pop
sub
dec
xlat
dec
ja
mov
jecxz
mov
clc
sbb
sub
orb
lcall
testl
iret
mov
mov
fsub
daa
xor
repz
lcall
aad
cmp
or
enter
add
stos
cmp
push
mull
icebp
inc
sbb
sbb
test
jecxz
aam
pop
or
adc
adcl
dec
mov
jl
arpl
xchg
xlat
adc
jl
insl
js
loope
inc
pop
mov
lret
jmp
push
into
cmp
cmp
fcmove
mov
cmp
in
inc
insl
xchg
mov
pop
sub
lcall
or
sbb
jnp
lods
insb
and
jp
frstor
lcall
pop
sbb
out
pop
shrl
iret
or
dec
in
cwtl
sub
lods
lcall
clc
sub
gs
pop
fistpl
sbb
cmp
cmp
das
dec
or
scas
out
stc
add
jecxz
xlat
call
pop
mov
sbb
enter
test
sbb
xor
inc
cmp
jmp
aad
aaa
jmp
sub
sub
dec
push
xlat
mov
pop
out
lret
stos
mov
fs
pop
imul
lcall
jne
mov
adc
loop
in
push
insl
jmp
cmp
jbe
rol
ds
and
sub
sbb
sbbb
or
pop
test
pop
stos
lcall
jmp
call
dec
fmull
inc
or
popa
pop
cli
jmp
fisttpl
gs
leave
outsb
sub
adc
movsl
imul
ljmp
sbb
movsb
sub
or
fnstenv
mov
adc
add
xor
ljmp
subps
jg
insb
lock
add
std
sahf
inc
cmp
insb
add
movsl
in
mov
mov
out
and
das
lds
repnz
fisttpl
jl
pusha
mov
sbb
ljmp
pop
ljmp
sbb
scas
fsqrt
leavew
adc
adc
mov
dec
shl
lods
cli
mov
enter
je
std
lret
mov
sub
hlt
jge
lahf
xlat
mov
dec
out
mov
popf
cmp
loope
cmp
sub
stos
fcomps
or
fwait
adc
dec
call
out
cmp
fdivrs
in
pushf
dec
cld
adc
stc
sub
filds
cmp
out
push
inc
sub
cli
ficoms
xor
aad
das
jae
cmpsl
xor
popa
or
sub
xlat
jecxz
cmp
iret
lods
xchg
pop
arpl
movsb
lret
or
jno
decb
stos
bound
ljmp
cli
aad
enter
imull
cmp
or
sub
mov
in
movsl
in
adc
sub
fdivrs
jmp
xor
dec
sub
sub
mov
imulb
insb
orl
test
pop
aam
pop
mov
inc
dec
aam
mov
add
jl
dec
or
fisubrs
pop
jmp
push
popa
data16
or
fcomps
sub
out
mov
fisttpl
dec
ja
addb
mov
andb
pop
out
bound
aaa
mov
adc
mov
outsb
or
mov
push
lods
cmp
jb
leave
jp
push
pop
arpl
call
mov
sub
dec
stos
or
jp
push
jmp
xor
push
iret
popf
test
sti
mov
jmp
lea
pop
push
sub
sbb
ret
popa
mov
daa
ljmp
xlat
insb
sub
sbb
jmp
cmp
sbb
out
call
xlat
sub
jmp
sub
fisubrl
imull
ljmp
pop
pop
or
xorb
stos
inc
cli
mov
or
js
sti
sub
sbb
or
jp
push
jp
in
leave
out
in
dec
insl
imul
or
sbb
add
sbb
imul
negl
cwtl
out
push
cmp
test
fisubrl
mov
dec
aam
dec
scas
test
mov
pop
sub
jmp
ret
fs
out
imul
mov
call
shll
sub
pop
mov
clc
dec
in
stos
cmp
nop
pop
lea
test
mov
or
mov
fsubrp
sbb
arpl
out
cmpsb
data16
idivl
xchg
mov
mov
xchg
mov
sub
cmc
leave
push
sbb
xchg
stos
mov
push
mov
and
push
sub
mov
lods
cwtl
or
sub
into
sbb
hlt
lea
mov
enter
pop
cmp
int3
stc
dec
ja
dec
xlat
pop
shr
pop
insl
out
mov
or
fisubrl
sar
sbb
inc
cmp
sbb
or
scas
sub
cmp
mov
inc
lret
sub
mov
ret
mov
dec
ljmp
sub
xlat
loopne
cmp
sub
and
sbb
ds
ds
push
jecxz
push
inc
outsl
les
push
clc
out
mov
stos
stc
movsb
or
mov
or
jl
sub
jle
jmp
ljmp
iret
push
sbb
push
call
sbb
lret
cmp
push
lcall
daa
jae
out
popa
cmp
sti
idivl
pop
or
test
jo
sbb
push
loopne
mov
mov
sets
loope
mov
icebp
arpl
push
inc
push
mov
stc
sbb
jecxz
mov
sub
jno
scas
lock
lea
cli
mov
lret
or
daa
mull
js
enter
or
lods
clc
mov
insb
fmuls
jmp
inc
pop
mov
insb
mov
out
aas
jmp
jp
xlat
pop
or
add
jg
sbb
jg
cmpsl
sar
dec
pop
rorb
fincstp
clc
fs
mov
popa
and
pop
ds
dec
pop
mov
pop
cmp
leave
add
sub
sbb
inc
dec
jmp
ljmp
flds
ficomps
dec
pop
mov
push
mov
or
jge
jmp
sbb
jp
mov
xlat
pop
sub
lcall
int
mov
aaa
lret
int3
mov
cli
addr16
pop
sub
jl
mov
insb
mov
fisubrl
cwtl
leave
fbld
pop
dec
shrb
mov
pop
mov
mov
gs
testl
aas
fisttps
sbb
icebp
aam
aam
jbe
mov
jle
popa
enter
cmp
test
dec
std
inc
pop
repnz
out
outsl
cmp
mov
pop
neg
adc
pusha
xor
cwtl
je
lret
push
xlat
dec
pop
xchg
pop
pop
add
cmp
test
sub
leave
addr16
mov
jmp
jmp
test
ljmp
loope
push
fistps
jecxz
in
iret
pop
adc
sti
inc
fcomps
or
fsubrs
cmpb
lods
sbb
adc
das
inc
or
enter
out
movsl
jp
mov
dec
mov
sub
repz
in
xlat
dec
shr
rcrb
fldt
iret
pop
pop
dec
push
xor
push
cld
popa
out
sbb
sub
pop
add
cmp
mov
fcmovu
xor
fwait
push
data16
sbb
jg
mov
sub
out
stc
cwtl
push
jge
pusha
loopne
mov
stos
jecxz
fmuls
das
pop
or
push
dec
dec
sub
rolb
cltd
in
or
std
or
jg
cmpsl
clc
sbb
or
cmpsl
adc
outsb
and
insb
pop
add
mov
mov
in
sub
ret
test
or
insl
mov
lods
pop
sbb
sub
test
js
adc
jp
or
add
inc
push
fiadds
pop
mov
test
jae
cli
invd
mov
sti
leave
lret
jg
inc
or
mov
sub
movsl
das
jno
divb
adc
mov
add
ret
stc
mov
sub
mov
fiadds
push
lods
dec
cmp
dec
xor
fstp
cmp
jmp
mov
sbb
cmp
cmp
mov
jo
cmp
dec
xor
push
into
clc
insl
cmpsb
testl
inc
pop
orb
xor
in
cmc
fisubrs
jge
jbe
cwtl
add
push
dec
or
popf
or
sbb
repz
xor
cmpsb
stos
cwtl
or
dec
outsl
and
mov
fsubr
mov
jmp
push
sbb
fs
cli
xchg
pusha
adc
test
xchg
adc
jmp
fdivrs
ljmp
dec
imull
call
int3
dec
cmp
pop
idiv
mov
stos
sbb
pop
jle
call
shll
sbb
mov
jl
push
dec
sbb
pop
jl
je
pop
andb
js
out
xchg
std
or
pop
jge
lods
fs
lret
inc
pop
or
cmp
adc
mov
mov
cmp
or
mov
pop
dec
cmp
scas
push
xchg
lahf
decb
cld
jmp
dec
or
in
sbb
repz
sub
mov
sbbl
lret
mov
cmp
sub
cmp
fsubs
arpl
add
movsl
shrb
popf
sub
cwtl
cmp
jbe
or
pop
sbb
faddp
sub
pop
insl
scas
test
push
xchg
xchg
imul
mov
push
dec
jp
cmp
mov
adc
ja
lret
and
icebp
movsl
outsb
inc
push
or
push
js
idivl
cmpsb
push
pop
out
pop
sub
iret
mov
int3
aaa
stos
push
jle
sub
sbb
adc
adc
out
data16
dec
sub
cwtl
mov
add
mov
sbb
leave
push
popa
or
mov
xlat
pop
and
inc
test
dec
xchg
adc
sub
mov
mov
fcmovnbe
sbb
mov
arpl
out
out
insb
inc
ljmp
push
xchg
loope
cltd
or
push
ljmp
mov
or
xor
fs
mov
or
mov
xchg
sti
test
movsl
jo
loop
dec
loopne
dec
or
sti
jns
fisubrs
pop
xchg
leave
out
jae
ficomps
sbb
inc
cmp
add
dec
dec
das
jmp
jg
test
cmp
mov
stc
pop
negb
decb
cmp
andl
dec
iret
dec
pop
inc
sahf
ljmp
pop
and
and
stc
xor
fnstenv
pop
sbb
mov
mov
rcl
daa
mov
jo
in
sbb
addr16
test
jecxz
in
sbb
test
mov
std
or
clc
jl
test
aas
cwtl
js
mov
lods
int3
sub
mov
inc
lods
sbb
jp
inc
cmp
dec
pop
inc
cmp
jge
cmp
jb
dec
xlat
in
out
inc
mov
xlat
aaa
rorl
and
stos
push
jl
pushf
cmp
lret
pop
mov
negl
out
cmp
js
mov
mov
cmp
mov
out
push
sub
mov
dec
sbb
pop
sub
sub
sbbl
push
sub
or
push
sbb
mov
arpl
hlt
call
mov
dec
fidivrl
jbe
sub
jns
fs
mov
aad
cmp
call
mov
out
fmuls
push
sbb
inc
and
pop
iret
cmp
rcrb
dec
out
fs
pop
js
pop
push
stos
arpl
shr
jp
sbb
push
inc
or
cmc
xchg
sbb
push
loopne
imul
xchg
mov
jp
xchg
cmp
lahf
imul
cmp
cmp
mov
sbb
mov
pop
dec
sbb
dec
sti
ss
inc
stc
mull
stc
pop
jno
push
clc
push
xor
mov
inc
or
mov
shrl
jmp
stc
sbb
pusha
imul
pop
cld
out
xor
enter
xlat
fadd
dec
cmp
sbb
and
dec
xchg
push
xchg
pop
mov
cmc
pop
push
sub
ljmp
or
jns
dec
mov
dec
leave
pop
cltd
out
push
mov
call
sub
mov
int3
pop
push
mov
mov
shlb
cmp
in
sbb
movsb
mov
call
sub
inc
sbb
pop
sub
dec
mov
push
sar
pop
or
ljmp
ja
lahf
ja
out
and
or
fldenv
add
pop
add
out
jo
cwtl
leave
loop
sbb
fldt
insb
adc
test
sub
dec
mov
jmp
jmp
adc
xchg
nop
cmpsl
inc
nop
mov
or
sub
mov
or
in
fidivrs
push
leave
or
mov
out
cmp
sbb
push
ret
test
adc
pop
lcall
push
mov
lds
mov
inc
mov
xor
fnstcw
stos
mov
jmp
addr16
call
movsl
fnstcw
leave
fildl
or
cltd
dec
or
fmull
gs
out
test
fcmovbe
and
mov
xor
cmpsl
stos
sbb
fisubs
xchg
dec
movsb
add
pop
flds
scas
xlat
ret
xor
testb
mov
mov
leave
pop
jle
stos
out
clc
fs
fs
pusha
push
js
aaa
or
nop
sub
jge
xlat
lcall
jmp
ljmp
push
push
mov
lods
rorb
lods
dec
cmp
sub
sbb
das
lret
pop
mov
mov
pop
rorb
pop
pop
jl
inc
dec
and
js
or
icebp
sbb
cli
fcomps
inc
mov
xor
cmc
and
in
stc
inc
add
pop
rorl
sub
insl
out
sbb
pop
mov
mov
pop
movsb
mov
pop
or
dec
pop
push
into
cmp
jle
dec
js
inc
push
pop
sbbl
adc
aas
jb
sub
push
sub
arpl
idiv
mov
mov
jae
push
adc
push
cmp
sti
out
jbe
movsl
pop
out
sbb
outsb
pop
repz
leave
inc
sbb
pop
jge
pop
mov
push
pop
js
push
lcall
loopne
inc
stos
jg
int
cmp
sti
pop
lahf
ret
jl
mov
cwtl
sub
sbb
mov
aaa
push
sub
sbb
xor
lds
or
fstpt
mov
or
outsl
fcomps
mov
push
fnstcw
cmpsl
ds
or
dec
test
arpl
addb
call
or
cmp
or
jo
out
pushf
jp
dec
outsb
dec
dec
pop
mov
inc
xor
xor
fidivs
fimuls
xlat
pop
pop
sbb
fdivr
add
mov
test
xor
sub
sub
or
fiaddl
aas
dec
dec
dec
nop
push
add
pop
push
mov
dec
mov
out
pusha
in
mov
inc
mov
sbb
out
jecxz
ljmp
sbb
jns
mov
mov
aaa
sub
movsb
addr16
lcall
sub
sub
cmpsl
mov
insb
js
stos
pop
inc
mov
pop
dec
push
pop
shrb
data16
cmp
push
sbb
stc
cli
out
out
push
testb
or
pop
dec
pop
cs
jae
cmp
lahf
sub
movsl
jg
inc
pop
pop
or
jecxz
fidivrs
pop
adc
mov
sbb
jl
jmp
jl
push
xchg
pop
repz
aad
notl
pop
adc
dec
pop
mov
jne
cmp
stc
sbb
pop
shrl
pop
push
jle
or
sarb
cmc
dec
dec
push
ljmp
xor
enter
out
inc
push
push
or
rcrb
insb
push
jnp
push
je
mov
fprem
enter
cmp
movsl
mov
mov
pusha
or
inc
inc
lret
test
loop
pop
btr
jmp
pop
xor
mov
dec
insl
cmp
dec
dec
dec
sti
mov
add
pop
xchg
jmp
fstpt
sbbb
enter
outsb
mov
sbb
pop
cmp
push
fs
sub
lret
test
pop
jecxz
mov
mov
pop
stos
rcr
mov
sbb
fidivrs
inc
sbb
xchg
jno
leave
imul
mov
cmp
mov
jecxz
or
sbb
push
mov
imul
jmp
sub
mov
xor
pop
fidivl
addr16
ljmp
aas
aad
mov
rolb
lock
aad
les
push
jo
in
lods
dec
sub
or
pop
push
lds
lock
push
loopne
lret
or
cs
fisubrs
jae
fdivrs
mov
sub
ja
inc
call
test
sbb
jmp
sbb
jmp
stos
sti
out
dec
stc
sbb
test
mov
push
xlat
sbb
lods
mov
dec
cmpsb
arpl
sbb
lcall
and
dec
sbb
leave
dec
xchg
test
cld
lcall
jl
call
mov
adcb
leave
lds
insb
lcall
cmp
adc
push
xor
jnp
imul
sbb
jecxz
jmp
ljmp
lret
sbb
call
pop
add
mov
clc
out
mov
sub
lahf
jo
cmp
daa
sar
inc
pushf
out
inc
or
dec
orb
daa
movl
inc
mov
pusha
pop
out
sub
mov
lcall
mov
xlat
clc
mov
stos
lock
sbb
adc
inc
cli
sub
inc
lret
sub
or
call
fcomps
ljmp
or
push
mov
jl
mov
jmp
xlat
cmp
call
or
inc
dec
add
movsb
leave
fisubl
or
push
sub
or
mov
inc
lcall
jl,pn
sarb
imul
aas
sahf
sub
xor
and
fistps
repnz
lret
or
sub
cmpsl
or
pop
subps
dec
inc
and
ds
sub
mov
insb
dec
sub
adc
mov
pop
xlat
stos
js
pop
dec
insb
insb
jmp
pop
xchg
jmp
stos
jb
sub
inc
mov
dec
int
or
movsl
enter
push
xor
inc
enter
insb
arpl
stc
sbb
cmpsl
xchg
inc
stos
adc
xchg
ficompl
sahf
dec
clc
jp
scas
stos
pop
or
sbb
adc
scas
or
mov
and
mov
push
in
sub
adc
stos
stos
xchg
inc
mov
ret
jnp
fcmove
xchg
in
sbb
sub
jns
inc
lock
cmp
ljmp
sub
mov
xor
push
push
call
dec
mov
insb
cmc
movsl
or
cli
or
outsl
sti
push
xlat
add
jecxz
mov
dec
mov
inc
pop
dec
mov
enter
insb
imul
sbb
mov
ret
mov
or
inc
pop
in
push
xchg
and
sub
mov
call
inc
push
test
jle
or
idivl
xor
test
fldenv
or
ljmp
fiadds
mov
jecxz
xchg
cmp
or
xlat
cwtl
cmp
mov
jle
leave
jle
bound
pop
cli
rclb
cmp
mov
dec
inc
sbb
hlt
mov
loope
fstpt
shl
mov
sbb
lds
ds
adc
pusha
ret
std
sub
pop
mov
inc
add
ret
repz
dec
pop
fs
mov
push
orb
data16
call
cmp
scas
mov
xor
or
icebp
mov
push
mov
mov
pusha
movsl
test
sti
sub
inc
aaa
cmp
popa
sbb
out
cwtl
sbb
dec
pop
fxch
adc
movsl
xor
rcll
push
popa
cmp
adc
cmp
and
and
jo
addr16
ljmp
dec
cmp
pop
and
arpl
test
fisubrs
cld
sub
and
mov
fsts
xor
ljmp
and
mov
xlat
jmp
lret
jnp
mov
xchg
add
stos
stc
mov
xor
movsl
cli
dec
ficomps
addr16
mov
call
xchg
stc
jp
jp
pop
pop
repnz
jecxz
and
or
or
sub
xor
leave
lcall
sub
pop
xlat
test
cmp
repnz
mov
test
in
jnp
call
test
pop
mov
push
cmp
not
sbb
notb
shlb
xor
lahf
cmpsl
sub
and
jp
and
mov
cmp
bound
stos
add
fisubrl
jmp
cmp
outsl
inc
push
dec
sub
mov
inc
jp
gs
lcall
cmpsl
mov
or
cmpsb
and
les
pop
mov
les
xlat
jae
ds
negb
jl
cmp
shll
scas
mov
xlat
ljmp
js
mov
in
xor
sub
sbb
cwtl
dec
sbb
int
loop
ljmp
cmp
inc
sub
xor
pop
push
dec
movsb
jge
int
call
mov
out
jo
jno
cmp
das
push
dec
sarb
sbb
arpl
shl
jp
dec
fcomi
rorb
insb
fs
cmp
int
cmp
and
mov
sub
out
mov
sbb
jg
or
testb
adc
mov
jb
mov
mov
sbb
pop
and
mov
jmp
sbb
aas
call
jbe
jge
add
test
sbb
or
lods
loope
cld
pushf
mov
or
push
xchg
push
pop
pop
dec
push
out
leave
cwtl
sarb
or
f2xm1
inc
fiaddl
mov
push
push
inc
sub
fistl
sbb
mov
arpl
pop
cmp
or
sbb
lcall
leave
idivl
mov
in
dec
xchg
mov
fdivrs
adc
inc
sbb
cmp
mov
dec
ljmp
sub
mov
push
sbb
pop
and
jmp
cmpsb
jge
pop
cwtl
jl
push
xchg
mov
lret
sbb
test
sub
loopne
in
jg
lds
fldenv
jmp
arpl
or
sti
out
les
das
xor
arpl
sbb
or
scas
je
data16
jmp
sbb
push
and
dec
aaa
xor
mov
adc
sbb
aam
cmp
or
cmp
pop
or
jns
test
xor
mov
mov
gs
push
imul
clc
pop
xor
repnz
fs
sbb
pop
sbb
scas
mov
rclb
sub
mov
pop
cmpb
adc
cwtl
pop
int3
imul
insb
inc
and
mov
sub
sub
mov
fdivrs
movsb
mov
push
pop
sub
pop
cwtl
jmp
push
dec
lret
cwtl
jp
cmp
inc
push
jmp
jle
pop
mov
inc
out
jo
in
ljmp
sti
fs
cmp
sbb
add
sub
mov
idivl
sub
lcall
or
testl
sbb
stos
push
inc
dec
push
fs
mov
mov
sbb
stos
jno
sbb
jecxz
imul
fldt
dec
fisttpl
or
pop
cwtl
sub
enter
outsl
xlat
pop
mov
cmp
fsts
ret
notl
push
jge
push
jb
push
pop
popa
dec
fisubrl
leave
sti
ss
jne
cmp
pop
jne
insb
movsb
sbb
or
in
sbb
jp
popa
push
lret
pop
sub
push
or
fimull
lret
movsb
call
pop
ja
ja
lods
sbb
shll
push
jmp
insb
stos
daa
popa
je
in
add
jno
fiaddl
xor
dec
lods
cli
sbb
xor
ljmp
push
sub
dec
stos
lret
mov
outsb
test
pushf
sbb
inc
mov
cmpsb
dec
xlat
mov
sub
dec
out
lea
sbbl
sub
pop
inc
cmp
cmp
push
test
push
lods
mov
dec
sbb
mov
xchg
dec
mov
or
pop
ffreep
cmp
push
rolb
imul
cmp
les
mov
jle
dec
inc
das
decb
inc
sub
sbb
sbb
or
ffreep
inc
jl
push
cmc
rolb
ljmp
enter
insb
xor
scas
xor
push
rorb
enter
push
sbb
cmpsl
xlat
mov
test
sbb
and
lock
lahf
jle
cmp
jno
out
popf
jl
mov
dec
push
mov
sub
sbb
pop
arpl
andl
pusha
popa
pop
sbb
fs
mov
dec
lcall
pop
js
insb
dec
enter
jp
xchg
cwtl
popa
dec
sub
imul
or
out
stc
dec
imull
jns
pop
sub
inc
aad
popf
bound
xchg
pusha
or
fidivrs
lcall
decb
cli
sub
outsl
call
stc
lret
push
pop
fld
and
pop
call
jne
xchg
pop
cmp
cwtl
mov
sub
and
push
push
dec
in
and
sbb
push
xor
ljmp
in
ds
pop
mov
sub
mov
imul
aam
idiv
inc
jmp
sub
fldcw
mov
cmp
sbb
lret
jmp
sub
xchg
cmp
ljmp
jne
test
mov
cmp
cli
jmp
jns
jmp
sbb
movsl
clc
or
les
cmp
sub
shlb
clc
cld
lret
je
popa
ljmp
pop
data16
inc
jb
or
enter
dec
mov
mov
iret
xlat
fdivrp
sub
enter
stos
dec
jmp
pusha
or
ljmp
lock
pop
sbb
divl
lret
scas
int
sbb
das
push
push
dec
imul
stc
popa
mov
mov
leave
and
push
rcrl
push
and
cwtl
call
cmp
icebp
outsb
mov
cmpsl
sub
dec
stos
punpckhdq
or
insl
sbb
out
test
cmp
mov
sbbl
ja
inc
cli
jecxz
mov
dec
ret
or
aam
fldl
jp
leave
stos
fcmovb
mov
das
sbb
pop
adc
pop
mov
jb
lock
mov
xchg
loopne
add
or
test
or
mov
fisubl
fstps
pop
pop
inc
das
xor
sbb
pop
aam
pop
in
push
movsl
sub
test
orl
pop
loope
aad
test
sbb
fldcw
dec
cmp
sub
dec
xchg
jmp
imul
cmp
lods
enter
xchg
jge
pop
sbb
dec
sub
mov
out
rolb
test
movq
dec
in
add
xchg
inc
mov
mov
sbb
adc
outsl
loop
mov
pop
sub
stos
pop
pop
fs
cmp
mov
arpl
cltd
xchg
push
fsubr
std
iret
dec
enter
push
fimuls
pop
pop
cld
dec
mov
mov
lock
aas
pop
leave
test
mov
xchg
aaa
sub
data16
sub
pushf
sub
jnp
leave
or
xchg
mov
or
sbb
add
cmp
js
sahf
or
mov
pop
cmp
sub
cmp
push
sub
stc
and
or
cwtl
push
xor
subb
dec
sbb
mov
sbb
or
aas
or
std
jmp
out
in
insb
or
mov
aam
fidivs
and
pop
dec
out
pop
fstp
cmpsl
sti
stos
mov
sbb
or
lcall
mov
adc
xbegin
inc
push
leave
and
sbb
pop
sub
imul
sti
pop
xchg
insb
add
dec
stc
fmuls
mov
mov
mov
pushw
xlat
pop
test
ljmp
loope
inc
push
or
push
jo
or
jp
das
and
sbb
repnz
sbb
xchg
and
sbb
sub
cli
push
pop
jp
mov
pop
sti
mov
inc
ficoms
pop
sub
push
gs
call
test
sub
stos
arpl
dec
sbb
imul
cwtl
dec
lcall
and
gs
in
ljmp
xor
idivb
push
clc
push
xchg
aas
mov
jne
sub
push
ficompl
ret
arpl
nop
imul
cmp
fdiv
pop
data16
lret
in
inc
rdpmc
in
mov
inc
pop
imul
sub
sub
fisubrs
and
stos
arpl
jmp
ljmp
jmp
sarl
movsb
cmp
mov
fdivrp
cmp
jl
aad
cld
sbb
adc
lods
push
daa
fisubrs
sbb
or
mov
pop
or
dec
sbb
or
movsl
dec
jmp
xchg
pop
jp
ficompl
cli
lds
cli
pop
mov
lret
negl
adc
call
mov
sahf
enter
mov
pop
hlt
cmp
shll
add
sub
pop
movsl
push
mov
cmp
mov
pop
and
out
sbb
xchg
push
adc
out
mov
imul
mov
or
out
gs
fwait
push
inc
cli
imul
jp
pop
sbb
jp
adc
daa
and
test
or
mov
js
or
cmp
fisubrl
jecxz
in
sbb
jmp
cmp
mov
jae
cwtl
sub
addr16
dec
cmp
sbb
fptan
aas
dec
jmp
inc
sbb
cltd
xor
cld
movsl
mov
fcmovb
or
lcall
cli
mov
stos
push
sub
clc
ljmp
xlat
in
mov
movl
outsb
mov
cmp
aaa
lret
test
pop
or
and
and
stos
mov
leave
inc
ds
dec
in
jl
stc
dec
jmp
pop
sub
inc
inc
dec
inc
ret
jbe
and
call
subl
lret
inc
sbb
mov
mov
pop
rorl
lods
dec
push
xchg
xor
push
into
or
ret
fdivrp
js
sahf
insb
sub
cmp
rcrl
sbb
xor
sbb
or
fisubrl
dec
jmp
leave
scas
mov
pop
insb
mov
pushf
sub
jl
mov
push
or
sub
adc
cmp
loope
push
mov
sbb
sub
lea
mov
or
lcall
sbb
lods
mov
aaa
lret
ljmp
push
fistps
mov
xlat
mov
ds
lret
push
lods
pop
cmp
ret
mulb
or
mov
enter
adc
mull
call
sbb
cmpsb
jmp
clc
popa
movsl
lret
mov
and
leave
lahf
nop
pop
jae
jmp
ret
mov
pop
dec
gs
sub
in
mov
ss
and
jnp
lret
int3
inc
adc
cmp
inc
out
movsb
or
dec
xchg
push
cmpsb
js
push
pop
pusha
or
pop
shrb
pop
nop
pop
imul
cmp
shrb
push
dec
cmp
out
push
fwait
clc
lret
push
clc
jae
imul
cmp
pop
imul
sub
and
aas
sbb
dec
dec
inc
mov
pop
cmp
mov
leave
cmp
repnz
loop
mov
sbb
mov
ja
dec
cmp
mov
js
cmpsb
subl
outsl
mov
inc
add
cmpsl
mov
out
repz
mov
push
mov
sbb
xor
dec
ljmp
lcall
and
sbb
js
sbb
or
scas
pop
or
pop
sub
mov
pop
add
div
insb
leave
sbb
dec
daa
mov
push
mov
fprem
sbb
inc
jge
add
dec
sbb
out
mov
sub
lcall
testl
sbb
push
lret
xchg
pusha
jecxz
jb
sbb
and
cld
leave
or
jmp
pop
pop
dec
adc
xorl
js
aam
push
pop
sbbl
sub
mov
fstpt
mov
dec
jp
sbb
je
xor
mov
cmpsb
and
jmp
pop
sbb
clc
mov
push
cmp
dec
pop
dec
fcomps
jmp
or
pop
out
xchg
movsl
test
jnp
or
jmp
mov
sub
insl
mov
fdivrp
lcall
dec
loopne
xchg
dec
lods
jmp
or
mov
mov
insb
scas
sbb
mov
mov
divb
mov
mov
ficoml
andb
jmp
cmp
xor
cmp
ror
mov
cmp
pop
pop
movsl
ds
push
jg
push
cmp
aaa
pop
lcall
mov
xchg
jae
cmp
bound
fistpl
jge
ljmp
ds
outsb
push
jg
jmp
jle
jmp
lods
test
jmp
cmp
mov
sti
and
dec
fs
enter
pop
movsb
test
sbb
dec
sbb
aam
pop
rorl
out
loope
int
sbb
mov
cmp
decb
sti
sub
add
xlat
js
inc
scas
cmp
push
outsb
push
sub
aas
jle
push
stos
in
ljmp
mov
sbb
mov
sub
insl
pop
xchg
clc
mov
andl
jecxz
movl
stc
mov
or
jl
pop
arpl
test
push
push
cmp
adc
cltd
out
push
testl
sbb
sub
lret
mov
cmp
add
jg
sti
sbb
lcall
add
dec
jp
mov
mov
sbb
mov
or
out
mov
arpl
dec
jl
test
js
sub
sti
pop
sbb
or
xor
and
sbb
sbb
pusha
sti
pop
dec
stos
cmp
push
cmp
jns
mov
mov
sbb
jle
lret
das
sub
imulb
sub
sbb
fs
lret
sbb
sbb
dec
movsl
lret
ljmp
fcmovu
add
sub
and
aas
daa
jmp
inc
or
inc
pop
jle
pop
xor
or
mov
stos
or
clc
cmp
cmpb
pop
sbb
sub
sti
xor
cmpsb
push
cmp
pop
push
mov
jmp
cmp
or
xchg
stc
daa
cwtl
push
mov
jns
mov
jns
mov
cwtl
pop
movl
mov
and
sub
js
mov
jnp
mov
cli
dec
dec
lods
inc
dec
fisttpl
jge
mov
dec
fwait
stos
cwtl
stos
inc
fsubrp
test
inc
mov
sub
dec
push
stos
dec
jmp
pop
mov
fsubrs
xchg
daa
loopne
aaa
push
pop
jecxz
or
xchg
pop
fnstcw
cwtl
call
mov
add
leave
out
sbb
clc
mov
insl
out
jmp
mov
dec
or
cmpsb
add
sub
mov
push
stc
stos
mov
stos
jns
in
push
jmp
mov
mov
insl
es
sbb
js
mov
stc
std
push
cli
fimuls
idiv
cmp
add
std
cmp
cmp
aam
mov
push
ljmp
stc
sbb
pop
sub
pop
jmp
sub
sbb
mov
pop
inc
sbb
ret
and
leave
fiaddl
imul
cmpsl
pop
dec
js
push
imul
call
pop
enter
sbb
jecxz
imul
jp
stc
jecxz
popf
out
sub
rolb
or
pop
ljmp
fcmovbe
notl
xor
rcrl
inc
psubusw
push
sbb
das
inc
dec
pop
subb
or
dec
jmp
or
xchg
stos
fmull
repz
loopne
jp
xor
add
push
push
push
push
imul
stos
mov
sbb
in
dec
lret
stos
dec
sbb
cmc
in
push
pop
fisttps
pop
mov
mov
in
cmp
inc
and
xlat
cli
push
call
or
xchg
leave
cmp
pop
jle
sub
dec
mov
outsl
inc
dec
imull
fs
jp
insb
jmp
loope
lods
sub
jge
dec
test
and
or
push
test
enter
or
sbb
sbb
fs
pop
mov
sub
insb
movsl
inc
push
popfw
aas
or
pop
jp
pop
push
stc
sub
mov
faddl
test
sub
cmp
dec
fisubl
jmp
and
pop
push
xlat
xlat
cmp
cmp
pop
mov
push
daa
and
sbb
fmul
arpl
mov
and
idiv
clc
dec
mov
dec
jg
movsl
sub
dec
cmp
movsl
sub
dec
mov
movsl
movsl
sub
imull
or
dec
enter
or
mov
lret
in
dec
and
sbb
fcmovbe
and
push
jmp
ret
sbb
fimuls
push
stos
pop
test
int3
push
inc
insb
sbb
mov
hlt
sbb
jmp
dec
stc
pop
roll
or
pop
out
or
mov
ds
cmp
pop
repz
cmp
xchg
cmp
inc
and
lods
dec
jp
ljmp
testb
mov
or
movaps
cmp
cmp
lds
out
std
popf
mov
sub
mov
or
dec
mov
inc
dec
dec
push
push
pusha
lret
jp
lds
inc
ret
cmpsl
jmp
pop
pop
roll
fimuls
push
mov
cli
jmp
jnp
fistpl
cld
mov
outsl
cmp
pop
leave
js
adc
pop
insb
mov
idivl
dec
xor
negl
mov
pop
inc
call
jmp
fisubrl
call
jecxz
sti
adc
and
dec
pop
mov
stc
sub
das
test
push
sub
fdivp
or
pop
ljmp
dec
add
rorb
fistpl
cwtl
mov
adc
notl
sub
sbb
jmp
cmpsl
fs
lret
dec
cmpsb
push
out
dec
mov
call
pop
push
loope
xlat
push
test
dec
sub
push
sub
or
sbb
mov
imul
jnp
fsub
mov
or
es
sub
ljmp
movsl
test
movsl
mov
dec
jp
mov
adc
pop
fldt
pop
cmp
jp
fmuls
pop
sub
mov
clc
pop
jge
sbb
call
stos
push
ljmp
pop
testl
sbb
mov
inc
dec
enter
jb
cli
sub
testl
inc
adc
addr16
leave
sbb
mov
xchg
sub
mov
aad
sub
das
sbb
push
mov
filds
and
movsl
jns
pusha
cmc
jb
mov
movsl
mov
jp
cmp
push
repz
into
filds
fldt
fldt
push
xlat
inc
imul
xchg
jns
cmp
pop
mov
dec
cmp
movsl
dec
mov
dec
dec
aam
jns
bound
out
cwtl
stos
fmull
sub
xchg
inc
dec
adc
cltd
mov
fdivrs
adc
call
sbb
jbe
cmp
cmpsl
call
jnp
mov
test
movsl
mov
movsl
xchg
iret
xchg
movsl
mov
call
iret
and
movsl
add
cmp
rcl
movsl
add
test
dec
movsl
add
jle
add
test
clc
fsubrs
cmpsb
imul
sub
ja
push
pop
or
cmp
lret
dec
pop
jae
and
xor
jl
cmp
inc
adc
jns
xchg
sub
dec
loopne
dec
movsb
sub
cwtl
sub
data16
lcall
or
mov
fists
jecxz
testl
lods
sub
inc
lcall
push
pushl
je
dec
adc
sub
dec
pop
pop
cmp
pop
pop
cmp
scas
ja
mov
push
inc
loope
mov
lcall
imul
test
sbb
js
mov
xlat
pusha
mov
jno
in
inc
ficomps
mov
jne
jmp
add
jge
enter
clc
stc
mov
rcrl
jp
pop
jae
push
insb
sti
sbb
or
mov
addr16
ljmp
pop
mov
mov
jp
cmp
jae
icebp
sub
pop
fldcw
mov
lret
sub
and
cmp
les
or
call
js
test
jae
cwtl
jno
sbb
gs
jmp
dec
dec
test
cs
mov
cli
sahf
outsl
or
mov
call
push
cs
mov
insb
clc
ljmp
xchg
sbb
sub
cmp
dec
leave
dec
imull
cwtl
in
iret
cmp
sub
lret
mov
fisubs
dec
movsb
pop
jle
jmp
adcl
xlat
mov
loopne
xor
dec
jne
push
loop
mov
pop
imull
mov
xchg
xorl
arpl
sbb
aam
push
aad
dec
iret
imul
insb
in
xchg
pop
dec
iret
in
clc
cli
or
jp
mov
stc
mov
movsl
mov
mov
shrb
or
and
sub
pop
fidivl
gs
movsl
or
fldt
fcomps
fisubl
repnz
push
cli
add
ljmp
cmp
dec
dec
fidivl
dec
lods
daa
or
mov
stc
sbb
mov
lcall
pop
insb
ja
fs
call
js
push
dec
repnz
out
add
sub
dec
pop
pop
ljmp
lret
leave
cli
stos
mov
mov
cmpl
fstpt
ljmp
out
sbb
mov
aas
cmp
adc
jp
pop
pop
ljmp
add
or
call
cmp
dec
jae
stc
jmp
cld
insb
out
addr16
jp
leave
stc
mov
xor
dec
dec
push
inc
jno
pop
popf
xlat
sub
pop
push
pop
js
shr
push
pop
xchg
pop
mov
imul
xchg
imul
or
fimuls
jmp
jle
lods
xor
jo
fdivrs
sbb
and
fsub
jl
addr16
jmp
pop
mov
cmp
lret
pop
xorb
sbb
imul
jp
fimuls
out
xchg
cld
cmpsl
das
pushf
cmp
xchg
jmp
arpl
pop
cmp
data16
das
cmp
fidivrs
sub
lahf
mov
pop
lcall
movsb
test
aas
mov
out
rcrl
cmp
fs
pushf
lcall
push
adc
loope
imul
aaa
fdivrp
hlt
mov
sbb
mov
js
push
js
leave
mov
pop
or
repnz
ljmp
mov
jne
or
dec
or
imul
mov
fidivrs
js
cwtl
sub
aaa
xchg
test
rcr
adc
into
std
sub
mov
sub
inc
subb
jecxz
inc
or
ja
ret
jp
negl
jmp
rcrb
or
fimull
popf
das
inc
dec
or
adc
fsts
or
stc
lcall
es
gs
push
lret
dec
cmp
jp
cld
sbb
add
pop
cmp
sub
call
in
mov
fistpl
sbb
ficomps
sbb
mov
scas
sub
mov
outsl
cwtl
sbb
cmp
cmp
xchg
cmp
or
mov
sbb
pushf
idiv
xor
adc
fcomi
fidivrl
out
inc
sub
lret
clc
jl
fadds
lcall
and
pop
mov
imull
dec
imull
sahf
data16
pop
sbb
fmul
mov
fidivrs
daa
scas
cli
cmc
push
add
fsubs
pop
jmp
enter
test
pop
stos
mov
outsl
sti
insb
sub
or
pop
cmp
js
sbbl
rcrb
fmuls
out
clc
inc
test
pop
dec
mov
or
lcall
mov
icebp
mov
fldl2t
gs
ret
mov
or
loop
mov
pop
loope
jnp
dec
lods
cli
ret
dec
cmp
dec
xlat
gs
jmp
sub
sub
or
add
push
lods
clc
cli
or
or
pop
outsl
jecxz
cmp
ret
inc
ror
pop
pop
popa
stc
call
outsl
mov
in
cs
sub
mov
cmp
fisubl
jmp
and
sub
dec
jns
push
out
mov
sub
mov
and
scas
lahf
imul
sub
es
jmp
mov
cmp
cwtl
fistpll
push
fisubrs
mov
jmp
or
iret
ljmp
push
cmp
push
pushf
aas
jge
pop
lcall
push
sbb
and
out
or
scas
dec
test
cmp
push
dec
and
dec
and
lret
pop
pop
push
lcall
dec
cli
pop
ds
icebp
stos
psubsw
pusha
xchg
clc
add
push
gs
sbb
fs
das
dec
sbb
test
mulb
enter
mov
repz
xor
cmp
test
pop
int3
pusha
or
cmc
push
cmp
mov
fsubrs
in
fucomi
dec
ds
movl
leave
stos
mov
dec
in
sub
cmpsb
jnp
inc
cmpsl
leave
sub
cmp
popf
cmp
sub
cltd
mov
stos
js
jg
sbb
push
dec
mov
lea
stc
xchg
add
sub
shrl
vmulpd
or
mov
sub
pop
cmp
cmp
sub
fmul
clc
daa
xor
cltd
test
fs
in
mov
jl
aad
clc
pop
sbb
jp
pop
fidivrs
jbe
cmp
test
mov
xlat
sub
aad
sbb
mov
xchg
pop
jmp
sbb
xchg
lahf
cli
lahf
js
das
scas
leave
jmp
arpl
popa
movsl
push
mov
pusha
repnz
pop
pusha
fdivrs
loope
pop
dec
or
sbb
pop
sbb
pop
push
adc
pop
addr16
movsb
cmp
mov
stc
dec
mov
pop
mov
pop
rcrb
dec
imul
push
aam
xor
std
cmp
mov
push
cmp
leave
scas
cmp
or
sbb
inc
pop
addr16
js
dec
xor
mov
mul
pop
lcall
dec
dec
sarl
or
sbb
mov
ljmp
pop
push
push
imull
mov
mov
inc
lahf
dec
mov
sub
dec
test
mov
dec
lret
push
test
mov
xlat
stc
cmp
cmp
pop
stos
or
jmp
jmp
imul
out
or
sub
into
cmp
adc
lret
test
in
pop
add
cmp
add
dec
fldt
cmp
mov
cmp
push
addr16
xchg
rclb
or
stos
fcomp
cmpsb
xor
dec
rcrb
fidivrs
dec
outsl
inc
cli
insb
or
or
mov
daa
leave
cli
sub
lea
add
cmp
sti
insb
sub
mov
pop
leave
xchg
bound
out
adc
stos
sub
sarb
js
lods
xchg
lea
or
negl
cmp
sarb
ja
lret
sbb
jecxz
mov
or
sub
jge
jbe
dec
pop
push
cli
test
or
movsb
in
test
mov
cmp
xor
push
lods
inc
enter
pop
nop
or
lcall
sbb
fstpt
push
in
and
mov
aas
sbb
stos
jnp
hlt
movsl
push
push
inc
cmp
movsl
andb
inc
pop
lds
pushf
mov
cmp
clc
dec
test
pop
lds
pop
or
sahf
test
push
mov
xor
mov
pop
inc
sub
push
pop
mov
and
dec
or
faddl
pop
lret
imul
std
lret
ds
add
leave
push
fmul
call
dec
testb
addr16
or
ljmp
mov
xchg
push
lcall
scas
mov
stc
mov
testl
or
dec
lcall
pop
inc
dec
push
pop
test
out
push
stos
lahf
in
or
mov
fcmovnu
loopne
jb
sbb
leave
inc
xchg
jns
push
mov
mov
out
sub
lods
aas
push
fimull
sbb
dec
fs
cli
and
push
push
mov
pop
hlt
insb
fsubr
shr
das
cmpsl
stos
sbb
and
leave
iret
or
mov
or
xchg
sub
pushf
sub
pop
enter
js
hlt
mov
js
sbb
daa
negl
xchg
ljmp
out
xchg
aas
cmp
pop
call
lcall
sub
pop
gs
sbb
imul
sub
and
lods
enter
sbb
lret
pop
stc
pop
sub
cmpsb
sub
pop
mov
jp
adc
xchg
arpl
jl
insb
mov
std
dec
push
clc
leave
and
pop
std
add
push
jecxz
cwtl
dec
push
movsb
lret
sub
pop
dec
mov
cmp
inc
mov
dec
cmp
xchg
cmp
pusha
dec
pop
sbb
fisttpl
sbb
pop
cmp
insb
sti
rcrb
xor
loope
sub
in
mov
pop
jmp
sbb
mov
xor
dec
mov
sub
mov
jmp
stc
inc
sub
jmp
cmp
pop
pop
mov
fcomps
sub
lock
mov
cmp
push
mov
sti
orl
stos
or
jb
rcrb
out
mov
scas
xchg
lods
data16
jg
ljmp
int3
mov
push
inc
xchg
pop
dec
xor
jp
into
imul
dec
std
fstpt
lcall
stos
pop
xlat
clc
mov
insb
idivb
or
pop
popa
sub
inc
sbb
stos
mov
fdivs
mov
xchg
jae
sti
sub
pop
mov
pusha
add
cmp
fnstcw
pop
dec
xlat
pop
push
sbb
pop
pop
inc
mov
jge
lods
cs
sub
jge
call
jg
inc
stc
insb
cmp
inc
or
or
mov
leave
mov
mov
inc
jmp
or
sub
outsb
mov
insb
sbb
sub
ret
inc
jb
in
push
sahf
pusha
inc
mov
and
jg
or
pop
lods
mov
dec
ljmp
test
push
or
ds
mov
les
ret
mov
or
or
dec
insb
and
push
in
ja
ret
dec
pop
mov
or
in
in
pop
ljmp
pusha
or
dec
push
stos
ret
ret
fidivrs
pop
jmp
adc
mov
shlb
adc
mov
mov
aaa
sub
mov
fsubs
in
xchg
ja
mov
out
sub
xlat
sub
mov
popa
leave
or
cmpsl
push
fidivrs
out
iret
stos
cmc
imul
stc
cmp
js
pop
out
jmp
in
mov
and
push
xchg
ljmp
mov
jecxz
stos
jmp
jmp
insl
cmp
mov
leave
scas
cmp
cwtl
dec
out
cmp
adc
pop
stos
sub
mov
cmp
push
adc
out
inc
dec
scas
ret
lods
pop
fcmovnb
fs
shlb
faddp
das
aam
jecxz
stos
call
xor
fcompl
xchg
mov
pop
loop
lcall
dec
xlat
sti
ds
aas
adc
pop
pop
jno
jmp
cmp
stc
repnz
adc
lods
enter
iret
sub
cmp
cmp
jmp
xlat
adc
jg
cmp
cmp
pop
sbb
pop
inc
test
jp
imul
adc
lret
dec
pop
xor
xor
dec
imulb
out
push
dec
sarl
add
test
dec
push
xchg
stos
sub
sbb
outsb
dec
push
stos
sarb
mov
cwtl
pop
dec
pop
mov
fsubs
cld
rclb
mov
sub
cmc
aaa
repnz
mov
rclb
push
cwtl
das
xor
stc
adc
fsubp
cmp
cmp
adc
jmp
repnz
add
rcrl
stos
pop
and
cwtl
mov
mov
jecxz
lods
leave
jmp
pop
inc
dec
enter
mov
sti
jle
cmp
out
popa
loop
mov
or
or
xor
add
sub
out
lods
dec
mov
and
and
xchg
xchg
jle
lret
cmpsl
push
cmp
sbb
push
sbb
lock
scas
repnz
std
div
adc
adc
pop
sub
sbb
dec
sub
call
mov
lock
test
lock
pop
ljmp
addr16
imul
lcall
ljmp
fdivrl
insb
sbb
push
fcomps
in
cmp
and
loop
aas
push
sub
cli
in
pop
dec
cwtl
sub
enter
hlt
xor
and
inc
ss
jno
jl
or
pop
pop
push
ss
mov
sub
pop
cli
sbb
repnz
enter
hlt
sbb
sub
jmp
out
push
pop
or
sahf
sbb
in
or
and
ret
leave
sub
lcall
rolb
and
cwtl
fsubrl
adc
test
sbb
mov
imul
call
cli
sub
sub
sbb
push
push
call
jp
sub
ja
fildll
sbb
pusha
pop
sub
jmp
mov
cmp
mov
cmp
sbb
cli
jb
lret
gs
shrb
pop
dec
mov
out
das
sub
sub
shlb
push
mov
lock
xchg
mov
pop
or
push
lea
dec
jbe
pop
inc
lea
adcl
dec
enter
ds
pop
ds
dec
jl
inc
pop
leave
dec
push
pop
loope
test
mov
adc
loopne
push
and
sub
loopne
mov
ds
das
movsl
cmp
or
in
outsl
test
jmp
jl
cmp
in
ljmp
mov
mov
repz
fdivp
jmp
or
lret
fmull
cltd
testb
sub
ljmp
cmp
insb
mov
and
jge
and
sub
dec
or
jns,pn
or
inc
jge
dec
pop
mov
or
sbb
sub
mov
pop
data16
dec
mov
lret
sbb
pop
mov
dec
and
enter
out
cmp
jnp
dec
ljmp
decl
insb
sbb
xor
cmp
testl
mov
in
js
sarl
mov
adc
mov
inc
jg
aaa
add
mull
sub
xor
rorl
ficomps
sub
xlat
daa
out
movsb
dec
popf
lret
std
sbb
pop
push
sti
out
cmp
jle
cltd
sub
adc
xchg
dec
cld
idivl
sbb
enter
out
mov
cmc
or
sub
pop
mov
push
dec
dec
xlat
dec
mov
lahf
ret
into
fistps
mov
loopne
cmpsl
ljmp
or
pop
mov
das
add
arpl
js
testl
dec
push
lods
ljmp
push
or
insb
pop
adc
popl
pop
cmp
addr16
cli
fsubr
sub
repz
or
js
gs
dec
pusha
sub
inc
xor
pop
sbb
or
cwtl
cmp
and
or
clc
or
mov
and
out
adc
mov
jno
cmp
pop
sub
or
cmp
push
jmp
sbb
lcall
xchg
sub
bound
enter
jmp
sbb
insb
cs
fcomps
inc
test
mov
pop
aad
sub
push
and
pop
outsl
lret
stc
sub
fstps
push
pop
sahf
pop
in
arpl
enter
pop
popf
jmp
dec
xchg
fsubs
fs
test
inc
movsl
pop
pop
in
cli
lret
sbb
or
stc
sbb
stos
pop
push
mov
jl
fiaddl
xchg
jl
mov
stc
cmpb
jmp
jle
push
dec
cmpl
mov
or
sbb
lcall
repnz
sub
or
xchg
leave
add
in
cli
bndstx
sub
out
insl
ret
push
les
insb
sbb
pop
cmp
stos
mov
pop
cmp
sbb
jmp
out
xor
testl
call
jle
xchg
or
stos
sti
dec
inc
aad
popa
push
mov
loopne
lcall
shl
add
mov
adc
sti
gs
push
cmp
push
sub
pop
xchg
mov
aas
call
sti
xchg
and
daa
daa
iret
jge
xchg
clc
imul
cli
cmp
and
fnstcw
fiaddl
idivl
xor
ljmp
pop
mov
jg
stc
cmp
jbe
cli
jge
jge
or
or
pop
insl
dec
sbb
nop
sbb
imul
sbb
lods
stc
mov
or
cwtl
fldt
mov
ljmp
mov
pop
cmp
negl
mov
test
ss
aas
ficompl
sti
push
andb
sub
dec
das
mov
daa
test
inc
aaa
dec
dec
aam
mov
push
pop
fincstp
add
dec
clc
ja
sub
neg
mov
enter
pop
outsb
pop
pop
imul
jl
lock
pop
mov
mov
js
mov
or
insb
mov
pop
sbb
stos
mov
out
jmp
enter
in
push
sub
add
sti
dec
mov
loopne
lea
fsubrs
fcmovnbe
mov
in
clc
mov
cmp
mov
lock
sbb
inc
push
add
dec
jno
cmp
movsl
push
sbb
scas
cli
sub
out
sbb
pop
jle
jmp
pop
sbb
xchg
sub
or
jne
enter
clc
or
lcall
dec
dec
mov
sub
inc
aad
cmpsl
or
adc
nop
cmp
jg
in
lahf
cmpb
bound
std
fldl2e
sahf
push
or
ret
mov
pop
js
sub
or
adc
sbb
xlat
arpl
cmp
stos
mov
cmp
jns
in
jb
out
jecxz
lock
sub
xor
fstpt
pop
scas
out
sub
stos
cmp
in
lods
stos
sahf
das
pop
pop
call
out
cwtl
mov
loope
dec
fcomps
mov
cmp
pop
sub
sub
dec
jl
lock
int
ds
dec
fmulp
sbb
lods
lret
sub
js
pop
or
sub
push
daa
test
dec
or
inc
or
pop
lods
xor
mov
mov
fldt
or
out
ljmp
sbb
aas
jno
cwtl
pop
insb
lret
dec
test
jnp
or
pop
outsb
jge
jo
std
and
rcrl
or
nop
fwait
shll
xchg
cmp
or
adc
mov
in
cmpsl
nop
lock
gs
cmp
mul
fdivs
or
xchg
jmp
pop
add
pop
xor
stc
arpl
call
ds
popf
std
fldt
dec
or
lods
pop
cmp
fldcw
ljmp
gs
std
pop
insb
jmp
lds
and
std
fcoms
cmp
shlb
dec
popa
inc
stc
and
nop
pop
aaa
sbb
jo
jae
push
sub
mov
subb
out
pop
lret
leave
cmp
fimull
and
sub
sti
movsb
mov
xor
dec
inc
arpl
int3
push
dec
sbb
cmp
loope
pop
xchg
pop
jmp
daa
lcall
mov
sub
jae
xchg
lcall
jmp
enter
sbb
jl
popf
sti
push
stos
stc
adc
dec
push
stc
ret
popf
mov
cmpsl
stc
xchg
test
movsl
jmp
testl
push
fisubs
mov
ljmp
cmp
dec
lcall
sbb
lods
insb
ljmp
leave
mov
xchg
sbb
and
fwait
mov
xchg
sbb
fsubrl
cli
fsubs
dec
ljmp
hlt
out
xchg
scas
dec
sbb
sbb
das
shrb
andl
mov
movsl
jl
xchg
call
mov
jmp
mov
movsl
jg
or
mov
pop
cmp
jne
fbld
sub
dec
dec
sub
das
test
js
xlat
mov
sub
dec
sub
mov
repnz
addr16
js
mov
mov
cmp
cmp
stos
sub
push
and
lret
neg
addl
in
pop
test
loope
movsl
test
dec
jecxz
mov
les
lret
mov
sub
mov
movsb
add
cmc
push
ja
mov
cli
mov
das
movsb
mov
xchg
push
out
sbb
push
jl
jmp
je
xchg
gs
fisttpl
jl
pop
cmp
jmp
pop
jp
or
inc
xchg
popa
dec
cmp
add
lret
push
or
fiadds
imul
dec
stos
jp
mov
inc
ds
outsl
dec
pop
sub
jmp
jp
mov
cli
sti
hlt
lcall
lret
jno
or
xor
or
ljmp
sbb
push
jg
push
and
cmp
jmp
cmp
adc
imul
mov
leave
lods
stc
sti
test
insb
push
sub
dec
leave
or
adc
fisubrs
test
lcall
fimuls
loope
jo
pushf
sti
mov
fs
push
mov
hlt
cmc
leave
mov
cwtl
enter
loopne
sbb
xchg
stos
leave
jnp
dec
ljmp
push
mov
or
lcall
test
cmp
adc
pop
dec
mov
fdivrs
jmp
pop
mov
or
ds
clc
idiv
sbb
shlb
sbb
ss
das
pop
mov
daa
lods
add
out
mov
cli
and
or
int
pop
dec
jmp
or
and
push
mov
jp
bound
aaa
stos
sub
push
enter
into
dec
cmp
pushf
or
das
stos
jp
and
js
enter
jnp
insb
pop
dec
lcall
push
popf
shlb
je
push
insl
lea
mov
dec
loope
sub
jmp
mov
ret
and
mov
imul
dec
enter
test
movsl
mov
mov
iret
mov
stc
jae
push
test
pop
xchg
stc
test
sub
jne
out
fisubl
xlat
pop
dec
sti
mov
arpl
xchg
xor
push
mov
xchg
sbb
sar
and
and
add
push
lods
repz
sub
scas
test
lahf
enter
dec
jp
or
add
pop
mov
inc
jbe
movsl
sti
or
and
stos
rcrb
pop
mov
mov
inc
ja
jo
inc
data16
jp
mov
add
dec
movsl
fisubrs
or
cmp
dec
and
out
cmp
jno
cmpsb
pop
dec
adc
mov
jp
pop
leave
out
cmc
idivl
fisubrl
cmp
push
std
cmp
fisubs
mov
xlat
mov
insl
push
dec
mov
clc
sbb
or
ficompl
leave
dec
pop
dec
fmuls
xor
xlat
cmp
or
lret
mov
movsb
in
lods
js
adc
scas
push
jge
jb
sbb
jae
jno
js
jbe
pop
ds
lods
push
and
cltd
inc
cmp
mov
loope
stc
or
push
cmp
pop
js
pop
or
jp
shll
mov
fucomp
add
dec
gs
mov
mov
lret
loop
pop
cli
mov
mov
stos
movsl
pop
pop
es
clc
cmp
push
inc
sbb
sub
sub
ljmp
dec
xchg
popa
sub
cwtl
cli
enter
dec
in
mov
lods
bnd
cmp
lea
leave
cmp
pop
pop
out
int
outsb
add
or
jnp
sbbl
push
sub
or
adc
test
test
add
sub
or
enter
cmp
mov
test
stc
dec
loopne
dec
sub
cli
js
je
cmp
push
shrl
sbb
inc
add
and
dec
fcmovnb
scas
inc
cld
js
mov
sbb
mov
lcall
out
cwtl
sbb
and
or
dec
or
ud2
sbb
dec
into
clc
inc
xchg
imul
sub
mov
inc
ja
pop
cltd
push
cli
and
dec
insb
fnstcw
pop
pop
or
pop
cli
stos
sub
sbb
pop
jae
cltd
sbb
or
jmp
lret
lods
enter
dec
lcall
vmovdqa
sub
imul
jo
push
movsl
lret
int
cmp
outsb
popf
in
repz
jmp
mov
ljmp
jl
inc
pop
dec
scas
push
imul
dec
push
repnz
inc
mov
dec
inc
push
imul
stc
xor
cs
add
dec
pop
sbb
jge
mov
insb
sub
xchg
fiaddl
shrl
sbb
mov
or
sub
mov
lds
imul
arpl
xlat
mov
dec
inc
mov
loop
pop
or
mov
testb
mov
push
fdivr
sbb
repnz
popf
pop
or
fldcw
or
out
pop
test
popa
pop
pop
insl
mov
mov
jle
fimull
cmp
ljmp
stc
fisubl
cmp
or
sbb
arpl
dec
xlat
jp
pusha
mov
xlat
cmp
insb
or
dec
fxch
or
insb
jno
jg
pop
sbb
or
pusha
leave
dec
sub
movsl
or
mov
xor
fildl
sub
jmp
adc
and
sub
jmp
cmp
cwtl
cmp
xchg
aas
sti
or
add
test
sub
xchg
cli
jnp
jmp
cmp
cmp
test
arpl
enter
mov
pusha
fisubrs
jmp
mov
or
dec
fimuls
jp
insl
add
push
or
sub
jae
jne
insb
mov
cmp
or
and
shrb
hlt
mov
jno
sub
call
les
cmp
jbe
jle
add
sub
or
imul
jecxz
push
sub
push
imull
sbb
or
mov
shrl
mov
ret
or
dec
pop
sub
jl
enter
lods
or
cmp
mov
pop
popa
dec
cmp
testl
lcall
dec
mov
pop
dec
mov
int3
je
sti
sbb
push
sub
jmp
jmp
insb
sub
fisubrl
adc
pop
lds
fsubrs
hlt
pop
stc
repnz
stos
sbb
dec
mov
sti
jl
jns
call
inc
inc
or
int3
xor
inc
jp
pusha
ds
jns
mov
pop
jbe
add
fcmovnu
shlb
mov
lea
fwait
or
inc
add
sub
push
dec
fsubrs
pop
sbb
stos
test
mov
and
or
out
pop
insl
das
sti
mov
xchg
jle
mov
stc
out
ret
adc
and
mov
cmp
stos
stos
insb
cmc
in
pop
es
mov
jmp
out
or
aam
sbb
insb
neg
jl
jmp
popf
dec
sbb
jne
jp
jp
sub
push
movl
sub
and
push
stc
sbb
sbb
cmpl
cmp
push
jg
gs
pop
pushaw
xchg
out
jmp
in
or
mov
or
not
dec
mov
mov
loopne
xor
lods
rcl
ret
mov
enter
sbb
xchg
sarl
fcomp
inc
cmpsb
icebp
mov
popa
mov
fs
jmp
jmp
inc
and
aaa
inc
fcomps
jl
lock
movsl
sub
push
xor
pop
insl
test
xchg
cli
sub
pop
cmp
and
push
pop
lods
ss
or
or
sub
push
outsl
test
cli
leave
sub
pop
inc
inc
pusha
pop
ljmp
mov
daa
sub
fnstcw
insb
dec
sti
cmp
cmp
call
sub
sbb
jbe
pop
clc
stos
fmuls
sub
sub
xlat
dec
pop
enter
dec
inc
das
and
push
cmp
negl
mov
mov
movsl
jmp
out
push
ficompl
xlat
adc
stc
mov
xor
in
test
pop
sbb
mov
ljmp
jp
stos
sub
lods
stc
nop
in
sbb
js
insb
lea
or
and
lret
cmp
mov
ret
das
and
jmp
cmp
lods
jg
dec
sbb
out
or
pop
dec
dec
in
in
xchg
push
js
stc
fs
sub
sbb
pop
inc
cmpsb
pop
mov
fidivrl
mov
inc
sbb
test
out
fimuls
fldl2t
test
pop
cli
test
addr16
push
jmp
stos
out
fbld
clc
sbb
ret
dec
cmp
push
addr16
push
dec
push
sub
movsl
in
orb
xchg
inc
movsl
xlat
add
scas
sbb
inc
cmp
rorb
pop
loop
sbb
jb
push
rorb
jl
and
or
sub
fs
xlat
test
lcall
inc
fwait
imul
gs
push
sbb
dec
cmp
dec
jo
data16
gs
fstpt
dec
jnp,pt
pop
enter
fmuls
sub
sbb
call
movsl
pop
stos
mov
iret
std
or
dec
jp
sbb
lahf
jb
jge
jns
loop
lods
inc
imull
inc
or
dec
jmp
sbb
jmp
loopne,pt
pop
add
cwtl
divb
ficoml
mov
xchg
flds
movsl
fistpl
das
mov
daa
xor
push
inc
mov
pop
dec
dec
pop
out
sub
popa
jns
cmp
fsubrs
repz
add
pop
dec
js
sub
or
dec
jl
mov
mov
jbe
add
dec
or
mov
jmp
xchg
addr16
lret
in
xchg
lcall
pop
cli
pop
push
mov
push
mov
mov
loope
cmp
mov
test
shll
scas
call
jl
aad
shlb
dec
push
lods
lret
or
cmp
push
lea
mov
push
adc
jp
repz
aas
es
lods
dec
stos
ficomps
sbb
das
mov
and
xlat
jp
mov
jmp
in
test
scas
inc
adc
ret
and
dec
outsl
cmp
dec
jb
jbe
stc
ds
shr
hlt
stos
nop
lret
ljmp
mov
mov
or
pop
test
push
dec
clc
dec
cmp
scas
out
push
sbb
mov
jmp
insb
stos
lahf
rolb
arpl
push
or
dec
or
jle
gs
enter
sub
ljmp
mov
dec
sub
sahf
lods
aaa
lret
mov
call
push
cli
lds
jle
pop
sbb
xchg
sbb
in
daa
orl
jmp
aaa
add
push
xor
insl
stos
cmp
das
enter
pop
ljmp
or
cmp
imul
pop
test
pop
fadds
mov
mov
cmp
pop
stc
loopne
mov
add
or
pop
dec
sbb
repnz
adc
outsl
push
cmp
pop
fnstenv
mov
and
in
dec
leave
gs
test
or
fs
push
sub
push
pop
adc
xor
fiaddl
jp
xor
fs
out
xchg
sub
inc
cmp
iret
xlat
in
jno
dec
mov
pop
sbb
rorb
insl
inc
sbb
sub
outsl
sti
cwtl
cmp
ljmp
inc
in
stos
imul
cwtl
mov
sub
enter
insb
xor
push
xchg
testl
push
jmp
pop
fld
or
pop
cli
fldcw
dec
push
pop
xchg
pop
adc
imul
or
cwtl
xchg
lock
movsl
dec
insb
pop
adc
stos
dec
lods
ljmp
sub
pop
mov
xlat
cwtl
mov
jmp
scas
fnstcw
ret
pop
mov
cmp
or
insb
xlat
cmc
bndldx
shrl
or
cwtl
adc
cmp
jb
sbb
sbb
mov
cmp
popf
ret
out
and
pop
pop
pop
mov
sbb
cmpb
sbb
ljmp
bnd
stos
dec
sub
mov
mov
cli
leave
data16
sub
xor
mov
cli
or
sub
pusha
sbb
sbb
dec
repnz
fcmovnu
mov
sbb
lret
sbbb
add
push
mov
push
dec
je
rol
into
sbb
ret
push
negl
shrl
mov
adc
mov
test
ficompl
call
ds
test
adc
push
iret
leave
jmp
mov
push
cmc
popa
xor
cmp
and
sub
jmp
mov
ficomps
dec
jbe
or
pop
and
push
idivb
jg
insb
clc
lcall
or
ljmp
pop
clc
repz
sbb
popa
loop
pushf
mov
imul
data16
pop
ds
in
dec
push
jmp
or
dec
pop
imull
stos
insb
push
cli
js
lods
sti
xor
jb
mov
jl
dec
dec
imul
dec
mov
cld
pop
inc
push
ljmp
jno
int3
movsl
lcall
addl
lret
push
and
cli
pop
mov
or
mov
sub
iret
daa
adcb
sti
adc
pop
sbbl
enter
jnp
pop
test
sub
jmp
leave
lcall
lret
shlb
daa
jge
fidivrs
stos
fmuls
fisubrl
js
dec
sub
or
sbb
lods
ljmp
mov
push
xchg
idivl
out
arpl
inc
xor
test
jmp
pop
add
inc
lret
imul
adc
popa
dec
pop
stc
lock
inc
push
dec
pop
lret
pop
in
pushf
fcmovu
jbe
inc
cs
ss
test
add
mov
xchg
inc
push
or
push
xlat
fs
or
mov
push
sub
lcall
push
sub
leave
push
mov
mov
cmp
shl
mov
cmc
stos
iret
adc
cs
fwait
jl
sbb
std
or
aad
in
push
jne
sub
stc
fnsave
ds
pop
sbb
mov
sbb
fidivs
aas
je
sti
jno
mov
mov
sub
fs
dec
xchg
sub
cmp
mov
jmp
add
or
fs
inc
cmp
fs
aas
call
sbb
mov
addr16
cmp
insl
dec
call
sub
fistpl
push
mov
test
cmpsb
pop
jge
fsts
lahf
sub
call
push
mov
cli
dec
fildl
dec
pop
sub
pop
jbe
push
repnz
mov
fistl
lods
add
mov
mov
clc
jb
sbb
mov
or
sar
sub
sbb
aaa
pop
cwtl
push
mov
or
xchg
mov
sbb
cld
dec
mov
sti
sub
cmp
stos
or
or
sub
xchg
data16
mov
push
pop
mov
pop
out
lods
fisttpl
dec
pop
jle
dec
lock
push
cmp
push
adc
inc
or
mov
fisubrs
mov
sbb
and
cmp
xchg
xchg
stos
cmp
fcoms
ret
subb
fcmove
aaa
cmc
sub
and
cli
mov
or
fcmovne
arpl
es
cmp
cmp
ljmp
fwait
lret
addr16
std
jmp
fdivrs
push
mov
leave
adc
movsl
mov
sub
cmp
xor
jle
stc
and
aad
js
js
dec
xchg
enter
inc
popw
inc
jns
dec
ljmp
call
sub
jp
lcall
cli
loopne
push
sbb
or
test
mov
cs
int3
js
jl
or
ljmp
xor
stos
sbb
pusha
test
mov
xor
leave
add
test
pop
mov
mov
jp
jno
jg
push
stc
lds
jns
inc
adcb
pop
arpl
inc
sub
sub
addr16
out
insb
push
pop
stc
pop
mov
and
cmp
adcl
lock
in
fwait
cmp
xchg
cmp
inc
mov
imull
test
cmc
sub
push
lods
dec
mov
ficompl
mov
jmp
pop
jge
movsb
cmp
pop
push
mov
nop
xlat
pusha
test
fs
sti
dec
push
pop
xor
orl
dec
insb
jl
sbb
jo
jne
ficomps
rorb
xchg
shr
xchg
fidivrs
into
xorb
popa
stos
lods
sub
sub
push
jp
mov
dec
or
or
pop
sbb
idivl
dec
mov
mov
mov
add
call
ljmp
cmp
fdivrl
inc
lock
dec
enter
js
pop
sbb
mov
imul
xor
push
mov
lods
cmp
pop
sbb
in
ds
adc
and
test
pop
rcll
xchg
mov
dec
xlat
insl
mov
sarb
stc
movaps
dec
mov
aas
jmp
icebp
jmp
mov
xchg
mov
or
dec
testl
sub
sbb
subb
jno
call
mov
lahf
jo
inc
lcall
lret
fsubrs
cmp
sbb
xchg
jmp
push
imul
push
jmp
enter
dec
mov
sub
mov
inc
pop
mov
lret
test
cmp
ljmp
out
out
or
lods
pop
lret
lea
add
mov
sub
call
cmpsl
mov
push
es
je
int3
or
fstpt
push
sbb
sbb
fsubrs
jg
hlt
sub
cmp
repnz
test
dec
adc
or
movsl
inc
notl
insb
in
mov
xchg
pop
pusha
pop
xor
loop
out
sbb
sub
push
adc
dec
xor
lds
sbb
cmpsl
fcmove
mov
dec
xchg
mov
rcrb
and
fsubrs
test
inc
imull
cli
in
mov
cmp
fldt
lcall
pop
pusha
es
mov
stos
dec
pop
mov
push
insb
icebp
sub
mull
mov
jne
sub
jp
push
cmp
adc
mov
mov
mov
clc
xor
stc
or
bound
xlat
or
jae
out
xor
sbb
cmpsb
cmpsb
adc
dec
fdivr
sub
sub
inc
xchg
call
imul
aas
enter
negl
mov
stos
dec
pop
ljmp
push
leave
or
fiadds
jmp
push
inc
mov
dec
cmp
pop
jmp
popf
in
adc
inc
sub
iret
js
fsincos
or
jp
ljmp
dec
xor
xchg
cmpsb
and
jmp
js
enter
push
inc
negl
cmp
add
cmp
pop
sti
cmp
sub
ljmpw
testl
push
or
ljmp
test
imulb
dec
pop
sub
stos
cmp
mov
fisubrs
or
pop
lcall
lcall
jnp
lcall
add
mov
std
or
or
adc
leave
pop
cli
jp
xchg
fsubrp
or
cmp
aaa
les
sub
insb
sub
repz
lock
xchg
push
inc
cmp
jne
jecxz
imul
fs
popa
cmp
xor
sub
clc
mov
inc
pusha
gs
or
sbb
inc
pop
push
sbb
imul
push
jmp
loope
lret
dec
mov
fiadds
or
inc
mov
jl
in
aas
sub
sub
jmp
movsb
pop
xchg
fisttpl
int
lcall
cmp
stos
dec
stos
bound
sbb
push
or
scas
mov
sub
pop
pop
lret
dec
jp
test
dec
test
sub
xlat
dec
push
xchg
sub
mov
dec
xor
jge
cli
or
dec
loop
test
js
mov
lret
dec
mov
jecxz
pop
fs
mov
mov
pop
jns
cmp
sub
das
xlat
insb
test
dec
mov
jb
mov
xor
out
dec
or
rcl
ds
push
outsb
mov
sbb
lods
jne
add
int3
fcomps
imul
cmc
aaa
or
push
sbb
adc
xor
fisubrl
repnz
outsb
xlat
jl
jmp
dec
jge
push
cmp
pop
mov
push
sbb
mov
cmp
in
mov
fisubrs
push
jmp
insb
jmp
push
mov
icebp
xor
jno
dec
mov
stc
sbb
out
mov
sub
mov
sub
mull
and
movsl
fiadds
dec
out
sti
xchg
jmp
mov
fsubrs
push
or
xchg
fdivrs
cmp
loop
sub
fs
std
mov
sbb
cmp
xor
pop
push
stos
fisttpl
sti
or
dec
stc
sbb
adc
addr16
jle
fimull
cli
out
movsl
sbbb
inc
sub
jecxz
lret
jmp
repnz
into
pushf
push
sbb
popf
jge
sub
in
xor
pop
in
dec
jmp
cwtl
fs
fdivr
dec
dec
jmp
xlat
call
xchg
into
test
ds
pop
sbb
sbb
enter
out
dec
fisubl
pop
pop
mov
ds
mull
pop
or
sbb
leave
jle
out
cwtl
pop
jle
sti
fucomip
dec
and
dec
es
outsl
add
sub
sbb
sub
popf
testl
pop
jno
inc
icebp
popa
jb
ljmp
cmp
int3
ret
lds
mov
cmp
mov
mov
cs
int3
mov
fidivs
mov
push
fdivr
int3
mov
mov
lret
or
cmp
lret
sbb
mov
pop
xchg
jbe
mov
cltd
out
adc
insb
pop
bound
jmp
push
dec
or
add
mulb
jp
sbb
and
or
mov
int3
fwait
xchg
leave
stos
push
mov
hlt
js
and
push
mov
sub
rorb
jge
add
es
in
sub
pop
clc
sub
sbb
push
xchg
imul
xchg
std
dec
push
sbb
insl
xlat
sub
jne
or
mov
out
push
mov
inc
xchg
push
jns
dec
test
leave
pop
or
pop
mov
push
push
jge
jmp
jo
sbb
enter
out
add
xchg
mov
push
mov
pop
or
pop
enter
jae
push
mov
movsl
xlat
mov
popa
jo
cmp
test
sbb
mov
dec
sbb
xabort
sahf
mov
ljmp
lret
jbe
or
rorb
loop
fwait
dec
sti
dec
js
xchg
in
inc
sub
arpl
fadds
sub
fldl
js
pop
sbb
lret
cmp
addr16
cmp
push
test
pop
jp
stc
sbb
loope
mov
iret
scas
sub
push
lcall
jp
cmpsl
ret
or
jmp
lcall
test
xchg
repnz
addl
fs
test
nop
push
sbb
ficompl
pop
outsb
fistps
cmp
pop
and
or
pop
and
mov
test
sbb
sti
lret
pop
lds
mov
and
leave
sbb
mov
mov
pop
sbb
sub
pop
fincstp
mov
shll
stos
cmp
dec
lahf
aas
negl
sbb
mov
mov
dec
aas
push
fldcw
sar
in
scas
mov
jp
fs
sbb
mov
lods
popf
jnp
jp
mov
in
mov
mov
fldt
pop
fisttpll
dec
ds
addr16
push
push
aas
js
jmp
clc
test
push
scas
cmp
jne
cmpb
fdivp
ljmp
mov
movsl
dec
loopne
jne
or
sub
fsubs
js
jg
or
jns
sahf
push
jmp
pop
or
jnp
jns
idivb
mov
inc
fldt
mov
cmp
pop
pop
sub
insl
adc
pop
cs
test
ljmp
push
stc
lret
icebp
or
cmp
insb
dec
stos
sti
sub
push
cmp
push
or
insl
scas
notl
fs
sub
dec
movsl
push
cmp
or
jl
stos
fstl
jp
cwtl
insl
int
stos
cmp
int
sub
neg
pop
mov
and
pop
cmp
xchg
dec
sbb
xor
imull
movsl
fadd
jbe
add
jp
in
mov
loopne
push
mov
stc
js
or
fs
in
dec
enter
ja
mov
inc
jge
xchg
sub
jle
adc
xor
mov
dec
inc
and
mov
cld
pop
sub
daa
pop
loop,pt
mov
xlat
arpl
sbb
sbb
inc
test
lahf
fimuls
cmp
sbb
lcall
sbb
sbb
dec
mov
cmp
sub
idivl
pusha
dec
jnp
mov
insb
ja
stos
dec
js
xchg
in
or
and
data16
insb
sub
sbb
mov
pop
call
adc
dec
sbb
sub
inc
jmp
add
cwtl
cmp
sbb
les
std
sbb
cmp
sub
stos
adc
and
sbb
or
push
cmp
mov
testl
dec
imull
cmp
mov
stc
xlat
sub
jno
mov
cmp
push
call
or
js
mov
sbb
lret
mov
xchg
cmpsb
sti
or
pop
in
lods
cmp
inc
mov
push
sub
pop
pop
ficompl
sub
cmp
pop
or
and
cwtl
lret
fidivrl
cmp
lret
outsl
pop
sub
sti
fldt
clc
leave
inc
mov
push
js
mov
sarl
clc
and
dec
or
push
xchg
inc
xor
icebp
cmp
inc
mov
pop
cmp
mov
jp
out
out
mov
cwtl
push
std
jl
iret
sbb
sbb
mov
push
pop
jl
fdivrl
push
jg
das
pop
rcrl
imulb
cmp
mov
test
sub
mov
mov
stos
test
pop
xor
inc
in
loopw
sbb
dec
mov
decl
cmp
mov
sub
in
jg
ja
test
push
or
mov
mov
xlat
outsb
loope
mov
das
sub
push
push
movsl
sbb
sub
sbb
je
sbb
sbb
mov
rorb
ljmp
sub
or
jle
or
push
adc
insl
and
ds
push
xlat
add
fstps
or
sbb
push
nop
sbb
xchg
ds
push
add
scas
or
out
cmp
das
dec
ljmp
cmpsl
cmpsl
sub
cmp
fimull
add
xchg
or
les
fisubrl
pop
jp
arpl
mov
jle
enter
or
mov
jl
or
jmp
cwtl
mov
cli
dec
negl
outsb
xchg
dec
cmp
and
sbb
fdivr
mov
sbb
nop
stos
push
movsl
pop
cwtl
pop
dec
jnp
push
insb
jmp
lcall
cli
ljmp
jmp
sbb
cmpl
mov
lcall
jne
mov
or
and
ljmp
or
dec
push
nopl
dec
insb
stc
jle
aaa
cmp
fcomi
pop
dec
ds
sub
pop
clc
xchg
push
sbb
cmp
or
pop
dec
ljmp
cmp
lret
out
lea
cwtl
out
dec
lods
inc
ret
inc
pop
xor
cmp
and
fidivrl
dec
jmp
sbb
nopl
sbb
jmp
push
xchg
js
lock
scas
xchg
pop
fimull
lcall
pop
dec
fidivrs
repz
push
xchg
scas
or
pop
outsl
sub
lcall
xchg
jns
fnstcw
mov
lret
mov
pop
push
negl
stc
jo
or
jnp
mov
inc
pop
mov
inc
shrb
imul
jae
imul
and
sub
cmp
or
xchg
int
sti
adc
dec
in
inc
xor
in
or
xlat
lret
fistl
lcall
push
in
imul
dec
decb
xlat
iret
add
mov
dec
mov
fmuls
pop
cli
add
or
xchg
dec
pop
cmp
or
cld
ljmp
sub
sbb
cmp
push
push
cmp
pop
lods
dec
inc
sub
cli
sub
arpl
ljmp
std
call
inc
pop
sub
pop
mov
dec
sub
dec
jp
or
pop
and
ljmp
test
mov
fstp
or
inc
movsb
mov
inc
stc
sbbl
fsts
add
push
or
sub
imul
or
xchg
sub
adc
adc
imul
xor
mov
push
mov
cmp
dec
dec
ljmp
mov
cmp
nop
xchg
pushf
je
sar
movswl
adc
xchg
dec
pop
mov
sbb
stos
in
mov
or
cmpsl
lds
pop
outsl
sub
sbb
movntps
cmp
dec
lea
clc
nop
pop
cltd
cmp
test
das
lcall
repnz
fmulp
xlat
insb
dec
xchg
sbb
pop
fidivrs
mov
daa
add
push
mov
fldcw
sti
in
sbb
test
aaa
and
ljmp
and
sbb
sbb
cwtl
dec
out
sub
mov
sbb
cmp
xor
push
lret
mov
sbb
imul
lret
push
or
or
mov
pop
int3
out
lods
cmp
jnp
or
in
test
push
mov
call
sbb
popa
push
jp
and
cwtl
xchg
out
push
cmp
cmp
scas
xchg
dec
call
test
loop
xor
mov
out
pushw
stos
cmp
in
pop
pop
fisttpl
leave
jl
pop
pusha
outsb
inc
dec
out
andb
adc
sti
sbb
cmpb
scas
and
retw
pushf
mov
out
cs
call
jmp
or
jmp
mov
daa
pop
jne
sub
dec
inc
in
out
cmp
adc
in
jl
jo
cmp
movsb
or
sbb
movsl
dec
stc
push
and
push
rcr
int3
mov
sub
mov
jmp
fadd
mov
inc
jnp
pop
mov
adc
mov
cli
scas
xchg
scas
sbb
jge
pop
mov
mov
lea
ljmp
xchg
dec
dec
clc
mov
insl
scas
jb
stos
mov
xlat
mov
decb
or
movsb
dec
or
mov
ljmp
fldcw
or
cmp
cmp
add
leave
adc
and
and
clc
dec
and
cmc
test
sti
or
sub
pop
dec
mov
popf
or
or
pop
stos
push
sub
or
dec
sub
sti
sbb
inc
cmp
dec
arpl
ljmp
sub
pop
or
sub
sub
push
ficomps
dec
xchg
jb
stc
mov
push
dec
pop
rolb
cmp
or
push
cwtl
dec
test
arpl
clc
or
push
or
out
mov
lock
in
ds
cmp
les
dec
sub
data16
or
dec
mov
sbb
jne
dec
pop
fdivrs
sub
push
dec
loop
pop
lods
xlat
pop
clc
sub
sub
push
aam
mov
pop
repz
dec
call
mov
jmp
mov
sbb
mov
push
notb
or
les
fisubl
xchg
lahf
jae
jl
sub
inc
jne
fstps
pop
lahf
sbb
inc
pusha
mov
jle
bound
sbb
cmp
sub
xchg
jg
or
cmp
mov
sub
xlat
mov
ja
in
mov
mov
mov
dec
ds
mov
popa
jno
xchg
xor
xchg
lods
adc
pop
aam
or
cmp
popa
sbb
push
jmp
xor
fimuls
cmpsb
pxor
lods
imul
ficompl
test
cltd
popa
and
ljmp
dec
out
push
push
sub
insb
jmp
jl
iret
fidivrl
pop
adc
cmp
test
or
shrl
mull
push
std
sbb
pop
inc
xor
or
loope
pop
cmp
stc
sub
sub
push
sti
icebp
andl
aas
sub
in
pop
sub
sub
dec
in
mov
push
jle
mov
stc
dec
cmp
pop
cmp
je
lahf
mov
ljmp
sbb
das
mov
cmp
push
arpl
jp
inc
addb
fisubl
negl
lret
mov
mov
flds
dec
xchg
pop
ljmp
jmp
mov
push
lcall
fiaddl
dec
inc
adc
arpl
fsubl
icebp
cwtl
dec
sbb
sub
mov
dec
jmp
cmp
mov
pop
pop
ret
lea
ds
fmuls
movsb
aam
int3
shl
adc
lods
jmp
jle
idiv
fisubs
ffree
aas
lret
das
sbbb
test
cmp
call
mov
stc
pop
sub
f2xm1
push
dec
cwtl
insb
pushf
or
out
test
lods
dec
nop
pusha
push
lret
scas
mov
neg
cmp
mov
push
repz
add
sti
cli
rorb
insb
xchg
jmp
ja
out
sub
lret
in
data16
fs
sbb
dec
pop
or
dec
pop
adc
out
inc
and
adcb
cwtl
jmp
fimull
stc
dec
clc
cmp
into
or
clc
or
sub
js
xor
lock
dec
leave
notl
ret
lea
sbb
push
andl
and
ds
jge
in
movsl
cmp
in
fs
fsubrp
divl
lods
cmp
cmp
sub
inc
arpl
lret
stos
insb
jae
cmc
cmp
xor
and
stos
and
fstps
inc
mov
std
leave
dec
std
sub
lret
push
sti
in
lods
dec
out
js
ficomps
xchg
cmp
hlt
pop
cli
pop
test
jl
test
clc
cmp
sub
addr16
js
mov
lcall
mov
dec
sub
add
adc
loop
fsubrp
mov
mov
jns
sub
push
insl
or
out
call
sbb
stos
mov
cwtl
insb
jmp
jb
lock
mov
mov
scas
or
and
addr16
lahf
std
sbb
sbb
fildll
stc
sbb
movsl
and
lcall
dec
rcrl
sbb
jbe
inc
fcomps
lret
mov
insb
fisttpl
scas
stos
sbb
cmp
imull
mov
sub
fstpt
fwait
sub
aaa
push
pop
clc
xor
pusha
or
cli
xor
ljmp
adc
pop
cwtl
leave
mov
ds
fdivrs
cwtl
inc
in
movb
mov
out
je
stos
stos
xchg
dec
sbb
mov
movsb
push
loopne
cmp
or
std
sub
test
out
clc
fisubrl
mov
dec
xor
sti
fcomps
or
jl
pop
pop
call
mov
sbb
jl
imul
stos
pop
sbb
dec
jmp
and
xor
inc
sbb
jae
adc
daa
dec
mov
add
cli
cmp
hlt
call
inc
aaa
jne
aad
cli
xlat
push
repnz
sub
enter
sbb
sub
xor
insb
sbb
repnz
icebp
cli
fisubs
xchg
cmp
and
mov
leave
push
dec
pop
arpl
cmp
jp
cmp
mov
jmp
setg
fs
sub
dec
fstpt
push
bnd
sub
inc
mov
mov
and
fs
adc
sub
xlat
cmp
loopne
fs
ds
imull
sbb
sbb
cld
cmp
push
pop
stos
sub
xor
aad
fdivrs
gs
insb
mov
negl
dec
sbb
cli
negl
xchg
test
js
jl
bound
imul
repz
dec
loopne
das
jmp
xor
addb
ret
out
pop
cs
in
enter
sbb
push
mov
dec
pop
sub
adc
dec
loop
cmp
sbb
ret
stos
test
push
push
daa
out
pop
loope
cltd
pop
dec
fisubrl
cmp
dec
in
into
inc
and
scas
cmp
jmp
mov
nop
mov
in
stos
dec
leave
xchg
cmp
cli
jp
ss
sub
sbb
test
lea
jmp
enter
or
cmp
sub
jmp
ds
mov
fiaddl
push
iret
scas
xchg
push
cs
sti
call
ficoms
jl
cmpsl
enter
jmp
dec
push
dec
lahf
imulb
sbb
inc
ds
ljmp
mulb
fdivl
push
fcmovnu
jp
insb
jecxz
jecxz
jmp
jl
xlat
movsb
outsl
sbb
sbb
ljmp
pop
pop
out
ja
inc
testb
or
cmp
out
push
stos
jg
js
lret
or
dec
sahf
add
jp
sbb
mov
faddp
clc
dec
pop
pop
push
fistpll
mov
mov
add
mov
stc
dec
xlat
sub
and
push
sbb
ja
fcmovnu
push
mov
out
pop
or
pop
cmp
mov
jne
gs
sbb
jle
sbb
clc
movsl
call
jmp
enter
mov
in
mov
mov
push
sahf
outsl
jb
insb
enter
cmp
mov
jno
pop
dec
sbb
aas
and
pop
lcall
sbb
insb
lret
stos
hlt
cld
ror
imul
jmp
cmp
sub
jbe
or
pop
test
cs
sub
clc
pushf
sub
cmpb
pop
sub
push
push
cmp
jmp
ljmp
fstps
out
leave
gs
jmp
push
enter
call
mov
pop
xchg
pop
xchg
pop
stos
pop
daa
inc
call
dec
jmp
jns
add
cli
xchg
or
mov
clc
sti
scas
lcall
leave
cmp
fistpll
mov
jmp
fcomp
or
popf
sbb
mov
insb
stc
xlat
ljmp
adcl
js
dec
scas
jbe
in
pop
mov
ud1
sub
jns
mov
push
xor
adc
sbb
pop
sub
pop
lcall
or
cmp
mov
dec
add
dec
popa
dec
sbb
leave
stos
xchg
xchg
push
js
insb
iret
cmp
and
dec
int3
cli
mov
fildl
jl
sti
filds
pop
jnp
mov
push
sub
pop
push
call
mov
icebp
fs
xchg
sub
js
out
stos
ds
test
fmuls
cmpl
or
mov
into
lea
mov
cmp
test
test
or
fs
sbb
cs
sub
das
dec
pop
jns
push
xor
pop
test
lock
stos
clc
fmuls
les
cmp
popaw
sbb
in
jmp
loope
stos
or
ljmp
lea
or
and
dec
lret
sbb
div
clc
dec
or
stc
imul
or
pop
pop
call
cmp
dec
aam
mov
std
or
mov
pop
jg
mov
pushf
orl
dec
jl
push
mov
push
cmp
dec
cs
or
pop
pop
sbb
dec
mov
or
jecxz
jnp
sub
cld
fs
push
dec
gs
inc
mov
pop
lret
das
push
sub
aad
pop
push
pushf
jbe
push
ljmp
pop
inc
inc
xlat
sti
arpl
jl
insb
pop
ljmp
movsl
jge
mov
psubd
lcall
adc
and
stc
or
cmp
pop
dec
lods
xor
jecxz
sub
push
test
ds
cmpl
test
or
clc
push
mov
movsl
inc
jno
ss
mov
sbb
movsl
jg
or
stos
sbb
stos
aam
jp
in
jns
std
sub
ss
syscall
pop
cmp
dec
out
ret
jns
loopne
or
sti
ret
inc
jo
cli
sbb
or
dec
cmp
scas
aaa
cs
xchg
les
into
cmp
or
cld
bound
inc
lcall
addb
dec
cwtl
outsb
pop
je
or
lcall
repnz
stc
jbe
dec
popf
sahf
lods
js
fmuls
push
adc
pop
pop
pop
sbb
call
inc
movsl
jl
xchg
mov
jmp
mov
fisubrl
or
pop
lret
xchg
cwtl
sub
cmc
rclb
jbe
cs
sar
xchg
lds
movsl
cmpsl
cmp
add
sub
mov
mov
dec
and
xchg
movsl
mov
mov
enter
pop
cmp
movsl
call
movsl
sbb
sub
call
mulb
adc
movsl
stos
cmpsl
dec
or
lahf
mov
cmpsl
loop
scas
bound
add
sbb
dec
data16
shll
xchg
movsl
mov
mov
fsubs
ljmp
movsl
sbb
sub
scas
mov
dec
or
enter
sub
cmp
cwtl
stc
sub
sbb
stos
mov
clc
or
dec
pop
mull
ljmp
decl
movsl
jg
or
test
cwtl
pop
cmp
outsl
sbb
push
stos
loop
mov
dec
pop
imull
jg
sbb
jp
or
stc
cmp
sub
sbb
iret
enter
lahf
cld
call
sbb
dec
jb
xlat
scas
inc
push
sbb
in
fwait
mov
xchg
pop
dec
xchg
mov
es
dec
in
sbb
das
or
daa
fwait
jo
push
mov
cs
fldt
jp
leave
fdivrp
cmp
pop
jns
or
pop
ficoml
inc
mov
pushf
dec
fisttpl
cmp
adc
or
js
out
movsb
mov
popa
jmp
push
fmul
movsb
addr16
or
fucompp
insl
rorl
arpl
cmp
mov
js
js
jmp
cwtl
cmc
add
andl
popa
mov
sub
movl
mov
or
inc
jno
arpl
daa
inc
sbb
pop
dec
and
sbb
sub
sbb
sub
add
sub
movsl
mov
add
dec
xchg
and
sbb
or
xchg
cmc
addl
dec
cmp
addl
jl
cmp
dec
or
gs
insl
add
jo
ret
lcall
mov
and
test
sbb
mov
add
jle
dec
push
leave
lahf
imul
sbb
sub
and
fsub
xchg
roll
loop
loopne
insl
js
ret
dec
daa
js
movsl
adc
jle
addr16
and
cmc
and
dec
pop
mov
insb
fdiv
sub
mov
and
sbb
sbb
pop
lret
clc
inc
shlb
sahf
jmp
shll
sbb
mov
push
inc
shll
lods
popa
cmp
adc
inc
movsl
cwtl
pop
das
es
stc
and
lret
mov
js
movsl
push
add
mov
bound
mov
fsubrl
sub
mov
cmp
sub
jl
cmp
mov
sbb
movsb
enter
lea
inc
add
or
and
jl
pop
ds
cwtl
and
test
vpaddw
dec
ja
or
movsl
adc
mov
dec
push
or
test
test
sub
ret
sbb
xor
mov
jp
push
sahf
push
out
sub
push
loop
pop
jmp
mov
sti
mov
sub
xchg
cwtl
mov
cli
inc
out
xchg
stc
cmp
inc
pusha
dec
mov
insb
jmp
dec
jmp
fstpt
cmp
push
lret
mov
clc
or
in
aas
out
cmp
xchg
scas
fmuls
mov
mov
fldcw
xlat
lcall
adc
mov
lea
fwait
out
sub
add
or
pushf
push
dec
add
popl
jl
mov
cmp
push
jge
addl
pushf
jmp
cmp
insl
faddp
bswap
js
cmp
sub
dec
test
push
and
popf
pushf
fdivs
js
cwtl
or
xor
mov
decb
repnz
jb
fstpl
or
aam
ljmp
int
push
dec
cmp
cmp
pop
in
mov
xchg
dec
popa
dec
mov
push
scas
sub
fstps
inc
or
sbb
ja
mov
mov
dec
stos
sub
dec
ja
rep
stos
into
pop
pusha
scas
cs
mov
clc
js
mov
sbb
cmp
push
imul
fisubrs
lods
dec
dec
pop
inc
dec
push
data16
sub
sub
pop
or
sti
into
loop
or
inc
and
add
adc
xor
sub
sbb
push
or
or
inc
jmp
inc
fstpt
insb
fstps
push
xlat
cmp
jecxz
pop
jbe
outsb
or
sti
adc
cs
insb
cs
pop
std
dec
xchg
ret
sub
sbb
and
pop
sti
xlat
jmp
rcr
cmc
and
insb
movsb
pop
pop
and
cmp
es
sbb
or
loop
mov
inc
fistl
adc
pop
pop
xlat
dec
mov
sub
in
mov
inc
jmp
cmc
fstpt
insb
cmp
dec
sub
sbb
rorl
sti
std
cmc
jmp
fsubrl
pop
mov
cmp
sub
data16
or
subb
and
fistpl
imul
loop
mov
sbb
das
sub
cmc
or
sti
mov
pop
sbb
and
lock
mov
pop
inc
imul
dec
pop
sub
shrb
sub
pop
xor
and
dec
and
imul
adc
or
aam
sbb
fcomp
in
insb
lods
push
mov
out
add
add
xchg
jmp
call
push
mov
jl
pop
and
xor
hlt
test
sub
mov
enter
and
or
and
imul
inc
dec
jne
inc
mov
pop
lret
stos
pop
sbb
pop
lret
ljmp
jmp
cwtl
dec
dec
push
int
adc
mov
sub
adc
mov
sub
scas
dec
sbb
and
adc
rorb
sbb
shl
mov
inc
dec
sbb
add
aad
dec
sbb
fs
push
cmp
jecxz
pop
and
insb
sbb
sti
jl
or
dec
pop
scas
pop
pop
and
rcrb
cmp
add
mov
es
ret
cmp
rcrl
inc
pop
sbb
ljmp
pop
sbb
scas
push
and
loope
push
in
adc
loop
mov
inc
jmp
data16
dec
lods
adc
int3
or
jmp
xchg
inc
sbb
jl
jmp
or
jmp
loop
jmp
ret
xor
inc
cmpsl
push
insb
jl
test
inc
sbb
repnz
add
inc
insb
std
data16
jae
pop
std
pop
mov
jl
pop
xlat
pop
mov
and
leave
pushf
stos
call
int3
mov
mov
push
mov
daa
sbb
adc
adc
daa
mov
xchg
enter
dec
add
sbb
pusha
inc
or
data16
sbb
andb
pop
and
sub
sbb
dec
xchg
imul
cli
ret
sub
dec
iret
cli
mov
sub
dec
lods
mov
cmpsl
testl
sub
and
mov
mov
sti
dec
gs
ljmp
sub
mov
sbb
push
loopne
pop
inc
sbb
mov
ret
in
lahf
int
fcmovb
jae
and
and
lds
in
fldl
lea
cmpsl
sub
mov
je
dec
adc
mov
lods
shlb
sub
outsb
loopne
cmc
std
mov
pop
jecxz
ret
sbb
sub
insl
cwtl
sbb
lock
cs
fsub
mov
mov
or
clc
push
sub
das
mov
ret
mov
std
mov
aam
cmpb
cmpl
lahf
in
adc
and
inc
call
insb
cli
jecxz
pop
push
aaa
out
mov
push
aas
mov
sbb
lods
addr16
pop
clc
cmpsl
ficomps
mov
mov
mov
in
xchg
mov
mov
popa
jns
lods
push
flds
push
sub
sti
pop
sbb
dec
inc
cmpsl
sub
sbb
xor
ja
mov
cmp
daa
iret
stc
daa
mov
xchg
or
xor
push
lods
sub
adc
xor
adc
dec
push
mov
cli
push
movsl
fs
stc
out
movsb
inc
xor
daa
or
pop
stc
dec
cmp
inc
inc
leave
pop
aad
cmp
in
or
xchg
sbb
std
sub
test
push
fcmovne
cld
cmp
dec
fbld
pop
or
fs
outsb
cmp
sbb
rolb
cmc
daa
lods
fsubrl
jmp
fimull
fmull
xchg
fs
dec
jmp
push
les
sbb
mov
fmull
cltd
dec
add
jmp
cmp
and
or
loopne
imul
push
outsl
test
push
push
sub
mov
and
push
addr16
pop
or
dec
mov
test
push
sbbl
mov
aas
mov
imul
sub
inc
stc
ror
fcompl
es
sub
mov
pop
and
or
imul
mov
or
mov
mov
pop
orl
jp
clc
lret
sub
or
sbb
insl
insb
cs
xor
and
gs
push
and
movsl
es
xchg
add
xor
loopne
mov
rcrl
loopne
mov
stos
and
test
jmp
in
imul
inc
test
lds
dec
or
test
pop
int3
mov
mov
sbbb
rcll
inc
sbb
in
data16
daa
sbb
enter
ljmp
ja
je
in
shrl
ljmp
mov
sub
and
add
xor
sub
mov
cmp
mov
push
addr16
and
dec
mov
mov
ja
loope
stos
sub
mov
sub
dec
sub
test
test
ss
sbb
test
popa
cmpsl
aad
cmp
inc
dec
mov
sub
dec
push
dec
sahf
test
push
call
push
add
lods
dec
orl
test
mov
call
mov
push
fs
or
push
push
add
push
push
cld
daa
fsubrl
sbb
and
pop
lret
sub
mov
mov
mov
pop
and
push
cmp
ljmp
jmp
nopl
testb
or
jecxz
dec
data16
or
sub
lods
mov
sub
out
mov
cmp
data16
push
in
inc
mov
arpl
cmp
ss
imul
imul
sti
add
and
cmp
mov
and
sbb
pop
outsb
fcomp
xchg
sti
jmp
out
insl
and
insl
ljmp
stos
cmp
xchg
dec
stc
sub
stos
lret
in
jmp
das
ja
pop
push
mov
jo
xchg
and
xchg
ss
add
xchg
fnstenv
push
ret
ljmp
popf
or
lods
xchg
mov
jp
jo
jecxz
daa
stos
fcmovu
cmpsb
loop
mov
das
fldt
jp
mov
dec
pop
bswap
push
pusha
push
imul
mov
imul
mov
ss
movsb
pop
dec
cmpsb
movsb
imul
xchg
das
mov
test
cld
gs
sub
push
gs
fcmovnbe
dec
or
push
mov
imul
pop
xchg
movsl
cs
repz
int3
xchg
inc
lods
outsb
out
ret
test
and
mov
lods
ljmp
cmp
xor
testl
in
mov
adc
add
repz
sub
popa
pop
pushl
push
mov
sub
lods
jmp
stos
push
enter
in
lret
out
jmp
imul
push
call
inc
sbb
cmp
ret
call
push
cmpsb
sub
inc
xchg
lret
decb
fisubrl
lret
call
sarl
inc
dec
int
mov
sbb
sahf
xchg
lret
lods
sub
add
imul
push
out
push
push
mov
jns
and
or
xchg
xchg
or
dec
dec
cmc
in
pop
ljmp
mov
xlat
dec
mov
les
pop
pop
mov
jge
push
call
movsb
or
xchg
dec
fwait
or
scas
add
daa
pop
sub
push
cmpsb
rorl
inc
ret
stos
flds
out
push
test
addr16
mov
inc
movb
fisttpl
dec
fisubrs
in
ret
inc
sub
jmp
sti
push
adc
stos
xchg
and
outsb
sub
add
mov
cmp
out
mov
insl
cmp
ljmp
adc
dec
lds
or
aaa
sbb
push
ret
and
cld
insb
cs
jmp
test
dec
clc
and
outsb
stos
stc
ja
add
dec
mov
or
inc
dec
push
add
movsl
push
push
mov
js
and
inc
mov
inc
dec
cwtl
lods
loopne
xchg
std
push
ficompl
loopne
sbb
mov
inc
cmp
lea
xchg
and
call
std
outsb
push
lds
in
jmp
jmp
ret
dec
fistl
push
mov
xor
negl
add
lret
popf
and
mov
mov
shrb
sub
push
sub
lret
xchg
jl
std
and
cmp
cwtl
lds
addb
sub
jmp
mov
repnz
sub
mov
pushf
add
inc
out
roll
bound
rcrb
xor
xchg
out
or
stos
push
orb
mov
push
mov
call
hlt
mov
mov
imul
int3
adc
outsb
call
mov
add
add
add
add
loop
push
push
jmp
or
jecxz
lret
imul
rcl
sub
mov
xchg
shll
int3
ljmp
mov
test
mov
push
sar
fimull
push
icebp
adc
addl
outsb
loop
jp
sub
pop
aam
lock
arpl
mov
movsl
jle
popf
orb
pop
test
mov
cld
movsb
sbb
push
fsub
test
and
dec
inc
lods
inc
xchg
dec
mov
push
inc
mov
mov
inc
mov
faddl
xlat
xorl
fcmovnu
sub
es
mov
clc
outsb
jl
jns
and
imul
or
sbb
das
int3
faddl
pop
xchg
ja
mov
or
das
ja
push
xchg
pushf
jmp
out
sub
inc
sti
test
sbb
pop
mov
mov
insl
and
enter
in
es
popa
cld
fstps
xchg
inc
inc
ss
adc
ret
inc
loope
push
lods
out
js
ret
inc
imul
sti
xor
data16
mov
ret
leave
sbb
mov
fisttpl
dec
push
jecxz
xchg
mov
bnd
push
sbb
shr
xor
ret
jns
out
outsb
dec
out
mov
xchg
popa
std
push
jecxz
fldlg2
es
mov
popa
pop
or
ret
roll
cmp
sub
pop
out
adc
rcrl
pop
mov
test
subb
dec
fs
mov
mov
out
faddl
scas
pushf
sbb
fldenv
cs
add
nop
adc
cmp
aaa
add
jb
fisubl
dec
fcomi
int
cwtl
movsb
stos
jmp
fsub
cwtl
jmp
sub
inc
nop
jp
std
test
jne
stos
scas
add
adc
fwait
or
insb
sub
shlb
jmp
pop
mov
mov
outsl
fsubr
mov
test
daa
dec
cmp
jmp
inc
out
mov
xchg
add
inc
mov
insb
mov
adc
mov
dec
rcrb
push
arpl
cmp
or
movb
xchg
les
mov
in
push
stos
mov
insb
ret
jmp
push
mov
mov
test
repnz
iret
imul
xchg
jp
or
and
mov
cmp
repz
mov
sub
int
xchg
mov
add
stos
sbb
adc
add
stos
push
pusha
or
inc
mov
cwtl
cmp
mov
stos
gs
xlat
jns
xchg
mov
sahf
call
dec
dec
stos
movsl
sub
pusha
mov
mov
bound
fldenv
mov
in
lret
sbb
cmc
jb
and
mov
cwtl
stos
sbb
xor
sbb
sbbb
and
or
push
data16
sbb
dec
xchg
mov
mov
xchg
jmp
jns
dec
xchg
xchg
test
popa
add
orl
inc
dec
push
pop
sub
inc
int3
scas
pop
in
dec
jbe
xor
imul
leave
imul
pop
mov
int
sub
push
or
cs
lret
gs
mov
pushf
mov
shrl
xchg
mov
mov
or
movsl
lret
orl
jmp
push
sub
mov
lret
gs
or
loope
sub
loop
mov
sub
push
test
push
pushf
lods
and
mov
sub
mov
mov
loope
sti
dec
les
xchg
push
subps
repz
xchg
or
mov
lret
outsl
mov
test
arpl
or
adc
add
jmp
stos
sub
mov
mov
mov
dec
xchg
mov
pushf
pop
clc
pop
or
jl
andl
cmp
rorl
inc
bound
data16
jo
int3
pusha
sub
jns
xchg
rcrl
jmp
inc
fildl
inc
jmp
dec
movsl
pop
or
mov
dec
shrb
mov
lock
sti
fs
xchg
aaa
lret
mov
mov
mov
add
inc
movsb
xor
test
adc
and
sbb
sbb
jns
stos
pusha
dec
movsl
imul
lods
sbb
dec
ljmp
jbe
mov
push
mov
or
and
je
push
iret
cmp
in
pushf
dec
cs
popa
mov
push
addr16
or
leave
mov
inc
sbb
iret
ss
mov
pop
outsb
add
jmp
adc
stos
lock
mov
or
das
adc
xor
in
or
xlat
sub
in
out
fistl
lods
into
push
mov
in
mov
aad
pop
mov
and
dec
xchg
lock
dec
fildll
mov
xchg
mov
fldt
into
mov
test
inc
ljmp
clc
gs
test
dec
imul
and
shll
push
push
xchg
mov
mov
cmc
outsb
mov
sub
outsb
push
mov
rorl
mov
out
adc
mov
cmpsl
jge
cmp
mov
inc
aaa
sub
dec
sub
iret
cmp
test
leave
addr16
mov
call
mov
and
sti
sbb
xchg
pop
lods
cmc
adc
sub
jnp
xchg
mov
dec
xchg
lods
gs
sub
orl
dec
fidivl
fsubrl
sbb
fisttps
sub
mov
sub
xchg
scas
pop
dec
pop
clc
ss
jecxz
and
or
pop
xchg
sbb
sub
mov
dec
sti
mov
cmp
popa
xor
sub
jmp
push
fcoml
test
daa
or
pop
test
sbb
test
lret
or
add
movsl
push
inc
adc
pop
or
sub
fsts
ljmp
pop
in
ss
test
outsl
shrb
lret
in
lcall
lret
jmp
sub
mov
sbb
call
dec
fisubrl
dec
stos
loopne
lds
sbb
push
dec
fcmove
mov
scas
jmp
push
pop
sbb
push
push
jbe
pop
jb
or
std
mov
sub
clc
lock
mov
pop
add
outsl
test
test
xchg
shld
mov
pushl
test
pusha
sub
mov
call
cld
and
push
call
shll
sub
and
pop
or
out
and
and
fstps
adc
hlt
lret
shlb
adc
xchg
push
cwtl
shrl
pop
insb
xor
rolb
std
btr
ror
push
xadd
xor
call
call
call
or
dec
mov
sub
jb
or
or
popa
push
lea
popa
push
daa
adc
push
idivl
pop
sub
add
jns
and
mov
xchg
negl
loop
push
add
push
daa
in
movsl
adc
add
je
xor
cmp
add
clc
mov
xor
pop
xchg
data16
cld
pop
rorb
outsb
movsb
mov
jo
xlat
fsts
paddusw
cmp
pop
sub
addr16
xchg
lcall
lds
shl
push
jle
test
in
mov
adc
and
adc
shlb
lret
or
lock
ror
xchg
popa
adc
sbb
roll
mov
lahf
out
sbb
orb
jns
das
imul
cmpb
loopne
movsl
pushf
lea
jbe
rcl
inc
mov
dec
shrd
shrd
clc
add
lea
xchg
movsbl
btr
mov
btc
add
bsr
jmp
stos
inc
shlb
imul
loop
jbe
lret
xchg
popa
enter
arpl
mov
jbe
ficompl
rorl
loop
incl
int3
dec
test
fbld
out
xchg
loope
sub
add
rcr
jns
push
insb
sbb
popa
lret
xchg
call
out
adc
iret
mov
dec
mov
xchg
gs
hlt
jae
push
or
comiss
xchg
popa
stc
lret
test
pushf
adc
xchg
stos
fstpt
mov
sarl
dec
fildll
dec
mov
xlat
cmp
inc
pop
sub
in
jns
ror
das
jmp
mov
mov
add
sbb
jbe
xchg
dec
mov
mov
mov
lret
jnp
cmp
and
ljmp
pop
hlt
ja
or
cmp
xchg
push
insb
pop
jecxz
enter
out
fdiv
icebp
jne
sub
mov
cmp
in
jno
imul
iret
and
inc
inc
loopne
or
pop
xchg
std
cmp
sub
ficomps
mov
scas
pop
inc
stos
push
rcrl
in
imul
out
mov
mov
cmp
dec
sub
lock
orl
idiv
popa
ljmp
pushf
sub
scas
test
aas
mov
ret
xchg
jmp
daa
pushf
pop
mov
ljmp
lahf
mov
stos
in
les
sbb
pop
adc
sub
iret
mov
test
jbe
out
pushf
dec
push
fldl
aad
cli
lret
dec
je
cmp
mov
cltd
xchg
pcmpeqw
sbb
or
push
mov
jo
sub
cmp
mov
cmc
stos
jp
add
or
shlb
inc
push
and
or
cmc
lahf
cld
mov
bound
popa
lcall
test
call
repnz
jle
fisubl
inc
ja
insl
fisubrs
mov
lret
dec
xchg
jne
mov
sbb
insb
cmp
xchg
enter
dec
add
pushf
loopne
push
inc
mov
std
bound
cwtl
fisubrs
aam
push
sub
enter
imul
dec
cmp
dec
lret
mov
jae
mov
push
mov
pusha
jmp
pushf
lea
je
bswap
cmc
movzbw
mov
dec
add
bsr
btc
bt
mov
push
pusha
test
mov
push
lea
je
pushf
add
sub
push
and
bswap
mov
pushf
add
pusha
pushl
pushl
add
jns
mov
or
sar
bsr
bsf
mov
stc
cmp
jmp
bt
xor
movb
jmp
pushf
lea
je
movsbw
aam
xor
bts
bsf
pushf
mov
setae
mov
btc
clc
bsf
bts
shr
lea
cmc
btr
mov
inc
mov
cmp
bt
test
or
pusha
call
call
mov
lea
call
pusha
push
lea
jae
pushf
clc
clc
sub
push
lea
call
pusha
pushf
lea
jae
setns
ja
setp
mov
setbe
inc
pushf
mov
lea
call
movb
add
push
pushf
lea
jmp
shrl
mov
cmpsl
mov
movsl
cltd
cmp
scas
jo
push
enter
xchg
popa
test
adc
aam
mov
xor
jmp
imull
sbb
or
xchg
lret
rolb
mov
and
jmp
enter
lea
xchg
pop
lods
jle
dec
je
mov
push
mov
outsl
sub
rorb
hlt
jmp
cmp
inc
sbb
mov
ret
inc
mov
or
xor
add
push
dec
cld
sub
mov
shr
dec
fwait
sbb
ret
xor
jl
push
inc
std
pop
cmc
mov
dec
mul
dec
inc
push
loopne
push
loop
stc
mov
dec
or
scas
jne
std
imul
int
xchg
lret
mov
mov
jle
cmc
stc
mov
and
insb
mov
mov
cld
popa
in
sti
dec
je
dec
aas
ss
aam
jecxz
loop
mov
pop
out
mov
xchg
dec
jg
out
cmpl
inc
out
pusha
out
adc
jae
cmpsl
cmp
or
loop
cmp
push
repnz
mov
shlb
clc
leave
in
je
negb
aaa
fwait
xchg
xchg
addl
xor
cmp
stos
inc
andl
or
pusha
and
xor
insl
dec
fnstenv
subb
dec
mov
jo
lcall
push
lret
pop
add
inc
lret
out
and
cmc
test
shll
push
mov
scas
push
mov
pop
std
xchg
or
jg
sbb
cmp
sub
sub
fstpl
scas
sahf
lcall
test
stos
xchg
jl
adc
mov
xchg
xor
outsb
jnp
jmp
jno
test
int
adc
imul
shll
scas
mov
movsl
mov
cmp
subb
bound
cli
stc
xchg
fnstcw
cmp
lods
inc
sbb
fistl
or
dec
enter
and
xorps
adc
dec
mov
into
js
sbb
movsl
into
mov
add
lcall
push
test
pop
xor
clc
mov
test
inc
insb
testl
sub
jbe
or
sub
sub
push
insb
jne
jne
lret
js
mov
and
je
scas
cwtl
dec
cmp
add
faddl
jmp
loope
clc
inc
fsub
pop
mov
cwtl
pop
scas
loope
faddl
enter
sub
adc
and
test
outsb
lahf
fxch
dec
sbb
call
jmp
test
repnz
pushl
mov
lea
jp
jne
movzbw
ror
test
mov
adc
movzbw
sub
sub
bt
pushf
shld
and
lea
lea
pushf
bt
sub
clc
pusha
jmp
movl
pusha
mov
movw
lea
jmp
ja
stos
enter
repnz
jmp
iret
mov
scas
push
pop
gs
add
into
loopne
jmp
scas
aam
or
inc
cwtl
mov
inc
cmp
mov
adc
jbe
movsl
push
int
cmpsb
add
mov
mov
clc
and
sub
xchg
mov
movsl
pop
ss
xor
xlat
rolb
push
aad
daa
xorb
test
and
vmovd
lahf
lahf
aas
adc
insl
mov
mov
inc
mull
outsl
dec
lcall
ret
int3
dec
ret
lods
dec
stc
lods
lods
mov
add
mov
add
add
imul
add
sub
subl
add
subb
das
jmp
jmp
mov
dec
cmpsb
fists
aas
and
stos
pop
mov
fstpl
bound
inc
jo
push
call
in
into
inc
mov
xchg
and
pop
cltd
add
clc
jmp
mov
sub
jg
push
cli
in
pop
imul
jmp
xchg
xchg
pop
mov
arpl
or
call
rol
push
not
bswap
mov
cmp
cmc
push
cmpb
call
setnp
mov
shr
and
add
bt
sar
mov
shr
bswap
stc
lea
add
pushf
bt
rcr
movl
adc
cmc
mov
movw
stc
cmp
jmp
pusha
lea
ja
jmp
pushf
lea
je
pushf
pusha
call
jl
rol
dec
or
mov
jnp
rclb
adc
push
xor
cwtl
inc
les
test
pop
dec
pushf
fsubs
sub
mov
jecxz
stos
aam
fwait
jmp
popf
adc
lds
leave
arpl
movsl
sub
add
in
insb
fs
pushf
pushf
inc
pop
aam
popa
pop
sti
cmp
insl
dec
std
mov
ss
mov
xchg
cmpsl
stos
adc
pop
fsubl
jmp
jae
and
and
hlt
jge
scas
fcomps
push
cmp
cmp
ficoml
fdivl
subb
pop
push
adc
cmpsb
jmp
clc
jge
sub
push
test
flds
bound
xor
pop
mov
fisubrl
in
xor
push
pushf
ror
cmp
add
jmp
bswap
bswap
lea
call
inc
rol
movsbw
mov
bts
shl
rcr
mov
bts
movsbl
xchg
pusha
cmp
btr
stc
mov
clc
bsf
mov
test
sbb
bswap
mov
test
cmc
pushl
or
lea
jle
pusha
lea
je
cmc
jmp
jmp
fildl
outsl
lds
imul
mov
mov
push
arpl
shl
out
xor
stos
iret
aam
mov
sbb
rcrb
pop
jmp
cmp
sub
push
push
mov
mov
and
das
adc
int
lahf
and
mov
inc
mov
jns
xchg
cs
std
mov
in
or
scas
popl
cmpsb
or
imul
mov
jns
dec
dec
out
loopnew
mov
push
push
lea
jne
pusha
mov
pusha
movb
lea
not
lahf
mov
movsbw
mov
lea
pushf
movw
movl
pushf
pushf
mov
movw
mov
pushf
mov
pushl
ret
lea
ja
cmc
rcr
sub
rcr
add
pushf
or
mov
call
lea
ja
bt
clc
imul
jmp
xor
les
lret
or
xor
and
cmp
xor
mov
fcmovbe
into
leave
bound
je
jp
inc
xor
and
shll
ds
arpl
iret
stos
rcll
orl
dec
fadd
lds
adc
xor
fbld
inc
aas
mov
xlat
mov
lret
mov
sub
add
in
stos
dec
fsubl
mov
fadd
in
bound
es
popa
scas
icebp
xor
idivb
setne
mov
mov
pusha
pushf
pusha
push
lea
jmp
push
push
mov
in
xchg
orl
adc
fldenv
xchg
ret
daa
ja
sbb
or
sbb
cmpsb
inc
dec
cmp
in
int3
out
or
pop
or
add
jp
divb
push
inc
jl
fisttpll
mov
sub
mov
inc
or
fwait
das
push
je
pop
push
push
clc
lods
xorb
and
cmp
into
jbe
mov
mulb
inc
lods
mov
xchg
mov
pop
jno
add
pusha
daa
inc
in
rorb
inc
rclb
lret
sub
test
pop
enter
aaa
repz
cmpb
into
mov
xchg
out
outsb
cmc
in
sbb
mov
push
xor
stc
mov
or
push
das
into
imul
dec
sahf
pop
test
jmp
pushl
lea
je
lea
lea
mov
bswap
movsbw
mov
not
lea
push
push
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
btc
mov
bt
mov
cmp
jmp
jmp
call
pushf
pushf
jmp
pushf
movl
mov
movb
lea
jmp
cwtl
lea
jmp
mov
mov
call
test
mov
jmp
movb
mov
pusha
lods
call
jmp
leave
ret
jno
mov
outsl
sub
adc
les
loope
in
in
add
mov
sub
fisubrl
push
test
inc
add
jp
add
ss
mov
fsubs
dec
sub
mov
sbb
pop
test
in
in
dec
inc
xor
repnz
rcll
adc
push
loope
popa
je
decb
inc
psubd
dec
shl
stc
mov
mov
rolb
jb
js
mov
sahf
and
or
xchg
add
sub
les
add
push
hlt
repz
cmc
mov
nop
cmp
divb
push
pop
pop
subb
adc
mov
add
jbe
int
push
jge
inc
out
push
sbb
xchg
sbb
pop
das
jg
jmp
mov
adc
or
sbb
icebp
jb
and
in
jo
pop
push
cs
inc
fsts
out
das
mov
push
mov
int
lods
and
cmp
pop
dec
js,pn
inc
cmp
sbb
inc
pop
test
and
push
loope
cs
cmc
scas
cmpsl
dec
stc
xor
dec
mov
inc
cld
addr16
mov
jb
pop
pushf
js
hlt
jg
lods
mov
inc
xchg
ds
xchg
and
mov
sbb
test
in
sbb
and
stos
mov
lods
clc
cmp
jbe
sbb
dec
pop
inc
cmp
in
outsb
xchg
sub
pushf
shl
jmp
negb
jb
mov
clc
rorb
ds
inc
movsbl
mov
movsbw
pusha
mov
mov
mov
pushl
pushl
ret
pusha
pushf
jmp
stc
call
cmc
sbb
mov
call
rol
call
add
pushf
dec
pushf
pushl
pushf
call
mov
jmp
lea
jae
call
mov
movb
pushf
push
mov
lea
ja
push
movb
lea
jb
call
push
insl
push
mov
stc
pusha
mov
mov
popa
push
push
adc
popa
pop
fnstcw
push
mov
sub
test
ljmp
cmp
adc
pop
add
mov
out
ret
icebp
xchg
add
inc
cmp
out
xchg
adc
cmpsb
pop
in
enter
mov
movsb
dec
cli
push
cmpsl
mov
cld
loop
pop
bound
jae
loopne
incl
ja
arpl
xchg
or
mov
fst
repnz
loop
out
testl
pushf
pushf
pushl
ret
stc
sub
cmc
cmc
shr
call
lea
jne
pushf
mov
movb
push
lea
call
pushf
pushf
push
pushf
lea
jmp
pusha
pushf
movb
mov
pusha
mov
lea
jmp
jns
mov
mov
pop
add
pop
or
out
add
adc
or
test
xchg
movzbl
mov
bt
stc
test
add
clc
call
sub
pop
mov
or
shl
mov
call
mov
add
push
call
cmc
cmc
or
push
jmp
arpl
xchg
arpl
sub
mov
movsl
jne
jecxz
or
xchg
rcll
into
xchg
test
mov
jmp
mov
les
push
lea
dec
dec
adc
pop
or
rcrb
jle
loop
arpl
inc
ror
jno
xor
pusha
lea
call
call
pusha
lea
je
xchg
xchg
xchg
movsbw
lea
jmp
mov
setl
lea
lea
mov
pusha
movzbw
setno
mov
setnp
movsbw
mov
pushf
movw
movb
pushl
mov
bswap
lea
bswap
pop
pushf
pushl
ret
movl
pushf
pusha
movb
movb
pushl
popl
pusha
pushl
ret
cmp
stc
pusha
push
mov
push
sub
pushf
jmp
test
mov
pusha
movl
lea
je
bt
cmc
add
cmc
cmp
pusha
cmp
pushl
jmp
mov
dec
jg
stos
ret
movsl
out
cmpsl
ret
arpl
sbb
jl
das
push
scas
mov
push
dec
out
jno
cmp
repz
jg
es
adc
nop
mov
enter
mov
and
dec
insb
adc
inc
push
push
in
mov
pop
jne
mov
mov
stc
cmc
sbb
imul
mov
and
pop
pushl
test
and
ja
sub
mov
repz
pop
cli
and
inc
cltd
mov
test
add
dec
ret
ret
pushf
jo
lret
sti
loope
std
fucom
pop
mov
cmp
test
jecxz
sbb
or
inc
sbb
inc
ret
rdtsc
nop
jmp
pusha
lea
je
push
pushf
mov
call
pushl
popl
movb
pushl
pushl
ret
test
cmp
pop
mov
cwtl
lea
lea
pop
setae
mov
jmp
lea
je
xadd
add
stc
sub
bsr
shr
rcl
mov
and
bsf
inc
add
btc
dec
dec
not
add
rol
rcl
shld
mov
test
pushf
movb
clc
shr
stc
jmp
xor
mov
jmp
pushf
movl
push
jmp
jmp
inc
stos
cmpsl
mov
mov
xor
call
push
sbb
pop
arpl
sbb
fcoml
int3
dec
mov
loop
jge
mov
out
mov
pop
or
inc
sub
or
cltd
mov
leave
icebp
aad
sub
lret
sbb
aaa
xor
incl
adc
std
aas
inc
dec
shrb
test
mov
push
mov
pop
sub
push
pop
xor
imul
ss
xchg
pushf
clc
sahf
sahf
in
into
add
imul
xchg
add
jmp
dec
test
out
ljmp
mov
popa
and
push
jne
cs
arpl
sub
mov
jg
add
fs
jne
test
mov
stc
pusha
bt
pushf
add
pushf
mov
bt
push
movzwl
add
shl
mov
cmc
bt
stc
clc
add
ja
pushf
mov
pushf
test
mov
pushl
jmp
mov
mov
bswap
pop
pusha
mov
pushl
ret
bt
clc
test
cmp
jmp
bsf
adc
bswap
bsf
mov
pusha
cmp
pusha
cmpb
jmp
jmp
pushf
jmp
call
movl
movw
push
jmp
shl
in
mov
add
xor
mov
outsb
sahf
scas
and
or
fcmove
jae
jge
movsl
aas
sub
sbb
stc
adc
push
adc
mov
cltd
sbb
ds
scas
sbb
dec
add
lret
push
pop
add
mov
sarl
and
push
rcll
lahf
pop
in
int
arpl
test
hlt
decl
das
lods
hlt
cmp
push
mov
dec
adc
or
xor
mov
dec
into
xchg
and
cmp
push
mov
or
push
lret
mov
sbb
fwait
js
push
shlb
lods
push
mov
sub
inc
cs
movsl
mov
or
data16
jp
xor
jmp
push
pusha
adc
call
fs
sub
ja
pop
popa
xchg
cmp
adc
add
or
xor
or
push
xchg
add
jl
sbb
sub
loop
das
inc
mov
mov
xchg
adc
mov
fs
adcb
jle
dec
add
jo
sub
icebp
out
les
sarl
jp
jl
jecxz
pop
gs
sub
xor
orb
scas
je
out
cmpsl
xchg
movsl
fwait
jo
sbb
inc
shrb
lret
lret
addl
testb
or
push
stc
decb
adc
jle
fcomps
cltd
les
xchg
bswap
leave
popa
ja
mov
pop
mov
cmp
add
js
cmp
daa
lods
xchg
add
stc
lahf
adc
jno
jl
and
lahf
push
push
shlb
xor
dec
addr16
add
xor
mov
xchg
add
cmpsb
cld
or
es
js
stc
jne
loopne
sahf
dec
fistpll
cmp
clc
repz
sbb
aas
push
hlt
jg
jp
aam
or
movd
adc
add
sti
sub
xor
sbb
push
xor
repnz
xor
aam
jns
inc
test
out
jge
push
cmc
aad
inc
fchs
jecxz
sbb
aam
mull
ret
repnz
movmskps
out
addr16
xlat
fnsave
inc
inc
xlat
es
popf
mov
imul
jno
dec
xchg
rcll
lock
xchg
pusha
lea
adc
xchg
mov
ret
daa
jecxz
pop
rol
jmp
cmc
clc
pushf
mov
call
shld
shl
xor
cmc
or
mov
pushf
mov
shr
or
or
btr
shr
bsr
push
pushl
mov
call
cmp
pushf
movw
call
enter
mov
in
mov
movsb
mov
xchg
jae
popa
push
inc
mov
xchg
popa
xchg
mov
cwtl
addl
mov
jne
push
lods
push
add
or
xchg
adcl
xchg
fimuls
pop
dec
in
push
int3
mov
lds
mov
push
sbb
pushf
sub
mov
push
fisubrs
adc
fmull
dec
stos
int
gs
cmp
loop
fstpt
lods
mov
inc
cmpsb
inc
add
mov
inc
in
sbb
rcr
data16
xchg
int
sbb
push
xchg
mov
lea
call
add
dec
outsl
popa
fs
imul
add
push
out
mov
dec
xchg
shl
or
ret
mov
jle
dec
mov
mov
push
jp
hlt
lcall
clc
fwait
les
stc
jmp
aad
sbbl
inc
pop
or
loop
cmp
mov
loop
arpl
mov
adc
pusha
pushl
pushf
pushl
ret
pusha
movb
call
sbb
ds
sbb
pop
insb
push
dec
test
fwait
in
pop
jo
pop
mov
pop
inc
call
in
mov
sarb
jne
pop
xor
sti
lret
and
and
gs
jl
daa
sti
cmc
mov
push
or
jecxz
mov
dec
aas
mov
add
xchg
lods
jmp
rcr
std
inc
aam
int
push
shlb
jns
je
add
pusha
sub
cmc
bt
pushl
popl
stc
jmp
pushl
popl
movb
mov
push
mov
pushl
ret
xor
bt
movb
rol
pusha
clc
bt
sub
clc
clc
rol
test
clc
jmp
xchg
addr16
mov
dec
andl
sub
push
mov
inc
outsb
sbb
mov
addr16
popa
sbb
add
stc
movb
std
add
xor
stos
and
jp,pt
cmc
inc
add
mov
addb
jns
loopne
push
int
mov
inc
cmp
addb
pop
out
pop
pop
lds
test
mov
loop
sbb
je
test
aad
or
jg
mov
insl
movsb
add
arpl
mov
test
mov
daa
js
pop
stos
mov
out
mov
les
mov
inc
dec
pop
pushf
mov
pop
inc
lret
adcl
cs
mov
jae
lret
xor
push
mov
inc
aad
mov
filds
xlat
dec
mov
sbbl
pop
xor
popa
cwtl
add
sahf
aas
rcl
mov
xchg
shr
cltd
mov
mov
sub
and
sub
lea
jmp
mov
pushf
pushl
ret
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
ds
add
pusha
mov
pusha
push
pushl
movw
lea
jmp
lea
jne
shl
stc
call
pop
movzbw
mov
lahf
cwtl
lea
pushf
movb
mov
movsbw
movzbw
movl
cwtl
movl
lea
mov
call
push
xchg
jmp
enter
mov
fldenv
loopne
clc
das
adc
je
xchg
aas
inc
shl
fcoml
jl
in
aas
loop
pop
or
mov
pop
stc
cli
insb
lock
dec
loop
lods
das
xchg
int
pop
insb
das
adc
mov
lret
inc
jne
add
shrb
pop
in
push
xor
cmpsb
sub
ret
popa
inc
or
ret
xor
adc
inc
mov
push
outsb
ds
cmpl
xchg
inc
jl
add
sbb
cmp
lods
sub
rcrl
mov
cmc
jae
mov
pushf
xor
in
fbstp
loopne
test
pop
mov
mov
int3
and
xchg
mov
pop
jl
push
fcoms
out
icebp
repz
cmp
outsl
or
inc
inc
jo
movsl
push
jnp
pushw
add
adc
iret
leave
fucomp
sub
mov
fwait
dec
or
negl
repnz
mov
fidivl
mov
fldt
push
mov
push
add
fistpll
add
mov
dec
adc
sbb
push
xor
mov
adc
mov
inc
in
insb
xchg
xchg
lret
fnstenv
inc
jecxz
xor
cmp
out
imulb
jo
mov
jge
inc
call
addr16
hlt
add
fwait
movsl
lcall
in
mov
pop
fcom
cmp
into
sub
mov
jmp
shlb
cmp
cmpsb
pop
hlt
dec
fbld
push
pop
add
adc
cli
add
dec
mov
fcom
push
std
sub
out
scas
mov
arpl
jno
pop
inc
mov
pop
test
xchg
mov
jno
pop
decl
jbe
bswap
insl
and
stc
std
ret
imul
clc
lods
or
jne
popa
jne
adc
dec
push
cmp
aaa
adc
pop
push
pop
push
lods
cmp
lret
aaa
outsb
adc
fdivs
out
pop
push
push
mov
xchg
push
je
loope
pop
test
mov
push
cltd
mov
adc
insl
ret
in
addr16
and
aad
jl
fcomp
sub
iret
inc
in
stc
leave
clc
or
call
push
call
cld
mov
mov
dec
jcxz
xlat
cmp
ret
dec
pop
out
and
xchg
mov
inc
repz
std
inc
cmpsl
ljmp
out
xorl
mov
adc
sahf
jmp
jecxz
sub
push
cmp
xchg
xor
add
aaa
in
cmpsl
mov
rorb
pushf
pushl
ret
lea
je
clc
cmp
sub
stc
test
clc
cmp
pusha
pushl
pushl
lea
ja
jmp
clc
call
pop
mov
dec
add
xor
sbb
repz
popa
push
rcrb
shrl
add
std
mov
jge
cmpsl
dec
fisubs
mov
dec
adc
std
jnp
aaa
jbe
sub
inc
jbe
lods
xchg
jge
roll
inc
add
jno
in
cmp
add
cmc
xor
fwait
fwait
adc
sub
insl
pop
push
jge
movsb
sub
das
xchg
add
js
sub
test
icebp
jbe
sub
push
into
imul
jge
repnz
jmp
and
movl
cmc
cmp
cmc
stc
test
jmp
sub
das
scas
mov
jle
js
push
rorl
stc
or
sub
mov
je
scas
sub
int
push
push
repz
out
fs
jg
xchg
xchg
cmp
jecxz
xchg
xor
mov
push
ss
xlat
adc
sti
dec
xor
cmp
scas
lcall
inc
movb
lea
jmp
jmp
jp
jl
mov
in
mov
shlb
lods
adc
int
fwait
andl
xchg
or
lea
cmp
stc
pop
nop
xchg
dec
rcrb
lcall
fs
push
leave
sub
stos
jno
push
mov
fs
addr16
enter
and
mov
xorb
loope
loopne
or
inc
lret
js
ror
dec
pushf
pop
fcmovnb
mov
call
sub
adc
scas
inc
xor
stos
loopne
jl
mov
or
enter
add
jne
icebp
dec
mov
lret
pop
jecxz
sbb
jo
jbe
adc
push
pop
pop
test
testb
sahf
ficoms
xchg
mov
repnz
dec
movsb
cmp
push
mov
push
pop
cli
xor
lods
cmc
or
pop
std
incb
mov
test
arpl
sub
push
inc
adc
mov
cmpsb
push
in
sub
jnp
ja
cmp
xchg
aam
pop
std
adc
pop
nop
scas
mov
rcrb
adc
dec
push
add
cld
fs
push
cmp
inc
bnd
sarl
fisttps
push
je
mov
xor
sarb
adc
fs
test
jmp
repz
mov
out
nop
xor
or
rcrb
ror
iret
clc
sarl
ds
inc
or
sbbl
and
xchg
mov
inc
test
sub
push
pushl
inc
sbb
cwtl
mov
test
dec
ret
ja
into
insl
into
inc
cmp
ljmp
add
stos
ret
xor
cmpsb
mov
pop
push
andb
call
inc
ret
in
cltd
mov
data16
das
push
xchg
add
fsubrl
scas
xor
add
fs
mov
sub
cmpsl
push
push
addr16
mov
dec
cmp
mov
jno
or
stc
push
ret
xor
cmp
dec
cmpsb
push
or
js
dec
loope
adc
xchg
mov
lret
icebp
sub
pop
cmpsb
mov
mov
sarl
cmc
push
jl
jns
pop
neg
and
dec
pop
test
mov
fcmovnb
stos
inc
push
shlb
mov
inc
imul
icebp
dec
cld
aas
xchg
dec
fistps
push
lahf
cmp
push
jecxz
in
sub
cltd
add
sbb
jo
imul
mov
sti
and
in
insl
rcrb
call
push
ds
aam
pushf
fnstenv
repnz
add
push
pushf
lea
jmp
mov
dec
imul
popf
pop
add
lds
lock
add
pushf
xchg
ss
mov
xor
scas
repnz
repz
into
fcoms
xor
sbb
inc
ret
push
addb
pop
sbb
mov
outsb
fsubrl
jno
xor
push
push
pusha
pushf
fsubs
mov
ret
xchg
xchg
pop
sbb
jle
push
xor
sub
mov
testb
rclb
frstor
xor
stc
lea
je
push
lea
pushl
mov
bswap
pushf
not
movzbw
mov
cwtl
setnp
pop
setae
lea
pusha
call
mov
test
add
push
cmp
clc
test
test
call
movl
jmp
lea
je
call
sub
add
stc
stc
jmp
inc
lods
stos
mov
jne
jnp
add
and
iret
lahf
movsb
add
repnz
dec
rcrl
pop
addr16
fstps
and
sub
xchg
add
aad
push
dec
inc
rorb
inc
mov
or
rcl
xlat
inc
lret
mov
subl
jle
push
xorb
sub
fsts
sbb
xchg
ficoml
enter
fsubrs
inc
cmc
pop
pop
shl
lods
adc
leave
fidivrs
jge
push
adc
xor
or
mov
cmp
scas
mov
inc
mov
mov
pop
pop
mov
or
out
setno
dec
stc
jg
fwait
js
xchg
push
sbb
and
jg
sub
fsub
cs
test
cmpl
ja
add
fcmovnb
sub
and
push
dec
jg
lcall
adc
jnp
fldcw
stos
aas
add
pushf
pop
sub
or
mov
sbb
jg
test
dec
push
test
ret
out
movsb
or
xchg
fwait
ret
das
out
jge
outsb
lock
in
popa
shrl
pop
xchg
bound
nop
idiv
inc
std
push
cmp
bswap
sub
test
and
push
or
lahf
clc
push
or
push
shr
rcl
and
push
bsf
push
rcr
lahf
mov
push
pusha
pushf
test
test
pushf
call
pushf
movb
or
call
inc
pushl
call
push
mov
bswap
pushf
lea
call
stc
cmp
call
mov
bt
repnz
pusha
lea
jne
movzbw
bswap
push
movb
lea
bswap
mov
push
lea
pushl
pusha
movb
lea
jmp
aad
ret
mov
xchg
jns
repz
pop
loope
loopne
fbld
ds
in
mov
mov
testb
pop
dec
std
mov
push
dec
sbb
add
in
fcomip
mov
imul
pop
in
imul
aam
add
jg
outsb
imul
mov
int3
xchg
mov
mov
sbb
cmovge
ret
in
out
sub
dec
cltd
aad
cmp
std
adc
jle
stc
and
call
inc
dec
out
xchg
or
xor
xor
push
push
sahf
ljmp
mov
int3
hlt
cltd
in
dec
mov
push
dec
pusha
or
xlat
addr16
mov
mov
lret
dec
insb
stos
arpl
cli
add
enter
xchg
in
fucomi
scas
ret
dec
jnp
insb
pop
ficoms
shrb
push
shll
insl
push
push
or
sbb
pusha
jge
dec
or
cmp
cmp
int3
or
push
into
into
mov
pop
dec
out
jg
ret
adc
dec
out
or
sbb
out
pushf
add
sub
or
pop
mov
sub
push
lret
pop
stos
mov
pop
aaa
in
shrl
jg
pop
out
cmpsb
movsl
mov
lret
popa
fnstsw
in
outsb
sub
imul
or
mov
outsb
das
add
out
jecxz
fwait
pop
insl
sub
pusha
outsb
pop
fs
push
jmp
data16
pop
popa
arpl
in
in
gs
pop
outsb
and
scas
push
outsl
mov
sub
inc
sbb
ret
sahf
into
shll
lds
imul
testb
das
stos
ljmp
xchg
dec
aas
gs
loopne
add
push
jb
pusha
adc
dec
pop
das
pop
out
sbb
stos
in
fisubs
arpl
pop
out
iret
in
gs
mov
aam
jne
imul
popa
dec
push
ret
push
cmp
jecxz
dec
scas
cmp
push
push
jecxz
mov
scas
mov
imul
ljmp
jmp
and
xor
push
or
in
insl
cs
das
fsubp
loope
loop
pop
out
ljmp
pushf
rcr
jno
and
push
data16
sub
stos
inc
and
daa
imul
pop
insl
sub
loopne
ljmp
in
fsubrp
fisubrl
sub
fisubrl
cmpsb
sub
ljmp
xor
data16
cs
in
int
scas
aam
out
inc
lahf
or
ret
and
bound
in
lret
movsl
out
test
fwait
inc
aas
imul
in
popa
insl
imul
loop
sub
call
rorb
sub
fisubrs
cmpsb
mov
sub
and
mov
lods
sub
stos
jmp
push
push
addr16
and
in
mov
loop
in
push
out
test
jecxz
and
fs
seto
fisubrs
dec
in
fldt
or
test
test
out
insb
stc
ret
and
out
xchg
out
movsl
out
dec
outsb
test
cmp
ret
push
adc
sub
loopne
loop
xchg
fucomp
pop
nop
std
or
xchg
popa
or
insl
in
adc
sbb
fisubs
ds
mov
in
inc
imul
sub
in
insb
movsl
mov
mov
sahf
push
fsts
fucomi
out
fs
push
cmpsb
pop
dec
or
dec
in
ret
fcoml
pop
and
and
push
loopne
data16
and
mov
cmp
stos
mov
decb
in
das
sbb
scas
sbb
shlb
pop
insl
sub
call
push
lret
ljmp
push
cmp
fildl
fnsave
out
out
int3
frstor
stos
loop
ljmp
pop
mov
and
add
jmp
pop
arpl
jmp
insl
call
fistps
ljmp
stos
outsb
sub
jecxz
fisubs
or
fidivrs
jle
aas
fucomp
jg
cmovp
outsb
and
call
jne
push
sub
loope
ret
push
cmp
fucomp
mov
test
imul
and
insb
lret
scas
out
fisttpll
icebp
out
leave
adc
pusha
jmp
out
sub
jmp
scas
popa
push
popf
imul
out
sub
aaa
pop
out
jb
call
lret
imul
shlb
es
stos
push
out
sub
add
dec
sbb
dec
insl
and
jmp
call
inc
scas
lds
scas
cli
xor
daa
inc
mov
push
push
sub
mov
popf
scas
cs
pop
scas
insl
and
pop
aas
shrl
loopne
frstor
imul
sub
jo
aas
jmp
loope
xchg
arpl
outsb
arpl
sub
push
insb
test
jb
imul
sub
call
daa
push
dec
sub
mov
outsb
frstor
and
jmp
mov
add
push
in
sti
out
call
addr16
fldenv
test
push
out
loop
mov
loop
out
arpl
aaa
shl
push
fucomp
imul
xchg
imul
inc
mov
aas
in
sbb
push
imul
outsb
popa
push
les
in
or
lds
clc
add
outsb
pop
popa
cmp
inc
fdivl
out
ljmp
nop
aas
ret
mov
jmp
inc
pop
sub
scas
push
mov
sub
xor
push
or
xchg
cmp
lods
int
lods
insl
sub
sbb
push
insl
lock
loopne
mul
out
pop
cmp
lods
scas
scas
insl
fisubs
es
jmp
pop
mov
int3
dec
ljmp
sub
push
sbb
jmp
pop
ljmp
out
adc
shll
cltd
test
push
cmpsb
sbb
and
popa
add
pop
jmp
bound
and
sub
movsl
sahf
cli
popa
movsb
test
push
pop
aaa
es
push
sub
dec
sub
cmp
sub
jbe
pop
psraw
mov
out
and
pop
in
arpl
mov
push
fsubrp
dec
scas
sub
ljmp
test
jmp
add
sub
imul
data16
dec
pop
ljmp
xor
adc
bound
data16
daa
dec
repnz
jmp
dec
insl
push
dec
jecxz
das
das
sub
ljmp
pop
and
int3
sbb
xchg
inc
cmp
dec
inc
in
daa
das
xor
data16
inc
daa
repnz
pop
jmp
inc
insl
push
push
fildll
in
scas
das
mul
test
dec
in
push
scas
inc
mov
lret
scas
out
shr
shr
out
mov
outsb
gs
imul
scas
scas
or
cmp
out
and
xor
addr16
sub
loopne
out
and
push
cmpsb
cli
call
popa
pop
ucomiss
shrl
das
loope
insb
icebp
pop
sub
bound
pop
cmpsb
loop
inc
and
pop
lods
push
cli
out
pop
arpl
out
and
es
stos
cmp
and
pop
scas
push
in
fs
test
lods
out
bound
test
jb
cli
push
andb
imul
add
sub
sbb
in
lods
imul
outsb
pop
push
pop
lods
mov
mov
daa
and
dec
jmp
outsb
jmp
and
sub
add
add
scas
adc
fs
jmp
mov
and
or
sub
daa
pop
mov
pop
hlt
push
fisubs
cli
sub
in
cli
sub
mov
mov
mov
or
cmp
loopne
pop
int3
cmpsl
movsl
pop
push
cmp
xor
mov
jno
xor
jo
int3
sub
fiadds
daa
imul
cmp
ret
and
sti
xor
movb
movb
pop
das
mov
mov
pop
fsubl
add
int
mov
cmpsb
int3
in
popa
pop
test
pop
cmp
push
sbb
push
cmp
aad
mov
pop
lods
mov
mov
insb
sbb
in
adc
mov
or
dec
testb
adc
sub
and
int
insl
daa
stos
subl
pop
out
int
in
or
pusha
sub
mov
push
das
mov
push
inc
fs
sub
in
das
lods
pop
das
test
cmpsl
pusha
jne
sub
pop
or
in
data16
addr16
out
stos
push
in
xlat
and
inc
cs
cmpsb
fiaddl
imul
gs
pop
mov
and
fucom
popf
mov
addr16
ret
jp
jecxz
cmp
xor
cld
push
pop
pop
and
and
fucom
or
faddp
and
scas
lea
stos
cmpsb
loop
adc
pop
adc
call
cmp
lods
xchg
mov
ret
aad
pop
imul
mov
scas
jge
ljmp
lods
ficomps
out
jmp
in
stos
and
inc
aad
push
loopne
pop
stos
out
stos
sub
dec
out
insl
and
popa
fisttpll
dec
ret
mov
aaa
pop
mov
sub
out
or
scas
cmpsb
xor
outsb
pop
ljmp
ss
test
dec
and
jmp
aaa
js
shrb
gs
sti
in
cs
xchg
out
ret
dec
lods
pusha
add
push
pusha
cmp
lods
gs
fisubs
and
pushf
xor
adc
cmp
xor
ret
aad
bound
jmp
mov
sub
scas
fsubrl
xchg
xor
imul
sub
push
mov
pop
scas
imul
fsub
pop
leave
sub
out
imul
sbb
addr16
and
xor
xor
jns
sub
shl
lcall
outsb
push
mov
pushf
push
in
jmp
sub
cs
pop
and
subb
mov
cmp
mov
stos
add
stos
test
or
xchg
lods
pop
mov
cmp
inc
push
insl
data16
lret
lods
sub
push
fisubrs
push
bound
jmp
jl
push
jmp
inc
lock
jge
jl
pusha
out
pop
daa
fisubs
movsl
or
inc
in
in
gs
mov
mov
das
aad
pop
lods
aad
movsb
pop
sub
jecxz
lret
mov
je
push
in
outsb
daa
cli
insb
jecxz
aaa
xor
dec
loop,pt
ljmp
jmp
add
jecxz
insl
arpl
aas
test
test
cmp
sub
scas
add
sbb
in
or
ss
fadds
mov
addr16
mov
inc
insb
dec
out
push
sub
dec
in
push
scas
loopne
xor
scas
pop
bound
cmp
push
cli
scas
sbb
popf
scas
das
push
jb
pop
loope
ret
addr16
insl
lods
lods
cli
mov
arpl
sub
dec
and
and
and
jb
in
scas
setb
inc
jmp
sbb
or
es
or
sub
mov
icebp
push
sub
lods
call
jmp
enter
or
fmulp
movsl
fsubp
mov
addr16
das
adc
adc
xlat
or
insb
fisubrs
stos
imul
pop
lret
in
dec
lock
ss
pushf
cmp
sti
frstor
sbb
sahf
out
add
push
fsubrp
dec
sub
or
sub
and
out
inc
and
fldcw
data16
cmpsl
mov
fisubs
test
lods
lds
add
fsubrp
or
movsl
add
or
fdivrp
pop
insb
pushf
lods
daa
add
inc
and
scas
adc
dec
push
push
out
pushf
es
out
outsb
test
imul
out
cmpsb
and
sub
jae
sub
mov
inc
outsb
cld
in
push
sub
js
out
in
cmpsb
fldcw
fdivs
push
outsb
pop
addr16
inc
es
push
outsb
test
and
push
xchg
in
aad
loopne
xor
scas
push
lret
scas
in
shrl
inc
rolb
sub
and
in
outsl
inc
pop
jnp
jp
fldl
pop
shrb
xor
inc
insb
push
addr16
ljmp
mov
bound
outsl
or
mov
cwtl
dec
scas
repnz
push
dec
fdivrl
push
daa
push
push
scas
jecxz
fstpt
and
addr16
or
cmpsl
xor
or
pop
into
lods
negb
lcall
out
pop
testb
insb
push
cmp
lods
aam
pop
mov
and
das
aas
adc
and
dec
mov
testb
insb
lods
push
and
push
mov
push
enter
dec
pop
repnz
outsb
pop
fdivrl
push
or
dec
lods
in
push
jle
inc
in
mov
mov
jnp
filds
adc
outsb
cs
cmpsl
cmp
xchg
arpl
ja
xchg
mov
dec
adc
pop
hlt
mov
inc
push
sub
insb
daa
and
hlt
bound
mov
jge
das
lcall
in
pusha
out
test
cmpsl
push
gs
cmp
lret
mov
call
dec
imul
addr16
jge
cmpsb
mov
movsl
pop
push
jbe
cli
push
xorl
and
sbb
pop
sub
dec
sbb
aas
push
movsb
scas
lods
insb
loopne
imul
mov
icebp
pop
mov
insb
sub
push
sub
mov
jg
ljmp
outsb
jnp
out
sub
ds
das
add
fadds
pushf
pusha
dec
int
loopne
sub
rcll
clc
fsub
out
mov
xchg
fldenv
xchg
stos
mov
loop
cs
fisubrs
lods
scas
xchg
outsb
int
mov
and
and
jecxz
fisubs
sub
scas
out
aas
inc
dec
loop
lods
or
or
or
in
fisubrs
nop
cmp
loop
aam
fsubr
add
cmpsl
fisubs
loop
pusha
outsb
in
das
dec
stos
sub
and
ljmp
pop
dec
fsubrp
sub
ljmp
ljmp
and
popa
dec
mov
pmaxsw
lods
dec
in
sub
stos
dec
jmp
push
cmpsl
dec
out
movsl
fs
and
fdiv
scas
loopne
or
push
popa
aad
fucomi
out
das
pop
test
fidivs
fucomp
scas
pop
and
adc
xchg
das
loopnew
and
cmp
out
insl
push
insl
das
fcompl
push
vpminub
push
test
idivl
das
lds
in
test
xchg
ret
inc
stos
lods
inc
mov
and
iret
scas
dec
in
pop
scas
loopne
pop
test
lcall
jecxz
push
jmp
cmpsl
test
outsb
insb
sub
mov
inc
jp
das
sub
in
in
sub
dec
in
inc
cmp
ljmp
call
fucomp
jne
mov
in
inc
aas
sub
imul
lret
dec
das
and
call
jmp
ficomps
arpl
movsb
rclb
jmp
pop
aas
out
in
mov
jmp
mov
jmp
inc
insl
adc
in
or
out
pop
cld
and
xchg
sub
movsl
pop
jmp
in
stos
scas
jne,pt
cmpsl
and
dec
push
insb
or
insl
sbb
dec
pop
je
xor
xor
and
pop
inc
test
imul
in
loopne
hlt
outsb
cli
outsl
sub
es
mov
stos
jne
mov
andb
xchg
cs
push
fisubrs
notb
pop
loope
aas
sub
insl
sub
aas
out
pop
out
cmpsb
fisubs
punpckhdq
sub
addr16
das
lret
scas
in
jecxz
fisubs
cmpsb
dec
movsl
sub
sub
push
loop
movsb
push
and
or
scas
rcr
sub
sub
sub
sub
or
fs
nop
packsswb
pusha
fsubrp
lahf
sub
fisubs
scas
out
bound
out
jmp
in
jecxz
outsl
dec
loope
lea
lods
inc
jecxz
shlb
orl
pop
in
pop
insl
test
insl
out
shrb
mov
jmp
insl
sub
insl
in
jb
mov
fs
dec
in
dec
and
pminsw
out
lahf
push
aas
call
pop
daa
fldenv
aas
bound
and
inc
pop
icebp
mov
mov
outsb
pop
es
and
sbbb
cmpsl
insl
dec
fcmovb
jecxz
movsl
pusha
inc
aad
scas
popa
xor
popa
mov
out
test
push
stos
mov
jmp
imul
sub
push
push
roll
lods
pop
fs
inc
in
lods
xchg
out
ljmp
loop
inc
call
repnz
daa
jb
pop
gs
in
push
and
shll
loop
lods
pop
push
inc
in
repnz
sub
imul
and
push
push
xchg
pop
ficomps
mov
mov
stos
dec
xor
aas
push
and
leave
lret
popf
addr16
xor
jbe
mov
sub
imull
and
stos
arpl
fldcw
mov
out
or
in
pop
fists
fld1
sub
shr
and
xchg
mov
out
stos
and
jno
lods
xor
jno
loopne
cmpsl
cmc
in
lods
jecxz
push
sbb
call
pop
cmpsl
and
in
inc
mov
jmp
mov
mov
add
loopne
and
or
pushf
loope
in
and
icebp
push
scas
ljmp
push
loop
and
pop
frstor
fisubrs
into
dec
in
sub
out
in
jmp
sub
fisubrs
scas
xchg
fucomip
or
sbb
xchg
adc
out
stos
imul
mov
fs
and
sti
fisubrs
mov
and
aad
lods
fsubrp
dec
sub
addr16
out
das
fstpt
jl
sub
test
fsubrs
push
stos
dec
gs
add
cld
inc
stos
and
movsb
fsub
ficomps
dec
bound
sub
or
aad
push
in
pop
lods
mov
pop
int
fisubs
scas
in
out
scas
adc
es
push
pop
fistpl
mov
daa
insb
push
adc
out
and
out
cmp
mul
xchg
inc
stos
out
sub
jmp
dec
scas
jno
inc
in
sub
xor
sub
inc
push
sub
scas
push
cli
scas
sbb
scas
xchg
adc
pop
push
lret
subb
loopew
push
pop
pop
imul
cli
and
and
loopne
loop
inc
daa
fildll
fidivrs
sub
arpl
das
repnz
or
out
and
sub
xor
out
loop
push
cmp
sub
pop
pop
test
or
daa
stos
and
scas
aad
mov
jecxz
mov
scas
mov
push
lods
fucomp
lahf
aas
push
mov
loopne
adc
movsb
and
shrb
arpl
sub
bound
push
insb
fmulp
sub
fs
out
xchg
insb
push
jmp
imul
scas
cmp
mov
shrl
pop
jnp
loopne
sub
out
xchg
or
dec
out
add
mov
jg
xchg
in
mov
cmp
and
movsb
adc
lods
push
xor
ljmp
fisubs
mov
sub
scas
das
insl
out
mov
adc
pop
in
mov
out
or
push
flds
and
ljmp
push
pop
cmpsl
repz
out
gs
in
sbb
out
out
gs
push
mov
out
out
add
jmp
lods
int
mov
in
mov
out
gs
call
in
in
ret
pop
adc
outsl
cmp
das
xchg
in
scas
mov
adc
cmp
cli
scas
sbb
lods
scas
out
or
push
jle
bound
and
cli
scas
outsb
and
adc
scas
and
repz
push
pop
scas
in
loop
sbb
adc
sbb
scas
outsb
and
pop
sbb
push
cli
scas
sbb
lods
scas
mov
cli
scas
outsb
call
scas
push
pop
popf
out
ret
out
and
addr16
add
jmp
insl
in
cld
sub
cmpsb
add
sub
nop
pop
sub
pop
jl
in
dec
bound
add
dec
fisubs
das
add
fsub
andl
js
mov
lods
daa
pop
jmp
or
sti
ljmp
add
dec
out
int
loop
in
aam
jmp
daa
out
jg
push
push
ljmp
aad
fsubl
push
fisubs
movsl
push
cmpsb
sahf
out
pop
aad
movsb
pop
jecxz
fisubs
int3
cmpsb
and
out
lods
imul
fsubl
fisubs
jecxz
cmpsb
pop
das
jo
outsb
lods
dec
in
sub
stos
jmp
cmp
push
out
es
fs
arpl
loopne
and
pusha
push
fisubrs
insb
sub
sub
sub
cmpsb
dec
movsl
sub
sub
push
push
outsb
dec
insl
sub
stos
jmp
sub
movsl
dec
movsb
sub
loop
loope
loopne
out
sub
inc
out
in
push
in
dec
sub
movsb
jecxz
inc
test
lods
imul
or
push
sub
ret
das
or
add
aad
fisubs
mov
inc
xor
cs
sub
test
ljmp
mov
dec
pop
in
and
pop
push
in
dec
jle
loope
sub
jle
add
sub
int
es
add
in
lock
sub
dec
insl
data16
shlb
mov
and
pop
imul
out
out
popa
imul
dec
cmp
aas
sub
in
out
movsl
in
in
imul
aas
mov
imul
imul
push
fiaddl
fdiv
imul
loope
and
push
fwait
mov
cmp
daa
loop
jmp
cmpsl
int
daa
es
sbb
lock
push
scas
push
jmp
data16
idivb
fldt
push
sub
pusha
lock
out
push
fstl
ljmp
scas
dec
in
scas
xor
insl
daa
das
aas
fistl
adc
jecxz
and
outsb
mov
mov
out
inc
outsb
push
mov
xor
daa
test
fisubrs
cli
lods
sbb
sbb
out
or
cmpsb
fsub
cli
outsb
lea
pop
movsl
cmp
insl
jecxz
cmp
shlb
movsl
mov
stos
mov
add
and
and
jnp
sbbl
lcall
in
scas
in
test
out
sub
sub
ljmp
pop
cmpsb
addr16
xchg
dec
sahf
jecxz
shlb
mov
and
fisubrs
mov
faddp
cs
out
ds
xor
and
sub
pop
aas
in
in
nop
scas
cmp
popa
ljmp
lret
loopne
daa
push
sub
outsl
stos
and
xor
and
out
ficompl
scas
jge
popa
or
dec
mov
and
xchg
in
out
es
loope
pop
paddsb
in
mov
mov
in
mov
pop
jbe
xor
sub
aad
loop
bound
pusha
sub
call
ljmp
jg
pop
test
sub
lret
out
inc
jecxz
xchg
pop
mov
fwait
jecxz
outsb
call
dec
adc
insb
outsb
and
loopne
insb
test
lods
scas
das
adcl
stos
pop
es
and
sub
incb
lcall
lds
test
popf
pop
adc
insb
js
pop
rcr
push
jb
cmp
shll
and
lock
test
out
test
and
ret
or
fldcw
movsb
add
pop
sub
iret
int
sbb
pop
iret
out
stos
in
cmpsb
in
jmp
pop
in
sub
aas
sub
fsubrl
test
and
out
pop
lea
mov
out
and
lock
and
adc
and
lcall
lods
dec
and
movsl
das
pop
popa
push
and
jp
and
lret
sub
lea
adc
stos
lods
cmp
in
clc
pop
loopne
in
inc
test
push
xor
mov
jno
xor
pop
out
mov
sbb
inc
mov
inc
movsl
sbb
xor
and
stc
inc
lods
lcall
adc
mov
test
mov
pop
xlat
movsl
mov
loopne
mov
jmp
jecxz
fsubrl
push
into
movsb
outsl
movsb
lods
dec
dec
adc
int3
imull
jecxz
rcrl
pop
push
sub
test
cs
test
pop
loop
dec
inc
fucomi
sub
fld
cmp
jmp
sbb
mov
std
pop
loop
pop
mov
scas
das
mov
ret
pop
out
mov
jns
bound
cmpsb
leave
stos
sub
arpl
mov
jge
mov
jl
xor
and
inc
fiadds
cmpsl
dec
in
mov
out
in
fisubrs
mov
imul
xchg
out
fisubs
pop
push
push
add
or
or
pop
fsubs
out
mov
sub
pusha
xor
sbb
pop
aam
cmp
pop
mov
cmp
mov
daa
fs
data16
jle
scas
fsubp
aad
movsl
fsubrp
aad
in
fsubrp
pop
lods
stc
mov
call
outsb
inc
mov
pop
arpl
in
mov
iretw
outsb
mov
out
addr16
and
pusha
and
fsubp
aad
cmc
stos
gs
cmpsb
push
in
inc
scas
lods
pop
and
pop
imul
sub
dec
insl
sub
jmp
ljmp
bound
out
pop
scas
pop
inc
fcomp
sub
ljmp
sub
movsb
arpl
sub
pop
loop
lods
push
jmp
sub
imul
push
loope
imul
mov
sub
imul
and
sub
pop
dec
fisubrs
addr16
or
or
das
imul
lods
dec
stos
sub
dec
movsb
sub
and
sbb
or
pop
loope
sub
out
cwtl
push
push
fidivrs
mov
and
test
cmpsl
sub
gs
and
arpl
dec
out
std
das
in
ljmp
test
sub
fs
arpl
sub
and
out
in
push
lods
dec
lods
sub
sub
sub
and
ljmp
cs
insl
dec
lods
sub
jmp
out
movsl
dec
in
and
arpl
dec
loopne
and
mov
push
sub
sub
imul
imul
dec
movsl
sub
arpl
sub
scas
out
mov
faddl
lods
xlat
leave
mov
and
jmp
and
jae
jo
mov
jmp
imul
pop
outsb
jns
pusha
jmp
out
out
add
mov
rcrb
ljmp
sub
pop
loop
and
fidivrl
leave
in
insl
and
insb
push
xchg
insl
ret
ret
jnp
cmpsb
fwait
adc
scas
scas
and
xor
cld
push
push
xchg
pusha
jmp
insl
xchg
pop
sub
pop
xchg
scas
push
adc
scas
sbb
sbb
xchg
cli
scas
sbb
lods
scas
loop
call
cli
scas
sbb
sbb
out
pop
jecxz
sti
mov
out
popa
jmp
dec
stos
mov
push
out
and
inc
out
fsts
outsb
inc
pop
scas
dec
mov
loop
out
stos
ret
mov
out
fs
movsl
adc
scas
inc
rcrl
and
mov
scas
adc
inc
loope
add
mov
out
inc
sub
pop
gs
stc
xor
dec
fucom
pop
movsb
stc
mov
cmc
fiadds
ds
mov
or
cmp
sub
les
xor
ja
push
out
les
cmp
mov
es
fisubl
in
sub
movsl
lods
daa
fistpll
loop
mov
movsl
loop
mov
lods
lods
mov
in
outsl
lods
fs
fisubs
hlt
and
mov
out
loope
das
imul
xchg
popa
adc
push
cltd
popa
cld
or
sub
rcr
fiadds
ljmp
mov
scas
mov
in
fbld
inc
pop
mov
mov
ret
cmp
inc
loope
in
in
dec
in
ljmp
and
xchg
into
and
dec
fs
and
add
mov
sub
ljmp
jmp
dec
and
in
das
in
test
fsubl
aad
pop
repz
fidivs
imul
sub
lock
clc
loopne
jmp
lods
jge
test
xchg
lea
and
jne
sbb
jl
mov
mov
loope
out
sub
test
in
lods
fldlg2
stos
jmp
pop
loopne
adc
mov
mov
in
jbe
inc
movsl
xor
add
lods
xchg
sbb
jge
lcall
cmpnleps
std
push
in
jno
mov
or
addr16
pop
or
popa
push
pusha
pop
das
scas
mov
fsubrp
insl
xchg
pop
in
sub
ss
fiadds
arpl
sub
mov
shr
or
lret
cmp
iret
fsubrl
cmp
inc
mov
lret
clc
mov
repz
cs
inc
ret
sbb
or
jns
outsl
enter
mov
pop
inc
jo
aam
sbb
jmp
fcmovnb
outsl
jp
push
sbb
pop
mov
add
sbb
rolb
pop
and
std
push
cmp
inc
mov
das
testb
sub
push
sub
mov
ljmp
dec
dec
sub
pop
mov
popa
cmp
or
xbegin
jbe
or
aad
pop
sub
or
cmp
cmp
or
sti
sbb
insb
ljmp
sub
jmp
cmp
test
fmuls
stos
out
cmp
mov
inc
push
pusha
cmpsb
pop
and
inc
cli
pusha
pop
in
dec
cmp
ljmp
in
pop
cmc
push
jge
out
mov
sub
and
mov
pushf
ror
int3
inc
insb
aas
xchg
mov
dec
add
push
and
push
out
add
or
fbstp
mov
out
aad
xchg
jmp
dec
arpl
sub
out
hlt
popa
push
imul
jbe
outsl
cmpsl
jmp
scas
shll
daa
mov
cli
pop
push
push
dec
das
imul
ret
addl
sub
pop
push
or
and
sbbb
out
sub
pand
dec
mov
sub
or
sbb
sbbl
xor
xchg
mov
outsb
test
mov
dec
test
in
sub
loop
mov
aad
pop
data16
adc
outsl
inc
xchg
push
nop
xchg
pop
push
test
arpl
pusha
mov
jno
push
mov
or
lods
loope
push
lea
pop
shrb
or
or
call
loop
pushf
sbb
imul
push
inc
mov
sub
jne
stos
fmulp
shll
mov
inc
cmp
dec
pop
and
add
cmc
ss
dec
lods
aas
imul
das
ds
ds
dec
scas
add
lods
xchg
or
push
mov
popf
pop
fsubp
call
jg
lahf
in
out
and
stos
out
out
xchg
inc
outsl
out
dec
pop
cmp
ljmp
into
imul
inc
loopne
sub
sti
fimuls
sbb
outsl
cmpsb
popf
or
in
inc
in
sub
sub
xor
mov
push
rcrb
pop
dec
or
cmp
mov
loopne
dec
sub
cmpb
movzbl
mov
push
clc
sub
ljmp
mov
stos
das
filds
int
xor
into
jl
mov
fcmovnbe
insb
dec
and
push
pop
mov
call
push
icebp
mov
cmp
xchg
js
cwtl
rcrb
xchg
movsb
mov
in
mov
das
cltd
and
in
and
call
push
shrl
xchg
ficoml
inc
lahf
push
outsl
jg
mov
imul
outsb
outsl
fistpl
int
pop
cli
or
inc
dec
hlt
cmpb
sub
cmc
cmp
insb
aaa
pushf
clc
jmp
cs
jmp
dec
cmp
or
fistpl
sub
fs
mov
mov
pop
xlat
mov
jae
mov
out
lods
xchg
out
scas
pop
in
sub
push
or
mov
aas
cmpsl
sub
pop
out
ljmp
sahf
lods
fiadds
dec
jecxz
insb
and
pushf
jae
push
mov
mov
stos
loop
push
xor
scas
nop
and
pusha
sub
in
sub
add
mov
shrl
mov
xchg
adc
sahf
in
ret
add
out
out
jns
dec
arpl
scas
push
mov
clc
mov
outsb
leave
subl
cli
pop
outsl
jl
aaa
jmp
add
es
fisubrs
ljmp
and
stc
adc
in
loopne
lods
lock
insb
push
movsb
clc
xor
mov
loop
pop
call
mul
test
mov
sub
mov
loopne
mov
adc
sub
out
fcomps
loope
dec
mov
ljmp
cmpsb
fcomps
scas
lods
popa
stos
out
xchg
push
scas
jle
pusha
pop
push
in
jmp
mov
lods
out
not
out
or
out
scas
sahf
popa
sub
outsb
adc
pop
out
insl
sbb
outsb
pop
shl
or
sub
ljmp
cmp
sub
cs
loope
popa
imul
out
mov
movsl
outsb
std
popa
sub
scas
and
jle
cs
call
jbe
xor
mov
xor
cwtl
dec
mov
push
mov
lods
data16
into
pop
xor
movsl
lret
mov
bound
xchg
pop
push
out
mov
fsubl
insl
or
rorb
jnp
and
pop
push
addr16
in
out
arpl
stos
sub
ret
outsb
dec
clc
in
cs
or
and
ds
mov
loop
dec
jmp
jmp
stos
mov
es
lods
stos
pop
sbb
push
pop
cmc
push
sub
gs
sub
outsb
lods
stc
xor
jmp
ret
jmp
out
mulb
fs
aas
and
or
cmp
mov
fs
mov
outsb
mov
out
push
insb
rcrb
sbb
insb
fadds
mov
sub
ljmp
sub
mov
jns
gs
stos
in
test
test
xchg
and
fldenv
and
pop
in
jae
daa
adc
or
sbbb
sub
pop
jnp
cmpsl
loopne
ss
test
fstpt
inc
mov
add
pop
fiadds
pop
lods
leave
fimuls
stos
fcmovne
jle
mov
in
hlt
out
std
lods
out
jmp
sub
and
and
lods
jp
dec
mov
outsb
sub
stos
lods
das
mul
push
loop
sub
loopne
dec
movsl
cltd
aam
fbld
jmp
cmpsb
pop
in
cli
jge
jmp
sub
ss
and
mov
pop
push
scas
sahf
lea
pop
sahf
cld
jecxz
sub
jle
cmpsb
sbb
hlt
sub
outsb
mov
stc
or
mov
push
hlt
dec
mov
jb
std
mov
repnz
cs
js
loopne
cmp
mov
sbb
cmpsl
xchg
sub
in
stos
pop
dec
cmpsl
sub
push
sub
xchg
adc
mov
lods
push
push
sub
and
sub
dec
test
lcall
es
out
dec
mov
daa
xchg
repz
cs
in
jae
push
loop
daa
adc
mov
push
sub
daa
mov
notl
cld
mov
sub
sbb
pusha
mov
jnp
loop
lods
inc
sub
jmp
out
out
ljmp
loop
cmpsl
negl
shr
loop
out
bound
dec
mov
mov
mov
loopne
pop
insl
mov
jmp
stos
sub
leave
xchg
mov
xor
mov
ret
jge
push
mov
jp
mov
jecxz
or
test
add
pop
dec
es
add
push
insl
sbb
and
insb
cmp
pop
adc
lret
mov
test
or
call
pop
insb
or
ljmp
pop
push
scas
pop
and
test
push
loopne
jnp
and
scas
out
sub
and
daa
mov
insl
in
dec
out
sub
ljmp
arpl
insb
out
cmp
jmp
inc
sub
das
leave
sub
decb
incb
mov
mov
sahf
push
cmpsl
fsubs
cmpsl
lods
mov
sub
test
insb
jmp
daa
mov
outsb
scas
push
loope
in
sub
jp
dec
and
pop
jmp
and
jge
sub
and
cli
ds
add
lods
cmp
or
out
sub
out
and
mov
pop
and
adc
sub
ja,pn
mov
lret
jmp
push
insb
pop
in
sub
in
mov
test
cmp
and
enter
and
ja
push
pusha
in
lods
out
out
cmpsb
jl
xor
movsb
sub
mov
imul
push
mov
mov
ljmp
cmp
mov
xor
adc
ret
jmp
xor
mov
out
test
push
pop
pusha
insl
xlat
adc
xlat
movsb
jg
pop
adc
test
in
imul
adc
inc
sub
inc
loopne
mov
sub
stos
inc
sub
fsubr
out
sub
sub
popa
cmpb
fs
sbb
mov
scas
addr16
out
mov
stos
pusha
jecxz
add
inc
loopne
cs
out
and
sub
sub
pop
and
es
cli
cs
dec
lods
in
cld
mov
outsb
and
cli
inc
movsl
xor
cmc
leave
in
sub
out
mov
and
repz
push
cs
aaa
pushf
or
adc
cmpl
inc
inc
call
cmpsb
out
cmpsb
sbb
cs
outsb
sahf
mov
out
sub
out
loop
mov
movsb
dec
outsb
bound
test
gs
ljmp
test
jne
daa
test
cmp
rcrb
movsb
mov
frstor
stc
mov
sub
in
in
and
das
loop
insl
pop
push
mov
in
sbb
shll
iret
sbb
out
and
jb
mov
aad
in
fisubs
dec
pushf
scas
sbb
incl
arpl
out
aad
insb
inc
icebp
aad
push
lods
jne
pusha
sub
faddp
cmp
fcoml
and
fsubrl
stos
fisubrs
dec
loope
cmpsb
arpl
mov
inc
das
imul
dec
sub
and
jecxz
out
shlb
sbb
or
int3
decb
cmp
insl
push
outsb
neg
jecxz
insl
xchg
cli
mov
sahf
in
aaa
outsb
out
mov
in
out
and
scas
mov
out
inc
movsb
mov
cmp
out
inc
mov
dec
out
mulb
ds
jmp
stos
fs
mov
mov
pop
inc
cs
sub
jmp
mov
je
and
sahf
jle
mov
inc
out
loop
clc
in
pop
call
inc
imul
test
sub
jle
loope
inc
in
push
or
outsb
bound
inc
sub
out
jle
in
inc
out
mov
jl
inc
mov
push
out
mov
cmc
into
cmp
out
pop
pop
in
sub
in
and
out
and
lods
out
scas
inc
mov
push
and
mov
push
cmpsb
dec
in
pop
outsb
lcall
jmp
mov
sub
xchg
es
dec
pop
in
sub
shll
dec
push
es
popa
pop
das
inc
mov
imul
movntq
adc
lods
into
push
movsl
cld
in
pop
dec
inc
in
insb
test
and
outsb
jo
fsubl
jnp
cmp
and
mov
ljmp
lods
stos
pop
jo
loop
mov
insb
inc
movsl
xchg
sub
icebp
push
and
mov
cs
imul
dec
out
cmp
adc
mov
stc
adc
sub
lods
inc
sub
clc
in
lods
mov
das
pop
repz
imul
scas
sub
pop
lods
mov
cmpsl
pop
andl
cmp
stos
xchg
inc
lods
div
test
stos
push
daa
jecxz
int3
in
sub
xchg
mov
adc
pop
insl
dec
lret
out
dec
lret
mov
add
jl
fs
xchg
cli
in
addr16
into
and
test
mov
pushf
int3
cs
cmpsb
push
inc
mov
movsl
daa
scas
mov
mov
mov
and
mov
and
sbb
arpl
mov
repnz
sub
mov
push
lea
lea
cmpsl
push
addr16
inc
cmpsb
push
jecxz
adcl
inc
sub
jg
imul
jne
jecxz
sub
ja
cmc
fbld
loopne
mov
mov
insb
loope
sub
and
aam
cmp
aad
std
fsubp
xorb
scas
ffree
pushf
sub
imul
pushw
ljmp
sbbl
xchg
and
push
pusha
ljmp
test
fdivr
jecxz
insb
icebp
addr16
fucomip
fisubl
out
das
pop
and
out
cmpsb
insb
cmpsb
cltd
out
outsb
stos
jge
in
movsl
jecxz
push
adc
mov
bound
pop
loopne
out
stos
out
cmpsb
insl
imul
and
aad
add
pushf
addr16
mov
sub
orl
pop
fisubs
bound
inc
data16
insb
mov
sahf
jle
dec
mov
movsb
pop
insb
push
sub
pop
fldl
adc
cmp
mov
mov
push
jmp
mov
nop
in
sub
loop
and
aam
in
add
cmpsl
arpl
mov
pop
arpl
lods
stos
loop
in
sub
rorb
and
imul
int
call
lea
lret
in
sub
movsl
psadbw
test
and
push
loop
xlat
jecxz
lods
into
lods
push
pop
mov
sub
pushw
inc
push
sub
push
scas
cmpsl
push
dec
jle
movsl
mov
dec
icebp
gs
fsubrl
addr16
addr16
ljmp
loop
outsb
push
push
and
cmp
adc
and
das
xchg
test
mov
jmp
mov
push
loop
and
loopne
in
sbb
push
loop
clc
ljmp
das
fnstcw
xchg
cmpsl
jle
out
test
out
lock
jle
std
not
test
loope
std
lods
and
popf
mul
out
test
outsb
push
cmp
sahf
push
test
in
in
paddsw
sub
push
jno
xor
sub
stc
sub
ss
hlt
sub
fisubrs
cmc
lods
ds
hlt
test
adc
xchg
imul
adc
inc
loop
outsb
mov
inc
stos
aad
and
ss
pop
push
sub
pop
pop
and
subl
sub
mov
in
inc
daa
jne
mov
ss
jecxz
adc
jo
sub
cltd
and
jl
out
cltd
adc
std
movsw
je
mov
mov
out
out
cmpsb
je
jmp
ja
sub
dec
and
push
lods
push
gs
ja
mov
lods
inc
das
push
cmc
cmpsl
sub
mov
enter
pop
sub
out
inc
push
push
push
mov
stos
outsb
sub
inc
test
adc
dec
daa
adc
das
and
and
push
mov
out
push
pop
jl
lods
cmpsb
cltd
test
out
movsl
mov
add
adc
daa
add
stos
loop
pop
loopne
stc
adc
dec
stos
out
shrl
into
xchg
cmp
fisttpl
add
test
das
ja
das
and
call
mov
arpl
and
pop
cld
outsb
ss
add
out
push
in
and
out
add
xlat
out
mov
jl
test
mov
and
scas
sbb
mov
scas
ljmp
fmulp
test
xchg
inc
insb
icebp
sub
and
bound
sub
lods
cmpl
in
push
and
xchg
in
add
adcl
outsl
out
jns
out
and
arpl
in
pushf
cmc
shr
aad
frstor
sub
inc
sub
sub
cmc
jecxz
sub
xchg
frstor
fimull
push
inc
stc
in
jmp
fisubrs
jae
jecxz
and
test
dec
or
out
cs
js
dec
sub
fcompl
shll
pop
sti
cs
pop
fidivrl
and
imul
pop
cmpsb
fbstp
out
sbb
in
in
daa
sbb
adc
shlw
add
in
shll
and
mov
lret
dec
in
fisubrl
inc
call
loop
ljmp
add
out
arpl
out
ja
les
outsb
lods
sub
outsb
add
inc
mov
sbb
pop
xor
movsb
ljmp
data16
aas
gs
out
das
push
and
out
mov
shrl
and
and
mov
dec
mul
stos
les
mov
in
sub
popf
mul
cmpsl
les
sub
popf
or
jecxz
pop
stos
jle,pn
mov
test
out
dec
sub
stos
sbb
inc
in
in
out
pop
pop
lret
push
outsb
push
fs
int
push
and
inc
out
movsb
lods
stc
ds
sub
sub
mov
pushf
lods
mov
stos
loop
out
movsb
cmc
push
and
jle
test
xchg
mov
and
xchg
lods
ljmp
pop
jge
mov
fnstcw
out
lods
mul
sub
adc
adc
cmp
popa
and
cmp
and
in
lret
dec
movsb
movsb
mov
pushf
and
in
jle
jecxz
cmpsb
lods
pop
in
xchg
stos
movsb
adc
and
loop
and
and
insl
mov
cmp
scas
out
fs
push
stos
stc
scas
gs
fs
stos
dec
decb
sub
fs
sub
fldenv
dec
test
push
pop
sub
xchg
push
xchg
test
in
cmp
adc
setne
in
inc
dec
push
push
movsb
cmp
sub
dec
out
insl
dec
lods
frstor
push
pop
or
sbb
push
or
int
sub
xor
jp
xchg
cmpsl
dec
movsb
fistpl
jle
es
out
xchg
fildll
xor
insl
fs
cs
lods
cmp
and
dec
insl
pop
fnstsw
jecxz
lahf
sub
and
pushaw
dec
mov
shr
adc
test
dec
ljmp
leavew
adc
pusha
ret
jo
adcl
jae
and
add
insl
inc
jmp
das
insb
mov
mov
add
movsl
sub
cmp
inc
bound
loop
pop
push
in
popf
inc
push
pop
dec
call
fstl
add
push
cmp
outsb
clc
push
fidivs
sub
xor
jecxz
mov
stc
dec
mov
push
hlt
dec
mov
jb
decl
xor
cld
dec
and
xor
or
in
jecxz
push
pusha
imul
and
imul
mov
imul
mov
dec
popa
push
push
mov
adc
sub
out
jg
insb
adc
cmc
sub
addr16
adc
bound
cltd
sbb
mov
loope
insl
add
sub
ljmp
stos
inc
in
xlat
arpl
loopne
shrb
sbb
cmpsl
or
inc
jmp
xchg
outsb
mov
and
sub
lods
inc
mov
and
cltd
hlt
lods
mov
mov
out
and
sub
push
push
das
cmpsl
stc
mov
in
jg
imul
fs
fucom
ljmp
test
mov
inc
in
aam
sub
das
aad
iret
push
lods
push
stos
loop
call
push
and
sti
in
adc
mull
enter
fistpll
and
dec
mov
gs
ficoml
jmp
jp,pn
dec
cmpsl
sub
lock
out
pop
ja
sbb
cltd
in
subb
lods
sub
gs
outsb
dec
add
out
adc
movsb
popa
dec
jp
loop
push
sbb
push
in
mov
pop
xlat
and
cmpsl
inc
cmp
mov
popa
sbb
pop
cs
mov
imul
loop,pn
push
push
xchg
adc
and
into
xlat
stc
mov
rcrl
jecxz
push
mov
leave
or
mov
jae
ret
imul
shll
lea
test
sti
stos
mov
push
mov
ficoms
dec
stos
daa
test
insb
push
arpl
lods
out
jae
jbe
aaa
addr16
cld
sub
insb
dec
out
dec
push
lods
sub
std
mov
ljmp
loopne
cmpsb
add
jg
lods
cmp
loope
loopne
lret
aam
cld
lcall
push
cmpsb
cmp
and
mov
shrb
add
imul
sub
pop
insl
cmp
daa
jmp
or
test
out
data16
mov
and
insb
lods
and
mov
mov
fsubrl
insb
out
sub
and
sub
pusha
repnz
pop
pop
popa
stos
arpl
stos
ret
pusha
mov
fnstcw
pop
sti
out
movsl
fldenv
es
push
test
pop
lods
sub
pop
cmp
stos
cli
sahf
pop
insl
inc
in
lret
pop
lods
std
and
loope
sub
std
out
jbe
sub
imul
cmpsb
std
das
insl
scas
pop
sti
sub
dec
call
or
push
scas
shrb
push
arpl
lahf
dec
cld
addr16
mov
insb
stos
imul
cmp
dec
fisubs
std
cmc
pusha
cmpl
imul
push
arpl
dec
fisubrs
mov
out
push
aad
in
das
dec
outsb
push
stos
cwtl
in
fs
imul
push
cmpsb
call
and
in
cmp
fsubr
imul
fs
pop
imul
inc
jecxz
out
aas
pop
addr16
out
sub
es
in
mov
int
outsb
push
cmpsb
cmp
daa
imul
jge
sub
movsl
addr16
sub
out
rclb
push
pop
mov
call
cmpsb
lcall
xchg
popa
pop
pop
cmpsl
lret
arpl
jecxz
fiaddl
call
add
stos
js
fmul
mov
dec
cwtl
cs
lcall
sub
pop
lea
lcall
cmp
cmp
mov
or
mov
cmp
dec
push
dec
pusha
aas
fimuls
jb
out
popf
cmp
sbb
cmp
mov
dec
dec
inc
xlat
dec
xchg
mov
sub
xlat
call
insb
cmp
dec
push
dec
mov
cmp
aas
outsb
push
loope
outsb
dec
outsb
sub
ficoml
mov
and
loopne
test
pop
cmp
sti
cwtl
insb
xor
sub
sub
stc
ret
out
pop
pop
mov
negl
add
xchg
fstps
cwtl
mov
xchg
or
cmp
jmp
test
cmc
mov
xchg
sub
push
test
and
pop
outsl
mov
rorl
subb
or
mov
imul
fstpl
test
outsl
rcl
loop
xor
cltd
ja
aas
dec
xchg
int3
outsl
jp
cmp
or
repz
dec
xor
sub
cwtl
out
shll
fwait
mov
call
sarl
test
inc
pop
cwtl
insl
or
sbb
scas
lcall
or
insl
or
mov
cltd
test
jbe
test
mov
les
and
psrad
arpl
daa
fisubrs
push
lret
repz
mov
negb
dec
lret
es
dec
in
xor
sti
inc
sub
inc
mov
dec
sbb
ja
shrl
test
sbb
in
imul
pop
mov
call
mov
in
aas
pop
push
xor
movsb
dec
pop
mov
adc
or
bound
and
arpl
push
pusha
adc
js
mov
mov
out
fisubs
cld
adc
aas
sub
ficoml
jp
cmp
xlat
gs
cwtl
stos
cmp
shl
gs
pop
mov
xchg
test
and
dec
sub
pop
jmp
add
scas
lcall
aad
or
aam
clc
mov
cmp
pmaddwd
xchg
cmpsl
fidivl
inc
gs
addr16
scas
fs
bound
mov
and
xlat
sub
inc
addr16
jmp
or
leave
inc
inc
std
in
dec
imul
mov
dec
idivl
push
and
mov
pop
movsl
out
cmp
into
or
dec
push
in
into
movsl
pushf
scas
popa
mov
outsl
test
sbb
cmpsl
frstor
inc
push
sub
int3
fimuls
dec
mov
lret
dec
jl
neg
mov
jmp
or
cmp
call
mov
mov
ret
fists
scas
mov
imul
lret
int
add
insb
int3
fiadds
pop
ja
xchg
pop
xchg
outsl
dec
pushl
dec
xchg
push
sbb
addr16
mov
pop
pop
dec
push
dec
inc
flds
jp
or
jmp
mov
addr16
movaps
pop
lret
outsl
mov
push
mov
dec
pop
mov
inc
cld
pop
cs
push
xchg
sahf
lods
insl
dec
test
mov
scas
das
fucomi
in
stc
imul
test
scas
pop
nop
popf
cmc
outsb
cs
inc
jmp
mov
lods
xchg
les
inc
shrl
sahf
sarl
pop
stos
lods
xchg
inc
or
outsb
ret
push
out
aad
gs
outsl
add
mov
out
mov
or
lcall
jbe
pop
dec
int
dec
in
ficomps
pop
stos
push
mov
cmp
push
gs
lods
cmpsb
mov
push
jp
imul
ret
lods
imul
jmp
clc
inc
adc
mov
clc
add
mov
or
outsb
scas
dec
jne
insl
cltd
in
imul
gs
call
mov
out
mov
arpl
xchg
or
cmpsb
pop
bound
inc
in
fimuls
pop
or
inc
popa
stos
add
push
mov
loop
sub
out
dec
cmpsl
loop
fldenv
pop
cmp
insl
or
rorb
mov
sub
sub
pushf
mov
in
insl
cmp
pop
push
sbb
pop
sub
push
scas
fmuls
cld
sub
insl
shr
mov
out
mov
or
sub
jb
pop
pop
xchg
jmp
push
or
cmp
test
dec
movsb
sub
cmove
xlat
ret
pop
add
sub
dec
sbb
js
movsb
pop
insl
or
gs
mov
fisttps
xchg
shlb
jecxz
dec
aad
ja
add
sub
out
push
andb
bound
lret
xlat
and
stos
xor
mov
jae
outsb
or
movsl
int
mov
insb
repnz
dec
pop
loop
aad
lcall
xchg
std
fwait
sub
jp
scas
pop
insl
sbb
adc
fldcw
jp
or
in
or
into
inc
sub
sub
mov
and
aam
andl
outsl
inc
fnstenv
js
out
add
rcrl
adc
sbb
fsubrl
push
ja
stos
and
adc
mov
push
dec
outsl
add
or
loop
pop
sbb
nop
and
lea
fnstsw
call
stos
jecxz
pop
test
popf
loop
dec
loopne
jg
dec
js
test
xchg
or
xchg
sub
push
sarb
insb
iret
or
adc
ljmp
mov
out
cli
sbb
dec
ret
loopne
cmp
fisubrl
out
or
dec
sub
cmp
dec
in
daa
in
aaa
iret
pop
lret
fs
dec
sbb
sbb
shlb
stos
or
sub
imulb
popf
xchg
jg
scas
jno
mov
in
aad
js
mov
das
andb
pop
in
jb
fisubrs
out
pop
movsb
pop
cmp
mov
dec
insl
int3
movsl
ficoml
lret
adc
insb
fwait
sbb
cwtl
int
insb
jno
out
loopne
and
int
es
les
cld
leave
scas
pop
popa
lods
out
ss
inc
repz
aas
pop
loopne
das
sub
push
into
sbb
scas
addr16
mov
lods
mov
movsl
jge
push
gs
js
aas
xor
out
out
and
dec
and
or
cmp
ljmp
xor
xlat
cmc
pop
pop
and
test
cs
mov
dec
jg
push
fildl
outsb
into
out
bound
push
out
pop
ljmp
out
pop
ljmp
mov
scas
xchg
pop
cmp
outsb
repnz
sbb
cmp
addr16
jmpw
inc
sub
dec
gs
loopne
stc
arpl
js
mov
daa
add
xchg
mov
in
arpl
push
jle
cmpb
pop
and
or
clc
scas
jne
mov
xchg
outsb
arpl
bound
imul
lcall
pop
bound
cmp
jge
sub
sbb
bound
jmp
lods
cli
push
bound
call
and
jp
fisubrl
inc
in
sub
pop
jmp
mov
sbb
and
push
pop
scas
pop
scas
ljmp
in
bound
push
cmp
ljmp
fucomi
int
push
hlt
in
cli
jecxz
dec
push
movsl
sar
negl
popa
je
loop
frstor
push
in
daa
sub
fistpll
dec
stc
inc
xor
push
or
daa
bound
inc
out
cmp
fidivrl
mov
out
and
test
scas
insl
sbb
dec
cmp
aad
in
pop
and
push
jmp
sub
or
adc
dec
test
and
scas
inc
jle
cmpsb
in
stos
data16
pop
mov
out
sub
and
test
inc
ljmp
bound
ret
test
dec
das
call
cmp
out
fisttps
outsb
clc
sub
in
test
fnstcw
mov
dec
push
jbe
ret
cmc
clc
xchg
push
fsubs
loop
push
bound
sub
xchg
gs
xor
push
dec
pop
pop
pop
pop
or
and
jge
ljmp
lods
cli
addl
xor
xor
add
mov
jge
mov
inc
dec
jmp
and
push
push
sub
insl
adc
sbb
cmp
test
inc
sarl
push
sub
pop
scas
and
xchg
popf
movsl
lret
dec
out
mov
aaa
stc
pop
movsl
cmp
inc
in
lods
nop
jge
and
rcr
and
out
ljmp
out
adc
das
dec
push
sub
negb
clc
and
adc
in
ljmp
pop
mov
xor
sub
stos
mov
fs
fmuls
pop
dec
adc
cmpsl
into
dec
cmp
test
or
out
jo
inc
ljmp
das
push
or
inc
sub
inc
imul
pop
sub
add
mov
xor
or
sbb
ljmp
jmp
jbe
mov
xchg
push
loop
and
sub
call
inc
jle
cli
test
dec
sub
pop
sub
movsb
cmpsb
cmp
inc
out
cmp
dec
pop
jp
cwtl
fidivs
insl
jp
stos
loop
push
daa
mov
das
loop
sub
jmp
sbb
ljmp
negb
inc
jle
dec
pop
push
and
hlt
testl
movsl
push
das
loope
jmp
dec
movsb
aas
add
fnstenv
in
xchg
cmp
ljmp
loop
fiaddl
clc
mov
sbb
inc
fbstp
dec
xlat
stos
cs
lods
test
sahf
in
adc
sti
push
inc
sub
es
dec
mov
xchg
push
fldenv
or
mov
call
flds
sbb
addr16
pushf
xchg
cmc
jns
or
inc
stos
sub
adc
inc
mov
cmp
mov
push
ljmp
dec
addl
rorb
popf
out
out
in
dec
out
mov
jge
push
scas
cmp
fxch
insb
lret
out
jmp
jo
out
lahf
fcmovu
call
or
cmp
sahf
xchg
sub
addr16
pop
fstl
pop
mov
call
stos
daa
bound
sbb
scas
addr16
cmpsb
aas
fisubs
in
cmp
scas
xchg
scas
mov
jbe
out
or
pop
adc
sub
push
jmp
out
xchg
testb
out
movsb
in
cmp
jo
fdivrp
in
and
dec
sbb
sub
imul
sub
xchg
cs
test
mov
xchg
pusha
push
and
fs
comiss
insb
sub
in
sbb
dec
mov
jno
lea
or
imul
ficomps
push
pop
data16
mov
sbb
lret
lods
into
movq
jns
in
gs
mov
inc
in
imul
mov
jle
into
addr16
cmp
and
sub
push
stos
cmc
xchg
add
daa
gs
or
pusha
int
lods
lcall
insl
pop
dec
or
in
data16
pop
jmp
ret
das
fmull
pop
jmp
jp
into
aam
cs
push
or
dec
in
mov
in
into
movsb
inc
in
cs
cmp
push
iret
mov
or
jns
loope
jp
lds
and
ret
mov
push
das
test
clc
and
in
out
xchg
iret
dec
arpl
cmp
mov
cmp
cmp
jbe
xchg
aas
lretw
clc
shrl
sbb
add
mov
movsl
jle,pn
lods
inc
out
sub
cmpsl
lods
adc
stos
mov
orw
flds
jle
mov
loope
outsb
mov
dec
out
sub
pop
cs
jmp
subl
ljmp
lods
insl
jl
popf
call
adc
push
lods
in
pop
or
shlb
pop
imul
pop
imul
add
out
sub
int3
in
push
std
xlat
push
cmpsb
dec
insl
in
sbb
push
sub
bound
and
push
call
sbb
stos
inc
and
out
movb
arpl
jg
popf
dec
cmp
rorb
jnp
hlt
loope
pop
int3
inc
mov
or
and
in
es
daa
and
mov
outsb
outsb
das
adc
out
mov
call
imul
inc
dec
roll
adcb
dec
inc
loopne
scas
cs
jecxz
mov
call
scas
and
sub
jmp
cmovs
cmpsb
scas
sub
imull
pop
xorl
repz
sub
test
adc
jmp
ret
test
mov
dec
fmulp
dec
sub
dec
add
ret
inc
inc
imul
pop
loope
push
imul
out
push
jecxz
and
scas
das
mov
xchg
push
imul
mov
test
and
arpl
push
shlb
sbb
lret
push
jmp
mov
pop
or
or
mov
push
inc
pop
leave
push
mov
lcall
clc
loope
scas
das
xor
out
in
and
in
mov
dec
cmp
push
movsb
in
mov
push
xor
fsubrl
ljmp
cs
pop
fs
jecxz
cmp
pop
lret
dec
inc
mov
shl
mov
mov
cwtl
daa
cmp
jns
or
sub
lods
loop
outsb
bound
mov
into
push
fsubrs
push
lahf
adc
sbb
sbb
push
and
aad
and
pop
mov
ljmp
sub
scas
cmp
out
or
popa
sub
jmp
lret
sub
and
out
ljmp
pop
and
bound
lods
out
xchg
jmp
cmc
sbb
jl
lret
cs
sub
stos
insl
xor
sub
fisubrs
cmc
jmp
loop
cmp
sahf
dec
int3
xchg
push
std
stos
loope
outsb
call
inc
scas
sbb
sub
sub
fidivs
sub
pop
and
cli
cmp
out
dec
and
push
stc
push
lods
cmc
dec
in
sbb
lret
cmpl
mov
shrb
fidivrl
outsl
push
adc
or
push
pop
arpl
dec
testl
outsl
popa
sbb
shrb
lcall
cli
pop
inc
nop
fisubs
lret
pushf
pop
loop
pop
xor
into
mov
call
jp
das
mov
mov
or
rorb
dec
jge
lret
in
dec
test
and
pop
outsb
adc
pushf
sub
nop
imul
jecxz
rcrl
loope
cmpl
mov
imul
adc
jmp
stos
imul
movsb
and
xchg
js
rorb
cmp
stos
lods
cli
and
inc
in
cmp
adc
push
mov
stos
ljmp
mov
scas
int3
pop
push
loope
cmpsb
and
dec
test
imul
mov
int3
fisubl
stos
cmp
sahf
cmpsl
xlat
outsl
dec
adc
les
into
mov
mov
movd
dec
mov
push
xlat
fs
add
or
out
cmp
inc
mov
into
dec
js
cmp
push
ds
cli
js
sahf
mov
loopne
outsb
mov
sub
out
inc
scas
insl
cmp
lret
sub
and
loope
into
subb
loop,pt
call
push
inc
sub
push
rcrb
and
repnz
sub
loope
ljmp
or
sub
mov
fildl
outsl
sbb
addr16
ret
data16
stos
pushf
jmp
adc
sub
lods
dec
mov
jecxz
push
daa
shl
mov
dec
ret
iret
fnstsw
and
cmp
mov
sub
xchg
fisttpll
push
outsl
push
aam
push
jb
outsl
enter
cmp
aas
xchg
mov
gs
xor
daa
mov
ja
jmp
mov
cmp
aad
iret
fidivrs
xor
and
ret
mov
outsl
lcall
outsl
mov
pop
pop
imul
cli
inc
pop
in
subb
test
outsl
sub
add
cmp
int
adc
cmp
loopne
pop
adc
lock
rcll
outsl
dec
stc
imul
ret
sub
fisubs
lahf
test
test
adc
je
pop
inc
inc
ja
mov
out
jmp
out
jg,pn
ljmp
add
push
sub
outsl
xchg
pusha
movsl
mov
jecxz
fiadds
jp
outsl
cs
jle
test
outsl
insb
jp
adcb
negl
daa
dec
cli
test
lahf
jg
ljmp
add
add
lods
sub
mov
stos
and
add
das
push
fsts
jecxz
and
pop
cmpl
hlt
pop
inc
mov
imul
jl
iret
sub
orb
call
in
sbb
cmp
cmpsb
pop
das
out
sub
adc
xor
out
mov
ficomps
pusha
lret
shrb
shrb
mov
xchg
xchg
mov
scas
cwtl
fimuls
fxch
mov
leave
repz
cs
sub
into
cli
insl
shrl
mov
push
push
inc
xlat
adc
add
pop
and
subl
adc
insb
insl
stos
addr16
mov
loope
insl
cmp
sbb
sub
cs
push
popa
imul
cmp
push
in
dec
lds
pop
into
in
outsb
lods
enter
ds
ret
insl
pop
cs
lods
sub
push
sub
ret
sub
adc
lcall
push
addr16
outsb
ljmp
lods
adc
daa
movhps
push
in
cld
cmp
loopne
push
stc
or
in
pop
out
jmp
push
and
lcall
movl
pop
stc
stc
outsb
outsl
push
cmp
cmp
aaa
and
xchg
fiaddl
movsb
pop
insl
addr16
jg
loope
jmp
mov
fldcw
push
xchg
subb
insb
adc
in
outsb
sub
dec
jb
cmpsb
lds
push
sub
test
loop,pn
loop
pop
mov
push
lret
push
or
int3
push
aam
stos
cmp
std
sbb
call
in
and
cs
movsb
stos
das
ficoml
inc
cwtl
inc
daa
pushf
test
or
data16
scas
pop
insl
mov
out
in
hlt
fsubr
jmp
lods
or
test
out
jmp
mov
sub
sbb
pop
pop
dec
in
scas
sbb
mov
mov
dec
mov
or
dec
scas
mov
push
cmpsl
sub
addl
ljmp
insb
call
or
scas
pop
xor
lret
jne
fdivs
in
cmc
sub
inc
mov
dec
dec
sbb
out
xor
imul
insb
pop
pop
insl
stos
into
add
push
test
inc
sub
pop
mov
sahf
fptan
mov
pop
insl
shrb
dec
out
pop
outsb
test
outsb
push
jb
in
push
cmc
pop
aaa
daa
addr16
xchg
sub
out
pop
and
stos
fwait
aaa
out
call
in
inc
into
pop
pop
jns
dec
sub
jne
lea
fsubp
cltd
pop
or
scas
outsl
push
cmp
outsb
dec
sub
mov
aad
dec
mov
mov
mov
incb
scas
int3
and
int
mov
lods
jmp
imul
clc
sub
pop
xor
fimuls
shll
push
cwtl
fs
dec
lret
mov
and
in
dec
xchg
push
lret
scas
ja
or
push
stc
data16
fchs
push
sbb
aam
movsb
lods
aaa
pusha
push
pop
fsubrl
or
xor
dec
sub
jp
sbb
jge
pop
jecxz
in
daa
cmp
pop
dec
arpl
pop
outsb
mov
jmp
aad
outsb
popa
fisubrs
aaa
adc
mov
xchg
fwait
daa
push
inc
sub
push
hlt
out
test
cmpsl
int
jbe
out
scas
dec
xchg
push
cmp
in
cmpsb
repz
outsl
sar
mov
or
aas
pop
pop
xor
lea
mov
inc
outsl
or
nop
adc
jle
leave
mov
push
testl
push
mov
cmp
and
insb
pop
popa
insb
sub
push
out
in
fistl
in
cmpsl
mov
adc
movsb
dec
sbb
ljmp
dec
pushf
imul
sub
addr16
test
es
scas
inc
sub
mov
mov
in
sbb
imul
lret
stos
add
outsb
dec
dec
ficoms
cmc
push
test
pop
insl
inc
dec
scas
lods
outsb
lods
sahf
inc
call
add
insl
pop
cmpsl
leave
pop
pop
iret
mov
insl
pop
loop
mov
dec
fwait
mov
lret
dec
int3
sub
sbb
dec
and
mov
and
outsb
mov
push
in
jmp
subl
out
sbb
das
stos
fwait
jmp
int3
lcall
xor
mov
fcomps
pop
dec
js
dec
jmp
sbb
jmp
cld
idiv
leave
xlat
das
fs
dec
mov
sub
or
fs
cmp
sahf
lret
mov
xchg
daa
ja
decl
inc
popa
or
mov
daa
leave
cmpsl
sub
cmpsl
lahf
fisubrs
cmp
sub
movsl
sub
int3
fsubl
into
in
sub
mov
cmp
pop
add
in
dec
cmp
mov
adc
add
cmc
and
mov
cld
mov
or
cmp
test
lret
int3
lcall
sub
aam
pop
push
inc
lods
dec
jmp
mov
clc
mov
into
cmp
bound
push
dec
ljmp
push
sub
xor
out
or
dec
loopne,pn
sub
lods
pop
arpl
jmp
add
dec
push
lods
movsl
mov
stos
inc
in
push
insl
push
out
imul
and
insl
sub
mov
sub
imul
int
or
xor
in
and
in
xor
adc
hlt
loope
dec
test
jp
push
addr16
loope
movsb
and
push
lods
inc
scas
push
gs
mov
lods
cmpsb
imul
mov
xchg
lret
jmp
inc
dec
inc
test
mov
cmp
out
dec
ret
xlat
or
and
or
cs
mov
mov
insb
fsubr
mov
pop
in
and
das
stc
cmp
sbb
jecxz
mov
cmp
jmp
and
mov
dec
inc
add
push
mov
cmpsb
dec
call
pop
out
scas
cmp
stos
adc
outsb
jmp
inc
or
stos
sbb
lods
inc
sub
push
dec
test
mov
call
popa
cmp
int
dec
aad
into
sub
inc
cmp
out
jmp
inc
dec
jp
fsubs
addr16
test
jp
in
dec
inc
in
lcall
aam
insb
pop
sti
or
outsb
sarl
mov
outsb
push
insb
dec
loope
lods
pop
cmp
outsb
push
sti
xchg
insl
sub
fwait
insb
stos
inc
or
sbb
sbb
dec
lds
jmp
in
xchg
mov
out
fisttpl
jns
lods
insb
sbb
nop
fucom
call
inc
or
or
push
bound
push
sbb
inc
ret
sub
dec
sbb
sub
dec
movsl
shr
pop
or
nop
mov
cmp
adc
in
nop
jle
mov
test
adc
outsl
inc
xchg
sub
jb
push
lret
outsb
out
or
daa
negb
dec
inc
mull
mov
out
call
mov
sub
jmp
clc
push
mov
dec
inc
xlat
push
out
or
faddl
ljmp
inc
in
mov
es
cmp
add
cmp
in
cmc
stos
and
mov
out
daa
push
sbb
push
sub
push
in
mov
or
mov
sub
dec
lea
jp
lret
or
dec
fldcw
jmp
dec
sti
mov
sub
sti
call
test
out
dec
jnp
mov
dec
inc
sub
dec
pop
mov
push
pop
out
fimull
dec
sub
cs
popa
cmp
mov
stos
ljmp
incb
fldenv
jb
fimuls
pop
outsb
dec
inc
sub
sub
cmp
adc
sahf
cmp
push
rcll
pusha
mov
and
wbinvd
mov
push
mov
in
daa
cmp
scas
arpl
adc
int
stos
sub
test
pop
pop
outsl
mov
and
mov
push
sub
imul
ret
and
fcoms
hlt
or
xchg
int
sub
push
xchg
mov
scas
mov
ja
or
sub
mov
dec
cmp
pop
loope
dec
scas
cs
fldcw
pop
push
aad
mov
out
outsb
in
jmp
cmp
in
dec
pop
js
fs
or
hlt
lods
xchg
mov
and
dec
sub
mov
fs
imul
clc
fdivrl
arpl
jns
mov
lods
in
gs
xlat
out
push
mov
es
jno,pn
es
push
cmpsb
in
sub
fnstenv
loope
fimull
dec
sbb
imul
xor
outsl
stos
cmp
or
sub
sub
rcrb
sbb
adc
out
fldcw
sbb
or
movl
in
in
pop
inc
fisttps
out
cltd
push
mov
inc
mov
mov
or
lods
inc
cmp
int
and
cli
mov
out
cs
in
nop
fldcw
fmulp
jle
sub
sub
daa
in
sub
loop
and
into
leave
inc
add
dec
mov
outsb
out
outsb
inc
dec
mov
cmpsl
or
outsb
pushf
in
outsb
dec
outsl
push
cwtl
imul
cmp
loop
push
insb
in
into
cs
mov
outsb
cmp
ljmp
inc
push
stos
imul
outsb
pop
comiss
mov
mov
dec
outsb
les
ja
das
and
test
dec
in
inc
out
cmpsb
dec
das
dec
in
xchg
in
mov
dec
movsl
outsb
loopne
in
inc
cmpsb
scas
sub
push
out
dec
out
jns
adc
cmc
xor
xor
das
cmc
insb
stc
in
mov
out
adc
je
imul
cs
cmc
cs
dec
xchg
push
push
test
push
push
mov
insl
cmpsl
jmp
test
dec
mov
or
jmp
or
sbb
imul
call
jb
sbb
gs
push
jne
mov
ja
pushf
out
cmp
mov
arpl
and
test
pop
imul
aaa
sbb
pop
cmp
fs
imul
pop
pop
dec
sub
cmpsb
jnp
push
frstor
scas
fndisi(8087
cmc
mov
jge
push
shrl
jge
aad
insb
pop
xor
pop
push
int
in
mov
mov
push
flds
xlat
daa
ret
int
xchg
inc
out
jp
sub
clc
outsb
jecxz
mov
cmp
repnz
les
hlt
stos
out
cwtl
out
cmpsb
cs
pop
in
cwtl
push
lret
lahf
dec
xchg
arpl
xor
loopne
pop
push
pop
popa
sbb
xchg
int
data16
mov
jbe
pop
movsb
jecxz
out
dec
pop
outsb
les
mov
stos
into
sub
cmp
addr16
jns
imul
inc
dec
sub
in
mov
int
int3
xchg
add
into
mov
cmp
ljmp
imul
cmpsb
mov
in
in
pusha
pop
inc
int3
xor
ja
xchg
xchg
sbb
sahf
mov
into
or
lret
lods
mov
out
pop
and
and
loop
out
cmp
mov
sbb
ret
imul
lods
cmpsl
pushw
ss
pop
imul
sbb
mov
andl
call
push
pop
dec
cmpsl
sub
push
icebp
adc
add
pop
ds
dec
lea
lods
xchg
inc
mov
test
imul
jbe
dec
jmp
dec
fisubrs
fisubrs
in
fucomi
inc
fsubl
shll
lods
or
xchg
mov
mov
mov
mov
stos
out
sahf
sbb
mov
sub
pop
sahf
inc
test
jns
pushf
stos
and
out
or
sub
sub
push
clc
mov
pop
dec
mov
out
dec
data16
push
gs
movsl
hlt
add
arpl
cmpsb
dec
add
push
in
mov
push
dec
fsubrl
mov
sbb
mov
inc
frstor
mov
adc
stos
jle
dec
sbb
mov
sti
dec
dec
mov
and
pop
shr
and
push
pop
push
mov
dec
lret
out
and
call
and
push
jmp
push
jmp
xor
ja
jl,pt
xchg
cmpsb
mov
mov
lods
and
ret
test
scas
or
test
sub
mov
add
out
jb
mov
jl,pn
cli
sub
or
and
sbb
add
sub
test
cs
scas
mov
lods
ja
in
or
stc
sbb
sbb
mov
lcall
sbb
fisubrs
jmp
cmp
ud2
scas
sub
loopne
lret
cmpsl
orb
arpl
xlat
test
scas
push
ret
cwtl
out
out
jne
in
mov
and
stos
lret
add
jae
insl
lret
ret
mov
bound
push
imul
es
cltd
repz
gs
sub
pop
xchg
xchg
jl
stc
adc
call
or
add
dec
add
fstps
stc
stos
fs
push
data16
mov
addr16
in
cmp
push
fnstcw
in
out
mov
jl
push
xchg
sub
mov
subb
pop
je
inc
ret
pop
lea
imull
fldcw
xchg
test
cwtl
inc
mov
je
ret
mov
push
mov
mov
and
push
cmp
int3
jbe
adc
and
add
aaa
mov
in
fnstsw
sub
hlt
xchg
out
gs
into
xchg
add
das
in
adc
pop
pop
in
push
cld
xchg
orb
push
inc
mov
mov
adc
insb
popf
ja
ljmp
jmp
cltd
insl
imul
outsb
clc
cmp
insb
sub
mov
insb
cmc
clc
push
addr16
push
scas
rorl
xor
xchg
imul
or
mov
mov
test
add
test
push
in
push
ss
outsb
jp
leave
adc
loopne
and
pushf
sub
sub
dec
movsb
cmp
adc
test
data16
sub
daa
test
cmp
push
sub
movsb
dec
or
and
cs
mov
inc
movaps
stos
lods
push
scas
std
pop
dec
lahf
or
cmpsb
imul
cmp
in
out
imul
jp
xchg
sbb
insl
cs
mov
or
sub
icebp
jp
cli
outsb
push
in
clc
lret
mul
pop
jo
xchg
ja
sub
or
popf
mov
xchg
sub
call
pop
in
imul
mov
or
aas
push
push
xlat
push
cmc
scas
push
mov
imul
gs
dec
jnp
cli
push
and
sbb
loope
repnz
ljmp
lods
jb
sbb
imul
sbb
das
stos
sbb
in
hlt
in
aaa
lods
push
mov
fisubrs
pop
movsl
mov
sub
sub
cs
in
adc
mov
push
ret
mov
test
loopnew
data16
daa
sub
lret
stos
out
fabs
rolb
movsl
cs
mov
xlat
out
clc
fmulp
out
dec
das
pop
lods
cmc
pop
mov
iret
insl
and
push
shll
out
fadds
jle
xchg
mov
pop
test
mov
jns
pop
push
jmp
dec
pop
pop
in
sub
push
int3
imul
sbb
clc
call
shrb
sbb
loopne
mov
int3
movsb
outsb
sub
jmp
or
out
out
mov
enter
add
sbb
movsl
in
popa
cmp
data16
cmp
push
stos
or
sub
outsl
adc
in
mov
jp
dec
push
push
arpl
cmp
bound
lcall
sub
mov
and
in
lods
sbb
sub
cmp
outsb
cs
test
pop
cmp
mov
add
ss
movsl
fs
push
mov
orb
int3
pop
in
insb
call
into
adc
mov
dec
popa
sbb
mov
test
jge
xor
push
dec
test
addb
mov
mov
or
scas
lods
imul
xchg
outsl
push
mov
je
popf
xchg
fimuls
cmp
outsb
les
dec
fs
push
adc
sbb
sub
scas
in
sub
xor
sub
in
ljmp
in
pop
mov
cmc
jnp
imul
push
inc
sub
sub
sbb
in
push
add
sbb
dec
dec
outsb
in
outsb
adc
mov
fimull
sbb
mov
dec
imul
mov
mov
stos
insb
ljmp
shl
cmp
or
imul
in
dec
pop
inc
into
addr16
aas
mov
push
stos
stos
mov
dec
sub
clc
cmp
out
jle
push
or
mulb
ja
clc
out
mov
push
xor
imul
lea
mov
out
inc
call
cmp
loope
sti
cmpsb
cmpsl
sub
cmp
pop
cmpsb
fimuls
mov
jmp
outsb
pop
arpl
jns
add
fsubrs
cltd
daa
jbe
pop
inc
xchg
in
push
sub
pop
sarl
jp
and
in
or
out
les
ljmp
sub
cmp
mov
pop
and
sbb
dec
out
gs
or
stc
fldcw
nop
shlb
gs
inc
mov
xchg
stc
test
daa
and
and
mov
jmp
stos
fdivs
ljmp
xor
jecxz
repnz
jge
aaa
cmp
leave
jnp
sub
std
and
push
pop
test
mov
cld
mov
test
or
mov
sub
dec
leave
inc
test
out
adc
inc
inc
iret
stc
mov
sbb
add
sub
push
mov
mov
cmpsb
fabs
ret
ret
mov
imul
aaa
push
shll
mov
mov
out
outsb
sub
mov
push
sub
xchg
iret
in
into
int
lods
clc
bound
dec
sbb
stos
or
push
mov
mov
mov
fcmovbe
sub
subb
outsb
sub
call
insl
outsb
jae
gs
insb
push
stc
dec
cmc
scas
push
sub
pushf
mov
jmp
add
mov
or
adc
sub
sbb
adc
loopnew
mov
int
sbb
shrl
es
mov
ljmp
repz
pop
imul
push
stos
jmp
add
fadds
mov
inc
aam
and
clc
sub
cmp
xlat
imul
fsubrl
adc
mov
and
dec
in
dec
cmpsb
out
mov
ret
sbb
fsubrl
mov
mov
sub
mull
ds
push
xlat
dec
mov
push
out
test
mov
dec
and
mov
xor
sbb
cs
dec
mov
das
cmpsb
lds
mov
es
movsb
sub
stos
fldt
or
insb
call
dec
mov
in
sub
cmp
dec
ret
sub
adc
daa
test
sub
mov
data16
jo
sub
test
int
ret
and
insb
sbb
and
scas
outsb
jne
xlat
sbb
or
movsb
sbb
dec
mov
jmp
and
dec
loopne
push
outsb
cwtl
sub
clc
push
iret
xchg
and
les
and
popa
fidivl
es
lret
int3
push
test
call
hlt
adc
dec
lods
fisubrs
jns
pop
add
cmc
jns
xor
jne
sbb
test
cwtl
gs
sbb
stos
imul
ljmp
hlt
mov
es
adc
bound
ret
or
pop
movsl
pop
mov
jmp
nop
add
sub
cmp
pusha
fidivl
popw
std
sub
sub
fsubl
or
pop
daa
sbb
pop
ljmp
sub
lcall
shrl
jns
or
xchg
daa
and
xchg
inc
int3
inc
mov
xor
dec
mull
bound
pop
add
jmp
shrl
mov
repz
jnp
push
mov
push
int
aas
sbbb
mov
loope
sahf
fstpl
les
out
das
test
mov
cmc
pop
insl
clc
or
in
mov
pop
xor
push
addr16
mov
and
jge
pop
push
fsubrs
test
loopne
clc
mov
aam
insb
dec
in
lods
in
pop
and
jmp
jb
std
push
movsb
mov
cmp
ss
sti
das
fisttps
pop
aaa
pop
cs
push
jnp
push
imul
out
jmp
movsb
in
fadd
out
jge
xchg
in
stc
jne
push
loope
fucomi
push
lock
sbb
imul
fcomps
pop
pop
fcoms
in
int3
jle
pop
mov
xchg
lods
stos
sub
sub
inc
mov
dec
imul
jle
and
lret
imul
pop
sub
push
and
out
jnp
dec
push
vmread
jl
cmp
fcompl
pushf
ds
subb
or
mov
jmp
sub
imul
aaa
xor
outsb
loopne
jnp
mov
mov
call
fs
sbb
in
jmp
xchg
fwait
or
and
icebp
aaa
fs
and
popa
pop
gs
ds
jmp
xchg
imul
sub
sbb
aaa
dec
xchg
gs
mov
idiv
cmpsb
popa
sub
and
push
fs
push
loope
xor
in
sub
push
lcall
lret
add
fsubs
cmp
out
or
dec
or
xchg
nopl
fimull
in
cld
faddl
ljmp
pop
pop
mov
out
ret
lods
scas
outsb
ds
insl
cwtl
in
in
sti
xchg
cmpsb
pop
popf
xchg
ds
and
dec
aaa
and
out
pushf
out
scas
sub
cmpsl
dec
inc
out
inc
and
jecxz
aas
scas
jge
cltd
in
cmp
jle
mov
or
movsl
cmp
shlb
and
insb
in
std
cmpsb
in
adc
xor
aas
sahf
cs
lods
test
mov
insl
add
insl
cmp
push
data16
or
fmull
aas
sub
ja
out
ss
insl
jmp
insb
outsb
sbb
das
in
lret
inc
pop
in
lods
clc
and
xchg
jae
push
sub
fdivrl
ja
cmpsl
lret
push
es
dec
xor
mov
scas
sub
add
mov
and
xor
out
leave
mulb
push
out
mov
std
pop
mov
es
mov
aas
in
jge
sub
cmp
loope
or
popa
call
push
jecxz
ljmp
dec
and
inc
arpl
pop
mov
dec
mov
dec
pop
jbe
test
push
scas
in
lret
push
out
and
dec
push
imul
pop
popf
mul
fisttpll
jnp
inc
gs
mov
lret
scas
lea
call
insl
pop
inc
push
popa
lret
ljmp
int3
push
push
cmpsb
sbb
sub
pushf
dec
mov
jmp
inc
ficomps
ficomps
inc
in
int3
pop
pusha
scas
addr16
stc
sbb
push
repnz
pusha
sti
sub
out
into
cmp
in
int
addr16
push
dec
addr16
pop
cmp
in
fsubs
int3
push
bound
in
ja
fisubl
dec
sub
mov
in
dec
nop
pop
stos
cmp
dec
out
xor
imul
out
pop
and
fs
push
in
imul
sub
dec
fcmovnb
outsb
mov
int
ljmp
add
es
ffree
ljmp
fs
insb
cmpsl
sahf
pop
cld
ljmp
jo
jl
es
movsl
cs
xlat
test
sbb
mov
dec
pop
call
mov
xchg
sub
sub
iret
mov
jmp
or
jb
push
inc
mov
dec
jmp
mov
mov
loope
xor
fistpll
xchg
dec
outsb
xchg
movsl
sub
xlat
mov
arpl
cmp
shll
push
lds
aam
fisubs
xchg
and
jl
push
xchg
iret
sti
dec
fwait
imul
fildl
aaa
insl
inc
lret
mull
lahf
dec
jge
inc
test
je
daa
inc
jo
outsl
xchg
cmpsb
cltd
lret
xchg
jle
pop
aas
fwait
sub
cs
and
outsl
fisttpl
lcall
and
cwtl
aam
mov
and
into
movsl
outsl
shl
iret
or
nop
imul
js
pop
mov
popa
outsl
pusha
adc
sbb
outsl
adc
sub
add
mov
nop
jo
jl
pop
movsb
enter
in
mov
sti
mov
mov
into
sub
shll
and
pop
xchg
cltd
sbb
mov
addr16
rorl
jo
push
out
das
pop
and
xchg
sbbb
and
movsb
sub
cmpsl
outsl
jg
fimuls
jno
push
add
insb
jp
rcrl
insb
jnp
leave
aad
sbb
mov
xchg
sbb
ss
lods
xor
mov
jecxz
and
aam
cmpl
add
sub
pop
aad
sbb
or
insb
mov
xchg
or
xchg
xchg
adc
in
fisubrl
adc
ss
mov
aaa
inc
cmp
jp
adc
shlb
outsl
xchg
adc
stc
fs
pop
sti
push
pop
addr16
scas
and
xor
mov
push
repnz
jne
outsl
lds
rol
lcall
pop
jo
dec
daa
pop
mov
mov
dec
inc
loope
adcb
cli
ja
cmp
and
js
adc
push
mov
cmp
pop
pop
add
pop
test
repnz
jbe
cwtl
jmp
popa
scas
out
xchg
cmp
fistps
pop
inc
icebp
fisubrs
movsb
arpl
push
add
lods
push
cmp
outsl
out
pop
js
fistpl
mov
ljmp
xchg
push
jge
int3
outsl
push
ficoml
push
ljmp
and
popa
lock
or
or
arpl
adc
movsb
outsl
insl
fildl
inc
out
adc
out
push
pop
ljmp
and
stos
loopne
into
int
pop
xor
cwtl
imul
pop
mov
cs
push
sbb
arpl
and
pop
fs
test
cmp
fildll
adc
enter
push
movsl
or
sub
stos
in
mulb
stos
jp
mov
clc
jns
lods
and
push
movsb
jne
jmp
fimuls
inc
call
push
addr16
iret
mov
pop
jo
sub
pop
sbb
shl
aas
std
in
and
scas
xchg
lea
leave
out
mov
addr16
add
inc
mov
adc
dec
mov
adc
shl
adc
loope
mov
mov
pop
xchg
mov
flds
inc
xchg
push
fisttpll
pop
je
jecxz
push
push
pusha
ret
sbb
inc
adc
orl
in
in
in
or
inc
jecxz
jbe
cmp
out
into
adc
loopne
std
shrl
ficomps
jo
add
push
push
and
push
je
in
outsl
insb
xchg
mov
pop
add
leave
cs
push
incl
out
mov
xchg
ret
push
cmp
in
fdivl
out
insl
sahf
fimuls
addr16
jg
js
pop
lods
lcall
fists
pop
sahf
mov
dec
aaa
dec
pop
sub
mov
setge
pusha
push
pushl
push
ds
aas
dec
sbb
rcl
cmpl
scas
cmp
repz
call
daa
push
mov
pop
mov
fistpl
pop
adc
xchg
sahf
insl
xor
inc
xor
add
xchg
pop
jg
inc
imul
hlt
inc
movsl
das
and
push
push
jmp
jg
lret
or
bound
pop
les
repnz
scas
test
nop
lea
xchg
add
xor
jb
test
fsubp
sub
dec
call
xor
lods
mov
loopne
cmp
pop
pusha
repnz
outsl
mov
add
and
rclb
in
clc
mov
dec
stos
ds
call
push
xchg
loope
pop
mov
and
imul
repz
pop
pop
out
aas
fimull
pop
mov
insl
xchg
mov
jns
cld
or
iret
sbb
xchg
adc
inc
lahf
sbb
mov
pop
scas
pop
push
pop
scas
dec
addr16
xchg
leave
clc
mov
jg
fadds
xor
pop
test
int
mov
sti
or
or
dec
outsb
pop
mov
push
or
insb
adc
loop
and
sub
xor
mov
pop
sub
pop
aas
jno
pop
dec
dec
negb
jle
into
int
jno
pop
pusha
movsb
jle
lcall
jnp
inc
pusha
ds
pushf
pop
and
or
mov
std
outsb
sbb
xchg
scas
push
ja
jmp
pop
jnp
pusha
inc
scas
mov
fisubs
sbb
es
jno
xor
or
pop
inc
jp
fstpt
mov
insl
jp
das
jbe
out
addr16
lret
aad
ficomps
pop
add
addr16
fldenv
test
mov
int
sub
fisubs
push
lret
repnz
loope
mov
in
ds
int3
aas
push
daa
ds
cld
lds
push
loop
adc
in
dec
fstps
or
fs
repz
dec
push
dec
aas
out
scas
sbb
cs
scas
lods
ljmp
jo
cmp
pop
push
inc
pop
ss
in
scas
ds
js
popf
sbb
andl
sub
sub
addl
xor
sub
fadds
dec
sahf
and
popf
pop
ljmp
dec
xchg
daa
push
mov
pop
sub
adc
sub
dec
jle
cmp
mov
inc
loopne
insl
xorl
fcoms
imulb
incb
out
sub
loop
pusha
xchg
rorb
shl
mov
das
mov
mov
dec
movsl
stos
cli
sahf
addr16
xchg
add
cmp
fstpl
push
pop
push
and
outsb
shr
stos
jbe
and
jge
out
stos
outsl
inc
popl
xorb
adc
stos
lods
and
cmpsb
es
push
lock
jmp
pop
pop
dec
pop
mull
push
cmp
mov
popa
push
sub
cmp
dec
pop
push
pop
cmp
jl
sbb
loop
xor
repz
das
into
adc
sub
push
loop
test
xchg
lret
mov
and
cli
jne
dec
loopne
mov
sub
sub
test
es
das
adc
mov
sahf
cmp
dec
int3
popa
pop
cmp
dec
mov
mov
mov
call
pop
call
sub
daa
sub
scas
popa
repz
or
insl
scas
cmp
lock
call
outsb
call
jle
out
pop
stos
jg
outsb
insb
scas
loop
stc
xchg
and
inc
pop
aad
cmp
dec
out
fidivl
xor
loop
mov
jle
push
and
das
std
movsl
dec
sbb
popf
pop
dec
inc
lods
cmp
test
aas
scas
jl
dec
mov
and
je
aam
xchg
das
mov
into
push
pop
sbb
int3
insb
leave
inc
out
dec
insb
lods
adc
paddw
std
cmovbe
pop
out
scas
pop
daa
or
into
insb
xchg
movsl
sub
imull
fstl
inc
dec
cmpsb
add
sbb
popa
call
std
push
les
andb
jae
ret
adc
jb
div
pop
ret
outsb
aam
rolb
lret
push
xor
lcall
mov
adc
shlb
jmp
std
lahf
sub
aad
lret
pop
dec
std
push
lret
loope
jge
pushf
mov
data16
outsl
das
addr16
imul
push
jns
xchg
mov
fsub
fsubrs
mov
and
jae
int3
in
add
dec
call
loopne
xor
add
and
jge
mov
add
movsb
lods
dec
dec
adc
lea
cmp
push
lods
dec
ds
dec
mov
xorb
xchg
inc
aaa
pop
jo
jle,pn
mov
jns
push
cmp
push
push
test
out
cmpsl
sub
pushf
scas
inc
out
stos
repz
add
repnz
add
adc
mov
dec
pop
xor
xchg
and
pop
pop
mov
lea
or
cmc
mov
push
pop
xor
pop
lret
sti
stc
add
sub
dec
pop
ljmp
sysexit
rolb
test
movsl
xor
mov
push
sbb
mov
pop
xchg
in
faddl
out
andl
jbe
stc
mov
dec
imul
mov
mov
lret
dec
idivb
pop
sbb
gs
cmp
sub
xor
lcall
mov
adc
ja
mov
cs
mov
loope
jnp
lret
fisubl
pop
dec
mov
pop
sub
aas
outsb
sarb
or
das
fistpl
out
cmp
scas
into
jl
mov
dec
add
out
pop
mov
xlat
push
fs
insb
cs
dec
scas
jle
cmpsl
in
xor
sbb
aas
fsubrs
fisubs
imul
sub
ja
loope
mov
shll
inc
movsb
jl
pop
int3
pop
push
popf
fisttps
and
fsubp
xchg
cmp
leave
gs
add
fwait
xchg
pop
jle
pop
arpl
pop
pop
movq
pop
pop
decb
cs
outsl
push
push
push
out
cmp
push
dec
push
pusha
sub
inc
push
outsl
jae
int
or
int3
sub
or
jmp
fcmovne
cmp
sbb
cli
ljmp
or
jmp
sub
or
call
outsl
sbb
mul
xlat
aaa
daa
outsl
pop
pop
mul
movb
es
push
cmc
in
lds
xor
in
les
xor
adc
repz
outsl
ret
inc
xor
adc
repnz
rol
inc
xor
adc
icebp
outsl
loope
rcll
and
outsl
add
loopne
rclb
pop
and
add
out
das
jb
loopne
sub
jbe
push
pop
pop
add
icebp
sbb
or
pop
pop
bound
icebp
outsl
cmovle
pop
pop
insl
ds
cs
cs
shrl
das
cmp
into
push
add
sub
sbb
sarl
call
add
insl
add
xchg
mov
mov
arpl
mov
cltd
jno
mov
pop
inc
outsl
roll
outsl
add
fdivrl
subb
jp
dec
das
ljmp
pop
data16
cmpsb
jl
popf
pusha
add
stc
xchg
pop
cli
outsl
sub
xchg
cmpsl
mov
and
test
pop
jl
cli
dec
cwtl
sub
fistl
adc
scas
pop
mov
in
fsub
mov
out
pop
sbb
data16
ret
pusha
add
mov
shrb
subl
mov
addr16
or
inc
xchg
test
adc
pop
inc
ljmp
popa
mov
mov
das
mov
scas
subb
xor
inc
sub
rcrb
add
xor
adc
cmc
nop
mov
aam
or
sarb
mov
xlat
lcall
adc
and
inc
mov
cli
dec
adc
gs
mov
outsl
popa
aaa
mov
cs
jle
inc
mov
xchg
pop
pusha
mov
outsl
fldln2
gs
popf
into
arpl
push
in
aam
repnz
xchg
push
imul
push
push
outsl
add
dec
lods
pop
pop
pop
outsl
in
mov
stos
loopne
dec
jp
scas
out
loopnew
inc
mov
inc
or
mov
outsl
lahf
jp
adcl
movsb
jnp
xchg
outsl
add
xor
cs
pop
dec
push
inc
outsl
mov
or
or
fldenv
sbb
mov
xchg
mov
outsl
mov
xor
or
andb
sbb
inc
or
outsl
xchg
popf
dec
js
outsl
nopl
xchg
adc
jns
xchg
outsl
jp
int3
lcall
pop
nop
adc
in
dec
lock
das
dec
fwait
adc
mov
aad
stos
arpl
push
add
popf
mov
scas
imul
xchg
pop
lret
push
mov
mov
xchg
sub
rcll
mov
push
cli
mov
xlat
add
jns
cmpsb
ds
ja
or
mov
insl
dec
sahf
outsl
out
mov
pop
push
inc
jle
outsb
xchg
adc
rorb
fcoms
outsl
out
cmpsl
test
mov
fistl
insl
cltd
in
cmpb
push
loope
ljmp
xchg
outsb
cmpsl
outsl
aas
popa
xchg
dec
mov
leave
or
xchg
ja
test
mov
push
xlat
and
lock
nop
leave
and
cmpsb
pop
fs
xor
push
and
bound
leave
jne
fdivrs
pop
add
dec
out
cltd
mov
loopne
call
in
add
movsb
outsl
mov
sub
outsl
fisubl
xchg
mov
inc
pop
mov
mov
cli
cmp
addr16
jl
cwtl
or
loop
adc
or
ficompl
test
rcrl
lods
outsl
dec
sub
mov
das
mov
mov
out
sub
mov
xor
push
jle
xor
repz
mov
outsl
mov
mov
pop
stos
stc
dec
mov
test
outsl
jne
pop
adc
scas
add
inc
vmwrite
fmulp
std
xor
jle
and
jge
popf
testl
out
movsb
and
rcrb
outsl
xchg
and
ds
popf
jbe
frstor
sub
and
ja
or
ljmp
out
js
sbb
sbb
in
inc
data16
add
pop
stos
icebp
or
mov
das
stc
outsl
sub
fisubrs
xlat
cmp
ja
push
push
out
lahf
sbb
or
mov
outsl
xorb
in
sar
jns
pushf
jo
nop
fwait
push
stos
lods
adc
dec
cmp
pop
ret
in
movsl
cmp
repnz
notl
adcb
mov
outsl
cld
mov
test
mov
test
cwtl
js
jno
mov
mov
mov
sbb
std
bndldx
scas
sbb
jns
out
xchg
outsl
test
and
push
push
cwtl
andb
arpl
pop
sbb
lods
xchg
and
xor
jecxz
ljmp
syscall
jle
js
outsl
xor
aaa
popa
mov
inc
mov
inc
nop
incb
popa
lods
adc
xlat
inc
inc
inc
loopne
sbb
lods
lock
mov
cli
add
out
aas
inc
repz
out
addr16
jns
pusha
push
outsl
pop
mov
jp
outsl
inc
popf
idivl
jge
pop
fdivrp
xor
popa
cmpsb
inc
dec
push
cmpsb
movsl
outsl
gs
scas
push
dec
inc
mov
movb
pop
and
xchg
mov
mov
out
mov
fbld
pop
jmp
inc
int3
aad
mov
lds
push
int
outsl
ljmp
scas
pop
add
bound
mov
mov
outsl
ss
mov
dec
sub
xchg
imul
dec
xchg
cli
scas
mul
mov
stos
add
sub
es
cmpb
pop
jne
fsubr
pop
hlt
jp
push
outsl
roll
stos
outsl
sti
inc
mov
push
adc
xchg
subb
outsl
pop
lds
fxch
pusha
shrb
shrb
xchg
pushf
push
outsl
mov
add
jns
mov
shrl
xchg
fnstcw
std
cmp
add
xor
cmp
dec
loope
outsl
push
mov
mov
fcmovu
jmp
jle
cmp
out
pop
insb
xor
outsl
call
pop
sub
mov
dec
or
mov
outsl
cmp
inc
outsb
sub
arpl
inc
lret
jecxz
mov
jnp
cmpsl
out
jns
push
mov
mov
adc
sbb
or
cltd
test
in
and
mov
or
inc
mov
adc
addr16
movsw
fs
jae
jnp
fwait
mov
mov
scas
out
adc
jo
outsl
bound
or
cmp
mov
mov
hlt
int3
imul
in
insb
jp
and
test
jo
test
add
shlb
enter
sbb
push
xor
push
cli
fsubrl
xchg
dec
or
mov
outsl
paddsb
das
mov
and
mov
scas
subb
sub
cmp
xor
dec
inc
mov
shlb
jne
outsl
lret
jo
ja
outsl
aad
daa
cmpsb
inc
shll
xchg
out
aam
enter
add
dec
test
mov
outsl
push
loop
jno
cmp
cmp
int3
fisttpl
cltd
shlb
sbb
adc
rcrb
fldcw
aad
imul
dec
or
pop
jnp
rcr
jecxz
insl
mov
adcb
dec
cs
rcll
arpl
into
pop
jle
js
and
jge
dec
out
push
outsb
push
mov
xchg
mov
pop
lods
mul
into
pop
pop
das
insl
mov
scas
pop
push
cmp
insl
imul
addr16
popw
and
bound
jl
xchg
insl
push
call
mov
mov
mov
inc
mov
jg
scas
lret
pop
out
jnp
pop
jecxz
push
jg
and
fdivrs
insb
dec
pop
lods
das
ljmp
mov
fldt
iret
sbb
pop
fmull
into
insb
jo
daa
xchg
stos
sub
fdivp
loopne
or
loop
mov
pop
sbbl
cmp
iret
pop
or
cli
pop
mov
subb
mov
pop
jno
in
xor
inc
dec
dec
dec
lret
imull
mov
into
and
stos
cmp
cwtl
dec
cs
iret
sbb
fcomps
jnp,pt
and
aas
pop
dec
mov
das
mov
pop
scas
aas
scas
fwait
pop
pop
scas
repz
inc
das
bound
sub
dec
mov
push
iret
pop
lretw
inc
lahf
out
mov
pop
mov
loopne
dec
fucomp
into
ja
jae
stos
sub
pop
sti
sub
iret
outsb
ret
dec
or
xor
xchg
mov
into
data16
fimuls
out
cs
dec
cmp
int3
fimuls
add
ljmp
popa
adc
dec
lea
and
cmc
inc
and
fidivrs
mov
insl
ret
xor
ds
push
lods
add
mov
mov
push
out
push
daa
push
test
push
out
daa
dec
push
outsb
fs
loop
pop
std
jle
std
lcall
mov
dec
fldl2e
lods
cmp
inc
fnstsw
sub
fsqrt
testb
mov
sub
jmp
mulb
mov
sbb
out
loopne
out
pop
sub
popf
mov
sub
ljmp
lea
into
fisttpll
pop
jge
jge
inc
test
arpl
fdivrp
out
pop
mov
jo
xor
ds
lcall
dec
sti
call
or
cmp
dec
das
sub
jno
dec
mull
push
das
data16
push
sbb
pop
out
add
jmp
and
inc
aam
add
lods
mov
mov
loope
xchg
rcrb
ljmp
rolb
cmpsb
scas
push
out
daa
pop
out
mov
mov
fstl
pop
aad
push
jge
rclb
out
xchg
or
or
sub
adc
rcll
cmp
and
sub
sbb
lahf
outsl
imul
sbb
mov
inc
cli
popf
jno
js
and
imul
and
mov
sub
cmp
cmp
pusha
loop
pop
bsr
cmp
ficoms
add
adcb
fsubrp
int3
jle
out
inc
inc
outsb
jle
cmp
adc
out
scas
aas
sub
sub
lods
out
scas
xchg
or
daa
push
stos
mov
lahf
and
mov
push
pushf
sub
pop
mov
in
sub
dec
into
sub
scas
fs
sbb
repz
jno
ds
push
inc
scas
jl
pop
unpckhps
insb
sti
inc
sub
cmp
mov
fmul
subl
daa
js
ljmp
jnp
and
dec
popa
cld
das
pxor
pop
leave
lock
xchg
out
xor
jbe
inc
pop
cmp
lds
sub
jmp
xlat
fistpll
jmp
stc
xchg
and
dec
fldcw
sarb
pusha
pop
or
pop
imul
push
jl
pop
cld
inc
popf
cmpsl
push
mov
jae
lahf
push
je
out
adc
outsl
xchg
mov
jae
dec
or
daa
arpl
adcl
dec
and
or
inc
sub
pop
mov
cmp
add
jno
push
push
je
imul
pusha
ja
fsts
and
scas
outsl
sub
fwait
sbb
sub
cli
outsl
xchg
mov
shrl
faddl
loope
mov
outsl
lods
pop
test
fisubrl
outsl
jge
sbb
mov
mov
scas
imul
cmp
test
dec
mov
aaa
sbb
add
sti
movzwl
or
xor
das
jo
xchg
fwait
movsb
sbbb
movsl
outsl
mov
out
add
notb
repnz
inc
jge
loopne
outsl
add
enter
outsl
aad
jae
and
nop
and
inc
test
mov
inc
jmp
jno
fldcw
mov
aad
movsl
push
xor
int
lds
jne
push
jp
jl
outsl
adc
jge
mov
shlb
sub
data16
inc
adc
add
fisubrl
pop
aad
jae
push
and
sbb
cs
leave
pop
mov
mov
xor
inc
xor
bound
adc
mov
mov
stos
adc
mov
pushf
xor
mov
mov
repz
imul
jo
jl
xchg
pop
mov
adc
loop
cli
lea
mov
rclb
sbb
cmpsb
pop
push
in
hlt
scas
pop
stc
pop
test
cmc
mov
outsl
mov
fadds
and
outsl
xchg
stc
dec
test
ss
xchg
xchg
ret
pop
mov
cmpsl
xor
in
fstps
out
orb
aam
stc
stos
repz
pop
fisubrs
js
mov
mov
nop
in
arpl
xor
mov
popa
jecxz
dec
cltd
test
stos
and
add
jge
out
and
pop
es
cmp
out
or
sub
xor
fidivrs
rcll
fdivr
int3
sub
pop
dec
mov
sbb
insb
int3
popl
mov
in
xchg
sub
mov
pop
inc
cmp
mov
insl
movsl
into
pushf
movsl
jbe
jle
scas
fs
fimuls
sahf
loope
lahf
mov
rcrb
adc
dec
es
mov
fwait
es
sbb
lods
out
hlt
shlb
out
jge
push
sbb
sub
call
das
cmpsb
inc
sub
mov
bswap
addr16
scas
jecxz
jecxz
and
test
cs
inc
pop
adc
sbb
les
in
int
lret
out
xchg
mov
pop
insb
outsb
dec
and
jns
xchg
cmpsb
fcoml
imul
mov
jns
jns
das
fildll
outsl
loope
inc
push
scas
jl
jmp
mov
mov
jns
pop
jnp
js
into
sub
pop
mov
and
insl
aas
dec
in
test
dec
xchg
mov
sub
stos
cmp
ret
mov
sub
push
mov
push
sbb
fdivrp
mov
das
cld
dec
outsb
mov
sbb
or
shld
xor
push
daa
pop
pop
sub
sbb
jecxz
add
dec
dec
sbb
sub
or
int
int
xchg
bound
adc
push
add
daa
pop
iret
rcrl
outsl
adc
sub
mov
mov
adc
jb
shl
push
lret
loopne
dec
xlat
loop
pusha
adc
jns
mov
jae
aas
repz
hlt
mov
add
gs
cmc
push
sbb
mov
cmpsb
imul
push
movsb
in
sbb
fsubrl
cmpsb
movsl
aaa
insb
xchg
int
imul
insb
dec
sbb
mov
jg
mov
insb
push
lea
and
mov
pop
insb
lds
mov
scas
xor
ss
test
add
dec
jmp
jae
ljmp
push
jle
cmp
inc
cmp
sbb
jmp
cs
das
iret
xor
leave
inc
data16
dec
addr16
rorb
and
outsl
loope
inc
je,pn
cli
fstpl
mov
lods
sub
lret
push
mov
pop
jle
mov
in
pop
in
jle
das
das
mov
packsswb
or
lods
inc
pop
icebp
push
xchg
jmp
push
dec
inc
mov
pop
mov
mov
sub
dec
jp
loop
sub
sbb
pop
jge
loop
pop
cmc
test
mov
sub
pop
pop
das
out
mov
jne
pushf
dec
mov
js
stos
ljmp
aam
inc
inc
call
adc
dec
loop
pop
repz
orl
mov
das
jbe
mov
push
mov
xor
push
push
scas
fsubs
in
and
push
out
sub
in
and
sub
lahf
das
aam
mov
clc
cltd
push
test
js
xchg
sub
rcrl
adc
aas
sbb
arpl
push
mov
outsb
push
and
repz
inc
pop
pop
adc
scas
mov
lahf
shlb
out
lods
scas
shlb
outsb
repnz
add
movsb
push
push
pop
pop
fidivrs
fdivr
fistpl
mov
xchg
pop
scas
cmp
sbbb
cli
int3
sbb
andl
mov
out
add
sbb
dec
out
fsubrl
jecxz
xchg
xorl
rcl
xor
outsb
fsubrl
cmp
sub
mov
push
loop
cli
pusha
out
sub
int3
inc
or
test
cmp
imulb
sbb
mov
lods
rclb
xor
icebp
ljmp
inc
call
dec
sub
outsb
scas
and
inc
xchg
cmpsl
mov
mov
sub
dec
sub
ret
mov
lcall
pop
lea
inc
xorb
pop
in
jno
pop
cmp
fsubrs
imul
cli
add
jp
jbe
and
pop
dec
or
cld
pop
xlat
mov
xchg
pop
cli
sbb
xlat
pop
pop
out
inc
fisttpll
push
out
pop
dec
pop
mov
and
loope
call
mov
cmp
xor
or
push
sti
push
test
scas
mov
adcl
fldcw
ret
popa
sti
pop
pop
jo
jp
nop
xor
and
sbb
rcr
mov
adc
lret
xchg
fisttpll
inc
xor
lods
jne
cltd
shr
repz
mov
pushf
mov
xor
mov
jnp
ds
outsb
ret
shlb
mov
in
add
push
sbb
mov
jg
cld
pushf
dec
out
div
push
movsl
fiadds
sbb
int
or
add
sub
pop
sub
cmp
ss
nop
sbb
jnp
ss
nop
xchg
xchg
or
ss
mov
pop
ss
fildll
or
cmp
ss
mov
sbb
out
or
and
xor
sub
jg
es
and
outsb
mov
pop
dec
or
inc
xchg
mov
push
add
das
xor
push
push
in
ja
out
sahf
out
das
push
aas
lret
ret
dec
fiadds
lahf
mov
sub
pop
sub
fnstcw
dec
fdivr
stc
fs
das
testb
ds
xchg
les
aas
mov
sbb
leave
push
xchg
outsl
daa
out
pop
call
and
movsb
mov
ret
mov
flds
or
jle
movb
rolb
out
dec
jle
mov
mov
leave
adc
dec
scas
mov
mov
inc
les
ret
push
movsl
cltd
cs
push
or
dec
sub
ljmp
or
jmp
add
cmovl
das
sub
sbb
or
sti
inc
pop
fistpl
sub
adc
ror
mov
push
lret
iret
leave
sbb
cmp
cs
icebp
hlt
in
pop
outsb
lea
inc
test
sbb
stos
into
add
xchg
in
pushf
push
and
shl
leave
scas
sbb
xchg
icebp
mov
pop
pop
mov
pop
out
or
push
sti
ja
pop
pop
das
invd
pop
jne
mov
sbb
inc
leave
stos
adc
mov
leave
cmpsl
inc
ljmp
inc
sbb
mov
retw
out
vpmacssdd
cmpsl
arpl
and
rolb
out
in
stc
mov
cmp
shl
inc
sub
inc
ja
testb
dec
movsl
push
insb
cli
mov
fisubrs
fisubrl
idivb
add
inc
es
adc
stos
mov
sbb
dec
jno
popf
jmp
pop
imul
into
fdivl
mov
mov
dec
jmp
jp
inc
dec
cs
xchg
or
inc
dec
jb
lods
jae
sub
scas
cmp
jb
fmulp
das
xchg
add
cmp
out
test
xor
aad
bound
sbb
es
daa
insb
dec
sahf
pop
es
insb
sbb
sbbb
push
outsb
into
jns
ljmp
pop
leave
inc
xor
jle
stc
dec
sahf
mov
stos
jle
inc
loop
cmp
mov
shl
jle
mov
js
lret
jle
jle
fidivs
ljmp
jbe
outsb
mov
mov
or
and
cmc
inc
or
lret
outsl
mov
ja
mov
icebp
inc
outsl
adc
and
outsl
mov
pop
dec
ret
in
fidivrl
sub
mov
lret
out
dec
call
cld
je
xchg
in
cmpsl
fcoms
inc
push
aas
sub
outsb
popa
cmc
lret
mov
cli
outsl
shll
in
push
jns
sahf
jmp
cmp
mov
outsl
dec
cld
cmp
and
or
cwtl
xlat
push
outsl
mov
xor
test
lret
rep
and
ret
arpl
pop
mov
arpl
sub
xlat
test
ja
imul
bound
sub
jle
pop
out
imul
add
sub
or
add
cmp
and
inc
ljmp
outsl
mov
add
fbld
add
mov
cmpsl
cmp
add
aaa
adcb
push
in
lock
mov
icebp
sub
mov
outsl
loope
inc
or
jl
ljmp
aad
lods
adcb
std
cmp
outsl
xor
out
or
push
pop
push
nop
leave
jb
add
cmp
inc
shl
outsl
daa
mov
mov
outsl
ret
test
fildll
mov
out
mov
mov
add
std
or
sub
pop
mov
neg
cmc
mov
loopne
loop
test
push
push
add
push
xchg
inc
insb
mov
outsl
mov
jecxz
scas
scas
ja
pusha
aaa
or
cwtl
mov
pop
jb
sub
into
rolb
dec
sbb
add
adc
ja
dec
outsl
push
test
add
aaa
std
fistps
aas
and
int
xchg
jnp
jno
mov
push
in
icebp
sbb
sti
inc
jo
mov
dec
cltd
xorl
test
sub
mov
lods
outsl
and
cs
sarl
imulb
fsubrl
xchg
xor
bound
out
inc
and
insb
and
pop
pop
pushl
mov
xor
mov
jecxz
in
aad
inc
negl
lret
cmpsl
mov
jge
fcompl
stos
push
inc
jae
outsl
jmp
cmp
out
xchg
pop
xor
nop
jl
test
in
testb
fs
inc
ljmp
insb
outsl
lock
frstor
xor
pop
je
cli
in
in
jno
out
sub
arpl
subb
sub
into
mov
mov
sub
adc
xor
mov
jl
xor
cs
xor
push
outsl
xchg
aas
inc
lret
jp
fwait
jl
add
js
call
pop
out
cmp
lds
pop
outsl
ret
pushf
lock
cwtl
adc
notb
xchg
mov
imul
outsl
lahf
mov
xor
outsl
push
mov
xorl
out
mov
push
xorb
inc
fsubrs
jb
data16
mov
pop
scas
in
sti
and
or
xor
inc
sbb
dec
adc
and
arpl
jle
outsl
fistl
outsb
rol
stc
pop
mov
and
pushf
fsubrl
push
cmpsb
sbb
mov
inc
imul
add
jnp
mov
sti
out
loope
ljmp
adc
fcoms
jnp
mov
outsl
mov
fisubrs
sub
inc
sub
xor
outsl
mov
fsubs
jle
inc
sub
xchg
arpl
pop
dec
inc
into
gs
mov
adc
das
inc
add
sbb
popa
push
das
mov
out
jle
rol
loop
out
jle
sub
mov
mov
sahf
jo
push
mov
sbb
out
push
insl
sahf
mov
xor
sbb
out
mov
shr
pop
add
out
insl
sahf
sub
gs
jecxz
xchg
lock
dec
sbb
lret
jecxz
and
sbb
loop
dec
das
lods
push
mov
repz
or
sub
dec
pop
es
sbb
out
in
mov
fmuls
push
filds
in
decb
push
insl
push
push
sahf
mov
in
scas
jl
fbstp
jo
das
jmp
ret
mov
stos
jl
dec
cmpl
lahf
push
insl
dec
loopne
mov
pop
sbb
jo
cmc
stos
mov
mov
cmpsl
bound
add
and
inc
jns
push
ja
ljmp
iret
sbb
pop
mov
imul
loopne
aas
aad
lret
in
das
xchg
nop
and
das
pop
lar
leave
sti
cmpsb
add
imul
mov
cmpsb
inc
outsb
aas
insb
loop
dec
sti
cmpsb
push
imul
out
arpl
jo
cmpsb
jle
sub
mov
cmpsb
icebp
out
sub
psubw
out
pop
mov
icebp
inc
pop
pop
out
loopne
mov
leave
pushf
push
mov
das
or
and
push
std
mov
pop
aas
sahf
mov
sahf
add
outsl
cltd
jno
hlt
lods
xchg
subb
pop
jb
jge
dec
notl
test
lcall
inc
stos
jno
shrl
test
sub
dec
and
insb
xchg
mov
inc
cmp
call
nop
inc
popf
sub
sub
fdivrs
test
clc
aaa
sub
lret
addb
push
xchg
shrl
push
inc
negl
inc
sti
fwait
mov
sub
in
popf
imul
or
fldz
mov
movsl
mov
imulb
dec
lret
and
je
fldcw
pusha
and
clc
dec
pop
fcmovnb
stos
mov
ja
mov
fisubs
sub
pop
or
out
fyl2x
mov
mov
push
mov
stos
das
fistpll
cmpsb
push
insl
adc
into
mov
inc
lret
loop
mov
dec
ret
pop
pop
dec
mov
insb
int3
jecxz
nop
add
cmpsl
clc
sbb
xchg
popf
pop
cmpsl
cli
mov
repnz
orl
adc
cs
jl
xorl
mov
or
xchg
push
popf
adc
arpl
cmpsb
xchg
dec
add
lock
or
outsl
push
jnp
jmp
jb
scas
outsl
ljmp
outsb
outsl
out
xchg
cli
outsl
pusha
adc
sbb
out
in
sbb
aam
jmp
call
cmp
push
and
outsl
xor
ja
jae
adc
outsl
out
xchg
lret
cwtl
scas
int
cmpsl
outsl
or
inc
daa
inc
stos
rorb
mov
jbe
imul
cltd
outsl
xchg
inc
jns
scas
xor
imul
jle
jae
aam
mov
lret
cmp
xchg
mov
dec
xor
lds
dec
or
mov
mov
testb
push
outsl
ljmp
js
stos
loope
mov
stc
cmp
outsl
and
sarl
hlt
pusha
xchg
mulb
mov
xor
xchg
cmp
ret
repz
xchg
sub
mov
adc
and
outsl
nop
mov
pop
and
inc
loop
outsl
cmpsb
in
faddl
imul
xchg
mov
pop
xor
outsl
push
out
jl
out
jbe
pop
mov
pusha
add
sub
int
dec
fisubrl
sti
outsl
ds
lret
push
cmp
push
sbb
adcb
xchg
lret
xor
outsl
and
addb
mov
mov
add
mov
fadds
outsl
sub
push
lea
paddusb
jae
inc
sbb
add
jns
jo
or
test
jnp
adc
testb
mov
movsb
adc
daa
xor
outsl
push
sahf
adc
pop
add
jge
test
adc
jp
pusha
sti
nop
outsl
xor
mov
aad
xchg
adc
pop
cwtl
or
or
push
xor
insl
cmpsb
out
outsl
add
mov
test
or
push
or
arpl
mov
lds
js
mov
jne
xchg
sbb
mov
cmpsl
loop
outsl
inc
cmp
leave
mov
cwtl
outsl
or
jb
push
and
xlat
out
shlb
push
xchg
cld
xchg
mov
rolb
push
pusha
jns
fdiv
push
outsl
or
outsl
jo
or
ljmp
jnp
mov
jl
aam
mov
push
lds
inc
add
rcrl
xor
imul
mov
outsl
dec
or
mov
jecxz
fldt
xor
outsl
xrelease
outsl
sub
lds
mov
pop
insl
mov
push
fs
mov
bound
mov
jge
sahf
outsl
cmp
pop
clc
aam
rorb
mov
mov
out
sub
popf
in
sub
jbe
xor
arpl
aas
jge
dec
pop
lods
fisubrl
xor
scas
fs
int3
mov
mov
inc
mov
stos
jg
pusha
cli
xor
ljmp
ds
jmp
ret
jbe
outsl
push
cli
sub
pop
out
clc
stc
insl
sysenter
cmp
fwait
mov
arpl
cmp
das
ljmp
pop
sub
addr16
pop
lods
pusha
lods
negb
pop
mov
outsl
or
test
lahf
cwtl
sbb
lock
ljmp
test
push
push
popf
jns
stos
lcall
sbb
arpl
sub
aad
outsl
or
cmp
arpl
fdivs
push
adc
aaa
pusha
jbe
and
inc
sbb
push
aas
loop
popa
ja
xchg
out
adc
outsb
sub
gs
lret
pushf
imulb
call
sub
outsl
pop
inc
je
add
jl
outsl
jp
and
outsl
inc
mov
sbb
add
lret
movsl
arpl
or
je
idivl
lahf
adc
jecxz
out
cs
inc
and
inc
xor
or
and
mov
fadd
xlat
outsb
jnp
outsl
clc
mov
xchg
pop
jle
stc
ljmp
or
mov
or
outsl
cli
push
out
mov
stos
cmp
sti
pop
sbb
call
lds
add
rolb
das
js
loop
jecxz
aas
and
mov
out
popa
and
jno
jle
inc
or
imul
sub
outsl
enter
cmp
add
mov
call
fmuls
popa
in
mov
in
pop
xor
xchg
cli
imul
inc
xchg
push
add
jno
sub
adc
cmp
dec
mov
outsl
sub
mov
outsl
ret
inc
mov
jge
ret
sub
cmp
dec
xlat
or
cwtl
push
das
xchg
push
in
add
out
pusha
ja
mov
and
imul
add
xchg
lods
nop
jb
inc
outsl
cwtl
lret
add
or
jns
sahf
xchg
rep
inc
xchg
cwtl
ds
cmp
jae
mov
je
push
cld
nop
pop
push
xchg
mov
cmpsb
outsl
sub
push
jno
adc
sub
adc
js
enter
lea
cltd
sbb
lods
cwtl
jge
imul
xor
fcomip
xor
cmp
int3
lods
sbb
mov
dec
outsl
xchg
movl
dec
adc
test
and
mov
insl
xchg
and
and
push
cld
xchg
in
and
repz
jecxz
imul
pusha
mov
and
jle
cs
inc
fs
decl
in
mov
pop
mov
rorl
pop
cld
outsl
rcll
xchg
jb
adc
or
and
jns
sub
popf
out
outsl
lds
or
and
xchg
pop
xchg
mov
push
xchg
out
inc
add
loop
sub
aad
out
adc
fisttpll
outsl
adc
jb
fmulp
push
cmc
daa
addr16
rol
ljmp
jnp
loopne
fdivs
outsl
push
xor
xor
xchg
jle
jmp
pop
pop
test
outsl
dec
mov
push
cli
cmpsl
add
cs
inc
push
das
ja
repz
fiaddl
test
or
fstl
call
xchg
sbb
push
std
or
mov
sbb
dec
sahf
xchg
cli
dec
sub
xchg
stos
popf
jp
aam
icebp
xchg
mov
out
sti
dec
pushf
jmp
adc
sub
cmp
fsts
dec
jecxz
mov
mov
xor
mov
jns
ror
push
or
test
outsl
mov
add
fs
sub
xchg
fwait
and
mov
lds
cwtl
sbb
je
push
lahf
jne
int3
out
mov
aas
in
inc
pop
icebp
and
sbb
adc
fld
pop
out
sbbl
sub
mov
xchg
test
ljmp
or
xor
cli
jmp
jno
je
pushf
mov
or
push
xor
mov
pop
clc
push
lods
add
insl
mov
push
dec
outsl
test
movsl
adcb
lock
rcrb
add
add
push
outsl
mov
jo
ds
pop
imul
add
jne
mov
std
jb
outsl
ret
push
xchg
movsb
lock
add
push
xor
hlt
cmp
xor
jecxz
stos
jno
outsl
jo
orl
and
xchg
sti
stc
mov
outsl
push
cmpsb
add
push
pop
adc
mov
xchg
dec
sbb
popf
mov
or
and
lcall
inc
adc
pop
rcl
dec
adc
jo
fld1
cmp
add
xchg
cmp
push
xchg
gs
xchg
sub
xor
loop
inc
mov
outsl
mov
aad
decb
js
mov
loopne
iret
push
les
decb
cmp
ss
aad
cltd
shrb
lds
xchg
cmc
es
into
jmp
nop
ret
mov
cmp
divb
mov
inc
xor
fwait
cmp
js
outsl
cmpsl
jp
out
jge
sti
outsl
pop
stos
fisubl
adc
testl
lds
sbb
stc
mov
ljmp
cltd
inc
nop/reserved
jne
sbbl
out
mov
mov
shlb
push
outsl
or
add
cwtl
outsl
pop
add
fsubrs
mov
mov
scas
push
outsl
das
push
and
add
leave
mov
xor
jno
jle
sub
sbb
scas
shrb
or
sbb
inc
enter
int
mov
mov
xlat
sub
xchg
mov
leave
popf
lcall
jl
push
add
daa
mov
dec
out
outsl
xor
cmpsl
sti
cmc
int
outsl
cli
cs
adcl
pop
into
push
aas
sbb
add
fucompp
outsl
scas
in
and
movsb
mov
jne
stos
fwait
popa
outsl
lahf
sti
or
cmpsl
sbb
ror
pop
ds
outsl
icebp
xor
fs
mov
decb
inc
sub
mov
addr16
sbb
outsl
je
lea
jg
mov
out
sbbl
xchg
pop
adc
xchg
xchg
daa
leave
push
fadds
outsl
lahf
xor
xchg
sub
push
pop
outsl
inc
out
loope
and
lea
out
mov
jl
or
into
jp
out
js
sub
outsl
nop
shll
test
daa
add
jno
outsb
mov
inc
ljmp
cmp
rcrb
insl
mov
push
push
insl
adc
pop
cmp
jne
mov
dec
adc
sbbb
nop
sti
xor
inc
pusha
push
dec
jge
inc
shrb
pushf
outsl
fnstcw
jge
pushf
outsl
adc
push
sub
lret
xor
das
jne
out
pushf
sbb
mov
aas
test
jl
sub
add
lods
xlat
dec
push
fbstp
push
mov
rcrl
cmpsb
sub
xlat
mov
pop
push
cld
inc
cmc
xchg
inc
ja
outsl
fsubs
push
xchg
lea
add
mov
addr16
xchg
xor
and
cmp
outsl
cld
aas
loop
add
outsl
loope
jle
cmp
push
pusha
sbb
push
sbb
out
cwtl
pop
outsl
and
adc
sbb
rcrl
das
mov
imul
popf
scas
push
jnp
mov
sub
jmp
dec
pusha
jno
fs
inc
inc
add
jbe
xchg
push
pushf
xchg
outsl
sarl
leave
outsl
test
pusha
movsb
push
sbb
sti
pop
outsw
orb
test
shll
and
addr16
dec
xchg
scas
dec
or
pusha
outsl
dec
xchg
adc
hlt
cmpsl
ret
or
mov
stc
lret
pop
outsl
ljmp
add
outsl
jmp
leave
jle
fisubs
int3
sub
xchg
jb
sbb
lcall
insl
fistpl
mov
lods
mov
pop
insl
mov
mov
out
push
mov
xor
dec
cmp
icebp
fimuls
scas
inc
jmp
ret
mov
js
jmp
pushf
addr16
jb
cld
mov
in
jns
repz
out
add
int
sbb
arpl
mov
addl
ret
inc
leave
outsl
pushf
adc
jl
pop
push
rorb
xor
ds
outsl
push
mov
sarl
push
or
push
cmc
sbb
mov
movsb
repz
push
adc
adcb
mov
pop
repz
or
xor
cmpsl
or
imul
mov
ja
pop
push
jo
mov
stos
outsl
icebp
inc
inc
mov
jmp
add
push
jl
movsb
mov
cmp
jo
ficoms
mov
mov
fisttpl
mov
jge
repnz
sbb
insb
ja
loope
scas
sbb
mov
push
sbb
add
cmp
jno
bound
cltd
out
mov
xor
cmp
jle
lahf
hlt
popa
imul
js
sti
sub
mov
inc
bound
mov
jnp
ja
cltd
fidivrl
decb
mov
and
lahf
pop
pop
push
loop
jae
out
xchg
mov
adc
sahf
mov
cmp
sub
mov
outsl
xor
test
enter
stos
ljmp
pop
popf
movsb
aam
push
push
fisubrs
dec
or
xchg
mov
or
mov
outsl
jbe
repnz
jno
insb
and
outsl
shlb
cmovno
inc
fwait
sahf
ljmp
in
fistl
stos
jno
dec
mov
cmpsl
add
pop
mov
out
jb
das
ret
fisubrs
jmp
popf
xchg
cli
int3
test
push
jge
movsb
mov
inc
ret
movsl
dec
out
mov
fwait
popl
rcll
outsl
xchg
cmp
push
test
js
xchg
inc
out
pop
outsw
cltd
in
cmp
push
dec
pop
inc
outsl
mov
push
lock
outsl
ficoms
mov
and
ljmp
popf
and
iret
arpl
add
xor
xchg
and
sub
jp
addr16
lock
out
js
movsb
subb
repz
cmpsl
pushf
scas
jmp
xorb
mov
cltd
test
add
div
inc
outsl
int3
fimull
pushf
lods
jns
cmp
cli
xor
mov
std
outsl
ret
scas
cmp
mov
xchg
jns
fcomp
test
push
xchg
mov
xchg
cmp
sbb
xlat
pop
out
add
sbb
lds
cmp
push
ret
scas
pop
outsl
xor
stos
pop
push
outsl
jns
mov
add
xbegin
bound
stc
or
leave
xor
jmp
test
jl
gs
dec
jns
out
mov
adc
mov
outsl
loope
sub
xchg
cli
mov
test
jnp
cld
inc
outsl
dec
push
jo
fsubrs
cmp
add
loop
in
std
jle
mov
mov
in
xchg
scas
cltd
jp
test
jge
stc
test
dec
lahf
movsl
arpl
sti
xor
cltd
mov
imul
xlat
push
lahf
inc
add
push
js
and
push
adc
push
inc
dec
mov
mov
mov
outsl
mov
xchg
adc
aam
jae
outsl
lret
out
adc
sbb
popa
mov
pop
add
adc
fsubrl
xor
inc
ljmp
mov
js
jge
xor
mov
pop
out
push
adc
pop
xchg
leave
jo
mov
orl
cwtl
imul
xchg
lock
repz
in
sbb
xlat
mov
and
faddp
sti
scas
pop
cmp
xchg
cmp
or
andb
mov
fldcw
ljmp
dec
mov
jns
test
xor
out
mov
pushf
inc
std
push
adc
add
lahf
outsl
mov
ja
mov
repz
jo
xchg
shl
int
outsl
push
movsb
cmp
jle
roll
xchg
cmc
outsl
lea
mov
pop
push
pop
xchg
outsl
mov
gs
add
outsl
ja
mov
std
enter
inc
out
and
ret
and
or
mov
dec
outsl
ror
shl
pop
roll
mov
js
push
jecxz
xor
jne
aam
testl
ljmp
fadd
stc
inc
adc
fwait
dec
sarb
adc
sarb
movsb
lods
add
adc
arpl
and
adc
outsl
clc
xor
push
outsl
push
ja
add
mov
aaa
cmpb
popa
mov
std
mov
mov
inc
fisubrl
insl
pop
jp
dec
and
ret
popa
insl
adc
in
lahf
rcll
push
mov
fnsave
mov
add
outsl
es
push
mov
nop
out
loope
dec
push
out
pusha
test
repz
mov
outsl
mov
mov
rcrl
outsl
mov
fwait
andb
outsb
cli
lods
call
sub
push
and
outsl
sbb
mov
dec
xchg
jo
xchg
shlb
push
gs
daa
lds
aaa
cmpsl
ftst
out
mov
xor
clc
push
mov
inc
test
fwait
rorl
test
pop
jecxz
imul
gs
insb
movsb
outsl
out
aas
rol
xor
add
add
lods
jbe
outsl
cltd
cmp
push
jl
pop
sbb
mov
test
pop
mov
adc
shrl
or
pusha
mov
je
jge
jbe
out
outsl
adc
dec
jle
cmp
outsl
int
lea
mov
mov
fcmove
mov
shrl
jecxz
or
push
xor
xor
ja
sbb
mov
je
out
mov
aaa
jecxz
notb
cwtl
jge
lret
mov
in
xchg
or
xor
xorl
sub
xchg
and
jge,pn
or
mov
xchg
hlt
insb
gs
xchg
out
out
sub
pop
insb
fdivs
cltd
inc
cmp
ja
sbb
pushf
jnp
xchg
insb
mov
outsb
jno
pop
or
jle
sbbl
mov
jno
cmp
jg
jb
pop
dec
lds
sbb
loopne
push
addr16
sbb
push
inc
push
incb
cmc
mov
clc
insl
out
adc
rcl
ljmp
por
or
jo
aas
ljmp
lock
cmc
mov
leave
negl
bound
dec
push
or
mov
fldcw
or
adc
imul
cmp
sbb
mov
mov
or
jecxz
push
aas
mov
mov
mov
xchg
out
lods
out
cmpl
sub
cli
lods
jecxz
jg
or
jae
inc
repz
jb
mov
cs
in
pushf
pop
jne
mov
ret
xchg
lahf
mov
ds
add
mov
sbb
pop
and
cmp
test
push
imul
out
push
fcomps
subb
xor
scas
lock
stc
inc
fmull
pop
and
sub
pop
addr16
xchg
dec
out
push
leave
dec
pop
inc
sub
sub
out
outsl
aad
das
aas
jmp
das
int3
aas
ljmp
jo
das
mov
add
testb
jb
add
rcll
in
push
in
pop
incb
repz
push
sub
push
popa
xor
inc
rorb
cli
ds
test
or
lock
inc
scas
bound
lahf
iret
pop
sub
ds
xchg
sub
or
mov
sbb
scas
imul
lock
scas
jae
aas
insl
sahf
cmc
mov
jno
test
outsb
push
in
dec
fstl
movsb
jo
stos
sub
sub
dec
pop
stos
jg
jmp
lret
pop
icebp
xorl
sbb
sbb
out
fisubl
xor
lock
xlat
mov
push
aas
daa
mov
test
int3
mov
pop
and
cmp
inc
insb
scas
stc
pop
cld
into
mov
mov
mov
mov
addl
insb
mov
rcrl
das
scas
adc
pop
pop
cmp
outsb
mov
ja
sbbl
cmp
add
xchg
push
jo
push
imul
iret
xorl
xor
push
push
mov
xor
adc
ds
pushf
jb
subb
das
popf
mov
lds
out
outsb
outsb
cmp
fnstsw
pop
das
mov
ror
add
and
jmp
sub
jp
pop
xor
rcrl
add
add
jecxz
inc
in
push
jmp
ds
fdivrp
xor
adc
cmp
imul
xorb
data16
pop
std
pop
enter
inc
js
push
addl
push
sub
ficomps
int
sahf
xchg
push
pushf
push
movsl
push
imul
inc
mov
sarb
jl
xor
xchg
cs
mov
sarb
inc
push
ss
loop
leave
lret
sbb
cld
inc
sub
mov
into
xlat
dec
mov
push
jb
cmp
insl
cmp
xor
aas
inc
dec
jnp
loope
cmc
lea
std
mov
ss
aad
cmp
xchg
orb
and
in
stos
clc
jmp
fstps
jmp
dec
jne
cli
push
loop
mov
pop
out
jle
pop
and
fwait
inc
outsb
sti
pop
notb
inc
decb
aas
loop
fistps
jle
daa
data16
mov
inc
pop
cld
bsr
pop
jae
loopne
out
stos
jne
std
shl
mov
add
push
js
int3
adc
fisttpl
add
inc
mov
mov
pop
negb
hlt
loope
in
call
sub
out
mov
mov
pop
das
hlt
loope
arpl
fnstsw
fs
add
dec
into
lods
nop
int
daa
imul
pop
lahf
dec
lret
jne
jp
xchg
adcl
push
pop
and
sub
sti
mov
mov
adc
add
mov
adc
scas
dec
pop
outsb
das
mov
pop
dec
pop
xchg
push
mov
cmp
cs
pop
daa
arpl
pop
cli
adc
sub
cltd
and
inc
and
mov
pop
mov
jns,pn
inc
mov
push
jle
scas
mov
mov
sahf
inc
sahf
sbb
aas
sbb
dec
scas
je
loope
out
mov
mov
in
sbb
iret
jmp
lods
aas
mov
push
sub
xchg
and
xchg
inc
push
rorl
add
mov
jle
push
addl
out
bound
push
loop
inc
xor
inc
out
push
insl
mov
mov
and
fimuls
jmp
pop
jb
xchg
mov
mov
pushl
jecxz
bnd
xor
jns
arpl
movsl
imul
cli
mov
out
push
cld
xor
and
rcl
repz
mov
mov
aam
mov
add
mov
lods
ret
jb
sbb
pop
arpl
movsb
fldcw
cs
loop
sub
popf
jne
cmpsb
icebp
mov
pop
push
inc
xchg
xchg
adc
sbb
inc
ret
pop
jp
mov
dec
into
lods
pop
pop
dec
leave
cld
jge
push
pop
xchg
in
shlb
iret
shl
xor
shrl
mov
xorl
mov
loop
xor
mov
dec
dec
jge
les
ficoms
imul
inc
aam
sbb
inc
cmp
into
dec
lea
cmp
sbb
xor
dec
add
and
movsb
popf
sub
lods
fcompl
pop
cmp
popf
jmp
in
dec
or
sub
xor
mov
ret
and
mov
shr
inc
or
or
push
ljmp
ds
add
jecxz
push
jns
in
js
jns
cltd
pop
dec
outsb
mov
das
arpl
movsl
adc
jg
leave
pop
dec
cmp
fucomp
out
int
mov
cwtl
lret
leave
sbb
arpl
mov
sbb
push
jae
and
dec
test
inc
je
cs
jae
inc
mov
push
loop
outsb
pop
setno
pushf
out
jl
ds
jb
xchg
packuswb
jg
popa
into
popa
dec
mov
mov
ds
in
outsb
push
das
xchg
pop
add
pop
stos
test
lea
sahf
add
dec
mov
pop
pop
cmp
addr16
mov
and
mov
pop
and
inc
jle
push
jne
cmp
faddl
cmp
mov
mov
pop
sbb
pusha
add
outsl
jo
mov
outsl
add
add
outsl
mov
mov
fisttpl
outsl
sbb
mov
outsl
outsb
mov
mov
pop
pop
sbb
add
xor
outsl
mov
lahf
je
push
paddd
add
and
pusha
lcall
pushf
movsl
outsl
ficoml
cmpsl
js
outsl
out
pop
out
enter
outsl
fwait
jae
stos
fimuls
add
cmc
outsl
push
xchg
cmp
cltd
jmp
xchg
push
push
in
xchg
repnz
inc
pop
mov
add
pop
insb
orl
lret
gs
rcrl
out
add
pusha
lea
push
inc
imul
push
mov
adc
sub
add
mov
sub
cmp
imul
xor
or
clc
out
mov
jge
xchg
inc
addr16
mov
xchg
lds
arpl
pop
outsl
jle
js
stos
arpl
aas
in
das
stc
test
push
insl
cmpsl
cld
mov
and
outsl
or
push
shlb
add
pushf
test
push
cltd
cli
cs
rolb
pop
cmp
loop
xlat
loop
ret
outsl
sbb
mov
scas
pusha
repnz
cmpl
fninit
xchg
repnz
cmp
xor
lods
leave
lea
or
cmp
mov
sbb
mov
and
cmpsl
fisttpll
or
inc
mov
pop
lock
in
inc
data16
mov
dec
pop
pand
out
jmp
xor
adc
and
punpckldq
fists
sbb
mov
insl
sahf
fs
push
scas
add
inc
xor
adc
shll
and
dec
cmp
cmp
xchg
xor
push
les
mov
dec
jne
xchg
fcomps
subb
dec
aad
into
lods
sbb
insl
loopne
imul
pop
jnp
jne
and
int3
jg
mov
cmp
fwait
inc
lea
out
or
popl
scas
xor
lcall
dec
sti
daa
mov
scas
fs
mov
and
ret
mov
pop
test
cmpl
ret
out
dec
jmp
arpl
cli
push
push
jmp
jmp
or
cld
mov
and
fistps
jecxz
shrl
scas
jg
les
adc
fimuls
sub
pop
mov
dec
pop
in
movaps
mov
iret
xchg
sbb
ljmp
jle
pop
sbb
inc
inc
lea
outsb
stos
pop
js
mov
jmp
pop
into
adc
sub
or
xor
dec
test
push
stos
mov
xor
cmp
das
loopne
popa
pop
xchg
push
out
xchg
ljmp
sub
inc
fbstp
cmpsb
xchg
or
sbb
sub
xchg
xchg
push
imul
fistps
ds
xor
popf
jecxz
adc
pop
je
jne
push
xchg
jns
fwait
cmp
les
and
and
ljmp
cs
mov
sbb
data16
dec
push
pop
dec
mov
insb
push
push
dec
mov
ret
push
adc
addr16
iret
ret
cmp
pop
aas
pop
jle
aaa
ds
xchg
or
pop
ljmp
dec
lahf
js
cmc
pop
jae
mov
lahf
js
shlb
mov
cmc
mov
cmp
sub
sub
mov
hlt
cmc
les
pop
jbe
aam
mov
jp
fsubrl
imul
cmp
enter
xchg
or
mov
dec
pop
lods
clc
into
inc
push
push
movsl
pop
fstpt
call
stos
or
out
dec
test
jb
pop
cs
adc
add
clc
mov
shll
out
mov
sub
cmpb
fcoms
insb
scas
mov
adc
push
pop
cmp
and
out
dec
add
test
mov
sbb
cwtl
outsl
int3
inc
add
inc
inc
mov
rcr
aad
cli
dec
in
ds
pop
aas
negb
test
xor
rolb
jo
outsl
push
push
rorl
xor
pop
jae
mov
fs
lea
mov
or
sub
cmp
cmpsl
push
xlat
pusha
loope
icebp
outsl
mov
or
inc
and
jecxz
icebp
fpatan
fcmovne
and
adc
pop
bound
mov
data16
push
sbb
jle
test
mov
outsl
push
sarb
cmp
mov
leave
imull
out
push
movsb
enter
mov
jp
icebp
or
mov
fs
xchg
cwtl
insb
insb
dec
outsl
pop
int
dec
je
mov
dec
pop
sbb
pusha
icebp
and
out
sbb
hlt
jb
sub
cmpsl
aas
fistpl
fidivrl
add
pop
sbb
jl
push
addr16
sub
cmc
mov
outsl
data16
xchg
xchg
outsl
cmp
aam
mov
cmp
mov
bound
mov
mov
shl
icebp
fwait
xchg
jo
aad
and
ds
sub
and
jge
and
outsl
sbb
out
and
jle
push
cltd
sti
or
aas
sbb
xchg
mov
push
not
xor
repz
das
xchg
or
scas
pop
stos
dec
aaa
arpl
mov
add
add
lahf
jo
cwtl
loopne
mov
loope
movsl
outsl
or
iret
mov
xchg
shlb
jno
jbe
jmp
pusha
add
cmp
mov
js
xchg
add
in
or
dec
sbb
push
sub
or
add
ficompl
mov
mov
sub
sbb
inc
scas
mov
mov
jmp
testb
je
cmp
stos
lods
and
jl
jo
xor
cld
pop
xor
nop
andb
push
inc
pop
inc
pop
sub
push
ret
insl
sub
imul
outsl
mov
push
push
mov
test
ds
cmp
sub
ret
jle
loop
inc
push
pop
cmp
insb
fcoml
fwait
sbb
clc
mov
out
push
popa
lods
les
movsl
dec
and
fisubl
mov
dec
icebp
shll
cltd
aaa
xor
std
mov
adc
push
outsb
inc
rol
imul
adc
and
cwtl
in
pop
push
outsl
or
ror
mov
mov
out
adc
mov
xchg
cli
mov
sub
and
insb
inc
outsl
js
sbb
jge
scas
subl
ret
xchg
lock
out
pusha
inc
cltd
mov
or
sbb
rcrb
je
lods
dec
mov
into
iret
outsl
shrb
rep
stos
dec
cmp
mov
jbe
xchg
cmpsb
ljmp
jp
shrb
scas
iret
or
inc
mov
xor
jl
dec
inc
stos
or
cmpsl
outsl
push
push
dec
jmp
ret
push
add
add
icebp
fwait
test
xchg
lods
xchg
and
inc
mov
lahf
imul
fwait
arpl
in
je
scas
mov
imul
scas
pop
pop
into
stos
negl
dec
mov
pop
and
cmovg
sbb
daa
mov
inc
mov
jge
pop
mov
imul
mov
add
outsb
or
xchg
outsl
test
or
mov
test
dec
ss
push
pusha
push
xlat
push
repnz
cmp
inc
jp
iret
mov
or
pop
clc
ja
scas
insb
inc
outsl
pop
ret
and
outsl
inc
into
or
outsl
mov
pop
or
pop
int
add
ret
pop
sub
call
in
and
ds
outsl
add
test
adc
fwait
dec
insl
outsl
push
adc
repz
mov
push
out
jo
scas
add
call
add
insb
add
xchg
scas
push
pusha
bnd
stos
dec
cmp
push
ret
sbb
je
enter
xor
bound
sbb
pop
and
scas
add
adc
sub
and
repnz
mov
fdivs
jle
and
stos
pop
cwtl
movsb
xor
mov
outsl
jnp
shlb
push
stos
xchg
add
in
outsl
sbb
mov
inc
sub
pop
outsl
mov
out
js
pop
inc
fsubrl
jne
enter
cmpsb
outsl
rcrl
popf
fwait
sub
test
test
std
inc
fstpl
sub
ss
push
aas
imul
hlt
xor
js
aam
je
movntq
out
ror
adc
mov
push
add
jbe
arpl
mov
sbb
lea
xor
movsl
test
xchg
push
dec
clc
movsb
jae
jno
mov
jnp
cld
push
pusha
arpl
adc
jmp
test
aam
mov
jns
pop
hlt
movsb
push
mov
sub
dec
push
outsl
lret
pop
stc
cmpsb
add
inc
dec
dec
pop
roll
mov
pop
add
sbb
mov
xchg
jo
test
fldenv
lret
inc
sti
outsl
cmp
mov
outsl
mov
fcoml
jle
mov
cwtl
mov
outsl
scas
stos
xor
outsl
fs
addr16
add
pop
stos
fcoms
sbb
mov
inc
push
loope
into
xor
xor
scas
ljmp
test
lcall
inc
mov
scas
dec
xor
mov
mov
loop
outsl
or
out
xchg
xor
ret
js
mov
movl
cltd
ret
mov
or
popa
mov
lea
mov
inc
outsl
or
jbe
hlt
es
xor
add
inc
mov
mov
sbb
and
sarl
outsl
push
add
leave
int
loop
out
sarb
push
sub
out
ret
setg
jge
cwtl
push
jp
pusha
cltd
lea
and
shrl
outsl
mov
lods
nop
aam
pop
stc
and
jmp
xor
cwtl
dec
jo
dec
aas
pop
pop
adc
icebp
arpl
pusha
lahf
repnz
das
cmp
push
idivl
ret
or
mov
fdiv
loop
mov
cmp
sub
push
sbb
cmpsl
fs
sbb
gs
sbb
subl
outsl
mov
jbe
sbb
cmp
outsl
icebp
dec
pop
inc
addl
mov
jb
push
outsl
fwait
mov
mov
outsl
sub
test
xlat
outsl
mov
add
or
sub
frstor
nop
xor
push
or
jmp
sub
outsl
cmp
sbbl
dec
adc
out
mov
outsl
mov
and
adc
push
xor
fs
dec
xor
ja
fs
outsl
movsb
cmp
push
xchg
icebp
mov
pop
inc
ret
outsb
jl
jge
cmpsl
and
xchg
pop
outsl
sbb
xor
pusha
jo
outsl
cmpsl
insl
inc
sarl
fadds
addr16
sub
int
cmp
mov
lcall
inc
movsb
pop
sbb
push
push
push
ss
sub
or
jmp
out
stos
aas
outsl
pop
push
dec
mov
inc
fsubr
loopne
mov
out
pop
imul
dec
in
push
lret
and
fmuls
cli
push
dec
dec
push
xchg
out
ss
cmpsb
jmp
je
push
adc
push
sbb
jmp
cli
and
sub
ljmp
repnz
ficomps
push
push
inc
adc
mov
rorb
adc
rol
cmp
sti
dec
popa
arpl
icebp
and
repnz
ds
adc
dec
imul
popa
sub
psrlw
mov
mov
iret
outsl
mov
out
push
push
xchg
addr16
xor
cmp
imul
repz
mov
nop
lea
imul
and
popl
jo
push
in
repz
push
imull
xchg
fdivs
xchg
jne
popa
in
cmp
dec
test
imul
mov
lahf
jmp
leave
push
cmp
mov
xchg
push
inc
adc
adc
cmp
cld
xchg
jae
in
mov
out
mov
sub
or
mov
push
adc
adc
cmpsb
loop
pop
cmp
fnstsw
jae
fsubrs
rcll
xor
push
pop
or
pop
ja
fsubl
xorb
cmp
lret
xchg
xor
dec
mov
push
and
jae
paddusb
out
lods
sarb
xor
imul
add
mov
mov
popa
flds
jb
inc
xor
cld
insb
testl
out
loope
lahf
insl
ret
fsubr
cmovl
es
pusha
or
fnstsw
xor
fcoml
mov
adcl
mov
lods
sbb
loope
in
scas
sub
outsb
push
mov
test
outsb
and
cwtl
fmull
test
insl
jg
xor
les
movsb
lcall
xor
outsl
dec
cld
xchg
scas
fildll
jo
mov
or
je
or
stos
ret
lock
test
mov
mov
jle
push
mov
subl
ret
fdivl
inc
xchg
pop
push
insb
push
pusha
inc
sarb
test
dec
sbb
lret
sbb
jo
inc
pop
imul
movsb
in
lods
adc
mov
pop
scas
adc
jns
in
cmpsb
or
xchg
and
mov
aam
cmp
out
mov
xor
loope
mov
call
dec
out
out
iret
sbb
jne
test
mov
pop
and
mov
mov
sub
lret
cmp
pusha
ret
push
aas
dec
out
push
mov
sbb
popf
outsl
icebp
out
xor
mov
mov
int
cmpsb
fwait
scas
scas
addr16
sbb
sbb
xchg
xor
push
sti
lretw
add
xchg
dec
or
push
inc
outsl
sbb
adc
jle
subl
idivl
mov
int
stos
lock
rolb
cmp
mov
jle
xor
cmp
push
imul
or
sub
add
dec
mov
lcall
mov
inc
pop
mov
outsl
lock
inc
mov
adc
jne
outsl
enter
fnstenv
jl
sbb
sbb
int3
mov
pusha
mov
adc
jp
call
push
movq
popa
out
jnp
loope
xor
jae
insb
adc
jmp
mov
add
int
fsubl
mov
jae
jb
ss
jl
aaa
imul
pop
aam
mov
enter
mov
pusha
pushf
xchg
add
sbb
push
and
sub
outsl
popa
cmp
xor
fldl2t
outsl
in
cmp
ja
jnp
popa
lret
or
aaa
arpl
loopne
xchg
icebp
mov
mov
outsl
adc
xor
pushf
pop
or
outsl
add
add
dec
and
aad
mov
sbb
rol
adc
out
std
ficompl
xlat
mov
xchg
or
cmpsb
push
cmpsl
xchg
outsl
fsubrs
aam
out
xor
aad
stc
or
test
outsl
pop
cmp
jmp
lahf
outsl
add
jae
mov
mov
outsb
xchg
test
mov
js
add
outsl
lock
sbb
lahf
xchg
mov
roll
pop
faddp
adc
pop
and
or
sbb
pop
stos
outsl
sti
mov
inc
xor
push
outsl
sub
rcll
adc
pushf
sub
fs
cmpsb
outsl
test
mov
xor
push
add
shlb
ja
mov
js
je
subl
enter
pusha
and
arpl
inc
adc
lahf
or
subb
outsl
sub
xlat
fnsave
test
dec
pop
sub
rcrl
fstpt
add
loope
xor
push
je
js
outsl
out
xchg
xchg
jnp
pusha
cwtl
xchg
mov
clc
pop
lahf
push
mov
loope
hlt
ljmp
mov
idivl
outsl
pop
popf
loop
dec
xchg
stos
outsl
pushf
pop
jge
push
jbe
and
jl
push
mov
fsubrs
pop
add
aaa
outsl
and
movsb
outsl
and
xchg
mov
repz
pop
sbb
fcompl
lods
lahf
sahf
popa
arpl
and
xchg
cmpsl
outsl
xchg
and
jns
dec
xor
ljmp
pop
mov
outsl
adc
jp
and
jle
js
mov
and
stos
aad
xchg
jmp
fdiv
sti
and
mov
ret
add
outsl
insl
push
xor
dec
xchg
xor
sub
pop
outsl
push
scas
test
add
mov
int3
test
jne
outsl
jae
jle
scas
sbb
cmp
add
and
ret
rcrl
outsl
addl
sahf
outsl
and
mov
jle
outsb
mov
outsl
add
incl
or
test
int
jo
sahf
jno
sti
mov
and
nop
pushf
mov
sarl
dec
daa
outsl
add
push
dec
mov
stos
lret
lahf
lock
push
sarb
inc
lea
scas
cmp
outsl
out
cmpsl
stos
iret
dec
sbb
outsl
push
or
popf
test
pop
ds
aas
fiadds
xchg
add
mov
outsl
dec
inc
sbb
xor
add
addr16
jno
fadds
xor
fsts
mov
outsl
push
inc
mov
and
stos
push
loope
test
scas
push
imul
add
push
scas
mov
aas
sti
out
mov
test
scas
lret
ficomps
fsubrs
stc
je
or
pop
and
lahf
inc
popf
or
adc
jnp
outsl
xchg
mov
out
js
out
jo
fisubl
pop
fiadds
cltd
cmp
mov
dec
bound
pop
lret
outsl
push
and
test
aas
fwait
outsl
ret
cwtl
insl
shl
mov
aad
je
jp
push
jo
push
outsl
sub
mov
mov
mov
mov
jno
rcr
mov
lcall
xchg
imul
jo
push
push
outsl
pop
pop
int
rep
inc
sbb
dec
xor
in
cmp
mov
sbb
test
insl
xchg
mov
subb
jae
ds
fsubrl
inc
jl
pop
out
mov
sub
and
das
inc
jecxz
arpl
or
push
aas
pushf
adc
out
nop
outsl
push
cltd
cmp
cs
and
mov
jbe
and
adc
add
sahf
xchg
jo
sub
nop
int
mov
add
aad
fsubrl
mov
jb
loopne
outsl
mov
push
inc
aas
outsl
aaa
adc
call
gs
out
fsubl
adc
fcomp
enter
xchg
or
push
loope
dec
pop
sahf
mov
push
sbb
std
cmp
lret
leave
in
pop
imul
cmc
dec
push
sti
mov
jp
cmpsb
dec
mov
mov
in
dec
outsb
arpl
addr16
rorb
imul
xor
in
stos
adc
out
scas
aas
je
xor
xor
or
sub
insl
and
add
inc
pop
inc
mov
inc
add
ret
inc
das
shll
bound
and
and
push
sub
sbb
sbbb
mov
sub
pop
imul
inc
repnz
add
push
loope
daa
and
push
pusha
divl
lods
fimuls
fnstcw
pop
jmp
icebp
in
daa
dec
lret
fisubrl
popa
arpl
pop
or
orb
mov
ret
insl
out
in
bt
std
fucomip
bound
mov
pop
hlt
repz
jb
icebp
xor
cs
loop
out
pop
dec
push
push
mov
outsb
sub
mov
aas
pop
dec
add
jl
and
or
and
cmp
sub
push
cmp
xchg
out
mov
pop
cmp
int3
mov
je
into
cmp
jnp
je
add
mov
aam
and
pmaxub
mov
loope
xor
mov
scas
pop
push
pop
test
jl
decl
mov
sub
mov
data16
push
je
ss
pop
xchg
sub
scas
jae
jl
scas
mov
fisttpl
subb
into
sti
fistpl
dec
repnz
dec
jmp
imul
add
and
data16
sti
imul
sub
sbb
jb
jbe
inc
mov
mov
scas
stc
ret
pop
sbb
push
mov
sbb
mov
jmp
xchg
inc
bnd
add
push
mov
loop
pop
cmp
mov
in
nop
dec
cmp
mov
and
in
inc
out
or
mov
xchg
inc
cs
test
mov
bound
repz
dec
jne
push
xor
pop
or
js
aad
push
stc
stos
and
lods
jle
push
lcall
scas
loop
icebp
pop
les
mov
dec
fistps
test
adc
xchg
pop
push
pop
dec
cmp
fdivrl
dec
mov
xor
jg
jmp
mov
cmc
sub
cs
ds
sub
out
jmp
cmp
subb
ss
mov
stc
es
lret
jb
pushf
ret
rorl
dec
fucomp
push
hlt
or
test
sub
pop
mov
and
adcb
sub
stc
dec
add
mov
push
call
lret
dec
in
lret
or
js
pop
and
in
loop
xor
daa
jbe
jo
ja
inc
cmp
adc
push
insb
std
in
mov
outsl
adc
mov
ret
push
les
mov
ss
mov
xchg
rolb
rcrb
push
hlt
mov
stos
sub
push
push
psllq
sub
xchg
add
xchg
pop
js
jg
pop
mov
and
jg
daa
dec
lcall
inc
negb
dec
lods
sahf
xlat
call
roll
xor
pop
lods
xchg
jae
je
ja
cmpsb
inc
in
dec
lcall
mov
decl
dec
mull
dec
or
pop
ljmp
out
cmp
inc
scas
test
or
cmc
adc
xchg
stos
inc
mov
push
pop
cwtl
iret
or
aas
add
push
lods
scas
and
out
dec
arpl
fstl
xor
cmpsl
xor
scas
xlat
outsb
rcrb
ljmp
loop
loop
jo
dec
testl
mov
pop
ljmp
mov
shr
dec
int3
out
mov
sbb
sub
pop
push
int
xchg
pop
arpl
push
or
push
fstpl
or
cmp
jecxz
inc
sub
mov
lock
std
js
xor
daa
mov
cmp
clc
sub
movsb
lock
pop
aad
and
pop
hlt
pop
scas
orl
dec
imul
cmp
pop
sahf
xchg
sub
dec
scas
cmp
sbb
cmc
gs
loop
mov
insb
adc
insb
jle
insl
pop
jne
cmpsl
jne
imul
loopne
push
imul
subb
js
push
cwtl
iret
or
out
jb
or
pop
push
mov
shrl
lea
cmp
dec
das
push
add
outsl
imul
cmpsb
mov
ret
cld
inc
hlt
push
loop
sbb
xor
das
mov
in
std
outsb
decb
hlt
out
xor
dec
push
out
loope
push
pop
jns
xor
cmpl
xor
inc
stos
inc
movsl
sbb
mov
mov
mov
xchg
subb
push
jne
jns
mov
or
testl
sbb
or
addb
lcall
mov
movsl
pop
popf
call
dec
jle
cmpsb
xchg
negb
outsb
pusha
jge
out
pop
dec
add
cltd
adc
insb
xchg
mov
test
xchg
sbbb
add
outsb
dec
stos
jle
fsubl
outsl
arpl
jle
scas
iret
daa
mov
lods
shrl
arpl
dec
jle
aam
cld
cmc
jmp
xchg
pop
lea
out
xchg
cwtl
rorl
pop
out
pop
jp
push
lock
adc
dec
fildll
xchg
pop
hlt
sahf
es
adc
ljmp
scas
scas
imul
gs
icebp
into
pop
or
xchg
sahf
mov
cld
and
dec
or
or
out
sub
jmp
out
cwtl
jb
daa
in
dec
jnp
sub
insb
scas
pop
dec
dec
out
xor
sbb
mov
imul
stos
jg
pop
inc
dec
sub
mov
pushf
pop
jg
add
aas
scas
sub
fwait
add
mov
mov
out
cli
inc
out
sub
cmp
daa
les
ljmp
cmp
pushl
filds
pop
out
pop
pop
mov
inc
fstpl
jge
xchg
jae
lods
xchg
cmp
xor
or
sub
xlat
inc
outsb
sysretw
cli
mov
push
jecxz
test
sbb
jae
outsb
jne
loop
iret
lahf
pop
pop
jmp
lret
test
cli
adc
mov
or
scas
sub
pop
mov
push
mov
pop
add
mov
dec
cli
fsubrp
adcb
arpl
scas
sbb
jle
rcll
sub
cwtl
mov
dec
minps
call
add
fdivr
mov
cmpsl
push
sbb
pop
cmp
sbb
jnp
add
push
shl
loop
mov
fnstcw
movsl
pop
popf
es
data16
call
pop
inc
mov
push
arpl
out
dec
das
outsb
scas
aas
pop
cmp
out
or
fsubs
fnstcw
cmovne
pop
sub
sar
mov
es
pop
int
mov
sysret
cmp
out
or
lret
lods
push
lods
out
sub
out
pop
sub
popf
mov
cmp
mov
fisubrs
dec
jmp
idivb
pop
flds
popf
outsb
insl
daa
das
mov
pop
inc
pop
ds
fnstcw
pop
dec
push
and
dec
mov
dec
pop
test
scas
mov
cmp
or
pop
cltd
lret
sub
outsb
and
mov
mov
and
cs
add
jne
js
mov
jne
icebp
jne
dec
loope
orb
das
cmp
pop
jecxz
dec
pusha
cs
xor
fldenv
pusha
rorb
mov
jno
out
rcr
sub
mov
pcmpgtd
cmpsl
int3
push
fadd
inc
das
or
ficomps
mov
adc
pushf
jmp
dec
lds
out
ret
rcll
pop
or
and
in
jg
cli
fmull
dec
cwtl
xor
mov
jecxz
addr16
fsubrl
dec
ficompl
lods
out
add
jg
mov
iret
adc
jl
into
repz
jmp
fidivl
mov
mov
inc
fnstsw
ret
push
loop
adc
popl
xor
mov
sub
xlat
pop
pusha
inc
fnstsw
mov
push
and
outsl
add
ret
and
mov
mov
cmc
sbb
pushf
fsubl
mov
or
inc
and
rcrl
sbbl
in
fmuls
fistps
out
frstor
mov
jno
jo
out
jno
ljmp
mov
push
mov
xchg
jl
movsb
or
push
int
cmc
jo
stos
and
das
dec
fnstsw
mov
or
ret
xchg
jae
mov
je
dec
std
mov
lods
or
pop
push
ds
lahf
js
and
sti
cmp
dec
mov
lods
push
jae
adc
outsb
sbb
adc
pop
jmp
jle
add
repz
jecxz
fadd
in
xor
movsb
or
or
or
in
mov
lret
push
jg
mov
jp
dec
scas
outsb
movsb
out
loop
pop
sahf
stos
leave
xchg
mov
leave
data16
mov
fimuls
cmp
movsb
cmpsb
mov
mov
lret
pop
sub
jmp
pop
into
mov
into
cli
mov
sub
lods
pushf
pop
xchg
gs
or
sbb
sub
dec
daa
aas
lret
adc
pop
add
sub
lods
xor
dec
dec
mov
stc
sub
loopne
push
ds
pusha
jecxz
adc
push
imul
cs
inc
add
call
push
sbb
pop
mov
loopne
push
push
rclb
sub
push
outsb
xor
sub
dec
dec
jl
dec
and
outsl
bound
push
jge
out
lcall
hlt
sub
ss
ljmp
cmp
bound
and
mov
js
dec
lcall
or
and
push
cmp
fstpl
in
mov
lcall
sub
inc
scas
in
pop
pop
jmp
jae
jmp
cmp
push
pop
adc
daa
adc
and
fdivl
pop
cs
sahf
push
maskmovq
dec
jle
adc
int
push
jl
ds
push
out
insb
or
mov
dec
aas
sbb
out
mov
cs
int
insl
jl
aas
aam
jbe
sbb
insl
int
int3
aas
sbb
fnstsw
int3
dec
jl
push
outsb
scas
or
cmp
cmp
ljmp
dec
lods
push
push
out
sbb
fcmovu
fsubp
xor
pop
sub
int
lea
pop
jl
test
pop
roll
adc
aad
mov
lret
mov
call
insl
int
lods
movsb
or
iret
or
jge
sbb
cltd
mov
cmp
in
jle,pn
outsb
push
pop
lea
sub
je
ljmp
dec
mov
cmp
call
xor
sbb
popf
cmp
inc
imul
jb
sar
add
push
popf
sbb
xchg
jl
inc
jnp
add
les
mov
sbb
push
or
sbb
sbb
sbb
cmp
fwait
dec
sbb
pop
outsb
or
lahf
mov
sbb
sbb
sbb
fisttpll
pop
sbb
aas
ja
std
xchg
fcoml
fdivrl
pop
cmp
cld
pop
sbb
pop
mov
lods
pop
xchg
out
imul
data16
sub
sahf
lods
lcall
into
nopl
or
test
dec
jg
cmp
addr16
push
leave
dec
sub
ljmp
mov
mov
xor
das
into
test
popa
mov
pop
out
mov
arpl
out
or
pushf
decb
cmp
and
fwait
inc
stos
xchg
pop
cmp
out
shrb
jmp
push
jg
mov
sbb
pop
scas
psadbw
dec
lret
dec
fnstsw
mov
jo
pushf
and
xor
jbe
leave
pop
pop
lock
mov
fmuls
jmp
insb
mov
dec
scas
xor
test
insb
idiv
fimull
pop
test
push
pop
sub
sub
xchg
push
lret
jae
lret
fsubl
inc
insl
jmp
les
dec
fdivl
test
push
pop
mov
fidivrs
out
mov
mov
and
cmp
ja
pop
call
dec
dec
ret
fs
jge
stos
cli
cmc
mov
dec
mov
dec
stos
push
ds
movlhps
jl
pop
scas
cmovl
stos
ljmp
pop
roll
stos
push
sub
jle
jmp
cmp
push
inc
leave
mov
jecxz
subl
sbb
int
int
and
push
push
leave
jmp
lret
mov
ret
mov
je
dec
inc
call
into
data16
dec
inc
icebp
fldenv
add
pushw
incl
or
sbb
lock
or
sub
cmc
test
fwait
push
jmp
rcr
je
xchg
push
jae
loop
shl
addb
pop
xchg
dec
mov
aam
outsl
or
in
sbb
stos
xchg
in
cwtl
dec
scas
outsl
repnz
fldcw
sub
and
sub
mov
push
dec
ret
gs
or
adc
out
imul
jg
adc
mov
sbb
js
loop
fmul
mov
mov
loop
insl
mov
fildll
cmp
mov
add
sbb
out
sub
jp
pusha
sbb
fldcw
sub
cmp
cmp
xlat
enter
mov
in
ja
dec
push
aas
das
imul
ljmp
push
dec
inc
stos
sbb
loop
push
idivl
mov
das
dec
fs
out
jno
pusha
pop
pop
inc
pop
push
jmp
lods
dec
scas
cvtps2pd
sbb
push
fdivrs
cmc
les
mov
inc
das
pop
dec
scas
out
popf
dec
sbb
cmp
sbb
int3
cmp
mov
std
fucomi
dec
bound
cmp
push
dec
in
pop
or
jp
mov
pop
cmp
mov
xchg
aam
test
mov
out
cld
pop
call
ficoms
sbb
dec
jae
adc
sub
push
je
sbb
jge
into
pmaxsw
sub
cmpsb
pop
dec
pop
imul
jno
sbb
es
jecxz
int
mov
aas
dec
push
aas
jb,pt
xchg
pop
dec
mov
xor
mov
out
stos
adc
pusha
icebp
pop
jl
pushf
mov
mov
cmp
push
dec
inc
out
mov
jno
mov
push
sbb
outsl
hlt
mov
into
jo
jmp
jle
xor
cmpsl
outsl
mov
push
sub
push
cld
scas
sbb
sub
mov
sahf
out
js
or
ret
test
fidivl
xor
inc
scas
jb
outsl
lahf
adc
test
sbb
jne
lock
mov
imul
jmp
aad
mov
sub
or
xchg
mov
shrl
mov
mov
lret
mov
out
outsl
fnstenv
pusha
lea
or
es
and
add
push
jb
pop
and
lea
xorb
jne
xchg
lock
mov
outsl
add
lds
xor
gs
rcll
outsl
push
test
sbb
adc
add
mov
cmpsb
aas
in
outsl
jns
pop
aad
popl
xchg
pop
divb
jae
adc
in
call
xor
subl
pusha
xchg
sbb
outsl
push
mov
js
insb
ljmp
es
dec
mov
pop
subl
lea
out
xor
add
in
lds
es
ja
and
pop
inc
sti
iret
xchg
mov
popa
push
shr
and
addr16
mov
outsl
cs
mov
outsl
aad
pop
xchg
daa
inc
sbb
leave
cmc
and
mov
lods
loope
jg
adc
adc
mov
push
mov
dec
movsb
subb
xchg
dec
jl
sub
mov
cmp
mov
fwait
outsl
adc
insl
and
mov
sub
push
dec
lock
loopne
in
jne
rorl
out
or
mov
insb
lret
adc
pop
repz
movsb
arpl
inc
fsubp
outsl
rorb
mov
repnz
or
xor
outsl
into
out
scas
stc
xchg
fadds
jne
fidivrs
pop
add
mov
call
and
outsl
add
ss
mov
xchg
std
jb
or
mov
xor
cld
pop
xchg
pop
xor
out
hlt
mov
push
inc
orb
inc
inc
mov
addb
cmc
out
lock
cmp
push
xor
outsl
push
dec
ljmp
test
sub
stos
pop
out
jmp
ljmp
lret
xor
outsl
add
adc
push
andl
popf
and
mov
dec
in
and
xchg
jge
incb
push
pop
xchg
inc
mov
jne
xchg
js
fimuls
aaa
mov
cmpsb
mov
or
adc
loop
fisubrs
lock
or
jbe
out
sahf
bound
lods
icebp
push
rclb
pop
and
scas
cmp
jae
outsl
push
xor
jns
jge
sti
enter
outsl
cwtl
fdivl
dec
push
lods
mov
or
push
cltd
push
cmp
je
mov
outsl
and
sub
outsl
pop
sbb
in
gs
add
dec
dec
add
jne
cmp
cmpsl
xchg
mov
and
rcll
xchg
out
shlb
and
sahf
or
testl
jb
je
sbb
dec
cmpb
outsl
mov
negl
jmp
addr16
int
pop
push
jp
mov
or
loopne
xchg
mov
pop
sti
aaa
sbb
adc
outsl
and
cmc
inc
outsl
mov
mov
dec
jge
add
mov
cmpsb
mov
add
cmp
inc
jl
mov
rol
xchg
mov
sbb
jecxz
inc
mov
dec
push
or
mov
xchg
pop
mov
jb
jne
jae
and
fwait
iret
xchg
lcall
movsb
mov
lds
repz
mov
mov
lea
daa
arpl
xor
cwtl
nop
pushl
jge
stos
mov
shll
sbbl
sbb
daa
int
xchg
nop
outsl
adc
movl
mov
out
iret
jno
sbb
inc
sub
std
outsl
enter
mov
mov
xchg
pop
fldenv
jp
xor
xchg
pop
outsl
enter
add
pop
lods
inc
adc
out
jecxz
fmulp
inc
jb
mov
add
nop
xchg
pop
outsl
mov
mov
outsl
xor
in
push
jno
aas
sahf
aas
add
cmc
hlt
gs
cmpsb
aas
pop
add
inc
mov
or
clc
and
xchg
sbb
outsl
push
popa
jmp
mov
add
mov
aaa
outsl
pusha
push
mov
in
stos
popf
outsl
out
shrl
xchg
mov
mov
mov
pushf
adc
outsl
pmullw
movsl
jge
mov
push
jmp
lret
outsl
mov
scas
clc
push
mov
fldenv
or
push
dec
add
inc
in
je
popa
xchg
ja
dec
rcr
inc
outsl
xchg
leave
mov
and
mov
sub
mov
or
dec
outsl
cmpl
xchg
sbb
xor
pop
iret
les
mov
dec
pushf
xchg
sbb
loopne
imul
add
aas
inc
xor
out
lock
outsl
clc
popa
and
sbb
xchg
sti
push
jp
add
loopne
lds
addb
fdiv
mov
xchg
pop
cld
push
loope
jb
jle
test
cmp
mov
scas
push
jbe
push
jle
cmp
sahf
mov
inc
lea
icebp
mov
pushf
sub
adc
aam
sbb
insb
lods
fisubrl
inc
out
incb
or
jno
push
ficomps
lcall
jae
daa
lea
jge
mov
jo
sub
outsl
push
inc
fbld
mov
loop
mov
fldt
aad
mov
mov
jnp
mov
mov
dec
arpl
filds
shrb
adc
jmp
rdtsc
lea
inc
add
mov
mov
fstl
pop
cmp
xchg
das
lret
in
inc
gs
inc
hlt
inc
frndint
cmp
lret
jbe
arpl
or
sti
insl
call
push
sti
insl
test
push
div
inc
cs
das
add
mov
out
xchg
sbb
bound
push
mov
idiv
test
mov
jns
movzwl
or
out
mov
lods
cmp
sti
jo
pop
jbe
xchg
movsl
sub
insb
jo
int3
imul
dec
notl
sub
popa
and
cmpsl
cmp
pop
or
sub
jno
or
mov
mov
pop
rcr
pop
inc
push
cmp
jmp
filds
sub
fcoml
dec
sub
scas
ret
jns
mov
sbb
lret
sbb
or
in
test
outsb
cld
pushf
arpl
cs
sarl
adc
push
les
inc
mov
or
bound
mov
jnp
cs
mov
cmp
subl
adc
pop
pushf
in
aas
enter
jle
cwtl
iret
and
xchg
int
shrb
xor
inc
loop
outsb
jno
xor
jb
mov
cmp
inc
jge
xor
dec
pop
or
pop
pop
xlat
mov
pop
outsb
inc
mov
imul
cmp
loopne
xchg
pop
lods
add
dec
xor
outsl
bound
cmpsb
dec
add
mov
sbb
mov
addr16
dec
dec
popa
insl
addr16
ja
sbbl
pcmpgtd
dec
mov
loopne
pop
or
jns
ds
cmp
ret
out
data16
out
add
pop
adcb
outsl
sub
push
das
rorl
jnp
mov
mov
mov
pushf
into
xor
out
sub
cmp
je
imul
out
xor
jb
cmpl
test
addr16
call
add
popf
loop
sub
cld
mov
cmpl
or
add
sub
and
int
nop
pop
popa
jbe
outsl
out
cltd
push
setbe
mov
shrb
arpl
mov
shll
loopne
add
dec
push
mov
outsl
push
sub
das
sub
dec
xor
push
and
out
addr16
push
clc
scas
cmp
ja
pop
lods
fisubrs
aad
lahf
ss
jnp
aas
jns
mov
jae
loope
mov
cmp
jne
jmp
imul
fsubr
pop
hlt
xchg
out
repnz
jbe
pop
stos
clc
popa
xchg
dec
outsl
mov
int
test
pop
jae
and
outsl
cltd
and
mov
cld
aad
mov
or
outsl
fsubrs
push
lahf
jp
lcall
push
mov
outsl
mov
sbb
cmp
jecxz
cmpsl
fisttpll
cmc
pop
rol
and
movsb
xor
outsl
stos
push
lods
stc
dec
cltd
inc
fldt
fidivs
in
outsl
sbb
lock
jne
sbb
push
mov
mov
out
xor
xchg
dec
or
popf
les
sub
cwtl
or
mov
mov
in
mov
test
loope
enter
loope
outsl
in
sbb
xchg
lea
mov
pusha
xchg
push
ret
inc
adc
pop
sub
bound
push
cmp
je
fcom
inc
pusha
jp
test
sbb
in
mov
mov
cmp
mov
and
fsubrs
mov
ficomps
outsl
clc
xchg
fildl
popa
and
outsl
scas
imul
push
aas
push
outsl
pop
jo
sub
xchg
scas
pop
outsl
mov
xchg
mov
stos
add
jp
cmp
lret
adc
or
push
imul
cld
repz
test
inc
popl
fisubs
push
xchg
mov
call
aad
mov
and
stos
pop
or
jle
shrb
sbb
sbb
js
and
popf
xor
mov
inc
mov
jno
lea
push
shll
pusha
test
inc
shl
adcb
icebp
div
jbe
loope
inc
push
hlt
pop
sub
popf
cmpsl
outsl
jnp
jle
mov
jno
leave
sbb
xor
cltd
dec
and
mov
inc
add
mov
orl
mov
sbb
or
and
mov
ret
addb
lcall
mov
sbb
xchg
outsl
sbb
dec
outsl
mov
lds
leave
in
rcrl
mov
in
addr16
iret
or
mov
xor
push
test
adc
adc
xor
outsl
cwtl
jl
out
mov
adc
xchg
sbb
ljmp
or
cmp
scas
insb
outsl
test
je
scas
out
lock
cmpsb
mov
or
xor
mov
lcall
leave
in
lahf
outsl
sub
or
cmp
popa
mov
sbb
pop
and
add
push
mov
je
out
xor
aam
popa
sub
outsl
mov
add
add
jae
negb
ret
xchg
adc
add
pop
sub
test
arpl
sub
jl
mov
fildl
fadd
pop
adc
pushf
mov
jecxz
sahf
in
mov
sbb
outsb
cltd
mov
dec
xchg
int
jle
dec
push
add
add
fwait
pop
lds
in
gs
or
add
outsl
add
mov
or
mov
enter
outsl
lods
cmp
cmp
cs
sub
dec
fcompp
ds
cmp
add
adc
outsl
sbb
and
stos
pushf
adc
popf
sub
repz
sbb
leave
sub
cmp
push
test
mov
push
hlt
add
mov
push
mov
and
outsl
lds
shlb
mov
or
mul
pop
mov
push
dec
fs
outsl
int3
xlat
data16
imulb
xchg
cld
sub
popf
push
mov
jp
or
outsl
inc
cmp
hlt
mov
lahf
inc
lret
loop
mov
into
ljmp
jno
fwait
dec
lods
in
outsl
inc
jecxz
inc
stos
repnz
xor
sub
call
iret
addr16
das
and
mov
scas
cwtl
iret
mov
mov
lock
std
jg
dec
push
mov
outsb
push
jbe
dec
in
outsl
push
xor
push
jb
loope
bound
hlt
jns
xor
mov
aam
cmp
pop
and
stos
push
cmpsl
testb
push
and
pop
popf
clc
mov
mov
ljmp
fsubrl
mov
out
outsl
fs
iret
scas
bound
jb
movsl
and
push
jno
aas
fmuls
adc
dec
fcompl
ljmp
pusha
xchg
add
ret
pop
jmp
jmp
lods
arpl
aaa
xor
pushf
in
lods
dec
mov
mov
cmp
add
loop
adc
sub
sub
add
jmp
pop
dec
mov
outsw
jae
popf
inc
and
cmp
push
imul
push
xchg
dec
pop
lock
mov
mov
push
bound
in
outsl
lock
adc
pop
push
lea
aaa
inc
repnz
ss
ret
inc
mov
je
nopl
inc
ror
adc
arpl
arpl
pusha
xor
je
mov
fs
int
mov
rorb
sub
push
push
aas
mov
dec
jle
cld
push
pop
mov
pusha
push
pop
sbb
jp
into
pop
push
mov
fildll
imul
xchg
addr16
out
clc
fs
sub
lret
stos
out
sbb
cmp
js
cwtl
adc
sahf
sub
js
arpl
das
push
dec
loop
push
in
xchg
in
fcmovne
ds
inc
and
lea
ds
xchg
cli
push
sub
jg
jle
pop
jns
xchg
imull
outsb
or
outsl
xchg
xor
add
out
or
addr16
in
pop
and
je
pmaxsw
jge
insl
dec
notl
pop
xchg
divb
out
idivb
jae
sub
mov
clc
pusha
outsl
testl
inc
outsl
inc
mov
in
jle
sbb
dec
fbstp
imul
jecxz
shrb
clc
or
shrl
pop
scas
sbb
popa
js
aam
out
cmpsl
pop
outsl
pop
in
mov
outsl
addr16
shr
aas
dec
data16
xorl
inc
xor
outsl
jmp
leave
call
adc
xchg
stc
adc
jae
mov
scas
jle
incb
jl
test
ss
cmp
outsl
into
cmp
testb
ret
cs
outsl
mov
cld
mov
add
iret
stos
outsl
push
popa
jge
rcr
int
outsl
ja
xchg
cmp
sbb
mov
ljmp
cmpsb
cltd
mov
mov
fildll
cmp
mov
jne
ljmp
mov
xchg
outsl
push
lea
outsl
popa
add
iret
lock
mov
lods
jmp
or
inc
outsl
stos
add
pop
cli
lds
shlb
inc
pop
cwtl
jnp
sbbl
fnstenv
jle
lods
enter
push
fwait
cld
outsl
cli
imulb
cmp
movsb
cltd
lcall
js
pop
outsl
enter
test
xor
mov
outsl
fwait
out
xor
add
inc
mov
inc
js
rorb
inc
inc
mov
enter
lds
imul
xchg
mov
dec
movsb
outsl
push
insb
cmpsb
mov
outsl
adcl
adc
incb
testb
jo
inc
xor
sub
outsl
scas
and
lock
push
decb
stos
fstpt
dec
jne
fmull
mov
mov
ficoms
cld
jge
sub
jno
jno
mov
pop
dec
dec
mov
xor
stc
push
mov
in
jl
lods
and
pop
push
ret
push
push
mov
xchg
mov
out
mov
jno
jge
ds
shl
dec
insl
shrl
gs
pusha
jle
xor
in
push
aas
jne
rcrb
mov
cmc
hlt
dec
sub
jo
daa
or
insb
or
xchg
add
clc
std
mov
lock
jae
jae
add
sub
dec
out
lahf
cmp
push
enter
mov
push
negl
fnstenv
cmpsl
mov
stc
scas
lea
mov
ja
out
decb
daa
pop
fucomi
jno
jo
mov
ja
add
pop
imul
xchg
fdivl
or
and
add
outsl
out
inc
jae
mov
push
cmpsl
lea
xor
xchg
pop
outsl
sbb
and
adc
dec
and
add
out
outsl
pushf
push
jecxz
inc
sbb
decb
and
mov
cltd
bound
jnp
sbb
test
xchg
add
outsl
cld
sub
and
push
dec
outsl
dec
and
movsb
pop
leave
or
jne
inc
in
loopne
outsl
jge
scas
dec
pusha
test
lea
fldenv
dec
jmp
add
les
mov
jnp
outsl
ret
xchg
jmp
ljmp
push
pushf
jbe
sbb
add
add
lret
out
stc
push
scas
jb
ficoms
pushl
fisttpll
xor
push
push
and
aas
mov
imul
or
jbe
ja
fs
mov
insb
jmp
fs
lods
add
cwtl
pop
or
lcall
fimull
je
jmp
mov
nop
outsl
inc
sarl
clc
mov
push
adc
movsl
mov
jp
ja
xor
icebp
lret
adcb
sub
sbb
mov
inc
insl
arpl
sub
sbb
cltd
sub
ss
mov
outsb
xlat
xchg
jb
mov
mov
test
push
out
outsl
cmp
adcl
nop
adc
mov
mov
mov
add
xor
inc
popf
repz
pop
outsl
sub
mov
mov
mov
xchg
jge
outsl
sbb
adc
sub
out
subb
push
shrl
pop
inc
inc
mov
ffree
dec
dec
mov
cltd
xor
outsl
aam
sbb
adc
inc
faddp
mov
rorl
jo
jnp
outsb
in
loop
jl
push
nop
xchg
sarl
outsb
mov
sub
roll
mov
jns
add
popa
dec
pop
fbstp
pop
movsb
sub
pop
sub
dec
movsb
sub
das
movsb
jnp
jmp
out
mov
adc
dec
xchg
sub
int
icebp
inc
inc
inc
xor
repz
scas
arpl
lret
add
xchg
enter
pop
dec
sub
mov
add
pop
pop
loope
daa
aas
shlb
mov
inc
fstpl
fwait
daa
jae
sub
mov
das
ficomps
push
rcrb
fdivrl
push
iret
aas
insl
sahf
sbb
push
jo
sbb
jl
dec
ja
loope
xchg
pop
xlat
jns
sbb
in
pop
push
aas
arpl
mov
std
mov
loopne
inc
addb
popa
mov
scas
sub
adc
inc
sbb
flds
or
minps
jo
out
les
inc
addr16
pop
iret
push
cs
sbb
sub
fiadds
jmp
xlat
arpl
mov
adc
jge
addl
inc
sahf
lahf
iret
xor
insl
add
arpl
pop
xor
inc
das
test
jmp
dec
out
xor
mov
aas
pop
in
scas
lcall
imull
cs
and
jle
adc
andb
outsb
pushf
notl
out
aas
sub
pop
imul
int
adc
scas
fs
jp
into
dec
pop
push
cld
sbb
daa
imul
in
rol
jno
jo
mov
sub
pop
rcll
jno
inc
or
mov
std
sub
and
mov
sbb
sbb
pop
cwtl
iret
lcall
dec
pop
lock
sbb
or
push
cld
mov
sbbl
cmpl
jg
dec
rsqrtps
pop
jns
dec
pushf
cmp
adc
mov
dec
mov
aas
out
div
movsl
scas
and
out
outsb
in
je
aam
out
lods
push
data16
jecxz
loop
pusha
xor
sbb
xchg
mov
push
scas
shll
xchg
mov
ss
subb
jae
pusha
imul
sahf
aaa
das
fiadds
lea
sbb
lret
mov
dec
jle
cmp
jp
data16
daa
idivl
cs
dec
pop
inc
add
inc
and
and
ss
pop
push
cld
mov
in
xor
lret
inc
pop
and
in
push
je
mov
mov
xchg
insl
je
cmp
jae
sbb
or
mov
mov
lods
arpl
sahf
mov
mov
mov
jbe
sub
mov
jne
ss
dec
mov
sbb
insb
xchg
gs
orl
iret
jbe
and
pop
pop
sub
cwtl
iret
negb
pop
lahf
rorl
pop
sub
scas
xchg
ficompl
orb
push
sbb
ret
pusha
sub
int
jns
sub
mov
dec
into
adc
leave
sbb
pushf
outsb
ret
push
sbb
sbb
add
test
xor
xor
add
xchg
cs
jl
add
xor
sub
jno
gs
pop
das
and
notb
outsb
loop
cmp
insl
dec
loop
dec
mov
das
rorl
jmp
outsb
lock
in
shrb
or
mov
adc
mov
dec
out
dec
inc
repnz
repz
jg
mov
pand
xchg
jns
pushf
push
adc
add
xor
das
arpl
push
aad
lahf
inc
outsb
adc
and
repz
addb
bound
adc
shr
bnd
mov
loop
es
out
jge
mov
add
pusha
push
movsb
in
stos
shr
fs
outsb
repnz
and
cmpsl
out
adc
loope
icebp
jb
imul
es
dec
and
js
daa
cmpl
in
into
pop
bound
add
push
aas
stos
xchg
loopne
in
add
daa
and
fstpt
add
nop
clc
scas
pop
shlb
into
imul
mov
sub
scas
out
scas
push
push
adc
dec
pop
pop
mov
aam
clc
scas
sub
fcmovnu
adc
pop
rclb
dec
scas
jnp
push
jl
mov
jecxz
cmp
xlat
xor
data16
push
inc
insb
or
aas
mov
cmpsl
mov
imul
mov
add
cli
scas
loop
mov
pop
insb
repz
in
mov
cmp
out
jle
lcall
push
dec
jmp
jle
cmp
aas
dec
out
or
pop
inc
mov
inc
inc
xorb
cmc
pushf
jo
lret
mov
dec
out
jge
adc
outsb
xchg
xchg
mov
fdivl
stc
push
scas
es
outsb
int
loop
pop
lea
cld
sub
dec
lods
sub
sbb
pushw
jmp
out
in
mov
inc
lcall
mov
dec
in
xor
ret
jae
es
dec
into
data16
in
int3
and
lret
pop
push
sub
ljmp
push
lcall
cli
cmc
daa
icebp
shr
cmc
into
in
add
push
in
in
in
sub
sub
dec
aad
inc
aad
fildl
ds
loope
cs
jae
outsb
sub
add
push
cmp
pop
ja
addr16
aaa
es
or
jno
out
movsb
out
js
pop
call
jns
or
sub
ljmp
cmp
fimull
iret
test
cmp
pop
loop
mov
pop
in
nop
lods
cmp
scas
inc
xlat
ljmp
in
pop
insl
mov
insb
loop
mov
aas
out
loop
stos
iret
jae
test
jae
pop
cmp
or
push
out
sub
sub
in
pop
xchg
jae
pop
in
cmp
dec
outsb
add
inc
inc
faddp
repnz
iret
cli
cld
adc
sub
bound
imul
stos
addr16
pop
mov
lods
jle
enter
jo
test
scas
lret
push
scas
mov
xor
insl
xor
xchg
inc
inc
mov
add
pop
daa
xchg
ret
cld
add
fiaddl
outsb
or
mov
outsl
shlb
cmp
ret
test
stos
sbbb
cmp
test
clc
in
sbb
mov
mov
icebp
mov
and
cmc
mul
or
adc
sub
fnstsw
lea
outsl
mov
push
mov
add
movsl
daa
jg
fnstsw
xlat
push
ret
inc
xchg
cmp
stos
sbb
mov
test
outsl
adc
addb
or
loopnew
add
daa
mov
outsl
fs
jecxz
xchg
xorl
push
jne
sbb
push
push
aas
std
out
data16
gs
cs
ret
pop
arpl
je
aam
movsl
icebp
sbb
mov
add
loop
imul
jg
mov
fs
scas
inc
iret
cmc
sub
sub
test
cmp
daa
movsl
or
xchg
lods
sahf
cs
bound
inc
or
cmp
mov
push
mov
adc
sahf
int
enter
pop
std
outsb
fwait
mov
mov
mov
pop
pop
rcr
out
ds
inc
cmpsl
adc
js
or
faddp
cmp
fmuls
out
sbb
dec
inc
sub
dec
jle
xchg
mov
cmp
jo
mov
or
addb
adc
inc
cs
rcrb
adc
int3
ret
push
xor
inc
bsf
lahf
mov
xchg
popa
xchg
pusha
bnd
and
inc
sub
clc
xor
xlat
out
lods
add
mov
lods
inc
sbb
repz
dec
popa
out
mov
pop
out
shll
movswl
dec
loopne
cmc
and
loope
fimuls
aas
lock
push
xchg
inc
and
cmc
ds
jg
lret
fsubl
les
xor
xchg
ljmp
pop
addr16
sub
mov
mov
jnp
movsb
add
inc
lods
je
dec
insl
sbb
jb
lret
dec
je
jp
sbb
mov
test
mov
imul
xchg
push
and
aaa
and
and
dec
daa
xchg
lods
jp
stc
push
add
outsb
sahf
push
lods
mov
or
mov
mov
lahf
out
cmpsl
cmp
mov
out
push
pop
sahf
jecxz
xor
mov
mov
dec
cmp
sbb
pop
mov
out
pop
imul
cld
push
sub
std
jns
fdivrs
jmp
data16
outsb
lods
sub
movsb
push
bound
inc
sub
adc
mov
shrl
int
pop
sub
aam
sub
inc
fnstcw
or
iret
mov
dec
pop
insl
test
jg
lods
dec
xchg
ja
test
cli
jmp
push
xchg
fucomi
xor
jl
push
push
mov
push
fldt
iret
shrl
mov
dec
daa
pop
lds
sti
adc
fildl
mov
data16
pop
inc
out
sbb
sbb
es
or
sbbl
pop
mov
imulb
loop
mulb
leave
xor
adc
in
adc
push
out
aaa
out
sbb
mov
loop
pusha
bound
mull
xchg
jl
lret
push
push
jl
push
mov
daa
out
jmp
sub
movsb
inc
inc
outsb
or
js
popa
adc
jns
xchg
jae
pusha
lds
out
stos
xchg
push
xchg
or
jno
sbb
mov
xor
dec
insb
adc
data16
sbb
je
dec
mov
nop
or
fimuls
dec
rclb
add
loop
mov
lods
sub
insb
aad
cli
test
aas
sbb
pop
mov
std
inc
lcall
pusha
fmuls
test
test
sbb
arpl
out
jnp
scas
icebp
into
jle
mov
inc
hlt
orb
jmp
ds
mov
xchg
mov
pop
lods
push
mov
insl
or
jo
mov
pop
inc
insb
addr16
into
xchg
pop
jae
fisubs
xlat
sbb
mov
pusha
mov
sub
lea
icebp
rolb
mov
stos
dec
lock
ds
fildll
pushf
pop
pop
cmp
add
in
inc
outsb
ja
dec
insl
xchg
push
add
das
push
mov
cmp
cmpl
lret
mov
js
lret
popf
mov
sub
out
popf
lods
cltd
cmpl
dec
mov
or
mov
repnz
popf
mov
sti
cs
push
pop
pop
scas
repz
out
jecxz
cmp
outsb
push
mov
xor
jle
hlt
out
addr16
jmp
ss
push
ret
mov
push
sub
mul
mov
outsb
mov
fimuls
jnp
jbe
iret
mov
pop
insl
cld
push
sbb
mov
jbe
adc
mov
pop
jb
frstor
test
stc
adc
pop
out
lods
leave
jmp
data16
jmp
pop
lock
lods
test
inc
std
inc
mov
mov
inc
mov
loopne
add
imul
sub
mov
cmp
pop
mov
ljmp
lret
loop
adc
ret
test
pmaxub
mov
cmc
lea
dec
mov
out
pusha
jle
mov
rcrl
int
enter
cmp
stos
scas
add
jns
adc
ret
insb
sarl
and
addb
loop
popf
decb
ja
pop
test
dec
pop
cmpsb
ds
jge
mov
mov
dec
jp
mov
dec
rorb
dec
sbb
into
sbb
pop
das
fldcw
inc
jnp
pop
lret
sub
xchg
ret
push
inc
mov
or
js
cmpl
sbb
in
pop
ljmp
repnz
cli
lods
in
cmp
cld
inc
mov
push
pop
push
cli
out
loop
lcall
das
jge
das
sub
dec
add
cli
fidivs
insb
ljmp
jbe
cld
cmp
scas
inc
scas
xchg
push
out
dec
fstps
add
pop
enter
arpl
bound
push
mov
pop
das
popf
imulb
loop
lea
mov
mov
stos
jae
xchg
adc
sahf
or
cmp
mov
out
sub
pop
dec
sbb
arpl
je
xor
mov
ljmp
shrb
lods
and
jl
inc
aaa
in
fucomp
sbb
cmp
or
push
out
push
push
ret
xor
xor
ja
js
lea
imul
mov
dec
in
hlt
stos
xchg
shlb
sub
push
xorl
pop
stos
test
sbb
pop
or
push
icebp
imul
sub
rorb
lds
inc
aas
and
push
movsb
sbb
inc
lahf
inc
cmc
mov
mov
popa
loop
orb
aas
lods
repnz
mov
je
fwait
pop
loopne
and
es
arpl
jge
shr
xlat
test
mov
int
ffree
sahf
fs
or
pusha
sub
sbb
add
push
mov
xchg
mov
movsb
into
ja
jmp
cmpsl
xchg
in
add
xchg
pusha
mov
push
xorl
mov
and
cmp
dec
dec
adc
insl
into
mov
pop
loopne
mov
loop
mov
pop
sar
sbb
into
mov
inc
cmpsb
cmp
inc
jae,pn
mov
ja
mov
fadds
mov
int3
cmpsb
jg
sahf
stos
jg
aaa
leave
int
dec
ret
sbb
push
xlat
mov
fst
mov
cmpsb
popl
push
out
inc
and
das
mov
lods
dec
or
sub
cmpsl
cmpsb
sarl
lock
insl
mov
orb
fldcw
xchg
sub
jp
mov
outsb
fsub
cmp
mov
aas
push
pop
jae
jle
dec
mov
into
cmp
cmp
pop
lods
mov
pop
pop
dec
mov
sub
or
jno
fadds
cmp
mov
cld
mov
jg
rcrl
stos
adc
out
bnd
mov
sub
lret
orl
push
cld
outsb
mov
test
insb
imul
and
out
pop
arpl
leave
out
and
fnstenv
in
add
pop
pop
cmp
jmp
out
adc
jae
cs
inc
pop
stc
lea
add
aas
sti
xor
pop
insb
inc
push
shlb
push
inc
das
jo
inc
mov
mov
bound
add
lret
lret
sub
loop
adc
jne
lods
jno
filds
xchg
in
mov
pop
sahf
mov
roll
jmp
xor
and
out
jno
and
pop
cmp
and
sub
jns
lds
je
cmp
je
adc
and
lea
je
pop
cmp
inc
push
cmp
repz
lods
dec
cmc
lock
inc
sub
mov
inc
sub
movsb
js
adc
test
sbb
push
test
sub
dec
stc
sbb
mov
loopne
out
gs
pushf
jle
inc
push
hlt
cltd
or
lea
push
les
lret
pusha
mov
int3
mov
mov
push
jmp
inc
addb
mov
loop
mov
fsubrp
xchg
push
pop
mov
fstpt
xchg
in
sub
jae
call
negb
inc
insb
or
out
jg
dec
dec
or
stos
sbb
cmp
pushf
add
push
or
pop
imul
dec
jl
lahf
outsl
loopne
push
loopne
daa
mov
aam
inc
mov
aas
bound
xlat
push
test
les
pop
repz
pop
fisubrl
aam
loope
mov
repz
sub
sahf
in
in
dec
out
fldl
movl
xor
xor
in
lfs
mov
cmc
fldenv
outsl
icebp
and
xor
jb
and
inc
rclb
scas
xchg
mov
call
in
cwtd
push
arpl
dec
icebp
jae
cmp
dec
mov
mov
loop
add
addl
shrl
bound
push
pop
mov
and
fisubs
cli
loop
sub
or
gs
aaa
push
dec
and
rolb
arpl
out
subb
sahf
movsb
mov
mov
inc
es
scas
push
aas
xor
adc
or
std
std
scas
add
dec
into
mov
dec
scas
push
xchg
mov
ret
xor
push
into
pushf
test
pop
aas
sub
mov
loopne
std
clc
pop
rcr
sahf
lea
out
aas
pop
div
mov
mov
or
ret
cmp
repz
mov
and
scas
into
pop
lret
add
out
cs
sub
in
cmp
cmp
cwtl
iret
dec
add
into
cmp
push
sub
cmp
jae
or
cli
cmp
pop
mov
xor
and
iret
insb
sbb
cmpsl
imull
jae
insb
xor
scas
sbbl
lahf
pop
add
push
dec
repz
mov
jg
stos
or
jno
pop
insb
and
mov
pop
cmp
pop
push
xlat
lahf
cmc
xor
jbe
mov
ds
fsubl
sub
mov
out
sahf
js
jns,pt
insl
jl
dec
scas
test
dec
dec
mov
add
dec
jno
popf
bound
ss
mov
jp
xchg
lods
je
lods
out
mov
test
jle
cmp
jno
lea
jbe
mov
pop
gs
mov
dec
jmp
int3
sub
adc
sti
cld
outsb
xlat
and
loope
scas
and
repz
sub
and
es
sub
xchg
sub
cmp
xchg
add
icebp
inc
push
cmpsb
jmp
fcomip
sub
and
sbbb
pop
inc
out
or
pop
outsl
das
mov
push
lods
lahf
stos
jl
mulb
cmp
push
pop
jl
mov
dec
in
jp
pop
insl
sahf
data16
mov
pop
pop
mov
push
fstpl
pop
lcall
add
mov
insl
xchg
adc
in
xor
lods
pusha
mov
mov
sbb
fisubrl
push
and
stos
into
push
ret
hlt
pop
mov
icebp
mov
aad
push
dec
fistpl
cld
xchg
push
push
lahf
xorl
xchg
cs
sbb
aad
push
lret
inc
xchg
fiaddl
lret
jl
loop
sbb
dec
mov
cld
fisubl
clc
iret
call
add
inc
ss
add
jb
and
push
decb
ds
ds
sub
sbb
out
mov
leave
mov
jp
mov
arpl
push
adc
insl
mov
mov
mov
test
stos
daa
inc
adc
andb
rolb
and
in
cmp
out
test
out
stos
into
mov
lcall
in
int3
cwtl
iret
fdivp
imul
dec
push
lahf
add
in
dec
lods
outsb
push
mov
xchg
lea
cmp
popf
js
daa
lds
lods
jno
out
xchg
sub
in
mov
addr16
mov
es
jno
cmp
in
mov
fdivrl
sbb
aas
dec
cmc
lods
or
jno
and
pop
push
xor
lret
rcll
arpl
lcall
aad
rcrl
push
insb
lret
sub
mov
ss
imul
test
adc
lcall
frstor
inc
and
pop
and
dec
and
and
cs
test
xor
out
test
into
daa
aas
mov
inc
sub
mov
lret
cmp
sbb
int3
test
iret
out
sbb
frstor
pop
or
mov
out
movsl
cmp
jmp
cltd
inc
loop
inc
inc
rolb
xchg
or
pop
cli
or
loope
sub
test
mov
push
ljmp
loopne
inc
ljmp
mov
mov
mov
cwtl
iret
scas
mov
cmpb
scas
dec
mov
imul
jae
dec
faddp
ror
movsl
xchg
dec
out
test
or
bound
xchg
cmpsb
es
lcall
pop
mov
add
ljmp
inc
out
fnstenv
jge
dec
outsl
and
adc
call
shrl
pop
pop
fwait
mov
fwait
pop
pmaxub
into
clc
out
data16
pop
out
jnp
dec
lods
arpl
shlb
std
fists
xchg
push
xchg
mov
xchg
dec
xchg
jge
xor
fbstp
mov
inc
push
sub
notl
jnp
popa
pop
sub
pop
into
or
dec
jbe
cli
jnp
jno
inc
sarl
into
cmp
imul
mov
pcmpgtd
inc
push
or
out
cmp
mov
repz
out
push
in
ds
jae
jmp
cmp
fidivrl
mov
pop
mov
and
jp
cs
imul
daa
pop
movsb
out
movsl
sub
aas
push
fcomip
lock
ret
mov
inc
push
xlat
stos
jg
aad
adc
arpl
subb
imul
xchg
mulb
mov
pop
test
scas
pop
xchg
adc
mov
xorl
call
mov
cmpl
test
sbb
or
iret
adc
andb
push
fildll
loopne
jle
and
shrl
and
xor
mov
fdivr
mov
das
inc
jle
sub
fldcw
mov
cwtl
iret
jg
cld
dec
mov
subb
mov
push
mov
dec
mov
popf
scas
ds
xchg
jnp
into
jo
in
cld
pmaxub
pop
pop
push
addb
mov
push
adc
loop,pn
xor
sbb
jo
sub
sti
out
mov
and
and
rolb
mov
push
mov
les
jno
pop
dec
nop
jmp
mov
and
adc
icebp
jbe
das
jo
gs
inc
xchg
push
test
jge
iret
outsb
addr16
popf
mov
push
fidivs
scas
out
jbe
nop
into
jae
inc
dec
mov
scas
mov
mov
das
mov
js
ss
in
xor
adc
scas
xchg
pop
cwtl
iret
faddp
push
repz
jno
js
cs
aas
sbb
outsb
stos
mov
icebp
adc
aas
adcb
pusha
out
xor
jmp
adc
inc
das
mov
leave
sbb
cmp
int
mov
inc
jl
fxch
fdivrl
push
and
mov
adc
flds
sarb
xor
inc
or
dec
mov
dec
out
push
pop
repz
xorb
sbb
fcmovnbe
scas
xlat
fldt
rolb
out
shrb
fistl
movsl
sbb
cmp
ret
loope
ficompl
repz
out
loope
hlt
sahf
lret
jae
arpl
in
pop
std
fnstsw
push
lahf
shrb
in
xchg
jae
faddl
fmull
loop
mov
sbb
lret
popa
je
mov
mov
lea
leave
test
mov
and
nop
mov
shll
fsubl
inc
sbb
cmc
rcll
out
das
cmc
push
mov
dec
test
sub
test
call
sbb
ret
cli
insl
push
andl
dec
insl
icebp
add
adc
jae
int3
in
mov
jbe
lret
xor
outsb
mov
mov
ret
xor
out
mov
cmp
test
iret
fdivrp
call
shll
loop
mov
outsb
cmp
aad
mov
out
mov
mov
ja
stos
push
bound
and
push
out
lea
cmp
jmp
lret
jae
cld
jbe
addb
xlat
cld
mov
dec
inc
loop
xchg
repz
fmull
add
imul
aad
subb
jae
out
cmpsl
lock
cmp
lds
mov
adc
hlt
or
jno
lods
out
push
outsl
hlt
sahf
out
dec
cmp
cmp
xchg
repz
in
bswap
out
mov
jae
loope
fimuls
inc
fwait
and
daa
jne
and
iret
fistpl
mov
out
pop
lret
cmp
jmp
xor
xor
mov
sarb
jnp
imull
aaa
push
outsb
repz
dec
fisubs
sbb
inc
add
jle
cs
subb
sarb
xor
jecxz
push
mov
call
fwait
cmp
clc
mov
rcrl
mov
xchg
jae
xor
sub
mov
out
lods
in
inc
out
mov
jb
outsb
out
cmp
movsb
ret
sub
ror
jmp
imul
mov
mov
idivl
jecxz
jmp
dec
ljmp
and
test
push
loopne
in
inc
push
xchg
in
pusha
les
mov
and
test
push
mov
dec
lds
mov
inc
jo
push
push
inc
mov
arpl
inc
push
outsl
dec
into
fimuls
xlat
clc
imul
lahf
test
xor
movd
in
adc
or
fdiv
pop
sub
cmp
cmc
xchg
ret
mov
cmpl
mov
rcll
inc
lods
insb
or
mov
insb
mov
outsb
pushf
ja
jo
jl
push
aaa
xchg
xor
xor
daa
aas
aad
movsl
jns
mov
sbb
jl
test
mov
lods
mov
push
xor
fs
ret
xor
rclb
xchg
dec
fs
imul
jmp
std
adc
lahf
loop
xchg
rorb
loop,pn
mov
or
dec
leave
insb
jp
psrld
dec
inc
data16
mov
ja
add
out
jno
fstpt
test
dec
and
add
and
aas
or
shrb
inc
push
sub
gs
push
lret
fnstcw
loop
leave
push
lods
push
mov
push
jmp
jmp
mov
pusha
aas
dec
out
inc
aas
xchg
inc
mov
pop
cmp
lret
out
push
popa
pop
jbe
arpl
jg
push
jle
loopne
xchg
rorl
fisttps
outsl
lcall
fs
ficoms
in
addr16
rcr
sub
loop
scas
test
lahf
xchg
outsl
cmpsl
push
push
cmp
mov
je
mov
mov
jne
arpl
movsb
mov
dec
jb
jno
ljmp
lcall
fstpt
outsl
cmpsl
in
sti
aam
mov
arpl
repnz
jbe
arpl
nop
xchg
subl
sub
bound
shrl
pop
mov
outsl
int3
mov
leave
fisttpl
pop
stos
xor
nop
pushf
ret
call
imul
xchg
outsb
inc
scas
rcr
push
xchg
outsl
sub
fsubrs
outsl
pop
adc
dec
div
mov
push
outsb
mov
pop
sub
insl
call
outsl
out
ja
fnstcw
lret
mov
mov
dec
insb
jne
dec
aad
cmc
outsl
mov
clc
daa
sbbl
bound
rorl
arpl
xor
bound
jp
fdiv
scas
mov
push
lods
cs
cwtl
clc
sub
sub
jns
push
jb
cmpsl
js
outsl
inc
mov
int
add
outsl
jne
xorb
cwtl
adcb
shll
outsl
inc
repz
shrl
mov
sbb
cmp
lea
jns
adc
sub
sbb
mov
rep
jecxz
fisubrl
aas
outsb
and
jbe
fbld
or
and
inc
ret
mov
add
push
sarb
xor
xlat
or
ljmp
hlt
or
pop
pop
outsl
into
mov
push
dec
insb
std
mov
and
ljmp
jbe
xchg
mulb
xchg
jge
jp
movsl
xchg
adc
sbb
iret
or
ss
sahf
mov
and
outsl
xor
xchg
outsl
aad
rol
adc
push
add
addb
sub
test
xor
movb
scas
out
jmp
jle
cmp
adc
dec
jo
in
fwait
shlb
sbb
dec
push
in
jno
sub
pop
lods
stc
adc
sub
repz
and
cmp
bound
jb
sbb
inc
aaa
test
mov
fiadds
cmc
xor
jle
push
stos
xchg
popf
fisubrl
jecxz
or
xchg
pushf
jmp
aad
into
cs
das
sar
out
loop
mov
jnp
push
popa
orl
or
daa
fdivr
outsb
sarl
xchg
sub
out
sar
out
incb
loope
dec
ret
lods
mov
scas
push
scas
sub
loopew
push
and
pop
negb
push
xor
dec
ret
inc
sub
sub
xchg
jecxz
jmp
das
fstpt
popf
inc
sbb
xchg
fadds
pop
push
xchg
sub
push
out
das
mov
or
icebp
out
push
shrb
mov
sbb
int3
mov
sti
sub
test
or
jno
or
fidivrs
cmp
dec
push
ja
xchg
pop
jge
pop
addr16
jle
mov
sahf
test
pop
loope
jbe,pt
bound
mov
cmpsb
cmp
sub
push
lock
adc
sub
inc
add
psubq
and
mov
ficomps
mov
ja
lea
pop
arpl
push
xchg
inc
scas
stos
jg
jb
aas
loop
fistps
ja
idivl
dec
ret
xor
shrb
jnp
mulb
and
pop
into
xor
add
dec
cmpsb
into
stos
jg
pusha
push
scas
adc
push
rcll
out
dec
pop
frstor
enter
adc
imul
jg
lds
jmp
xchg
sub
jb
and
and
mov
sub
loop
cli
sbb
mov
or
jno
mov
cld
add
decl
pop
sub
push
lods
and
inc
sub
add
scas
outsb
pop
fimuls
dec
sub
sbb
or
sti
pushf
jmp
movsl
loop
dec
outsb
cmp
sub
sbb
push
sti
subps
pop
pop
mov
adc
jae
cmpsb
daa
insl
jno
xor
fstl
lea
movsl
adc
xor
je
sub
jne
insl
jo
push
push
test
stos
jg
daa
cmp
pop
xchg
sub
xlat
outsb
or
pop
dec
movsb
out
xor
cmp
outsb
subb
test
stos
jg
cmp
cmp
pop
jae
xlat
in
sub
sbb
adc
mov
cmp
inc
mov
ds
outsb
xchg
mov
dec
add
in
push
fs
scas
jl
xor
push
scas
repz
fcoms
and
pusha
jns
dec
pop
inc
shrl
ret
and
js
push
popf
jmp
out
orl
and
cmp
push
cmc
mov
mov
fisttpll
mov
cmpsb
mov
jecxz
jno
iret
out
popf
sub
push
inc
mov
hlt
cmp
subb
inc
jbe
cmpsl
lcall
jmp
dec
lret
sti
cmp
iret
ds
in
loop
fildll
pop
imul
cmpsl
push
xchg
jae
outsb
arpl
loop
xor
cwtl
iret
dec
mov
std
insb
call
out
jle
lret
xchg
xor
outsb
sbb
add
dec
mov
das
fsubl
dec
ljmp
mov
push
dec
repz
jne
lea
jbe
pop
repz
xchg
pop
push
sbb
mov
or
sub
and
out
push
daa
or
cmp
daa
test
dec
dec
or
xchg
fstpl
out
pop
movsb
cmp
push
push
jg
cmp
or
sbb
test
outsb
mov
pop
and
aam
clc
ss
test
lea
insl
mov
addl
xor
mov
push
or
xchg
retw
and
pop
push
sub
ljmp
cli
scas
loope
in
jb
and
jmp
lods
into
mulb
into
pop
sub
scas
cmp
fdivp
and
pop
mov
outsb
out
out
out
daa
notl
cmpsl
dec
pop
push
dec
lods
push
je
bt
daa
inc
xchg
aad
jp
fcompl
pop
and
sub
mov
das
mov
loop
ljmp
push
mov
cmp
sub
sbbb
aam
mov
sar
mov
mov
push
testl
scas
aaa
lea
jno
insl
pop
mov
ja
push
mov
mov
lahf
jb
pop
jl
cmp
and
out
jle
sbb
out
hlt
cmp
mov
lock
mov
sub
xlat
adc
js
and
jbe
outsb
loop
cmp
pop
in
inc
fstp
lea
jbe
inc
lret
mov
lock
dec
icebp
aas
into
cmp
mov
sub
fsts
sbb
jb
xor
sub
in
sub
cmp
inc
pop
ret
mov
xlat
inc
negl
sbb
ja
inc
lock
insl
ja
out
xor
mov
add
jge
jns
outsb
cs
repnz
fwait
sbb
jle
outsb
lcall
jle
in
jle
pop
adc
mov
jge
mov
jmp
add
data16
xchg
sbb
jmp
adc
jge
pop
data16
inc
pop
jge
pop
sbb
scas
pop
and
movsb
sbb
mov
adc
sbb
lods
pusha
loop
pop
jle,pt
ds
orb
lret
sbb
data16
push
lahf
mov
sub
hlt
sahf
mov
cmp
pop
jno
popf
or
in
cmp
jns
inc
loopne
iret
push
leave
std
test
pop
xchg
jae
scas
fnstcw
mov
and
cwtl
iret
sbb
cmp
inc
outsb
loop
push
das
mov
cmpsl
inc
jb,pt
inc
in
jl
pop
in
popf
es
push
popf
pop
or
hlt
in
into
sub
cld
sub
or
or
mov
mov
sub
pop
sub
sbb
push
pop
repz
mov
dec
nopl
or
aas
fs
test
repz
imul
pop
push
pusha
int
fidivrs
sub
cwtl
iret
sub
psllq
out
ljmp
sub
mov
pop
dec
pop
and
dec
pop
cs
std
inc
std
pop
popf
in
outsb
push
cmp
stos
sbb
out
add
shrb
fisttpll
or
dec
mov
je
int3
mov
mov
movsb
cli
lea
push
xor
mov
aaa
pop
orl
sbb
jge
out
fildll
in
mov
sarb
xchg
stos
icebp
cli
adc
out
jecxz
out
or
cmp
das
das
xchg
jno
xchg
dec
insb
stc
dec
cmc
push
loop
std
stos
lods
sub
pop
je
push
mov
cmp
mov
out
testl
sub
xchg
das
neg
dec
mov
or
add
cld
pop
mov
je
mov
aas
push
out
mov
popf
jbe
jle
inc
mov
inc
mov
dec
inc
addr16
das
pop
sub
mov
inc
das
fs
mov
les
push
aas
mov
mov
xor
loopne
mov
mov
pop
jnp
mov
outsb
mov
out
outsb
add
scas
int3
out
or
sbb
insl
out
sbb
call
inc
ucomiss
popa
xor
addr16
dec
addr16
adc
dec
fldcw
daa
iret
and
pop
jmp
fldenv
stos
lcall
loop
imul
add
shll
sub
shlb
adc
ret
loopne
lahf
mov
push
imul
int3
mov
xchg
addr16
pop
jnp
jp
test
pop
shrb
xor
stos
push
shrl
insb
out
push
ljmp
xorb
out
mov
rcll
pop
je
push
push
cs
dec
push
xchg
pop
xchg
pop
pushf
call
cwtl
sbb
xchg
addr16
loope
std
add
sub
test
pop
xchg
sbb
push
cmp
sahf
sbb
pop
xor
call
jae
xchg
and
dec
dec
addr16
fnsave
out
fmuls
cs
loope
lret
lret
inc
stc
inc
inc
mov
mov
in
sub
push
dec
adc
notb
cmp
and
imul
js
sbb
call
test
push
stc
fmuls
lods
dec
insb
pop
cltd
lret
pop
cmp
add
scas
add
mov
out
adc
push
dec
fldcw
mov
test
jne
sbb
and
loopne
cmp
or
push
jecxz
in
flds
sbb
jns
test
pushf
jg
nop
and
and
filds
mov
addr16
movsl
mov
daa
fldcw
dec
fidivs
repz
sub
and
ds
or
lahf
inc
test
xor
pop
sahf
adc
mov
out
lock
cmp
mov
rcrb
fisubrs
cmp
jnp
push
mov
aas
xchg
jp
or
je
sub
lods
cmp
lods
add
jmp
push
ss
cmp
mov
pop
iret
pop
outsl
pop
pop
ds
pop
push
dec
cs
test
outsl
cmp
dec
cmp
outsl
dec
inc
push
cmp
sbb
push
push
cmp
sbb
inc
outsl
inc
aaa
or
sbb
xor
sbb
sbb
daa
xor
sbb
pop
xor
cld
es
and
and
adc
or
pop
push
add
add
sti
cli
stc
clc
imull
cmc
hlt
repz
lock
fcomps
scas
xor
es
rcrb
das
inc
addr16
dec
ds
dec
push
or
inc
leave
push
add
sub
inc
dec
in
push
scas
sub
fcompl
or
pop
xor
or
fcompl
inc
aaa
call
aaa
fbstp
xchg
je
lret
movsl
outsl
addr16
add
jp
mov
fs
pushl
fwait
loope
outsl
popa
and
cwtl
push
icebp
sub
pop
cmc
mov
outsl
ret
repz
ror
lea
inc
add
lret
outsl
sbb
dec
push
jp
push
mov
ret
test
push
incb
fisubrl
push
imul
pusha
xor
push
cmp
aam
cli
and
sar
fidivs
std
pop
rcrl
test
xchg
fbstp
mov
pop
and
outsl
xchg
adc
roll
xchg
push
rep
push
xor
sti
add
imulb
test
stc
cli
mov
add
fistps
or
call
lmsw
or
xor
xchg
outsl
pop
imul
mov
adc
add
outsb
cmpsb
enter
ja
mov
mov
daa
cmp
fs
xor
mov
sbb
int
pusha
movl
mov
fdivr
fstl
cmp
add
add
mov
rcrb
cmpsb
outsl
cwtl
sbbl
dec
js
xlat
push
adc
add
stos
imul
push
jno
idiv
mov
mov
out
or
jae
sbb
ret
mov
mov
clc
outsl
add
mulb
outsl
mov
xchg
stos
outsl
add
movsl
inc
test
jmp
push
repnz
adc
enter
inc
pusha
js
iret
subb
add
lahf
sarb
sbb
int
repz
xorb
out
outsl
push
or
mov
outsl
jmp
rolb
aaa
mov
mov
int3
out
sarl
lods
sbb
dec
icebp
fcomi
dec
addr16
int3
mov
inc
outsl
xchg
lea
lcall
ret
outsl
ficoms
mov
lret
outsl
push
mov
inc
pop
ret
ja
jle
jmp
enter
lea
pop
mov
xchg
hlt
imul
push
iret
in
daa
outsl
lahf
in
xor
imul
inc
xchg
outsl
xchg
mov
mov
cwtl
addr16
add
iret
lcall
popa
push
mov
fldcw
cmp
insl
xor
add
cmpsl
jmp
lahf
jle
pop
push
andl
push
pusha
inc
outsl
pop
sti
jmp
cmp
leave
mov
dec
icebp
cmp
rolb
xchg
jmp
jp
scas
fwait
int3
cmpsl
or
adc
outsl
add
mov
mov
inc
lods
dec
outsl
push
or
mov
or
inc
addr16
jo
push
push
fistl
outsl
pop
idivb
nop
adc
outsl
xchg
roll
fildl
in
mov
movsb
sub
mov
jo
jecxz
popf
push
test
mov
shll
and
test
outsl
mov
and
outsl
mov
inc
aad
add
sbb
out
sub
sbb
inc
rcrb
xchg
mov
xor
movsl
outsl
cli
mov
sbb
loope
jge
sub
push
or
cltd
adc
stos
outsl
and
or
iret
cmpsl
fwait
sbb
jmp
addr16
hlt
mov
aad
scas
add
adc
lret
popa
pusha
fwait
iret
jno
mov
adc
mov
outsl
xchg
add
ja
cmpsl
loop
inc
xor
xorl
xor
mov
shll
lret
sahf
mov
outsl
ret
jae
push
jno
xchg
popa
and
cmc
arpl
add
jae
or
cmp
jae
lods
std
outsl
loope
and
call
and
xor
cmp
jge
repnz
or
repz
fs
mov
dec
mov
inc
imul
pop
dec
das
pop
pop
ja
jo
mov
cltd
imul
roll
repnz
mov
enter
outsl
mov
je
outsl
ret
lahf
dec
inc
in
push
xchg
movsb
shrl
jns
enter
inc
outsl
or
jnp
stc
fstl
mov
mov
inc
xor
jb
in
xor
les
xlat
lods
outsl
sbb
cltd
stos
xchg
mov
pop
jo
outsl
shll
hlt
inc
mov
pop
test
pop
adc
xchg
aas
xchg
mov
xchg
pminsw
or
pop
mov
popa
push
cltd
outsl
xchg
push
adc
outsl
es
mov
js
push
loope
and
enter
outsl
lcall
sahf
outsl
or
xor
stos
scas
sbbb
jp
pop
int
sub
jnp
pop
or
jge
push
mov
bound
jno
cmp
lods
lock
loop
dec
jecxz
out
xchg
pop
popa
insl
mov
outsl
fildl
ljmp
ret
or
mov
loope
jno
pop
and
stos
and
xchg
imul
pop
xor
jecxz
outsl
add
gs
daa
ret
fwait
stos
jle
fildll
lret
lret
pop
outsl
sub
cmpsb
rolb
stos
dec
jno
jbe
lahf
outsl
cld
lock
nop
lods
pushf
iret
sub
ja
or
outsl
popa
add
jmp
into
and
xchg
push
or
cmpsb
jecxz
and
je
outsl
rcl
push
mov
add
sub
adc
orb
testb
outsl
inc
push
movsb
mov
leave
rcrb
pop
addr16
lahf
mov
icebp
jbe
xor
xlat
lret
jge
movsl
lret
xchg
jmp
aas
inc
out
and
push
dec
ds
aas
pushf
addl
mov
outsl
cmp
and
add
inc
mov
rorl
test
mov
enter
jae
jecxz
mov
pop
sbb
dec
sarl
xor
cltd
mov
outsl
movsb
sahf
imul
add
sub
add
sub
lock
out
fistl
jno
fwait
mov
sarb
leave
pop
dec
xchg
and
lahf
mov
mov
out
outsl
jle
mov
lcall
imul
loopne
jge
adc
pop
iret
stos
sub
xor
call
mov
into
pop
xor
jmp
outsl
out
mov
xchg
outsl
adcb
xchg
fidivrs
and
das
add
movsb
pop
xorb
aaa
sbb
inc
dec
popa
and
xorb
bound
js
popf
pushf
test
aaa
sbb
jo
stc
addr16
ds
outsl
mov
adcl
mov
aad
dec
xchg
push
addr16
jle
mov
mov
mov
jl
fbld
fnstenv
push
xor
xor
push
mov
outsl
aad
mov
sti
pop
lahf
outsl
xor
sahf
je
popf
es
out
cwtl
mov
outsl
jae
or
out
outsl
and
inc
xor
push
jbe
mov
dec
inc
jge
stc
arpl
aaa
insb
mov
lahf
push
adc
mov
dec
outsl
mov
add
lea
call
in
add
outsl
adc
and
lahf
pop
mov
sbb
push
sbb
xchg
jnp
shr
inc
xor
dec
cltd
mov
outsl
cld
lahf
js
and
mov
lds
adcl
and
outsl
push
fwait
jnp
nop
outsl
jae
loopne
inc
mov
sbb
xchg
mov
mov
jge
push
adc
xchg
lea
icebp
aaa
jge
arpl
pop
incb
into
aad
outsl
pop
mov
jns
pushf
pop
or
and
pop
sbb
cmp
outsl
pop
pop
jb
mov
lcall
iret
lea
out
pushf
bnd
and
insb
dec
or
pop
cmpsl
daa
les
xlat
lods
rorb
jns
arpl
jbe
adc
mov
jns
push
mov
shrl
testl
scas
mov
sub
push
outsl
push
jnp
repnz
jns
xor
inc
mov
aam
rclb
and
mov
ss
outsl
cmpsb
xchg
inc
mov
jmp
ret
cmp
xor
adc
pop
adc
hlt
in
mov
cmp
scas
stc
dec
push
sub
jmp
fldt
jbe
push
and
repnz
outsl
add
xchg
movsb
sbb
pop
inc
add
add
ja
arpl
js
daa
shl
std
arpl
xor
cld
pop
icebp
outsb
shll
xor
dec
push
or
iret
jae
adc
mov
roll
andb
lock
add
xchg
shll
iret
mov
test
or
shll
sbb
gs
fmul
sub
outsl
sahf
lods
mov
movsl
mov
jle
pop
jae
addr16
sub
or
fbld
and
scas
testl
outsl
nop
push
or
cmp
ljmp
xchg
xor
cmp
cmpsb
not
scas
shl
mov
fnstenv
or
ret
mov
outsl
shll
stos
xchg
jecxz
popf
sbb
mov
outsl
jae
cmp
pop
xor
pop
repnz
inc
imul
test
adc
add
mov
outsl
jnp
fld
jecxz
outsl
push
cmp
fisttpl
sub
jle
mov
cmc
test
scas
into
cmp
jnp
popl
xor
push
imul
lods
jle
outsl
cld
xchg
xor
xchg
mov
pop
sub
mov
les
arpl
stos
xchg
pop
in
or
dec
imul
sub
xbegin
imul
mov
pop
outsl
test
icebp
loopne
jecxz
enter
je
xor
add
stc
insl
xor
scas
test
adc
js
in
mov
xchg
iret
jp
pop
xor
adc
outsl
pop
sahf
cld
fdiv
mov
es
jb
or
xchg
aad
xchg
mov
adc
lock
sbb
dec
imul
lea
stos
dec
neg
push
jbe
es
adc
sbb
insl
lea
xlat
cmp
fnstcw
adc
popf
adc
add
cmpsl
fists
lcall
test
outsl
dec
lahf
xchg
cmp
mov
dec
in
repnz
outsl
cli
cltd
adc
popa
mov
nop
outsl
xchg
test
enter
sub
repnz
inc
jb
lret
mov
ret
mov
shll
sbb
mov
movsl
cmp
leave
sub
xor
loopne
mov
and
fwait
inc
hlt
outsl
mov
ja
cwtl
outsl
mov
cmpsl
mov
inc
sbb
imul
inc
je
xchg
or
sti
push
outsl
fcoms
push
dec
imul
addr16
cmp
pop
push
or
xchg
neg
andl
add
lahf
scas
outsl
notl
test
adc
outsl
add
sbb
xor
outsl
icebp
xchg
lock
addl
lods
xchg
cmpsb
test
jecxz
inc
sbb
call
push
rcrb
fstpt
inc
es
outsl
pusha
leave
jnp
repnz
or
xor
cmpsl
nop
jle
mov
jmp
mov
aaa
lods
dec
test
pop
jb
inc
mov
mov
insb
js
kmovd
outsl
or
nop
lods
jmp
xchg
scas
xor
mov
stos
push
outsl
and
aam
pop
mov
mov
lea
fwait
addr16
out
jns
adc
jae
ret
jo
outsl
pop
and
shlb
jmp
cltd
jge
out
outsl
pop
sti
xorb
or
outsl
fisttpll
enter
fwait
cltd
dec
outsl
mov
mov
adc
dec
outsl
jo
mov
jbe
adc
call
mov
and
xchg
cltd
jge
sub
sbb
outsl
mov
push
ja
mov
popf
push
and
xor
jge
lcall
bndldx
stos
sub
sub
shll
pop
loopne
rolb
pop
dec
punpckhwd
mov
jmp
and
jns
xchg
dec
inc
les
fisubrl
jecxz
push
jb
sub
mov
repz
jbe
add
xchg
jnp
adc
outsl
rol
imul
mov
mov
pop
fstpl
jae
shll
lahf
jno
fs
outsl
mov
pop
frstor
popf
xchg
pop
xorl
sub
mov
xchg
adc
rorb
popa
fwait
sbb
xchg
imul
push
add
push
arpl
xor
jge
lods
pop
add
jb
aaa
add
dec
inc
in
clc
fisubrs
pusha
xchg
jmp
out
xchg
sbb
cli
jbe
fwait
outsl
js
mov
jl
lret
mov
mov
add
pop
fimuls
jb
xchg
arpl
adc
cmp
xorl
mov
aas
mov
adc
test
and
fcmovnb
add
mov
inc
ss
bound
inc
mov
ja
imull
mov
testl
xchg
xchg
loope
pop
lods
cmp
rorl
xchg
je
iret
mov
jl
jae
jne
cltd
icebp
cli
adc
scas
mov
loope
lcall
jbe
in
pop
mov
lahf
adc
out
rcll
add
dec
loopne
ret
sbb
ds
icebp
cmp
inc
pop
imul
les
insl
sub
xchg
jae
push
in
push
iret
fldt
sub
mov
outsl
sub
sbb
mov
jne
outsl
jp
or
shl
imul
addr16
push
pop
jb
repnz
out
scas
fildl
les
clc
outsb
pop
xchg
mov
push
lret
adc
insb
cld
mov
enter
adc
outsl
pop
je
js
sbb
xorb
test
jae
mov
loop
rcrb
xchg
xchg
dec
scas
mov
lahf
mov
outsl
cwtl
xchg
sahf
and
je
or
outsl
xchg
add
outsl
mov
sbb
xchg
inc
lock
stc
insl
dec
sbb
mov
sar
subl
mov
cmp
xchg
mov
add
cmp
fs
jb
dec
add
push
mov
xchg
fstpt
outsl
mov
adc
inc
lahf
test
fwait
aas
shrd
push
inc
loop
mov
jg
cmp
out
sub
inc
jns
push
pop
xchg
sbb
push
loopne
outsl
add
clc
shr
out
mov
xchg
mov
xchg
jnp
inc
aam
insl
out
iret
mov
movsl
rcrb
add
lret
scas
push
aaa
adc
jle
out
ret
xchg
outsl
mov
mov
ret
mov
jnp
and
xchg
jmp
jle
sbb
js
loop
outsl
cmp
add
test
add
negb
xor
pop
imul
pop
outsl
add
adc
repnz
outsl
js
ja
jae
outsb
aad
add
cmpsb
add
push
mov
inc
out
imul
aas
fnstcw
fbstp
fs
jp
outsl
shlb
xor
les
mov
fs
xchg
or
imul
jb
lret
ja
cli
mov
jge
in
outsl
into
xor
insb
and
mov
sarl
adc
cmp
fstpt
mov
xchg
mov
and
ret
mov
mov
xor
insb
xor
outsl
sbb
iret
xor
inc
inc
mov
clc
mov
jo
mov
mov
mov
or
jno
jge
mov
add
push
int
rcrb
aas
data16
test
pop
iret
lods
mov
out
in
out
jl
pop
jbe
cmp
sub
in
push
jnp
adc
inc
fwait
or
xor
outsl
and
ja
adcl
inc
mov
shr
or
aaa
ffreep
cwtl
repz
dec
lock
sub
outsl
rcpps
sbb
repnz
dec
xor
rclb
mov
neg
popf
les
fidivrl
cmpsl
inc
pusha
arpl
mov
outsl
add
mov
cmp
loopne
pop
or
mov
outsl
inc
xchg
xorl
scas
mov
dec
inc
loopne
outsl
xchg
jge
aaa
ja
clc
outsl
rcll
mov
push
fwait
stc
btc
loopne
stos
xchg
outsl
lods
inc
nop
mulb
mov
ja
addr16
movsb
jnp
xchg
or
xchg
adc
dec
add
popf
adc
stos
xchg
mov
repnz
jbe
gs
and
cld
or
mov
fcoml
out
jbe
scas
ljmp
aad
fstpt
insb
push
and
xchg
mov
aas
push
shll
test
xchg
pop
jecxz
or
outsl
or
test
fs
ret
mov
js
cmp
aas
scas
xor
ds
bound
shrl
ret
add
arpl
xchg
adc
or
dec
push
push
mov
repnz
xchg
xor
push
cmp
fwait
mov
cmp
outsl
rclb
in
cmpsb
xchg
aas
nop
pop
xchg
jl
imul
mov
int3
xor
outsl
lahf
fwait
cld
xchg
scas
mov
pop
mov
fisubrl
sbb
iret
xor
lock
mov
pop
fsubl
push
leave
jne
mov
out
incb
cmp
lea
outsl
movsl
add
inc
lock
cmp
push
mov
pop
outsl
pop
mov
les
scas
jae
mov
xchg
lods
xchg
mov
imul
add
lret
add
ja
popa
cli
lock
int
mov
leave
add
dec
out
jmp
or
clc
xchg
mov
outsl
cwtl
rcll
rolb
mov
sbb
in
repz
or
push
add
push
xchg
aas
cli
adc
jb
hlt
shll
mov
sti
ja
adc
jnp
add
loope
lea
add
xchg
outsl
iret
jbe
shrb
adc
and
mov
and
test
outsl
mov
leave
dec
or
lock
lea
jbe
mov
mov
fidivrl
orb
inc
scas
js
jmp
hlt
fwait
lahf
sti
test
adc
mov
lea
lods
movsb
sub
dec
or
enter
dec
mov
dec
std
push
mov
loopne
lret
outsl
in
jnp
mov
cmp
pop
icebp
mov
or
jns
inc
lods
cltd
and
fwait
mov
jb
pop
rcl
mov
xor
jno
cli
outsl
mov
jge
jmp
xchg
cmp
std
popf
insl
pop
arpl
mov
popf
xor
xchg
xor
jo
sub
push
xor
shrl
test
and
adc
jne
mov
jge
adc
imul
or
jl
sbb
shrb
movsb
outsl
push
pusha
jns
das
xchg
addr16
jg
lcall
and
fwait
in
movsb
lret
or
fldt
push
dec
lret
stos
add
sub
scas
xchg
xchg
aas
xor
gs
jle
pusha
mov
subl
jmp
pusha
push
test
jno
xchg
outsl
ja
pushf
test
inc
add
cwtl
fs
mov
push
jne
mov
iret
mov
xchg
inc
test
or
mov
mov
cmpsl
jbe
push
jle
cltd
jl
jno
and
cmpsl
xor
pop
mov
sbb
jp
and
jbe
icebp
mov
jecxz
jge
mov
js
popa
cmp
xchg
outsl
in
and
or
xchg
in
imul
test
ret
xor
addr16
xchg
and
adc
adc
cwtl
jns
jno
icebp
sub
xchg
stc
inc
dec
outsw
lahf
hlt
idivb
iret
mov
cmp
outsl
adc
addr16
mov
xor
jno
clc
inc
pop
fmul
adcl
out
outsl
mov
xorl
xor
jo
iret
sbb
sub
filds
add
cmp
push
scas
ja
repnz
dec
jne
lahf
fimuls
push
cmpsb
dec
outsl
or
mov
mov
adc
adc
jno
add
push
outsl
jle
mulb
outsl
inc
push
fistps
pop
addb
lahf
bsf
outsl
movsl
test
iret
test
sahf
loope
xchg
mov
ret
in
cmp
add
mov
fs
arpl
fwait
xor
dec
fcomp
lcall
jo
xchg
jnp
xorb
mov
imul
jbe
sbb
outsl
pushl
push
xor
push
icebp
mov
rcl
xchg
lea
negl
outsl
jo
adc
add
mov
and
lcall
jo
jnp
divl
lock
or
adc
add
aam
decb
cmp
in
mov
shr
and
fcmovnbe
mov
cli
add
test
addb
dec
inc
cld
jno
mov
jae
int3
ficomps
aam
fbstp
mov
sahf
insl
in
ljmp
icebp
nop
adc
mov
cmc
xor
roll
filds
lea
aaa
mov
or
scas
add
in
jae
outsl
push
test
sub
ljmp
sub
popa
sbb
or
mov
fistl
test
ljmp
divb
jno
arpl
fiadds
negl
idivb
xchg
add
push
cli
sarl
mov
je
hlt
xor
cmc
int
dec
iret
imul
scas
rorl
mov
push
div
rcrl
lea
lods
ds
mov
dec
ficompl
pop
outsb
out
iret
dec
lods
aas
nop
fldt
sub
sub
ljmp
dec
addr16
das
sahf
mov
outsb
fucom
aas
cmp
mov
or
into
sahf
call
loopne,pt
out
adc
ljmp
test
cvttps2pi
pop
push
dec
cmovge
cmpsb
dec
cmp
out
mov
bound
pop
pop
xor
loopne
sub
test
and
loopne
imul
lods
lea
bound
int
aas
cmp
andl
or
testl
or
xchg
fiaddl
les
shrl
cmp
mov
test
dec
dec
pop
cmovns
iret
sub
mov
cmp
dec
push
sub
or
into
mov
cli
arpl
outsb
jge
xorl
es
fdivrs
sbb
or
stos
add
mov
fdivrl
dec
iret
dec
sahf
sub
into
xchg
push
xor
lock
sbb
cwtl
popf
scas
sbb
sbb
mov
into
pop
sahf
pop
sbb
dec
jb
ret
cmp
push
dec
out
dec
int
ficompl
mov
sbb
sub
jmp
dec
dec
lcall
pop
test
xchg
cs
cs
mov
sub
lcall
out
fscale
jle
mov
mov
fidivs
cs
or
ljmp
ret
loopne
daa
fimuls
testb
call
sahf
mov
aam
cltd
and
dec
cli
cltd
fucomp
testb
insl
cmp
mov
fcmovu
xor
cmpsl
push
scas
xor
cmpsl
in
mov
jl
dec
push
inc
jmp
mov
in
pop
pop
cmc
pop
dec
push
adc
pop
loop
dec
in
sbb
sbb
imul
imul
lcall
cmp
lock
sub
js
dec
sbb
insl
push
call
cmp
cmp
cmp
int
inc
jp
dec
jg
mov
aas
call
jl
mov
mov
cmp
cwtl
lock
push
xchg
lea
mov
xchg
mov
mov
jae
adc
aaa
dec
stc
sbb
insb
pushw
xchg
call
xchg
cmp
mov
cmp
mov
jnp
mov
stos
out
cmp
cmp
insl
outsb
test
and
imul
std
jl
out
sarb
push
std
push
jecxz
fsub
ret
pushf
dec
stos
jmp
pushf
or
in
idivl
mov
cld
xor
cs
sub
jp
popf
cli
push
mov
inc
mov
dec
xor
or
sbb
cmp
mov
out
imul
fmuls
cmp
xor
insl
mov
mov
cmp
outsb
jns
repnz
xchg
out
xchg
jge
jle
jmp
dec
pop
insb
sub
sbb
sbb
dec
cmp
mov
into
cmp
mov
or
scas
int
sub
data16
sbb
pop
int
imull
pop
jle
out
in
cmp
mov
sbb
jl
lods
cmp
xchg
test
sub
jno
add
aaa
mov
insb
dec
test
fdecstp
das
pop
sbb
call
xchg
sahf
mov
push
les
mov
decl
jge
and
cs
mov
dec
xlat
mov
aam
or
js
inc
jnp
fcomps
fsubs
lret
jp
rcrb
lea
and
jmp
xlat
sbb
push
sahf
jbe
xor
and
mov
inc
cs
sbb
mov
push
leave
subb
rcr
popf
pop
pop
pop
mov
aaa
sbb
jl
mov
test
pushf
cmp
data16
sbb
aaa
mov
scas
jg
inc
mov
lcall
adc
mov
sti
sti
sub
jnp
push
lods
loop
rcrl
pop
daa
mov
roll
xchg
daa
add
ss
xor
shrl
js
cltd
sbb
xchg
test
clc
repnz
push
mov
das
jo
lcall
nop
xchg
sbb
lcall
idivb
test
and
lret
or
stos
cwtl
jle
mov
sbb
xchg
in
pop
push
pop
fs
dec
cs
es
xor
popl
mov
push
notl
mov
mov
pop
rcrb
aas
pushf
jle
sbb
aas
jnp
push
jecxz
inc
in
mov
inc
lods
sub
add
out
nopl
fidivrs
into
mov
jo
jg
mov
daa
sti
aas
decb
scas
test
adc
jg
paddusb
jbe
ficomps
rorl
jecxz
pop
decb
pop
cs
dec
cmp
dec
push
pop
sub
outsl
push
in
dec
push
sbb
pusha
or
push
push
outsl
sbb
push
cmp
push
inc
outsl
inc
sub
cmp
or
cli
jl
in
add
inc
inc
inc
outsl
sub
sub
daa
sbb
xor
jmp
xor
std
int3
fcmovne
mov
stc
adc
sbb
ja
nop
jns
mov
iret
sbb
aad
ja
adc
xor
iret
dec
push
pop
inc
xor
in
push
repnz
dec
movhps
pop
ja
xchg
pop
popa
dec
jns
out
push
outsl
dec
pop
cs
out
dec
push
outsl
cmp
dec
push
cmp
ficoms
outsl
cmp
std
push
inc
sub
imul
cmp
push
inc
inc
or
or
sub
into
cmp
fmull
sub
sbb
or
daa
cmp
push
pop
xor
int
and
push
icebp
in
in
cli
push
stc
or
mov
cwtl
ljmp
in
loop
loope
out
fcmovnu
xlat
outsl
aad
rcl
rcl
fildll
lret
lret
mov
ret
jg
outsl
int3
fbstp
fwait
jae
outsl
outsb
int
ret
xchg
fldenv
in
hlt
aad
pop
or
ja
xchg
inc
les
arpl
cmp
sti
iret
mov
outsl
es
push
pause
xchg
inc
imul
dec
ret
jg
adc
and
cltd
or
adc
addr16
aad
insb
insl
pop
cmpsl
push
outsl
lret
push
cmp
adc
pop
nop
xchg
sarl
lcall
rcr
push
pop
mov
inc
outsl
test
xlat
sub
xchg
repnz
jp
jns
inc
add
dec
andb
sbb
mov
fwait
and
sub
outsl
mov
fiadds
sbb
jle
adc
outsl
or
xchg
pushf
fs
sbbl
push
mov
xchg
std
adc
or
inc
mov
mov
mov
std
mov
pop
clc
in
push
loopne
sbb
add
sub
sti
pushf
outsl
insb
cmp
add
cli
outsl
push
push
mov
outsl
lods
xor
pop
and
xchg
loopne
xchg
leave
pop
jle
fcompl
xor
out
std
dec
outsl
pushf
iret
sarl
lods
sub
jge
push
cmp
popf
stc
xchg
or
mov
inc
bound
push
adc
adc
outsl
insl
push
and
js
pop
mov
cwtl
scas
push
daa
repnz
insb
outsl
sbb
fbld
sub
inc
fidivrs
add
mov
xor
outsl
adc
lock
outsl
cmpsb
mov
add
outsl
fldz
dec
movsb
sbb
lods
outsl
jmp
sti
jecxz
outsl
sub
ret
cwtl
inc
outsl
mov
cmc
leave
pop
in
jp,pt
lds
cmp
cmpl
loopne
pop
imul
add
rolb
mov
rcrl
in
xchg
push
gs
sbb
jmp
jp
dec
adc
test
pushf
jno
aam
jae
mov
shrb
cmpsb
mov
xor
ficomps
mov
jb
sarl
xor
outsl
mov
push
out
adc
mov
imul
mov
outsl
mov
pop
sbb
cmpsb
sub
or
iret
jne
xchg
add
outsl
pushf
aad
mov
outsl
xor
dec
out
cmp
stos
adc
addr16
xlat
mov
popa
je
shlb
dec
lret
les
pop
xor
je
push
aad
dec
xor
pop
mov
pusha
jl
arpl
mov
mov
cltd
roll
out
pop
sbb
popl
add
outsl
or
pop
sbb
sbb
xor
cmp
loop
aam
outsl
push
pop
jge
dec
je
cmp
movsb
and
hlt
mov
pop
dec
jnp
push
adc
mov
loop
sub
pop
jbe
inc
dec
xlat
fisttpl
xchg
cmp
xor
imul
cmp
push
jno
pop
stos
pusha
adc
mov
xor
pushw
fxam
fwait
jne
addr16
repz
jle
pop
add
jp
addr16
outsl
inc
fsubrs
cmp
sbb
push
and
sbb
push
outsl
push
jne
xor
outsl
mov
inc
pop
lods
mov
jae
sbb
adcb
add
push
fs
scas
jp
dec
jge
or
dec
sbb
add
sbb
lods
pop
arpl
cmp
jno
outsl
addb
inc
mov
mov
int3
loopne
testl
je
aad
jmp
jp
movsl
xchg
sub
lods
fcoms
inc
outsl
inc
mov
dec
fsubrl
popa
jle
test
mov
outsl
test
dec
push
pop
mov
sub
leave
and
lahf
mov
or
sub
outsl
imul
repnz
stos
and
dec
out
mov
cltd
xor
inc
leave
outsl
add
aam
push
dec
outsl
dec
mov
mov
mov
outsl
movsb
out
mov
xchg
in
outsl
inc
lea
nop
adc
and
sbbl
jbe
and
or
mov
fldl
insb
addr16
xchg
push
push
cli
dec
andl
inc
lock
sbb
pop
outsl
pop
push
fwait
stos
ret
dec
mov
pop
jb
repz
cmpsb
aam
xchg
xchg
sbb
add
das
xchg
fldcw
movsb
xor
lcall
push
lds
mov
pusha
dec
pop
xchg
mov
jle
dec
fsub
outsl
jmp
lcall
or
xchg
jns
inc
mov
popa
xchg
inc
mov
movsl
dec
mov
test
sub
outsl
imul
es
jnp
lea
adc
jno
paddsw
and
add
cwtl
outsl
aam
pop
fcmovbe
sbb
scas
outsl
stc
mov
mov
and
add
mov
out
mov
pop
or
in
pop
rolb
cli
push
pusha
push
outsl
rolb
movsb
jno
fldcw
ret
outsl
shlb
and
inc
stos
xchg
lods
or
adc
xor
cmpsb
ret
inc
cmp
loope
into
aam
scas
cmp
jne
lock
cmp
outsl
lahf
jns
rcrb
stc
pop
popf
add
dec
outsl
ficompl
out
shlb
je
jp
xor
mov
addr16
add
movsl
xchg
cmp
lods
sti
mov
pop
and
das
int3
push
mov
jno
sbb
xchg
nop
mov
popf
test
dec
sub
xor
add
adc
les
xchg
clc
pop
repz
push
movb
into
test
daa
lcall
push
sub
hlt
outsl
mov
xchg
negl
mov
std
outsl
incb
and
cltd
or
test
xchg
push
clc
xor
aas
jbe
outsl
cli
push
mov
dec
outsl
sub
xchg
mov
mov
mov
cmc
or
je
adc
pop
lods
fnstenv
adc
iret
jbe
pusha
mov
cmp
push
jl
lods
mov
pop
xlat
movlps
icebp
xchg
outsl
mov
aaa
bound
push
call
mov
mov
push
outsl
lret
mov
add
add
call
cli
jbe
sbb
inc
push
out
sbb
enter
clc
push
cmp
dec
ljmp
jbe
sub
pop
push
mov
adcb
mov
adc
xor
lods
fstl
mov
pop
scas
call
sub
jle
mov
cmpsl
imul
loop
xchg
outsl
aam
js
jne
jns
mov
xchg
add
jle
cld
rcrb
imul
xor
dec
mov
push
imul
mov
aam
cmp
insl
cmpsb
sbb
mov
push
sbb
pop
inc
inc
fcmovnb
cmp
jge
lea
cli
jae
in
outsl
lret
imul
icebp
and
add
jno
inc
ret
les
outsl
inc
add
mov
add
jle
jl
dec
repnz
sti
mov
mov
outsl
mov
push
repz
aas
cwtl
mov
sbb
xchg
sub
jecxz
xor
jge
xchg
stos
add
add
test
cmc
loope
mov
add
add
outsl
movsb
mov
fistpl
mov
jo
inc
repz
flds
int3
fucomp
adc
popa
lods
incl
mov
testb
test
fwait
xor
fdivrl
mov
arpl
into
lods
fildl
push
mov
int
cmp
in
cmp
mov
fmull
mov
mov
mov
dec
xchg
popf
mov
xchg
sub
cmp
outsl
es
insl
fwait
sbb
jo
xchg
xchg
in
aas
mov
xor
ss
outsl
add
sarl
dec
cwtl
or
dec
and
cmpsb
push
add
push
mov
outsl
das
adc
or
pop
loope
dec
shll
test
sub
bound
xor
push
lea
es
lods
fs
insb
add
xor
in
insb
pop
cli
lret
outsl
jmp
cmp
sub
outsl
cltd
cwtl
mov
lret
pop
rolb
sarl
cmp
clc
pop
das
xchg
in
ret
mov
mov
cmp
loope
dec
lret
or
addr16
push
add
ret
addr16
sti
outsl
and
sbb
xor
cs
das
adc
cmp
mov
push
subb
outsl
mov
jo
pop
xchg
ret
sbb
pusha
js
push
outsl
cmpsb
adc
push
ljmp
cmp
nop
imul
sub
addr16
lea
aam
pop
mov
imul
mov
js
stc
outsl
scas
or
lahf
dec
rcr
mov
addr16
inc
cmpsb
cmp
outsl
push
mov
mov
outsl
push
pop
fists
push
sbb
nop
mov
cmp
stos
and
outsl
jb
push
addl
mov
pop
mov
lods
sub
cmp
pop
mov
xchg
inc
adcb
lods
or
outsl
imul
or
pop
mov
into
ret
cmp
sub
outsl
lret
aas
sahf
inc
mov
mov
mov
stc
les
ficomps
mov
ljmp
pop
and
and
jmp
popaw
mov
inc
mov
dec
mov
jp
mov
outsl
xor
pop
dec
sbb
popa
aam
scas
in
cmp
ja
outsl
out
sub
or
bound
outsl
mov
jecxz
cltd
leave
or
xlat
pop
or
repnz
push
jnp
cmpsb
negb
dec
inc
fwait
dec
pop
add
scas
add
outsl
jo
adc
shrl
mov
pop
inc
mov
insl
imul
sub
or
inc
dec
insb
inc
add
jnp
shlb
inc
test
hlt
xchg
sbb
sbb
in
outsl
and
nop
push
shrb
adc
mov
sub
outsl
xchg
add
ret
mov
pop
or
imul
dec
pop
inc
divl
add
aad
aam
outsl
lcall
mov
stc
adc
xor
rorb
sbb
sbb
flds
jge
push
addr16
dec
sbb
inc
outsl
mov
xchg
outsl
andb
mov
outsl
in
xchg
aas
push
jp
roll
out
outsl
mov
jns
incl
push
mov
fimull
inc
repnz
outsb
pop
or
cmc
fsubrp
xchg
or
sarb
cltd
fistl
pop
fists
xchg
mov
cs
aam
outsl
js
scas
mov
outsl
aaa
sbb
mov
pusha
push
or
adc
cli
xchg
cli
pop
jo
dec
insl
or
pop
jns
jno
mulb
outsl
mov
jb
and
dec
mov
divl
and
add
or
clc
mov
aad
int
stos
aas
cmp
outsl
mov
rol
outsl
mov
rcr
or
push
daa
xchg
jnp
mov
pop
fwait
add
outsl
jmp
xchg
outsb
enter
sub
cmp
xlat
lds
sbb
test
scas
push
and
add
lea
xchg
sbb
pop
insl
inc
adc
outsl
adc
jno
jp
mov
scas
dec
test
sbb
test
cmpsb
rolb
std
lds
jmp
inc
ss
lret
push
outsl
fwait
sub
outsl
rcrl
lds
outsl
shlb
scas
cli
addr16
out
push
imull
mov
xchg
xor
dec
idivb
pop
mov
add
inc
sbb
mov
outsl
hlt
aaa
rcrb
outsl
data16
fs
popa
mov
enter
mov
outsl
sbb
push
js
das
fcompl
pushf
sbb
les
xchg
fucomp
out
outsl
popf
push
sbb
arpl
add
or
jecxz
aas
push
fiaddl
filds
mov
pushf
es
test
mov
and
loope
fcomps
push
mov
xchg
pop
mov
cmpsb
or
add
outsl
and
xchg
jnp
inc
xchg
push
sub
outsl
popa
out
mov
xor
in
adc
imul
aad
pop
push
je
xor
leave
lods
jmp
mov
movb
mov
stos
mov
call
pop
cmp
sbb
outsl
bnd
push
sarb
outsl
stos
ja
clc
mov
outsl
mov
loop
aas
inc
xchg
jo
push
sub
cmp
inc
xchg
lods
and
outsl
inc
enter
int
cmc
sti
inc
popa
cmp
stos
mov
mov
and
into
scas
mov
sub
notl
pop
sbb
xlat
outsl
inc
xchg
mov
add
loope
mov
inc
insl
pop
jmp
outsl
lea
xchg
outsl
adc
rep
mov
mov
into
out
or
add
test
shll
xchg
jae
test
sub
inc
push
sbb
dec
outsl
cmp
xlat
into
call
ja
cmc
int3
outsb
les
mov
lret
push
xlat
mov
cmp
push
dec
outsl
pop
jp
imul
inc
outsl
cmp
xorb
fcompl
sahf
int3
inc
push
int
arpl
or
in
ja
push
lcall
repnz
push
lock
popa
fwait
in
movb
dec
lods
adc
mov
push
ljmp
rep
daa
lret
jle
out
lret
pop
jecxz
mov
cmp
pop
xchg
cmpsb
outsl
pop
lret
in
xchg
mov
js
orb
mov
mov
outsl
xor
icebp
leave
cmpsb
and
sbb
dec
outsl
bound
sub
sbb
mov
mov
pop
subl
orps
cli
inc
jle
push
lock
adc
add
aad
repnz
sarl
imul
fsubl
mov
mov
xchg
push
cmp
outsl
pop
mov
int3
outsl
inc
jno
xchg
mov
scas
ret
lods
mov
cltd
cmp
sahf
mov
add
sub
xchg
popf
nop
jmp
imul
scas
xchg
pushf
shrl
fchs
push
inc
and
outsl
and
jae
sti
pop
ret
sbb
jl
push
xchg
outsl
and
mov
fldt
add
adc
push
mov
aaa
jecxz
cs
push
or
mov
push
jle
iret
mov
je
dec
push
jmp
addr16
pop
out
stos
push
jle
das
xlat
push
imul
xchg
test
push
fidivrl
jmp
test
jo
mov
outsl
add
or
psraw
pop
stos
sub
bound
pop
jno
loop
clc
lret
mov
scas
push
push
jle
xor
mov
mov
dec
fcoml
out
mov
lret
test
push
lea
jnp
sub
push
xchg
jge
cmpsb
add
pop
lods
sbb
jnp
push
fwait
cmp
cmp
es
and
adcl
mov
pop
add
stos
mov
insb
sbb
shrl
mov
fmul
loopne
xor
out
aas
in
jb
icebp
xchg
xor
loopne
movsl
inc
insb
inc
pushf
lea
jb
and
int3
jbe
adc
mov
hlt
scas
sbb
mov
addr16
lds
fildl
aas
sub
call
ljmp
mov
sbb
scas
inc
addr16
cmp
aaa
nop
jge
gs
mov
inc
ljmp
outsl
aaa
or
fldcw
xchg
cltd
scas
jo
pop
gs
push
lods
repnz
add
add
gs
insb
xchg
int3
outsl
loop
pop
add
inc
push
pop
mov
and
outsl
or
into
outsl
push
lret
and
fwait
outsl
mov
xor
push
mov
adc
xchg
cwtl
pop
outsl
inc
ljmp
xor
or
les
and
outsl
jl
cmp
adc
lret
imull
sub
jbe
inc
outsl
sub
mov
outsl
cmp
cmp
xlat
dec
ficompl
pop
push
clc
mov
cli
xlat
das
push
and
and
cmp
mov
push
lcall
cmp
dec
stos
add
in
ja
cld
push
jle
sbb
aam
insb
gs
iret
xchg
adc
xlat
dec
gs
xor
cli
sbb
shrb
leave
daa
les
inc
sarb
sarl
mov
push
ja
dec
mov
cmp
xor
and
repz
push
mov
add
fwait
mov
and
mov
cli
rep
sar
sbb
in
pushf
outsl
xchg
mov
imul
jmp
push
insb
pop
jns
je
xchg
test
nop
outsl
movsb
mov
lock
mov
stos
jbe
in
sbb
pop
cwtl
inc
xchg
adc
push
add
jge
rcrb
js
scas
outsl
es
jb
inc
dec
in
and
pop
xchg
push
mov
out
mov
pop
mov
or
push
push
dec
jmp
mov
mov
out
inc
or
fisubs
pop
data16
out
outsl
mov
nop
lahf
outsl
fisttps
mov
sub
push
mulb
imul
ja
adc
mov
xor
inc
mov
jp
rcrb
stc
outsb
mov
jmp
outsl
sti
jno
jo
or
in
sub
mov
outsl
aam
rolb
cld
xchg
mov
xchg
cmp
xchg
loope
xlat
ja
je
lods
mov
fsubrs
ss
mov
outsl
inc
fisttpl
pop
scas
icebp
xor
clc
cmp
pop
mov
js
cwtl
addb
jmp
adc
or
fldcw
and
ja
jno
jo
xor
outsl
lock
pop
jne
daa
jmp
sbb
cmp
mov
call
fldt
fists
test
cmp
outsl
jo
jno
jbe
lds
outsl
jle
stos
mov
stos
test
xchg
clc
fisttpl
mov
rorl
adcl
and
sub
mov
ret
mov
stos
sarl
cmpsl
ja
push
pop
enter
popa
sti
rorl
popf
js
push
push
mov
cltd
cmp
adc
and
subb
sub
fdivs
xor
mov
popf
pushf
and
outsl
jnp
mov
mov
adc
push
or
insl
or
negb
xchg
loopne
loope
cld
dec
pushl
jae
jnp
leave
iret
scas
xchg
aas
pushf
sbb
loope
es
and
outsl
sub
add
outsl
clc
mov
movsb
outsl
inc
jge
insb
hlt
into
push
push
fistpl
add
es
push
push
add
outsl
iret
jle
lds
push
icebp
add
push
push
movsb
shll
or
fcomps
outsl
mov
stos
arpl
loop
imul
cld
jno
lods
fwait
xchg
shrb
dec
nop
js
movsl
outsl
push
xor
sbb
xchg
adc
in
pop
jbe
outsl
mov
xor
outsl
aam
mov
sarb
cmpl
cmp
loope
mov
sub
push
outsl
mov
ja
loope
push
fildll
or
add
out
adc
mov
cmp
cld
push
cltd
addr16
insl
fcomp
and
test
mov
mov
push
or
cmp
adc
rep
jbe
cmpsb
loop
jmp
cmp
sub
jb
xor
mov
mov
xchg
ret
daa
lcall
jnp
jb
mov
out
popf
jo
dec
arpl
andl
push
or
mov
pop
add
aam
jle
outsl
cmp
cmc
pushf
inc
outsl
jl
pushl
shll
cltd
inc
adc
fs
add
rolb
js
xor
iret
jae
xor
mov
inc
push
pusha
lock
lea
dec
mov
das
mov
cmp
dec
add
mov
repnz
add
in
loop
cltd
push
sbb
loopne
xor
inc
jns
push
adc
dec
mov
out
repz
and
test
movsb
pop
fs
arpl
push
data16
outsl
cwtl
jo
fcmovnb
nop
sub
mov
xor
out
adc
push
mov
les
arpl
bound
in
rcll
add
jle
jmp
sub
push
test
cld
loop
out
outsl
aas
scas
push
test
iret
dec
pop
xchg
xor
pusha
lahf
subl
jge
test
call
pop
jbe
outsl
sub
jnp
fimuls
sti
adc
cmp
add
scas
sbb
sub
es
in
ljmp
mov
sbb
call
dec
imul
mov
outsl
incl
sarl
mov
out
cmp
jns
fidivs
cmp
fwait
mov
push
jne
sbb
push
bound
fbld
and
sbb
data16
push
outsl
mov
xchg
lcall
popa
inc
jbe
imull
push
outsl
ret
pop
pushf
sbb
dec
xor
incb
outsb
test
dec
jo
sti
pusha
cmp
pop
adc
xor
inc
stc
push
sub
mov
outsl
data16
loope
push
inc
outsl
mov
clc
insb
jmp
xchg
popa
inc
shrb
jbe
int
pop
aam
push
fdivl
cmp
dec
adcb
cltd
jbe
add
in
inc
arpl
out
xchg
test
pop
pop
std
jae
add
loop
fs
mov
mov
jns
mov
jbe
imul
jp
dec
std
push
outsl
inc
jle
dec
add
push
shrb
xorb
outsl
mov
call
aam
out
gs
add
lea
add
fildll
js
cmp
out
xchg
outsl
mov
orb
and
loopne
fwait
out
mov
ja
mov
rol
les
mov
js
mov
mov
and
push
jo
pop
jb
fmuls
test
fwait
jns
push
dec
outsl
loope
pop
mov
dec
outsb
ret
xor
imul
outsl
or
sub
adc
mov
inc
push
push
push
outsl
divb
lods
movl
xor
cltd
ja
mov
cmpl
push
mulb
cli
fnstcw
pop
cltd
push
icebp
sub
push
je
jecxz
cmpsl
mov
mov
pushf
popf
or
test
into
jb
loop
push
arpl
inc
xor
outsl
aad
adc
mov
out
or
lds
push
stos
inc
sbb
loope
mov
pop
add
sub
aaa
lcall
lods
insl
sbb
addr16
or
inc
cmp
mov
dec
shll
sti
test
insl
in
hlt
xor
lods
or
sub
gs
ret
pop
imul
mov
stos
ljmp
outsl
orb
cltd
push
xor
daa
nop
shrb
test
sarl
add
popa
mov
iret
enter
ret
push
sub
mov
jecxz
adc
aas
mov
cmp
xor
test
jo
cmpsb
les
out
sbb
mov
outsb
call
jp
jecxz
sarl
jne
arpl
ljmp
adcb
xchg
out
test
sbb
xchg
fistpll
stos
push
popa
mov
sbbb
imul
out
xor
and
cli
jecxz
imul
xchg
data16
pop
aaa
dec
gs
clc
nop
gs
outsl
sub
inc
mov
pop
shll
arpl
jmp
and
clc
fisubrl
pop
mov
mov
pop
leave
sbb
jp
loopne
insl
push
sti
sub
xchg
jb
mov
push
in
outsl
lcall
sub
dec
xor
in
arpl
mov
movsb
inc
dec
scas
cmp
addr16
and
xor
mov
das
sarb
addl
subl
std
pop
outsl
dec
pop
xor
push
imul
push
adc
cld
lcall
aad
xchg
pop
fsubs
pop
jnp
xchg
cwtl
ficomps
push
mov
add
outsl
pop
xchg
jno
rcll
mov
sub
adc
push
pop
push
sub
dec
jbe
cli
mov
jp
rorl
addr16
sbb
dec
outsl
adcl
lods
jbe
mov
xchg
shr
or
push
jmp
sbb
in
mov
mov
cmpsl
repnz
mov
adc
outsl
pop
inc
lret
sahf
sbb
push
mov
outsl
cld
push
push
xor
mov
outsl
mov
outsl
sbb
movsl
add
pop
jb
sub
push
outsl
xchg
in
push
insl
movsb
int3
outsl
inc
add
xchg
aad
roll
aas
sbb
add
push
xchg
jecxz
or
or
dec
or
xor
repnz
xchg
xlat
in
and
rclb
popa
leave
lods
test
push
mov
cmp
das
xchg
inc
aam
repz
lods
xlat
fcmovu
movsb
push
push
inc
gs
cli
call
jp
mov
mov
out
fistl
inc
xor
call
outsl
cltd
stos
sub
test
cwtl
or
push
xor
fsubrs
sub
jl
shrb
dec
and
cmp
outsl
add
push
shrl
test
jge
jle
arpl
test
mov
ljmp
ja
and
loop
jp
lea
outsl
add
cmpsl
pusha
push
lds
sub
lods
mov
loop
and
xor
outsl
outsl
sub
mov
outsl
jb
inc
push
xlat
int3
mov
shll
sub
jmp
jnp
pop
neg
dec
cmp
aam
lret
and
imul
aas
pusha
cwtl
push
cltd
jae
iret
call
imul
outsl
test
mov
xchg
ja
outsl
fwait
pop
sar
xchg
jecxz
jl
movsb
outsl
ret
adc
lods
inc
out
fisubrl
lds
cmp
xchg
adc
mov
std
fnstsw
fimull
or
pop
outsl
push
push
jmp
mov
mov
outsl
fwait
and
mov
jnp
iret
and
jnp
fsin
xor
cwtl
testl
lds
outsl
xor
aaa
jp
jbe
mov
psrlw
out
lahf
xchg
pop
jmp
or
imul
enter
arpl
inc
or
ljmp
das
daa
push
nop
mov
outsl
adc
jge
outsl
ja
adc
icebp
jecxz
cmp
aas
xor
mov
pop
or
push
leave
das
xchg
adc
loopne
fs
outsl
mov
xorl
cmp
cmpsb
test
repz
mov
pop
fidivl
cmpsl
add
out
bound
cmp
shr
insl
xchg
mov
mov
adc
jo
mov
sahf
loop
mov
sub
outsl
pushf
fmulp
movsl
pop
push
add
outsl
fistps
mov
outsl
add
push
fisubrl
add
scas
cmp
cli
push
lods
cltd
in
outsl
and
and
push
jle
int
and
lret
aam
shrb
mov
ret
lock
or
outsl
daa
push
dec
ss
lret
popa
or
mov
nop
mov
xor
xor
lds
ret
cwtl
outsl
lcall
outsl
and
jp
and
mov
ljmp
mov
jae
mov
and
popa
aas
ss
lret
pop
pop
icebp
int
std
jge
jg
and
and
ss
cmp
pop
cmp
aas
fcomip
aas
ss
aam
inc
and
cmp
movsb
imul
mov
fldcw
mov
xor
outsl
call
mov
dec
fwait
fs
push
lods
and
insl
icebp
outsl
rclb
mov
imul
push
ret
subb
in
lcall
jp
jae
adc
aas
cmpsl
ja
iret
ss
dec
in
pushf
outsl
dec
xchg
movl
push
dec
sbb
cld
inc
test
add
ret
aas
sbb
bound
stc
pop
cmp
enter
cmp
add
mov
fiadds
mov
loop
jecxz
adc
sub
xlat
gs
pop
shlb
push
xchg
mov
cltd
xor
mov
pop
fstpt
nop
mov
cmp
adc
mov
pop
lcall
test
xor
adc
adc
push
scas
jge
outsl
xchg
push
or
movsl
cmpsl
ljmp
ss
outsl
xor
cmp
outsl
test
enter
jp
ffreep
pushf
mov
sbb
aad
lret
test
andl
outsl
adc
xchg
call
loop
push
stos
inc
imul
push
jl
xor
ficoms
outsl
xchg
cmp
mov
cmp
dec
mov
enter
fildl
lds
outsl
cld
getsec
divb
push
ret
dec
lcall
cmp
icebp
fcmovne
sub
jmp
xor
nop
or
adc
jno
lcall
lock
mov
cwtl
push
outsl
stc
pop
xchg
cmp
outsl
pop
je
bound
jno
dec
incl
mov
sti
add
int
push
call
mov
push
and
imul
mov
outsl
mov
mov
repnz
cltd
popf
les
xor
popa
outsl
sub
outsl
push
jge
mov
je
mov
xchg
inc
mov
mov
cmp
pop
cmpsb
mov
retw
cli
pop
push
sahf
pop
fistps
lcall
outsl
icebp
mov
cli
loop
cwtl
adc
enter
outsl
mov
and
push
outsl
sub
int3
lods
adc
stos
sub
lds
pop
and
inc
orl
loope
cmpsl
add
adc
fwait
stc
shrl
mov
int3
mov
mov
or
clc
mov
insb
adc
shl
aas
inc
repz
mov
in
xor
outsl
mov
out
fnstenv
pushf
outsl
pop
sbb
popa
dec
lcall
adc
outsl
cmp
pop
fwait
shlb
aad
cmp
lret
lock
repnz
sbb
jl
cmp
add
je
aad
adc
jl
ljmp
xchg
inc
mov
xlat
and
fistl
mov
sbb
lds
insl
inc
cli
lock
test
lods
stos
scas
ret
out
mov
gs
outsl
movsl
pop
nop
enter
outsl
fneni(8087
data16
mov
sbb
jl
xchg
outsl
insb
inc
jae
xor
imul
iret
mov
xlat
idivl
mov
push
sbb
enter
pop
add
sbb
cmp
scas
pusha
push
outsl
inc
fstcw
mov
enter
lret
mov
or
ret
push
inc
adc
jmp
movsb
loop
dec
jbe
std
outsl
jno
popl
and
jecxz
pop
sub
pop
push
outsl
gs
popa
loope
loop
xlat
jns
insl
pop
cs
sub
arpl
repnz
lock
aaa
aas
adc
mov
es
mov
mov
fdivrs
inc
xchg
inc
andb
cmp
imul
xor
shll
ficompl
outsl
push
popa
lahf
xchg
enter
outsl
ds
mov
add
xlat
std
outsl
add
jp
mov
xchg
push
and
pop
or
insb
sbb
aaa
add
fs
xchg
hlt
push
not
pop
orl
imul
fwait
jbe
adc
add
pop
dec
lcall
xor
mov
and
out
xchg
mov
outsl
cmpsb
xchg
imul
push
jge
int3
dec
test
add
sub
lcall
mov
push
std
data16
fists
adcb
clc
mov
test
add
mov
pusha
out
xchg
gs
int3
push
outsl
and
hlt
out
outsl
mov
mov
outsl
mov
into
cmpsl
sarb
in
movsb
addr16
iret
lcall
sub
test
push
jns
outsl
adcb
xchg
mov
outsl
sbb
sub
pop
ret
jp
addr16
addr16
and
and
inc
outsl
lea
xorb
xor
ds
cmpsl
lahf
mov
xchg
sub
cmp
jmp
and
fisubrs
mov
andb
movsl
outsl
fwait
jp
inc
adc
mov
xchg
push
and
push
scas
sub
xor
outsl
sub
je
pop
jb
std
outsl
cld
scas
jl
push
nop
scas
aam
inc
outsl
cli
push
inc
and
pop
sbb
nop
das
mov
bound
ds
push
and
int
jecxz
in
xchg
fldt
ja
add
xchg
out
inc
cmpsb
outsl
inc
sub
mulb
enter
imul
adc
jp
sbb
mov
flds
cmp
aas
jnp
cs
xor
sarb
mov
shrl
adc
filds
inc
inc
lret
lods
ljmp
jno
mov
jge
sbb
fists
mov
mov
fidivrl
sub
pop
leave
inc
loope
mov
and
inc
inc
xchg
outsl
sahf
or
out
pop
mov
pop
stos
addr16
loope
adc
movsl
aas
lcall
xchg
outsl
les
repz
mov
xor
data16
outsl
lods
sbb
sbb
pop
pop
outsl
push
in
and
outsl
fbld
sbb
mov
jns
ret
imul
sbb
lcall
sbb
and
outsl
test
rorb
aas
xor
icebp
ror
out
cmpsb
inc
xor
sub
adc
jg
lret
popa
and
outsl
jb
sahf
xorl
sub
sbb
and
mov
dec
xor
inc
xor
mov
push
stc
push
in
sub
lods
ljmp
cmpsl
rorb
or
sub
hlt
mov
jo
cltd
adc
mov
jecxz
xor
popa
je
orb
lods
andl
sarb
jmp
imul
mov
sbb
fsubs
push
pop
outsl
stos
outsb
mov
aas
outsl
mov
xchg
call
test
cmpsb
and
dec
xchg
sbb
cmp
pop
out
lods
lea
aas
dec
test
and
outsl
mov
je
rcrl
int3
les
inc
pusha
aaa
testl
push
scas
mov
outsl
push
inc
lret
scas
cwtl
mov
pop
and
lods
adc
xor
clc
add
popf
mov
lock
sti
dec
insb
or
cmp
hlt
icebp
lret
ret
punpckldq
add
jmp
or
ljmp
fldt
outsb
outsl
and
dec
daa
lods
int
loopne
loopne
in
mov
ret
outsl
bound
das
shl
jno
xor
movsl
andl
mov
mov
ss
nop
rol
xchg
jae
hlt
in
fildll
mov
mov
outsl
inc
inc
les
add
rcl
mul
mov
test
mov
outsl
pop
or
scas
rolb
xchg
outsl
and
aas
cld
xor
mov
dec
xchg
xchg
or
outsl
nop
cltd
testl
mov
sbb
or
outsl
les
and
mov
add
movsl
add
jae
repnz
bound
mov
pop
jo
es
call
sahf
scas
fbld
int3
sub
jbe
push
and
lret
cmp
shrl
pop
loope
xor
add
outsl
mov
out
jle
std
pop
outsl
scas
leave
rolb
inc
outsl
adc
adc
icebp
xchg
outsl
xchg
mov
sub
lret
icebp
lods
jno
imul
jbe
pusha
pop
adc
inc
mov
mov
pushf
lods
insb
fildll
sbb
repnz
or
in
fnstcw
daa
outsl
mov
rcl
pop
adc
adc
aas
dec
hlt
movb
mov
mov
mov
mov
pop
sbb
xor
fsubrs
jle
adc
mov
stos
and
rcl
pop
push
mov
sahf
outsl
pop
scas
dec
or
outsl
rclb
sbbl
add
movsb
mov
fwait
dec
xchg
popa
jle
add
mov
shlb
aam
lret
push
popa
xchg
test
pop
scas
rclb
mov
jae
popf
stc
inc
repnz
inc
mov
dec
sbb
mov
outsl
jae
pop
cmp
mov
das
in
icebp
push
cli
mov
jmp
adc
inc
loopne
dec
out
push
out
js
add
adc
fidivrl
in
inc
cs
aam
lret
adc
xchg
mov
dec
pop
test
rsqrtps
mov
ret
sub
pop
sbb
clc
gs
sahf
xlat
and
mov
fcompl
addr16
jo
xchg
pop
jns
mov
mov
fldt
and
inc
outsl
nop
xchg
push
cmpsb
push
fcmovb
popa
mov
and
repnz
pusha
out
pop
sbb
outsl
dec
xlat
xor
aaa
js
mov
lods
repz
push
sub
ds
dec
data16
les
test
lea
and
adc
push
or
mov
dec
add
adc
and
aaa
addr16
jne
sbb
nop
xchg
fistps
imul
bound
pop
aad
lods
push
test
stos
mov
sub
scas
repnz
les
outsl
dec
popa
or
cmpsb
fldenv
outsl
js
jo
rol
lcall
sbb
cmpb
lret
aas
sti
dec
mov
out
inc
mov
dec
xor
incl
add
push
xor
repz
mov
sbb
mov
xchg
imul
insb
popf
stos
cmp
aas
pop
pop
jne
icebp
mov
loope
adc
pushf
aas
repnz
or
outsb
push
mov
jp
fidivrs
mov
xchg
jnp
stc
lea
push
push
xlat
cmp
pop
inc
dec
mov
outsl
push
pop
arpl
ja
loopne
outsl
fnstenv
andl
sti
stos
in
pop
mov
lds
push
loop
pop
and
fwait
mov
add
fucomip
outsl
jbe
ret
arpl
add
push
jmp
xor
popa
dec
outsl
ss
cmp
aas
xor
sarb
push
add
cld
lods
jb
xor
jle
fildll
lret
add
sbb
fisubl
mov
cmp
fsubl
inc
out
dec
insb
xor
rorb
loope
rcll
mov
imul
push
mov
xchg
adc
mov
in
pop
pop
push
xor
pop
mov
xlat
mov
mov
jle
xor
mov
mov
fistpll
adc
inc
loopne
subl
adc
jne
mov
sbb
scas
add
cld
pop
aam
or
sti
mov
in
gs
jb
sbb
mov
or
pop
xchg
nop
pop
mov
bound
push
outsl
push
sbb
dec
or
popf
call
push
cltd
dec
or
jbe
fisttps
add
pop
in
outsl
mov
push
stos
dec
or
xor
filds
hlt
cld
inc
pop
xchg
in
xchg
outsl
push
xchg
cmp
jno
xchg
stos
fmul
sub
adc
aas
mov
icebp
scas
lret
aam
push
dec
pop
sbb
mov
mov
outsl
jns
push
test
outsl
stc
add
mov
cli
loop
xchg
mov
or
dec
pop
dec
aas
mov
inc
push
out
pop
repnz
aas
xor
sbb
les
dec
int
in
test
pop
xor
stos
stos
sbbl
in
cli
cli
or
insb
jp
xor
xchg
push
push
fdivrs
in
lds
pushf
jnp
xlat
xchg
rcr
sbb
dec
inc
jecxz
pusha
imul
cmp
xor
icebp
mov
shll
outsl
xchg
out
aaa
jns
mov
pop
movsb
and
mov
imull
out
arpl
ret
cltd
or
add
leave
jmp
cmp
push
outsl
cwtl
jle
mov
cltd
icebp
xor
inc
out
insb
outsl
mov
mov
lock
push
jo
mov
cwtl
mov
xlat
jnp
fdivrs
and
lods
arpl
in
insl
movsl
sbb
bound
sarl
enter
testb
xor
sbb
xchg
mov
mov
movsb
pop
shlb
sbb
adc
enter
pop
mov
lds
add
xchg
popa
xchg
jle
leave
es
int
outsl
icebp
jnp
dec
in
lcall
andl
int3
lahf
mov
addr16
or
lret
dec
popa
shl
outsl
ss
mov
jae
or
cmp
outsl
pushf
icebp
jecxz
test
outsl
sbb
lods
and
fimuls
addr16
sub
outsl
xlat
sub
sbb
mov
jb
mov
sbb
out
out
adc
sbb
repz
xor
add
mov
sub
in
sbb
or
sub
in
jmp
adc
mov
and
lret
push
push
dec
es
movsl
jmp
sub
clc
repz
jbe
push
mov
movlhps
cmp
lcall
outsl
sbb
lock
test
xor
cmp
mov
add
dec
test
or
shrb
sahf
lcall
les
testb
aas
push
cld
in
nop
adc
ret
jecxz
enter
movsl
mov
fisttpl
xor
push
xchg
outsl
jp
hlt
mov
outsl
jnp
jno
cmc
mov
mov
sub
les
jns
lret
or
inc
fcoml
jbe,pn
jecxz
insl
out
outsl
jo
sbb
mov
clc
das
insl
or
dec
xor
mov
jp
popa
mov
sub
or
aaa
xorl
push
popa
loop
push
aas
iret
mov
shll
dec
pop
adc
push
fdivs
das
sti
lahf
dec
jl
addr16
ja
outsl
mov
rorl
push
insb
outsl
inc
jl
push
arpl
jle
imul
outsl
sbb
dec
add
and
xor
mov
nop
movsl
mov
mov
outsl
loopne
lds
outsl
xchg
mov
push
pop
popf
xor
xchg
xchg
jne,pt
pop
mov
imul
sub
xor
cmp
cmc
test
xchg
gs
sub
ret
imul
aas
cmp
pop
data16
mov
xchg
inc
in
adc
clc
inc
jp
ror
aam
popf
xchg
shlb
movsl
fimull
out
jecxz
lock
xlat
adc
out
push
push
xchg
lods
jbe
popa
push
jecxz
cmc
jge
mov
cmc
xchg
test
enter
add
imul
lret
fiadds
pop
out
outsl
xchg
stos
pusha
rolb
in
dec
mov
xor
outsl
idiv
mov
mov
outsl
lret
cs
push
adc
pop
cltd
xchg
jno
movsb
inc
cli
imul
test
dec
lock
adc
rcrl
outsl
ds
negl
mov
sub
push
pushw
cmp
xchg
jle
bound
iret
clc
add
and
popf
adc
cld
xchg
outsl
stc
add
sahf
insb
cmp
stos
idivl
imul
cmc
or
push
std
outsl
xchg
jl
mov
adc
adc
popf
aam
fsubs
or
dec
xchg
mov
stos
imul
outsl
gs
lods
xchg
enter
cmpl
mov
add
sbb
outsl
loopne
mov
test
outsl
jl
aaa
pop
add
outsl
inc
roll
lds
xchg
mov
mov
dec
test
mov
xchg
aas
sbb
add
repnz
addb
push
lcall
stc
jp
add
xchg
js
mov
mov
popa
jne
inc
outsl
cmpsl
mov
xchg
mov
mov
or
icebp
outsl
jns
andl
enter
ljmp
mov
ret
jmp
sti
mov
and
inc
and
repnz
mov
ja
outsl
incb
dec
js
lahf
pop
mov
or
pusha
push
cwtl
scas
scas
xlat
outsl
cltd
xorb
push
jne
outsl
pop
pop
sub
outsl
xor
lret
pop
js
outsl
shlb
jp
xchg
iret
add
xchg
loope
div
adc
outsb
jl
mov
in
or
lahf
or
rolb
stc
jbe
stos
fbld
movsb
push
mov
cmp
inc
imul
in
and
xchg
jmp
pop
pop
xor
movsl
sub
mov
dec
outsl
mov
loope
int3
ret
lret
xchg
addr16
pop
push
das
faddl
adc
jno
fwait
outsl
inc
mov
mov
ficoms
ret
or
outsl
daa
pusha
je
lock
xchg
mov
adc
idivl
outsl
cmpsl
fcompl
shlb
lret
aas
jp
out
cmp
mov
sbb
lret
pop
sbb
jns
adc
test
pusha
aaa
xor
daa
aad
mov
dec
mov
xchg
das
xorl
mull
mov
repz
das
test
pop
out
outsl
jae
add
inc
xor
jbe
mov
iret
arpl
mov
jl
adc
jno
jp
fs
mov
dec
fmul
and
jbe
xchg
out
mov
jnp
fsubrs
sbb
cmpb
lods
outsl
xor
jl
shrb
xchg
lahf
and
bound
add
xchg
fwait
pop
xor
mov
mov
inc
outsl
shll
jp
sub
in
push
repnz
ja
or
cltd
lods
cmp
loopne
mov
and
pop
or
mov
pop
sub
push
fwait
and
add
add
sbb
into
sub
ljmp
leave
sbb
mov
ja
insb
rcll
pusha
out
outsl
lcall
in
cmp
mov
pop
jle
push
jo
imul
out
sbb
jnp
jecxz
and
sub
cld
push
insl
outsl
mov
cwtl
xor
movsl
bound
loopw
leave
test
scas
dec
xchg
jne
mov
ffreep
popf
rcl
outsl
pop
bound
aam
test
jge
insl
or
leave
test
dec
sahf
lcall
andb
xchg
add
dec
lret
mov
pushf
mov
sub
mov
xchg
rep
xchg
mov
and
or
push
cmpsl
lret
addr16
jb
and
or
pop
mov
mov
mov
gs
add
cmp
test
ror
mov
cmc
outsl
inc
or
test
in
sbb
scas
sub
sub
fs
cmp
rorl
sahf
xorl
dec
arpl
xchg
adc
outsl
ret
pop
jbe
repnz
sbb
mov
sbb
and
dec
movq
rol
or
outsl
insl
into
sub
dec
and
aaa
fiadds
fs
xchg
aas
add
mov
jecxz
repz
cmp
sahf
mov
rcrl
neg
imul
arpl
std
or
push
lret
adc
dec
aad
daa
into
jb
pop
mov
or
cmp
out
mov
outsl
lret
ds
dec
inc
ja
shl
pop
pop
rcr
xchg
and
mov
and
rorl
add
mov
imul
ljmp
or
mov
dec
ja
andl
adc
push
sbb
push
cmp
jecxz
sti
outsl
test
loop
mov
stos
outsw
cld
sbb
push
outsl
push
daa
xor
and
lret
addl
stos
outsl
or
movsl
shl
mov
xchg
outsl
pop
mov
lods
sbb
mov
xor
push
inc
rclb
or
popf
push
loop
popf
pop
imul
insb
xor
lods
sub
sbb
xchg
inc
mov
test
add
mov
js
outsl
cmpsl
test
fadds
inc
sbb
dec
outsl
adc
adc
in
pop
pusha
cmp
call
clc
mov
dec
xchg
fs
sub
add
int3
add
mov
add
add
mov
inc
test
sarb
outsl
imul
fimuls
out
push
in
outsl
popa
aas
jle
adc
jno
jne
pop
insl
movsb
test
jb
in
outsl
in
add
and
loop
jbe
fistpl
dec
daa
or
push
loop
mov
sub
xchg
test
xchg
cld
insl
addr16
jle
dec
fstpl
jo
addr16
in
dec
xor
and
rcl
outsl
fsubrs
jne
in
xor
fildl
jle
andl
mov
aad
push
inc
mov
xor
adc
outsl
rcl
xchg
int3
lods
and
outsl
xchg
jle
jno
jo
xchg
outsl
cmp
in
in
fcmovu
jle
add
mov
cmp
nop
mov
ret
cltd
push
pusha
jno
sahf
jae
push
scas
mov
mov
jle
sub
fcom
mov
movsl
mov
jecxz
sbb
sbb
jmp
pop
add
dec
insb
arpl
mov
mov
outsl
xchg
in
imul
jnp
movsl
mov
outsl
mov
shlb
pop
mov
shll
fs
outsl
mov
mov
outsl
mov
push
ret
testl
lret
jge
fs
outsl
lret
or
cld
adc
outsl
inc
add
mov
push
xor
rolb
aam
mov
pushf
addr16
xchg
jge
push
outsb
or
imul
mov
nop
and
dec
cwtl
cmp
outsl
es
push
add
sbb
sub
add
outsl
xor
movsl
mov
shll
adc
sub
cmp
gs
fs
outsl
xchg
adc
cmp
hlt
lds
inc
out
pop
cli
mov
and
outsl
sub
add
mov
adc
cmc
push
out
stos
mov
pop
enter
repz
mov
jecxz
out
add
sub
outsl
pop
pop
mov
mov
adc
add
sbb
jno
or
shll
pop
jp
clc
xor
xchg
rorl
lret
add
cmp
inc
aad
adc
cmpsb
or
add
outsl
in
in
adc
mov
pop
sbb
push
push
addr16
call
pop
pop
dec
scas
popf
sub
mov
hlt
dec
gs
mov
mov
outsl
sbb
daa
xchg
lret
push
outsl
leave
and
les
outsl
mov
sbb
push
mov
fistpll
add
outsl
pop
jmp
rorb
pop
mov
out
xor
outsl
call
inc
xchg
sbb
mov
mov
je
fwait
ret
orb
cltd
pop
jg
cwtl
add
call
fstpt
popa
out
or
lret
cmp
test
jno
outsl
repz
ljmp
imul
outsl
mov
in
popf
fyl2x
dec
push
arpl
outsl
clc
jns
lds
mov
filds
test
sbb
adc
mov
dec
lret
push
call
ret
out
pop
jle
aas
aaa
insl
std
jge
cmpb
and
lret
add
sbb
xor
ja
mov
fwait
ret
loope
jmp
outsl
fists
xchg
pop
repz
dec
push
jle
pop
lods
into
idivb
pusha
jne
mov
dec
xchg
test
insl
daa
arpl
mov
sub
push
sub
das
pcmpgtw
lock
outsl
daa
sahf
push
in
jle
pop
ja
out
push
popf
and
repz
pop
push
fiadds
jge
adc
gs
push
out
dec
jge
popf
sub
mov
adc
rcrb
cli
push
xchg
inc
fistps
int3
mov
arpl
push
cmp
xor
ja
xchg
lret
mov
ss
sbb
shrb
shlb
gs
sbb
aaa
sub
xchg
push
out
mov
pop
lock
shl
repz
je
push
imul
hlt
out
fildll
jno,pt
mov
cmp
repz
xor
lret
test
outsl
adc
cmpsb
gs
lods
dec
outsl
mov
and
iret
add
in
fdivl
outsl
adc
sahf
lods
push
jl
outsl
and
and
loopne
xor
and
rep
cmc
insb
mov
or
sbb
outsl
adc
xchg
sbb
fisubrl
int
push
push
push
or
rcll
mov
out
sub
les
xchg
pop
outsl
sub
dec
xchg
ficompl
push
mov
xor
das
popa
insb
popa
cmp
rcr
cld
inc
jne
and
mov
xchg
push
pop
mov
addl
je
sarb
inc
pop
outsl
jne
lds
shlb
mov
repz
outsw
inc
lret
imul
jb
jp
loope
mov
mov
fwait
xor
outsl
dec
sarb
mov
adc
outsl
test
mov
testl
dec
jl
or
in
clc
inc
cltd
xor
add
push
cld
rcll
inc
les
push
cmp
out
icebp
xor
add
lods
outsl
iret
movsl
fwait
mov
outsl
insb
cmpsb
and
hlt
outsl
jbe
inc
int3
and
mov
aas
insl
call
in
xor
mov
shll
loopne
sbb
das
lods
aas
push
jp
cmp
ds
add
jnp
outsb
add
push
jge,pn
and
inc
outsl
xor
inc
cmp
xchg
cmp
shll
test
inc
push
outsl
test
sbb
loope
pop
jmp
add
sarl
cmp
sbb
aam
daa
pop
and
xchg
mov
lods
lock
outsl
jge
mov
inc
outsl
push
scas
sub
andl
mov
outsl
jg
fsubs
mov
pop
pop
arpl
push
mov
mov
push
push
nop
outsl
in
lcall
int
popf
outsl
imul
fstl
mov
or
fwait
add
pusha
jno
cld
lcall
and
pop
movsb
jnp
lock
outsl
mov
dec
and
jae
jns
add
mov
cmp
or
mov
xchg
shlb
mov
adc
jae
jmp
pop
gs
mov
jno
mov
outsl
lock
push
mov
adc
ret
dec
fwait
shrb
lret
in
icebp
imul
lea
adc
mov
repnz
mov
scas
push
lea
std
outsl
pop
jne
fs
adc
mov
insb
adc
sahf
mov
sarb
lea
xchg
inc
outsl
add
xorl
lret
xchg
mov
fisubs
mov
lods
jecxz
movsl
ret
std
mov
sbb
movq
and
shrl
or
push
pop
inc
popf
shl
jle
adc
dec
inc
jnp
outsl
mov
xor
mov
scas
jmp
int3
pop
dec
mov
push
dec
push
jb
jl
mov
mov
sub
xor
push
divl
xchg
mov
loopne
push
mov
or
cltd
cli
stos
inc
ja
outsl
imul
shlb
inc
jle
push
xor
cltd
imul
fsubl
fidivrl
outsl
pop
sbb
mov
jo
popa
sub
and
outsl
cmp
mov
xchg
orb
adc
enter
ret
jnp
adc
mov
jne
xor
ja
jbe
mov
add
bound
and
jl
mov
mov
or
fbld
imul
pop
test
mov
je
addr16
out
ret
and
push
outsl
lods
cmpsl
xchg
jmp
push
cmc
add
inc
mov
cmp
dec
loopne
or
outsl
lods
ljmpw
mov
mov
mov
cltd
push
mov
inc
fisubrs
mov
stos
and
mov
jns
rolb
test
shrb
int3
cmp
adc
sbb
out
push
sbb
outsl
movsb
sbb
cmpb
dec
pop
xlat
sub
mov
sbbl
push
mov
jb,pt
cmp
sbb
fsts
repz
lea
xchg
add
mov
jae
jo
cmp
mov
and
shrb
mov
or
test
outsl
jmp
and
data16
jo
xor
lcall
or
hlt
push
lods
outsl
cmp
jp
outsl
jmp
lahf
loop
outsl
out
sub
test
jle
mov
add
add
outsl
mov
outsl
popf
xchg
inc
aas
push
das
fiadds
fisttpll
imul
pop
dec
ja
outsl
pop
adc
in
sub
push
std
scas
cmp
xchg
outsl
mov
js
outsl
jecxz
sbb
aad
xchg
pop
jnp
test
aam
addr16
add
adc
cmp
repnz
shl
imul
subl
in
mov
push
aaa
movsb
insb
push
outsl
inc
iret
fidivrl
jge
pop
lds
aam
and
shlb
sub
std
or
add
iret
outsl
mov
inc
sub
aas
adc
or
jmp
ljmp
arpl
lea
sbb
mov
aas
shrb
mov
and
movsb
jmp
cmp
cltd
dec
xor
and
lret
cmp
outsl
pop
sahf
out
jge
mov
sub
stos
mov
xchg
in
test
mov
std
add
xor
mov
les
and
push
imulb
push
loopne
pop
hlt
sbb
and
mov
mov
jmp
cli
outsl
cmp
jbe
jge
out
mov
insl
dec
xchg
int
repnz
rol
pop
xchg
jae
inc
rolb
shr
mov
push
pushf
in
mov
and
mov
ja
iret
xchg
xchg
outsl
ss
adc
dec
pop
inc
lea
outsl
and
fildll
fs
mov
jecxz
insb
aas
out
testb
push
xchg
imul
jle
incl
push
xor
sbb
mov
push
outsl
xchg
cs
ljmp
inc
outsl
inc
rol
mov
mov
adc
mov
jge
repz
cmp
outsb
cmp
arpl
mov
sub
loopne
mov
enter
push
nop
aaa
lods
scas
aad
xchg
loope
cs
in
loope
les
sub
adc
rolb
repnz
mov
pop
dec
lret
mov
jp
push
in
out
jge
jnp
rclb
lea
roll
subl
inc
outsl
in
scas
cli
imul
test
outsl
cltd
cmc
mov
movsb
cmp
dec
hlt
in
pop
fmull
ret
aad
mov
lds
dec
fdivrp
xchg
outsl
xchg
add
outsl
lods
adc
inc
xor
ljmp
sbb
std
repz
jo
scas
rol
outsl
cli
sbb
cmp
es
js
push
jmp
cmp
lods
into
ss
decl
movsb
js
or
cmp
adc
jo
cmpb
outsl
cltd
mov
mov
jne
outsl
push
mov
xchg
adc
sar
jnp
push
sti
cwtl
push
fs
and
or
pop
arpl
adc
xor
lret
pop
aad
mov
jmp
decl
outsl
mov
push
and
pop
ja
outsl
jbe
push
loop
dec
xlat
and
outsl
stos
and
mov
mov
leave
addr16
fcmovne
jmp
lret
hlt
push
in
outsl
mov
popa
clc
rcrb
add
sbb
adc
test
jne
jo
mov
les
sbb
dec
mov
jl
push
int3
aas
sbb
xor
inc
dec
adc
xchg
dec
inc
lds
and
shll
in
mov
cmc
cwtl
add
mov
jp
or
outsl
cmp
lea
jecxz
pop
ja
popf
xor
sbb
int
mov
xor
sbb
movsl
outsl
cmp
cmp
pop
jge
outsb
dec
sbb
add
adc
test
outsl
pop
aam
ret
sbb
aaa
mov
mov
stos
sub
ja
int
jle
shrb
mov
xlat
fldcw
mov
and
jnp
or
jae
jge
iret
jno
pushf
scas
push
mov
xor
lock
jle
mov
cltd
shl
and
mov
mov
adc
mov
or
mov
insl
xchg
jle
mov
add
jecxz
mov
loope
cltd
arpl
push
lahf
pop
inc
or
cmp
sub
xchg
iret
outsl
and
push
lods
mov
fldcw
cmpb
outsb
outsl
push
lock
int
fwait
pop
pop
xchg
jnp
shrb
add
mov
or
sbb
mov
mov
in
add
daa
sub
pusha
out
mov
scas
mov
ja
xor
cmpl
into
cli
das
push
lods
mov
out
xor
cmc
sti
mov
fs
xchg
rcr
mov
add
leave
sbb
xchg
hlt
iret
pop
lods
lock
mulb
rep
push
mov
mov
movsb
mov
pop
sbb
mov
cmp
and
jbe
pusha
cmp
icebp
jns
gs
xchg
test
sbb
loopne
aad
out
outsl
mov
fists
xor
mov
push
jmp
hlt
outsl
adc
ficompl
out
outsl
mov
lahf
sbb
nop
test
sbb
int3
outsl
lret
and
adc
mov
rcrb
sbb
push
sbb
inc
dec
pop
jno
lds
mov
mov
lods
cmpb
xchg
outsl
and
enter
sbb
imull
cwtl
inc
enter
push
mov
ret
sbb
dec
test
jge
inc
popf
cmp
loopne
or
mov
loopne
xchg
mov
das
outsl
stos
push
pop
outsl
jp
mov
xchg
adc
cmp
andb
pop
push
xchg
xchg
jle
popf
and
outsl
mov
dec
or
movsb
mov
sub
push
mov
scas
pop
in
stos
add
sbb
stc
mov
outsl
roll
in
sahf
aad
lods
lcall
fcom
push
nop
loope
cltd
outsl
mov
fcmovb
movsl
outsl
xor
mov
mov
loopne
cmp
jle
enter
lret
and
pop
sub
fcmovu
inc
cli
mov
lea
pusha
pop
cmp
sahf
out
iret
in
outsl
idivl
mov
pop
mov
imul
jle
xor
testl
dec
sub
and
push
lods
arpl
in
popa
dec
movl
mov
pop
test
lds
or
nop
shlb
pavgw
test
out
pop
insl
pop
sub
mov
gs
and
lock
or
cmp
rep
or
inc
sbb
push
cmp
scas
xchg
outsl
movsl
xchg
int3
pop
sub
add
inc
xor
jbe
fs
mov
js
addr16
cmp
lret
mov
jae
daa
sahf
cmp
mov
addr16
add
outsl
hlt
int
mov
aaa
test
push
add
adc
pusha
cmp
jnp
loope
outsl
pop
popf
enter
iret
stos
adc
mov
sarb
xchg
adc
cli
push
cmpsl
iret
mov
mov
and
outsl
cmp
push
xchg
cli
roll
fwait
nop
lods
xchg
test
xor
push
and
popa
and
das
rorb
fdivp
outsl
adc
xchg
cwtl
mov
test
mov
test
mov
repz
iret
mov
and
cmp
inc
sbb
cltd
outsl
shlb
dec
mov
pop
scas
outsl
push
adc
arpl
popa
jl
ljmp
xor
mov
leave
es
dec
pop
aad
jecxz
or
adc
aas
mov
outsl
lock
fwait
mov
inc
xchg
xor
loopne
inc
insl
outsl
jb
push
test
cli
lcall
mov
pop
imul
dec
mov
dec
add
jb
mov
popl
clc
pop
xchg
test
or
or
call
outsl
add
negl
lahf
clc
imul
ja
pushl
lds
fadds
dec
dec
out
movsb
outsl
ss
jp
in
test
outsl
xor
dec
mov
sub
fcmove
mov
sbb
in
push
loope
scas
pop
jle
out
gs
xchg
push
outsl
dec
xor
and
sbb
stos
pop
inc
cmpsb
lea
repnz
xor
fildl
pop
fnstcw
dec
push
cld
lock
call
lret
aaa
mov
and
enter
lds
dec
and
pop
popa
pop
sub
adc
jmp
notb
push
mov
test
mov
pop
push
js
daa
imul
mov
insl
xor
or
sbb
scas
push
jecxz
stc
fidivrl
pop
cwtl
pop
cmp
push
sub
adc
loopne
add
sbb
or
popa
xor
sub
insl
enter
outsl
scas
sbb
and
and
xlat
or
repz
xor
js
mul
xchg
xchg
add
sbb
cltd
stos
push
jmp
pop
ret
scas
cmp
dec
xor
jnp
addr16
arpl
imul
push
mov
mov
sub
inc
or
imul
add
or
imul
cli
xor
xchg
sub
and
loop
lahf
jle
std
js
sbb
daa
lret
pop
imul
inc
roll
aas
push
push
add
imul
pop
bound
je
movsb
push
scas
jbe
outsl
mov
fisubrs
in
andb
outsl
mov
lock
mov
xor
push
cld
dec
jo
and
lret
outsb
dec
cmp
xor
jg
inc
and
adc
and
ljmp
cmp
lods
outsl
jne
xchg
jo
lcall
test
insl
outsl
fdivrs
inc
xchg
ds
lret
aad
jne
add
arpl
mov
dec
and
jl
ja
jecxz
mov
outsl
mov
lock
mov
std
loop
ret
pop
outsl
shl
into
inc
lret
outsl
dec
mov
inc
inc
outsl
gs
jl
mov
lods
in
popa
push
outsl
inc
imul
dec
push
jmp
mov
imul
movsb
inc
fnsave
loop
xor
fs
mov
movsl
mov
cmp
jmp
inc
and
pushf
lret
ja,pt
cmp
jl
xor
outsl
sub
mov
mov
arpl
addl
fistl
cli
outsl
pusha
ret
loop
ds
int
sub
int3
outsl
mov
movb
push
xchg
mov
in
push
out
xor
iret
push
in
add
pop
xchg
lretw
fimull
sbb
imul
xchg
or
jnp
xlat
gs
outsl
cmp
xchg
sub
push
mov
xchg
pop
adc
iret
cmp
mov
sub
push
fxch
mov
jae
sti
fs
icebp
outsl
cmp
sub
lock
out
dec
mov
test
dec
inc
stos
scas
pop
fs
outsl
mov
or
or
outsl
jnp
or
shrb
jbe
push
dec
pop
cli
aas
adc
sub
jnp
cmp
adc
rolb
mov
outsl
mov
pop
push
sub
xchg
notb
imul
xchg
mov
gs
pop
sub
cs
outsl
in
lock
xchg
mov
shrl
cmpsl
add
mov
repnz
insl
fwait
icebp
movsl
test
xchg
fmulp
cmpsb
xchg
jle
scas
or
dec
push
mov
push
sbb
insb
int
outsl
sbb
xor
sti
stos
xor
aad
sbb
mov
arpl
mov
jp
inc
outsl
das
lods
adc
xchg
jbe
xchg
outsl
mov
clc
push
shll
outsl
pop
sub
and
mov
dec
outsl
and
sub
adc
rcrl
testl
lcall
fldenv
adc
pop
rol
test
sub
cmp
mov
dec
cwtl
lock
xor
addr16
outsl
pop
push
pop
inc
outsl
hlt
jmp
or
push
and
imulb
xchg
cmp
outsl
scas
sbb
imul
loope
cmp
dec
orl
mov
push
xchg
int3
add
add
and
outsl
jae
scas
mov
imulb
mov
loopne
rorb
outsl
popf
cmp
leave
scas
aas
cmp
push
imul
dec
enter
mov
sub
lret
scas
add
xlat
xchg
jae
jge
movsb
repnz
aaa
mov
mov
lea
hlt
xor
cmc
fwait
mov
jnp
adc
arpl
and
fs
fdivs
xchg
mov
mov
push
jb
push
inc
outsl
adc
imul
add
add
repnz
inc
pop
pop
and
mov
fwait
and
add
and
pop
js
pop
mov
jp
adcb
movsb
outsb
mov
dec
jle
xor
mov
jnp
outsl
sub
dec
hlt
popf
ljmp
inc
sbb
jno
mov
push
arpl
xchg
jle
popa
pop
aas
push
and
add
xchg
ret
push
notb
push
sub
movsb
outsl
inc
jge
inc
fninit
sbb
or
push
stos
pop
inc
test
outsl
adc
sbb
push
and
mov
sub
inc
mov
data16
out
ficoms
dec
ljmp
jns
cmp
adc
movsl
outsl
cmc
fwait
inc
xchg
inc
repnz
outsl
inc
mov
gs
outsl
mov
dec
or
in
xchg
outsl
lods
inc
repz
push
aad
ljmp
mov
shr
xchg
lret
mov
or
mov
mov
adc
ficoms
adc
xchg
movsl
mov
fildll
pop
jo
xor
jno
popa
loope
cmp
outsl
inc
repnz
outsl
test
add
int3
in
add
mov
lds
sbb
outsl
dec
push
fcmove
movsb
xor
xor
fstps
loope
or
mov
mov
fsubr
push
xor
popf
outsl
rcll
test
outsl
jae
push
mov
mov
outsl
mov
test
ja
jmp
inc
scas
mov
sbb
pop
push
insb
inc
mov
outsl
adc
or
fistl
addr16
xchg
ret
ret
outsl
mov
push
pop
and
or
push
xchg
subb
js
in
jle
lods
loope
and
fadds
push
aad
push
outsl
jns
jmp
gs
adc
outsl
bound
mov
xor
jge
cli
in
int3
les
hlt
sahf
outsl
stos
cmpsl
ret
pop
jno
inc
jge
insl
jnp
and
push
out
nop
repz
lret
cmpsb
jle
stos
xor
add
fisttpll
xchg
js
sub
pop
orb
mov
jns
outsl
stos
dec
xor
in
cmp
outsl
orl
daa
push
dec
lods
pop
and
mov
gs
outsl
xchg
mov
xchg
xchg
pop
clc
mov
mov
les
lock
inc
jae
xor
ja
jns
add
adc
xchg
mov
outsl
js
push
sub
loopne
lahf
inc
xor
push
adc
pop
insb
xor
pop
iret
outsl
jmp
inc
mov
scas
sti
ds
sahf
outsl
rorb
sub
or
push
dec
orl
outsl
xor
and
jno
shrl
movsl
dec
outsl
pop
out
int3
ja
xor
lcall
inc
mov
adcb
jmp
mov
mov
fmull
mov
cwtl
xor
xchg
sbb
shlb
in
inc
sub
out
das
and
je
hlt
in
outsl
cmp
test
rcr
xchg
adc
outsl
xchg
mov
cmp
outsl
xor
mov
cmc
jle
fsubp
xchg
outsl
mov
lods
dec
inc
cli
outsl
mov
add
shlb
dec
subl
mov
ret
ss
popf
jbe
ffree
pop
cs
je
push
xlat
dec
xor
pop
xchg
xor
in
aam
imul
ret
test
outsl
mov
push
jbe
scas
iret
jns
or
jp
sbb
imul
push
outsl
push
sbb
push
fisttpll
mov
out
imul
mov
add
and
jle
test
push
inc
repnz
pop
pop
mov
sbb
sub
cmp
cmp
push
fidivs
cs
ret
loope
aam
enter
pop
or
push
fwait
and
cmpsb
push
ss
mov
mov
in
das
outsl
mov
dec
fdivrp
testb
mov
movsl
add
jns
std
xchg
outsl
cs
loope
xchg
aas
xchg
dec
push
sub
and
add
dec
or
pop
sub
cltd
xchg
rcr
mov
inc
jp
loope
cmp
ja
push
push
in
dec
in
int3
mov
inc
lret
scas
mov
push
jne
pop
mov
jmp
jp
and
lret
inc
stos
pop
and
mov
fistl
mov
inc
test
lods
shlb
jne
jp
outsl
ret
jns
lahf
xchg
std
xchg
xchg
rolb
loope
jo
push
cmpl
pushf
rcrl
xchg
mov
xchg
jne
inc
xor
outsl
call
jb
jge,pn
cmp
dec
cmp
test
dec
outsl
cmp
xlat
cmc
mov
outsl
xchg
jbe
jo
mov
dec
jle
pop
fsubrs
dec
fnstcw
movsb
push
int3
aas
pop
push
inc
outsl
loopne
cld
mov
std
data16
icebp
xor
fs
fistps
arpl
in
jp
lods
mov
jbe
xor
out
push
adc
add
cwtl
aas
scas
pop
mov
cmp
outsl
fisubrl
fisttps
outsl
stos
cwtl
fwait
cmpsl
mov
sub
dec
mov
jb
arpl
mov
outsb
jmp
in
xor
outsl
scas
adc
sbb
xchg
mov
inc
test
outsl
cmpsl
fidivs
outsl
mov
hlt
mov
inc
mov
pop
fsubrl
jns
pop
sbb
lock
aam
addb
mov
mov
ljmp
push
add
push
leave
pop
fsts
aas
push
fnstsw
pop
sbb
aas
mov
ljmp
push
pop
popf
insb
insb
test
dec
xchg
xchg
imul
xor
dec
pop
lret
std
push
xlat
lods
pop
negb
popa
stos
xchg
outsl
xchg
mov
idivl
cmpsb
push
inc
imul
test
mov
call
jge
cltd
ficompl
add
mov
adc
aam
jns
or
es
sub
out
push
aas
lfs
or
insl
mov
repz
push
outsl
int3
xor
and
cltd
sub
in
mov
jnp
adc
mov
adc
cltd
outsl
iret
xchg
js
movsl
ljmp
cmp
imul
andl
andl
xchg
outsl
or
das
dec
lcall
push
cmpsb
inc
fwait
ror
addr16
hlt
xchg
outsl
lret
cmp
mov
js
mov
cwtl
scas
dec
shll
lahf
add
sti
xlat
jge
mov
push
jle
xchg
adc
insl
mov
loope
ret
pop
pusha
mov
jns
adc
aas
les
push
into
cmpsb
inc
loopne
xchg
cmc
lret
or
addr16
sbb
flds
xchg
ret
inc
shrb
mov
aas
push
aas
jl
mov
adc
repz
in
jecxz
jo
inc
mov
xchg
mov
xchg
mov
stos
sub
pop
mulb
outsl
cwtl
dec
clc
out
sub
cmc
subb
jne
jp
gs
mov
inc
lods
aas
int
outsl
mov
arpl
loopne
stos
xchg
mov
shrl
push
sub
add
mov
push
clc
insl
lds
xchg
fistps
mov
imull
mov
std
inc
outsb
sbb
and
mov
shl
outsl
push
jae
test
push
aaa
sbb
shr
out
jno
clc
aas
loop
add
outsl
pushf
pop
inc
js
push
sti
std
outsl
fimuls
in
mov
cmp
lods
xchg
outsl
cmpsl
or
dec
mov
js
aad
sbb
ljmp
pop
sbb
push
jno
or
sbb
adc
ljmp
repz
xchg
loope
repnz
outsl
sbb
out
fstpl
jb
xor
and
decl
call
je
mov
outsl
add
xchg
outsl
dec
push
cli
mov
inc
sbb
push
jns
pop
orl
xor
sbb
scas
jbe
mov
ja
pop
dec
push
outsl
fs
ljmp
inc
lahf
mov
call
add
out
outsl
dec
insb
add
stc
cli
or
lret
push
gs
pop
adc
les
sub
lahf
mov
xchg
and
bound
push
stc
js
aaa
xchg
sbb
lret
inc
fwait
xchg
subl
sbb
int
mov
xchg
cmovg
jge
imulb
or
lea
jb
mov
mov
movsb
rcl
lods
pop
dec
ret
adc
mov
push
cwtl
dec
int
outsl
frstor
stos
in
jb
jge
faddp
arpl
icebp
cmc
negl
lds
ja
fildll
xor
or
test
or
or
mov
arpl
jg
or
into
xor
outsl
inc
pop
sar
pop
cmp
fdivr
inc
out
leave
sbb
and
dec
push
pop
xchg
outsl
mov
xchg
test
adc
add
adc
mov
outsl
add
scas
inc
incb
or
and
outsl
sbb
dec
push
sbb
test
outsl
jg
xor
sub
sti
cs
mov
add
inc
add
nop
in
jg
push
push
mov
rorb
lods
xchg
mov
outsl
push
adc
into
fiadds
sarb
lods
mov
inc
jle
outsl
push
adc
or
jl
sbb
outsl
repz
bound
xchg
lcall
or
adc
fistpll
xchg
popa
mov
repnz
sbb
outsl
inc
shll
mov
pop
mov
or
cmp
jp
add
push
shrl
stos
fadd
adc
and
inc
mov
iret
mov
jne
xchg
add
shrl
xlat
and
push
mov
sbb
arpl
xor
pusha
outsl
loope
js
movsb
mov
fsubrs
and
sbb
rcl
outsl
dec
add
inc
ja
fcmovb
scas
mov
lahf
xchg
icebp
aas
aad
mov
pop
adc
out
ljmp
outsl
add
orps
iret
stc
adc
xor
dec
rcrl
rcrb
hlt
sbb
sbb
mov
pop
jp
adc
cmpsb
and
lods
push
or
outsl
pushf
imul
adc
cmp
pop
dec
add
arpl
lock
and
sarl
imul
mov
je
das
enter
mov
and
jb
test
push
mov
stos
or
shlb
es
out
dec
inc
ss
hlt
cmp
push
mov
cmp
outsl
in
mov
int3
pop
sbb
jb
adc
xchg
xor
or
pop
dec
imul
enter
rol
incb
push
push
movsb
ja
ficoms
insl
into
dec
scas
dec
fiadds
or
or
cwtl
sub
and
addr16
icebp
pop
in
cli
fnstenv
clc
ret
adc
jmp
insl
out
in
inc
pop
stos
push
pop
inc
shl
add
popf
movsb
pop
and
pop
dec
jnp
push
dec
push
dec
popa
pop
inc
movq
mov
ja
jl
fistl
and
stos
lea
xor
jns
fstp
jl
add
cmpl
xchg
out
xor
loope
cmpl
jl
xchg
iret
push
mov
int3
and
sbb
nop
dec
outsb
outsl
pop
arpl
push
fwait
jns
outsl
pop
mov
insl
cli
vmread
repnz
mov
xchg
jle
cwtl
mov
icebp
outsb
loope
jge
mov
mov
and
rclb
push
ficomps
mov
and
loope
imul
jle
je
or
outsl
aam
arpl
fwait
cmp
scas
popf
test
shrb
in
fcmovu
push
outsl
pop
pop
in
ss
jbe
loope
sbb
shll
jb
push
div
leave
fs
rcl
cmp
int
add
jne
arpl
outsl
or
jle
adc
xor
or
shlb
hlt
dec
xchg
push
and
lret
push
jge
jo
rclb
pop
outsw
cmp
jne
add
lds
aam
xchg
fwait
pop
dec
hlt
xor
cmc
stos
outsl
sbb
outsb
or
jb
popf
dec
js,pt
lods
jae
loopne
stos
lods
lock
nop
xchg
insb
xor
je
push
mov
add
inc
decb
mov
imul
mov
jge
scas
jp
xchg
mov
outsl
and
into
aaa
das
mov
or
sbb
lret
jne
fistl
popf
test
outsl
and
adc
bound
mov
or
fcmove
leave
and
dec
lods
sahf
pop
and
repnz
add
ret
and
sti
outsl
dec
nop
jne
jae
lret
je
mov
cmc
xchg
mov
clc
addb
dec
negb
xchg
hlt
out
mov
adc
pop
data16
fwait
mov
ds
or
inc
add
lods
cli
and
not
sti
aas
dec
add
cld
push
and
push
inc
test
ljmp
outsl
cmp
loop
adc
subl
and
push
outsl
gs
es
outsl
fs
ds
mov
outsl
mov
mov
outsl
fldl
fcoms
mov
mov
mov
cmp
dec
dec
jae
adc
pop
nop
stos
add
sub
enter
popa
fimuls
decb
imul
lds
cmp
jae
int
xchg
cmp
xchg
out
lods
outsl
or
jns
outsl
test
dec
mov
xchg
nop
js
xor
imull
loop
fiadds
jo
scas
jle
or
shlb
jb
mov
mov
test
std
and
sbbl
cmpsb
hlt
dec
std
jp
sahf
mov
sub
rcll
sub
xchg
mov
fildl
xchg
jo
adc
jge
lods
sub
sub
and
outsl
lea
add
outsl
insb
fnstcw
inc
lods
rcrb
xor
or
pop
hlt
or
mov
ja
outsl
in
loopne
mov
mov
js
jno
popf
data16
mov
lret
int3
xchg
aaa
mov
inc
imul
inc
inc
mov
cmpsb
inc
xchg
lret
or
pop
xlat
jl
rol
fwait
jnp
adc
sbb
shrb
fisttpl
js
add
push
sub
ficomps
push
mov
jno
add
adc
jle
cmp
mov
adc
or
in
jae
lahf
leave
mov
jl
aas
mov
push
mov
dec
loope
mov
aam
add
xlat
cbtw
pop
add
sub
mov
shl
lods
test
xor
xchg
mov
cmp
pop
pop
and
lret
sub
arpl
or
outsl
das
pop
adc
repnz
mov
dec
xor
cmp
mov
stos
cmp
xchg
jae
pop
push
loopne
aaa
jp
mov
and
xchg
fsubr
lods
sub
xchg
outsl
pop
push
add
int
and
mov
mov
aaa
cltd
outsl
inc
pop
mov
fildll
mov
subl
jns
adc
jnp
aas
jge
cmp
jno
xchg
push
inc
ljmp
inc
loope
mov
push
cwtl
pop
scas
and
cli
xchg
jnp
mov
jae
popf
stos
sbb
pop
mov
cmp
fisubrl
and
xchg
outsl
lods
loope
sbb
sub
jo
rep
xchg
shll
cmp
stos
inc
outsl
xlat
into
cmc
mov
loopne
lea
sub
insl
das
push
sub
and
and
aam
cmp
mov
data16
outsl
or
or
stos
sar
push
jge
mov
fcomip
sbb
jl
sahf
icebp
adc
fstpt
enter
fnstcw
movsb
push
mov
push
aad
fsubrs
outsl
enter
aam
jmp
rclb
ljmp
mov
sbb
mov
adc
sub
mov
jmp
addr16
das
sub
outsl
gs
ret
test
imull
cmp
out
stc
outsl
popa
pop
out
mov
fcomps
movsb
mov
push
xor
mov
jne
or
push
xchg
xor
arpl
push
outsl
ret
add
jge
push
outsl
jl
jmp
sub
loopne
mov
int3
cli
popa
or
in
ret
outsl
sbb
adc
aad
pusha
sbb
imul
nop
daa
fistpll
stc
popf
jbe
data16
add
movl
dec
cmpsl
sbb
fcoms
nop
sahf
stos
out
dec
pusha
outsl
jb
cmp
out
test
mov
ret
xchg
out
cli
jnp
push
rorb
lock
and
faddp
sbb
pop
jb
pop
adc
jge
adc
arpl
repnz
mov
addr16
in
outsl
or
lds
int3
fildll
mov
mov
xchg
outsl
mov
mov
xlat
loopne
movsb
push
adc
xchg
lahf
ss
mov
sarb
lea
icebp
loopnew
or
outsl
mov
ljmp
iret
jle
data16
repnz
add
pop
mov
cmp
imull
sub
idivb
outsl
sbb
cld
mov
outsl
sub
rolb
inc
insb
dec
jp
add
xchg
jl
outsl
jae
sub
dec
int
les
xchg
movsb
orb
cmp
xchg
mov
sbb
lods
pop
pop
pop
or
arpl
mov
cld
cli
pop
addr16
xor
aas
jnp
loope
sbb
shlb
data16
into
xchg
hlt
adc
jle
add
addr16
push
cmp
shlb
adc
scas
add
sti
or
ja
jle
mov
pop
imul
dec
imul
or
adc
mov
push
cmp
xlat
in
xchg
stc
fisubrs
lea
lret
loopne
out
mov
scas
mov
mov
out
pusha
mov
outsl
mov
mov
outsl
test
jae
or
cmp
negb
adc
push
sub
mov
ja
lahf
and
rolb
and
mov
loop
das
mov
xchg
adc
test
mov
jmp
out
scas
lods
inc
call
push
ljmp
sub
jae
test
jle
negl
addl
test
sbbb
outsl
stos
pop
jecxz
insb
in
dec
outsl
inc
jb
push
adc
int3
inc
adc
jge
sbb
ss
test
xchg
addr16
test
jmp
enter
add
sbb
outsl
pop
or
jp
sbb
mov
imul
sbb
jns
outsl
adc
arpl
gs
jl
and
pop
push
mov
addr16
ret
mov
and
into
popf
xor
or
incl
aam
jecxz
icebp
lds
mov
sahf
mov
add
and
cwtl
popa
sbb
inc
shrb
lcall
lret
and
repz
xchg
loop
ret
in
jecxz
outsl
popl
jae
and
xchg
mov
sarl
call
popf
jp
cli
out
aad
rorb
xchg
mull
fwait
mul
mov
mov
xor
sbb
daa
mov
out
adc
sub
movsl
mov
xchg
lods
cmp
sub
jl
jecxz
out
push
outsl
mov
repz
fistl
push
xor
lods
shr
pop
imul
shrl
sub
outsb
jmp
fsubrs
ljmp
xlat
gs
mov
sub
pushf
repz
outsl
mov
add
xorl
mov
repnz
addr16
or
outsl
popf
sarl
outsl
mov
jmp
shrl
rclb
pop
mov
int3
dec
mov
dec
xlat
daa
inc
outsl
push
out
cli
aad
add
mov
outsb
test
cmp
mov
add
out
cli
je
insl
jl
andl
mov
outsl
punpcklbw
xor
outsl
or
xchg
stc
adc
push
popf
xchg
push
mov
inc
and
inc
rol
lods
cltd
cmp
pop
xlat
ret
rclb
dec
outsl
lcall
pop
mov
outsl
mov
adc
inc
subb
scas
repz
mov
int
ja
sbb
lods
push
ret
rol
mov
test
ficomps
in
adc
addr16
add
pop
dec
dec
pop
jp
loop
aaa
and
lcall
mov
jecxz
gs
adc
xor
mov
mov
icebp
jge
imul
outsl
ss
pop
loop
rep
outsl
push
add
sbb
ficomps
lcall
push
pop
das
add
pop
fisubl
in
pop
lret
push
jmp
add
imul
test
sbb
jns
push
add
fsubrp
xrelease
int3
jmp
adc
jg
push
add
les
call
clc
pop
scas
push
outsl
fcmovu
xor
xchg
dec
jnp
and
xchg
imul
sub
xor
outsl
popa
push
inc
imul
jbe
les
adc
fs
test
sbb
mov
pop
xchg
xor
jbe
inc
test
arpl
iret
inc
or
outsl
fwait
mov
xchg
pop
add
dec
movsl
xchg
lcall
pusha
fsubrl
repz
jp
add
out
adc
dec
addr16
dec
clc
outsl
insl
ja
cmp
loope
in
gs
out
push
rorb
lahf
cmp
test
ret
aam
fistpll
jns
xor
pop
outsl
mov
pop
and
outsl
push
xchg
cmp
sysexit
nop
pop
ljmp
iret
int3
cli
fcoms
jbe
mov
ficomps
dec
inc
mov
mov
pop
pop
sbb
cmp
hlt
popf
dec
mov
adc
cmp
mov
popl
imul
fiaddl
jo
mov
inc
jmp
sbb
movsl
imulb
adc
pop
fidivl
mov
scas
cmpsb
lods
push
outsl
jle
roll
push
inc
arpl
cmpl
outsl
and
fucomp
out
jmp
clc
gs
add
ficompl
xor
std
dec
sbb
outsl
jb
adc
test
outsl
dec
xor
lods
outsl
mov
xor
outsl
push
in
hlt
push
js
outsl
cmpsl
jbe
mov
outsl
xlat
in
ficoml
dec
mov
cli
outsl
or
dec
adc
sub
jbe
xchg
cmc
and
add
js
inc
inc
mov
lods
outsl
xor
mov
in
loope
repz
inc
pop
outsl
adc
jbe
enter
pop
push
mov
das
insl
dec
out
es
movsl
cli
aaa
movsb
into
adc
dec
jecxz
add
dec
repnz
add
or
and
subl
je
push
fnstsw
outsl
xor
pushf
fwait
xchg
lods
outsl
lcall
and
mov
mov
sub
add
sbb
rorb
mov
pop
inc
gs
loopne
mov
outsl
inc
mov
into
cli
out
outsl
xor
and
ja
dec
xchg
insl
adc
lock
gs
pop
sub
mov
and
xchg
pop
das
dec
repz
fbstp
pop
xchg
cld
roll
loop
addl
jmp
fwait
inc
arpl
cmpsb
outsb
in
cli
bound
dec
je
mov
xchg
pop
repnz
or
adc
xor
jp
loop
mov
outsb
roll
inc
outsl
jmp
jns
lahf
mov
xchg
in
icebp
sbb
out
out
inc
aas
xor
adc
push
jmp
mov
mov
or
xchg
stos
sbb
aam
or
int3
push
inc
pop
sub
into
or
sbb
mov
jle
cmp
mov
pop
cmpb
lea
mov
repz
leave
or
outsl
pop
pop
cmp
inc
push
aas
fidivrs
arpl
ret
sahf
sub
std
pop
repz
mov
mov
aam
mov
jbe
lock
popa
cmc
inc
mov
mov
xchg
xchg
outsl
mov
lahf
js
jae
rorl
mov
push
ja
xor
cltd
imul
push
outsl
mov
aaa
scas
fwait
fwait
inc
shlb
stos
cli
cmp
fcomps
int3
pop
mov
sub
push
jge
xlat
scas
data16
outsl
inc
ficoml
gs
jp
sub
pop
jge
jbe
aas
lret
xor
outsl
inc
sbb
or
mulb
lahf
addr16
mov
outsl
xchg
push
mov
sarb
cltd
mov
lods
cmp
out
pop
outsl
out
lea
mov
sbb
push
in
test
xor
fisubs
adc
lods
inc
int3
lds
cmp
sbb
adc
outsl
out
inc
les
push
or
cltd
addb
and
fiadds
leave
xor
adc
push
popl
pop
push
mov
mov
out
outsl
jae
cli
mov
iret
repnz
lock
sbb
mov
mov
dec
imul
and
adc
outsl
mov
pop
mov
mov
outsl
mov
inc
scas
jnp
pop
call
cmp
lahf
push
mov
xor
addr16
sub
movsb
inc
insb
je
xchg
lret
lock
stc
pop
mov
mov
cmp
jle
cltd
sbb
daa
sti
loop
clc
dec
cmpsb
std
and
jb
or
fists
pop
stos
decb
or
cmp
std
cmp
testl
xchg
sub
pop
sbb
sbb
adc
and
outsl
cmp
push
mov
mov
dec
scas
addr16
mov
orb
aas
sub
sbb
sub
xchg
mov
addb
dec
lahf
adc
push
lods
or
push
sbb
pop
out
sub
jno
pop
insb
push
or
es
add
xor
rolb
mov
test
addr16
dec
jle
jecxz
les
mov
dec
outsb
cmp
jle
es
lahf
cli
lds
mov
inc
leave
and
stos
mov
jb
arpl
jo
andb
test
test
in
rclb
outsl
aaa
dec
add
outsl
cmpsl
pop
fsubl
loope
cwtl
pop
adc
into
mov
and
jp
push
lret
loop
lret
push
addr16
pop
repz
add
dec
push
and
jp
sbb
cmp
scas
pop
fisubrs
cmp
pop
cmp
aaa
popa
mov
repnz
jbe
pusha
movsl
inc
xchg
enter
mov
ja
jns
xchg
push
jo
jne
insb
add
outsl
inc
aam
sub
xchg
shrb
mov
inc
inc
icebp
sub
insb
shll
decb
and
ss
cmp
aad
fiaddl
mov
jne
add
sub
mov
std
xor
mov
repz
cltd
pop
stos
orb
ljmp
hlt
jno
out
sbb
mov
mov
std
lods
mov
aas
adc
push
mov
push
sti
cs
inc
xchg
outsb
mov
dec
incb
pop
push
sub
push
cmc
inc
mov
fcmovbe
lods
sub
out
arpl
jae
cmc
adc
add
je
inc
jle
add
ss
push
dec
subb
sbb
outsl
shlb
xor
in
shrl
mov
repnz
outsl
fildl
aad
sbb
loop
inc
mov
pop
ljmp
adcb
xchg
push
cmp
leave
pop
lcall
push
mov
std
outsl
dec
mov
lds
dec
mov
scas
cli
adc
fwait
in
jb
lock
mov
dec
ret
mov
jmp
add
outsl
movsb
cmpsl
stos
ja
sub
lret
mov
xchg
sarb
cld
or
push
mov
ficoml
adc
inc
mov
rcrb
outsl
add
popa
in
cmp
mov
cmc
or
mov
jnp
jle
pusha
xlat
outsl
mov
push
add
xor
stos
pop
or
loop
out
jl
imul
repnz
lds
sbb
movsl
mov
fidivl
add
lcall
addr16
outsl
imul
rorb
jmp
outsl
lret
xor
push
outsl
add
aad
jnp
sahf
jg
outsl
aam
sarb
ret
jno
call
add
sti
jle
in
xchg
rorb
aam
fmull
xchg
sbb
mov
mov
outsl
adc
inc
aas
test
and
je
pop
push
sub
int
sub
adc
and
clc
add
fwait
jle
call
sahf
sub
popf
aas
adc
icebp
mov
loope
pop
and
and
outsl
adc
aam
test
aaa
outsl
xchg
ljmp
mov
xor
in
cld
jnp
cmp
addr16
popa
sub
int3
xor
xchg
xor
iret
mov
insb
in
movsb
cltd
mov
mov
js
cmpsl
stos
mov
movl
add
or
jmp
popa
in
xchg
mov
outsl
pop
adc
and
orb
push
jbe
mov
bound
and
mov
scas
outsl
stos
xchg
cltd
jecxz
inc
xchg
mov
jp
fldenv
add
gs
cmp
hlt
popa
add
mov
lods
jae
sbb
jecxz
mov
cli
jno
xchg
push
test
dec
lds
inc
outsb
cmp
sub
and
lret
mov
fisttpll
push
sar
mov
movsl
das
nop
push
pusha
loope
dec
cmp
fsubrl
sahf
sub
inc
and
xlat
cld
jge
add
shll
outsl
dec
pop
sbb
clc
mov
gs
inc
sbb
cld
push
arpl
or
xchg
aad
jne
out
insb
xor
outsl
mov
xlat
ret
push
outsl
xchg
out
and
cmp
std
aas
mov
and
cmp
pop
and
nop
lock
jnp
adc
aaa
ss
xor
gs
pop
out
rcll
add
and
sbb
orb
in
add
push
sub
xchg
mov
sub
cmp
sbb
inc
outsl
in
pop
and
cmp
cmp
and
mov
xorb
rclb
stos
mov
rcrl
add
pushl
cmp
lea
test
push
shrb
insb
mov
mov
scas
outsl
iret
jnp
clc
xor
mov
dec
mov
dec
and
aam
popa
mov
mov
mov
xchg
inc
xchg
jl
pop
cltd
sbb
xchg
lock
and
mov
pop
pop
fstps
outsl
out
gs
xor
dec
xor
imul
mov
mov
dec
jmp
loopne
add
mov
mov
jns
outsl
mov
insb
movsb
pop
push
cmpsl
loop
sarb
xchg
mov
cli
popf
sbb
mov
jbe
imul
out
mov
mov
cltd
push
mov
ljmp
aam
fcomps
rcrb
addr16
fcmove
and
mov
and
lods
pusha
sbb
pop
dec
pop
adc
mov
jbe
mov
xchg
icebp
or
push
push
outsl
fmul
xchg
or
adc
jns
sbb
ret
outsl
mov
addb
mov
stos
popa
movsl
scas
pusha
adc
rcl
pop
xor
in
dec
loopne
insl
repnz
pop
fscale
aas
subb
xor
xor
outsl
adcb
mov
push
das
cli
je
addr16
add
push
testl
dec
push
lds
push
in
lea
adc
test
xchg
popf
ljmp
arpl
fisubs
and
fdivs
enter
add
sub
xlat
das
mov
lret
movsb
addr16
push
xchg
xchg
pop
ffreep
pop
test
subb
pop
xchg
sbb
dec
hlt
mov
loop
jb
outsl
adc
add
inc
outsl
sub
jnp
cmp
dec
fisubrl
fisttpl
enter
lret
pop
popa
outsl
mov
inc
das
stos
gs
or
out
xchg
add
in
xchg
cmc
js
iret
pop
mov
push
dec
mov
aas
ret
jp
ljmp
test
clc
into
sbb
cmp
mov
lods
outsl
jnp
iret
fimuls
and
mov
mov
movsb
push
mov
cltd
cmc
jns
xor
in
pusha
enter
adc
in
adc
rorb
popa
imul
icebp
push
fs
sbb
xchg
sub
xor
std
data16
lahf
jbe
mov
lret
popf
push
outsl
or
xchg
jae
adcl
outsl
fsubrs
repnz
sbbb
dec
icebp
test
mov
adc
jb
xor
mov
cmpb
pop
nop
out
popf
scas
lret
fisubs
data16
dec
outsl
mov
xchg
out
cwtl
rcr
sub
push
jbe
mov
add
pusha
sti
insb
fcmovnbe
fcomip
aas
push
sbb
test
stos
push
and
xchg
aam
aas
bound
mov
or
outsl
and
in
jbe
pop
sti
pop
push
sbb
jge
outsl
sub
or
pop
xor
push
mov
ja
movsb
mov
les
fidivrl
jb
pop
xor
ljmp
jecxz
subl
out
sti
frstor
mov
pmaxsw
jbe
xchg
adc
loope
jmp
subb
dec
sbb
cmp
lcall
xchg
push
fisubs
loop
jno
dec
shrl
mov
jge
mov
addr16
stc
dec
call
std
movq
fwait
rolb
dec
jnp
sub
test
fstpl
aam
jge
js
jmp
ret
jnp
scas
addr16
mov
jns
pop
cmp
in
negl
mov
mov
pop
lahf
add
cs
xchg
outsl
cmc
loopne
xlat
imul
jbe
insl
neg
pop
add
call
fiadds
push
idivb
outsl
call
add
ja
jb
loopne
mov
dec
subb
pop
and
in
loopne
mov
outsl
pop
dec
and
mov
pop
inc
cmp
jae
outsl
push
xorb
mov
into
out
mov
std
adc
outsl
cmp
adc
cwtl
mov
mov
jbe
push
inc
pop
in
ss
cmp
bound
push
test
push
sbb
bswap
or
pusha
enter
xor
outsl
jge
jecxz
inc
pop
push
adc
ret
pusha
lret
pop
and
shll
jb
mov
cli
push
cmp
jno
xchg
lea
outsl
repz
cmc
or
dec
test
das
fidivrs
lahf
addr16
rcr
aas
sub
loopne
push
jbe
pusha
adc
jne
jns
repnz
inc
aad
cmp
fimull
sbb
lods
jmp
stc
cmp
aas
scas
test
xor
arpl
jle
inc
lds
out
push
outsl
add
push
sub
and
pop
loopne
testl
mov
outsl
and
add
outsl
inc
pop
inc
rol
jns
outsl
iret
icebp
cwtl
test
mov
and
shlb
mov
int
pop
inc
leave
mov
push
lret
out
repnz
les
dec
add
jge
ret
aas
cmp
cmc
into
xchg
popa
jnp
fs
mov
or
or
inc
jle
or
dec
les
shrl
pop
xor
shlb
add
or
pop
outsl
adc
mov
add
sub
sti
mov
aam
pushf
outsl
leave
pop
sbb
inc
add
mov
arpl
xchg
pop
adcb
inc
dec
in
test
fdivp
adc
sub
outsl
mov
xor
inc
push
in
jge
out
out
jmp
mov
imul
icebp
arpl
int3
add
pop
mov
sti
pop
sbb
sbb
cmp
and
push
xchg
mov
sub
outsb
xchg
aad
dec
test
sub
outsl
xchg
dec
mov
ljmp
jmp
outsl
mov
lahf
lods
xchg
mov
mov
nop
sbb
xchg
fimull
pop
sub
dec
jne
ds
and
insb
lret
cmp
clc
push
jno
cwtl
fisubrs
xchg
jp
mov
loop
addr16
adcb
lret
jnp
pop
aas
je
cmp
out
std
scas
jle
mov
xlat
jne
out
outsl
test
outsb
and
lret
aas
fsubl
mov
mov
sub
fcomp
jbe
jle
mov
push
mov
xchg
outsl
pop
mov
gs
adc
pop
aam
adc
fidivrl
leave
clc
fwait
enter
sarl
outsl
pop
data16
lea
pop
sbb
nop
fimuls
jge
int
xor
inc
ja
sub
lret
stc
pushf
inc
inc
cmpsb
div
outsl
or
or
inc
orl
push
mov
outsl
test
pop
jno
fs
insb
out
lds
jecxz
mov
dec
xor
mov
ss
in
jecxz
pop
daa
je
rcrb
ljmp
add
mov
outsl
inc
fildl
cmp
jb
insb
mov
add
test
xor
mov
mov
aas
adc
arpl
or
push
pop
scas
jmp
rcrb
mov
add
out
pusha
outsl
push
idivl
xor
mov
sbb
mov
add
mov
add
mov
cmp
jge
outsl
hlt
xchg
lcall
lods
pop
fstps
shlb
outsl
push
pop
jmp
ljmp
int3
mov
insb
in
outsl
lock
movl
lahf
jecxz
outsl
je
jnp
xchg
cltd
xrelease
testl
loopne
testl
mov
jo
xchg
outsl
icebp
mov
cmp
outsl
aam
sub
scas
add
prefetch
push
int
cmpl
mov
das
dec
jmp
scas
andb
and
mov
shll
cld
inc
insb
mov
int
addr16
push
sbb
push
mov
hlt
push
dec
outsl
inc
ja
adc
iret
imul
out
sbb
jge
outsl
add
pop
cmp
shl
push
inc
xor
popf
cmp
inc
divl
sbb
and
cwtl
cmp
xlat
stos
add
outsl
add
sub
xor
adc
inc
and
imul
sbb
rcrl
mov
cmp
sbb
std
push
movsb
fcom
mov
lods
add
sbb
add
jns
adc
ljmp
in
dec
sbb
fimull
iret
sub
andb
push
inc
outsl
adc
das
and
dec
jge
ds
lock
xor
cmpl
cltd
sub
lock
shrb
std
add
adc
jp
repnz
xchg
outsl
int
lds
or
outsl
lock
and
jecxz
xor
pop
sbb
dec
aaa
enter
cmp
xchg
pop
push
dec
hlt
outsl
cmp
or
cs
es
pop
stos
pop
add
repz
xor
and
sbb
add
jecxz
out
adc
push
push
outsl
xor
stos
ret
dec
add
scas
outsl
in
mov
sar
mov
scas
xor
leave
cmp
daa
push
mov
outsl
subl
push
sub
push
pop
aam
adc
xchg
mov
ds
jl
test
fcomp
xchg
bound
iret
outsl
imulb
je
fdivl
push
outsl
adc
or
inc
inc
cli
outsl
and
pop
adc
ljmp
add
outsl
or
ja
outsl
xchg
add
into
pushf
adc
sarl
mull
into
outsl
inc
test
repnz
sti
xchg
outsl
cli
mov
xor
mov
into
add
mov
cmp
imul
push
shrb
ljmp
mov
outsl
mov
sub
adc
test
out
fs
dec
add
xchg
xor
pop
outsl
fs
sub
jecxz
push
cli
push
int3
movq
xchg
and
inc
ljmp
fs
shrb
out
cmc
ljmp
or
cmp
subb
mov
outsl
mov
push
jp
ds
add
jle
cld
xchg
mov
jb
arpl
es
outsl
arpl
pop
insl
jne
adc
lahf
xchg
adc
add
mov
arpl
cmp
shlb
push
mov
outsl
cli
cmp
jns
fwait
mov
outsl
mov
mov
clc
mov
js
add
subb
jne
repz
adc
rclb
jle
call
lret
mov
dec
inc
stc
outsl
data16
mov
mov
je
int
outsb
inc
sbb
aam
fisttps
shrb
fldl
popf
loop
xchg
outsl
rcll
repnz
xor
outsl
lds
push
les
fistps
and
repz
xchg
aam
sbb
push
flds
xor
repz
or
outsl
aaa
bound
rcl
dec
aad
add
adc
mov
dec
std
xchg
sub
ljmp
popa
aaa
jbe
popf
adc
add
subb
cmp
imul
lods
stc
mov
outsl
rcr
scas
mov
xchg
popa
fwait
rcrl
addr16
stc
cltd
pop
aas
test
xchg
hlt
xchg
adc
adc
lcall
sbb
inc
jmp
loop
and
jl
mov
push
repz
or
fldt
sarb
iret
cmpsl
outsl
out
and
ljmp
mov
and
mov
bound
pop
jns
in
fdivrs
ret
jl
outsl
jge
xchg
outsl
pop
add
xor
inc
xlat
outsl
test
dec
test
cmp
pushf
stos
inc
movsb
mov
arpl
imul
sub
outsl
cmc
add
cwtl
test
push
sti
mov
mov
pop
outsl
fimuls
mov
jp
in
dec
stos
jae
bnd
fstpt
stc
dec
mov
popa
inc
outsl
pop
pop
fcomp
sub
jb
or
enter
mov
sbb
outsl
mov
jb
data16
iret
pop
movsb
hlt
push
jo
mov
and
lea
xor
popa
lock
dec
adc
adc
pop
mov
enter
pop
inc
les
push
subb
inc
mov
add
mov
add
or
cvtdq2ps
jbe
leave
dec
aas
cmp
aam
int3
adc
and
aas
loope
pushf
mov
loop
dec
arpl
fidivl
adc
sbb
lret
outsl
xchg
cmp
add
xor
inc
cwtl
xor
shl
sbb
in
mov
pop
cmp
add
and
popa
int3
mov
pusha
test
stos
xchg
mov
jo
xlat
outsl
sahf
ret
inc
jecxz
out
adc
mov
out
outsl
inc
xchg
xor
xchg
inc
push
outsl
jno
ja
ljmp
subl
icebp
xor
js
mov
cmp
movsb
mov
mov
repnz
add
std
or
add
jo
arpl
cmp
cltd
lods
xchg
push
pop
fadds
popa
pop
jo
addr16
mov
xlat
push
jne
bound
mov
outsl
lret
or
jno
xchg
outsl
out
scas
lcall
cwtl
cmpsb
call
or
imul
or
scas
push
inc
mov
outsl
mov
pop
xor
outsl
adc
in
shr
in
mov
data16
xchg
and
ja
hlt
and
push
into
shl
mov
xchg
shlb
xchg
xchg
jae
loope
mov
cltd
aas
addb
ja
hlt
outsl
jl
or
inc
pop
cli
pop
dec
xchg
stos
sub
int
or
pusha
sbb
lods
xchg
jo
imul
mov
and
and
jmp
imul
cmc
push
testl
imul
outsl
sub
insb
pop
addr16
outsl
mov
iret
fstps
push
push
and
outsl
nop
popf
lret
sub
inc
ficompl
jne
mov
shrl
or
jns
mov
loop
xchg
mov
fwait
into
mov
pop
cli
data16
lret
mov
dec
push
lea
dec
fcom
loopne
mov
jnp
gs
push
popa
push
push
mov
cmp
int
inc
jge
arpl
push
add
cli
dec
outsl
and
arpl
scas
jle
jge
fwait
jp
add
ffree
sub
decb
scas
xchg
adc
jge
rcr
outsl
inc
xor
fidivs
and
jae
push
outsl
nop
ds
loopne
cs
jb
addr16
ja
rorb
sbb
outsl
adcl
pop
cmp
in
mov
xchg
sbb
loope
scas
aas
notb
aad
aas
insb
in
aas
or
dec
outsl
mov
xor
add
mov
outsl
mov
cmp
xor
scas
leave
jmp
and
mov
adc
lods
xchg
and
sub
mov
pushf
jno
es
pop
outsl
sbb
out
subl
or
cmpsb
cmpsl
xor
arpl
dec
or
aas
fwait
test
outsl
xor
pop
outsl
inc
addr16
iret
lods
jne
lock
nop
mov
mov
repz
xor
popfw
jp
xorb
dec
aaa
gs
call
xchg
dec
mov
jb
xor
push
je
imul
fwait
dec
je
lea
fdivrl
dec
cmp
stos
fs
pop
mov
add
icebp
outsl
sbb
xchg
jno
rcl
incb
outsb
cld
dec
lock
mov
loopne
outsl
cmp
add
cli
push
mov
xchg
xlat
arpl
fcomps
jle
ret
and
fs
xor
cmp
outsl
jbe
mov
leave
cs
pop
orl
bound
pop
outsl
adc
mov
mov
fists
clc
or
mov
cmp
dec
rolb
ret
gs
cvtps2pd
sbb
jle
nop
mov
fbstp
inc
jl
jnp
adc
out
cmp
add
out
dec
outsl
cmp
movsl
mov
adc
pop
aad
inc
and
add
sahf
mov
int3
cltd
iret
cs
xor
mov
inc
lds
popa
ljmp
std
push
repnz
test
mov
jmp
push
repz
push
pop
sbb
stc
or
push
adc
jmp
mov
jbe
and
mov
push
loop
sbb
ror
adc
xchg
test
movsl
rorb
inc
out
aas
mov
cwtl
call
fidivrl
bound
mov
dec
cmp
jecxz
jge
inc
mov
xlat
sub
add
xchg
pop
mov
dec
mov
and
lret
sbb
aad
xor
shrl
jbe
sbb
mov
es
arpl
mov
jbe
or
outsl
movsl
mov
psubusw
mov
adc
dec
outsl
lret
push
fs
fidivrl
aas
ljmp
pop
outsl
adc
shlb
adc
xchg
cmp
push
lea
movsl
lret
movsb
inc
movq
push
loope
outsl
xchg
sarb
aaa
js
clc
insl
loopne
or
outsl
inc
lods
movsl
or
loop
into
mov
outsl
rolb
fisttpl
outsl
sti
in
lods
ss
stos
add
or
adc
aas
adc
leave
mov
xchg
ffree
scas
outsl
sub
in
imul
std
sbb
pop
shlb
adc
push
outsl
outsb
mov
pop
mov
xchg
addr16
das
push
xchg
inc
repnz
outsl
scas
jecxz
aad
std
xchg
rep
mov
push
ja
outsl
loopne
adc
cld
aam
xlat
outsl
mov
sbbl
and
subl
xchg
jmp
inc
outsl
std
test
shlb
cmp
mov
jp
in
inc
insb
popf
adc
dec
cmp
pop
xor
stos
cmpb
das
outsl
dec
mov
testb
incb
mov
idivl
test
cwtl
xor
movsb
cmp
add
rorb
and
xchg
mov
and
mov
rcrb
dec
xchg
jmp
movsb
addr16
aam
addl
sbb
inc
mov
nop
in
movsl
fwait
sub
daa
outsl
push
lods
adc
or
mov
loope
cs
pusha
xchg
out
fisubs
lret
aas
outsl
ret
movsl
jae
cwtl
cmpsb
outsl
xlat
inc
add
scas
aas
arpl
mov
or
pushf
mov
stc
js
cld
push
outsl
push
and
pop
test
outsl
loope
stos
cli
enter
push
jbe
and
aas
loop
outsl
rcrb
leave
mov
xor
lods
jle
cltd
sub
inc
dec
orl
jae
inc
sti
imul
inc
js
insb
ljmp
repz
mov
stos
push
xchg
outsl
add
mov
cmpsb
add
pop
xor
jo
mov
outsl
std
sahf
pop
arpl
inc
xchg
fld
popa
or
dec
gs
pusha
popa
push
cmp
mov
scas
cwtl
or
and
inc
or
jmp
xchg
dec
mov
dec
scas
sbb
data16
dec
sub
mov
outsl
orb
mov
mov
jbe
imul
arpl
add
in
jle
add
mov
jno
add
aas
mov
adc
jb
bound
insb
movsb
out
xor
int3
outsl
cmpsb
xor
jmp
out
or
sub
mov
aas
xchg
fbstp
mov
outsl
cmpsb
mov
lock
sub
into
push
fildl
or
mov
mov
inc
arpl
je
and
push
adc
inc
jae
xor
outsl
ja
mov
clc
add
mov
jmp
mov
cmp
inc
hlt
push
outsl
pop
lret
cs
test
ret
jmp
pop
sub
pushf
pop
mov
push
outsb
adc
push
mov
js
xor
or
int3
aas
sbb
in
cli
xchg
arpl
cmp
push
outsl
ret
cwtl
jl
imul
aas
sub
sarb
mov
pop
xor
jae
pop
andb
insb
xor
mov
pop
mov
push
repz
aaa
sub
outsl
cmc
mov
jecxz
jmp
enter
xchg
push
pop
pushf
sub
das
xor
mov
or
pop
xor
sbb
addr16
xor
lods
push
addl
arpl
jge
push
pop
arpl
push
push
test
xchg
adc
arpl
sti
jnp
shll
lret
jecxz
testl
pop
add
or
movl
pop
outsl
jecxz
sub
pushf
sar
loope
mov
mov
fdivr
sbb
push
xor
addr16
int3
movsb
stos
fsubrs
xchg
mov
outsl
in
arpl
insl
push
outsl
fisttpl
push
xor
and
outsl
mov
cmp
sbb
push
enter
arpl
adc
sub
xor
sti
stos
jbe
je
mov
imul
jnp,pn
outsl
repz
xor
outsl
loop
sbb
mov
add
repz
aas
outsl
icebp
gs
pop
push
fs
adc
inc
lods
inc
arpl
pop
add
lcall
mov
stc
loopne
inc
sbb
sub
scas
or
add
imul
mov
jae
popf
loope
rorl
mov
pop
popa
scas
call
xlat
lahf
pop
xchg
pushf
ret
mov
leave
shr
outsl
enter
mov
insl
stos
sub
outsl
cmp
pusha
fwait
pop
rorl
add
jmp
imul
mov
pusha
and
int
outsl
jne
mov
jle
adc
push
cmp
cmp
mov
mov
sub
cmpsb
pop
or
fisubrl
xchg
pop
or
push
outsl
xchg
aam
testl
xor
cltd
mov
xchg
bound
or
sbb
add
push
cmp
jle
sub
adc
addb
adcb
cltd
fwait
xor
rolb
mov
lea
outsl
lahf
xorb
cmc
push
enter
int
in
sub
jle
mov
adc
out
mov
in
out
imul
or
stc
popf
imul
mov
inc
outsl
leave
xchg
je
fnstcw
sbb
cmpsb
mov
cld
sbb
fcomp
outsl
sar
adc
adc
jge
outsl
push
jo
jne
xchg
pusha
cltd
push
clc
pop
subl
fwait
nop
jecxz
outsl
inc
hlt
inc
sbb
dec
mov
sbb
stc
sbb
mov
or
stos
push
ljmp
push
lahf
xchg
lock
mov
xlat
and
mov
add
mov
sbb
out
xchg
loop
outsl
sub
push
dec
jle
xor
push
scas
lods
push
cmp
and
insb
mov
jmp
stc
in
lods
jne
outsb
int
inc
aaa
sub
aaa
jbe
push
out
push
push
into
outsl
xor
outsl
repnz
in
mov
cwtl
sub
mov
rorb
sub
incl
rcrl
pushf
push
cmpsl
ret
fwait
pop
dec
sahf
jae
into
mov
outsl
jno
xchg
cmp
repz
outsl
adc
add
sbb
rorl
ret
push
cs
rol
xchg
adc
inc
imul
xor
inc
aam
adc
mov
imul
or
mov
jle
xor
insl
outsl
hlt
leave
pop
mov
cmp
iret
add
mov
add
xchg
je
addr16
lcall
mov
enter
xchg
in
dec
jne
popa
add
push
cmp
scas
fwait
stc
dec
mov
adc
cmp
imul
cmp
repz
mov
mov
push
inc
outsl
icebp
xor
cli
jge
jb
outsl
or
lods
add
sbb
stos
cwtl
stos
jns
jge
add
push
mov
jno
outsl
xor
xchg
test
outsl
add
push
sub
sar
cli
das
fwait
dec
xchg
movsl
mov
xchg
pusha
fildll
or
lcall
dec
outsl
and
adc
aas
dec
pop
outsl
jp
push
xchg
movsb
pop
jecxz
outsl
test
popf
idivb
mov
xor
imul
and
mov
cmp
and
outsl
fwait
je
xchg
pop
mov
push
in
loop
insb
xor
push
sub
outsl
xchg
push
je
popf
inc
inc
or
fildll
inc
add
jle
lock
cmpsl
push
aad
ja
outsl
fnstsw
jnp
outsl
or
mov
outsl
loope
bound
fidivrs
rclb
and
inc
and
jmp
inc
test
push
and
push
outsb
xor
sub
outsl
xchg
cmp
addl
mov
dec
test
outsl
cmp
mov
shrl
jbe
cmpsb
add
pop
inc
in
imul
outsl
dec
je
push
in
xchg
adc
mov
popf
sbb
stc
daa
sbb
stos
inc
dec
aaa
add
icebp
cld
in
xor
repz
xor
cs
rclb
mov
xchg
outsl
cli
pusha
adc
leave
in
lods
mov
movsb
mov
pop
data16
pop
inc
and
jp
push
jge
jge
pop
in
movsb
arpl
xor
dec
lcall
jae
mov
mov
and
outsl
jne
push
ffreep
sub
lods
sbbl
adc
outsl
jns
jge
sub
repnz
pop
cmp
ljmp
aad
pop
and
push
aas
cmc
mov
gs
xor
sbb
gs
mov
popa
push
outsl
pop
shrl
mov
addr16
sbb
jne
insl
int3
cmp
decb
jge
pop
shrb
xor
mov
inc
outsl
adcb
stos
andb
loope
lahf
jmp
mov
popf
mov
lods
add
jge
into
sub
xor
outsl
pop
les
into
fxch
xor
dec
mov
je
sahf
addr16
jae
add
iret
adc
jecxz
aad
jle
push
dec
mov
gs
fisubl
or
imul
hlt
mov
lahf
push
mov
leave
mov
mov
adc
lods
cmpsl
nop
pop
test
jp
mov
outsl
call
lahf
negb
outsl
addl
adcl
cmp
add
pop
mov
pop
jge
mov
and
shrb
adc
cli
push
das
orl
or
xchg
lcall
pop
cmp
rol
sub
push
hlt
outsl
mov
divl
xchg
pop
pop
sub
ss
outsl
lret
or
out
cmp
aad
mov
dec
repz
cld
pop
movsl
cltd
jb
mov
das
aad
fs
inc
aam
xor
mov
push
std
mov
outsl
les
das
cmp
outsl
mov
in
xor
faddp
std
cmpsb
ret
lods
bswap
and
push
cmp
sub
cmpsl
dec
lods
mov
iret
mov
mov
fs
cmp
mov
mov
orl
outsl
rorl
shrl
test
ja
push
ljmp
xor
dec
mov
pop
cmp
cmp
outsl
rcr
and
jmp
outsl
shlb
outsl
dec
xchg
xchg
out
cwtl
std
push
adc
aaa
sarb
jae
mov
loopne
popa
imul
dec
mov
lcall
dec
vandnpd
decb
or
cmp
arpl
rorb
mov
push
and
lods
pop
lcall
outsl
sub
push
outsl
xor
enter
inc
jl
dec
push
ficompl
mov
test
fs
add
lahf
pop
and
inc
pop
loopne
pop
jecxz
nop
add
sbb
fwait
arpl
xorl
je
imul
and
mov
or
or
loopne
xchg
out
outsl
inc
mov
sbb
pop
adc
sub
outsl
call
dec
push
leave
cld
outsl
cld
fimuls
jae
outsl
xor
xor
xor
test
arpl
insb
inc
and
das
pop
bound
pop
push
insl
jne
jbe
outsl
in
cmp
and
mov
das
js
loope
in
arpl
jno
outsl
inc
shll
pop
adc
lods
jle
sub
test
mov
sub
push
outsl
cmp
repz
in
aas
iret
lcall
mov
outsl
sti
xor
repnz
and
outsl
jns
out
sbb
lods
pop
xchg
imul
outsl
mov
or
ja
js
outsl
xchg
rol
sahf
xor
mov
mov
sub
out
arpl
sub
stc
popf
lods
and
fldt
stos
loop
push
pop
subl
and
stc
lods
push
mov
scas
xor
pop
xor
fisubl
enter
dec
pop
push
arpl
push
mov
mov
mov
scas
lods
test
sbb
data16
push
lret
xor
sarb
clc
xchg
sub
sti
add
xchg
xchg
xlat
mov
addr16
test
or
shrb
pop
and
jns
outsl
mov
push
adc
ja
outsl
enter
pop
pushl
icebp
or
sarl
sbb
sbb
mov
add
insl
cmp
aam
lods
gs
out
addr16
hlt
into
fsubrl
nop
insb
lahf
mov
out
inc
sbb
lea
ficompl
clc
outsl
sub
leave
enter
pop
outsl
and
mov
adcl
je
cvtpi2ps
xchg
mov
js
or
jp
and
or
dec
pusha
cli
popf
adc
sub
loopne
decb
push
fdivr
mov
out
lods
test
lret
aas
aaa
push
out
and
add
outsl
mov
pushf
in
jo
dec
mov
rorb
icebp
push
repnz
inc
push
outsl
mov
or
push
rcll
out
stos
xlat
mov
ljmp
push
pop
inc
push
filds
xor
pop
je
push
fstpl
int3
aas
xchg
mov
les
mov
and
idivb
js
outsl
xor
loope
pop
pop
stos
gs
in
pop
ljmp
mov
or
jbe
popa
mov
shrl
jae
lea
mov
mov
jns
add
aas
outsl
pop
adc
int3
cmpsb
mov
lods
push
inc
xchg
dec
sbb
ret
negl
into
xchg
mov
cwtl
mov
aam
fimuls
sbb
xor
outsl
stos
inc
in
dec
iretw
fldenv
jmp
int
subl
or
stos
mov
mov
mov
cmpsl
jge
jno
outsl
mov
mov
xorb
fs
mov
cmp
in
popa
aam
dec
mov
inc
popf
or
dec
gs
fbld
adc
test
in
adc
outsl
sahf
rcll
loope
lods
lcall
adc
pushf
push
ja
in
outsl
cmp
outsl
jb
cwtl
fcmovnbe
push
jl
aas
xchg
pop
loopne
hlt
cmp
pushf
pop
dec
lret
outsl
cli
in
cmpsb
pusha
push
inc
rcrb
fisttpl
fildll
test
push
jne
addr16
xlat
inc
sub
or
test
out
test
pop
orl
jbe
aam
pushw
shll
popf
pushf
iret
js
sahf
repz
repnz
outsl
sti
test
mov
outsl
shr
adc
xchg
lods
adc
rcrb
ljmp
lcall
push
xor
or
jo
js
push
xchg
mov
sbb
mov
clc
fcompl
jnp
inc
or
insb
xor
incl
outsl
xor
mov
inc
cwtl
cltd
repz
fcmovnbe
pop
fcmovnbe
inc
outsl
push
lret
jmp
sbb
ss
outsl
les
push
aas
inc
jae
outsl
in
je
push
pop
in
lahf
in
lret
outsl
fimuls
inc
sti
outsl
push
scas
pop
out
mov
jns
dec
jp
outsl
mov
lea
mov
iret
testb
mov
or
test
aas
mov
jecxz
xchg
nop
in
mov
outsl
je
mov
pop
outsl
and
pop
and
mov
xor
hlt
fmuls
mov
adc
adc
and
push
jecxz
fwait
dec
inc
pop
add
int
repnz
or
xor
pop
and
sub
mov
sub
mov
sbbl
mov
inc
dec
in
mov
sbb
dec
sarb
shll
outsl
sbb
clc
nop
movsl
test
sub
fcompl
xchg
loop
call
mov
mov
clc
fs
into
push
push
or
out
dec
popa
adc
mov
add
js
test
inc
jmp
push
pop
sub
cmp
pop
stos
mov
jge
sahf
mov
sbb
call
and
shrl
xor
push
mov
mov
sub
sar
outsl
push
out
xchg
aad
lea
push
lret
mov
shrb
adc
das
mov
stc
outsl
cmp
add
xchg
sub
les
sbb
pop
leave
fisubl
sub
ds
imul
or
lret
cmp
xor
mov
andl
jp
add
dec
sub
push
jmp
scas
pop
jnp
and
mov
mov
xchg
push
push
and
out
pop
mov
pop
jecxz
outsl
xor
sub
aam
pop
lret
rorb
push
popa
dec
lea
imul
jecxz
in
std
cmp
push
insb
jp
andl
rol
outsl
mov
mov
into
test
xor
loop
jnp
mov
mov
mov
xchg
fwait
jb
fisubrs
mov
adc
cmpb
sarl
adc
insb
nop
mov
into
add
pop
loope
add
shll
popa
xchg
outsl
mov
and
outsl
lret
inc
and
mov
js
ret
ja
jno
push
loop
testl
sbb
pusha
mov
int3
outsl
scas
pop
nop
mov
out
mov
xchg
jbe
test
dec
xchg
or
sbb
mov
outsl
pop
test
aaa
inc
aam
movsl
outsl
out
jbe
mov
setae
bound
push
mov
outsl
arpl
lods
int
adc
mov
outsl
add
jno
mov
stc
mov
std
mov
add
lea
jne
shlb
sbb
dec
mov
adc
in
out
xchg
stos
cmp
addr16
push
pop
outsl
mov
or
ja
cmp
outsl
outsb
fiaddl
push
outsl
repnz
sbbl
adc
and
lcall
and
stos
leave
jnp
lods
addr16
jo
sub
xor
pop
adc
dec
sahf
mov
pop
sbb
in
jno
arpl
mov
sbb
jne
add
jo
sub
insl
push
or
adc
dec
mov
in
imul
outsl
cs
jae
push
and
mov
imul
jecxz
outsl
add
cmp
inc
xchg
xchg
in
xor
or
jne
or
leave
inc
cwtl
ret
push
pop
subb
mov
lahf
jb
sbbl
pop
xor
or
clc
pushf
xchg
cmp
loop
jle
or
out
imul
adc
mov
pop
push
pop
cmp
dec
xchg
or
or
xor
je
mov
xlat
lea
outsl
dec
fwait
mov
cs
ret
outsl
mov
xchg
adc
ljmp
cs
jge
leave
pop
mov
test
repz
jle
pusha
scas
addr16
jns
xchg
cli
sbb
cmp
addr16
loop
jecxz
ljmp
fidivrl
mov
xor
repnz
mov
jp
outsl
fbld
fmul
scas
xor
fs
xor
add
sub
lea
outsl
hlt
enter
jae
sti
outsl
cltd
ja
nop
aad
dec
fnstcw
lcall
insb
orb
sub
add
mov
mov
mov
outsl
mov
pop
int3
pop
and
pop
sbb
iret
jmp
aaa
out
pusha
das
adc
jno,pt
in
outsl
xorb
sub
outsl
lea
sub
cmpsl
lahf
arpl
decb
js
ja
push
fistpl
in
xchg
shl
adc
leave
xor
repnz
cltd
cmp
mov
xor
push
cld
push
dec
leave
and
inc
outsl
test
rclb
test
push
clc
cltd
add
lock
sub
or
aam
sbb
pop
push
sbb
in
push
outsl
dec
movsb
pop
pop
inc
fmul
lock
lahf
jns
outsl
adc
jae
imull
ret
fists
jbe
stc
mov
dec
lea
mov
jge
jle
arpl
jmp
aam
ffree
ds
jnp
or
outsl
data16
pop
leave
lret
je
lcall
sub
ja
out
sti
xor
popf
xchg
mov
xchg
xlat
arpl
shlb
movsl
roll
stc
xor
fcoml
test
cltd
dec
cmp
xchg
push
cmp
mov
fnstcw
cli
cmp
push
lcall
mov
dec
je
xor
ret
daa
pop
pop
inc
popf
mov
sub
dec
int3
outsl
push
ja
je
subl
clc
testl
mov
xchg
dec
inc
push
cmp
outsl
add
in
std
je
jo
mov
lea
outsl
cwtl
pushf
lods
js
jnp
pop
in
sub
lea
cwtl
shlb
lea
jns
test
fs
decl
dec
arpl
in
fcomp
mov
jmp
push
cmp
pop
cli
ret
mov
and
adc
aaa
insb
call
and
leave
aas
cmp
insl
popf
lcall
mov
jp
mov
sahf
xor
cmp
sarb
outsl
in
lods
stc
sbb
or
aas
test
dec
test
outsl
popf
lods
insb
inc
mov
ja
aad
bnd
ffreep
shrb
lret
imul
mov
incl
inc
mov
negl
pop
xchg
lahf
adc
outsl
out
or
popa
outsl
mov
roll
cmp
and
js
inc
xor
les
push
cs
push
sbb
adc
xchg
push
fs
mov
aaa
mov
mov
pusha
xor
dec
mov
movsl
into
add
and
stc
cltd
pop
mov
ja
out
sahf
xor
popf
cld
push
sub
jb
push
mov
mov
outsl
add
cs
sub
fwait
outsl
sbb
les
repnz
clc
outsl
cld
out
cmpsb
push
mov
mov
out
stos
daa
jo
jns
cmpsl
popa
outsl
xchg
nop
lock
lods
rorl
jne
mov
adc
cmp
or
repnz
sub
in
and
mov
mov
inc
sub
push
je
and
mov
mov
stos
rcl
mov
leave
outsl
test
adc
outsl
xor
xchg
fisubrl
sub
dec
into
outsl
sub
pop
cltd
sbb
push
ja
pop
cmpsl
out
cld
push
jo
testb
jne
orb
add
test
aam
add
push
mov
loop
les
pushf
jecxz
push
ss
pop
pop
repnz
push
jb
push
loop
xchg
cmp
sub
dec
repnz
outsl
jb
mov
subb
add
sub
mov
outsl
pop
jp
cmp
sbb
fisubrs
jbe
hlt
xor
lahf
jle
or
jmp
lcall
outsl
outsb
adc
cmc
outsl
rorb
leave
outsl
mov
pusha
sbb
sbb
scas
mov
fildll
sbb
js
mov
sub
dec
add
lcall
pop
adc
sbb
fsubrl
lea
jecxz
push
lahf
adc
sti
adc
mov
push
aam
rorl
add
inc
inc
js
push
mov
jne
xchg
mov
repz
mov
jae
shrl
sti
in
stos
decl
inc
bound
sbb
gs
out
pushf
daa
sahf
pop
iret
aam
pop
icebp
ljmp
bound
jp
cmp
xor
imull
mov
loop
fldl
pop
in
inc
mov
inc
popf
outsl
xchg
mov
mov
mov
clc
sbb
mov
or
fbld
and
fcomps
dec
iret
clc
pop
out
loope
or
mov
outsl
subl
cld
push
fistpl
pop
and
add
cmp
cmp
addr16
sti
lods
test
push
mov
sbb
push
outsl
mov
test
lods
xchg
adc
sub
mov
cmp
jo
and
xor
mov
adc
jmp
mov
push
lret
imul
xor
sbb
or
mov
pop
jp
aas
scas
sub
shll
cmp
outsl
lods
sbb
dec
outsl
fstpl
fsubrl
lds
cwtl
lods
adc
jp
add
mov
outsl
mov
fidivs
outsl
nop
js
jne
jae
cld
mov
outsl
and
iret
cmc
mov
outsl
cmp
sub
call
fisubrs
pop
out
mov
jmp
xchg
jno
add
lock
mov
sub
insb
outsl
sbb
scas
sbb
dec
cmp
fldt
cmpsl
mov
xor
mov
cmp
loope
outsl
ljmp
jecxz
outsl
es
mov
outsl
popw
and
inc
xchg
push
outsl
stos
jbe
sahf
xor
inc
cwtl
xor
mov
outsl
and
pop
jae
outsl
xor
mov
ja
sarb
movsb
and
mov
adc
lds
push
cmp
dec
pop
das
mov
sbbb
xchg
xor
outsl
mov
xor
scas
outsl
stos
jnp
cmp
xchg
mov
push
rcr
xlat
mov
lods
jnp
sbb
cld
or
xchg
outsb
mov
jb
das
jno
ja
cmp
fistl
pushf
aas
push
outsb
rclb
sub
mov
and
jb
inc
adc
jb
in
testb
scas
xchg
cwtl
out
push
outsl
lea
addr16
pop
leave
cmp
outsl
cmpsb
sub
or
mov
repz
arpl
das
outsl
jmp
cld
inc
and
push
aad
hlt
pop
pushf
repnz
or
je
out
fsubrs
aas
icebp
stc
and
pop
in
repnz
cmc
xchg
fcoml
ljmp
out
jae
rcr
add
nop
ss
scas
icebp
adc
sub
xchg
arpl
xor
into
ss
mov
jmp
gs
shlb
jns
outsl
or
mov
andb
mov
outsl
sub
jae
push
mov
mov
sarb
add
out
pop
mov
test
inc
and
outsl
push
add
add
sbb
adc
push
and
insl
shrl
mov
das
popa
mov
mov
arpl
jecxz
std
xor
mov
outsl
mov
dec
outsb
test
jne
outsl
push
push
mov
adc
mov
mov
out
xchg
outsl
shl
xlat
test
pop
cmp
adc
push
or
test
mov
loopne
cmp
inc
xchg
rorl
popa
jl
pushl
outsl
cmp
mov
leave
outsl
adc
pop
lahf
adc
mov
and
pusha
andb
push
outsl
ds
sbb
dec
mov
aad
outsl
es
mov
popf
out
iret
mov
mov
imull
fdivrl
mov
lcall
lods
mov
and
jns
inc
cmc
sbb
pop
outsl
pop
push
call
imul
decb
sbb
jae
sub
and
aad
aam
aaa
pop
push
pop
cltd
scas
dec
and
xchg
outsl
popf
into
push
inc
adc
repnz
cmc
popa
dec
cltd
in
stos
jne
mov
shll
inc
mov
or
xor
cmc
mov
jbe
sub
add
lock
popa
sbb
loop
xor
out
cmp
outsl
jnp
scas
mov
mov
inc
add
lods
outsl
or
cmpsl
sub
loop
dec
pop
dec
test
movsb
lods
fstpt
clc
repz
outsl
test
push
jae
outsl
subl
mov
daa
cmp
out
das
or
adc
xor
jge
lods
xchg
nop
loope
outsl
enter
add
inc
movsb
dec
addr16
cs
data16
outsl
call
lea
xchg
sbb
nop
outsl
push
shlb
addr16
fdivs
test
push
dec
push
outsl
test
mov
mov
outsl
std
jb
mov
push
cmp
je
enter
test
add
cmp
cmp
pop
sbb
sbb
sbb
sub
push
mov
shrl
fcmovnu
sub
mov
xchg
mov
jbe
adc
pop
cmp
or
sti
stos
ja
enter
adc
sbb
xor
pop
arpl
clc
mov
and
negl
mov
outsl
clc
and
push
shrb
sbb
or
jmp
lods
adc
mov
sbb
loop
adc
add
in
incb
cmp
inc
cld
ljmp
je
jecxz
cli
sbbb
outsl
out
loopne
dec
mov
lret
mov
add
aaa
mov
outsl
rcrl
cmp
add
mov
sbb
xchg
nop
dec
mov
jmp
pop
outsl
aad
jbe
test
test
outsl
ficoms
sub
data16
call
mov
icebp
pop
scas
gs
stc
outsl
jne
das
cmp
xchg
out
outsl
dec
sbb
outsl
mov
xchg
lock
add
xchg
and
shrl
xor
xchg
adc
scas
cmp
mov
loope
scas
mov
repnz
xchg
cmpsb
adc
push
stos
add
pop
aaa
push
inc
outsl
mov
lret
out
rcll
push
lea
dec
ret
and
pop
shrb
xchg
pop
inc
loopne
imul
test
cmp
mov
outsl
mov
xchg
aad
into
push
in
adc
incb
adc
gs
hlt
cmp
outsl
mov
xor
xor
pushf
insb
call
and
or
push
outsl
inc
or
das
shlb
xchg
pop
fbld
and
outsl
mov
lock
pop
ljmp
loope
outsb
lret
cmp
outsl
rorb
dec
pop
leave
jae
jne
mov
and
xchg
repnz
xchg
dec
lahf
in
pop
cld
outsl
adc
xchg
sbb
outsl
jle
mov
into
mov
adc
pusha
mov
shll
fwait
adc
stc
mov
repz
pop
pop
jno
jp
sti
push
fwait
int3
jbe
push
aam
xchg
mov
stos
lea
leave
aas
pop
stc
pop
jge
pop
inc
fisttpl
adc
and
or
xchg
mov
iret
mov
mov
jnp
jecxz
testl
outsl
xchg
outsl
inc
aas
and
repnz
and
rorl
ja
ret
xchg
arpl
nop
cltd
mov
mov
jmp
mov
dec
das
inc
mov
sub
mov
inc
gs
out
or
mov
popa
sti
and
push
shll
lock
inc
les
aad
sbb
stc
arpl
jns
in
movsl
aas
fistpl
pop
dec
mov
cmc
js
jl
mov
lcall
mov
out
popa
adc
xchg
repnz
jle
sub
add
pop
jmp
fcomps
push
mov
std
mov
andl
gs
cmp
orl
les
add
and
sbb
dec
add
pop
pop
push
lods
repnz
pusha
iret
adc
outsl
imul
dec
mov
add
push
std
ret
gs
hlt
outsl
aaa
sbb
ja
lret
pop
adc
testb
popa
and
outsl
mov
pop
dec
in
or
lret
push
add
push
rcr
fs
pusha
add
or
mov
fmulp
mov
enter
and
xchg
push
and
outsl
cmpsl
or
pop
mov
mov
lahf
shl
loope
dec
pusha
mov
test
sub
ljmp
mov
adc
lods
xchg
out
outsl
and
jle
call
jae
movsb
insl
scas
cld
imul
stc
adc
shl
outsl
sbb
mov
std
push
mov
in
pop
xor
dec
sub
jne
xchg
outsl
bound
aam
xor
and
mov
mov
mov
jecxz
movsl
xchg
sub
jl
insl
orb
je
mov
icebp
outsl
jb
jp
cli
sub
sub
hlt
jecxz
lods
push
outsl
aam
xchg
mov
pusha
pop
imul
lods
xchg
push
lods
pop
arpl
ljmp
sbb
cmp
xchg
hlt
push
sahf
adc
mov
outsl
in
jecxz
int
pop
mov
stos
cmp
das
ja
jp
xor
es
inc
jb
testl
stos
adc
xchg
iret
xchg
add
xlat
cltd
jae
sbb
jne
shll
push
dec
sub
cmp
popa
mov
sub
mov
call
inc
adc
mov
arpl
aaa
imul
ds
lret
mov
sbb
or
mov
inc
pop
xor
xchg
sti
sahf
addr16
sub
lock
dec
inc
pop
cld
push
popf
sbb
jmp
jecxz
outsl
mov
or
outsl
adcb
push
jmp
push
push
dec
outsl
xchg
mov
adc
mov
les
sub
fwait
insb
sbb
sarl
inc
addr16
cmp
aas
dec
lret
les
xor
hlt
outsl
sbb
add
loop
pusha
aas
scas
outsl
sub
xor
shll
pop
xchg
out
daa
imul
inc
hlt
iret
leave
mov
jae
scas
in
lods
ja
jo
outsl
mov
loope
lock
in
outsl
push
mov
mov
fstpt
xlat
lods
mov
enter
push
dec
stc
cmp
out
dec
bnd
outsl
pop
xchg
testl
insl
add
dec
and
sbb
mov
adc
lea
nop
outsl
pop
mov
add
jl
leave
outsl
into
ja
repz
scas
sahf
sub
lret
insb
mov
push
and
aam
sti
pop
imul
pop
outsl
jne
xor
adc
mov
sarb
test
imul
repz
enter
les
cmpsl
sti
out
xchg
aad
mov
mov
jle
adc
or
push
gs
pop
clc
call
loope
lret
pop
inc
outsl
ret
cmp
mov
daa
or
fwait
lret
sbb
and
add
mov
jmp
xchg
fistpll
outsl
mov
nop
cmc
data16
pop
lea
cmp
popa
mov
pop
inc
lahf
out
stos
or
cmc
jns
outsl
out
repnz
cmp
imul
xchg
lods
xchg
jecxz
arpl
aad
xlat
push
pop
hlt
mov
jns
xor
stc
inc
pop
ja
adcl
fstps
sbb
repz
rdseed
outsl
popa
pusha
shlb
outsl
aam
ret
lea
sub
leave
xchg
add
sub
xor
repz
xor
push
push
outsl
mov
push
rcll
push
jl
lret
repnz
lahf
sub
jne
maxps
test
mov
les
test
in
cmp
pusha
scas
xchg
imul
outsb
fidivrs
mov
call
dec
push
sub
mov
pop
push
dec
pop
xchg
pop
dec
ret
in
add
rclb
xchg
mov
push
aas
mov
andb
sarl
outsl
mov
pushl
inc
dec
mov
cwtl
mov
testb
fidivrl
pop
es
adc
push
jno
lds
and
and
mov
sbb
cltd
loope
outsl
sub
lret
loopne
mov
popa
mov
push
ljmp
imul
mov
gs
adc
dec
mov
mov
and
adc
das
dec
adc
xchg
arpl
xchg
in
xchg
adc
add
cmp
mov
ss
pushf
sar
pop
mov
push
xor
addr16
pop
les
sbb
pop
pop
imul
push
jo
repnz
cmp
pop
pop
rclb
ret
sbb
addr16
xlat
xchg
outsl
sti
ljmp
fwait
or
mov
sarl
lock
fcomi
popa
mov
mov
repnz
or
jle
sbb
sub
mov
sub
adc
test
incl
pop
xor
mov
mov
sbb
outsl
mov
xor
jl
inc
das
xchg
outsl
test
jecxz
mov
popf
pushf
dec
popa
sbb
push
out
push
dec
add
cmpsb
test
jnp
test
je
sbbb
add
pushl
outsl
mov
xor
push
scas
or
push
and
lods
lret
in
popa
xchg
pushl
add
ss
outsl
push
sarl
push
movsb
jl
imull
xor
cmpl
das
push
push
lret
repz
sbb
outsl
inc
cmp
arpl
imull
xchg
adc
sbb
mov
xorl
jp
cmc
lea
lea
and
jle
inc
jno
arpl
aam
pushf
mov
shlb
mov
or
pop
test
out
adc
mov
adc
mov
scas
stc
lea
xor
push
test
mov
rclb
arpl
sbb
das
test
ljmp
mov
insb
sub
jno
adc
pop
mov
dec
cld
or
in
push
xor
into
aaa
les
lahf
outsl
mov
roll
cli
mov
sbb
pop
outsl
jl
divb
outsl
fdiv
gs
ret
out
das
in
sub
xchg
inc
test
mov
test
lea
or
bound
adc
mov
fstpt
cwtl
repz
mov
sti
stc
pop
push
pop
push
adc
mov
adc
fidivrs
lret
jge
enter
in
cmp
and
subl
xchg
mov
data16
dec
fiadds
sbb
outsl
sbb
or
xchg
jo
dec
xor
pop
jmp
cmp
loopne
pusha
mov
lahf
outsl
icebp
popf
jns
ss
jp
outsl
and
sti
push
adc
outsl
push
mov
outsl
sub
repz
mov
xor
jno
mov
je
mov
sub
in
inc
rcrl
add
arpl
mov
roll
sarb
cmpsb
sbb
push
ja
out
lock
inc
mov
xchg
push
outsl
adc
insb
aad
xchg
ret
rorb
ss
pop
cmp
jmp
mov
negl
add
mov
shlb
xor
js
sarl
outsl
mov
enter
xchg
shlb
mov
mov
add
jecxz
in
outsl
push
shll
test
in
jbe
dec
outsl
ds
aaa
xchg
addb
mov
cmpsl
xchg
xchg
in
jp
jge
or
arpl
jbe
sub
xchg
mov
lahf
mov
outsl
test
add
ds
aas
sbbl
inc
xchg
mov
mov
leave
outsl
inc
out
adc
outsl
out
lods
inc
fst
jp
outsl
jnp
fcmovnb
mov
mov
push
out
les
andl
jmp
fwait
xchg
mov
sbb
outsl
mov
or
mov
outsl
test
sub
int3
cmp
sbb
sub
fwait
addr16
lods
repnz
cwtl
ror
xor
imul
sti
addr16
inc
mov
lock
jnp
push
jne
lcall
mov
push
lds
jp
call
pusha
xlat
inc
aas
jb
adc
push
addb
pushf
jl
pop
or
xchg
mov
inc
test
arpl
lret
mov
aam
or
aas
mov
dec
xchg
movsl
sub
mov
scas
mov
mov
mov
and
and
les
addr16
sbb
outsl
mov
cmp
test
mov
aam
movsl
repnz
and
daa
or
and
sub
or
imul
cmp
sti
pop
mov
cmp
lahf
dec
jmp
xor
jge
dec
sub
repnz
imul
lds
mov
arpl
xchg
pop
outsl
in
insb
insl
mov
iret
pop
dec
and
subb
std
dec
jle
cmp
int
in
push
inc
inc
mov
outsl
ficoml
jb
jge
scas
imulb
xchg
test
adc
cmp
xor
adc
outsl
xor
enter
lret
and
push
addr16
pushf
ja
negl
stc
or
mov
add
cld
dec
gs
and
jmp
add
add
push
pop
inc
mov
es
insl
sbb
bnd
movsl
sub
adc
gs
mov
xchg
push
ret
pop
push
mov
aaa
jge
mov
outsl
ds
das
adc
int3
outsl
mov
sub
jecxz
inc
daa
add
rcr
enter
into
jns
pop
inc
mov
outsl
pop
daa
insl
shl
aas
mov
xchg
arpl
ret
mov
sub
int
or
xchg
das
in
insl
das
dec
jg
mov
imul
pop
sbb
sub
ss
mov
cmc
mov
cmp
outsb
pop
push
test
outsl
lock
lret
outsl
sbb
sbb
mov
adc
pop
fisubs
in
fdivs
outsl
adc
mov
mov
push
nop
dec
xchg
ret
outsl
arpl
movsl
mov
pop
popa
in
pusha
fwait
sub
shll
loop
ja
xor
and
jb
movsb
push
shrb
dec
fidivrl
dec
xor
push
outsl
jns
sbb
mov
adc
cli
or
pop
lea
nop
outsl
adc
pop
outsl
mov
in
fstps
out
psadbw
cltd
xchg
jp
xorl
icebp
mov
adc
outsl
jmp
add
push
and
aas
bound
and
in
xchg
cmp
jnp
int
mov
xchg
push
inc
insl
enter
incl
xor
adc
mov
adc
int
movb
sbb
dec
add
jle
push
iret
jmp
push
loopne
insl
sbb
out
mov
addr16
adc
and
adc
adc
mov
push
stc
adc
stos
out
sbb
addr16
cld
sub
lods
rorl
outsl
push
andl
outsl
pop
cmpsb
xor
dec
cmp
idivl
xor
and
inc
outsb
cmpsl
outsl
shll
xor
enter
sti
pop
dec
push
push
cli
popf
fistpll
mov
jno
cmp
rclb
mov
push
and
mulb
cmp
mov
inc
addr16
xor
mov
pop
int
into
cwtl
bound
pushf
fildl
pusha
outsl
and
or
fsubl
std
mov
outsl
je
xchg
xor
inc
pop
push
data16
jg
lret
insl
cltd
repnz
push
xor
xor
outsl
jne
push
jbe
cmp
decb
fs
sbb
dec
outsl
les
xchg
dec
shl
jg
sub
sbb
xlat
inc
andb
xchg
dec
jecxz
outsl
filds
testl
jo
into
addr16
outsl
pop
jne
add
adc
xchg
je
cmp
lock
neg
push
iret
mov
sub
xchg
xchg
or
dec
aaa
jp
cmp
arpl
dec
pop
fistps
fisubrs
ja
lock
jecxz
imul
movsb
fldt
sub
xchg
push
pop
mov
sbb
imul
sbb
test
ret
inc
jmp
push
cmpsb
lcall
outsl
adc
enter
sbb
cmp
cmpsb
into
push
je
jne
outsl
ds
mov
xchg
or
fcom
std
stc
inc
mov
mov
push
mov
loop
movsb
ljmp
mov
dec
mov
outsl
cld
xchg
jge
in
outsl
or
pop
jns
lret
pop
mov
xor
push
aas
pusha
shl
dec
jl
xorl
xchg
ja
and
js
inc
inc
lods
sub
jns
jnp
popf
fsubrs
arpl
mov
outsl
jge
cltd
push
shl
ficompl
cmpsb
adc
bound
mov
jb
imul
push
sbb
ljmp
lea
shrl
mov
cmc
ljmp
enter
aas
pop
push
mov
cmp
outsl
push
inc
movsb
fadds
and
fdivp
mov
outsl
jns
fs
mov
mov
jbe
addr16
les
mov
subl
movsb
dec
push
dec
mov
out
icebp
hlt
jno
xchg
mov
jns
sub
mov
mov
rclb
jnp
adc
je
movsb
aam
xor
add
rorl
cld
lcall
repz
nop
mov
test
in
pop
ret
push
xchg
sub
addr16
push
out
push
inc
hlt
lods
pop
roll
dec
outsl
dec
add
sbb
aas
pop
repnz
sti
loope
lret
std
add
clc
bound
rcl
mov
pop
push
dec
je
out
movsb
mov
xor
jbe
inc
outsl
lods
in
sarb
pop
clc
cld
push
dec
outsl
clc
out
lcall
stos
in
js
sub
mov
cmc
sbb
mov
xchg
mov
xor
cmp
and
jo
and
xor
test
mov
data16
cli
outsl
xor
adc
sbb
inc
and
lret
repz
aam
outsl
mov
ret
xchg
inc
mov
out
lcall
xchg
movsl
xchg
sub
cmp
stc
xor
jae
mov
arpl
in
add
fdivs
mov
stos
jne
js
push
test
jb
or
inc
push
cmp
pop
mov
xchg
add
in
outsl
xor
ret
in
outsl
mov
cmp
inc
fisubrs
xorb
pop
fldenv
push
lods
pusha
cmpsb
test
frstor
jb
or
rorb
imul
ss
faddp
pusha
sub
sti
and
cmp
lret
push
mov
outsl
sub
int
add
outsl
movsb
test
mov
cmp
scas
adc
ficomps
insl
mov
mov
leave
jp
imul
and
jnp
jb
mov
nop
rep
out
sahf
xor
push
outsl
scas
iret
mov
dec
cmp
insb
outsl
mov
and
ret
sub
mov
outsl
or
xchg
cs
mov
data16
dec
outsl
lret
inc
lods
aaa
ljmp
pushf
aad
pop
hlt
out
outsl
cli
pop
mov
mov
pop
sbb
adc
push
scas
cmp
dec
test
lock
pop
addr16
out
fistl
push
push
push
adc
ret
outsl
xchg
lods
lds
pop
popl
test
pop
fisubs
mov
lock
xor
outsl
repz
ret
arpl
mov
cmpsb
mov
insl
dec
test
fsubrl
js
sbb
mov
mov
or
jno
out
mov
mov
rclw
mov
outsb
mov
lret
outsl
fists
sbb
mov
arpl
push
ss
outsl
mov
js
jns
adc
outsl
and
hlt
iret
mov
movsb
add
xor
sub
repnz
add
vcmpsd
add
jbe
adc
cmp
mov
mov
orb
outsl
mov
lahf
and
out
sub
mov
enter
mov
aam
das
hlt
inc
and
out
daa
iret
fwait
outsl
jnp
sbb
clc
outsl
mov
jne
outsl
cwtl
inc
fmull
cmp
mov
sbb
adcb
fsubrs
mov
outsl
stos
mov
and
les
push
and
jmp
outsl
mov
outsl
popf
mov
shlb
pushf
sbb
adc
cmp
add
leave
das
loop
add
jb
das
xchg
enter
inc
cmp
orb
push
loop
push
push
pop
aas
mov
fisubrs
add
outsl
popa
mov
or
push
or
lret
jne
lods
repnz
rcll
mov
cwtl
lcall
xor
arpl
pop
and
sub
push
lock
and
fs
cwtl
fbld
mov
or
outsl
popa
cmp
xorl
and
pushf
mov
push
enter
xor
int3
mov
outsl
inc
sbb
inc
mov
inc
add
subl
in
sahf
jmp
xchg
test
mov
mov
loope
sub
dec
outsl
decb
push
jne
pop
aam
inc
rcrb
mov
add
ja
repz
pop
call
shl
xor
minps
add
xchg
imul
ds
pop
cwtl
int
fwait
mov
fsts
into
out
jmp
xor
int3
dec
cmp
outsl
mov
cmpsl
mov
lret
outsl
cli
lods
lcall
test
out
and
jge
outsl
xor
or
sub
sub
xlat
int3
pop
push
mov
mov
insl
mov
or
dec
jae
jmp
xchg
cmp
fwait
sbb
adcb
sub
sbb
popa
push
xchg
das
in
in
aaa
in
xor
mov
outsl
in
repz
and
in
das
and
xlat
outsl
push
cmp
lea
push
cwtl
inc
cmp
lock
repnz
pop
mov
mov
mov
adc
ret
or
js
cltd
bound
pop
jae
and
outsl
xor
sti
pushf
push
outsl
mov
and
scas
outsl
mov
stc
sbb
fsubrs
hlt
call
mov
mov
push
lea
or
notl
js
rcrl
push
mov
lcall
outsl
imul
push
shrb
fisttpll
push
inc
inc
aam
outsl
dec
add
insb
mov
mov
repnz
das
or
jne
stc
arpl
ljmp
sbb
adc
es
jmp
repnz
jbe
lahf
iret
and
loopne
cli
dec
into
xchg
inc
insb
lret
fistl
sub
add
ja
cmc
sbb
pop
arpl
xor
fnstenv
repnz
les
aas
stc
outsl
inc
mov
nop
stos
divl
popf
rcr
addr16
les
xchg
andl
insb
jne
repnz
outsl
sarb
push
pop
adc
pop
mov
and
dec
pop
inc
add
rcrb
or
aad
imul
test
xor
popf
lret
pop
or
mov
sahf
jbe
iret
mov
test
fcoml
es
out
push
cmp
and
int
sub
data16
sbb
push
fisubrl
outsl
adc
adc
rcrl
push
xchg
lds
sub
pop
jmp
jo
adc
xchg
add
fbld
mov
cmp
or
lods
aas
add
popa
addr16
outsl
lea
mov
outsl
test
cmpsl
nop
xchg
xor
push
nop
arpl
and
leave
loop
outsl
pop
mov
cmpsl
or
sub
scas
mov
outsl
sub
or
or
frstor
jbe
repz
xor
or
outsl
sti
mov
dec
xchg
adc
xor
mov
cmp
lods
or
push
lret
aaa
push
addr16
lods
xchg
outsl
xchg
inc
pop
sbb
movsb
je
outsl
add
push
jne
loopne
mov
loopnew
push
add
outsl
repnz
mov
js
and
push
sub
cltd
addl
cmpsb
lods
test
jnp
pushf
jbe
xchg
add
outsl
cmpsl
fcmovbe
add
or
jl
push
cmp
jno
sti
or
divl
mov
mov
hlt
lea
mov
sub
xor
int3
popa
push
pop
pop
aad
outsl
idivb
lcall
xchg
mov
idivl
add
insl
xchg
and
imul
outsl
lods
xchg
cmp
add
les
es
nop
sti
outsl
or
add
fs
sbb
xchg
fcompl
das
fisttpll
addb
arpl
rolb
lret
movsb
jl
xchg
push
bound
cmp
iret
orb
cwtl
les
outsl
aad
and
movsb
mov
pop
movsl
xchg
cmpsl
or
insb
jle
mov
sub
or
lock
xchg
shlb
mov
shrb
mov
push
inc
cwtl
cmp
add
data16
pop
outsl
sbb
add
pop
mov
mov
outsl
fldln2
repnz
stos
cltd
sti
clc
outsl
loop
mov
mov
dec
push
push
nop
xchg
outsl
inc
cs
ss
aam
dec
sub
jge
add
mov
outsl
mov
mov
mov
xchg
shrl
mov
cmp
mov
and
add
or
lret
jmp
int3
push
movsb
mov
mov
rolb
mov
stos
jecxz
outsl
dec
add
test
dec
xchg
cltd
mov
add
rcrl
push
xchg
fdivr
shrb
sub
call
mov
mov
cmc
adc
shrl
popa
jbe
fdivrs
mov
in
cld
xchg
nop
addr16
jae
ljmp
jecxz
pop
outsl
inc
mov
add
outsl
push
mulb
lods
addl
pusha
fs
sbb
pop
daa
ret
xor
pop
outsl
and
dec
or
fidivs
decb
popf
fwait
sbb
loopne
nopl
lret
jge
outsl
pushl
movsl
outsl
hlt
adcl
loope
fisubrs
jns
outsl
imul
rorl
lret
xchg
mov
mov
mov
mov
shrb
inc
push
imul
or
test
insb
push
icebp
insl
roll
add
mov
mov
lahf
je
and
pop
xor
jno
cmp
jb
les
ja
sbb
add
aas
std
test
mov
mov
fildll
pushf
adc
push
inc
cmp
jb
cltd
out
cmp
loop
push
xchg
loopne
ja
cmp
decl
pop
xchg
xchg
scas
rcl
call
stos
xchg
and
outsl
jae
inc
or
outsl
pop
test
inc
fdivrs
outsl
push
pop
push
push
fxam
rcrb
lock
scas
js
push
cltd
cwtl
mov
jle
sti
push
add
add
movsb
cmpsb
mov
mov
out
outsl
rcrb
sahf
sub
outsl
cwtl
repz
jecxz
pop
mov
push
sub
loopne
inc
mov
cs
add
jae
dec
jbe
jmp
ror
cltd
sub
push
push
call
mov
aas
js
jecxz
out
and
xor
imul
dec
negl
push
xchg
stc
or
stos
cmpsl
outsl
push
xorl
jle
cli
sub
aas
stos
sub
in
and
arpl
xchg
aas
enter
jecxz
bound
xlat
lcall
cltd
das
mov
cwtl
or
and
sbb
ss
cmp
sbb
stos
loop
outsl
mov
push
outsl
stc
adc
add
mov
sbb
push
ret
push
inc
dec
ror
dec
outsl
loop
cmc
pop
addr16
fwait
stc
push
imul
lret
icebp
aad
out
add
xor
mov
sbb
out
call
push
stos
adc
mov
jne
pusha
clc
or
and
mull
mov
loopw
loopne
imul
cmp
fbld
outsl
jns
int
loopne
xor
outsl
test
cmp
push
pop
sub
call
xlat
cmp
cwtl
and
outsl
push
pop
and
xchg
pcmpgtb
lds
lahf
mov
sbb
andl
and
add
mov
mov
ret
stos
jb
scas
out
outsl
rcrl
in
outsl
dec
sbb
fsubr
add
rorb
sub
push
addr16
xor
std
mov
xchg
outsl
or
mov
cmc
enter
adc
cmpsl
xor
fs
pusha
scas
aaa
push
mov
fsubs
rorb
test
push
stos
or
sbb
aaa
pop
jecxz
mov
filds
movmskps
loope
pop
cs
lcall
out
loop
jge
pop
ss
mov
insb
sub
push
dec
push
aas
xchg
pop
push
inc
xchg
sbb
sbb
dec
addr16
jecxz
xchg
pop
test
out
lds
fldl
lods
leave
sub
mov
mov
lea
jb
lcall
mov
outsl
test
lods
addl
outsl
enter
sarl
clc
cmpsl
movsl
cmpsb
and
xorb
mov
outsl
or
mov
repnz
into
sbb
sbb
shrb
sbb
jp
incl
ret
adc
mov
stc
cmp
inc
outsl
call
or
ds
fcoms
outsl
das
pop
jns
cli
xchg
cmc
mov
mov
roll
in
xchg
adc
ret
out
adc
or
in
cmp
xchg
ret
sbb
into
mov
and
outsl
or
mov
aas
xchg
mov
lahf
dec
push
ss
imul
idiv
mov
sar
cmp
fidivs
outsl
push
loop
call
mov
dec
outsl
imul
mov
repz
jmp
mov
outsl
push
int
daa
lret
xor
fstpt
jp
add
mov
or
jns
outsl
and
push
push
outsl
scas
rcr
ljmp
in
or
pop
inc
adc
mov
outsl
mov
lahf
xchg
aad
inc
rcll
inc
cs
jno
cwtl
adcl
mov
xchg
push
lds
lods
fildll
out
adc
adc
push
std
fmul
mov
ret
add
xchg
xchg
xchg
or
loop
fwait
jno
push
nop
insb
mov
sub
outsl
adc
push
mov
sub
dec
in
lret
outsl
mov
mov
mov
outsl
push
int
fisubrl
cmpsb
jmp
or
and
add
shll
outsl
xchg
xchg
data16
das
cld
fidivrl
jb
mov
pop
or
dec
mov
inc
push
outsl
fcmovb
pusha
jmp
outsl
es
cs
mov
mov
ljmp
fs
mov
and
and
dec
mov
shlb
out
ljmp
lods
int
fldt
add
mov
loop
out
adc
sbb
dec
sub
ffreep
push
pop
and
cmp
imul
jno
subb
sub
push
cmpsl
pop
cli
sbb
fwait
mov
mov
daa
xchg
sbb
add
sbb
mov
in
test
push
add
js
test
pop
jnp
xor
jge,pn
insb
nop
or
inc
lods
lret
arpl
add
push
mov
imull
adc
outsl
vphadddq
xchg
popf
test
mov
dec
outsl
jmp
lods
cmpsl
lret
outsl
test
or
mov
xchg
xor
lods
dec
sub
jmp
daa
pop
stos
pusha
lret
inc
pop
sub
pop
insl
jbe
mov
je
outsl
outsb
cmpsb
cs
adc
mov
outsl
and
les
leave
push
or
mov
mov
mov
scas
cmp
imul
lret
jns
repnz
stos
dec
inc
addr16
inc
mov
sbb
pop
dec
dec
fs
adc
inc
out
popf
dec
cmp
cmp
cmp
mov
xchg
jmp
inc
or
ljmp
xchg
cmpsl
shlb
adc
push
fcoms
nop
arpl
test
push
xchg
outsl
repz
xchg
outsl
xchg
inc
dec
nop
stos
mov
outsl
and
mov
test
or
push
repnz
mov
data16
imul
jmp
mov
outsl
jae
inc
cltd
xor
inc
addb
mov
dec
jnp
and
out
rorb
mov
dec
adc
xor
hlt
mov
sbb
ret
popa
xchg
nop
in
and
push
das
mov
bound
int3
dec
xlat
out
aam
outsl
add
adc
pop
mov
fimull
lds
loope
repnz
ret
sbbb
and
jns
and
out
movl
lret
bound
xchg
or
mov
mov
fs
pop
outsl
lods
sbb
aas
ficoml
cmp
and
outsl
mov
cmp
sbb
outsl
out
jp
ret
shrl
xor
fisubrl
cmp
jbe
nop
addr16
fs
pop
rolb
push
dec
sub
push
es
ja
les
outsl
and
jo
mov
ds
jmp
pop
sub
jbe
xlat
shlb
mov
mov
outsw
cmpsl
cmp
popf
in
outsl
pop
pop
in
and
setae
pop
push
sub
add
js
movsb
stos
mov
sub
out
xchg
out
dec
imul
insl
adc
sarl
movzwl
shrl
stos
jecxz
outsl
int3
hlt
in
inc
repnz
and
jbe
imul
cmpsb
sub
inc
push
xor
repnz
lret
arpl
adc
xchg
pop
leave
ja
pop
adc
scas
cmp
shr
xor
outsl
ret
mov
cwtl
ljmp
adc
pop
outsl
sub
rcrl
leave
rcr
imul
outsl
dec
xchg
xchg
xor
in
mov
mov
jnp
mov
scas
mov
mov
outsl
insl
dec
push
iret
stos
dec
popf
sub
jp
inc
imul
add
test
cmp
dec
aas
xor
xlat
fs
sub
outsl
cli
leave
push
scas
rcl
aad
dec
repz
jge
inc
mov
and
mov
shrb
lcall
mov
cmp
fsubrs
sahf
mov
iret
pop
mov
inc
outsb
push
insb
inc
sbb
adc
cmp
subb
xor
add
adc
sub
outsl
xor
stos
test
mov
loope
and
add
xor
aas
gs
sub
out
mov
cld
outsl
jmp
rcrb
insb
outsl
lds
and
test
add
rorl
outsl
jae
loop
iret
jmp
das
lods
mov
aad
push
sti
cltd
add
mov
outsb
cwtl
mov
outsl
js
cli
mov
mov
mov
test
sbb
decb
mov
cmpsb
push
rolb
mov
sub
popf
int3
insb
mov
cmpsb
in
inc
imul
jmp
xchg
gs
je
call
sub
loope
shrb
xchg
jbe
and
sub
movsl
cmp
mov
jne
mov
outsl
xchg
fisttpl
dec
lea
psrlq
idivb
fisubrs
je
mov
lret
push
jge
cmpsb
or
nop
fnstcw
sub
lret
imul
ss
xchg
imul
outsl
les
pusha
enter
outsl
mov
add
adc
mov
cmp
repnz
jle
mov
inc
cmp
xchg
xorl
sahf
out
adc
outsl
lcall
out
adc
test
push
push
xlat
ror
iret
xorb
mov
fstl
movsl
jb
add
outsl
leave
stos
popf
lods
fistps
cli
pop
add
inc
fistpl
xor
and
jge
sbb
and
call
ja
push
jmp
outsl
cli
movl
mov
mov
push
movsb
adc
fimull
sub
les
xlat
fistpl
int3
dec
popa
inc
dec
aam
pop
xor
mov
mov
ret
ljmp
hlt
cli
cmc
ror
outsl
movsb
xchg
mov
jbe
mov
ds
outsl
out
dec
cli
clc
mov
jecxz
push
dec
outsl
jge
repz
mov
lcall
adc
out
xor
sub
fmull
and
sbb
pop
scas
push
mov
push
add
mov
or
jmp
push
movsl
mov
enter
outsl
adc
sbb
xor
icebp
imul
and
push
pop
mov
adc
popa
test
out
dec
int3
dec
xchg
outsl
xchg
fsubrp
je
shll
mov
xor
mov
outsl
or
ljmp
jno
jecxz
mov
adc
loope
adc
into
outsl
xor
shrb
dec
lcall
lods
fxch
leave
fstpl
enter
sub
xorl
xor
cltd
outsl
in
aam
ljmp
ss
mov
jae
mov
xchg
add
fdivs
arpl
adc
and
mov
in
push
popf
daa
pop
nop
popf
addb
into
jbe
das
pop
cltd
mov
mov
xchg
outsl
clc
sarl
jp
pop
int
or
jae
lcall
outsl
jp
lahf
xor
mov
xchg
xor
hlt
loop
push
orl
stos
cmpsl
sub
push
aas
sbb
lock
push
arpl
outsl
sub
lcall
sub
popa
testb
mov
sbb
int
outsl
pop
mov
jecxz
push
push
cmp
lea
fmul
imul
xor
icebp
xchg
shll
arpl
adc
xor
ja
shll
sarb
mov
sbb
mov
rcr
dec
outsl
mov
lock
outsl
test
les
push
pop
dec
mov
xchg
mov
mov
outsl
and
popa
ficompl
cld
jge
sbb
sub
adc
xchg
aaa
push
in
data16
lock
mov
jno
mov
jae
addr16
call
push
dec
push
mulb
mov
notb
ds
test
pusha
sarl
push
or
outsl
nop
jne
mov
mov
or
testl
pop
jbe
nop
xchg
xor
add
out
mov
jle
ret
sbb
xor
iret
vmovdqu
dec
fidivs
adc
xchg
jno
add
mov
mov
inc
mov
lcall
movq
jp
ficomps
aas
pop
clc
das
inc
adc
lea
scas
xchg
outsl
xchg
cmpsl
roll
ja
outsl
popa
repz
mov
lods
push
out
xor
cmp
das
test
loopne
dec
mov
shr
push
sub
fisttpll
sar
mov
xor
addb
cltd
mov
mov
ret
or
les
pop
mov
push
mov
and
int
cmpsb
xchg
and
xor
das
xchg
outsl
pushf
add
add
add
movsl
out
lods
push
push
push
outsl
dec
stos
les
nop
loopne
fwait
rolb
subb
outsl
push
push
int3
arpl
push
cmpsb
lea
xchg
mov
mov
jle
sub
outsl
cmp
add
jno
in
xchg
push
adc
fdivrp
andl
adc
xchg
pop
pop
cmpsl
pop
adc
sbb
test
scas
xor
dec
xorl
mov
outsl
decl
je
sbb
inc
adc
cltd
mov
outsl
pop
int3
mov
and
repnz
lret
scas
ss
shlb
mov
push
dec
outsl
in
orl
ds
imul
push
mov
dec
lret
sub
hlt
shlb
cmp
bound
jne
shll
xchg
shlb
fcoml
arpl
sarb
jp
bound
adc
mov
fidivrl
loope
test
mov
incb
arpl
cmp
imul
outsl
and
cs
jo
ret
outsl
push
mov
test
cld
rolb
dec
mov
jb
adc
addr16
iret
cmc
outsl
mov
xor
sub
outsl
xlat
push
cltd
lcall
shl
add
stos
sbb
cmpsb
mov
outsl
lea
adc
push
arpl
ja
jo
iret
mov
imul
pop
add
pop
popa
jbe
jnp
xchg
sarb
hlt
dec
push
outsl
mov
sahf
pop
insb
addr16
cmp
and
sbb
out
mov
stos
dec
addr16
mov
ja
ss
add
mov
adc
aam
pop
mov
xchg
dec
sbb
jmp
rcll
je
movsb
sbb
mov
pop
inc
lock
adc
mov
jl
xor
mov
pop
inc
cmp
jle
sub
arpl
outsl
int
push
push
fwait
dec
add
jecxz
xchg
mov
mov
outsl
nop
andl
test
mov
outsl
mov
jecxz
push
push
xchg
test
lods
dec
xsave
out
gs
pop
push
outsl
stc
cmp
mov
xlat
lods
outsl
dec
int3
test
or
leave
jb
int
jmp
sbb
out
push
adc
mov
or
je
sbb
cwtl
shll
mov
add
lods
or
scas
xlat
inc
enter
lret
jno
xchg
ljmp
mov
aam
outsl
dec
fcmovnu
arpl
lret
mov
xchg
push
sub
dec
fdivs
push
mov
add
jge
mov
outsl
shrb
negl
cmp
mov
mov
pop
outsl
rol
stos
or
fsubrs
pop
jp
pop
push
into
mov
mov
mov
and
cmc
xchg
lock
gs
adc
mov
sub
mov
test
or
push
push
and
outsl
and
imul
mov
js
mov
ja
enter
jle
insb
loope
add
adc
outsl
mov
sub
xchg
icebp
inc
rorl
sahf
sbb
sarl
cli
dec
sub
rcrb
dec
xchg
js
lcall
fbld
mov
repz
popa
mov
imul
pop
push
shll
sub
mov
mov
inc
inc
test
inc
lret
pop
pop
or
dec
cmp
sub
test
rcl
int3
outsl
push
xrelease
rcr
pop
in
cwtl
pushf
adc
outsl
in
cmp
in
outsl
subb
dec
mov
pop
and
outsl
cmpsb
sar
and
fsubrs
outsl
test
xor
jge
jo
inc
dec
and
scas
imul
fcompl
aam
ljmp
push
or
jns
xor
outsl
shl
test
jae
loope
mov
pop
pushf
or
lret
mov
ljmp
or
jle
fisubl
fisttpll
jnp
cmp
outsl
push
push
data16
mov
inc
cmc
dec
pop
cltd
outsb
mov
stos
and
outsl
jae
loop
push
lahf
shrl
jb
xchg
xor
outsl
mov
jae
xor
das
outsl
xor
cli
outsb
les
dec
fcmovu
sub
mov
add
xor
mov
pop
test
fisttps
cmp
jb
mov
mov
outsl
rcll
push
or
mov
outsl
cmp
fcmovb
add
call
nop
outsl
mov
lret
outsl
loop
repz
xlat
cli
mov
cmp
aaa
fwait
mov
loop
sti
daa
outsl
inc
fs
mov
sub
dec
push
dec
aas
cs
les
mov
cmp
pop
mov
and
inc
lods
popa
sub
pusha
out
mov
mov
outsl
xor
or
aaa
cmp
outsl
in
cltd
push
adc
xchg
push
pop
xor
adc
mov
mov
int
dec
dec
adc
adc
movsb
and
inc
rep
sbb
fdiv
outsl
leave
shrb
int
int3
jb
gs
xor
shll
adc
movsb
jbe
inc
cmp
or
dec
loopne
scas
outsl
imul
xor
aaa
fisubrs
imul
sub
or
test
in
mov
int3
adc
outsl
aam
pop
fimuls
or
mov
xor
fsubs
pop
cltd
test
jle
mov
sub
mov
ja
inc
xor
xchg
imul
adc
outsl
adc
js
hlt
rcll
mull
ror
rclb
imul
ljmp
mov
mov
or
adc
jno
arpl
lods
jne
outsl
adc
dec
mov
mov
and
ds
sub
insl
add
outsb
fimuls
cmp
shll
outsl
inc
push
xor
or
inc
enter
push
sub
leave
outsl
pop
pop
sub
or
enter
outsl
cltd
fwait
push
adc
test
xchg
mov
outsl
add
pop
add
dec
push
mov
outsl
adc
or
ret
outsl
mov
fwait
pop
and
mov
into
stos
and
outsl
rcrl
outsl
mov
outsl
pushf
cld
js
dec
test
sub
sbb
fwait
push
inc
push
xchg
dec
outsl
cmpl
sbb
jns
adc
jmp
push
gs
mov
xor
sbb
outsl
push
push
lret
dec
or
iret
add
pop
ret
jns
jnp
mov
jecxz
lret
clc
imul
outsl
jl
jne
shll
mov
js
imul
vmaxpd
mov
rcl
push
jbe
cli
mov
addr16
dec
and
lahf
mov
shll
nop
jno
or
mov
inc
jge
cmpl
sbb
fcomps
mov
mov
out
dec
mov
idivb
mov
xor
lods
pop
outsl
nop
test
insl
mov
and
and
and
cs
jnp
pop
pop
push
jl
mov
mov
mov
xor
outsl
mov
outsl
and
push
adc
hlt
enter
push
into
pop
sub
fmulp
jbe
jnp
mov
adc
mov
insl
icebp
int3
mov
push
popf
scas
cmp
imul
mov
aam
jle
inc
xchg
std
outsl
dec
xchg
dec
sub
mov
mov
je
dec
and
or
outsl
push
dec
and
xchg
and
xor
outsl
std
pop
push
pusha
adc
inc
mov
popf
andb
and
push
push
or
outsl
sub
cmc
jge
psrlq
leave
in
arpl
cmp
call
or
push
nop
add
imull
aad
hlt
cmp
cmp
outsl
add
aam
or
ja
pop
xchg
xor
pop
pop
and
ret
imul
mov
cmp
sbb
jmp
add
jge
adc
insl
mov
mov
push
outsl
jge
aad
pop
and
mov
popf
xchg
int3
faddl
outsl
sub
in
cmp
mov
lea
ja
adc
or
mov
adc
aas
mov
loope
movsb
inc
jecxz
pop
mov
adc
in
pop
sub
outsl
and
cmp
adc
jecxz
mov
ret
mov
or
pop
push
sub
movsb
push
loope
mov
or
outsl
sbb
jmp
outsl
dec
daa
fs
clc
jbe
mov
or
mov
adc
adc
pop
push
pop
xchg
addr16
or
sub
add
and
pusha
aad
jbe
or
mov
mov
sbb
fstpt
imul
push
test
pop
xchg
aam
outsb
sbb
lret
dec
dec
dec
repnz
out
dec
outsl
mull
pop
push
inc
jp
mov
imul
mov
mov
and
dec
pop
pop
insb
xor
add
test
jmp
stc
mov
xlat
mov
fidivl
add
stos
push
and
cli
outsb
outsl
out
and
sbb
outsl
lret
xlat
jl
mov
stos
pop
lahf
push
sbb
dec
loop
jge
in
insb
aas
cmpsl
imul
sti
sub
push
mov
imul
stos
ja
cmpsl
xchg
mov
out
lea
lods
fldenv
pop
fisubrl
das
shlb
test
aaa
sar
xor
std
lret
pusha
test
ja
jecxz
mov
int3
jnp
shl
mov
mov
in
gs
mov
dec
clc
pusha
sbb
and
incb
sub
jnp
vaddpd
aas
outsl
int
inc
aad
pop
je
fs
mov
add
and
xor
sub
fs
imul
les
cmpsl
iret
outsl
std
loopne
inc
xor
dec
and
add
aam
push
lret
inc
in
les
cld
pusha
sahf
xchg
outsl
mov
dec
push
fidivrs
mov
icebp
jg
jmp
fwait
outsl
lods
popf
int3
stc
xor
dec
mov
sbb
dec
cmp
cmp
sbb
outsl
ja
mov
xchg
je
outsl
inc
aad
push
stc
dec
outsl
sbb
dec
xor
add
rcrl
cmp
leave
test
mov
pop
in
enter
pop
dec
outsl
adc
xor
sbb
outsl
jns
movsl
and
cmpsb
sbb
push
andl
cmp
add
mov
adc
jp
cmp
outsl
dec
call
xchg
lret
outsl
mov
add
mov
dec
test
sar
and
mov
dec
pop
rcrb
insl
mov
outsl
or
jecxz
and
sbb
sub
outsl
fs
lea
fwait
xchg
in
rcrl
loope
outsl
inc
imul
push
out
outsl
inc
cmpsl
hlt
mov
jne
daa
push
loope
sbb
pop
test
mov
in
fcoml
gs
adc
fmuls
mov
lret
inc
and
stos
pop
ds
pop
pop
outsl
in
sbb
pushf
sub
aas
in
popf
std
jecxz
shl
dec
fadds
scas
movsb
mov
fistpl
xor
mov
arpl
rorl
outsl
pop
mov
ds
outsl
cmp
sbb
movb
xor
add
mov
in
and
outsl
nop
push
add
mov
int3
xchg
jmp
imul
call
loope
es
mov
push
mov
mov
test
addr16
enter
outsl
js
cwtl
fisubrs
jge
repnz
imul
xor
pop
mov
dec
inc
or
outsl
test
push
mov
mov
sub
push
outsl
imul
rcr
pop
mov
test
int
or
arpl
lcall
mov
cltd
arpl
sub
shrb
and
xchg
cmp
sbb
inc
lret
sub
test
mov
dec
mov
ja
and
adc
stos
cmp
ret
cmp
aam
jb
pop
jbe
inc
mov
and
and
jne
pop
xchg
out
enter
mov
mov
cmp
xchg
aas
adc
cltd
push
fwait
out
dec
add
nop
pushf
lahf
ret
sti
jge
mov
aas
jne
into
fisubl
mov
inc
jle
push
sub
outsl
movsl
insb
call
lea
shl
lock
icebp
subb
outsl
mov
out
cwtl
mov
jmp
mov
push
add
push
or
xlat
outsl
xchg
add
ret
out
ljmp
xor
adc
lea
mov
inc
pop
sbb
outsl
push
test
sahf
outsl
push
andb
outsl
sbb
pushf
push
jge
dec
or
pop
pop
push
test
outsl
xchg
in
ret
loopne
rol
pop
pop
or
fisubrl
rorb
sarl
movsb
popa
add
push
inc
jmp
or
outsb
outsl
and
lret
lods
lods
out
adc
cmp
out
lods
aas
inc
repnz
loopne
shl
outsl
cltd
push
icebp
cmp
lcall
mov
jae
inc
les
outsl
add
fwait
mov
mov
sbb
adc
fsts
outsl
repnz
inc
fildl
lds
push
movsb
inc
jg
mov
das
sbb
cmc
push
pop
mov
xor
lods
sbb
insl
sub
outsl
loopne
imul
add
outsl
xor
orb
xchg
int
pop
mov
lret
arpl
das
push
out
outsl
xor
test
mov
push
lods
je
xchg
outsl
inc
sub
test
jns
jmp
inc
mov
pusha
es
xchg
insb
jb
sbb
outsl
xchg
mov
shrl
mov
gs
inc
sbb
or
xchg
xor
outsl
pop
shll
pushf
ss
adc
lcall
fmull
cmpsb
inc
popl
outsl
fstpl
lahf
hlt
jno
pushf
sti
outsl
in
cld
fstps
outsl
cmp
mov
inc
outsl
xchg
sbb
fisubrs
sbb
xchg
fs
jge
cmp
jp
repz
xlat
lahf
outsl
mov
test
and
lret
lcall
inc
popf
mov
popa
or
xlat
outsl
mov
cmp
iret
arpl
pushl
mov
sub
mov
aas
mov
adc
pushf
mov
outsl
jmp
mov
mov
inc
sbb
loopne
cmpsb
popl
or
or
stc
and
test
mov
aad
inc
ret
lea
sahf
arpl
imul
mov
bound
xchg
xchg
cmp
cmc
push
pop
lahf
lods
jge
addr16
sub
insl
imull
inc
ss
jp
mov
jle
clc
shlb
icebp
fisubrs
ss
lret
mov
fdivs
pop
clc
cltd
or
fiaddl
lret
orl
aas
add
push
mov
imul
repz
push
ret
imul
into
inc
fwait
out
mov
ljmp
mov
outsl
scas
test
jb
and
push
mov
push
gs
add
jecxz
cmpsl
movsl
fbstp
hlt
sub
repnz
pop
dec
dec
movdqu
push
dec
and
bound
and
nop
mov
fiadds
pop
mov
sbb
or
xor
push
nop
fcomi
mov
xor
cmp
pop
ja
mov
js
jo
bound
incb
test
pop
repz
mov
inc
sbb
imul
cmp
jb
xchg
sbb
cmpsb
lea
fsubs
out
pop
pop
mov
mov
inc
lcall
inc
loope
outsl
jbe
cmpsl
jae
dec
lea
outsl
inc
fstp
mov
arpl
push
scas
jb
sbb
cltd
pop
xchg
jecxz
outsl
xchg
add
jne
adc
outsl
push
and
loopne
call
cli
pop
sbb
leave
outsl
pop
divb
stos
lea
outsl
xchg
inc
adc
shl
in
outsl
rorb
cld
pop
adc
xor
loopne
or
loopne
cmp
cmp
sbb
jge
and
inc
outsl
jne
cmp
sub
pop
bound
test
jecxz
push
xor
outsl
adc
loop
jbe
outsl
inc
xchg
rcrb
dec
sbb
and
arpl
sarb
outsl
and
and
xchg
arpl
push
add
jmp
test
and
out
jl
or
xchg
mov
out
lahf
addr16
and
dec
scas
outsl
mov
cs
aam
outsw
sub
ljmp
add
repz
push
mov
outsl
or
mov
outsl
and
dec
daa
int
mov
std
sbb
mov
jno
cmpsl
adc
push
scas
ret
ss
sahf
ds
outsl
xchg
dec
cmpsb
int3
aas
pop
aas
sub
into
ja
mov
and
outsl
xor
xchg
nop
scas
sub
shrl
andl
push
ja
cltd
sbb
mov
xor
outsl
fsubrl
ret
pop
xor
sbb
jns
mov
cmp
mov
movl
inc
cmp
xchg
outsl
xchg
les
es
out
jbe
sbb
push
outsl
frstor
leave
mov
fwait
hlt
mov
mov
or
lcall
inc
push
mov
cmp
jo
outsl
lock
and
cmp
xor
fcom
int
pushf
outsl
cld
add
data16
jno
and
push
push
es
dec
add
fcomps
mov
into
outsl
cmpsb
lock
je
mov
cld
rolb
fs
jge
aaa
sbb
out
popa
mov
cmp
jb
adc
push
cmp
dec
sub
mov
inc
push
push
fcomps
outsl
jmp
add
xor
dec
xor
lock
andb
nop
test
xchg
sub
in
aam
stc
pusha
sub
mov
stos
cmpl
test
jp
gs
outsl
pop
pop
lret
loop
fadds
dec
les
dec
lret
aaa
pop
in
cmpps
rorb
cli
lods
adc
mov
test
cwtl
mov
shrl
xchg
testl
sbb
imul
mov
pop
lods
shlb
push
pop
jb
mov
pusha
xor
xlat
and
and
leave
imul
lods
addr16
lret
mov
lods
sbb
outsl
lea
inc
pop
or
stc
and
cmp
mov
aaa
scas
in
xor
push
push
outsl
mov
push
mov
mov
test
adc
jae
insl
dec
popf
xchg
and
test
push
pop
stc
mov
sbb
sbb
or
or
imul
and
outsl
insb
rorb
xchg
lock
jle
leave
sahf
lods
imul
sub
fildll
inc
cmpsl
shrb
xor
dec
clc
insb
loop
sbb
fidivs
into
mov
pop
mov
pop
inc
push
jnp
shlb
int3
outsl
lods
add
enter
out
icebp
stos
mov
scas
js
pushl
pop
or
xor
nop
push
repz
mov
outsl
in
inc
aas
int3
xchg
stos
pop
sub
mov
je
jns
aas
add
add
and
hlt
imul
xchg
outsl
xchg
push
add
or
cltd
js
scas
jne
jge
outsl
test
xchg
popf
mul
mov
pop
mov
enter
mov
add
sbb
sub
call
stos
xchg
sub
lods
or
mov
pop
pop
xchg
outsl
loop
icebp
or
outsl
mov
mov
jmp
leave
lea
stos
adc
outsl
add
mov
xchg
lahf
inc
mov
outsl
decl
pop
mov
xlat
xchg
gs
popf
loop
add
and
pop
leave
jmp
ljmp
push
mov
outsl
aaa
scas
loope
jae
mov
jecxz
jge
in
addr16
out
xor
pop
xchg
or
outsl
sbb
fisubrl
test
mov
outsl
mov
loope
scas
outsl
mov
out
mov
enter
shlb
mov
scas
cld
outsl
hlt
cmp
lahf
pusha
ja
xchg
jbe
lcall
aam
and
adc
sbb
fxch
ljmp
lods
repz
addr16
xlat
push
cmp
xchg
arpl
mov
mov
mov
subb
mov
or
pop
sbb
jecxz
cltd
rcll
and
sbb
mov
outsl
test
js
fldt
or
or
jb
xchg
push
add
add
outsl
and
add
push
aas
push
lds
loop
push
into
outsl
cmp
repz
gs
pop
sub
inc
sub
cmp
jns
es
test
aaa
in
xchg
xor
mov
mov
insl
push
aam
sub
mov
outsl
push
and
dec
andb
decl
push
outsl
call
hlt
add
push
out
adc
inc
outsl
clc
imul
sbb
lea
hlt
loop
idivl
cmp
in
lret
sar
push
insl
cmp
inc
mov
or
inc
loop
outsl
xor
or
inc
and
cmp
sbb
push
fistpll
and
push
jle
add
jecxz
add
repnz
push
mov
stc
mov
data16
adc
mov
dec
cmp
cmp
outsl
and
mov
cwtl
ds
outsl
rcl
dec
mov
movsb
pushf
outsl
roll
es
sbb
push
dec
call
pop
cmc
xchg
popa
das
sahf
or
xchg
scas
cld
or
outsl
aas
and
cmp
mov
push
pusha
lea
les
lret
arpl
int3
and
outsl
nop
xchg
jbe
cwtl
cmpsb
push
xor
ficomps
hlt
pop
cmovnp
add
and
ja
int
scas
push
nop
push
adc
sbb
add
pop
and
fisubs
pop
leave
outsl
icebp
loop
int
adc
xor
insl
ret
dec
xor
mov
imul
add
std
inc
leave
outsl
sbb
adc
cld
pop
cmp
outsl
scas
cmpb
outsl
adc
or
mov
inc
cwtl
cmp
adcb
ss
dec
inc
sbb
aas
popf
mov
int3
push
and
adc
clc
sbbb
or
enter
push
mov
and
lahf
mov
out
pushf
mov
jmp
aam
dec
out
frstor
stos
xor
jae
push
mov
mov
jle
test
pusha
cmp
sub
dec
adc
outsl
stos
mov
sub
mov
push
cwtl
outsl
scas
test
fmull
je
imul
leave
into
jle
stos
js
insl
xor
out
jmp
outsl
inc
xor
add
pop
xchg
movsb
sahf
jb
mov
pop
push
outsl
pushf
pop
push
push
pop
mov
outsl
mov
inc
mov
data16
xchg
mov
aad
xchg
dec
mov
in
fsts
mov
xchg
mov
push
packssdw
sub
push
outsl
ja
mov
sbb
mov
adc
mov
in
outsl
sti
adc
ja
in
push
dec
jno
jp
xor
and
and
sbb
imul
outsl
dec
mov
add
outsl
xchg
jno
mov
mov
dec
mov
dec
inc
outsl
cmp
xor
push
xor
enter
outsl
or
adc
cmpsb
sarl
cmp
adc
xchg
add
mov
sub
arpl
out
cmpb
dec
sub
sbb
cld
outsl
fildll
test
outsl
sbb
xor
hlt
outsl
jb
sti
jae
jp
mov
adc
gs
shl
mov
inc
push
dec
popf
dec
mov
and
sbb
aas
dec
xlat
sbb
frstor
inc
roll
cmpl
mov
outsl
jecxz
jmp
inc
mov
insl
fsubrl
sub
push
outsl
or
out
sti
shrb
shrl
sub
test
cltd
sub
imul
popf
xchg
mov
cmp
push
mov
add
push
outsl
pusha
loop
add
test
or
mov
mov
jle
clc
ret
and
outsl
shr
int
mov
inc
sbb
pop
sbb
outsl
pop
cmp
sbb
in
mov
into
mov
adc
aas
dec
or
repz
and
popl
jmp
jecxz
outsl
sbb
outsb
out
inc
cs
mov
adc
mov
outsl
adc
cmc
or
outsl
push
rcll
mov
leave
test
cmpsb
shlb
outsl
xchg
pop
inc
data16
movsb
sub
aas
push
test
xchg
repz
cmp
out
cld
sbb
sarb
and
xchg
xor
cltd
sub
outsl
sub
daa
pop
mov
stc
lods
adc
imul
xor
jl
outsl
cmp
sub
enter
mov
popf
pop
pop
adc
lds
les
xchg
xlat
outsl
jl
test
cld
adc
in
loope
outsl
xchg
dec
sub
outsl
and
dec
and
jno
outsl
jb
or
lcall
or
mov
ror
test
nop
jle
push
lds
mov
mov
cmpsl
cmpsb
inc
or
lock
xlat
add
mov
mov
outsl
mov
fldcw
decb
gs
lea
mov
js
fwait
test
jno
xor
mov
aaa
xor
gs
cs
insl
lcall
cltd
mull
outsl
mov
xchg
mov
cmp
decl
xorb
dec
inc
push
mov
test
cmp
mov
enter
mov
mov
mov
insb
hlt
and
mov
pop
and
fwait
pop
jae
pop
loope
jbe
gs
outsl
mov
sub
int
leave
or
and
sbb
push
shrb
mov
xchg
xchg
push
xchg
mov
mov
outsl
stos
push
sti
stc
dec
ss
and
mov
lahf
mov
sub
fnstenv
cmpsl
or
addb
lcall
clc
lods
inc
cwtl
hlt
imul
int
jecxz
bsf
outsl
gs
adc
or
pushf
popf
jecxz
xor
outsl
rorb
xchg
imul
ja
shll
jle
mov
mov
mov
or
jae
outsl
and
push
daa
fldt
cmp
hlt
aam
lds
mov
ret
add
xor
test
cltd
mov
sbb
leave
add
int3
cmpsb
xor
int
adc
sbb
in
stc
sub
rcrl
push
ljmp
mov
lahf
jmp
mov
outsl
pushf
xchg
add
cmpsl
mov
aam
inc
and
mov
add
aad
outsl
mov
xor
aas
imul
cmp
out
arpl
adc
mov
imul
stc
lods
aam
push
outsl
and
icebp
cmp
xchg
lods
jnp
dec
and
addw
cwtl
test
pop
lret
adc
divb
inc
aas
gs
xchg
mov
jp
push
xchg
nop
outsl
cmp
jns
pop
xchg
ljmp
mov
sub
outsl
push
sbb
add
lret
pop
leave
stos
adc
lret
and
fcmovne
outsl
xlat
ficompl
push
hlt
mov
dec
out
xchg
push
arpl
dec
in
outsl
push
cmpb
and
es
add
mov
jnp
shrb
mov
outsl
mov
lods
jbe
outsl
sub
jmp
jnp
xor
stc
test
outsb
nop
fwait
mov
push
pop
insl
call
aam
movsb
push
stos
push
outsl
mov
jge
dec
mov
mov
cmp
outsl
push
data16
pop
out
xor
ret
mov
aaa
ret
cmpl
shll
and
pop
mov
mov
imul
xchg
mov
sbb
pop
lods
addr16
add
sbb
testl
add
or
subb
das
outsl
mov
pop
addr16
in
cmp
xor
and
shll
fwait
lock
cmp
call
mov
fs
jge
cmp
mov
and
push
lods
loope
xchg
imul
mov
mov
scas
sbb
outsl
mov
mov
or
idivb
sbb
rolb
and
dec
sub
movsb
push
cmp
add
jge
stos
adc
ja
sahf
nop
mov
lea
push
adc
movsb
arpl
stos
pop
sub
push
aaa
pop
lret
cltd
int3
pop
icebp
xchg
stos
mov
jo
in
jmp
or
cwtl
jo
jo
cmp
add
add
push
xchg
and
mov
gs
cmp
sub
mov
nop
pop
in
sbb
mov
stc
arpl
jmp
outsl
std
mov
loopne
outsb
fisubrl
xor
jecxz
cmp
movsb
andb
pusha
ret
push
fldt
pop
push
das
adc
mov
dec
fcomps
out
dec
dec
outsl
add
inc
jle
outsl
mov
dec
xchg
sub
jnp
mov
sbb
cmp
enter
ljmp
lods
outsl
xchg
xchg
mov
add
lret
pop
leave
jecxz
inc
xor
sub
cmp
outsl
pause
hlt
cmc
or
outsl
mov
fimull
or
test
xchg
fwait
arpl
in
cmp
cmp
add
outsl
call
push
add
std
mov
mov
scas
pop
fwait
pop
xchg
push
div
arpl
jp
ljmp
push
xchg
or
adc
int
dec
jmp
outsl
jno
shr
lret
fnop
outsl
int3
push
adc
jns
sbb
pop
fdiv
push
das
fs
jp
in
cmpsb
bound
jne
xchg
dec
jmp
jo
mov
mul
std
push
and
xor
mov
repz
addr16
sahf
lret
sbb
dec
ret
xorl
loop
adc
sbbb
cmp
cmp
loop
movsb
jle
and
mov
fwait
add
mov
mull
outsl
mov
xorb
repz
ret
ljmp
div
cwtl
imul
jp
sbb
sti
or
mov
add
pusha
sbb
addr16
cmp
xor
shlb
imul
fstp
fsubrl
aas
aad
mov
mov
outsl
pop
cmp
test
sbb
popf
mov
test
pop
fdivs
rcl
jecxz
fsub
insl
and
mov
ficompl
jp
add
pop
je
shlb
popf
xchg
xor
jo
inc
mov
xchg
outsl
nop
xchg
repz
sbb
rorb
pop
or
bound
jb
mov
mov
mov
and
xor
popa
out
or
push
xchg
cmpsb
add
push
cmp
ss
lea
jle
pusha
mov
lahf
sub
sub
adc
cs
mov
push
xchg
mov
push
mov
or
lret
outsl
fnstsw
mov
mov
outsl
pop
xor
mov
ss
jle
sbb
or
sbb
cltd
loope
fsubrl
sti
xchg
clc
mov
dec
pop
test
dec
repnz
jnp
and
shrb
outsl
sbb
dec
inc
in
aas
popa
inc
es
jle
data16
icebp
incb
mov
scas
popa
fcomip
and
sarb
xor
jne
add
insb
cs
ret
adc
arpl
add
push
cmpl
adc
out
push
and
xchg
push
stos
ficomps
sub
add
dec
pop
and
sbb
imul
and
adc
cmc
mov
mov
mov
pop
cmpb
or
lods
mov
fildl
jecxz
jno
jbe
les
dec
clc
rolb
cmp
inc
test
or
dec
and
pop
sbb
popa
rcrb
push
inc
jo
lods
adc
cmp
fildll
push
add
pop
std
mov
jp
or
inc
je
iret
cmp
xchg
enter
mov
sti
sbbl
jnp
imul
xor
or
outsl
xchg
push
aad
icebp
sub
faddl
add
push
and
into
fildll
and
sahf
test
mov
cli
cmp
aam
popa
fildl
aas
lds
bound
outsw
fwait
sub
mov
xlat
cmp
test
and
popf
pand
adc
daa
mov
push
out
inc
sub
xor
outsl
movsb
aad
fcmovne
cwtl
outsb
outsl
add
lods
xor
push
sub
addr16
fmul
jge
sbb
enter
out
cmp
incb
outsl
fldcw
and
outsl
adc
scas
sbb
dec
or
in
cmp
sub
or
xchg
outsl
mov
and
ljmp
cmp
mov
or
jmp
push
gs
mov
sub
mov
mov
testl
pusha
pop
jecxz
pandn
into
aas
stc
push
sarb
jle
pop
sub
jecxz
outsl
ret
jnp
aad
or
shrl
mov
push
xor
pop
stc
pop
lock
cmp
lret
in
lods
lcall
pusha
js
sbb
outsl
push
testl
fwait
sbb
pop
sub
dec
adc
and
pop
ret
fadd
jmp
sbbl
cltd
div
loop
cmpb
xor
add
popa
xor
outsl
jmp
ds
hlt
rolb
dec
and
adc
add
push
addr16
add
sti
aas
add
and
fistpl
outsl
cs
inc
inc
xlat
out
in
div
out
outsl
cmp
jp
dec
ret
outsl
ds
shlb
adcb
xor
mov
adc
je
outsl
notb
repz
push
imul
sbb
sbb
cmp
ja
mov
nop
mov
jne
push
jle
outsl
pop
mov
jae
fwait
pinsrw
lods
jnp
lock
outsl
or
notl
iret
adc
outsl
or
pop
jnp
jle
jae
add
test
int
icebp
hlt
nop
cmp
pop
mov
call
and
mov
inc
jl
push
sahf
fistpll
xchg
xchg
repz
jge
dec
hlt
imul
lods
xchg
fcmovbe
or
xor
sarl
ja
nop
ret
jmp
outsl
xlat
test
jb
psrld
adc
cli
add
cli
mov
adc
ljmp
xchg
adc
mov
scas
imull
pushl
repz
jecxz
daa
fidivrs
pop
and
outsl
out
dec
inc
or
fnstcw
add
dec
mov
xlat
pop
adc
inc
dec
cmp
int3
loop
sub
call
xchg
pop
enter
and
or
shll
dec
push
imull
cltd
fists
sahf
outsl
push
shll
pop
sub
call
aaa
clc
xchg
mov
adc
cmpsl
outsl
mov
data16
in
pop
outsl
sub
cmp
rcrl
call
out
inc
dec
hlt
mov
das
push
cli
sahf
sub
pop
lcall
pop
movsl
xor
scas
push
rol
aas
enter
xchg
pop
in
jno
outsl
push
sbb
sub
outsl
out
stos
hlt
inc
pop
test
imul
pop
push
jo
jno
jge
loop
adc
or
outsl
push
cmc
push
jbe
scas
sub
cmp
cmp
jmp
pop
jp
aam
cs
imul
ds
repnz
outsl
xchg
jno
and
cmp
sub
push
lods
out
lock
push
mov
mov
outsl
sbb
test
outsl
lret
jnp
scas
or
mov
sub
outsl
outsl
fstps
and
pop
xchg
data16
out
xchg
outsl
push
pop
inc
scas
aas
shrb
cmc
mov
outsl
ja
stc
pop
loope
adc
icebp
pop
int
cmp
scas
jnp
dec
mov
adc
repnz
push
mov
andl
fwait
jne
cmp
push
dec
in
and
pop
sub
lret
ficompl
les
fs
inc
jns
data16
ljmp
frstpm(287
jecxz
cmp
or
outsl
mov
mov
dec
faddl
outsl
and
mov
jmp
stos
outsl
and
icebp
and
add
outsl
mov
mov
arpl
aaa
std
js
pusha
int3
fidivrs
imul
jge
adc
mov
xchg
ss
dec
mov
sbb
cmp
int3
stos
xchg
imul
cld
cmp
or
sti
lods
or
outsl
sbb
lcall
popa
cmpsb
or
push
outsl
jne
lahf
xorb
inc
inc
outsl
jge
jo
mov
shl
and
in
inc
pop
out
popa
arpl
enter
decb
mov
cmp
icebp
imul
or
mov
lahf
xchg
adc
push
mov
dec
bound
dec
push
sub
mov
sub
adc
cltd
cmp
outsl
and
aaa
fidivrs
lcall
push
mov
push
insl
cmp
adc
rol
outsl
sub
mov
stos
loop
inc
pop
mov
scas
shll
or
jecxz
lods
mov
adc
in
outsl
cmpsb
cmc
dec
out
stc
outsl
dec
jmp
mov
mov
or
jae
pop
stos
mov
or
mov
sbb
in
stc
int3
movq
ficomps
outsl
cmc
xchg
pop
xor
jecxz
xor
lods
mov
fs
mov
mov
xor
pop
ss
clc
adc
adc
sbb
into
or
das
pop
andl
js
fcomip
push
test
loop
test
mov
pop
pop
in
ss
push
lods
sub
arpl
das
fwait
pusha
add
outsl
lock
or
and
sub
out
mov
js
inc
lret
fsts
insb
cltd
outsl
pop
mov
sbb
sub
add
add
sarl
cwtl
lea
pop
sbb
inc
xlat
mov
cmp
leave
outsl
aam
pop
cmp
adc
jns
mov
pop
subl
pop
sbbl
lds
push
lods
adc
frstor
xchg
mov
idiv
cwtl
mov
push
jns
pusha
mov
mov
xor
pop
sbb
cli
insb
stc
outsl
fsubrl
push
arpl
scas
pop
sahf
outsl
push
inc
sub
sti
jnp
xchg
mov
sub
and
inc
data16
sbb
and
fnstcw
lcall
mov
fcoml
loope
mov
loop
insl
in
jns
xchg
mov
mov
test
xchg
adc
test
arpl
sub
mov
xor
add
mov
add
outsl
sub
out
outsl
in
push
sbb
addr16
inc
insl
outsl
int3
fsubr
in
sbb
and
push
popf
pop
lds
lods
shll
push
jb
dec
dec
mov
jp
clc
dec
inc
int3
leave
pusha
fwait
push
mov
arpl
pop
sub
cmpsl
insl
loop
outsl
ds
or
inc
popa
shl
outsl
fwait
es
cmc
dec
inc
ret
pop
mov
stc
mov
jno
outsl
mov
repz
xor
inc
mov
add
jnp
cmp
dec
or
pop
jns
out
xor
hlt
cmpl
cwtl
movsl
arpl
ljmp
mov
roll
aad
add
fists
or
sbb
outsl
shlb
std
insb
outsl
and
and
loope
jb
movsb
pushf
call
outsl
push
add
out
pop
pop
pop
test
popa
lock
inc
in
xchg
sub
mov
xor
xchg
icebp
rorl
xchg
cwtl
bound
jp
push
in
push
sub
cmp
ds
dec
scas
outsl
add
mov
cltd
outsl
mov
std
sti
stc
mov
dec
call
repz
lea
fistpl
mov
ret
in
testl
mov
and
aas
xchg
jae
xchg
idivb
pushf
cmpsb
call
jne
xchg
outsl
xlat
add
mov
or
fstpt
or
aas
test
dec
mov
outsl
adc
lods
inc
mov
add
shrb
in
sub
jl
push
mov
outsl
mov
lcall
rorl
int
rcrb
aam
adc
sbb
sbb
out
outsl
jo
pusha
xchg
push
pop
mov
jne
lret
mov
lcall
aaa
mov
ja
push
std
repz
sub
add
or
mov
sbb
pop
and
mov
jecxz
sub
mov
repnz
xor
in
pusha
pop
xor
outsl
mov
test
scas
dec
lret
int
outsl
call
lock
fcoml
adc
mov
jecxz
xor
lea
cmpsl
or
adc
fstpt
or
cs
stc
sbb
inc
mov
mov
cmp
sub
xor
hlt
jl
cld
push
mov
mov
cmpsb
cmp
cli
fiaddl
and
sub
inc
jmp
adc
dec
out
or
push
lods
mov
in
lea
mov
jmp
scas
lods
mov
cs
fstpt
fnstcw
sbb
push
dec
fmuls
setge
xchg
add
outsl
lock
dec
and
cmp
mov
push
rcll
outsl
cmp
jnp
nop
push
inc
adc
outsl
iret
cmp
insb
out
icebp
out
xchg
mov
lock
and
or
movsb
mov
pop
in
sbb
dec
jmp
fs
movsl
cs
push
outsl
xchg
aad
daa
add
mov
bound
ficompl
jp
mov
mov
mov
xor
xor
push
cli
mov
loopne
stos
popa
mov
test
std
pop
repnz
xor
add
pop
push
cmp
xchg
into
es
std
cmp
mov
push
clc
inc
mov
outsl
cli
stc
sbb
hlt
js
adc
out
cmp
fsubrs
les
cli
inc
xor
outsl
jne
and
dec
outsl
add
aam
mov
pop
cltd
popf
stos
or
xchg
or
call
lahf
popa
dec
repnz
mov
test
outsl
bound
popf
sub
and
cmpsb
dec
outsb
arpl
stos
in
lds
outsl
fbld
mov
jmp
and
sbb
aad
push
sahf
lods
pop
into
stos
daa
jle
push
loope
imul
mov
arpl
pusha
cmp
fs
mov
mov
out
iret
outsl
xchg
bnd
adc
sub
outsl
mov
cmpsb
cld
lods
in
outsl
jno
xchg
sub
jne
js
ja
hlt
call
inc
add
and
pop
and
pop
outsl
in
push
dec
enter
jmp
lock
and
add
xor
or
idivb
mov
and
mov
fdivrp
sbb
pop
pop
popf
outsl
or
mov
or
push
outsl
sub
or
data16
mov
ja
test
div
leave
bound
and
adc
mov
adc
push
mov
and
cmp
mov
test
pop
add
pop
outsl
xor
inc
inc
and
cli
mov
shrl
push
inc
xchg
ret
aas
pusha
cmpsb
xchg
fldcw
sbb
pop
push
sarb
arpl
xor
aam
add
adc
in
adc
outsl
jae
push
inc
call
out
push
fwait
or
push
cmpb
rol
xor
hlt
cmp
jb
jle
xor
repnz
pusha
pushf
pop
outsl
lret
jle
loop
push
ds
push
push
aaa
jl
mov
popa
dec
jnp
cmp
lds
inc
shr
mov
lock
push
and
fiadds
test
mov
rorb
outsl
sbb
mov
sbb
or
inc
add
jmp
and
pop
dec
push
dec
jnp
sarb
lods
out
or
xchg
jl
cs
fsts
popa
push
push
xchg
fwait
pop
je
stos
and
jns
mov
jl
inc
outsl
cmp
sbb
in
outsl
push
bound
movsl
dec
sub
enter
sbb
outsl
or
shll
ret
bound
pop
cltd
pop
repz
mov
jo
jae
ja
mov
inc
or
insb
pop
cwtl
add
mov
and
mov
dec
jb
push
fsubp
jge
divl
jl
push
mov
arpl
int
in
pop
popa
mov
push
sahf
xorl
dec
test
mov
xor
ljmp
roll
outsl
shlb
sbbl
subb
popf
movsb
xchg
jns
pop
int
pop
pop
add
jge
jb
or
mov
dec
or
insb
dec
dec
and
outsl
popa
call
adc
aas
jp
inc
push
inc
adc
xchg
imul
mov
lods
cmp
mov
outsl
xor
mov
mov
and
outsl
push
notb
outsl
adc
inc
aas
imul
into
jle
les
test
jge
mov
outsl
jl
pop
sub
fwait
xchg
outsl
adc
cld
and
inc
addb
enter
ret
popf
pop
cwtl
or
shlb
add
mov
sbb
into
push
and
and
jo
dec
adc
rorl
gs
les
insb
dec
pop
adc
sbbb
xchg
xor
faddl
cmp
popf
fs
jle
mov
test
inc
pop
push
xor
dec
jae
imul
bound
lds
xchg
sbb
imul
fldcw
jp
in
outsl
out
cmp
mov
add
outsl
mov
popa
outsl
int
jns
sub
out
mov
dec
rclb
outsl
adc
xchg
outsl
js
pop
inc
lds
in
daa
lret
pop
adc
insl
mov
and
imul
enter
incb
push
jb
adc
outsl
jo
mov
dec
add
outsl
test
mov
out
push
jbe
and
mov
xchg
outsl
pop
cmp
rolb
sti
mov
gs
xchg
je
or
add
mov
outsl
inc
clc
sbb
push
into
dec
push
outsl
push
cmp
loop
sub
pusha
cmpsl
repnz
fbstp
or
lds
stc
js
imull
mov
jecxz
add
outsl
fsubrs
jns
outsl
dec
sarl
dec
cli
cltd
jno
fwait
not
outsl
mov
add
cmc
xchg
sub
lret
outsl
shrb
mov
or
push
int3
data16
stos
mov
jge
push
or
or
in
and
ret
cmpsb
add
mov
jnp
repnz
outsl
out
and
imul
xchg
and
mov
arpl
or
outsl
mov
bnd
out
aas
pop
add
mov
cmp
js
outsl
xchg
mov
aaa
sahf
push
mov
and
xor
pusha
push
fs
filds
push
loopne
inc
shrb
and
or
lcall
sahf
pop
xchg
stc
mov
int
push
pop
mov
fwait
dec
ficompl
std
aas
sahf
stos
cmpsb
daa
int
loopne
pusha
push
outsl
fneni(8087
jne
es
or
pop
jnp
inc
addr16
stos
sbb
addl
lods
repz
fwait
adc
xchg
repnz
lgs
fsubp
rcrb
cmpsb
addl
and
cmp
movsb
ret
push
xor
pop
sbb
ficompl
rol
outsl
inc
out
pop
jbe
test
jae
and
pop
dec
hlt
outsl
mov
cmp
int
icebp
mov
loop
icebp
fisubrl
ror
and
cmp
inc
mov
or
icebp
addr16
ja
jmp
sub
pusha
mov
fidivrs
adc
jmp
fldcw
shrl
cmp
mov
std
in
es
das
aas
js
test
icebp
add
stos
loope
outsl
sub
adc
outsl
xchg
mov
outsl
mov
cmp
outsl
test
mov
mov
outsl
in
mov
es
mov
aad
mov
mov
test
and
pop
ret
hlt
mov
pop
pushf
outsl
fsubrl
and
mov
xchg
inc
aad
pop
push
pop
cmp
movsb
sbb
outsl
push
sahf
ret
xor
popa
loope
lcall
cmp
mov
inc
pop
jecxz
outsl
pushf
push
shrl
xchg
shrb
rcr
jae
mov
insl
push
adcb
in
add
or
outsl
add
out
inc
std
mov
outsl
dec
fdiv
jecxz
cwtl
adc
jge
and
pop
jne
lea
mov
aas
pop
xchg
lods
and
iret
in
sub
outsl
cmpsl
jae
sbb
sbb
fmulp
lahf
ss
insl
sti
mov
repnz
mov
loopne
imul
mov
adc
insb
xlat
int
adc
and
test
mov
stos
ficoms
jge
ret
push
stos
iret
mov
inc
sub
push
lds
pushf
adc
adc
andb
int3
jmp
cmpsb
icebp
outsl
jbe
adc
xchg
push
outsl
xchg
mov
jecxz
and
push
fucom
or
outsl
dec
iret
mov
cmp
mov
mov
push
outsl
test
sbb
mov
dec
loop
imul
ja
cwtl
outsl
jno
shlb
lea
les
enter
and
xchg
ds
outsl
das
cmp
js
dec
std
mov
arpl
cmp
mov
adc
sbb
xchg
outsl
dec
fstpt
outsl
test
dec
loop
mov
aas
insb
in
jp
les
pop
mov
leave
add
lea
outsl
mov
mov
pop
insl
addr16
shll
xchg
ret
pop
scas
outsl
in
imul
mov
mov
into
fldt
and
mov
inc
mov
outsl
mov
loopne
jns
jle
pusha
rol
loope
jl
sub
jmp
arpl
pop
imul
inc
xchg
shll
lret
addr16
mov
test
data16
jmp
loopne
lcall
outsl
or
pop
lods
inc
insl
fbld
arpl
or
cmpsl
outsl
leave
fdivr
sbb
stos
xchg
arpl
mov
dec
popa
lret
push
sbb
and
test
pop
lcall
inc
mov
xlat
inc
in
or
leave
iret
inc
outsl
adc
dec
sub
insl
jns
cbtw
lea
xchg
xchg
hlt
repz
loope
mov
or
das
pop
call
mov
cli
jne
stc
jp
sub
push
adc
ret
adc
shlb
lods
int3
and
movsb
adc
push
pop
pop
sub
enter
aas
imul
mov
outsl
or
mov
xchg
aas
lods
cmp
lret
push
divl
shll
jbe
outsl
stos
ja
lock
push
inc
outsl
and
hlt
fsubrl
pop
mov
cmc
and
loopne
test
xor
sbb
mov
ret
or
or
pop
addr16
jge
in
cmpsb
mov
outsl
lret
outsb
cmp
daa
rep
and
fisttps
incl
sbb
ljmp
mov
icebp
loop
dec
sahf
xchg
mov
push
sbb
and
lret
pushf
sahf
cmpsl
xor
lea
sbb
loope
push
imul
je
cmp
inc
mov
outsl
sbb
nop
shl
adc
inc
outsl
idivb
jno
inc
data16
lret
push
pop
cmpsb
inc
inc
outsl
lret
sti
xchg
adc
rolb
xor
repz
repnz
int3
cmp
outsl
arpl
shrl
mov
repz
push
test
divb
into
xor
stos
mov
gs
nop
jbe
call
cmp
pop
std
ss
ret
icebp
outsl
sbb
cwtl
adc
imul
int3
mov
dec
nop
mov
sahf
pop
mov
pop
mov
cld
outsl
adc
inc
xchg
push
roll
add
adc
test
pop
loop
push
xchg
outsl
call
outsl
or
pop
in
mov
push
and
xorl
imul
ficomps
fldcw
adc
push
sbb
clc
mov
or
jle
inc
sbb
mov
ljmp
mov
stos
push
jle
imul
and
lret
mov
test
sahf
mov
outsl
mov
daa
pop
fwait
outsl
mov
lcall
mov
cld
cltd
fistpl
pop
push
and
and
jle
cmc
imul
jo
outsl
data16
xchg
mov
sbb
outsl
in
cmpsl
push
aad
xor
les
add
inc
inc
lret
outsl
shrl
addr16
pop
push
or
orl
xchg
leave
outsl
adc
add
outsl
call
add
fisubrl
icebp
push
cli
push
fnstenv
dec
add
mov
add
jo
arpl
dec
sub
fsts
inc
outsl
movsb
mov
lods
call
fs
stos
jge
push
outsl
or
jp
cmp
outsl
mov
mov
or
negl
and
inc
or
xchg
fadd
xor
sub
call
cmp
cmpl
addr16
mov
xor
mov
imul
sbb
and
aaa
xchg
mov
jno
clc
roll
jne
mov
mov
mov
mov
sbb
mov
sub
ret
bound
sbb
outsl
into
int3
push
adc
daa
outsl
mov
out
icebp
inc
mov
pop
andl
cmp
push
or
out
outsl
sbb
popf
fidivrl
or
push
jnp
dec
pop
jo
mov
adc
jb
pop
gs
shrl
mov
push
insl
in
out
outsl
push
mov
mov
inc
in
addr16
sbb
inc
mov
pusha
and
cmpsb
movsb
lods
fs
push
lods
sub
pop
arpl
mov
nop
adc
outsl
out
jge
xor
mov
aam
add
decb
ret
and
cmp
hlt
arpl
imul
and
fs
lret
inc
mov
cwtl
inc
jno,pn
sahf
push
sbb
add
faddp
mov
addr16
mov
outsl
add
add
xchg
lods
addr16
xorb
push
aas
mov
adc
mov
push
dec
arpl
adc
hlt
adc
mov
sbb
and
pop
push
test
adc
les
and
leave
out
jle
or
outsb
ljmp
fcoms
add
repz
inc
lock
popf
mov
lds
xchg
mov
lret
dec
and
push
mov
xchg
es
cmp
loop
outsl
dec
insb
mov
test
cld
addl
outsl
scas
jbe
outsl
icebp
jle
or
and
ljmp
push
cltd
test
mov
imul
mov
icebp
outsl
sub
popf
aam
mov
sub
mov
jne
sbb
ror
loop
inc
cmpb
loope
ror
inc
fcomps
or
sbb
xchg
xchg
mov
jb
shl
sub
imul
repnz
int3
outsl
out
scas
arpl
lods
popa
test
xchg
mov
mov
pop
addr16
push
dec
out
jb
sbb
lock
sub
dec
pop
sbb
sub
sbb
ss
push
ja
sti
jl
inc
outsl
loopne
mov
xor
lea
pop
push
push
mov
adc
xchg
outsl
repz
sub
push
repnz
outsl
jl
fucomi
add
pop
lea
jbe
je
xchg
xchg
cltd
lcall
sub
aas
imul
bound
outsl
sbb
es
xchg
testl
push
mov
mov
pop
sub
cmc
cs
ljmp
jle
enter
push
leave
fistps
inc
ja
outsl
push
sarb
lahf
cltd
xor
or
add
enter
mov
xchg
fildll
add
sub
ret
loopne
outsl
pushf
sahf
or
outsl
out
mov
cmp
adc
pop
add
lret
repz
je
imul
outsl
sbb
sbb
incb
cmpsb
enter
imul
outsl
push
hlt
sbb
mov
push
mov
call
clc
in
outsl
mov
sub
sbb
push
xchg
sbb
adc
jmp
in
mov
fiadds
outsl
cmpsl
mov
cmp
mov
out
mov
loope
cmpsl
bswap
in
xor
sub
push
imul
xor
rorl
push
lock
push
sub
or
mov
adc
inc
sbb
popa
outsl
dec
mov
push
test
sbb
jmp
aam
outsl
fstps
test
outsl
mov
jae
sbb
xchg
sbb
mov
cltd
shlb
dec
jecxz
ljmp
cmc
adc
jo
andb
xor
inc
and
xchg
mov
inc
jbe
stos
in
outsl
test
sub
push
xchg
mov
pop
outsl
aad
mov
loop
daa
icebp
adc
aas
sbb
test
xchg
aam
mov
arpl
sahf
mov
outsl
dec
adc
lods
jnp
mov
lret
addr16
std
and
outsw
pop
sbb
mov
dec
les
pop
lods
xchg
arpl
sub
xchg
or
loopne
xorb
mov
pop
das
rclb
ljmp
jns
mov
mov
push
jge
test
outsb
outsl
imulb
pop
sbb
in
repnz
add
or
sahf
repz
or
fnstsw
mov
leave
test
fsubrl
xchg
int3
in
shrd
loopne
lods
mov
sbb
rolb
aam
das
mov
xchg
push
mov
push
popa
mov
pop
add
adc
inc
test
xlat
int3
aam
dec
push
adc
iret
faddl
mov
xchg
adc
inc
lods
adc
test
or
js
mov
mov
adc
jl
push
or
outsl
dec
das
imul
orl
outsl
pop
and
mov
mov
push
mov
add
ret
mov
jecxz
sbb
jne
jnp
push
addr16
test
data16
sahf
outsl
jbe
repnz
push
lods
lahf
stc
aaa
mov
xchg
xor
inc
je
scas
out
xchg
xchg
or
mov
pop
fimull
mov
stos
testl
mov
scas
mov
notl
test
add
sub
pop
ljmp
dec
jae
mov
stc
outsl
push
adc
and
dec
es
shll
inc
imul
ret
adc
add
inc
test
push
push
outsl
ret
mov
cmpsb
jle
fldenv
push
cmp
pop
fdivrp
scas
std
fbld
enter
jecxz
pop
jge
imul
aaa
dec
dec
cmp
fmuls
leave
mov
inc
iret
and
cmpsb
pusha
outsl
push
adc
jge
lods
xchg
adc
xor
dec
pop
outsl
pop
out
gs
sub
test
test
hlt
lds
mov
add
pusha
arpl
xlat
sub
bound
ljmp
outsl
xor
subl
fs
xor
inc
out
pop
imul
mov
cmp
insl
dec
xchg
xchg
mov
mov
insl
mov
xlat
popa
aaa
outsl
jns
jne
sbb
add
and
jecxz,pt
sub
outsl
mov
lahf
sub
in
xor
addr16
pushf
sbb
jnp
mov
adc
add
iret
dec
aam
mov
cmp
arpl
popf
xor
inc
xor
hlt
pop
jb
mov
lahf
ja
push
sti
add
mov
or
int3
mov
xlat
nop
xor
stc
outsl
sbb
icebp
mov
mov
sub
xorl
and
push
lea
pop
dec
dec
aam
cmp
iret
shrb
sub
ret
and
out
aas
jge
divb
nop
adc
test
mov
mov
lods
push
or
jbe
insb
ja
outsl
mov
fwait
or
dec
test
test
addr16
jge
or
add
test
mov
sub
es
and
mov
xchg
mov
inc
or
xor
sub
jne
lret
and
iret
outsl
cmp
xor
outsl
pushl
xchg
adc
aas
and
pop
xor
add
dec
fildll
outsl
shl
mov
push
pop
adc
das
addr16
fiaddl
push
repnz
outsl
inc
iret
or
nop
outsl
daa
stc
mov
cwtl
outsl
std
inc
rclb
lods
movd
cmp
adc
call
cltd
stos
test
mov
mov
outsl
add
sahf
lods
pop
cli
push
dec
test
push
je
adc
jno
nop
ds
xor
mov
mov
cmp
inc
xchg
movsl
adc
out
in
or
pop
jecxz
ror
xchg
lcall
pop
mov
mov
repnz
lods
or
cmp
outsl
test
int3
xchg
dec
inc
jp
imul
jns
inc
imulb
imul
les
out
cli
in
scas
jmp
push
test
xchg
jno
mov
mov
int3
out
mov
mov
sbbl
xor
lods
insl
shrb
inc
inc
xor
fisttpl
push
data16
inc
jle
sti
mov
imul
jmp
outsl
dec
add
xchg
outsl
js
inc
roll
movsb
outsl
add
ret
fwait
xchg
fidivrl
xchg
int3
xchg
out
in
sub
mov
jae
mov
outsl
mov
jo
dec
adc
lods
out
lods
andb
push
leave
inc
push
arpl
inc
inc
mov
sbb
sub
add
nop
shrl
xor
or
test
mov
lock
stos
mov
int
jl
mov
lds
xchg
mov
shl
in
imul
push
outsl
mov
jns
stc
aas
cld
dec
sbbb
cltd
jbe
cwtl
inc
ret
repnz
fwait
and
popa
mov
outsl
sbb
push
sti
add
ret
ljmp
outsl
add
clc
sti
cwtl
cmpsl
adc
xchg
add
imul
mov
xor
fmuls
int3
lret
outsl
pop
movsl
insl
hlt
imull
xchg
mov
aaa
out
lcall
test
es
call
jne
insb
js
xchg
cmp
in
push
xor
cmpsb
sbb
sub
pop
outsl
pop
aad
div
inc
sahf
pushf
outsl
and
lret
mov
lods
aas
movsl
push
add
addr16
lods
pop
pop
adc
xor
outsl
hlt
scas
sub
jmp
outsl
xchg
dec
and
addr16
testl
mov
pop
cwtl
iret
cmpsl
subl
lcall
inc
push
popf
add
outsl
fcompl
mov
in
add
in
nopl
xchg
aaa
pop
dec
mov
inc
push
in
iret
mov
pop
shlb
inc
aaa
pop
enter
sbb
aas
sbb
lds
call
outsl
jno
mov
xor
lret
lret
pop
jmp
popf
ds
jmp
outsl
out
mov
mov
movsb
jne
inc
pop
push
jae
mov
add
or
aad
lods
add
mov
sub
mov
setb
data16
cltd
mov
mov
adc
and
outsl
lcall
out
inc
cld
idivb
sbb
ret
popa
and
outsl
in
pushf
sahf
xchg
clc
outsl
jge
or
je
sti
mov
mov
mov
outsl
adc
cld
inc
stos
ljmp
test
jno
nop
fs
sbb
cmp
call
jle
inc
fisubrl
add
mov
jo
outsl
cmp
adc
mov
dec
and
push
arpl
loop
pushf
pop
pusha
call
aas
mov
lods
xor
bnd
rcr
addr16
fnstcw
fcoms
adc
stc
lret
mov
addr16
dec
fstps
imul
pop
add
ds
cmp
xchg
xorb
ret
imul
int3
mov
hlt
xchg
mov
outsl
clc
dec
into
mov
push
fwait
shlb
and
in
outsl
in
into
roll
mov
push
dec
mov
outsl
cli
mov
mov
mov
fisubrl
in
and
testl
sub
fidivrl
xchg
shl
pop
and
popf
push
outsl
xchg
mov
or
stos
cmp
rclb
sti
pop
dec
ret
add
mov
push
pop
imul
cmp
and
jnp
adc
inc
lret
outsl
ret
jp
lret
and
fwait
inc
ja
push
fwait
popf
test
shl
sbb
mov
fidivs
adc
imul
arpl
mov
outsl
call
sub
outsl
movsl
sbb
mov
rcrl
subl
pop
add
xor
sub
testl
dec
cmpsl
xor
add
repnz
push
xchg
fwait
cltd
jg
mov
aas
cli
jle
mov
arpl
lods
cmpsb
jge
clc
ja,pt
mov
cmp
fisubl
sub
pusha
int
jp
fwait
mov
ljmp
inc
xchg
xchg
adcb
adc
fwait
arpl
push
and
and
sub
mov
scas
inc
adc
pop
outsl
in
pushf
dec
testb
outsl
cmpsl
nop
mov
js
xor
inc
lock
outsl
jecxz
fsubr
enter
push
gs
outsl
push
cmpsb
push
pop
xor
aas
jno
aam
inc
fsub
cs
fs
jo
fildll
in
cmp
subb
ljmp
sub
lea
hlt
push
add
push
inc
push
popa
outsl
loopne
fadd
leave
mov
pop
popf
jmp
imul
and
aas
and
push
mov
jbe
mov
cmp
fwait
rcll
in
adcl
mov
sbb
les
leave
mov
punpcklbw
xor
insb
mov
notl
cmpsl
xchg
push
mov
subl
cmp
mov
arpl
aaa
scas
iret
push
jmp
sarb
adc
adc
insl
xor
rolb
sahf
inc
mov
outsl
adc
mov
push
xchg
faddl
add
ret
mov
mov
pop
pop
sub
lods
mov
add
pop
mov
scas
nop
outsl
hlt
cmp
jbe
adc
xchg
adc
or
inc
jne
or
in
imulb
mov
inc
mov
add
shrb
jge
outsl
xor
call
and
ret
and
stos
mov
outsl
dec
outsb
add
fidivl
mov
jbe
cwtl
push
jle
mov
ss
ljmp
push
mov
xor
pop
outsl
jo
bound
test
outsl
mov
add
test
sbb
outsl
inc
aaa
lods
sub
dec
outsl
xchg
rolb
outsl
jno
mov
mov
icebp
mov
aam
aad
sub
outsl
jle
push
dec
stos
ljmp
and
scas
aad
je
fmull
and
xchg
mov
and
push
lods
repnz
jae
jo
mov
mov
inc
js
hlt
xor
outsl
mov
mov
cmp
inc
pop
outsl
lods
sub
cltd
dec
mov
outsl
add
mov
pop
push
xchg
jp
sbb
loop
vpaddsw
outsl
int
or
cmc
ss
stos
push
mov
xor
pop
ret
jnp
andl
subb
fcmovu
jecxz
outsl
and
mov
mov
fadd
xchg
daa
mov
dec
fmull
jle
imul
inc
and
and
pop
mov
xor
jnp
xchg
add
sbb
rcll
and
dec
fiaddl
js
test
mov
cmp
xchg
shrb
orl
addr16
cld
nop
mov
pop
fs
xchg
mov
dec
icebp
incb
test
outsl
push
out
xchg
lods
sub
outsl
mov
sti
cmp
out
mov
dec
fmulp
enter
outsb
outsl
pop
cltd
or
cmp
lret
adc
push
imul
ja
les
aas
and
mov
push
mov
stos
push
mov
loop
dec
mov
outsl
fsts
idivl
fcoms
adcl
clc
inc
fmul
pop
xchg
popa
mov
adc
mov
push
and
out
lret
jg
and
dec
mov
scas
pushf
and
outsl
jecxz
lcall
or
imul
jne
je
sbb
lret
ret
lahf
xlat
and
mov
push
jle
in
dec
jg
aam
enter
mov
cs
outsl
add
outsl
testb
jge
xlat
xchg
mov
mov
sbb
push
lods
cmp
nop
outsl
repz
cmp
xor
add
icebp
shl
push
jecxz
mov
adc
and
test
addr16
int3
xchg
outsl
xlat
and
sub
and
mov
leave
outsl
or
aam
int
in
xchg
repz
outsl
cli
or
test
jle
addb
popa
js
fidivrl
cmp
mov
les
lret
arpl
push
push
fistpl
add
mov
cmp
outsl
mov
add
mov
inc
aas
dec
mov
pop
mov
adc
sub
add
mov
mov
nop
adc
test
out
cmp
adc
mov
movsl
ficoml
or
dec
arpl
mov
pop
add
fcompl
dec
call
pusha
xchg
jne
enter
addl
fidivrl
sbb
les
mov
stc
mov
mov
push
inc
pop
test
addb
mov
push
mov
and
jge
add
mov
mov
inc
loop
inc
lods
insb
or
sub
sub
shrl
pop
outsl
ja
mov
fldt
xor
movsb
and
fwait
jae
pop
inc
ss
ror
fmul
jle
jmp
push
push
dec
or
mov
gs
xchg
test
mov
addr16
test
dec
outsl
or
jb
mov
insl
rorb
shrb
inc
adc
mov
mov
cmp
or
loop
push
mov
js
xchg
ds
pushf
in
dec
fmul
jne
daa
pop
jmp
sbb
popa
add
lods
add
push
xchg
lcall
mov
adc
lcall
scas
and
int
mov
xchg
pop
lcall
sbb
bound
mov
xchg
push
mov
add
mov
in
xchg
js
xor
pop
add
in
into
movsb
stc
cs
rcrb
mov
and
bound
mov
mov
jecxz
nop
and
inc
addr16
xor
ret
sbb
in
orl
insb
lahf
jno
xchg
outsl
mov
clc
mov
out
outsl
mov
mov
xor
inc
cmp
dec
outsl
sub
aad
mov
negb
mov
xchg
adc
push
test
inc
add
daa
jp
loopne
fstpl
aas
test
xlat
out
mov
mov
xor
pop
add
and
mov
sub
mov
je
push
pop
cli
into
mov
xor
sub
push
shl
mov
outsl
mov
daa
subl
mov
rorl
push
mov
bound
or
adc
jne
scas
jge
je
xor
or
outsl
mov
arpl
iret
or
shll
popa
and
push
rcrl
sbb
jmp
cwtl
xchg
mov
iret
xchg
aaa
outsl
out
push
int
mov
push
pop
push
xor
insl
outsl
es
and
and
xlat
mov
lret
sti
pop
test
gs
mov
insl
push
sbb
std
bound
out
mov
fmuls
outsl
cs
add
pop
sarl
addr16
ja
jb
ret
xchg
jmp
mov
jbe
outsl
push
js
dec
fs
sbb
mov
add
outsl
aam
add
push
xchg
test
cmpb
mov
lahf
addr16
mov
adc
push
pop
inc
cmp
sbb
sbb
stc
orb
mov
movsb
add
pop
fimull
lods
push
sbb
and
dec
outsl
je
dec
gs
out
outsl
jle
ss
cmp
mov
xor
mov
enter
imul
mov
fcompl
mov
pop
mov
lods
nop
sbb
jbe
das
ss
push
pop
aad
ret
add
mov
push
pop
nop
imul
outsl
pop
xchg
mov
in
jle
pop
sbb
movsb
sahf
mov
or
addr16
mov
adc
daa
cwtl
push
xchg
cmp
mov
cli
out
mov
sub
push
lods
stos
xchg
dec
fnstenv
divb
xlat
pop
sbb
push
or
les
lea
push
xchg
and
mov
xor
in
bound
scas
outsl
pop
pop
push
repnz
xor
in
push
sub
outsl
jbe
sub
sbb
bound
ret
mov
std
jmp
pusha
and
shrl
xor
xor
mov
idiv
sbb
xorl
xor
hlt
arpl
sbb
add
aas
dec
icebp
mov
scas
push
xchg
mov
popa
arpl
ss
lcall
add
inc
outsl
int3
sub
or
mov
outsl
movsl
icebp
scas
popf
push
add
mov
adc
xlat
clc
cmc
mov
sub
cmp
inc
adc
outsl
fcoml
rcrb
fnstsw
out
xor
jae
push
cmc
dec
js
fsubp
mov
shlb
pop
fwait
cmp
and
sub
pop
jb
cwtl
movsb
scas
push
stos
pop
adc
cltd
cli
popa
or
inc
mov
call
aas
xchg
je
sti
xchg
cmc
testl
jl
pop
ljmp
push
pavgb
out
fs
lret
xchg
pop
jae
jge
mov
add
aad
mov
fwait
outsl
aam
shrb
stc
dec
mov
sub
gs
or
arpl
outsl
loopne
mov
icebp
loop
mov
fbstp
mov
scas
test
hlt
shrl
stos
pop
js
sub
xchg
pop
mov
vpsraw
mov
jecxz
push
aad
fstps
cmp
cmp
dec
outsl
std
fdivrs
mov
bnd
push
inc
imul
pop
outsl
xor
cmp
jge
mov
adc
out
lret
enter
mov
xor
sbb
mov
outsl
shll
mov
inc
std
sbb
cmpsb
pushf
outsl
mov
push
lret
subl
fwait
jbe
cmpsb
cmpl
adc
fldenv
or
push
dec
adc
inc
outsl
jno
fcmovnbe
insl
mov
scas
outsl
add
inc
negl
sahf
ja
dec
inc
xor
aad
fistpl
movsl
xchg
nop
mov
mov
fs
adc
jnp
push
ficoms
outsl
adc
movsb
or
sub
inc
nop
in
cmp
popf
sbb
arpl
pop
int
subb
and
stos
iret
sbb
sbb
outsl
repnz
or
pop
jmp
xchg
hlt
sub
ret
outsb
outsl
stc
xchg
lcall
xchg
ret
outsl
xor
xor
popf
outsl
sbb
push
popa
pop
outsl
xor
movsl
fldt
sbb
into
push
imul
xlat
cs
fisubrs
pop
andl
mov
mov
or
daa
insl
jne
les
lret
fcoms
add
outsl
decl
xlat
ss
push
filds
xchg
orb
int
mul
dec
outsl
outsb
ljmp
or
push
inc
outsl
adc
xchg
repnz
add
add
xor
hlt
cmp
jbe
daa
pop
test
ret
ret
xor
pop
jo
mov
rolb
mov
outsl
xor
add
xchg
outsl
jmp
lods
jo
add
mov
cltd
les
mov
stos
dec
pop
dec
ret
push
and
add
cmpsl
ret
lods
aad
aaa
subl
adc
in
and
jbe
push
lcall
mov
mov
rorl
pop
rolb
adc
jle
xor
aaa
or
bound
loopne
repnz
arpl
xor
mov
sbb
insl
and
dec
cmpl
push
mov
cmp
icebp
aas
mov
repnz
mov
outsl
pop
ficoml
nop
pop
notb
jmp
shlb
jne
das
cwtl
xor
inc
mov
ds
inc
jae
insl
outsl
lret
gs
addr16
and
xchg
cmp
popa
jge
std
das
arpl
pop
mov
push
outsl
rclb
xchg
shll
outsl
fmull
cmpsb
hlt
outsl
shr
scas
xchg
popf
sbb
sbb
arpl
arpl
and
sub
pushf
insl
pop
repnz
imul
inc
cmpb
push
pusha
cmp
add
hlt
fdivrp
jecxz
test
xchg
jp
pop
nop
mov
out
test
mov
sub
aas
outsl
dec
std
les
or
xor
xchg
jg
fwait
inc
xchg
mov
fldt
jp
push
inc
jb
ret
lcall
outsl
repnz
jbe
dec
stos
leave
sbb
xchg
mov
xor
push
xchg
and
jno
mov
iret
jae
fprem1
into
stos
imul
lods
loopne
fisubrl
lock
fdiv
push
dec
xchg
outsl
sti
xchg
lea
xchg
adc
inc
mov
loop
jp
dec
scas
cmpsl
xor
jo
adc
mov
mov
push
lock
and
inc
aas
sbb
jecxz
icebp
mov
adcl
shrl
cmp
mov
fmull
and
outsl
sub
mov
lahf
jo
jno
jns
call
subl
cmp
mov
push
jmp
outsl
lods
adcl
pop
xchg
lods
aad
cmpsl
pusha
aam
outsl
mov
sar
into
and
fisttpll
gs
cmp
ljmp
lcall
push
testl
hlt
pop
mov
xchg
or
xchg
and
adc
popa
std
cmpl
adc
xor
in
mov
gs
xlat
sbb
push
arpl
push
jge
fildll
cmc
add
xchg
lds
movhps
sbb
lea
mov
adc
nop
jnp
mov
outsl
cmp
push
pop
inc
mov
fsts
pop
push
stc
and
outsl
xchg
aad
in
in
mov
imul
outsl
rorb
push
mov
outsl
fmuls
mov
outsl
jns
es
out
xchg
outsl
sub
stc
sbb
rcrb
int3
jmp
cld
lds
les
adc
stos
xchg
outsl
jecxz
shrb
dec
dec
xchg
jbe
arpl
outsl
xchg
sbb
stos
dec
outsl
ja
adcl
enter
hlt
arpl
sbb
mov
inc
cmp
lods
sub
mov
mov
adc
les
cmp
out
jge
or
inc
push
cmpsl
or
roll
insb
arpl
push
insl
outsl
push
and
inc
loopne
orb
push
pop
outsl
clc
repz
xor
jg
pushaw
jb
outsl
incl
add
mov
test
and
testl
push
or
sbb
dec
adc
sub
loopne
xchg
mov
loopne
pop
inc
jge
sub
push
or
addr16
jb
mov
xlat
outsl
inc
lret
push
stos
add
mov
sub
outsl
loopne
mov
mov
stos
sbb
sbb
xchg
outsl
sti
xchg
sub
shlb
outsl
push
mov
push
frstor
mov
inc
outsl
test
sahf
out
inc
das
cld
les
in
cmpsb
mov
cli
repnz
xchg
test
pushf
xchg
fs
push
and
outsl
ret
leave
out
je
outsl
jmp
mov
lret
aas
les
pushf
scas
and
out
ds
ja
jle
jb
lods
popa
sbb
mov
lods
test
jecxz
cmc
scas
sub
jne
jge
divb
jle
xor
imul
rcrl
jae
push
cli
dec
cmp
ror
pop
jno
xchg
aaa
mov
mov
stos
mov
shlb
pop
jmp
outsl
cmp
ret
enter
push
outsl
nop
mov
loop
sar
lcall
and
int
cmpl
mov
loop
out
fstpt
outsl
add
ja
inc
adc
rcrl
int3
add
lods
mov
xor
or
mov
out
xchg
xor
ja
sbb
jno
jae
push
rolb
arpl
xlat
outsl
cmp
xchg
ret
mov
mov
cmp
iret
push
das
out
cmp
inc
push
jmp
sub
cs
push
mov
pop
fs
outsl
and
pop
mov
inc
cmc
sbb
in
dec
mov
popf
sahf
sub
jg
inc
lret
sbb
outsl
sub
sahf
lea
outsl
add
pop
roll
mov
je
push
outsl
sub
xchg
out
fwait
outsl
pop
jbe
mov
pop
testl
test
adc
outsl
int3
mov
lahf
mov
sbb
xchg
push
jmp
cmpsl
addr16
adc
adc
pop
inc
outsl
lret
mov
rorb
xchg
stos
cmp
outsl
sar
dec
jl
dec
out
outsl
xlat
sub
data16
test
inc
into
mov
lea
adc
and
in
lods
mov
shl
outsl
mov
push
les
cmp
arpl
rorb
sub
fldl
mov
ss
bound
aam
orb
adc
fildll
or
and
pop
cli
mov
iret
sub
mov
and
test
mov
lret
or
mov
sbb
mov
outsl
mov
int3
push
push
sahf
lcall
sub
int
int3
into
gs
push
cmc
fistpll
mov
jecxz
outsl
and
add
push
push
ljmp
inc
xchg
lcall
icebp
std
cmc
repz
outsl
test
inc
mov
dec
pop
ret
imul
fldt
inc
mov
outsl
cmp
loope
lods
mov
outsl
test
pop
lcall
cmp
add
jp
push
outsl
movsl
sbb
lret
sbb
nop
cmp
pop
pop
mov
mov
adc
xor
ficomps
sub
popf
jbe
scas
outsl
mov
aas
cmc
pop
jecxz
or
add
insb
outsl
in
pop
xchg
fdivs
outsl
jge
push
add
or
mov
int
nop
decb
push
fisubs
sub
lret
enter
inc
and
add
rclb
adc
imul
call
rclb
add
lods
add
xchg
lret
mov
sub
push
jae
inc
aaa
mov
xor
in
shlb
cmp
xor
mov
popf
imul
adc
cltd
pushf
pop
or
outsl
frstor
test
mov
outsl
adc
pminub
mov
push
inc
add
cmpl
rdtsc
add
repnz
cwtl
shl
ljmp
pop
lock
pop
add
pop
pop
shll
xchg
mov
mov
addr16
xchg
in
mov
out
adc
ja
movl
mov
and
mov
mov
mov
jne
push
pushl
pop
fs
and
sub
xor
jmp
pop
js
pop
outsl
rcr
ja
add
lahf
pop
inc
repnz
and
outsl
test
rclb
mov
jmp
cmp
push
fucomip
shrb
stc
xor
sti
icebp
mov
aas
xor
lret
add
outsl
mov
dec
cli
shrl
push
aad
xor
outsl
sbb
mov
iret
aas
sbb
stos
and
sbb
bound
out
ret
sub
outsl
pop
jecxz
mov
lahf
mov
mov
dec
ds
lods
pop
mov
xor
push
inc
nop
ret
jns
mov
arpl
scas
int
cmpsb
jmp
xlat
dec
faddl
outsl
lret
mov
lcall
push
imull
xor
cli
sub
dec
inc
add
adc
les
sbb
xchg
mov
scas
xor
scas
pop
cmp
sub
test
jle
hlt
inc
dec
outsl
adc
filds
or
pushf
dec
in
dec
sbb
outsl
scas
pop
and
dec
adc
arpl
push
popf
int3
rcr
out
xor
outsl
mov
cmp
pop
outsl
aam
adc
and
pop
ss
sbb
xchg
pop
sbb
add
je
in
inc
outsl
mov
push
loop
lock
scas
adc
push
outsl
xor
cli
outsl
push
int3
and
imul
sahf
dec
jbe
jae
movsb
outsb
subb
and
mov
mov
outsl
adc
mov
mov
xor
pusha
outsl
and
jae
xchg
stc
pop
movsb
outsl
add
call
mov
jmp
outsl
sahf
xchg
pop
ljmp
jo
mov
cmp
popa
mov
and
shrl
jno
outsl
loopne,pn
mov
int
decb
cmp
or
das
mov
pop
andb
jmp
loopne
or
pop
insb
pop
pop
mov
dec
in
cmpsb
fisubrs
insb
mov
sahf
or
addr16
repz
ljmp
outsb
fsubrp
int3
jg
sub
aaa
ds
pop
xor
fistl
add
add
or
push
pop
pusha
fiadds
push
pop
shrl
push
lret
mov
jae
jg
mov
movsl
out
outsb
jnp
pusha
clc
jge
popa
ljmp
ljmp
stos
call
sub
xchg
fwait
aam
clc
fs
cmp
dec
pop
add
popf
pop
dec
add
addr16
fldenv
std
fsubrl
rcrb
int3
das
punpcklwd
test
lods
repnz
mov
mov
das
jmp
insb
dec
ljmp
pop
pop
mov
arpl
sub
mov
andb
ds
out
js
cmp
outsl
out
das
bound
std
or
clc
pop
pop
lods
paddsw
out
push
push
aas
dec
cmp
outsl
fimull
ficomps
xor
mov
dec
fidivs
lret
aas
sbb
sub
out
cs
nop
aas
das
push
push
inc
adc
aam
jno
push
imul
arpl
cld
sub
and
daa
cmp
les
ds
cmp
scas
pop
pop
into
sub
imul
fidivrs
xlat
dec
or
insl
cmpsl
sub
inc
movsb
push
push
lods
clc
inc
pop
in
out
dec
es
movsb
dec
jle
push
push
sbb
dec
jns
outsl
das
dec
xor
notl
into
jecxz
test
lods
sbb
xchg
mov
or
cwtl
mov
ficomps
sub
fdivl
out
jmp
and
and
sub
test
mov
xlat
test
sbb
stos
push
inc
dec
popf
inc
cmpb
sbb
sbb
and
clc
das
inc
mov
out
sbb
decb
or
add
pop
addr16
adc
inc
mov
rorl
jbe,pt
jmp
jge
lods
insl
out
xor
cmp
out
mov
repnz
lods
mov
imul
negl
mov
int3
das
xchg
mov
add
push
sub
daa
push
cmp
scas
ss
mov
xor
test
insb
rorb
mov
bnd
int
jb
mov
and
out
dec
ret
push
fs
or
ds
xchg
cmpsl
sbb
jo
aaa
pop
js
in
rorl
inc
decb
dec
bswap
pop
sbb
aas
leave
cltd
sarb
scas
cmpsb
imul
push
insb
in
inc
shlb
and
andb
mov
test
cmpsl
insl
aas
push
es
das
dec
in
movzww
and
stos
inc
jb
pop
mov
cmp
push
dec
in
mov
push
jae
scas
pop
mov
mov
xor
ret
push
pop
gs
mov
outsb
aam
lahf
cwtl
pop
in
inc
mov
dec
xor
addr16
pop
int
call
ja
inc
idivb
and
test
push
sub
lds
outsb
xchg
js
sbb
push
lea
outsb
les
push
inc
or
test
inc
jnp
fdivp
nop
call
push
das
out
pusha
decb
outsb
arpl
cmp
push
scas
insl
insl
dec
out
imul
fidivs
push
stos
dec
xor
mov
mov
daa
aas
sti
push
shrl
aas
fistl
ret
aas
ret
adc
fisubs
jle
pop
daa
or
stc
dec
cld
xchg
cmp
stos
insl
jmp
imul
mov
or
sahf
dec
into
pop
fidivs
stos
stos
jmp
sub
sbb
mov
pop
mov
das
xor
add
xchg
shrb
lea
jae
sbb
or
add
cld
cwtl
mov
dec
jmp
or
aaa
mov
dec
sub
xchg
pop
jmp
sahf
pop
inc
lea
das
inc
dec
pop
fisubrs
jo
dec
icebp
inc
inc
push
mov
sbb
mov
das
pop
xchg
sbb
stos
fcoms
repz
xor
mov
dec
xchg
xchg
add
cmpsl
pop
pop
cmp
jmp
pop
adc
jae
loop
and
dec
lods
pop
sahf
mov
in
scas
dec
rorb
and
push
and
mov
sub
data16
push
xlat
sub
ss
insb
sub
sbb
dec
pop
mov
fmuls
nop
fdivrl
daa
fmuls
and
dec
sbbl
insb
pop
out
or
push
sub
xchg
jae
lods
add
sub
dec
sbbl
or
out
pop
push
mov
dec
call
or
insl
sahf
outsl
dec
imul
dec
or
or
in
push
push
std
and
mov
xlat
leave
stos
dec
dec
lcall
mov
cwtl
sub
cmp
out
cli
gs
popa
pop
ja
sub
push
pop
and
or
mov
push
push
lods
lods
mov
cli
pop
sub
outsb
add
lods
pop
mov
mov
bound
pop
pusha
outsb
mov
jno
aas
pop
int3
inc
jg
adc
push
sbb
shlb
cmp
out
cmp
imull
push
je
rclb
or
pop
ljmp
mov
outsb
addb
fwait
inc
mov
adc
rcr
pop
into
or
repz
imul
lods
pop
shlb
xorl
push
bound
jle
lods
sahf
aad
mov
int
inc
pop
sub
fisubrs
inc
ljmp
daa
out
pop
cmp
fadds
lock
jb
sub
das
mov
cld
scas
mov
mov
das
std
sbb
fisubs
xchg
ret
insl
dec
outsb
jb
data16
push
pop
or
into
sub
fmul
or
mov
push
in
cs
cs
roll
int
cs
outsb
cs
xchg
das
scas
mov
imul
sub
mov
outsb
add
pop
fisubrs
imul
outsb
daa
dec
fisubs
pop
pop
cmpsl
mov
cmpb
repz
imul
lea
sub
sub
ljmp
inc
jl
cmpb
push
xchg
es
jmp
fildll
je
loope
adc
sbb
xor
daa
faddl
in
int3
jmp
push
cmp
sub
cmpsb
pop
mulb
sub
into
cld
insl
ds
das
sub
xchg
add
xchg
adc
into
or
stos
cwtl
mov
loop
imul
lret
mov
dec
stos
scas
std
popa
and
out
aad
cld
inc
fldt
jne
fsubs
sub
mov
outsb
pop
iret
out
pop
mov
das
and
popf
das
mov
and
das
push
in
loope
push
imul
inc
outsb
add
ljmp
dec
cmp
push
outsb
and
out
adc
xchg
and
lods
mov
out
cmpsl
inc
scas
jnp
and
jmp
xchg
arpl
stc
test
call
sub
and
out
out
insl
je
pop
pop
mov
and
imul
pop
data16
imul
aad
lods
imul
arpl
pop
out
stos
insb
popa
hlt
imul
fwait
pop
and
cmp
subl
and
inc
jecxz
mov
jg
bswap
xchg
shrl
bound
imul
xor
leave
and
sub
sti
sub
test
xchg
rorl
ljmp
or
outsb
sbb
data16
std
mov
sub
loop
dec
aad
fnsave
imul
mov
jl
out
bound
pop
pop
cmpsl
fdivrl
or
dec
mov
mov
dec
adc
das
aas
or
pcmpeqw
xchg
mov
daa
mov
stc
inc
mov
ljmp
imull
dec
or
pop
mov
jns
stos
push
or
in
xor
ror
pop
jecxz
mov
lods
fstpl
scas
jg
push
cmp
dec
addr16
and
jp
sub
jns
sub
pop
xor
aas
mov
shrb
insl
cmp
mov
std
add
fisttpl
scas
sbb
dec
in
cmp
out
dec
jle
pusha
gs
sbb
imul
sub
cltd
and
or
xchg
xchg
ret
scas
jge
sub
aas
push
das
fiadds
cmpsb
cmp
push
adc
pop
or
dec
and
outsb
mov
ss
out
das
sahf
mov
xlat
inc
pop
sahf
fisubrs
mov
sti
pop
sbb
and
insl
popf
sub
dec
dec
lea
pushf
pop
mov
movsl
adc
push
sub
stos
insl
jne
sub
and
ja
xchg
ss
fidivrs
hlt
ret
pop
pop
cs
adc
ljmp
subb
repnz
inc
lret
pop
fcoms
sub
lahf
outsb
and
sub
push
mov
adc
jbe
ds
int
das
jmp
cmpsb
push
and
lds
mov
inc
into
lea
jnp
xor
insb
fs
scas
jmp
jmp
mov
dec
sub
lret
mov
push
sub
outsb
outsl
insb
bound
mov
std
mov
push
pop
fcmovnb
lods
add
dec
jecxz
scas
inc
lods
xchg
test
mov
mov
sub
test
pop
mov
and
mov
sub
stos
outsb
mov
inc
es
out
filds
mov
ljmp
jae
or
cmp
test
into
lods
cwtl
lret
and
push
inc
push
mov
fistpll
in
ss
sub
cs
adc
das
fdivl
out
mov
add
into
sbb
xor
mov
fsubrl
out
imul
outsb
mov
rcrb
mov
push
mov
fadds
outsb
jmp
ljmp
cld
push
imul
push
sub
xor
sub
push
xchg
lods
push
cli
insb
and
sub
jmp
outsb
push
aad
pop
lods
fidivrs
ds
push
mov
lods
and
loop
cltd
jmp
jbe
std
cmp
cmp
dec
pop
sub
mov
sub
xor
loope
add
or
sub
push
paddusb
mov
call
fwait
arpl
pop
mov
xor
hlt
push
dec
mov
mov
push
jmp
jp
test
mov
dec
popa
int3
addr16
lret
pushf
int
pop
sub
adc
add
pop
ret
imul
jp
pushf
xor
in
dec
div
mov
popf
das
sub
xchg
jmp
and
cmp
mov
adc
insl
jnp
imul
push
data16
and
sbb
dec
and
push
mov
cmp
and
shrb
std
and
int3
inc
or
cli
dec
ljmp
into
outsb
or
loopne
lods
pop
mov
push
pop
mov
lcall
mov
adc
add
data16
pop
mov
in
ret
or
dec
lods
jg
add
movsb
insl
test
jge
and
into
subb
cmp
pop
aas
push
stos
dec
lods
andl
pop
pop
dec
and
push
mov
outsb
outsb
push
into
cmp
pop
stos
xchg
cmp
pop
mov
mov
addl
outsb
sub
dec
test
fstpl
jmp
aam
fsubr
fstpl
cmc
push
mov
scas
jmp
jno
add
mov
test
xchg
sub
sub
or
push
cmp
ror
sbb
or
clc
pop
daa
fimuls
test
out
xor
adc
lahf
pop
pop
adc
scas
dec
lods
and
pop
stos
insl
test
mov
lret
jl
pop
sub
enter
fldcw
scas
mov
mov
out
mov
pusha
imul
pop
sbb
test
outsb
jae
jp
insl
js
aaa
push
mov
add
je
mov
ljmp
push
add
sub
dec
cld
jl,pt
scas
fisttpl
and
in
mov
mov
dec
mov
insb
inc
lods
xlat
scas
add
xchg
and
sub
mov
scas
xchg
sub
and
push
out
out
loop
sub
mov
dec
pop
movsb
and
and
jmp
sub
out
or
js
es
and
call
cld
aas
cwtl
fs
pop
ljmp
xor
sub
popa
out
lahf
fmul
sub
imul
sub
push
out
sub
das
jg
xor
daa
mov
sub
mov
arpl
gs
mov
sub
push
cmp
sbb
or
jae
out
movsl
shlb
aam
call
sub
mov
add
mov
mov
or
mov
mov
lahf
lock
mov
push
je
adc
imul
mov
mov
and
push
xchg
cld
out
adc
ja
gs
mov
push
add
lods
adc
enter
es
mov
in
out
stos
stos
and
sub
fcomp
cmp
fimuls
sbb
enter
loop
xchg
ds
lret
nop
outsl
sahf
subl
imul
aad
push
dec
sub
outsb
push
push
mov
jmp
testl
das
dec
push
movsb
xchg
pop
pop
mov
xor
ss
pusha
in
int3
scas
add
fsubrl
mov
or
push
bsf
lret
fwait
or
jae
cmp
popa
sub
fisubrs
xchg
jmp
popa
int3
sbb
sub
lods
int3
lods
sbb
loop
das
pop
test
dec
and
dec
pop
stos
and
mov
dec
dec
pop
std
test
outsb
fldt
orb
sbb
subl
clc
out
das
sub
add
dec
scas
dec
call
xchg
shrl
pop
outsb
in
and
cs
pop
pop
cld
cmp
or
das
ljmp
mov
mov
inc
jge
adc
mov
shrl
out
into
push
lock
pop
popf
xchg
pop
mov
into
lea
mov
dec
out
xchg
cmp
or
xor
mov
xor
dec
mov
pushf
outsb
pop
lahf
lcall
stos
add
insb
orb
pop
scas
pop
mov
imul
pop
adc
andnps
subl
cmp
and
and
sub
sub
adc
inc
xchg
lock
xchg
test
push
mov
dec
imul
push
inc
ljmp
aad
fidivrs
out
adc
add
mov
sbb
sub
add
in
pop
outsb
in
inc
cmp
ficomps
jae
in
sub
lds
inc
mov
sub
push
cmp
cltd
jb
in
cmp
cld
dec
into
push
inc
cld
shll
sbb
jecxz
inc
outsb
jo
enter
mov
lret
sub
mov
jb
cli
in
in
insb
scas
mov
into
push
inc
xchg
sub
imul
mov
in
or
mov
or
and
add
pop
lret
push
sbb
mov
sahf
lods
and
in
mov
fsub
sbb
std
push
int3
or
jle
dec
mov
xchg
mov
sub
and
sub
lods
out
ja
and
mov
mov
push
mov
std
lret
add
imul
mov
test
mov
xchg
sbb
xlat
xchg
mov
lds
pop
push
stos
mov
adc
popa
das
lods
pop
das
call
movsl
dec
call
mov
xchg
cmpsl
lea
fisubrl
pop
cli
popa
or
scas
out
aad
cld
cmp
in
cmp
mov
mov
mov
jle
daa
inc
das
frstor
push
fimull
addr16
sub
std
inc
cmp
cs
aas
mov
inc
push
sbb
cmpsl
and
idivb
lods
mov
cld
std
scas
out
jns
hlt
loopne
loopne
jge
add
fldl2e
or
mov
mov
aad
dec
outsb
imul
lods
int
imul
call
fsubrp
pop
mov
mov
shl
mov
out
aad
cmp
jbe
movsb
inc
fldz
and
inc
pop
cs
mov
lret
sub
pop
aam
push
push
inc
enter
sub
sbb
repnz
popf
ret
inc
push
lea
add
imul
ss
outsb
sub
fidivs
or
data16
arpl
mov
sbb
pop
mov
inc
push
mov
es
into
lea
sbb
sub
fstl
lods
adc
mov
cmc
jo
inc
imul
pushf
and
or
lahf
push
decl
mov
lods
adc
or
mov
lahf
and
cld
mov
jae
jge
cmpb
fimuls
in
xchg
dec
and
and
fisubrl
ljmp
dec
cli
shrl
lret
out
in
stos
adc
movsb
shlb
mov
lods
and
out
sub
outsb
mov
pop
sbb
inc
or
scas
add
cmp
outsb
addr16
stos
js
and
pop
or
or
adc
mov
pop
or
mov
sbb
jae
and
ljmp
stc
inc
add
rcrb
les
fmull
int
or
fldz
dec
call
pop
sbb
fistpl
lret
orb
cmp
and
push
aad
fidivrs
ds
sbb
and
lods
sub
andl
push
call
lock
ljmp
outsb
cmp
jl
xchg
outsb
aas
push
inc
cmovg
insb
cmp
pushf
mov
sub
lret
test
arpl
ljmp
adc
mov
outsb
and
sub
ficomps
fmul
ss
jl
mov
mov
or
scas
jmp
bnd
sbb
sub
cmp
cmpsb
xor
push
aaa
pop
push
scas
mov
adc
stos
jae
call
jg
pop
icebp
and
idivb
add
ss
cmp
sub
pop
inc
call
fisubrs
rolb
in
bswap
les
adc
shrl
iret
lea
add
lret
in
test
jl
insb
dec
loope
xchg
gs
movaps
push
mov
iret
mov
js
daa
dec
out
out
int3
outsb
lret
inc
fisubrs
stos
out
mov
das
stos
stos
mov
fwait
dec
fldcw
inc
cs
push
sarb
pop
dec
lea
sahf
adc
std
sub
cmp
mulb
das
cwtl
iret
int
rolb
scas
mov
inc
dec
std
add
shrb
out
daa
fistpll
cs
cs
or
into
or
sub
jmp
dec
popa
icebp
and
adc
mov
jmp
ret
fisubrs
fiadds
and
and
cmpsb
push
outsb
fwait
inc
push
or
stos
dec
pop
mov
mov
lret
cmpsl
xchg
clc
jmp
int
mov
pop
or
mov
mov
out
adc
dec
or
xchg
test
push
enter
pop
scas
add
mov
mov
cmp
fildll
dec
inc
xchg
cmp
mov
sub
sub
jbe
pop
xchg
out
sub
ret
sub
inc
in
int
or
cmp
out
pop
dec
pop
jnp
xchg
dec
out
sub
jmp
fsubs
and
mov
out
loop
push
lret
push
aad
out
jecxz
enter
es
xchg
cs
in
and
jne
mov
leave
sbb
jnp
ljmp
add
sub
dec
push
in
lea
lods
cld
out
popl
in
jg
jmp
std
jl
jmp
push
pop
pop
push
and
xchg
push
cmp
sbb
jmp
test
test
and
mov
scas
mov
mov
es
shlb
sub
fwait
scas
mov
mov
popf
clc
mov
or
cld
test
xchg
lods
mov
shr
imul
scas
pop
call
imul
pop
lods
push
lods
mov
jns
sub
mov
and
outsb
dec
scas
or
andps
mov
add
lret
cli
inc
sub
pop
cs
mov
sub
out
sub
loop
stos
stos
cs
div
data16
ljmp
push
xor
jnp
xor
fwait
pop
in
addr16
sbb
mov
in
insl
test
or
data16
daa
lret
in
test
and
lods
inc
dec
fucomi
fisubrs
rcll
adc
shrb
xchg
imul
in
lret
call
cmp
hlt
xchg
pop
cmp
out
or
insb
loop
cmp
pop
loop
loope
jbe
add
inc
pop
jp
ljmp
push
mov
idivl
sub
mov
popf
dec
push
mov
pop
lea
push
lods
lcall
std
cmp
pop
sbb
pop
pushf
fsubs
pop
mov
insl
push
jp
shll
mov
fildll
out
insl
pusha
out
loope
cwtl
jbe
add
jge
sarl
int3
dec
cltd
push
out
bound
stos
popa
mov
cmc
lahf
pop
leave
das
jmp
cmp
outsb
or
mov
dec
test
jnp
call
pop
cmp
test
rep
shr
shl
mov
inc
adc
out
cli
cmp
inc
leave
inc
mov
fisttpl
jae
enter
imul
push
cmp
hlt
cmp
push
add
mov
pop
xchg
stc
mov
pop
cmp
or
call
xchg
jge
test
sbb
mov
mov
insb
cmp
fcoml
dec
sub
xchg
stos
scas
and
pusha
jl
mov
xor
xor
sub
inc
jmp
arpl
je
imul
adc
mov
jl
xchg
in
fwait
cmc
shlb
daa
or
mov
mov
sbb
cld
adc
std
testb
mov
popf
icebp
pop
loopne
out
in
ja
lea
jo
cmp
pop
mov
sub
pop
negb
insl
lds
jo
pop
mov
daa
lahf
test
lcall
pushf
int
loope
lret
aad
push
mov
cmpsb
movsbl
or
sbb
scas
cmp
mov
in
clc
dec
stos
cltd
push
sub
xor
mov
pop
push
cld
ficoml
pop
fidivl
dec
and
jae
or
outsb
pushf
aas
adc
pop
cmpsb
mov
dec
ficompl
push
and
lea
xchg
adc
test
in
fisubrl
lret
bound
xorl
shlb
aas
cmp
jns
sub
jne
mov
or
loopne
and
push
pop
scas
sbb
std
xchg
ljmp
sub
in
lods
stos
orl
insb
pop
lds
sub
dec
test
and
mov
mov
pop
lods
or
fisubs
faddp
insl
cmp
pop
push
cmp
aaa
sahf
in
lret
adc
mov
jmp
add
and
sub
imul
fucom
lods
ss
mov
insl
sub
mov
cmp
xor
in
sub
ja
sarb
mov
subb
and
and
imul
pop
dec
or
push
bound
dec
ja
and
lods
cmp
push
mov
fldcw
lock
test
mov
inc
adc
adc
push
xor
dec
mov
push
or
leave
push
stos
sbb
cmpsb
mov
or
mov
sub
sbb
cmpsl
out
mov
in
and
cwtl
gs
push
scas
mov
xchg
dec
cmp
sub
adc
and
pusha
or
lea
dec
cmp
loopne
mov
push
mov
daa
lret
out
sbb
sub
mov
fidivrl
sub
lods
cmpsl
mov
sub
xchg
and
int3
stos
loopne
mov
push
sub
stos
push
jp
pusha
stc
lret
subb
and
or
rcr
cld
scas
jns
loop
cmpl
pop
sti
fisubl
gs
jae
shlb
cld
out
stos
pop
call
mov
sub
push
loope
cmp
les
mov
cmp
jl
lock
pop
mov
jnp
xchg
add
or
mov
mov
xchg
inc
sub
sub
faddl
jne
sbb
mov
pop
cmp
dec
lea
stos
fisubrs
ret
jl
stos
fnstcw
insb
cmp
mov
mov
ss
shll
adc
fldl
jne
dec
mov
mov
sbb
out
xorl
test
jl
jmp
leave
aas
xchg
popa
insl
call
imulb
call
sub
imul
mov
cltd
int
jne
adc
mov
mov
and
pop
les
push
pop
repz
sub
lea
fldcw
xor
mov
cmp
sub
xchg
mov
cltd
xchg
jmp
sbb
jg
es
lds
imul
mov
push
inc
cld
inc
add
jecxz
test
push
out
into
ljmp
bound
leave
sahf
mov
xchg
outsb
dec
add
sub
lods
and
pop
je
stos
test
and
push
call
ds
fisubrs
jmp
into
xchg
std
insb
sbb
jl
andl
enter
dec
and
fstps
inc
fnstsw
gs
das
add
fidivrl
mov
in
jbe
cld
out
shl
bound
rcll
pop
lea
mov
push
adc
dec
sbb
in
fcompl
push
ds
jg
lock
sbb
jmp
pop
xchg
or
test
cmp
cli
pop
add
pop
ds
push
sub
mov
arpl
cs
cld
loop,pn
into
or
pop
sti
sub
mov
fisttpl
pop
dec
scas
lea
in
sbb
sub
in
sti
popa
out
push
mov
lods
push
push
jmp
add
in
insl
inc
pop
orl
imul
or
outsb
sbb
stos
bound
ja
or
insl
fldcw
jmp
fmuls
xchg
leave
xchg
mov
and
sub
and
lcall
lea
or
dec
lea
jp
negl
ljmp
insl
cli
pop
lds
loop
int
mov
push
in
and
push
jp
pop
andb
js
inc
push
push
and
sbb
leave
imul
jmp
dec
sub
psrld
cmp
sbb
dec
adc
cs
push
mov
imul
sub
cmp
cs
jnp
lds
into
fimuls
fisubrs
dec
popl
adc
bt
dec
and
and
mov
imul
aad
or
lock
mov
lcall
xor
jle
dec
inc
push
mov
outsb
xchg
lods
sub
rorb
fwait
jp
mov
fwait
shll
and
out
subb
scas
cmp
push
aas
in
call
inc
insl
pop
std
icebp
xchg
mov
sub
sbb
lret
lods
inc
xchg
lret
in
movsl
lods
lds
push
jp
ss
push
in
mov
insb
call
mov
lcall
pop
movsb
xchg
inc
imul
lahf
repnz
mov
jp
add
jne
loop
pop
scas
mov
or
add
cld
mov
lods
ds
add
push
outsb
imul
dec
sbb
or
stc
mov
pop
gs
mov
movsl
dec
dec
ljmp
in
movl
sbb
pop
lea
imul
pop
in
push
imul
loopne
jge
das
mov
and
out
mov
int3
or
jl
dec
add
xchg
mov
sbb
push
sub
inc
call
sbb
nop
enter
out
cmc
and
shlb
das
fidivrs
lret
out
xchg
mov
movsl
push
or
insb
cmp
mov
sbbb
mov
and
dec
stos
shrb
pop
clc
sub
lcall
dec
mov
loop
lcall
into
push
mov
jp
dec
popf
push
mov
pop
test
ds
fldpi
push
sub
ret
or
out
push
bound
push
pop
out
jecxz
sub
jmp
sub
xchg
clc
stos
daa
push
lods
push
rorb
mov
mov
cmp
mov
jne
clc
fnstcw
outsb
movsb
cmp
scas
push
mov
test
mov
adc
add
mov
out
sbb
mov
or
insl
mov
dec
cld
pop
movsb
inc
push
jmp
andb
jecxz
loope
mov
mov
xor
mov
sub
push
loope
adc
mov
cmp
sub
sbb
test
cld
pop
mov
mov
mov
xor
lds
inc
cmp
faddl
pop
in
sub
cmp
into
sbb
push
ds
callw
add
push
call
ljmp
loop
repnz
lods
fsubs
dec
sbb
loopne
cmc
pop
push
stos
out
and
jg
les
dec
fcomps
push
inc
mov
or
aad
ja
or
into
popf
jno
and
jmp
and
int
and
pop
rcrl
rcl
es
dec
stos
bound
out
mov
scas
push
cmpsl
rorl
aas
add
imul
cmpsb
es
jae
test
xor
jge
imul
and
jae
mov
int
or
or
pusha
jl
dec
movsb
addr16
ret
das
dec
imul
sub
fwait
pusha
fmuls
mov
inc
fistl
dec
test
jp
mov
jl
mov
dec
stos
fs
inc
cwtl
jecxz
loope
sub
mov
and
xlat
imul
stos
mov
mov
arpl
pusha
and
mov
sub
lds
sub
and
and
out
mov
outsb
jae
mulb
push
in
mov
hlt
or
push
ficompl
hlt
pop
sub
cmp
inc
mov
es
rcr
xchg
mov
and
cwtl
sbb
mov
dec
sub
gs
and
sbb
cli
test
jl
pop
in
push
and
arpl
int3
in
pop
aas
sbb
and
dec
leave
das
les
mov
psrad
outsb
movsb
inc
fst
dec
xchg
lea
out
insl
test
jle
fiadds
sbb
inc
das
and
xchg
in
or
pop
cmp
fstpt
lods
scas
cmp
aas
mov
lods
adc
inc
mov
jmp
jbe
pop
loop
sbb
cld
pop
mov
in
fistps
leave
xor
stos
add
cmp
sub
cld
sub
mov
sti
out
lea
in
pop
jmp
xor
je
mov
stos
stos
or
popa
push
popa
ss
stos
test
in
repz
std
fistl
cmp
ds
out
mov
cmp
mov
dec
in
or
inc
push
cld
gs
add
sbb
or
mov
push
imul
xchg
or
mov
mov
pop
ret
imull
jecxz
sub
pushf
or
cli
repnz
adc
sub
roll
or
inc
fstl
int3
mov
dec
sbb
in
push
dec
mov
jae
sub
push
int
adc
jle
add
jmp
mov
inc
dec
daa
jae
lods
dec
xor
mov
test
push
and
bound
enter
fmulp
or
sub
xor
xor
mov
and
ds
jp
repnz
rorb
inc
sub
lret
ret
ja
sbb
push
pop
sbb
out
pop
pop
mov
pop
jnp
inc
add
sbb
dec
dec
cmp
add
jmp
dec
mov
or
push
imul
mov
push
jae
fwait
and
jecxz
call
fidivrs
mov
jecxz
push
cld
stos
and
insl
out
push
popa
cs
cmc
pop
loope
dec
imul
call
es
mov
jp
and
mov
outsb
sbb
jl
push
lods
es
pop
loop
mov
scas
out
mov
test
idiv
ljmp
nop
push
in
hlt
mov
jno
cld
pop
movsb
test
lock
mov
lods
stos
clc
out
ljmp
insb
mov
ss
mov
or
push
in
jl
enter
ret
dec
sub
push
test
push
mov
test
in
sahf
jnp
cmp
xor
loope
outsb
xor
lock
loope
inc
popa
into
push
stos
sti
aam
jbe
sbb
stos
lods
push
mov
test
mov
push
scas
ss
dec
imul
aas
mov
imul
lods
repz
mov
add
scas
sub
jmp
pop
push
pop
xchg
xor
leave
mov
fldt
out
or
ljmp
xor
je
aaa
lock
test
movsl
add
jl
repz
sub
in
lret
and
push
mov
push
out
ret
addr16
das
inc
test
xchg
clc
add
subl
or
jbe
pop
push
sub
dec
jmp
shrl
lea
js
addl
std
outsb
mov
aaa
xchg
push
lods
iret
das
mov
shlb
cmc
xchg
hlt
jmp
out
in
jmp
aaa
and
push
or
ljmp
jmp
push
mov
fcomip
insl
mov
push
js
bnd
lods
mov
sub
jb
dec
sahf
inc
push
xchg
std
jp
xor
sub
xchg
sbb
dec
ffree
insb
sbb
cld
push
sbbl
push
xchg
pushf
out
sub
mov
xchg
sbb
and
mov
into
int3
fwait
pushf
push
push
mov
ljmp
fimuls
and
out
mov
dec
sbbl
loope
lods
mov
fwait
cmp
push
dec
add
adc
push
aas
add
adc
push
das
add
adc
push
pop
add
adc
push
in
adc
lods
push
incb
out
pop
imul
mulb
jno
push
ret
lods
push
lock
cmp
lret
andl
rcr
mov
pop
stos
in
sahf
mov
das
mov
xchg
cld
lods
test
xchg
cmp
loopne
pop
test
sbb
rcrl
pop
dec
xor
sti
and
mov
push
sbb
mov
lret
jne
pushf
and
daa
cmpsl
push
sub
pop
push
fdivs
mov
in
dec
frstor
aaa
push
daa
imul
lret
stos
sahf
scas
dec
jnp
ror
sbb
inc
xor
pop
jae
pop
into
push
and
int3
inc
sbb
sub
xor
outsb
pop
push
fs
pop
cli
push
cmpb
sbb
push
xchg
lahf
jge
pop
cmovp
into
popf
adc
xor
sbb
cld
mov
cmp
xchg
mov
outsb
xor
jmp
mov
pop
mov
sbb
jmp
imul
and
lret
or
dec
sti
dec
in
mov
out
or
loope
sub
stos
js
sub
in
mov
mov
xchg
dec
rcrb
es
jecxz
lret
pop
into
in
out
mov
pushf
push
and
leave
mov
lods
inc
popf
loope
lcall
adc
and
add
sub
cmp
mov
or
pop
or
jmp
cld
popa
and
and
int
xchg
sbb
nop
into
fildll
push
out
adc
mov
push
dec
mov
sti
and
fdivrs
pop
pusha
inc
jl
pop
sub
das
add
lret
call
mov
and
fmuls
pop
fwait
pushf
call
ds
mov
lret
in
sarb
cmovae
sahf
fsin
out
mov
cmp
jmp
insl
jmp
cmp
in
cmpb
into
pop
out
mov
add
rorl
push
mov
push
popa
mov
ds
je
enter
sub
xchg
sbb
dec
mov
dec
outsl
out
pop
and
and
in
mov
adc
pusha
push
aas
enter
adc
lods
ljmp
sub
dec
inc
lock
add
test
dec
rolb
sub
frstor
mov
sub
cmpsl
adc
call
sbb
ljmp
and
add
lock
cmp
out
push
push
or
out
aaa
mov
out
jle
and
cmp
jo
js
cmpsl
pop
hlt
fsubl
imul
add
pop
mov
arpl
ljmp
imul
test
stos
loopne
pop
subb
jb
inc
jmp
nopl
imull
pop
pop
leave
pop
sbb
stc
and
out
cmc
and
sub
jle
xor
cmp
ljmp
or
pop
sub
test
inc
inc
xchg
test
and
sbb
pop
ret
aas
loopne
xor
int3
cmp
dec
pop
insb
jg
xchg
and
jns
adc
leave
scas
push
out
and
repnz
loopne
mov
repnz
jl
sub
js
ljmp
xchg
dec
sub
or
jno
pop
loopne
insl
inc
cmpsb
pop
sbbl
inc
or
lret
and
test
test
fmuls
sbb
cli
dec
shl
inc
sub
jmp
sub
out
insb
pushf
inc
mov
xor
cmpsb
push
adc
sub
inc
sbb
add
das
ds
and
jp
and
push
mov
test
cld
sub
lahf
mov
dec
xor
dec
inc
inc
cltd
push
in
rcrl
in
popa
and
iret
and
leave
in
aad
mov
adc
xchg
sbb
fnstsw
out
push
push
cmpl
int
cmp
pop
rolb
or
inc
imul
sub
cli
pop
ds
leave
lcall
je
neg
ljmp
pop
iret
and
cmp
ret
push
popl
pop
int
movsb
jecxz
imul
or
or
pop
insb
hlt
dec
jmp
mov
popa
je
jno
pop
adc
cs
push
scas
sbb
xchg
or
sub
mov
nop
pop
mov
pop
sbb
and
cli
jmp
lods
xor
outsb
lods
jmp
sbb
xor
mov
aaa
xchg
mov
imul
outsb
lds
cmp
sub
mov
or
lds
mov
sub
dec
xor
popf
cmp
xchg
push
call
xchg
jb
fidivs
inc
sbb
jne
mov
dec
outsb
nop
call
sub
mov
mov
sub
leave
scas
inc
fwait
xchg
push
jl
in
fcmovu
sub
dec
mov
mov
cmpsb
pop
scas
push
dec
call
pop
and
mov
sbb
xor
test
dec
lahf
movsl
int3
pop
mov
mov
jmp
outsb
dec
gs
scas
cltd
cmc
sub
shl
shlb
mov
das
gs
je
adc
das
movsl
loopne
lret
mov
notb
test
cmc
pop
fcmovnu
out
ds
dec
out
gs
mov
push
sbb
repz
call
mov
mov
push
ret
dec
out
movsb
pop
mov
scas
test
or
dec
push
out
push
ljmp
shrb
je
sub
jmp
mov
sahf
das
in
jmp
ss
pop
inc
lahf
fstpl
enter
dec
sbb
insl
movsl
cmp
dec
jns
jo
xlat
push
jge
call
push
movsb
in
dec
ds
imul
cmc
adc
ret
stos
mov
mov
add
leave
push
js
add
cmp
sbb
sarl
jnp
inc
jno
pop
push
sbb
xchg
daa
xchg
shlb
leave
adcb
push
enter
jmp
push
cmpsl
sub
or
mov
test
or
mov
add
pop
outsb
cli
jg
movsb
push
mov
lea
test
fistps
mov
fcomps
imul
xor
push
pop
sarb
pop
test
jl
shrl
imul
pop
xchg
sub
sub
dec
jmp
sub
push
test
push
sub
pop
loop
adc
mov
roll
fistpl
sub
cmpsb
adc
loopne
testb
clc
aas
mov
and
xchg
adc
sub
add
test
in
aam
xlat
fwait
jo
neg
movsl
or
test
xchg
imul
mov
rcrl
xchg
cld
jp
and
pop
lods
cmc
out
pop
inc
pusha
out
decb
insl
jmp
out
mov
outsb
iret
mov
jae
imul
in
and
popf
rcrb
and
in
daa
imul
or
or
int
cld
xchg
ficomps
cmp
in
mov
cltd
push
fmull
or
out
mov
pusha
lds
push
scas
xor
pop
sti
xor
mov
ljmp
fiadds
loopne
popf
mov
int3
cmp
mov
les
int3
sub
je,pt
dec
xor
cmp
fisttps
cmpsb
sahf
dec
in
push
imul
or
jp
cmp
arpl
int3
pop
mov
outsb
add
jmp
cld
and
daa
idiv
insb
add
in
add
sub
add
sub
cmp
inc
dec
sub
jb
sbb
fmull
mov
push
fmull
jl
sbbl
aam
lcall
dec
out
mov
jmp
sub
ss
stos
ja
pop
pop
pop
cld
sahf
test
int3
push
mov
xlat
and
cltd
pop
inc
loopne
inc
stos
add
fucomi
lret
lea
jnp
xchg
inc
out
jg
jge
loopne
mov
fcoml
scas
mov
lods
adc
push
int
arpl
out
cmp
iret
dec
test
jmp
jl
sbb
cwtl
inc
xor
sbb
hlt
and
outsb
pop
je
push
dec
sarb
mov
cld
sub
insl
sub
and
imul
or
mov
and
and
sbb
cmp
cmp
orb
xor
dec
insl
lret
imul
outsb
xchg
mov
jle
out
fcmove
sub
loop
and
out
sbb
pop
xchg
sub
jge
aam
xlat
dec
fnsave
es
mov
xchg
pop
fwait
testb
xchg
push
fsubrl
or
inc
push
pop
je
xchg
push
test
imul
jb
and
push
adc
daa
xchg
lea
add
sub
jo
adc
add
sub
inc
jecxz
mov
outsb
sub
pop
cli
sub
sub
mov
aad
cmpsl
fwait
pop
push
lods
jp
xor
lea
outsl
mov
loope
adc
cmpsl
mov
aam
sub
pop
in
loopne
out
push
sub
in
sub
lods
push
jbe
mov
inc
mov
pushf
outsb
std
mov
or
daa
in
into
test
mov
and
test
sub
popa
out
adc
cs
lea
aam
lcall
mov
cld
das
push
lret
cltd
mov
ret
sub
cs
pop
sub
outsb
call
xor
inc
out
push
sub
js
stos
push
in
ljmp
int3
shrb
fcmove
sub
pminsw
mov
cmpsb
in
xor
sbb
pop
call
sub
push
jl
sbb
jl
mov
sarl
out
dec
sbb
jbe
into
dec
and
test
mov
fmulp
mov
jo
and
mov
jnp
pusha
dec
das
cltd
insl
sbb
cli
movsl
and
mov
adc
sti
inc
mov
test
ljmp
jmp
mov
mov
add
pop
pusha
jl
dec
mov
dec
sbb
pop
aas
pop
sub
sub
loopne
xchg
inc
mov
cmovle
sahf
test
repz
out
xlat
adc
pop
cld
stos
loopne
and
adc
jns
aaa
lods
add
add
and
leave
movsl
gs
jl
xchg
mov
push
pop
wbinvd
fsubl
dec
mov
iret
fisubs
out
insl
inc
rol
lods
dec
das
dec
or
das
dec
loopne
out
cmp
sub
pop
jo
mov
fisttpll
jmp
cld
sbb
fstpl
push
dec
ret
xchg
xor
into
xor
fistps
pop
arpl
dec
popa
fwait
push
addr16
pop
addl
and
jle
sub
lahf
jae
ljmp
cmp
mov
jno,pt
gs
cmpsb
pop
imul
gs
sub
dec
test
ljmp
lods
int3
xor
sub
jno
or
pop
repz
sub
jp
cwtl
sub
sub
daa
imul
mov
fwait
mov
jmp
inc
in
mov
cmp
out
movsb
add
in
or
test
das
ss
in
sub
ljmp
cmp
cwtl
sarl
lea
sub
bound
das
daa
jecxz
inc
mov
sub
pushf
mov
pop
pop
movsl
popa
outsb
punpckldq
fisubl
pop
jle
jmp
xchg
mov
leave
js
aaa
xor
lcall
push
aas
jmp
push
mov
fsubrl
or
test
xchg
sub
and
push
and
fsubrp
xchg
sbb
mov
insl
sbb
mov
pushf
xchg
pop
lods
or
mov
adc
ljmp
into
ss
mov
mov
mov
xchg
push
lea
mov
out
lea
xlat
push
lods
mov
movsb
push
cs
movsl
or
repz
push
push
test
call
mov
sahf
or
jmp
jmp
dec
mov
or
pop
cli
daa
pop
jge
inc
adc
sbb
sub
dec
sub
stos
out
cld
or
stos
adc
bound
mov
adc
pop
mov
int3
cmpsb
sub
or
mov
aaa
jl
jns
jecxz
push
sub
lods
adc
push
pop
popa
xor
mov
int
inc
mov
dec
mov
xchg
lea
lcall
mov
dec
lahf
inc
ja
jmp
lods
mov
lcall
shll
jne
loopne
fsubr
xchg
js
aam
cmp
and
xor
inc
mov
fwait
jmp
jl
and
sub
sub
lods
jmp
add
sbb
sub
movsl
gs
insl
movsb
in
pop
push
dec
mov
add
jg
xchg
bnd
sub
sbb
jl
jno
lret
in
cmp
insl
insl
lock
lods
cmpsb
inc
xchg
lcall
jle
into
dec
pop
scas
pop
mov
sbb
fldcw
pop
movsl
fstl
add
pop
orl
mov
or
test
scas
pushf
add
jae
lds
vunpcklpd
pop
mov
sub
dec
mov
dec
in
fisubrs
push
in
pushf
cmp
out
xchg
adc
icebp
mov
test
data16
inc
mov
sbb
add
mov
mov
into
and
pop
jl
jle
cwtl
roll
xchg
in
sub
mov
jmp
mov
lods
cltd
cmpsl
das
aaa
lret
dec
stos
cwtl
int3
inc
mov
out
mov
mov
sub
mov
mov
jmp
mov
insl
outsb
xlat
or
cs
mov
out
cmp
sub
imul
in
jmp
out
outsb
cs
push
lods
cmc
jecxz
cmp
or
insl
loop
sub
test
mov
outsb
int
mov
push
mov
gs
mov
cmp
mov
mov
lahf
push
push
push
cmc
sub
test
cwtl
loope
lods
mov
fisubrs
push
xchg
bound
xor
fisubrs
dec
pop
or
and
mov
push
jp
jne
nop
dec
push
outsb
cmc
cmp
das
and
dec
cmpsl
imul
push
cmp
fisubrs
pop
sub
scas
jle
sub
mov
and
subb
je
mov
out
mov
cs
cs
adc
dec
cmpsb
pop
xchg
push
aad
insl
inc
stos
sub
cld
outsb
pop
jecxz
addr16
jbe
mul
push
vcvtdq2pd
or
inc
dec
pop
enter
jle
movsl
mov
push
push
and
fsts
int
std
mul
mov
fxch
mov
icebp
cli
sub
lods
jns
or
in
test
lods
dec
jae
cwtl
hlt
or
lea
pop
or
push
sub
push
addr16
cld
sbb
cmc
pop
xchg
xchg
push
into
sub
or
lods
insl
lods
aam
push
mov
cld
out
lock
cwtl
sub
mov
loopne
out
setle
outsb
or
inc
add
mov
xchg
ja
or
mov
inc
sahf
dec
push
mov
mov
pushf
pop
xchg
xchg
push
lods
fsubrl
test
mov
ljmp
and
es
sub
sbb
push
movsl
xor
and
fiadds
pop
lods
jne
ror
lcall
pop
gs
ljmp
push
add
imul
roll
or
loop
sub
and
or
add
adc
pop
imull
cmp
inc
pop
xchg
inc
xlat
pop
out
dec
test
or
push
inc
mov
sub
cmpsl
insl
lret
or
cmp
cmp
das
push
lret
sub
fsubrs
pop
into
fldl2e
mov
or
inc
or
leave
jl
loop
mov
lock
push
inc
and
mov
add
rcrb
insl
xor
test
or
insl
pushw
lcall
dec
cmp
pop
stos
lahf
jl
iret
dec
lahf
int3
outsb
jle
dec
lock
add
cmp
dec
sbb
jle
std
nopl
cwtl
dec
outsb
sub
lock
ds
in
pop
mov
subb
stos
add
and
das
xchg
dec
out
sub
inc
ja
outsl
jno
cwtl
es
out
loop
cmc
stos
xchg
and
xor
mov
and
lods
mov
jl
pop
nop
aas
dec
imul
cmp
sbb
sahf
mul
dec
or
testl
cld
sub
cmpsb
inc
lods
sbb
das
aas
mov
cmp
inc
xchg
das
xchg
inc
jbe
outsb
out
push
push
inc
jle
outsb
es
push
push
push
jle
cmc
outsb
in
das
mov
xchg
call
mov
jmp
es
or
push
loop
sbb
sub
jecxz
aam
jb
mov
mov
dec
loop
cmpl
and
scas
cmp
push
test
jnp
adc
mov
pop
dec
sbb
scas
dec
fldt
cmpsb
call
loop
dec
sub
jle
fs
xchg
xor
std
ljmp
jmp
inc
mov
sub
repnz
cmc
imul
lods
push
inc
test
stos
mov
mov
dec
sub
nop
pop
cld
dec
pop
jp
insb
into
fnstsw
insl
jmp
js
lahf
loop
shrl
inc
sub
dec
or
dec
test
aas
fwait
cmp
mov
xchg
cvtps2pd
adc
sub
aas
call
dec
scas
push
adc
jg
imul
mov
cmp
out
sub
jmp
sub
fbld
les
push
std
inc
out
fnstsw
dec
int3
pop
sahf
data16
in
pop
dec
inc
pop
into
out
sub
adc
pushf
pop
dec
mov
inc
mov
or
int
sti
scas
pop
pop
sub
dec
ljmp
jge,pn
jg
scas
imul
mov
das
mov
inc
jno
int3
add
xchg
cmp
sub
mov
loopne
mov
mov
push
cmp
scas
ljmp
sub
rcrb
dec
lods
cld
movsb
push
adc
testl
mov
sub
int3
stc
cld
dec
push
mov
jl
push
mov
xor
add
pop
into
aad
sub
or
jo
stos
cmp
sbb
jno
loopne
shll
int3
lock
mov
ljmp
lock
sub
mov
scas
das
scas
sub
adc
out
push
lods
sub
test
stos
lods
sarl
jnp
push
out
in
mov
jge
lret
frstor
movsb
fldcw
inc
sub
jg
in
sub
jge
stos
or
leave
subb
pop
aad
jge
dec
jg
fsubrl
jae
loop
xchg
jge
bound
pop
mov
cmpsl
ja
aam
inc
shlb
push
shrb
ss
in
jp
call
sti
add
scas
stos
mov
popf
out
es
insl
outsb
lcall
sub
loopne
pop
ds
sbb
dec
mov
mov
mov
outsb
icebp
push
inc
test
mov
testb
mov
popa
into
jne
cwtl
ret
inc
rorl
lea
pop
inc
sbb
and
enter
sub
fnstcw
push
and
adc
dec
fdivr
pop
in
pop
call
mov
stos
mov
adc
xor
rorl
or
push
push
adc
movsl
adc
insl
jmp
scas
in
xchg
sub
mov
adc
mov
test
sub
xor
lock
xchg
xchg
ljmp
and
cmpsb
insl
in
addr16
cmp
pushf
in
push
pushf
pop
or
jne
test
gs
adc
scas
sub
insl
jns
decl
lret
lods
movsb
je
std
dec
fstps
aad
leave
hlt
movsb
adc
xor
jp
mov
pusha
dec
jbe
test
ficoms
mov
insl
stos
pop
sub
sub
push
sub
dec
mov
loop
lods
paddusw
pushf
outsb
mov
sub
insl
adc
data16
sub
inc
xor
lret
iret
in
int3
jg
xor
dec
cmp
jmp
insb
inc
test
stc
sub
sub
dec
sbb
or
inc
push
imul
dec
test
mov
xor
lods
pop
int
test
scas
push
lods
sub
dec
call
xchg
xchg
je
sbb
mov
lods
lods
shrl
fisubrl
test
test
sub
bnd
fidivs
fstpt
test
push
out
cs
loop
rcrl
int
mov
sbb
icebp
cmp
mov
roll
pop
sub
leave
test
dec
jmp
adc
and
pushf
and
jno
leave
add
imul
cmp
mov
push
js
jg
dec
sub
jnp
sub
shl
mov
mov
sbbl
or
out
ljmp
fistl
sbb
pop
sub
push
cmp
insw
out
sub
sub
repnz
sub
sarb
mov
test
push
or
pop
dec
test
push
stos
repnz
ds
inc
cli
mov
sub
insb
std
sbb
cmpsb
cli
ljmp
call
iret
pop
out
jae
inc
push
bswap
fiaddl
pushf
int3
add
shll
inc
mov
dec
in
sti
je
and
and
into
fnstcw
dec
loopne
int3
jns
in
mov
xchg
adcb
leave
cltd
dec
mov
sub
push
out
roll
int
xchg
mov
add
dec
fwait
repnz
mov
outsb
lret
push
aad
scas
sub
das
or
pop
stos
cmc
imul
sub
pushf
cmc
mov
inc
dec
or
and
in
imul
mov
out
out
rorl
scas
icebp
test
jns
push
pop
in
cmp
aaa
jp
daa
sbb
lods
imulb
scas
inc
push
jg,pt
ret
add
sbb
sub
jmp
imul
lahf
cmp
sbb
cmp
add
in
push
sub
xor
jo
aas
mov
mov
push
into
sbb
insl
xlat
cli
fwait
mov
dec
je
loop
dec
cmp
lret
pushf
dec
mov
mov
loop
outsb
call
jp
stos
mov
repnz
lea
jne
aam
cwtl
push
mov
sub
cmp
jl
iret
movsb
cltd
rcll
movsl
xor
lods
push
xchg
addr16
in
xor
sub
push
inc
mov
adc
sahf
and
mov
test
call
adc
mov
addr16
add
mov
and
add
or
out
jns
pop
push
pop
lds
std
andb
ja
icebp
jp
movsb
and
jo
das
cmpsl
pop
mov
sub
push
std
jmp
test
sub
jp
test
lods
in
in
scas
or
in
push
addr16
lret
lods
xor
daa
cs
in
sub
out
sub
add
dec
es
in
in
arpl
fndisi(8087
dec
gs
and
cmp
scas
fsubp
dec
frstor
out
add
cli
fs
in
frstor
sub
insl
cmp
dec
sbb
sub
dec
mov
mov
outsb
mov
sub
stos
jge
mov
and
out
mov
arpl
gs
and
push
and
mov
ret
scas
dec
lods
xchg
pop
and
mov
insl
in
adc
and
mov
pop
sub
push
pop
loope
cmp
xchg
push
cmp
nop
sbb
sub
lock
popa
pop
sub
lcall
insl
sub
xlat
jge
fcomps
fisubrs
jg
jb
lret
fdivrs
push
push
loop
and
and
js
div
es
mov
inc
pop
xchg
in
int3
stos
pop
sub
sahf
push
stos
mov
and
call
and
in
popf
pop
insb
and
loope
int
out
add
dec
data16
xchg
mov
rclb
mov
mov
push
or
mov
or
mov
cwtl
sub
mov
ljmp
dec
sub
test
daa
sub
outsl
pop
push
out
loop
hlt
xchg
xlat
stos
mov
mov
adc
jmp
jp
dec
sbb
push
sbb
rcrb
lret
or
fwait
mov
fidivrs
int3
mov
test
xchg
fucomi
pop
jp
shrb
xor
punpckhwd
scas
pop
das
and
mov
and
xor
loop
fidivrs
adc
sbb
mov
cli
das
or
dec
mov
mov
jmp
sbb
and
push
sbb
cld
push
jmp
push
inc
stc
daa
mov
cwtl
lea
jg
dec
outsb
in
inc
push
fucom
xor
sti
das
rcr
dec
inc
push
push
or
pop
xchg
jmp
cmp
sbb
loopne
mov
or
jns
cmp
lock
sub
xor
sbb
mov
pop
test
or
mov
js
mov
mov
jmp
sbb
dec
dec
movsl
cmp
cmpsl
je
or
dec
adc
mov
call
cmpsb
xchg
rorb
stc
clc
and
mov
xchg
das
push
cs
sub
test
pushf
mov
ret
icebp
scas
mov
rcrl
xchg
mov
lods
lret
lret
fnstsw
jmp
mov
cld
lahf
fsubr
push
stc
push
leave
repz
out
adc
push
sub
fsubrl
mov
adc
add
dec
cmpsb
xchg
add
xchg
xchg
xlat
and
loop
dec
fwait
in
hlt
or
sub
cmp
in
pop
add
inc
jl
out
dec
shll
sub
sub
sbb
call
loope
ja,pn
in
fldenv
imul
inc
mov
pop
xchg
and
cmp
cli
insb
ljmp
sbb
mov
les
out
pop
sbb
pop
pop
or
jg
cmp
sbb
xchg
sbb
and
xor
cmpsl
imulb
cmp
cli
inc
imul
divb
push
dec
lcall
and
jl
iret
mov
adc
adc
cmp
push
addr16
push
loope
adc
imul
mov
xchg
sub
fsubrp
mov
sbb
nop
jl
fldl2t
jp
jge
fstp
test
out
push
or
sub
out
aam
fimuls
pop
mov
test
xchg
dec
ret
loope
js
lods
jle
push
pop
pop
push
sti
dec
mov
pop
sbb
in
mov
and
jns,pt
adc
mov
inc
decb
scas
mov
xchg
jne
out
push
in
sub
sub
in
shlb
or
and
ds
xchg
leave
js
frstor
in
aad
pop
mov
adc
stos
jns
pop
mov
jno
iret
lds
push
in
rorb
in
adc
jns
mov
jb
dec
sbb
xchg
lahf
jns
and
es
sahf
mov
jle
jge
pop
cmp
jl
out
cmpsl
cs
fldcw
adc
mov
test
sbb
enter
dec
data16
jg
xlat
jecxz
popf
mov
lods
sub
and
inc
mov
jl
and
rorb
push
sub
inc
les
mov
icebp
cwtl
fldt
jnp
push
sahf
test
mov
inc
test
mov
sahf
test
out
adc
lret
mov
sub
mov
ljmp
test
pop
movsb
inc
lods
xchg
inc
cli
push
xchg
jbe
outsb
out
sahf
jnp
out
sub
inc
jl
adc
frstor
pop
sub
rcrb
imul
cmp
fldcw
adc
ljmp
stos
pushf
sub
jae
repnz
mov
push
push
out
out
in
out
jae
push
push
aad
ja
and
repz
ja
adc
sub
movsl
outsb
sbb
aas
imul
stos
mov
jle
popw
insl
dec
cmp
mov
fstps
outsb
leave
jo
out
xor
std
ficoml
adc
cmc
loop
sub
mov
cwtl
mov
push
sub
jl
xor
rclb
dec
xchg
mov
add
iret
lret
push
sub
int3
loopne
nop
mov
scas
jle
mov
call
in
cmp
aaa
adc
in
out
es
pop
cmp
cmp
dec
std
jg
imul
jle
imulb
push
out
sub
adc
push
in
shrb
lods
ds
add
ss
daa
xchg
and
inc
sbb
jg
mov
jmp
sbb
scas
outsb
jae
scas
jl
ja
leave
dec
pop
aas
out
lods
jle
mov
sub
dec
push
or
popa
jecxz
stos
add
lds
pmulhuw
insb
push
aaa
in
add
imul
sbb
out
mov
scas
mov
lock
enter
lods
sbb
fadds
imul
mov
pop
icebp
insl
loopne
jbe
repz
das
cmp
xor
sbb
dec
mov
test
sub
jmp
inc
orl
std
pop
xchg
xor
shrl
mov
xchg
test
sub
pushf
xchg
cwtl
lret
add
stos
lods
andl
aad
dec
sub
mov
bound
loop
fcomi
dec
mov
jmp
adc
mov
dec
add
fmul
sbb
xchg
rcrl
ss
out
test
and
repz
jmp
mov
mov
mov
sbb
das
test
loop
cmc
pusha
adc
push
movsb
xchg
pop
dec
push
dec
dec
push
loopne
pushf
pop
lret
movsb
ljmp
and
lahf
cs
sub
insb
rcrb
xchg
outsb
sub
rolb
or
test
ljmp
mov
jecxz
imul
xchg
jge
jmp
andb
fucompp
sbb
sub
cmc
cmc
out
sub
nop
fdivl
mov
in
test
mov
push
and
fnstsw
loope
jl
in
enter
movsl
fbld
cli
jmp
test
pop
repz
gs
movsb
rorl
imul
jg
movsb
and
jo
cs
dec
shl
insl
mov
outsb
out
insb
pop
gs
inc
or
jp
lret
xorl
icebp
xchg
ds
pop
push
cs
loop
xor
adc
pop
call
mov
cmpsb
stos
loopne
scas
cmp
je
sub
and
subl
das
push
enter
jnp
jbe
sub
mov
add
imul
inc
mov
mov
movsl
jmp
and
cmpsb
adc
lods
or
imul
dec
mov
fistpll
lret
int3
lcall
mov
xchg
cmp
shr
lods
lcall
arpl
cld
into
cmp
jae
ja
cmp
mov
dec
ds
fmull
mov
mov
xlat
jl
scas
inc
sub
pop
cmc
add
and
and
cmp
testl
cli
sub
mov
pop
in
lret
out
lea
daa
rcrl
aaa
xchg
sub
ds
push
cmp
or
into
sub
scas
arpl
and
dec
loope
addr16
cmpsl
inc
jmp
mov
cltd
test
lret
inc
jl
ds
mov
xchg
cmpl
sbb
dec
sbb
push
dec
bound
push
lret
adc
mov
mov
adc
outsl
lret
xor
push
mov
test
test
rorl
jo
inc
lea
rol
push
repz
es
inc
sub
sub
das
jns
les
and
xchg
in
push
lods
loopne
mov
jecxz
out
je
jae
lret
push
fstps
mov
stc
push
jno
in
push
xchg
lret
mov
addl
pop
fsubl
les
jle
xchg
pop
lret
dec
and
stc
test
inc
ja,pt
xor
mov
and
jl,pn
rorb
pop
js
pop
cltd
dec
mov
cs
mov
into
sub
shl
push
aas
mov
mov
std
lods
mov
jge
loope
and
pop
inc
je
inc
cs
xor
sub
push
mov
nop
int3
mov
lret
sub
pop
inc
cld
cmp
cs
sbb
sub
insl
mov
shr
mov
imul
dec
jnp
add
dec
mov
shll
outsb
xchg
scas
lods
push
pop
cmp
adc
cld
sbb
out
and
test
dec
es
loop
imul
cmp
dec
imul
xor
xor
lods
add
xor
stos
mov
push
inc
add
or
mov
stc
push
pushf
cmp
sbbl
jle
mov
mov
lahf
mov
dec
aam
sub
pop
adc
push
mov
data16
xor
jmp
popa
and
jae
outsb
jmp
mov
movsb
out
and
fisubrs
cmpb
sub
lret
dec
and
or
dec
lret
cmp
push
lret
stos
mov
pop
lods
leave
push
xor
shll
push
mov
and
mov
repnz
or
in
imul
inc
icebp
in
clc
push
lcall
addr16
pop
xchg
lret
jno
push
jo
scas
in
mov
add
loopne
xor
shrb
jb
stc
pop
sub
push
sub
mov
hlt
test
repnz
mov
xchg
mov
lods
lea
push
out
idiv
jo
in
lock
rolb
push
mov
pop
push
pop
in
clc
jl
sub
stos
or
sub
inc
andl
mov
stc
popf
ljmp
rcl
outsb
push
sub
add
jne
fldt
dec
jns
mov
mov
inc
inc
sbb
sub
pusha
jp
shl
mov
imul
nop
xor
and
sub
lret
xchg
arpl
mov
jno
loope
in
lods
addr16
loopne
movsb
loope
dec
mov
pop
sbb
outsb
mov
stc
lret
sub
push
iret
sti
cmp
movsl
mov
pop
mov
xchg
scas
xor
pop
and
fidivrs
leave
xor
imul
addr16
data16
lcall
mov
clc
data16
test
das
push
addr16
repnz
jp
lahf
jp
mov
push
mov
cltd
dec
mov
jb
ss
mov
and
popf
cmc
jmp
sub
movsb
pop
pop
dec
jl
or
dec
shl
xchg
mov
push
lret
cmp
xchg
xchg
or
or
or
sub
or
into
leave
aas
pop
out
pop
shrl
xchg
in
movsl
xor
in
aas
xchg
outsb
pop
shll
std
lcall
sub
test
mov
jno
movsl
test
insl
ljmp
mov
lret
pop
mov
popa
jecxz
fsubp
push
daa
dec
sub
inc
fimuls
mov
xor
sub
mov
mov
inc
decl
jmp
fldpi
into
inc
jmp
call
xchg
jl
and
lea
mov
sbbb
cwtl
xlat
mov
or
cli
std
test
pushf
aad
fadds
fildl
sub
lcall
jecxz
push
lods
inc
stos
mov
or
insl
push
dec
lcall
repz
scas
cld
adc
movsl
mov
cmp
data16
leave
pop
push
pop
and
add
leave
dec
iret
pushf
cs
or
ljmp
inc
stos
push
mov
js
cs
in
int3
movsl
das
notb
mov
popf
outsb
scas
inc
aaa
ficompl
inc
sbb
sbb
loope
repz
stc
cmpsl
or
xor
sub
out
int3
mov
cmc
jnp
scas
and
fstl
int3
repnz
loop
sub
and
das
mov
insb
cs
into
clc
adc
mov
mov
clc
imull
scas
pop
test
mov
or
pop
or
outsb
push
push
sub
shr
lods
test
decl
addr16
aad
lods
and
sbb
or
pop
movsb
jmp
call
ss
or
pop
lcall
dec
pop
mov
ljmp
and
out
les
lahf
test
lret
movsb
push
lods
popa
imul
imul
mov
sar
scas
and
cld
leave
and
and
lret
mov
outsb
sbbl
iret
test
ljmp
cld
cmp
lret
ds
adc
stos
mov
pop
and
mov
or
lock
and
popf
daa
dec
jle
imul
push
cwtl
into
loop
and
out
fcomip
and
into
mov
scas
pop
jnp
lods
mov
jb
push
jmp
cmpsl
xchg
aad
pop
dec
adc
or
clc
ret
and
loop
jmp
or
and
or
xor
mov
sub
lret
stos
add
loope
sub
mov
inc
inc
fucomi
addr16
inc
in
mov
add
bound
mov
out
shl
or
cs
cli
pop
mov
test
fidivrs
and
sub
xor
fidivs
jns
adc
inc
les
xchg
bound
mov
add
std
fwait
test
rolb
push
cmp
sub
push
inc
sub
cmp
sbb
cmpsl
ljmp
shlb
push
test
pop
popa
dec
shll
inc
pop
cmp
jle
add
pop
dec
data16
and
sti
loop
daa
cmpsb
mov
jmp
pinsrw
sub
out
jmp
jl
mov
and
lods
addr16
jns
add
pop
out
xchg
out
in
es
add
add
out
adc
inc
psllw
stc
mov
ss
xor
cmpsl
rorb
stc
ds
lds
sahf
cmp
sub
fnstcw
inc
dec
popf
xchg
pop
add
std
inc
shrl
push
jp
xchg
sub
sub
out
push
dec
jmp
or
cmp
dec
and
mov
int3
jmp
push
adc
and
cwtl
adc
xchg
xchg
int
imul
sub
clc
shlb
shlb
sub
ret
js
cmp
pop
popf
cld
scas
nop
cmp
test
pop
inc
jbe
daa
outsb
push
push
into
xor
cmp
mov
scas
add
adc
mov
ljmp
addr16
adc
mov
xor
mov
call
sub
add
outsb
dec
adc
pop
in
dec
lods
push
cmp
gs
push
sbb
lret
test
adc
push
pop
sub
dec
cmp
inc
xor
mov
imulb
inc
cmpsb
dec
or
pushf
aad
mov
test
ss
rdtsc
ret
dec
push
pop
sub
inc
lock
test
sub
dec
in
insb
loope
mov
sbb
cwtl
cld
nop
in
test
rorb
mov
lods
mov
bsr
mov
les
mov
leave
sbb
mov
lods
pop
mov
fwait
dec
hlt
push
outsb
pushf
aaa
jp
adc
call
aas
xchg
outsb
jl
xlat
pop
cmovne
dec
sub
pop
jl
dec
neg
push
imul
outsb
hlt
bound
jbe
cld
xchg
add
js
icebp
push
loopne
jae
mov
mov
and
sub
xchg
mov
test
pop
push
in
std
sbb
cmpsl
fisubrs
sub
out
push
xor
xor
cltd
mov
stos
add
sub
push
sbb
push
scas
scas
es
outsb
dec
and
loop,pn
scas
cmp
sub
mov
into
shr
scas
jbe,pn
stos
dec
sub
imul
scas
cmp
les
ds
dec
lods
pop
adc
jae
mov
js
xor
push
and
push
pop
and
pop
lods
in
jae
leave
dec
and
add
test
pop
dec
and
sbb
aad
pop
and
in
aas
push
cs
imul
insb
and
inc
sbb
in
insl
add
xor
idivb
movsb
jmp
popa
dec
dec
popf
lea
insl
sub
dec
mov
fcoml
into
pop
mov
pop
outsb
mov
cs
insb
out
pop
sti
into
cld
stos
sub
sbb
or
or
sbb
dec
jns
movsb
push
mov
faddl
repnz
dec
mov
out
clc
sbb
popa
jle
mulb
and
adc
inc
and
pushf
fdivs
add
dec
pop
lahf
inc
std
pushf
add
pop
dec
sub
sbb
xor
or
dec
cmp
dec
in
inc
mov
pop
mov
mov
mov
and
movsl
and
mov
pop
ds
je
sbb
add
cmp
push
aad
cmp
imul
jmp
dec
add
aaa
out
lcall
or
inc
cs
sbb
out
push
test
cld
jle
xchg
incb
or
repz
fistps
push
mov
or
jge
scas
mov
cwtl
popf
sbb
pop
dec
aad
xchg
cmp
mov
lods
aaa
setle
pusha
ret
xchg
cmp
imul
jecxz
sbb
mov
dec
jl
mov
fwait
mov
lods
int3
dec
test
xchg
fcompl
sub
pusha
divl
jle
or
jmp
fstps
adc
ja
repz
nop
into
or
lret
sub
inc
mov
lcall
das
inc
int3
dec
mov
and
push
sub
mov
cs
out
jp
ds
push
push
insl
lahf
xchg
fistl
sbb
inc
inc
or
cld
pop
and
rorb
aas
dec
cld
or
fiadds
sti
shrb
js
outsb
jne
dec
scas
fisubl
pop
mov
dec
outsb
pop
xchg
fisubrl
mov
daa
and
das
mov
orl
insb
outsb
fsubrl
scas
lods
test
sub
jg
sub
lods
mov
sbb
jecxz
inc
negl
cmpsb
dec
dec
pop
push
or
cmp
loop
push
sub
stos
int
sbb
lcall
out
push
cld
mov
call
scas
push
outsb
cmp
pop
inc
push
pop
inc
inc
popf
dec
pop
dec
int
mov
cmp
push
cmp
mov
stc
sbb
out
call
and
lea
shlb
faddp
popa
jno
xchg
sub
mov
jbe
testl
loop
sub
and
sub
fdiv
pop
dec
into
scas
loop
xlat
outsb
jle
and
stos
mov
or
fildll
mov
inc
movd
loopne
fucomp
mov
mov
pop
daa
dec
fisubrs
fmull
scas
xchg
mov
add
shrw
dec
gs
sub
sbb
mov
lret
mov
sub
and
loopne
pop
imul
js
loop
push
das
mov
pop
jmp
jne
mov
test
outsb
addr16
jae
push
imul
into
xor
or
or
push
mov
add
xchg
out
sub
mov
sahf
push
scas
jmp
mov
outsb
xor
mov
movsl
inc
lcall
in
mov
push
js
lcall
inc
push
inc
mov
push
sub
cmp
jecxz
out
xchg
outsb
lret
inc
pop
scas
cltd
mov
xor
lods
dec
xor
sub
mov
testl
and
enter
inc
int
push
das
in
push
or
idivl
in
lahf
or
mov
jae
and
ret
insl
scas
and
es
sti
test
sbb
mov
pop
lods
xor
sub
loop
dec
jmp
popf
je
outsl
push
sub
pop
dec
cld
insl
push
sbb
xchg
in
pop
pop
sub
scas
sub
jo
add
dec
xchg
ljmp
jmp
roll
and
movsl
popf
cld
pop
out
cmp
loope
insb
call
fnclex
cmc
mov
and
call
cld
das
das
pusha
mov
imul
mov
rcrb
sbb
add
test
mov
pushf
rclb
cvtpi2ps
cmp
in
mov
sub
or
pop
pop
mov
mov
lahf
loop
lods
mov
or
in
es
adc
xchg
fdivrl
xchg
add
into
testl
xchg
push
aas
fsubp
das
dec
adc
scas
ficompl
sbb
dec
add
iret
ret
push
mov
jl
sbb
xchg
dec
ficomps
mov
mov
in
fmull
aad
pop
push
pushf
aam
dec
add
stos
clc
sub
jp
inc
mov
ret
mov
or
outsb
test
jno
dec
fiadds
imull
add
rcr
adc
adc
dec
mov
or
call
imul
sub
mov
dec
lcall
pop
cmp
nop
mov
in
dec
sbb
mov
xchg
adc
cmp
fstpl
stos
adc
hlt
lods
popf
scas
scas
pop
daa
cmp
sahf
pop
out
mov
dec
and
movsb
shlb
iret
ret
out
icebp
adc
sbb
in
mov
insl
pop
test
pop
inc
cltd
mov
jb
lret
das
sub
jbe
js
icebp
push
sub
push
dec
mov
lea
pushf
sub
xor
push
xchg
sub
movsb
push
roll
cmp
and
cs
jnp
lods
cld
shl
les
or
mov
gs
and
imul
faddp
or
xor
pushf
sub
fildl
popa
jp
mov
sub
dec
jle
das
loop
or
and
dec
jne
ljmp
pop
inc
lods
jp
sbb
in
int
sbb
cmp
push
sbb
mov
push
in
mov
dec
out
mov
aaa
xchg
add
dec
cmpsl
stos
adc
cld
mov
lcall
jmp
subb
xor
frstor
jl
int
in
lods
dec
adc
pop
sub
mov
jmp
inc
lcall
pop
lret
lods
test
sub
mov
loop
inc
fstl
in
mov
movsl
push
sub
jecxz
ja
hlt
cmpsl
inc
pusha
jnp
pop
sub
jmp
mov
rorb
sub
out
mov
ja
sbb
sub
sbb
icebp
cs
adc
jae
sub
insl
imul
fldcw
daa
fisubrs
and
mov
push
fmul
or
int3
inc
sub
test
jae
jb
test
cmp
jbe
pop
outsb
rcl
movsb
inc
cli
push
sub
and
adc
pop
je
or
outsb
ror
and
sub
sarl
test
and
mov
mov
out
mov
es
jge
ret
xchg
in
ret
add
sub
sub
dec
movsb
scas
mov
imul
test
cli
lods
pop
in
sub
push
push
push
fldcw
cmp
or
cltd
dec
ljmp
adc
sub
sub
and
in
dec
jle
and
sbb
loopne
or
sahf
xchg
cwtl
pushf
push
sub
sub
sbb
scas
cmp
outsb
stos
clc
push
das
mov
pop
cwtl
outsb
ja
pop
scas
loopne
mov
scas
mov
mov
imulb
cwtl
pminub
lahf
pop
cld
dec
in
repz
test
ljmp
daa
sub
out
sbbl
lods
pop
push
mov
dec
cld
in
jmp
bound
cli
xor
loopne
sub
addb
xchg
fisubl
xor
sarl
lods
enter
insb
test
lahf
fsub
jg
cmc
adc
std
imul
jne
inc
dec
sbb
jae
nop
test
lods
and
dec
inc
test
arpl
dec
push
movsl
lds
sbb
mov
jns
add
movsb
and
pop
imul
inc
test
mov
jg
sub
add
push
addr16
test
sub
insb
jne
adc
and
std
and
dec
mov
dec
sub
ficomps
pop
into
scas
popw
sub
sahf
loop
sub
mov
pop
jle
mov
aas
pop
jge
pop
data16
dec
pop
dec
pop
inc
ds
into
out
sub
pop
push
data16
push
pop
dec
xchg
inc
std
frstor
mov
pop
frstor
in
pop
dec
rolb
mov
scas
std
pop
sub
dec
mov
outsb
jmp
sbb
cmp
pop
test
pop
sub
dec
push
outsb
lcall
jecxz
jp
jb
sub
loop
stc
xlat
jae
xlat
xchg
and
dec
mov
and
pop
out
sub
xchg
inc
ja
jg
int3
mov
stos
aas
inc
and
jl
push
pop
jecxz
movsb
mov
dec
xchg
push
xchg
ret
stc
ret
cmpsl
pop
rcr
sbbb
loop
cltd
notl
jmp
pop
idivb
movsb
jle
pop
jno
or
xor
shr
mov
sub
sub
mov
jne
or
dec
outsb
lods
mov
pop
ret
lods
mov
push
jle
or
in
ja
mov
test
outsb
mov
mov
vminpd
cmp
mov
into
jl
scas
sub
sti
sbbb
pop
mov
and
std
and
inc
loopne
gs
out
xchg
dec
pop
push
inc
paddw
mov
dec
scas
aad
or
and
and
and
jl
cwtl
movsl
popf
add
test
sub
inc
xchg
mov
cmpsb
imul
je
sbb
or
push
es
imul
mov
dec
mov
add
xchg
insl
sbb
add
loopne
push
lods
scas
sub
dec
adc
and
cmpsl
and
out
fldl
mov
cmp
xchg
cmp
mov
test
dec
inc
inc
push
inc
outsb
imul
call
cmp
cmp
out
dec
xchg
inc
cmp
pop
dec
mov
sarb
and
outsl
sub
jle
sbb
das
call
ds
popa
sbbb
lea
iret
leave
push
jl
jmp
and
sbb
lods
sarb
daa
mov
scas
out
das
pop
and
ret
lock
or
int3
lahf
jne
int
push
outsb
pop
dec
pop
push
inc
adc
ss
stos
stos
mov
mov
sbb
es
insb
out
sub
daa
push
lds
mov
ljmp
push
aas
mov
inc
test
inc
test
or
in
ds
out
out
ss
jp
out
and
jecxz
sub
or
cmp
sahf
jnp
pop
stos
faddl
inc
imul
mov
push
imul
insl
aad
sub
add
xchg
pop
sarl
inc
mov
mov
out
or
and
and
test
inc
ljmp
jns
sub
leave
cmp
out
leave
cs
dec
das
pop
push
xchg
push
cld
loop
test
scas
iret
adc
ja
sarb
dec
ljmp
in
sub
int3
cs
aam
dec
pusha
sub
int3
pop
lret
lock
sub
lods
cmp
xor
sbb
jns
imul
popw
les
or
pop
das
popf
xor
repz
lods
pusha
dec
ret
cmpsl
dec
es
fidivrs
dec
call
jae
pushf
data16
in
popa
adc
dec
lods
lret
mov
ja
or
stc
push
je
scas
dec
pop
mov
js
mov
and
pop
rcrl
inc
mov
cmp
js
inc
aad
sbb
lods
jl
popa
into
mov
pop
dec
pop
sub
das
mov
jo
sub
adc
mov
cltd
inc
xor
mov
scas
imul
shrd
aas
sub
scas
and
pop
dec
cs
pop
sbb
cmp
xchg
adc
sub
lods
sub
mov
loop
out
cmp
sbb
jp
sbb
push
push
lret
leave
in
mov
clc
xchg
and
sbb
jne
push
inc
dec
push
push
sbb
push
xorl
fdivr
in
push
cmpsb
cmpsb
loop
call
push
int
cmp
cmp
push
and
int3
push
test
pushf
pop
pop
push
pop
test
mov
mov
loop
push
inc
dec
cmp
dec
cmp
jl
das
clc
std
add
lods
int3
andb
and
test
jecxz
inc
push
outsb
push
pop
and
sbb
sub
cmpsl
sbb
popf
sub
negl
lods
and
mov
fbld
xlat
scas
leave
dec
loop
sub
mov
std
mov
outsb
fnstsw
cmp
jb
jnp
fsubrs
push
pop
dec
out
ret
push
test
lock
or
mov
fists
dec
imulb
dec
das
popf
sub
xor
add
sub
ljmp
lret
test
sti
mov
enter
loopne
inc
testl
inc
hlt
cmpl
stos
mov
adc
mov
in
cld
jne
lds
lock
mov
mov
stos
or
movsb
andl
xor
je
lock
and
outsb
out
jbe
scas
ljmp
fisttpl
xor
in
adc
repz
xchg
cmp
pop
pop
push
out
int3
mov
jg
sbb
sub
das
sub
jns
out
icebp
cmpsl
xchg
push
xor
adc
dec
push
sbb
ljmp
push
add
lods
mov
pop
jmp
test
lret
out
jns
xchg
mov
adc
sbb
insl
or
fsubr
insl
out
mov
pop
mov
xchg
xchg
lods
lret
in
ds
das
imul
stos
push
cs
in
lock
outsb
mov
pop
addr16
movsl
popf
push
test
in
push
out
sarl
adc
and
and
pop
sbb
sub
lods
and
cmc
dec
lret
sub
ss
and
add
ret
sub
imul
cmp
imul
in
int
or
daa
in
iret
mov
mov
mov
sbb
fdivrs
sub
jecxz
clc
int3
sbb
dec
dec
xor
outsb
aas
xor
aaa
test
stos
das
pop
and
fdivrl
dec
mov
dec
sbbl
sahf
xchg
and
jge
adc
sub
stc
sub
jl
mov
dec
test
inc
ds
dec
out
inc
fisubrs
mov
push
mov
into
adc
mov
sub
and
mov
leave
je
fildl
cs
imul
movsl
pop
mov
pop
sub
mov
fsubrs
push
in
xor
out
sbb
dec
in
out
loop
call
sbb
pop
insb
and
out
iret
inc
outsb
push
xor
sete
push
mov
das
sub
outsb
sub
mov
mov
scas
sbb
sub
in
push
ljmp
stc
test
cld
adc
mov
pop
sub
in
add
out
sbb
mov
into
imul
shll
jbe
mov
dec
adc
icebp
mov
in
sub
and
lods
or
mov
jbe
jne
sbb
and
mov
dec
cmp
and
and
adc
sarb
adc
lds
push
ja
test
or
push
inc
lret
inc
push
add
push
jp
in
xchg
inc
dec
movsl
push
mov
push
and
lahf
pop
add
mov
jae
and
pusha
scas
and
ljmp
lock
xchg
notl
xor
mov
sub
sbb
outsl
add
fisubrs
and
es
leave
mov
sub
cmp
adc
lret
in
pop
mov
aas
mov
scas
rorl
fsubp
lea
dec
call
test
fs
adc
cld
or
mov
loop
loopne
sub
sub
ljmp
jl
cli
fistpl
pushf
insl
mov
pop
in
inc
or
sub
sub
fisubl
rcrl
je
rclb
jl
sub
lea
call
out
stos
rorb
mov
ss
sub
das
push
lock
cmpsl
fwait
out
addr16
aas
js
mov
out
adc
js
mov
lods
repz
mov
imul
or
mov
lret
inc
call
lret
addb
mov
mov
outsb
enter
stos
mov
dec
outsb
jnp
ret
outsb
outsb
and
adc
mov
imul
sbb
pop
push
jmp
xor
stos
xchg
fimuls
pop
pusha
dec
lods
cmp
out
in
jo
cmp
jg
out
shr
sub
test
push
mov
shlb
into
imul
cmp
outsb
testb
jle
sub
jl
cs
scas
mov
in
loop
pop
pop
lea
add
mov
cmp
add
out
push
push
jo
xchg
ss
dec
xchg
push
jle
mov
and
rclb
jl
into
scas
aas
dec
call
movsb
or
lret
and
cli
dec
jecxz
pop
jge
ljmp
aad
es
daa
mov
pop
sub
jno
mov
pop
subl
jb
lea
cmp
orb
adcb
dec
in
dec
das
ja
pushfw
xchg
xchg
ljmp
cs
lods
mov
mov
repz
std
mov
lods
test
daa
out
xchg
lea
mov
push
cs
pop
popf
xor
add
outsb
andb
test
test
push
shrb
aad
pushf
add
and
mov
lods
insl
pop
push
xchg
mov
sub
out
and
inc
xchg
lahf
lods
mov
fidivs
ss
push
mov
mov
mov
insl
fldcw
sbb
pop
outsb
aas
and
lods
rcll
outsb
ja
cltd
test
fstpt
imul
fwait
into
mov
sub
sahf
sahf
inc
cmpsb
in
imul
out
and
out
jns
ljmp
scas
pop
fwait
xlat
outsb
or
lods
in
int3
mov
in
test
xchg
mov
mov
mov
sub
test
repnz
add
adc
dec
inc
cmp
fwait
dec
sub
shl
pusha
adc
jg
xchg
outsb
pop
adc
push
or
adc
add
dec
or
inc
pop
cmp
lds
pushf
cwtl
dec
xchg
das
or
pop
pop
mov
xchg
callw
push
lods
pushf
mov
imul
imul
test
sbb
pop
xchg
daa
ss
lcall
inc
pop
dec
pop
pushf
cmp
faddl
and
sub
scas
add
mov
dec
pop
leave
enter
fwait
cmp
lods
pushf
mov
imul
cmc
les
pop
pushf
loop
sub
lret
cmp
cs
pushf
inc
mov
mov
dec
push
pushf
daa
fcomi
stos
sbb
and
mov
mov
push
lock
sub
das
jmp
sti
aam
adc
pop
addl
aas
ret
jb
inc
aam
loopne
xchg
lods
fsubs
sub
sbb
and
push
decl
jg
aam
outsb
das
or
sub
sarl
sbb
test
xor
fucomip
hlt
mov
imul
cltd
out
stos
jb
xor
dec
mov
std
in
dec
test
sub
mov
or
outsb
test
and
lret
out
sub
dec
sub
cld
test
xchg
fadds
insl
sub
insl
call
insl
enter
lods
sub
mov
scas
sbb
adc
dec
daa
cwtl
sub
movl
add
in
mov
pop
sub
xlat
dec
mov
pushf
and
sbb
or
push
mov
and
mov
dec
lahf
mov
cmp
adc
test
fistpl
loop
sub
mov
jl
dec
push
sbb
fistl
mov
inc
adc
stos
inc
or
es
rep
pop
jmp
cs
les
mov
test
ret
stos
out
xchg
test
movsb
xchg
or
xlat
call
sub
je
insb
inc
inc
ljmp
test
lcall
cs
test
and
mov
imulb
xchg
iret
test
and
ret
sub
lock
xor
pop
cmp
mov
and
add
movsb
es
add
loop
jb
push
mov
or
mov
and
sub
std
inc
mov
aam
xlat
idivb
std
fadd
lahf
loopne
ds
add
das
outsb
pop
insl
aas
js
jae
stos
sub
mov
sub
push
pop
push
ja
cltd
comiss
fstpt
ja
dec
das
sub
xchg
daa
pop
stos
test
dec
pop
lods
outsb
lods
inc
fs
pop
scas
jbe
out
sbb
mov
mov
stos
movsb
lret
cld
movsl
ret
int3
sub
int3
data16
out
sbbb
andl
inc
mov
xchg
dec
or
jnp
int3
add
ljmp
mov
int3
lret
ret
mov
push
sbbl
mov
dec
mov
or
push
out
cmc
and
js
adc
xor
ljmp
in
pop
sti
mov
mov
testb
dec
das
out
mov
add
pop
jne
xchg
cs
dec
jmp
jnp
mov
add
scas
dec
outsb
sbb
pop
dec
xchg
sbb
mov
xor
dec
daa
imul
xor
iret
fsubl
fistl
cmp
ss
lsl
mov
jns
pop
aas
push
and
xlat
pop
popf
mov
ljmp
sbb
shrl
movsb
nop
mov
and
test
test
jns
imul
movsl
fisubrs
push
lods
push
das
push
jbe
sbb
push
sbb
aas
enter
mov
movsl
inc
ret
jg
rorb
xor
cmpsl
sub
pop
push
in
push
lods
jle
dec
repnz
std
into
enter
aam
incl
stos
fcoml
int
push
push
sub
fisubrl
sub
cmp
pop
decb
mov
add
lret
aad
int3
pop
int3
lcall
imulb
mov
mov
sbb
fwait
mov
ja
out
sub
clc
out
cltd
sub
mov
cmp
pop
mov
dec
cmpl
int3
xor
adc
cs
lock
aas
mov
fsubr
sub
ljmp
inc
jp
into
jnp
pop
mov
jnp
into
cmp
ds
shll
sub
dec
or
stos
and
addb
das
inc
je
jmp
lods
shrl
aad
orl
imul
mov
lret
sbb
pop
stos
cmp
and
mov
mov
mov
mulb
shrl
jmp
mov
dec
aas
rorb
push
push
xchg
dec
pop
or
jle
andb
mov
fisubs
xchg
scas
mov
pop
dec
dec
insb
popfw
jl
sti
icebp
aad
daa
inc
out
lods
sub
out
mov
stos
jle
imul
adc
push
arpl
jns
out
stos
stos
mov
pop
vmwrite
stos
mov
cltd
add
mov
push
outsl
jp
cmp
insb
mov
xor
jle
jge
das
fs
pop
je
insb
roll
arpl
outsl
sbb
jg
inc
shrb
les
jmp
test
push
inc
dec
outsb
scas
push
std
outsb
mov
fwait
inc
cwtl
sbb
and
aas
mov
stos
sbb
sub
je
stos
int
jmp
out
ja
mov
jl
jecxz
repz
es
mov
inc
push
xchg
popf
jbe
lret
insl
mov
rorb
das
cmpsl
cmpl
jge
scas
loopne
sub
xchg
nop
lret
sbb
shlb
inc
ja
cmp
mov
add
mov
enter
inc
lock
cld
ja
fildll
mov
mov
lea
iret
cmc
les
sub
mov
mov
mov
and
or
xchg
cmc
les
sbb
pop
dec
shll
jbe
pop
mov
mulb
shll
lds
mov
dec
jg
daa
dec
hlt
pop
shrl
pop
aad
out
pop
aaa
stc
sub
stc
lret
xor
outsb
fnstenv
pop
into
or
cmp
aam
pop
pushf
sbb
decl
shl
and
aas
xchg
mov
rorl
mov
add
add
pop
mov
out
loopne
imul
push
jl
scas
dec
and
or
and
sbb
mov
xchg
add
adc
inc
loopne
jg,pt
jg
xchg
jae
stos
pop
aam
imull
mov
leave
jl
lcall
outsb
imul
call
into
int3
dec
mov
mov
dec
adc
xchg
inc
dec
mov
lock
jne,pn
or
sub
mov
and
xorb
sbb
push
data16
ret
push
aas
sub
dec
pop
push
fisubrs
into
pop
pop
ficompl
andl
mov
in
inc
lods
jo
aaa
mov
xor
add
data16
mov
mov
clc
pushf
int3
mov
test
pop
test
sahf
in
ret
cmpsl
loop
mov
add
or
pop
in
jno
lods
sub
loop
loop
cmpsl
stos
mov
or
test
and
jnp
daa
push
aas
mov
jnp
fmul
jns
or
aas
in
pop
mov
test
adc
dec
jae
and
pop
xor
or
push
add
cmpl
sub
mov
gs
mov
test
mov
test
in
sub
shlb
in
mov
dec
int3
jno
lret
shrb
stc
sti
cmp
jae
mov
int3
pop
mov
mov
loopne
in
mov
mov
jbe
out
cltd
pop
shl
int3
imul
pop
pop
cmp
pop
dec
pop
sbb
inc
push
test
int
jae
mov
sbb
push
or
inc
fmull
sub
test
mov
jl
push
test
cwtl
into
add
cmp
and
inc
rolb
imul
add
aas
ja
sub
pop
sub
int
ret
inc
cwtl
add
xchg
repnz
mov
mov
out
cmp
mov
cmp
inc
out
orl
dec
push
push
add
or
sbb
int3
jecxz
mov
cmp
and
dec
movsb
stos
pop
or
in
xchg
adc
push
dec
pop
addr16
bound
dec
inc
addr16
lcall
loope
out
and
cmp
inc
insl
mov
pop
je
pop
mov
mov
loope
pop
and
jl
push
sbb
xchg
out
mov
out
scas
dec
push
sub
idivl
adc
jnp
cld
imul
pop
and
fs
sti
ljmp
and
pop
mov
inc
daa
mov
cmp
orb
add
les
es
pop
or
lret
test
scas
jns
movsl
xor
sub
test
decb
das
cwtl
pop
mov
scas
mov
bound
cmp
test
decb
cmpsb
in
daa
mov
pop
cmpb
mov
inc
cltd
movsl
xchg
out
inc
mov
jecxz
outsb
out
mov
in
jle
js
test
dec
and
add
pop
insb
mov
aas
ljmp
jmp
mov
dec
fstpt
cs
lret
mov
pop
add
cmpsb
loope
push
and
arpl
and
sub
sbb
daa
or
hlt
gs
xor
push
repz
shrb
jne
rorl
dec
push
jae
pop
lods
shrl
hlt
sbb
mov
int3
xchg
mov
mov
fnstenv
aas
xor
test
dec
mov
sub
pop
in
push
push
addb
jmp
addl
je
inc
mov
int
push
mov
mov
sbb
sbb
stos
call
sbb
pop
xchg
xorb
int
cmp
mov
jmp
shrb
sbbl
outsb
scas
imul
ss
jmp
dec
sub
mov
add
into
lods
mov
aam
rorb
mov
les
into
cmp
les
mov
into
std
sub
rcrw
and
cld
insb
or
pop
cmpsl
cmp
xor
mov
aas
into
iret
sbb
lods
and
push
jne
icebp
dec
push
inc
cmpsl
clc
inc
adc
or
sbb
and
xchg
clc
mov
push
jo
scas
jae,pn
dec
je
xor
and
aad
xchg
ret
cmovae
jle
cmp
mov
jecxz
adc
jns
int
mov
sub
test
loopne
les
test
jae
cmpsl
adc
sub
enter
adc
daa
and
test
sbb
mov
imul
popf
fldt
dec
pop
outsb
das
and
inc
jne
mov
jns
sbb
or
xchg
cmp
lcallw
movsb
jns
adc
xchg
inc
lahf
enter
adc
das
sub
pushf
sub
and
ja
jp
sub
inc
and
mov
mov
pop
jg
dec
pop
out
sub
sub
pop
call
popf
iret
jne
mov
inc
imul
or
mov
xor
mov
insb
decl
out
mov
inc
in
pop
dec
jb
adc
ret
into
xchg
data16
repnz
sbb
insb
dec
jnp,pn
add
test
push
lret
outsl
stc
mov
mov
xor
cli
push
popf
popa
outsl
or
or
dec
rcrl
sti
out
inc
sub
loop
outsb
movsl
outsl
jnp
mov
fcmove
dec
pop
ds
and
sahf
pushf
aad
repnz
daa
mov
dec
aas
jge
out
sbbl
dec
mov
test
insb
jnp
and
sub
pop
sahf
push
movsb
fistps
sub
pop
jmp
mov
or
addb
stos
cmpsl
inc
inc
mov
xor
jp
bound
adc
push
out
xchg
mov
jl
fildll
or
fisubrs
mov
mov
in
jmp
mov
inc
cs
cli
jge
adc
inc
mov
jae
pushl
mov
or
jne
mov
in
cmpsl
xlat
pop
sbb
cld
lcall
scas
pop
adc
xor
dec
into
stos
les
sbb
aad
outsb
jae
dec
adc
lret
aad
std
cs
and
pop
and
dec
imul
daa
dec
mov
popf
inc
sub
sub
imul
cwtl
dec
mov
hlt
dec
daa
and
pop
inc
sbb
std
data16
dec
pop
loop
cs
andb
loop
data16
or
lods
xchg
test
mov
adc
xchg
scas
cmc
dec
sbb
cmc
stos
mov
add
out
adc
and
or
inc
js
and
jbe
push
leave
cs
aam
add
outsb
mov
mov
or
enter
adc
or
scas
xchg
add
sub
insb
mul
adc
sub
jns
bound
repnz
sbb
jne
xor
sub
repz
stos
lret
popa
repz
jae
mov
cmp
sbb
xchg
jno
mov
mov
sbb
popfw
xchg
fsubr
cs
lods
lea
xchg
dec
jb
ds
sub
push
dec
mov
add
adc
jmp
lret
sbb
movsb
out
xor
arpl
loopne
push
push
mov
in
push
jno
mov
call
out
movsl
ss
jae
sub
sub
sub
je
daa
push
mov
dec
mov
ret
call
lret
adc
out
push
xorb
test
dec
mov
xor
jle
out
test
jle
in
adc
test
insl
fsubl
das
ljmp
fcomps
dec
int3
ljmp
jg
cmpsl
jp
sub
test
arpl
add
cmpsb
in
sbb
dec
ss
loop
sbb
out
test
and
cmp
ja
sbb
mov
mov
add
imul
aaa
mov
in
dec
inc
jl
jae
sub
and
push
cwtl
mov
sub
xchg
inc
or
adc
sbb
rcrb
and
imul
mov
jo
pop
fdivl
push
mov
or
loop
clc
dec
lea
out
mov
fstpl
ja
bound
jmp
lea
mov
out
lods
and
ljmp
sbb
mov
in
jns
out
imul
jo
adc
and
test
dec
cpuid
lret
sub
into
fcoml
jl
dec
cs
push
lods
mov
es
data16
sbb
mov
outsb
sub
adc
xor
cmp
imul
dec
dec
repnz
in
adc
int
mov
cwtl
movsl
in
leave
and
stos
lret
call
insl
je
inc
mov
test
inc
roll
fmull
xchg
or
push
sbb
daa
je
sbbb
push
mov
cmp
movsb
sub
mov
movsl
dec
int3
sahf
inc
and
in
mov
repz
adc
and
fs
xor
hlt
jae
scas
pop
add
outsb
cmp
push
mov
jecxz
push
fsubrl
mov
mov
mov
pop
adc
test
testl
outsb
cmp
rorl
aas
std
pop
imul
inc
or
add
push
mov
je
insl
xor
dec
cmp
int3
imul
xchg
mov
cmp
stos
pushf
pushf
or
push
jbe
lods
lea
lret
sahf
adc
int3
subb
xchg
pushf
fists
repz
ss
popa
cwtl
fbld
inc
sub
imul
test
stc
sub
dec
cmp
scas
bsr
push
cmc
ret
cli
pop
aam
out
pop
lea
pop
dec
arpl
pop
xchg
imul
pop
mov
aas
and
xchg
adc
cli
ret
dec
adc
loope
adc
and
add
xchg
add
pop
adc
xchg
repnz
sub
and
test
daa
out
push
adc
and
test
daa
imul
sub
cmpsb
out
scas
and
les
or
loop
mov
xor
jle
or
mov
adc
lds
dec
fsubrs
cli
push
cmp
imul
in
xchg
outsb
mov
and
jge
inc
pop
cmpsl
dec
and
xor
outsb
cwtl
mov
jno
mov
mov
lea
mov
das
rorb
or
js
add
ret
push
js
out
pop
mov
mov
insl
dec
aas
adc
mov
dec
ds
stos
cli
fcompl
and
cmp
push
dec
inc
sub
mov
test
sbb
sub
stos
xor
add
dec
or
cli
and
add
ljmp
outsb
and
inc
xlat
pop
dec
mov
push
loop
sub
mov
daa
decl
fnclex
fldl
scas
dec
lret
stos
das
add
adcl
pop
mov
xor
cmp
or
fwait
mov
rcrb
inc
cs
push
dec
sub
imul
mov
out
inc
lahf
inc
xlat
sbb
push
push
bound
jge
and
fwait
scas
dec
fnstcw
nop
pop
fsubrl
xor
xchg
into
std
popl
mov
sahf
inc
call
pop
jge
pop
pop
mov
insb
cmc
jns
sahf
fisubrs
int
jbe
inc
inc
sub
mov
dec
fisubrl
shrl
cs
jmp
outsb
je
pop
movsb
adc
and
mov
andb
lods
mov
mov
and
loop
stc
data16
mov
xchg
loop
sbb
je
pop
add
xchg
popf
sub
mov
cltd
cmp
sub
mov
loope
test
jmp
jp
scas
test
mov
in
inc
lods
adc
push
outsb
aad
int3
rcr
ss
les
aam
inc
jo
pop
stos
mov
lods
cmp
sbb
mov
cmpsl
dec
ds
mov
jg
push
fldcw
adc
repz
cwtl
cltd
fnstcw
pop
aas
mov
sbb
xchg
lods
bound
mov
sub
pushf
jno
pop
pop
mov
mov
and
dec
je
loop
aad
aas
dec
addr16
adc
push
pop
test
mov
jno
mov
mov
cmpl
or
in
push
xor
out
xor
call
fxch
dec
test
dec
out
popa
xchg
mov
sbb
or
or
int
test
lret
es
sub
mov
lcall
inc
outsb
jbe
dec
fisubl
mov
mov
sbb
pop
mov
sbb
jecxz
mov
movsl
ds
inc
imul
jne
addr16
push
cmp
mov
imul
js
jo
inc
adc
iret
xchg
sub
push
stos
sbb
scas
xor
cld
test
dec
sbb
cmp
lret
jae
jp
iret
inc
xor
pop
xor
inc
leave
cmpsb
mov
lds
movsl
out
jl
aas
outsb
das
bound
mov
cwtl
or
adc
sub
dec
stos
or
mov
mov
mov
jl
mov
cld
testb
das
sub
dec
aad
cmpsl
mov
mov
stos
ljmp
fdivs
pop
outsb
insl
push
jle
insb
mov
movsb
cmp
sub
mov
into
jne
inc
aas
fmull
sbb
dec
cmpsl
push
inc
comiss
test
insl
imul
pop
push
nop
push
scas
addr16
jno
and
push
movsb
push
adcb
stos
pop
popa
daa
subl
sub
sbb
ljmp
bound
mov
gs
mov
shrb
add
mov
mov
enter
lahf
mov
cltd
outsb
dec
mov
arpl
int3
jmp
push
or
imul
imulb
test
pop
ljmp
aam
pop
imul
lret
jmp
lret
dec
es
insl
hlt
cmp
out
addps
in
pop
dec
pop
pop
or
sub
push
aad
popf
or
push
push
pop
out
arpl
add
sbb
mov
fdivl
movsl
sub
or
daa
imul
mulb
out
outsb
jne
cmp
dec
gs
lock
aam
lods
dec
test
jl
and
sbb
aam
in
and
jmp
xor
dec
cmc
lods
jge
stos
bound
dec
dec
test
or
sub
out
cmp
out
scas
add
cmp
mov
pop
sub
dec
xchg
fucomp
fstpt
mov
sbb
cmc
aad
ret
inc
sub
add
in
dec
mov
cmp
loop
sub
mov
and
das
lds
adc
popa
xchg
cli
outsb
mov
aas
cmp
add
dec
push
sbb
add
or
and
es
pushw
push
pop
pop
pushf
lretw
inc
cs
or
popf
cmp
cld
and
out
cmp
xlat
outsb
fcomps
jb
out
sub
jmp
daa
cmp
fmul
xchg
and
cmp
and
mov
xchg
aas
xor
or
ja
jno
mov
addr16
xor
lea
dec
push
xor
cli
lret
jno
dec
pop
ljmp
stos
inc
stos
fdivl
daa
imul
data16
out
outsb
ret
inc
pop
mov
mov
and
sub
das
and
jae
test
adc
leave
jg
mov
repnz
pop
lods
or
addb
sub
mov
scas
inc
shlb
jg
pop
into
mov
sub
or
lret
mov
xchg
les
mov
push
popf
je
mov
push
dec
lods
comiss
call
sub
lock
pusha
mov
loope
aam
sbb
mov
fisttpll
pop
dec
push
outsb
pop
adcl
and
and
dec
fnstcw
jle
mov
pusha
out
cs
mov
repnz
cwtl
arpl
fwait
dec
and
rorl
std
push
and
out
mov
inc
xchg
loopne
sbb
out
jg
inc
xor
pop
std
shr
cmp
sub
fisubrs
int
das
into
mov
mov
rclb
popf
pop
das
and
sub
cltd
sub
prefetch
or
out
pop
push
adc
pusha
cmc
ret
adc
repnz
dec
shld
cwtl
gs
jmp
cltd
push
mov
jmp
dec
mov
rcr
das
loop
add
rorl
not
fsubrs
mov
pop
imul
adc
pop
enter
pop
fisubs
loopne
outsb
push
ljmp
push
cmpsl
nop
les
pop
cmpsb
stos
dec
xchg
push
in
pop
into
mov
frstor
jmp
mov
test
xchg
fsubrl
mov
dec
sbb
xchg
add
push
dec
sbb
aad
mov
jg
das
leave
lcall
testl
push
xor
dec
sub
fimull
push
clc
mov
sbb
cli
pop
loopne
lods
sub
cwtl
lcall
sarb
adc
cs
and
and
loop
dec
fisubs
mov
popa
sub
mov
sub
inc
xchg
jne
dec
movsb
jmp
sub
xor
notl
lock
pop
pop
iret
pop
lock
jmp
push
sbb
mov
adc
loop
imul
loope
pop
push
cmp
in
call
stos
lods
sub
cs
mov
or
push
addr16
mov
push
cs
scas
or
mov
out
data16
jns
lea
fcompl
in
mov
mov
cld
stos
xchg
pushf
nop
mov
aaa
adc
jmp
and
or
pop
or
pop
sub
jb
stos
in
adc
stos
ret
std
sub
add
jnp
mov
dec
das
sub
inc
or
lret
pop
js
es
or
sub
adc
push
mov
and
out
loop
cld
and
xor
subl
stos
pushf
sub
ljmp
jecxz
dec
adcb
sets
cmp
jae
add
push
mov
loopne
push
xchg
inc
dec
or
pop
repnz
pushf
sub
daa
adc
stos
fstl
mov
das
fisubrl
jle
fs
sbb
in
xor
add
jg
mov
repz
pop
sub
dec
stos
push
lods
loope
cmp
shrl
dec
push
faddp
cld
mov
out
adc
nop
mov
leave
data16
cmp
xchg
push
dec
adc
stc
aad
pop
push
sub
jae
rorb
addb
loope
jns
push
mov
inc
sub
pop
push
mov
mov
std
sub
std
jo
mov
aam
and
repz
mov
xor
mov
push
stos
inc
ljmp
mov
scas
andps
mov
rolb
ljmp
int3
add
lods
dec
adc
pop
push
lods
std
mov
cmp
sbb
jg
jp
mov
dec
scas
into
or
inc
or
mov
inc
int3
cmp
aas
jo
fs
das
insb
lods
xor
jmp
in
push
jnp
dec
sbb
lea
dec
inc
in
mov
xchg
mov
pop
pop
out
push
xchg
sub
iret
add
jmp
std
into
std
cmp
insl
push
in
in
xor
push
test
movd
jmp
ds
sub
or
push
outsb
jne
sub
std
pop
into
pop
push
dec
pop
adc
pop
xor
lods
xor
cmp
ljmp
inc
cmp
mov
and
mov
inc
xchg
mov
or
sub
xchg
js
pusha
icebp
les
jne
aaa
popl
jmp
scas
mov
dec
int3
sub
in
into
lods
repz
xlat
int3
push
or
stos
test
iret
pop
pop
repz
cwtl
sbbb
mov
dec
out
test
pushf
jno
cli
repz
faddl
stc
pop
xchg
iret
in
dec
in
imul
sub
out
mov
cli
call
jmp
push
jmp
into
xlat
movsb
push
xlat
push
imul
stos
data16
adc
inc
inc
and
outsb
out
lods
xchg
xchg
dec
pop
es
not
cmp
dec
into
test
jo
fwait
pop
fsub
xor
inc
sbb
sbb
test
jg
dec
das
enter
sbb
das
incb
into
pop
mov
cmp
sub
xchg
ret
lods
je
imul
bound
lret
in
call
roll
and
mov
lods
pop
cmp
lods
push
into
scas
pop
lods
adc
insb
mov
mov
out
and
or
int3
sbb
mov
mov
adc
imul
adc
lods
scas
stc
int
lret
mov
int
dec
insb
das
insb
xchg
xlat
pop
xor
jnp
add
mov
in
pop
test
mov
loop
push
push
lret
pop
addr16
push
jp
repnz
jns
insl
test
das
mov
lret
cmp
fildll
add
adc
cmp
dec
leave
xor
sbb
and
xchg
out
adc
scas
mov
dec
out
cmpsb
dec
ljmp
sahf
std
out
lods
mov
loopne
lds
leave
sbb
aad
int3
and
outsb
push
jle
pop
out
cmpsl
and
outsb
xchg
push
pop
mov
mov
cs
xchg
dec
out
bound
dec
into
lcall
ss
imul
cltd
sbbb
cld
cmp
or
xchg
push
and
push
mov
dec
dec
imul
scas
stc
jne
dec
push
add
loop
loop
sahf
push
or
pop
dec
js
inc
aas
push
adc
pop
das
lret
sub
jne
cmp
cmp
dec
adc
cs
cltd
sub
movsb
xchg
enter
cld
pop
imul
daa
in
push
rorl
dec
in
mov
in
sub
mov
out
inc
sbb
clc
sti
enter
sub
inc
orb
and
mov
lcall
out
xchg
xchg
push
lods
and
push
lret
dec
and
sti
mov
xchg
ljmp
jbe
pop
repnz
push
popf
int
pop
scas
cwtl
stc
xor
jle
cmp
out
stos
loop
adc
std
or
fucomip
cli
insl
ljmp
xor
dec
sub
movsl
pop
sub
shl
test
insb
in
xchg
mov
mov
adc
xor
and
out
stos
inc
fcoml
sbbl
sub
fdivp
pop
xchg
aas
dec
bound
xchg
fldenv
mov
scas
xchg
or
das
jo
imul
js
pop
lods
gs
dec
xlat
cmp
xchg
cmp
dec
ret
dec
outsb
xor
and
imul
push
lods
insb
ljmp
cmc
xchg
daa
js
into
sahf
pushf
insl
add
addl
scas
cs
pushf
push
out
fsubl
xor
mov
mov
pop
clc
fisubs
lahf
push
subl
jbe
cs
or
rcr
push
jmp
data16
shlb
inc
pusha
ja
add
outsb
mov
in
push
mov
arpl
fs
jge
sub
inc
mov
sub
add
ljmp
test
jnp
movsl
push
or
je
pop
or
test
and
push
mov
push
xchg
pusha
shlb
sub
push
test
push
lods
movsb
mov
sbb
lcall
stos
ss
push
mov
mov
sbb
into
je
dec
stos
lret
loop
outsb
sahf
inc
pusha
lea
bound
mov
xchg
rclb
or
insb
inc
das
cmpsb
test
cmpsl
stc
daa
ds
fiadds
sbb
add
adc
lcall
cmp
adc
and
jmp
lahf
call
fwait
and
inc
test
scas
dec
push
test
inc
and
rcrl
cmp
test
pop
and
xchg
stos
push
int3
pop
sub
loopne
lds
dec
inc
lods
xchg
push
cs
ret
cmpsb
or
adc
and
das
pop
movsb
das
imul
stos
and
cmpsb
in
stc
movsb
stos
xor
cltd
mov
imul
dec
jmp
int3
shll
popa
push
bound
fs
cmpsl
mov
clc
stos
pushf
lret
in
sub
cwtl
out
fsubrl
lock
mov
push
mov
and
leave
dec
pop
pop
shl
dec
inc
push
das
xchg
pop
mov
out
stos
aaa
movsl
cld
les
dec
es
lock
inc
fisttpll
push
movsl
popa
fnstsw
stos
jae
arpl
sbb
push
ja
dec
and
pop
or
movsl
fsub
mov
stos
mov
and
inc
inc
aad
pop
inc
xchg
sbb
add
inc
insl
mov
call
cmpsl
push
mov
pop
das
stos
bound
in
and
test
sub
leave
sbb
rorl
push
lods
sarb
rclb
inc
or
xlat
loopne
hlt
sub
stos
adc
movsl
lcall
sub
rorb
loope
pop
sbb
stc
std
test
mov
gs
and
lea
pop
dec
data16
rcr
repnz
ja
scas
dec
scas
je
mov
push
out
outsl
pop
mov
mov
sbb
int
leave
pusha
sub
sub
inc
push
xchg
push
iret
test
into
sub
cmp
imul
shll
shl
sub
mov
outsb
imul
test
xlat
pop
jmp
imul
fidivrs
imul
push
mov
sbb
sbb
shl
movsl
dec
cli
outsb
out
lcall
fwait
lea
rorb
into
inc
mov
lea
movsl
out
pop
jg
outsl
pop
push
add
movsb
and
ljmp
xchg
scas
int3
iret
sub
das
xchg
rcrb
push
repnz
sub
cli
dec
aad
scas
jl
xchg
xchg
call
pushf
inc
sub
sbb
mov
cmc
xor
mov
mov
enter
loop
push
fdivr
push
stos
cmc
push
loop,pn
sbb
adc
outsb
sbbl
dec
sbb
dec
push
mov
or
and
dec
mov
das
mov
push
lret
mov
lahf
lcall
loopne
and
shrl
dec
stos
in
fisttpl
out
jne
call
ret
mov
and
test
push
mov
mov
mov
push
mov
call
ljmp
push
jnp
dec
movsl
out
inc
push
gs
in
jecxz
and
and
cs
xchg
test
add
push
dec
fsubrl
jmp
xor
add
subl
stos
and
insl
inc
icebp
les
arpl
in
clc
test
jle
mov
add
mov
imul
loope
int
push
iret
das
fsubrl
aas
cs
cmc
inc
jl
inc
mov
nop
sub
cmc
cld
cmp
push
and
adc
int
cmp
test
xchg
daa
out
adc
sub
jmp
mov
sub
fildl
div
sub
das
call
pop
sub
jmp
imul
ret
push
std
dec
in
push
mov
push
pop
pop
mov
pop
adc
pop
push
cli
sub
sub
xor
dec
lods
adc
in
cs
and
testl
add
repnz
popf
fwait
cmp
lea
adc
clc
jecxz
shl
push
test
insb
lods
movsl
pusha
fsubp
das
icebp
push
in
shrb
or
or
ficoms
pop
add
loop
movsl
sub
out
scas
out
cmp
dec
out
and
and
cs
mov
sub
inc
adc
mov
mov
mov
bound
int3
or
lret
xchg
pop
scas
or
mov
cmp
sub
lahf
int
and
and
out
pop
dec
push
out
sbb
xor
loop
pop
sub
jle
rorl
scas
sub
out
out
data16
push
lods
xor
and
or
lahf
movsb
xchg
in
lret
mov
stos
test
pushf
stos
sbb
push
adc
cmp
mov
leave
das
iret
lcall
adc
fcoml
dec
fwait
adc
aad
inc
pop
or
xor
das
mov
jge
js
lds
ja
or
lods
jmp
out
xchg
push
mov
cmpl
adc
sahf
ja
sub
addr16
xor
decb
jns
int
lods
cmpsl
jmp
xchg
mov
jae
andb
test
sub
cmp
cltd
xchg
lock
hlt
sub
out
outsb
mov
mov
int
jp
cwtl
and
aam
out
pop
daa
inc
sbb
mov
sub
sub
jle
mov
dec
adc
out
push
mov
xor
mov
jmp
sub
out
mov
in
xchg
ficompl
es
sub
sub
sbb
jmp
and
cmp
mov
pop
cs
push
dec
stc
and
cmp
das
cmp
sub
xor
sbb
pop
lods
ljmp
adc
sbb
pusha
call
pop
or
test
cmp
dec
into
mov
outsb
enter
in
int
xor
nop
outsb
jns
mov
lock
lock
lret
imul
mov
sbb
ret
into
mov
icebp
pop
add
mov
jne
xor
stos
imul
out
sbb
mov
leave
adcl
das
pop
mov
mov
test
pop
out
test
mov
pop
dec
mov
out
lods
and
pop
ret
fwait
scas
mov
jmp
test
xor
imul
lods
dec
stos
pushf
test
pop
cmp
inc
mov
out
mov
jecxz
insl
int3
push
lret
dec
pop
jmp
sbb
xchg
mov
fcoml
push
call
mov
and
cli
adc
lods
mov
fwait
lods
nop
xor
leavew
iret
dec
insb
push
aaa
inc
and
scas
push
insb
push
jge
mov
dec
add
or
ret
imulb
jno
cld
mov
mov
mov
repz
dec
mov
jo
gs
add
sub
jo
mov
mov
mov
fmull
add
cmp
or
mov
insb
and
cwtl
mov
jmp
mov
mov
mov
mov
pushf
mov
sub
insl
ljmp
stc
hlt
cmp
jne
push
mov
iret
sub
mov
xorl
out
pop
scas
loopne
mov
mov
shrb
aaa
xchg
clc
mov
int3
cmp
adc
mov
das
sbb
dec
fsubrp
cs
gs
xor
enter
subb
enter
stos
jbe
or
push
in
bound
push
lods
cld
stos
mov
adc
mov
jne
sub
call
imul
ja
and
in
mov
xchg
xlat
in
in
pop
scas
in
add
sub
xchg
jns
aad
mov
in
sub
push
jg,pn
addr16
jecxz
inc
in
lahf
mov
mov
mov
outsb
push
dec
test
sub
cmp
xchg
xchg
iret
sub
dec
sbb
loopne
mov
movsl
cld
pop
sbb
ja
loop
fwait
cmc
js
dec
std
pop
cld
cs
lea
clc
in
dec
xchg
ja
and
imul
jo
daa
fsts
mull
mov
xchg
jl
lret
rorl
or
cld
cld
pop
cltd
push
push
call
in
or
sbb
data16
dec
lock
out
dec
stc
and
mov
ljmp
dec
dec
in
cmpsl
pop
outsb
pop
mov
dec
aas
inc
pop
std
repnz
lods
cli
pop
mov
cmp
imul
fimuls
out
pop
in
push
out
xchg
outsb
jae
xor
setg
jbe
stc
sbbb
insl
sarl
aas
lea
dec
in
test
lea
int3
sbb
mov
popf
and
jmp
mov
push
je
jp
ret
in
mov
jge
shrl
int3
stc
scas
cmpsl
sub
je
or
mov
ds
adc
and
jae
push
cmc
push
icebp
mov
sub
sub
in
lods
xchg
andb
out
sbb
hlt
push
bound
mov
cmc
dec
aad
lret
sbb
and
and
movsl
cwtl
mov
inc
test
out
jmp
mov
daa
mov
aad
sub
dec
fiadds
mov
jbe
adc
fildll
test
xchg
and
mov
lcall
push
insl
push
insb
sbb
inc
jno
call
and
test
mov
mov
or
mov
add
inc
jg
mov
das
test
mov
jge
xlat
imul
lods
push
mov
mov
es
dec
sub
jae
xchg
dec
scas
outsb
fdivrl
out
sbb
ljmp
push
pop
sub
bswap
scas
push
mov
sub
adc
fwait
cld
out
jno
cwtl
loopne
pop
and
push
mov
jle
stos
fwait
cmp
aad
cmp
sub
mov
jge
aas
imul
sub
mov
inc
inc
movsl
lods
in
stos
in
test
mov
jo
leave
pop
mov
push
sbb
cld
iret
pop
sub
lea
push
dec
cld
and
das
add
sub
cld
jmp
adc
movsb
or
adcb
dec
inc
cs
push
pop
xlat
dec
pop
cmp
insb
into
orl
dec
mov
add
lretw
push
in
pop
mov
in
nop
push
mov
mov
fildll
fisubs
aam
cmp
pop
xchg
cwtl
gs
dec
jno
pop
jmp
lock
gs
lods
pop
mov
icebp
stos
popa
lret
out
xchg
mov
addb
imul
pop
pop
in
into
es
leave
jae
adc
cs
fstpl
int
pop
dec
xchg
dec
adc
push
push
push
lret
dec
test
push
imul
inc
lods
pop
mov
dec
lock
je
cmpsb
je
daa
mov
sub
push
jle
mov
loopne
popa
lods
je
movsb
sbb
pop
xchg
sub
fdivl
xlat
in
mov
fsin
into
xlat
mulb
imul
addr16
imul
dec
sahf
or
sub
mov
aam
insb
ds
lock
hlt
pusha
sbb
cld
mov
in
mov
rcrl
xchg
sti
pop
test
call
mov
stos
aad
stc
dec
jle
ss
adc
cmpsb
pushf
mov
jnp
sub
xor
insl
pop
clc
jecxz
in
pushf
in
lahf
shrl
out
sub
out
adc
inc
adc
loope
jge
lcall
mov
jo
adc
es
dec
dec
push
shl
xor
push
push
add
or
dec
sti
dec
rorl
pop
jge
inc
cmp
fsubl
in
cmpsl
cmpsl
dec
or
jge
aad
ljmp
mov
in
lods
out
xchg
out
lahf
test
push
rclb
inc
cmp
outsb
in
loop
push
js
es
jecxz
loop
jo
insl
in
imul
out
out
push
dec
call
push
jmp
mov
fsubl
fucomp
std
in
popl
dec
adc
lahf
in
addr16
insl
and
out
ret
jecxz
out
es
outsb
inc
pop
out
and
mov
arpl
pop
inc
mov
outsl
mov
cmp
lcall
cmp
add
add
repnz
and
xchg
xchg
jnp
pop
xorb
pop
outsb
xchg
sahf
adc
adc
imul
inc
add
inc
stos
test
sub
sbb
xchg
xchg
clc
mov
lods
mov
mov
pop
out
jg
jmp
push
inc
rcll
insl
and
jecxz
push
mov
mov
test
mov
out
sub
popa
push
dec
iret
jmp
stos
add
and
lret
push
pop
cvtdq2ps
insl
outsb
fisubrs
scas
push
sub
in
lcall
jmp
and
in
jae
daa
mov
jecxz
in
in
out
out
call
jmp
in
sub
sbbb
sub
pop
filds
aaa
pop
mov
aaa
dec
pop
shlb
pop
jnp
aaa
cli
pop
pop
mov
loop
and
out
bound
and
sbbb
es
jl
push
inc
xchg
imul
add
cli
jns
and
out
lret
dec
jne
or
repnz
dec
sub
push
pop
dec
mov
inc
orl
or
fdivrl
sbb
inc
inc
std
pushf
adc
movsl
outsl
daa
cmp
out
test
dec
scas
out
int
xchg
jecxz
mov
pop
pop
dec
xchg
mov
fs
jmp
adc
ss
inc
das
push
fnsave
add
aaa
dec
into
loop
dec
or
fwait
outsb
out
pop
pop
dec
ficoms
int
loop
enter
iret
rcrl
test
inc
push
mov
popw
into
fwait
lods
je
sub
repnz
add
out
std
sub
xor
clc
dec
lsl
sub
out
lcall
cmp
aam
mov
orb
pop
lahf
cs
mov
mov
movsl
enter
pop
cmp
shrd
mov
sub
mov
jnp
and
int
dec
out
scas
pushf
adc
jl
or
cmc
push
jbe
sub
lahf
inc
outsb
es
clc
mov
add
xor
mov
test
or
imulb
pop
sub
push
ret
popf
outsb
out
mov
jne
xchg
sbbl
clc
dec
dec
lods
outsb
popf
adc
dec
jle
cmp
cli
andb
push
stc
xchg
hlt
out
scas
inc
sub
stc
or
dec
jle
sub
insl
out
into
into
stc
pop
cmp
or
popf
pop
lea
aas
call
dec
jns
dec
movsb
mov
leave
jg
pop
push
cmpsl
cli
and
adc
pop
xor
shlb
das
call
or
push
fidivl
push
push
sbb
cmp
pop
ret
stos
pusha
jmp
dec
inc
imull
jbe
jnp
ficomps
jecxz
pop
cwtl
lods
mov
jl
cmp
jl
mov
cmp
jle
int3
jl
sbb
shr
je
pushaw
hlt
lds
test
push
aaa
pop
adc
add
push
cwtl
arpl
pop
orb
sbb
jbe
pop
push
sbb
push
call
or
pushf
dec
sbb
movsb
sub
sbb
aad
inc
lahf
fbld
nop
bound
xlat
mov
xchg
sub
outsb
ret
pop
iret
inc
pushf
sbb
loope
popf
sub
cmp
data16
repz
aad
lock
sbb
gs
pop
fsubrl
movsl
lods
popa
roll
push
test
jmp
adc
int
sbb
shrb
andl
dec
dec
lcall
sub
out
jl
addr16
cmp
xchg
out
scas
je
daa
inc
stos
das
or
out
test
jbe
ja
aad
addr16
xchg
test
pop
int3
push
jbe
pushf
sub
mov
jo
mov
cmp
stos
in
iret
pop
and
or
dec
dec
sbb
stc
sbb
sub
dec
cmp
nop
jnp
mov
pop
sub
add
insb
mov
add
inc
test
pop
or
std
mov
out
pop
cmp
rcrl
mov
out
cmp
cs
cmc
daa
adc
xor
or
int3
adc
adc
adc
adc
inc
sub
loope
mov
push
test
lds
sub
stc
cmpb
sbb
out
mov
into
ss
push
or
rcrl
lods
add
push
daa
negb
push
push
bound
and
and
push
sub
jg
lea
sar
sub
mov
mov
jns
cld
push
clc
mov
dec
and
dec
sub
mov
push
fisttps
lea
es
sar
push
mov
xchg
xchg
pop
rorb
inc
test
mov
push
lods
jmpw
pop
inc
jmp
lcall
mov
outsl
xchg
loop
pop
sub
push
xchg
dec
fs
scas
push
iret
daa
out
das
out
jmp
lcall
daa
push
daa
das
inc
lea
imul
fcomps
idivl
inc
fwait
scas
mov
std
out
pop
loope
lods
dec
arpl
out
pop
mov
ljmp
addr16
mov
jecxz
in
out
cmc
pop
ljmp
in
arpl
and
scas
dec
imul
imul
xchg
mov
pop
jmp
push
out
sbb
call
mov
aas
shr
mov
xor
jo
test
push
test
call
ljmp
cmp
daa
fisubs
lods
das
in
pop
mov
inc
lea
mov
movsb
jg
sub
sub
fsubrs
fmulp
add
popa
das
mov
fstps
mov
ficoml
xor
sbb
add
jns
insl
xchg
fdivrl
int
mov
jns
xor
das
pop
or
sbb
inc
mov
mov
adc
or
imul
sbb
jmp
lods
mov
shrl
dec
cwtl
adc
adc
aas
sub
shlb
xor
mov
xor
jns
mov
shl
in
out
cld
sbb
add
push
add
addr16
in
pop
adcl
sub
inc
shr
mov
jno
ficomps
nop
int
hlt
popl
mov
jle
clc
aas
sub
pop
sub
jge
dec
cld
dec
aas
sub
inc
sbb
xchg
or
and
jne
pop
jecxz
fcoml
mov
aam
inc
sahf
js
addr16
add
imul
or
daa
sbb
xchg
sub
les
push
cmpb
ljmp
xor
sub
shl
jmp
repnz
push
ss
int
inc
jp
sbb
jno
fistpl
sbb
in
push
loopne
jmp
xor
mov
adc
cli
mov
int
jp
rcrl
push
lds
sub
inc
fbstp
rolb
pop
repnz
cmpsb
push
movsl
pop
jl
enter
fdivrs
insl
jl
mov
arpl
ja
jne
mov
int
dec
dec
lods
daa
enter
repnz
stos
int3
loope
repz
add
pop
ja
mov
sbb
cmpl
push
lahf
push
outsb
dec
scas
imul
pop
sub
cmc
or
jmp
sub
outsb
mull
cs
push
push
mov
push
clc
js
xchg
test
jecxz
shrl
jo
leave
sbb
stc
add
xchg
add
jmp
xlat
dec
int
push
scas
shll
fsubrl
sahf
jp
push
loopne
jle
loop
xor
in
out
in
or
out
pop
out
jp
addr16
inc
xchg
xchg
icebp
sbb
out
call
dec
sub
sub
mov
dec
pop
out
jecxz
jb
jns
inc
sub
not
dec
test
fildll
pop
incl
jbe
inc
mov
stos
lahf
cmp
and
push
jle
or
jae
fldt
dec
sub
push
into
notl
and
or
push
jbe
dec
das
mov
iret
or
cs
mov
insl
test
mov
add
fnstsw
lock
stos
sub
fwait
jge
sbb
dec
push
lods
sbb
mov
pusha
xor
movsl
dec
cs
std
xchg
outsb
lock
push
dec
shll
jne
out
das
out
fidivs
in
sub
push
sub
sub
fimuls
clc
pusha
jno
sbb
out
mov
xor
jmp
pop
das
in
stos
dec
sub
lods
test
das
mov
inc
ficompl
xchg
lock
cmp
insb
ljmp
jmp
add
cmp
lea
xorl
mov
pushf
sub
ret
rorl
daa
cs
cld
into
xchg
loop
pop
mov
mov
les
outsb
sub
std
scas
jp
xor
xchg
fnsave
daa
shlb
test
xchg
mov
scas
sub
push
inc
jl
es
cld
add
xlat
arpl
mov
adc
rep
sbb
push
adc
cmp
pop
jmp
mov
dec
aaa
dec
and
inc
or
shrl
push
leave
inc
in
jle,pt
mov
sub
aaa
out
push
jns
xor
js
pop
pop
out
jmp
jno
cld
sub
push
loope
cmp
ret
out
pop
or
push
stos
mov
out
aad
jnp
lods
sbb
push
ljmp
pusha
out
fldt
enter
lahf
sti
jmp
in
into
pop
mov
cli
int
push
aas
idivb
dec
das
push
push
jo
jns
roll
popa
mov
jl
pusha
add
mov
movsl
mov
mov
sahf
inc
das
pop
das
sub
ret
out
pop
mulps
ljmp
js
xor
mov
lahf
fmuls
and
cmovp
stos
insl
sub
mulps
stos
data16
setle
xlat
imul
mov
into
mov
dec
or
imul
dec
mov
xorl
nop
call
mov
iret
jo
stos
shr
popf
out
out
add
pmulhw
or
les
mov
cltd
int
push
sub
sub
sub
or
inc
xchg
dec
mov
adc
or
dec
loope
es
jle
ljmp
xchg
hlt
into
mov
fstps
jecxz
lods
mov
mov
ljmp
xchg
xchg
xor
insl
scas
dec
add
xchg
iret
mov
daa
xchg
dec
pop
pop
lret
frstor
mov
inc
add
cs
out
add
loop
lea
jl
mov
out
push
add
das
scas
lods
out
push
jp
jne
test
or
sbb
lods
rol
mov
repnz
fnstsw
cmc
int
sub
pop
dec
loopne
push
scas
or
sbb
sbbb
mov
jg
lods
sub
jecxz
sub
imull
inc
jns
sub
int3
push
leave
jge
pop
std
into
insl
cmpsl
testb
out
lods
xchg
lret
sub
dec
loop
cltd
cmp
nop
test
jl
mov
cs
push
xchg
jnp
das
xlat
ss
orl
lahf
cwtl
push
mov
inc
pusha
jns
push
ja
and
test
faddl
cmc
or
sub
out
cmpsb
ret
aad
lret
ret
dec
call
pop
mov
inc
fdiv
test
lret
mov
push
cmp
mov
xchg
scas
or
pop
lea
lods
ds
ss
xlat
jo
dec
clc
mov
mov
push
pop
lock
xchg
xchg
sbbl
push
mov
dec
push
sub
mov
jmp
or
mov
daa
test
pushf
add
adc
ljmp
mov
jp
mov
jo
xchg
or
push
inc
sub
cs
xchg
sti
cmpsl
jmp
mov
aas
adc
popa
mov
ud0
sbb
int
xlat
cmp
xchg
pop
jp
in
fidivrl
es
sti
push
mov
push
pop
dec
lcall
lock
mov
pop
sub
or
cmc
scas
sub
into
push
mov
mov
dec
test
jmp
in
cli
pop
cmp
inc
jmp
loop
jnp
out
dec
stos
insb
jne
jns
lret
call
sub
and
cmpsb
fsubl
out
gs
jge
addr16
jne
sbb
push
fisubrl
push
imul
dec
insl
dec
outsb
mov
daa
imul
pusha
lahf
pop
xchg
popa
popa
jp
xor
fsubrl
nop
mov
mov
in
es
call
lret
cmp
mov
scas
mulb
cs
test
popf
and
cmp
mov
ficomps
loop
orb
out
or
pop
cld
ss
adc
push
dec
push
and
das
mov
sub
xchg
in
sub
stos
jae
ret
xor
insl
lahf
loop
mov
dec
xor
popa
mov
lock
mov
fdivrl
xchg
sahf
push
sahf
cwtl
aad
sub
mov
nop
int
popa
jp
inc
daa
and
push
idivb
push
das
fdivp
sub
mov
inc
out
testb
std
call
lock
imul
sti
mov
push
lea
stc
push
in
cs
jecxz
add
mov
jl
push
pusha
xchg
pop
xor
lds
jl
sbb
adc
and
aaa
jmp
sub
xchg
sbb
movsl
and
ljmp
out
mov
insl
and
jne
sub
dec
addr16
fildll
dec
imul
pop
mov
popa
dec
bound
test
or
dec
xchg
mov
or
lds
ljmp
pop
mov
pop
int
cmpsl
mov
pop
dec
aas
out
dec
and
mov
das
rcrl
dec
mov
mov
daa
mov
mov
test
and
loop,pt
pop
and
test
xor
xor
inc
scas
push
add
jecxz
mov
adc
test
movsl
cli
pop
and
pop
mov
data16
test
imul
pop
mov
pop
testb
push
out
pop
mov
mov
pop
xchg
sarb
push
inc
pop
in
pusha
testb
mov
xchg
lret
lods
inc
gs
lock
mov
mov
pop
arpl
data16
sub
bound
leave
inc
lods
shrl
xorb
mov
lods
dec
cmp
sub
mov
lods
push
scas
cmp
dec
cmp
popa
cli
fs
pop
sub
xchg
push
fs
push
imul
movl
lret
out
out
ds
in
insl
repnz
inc
aaa
cwtl
out
and
add
and
in
mov
inc
mov
push
loopne
mov
mov
gs
ljmp
pusha
stc
mov
pop
stos
int
es
mov
inc
leave
or
dec
scas
je
xchg
or
and
or
mov
dec
add
std
leave
push
stc
mov
hlt
jmp
imul
pop
xor
and
aad
scas
into
cmp
and
push
pop
das
ficoms
lret
dec
adc
stos
lahf
xchg
lods
test
mov
sahf
push
arpl
inc
mov
repz
test
inc
das
andb
sub
insl
clc
out
arpl
sub
dec
addr16
push
imul
insl
outsb
push
and
dec
add
lahf
in
jge
pmaddwd
sbb
inc
js
mov
jo
push
ljmp
stos
or
push
bound
fadds
sub
jmp
outsb
mulb
aam
outsb
pop
mov
mov
dec
push
leave
jae
lods
jl
jmp
scas
mov
sub
sarb
into
ja
icebp
dec
mov
insb
int3
push
mov
mov
mov
and
push
sub
push
inc
mov
ds
jle
js
xchg
mov
mov
imul
scas
xor
in
lahf
xchg
xor
pop
in
lahf
cmp
dec
hlt
cwtl
sbb
inc
adc
andb
ljmp
addr16
fidivl
mov
frstor
ljmp
int
push
rorl
sub
hlt
pop
dec
stc
pop
sub
inc
and
jmp
in
inc
loopne
fsubs
pusha
scas
sbb
jmp
leave
out
lods
sbb
mov
jmp
inc
imul
lods
sbb
add
outsb
fwait
imul
in
fwait
push
popa
lret
inc
into
std
mov
or
gs
mov
ljmp
pop
dec
imul
push
cmp
cmp
push
fwait
pusha
mov
push
xorl
cwtl
and
add
mov
jecxz
and
es
call
rolb
frstor
andl
mov
dec
cli
bswap
sub
insl
inc
lcall
stos
popa
cli
inc
int
dec
mov
jmp
stos
sbb
mov
jmp
mov
stos
lea
daa
xorb
fcmovnb
orl
mov
lods
mov
mov
add
or
pusha
stos
mov
js
addb
sub
in
or
jae
popa
movsb
mov
insl
push
mov
sti
outsb
lock
mov
sub
jl
insb
movsb
test
xchg
and
ljmp
adc
lea
adc
imul
in
out
neg
ficoml
or
fwait
cmp
adc
or
dec
sarl
pop
dec
cmpsl
popf
cmpsl
inc
add
adc
adc
jge
cmp
and
out
cmpsb
inc
das
push
outsb
stos
lahf
fidivl
cmpsb
jae
sub
add
fsubr
out
cmc
sub
out
sub
sub
stos
out
out
test
cmp
outsb
fsubrl
out
je
sub
das
mov
xor
sub
fs
gs
push
imul
dec
outsb
mov
fs
ficomps
gs
or
dec
out
fimull
std
std
ja
iret
mov
pop
into
pop
jne
stc
sbb
pushf
daa
jns
jo
sbb
dec
call
cmc
imul
pop
pop
pop
sti
das
mov
cmc
dec
cltd
mov
xor
and
loope
movsl
out
lods
adcl
sbb
mov
scas
stos
ja
or
dec
insl
testl
and
dec
ja,pn
nop
jp
adc
dec
andb
inc
icebp
inc
insb
jg
fwait
push
inc
mov
filds
jns
ljmp
shlb
lea
outsb
dec
movsb
push
or
mov
js
test
pop
or
mov
push
dec
inc
pop
lods
cmpsl
lret
aam
imul
dec
lahf
inc
jne
outsb
sub
mov
ljmp
sbb
xchg
fmull
push
push
aam
lods
inc
addl
adc
inc
mov
lods
xor
sti
adc
jae
repnz
jno
mov
imul
sbb
dec
lret
fwait
loop
push
pop
mov
inc
cwtl
dec
push
aad
sub
mov
ja
lcall
loop
sub
filds
scas
and
dec
cld
jmp
jmp
test
lods
in
xchg
movsl
and
push
mov
fwait
jl
iret
int3
or
mov
ret
or
les
adcl
adc
push
push
mov
dec
sub
sub
lcall
leave
insb
pop
test
stos
or
insb
inc
and
inc
outsb
fadds
sub
ficomps
pop
adc
shrb
cmpsb
lds
sub
mov
xchg
js
dec
rcrb
adc
out
rcll
cld
leave
adc
sub
cmp
dec
jle
inc
ljmp
cmp
pop
push
mov
addl
pop
stc
scas
cmp
imul
rol
jmp
push
data16
les
dec
call
add
fsubrs
or
lahf
cli
sub
aas
imul
pop
outsb
addr16
addl
punpckhwd
mov
insb
add
insl
gs
cmc
push
mov
insb
dec
lods
sbb
fsubp
sub
mov
jmp
daa
les
and
jnp
in
popf
xlat
in
lea
in
sbbb
out
jns
inc
lods
jnp
js
dec
das
fwait
das
dec
pop
sti
dec
in
xchg
sarl
dec
movsb
or
aas
push
pop
std
mov
das
fs
ljmp
mov
cmp
cmp
adc
push
and
mov
and
call
mov
sub
mov
sub
and
cmpsl
lea
sub
insl
pop
pop
pop
push
xchg
psllw
mov
sbb
sbb
jl
jnp
inc
xor
cltd
sbb
scas
dec
pop
push
shll
shr
mov
cmpb
loope
cmc
pushl
jecxz
xchg
int
mov
inc
push
pushf
xor
or
dec
movsb
shlb
pop
lods
cld
cmpsl
ljmp
lock
cmc
rcrb
jp
iret
sub
sbb
jecxz
mov
adc
sub
push
lcall
pop
scas
cmp
jl
das
adc
in
gs
mov
out
mov
sbb
sbb
xor
into
xor
or
cmp
xor
or
lahf
notb
insl
mov
loopne
or
test
or
push
lahf
push
dec
mov
add
ljmp
lcall
aad
dec
es
mov
xorl
dec
jecxz
pop
jns
mov
cwtl
das
cmp
in
xor
aad
das
leave
imul
pop
mov
push
lock
sub
scas
mov
and
sub
pop
pop
outsb
int
in
imul
call
xchg
xlat
and
jle
pop
adc
sub
es
cmp
and
sub
jo
push
sub
inc
xchg
xlat
mov
dec
sub
imul
xchg
sub
jl
sahf
daa
sub
sub
or
andl
int3
mov
ljmp
push
imul
or
lods
stc
jno
ror
int
ljmp
int3
cmpsb
fildll
popa
int
or
mov
data16
dec
dec
ljmp
cs
rorl
and
push
mov
lods
jp
sub
aas
sub
je
in
movsl
int
mov
pusha
out
push
out
out
pushw
movsl
dec
add
hlt
cs
and
and
dec
push
sahf
movsl
add
addr16
mov
ljmp
adc
pop
ljmp
adc
mov
fcom
mov
jmp
sbb
shrl
hlt
arpl
out
and
push
adc
ds
mov
stos
out
xlat
das
dec
jmp
insb
sbb
pushf
out
movsb
in
in
leave
xor
sub
sbb
mov
mov
mov
test
mov
dec
das
fwait
das
and
popf
xchg
dec
ret
fcom
ret
pop
and
arpl
sbb
sbb
mov
mov
inc
dec
pop
into
aas
cs
add
adc
xlat
sub
pop
rol
inc
xchg
test
add
xchg
and
aad
call
dec
lods
dec
dec
out
push
leave
mov
sub
setnp
and
pop
jmp
mov
adc
loop
leave
mov
sbb
ror
es
std
pop
lcall
gs
mov
push
shr
adc
fwait
lods
dec
insl
pushf
mov
loop
das
dec
mov
lods
test
sub
add
push
add
jg
pop
inc
and
movsl
shlb
cmp
jnp
in
mov
dec
popf
stc
sub
sub
aaa
sahf
mov
cmp
pop
scas
fsubr
stos
call
push
jns
pop
mov
rcrl
dec
out
dec
add
mov
es
icebp
in
push
scas
xchg
mov
aad
pop
jmp
subb
bound
out
adcl
dec
jnp
jmp
add
sub
xchg
jbe
hlt
imul
loop
sub
push
scas
sub
std
in
cmpsb
or
push
dec
into
fisubs
push
into
push
fcmove
daa
dec
fcoml
pop
xchg
lock
mov
daa
aas
push
adc
stos
cmc
fadds
cld
in
mov
jmp
out
pop
cmpsb
mov
in
or
mov
mov
es
test
inc
and
loope
pop
or
inc
std
fcoms
call
mov
aas
xchg
pop
pop
jmp
sbb
dec
push
lcall
stos
es
stos
sub
push
lret
subb
jmp
rorl
in
inc
xchg
inc
add
ud2
mov
loop
xchg
mov
push
aam
lret
movsb
and
inc
fcomps
sub
pop
loop
pushf
xchg
sarl
shlb
fildll
push
pop
fisubl
loope
fisubrs
out
adc
xchg
out
sub
xchg
icebp
pop
push
add
imul
and
in
daa
fidivrs
pop
push
sub
cmp
inc
xor
dec
cltd
vmovapd
out
jo
es
fimull
adc
adc
jl
push
jo
xchg
push
dec
pop
lret
lods
xchg
dec
sbb
pop
pop
jp
in
pop
push
in
jmp
push
int3
dec
mov
cltd
sub
adc
stos
inc
scas
mov
imul
in
out
out
xchg
shlb
subb
and
adc
pop
inc
inc
cmp
roll
jl
sub
xchg
inc
ds
sub
imul
pop
pop
ja
or
dec
ss
push
aas
mov
or
pop
mov
push
xchg
or
daa
and
xchg
cltd
test
in
inc
mov
mov
dec
jae
or
cld
cmc
or
dec
sbb
and
std
dec
in
jae
xchg
cs
jle
insb
xchg
sbb
lock
cmp
inc
jge
mov
stos
gs
lea
mov
lods
imul
sub
fisubrs
lret
jns
cltd
ret
mov
rcrb
pop
or
lods
mov
xchg
lods
mov
mov
sti
pop
and
iret
cmp
inc
xor
sti
xchg
fwait
movsb
pmuludq
dec
lret
push
inc
into
pop
ret
xorl
fwait
push
inc
sub
nop
fmuls
dec
loop
xor
xchg
les
in
imul
fmull
push
negl
stos
incb
and
shr
push
stos
jg
jl
cmpsl
scas
rcrb
test
mov
test
je
sub
inc
add
jl
int
out
mov
jle
jno
jae
dec
leave
jo
lahf
enter
lods
mov
ret
dec
sbb
dec
sub
cmp
or
lea
inc
xor
pop
in
pop
int
inc
fldt
sti
scas
push
loope
data16
fisttpl
pop
push
push
pop
or
push
mul
int3
pop
jo
fwait
push
lahf
mov
packssdw
scas
or
loop
push
pushf
mov
cmp
pop
daa
out
push
pop
push
or
mov
idiv
xor
ret
pop
dec
xchg
push
add
rcrw
push
imul
gs
jno
aaa
mov
insl
lods
cmp
cmp
lret
shrb
mov
mov
jo
js
xchg
xchg
bound
mov
dec
dec
push
lcall
das
fmull
dec
gs
jns
mov
pusha
scas
mov
int
loopne
cmp
and
out
int
outsb
lret
daa
mov
out
inc
lea
sbb
inc
pop
inc
mov
pop
int
and
test
outsb
jmp
into
xchg
mov
sub
pop
inc
pop
jl
cmpsb
sbb
fcomps
sbb
push
addr16
imul
mov
mov
or
in
xchg
mov
xor
in
or
scas
psubsb
and
adc
or
push
outsl
dec
in
inc
femms
cmp
inc
sti
cmp
bsr
add
into
scas
cltd
and
cwtl
sbb
fwait
xchg
sahf
jl
sub
lea
mov
dec
adc
pop
push
jbe
cmp
xchg
jmp
and
pop
xor
lea
sub
adc
dec
add
cltd
cmp
xchg
lock
test
pop
and
jns
stos
je
jp
lahf
add
jg
and
pop
jge
das
rclb
out
in
into
push
sbb
jmp
mov
jmp
mov
lret
adc
je
xor
mov
mov
dec
cmp
xchg
jae
or
pushl
sub
sub
xchg
pop
sub
mov
daa
push
std
lahf
sar
inc
imul
cld
sub
orb
add
pop
jmp
sbb
ja
imul
sub
push
enter
stos
jno
push
icebp
in
ljmp
jmp
pop
cwtl
cmp
mov
out
push
scas
cmp
out
mov
mov
cmp
xchg
pop
xchg
cmp
icebp
fmuls
cld
jnp
movsb
test
or
sbbl
cli
dec
movsb
stc
cli
aas
cmp
or
cli
sub
fldl
mov
add
nop
pushf
mov
sbb
mov
pop
data16
pop
sub
in
adc
push
lret
fdivl
jns
dec
sub
stos
ja
xlat
push
cmp
test
adcl
sbb
dec
jmp
jmp
daa
into
test
testb
popf
add
mov
arpl
push
adc
inc
insl
xlat
dec
mov
jg
enter
adc
push
rcll
ret
repz
lret
xchg
out
scas
pop
lahf
loopne
enter
adcb
insb
jns
movsl
or
lods
insb
push
sub
movsl
cmpl
stos
sti
sub
loopne
jle
mov
jae
and
test
and
movsb
pop
mov
fisttpl
int
inc
scas
or
orb
inc
leave
inc
lret
add
pop
out
loop
ja
ja
mov
pop
mov
adc
daa
and
push
out
movsb
sub
xchg
push
sub
mov
jl
and
add
in
stos
dec
lods
cs
imul
xchg
push
shlb
in
fsubrp
sbb
sahf
outsb
dec
dec
push
push
mov
or
lock
outsb
mov
pop
out
push
outsb
outsb
push
icebp
out
fwait
cs
mul
push
loop
mov
push
dec
in
in
in
inc
cld
out
cmp
mov
shr
stos
push
cltd
mov
mov
repnz
push
or
and
and
xor
out
mov
mov
mov
popa
scas
pop
cli
sub
adc
jo
adc
outsb
andb
mov
jecxz
scas
ja
in
js
pushf
in
aad
out
cs
sbb
fsubr
mov
cli
ljmp
inc
rol
xor
imul
and
and
sbb
dec
xlat
dec
mov
dec
adc
lds
push
cmp
out
in
sub
das
pop
lods
ds
fwait
mov
cmp
sub
cld
jns
jne
out
sub
jne
cld
sbb
aad
test
inc
cltd
jo
aaa
fistpll
aad
clc
std
data16
dec
jl
idivb
addr16
test
mov
divl
or
ds
cmp
insl
add
dec
test
push
mov
testl
sub
cmpb
add
mov
push
xor
in
imul
xchg
mov
xchg
or
mov
adc
aaa
mov
sub
lahf
cwtl
mov
mov
sub
clc
and
ljmp
pop
pop
scas
mov
cld
in
cmc
fildll
stos
inc
jecxz
push
sbb
add
pop
sbb
mov
mov
outsb
cli
lahf
les
scas
mov
jle
sub
and
pop
lods
call
sbb
leave
imul
mov
mov
scas
out
sub
das
hlt
in
sub
imul
add
cmp
out
ja
scas
psubusw
mov
mov
into
and
int3
jmp
jmp
stc
ror
fisubrl
push
sbb
jmp
insb
jmp
dec
xchg
or
in
cmp
inc
les
cmpsl
fnstenv
and
push
inc
mov
push
lcall
jo
mov
mov
mov
mov
popa
ds
lea
adc
dec
in
into
xchg
push
xchg
int
pop
pop
sub
ljmp
lea
cwtl
int
push
loope,pt
jne
jp
pop
mov
or
mov
movsb
arpl
jle
pop
aam
cmp
sbb
in
pushf
enter
ss
mov
loopne
xchg
mov
cmp
out
mov
dec
das
lret
adc
aam
pop
sub
int3
jmp
pushf
dec
xchg
jno
cmpsb
inc
fdiv
js
cmpsb
shlb
clc
js
push
scas
push
stos
sbb
xorl
test
js
sahf
lds
mov
call
mov
xlat
dec
in
dec
jp
je
and
xchg
or
jns
cmp
ljmp
repnz
mov
sub
into
adc
daa
jo
jg
dec
sahf
mov
dec
push
inc
mov
xchg
adc
cwtl
mov
notl
aas
nop
mov
icebp
adc
pushf
mov
dec
into
jns
dec
test
sub
and
mov
cmpsb
lock
out
scas
sbb
data16
std
pushf
ret
adc
cwtl
mov
mov
pop
mov
lock
ror
movsl
xchg
sbb
lods
movsl
mov
into
sub
sub
sub
aas
shl
iret
mov
xchg
cmp
dec
stos
push
lods
loope
or
mov
mov
fadd
and
and
pop
cmp
jp
orb
sub
sub
leave
xchg
dec
sti
push
pop
loopne
lods
pop
ljmp
mov
repz
push
sar
enter
lods
cmp
jge
ret
sbb
cwtl
ljmp
jae
lea
lea
outsl
in
mov
pop
jbe
hlt
pop
dec
cmovae
and
push
ret
fdivl
sbb
mov
bound
into
gs
xlat
repnz
pop
sbb
jecxz
lcall
subb
and
jbe
aam
into
mov
add
lea
pop
jo
push
sub
lret
insl
sub
das
sbb
insb
push
in
repz
sub
xor
repz
mov
mov
mov
or
imul
push
imul
push
fadd
mov
lret
ja
mov
push
lods
cmpsb
lods
pop
jp
mov
mov
and
gs
jo
gs
pop
andb
push
adc
ds
sub
mov
sbb
cmp
mov
in
dec
pop
lods
scas
out
jp
daa
mov
or
pusha
lods
jne
mov
adc
jl
int3
fmull
sbb
lods
mov
xchg
aad
insl
inc
pop
js
mov
jg
das
outsb
adc
insb
lods
push
push
into
ficoml
popf
lea
sahf
mov
imul
dec
cli
push
xor
xchg
mov
and
push
sub
test
aad
pusha
out
push
mov
stos
loopne
pop
cli
dec
adc
lret
cmpsb
fisubs
push
dec
into
ja
dec
lret
sub
sti
in
pop
pushf
mov
fmull
rol
pop
scas
sbb
scas
lods
xor
das
aad
fdivp
into
mov
or
scas
loop
sbb
pop
in
sub
movsl
push
pop
stos
out
ficoml
aas
lcall
sbb
xchg
cmp
xchg
cmpb
xchg
dec
out
push
pop
pop
add
and
ss
pop
negl
xchg
das
popa
lret
mov
jb
jle
rorl
inc
pop
lods
cmpb
out
pmaxub
push
sub
sub
mov
lret
dec
fsubr
mov
push
inc
js
dec
arpl
in
push
xchg
xchg
fldt
lret
push
movb
scas
mov
fsubrl
lea
xchg
push
iret
xchg
cmpb
sub
movsl
dec
xchg
xor
mov
loop
fistpll
mov
mov
cmp
dec
mov
push
mov
mov
stc
out
pop
sub
and
or
sub
dec
insl
jge
rcl
or
lea
lret
inc
xchg
lods
jl
pop
push
mov
pop
pushf
rcrl
mov
lret
mov
cmpsb
gs
adc
xchg
jmp
in
jg
popa
stc
sbb
lods
adcb
pop
and
stos
je
mov
popa
mov
lret
mov
mov
std
outsb
sbb
iret
pop
das
mov
in
loopne
or
sbb
mov
das
pop
data16
dec
xchg
insb
imul
dec
xor
mov
dec
scas
or
ljmp
sub
push
stos
mov
xchg
and
push
scas
outsb
sub
js
outsl
outsb
jg,pn
scas
and
mov
dec
mov
xchg
cs
jnp
loopne
push
inc
dec
jno
scas
bound
fcmovne
sbb
pop
mov
mov
out
mov
out
les
adc
push
daa
xor
sub
mov
xor
push
in
pop
dec
frstor
loope
bswap
lods
add
mov
inc
sub
sub
cs
inc
mov
pop
sub
xchg
lods
mov
cwtl
insb
daa
sub
sar
daa
mov
xchg
dec
in
mov
push
ja
push
pop
pushf
dec
sub
dec
ja
dec
sbb
idivl
jo
scas
shr
or
adc
leave
pop
data16
movl
inc
loopne
sub
mov
mov
std
call
xchg
adc
push
dec
into
lods
ljmp
das
dec
cs
out
cmp
data16
shll
ret
es
andb
push
lods
scas
and
aaa
lods
insb
das
lea
addr16
pop
mov
scas
cmpsb
mov
inc
mov
lods
mov
out
popf
pop
bound
dec
movsl
sbb
ja
jp
adc
mov
popl
jle
in
shrb
testl
xchg
cmp
stos
inc
repnz
xchg
test
lret
inc
fiaddl
pop
in
loop
lcall
inc
daa
push
or
test
aas
call
xor
or
mov
and
fwait
sub
ret
repnz
pop
dec
mov
adc
pop
out
xchg
fdivl
out
push
ljmp
jg
movl
sub
inc
pmullw
bound
lds
lea
mov
sti
enter
lcall
lea
testb
stos
jg
xor
cs
pop
dec
cld
jle
xor
mov
dec
jae
and
cld
dec
out
in
pop
xchg
shrb
ljmp
test
mov
lret
out
pop
testb
xor
je
jmp
shrl
ss
jmp
push
and
movl
mov
sub
dec
jns
jp
je
test
sub
or
adc
cld
call
dec
mov
cmp
movsl
outsb
and
lea
int
or
sub
adc
lret
push
push
push
sub
fldcw
dec
scas
loop
or
les
xchg
out
dec
lods
xchg
sbb
dec
test
inc
ljmp
xchg
mov
notb
sbb
sub
pusha
pushf
inc
clc
test
scas
xchg
jmp
lret
adc
or
insb
and
dec
or
push
mov
sub
fisubs
popf
jnp
adc
stos
out
sub
fisubrl
push
dec
dec
ja
pushf
dec
stos
xchg
mov
inc
sbb
les
outsb
push
mov
push
daa
dec
cld
sub
cmp
sub
add
inc
adc
cld
inc
or
lods
pop
mov
or
or
and
lea
lcall
data16
pop
repnz
out
into
adc
fdivp
jae
rclb
rclb
shrb
pop
xchg
outsb
mov
stos
fidivl
jecxz
and
xchg
mov
xor
jbe
icebp
aas
cmp
cmpb
and
mov
pop
sub
outsb
mov
jo,pt
sti
sub
mov
jo
or
sbb
add
mov
ja
pop
push
js
sahf
or
push
mov
mov
scas
data16
push
dec
pop
dec
xor
ds
jmp
push
in
nop
gs
sar
loop
stc
push
decb
in
out
mov
dec
lgs
mov
sub
fcoml
test
jns
repnz
fisubrs
add
cmpsl
cmp
mov
das
div
mulps
dec
mov
mov
sbb
or
stc
stos
jmp
orb
lahf
xchg
push
out
daa
or
aam
dec
dec
mov
or
notb
jo
mov
movsl
shrb
dec
mov
add
and
push
mov
call
out
fucomip
movl
bound
cld
lods
repz
flds
mov
aam
push
nop
insl
lods
fwait
cmpsl
push
cwtl
ss
or
mov
mov
mov
in
lret
xor
and
inc
pop
jnp
cmp
lods
cmpsl
cmp
cli
pop
xchg
mov
pop
xor
int3
insb
or
cmp
neg
imul
rclb
pushf
xor
jno
sub
jl
cli
test
or
cltd
in
test
es
adc
into
or
mov
lods
jo
cli
push
notl
jecxz
fcomi
jl
std
insb
xorl
cmp
xchg
xchg
inc
scas
push
ret
and
dec
leave
sub
clc
lret
mov
jbe
je
sub
cmp
push
leave
ret
jmp
and
mov
cs
and
mov
push
daa
push
lret
mov
mov
ljmp
sbb
in
and
jnp
push
mov
pop
xchg
and
mov
out
adc
cmovs
xor
sub
mov
dec
repz
sub
jno
cs
lock
dec
mov
sub
stos
mov
popa
mov
push
loopne
das
mov
xchg
and
fmuls
test
push
test
sbb
flds
sbb
and
inc
cmpsl
push
lret
getsec
mov
push
dec
sub
je
xchg
repnz
push
xchg
fadd
nop
sbb
dec
out
xchg
mov
mov
out
popf
pop
cmp
mov
incb
call
sub
jp
add
push
lea
decb
jae
mov
dec
ljmp
push
insb
dec
jecxz
cmpsl
jl
addr16
incl
jbe
mov
push
mov
cmp
add
out
cltd
hlt
int
ja
or
xlat
loope
movsb
dec
out
cltd
xchg
in
call
loopne
lahf
mov
dec
out
sub
push
test
mov
pop
aaa
add
push
fimuls
jp
jmp
dec
or
mov
push
lret
xor
lods
mov
jge
hlt
lahf
pop
mov
xor
mov
sti
cmp
mov
push
imul
test
or
mov
jne
xchg
push
mov
cmc
outsb
jp
jecxz
jg
sti
jmp
mov
add
dec
sub
aam
inc
xor
pop
pop
outsb
xchg
xchg
ret
xor
test
jge
fsubrl
test
pop
cltd
xchg
addr16
sbb
dec
xor
loopne
fstps
leave
pop
cld
dec
dec
lahf
fcomi
mov
mov
enter
repz
mov
in
test
push
iret
inc
sbb
imul
adc
jo
jbe
faddl
mov
aas
out
sahf
addr16
das
ss
icebp
ds
dec
mov
mov
mov
lret
je
xor
mov
das
insl
inc
enter
push
insl
sub
inc
xor
lcall
sub
enter
mov
pushf
mov
mov
or
adc
dec
stos
fnstsw
push
fs
data16
shlb
mov
out
pop
xchg
dec
bswap
les
xor
and
add
gs
push
xchg
cmpsb
or
lcall
imul
ja
in
lret
jo
lock
les
insb
ljmp
insl
scas
inc
jle
fimuls
xor
xor
sbb
ficoms
fwait
push
sub
mov
sub
pop
add
pop
loopne
push
mov
sub
mov
mov
out
dec
ds
cmp
andb
hlt
xor
mov
stos
sbb
sub
inc
pop
int3
decb
outsl
adc
pop
rcr
and
bound
pop
emms
rorb
jb
cltd
subl
lret
mov
mov
or
and
mov
jmp
add
fmulp
and
jecxz
pop
jns
loope
out
sbb
out
mov
mov
out
xor
push
paddsw
pop
dec
imul
in
stc
rcll
fst
fwait
jbe
cmp
pop
or
mov
push
push
scas
cmp
lret
xchg
add
in
into
push
mov
loope
or
push
lods
mov
push
lods
and
inc
lea
movsb
dec
jle
pop
aas
cs
xorl
add
stos
cmpsl
bound
scas
ss
popa
mov
les
mov
jns
mov
in
dec
inc
out
mov
jne
xchg
insl
ja
or
enter
push
scas
lods
cli
pop
inc
out
mov
movsl
and
shrl
lods
dec
imul
loop
loope
sub
scas
mov
push
loop
loopne
into
inc
insl
push
test
dec
xor
sub
outsb
loop
scas
cmp
addr16
xchg
xchg
movsb
call
ss
out
ds
fldcw
out
cld
xor
adc
mov
pop
inc
into
pop
inc
xchg
mov
cmp
jne
insl
movsl
push
lret
jge
int3
pop
out
aas
fnstcw
into
or
leave
sbb
pop
into
lahf
fdivrl
xor
jae
mov
push
sub
loope
sub
jle
lods
stc
ja
ja
mov
or
or
push
pop
xchg
dec
bound
sub
push
repz
insb
sbb
lahf
outsb
andb
pop
inc
mov
lret
test
cmp
mov
ljmp
and
stos
rcr
xchg
cmp
mov
in
dec
dec
lock
jmp
lods
and
es
sub
add
add
lea
xchg
add
pushf
rclb
add
xchg
dec
into
insb
jnp
js
in
mov
xchg
xor
push
test
inc
mov
jbe
push
xchg
flds
popf
sub
and
or
jge
loope
dec
ss
jno,pn
lods
ss
popf
xchg
loopne
hlt
jl
xchg
add
into
jmp
mov
cwtl
pusha
jnp
jno
int
popf
movsl
out
imulb
pop
ret
scas
sbb
cli
jo
loope
outsb
mov
push
jp
inc
lahf
mov
dec
dec
jne
bound
sub
enter
out
mov
mov
call
les
fisttpll
rorl
je
push
lods
inc
dec
jb
rolb
test
lea
push
and
xlat
imul
pop
push
adc
mov
and
add
aas
test
leave
les
jmp
push
ja
in
aaa
add
pushf
xchg
xor
jns
jg
jae
daa
ret
out
pop
and
enter
xor
sub
dec
pop
pop
stos
imul
pop
push
pop
sbb
sbb
scas
cmp
xor
sahf
pop
sub
cmpsb
addr16
data16
imul
cmpsb
cmp
pop
stos
outsb
bound
push
inc
mov
push
stos
adc
dec
test
sub
ljmp
jns,pn
xchg
mov
out
cltd
sbb
movsb
pop
sub
xchg
inc
repnz
sub
sub
imul
inc
pusha
ja
mov
sub
cmp
lahf
dec
hlt
lahf
push
sub
mov
sub
mov
ror
ja
dec
loop
out
mov
bound
mov
test
ficompl
pop
adc
cmpsb
mov
adc
ss
mov
pop
fmuls
mov
ja
popf
mov
sbb
dec
xchg
scas
es
lret
dec
mov
js
cmp
aam
lea
push
xor
sbb
rolb
and
sub
sarl
push
mov
jnp
ljmp
pop
lods
push
lcall
iret
lea
and
pop
daa
ret
movntq
sub
xchg
jo
ljmp
pop
scas
pop
sub
stos
xor
sub
insl
inc
adc
out
es
dec
ds
sub
or
push
xchg
in
sub
push
add
adc
sahf
ds
dec
out
hlt
push
push
inc
test
dec
push
and
xchg
test
mov
pushf
dec
add
das
in
lock
pusha
pusha
data16
addr16
jo,pn
cmp
pop
jge
shrb
es
int3
jbe
shl
lret
cmp
jno
xchg
data16
sub
sub
and
and
dec
sub
loop
jle
pusha
fadds
xor
sbb
jecxz
pop
sbb
push
sub
fiadds
jecxz
push
cmpl
fs
and
jmp
pop
pop
inc
and
push
pop
aam
testb
ss
jmp
scas
adc
push
lods
aam
das
stos
mov
data16
add
mov
ja
in
xchg
and
clc
lea
push
or
pop
outsb
outsb
push
loop
fildl
lea
shrl
xchg
add
adc
iret
dec
jle
add
xchg
sti
loopne
cmc
cmp
cmpsl
pop
pop
pop
mov
fisubs
outsb
jnp
cmp
adc
testb
sub
pop
jmp
cmp
sar
push
std
out
or
cmp
sbb
test
rolb
adc
cmc
dec
cs
out
fldcw
sub
dec
or
dec
lcall
push
leave
pop
hlt
test
and
lods
jl
lods
outsb
ljmp
dec
fnstsw
mov
ds
push
stos
cmc
sbbl
ss
adc
cmp
mov
push
dec
inc
sbb
std
not
rep
pop
ds
aas
xlat
data16
jecxz
rorb
jae
out
aas
sbb
lds
mov
insb
jl
sti
incl
jg
stos
add
inc
dec
mov
popf
mov
xchg
mov
ja
arpl
xchg
and
push
adc
or
arpl
lret
pop
loopne
jl
lahf
lods
sti
cmp
mov
out
out
das
xchg
push
sub
arpl
mov
lret
loop
mov
das
data16
test
mov
loop
fidivl
arpl
pop
jne
ret
push
pop
les
jg
insb
iret
adc
outsb
scas
ss
and
push
stos
roll
mov
imul
or
and
lds
push
and
call
xor
in
stos
ss
cmp
stos
sub
mov
push
stc
data16
adc
lods
jmp
lcall
aaa
comiss
xchg
scas
mov
nop
jg
shrl
lret
cmpsl
mov
mov
mov
mov
stos
jno
sub
mov
push
dec
cs
adc
nop
imul
cmpb
lea
xchg
dec
ret
scas
mov
fwait
outsb
and
into
iret
vmaxpd
sarl
mov
or
aad
mov
pop
cwtl
in
fsub
mov
mov
and
inc
jo
loope
jg
dec
loope
xor
jbe
xchg
lods
dec
adc
pop
ret
pop
daa
sub
lods
push
cmp
in
outsb
jg
cmpsl
push
loop
xchg
pop
dec
int
push
imul
out
pop
leave
insl
cwtl
cmpsl
push
jg
mov
out
mov
out
sub
dec
insb
push
cld
and
subl
and
iret
jg
mov
push
or
cld
mov
push
jge
enter
insl
xchg
lock
cmp
mov
mov
iret
clc
cmp
or
ljmp
dec
out
dec
rorb
jp
dec
inc
mov
aad
mov
sahf
pop
sbb
cwtl
dec
stc
adc
xor
scas
xchg
mov
adc
in
hlt
lret
xchg
dec
push
mov
movl
mov
mov
dec
inc
adc
xchg
leave
mul
jmp
sbb
scas
sub
dec
popf
jno
sub
cli
lds
adc
pop
xlat
jl
popf
lcall
jg
in
and
sub
faddl
mov
or
sbb
or
pop
pop
cmp
xor
mov
mov
sub
and
ljmp
pop
les
push
dec
test
mov
imul
test
iret
dec
sub
ljmp
xchg
xchg
xor
push
inc
dec
or
scas
and
lret
sti
or
push
bound
ds
cs
pop
and
and
add
push
into
mov
mov
sti
jge
inc
inc
cvtps2pi
cmp
addb
loop
ljmp
out
cmp
es
inc
mov
jbe
cli
inc
add
sub
cs
jne
aaa
pop
stc
test
adc
mov
pop
sub
push
les
add
push
add
or
push
adc
and
mov
cmp
jne
dec
cmc
cmovs
push
sbb
or
cmp
bound
mov
adc
stos
jnp
xor
pop
js
out
sub
push
jecxz
and
sub
cli
xchg
jle
cmp
rcll
inc
mov
loopne
add
jae
fildll
inc
push
popa
cmc
adc
daa
js
gs
dec
xchg
mov
mov
neg
cmp
dec
dec
int3
or
mov
xchg
mov
lea
pop
mov
sbb
shrb
idivb
jnp
outsb
dec
lods
mov
mov
lcall
sub
cmpsl
push
ficompl
fdivrs
movsb
push
xor
divps
call
or
add
mov
scas
sub
outsb
fdivp
xchg
out
adc
mov
sub
scas
hlt
jns
test
insb
jo
and
pop
in
out
out
outsb
ret
push
fsubrs
pop
pop
mov
adc
std
repz
out
push
and
std
pop
in
rcl
mov
mov
sub
mov
sub
sub
jg
push
ja
mov
movsb
and
adc
push
mov
mov
ja
lret
scas
xor
push
pop
or
cs
sbb
add
cld
xchg
add
js
adc
enter
jl
inc
inc
dec
mov
push
cld
icebp
loopne
aad
sub
inc
dec
mov
mov
lcall
or
inc
cmp
xor
pushf
push
pop
fbstp
xchg
pushf
lock
decl
dec
stos
adc
mov
add
std
push
jg
sbb
inc
pop
faddp
into
pushf
js
in
ret
push
inc
dec
jns
ja
xor
jl
je
test
arpl
mov
mov
cwtl
dec
mov
push
icebp
hlt
jo
adc
fcmove
pop
mov
aam
ljmp
insl
fsubr
mov
inc
ljmp
add
mov
push
aam
sub
jle
in
jmp
pop
or
icebp
lret
jne
push
push
pop
push
cld
popa
arpl
mov
lods
xor
sub
pop
push
lea
sbb
push
jns
adc
sarl
cwtl
stos
negl
xlat
cmovnp
sti
addl
sahf
sar
pop
jmp
jno
mov
pusha
aas
fwait
in
mov
les
lods
sub
pop
les
psubusb
mov
enter
jmp
push
leave
adc
movsl
adc
dec
je
jbe
call
sbb
inc
or
insb
or
cli
imul
xor
jl
cli
jl
leave
push
mov
repnz
xor
into
dec
jbe
pop
xor
popf
scas
cli
fistps
push
pop
xor
mov
mov
js
pop
xor
fcompl
into
imul
out
imul
movsb
mov
mov
xchg
or
mov
mov
mov
sub
adc
cmp
or
mov
lret
mov
outsb
fdivrl
daa
out
cmp
pop
jmp
jns
aad
dec
adcl
icebp
mov
insl
aad
push
insl
mov
int3
mov
sarl
mov
pop
xchg
adc
sahf
test
push
popf
cld
pop
movsl
imul
popf
imul
inc
lret
les
gs
jp
sub
mov
xchg
push
cld
cli
fisttpll
or
mov
std
pop
pop
fisubl
out
fsubrl
jge
test
inc
popl
sbb
repz
cmp
cwtl
or
and
mov
jg
je
mov
sub
pushf
sub
cltd
push
cs
out
rorb
out
push
out
inc
incl
stos
out
out
push
sub
subb
lods
push
das
jns
fsubp
scas
stc
add
mov
adc
movsl
push
rclb
mov
xor
dec
addr16
fsubrl
or
add
jecxz
pop
cmp
add
push
sbb
adc
xchg
lea
out
lret
ja
out
mov
fnstenv
lret
leave
jae
jg
push
lods
lret
xchg
xchg
push
out
outsb
shl
cs
or
icebp
xor
jle
test
daa
dec
subb
sub
xchg
in
sub
bound
scas
adc
lods
lret
jne
data16
in
pop
daa
iret
cmp
into
lock
mov
and
xorb
dec
insl
dec
cmp
test
cmp
dec
push
push
test
loopne
push
loop
or
out
sahf
popa
pushf
outsb
popa
sbb
dec
fistpll
test
daa
imul
pop
dec
mov
lret
dec
outsb
negb
dec
xchg
lea
outsb
push
and
and
aaa
xchg
jne
inc
and
lret
fnsave
pop
mov
cmpsl
daa
sbb
movsb
stos
pop
xor
lods
lret
adc
daa
outsb
push
bound
cs
stos
bound
mov
sub
scas
pop
dec
adc
testl
out
imulb
out
outsb
icebp
push
sub
sub
pop
imul
adc
push
outsb
dec
aas
pusha
xor
push
sti
pop
jno
sbb
and
loope
lret
mov
loop
pop
jge
jecxz
mov
daa
sub
or
les
sub
sahf
dec
xchg
sahf
cli
push
pop
sbb
outsb
mov
out
popa
loop
xchg
enter
pop
xor
aas
add
lret
inc
movsb
or
movsl
int
push
loopne
or
mov
daa
and
xchg
jne
sub
cli
into
scas
xchg
lret
push
sbb
push
test
xchg
in
dec
pop
jl
daa
subb
dec
testl
loop
pop
mov
out
loope
fsubr
es
lret
inc
fs
inc
lea
push
mov
mov
push
imul
test
daa
sub
fdivr
lret
add
inc
sub
inc
inc
or
sbb
outsl
xor
cmp
shll
and
and
lret
sub
jge
imul
jmp
inc
xchg
xchg
lea
and
adc
add
cmp
fidivrl
dec
push
scas
mov
mov
mov
pmaxsw
sbb
into
pop
sub
sbb
mov
cmp
mov
addl
push
lret
lret
ret
fpatan
mov
pop
xchg
push
mov
out
sbb
out
rol
out
inc
addr16
pop
push
gs
repz
push
out
std
mov
sarl
jge
mov
jmp
imulb
inc
dec
lods
sub
add
adc
cmp
mov
mov
sub
push
fisubs
out
ss
push
lods
jo
sbb
pop
aad
lods
push
push
xchg
mov
lods
cmc
push
lods
mov
dec
xchg
or
xor
xor
and
sub
out
jae
mov
ret
push
inc
leave
dec
jne,pn
popa
and
jmp
pop
push
pop
out
adc
cmpsb
add
lods
inc
or
sub
gs
lods
and
frstor
push
lods
adc
gs
fcoml
arpl
data16
xchg
repnz
push
loop,pn
and
pop
rcrb
push
ret
cmp
fwait
aas
adc
push
or
rep
out
mov
fsubp
jmp
daa
jle
cmpb
cmp
je
jno
test
lods
dec
loop
aas
aam
imul
xorl
pop
or
insl
lock
in
out
sub
pop
out
out
and
jmp
insl
xor
in
stos
jge
pusha
loop
dec
jmp
scas
fcompl
sub
sarb
sub
xlat
push
in
sub
jmp
add
push
movsb
xchg
inc
add
push
inc
in
jg
cmp
movsl
sub
pop
mov
inc
jecxz
loop
rorb
pop
rclb
inc
dec
jg
insb
ja
std
sbb
scas
jp
cmc
inc
mov
mov
dec
ja
and
fsubrs
stos
loope
out
in
adc
fidivrl
pushl
shlb
icebp
mov
or
sub
leave
adc
cltd
sub
pop
pop
popf
into
pop
pop
aas
inc
fcompl
fildl
outsl
mov
mov
shrl
test
mov
pop
imul
pop
data16
dec
lods
int
mov
arpl
sub
cld
jmp
sub
inc
or
mov
lods
sbb
dec
arpl
dec
xchg
pop
ja
js
mov
jp
aaa
ret
jge
pop
push
fidivrl
insb
mov
xadd
or
xchg
lcall
jns
mov
cmp
or
adc
pop
enter
daa
clc
aas
ret
rorl
or
cmpsb
in
xchg
jnp
clc
mov
sub
clc
add
lods
test
jmp
jl
mov
insl
or
stos
scas
ljmp
xor
insb
sbb
test
push
inc
int3
fstps
punpckhdq
push
aas
push
fimuls
pop
das
sub
push
loop
pop
jnp
lea
test
movsb
sub
mov
jns
rol
inc
outsl
xchg
cwtl
jl
in
mov
and
lds
outsb
fidivrs
pop
es
jge
and
sbb
mov
cld
loop
in
sub
cld
fadds
and
pusha
pushf
mov
sbb
aam
fsts
jmp
pop
pop
pop
ja
data16
inc
sar
and
in
call
mov
ja
push
add
les
loopne
scas
mov
push
mov
or
jmp
adc
mov
addr16
mov
xchg
sub
or
fisubrs
adc
aas
clc
pushf
cli
lea
je
dec
lds
jmp
pop
jbe
sub
push
packssdw
imul
daa
inc
stos
int3
out
insl
test
sbb
push
into
adc
adc
mov
dec
and
rcrl
mov
mov
mov
movsb
fimuls
out
pop
mov
fidivs
outsb
pop
jmp
jl
pop
push
inc
jg
or
in
pop
decb
js
outsb
push
sti
das
dec
xchg
adc
cmpl
ljmp
pop
and
bound
mov
into
mov
inc
inc
cmpsb
js
and
out
roll
push
call
into
cmp
test
cmp
add
push
inc
test
dec
cmc
or
xor
sub
stos
jge
out
movsb
daa
add
push
int
and
lret
daa
addr16
js
push
fiadds
lret
push
cltd
cmp
jp
out
test
test
jmp
dec
fisubrs
insl
fildl
sub
push
dec
mov
mov
enter
rep
xor
xchg
scas
test
jno
pusha
sub
lea
out
popa
lret
aad
fprem
imul
xor
out
sub
mov
daa
and
xchg
imul
sbb
mov
cli
mov
fdivp
std
mov
mov
out
icebp
xchg
test
lret
ficomps
ficoms
iret
out
outsb
xor
in
fdivr
insl
sbb
scas
outsb
mov
das
cmpsl
fimuls
out
cmp
into
dec
out
loopne
test
add
xchg
fdivs
scas
rcrb
sub
imul
push
pop
dec
push
in
int
into
cmp
push
imul
out
cmpsl
loop
insl
dec
call
sbb
stos
sub
dec
aas
loop
cli
cmpsl
into
outsw
jp
push
jne
icebp
jecxz
cmpsb
push
jge
lahf
xchg
lret
lcall
aam
push
sbb
mov
std
lret
je
dec
insb
repnz
push
bound
mov
pop
lret
cs
lcall
xchg
lret
sub
insl
cmp
mov
push
xchg
xor
hlt
lret
or
call
jo
imul
das
test
xchg
xchg
dec
adc
das
pop
sbb
or
push
pop
mov
test
call
inc
mov
out
fsubs
or
lock
test
xlat
in
sbb
push
aaa
rep
xchg
push
pop
add
jae
add
cmp
adc
pop
outsb
xor
insb
loop
mov
sti
mov
inc
icebp
clc
pop
loopne
mov
out
stc
and
jl
jg
pushf
mov
push
push
jle
and
sub
dec
lea
loope
pop
jg
ja
aad
sub
out
and
mov
jno
ja
loope
enter
push
int
push
enter
mov
out
mov
lret
cmp
fwait
clc
loope
lds
push
mov
cmp
push
mov
and
cwtl
add
mov
shlb
inc
fimull
rcrb
lret
jecxz
inc
fildl
inc
popf
xchg
call
ds
out
popa
cli
sub
inc
lcall
cmp
pop
lret
or
ret
mov
and
popa
loop
aas
sub
fdivrs
mov
mov
lret
pop
out
and
and
sbb
jp
fnstcw
dec
and
pop
and
xlat
jno
push
jns
ljmp
mov
mov
gs
fisubrl
and
sub
popf
and
mov
sar
sub
out
test
mov
dec
lock
push
fstpt
shl
mov
inc
movsb
loopne
cmp
lock
das
or
ljmp
adc
jbe
fisubrs
mov
pop
test
adc
jl
push
scas
cmp
jmp
test
mov
in
fimuls
cmp
mov
roll
out
imull
ficompl
mov
or
mov
mov
cli
cs
test
cs
mov
inc
dec
mov
pop
or
cmp
fimuls
mov
xor
sub
repnz
dec
jno
pop
leave
dec
mov
jne
jl
dec
inc
inc
fiaddl
xor
fisubs
lret
xor
sub
xor
out
lds
push
sbb
rcrl
mov
sub
insl
ret
mov
sub
or
test
sub
lret
or
negb
testl
add
cmp
into
jmp
push
scas
in
mov
mov
ss
sub
sub
mov
je
scas
pushf
insl
add
mov
cltd
test
xor
mov
fsubr
mov
push
ljmp
jecxz
jae
imul
loope
xchg
jns
lahf
fiadds
imul
sahf
lcall
into
push
lods
test
cmpsb
out
xrelease
or
ljmp
hlt
loope
push
jns
xor
je
cmpsl
xchg
es
push
in
add
adc
lea
and
stos
in
insl
sub
or
es
add
popf
and
in
dec
dec
fsubrl
call
sub
sbb
imul
fiadds
pushf
push
jne
cmp
and
into
lods
imul
push
movsb
push
xchg
fcompl
mov
lods
aam
adc
inc
ds
push
lea
fbstp
cmp
add
jle
adc
or
jl
add
ficompl
jl
mov
es
stos
cs
pop
into
stos
das
jmp
sub
dec
mov
jae
push
jmp
dec
adc
or
push
or
cld
cltd
jno
insb
sbb
mov
jg
dec
imul
lea
scas
xor
test
and
mov
les
jb
sbb
icebp
les
out
mov
outsb
imul
call
push
push
fs
jle
lret
rorb
lret
push
into
pop
stos
test
sahf
test
stos
mov
dec
jmp
in
nop
pop
mov
xchg
dec
je
sub
jp
movsb
fldl
cs
and
cld
sub
pop
shrl
call
outsb
out
push
pop
xchg
outsb
push
cld
push
into
dec
pop
aam
mov
fisttpl
or
iret
and
iret
xor
std
push
jo
inc
inc
jg
sbb
push
pop
fldcw
cmp
movb
das
cs
or
jnp
push
push
sub
cmp
in
or
mov
pop
jb
out
jb
mov
push
xchg
es
push
dec
aad
test
popa
mov
imul
shrb
jle
sbb
adc
into
dec
and
cwtl
dec
jnp
movsl
and
jo,pn
int3
imul
inc
cmp
jns
add
clc
loop
sub
add
cmp
push
out
mov
out
fcomps
sbb
sbb
push
enter
pushf
lret
mov
fisubrs
mov
sub
inc
jmp
mov
loop
ficompl
test
lods
cmp
push
push
xchg
ljmp
lahf
repnz
and
mov
push
int3
mov
std
inc
and
mov
daa
mov
repz
jo
dec
sub
inc
mov
mov
pop
inc
ficomps
push
cmp
pop
lea
or
insb
inc
ljmp
mov
add
mov
jl
add
pop
aam
fimuls
inc
daa
pop
cmp
mov
hlt
jge
and
cmpl
adc
insl
sub
dec
pushf
into
loop
scas
cld
mov
push
stc
cmp
mov
pop
mul
out
mov
scas
cmp
mov
sbb
ljmp
in
stos
cltd
or
pop
imul
mov
mov
xchg
cmp
sub
mov
jns
lods
fisubrs
ret
xchg
lret
and
add
ds
mov
xchg
int
sbb
mov
mov
pusha
sar
cmp
add
pushf
and
lcall
mov
out
push
or
in
push
push
jae
insb
inc
test
or
mov
xchg
insb
adc
rcl
into
mov
test
rcrl
jecxz
dec
inc
aad
imul
lea
lods
loop
rorl
push
rsm
mov
mov
pop
ljmp
jae
test
dec
ljmp
fnsetpm(287
lahf
cmp
add
add
cs
push
divl
mov
lahf
repnz
jns
hlt
test
sbb
jno
push
cltd
dec
push
jle
lret
sub
xchg
aad
dec
sti
frstor
les
or
lods
jb
mov
jmp
loop
dec
lods
pop
sub
pop
data16
push
cmp
lods
out
testl
int
insl
fimull
and
adc
cmc
lahf
sahf
bound
sarb
loopne
test
lds
mov
and
adc
cmp
sub
pop
xchg
dec
test
adc
cld
inc
jp
loope
cld
xchg
xor
ret
xchg
mov
sbb
cmp
ss
repnz
cmp
mov
nop
in
dec
sub
or
mov
mov
pop
insb
xchg
xor
in
test
sub
daa
dec
insb
and
dec
add
daa
dec
inc
add
cmpsb
jmp
pop
loop
mov
push
inc
jbe
ret
test
mov
and
rorl
in
xlat
in
mov
pop
dec
daa
dec
stos
and
inc
xor
and
push
dec
mov
ljmp
xchg
mov
or
loopne
sub
bound
gs
lea
or
test
dec
sahf
fsubrl
pop
pop
scas
jg
pop
dec
jl
jno
inc
jp
out
adc
lret
jns
bound
dec
ja
jbe
add
mov
aam
cmp
lods
pop
ljmp
hlt
lret
addl
xor
cmp
ja
cmp
inc
test
add
nop
in
int
pop
sub
stos
mov
out
clc
sub
cmc
iret
addl
movsl
jo
xchg
fadds
dec
dec
lock
cmpsl
add
sbb
xchg
adc
leave
jmp
xor
inc
imul
mov
cmp
sbb
push
mov
dec
mov
push
in
jae
pop
insl
pop
cmp
aas
push
sub
lahf
mov
jne
mov
out
sbb
pusha
sbb
fdivrp
movb
negl
shll
lods
sbb
mov
sbb
dec
dec
inc
cs
insl
pop
xchg
lahf
movups
mov
dec
loopne
ljmp
popf
insl
push
dec
mov
rcr
and
mov
or
inc
lea
aas
aam
push
insl
mov
aad
cmpsl
out
add
xchg
fdivrs
ja
ja
es
cmp
popa
or
mov
das
or
mov
push
cmp
cld
imul
sub
into
insb
in
shll
mov
add
lret
xchg
inc
dec
and
push
daa
fs
mov
inc
adcl
sub
jmp
cmp
cmpsl
outsb
pushf
pop
aad
outsb
enter
sbb
repz
xorb
push
mov
fsubr
inc
push
pop
adc
movsb
in
fisubrs
push
push
sub
imul
add
and
jae
imul
scas
adc
mov
sub
inc
push
out
mov
outsb
dec
outsb
mov
std
adc
mov
orl
movsl
out
cmpsb
dec
sbb
popf
inc
sub
test
pop
pop
pop
stos
orl
lods
out
scas
dec
dec
outsb
scas
lahf
cmpsb
push
outsb
cmpsl
pop
adc
out
pop
in
test
mov
push
cmpsb
dec
sub
popf
inc
sub
test
pop
dec
pop
stos
orl
lods
out
scas
dec
negl
add
outsb
and
fildl
mov
mov
cli
mov
sbb
popf
inc
sub
cmpsl
mul
data16
cmp
orl
stos
out
lods
dec
sbb
lods
popf
inc
sub
push
popf
gs
jl
adc
sub
fimull
mov
cwtl
out
jo
insl
cmpsb
dec
or
push
clc
out
test
das
push
stos
mov
sub
lods
jo
insl
scas
dec
out
scas
iret
lds
gs
adc
sti
loop
pop
sub
cmp
mov
cmp
movsl
jo
insl
cmpsb
dec
fnstcw
push
fsubr
test
das
pop
dec
stos
mov
mov
insl
scas
dec
dec
pop
scas
ffreep
outsb
jl
daa
adc
sti
loop
pop
sub
or
mov
cmp
movsl
jo
insl
cmpsb
dec
lret
mov
out
test
das
dec
stos
mov
stos
out
jo
insl
scas
dec
pop
pop
scas
out
lds
gs
adc
sti
loop
pop
sub
dec
dec
mov
outsb
ljmp
dec
js
cmpsl
mov
out
test
das
jl
stos
mov
dec
out
jo
insl
scas
dec
or
inc
outsb
jl
daa
adc
loop
pop
sub
call
ljmp
pop
insl
cmpsb
dec
pop
cmp
push
sub
test
das
or
stos
mov
mov
pop
popl
mov
enter
mov
int3
ja
mov
jp
xchg
out
pop
inc
jp
pop
jnp
pop
inc
jl
pop
jge
pop
inc
jle
pop
jg
push
inc
jo
push
jno
push
inc
jb
push
jae
push
inc
je
push
jne
push
data16
data16
shlw
data16
hlt
data16
cmc
data16
data16
mulw
data16
fldenvs
data16
data16
data16
frstors
data16
sbb
pop
jnp
pop
pop
jl
pop
pop
jge
pop
pop
jle
pop
and
push
and
push
and
push
and
push
scas
shrb
dec
push
dec
jne
push
dec
jbe
push
dec
ja
pop
pop
js
aaa
popa
jg
mov
out
movsb
mov
sbb
in
clc
lods
lock
lock
push
scas
lahf
mov
shll
filds
inc
rolb
inc
roll
xor
inc
mov
jg
pusha
add
lods
call
inc
jg
jg
sub
ja
mov
sub
jg
lea
addr16
cld
dec
fwait
test
or
inc
popf
xchg
mov
adc
aaa
xchg
adc
aad
sahf
cld
outsl
jne
incl
ljmp
mov
mov
or
addr16
jp
subl
mov
inc
add
xor
push
jnp
push
adc
es
scas
jo
sbb
movsl
push
call
les
in
xchg
xlat
aas
into
sub
dec
jns
mov
popl
push
inc
imulb
data16
mov
pop
push
and
dec
aas
push
out
lahf
pop
mov
dec
shlb
fcoms
ret
xchg
in
jb
je
xor
insb
inc
lahf
sub
inc
pop
or
cld
sub
and
imul
ljmp
call
adc
sbb
pmaxub
or
jecxz
cmp
mov
movsb
ficoml
push
popa
lods
xchg
mov
test
fwait
jb
das
jns
fisubrl
test
das
xor
mov
mov
sbb
dec
jmp
sub
call
dec
sub
mov
xchg
add
sub
pop
mov
ret
lods
fisubrs
loopne
sar
out
sbb
push
cmpsl
mov
jns
loop
sbb
push
cmpsl
mov
test
adcl
jl
cmpsl
mov
jns
loop
sbb
push
cmpsl
mov
ljmp
cmpsl
mov
jns
loop
sbb
push
cmpsl
mov
jns
fisttps
mov
mov
jns
loop
sbb
push
cmpsl
mov
jns
loop
sub
mov
mov
std
loop
sbb
push
cmpsl
mov
jns
loop
sbb
push
dec
out
sar
out
sbb
push
cmpsl
mov
jns
loop
sbb
push
cmpsl
mov
ljmp
cmpsl
mov
jns
loop
sbb
push
cmpsl
mov
fsubrp
stos
dec
add
xor
jg
mov
xor
outsb
fdivs
push
pushf
aad
and
and
pop
out
jo
mov
outsb
adc
out
jo
mov
outsb
adc
xchg
fsubrs
andl
mov
out
sub
stos
pop
sub
pop
adc
xor
xlat
and
cmc
out
jo
jl
pop
cmp
popf
inc
sub
and
es
fstps
orl
sub
sub
pop
sub
xor
push
jp
add
adc
out
and
inc
outsb
gs
pop
sub
mul
data16
sbb
orl
daa
out
sub
pop
sub
or
sub
out
sub
test
sub
or
mov
add
and
adc
sti
cs
and
dec
pop
and
leave
daa
cli
daa
out
sub
pop
sub
call
data16
lret
orl
popf
add
iret
push
lock
cmp
in
imul
and
pop
dec
and
outsb
sbb
daa
jo
insl
sub
cmp
push
sub
add
cmp
sub
dec
ficoml
fistpll
outsb
mov
pop
in
mov
orl
mov
xor
daa
out
sub
pop
sub
pop
sub
mul
data16
cmp
orl
popf
add
out
or
and
xchg
outsb
push
gs
dec
mov
and
sti
out
and
das
lcall
outsb
or
sub
insl
sub
cmp
mov
out
cs
or
and
cmpl
out
outsb
push
gs
dec
fstpt
push
sbb
and
das
ljmp
add
add
jp
pop
jnp,pn
pop
jl
pop
jge,pn
pop
jle
pop
outsb
jg
pop
jo
push
outsb
jno
pop
jb
push
outsb
jae
pop
je
push
outsb
jne
pop
jbe
push
mov
sub
ljmp
ljmp
fsubr
clc
ljmp
cli
ljmp
cld
ljmp
pop
fistps
ljmp
shl
pop
sarl
icebp
daa
mov
pop
lods
jle
pop
or
jo
push
or
jb
push
or
je
push
or
jbe
push
or
js
pop
or
jp
pop
or
sbb
and
cmp
sbb
sub
pop
fistps
pop
rcrb
pop
rcrl
pop
rcrb
pop
rcrl
pop
aam
hlt
sub
in
imul
fisttps
mov
gs
sti
or
and
nop
cwtl
insb
and
cmp
test
gs
lret
push
sbb
pop
das
ficomps
xor
sub
das
mov
out
sub
lds
dec
movb
mov
scas
movl
incl
fdiv
les
mov
mov
pusha
dec
repz
scas
pop
rcrl
adc
mov
mov
jnp
pmaxsw
and
sbb
insb
int
aas
out
xchg
les
push
aaa
mov
in
mov
xor
push
aam
push
lock
push
adcb
jns
in
jbe
jns
popa
pop
push
mov
sbb
fnsave
sub
roll
lret
outsb
fimuls
jae
dec
scas
ss
mov
mov
in
or
mov
decb
jp,pn
or
mov
and
xchg
insl
das
or
test
or
cwtl
outsb
mov
rcrb
jge
loopne
cmp
and
jnp
sub
outsb
inc
in
adc
les
clc
out
push
popf
out
mov
ret
daa
or
jecxz
jbe
out
cmpsb
push
push
arpl
sub
or
movsl
push
jl
lahf
int
xchg
adc
inc
and
insb
jne
scas
pushf
mov
bound
xchg
xchg
stc
cmc
push
stos
mov
add
sub
fisubrs
or
dec
loop
sbb
push
cmpsl
mov
jns
loop
sbb
push
dec
scas
sar
out
sbb
push
cmpsl
mov
jns
loop
sbb
push
cmpsl
mov
ljmp
cmpsl
mov
jns
loop
sbb
push
cmpsl
mov
jns
fisttps
mov
mov
jns
loop
sbb
push
cmpsl
mov
jns
loop
sub
mov
mov
std
loop
sbb
push
cmpsl
mov
jns
loop
sbb
push
dec
out
sar
out
sbb
push
cmpsl
mov
jns
loop
sbb
push
cmpsl
mov
ljmp
cmpsl
mov
jns
rclb
jg
push
fiadds
fstl
shlb
fwait
pslld
cs
pop
xchg
lods
jno
jecxz
and
aad
into
mov
jmp
cmp
scas
mov
push
mov
inc
mov
add
jle
stc
cli
lock
test
dec
or
xchg
jo
mov
mov
xchg
stc
pushf
sub
sub
mov
or
test
lods
pop
in
icebp
mov
cmpsb
ret
inc
dec
sub
out
lock
mov
fidivrl
pop
imul
clc
lods
sahf
push
sub
cmp
jnp
sbb
lods
loope
jl
std
lahf
pop
adc
adc
std
fmull
jne
pop
sub
inc
sbb
dec
jmp
daa
dec
int
jmp
push
stos
pop
cmp
std
insl
mov
lods
pop
pop
inc
lods
mull
dec
adc
popf
test
lret
lret
in
mov
in
cmp
jge
push
stos
and
and
xchg
out
fwait
sub
cli
lods
pushf
test
mov
mov
mov
fmuls
mov
mov
ja
test
cwtl
mov
push
imul
cmpsb
dec
out
lods
test
jmp
test
xchg
mov
cmpsb
loop
std
addr16
mov
daa
int
xor
jns
inc
in
das
jmp
xor
sub
test
mov
out
sbb
adc
mov
cmc
out
orl
sub
and
pusha
lahf
sbb
mov
shl
mov
call
jmp
pop
mov
sub
sbb
xchg
push
push
jno
xor
mov
inc
and
mov
ret
xchg
cmp
mov
sti
sub
int
scas
xchg
adc
push
jae
sub
dec
xor
or
nop
cmp
pop
mov
in
or
ja
stc
dec
ucomiss
xor
das
outsb
pop
es
cmp
mov
cmp
imul
jbe
je
ljmp
fisubl
cmpsb
dec
movsl
scas
lcall
lods
sbb
ss
enter
pop
xor
mov
sbb
cs
and
adc
and
sbb
push
adc
lods
mov
es
imull
xchg
daa
mov
lods
xchg
mov
test
hlt
pop
into
pushf
jp
jle
push
inc
daa
xchg
mov
pop
pop
mov
or
in
data16
daa
fistl
jg
loope
add
pop
mov
push
test
mov
je
sahf
dec
mov
inc
mov
out
mov
insl
addr16
adc
and
sarl
jecxz
jmp
and
ss
sbb
sub
add
shrb
jmp
add
dec
out
jo
loope
jns
out
sub
cs
int3
pop
mov
sub
jmp
in
paddw
mov
addl
jl
stos
pop
in
loop
ficompl
mov
clc
pop
pop
out
and
dec
mov
mov
lret
cli
sub
sub
mov
xor
orb
jl,pn
mov
pop
and
push
aas
call
cvtpi2ps
dec
pusha
jmp
jne
lret
lret
and
out
pusha
lahf
stos
loopne
add
add
ficomps
addr16
int3
sbb
popa
int3
jo
outsl
and
pop
adc
mov
notl
adc
fidivrs
into
fimull
xchg
push
lcall
out
in
fadd
mov
negl
cs
adc
test
xlat
and
adc
dec
inc
sub
cld
test
shl
data16
nop
cmp
out
xlat
dec
pop
popa
std
pop
adc
dec
and
pop
mov
das
jmp
daa
mov
cmp
mov
pop
inc
imulb
dec
test
das
cmpsl
xchg
pop
and
addps
out
xor
addr16
add
dec
dec
movsl
out
test
or
push
out
dec
or
dec
fldcw
std
ja
pop
in
aaa
mov
pop
aas
cmp
jecxz
pop
and
pop
pop
cmpsb
out
pop
pop
fwait
jge
movsl
cmp
push
dec
aas
push
mov
aas
pop
inc
xchg
outsb
push
aas
test
sub
lods
sbb
das
mov
test
stos
push
daa
pop
pop
das
sub
int3
inc
xor
push
lods
adc
xlat
into
out
out
xchg
data16
push
mov
pop
jbe
lea
sub
push
sbb
out
add
pop
inc
into
std
pop
cli
and
mov
inc
out
pop
dec
out
adc
aad
or
pop
adc
mov
pop
or
sbb
or
ljmp
pop
out
or
pop
cmpl
push
push
invd
loop
test
std
pop
and
lods
push
out
pandn
out
inc
pop
push
push
dec
aas
push
cli
bswap
movsl
adc
por
in
lods
cwtl
ljmp
fsubp
ss
setne
je
jns
xchg
aad
fsubr
sub
pop
xor
mov
push
sbb
outsb
icebp
xor
mov
movsb
test
jg
ja
int
mov
inc
push
dec
inc
adc
xchg
cwtl
arpl
and
je
movsl
into
imul
jmp
xor
insl
lds
mov
mov
pop
lret
pop
test
add
dec
xchg
outsb
jle
push
xchg
into
loop
loop
test
lods
ret
dec
xchg
bound
pop
test
pusha
inc
mov
iret
jne
fcoml
clc
pushf
jecxz
or
sbb
or
push
cld
movsl
push
xlat
fmulp
ret
xlat
gs
jne
ficomps
cmp
inc
add
push
pop
sub
dec
cmp
out
dec
into
or
orl
loop
sub
js
push
pop
xor
fwait
inc
mov
sbb
rcll
inc
jge
pop
mov
and
or
jmp
filds
mov
icebp
cmp
mov
cmp
mov
or
push
outsb
add
cmp
std
out
out
scas
sub
or
mov
mov
pop
out
leave
or
in
sbb
pop
aad
test
les
fnstsw
add
or
push
xchg
movsl
or
xor
loop
cli
in
jecxz
mov
sbb
gs
dec
movsb
insl
mov
stos
insl
pop
test
jg
outsl
in
pop
jmp
repz
ja
imul
pop
sub
test
fwait
add
stos
jno
lods
cld
and
add
dec
jmp
xorl
push
push
mov
insb
sub
jle
cltd
push
sbb
push
pop
pop
jmp
inc
faddl
cmp
lods
not
icebp
repnz
stos
mov
mov
nop
std
xchg
cmp
mov
je
and
or
leave
cmp
movsl
mov
dec
mov
xor
mov
das
loopne
ja
sub
loopne
mov
lods
pop
sbbl
cs
imul
fidivl
mov
inc
cld
ja
or
or
pop
mov
mov
test
push
bound
jl
aaa
xor
jo
repnz
in
inc
push
push
xchg
adc
jmp
out
jl
fsubrl
sbb
sub
mov
mov
dec
out
mov
or
sub
pop
cs
mov
ret
cmp
jae
push
aad
pop
mov
fmul
inc
jo
popa
out
xchg
adc
rorl
jns
loop
test
lock
pop
dec
mov
mov
test
loop
setbe
lea
ret
push
lea
mov
push
push
push
push
hlt
or
xchg
lcall
pop
dec
cmpsb
adc
adc
mov
js
cmp
pusha
pop
das
inc
dec
sub
int3
int3
les
and
xlat
shll
pop
sbb
stc
bound
mov
add
test
sub
test
sarl
clc
xchg
mov
cld
push
mov
ficomps
push
arpl
into
push
jmp
push
bound
fimuls
or
jbe
enter
into
mov
daa
push
movsbl
lea
jle
cmp
pop
outsb
cmp
sub
xor
or
inc
jo
lcall
mov
popa
aad
sahf
mov
dec
adc
push
inc
mov
mov
cmc
nop
in
outsb
out
jbe
mov
push
add
std
mov
jns
dec
fdivrs
mov
cmp
cmpsb
xchg
roll
or
orb
push
rcrl
mov
movsl
mov
mov
stc
mov
fstpt
mov
or
adcl
jmp
sub
push
jle
mov
ficompl
and
mov
or
ret
jecxz
das
decb
add
sub
xor
jb
push
je
bound
push
xor
adc
adc
add
add
insl
xchg
dec
call
and
mov
adc
scas
lods
aad
call
test
jns
loopne
sub
pop
push
xchg
xchg
inc
call
lods
dec
into
lea
notl
fnstsw
das
jg
fs
lret
add
xor
xorl
psubusb
jbe
popf
push
insb
sub
xor
sets
call
adc
daa
xchg
into
jnp
cmp
imul
cmovno
imul
pop
es
fstpl
add
mov
xor
lcall
dec
dec
mov
adc
inc
lock
inc
xor
subb
mov
mov
or
sbb
and
in
das
mulb
cmpb
dec
xchg
shll
subb
fisubrs
cmc
sti
dec
das
jge
das
lds
in
jecxz
aas
mov
das
adc
mov
clc
out
mov
push
adc
jmp
lods
adc
lods
adc
inc
xchg
das
adc
repnz
out
lea
loope
das
pop
sbb
jmp
lods
lahf
iret
adc
push
addr16
lods
sub
fimuls
or
push
sti
aam
loop
xchg
insl
ss
fdivs
int
sahf
dec
int3
or
and
leave
pop
stos
daa
lea
out
iret
pop
icebp
fisubs
pop
adc
push
push
mov
dec
pop
lods
iret
push
gs
test
adc
inc
add
sub
ljmp
xchg
fcoml
dec
jp
fisubs
lar
pusha
icebp
mov
imul
xorl
and
xchg
cwtl
or
gs
add
ds
int3
cmp
mov
mov
cmp
cmp
mov
pop
loop
test
divb
daa
and
cvtpi2ps
shll
movsb
mov
andb
and
or
or
sarb
aas
lret
mov
mov
mov
adc
or
shr
ja
add
adc
push
shlb
mov
sbb
pop
scas
xchg
push
and
pop
mov
and
into
push
into
mov
sub
dec
int3
into
mov
cmpsl
cmp
fwait
inc
cmp
and
sbb
dec
adc
ficoms
popf
cld
adc
push
rcrb
mov
cld
pop
into
push
dec
addl
cmpl
movb
in
test
or
loopne
stc
mov
fwait
lods
ds
lea
fidivrs
cmc
adcl
loop
mov
ja
add
sbb
dec
jae
push
in
sbb
dec
int
jns
adc
mov
and
scas
inc
mov
les
mov
xchg
add
mov
stos
pop
sub
jp
push
cwtl
ret
xchg
imul
xor
jno
je
shlb
out
fcoml
bound
scas
je
rclb
cli
jl
lods
xor
adc
dec
lea
push
cmc
jp
test
int3
cmpl
and
decl
jp
enter
sub
pop
add
or
jmp
leave
mov
cmp
jnp
xchg
bound
stos
lds
test
xchg
or
sub
lods
push
pop
mov
cmp
aad
sbb
stos
inc
add
mov
sbb
adc
and
aad
loop
sub
lods
jg
lods
fdivrp
add
insb
out
mov
ss
scas
outsb
and
out
lods
sub
js
jmp
jg
hlt
and
jmp
jne
pop
jge
out
test
test
mov
imul
pop
pop
xor
repnz
shlb
pop
jmp
mov
out
xor
in
push
xchg
sub
aad
dec
or
inc
inc
leave
xchg
aad
outsb
lret
insl
jle
outsb
cltd
pushf
aas
push
and
push
imul
xchg
lods
sub
add
mov
jge
lret
and
imul
mov
or
or
xor
andl
jg
arpl
mov
out
mov
imul
pop
insb
jmp
cs
inc
negl
subl
sbb
push
xor
or
cmc
jl
pop
stos
jne
mov
jle
dec
pop
out
ficomps
movsb
call
mov
adc
ss
insl
pop
sub
pop
xchg
xor
xchg
in
lods
lods
or
sahf
ss
insb
cld
int3
ds
cmc
int3
outsb
lods
dec
lea
jmp
pop
pop
sub
inc
jns
sbb
cmp
or
outsb
aas
mov
cli
pop
loop
sub
mov
dec
leave
jae
and
push
adc
inc
pusha
inc
sub
dec
mov
test
iret
mov
fmul
mov
lds
push
push
xchg
popf
cmpsb
aas
inc
fiadds
mov
or
mov
mov
adc
and
enter
xchg
dec
lret
push
imul
mov
fcmovnbe
aas
imul
sub
lea
movsb
mov
pop
stc
das
out
aas
mov
negb
in
outsb
xchg
dec
ficomps
pop
jmp
pop
pop
pop
sub
add
sub
mov
or
jns
sub
leave
mov
inc
shlb
ret
jne
data16
push
fsubrs
xchg
pop
int3
psubw
sbb
out
mov
lock
pop
adc
pop
dec
test
xor
dec
int3
subl
sbb
movsl
incb
test
and
lahf
cmp
push
negl
aad
cmp
xchg
test
std
push
jbe
out
jnp
xchg
aam
outsb
les
aam
xchg
scas
lock
mov
jg
pop
fidivrs
jmp
dec
jne
pop
fisubrs
lods
and
pop
inc
mov
sub
cld
sbb
mov
into
cmc
ljmp
fxsave
insl
pop
cli
jnp
cs
dec
dec
push
lea
pop
jo
lret
aam
sahf
out
mov
stc
jecxz
xchg
inc
and
sahf
int3
adc
mov
scas
addr16
cmpb
pop
xchg
or
nop
int3
aam
or
inc
fs
jne
inc
js
fbld
xchg
dec
rcrb
sub
into
fisubrl
inc
jle
push
and
daa
fmull
cltd
sub
negl
in
lret
iret
div
loopne
movaps
dec
cld
cld
cs
or
jl
lds
jle
or
and
xor
notb
decb
mov
or
jg
lods
dec
lods
and
pop
std
and
dec
lock
mov
add
addl
movsl
jecxz
sub
mov
loope
jb
dec
repz
into
mov
and
push
mov
call
xchg
jle
cld
sub
popf
stos
es
push
adc
push
add
mov
jmp
mov
and
insb
fisubrl
xlat
and
mov
das
xor
in
pop
mov
sub
ljmp
lods
lods
fadds
pop
insl
push
rcrb
pop
push
sub
cld
call
lds
sub
jae
pop
dec
nop
push
jge
jae
mov
add
sbb
adc
sbb
xchg
pop
pop
cltd
ss
sti
jmp
dec
cmc
outsb
inc
mov
sbb
sahf
or
cli
jg
lcall
insb
outsb
adc
pop
pop
stos
mov
add
jae
cmp
fwait
cmc
xchg
mov
sub
sbb
ljmp
pushf
int3
sahf
push
add
adcl
out
out
gs
push
aam
sub
js
mov
dec
mov
cmp
ja
clc
sbb
xchg
jae
pushf
adc
movsb
fnsave
fcoms
sub
push
mov
cmpsl
lahf
loop
inc
cmp
inc
lods
clc
and
out
vxorps
cmpb
loope
dec
xchg
popf
in
inc
pop
push
sbb
out
popf
mov
adc
aam
push
add
dec
cmp
jmp
rolw
imull
into
push
das
lret
cmp
clc
push
cmp
jl
insb
stos
cmc
ja
add
loopne
cmp
lods
arpl
es
adc
inc
divb
das
scas
push
jbe
lcall
loop
hlt
rorl
stos
imulb
in
fcoms
cmp
dec
cmp
cmpsb
mov
int3
xchg
daa
mov
mov
or
ja
sbbl
movsb
out
lock
sbb
cmp
or
ljmp
clc
or
outsb
mov
lahf
repnz
rolb
jnp
push
orps
lds
mov
mov
fdivrl
ja
and
mov
out
in
pop
pop
stc
insl
xchg
sub
dec
dec
loop
sbb
xlat
bswap
mov
pop
lods
cmpb
pop
cld
ficomps
movsl
loopne
mov
adc
add
xchg
and
mulb
stos
dec
jmp
push
or
fidivrs
in
fsubp
push
pop
dec
into
pop
aas
sub
inc
push
pusha
fdivrp
iret
dec
mov
sub
and
insl
mov
ja
divl
or
andl
test
cmc
daa
inc
into
call
into
out
js
into
stc
test
cmp
out
in
data16
pop
mov
outsb
fnstsw
in
xor
pop
repnz
push
mov
or
pop
jle
jmp
in
inc
fcomps
call
cli
inc
imul
les
mov
loope
in
scas
jbe
and
xor
inc
cli
popf
ljmp
imul
mov
push
xchg
out
jle
clc
and
and
mov
sub
sub
push
and
xchg
sub
mov
mov
pop
std
imul
xchg
in
mov
call
das
xor
xor
test
jle
and
insb
xor
xchg
pop
lea
lret
pop
xchg
xor
hlt
adc
mov
pop
stos
add
push
sub
dec
push
inc
and
xchg
and
setle
jno
mov
or
dec
xchg
jle
popf
push
xor
mov
jnp
jmp
lods
aaa
jno
or
push
mov
fsubrl
push
loop
jp
xchg
cmp
jno
adc
std
jecxz
enter
and
insl
inc
stos
ficoms
lods
imulb
loope
or
popf
loop
loopne
outsb
scas
cmpsl
mov
addr16
gs
in
pop
movsl
outsb
sub
or
pop
jl
movsl
mov
xchg
stos
ljmp
in
jecxz
inc
insb
cltd
push
jecxz
and
jne
data16
xchg
sub
pushf
out
outsb
out
daa
orl
mov
dec
test
stos
mov
int3
or
pushf
fldcw
pop
or
cld
fstpl
into
inc
or
sbb
xchg
lret
mov
sti
maxps
pop
into
jmp
mov
insl
adc
mov
int
sbb
cmp
shrb
cli
lods
or
negb
hlt
bound
aaa
inc
push
jge
jns
outsb
cmc
jns
fdivrl
jae
popf
loopne
dec
out
pop
ds
leave
xchg
imul
mov
and
lods
push
xor
fcompl
imul
mov
add
add
pop
ret
sbb
out
inc
fcmovb
mov
daa
inc
femms
lret
imul
mov
xchg
dec
xchg
iret
outsb
dec
loop
dec
cltd
add
and
mov
int
sub
movsb
loopne
cltd
stos
jnp
push
out
cli
pop
das
jg
ror
xchg
js
sbb
adc
loop
ljmp
jecxz
fldenv
es
imul
jmp
aaa
movsl
dec
in
out
fldcw
jmp
imul
test
inc
nop
std
stos
jmp
or
adc
mul
out
outsb
jmp
push
push
mov
jae
inc
mov
subb
lahf
jl
ds
xchg
in
pop
into
or
sti
mov
je
adc
clc
jecxz
lods
inc
pop
mov
cmp
lods
jmp
stos
in
ljmp
stos
jmp
in
aaa
movsl
dec
cs
lahf
clc
mov
pop
mov
pop
outsb
sbb
pop
scas
lahf
mov
cmpsb
bound
int
test
inc
xchg
rclb
xor
push
mov
dec
dec
psraw
lret
fsubrl
or
stos
jl
or
jb
or
mov
iret
outsb
es
mov
xchg
lea
and
mov
push
imul
xchg
pop
sub
or
mov
pop
in
lret
nop
mov
push
mov
cltd
push
shl
imul
push
push
cmpsb
ja
sub
addr16
movsl
lcall
jle
jle
lods
aad
and
aad
loope
pop
adc
mov
push
jmp
cltd
adc
inc
mov
movsl
int3
repz
inc
sub
loop
jbe
lea
in
mov
out
pop
inc
xchg
pop
out
pop
xchg
hlt
pop
xor
das
push
mov
inc
cs
sbb
pop
subb
mov
xchg
out
cmp
loop
push
sbb
into
or
adc
pop
jmp
and
add
push
in
es
mov
int3
into
sbb
adc
mov
inc
and
leave
test
rcrb
xchg
out
fidivs
jne
daa
out
xchg
jmp
loop
pop
out
push
jne
pop
push
out
clc
scas
jecxz
xchg
test
daa
sbb
enter
ret
pop
sbb
inc
sahf
rorl
or
mov
loop
mov
cmp
jbe
fmul
sub
cmc
pusha
stos
aaa
lods
mov
loope
sub
sub
and
fcoml
lret
sub
cmp
outsb
mov
jae
mov
or
jae
fcmovbe
sbb
push
test
sbb
sbb
and
aad
or
sbb
int3
js
imul
push
mov
scas
ds
jne
push
cmc
sub
sbb
sbb
hlt
sub
shl
adc
lret
mov
inc
test
addr16
outsl
and
ljmp
out
in
pushf
cld
sub
push
popl
imul
sub
sub
sbb
dec
sbb
sar
mov
sub
and
movsl
jg
jmp
sub
add
outsb
dec
scas
int3
mov
imul
sbb
adc
stos
shll
scas
decl
or
lods
test
into
pop
sbb
jo
bound
outsb
jb
loop
jo
insl
lods
dec
push
scas
push
lret
out
scas
or
jl
daa
stos
jl
push
jle
mul
cmp
testl
push
jle
test
cmp
sbb
daa
stos
or
jecxz
loop
subb
mov
push
jle
mov
cmp
cmp
daa
stos
cwtl
xchg
cmp
test
outsb
inc
js
daa
stos
clc
xchg
cmp
mov
daa
stos
jl
push
jle
push
jne
mov
out
jo
insl
stos
ss
out
pop
in
pop
pop
lods
orl
xchg
inc
adc
mov
lcall
xchg
jb
lods
mov
jb
imul
mov
cmp
test
jb
cmpsb
mov
jb
out
jo
insl
scas
dec
push
mov
jb
cmp
lock
in
push
or
inc
sbb
rcrb
clc
mov
rcrb
clc
rcll
lahf
sbb
sbb
shrl
jl
pop
xlat
mov
jge
cli
cmp
js
dec
mov
std
sbb
jl
pushf
xlat
sub
push
lret
mov
jl
push
push
xlat
fdivrs
pop
inc
sub
data16
jl
jl
out
loop
mov
inc
idiv
mulw
jl
js
dec
mov
pushf
inc
sbb
dec
mov
jl
mov
cmp
sub
cmp
je
cli
sub
mov
mov
push
mov
enter
test
push
and
jl
sub
dec
mov
fwait
inc
cmp
cmp
pop
push
cmp
std
data16
jl
fwait
xlat
cmp
dec
cmp
push
dec
inc
sbb
jp
shrl
shrl
inc
mov
call
bound
in
sub
and
dec
cltd
mov
test
fisubrl
xchg
out
lcall
mov
or
push
sbb
mov
jg
lahf
outsb
scas
ss
jae
cmpsl
push
lea
pop
ljmp
jno
inc
or
sub
mov
mov
cmpsb
fcoms
jmp
mov
lret
frstor
sbb
ds
inc
add
cs
jg
xor
or
cmp
jnp
mov
lret
mov
cmp
mov
inc
mov
je
stos
loop
mov
jno
jo
push
movb
aas
dec
push
sbb
rorb
sub
pop
fidivrl
outsl
imul
sbb
fildll
popf
out
fimuls
jns
imul
push
jp
arpl
push
or
loop
fsub
adc
imul
not
and
shrl
mov
mov
test
es
jmp
in
pop
insb
pop
mov
pop
cmp
mov
mov
call
dec
mov
cwtl
cld
and
int3
cmp
call
or
aas
js
out
aas
pop
dec
lea
mov
add
jmp
out
aas
mov
dec
out
mov
or
ficoms
lret
scas
xlat
pop
mov
jmp
mov
xlat
into
mov
pop
push
dec
incb
mov
sbb
mov
mov
push
or
icebp
ljmp
pushf
sbbl
pop
mov
lock
rolb
das
sarb
mov
test
pop
or
add
inc
sbb
push
fstpl
bound
pop
jle
sub
dec
sbb
mov
pop
mov
push
inc
or
pop
jle
in
jp
xor
sahf
and
jg
in
jne
xchg
rcrb
push
push
clc
and
dec
lret
dec
sti
out
loopne
jns
xchg
test
jmp
frstor
sub
mov
dec
filds
lods
cmp
sub
lea
ljmp
jae
rcll
sbb
inc
pop
aad
xlat
mov
inc
mov
cmp
jl
arpl
and
fadds
push
sub
jnp
ret
fimuls
sbb
outsb
clc
add
sar
int
out
jns
mov
pop
sbb
jle
std
cmp
pop
ja
dec
add
dec
fwait
mov
sub
jle
sti
lods
adc
dec
cmovne
sti
and
sahf
into
dec
ljmp
sub
or
neg
xchg
sub
sub
das
dec
aas
dec
fcmovne
cli
fldt
dec
ljmp
pop
jecxz
subl
imul
inc
pop
popf
cmpsb
cmp
outsb
cmpsb
pop
sub
sarb
push
std
and
dec
cmp
ljmp
scas
mov
dec
cmp
push
enter
pop
xor
mov
cs
subl
cmpsb
push
pop
jmp
aaa
and
add
or
jmp
mov
jns
xor
int3
sub
cmp
leave
lcall
and
or
aaa
xchg
jo
add
xchg
and
into
inc
push
cmpsl
lods
and
inc
pop
mov
mov
loopne
ds
cmp
and
mov
sbb
pop
mov
mov
test
popa
lcall
and
adc
out
xchg
and
cmp
insb
mov
in
popl
enter
dec
stc
or
js
push
fdivrl
es
jmp
aad
rorb
scas
aad
xsha256
cmpsb
nop
sub
lahf
mov
rcl
push
out
cli
out
pop
in
or
popa
daa
push
sub
cwtl
test
fwait
ror
xchg
dec
int3
or
pushf
push
lret
leave
inc
and
sub
sub
mov
jne
out
int
ja
pop
cli
lods
in
mov
push
out
fwait
mov
or
sub
jnp
js
lods
dec
cs
jmp
mov
sub
push
sub
iret
xor
lret
lods
push
ficomps
cmp
cld
fsubp
sbb
jmp
shr
test
xchg
push
pop
das
test
stos
jo
sbb
inc
mov
repz
dec
in
pop
and
dec
jnp
cs
pop
std
mov
mov
mov
pop
xchg
mov
fiaddl
es
mov
and
out
ja
rcrb
or
lea
loop
push
mov
or
call
into
cmpb
inc
pop
std
mov
mov
gs
scas
add
aam
cld
push
add
mov
mov
sub
jg
or
xor
and
data16
inc
call
fstpl
call
out
clc
jmp
ds
mov
icebp
xchg
lods
pop
pop
pop
dec
jle
xchg
push
ss
jle
mov
mov
xchg
outsb
sarl
jnp
cmpsb
movsb
pushl
inc
dec
scas
jge
cli
scas
push
mov
pop
test
mov
bound
outsb
jge
into
shrl
and
sahf
cmpsb
fisttps
lock
sahf
pushl
inc
rcrl
push
mov
pop
test
jb
jae
pop
dec
mov
pop
and
mov
xchg
mov
mov
ret
mov
pop
mov
inc
das
scas
js
sub
test
pop
lods
mov
sahf
mov
rcr
in
mov
ja
loope
xlat
pop
sbb
jl
das
out
int3
jmp
sub
or
mov
scas
adc
sub
jecxz
lods
pop
pop
movsb
push
pop
inc
outsb
pop
mov
js
inc
xor
dec
and
mov
mov
cmp
inc
xchg
mov
mov
mov
mov
jno
imull
inc
addr16
es
popl
jo
testl
jo
fiaddl
xor
pop
das
int3
into
stos
inc
imull
jne
into
cmp
outsb
cmp
jo
rolb
or
or
in
leave
and
inc
fsubl
mov
cmpsb
andl
lcall
sbb
sti
cs
sub
cmp
mov
or
xchg
repz
repz
iret
outsb
loope
test
lcall
adc
repnz
call
mov
jl
sbb
dec
mov
pop
jl
add
sub
aas
sub
pop
jae
mov
cs
adc
sbb
scas
mov
lret
xor
dec
stos
lea
jl
and
into
stos
ja
mov
cs
mov
js
mov
pushf
mov
inc
sub
fnstsw
jb
push
ss
mov
loop
sub
jg
mov
lock
stos
mov
imul
sub
and
jo
mov
inc
jno
and
mov
ljmp
xchg
mov
loop
sub
into
mov
loop
sub
into
mov
pusha
sub
mov
push
jne
push
in
jmp
and
push
out
pop
into
mov
aad
mov
lods
repnz
outsb
aad
mov
jo
xchg
in
inc
cwtl
les
cmp
jg
sub
push
push
inc
sub
and
adc
mov
sbb
push
fsubl
mov
xchg
daa
xchg
sub
and
pop
jmp
push
adc
in
adc
xchg
sub
lods
repz
ljmp
dec
mov
jbe
lahf
ret
xor
jg
push
inc
xchg
jg
sub
and
push
das
inc
lcall
sub
mov
and
cmp
cmp
pusha
lahf
cmp
add
aam
and
sub
stos
push
mov
push
mov
pop
jp
fidivs
ret
sbb
dec
xchg
add
call
lods
lods
dec
mov
push
aas
cmp
and
mov
gs
enter
cvtdq2ps
push
sbb
das
pushf
lcall
scas
mov
sbb
sbb
int
test
and
cmp
dec
jl
dec
xlat
js
loop
mov
sub
xchg
inc
lods
jl
sbb
inc
and
sbb
pop
pop
and
jl
pop
xlat
fdivrs
and
in
sub
cs
dec
sub
inc
jl
shll
gs
std
ror
lods
inc
test
lods
sbb
lods
cwtl
out
aad
sub
ret
cmp
lea
mov
inc
add
cli
and
push
arpl
cmp
std
pop
dec
std
and
daa
out
outsb
pop
pop
lods
fcmovnu
mov
push
lea
adc
out
mov
scas
std
cmpsl
dec
xchg
mov
mov
insl
stos
sub
xchg
scas
lods
mov
mov
subb
pop
repz
fimull
stos
inc
dec
inc
jle
cmp
into
dec
aas
adc
cmp
fcomi
fadd
adc
cmp
fwait
popf
aam
push
jo
sbb
out
rcrb
inc
out
inc
sub
and
test
es
call
call
sub
adc
cmp
sbb
sbb
mov
js
fdivl
icebp
clc
sbb
fs
push
loop
lcall
fsubl
mov
loop
lcall
adc
cs
insb
pop
mov
orl
repnz
mov
cld
xor
int
sahf
sti
outsl
fidivl
inc
sub
xchg
rorl
rcrl
loopne
pop
iret
jl
xchg
xor
out
cmp
or
sahf
outsb
mov
out
or
inc
inc
in
lds
xchg
imul
mov
lea
push
pusha
pop
inc
mov
fs
xlat
mov
ljmp
loopne
stc
jns
aaa
jmp
pop
fidivrs
sarl
cwtl
lea
cmc
rorl
mov
dec
lods
loop
sbb
jbe
mov
mov
out
das
push
in
dec
stos
pop
or
jne
cmpsb
inc
mov
mov
int
fsubp
dec
and
jg
fldcw
scas
sub
dec
addr16
push
imul
insl
outsb
std
out
in
xchg
lds
das
or
dec
dec
push
sbb
std
mov
fstps
dec
or
lock
icebp
add
xor
mov
imulb
inc
dec
lods
sub
fwait
lods
push
in
xor
daa
pushf
pop
adc
ja
lods
pop
cmp
add
mov
push
lods
mov
push
xchg
mov
cmp
cltd
das
jae
sahf
adc
push
adc
push
ror
fmulp
jne
popa
and
inc
or
outsb
dec
mov
lods
inc
rcr
push
dec
xor
lock
push
push
gs
fcoml
push
loopne
test
adc
arpl
insl
insb
lock
jl
jmp
mov
sbb
mov
jg
lods
ret
or
lods
or
lcall
icebp
xchg
jg
lods
inc
in
sub
sbb
cmpsb
lcall
lea
fmulp
popf
sbb
mov
lods
cmp
push
cmp
aam
js
jg
ja
cmp
dec
hlt
insl
aam
scas
xor
or
loope
mov
int
arpl
jno
xchg
pop
cmc
andb
jb
lods
mov
and
and
dec
fnstsw
and
pop
ret
aas
loop
rcl
dec
lret
xchg
pop
mov
rolb
or
lret
dec
xchg
lret
ret
imul
mov
sub
adc
fdivl
jl
mov
cmp
inc
and
inc
inc
lcall
push
fstpt
int3
test
shrl
pop
jmp
mov
popf
es
mov
jmp
out
inc
ljmp
cltd
fwait
add
lds
int3
imul
sub
aad
pop
mov
je
xchg
cmp
sbb
jl
add
int
aad
adc
lods
addl
test
daa
mov
push
sbb
orl
xchg
clc
nop
cs
sbb
sub
addr16
shll
or
or
mov
dec
lds
push
cltd
fwait
clc
pop
sti
xor
sub
pop
push
stc
cs
mov
pop
popf
nop
cmovnp
lods
stos
cs
push
mov
xlat
rorb
xchg
cwtl
sbb
cs
int3
mov
cmc
inc
adc
enter
shr
inc
arpl
sbb
popa
add
enter
add
cwtl
sub
loope
pop
inc
mov
jnp
pop
es
fsubrp
sub
mov
add
mov
insl
sub
sahf
notb
dec
pop
push
out
mov
dec
ss
mov
je
loop
shl
cmc
mov
jmp
mov
neg
push
inc
idivb
adc
xor
push
dec
add
test
les
out
sbb
sub
jmp
mov
lods
mov
mov
ja
ss
sti
xchg
loop
sbb
ljmp
lock
or
and
and
push
cmp
inc
pop
pop
lods
jle
push
sub
sahf
pop
lods
mov
jbe
push
into
pop
sar
sub
or
and
mov
xchg
mov
and
dec
pop
cld
or
enter
pop
mov
push
nopl
dec
out
outsb
pop
mov
sub
cmp
les
ficoml
dec
cmp
movsl
call
fsubs
pop
lret
mov
out
xchg
xor
sbb
in
mov
inc
add
dec
scas
je
movsl
out
sbb
in
fsubr
aaa
sub
lods
add
jnp
mov
mov
add
jp
pop
mov
lea
fsubl
dec
test
mov
popf
or
push
mov
pop
adc
or
pop
add
pop
lds
sbb
std
test
aam
xor
xorb
sub
mov
dec
sub
xlat
jmp
push
jmp
imul
push
pop
and
and
out
loope
mov
pusha
addr16
leave
xor
push
add
sahf
cmp
sub
mov
daa
dec
data16
stc
dec
test
fisubl
aad
enter
in
sub
out
lea
rcrb
popf
adc
inc
and
pop
jle
xchg
daa
imul
aad
inc
test
aam
pop
pop
sub
aaa
imul
xchg
xchg
push
frstor
das
mov
xchg
loopne
xchg
push
sub
cmc
xchg
pop
ss
pushf
addr16
bnd
jecxz
xchg
pop
jp
enter
lods
fisubrs
outsb
mul
mov
rclb
lods
cmovle
mov
cmpsl
daa
push
mov
mov
outsb
mov
add
fld
rolb
dec
lret
mov
aad
test
jne
fsubrs
sbb
shrb
sub
mov
sub
dec
pop
out
jne
mov
push
ja
sbb
and
fdivrp
xor
sub
mov
shll
cli
ds
imull
mov
lods
les
scas
dec
pop
negl
inc
mov
test
cmp
movsb
lea
outsb
jmp
xchg
adc
jge
mov
popf
rclb
outsb
jnp
clc
and
rcrb
sbb
out
daa
ljmp
pop
pop
insb
jae
movsl
push
cmp
jb
addr16
jnp
mov
pop
push
jns
cmp
lods
dec
push
inc
mov
out
push
pop
mov
sbb
das
das
sub
add
pop
push
add
jmp
adc
xchg
rclb
and
dec
cmc
jmp
movsb
dec
inc
insl
test
push
sub
xor
stos
push
mov
imul
mov
ret
es
out
loop
and
insb
fldt
leave
sub
scas
scas
jmp
xor
xchg
outsb
jl
jle
outsb
lods
xchg
mov
das
into
outsb
rolb
orb
outsb
ja
jp
outsb
jl
outsb
and
dec
outsb
cli
mov
and
sbb
outsb
or
test
and
dec
xchg
outsb
loop
and
mov
out
xlat
cmp
loop
xlat
cmp
loop
xlat
cwtl
lods
outsb
notb
loop
dec
push
das
test
icebp
cli
js
outsb
and
dec
outsb
cli
fcomps
and
pop
pop
outsb
and
xchg
adc
and
push
sbb
outsb
stos
mov
and
test
cmp
pop
and
clc
xchg
outsb
loop
and
pop
outsb
xlat
outsb
mov
outsb
daa
adc
loope
outsb
notb
loop
dec
pop
loop
inc
dec
jno
lea
cmpsl
cmpsl
cmpsb
repz
call
mov
add
outsb
mulb
outsb
lock
mov
outsb
cld
in
mov
lea
push
scas
outsb
notb
jne
cmp
cmp
in
jb
push
push
jg
lea
loop
push
orl
pushf
jg
lea
sti
cli
mov
pop
call
mov
add
cmpsb
repz
clc
dec
mov
outsb
sub
jne
fisubrs
ja
inc
dec
pop
jno
loop
jg
dec
repz
test
notl
add
xchg
es
test
iret
test
sub
pop
pop
xlat
mov
push
jns
into
jnp
sti
enter
pop
aad
outsb
cld
push
std
push
lret
sarb
sub
rorl
mov
aam
cmp
jmp
scas
mov
jns
cmp
mov
jl
or
jns
push
test
add
nop
out
adc
int
clc
mov
divl
cs
decl
push
in
stos
mov
mov
jp
aam
lret
lds
or
into
jg
std
call
cli
dec
and
imul
lods
pusha
out
add
popl
sbb
push
pop
orl
inc
mov
int3
xor
test
pop
test
pop
mov
std
aam
sub
dec
aam
fistpll
bound
cs
and
push
lret
jmp
sbb
pop
sbbl
fmull
push
lea
xchg
jle
test
mov
add
jle
pop
jecxz
dec
jle
repnz
in
into
dec
inc
call
pop
int3
popa
sub
cs
sbb
push
push
sti
or
dec
jmp
jmp
int3
lahf
repnz
outsb
push
mov
inc
lret
loop
insb
cmp
mov
cmp
push
push
add
xchg
out
addr16
imul
fwait
and
dec
adc
loop
or
and
bound
rorb
nop
out
mov
lret
pop
push
inc
mov
mov
out
mov
insl
cmp
mov
inc
or
sub
enter
pop
dec
mov
dec
sub
inc
sub
je
imulb
sub
sub
push
and
cld
lea
dec
ret
sahf
inc
das
sub
pop
cs
mov
sbb
adc
pop
test
inc
scas
lea
dec
call
cmp
lock
test
dec
frndint
pop
or
or
push
mov
sub
mov
mov
out
jle
aaa
and
cs
ficomps
mov
xchg
cmp
sub
cmp
daa
mov
mov
push
loope
pushf
jp
cmpsl
out
cmpsb
dec
sub
jne
outsb
aad
fsubp
dec
push
lods
xchg
pop
in
lods
dec
mov
out
xor
sub
sub
mov
inc
mov
add
jl
std
push
ds
loope
test
outsb
dec
insl
call
mov
pop
mulb
and
mov
sub
into
inc
or
outsb
jnp
sbb
mov
mov
inc
adc
jae
jge
ljmp
and
fisubrs
stos
lods
push
fwait
arpl
repz
imul
sbb
lods
sbb
sahf
mov
sub
imul
stos
inc
dec
in
pop
pop
mov
in
ljmp
mov
mov
sub
out
mov
cmp
mov
xchg
jl
sub
adc
loop
dec
mov
das
mov
lret
ficomps
pop
idivl
bound
inc
dec
fisttpll
jmp
js
mov
fcomip
mov
add
insl
cs
das
cli
popf
pushf
xchg
ds
mov
aaa
out
lret
js
cmp
sub
pusha
mov
cmpl
or
dec
pop
loope
out
mov
shl
imul
daa
out
cmpsb
shl
data16
pop
movsl
nop
test
dec
daa
fldt
pop
out
dec
outsb
outsb
cmpsl
enter
lods
push
gs
mov
into
std
push
leave
sub
stos
lcall
pop
addr16
dec
pop
aas
ljmp
ds
into
in
mov
inc
mov
jb
aam
stc
inc
dec
pop
arpl
dec
daa
pusha
rcll
push
das
pop
ret
rcr
movsb
hlt
push
aam
daa
or
stos
jb
push
cmp
fcoml
pop
out
jmp
stos
mul
dec
xchg
outsb
aad
in
mov
lock
in
lods
pop
cs
in
mov
int
pop
jle
xor
xchg
imul
push
into
mov
sub
mov
dec
lcall
daa
jns
or
lea
mov
es
or
int3
jmp
sbb
add
sahf
mov
scas
sahf
cmp
xchg
and
fsubr
mov
pop
and
pop
sahf
loope
sbb
int
pop
insl
jns
and
das
jae
push
push
loop
mov
jp
imul
mull
sub
shr
lods
pop
jge
sub
jl
addl
mov
out
lods
sub
fcmovu
movsl
jmp
insl
pop
cmp
cmp
movsb
lods
fcmovu
sbb
xchg
inc
push
lcall
rcrl
or
xchg
xchg
daa
adc
psubd
mov
mov
inc
lret
push
sub
inc
adc
aad
pop
into
dec
sbb
and
iret
aam
cmp
inc
push
sbb
mov
cmpsb
pusha
es
cld
sbb
repnz
sbb
cltd
xchg
lock
mov
xor
jmp
sub
sarl
pop
cmp
cmp
ss
cmp
nop
cmp
adc
std
dec
and
pop
mov
pop
movsb
hlt
aad
push
and
push
gs
and
sub
outsb
sub
or
xchg
imul
jb
and
mov
out
lods
fcompl
or
scas
ja
xor
lods
nop
mulb
push
addr16
mov
popa
dec
test
loopne
pop
push
negl
push
inc
sub
fdivr
lea
mov
push
data16
adc
cmp
push
jl
cmp
dec
dec
xchg
fisubrs
mov
je
push
rorl
inc
lods
adc
call
outsb
pop
cmp
shrb
daa
int
fdivrp
ljmp
xchg
out
fists
out
out
sub
enter
iret
aam
loop
movsb
xchg
movsb
xchg
inc
movsb
xchg
unpckhps
jo
mov
pop
push
mov
push
pop
in
xchg
dec
mov
push
lods
dec
out
cmp
int
jns
xor
mov
pop
xor
or
fistpl
push
cmpsb
dec
mov
cltd
xlat
cld
insl
cwtl
sbb
loopne
outsl
or
pop
lea
icebp
ljmp
ret
cs
ficompl
push
push
and
push
pop
xchg
sbb
mov
jno
fisttps
scas
cmpsl
lret
mov
xchg
fildll
lea
pop
jle
cmp
inc
push
aas
lods
jmp
add
inc
ds
mov
in
lods
mov
pop
xchg
sub
fisubrl
shr
sub
mov
jl
ss
mov
stos
aad
sub
fmull
arpl
cld
loope
pop
fs
je
pop
in
aam
aam
repnz
and
out
int3
leave
cmp
add
push
call
xchg
jecxz
lcall
add
add
ljmp
inc
pop
insl
pop
dec
ljmp
call
push
or
test
in
push
hlt
movsl
push
repnz
lods
iret
add
mov
mov
lret
mov
pop
jo
pop
test
ds
mov
movsl
rcrb
xchg
jecxz
sti
adc
cmp
loopne
push
mov
loopne
sti
in
adc
clc
dec
dec
and
int3
mov
fbstp
es
adc
gs
push
outsb
pop
jbe
xor
add
inc
cmp
mov
lods
fimuls
mov
sti
cs
fs
ret
lret
or
jns
sbb
add
jmp
pop
popw
adc
cld
stc
ret
cli
adc
sbb
pop
dec
lods
inc
cmpsl
ljmp
adc
icebp
lods
int
cs
jmp
pop
adc
add
add
jp
jo
sub
xor
imul
test
and
jbe
dec
and
movsb
out
out
in
loop
aad
fisubrs
scas
push
push
mov
pop
movsl
dec
imul
cmp
fsubp
pop
jae
lret
add
jl
test
push
jl
mov
cs
out
cmp
outsb
in
loopne
loope
loope
cs
dec
loop
pop
pusha
jecxz
inc
sub
and
out
out
out
call
jo
fsubr
cs
jmp
dec
cli
in
cmp
jns
pusha
out
lahf
cmpsb
push
outsb
cmpsl
pop
adc
cltd
push
pusha
jecxz
inc
sub
and
out
out
out
call
cmp
dec
cli
in
cmp
jmp
scas
cmpsb
push
outsb
cmpsl
movsb
and
loope
out
loop
in
jecxz
push
dec
in
in
inc
sub
and
call
push
ljmp
push
in
orl
inc
outsb
gs
adc
fsubs
dec
out
mov
pusha
and
mul
push
out
out
pop
mov
jmp
ljmp
in
lods
cs
orl
out
iret
sub
jns
sub
cs
loop
dec
mov
jp
inc
mull
jo
cmpsl
pop
adc
cmp
jmp
dec
sub
mov
gs
mov
or
call
adc
mov
cmp
cs
in
mov
and
out
outsb
adc
jno
mov
cmp
cs
ljmp
dec
in
fucomi
popf
inc
mov
out
pop
lds
gs
jo
cmpsl
mov
jecxz,pn
orl
in
out
loope
out
push
dec
call
mov
sub
mul
inc
in
lahf
imul
jo
testl
in
loope
orl
jecxz
in
sub
popf
inc
sbb
mov
jmp
lahf
imul
jo
cmp
dec
jo
out
or
call
adc
mov
cli
jecxz
in
imul
outsb
aam
pop
aad
mov
add
add
push
mov
or
ljmp
shl
pop
rcrl
icebp
cs
pop
rcrl
repz
pop
aad
cmc
cs
negb
sbb
cs
pop
fstps
stc
cs
push
out
rorb
in
std
sbb
movsb
mov
and
jnp
pop
and
and
pop
and
pop
daa
jg
push
daa
jo
push
daa
jno
push
daa
jb
push
daa
jae
push
daa
je
push
daa
jne
push
daa
jbe
push
aaa
ja
mov
shrl
lods
aad
cmc
lods
lods
imulb
lods
clc
lods
fldcw
lods
fldt
in
movsb
fs
fisubs
jmp
shl
lock
cmpsl
out
jmp
lret
loope
loop
sbb
in
jmp
jnp
pushf
ljmp
out
out
out
lahf
dec
loopne
loope
loop
jecxz
in
in
out
out
call
stc
pop
dec
mov
mov
cltd
push
mov
fimuls
jg
sub
loopne
idivl
ja
or
add
rep
dec
js
in
sbb
mov
test
adc
cld
in
dec
ds
test
out
imul
push
push
stc
in
jmp
xor
lret
sub
mov
stos
sahf
lods
xor
mov
test
cmpsb
xchg
pop
cmp
lds
mov
sub
and
add
test
cmp
sbbb
sahf
in
test
outsb
or
movsb
xlat
stc
dec
ds
cmp
loope
addr16
push
mov
out
addr16
arpl
stos
sub
lods
out
sbb
mov
ljmp
sub
sbb
mov
pop
sub
xchg
shld
stos
into
xchg
mov
inc
and
cltd
mov
in
daa
cmc
mov
lcall
test
mov
out
bound
dec
in
sbb
pop
ror
mov
xor
xchg
jbe
inc
stos
aam
jmp
ss
mov
das
mov
push
fisubl
test
sbb
lock
lret
frstor
leave
add
cs
test
jb
jge
ljmp
clc
mov
dec
and
mov
fsubrs
test
rorb
into
dec
adc
pop
push
push
sub
sub
lret
daa
aad
fidivrs
out
mov
hlt
rorl
int
hlt
int
xor
outsb
out
cmpsb
xchg
test
adc
in
adc
mov
sarb
xor
loope
outsb
cs
subb
sbb
fisubs
jle
call
push
inc
mov
pushf
call
add
lods
jl
inc
or
dec
stos
call
and
les
add
mov
push
cli
int
inc
inc
les
inc
icebp
lock
aam
push
movsl
ds
outsb
dec
inc
mov
loop
push
add
mov
cmp
lea
out
dec
pop
stos
arpl
daa
pop
adc
lods
lahf
push
cmp
and
gs
out
sarb
pop
aas
adc
add
push
jmp
int
pop
test
sub
fwait
imul
jmp
ds
and
xor
sbb
push
mov
loope
mov
xchg
push
scas
sahf
sub
or
xchg
cmp
jp
xchg
fisubrl
mov
xor
lods
mov
pop
mov
subl
pop
shrl
movsb
xchg
pop
sbb
xor
mov
insb
fisubs
dec
sub
into
pop
jns
aam
cmpsb
push
sub
in
mov
xchg
mov
into
adc
subl
sub
push
or
les
aas
push
in
ja
mov
mov
icebp
mov
mov
jns
es
jmp
gs
je
and
sar
out
sbb
push
cmpsl
mov
jns
loop
sbb
push
cmpsl
mov
ljmp
cmpsl
mov
jns
loop
sbb
push
cmpsl
mov
jns
fisttps
mov
mov
jns
loop
sbb
push
cmpsl
mov
jns
loop
sub
mov
mov
std
loop
sbb
push
cmpsl
mov
jns
loop
sbb
push
dec
std
out
sbb
push
cmpsl
mov
jns
loop
sbb
push
cmpsl
mov
test
adcl
jl
cmpsl
mov
jns
loop
sbb
push
cmpsl
mov
ljmp
cmpsl
mov
jns
loop
sbb
push
cmpsl
mov
jns
fisttps
mov
mov
jns
add
mov
out
fwait
sub
push
movsl
loop
pop
jnp
push
pushf
pop
imul
push
fistpl
stos
jge
pop
cmp
test
testb
sbb
lods
in
pop
lods
cld
gs
mov
adc
aas
addb
mov
mov
push
cld
insb
hlt
stc
mov
rorl
sbb
add
jmp
cmp
ljmp
imulb
and
pop
scas
mov
mov
loop
cmp
lods
cli
dec
mov
or
outsb
dec
cld
imul
pop
pop
cmp
insl
scas
jle
cmp
aas
xchg
dec
movsl
ds
filds
movsl
cltd
adc
mov
dec
lods
dec
push
jae
out
pop
push
adc
mov
inc
in
lods
dec
fnsave
enter
outsb
mov
popf
lea
jno
call
in
out
cmp
in
outsb
lea
test
push
push
jmp
in
lods
and
push
and
or
es
es
outsb
jge
es
orl
and
inc
cmp
pop
sbb
insl
pop
decb
stos
cmp
fdivr
and
nopl
xchg
xor
fldenvs
data16
les
jb
data16
iret
xlat
ret
inc
jnp
shl
ret
loop
jg
jne
sub
xor
or
call
in
insb
inc
cmpsb
out
out
lock
pop
inc
cmpsb
std
and
pop
lods
and
cmpsb
jbe
daa
out
pushf
imulb
mov
mov
fidivrs
mov
mov
inc
iret
pop
jl
insb
mov
dec
pop
cmpsb
das
pop
out
dec
outsb
lods
insl
out
jge
out
data16
pop
out
data16
loop
mull
out
inc
out
int
call
dec
sub
push
fsubrs
pop
push
daa
dec
mul
sbb
ss
mov
fbld
mov
lods
cli
sti
xchg
dec
jl
daa
push
pop
in
pop
nop
jge
addr16
addr16
pop
addr16
addr16
addr16
jmp
fistpl
call
imul
stos
daa
pushf
ljmp
mov
push
addr16
mov
sbb
push
insb
mov
push
mov
shl
mov
test
inc
jae
in
mov
adc
mov
mov
push
and
mov
in
into
dec
mov
jp
sub
pop
mov
icebp
lcall
stos
and
inc
dec
stos
scas
movsbl
imull
nop
setnp
sbb
or
dec
dec
mov
push
jns
cmp
cmc
sbb
pshufw
sbb
dec
jl
icebp
mov
std
jp
les
pop
into
clc
imulb
mov
mov
or
bound
or
repnz
cs
pop
gs
lret
cld
stos
pop
xchg
repnz
cs
hlt
jecxz
xchg
mov
xchg
in
pcmpeqd
sbb
clc
dec
lods
mov
cs
setg
mov
cmp
cld
mov
mov
stc
pop
mov
sub
sub
sbb
enter
xchg
fcoms
mov
shrd
dec
shl
outsb
insb
aam
mulb
mov
and
sti
call
fsin
fimull
or
fucomip
daa
aam
mov
jno
into
fdivr
xor
out
sub
int3
jmp
pop
pop
loop
sub
mov
fisubrs
dec
mov
mov
or
push
push
mov
insl
jg
sub
mov
xchg
sbbb
emms
sub
pop
dec
clc
movsb
mov
dec
lahf
repnz
push
mov
mov
or
ficoms
lret
sbb
push
mov
stc
lcall
dec
into
test
lcall
loop
inc
cmp
aad
decb
into
clc
xor
add
mov
hlt
test
push
rep
out
std
mov
lods
dec
add
dec
call
cmc
dec
jae
adc
sbb
cs
ret
mov
popa
loop
sub
stos
sub
and
or
mov
fisubs
inc
xchg
rcrb
xchg
pop
scas
dec
jmp
lods
lods
inc
pop
fstpl
out
push
pop
into
js
pop
mov
pusha
mov
into
sbb
pop
lret
ljmp
stos
into
xchg
out
or
add
loope
dec
out
jae
in
lods
push
imul
stos
mov
mov
sbb
jnp
mov
mov
adc
out
dec
pop
scas
cmc
out
xor
and
mov
outsl
in
mov
data16
out
std
push
out
lret
or
add
mov
xchg
mov
lea
push
movsb
in
dec
lahf
test
loop
ss
scas
mov
ror
dec
adc
sbb
lret
or
es
hlt
out
jns
dec
into
mull
pop
lea
mov
mov
lods
in
push
fsubl
adc
data16
jne
lods
pop
cmpsl
or
cmp
scas
mov
sahf
pop
xchg
out
cmc
and
and
fidivs
sub
jge
pop
in
lea
loope
sub
int3
cmp
fidivs
xchg
pop
push
aam
sbb
mov
jnp
in
dec
arpl
sbb
clc
into
mov
adc
xchg
std
pop
enter
lcall
jl
sub
ljmp
loopne
xchg
adc
test
push
sbb
and
mov
pop
push
sahf
sub
pop
mov
mov
out
jl
jg
movsl
adc
fnstenv
add
test
shll
push
fistl
into
and
lret
mov
xchg
dec
dec
data16
mov
in
cmpsl
insl
mov
loop
xchg
mov
aad
push
xchg
aaa
sbb
dec
cmp
stos
jmp
int
and
cmp
dec
out
sub
mov
mov
xchg
scas
inc
inc
lahf
and
inc
jle
daa
mov
mov
fisubs
shrl
sahf
movsl
loopne
cwtl
push
pop
leave
mov
insl
sbb
xor
hlt
aam
fimull
aam
and
inc
sahf
mov
dec
pop
cmp
sub
sti
adc
ljmp
jns
sub
mov
lahf
and
dec
push
xchg
and
jne
inc
cmpsb
outsb
push
repnz
loop
lods
outsb
int3
shlb
je
xchg
cmpsl
pop
cmp
shll
push
cmp
rcll
addl
daa
in
mov
dec
jmp
loop
inc
adc
adc
movsl
sub
cmp
outsb
mov
jmp
arpl
mov
lds
sbb
xor
adc
fnsave
dec
dec
stos
mov
add
mov
and
xchg
push
mov
pop
push
mov
push
or
cmc
mov
pop
filds
jns
cltd
icebp
mov
sbb
arpl
mov
aaa
mov
mov
jo
sbb
push
ja
in
imul
daa
sar
pop
xor
into
pop
imul
pop
xchg
jmp
imulb
add
ljmp
into
mov
lods
pop
int
sbbb
movsb
adc
call
orl
aam
or
mov
mov
mov
lret
int
mov
or
or
mov
push
mov
dec
adc
or
sarl
xchg
dec
mov
mov
cmp
fwait
inc
pop
mov
ret
test
xchg
push
ds
mov
sarl
or
or
call
mov
xor
ret
stc
cmp
loop
jns
sarl
jle
lret
out
pop
push
or
pop
ds
mov
adc
sub
mov
dec
lods
lea
inc
push
out
hlt
xchg
pop
arpl
sub
dec
pop
fcoml
mov
in
es
mov
out
cmpsb
idivb
xor
mov
out
shl
notb
jno
fwait
dec
adc
data16
rol
js
ret
sbb
mov
jmp
push
xchg
push
cmp
frstor
inc
into
push
push
mov
scas
push
cmpsb
push
dec
ljmp
add
lret
dec
sub
dec
inc
test
xor
imul
into
lea
push
and
inc
lock
adc
xchg
ss
adc
shrl
push
lods
rcrl
scas
and
subb
sahf
nop
incl
daa
out
xchg
add
dec
mull
ja
push
mov
test
mov
in
adc
ja
lods
add
sub
lods
mov
sbb
cld
imul
cmp
int3
jg
in
dec
aam
das
push
pushf
mov
sub
inc
cmp
ljmp
adc
add
fimuls
jo
xchg
mov
movsl
cs
fmuls
sbb
sbb
jp
out
movsl
rorl
lods
jge
inc
sbb
push
in
ja
sub
pop
lret
mov
bndstx
sti
dec
cli
aas
lods
mov
and
push
jmp
sub
sbb
jg
cwtl
in
andb
mov
shrb
or
lods
and
cmp
sub
sub
mov
sub
inc
or
scas
ss
jae
sub
in
or
push
in
lods
arpl
sahf
mov
mov
out
ljmp
jl
loop
lret
adc
maskmovq
mov
rcl
loop
in
cmp
mov
arpl
mov
lods
aad
cmp
xchg
outsb
adc
mov
xlat
cmc
out
sbb
pusha
and
and
jmp
push
dec
das
mov
adc
lea
dec
cli
mov
dec
call
les
mov
push
sub
adc
out
dec
stc
popf
sub
stos
xchg
lods
into
cmp
pop
movsb
push
mov
cmc
outsb
and
push
fwait
or
inc
push
cmpsl
mov
add
mov
push
mov
jnp
jnp
sub
scas
mov
bound
dec
test
pop
arpl
mov
jno
or
dec
sbb
push
sub
lahf
lea
push
pop
mov
bound
rorl
sub
stos
dec
js
test
jnp
cli
test
ja
lcall
pop
xor
stos
call
lods
stc
cmp
std
loopne
pop
cli
dec
ljmp
mov
cmp
testb
mov
fldz
jbe
out
cmpsl
xchg
lret
jns
or
cs
mov
outsb
stos
fcompl
push
inc
push
mov
push
stos
adc
inc
bound
in
inc
sub
leave
imulb
jp
dec
push
lret
dec
loop
or
into
addr16
push
sub
push
and
jle
ja
outsb
jns
cmp
popa
and
pop
sub
dec
popf
sub
jns
sub
and
cltd
pop
outsb
dec
cli
lahf
mov
dec
pop
out
std
sub
jbe
sub
adc
mov
pop
stos
push
pusha
ja
adc
inc
loopne
or
popa
sbb
jecxz
stc
sub
jae
rorb
pop
sub
lcall
cmp
mov
jmp
data16
lods
sub
into
jmp
ljmp
inc
ljmp
pop
int
hlt
test
test
jge
je
add
loopne
xor
jl
ljmp
mov
sub
cmp
push
loope
cmp
push
in
push
in
cld
or
fisttpl
dec
and
aam
fildl
dec
fdivrs
mov
pop
in
mov
mov
or
adc
add
les
pop
mov
or
lods
adc
jo,pn
popa
push
and
in
jnp
dec
add
dec
jno
pop
insl
push
add
or
shrb
dec
and
add
cmp
mov
xor
dec
imul
mov
jnp
loope
cli
dec
xor
inc
leave
sbb
lcall
outsb
lods
int3
and
aas
dec
cltd
aaa
lea
outsb
orl
ljmp
jnp
dec
pop
inc
pushf
jbe,pn
pop
mov
push
pop
pushf
into
dec
dec
xchg
inc
test
jecxz
into
cmp
dec
leave
insl
xchg
jecxz
fisttpl
push
dec
fisubrl
xor
dec
and
pop
sub
fucomi
popf
mov
loopne
test
outsb
pop
pop
icebp
pop
rolb
insl
hlt
scas
and
mov
std
mov
xchg
sbb
dec
jnp
pop
sarl
or
pop
mov
and
jg
imul
or
sub
mov
in
cld
arpl
call
bound
in
push
pop
push
lea
imul
push
mov
xchg
cld
test
repnz
sahf
out
test
jbe
data16
sbb
jns
or
push
xchg
sub
push
mov
push
add
aam
sub
int3
dec
pop
stos
xor
aas
cmp
xor
pop
cmp
dec
and
in
movsb
imul
lods
imul
sbb
fabs
lods
jge
sub
pushw
push
cltd
pop
movsl
insb
mov
push
idiv
enter
mov
stos
adc
imul
insl
mov
lods
inc
push
pop
push
sub
int3
mov
inc
out
ss
lods
lods
fsubrp
sub
add
daa
sbb
arpl
out
les
adc
jle
das
push
inc
scas
adc
dec
ds
les
movsl
insl
mov
std
mov
jmp
lods
pop
lret
mov
sahf
shll
in
int3
movsl
mov
sub
sub
fistps
imul
repnz
lret
mov
popa
lea
test
and
cwtl
or
ret
mov
or
daa
push
dec
sub
cld
pop
jmp
dec
fisubrl
mov
mov
or
inc
cld
movsl
lock
insl
mov
in
pop
ljmp
sub
ss
fwait
jle
jp
fsubl
mov
jmp
or
push
ret
cwtl
inc
mov
sti
iret
sub
sub
and
scas
insl
adc
and
adc
fs
dec
mov
pop
mov
data16
in
in
scas
in
dec
lret
sbb
scas
into
inc
cs
sahf
into
inc
push
sbb
mov
inc
and
sbb
leave
ret
in
pop
mov
xchg
shlb
jl
iret
sub
std
push
jmp
mov
jmp
jnp
pop
outsb
jae
aam
test
clc
bound
adc
cs
pop
scas
addr16
orl
push
adc
es
lcall
loop
out
fistpl
xchg
and
mov
psubsw
push
mov
test
cld
lods
fnstsw
int
jle
sub
xchg
pop
pop
inc
mov
jae
insb
dec
pop
xor
sub
sub
aaa
int
outsb
mov
mov
popa
lea
cmp
lea
out
test
adc
push
inc
xor
iret
pop
neg
imul
push
fisubs
mov
mov
out
jno
jnp
test
mov
hlt
mov
adcl
xchg
out
mov
sbb
fadds
cmp
lcall
sbb
cmp
mov
sbb
inc
loop
das
in
cmpsl
inc
scas
sti
data16
jg
sahf
cmpl
or
xchg
fidivl
sbb
popf
push
out
mov
adc
iret
xor
pop
call
and
jg
imul
mov
and
fmull
adc
shlb
xchg
or
inc
mov
xchg
pop
bound
mov
outsb
jae
jle
movsb
and
xor
pop
pop
outsb
pop
in
cmp
sbb
jne
jmp
and
punpcklwd
repnz
xchg
mov
cs
inc
and
fnstcw
sti
jecxz
subl
in
fiaddl
push
xchg
xchg
out
jns
sub
push
lods
scas
dec
mulb
je
pop
outsb
mov
in
xor
dec
lods
dec
pop
iret
pop
outsb
mov
cmpsl
cmpsl
mov
cmpsl
jo
mov
xor
std
cmpsl
iret
pop
xor
dec
inc
pop
std
sub
loop
cltd
push
mov
in
jbe
into
push
push
icebp
cs
adc
ret
sbb
rcrb
outsb
pop
jg
pop
jmp
jg
cmpsb
iret
sbb
jge
push
mov
inc
jl
dec
adc
out
add
out
mov
cld
std
xor
mov
mov
movl
aas
ret
mov
sbb
add
std
out
push
push
and
cmp
std
xchg
jecxz
mulb
mov
dec
xlat
mov
mov
fwait
ds
imull
or
std
xchg
mov
dec
jmp
in
out
mov
push
das
mov
iret
sub
jmp
sub
cs
push
js
ljmp
dec
dec
ds
jno
lret
adc
dec
xchg
data16
aas
sarl
inc
or
jnp
pop
sub
xor
stos
sbb
stos
sub
fidivs
and
jbe
jle
mov
push
jnp
sahf
stos
sub
jbe
sub
pop
cmp
pop
mov
jle
mov
jbe,pn
jnp
push
and
push
mov
outsb
pop
adc
in
pop
adc
cmp
adc
into
inc
jle
mov
lods
int3
out
jnp
popf
sub
adc
insl
outsb
dec
and
clc
lcall
dec
outsb
clc
lcall
dec
ds
push
ds
lcall
ds
fistpl
lcall
in
outsb
aad
loop
jb
fistpl
lcall
or
push
loopne
sub
aad
lcall
mov
lcall
ds
aad
lcall
or
aad
lcall
push
das
das
adc
int3
cmpsl
pop
adc
lods
hlt
inc
adc
lea
ret
loopne
xchg
scas
add
cmp
mov
xchg
jo
mov
in
mov
outsb
push
mov
mov
jb
jno
mov
ficoml
movsl
and
push
das
movsl
data16
dec
mov
scas
jo
pop
sbb
jns
push
loopne
pop
jae
out
jmp
rolb
enter
dec
ret
jns
add
xlat
rcll
rcr
pushf
dec
cmp
test
sub
in
add
or
repnz
scas
pop
cmpsb
cli
push
add
pop
mov
insl
add
add
enter
xchg
push
pop
push
mov
or
adc
add
pop
gs
add
cmp
mov
or
sar
int
sub
or
out
loope
fcoms
in
outsb
ljmp
mov
cmp
pop
jg
sarl
and
mov
scas
and
dec
pop
mov
sahf
in
pusha
in
lahf
mov
cmp
add
push
pop
out
and
jle
pop
sbb
dec
sbb
mov
mov
ljmp
pop
movlps
leave
mov
lret
sbb
repnz
sub
pop
adc
imul
add
into
cmp
sub
dec
mov
add
divb
mov
fisubs
out
add
mov
add
sti
xor
sahf
pop
adc
add
out
gs
cs
cmp
mov
shlb
aam
rorl
push
out
xor
sbb
rorl
clc
jge
scas
enter
int3
xchg
out
dec
pop
fcmovne
jg
das
mov
sub
mov
or
dec
pop
pop
xchg
cwtl
pop
outsb
and
scas
pop
jmp
lahf
sub
dec
jnp
push
sub
andl
dec
aam
cmpl
add
push
push
sahf
in
lret
xchg
dec
iret
cld
push
sarb
enter
jo
mov
mov
pop
popf
out
xchg
push
fsubp
fldt
and
mov
aad
mov
add
jle
out
cmpsl
inc
cmp
dec
xchg
imul
movsb
and
mov
enter
fsubl
ljmp
das
cmc
jg
cmp
into
push
in
cmc
ds
cmp
sbb
sub
xor
gs
sub
pinsrw
fnstcw
aas
sbb
inc
mov
into
enter
jo
mov
pop
and
push
cltd
daa
pop
xchg
push
out
in
outsb
xchg
js
cmp
ja
not
bswap
imulb
cmp
out
push
pop
out
mov
xchg
cmp
mov
inc
lret
xchg
jge
dec
enter
icebp
int3
mov
fisubs
out
push
xor
mov
into
lods
jg
pop
into
pop
push
scas
mov
jge
pop
add
jge
and
leave
push
fdivrs
inc
or
test
pop
test
lahf
iret
sbb
cs
test
mov
jo
push
addr16
push
cli
jle
pop
mov
cmc
lahf
push
push
popf
imul
sarb
and
xor
pop
enter
inc
lods
sbb
gs
mov
mov
ret
imul
or
aas
sub
test
in
test
mov
cmp
fucomi
adc
lret
test
and
ljmp
pop
xchg
sub
mov
lret
dec
adc
imul
cmc
inc
js
jmp
scas
fwait
xchg
xchg
lock
inc
and
pushf
out
into
jl
push
cltd
movsl
push
push
hlt
icebp
push
cmp
imul
sbb
fs
fcomi
insl
lret
lahf
ds
sbb
dec
mov
push
out
mov
sub
jnp
push
or
or
hlt
out
lret
push
and
out
pop
icebp
cs
pushf
or
mov
and
das
push
data16
mov
push
bound
pop
das
dec
ljmp
sti
push
mov
sub
and
dec
subb
mov
in
lods
loopne
xor
xor
mov
mov
je
xchg
and
shl
or
shrb
lret
dec
das
mov
sub
adc
pop
addr16
das
cmp
loop
sub
push
lea
ljmp
or
push
stc
je
push
fsub
xlat
push
inc
out
je
nop
inc
mov
and
lret
mov
xchg
jnp
push
mov
ljmp
imul
insl
jle
hlt
sub
leave
popf
arpl
cmp
or
imul
dec
sub
stc
pushw
inc
inc
add
pop
rcll
sub
stos
arpl
flds
out
push
out
cmp
adc
call
std
popf
dec
call
cmc
pop
mov
sub
jle
or
bound
sub
cmp
sti
dec
fisttps
faddl
push
lret
data16
adc
and
and
out
fdivrs
mov
mov
sbb
mov
ja
les
or
in
fcomip
outsb
jp
pop
outsb
bound
nop
testl
mov
into
out
test
fdivrl
stc
repnz
sub
loopne
leave
cltd
cli
jb
push
and
sbb
xor
mov
ror
inc
stos
idiv
in
inc
adc
int3
sbb
dec
sti
pop
stc
mov
push
mov
icebp
repnz
daa
insb
lret
lods
mov
mov
loopne
adc
sub
mov
jne
mov
mov
stos
gs
aam
sub
and
das
rorl
and
dec
pop
jecxz
jbe
pop
dec
subl
in
jmp
scas
cmp
je
loopne
aam
and
loopne
fmul
xchg
push
sbb
lods
int
cmp
enter
out
gs
jbe
fwait
rcll
sub
lret
shl
lods
dec
dec
jo
insw
loopne
lds
push
and
sti
inc
lea
pop
add
outsb
out
mov
popf
fwait
aam
sub
lea
gs
in
mov
mov
push
scas
lahf
ja
out
cwtl
pushf
stos
jecxz
add
in
lods
cmp
dec
mov
push
sub
xorb
jmp
int
sbb
leave
xlat
mov
sub
or
test
inc
push
lds
xchg
jmp
pop
sarl
sub
sub
pop
dec
outsb
jb
push
lds
scas
in
in
shr
cmp
pop
stos
cltd
push
mov
insb
lods
not
mov
int
mov
push
sbb
jge
and
lds
in
lcall
push
pop
lcall
cltd
and
jo
and
lret
mov
xchg
and
pop
dec
shll
lret
mov
and
jle
lcall
nop
std
xchg
mov
pop
fsts
jmp
test
call
btc
stc
lret
or
dec
paddsb
int
sub
ljmp
push
mov
ds
lods
das
cmp
addb
stos
int3
jnp
loop
add
in
movsl
iret
push
outsl
add
jl
cmpb
lock
push
mov
push
sbb
and
push
daa
cmp
ja
stc
or
adc
int3
gs
or
loop
pop
pop
jecxz
jg
jl
sahf
dec
fwait
call
dec
sub
subb
jmp
aaa
movsl
dec
test
insb
decb
test
aaa
movsl
out
stos
pop
jmp
jmp
sub
out
lahf
and
pop
sbb
aaa
and
cmp
lods
cmp
ret
cmp
mov
in
mov
dec
call
das
insb
ljmp
inc
mov
pusha
lea
sti
pop
pop
sub
in
mov
in
xchg
leave
and
jns
sbb
sbb
mov
pop
mov
cmp
pop
cmpsb
cli
pop
jbe
cs
xchg
imul
ds
mov
xchg
out
in
in
std
sbb
or
pop
loopne
pop
dec
pop
sti
xchg
push
fcmovu
cld
xchg
and
fwait
mov
and
and
and
and
scas
sbb
mull
or
imul
not
call
jmp
inc
cmc
pop
pop
loopne
fs
sub
cld
pop
imul
sub
inc
les
fisubrs
fisubs
in
call
insb
dec
lods
sub
out
and
pusha
push
mov
sbbb
cmc
out
loope
xchg
lods
xchg
cs
es
push
mov
mov
xor
and
adc
mov
sub
outsb
mov
mov
and
dec
mov
in
lahf
sbb
sub
imul
mov
push
movl
dec
and
call
pop
test
adc
dec
adc
cmpsb
cld
das
imul
mov
adc
cmp
cmp
call
dec
or
lods
js
and
push
pop
push
enter
stos
jns
es
mov
add
scas
rolb
into
xchg
insl
cwtl
pop
pop
push
mov
cmp
mov
lahf
repnz
add
lcall
and
mov
jecxz
aad
jnp
mov
or
sub
sub
sbb
and
lods
push
mov
mov
stc
lods
jnp
pop
scas
mov
das
push
in
dec
bound
add
data16
out
mov
imul
lahf
lea
out
dec
cmpsb
dec
sub
xchg
mov
cmp
pushf
adc
dec
das
imul
rol
or
lea
mov
popa
cld
push
aas
ja
adc
imul
jmp
cmp
addr16
lret
push
mov
dec
je
pop
outsb
lret
xchg
push
clc
into
fstl
or
jno
stos
scas
test
pop
loop
sbb
mov
enter
call
pop
jno
or
and
sub
int3
rclb
mov
ror
stos
pop
mov
pop
std
and
cmp
int3
xor
mov
fdivl
inc
pandn
jnp
mov
stos
add
mov
scas
out
mov
sub
jmp
pop
pop
or
movsb
out
adc
aas
jle
fisttpll
cmpsl
loope
xchg
pop
cs
or
sbbb
sahf
or
subb
mov
mov
adc
les
flds
add
pop
sub
inc
dec
pop
or
out
pusha
lahf
out
mov
or
mov
sbb
out
or
mov
cwtl
dec
or
mov
ds
fimuls
cs
fnstsw
push
jg
pop
mov
sbb
int3
in
jae
mov
dec
push
ljmp
mov
stos
sbb
inc
arpl
mov
sub
sbb
lret
pop
push
mov
pop
push
dec
or
int3
pushf
rorl
inc
sub
jge
sbb
scas
inc
int3
sub
mov
mov
lea
cli
xchg
popf
mov
mov
xchg
xchg
int
test
cld
frstor
mov
daa
push
sbb
sub
jmp
out
jge
out
pusha
movsb
inc
xor
aas
pop
pop
inc
add
jno
or
pop
mov
sub
pop
lods
cld
das
cmp
sti
outsb
sar
das
mov
mov
sub
fnstsw
cmpsb
sbb
arpl
scas
xchg
jle
into
dec
dec
std
or
xchg
add
xchg
xchg
xlat
or
mov
and
into
cltd
lds
in
dec
sbb
stos
test
out
or
add
or
hlt
dec
ljmp
jmp
pop
out
pop
sahf
popa
outsb
aam
int3
movsb
cmpsb
jle
fwait
shlb
scas
mov
add
into
lods
push
and
hlt
push
cmc
jb
or
pop
push
mov
mov
add
pop
rorb
aam
fs
mov
addl
mov
mov
daa
push
mov
daa
push
mov
je
or
sub
sbb
cld
out
nop
das
mov
cmp
aad
mov
sub
mov
push
outsb
or
jle
mov
stos
adcl
mov
insl
or
add
xchg
pop
les
stc
insl
and
push
adc
pop
sbb
push
hlt
ds
mov
loopne
push
xor
adc
dec
xor
lods
inc
lret
dec
xchg
call
push
pop
ja
mov
test
inc
test
mov
pop
scas
subb
mov
dec
xchg
pop
dec
sbb
cwtl
rcrb
add
inc
and
jbe
sarb
leave
jb
out
push
mov
and
repnz
idivb
jns
xor
sub
mov
add
fidivrl
sub
dec
test
jns
or
xlat
push
cld
jns
mov
fdivrp
icebp
fbstp
pusha
es
test
std
pop
jl
cmp
lods
sub
lea
mov
and
sbb
scas
mov
lock
ss
sbb
and
xor
fidivrs
inc
fmuls
fwait
dec
sbb
mov
xchg
adc
pop
sub
dec
push
nop
mov
jle
add
fmull
push
pop
pop
mov
dec
idivb
clc
cmc
ljmp
mov
sbb
test
pop
fisubrs
mov
cmpsb
shll
popf
pop
mov
pop
sub
mov
push
test
mov
loopne
dec
push
ret
outsb
cmpsb
push
and
sbb
fcmovnu
hlt
jg
inc
jne
cmp
ffree
and
dec
in
mov
jle
insl
push
push
sbb
jecxz
in
outsb
in
inc
fstpl
dec
mov
int
inc
iret
fstpl
fstl
dec
mov
popf
out
frstor
pop
lock
insl
push
das
dec
fisttpll
loopne
dec
int
pop
push
int
aaa
lea
lcall
jp
hlt
adc
ja
rcrb
imul
push
std
lcall
cmpsb
mov
mov
and
int
in
inc
test
and
dec
stos
lret
clts
stos
mov
push
rcr
sub
cmpsl
inc
sub
mov
jl
pop
imul
lret
insl
lods
pop
mov
sub
xchg
inc
stos
mov
lods
insl
pushf
das
or
or
in
mov
cmpsb
lods
lods
imul
out
cwtl
inc
dec
mov
das
fmulp
cs
pop
sub
mov
adc
push
pop
and
icebp
and
jo
xchg
sbb
push
and
imul
sahf
scas
or
fcomps
pop
enter
mov
pop
fldcw
or
mov
lret
popa
mov
or
push
pmaxsw
and
sub
fsubrl
xchg
cwtl
lds
ret
enter
or
das
push
outsb
imul
stos
in
adc
das
mov
int
inc
jmp
and
jle
popa
cmpb
mov
mov
fnsave
mov
in
mov
test
into
lods
insl
push
stos
sbb
loope
imul
mov
lock
enter
mov
imul
mov
push
sbb
lea
jl
fmuls
jo
pop
into
mov
fsubrl
and
cld
out
inc
shrl
adc
jno
inc
fs
mov
gs
ja
insl
mov
lret
sub
fdivrs
push
sub
pop
push
or
push
imul
insl
inc
or
pop
lods
aaa
movsl
popf
xor
clc
sub
or
jnp
loopne
test
in
loope
sub
fwait
loop
jg
and
arpl
and
por
pinsrw
out
or
sbb
int3
int
out
shr
outsl
inc
inc
out
bound
arpl
das
les
inc
test
das
dec
pop
imul
xchg
add
call
jmp
mov
mov
iret
ljmp
testb
sub
jle
out
ds
jo
lock
push
jae
xor
lahf
cmp
push
xchg
jg
sti
push
jmp
mov
hlt
fsubl
cmc
sub
lods
dec
jle
and
out
in
fsubrs
pop
jne,pn
stc
leave
push
add
or
repz
or
mov
cs
rolb
stos
or
in
imul
ja
mov
stos
pop
bound
outsb
lahf
inc
sbb
sarl
dec
or
dec
jl
mov
lea
rcrl
fs
push
pop
jmp
pop
inc
scas
jle
in
or
push
je
or
pop
cmpsl
lahf
push
dec
je
or
ljmp
repz
mov
movsb
mov
push
in
in
xor
arpl
adc
sahf
pop
push
rolb
das
faddl
and
cmp
mov
xor
mov
in
or
lret
fmull
xchg
or
decl
dec
rorb
mov
sub
stos
or
dec
and
out
add
cmp
out
push
inc
lret
mov
dec
ret
dec
insb
fmul
gs
out
cld
into
popf
add
dec
mov
cmp
mov
jp
push
and
adc
push
imul
sbb
imul
ret
aad
lahf
test
pop
mov
mov
cmpsb
clc
mov
mov
xchg
fs
lea
adc
jae
inc
and
out
adc
sub
or
fmull
popf
sbb
lock
out
aad
xchg
pushf
dec
pop
popf
pop
fisubrl
xchg
cmp
insb
sub
dec
mov
test
cmpsb
insb
lods
cld
in
and
in
fsubp
pusha
dec
std
test
lcall
in
inc
inc
jp
mov
sub
and
imul
xchg
paddsb
mov
cmpsb
sbb
mov
cmp
jg
daa
pop
fdivrp
pop
mov
mov
addb
add
bound
enter
movsl
jmp
jle
outsb
rcrb
loop
insb
nop
inc
push
jge
jg
fs
int
insl
cli
callw
pop
lret
sub
and
fiaddl
cmp
test
aam
imul
cs
ljmp
out
bound
mov
in
pop
mov
dec
insl
jle
subl
loopne
mov
iret
add
dec
sub
in
inc
daa
addr16
lods
test
dec
push
std
mov
testb
fwait
out
jne
fildll
fidivl
insb
sbb
int
or
sub
daa
jecxz
sub
pop
in
outsb
and
dec
je
insb
sbb
stc
outsb
add
pop
inc
es
fwait
push
imul
mov
scas
pop
cld
imul
test
clc
add
cmc
dec
mov
dec
jb
dec
mov
dec
push
dec
push
inc
imul
push
inc
lcall
repnz
push
xchg
ret
imul
sti
into
int
test
or
inc
lods
add
les
cwtl
or
xchg
fldenv
jbe
sbb
fidivl
sarl
pop
jb
dec
mov
popw
sub
adc
ss
pop
cmp
pop
pop
lret
mov
sbb
ds
mov
adc
adcl
in
scas
or
lret
mov
push
scas
scas
pushf
sub
push
mov
cmp
comiss
xlat
pusha
fiadds
add
fdivrs
cmp
clc
mov
hlt
jl
aam
mov
push
adc
pop
push
lahf
ficoml
pushf
jmp
sub
or
lods
mov
insb
aad
lcall
dec
and
data16
lods
xchg
test
ds
push
inc
pop
ds
jne
aad
lods
in
jmp
lahf
mov
ljmp
andb
ljmp
ljmp
add
stos
fcomps
pushf
stos
rolb
or
push
add
imul
insb
jge
insl
jo
mul
jecxz
lret
cld
lahf
clc
xchg
loopne
aad
std
jecxz
pop
xchg
or
cmp
shr
out
mov
in
test
in
jecxz
dec
in
fs
add
push
fbld
es
mov
lahf
inc
dec
std
subb
sub
inc
call
aas
test
pusha
or
cmc
aas
addr16
dec
sbb
jb
adc
dec
adc
jmp
sbb
outsb
in
loopne
pop
cmp
mov
movl
pop
sub
int3
sbb
push
and
dec
lods
push
pushf
stos
jge
icebp
mov
popf
mov
outsb
adc
jmp
insl
pop
cli
loopne
aas
sti
das
shr
push
sub
or
pop
xchg
inc
aas
call
dec
stos
test
stos
sti
xchg
pop
cld
stos
or
and
dec
sbb
pop
sub
fcomi
cmc
cmc
arpl
ljmp
mov
sub
pop
lea
outsb
xor
insl
mov
dec
dec
js
test
jb
push
and
inc
ja
jmp
lcall
ljmp
int3
mov
inc
push
fidivrl
into
psubusb
movb
pop
push
imul
sahf
fsubrl
jp
test
adcl
les
mov
pop
enter
sti
ret
lret
jno
mov
lahf
hlt
or
test
movsb
push
lods
cmp
into
je
movsl
sbbb
or
hlt
call
sub
pop
push
arpl
cltd
cmc
outsb
iret
xchg
fcoml
sub
data16
lcall
push
lds
or
lods
xchg
test
fcmovnb
sbb
mov
int3
imul
imul
lock
pop
movsb
call
mov
popf
dec
jle
in
and
addr16
lahf
pushf
mov
insb
les
popa
popf
xchg
mov
pop
fidivrs
adc
sub
sub
dec
insb
xchg
or
or
in
sar
cli
dec
push
dec
movsb
inc
stc
dec
xchg
pop
pop
cmp
movsb
imul
cmp
dec
adc
mov
cld
dec
mov
loop
xchg
pop
ljmp
jne
mov
js
loopne
loope
repz
fcmovbe
ss
dec
mov
out
add
mov
dec
push
inc
insl
lahf
mov
mov
jmp
lods
dec
call
cwtl
cs
lret
dec
mov
fwait
sbb
in
or
pop
fstps
dec
in
jnp
sbb
into
lea
mov
mov
pop
dec
loope
lahf
das
jnp
out
es
jmp
test
movsb
fdivrs
push
pop
cmp
sub
dec
out
loop
ss
test
sbb
sub
fisubs
int3
pop
bswap
insl
mov
mov
pop
out
dec
and
pop
adcl
push
in
jne
mov
addr16
push
xor
dec
insb
mov
and
mov
daa
push
dec
scas
mov
stos
test
adc
mov
into
fs
sub
fisubs
ljmp
cmp
stc
dec
out
sub
mov
outsb
sub
sub
or
jmp
fdivp
fucom
loop
ret
dec
imul
push
pop
std
dec
daa
sub
fwait
xchg
sub
fisubs
call
ljmp
int3
dec
bound
push
jp
test
popl
clc
cmp
jmp
lods
pushl
push
rol
stc
jmp
lea
jo
je
pusha
pusha
movb
lea
jmp
lea
sub
not
test
mov
pusha
rcl
mov
jmp
pushf
mov
call
and
lea
xor
shr
mov
dec
shl
mov
shl
shl
add
or
mov
pusha
lea
jp
stc
bt
mov
jmp
cs
fs
mov
out
pop
lret
xor
arpl
sbb
rolb
out
lcall
pop
lods
push
imulb
push
sarl
movsb
pop
add
sub
mov
mov
rep
xorb
out
stc
mov
mov
ds
mov
rclb
clc
enter
lds
std
leave
xor
xchg
push
and
jb
push
lcall
dec
aas
dec
cmc
mov
pop
fwait
mov
outsl
mov
xchg
xchg
inc
mov
outsb
insl
jnp
clc
mov
movl
push
movb
push
mov
lea
jmp
bt
cmc
or
pushf
pushl
pusha
pushf
lea
jne
sbb
rol
mov
sub
mov
pushf
push
jmp
pusha
pusha
pushf
push
movl
push
mov
pushf
movl
mov
pushl
push
mov
lea
jmp
mov
pushl
movl
lea
je
pushf
movb
cmc
call
call
lea
jmp
in
cmp
sahf
dec
xchg
xchg
jb
jno
rcr
mov
pop
push
dec
xor
sbb
aam
popa
adc
xchg
sbb
addr16
sbb
test
add
in
enter
lods
mov
loopne
dec
insb
adc
or
icebp
in
test
and
push
mov
test
cmp
xor
fwait
fwait
mov
xchg
cmpsb
pop
imul
cmpsl
dec
mov
jno
movsb
xor
pushf
sbb
cmpsl
xor
pop
mov
push
outsl
ret
xor
cmp
mov
pushl
clc
mov
or
push
pushl
pushf
push
lea
je
pushf
mov
movzbw
pusha
mov
mov
lea
pushf
jmp
cmc
bt
cmp
pushf
lea
jae
seto
bts
mov
ror
neg
mov
bts
btr
and
mov
test
bt
test
xor
test
jmp
sub
lea
mov
pop
xchg
lea
pop
pushf
mov
pushf
movsbw
jmp
ljmp
pop
stos
xor
ljmp
ja
in
shlb
jmp
les
mov
mov
jmp
or
in
repz
mov
mov
iret
daa
ljmp
xchg
mov
pop
and
sahf
lods
out
adc
arpl
subl
popa
addr16
outsl
js
add
rol
test
xor
cmp
pushf
movb
jmp
pushf
cmp
pushf
call
add
inc
js
je
jb
arpl
jae
xchg
xchg
or
and
daa
popa
pop
and
sbbb
lock
or
inc
adc
jns
mov
cli
arpl
sti
repnz
pandn
nop
or
add
orl
and
adc
loopne
mov
mov
jecxz
cmp
jmp
in
lcall
xchg
leave
mov
movsl
mov
lock
mov
push
ret
inc
mov
out
adc
jb
call
mov
push
insl
or
cmp
inc
roll
mov
aas
js
repz
xchg
ret
dec
xorl
das
rclb
sbb
cmp
mov
cltd
xor
test
addl
xchg
shl
push
jg
arpl
cmc
pop
loope
cmp
sahf
sub
ffree
jns
gs
inc
pop
insl
stc
mov
sbb
push
inc
daa
or
cmp
xchg
imul
ja
xchg
in
jno
sbb
mov
lods
adc
or
lcall
xchg
jno
jne
pusha
push
nop
sahf
sbb
sub
push
jo
ret
js
out
xchg
ret
out
inc
or
add
rorb
in
adc
scas
jg
add
repz
push
mul
jl
mov
push
orl
insb
mov
stos
xchg
lea
or
test
fwait
dec
mov
jmp
aam
xchg
hlt
sub
mov
sarl
sahf
dec
cli
repz
pop
pusha
xor
stos
sbb
push
mov
xchg
popa
cli
jl
pop
xchg
cmp
sub
mov
sub
daa
mov
shufps
or
stc
inc
repz
out
divl
orl
call
clc
insl
repnz
xchg
mov
cwtl
jecxz
inc
pushf
or
dec
xor
insl
lcall
cmpsl
fcos
ret
jne
aam
push
inc
and
repz
mov
pusha
lods
sbb
and
je
neg
and
outsb
mov
movb
pushf
jmp
jmp
lea
je
pusha
push
cmp
mov
mov
jmp
lea
jne
neg
shl
adc
sar
mov
jmp
push
lock
std
std
xorl
mov
ret
jno
popf
pop
ret
in
and
pushf
mov
pop
scas
ss
cmp
jl
jge
cmp
add
dec
inc
loopne
outsl
aam
pop
lret
add
loop
and
clc
nop
xchg
mov
sbb
cltd
add
xchg
inc
mov
shr
xchg
push
es
jmp
mov
jmp
adc
inc
sub
aad
dec
aaa
das
adc
push
repz
jle
ss
adc
cmp
xchg
cwtl
cmp
popl
dec
mov
mov
xlat
fs
add
out
test
ret
sub
push
sbb
xlat
push
fildll
adc
jp
inc
push
or
pushf
arpl
in
adc
scas
push
imul
pusha
lret
adc
loop
ja
jg
mov
lods
or
or
jl
and
xor
repz
sub
cs
xchg
loope
cmp
xor
push
ret
mov
xchg
stc
movntps
jb
bswap
mov
xchg
imul
repz
xchg
mov
dec
gs
roll
and
mov
loop
xor
pop
sub
push
fldt
ficoml
enter
mov
pop
pop
mov
adc
clc
inc
mov
xor
xchg
int
dec
aad
cmp
fsubrs
dec
sar
out
cmp
mov
push
js
ljmp
xor
int3
fbstp
push
shl
out
gs
push
inc
ficomps
enter
dec
pop
cmp
mov
arpl
cld
or
mov
nop
inc
inc
call
cmpsl
out
mov
adc
repz
pop
imul
and
int
adc
mov
mov
bnd
int
inc
dec
popf
mull
bound
scas
daa
jmp
ficoms
mov
sbb
nop
rcrl
dec
jo
pop
movsl
mov
ja
push
mov
popa
cmp
jno
xchg
js
xchg
mov
sub
pop
adc
push
adc
xor
sub
dec
jnp
loope
aaa
xchg
jle
xor
test
dec
gs
mov
sbbb
add
sbb
lods
inc
enter
pop
in
setp
xor
xor
jecxz
loope
sbb
popa
int
add
mov
and
add
icebp
jl
mov
lea
ja
not
inc
not
inc
push
setge
inc
add
bt
clc
clc
adc
xchg
pusha
xadd
sbb
mov
or
add
cmc
mov
add
call
lea
jne
pusha
movb
mov
mov
jmp
add
pushf
push
push
lea
jmp
lea
je
clc
bt
bt
add
bt
clc
cmp
pushf
lea
jb
clc
test
clc
jmp
stos
sub
rcrb
xor
lret
mov
mov
lahf
lahf
push
xchg
pop
dec
call
sub
pop
jmp
in
sarl
shl
cld
std
xor
mov
ret
imul
int3
inc
ret
push
or
bound
xchg
arpl
cmpsb
dec
mull
call
jne
gs
xor
fs
insb
add
add
in
sbb
call
popf
cpuid
nop
push
movl
pusha
call
arpl
rcrb
into
mov
lret
cmp
enter
sbb
hlt
sbb
xchg
addr16
xor
loope
mov
idivl
sbb
test
outsl
fwait
jle
push
pusha
mov
mov
arpl
push
mov
lds
inc
push
enter
add
and
push
ret
loopne
int3
mov
ljmp
lea
aad
pushf
les
xchg
cmp
mov
push
mov
bts
btr
mov
stc
sub
pusha
rep
movzbw
movzbw
mov
mov
pushf
mov
pushl
push
lea
jmp
lea
jne
movzbl
mov
push
mov
push
lea
jmp
call
add
clc
bt
mov
stc
cmp
not
lea
bswap
mov
movl
lea
ja
call
jmp
xchg
pushf
lea
push
bswap
pushl
popl
pushf
mov
movsbw
movsbw
lea
push
movl
movsbw
lea
call
call
icebp
mov
iret
sahf
dec
jge,pt
addr16
in
xchg
andb
and
aas
aas
cmc
sbb
rorl
xor
push
cmpsl
stos
cli
adc
ss
call
ljmp
adc
jecxz
jae
mov
lods
xor
scas
sahf
stos
test
test
sbb
adc
xchg
adc
push
dec
inc
mov
push
stc
jae
out
and
push
and
jnp
mov
sub
jae
les
inc
test
lock
cwtl
popf
jle
rcrb
ja
xor
sbb
cmp
jge
nop
sbb
sub
jbe
lret
popf
push
adc
pop
pop
ss
mov
enter
in
adc
imull
fdivl
loopne
insl
divl
out
mov
add
push
mov
cmp
mov
mov
ret
pop
inc
cmpsl
fdivrl
repz
inc
mov
fists
stos
clc
and
sub
mov
mov
push
ret
pop
inc
cmpsb
fdivrl
pop
shrl
jle
mov
pop
loope
cmpsl
cmpsl
out
push
hlt
push
add
jo
xor
js
test
jg
jmp
loop,pt
clc
xchg
push
mov
cmc
dec
jno
xchg
xor
push
adc
and
mov
jb
imul
push
or
montmul
cmpsb
add
mov
inc
add
shlb
push
push
jle
push
xor
mov
mov
mov
pop
push
cmp
ds
aad
popa
or
push
adc
sub
or
adc
xor
mov
inc
and
inc
lea
pop
or
jb
in
inc
sub
or
rolb
jle
dec
rolb
shrb
add
mov
sub
nop
pop
int3
cltd
cwtl
sub
repnz
adc
xchg
xor
repz
inc
inc
stos
lea
dec
fldl
or
fwait
out
or
data16
faddp
jmp
stos
mov
mov
push
ds
add
leave
xchg
loop
and
push
and
adc
pop
push
or
test
out
cwtl
aas
mov
ljmp
fmuls
sbb
inc
add
movsl
sbb
and
push
xorb
inc
xor
push
push
push
ret
sub
popa
stos
popf
cmpsl
das
jo
popa
or
xlat
inc
into
inc
push
mov
neg
popf
xchg
lods
nop
lods
ds
data16
push
mov
icebp
xchg
hlt
push
movsb
ds
and
mov
push
fldl
pop
mov
iret
cli
call
dec
or
sbb
mov
inc
fdivrl
push
hlt
dec
mov
mov
mov
in
mov
xchg
sti
scas
adc
or
in
cmp
mov
in
ja
xor
mov
jp
mov
mov
and
hlt
movl
out
pop
call
mov
adc
sahf
dec
add
or
aaa
fwait
loopne
iret
push
hlt
sbb
push
std
mov
int3
xor
ret
dec
lcall
mov
inc
pop
insl
lods
adc
xor
outsl
in
stc
sbb
mov
mov
push
pop
sbb
xchg
inc
push
sbb
jne
inc
or
jmp
in
jo
notl
movlps
pop
cs
and
lock
test
scas
dec
leave
das
nop
lret
sbb
outsl
or
adc
leave
xchg
flds
arpl
ja
push
hlt
jecxz
div
or
out
js
cmp
push
aaa
mov
add
mov
lods
jp
rcr
mov
jg
adc
mov
mov
leave
dec
jo
ljmp
lea
jg
jge
jl
dec
out
into
pop
sub
xchg
mov
jmp
dec
sub
ljmp
push
lea
nop
fmul
ss
push
call
stc
jp
adc
addl
jmp
mov
decl
mov
pushf
mov
cmp
setb
clc
movsbl
mov
shr
mov
pushf
stc
test
sub
stc
cmc
bt
push
repnz
push
pushf
pushf
pusha
lea
jne
push
pushf
pusha
lea
jmp
ja
sbb
sahf
dec
les
and
lret
test
lock
pushf
fs
sbb
push
cwtl
push
or
add
lock
insb
fdiv
das
mov
pop
fisubs
push
fistpl
sbb
popaw
arpl
inc
mov
xchg
gs
mov
pusha
add
mov
inc
mov
ficoml
loop
imul
jbe
std
mov
inc
movsb
or
scas
in
mov
jecxz
addr16
test
sbb
enter
pop
push
cmp
lds
cmc
cs
pop
push
fldl
sub
cmc
ror
cmc
sub
jb
cmp
xor
jmp
or
pushf
lea
je
xchg
lea
mov
xchg
bswap
movsbw
movzwl
bswap
pusha
call
lea
ja
pusha
jmp
lea
jb
pusha
stc
pushf
cmp
pushf
jmp
lea
je
pusha
sub
test
cmp
push
pusha
lea
ja
push
imul
cmc
push
test
push
add
pusha
pushf
mov
movb
lea
jmp
in
pusha
movl
pushf
movl
mov
movl
movb
pusha
lea
jmp
mov
pusha
lea
pushf
setge
pushl
popl
pushf
mov
cwtl
call
push
call
rol
neg
cmp
xor
sub
neg
xor
rol
not
pusha
inc
and
sub
mov
pushl
not
stos
push
pushf
call
clc
pushf
push
and
push
stc
test
add
pusha
movb
lea
jmp
call
add
dec
outsl
arpl
inc
jb
add
xchg
lea
pop
call
sbb
dec
bnd
jae
lods
lcall
icebp
xchg
mov
xchg
leave
lock
pusha
subl
xchg
jae
aad
pushf
std
push
movsl
rcl
ja
mov
add
sub
jmp
adc
rcr
mov
sub
imul
insl
dec
push
mov
mov
adc
xchg
adc
insb
movsb
mov
sbb
mov
push
mov
clc
ds
cmp
dec
sub
pop
test
cmp
out
pop
andb
cltd
sahf
ds
fdivrp
aas
inc
mov
stc
pop
mov
fimull
loopne
push
or
hlt
imul
adc
in
add
add
aas
or
mov
cmpsb
adc
lods
xor
ja
xorb
and
icebp
xchg
testb
xorb
cmpsl
xchg
cmp
xchg
push
imulb
mov
jmp
lea
jle
mov
pushf
add
adc
shl
sar
movl
shrd
mov
test
cmp
pushl
pushf
jmp
pushf
mov
lea
jne
pusha
pushf
mov
stos
mov
mov
mov
lea
jmp
jmp
jmp
jmp
or
cs
xor
lret
insl
xor
cmp
mov
fadds
movb
out
pop
cmp
mov
dec
hlt
into
dec
jecxz
jne
sbb
inc
scas
jmp
mov
xor
mov
push
ds
inc
ror
dec
and
int
xchg
ljmp
add
add
not
clc
test
sub
std
pusha
pushw
popfw
lea
jb
push
movb
inc
call
clc
add
clc
test
clc
movzwl
and
not
mov
pusha
cmc
call
call
push
pushf
call
lea
ja
mov
bswap
call
jl
dec
sahf
dec
xchg
jnp
xor
cmp
cmp
aad
push
cmp
out
xlat
dec
push
rcll
fcoml
mov
insl
inc
pop
ljmp
pushf
lret
lods
dec
fbld
imul
lret
inc
cld
lea
jg
pushf
pushf
mov
pusha
movsbw
movsbl
lahf
movl
push
not
jmp
adc
pushf
pushl
mov
lea
jmp
pusha
movw
push
ror
cmc
bt
stc
xor
bt
mov
stc
call
xchg
mov
lds
sbb
outsb
movb
movq
and
fwait
add
lret
les
xchg
sbb
les
in
imul
or
lods
imul
xor
das
pushf
stos
push
push
stos
pop
mov
mov
xchg
sti
mov
push
add
rcll
mov
shrl
sub
shrb
jp
xchg
loope
repnz
cwtl
cmpsl
push
test
sti
inc
pop
xorb
and
pop
dec
outsb
aad
push
jl
fcmovnbe
mov
pusha
push
stos
push
pop
in
pushf
jne
stos
dec
and
sub
movsl
loopne
loope
push
enter
dec
xchg
push
insb
add
lret
test
cmp
mov
ljmp
dec
lahf
and
sub
mov
or
add
add
in
cmp
xchg
inc
xor
pop
pusha
jns
mov
xchg
into
mov
nop
inc
lea
jb
jl
cmp
pushf
jmp
insl
and
xchg
fucomi
cmpsb
cltd
jmp
cmc
movsb
cmp
add
dec
or
pop
sub
flds
cmp
pop
idivb
into
dec
jp
mov
into
rol
repz
addr16
push
test
jmp
mov
notb
int3
gs
cmp
arpl
lock
arpl
shlb
dec
lds
les
int3
lock
loope
add
stc
lahf
pop
stos
cmp
arpl
cwtl
jl
call
int3
imul
incb
and
out
adc
rcll
cmc
imul
call
and
mov
mov
dec
mov
pop
jge
pop
sbbb
xlat
lcall
std
fldenv
or
mov
pushf
lea
je
pusha
call
jmp
movsl
lods
loopne
or
outsl
pop
popa
imul
jmp
jg
sub
pop
lcall
mov
jmp
fdivl
sub
into
sub
movsl
call
mov
pop
mov
outsl
sbb
or
cs
adc
dec
shrb
push
xchg
or
xorb
in
clc
mov
lret
xchg
sub
in
sar
dec
insb
pop
jg
dec
jbe
push
movsl
pop
pop
pop
xor
stc
imul
test
sub
repnz
bound
jp
movsl
jbe
push
lods
out
lea
scas
andl
sub
push
sahf
in
cmpb
incl
pop
das
mov
out
call
dec
js
aad
icebp
imul
mov
addl
mov
jp
fiaddl
into
rol
pop
gs
add
lods
cmp
dec
int3
adc
daa
pop
sbb
adc
jmp
jnp
jle
fwait
pop
jl
shl
ficoml
scas
mov
lret
or
pop
out
out
cmp
stos
cs
nop
adc
stos
adc
jle
push
cmovb
in
xor
and
xchg
outsb
imul
out
das
stc
xor
rcr
or
xor
jns
mov
dec
or
push
cmp
jmp
fs
or
cmp
jg
mov
rorb
xor
adc
addr16
adc
loopne
test
sti
loope
mov
mov
and
jo
pop
sub
rorl
add
push
mov
inc
xor
mov
cli
or
push
mov
fimull
insb
sub
add
shld
push
adc
sub
mov
xchg
pop
cwtl
mov
sub
and
or
inc
lret
xor
jg
and
icebp
pop
imul
movsl
rclb
and
lahf
pop
jle
repnz
adc
movsb
jg
addr16
dec
imul
daa
subl
sbb
std
mov
out
xor
in
xor
dec
push
aas
dec
call
inc
scas
dec
ja
mov
inc
mov
outsb
cli
mov
and
dec
mov
xor
cmp
call
outsb
ljmp
popf
insb
enter
imul
cmpsb
out
aaa
imul
pop
push
outsl
loopne
test
outsl
push
push
inc
dec
rclb
je
imul
xlat
pop
pop
add
jne
inc
pop
sub
add
insl
and
fstps
mov
add
aaa
push
aad
sbb
or
push
je
out
imul
jle
fsubl
ss
cmp
add
push
or
das
push
popa
in
out
arpl
xchg
xchg
xchg
int
jp
imul
sbb
pop
aaa
or
jmp
pop
fisubs
pop
xchg
rcrl
sub
mov
pop
mov
cmp
mov
loopne
cltd
mov
out
lods
daa
shrb
pop
sub
mov
push
mov
cltd
aas
fs
add
or
arpl
jle
loopne
out
jle
push
nop
shrb
das
mov
scas
sub
gs
pop
loopne
jmp
dec
rcl
mov
or
ficoml
ret
xor
out
dec
jmp
cmp
inc
insl
sbb
int
xor
sbb
loopne
repz
mov
dec
or
out
popa
dec
icebp
insl
scas
shr
pop
dec
pop
out
outsb
sub
cmpsb
loopne
insl
data16
adc
xor
push
jge
add
xor
push
imul
aas
fsts
rcl
jmp
dec
jne
fists
rclb
loope
sub
rcrb
xchg
loopne
pop
sbb
pop
popa
rorb
out
in
das
xchg
int3
repnz
dec
decb
cltd
jbe
outsb
pop
adc
sbb
jle
dec
in
fnstenv
dec
and
inc
fbld
mov
mov
and
lcall
filds
insb
into
imul
and
loope
pop
loopne
scas
sub
sub
mov
jle
and
add
es
and
mov
out
shrb
or
popa
mov
out
pop
mov
pop
popa
shr
loope
out
adc
xlat
rorl
mov
sti
mov
ljmp
inc
sub
adc
shr
outsb
and
imul
nop
cltd
push
ror
ss
mov
adc
mov
push
jle
aaa
lds
arpl
loope
rcrl
pop
add
xor
xchg
out
les
dec
xor
push
lcall
addr16
ds
call
loopne
xor
orl
pmulhw
or
mov
mov
scas
call
sub
daa
adc
mov
subb
roll
dec
dec
scas
test
movsl
dec
aad
in
aaa
insb
movb
lods
clc
mov
movsl
mov
push
insl
loopne
ficompl
out
or
pop
cmpsb
adc
mov
roll
stos
imul
mov
lock
stc
pop
andl
or
sbbl
sti
imul
loopne
jnp
test
adc
inc
mov
sub
jns
imul
mov
lahf
and
or
sub
pop
out
and
pop
sbb
hlt
in
das
icebp
loope
cmpsb
xchg
mov
pop
call
lahf
out
in
loope
inc
fisttpll
fimuls
adc
inc
cmp
rclb
out
outsb
mov
lods
pop
pusha
inc
loopne
mov
lcall
or
mov
adc
scas
das
test
rcl
push
pushf
or
jb
cmpsl
push
pop
or
in
push
push
scas
mov
add
ja
or
sbb
data16
mov
and
popf
jge
loopne
scas
pop
int3
xor
outsl
fucomip
les
test
mov
xchg
push
in
pop
pop
ljmp
sub
mov
cmc
repnz
loop
and
push
test
in
testb
in
inc
dec
pop
imul
or
out
xadd
flds
push
mov
pop
pop
inc
rcrb
inc
ss
add
xor
loopne
imull
cmp
shr
repz
jbe
push
nop
fisubrl
popa
inc
dec
dec
cs
and
stc
pop
imul
lods
mov
sbb
jg
loopne
aas
movsl
divb
in
cmp
sbb
out
mov
cmp
xlat
pop
insb
decl
test
loop
xor
scas
cmp
nop
cmpsl
aam
das
inc
xlat
push
inc
in
sarb
push
mov
cmp
mov
inc
outsb
push
mov
js
stc
hlt
inc
pop
sub
and
and
lahf
loop
xchg
aad
das
imul
and
inc
dec
fwait
out
out
sub
inc
rolb
fs
jp
pop
lret
subb
imul
cld
js
je
cli
or
jnp
jmp
adc
lcall
jl
push
por
inc
push
dec
inc
rcl
out
sbb
data16
push
cmpsl
scas
adc
repz
stc
ds
xlat
adc
dec
movsb
arpl
insl
imul
jp
mov
lcall
scas
inc
sbb
scas
outsb
shr
add
pop
in
fidivrl
or
lcall
call
stos
dec
inc
adc
lock
push
jecxz
jb
mov
out
test
dec
jmp
xchg
ret
mov
aaa
xchg
mov
cmp
pushf
fiadds
js
push
sbb
lds
in
in
in
add
add
test
xchg
sub
jge
pop
icebp
outsb
repnz
test
cmp
hlt
push
sbbb
loop
mul
insl
sbb
in
or
loop
lods
loopne
pop
sbb
adc
mov
stos
push
sbb
lcall
in
pop
inc
out
imul
pop
imul
push
pop
ret
adc
jmp
sbb
es
sbb
loope
data16
shl
mov
popa
pop
loopne
cli
imul
addr16
adc
or
jnp
rcrb
push
fsubl
outsb
sahf
aam
fwait
in
test
hlt
mov
adc
and
dec
in
adc
mov
loope
in
in
pop
rcll
mov
in
arpl
xor
scas
in
shl
pop
mov
xchg
inc
out
les
cmc
cmp
inc
dec
icebp
mov
inc
adc
cmpsb
insl
popa
rclb
adc
loop
scas
gs
sbb
loopne
or
lea
xor
xor
mov
jp
jle
nop
imul
lods
mov
imul
or
sti
leave
out
and
pusha
comiss
adc
int
movsl
jae
jmp
or
add
ret
fadds
sub
cmp
adc
lods
or
xchg
and
push
push
sub
inc
pop
pop
cmpw
dec
imul
or
daa
or
bound
inc
in
add
push
scas
das
adc
pop
sub
mov
daa
sub
gs
stos
loopne
push
call
in
out
push
insl
dec
mov
ljmp
cmpsb
pop
mov
jnp
push
ret
add
in
loope
call
das
aad
cwtl
gs
sbbb
cmp
jb
pop
dec
push
ss
or
dec
loop
fldt
mov
lea
mov
pop
js
mov
pop
push
adc
mov
lock
cmpsl
dec
xchg
test
ljmp
frstor
addr16
faddl
cli
mov
std
add
lock
sbb
cwtl
inc
andl
shll
into
mov
fstp
adc
mulb
push
adc
out
mov
inc
loopne
lahf
jmp
xchg
xor
mov
stos
clc
pushf
inc
dec
rolb
mov
dec
repnz
int
dec
and
dec
and
push
or
push
cltd
inc
je
data16
orl
and
jae
mov
nop
out
adc
ljmp
jo
shll
sub
bound
psubsb
mov
sbb
cltd
or
stos
jbe
cmp
fnsave
scas
daa
aad
pop
push
xor
inc
pop
loopne
lds
xchg
cmp
sub
sbb
das
fstpt
inc
ret
push
xchg
jo
mov
in
roll
or
sbb
inc
cmp
sub
scas
shlb
dec
call
push
mov
sarb
pop
mov
imul
loopne
test
shlb
mov
stos
movsl
cmp
push
sub
rcl
sahf
in
das
loopne
xor
rcrb
cmp
push
enter
adc
xor
or
lods
sub
adc
pop
jp
push
add
mov
call
cmpsb
push
shl
lret
sbb
jl
sub
loopne
sbb
into
fsubl
lret
or
mov
mov
mov
inc
stc
imul
fs
lea
out
ss
inc
or
test
mov
test
push
cmc
jns
loopne
pop
inc
aas
push
add
xor
add
push
lahf
movsl
or
sbb
cmpsb
or
cld
xchg
mov
cmp
sub
dec
sbb
push
ficoms
inc
cltd
scas
sarb
fldt
ds
jl
xchg
add
cmp
add
and
or
bnd
and
lahf
adc
sub
aaa
arpl
mov
mov
inc
rolb
pop
mov
sbb
cmpsb
out
xor
data16
jnp
sarb
add
xlat
mov
call
or
flds
scas
loope
loopne
out
push
jb
in
in
scas
jbe
inc
mov
jno
out
scas
imul
shll
xchg
push
dec
mov
das
jl
enter
subb
xchg
stos
or
sub
push
sbb
movsl
pusha
sbb
cmc
jecxz
enter
xchg
dec
in
sti
mov
inc
inc
stos
mov
test
sub
sub
minps
loopne
mov
es
test
mov
mov
jge
jmp
mov
or
rcl
das
insb
arpl
fldl
dec
loopne
ds
imul
repnz
jne
fldenv
mov
test
es
jmp
mov
mov
inc
bound
pop
adc
in
mov
dec
lods
jl
fcomps
lret
mov
lods
and
shrb
js
sub
inc
js
imul
cmp
cmpl
ss
popa
add
lret
push
imul
lods
aas
in
sbb
movsl
mov
in
imul
fstp
scas
test
daa
hlt
jo
movsl
lret
insb
mov
sub
jbe
cmpsb
cmp
jb
jecxz
iret
imul
mov
shrl
fsubrp
sarb
cmp
jo
arpl
or
mov
adcb
insb
push
mov
mov
and
std
scas
xchg
dec
test
mov
out
xor
imul
jle
dec
call
insl
add
addr16
es
ficompl
jmp
orb
movsl
mov
sbb
jno
sahf
mov
push
push
scas
mov
ja
sub
test
mov
jecxz
xor
movsl
or
ret
mov
nop
sbb
push
xchg
das
or
sub
stos
test
push
lods
xor
insl
jb
sub
xchg
les
out
loopne
and
das
and
call
lret
in
in
imul
rclb
sarl
dec
jle
inc
or
arpl
loope
cmpb
jmp
int
mov
jno
push
pop
lret
push
fildll
xor
loop
shlb
jle
inc
cmp
imul
sub
jecxz
xchg
add
fs
sbb
inc
fildll
pop
imul
arpl
sbb
aaa
mov
pop
hlt
data16
sarb
inc
xchg
outsl
xor
daa
push
call
xchg
add
loop
push
inc
sbb
out
jmp
popa
arpl
dec
daa
or
jb
out
jl
aam
or
inc
rcll
stos
outsb
icebp
mov
xor
and
dec
rorl
and
rorl
jge
xchg
movsl
stos
ret
pusha
dec
prefetch
loop
movsl
inc
mov
mov
xor
cmp
push
adc
loopne
shrb
jb
test
jg
into
pop
out
push
popa
das
jmp
adc
adc
movsl
push
insl
cld
ljmp
test
in
xor
xchg
pop
xchg
push
icebp
mov
push
aas
fwait
xchg
outsb
fwait
add
jge
movsl
sbb
call
rol
int
sti
jmp
lock
xlat
mov
xor
pop
ja
imul
in
in
test
or
stc
das
jmp
and
or
xor
lock
call
mov
scas
subb
ds
loopne
arpl
pusha
cmp
sub
ljmp
fucomip
pop
insl
mov
xchg
ds
andb
ss
std
dec
imul
and
inc
fsts
mov
or
lcall
inc
cld
jb
fsubl
mov
xor
es
lods
xchg
dec
sub
imul
ljmp
repnz
fadds
inc
ret
nop
imul
xchg
sbb
icebp
in
fsubrp
pop
and
inc
out
imul
lcall
int3
pop
in
movsb
faddl
in
push
dec
ror
or
mov
mov
sub
cmp
push
test
push
notb
aad
or
xor
cmp
adc
in
ret
inc
cmp
adc
clc
scas
cmp
dec
imul
sub
jae
xorb
xor
pop
das
sub
sub
cmpb
call
loopne
sub
shll
leave
shrl
cs
pop
sbb
call
xor
and
mov
lea
push
sbb
arpl
lret
sub
sub
stos
push
rclb
ljmp
push
fimuls
mov
push
into
in
sbb
cmpl
and
xchg
pop
xor
mulb
or
or
add
or
dec
mov
idiv
jns
in
mov
in
pushf
lahf
mov
jns
sahf
cmpsb
pop
icebp
data16
popf
mov
pop
dec
imul
xchg
xchg
scas
adc
and
aam
jle
and
in
ds
loope
jp
mov
popa
mov
inc
inc
repz
adc
adc
cmpsl
int3
sbb
es
lret
out
addr16
mov
sub
and
loop
pop
mov
fmull
fdivp
loopne
test
pop
mov
dec
cmp
sbb
fsubrp
icebp
sub
aaa
pop
xchg
jns
dec
cmp
xor
or
mov
lahf
inc
loopne
and
sub
test
mov
call
inc
lock
adc
inc
xor
sub
test
in
outsb
sahf
call
dec
call
dec
hlt
cmc
outsb
in
repz
mov
ret
jbe
push
push
mov
hlt
pop
pop
inc
or
insb
jmp
mov
or
pushl
lods
scas
add
cld
mov
pop
sub
dec
fsubp
push
sub
pop
ds
push
push
mov
stos
jle
pop
outsb
or
mov
xor
add
cwtl
addr16
js
mov
pop
and
dec
jl
and
xchg
pop
cld
arpl
and
aaa
add
sbb
jg
outsw
mov
out
pop
pop
scas
rclb
add
into
addr16
jmp
insl
push
es
cmc
sub
cmp
cmp
cmp
ljmp
nop
dec
gs
imul
stos
das
jle
js
jecxz
repz
stos
jo
imul
leave
push
push
flds
push
dec
stos
and
imul
leave
push
arpl
and
movsl
fisttpl
ja
sti
jle
andb
fdivrs
pop
orl
inc
pop
ret
inc
xor
jg
add
in
iret
outsb
subb
add
rcr
popl
dec
stos
mov
das
sub
mov
ret
mov
addr16
orb
pusha
lods
bswap
movsl
bound
and
addl
add
dec
ljmp
dec
dec
pop
in
pop
insb
loopne
sub
dec
and
dec
or
ret
mov
enter
insb
cmpsb
push
push
mov
pop
lret
ljmp
pop
mov
fisubl
sbb
movsl
jmp
mov
adc
dec
add
xchg
add
mov
pusha
sub
pop
outsb
and
sbb
inc
jnp
aad
xchg
push
int
sbb
xchg
inc
sbb
sbbl
inc
add
ss
pop
inc
ret
nop
sub
sub
and
xchg
dec
shlb
call
cmp
fdiv
dec
insl
shl
sbb
stos
sbb
xchg
mov
icebp
pop
call
mov
dec
add
lods
out
dec
sbb
mov
xchg
data16
add
lcall
or
loopne
cmp
sub
jmp
pop
mov
xor
jmp
insl
xchg
mov
mov
sub
in
in
insl
mov
mov
addr16
data16
arpl
push
sbb
sbb
pop
stos
das
xchg
jecxz
dec
test
and
outsl
fdivrs
jns
stos
daa
mov
sub
fistpll
mov
jge
xchg
int3
and
add
push
inc
or
and
aaa
fidivrl
and
das
mov
dec
jns
popa
mov
or
pop
adc
cli
mov
or
in
cmp
hlt
push
sbb
in
xchg
imul
out
repnz
into
add
sub
sub
mov
movsb
mov
jae
pop
inc
outsl
jne
add
fsub
lret
sbb
out
push
arpl
aaa
and
sub
insb
sbb
adc
stos
daa
mov
ret
scas
sbb
xchg
jb
shrb
mov
imul
fidivs
rolb
add
sbb
xor
cmpsl
pop
sub
or
cmp
mov
in
and
push
ret
sub
mov
loopne
pop
cmp
dec
pop
or
cs
fisubrl
rsm
mov
sahf
fsts
insb
pop
inc
rorb
inc
mov
inc
dec
movsl
in
daa
adc
mov
cmpsl
out
xchg
jl
pop
push
outsb
inc
mov
sub
inc
fistpll
cwtl
mov
scas
sub
fiaddl
imul
mov
loopne
cs
push
inc
imul
daa
fmul
jl
fidivrl
sbb
or
xchg
lods
stos
add
ss
pop
xchg
mov
fimull
ljmp
out
xor
pusha
sub
push
aam
aas
inc
adc
fimuls
xor
cmpsb
add
dec
inc
imul
pop
clc
stos
xor
int
fisubrl
pop
aas
jl
mov
mov
imul
rclb
pop
mov
movsl
pushf
dec
loopne
lods
and
fnsave
push
fs
ja
cltd
dec
mov
mov
mov
sar
adc
jb
xlat
jne
daa
inc
shr
test
arpl
cmc
es
dec
scas
dec
movsl
mov
pop
sar
subl
cmc
das
daa
mov
in
pop
arpl
fidivs
movsl
in
pop
mov
inc
push
adc
jg
call
repz
cmp
pushf
enter
stc
cmp
pushf
sub
bound
add
sti
mov
cmp
and
fxch
or
fbld
loopne
lret
in
addr16
shll
push
pop
das
fwait
xchg
mov
rcl
fldt
inc
popa
jl
mov
mov
push
and
push
pop
call
data16
push
mov
lods
inc
shrl
pop
iret
pop
repz
clc
data16
or
out
mov
movsl
fldcw
faddl
mov
ret
or
and
imul
mov
sti
loopne
inc
jle
xchg
lods
push
pop
mov
iret
sub
mov
repnz
ss
loopne
cwtl
popf
cmp
add
push
or
push
jle
adc
aam
fldt
enter
imulb
push
jb
cld
sbb
sub
mov
cmpb
add
retw
call
push
mov
lods
mov
jo
jmp
jae
xchg
pop
mov
xor
push
sahf
enter
dec
insl
arpl
imul
mov
sub
sbb
int3
xchg
lods
mov
cmpsb
pop
dec
jmp
mov
mov
int
push
enter
mov
jno
push
mov
outsb
mov
fistps
inc
sti
or
cmovne
add
sbb
jae
aam
daa
add
push
xor
fisubrl
sub
xor
adc
call
sub
loopne
sbb
xchg
fsubrl
in
jg
stos
in
repz
ds
push
cmpsb
cmp
mov
push
leave
out
or
stc
aad
mov
lcall
loopne
ret
and
jg
sub
sub
das
mov
xchg
sahf
jp
inc
imul
loopne
inc
adc
lret
xlat
jno
cmp
lock
movsb
in
dec
and
sbb
push
dec
jne
mov
sub
cmp
mov
mov
cmc
dec
pop
xchg
xor
movsb
cld
and
mov
sub
loopne
xor
rcr
lods
lret
jg,pt
adc
dec
push
in
cmp
sub
int3
add
push
aad
sbb
fsubrl
dec
jl
pusha
push
add
ficoms
add
dec
push
mov
cmpl
xor
int
adc
clc
sub
mov
mov
add
shrb
add
sbb
call
rcl
out
xor
xchg
outsb
jne
addl
sbb
movsl
imul
lret
xchg
imul
scas
insl
mov
lods
inc
cmp
lock
xchg
cltd
mov
imul
mov
dec
out
out
cmpsb
cli
inc
inc
push
bound
jle
lds
mov
fisubl
sbb
push
and
fwait
dec
fwait
std
movsb
xchg
cmovbe
dec
movsl
movsl
and
or
push
push
loope
xchg
sub
iret
aad
mov
subl
pop
sub
push
inc
adc
in
fucomip
pop
and
jle
rcl
pop
sub
pop
pop
loope
push
xchg
sub
mov
in
hlt
rcrb
sub
insl
add
out
daa
shlb
arpl
aaa
ljmp
paddd
rorl
mov
dec
cld
push
insb
pop
outsb
and
mov
aad
and
push
sti
es
adc
pop
and
leave
in
or
loopne
mov
loopne
incb
aam
pmuludq
jno
in
add
ljmp
inc
je
stos
fiaddl
jl
sub
fadd
aas
xchg
sub
out
xchg
mov
andb
ror
sbb
stos
inc
out
inc
fisttpl
push
sarl
rsm
test
lock
out
data16
insl
into
das
call
popa
dec
sar
into
ret
bound
ss
push
nop
cmpsb
imul
inc
rorb
pop
xor
aad
add
mov
jmp
sbb
pop
dec
mov
movsl
jp
lret
repnz
inc
mov
sub
loop
lock
mov
sub
pop
sub
inc
imul
call
mov
insb
push
adc
sbb
push
inc
stc
cmp
sbb
push
push
jl
dec
pop
das
test
loope
mov
scas
in
nop
push
or
add
inc
inc
out
arpl
decb
ret
push
test
dec
xchg
rorl
shr
std
pop
xor
dec
in
loopne
jmp
inc
repnz
xor
out
mov
inc
dec
insl
mov
out
mov
xor
repz
lret
mov
pushf
int
xor
mov
push
ja
lock
mulb
sbb
inc
cmpl
sub
sbb
lock
mov
jge
cs
outsb
mov
outsb
fists
div
shll
mov
fldcw
cmpsb
sub
ljmp
inc
imul
jg
mov
popa
shll
mov
push
lods
and
nop
mov
jmp
jecxz
out
xor
test
mov
shl
sub
mov
outsb
aaa
pop
pop
mov
xchg
cld
adc
pop
test
sarl
push
push
push
mov
pop
fwait
mov
insb
lret
in
shlb
xor
out
loope
and
mov
mov
test
pop
sub
and
rorb
inc
shll
shlb
sub
mov
push
mov
stos
add
xor
insl
test
rclb
and
icebp
imul
adc
ror
repz
lret
in
mov
cmp
hlt
jl
in
xor
or
xor
mov
sahf
outsb
pop
xchg
fwait
mov
inc
mov
xchg
arpl
call
dec
data16
xchg
in
jb
and
loop
loopne
movsl
ret
or
dec
jmp
sub
test
jge
push
outsb
xor
sahf
sub
ror
in
inc
mov
sub
repnz
xchg
fistpll
add
imul
lahf
xor
adc
dec
adc
pusha
xor
cs
movb
pop
sti
arpl
xchg
out
inc
jo
xor
jge
xchg
hlt
and
out
inc
lcall
inc
in
rcl
popl
hlt
fsubs
div
cmp
sub
and
outsb
std
iret
dec
dec
jmp
cmp
pop
push
addr16
mov
or
push
mov
mov
push
prefetch
inc
xlat
push
cmp
rcr
arpl
dec
sbb
das
push
or
aas
rclb
subl
fstpt
sbb
mov
dec
xchg
jnp
ret
mov
loopne
dec
out
push
jbe
cmp
dec
rorb
add
inc
pusha
imul
pop
push
mov
pop
jne
dec
pop
adc
adc
ljmp
fsubr
xchg
push
push
ds
adc
xor
mov
or
mov
mov
cmp
leave
mov
dec
jno
aam
lock
mov
sub
iret
xor
nop
inc
adc
or
dec
push
cmc
dec
aas
inc
nop
imul
pop
shrb
pop
arpl
in
push
int
dec
mov
fsubrs
lock
imul
repnz
push
lahf
addr16
mov
data16
inc
stc
sub
push
xchg
dec
jmp
inc
jmp
orb
test
popf
mov
out
insl
call
in
cli
dec
push
xchg
adc
adc
fcmovu
loopne
out
fst
sub
or
pop
lods
cwtl
test
ds
loopne
lret
push
push
sub
pushf
xor
call
shrl
addr16
loope
ljmp
cmp
adc
insb
arpl
callw
lcall
jae
pop
pop
push
callw
nop
mov
enter
pop
iret
sub
mov
or
sar
jmp
cmp
push
negl
xor
xor
out
les
scas
fstp
mov
aaa
xor
sub
cmp
jb
sub
cmpl
adc
shl
add
imul
js
cmp
fs
inc
imul
mov
fildl
lods
xchg
jae
rcrb
mov
aam
adc
or
aad
cmp
add
push
cmpb
pavgb
pop
push
adc
jle
mov
xchg
xchg
and
repnz
cmp
das
call
push
mov
mov
xchg
xchg
xor
sbb
ret
imul
fstl
inc
addl
ja
xchg
jmp
subl
dec
sar
xchg
mov
or
mov
push
mov
divb
cmp
fisttps
and
iret
dec
ficomps
xor
cmp
add
into
dec
xchg
pop
xor
cmp
jno
add
arpl
xor
inc
pushf
jmp
push
jne
pop
mov
insl
repz
call
aas
imul
in
and
movsl
xchg
mov
push
imul
jbe
jg
jle
out
xor
adc
pop
push
sbbl
ljmp
cli
rclb
icebp
cmp
fwait
mov
loop
mov
movsb
popa
pushf
mov
in
xchg
shlb
andl
push
jae
adc
sub
fcmove
test
aad
aad
outsl
push
pusha
lods
jnp
or
dec
xorl
mov
and
das
rorb
xor
ror
shlb
lods
inc
aas
mov
pop
jo
sub
lods
jns
bound
pop
xor
push
xor
scas
cmc
aad
xlat
xchg
jp
daa
sbbb
inc
dec
imulb
scas
fstl
imul
sub
or
cs
and
inc
adc
sub
inc
fimuls
pop
xchg
sbb
stc
or
lret
xor
push
xchg
shlb
push
jmp
mov
fsubl
push
sbb
sbb
arpl
add
sahf
stos
dec
addr16
mov
add
inc
rorb
jae
adc
jl
shr
ds
jmp
push
ret
mov
mov
or
sbb
repnz
aaa
outsb
pusha
adc
push
scas
test
loopne
add
fwait
shlb
mov
dec
stos
fidivrs
and
jmp
sbb
loop
repz
push
out
ja
incl
or
xchg
and
xchg
push
fsubrp
dec
jmp
test
loopne
dec
mov
and
add
fidivrs
ret
in
mov
pop
inc
push
dec
inc
or
arpl
inc
jle
xchg
fiaddl
das
call
shrb
fldl
cs
mov
mov
es
stos
jecxz
fcmove
stc
cld
push
dec
in
jmp
push
adc
pop
cmp
daa
jl
and
jae
jg
inc
pusha
xchg
push
mov
ret
push
pop
pop
pop
add
cmpsl
fisttpl
xor
shrb
popf
sub
ret
pop
inc
lods
rorb
icebp
add
pop
inc
inc
ret
and
adc
add
xchg
and
imul
loop
jb
xchg
fnsave
or
out
mov
and
ficoml
mov
inc
insl
cmp
sbb
dec
push
in
inc
pop
jecxz
outsl
addr16
mov
loopne
mov
xchg
pop
xor
and
addr16
arpl
loopne
adc
or
pop
loope
inc
pusha
mov
addr16
addr16
icebp
in
loopne
dec
jecxz
lea
push
aam
js
outsl
sub
jae
dec
arpl
jp
mov
xchg
gs
in
push
xchg
lret
pop
jns
fiaddl
pop
push
data16
inc
adc
and
out
cmova
pop
cmp
sub
bound
dec
ror
mov
addb
lea
out
arpl
hlt
int3
mov
aas
insl
inc
fcmovnu
test
out
or
ret
arpl
scas
xor
lods
fldenv
rcrb
leave
leave
push
out
ljmp
inc
insl
xlat
xchg
push
jnp
scas
popa
inc
das
push
shl
aad
xchg
in
jbe
mov
add
cs
push
dec
add
pop
dec
popf
inc
loopne
out
in
inc
add
xorb
insb
pop
fwait
loopne
xor
inc
add
fucom
pop
and
lds
jne
call
cmc
out
adc
out
cmpsb
fnsave
jmp
dec
push
push
sbb
inc
xchg
pop
imulb
sub
daa
lret
rorb
sub
filds
popa
loopne
push
psadbw
je
ljmp
leave
fadd
pop
movsl
movsl
pop
lods
sub
rcrb
orb
dec
dec
insl
xchg
scas
fucomip
push
js
add
add
in
call
cmp
inc
movsl
lods
stos
loopne
daa
popa
scas
xchg
outsb
inc
imul
outsl
lods
lret
arpl
out
rclb
mov
dec
outsb
rolb
imul
call
dec
sub
push
ds
xor
and
imul
mov
aad
fimull
gs
mov
ss
shrb
fs
fcompl
push
roll
std
push
mov
lods
dec
lea
neg
lret
sahf
cmp
in
and
fiadds
dec
out
mov
inc
and
or
cmpsl
adc
in
xchg
fnstsw
xchg
add
fmull
cld
cmp
adc
add
mov
stc
push
pop
mov
pop
rcr
mov
push
imul
sub
mov
sbb
push
cli
lahf
mov
fwait
cmp
push
cmp
outsl
cmc
loope
bound
adc
fs
jp
jp
cltd
add
push
aaa
cmc
push
dec
das
out
shlb
mov
cmp
cmp
and
ror
cld
dec
sbb
inc
jp
or
sbb
xchg
xchg
jl
add
aam
and
sub
pop
push
cmc
fildl
and
mov
hlt
pop
into
xor
mov
and
cld
movsl
cmp
sbb
adc
push
mov
pop
dec
stc
pop
lock
or
lcall
mov
jmp
inc
cmp
push
cmpb
sub
sub
js
xchg
test
add
ret
jp
xlat
sbb
inc
call
xchg
insb
push
out
mov
shrb
insl
jl
inc
popa
scas
movsl
loopne
cmpl
dec
adc
sub
pushf
push
dec
xchg
insl
hlt
pop
call
push
loop
into
jp
mov
push
add
pop
push
mov
adc
insl
add
ljmp
sub
mov
insb
xchg
lahf
and
out
sub
ds
loop
dec
mov
outsb
test
loopne
or
imul
loope
hlt
inc
jmp
pandn
sbb
pcmpgtb
jne
cltd
cs
jne
push
xchg
xorb
lret
or
mov
scas
scas
add
fidivrl
sub
mov
sub
cmp
cs
stos
push
adc
xor
out
push
add
add
mov
ds
shll
fistl
daa
jg
sub
sbb
pop
mov
outsl
loopne
adc
lods
loope
insb
or
pop
les
fidivl
mov
push
das
das
stc
movsb
es
add
cmc
scas
dec
mov
sub
pop
jecxz,pn
jno
call
popf
in
xchg
pushf
call
xchg
lods
and
add
mov
mov
pushf
mov
mov
pop
add
push
icebp
sbb
dec
movsl
das
xor
outsb
add
push
in
scas
lcall
in
shrl
lods
xchg
movsl
jne
arpl
push
sub
cmp
stos
lahf
les
sub
cmc
call
idivl
cmp
mov
shlb
sahf
or
mov
or
bound
pop
dec
ds
jno
pop
fbstp
mov
leave
mov
mov
repnz
add
mov
aas
push
xor
and
mov
out
push
push
mov
lea
aas
and
and
adc
or
jmp
fstps
add
jl
mov
sbb
mov
stc
xchg
mov
adc
fdivl
adc
push
loopne
mov
jl
ss
loopne
mov
out
mov
scas
cli
test
pop
in
loope
aas
fildll
fs
inc
push
cmpb
les
ds
or
pop
fucomip
fcomi
imul
movsl
in
popa
loopne
in
mov
mov
dec
stos
cmpsb
call
sarb
jg
lret
push
dec
lret
movsl
lcall
movsl
lahf
cli
loop
movsb
orb
movsb
mov
ja
cmpsb
add
cli
add
inc
bound
push
xchg
movsl
fimuls
ds
insl
lret
cmp
call
or
xor
or
sbb
jnp
loopne
sbbb
sbb
dec
test
cli
xchg
mov
call
and
sbb
ds
ret
cltd
mov
mov
cmp
notb
or
add
mov
icebp
jmp
inc
add
jo
aas
adc
and
xlat
xchg
cmp
jmp
lret
ds
in
mov
frstor
xor
jmp
xchg
in
xchg
daa
mov
movsl
rcrb
mov
lret
pop
iret
sarl
shlb
xchg
pop
icebp
std
rcrb
inc
jns
mov
stc
orb
push
dec
arpl
push
mov
out
inc
out
ror
in
pop
mov
insl
addr16
or
jge
jg
mov
or
cs
adc
jl
mov
jg
ret
rclb
popa
aam
leave
fists
inc
insb
xor
push
int
out
int
mov
fsubl
sbb
push
gs
adc
cmpsl
sub
test
jae
or
and
data16
enter
out
dec
xchg
push
pop
movsb
sahf
push
lock
cld
fdivrl
jbe
je
sbb
mov
mov
push
add
cli
int3
push
xchg
popf
arpl
push
es
insl
in
stos
mov
leave
decb
jno
ss
call
test
adc
sbb
mov
mov
in
pop
scas
jbe
cmc
in
fchs
push
or
scas
clc
xorb
push
mov
iret
in
pop
mov
xor
adc
xor
and
sahf
pop
shr
imul
pop
or
pop
fistl
add
and
clc
pop
push
sarb
loop
inc
sti
pushf
bound
dec
stos
inc
mov
fs
xchg
push
imul
lret
mov
cmc
cmp
push
lods
fwait
std
shlb
mov
sub
das
or
xchg
mov
es
sub
ljmp
int3
sbb
shrb
dec
mov
insl
popf
xor
xchg
lahf
les
xchg
mov
leave
dec
stos
int3
mov
xchg
mov
fiadds
icebp
xchg
in
xor
gs
jo
js
out
data16
xchg
in
call
cli
adc
data16
and
sub
pop
ljmp
xchg
popf
add
push
repz
push
push
daa
popa
inc
sub
fld
push
jge
addr16
insl
push
cmp
mov
js
ja
sub
push
pop
push
rcl
sub
mov
arpl
lods
fstl
jl
in
shrl
pop
jb
mov
ret
pusha
sub
mov
test
incb
pop
xor
insl
lcall
adc
loop
sub
addr16
sbb
ja
clc
lret
mov
push
fistpll
mov
dec
mov
sub
out
xor
rcrb
pop
jge
sub
lods
jecxz
push
and
dec
jno
ficompl
stc
in
jns
into
and
test
daa
pop
sti
rolb
add
push
jo
pop
pusha
lods
daa
cmpsb
das
pop
push
dec
imul
inc
inc
sub
lret
cmp
arpl
movsl
add
mov
sbb
mov
add
ret
pop
popa
test
stos
mov
cmp
rcrb
push
out
lods
add
push
aas
mov
mov
daa
shrb
loope
push
sarb
sub
add
and
rorb
ret
jbe
mov
test
daa
cmpsb
cmpb
leave
mov
lods
rolb
fwait
xchg
or
das
lahf
std
lret
fwait
int
and
sub
stos
in
outsb
sub
lods
sub
push
js
xchg
and
arpl
incl
pop
pop
in
popa
adc
lock
insb
loope
pop
pop
mov
push
neg
mov
loopne
adc
das
nop
inc
lods
jl
stos
push
xor
jne
lcall
popa
stc
xchg
roll
add
arpl
stos
sub
jg
or
inc
jp
and
subb
sarb
xor
lret
loopne
jge
sub
adc
dec
and
push
inc
and
daa
dec
jno
imul
clc
or
icebp
mov
push
dec
mov
fsubl
lods
sbb
fmuls
and
mov
inc
pop
fisubrs
out
mov
in
fucomip
sahf
test
stos
cvtps2pi
cmpsl
push
add
insl
xchg
hlt
dec
adc
xchg
scas
add
aas
daa
and
push
pop
add
insl
fisubrl
inc
les
sbb
loopne
hlt
mov
faddl
mov
sbb
mov
cli
addb
ljmp
cmp
fidivs
out
dec
jl
loope
sbb
xchg
in
pushf
popf
into
aaa
out
aad
movsb
lods
pop
out
push
stos
xor
dec
xchg
es
mov
loopne
arpl
out
add
xor
dec
hlt
xchg
ficoms
sub
adc
mov
lock
sub
cmp
pop
daa
cmp
das
imul
fsubrp
push
dec
lods
mov
sbb
je
in
jecxz
test
mov
rolb
bound
imul
dec
xchg
lea
ss
lods
into
push
scas
xor
inc
fisubrs
jmp
xor
mov
shll
es
imul
outsb
inc
jns
fs
mov
int3
addb
mov
jmp
loop
fyl2xp1
ljmp
xor
dec
lret
or
adc
or
pop
sub
pop
stos
xchg
and
ja
adc
dec
leave
stos
repz
ret
fmuls
and
stc
or
roll
sbb
xor
imul
in
mov
ljmp
out
cmc
jl
dec
push
add
ljmp
outsb
xchg
xor
mov
fildll
fistl
adc
call
in
add
fwait
add
pop
subl
lods
jae
imul
loopne
scas
sub
popa
push
xchg
mov
jnp
roll
pop
mov
xor
and
xchg
push
dec
outsl
call
or
push
lods
mov
xor
inc
and
cmp
xchg
and
sahf
pop
and
cmp
mov
adc
mov
xor
xor
leave
into
cmp
or
mov
xchg
push
xlat
sahf
hlt
push
push
cmpsl
cmp
std
jg
sahf
arpl
call
mov
mov
jo
mov
mov
pop
daa
imul
inc
arpl
pusha
adc
int3
push
out
lret
insb
jnp
jle
push
push
mov
xchg
stos
and
add
mov
data16
add
loop
push
and
scas
cmp
scas
mov
jl
pop
gs
jns
stos
shlb
cmpsl
pop
js
out
cmp
test
test
in
ds
cs
lock
es
insb
mov
xor
sbb
daa
insl
movsb
mov
loopne
or
es
mov
loope
or
out
xor
jae
loopne
inc
sub
mov
addr16
cwtl
ret
cmp
jge
out
movsl
push
loopne
inc
movsb
ljmp
cs
dec
notl
rcrb
xchg
and
lahf
imul
pop
dec
xchg
into
or
lods
int
push
loopne
adc
pop
adc
jl
push
push
jle
inc
inc
int3
icebp
mov
xchg
cs
dec
pop
out
or
out
popf
icebp
inc
gs
movsl
outsb
jmp
cmpsb
dec
fidivrs
out
leave
outsl
call
pop
in
shr
dec
xor
pop
movsl
lcall
movsb
add
jo
or
inc
ficoml
mov
fidivrl
mov
sub
dec
and
cmp
insl
cmp
pop
fistpll
bnd
pop
aas
sbb
mov
rcrb
mov
sub
imulb
sbb
push
call
xor
sub
das
pop
pop
inc
jne
aam
inc
mov
adc
int
jl
dec
cld
repz
fists
out
rcrb
mov
movsl
stos
sbb
or
aam
in
loopne
ja
add
fiaddl
stc
add
and
jne
or
call
push
xor
pop
jno
or
adc
push
gs
pop
cld
sbb
in
fwait
lret
ficompl
dec
push
jmp
inc
int3
push
cmp
daa
mov
out
pcmpgtw
cld
push
lds
outsb
scas
out
adc
push
push
jmp
cmp
mov
xchg
dec
add
mov
inc
or
add
xor
jmp
push
das
jmp
outsl
push
rolb
or
in
add
sahf
lret
loopne
das
push
xor
sbb
stos
sub
stos
inc
imul
cmc
sub
push
or
sub
call
lret
movsl
icebp
imul
pop
movsl
cmp
lea
fucom
inc
mov
sbb
pop
mov
hlt
roll
push
inc
adc
sub
loopne
xchg
xor
call
sti
dec
scas
add
cld
mov
call
test
movsl
into
add
insb
and
mov
call
inc
xor
call
loopne
out
inc
ljmp
loope
imul
and
sub
scas
imul
mov
and
daa
mov
mov
sbb
sahf
add
popa
call
inc
out
fistl
push
add
sbbb
cmc
or
adc
gs
pop
js
lret
ds
fidivs
mov
pop
xor
sub
aas
add
or
or
cmpsb
bound
rcl
inc
dec
adc
adc
add
xchg
in
ss
push
cld
out
ljmp
dec
int
mov
or
and
int3
bnd
cld
mov
test
inc
dec
jg
jns
rolb
insl
push
add
mov
call
dec
shll
mov
stos
inc
xchg
dec
jmp
pop
mov
cmp
or
mov
adc
jnp
in
imul
sub
test
cmp
add
ja
adc
scas
add
and
bnd
sub
pop
cmpsl
pop
shl
lods
pop
scas
movsl
movb
cli
pushf
cli
push
nop
mov
or
add
out
mov
dec
push
orb
fildll
jl
test
xorl
in
stc
inc
sbb
xchg
xchg
ljmp
mov
in
jle
bound
in
insl
es
cmp
sbb
adc
inc
fsubp
add
outsl
in
loope
test
dec
sub
rol
sbb
and
xchg
sti
movsl
aas
sub
icebp
aas
loopne
out
mov
sbb
sub
imul
std
dec
shlb
negb
outsb
mov
icebp
lods
sub
and
and
xorl
or
js
xchg
mov
adc
stos
aas
test
mov
icebp
sar
dec
call
lahf
fs
inc
inc
mov
sahf
icebp
pop
adc
dec
addr16
inc
in
xor
dec
loop
mov
pop
lods
loopne
outsb
sarb
pushf
dec
xchg
push
fwait
sbb
push
stos
mov
adc
push
stos
cld
xchg
mov
ss
fisubrs
vpcomud
lds
mov
stos
mov
out
or
lcall
sahf
xchg
shll
mov
adc
into
std
xchg
nop
cmpsl
es
ret
rcl
cmp
push
add
dec
in
cmp
cmp
lea
mov
mov
data16
stos
mov
xchg
repz
loop
xor
dec
mov
sbb
and
mov
mov
movsl
sub
imul
in
test
add
push
push
ljmp
jmp
adc
in
dec
push
mov
or
cmp
dec
push
arpl
lds
data16
add
lahf
or
scas
fldcw
rol
aad
dec
out
sub
sub
xchg
jbe
loopne
or
pushf
dec
ret
and
add
pop
addr16
lods
adc
sub
xor
leave
daa
push
xchg
imul
fsub
fchs
sub
and
loope
mov
cld
sbb
gs
mov
mov
imul
bound
xchg
loopne
mov
add
mov
cmc
and
jl
add
jmp
stos
pop
or
aad
adc
adc
sbb
push
or
dec
push
dec
call
xlat
cmp
add
inc
dec
xchg
jl
shlb
mov
adc
orb
pushf
movsl
push
movl
scas
add
push
aam
lcall
daa
out
shr
jae
in
jl
pop
clc
test
enter
push
sbb
mov
pop
in
addr16
jne
into
mov
dec
or
adc
dec
push
inc
mov
jg
xor
push
fucomi
jle
pop
xchg
adc
cld
rcll
call
adcl
aas
xor
das
sbb
sahf
or
add
movsl
cli
push
fistl
out
mov
mov
jmp
lock
xor
shlb
jnp
addr16
rorb
icebp
lods
call
test
enter
js
cltd
in
aas
lcall
pavgb
fsts
mov
xor
pop
fwait
push
pop
scas
clc
sbb
mov
cmp
dec
mov
pop
mov
out
fstpt
or
adc
cmpsb
cmp
adc
pop
sub
mov
pop
dec
psllq
outsb
jp
dec
es
xor
test
pop
xor
shlb
mov
out
outsb
loopne
lcall
push
cmp
and
cmp
mov
stos
sbb
call
out
iret
clc
iret
sub
fmulp
dec
das
inc
imul
sbb
stos
bound
push
int3
add
out
inc
cltd
push
adcl
cmp
xorb
inc
dec
mov
shrb
shrb
es
push
fucomip
sarl
lret
leave
mov
in
add
mov
js
dec
cs
sbb
xchg
jecxz
cmc
inc
push
mov
cmc
nop
inc
xor
mov
shrb
enter
sub
es
shll
push
and
mov
and
jmp
rorb
dec
out
loopne
mov
popf
mov
lret
lds
jmp
les
jg
sub
nop
hlt
mov
sarb
add
jge
sbb
sub
push
movsb
dec
xor
inc
jmp
pop
sub
sbb
jno
inc
call
rcr
lret
lret
in
das
aad
mov
sub
sahf
add
mov
arpl
das
out
add
addb
pop
adc
or
data16
movsl
jmp
add
inc
mov
adc
enter
enter
ss
movlps
imulb
ljmp
push
stc
push
in
scas
insb
orb
push
pusha
mov
jecxz
aaa
adc
cmp
js
cli
jl
hlt
sub
shr
outsb
sub
rolb
pushf
push
mov
int3
sbb
shr
mov
iret
mov
or
inc
add
into
scas
mov
inc
or
mov
out
lea
adc
sbb
inc
rclb
fstl
xchg
mov
cmp
mov
in
daa
sub
cld
test
je
mov
and
or
repz
stos
adc
mov
repnz
out
cmp
loopne
jbe
fcoms
add
aas
jp
stos
cmp
bound
lock
sbb
addr16
mov
outsl
call
sarb
xlat
mov
fisubs
inc
xchg
insb
mov
lahf
pop
sbb
jecxz
in
xchg
cld
pop
nop
aad
stc
fldcw
or
cmpsb
das
and
sub
add
pushf
mov
shll
scas
adc
pop
mov
loopne
ret
jmp
jns
lds
rcrl
aaa
fimull
scas
scas
loope
mov
movsb
test
jg
imul
lea
add
ljmp
test
or
insb
out
add
dec
js
inc
sbb
pusha
push
aas
out
loope
lret
push
dec
cs
push
dec
xor
jl
adc
xchg
pop
dec
scas
data16
mov
lods
fidivl
inc
pop
sbb
loopne
or
test
or
push
das
sub
add
insl
cmc
bound
lret
sahf
enter
mov
adc
jb
popw
mov
xchg
push
stos
aad
jno
and
mov
sub
out
and
je
sbb
jno
jo
in
add
push
pop
sub
adc
lcall
pop
cmpsl
sbb
cmc
mov
outsl
jns
iret
jns
sbb
call
sub
imul
dec
inc
xor
and
cmp
dec
shrb
push
sub
mov
pop
js
xlat
or
out
arpl
call
sbb
fimull
in
leave
sub
sti
dec
leave
pop
out
add
add
nop
xor
push
out
rolb
int3
pop
or
imul
xor
lret
ret
call
int3
add
jle
test
outsb
mov
fisubrs
mov
cli
loopne
cmpsl
xchg
sub
mov
adcb
push
aad
ja
mov
pop
jp
push
daa
inc
add
shlb
xchg
mov
add
push
out
and
jno
cmp
push
jg
add
and
adc
push
aaa
mov
idivl
divb
aas
push
adc
test
mov
lret
loopne
in
xor
sub
inc
dec
dec
pusha
pop
aas
jo
fadds
cmp
inc
arpl
inc
je
stc
popa
jmp
xchg
outsl
cs
mov
daa
les
dec
ret
lds
mov
pusha
cli
mov
scas
dec
fwait
or
inc
mov
mov
outsb
xchg
mov
cmpsl
mov
test
lods
jno
rorb
push
add
jl
test
push
pop
leave
push
sti
mov
scas
or
pop
jmp
cld
sub
or
mov
or
ja
and
cmpl
pop
arpl
outsl
addr16
lds
ja
mov
inc
pop
nop
sbb
mov
sbb
push
mov
in
fildll
mull
adc
loopne
movsl
fcomps
and
pop
fsubs
out
pop
sti
sahf
movsb
repnz
ljmp
fwait
dec
add
push
xor
adc
or
jne
out
adc
scas
push
lret
mov
imul
dec
repnz
shll
dec
xchg
into
scas
loope
jnp
dec
sub
mov
xchg
mov
sub
fs
pop
mov
jne
imul
outsb
sbb
adc
adc
and
dec
scas
xor
movsb
pop
mov
insb
outsb
cmp
pop
scas
adc
cs
pop
xor
cld
xchg
int3
icebp
jle
mov
aad
pop
fildll
pop
mov
jns
repnz
aaa
mov
mov
mov
daa
sti
lods
add
jmp
movsl
leave
push
push
sub
test
aas
call
push
nop
mov
adc
xor
loop
outsl
das
call
xor
out
xor
dec
loopne
fisubs
out
movsl
push
fdivl
fistpll
ror
xchg
loopne
shl
and
mov
jbe
jecxz
std
nop
aaa
imul
mov
sub
cmp
movsb
cltd
jge
add
std
loopne
and
popa
test
sbbb
mov
mov
add
push
xchg
mov
mov
int3
nop
rclb
sbbl
notb
cmp
imul
lret
xchg
fadd
pop
stc
mov
pop
jns
out
lods
into
lret
mov
sbb
pop
lret
push
movsb
dec
int3
popf
xchg
rorb
rorl
dec
rorl
sub
push
cs
add
push
call
mov
push
scas
insl
jns
icebp
cmp
loopne
in
push
and
inc
xor
push
jecxz,pn
push
jb
ljmp
lahf
test
mov
sbb
adc
les
adc
mov
gs
test
aad
cmp
repnz
repnz
inc
jl
adc
and
addr16
jo
pop
mov
mov
pop
inc
gs
dec
mov
cmp
stos
jg
jl
out
aad
addr16
call
aad
out
fstpt
lods
ret
push
mov
popa
or
and
clc
xor
push
stos
or
cmp
out
jbe,pt
shlb
jo
or
outsl
test
dec
pop
in
mov
faddl
jp
sbb
mov
pop
loopne
inc
test
mov
jno
aam
lret
xchg
pop
mov
cld
jl
add
fnstcw
in
jge
loope
loop
scas
jl
xchg
xlat
pop
push
dec
out
into
lret
pop
lds
outsb
sub
data16
xchg
fsubs
cld
fbld
ja
push
into
pop
cmpsl
subb
imul
out
sbb
fsubl
shrb
sbb
scas
test
mov
xchg
arpl
sar
fdiv
and
sbbl
xor
jmp
pusha
lods
loopne
loope
std
in
and
xor
jbe
movsl
fistl
xchg
outsl
mov
out
orb
jne
test
mov
push
xor
push
loopne
xchg
scas
dec
push
lods
lcall
jg
scas
push
dec
ds
addr16
fsub
loopne
mov
rclb
shrb
adc
lret
cmp
jns
adc
fadd
sub
fs
sub
push
xor
jns
jecxz
xor
scas
adc
push
ljmp
sub
jle
sub
loope
jae
popf
pop
ret
xlat
testl
idivb
testl
xchg
loop
cmpsb
insl
cli
jge
pop
popa
addr16
lods
jmp
test
loopne,pn
in
lret
mov
lods
std
fbld
int
pop
sbb
call
xchg
stos
and
mov
jae
add
test
in
inc
pop
test
scas
push
push
loope
lret
insl
jge
jmp
xchg
arpl
movsl
imul
mov
imul
xchg
rcl
sbb
xor
xorl
push
lods
push
add
mov
mov
and
loopne
xor
aam
add
jl
in
call
mov
cld
testl
mov
arpl
xor
shll
adc
fbstp
fldl
cmc
mov
add
sub
insb
lea
fimull
mov
jo
sarl
xor
sbb
lahf
lret
xor
pop
adc
adc
ror
mov
lahf
ss
xor
aam
dec
rcl
and
loopne
fmull
dec
fwait
pusha
sbb
cs
test
and
insb
push
xchg
lret
out
or
mov
loopne
rorl
jo
jae
xor
cmpsl
sub
jne
inc
push
add
stos
call
fisttps
out
shll
pop
imul
loopne
jno
in
fcompl
inc
xchg
dec
aad
pop
out
xor
dec
mov
sub
ds
sbb
lret
shlb
sub
fdiv
sbb
jmp
fs
rorb
add
repz
add
add
ss
mov
or
push
fdivrl
daa
ljmp
push
mov
in
pop
sub
lcall
mov
stos
adc
ficomps
scas
dec
push
shlb
mov
rcr
iret
jo
into
in
shrb
xchg
mov
pop
imul
mov
or
fwait
mov
lods
das
xchg
push
sarb
mov
push
daa
loopne
vmovupd
repnz
adc
xchg
dec
push
aas
mov
loope
insb
loop
dec
sarb
add
je
insb
fsubl
fimuls
movsl
orb
inc
adc
push
test
rolb
or
jae
hlt
mov
cmc
xchg
dec
xchg
mov
push
ljmp
push
jns
aad
cwtl
mov
sbb
push
pop
test
sub
mov
sub
mov
loopne
xorl
mov
icebp
outsb
nop
pop
outsl
pop
mov
daa
test
cmpsb
push
pop
sti
push
sbb
dec
call
or
cli
in
movsl
mov
pop
and
cmpsb
jg
push
pop
faddp
push
and
dec
mov
adc
sbb
pop
out
call
push
ljmp
daa
pop
shll
into
sub
fbstp
jae
xor
gs
jne
mov
sbb
mov
leave
xchg
mov
test
enter
lret
lahf
inc
out
cld
push
gs
add
pop
sbb
dec
fmulp
data16
repnz
mov
stc
mov
mov
xor
mov
mov
imul
repnz
fsts
cmpsb
lods
lret
inc
sbb
add
les
mov
xchg
adc
pop
daa
scas
adc
inc
cmp
sub
frstor
fs
cmpsb
int
outsb
or
filds
dec
sub
xchg
outsl
push
xor
and
imul
adc
in
movsl
call
loope
in
outsl
add
inc
fisttpll
in
mov
mov
and
movsb
push
pop
xor
jg
push
testb
call
clc
xchg
or
loopne
pusha
or
ja
jbe
out
das
sub
addl
daa
cmpsl
sbb
aas
inc
xor
decb
shll
das
lahf
aam
dec
lock
ja
dec
cmp
push
lret
cmc
cmp
pop
push
push
pop
mov
xchg
stc
add
jae
jmp
cmp
out
or
dec
push
xchg
stc
xor
or
out
add
inc
push
insl
jnp
or
pop
sti
addr16
popl
push
mov
fildl
dec
rclb
pop
insb
js
mov
mov
sbb
out
in
push
mov
jns
addr16
rolb
testb
push
sbb
jg
insb
into
shlb
mov
pop
xchg
or
push
and
add
sbb
out
enter
lods
cmpb
ds
dec
daa
scas
pop
push
mov
enter
nop
aas
gs
xchg
dec
in
test
jbe
cltd
pop
lcall
jg
leave
mov
xchg
lods
xchg
mov
call
jp
aam
jns
iret
loope
pop
xchg
mov
pop
or
loop
lods
insb
inc
insb
shll
adc
adc
push
add
lea
imul
call
and
mov
ljmp
test
movsl
scas
jbe
scas
idiv
push
pop
sbb
out
repnz
fcomip
push
outsb
adc
xchg
scas
icebp
or
and
mov
xchg
fs
insb
mov
add
pop
xlat
cld
xor
outsb
call
push
inc
lods
push
testl
mov
popf
adc
pop
mov
fstpl
scas
in
jl
mov
ret
gs
loop
out
addl
push
dec
cmc
rorb
hlt
out
imul
push
popa
adc
xor
arpl
mov
xchg
cmp
xchg
push
lock
aas
fwait
out
fsub
cs
and
jne
jae
je
add
jns
mul
adc
sbb
notb
mov
clc
dec
arpl
lods
sub
jno
mov
andb
fxch
fimull
cmpsl
xchg
loopne
jecxz
in
mov
psrad
sub
in
jp
xor
movsb
lods
push
sbb
fsubr
ds
pop
out
call
ljmp
fs
fisttpll
jl
lock
aas
pop
or
lcall
inc
rclb
es
movsl
push
ficompl
js
lock
outsl
fs
movsbl
mov
cs
or
loopne
mov
sbb
push
ret
pusha
das
jl
pop
insb
repnz
lea
aam
jmp
data16
rorl
sub
lahf
inc
insl
adc
xchg
jl
push
push
and
xor
inc
cs
scas
scas
movsb
icebp
das
lahf
jle
sub
loopne
les
cli
xor
jl
inc
mov
fucom
lahf
and
xor
adc
ret
addr16
flds
sbb
xchg
aaa
mov
mov
cmpsl
test
push
into
cli
aas
les
inc
xchg
sbb
fucomip
push
fiaddl
push
frstor
dec
gs
into
adc
sahf
daa
add
shl
push
aad
cmp
iret
sbb
adc
pop
mov
jle
imul
scas
call
pavgb
cmpsl
inc
cmp
cli
dec
out
push
fcomip
ss
adc
xchg
lret
addr16
in
push
shll
enter
ss
call
ljmp
aam
mov
mov
loopne
orl
inc
call
cmp
test
sti
add
popf
mov
or
bound
shrb
push
mov
push
js
inc
idivl
call
fiadds
or
dec
insb
mov
jle
push
jle
ss
imul
jmp
pop
subb
adc
data16
push
and
dec
lods
jle
jo
xchg
cwtl
inc
int3
pushf
mov
mov
add
ljmp
push
hlt
andl
iret
js
and
add
jl
scas
popa
rcl
sub
into
inc
lds
repz
xchg
sub
push
out
mov
mov
pop
mov
aas
or
add
and
aaa
inc
push
add
pop
adc
call
xor
popa
fiadds
inc
xchg
gs
mov
adc
rolb
nop
lret
lods
out
imul
aam
mov
into
inc
rclb
and
mov
rcr
mov
xchg
push
jnp
inc
rcr
out
cmovb
sbb
out
inc
mov
orb
or
jne
dec
out
mov
cmpsl
adc
pop
scas
dec
or
mov
inc
pop
repnz
sbb
nop
mov
xor
scas
jg
adcb
push
rcrb
adc
push
cmp
loope
icebp
adc
dec
enter
cmp
dec
mov
dec
pop
dec
xor
daa
xlat
xchg
add
add
out
scas
push
adc
mov
or
jns
sub
dec
or
in
in
incl
shrl
call
jne
mov
iret
pop
dec
loopne
xchg
or
insl
out
or
das
mov
xor
sub
loop
xchg
in
aaa
imul
in
into
mov
shl
cld
shll
and
shrl
push
sbb
rcl
xor
fbstp
rcrb
nop
imul
dec
imul
test
mov
sarb
ffreep
mov
popa
movq
or
dec
loopne
xlat
fdivl
das
dec
lods
jp
imul
stos
outsl
add
mov
imul
inc
shrl
inc
fiaddl
fsubs
cmp
out
fs
xchg
xchg
push
shl
aaa
in
sbb
daa
scas
dec
imul
inc
orb
ret
cmpsb
daa
jns
inc
hlt
out
dec
pop
pop
fiaddl
shll
sub
rorb
dec
push
mov
arpl
in
repz
jle
rolb
fucomip
fwait
scas
xor
imul
xchg
adc
mov
lds
arpl
jmp
dec
ljmp
andb
xchg
jb
cmp
out
rcr
or
sub
push
daa
or
cmpsl
inc
scas
lret
push
xor
leave
clc
popf
pop
movd
leave
mov
add
les
rcrb
fsub
sub
sahf
into
push
cmp
mov
inc
jl
push
outsl
repz
xchg
add
xor
dec
shrl
repnz
out
sahf
jne
dec
dec
ljmp
fimuls
or
mov
xorb
arpl
rcrb
mov
jecxz
add
into
outsl
sub
inc
xchg
pop
cmp
out
mov
imul
out
stos
sub
and
pop
in
mov
xor
dec
loopne
mov
cmp
jp
movsb
testb
or
stc
sub
jecxz
ret
sub
dec
dec
movsl
pop
xor
pop
addr16
in
adc
inc
aaa
cltd
sahf
in
jecxz
push
pop
mov
movsl
je
add
incl
inc
mov
mov
fcom
outsb
push
aad
add
les
xchg
jne
bound
stos
sbb
push
and
xorb
popl
mov
imul
in
pushf
loop
imulb
jmp
jl
dec
jecxz,pt
insb
or
mov
stos
in
addb
cmp
out
sub
shrb
jns
sub
pushf
js
in
in
scas
inc
outsb
outsl
push
repnz
pushf
stos
sbb
mov
fiadds
adc
adc
loopne
test
jecxz
mov
clc
andb
mov
addr16
repz
ficomps
imul
jb
in
dec
movsl
xchg
rolb
fildll
inc
pusha
ljmp
cld
push
pop
mov
or
mov
fistl
and
inc
adc
ss
jl
mov
add
fmuls
pop
lds
loopne
lods
movsb
xchg
xor
pop
fucomip
add
sub
in
mov
jo
out
shrb
fcoms
adcb
or
movsl
mov
loopne
push
cmc
repnz
std
cmp
jg,pt
lock
dec
incl
repz
pusha
dec
xchg
ljmp
or
push
hlt
dec
test
push
call
aas
aaa
out
and
mov
sti
lea
addr16
mov
stos
dec
cltd
jg,pt
mov
add
into
and
cs
aam
and
sub
jl
sub
fstps
fiadds
or
ficoms
add
mov
insl
push
fs
popa
or
iret
ja
stos
popa
das
call
adc
pop
imul
mul
lods
inc
popa
loopne
fisubs
pop
sahf
adc
imul
fists
andl
imul
sbb
xlat
in
inc
push
jnp
cmp
or
or
pop
loop
into
fwait
push
mov
sbb
push
dec
std
sub
movsl
adc
das
icebp
push
test
rolb
je
outsl
pop
stos
dec
inc
and
xor
orl
stos
cmp
jle
push
shrb
mov
scas
or
cltd
mov
dec
call
ja
fcomi
test
repz
dec
call
sbb
push
shr
xor
jmp
sub
xor
scas
xchg
in
cmp
inc
out
add
insl
shl
jp
mov
or
out
rcrb
insb
and
cmp
inc
cmp
test
xchg
cmpsb
sbb
or
cmpl
jle
push
xor
outsb
mov
push
inc
mov
ljmp
mov
pop
sbb
pop
xor
or
in
and
repz
xlat
push
cld
dec
xor
cmp
push
movsb
ss
push
push
mov
jb
mov
pop
fs
pushf
scas
or
xor
mov
push
xchg
cmp
loop
mov
jb
mov
out
fwait
or
lcall
out
add
pop
adc
shll
loopne
sub
das
xor
lock
std
xchg
pop
xchg
xchg
adc
rclb
scas
pop
or
cmc
fistps
dec
inc
cmp
jmp
lret
jl
pop
movsl
xor
scas
lret
mov
cmp
mov
in
or
nop
cltd
rorl
mov
mov
push
loopne
ret
or
xor
lock
jns
std
scas
mov
mov
cltd
shlb
sub
insl
movsl
int
sub
xchg
sarb
sub
adc
cmp
aaa
loopne
daa
rol
out
inc
jns
imul
and
cmc
imul
push
mov
adc
loope
push
rorl
cmpsl
imulb
inc
pop
mov
and
add
xchg
loope
or
cltd
push
cwtl
sub
insb
and
sbb
sbb
jp
xor
sbb
or
test
mov
nop
push
scas
loopne
mov
or
out
movsl
sbb
les
push
scas
mov
repz
sahf
sub
loopne
mov
cmc
adc
cmpsl
sbb
cmc
loopne
loopne
dec
pop
cld
xor
and
xor
data16
insb
xor
pop
das
stc
arpl
pop
movsl
pop
stos
jae
dec
adc
in
daa
or
in
inc
cltd
xchg
pop
jbe
lcall
daa
mov
or
push
into
shlb
loopne
pop
lods
mov
icebp
dec
xchg
and
mov
ss
rcrl
loopne
sbb
or
cs
mov
mov
fdivl
pop
push
cmpsl
push
insl
adc
pop
jecxz
in
mov
cmpsb
out
jle
in
int3
cmp
out
mov
outsb
in
xchg
adc
push
notb
inc
lods
out
test
fstp
sbb
dec
jb
sub
movl
in
mov
insl
call
scas
pop
jns
add
imul
sub
jnp
mov
jmp
scas
in
iret
push
and
pop
lahf
loope
cli
adc
in
lcall
faddl
pop
sub
test
loop
insl
popa
sub
or
pusha
daa
push
es
in
pop
repz
enter
and
stos
outsb
data16
xchg
push
sub
das
sub
mov
call
fistl
in
cmp
outsb
bound
jmp
in
mov
stos
ljmp
data16
push
loop
jmp
mov
inc
outsb
sub
loope
lods
inc
fs
sub
stos
outsb
mov
push
stos
mov
in
stos
daa
and
out
cwtl
jp
jmp
movsl
inc
push
in
out
mov
mov
lods
insb
or
and
fldcw
xor
pop
sub
outsl
loop
out
xor
inc
insb
dec
loopne
addr16
leave
out
movsl
out
in
jmp
sub
lods
in
and
outsb
sbb
dec
movsl
sub
dec
movsl
sub
sub
daa
das
data16
and
arpl
out
or
call
movsb
test
push
imul
or
sbb
ds
rorb
out
sub
insl
mov
and
frstor
push
insl
test
insl
or
movsb
bound
data16
fcompl
dec
outsb
sbb
outsb
sub
lea
pop
sub
pop
pop
jns
lods
sub
or
pop
outsb
int
pop
lods
fisubrs
jecxz
push
push
daa
xchg
outsb
loope
es
mov
sbb
cmp
jle
fbld
mov
cmpsb
call
lret
cmp
rcrb
rcrl
push
mov
pop
mov
mov
dec
sbb
fs
dec
popa
mov
cmp
mov
sub
and
push
sub
jl
subb
add
cmp
fwait
movsl
fnstcw
shr
in
fwait
andb
leave
int3
outsl
call
rol
sbb
and
test
lahf
stos
loopne
fdivrl
out
jmp
mov
cld
stos
mov
and
rcr
jns
insl
int3
rep
scas
call
inc
adc
addl
sbbl
push
jb
xchg
sub
sbb
dec
enterw
xchg
cmp
lds
cld
ja
outsl
sub
xchg
adc
push
stos
test
jmp
xchg
mov
dec
add
in
ret
sbb
adc
or
shr
adc
stos
ror
sub
scas
subb
ret
jne
inc
sbb
cmpsb
repz
mov
mov
xchg
xor
sbb
mov
mov
xchg
xchg
fcmovu
mov
fucomip
fisubrs
aas
out
insb
inc
xchg
ja
in
push
jp
and
dec
jns
aas
outsb
jo,pt
imul
ret
sub
out
stos
les
cmp
stos
push
ss
xor
les
insb
hlt
fsubrs
rcrb
jne
movl
cld
mov
mov
nop
clc
cmp
daa
cmpsb
push
inc
test
xchg
aad
movsl
sub
outsb
rol
inc
dec
xchg
mov
sbb
aam
adc
xlat
leave
dec
pop
test
scas
mov
bound
pop
jne
or
fwait
loope
sub
cs
outsb
test
adc
jnp
push
insl
insl
out
ficoms
inc
pop
popa
subb
vfrczss
out
xchg
outsl
jno
push
fcmovnu
push
xlat
sub
xor
in
ficomps
adcl
sub
neg
sbb
lods
fsubrs
inc
shrb
adc
push
fsub
pop
sbb
int3
adc
arpl
rcrb
repz
fwait
stos
sub
mov
xor
or
sbb
pop
and
sbb
into
sub
pop
mov
popa
lret
out
pop
pop
and
adc
mov
loopne
jecxz
sub
stos
rolb
push
jno
sub
pop
or
and
xchg
adc
jnp
shlb
mov
sub
sub
out
adc
mov
jmp
or
cmp
ror
push
add
cli
dec
jno
cli
repnz
cmp
rcr
inc
adc
lods
pop
call
ret
and
in
xor
pop
cmovae
jmp
jl
pop
jmp
mov
insb
lahf
daa
ljmp
int3
jae
data16
and
out
loopne
lret
loope
sub
add
sarl
cmp
in
mov
xor
in
arpl
shlb
cwtl
incb
push
mov
notb
loope
loop
ror
jae
mov
enter
fistps
mov
in
xor
dec
rcll
cmc
pop
insb
movsl
sbb
fldenv
push
dec
imul
leave
jnp
xor
inc
xchg
imul
sbbb
inc
aas
mov
mov
shrl
je
add
pop
xor
mov
mov
rcrb
and
rolb
push
fisttpl
add
sbb
jnp
cmc
pop
cmp
roll
aad
xor
mov
pop
and
push
jl
loope
xlat
mov
mov
jl
shlb
insb
lret
dec
clc
scas
inc
fadds
fimuls
ja
xor
jl
or
les
push
sub
les
loopne
and
lods
add
rcrl
call
je
repz
dec
mov
fisubrs
push
sub
insb
mov
inc
rol
push
mov
mov
jl
bound
add
push
and
mov
cld
mov
orl
icebp
inc
mov
movsb
popf
mov
dec
repz
mov
lods
cmp
insl
and
scas
ret
ds
xor
jle
sarb
ss
loopne
data16
rcr
or
xchg
loop
call
and
out
pop
push
out
ss
xor
cmp
xor
xor
pop
arpl
ret
jae
negb
jnp
mov
and
stos
out
xchg
dec
xchg
push
loop
call
popf
dec
and
ljmp
mov
loopne
sbbb
incl
stos
xchg
inc
aas
cmp
xor
in
jge
fucomip
fisubs
adc
adc
dec
repz
test
jae
test
rcl
insl
xchg
jp
fwait
dec
jge
addr16
mov
call
jne
es
fwait
jne
fsubrp
jle
notb
add
push
ror
ret
inc
fisubrs
pop
sbb
out
enter
icebp
add
loopne
movsl
decl
pusha
loop
out
inc
mov
inc
mov
or
ljmp
fcompl
pop
jns
daa
mov
sti
subb
cmpsb
loopnew
lcall
or
push
test
mov
sbb
insb
ret
addr16
mov
and
arpl
xor
dec
call
movsl
lahf
dec
aaa
inc
and
test
push
insl
cld
cmp
inc
stos
pop
or
pop
cmpsb
cltd
push
xchg
sbb
push
inc
push
push
cmpsl
mov
ret
outsb
scas
mov
in
inc
movsb
inc
aas
and
xchg
imul
lods
push
mov
in
call
inc
mov
test
cs
out
add
fucomip
in
sbb
fcom
lret
push
in
inc
push
addb
sbb
cmpl
and
hlt
shlb
in
jg
mov
or
adc
mov
clc
fbstp
pop
mov
addb
sub
adc
jp
iret
das
jmp
mov
push
dec
inc
lods
inc
sub
out
push
call
insl
fildll
mov
outsb
jbe
aad
rcr
lods
sbb
nop
pop
pop
dec
pop
adc
packuswb
xchg
test
lret
push
push
out
xchg
daa
pop
and
xor
jg
push
unpcklps
add
iret
fsub
sub
js
repnz
jmp
or
rolb
xor
pop
push
insb
addr16
sahf
out
rcrb
repz
inc
add
imul
div
sbb
push
fistl
dec
jno
xchg
in
std
stos
sub
dec
es
sbb
jl
jg
fdivs
and
cmpsb
mov
cmp
inc
loopne
into
adc
call
dec
adc
bound
dec
jmp
cmp
jecxz
aaa
aam
pop
in
push
es
xor
negb
xor
xor
or
sbb
sub
xorl
loopne
dec
jl
lods
dec
sbb
xor
loop
or
push
and
or
in
cmp
sub
pop
add
xchg
mov
xchg
sbb
mov
ja
clc
jmp
push
adc
cmpsb
add
arpl
das
mov
inc
out
mov
mov
clc
sub
or
xchg
int3
enter
push
inc
movsl
adc
fisttpll
faddl
scas
loopne
fs
sbb
lret
insb
out
jmp
cld
inc
push
mov
inc
mov
test
push
sti
dec
les
test
les
jmp
and
jae
cmpsl
or
ss
cltd
cmp
ja
jp
lahf
pop
test
fisubl
or
in
xchg
jns
push
sbb
shlb
add
add
cmc
mov
rcll
imul
dec
fsubrl
or
cmp
mov
push
push
mov
dec
movsl
mov
mov
inc
loopne
dec
sub
push
shld
mov
fsub
call
mov
mov
mov
jmp
outsl
mov
jecxz
fnstcw
mov
cmpsb
xchg
lret
mov
scas
je
push
push
imul
gs
sbb
add
dec
test
lods
sbb
push
ds
push
lahf
dec
lods
loopne
or
add
mov
out
loop
xor
jp
inc
in
push
arpl
dec
data16
add
pop
inc
xor
inc
push
mov
lret
das
xor
push
icebp
loopnew
cltd
fisttpll
dec
test
repnz
loopne
andl
shrl
pop
in
std
daa
out
imul
xchg
insb
call
adc
iret
sbb
call
cwtl
pop
lods
data16
adc
adc
out
into
das
call
out
lcall
xchg
xor
je
insb
and
ds
add
mov
in
popa
add
and
ret
pushl
adc
jns
movsb
sbb
rcll
aad
jl
push
ret
xchg
sub
loopne
mov
jle,pn
mov
cltd
xor
gs
into
leave
xor
inc
stos
jne
xchg
mov
push
mov
outsb
mov
sbb
les
add
inc
ret
dec
shll
fwait
cmp
jmp
sub
mov
pop
shlb
jne
add
loopne
repnz
daa
or
je
lea
jmp
outsb
and
and
or
ret
and
jb
adc
xor
ret
and
popl
repnz
loopne
lcall
cmc
push
jg
inc
loop
insb
sbb
sub
fnsave
dec
data16
add
jne
popa
sub
ret
daa
imul
or
add
dec
sbb
scas
jb
orl
aas
loope
adc
stos
push
pop
aas
pushf
mov
cmp
pop
adc
sub
xchg
shll
sbb
sbb
imul
daa
repnz
jmp
or
and
or
outsl
xchg
call
mov
push
or
hlt
imul
jb
iret
call
and
rcrb
xor
jno
inc
lret
xor
imul
into
mov
and
loope
sub
loopne
or
inc
cld
pop
push
jb
pop
call
cmc
pop
addr16
leave
push
jae
jmp
or
pop
leave
sub
enter
in
adc
cmpsb
sti
test
insb
stc
loopne
and
pop
mov
xchg
int3
jle
and
fucomip
inc
jae
fstpt
ftst
stos
es
addr16
push
adc
stc
inc
fbld
popf
jg
cmp
push
aas
inc
lods
adc
out
push
jne
sbb
mov
stc
add
ljmp
lahf
scas
add
sub
ret
cltd
sbb
imul
cmp
jae
sbb
andb
popf
popa
imul
inc
test
rclb
vmwrite
xchg
pop
adc
inc
test
ja
inc
insb
or
lret
cmp
pushf
enter
flds
mov
insl
iret
xor
jbe
dec
int
out
push
cmp
loopne
mov
clc
lcall
sub
inc
test
imul
arpl
std
push
das
push
and
imul
pop
push
popa
aas
imul
sub
mov
std
lret
xor
push
pusha
aaa
fsts
jl
pop
shlb
xlat
mov
movl
lods
mov
cwtl
add
sbb
xchg
mov
sub
sbb
jp
cmp
inc
out
inc
cmp
xor
add
pop
mov
add
push
jecxz
loop
cltd
inc
dec
shl
roll
test
out
xor
cld
or
fiaddl
hlt
jl
push
mov
dec
in
mov
dec
xlat
aas
sub
cmp
adc
scas
pop
mov
enter
aam
sbb
loopne
inc
xchg
mov
pop
mov
mov
fwait
stos
jp
out
lret
out
incl
mulb
pop
addr16
icebp
das
pop
sti
push
adc
sbb
add
mov
movsb
xchg
sbb
add
xchg
jbe
fstp
ja
mov
inc
lods
call
dec
push
int3
inc
mov
mov
test
mov
stos
dec
lods
cmpsl
in
adc
push
jg
mov
rclb
dec
ret
pop
int3
xchg
insl
loope
mov
insl
pop
pop
dec
pop
push
adc
cwtl
jae
sub
inc
pop
xchg
pop
fsubr
adc
mov
movsb
test
pop
cmp
das
call
rep
jmp
inc
int
hlt
ret
dec
out
mov
fidivs
mov
sbb
inc
pop
stos
cmp
pop
out
fistps
xchg
push
data16
sar
sub
and
loopne
iret
stc
add
and
daa
stos
mov
xchg
imul
movsw
sbb
mov
pop
sub
inc
push
jo
sub
es
mov
std
mov
fisubl
push
dec
stos
out
mov
call
xor
push
pop
stos
mov
sub
or
lods
cmpl
out
enter
hlt
pop
outsl
sub
cmp
mov
xor
cmc
pop
mov
xchg
incl
lods
sbbl
xchg
jnp
outsl
loopne
push
add
jmp
and
inc
cmp
cmp
pop
fisubs
mov
sub
js
and
loope
scas
or
filds
push
test
push
adc
lret
cmp
ja
stos
fdivrp
fs
in
jbe
mov
sub
in
fisubrs
aad
mov
fiadds
scas
ror
or
jno
cli
mov
jl
push
adc
and
insb
add
into
adc
pop
jnp
pop
fisubs
popa
jl
aaa
sarb
stos
jne
push
aam
xor
insb
pusha
in
inc
inc
cwtl
call
pop
cmp
fiadds
sbb
cmp
les
adc
inc
shrl
ror
test
cmp
ror
xchg
aad
out
scas
adc
jle
mov
sbb
ret
xchg
adc
roll
sub
mov
popf
loopw
out
imul
dec
mov
punpckhdq
mov
out
js
out
lahf
stc
mov
orl
push
mov
fldt
jp
mov
clc
stos
call
fiaddl
add
push
xchg
xchg
dec
push
pop
sub
dec
push
dec
into
mov
gs
repnz
roll
out
iret
push
sbb
shrl
ficomps
push
call
stc
cwtl
dec
dec
mov
sbb
fidivs
or
cmp
or
pop
jne
neg
cli
mov
sub
mov
fs
in
fdivr
pop
sub
scas
cli
aad
xchg
mov
cld
in
cs
cmpsw
jl
or
loop
cmc
push
movsl
movsb
shlb
jns
add
scas
movl
add
ljmp
sbb
stos
pushf
ljmp
inc
ds
sbbb
push
push
pusha
scas
jo
leave
mov
sbb
sub
push
push
idivb
and
mov
push
xchg
mov
fistpl
xchg
iret
dec
das
or
push
push
lahf
jae
stos
sub
rorb
icebp
imul
mov
and
int3
stos
add
xorb
fbstp
cli
scas
sub
mov
popa
mov
jnp
in
cltd
ja
fidivrs
stos
les
mov
lahf
outsb
cmp
fs
push
or
sarl
shrl
lds
adc
iret
sbb
scas
aad
fisubrs
or
sbb
sub
cmp
xchg
hlt
cmpb
int3
es
mov
push
cmpsb
cmp
in
iret
stc
inc
pop
mov
ficoms
adc
je
inc
js
cld
cltd
or
dec
push
gs
shlb
aam
outsl
adc
cmc
les
in
push
xchg
push
loopne
sub
jmp
out
sub
dec
ja
push
arpl
mov
jl
sub
arpl
push
popa
loopne
push
mov
stos
stos
inc
mov
push
imul
cmp
stos
mov
and
inc
sbb
push
xor
adc
add
adc
das
xchg
jno
fdivl
rcr
xorl
adc
or
cmpb
or
jns
adc
movsb
jae
repnz
arpl
cltd
xchg
aam
stos
xchg
sbb
fdivr
dec
inc
jno
lea
scas
inc
lret
hlt
mov
and
mov
or
pop
movsl
or
addb
or
arpl
pusha
hlt
xlat
add
stos
jae
inc
fcmovnb
int3
cltd
push
data16
lods
mov
lldt
popa
loope
out
outsb
push
aaa
add
out
xchg
pop
ficoms
cmp
xlat
jne
lds
loope
inc
mov
mov
pop
ja
adc
xor
push
xchg
inc
dec
ljmp
repnz
or
test
das
sti
lods
hlt
nop
mov
lret
enter
cmpsb
inc
std
jp
xchg
xor
out
hlt
ret
aaa
scas
jp
out
push
stc
das
pop
pusha
ja
inc
dec
mov
mov
pop
inc
out
dec
sub
pop
xor
rorb
mov
jecxz
fs
dec
push
outsb
cwtl
cs
outsb
mov
out
xchg
xchg
dec
loop
movsl
es
outsb
in
int3
aad
cmpsl
in
pop
repnz
insl
fwait
and
xor
in
int3
aas
cmpsb
imul
pop
jns
pop
out
insl
cmpsl
sub
imul
sbb
ret
jmp
and
mov
pop
in
outsb
adc
shr
bound
add
out
in
pop
adc
jno
movsb
mov
addr16
pop
imul
jl
fsubl
jp
out
jb
sbb
imul
cmp
scas
pop
inc
xchg
fnstsw
outsb
repz
sub
insb
test
pop
and
scas
inc
daa
out
daa
cmpsl
bound
inc
pop
loopne
or
sub
lret
jnp
and
stos
loope
mov
imul
sub
ficomps
out
cli
cs
inc
fsubp
aam
and
out
loop
inc
ss
in
ja
insl
pop
and
cs
lods
lods
rcr
mov
jmp
loope
cmpsb
pop
push
in
and
inc
outsb
sub
jmp
call
pop
test
inc
push
pop
ljmp
pop
in
sahf
outsb
push
inc
jecxz
fsubrl
out
mov
in
ljmp
loope
gs
dec
outsw
ss
lea
daa
call
loope
scas
or
arpl
vrsqrtps
dec
sub
mov
int
fisubs
cmpsb
dec
jmp
outsl
pop
in
pushaw
or
daa
jnp
sub
pop
daa
out
shr
mov
adc
pop
in
scas
adc
xchg
push
or
push
jle
jmp
pop
sub
popl
fmul
ret
das
dec
push
arpl
imul
leave
adc
popa
fwait
scas
sub
xchg
aad
inc
leave
loop
or
call
jg
out
shl
inc
mov
insl
out
xchg
int
imul
addr16
push
aam
xor
js
inc
xor
leavew
pop
in
inc
iret
fdivl
loopne
mov
repnz
mov
ficoms
out
sbbb
das
fildl
sahf
pop
push
mov
mov
xchg
inc
ret
repz
int
stos
rorb
xchg
pop
popa
push
sbb
pop
in
pushf
je
sub
pusha
popf
lret
jae
jnp
cmp
jns
cmp
pop
popa
sub
arpl
lcall
scas
cmp
dec
cs
data16
out
rcl
gs
xor
adc
xor
pop
sbb
out
push
or
insb
ja
daa
mov
es
daa
fidivs
xchg
je
pop
loopne
cmp
rcrb
or
or
jle
and
rcrl
daa
js
insb
incb
sbb
into
loope
pushf
jmp
inc
mov
jg
enter
jmp
cmp
inc
xchg
push
mov
inc
addr16
xchg
gs
loopne
incl
add
movsb
and
in
sbb
add
orl
lods
xor
std
sub
add
mov
or
lret
sbbb
mov
fbld
xchg
in
rorb
iret
loopne
ja
xor
mov
mov
cmp
mov
imul
sar
jno
rcl
mull
jecxz
loopne
push
in
into
mov
and
fwait
cmpsl
loope
add
clc
lods
and
outsb
lcall
orb
add
pushf
insl
sbb
or
sub
call
es
movsl
js
addr16
xchg
stos
cmp
or
pushf
out
insl
inc
leave
rclb
ficompl
daa
xchg
sub
hlt
pop
out
pop
loope
inc
jne
imul
daa
mov
xor
sbb
hlt
aam
test
sahf
call
rclb
mov
push
inc
sub
pop
outsl
push
xlat
call
out
pop
inc
push
or
and
ret
xor
add
mov
sub
push
daa
call
mov
pop
cmp
dec
popf
insb
cld
xchg
push
das
jns
sbb
addb
arpl
lods
add
mov
jb
pusha
daa
lret
and
add
mov
loopne
push
ljmp
imul
loope
add
push
loopne
push
cs
subb
dec
jmp
loopne
mov
xor
xchg
sbb
adc
mov
stc
shlb
repz
out
loopne
cs
mov
scas
sbb
insb
mov
call
sti
sub
inc
pushf
bound
mov
rcr
push
enter
or
popf
push
arpl
cmp
fdivrp
pusha
xor
and
ss
cli
lret
insl
mov
lods
add
or
sbb
ja
mov
mov
push
subl
sub
pop
addr16
push
orl
clc
int3
in
xchg
add
subl
push
inc
push
cmp
jo
xor
mov
iret
inc
mov
xor
aaa
fbstp
xchg
int3
inc
xchg
xchg
push
arpl
repz
loop
mov
mov
dec
bound
or
movsl
add
inc
add
arpl
andl
mov
stos
loopne
mov
xchg
mov
pop
addr16
gs
jle
mov
test
leave
push
mov
stc
js
xchg
shrb
out
lahf
mov
icebp
pushf
into
loope
test
mov
cmc
xor
mov
cmp
mov
fstl
sbb
dec
and
fisubrs
or
mov
mov
pop
mov
mov
mul
inc
loop
pop
mov
mov
std
add
loopne
push
je
loope
sahf
cs
les
and
insl
sub
push
mov
les
in
sub
dec
enter
mov
mov
mov
aas
call
shl
icebp
cmp
cmp
sub
xor
inc
mov
inc
imul
cld
es
xchg
scas
out
mov
jl
leave
aam
xchg
and
cli
add
ja
test
mov
add
js
loopne
ficomps
in
dec
xchg
cmpsl
mov
and
aam
hlt
cmpsl
xchg
sub
iret
in
test
lods
cmp
pusha
pop
adc
mov
mov
sub
addr16
inc
xchg
shll
xchg
test
xor
dec
neg
pop
icebp
dec
pop
frstor
fimuls
je
add
xchg
test
in
inc
jmp
dec
iret
push
lock
inc
repz
adc
jp
iret
arpl
stos
xor
scas
clc
jns
jb
repnz
scas
and
lods
jg
add
push
ds
lods
dec
fs
adc
add
shrb
inc
ss
sub
jae
add
cwtl
xchg
push
in
fwait
sbb
js
pop
loopne
aas
cld
std
or
pop
fistpl
popl
repnz
cmpsl
sbb
lea
lret
pop
popa
push
shrb
jne
sahf
sub
loope
cmc
lock
inc
push
xchg
ror
inc
push
add
insl
repnz
cltd
ret
push
or
jnp
rorb
push
shr
and
sub
inc
sub
inc
mov
sub
out
adc
sbb
imul
mov
mov
gs
fs
sub
sbb
mov
outsb
in
jecxz
jne
inc
fcompl
xor
mov
pop
stos
mov
lahf
fsubr
std
push
in
out
and
sub
mov
or
jmp
neg
mov
das
xchg
loop
sub
call
iret
insl
mov
loope
adc
sub
pop
adc
imul
dec
enter
ds
repz
test
xchg
in
nop
bnd
call
insl
idivl
es
adc
jle
ss
push
cmp
lods
dec
shlb
sbb
adc
mov
jge
jb
daa
mov
push
jae
insl
push
call
sahf
and
insl
test
xchg
pop
sbb
je
outsl
dec
in
shlb
adc
mov
and
jbe
outsl
or
rclb
pop
pushf
mov
dec
sbb
pop
arpl
xlat
sub
inc
out
movsl
addr16
cmp
adc
sbb
pop
insb
out
mov
cmp
dec
sub
sub
xlat
fisubrl
jl
scas
loopne
adc
adcl
ret
decl
sub
das
gs
loopne
xor
dec
popa
out
or
shll
mov
loopne
cmc
pop
dec
inc
dec
fsubrs
xlat
or
inc
and
mov
inc
fdivrl
out
pop
mov
js
sub
fidivrs
adc
xor
jns
pop
ds
push
punpckhdq
and
jbe
mov
fcomip
sbb
cltd
xchg
in
ja
push
sbb
insb
test
fs
mov
push
sub
push
add
jle
sub
pushf
rorb
jmp
inc
adc
das
movsb
dec
out
rcrb
call
imul
mov
xchg
and
pop
shrb
inc
mov
jmp
fbstp
in
mov
std
sub
inc
inc
popf
adc
xor
call
sti
or
imul
movsl
aas
mov
adc
jns
stos
sarb
lds
repz
sub
ja
daa
out
std
pop
fistl
fistl
insb
mov
addr16
cmp
loopne
mov
pop
out
out
movsb
les
add
inc
dec
push
inc
pusha
sbb
xor
sbb
jae
sbb
pop
mov
dec
and
fstl
sbb
pop
dec
out
jmp
add
test
pusha
movsb
mov
and
fistps
scas
rcll
mov
mov
fcmovu
lock
jne
cmpsb
pop
cmp
fisttpll
fcomps
test
icebp
or
mov
pushl
cmc
and
les
cwtl
mov
dec
pop
popl
icebp
push
pop
dec
dec
cmp
ficompl
ret
es
dec
aaa
mov
dec
sub
sarl
std
or
jp
jo
arpl
mov
adc
pop
sub
sbb
in
mov
push
insl
popa
jl
xor
pushf
sub
adc
iret
push
mov
out
in
leave
loopne
push
gs
mov
addr16
sub
ds
dec
adc
pop
es
arpl
aas
lods
pop
popf
bound
add
lods
jo
cmp
shr
inc
addr16
xor
push
leave
xchg
sarl
imul
adc
je
mov
in
leave
adc
push
lahf
out
mov
outsb
mov
mov
shl
pushf
or
push
lret
cmp
movsl
and
inc
push
int3
bound
mov
inc
jbe
jle
fists
movsl
rcrl
mov
dec
sub
call
outsb
loopne
inc
lahf
adc
jns
sbb
out
hlt
cmc
add
adc
pop
popa
fdivp
adc
rorb
mov
fwait
cltd
stc
inc
pop
and
pushf
testl
cmc
dec
mov
cli
rcr
mov
pop
movsl
stc
sbb
insl
and
push
in
cmpsl
sub
dec
jne
notl
and
mov
hlt
cmp
rolb
lods
movsb
fiadds
mov
xchg
out
jp
pushf
and
inc
mov
mov
and
in
cmpsb
xchg
fstpt
jb
sub
je
enter
call
iret
dec
mul
cmpsl
aaa
in
xor
add
xor
pop
cs
inc
mov
cld
jl
mov
adc
mov
xchg
xchg
pop
filds
xor
and
lahf
cmp
arpl
or
movsb
lock
xor
outsb
ret
repnz
test
pop
aas
jnp
xor
std
dec
jmp
popf
mov
pop
mov
jbe
cltd
mov
rolb
pop
outsb
out
outsl
adc
mov
fcomps
mov
mov
sub
or
inc
ficompl
lcall
jmp
insb
xchg
xor
aas
test
jns
dec
pusha
dec
mov
imul
and
mov
and
jg
test
jge
into
fildll
data16
or
or
or
push
xor
cmp
sbb
sbb
mov
dec
jae
cmp
in
shlb
lods
sub
pop
loopne
xor
rorl
loopne
loope
jl
lds
aad
ds
sbbl
test
adc
lock
scas
jae
rcll
addb
or
sbb
and
mov
xchg
test
push
loopne
xchg
pop
loope
cld
dec
xor
stos
mov
push
in
sbb
shl
leave
fistps
arpl
adc
aaa
iret
push
sub
call
xchg
aas
xchg
addr16
inc
loopne
and
in
inc
jmp
call
mov
enter
or
adc
daa
nopl
push
inc
fimuls
hlt
fcmovb
mov
sti
push
sub
pop
jns
fildll
add
ljmp
test
aam
in
mov
inc
outsl
jmp
xbegin
call
test
insl
pushf
call
xchg
loopne
fs
loopne
add
pop
fcomi
rclb
xor
inc
cs
mov
xchg
push
fxch
std
das
out
push
xchg
ret
sbb
cmc
aad
addb
ljmp
es
out
test
xlat
ljmp
cmp
adc
push
out
scas
xor
dec
jge
dec
sub
icebp
enter
in
sbb
sub
jns
outsb
sbb
mov
sar
out
imul
xor
in
ljmp
in
sbb
jbe
pop
in
lds
pop
imul
sub
maxps
in
in
mov
lock
dec
ljmp
imul
loopne
sbb
push
sub
dec
cmp
mov
inc
pop
arpl
mov
fwait
inc
cs
add
pop
daa
addr16
hlt
sbb
sub
pop
dec
loope,pn
cs
sub
sub
and
cmc
dec
bound
scas
call
scas
arpl
dec
ret
outsb
cmpl
addr16
lret
inc
and
out
push
jmp
out
scas
out
cs
fsubrl
es
in
sub
sub
pop
imul
push
jmp
scas
mov
sub
mov
das
in
bound
data16
outsb
lods
out
cmpsl
enter
sub
inc
ror
test
daa
scas
mov
imul
daa
call
pop
bound
mov
in
call
sub
stos
sbb
call
addr16
or
out
scas
or
test
scas
frstor
sub
test
cmp
jmp
and
insb
fisubrl
sub
mov
cmp
mov
dec
jmp
or
sub
imul
das
lods
push
mov
data16
fsubr
dec
jmp
and
in
outsb
add
and
cs
in
pop
sub
imul
test
dec
sub
and
adc
pop
fisubs
and
dec
mov
xor
daa
push
scas
cld
or
jl
out
pushf
pop
negb
hlt
push
cld
imul
subb
call
lods
in
pop
fucom
sbb
inc
dec
stos
lret
das
dec
dec
sahf
cli
aaa
imul
mov
inc
push
jmp
add
push
push
adc
fistl
out
jmp
loopne
rorb
popf
xchg
mov
add
mov
cmp
mov
out
shll
mov
push
ss
loop
lods
push
enter
adc
loopne
xchg
sub
adc
imul
daa
xor
push
add
add
and
lods
les
push
lods
int3
and
mov
adc
pop
addr16
rcrl
jne
and
data16
add
bound
cmpsb
mov
dec
and
xor
sub
inc
xchg
arpl
pop
addr16
sub
shrl
jmp
inc
add
fstps
pushf
or
lret
addr16
pop
or
inc
push
loopne
xor
sub
cld
arpl
rcll
data16
aam
scas
movhps
xchg
call
les
cmpsl
mov
sarl
inc
jg
jns
or
rorb
insb
xor
pop
mov
fsubrl
inc
or
scas
jno
loope
pop
ds
addr16
mov
fcmovne
cltd
hlt
push
scas
add
fbstp
ja
xchg
in
rcrb
dec
mov
popf
mov
enter
mov
inc
inc
das
or
mov
addr16
pop
xchg
lcall
xchg
lods
xchg
pushf
aaa
jb
movsl
shl
in
call
or
scas
dec
loopne
mov
fiadds
enter
dec
and
cld
push
adc
rclb
loopne
int3
jge
mov
out
cld
mov
xor
testl
mov
data16
loope
or
xchg
xor
fwait
std
or
mov
fisttps
inc
pop
xchg
out
sarl
dec
bound
mull
shrb
jno
ds
mull
call
ds
mov
or
push
push
mov
pop
in
pushf
and
lret
dec
inc
push
mov
aaa
lock
call
loopne
addb
insl
sti
cmp
out
aas
pop
loope
and
sbb
imulb
filds
rorb
jmp
adc
pop
lods
sbb
mov
jmp
xchg
clc
or
inc
inc
aaa
sub
iret
mov
mov
cld
adc
jecxz
dec
xchg
fistpll
call
loopne
clc
xchg
ret
push
call
sbb
je
and
inc
sub
scas
add
ret
and
addr16
pop
lock
loopne
and
call
xchg
bound
repz
add
insl
cmpl
pop
jl
sti
shrb
pop
jns
xchg
mov
daa
shlb
into
out
xor
daa
aad
mov
rcrb
push
xor
cmpl
xor
ja
inc
arpl
jl
repnz
addr16
push
add
inc
jmp
jns
je
arpl
mov
cmpsl
xchg
das
arpl
cwtl
into
xor
push
daa
push
rolb
push
add
stc
inc
outsb
add
mov
xor
addr16
push
rolb
sub
pushf
stc
cmc
and
push
fwait
mov
ss
add
or
fbld
addb
and
jbe
jge
mov
in
xor
mov
sbb
sub
and
das
push
cs
adc
mov
pop
loopne
mov
mov
imul
sub
jmp
shrl
jl
mov
sbb
movsb
popa
pop
mov
mov
add
and
add
or
sbb
pop
adc
aaa
ljmp
out
jae
and
jle
mov
push
or
ja
cmpsl
ret
and
outsl
call
dec
xchg
ljmp
cmc
hlt
add
insb
cmp
push
fldpi
jp
loope
call
fsub
jge
pop
out
jb
pop
cmp
jecxz
push
fistl
add
mul
and
xchg
mov
dec
or
cltd
cs
adc
mov
enter
pop
scas
movl
stos
mov
push
in
mov
and
icebp
cld
jge
sarl
test
ja
gs
mov
aam
inc
rcr
dec
loopne
inc
mov
mov
rol
enter
lock
sbb
inc
imul
out
cmc
out
xchg
orb
inc
jp
test
mov
sub
insb
push
call
pop
imul
push
xor
fdivp
xor
add
mov
cmpl
jl
push
pop
dec
sbb
movsl
mov
jns
daa
mov
xchg
insl
jl
stos
mov
add
std
imul
cmp
jle
das
sub
jnp
ret
int
cmpsl
adc
inc
scas
repz
push
sbb
addr16
push
test
add
sub
loopne
sahf
inc
in
popl
cmp
mov
jo
movsl
sbb
out
push
jle
cmpsb
ds
stc
loopne
inc
lahf
leave
in
out
in
shr
vxorps
sbb
out
adc
arpl
xor
fidivl
ja
ljmp
pop
loop
sub
rcrb
sub
push
pop
mov
adc
mov
jb
aad
daa
xor
jle
adc
shlb
xchg
or
adc
xchg
bound
in
pop
and
movsl
cmpsl
stc
cwtl
pop
inc
fidivl
aaa
movsb
sbb
std
push
fildl
xchg
adc
or
lods
loopne
inc
js
xchg
mov
adc
xor
gs
inc
call
push
xor
mov
push
jge
xor
and
aam
out
test
dec
jnp
pop
imul
and
mov
and
out
in
stos
inc
pushf
ffreep
pop
and
lods
icebp
mov
mov
int3
mov
stos
push
test
shlb
int3
out
adc
jle
cmp
int3
aad
mov
jno
mov
addr16
idivl
adc
jns
scas
pop
and
mov
icebp
xchg
mov
mov
xor
add
xchg
mull
lods
sahf
pop
rcrb
mov
and
mov
pop
arpl
pop
loopne
push
cmc
push
aaa
sub
rorl
sarb
in
dec
shlb
mov
iret
push
pushl
fbld
inc
jl
cli
loopne
xor
xor
data16
xor
sub
mov
fiadds
mov
adc
movsl
push
mov
test
scas
andb
leave
and
mov
add
rcrb
cli
daa
adc
jle
xor
push
dec
es
jae
push
out
aas
lods
loop
dec
daa
push
loopne
xchg
jmp
push
dec
xchg
mov
lcall
mov
out
lahf
in
sub
movsl
jne
cli
inc
or
shrb
mov
inc
add
loopne
lods
push
jle
call
xchg
xor
dec
or
fisubs
scas
push
add
mov
push
sbb
ret
adc
shlb
rcl
les
adc
mov
js
xor
adc
shll
incl
cmp
lods
ret
icebp
scas
sub
gs
loopne
and
cmp
and
addl
jns
arpl
push
inc
xlat
mov
cltd
in
fwait
mov
outsl
repnz
rol
addr16
sbb
popf
jns
add
adc
adc
insb
pop
add
and
mov
rcrb
adc
xchg
movb
push
pop
sub
jmp
jg
xlat
cmp
loopne
lret
cmp
xchg
insb
mov
mov
push
add
xor
add
fwait
inc
mov
push
mov
jp
arpl
outsb
popa
scas
lods
lcall
rclb
push
lret
dec
adc
xor
neg
jp
mov
loopne
shl
aam
and
and
inc
ds
dec
into
das
out
adc
addr16
jb
cmp
inc
loopne
mov
push
mov
jmp
es
in
inc
data16
or
aad
rcr
jmp
icebp
adc
push
xchg
mov
inc
push
iret
fimuls
sub
adc
test
dec
call
mov
js
xchg
pop
pop
fucomip
iret
ja
push
shrl
mov
pop
outsb
add
mov
inc
push
sub
xchg
lock
call
bound
scas
sbb
push
mov
xlat
xchg
mov
mov
dec
or
loopne
fucomip
das
xchg
fcomps
jp
das
pop
xlat
pop
fistpll
mov
das
movsb
in
jg
jl
mov
sub
nop
adc
xor
call
push
loopne
pushf
cmp
scas
shrb
cmpsl
jns
nopl
popf
jle
bound
jg
pop
or
sbb
movsl
loope
jnp
testb
loop
mov
jns
in
inc
add
or
pop
insl
xor
addr16
jp
push
inc
imul
imul
cwtl
sbb
push
movsl
dec
push
imul
das
mov
jge
mov
pop
xor
mov
imul
sub
insb
fsubrs
mov
es
mov
movsl
push
daa
into
inc
sbb
push
std
add
sbb
inc
xchg
mov
arpl
das
dec
aas
lods
mov
jae
mov
xor
ljmp
fwait
sbb
fldt
dec
adc
mov
xor
jae
lds
cltd
outsb
jmp
xchg
imul
adc
mov
add
jo
lods
mov
insb
sub
and
and
out
sbb
and
xor
call
scas
xchg
xchg
aaa
in
fildl
adc
sub
iret
insl
xchg
call
and
or
shrb
inc
icebp
dec
pushf
pmuludq
fucomi
xor
push
jp
add
xchg
push
ljmp
out
sbb
lret
sti
bound
arpl
cmpl
xchg
mulb
cmp
xorl
mov
add
sub
add
add
gs
push
leave
xchg
inc
loop
jle
push
add
mov
scas
jnp
pushf
xor
fwait
mov
idiv
push
imul
movb
and
js
mov
mov
mov
sub
mov
bound
xchg
pop
clc
cmp
movsl
in
cmp
lahf
scas
inc
pop
out
in
loopne
pushf
dec
and
outsb
addr16
push
jmp
mov
xchg
dec
pop
xor
xchg
push
iret
test
cmp
dec
loopne
jne
aaa
pop
and
cmp
adc
push
jg
roll
xchg
mov
loopne
lods
or
adc
stos
lcall
int
loopne,pt
mov
jb
xchg
adc
mov
inc
sub
adc
sti
inc
mov
adc
mov
mov
fwait
lods
push
call
cmp
bound
jns
fistl
mov
shrb
outsb
repz
sub
lret
sahf
int3
adc
daa
mov
dec
inc
cli
pop
icebp
call
lret
sbb
adc
stos
pop
inc
jnp
cmp
stc
pushf
ss
aam
enter
pop
arpl
inc
sbb
cmp
fldcw
sub
out
xor
mov
add
loopne
mov
jmp
das
mov
fists
pop
ja
daa
icebp
mov
icebp
arpl
sub
inc
cs
pop
arpl
and
xchg
inc
inc
nop
setno
mov
shlb
fimull
mov
ss
jmp
les
out
add
into
leave
add
adc
inc
push
dec
xchg
loopne
push
adc
shll
daa
cmp
je
fldt
shlb
clc
jmpw
or
or
arpl
inc
mov
call
cmp
xor
lea
popa
scas
dec
or
and
jmp
icebp
sbb
pop
pop
mov
dec
cmpsl
pop
inc
cs
mov
repnz
cli
popf
push
scas
pop
bound
adc
ss
and
inc
je
xchg
int3
in
mov
iret
mov
nop
push
cld
cmp
mov
lock
imul
xor
aam
inc
pop
xchg
mov
cmp
sub
or
imulb
xchg
fs
push
xchg
pop
sub
pop
loopne
fldl
pop
lahf
sti
jmp
mov
call
mov
hlt
mov
movsb
rol
sbb
push
sbb
xchg
nop
data16
mov
int3
push
fstps
sti
inc
cli
lcall
or
das
popf
or
fidivs
sbb
rclb
fucom
into
inc
pop
arpl
pop
jb
and
sbb
into
jnp
das
dec
jno
test
mov
lret
mov
int
sbb
ja
xchg
fisubs
add
push
and
pop
popa
add
rclb
filds
loope
aam
jns
or
or
ror
imul
adc
jo
sub
data16
jo
pop
stos
movsl
int
orl
arpl
in
adc
mov
mov
add
repnz
fisubs
sbb
sarl
xor
scas
dec
jmp
icebp
les
sub
sbb
fisubs
aam
lds
loopne
jecxz
in
sarb
cmp
loop
dec
leave
repnz
xor
dec
jmp
call
arpl
jae
call
dec
and
stos
jns
popa
sub
out
cmc
mov
dec
outsb
push
ljmp
dec
addr16
ficomps
sub
dec
jns
outsb
xchg
dec
and
loopne
ljmp
adc
jbe
push
cmpb
inc
xchg
xor
inc
imul
mov
adc
decl
lahf
push
pop
and
shll
ja
inc
repnz
add
add
lahf
mov
out
orl
stos
dec
inc
mov
lret
insl
daa
std
xor
loopne
push
add
sub
stos
or
xchg
inc
lret
inc
popf
and
cvtps2pi
rorb
mov
into
shrb
test
stos
in
xorb
gs
daa
loopne
roll
fmul
cmpsb
and
int3
inc
shl
lods
shlb
lcall
insb
sbb
inc
adc
icebp
xor
push
mov
rolb
cmc
scas
out
xchg
movsl
leave
xor
cmpsl
lds
add
jbe
cltd
dec
movsl
xchg
in
xchg
dec
cltd
cltd
data16
cmc
int
xchg
pop
ja
mov
dec
fstpt
dec
dec
lahf
call
push
shlb
ss
or
pop
push
adc
xor
nop
add
jp
movsb
xchg
in
or
cmp
xchg
lahf
and
adc
ret
jo
imul
cvttps2pi
hlt
sbb
and
cmp
pop
inc
and
xchg
mov
in
sbb
mov
inc
inc
call
out
sub
out
in
nop
loop
filds
cld
fstl
pop
cs
xchg
ss
movsb
xor
addr16
push
adc
sbbb
cmp
pop
jne
cmp
mov
xor
push
push
arpl
xor
cmc
adc
inc
ret
or
lahf
sub
out
add
and
sbbl
loopne
in
pop
daa
insl
imul
jp
rorb
scas
jno
cmp
mov
je
dec
cld
addl
dec
sbb
pop
xchg
lcallw
mov
scas
je
cld
push
les
lret
push
jmp
clc
jno
loop
dec
ffree
sub
test
jbe
in
shrb
shrl
negl
xchg
mov
xchg
mov
add
arpl
test
and
hlt
lahf
and
clc
stc
int3
jmp
cli
in
jmp
insb
inc
mov
pushf
pop
in
aam
cld
shlb
push
sub
shrd
lods
push
out
addr16
or
xor
rorb
subl
dec
sarb
jbe
ret
lahf
pop
inc
shlb
in
mov
inc
inc
and
lds
xchg
dec
jl
mov
lock
int
dec
mov
xchg
ret
and
and
out
pop
loopne
mov
movsl
xchg
jle
sbb
push
mov
push
ja
imulb
lods
stc
or
jmp
subl
mov
sbb
jb
xor
xchg
repz
and
push
pop
push
mov
loopne
pop
push
add
mov
cld
lret
clc
loopne
inc
cs
das
call
iret
mov
shlb
or
jnp
rclb
iret
jp
sbb
out
outsb
les
imulb
sub
data16
loopne
jne
inc
cld
pop
push
lret
pop
outsb
aam
add
pop
addb
in
flds
sbb
add
out
push
insl
fldenv
sbb
pop
push
dec
mov
daa
dec
loopne
push
daa
dec
sbb
adc
dec
scas
aam
dec
scas
fucomi
rcrb
daa
arpl
adc
sub
int
cltd
mov
inc
push
push
inc
cwtl
xchg
pop
pop
punpckhdq
shrb
stc
rclb
test
jo
add
fs
pop
popf
fildll
shr
push
add
in
test
das
xchg
and
das
jl
repz
jmp
and
repnz
xor
and
flds
sub
jae
pop
int3
out
imul
xor
mov
daa
add
jae
inc
in
sbb
push
jb
lea
xchg
mov
lds
nop
out
loopne
push
pop
loop
cmp
fucomip
cs
mov
adc
sbb
add
int
out
inc
mov
adc
sub
andb
fldl
shrb
roll
xor
movsl
sub
pushf
or
mov
std
hlt
lret
bound
inc
push
jp
fiadds
addr16
cmpsl
enter
inc
pop
loopne
insl
dec
adc
xchg
or
bound
jbe
arpl
sub
loopne
int
out
or
fildll
addr16
xchg
je
shlb
popa
int3
jecxz
and
je
push
mov
inc
push
fiadds
scas
dec
jno
repnz
and
cmp
and
mulb
inc
jno
hlt
insb
es
not
add
xchg
fldcw
scas
pop
pop
mov
xchg
nop
and
jns
test
cld
test
xchg
addr16
inc
inc
loopne
fwait
gs
jns
mov
insl
push
lahf
mov
inc
or
fwait
popa
or
xchg
ss
xchg
mov
sbb
ret
push
stos
arpl
push
sbb
dec
ja
dec
jno
rclb
loop
pop
call
daa
iret
mov
loopne
movsb
or
pop
insl
sbb
mov
mov
cmc
pop
shll
sub
loopne
daa
xchg
lcall
lret
in
loopne
aad
mov
bound
mov
xorb
lds
cmp
test
enter
lret
je
pop
fimuls
add
jb
mov
push
dec
sub
jae
adc
sub
imul
fildll
mov
jl
push
cmp
xor
orb
std
sti
jo
add
lcall
faddl
insl
mov
imulb
xchg
mov
jge
inc
pop
jmp
adc
lds
repz
insb
rclb
cmpb
stos
addr16
rclb
xchg
or
push
test
test
test
mov
fstps
fwait
lea
addr16
adc
xorb
pop
mov
cld
xor
xor
imul
and
sub
xorl
jns
jae
shll
mov
and
das
xor
loopne
nop
cmc
movsb
sub
xor
fiadds
cld
leave
movsl
pop
fsubrp
jl
orl
dec
outsb
pop
jmp
call
dec
and
jo
pusha
loopne
int
inc
test
ljmp
insb
movsl
cltd
mov
jle
cmp
sbb
sbb
sub
inc
fwait
push
jnp
inc
lret
push
cld
rorb
pop
outsb
div
in
xchg
fs
mov
cld
push
xchg
addr16
int
sub
jecxz
and
fidivs
subb
xor
add
xchg
xchg
pop
mov
repz
aaa
movsl
xchg
mov
imul
mov
test
sbb
outsb
push
cs
insl
xor
cmpsb
scas
into
enter
mov
cmp
dec
mov
push
adc
xor
mov
mov
sub
fisubrl
pop
in
popf
pop
pop
xor
inc
inc
insl
xlat
cmp
cs
and
and
pop
xchg
fbld
jbe
outsb
cld
in
mov
dec
dec
repz
and
dec
jecxz
aaa
movsl
mov
shr
cmpsb
dec
andb
inc
mov
insl
inc
sbb
movsl
inc
imul
and
and
pop
mov
dec
outsb
sub
push
popa
push
dec
adc
in
sub
scas
fsubr
cltd
pop
mov
dec
or
pop
stos
loopne
fisubrs
sub
outsb
das
pop
ret
ss
pop
scas
sub
fsubrl
data16
in
push
push
and
cmp
jo
mulb
pop
sbb
daa
shlb
daa
outsb
xchg
cmpsl
lret
sub
rcr
gs
and
dec
mov
enter
addr16
xchg
and
out
push
sbb
stos
dec
scas
xor
or
pop
jecxz
fisubs
das
cmpsb
sub
in
push
cmpsb
sbb
sbb
sub
loope
xchg
ds
and
popa
movsb
sbb
lods
sub
sbb
test
daa
ljmp
and
das
movsl
aad
into
movsl
pop
out
xor
fiadds
dec
fisubs
lods
ss
fsubrl
out
insb
cmpsb
pop
adc
mov
sub
outsb
popa
imul
sbb
bound
imul
frstor
mov
addr16
and
in
addr16
mov
and
ss
and
pop
adc
das
inc
loopne
and
or
xchg
aad
int3
mov
sbb
std
mov
dec
in
rclb
adc
sub
out
addr16
push
movsl
lahf
mov
loopne
and
cs
sub
jne
push
pop
push
add
dec
rcrb
pop
arpl
mov
pop
cld
loopne
xor
rcr
test
jbe
shlb
mov
sub
adc
jmp
xor
adc
cld
loopne
neg
outsl
es
xchg
xchg
push
add
in
xchg
sahf
loopne
movsl
mull
idivb
call
ret
je
adc
bound
xchg
pop
aam
mov
adc
aad
mov
cmp
sbb
sahf
aad
addb
fs
pop
xor
jg
xchg
pop
scas
jle
xchg
ret
inc
adc
das
jle
call
sub
sbb
pop
push
mov
inc
test
mov
outsb
loope
incl
js
dec
add
das
mov
adc
mov
xchg
sub
cmc
leave
jb
mov
cli
out
sbb
sbb
insl
pusha
fucomip
adc
push
add
sub
mov
dec
xchg
in
sahf
add
stc
insl
mov
loopne
mov
scas
jp
xor
sub
loope
das
rclb
dec
mov
pusha
push
jne
or
stos
mov
sub
scas
imul
or
mov
stos
imul
into
sub
cmpl
shlb
repnz
add
push
lahf
or
stc
in
mov
rorb
test
push
pop
lret
adc
inc
mov
lret
ficompl
mov
sbb
imul
movsl
fwait
adc
aaa
imul
shlb
mov
mov
pop
stc
rcr
xchg
les
xchg
aad
popf
call
pop
rcrb
test
pop
dec
mov
cmp
mov
imul
pop
sbb
push
mov
ret
les
xor
fdivrp
mov
mov
test
add
xor
mov
push
add
xor
sbb
adc
mov
dec
or
push
jl
sub
push
rol
das
sub
mov
loop
in
imul
dec
jo
sub
gs
repz
or
add
leave
mov
xchg
adc
loopne
xchg
push
imul
inc
sbb
ds
pop
cld
sub
lret
push
push
lret
sub
scas
push
xchg
push
jns
daa
sub
iret
jb
adc
jecxz,pn
bound
pop
cltd
rorb
jno
int
insl
popf
sub
out
add
lods
adc
arpl
dec
jae
loopne
sub
lcall
mov
sbb
mov
arpl
outsb
xor
pop
lret
aam
lret
bound
aam
push
call
lahf
je
icebp
mov
nop
lret
test
mov
lret
sbb
cld
mov
call
sbb
ret
mov
movsb
inc
mov
pop
test
ljmp
inc
push
psubsb
pusha
adc
pop
aam
jmp
aad
inc
imul
aad
and
xchg
out
lahf
rol
rcrb
out
sub
xor
scas
inc
scas
stos
fwait
sub
outsb
pop
idivl
pusha
inc
mov
add
movsl
out
pop
xchg
ficomps
pop
add
and
dec
jg
call
int3
or
sbb
inc
je
in
scas
movsl
cmpsl
movsb
testb
cmpsl
xchg
pusha
repz
lret
pop
pop
pop
and
mov
mov
sbb
xchg
data16
out
pop
jp
adc
inc
inc
mov
jg
test
adc
xor
neg
add
fistpll
addr16
or
mov
xor
and
mov
aas
call
mov
fneni(8087
add
loop
adc
ljmp
fistps
in
arpl
dec
push
lret
add
ss
adc
dec
push
adc
sbb
divb
leave
sarb
dec
call
pop
filds
insl
lods
mov
jecxz
pop
call
pop
mov
lock
cwtl
iret
sarl
imul
mov
sbb
call
jl
hlt
data16
mov
lcall
mov
dec
adc
shrb
mov
cld
lds
les
add
sub
pop
fists
jae
nop
or
and
or
addl
add
sbb
scas
sub
pusha
ret
push
sub
sub
sub
insl
std
fildll
push
mov
outsl
dec
call
ljmp
loopne
sbb
add
scas
pop
fsubl
add
movsl
movsb
mov
out
sbb
repz
stos
mov
das
xchg
push
fmull
jg
leave
daa
sub
sbb
sbb
out
pop
ss
push
and
fs
pushf
cwtl
adc
pusha
mov
call
adc
std
iret
sub
pause
jmp
in
dec
xchg
xchg
cmpsb
mov
adc
xor
adc
test
dec
jle
xchg
daa
sbb
push
push
dec
push
dec
daa
mov
jns
add
mov
getsec
cbtw
mov
mov
push
sub
loope
std
jp
fistpl
lock
or
and
into
out
in
jno
mov
int
dec
push
xor
test
in
loopne
ja
mov
or
daa
push
je
cmc
insl
jae
pop
mov
or
xchg
inc
xchg
es
loopne
repz
inc
addr16
and
lret
pop
movb
imul
inc
dec
and
stos
lods
stc
ret
cmc
pop
das
mov
shl
inc
loopne
mov
add
pop
icebp
inc
out
stos
imul
ja
test
cmp
inc
test
and
or
pavgb
xchg
and
cli
or
outsb
jo
jecxz
xchg
mov
ss
test
movsl
inc
in
hlt
add
jl
add
addr16
loop
push
enter
add
into
sti
adc
cmp
jmp
push
mov
mov
stos
xor
insb
call
arpl
daa
or
inc
mov
andl
mov
sahf
in
sbb
jno
xchg
mov
mov
sub
hlt
imul
cmp
jne
jo
jbe
sbb
xor
pop
imul
fimuls
scas
in
loop
push
mov
cmpsl
inc
sub
loopne
jl
iret
cmpsl
jecxz
data16
inc
popa
ret
out
movsb
sbb
pop
loope
pop
jecxz
arpl
mov
adc
scas
cmpsl
ret
lods
insl
int3
subb
rclb
sbb
movsl
nop
inc
add
out
pop
pop
dec
hlt
int3
cmpsl
push
and
stc
mul
loopne
mov
and
inc
push
xor
xor
mov
sarb
mov
movsl
mov
in
sbb
inc
popfw
mov
cmc
andl
and
mov
out
inc
ret
cld
sti
lret
outsl
movsl
call
scas
sarb
jg
inc
outsl
sbb
pop
iret
icebp
mov
inc
push
insl
xchg
pop
cmp
push
rcl
sbb
pop
aas
add
fwait
push
call
das
cld
rolb
fistps
inc
mov
push
adc
jbe
incl
mov
inc
popf
lret
inc
and
mov
pop
sub
or
pop
fiadds
insb
add
push
cmp
add
adc
xchg
inc
dec
inc
mov
sbb
and
push
out
ds
adc
lahf
test
mov
adc
sbbl
mov
pop
add
adc
inc
xchg
jl
fsubrl
mov
pusha
cmp
pop
push
pushf
or
push
sar
cmpsl
cmc
cmp
insl
xor
sub
dec
sbb
in
or
xchg
lods
nop
push
fisubrs
fs
sarb
ffreep
repnz
aaa
cmp
sub
dec
daa
imulb
push
test
lock
addr16
pushf
bound
mov
cmp
shl
sahf
mov
add
outsb
rorb
mov
dec
jp
push
push
dec
mov
adc
data16
cmp
call
out
rcll
cmc
lock
stos
mov
add
adc
cmp
pop
scas
mov
and
insb
xor
pop
mov
int
aam
cs
je
push
out
jp
mov
rol
jle
imul
and
xchg
xor
sbb
dec
mov
inc
add
into
mov
mov
xor
movsl
leave
and
and
stc
mov
scas
mov
xor
push
dec
mov
aas
insl
bound
mov
data16
mov
in
andl
lret
loop
mov
cmpsb
and
mov
adc
pop
dec
sub
xchg
cmp
loopne
or
mov
sub
int3
push
nop
mov
jo
fisubl
dec
outsb
or
pop
loop
xor
lods
mov
enter
repnz
and
rcrb
sub
pop
xor
ret
jbe
das
scas
rolb
adc
ss
or
xor
int
movsl
adc
dec
mov
outsl
pop
add
xchg
inc
xor
cmp
mov
mov
aam
lret
xchg
push
jmp
std
lret
lahf
loop
cmp
es
mov
ljmp
cmpl
add
outsl
jp
pop
xor
les
add
imul
mov
loopne
lahf
jmp
roll
jno
sarl
adc
je
imul
das
in
loope
sub
pop
mov
je
pop
or
ljmp
repnz
aam
ror
mov
rolb
mov
clc
push
mov
jns
sub
dec
in
jge
pop
insl
and
push
loopne
fiaddl
repnz
out
das
and
arpl
dec
idiv
jp
fisubrs
call
cmpsl
rcl
test
aam
pushf
sbb
mov
mov
aad
je
test
mov
add
fs
inc
jmp
outsb
inc
das
loop
jmp
jo
sub
push
fnstenv
mov
lock
jno
dec
in
jnp
sti
mov
pop
xor
out
mov
sbb
dec
or
inc
jle
inc
rclb
inc
inc
arpl
and
jecxz
sbb
jne
cmp
dec
sbb
mov
add
por
pop
pushf
lods
dec
scas
stc
lahf
imul
in
rorb
sbbl
lret
mov
insb
jecxz
insl
shr
pop
shrl
xchg
and
insl
movsl
pop
loop
test
sub
cwtl
insl
sbb
sub
sbb
loopne
lahf
incb
push
fdivrp
int
sub
cld
aaa
mov
xchg
xchg
rol
test
insb
inc
call
dec
aam
in
data16
ljmp
mov
nop
imul
mov
scas
sbbl
loopne
inc
in
cltd
lret
mov
leave
nop
andb
out
pushf
lahf
in
out
mov
in
insl
cld
push
mov
sub
mov
add
sbb
nop
das
push
ret
dec
loopne
mov
loope
add
lret
mov
shlb
icebp
mov
dec
inc
mov
sarb
push
push
xchg
out
push
loopne
inc
sbb
addl
fcomi
outsb
pusha
mov
mov
enter
loopne
push
movsl
or
ss
repz
daa
jl
out
dec
sub
fdivp
fmuls
xchg
data16
cld
mov
push
movsl
mov
arpl
out
push
out
lods
popf
pushf
out
xor
jecxz
dec
loop
xchg
ss
cmp
mov
mov
call
pop
repz
aad
int3
and
xchg
mov
dec
xchg
data16
sub
cwtl
in
inc
inc
add
imul
push
sbb
out
xchg
adc
les
mov
call
cmp
out
add
loopne
loopne
mov
xchg
ret
cltd
leave
inc
in
pop
xchg
cmp
mov
mov
add
inc
insl
add
imul
cmp
cmc
call
mov
push
pop
cmpsb
leave
or
sub
cmp
rolb
lahf
out
pusha
push
sbb
fisttpl
mov
fstpt
into
dec
push
add
xor
stos
fxch
or
decl
sbb
imul
push
push
sbb
jle
adc
rclb
out
push
out
push
or
push
call
mov
jno
cmp
adcl
lock
xchg
mov
push
pop
inc
pop
mov
outsl
les
btc
xchg
ss
pop
fsubl
dec
adc
insb
imul
xor
loopne
loope
lea
insl
sbb
push
inc
xor
in
sbb
loopne
xor
es
addr16
push
jle
jle
and
gs
sbb
pop
or
adc
xor
call
cmpsl
shrl
pop
insl
loopne
mov
mov
cmp
in
lods
imul
xor
jmp
fisubrl
sbb
out
jns
pop
lcall
aas
adc
and
cmp
sbb
pop
fadd
aas
sub
int3
loopne
sub
sub
pop
sarb
jle,pt
add
adcl
pop
js
sub
stc
adc
out
scas
mov
addr16
loopne
in
mov
dec
ljmp
pop
sarb
sbb
test
ljmp
pop
adc
mov
cli
push
pand
rolb
data16
push
jge
lret
out
nop
xlat
popa
or
add
das
and
popf
insb
xor
xchg
inc
arpl
vmread
gs
xor
mov
out
cmpsl
mov
pop
les
jmpw
xchg
imul
cmp
ds
or
and
mov
imul
loopne
and
push
mov
mov
hlt
outsl
cltd
add
jmp
jae
pop
dec
pop
test
sbb
ret
rorb
movsl
adc
popf
push
shll
pop
in
cld
add
xchg
rorb
jmp
dec
repz
inc
sub
dec
inc
pop
insl
cmpsl
lret
jmp
mov
cmp
push
jo
push
cmp
pop
xor
mov
decb
cmp
sarl
cmpb
sub
stc
outsl
es
jl
je
push
sub
stc
add
loope
xor
xor
subb
andb
or
sbb
mov
jmp
mov
sti
pop
dec
xchg
and
pandn
or
sbb
lret
aas
popf
push
repnz
aad
out
pop
dec
testb
loopne
out
cmc
inc
jle
xchg
sub
xlat
add
push
mov
loopne
mov
lret
fisttpll
std
movsl
fistps
daa
push
lret
bound
loopne
ret
xchg
imul
dec
or
mov
call
enter
iret
pop
and
jae
lcall
push
inc
mov
loopne
leave
sub
pop
dec
inc
jbe
adc
mov
addr16
jmp
jge
mov
fcoml
rorb
ret
xlat
sbb
pusha
mov
xor
hlt
mov
inc
add
lcall
inc
dec
pop
iret
fimull
stc
xor
sbb
cmp
sbb
and
popa
call
xchg
xchg
cmp
xchg
lcall
out
daa
iret
add
int3
pop
loope
mov
dec
outsb
jnp
loop
scas
cmp
mov
movsl
ret
dec
dec
jle
cmp
or
lret
jl
sub
pop
leave
cmpsb
clc
push
inc
mov
mov
rorl
cmp
les
je
dec
push
divl
je
cmpsb
iret
das
mov
pop
push
dec
in
mov
dec
arpl
aam
ljmp
les
pop
mull
inc
add
fisttpl
in
jb
shl
jns
pop
sub
icebp
faddp
dec
test
loopne
mov
imul
aam
adc
outsb
test
push
shlb
out
pop
ljmp
xorb
pop
sbb
jmp
xor
adc
mov
int3
push
xchg
aas
add
push
jl
dec
xchg
jbe
pushf
insb
scas
jbe
rcr
movsl
push
adc
cmpsl
mov
rolb
icebp
and
adc
insl
call
or
mov
outsb
in
push
fmuls
imul
into
dec
inc
pushf
pop
outsb
mov
js
push
arpl
andl
lcall
and
xchg
pushf
stc
inc
push
sar
mov
sbb
rcr
add
test
inc
das
jae
pop
xchg
bound
ds
mov
iret
lods
pop
aas
push
inc
arpl
iret
xor
and
movsb
xchg
or
daa
add
shlb
push
xchg
jnp
add
lock
addb
ret
shr
push
and
cld
cmp
loop
call
xchg
popa
adc
in
rol
in
adc
xor
jmp
scas
ss
lods
cmp
leave
andl
mov
dec
out
push
das
jle
std
int3
mov
dec
and
shrl
push
mov
cs
jae
adc
dec
test
enter
mov
orb
js
sub
inc
mov
pop
adc
inc
xor
jo
enter
sbb
jnp
scas
in
icebp
sysenter
popa
adc
jecxz
pushf
add
xor
je
sbb
push
mov
mov
lods
dec
mov
fsubl
and
xor
push
sbb
fstpl
dec
adc
pop
jle
jle
bound
iret
or
xchg
push
dec
sub
lret
cs
je
mov
test
add
imul
out
dec
mov
mov
jo
push
rolb
les
xbegin
mov
xchg
repz
jmp
test
rorb
xchg
icebp
dec
stos
pop
push
and
push
sarb
daa
cmpsl
jae
xor
xchg
test
inc
les
call
add
adc
mov
xchg
test
orl
stc
mov
std
mov
jl
sbb
pop
jns
pop
out
scas
rorb
add
mov
fucomip
arpl
int
lods
inc
int3
bound
fneni(8087
jno
xlat
or
sbb
lcall
lock
cmpl
mov
popa
xchg
aad
movsb
xor
pop
xchg
cmp
push
bound
mov
hlt
sbb
aas
xor
rclb
imul
std
pop
xor
pop
movb
mov
ja
sbb
lahf
jl
insl
xchg
std
enter
imul
sub
push
dec
aad
dec
fistps
insl
cld
out
xchg
imul
cmpsl
loop
bound
cltd
out
outsl
call
add
in
fsubl
loopne
rcl
jnp
lock
fdivp
imul
stos
adc
and
jl
jae
push
icebp
sub
mov
loope
insl
cmp
dec
pop
cmc
dec
mov
sti
fadds
push
arpl
cmp
in
rolb
mov
mov
cli
sbb
mov
jmp
dec
lea
scas
xchg
xchg
scas
jne
inc
lods
insb
xor
pop
inc
pop
cmc
cmpsl
imul
cmp
insb
dec
push
clc
ss
xchg
call
jle
scas
jge
or
mov
aam
out
test
mov
loop
mov
lods
pop
in
mov
or
push
push
outsl
loope
adc
mov
mov
rcr
mov
sbb
xchg
cmpsl
or
adc
push
loopne
sub
mov
pop
lret
or
arpl
loope
rclb
pop
cwtl
loopne
insl
xchg
out
int
jns
add
add
push
rorb
adcb
pop
inc
addr16
inc
xchg
cs
inc
sbb
loopne
stc
fldcw
pop
cwtl
outsb
push
jnp
fcoms
loopne
jns
out
cmp
adcb
lret
or
xchg
mov
imul
xor
xchg
ja
loop
leave
xor
cmp
aas
loopne
cs
pop
rcll
fisttpl
lods
in
loopne
xor
test
mov
cmpsb
dec
je
inc
jne
mov
cs
add
fisttps
jge
ret
dec
mov
push
pop
icebp
mov
sub
cmp
daa
and
shlb
aam
repz
add
fistpll
das
mov
jns
icebp
inc
aam
push
pop
push
xchg
into
js
mov
shlb
cmp
jmp
pop
push
xor
leave
mov
data16
mov
loopne
adc
mov
rcrl
popa
loopne,pn
jecxz
push
rolb
fiadds
adc
and
mov
inc
out
std
outsl
lahf
scas
loopne
sub
mov
gs
sub
int3
out
rorb
mov
cmpsb
sbb
jb
sbbb
std
inc
jecxz
mov
out
hlt
imul
push
lret
sbb
aaa
push
icebp
add
mulb
stos
jns
aas
xor
jecxz
out
in
jmp
adc
test
or
sti
mov
mov
push
mov
in
xchg
repnz
insb
sahf
aas
call
repz
push
in
or
ss
aam
add
mov
das
and
add
sti
js
mov
loop
mov
and
jp
stc
dec
shrb
mov
adc
and
xchg
loop
decl
mov
sbb
test
loop
stos
lcall
dec
popl
pusha
imul
add
nop
std
inc
lahf
sub
movq
adc
addr16
push
xchg
push
paddsw
loopne
push
pop
adc
jmp
cld
fcomi
arpl
inc
jg
fs
adc
mov
lcall
sarl
fisubrl
mov
adc
pop
and
pop
pushf
loopne
inc
or
sbb
nop
sti
loop
popa
add
inc
bnd
sbb
jbe
push
mov
mov
mov
or
inc
loope
iret
mov
imul
cmp
clc
inc
cmpsb
add
inc
js
adcb
mov
pop
loope
call
jle
mov
inc
out
shl
dec
dec
call
loopne
icebp
cmp
in
into
cmp
test
insb
repnz
mov
lret
add
ficoms
add
mov
sub
cmp
les
aam
dec
pusha
dec
xor
mov
aad
or
aas
push
adc
hlt
ds
dec
mov
rcll
mov
mov
les
fiadds
jno
inc
loopne
jae
outsl
inc
mov
fbstp
lret
rclb
push
outsl
addr16
inc
sub
pop
jg
fiaddl
cmc
dec
mov
aad
das
subb
or
mov
fwait
addr16
out
sarb
sarb
ds
loopne
scas
sbb
pop
loopne
imul
lds
dec
ficoms
mov
jb
in
mov
jbe
aad
push
xor
jbe
add
pop
mov
std
add
inc
int
push
lahf
hlt
mov
dec
xor
inc
std
mov
sub
dec
sar
and
jle
dec
in
aam
xchg
or
es
outsb
xor
or
bound
mov
cmc
adc
pop
push
sub
or
daa
f2xm1
cwtl
stos
push
push
xor
xor
mov
aam
jmp
ljmp
jb
loopne
addr16
in
dec
testl
lea
pop
clc
data16
adc
xor
adc
sub
mov
ljmp
dec
sbbb
mov
mov
add
pop
mov
adc
cmp
imul
call
push
fimuls
sti
xchg
pop
in
aam
push
push
inc
stos
sub
pop
dec
adc
xchg
aaa
pop
mov
mov
jecxz
clc
iret
mov
bound
mov
shl
sub
testl
sahf
pop
push
and
adc
jg
cmovno
pusha
cmp
jmp
stos
pop
fwait
push
ljmp
je
out
push
mov
imulb
mov
and
pop
mov
cmp
add
or
sarb
push
xor
xor
mov
mov
popf
sbb
enter
lods
cmc
pop
or
data16
lds
loopne
dec
pop
xor
lock
jle
filds
retw
out
mov
pusha
lret
jnp
mov
xchg
outsb
es
xor
filds
xor
sub
hlt
lock
sub
stc
jns
or
scas
push
stos
in
pop
test
push
mov
dec
imul
jbe
xchg
pop
in
inc
ffree
push
out
gs
ss
int3
mov
sbb
push
in
xor
stos
cmpsl
push
jge
push
lds
ljmp
clc
jecxz
in
movsl
insb
pusha
mov
imul
insb
insb
jmp
mov
mov
imul
cmp
jecxz
dec
or
addb
cmpsb
stos
jecxz
cmp
imul
out
cs
out
cmpsb
outsb
pop
sub
out
gs
fs
insb
adc
jecxz
outsb
push
mov
inc
adc
insb
and
sub
insb
in
cmc
dec
cmpsb
lret
ss
in
jecxz
in
in
imul
out
xchg
xchg
cs
xchg
insl
fsubr
cmpsb
insl
lods
aaa
lods
test
sub
int
push
out
arpl
stos
imul
push
cmpsb
lds
out
lods
addr16
sub
in
outsb
pop
bound
imul
outsb
cs
int
sub
fucompp
fisubs
cmpsb
insl
outsb
cmp
dec
add
out
fsubl
jecxz
imul
pusha
sub
push
sub
jmp
inc
popa
dec
loop
pusha
inc
test
loope
in
out
aam
pusha
push
in
mov
lods
out
out
fsubl
lods
insl
stos
movsb
imul
adc
ljmp
callw
or
in
daa
dec
outsb
dec
and
movsl
insl
inc
sub
outsb
mov
adc
into
push
insb
push
sbb
shr
out
loop
lret
imul
dec
dec
mov
data16
sbb
cmp
sbb
lods
sbb
es
das
cs
das
out
in
ljmp
jecxz
insl
outsb
stos
out
es
lods
es
aam
dec
in
pop
sub
outsb
dec
pop
jmp
sub
jecxz
insl
ljmp
dec
cmpsb
pop
scas
dec
out
and
push
cmpsb
es
out
dec
in
pop
in
das
stos
outsb
sub
bound
sub
sub
scas
sub
ljmpw
ljmp
mov
mov
jg
cmpl
decl
lahf
mov
sahf
insb
call
push
inc
test
test
shlb
cltd
xchg
push
sbb
jno
rcl
jmp
sbb
fucompp
or
pop
mov
notl
adc
inc
and
packssdw
cltd
sub
out
imul
and
cmpl
in
cld
ss
add
or
mov
outsb
jle
cld
bound
movsl
pop
arpl
pop
call
outsb
xchg
adc
fimuls
ret
cmp
scas
imul
mov
inc
lods
test
inc
or
inc
sub
or
xchg
fs
pop
dec
pop
mov
je
adcl
push
scas
lds
cmc
test
inc
outsl
lods
push
call
imul
sub
push
out
std
push
mov
imull
push
add
xor
jge
xor
testl
sbb
aam
daa
xchg
dec
mov
shl
je
repz
sbbl
aas
inc
or
arpl
mov
jno
out
out
mov
sub
je
mov
sar
stos
test
xorl
rolb
cmpsb
fsubrl
or
jae
dec
shrl
dec
xchg
jne
test
arpl
and
shlb
loopne
jle
xorb
jbe
scas
into
mov
pop
arpl
mov
push
push
popf
insl
es
xchg
out
setne
lcall
sti
iret
out
sub
aas
add
fldcw
adc
daa
cmp
cmp
jmp
add
pop
inc
in
imul
cmpsb
fsubrl
movaps
in
fistps
cmpsb
mov
hlt
shl
outsb
mov
sbb
pushf
outsb
xlat
push
outsb
shl
outsb
inc
push
fildll
or
push
out
outsb
jge
ljmp
inc
insw
aas
add
rclb
dec
insb
mov
cmpsb
out
cmp
dec
and
iret
bound
fsubrl
mov
and
sbb
outsb
adc
push
sbb
pop
insl
xchg
pop
sub
imul
push
imul
pop
sub
sub
sbb
push
sbb
jmp
loopne
pop
jmp
movsb
jmp
outsb
call
and
xchg
jp
cmp
call
sub
cmpsb
call
adc
cmp
fs
mov
into
stc
cmp
ljmp
jnp
out
iret
mov
and
fucom
dec
lods
push
mov
movsw
dec
cmpsl
push
es
mov
jmp
scas
dec
arpl
in
out
sub
and
in
pop
leave
int
jmp
mov
out
pop
daa
fisubrs
pop
and
sub
ljmp
out
inc
fsubl
test
mov
addr16
aad
cmpsl
dec
jecxz
dec
imul
frstor
pop
cs
out
stos
out
movsb
in
pop
sub
out
sub
ljmp
out
ds
jmp
movsb
pop
cmpsb
mov
in
es
popa
pop
outsl
fucom
pop
jmp
and
pop
mov
mov
loop
insl
arpl
insl
lret
out
sti
and
das
das
cld
lods
and
xchg
adc
fildll
inc
movsl
lahf
fists
push
pop
dec
jp
and
pop
mull
mov
jle
test
dec
mov
je
push
mov
out
std
loopne
dec
and
mov
push
xor
add
xrelease
popa
xor
rcrb
ja
lret
ret
imul
in
cltd
imul
dec
test
pusha
adc
shl
addr16
pushf
push
push
mov
scas
cmpsb
xchg
sub
pop
repnz
incb
loopne
and
jecxz
xchg
das
jmp
sbb
inc
loopne
daa
dec
dec
loopne
inc
mov
mov
cmc
data16
imul
mov
loopne
dec
inc
adc
add
xor
push
lret
out
and
add
pop
fistpll
shrl
idiv
jo
lods
adc
push
je
lods
xchg
scas
xor
jge
inc
jle
ja
mov
repz
mov
scas
aam
jmp
call
popa
out
das
xor
frstor
mov
sub
sub
sahf
xchg
movl
aam
std
movsl
xor
rcll
cmp
jecxz
ret
addr16
sar
jge
xlat
inc
mov
cwtl
mov
call
lret
pop
movsl
inc
inc
sub
push
ja
daa
loope
je
test
xchg
add
dec
bound
icebp
movsb
fcmovb
into
lock
outsl
call
loopne
jp
jae
arpl
pusha
push
fnstsw
adc
outsb
sbb
dec
loopne
fnstenv
inc
mov
fcmovnu
loope
jl
or
dec
mov
pop
push
xchg
pusha
xchg
pop
dec
mov
movsl
xchg
idivb
mov
rcr
inc
ficoml
sbb
loope
test
add
xchg
add
bound
and
push
jo
cmp
sub
insb
loope
or
cmp
jp
bound
mov
sarb
dec
imul
sub
mov
or
ss
sbb
mov
pop
das
mov
pop
jmp
das
cmp
call
test
add
pop
imul
xchg
jae
dec
inc
inc
lret
xor
mov
sbb
fisubrs
in
andl
imul
xor
pop
jle
cmp
mov
jg
incl
or
sub
mov
call
lret
push
push
stos
sbb
popf
bsf
cld
adcl
jle
aas
lret
jl
pop
push
loopne
int3
jae
add
adc
pop
dec
stos
xlat
in
xchg
shr
sbb
addr16
pop
icebp
mov
test
jnp
jns
insl
les
sbb
cmp
lods
aam
fldcw
inc
data16
fbld
rol
jae
fld
ds
sahf
jo
dec
xor
add
mov
push
inc
mov
push
push
mov
rclb
sub
mov
gs
add
sbb
cmpsb
cld
stos
loopne
test
leave
xor
inc
push
push
jno
xor
imul
adcl
xor
mov
push
fucomip
in
jb
adc
mov
mov
xchg
daa
aad
cs
adc
pop
jp
pushf
mov
fcoml
cld
jmp
stc
das
cmp
mov
mov
fstps
ja
pop
loopne
jns
inc
aas
das
ja
in
fisttps
inc
pusha
imul
stos
adc
dec
jp
cli
lods
mov
rorb
pop
lret
and
push
in
scas
gs
adc
and
xchg
ss
sub
xchg
mov
inc
and
dec
enter
imul
xchg
movsl
cmpsb
sbb
aaa
aad
addr16
mov
push
pop
sar
jbe
inc
fucomi
loopne
js
push
ficompl
sbb
jmp
movsl
ficoms
out
outsb
inc
aam
sahf
mov
dec
adc
mov
and
mov
cmp
push
lock
jnp
jb
jp
jno
loopne
xchg
inc
xchg
imul
jl
movsl
cmp
xchg
out
pushf
xor
cmp
test
adc
adc
inc
or
sbb
test
lret
jg
into
out
imul
ret
jne
jle
clc
sbb
pushf
out
sub
fists
pop
xchg
test
daa
out
in
std
loopne
enter
rorb
dec
das
push
and
popa
xor
lret
sarb
mov
push
daa
out
ret
roll
insl
adc
fistpl
je
ret
jbe
ret
pusha
jne
lret
push
dec
inc
loopne
jbe
aad
ss
or
sub
inc
push
xor
pop
push
rcrl
and
mov
pop
push
sbbb
icebp
shlb
out
scas
push
push
inc
loopne
and
es
test
dec
shll
mov
cmpsl
daa
stc
push
loopne
pop
cmp
cmpsl
insl
jmp
lcall
add
sahf
jmp
mov
adc
sbb
cmp
xor
shl
jb
fucomip
das
add
fildl
inc
fcmovnbe
imul
lcall
jg
pop
and
clc
sbb
outsb
cmpsl
rorl
xchg
xlat
gs
xchg
jge
daa
dec
or
push
lcall
mov
xchg
leave
popa
adc
sbb
xchg
adc
enter
daa
test
lret
push
mov
leave
bound
rep
and
fcmove
rolb
ds
rorl
mov
or
inc
sbb
pop
mov
push
jl
shrl
fcmovnb
push
es
inc
andb
mov
insb
pop
xor
adcl
stos
xchg
out
dec
jg
inc
lock
dec
sub
add
fldenv
orl
test
iret
sbb
sub
jmp
out
aad
pop
outsb
rclb
mov
ss
cmp
ficoms
addr16
jne
mov
xor
lds
sbb
cmc
loopne
cmpsl
jg
call
in
xchg
pushf
scas
filds
mov
adc
push
and
lods
jns
rol
leave
imul
incl
rorb
aaa
loopne
data16
adc
shlb
xchg
mov
push
inc
cltd
ret
cmp
adc
sub
sahf
test
test
adc
push
loop
jb
addr16
add
push
imul
cli
sub
lods
lods
ds
std
pop
incb
inc
lea
jo
cmpsb
test
add
sbb
dec
js
aaa
orb
jl
push
mov
add
sub
sub
add
sub
add
jae
fcomps
pusha
mov
aam
or
call
loopne
out
and
add
jns
fstl
xchg
sub
ja
ret
movsl
mov
ljmp
lods
andb
inc
aad
and
in
cmpsb
dec
lds
jle
push
ficomps
hlt
push
sbb
loopne
mov
or
mov
shrb
dec
insb
out
das
fildll
push
jo
or
or
arpl
nop
sub
push
lods
dec
fidivs
mov
inc
mov
adc
arpl
sbb
mov
into
call
mov
cltd
xchg
dec
jnp
popf
cmp
jle
cld
lods
sarb
and
aas
imul
jmp
repz
mov
fwait
loopne
test
ffreep
inc
inc
mov
inc
paddw
mov
inc
insl
pop
out
outsb
call
icebp
sbb
xor
test
xor
pushl
pop
sahf
xchg
out
pop
mov
or
mov
inc
arpl
es
adc
push
push
cmp
adc
xor
adc
cmp
sbb
stc
out
and
inc
loopne
jne
lods
push
add
sub
mov
rorb
movsl
fimull
jmp
cmp
imul
loopne,pt
mov
push
into
pop
push
out
inc
and
push
mov
dec
inc
mov
loopne
daa
sbb
dec
jmp
and
pop
fisttps
fisubrs
loopne
call
jb
pop
push
and
dec
fisttps
mov
pop
xchg
lds
icebp
adc
mov
jae
push
mov
popa
cmp
out
fcmove
add
xor
sbb
jp
or
test
or
in
adc
rcrl
fdivp
add
stos
pop
leave
sbb
sbb
cltd
mov
mov
sbbl
or
rcr
hlt
push
inc
mov
psubw
cs
call
sbb
insb
push
push
int3
push
lock
mov
rolb
fdivl
and
ss
push
fwait
xor
inc
or
pop
add
in
loopne
sbb
jmp
hlt
movsl
enter
daa
ljmp
push
mov
adc
in
push
in
fsubp
shlb
mov
inc
push
divb
lret
xchg
sbb
adc
lods
jle
jp
and
jns
xchg
rcrb
rcll
push
sub
pop
jle
add
cli
xchg
loope
sti
in
xor
addr16
inc
loopne
push
pop
enter
out
rcrb
enter
sti
inc
loope
mov
xchg
adc
xor
push
pop
mov
int3
adc
xchg
les
mov
jp
and
inc
rcrb
or
mov
sub
fcomps
inc
sbb
jns
je
cld
mov
clc
fists
add
sub
sti
pop
push
jp
jg
mov
mov
loopne
sub
xchg
movsl
sbb
cmp
lods
or
inc
and
mov
outsl
call
imulb
and
mov
fnstsw
subb
push
pop
insb
ljmp
fnsave
test
lea
jo
mov
shr
out
sbb
xchg
cwtl
leave
xchg
fstps
sub
std
int3
cs
dec
ljmp
jp
mov
shr
test
gs
add
es
sbb
in
push
dec
sbb
push
ds
ss
lea
add
int
out
daa
ja
call
mov
es
call
imul
popa
cmp
push
push
sahf
xchg
shlb
push
scas
inc
das
ja
aad
fucomi
fildll
shrb
ret
or
jg
push
in
pop
add
loope
or
out
mov
push
add
lods
movsl
pop
jmp
pop
fisubs
jbe
xorb
rorb
test
sbb
add
sbb
xor
loopne
mull
or
rcl
or
lahf
subb
adc
push
out
loopne
mov
mov
filds
sub
push
je
das
xor
cmpsb
fs
int
rclb
xor
aam
xchg
pop
cmpsb
dec
sbb
pop
xchg
in
fcomi
sub
mov
push
scas
add
dec
js
and
ja
fistl
inc
push
push
cli
sub
cmc
sar
pop
push
out
inc
inc
aaa
in
sbb
pushf
mov
test
xor
mov
push
sub
cmp
lret
outsb
mov
stos
ror
lcall
dec
inc
in
inc
push
movsb
pusha
pop
in
ficompl
in
mov
mov
rclb
lahf
cld
adc
inc
into
jns
cmc
cli
add
inc
in
test
xor
outsl
call
mov
add
scas
daa
jp
push
rorb
fcomps
insl
cmp
cmp
shlb
fadd
mov
insb
call
jae
pop
outsb
shlb
pop
inc
xchg
push
jmp
jmp
push
dec
sbb
cmp
cltd
or
inc
sub
pop
daa
mov
filds
push
lock
add
cmc
aaa
jmp
sub
and
sbb
out
in
sub
imul
fcoms
adc
cmp
and
mov
dec
dec
inc
fistps
fistpll
scas
mov
cmp
pop
imul
ljmp
aam
test
mov
shrb
sub
enter
or
push
mov
sub
pop
imul
in
and
dec
nop
lcall
stos
shr
ljmp
out
inc
bound
dec
mov
mov
out
loop
fs
or
popa
ficomps
xor
xorl
pop
ds
bound
push
mov
out
mov
and
mov
lea
mov
xchg
push
call
cmp
imul
pop
call
movsl
scas
adc
loopne
jecxz
cmp
cmp
push
pop
std
mov
dec
dec
aaa
mov
cli
repnz
adc
jle
add
sub
xor
loop
sbbb
push
fsubr
int3
xorb
sbb
push
sti
ficompl
sub
lahf
aaa
cmc
insb
mov
and
pop
faddl
aas
pushf
call
inc
mov
jo
cwtl
mov
or
je
pop
pop
xchg
roll
push
cmpsl
popa
imul
adc
rcrb
dec
je
push
sub
popf
adc
and
push
ror
mov
aam
sbb
mov
cwtl
adc
out
pop
les
or
orb
test
daa
bound
test
int3
inc
scas
iret
test
call
add
cld
adc
ret
nop
aas
js
push
aas
bound
movsl
std
sub
shlb
es
inc
call
aam
ja
jp
les
adc
loopne
push
jl
rcrb
adc
mov
out
dec
dec
or
sbb
popf
push
loopne
insb
int
xchg
lcall
bnd
mov
xchg
mov
loop
lods
mov
out
lods
sbb
scas
arpl
call
lods
add
imul
cld
in
aam
or
in
jne
cmp
and
push
das
cmp
mov
adc
pop
insb
out
mov
lret
adc
rorl
inc
insb
pop
mov
in
fmull
jl
fbld
mov
subl
or
mov
jle
mov
call
mov
dec
push
cmc
sub
loopne
lds
je
mov
repnz
dec
jbe
int3
xchg
shr
sbb
daa
loop
pop
adc
cmpsb
imul
jge
je
jae
mov
pop
cmpsb
loope
andl
testb
out
mov
movsb
or
adc
addr16
loopne
fcmovnbe
int3
aad
fimuls
pop
or
call
lret
xchg
adc
xor
jp
sbb
jle
stc
xlat
psubsw
mov
pop
pop
loopne
push
adc
cmpsl
pop
push
lret
mov
call
test
inc
xchg
push
outsb
jb
mov
out
les
and
in
mov
jne
sbb
inc
jmp
lret
push
mulb
gs
push
out
xchg
mov
imull
out
push
stc
rcrb
xchg
jmp
jne
or
sar
dec
ja
imul
rcr
out
or
jmp
nop
pop
movsb
bound
movsl
mov
xrelease
dec
jo
fsubs
xchg
push
dec
jmp
mov
mov
iret
mov
test
lds
call
in
dec
jp
jge
xor
inc
int3
xchg
scas
stos
and
fbld
cmp
fnstsw
pop
xchg
lods
pop
adc
xor
push
pushf
stos
dec
ss
mov
mov
loopne
outsb
xor
jb
mov
jns
xchg
xor
outsb
jns
mov
cmpsl
mov
add
arpl
sub
lock
les
xchg
fs
stos
mov
test
lods
push
mov
mov
icebp
pop
das
cvttps2pi
jle
outsb
mov
push
pop
mov
xchg
mov
mov
popa
outsl
in
xor
shr
xchg
scas
shl
daa
andb
jg
sbbb
outsb
cld
push
cld
call
xchg
lret
pop
call
adc
andl
cmp
addr16
stos
xor
mov
loopne
out
dec
loopne
pop
push
enter
mov
out
rolb
mov
out
fnstsw
mov
cmp
push
and
lock
es
inc
cmpsl
out
sbb
cmc
in
bound
xchg
add
test
mov
pusha
into
in
cld
jno
fucomp
call
mov
stos
push
jbe
jmp
mov
xchg
imul
icebp
xor
jl
inc
sub
jb
pushf
ret
popf
fs
aam
cld
outsb
lahf
enterw
stc
repz
inc
bound
arpl
sbb
movsb
and
and
movsb
cmpl
sub
mov
loope
push
scas
sub
fstpt
call
stos
adc
jmp
and
xchg
andl
aad
pop
mov
dec
jl
dec
imul
dec
add
pop
sbb
cmpl
or
mov
test
leave
insb
sbb
loopne
es
arpl
das
mov
and
ljmp
jmp
maxps
call
mov
pop
inc
pop
out
stc
loopne
or
arpl
mov
jecxz
stos
mov
pop
pop
arpl
popa
jmp
ds
lahf
cmp
pusha
loopne
cs
xchg
in
xchg
in
inc
ss
loopne
and
xchg
add
out
adc
out
fimuls
outsb
xchg
mov
lret
ljmp
mov
cmp
xorb
daa
scas
cli
stos
out
jp
nop
stos
imul
dec
ljmp
data16
loope
insw
addr16
pop
out
jmp
lahf
push
pop
iret
cmp
rcr
out
mov
dec
jmp
cmpsb
in
ret
inc
outsb
clc
dec
arpl
sub
out
insl
out
fbld
and
out
outsb
cs
popa
insb
out
pop
jae
movsb
inc
out
ljmp
pop
stos
or
push
inc
out
movsb
jno
mov
pusha
cmp
jle
mov
neg
mov
loop
insb
dec
dec
sub
dec
cs
outsb
xor
adc
fbstp
sub
scas
mov
sub
out
and
pop
aad
out
loope
imul
pop
adcb
sub
sbb
sbb
pusha
or
pop
out
lahf
data16
loop
push
dec
jmp
in
ljmp
dec
mov
loopne
adc
arpl
das
aas
mov
pop
cld
test
loop
and
cmpsb
mov
or
sub
insl
addr16
out
in
fisubrl
pop
in
scas
data16
dec
push
movsb
call
dec
out
int
out
cmpsw
movsb
stos
insl
in
lods
and
data16
outsl
mov
push
inc
data16
inc
mov
cmp
outsl
or
popa
cmpsb
data16
dec
and
cmpsb
es
scas
dec
cmpsb
pop
jb
data16
inc
outsb
lods
in
es
sbb
out
in
and
scas
inc
in
and
outsl
fsubrl
in
pop
hlt
mov
data16
scas
sbb
cmp
mov
stos
and
daa
data16
pop
mov
and
sub
push
cmpsb
in
imul
cmp
inc
data16
mov
cmp
in
imul
mov
das
inc
sub
loopne
repz
sub
mov
sbb
aam
jl
outsl
pop
mov
lret
movsb
and
fwait
ja
mov
adc
xchg
scas
int3
lods
call
xchg
mov
test
int
mov
ud2
push
call
add
push
push
scas
sub
pop
push
inc
adc
loope
pop
test
outsl
mov
mov
pusha
rorl
stc
movsl
adc
fistpll
daa
adc
lock
xchg
adc
mov
mov
int
out
out
mov
popf
lea
pop
shlb
add
shlb
xor
test
outsb
out
loopne
test
jg
mov
cmpsl
adc
cmp
cmp
aad
ljmp
loop
loop
bound
sub
ret
into
setae
js
negb
mov
sbb
add
add
push
jb
fsubr
sub
add
stos
jno
sbb
call
jecxz
push
js
imul
mov
repnz
shl
lret
loop
insb
adc
popl
inc
pop
sbb
dec
adc
mov
mov
inc
loopne
lret
loope
or
xor
aad
jl
aam
lret
push
leave
xchg
jl
push
inc
sub
push
cmpsb
in
cs
rcrb
pop
lods
rcll
scas
lea
in
js
aam
sbb
add
imul
push
xchg
mov
dec
push
decl
popa
lods
xchg
das
inc
add
imul
sbb
dec
sbb
sbb
ja
cs
inc
js
jno
les
add
dec
dec
push
mov
daa
push
shlb
dec
inc
cmp
push
and
sbb
mov
enter
sub
insb
pop
daa
inc
das
xchg
out
das
mov
mov
test
pop
movsl
sub
shlb
call
test
int
hlt
xchg
mov
cmp
and
jns
inc
insl
out
pop
movsb
movlps
inc
pop
and
dec
test
out
out
test
js
fldl
rorb
in
in
jle
daa
push
jmp
cli
or
popf
insl
and
pushfw
sub
ret
in
popa
xlat
stc
inc
clc
fisubs
pop
push
sahf
mov
es
mov
dec
and
jp
rorb
movsb
jae
inc
jne
adc
adc
add
dec
cmc
outsb
or
sahf
call
test
dec
mov
imul
addr16
cmpb
xorl
subb
pop
stos
jnp
mov
inc
in
in
xor
mov
sarl
std
dec
or
aas
outsl
lods
sbb
loopne
mov
call
ret
sti
ds
sbb
out
cmpb
add
xchg
push
mov
ror
cmp
add
mov
icebp
or
fwait
pushf
mov
mov
stos
es
and
push
loopne
lahf
in
pushf
sbb
popa
jns
mov
sti
out
fstps
lret
and
adc
sbb
arpl
pop
loopne
cmc
mov
sbb
imulb
pop
das
pop
loopne
mov
inc
pop
imul
dec
inc
loopne
cmp
xchg
in
inc
mov
mov
sub
je
pop
out
negb
idiv
pop
lcall
insl
jp
nop
mov
inc
and
push
data16
popa
push
inc
push
hlt
rolb
sbb
push
sbb
stos
mov
daa
fdivl
divl
mov
xlat
loop
das
pop
jmp
filds
and
pop
shrl
loope
cmp
sbb
jo
xchg
fidivrl
dec
dec
fdivl
add
jmp
pushw
or
pushf
enter
dec
cmpsb
aaa
sub
adc
jecxz
fldt
ficoml
and
cwtl
jmp
mov
pop
inc
lret
or
aad
push
mov
lret
and
repz
lcall
or
pop
aam
enter
push
out
arpl
orl
lahf
or
nop
mov
test
loopne
stos
xor
add
shlb
or
imul
xchg
in
lahf
je
adc
outsb
pop
call
and
and
test
scas
out
es
dec
dec
pusha
pop
clc
aas
jge
test
out
in
and
pop
pushf
or
sub
insl
inc
aam
ret
fstps
dec
mov
xor
outsb
imul
bound
daa
out
mov
adc
cmc
dec
adc
outsl
mov
call
fwait
sub
jno
mov
and
mov
sub
arpl
movsb
into
movsb
in
inc
mov
fmuls
mov
out
mov
and
movsl
add
adc
pushf
stc
fidivrl
mov
and
push
push
imul
lods
inc
js
cltd
shrb
mov
outsb
lods
adc
aam
push
sub
dec
mov
mov
inc
lcall
or
sbb
pusha
and
addr16
inc
out
mov
inc
push
addr16
insb
out
lods
mov
ss
xor
fmulp
rorb
out
adc
inc
stos
jae
fidivs
push
stos
jmp
inc
imul
mov
inc
and
fchs
daa
loop
fdivs
insl
aad
inc
pushf
adc
add
fcoml
sti
xor
jo
xchg
outsb
lods
mov
scas
loop
jb
mov
pop
jno
mov
sahf
loop
and
loopne
xor
ss
out
bound
call
addl
lock
popa
and
xor
cmpsb
nop
out
outsl
imul
xor
loopne
mov
or
mov
push
cltd
sbb
cltd
fmull
mov
outsl
xchg
push
xor
adc
cmp
dec
mov
movsb
aaa
push
insl
or
inc
popa
xor
xchg
cs
fidivs
enter
sti
fcmovnbe
jbe
es
aaa
call
jle
loop,pn
shlb
sbb
push
xchg
dec
cmc
sar
fidivrs
mov
cmpsb
sbb
mov
mov
jns
insb
rcrb
pop
mov
jns
cld
xor
aas
das
or
push
dec
ret
leave
repnz
imul
call
push
mov
mov
push
cmp
cmc
ss
xchg
or
mov
xchg
incl
cmc
mov
insb
xchg
in
int
mov
and
sbb
insl
and
push
xchg
cmpsl
mov
push
push
sbb
pop
nop
pop
inc
cmp
dec
ret
inc
and
lods
loopne
mov
sub
fstps
andl
fnstenv
aas
adc
jg
mov
dec
fwait
jg
dec
push
popf
mov
cmc
pop
push
sar
lret
iret
xchg
jg
ja
push
dec
cmc
in
cmpsl
faddl
inc
adc
adc
pop
pop
addr16
call
lock
or
pusha
mov
pop
dec
cmp
and
xor
mov
arpl
negl
push
xlat
cmp
xchg
iret
mov
dec
imul
das
mov
int
into
les
sbb
jmp
adc
das
mulb
cmpsl
out
andb
rep
mov
dec
cmp
frstor
in
rol
push
mov
push
sbb
insb
ret
push
inc
mov
test
add
bound
sub
test
mov
cld
mov
mov
loope
nop
pusha
pop
arpl
sbb
or
mov
fcmovnbe
jge
xchg
jnp
loope
insb
icebp
lahf
jne
inc
stc
bound
out
subb
push
lock
jno
cmp
xor
fs
out
sbb
pop
push
jmp
shrb
loopne
insl
mov
lret
daa
adc
mov
jle
adc
jbe
mov
stc
addl
adc
dec
cwtl
jns
test
adcb
push
mov
fldcw
shr
movsl
rorb
mov
iret
xchg
xchg
sub
cwtl
inc
loopne
gs
jecxz
xchg
xor
jmp
fildl
or
cmp
sbb
inc
sbb
xchg
lea
sbb
jb
xorb
fwait
loope
mov
mov
mov
adc
call
pop
jbe
sti
les
xor
sbb
in
leave
loop
push
jae
test
andl
dec
sub
ljmp
sub
mov
loopne
in
push
mov
cmp
movsb
popf
stc
pop
or
mov
and
fldenv
in
cmpsl
mov
ret
inc
push
inc
mov
dec
outsl
adc
jmp
fsubrl
sti
ljmp
scas
mov
scas
push
dec
adc
add
arpl
in
or
mov
addb
mov
push
mov
mov
insl
xchg
inc
lea
daa
test
jp
dec
mov
push
loop
movsl
cld
adc
fdivl
cmp
in
xchg
cmp
outsb
xor
jnp
xchg
popa
out
fdivl
jg
ja
lret
mov
insl
mov
push
aad
pop
inc
rcll
xor
jns
mov
xor
dec
mov
add
cli
call
push
loope
in
test
add
jno
cmc
in
mov
jp
hlt
pop
lcall
jb
rcrb
cmp
gs
je
sbb
inc
movsl
jno
iret
lock
and
cltd
in
jp
scas
adc
lods
xchg
dec
call
and
dec
jbe
testl
into
push
pop
popf
inc
loopne
xor
mov
dec
fdivrl
cmpsl
cmc
das
out
popl
jmp
push
std
mov
xchg
fwait
xchg
shll
pushf
sbb
push
aas
psllq
notl
incl
insb
mulb
pop
sub
cli
sti
jne
js
insl
add
push
jno
sub
mov
loope
insl
xlat
adc
out
loop
in
dec
bound
adc
push
sbb
enter
imul
mov
cltd
imul
sub
adc
jne
fs
fildll
in
pop
and
jae
mov
out
dec
pusha
in
cmp
in
sub
movsl
inc
cld
fucomp
jecxz
test
sbb
scas
fs
outsl
cmp
dec
and
inc
iret
sub
punpckhdq
insb
daa
jne
mov
ret
push
jbe
dec
stos
dec
sub
adc
cwtl
outsb
in
scas
pop
scas
clc
mov
dec
jnp
xor
sub
sub
movsb
and
es
insb
stos
outsb
push
call
movsl
into
in
xor
rcrb
in
sub
out
cmp
and
push
push
lods
sbb
push
addr16
dec
xchg
aaa
clc
cmpsl
adc
or
out
lock
aam
push
imul
fisttps
dec
test
outsb
or
pop
das
fldcw
fsubp
push
push
sub
fisubrs
pushaw
lds
scas
or
out
pop
arpl
bound
or
sbb
sub
out
cmpsb
pushf
sub
pusha
or
out
pushf
sub
fisubrs
pop
loope
mov
das
inc
and
popa
out
xchg
in
sub
out
push
out
sub
sub
jmp
stos
push
out
sub
or
out
sub
loop
jge
movsb
sub
and
jl
fisubl
pusha
or
pop
das
movl
pop
pop
loopne
test
aas
imul
push
repz
and
xchg
pop
jns
xchg
jecxz
push
lods
shrl
call
jne
rcrb
pop
inc
das
push
daa
or
and
mov
arpl
add
sbb
stc
xchg
jl
popf
out
push
pop
call
gs
sub
mov
cmp
and
fwait
jp
jmp
out
and
out
pop
daa
jp
mov
loopne
inc
rorb
mov
xchg
add
sub
loopne
pop
cmc
cmpsl
ss
or
mov
push
cmc
push
xchg
fbstp
arpl
add
iret
add
or
inc
dec
rcrb
scas
add
jo
mov
adc
xchg
rclb
orb
addb
scas
xchg
fwait
ds
push
mov
cmp
jno
add
cmp
push
sub
call
cltd
push
lea
mov
and
das
inc
ljmp
pop
ja
test
xor
call
iret
out
push
pop
jle
push
out
lahf
sbb
xchg
mov
push
movsb
mov
mov
sub
jae
outsl
sbb
stos
shlb
cmp
loopne
outsb
rcrb
pusha
je
out
sbb
rcll
adc
sub
andl
call
sbb
push
pop
mov
outsl
jno
insb
dec
lcall
cmp
pop
xchg
pop
dec
and
pop
dec
push
adc
sub
jae
daa
sub
sarl
mov
sub
adc
sahf
mov
sti
cmp
xchg
mov
mov
lods
daa
nop
push
jno
adc
and
daa
cmpsl
sub
sbb
daa
mov
sub
push
stc
cmpsb
repz
push
mul
mov
jp
xor
add
or
gs
shrb
xchg
or
xchg
shrl
shl
xor
pop
sar
je
shrl
jmp
imul
ret
push
orb
stc
stos
pop
inc
mov
in
inc
mov
jmp
pop
decl
arpl
scas
in
cli
in
cwtl
int3
sub
lods
add
and
inc
frstor
outsl
and
xchg
push
out
push
out
les
ljmp
sbb
shlb
in
mov
mov
lret
and
adc
mov
jge
pop
xchg
pop
test
lds
ljmp
test
outsl
insl
add
call
and
push
ficomps
push
daa
stc
loopne
lret
dec
out
mov
push
sbb
loopne
mov
xorb
rorb
dec
xchg
aam
cmp
add
jno
jg
dec
pop
jne
ja
xor
dec
push
dec
or
movsl
orl
cs
leave
sub
out
test
rcl
push
jecxz
mov
adc
insb
jecxz
push
andl
fmuls
rcrb
cmp
je
aaa
mov
loopne
or
or
xchg
add
and
and
mov
scas
jge
push
dec
jo
bound
call
fstps
pushf
icebp
mov
enter
pop
rcrb
xor
leave
movsb
dec
sub
dec
dec
sbb
je
jl
lds
imull
sub
jne
push
push
imul
jns
mov
data16
jle
out
pop
xor
mov
xchg
inc
xchg
push
pushf
pop
and
scas
cwtl
jb
addr16
loopne,pt
insw
lods
ret
adc
inc
mov
addr16
add
push
pop
push
arpl
int
mov
jecxz
divb
ret
sub
icebp
cmp
outsl
mov
inc
push
inc
lret
sub
loop
jae
and
mov
iret
sbb
popa
sbb
mov
pop
incl
mov
rorb
clc
dec
lret
out
fiaddl
cmp
pushf
or
xchg
clc
jl
lcall
or
and
sub
sbb
and
cmpsl
inc
mov
in
fstp
mov
mov
outsl
fcoms
pop
pop
sahf
push
xchg
sahf
push
xchg
cmpsl
sub
or
lods
jg
dec
insl
aad
shrb
push
orb
movsl
push
cld
jge
and
clc
jne
and
cmp
out
sub
sahf
sub
jno
or
into
sbb
fisubrl
xor
mov
enter
call
push
mov
sub
jg
mov
in
ljmp
jp
mov
out
out
insb
out
movzwl
xor
mov
outsb
jge
cmpsl
ljmp
call
push
insl
bound
sub
inc
and
pushaw
rcrb
mov
insb
mov
add
push
fstpt
fidivrl
sbb
fistpl
loopne
mov
add
mov
mov
push
push
and
sub
jl
jmp
xor
inc
mov
adc
and
daa
aaa
call
push
mov
lcall
cld
pop
adcl
xchg
dec
sub
pop
xor
ret
xchg
movsb
and
push
outsl
arpl
movsl
outsl
insb
add
and
jle
pop
jp
and
dec
leave
les
sbb
sub
inc
daa
icebp
inc
cmpsl
dec
roll
push
dec
outsb
jle
jo
sub
sbb
sbb
adc
mov
in
jne
add
sub
cmp
rcl
out
addb
in
xchg
adc
hlt
ds
jmp
jne
mov
add
out
push
fisttps
sbb
adc
dec
lock
pop
loope
add
or
pop
popa
rcrb
iret
fiaddl
insb
rolb
push
or
mov
push
dec
lahf
aas
insl
jle
cmp
jns
rclb
and
jae
lock
mov
dec
mov
icebp
mov
adc
and
dec
fnsave
cmc
mov
scas
dec
aaa
ret
mov
imul
add
shl
aaa
mov
adc
mov
movsb
call
scas
dec
out
lods
call
lock
adc
jmp
call
adc
test
or
sbb
das
and
rcll
mov
lods
fsincos
sub
or
scas
scas
sub
mov
xchg
mov
push
mov
pop
in
iret
into
push
xchg
hlt
in
mov
mov
sarb
pop
add
jp
cmp
dec
dec
inc
testb
jg
stos
mov
dec
sub
je
movsl
dec
inc
sub
cmp
xor
push
inc
or
push
loop
out
push
sbb
loope
imul
add
cld
pop
or
ds
adc
mov
enter
cld
sbb
lret
mov
jnp
mov
inc
nop
mov
orb
cld
repz
pushf
dec
fcmove
out
idiv
clc
loopne
aam
mov
sbb
dec
push
add
scas
mov
inc
inc
dec
xchg
jmp
ljmp
jp
push
repnz
jg
jmp
repz
sub
fxch
pop
inc
aam
ds
push
shl
stc
movsb
push
and
xchg
outsb
out
pop
push
in
arpl
and
call
or
daa
lods
inc
insb
pusha
adc
jae
aas
mov
fbstp
int3
xchg
mov
adc
insl
inc
xor
xchg
lods
mov
in
fisubs
loopne
cmpb
fidivrs
inc
pop
fucomi
nop
lahf
pop
pop
out
push
insl
sub
stos
push
shl
mov
fimuls
sbb
ja
call
mov
lods
sub
mov
xor
mov
mov
sbb
mov
fisubrl
loop
jns
push
or
cmpsl
jbe
lods
fldenv
rorb
imul
imul
rcr
out
addr16
xchg
pop
push
jmp
orl
insl
lahf
mov
in
testl
cmc
adc
inc
xor
xlat
pop
adc
js
test
push
out
ficoml
xor
and
jne
mov
shl
mov
and
rol
ja
out
stc
mov
in
shrb
lods
push
mov
xchg
lds
mov
jo
mov
lahf
push
scas
push
add
cmp
out
sbb
cmpl
sbbl
imul
fimuls
mov
icebp
fimuls
mov
stos
cltd
xchg
adc
imul
inc
movsb
gs
add
mov
dec
mov
dec
sub
jmp
add
mov
pop
je
test
adc
or
rorl
das
mov
dec
imul
and
das
dec
and
sub
pop
or
loopne
arpl
sar
inc
inc
mov
imul
mov
scas
imul
mov
stos
rorb
dec
aas
sbb
push
ljmp
inc
rolb
sbb
and
inc
ljmp
xor
sub
in
xor
xor
bnd
adc
orl
shr
dec
adc
mov
sbb
bound
jl
push
loop
mov
or
loope
or
jo
rcl
fistps
inc
lahf
frstor
rcpps
push
add
imul
js
cmp
inc
add
imulb
and
out
fnsave
paddusw
imul
mov
xchg
cmpsl
test
cmpb
jle
pusha
xchg
push
push
mov
js
xor
loop
outsb
and
shrb
cltd
fwait
nop
jo
test
cmp
into
xor
mov
jno
jp
mov
lods
out
pop
in
shrb
aaa
cwtl
insb
arpl
jne
pop
lret
mov
out
inc
push
dec
push
and
enter
loopne
test
mov
pop
sbb
add
fucomip
jns
jo
mov
adc
mov
mov
mov
adc
std
insl
js
mov
aam
stc
fstps
mov
ljmp
outsb
sub
xor
mov
or
negl
fimuls
ja
mov
xchg
addr16
inc
loopne
ficoml
outsb
mov
push
pop
jb
pop
jae
andl
rol
or
cmpsb
push
pusha
sub
test
out
shl
mov
fdivrl
popa
add
mov
cld
dec
pop
xchg
arpl
rcl
mov
mov
daa
leave
lahf
aam
fidivs
cmp
call
pop
adc
ret
les
adc
push
jae
lcall
jp
mov
cs
add
int3
mov
arpl
xchg
xchg
int
shlb
jmp
xor
xlat
pop
cwtl
mov
ja
fstpt
sbb
stos
pop
aas
imul
shlb
je
jmp
cli
mov
clc
push
sti
sbb
leave
lret
add
fisttpl
mov
adc
repz
cld
add
dec
popf
sbb
adc
clc
and
rolb
sub
mov
lret
js
out
loopne
std
lahf
mov
mov
adc
insb
and
mov
adc
or
mov
ljmp
js
repnz
xchg
je
push
out
addr16
pop
jge
call
stos
lcall
mov
jo
jns
inc
iret
add
rol
lds
sub
dec
daa
shl
stos
sub
mov
jbe
add
cli
sti
adc
adc
stc
lcall
nop
in
mov
in
sub
jo
outsl
cmpsb
scas
push
xchg
loopne
mov
jg
push
pop
mov
lods
popa
loopne
jmp
add
pop
adc
push
out
mov
mov
add
scas
ret
inc
jl
ljmp
mov
xchg
and
inc
pop
sub
add
mov
dec
lods
bound
test
mov
mov
sub
popa
das
ret
inc
pop
testl
gs
jno,pt
test
xchg
push
and
js
pop
repnz
sub
xor
int3
pop
push
iret
lret
test
xchg
or
ljmp
mov
stos
fisubs
lods
pushf
xor
outsb
sub
subl
and
mov
mov
pop
mov
push
mov
loop
lds
insb
mov
push
movsb
mov
loope
xlat
das
cmp
ficoms
adc
mov
inc
push
push
loop,pt
andl
fistps
test
in
or
imul
flds
fsubp
dec
jns
mov
adc
daa
rcrb
call
sarb
movsb
inc
mov
xor
xchg
daa
push
jg
dec
das
sbb
dec
mov
and
jmp
mov
fdivr
test
out
andl
into
icebp
add
push
adc
fs
movsl
mov
rorb
xchg
dec
movsb
insl
test
mov
popf
sub
add
pop
arpl
lods
lret
test
daa
add
andb
sarb
inc
cmpsb
push
mov
ss
xor
jp
outsl
dec
cmp
and
cmp
stos
rolb
adcl
lods
repz
inc
mov
jne
push
mov
ret
insb
lds
mov
jp
cmp
je
out
aam
popf
xchg
das
inc
mov
lahf
pop
mov
imul
pusha
das
movb
adc
mov
fs
or
out
xor
push
cmpps
xchg
jmp
imul
subb
xor
ret
dec
or
pop
inc
sbb
add
das
aad
addr16
in
cs
stos
testb
jle
inc
and
iret
stc
test
dec
push
xchg
sbb
cmp
hlt
sub
mov
pop
push
outsb
aad
and
je
xchg
repz
popa
lods
mov
push
xor
pop
inc
pop
outsb
dec
fcmove
subl
jle
leave
in
movsl
movsl
jg
xlat
imul
dec
push
push
comiss
dec
hlt
aaa
and
cld
scas
jae
jle
push
iret
ja
add
into
pop
and
add
jo
and
sbb
psubd
or
stc
cmpsb
pop
cmp
gs
cmp
and
test
pop
mov
sub
adc
mov
lret
cltd
imul
loopne
push
loopne
and
mov
outsl
inc
mov
call
mov
das
mov
mov
aas
loope
and
mov
dec
cmp
stos
xchg
iret
arpl
inc
push
bound
lods
add
arpl
dec
inc
das
push
adc
adc
pop
repnz
xchg
xchg
addr16
dec
test
cmc
imul
imul
rcr
add
loop
nop
data16
ret
sbb
icebp
cmp
mov
dec
jge
lds
cmc
and
mov
inc
mov
stos
xor
outsb
stc
add
mov
movsb
cld
adc
pushf
push
jnp
pop
fidivs
sahf
shr
sub
call
imul
rorb
mov
sub
and
rolb
daa
loopne
mov
sti
add
in
jge
call
in
push
mov
movl
jg
jl
mov
push
xchg
test
fbstp
dec
dec
insb
or
loopne
pop
insl
push
xchg
test
mov
adc
es
mov
adc
push
std
jl
pop
mov
mov
dec
add
imul
or
pop
in
jnp
pop
mov
cmp
push
fcoms
out
jecxz
icebp
mov
xchg
xchg
loope
fidivl
add
inc
inc
adc
aas
lods
xchg
or
insl
movsl
sbb
outsb
int
rcrb
cltd
xor
cli
jle
scas
push
xchg
mov
lret
mov
add
xlat
gs
call
cmp
dec
pop
loop
in
pop
call
inc
mov
mov
je
dec
sbb
pop
leave
loopne
aas
mov
ds
sarl
push
call
sub
ja
adc
add
mov
adc
jne
and
pushf
inc
imul
cmpsl
mov
call
adc
shll
scas
push
dec
sub
sbb
push
jnp
lea
jl
sahf
jno
xor
push
shll
push
movsl
dec
sahf
ja
rorl
std
cmp
imul
addr16
call
cmp
fbld
fwait
xchg
add
fstps
out
pop
std
or
jno
out
shrb
dec
rcl
jmp
and
inc
fcoms
pop
add
je
cmp
lock
movsl
loopne
std
imulb
dec
push
jmp
adc
or
inc
repnz
mov
sbb
jmp
bound
mov
xchg
addr16
repz
imul
push
push
mov
clc
ja
sub
es
push
xchg
cmp
arpl
imul
and
mov
in
imulb
scas
fidivrl
in
mov
xchg
in
or
inc
mov
mov
scas
sbb
fmul
sbb
push
lds
adc
out
jnp
cmp
icebp
mov
mulb
mov
xchg
or
out
clc
out
sub
add
mov
sub
or
and
test
cmp
orb
fbstp
cmc
jecxz
push
out
adc
mov
je
add
pop
add
jp
shll
daa
add
ds
movsb
insb
lods
inc
sub
mov
jnp
dec
xchg
call
aad
mov
shrb
test
ljmp
mov
xor
xchg
mov
jnp
jle
daa
add
rorb
inc
dec
stos
push
inc
push
scas
sub
sti
mov
inc
inc
fsubr
push
mov
mov
inc
imull
imul
add
test
loopne
loop
imul
mov
jmp
push
adc
cltd
jl
adc
sbb
in
dec
mov
jle
rcrl
pop
push
fdivr
push
or
sbb
xor
imulb
lret
pop
jge
cmc
dec
add
jle
je
xor
mov
lahf
sbb
loopne
ja
mov
and
xor
testl
pop
cwtl
jmp
out
sbb
pushf
out
sub
cwtl
call
addr16
lahf
cwtl
shrb
jp
stc
aam
inc
lahf
out
test
icebp
mov
shlb
mov
push
imul
in
scas
inc
lods
cmpsb
or
jb
insl
cmp
mov
fsubrs
inc
cmpsb
std
xor
and
adc
fimuls
dec
pop
jno
loope
shrb
jae
cld
dec
cs
sbb
iret
pop
ret
push
cmp
rsqrtps
popf
cmpsl
xorl
and
push
mov
enter
shlb
loop
shrb
cmp
mov
xchg
leave
popa
stc
xchg
cmp
shlb
mov
mov
sub
pop
into
rcl
mov
std
loopne
mov
pushw
inc
sbb
inc
pop
lret
test
or
out
or
ja
mov
imul
jp
arpl
cmpsb
add
inc
popf
in
sbb
popf
sbb
add
pusha
fimuls
lods
shl
jg
ja
std
loopne
stos
inc
xor
push
cltd
push
mov
call
loop
rcrb
stos
adc
andb
push
cmpsb
daa
incl
rolb
pop
lret
mov
testl
xor
movsb
aaa
or
loope
fistps
stos
sbb
add
xchg
push
add
xor
sbb
out
push
cmpsb
jecxz
mov
dec
inc
sub
push
push
iret
addr16
cltd
adc
addl
xchg
push
fcmovnb
std
fisttps
int
imul
mov
mulb
popf
pop
dec
lcall
out
jns
iret
repz
xor
scas
or
ret
xchg
cwtl
in
push
jecxz
out
pop
loopne
jmp
outsb
out
mov
loopne
rorl
adc
cmp
fists
pop
xor
rcrb
xchg
sbb
lock
jmp
in
inc
ja
pop
push
dec
rcrl
sub
add
das
push
iret
in
push
push
adc
xchg
xlat
lret
cmp
gs
outsb
insb
jb
adc
fwait
mov
adc
movsb
jle
pop
mov
fisttpll
rcrb
divb
xchg
push
scas
or
loopne
xchg
xor
mov
outsb
fisttps
pusha
sbb
adc
or
xor
movsl
adc
stos
pop
loopne
sbb
cltd
lock
callw
imul
jae
pop
push
sar
out
ja
sbb
dec
fisubs
and
jg
jnp
outsl
and
xchg
mov
lea
loop
subl
jmp
push
addr16
push
xorb
and
pop
and
ja
cmp
imul
inc
or
mov
imul
fs
fsubrp
clc
addr16
shlb
and
xor
je
aam
mov
loopne
dec
decl
out
jl
pusha
add
roll
jge
test
dec
loopne
sbb
rorb
push
aas
or
xor
ljmp
xchg
int3
sub
xor
push
xchg
ficoms
adcl
out
out
mov
sub
les
xchg
ds
pop
cltd
lock
rorb
sarl
stos
pop
mov
stc
insl
in
xor
sub
mov
pop
cmp
push
jns
inc
mov
jb
push
dec
fld1
cmp
stos
pop
daa
stos
in
lret
sbb
xchg
fsts
or
dec
sar
inc
aad
hlt
xchg
in
lcall
lods
mov
jno
adc
or
xchg
cmc
fidivl
adc
leave
mov
dec
cmpsl
enter
lods
loop
dec
rorl
push
adc
xchg
outsb
xor
sbb
inc
cltd
sbb
lods
mov
das
jae
imul
pop
mov
adc
and
adc
jo
adc
push
stc
jg
pushf
sahf
in
loopne
negl
test
arpl
addr16
inc
xor
shll
pop
cld
ja
cmp
pop
leave
or
ret
sbb
sub
cltd
jl
cld
pusha
jmp
jg
inc
mov
cmpsb
mov
dec
dec
sbb
scas
ljmp
scas
rolb
adc
jp
jns
push
xchg
jp
scas
or
push
mov
out
inc
inc
imul
movsl
call
fisubrs
dec
mov
mov
leave
in
loope
add
aas
add
daa
rcrl
and
ret
ljmp
mov
adc
sub
out
xor
adc
addr16
cmpsl
fists
call
mov
inc
dec
xlat
xor
push
call
mov
clc
es
mov
addr16
mov
testb
hlt
shr
in
lcall
push
pop
scas
je
sub
cmc
inc
loopne
lahf
mov
test
mov
pop
loopne
neg
and
push
int3
icebp
or
mov
incb
mov
adc
inc
xchg
push
mov
test
lea
das
call
push
cmp
inc
cmp
lcall
mov
dec
shr
lock
jecxz
mov
popa
mov
mov
xor
xor
andb
cld
adc
mov
es
xchg
add
push
push
mov
or
sub
mov
repz
in
dec
cmpsl
sti
sbb
aas
add
arpl
mov
mov
loopne
jns
xor
and
es
les
cwtl
scas
je
fcoml
jge
cmc
sub
fmull
das
pop
adcb
aam
xchg
sub
or
loope
push
fistpll
add
out
mov
xor
call
mov
shlb
cmpsl
and
and
popa
jbe
fidivl
mov
lret
cmp
mov
movsl
shr
in
dec
std
inc
jbe
int3
inc
test
out
jne
call
shlb
lcall
outsl
adc
pop
outsl
call
out
popa
loope
sub
and
xchg
adc
ja
mov
adc
iret
pop
cs
inc
push
mov
aad
in
sub
inc
fs
ret
xlat
pusha
jge
bound
fwait
mov
sbb
in
mov
dec
push
in
pop
mov
lahf
enter
test
imul
ds
popa
in
push
sarb
js
mov
push
mov
push
push
arpl
leave
shl
sti
or
pop
inc
popa
shlb
sbb
xchg
loopne
add
fnstcw
or
inc
xor
fsts
fs
loopne
cmp
mov
aas
cs
lods
movsl
xchg
inc
jmp
test
and
mov
inc
xchg
adc
inc
add
sub
nop
scas
jle
shr
movsb
inc
cld
dec
xor
mov
test
adc
je
mov
mov
loop
xor
fmull
repz
mov
arpl
leave
ljmp
pop
cmp
mov
mov
jae
jno
test
inc
lock
mov
movsb
push
imul
xor
mov
pop
pusha
out
push
mov
push
popa
xor
fisubl
adcl
inc
sub
aaa
push
decl
xor
push
pop
mov
cmc
add
add
sti
mov
or
mov
adc
or
ret
pop
push
add
pop
repz
aas
out
sub
into
push
call
fisubrs
popf
das
call
mov
sub
notl
je
fisubl
dec
sbb
sub
arpl
call
fcoml
fisttps
pop
push
mov
icebp
adc
jle
pop
push
jge
test
add
push
nop
mov
sahf
cmc
rcrb
mov
loopne
jo
sub
sub
jl
inc
mov
jae
push
jnp
into
je
cmp
ret
adc
pop
call
int
add
and
rcrb
mov
mov
rolb
inc
in
push
xchg
lret
pop
hlt
mov
push
stos
loopne
imul
mov
ds
sub
inc
jp
sbb
ret
add
add
add
shl
loopne
cld
imull
mov
inc
sub
cmp
sub
pop
movsb
push
adc
sbb
adc
movsl
sbb
pop
stc
loop
push
dec
cld
lock
push
cmp
mov
dec
adc
adc
das
jno
mov
rcll
lahf
sub
xor
sbb
out
cmp
insb
flds
fisubs
xor
lds
sub
inc
sbb
out
cmp
inc
lahf
xchg
mov
inc
je
fsubrp
pop
loopne,pt
out
mov
int3
das
lock
inc
loop
jns
inc
sbb
jmp
bound
jnp
inc
packuswb
push
lock
loopne
repnz
cmc
mov
out
call
mov
and
and
xor
push
js
syscall
jae
aaa
sbb
in
and
loope
in
pop
pushf
or
stc
mov
xchg
test
je
pop
xchg
ficomps
dec
lahf
out
pop
xchg
jne
add
rcrl
rolb
push
das
out
stos
shrb
xchg
pop
lock
fucom
imul
repnz
push
add
sub
jns
cmc
add
leave
inc
and
sub
dec
mov
rcpps
and
je
add
or
mov
pop
xchg
outsb
data16
push
ficoms
int
sub
push
sbb
push
call
mov
out
cmc
and
daa
xchg
out
aaa
cmpsl
aam
sub
inc
dec
out
inc
scas
or
ds
pusha
aas
mov
lahf
jl
fsubl
loopne
jnp
jecxz
int
subl
push
mov
mov
imul
sbb
push
dec
inc
loop
dec
in
scas
and
mov
insb
lahf
mov
xchg
imul
in
mov
arpl
popf
add
and
xchg
lods
lahf
int
sbb
fmuls
xorb
push
jge
ret
cmpsb
movsl
xor
sbb
add
pop
push
out
dec
ret
mov
imul
mov
shrb
push
pop
neg
shl
mov
stos
push
mov
shlb
lea
mov
das
loopne
mov
pop
push
sbb
and
arpl
jmp
loopne
movsl
xor
inc
fidivl
lods
cmp
outsb
push
mov
push
out
mov
push
call
shl
jnp
clc
sub
rcrb
adc
inc
pop
fisttps
pop
imul
mov
mov
push
mov
cmpsl
lock
add
and
mov
xor
cs
mov
dec
mov
mov
cmp
xor
out
inc
imul
in
xor
imulb
add
jp
inc
in
or
cmc
jo
pop
mov
outsl
pop
test
call
data16
lds
ja
aas
popa
fistl
xor
inc
out
xchg
lds
jae
add
push
jo
inc
loop
pop
mov
add
or
pop
xchg
push
jl
adc
or
or
popf
int
leave
push
lahf
inc
mov
adc
ror
adcl
mov
sub
andl
std
sub
call
pop
ja
cmc
arpl
fcompl
push
imul
mov
je
cmp
loopne
jbe
rorb
xor
mov
iret
iret
out
xchg
jmp
movsb
adc
inc
xchg
icebp
push
data16
roll
in
dec
add
dec
jle
mov
ljmp
push
outsb
insb
jecxz
pop
cmpsb
frstor
shr
gs
outsb
ljmp
outsb
imul
outsb
pop
mov
out
fsubl
add
push
test
sub
lea
mov
mov
inc
sub
out
add
mov
adc
stos
out
sub
sub
pop
jmp
dec
pop
inc
shr
adc
aas
insb
imul
in
xchg
push
out
pop
mov
fisubrl
lea
in
adc
inc
daa
outsb
imul
insb
xor
or
out
pop
pop
push
pop
sbb
imul
mov
sub
jge
insl
in
es
arpl
es
test
sub
out
cmpsb
addr16
loope
lods
dec
imul
sub
in
imul
out
mov
addr16
pop
movsl
insl
lret
mov
and
outsb
bound
mov
ljmp
fisubrs
mov
sub
fsubrl
push
sub
pop
jecxz
iret
xchg
out
push
call
sbb
cli
loop
mov
adc
or
gs
sub
push
xchg
or
cs
push
imul
ds
or
es
pop
outsb
sbb
sub
daa
addr16
popa
lds
jmp
pop
imul
fsubrs
popa
out
imul
sub
jbe
test
dec
and
insl
cs
out
inc
sub
insl
fsubrl
mov
sbb
sbb
scas
data16
movsb
cs
cmpsb
stos
addr16
ss
mov
data16
arpl
in
and
sub
cmp
call
ficompl
adc
stos
pop
fs
imul
bound
push
or
jns
cmp
arpl
popf
cwtl
test
lret
xor
sub
push
cmp
dec
shll
int3
xor
mov
loope
and
lods
mov
je
orb
mov
dec
sbb
and
mov
mov
fstpt
or
mov
jo
aam
cmc
test
mov
pop
mov
js
data16
idivl
sbb
dec
movsl
cmp
jnp
cmp
push
push
pop
call
stos
cmpsb
mov
loopne
out
arpl
adc
movsl
ror
fs
ret
aas
pop
imul
out
dec
outsb
jo
and
nop
add
dec
in
mov
test
mov
cmp
das
call
test
cmc
mov
mov
inc
mov
and
imul
adc
aas
popa
jmp
loopne
icebp
sbb
mov
out
xchg
sub
cmc
inc
push
shlb
jmp
xor
orb
jp
push
insl
bound
xchg
add
in
inc
and
pop
psubsb
cmpsb
fisubl
in
lock
bound
sbb
jnp
fs
xor
popa
sahf
xchg
push
push
mov
std
push
cld
ljmp
in
shrb
outsb
push
add
lods
popl
idivl
mov
outsl
push
call
xchg
inc
lock
or
addr16
xchg
outsl
or
loop
loopne
ficoms
leave
cmp
shl
cmp
add
and
in
iret
scas
push
outsl
xchg
das
adc
and
dec
push
dec
les
lret
hlt
loopne
xor
cmpsb
mov
jl
mov
mov
in
jle
push
xor
test
test
incl
sub
and
push
and
js
push
push
adc
movsl
push
divl
fld
sub
shlb
repz
mov
out
and
and
dec
loopne
cmpsl
hlt
imul
cmc
pop
out
sub
repz
mov
add
mov
aaa
stos
mov
sbbl
lea
adc
xor
xlat
lret
subb
movsl
add
push
cmp
mov
sub
push
in
dec
dec
outsl
call
dec
rcr
fdivl
adc
pop
xchg
inc
jns
inc
lock
shlb
jne
lea
or
fiaddl
adc
rcll
shlb
out
bound
stos
movl
lods
insl
stos
shll
in
jecxz
repnz
int3
pop
pop
jecxz
adc
and
inc
xchg
mov
and
loope
or
xchg
loope
push
cmp
cmpsb
mov
xchg
scas
movsb
arpl
add
sub
shlb
mov
dec
out
sub
dec
mov
les
loopne
mov
fimuls
insl
jp
inc
int3
pop
xchg
mov
xor
pop
lods
addr16
into
mov
dec
pop
daa
out
mov
fistpll
push
and
cmp
daa
add
in
enter
test
ds
scas
lret
push
adc
mov
out
add
call
cwtl
cld
jno
jnp
clc
icebp
sbb
fimull
fldcw
fdiv
fdivl
push
and
movsl
dec
mov
iret
jmp
mov
movsl
sbbl
inc
push
int3
test
mov
sbb
repz
fsin
push
mov
pop
stos
cli
lods
das
push
lret
push
imul
push
inc
call
out
jp
fs
sub
shll
push
test
icebp
mov
push
inc
sub
inc
cmp
sub
repnz
sti
fisubrs
scas
pop
adc
mov
push
xchg
adc
push
push
pop
bound
repz
inc
pop
call
sarb
rcl
sbb
sbb
adc
int3
xor
mov
dec
arpl
hlt
divl
or
imul
jg
js
mov
sbb
pop
subl
inc
adc
add
inc
fs
repz
jp
test
pop
aam
sbb
pop
and
cs
test
xor
push
sahf
push
push
out
mov
rclb
iret
insl
mov
inc
arpl
pusha
aad
pop
push
adc
pop
call
mov
bound
call
rclb
rcrb
lods
lret
mov
push
xchg
or
loopne
push
push
cld
lahf
push
roll
sbb
jns
jnp
or
fidivl
jl
dec
call
cmc
scas
dec
jns
movsl
add
loopne
dec
xchg
push
rolb
pop
jns
or
ret
out
jno
xchg
sbb
push
in
sbb
imul
sbb
cmp
jno
cmc
cmp
xor
daa
push
add
lret
imul
push
mov
out
mov
ds
loope
js
jmp
mov
xlat
pushf
cmp
rorb
xor
ficoml
jp
jle
out
repnz
or
xor
and
mov
jne
insl
clc
xchg
lods
sbb
jle
movsb
mov
shlb
jmp
and
xlat
sar
cs
adc
test
or
dec
and
push
into
shll
xchg
imul
aad
xor
loope
jg
xchg
cmp
in
sub
jne
jp
add
sbb
dec
clc
ret
outsb
lods
cmc
in
cvtps2pd
dec
insl
insl
jge
insl
shrb
insl
mov
fmul
aam
scas
loopne
outsb
fidivrl
or
in
mov
out
jbe
addr16
cmp
and
pop
setp
in
insl
mov
pop
dec
pop
outsb
xchg
sub
insb
dec
lea
leave
adc
sbb
cmp
and
inc
insb
dec
adc
cmpsb
dec
in
out
cmp
and
subl
inc
dec
mov
insb
cmpsl
pop
mov
sti
inc
sbb
xchg
das
pop
outsb
out
dec
dec
xchg
and
pop
mov
xor
loop
and
cmp
jecxz
sub
outsb
xor
jae
jmp
imull
inc
popa
adc
push
adc
or
call
loope
and
sbb
sahf
and
outsl
pop
test
dec
jp
sti
cmpsl
inc
shlb
inc
sub
sub
bound
jmp
aad
sub
jecxz
push
pop
and
jns
lds
sub
sub
call
sahf
jecxz
in
fisubrs
sbb
or
filds
cmp
jmp
insb
pop
mov
sbb
outsb
mov
enter
push
ss
outsb
in
out
fstpl
loope
dec
in
int
test
in
lea
cmp
daa
in
pop
cmpsl
mov
fs
in
in
in
les
daa
in
inc
insb
dec
out
in
lret
daa
les
push
and
outsb
scas
shr
daa
push
das
cmpsb
or
inc
scas
pushf
ljmp
loopne
sub
daa
or
in
in
in
pop
and
dec
data16
cmpsl
inc
and
addr16
cmpsb
insb
call
call
inc
mov
dec
jmp
arpl
and
sub
imul
in
cmpsb
out
movsb
inc
gs
insb
fidivl
in
call
cmp
es
sbb
adc
adc
inc
fwait
or
dec
insb
iret
jns
and
fcmovb
adc
xchg
cmovo
cmpsl
pushf
mov
cs
loopne
call
add
fldt
mov
outsb
jecxz
rcrb
add
js
xchg
inc
jne
loop
fistpl
push
cmp
fwait
insb
cs
shlb
adc
pop
call
shlb
mov
rorl
ja
dec
imul
sahf
inc
cmpsl
stos
xlat
adc
scas
jae
test
call
test
lahf
inc
push
in
pop
jo
and
faddp
sub
fidivrl
test
fisubrs
rorb
enter
mov
xor
test
jmp
adc
mov
frstor
xor
and
jecxz
repnz
jns
push
es
stos
test
outsb
pop
pusha
into
push
pop
fisubs
daa
cmp
subb
imul
or
inc
add
lcall
cld
cmpsb
adc
popf
fwait
pushf
adc
outsb
push
add
loopne
mov
and
ret
sbb
incl
xchg
adc
jne
movsl
sbb
sarl
dec
ficoml
leave
and
call
shl
lock
push
ds
popf
xchg
push
and
aam
cmpsb
mov
clc
into
mov
incl
xor
loopne
addl
cmpsb
jnp
imul
pushf
xchg
add
into
scas
shlb
jno
mov
jnp
in
ret
call
out
adc
out
icebp
xlat
and
xchg
divl
call
es
rcll
pop
clc
jl
mov
mov
pop
imul
or
sub
add
push
sub
cmp
dec
adc
add
data16
xor
sub
pop
jmp
outsb
sbb
lret
mov
loopne
mov
mov
popf
add
and
or
out
xchg
mov
xchg
pop
repnz
test
dec
mov
jnp
fmull
icebp
out
fsubrl
or
and
mov
cmp
insb
imul
fnstenv
adc
xlat
xchg
sahf
shlb
mov
je
enter
xor
push
or
call
add
aas
cltd
adc
mov
push
jmp
lcall
enter
leave
das
mov
daa
andl
incb
or
data16
into
add
push
mov
add
daa
fdivrl
or
insl
insb
pop
push
inc
pop
add
ljmp
adc
out
xchg
sub
adc
sub
iret
jecxz
push
ljmp
popa
pop
scas
jb
daa
mov
and
sub
movsl
push
adc
jnp
sti
lret
xchg
out
jmp
dec
call
incb
pop
jmp
call
adc
pushf
xchg
stos
enter
or
lret
stos
dec
sub
or
pushf
out
or
fucomip
mov
adc
xchg
sub
or
fsubs
mov
adc
jge
jns
mov
hlt
jo
aam
cmp
imul
push
xor
and
lods
inc
add
xchg
cld
aaa
out
scas
int
sub
not
jp
lret
dec
add
scas
xchg
retw
xor
repz
push
and
push
in
scas
mov
sbb
rorl
push
test
dec
and
iret
mov
loop
rcll
push
jp
cmpsl
rorl
jmp
outsb
rcrl
mov
lods
lea
paddsw
and
sub
inc
adc
mov
icebp
push
addr16
inc
fwait
dec
mov
shlb
inc
sbb
xchg
inc
out
rcrb
arpl
inc
lcall
adc
push
adc
mov
xlat
pop
clc
ja
call
mov
popa
pop
dec
fsub
in
popa
cs
or
shlb
push
icebp
push
adc
mov
xchg
imul
ljmp
out
cmpb
xlat
mov
sahf
inc
lahf
filds
out
push
or
in
jecxz
addr16
rcr
lret
sub
leave
mov
arpl
mov
xorl
push
shrb
icebp
lock
lds
pop
rolb
pushf
sbb
cld
inc
cmpsb
test
xor
jne
test
mov
xor
jne
and
inc
cmp
stos
shl
pushf
or
mov
sbb
popa
jmp
in
addr16
sub
inc
nop
sbb
pop
mov
outsb
dec
dec
sbb
or
add
and
ret
insl
shlb
sbb
js
inc
inc
ud0
fstl
cmp
or
stc
mov
outsb
adc
pushf
ja
shrl
call
xchg
xchg
lcall
ljmp
stc
inc
sub
cmpsb
movsl
ds
jne
mov
imul
shl
aas
push
dec
scas
fidivs
loop
xchg
xchg
aad
fiadds
push
dec
mov
cmp
std
pop
pusha
ds
mov
shll
add
or
cwtl
jae
lock
add
aad
push
and
pop
cmp
mov
mov
cmc
inc
xchg
stos
pop
sub
orb
add
pop
shlb
es
mov
lret
push
dec
hlt
xor
adc
pop
icebp
xor
mov
or
lahf
cmp
fsubp
aam
xor
mov
lret
push
stos
pusha
mov
and
sahf
gs
mov
gs
sub
fiadds
pop
xchg
cmp
out
or
pop
or
sahf
movd
mov
repz
ja
or
loopne
push
sbb
push
add
and
add
fsubl
jo
pushf
std
stc
jo
imul
inc
pop
sbbb
pop
int
in
into
and
daa
dec
xchg
dec
pop
pop
popa
call
adc
jp
cmpb
daa
icebp
outsb
test
pop
scas
inc
les
jns
add
das
jle
mov
call
dec
in
loopne
adc
dec
std
rcr
clc
mov
pop
mov
shll
idiv
jbe
aas
inc
push
dec
xchg
bound
mov
sub
fdivrl
push
in
loopne
sub
xacquire
mov
cltd
inc
aas
and
dec
add
outsl
push
jb
xchg
sbbl
pop
add
sbb
out
inc
lock
loopne
ret
fsubrp
arpl
pop
lcall
adc
mov
cmp
sbb
lea
sub
push
inc
jns
lods
xchg
ds
add
dec
and
sub
push
sub
push
loop
andb
mov
sub
sbb
incl
adc
adc
sub
cltd
icebp
adc
imul
sub
push
jecxz
adc
loope
pushf
pop
shrl
jge
call
lahf
mov
pushf
test
rolb
pusha
jle
jg
mov
and
xor
sbb
sbb
iret
jae
mov
adc
xchg
mov
imul
in
xchg
ljmp
jmp
jbe
nop
mov
out
cltd
cmp
sbb
inc
xor
imul
cmp
pusha
xchg
adc
popl
movsl
mov
cld
addr16
inc
add
inc
mov
data16
and
stos
stc
jno
movsl
sti
imul
push
push
ror
stc
jl
jns
mov
cld
loopne
dec
iret
ja
mov
cmpsb
scas
insb
stc
push
stc
dec
push
and
dec
shrb
rcl
inc
mov
sub
mov
mov
jns
mov
xchg
ja
lods
push
push
aas
pushf
or
pop
adc
adc
stc
xchg
imul
pop
fucomip
repnz
push
arpl
jo
mov
pop
loope
imul
jno
aad
jns
cmp
and
pop
mov
mov
jmp
lock
in
lock
repnz
xchg
mov
ds
push
add
mov
cmp
lcall
call
testl
jno
mov
xlat
and
adc
pushl
xor
shlb
sbb
jns
lock
xlat
sahf
ja
popf
pop
mov
loope
iret
and
adc
shl
fists
push
scas
call
mov
dec
shl
cltd
in
sbb
orb
xor
mov
arpl
push
inc
insb
loope
sarb
inc
daa
fidivs
das
fwait
mov
aad
dec
stos
sub
xchg
fsubl
xor
lock
sbbl
pop
push
loop
call
adc
sub
loope
dec
push
out
add
sbb
jecxz
daa
inc
je
xchg
lcall
adc
cmp
clc
ljmp
imul
or
mov
fs
pop
cmp
inc
mov
popl
jbe
sub
push
call
call
in
inc
out
outsl
call
addr16
rolb
dec
loope
xchg
iret
mov
es
call
fdivp
add
jns
scas
test
loopne
xor
xor
adc
cmp
pop
pop
je
roll
mov
loope
fstpl
hlt
ss
arpl
mov
data16
movsl
push
dec
stc
cmp
xchg
push
fidivl
mulb
mov
lret
xchg
sub
leave
sub
or
dec
outsb
shl
cmp
mov
or
fwait
movsb
popa
mov
push
test
es
cmc
sbb
dec
ja
in
cmpsb
je
lret
inc
nop
xchg
mov
orb
das
loopne
lret
dec
pop
leave
push
leave
rclb
int3
pop
dec
stc
call
decl
jp
xor
loopne
ret
and
add
into
dec
shrb
jl
or
dec
mov
jne
push
jmp
movsl
sub
loop
clc
fwait
dec
lea
sub
iret
inc
cmp
pop
dec
xor
sbbb
sbb
movsb
push
out
ror
inc
addb
ret
rorb
adc
jg
int3
jns
test
mov
out
pop
movsl
sbb
mov
jmp
mov
mov
dec
call
cmpsl
xor
inc
push
test
cmp
test
jne
pop
jp
ret
push
out
aas
loopne,pt
rol
out
call
test
stc
jne
inc
xchg
loopne
push
cmpsl
das
sub
arpl
dec
and
cmc
insb
push
lret
aam
addr16
xchg
aam
sar
addb
aaa
and
and
std
rorb
repnz
inc
iret
popa
pop
aas
or
in
pop
shlb
add
nop
push
xchg
fcompl
push
cmc
sbb
fdivl
and
bound
sbb
lahf
sbb
addr16
xor
scas
lret
popf
insl
push
mov
pushf
or
imul
push
cmp
jno
xchg
cltd
call
and
fimull
fistpl
mov
mov
jl
push
xchg
leave
or
add
imul
in
pop
xor
je
in
ja
lret
mov
fildl
mov
aas
addb
dec
inc
cmpsl
ljmp
lret
pop
adc
add
sarl
push
add
push
imul
mov
ss
hlt
fidivrs
fs
or
mov
dec
addr16
dec
sbb
hlt
jns
aad
add
gs
cmp
sub
test
out
jno
add
cs
mov
sub
loop
and
inc
pop
push
inc
mov
mov
mov
adc
xchg
inc
fldt
push
inc
jae
push
imul
fisubs
test
jp
loopne
mov
notl
mov
mov
in
in
int3
in
out
ret
jmp
jns,pn
lret
in
insl
sbb
mov
cmpsb
jae
xchg
hlt
or
aam
mov
fdivrp
loope
enter
into
scas
daa
jno
aaa
xlat
andb
inc
add
xor
aas
ljmp
scas
or
daa
xchg
inc
iret
mov
xlat
cmpsl
in
lcall
cmp
sub
inc
bound
dec
adc
call
mov
dec
fldt
loopne
jne
jecxz
lret
dec
sub
loopne
adc
sub
gs
jg
jb
push
das
mov
push
sub
vcomiss
pop
cmp
pop
repz
ljmp
xchg
lret
fisubrl
daa
push
loope
addr16
xor
cld
mov
jp
sarl
push
cltd
fsubrp
outsb
inc
xchg
shll
pop
out
sub
inc
in
iret
fxch
js
inc
loopne
repz
in
popa
xchg
call
mov
ret
ret
push
sub
mov
jae
dec
ja
data16
mov
imul
xchg
in
jns
inc
mov
inc
imull
int3
mov
cltd
push
pop
xchg
inc
mov
pop
inc
loopne
aaa
jg
loope
sub
fisubs
iret
loopne
aad
lds
xor
mov
cld
roll
iret
mov
push
dec
dec
rolb
xorb
pop
nop
fdivrs
pushf
nop
pop
mov
and
cmpl
pop
repz
push
movsl
stc
loop
lcall
int
sbbb
lea
xchg
ficomps
or
add
int3
adc
push
in
and
test
jge
sahf
addr16
push
jmp
out
add
pop
ret
jno
sub
jne
int
imull
xor
xor
scas
inc
sbb
sbb
add
shl
jae
jno
adc
call
icebp
sub
jp
add
pop
setl
jle
push
sbb
mov
addr16
out
add
xchg
xchg
jns
or
jo
xchg
mov
call
sub
loopne
sub
push
dec
dec
mov
dec
jmp
xchg
stos
sarb
imul
and
bound
lods
inc
imul
or
and
fs
outsl
push
in
dec
adc
and
and
cmpsl
cli
arpl
add
dec
inc
adc
fincstp
dec
xor
stc
daa
int
pop
lret
out
int3
bound
jne
inc
mov
rcr
sarb
scas
jno
repz
negl
scas
movsl
inc
jp
mov
or
test
sub
push
adc
rolb
arpl
lods
in
jnp
mov
insb
shlb
repz
mov
or
sub
dec
cmp
add
jmp
adc
inc
sub
push
outsb
outsl
push
arpl
mov
fucomip
iret
out
push
jno
inc
enter
jg
pop
lea
arpl
fdivrl
movsl
rcrb
icebp
lahf
jg
test
loopne
xor
outsb
sti
pusha
rcrb
out
stos
addr16
aad
scas
sbb
mov
rclb
dec
ficoms
cmp
jne
fiadds
cltd
push
push
mov
std
jns
ljmp
add
ficomps
and
and
call
addr16
xchg
outsb
xor
xchg
repnz
xor
out
loopne
or
xchg
mov
dec
jns
inc
mov
movsl
sub
fistpll
and
orl
loope
xor
inc
js
lods
add
das
sarb
rcll
fisubrs
xlat
add
sub
and
xchg
test
pop
push
mov
lock
xor
shl
or
xorb
pop
daa
mov
dec
dec
mov
imul
lahf
nop
ja
aam
pop
dec
xor
into
and
inc
out
mov
fldl
subl
push
inc
ret
rclb
mov
mov
imul
je
lea
rol
pop
inc
ss
fiadds
push
hlt
or
push
mov
lock
mov
cmp
aaa
jecxz
loope
cld
jmp
flds
movsl
aad
jl
insl
push
sarb
sbb
sub
sub
iret
dec
in
imul
and
out
mov
jl
xor
pusha
mov
gs
jecxz
lret
jmp
sarb
sub
xchg
enter
cli
loopne
rorl
test
rcll
loopne
mov
rclb
pop
in
loope
ljmp
loopne
mov
cltd
rcrb
adc
adc
sub
insb
or
or
sbb
xor
fdivl
push
jecxz
sti
xlat
sub
lcall
sarb
cmp
xchg
and
loopne
stc
stos
fs
push
scas
ds
cmpsb
inc
cmp
sbb
xor
fnstsw
aam
mov
jne
and
loopne
fistps
sbb
imul
sub
dec
shlb
clc
lods
cmpsl
mov
jnp
inc
push
inc
jl
mov
xor
lret
dec
jecxz
lahf
mov
das
loopne
les
imul
outsl
or
xchg
mov
jle
push
mov
movsb
loopne
add
jb
xorl
xchg
arpl
jne
test
lea
insl
and
push
xchg
movaps
lds
pop
lret
outsb
pop
stos
idiv
loopne
pop
mov
dec
push
rcrl
aaa
arpl
dec
addr16
fldln2
loopne
sahf
sbb
inc
cmp
sysenter
fistl
add
cmp
cld
add
ljmp
pop
lea
sahf
push
dec
call
inc
sbb
or
idivb
aaa
ja
dec
lret
shlb
dec
cmp
jle
inc
sub
fiaddl
add
in
andl
push
xchg
sbb
outsb
xchg
bound
addr16
sahf
loop
negb
rcl
inc
jne
roll
enter
sbb
iret
push
in
repnz
movb
push
decb
fbstp
test
stos
dec
shr
call
or
jg
cmc
jo
jmp
mov
push
ds
pop
push
add
jle
repnz
loopne
add
fisubrs
push
das
xchg
and
out
sbb
pushf
shlb
sbbb
adc
test
add
loop
aas
pop
call
push
data16
jb
gs
imul
and
inc
pop
add
repnz
bound
int
cmp
adc
imul
repz
adc
arpl
mov
pop
fwait
bound
popa
xor
or
pop
ja
jl
test
iret
aaa
enter
gs
data16
outsb
or
sbb
adc
popa
std
out
pop
loop
stos
push
aad
into
dec
loopne
test
loop
adc
stc
push
mov
neg
adc
adc
xor
fdivl
mov
mov
jo
pop
sub
add
ficomps
xor
jmp
loopne
inc
mov
inc
push
ret
mov
or
popa
test
inc
test
imul
pop
and
ds
cli
les
xor
mov
testb
movsl
inc
sbb
push
fsubp
movsl
jns
test
je
push
push
pop
test
stos
sbb
dec
iret
loopne
loope
fwait
sarb
or
insl
adc
popa
ficoml
inc
mov
jns
dec
jge
push
and
push
leave
pop
repnz
add
dec
pushf
xor
push
lods
adc
loop
jmp
or
mov
push
call
int3
jo
adc
adc
mov
dec
push
subl
push
pop
adcl
and
and
clc
mov
inc
shrb
lret
pop
out
fiaddl
and
sahf
xor
cmp
lods
stos
push
negb
movsb
cmpsl
dec
xchg
lret
add
pop
lods
out
and
adc
lods
jb
push
xchg
sbb
lock
rorl
mov
mov
jo
arpl
loopne
xor
pop
xchg
ja
outsl
mov
push
sub
fimuls
loopne
xchg
outsb
data16
ret
sbb
jne
adc
inc
mov
rcr
bnd
xorl
jle
sarb
adc
xchg
addr16
addr16
push
aad
inc
fisubl
lods
xadd
add
xchg
fidivrl
je
mov
push
shl
mov
test
mov
int3
xor
dec
mov
sub
push
imul
mov
subl
adc
lds
dec
push
or
leave
jae
and
outsl
or
push
mov
inc
mov
jmp
loop
addr16
call
filds
and
sbb
out
push
push
lods
psrlq
xchg
mov
cltd
add
mov
and
push
divl
movb
loope,pt
ds
fidivrs
fdivrl
xchg
lods
out
or
stc
test
jns
pop
test
jbe
gs
repz
push
iret
xchg
cltd
lret
into
and
stos
in
cmpl
add
rorb
jne
jbe
gs
push
mov
mov
mov
loopne
jo
inc
in
mov
scas
push
fstps
sub
imul
and
and
stc
fldcw
mov
cmp
xchg
add
neg
dec
add
in
das
inc
inc
out
rcl
fwait
add
fdivs
imul
mov
sbb
les
mov
add
xor
dec
dec
outsb
xchg
mov
sbb
mov
mov
and
imul
mov
sbb
sbb
mov
out
testb
xor
jg
jp
movsl
out
aam
daa
insb
fisttps
cmp
lret
shr
lods
into
adc
ror
pop
dec
shl
jl
inc
pop
adc
sub
stos
loopne
fldenv
scas
cmc
inc
lcall
sbb
adc
mov
ret
xor
add
jmp
mov
mov
and
das
or
fidivl
pop
stos
jle
imul
stc
pop
sbb
mov
push
add
add
imul
loope
test
arpl
lods
decb
and
and
ljmp
shrb
pushl
call
movsl
push
push
in
mov
jb
cli
call
mov
xor
pushf
pop
sbb
pop
pop
lret
dec
mov
xor
or
jno
xlat
and
and
sub
cmpsb
movsb
ja
loope
aad
popa
punpcklwd
xor
call
sub
lods
sub
loope
lret
loopne
add
adc
lea
sbb
fmulp
ljmp
pop
call
sub
mov
das
shlb
sub
jg
pop
mov
dec
insb
aas
xor
sub
push
push
inc
arpl
cmp
loopne
call
xlat
jne
scas
xor
mov
sti
cmp
xorl
mov
push
inc
xlat
sub
push
aam
mov
arpl
push
xlat
ljmp
inc
int
sbbb
xchg
das
jo
push
pop
push
inc
lahf
adc
xchg
and
shrl
nop
es
fisubs
je
roll
xor
nop
in
sbb
ss
mulb
lret
jl
fsubl
dec
or
dec
insl
pop
js
out
lcall
sbb
fiaddl
out
fistps
add
shlb
imul
inc
jno
rolb
stc
test
or
rclb
cwtl
lret
insl
out
jne
dec
fsubrp
fadds
adc
or
outsb
out
push
and
jnp
popf
jl
in
fld
sbb
cld
inc
inc
pop
or
arpl
and
xlat
hlt
sub
jbe
aam
insl
loopne
fmul
ficoms
or
je
lods
and
incl
mov
imul
jecxz
shrb
mov
sub
adc
xchg
mov
cmp
push
loopne
push
jnp
xlat
xchg
push
xlat
sbb
pop
xchg
inc
into
inc
push
cmpb
loopne
idivb
sbb
jp
js
mov
mov
ret
outsb
stos
mov
outsb
pop
jae
jle
and
lods
js
inc
arpl
icebp
sbb
mov
cs
in
or
pop
movsl
fistpll
loopne
push
dec
test
std
rclb
adc
outsl
repnz
push
lret
movsb
fdivl
mov
stos
jno
movsb
les
cld
dec
mov
vmovsldup
inc
inc
add
pop
loope
shlb
and
cmc
ja
jmp
mov
jl
pop
dec
pop
push
fbld
loopne,pn
mov
mov
addr16
dec
lods
adc
popa
insl
shl
les
andl
add
inc
loopne
jg
lret
push
mov
je
loope
inc
ret
mov
in
sbb
jp
iret
addr16
call
adc
test
imul
pop
and
loope
jl
popa
mov
xchg
lret
mov
fistpll
jnp
sahf
push
fmuls
xchg
push
jb
adc
dec
imul
adc
arpl
loopne
sub
int3
aam
inc
shlb
sub
adc
dec
shlb
mov
adc
mov
xor
jb
mov
scas
cmp
sbb
sbb
imul
mov
inc
addr16
or
jno
and
or
jnp
xchg
adc
daa
pop
jmp
sarb
into
imul
xor
xchg
call
xchg
push
imul
movsl
mov
rorb
loopne
lds
loopne
inc
inc
leave
push
lods
or
aas
jecxz
add
adc
mov
or
dec
xchg
sub
push
mov
in
sbb
stc
ret
aad
subb
pop
ds
inc
cmpsl
imull
inc
cmp
fisttps
push
jmp
cmpsl
xchg
bound
sbb
mov
or
mov
xchg
scas
gs
push
inc
mov
lret
cmp
dec
and
loopne
mov
mov
fsubr
and
loopne
sbb
dec
jle
decl
data16
int
push
adc
mov
insl
sbb
in
test
addb
rcl
pop
test
outsl
loopne
and
xor
lcall
adc
add
xchg
mov
inc
push
jb
pop
iret
test
mov
mov
idivb
pusha
out
out
lcall
adc
inc
inc
lods
int3
loope
push
jbe
in
push
lret
pop
adc
ljmp
and
jg
imul
pop
sbb
repz
call
xlat
xchg
mov
adc
arpl
sub
scas
cltd
rol
pop
les
gs
jp,pt
mov
fdivrl
and
loopne
fidivl
and
gs
mov
xor
mov
imul
imul
test
pop
loop
mov
outsb
addr16
push
imul
mov
mov
push
ss
xchg
daa
pop
dec
pusha
dec
call
xchg
mov
xlat
push
ds
cmpsb
outsl
mov
dec
les
inc
shl
adc
xchg
ret
vunpcklps
das
fs
ljmp
adc
scas
je
sbb
jo
pop
mov
push
fsubp
adcl
je
mov
or
pushf
pop
pop
data16
imul
shlb
or
scas
scas
addr16
cmc
mov
repz
mov
dec
cmpsl
ds
not
add
adc
mov
jne
pop
rcrb
imul
sbb
inc
in
sbbl
loop
add
mov
icebp
mov
sub
ror
fs
xor
and
subb
or
adc
ror
or
adc
shlb
pop
xchg
xchg
push
push
daa
adc
dec
scas
sahf
bound
sarb
and
add
dec
ljmp
mulb
rcll
lock
mov
mov
jle
aaa
jmp
mov
dec
xchg
aas
mov
adc
rcll
lea
scas
push
adcl
icebp
fsub
imul
cmc
cmp
push
jmp
rcrb
mov
add
ficompl
jb
lahf
rclb
rcrb
sub
jle
and
jp
pop
imull
movsl
xchg
xor
fscale
mov
mov
mov
xor
movsb
je
pushf
ds
sbb
mov
mov
add
pushf
out
in
ds
inc
ret
sbb
cli
dec
ret
or
push
pop
mov
push
mov
push
das
imul
dec
test
out
stc
sbb
jecxz
loop
mov
lret
add
jns
dec
and
push
daa
imul
inc
mov
cltd
movsl
mov
cs
in
inc
pop
push
mov
addb
stos
subb
mov
adc
inc
mov
push
mov
xchg
mov
mov
cmp
sarl
or
sub
adcl
and
pop
dec
cld
je
pop
xchg
mov
out
cmpsb
push
xor
fdivl
or
xchg
adcb
or
aaa
adc
dec
lret
jno
ljmp
dec
addl
ret
xchg
sub
push
scas
mov
fnsave
int3
mov
or
pusha
cld
mov
imul
jmp
sub
jp
xchg
jbe
bound
stos
and
adc
cmpsl
pushf
movsb
add
or
ljmp
or
sbb
pushf
jle
loopne
enter
arpl
sbb
inc
loopne
sbb
imul
inc
aaa
aam
sbb
sbb
lahf
ffreep
jne
xchg
ficoms
mov
out
mov
inc
jae
lcall
add
or
test
hlt
xor
sarl
push
into
pop
cmpb
sbb
push
inc
inc
lock
pop
test
insb
xor
test
in
movsb
inc
pop
ret
inc
mov
xchg
adc
rorb
add
pop
add
xor
mov
xchg
xchg
sub
jmp
xchg
jns
test
pusha
and
clc
mov
dec
imul
movsl
or
xlat
fisubs
or
pusha
lret
adc
insb
cmpl
cli
push
push
stc
fwait
inc
loope
push
or
jge
pushf
outsb
dec
sbb
sbb
sub
xlat
xchg
dec
jne
cli
and
inc
cs
ss
es
repz
lock
mov
and
mov
add
mov
inc
mov
jge
mov
outsb
out
addr16
out
push
das
jb
movb
iret
mov
ret
stc
pop
sbb
mov
out
mov
pop
sbb
and
test
dec
fimuls
mov
adc
ret
scas
cmpsl
arpl
xor
mov
pushf
ljmp
loopne
in
gs
in
lock
cmp
jne
mov
shr
add
mov
xor
jmp
inc
mov
xchg
adc
scas
sub
jg
mov
add
popa
loopne
icebp
testl
jae
and
call
push
mov
push
fstl
loop
call
js
es
std
movsb
rcr
adc
xchg
aas
bound
imul
mov
inc
test
int3
out
data16
push
ljmp
out
popa
mov
jg
les
lret
jecxz
mov
jnp
rcll
loopne
xchg
mov
mov
fists
movsl
dec
aad
push
xchg
fidivrs
pop
jle
xchg
maskmovq
testl
pop
rclb
add
shll
lahf
push
jne
popa
xor
mov
cmp
dec
adc
xor
adc
mov
inc
aad
push
iret
inc
sbb
mov
stos
ret
add
nop
xor
shll
xchg
popf
lret
loop
movsb
pop
push
jl
nop
std
or
mov
xchg
loopne
mov
popf
add
dec
decl
loopne
outsl
jp
pop
loopne
fdivl
pop
lds
cld
inc
orb
dec
mov
jne
mov
push
pusha
xor
push
outsb
pop
sbb
jns
inc
cmp
into
fsub
cmpsl
mov
loopne
outsb
and
mov
cmpsb
popf
xchg
xchg
jbe
ret
fucom
out
pop
push
rorl
sub
loopne
call
cmc
adc
sbb
inc
xlat
lods
loopne
mov
push
xchg
test
insl
lahf
or
adc
xchg
push
mov
data16
int3
dec
mov
mov
push
fistl
stos
aad
in
cs
jae
or
das
call
cmpsb
sbb
repz
sti
push
mov
jnp
cmp
jno
in
das
adcb
lock
aaa
outsb
je
mov
insl
mov
xchg
scas
xor
scas
lds
xchg
sub
cmp
sbb
pushf
push
add
rol
dec
in
adcb
ret
fs
pop
fsubrs
dec
scas
cld
dec
sbb
cmp
jle
inc
pop
xchg
and
adc
bswap
jl
jbe
pop
push
ret
out
ror
iret
or
rolb
push
test
mov
out
add
test
sbb
dec
jns
mov
inc
fs
movsl
jne
int3
mov
dec
xor
push
sub
outsl
xchg
cmp
sbb
int3
sbb
adc
xchg
in
movsl
xchg
sbb
pop
ret
js
inc
cmc
pop
jne
stos
mov
inc
pusha
fsubrl
mov
lods
xor
incb
jecxz
popa
rcll
loopne
loop
test
mov
adc
mov
pop
loopne
push
or
popa
loopne
add
arpl
mov
inc
aaa
rcrl
and
inc
movsl
ja
loopne
out
ds
and
pop
xor
pop
scas
push
inc
pop
out
pushf
call
lods
dec
aas
mov
add
pop
jl
mov
mov
add
fisttps
xlat
or
repnz
inc
pop
call
mov
adc
mov
push
or
out
mov
or
jle
mov
sub
mov
jno
cmp
cmpsb
xor
pop
dec
fisttpl
push
add
sbbl
out
mov
jmp
rol
ficoml
add
push
stos
or
and
sbb
pop
xchg
sub
inc
push
call
mov
mov
ljmp
dec
dec
sub
mov
sbb
stc
cmp
xchg
jmp
adc
dec
xor
je
xchg
outsl
ret
call
imul
xchg
fldl
jnp
push
jae
adc
addr16
jmp
and
fmull
adc
dec
fisttps
jmp
ret
or
out
shrb
dec
pop
xlat
mov
xchg
sbb
nop
sub
stos
arpl
mov
pop
cmc
mov
out
subb
loopne
cmp
cmp
ja
push
movsb
outsb
push
xchg
pop
mov
fists
in
nop
aad
pop
popa
jl
ret
jmp
pop
xor
mov
outsl
and
outsb
ds
arpl
xor
push
cmpsl
xor
xchg
dec
pop
lcall
fcoml
mov
adc
popf
stc
jl
adc
mov
mov
leave
add
push
pop
pop
leave
sti
call
adc
fwait
insl
fildll
adc
test
xchg
push
cmpsl
fisttps
pop
push
jecxz
je
push
push
fs
mov
scas
in
pop
cmp
and
mov
add
nop
scas
push
push
push
and
add
dec
push
inc
hlt
popa
jo
js
icebp
add
rclb
or
loope
ja
int3
ret
and
jecxz
call
lret
movsl
jl
pop
cmp
push
std
pop
enterw
mov
lcall
es
sar
bound
loop
pop
adc
dec
adc
adc
xor
aad
mov
cmp
sbb
sub
hlt
sub
inc
movsl
pushf
pop
push
add
sub
ds
mov
push
cs
adc
call
inc
or
movsl
icebp
dec
inc
sarb
das
shll
loopne
loop
xchg
movsb
mov
stos
inc
sub
repnz
daa
jg
std
les
xchg
insb
add
insl
stos
push
mov
or
adc
rolb
xor
push
xor
call
notb
ror
mov
jae
sub
in
mov
pop
dec
out
inc
pop
pop
je
xor
ja
andl
adc
mov
or
cmp
cltd
dec
push
imul
sub
ja
test
mov
pop
rorb
movsb
loope
and
loopne
mov
insl
xchg
xor
mov
mov
repnz
mov
xlat
loopne
adc
mov
add
mov
ficoms
sub
mov
push
pop
mov
jnp
loopne
das
add
bound
aas
or
mov
xchg
push
pushl
mov
fldenv
test
gs
inc
inc
push
arpl
fbld
mov
loop
fcmovnbe
ret
mov
push
lret
bound
repnz
mov
push
test
call
cwtl
fs
xchg
sub
adc
sarb
in
lret
push
sti
and
and
shll
shl
adc
push
outsb
rorb
push
push
incl
sbb
lods
cltd
push
xor
sbb
dec
mov
sbb
dec
ficoms
or
das
push
inc
cmp
mov
je
jns
inc
sub
loopne
mov
inc
cwtl
cmpsl
into
or
pop
in
xor
sbb
adc
stos
int3
aas
pusha
jle
idivb
jmp
jns
push
sub
shrb
pop
add
add
imul
push
hlt
repnz
sti
mov
insl
adc
test
jl
pop
jp
lods
call
jne
cmp
in
pop
push
and
adc
xchg
or
xor
mov
cmp
push
cmp
imul
jne
xor
cwtl
push
mov
inc
mov
and
mov
sbb
push
in
dec
add
imul
jne
cmp
aas
daa
jo
aam
mov
sbb
xchg
daa
pushl
mov
imul
in
rcrb
inc
lea
ss
mov
ficomps
adc
ss
jge
loop
shrb
pop
call
mov
out
pop
data16
pop
inc
fsubp
shlb
pusha
dec
fisubl
int3
push
lods
shlb
das
jae
fiaddl
sbb
mov
sbb
insb
inc
xor
out
bound
push
xchg
insb
mov
loop
add
sub
sbb
cmp
rorb
pop
outsl
sbbb
jl
pop
cmp
das
ds
loopne
xor
sahf
xlat
push
xchg
hlt
jecxz
shrl
mov
add
notb
jl
or
aas
orb
pop
call
pop
xchg
in
popa
pop
mov
sbb
mov
xor
mov
add
rcl
shrl
lahf
movsl
out
pusha
andl
int3
fidivrl
rorl
mov
sbb
fisubrs
mov
aaa
aam
rol
mov
mov
and
cmpsl
orb
sub
movsb
sbbb
jae
scas
loope
adc
mov
iret
fcoml
sahf
cmp
es
add
mov
outsl
call
sub
loopne
fucomp
jmp
jl
gs
or
shrb
inc
addb
mov
test
outsl
add
unpcklps
push
sub
jmp
in
and
mov
jl
pop
fimuls
sbb
insl
add
jmp
xchg
or
cld
ja
loopne
call
enter
fstps
cld
dec
xchg
test
dec
imul
je
scas
push
imul
outsb
xchg
outsb
sbb
cltd
imul
inc
mov
leave
or
xor
mov
xchg
add
mov
bound
mov
inc
das
xor
inc
subl
aas
jae
xor
pcmpeqb
mov
lock
lahf
jne
ljmp
adc
mov
clc
inc
mov
mov
fcom
inc
sub
pop
sbb
mov
xor
push
dec
mov
xor
ljmp
loopne
inc
sbb
jg
iret
or
mov
mov
out
leave
std
dec
mov
leave
rcl
mov
stos
mov
sahf
popa
and
fcmovne
pushf
dec
sub
cmpsl
out
and
movsb
es
xchg
imul
movsb
out
or
sbb
data16
les
shrb
dec
test
push
les
sbb
lcall
int3
inc
ret
mov
insl
fdivs
jge
subb
fisubrs
jp
pop
ss
dec
jns
lea
lahf
repz
fadd
outsl
mov
jns
shrb
xchg
rcr
dec
fildll
bnd
xchg
lods
jg
pop
cmp
push
stos
repz
cld
xchg
sbb
out
mov
in
xor
or
mov
dec
pop
aam
and
clc
mov
jne
jmp
inc
aad
rol
insb
dec
loopne
leave
xor
mov
fiaddl
mov
and
mov
faddl
shll
shlb
imul
sbb
mov
pop
cmp
int3
rcrb
stos
xor
inc
repnz
jmp
popa
sub
imul
ret
adc
push
in
xchg
mov
out
out
pop
sbb
sarb
loopne
mov
xchg
leave
aas
mov
jge
daa
cld
rcll
fnstsw
and
imul
leave
out
out
outsl
es
addr16
inc
lods
loopne
push
sbb
mov
sub
incb
orb
sub
mov
push
insl
and
inc
xchg
adc
inc
push
xor
sahf
push
out
ret
fcmove
outsb
rcll
xor
mov
mov
cs
or
xchg
loopne
popa
sbb
js
jl
jmp
sub
push
pop
mov
fisubrl
bound
stos
in
xchg
outsb
xchg
das
jmp
arpl
inc
push
sbb
pop
jecxz
pusha
fisubrl
sbb
dec
inc
das
and
shlb
xor
sub
jmp
hlt
mov
lret
mull
into
xchg
popa
inc
movsb
out
sahf
fsubrs
lret
arpl
mov
cmp
dec
sub
sarl
subb
dec
mov
pop
mov
movsb
push
imul
outsl
stc
inc
movsl
and
mov
in
push
push
ja
mov
or
xchg
insl
dec
pop
outsb
ror
push
dec
lret
sub
subb
cmc
add
jl
sub
add
inc
pop
lods
dec
or
inc
ret
js
dec
movsl
lahf
arpl
sub
pop
in
inc
mov
mov
out
lock
out
dec
outsl
jbe
scas
push
pusha
and
adc
add
and
pop
outsl
cmc
into
mov
mov
fmuls
jmp
jb
cmpsb
mov
inc
pop
out
out
add
hlt
ljmp
mov
insl
in
lods
mov
daa
stc
cmpsb
stos
cs
aas
push
imul
mov
ret
das
dec
rcr
imul
repz
out
jns
in
jne
mov
sub
mov
sbb
pop
outsl
inc
mov
out
int3
xor
outsl
xchg
ja
sbb
lods
fidivl
mov
pushf
sub
inc
pop
pop
scas
into
outsl
push
mov
cmp
add
aaa
repnz
in
fcompl
push
or
inc
mov
sub
in
stos
push
insb
addr16
mov
out
push
jae
in
outsl
enter
into
sub
aaa
mov
add
scas
or
dec
mov
inc
sub
outsl
loope
lock
outsb
cmpsl
cs
lods
shlb
jbe
scas
xor
lahf
mov
outsb
inc
pop
inc
pop
dec
cmpsb
into
mov
push
scas
add
outsl
testb
push
arpl
cli
push
add
data16
mov
dec
pop
mov
cmpsb
leave
jg
add
mov
dec
out
dec
xchg
inc
outsb
pop
sub
pop
std
sbb
int
mov
insb
cmp
add
jmp
push
pushf
das
xorl
punpcklbw
jmp
push
js
fsubp
xor
in
pop
push
dec
jg
pop
cmp
cltd
mov
jmp
out
aad
imul
add
repnz
cmp
add
jnp
mov
outsl
pop
cmp
jmp
shll
in
outsl
movsb
pop
or
cmp
imul
out
imul
push
subl
and
test
cmp
ljmp
insb
dec
mov
push
test
outsl
pop
pop
bound
and
xchg
inc
and
jmp
fstps
add
push
mov
push
xchg
outsl
enter
cmpsl
cmp
fidivs
mov
lds
insl
mov
xchg
into
inc
pop
pop
in
addr16
scas
insl
push
in
add
lret
jmp
gs
fs
mov
idivb
outsb
and
push
mov
test
sub
inc
adc
cmovae
imul
test
pop
xor
shrb
insb
imul
pop
cs
andl
cmc
outsl
sbb
mov
outsw
jp
pop
movsb
ret
ds
cmp
fwait
mov
cmp
outsb
cmp
mov
mov
out
push
icebp
fstl
outsl
adc
mov
insl
and
aas
sahf
sbb
outsl
dec
negl
sub
mov
xchg
insb
ds
inc
test
outsl
lds
pop
addr16
imul
cmp
push
dec
push
push
dec
pop
lret
loopne
mov
jle
imul
jp
insl
popa
lcall
cmpl
imul
sbb
outsb
ds
sbb
loopne
movsl
cmp
test
pop
out
gs
outsl
lret
clc
push
pop
pop
cld
sub
push
dec
dec
stos
ljmp
mov
outsl
and
mov
mov
jmp
outsl
out
adc
sbb
sub
bound
mov
dec
pop
jo
mov
sbb
test
iret
cld
pop
mov
cwtl
and
cs
jge
insl
dec
sbb
add
and
inc
repz
pusha
imul
inc
insl
pop
dec
stos
dec
fsubs
outsl
stc
fwait
cmp
popf
jmp
testb
inc
push
jecxz
jle
and
int3
iret
imul
das
cwtl
aad
mov
or
insl
test
pop
cli
push
jle
scas
add
outsl
dec
in
pop
in
int3
imul
into
mov
mov
push
out
testb
stos
subb
dec
jo
mov
jnp
fbld
pop
das
dec
negl
jle
add
lea
outsl
dec
dec
sub
addr16
add
inc
jo
sbb
rcl
sub
dec
jecxz
jns
cmpsl
mov
popa
dec
rclb
loope
rcrb
or
aaa
sbb
data16
out
ds
and
pop
fdivrl
repnz
gs
imul
loopne
leave
xchg
into
mov
arpl
push
outsl
gs
mov
sub
mov
fwait
cmp
sub
pop
xchg
in
outsl
dec
mov
lods
dec
out
mov
cmp
mov
xor
dec
das
mov
roll
mov
add
pop
mov
and
pop
pushf
lods
movsl
shrl
jb
loop
aas
dec
pop
scas
aaa
decb
out
daa
add
repnz
adc
outsl
ret
or
out
aas
test
xchg
mov
mov
pop
dec
jns
imul
int3
in
xor
mov
je
inc
in
add
daa
mov
fstps
dec
icebp
inc
jb
ds
int
cmpsb
faddl
sub
outsl
dec
jns
movsl
ficoms
push
xchg
clc
fwait
mov
sbbl
movsb
in
outsl
gs
jmp
lds
outsb
cltd
sub
aas
dec
jnp
sbb
dec
mov
cmp
xchg
sbb
pop
andl
out
lds
xor
jle
add
mov
dec
imul
loopne
popa
shrb
int3
jge
push
sahf
pop
xchg
mov
push
insl
adc
or
push
clc
jge
ret
addr16
sub
mov
mov
call
pop
fiadds
cmp
push
loop
addr16
jo
adc
call
jmp
scas
push
mov
push
aas
outsl
test
lock
pushf
sub
in
inc
and
imul
insl
inc
add
cmp
out
pop
sub
xchg
adc
xchg
addr16
cltd
push
movsl
or
jl
jae
clc
sub
lods
push
add
and
out
or
inc
stos
xor
outsb
insl
in
jmp
std
outsb
pop
loope
popf
fldl
outsl
hlt
lock
outsb
and
push
dec
scas
std
aas
hlt
jae
jno
dec
mov
and
jl
adc
andb
das
inc
icebp
outsl
sub
pop
xlat
outsb
pop
addl
in
loope
shlb
pop
das
xchg
push
dec
repnz
ret
inc
ss
mov
pop
sti
cmp
das
push
dec
add
add
insl
addl
outsl
mov
pop
loop
or
pop
fiaddl
or
cltd
inc
out
outsb
push
bound
orb
test
movsb
aas
lods
sahf
xchg
ja
in
insl
add
add
jnp
inc
insb
das
sbb
push
and
add
out
mov
in
ret
dec
xor
pxor
insl
jl
ds
in
mov
xchg
and
cli
dec
insl
in
scas
nop
aam
andb
in
into
shrb
dec
dec
cwtl
lret
stos
jl
dec
jl
cmp
xchg
sub
rcr
cmp
xor
mov
aas
dec
cld
or
mov
mov
pop
ljmp
sub
imul
add
movsl
and
clc
testl
push
aas
mov
cmovl
test
dec
sub
dec
jle
out
or
or
imul
push
jb
xchg
test
jge
scas
xchg
or
lcall
je
lods
aas
dec
imul
sahf
outsb
dec
bound
mov
push
xchg
out
inc
pop
jle
pop
in
icebp
lods
jp
dec
inc
mov
xor
add
xor
sub
jp
add
outsl
jg
inc
scas
jns
out
jmp
adc
cmp
nop
xor
repnz
sbb
cltd
outsl
scas
inc
push
push
adc
not
mov
or
mov
outsb
imul
fadd
ret
repz
sti
jo
jo
call
sub
ds
add
arpl
pop
jle
xchg
test
ja
pop
jmp
out
sbb
outsb
pop
test
cwtl
in
inc
mov
mov
bound
sti
outsb
add
out
into
rcpps
add
repnz
lret
pop
inc
pop
outsl
dec
fcompl
cwtl
and
xchg
insl
insb
add
fucomi
jne
inc
mov
jb
data16
xor
mov
jmp
insb
pusha
es
mov
push
out
xor
imul
lret
arpl
ror
repnz
jne
dec
outsb
movsl
outsb
jno
les
push
in
adc
cmpsb
ds
daa
add
fcompp
insl
and
out
jne
cwtl
in
loop
lret
sti
popa
inc
scas
xchg
push
and
add
std
and
inc
lods
ljmp
xchg
insb
inc
bound
ds
sarl
repnz
std
push
push
fimuls
outsb
mov
sti
jecxz
sub
aad
das
cmp
push
imul
add
enter
shll
test
addr16
andl
lds
fs
xor
mov
sbb
imul
mov
push
xor
out
or
nop
loop
mov
jae
in
pop
push
sets
pusha
push
and
gs
jp
mov
push
mov
in
jo
aas
lds
ror
nop
pop
fidivrl
mov
add
repz
arpl
pop
andb
imul
aas
jmp
mov
mov
or
iret
addr16
out
arpl
insl
insb
dec
rorl
nop
and
int
es
lret
imul
outsl
out
mov
mov
inc
into
addr16
mov
scas
in
xchg
sub
mov
rorb
in
jne
add
addr16
sub
mov
sahf
insl
les
jg
push
loope
movsb
outsb
outsl
scas
mov
mov
ficompl
addr16
repnz
sbb
mov
in
stos
and
aaa
filds
inc
or
xchg
add
xchg
or
ds
sub
pop
inc
sub
xor
dec
fistps
bswap
mov
pusha
jl
aas
or
dec
pop
sbb
das
sti
addr16
push
jb
repnz
and
ss
pushf
aam
pop
arpl
mov
sub
pshufw
out
ja
stos
insl
sub
int
cmp
or
ljmp
sti
lcall
mov
addr16
inc
lds
adc
sub
in
test
ds
pop
pop
in
lcall
and
unpcklps
into
ja
jcxz
outsl
leave
imul
pop
iret
mov
outsl
jg
imul
dec
bswap
daa
and
cmp
sub
adc
sbb
mov
jae
in
xor
xor
sbb
test
out
inc
call
enter
ret
xchg
sti
cld
das
outsb
dec
dec
clc
outsl
add
sbb
cmp
scas
jle
insl
cmp
sbb
sub
pop
mov
xor
addr16
pop
mulb
mov
and
sbb
fisubrl
setl
xlat
les
push
xchg
mov
ficoml
scas
dec
in
test
ja
sqrtps
push
xchg
dec
push
mov
imul
xchg
xor
in
jge
sub
cvtpi2ps
push
mov
and
sub
mov
arpl
bnd
repnz
xchg
outsl
incl
inc
or
pop
add
mov
sub
leave
add
outsl
out
mov
sbb
insb
dec
and
lret
in
inc
push
inc
adc
imul
jp
lods
outsl
mov
or
dec
jnp
mov
movsb
pop
fisubrl
les
ja
aas
sarl
in
ja
sbbl
call
pop
loop
jbe
inc
outsl
fbld
pusha
fisttpll
gs
mov
cltd
push
mov
mov
test
dec
dec
testb
inc
outsb
push
inc
shrl
xor
pop
icebp
arpl
sub
fiaddl
imul
outsb
push
rolb
scas
pop
push
pusha
xor
mov
insl
out
pop
mov
adc
cmpl
xor
dec
pavgb
mov
imul
xchg
mov
adc
inc
scas
xlat
scas
arpl
jge
les
push
out
sbb
pusha
int
ds
daa
mov
ds
scas
push
mov
cmp
push
dec
dec
fisttps
ret
repnz
sub
in
inc
outsb
dec
or
sbb
loopne
scas
addr16
mov
or
jge
jmp
out
outsl
scas
pop
test
movq
or
arpl
call
xor
scas
adc
cs
add
scas
inc
imul
aad
pusha
mov
insb
and
ja
leave
push
pop
xor
pop
dec
fwait
mov
aaa
pop
lods
imul
mov
outsb
adc
xchg
int3
dec
addr16
and
inc
lds
andb
imul
test
aaa
pop
lret
sub
mov
call
add
scas
fmuls
add
push
pop
mov
cli
call
aas
lcall
imul
imull
fimull
push
or
insb
movsb
lcall
add
jg
ss
push
loopne
xorb
mov
pop
pusha
scas
fstps
jo
je
out
jmp
mov
repnz
imul
aas
adc
pop
adc
add
dec
sbb
icebp
cmp
and
pop
cmp
mov
jbe
sahf
or
scas
jo
movsb
insl
stc
push
repnz
sub
inc
mov
pop
lods
cwtl
repz
js
and
jae
popf
cwtl
xor
jg
mov
divps
aas
mov
pop
fcmovb
out
stc
inc
push
addr16
arpl
in
into
inc
inc
imul
dec
sbb
xlat
outsl
jne
jbe
outsb
inc
divl
repz
sti
bound
jnp
test
jbe
dec
cmpxchg
cmp
push
sbb
dec
leave
es
das
cmpsl
and
aad
cmc
mov
mov
addr16
scas
aad
iret
orb
lods
and
push
ds
cwtl
pusha
lret
jne
bnd
push
or
jnp
lock
mov
mov
jle
scas
js
loop
ja
cmovno
mov
push
js
sub
aam
ret
inc
inc
aaa
xor
aaa
push
pop
ds
and
jg
jae
mov
gs
outsb
xchg
ljmp
inc
cwtl
sub
outsl
mov
insb
lods
shl
mov
stos
rep
scas
jge
inc
shrb
adc
push
aam
or
push
xor
ja
jnp
rep
mov
icebp
mov
ret
xchg
test
pusha
dec
imul
jmp
and
mov
ret
cmp
inc
jb
aaa
paddusw
and
scas
insb
rolb
xchg
rclb
stos
inc
jmp
imul
andl
add
and
test
jge
dec
inc
inc
push
lods
xor
das
enter
push
push
jge
aaa
jb
lret
jo
lahf
shrl
cli
fildll
mov
mov
mov
popa
cwtl
popf
mov
sahf
insb
dec
out
ficompl
lret
ds
scas
sti
inc
fidivs
insb
ret
mov
sub
push
out
stos
aas
dec
pop
lahf
jge
jmp
pop
outsl
scas
fisttps
scas
lcall
mov
outsl
add
mov
xor
into
bound
jg
and
mov
popf
out
test
scas
inc
insb
lods
ja
inc
dec
outsb
fs
int
jmp
je,pt
sub
psllq
pop
scas
sbb
cmpsb
lea
cmp
push
dec
outsl
mov
insb
into
in
sti
lods
or
in
aaa
inc
jl
out
repz
test
aaa
js
xchg
popa
aaa
fistpl
and
mov
psubq
stos
mov
pusha
sub
push
sti
or
xchg
push
ljmp
mov
fbstp
cld
lcall
aad
cltd
insb
out
fisubrl
imul
lock
popa
cmp
shlb
push
jae
pusha
arpl
movsl
sahf
call
popl
push
jnp
mov
ds
cmpsb
cwtl
fs
repnz
jge
aad
in
mov
mov
pop
outsl
jg
xor
js
pop
imul
pop
sub
ds
adc
lods
or
pop
adc
mov
dec
clc
addr16
je
scas
jmp
sbb
push
mov
mov
pop
fsubrl
add
arpl
mov
inc
pop
into
imul
aas
inc
sub
jns
out
sbb
or
mov
lret
loope
addr16
testl
out
dec
push
lcall
fs
xor
inc
daa
fidivrs
test
inc
mov
loop
xorps
lcall
insb
ret
rorl
mov
imul
repz
sbb
scas
negl
dec
je
scas
xchg
inc
scas
scas
movsb
push
cmpsb
aad
in
xor
cs
jb
dec
mov
movsl
ja
xor
test
std
je
pop
pop
rclb
mov
ljmp
dec
mov
fs
mov
lret
xchg
fcom
stc
and
outsl
popa
icebp
leave
xor
fistps
popf
add
cs
push
cmp
loopne
loope
or
out
loop
fsubs
test
loopne
cld
clc
call
lea
hlt
ja
out
insb
enter
sbb
not
movsl
jns
mov
cs
sbb
inc
add
sbb
ret
mov
mov
repz
mov
jae
mov
arpl
mov
aas
xchg
scas
and
add
mov
xor
pop
xchg
subl
imul
scas
scas
loopne
aas
jl
push
out
or
sbb
mov
cmp
jae
and
int3
inc
adc
insb
rorb
fwait
loop
outsl
mov
sbb
dec
sahf
leave
scas
test
ss
in
and
pop
test
arpl
dec
inc
sbb
pop
loop
cmp
pop
push
addr16
data16
cld
adc
pop
lods
fistl
popf
pop
pop
cmp
push
adc
outsl
mov
inc
insb
cmp
pop
test
in
loope
ljmp
in
lcall
jp
outsb
xchg
sub
imul
and
outsl
sub
cmc
clc
aaa
mov
dec
fnstsw
pop
mov
or
int
insl
sbb
sbb
jmp
outsb
int3
adc
popa
or
mov
sub
imul
dec
pop
test
mov
imul
out
xchg
adcl
pop
sbb
outsl
hlt
pop
lret
xchg
jp
add
adc
stos
pop
std
adc
into
cmpsl
shrb
adc
xchg
aas
dec
mov
popa
in
insb
insl
int
outsb
loope
mov
pop
aad
adcb
outsl
fs
aas
and
daa
leave
testb
rcrb
adc
aam
inc
imull
outsl
jo
in
addr16
insb
push
adc
mov
sbb
imul
and
fcmove
or
je
pop
das
xchg
pop
jno
push
mov
fcompl
dec
loopne
pop
outsl
xor
pop
push
mov
jae
push
outsl
xchg
adc
aaa
arpl
andl
fsubrl
adc
outsl
mov
pop
lds
sbb
in
ret
xor
aam
adc
push
sbb
pop
jnp
inc
leave
sbb
mov
dec
xlat
xor
sbb
insl
sti
add
cmc
insl
pop
pop
das
rorl
sbb
or
in
sarl
cmp
cmp
xchg
push
pop
pop
jg
insl
out
pop
pop
in
sbb
pop
outsb
fcmove
fidivl
sbb
mov
jae
out
xlat
adc
out
jbe
mov
sub
xchg
push
dec
imul
in
adc
loopne
ljmp
sti
pop
cmp
mov
sbb
xchg
iret
lcall
adc
cmp
je
lods
push
imul
cmc
adc
sub
pop
push
inc
in
push
inc
inc
push
hlt
data16
and
add
loope
adc
xchg
ljmp
sbb
mov
jmp
push
scas
dec
sbb
outsl
mov
lret
test
push
out
sub
out
jp
and
addr16
imul
adc
rcll
pop
mov
ficomps
stos
cmp
mov
test
out
subb
insb
shll
pop
stos
les
outsb
sub
and
outsl
push
xchg
mov
xor
ja
outsl
and
mov
jle
pop
imul
and
das
das
mov
test
add
mov
add
sub
xchg
jnp
or
lahf
add
outsl
mov
mov
pop
sub
testb
mov
cmp
clc
mov
xor
lcall
mov
xor
lods
xchg
shlb
outsl
pop
cwtl
sahf
cmp
xlat
gs
cmpl
outsl
ret
push
stos
and
pop
aas
cwtl
pop
mov
xor
pop
inc
pushf
or
ret
popf
outsw
in
sbb
hlt
fldcw
jo
jle
and
pop
testl
daa
fsubr
cmp
pop
lods
ss
push
mov
mov
cli
xor
xchg
and
stos
lock
fisttpl
psllw
xchg
pusha
nop
cmp
daa
cmp
fcmovne
shl
mov
pop
adc
adc
scas
xor
sbb
dec
or
addr16
sarb
outsl
adc
mov
outsb
negb
jns
push
sub
xorb
mov
mov
repnz
js
aas
xor
pop
loope
push
pusha
outsl
imul
cld
outsl
inc
sbb
pop
mov
mov
test
add
dec
outsl
scas
test
adc
pusha
out
push
outsl
lea
mov
outsl
loop
mov
jno
adc
out
cmpsb
ficompl
lcall
inc
jg
jo
push
sub
xchg
jge
outsl
mov
out
jl
outsl
cmp
bound
mov
jg
lock
cmp
xor
jbe
jmp
push
movl
cmp
push
test
icebp
out
iret
push
jb
xlat
jle
fcmove
xchg
arpl
outsl
mov
iret
stos
inc
sti
pop
outsl
clc
test
icebp
sub
stos
nop
lock
xor
xchg
pop
inc
loope
mov
mov
ss
outsl
in
mov
dec
inc
arpl
repz
test
xchg
sbb
mov
sarl
xor
pushf
dec
shl
inc
pop
aas
or
test
shll
andb
bnd
mov
arpl
lds
sbb
outsl
sbb
dec
dec
fcoms
cmpsb
scas
cltd
es
inc
mov
arpl
jmp
sahf
or
ret
adc
push
push
cmp
mov
fs
pop
mov
fistl
loop,pn
mov
and
add
ja
in
das
mov
mov
mov
mov
stos
add
out
outsl
push
in
in
cs
outsl
pop
shrb
outsl
inc
pop
cmp
adc
adc
fs
sbb
outsl
mov
cmpsb
ljmp
push
jle
cmp
hlt
shrl
in
mov
sbbb
pop
jne
push
cmpsl
movsl
outsl
jmp
dec
das
arpl
mov
fs
stos
ljmp
pusha
mov
arpl
sub
dec
call
out
fisttpll
mov
shr
repnz
push
lret
cld
mov
loope
outsl
xchg
fstpt
lret
jl
push
sbb
jne
into
sub
xchg
push
xor
add
cwtl
mov
sbb
in
data16
dec
dec
sub
add
sbb
inc
aad
jbe
and
in
xor
xchg
out
mov
pop
movsl
cmp
je
inc
add
subb
jmpw
mov
jmp
jg
xor
push
cmp
mov
jno
xor
sub
ja
sbb
iret
dec
add
add
insb
inc
jmp
or
cmp
outsl
lods
movsl
jle
es
inc
jmp
and
mov
into
insb
aaa
mov
cmc
xchg
cli
push
pop
addr16
loopne
cmp
dec
icebp
pop
xchg
scas
das
movsl
push
outsb
or
jp
jo
mov
inc
imul
and
inc
lods
imulb
ja
push
dec
movsb
push
jmp
xor
mov
xchg
mov
fstpl
sbbb
out
rclb
test
jne
jge
jp
subb
rclb
cmp
jge,pt
xchg
xchg
sub
gs
out
js
in
pop
cmp
imul
mov
call
sub
imul
pop
aas
ljmp
cmp
out
mov
test
pop
xor
pop
xchg
lods
mov
push
pop
lea
and
je
loope
mov
inc
jmp
mov
shlb
ljmp
clc
inc
mov
iret
sub
ret
sub
cli
push
in
jnp
jns
fimuls
mov
or
cmp
pop
pop
adcl
mov
jae
dec
dec
les
leave
rolb
fs
adc
xchg
in
push
mov
call
pop
mov
movsb
sarl
xor
sub
add
fbld
sbbb
pop
out
add
cmp
pop
in
sysenter
pop
or
xchg
call
popa
cltd
dec
pop
xchg
or
dec
or
test
mov
xchg
jmp
into
lret
mov
jl
xchg
outsb
cmp
andb
adc
insl
cmp
fnstsw
cmpsb
cmpsb
cwtl
fldt
cmp
inc
adc
inc
int
jge
mov
stos
call
inc
jmp
jmp
rorb
aaa
stos
imulb
xlat
dec
stos
lahf
push
sarb
cld
imul
test
sub
mov
xor
insl
gs
imul
jle
test
cmp
mov
push
stos
out
xor
mov
pop
insl
mov
or
loopne
lahf
adc
lods
aas
scas
add
jl
adc
pop
push
minps
sbb
ret
negb
out
lahf
ds
lds
inc
jge
sub
sub
sbb
xor
insb
sbb
sub
call
jmp
ljmp
imul
jl
adc
pop
insl
add
xchg
inc
mov
jecxz
adc
arpl
or
in
push
hlt
xchg
out
call
pop
notb
cmp
sub
xchg
mov
test
adcb
inc
dec
ret
imul
inc
ss
int3
cmp
loop
mov
lock
fs
sbb
in
stos
jmp
sub
xchg
or
and
sub
lahf
xor
mov
jge
fs
cltd
sub
mov
bound
mov
jne
jae
xchg
pop
push
scas
dec
mov
outsl
mov
mov
inc
xchg
mov
addr16
dec
gs
jmp
aas
adc
and
xor
dec
lods
sbb
bound
or
shl
pop
or
and
adc
adc
add
shll
mov
sbb
fsubp
roll
dec
pop
xchg
dec
movsl
xor
sbb
dec
lcall
xchg
add
xor
out
sbb
cld
call
jnp
in
jg
or
xor
cmp
imul
push
les
dec
pop
std
mov
xor
mov
inc
in
push
outsb
jb
inc
push
fistps
scas
ret
sbb
icebp
stos
in
lahf
lods
add
fidivrs
fisttpll
pop
pop
inc
imul
das
insb
call
jne
push
xor
stc
pushf
test
inc
insb
scas
mov
std
lcall
scas
int
testl
repnz
mov
aad
mov
pop
or
out
sub
lods
neg
sti
out
lods
in
xchg
fdivrl
sahf
jbe
jo
mov
sbb
jge
inc
add
xchg
pop
fcmovbe
int
dec
imul
inc
mov
data16
shll
movsl
xchg
inc
or
stos
adc
in
scas
mov
pop
pop
mov
in
and
mov
push
rclb
pop
mov
pushf
ret
leave
imul
xchg
out
mov
popf
testl
lahf
sbb
adc
inc
test
int
idivl
das
and
adc
in
adc
add
loopne
imul
lret
fs
jae
insl
jb
call
mov
jg
pop
xor
rcrb
lock
rclb
adc
out
gs
push
mov
in
ds
mov
fimuls
call
and
xchg
scas
test
movsw
dec
xor
mov
into
insl
dec
xchg
mov
fstp
push
imul
inc
outsl
cltd
lods
call
dec
xor
sub
stos
out
cmp
pop
push
ljmp
sub
fcoml
mov
scas
fdivl
and
sbb
cmp
fisttpll
mov
in
call
cmp
stc
loope
into
cmpl
pop
enter
in
mov
pop
cltd
add
ret
inc
fucomip
insb
and
cmp
dec
ret
xchg
dec
arpl
push
rorl
ss
jb
push
push
iret
or
cmpsb
out
add
rclb
pop
sbb
in
in
shl
sub
adc
stc
xor
ljmp
dec
faddl
imul
xor
loopne
fucomip
sbb
pop
add
push
aas
loopne
in
xor
ss
fimull
pop
sti
in
push
pop
test
das
sbb
push
lret
arpl
cs
mov
jno,pt
xchg
mov
outsb
sbb
sbb
and
mov
and
pop
sarb
sahf
or
push
and
mov
mov
dec
lea
cld
sarb
dec
sbb
adc
addr16
in
outsl
pop
push
sti
lret
outsl
jb
sub
lea
fs
add
mov
arpl
fsubrl
sub
sbb
and
scas
je
push
sbb
dec
mov
test
add
cmovno
insl
cwtl
xor
dec
outsl
or
adc
push
stos
outsl
adc
xchg
mov
and
ret
imul
pop
cmp
inc
outsl
imul
ds
jne
pop
add
cmp
xchg
xchg
loopne
inc
outsl
or
and
fists
outsl
fwait
pop
std
idivl
add
in
cli
outsb
int3
outsl
inc
data16
hlt
mov
adcb
imul
aaa
xchg
outsl
dec
repnz
fstpt
sub
pop
pop
mov
ret
incb
and
adc
subl
rcrb
mov
xchg
outsb
outsl
adcb
inc
outsl
test
cmp
outsl
data16
leave
cs
popa
mov
push
aad
enter
call
stc
sub
stos
lods
add
addr16
jnp
jp
outsl
mov
pop
into
popf
loopne
and
lods
jnp
in
gs
repnz
cmpsb
in
jl
mov
sbb
push
test
scas
dec
mov
mov
mov
sti
in
les
push
movsb
ja
jle
das
jge
addr16
lahf
pop
outsl
fbstp
popf
loope
std
push
xchg
dec
test
pop
pop
inc
lret
js
and
xchg
cmpsb
decb
push
add
cwtl
mov
inc
jmp
pushf
fsubrl
pusha
outsl
or
xor
and
mov
mov
cwtl
cmpsb
push
pop
fsub
mov
outsl
fstpl
in
dec
add
loopne
fisubrl
mov
ss
call
mov
adc
push
pop
addr16
add
inc
out
mov
cmpsl
in
add
dec
ljmp
loope
sub
and
into
imul
dec
push
pop
outsl
mov
dec
jae
test
xor
push
mov
mov
and
out
cmp
push
lret
dec
inc
addr16
xchg
sub
outsl
mov
sub
jnp
leave
out
outsl
push
dec
loope
iret
sbb
add
xchg
cmp
inc
cmc
mov
mov
les
pop
sahf
pop
testl
inc
aam
pop
xor
lret
or
shlb
jo
mov
aam
mov
lock
ja
lret
repz
cs
adc
outsl
rol
dec
cmp
xor
cwtl
xchg
mov
inc
pop
push
ljmp
xchg
sbb
mov
jnp
cld
xor
mov
jns
repnz
ljmp
push
mov
fdivs
mov
jecxz
ljmp
inc
jo
mov
pop
js
repnz
jns
push
inc
dec
lods
je
iret
and
arpl
outsl
push
xchg
outsl
aad
cwtl
call
leave
cmp
rcrb
inc
es
pop
jb
dec
jmp
clc
in
mov
fsubrp
sti
cmp
push
cmc
mov
in
push
enter
add
xor
add
mov
outsl
aas
fs
aaa
notl
outsl
in
mov
loop
outsl
jg
xor
sub
inc
ss
push
outsl
cmpsl
je,pn
ret
inc
outsl
aas
lods
data16
popa
leave
inc
outsl
mov
aam
popf
fidivrs
sbb
inc
dec
add
xor
push
mov
and
cmp
xlat
or
sub
jle
sbb
lea
fidivrl
lret
in
pop
outsl
adc
or
sub
xchg
jns
test
sti
and
outsl
cwtd
cmpsl
add
fdivp
or
mov
sbbl
adc
into
mov
dec
lods
or
les
adc
add
inc
and
mov
dec
popa
bound
or
aam
lods
mov
mov
pop
lds
outsl
repnz
cmp
mov
cmp
or
push
dec
cld
xor
imul
ss
stos
and
add
dec
jo
imul
arpl
mov
outsl
sbbb
lods
push
xchg
mov
outsl
iret
xchg
xor
sahf
add
leave
mov
in
fbld
xchg
jge
jmp
mov
jecxz
les
int
cli
ret
mov
dec
clc
stc
jp
xor
fnstenv
mov
rep
push
js
popf
imul
dec
mov
outsl
xor
xchg
call
mov
outsl
pop
or
jno
push
mov
dec
outsl
inc
jle
push
pop
cs
rcrl
inc
stc
mull
aad
and
mov
pop
pop
fsts
adc
xchg
or
inc
mov
lahf
and
jle
mov
jno
clc
mov
cwtl
or
arpl
fwait
lea
jmp
push
addr16
into
jae
outsb
jl
sbb
xor
mov
jne
jns
shrb
rorb
stos
push
das
outsl
adc
or
add
popf
cmp
in
jge
xor
dec
inc
push
in
ja
push
mov
jnp
insl
nop
mov
shl
bound
cmpsb
out
or
xchg
into
outsl
hlt
mov
leave
pop
push
pop
in
outsl
out
and
je
outsl
adc
loopne
pop
cmp
sbb
adc
mov
mov
mov
cmp
mov
ljmp
mov
and
lret
sbb
outsl
add
imul
inc
mov
outsl
xor
rcr
ss
cmpl
cmp
outsl
fimuls
add
stos
scas
outsl
dec
push
fs
sbb
repnz
outsl
lcall
mov
lahf
daa
sub
xchg
shrb
dec
nop
push
outsl
scas
adc
das
sub
pop
sti
inc
aad
cmp
ret
out
jns
inc
outsl
xor
pop
in
xchg
out
cmpb
fstl
lahf
loope
aad
outsl
xchg
xor
inc
xor
add
xor
mov
jle
outsl
push
lods
mov
sbb
jmp
xchg
mov
jno
pop
mov
aad
pop
outsl
cmp
add
out
pusha
cmp
sbb
push
or
inc
inc
les
push
cmp
xchg
out
fs
jge
dec
fldenv
dec
cltd
je
adc
shlb
enter
mov
mov
pop
mov
jecxz
mov
add
outsl
and
int3
push
push
sbb
sub
lret
insl
dec
pop
xchg
rep
test
loop
imul
fisubrl
leave
or
inc
jle
cltd
jne
push
mov
inc
loop
stos
jle
mov
or
push
ret
jle
jbe
aas
popa
repnz
mov
rcrl
dec
jge
sbb
jecxz
jo
cmp
cs
gs
cli
outsl
popa
loope
decl
add
into
subb
fcomps
std
and
fcmovne
mov
popa
fstpl
or
in
gs
adc
leave
int
lods
into
outsl
mov
cmc
sarl
and
cmp
or
icebp
test
add
fdiv
pusha
mov
enter
es
sbb
scas
stos
cs
fwait
shlb
loopne
dec
sahf
hlt
pop
fwait
negl
scas
das
cmp
fisubrs
mov
adc
shrb
xchg
fdivrl
adc
pop
xor
jecxz
insb
push
pushaw
bound
insl
and
subl
mov
arpl
test
into
fs
lret
divl
adc
sub
int
pop
mov
cs
mov
testb
mov
push
cmpsb
pop
lock
push
pop
gs
mov
xchg
ds
mov
sbb
subl
jle
adc
mov
pop
inc
int3
mov
js
adc
imul
sub
cmpl
iret
fcompp
cmpsb
das
or
adc
ds
xchg
jl
sub
lahf
pop
divl
mov
adc
mov
jnp
addr16
lods
push
mov
jl
add
stc
rcr
mov
sbb
sbb
adc
insb
movsl
inc
aaa
xchg
rcr
movsl
pop
xchg
test
es
mov
loopne
and
scas
mov
dec
int
ret
insb
loopne
icebp
rolb
xchg
into
imul
push
call
movsl
jne
push
dec
mov
out
push
dec
mov
sub
scas
je
mov
xchg
test
shr
cmp
mov
xor
push
sbb
les
testb
call
mov
pop
imul
imul
aaa
nop
ds
mov
sahf
jmp
lret
mov
push
sbb
inc
mov
xchg
data16
xchg
xchg
lcall
inc
pop
jge
jle
in
sahf
adc
scas
jge
jecxz
repz
and
or
push
paddd
xchg
in
dec
adc
js
test
sub
sub
cltd
rclb
and
loopne
lock
sub
in
movsb
insl
sbb
cmpsl
push
xor
jmp
into
loopne
mov
notb
gs
call
shlb
xor
icebp
cmp
mov
scas
addb
std
inc
inc
je
sbb
cld
xorb
sub
data16
dec
jns
sbb
sbb
push
xor
pop
pop
icebp
movsb
loopne
and
shll
dec
outsb
aas
out
jg
adc
pop
push
lret
sbb
cmp
dec
jmp
inc
rcrb
xor
jle
repnz
jno
in
sub
in
cmc
mov
xchg
lods
data16
loopne
xchg
jl
mov
adc
cmp
sbb
ds
ja
sbb
jle
sub
frstor
add
es
subb
inc
jmp
aam
inc
ret
fists
cmpsl
jl
movsb
add
ljmp
push
loopne
outsl
rorb
and
scas
push
aad
mov
outsl
dec
jle
shrl
pop
arpl
push
loopne
push
insb
sub
subl
fstpl
out
jg
arpl
es
sbb
inc
call
ds
sub
insl
mov
addr16
mov
jae
mov
cwtl
ss
inc
mov
jmp
stos
ficomps
xchg
imul
inc
inc
jmp
and
int3
rcrb
xor
sbb
cld
sub
leave
hlt
mov
xchg
sub
sub
pop
inc
inc
mov
mov
inc
mov
das
fidivs
pop
pop
outsl
in
stos
repz
shll
aad
loopne
pop
mov
stos
mov
into
sub
inc
pushf
popw
lea
clc
sub
mov
sub
mov
popf
push
jl
xchg
pop
shlb
jo
mov
sub
rcrl
ror
xor
pushf
aas
sahf
adc
push
add
jp
sarb
imul
std
rclb
jg
shlb
mov
cli
insb
imul
xchg
push
fwait
sub
or
outsl
fwait
jae
push
sti
xchg
inc
aaa
mov
inc
fcomps
lods
loopne
inc
adc
xchg
cmc
stc
into
pop
and
bound
push
xchg
mov
cmp
sbb
or
pop
jno,pt
push
fucomip
or
jle
movsb
subb
test
mov
inc
push
js
out
daa
cmp
xchg
mov
lret
cmp
cmp
shlb
pusha
imul
mov
movsl
dec
push
mov
xchg
vmovddup
sbb
sbb
jb
fimull
out
dec
pop
das
fs
call
hlt
insb
cwtl
repnz
aaa
mov
or
mov
dec
add
mov
inc
lds
insl
in
lret
lds
add
sub
jl
loope
mov
jl
ret
rolb
dec
push
mov
mov
loopne
loopne
out
cmc
data16
idiv
add
adc
rclb
idivl
scas
sub
or
dec
fchs
mov
dec
adc
pop
scas
loopne
inc
outsl
sti
push
push
mov
imul
cld
jmp
orb
mov
adcl
pop
dec
dec
lds
fmuls
push
lret
scas
gs
ljmp
mov
pop
sub
fprem1
pop
push
loope
jb
add
shlb
fimuls
scas
orb
or
xchg
sub
jo
fistpll
sahf
orl
pop
mov
mov
out
loope
push
pop
lods
out
inc
test
sar
out
xchg
jmp
mov
cmp
enter
daa
fs
outsl
inc
movsb
js
in
pop
inc
lods
fwait
hlt
mov
cmpsb
mov
pop
dec
cmp
dec
outsl
int
mov
cmpsl
jae
out
shll
pop
decb
outsl
push
stc
fimuls
js
push
lea
imul
inc
popf
inc
loop
jg
pop
outsb
std
fisubrl
sub
cli
or
cmp
xchg
jbe
ja
mov
daa
test
fisttpll
lds
enter
jl
mov
lcall
aaa
lods
mov
imul
cwtl
jle
adc
sub
mov
adc
hlt
jns
ret
sub
and
xor
outsl
in
out
cmp
sub
xadd
leave
xor
mov
and
mov
imul
inc
inc
mov
aad
cmp
outsl
fimull
mov
xor
outsl
mov
mov
stos
outsl
in
bound
pop
lods
scas
dec
hlt
pop
push
outsl
adc
mov
daa
lcall
dec
pop
cmp
mov
mov
leave
inc
in
dec
jg
test
push
outsl
hlt
pop
push
mov
mov
outsl
test
mov
jnp
mov
stos
imull
shll
mov
dec
xchg
icebp
test
push
push
adc
pop
daa
cmp
jg
lcall
jne
sub
mov
es
jb
cmpsl
adc
xor
mov
ds
int3
pop
xchg
aas
xchg
push
out
call
outsl
in
jbe
jge
adc
outsl
or
inc
mov
or
daa
out
jae
inc
adc
enter
cmp
inc
loop
arpl
or
sub
jb
inc
inc
outsl
lcall
scas
xchg
arpl
dec
xor
mov
loopne
stos
sarb
enter
sbbb
mov
adc
push
jle
ja
enter
loopne
loop
lahf
or
mov
cltd
xchg
out
mov
cmp
outsl
ret
shlb
adc
mov
insl
popa
les
lods
mov
mov
dec
mov
xchg
idivb
outsl
push
adc
jo
mov
flds
divl
sub
aaa
mov
push
rcrl
push
outsl
jnp
mov
adc
lret
sarb
lods
arpl
dec
scas
out
outsl
orl
and
insb
or
push
xlat
sti
mov
imul
push
loop
and
shll
or
jle
or
push
addr16
xchg
ret
dec
js
jo
lods
pop
popa
es
outsl
dec
test
popl
repz
outsl
jecxz
test
mov
fildll
pop
mov
and
jle
cmp
push
cmp
cmp
loop
inc
cltd
outsl
mov
lds
pop
cli
pop
pop
pop
imul
jo
in
xor
inc
sti
aas
rol
dec
fisubl
xchg
and
lods
xor
mov
mov
outsl
rcrl
push
out
addr16
jg
outsl
mov
xlat
cli
jp
insb
sti
lea
rclb
outsl
mov
pop
outsl
pop
adc
cld
pop
xchg
outsl
pop
xchg
mov
pop
stc
movsb
lret
xor
ret
outsb
pop
push
xlat
fs
inc
arpl
pop
fwait
in
outsl
jmp
pop
sub
in
or
xchg
outsl
mov
pop
cmpsb
mov
ficomps
jle
inc
mov
cmp
sub
lcall
mov
addb
fdivp
xchg
stc
outsl
xchg
fnsave
adc
pop
arpl
xchg
outsl
lahf
inc
xchg
sub
out
xchg
and
jge
sbb
mov
scas
lea
gs
stc
in
cmpsb
outsl
rorl
sbb
fs
scas
mov
in
sbb
in
stos
aas
pusha
pusha
sbb
mov
cwtl
call
cmc
ret
cld
xor
inc
aas
insb
and
out
mov
imul
fistl
cmp
int3
addr16
out
repz
das
pop
xchg
lret
popf
xor
test
popa
xor
mov
add
lret
test
imul
add
int
outsl
cmp
and
adc
sbb
mov
out
mov
pop
cld
inc
lods
scas
adc
add
lock
movsb
pusha
nop
outsl
sub
xchg
xor
in
mov
mov
ljmp
mov
pop
fidivrs
aam
les
outsl
frstor
out
outsl
xchg
pop
mov
add
push
jle
scas
fcomi
cltd
cmp
loopne
popa
loop
push
outsl
mov
cmpl
and
lret
mov
sbb
jg
ds
in
outsl
jp
or
repnz
adc
and
xor
cmp
push
inc
shrl
clc
inc
outsl
imull
imul
out
jmp
aaa
std
outsl
lret
cmp
pop
mov
out
ss
stos
sub
popa
push
fs
mov
pop
sub
mov
xor
push
outsl
xor
lret
shrb
hlt
aas
imul
push
mov
cmp
mov
outsl
inc
lock
adc
and
and
popf
sub
scas
dec
in
pop
push
loope
pop
outsl
inc
cmp
scas
xor
mov
stos
rcl
dec
pop
sbb
hlt
movsl
sbb
testb
ret
fmulp
popa
loopne
dec
or
les
sbb
sbb
gs
adcl
xlat
jl
mov
aas
inc
scas
jnp
das
je
mov
lock
pop
insl
inc
mov
outsl
mov
jg
ficoms
in
cmc
pshufw
aas
cmpsb
sbb
xor
pop
es
and
xor
ss
jns
cs
popa
ret
mov
vhaddps
fldl
inc
aaa
notl
stos
mov
in
adc
mov
shlb
cwtl
repz
outsl
lret
outsb
cmpsb
stos
lods
cmpb
shrb
mov
aas
pop
fcmove
jge
jle
clc
jb
popf
cmp
xchg
sbb
jno
jbe
inc
daa
mov
jle
pushf
mov
xchg
add
mov
testl
and
and
xlat
mov
aas
test
xor
mov
push
add
stos
lods
mov
mov
pop
xor
mov
rep
outsl
inc
enter
xor
push
mov
mov
mov
outsl
ja
imul
outsl
fs
xchg
movl
adc
mov
pop
sbb
lahf
outsl
sbb
iret
in
outsl
ja
lods
push
sub
and
hlt
mov
jg
ret
fisubrs
lods
rsm
pop
call
outsl
je
pop
jge
push
mov
addr16
push
out
pushf
bound
cwtl
cmp
aas
xor
xor
dec
mull
or
fidivrs
or
js
mov
in
shrb
iret
cmc
adc
fadds
sub
lds
xor
jecxz
mov
js
cmpsl
shrl
cltd
or
cmp
stc
jg
jl
pop
fmul
outsl
mov
xor
out
jecxz
orl
sahf
add
loop
stc
repz
adc
mov
sbb
pop
fstpt
cli
or
imul
mov
test
outsl
cmp
add
and
adc
lds
arpl
loope
in
inc
ret
sbb
mov
adc
outsl
mov
arpl
testl
push
iret
stos
inc
out
xor
sub
clc
xchg
out
lret
and
xor
aam
cmp
pop
rorb
idiv
sti
test
cmp
rcr
jle
mov
mov
xchg
cmp
popf
jecxz
sub
inc
shl
clc
jns
das
lcall
adc
dec
inc
outsl
imul
lock
cmpl
jae
jmp
das
rcl
pop
movsl
scas
mov
in
into
pop
dec
loopne
mov
inc
insl
mov
ja
xor
jle
imulb
ficomps
std
in
shrb
mov
inc
test
and
inc
add
xchg
push
dec
fidivrl
std
add
mov
dec
jno
add
xor
loop
jmp
sub
push
data16
mov
xchg
xor
call
mov
xor
cmp
jle
adc
loope
adcl
sbb
cmp
lahf
push
inc
or
sbb
stos
int3
addr16
jbe
add
xchg
pop
pop
xor
jne
push
out
imul
data16
loopne
and
outsl
xchg
add
mov
ljmp
jle
out
cmp
cli
pop
xchg
inc
mov
push
lock
and
dec
adcl
aaa
imul
lret
dec
movsb
cmpl
pop
fs
inc
call
das
mov
imull
sub
sbb
rcr
and
push
das
dec
fstps
nop
mov
repz
pushf
call
mov
loopne
push
std
xchg
inc
in
push
xchg
mov
lock
sbb
repz
mul
mov
shl
dec
test
mov
cmp
push
inc
fdivl
call
scas
das
add
mov
fdivrl
pop
dec
insb
xor
cmpsb
inc
push
data16
mov
jae
in
mov
cmpsb
sbb
sbb
and
out
dec
sub
insb
lret
jmp
dec
loopne
lahf
and
sbb
mov
dec
inc
and
mov
cltd
mov
lret
sub
or
in
dec
inc
add
add
pop
xchg
jmp
ficompl
mov
hlt
jno
adc
cmp
push
cmp
shrb
loopne
aas
ja
in
scas
mov
int
xchg
lahf
outsl
push
call
ror
mov
mov
icebp
dec
cs
or
fisubrs
mov
push
fwait
pop
adc
test
sub
in
dec
mov
les
jmp
arpl
cmpl
mov
add
and
in
insb
sbb
push
das
dec
adc
rol
inc
add
ds
pusha
and
call
js
mov
out
test
jg
cs
push
shrb
pop
and
cmp
call
jns
xchg
mov
cmp
loopne
popf
xor
mov
shrb
mov
sub
movsl
stos
imul
mov
mov
sbb
in
and
add
mov
or
lahf
dec
stos
sub
cmpsl
push
mov
dec
aad
dec
jle
and
cmc
imul
pop
inc
loopne
xchg
adcb
aam
ds
call
dec
sbb
inc
or
out
sub
or
inc
cmp
cmpsb
pop
cmpsl
and
gs
pushf
pop
sub
outsl
and
punpcklbw
in
mov
outsb
sub
mov
shrl
jle
mov
fisttps
imul
jecxz
jo
pop
addr16
push
pop
sub
dec
js
scas
scas
iret
push
lock
mov
insb
decb
sahf
mov
jp
out
int3
cmp
push
mov
pop
fimuls
ret
pop
iret
aad
pusha
rorl
in
loopne
adcl
add
out
xorb
add
cmp
stos
mov
sbb
jns
shl
lret
xorl
arpl
ret
bound
sbb
cmc
dec
xchg
ljmp
int
call
imul
jbe
insb
dec
jne
and
inc
cmp
sahf
pop
cwtl
int3
lock
outsl
mov
mov
push
sbb
push
sbb
pop
pop
aas
sub
push
xchg
sbb
add
inc
test
and
and
cmpsl
loopne
inc
cmp
xor
cmp
mov
xor
fchs
ror
sub
push
mov
sub
inc
daa
clc
aam
jns
lods
fsubl
inc
ss
pusha
rol
fisubrs
stc
rcl
mov
inc
inc
dec
shlb
popf
adc
push
int
sub
outsl
cltd
call
xchg
repz
mov
xor
loopne
xlat
imul
nop
and
xor
lea
push
repnz
addr16
push
cmc
mov
sbb
jmp
mov
stos
xchg
sbb
push
ljmp
cld
stc
or
fs
jp
scas
xchg
fnstenv
inc
and
and
in
xchg
shl
ret
jno
cmp
cmpsl
fstpt
mov
sbb
rcrb
scas
mov
mov
outsl
add
push
add
mov
sbbb
pop
bound
jno
imul
jns
xchg
cmp
test
push
das
das
shll
mov
cmp
stos
mov
xchg
push
dec
sti
scas
pop
dec
sbb
sub
into
push
call
shlb
dec
imul
inc
and
mov
lret
jmp
daa
loope
mov
mov
mov
lods
sarb
adc
cmpsb
je
lret
cmpsl
shl
push
jp
fisubs
add
dec
outsb
jo
push
add
std
mov
mov
aas
scas
jo
lcall
enter
out
hlt
sbb
out
test
xlat
std
dec
inc
jge
inc
lods
inc
inc
sub
lahf
add
pop
xchg
lret
flds
popa
leave
loopne
neg
ljmp
push
orb
adc
aas
arpl
jmp
jno
inc
rcl
divl
outsl
call
loopne
ljmp
jb
sub
stc
push
cltd
fisubl
dec
mov
es
pop
pushf
out
lahf
imul
movsl
insl
repnz
cmp
inc
out
xchg
sub
xchg
mov
push
imul
or
jle
and
inc
mov
arpl
fs
sbb
in
rorb
sub
fldenvs
xchg
inc
popa
adc
mov
dec
jmp
push
dec
pushf
cld
rclb
jl,pn
mov
addr16
add
bound
jge
xchg
ss
test
leave
shrb
shl
insl
xor
xchg
and
cs
xchg
loop
loopne
mov
adc
into
icebp
sub
and
daa
jne
mov
push
sbb
movb
push
shrb
dec
roll
call
hlt
sub
std
cmp
sbb
filds
loopne
icebp
sub
insl
adc
jns
pop
aas
test
jb
sub
cmp
pop
sub
lret
dec
loope
movsb
mov
cs
lret
add
xlat
cmp
loope
hlt
pop
cmp
insb
iret
mov
add
das
ja
adc
into
testb
dec
jns
push
into
aas
repz
aam
mov
jl
rclb
js
xchg
ljmp
rcrb
mov
fmull
mov
ljmp
movsb
xchg
scas
out
call
fcomp
sbb
or
shrb
lcall
dec
lea
xchg
or
xlat
nop
push
xrelease
loopne
jbe
push
fsub
xor
pop
call
jl
cmp
jge
lret
sub
push
mov
fs
jge
inc
out
hlt
shrl
and
insl
imull
jp
rolb
cwtl
push
movsl
add
std
cmp
jnp
push
data16
jbe
popf
xchg
and
adc
enter
dec
xor
popf
stc
arpl
push
ljmp
jo
mov
pop
mov
dec
aas
cwtl
inc
and
out
xor
mov
push
fsubrs
loope
insb
mov
loop
mov
mov
cmc
outsl
ja
scas
inc
outsl
add
xchg
pop
sbb
std
out
imulb
jno
stos
pushf
xchg
cmpsl
pop
push
jecxz
ljmp
mov
int3
push
outsl
out
es
daa
sbb
xchg
outsl
lds
mov
aas
add
lgs
imul
mul
dec
arpl
int3
inc
outsl
lods
fstl
sub
outsl
daa
testb
and
inc
outsl
xor
sub
mov
dec
mov
dec
cmc
std
out
outsb
icebp
popa
imul
xchg
or
adc
mov
int3
mov
in
jl
andl
or
outsl
fidivrs
les
or
add
adc
dec
jbe
in
inc
push
arpl
outsb
mov
cld
inc
sub
and
outsl
inc
adc
mov
adc
pop
pop
in
outsb
mov
lock
add
jge
scas
mov
pop
call
and
stc
dec
adc
push
in
xchg
add
fcompl
lahf
aas
dec
nop
cmp
cmp
adc
push
insb
xchg
inc
and
inc
insl
sbb
movsl
mov
testl
arpl
cmpsl
cmp
mov
jnp
mov
imul
idiv
dec
jmp
jnp
outsb
movsb
pushf
outsl
fcoms
push
in
imul
sub
mov
jecxz
pop
es
daa
aaa
sub
mov
out
add
out
mov
sbb
dec
aas
test
mov
roll
pop
outsl
adc
pop
sbb
push
movsl
add
cld
outsl
andb
dec
dec
loope
call
add
out
pop
outsl
jne
aad
pushf
push
push
cmpsl
outsl
data16
incb
jno
cmp
sahf
dec
push
outsl
clc
mov
xor
outsl
test
mov
outsl
mov
dec
jo
decb
sub
arpl
lods
ds
outsl
mov
add
insb
outsl
mov
icebp
clc
xorl
outsl
push
mull
xchg
outsl
sbb
jne
out
lods
adc
orb
inc
xor
cmpsb
outsl
xchg
rcr
adc
in
out
cmp
sbb
imul
lret
test
lock
mov
inc
movsl
and
rclb
push
push
adc
popa
sbb
imulb
jb
cmpsb
inc
dec
mov
outsl
lret
iret
out
popl
icebp
cmp
ss
pop
outsl
xchg
xor
aaa
cltd
out
movsb
subb
xorb
mov
sub
sub
popf
aad
xchg
cmp
mov
dec
inc
cmp
imul
and
inc
scas
outsb
xchg
outsl
das
add
ret
cld
mov
pop
addr16
std
dec
adc
pusha
pop
ja
xchg
pop
subb
addr16
scas
sub
dec
loop
mov
mov
insl
addr16
outsl
or
push
push
push
mov
jbe
or
out
test
sbb
push
cmpsb
mov
xor
popa
dec
jge
imul
rep
inc
cmp
and
inc
es
data16
jge
dec
fdivrl
imul
pop
std
push
outsl
lock
fs
outsl
push
loop
stos
in
and
mov
lods
ret
add
mov
push
outsl
imul
fldt
lret
sub
push
xchg
out
in
cmpsb
arpl
fildl
imul
sbb
push
imul
sbb
sub
outsl
psubsb
xchg
outsl
add
jne
jle
push
pop
or
das
dec
subb
cmp
sahf
clc
push
outsl
repz
subl
push
ret
daa
or
dec
js
xchg
push
and
gs
and
dec
or
adc
mov
enterw
xchg
lea
je
sti
in
push
repnz
pop
mov
insb
xchg
mov
addr16
arpl
incb
cmp
lock
xorb
ss
adc
inc
sub
jne
or
cmp
inc
lock
inc
inc
iret
setnp
call
outsl
xor
xchg
dec
sti
imul
jmp
xchg
cmp
ljmp
xor
test
jo
sbb
xchg
xor
mov
add
dec
hlt
outsl
or
iret
lret
mov
rcrb
mov
jmp
dec
imul
pop
pop
outsl
pop
xchg
pop
pop
lock
or
mov
adc
jbe
xchg
shrl
jl
add
addr16
ljmp
cltd
add
outsl
lcall
sub
xchg
outsl
outsl
mov
pop
xor
outsl
jb
push
dec
les
fwait
ja
outsl
nop
movsl
xor
outsl
xlat
dec
xchg
xchg
push
xchg
out
mov
sbb
out
arpl
js
mov
aaa
dec
xlat
arpl
mov
add
dec
adc
pop
insb
mov
daa
sub
sbbb
test
gs
mov
inc
push
fidivs
imul
cmp
inc
lock
outsl
cli
xchg
out
mov
lret
lcall
push
jg
cmpsb
outsl
dec
sub
inc
mov
bnd
push
sub
idivb
aas
cwtl
ja
test
aas
cmpsl
xor
mov
mov
mov
gs
leave
jle
xor
pop
ljmp
push
sub
shrb
push
leave
outsl
mov
adc
dec
loope
call
xor
jp
pop
ljmp
mov
addr16
adc
mov
aad
imul
sbb
test
mov
sub
loopne
jne
pop
dec
sbb
adc
ljmp
jns
movsb
cmc
outsl
push
jmp
mov
push
cmpb
out
and
jno
sti
outsb
dec
dec
outsl
out
jp
das
xchg
aad
dec
push
adc
dec
outsl
pusha
data16
andl
xor
push
in
inc
jp
imul
adc
hlt
mov
repnz
dec
popa
jl
imul
outsl
cmp
lock
and
in
mov
adc
cli
loopne
mov
popa
dec
dec
sbb
mov
lahf
loope
insl
cli
jb
call
push
jo
test
fxch
cmpb
test
dec
and
xchg
mov
xchg
lock
pop
shrb
cmp
outsl
xlat
in
daa
outsl
les
inc
push
and
ret
sbb
lret
sub
push
outsl
push
sbb
in
pop
or
in
push
and
xchg
outsl
xchg
loopne
rcrl
lea
out
cmp
fisubs
add
jmp
dec
popa
cs
test
mov
dec
sub
nop
and
data16
shl
lahf
fs
jb
int
mov
icebp
std
sub
push
insl
pop
outsl
cmp
inc
push
lret
stc
outsl
and
or
push
push
xchg
incb
pusha
fbld
mov
push
sbb
xor
test
jge
lock
dec
inc
lds
adc
cmp
inc
inc
or
jne
cmp
shrb
dec
pop
daa
add
outsl
inc
or
dec
imul
iret
fwait
loop
and
cmp
in
cltd
popa
jg
test
das
cld
ss
in
lods
arpl
cmc
xor
inc
das
mov
jle
mov
lods
fsubrs
cld
test
mul
shr
outsl
sbb
movl
das
dec
jle
call
ret
sbb
aad
jle
pushw
mov
push
dec
addr16
insb
cwtl
push
or
pop
mov
sbb
sub
jle
pop
dec
push
rorb
lock
jle
push
cmp
and
xlat
mov
inc
pop
mov
lds
lock
cmc
outsl
mull
imul
jge
lret
js
mov
push
adc
int
ja
idivb
addr16
out
jecxz
adcb
out
push
push
std
push
inc
jg
lcall
cmp
or
scas
add
inc
jmp
cmc
xor
lret
popa
fcmovnbe
pop
mov
jnp
dec
sbb
pusha
jmp
or
imul
or
jle
xor
and
sub
or
and
jmp
out
pusha
aad
decl
cs
lret
pushf
js
jbe
jmp
daa
ljmp
enter
inc
outsl
adc
sbb
jns
cld
js
out
aas
lods
std
push
xchg
arpl
mov
fcoml
push
imul
pop
mov
loope
or
addr16
push
pop
mov
das
or
pop
subl
push
ror
aad
dec
loopw
faddp
out
arpl
ds
adc
outsl
clc
sbb
test
or
iret
ja
outsl
sub
add
nop
add
adc
addr16
imul
int
lea
lock
push
clc
push
stc
mov
xchg
and
push
push
es
out
fimull
inc
pop
mov
icebp
arpl
sub
leave
xchg
xchg
je
and
mov
mov
stos
movl
outsl
dec
xor
mov
xor
mov
pop
adc
repz
lods
data16
xlat
arpl
and
fbstp
ds
shrl
cmp
les
jb
ficoml
push
dec
inc
outsl
push
incl
rcrb
fisubl
push
jl
add
fdivrp
mov
add
out
iret
in
insl
cmc
sbb
dec
hlt
xor
call
sub
cmp
mov
icebp
outsl
fsubrl
cli
cmp
rorb
cmp
ljmp
sbb
push
outsl
jne
mov
push
mov
cs
dec
or
and
adc
jb
aaa
jl
pusha
out
insb
fcomps
sub
popf
sbb
xchg
js
lock
xor
arpl
xor
dec
call
sub
mov
xchg
ret
daa
fnstsw
jle
add
es
inc
out
repnz
jb
out
push
hlt
outsl
xlat
iret
mov
sti
call
lods
adc
aas
test
xorl
fists
outsl
xor
sbb
outsl
fldz
cmp
hlt
jl
dec
lock
add
push
xchg
inc
jae
outsl
inc
inc
push
pop
out
sub
ljmp
fnstcw
cmpsb
dec
mov
repnz
call
cld
out
dec
jmp
int3
jp
adc
xor
cmp
sbbb
xor
mov
out
sub
or
lret
outsl
pushf
pop
adc
rcr
cmp
push
lods
push
xchg
mov
fs
insb
jle,pn
insb
mov
sbb
lret
adc
push
in
lods
mov
dec
cmp
or
lcallw
mov
decb
jmp
in
mov
and
fistl
call
sub
call
outsl
sbb
or
jmp
fldt
idivl
pop
mov
decb
sub
push
cmpl
ds
sub
mov
dec
push
mov
icebp
insl
adc
lods
rcrl
xchg
and
mov
mov
dec
mov
or
scas
jnp
outsb
dec
jmp
pop
xchg
in
inc
pop
pop
dec
push
mov
dec
xchg
lods
pop
or
not
fildl
cld
subb
test
js
sub
dec
mov
sti
dec
rcrb
loop
mov
dec
movsl
lods
bswap
insb
dec
pusha
pop
js
mul
shrl
lods
lret
loopne
fldt
out
das
outsb
imul
jnp
mov
cmp
insl
push
imul
out
dec
in
scas
fisttpl
cmpsb
mov
out
enter
ljmp
jmp
lret
pop
pop
stos
cltd
and
mov
movsb
and
out
subps
das
dec
fwait
sub
loop
sbb
lock
popa
movsb
and
pop
loop
dec
dec
lret
lods
and
idivb
or
insl
sub
or
lods
dec
mov
add
mov
filds
sbb
pop
out
in
fidivrs
sti
insb
das
dec
aas
daa
loop
in
loopne
pop
fistpll
dec
dec
cmp
jmp
lret
cmp
fsubrp
mov
dec
arpl
mov
lods
dec
scas
gs
xchg
ljmp
sub
mov
fs
lods
jmp
and
fdivr
push
das
push
cmpsl
fildl
loop
dec
jmp
imul
jne
es
out
push
and
fisttpl
fisubl
imul
fwait
sbb
sub
sbb
mov
xchg
data16
in
jmp
ds
das
push
insb
das
cmp
push
and
stos
dec
lahf
lods
scas
fwait
cmp
ds
xchg
insb
add
sbb
and
lret
push
mov
imul
add
and
fnstsw
and
or
shl
bound
sbb
mov
sti
test
jmp
loop
mov
stos
mov
sbb
or
addr16
dec
aad
cmp
dec
mov
scas
aad
data16
in
in
ljmp
or
data16
sti
cmp
cmc
loopne
fucomi
and
fcmovnu
and
adc
loop
dec
mov
repz
arpl
inc
lret
push
jge
mov
lret
sarl
dec
sbb
lods
clc
sti
inc
xchg
cld
mov
adc
popa
cmpsl
stos
dec
mov
add
mov
and
jns
iret
pop
dec
jmp
mov
and
mov
adc
mulb
pop
gs
movsl
mov
inc
adc
testl
or
lds
jmp
add
inc
aas
popf
dec
sub
ficoms
push
fdivr
shlb
jge
mov
lcall
and
mov
add
rcl
jl
out
xor
pushf
loop
mov
js
push
jae
ds
jl
sub
insb
inc
sbb
sub
push
das
pop
ss
andl
cmp
addb
and
xchg
mov
mov
mov
inc
shrb
pop
xchg
int
xlat
adc
mov
fistpll
outsb
inc
imul
and
je
cmp
cmc
pushf
pusha
cmp
mov
lea
je
push
cmp
cmp
pusha
lea
je
push
pushf
pushl
mov
lea
jmp
pusha
movl
push
pusha
mov
jmp
jmp
push
enter
dec
cmpsb
pushfw
das
mov
jecxz
add
xchg
cltd
sbb
and
test
movsl
mov
dec
lods
imul
inc
and
clc
jmp
xchg
cld
xchg
add
mov
in
adc
sub
push
fistpll
divl
sahf
lods
dec
lea
arpl
mov
push
add
pushf
push
push
pushf
lea
jmp
add
push
add
push
add
rclb
pop
pop
add
add
add
add
jnp
ds
dec
mov
mov
pop
outsl
pop
test
mov
mov
test
sub
cs
aam
mov
push
inc
mov
sbb
inc
mov
std
or
out
scas
sub
sbb
jle
rcr
xchg
cld
fcoml
cmp
fwait
add
scas
mov
pop
lret
pusha
mov
hlt
push
cmp
addl
cld
mov
scas
jmp
mov
mov
popf
dec
add
insb
arpl
cmp
mov
into
jae
cmp
mov
aaa
pop
dec
and
or
xchg
push
adcl
clc
mov
popf
sbb
mov
push
cmpsl
jmp
aam
pop
inc
sbb
orb
push
mov
js
pop
pusha
leave
or
pusha
mov
data16
push
mov
je
mov
sub
fcomps
cmc
shrl
jbe
aas
js
sbb
xlat
adc
clc
stc
xchg
xor
sub
xchg
or
fbld
and
pop
push
jo
adc
nop
imul
xchg
mov
sbb
cmpb
xor
xchg
orl
data16
mov
push
hlt
shr
fmull
dec
cmpl
cmp
dec
sub
clc
or
xchg
aaa
xlat
pop
dec
lahf
and
data16
xor
jmp
mov
mov
mov
clc
shll
mov
or
lahf
ret
and
movsl
out
fisttps
in
mov
test
neg
pop
rol
orl
pushl
lea
je
cmc
add
push
pusha
pushl
mov
lea
jmp
pusha
push
lea
ja
stc
add
pusha
or
pusha
pushf
mov
lea
je
pushf
bt
test
cmp
movb
pushf
pushf
jmp
in
test
popf
dec
int
xchg
jne
sahf
and
call
mov
mov
xchg
mov
mov
ss
aam
mov
mov
jl
jp
lahf
inc
rcrl
jno
out
ret
xlat
sub
enter
pushl
sub
int3
xor
mov
rclb
call
mov
aaa
adc
cmpb
pusha
mov
pusha
lea
jne
shrd
xor
movzbw
shl
mov
jmp
call
mov
pusha
call
jmp
pushf
pushf
movl
mov
call
pusha
call
cmp
sarl
dec
push
test
xor
outsb
rcll
or
shl
sbb
ret
cmp
mov
aad
aam
mov
stc
repnz
xlat
mov
bnd
addr16
jecxz
je
ljmp
lea
push
pop
lcall
jns
arpl
movsl
pop
adc
add
pushl
popl
pushl
pushf
push
pushl
ret
lea
call
call
cmp
inc
mov
lahf
repnz
into
ficomps
popa
mov
ljmp
mov
add
insb
icebp
xchg
cmpsb
cli
imul
or
test
push
and
test
inc
das
mov
mov
or
dec
cmp
les
inc
push
push
adc
cmpsl
imul
lahf
jp
pushf
jmp
jo
ljmp
or
pop
out
hlt
sbb
jo
movsb
andnps
mov
xchg
xor
addl
and
mov
das
sbb
jecxz
movsb
out
pop
movsbw
mov
call
call
pusha
movl
pushf
pushf
push
push
lea
jmp
movb
test
jmp
sbb
cmp
cmc
jp
sub
daa
fcmovu
test
push
nop
mov
cmp
fbld
sub
into
add
mov
jmp
sahf
arpl
in
push
ljmp
sti
push
dec
movsl
jb
stos
inc
test
fcoml
bound
test
pop
lea
call
pusha
pusha
pushf
pushl
mov
pusha
movb
pusha
lea
jmp
str
pushf
movl
jmp
mov
call
sub
bt
call
movl
shr
mov
pusha
cmp
pusha
lea
jbe
or
stc
sbb
sub
test
and
mov
movsbw
bsr
bts
mov
movzbw
inc
add
bsr
not
mov
shr
ror
clc
stc
push
mov
and
movw
add
movw
not
pushf
lea
jb
mov
pusha
mov
push
mov
jmp
iret
mov
and
or
mov
lods
pop
adc
or
stos
mov
mov
mov
and
mov
scas
sbb
and
mov
or
out
cmpsb
sub
add
call
lods
movb
mov
cmp
xor
pushf
cmc
stc
call
test
dec
cmp
andb
movb
cmp
mov
cmp
adc
bound
popa
inc
inc
cmp
mov
arpl
and
mov
rcl
jns
in
loope
mov
cltd
decl
pushf
insl
sub
jne
inc
scas
imul
aas
jbe
stos
enter
js
cs
mov
inc
adcl
add
inc
push
mov
mov
inc
adc
and
sahf
pop
movsb
pop
xchg
fs
stos
inc
rclb
cwtl
hlt
mov
cmpsl
movsb
aaa
popf
dec
in
lods
das
push
pop
dec
xchg
mov
add
sti
insb
inc
addl
xor
xchg
es
jl
popa
cmp
movsb
push
and
popa
outsb
ja
jb
js
jl
mov
leave
xor
into
jge
dec
sub
xchg
or
push
jnp
andb
dec
fistps
push
aaa
popf
dec
data16
sub
jle
sbb
icebp
and
pop
dec
rcrl
mov
into
jle
loopne
sub
mov
cmp
mov
dec
add
ss
adc
xchg
sbb
mov
jnp
mov
add
scas
pop
jle
jecxz
xor
jo
js
repz
mov
pop
pop
and
inc
xchg
pop
movsl
lcall
cmp
repz
test
stos
jg
xchg
jo
rcrb
mov
std
sub
dec
sub
or
je
cmp
mov
popf
dec
sti
je
dec
lock
mov
aas
popf
shlb
push
movsb
out
lds
cmp
inc
je
or
ljmp
popa
cmp
cmp
es
and
and
rcrl
icebp
fidivl
aaa
cmp
dec
test
ds
aad
ficoml
cmc
add
dec
enter
lahf
arpl
lds
jle
mov
mov
loop
mov
into
aam
addr16
mov
push
repnz
test
xor
dec
mov
xchg
int
out
jns
mulb
dec
mov
rol
cmp
push
loop
xchg
add
adc
sub
lret
cld
enter
rorb
mulb
lock
add
mov
fs
call
cmp
pusha
stc
or
pushf
pushf
pushf
jmp
pushfw
popw
bt
bt
jmp
pusha
test
pushf
movw
call
call
xor
dec
add
fcomip
fs
cmpl
sub
sbb
loopne
into
inc
pop
subl
sarl
lods
test
enter
or
mov
mov
lds
pushf
and
adc
pop
sbb
mov
mov
clc
lcall
cli
fidivs
xor
out
mov
lret
jo
xchg
pushf
sbb
push
pop
mov
scas
leave
xor
pushf
call
es
pop
dec
rcl
lcall
popf
dec
pusha
mov
xchg
inc
cmp
scas
lret
icebp
andl
cmp
xor
shrl
mov
in
or
rcr
adc
loop
jno
cmc
jmp
or
daa
or
shrl
icebp
mov
mov
mov
sub
pop
add
call
cmp
scas
hlt
push
cmp
aas
gs
mov
imul
or
and
add
cwtl
sub
cmp
jmp
jo
xchg
insb
rcrb
jnp
iret
sarb
inc
cmpsb
adc
push
sub
xor
pop
roll
sub
sub
xor
mov
jno
cmp
mov
or
or
not
mov
or
les
or
call
cmc
add
movb
pushl
pushf
pusha
lea
jmp
add
push
cmp
mov
call
fcomps
xor
aaa
pop
push
xor
icebp
push
std
test
stc
add
xchg
push
lea
and
adc
std
iret
idivb
sti
mov
fwait
ret
cmp
jecxz
jo
data16
das
xchg
cltd
pop
cmp
stc
lods
dec
mov
mov
popf
sbbl
adc
nop
fisubl
je
lret
pop
dec
pop
mov
fs
push
jnp
bound
xlat
stos
call
leave
jmp
fstl
fcoms
inc
popa
fs
fdivr
jb
sub
arpl
pop
add
lea
fs
mov
lea
fwait
or
popf
dec
mov
pushl
push
sbb
push
xorl
mov
fnsave
and
inc
fcmovbe
adc
sub
dec
mov
ss
sarl
fs
mov
xor
pop
aas
push
dec
mov
loope
sbbb
jmp
dec
or
mov
pop
cmc
or
cli
xor
shlb
popf
dec
sbb
ljmp
imul
enter
lods
xor
fisubrs
scas
andl
das
mov
enter
ds
jp
and
sbb
into
xchg
mov
das
or
in
jae
xchg
shl
in
fcmovnb
push
outsl
mov
sbb
xchg
call
lret
test
shlb
sub
pop
mov
mov
cli
test
lret
jge
adc
out
sbb
test
in
sbb
ja
in
clc
jl
bt
cmp
pushf
pushl
pushf
lea
ja
clc
jns
imul
push
call
pushf
call
jbe
imul
call
lea
jae
cmc
test
bt
pushf
add
jmp
movl
pushl
pushf
pushf
lea
jmp
clc
xchg
das
xor
add
jecxz
pop
movsl
jnp
pop
push
sub
fidivrl
mov
cmp
stc
cmp
fcoml
inc
xchg
jne
pop
inc
hlt
scas
lea
int
dec
fisttps
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
pop
add
add
xor
push
pushf
pushl
ret
into
fwait
xor
popf
dec
jl
mov
aaa
popf
rolb
test
cld
dec
mov
int3
cmp
sbb
adc
call
sti
leave
xor
data16
jmp
sbb
stc
pop
es
sbb
add
jne
out
js
inc
xchg
test
popf
mov
call
push
xor
lea
pusha
pusha
inc
lea
pushf
lea
call
pusha
jmp
or
pusha
fstps
fists
pushf
adc
cltd
jl
inc
cmc
loope
data16
mov
mov
or
in
push
push
inc
inc
mov
insb
shl
push
test
leave
mov
out
fdiv
scas
or
daa
nop
cmp
sub
aam
or
mov
shrb
call
jnp
testb
pusha
jge
ss
fstl
jmp
cmp
dec
int
jb
popf
dec
sbb
sbb
test
popf
xchg
mov
or
das
pop
mov
and
xor
xor
fwait
mov
adc
push
dec
mov
fcomps
or
fcomip
fs
mov
xor
jnp
shr
cmpsl
mov
pop
mov
popf
push
mov
ror
xor
cmp
mov
leave
mov
pop
cmp
pushf
adc
rorl
rorl
loop
mov
mov
ds
pop
push
stos
stos
pop
addr16
in
imul
test
dec
sub
aaa
jge
aas
sub
in
fs
cld
inc
pop
scas
jl
or
jno
lock
add
arpl
push
loopne
push
loope
dec
data16
or
and
pushf
lea
je
xchg
movsbw
bswap
lea
not
bswap
bswap
lea
movzwl
mov
lea
lea
pusha
mov
pushf
mov
lea
call
push
call
call
push
lock
std
std
mov
xchg
push
mov
ret
jg
fwait
mov
int3
dec
int
pusha
inc
pushf
mov
pop
sbb
xor
addr16
fcompl
popa
enter
and
aam
pop
movb
shrl
adc
test
icebp
mov
inc
adc
xchg
push
mov
mov
mov
cmp
mov
pop
aad
jae
cmp
call
jmp
mov
jmp
bswap
mov
jmp
das
in
cs
dec
lahf
cltd
sbb
add
or
sbb
cmp
stc
inc
inc
call
dec
pop
xchg
mov
daa
fucom
lods
call
cmp
sar
cwtl
cmpsl
rorl
jae
xlat
xchg
cmp
mov
xor
arpl
cmp
xchg
jns
pop
mov
or
mov
add
enter
cmp
enter
mov
call
imul
xchg
xchg
jno
jmp
incl
push
es
int
movsb
rcrl
dec
xor
arpl
pushf
mov
mov
pusha
xchg
bswap
bswap
pushf
movl
jmp
jmp
mov
clc
adc
mov
shl
shl
inc
mov
stc
mov
dec
jmp
pushl
popl
pushf
mov
pushl
ret
repz
sub
dec
mov
hlt
adc
daa
dec
nop
mov
popa
mov
mov
int
lds
cmp
test
push
mov
cmc
sub
pop
test
std
sbb
pop
movsb
shrb
jmp
movsb
dec
mov
or
test
jle
fdivr
sbb
mov
xchg
and
outsl
push
inc
pop
sarb
enter
popf
mov
das
scas
loopne
add
in
sahf
shlb
pop
fbstp
adc
out
mov
add
mov
sub
dec
xor
add
lcall
les
add
mulb
xor
mov
sub
jbe
and
jmp
pop
pop
flds
xchg
mov
mov
sub
xor
inc
sbb
mov
xchg
outsb
mov
movzbw
xchg
not
pop
pushf
pusha
jmp
loop
or
test
loopne
push
mov
loope
cmp
imul
ret
ret
adcb
jnp
ja
call
sbb
call
jne
add
jp
jmp
mov
ljmp
popf
or
nop
sub
test
arpl
popf
dec
lcall
je
pushf
clc
or
call
movsbl
movzwl
not
lea
not
mov
jmp
rol
stc
pusha
mov
jmp
adc
enter
mov
into
inc
push
mov
js
pop
addr16
das
jmp
sub
mov
ret
loopne
je
adc
in
fld
popf
jp
jmp
or
es
pop
sbb
dec
jmp
arpl
into
fistpll
mov
popf
dec
loop
idivl
loope
stos
out
xor
rcrb
loopne
hlt
xlat
xchg
and
or
xor
cmp
xor
pop
lahf
and
rcll
inc
leave
pop
das
cmpsl
pop
repz
popf
mov
aas
call
out
ljmp
cs
dec
movb
hlt
fs
arpl
pop
imul
sbb
in
loope
test
outsl
pop
jbe
test
sub
mov
mov
imul
add
pushf
stc
movsl
pusha
lods
dec
cmc
popa
mov
mov
dec
mov
inc
fildll
popf
dec
rolb
xor
pop
iret
pop
push
lock
ljmp
popa
incb
mov
loope
arpl
lcall
add
xchg
cwtl
dec
dec
sbb
or
pop
cld
loope
xor
out
cmp
dec
pop
xor
loopne
pop
ret
push
mov
adc
mov
aas
or
xchg
fs
adc
mov
lock
pop
xchg
fmuls
insl
js
jne
inc
and
add
in
test
popa
pop
shl
js
popa
mov
cwtl
in
popa
fsubs
jl
imul
shlb
bts
xor
push
lea
jmp
test
bt
jg
pushf
add
jmp
pusha
inc
mov
pushf
jmp
movb
lea
ja
neg
rol
sar
sub
shl
or
stc
jmp
jmp
jmp
mov
call
cmpl
popf
dec
fs
sub
loopne
scas
lret
int3
sub
je
cmp
shl
int
hlt
sub
dec
dec
popf
sahf
lods
xor
es
out
out
xor
adc
mov
cmp
inc
pop
push
jle
mov
scas
cmp
popa
pop
adc
cs
fucomp
subb
dec
sub
dec
stos
or
test
push
inc
fstps
push
rorl
inc
xor
rcr
jae
pop
call
ja
scas
pop
jge
jmp
or
push
and
negb
imul
mov
repz
or
arpl
shll
shlb
out
repnz
mov
pushf
lea
jne
setge
jmp
lea
jne
pushf
pushf
jmp
imul
bt
jmp
jl
loop
popf
dec
ret
add
add
mov
mov
inc
mull
push
inc
stos
xor
in
andb
ret
dec
xor
rorb
inc
sub
sub
ljmp
cltd
hlt
iret
sti
cltd
adcl
or
arpl
mov
daa
popf
dec
fistpl
push
push
sub
shll
xchg
xor
cmp
lods
jle
jge
or
mov
ss
mov
in
in
push
dec
pusha
imul
cmp
cltd
gs
iret
push
ficoml
mov
push
notl
dec
jl
inc
cmpsl
sbb
je
mov
sub
lea
ja
cmp
not
add
sbb
bt
sbb
adc
mov
cmc
call
lea
jns
push
push
pusha
lea
jmp
jmp
testl
pop
shl
rorb
adc
out
xor
mov
mov
xchg
jnp
cmp
test
in
mov
mov
pop
and
jne
shll
and
insb
jne
fdivrp
inc
and
stc
outsl
fnsave
fdivrp
xor
lret
mov
popf
dec
insl
lock
enter
mov
loop
pop
out
xchg
mov
in
enter
lods
icebp
bound
pop
fsubrs
mov
sbb
cmpsb
adc
pop
mov
dec
cwtl
pusha
shll
dec
mov
or
or
push
fwait
loope
pop
adc
aas
jp
mov
test
push
xchg
loope
nop
or
inc
in
loope
and
or
arpl
or
das
sbb
dec
cmpsl
mov
and
in
pop
cmp
jmp
pop
loopne
stos
or
cmp
push
jmp
pushl
adc
push
call
mov
icebp
es
dec
cmp
mov
adc
loopne
movsb
movsb
popf
pop
sbb
xchg
cmp
incb
lds
sub
adc
insl
ds
cmp
push
xor
sub
es
and
cmpsl
std
mov
push
adc
add
xchg
mov
andl
xor
xor
xorl
outsl
mov
adc
or
iret
insl
cmpsb
bnd
xchg
cli
imul
repnz
outsb
lret
leave
movntps
insl
jg
cmp
stc
jge
or
mov
sub
repnz
and
fbstp
pop
fwait
ror
cmpsb
dec
pop
add
les
jge
aam
jp
in
pop
inc
inc
enter
jno
and
xchg
or
movsb
imul
lcall
mov
mov
xchg
inc
test
cltd
rorb
mov
sub
jnp
adc
mov
decb
inc
loopne
push
dec
xor
jle
pushf
mov
fimuls
xchg
lea
dec
cld
bt
cmc
stc
cmp
pusha
call
movl
pusha
push
movb
lea
jmp
movl
push
movl
pushf
lea
jmp
cwtl
movl
cwtl
push
lea
jmp
push
mov
mov
movl
movb
push
jmp
pushf
movb
lods
pushl
pushf
pushf
rol
pusha
xor
jmp
add
inc
gs
outsl
fs
gs
imul
add
call
and
push
pop
cli
lcall
test
movsbl
stc
bswap
or
mov
not
or
pushf
jmp
push
pusha
call
pop
stos
cmpsl
and
dec
hlt
sub
adc
pop
xor
icebp
push
push
cmpsb
cmp
shrb
xor
test
sub
cmpsl
or
std
sub
push
in
push
aas
inc
dec
aam
cld
inc
scas
jae
mov
push
test
adc
mov
arpl
xchg
jg
push
es
or
das
push
shl
scas
jnp
out
lods
mov
or
inc
xchg
add
fisttpll
ret
lods
imul
sbbl
cmc
out
outsb
jle
inc
jp
mov
xor
js
adc
push
fs
inc
push
stos
inc
outsl
mov
movsb
out
sbb
jno
ds
dec
xor
test
cmp
call
pushl
mov
pushf
pushf
movl
pushl
ret
push
lea
mov
pushf
pushf
mov
movl
mov
call
bt
imul
jmp
lea
je
shrd
jmp
cmp
and
ja
sahf
xorl
lods
mov
icebp
test
adc
push
out
mov
call
cmp
xchg
das
rorl
fistl
roll
jo
and
jmp
xor
insl
mov
ret
xchg
stos
dec
fdivr
jb
hlt
cwtl
and
mov
cltd
push
pop
push
jp
bound
or
jle
fimull
cmp
pushf
dec
or
call
stos
jnp
and
mov
sub
inc
xchg
out
scas
push
int3
test
xchg
sahf
mov
cmc
jbe
pop
mov
ficoms
lret
sti
mov
jl
into
ret
aaa
cli
pause
movsl
mov
loope
mov
jmp
int
cmp
add
out
imul
in
jb
and
inc
in
push
enter
pop
mov
hlt
int
adc
jecxz
jge
xor
xor
jge
jp
pop
lock
pushf
and
mov
outsl
cmpsl
xor
jb
push
pusha
lcall
cli
rcr
pop
mov
dec
fisubs
sar
lahf
cmp
push
or
or
repnz
fs
ret
mov
movsl
insl
icebp
xor
cmpsb
int3
jecxz
push
cmp
popf
push
mov
dec
scas
ror
orl
and
out
mov
mov
fidivrl
jg
sbb
and
mov
push
or
ret
xchg
xchg
pop
shll
stos
sbb
pop
mov
xor
push
fimull
add
imul
push
fisttps
fldcw
xor
add
divl
inc
mov
mov
rorl
pop
loop
xchg
stos
xor
and
and
push
pop
fidivs
lret
in
or
cmpsb
mov
push
mov
sbb
xchg
jecxz
jne
push
pop
jnp
dec
ret
outsl
in
in
jo
adc
jbe
leave
pusha
inc
inc
lret
push
jns
popa
ljmp
push
mov
mov
pop
adc
xchg
lret
cmp
popf
dec
addl
mov
add
hlt
imul
fwait
sahf
imul
mov
xchg
in
into
bound
fiadds
imul
xchg
jl
cli
fldt
ljmp
jmp
xchg
xor
enter
ljmp
arpl
ss
inc
and
and
jecxz
sbb
push
or
es
bndstx
mov
jno
stos
lea
ret
daa
stos
les
movsb
in
and
stc
jg
cmpsb
mov
out
mov
adc
outsl
add
fs
cli
iret
fsub
add
in
dec
mov
and
loopne
cmp
jl
add
inc
and
xchg
push
xchg
dec
pushf
mov
mov
pushf
lea
jmp
call
lea
jb
pusha
stc
clc
cmpb
movb
jmp
jne
in
popf
dec
lea
dec
inc
xchg
repnz
test
test
mov
jge
lcall
icebp
or
call
pushl
bnd
dec
and
arpl
ljmp
sti
xchg
pop
fsub
jne
lods
dec
ss
arpl
add
fs
jne
pushf
not
mov
mov
mov
mov
lea
jmp
call
cmp
lods
pop
popf
dec
lea
mov
hlt
mov
xor
dec
addb
push
sbb
xchg
stos
in
inc
sub
sti
jl
jmp
lret
jno
fbld
mov
add
cmp
adc
test
mov
and
xchg
inc
mov
push
jmp
jnp
fwait
cmp
into
mov
push
mov
or
pop
cwtl
mov
jnp
mov
inc
jae
mov
mov
dec
jo
imul
inc
cld
dec
xlat
pop
mov
mov
push
cmpsl
adc
or
lock
adc
add
bound
sbb
sarb
out
xchg
sti
mov
push
outsb
xchg
leave
mov
fbstp
das
nop
push
dec
outsl
lock
pop
aad
ficomps
loopne
sti
je
cmp
add
mov
cmpsb
cli
call
mov
push
xor
jb
add
outsb
iret
aaa
xor
cwtl
cmpsb
int3
pop
push
mov
popf
add
mov
fldl
bnd
out
inc
int
andb
mov
jg
sub
lods
fs
jbe
es
imul
dec
mov
mov
jne
xor
xchg
pop
xor
popf
test
in
psubusb
jmp
das
insb
ljmp
jmp
jb
inc
jmp
pop
pusha
adc
and
pop
sbb
pop
jl
cmp
jns
test
pop
push
adc
lret
pop
push
mov
inc
sub
add
shl
mov
mov
fisttpl
jb
insb
pop
mov
outsl
pop
cmpsb
inc
or
sbb
mov
push
sbb
adc
dec
mov
cld
dec
inc
mov
cmp
jge
push
mov
mov
push
sar
fsubs
or
repz
movl
pushl
movw
lea
jmp
shrb
xchg
sbb
lods
jle
xchg
pushf
rcl
fstpt
mov
addr16
cmp
fnstenv
jmp
in
in
daa
or
jmp
dec
icebp
adc
xchg
out
aam
pop
cwtl
xchg
cmpb
movsl
xor
xchg
add
int
xchg
arpl
lahf
repz
jl
jo
sbb
jne
cmp
mov
xchg
sub
in
stc
cli
push
sbb
stos
gs
jl
mov
fidivs
sub
test
call
sbb
test
stos
icebp
popf
fisttpll
sbb
adc
jb
aad
mov
fbld
imul
sub
push
in
das
decl
push
push
pop
adc
aam
push
cli
cltd
test
add
jg
nop
xor
in
notl
mov
inc
das
jne
insl
adc
call
in
out
xor
xchg
ret
iret
mov
dec
test
inc
and
sub
scas
movb
mov
lea
jne
lahf
push
pop
movb
movzbw
sets
push
not
pushf
push
lea
lea
push
jmp
and
xchg
sbb
xchg
inc
int3
loopne
insb
out
mov
jg
add
and
or
jae
mov
negb
xor
mov
adc
int
lds
jp
add
mov
sarl
sub
outsb
sbb
push
dec
sub
les
outsl
loopne
pop
mov
xlat
mov
clc
mov
lea
and
pop
jnp
fnstenv
dec
mov
and
cmp
sahf
jmp
sarb
push
xor
mov
cli
clc
cmp
call
test
cmp
pushf
push
push
lea
ja
sbb
ror
pusha
shl
sub
test
shr
clc
cmp
sub
add
shld
inc
mov
shl
cmc
push
mov
pushf
cmp
test
repnz
pushf
pusha
lea
jne
setne
lea
push
setge
movb
jmp
lcall
outsb
inc
mov
or
pop
push
pop
and
popa
enter
push
sub
mov
add
sbb
sub
push
adc
gs
pop
imul
mov
in
hlt
aam
int
and
xlat
and
xor
push
fildll
push
xor
js
sub
fs
pushf
push
sbb
outsb
mov
fimull
pop
sub
jne
xorb
stc
lahf
xchg
push
and
icebp
pop
mov
pop
in
pushf
std
lods
fimuls
testb
movl
jmp
lods
fstp
sbb
mov
inc
loopne
xchg
mov
lods
imul
cmpsb
int3
and
lods
xchg
ja
outsb
mov
sbb
or
sbb
adc
call
jle
mov
xchg
mov
call
clc
and
inc
mov
inc
push
mov
in
leave
cltd
repnz
cld
pop
cmp
xchg
into
sti
ds
cmp
scas
and
lods
jmp
push
mov
je
aam
xchg
push
js
xchg
rclb
out
cmc
call
mov
test
xor
pusha
push
stc
push
rol
pushf
call
scas
cwtl
push
sbb
pop
scas
xchg
cmp
imul
adc
sbb
mov
subb
fldt
mov
fdivl
cwtl
or
test
push
and
in
pop
iret
lahf
jmp
cmc
aas
and
rcrb
cwtl
shl
adc
outsb
hlt
sar
pop
sbb
hlt
jmp
mov
mov
jo
call
add
data16
stos
aam
mov
cmp
cmp
mov
stc
call
cmp
push
add
movw
lea
jne
call
or
sbb
test
jecxz,pt
cwtl
or
shlb
push
inc
lret
ljmp
je
push
icebp
pop
scas
inc
shll
xchg
movsb
mov
test
dec
addr16
pop
sbb
inc
jl
xchg
or
pushf
clc
adc
movzbw
movsbw
mov
pushf
pushl
clc
and
mov
add
lea
jmp
sub
pushl
pushw
popfw
pusha
push
jmp
test
sbb
add
xor
dec
xchg
jb
and
ja
cmp
addr16
data16
idivl
shll
push
xor
aad
in
pop
call
sbb
add
mov
push
data16
mov
add
cltd
push
mov
fbstp
and
sbb
sub
mov
mov
mov
mov
pop
movsb
inc
outsl
sbb
out
scas
xchg
push
rclb
push
shll
mov
aam
push
sub
ja
mov
add
jno
pop
movsb
das
mov
mov
cmp
mov
leave
rolb
stos
mov
iret
mov
shll
jmp
push
outsb
cmp
cmpsb
mov
int
std
arpl
mov
and
jbe
and
mov
sbb
xor
jmp
cs
pop
popf
dec
cmp
mov
lock
cmp
push
sub
mov
sahf
mov
in
fwait
rorb
shlb
out
out
test
cmp
mov
inc
out
dec
mov
ljmp
mul
mov
xor
add
xor
fdivrl
hlt
adc
fsubl
movsb
inc
ret
fs
jne
rcl
mov
clc
push
cmp
or
call
mov
movzbw
lea
movsbl
mov
movb
jmp
cmc
shl
xor
not
lods
call
call
cmp
test
call
bsr
test
ror
push
bsf
mov
mov
call
jmp
push
lea
je
push
jmp
add
aas
mov
push
mov
sbb
adc
add
xchg
ds
push
or
dec
loope
outsl
out
sub
xor
insb
cmp
xor
pusha
in
inc
inc
fs
call
sbb
add
pushf
pop
xor
test
clc
push
mov
lods
cmp
cmp
aam
int
mov
inc
ljmp
cmp
and
or
in
lahf
pop
mov
addb
icebp
inc
lea
je
pusha
push
push
cmp
lea
pushf
pushl
ret
pusha
mov
pushl
lea
call
cmp
sub
pushf
push
jmp
mov
pushf
mov
push
push
lea
jmp
cmc
cmc
bt
add
pusha
lea
jmp
pmullw
popf
dec
jmp
push
frstor
mov
popf
shlb
imul
cltd
incb
shll
jmp
inc
sub
jl
inc
cwtl
xor
adc
flds
dec
je
insl
sbb
lret
xor
je
sarl
and
fisttps
add
popf
dec
bswap
cmp
jle
push
sbb
lock
lods
push
sub
inc
pop
je
push
pop
xchg
and
push
hlt
inc
sbb
mov
pop
push
rclb
inc
pop
cs
mov
test
add
mov
dec
stos
lret
jo
clc
mov
mov
mov
outsl
adc
dec
mov
ficompl
push
cmp
jno
scas
mov
movsb
clc
pop
mov
cmp
in
jecxz
sub
or
mov
inc
adc
jl
lods
mov
sub
popa
pop
lcall
dec
mov
arpl
daa
lock
mov
cmp
mov
lret
sub
aaa
mov
mov
outsb
sub
add
mov
dec
imulb
testl
and
adc
xchg
and
call
sar
pop
call
jae
aad
mov
in
mov
jne
in
ret
xor
test
lds
add
add
cmpl
push
add
sbb
cs
add
jb
add
add
add
rclb
je
add
lcall
push
push
pushl
ret
cmpb
pushl
call
pushf
pushf
push
movl
movb
movw
lea
jmp
xor
stc
pushf
call
lea
bswap
mov
mov
push
push
pushf
lea
call
pushf
jmp
movl
push
mov
pusha
lea
jmp
pusha
lea
jne
pushf
lea
jle
mov
pusha
movw
lea
jmp
lea
jbe
bsr
shl
bswap
call
lea
jb
stc
cmpb
call
pusha
bt
add
pushf
pushl
lea
jmp
mov
adcl
mov
fnsave
xchg
and
pop
mov
and
pushf
mov
inc
xchg
push
mov
xor
cmp
pop
xchg
lds
popf
xchg
scas
dec
push
and
bound
sub
pop
sahf
cld
adc
xor
push
movsb
fs
xchg
adc
or
sarb
cli
mov
sbb
xor
loopne
je
test
js
and
mov
mov
pop
sahf
out
loope
sub
in
cmpl
cmp
mov
mov
inc
mov
rcr
cld
add
adc
and
mov
and
dec
pop
movsb
sub
test
xor
in
ficoml
scas
in
jle
xor
mov
movsb
mov
mov
shll
mov
rclb
xor
iret
cmp
in
xchg
sbb
or
int3
inc
mov
test
adc
mov
das
mov
sbb
push
pushf
push
pop
add
adc
in
and
or
xor
aas
xchg
imul
dec
and
outsl
out
xchg
and
ss
push
inc
lods
push
rcll
mov
js
mov
sub
fs
call
pushf
push
mov
push
lea
jmp
out
popf
adc
pop
push
jno
push
and
nop
jns
lahf
test
jl
stos
cli
or
jbe
xor
ja
push
aam
lea
xchg
pop
arpl
cmp
outsl
ljmp
out
mov
xchg
or
xor
cmp
inc
scas
cmc
dec
fildll
flds
in
pop
adc
cmp
mov
leave
or
test
aas
and
cld
frstor
cli
sbb
sbb
movsb
xchg
loope
lds
push
xor
sub
jmp
cmpsb
jne
sbb
les
inc
add
in
push
in
jmp
xchg
push
mov
and
mov
and
push
subl
xor
cmp
fisubrl
ret
add
jnp
or
xor
cmc
pushf
mov
mov
imul
bt
jmp
in
dec
adc
int
and
movzbl
loop
push
adc
push
push
add
in
lods
ficoms
pop
fmuls
call
cmp
mov
bound
dec
mov
or
cmc
mov
fildl
mov
mov
fwait
test
pop
add
clc
cmc
mov
cmc
mov
test
push
call
shl
pusha
setne
jmp
dec
test
movw
call
call
seto
jmp
movb
jmp
jmp
pushf
pushf
pusha
lea
je
push
pushf
pusha
mov
lea
jmp
cmc
test
add
pushl
test
push
jmp
inc
jge
setge
xor
imul
xchg
sahf
mov
and
jmp
fstpl
push
or
call
and
cmp
inc
cs
push
jle
gs
loopne
lret
pop
adc
jge
push
jnp
ret
jmp
xchg
xchg
shll
add
cli
into
mov
jp
dec
mov
jmp
sub
fwait
jmp
or
cld
jbe
push
mov
popa
xchg
aam
cmp
push
cmp
out
jnp
push
popf
dec
xchg
lds
in
fiadds
ljmp
mov
mov
shlb
dec
cmp
sarl
jg
or
sub
inc
cmp
outsb
hlt
dec
fisttps
testb
mov
adc
cmp
pop
cmp
int3
pusha
add
int3
call
pop
push
add
mov
pushf
inc
cli
sarb
test
pop
cmp
flds
push
gs
adc
or
pop
outsl
sbb
mov
inc
cmpsb
and
jo
cmp
adc
scas
in
pop
xor
push
jmp
fnstsw
push
popf
adc
push
mov
mov
stc
push
subl
out
pop
sub
addl
lret
mov
jbe
pop
and
sbb
sbb
xchg
popf
ret
loope
push
addr16
adc
sbb
inc
inc
fcmovnbe
push
out
movsl
push
lds
xchg
jg
dec
test
push
out
jns
out
fidivrl
lds
mov
pushf
push
and
int
mov
sub
out
jecxz
testb
lcall
xchg
jno
js
xor
arpl
bnd
pop
out
pop
addr16
mov
jl
push
rcll
dec
fistps
adc
lret
push
xchg
xor
mov
aad
cmp
ss
lods
ret
int3
repnz
pop
addr16
cwtl
inc
sub
out
out
std
dec
inc
xor
ficompl
enter
mov
xchg
cmc
sub
xchg
pop
icebp
jl
xor
mov
xchg
std
xor
enter
out
xchg
xor
fwait
cmp
jne
dec
test
into
inc
imul
dec
pop
notl
xchg
dec
jae
or
icebp
dec
pop
inc
lock
cmc
or
dec
cmp
scas
std
push
dec
stos
andb
cld
add
call
jg
add
dec
jb
pop
int
xchg
sahf
sar
test
enter
outsb
lcall
pusha
jmp
lahf
xchg
fcom
outsb
push
jmp
mov
loopne
xor
lock
addr16
js
sub
mull
xchg
pop
mov
fimuls
mov
popf
inc
sbb
sbbl
xchg
lret
addr16
lds
mov
rsqrtps
dec
inc
add
or
dec
jo
sbb
xchg
mov
test
sub
or
icebp
cltd
jecxz
iret
and
das
loope
jmp
movsb
jle
pusha
sub
or
add
push
lods
mov
and
divb
ret
fstpt
jno
cmp
pop
aaa
sbb
jl
aas
and
jnp
lods
mov
dec
outsl
adc
xchg
js
inc
push
adc
adc
rcrb
xchg
mov
dec
dec
dec
test
orb
and
mov
sbb
loop
jecxz
sahf
jae
sti
pushf
and
mov
pushf
call
lea
jne
movsbw
pusha
lea
pushf
mov
push
pushl
push
lea
jmp
cmp
stc
sub
js
shl
push
mov
call
lea
jb
push
pusha
push
mov
pushl
ret
pusha
pushf
lea
jne
setge
sete
pushfw
sets
mov
push
stc
pushl
mov
rol
push
xor
pusha
not
sub
jbe
pushf
pushl
pushf
sub
clc
pushf
pushw
popfw
pushf
inc
jmp
jmp
je
test
cmp
push
movb
call
neg
mov
rol
or
mov
stc
sub
cmc
pusha
jmp
mov
mov
lea
jl
push
pusha
pushf
lea
call
jmp
xor
push
lcall
sahf
loop
jbe
scas
lret
push
out
push
cmpsl
cmp
ss
push
and
mov
push
ret
cmpsb
icebp
inc
jb
lret
insb
in
out
das
stos
icebp
aad
aaa
inc
outsb
out
ret
aas
push
outsl
test
fsubl
addb
jns
sar
inc
scas
lea
cmc
repnz
mov
dec
leave
or
mov
inc
filds
cmc
lret
outsl
flds
cmp
ljmp
inc
into
in
out
cltd
test
dec
and
bnd
ret
dec
inc
and
dec
scas
jne
sub
adc
mov
arpl
mov
enter
and
and
and
lea
jmp
sbb
or
shlb
into
mov
sub
dec
xchg
xor
mull
dec
leave
mov
ljmp
loope
xor
std
fwait
iret
fs
push
dec
daa
divl
xor
pusha
bound
data16
jbe
sub
jecxz
xor
stc
outsb
pop
add
lret
and
fstpt
inc
lods
enter
pop
arpl
out
fistpl
add
scas
ljmp
dec
dec
or
mov
test
imul
add
push
mov
call
or
jl
jecxz
cmp
xchg
outsb
cltd
dec
mov
xchg
push
test
ljmp
lea
sub
mov
cmp
sbb
in
adc
imul
or
jae
jns
inc
popf
sub
test
cmc
mov
out
sub
popf
dec
rorb
bound
loop
dec
xchg
fldl
or
cmp
repz
test
jo
sbb
out
xchg
mov
mov
mov
jg
pushf
and
inc
jne
aad
ja
inc
fdivrs
and
adc
mov
push
xchg
dec
call
cmc
arpl
int3
jg
cmc
loop
sub
call
pushf
pushf
pusha
pushl
movl
call
bswap
mov
mov
jmp
jmp
movl
pushf
lea
jmp
push
lea
jae
dec
mov
clc
jmp
pop
jbe
or
cmpsb
cmp
stos
pop
push
pop
mov
popa
out
sar
int3
xor
data16
gs
roll
jle
sbb
pop
inc
add
jno
sar
in
jb
or
xor
dec
sbb
leave
scas
xchg
push
testb
inc
add
adcb
jg
cli
mov
sbb
cmp
xchg
sub
scas
jg
cmp
mov
sbb
adc
in
jns
push
ret
sahf
sti
jmp
addr16
mov
push
inc
aam
pop
popf
dec
push
pop
or
daa
ss
mov
sub
aaa
imul
mov
pop
xchg
sbbb
xchg
xchg
in
into
mov
mov
dec
div
jmp
jno
xor
fisubrl
ljmp
sbb
jne
dec
data16
and
jae
pusha
lea
jne
lea
mov
cwtl
movb
pushf
mov
pushf
movzbw
lea
not
lea
push
push
push
push
lea
jmp
rol
cmp
bt
xor
cmc
pushf
add
test
test
cmp
pushf
movsbw
setl
lea
not
bswap
push
jmp
mov
movl
pushf
movb
pushf
pushl
popl
pushf
movb
pushl
pushl
ret
into
es
push
popf
dec
fcompl
call
xchg
and
xchg
in
loopne
arpl
push
ljmp
rorb
add
mov
flds
inc
fs
movsb
call
fwait
sub
negb
dec
negl
loopne
addb
push
das
jmp
mov
push
lret
movsl
cmpsb
adc
nop
loop
sbb
jae
cli
xchg
rorl
aad
jno
sub
sub
or
and
shlb
clc
cmp
lea
jge
pusha
push
mov
lea
jae
cmp
cmp
call
lea
jne
clc
setl
xor
aaa
cwtl
rcl
aas
mov
sbb
push
neg
xor
add
and
dec
rcr
adc
mov
jmp
mov
dec
sarl
outsl
push
daa
insl
rol
jl
gs
jmp
js
lahf
mov
jle
fwait
adc
clc
or
in
adc
loope
repnz
jmp
jl
cmp
and
or
sbb
jb
sbb
popa
sbb
inc
jne
pusha
call
test
scas
sub
scas
adc
push
cmp
cmp
incb
cld
xchg
inc
outsb
shll
stos
pop
bound
mov
sbbl
or
repz
push
in
xchg
rcr
jne
std
shll
mov
ss
mov
or
adc
dec
cmp
popf
loopne
xchg
xchg
fwait
pop
add
movl
call
add
sbbb
std
loop
add
push
add
sbbl
mov
push
add
sbbl
adc
push
add
add
add
cwtl
xor
hlt
mov
inc
pop
and
mov
and
jmp
scas
push
mov
ljmp
adc
aas
es
push
dec
or
sub
cwtl
sbb
out
inc
clc
enter
clc
sub
mov
cmpsb
sub
and
loope
lea
cwtl
es
pop
stos
cli
fdivrs
mov
outsb
cmp
cli
pop
test
fimull
popa
xchg
dec
pop
cmp
shl
ffreep
cmp
ds
pop
inc
int
push
adc
sub
arpl
leave
movsb
push
xchg
pop
push
sub
lea
ja
jmp
jmp
popa
mov
add
inc
inc
xorl
cmc
xchg
mov
orl
pop
fstl
dec
xor
pop
lcall
mov
outsl
cmp
dec
fistps
aad
add
or
test
add
cmp
bt
cmp
pushf
pusha
movb
lea
jb
pusha
pushf
cmp
push
lea
jae
setno
mov
not
rcr
mov
jmp
call
adc
movsb
add
mov
cli
out
xor
pop
xchg
jp
out
cmc
fwait
push
adc
mov
jnp
cld
cmc
lcall
into
sub
mov
jnp
std
sbb
jmp
xchg
adc
ljmp
jl
addr16
leave
out
mov
sbb
sbb
aaa
pushf
lea
jae
stc
cmp
call
mov
dec
push
jmp
dec
inc
das
adc
dec
rorb
mov
jne
add
sarb
test
dec
push
push
fiaddl
mov
test
jecxz
ficoms
loopne
gs
lds
sbb
dec
lds
xchg
cmp
aam
push
mov
shl
aaa
test
lahf
shrl
cltd
jne
loopne
out
pop
and
sbb
lods
aas
out
pop
movw
jmp
xchg
and
jns
add
mov
btr
rol
mov
pushf
lock
cmp
cltd
jle
scas
pop
xchg
loop
dec
rorl
cmp
loop
lock
mov
mov
mov
in
lahf
cmp
adc
lcall
sti
outsl
xor
push
rol
movw
sub
jmp
popf
mov
out
mov
icebp
adc
imul
dec
inc
jmp
dec
bnd
scas
sarb
ss
ljmp
mov
dec
xor
or
sahf
jp
mov
cmp
mov
adc
aad
adc
ds
mov
xchg
inc
out
andl
mov
cld
add
insl
cmp
test
lcall
mov
lock
int3
popf
call
sbb
das
add
aad
adc
dec
popf
clc
lock
pop
int
lods
ss
int
mov
pop
mov
inc
in
in
jecxz
cmp
jae
adc
inc
pop
leave
push
movsb
pusha
or
mov
stos
outsb
push
ss
xchg
imul
pop
push
pop
lret
ret
fs
mov
xchg
in
filds
stos
add
loop
inc
out
pop
aad
imul
xchg
mov
int3
ret
insl
js
xchg
addr16
inc
hlt
push
cmp
cmc
cmc
popa
sbb
jne
or
pop
mov
in
jb
lods
or
mov
jne
dec
mov
pop
xchg
imulb
push
aas
and
jl
idivb
rorl
aad
loop
sub
lahf
outsb
out
inc
push
js
and
pop
fisttpll
cld
dec
cli
push
sub
pop
aam
mov
cwtl
aaa
mov
lret
sub
test
dec
dec
add
mov
fstl
xor
pop
jge
pop
mov
roll
dec
or
fisttps
imul
mov
add
mov
and
or
adc
or
mov
lods
and
and
mov
mov
mov
and
mov
scas
sbb
and
mov
or
out
push
cmp
pushf
mov
pusha
lea
jmp
pusha
bswap
lea
add
and
test
movzbw
mov
dec
rcr
pushf
mov
call
frstor
je
cmp
movsl
xor
lret
lea
cmpsl
loop
pop
call
fs
pop
mov
sbb
in
pop
dec
cmpsb
shrl
push
jecxz
sub
dec
jmp
adc
and
fistpl
call
bt
mov
shld
add
mov
cmp
cmp
push
lea
jne
jbe
sar
mov
add
adc
mov
add
call
add
add
or
shr
shl
rcl
push
rcl
pusha
bswap
inc
lea
bt
sub
lahf
cmp
rcr
aad
push
bts
push
shld
rcr
call
call
jmp
push
movl
pushf
pusha
push
lea
jmp
pusha
pusha
push
movl
pushl
movl
mov
movb
push
lea
jmp
movl
push
pushl
lea
jmp
sub
jmp
lea
jne
movzbw
or
shld
cmp
sub
aas
mov
and
clc
stc
call
mov
or
pushf
dec
mov
popa
clc
jns
mov
andl
jge
hlt
mov
pavgb
aas
lcall
mov
dec
fidivrl
xchg
sbb
xchg
data16
bound
jb
sbb
outsb
inc
rcl
fisttps
pop
repnz
xor
adc
int
xchg
scas
cmp
movsl
dec
and
mov
pop
mov
xchg
mov
pop
mov
jmp
repz
inc
jle
xchg
sbb
jl
in
int
push
mov
fsubs
jecxz
sbb
fs
jne
call
clc
cmp
push
jmp
pusha
lea
je
inc
call
ljmp
pop
mov
cmc
pop
fucom
in
call
out
push
mulb
add
bound
cmpsl
lock
out
push
cmp
push
mov
adc
out
mov
adc
xor
hlt
pop
inc
movsb
push
bound
mov
sub
mov
incl
mov
int
xor
into
mov
shrl
in
mov
stc
pusha
add
stc
cmc
bt
bt
test
push
jmp
test
or
call
pushf
call
dec
xor
fcoml
xor
push
js
pop
mov
mov
lods
gs
dec
inc
push
mov
jecxz
add
cmpsl
loop
inc
inc
push
pop
xor
inc
push
aam
jecxz
dec
sbb
fsubrl
push
push
xor
stc
ja
jb
push
jmp
xlat
aas
adc
inc
push
mov
jecxz
std
lods
fwait
inc
dec
addl
shr
in
push
pop
cmp
jge
jecxz
es
jmp
stos
inc
push
add
jecxz
inc
dec
mov
jo
inc
push
mov
lods
out
add
jecxz
add
ljmp
jecxz
int3
cltd
lods
int
sbb
jecxz
jbe
dec
repnz
fsub
xor
popf
ret
xchg
dec
inc
push
sti
fsub
xor
lea
cli
fninit
xor
stos
inc
push
lods
fninit
xor
sarl
nop
in
dec
inc
push
pop
xor
inc
inc
push
rcr
xor
xchg
add
jge
inc
push
mov
mov
push
mov
fninit
xor
jbe
or
inc
push
das
fninit
xor
cmp
imul
jecxz
out
test
push
sub
jecxz
and
aaa
pop
dec
test
mov
add
push
lods
fninit
xor
sub
inc
jp
inc
push
push
cmp
mov
or
ret
or
push
popf
xor
jge
popa
jp
inc
push
jmp
loop
xchg
dec
push
push
and
mov
push
dec
xor
sbb
jecxz
cmp
inc
push
fninit
xor
inc
pop
jns
mov
test
jecxz
sbb
sbb
jecxz
dec
sti
inc
sti
loope
inc
push
adc
jecxz
lea
lahf
add
inc
push
test
jecxz
std
lods
fwait
inc
jp,pn
push
scas
fninit
xor
test
dec
xor
gs
push
lret
xor
sar
xor
pushf
pushl
ret
call
call
mov
sub
pushf
dec
jno
hlt
fwait
cmp
aaa
decl
in
jns
xchg
data16
pop
pushf
das
fcom
mov
lods
or
pop
in
repnz
test
mov
jns
dec
int3
push
jno
scas
addr16
or
icebp
cmp
pop
repnz
mov
xlat
xor
lcall
lcall
pushl
lea
call
pusha
push
pushf
pushf
adc
push
call
or
call
mov
pusha
pushl
pushf
call
stos
pop
int
pushf
dec
adc
aaa
and
stos
syscall
hlt
imul
lds
std
cmp
loopne
idivl
enter
andl
lods
sub
and
fwait
mov
sub
sub
stc
pushf
dec
mov
movsb
adc
rolb
jecxz
nop
and
push
jae
ficoms
cmc
test
xchg
nop
out
dec
aam
das
sub
sbb
icebp
jmp
dec
push
cmp
fldenv
push
daa
jmp
je
or
imul
mov
and
ja
setbe
pushf
inc
inc
seto
push
not
inc
pushf
or
neg
xchg
clc
rcl
mov
shl
inc
mov
cmc
stc
test
cmc
mov
ror
bswap
sub
mov
pusha
cmp
cmc
bt
sub
lea
jnp
push
pushf
rep
movzbw
mov
mov
pusha
push
lea
jmp
inc
push
dec
not
pushf
inc
setl
xchg
rcl
aam
shl
mov
clc
mov
jmp
pushf
movb
push
xor
stc
call
and
clc
push
add
pusha
push
pushf
pushl
lea
jmp
pushf
inc
pushf
call
add
dec
add
out
addr16
sub
cli
ja
jl
testl
insl
mov
adc
paddsw
inc
rolb
cmc
das
fwait
sub
lock
aad
ficoml
aaa
inc
mov
loopne
fmuls
inc
pop
sbb
cmp
cmc
inc
or
lods
int
or
jl
xchg
dec
icebp
stos
aad
leave
mov
stos
fdivs
scas
into
adc
sbb
add
push
arpl
jp
pop
xchg
mov
in
xlat
inc
jp
mov
xor
push
push
nop
dec
add
ljmp
shrl
test
into
fcmovne
jb
inc
rolb
cltd
sbb
mov
mov
dec
and
fcoms
xor
div
mov
mov
aad
pop
fs
in
lock
stos
std
iret
xor
fwait
nop
push
add
adc
xchg
lret
cmpsl
inc
xchg
daa
fcoms
sbb
inc
push
mov
sub
aaa
pop
mov
dec
add
mov
popa
xor
jb
mov
jg
mov
leave
int
adc
inc
sbb
mov
in
jmp
push
cmp
lea
mov
sahf
jg
jbe
xchg
std
insb
push
jp
int
and
leave
pop
adc
mov
in
push
jnp
imul
iret
mov
adc
xchg
and
pop
roll
sbb
adc
adc
push
es
cmpb
bound
pop
sahf
movsl
push
arpl
sarb
cld
xor
aam
pop
pop
push
jo
sub
sub
popa
cmp
rol
mov
mov
cmc
ror
cmp
jmp
in
jmp
or
add
fmuls
outsb
sub
iret
lea
faddl
cmc
jbe
cmp
mov
push
push
inc
loope,pn
sbb
mov
mov
les
inc
lods
pop
push
jno
lds
xor
shll
adc
add
jns
imul
leave
loope
js
aam
mov
add
flds
inc
sbb
test
cmpsl
aam
lret
nop
pop
scas
cmpsl
mov
jmp
cwtl
pop
negb
js
jecxz
pop
frstor
inc
push
jmp
push
dec
loope
push
gs
mov
lea
lea
daa
imul
mov
ss
jmp
sbb
outsb
add
repz
cmp
jbe
out
sub
inc
xchg
sbb
mov
xchg
arpl
movl
pusha
mov
lea
jmp
pushl
lea
jae
cmc
mov
push
rol
mov
pop
mov
bt
xor
cmc
stc
pushf
repnz
call
movl
jmp
push
pusha
rep
bswap
call
lea
jae
pusha
pusha
push
movb
lea
jne
call
jge
in
cmc
pushf
dec
xor
movsl
jp
dec
out
pop
adc
xchg
xchg
xlat
fimuls
loopne
mov
fisubrs
mov
push
push
push
cmp
outsl
imul
cmp
inc
inc
jl
andl
les
mov
pushf
or
pop
call
mov
popa
and
sub
lods
add
scas
lcall
mov
pop
adc
mov
gs
rcll
stc
sbb
push
stos
mov
inc
mov
add
pushf
dec
stos
popa
xchg
sub
inc
push
mov
std
jb
push
inc
test
adc
dec
out
xchg
inc
dec
int
out
std
add
mov
sub
arpl
jno
xor
sbb
pushf
pop
fmull
aaa
push
xchg
inc
andl
pop
add
es
cmp
hlt
dec
mov
pop
mov
adc
loopne
mov
inc
push
mov
movsl
mov
sub
shrl
addb
adc
inc
orl
mov
or
mov
fadd
sub
f2xm1
xor
cmp
cmpb
xor
push
mov
pusha
mov
sahf
pushf
jnp
clc
jecxz
dec
mov
dec
jbe
sub
cmp
mov
repz
outsb
adc
ret
sub
in
sarb
imul
mov
lahf
xchg
cli
test
mov
cltd
cmp
shlb
and
mov
insb
sbb
xor
sub
pop
mov
mov
inc
and
not
push
add
sbb
inc
mov
pushf
mov
call
pusha
movl
pusha
movb
call
push
xor
mov
bsr
shl
rcr
call
xor
test
stc
push
not
stc
sub
pushl
mov
movb
lea
call
jb
clc
bt
cmp
push
pusha
lea
jae
push
call
jmp
xchg
push
pushf
pusha
jmp
pusha
cmp
pusha
repnz
pushf
call
movl
call
movl
call
lea
jb
bt
stc
cmc
cmp
push
call
cmc
pushf
bt
shl
pusha
lea
je
pusha
jmp
mov
sub
setb
push
adc
add
shl
adc
shl
bt
mov
stc
push
test
call
pop
mov
repnz
dec
lret
outsb
rol
ljmp
push
xor
das
out
in
mov
lret
aaa
pop
icebp
repnz
lret
cmp
cmp
dec
sbbl
cmp
xlat
lret
scas
adc
pop
imul
dec
pusha
mov
fsubrl
fwait
pop
loopne
sub
int
cld
mov
xchg
pop
push
adc
push
idivl
pop
pop
fwait
mov
mov
mov
adc
mov
dec
stos
xor
outsl
sub
xchg
add
mov
xchg
adc
xchg
sbb
jge
add
imul
pop
mov
mov
push
out
xlat
js
mov
fs
bound
repz
test
cmp
out
pop
sub
xchg
xchg
ljmp
jg
in
sbb
adc
fistl
sub
or
mov
pop
pusha
push
nop
add
or
xor
mov
bts
mov
shl
mov
add
dec
shr
xor
shld
bt
mov
shr
add
lea
mov
jmp
pushl
mov
bt
rol
jmp
movw
lea
jae
pushf
lea
jne
push
mov
push
pushl
stos
pusha
mov
mov
lea
jmp
test
cmc
push
stc
cmp
push
pushf
pusha
jmp
call
mov
dec
xor
iret
je
jl
jg
cmp
cs
mov
fistl
fs
sbb
test
mov
adc
daa
sub
out
mov
cli
add
nop
pop
fstpt
iret
or
sbb
xchg
lcall
dec
iret
or
jp
scas
mov
xchg
sbb
and
cmpsl
sub
push
cmp
imul
xorb
ret
inc
sarl
jge
icebp
mov
mov
sub
outsb
lock
dec
push
rdmsr
aad
sbb
ret
aad
mov
mov
push
clc
stos
enter
jno
xchg
dec
pop
dec
movsb
cltd
or
es
loopne
stos
jmp
or
leave
inc
icebp
inc
or
cmc
push
sbb
mov
icebp
pop
adc
movsb
pop
xor
lret
scas
push
jecxz
stos
adc
push
mov
mov
mov
jns
push
imul
movsb
mov
mov
jp
enter
pusha
mov
sub
jl
bound
lods
xlat
call
call
jmp
mov
dec
pop
push
cmc
pop
shlb
jp
cli
iret
xchg
or
cmc
in
pop
dec
push
add
mov
mov
dec
jp
mov
mov
int
push
xchg
js
pusha
shl
and
std
ret
fbld
test
aas
cmpsb
sub
or
bound
xchg
mov
add
inc
xor
jmp
pushf
movl
pushf
pushf
pushf
movb
lea
jmp
imul
gs
xor
cs
insb
add
jmp
bswap
lea
movw
call
call
lea
jnp
je
bt
cmp
sub
push
test
cmp
mov
push
call
addr16
sti
in
pushf
dec
fcompl
xlat
stos
pushf
mov
cmpsl
imul
sub
push
cmp
pushf
mov
test
xchg
lahf
sbb
jns
test
fisttpl
xlat
sbb
ret
sbb
xlat
imul
mov
cmc
inc
rolb
cmc
call
mov
out
pushf
dec
leave
inc
pop
cmp
add
fucom
xchg
ds
insl
push
in
adc
cmpsb
out
mov
in
push
sub
bnd
adc
ljmp
iret
dec
add
jne
dec
or
and
cmpl
lcall
sub
mov
mov
pop
mov
imul
mov
xchg
stos
scas
xor
xchg
fnsave
popa
or
add
lock
pop
xchg
fwait
add
inc
sub
int
or
xlat
xor
ftst
mov
icebp
jmp
mov
movsl
mov
call
push
daa
adc
lods
stc
jb
fldt
popf
push
call
or
pop
scas
xor
cltd
jle
sbb
hlt
jae
test
dec
leave
push
jg
aad
ljmp
mov
mov
shlb
add
push
jno
out
sbb
add
xchg
bt
cmc
bts
sub
sar
sar
lea
pushf
shr
shrd
bswap
mov
cmp
push
and
add
pushl
shl
add
sub
bswap
movsbw
mov
push
shr
movw
cmp
pushf
lea
je
jmp
movb
mov
lea
jbe
rcr
bsr
jmp
clc
cmc
add
movl
push
test
movzwl
btc
sbb
mov
mov
mov
add
clc
pushf
mov
stc
jmp
lea
ja
pusha
jmp
test
clc
sub
stc
cmp
pusha
lea
jae
pusha
lea
jmp
not
cmc
cmc
jmp
daa
xchg
sub
pushf
dec
aam
outsl
push
aaa
call
mov
pop
push
jge
out
iret
pusha
out
popa
fnstenv
lds
push
int3
pcmpeqd
pushf
sbb
sub
adc
xchg
mov
into
mov
push
sub
inc
jmp
repz
mov
dec
ret
xor
jb
push
dec
test
adc
ret
dec
mov
and
cmp
push
xor
out
sub
xchg
jo
push
sbb
jmp
add
iret
mov
add
add
add
add
add
add
add
stos
push
add
add
add
mov
push
add
les
xchg
pop
pop
jo
out
cmp
push
loopne
pop
in
fwait
push
mov
popl
ljmpw
sub
andb
stos
aam
or
outsb
sarl
xchg
popl
fimuls
fiaddl
test
add
push
movsl
jbe
xchg
sbb
push
or
lcall
sbb
pop
dec
mov
pop
pop
incb
xchg
xlat
int3
push
and
clc
add
repz
sub
sub
inc
cmp
in
cmp
fs
iretw
divb
push
pop
and
xor
stos
incl
repnz
mov
shrb
cmpsl
push
mov
addr16
mov
stc
dec
fdivp
cmp
addl
mov
mov
mov
cmp
dec
cmp
jmp
pop
lods
inc
addw
pop
and
in
daa
dec
ljmp
adc
xor
or
cli
jnp
test
fnsave
inc
out
imul
lea
das
inc
cld
dec
das
shrb
jns
mov
xor
xchg
xlat
sbb
mov
daa
jle
jb
fisubrs
add
sqrtps
mov
add
andl
rcrb
jmp
outsb
mov
pop
dec
inc
sarl
int3
mov
jl
mov
subps
jmp
jnp
aam
insb
into
rolb
push
ret
lds
xor
or
xlat
mov
pop
fists
pop
jg
adc
dec
push
cmp
push
inc
inc
jns
dec
je
mov
stc
xchg
or
aas
fsubrl
add
test
or
nop
adc
roll
cmp
lods
std
dec
jb
not
mov
shll
mov
mov
dec
xlat
iret
add
pusha
stos
xor
ffreep
sbb
mov
cmp
notl
adc
shll
pop
inc
and
sbb
popf
sti
and
repz
cltd
adcb
cwtl
pop
sbb
sub
pop
insl
in
pop
jmp
mov
in
popa
sbb
int
fwait
push
mov
jns
xchg
arpl
imul
cli
in
and
je
jle
ret
daa
push
sbb
pop
cmpb
jp
mov
jge
pop
lret
push
and
xor
pop
dec
pop
jge
push
pop
add
aam
cpuid
xchg
sahf
mov
dec
jb
mov
outsb
shl
inc
adc
idivb
mov
sbb
and
mov
or
xor
mov
push
and
out
ds
ljmp
ss
mov
mov
lods
cltd
inc
or
addl
sbb
inc
mov
push
in
cmp
scas
std
inc
iret
lock
mov
xchg
lahf
aad
icebp
jg
jae
push
xchg
fwait
xchg
ret
push
and
jae
cmp
scas
xor
or
lods
push
rcrl
adc
movsl
pop
or
sbb
testb
jb
leave
jmp
daa
outsl
test
cmp
loopne
sahf
xchg
ret
les
js
repz
or
add
dec
ret
sbb
je
and
sbbl
inc
lahf
shll
jecxz
into
inc
sti
pop
jnp
insl
xor
mov
repz
pop
dec
cmpsb
lods
addr16
ret
repz
jl
xchg
xchg
pop
and
sub
push
andb
cmp
mov
fs
leave
inc
lea
adc
lcall
stc
mov
ljmp
ljmp
out
pop
fcmovnb
and
jbe
add
cs
mov
adc
out
and
and
sub
and
clc
cmp
fildl
aaa
xchg
xor
cli
mov
mov
mov
and
inc
in
addb
pusha
push
jecxz
into
xor
rcll
data16
adc
fwait
inc
rcll
push
popa
in
notb
repz
aaa
adc
je
lahf
or
popf
leave
inc
inc
mov
int
jb
add
mov
xor
ja
out
ja
loop
xor
mov
mov
ja
outsb
xchg
sahf
rolb
loope
test
pop
pop
mov
dec
or
pop
fsubs
dec
or
jp
mov
sbb
repz
in
loop
sbb
sar
adc
xchg
leave
mul
inc
aad
add
mov
nop
out
mov
cmp
mov
int3
sub
xor
data16
in
cmp
addr16
inc
outsb
mov
sub
xchg
cmp
jecxz
add
outsb
add
jne
and
test
pusha
xchg
adc
mov
or
inc
and
inc
ljmp
push
mov
test
clc
push
sub
stos
mov
push
in
popf
inc
out
lret
jae
shll
pushf
sarl
popl
insl
sbb
xchg
add
cmp
test
jb
frstor
in
daa
push
roll
push
sarb
in
aam
fiadds
xlat
mov
and
ret
sahf
cwtl
in
mov
adc
imul
out
jl
lcall
ljmp
insb
dec
fs
test
pop
inc
ja
outsb
push
pop
mov
xor
insl
xchg
xor
push
pop
dec
adc
enter
mov
sbb
frstor
rcll
int
mov
and
pop
stos
sbb
jmp
ja
xor
mov
mov
push
out
in
movsb
and
pop
jo
dec
sbb
push
stos
ds
mov
rolb
lds
mov
mov
nop
sbb
push
push
fbld
inc
fdivrl
jno
data16
pusha
mov
sub
and
fimull
je
push
les
jle
jl
sub
in
enter
jle
push
dec
sub
mov
cli
sbb
push
mov
push
je
cmpsb
jle
cmc
push
es
fidivs
outsl
mov
push
mov
add
mov
jns
jp
and
push
daa
xchg
mov
popf
and
xchg
xchg
ret
push
mov
pop
lret
cmpsl
sub
xlat
inc
inc
inc
daa
test
or
xchg
mov
xchg
pop
mov
ret
cltd
cli
sti
inc
lock
out
mov
fs
inc
or
inc
movsb
out
insl
or
ss
cmp
mov
sub
inc
mov
std
dec
ss
xchg
std
lds
movsb
dec
ficompl
dec
jmp
and
mov
push
pop
and
daa
outsb
lahf
mov
rcll
notl
sar
nop
dec
xchg
mov
cmp
push
jmp
dec
sub
mov
push
jl
mov
xchg
pop
ljmp
push
fstpl
adc
adc
divb
sub
mov
jb
jg
sarb
hlt
mov
loop
loop
xchg
add
or
daa
cltd
pop
jns
xlat
inc
xor
push
cmpsl
scas
ds
push
or
mov
cli
jge
sbb
inc
into
jns
push
stos
xchg
rol
frstor
xchg
shl
dec
bnd
popf
inc
mov
push
outsl
xchg
dec
push
pop
in
pushl
cmpsl
loop
xor
or
adc
repz
fisubrs
lahf
sbb
inc
das
dec
cwtl
jo
outsb
in
rcrl
notl
repz
int3
ret
movl
push
insb
dec
insl
inc
inc
sti
cld
je
daa
scas
jle
or
sbb
inc
or
std
cwtl
cli
sub
push
sub
inc
and
inc
xor
sbbl
icebp
dec
dec
repnz
pop
mov
jecxz,pt
orb
xor
sbb
lahf
movsl
xchg
bound
or
lret
movsl
dec
mov
xchg
jne
dec
mov
pop
repnz
mov
and
mov
jmp
inc
add
xchg
push
mov
inc
fwait
xchg
push
jae
jnp
stos
sar
cli
iret
push
mov
jno
push
jp
mov
movsl
xchg
cs
mov
push
sti
lahf
adc
xor
push
lea
and
je
mov
cmpsb
jmp
xchg
jns
repnz
ljmp
cltd
enter
mov
stos
inc
or
ror
jo
mov
cmc
sbb
orl
movsb
mov
jmp
lret
sbb
mov
fwait
sarl
jae
imul
cvtps2pd
xchg
push
dec
fnstcw
cmp
push
xchg
mov
cmp
jp
add
xor
xor
int
pop
lret
sbb
dec
je
push
repz
jnp
lods
and
mov
stos
push
mov
test
std
lods
or
popf
mov
pushf
outsb
and
hlt
mov
pop
pop
push
mov
xchg
iret
repz
or
pop
and
lods
nop
cwtl
xchg
call
sbb
or
or
sbb
mov
in
aam
sti
or
bnd
fidivs
bound
stc
clc
repz
push
xchg
test
data16
xchg
fwait
outsb
dec
in
jmp
hlt
mov
addr16
and
jns
sahf
shrb
testb
vsubpd
mov
xor
loope
sbb
push
inc
cld
ja
mov
cltd
pusha
jmp
and
add
mov
and
pop
fldt
xor
or
sub
sbb
adc
shll
loope
sub
mov
repz
mov
arpl
push
imul
push
cmp
lds
xchg
cltd
loopne
dec
test
mov
mov
ss
aad
cmc
jns
icebp
outsb
push
or
aas
xchg
pop
call
movsb
and
xchg
dec
aam
push
enter
mov
pusha
nop
mov
sub
and
pop
sub
and
lock
test
sbb
and
inc
mov
xor
movsl
mov
mov
loop
mov
in
push
cmp
lcall
aas
xchg
lds
test
movsl
pop
call
popa
dec
adc
dec
add
lret
and
fldt
notl
mov
sbb
outsb
sub
sbb
pop
push
arpl
ljmp
cltd
das
popf
push
xchg
fisttps
or
pop
push
dec
pop
or
les
sbb
notl
dec
arpl
lcall
adc
movsb
arpl
sub
sbb
jge
xchg
iret
stos
push
push
push
and
setp
fs
xor
es
adc
mov
mov
mov
mov
lods
fstpl
mov
out
leave
pop
adc
leave
subb
push
cmp
inc
sub
or
bound
addr16
xchg
cltd
adc
sub
add
add
add
and
pop
or
setp
jmp
lea
jne
bsf
lea
shl
stc
mov
movsbl
ror
movsbw
sub
shld
rcl
mov
clc
sub
push
pushl
popl
stc
test
test
cmp
jmp
pushl
popl
pushf
pushl
ret
pushf
pusha
movl
call
call
pusha
movl
push
pushf
pusha
lea
jbe
push
pushf
lea
jmp
push
mov
fstpl
xlat
ljmp
mov
pop
sub
ja
add
pushf
mov
imul
xchg
gs
cmp
nop
adc
and
push
gs
jne
xchg
sbb
outsb
pushf
shrl
and
int
jl
mov
push
mov
sub
push
fbld
inc
inc
adc
jne
fiadds
stos
jmp
outsb
mov
jnp
lea
xchg
inc
cmp
mov
incl
fcomps
aam
loop
test
cmp
pushf
lea
jb
push
cmp
call
movb
lea
call
pushf
jmp
pushf
lea
mov
lea
jge
lea
pusha
movl
call
xor
fstpl
mov
jle
pop
push
xchg
xchg
jle
fmuls
mov
and
push
jo
jo
sahf
pop
ret
sbb
and
cmp
xor
lret
std
add
shll
pop
cs
adc
es
dec
add
pop
mov
stos
shl
fwait
scas
pop
sbb
adc
out
arpl
out
sbb
inc
test
mov
fnsave
sub
inc
popa
mov
jb
sub
mov
mov
enter
pop
add
mov
xor
rcl
fdivl
mov
mov
xchg
inc
sbb
inc
shlb
xchg
mov
push
fcompl
dec
inc
pop
adc
mov
xor
ss
pop
xchg
cmp
cmpsb
call
mov
adc
push
lods
out
sbb
loopne
jle
push
pusha
xor
jne
nop
jecxz
cmp
pop
adc
cmp
mov
lock
push
into
roll
sub
sub
js
pop
iret
sti
fldl
mov
xchg
inc
mov
jle
and
sub
jmp
and
pop
mov
pusha
pushl
popl
clc
stc
cmp
call
movl
jmp
mov
dec
cmpl
push
push
xchg
test
jg
in
into
scas
pop
nop
and
sub
jecxz
jnp
adc
cld
cmp
imul
mov
pop
mov
add
jp
aas
imul
add
lods
imul
ud0
cltd
fiaddl
imul
adcl
notl
in
dec
xor
sub
int
and
inc
cmpsb
sti
inc
and
or
rcrb
popf
outsl
xchg
xor
jp
xchg
dec
loop
xor
or
lea
arpl
jne
add
sub
movsl
and
push
sub
mov
in
lock
jns
aaa
xor
je
movsl
out
je
add
fcoms
sub
adc
and
fnstenv
add
mov
mov
popf
push
pop
xorl
insb
or
cmpsb
jnp
xchg
mov
dec
loopne
roll
movsb
or
jecxz
jl
int
sub
add
test
lcall
xor
outsl
imul
adc
cld
dec
mov
xor
fwait
roll
push
bound
inc
nop
xor
das
fiadds
ljmp
pop
test
loope
mov
xor
dec
jg
int
pop
sub
ret
outsb
xorb
xchg
iret
outsb
inc
ljmp
popf
mov
cmp
xor
hlt
cmp
cmpsl
dec
call
mov
ja
jle
jmp
pushf
adc
rcr
stos
push
xor
lcall
dec
std
daa
sub
aas
das
jmp
ficoms
clc
out
add
mov
sahf
pop
cli
jmp
mov
lea
pusha
lea
call
pusha
lea
jae
test
cmp
clc
bt
sub
push
call
pop
cmp
mov
push
adc
stos
jo
in
lret
push
sbb
cmpsl
cmp
insl
push
mov
sahf
loop
stos
or
loope
in
mov
push
and
jecxz
dec
or
jns
data16
jmp
lods
arpl
lods
movsl
outsb
out
xor
sub
sarl
or
inc
and
movb
call
mov
dec
rorb
dec
xchg
inc
inc
and
bound
pop
inc
ja
mov
and
clc
or
adc
adc
in
nop
fs
xlat
ret
mov
pusha
shll
scas
insl
fistpl
loop
xchg
pop
sbb
sti
sahf
repz
je
jo
xor
out
test
lahf
jp
adc
daa
inc
mov
and
loop
ljmp
int
jg
fstps
sti
or
mov
in
shl
push
add
inc
sub
sbb
sbb
cmp
data16
into
or
and
push
ss
and
or
xor
lods
loopne
pop
mov
mov
test
aas
lcall
mov
and
sbb
test
jp
pop
out
call
mov
mov
push
movsb
jmp
jmp
cld
in
ljmp
loope
or
mov
xadd
jb
jae
out
addr16
ljmp
push
mov
dec
es
pop
cmp
bnd
push
in
and
mov
outsb
stc
mov
sbb
push
push
pop
bound
arpl
pop
and
xlat
pushf
dec
mov
fcmove
and
addr16
icebp
aad
push
or
icebp
mov
sub
pop
cld
bnd
aas
addb
lea
dec
pop
pop
gs
cmp
pop
mov
cmpsb
ror
clc
fs
inc
adc
int3
stc
mov
hlt
sbb
test
scas
call
jp
cmp
lods
fstl
lcall
sub
mov
jbe
cli
xchg
das
int
or
nop
xor
sub
cmp
pop
push
xor
int
ja
adc
adc
mov
mov
inc
xor
out
jnp,pn
test
xchg
push
jl
ss
add
inc
push
dec
pop
add
insb
in
pop
sub
push
push
add
pop
xchg
lahf
ffree
ret
andl
ss
pop
loope
jae
inc
inc
lods
mov
or
shl
arpl
cwtl
cwtl
test
shr
lcall
push
fmuls
push
rcll
pop
inc
pop
add
jae
test
imul
mov
add
test
or
mov
inc
out
adc
mov
or
sub
pop
fs
emms
das
addb
scas
movsl
and
cltd
movl
lods
sub
hlt
addr16
mov
in
inc
ds
nop
dec
faddl
sub
out
sub
dec
sbb
icebp
inc
add
xor
pushf
dec
ja
ja
ss
sub
sti
fldenv
add
outsb
xchg
mov
shlb
enter
outsl
rcrb
dec
movsb
mov
outsl
mov
int
fs
lods
cmc
sbb
mov
dec
xlat
aas
ror
pushf
dec
scas
outsl
movsb
inc
stos
mov
sub
mov
xchg
lea
mov
inc
lret
mov
dec
mov
mov
sub
push
inc
cmc
daa
in
inc
sbb
cmp
mov
push
pop
adcl
test
sahf
insb
divb
sub
mov
push
mov
pushf
dec
jnp
js
mov
or
push
lret
sbb
cmp
stc
push
pop
xorl
xchg
push
out
sbb
dec
and
dec
es
pop
arpl
rolb
sub
inc
adc
xchg
add
sbb
lretw
or
aad
loop
out
push
xor
pop
adc
dec
inc
and
mov
lahf
ljmp
addr16
outsl
mov
cmp
pushf
dec
out
loop
sbb
pop
in
and
or
jecxz
jl
pop
movsb
cmp
sbb
push
pop
addl
insl
pusha
gs
sub
sub
inc
popa
in
sarl
jmp
dec
icebp
icebp
repz
clc
dec
xorb
sahf
push
into
adc
push
shrb
xor
pop
adc
jno
nop
or
sbbl
cmp
dec
xorl
popf
stc
lret
jl
mov
pop
loop
nop
add
adc
sub
dec
jle
gs
int3
ja
xor
inc
outsl
xor
pop
push
xchg
push
icebp
mov
pushf
dec
xor
iret
xchg
push
dec
std
jae
leave
scas
cmp
cmp
ret
mov
mov
mov
pop
and
xchg
movl
ficompl
dec
sub
loopne
sub
push
arpl
je
mov
out
push
cmp
in
out
jns
cmpsl
je
push
out
jmp
xor
pop
mov
lea
pop
mov
inc
sti
or
js
push
lret
shll
mov
addb
sbb
cwtl
xor
js
jle
out
mov
add
jo
push
mov
sbb
add
data16
dec
lret
mov
movsb
stos
js
cli
pop
push
jp
sub
iret
fs
ret
ds
push
fnstenv
sahf
sbb
test
push
adc
es
cwtl
mov
pusha
push
push
cmp
outsb
arpl
lock
mov
int
test
push
cli
jle
gs
xchg
mov
aas
mov
int
lahf
mov
mov
rcll
jg
push
inc
mov
movsb
inc
mov
fcmovne
mov
aaa
das
push
repnz
push
mov
cmp
push
mov
push
xchg
inc
testl
test
and
pop
notl
push
jae
cmc
fidivs
daa
int
mov
ds
push
enter
cmc
cs
add
xor
cld
inc
cmp
pop
sub
mov
cmp
or
sbb
mov
jmp
and
ret
iret
push
push
xchg
cmpl
lock
es
das
cmc
mov
pop
dec
inc
jo
mov
sbb
stc
sbb
cmp
fwait
pop
fiaddl
sub
dec
scas
sti
addb
pop
js
shr
dec
xlat
decb
insl
std
ss
in
mov
shrb
std
fwait
jge
lods
in
mov
hlt
inc
out
jmp
subb
lods
adc
xor
inc
lret
test
xchg
mov
jo
pusha
sub
inc
jno
mov
push
push
mov
insb
ss
rcll
jl
fildl
cld
pushf
shl
dec
xor
mov
test
cmp
mov
jnp
dec
rcrl
dec
fnsave
ret
push
mov
test
in
dec
push
xchg
xchg
mov
pop
popf
in
orb
push
push
xor
adc
pop
out
ja
shrb
rorb
add
addb
ds
mov
aad
cmp
movaps
push
mov
rolb
out
push
cli
daa
fstpl
pop
fisttpll
stos
lea
dec
fstl
sub
lock
ds
pop
mov
add
lcall
mov
xchg
mov
or
testl
push
xchg
adc
cs
xchg
jns
in
icebp
cmp
mov
fistpl
sahf
adc
es
in
mov
dec
xchg
push
push
loop
add
jmp
mov
inc
mov
shr
pop
adc
and
dec
adc
mov
push
rcll
incb
add
nop
sub
pop
sbb
mov
mov
setae
mov
jo
pop
addb
cmp
pusha
pop
xchg
pop
outsl
jae
lods
and
insb
inc
cmpsb
xchg
adc
inc
inc
mov
clc
ja
rol
or
inc
imul
inc
test
jecxz
mov
ficompl
ss
aad
push
pop
dec
or
sub
mov
pop
adc
pop
mov
mov
push
push
or
fst
push
shlb
pusha
pop
cmc
xchg
loop
jmp
pushf
jmp
mov
adc
sbb
sbbl
adc
hlt
pop
rolb
cmpb
pop
loopne
xor
jnp,pn
xchg
popl
push
mov
mov
mov
lods
in
lds
sbb
data16
inc
jle
xor
xor
cmpsb
mov
mov
adc
xor
aaa
cmp
jo
push
push
aad
incl
daa
add
sbb
andl
xchg
or
shlb
jl
add
pop
xchg
loopne
sti
jo
jns
adc
out
lahf
lods
jns
and
pop
ficoms
fwait
addl
das
mov
mov
adc
sub
clc
or
mov
push
cwtl
pushf
push
out
mov
loopne
icebp
pcmpeqd
pop
iret
inc
jle
int
leave
dec
dec
inc
out
push
lret
outsb
ror
mov
movsb
mov
aad
mov
cmp
xchg
sbb
into
xchg
out
outsb
inc
in
fxam
popa
mov
mov
lcall
or
lods
adc
mov
rclb
jo
mov
cmp
in
stc
jno
pop
dec
jle
xchg
push
fs
xchg
arpl
repnz
inc
out
add
outsl
popa
push
mov
test
lcall
rcll
test
xchg
rclb
push
std
dec
cld
xor
mov
fs
fucom
inc
xchg
inc
lods
add
dec
xlat
sub
mov
movsbl
ror
bts
mov
stc
cmpb
push
pushf
lea
jne
cwtl
cwtl
jmp
out
or
pushf
dec
mov
popf
loope
pop
mov
movsb
test
pop
outsl
cmp
sub
jae
repnz
inc
movsl
sahf
data16
push
les
mov
or
bnd
jp
insb
add
ljmp
pop
or
mov
mov
sarl
xchg
out
dec
arpl
mov
rorl
fs
ja
cmc
cmc
imul
jmp
icebp
push
je
pushf
dec
mov
cmp
jmp
pop
ljmp
out
cmp
into
pop
mov
scas
repnz
pop
shll
jno
popa
repnz
push
mov
arpl
out
jmp
scas
ret
mov
inc
mov
xchg
jb
mov
xchg
lds
das
jge
and
mulb
mov
mov
lahf
bound
xchg
loope
mov
jecxz
fs
sar
jge
idivb
mov
movsl
fs
lret
movb
inc
scas
ror
or
mov
pushf
dec
mov
jae
stos
xchg
or
jo
push
inc
inc
cld
mov
negl
popa
push
cwtl
mov
rcrl
popa
es
and
dec
int
jge
jne
mov
stos
mov
insb
imul
rolb
lods
out
push
mov
pop
test
aas
lcall
pop
push
ja
mov
scas
ds
pop
mov
mov
lahf
imul
push
xor
insb
push
and
mov
lods
into
stos
jmp
stc
call
lea
jbe
bsr
lea
adc
sub
ror
rcr
sar
mov
mov
rcl
rol
btr
xchg
mov
pusha
add
shrd
bsf
shr
shl
not
mov
sar
cmp
pushl
add
call
negl
mov
jecxz
cmp
lret
cmp
pop
push
mov
popa
add
jns
sbb
cmpsb
cltd
jmp
in
jle
xchg
push
rorl
pop
pop
addr16
sbb
movsb
ret
sahf
test
xchg
mov
js
fwait
test
mov
loop
nop
ss
sbb
cmp
push
fmul
dec
rclb
cwtl
pusha
pop
inc
orl
lea
lock
scas
aam
sub
add
or
cmp
je
popa
cmp
or
clc
flds
sbb
and
mov
cmpsb
xor
or
loope
xor
data16
lods
insl
xchg
or
pusha
xchg
add
jae
enter
icebp
or
into
mov
inc
fucomi
insl
jnp
sub
or
lock
mov
mov
adc
and
push
mov
pop
clc
sub
mov
dec
jp
lea
ja
and
cmp
sub
or
add
bsf
mov
sub
xor
mov
test
shr
clc
not
mov
jmp
add
add
add
cmpl
push
add
sbb
cs
add
jb
add
add
add
and
stc
or
pushf
jmp
pop
out
jmp
pushf
dec
xor
cmp
cmp
mov
sub
addr16
mov
xchg
fldt
push
leave
jl
aam
mov
xchg
into
inc
inc
push
sbb
scas
jge
inc
fimuls
ret
sti
xchg
mov
jns
dec
cltd
sbb
mov
sub
les
ret
js
mov
filds
ret
jl
dec
pushf
dec
cmpsl
mov
mov
sbb
dec
sub
addr16
and
scas
adc
out
mov
xchg
sub
insb
movsb
push
jle
int
dec
cmp
xlat
bound
xchg
outsl
sbb
jge
jmp
ljmp
cltd
sarl
popa
pop
fbld
idivl
push
cld
fldenv
and
sbb
adc
repnz
insl
add
dec
jno
xchg
push
mov
sub
xor
dec
repnz
sub
add
scas
call
inc
sahf
add
or
and
into
mov
inc
and
pop
push
icebp
xchg
mov
adc
mov
jnp
rclb
mov
mov
enter
addl
inc
pop
adc
das
cmc
or
sti
inc
and
xchg
out
add
push
xchg
push
sbb
repz
mov
or
cltd
push
sbb
call
lods
nop
pop
adcb
mov
sbb
cmp
inc
sub
dec
hlt
push
js
add
stc
les
insb
int
cmpsl
xchg
and
and
imul
cli
push
pushf
push
pushl
mov
push
movl
pushl
movl
pushf
jmp
pushf
pusha
or
push
mov
jmp
pushf
lea
jne
shl
mov
rcl
add
sub
ror
cmp
mov
bt
bt
sub
call
cmp
jmp
call
jg
mov
sbb
mov
imulb
imul
xor
outsl
popa
out
pop
pop
inc
popa
call
out
dec
push
push
imul
jmp
mov
ljmp
outsl
in
movb
sub
lods
jg
arpl
aaa
popf
xchg
jne
not
neg
mov
call
jg
xor
adc
jp
hlt
data16
cld
dec
popa
xchg
imul
cmpl
push
jmp
add
repz
sahf
fs
popf
daa
ljmp
nop
lods
repz
mov
test
jb
in
arpl
mov
and
dec
nop
call
pushf
jmp
mov
test
cmp
call
pusha
pushf
jmp
jmp
pushl
lea
jne
jmp
jle
ds
enter
test
pop
mov
cmp
icebp
aaa
in
fmul
dec
sbb
adc
xchg
lods
jae
sub
add
lcall
jne
jle
movsl
lock
mov
xor
inc
and
out
in
push
pusha
movw
lea
jmp
test
jmp
cmp
test
cmp
push
pusha
push
mov
lea
jae
push
pushf
test
cmp
call
pushl
movl
call
pusha
movl
pushl
mov
movw
movl
pusha
pushf
pushf
lea
jmp
xor
cmc
call
pusha
lods
jmp
pushl
movl
jmp
push
or
pushf
dec
roll
fwait
pushf
mov
sbb
and
loopne
xchg
aas
sbb
xchg
stos
aas
in
into
test
push
insb
or
movsl
imul
fisubs
sub
and
loopne
pop
rorb
nop
sub
cmp
xchg
arpl
test
sbb
cmp
movb
pushf
jmp
push
push
xchg
jmp
lea
je
stc
add
call
push
adc
movl
jmp
jns
ffreep
pushf
dec
sub
ljmp
arpl
adc
jbe
pop
pop
stc
mov
cli
sub
mov
cltd
fistpl
mov
sbb
call
pop
lahf
jno
cs
in
cmp
jmp
arpl
dec
mov
push
ljmp
lret
pop
add
sbb
or
dec
add
frstor
les
xor
add
cmp
dec
sbb
mov
adc
cs
and
xor
mov
jb
leave
mov
outsl
mov
aam
je
shll
inc
call
std
int
pushf
dec
jb
ljmp
mov
imul
adcb
adc
fsubr
xchg
or
xchg
es
xchg
insb
jns
aad
xchg
push
inc
inc
in
inc
call
xchg
xor
add
insb
mov
push
loopne
xor
loope
adc
cld
xor
cmpsl
icebp
test
pop
push
mov
cmp
pop
xchg
jno
mov
mov
sbb
inc
rcll
dec
inc
sbb
cmp
mov
stc
cmc
test
add
mov
movl
call
lea
call
jmp
call
pusha
jmp
call
jge
add
dec
iret
mov
popa
shll
push
js
jp
jmp
enter
push
xor
pop
jo
daa
dec
sahf
jno
sub
out
and
insl
pop
push
cld
test
bt
jmp
call
lea
jne
lahf
shld
pusha
btr
sub
push
cmp
sbb
sar
mov
rcl
add
bt
mov
movb
jmp
movl
jmp
movb
lea
jb
test
cmc
call
push
call
pushf
movw
mov
pushf
pushf
mov
pushl
ret
jmp
shl
sar
mov
cmc
bt
push
clc
sub
pushf
lea
jmp
call
jmp
movzbw
mov
cmp
call
mov
mov
movb
pushf
pusha
pushl
ret
aas
sar
btr
aad
mov
cmp
jmp
and
not
btc
ror
mov
call
shl
stc
mov
pushf
jmp
pushl
mov
pushf
pushf
pushl
lea
jmp
mov
movb
pushf
popl
call
xor
jmp
mov
push
pusha
lea
jae
push
jmp
lea
mov
jmp
lahf
ror
mov
pushf
push
call
call
pushf
mov
pusha
mov
pushf
lea
jmp
mov
call
mov
cld
not
mov
cld
pushf
cld
pushf
rep
not
movzbw
mov
rol
pushf
lea
bt
mov
bt
pushl
popf
pushf
pushf
pushf
movb
lea
jmp
jmp
pop
not
repz
cmc
btc
push
movzbw
pushl
ja
push
bswap
mov
stc
bt
cmc
sub
push
lea
jmp
jmp
call
jmp
lea
jne
movsbl
mov
cmp
cmp
cmp
and
cmp
cmp
stc
cmp
pushf
lea
jne
btr
sar
stc
bsf
xorb
movzbw
push
not
jmp
pushl
popl
push
lea
jmp
call
movl
call
shr
mov
cmp
shl
setp
jns
mov
pushf
stc
not
push
cmp
jmp
push
dec
call
pusha
pusha
call
test
pusha
add
cmc
lea
jbe
sub
pushf
cmp
cmc
sub
pushf
pushf
pusha
call
add
pusha
lea
jp
push
mov
pusha
pusha
mov
lea
jmp
repz
popl
not
lea
dec
inc
mov
lea
dec
cmc
movzbl
pushl
popl
movsbw
ror
neg
sar
movl
lea
rol
adc
mov
stc
bt
sub
push
pushf
pushl
lea
jmp
xchg
xchg
call
jmp
pushf
mov
pushf
xchg
pushf
lea
ja
push
push
call
neg
not
mov
pusha
movb
bt
sub
jmp
pushf
mov
movl
movb
pushf
pushf
popl
call
aad
bts
jmp
lea
cpuid
stc
jmp
mov
pushf
pushf
popl
jmp
inc
jmp
bsr
aad
test
movzww
push
add
pusha
push
jmp
sub
not
bt
xor
mov
sub
cmp
ror
mov
cmc
cmp
call
shl
add
call
jmp
pushf
movb
mov
jmp
push
jmp
mov
push
lea
jmp
sub
pusha
pushf
div
pushl
jmp
movw
repz
popl
cmc
or
shl
mov
sar
cmc
bsr
jmp
inc
call
dec
setnp
sbb
shl
add
add
pusha
movzbl
pushf
mov
bt
add
jno
clc
or
pusha
pushf
lea
je
cmp
stc
test
cmc
xor
pusha
test
pushl
pushl
xchg
cmp
mov
bt
push
pushf
stc
sub
movb
push
pushf
lea
jne
clc
sub
pushf
pusha
xchg
jmp
call
mov
pushl
pusha
pushf
lea
jmp
pusha
mov
push
lea
jmp
setb
bswap
mov
setno
mov
push
pushf
lea
call
mov
pusha
push
mov
mov
movw
pushf
lea
jmp
bt
stc
clc
sub
movw
pushf
push
lea
jmp
movb
mov
pusha
mov
lea
jmp
mov
push
movl
movb
lea
jmp
xadd
shl
clc
shld
mov
rcl
add
pushf
pusha
setbe
call
push
pushf
popl
call
pushf
popl
mov
lea
ja
pushf
pushl
popl
push
pusha
lea
jmp
pushl
popl
pushf
lea
jmp
stc
test
pushf
add
call
call
add
pusha
jmp
pushf
bswap
mov
call
mov
pusha
pushf
lea
jmp
lea
mov
push
jmp
mov
shld
neg
movzbw
shl
pushl
popl
movzbw
movl
sbb
mov
pushf
push
clc
clc
sub
pushf
mov
movb
mov
lea
jmp
push
call
push
lea
jne
clc
bt
sub
pushf
pushf
xchg
jmp
and
pusha
pushl
pushf
popl
jmp
xor
add
rcr
pop
ror
movzbw
push
pushf
inc
movzbl
pusha
not
inc
bt
and
bt
dec
xor
btr
and
clc
add
movzbw
setl
jmp
shr
pusha
movzbl
pushf
bt
jmp
push
mov
not
pop
repz
popl
pushf
cmc
xchg
btr
ror
shld
rcr
pushl
popl
mov
or
rol
pushl
movl
bswap
cmc
mov
bt
bts
sub
lea
shl
xchg
neg
neg
not
ror
bt
rcr
or
mov
xchg
sub
btc
mov
xadd
pusha
movzbw
mov
movsbw
shl
pushf
shr
add
lea
add
xor
mov
call
pusha
push
pushl
mov
pushl
movw
pushl
mov
jmp
mov
mov
pushl
ret
add
pusha
pusha
mov
mov
lea
jmp
movw
mov
push
pushf
lea
jmp
dec
pushl
cmp
mov
movb
neg
stc
xor
pushf
cmc
bt
mov
movb
jmp
stc
add
push
pusha
lea
jmp
clc
cmc
shl
test
stc
bt
test
shr
bt
stc
stc
or
test
jmp
mov
sbb
mov
test
test
bt
pushf
add
mov
jmp
btc
rol
add
bsf
not
sbb
mov
jmp
pushf
call
mov
mov
push
jmp
pusha
clc
sub
call
shr
pushf
test
shr
mov
bt
push
cmp
sub
pushl
pushf
test
add
call
cmc
rol
shr
mov
stc
cmc
bt
sub
lea
je
pushf
pushf
push
mov
pushf
push
pushl
pushf
lea
jmp
seto
mov
movb
mov
call
cmc
jmp
mov
call
cmp
add
pusha
pushf
lea
jmp
pusha
call
clc
mov
btr
neg
xor
cmc
add
and
mov
movsbw
xor
shr
rol
ror
adc
mov
pushf
call
movl
add
pushl
lea
jmp
pushf
mov
call
mov
push
lea
jne
btr
shrd
seta
mov
jmp
mov
mov
pushf
pushl
movzbw
mov
mov
not
mov
jmp
and
jmp
movzbw
movsbw
pushl
mov
mov
movsbl
mov
movsbl
movzbw
lea
jmp
pushf
popl
call
jmp
push
jmp
push
push
mov
not
pop
push
movsbw
repz
popl
pushf
call
mov
pushf
mov
pop
bswap
pushl
pusha
repz
popl
pop
mov
shl
bt
pop
and
pushl
popl
shrd
btc
movl
sub
shrd
mov
push
pushf
test
mov
sub
push
pushf
push
lea
jmp
mov
not
movsbw
inc
cmc
jmp
jmp
test
rol
dec
rcr
movzbl
test
pusha
push
pusha
add
cmc
add
js
pushf
push
sub
pushl
inc
call
movb
mov
jmp
pushf
pushf
jmp
jmp
cmc
mov
cmp
add
pushf
pushf
pushf
lea
jmp
pushf
jmp
test
add
pushf
pushf
movb
push
lea
jmp
lahf
mov
pusha
mov
pushf
jmp
pushl
mov
push
call
movsbw
mov
sbb
shl
mov
cmc
sub
stc
push
shl
movw
call
add
movb
call
mov
test
pushf
call
lea
mov
jmp
pushf
movb
inc
pusha
pushf
rol
pushf
pushf
pushf
dec
stc
cmp
lea
call
stc
push
add
push
push
pushf
jmp
pushf
pushf
lea
jnp
lea
push
push
lea
jmp
movzbw
call
mov
jmp
jmp
push
call
clc
add
test
clc
sub
pushf
movb
mov
pushf
push
pushf
push
lea
jmp
mov
call
movzbw
not
mov
pusha
call
lahf
mov
bt
clc
pusha
stc
lea
clc
call
pusha
call
call
pushf
call
pushf
mov
pusha
mov
push
lea
jmp
mov
pop
mov
not
push
bswap
movsbw
mov
lea
not
pusha
pop
repz
popl
test
mov
add
shl
pushl
neg
pushl
popl
bts
movl
or
and
rcr
btc
mov
cmc
pushf
sub
pushf
push
movl
lea
jmp
call
pushf
and
pushf
pushf
cmp
pusha
cmp
call
jmp
call
add
pushf
mov
jmp
neg
mov
pusha
mov
pushf
cmc
add
pushf
pushl
pushf
lea
jmp
bt
mov
bsr
jmp
pushf
lea
ja
push
pusha
mov
jmp
push
pusha
mov
call
ss
mov
jmp
mov
incl
mov
pushl
push
mov
pushl
and
ljmp
add
call
sub
lcall
mov
jmp
pop
mov
incl
mov
incl
mov
pushl
and
jmp
adc
mov
pushl
push
mov
decl
mov
incl
mov
lcall
mov
sti
and
sti
and
jmp
and
jmp
mov
incl
mov
ljmp
adc
ljmp
jmp
mov
ljmp
jmp
adc
pushl
mov
call
adc
mov
or
mov
incl
mov
call
mov
pushl
push
mov
lcall
mov
mov
push
mov
call
push
mov
lcall
mov
ljmp
push
mov
decl
and
incl
and
ljmp
adc
mov
lcall
mov
jmp
mov
in
and
lcall
push
mov
pushl
and
decl
sub
mov
decl
mov
jmp
mov
jmp
mov
incl
mov
call
sbb
lcall
mov
call
adc
mov
call
sbb
incl
mov
incl
and
lcall
mov
cld
sbb
decl
or
mov
mov
pop
mov
lcall
and
incl
mov
lcall
and
push
daa
mov
lcall
mov
incl
pop
mov
pushl
call
push
mov
incl
and
lcall
sub
pushl
and
pushl
mov
jmp
and
out
pop
mov
jmp
mov
incl
mov
jmp
mov
in
and
jmp
adc
mov
jmp
mov
out
pop
mov
decl
mov
call
adc
call
mov
lcall
mov
pushl
mov
jmp
mov
lcall
jmp
push
mov
incl
mov
incl
mov
jmp
sub
pushl
mov
pushl
mov
lcall
pop
mov
call
mov
jmp
adc
mov
jmp
sbb
lcall
mov
pushl
mov
call
sbb
lcall
mov
in
and
incl
mov
ljmp
and
mov
sub
pushl
mov
cld
sbb
inc
mov
bswap
mov
cmp
cmc
push
call
lea
movl
call
jmp
clc
bswap
cmc
rol
mov
call
mov
pushf
mov
lea
jmp
call
sub
pushf
call
jmp
movsbw
mov
call
call
pusha
pushl
popl
mov
lea
jmp
push
movsbl
mov
push
call
jmp
jmp
add
clc
cwtl
cmp
bt
movl
movw
sub
pushf
mov
push
lea
jmp
not
push
mov
pop
pop
pusha
repz
popl
bsr
mov
rcr
dec
pushl
popl
neg
shld
rcl
movl
ror
mov
pushl
bt
pushf
sub
pushf
pushf
mov
movb
lea
jmp
mov
not
movzbw
pusha
push
mov
push
repz
popl
rcl
mov
movsbw
cmc
pushl
popl
add
movzbw
sub
movl
cmp
btr
mov
jmp
sub
push
jmp
call
pushf
movb
mov
call
sub
pushf
jmp
mov
movsbl
call
jmp
pushf
jmp
pushf
mov
call
pushf
rol
mov
pop
pushf
pushl
popf
bswap
pusha
movzbw
mov
pushf
jmp
btr
mov
cmp
pushl
popf
pushf
pushf
pushf
lea
jmp
mov
push
pushf
movb
mov
lea
jmp
call
mov
call
jmp
pushl
popl
push
lea
jmp
pushf
push
lea
jne
cmp
pushf
pusha
sub
jmp
mov
inc
shl
push
xor
mov
pusha
sub
pushf
shr
pushf
call
and
cmc
mov
and
mov
shl
ror
sbb
mov
pusha
stc
sub
bt
shr
call
dec
cmc
jmp
not
pushf
inc
pushf
add
bt
cmc
pusha
cmc
mov
call
call
mov
mov
mov
pushl
divl
pushf
push
call
pusha
mov
setae
mov
mov
stc
sub
movb
call
inc
bt
bt
cmc
clc
rol
pushl
mov
pushl
call
bt
ror
pusha
pushf
push
jmp
pushf
movl
call
push
pusha
mov
movb
mov
movw
pushl
pushf
popl
mov
call
pushf
jmp
pushf
pushf
popl
push
pushl
popl
mov
pushf
lea
jmp
pusha
jmp
setle
cmc
xor
movzbl
clc
pushf
clc
sub
jae
xor
bt
stc
jmp
mov
pushf
mov
movb
lea
jmp
pushf
mov
shl
bsf
mov
movb
bt
pushf
sub
bt
stc
mul
mov
mov
pusha
push
call
movzbw
sar
mov
rol
mov
jp
add
push
push
pusha
pushf
lea
jmp
pusha
pushl
mov
movsbw
jmp
mov
pop
mov
bswap
mov
movzbl
pushl
lea
movw
mov
jmp
pushf
pusha
movb
mov
pusha
mov
xchg
pushf
mov
movzbw
pushl
pushf
mov
movzbw
lea
mov
mov
not
not
mov
bswap
mov
movw
push
repz
popl
sub
rol
shl
mov
pushf
bsr
pushl
popl
stc
sbb
shld
movl
lea
clc
and
cmp
mov
jmp
call
not
mov
not
call
pushf
pushl
popl
pushf
push
pushf
lea
jmp
btr
mov
call
call
sub
push
mov
pushf
pushf
pushf
push
lea
jmp
cwtl
bt
movw
clc
sub
jmp
call
pusha
not
push
inc
cmc
add
call
pusha
jmp
shr
bsf
or
movzbw
mov
bt
bt
test
test
sub
pusha
mov
mov
mov
push
lea
jmp
pushl
popl
mov
mov
mov
mov
lea
jmp
mov
movw
call
mov
lea
call
movb
ror
lea
jo
cmp
bt
add
test
cmp
bt
cmc
sub
push
call
jmp
cmc
sub
pushf
call
rcl
cmc
rcl
ror
rcl
mov
sar
xor
dec
add
cmp
sub
pushf
and
xor
shl
call
test
pushl
pushf
clc
push
jmp
movsbw
bt
ror
bswap
xor
btc
sbb
adc
btc
sub
xor
shl
and
mov
dec
mov
pushf
pushl
test
sub
movl
pushf
jmp
mov
jmp
call
mov
pusha
lea
jmp
stc
pushf
ror
pushf
jmp
mov
mov
call
jmp
lahf
lahf
mov
js
test
cmp
add
jmp
movl
push
shl
jmp
pushf
pushf
decl
push
lea
jne
push
mov
pushf
pushf
push
lea
jmp
call
movw
add
pushl
mov
lea
jmp
shr
neg
mov
cmp
sub
pop
shr
shr
push
pushf
mov
test
call
cmc
lea
call
aas
mov
btc
mov
cmc
stc
clc
jmp
push
not
mov
push
lea
not
jmp
mov
mov
movw
lea
jmp
mov
bswap
mov
not
pushf
cld
bswap
movzbl
call
cmc
call
test
clc
or
pusha
call
pushf
sub
movl
pushf
movb
push
lea
jmp
movzbl
rol
cmc
neg
mov
stc
shl
btr
shrd
mov
test
pusha
call
mov
call
shl
btc
shl
not
mov
jmp
pushl
popl
movb
pushf
pushl
pushf
lea
jmp
test
call
add
movl
shrd
mov
pushf
mov
call
pushl
pusha
cbtw
jmp
pusha
mov
pusha
lea
jmp
jmp
jmp
movb
jmp
lea
ja
and
inc
bt
push
lea
cmc
aaa
sar
bsr
lea
clc
rol
daa
sub
dec
add
stc
cmp
lea
sbb
mov
btc
bts
and
xor
pushf
clc
sub
call
pusha
mov
mov
pusha
mov
jmp
movl
dec
bt
call
call
cmc
add
lea
jno
pushf
movb
push
inc
mov
call
call
sub
movb
movw
bt
mov
not
bt
jmp
clc
jmp
btc
cmc
ror
neg
mov
pusha
add
pushl
push
lea
jmp
movsbl
mov
movsbl
mov
mov
movb
pushl
ret
mov
mov
pushf
mov
lea
mov
pushf
mov
bswap
jmp
pushf
popl
push
call
mov
mov
mov
pushl
lea
jmp
or
mov
shl
mov
pusha
clc
cmc
cmc
sub
test
bt
shl
push
pusha
pushf
mov
movb
pushf
pushf
popl
movw
jmp
pop
setg
mov
pushf
pushl
movw
lea
jmp
sub
mov
mov
pushf
pushf
lea
jmp
call
mov
call
pusha
not
call
movzbw
pusha
setno
mov
pusha
mov
call
mov
call
pusha
mov
push
push
pushf
pushf
lea
jmp
push
mov
pushf
pusha
pusha
movw
xchg
pop
mov
push
not
movzbl
mov
call
pushl
mov
call
movsbw
mov
bt
cmc
push
movb
add
pushf
lea
jmp
shrd
bswap
mov
cmp
clc
stc
add
pushf
pushl
pushf
lea
jmp
jmp
mov
call
call
call
pushl
push
jmp
pushl
inc
movl
movb
pushl
test
add
clc
cmp
sub
push
push
pushf
push
mov
mov
push
mov
mov
lea
jmp
call
push
pushl
popl
pushf
lea
jmp
pusha
pushl
mov
movb
mov
bswap
mov
lea
movzbw
pop
movsbl
mov
pusha
pop
bswap
movsbw
mov
pop
mov
movzbw
movzbw
pusha
mov
mov
lea
pushf
lea
repz
popl
rol
sub
sbb
bts
mov
or
btc
pushl
popl
clc
sar
not
stc
movl
rcl
mov
mov
bt
sub
pushf
lea
jmp
mov
pusha
pushf
pushl
push
lea
jmp
bswap
jmp
jmp
mov
call
mov
mov
movl
lea
jo
pushf
call
pusha
pushf
mov
mov
mov
pushf
pushl
pushf
popl
push
pushf
lea
jl
popl
push
lea
jmp
add
add
dec
clc
jmp
push
mov
pushf
movb
lea
jmp
mov
mov
pushf
pushl
ret
bt
cmc
ror
cmp
cmc
push
call
pushf
pushf
push
mov
call
lea
jle
cmc
or
pushf
pushf
lea
je
jmp
xchg
lea
xchg
movzbw
mov
pushf
pusha
mov
not
bswap
xchg
pushf
pop
mov
push
jmp
ror
notl
bt
push
mov
cmc
sub
pushf
jmp
sub
push
pushf
lea
jae
pusha
mov
push
push
pushf
lea
jmp
sub
cmc
pushf
sub
jns
push
cmpl
pusha
mov
mov
pushf
mov
pushf
call
xadd
test
shld
cwtl
mov
stc
cmp
rcr
call
call
pushf
pushf
mov
pusha
push
mov
push
bswap
lea
mov
movw
mov
pusha
mov
movzbl
pop
mov
push
mov
pop
mov
jmp
xchg
push
movsbw
mov
mov
mov
call
jmp
movsbw
jmp
mov
mov
pushf
pushl
ret
cmp
test
clc
test
sub
call
aaa
sub
movzww
pusha
jmp
inc
call
mov
pushf
pushf
push
push
lea
jmp
jmp
mov
pushf
pushf
xor
rcl
mov
shl
shl
mov
bt
movb
call
pushl
popl
inc
dec
add
bsr
movl
sub
bswap
mov
bt
pushf
sub
pusha
push
pushf
mov
lea
jmp
cmc
movzbl
not
add
not
adc
add
mov
dec
inc
cmc
rol
bswap
setge
pushf
jmp
pushf
jmp
mov
stc
pushf
sub
jmp
bt
lea
test
jmp
call
lea
btc
xadd
test
mov
xor
test
add
push
call
mov
call
movsbw
movsbl
mov
call
mov
pushf
movsbw
repz
popl
cmc
ror
mov
call
btc
shrd
shld
push
call
pushl
popl
push
pusha
lea
jmp
call
call
sub
pushf
test
clc
stc
add
push
call
push
lea
bswap
mov
pusha
call
push
pushl
pushl
popl
pushf
lea
jmp
pushf
pushf
pushf
pushf
pusha
pushl
popl
pushf
movb
lea
jmp
mov
pusha
push
pushf
push
lea
jmp
pushl
pushf
lea
jne
shrd
xorb
call
cmp
call
call
pusha
push
call
pushf
pushl
popl
pushf
push
lea
jmp
mov
call
jmp
call
shld
mov
ror
setbe
mov
cmc
stc
jmp
pop
not
push
mov
push
call
cmc
pusha
and
xchg
mov
rcr
stc
add
xor
btc
pusha
bt
bswap
ror
not
pushf
dec
bsf
and
inc
neg
bts
add
jbe
test
pusha
xor
push
ror
or
mov
test
cmc
add
call
mov
movsbl
bswap
not
mov
jmp
add
pushf
bt
std
test
pushl
popf
push
pusha
mov
lea
jmp
cmp
call
pushf
movzbl
stc
inc
bsf
lea
mov
pushf
stc
stc
cmc
not
movb
jmp
lea
mov
pushf
pushf
lea
jmp
daa
sbb
mov
push
cmp
add
and
mov
pushf
add
pushf
jmp
movb
pushl
popl
pushl
movb
lea
jmp
sar
shld
aad
mov
inc
mov
mov
call
pusha
rol
push
call
jmp
cmp
stc
add
pushf
dec
cmc
movl
pushf
pushf
not
movb
call
pusha
pushf
cmp
xchg
cmc
cmc
mov
clc
pushf
jmp
mov
lea
mov
movsbw
bswap
jmp
movl
pusha
mov
pusha
jmp
jmp
pusha
jmp
add
call
pusha
mov
pushl
pushl
movb
xchg
not
mov
bswap
mov
pushf
pop
not
mov
pushl
jmp
mov
call
mov
movzbw
mov
pushf
xor
mov
cmc
bt
add
jmp
push
pusha
clc
movb
add
pushl
call
lea
jle
mov
push
movb
push
pushf
lea
jmp
pushf
popl
lea
jns
pushf
pushl
popl
mov
pusha
movb
push
lea
jmp
push
movb
mov
pushf
movw
mov
pushl
lea
jmp
test
movb
mov
stc
movl
movb
sub
call
push
lea
jle
mov
pushf
pushf
pushf
lea
jmp
push
mov
pusha
movzbw
not
pushf
repz
popl
or
movw
mov
rol
pushf
or
pushl
popl
movzbl
rol
clc
movl
movzbw
sar
bswap
mov
movb
sub
pushl
push
lea
jmp
bsf
mov
btc
mov
test
test
not
pusha
not
bt
and
jmp
mov
call
lea
je
bt
clc
pushf
clc
xor
call
mov
push
mov
movsbw
movw
call
cmpl
jmp
pushf
push
mov
pushf
mov
pushf
movb
lea
jmp
mov
pushl
push
push
lea
jmp
pusha
xchg
jmp
push
jmp
pusha
pusha
call
pushf
pushl
popl
mov
push
push
push
lea
jmp
pushf
mov
pusha
movw
stc
add
push
movb
mov
mov
push
push
mov
pushl
lea
jmp
test
sub
pushl
shr
jmp
add
pusha
pushf
mov
mov
pushf
lea
jmp
mov
call
and
stc
movsbl
inc
mov
stc
add
push
lea
jmp
movw
jmp
movb
pushl
popl
push
pushf
mov
lea
jmp
bt
bt
rdtsc
bt
bt
sub
push
push
jmp
cmc
cmc
sub
stc
stc
push
sub
jmp
mov
test
pusha
neg
cmp
cmc
test
clc
xor
mov
mov
bt
clc
clc
pushf
sub
mov
push
movb
call
lea
jp
mov
pushf
movw
lea
jmp
shl
mov
not
movsbw
adc
rcl
mov
stc
add
pusha
pushl
mov
pushf
mov
movb
pushf
lea
jmp
call
lea
mov
pusha
pushl
movl
lea
jmp
movb
mov
push
pushf
popl
pusha
jmp
mov
sbb
shl
movzbl
cmp
mov
push
cmc
add
push
pusha
mov
push
mov
push
push
lea
jmp
mov
pushf
pushf
pushl
movw
lea
jmp
call
xchg
pusha
pusha
mov
bswap
lea
jo
pushf
lea
call
cmp
rcr
not
sar
mov
shl
add
movzbw
and
cmp
btr
sub
movsbw
jmp
pusha
jmp
test
add
push
push
mov
push
jmp
jmp
adc
pushl
popl
pusha
bsf
rcr
movl
pop
mov
cmp
movb
cmc
cmp
sub
pushf
lea
jmp
pusha
lea
lea
lea
pushf
cld
pushl
xchg
movsbw
movzbw
mov
cld
push
mov
movw
cld
pushf
push
rep
movsbw
rol
shld
movzbw
mov
dec
cld
jmp
clc
stc
sub
movb
pushf
call
push
pushf
pushl
popl
mov
lea
jmp
push
pushl
mov
mov
push
mov
movb
lea
jmp
btr
btr
je
mov
cmc
jmp
pushf
mov
xchg
mov
push
jmp
cmp
xor
push
lea
clc
call
pushf
pushf
popl
mov
push
pushl
pushl
popl
pushf
lea
jmp
mov
pop
mov
mov
mov
jmp
movb
pushl
pushf
mov
push
pushf
lea
jmp
dec
shr
mov
movsbw
mov
pusha
stc
pushf
not
test
pushl
movw
bt
not
cmc
mov
sub
push
call
bswap
mov
pushf
not
call
pushf
bswap
bswap
mov
pusha
push
mov
jmp
mov
push
pushf
mov
pushf
pushl
ret
jmp
call
jmp
jmp
pushl
mov
pusha
push
push
lea
jmp
lea
pushf
clc
add
jmp
bswap
call
jmp
not
pop
movsbw
repz
popl
shl
shr
pop
adc
mov
stc
inc
sbb
shr
pushl
popl
xor
pushf
pusha
cmp
movl
lea
btc
and
mov
cmc
movw
sub
pushf
pushl
pushl
mov
lea
jmp
pusha
lea
pushl
pushf
mov
movw
mov
mov
mov
lea
jmp
mov
pop
pushl
mov
mov
mov
repz
popl
not
not
mov
dec
shld
bsf
pushl
popl
inc
adc
lea
movl
btr
or
mov
movw
call
pushf
add
pusha
pushf
pushf
popl
jmp
clc
pushf
and
movb
mov
jmp
xchg
jmp
mov
pushf
mov
push
mov
lea
jmp
pushf
popl
jmp
movb
call
pushf
pushl
popl
pusha
lea
jmp
sar
test
push
mov
test
rol
mov
sar
clc
mov
bt
cmc
pusha
add
test
pusha
test
clc
shld
mov
pushf
pushl
pushf
mov
lea
jns
pusha
pushf
popl
push
call
mov
stc
add
pusha
call
pushl
popl
mov
pushl
pushl
pushf
lea
jmp
pusha
pushf
jmp
