mov
xor
push
push
call
jge
cmp
sub
add
mov
sub
push
push
push
call
add
and
xor
push
add
lea
pop
ret
cmp
aaa
cmp
xor
xor
ss
cmp
xor
cmp
add
add
mov
stos
int
xor
stos
lcall
mov
sub
bnd
fimuls
mov
and
xor
in
mov
cld
jmp
mov
test
and
pop
sbb
loope
mov
dec
das
sti
cmp
mov
fimuls
inc
dec
mov
jmp
mov
xor
stc
mov
push
iret
ret
stc
dec
mov
add
inc
sub
sti
push
cmp
adc
in
clc
jmp
jecxz
dec
fwait
adc
nop
adc
add
mov
lods
cltd
inc
and
fstpt
jmp
cmp
and
mov
xlat
call
fsubrl
addr16
mov
sub
adc
pop
iret
or
xchg
jecxz
int
mov
lret
jo
arpl
mov
shr
cmp
mov
jo
lods
or
xchg
and
out
je
daa
adc
cmpsl
dec
fcmovb
mov
jp
xchg
mov
pop
addb
mov
or
dec
jo
mov
sub
in
mov
adc
fsubrs
fistpll
adc
shll
jne
pop
fsubrl
lods
loop
adc
out
add
inc
sub
jle
in
stc
cmpl
adc
scas
leave
stos
sbb
jns
hlt
pop
sub
jecxz
jno
sahf
or
cwtl
push
xchg
jnp
iret
cwtl
adc
shl
iret
loopne
xor
ja
adc
xor
push
mov
hlt
notl
pop
dec
cltd
or
int
clc
xor
or
nop
and
movsb
adc
sbbb
pushf
push
loope
leave
hlt
mov
lcall
cld
or
aaa
mov
iret
aad
movsb
sar
pop
insb
fwait
sub
aaa
push
pop
lahf
push
jbe
inc
ret
jbe
std
inc
inc
push
shlb
mov
sub
iret
fs
enter
cmp
int3
jno
pushf
adc
cltd
mov
imul
scas
xchg
jl
iret
sahf
mov
sbb
jo
outsl
ret
mov
pop
popa
pop
or
mov
paddb
lahf
xchg
std
cmp
add
and
sub
lahf
out
mov
movsl
mov
es
push
fsubrl
jp
xchg
push
add
leave
imul
rolb
js
xlat
flds
or
jne
dec
jne
or
repnz
lcall
pop
testl
mov
pcmpeqb
loopne
cmp
test
dec
std
mov
dec
dec
cmpsb
pop
xchg
pop
testl
popa
repz
clc
ret
cld
mov
inc
rclb
ret
iret
push
fcom
dec
jmp
into
filds
aam
jo
int
fsubr
mov
mov
fwait
dec
add
cld
or
lret
lock
push
in
daa
mov
xlat
lcall
mov
aam
jmp
or
push
ja
ja
and
fwait
shrl
mov
jbe
mov
sbbb
xchg
cld
mov
cld
add
enter
pop
xor
dec
pop
fisubs
sub
cld
mov
sbb
aaa
jle
and
sub
in
shr
mov
add
pop
sub
xchg
sbbl
fcmovnbe
or
test
ljmp
xor
push
dec
mov
out
pop
xchg
mov
mov
test
sub
shll
mov
xor
nopl
adc
cmpsb
lret
sbb
repnz
pop
idiv
dec
out
stos
out
xor
add
adc
inc
xchg
lcall
pop
cmp
xor
mov
into
push
cld
ficoms
shlb
movsl
sbb
sub
pop
jge
pop
mov
mov
xor
dec
xchg
jne
mov
jg
push
in
lea
push
mov
inc
gs
inc
rorb
pushf
dec
inc
lahf
shrb
out
insb
sbb
mov
sbb
cs
xchg
sbb
adc
sbb
clc
add
push
sub
in
out
clc
pop
aas
pop
jmp
xchg
mov
add
mov
in
imul
or
mov
mov
notb
inc
mov
shlb
cmc
sub
and
ljmp
loop
jp
divb
and
sub
add
push
inc
cmp
mov
pop
scas
mov
inc
add
cmpsb
icebp
push
lahf
scas
imul
enter
sti
xorb
imul
mov
pushf
jp
in
jne
out
mov
dec
and
aas
adc
xor
outsb
test
outsl
or
sbb
arpl
jecxz
xor
xor
mov
dec
imul
negb
xor
sarl
sub
cmp
mov
xorl
mov
out
shrb
sbb
adc
leave
sub
mov
daa
add
sub
jge
cmpsl
mov
mov
push
sbb
outsb
jmp
pop
pop
sub
adc
push
arpl
lret
pop
mov
mov
jo
and
aad
and
cld
sbb
das
add
cmp
sub
xchg
in
mov
in
mov
mov
rclb
jecxz
xchg
in
out
rcll
fidivl
fsubl
insl
and
mov
xor
iret
daa
fwait
mov
ja
dec
lods
je
shrb
mov
andb
ret
mov
inc
push
push
push
mov
mov
lea
inc
xchg
mov
frstor
pop
outsb
test
jecxz
push
mov
push
stos
push
mov
xchg
lods
pop
jb
ja
jge
dec
and
orb
push
cmp
xchg
je
out
sub
bound
push
cmp
xor
call
cmp
push
or
movsb
and
call
mov
pop
fcmovnbe
loope
add
scas
ror
movsl
xor
orl
ljmp
pop
xchg
jmp
mov
sub
push
dec
frstor
mov
lods
cmpsl
imul
jo
dec
cmp
call
dec
jae
aam
cmovo
sbb
mov
ror
je
inc
lds
aad
sbb
pop
clc
jecxz
or
mov
arpl
leave
inc
test
fisubl
test
jg
mov
shrb
cmpsb
in
shll
pop
aas
or
fsubs
loope
cwtl
jge
mov
andb
into
xchg
adc
fsubl
lock
xor
enter
std
or
add
push
pop
mov
jg
cli
push
cmp
push
div
fsubrs
dec
sbb
pusha
lcall
pop
xchg
in
arpl
lcall
xchg
sbb
sbb
out
mov
lea
add
daa
pop
xlat
repnz
pop
clc
mov
cmpsb
out
push
fwait
or
jg
mov
jnp
and
lea
push
jle
mov
pop
hlt
sbb
or
dec
fadd
pusha
dec
inc
mov
mov
lea
insl
and
not
out
das
dec
enter
jb
movsb
shl
cmc
clc
mov
or
cmp
cmp
cwtl
sub
rcrb
ljmp
aam
adc
addl
ljmp
push
mov
loop
mov
es
lcall
add
mov
mov
insl
outsl
sbb
aam
cmp
lea
dec
pop
mov
fsubl
insb
ds
xlat
push
dec
push
dec
lret
ds
loopne
mov
test
ret
cwtl
cld
xchg
or
ja
jecxz
scas
sbb
xor
and
lret
xor
sti
and
adc
les
and
inc
mov
mov
scas
jae
and
sub
mov
cmpsb
lahf
jns
adc
jle
cltd
push
repz
bound
push
pop
mov
sbbl
cmp
int
and
or
lret
pop
xchg
xchg
std
cmp
and
in
dec
test
jp
xor
shr
mov
sbb
fimull
into
and
testb
popf
inc
mov
pop
mov
adc
pop
jb
jo
add
test
dec
push
cld
push
test
mov
sbb
cwtl
orb
sbb
leave
dec
sbb
lret
imul
rcrb
stos
out
rorl
out
inc
jbe
clc
out
fistps
cmp
push
xorl
gs
sub
icebp
add
mov
jmp
jb
mov
cmp
out
xor
push
jl
popf
ret
ds
mov
pop
ss
xchg
dec
pushf
sarb
jg
test
repnz
loop
inc
jno
popa
pop
ret
push
mov
and
dec
add
cltd
jmp
mov
insb
jnp
shrl
int3
xchg
or
sbb
ja
ret
push
pusha
sbb
mov
aaa
cwtl
xchg
pop
test
push
push
push
mov
and
stos
push
inc
inc
inc
popf
scas
cmp
sahf
fiadds
arpl
mov
lret
inc
fs
in
ret
out
push
mov
imul
push
lcall
jo
xchg
mov
mov
pop
jl
popa
das
sbb
arpl
mov
repz
push
ficompl
cmp
cmp
fsubrl
push
repnz
scas
cmp
aas
insl
scas
data16
leave
iret
pop
sti
pop
xchg
sub
aad
loop
bound
sub
and
mov
push
sarb
cs
xchg
jecxz
into
mov
dec
insl
pop
clc
mov
leave
push
jecxz
or
fdivrs
xor
dec
scas
push
in
mov
ret
sbb
and
lods
cltd
or
cwtl
out
dec
xlat
inc
pop
data16
dec
movsb
les
call
lods
xchg
popa
mov
clc
mov
xchg
bound
jge
and
loope
mov
xor
adc
cwtl
insl
test
adc
xchg
jbe
mov
addr16
in
daa
pushf
adc
stc
inc
jmp
lock
mov
fstps
or
mov
sbb
lds
sbb
lcall
cli
stos
daa
clc
inc
inc
hlt
jne
mov
mov
call
cmp
push
fdivs
push
mov
nop
dec
xor
push
ret
xchg
jno
rcrb
mov
mov
dec
loope
push
mov
pop
rorl
dec
pop
mov
add
sub
lret
sub
in
dec
jb
dec
pop
mov
pop
repnz
rorl
cwtl
push
sub
ss
sbb
enter
adc
sbb
pop
les
cmp
push
xchg
mov
push
jnp
mov
js
arpl
imul
ret
and
sbb
adc
jnp
bswap
sahf
and
inc
xchg
push
test
sub
jb
push
lock
repz
dec
and
mov
add
inc
out
cmp
pop
clc
stos
test
or
jo
ss
jns
cmp
jg
dec
imul
inc
call
dec
scas
adc
rol
in
outsl
stos
in
jl
ret
fnstsw
in
xor
popa
sub
inc
call
xchg
and
sub
lea
pop
stos
or
dec
das
xchg
and
mov
mov
sbb
repnz
pop
vmwrite
cmp
dec
shl
test
sti
mov
aas
in
jne
push
icebp
or
fiaddl
sti
push
leave
mov
in
int3
sbbl
inc
fucomi
sti
popf
lahf
ds
inc
stos
cmp
outsl
cmp
stos
add
ss
lods
inc
pop
jae
and
repz
sub
mov
ljmp
add
mov
test
cmp
and
inc
jnp
adc
or
cs
insb
fsubrl
pop
outsl
jnp
jae
cmpsb
jle
nop
or
iret
xor
cs
outsl
dec
mov
dec
adc
leavew
les
icebp
notl
imul
jl
xchg
inc
or
xor
icebp
int3
jae
mov
sub
push
cwtl
cwtl
es
in
pop
mov
push
and
sbb
sbb
ja
jnp
sub
cmp
xor
pop
das
fbld
push
lahf
xchg
test
xchg
mov
ret
rcl
lock
cmp
mov
je
inc
push
push
mov
mov
lds
enter
rolb
mov
mov
insb
loope
lods
leave
jbe
sub
pushf
pop
sbb
repz
or
sahf
aam
jg
cmp
jecxz
outsl
ds
xor
and
pusha
loopne
cmp
mov
mov
cmpsl
test
adc
jg
xchg
sub
in
shll
bswap
pop
addr16
aad
mov
mov
sbb
out
mov
and
out
mov
movb
pop
leave
movsb
cmp
xchg
push
inc
ja
mov
xchg
inc
lahf
inc
gs
xor
sbb
dec
push
dec
xor
dec
mov
sbb
and
fs
loop
inc
or
inc
push
imul
pop
xchg
xor
lea
add
push
cmp
mov
mov
mov
fisubrs
mov
adc
shl
jecxz
gs
out
cmp
sbb
pop
lods
push
sarb
add
nop
je
jns
fst
jge
cmp
mov
sbb
inc
mov
outsb
aam
jbe
mov
hlt
and
lds
pop
sbb
lea
aam
pop
dec
shlb
push
stos
cmp
jge
pop
add
pop
mov
sub
and
pop
xor
push
dec
dec
pop
out
sub
dec
sub
test
gs
pushf
push
dec
mov
stos
xchg
movsl
adc
aas
sarb
rclb
mov
mov
sub
jnp
add
shl
push
in
out
jl
jb
push
pop
cmp
aam
xor
xor
sti
mov
ljmp
insl
sbb
adcb
cmc
aam
mov
mov
mov
dec
jb
repz
add
bound
rcll
fldenv
mov
shll
push
rcrl
mov
cmp
jl
xchg
xchg
sbb
nop
cmp
or
mov
icebp
into
lea
or
adcb
sub
sahf
ret
inc
shlb
lret
dec
mov
cmp
inc
pop
clc
popf
or
sbb
lods
adc
outsl
int
and
ficoms
sahf
sub
mov
xor
and
push
or
push
iret
fidivrl
cmp
pop
cmpb
lcall
inc
imulb
dec
pop
cltd
sbb
xor
cmc
sti
sbb
pop
in
in
or
lahf
add
ret
or
mov
mov
pop
sbb
push
dec
or
push
push
outsl
jns
dec
notb
xor
sbb
cltd
shll
pop
mov
dec
and
mov
jl
cmc
mov
inc
test
sbb
sub
je
repnz
cmp
fdivrl
sbb
mov
insb
into
inc
jns
adc
adc
repz
nop
rcl
push
dec
jmp
jbe
imul
add
pop
hlt
out
mov
cwtl
int3
orl
push
xchg
sbb
lret
shll
loop
inc
ret
push
clc
cltd
lock
dec
dec
push
xor
shl
push
into
push
ja
out
dec
hlt
lcall
insb
pushf
jne
jp
leave
testl
outsl
dec
jle
xor
mov
ret
out
jge
adc
jge
loopne
and
dec
xor
mov
shrb
loop
sub
push
leave
aam
mov
push
xchg
stos
adc
fs
or
ss
cmp
imul
mov
js
dec
loope
test
adc
loope
push
rolb
xor
lods
and
and
dec
cmpsl
dec
int3
add
lret
dec
and
jl
jno
popf
cmp
pusha
pop
inc
cmp
mov
dec
push
xor
setge
sub
xor
aad
sahf
cmp
fcomps
rcrl
jmp
lods
lret
mov
jge
rcll
imul
les
xchg
out
and
hlt
sub
into
nop
jne
fbstp
lods
movsb
mov
jg
hlt
stos
mov
pop
sbb
push
mov
fsubl
push
sub
and
negb
mov
fcmovb
andb
roll
arpl
or
or
mov
cld
out
out
insl
push
jae
test
lea
mov
add
mov
aaa
inc
ret
daa
je
cmp
iret
pop
xchg
sbb
js
outsl
mov
testb
cmpsb
arpl
test
cmp
xlat
jo
pop
mov
loop
lds
pop
jae
out
aaa
repz
arpl
inc
scas
out
mov
xchg
inc
aas
outsb
movsb
mov
inc
setb
cld
iret
mov
jle
cmp
scas
aas
lea
popf
xor
arpl
adc
movsl
loope
ja
xchg
fdivrp
enter
insb
pop
dec
and
ret
mov
and
subl
add
int
push
push
loopne
dec
aaa
test
xor
cmpsl
inc
push
sbb
xlat
lret
dec
lahf
and
fcoms
xor
loop
ss
popf
pop
inc
inc
outsb
push
pop
mov
mov
cmpsb
xchg
mov
rcr
out
xchg
mov
data16
and
or
icebp
cmp
sbb
and
dec
adc
xchg
xchg
jnp
gs
ds
jns
mov
pushf
sub
mov
loop
sarl
iret
es
out
cmc
lret
lret
lods
fldcw
xchg
fdecstp
mov
jbe
loopne
iret
scas
add
aam
fcom
add
divl
ret
and
adc
add
mov
js
dec
mov
xchg
into
dec
out
mov
xor
mov
fstpt
hlt
mov
lods
pop
and
repz
mov
lret
dec
dec
lods
aad
cmp
dec
outsb
mov
fnsave
adc
rclb
add
xor
sbb
sub
jb
xor
loop
ja
push
out
and
lret
xchg
add
pushf
lcall
lcall
push
inc
mov
adc
lds
mov
add
in
stos
daa
aas
je
pop
outsb
jno
sub
movsb
in
xchg
test
outsb
movsb
dec
bound
pushf
mov
loopne
dec
or
cltd
sub
pop
mov
adc
and
cld
das
xchg
aam
repnz
xchg
ja
lahf
xchg
xchg
ljmp
cltd
sub
cmpb
lcall
shlb
sub
mov
daa
call
add
pop
push
or
xchg
lock
dec
mov
add
and
cs
jl
mov
leave
fadds
jae
ud2
jne
out
outsl
test
sub
daa
sahf
mov
rcrb
outsb
stc
jns
adc
icebp
sbb
adc
inc
jae
test
repz
addb
inc
mov
outsl
pop
xchg
push
pop
mov
test
and
in
addb
imul
push
lds
ret
and
fnsave
mov
ss
xor
add
sbb
out
insb
and
aas
dec
inc
cmc
push
push
xchg
setle
test
in
push
fildl
sti
push
and
lock
mov
sub
sbb
daa
inc
xchg
jnp
dec
cmp
les
stos
mov
push
insl
sbb
out
ret
bound
idivb
scas
jo
xlat
mov
add
mov
inc
jg
inc
jecxz
rclb
icebp
rclb
or
pop
daa
in
sub
test
push
mov
scas
push
xchg
ret
push
cmpsb
jbe
inc
mov
cmpsl
in
jmp
stos
rclb
jno
add
or
xchg
jl
or
jecxz
sub
lahf
inc
or
lahf
sbb
stos
sbb
test
out
aad
bound
movsl
fisubs
push
dec
cli
js
xchg
out
pusha
sbb
jl
mov
stc
repz
fwait
repnz
dec
int3
mov
inc
arpl
or
sbb
and
jmp
stos
mov
cmp
cld
jae
pusha
sahf
jecxz
lea
and
xchg
inc
icebp
and
rol
pop
lods
mov
sub
data16
pop
stos
les
mulb
push
xor
ss
test
std
arpl
add
les
or
imulb
mov
xchg
idivb
fxch
xchg
jp
ds
pop
std
int3
inc
rorl
dec
mov
es
dec
cwtl
cmp
and
aas
cmp
cmp
test
pop
jmp
inc
daa
xlat
xchg
mov
add
xor
pop
iret
popa
pop
out
aad
inc
xor
xor
and
enter
jo
popa
mov
icebp
std
sub
imul
jecxz
cs
lcall
sbb
das
sbb
dec
xchg
dec
fldl
pop
xchg
cvtps2pd
jb
dec
stos
adc
movsl
arpl
lods
pop
mov
cmp
leave
mov
or
mov
cli
dec
cmp
push
jnp
sarl
xchg
mov
sbbb
neg
dec
or
mov
test
es
jg
imul
or
in
cmp
jne
or
insl
pop
xor
pop
fs
and
adc
add
incl
icebp
push
aad
add
mov
lret
jo
dec
push
aas
ss
repnz
dec
sub
rcrb
pop
mov
filds
dec
or
adc
icebp
jmp
sbb
stos
aad
adc
cmpsb
mov
sbb
aaa
or
and
std
mov
xor
sbb
loop
add
les
into
xchg
adc
xor
fs
sub
pop
lods
sbb
cmc
aad
lahf
or
adc
and
mov
fstp
insl
pushl
ljmp
into
das
scas
lcall
ret
push
and
add
aaa
xor
test
call
mov
pop
nop
movsl
jecxz
ss
dec
je
push
int
mov
mov
dec
mov
dec
mov
leave
out
adc
out
adc
lret
fs
insl
das
shlb
sahf
scas
dec
mov
fbstp
scas
movsb
adc
cmp
or
pop
cmpsb
mov
add
mov
jns
lds
pop
xchg
mov
in
das
push
mov
clc
xchg
jno
mov
add
out
jp
int
ret
add
pop
rcrb
dec
mov
pop
stc
outsb
mov
cmp
and
mov
mov
in
pop
out
roll
inc
pop
shl
jno
push
xchg
mov
sbb
je
and
sar
lods
cld
pop
mov
int3
pushf
je
fnsave
leave
lcall
mov
mov
push
and
test
stos
adc
sarl
loope
outsl
cld
aas
rorl
jecxz
add
push
xor
dec
or
mov
push
xchg
adc
sub
cwtl
addr16
in
sbb
pop
int
pushl
xlat
or
and
lods
ds
aad
jne
push
loope
push
popa
push
pusha
mov
call
nop
clc
int
jecxz
out
mov
sahf
pop
into
jmp
cmp
aas
dec
add
push
mov
and
inc
inc
pop
fidivrs
push
pop
or
ret
push
push
stos
xchg
jnp
pop
cltd
pop
and
call
jle
div
pop
mov
and
lcall
cmp
out
inc
inc
das
dec
cmp
call
loope
push
das
out
test
faddl
pop
pop
insl
pop
jne
mov
jbe
cmpsb
and
add
cmp
in
mov
add
jle
lods
out
and
int
das
dec
sbb
pop
pop
jo
orl
push
or
xchg
lea
push
das
mov
xchg
mov
xchg
mov
jg
lcall
lods
mov
xor
popf
adc
scas
mov
icebp
int
pop
je
mov
sbb
mov
inc
stc
and
and
inc
mov
or
cmpsl
mov
fucomip
adc
push
lea
xchg
cmpsb
inc
inc
insl
pop
fs
mov
bnd
sti
sbb
int
sbb
jp
mov
in
enter
test
mov
daa
mov
xor
out
xchg
and
insl
sbb
dec
xchg
and
out
adc
roll
jl
idiv
scas
pop
xor
ds
test
into
jge
pusha
lods
dec
js
and
or
fs
jecxz
mov
mov
decb
enter
mov
repz
pop
inc
scas
outsl
shlb
stc
push
xor
data16
push
or
dec
jno
adc
sbb
and
dec
push
out
dec
fdivs
mov
mov
dec
mov
movsb
fwait
cmp
pusha
ljmp
aam
es
pop
cmp
xor
lock
jmp
repnz
and
loop
sub
and
sub
sub
mov
fldenv
imul
dec
jbe
jmp
mov
sbb
cs
pop
inc
xor
lea
lods
in
test
sub
jb
xchg
call
out
dec
orb
or
ret
aas
and
rolb
clc
jmp
adc
xchg
jnp
push
and
dec
jns
test
xor
lods
pushf
and
xchg
push
mov
jae
idivl
mov
mov
push
add
jmp
test
push
dec
popf
xchg
inc
inc
xor
sbb
aad
clc
sbbb
shrl
jg
cltd
ret
lods
nop
bound
stos
jmp
sub
cld
inc
xor
out
jbe
insl
sbb
aam
movsl
jge
icebp
mov
mov
pusha
mov
jmp
loope
inc
test
das
dec
and
cmp
mov
sub
add
mov
mov
or
xor
andb
add
ret
mov
mov
fisttpll
sbb
or
repnz
fsts
outsl
dec
out
mov
jmp
movsl
outsb
call
int
outsl
inc
in
pushf
push
popf
cli
sbb
aad
push
leave
push
add
jo
add
stos
push
sbb
fstl
mov
lahf
pop
in
and
sub
testl
mov
scas
jb
sub
enter
cmp
dec
movsl
sbb
shll
and
out
js
inc
test
loope
ja
shlb
adc
lcall
mov
or
and
xor
in
mov
les
xchg
xlat
loope
int3
push
adc
rcll
cmp
dec
popf
test
xchg
out
cli
test
adc
hlt
ret
pop
xchg
cltd
insl
rcll
jg
cmpsb
mov
in
orb
sbb
sbb
daa
popa
cli
push
jg
fcomp
xchg
pop
jnp
rclb
fildl
fwait
xchg
add
rorb
and
lock
sahf
xor
pop
addb
sub
ret
xchg
fcomp
xchg
mov
rcll
inc
adc
inc
add
pop
or
sbb
hlt
leave
std
or
ds
loope
mov
jp
pushf
lret
jl
lea
ljmp
cmp
push
aaa
mov
int3
hlt
pop
or
lret
mov
adc
insl
sbb
out
lahf
mov
pop
push
sbb
lcall
out
xchg
sbb
mov
das
inc
sbb
ja
jae
lods
inc
hlt
push
pop
bound
sbb
rcr
jge
je
fsub
popf
or
xorps
loopne
jp
mov
cmp
out
in
cli
mov
jp
in
cli
cli
push
mov
push
mov
imul
jmp
adc
mov
sub
mov
call
hlt
sub
je
ficoml
pop
sbbl
adcl
xchg
cwtl
mov
mov
lods
inc
lret
jbe
scas
mov
xor
jp
call
insb
xchg
push
sbb
jp
and
xorb
mov
loop
pop
loope
lcall
out
or
out
mov
cld
sahf
xchg
inc
repnz
sub
test
xchg
inc
mul
mov
sbb
mov
popf
jns
sub
add
fs
dec
out
sbb
or
enter
jecxz
iret
pop
es
in
orl
shrl
in
sbb
notb
ficompl
filds
pop
pop
pop
pop
test
jge
mov
movsb
sbb
mov
jbe
sti
popf
fcomi
xchg
xor
push
adc
sub
sbb
add
insb
imul
movsb
mov
xlat
fsubrl
xor
cmp
test
sti
or
nop
mov
jecxz
fcoml
aad
seta
jnp
fwait
dec
imul
cs
adc
outsl
inc
adc
cli
jns
rcl
push
xchg
jne
lret
hlt
pop
push
ljmp
dec
mov
sub
int
mov
cmc
mov
ss
push
aam
stc
ret
inc
sbb
lods
jne
jbe
inc
neg
dec
xchg
insl
jno
pop
int
mov
jg
push
inc
je
adc
outsb
movsb
push
and
add
mov
mov
cmp
dec
adc
stos
stos
in
bound
dec
dec
sbb
int
hlt
cmp
fsubrl
xchg
jmp
pop
lcall
pop
aas
outsl
ljmp
popf
inc
das
pop
push
add
jl
movsb
mov
sbbb
xlat
pop
sub
cltd
cmp
xor
popa
inc
mov
lods
sub
inc
sub
movsl
inc
das
inc
sbb
adc
sub
repz
test
pop
sbbb
dec
aam
mov
dec
jp
xchg
test
aaa
pusha
lock
ret
mov
mov
sub
mov
push
pop
and
sbb
int
icebp
fidivl
cmc
mov
pusha
repnz
test
dec
push
sub
outsl
inc
test
fadds
out
jbe
scas
add
roll
pop
cs
loop
inc
or
sbb
fs
sub
mov
ljmp
jge
std
scas
lret
xor
jg
add
or
test
adc
loopne
add
fistpl
loopne
mov
dec
or
cmp
pop
aas
sub
ror
mov
and
sahf
in
jp
sub
aad
xor
test
pop
cs
mov
inc
dec
ljmp
xor
push
imul
add
in
out
xchg
fdivrp
fwait
clc
pop
cld
or
xchg
call
inc
imul
or
dec
addr16
repz
out
imul
ss
nop
cmp
insl
pop
mov
cmp
jb
mov
jbe
cmp
fwait
xor
testb
mov
fcom
jle
stc
insb
add
pusha
cmp
inc
push
sub
xchg
mov
in
test
adc
and
push
pop
mov
add
sub
jmp
sub
adc
rol
cmp
test
push
cltd
adc
cmp
sub
pop
or
out
inc
push
cmpb
sbb
push
xchg
cmp
test
ds
push
and
and
inc
pop
push
in
mov
sub
ret
fldt
pop
cmp
adc
out
stos
push
std
cld
and
jp
mov
in
in
and
jl
shlb
rclb
jge
lds
sbb
push
push
jnp
je
mov
inc
inc
sub
mov
xorl
test
loope
push
xchg
aaa
inc
shrb
jae
sti
lods
mov
jp
xchg
out
cmpsl
dec
sub
loopne
test
adc
ret
icebp
sbbb
js
cmp
jge
repz
lcall
out
popf
test
cmp
fwait
sbb
fcompl
add
push
inc
sub
add
daa
sbb
insl
xor
xor
stos
arpl
pop
mov
push
jnp
dec
js
fldcw
jae
mov
xchg
in
sbb
stc
mov
vmread
mov
jg
shlb
repz
out
xor
subb
mov
ret
sbb
pop
aaa
mov
and
sub
push
popf
adcb
lcall
fcoms
in
les
sahf
in
mov
cld
pop
bnd
cmp
fs
push
xchg
add
mov
aaa
test
sbb
xchg
test
outsl
andb
xlat
cwtl
mov
cmp
cmpsb
scas
gs
push
sub
or
xchg
enter
hlt
and
cmc
mov
add
out
adc
xor
loopne
aam
mov
mov
fnstcw
hlt
push
addb
jnp
pop
shll
lret
pop
xchg
mov
push
jno
mov
adc
fstpt
sbb
test
daa
or
jmp
outsl
sbbb
pop
sahf
insl
inc
sub
cli
and
leave
aad
stos
cmp
jg
mov
fmul
call
lcall
xchg
mov
ret
ret
pop
sub
cli
inc
mov
pop
in
inc
fisttps
rcrb
imul
into
and
adc
pushf
and
mov
hlt
mov
nop
cld
cmpl
mov
or
adc
scas
jb
mov
adc
mov
adc
out
pop
fwait
dec
sub
bound
scas
cmp
push
mov
adc
aam
jge
ja
sahf
leave
adc
out
push
jno
mov
fucomp
out
dec
mov
in
sarb
push
shl
push
pop
jbe
pshufw
push
fisubrs
xchg
dec
fwait
addl
in
setle
inc
or
movsb
mov
in
xchg
xchg
mov
and
fiadds
mov
push
enter
cmp
lret
push
divl
add
and
push
stos
or
mov
sbb
fwait
and
repz
out
push
cwtl
out
adc
inc
push
push
imul
jle
int
hlt
lock
pop
repz
mov
lea
mov
test
fdivrs
scas
cli
mov
dec
jecxz
sub
jg
add
out
or
push
xor
pushf
mov
inc
xlat
xor
mov
push
push
mov
ljmp
sub
cmp
sbbb
aas
xchg
mov
add
dec
subb
pusha
fisttpll
push
popl
sub
xor
pop
mov
sbb
dec
in
push
dec
adc
lds
jg
add
leave
aas
mov
sub
dec
leave
mov
mov
imul
test
pop
push
js
mov
dec
aas
dec
rorb
in
mov
cld
out
sahf
push
aaa
rcrb
outsb
lret
adc
mov
std
ljmp
mov
fs
inc
jg
out
pop
and
mov
pop
lcall
and
in
repz
jl
aas
jns
xchg
fsts
out
cld
xchg
shl
std
inc
leave
or
in
inc
inc
xchg
arpl
rcrl
imul
or
lahf
sbb
test
cltd
xchg
mov
cmp
dec
aas
cmpsb
lds
or
inc
lods
test
add
fsubl
jp
xlat
jo
cld
jl
jecxz
add
lods
mov
and
test
jecxz
and
push
jno
mov
mov
jp
push
sub
inc
cmp
add
and
sbb
sbb
pop
movsl
rcr
dec
inc
lock
ja
push
mov
cmp
xor
test
daa
out
aam
nop
sub
test
or
stos
stos
test
enter
xor
roll
fisttpll
addl
cmpsb
xor
add
dec
outsl
and
sbb
loop
fildll
jae
push
inc
mov
fimull
inc
jo
dec
loope
xor
inc
ret
pop
push
pop
mov
les
inc
imul
iretw
test
push
mov
mov
xor
outsl
scas
pushf
and
mov
add
jl
inc
xor
jne
sbb
and
test
pushf
add
addl
sahf
push
push
adc
dec
sbb
and
push
mulb
ss
hlt
fs
add
jnp
or
bound
insl
mov
lds
imul
jmp
lods
sub
jae
inc
add
inc
mov
mov
jnp
out
dec
xchg
cli
int3
or
lods
into
and
sbb
aad
cmp
xchg
movsb
or
sbb
push
lods
mov
mov
test
lea
xor
mov
mov
xchg
lret
xor
jbe
dec
cmp
inc
ret
ss
in
jno
lods
mov
cmpsb
mov
lds
xor
idiv
je
add
jg
add
repnz
adc
or
rcr
addb
or
xor
clc
xor
lds
lret
jl
mov
imul
mov
and
cmp
ja
bound
push
xchg
and
dec
xor
test
test
mov
bound
inc
xlat
clc
sahf
cmpb
outsb
pop
cmpb
jmp
pop
ds
mov
sbb
jbe
dec
ds
pop
dec
mov
fldt
je
sti
xchg
out
jmp
dec
xchg
inc
ljmp
subb
ljmp
lea
fs
sub
mov
gs
call
sahf
cmp
push
and
or
repz
dec
pop
xchg
push
ss
outsb
pop
ret
pop
mov
jp
mov
fs
push
and
int
inc
mov
clc
mov
pushf
insl
cmpsb
sub
xchg
out
push
enter
roll
enter
outsl
loopne
dec
xchg
jmp
inc
hlt
push
cmp
xor
xlat
push
enter
out
xchg
xchg
aam
mov
negl
ret
dec
test
out
xchg
xchg
push
repz
jle
stc
loopne
into
cmpsl
xchg
sarl
push
shl
insb
xlat
pop
push
mov
xor
mov
pushw
and
mov
stos
pop
movsl
jle
pop
mov
adc
in
or
mov
xor
mov
xor
pop
push
out
mov
cli
fadds
cmp
ss
jnp
xchg
dec
ret
pop
mov
sub
cmp
insb
mov
adc
scas
mov
or
into
cmc
addr16
popf
popa
xchg
in
das
cli
dec
shlb
stc
pusha
arpl
mov
fsts
dec
mov
loope
inc
jge
dec
mov
sub
icebp
or
gs
rol
mov
sub
jnp
dec
mov
sbbl
mov
pop
or
cltd
pusha
fsubrl
mov
test
hlt
push
fldenv
sub
mov
mov
sub
popa
mov
jmp
imul
xor
cld
insb
test
mov
movsb
imul
xor
pop
call
jns
dec
pop
add
repz
aad
adc
add
pop
sub
data16
cwtl
lods
cmp
daa
mov
outsb
mov
push
jnp
push
and
outsl
xor
dec
pop
pop
stc
or
mov
and
xor
out
jns
cmp
lcall
jmp
dec
imul
clc
in
or
repz
mov
ljmp
repnz
test
scas
mov
lahf
add
jecxz
je
arpl
and
pop
in
add
xor
mov
push
sbb
mov
sub
mov
adc
enter
or
leave
cmpsb
iret
dec
sub
push
or
jno
sarl
mov
and
xchg
or
lret
xor
push
push
test
stos
btr
test
pop
or
cltd
mov
call
jbe
mov
push
cmp
scas
js
mov
aaa
xchg
xchg
xor
out
stos
xchg
insl
data16
jp
mov
xchg
cmp
out
cmc
pop
inc
jno
ret
mov
imul
adc
iret
cmpsb
test
jp
xor
rcll
adc
mov
das
jb
mov
inc
imul
scas
out
push
mov
in
mov
and
fstps
imul
frstor
repz
xchg
inc
push
adc
lahf
mov
pop
fldl
imul
out
adc
mov
inc
sar
pop
popa
mov
mov
test
insl
xchg
inc
add
mov
push
adc
mull
inc
repz
push
sub
sarb
adc
sbb
out
push
or
ss
dec
sahf
aaa
jg
rclb
movb
es
xchg
pusha
xchg
sub
lcall
in
cmc
dec
dec
mov
mov
ss
xchg
jg
push
cmp
push
sub
dec
outsb
cmc
stos
insl
imull
mov
lcall
gs
jae
imul
cmp
daa
xor
mov
rdtsc
jp
inc
xchg
push
sbb
shl
mov
or
jnp
addr16
sub
les
int3
adc
sahf
mov
sbb
adc
nop
jb
call
or
pop
aaa
lcall
xor
sbb
push
shll
sar
inc
fdivrp
shrl
push
outsb
push
sub
lret
jbe
into
or
fs
decl
cmpsb
xlat
lods
push
pop
fs
fbstp
mov
add
shrl
sti
add
inc
icebp
xchg
das
js
inc
push
lods
aas
stc
ret
xchg
stc
lcall
cmp
mov
inc
cmp
fcmove
pop
testl
jbe
adc
enter
sub
fmulp
jno
add
and
sub
repz
andb
dec
sarb
jne
sahf
lret
jmp
imul
mov
fldt
mov
pop
imul
mov
gs
imul
mov
and
pushf
sub
in
xchg
lods
mulb
inc
adc
jne
mov
into
jp
xchg
fwait
ljmp
xchg
daa
jbe
fstps
adc
sbb
push
imul
jp
xlat
sbb
xor
push
mov
icebp
jle
push
cmpsl
cs
adc
xchg
leave
mov
lea
aad
xchg
lea
jb
movb
and
sbb
mov
ret
test
jne
rcrl
inc
rorb
jnp
test
or
in
adc
or
mov
fldenv
xor
or
rolb
mov
mov
ds
nop
xor
stc
fisttpl
insl
push
mov
clc
repnz
daa
xor
std
push
icebp
mov
xchg
daa
loope
fsubrl
les
xor
leave
xor
jae
mov
push
subl
mov
and
mov
in
jae
push
ret
sarl
imul
addr16
fisubrs
scas
and
xor
insl
cmp
mov
mov
pop
mov
fisttps
fbld
mov
push
sbb
mov
gs
jb
mov
fistpl
mov
fdivrl
jbe
pusha
pop
jge
dec
fists
fs
push
das
js
dec
cwtl
xchg
stc
add
sbb
mov
jge
mov
shrb
pop
push
and
inc
mov
mov
jle
xchg
or
dec
aas
xchg
lret
aaa
test
pop
adc
jge
push
cli
add
pop
add
cmc
xchg
lahf
mov
lea
dec
xor
inc
ljmp
mov
lods
scas
push
mov
cmc
pop
sub
sti
sub
dec
nop
xchg
mov
cmp
ljmp
mov
outsl
mov
mov
mov
pop
mov
cmpsl
stos
sbb
ss
or
mov
sbb
cltd
adc
ljmp
mov
mov
jo
rcr
stc
jno
jge
sbb
js
cs
mov
insb
mov
push
cmp
jl
push
pusha
push
or
sbb
push
outsl
fisubs
xor
xor
dec
or
sub
and
or
mov
pop
mov
and
sbbl
mov
repnz
or
mov
pusha
cld
push
daa
mov
test
dec
test
and
repnz
ror
jecxz
daa
mov
sbb
mov
push
cmpsb
popa
jg
push
inc
xorb
cmp
jecxz
jecxz
xchg
mov
pop
jl
scas
in
jne
sbb
jae
jmp
decb
subl
or
nop
popa
stos
jmp
jne
mov
cmp
in
cmp
pusha
lea
inc
ror
add
cmpsl
shl
insl
into
inc
leave
and
in
test
lods
pop
pop
push
push
leave
pusha
xlat
cmpl
fidivrs
cli
aas
jg
push
rol
xchg
pop
lahf
jmp
push
add
jne
dec
sub
lret
out
mov
pop
sub
pop
ret
scas
outsl
aam
hlt
mov
sub
mov
or
insl
inc
push
mov
inc
sub
inc
push
fildll
stos
adc
dec
jle
test
lods
mov
mov
dec
mov
xchg
push
push
ljmp
in
pushf
fsts
out
arpl
scas
std
inc
mov
or
aad
jge
and
jnp
push
fimuls
repnz
cmpsl
and
rol
rcll
inc
pop
sub
ds
sbb
push
leave
aam
cld
nop
stos
jb
pop
in
and
add
mov
in
stos
xor
xor
lahf
leave
xchg
mov
sbb
fs
push
aam
dec
mov
in
push
aad
mov
pop
daa
sarb
inc
jnp
push
cwtl
cmp
add
imul
ja
out
xchg
push
loop
sbb
add
sarl
push
test
add
jecxz
pop
aas
mov
mov
stc
add
mov
lcall
or
mov
push
inc
call
adc
mov
mov
test
mov
push
add
addr16
cmpb
mov
push
out
jo
mov
test
cmpsb
subl
mov
rcll
lcall
push
inc
cmp
mov
mov
xor
outsb
adc
mov
jl
xor
daa
in
or
jne
mov
and
scas
mov
pusha
sar
jae
jge
inc
mov
pop
les
cltd
push
iret
xlat
mov
dec
pusha
xchg
cmpsl
xor
inc
push
movsb
xcrypt-ofb
cmpsl
insl
inc
lds
sub
gs
dec
mov
in
push
clc
cli
aam
jnp
push
addr16
jecxz
jne
sbb
xor
or
fcmovnu
and
ja
mov
jle
lret
aad
xor
add
out
mov
out
mov
ljmp
push
fildll
jecxz
mov
ljmp
aaa
pop
repz
xor
dec
or
cmpl
sbbl
push
negb
push
sbb
out
sar
mov
in
setl
hlt
push
xorl
mov
pop
add
fdivrs
hlt
aad
in
jno
jno
lcall
std
xchg
mov
cwtl
call
sar
sub
imul
in
fisttpll
lea
adc
stos
xchg
or
std
inc
xchg
shrb
cmp
sti
testb
out
or
roll
aad
cli
lcall
daa
adc
ret
mov
and
imul
lret
sub
roll
jg
imul
into
insl
inc
sub
or
push
cwtl
rol
adc
rorb
out
xor
xor
aad
pop
cmp
lods
pusha
rcll
mov
and
ss
dec
dec
test
leave
mov
xchg
sub
jp
adc
mov
pop
aaa
pop
xchg
cmpsl
or
inc
cs
shl
mov
mov
cmp
ds
hlt
pop
xor
in
sub
jecxz
lret
ret
es
cld
fwait
stos
xchg
ss
sub
dec
cld
mov
mov
jnp
gs
ja
ja
cld
out
popf
add
loop
cmpsb
add
cmp
loopne
loop
pop
and
sub
jge
jnp
pop
inc
xor
mov
into
pop
pushf
xchg
adc
jecxz
inc
fstl
xchg
xchg
popa
fwait
std
testl
stc
test
jmp
jno
insb
aas
leave
mov
out
mull
add
or
and
fdivs
mov
lcall
sti
cwtl
xor
std
and
loope
jmp
addl
ret
add
mov
jle
push
mov
mov
sbb
cmp
jns
and
int
out
push
inc
out
ss
add
fsubs
xchg
cmc
jp
sub
data16
mov
out
decl
sbb
mov
sub
shrl
scas
popf
sbb
sub
and
fwait
ds
repz
push
ljmp
cmpsb
sbb
mov
jnp
lds
add
cwtl
ret
fnsave
pop
daa
add
aas
stc
push
jo
jp
or
sbb
push
mov
hlt
sbb
cmpsb
jns
loope
jne
inc
pop
or
enter
or
sbb
ret
notl
mov
push
xor
cmp
or
fsts
sti
ret
xchg
cmp
sti
xchg
imul
pusha
iret
enter
int
cmpsl
insb
jno
mov
cwtl
lahf
movsl
inc
jmp
dec
aaa
cmp
mull
mov
stos
mov
mov
mov
outsl
pop
push
jo
aad
adc
mov
xchg
daa
enter
outsl
out
into
jae
cmp
mov
fsubrp
aam
out
mov
fldenv
and
xorl
dec
mov
aaa
cld
inc
push
inc
sub
out
pop
cmp
cmp
test
jmp
out
bound
adc
gs
push
shl
mov
mov
cld
in
mov
sbb
mov
outsb
mov
popf
in
sbb
and
int
and
popf
sub
adc
in
and
jle
mov
mov
data16
xor
fiaddl
ret
icebp
jno
pop
daa
add
dec
sti
test
fwait
insl
pop
sub
shrb
cmp
jbe
jmp
in
mov
movsb
out
cmpsb
jecxz
dec
sbb
int3
outsl
mov
inc
cld
in
ret
lds
xlat
dec
dec
and
dec
dec
mov
and
push
cmp
loop
mov
dec
sbb
pop
cmp
mul
cs
push
jmp
inc
sti
test
sbb
and
imul
inc
stos
push
cs
pop
jl
out
xchg
movsb
jno
insb
adc
shr
divl
push
rclb
mov
lahf
push
mov
rcrl
inc
dec
out
repz
pop
mov
pop
ds
call
add
inc
adc
mov
repz
cwtl
inc
cmc
xor
stos
addr16
fwait
and
jns
dec
mov
sub
iret
in
and
aas
fisttpll
loop
push
sbb
inc
jb
dec
mov
push
js
lods
xchg
and
data16
adc
inc
cmp
jg
cs
ret
inc
sbb
mov
out
cld
lcall
and
cltd
jo
add
cwtl
sub
outsl
adc
ja
in
adc
xor
xor
add
jae
aaa
test
stc
jge
ret
push
cs
out
mov
orb
test
stc
enter
repnz
test
in
add
aad
xor
and
sub
ljmp
adc
cmpsl
or
lds
sbb
xchg
stos
and
andb
fisttps
cwtl
sbb
fimull
test
sbb
or
inc
jb
aaa
sub
mov
mov
add
sahf
imul
or
stos
adc
lods
imul
xchg
pop
mov
jg
fmul
sub
add
push
lock
mov
push
jmp
aad
into
sbb
roll
xchg
push
in
cmpsb
cmpsl
loop
pop
adc
test
subb
ret
imul
notl
pushl
xor
fwait
adc
jae
cmp
xchg
add
subb
popa
add
sbb
inc
sub
dec
insl
xor
stc
repnz
push
adc
jne
mov
sub
es
pop
call
jne
adc
xchg
leave
std
in
roll
or
call
stos
jns
jb
loop
mov
mov
daa
mov
out
sbb
test
inc
sub
imul
insb
mov
lds
lahf
scas
rorb
out
subb
js
fsubl
xor
cmp
out
repnz
fmull
loopne
push
sub
in
lahf
and
mov
out
push
hlt
cld
add
mov
and
jle
mov
cli
jmp
xor
pop
in
int
icebp
jl
mov
bound
hlt
call
movsb
push
in
pop
popf
sbb
xor
stos
jecxz
xchg
std
ss
pushf
xchg
mov
or
cmpsb
lret
std
pushf
out
out
push
dec
push
ja
addr16
es
imul
cltd
mov
sbb
daa
xchg
cld
test
cmp
sarb
mov
xor
jno
pop
mov
cmp
fs
sub
out
add
sbb
push
pop
test
rol
inc
test
mov
imul
or
ljmp
jnp
inc
or
push
and
pop
shrl
pushf
push
jns
test
loope
add
push
rorb
jb
scas
mov
test
imul
movsb
lds
mov
dec
adcb
add
popa
aad
sbb
cld
lds
test
jo
mov
icebp
sub
int
outsl
jno
xchg
scas
sarb
inc
les
and
cmp
adc
mov
push
jecxz
cltd
das
xchg
lret
adc
add
and
jbe
lret
dec
push
in
sahf
repnz
shlb
sbb
cmp
clc
fists
mov
or
repz
hlt
incb
xchg
pushf
cs
fcmovb
outsl
or
and
in
pop
jnp
or
and
push
imul
test
mov
jl
push
mov
push
mov
mov
test
or
xor
pop
mov
sbb
rclb
xchg
mov
ret
jp
out
jl
je
adc
adc
repnz
loopne
ds
int3
call
insl
cwtl
or
insb
sub
or
dec
xor
inc
lods
dec
out
push
pop
push
jnp
xor
movsb
jnp
movsl
es
lcall
pop
fwait
rcrl
xchg
mov
xor
rcrb
push
icebp
dec
sti
mov
xchg
imul
xchg
adc
adc
mov
popa
xchg
mov
push
notb
lahf
clc
out
add
div
cmp
out
pop
daa
pop
pop
stc
jecxz
data16
inc
fwait
lock
sub
movsl
dec
fwait
leave
jns
call
dec
outsb
cmpsl
pusha
test
mov
inc
pop
bound
js
xor
outsb
jnp
cli
push
outsb
hlt
int3
and
lock
rol
rcrl
mov
lods
repnz
lods
inc
pop
ja
cmp
sub
popa
movsl
out
lahf
mov
shll
push
lods
lods
jl
fstl
test
es
fisttpll
scas
aam
sub
mov
add
or
add
mov
fsubs
and
fisttps
into
in
sub
stc
mov
dec
dec
xchg
or
xor
sbb
stos
sub
insl
xor
movsl
or
movl
jno
push
mov
adc
push
or
inc
inc
dec
enter
in
and
mov
push
test
xlat
jmp
lds
sbb
xchg
loope
mov
sub
mov
in
xor
out
leave
xchg
popf
aaa
adc
scas
pop
addr16
jbe
inc
pushf
ret
push
cmp
cmp
loopne
mov
repnz
shll
movsb
ss
mov
int
test
jg
cmp
sbb
fnstcw
push
out
stos
rolb
fmuls
jp
std
cmc
cltd
push
loopne
jae
inc
stos
mov
lea
and
xchg
es
mov
jp
push
jg
jae
bound
cmovp
jle
sub
push
push
das
mov
and
mov
dec
outsl
sbb
js
sbb
cmp
pop
xchg
outsl
mov
scas
cmp
xchg
cmp
or
addr16
xchg
mov
in
out
adcb
in
cmc
rorl
cmc
xor
bound
jle
add
xor
fs
popa
cli
js
push
mov
dec
mov
sub
gs
pop
mov
out
xor
sti
mov
mov
cld
test
mov
test
adc
test
mov
xor
adc
cmc
adc
fldl
inc
dec
pop
test
insb
jecxz
lcall
cmpsl
xchg
or
aad
jmp
lock
addr16
jecxz
jl
and
bound
call
fdivl
stos
mov
cli
sub
and
notl
and
cld
and
jp
gs
addr16
xchg
mov
outsb
incl
and
sbb
add
repnz
jb
repnz
je
hlt
cs
push
pop
pop
push
push
mov
in
into
stos
push
call
cmpb
std
call
jbe
cwtl
js
cmpsl
popa
loope
xor
testl
scas
and
inc
add
xchg
and
andl
jbe
call
idivb
enter
and
dec
aas
mov
cmp
mov
dec
pop
push
rcl
and
xor
out
mov
out
sahf
jle
push
xlat
call
jl
call
nop
pop
adc
sub
jmp
mov
jmp
mov
pop
mov
pop
subb
xchg
rcr
dec
aas
fistps
xchg
fcomps
cmp
jns
add
sub
iret
lds
mov
and
sub
xchg
ds
hlt
xchg
xor
and
cltd
mov
jp
movsl
push
outsb
jmp
out
xor
aad
jbe
fwait
lahf
int
mov
adc
and
mov
jns
fcmove
mov
mov
ds
and
sub
sub
fwait
dec
daa
jns
nop
in
mov
add
push
mov
pushf
mov
loopne
loopne
xlat
push
sahf
pop
jg
test
arpl
lcall
mov
or
xchg
test
cmp
cwtl
fs
mov
in
and
fldl
in
mov
adc
jnp
mov
sahf
add
or
clc
inc
xor
xchg
out
push
and
in
add
iret
mov
cmpsl
pop
mov
mov
imul
popa
nop
js
fisubs
loopne
shlb
xor
inc
jnp
pop
adc
jg,pn
adc
loopne
xchg
mov
mov
in
gs
addr16
xlat
mov
bound
daa
gs
jl
jae
lret
xor
and
xchg
test
mov
js
lods
and
loopne
movsb
mov
cmp
push
jo
add
inc
repz
pop
jle
imul
dec
xchg
sar
ljmp
cmp
dec
mov
sub
sbb
movsl
aas
add
ljmp
cmp
data16
inc
pop
mov
out
jmp
movsl
xor
xor
sarl
cs
pop
jecxz
movsb
sub
mov
sahf
aam
in
movsl
sub
cmp
sahf
lods
ret
insb
fdivp
sub
push
adc
das
jle
push
jecxz
mov
jns
inc
ss
push
sub
lods
push
inc
push
xchg
lods
popa
stc
jmp
sbb
xchg
rclb
in
scas
outsl
ret
rclb
xlat
push
or
fsubrp
cmc
xor
push
repnz
push
adc
repnz
arpl
icebp
push
insl
sbb
xor
adc
nop
or
add
aam
mov
sti
sahf
ret
add
xchg
inc
out
mov
pop
sbb
or
sub
shr
xor
pop
neg
adc
sbb
les
cmp
and
and
test
cmp
ja
fcmovbe
dec
outsb
int3
mov
rcl
jne
xchg
movsb
fistpl
cmp
loope
rclb
fs
xchg
icebp
and
xchg
adc
fcomps
mov
jnp
mov
cs
js
mov
cmp
inc
fdivs
xchg
sub
push
push
movl
fnstcw
push
pop
call
add
cmpsb
jp
in
adc
add
dec
out
push
lods
jo
shlb
adc
cmp
cltd
push
nop
mov
icebp
pop
decb
shrl
cmpsb
sub
aam
test
test
cmpsl
jg
jp
pop
jl
jmp
xchg
adc
test
dec
int3
adc
adcb
jnp
je
popf
cmp
inc
cmpsb
fwait
aad
sub
jecxz
out
mov
push
and
repz
fcmovne
jg
sbbb
inc
jg
in
outsl
movsb
clc
push
cmp
movsb
and
shll
jns
in
jne
call
cmpsl
das
repnz
outsl
ja
dec
mov
ficompl
pop
dec
bound
inc
loopne
mov
divl
mov
lds
out
jl
sub
inc
fldt
add
inc
test
cs
sbb
fcoml
add
cmp
pop
add
cmp
shr
inc
daa
cmp
imul
ss
push
cmpsb
mov
mov
bound
mov
push
ficompl
mov
mov
icebp
shlb
lret
or
inc
test
sbb
shlb
lods
xchg
mov
cmpl
jmp
pop
idivl
cmp
pop
dec
jl
shrb
cmp
xchg
dec
mov
inc
mov
jmp
out
sbb
sub
inc
call
les
adc
cwtl
mov
add
and
mov
cmp
jmp
scas
loopne
mov
push
jge
inc
fdivrl
push
inc
js
xorb
dec
movsl
movsl
fs
xor
stos
sub
mov
test
fidivrl
add
push
cmpsb
ljmp
scas
repz
mov
xor
fwait
aam
mov
imul
repz
mov
jb
sbb
cmpsw
addr16
test
jmp
dec
mov
fdivl
dec
and
push
popf
incb
into
test
sahf
cmp
xchg
push
xchg
add
repz
mov
out
hlt
push
shrl
mov
jge
inc
cmpsl
adcl
out
movl
lahf
lret
cmp
out
jno
les
pushf
nop
mov
enter
fsubs
in
xchg
or
push
mov
jmp
clc
pop
mov
pop
push
mov
adc
call
cmp
je
xor
cwtl
xlat
mov
outsb
out
adc
loopne
mov
outsb
jg
pop
ret
ss
push
test
xlat
mov
out
sbb
add
movsb
add
and
mov
push
jae
std
add
fsub
lock
jae
ja
dec
cld
in
or
mov
and
push
xor
or
out
loop
xchg
and
xor
gs
and
xlat
xchg
add
test
and
push
mov
xchg
sbb
inc
and
and
xor
test
mov
inc
pushf
cmp
imul
shrl
aad
pop
pop
jl
dec
sub
xchg
xor
add
popa
adc
cmpsb
mov
ret
stc
cmovg
sbb
pop
fmuls
mov
push
and
orl
lock
lahf
stos
sahf
lock
cli
adc
push
jbe
lock
movsl
fiaddl
clc
pop
sub
test
test
fistpl
sbb
jnp
mov
push
pop
jbe
sub
or
jle
xor
xor
mov
out
cs
mov
stc
into
pop
cmpsl
stos
cmp
or
jge
add
add
repnz
mov
aad
stos
test
test
nop
js
and
or
or
les
pop
test
inc
jl
ret
mov
mov
cli
pop
std
sbb
scas
xchg
loopne
lods
push
imul
aam
fsub
ds
imul
insb
mov
cmp
jmp
scas
fistl
mov
sbb
rcrl
arpl
add
rclb
les
mov
cmp
jmp
sub
mov
dec
dec
lret
dec
arpl
xchg
mov
mov
adc
dec
dec
inc
mov
push
cmp
out
dec
jbe
pop
mov
mov
call
or
pusha
ret
lcall
rcr
ljmp
and
idivb
into
push
mov
mov
cmp
aas
scas
bound
aam
int3
inc
mov
gs
mov
sub
fsubl
fwait
rep
mov
adc
jns
hlt
test
sbb
sub
ljmp
or
in
das
mov
xlat
aaa
mov
mov
cmc
cwtl
or
sbb
jecxz
lods
push
int3
sbb
es
jnp
pop
pop
lds
lcall
adc
stos
aam
push
test
gs
stos
dec
or
mov
ret
and
test
cmpsb
sbb
in
sub
int
testb
orl
je
xchg
push
addr16
sub
add
out
js
mov
loopne
sbb
sbb
push
pop
fnsave
push
rorl
adc
or
or
rcrl
imul
jge
sub
xor
xchg
ret
push
mov
mov
bound
mov
mov
int3
xchg
dec
jmp
fiaddl
push
mov
inc
lahf
loope
and
cmp
es
pop
shr
push
cmp
push
into
cmp
xor
mov
sar
push
mov
sbb
test
pop
push
lcall
cmpb
jnp
inc
pop
add
dec
cltd
add
out
adc
pop
lock
cmp
shl
mov
or
hlt
mov
jbe
inc
cmp
aam
xor
mov
jle
out
movsb
sbb
jnp
mov
outsb
lods
iret
mov
fmul
je
pop
adc
jae
inc
les
ret
popl
jge
jo
add
xor
add
and
xorb
mov
mov
dec
add
add
sub
rorb
mov
adc
cmp
cmp
mov
movsl
ljmp
pop
push
mov
lret
pop
inc
ljmp
mul
mov
add
mov
test
pop
pop
lods
das
cmp
mov
push
push
jns
out
adc
cld
shr
push
into
sbb
shl
xchg
or
inc
pop
jge
ja
xchg
iret
mov
pop
and
push
lea
fildl
mov
mov
int3
pop
popf
cld
dec
jno
in
fisubl
cmc
dec
loope
mov
push
lret
mov
outsb
pop
xor
loope
or
lea
out
mov
xor
jno
jns
xchg
jne
fcoms
das
loope
clc
cmpb
sbb
test
insl
outsl
jae
arpl
push
rorb
jb
jne
cmp
pop
mov
jl
rcll
hlt
push
sahf
sbb
fcomps
int3
push
bound
int
xchg
shlb
enter
decl
addb
adc
shlb
jnp
int
inc
fidivl
dec
fs
xor
out
pop
mov
stc
jne
sahf
aam
movsl
stc
in
mov
psubusw
in
imul
cli
leave
ja
pop
adc
xchg
repnz
adc
mov
stos
push
push
ucomiss
idiv
test
inc
les
push
fs
movsb
jnp
rolb
and
xor
in
push
fildl
xor
inc
add
enter
les
in
and
xchg
mov
ss
cvttps2pi
adc
mov
xlat
cmp
mov
adc
jnp
mov
jo
nopl
dec
adc
mov
dec
not
or
stos
rorb
push
cmp
and
cwtl
or
sbb
pop
sub
jae
cmc
cmp
add
fiaddl
and
xor
lds
mov
mov
push
loop
mov
push
cli
pusha
push
xchg
lods
adc
or
inc
sbb
push
or
test
test
lea
jge
mov
jnp
pop
gs
rorb
push
mov
rorl
mov
inc
loopne
int
loopne
add
mov
shr
orl
aaa
cmpsb
repz
pop
das
dec
push
test
cmp
inc
scas
int
mov
out
sarb
jns
bound
push
mov
pop
cmc
negl
sti
xor
mov
pop
mov
sub
xchg
inc
jno
mov
dec
ja
addl
jmp
mov
dec
and
ds
jg
add
and
into
or
dec
mov
test
test
push
jb
jae
lods
sahf
xchg
out
dec
mov
gs
imul
xlat
idivl
loop
mov
dec
lds
xor
fcmovbe
sub
pop
imul
add
data16
addr16
cmp
dec
sub
mov
ss
pop
scas
inc
mov
out
xor
subb
repnz
pop
mov
cmpsl
imul
movsb
stos
push
leave
pop
push
rclb
and
xchg
mov
aaa
dec
rcll
xor
xchg
mov
pushf
lock
mov
orb
jge
test
mov
bound
dec
push
repz
cmp
pop
jb
cmpsb
mov
ljmp
mov
shrl
adcl
lds
imul
notl
sub
or
test
nop
jno
push
sub
movsb
pop
sbb
push
rol
in
xchg
jecxz
mov
xchg
xchg
insl
shlb
push
mov
fidivl
fmuls
push
std
sub
xchg
sbb
sbb
xchg
mov
add
mov
ljmp
xchg
out
mov
repnz
test
in
flds
jbe
add
sub
inc
mov
sbb
adc
push
xor
int3
in
adc
outsl
cmp
push
mov
jmp
pushf
test
loop
stos
jns
aam
dec
int
or
rcrb
int3
fldt
pop
cmpl
jecxz
dec
xchg
loopne
in
jb
insl
jne
popa
add
into
out
pushf
outsb
outsb
imul
push
ret
or
mov
mov
cli
mov
pusha
mov
xchg
jb
adc
mov
push
mov
mov
mov
cmp
call
lock
sub
sbb
dec
shll
insb
jns
sarb
sti
cltd
roll
sub
xchg
jge
fdivp
repnz
inc
dec
or
jmp
js
push
lret
lea
add
or
bnd
decl
xchg
xor
jb
lahf
ret
adc
pop
loopne
rorb
sbb
shr
cmp
sbb
jo
xor
mov
push
das
pop
test
ret
push
lock
xchg
xchg
negl
jnp
push
ss
fnstenv
int3
jp
jecxz
lds
cs
mov
and
push
dec
pop
xchg
inc
xchg
lahf
repnz
popf
stos
mov
repnz
mov
aad
xchg
aad
jns
xor
or
clc
lcall
in
mov
scas
inc
xor
inc
sbb
push
lret
push
xor
sbb
mov
enter
mov
sbb
mov
int
xor
mov
sbb
iret
add
mov
ss
fistpl
adc
jmp
xor
sbb
cmp
lea
dec
xchg
subl
sbb
and
mov
add
mov
lahf
adc
push
lods
mov
addl
sti
out
and
js
insl
xor
cmp
roll
mov
insb
push
movsb
int3
es
and
push
lret
in
lods
ret
pusha
sti
inc
xchg
fsubl
jo
scas
dec
rdtsc
shlb
xor
xor
sub
mov
xchg
fldt
ret
dec
out
jae
sbb
inc
cmp
pushfw
add
mov
add
aas
loope
jns
lds
cmp
test
cmp
jno
scas
cmpsb
lcall
scas
test
fcoms
dec
inc
lock
sahf
ds
idivb
push
pop
sbb
sbb
mov
push
cmpsl
cmp
cmpsl
inc
sub
rorb
cmp
mov
mov
insb
jnp
or
cmp
sti
orb
test
and
dec
stos
mov
in
xchg
jbe
mov
std
cmp
mov
ret
and
aad
or
gs
add
sbb
rorl
sub
jge
mov
insb
into
cs
test
mov
ljmp
lret
jns
das
loop
add
notl
or
js
mov
or
inc
xor
sbb
arpl
fistpll
mov
cmp
int3
sub
aad
push
mov
push
push
sbb
mov
call
aas
xorl
fimull
inc
and
jl
mov
pop
data16
jb
sub
hlt
shrl
pop
cmpb
imul
stc
sbb
sti
loop
fwait
aad
adc
les
push
in
fmuls
jne
add
setnp
add
in
push
adc
je
test
push
pop
push
xlat
xchg
sbb
dec
inc
xchg
aaa
and
push
shrl
rcrl
xchg
cmp
mov
lcall
mov
jne
je
ljmp
mov
popf
add
xchg
std
ljmp
rorl
in
scas
mov
movsb
cmc
ret
and
adc
jl
mov
sbb
inc
into
push
aaa
cld
cmp
fwait
jge
mov
add
hlt
loop
mov
js
push
pusha
push
cltd
push
mov
hlt
pop
outsb
stos
addb
cmpsl
xchg
int
popa
vhaddpd
jno
movsl
je
push
add
jno
icebp
js
xlat
insl
adc
insb
xor
rcrb
scas
pop
pop
stos
add
gs
pause
ds
loop
icebp
xchg
cmp
arpl
jo
pusha
mov
loopne
jb
into
cmovns
aad
jmp
push
pushf
icebp
hlt
lock
in
cmp
jb
test
in
pop
mov
pop
adc
in
inc
dec
int3
rclb
and
jne
xor
jp
shlb
add
cltd
ficoml
push
mov
dec
mov
inc
xorb
in
aas
add
jmp
xchg
sbb
cmpl
sub
cmc
pop
repz
mov
nop
loop
in
mov
insb
cmp
outsl
arpl
xorl
push
addl
mov
push
enter
sbb
cmpsl
in
jne
lret
pop
aas
mov
daa
testb
cld
leave
jle
js
jns
pop
hlt
scas
and
sub
pusha
mov
mov
xchg
inc
data16
dec
mov
stc
cmp
pop
xor
sbb
movsl
int
add
lret
adc
mov
mov
xor
ret
cld
hlt
aaa
bound
addr16
push
or
push
jne
xor
sbb
sbb
clc
in
movsb
mov
xchg
shll
mov
inc
add
int
popa
or
sbb
movsb
lock
insl
adc
fdivs
pop
push
mov
js
and
and
mov
fs
frstor
mov
pop
je
adc
cmp
lods
jge
leave
jo
gs
cs
add
mov
popf
repz
movsl
leave
inc
add
jne
pop
cli
scas
adc
mov
jno
popa
adc
add
xchg
mov
ja
test
cltd
push
test
add
inc
xor
sbb
pop
out
mov
mov
dec
addl
add
pop
sbb
test
sbb
icebp
adc
aas
call
shll
movsb
xchg
es
adc
or
lcall
add
out
cmp
loop
loop
push
subl
mov
xor
movsl
adc
fsubrl
inc
roll
pop
push
ja
xlat
hlt
repnz
lods
cmp
pusha
pop
sbb
and
sub
pop
inc
leave
cmc
jbe
inc
push
cmp
or
jne
sbb
outsb
lds
cmp
adcl
mov
xor
adc
xor
dec
mov
divl
and
pop
rolb
mov
inc
dec
repz
pusha
jb
mov
sbb
sbb
pop
popa
pop
les
in
test
or
lret
cmpsb
inc
clc
in
sub
or
push
je
jo
out
stos
dec
xchg
call
rcll
jns
mov
mov
mov
sarl
gs
sub
pop
adc
adc
sbb
ljmp
in
push
test
xor
mov
pop
mov
mov
aad
pop
roll
jno
in
mov
add
xor
les
cmpsb
sahf
ja
pop
pop
sahf
jne
or
nop
sbb
jecxz
lea
push
push
or
sbb
sbb
mov
and
outsb
mov
inc
inc
fwait
in
addr16
ljmp
cmp
push
arpl
mov
mov
mov
mov
jge
sub
jnp
sti
xor
jns
and
push
or
cltd
jno
repz
jnp
rcrb
adc
lods
adc
fdivp
aam
into
daa
mov
dec
jmp
mov
pop
leave
sbb
add
cld
faddl
or
in
daa
inc
add
adc
cli
fs
data16
inc
xor
movsb
adc
dec
stos
sbb
subb
inc
inc
hlt
cmpsl
ffreep
cmc
jo
mov
mov
stos
pop
clc
subl
aad
scas
mov
sahf
cs
mov
fmull
pop
sbb
cli
dec
in
xor
scas
sarl
cli
xor
ja
sub
insb
hlt
pop
xor
adc
sar
ficoms
inc
sub
mov
xor
or
aad
xchg
shlb
mov
je
popa
lret
adc
ret
jnp
mov
mov
mov
test
sub
add
xlat
jbe
lea
mov
fcomps
or
xchg
leave
jg
out
repnz
inc
jbe
loop
jge
push
mov
rcll
stc
push
sub
loope
test
rcll
lock
pop
mov
test
push
fwait
push
out
sub
or
push
ljmp
adcl
imul
push
stos
sbb
bound
enter
daa
ja
lea
jbe
daa
pop
mov
in
roll
les
lret
mov
mov
or
rorb
mov
fstps
jne
mov
pop
outsl
xor
push
sub
popf
imul
jno
inc
fidivrl
xchg
jl
int3
pusha
clc
or
push
gs
pop
jb
les
or
cmp
sar
push
or
dec
movsb
ds
mov
push
xchg
xchg
dec
lea
test
push
lea
sub
fdivs
add
cwtl
sub
push
jmp
add
cmp
addr16
jp
inc
sub
rcrb
gs
jae
push
cmp
addr16
ror
mov
stos
outsb
and
cwtl
mov
fwait
mov
jnp
add
sub
sub
inc
leave
xlat
inc
add
adc
andl
inc
iret
aas
mov
add
inc
mov
xchg
std
push
jg
dec
xchg
rep
mov
mov
fistl
adc
aad
loop
mul
mov
loopne
jecxz
and
xchg
jbe
jmp
and
test
shll
cmp
mov
lock
cmp
test
imull
add
push
out
daa
addr16
sub
movsl
push
aaa
fs
mov
mov
lods
loope
dec
mov
aam
mov
inc
fincstp
pop
das
xor
jbe,pt
int
cltd
mov
sub
and
push
add
ja
mov
jne
xor
pop
fildll
jecxz
pop
inc
jae
pop
adc
daa
xchg
dec
xchg
sti
popf
pop
xor
lcall
test
mov
or
adc
adc
sub
push
pop
or
xor
dec
pop
loopne
jecxz
rcr
dec
nop
aad
fsubrl
add
and
and
push
add
jmp
lea
xchg
lahf
xor
lcall
lock
aam
test
cmp
fwait
pop
in
ret
out
push
in
cmc
and
sahf
fsubrl
mov
les
in
jecxz
lods
adc
sub
insb
test
mov
mov
pop
loope
xor
addr16
jne
mul
and
push
sbb
jmp
mov
pop
daa
xor
mov
mov
int3
add
cmp
push
and
iret
scas
stc
ficomps
aad
mov
std
icebp
sub
or
aas
xchg
xchg
mull
ja
cltd
xor
pushf
data16
pusha
and
ret
pop
nop
or
mov
cli
xchg
fimuls
aad
or
and
sub
xor
nop
xor
push
sarl
inc
lds
loopne
mov
ret
add
pop
sbb
mov
lret
adc
cs
imul
jp
cmpsb
mov
fistpl
cmp
xchg
testl
cmc
push
mov
or
and
test
mov
lret
movsb
mov
incl
jo
cmc
imul
shrb
repnz
popa
pop
dec
mulb
mov
adc
lret
sub
cmpsb
lret
ja
ja
inc
dec
je
add
stc
ja
xchg
cltd
cmp
dec
cs
jle
mov
gs
xchg
mov
inc
cwtl
mov
repnz
insb
xor
mov
jne
loopne
or
fnstcw
stc
popa
mov
fistl
add
sbb
sbb
ljmp
push
pop
test
iret
fs
xor
pop
push
lahf
sub
jg
pushf
add
data16
mov
add
push
inc
outsb
movsl
rcr
xor
adc
imul
mov
cmp
inc
ja
js
les
jge
push
test
test
or
mov
push
pop
je
lcall
ds
and
add
str
or
mov
ljmp
adc
and
test
inc
push
push
lea
mov
js
sub
in
lods
repz
fidivrl
cmp
add
mov
mov
imul
sub
cmp
insb
mov
adc
psubusw
outsb
les
xchg
dec
push
cmpsb
mov
cmpsb
call
xor
and
push
mov
imul
add
pop
adc
outsb
mov
out
mov
nop
adc
jne
mov
and
sbb
sti
pop
push
aam
fsubl
addb
cli
sbb
out
jmp
add
mov
add
lret
mov
xor
xchg
repz
dec
mov
into
add
ret
outsl
mov
test
mov
icebp
mov
xchg
mov
jl
and
cs
movsl
sub
shll
sbb
outsl
lods
loope
mov
ret
int3
sub
xchg
add
or
mov
aas
testl
test
incb
xor
cmp
sti
lea
sbb
or
jp
jnp
cwtl
pop
ja
int
rol
push
loop
jae
ror
testb
fcmovne
mov
nop
push
add
push
lock
hlt
outsl
fs
mov
outsb
push
xor
pop
ss
and
pop
cmpsb
jge
dec
sub
lock
add
cmp
mov
mov
mov
sbb
outsl
inc
adc
popf
push
jp
icebp
jg
lea
xchg
mov
ret
jl
or
ss
add
push
add
cmp
dec
mov
movsb
loopne
dec
sub
std
mov
cmp
out
mov
or
lahf
cmc
mov
cs
add
popf
repz
cmpsl
dec
test
adc
hlt
xchg
mov
push
loopne
cmp
mov
vmread
mov
or
mov
mov
jnp
mull
stos
test
enter
push
mov
lret
or
sub
movsl
inc
popf
call
repnz
fadds
out
dec
add
outsb
repnz
xchg
inc
xchg
fldenv
addr16
push
fmull
mov
sub
sub
xchg
insb
mov
popf
fldl
add
ss
push
push
or
sarl
jmp
cmp
stc
adc
xchg
sub
push
jae
call
stc
mov
and
jle
dec
mov
les
and
subb
gs
lcall
sub
divl
jg
dec
clc
sbb
dec
popa
lret
iret
lods
in
test
sub
sar
mov
jl
dec
loopne
fwait
fwait
lods
mov
or
into
shl
stos
jmp
ds
icebp
dec
clc
pop
js
mov
xor
popf
mov
add
mov
mov
cmp
push
mov
sbb
shll
lcall
cmp
iret
mov
cmc
mov
and
jbe
data16
push
jl
adc
scas
les
fwait
divl
sbb
xor
push
push
xchg
loope
sbb
jp
imull
popf
in
pop
inc
popf
enter
incb
insb
outsl
pop
or
idiv
pop
and
mov
inc
xor
lea
inc
push
imul
in
push
jge
out
fcomps
rclb
daa
jmp
sub
inc
mov
mov
add
jo
xchg
pop
scas
fstps
xor
daa
cmp
push
inc
fbstp
call
mov
push
xchg
call
jg
or
adc
jg
inc
adc
pop
sub
addl
fistl
cld
jbe
inc
lcall
lcall
push
push
mov
js
jecxz
sti
cmpsl
push
repnz
popf
xor
mov
shll
or
or
mov
arpl
das
xchg
push
dec
adc
in
data16
mov
mov
dec
rorb
mov
stc
mov
and
int3
ja
pop
or
mov
cmp
mov
cmp
mov
push
cs
push
mov
ret
and
rorb
mov
mov
adc
jge
sbb
pop
mov
xlat
movsb
or
mov
lock
enter
sbb
cmp
movsb
cmc
adc
cltd
push
or
xchg
mov
inc
ret
sbb
xor
jb
pop
aam
repz
mov
push
repnz
stos
out
int
cmp
insl
js
add
lcall
lods
ficoms
dec
scas
mov
jae
jno
mov
in
scas
clc
in
and
stos
dec
iret
stos
pop
js
inc
and
pop
loope
add
shll
xor
mov
data16
mov
inc
lret
pop
sub
jl
mov
lret
push
mov
push
cmp
or
fildl
pop
scas
outsb
nop
mov
test
imul
movsb
rcl
or
add
cmovle
icebp
add
add
adc
sub
jg
or
shrb
popf
cld
push
leave
push
hlt
lret
xor
jmp
push
inc
stos
jnp
push
addr16
mov
mov
pop
push
and
arpl
test
je
test
cmpsl
mov
in
outsb
aad
shrb
rcll
add
sbb
push
add
adc
pop
push
popf
lock
arpl
mov
cld
pusha
aad
mov
ds
pop
push
xchg
cmp
test
mov
or
orb
daa
pushf
cmp
mov
dec
jge
inc
xchg
scas
and
ffreep
mov
or
jmp
add
xlat
loope
dec
ja
test
mov
mov
repnz
pop
mov
lea
xchg
mov
aam
aam
inc
call
inc
ds
pop
scas
mov
sbb
mov
test
sbb
aas
push
sub
ljmp
fstl
rclb
repz
dec
and
sub
cmp
push
add
pop
or
andb
adc
out
adc
fsubs
mov
in
in
xchg
cmc
sbb
fiadds
sar
test
jne
mov
js
push
add
and
je
mov
cli
xchg
pop
pop
xchg
sub
and
and
lods
cwtl
and
jbe
into
subl
add
xor
call
aad
dec
inc
int3
inc
xor
dec
js
jmp
xor
jb
jle
push
fisttps
aam
fldl
cli
inc
mov
es
lock
test
mov
xchg
faddp
xchg
jnp
mov
adc
hlt
dec
sub
cs
push
xchg
pop
data16
inc
mov
scas
dec
cltd
xchg
ja
or
mov
mov
in
jl
out
lret
addr16
jle
outsl
and
repz
push
orps
sarb
xchg
mov
pushf
pop
mov
xchg
pop
ret
xchg
sbb
out
and
pop
cmp
mov
pop
push
ss
jp
sbb
imul
stos
outsl
jnp
call
lret
fucomp
or
mov
push
and
adc
cmp
int3
xor
mov
in
imul
aas
fldl
in
adcl
pop
pop
testb
cmpsl
mov
jge
push
mov
pushf
shlb
stc
ret
stos
out
dec
mov
cmpsb
ja
cmp
fsub
sti
jbe
lahf
aaa
push
cmp
pop
mov
in
lret
xor
or
lds
test
int3
cmp
cmp
aaa
jns
mov
sahf
or
data16
dec
jno
adc
mov
jge
popf
inc
dec
mov
out
add
test
dec
pop
mov
lock
std
mov
mov
jbe
push
xor
xchg
dec
mov
jbe
cmpsl
sbb
xchg
or
mov
movsb
xor
shll
and
ficomps
sub
or
jge
pop
sub
add
inc
and
scas
aad
adc
mov
popf
mov
cmpsb
add
daa
out
or
jo
shll
fs
stc
ja
mov
mov
adc
cmc
push
lds
je
fdivl
jae
iret
sub
arpl
hlt
repnz
dec
cmpsb
adc
mov
loop
lret
jns
movsb
mov
cld
jbe
rcrl
mov
mov
daa
in
push
sub
insb
xor
xchg
or
sub
xor
push
inc
fcompl
test
mov
lock
loopne
or
test
push
shl
testb
fldenv
faddp
push
cmpsb
mov
jge
mov
jg
mov
xor
mov
pop
sub
jno
testb
xchg
xor
xlat
movsb
mov
add
ja
loopne
mov
movsb
dec
test
fs
mov
jnp
mov
adc
add
push
sub
add
add
sbb
test
cmpsb
lret
dec
loop
std
pop
les
mov
mov
cli
push
push
jb
loopne
adc
push
mov
jp
or
ljmp
pop
jecxz
sub
add
cmp
jbe
sbb
insb
xchg
outsl
mov
fs
or
mov
jecxz
jno
into
dec
call
aam
or
inc
mov
sub
je
lret
push
ret
scas
sbb
gs
mov
testb
xor
into
sbb
jae
cli
mov
div
ljmp
out
xchg
lret
aas
stos
or
mov
mov
add
mov
mov
push
in
shrb
push
das
std
sub
xor
ja
call
gs
and
sbb
addr16
xchg
rorb
cwtl
sbb
mov
in
not
in
mov
mov
nop
cmp
jbe
ds
or
sbb
or
push
test
insb
adc
ret
xor
in
dec
jg
xor
cwtl
cmpsl
les
inc
jmp
xchg
sbb
pop
mov
add
aam
dec
pop
adc
mov
mulb
sub
sub
cmp
adc
push
xor
jle
push
add
filds
adc
ret
jne
mov
xchg
sub
mov
test
cmp
mov
ror
cld
mov
hlt
pushf
sbb
sahf
mov
mov
call
cli
pop
pop
repnz
and
cmp
jle
sbb
in
mov
cltd
je
mov
lcall
pop
movsb
pop
pop
xchg
pop
push
mov
jle
cltd
mov
mull
mov
mov
ss
jl
insb
outsl
mov
adc
jle
add
lock
lea
out
jbe
mov
int3
pop
mov
ds
mov
insb
mov
jg
hlt
jne
les
and
rorl
dec
imul
xor
clc
sbb
jle
out
cmpsl
arpl
out
in
cmp
xchg
hlt
jnp
jne
mov
xchg
xor
sti
lret
mov
aas
leave
mov
inc
mov
xlat
jmp
push
mov
sti
mov
pop
mov
mov
dec
popf
mov
ljmp
test
je
insb
int3
mov
fcompl
aas
cmp
sub
cmp
push
loop
mov
xchg
clc
std
out
mov
cvtpi2ps
adc
aad
xchg
push
and
lds
mov
das
sub
xor
xlat
or
loope
mov
pop
aad
xchg
lcall
adc
xchg
into
les
mov
cmp
mov
mov
cmpl
mov
push
dec
outsb
divb
mov
enter
in
xor
sbbb
cli
repz
cmpsb
mov
dec
inc
xchg
inc
in
insb
hlt
xchg
nop
aas
inc
sbb
lahf
shlb
rolb
daa
int3
mov
loop
js
xchg
dec
or
mov
cli
add
sbb
sbb
mov
jmp
lea
sub
sub
mov
lods
sub
lea
mov
adc
xor
mov
jle,pn
inc
fisttpll
icebp
push
add
push
jbe
ljmp
and
fidivrs
gs
xchg
jnp
clc
jnp
int3
and
mov
cmp
xchg
lahf
xchg
add
and
jg
or
cmpsb
fwait
ret
scas
addr16
das
cmp
cmp
jb
cwtl
xchg
fs
adc
dec
sub
sub
setns
fisubs
dec
rolb
push
out
adc
xor
cmp
ret
hlt
inc
sahf
clc
outsl
cld
repnz
rcrl
notb
ficompl
out
lss
sub
or
xchg
pop
push
out
fsubrl
imul
cmpsb
sti
or
sahf
push
xor
push
and
mov
inc
mov
xchg
jno
dec
cmp
jmp
pop
xchg
aas
lcall
out
adc
rol
push
test
mov
mov
sbb
insl
jmp
ds
mov
mov
mov
pop
ds
imul
mov
sub
jo
stos
cmc
pop
sar
scas
popa
mov
loop
mov
mov
out
push
sahf
and
jae
out
popa
aas
jle
adc
je
sub
bound
adcb
xchg
lods
icebp
xlat
popf
js
outsl
lea
mov
out
jle
out
sub
icebp
das
shrl
add
fisttpll
sbb
ficomps
cmp
lahf
sbb
pop
imul
add
insb
movsl
xor
popf
inc
dec
std
int3
pop
cmc
dec
in
dec
cmp
jecxz
roll
mov
push
out
sub
add
sahf
fnstcw
inc
jmp
mov
xchg
xlat
pop
daa
hlt
mov
int
popa
jnp
sbbb
push
push
dec
lods
fsubrs
mov
nop
bound
into
es
cmpsb
int3
mov
dec
mov
loopne
testb
mov
jns
xor
xchg
lret
ds
pop
mov
sub
bound
js
and
loopne
xchg
xchg
fcompl
call
adc
test
cwtl
or
cmp
pop
add
lret
gs
test
add
cmp
mov
mov
push
sahf
and
daa
inc
cmp
fiadds
sbb
loopne
fimuls
out
lret
rclb
push
ret
ret
pushf
jl
pop
inc
cmpsl
iret
mov
pop
xor
jp
sub
cltd
xor
push
pop
xor
or
xor
cmpsb
pop
pop
xor
ret
stos
data16
cwtl
fstl
mov
cltd
mov
push
mov
inc
lods
shl
sub
aaa
popf
cmp
lock
mov
jg
imul
es
mov
adc
rol
inc
insl
test
add
fwait
daa
jb
jp
xor
rcrl
fisubs
or
mov
mov
data16
aas
jnp
aad
jmp
js
dec
addr16
lahf
test
mov
sbb
push
sbb
xchg
jnp
or
leave
je
jbe
mov
in
in
adc
pop
sbb
add
test
cmp
inc
xchg
mov
mov
mov
cmc
push
and
cmp
sub
and
add
arpl
sub
ss
or
jbe
shr
push
xor
into
sub
stc
push
xor
jns
dec
pop
dec
dec
push
mov
jl,pt
sub
push
dec
mov
fldcw
rcrl
pop
inc
fldl
adc
lds
add
cmp
popf
jns
cmp
iret
pop
cmp
aas
aad
mov
mov
xchg
cmpsl
inc
or
adc
inc
sub
adcl
loop
dec
inc
outsb
push
lea
cmp
xchg
fdivs
xor
mov
mov
into
sub
icebp
inc
aad
in
dec
stc
jae
pop
add
adc
or
insl
pop
mov
aaa
out
push
cltd
mov
repnz
sub
dec
pop
cmp
test
hlt
fsubrl
or
mov
pop
rclb
cltd
xchg
jno
bound
and
les
cwtl
iret
sahf
jmp
xchg
cmp
mov
cmp
cmpsl
xor
addb
sub
shrb
push
sub
mov
jns
mov
inc
sbb
fwait
push
push
in
pop
shl
decb
fnsave
aaa
sbb
jnp
repz
lods
push
cmp
push
mov
adc
sub
leave
data16
in
pop
jno
push
inc
jg
sbb
mov
dec
xor
sbb
test
scas
or
outsb
mov
clc
jns
and
aad
sbb
ret
repz
push
mov
mov
mov
sub
xchg
mov
dec
fbld
stos
and
push
mov
fwait
stos
adc
orb
mov
fs
sub
push
mov
out
pushf
mov
sbb
rorb
fwait
gs
pop
jo
push
mov
out
shll
sub
or
jb
out
sbb
add
test
les
mov
jmp
xchg
sub
popf
inc
rcll
mov
aad
jecxz
xchg
nop
xorb
ret
mov
sbb
mov
scas
test
push
ja
adcb
sub
mov
int3
jmp
cmp
xchg
add
sbb
fwait
out
adc
xor
mov
mov
test
pop
xor
sub
and
push
inc
adc
outsl
mov
in
push
insb
xlat
pop
dec
dec
sti
fnstcw
imul
cmp
imul
test
repz
bound
mov
mov
in
bound
or
inc
clc
fdiv
sub
push
pop
sbb
add
lea
push
mov
lods
iret
dec
stos
fbld
fcomp
mov
repz
fmuls
cli
shll
mov
inc
or
sbb
jb
xor
js
push
and
and
sbb
cmp
adc
push
dec
pop
in
push
lcall
jb
cmc
outsl
stc
int3
adc
push
add
cmp
ss
dec
sbb
mov
push
sbb
sahf
or
jns
and
mov
repnz
lock
xchg
fwait
dec
xor
jo
xchg
mov
ss
test
outsb
xchg
ljmp
fnstcw
xor
inc
and
mov
repz
stos
daa
popa
cmp
add
or
lds
mov
fs
scas
inc
addr16
ja
push
not
testb
arpl
pop
or
sti
jns
sbb
fstps
mov
dec
jmp
add
adc
add
push
push
imul
popa
xor
icebp
cmp
xchg
test
xchg
popf
xlat
fimull
addr16
in
xor
sbb
xchg
fwait
sub
push
mov
sub
mov
sahf
jl
push
adc
xor
mov
addr16
popa
mov
pop
pop
xor
add
cmp
xlat
lahf
mov
sbb
xchg
inc
cmp
mov
and
add
cli
sbb
or
sbb
gs
pop
ds
fistpll
fs
xor
lret
lret
xchg
jnp
sub
icebp
test
dec
jmp
mov
scas
adc
and
xchg
shlb
pop
inc
lods
lahf
es
imul
loope
insl
jae
je
or
insb
jb
inc
mov
jg
aas
xchg
fwait
jg
xchg
stos
insl
adc
mov
rcrl
stos
mov
repz
pop
lret
imul
das
rclb
xor
mov
dec
xchg
pop
xor
fdivrs
cmp
cmc
in
xor
popf
mov
popa
mov
insb
lods
mov
stc
xchg
sti
in
add
mov
test
inc
pop
sub
movsl
add
clc
out
inc
mov
je
stos
rorb
lret
mov
rol
sub
ja
xor
inc
xchg
filds
dec
jp
int3
int3
rcl
mov
inc
sbb
xchg
inc
add
cmp
insb
aad
aas
fs
jo
pushf
jne
jmp
fwait
sahf
into
pushl
adc
mov
mov
or
mov
xchg
test
adcb
lock
jp
loope
hlt
xchg
jbe
sbb
fisubl
lret
in
dec
sub
xchg
xchg
mov
shrb
test
out
pop
cmp
xor
xlat
cmp
push
and
lock
icebp
inc
xchg
out
orb
xor
test
mov
sahf
xor
stos
repnz
fcoms
lret
jnp
cmpb
aad
and
jp
addr16
in
lds
jne
adc
mov
dec
and
mov
dec
push
mov
addr16
xchg
fstl
ja
lcall
fsubrl
xor
sbb
daa
decl
mov
add
cs
adc
mov
adc
scas
pop
jmp
pop
jmp
ja
dec
xchg
aas
dec
or
loopne
shr
or
sub
ds
imull
sbb
cmp
mov
rcl
sbb
movsb
inc
lods
mov
pushf
mov
test
push
mov
insl
lcall
mov
mov
inc
sti
fimull
icebp
leave
loopne
sarb
or
rep
adc
dec
mov
sub
lods
cmp
or
test
popa
cli
fwait
shll
std
cmc
cmp
sti
xor
shll
and
mov
out
ss
pushf
ja
xchg
in
ljmp
jp
in
imulb
add
push
or
sahf
aas
daa
inc
std
mov
cltd
out
scas
ret
or
jb
cli
jnp
pusha
mov
and
cmp
xorl
mov
or
sub
cld
insl
test
xlat
es
add
xchg
pop
jmp
jns
aaa
aad
sbbb
add
mov
inc
cmpsw
sub
addr16
std
adc
lret
scas
aad
idivl
ret
aad
or
imul
imul
jno
pop
jmp
adc
es
sub
inc
jnp
pop
in
into
sbb
adc
scas
rcr
mov
mov
pushf
loop
sub
aam
aam
mov
cmp
cmp
imul
lea
xlat
pop
daa
add
lock
cmp
cmp
pop
cltd
fsts
mov
mov
adc
in
sub
iret
or
call
jp
in
push
xchg
inc
lods
testb
in
fisubrs
sub
add
jmp
mov
aaa
push
pop
mov
xchg
inc
cmp
xor
xor
push
out
arpl
add
dec
fwait
sbb
cltd
pop
loope
inc
cltd
xorb
scas
out
adc
ficoms
int3
mov
sub
outsl
jb
sbb
or
ret
mov
cmovno
in
sbb
push
or
add
dec
sub
xchg
cmp
push
orb
inc
hlt
push
and
addr16
cmp
lds
push
jnp
mov
testb
adc
pop
aas
push
push
push
mov
testl
in
xchg
jle
cmpsl
inc
jp
imul
pop
fistpll
pop
jnp
cmpsb
pushf
or
push
ss
cli
lcall
in
mov
sti
mov
repnz
out
icebp
cmpsb
mov
mov
pop
pusha
mov
inc
jle
hlt
push
daa
out
pop
or
arpl
pop
daa
out
inc
adc
imul
nop
int3
pushf
ljmp
xchg
leave
bound
mov
loope
js
in
lret
fcoms
es
jnp
adc
enter
out
fldt
dec
pop
add
test
push
ja
jle
xchg
aas
sbb
xor
pusha
or
out
jae
add
ds
shlb
lret
rcrb
xchg
dec
mov
sbb
pop
jle
movsb
sti
pusha
in
sahf
dec
and
lods
scas
add
jns
or
mov
outsl
and
std
popf
xor
scas
subl
arpl
fiadds
in
cli
call
pop
mov
rolb
adc
sub
in
bound
push
clc
push
stos
inc
sub
dec
inc
xchg
imul
mov
fwait
scas
test
call
pushf
pop
push
xor
mov
push
sahf
push
les
mov
xchg
jae
push
scas
fisttpll
push
sub
gs
cli
movb
ret
push
daa
sbb
shrb
mov
push
push
cmpsl
rorb
xchg
and
push
mov
cli
xor
jbe
dec
sahf
int3
imul
daa
xchg
in
mov
or
xor
dec
faddp
sarb
sbb
popf
jno
mov
outsb
push
xor
pop
test
mov
cmp
xlat
movsl
in
rcll
inc
push
jecxz
cmp
outsb
mov
adc
lods
sbb
loop
imul
inc
mov
xor
mov
rcr
add
adc
addl
jns
mov
adc
iret
cli
inc
sub
aas
js
pusha
and
jo
aas
adc
outsl
test
pushf
or
jns
xor
shll
jle
lahf
arpl
shrb
or
loopne
inc
sub
loope
mov
xor
mov
cmpsl
pop
and
notl
push
sbb
lcall
and
adc
jl
test
add
negb
sbb
cwtl
lods
cmpsl
ss
dec
pop
fiadds
arpl
call
cmp
pop
ljmp
jo
sbb
out
mov
mov
jns
or
scas
add
mov
out
add
das
mov
bound
push
imul
or
je
pop
clc
sarb
mov
xchg
popa
in
cmc
sbbl
mov
out
push
xor
adc
scas
aaa
insl
test
pop
roll
jmp
jmp
out
jnp
out
lock
xchg
pop
data16
test
incb
scas
mov
loop
adc
in
mov
inc
or
pop
ret
clc
jmp
mov
inc
dec
push
xchg
fisttps
mov
sarb
xchg
es
sub
cmp
add
xchg
ficomps
rorb
mov
rcrl
and
and
mov
lds
nop
mov
cmp
sub
shrl
addr16
cmp
scas
mov
add
stc
adc
insb
mov
imul
je
sbb
ret
test
imul
jno
aad
addr16
push
loop
mov
mov
add
popf
fnstsw
insl
inc
cwtl
sti
insb
repz
out
pop
fnstsw
xor
xor
xorb
insl
fcomi
sub
dec
mov
pop
push
jmp
mov
mov
and
test
or
stc
sub
lahf
cmp
mov
fstpt
inc
arpl
push
push
inc
jecxz
push
lock
loop
imul
cwtl
xchg
inc
dec
push
insl
in
lahf
dec
fsubr
insb
push
in
or
add
push
mov
cmpsl
push
pop
stc
repz
movsb
pop
mov
pop
dec
pop
ljmp
and
data16
test
dec
cwtl
mov
fdivrp
testl
or
push
mov
stc
xor
mov
movl
mov
in
sub
lret
jp
ret
rcll
jae
pop
je
and
mov
sbb
mov
out
sub
jp
xor
mov
sbb
test
lcall
cli
inc
mov
xchg
leave
mov
stos
xchg
cmp
leave
mov
push
das
loope
push
fildl
stos
pop
lcall
fistpl
dec
xor
into
dec
and
cmpsb
inc
jle
inc
sub
adc
cmp
outsl
sub
fwait
mov
out
push
std
xchg
test
scas
nop
lret
clc
xchg
mov
xor
sbb
sub
mov
mov
mov
inc
pop
int3
je
repz
ja
pop
pushf
int3
fimuls
dec
push
in
js
mov
mov
xor
insl
adc
dec
ja
and
pop
and
mov
xchg
ljmp
push
mov
lods
rcr
aad
jne
mov
mov
cltd
mov
out
int
imul
push
mov
movsl
lea
shl
cmpsl
mov
mov
inc
flds
sub
add
cli
mov
mov
lret
dec
sub
pop
xchg
lahf
cld
add
jle
rolb
divl
sub
jo
inc
jne
jne
call
rcrb
jmp
jae
lock
imul
cmp
dec
mov
popf
push
aaa
inc
test
inc
movl
pop
test
ja
movb
cs
sub
add
sub
inc
xor
push
inc
sarb
arpl
insb
movsl
bound
cs
mov
sub
addr16
out
roll
mov
add
cmp
xlat
push
int3
hlt
xchg
rcll
jae
cmp
mov
cmp
or
sub
inc
mov
mov
test
fnsave
and
fidivs
daa
and
jo
jno
cmc
es
shlb
jmp
das
xchg
test
aaa
or
cmpsb
jecxz
fsubl
pop
dec
dec
inc
push
adc
pop
int
ja
adc
or
xor
adc
mov
mov
pop
dec
sub
insl
aam
push
cld
dec
adc
lea
sarl
rorl
mov
ljmp
hlt
xor
or
xor
push
pop
shld
ffree
mov
add
and
test
pushf
test
mov
mov
add
lods
push
sub
sbb
cmpsl
test
outsl
xchg
adc
or
paddw
mov
adc
cld
push
movsb
mov
xchg
and
sti
mov
fiaddl
mov
mov
inc
xor
sub
cld
push
cltd
mov
jb
jl
in
pop
repnz
aaa
fildll
jno
mov
iret
aaa
ljmp
ret
push
inc
push
add
pop
mov
mov
mov
ja
dec
lret
push
pop
aam
addr16
pcmpeqw
fstpt
loop
sti
lret
arpl
leave
cmpsb
inc
jns
sbbl
lds
iret
loopne
dec
insl
leave
dec
ficompl
adc
xchg
cmp
or
dec
into
sahf
ja
lods
jb
dec
popf
mov
das
inc
movsb
stos
mov
movsl
arpl
adc
js
arpl
pop
mov
mov
cmp
mov
fimull
jns
iret
cmp
lock
in
dec
sbb
dec
lret
dec
and
mov
out
dec
xchg
outsb
push
stos
pop
je
jo
push
jns
nop
jnp
sub
arpl
out
xchg
inc
adc
sbb
add
and
push
mov
sahf
inc
or
mov
mov
jp
jns
pop
mov
in
add
fldl
pop
sti
cld
ret
cmc
fistl
xchg
mov
mov
mov
fucomip
and
jne
fcompl
outsl
inc
pop
xchg
inc
sahf
in
pop
push
jg
adc
icebp
out
push
xor
enter
fcomp
push
std
leave
and
scas
cmpsb
push
cltd
lcall
int3
insb
fbstp
clc
fisubs
pop
mov
ja
push
mov
sti
lret
or
sub
loope
loope
add
out
sbb
clc
cli
arpl
inc
hlt
inc
lods
dec
pop
pushf
mov
pop
add
cld
pop
pop
mov
pushl
out
sti
dec
sub
push
xchg
pop
jb
das
lret
iret
sti
imul
cmp
call
bound
adc
add
dec
and
mov
pop
jmp
mov
mov
sbb
push
inc
scas
xchg
shrb
jecxz
test
jo
js
or
pop
lods
rclb
sub
xor
sub
jg
pushf
sahf
loopne
add
addr16
sub
data16
fnstcw
mov
leave
jnp
and
fldl
jp
jg
clc
mov
imul
inc
xor
adc
add
or
in
cs
xor
gs
int
pop
pusha
inc
lds
stos
jg
scas
dec
xchg
clc
dec
jns
push
es
cmp
adc
iret
or
cmc
mov
test
inc
test
dec
iret
daa
pusha
clc
mov
mov
jge
push
mov
enter
mov
or
push
xchg
pop
fstl
jae
lods
scas
inc
dec
arpl
jb
les
mov
stc
das
adc
sbb
lcall
jmp
pop
ja
jno
adc
jl
push
dec
dec
mov
insb
cmp
mov
test
and
and
dec
ja
or
in
or
addb
iret
outsl
xchg
mov
xchg
leave
bound
ds
in
jmp
push
rcr
leave
cmp
pop
inc
daa
cwtl
test
hlt
or
call
js
xor
and
adc
outsb
test
xor
fisubrs
frstor
lahf
add
push
adc
gs
jl
jnp
inc
scas
int3
sub
mov
dec
es
sub
sbb
mov
pop
jae
sarl
ljmp
inc
and
inc
pop
cmpb
and
int3
lea
movb
inc
fstpt
or
ss
mov
nop
mov
dec
ret
and
and
push
shrb
add
iret
sbb
xchg
adc
es
test
xor
inc
subb
out
iret
sub
ja
adc
mov
add
mov
mov
test
and
pop
int3
loopne
test
jp
mov
cwtl
push
inc
mov
lods
pop
xor
sbb
fisttps
and
mov
or
jo
out
or
inc
roll
push
int3
stc
dec
sbb
into
stc
xchg
iret
mov
dec
ret
add
fcoms
mov
ljmp
lods
in
hlt
out
pop
aad
add
imul
add
pop
or
xchg
in
sbb
insl
and
sub
mov
xorb
sub
inc
out
jnp
cs
ret
jb
xor
push
leave
pop
in
push
aam
jno
jns
ds
and
cmp
xchg
jb
mov
lret
in
daa
inc
jb
mov
pushf
sbb
dec
outsb
shll
or
mov
push
cmp
cmpsb
mov
add
push
mov
push
mov
sti
inc
ret
xchg
jo
sti
lahf
xchg
sbb
xor
aas
in
mov
insb
pushf
mov
xchg
xor
xor
repz
push
test
add
fs
stos
gs
test
or
mov
or
jp
pop
pop
ret
xchg
add
cmp
nop
push
out
push
test
xchg
loopne
lcall
cmp
out
outsl
aam
inc
movsl
pop
lods
add
pop
stos
and
movsl
jbe
cmpsl
lds
inc
fwait
ds
push
icebp
sahf
pop
sbb
cmpsl
popa
int
into
pop
fnsave
dec
dec
jno
push
xor
sbb
notrack
push
repz
sar
push
aam
push
pop
push
lea
cltd
dec
int
pop
adc
jmp
pop
sarl
test
das
movsl
mov
not
sub
adc
mov
dec
xor
dec
cltd
dec
imul
xchg
add
test
imul
dec
rclb
ret
pop
mov
iret
js
dec
std
push
mov
insl
bound
rcrl
cmpsl
data16
sbb
jg
or
xchg
fcoms
sub
clc
lods
js
jecxz
xchg
adc
enter
jge
pop
mov
inc
cld
stos
scas
stc
jno
mov
cmp
mov
inc
mov
xor
pop
lcall
cmp
int3
rclb
mul
bound
enter
in
xor
clc
movsl
loop
add
push
je
loop
sbb
pop
sahf
popl
mov
sub
jl
inc
les
shl
test
call
repnz
add
lret
outsb
mov
movsl
stos
and
dec
dec
and
imul
push
imul
popf
scas
pop
loope
add
sahf
cwtl
xchg
cmp
or
jg
mov
push
ljmp
lock
push
push
inc
xchg
adc
pop
aam
jb
sarl
add
add
xorb
fbstp
cmpl
stos
aam
mov
mov
pop
lea
stos
jecxz
sti
lret
xor
imul
mov
mov
push
mov
xchg
mov
jb
sub
orl
aaa
or
xor
js
or
lds
jmp
jne
int
cmp
sahf
mov
sbb
ja
dec
inc
jb
push
mov
les
xorb
mov
xrelease
jge
mov
ds
ret
inc
xchg
mov
xchg
xor
push
pushf
inc
inc
mov
fsubrs
test
pop
push
sub
jo
outsb
jno
xor
or
push
lods
out
add
lahf
test
icebp
jo
into
xor
add
int
cmpsl
rorl
cmpsl
sbb
jmp
iret
pop
xor
sub
test
imull
cmpsb
pop
mov
std
loope
les
pop
jns
sub
inc
popa
cmp
lahf
add
cwtl
popf
imul
ljmp
adc
stos
movsb
jl
and
incb
mov
loop
xor
jne
and
adc
lahf
dec
xor
lea
sbb
es
lret
jns
insl
push
add
mov
or
sub
mul
nop
hlt
mov
jae
movsl
jge
shrb
mov
popa
mov
pop
lods
pop
js
and
in
imul
jnp
xor
addb
jne
and
push
jo
mov
pop
xor
cmp
sbb
cmpsl
jbe
inc
or
outsb
nop
pop
popf
mov
inc
in
outsb
ret
andb
pop
xchg
pop
cmc
sub
fldcw
push
pop
cmpsb
iret
or
sti
pop
outsb
stos
ja
xchg
bound
pop
gs
insl
faddp
xchg
bound
mov
lret
insb
pusha
xlat
dec
lahf
rcll
mov
arpl
movsb
sbb
jns
clc
mov
js
shll
add
repnz
mov
and
dec
hlt
xchg
push
mov
iret
cmc
std
das
test
mov
imul
sbb
inc
add
out
sub
into
sbb
mov
xchg
and
inc
or
cmp
add
data16
xor
scas
bound
push
outsb
xchg
mov
inc
ficoml
repnz
sbb
call
ss
inc
cmp
cmpsb
xlat
icebp
imul
xchg
add
xor
add
sti
insb
sub
aas
push
repz
outsb
push
and
xchg
cmc
out
jl
cmpsb
ret
pop
mov
loopne
push
mov
fnstsw
xor
or
popl
or
jle
jmp
gs
mov
xor
or
or
cmp
jo
mov
movsl
jmp
sbb
mov
pop
rcll
adc
in
pop
jb
rcll
add
std
ret
mov
mov
xchg
imul
ljmp
mulb
outsl
mov
orl
mov
push
mov
mov
hlt
das
imul
subb
jg
test
aas
shl
aas
mov
adc
adc
punpckhdq
mov
clc
mov
push
xor
mov
rcrb
inc
mov
add
sbb
jmp
ss
add
push
outsl
inc
or
mov
psrlw
cmpsl
pop
lea
mov
js
call
push
push
scas
or
adc
mov
int
dec
or
push
jns
cmp
aam
lods
jge
and
add
mov
stc
pop
lcall
cmp
ret
stc
adc
dec
in
test
cmc
xchg
hlt
mov
mov
push
hlt
in
add
mov
jnp
or
or
xor
mov
js
gs
in
push
push
clc
es
jge
aaa
or
cwtl
pop
ljmp
aam
mov
enter
aam
sbb
sbb
fbld
rclb
sub
imul
rorb
fcoml
stos
sbb
sub
cld
xchg
stos
scas
lds
dec
cmpsb
shl
mov
inc
mov
shlb
or
dec
sbb
add
mov
pop
sub
ja
dec
aam
arpl
push
out
int
sbb
mov
sub
aas
and
sbb
mov
pop
xlat
leave
xchg
pop
add
fisubrs
das
sub
adc
movsl
mov
adc
xchg
sti
sub
fcmovne
das
cmp
das
adcb
or
stos
mov
sub
jbe
mov
xor
fistps
xor
movsl
pop
loopne
push
pop
xchg
xchg
repnz
inc
testl
lahf
mov
arpl
adc
cmp
or
pusha
movsb
xlat
dec
xchg
adc
js
lcall
dec
cli
icebp
jmp
enter
xor
decb
sbb
adc
cwtl
adc
push
out
lret
in
aaa
adc
pushf
sbb
mov
bound
loop
inc
mov
fstpl
jns
jns
rorb
jecxz
push
dec
stc
fstl
leave
jp
jmp
movsl
cmpl
es
subb
mov
aad
mov
pop
inc
push
jp
dec
mov
adc
ror
fbstp
ret
xchg
xchg
pop
in
and
adc
pop
inc
xchg
std
cmp
int3
das
ljmp
bound
out
jl
mov
mov
lahf
in
mov
subb
push
inc
int
xchg
lods
sti
mov
pop
sub
mov
xchg
fsubrs
pop
sub
jge
or
xor
shr
pusha
push
push
sbb
adc
push
add
push
pop
push
mov
and
adc
iret
mov
push
lea
outsl
cmp
jne
push
fidivrs
out
sahf
notb
cmp
mov
lods
cltd
xchg
adc
xor
cmp
sahf
stos
xor
lahf
sbb
sbb
add
add
sti
leave
push
mov
pop
mov
cwtl
jg
adc
mov
or
rcrb
out
inc
xorb
sbb
dec
add
iret
pop
jnp
or
cmp
mov
pushf
imulb
loope
outsl
sti
push
lods
xor
xchg
ss
lret
aas
mul
fcompl
push
neg
shrb
dec
dec
cmp
fisubrs
stos
rcll
xchg
out
mov
scas
mov
stos
dec
dec
mov
mov
mov
cmp
int
fstps
jmp
das
dec
out
out
push
sub
iret
pop
pop
jne
fidivrl
mov
arpl
inc
repz
jae
das
jl
movsb
nop
lcall
mov
out
test
bound
sub
leave
leave
cmp
cmp
mov
or
add
shr
sub
xchg
test
imul
loop
daa
cmpb
xor
and
mov
mov
xchg
ds
and
jnp
enter
lcall
add
scas
xor
mov
aam
jg
insl
jne
repz
xchg
pop
int3
icebp
jbe
scas
inc
lods
lds
adc
pop
scas
add
push
mov
adc
ret
cmp
and
or
dec
stos
inc
sti
lcall
test
cmc
push
jb
xchg
fwait
mov
arpl
xor
jae
inc
aam
dec
ss
bound
fisttps
xchg
jecxz
faddl
mov
shr
sub
lahf
cmp
push
push
push
cwtl
mov
mov
pop
sgdtl
scas
cmp
icebp
xchg
adc
cmp
cmpsl
pop
mov
xlat
sub
mov
sti
outsl
and
add
jno
inc
xor
imul
sbb
adc
xchg
dec
sub
mov
dec
pusha
mov
fwait
push
push
imul
ficoms
ja
lahf
shr
push
jns
mov
sbb
xchg
jo
mov
pop
pop
xchg
add
inc
out
stos
inc
jp,pt
popa
imul
test
test
add
loop
inc
fsubrs
daa
mov
enter
push
mov
aaa
and
push
leave
xchg
sti
jbe
mov
in
xchg
push
aaa
cmpsb
jns
add
sub
filds
rcrb
push
add
push
test
lds
and
lcall
mov
jbe
jno
push
repz
add
xor
movsb
sbb
pushf
push
sbb
push
dec
in
mov
sbb
pusha
inc
les
subl
xorb
ss
loop
mov
repnz
dec
fildll
inc
cmc
fists
shrl
lock
add
mov
or
or
mov
test
xor
orb
sbb
cltd
xchg
pop
xor
mov
jae
xor
cmc
repz
flds
int
inc
jl
cmp
xchg
add
push
add
cli
sahf
inc
fldcw
pop
jmp
or
adc
xchg
leave
inc
lods
and
lock
mov
inc
xchg
mov
sbb
dec
xor
pop
cmp
adc
xchg
push
ret
or
aaa
and
cmpb
mov
loope
sbb
mov
aam
and
jp
mov
rcrl
jmp
mov
stc
outsl
push
and
pop
mov
cmp
test
xchg
adc
mov
sahf
in
jne
insb
mov
gs
out
inc
out
dec
imul
or
push
aad
hlt
xchg
orl
mov
push
fdivl
es
and
icebp
or
mov
add
pop
xor
and
orb
inc
push
enter
xlat
dec
dec
jmp
and
test
in
inc
xor
adc
xchg
mov
popf
mov
adc
pop
jne
mov
cld
lret
popa
add
jno
mov
adc
repz
cmp
rorl
mov
cmpsb
cli
xor
cli
les
cmp
and
push
push
xor
test
sub
cmpsb
out
pop
repnz
ja
inc
push
mov
dec
pop
mov
aas
repz
cmp
cli
xor
enter
add
push
loope
xor
pop
xchg
movsl
xchg
sub
jle
cmp
inc
test
fidivs
mov
loope
mov
popa
pop
daa
add
sbb
mov
pop
jne
mov
dec
dec
loopne
mov
in
jecxz
fwait
and
mov
add
aad
fistl
sbb
das
add
xor
mov
inc
mov
push
js
push
insb
data16
les
or
push
push
push
inc
push
and
out
dec
add
test
jl
dec
sub
fwait
rclb
push
call
dec
shlb
jle
out
pop
jae
push
pop
popa
out
mov
fs
mov
stc
lock
popf
inc
cld
xchg
out
xchg
mov
push
push
stos
mov
dec
dec
cmp
adc
mov
aad
jb
ret
scas
cmp
roll
add
repnz
movb
inc
out
xor
mov
pop
aad
or
shr
sub
dec
cmpl
jp
xchg
pushf
mov
std
add
scas
pop
inc
jae
rol
outsb
xchg
enter
cmp
cmc
subb
imul
int
push
mov
movaps
mov
lahf
mov
mov
sbb
rcrb
daa
mov
mov
arpl
xchg
lret
jns
xor
repz
scas
lret
sbb
idiv
lret
push
sbb
aam
out
outsl
push
ja
or
aas
fadd
cwtl
jb
fistpll
xor
fs
ljmp
ja
jecxz
repz
pop
fneni(8087
push
jno
cmp
aas
outsl
fucomip
mov
lods
popf
jle
in
jecxz
sub
clc
jno
pop
hlt
inc
add
stos
cmpsl
popa
mov
inc
jo
outsb
pusha
jbe
sub
push
arpl
inc
or
loope
stc
rcl
add
ret
arpl
mov
pop
mov
ds
rclb
ret
pop
dec
stos
or
aam
xlat
sahf
iret
mov
mov
add
mov
jb
cmp
in
cmpsb
je
dec
shlb
xlat
push
stos
popa
addr16
loope
mulb
inc
mov
imul
cli
sub
int
jne
or
jbe
out
divb
jle
jmp
test
jno
xchg
and
lahf
fidivrs
stos
dec
test
jno
dec
cmc
cmp
jmp
fldcw
das
ds
adcb
dec
inc
jb
mov
cmp
jnp
stos
subl
jns
push
mov
cmp
xor
xchg
jecxz
filds
sub
inc
mov
mov
jg
and
dec
test
jno
in
mov
lret
fstps
mov
cmpl
xor
or
adc
and
in
pop
shll
je
mov
pop
sbb
orl
sub
sahf
das
test
daa
sub
lahf
mov
push
lock
sbb
mov
mov
sti
jo
push
jb
lahf
xor
dec
push
jmp
inc
mov
mov
idivb
sub
rcrl
insb
pop
das
mov
xor
mov
xchg
or
and
push
sbb
cmc
mov
add
adc
mov
jnp
push
adc
stos
mov
out
orb
xchg
and
mov
xor
add
test
sahf
pushf
cs
repnz
xor
testb
mov
aaa
mov
sti
aad
bound
in
pop
push
and
push
addr16
jo
cmp
icebp
stc
inc
mov
jle
fdivs
stc
push
mov
aas
cwtl
leave
test
xor
shrb
cmp
cmc
in
outsl
mov
cld
sbb
add
or
adc
and
push
xlat
adc
negl
xor
jnp
sbb
xor
push
jge
aas
cmp
push
stc
fcomp
data16
push
repz
rcll
sbb
sahf
insb
push
nop
sub
test
cwtl
call
icebp
or
cwtl
ret
inc
jl
mov
mov
leave
fistl
mov
mov
out
subl
sti
stos
das
jmp
pop
jb
fistps
jmp
push
mov
pop
fbstp
mov
lods
pop
mov
jo
test
aas
imul
jae
inc
daa
stos
cmp
add
int3
mov
cli
add
shl
fdivrs
lods
ret
jbe
push
lret
dec
sbb
xchg
dec
test
fsubs
mov
pushf
or
frstor
jbe
jg
insl
add
push
push
push
ss
test
mov
pop
iret
repnz
adc
dec
fsubl
sub
add
mov
nop
enter
jb
and
mov
and
testl
add
je
std
mov
ds
enter
jne
test
add
int
stc
fwait
add
dec
adc
add
dec
mov
lcall
push
nop
sub
data16
sahf
stc
popa
bound
mov
mov
xchg
adc
push
push
repz
inc
insl
test
cld
pusha
fldt
jmp
mov
ja
loop
cmp
mov
repnz
adc
sub
xor
mov
jbe
or
cmp
into
daa
rcrl
sub
std
pop
push
mov
mov
sbb
sub
popf
push
dec
jmp
jp
mov
lcall
data16
pop
lcall
out
pop
jns
lret
or
sti
sub
add
std
mov
xor
scas
pop
push
aaa
fucomi
insb
popf
add
shl
xchg
sbb
out
fcmovne
in
cltd
xchg
lcall
xchg
stc
pop
jge
pop
gs
lods
popf
sub
push
mov
adc
mov
jg
xlat
loope
icebp
xchg
loop
scas
ret
mov
nop
adc
push
in
jge
jge
xchg
lea
notl
cmpsb
ds
jne
sbb
adc
push
xor
sbb
stos
pusha
sub
jmp
add
in
mov
das
push
add
adc
imul
lcall
push
mov
jno
fsubl
rorl
add
dec
js
inc
dec
sbb
xchg
sahf
lret
popl
aaa
inc
adc
mov
jp
shl
out
push
outsl
push
cmpb
es
out
mov
ss
xchg
mov
pop
push
jb
push
popf
cmp
in
mov
push
mov
in
loopne
pop
jo
dec
jg
lcall
arpl
sub
in
adc
push
mov
sbb
pop
sub
jge
mov
scas
ret
cmp
jbe
shll
mov
xchg
push
mov
pop
xor
sahf
lcall
mov
imul
push
cmp
cmp
scas
sbbb
hlt
loopne
ss
add
int
ret
jecxz
jmp
xchg
aam
dec
test
push
jb
adc
sub
rcll
out
shl
imulb
jl
fstpt
or
adc
or
or
rcrl
ret
stos
cmpsl
and
loop
cmp
jl
int3
and
test
push
xchg
in
sbb
push
xor
pop
int
sarl
fmull
or
popf
mov
mov
mov
adc
xchg
aas
sub
sub
stc
dec
not
xchg
pusha
mov
xchg
fcom
cmp
fbstp
xorl
dec
or
in
push
jo
add
and
stos
sbb
inc
mov
push
fisttpll
hlt
lcall
movsl
fimuls
cltd
jmp
push
stc
mov
jne
aad
sbb
fidivs
out
das
out
adcl
cmp
mov
mov
cmp
popf
xchg
sub
aad
imul
dec
sub
shl
adc
xchg
lret
out
in
cmc
xor
pushf
xchg
mov
jb
add
jl
dec
mov
test
xor
or
cmp
and
or
ljmp
mov
rorb
push
addl
rclb
cmpsl
mov
int
mov
lock
mov
cmpsl
fwait
xchg
lea
adc
pop
push
push
dec
push
lret
dec
pop
repnz
jl
cs
mov
cmp
test
out
add
pop
lods
inc
mov
repnz
outsl
loope
addr16
imul
xor
pop
mov
aaa
dec
shlb
dec
mov
xchg
push
loopne
sub
inc
xlat
add
adc
inc
inc
sub
insb
addr16
xchg
dec
push
pop
lret
xorb
pop
popa
pop
mov
inc
into
cmp
daa
fisttpll
pop
icebp
jnp
out
nop
aad
jecxz
adc
fsub
aas
int3
lahf
imul
mov
inc
in
cmp
mov
lret
fdivr
inc
push
xor
pop
pusha
cmp
out
xlat
movsl
xor
push
push
in
call
adc
shl
sbb
dec
aam
bound
ficoms
dec
or
test
or
fmull
jl
mov
pusha
jae
stc
in
pop
stos
mov
lods
sbb
into
das
jno
mov
je
cmc
mov
faddp
and
adc
mov
jns
in
in
sub
leave
xchg
sbb
mov
mov
and
mov
jg
test
enter
inc
in
mov
inc
aam
add
jbe
cmpsl
bound
xorl
add
lock
xchg
std
cwtl
stos
dec
jae
ret
aaa
gs
repnz
mov
xchg
ljmp
or
pop
sti
dec
pop
fs
fbstp
out
jae
mov
mov
adc
and
das
sub
es
and
ds
inc
cmc
adc
xor
aaa
push
or
lret
sti
and
push
xchg
gs
sbb
mov
push
add
push
mov
xor
fistpl
cmc
mov
scas
xchg
add
out
arpl
inc
loope
lahf
xchg
mov
dec
and
adc
mov
fdivrl
xchg
aas
pop
imul
ret
lcallw
test
cmpsl
nop
xchg
push
mov
jae
sub
xlat
jmp
fisubl
lret
mov
jne
mov
decb
xchg
push
adc
mov
add
sub
gs
das
mov
mov
jne
fadds
jle
mov
lcall
rcl
xchg
xchg
lock
scas
mov
and
outsb
push
addr16
add
push
je
popl
arpl
shr
das
cmp
xchg
in
and
leave
push
push
inc
inc
fildll
mov
xchg
out
mov
inc
sahf
mov
mov
jl
and
jl
mov
and
ljmp
in
enter
int
out
ds
xor
xor
add
mov
imul
aas
loop
or
movsb
wbinvd
jbe
dec
xchg
cmp
sub
imul
inc
jg
out
lods
push
xlat
lcall
stos
leave
inc
lcall
pop
xor
addr16
push
xchg
mov
cltd
ss
into
nop
push
popf
repz
or
scas
pop
loop
iret
or
mov
test
scas
xchg
sbb
movb
icebp
dec
inc
pop
inc
mov
mov
mov
push
adc
hlt
xchg
mov
sbb
jnp
scas
pop
sbb
out
mov
cltd
in
mov
push
cmp
movsb
inc
je
cwtl
aas
and
pushf
test
pop
add
mov
mov
jne
jnp
mov
iret
mov
lcall
dec
lock
aam
xchg
xor
dec
int3
ss
fldt
shrb
lret
mov
repnz
xchg
sbbl
test
and
mov
lcall
mov
cli
cltd
jnp
push
sub
cli
mov
clc
call
std
mov
add
mov
ljmp
ret
sub
pop
adc
das
dec
mov
int3
inc
test
push
ljmp
addr16
push
pop
and
ret
xlat
div
mov
subb
mov
test
repz
and
xchg
jp
gs
mov
out
stos
in
mov
pop
loop
push
or
cmp
loopne
cmp
mov
lods
arpl
inc
das
gs
inc
test
test
dec
shlb
inc
fldt
cwtl
enter
bound
lret
xchg
mov
or
jno
test
and
pop
pop
xor
jg
jno
pop
pop
adc
cmp
push
shlb
inc
mov
mov
cs
ja
mov
test
jo
dec
xchg
inc
inc
rep
cwtl
in
mov
cld
testl
adc
cld
sub
xchg
mov
jl
daa
sbb
jo
out
sahf
mov
stos
insl
or
pop
sub
dec
loope
les
mov
mov
loope
aaa
sarl
lock
insl
dec
int3
aas
push
or
jecxz
add
sbbl
sbb
cmpsl
aas
in
inc
push
lret
mov
add
pop
inc
into
jno
inc
ret
mov
cwtl
or
test
or
sub
jle
dec
and
xchg
mov
xor
push
insb
popf
cmpsb
sub
and
int
mov
rcll
mov
roll
cmp
pop
push
sti
or
pusha
sbb
aaa
mov
sub
jp
rcll
faddl
movsb
xor
mov
push
lods
jl
outsb
mov
hlt
popa
adc
aas
mov
icebp
mov
mov
cmp
xor
cmp
popf
sub
ja
and
ss
push
xchg
ljmp
sarb
jae
icebp
icebp
aam
stos
jne
mov
mov
in
add
inc
ja
scas
sub
mov
pop
or
imul
adc
sub
cmp
pop
vshufps
ljmp
sti
aad
add
leave
push
dec
outsb
mov
pop
mov
gs
adc
mov
or
adc
jno
mov
mov
loop
aas
xchg
xlat
fmulp
into
enter
xchg
test
dec
add
test
clc
push
push
scas
and
call
sub
xchg
orl
mov
jbe
adc
cmp
mov
sbbl
xchg
sub
gs
push
repnz
fdivrs
pusha
in
in
sbb
aad
movsb
or
mull
shrl
inc
lock
bound
data16
test
cmp
pop
inc
std
ss
hlt
loop
loop
cmp
nop
jl
mov
icebp
ljmp
fwait
das
pop
cmc
jae
scas
inc
jns
pop
pop
jne,pn
shll
cmp
test
mov
test
push
pop
pop
std
sbb
in
pop
lds
das
fisubrs
loop
out
movsl
inc
and
fnsave
lcall
push
lds
add
xchg
inc
mov
int
mov
jbe
pusha
mov
popf
mov
pushf
sahf
loopne
push
cmp
scas
std
into
push
aas
and
or
add
adc
fbstp
stos
adc
jne
push
pop
hlt
arpl
mov
pop
lret
insb
mov
mov
test
mov
push
or
sbb
insb
scas
lret
sbb
rolb
nop
cmpsl
mov
shll
insb
dec
ds
je
mov
stc
ret
jb
fnstsw
xchg
or
mov
xchg
xchg
sub
call
cltd
fcomps
or
hlt
mov
icebp
push
xor
push
sub
add
aas
rclb
shlb
pushf
dec
or
fmul
and
cmp
insb
inc
ret
scas
clc
mov
adc
in
inc
lods
imul
scas
mov
bound
shlb
and
or
sub
sub
mov
inc
std
hlt
adc
and
mov
inc
pop
lods
push
mov
scas
out
filds
andl
or
adc
stos
loop
sub
jno
movsl
mov
aas
insl
xor
cld
jle
sub
test
xchg
pop
inc
popa
cmp
add
jne,pt
or
pusha
pop
int
push
xor
push
dec
aam
xor
pusha
or
pop
repz
insb
jle
jle
sbb
or
jmp
lcall
in
mov
or
push
fldl
mov
mov
clc
dec
mov
xchg
xchg
sbb
dec
inc
mov
xchg
xchg
xchg
jecxz
push
fldl
dec
movsl
enter
cmp
sub
lret
jg
js
lcall
or
in
mov
ret
pushf
lea
mov
mov
xlat
sbb
jecxz
sub
mov
mov
push
fidivrs
ret
mov
mov
lds
mov
mov
call
xlat
xchg
fstl
jb
xor
inc
loopne
mov
xchg
out
pop
xchg
push
stc
fnsave
subl
out
lods
pushf
inc
lret
aad
je
cmp
xor
pop
add
shlb
mov
pop
jg
xor
mov
sbb
add
scas
mov
ret
ficompl
cmp
xor
or
ret
loopne
clc
push
repnz
add
fwait
and
mov
dec
sub
jmp
mov
insb
xchg
fistl
cmp
xchg
js
sub
dec
test
fdivrp
add
lods
insb
mov
popf
xchg
idiv
jp
cltd
lcall
cmp
iret
inc
scas
adc
jg
out
das
and
ret
push
call
add
test
mov
dec
dec
loopne
push
shr
dec
test
cld
cmc
inc
mov
mov
xchg
or
push
out
cmpsb
adc
movsb
mov
and
aam
pop
sub
xchg
cmpps
movsb
xchg
inc
rolb
bound
sbb
mov
std
mov
inc
enter
push
sar
jle
mov
push
adc
xchg
mov
and
pop
loop
enter
aaa
add
loopne
jmp
push
test
push
push
inc
popf
cmp
mov
repz
and
mov
nop
adc
out
dec
xor
psrlq
lea
jo
daa
dec
fiadds
xchg
dec
test
or
mov
hlt
out
xorl
pop
xchg
sbbl
mov
ljmp
adc
lods
cmc
testb
xchg
pusha
aas
pop
add
repz
je
cmp
mov
outsl
ret
in
push
mov
mov
mov
sub
outsl
aaa
add
fstl
mov
push
jae
and
add
push
ljmp
dec
hlt
mov
push
cmp
adc
pop
mov
sbb
xchg
loopne
mov
test
std
imul
mov
jb
or
or
xchg
loop
stc
scas
mov
mov
cmpsb
out
js
in
push
xchg
and
xor
lock
aad
jne
inc
jae
stc
push
insl
fisubl
mov
and
jb
js
pop
sbb
sbb
and
fsubp
imul
sub
fcomps
and
bound
sarb
mov
andb
xchg
xor
mov
out
fwait
sti
xchg
inc
lret
add
sub
push
js
andl
xor
imull
dec
test
pop
mov
inc
xchg
xor
enter
add
outsl
mov
jnp
das
and
mov
adc
sub
fiaddl
sbb
push
push
sub
inc
xchg
fisubrs
sub
lock
mov
pop
int
sub
xor
push
imull
cwtl
inc
pop
paddusb
sbb
pop
aaa
sbb
and
lea
adc
mov
insb
jmp
nop
cwtl
repz
ljmp
loope
cs
add
test
imul
add
test
xchg
sbb
adc
jnp
shll
pushf
mov
xor
shrb
jmp
xor
mov
fwait
jl
jge
fldt
push
cmpsb
sbbb
or
add
sub
mov
inc
cmp
xchg
popf
cmc
push
imul
pop
out
dec
and
movsl
and
test
repz
loope
cmp
push
jns
sub
sbb
push
adc
mov
sti
add
jl
lcall
inc
stos
adc
mov
inc
pop
inc
enter
daa
paddw
mov
and
jmp
push
divb
iret
cli
shrb
pop
imull
pop
dec
adc
jbe
and
out
scas
mov
orl
mov
mov
sbb
fildl
fs
cwtl
or
xor
sub
cmpsw
jmp
pushf
xor
idivb
sarb
imul
pop
sub
xchg
shlb
pop
data16
cmc
stc
pop
mov
mov
or
cmc
cs
mov
je
arpl
insb
dec
pusha
xor
dec
aad
xor
fwait
sub
inc
repz
rcl
in
ds
dec
add
add
out
adc
mov
cmp
daa
or
insb
mov
test
push
lds
mov
cmc
icebp
push
clc
mov
insl
pop
mov
jno
inc
mov
xchg
stos
or
sub
jne
lock
mov
fidivrl
stos
roll
lcall
adc
call
outsl
jl
das
xor
mov
aas
push
test
inc
inc
dec
fcomps
in
sbb
cmpsb
xchg
pop
into
fists
push
mov
pusha
or
call
and
jle
and
js
sub
jecxz
sti
mov
mov
add
loope
xorb
movsl
pusha
out
cwtl
pop
in
iret
cmp
push
imul
stos
mov
ret
mov
add
jae
test
push
sarl
mov
js
and
lods
and
or
ret
cmc
jne
and
sub
cwtl
out
and
hlt
jl
dec
test
repz
adc
sti
pop
mov
adc
xchg
aad
xchg
xchg
push
xlat
into
xlat
cli
sbb
jae
fisubrl
xor
test
lret
cmpl
pop
add
mov
sub
mov
jmp
xor
pop
and
jns
mov
int
fisubrl
push
movsb
add
mov
arpl
nop
add
popf
mov
mov
jmp
or
jle
fsub
sbb
aaa
mov
mov
pop
and
call
clc
inc
movsb
push
in
das
add
mulb
xor
insl
xchg
scas
or
or
pop
orl
and
inc
fs
adc
or
cmpsl
jns
jecxz
xchg
fs
mov
jbe
js
inc
pop
pop
aam
neg
out
loope
cmp
pop
jmp
into
outsb
shl
mov
mov
or
push
call
es
clc
fs
les
lret
jae
andb
mov
std
sbb
mov
jp
lcall
dec
sbb
add
pop
arpl
icebp
rcll
fisttps
pop
insl
lcall
sahf
in
fwait
mov
push
push
sub
outsb
int
xchg
jecxz
frstor
imul
push
mov
cmpsb
fildll
in
and
pushf
pop
dec
pusha
mov
fcoml
ret
xacquire
and
and
push
and
inc
xchg
cmp
andl
xchg
xchg
cld
mov
sub
scas
cwtl
loope
in
pop
stos
int3
enter
stos
testb
pop
decb
dec
pop
jne
mov
mov
mov
out
jmp
adc
mov
mov
and
mov
mov
hlt
jle
dec
xor
fnstsw
pop
jo
jno
pop
cmpsb
dec
arpl
decl
leave
in
push
fcompl
jbe
xor
sub
jns
lods
int3
mov
fstps
add
ljmp
mov
sbb
int3
test
test
lret
mov
or
mov
clc
clc
jle
repz
mov
cmp
dec
shrb
mov
lods
adc
xchg
xlat
mov
loopne
imulb
inc
data16
movsl
mov
stos
lcall
and
test
xor
jmp
cmp
push
lahf
pop
ret
clc
add
mov
adc
enter
lock
lods
mov
out
or
jne
into
fldenv
shlb
mov
xchg
inc
addr16
cmp
add
rcr
movsl
cmp
add
stc
cli
aaa
xchg
andl
xchg
sub
sub
cmpl
aad
inc
loope
into
xor
xchg
push
rclb
ss
les
mov
push
icebp
cwtl
bound
xchg
in
mov
adc
inc
lods
cmp
pop
jnp
mov
divb
rolb
cmpsb
cmp
subl
mov
sub
sbb
sbb
insb
int3
mov
or
jp
pop
sti
push
ror
mov
inc
fnsave
jb
out
jp
and
cwtl
and
fs
cmp
popa
cmc
sub
lea
dec
and
push
mov
jb
std
push
jne
or
sub
xchg
in
nop
sbb
jmp
or
into
daa
aam
inc
dec
stc
outsl
cltd
imul
mov
lock
mov
js
sbb
xor
xor
addr16
adc
js
scas
leave
rol
mov
fildl
rolb
jb
subb
lret
repz
xor
fcoml
lds
mov
movsl
jbe
cs
mov
mov
jno
jns
jge
test
and
push
xchg
mov
xor
xchg
aam
push
sbb
add
xchg
xor
es
stc
dec
hlt
mov
and
test
mov
cli
stos
sub
push
fs
in
inc
or
lods
lds
mov
mov
or
and
mov
cwtl
loope
mov
mov
fdivl
pop
mov
rclb
cmpsb
push
pop
mov
aad
mov
cmc
into
ficoms
ljmp
inc
pusha
test
insb
mov
or
and
mov
std
dec
or
test
mov
loope
push
aad
sub
push
rolb
jns
and
dec
inc
shlb
jecxz
in
jns
leave
add
or
jbe
fsubrs
push
xlat
aad
sahf
jo
xchg
sub
sahf
add
movsb
sbb
lods
roll
push
aas
cwtl
loopne
js
sbb
pop
je
mov
call
insb
aam
push
or
dec
jecxz
pop
jno
push
mov
sar
xlat
out
fs
pop
test
mov
stc
rorb
clc
inc
out
sbbl
jns
andl
negb
pop
jg
stos
adc
mov
loop
das
sbb
outsb
insl
xor
mov
jp
xchg
push
pop
jmp
nop
inc
or
xchg
xor
sbb
ret
loopne
in
mov
jb
mov
cltd
push
popa
fisubrs
and
cmp
cld
ret
rcll
out
loope
add
not
cwtl
mov
pop
mov
loopne
and
mov
inc
cli
lea
std
test
dec
sti
xchg
aaa
add
fidivs
scas
hlt
bound
aad
outsl
andl
xor
cld
lods
fwait
inc
adc
push
push
or
sbb
test
fdivp
cmpsl
jae
in
jne
cmp
sub
aad
cmp
mov
loop
cmp
jns
sbb
lcall
mov
mov
jmp
jnp
inc
mov
insb
cwtl
jbe
mov
xchg
das
pop
mov
sub
out
add
ffreep
push
or
lret
std
xor
sbb
and
mov
fimull
push
rorb
call
xchg
pop
stc
and
sbb
mov
mov
and
daa
push
add
mov
xchg
movsl
aas
repnz
adc
xchg
ret
aad
dec
dec
ljmp
dec
push
mov
dec
mov
insb
popa
aas
je
jmp
sub
fwait
mov
xor
or
cmp
jle
fs
xchg
into
dec
push
pop
cwtl
mov
xchg
adc
adc
jg
fdiv
dec
inc
jle
sti
sub
adc
or
push
aad
and
push
xchg
xor
mov
xchg
pop
lret
popf
push
push
push
stos
fs
stos
pop
xchg
mov
je
insl
ljmp
arpl
and
cmp
xchg
lods
adc
dec
push
or
in
mov
and
lcall
subl
pop
push
adc
cmpsb
inc
xor
xor
flds
es
cltd
mov
fwait
scas
xchg
mov
cmc
pop
scas
dec
mov
pop
mov
stos
dec
push
addr16
inc
inc
pop
js
mov
push
mov
and
das
jp
scas
or
dec
in
test
and
in
in
mov
xor
bound
cmpsl
push
jl
mov
inc
push
dec
stos
fwait
movsb
push
std
js
ds
inc
lcall
pop
aaa
fadd
sbb
lret
jnp
mov
leave
mov
dec
pop
inc
or
inc
xchg
sub
push
outsb
fnstcw
add
aad
sub
mov
sbbl
inc
dec
and
and
sti
dec
pop
dec
sub
popf
in
gs
int3
stos
ucomiss
push
xor
sub
mov
xor
push
cmpsb
dec
push
mov
ja
or
fimull
ret
xchg
lds
in
out
xchg
hlt
sahf
in
divb
pop
int
sti
sbbb
ss
mov
pop
xor
clc
int
xor
std
pop
pop
test
in
lahf
arpl
movsl
xchg
inc
adc
fprem
insl
ss
cs
xor
cmpsl
adc
scas
and
inc
lret
mov
xor
jnp
ljmp
mov
push
mov
dec
gs
cli
inc
mov
push
leave
and
push
fidivrs
scas
inc
stos
cmp
fst
dec
into
xchg
push
testb
or
adc
sub
jg
decl
dec
fldt
outsb
push
int3
shll
popa
mov
sbb
jnp
inc
dec
out
sbb
push
ljmp
dec
jp
int3
jg
outsl
sbbl
and
mov
mov
push
mov
sbbb
imul
test
xchg
out
sbb
test
push
dec
mov
pop
aad
lahf
stc
mov
je
push
jle
mov
scas
arpl
cmc
xchg
je
fcoms
popf
ljmp
mov
mov
into
pop
sub
or
sub
jmp
mov
cmp
sub
dec
pop
hlt
enter
mov
repnz
cwtl
and
fadds
or
jl
adcl
or
mov
mov
inc
lods
loope
out
out
scas
sbb
push
lods
imul
fs
xor
cld
jp
or
rolb
push
or
daa
or
adcb
cmp
repz
lahf
add
push
inc
cmp
dec
or
jmp
pop
xchg
pop
pusha
lock
adc
fsubl
outsb
into
jp
rorl
repz
mov
cld
mov
outsb
sub
mov
or
sub
lret
lea
rorl
dec
push
jbe
outsl
xchg
adc
pop
xlat
insb
sub
sub
cwtl
lahf
xor
jno
pop
dec
cmpsb
lods
loope
repnz
dec
ds
les
pop
in
sbb
inc
jo
jo
xlat
mov
mov
fisttpll
dec
aad
and
stc
mov
add
lods
test
cmc
mov
cltd
mov
mov
aad
adc
stc
cwtl
insb
mov
gs
sbb
jmp
bswap
jb
inc
mov
xor
sub
inc
gs
add
xchg
adcl
in
ss
sbbl
xor
and
mov
mov
enter
xor
loope
divl
push
sbbb
scas
cmpsl
fisubl
pushf
adc
xchg
adc
int3
sub
cmp
aas
pop
sbb
aam
call
out
sti
cmp
pop
icebp
xor
lret
mov
jae
fbld
xchg
push
ds
add
gs
std
push
aad
sahf
ja
loope
leave
add
fistpl
adc
pusha
icebp
sti
push
jg
pop
and
jb
jge
test
test
adc
cltd
mov
adcb
mov
cmp
push
and
mov
mov
mov
xchg
lret
neg
es
jae
mov
out
mov
sbb
add
leave
fisttps
sub
daa
repz
xchg
xlat
rcl
lahf
sub
nop
xchg
or
in
mov
pop
xchg
or
int3
sahf
imul
fsubrl
popa
lds
test
pop
and
pop
cmpsb
pop
jo
mov
mov
sub
jl
icebp
sarb
ret
lods
arpl
fisttpl
and
mov
daa
daa
je
or
push
insb
mov
cmc
daa
std
repz
loop
or
sbb
sbb
pop
pop
fcomps
mov
sahf
pop
or
mov
push
jo
push
mov
push
add
pop
loope
roll
sbb
sbb
or
imul
iret
cwtl
ds
xchg
in
jg
ljmp
push
in
xchg
lods
popf
es
or
in
out
ds
cwtl
arpl
mov
idivb
mov
les
cld
shrl
jns
sub
lret
xchg
into
sub
fs
and
or
jbe
subb
mov
dec
mov
xor
sub
ficoml
mov
ret
imul
add
ret
push
pop
hlt
aam
cwtl
cld
xchg
push
sub
xchg
adc
dec
imul
int3
out
js
popf
nop
inc
adc
pop
ss
jmp
enter
std
shll
loope
int3
aas
push
push
popf
and
dec
call
push
jb
les
rcr
roll
roll
popf
mov
mov
addb
scas
sti
out
loopew
mov
pop
leave
dec
sub
ror
mov
mov
ret
sub
inc
cld
lret
into
jp
das
rcrl
out
sub
popf
push
pop
js
bound
out
inc
es
iret
xor
add
push
sbb
pop
lahf
cmp
jmp
pop
jbe
mov
mov
lea
adc
sbb
mov
aaa
ja
inc
pusha
mov
dec
mov
jecxz
pusha
dec
jns
push
or
xchg
mul
dec
daa
out
jns
inc
outsb
xor
and
cmp
sbb
das
ljmp
mov
iret
or
mov
or
sub
nop
xor
sub
mov
popf
jge
je
lahf
fnsave
cmp
xchg
loopne
sub
cld
fwait
inc
mov
iret
and
and
popa
sysexit
pop
or
rcl
cmc
out
lds
and
or
pop
retw
cwtl
rorl
sbb
add
dec
lret
scas
adc
notl
and
fs
loope
leave
out
inc
fwait
mov
sub
test
clc
cltd
adc
pop
data16
les
loope
push
mov
mov
xor
pop
jnp
xchg
imul
add
pop
repz
xchg
push
imul
cmp
negb
pop
mov
ljmp
sti
mov
sub
xchg
rorl
push
and
imul
pop
in
and
shlb
pop
sahf
jno
pop
and
lret
and
negl
push
fwait
iret
jle
mov
dec
mov
fcoml
jne
daa
or
pop
pusha
stos
test
cmc
aam
xrelease
shrb
push
xchg
pushf
add
nop
or
lea
xor
push
xchg
stos
fists
xorl
scas
sub
jmp
mov
aam
loope
and
aam
pop
dec
shl
push
addr16
mov
mov
sbb
fnsave
fs
jecxz
sub
mov
xor
mov
mov
pop
dec
mov
inc
adc
cmpsl
inc
nop
testl
es
ret
loope
push
inc
add
rcrl
cwtl
mov
adc
xor
jg
movsl
mov
dec
clc
lock
ja
std
sub
movsb
fst
adc
loopne
lahf
sub
mov
repnz
xchg
stc
imul
stos
lock
or
lods
ret
cwtl
arpl
pop
sti
push
out
rcll
lahf
sbb
int3
jg
cwtl
cmp
and
adc
in
in
jecxz
pop
mov
adc
xchg
xchg
add
xchg
cmp
push
hlt
xchg
or
dec
fadds
cwtl
test
xchg
mov
jg
fst
mov
jb
mov
int3
into
xor
jb
js
sub
push
dec
loopne
into
mov
xor
subl
outsl
jmp
xor
sahf
lret
fiadds
and
xor
inc
loop
lea
and
push
sub
js
mov
pop
lcall
xchg
inc
aam
je
call
push
jge
sub
sub
mov
cmp
rclb
inc
dec
inc
fisttps
sub
or
arpl
xchg
lret
shrl
btr
inc
sbb
mov
push
xchg
testl
popl
popf
xlat
add
or
cs
ret
bound
jae
and
into
testb
adc
pusha
data16
scas
scas
xor
mov
inc
dec
lock
test
push
xchg
dec
test
mov
outsb
push
sbb
aad
jns
dec
sub
popa
sahf
test
mov
mov
pop
mov
pop
out
and
pop
out
or
mov
fildll
push
dec
sbb
sbb
leave
idivb
ror
lret
push
pop
addr16
repz
sub
mov
adc
push
dec
imul
mov
jo
sub
arpl
mov
adc
cltd
les
add
lahf
sbb
test
cli
insw
sbb
movsl
arpl
lds
jge
daa
imul
movsl
mov
cwtl
sub
sbb
mov
sti
mov
sbb
dec
inc
lret
movsl
mov
push
scas
adc
inc
mov
add
out
sbb
mov
sbb
jl
xchg
pop
cwtl
vpmovsxwd
in
and
xchg
lret
push
arpl
or
xchg
mov
aam
fdivs
notb
test
out
or
jp
rorl
sahf
enter
add
add
xchg
das
or
gs
movl
fisubl
sbb
aas
xor
mov
xor
sbb
add
ljmp
into
xor
imull
xchg
push
inc
pop
int3
stc
js
decl
jae
xor
les
scas
or
cltd
pop
aaa
xchg
sbb
sbb
pop
pop
test
mov
in
xchg
loopne
pop
mov
and
dec
add
sub
lea
or
sub
or
cwtl
bound
mov
adc
jno
push
xchg
pop
imul
les
jns
mov
xor
outsl
ret
frstor
cmc
or
adc
mov
jl
dec
mov
sbb
xlat
call
push
mov
jg
mov
jle
adc
aad
ret
jnp
inc
lock
push
dec
jecxz
or
stos
outsb
xchg
or
lods
ss
lea
sub
push
mov
data16
test
xchg
aas
fst
inc
ja
push
sbb
sti
shlb
xchg
mov
lock
mov
inc
sbb
and
lock
cmp
fistpl
lods
out
fiaddl
xchg
jo
pop
call
inc
insb
loopne
and
sahf
js
jmp
add
and
scas
fimull
in
hlt
les
adc
cli
xor
dec
aad
dec
fnstsw
mov
adc
repnz
sub
out
in
fwait
repz
adc
push
mov
xor
lods
hlt
pop
pop
sbb
jne
out
mov
aad
xor
dec
cltd
loope
out
popf
adc
jbe
push
mov
pop
pop
mov
mov
popa
jmp
push
lock
mov
xchg
ljmp
stos
rcrb
xor
in
mov
lret
test
nop
jb
dec
push
sbb
inc
popf
jbe
adc
test
mov
das
jns
movsb
aad
lret
lock
mov
popa
repnz
not
pop
test
xor
test
mov
pcmpgtb
les
fsubl
mov
xor
sub
in
fwait
mov
xchg
mov
test
push
les
mov
pop
sub
sub
inc
iret
movsl
cmp
popa
cmp
and
adc
outsb
repz
enter
cmp
lahf
clc
push
push
jnp
cld
jae
iret
inc
xchg
cmp
leave
pop
or
dec
jge
mov
in
stos
inc
or
mov
jmp
mov
movsl
subl
js
dec
mov
jno
insb
cmp
test
sub
cmpl
or
fdivl
sub
lock
push
fsubrs
lahf
cmp
cmc
stc
out
jp
stos
sbb
sbb
xchg
pusha
pop
add
repnz
mov
ja
popa
test
dec
and
roll
xchg
mov
fldt
inc
or
cmp
aam
xor
ds
mov
paddw
dec
xchg
lds
testb
lock
mov
adc
mov
pop
xchg
int
sub
cld
jp
adc
sub
xor
ljmp
mov
rolb
rclb
shl
fsubp
jo
clc
or
in
mov
jp
lahf
mov
jg
pop
pop
les
push
xor
or
and
jns,pt
out
cmp
das
add
mov
mov
sbb
imul
cmp
aas
pop
std
iret
pop
mov
test
push
lds
fisubl
das
lea
jbe
mov
aam
or
pop
ds
mov
arpl
out
xchg
out
imul
and
dec
shl
jb
out
cmp
xchg
insb
lret
lret
push
arpl
adc
xchg
adc
sbb
jb
pop
out
inc
add
int
and
jmp
mov
sahf
mov
dec
and
int
mov
jmp
cmpsb
dec
cmp
mov
xchg
jns
into
adc
cmp
test
xchg
aad
imul
imul
cld
adc
or
into
into
sbb
mov
pop
cld
out
std
pusha
loop
shlb
outsl
sbb
decb
jge
push
jb
gs
and
cli
aad
pushf
jnp
enter
movsl
mov
lods
fs
mov
mov
sub
pop
xor
or
pop
xchg
pusha
cltd
sub
iret
jnp
mov
pop
cwtl
ja
scas
sbb
mov
or
arpl
pop
out
mov
or
jecxz
les
cmc
sarb
sbb
jne
xor
jno
pop
dec
stc
xchg
pop
int
sbb
call
pop
aad
lock
mov
mov
adc
faddl
adc
outsl
cld
imulb
inc
add
insl
mov
cmc
gs
jne
ret
add
ffreep
adc
mov
rclb
jne
inc
jmp
xor
mov
movsl
sbb
mov
lret
xchg
pusha
and
push
xchg
xor
test
sbb
adc
jno
decb
out
push
int3
popa
sub
scas
roll
arpl
mov
push
inc
stc
lret
dec
jae
ret
sbb
mov
test
bound
test
das
xor
ret
aaa
push
pop
push
cwtl
adc
lock
imul
into
ret
std
xor
iret
sub
sarb
sbb
xor
pop
xor
imul
push
testb
mov
idivb
jge
push
push
xor
out
add
jl
sub
in
inc
movsl
xor
pop
jp
std
or
adc
jmp
adc
jle
sbbl
clc
fwait
imul
movsl
and
loope
les
sub
imulb
stc
cld
std
adc
cmp
xor
stc
lock
pusha
xchg
push
cltd
and
cwtl
jno
bound
movsl
cli
jae
jbe
lea
xchg
lds
push
adc
in
adc
push
sbb
dec
fbstp
sbb
jo
jnp
xor
mov
mov
mov
popa
dec
xorl
xor
jl
push
adcb
lods
sbbb
out
orl
ss
lahf
loopne
adc
cmp
add
popa
push
sub
scas
xor
push
sbb
mov
jmp
ss
push
cltd
adc
out
adc
adc
add
nop
add
push
int3
leave
fmuls
js
cmp
push
mov
mov
push
add
call
or
bound
in
sbb
testl
scas
dec
mov
stos
mov
shrl
adc
bound
outsb
fbstp
xchg
add
in
or
leave
and
adc
notb
test
dec
dec
imul
test
stc
xchg
push
lods
sub
pushf
cmp
repnz
test
add
fbld
call
bound
mov
insb
fs
bound
pop
jle
sub
push
xchg
nop
or
and
aas
es
xor
jo
out
mov
scas
mov
insl
sbb
repz
loope
mov
out
std
dec
insb
stos
xor
pop
aam
cmpsb
lea
xor
mov
sbb
ja
in
mov
test
fiaddl
dec
cmp
push
dec
test
jp
je
int
clc
imul
fldt
inc
loop
aaa
xchg
cltd
fildl
mov
rep
in
mov
adc
movsb
xor
lock
xorb
add
jmp
dec
sarb
hlt
mov
pop
sarl
repnz
or
mov
icebp
xor
add
movsb
xchg
and
std
mov
inc
pop
xchg
pop
mov
jnp
into
testl
mov
jp
lds
imul
clc
stos
mov
aas
enter
inc
scas
xchg
mov
outsb
rol
inc
or
sbb
adc
add
bound
in
lret
scas
push
fdivrs
adcl
jecxz
push
sbb
sub
cmpsb
out
inc
icebp
popf
cmpsl
inc
inc
mov
shrb
sbb
push
nop
or
adc
popf
gs
adc
fs
sbb
dec
pop
and
fcomps
or
push
lea
mov
pop
stos
js
int3
fisubs
and
mov
cwtl
xchg
int
jbe
mov
push
cmc
mov
movsb
gs
mov
add
inc
mov
rcr
cltd
cmp
sub
cmpsb
enter
mov
ds
and
fcoml
mov
lods
sub
cmp
pop
aad
dec
fisttps
xor
out
jp
cld
mov
int
mov
scas
call
cmc
loope
mov
ret
or
fdivl
push
lods
or
loopne
dec
push
mov
mov
and
or
out
jmp
pop
movsl
and
jge
and
inc
mov
lods
add
stos
xchg
orl
mov
add
bnd
mov
and
into
dec
jns
lock
add
je
in
jge
pop
mov
jb
mov
dec
aas
mov
cmp
jbe
mov
inc
lcall
ljmp
aaa
push
or
push
push
jbe
arpl
inc
inc
nop
xor
cmp
or
jmp
loop
adc
stc
orb
cs
mov
push
xchg
in
fildl
pop
sbb
push
mov
test
jl
push
dec
xor
inc
jns
lret
mov
push
adc
insb
push
cmpsb
les
xor
xchg
mov
and
inc
stc
sub
push
cwtl
adc
pop
gs
dec
ja
xor
out
outsl
xchg
mov
mov
sub
mul
out
xchg
lret
jge
daa
test
xor
push
clc
scas
das
lock
pop
or
enter
jmp
jle
subl
stos
push
aas
bound
cmp
dec
jns
addl
leave
inc
jl
pop
push
call
jno
fisttpll
dec
int
and
std
dec
adc
pop
pop
mov
gs
push
shl
sbb
loopne
scas
push
pop
jo
fcmovnb
je,pn
je
and
loop
mulb
jmp
sarb
cltd
fdivrs
cs
xchg
cs
jbe
xor
fmuls
xor
add
xchg
push
fdiv
xchg
dec
out
mov
mov
movsl
ljmp
cmp
mov
xor
arpl
pop
test
popa
push
push
jmp
imul
cmp
imul
pushf
push
daa
and
fimuls
inc
sub
mov
inc
rcrl
aam
xor
jle
push
dec
and
push
pop
adc
sbb
cmpsl
cs
dec
ds
or
sub
notb
sbb
daa
push
push
push
sahf
xor
cmp
in
sbb
xor
int
das
mov
imul
icebp
cmp
pusha
testb
xchg
aad
sub
xor
or
dec
sub
xchg
or
and
adc
ror
pop
in
and
nop
pop
sbb
fwait
js
repnz
dec
push
enter
fwait
cwtl
sbb
xchg
shl
or
cld
mov
or
stos
in
test
push
fdivr
jns
ss
in
pushf
in
not
rclb
in
insb
adc
add
loopne
pop
cs
or
or
push
int
testl
dec
ficompl
sub
addr16
mov
xor
mov
cmp
mov
add
inc
lds
repz
jae
lret
iret
xor
test
or
in
add
test
jp
mov
xchg
in
fidivrl
in
inc
pop
fdivs
push
mov
cmpsl
lds
fisubs
mov
mov
out
sti
lods
in
arpl
popa
pop
xor
push
xor
je
mov
fld
rolb
into
adc
js
insb
je
xor
cmp
out
adc
inc
mov
jnp
int3
xor
gs
outsb
inc
lods
mov
pop
fdivrl
or
inc
pop
push
mov
sbb
adc
fisttps
xor
cs
stc
push
lahf
aam
les
ja
mov
push
imul
js
pop
push
movsb
mov
repnz
out
mov
clc
mov
enter
in
das
test
mov
adc
adc
out
mov
jno
xor
mov
fyl2x
test
ret
jne
lea
or
shrl
int3
ljmp
jge
adc
push
inc
cmpsb
pushf
fisttps
inc
mov
push
add
adc
das
adc
jp
inc
pop
adc
push
mov
sbb
test
and
movsb
cmpsl
xlat
jb
mov
test
inc
mov
popf
mov
movq
out
mov
shlw
mov
outsl
xor
sub
mov
dec
aaa
fadd
jne
dec
pop
dec
xchg
xchg
lret
mov
jbe
das
outsl
mov
push
fmull
rolb
scas
or
fisubs
jae
xchg
mov
dec
jge
popa
pop
pop
in
sarl
adc
mov
pop
jge
add
test
push
adc
incl
data16
andl
mov
and
jae
push
pop
int
scas
fsubl
aaa
cltd
or
sub
icebp
add
out
test
call
or
xor
xchg
gs
mov
imul
ficompl
mov
dec
ljmp
push
add
push
fcomi
jae
push
pop
and
xchg
fstpt
cmp
into
fscale
add
mov
jp
addr16
xor
bound
inc
inc
dec
int
and
sbb
inc
mov
pop
pop
ljmp
add
xor
aam
out
pop
inc
lahf
pop
adc
mov
mov
xor
aaa
push
fimull
dec
pop
sbb
paddw
and
mov
jno
fiaddl
push
cmp
jns
push
pop
mov
add
and
es
mov
sti
xchg
xchg
hlt
lret
adc
into
clc
rorb
inc
fnsave
push
gs
adc
in
sbb
loopne
cmp
sahf
stos
jl
add
xchg
inc
in
jmp
mov
scas
xlat
inc
or
outsl
dec
pop
cwtl
roll
jno
cmpsl
les
lea
jecxz
popf
cmp
inc
push
cmp
dec
jle
mov
out
fs
das
inc
ss
mov
mov
cmp
stos
and
mov
mov
jp
test
out
popf
inc
bound
mov
loopne
mov
mov
xchg
xchg
xchg
adc
sub
mov
mov
push
and
or
mov
mov
lods
inc
lock
mov
push
cmpsl
stos
xor
out
mov
push
mov
or
ret
std
sbb
sub
adc
pop
or
outsl
fsubrs
repnz
cli
ljmp
out
cmp
ljmp
lock
ja
or
mov
jge
in
inc
pop
mov
and
out
sub
movsl
pop
mov
insl
ja
pop
repnz
fsubl
bound
xchg
xchg
and
xor
xchg
out
lret
stc
ret
subb
mov
sahf
mov
mov
enter
pop
xor
icebp
loope
shrl
gs
or
pop
or
lahf
jl
or
jl
test
pop
mov
lret
in
cmp
shlb
cltd
stos
hlt
in
inc
dec
xorb
into
push
push
imul
sub
loopne
mov
and
xchg
xor
mov
subl
jbe
inc
add
pushw
inc
subl
push
adc
es
aaa
fwait
icebp
dec
sti
xlat
popa
fxtract
shlb
xchg
mov
shrb
aam
clc
push
insb
out
or
fadd
fwait
push
or
test
adc
jle
push
jle
mov
mov
ss
imul
and
sub
mov
out
pop
testl
mov
iret
inc
dec
xchg
pop
in
dec
pop
sarl
dec
outsb
stc
sub
bound
ret
enter
sub
call
dec
mov
mov
jmp
jbe
cmpsb
scas
push
js
int
mov
pop
sti
loop
push
push
lock
inc
push
out
cltd
cltd
fwait
xor
push
inc
fcomps
jmp
aas
xor
mov
sar
pusha
popa
jecxz
dec
xor
dec
imul
mov
scas
gs
cmp
inc
add
xor
and
push
imul
add
pop
inc
xor
cmp
push
shll
fisubl
add
scas
fdivrl
xorb
add
adc
jo
test
push
xor
push
or
imul
imul
cmpsl
mov
outsb
test
xor
std
push
or
rorl
xor
insl
jge
lock
adc
mov
mov
call
xorb
lods
dec
adc
lea
repz
push
lret
xchg
jns
xchg
cmp
inc
rolb
pushf
daa
idivb
aam
lea
push
cltd
into
inc
in
cmp
rcl
test
adc
fcmove
je
adc
dec
push
subb
lret
loopne
cmpsb
sbb
sbb
fdecstp
adc
mov
push
clc
adc
mov
mov
and
jl
fnstenv
test
inc
pop
jg
mov
imul
sub
cltd
mov
sbb
or
out
mov
mov
incl
into
push
shll
xchg
sub
cwtl
jl
rorl
lret
lods
mov
pop
mov
popa
mov
aas
dec
and
lret
test
icebp
movsl
and
jg
inc
adc
add
dec
mov
or
and
ja
enter
xlat
sti
mov
add
jbe
xchg
fcmovne
mov
lcall
add
mov
ret
sub
lret
data16
xor
jbe
and
inc
inc
mov
jb
push
jmp
sbb
mov
scas
adc
sbbl
jle
loopne
test
test
les
aad
lret
out
out
call
mov
add
jle
cld
or
jae
test
jg
dec
lds
aas
mov
shlb
js
push
cmp
push
inc
mov
xor
testl
add
xchg
outsl
cmp
push
lods
sub
es
cli
add
mov
imull
push
sub
mov
pop
fnstcw
dec
adc
fwait
aad
mov
popf
lahf
and
sub
lods
push
test
mov
pop
mov
xor
push
inc
arpl
xor
jmp
pop
push
in
dec
mov
inc
adc
mov
and
sahf
adc
or
pop
gs
bound
push
rorb
out
stos
mov
mov
add
addl
sarl
dec
lods
cmc
imul
lret
cmp
cmp
push
femms
shlb
xchg
cs
xor
cld
adc
rcrb
add
imul
jge
or
sub
push
inc
les
push
fstpt
stc
xchg
or
push
arpl
ja
xchg
inc
add
hlt
inc
movsb
lret
int
arpl
pop
fistps
and
mov
sub
orb
push
movsb
fwait
xor
inc
and
pop
xchg
scas
dec
fistl
call
out
popl
jecxz
loop
sbb
fstl
and
imul
mov
push
test
xchg
pusha
fwait
loop
xchg
lds
test
pop
adc
lods
sbb
sahf
inc
iret
les
cwtl
mov
out
ficoml
mov
roll
into
dec
or
pop
xchg
jb
pop
int
cwtl
imul
addr16
int
cmp
mov
jmp
ss
imul
pop
jle
push
pop
aad
shl
or
mov
in
sub
push
lods
xchg
jbe
popf
pop
pop
out
xor
test
xchg
add
lahf
inc
adc
jns
lea
adc
lret
push
ja
xchg
test
jne
shll
popf
or
push
mov
out
jae
std
loope
add
dec
push
orl
inc
mov
mov
insl
push
sti
sbb
dec
les
jnp
mov
mov
scas
data16
mov
pop
and
sbb
clc
dec
in
jl
push
cmp
outsl
and
pop
push
outsl
jp
leave
xchg
ljmp
sub
xchg
or
lods
pop
rclb
add
sbb
jp
std
cltd
aas
lea
push
push
fbld
jnp
mov
loope
repnz
out
sub
fstps
xchg
xchg
pop
notb
ret
leave
xchg
pop
cmp
and
rcrb
push
outsl
mov
test
lret
int
add
loope
shll
xorb
dec
mov
aas
adc
lahf
mov
jl
inc
pop
dec
and
xchg
aas
cmpsb
andl
sub
pushf
lods
mov
push
subl
arpl
imul
decl
sarb
add
or
fiadds
int
xchg
sub
in
add
inc
mov
aas
xlat
xor
adc
ret
incb
jmp
pushf
daa
push
sub
push
or
lcall
mov
fildl
inc
outsb
into
adc
cmc
insb
sub
jnp
fcmovbe
popf
xor
test
test
insl
inc
ss
ficomps
pop
rolb
sub
mov
or
cmpsb
mov
and
sbb
cmp
add
dec
in
addr16
pop
les
inc
push
or
jbe
ljmp
mov
jne
xor
mov
insl
mov
jae
cmp
push
pop
lret
fldt
xchg
ljmp
lock
sbb
dec
imul
ret
jne
jbe
sbb
and
es
mov
movl
popa
outsl
jg
ja
scas
shl
sub
jbe
pop
cmpsb
mov
cmpsl
int
mov
adc
push
adc
outsb
outsb
and
cs
cmp
lods
das
lcall
stos
or
mov
mov
or
lds
sbb
in
clc
push
cmp
dec
lods
enter
mov
inc
xchg
leave
mov
mov
jae
mov
popf
into
outsb
cmp
in
pusha
fbld
or
mov
sbb
sahf
cltd
push
scas
rolb
mov
mov
mov
inc
inc
mov
popf
inc
xor
sbb
es
decb
and
jle
mov
push
xchg
cwtl
imul
das
out
cmp
pop
cmp
push
mov
and
fnstsw
pop
divl
setbe
mov
nop
out
fsub
xor
aad
into
rcr
cltd
jns
cmp
fldl
insl
rcrb
iret
mov
cmovb
fistl
cltd
inc
sub
adc
or
je
inc
andb
pop
andl
lea
push
movsl
push
inc
lahf
push
cmp
jmp
fwait
in
cmp
js
iret
cmp
jae
mov
pusha
mov
push
ret
arpl
cmp
sbb
cmpl
hlt
pop
xor
push
pop
dec
cltd
or
loopne
rorl
stos
pop
inc
iret
popf
cmp
jns
rol
fsubs
scas
sub
mov
push
shl
sti
or
cmc
lahf
mov
xchg
mov
test
int3
addr16
aam
clc
push
xor
push
push
sbb
sar
lret
aaa
dec
test
outsl
insb
clc
nop
test
inc
push
popf
out
mov
scas
push
lea
add
or
xchg
ja
loop
clc
adc
xchg
cmpsl
dec
mov
cmp
inc
ret
mov
sahf
xchg
xorl
xchg
cmpb
jns
test
mov
and
subl
push
test
test
imul
mov
mov
push
or
fisubrs
in
in
cmp
pop
mov
push
dec
gs
sbb
jge
dec
and
clc
fisubrl
add
inc
or
mov
mov
shrl
jmp
in
test
or
pop
fisubl
mov
add
out
addr16
pop
jg
dec
ss
in
insb
push
mov
outsb
xchg
popa
aam
jb
data16
imul
and
negl
push
or
or
jo
xor
cld
xor
aam
jno
and
nop
lret
stos
das
in
cmpb
cmp
insl
dec
das
inc
stc
sbb
cmp
dec
xchg
inc
in
out
dec
inc
xchg
filds
fs
xlat
cmp
ret
mov
mov
sub
nop
repnz
mov
sub
aam
sub
adc
cld
xchg
cmp
je
lock
dec
and
fldl2e
shrl
add
xor
pop
rcl
mov
cmp
ljmp
pop
mov
pop
shl
inc
adc
and
inc
movsl
loope
int3
jle
mov
in
or
in
or
push
dec
mov
push
mov
loopne
test
ret
or
std
lret
jmp
test
dec
xor
sbb
lds
or
lds
xor
mov
mov
repnz
ret
push
pop
xchg
pusha
adc
rclb
push
insb
mov
xor
mov
test
shlb
push
daa
pop
cs
pusha
cmp
xchg
add
mov
cmp
and
lret
sub
data16
sbb
sarl
and
pop
fisttpll
sub
sbb
adc
pusha
xchg
fidivrl
loope
push
jge
lods
scas
aad
or
andl
aas
sub
inc
fdivl
jle
mov
push
sbb
and
decb
mov
scas
dec
lock
imul
ja
sbb
lahf
sbb
call
push
cmp
mov
lock
dec
jg
stos
or
push
js
outsb
fmuls
enter
cld
lds
push
pushw
pop
jecxz
cmp
adc
fcomi
sti
add
pop
add
cmpsb
jmp
and
sarb
jb
or
pop
fistpl
das
cs
insl
jnp
repnz
xor
shrl
enter
es
in
cmp
xchg
andb
cli
roll
adc
or
shrl
push
divb
icebp
adc
pop
lods
cmc
out
or
or
stos
cmp
sbb
pcmpgtw
les
stos
sub
xor
shl
scas
xlat
inc
addb
lods
filds
cmpsl
jg
fbstp
enter
loopw
push
fldpi
push
mov
cmpsl
pop
cmpsb
cmpsb
addr16
mov
pop
shlb
jge
mov
aad
enter
sbb
jmp
mov
xchg
ret
and
xlat
xlat
sub
jbe
mov
dec
jmp
es
mov
mov
add
sbb
mov
mov
in
loop
xor
jg
adc
aam
mov
int3
sbb
sahf
out
popa
add
popa
fsubp
pxor
push
inc
sbb
mov
or
xor
mov
pop
mov
clc
sahf
call
or
movl
hlt
jmp
inc
fbstp
push
jo
out
icebp
jl
sub
xchg
lahf
xchg
add
data16
stc
ficoml
dec
xchg
popf
pop
std
or
or
push
insl
pop
sti
sti
lret
roll
shrl
outsl
push
fistl
cltd
loop
ja
icebp
pop
fldl
adc
loope
nop
jg
lea
sub
negl
add
icebp
mov
fnstcw
pop
js
imul
fprem1
dec
in
test
pop
mov
dec
ror
cmpsl
gs
or
push
inc
sbb
cmp
xchg
xor
xchg
inc
movsl
jne
mov
dec
xchg
and
mov
xchg
test
mov
test
and
aaa
mov
cs
loope
mov
mov
push
inc
adc
xchg
aaa
pop
nop
stos
push
pop
pop
dec
jecxz
adc
scas
sahf
mov
test
add
fstl
add
into
pop
lret
xchg
std
test
xor
stos
outsb
jbe
jnp
add
and
gs
sbb
push
jle
lock
daa
xchg
mov
lds
jne
outsb
push
push
push
dec
mov
mov
or
int3
adc
imul
lret
dec
push
rcll
push
pop
jbe
frstor
dec
jg
dec
xlat
testl
sti
cltd
iret
jg
lret
dec
mov
std
cli
ja
mov
mov
adc
jno
cwtl
cmp
or
xchg
push
cwtl
loop
repz
push
fisubl
fistpll
or
push
pop
sarb
cld
das
insb
cmp
leave
push
ljmp
dec
ficompl
imul
lahf
aaa
outsl
mov
xchg
fdivrl
mov
sub
sbb
daa
stc
movsl
stos
in
test
push
adc
sub
and
add
iret
enter
sbb
xchg
mov
xor
push
inc
pop
dec
stos
mov
rdtsc
fildll
ficomps
rcrl
pop
cmp
addr16
popf
insl
xchg
ret
stc
jns
leave
sbb
mov
mov
lcall
repnz
push
daa
dec
xor
fs
dec
add
mov
aas
sbb
hlt
xchg
push
ret
push
subb
xchg
das
push
notl
mov
inc
scas
mov
jp
fldl2e
push
aas
mov
test
sbb
xchg
adc
mov
addr16
sbb
dec
aad
fidivrs
mov
test
pop
outsl
ljmp
inc
sub
mov
lods
xor
mov
lret
test
pop
xlat
ror
and
insb
movsb
mov
add
aam
push
scas
fidivrl
movsb
mov
pop
push
inc
sarl
cmpsl
pop
mov
fstpt
cmp
repnz
mov
mov
stos
jg
cli
scas
push
or
mov
scas
lods
jne
sbb
mov
mov
lret
pusha
jg
add
push
arpl
fidivs
mov
or
insl
shl
loope
rorl
iret
scas
sub
test
in
dec
rol
rcr
repnz
or
fwait
ss
sti
jo
adc
xchg
push
mov
pop
sbb
aas
adc
in
mov
lcall
mov
lods
test
lret
lds
in
mov
pop
test
jg
movl
and
jae
mov
enter
jp
data16
inc
cld
sbb
mov
popa
outsb
cmp
loope
cli
push
mov
or
cmp
ss
leave
ror
pop
cwtl
lret
dec
cmp
mov
or
sarl
dec
jno
movsb
daa
or
cmp
push
test
push
xor
out
cli
and
jnp
std
inc
xor
push
mov
xor
in
lret
sbbl
xlat
cmp
add
mulb
ds
xchg
adc
push
cmp
cltd
xchg
mov
test
xor
xchg
cmp
inc
loope
push
and
cld
cmp
or
cli
push
leave
ss
es
adc
cmp
stc
adc
or
dec
sar
mov
xchg
jns
jb
push
mov
imul
addl
xchg
mov
adc
mov
xchg
jl
stc
or
aam
stc
pop
pop
stos
inc
adc
push
lahf
repz
rolb
or
outsb
clc
adc
mov
loop
test
lcall
sub
rcrl
cmp
popf
pop
and
loopne
stc
sub
sub
shll
out
and
andl
sbb
and
push
mov
hlt
leave
divl
push
sbb
jno
mov
aam
popf
fucom
std
adc
pusha
add
pop
push
cs
mov
pusha
adc
mov
mov
fnstsw
xor
dec
xor
or
adc
xchg
xor
movsl
push
out
mov
shrl
fcmovnu
cmp
out
fwait
shlb
outsb
mov
les
mov
subb
dec
mov
pop
xor
add
push
ss
push
fs
insl
dec
xor
lds
sbb
mov
out
jg
lcall
xchg
fwait
addb
pusha
loope
push
andb
sub
fdivl
inc
cwtl
iret
mov
pop
ss
lcall
xchg
cwtl
xchg
bound
push
lret
push
sub
shlb
lcall
mov
add
mov
push
sub
mov
mov
mov
mov
mov
gs
pop
iret
mov
cltd
jl
push
sarl
lcall
jecxz
mov
mov
loope
push
mov
mov
repz
mov
mov
call
jae
rcr
and
or
in
jnp
lods
loopne
bound
movsl
cwtl
lods
mov
mov
insb
mov
push
dec
daa
je
cmp
cmpsb
aas
clc
in
sahf
pop
sub
jb
loop
in
daa
rcll
cmp
test
mov
push
clc
push
push
int3
stos
inc
dec
or
and
out
insb
inc
add
sbb
jns
iret
ds
std
ds
cs
xor
fisubrl
sub
out
sbb
cmp
push
inc
ret
lock
pop
push
and
xor
loope
mov
outsl
xor
inc
mov
dec
push
sub
mov
jmp
pop
icebp
je
mov
sarl
sub
rolb
cltd
jne
out
rcrl
adc
pop
addr16
loop
ss
notb
std
cmp
pop
in
xorl
cmp
and
pop
fstps
add
adc
je
inc
push
mov
bound
das
cwtl
rep
cmpsl
pop
mov
sbb
test
rcrl
fwait
aad
xor
mov
int3
test
push
fidivs
loopne
mov
adcl
aaa
gs
cmp
mov
pop
popa
mov
and
clc
into
rorb
movsl
mov
xor
cltd
sbb
leave
ret
and
inc
or
adc
add
adc
in
das
into
lea
mov
mov
pusha
push
sbb
xchg
aas
adc
stos
add
xor
add
setl
in
and
aam
push
jae
ret
or
jmp
jmp
inc
or
mov
mov
fimuls
stc
sub
pop
sbb
bnd
jecxz
fimull
clc
fisubs
cmpl
stc
cld
add
mov
repz
mov
jb
imul
adc
imul
cltd
outsl
gs
or
bound
sbb
push
movsb
add
jb
addr16
jecxz
xchg
xor
test
lock
cmpsl
outsb
in
mov
push
aad
movsl
xor
xor
aam
and
sahf
pop
ficompl
out
pop
arpl
scas
subl
pop
cmp
jne
add
lcall
loopne
std
push
jmp
out
fs
pop
loopne
js
movsl
xchg
kaddb
int
xlat
mov
enter
cmpsl
jmp
fidivs
mov
mov
aaa
adc
push
cwtl
icebp
mov
cmp
and
mov
je
jp
clc
aaa
xchg
dec
arpl
or
jp
imul
gs
jns
mov
add
mov
aam
mov
ljmp
pop
jb
jb
call
mov
into
in
lahf
xchg
jle
sbb
mov
fwait
bound
jge
outsb
and
in
cli
push
fcomps
pushf
push
repnz
push
insb
push
imul
gs
sti
xor
je
scas
xchg
aaa
test
repnz
sub
mov
xor
xchg
push
hlt
cld
add
adc
push
dec
xor
shrl
jg
sub
pop
cmp
stc
pop
inc
push
je
stc
xor
sbb
cmp
cmpsl
ljmp
mov
push
ret
imul
divb
jge
call
popa
adc
imul
enter
mov
outsl
push
and
xchg
lods
mov
xchg
jns
push
test
adc
xorl
adc
leave
cs
mov
dec
adc
out
inc
cltd
xor
and
divb
enter
fs
lcall
inc
arpl
sbb
repz
leave
pop
in
ret
push
in
adcb
mov
pusha
xchg
add
push
sbb
add
testb
pop
repnz
dec
push
aad
xchg
mov
lods
cmpsl
jp
xor
lea
jo
jecxz
and
fsub
test
xor
enter
imul
cmp
in
fiaddl
cli
mov
ljmp
outsb
stc
fbstp
or
xor
cld
mov
sub
je
adc
fucomp
mov
inc
dec
rcll
das
jno
ss
sbbb
cmpsb
jle
sub
jl
out
mov
push
xchg
xor
imul
stos
pop
aas
into
bound
in
aad
jno
js
or
cwtl
jns
xchg
fldl
mov
mul
jp
dec
scas
ds
xchg
jge
fs
lcall
and
clc
push
ss
mov
in
mov
cmp
loope
sbb
mov
mov
mov
jo
cmpsl
pop
loopne
insl
ror
jecxz
mov
or
push
iret
adc
daa
ret
pop
xor
mov
mov
ret
scas
movsb
inc
lods
mov
pop
inc
cmp
mov
cmp
inc
add
xor
lea
fucomp
mov
test
dec
adc
cmp
or
mov
and
mov
stos
sub
ja
adc
cwtl
cmp
mov
inc
lahf
push
adc
and
out
mov
push
sbb
cmp
outsl
lret
in
mov
aam
xchg
dec
mov
shll
sub
adc
fwait
dec
test
jl
fildll
or
ljmp
pop
cmpsl
adc
icebp
and
mov
pop
inc
adc
outsb
xor
or
and
cmc
insl
pop
aam
addl
shrl
ret
dec
or
sbb
sub
inc
addr16
lods
mov
std
push
mov
adc
mov
int
push
jbe
xchg
mov
push
sub
and
sbb
insb
or
jne
and
int
lcall
cltd
adc
mov
push
mov
loop
push
inc
mov
mov
enter
pop
push
or
mov
xchg
sub
pop
inc
mov
loopne
shrl
pop
push
scas
sbb
jns
cli
repnz
scas
es
cltd
pop
inc
shrl
mov
clc
pop
and
lods
rcrb
pop
jge
mov
in
push
push
xchg
xorps
faddl
addb
gs
int3
mov
jmp
adc
mov
mov
enter
enter
arpl
lcall
repnz
into
scas
jbe
jl
lods
fnstenv
xlat
loopne
mov
ja
fistpll
div
stos
imul
adc
xor
dec
inc
mov
lea
pusha
mov
and
dec
ljmp
inc
xchg
mov
cltd
mov
push
mov
and
jnp
inc
push
cmp
mov
lret
pop
loop
sbb
sbb
xor
add
or
add
mov
sbb
cld
cmp
sbb
add
jmp
outsl
data16
arpl
in
or
pop
roll
daa
imull
xor
jmp
push
adcb
mov
xor
clc
aam
sahf
xchg
jnp
pop
insl
scas
and
cmp
cld
mov
sbb
sahf
or
out
or
or
std
push
and
adc
pop
jmp
jge
push
dec
and
fs
mov
adc
ljmp
cmc
sbb
call
pop
mov
and
rorb
push
addr16
scas
sahf
pop
arpl
xor
mov
mov
fwait
les
or
in
dec
les
xchg
xchg
mov
test
mov
addb
dec
loopne
push
sahf
insb
inc
sbb
add
lahf
xchg
ja
insl
adc
cmp
dec
lea
jae
push
adc
flds
hlt
rclb
sbb
or
ja
push
dec
ret
or
js
loop
jb
stos
in
leave
add
inc
dec
dec
jo
jb
mov
push
loop
jno
popf
dec
add
or
mov
cmp
mov
jl
icebp
ffreep
cwtl
aaa
into
clc
xor
notl
stos
scas
cmpl
sub
pop
in
or
pop
mov
rolb
scas
movsb
sub
fildll
orb
negb
int
xchg
cmpsl
adc
rorl
mov
push
cmpsl
pop
inc
push
and
mov
sub
filds
imul
ljmp
inc
int3
add
pop
cs
adc
sub
and
sbb
shlb
mov
aaa
jnp
pop
stos
mov
mov
add
mov
loop
popa
scas
out
mov
addl
xor
aam
cld
jno
shll
cli
inc
inc
pop
push
test
inc
cmpsb
add
adc
test
imul
cmpsb
pop
and
lds
iret
xor
cwtl
mov
and
mov
in
sub
hlt
and
aad
dec
pop
and
mov
lcall
add
add
xchg
and
cli
inc
fimull
push
aas
and
rcl
insl
repnz
mov
ss
inc
add
add
popf
mov
lcall
sub
in
cld
or
fadds
shl
sti
imulb
jp
shl
imul
cmp
dec
mov
adc
mov
shrb
test
maxps
xchg
call
in
insl
fs
ds
loope
fwait
jne
ljmp
and
lret
sub
shl
inc
push
cmp
mov
clc
push
and
cmp
xor
stos
xor
aas
sub
push
jb
aam
aad
in
enter
cli
bound
roll
pop
push
data16
lea
pop
in
cmpsb
sub
testb
clc
or
push
bound
popf
jecxz
mov
add
add
lods
xorb
and
cltd
testl
add
mov
mov
xorb
clc
movsb
and
push
xor
inc
add
pop
jb
cld
and
sbb
mov
mov
mov
sbb
cmp
pop
int3
push
add
jecxz
pop
cmp
inc
cmpsl
and
shr
notb
cmp
out
rcrb
cmpsl
lahf
add
cli
adc
cld
nop
mov
pop
sbb
push
daa
enter
mov
std
insb
adc
and
add
adc
loopne
mov
sbb
mov
mov
mov
cmp
cmc
sub
test
nop
jbe
add
outsl
insl
sub
sbb
inc
popa
jo
xchg
flds
stos
xorl
je
mov
push
int
int3
pop
scas
jb
or
enter
cmp
fdivrs
pop
fs
aaa
ret
mov
repz
test
stc
test
dec
stos
dec
outsb
fdiv
gs
mov
cmp
xchg
imul
daa
mov
sbb
push
push
in
sub
dec
fcmovnbe
je
into
stos
cmp
aad
inc
ret
lds
std
cwtl
jno
xor
fistpll
pop
test
xchg
xchg
lods
sbb
jne
imul
cmpsl
inc
sbb
lret
mov
lock
mov
scas
cli
and
nop
or
xor
adc
jns
shlb
mov
outsl
sub
add
adc
push
gs
das
mov
push
scas
lods
push
in
cmp
cmc
in
push
adcb
adc
negb
mov
cld
outsb
lret
jl
aam
or
ja
xor
mov
sbb
xor
stos
repnz
jecxz
inc
div
movhps
sub
jmp
ds
adc
pop
js
xor
mov
addr16
sti
ljmp
add
mov
push
xor
imul
movsl
dec
mov
xchg
lcall
test
pop
fwait
mov
out
or
add
sub
xor
jo
leave
push
aam
and
imulb
xchg
mov
sbb
lods
adc
cltd
push
arpl
pop
mov
cmpsb
lods
popf
out
mov
adc
cmpsl
cmc
iret
addr16
and
in
insl
xor
in
jge
lret
aam
arpl
push
insb
fnop
ret
and
sahf
into
or
jbe
lea
mov
xchg
cmpsb
inc
fadd
and
fmuls
pop
sbb
movsb
pop
xchg
inc
imul
div
inc
imul
stos
sbb
jl
outsb
es
fadd
lea
and
stos
andb
cmp
das
pop
sub
icebp
repnz
mov
and
aam
out
ret
dec
shrb
dec
mov
xorl
xor
mov
sub
ja
add
popf
xor
int3
scas
pop
call
es
ss
and
addr16
mov
repnz
aaa
and
cmp
xchg
cmp
pop
adc
lods
inc
and
mov
aaa
jl
in
aas
jo
fxch
inc
aaa
divb
or
cmc
inc
or
jno
inc
inc
or
arpl
cld
sbb
inc
mov
and
mov
xchg
in
ja
in
out
cmp
ret
mov
add
subb
fdivrs
cmpsl
inc
sbb
and
adc
xchg
cmp
lahf
jge
roll
ja
xchg
cli
jb
bound
push
fwait
dec
clc
imul
xchg
sub
ja
mov
lret
iret
sbb
fs
mov
inc
rorl
push
inc
dec
dec
cmp
insb
fcmovb
push
fnstcw
ds
xchg
lods
hlt
and
xchg
or
movsb
lret
push
lret
cmc
mov
popa
fsubs
daa
std
ljmp
xchg
jae
or
mov
push
fisttps
mov
push
jne
jo
js
sbb
adc
mov
imul
push
xor
fistps
sbb
push
cmpb
cmp
ss
jl
imul
pop
xchg
imul
neg
pop
pop
add
cmp
les
jnp
xchg
add
xlat
cld
popf
and
adc
jns
and
je
and
test
push
dec
dec
pop
pop
out
cmpsb
jg
cmpsb
loopne
stos
ret
test
pushf
dec
ffree
lock
mov
xlat
pop
aad
mov
leave
push
or
imul
std
push
push
lret
mov
scas
mov
cmpl
cmp
lea
xchg
ret
ljmp
or
xchg
popf
popf
xor
pop
fbld
jmp
cmpb
or
pop
push
fildl
mov
cmp
cs
mov
fildl
add
stc
rcrb
or
dec
adc
push
and
push
sub
inc
mov
stos
nop
sbb
test
call
inc
cmp
xlat
mov
jecxz
lahf
aas
add
mov
stos
negl
inc
aas
cmpsl
mov
dec
int3
jecxz
xor
arpl
mov
imul
push
sbb
ds
dec
clc
imul
sbb
dec
push
mov
psubsw
lret
addr16
test
dec
jo
xlat
in
lret
sbb
into
in
aam
push
xor
adc
fsubl
push
int3
inc
add
lock
pop
pop
bound
and
clc
mov
fnsave
sbb
ja
int
dec
and
dec
adc
push
cld
lahf
mov
repz
push
lcall
adc
in
add
orb
sti
fdivrs
lcall
adc
jne
pop
stos
das
pop
mov
cmp
sub
xor
jae
inc
ret
push
fisttps
push
and
cltd
enter
out
movsl
jle
cmp
stc
xchg
push
jle
imul
cltd
xor
scas
fwait
rcll
aad
cltd
push
or
fsts
push
and
mov
mov
into
adc
sarl
mov
outsl
leave
mov
adc
jns
and
fcompl
and
ret
fisttpl
int3
or
pop
icebp
cmp
add
fdivrl
pop
jns
xchg
insl
into
stos
xchg
enter
sub
mov
leave
push
inc
xchg
loop
jle
jp
jns
sub
mov
movsl
lods
sub
sub
nop
ret
and
pop
jl
inc
mov
inc
dec
jne
push
ret
push
mov
out
lods
adc
push
sub
sti
push
mov
call
stos
cli
mov
push
out
andl
sbb
fdivrl
leave
lcall
test
addr16
mov
pop
jecxz
push
and
jo
mov
add
sbb
jae
outsl
push
mov
xchg
xchg
push
mov
cli
add
and
pop
inc
push
jne
push
jbe
xchg
cwtl
in
lcall
push
sub
xchg
jne
mov
jno
lea
or
call
insb
inc
push
adcl
jge
imul
and
add
hlt
mov
mov
push
nop
loop
dec
ficompl
mov
mov
mov
dec
decb
stos
pop
mov
mov
mov
outsb
xor
mov
lcall
mov
dec
and
cmp
sub
pop
inc
out
dec
xor
xchg
push
cmp
fsubr
scas
mov
mov
or
sbb
sti
loope
addr16
nop
xor
inc
outsb
sub
fsubrs
cs
pop
jns
shll
jge
hlt
stos
mov
stos
int3
std
scas
cmpsl
mov
sti
sbb
sub
inc
sbb
or
cmp
adc
and
mov
mov
fcomps
sub
inc
aas
test
mov
cli
repz
jo
jb
stos
sub
pop
xor
arpl
or
out
pusha
fistpl
adc
jecxz
sbb
jo
dec
testb
subl
cmp
ret
into
out
lock
hlt
inc
jl
jae
ljmp
int
dec
das
icebp
mov
inc
dec
orb
cmpsl
mov
fdivr
jns
xchg
dec
xchg
mov
int3
push
fdivr
gs
adc
stos
insb
or
pop
xor
fwait
and
lret
sbb
aad
jo
mov
fwait
arpl
in
jge
es
aad
mov
mov
or
outsb
push
lock
lock
dec
inc
sub
mov
mov
aam
dec
mov
movsl
jecxz
sbb
test
mov
js
or
repz
mov
in
out
mov
sbbb
mov
mov
add
in
fists
lods
loopne
jge
fs
mov
mov
adc
stos
lock
sub
jl
test
xlat
loopne
xor
filds
insl
lods
mov
icebp
outsb
lcall
mov
sbb
cli
push
push
adc
lcall
in
mull
sub
into
add
repnz
aaa
popa
fcmovb
mov
xchg
mov
jmp
lahf
cmc
adc
int3
inc
test
dec
push
aaa
and
lret
cli
jb
sub
cmc
add
add
scas
add
adc
xcrypt-cfb
cmpsl
and
loop
cmc
fst
and
or
in
sbb
in
mov
xchg
sarl
xchg
adc
xor
int3
nop
sbb
xchg
xchg
ds
jae
stos
or
clc
loop
xor
lods
push
inc
out
and
lret
push
mov
sbb
lahf
mov
cwtl
jp
inc
jge
and
mov
mov
movb
mov
ds
mov
bound
xchg
and
negb
cmpsb
stos
cmpsb
jb
cmp
cmp
out
or
sbb
popf
shlb
mov
mov
xchg
add
test
jns
jb
test
dec
pop
loopne
pavgw
cli
lea
mov
pop
daa
mov
aam
xchg
daa
jo
shlb
fdivl
outsb
std
cmpsl
paddq
lea
imul
jl
cmp
dec
push
fisubrl
cwtl
insb
jmp
jge
rolb
int3
cmc
insb
mov
cmova
push
inc
dec
andb
sbb
sbb
sub
testl
xchg
push
pop
push
sbbl
fsubs
fdivp
lea
adc
jb
cmp
jp
out
std
clc
bound
movsb
add
or
aaa
xor
adc
test
sti
jecxz
cmpb
jo
dec
stc
cli
rclb
push
cltd
adc
clc
or
ss
icebp
stos
xchg
cmp
xchg
ja
jmp
lcall
pop
in
adc
call
lods
mov
mov
push
aas
aaa
int3
pop
in
xchg
pop
xchg
ljmp
ret
test
sub
inc
xorl
cmp
push
pop
sub
outsb
movsb
imull
push
xchg
or
lea
adc
pushl
jns
push
sub
in
push
add
mov
loopew
jg
repnz
int
mov
mov
fdivs
cwtl
lock
cmc
movsb
inc
mov
push
mov
or
mov
cmp
rorb
test
fisubl
lea
test
and
sbb
mov
les
stos
jo
les
out
dec
ss
testb
xchg
mov
shrb
sbb
mov
int
xchg
js
sbb
or
cmc
or
icebp
mov
add
dec
jne
cmp
cmp
and
pop
mov
sar
mov
mov
out
jmp
lret
pusha
mov
roll
cmpsb
aas
mov
or
sbb
lret
fcomp
xor
ljmp
adc
adc
shll
mov
clc
mov
aas
js
push
adc
add
dec
inc
xlat
mov
add
enter
or
test
enter
lods
fwait
rol
idivb
loop
lods
movl
js
call
mov
js
cwtl
mov
jbe
cs
add
add
stc
shrb
sbb
repnz
popa
pop
xchg
cmpsl
jp
pop
jns
and
cmpsb
imul
cmp
jne
scas
sub
lods
xor
xchg
inc
sahf
xor
xlat
sbb
mov
out
out
push
out
mov
enter
xchg
hlt
mov
mov
add
andb
insb
jg
push
out
jg
out
lret
xchg
jbe
ss
adc
adc
lahf
stc
xcrypt-cbc
cmpsl
push
mov
push
lret
xor
mov
xchg
stos
cmpsb
cltd
lahf
cli
shll
xchg
test
xchg
pushf
out
test
hlt
arpl
enter
loope
sahf
sub
add
ljmp
sbb
add
popa
push
je
shll
adc
add
jb
dec
xchg
cmp
pop
addr16
test
add
add
gs
xchg
aas
int
pop
test
test
and
shlb
ja
push
stos
sets
pop
cmp
scas
add
imul
test
xor
call
enter
sbb
es
jmp
popf
jge
cmp
jmp
mov
imul
pop
mov
add
int
sub
daa
xchg
rorb
nop
jp
push
mov
dec
out
pusha
cmpsl
pop
xor
sub
mov
dec
inc
push
aaa
xchg
inc
push
popa
ret
jns
mov
xor
mov
xor
mov
push
cmp
sbb
insb
addb
pop
out
push
push
cmp
and
stos
das
sub
pop
fists
adc
ret
popf
push
lock
xor
jbe
xchg
sub
sbb
mov
pusha
and
nop
mov
adc
sub
icebp
cmp
push
nop
movsb
lret
sti
sub
mov
pushf
aaa
inc
adc
arpl
outsl
cmp
loop
or
popl
repz
sbb
xchg
test
gs
mov
into
xchg
xchg
xchg
mov
outsl
mov
push
out
cmp
xor
int
lret
sbb
dec
call
jns
cmpsb
or
sub
xor
aaa
or
sub
pop
stos
fwait
add
and
xchg
push
mov
sar
mov
scas
sbb
aaa
fwait
loopne
cmpsl
add
jne
stc
cmp
insl
dec
mov
sbb
pop
pop
cmp
dec
xchg
mov
sub
gs
loop
shlb
sub
shll
andl
and
inc
mov
in
mov
loope
and
out
insl
addl
add
push
aas
fwait
repnz
pop
jl
push
mov
pop
dec
divb
pop
lock
xchg
push
mov
fs
stos
xchg
and
loope
xchg
and
bound
ficomps
test
hlt
xor
pushf
xchg
addr16
inc
mov
xchg
dec
outsb
mov
mov
nop
je
inc
out
sbb
cmpsb
xchg
cmc
mov
cmpsl
repnz
rolb
xchg
add
pop
push
test
fldenv
inc
and
ja
sub
mov
lods
cmc
std
jp
sbb
dec
aas
clc
mov
insl
jl
and
mov
mov
or
sbb
je
xchg
and
cmp
push
mov
add
nop
test
aaa
pop
jne
jg
inc
fimull
xchg
adc
enter
cmpsl
fbld
push
loope
cmp
cltd
mov
jl
andb
int3
push
aam
cltd
rcrl
dec
loop,pt
sub
cmpsb
pop
ja
jp
jl
xchg
mov
push
pop
dec
pop
jne
imull
jnp
insl
cli
aad
push
pop
jp
xor
sub
mov
jno
or
jb
or
lahf
test
push
lret
mov
or
mov
cmp
cltd
lcall
push
pop
out
sub
lds
xchg
repz
fs
mov
sbb
cmp
pop
fidivs
and
inc
gs
xchg
mov
cmp
lea
push
sti
std
xchg
dec
add
fcompl
xor
sbb
sbb
and
cli
cmp
or
cmp
sbb
dec
adc
mov
push
lahf
ret
loop
mov
inc
in
in
pushf
aas
xchg
sub
hlt
xchg
cld
adc
mov
sub
stos
addb
insb
test
call
fldl
jle
imul
out
cmp
shlb
cld
scas
mov
push
cli
outsb
jl
push
pop
mov
das
shrl
sarb
adc
jp
notb
adc
xchg
push
xchg
dec
scas
pop
test
cmp
or
and
aas
xchg
dec
sbb
jmp
dec
dec
mov
sbb
sbb
insl
shll
sti
sbb
pop
sub
outsb
inc
jmp
addr16
xchg
jl
xchg
sub
mov
add
jg
or
and
pop
sbb
mov
into
sub
les
add
jl
mov
push
ss
fistpl
in
daa
sub
mov
pop
lcall
mov
push
sbb
popf
adcl
das
fdivr
jno
mov
fcomp
cmp
ret
cs
imul
xor
ret
loopne
push
sar
in
jmp
aam
loopne
jmp
push
pusha
cmp
test
jbe
adcl
inc
push
pop
jo
push
sub
mov
xlat
scas
adc
fnclex
push
cwtl
or
push
and
mov
sbb
cli
ficoms
out
jne
sbb
out
lret
mov
ret
jmp
cmp
and
jns
xchg
pushf
xlat
test
imul
push
mov
cmp
sbb
cmpsl
push
xor
cmp
adc
ds
sbb
xchg
je
or
add
inc
fs
jmp
cmpsl
nop
out
xorl
cmp
inc
shlb
xor
xchg
aas
fisttpll
mov
jb
enter
dec
fisubs
mov
mov
inc
xor
clc
cmpsb
and
lock
cltd
jle
dec
je
gs
movsl
push
fstpl
stc
mov
mov
jmp
pusha
loope
or
adc
mov
shlb
mov
dec
in
cli
push
cld
iret
cmp
sub
sbb
testl
xchg
push
aas
push
mov
jle
test
push
mov
xchg
jae
pop
jmp
dec
jb
sbb
sub
out
jnp
xchg
jg
push
cltd
lahf
mov
dec
pop
lcall
aas
sbb
fwait
sbb
sti
lea
ja
xchg
lds
jmp
pop
ret
push
leave
jne
sahf
data16
pop
jmp
sub
jno
repz
cmp
add
rol
jae
dec
outsl
scas
dec
sub
les
aaa
mov
cli
and
bound
pop
cli
outsl
inc
into
push
add
and
cwtl
std
pop
adc
mov
push
int
popf
mov
les
add
imul
sarb
sbb
int3
jp
cmpsb
sub
lods
add
inc
push
jl
inc
rclb
pushl
ss
sub
rorl
mov
test
or
and
pop
mov
mov
or
lds
scas
xor
xorb
cmc
xorb
cmc
cmp
add
adc
lods
xchg
jns
rol
inc
cmpsl
mov
jb
inc
pop
negb
xor
rcr
imul
xchg
adc
xchg
in
sbb
shrl
into
mov
pcmpgtw
pop
daa
pop
xor
popa
rcll
inc
out
and
push
fsts
cld
frstor
jne
mov
pop
popa
jno
cli
addr16
cli
imul
sbb
cmpsl
dec
test
mov
dec
test
loop
movsb
xchg
sub
test
jmp
cwtl
shrb
pop
adc
aam
loop
lock
push
outsb
test
inc
cwtl
rcr
cmp
pushf
xor
xchg
add
lret
sbb
das
xchg
test
push
pop
daa
movsb
jecxz
cwtl
cmpsl
jg
or
js
shll
imul
or
pop
cwtl
movsb
mov
scas
aam
push
add
call
outsl
sub
add
pop
xor
aad
mov
cmp
sub
xchg
insb
xor
jo
inc
or
imul
jmp
pop
mov
dec
es
ljmp
nop
test
dec
cli
mov
ds
sbb
aam
and
aam
cmp
sbb
pop
in
and
shll
cmp
mov
pop
add
je
push
push
loopne
mov
sti
into
add
lret
push
and
fcoml
mov
jmp
into
push
lahf
xchg
mov
adcl
mov
insl
pop
les
dec
mov
jmp
inc
jl
and
insb
popa
adc
std
fisttpll
loope
cltd
pop
or
inc
mov
pop
popf
pushf
sbb
push
repz
lods
lds
xor
jbe
xchg
inc
sbb
sbb
lods
cmp
inc
lcall
mov
inc
outsl
clc
icebp
imul
push
mov
rcrb
xchg
nop
pop
pop
shlb
movsl
add
jb
fisubs
inc
cs
lahf
jne
ret
mov
pop
mov
inc
js
adcl
mov
hlt
inc
roll
or
out
leave
push
mov
mov
fadd
scas
adc
stc
mov
adc
sub
jecxz
add
xchg
pop
fwait
mov
gs
xor
lds
lret
repz
mov
pushf
mov
lods
inc
jp
mov
mov
movsb
stos
adc
push
inc
push
dec
lret
cmp
dec
add
cltd
mov
inc
dec
sahf
sti
xchg
xchg
jp
jg
cmp
popa
out
and
lock
std
test
mov
lret
aad
lods
pushf
push
jbe
icebp
sbb
and
xor
fiadds
xor
les
jo
or
sub
xlat
das
imul
mov
and
ja
cmp
and
jg
push
sub
out
data16
dec
mov
cmp
cld
data16
inc
inc
pop
pop
pop
ss
xor
ficoml
inc
lock
movsb
xchg
dec
xchg
pop
mov
test
xor
add
sub
outsl
insb
loope
loop
inc
cmp
cmp
aaa
cltd
inc
out
clc
xor
orb
and
adc
int
test
xchg
test
lcall
xor
sub
sbb
std
xor
pop
jge
adc
jb
pop
cmp
in
pop
notb
lds
hlt
jge
jnp,pn
xor
addl
dec
into
notl
outsb
js
cld
sbbl
ret
xorl
in
and
or
movsb
fnstcw
addr16
mov
mov
add
je
inc
and
pop
arpl
jae
shl
js
xchg
cmp
shrb
dec
jne
sub
xchg
mov
cltd
mov
jle
jl
lods
sti
lcall
xchg
jne
push
not
popf
lods
mov
movl
jae
jo
scas
jae
jnp
sub
outsl
mov
push
out
out
push
test
xor
lock
adc
adc
inc
std
cmc
and
out
add
nop
aaa
sub
fmull
sub
fcoml
and
jo
jecxz
and
ret
adc
mov
mov
mov
fistps
pop
hlt
stos
fwait
sbb
push
int
mov
ret
sarb
out
sub
or
mov
add
fstpt
xchg
loop
xchg
addr16
sti
fcompl
sbb
rcrb
fildl
cld
and
shl
xchg
sbb
mov
out
aad
mov
xchg
push
mov
mov
push
xor
lods
jne
repnz
adc
sub
dec
divb
sbb
mov
sub
aas
pop
mov
das
pop
adc
bound
popa
outsb
cmp
add
shl
adc
sbb
mov
fdivl
outsb
ja
sub
rcrl
es
mov
fists
push
adc
jg
xchg
cwtl
xchg
jp
sbb
stc
sbb
lcall
in
cmp
cmpsl
dec
out
sub
ljmp
adc
cmpsl
pop
jge
sti
push
cli
out
adc
pop
and
push
xchg
sub
leave
mov
ffreep
sub
cmpsl
scas
out
mov
inc
push
into
push
es
xor
add
decb
jmp
sarb
leave
mov
or
sbb
jmp
add
lock
xchg
push
add
inc
push
push
inc
cli
jmp
outsb
enter
leave
out
ss
std
xchg
push
pop
xor
imul
insl
jae
iret
xchg
wbinvd
inc
popf
clc
jg
dec
stc
add
inc
mov
push
stos
cmpsl
rorb
sbb
pushw
sub
sarb
sbb
jmp
push
mov
cmc
and
shll
push
and
sub
sbb
add
loopne
daa
pusha
mov
adc
sbbl
and
pop
xchg
xchg
sub
ljmp
aad
sar
les
test
fsubr
movsl
hlt
pop
mov
int
cmp
cmc
sbb
popa
inc
mov
std
sti
pop
enter
rcrl
sub
shll
or
movsb
pop
in
mov
pop
outsl
xor
add
jb
js
pop
mov
jnp
popf
stos
jle
outsb
aam
in
negl
dec
out
jp
jb
ss
and
sbb
and
sub
shrl
out
ret
cmp
jg
lock
or
mov
adc
in
sbb
bsf
int3
subb
std
jnp
mov
cmpsb
notl
mov
jne
popa
cmp
adc
sbbl
mov
xchg
xor
adc
lods
sub
jmp
es
sbb
shll
and
in
cwtl
in
mov
add
andl
cmp
xchg
add
mov
pop
pusha
pop
cltd
cmp
das
scas
mov
and
mov
aaa
rorl
mov
pop
mov
lock
xchg
mov
and
push
hlt
sbb
insb
lea
cmpsl
mov
in
lret
jecxz
mov
xor
xlat
test
stos
cmp
mov
loopne
jl
sbb
ds
mov
pop
sbb
pop
pop
add
pop
pop
inc
xchg
sbb
les
idivb
pop
pop
mov
enter
xchg
fs
outsl
mov
jne
notb
sub
mov
sub
cmpsb
cmpl
xor
rclb
imul
lea
cmpsb
aaa
pop
fucom
pop
rorl
in
jmp
dec
adc
sbb
mov
sbb
jb
mov
das
push
inc
pop
icebp
and
lods
outsl
adc
and
js
adc
xchg
mov
xchg
xchg
jg
jmp
fstpt
adc
and
addb
add
inc
pop
aas
fwait
adc
sarl
jo
and
xchg
pusha
add
imul
dec
fldcw
xchg
mov
cli
outsb
mov
dec
dec
dec
in
jnp
scas
pop
xlat
in
and
jbe
sub
push
les
or
imull
pop
int
sub
lock
aam
outsb
xchg
push
rcll
rol
pop
dec
in
adc
mov
push
rolb
sbb
mov
orl
inc
pop
inc
mov
andl
in
adc
jns
pop
icebp
xchg
mov
cmp
cmc
int
mov
fnstcw
and
test
out
cmpsl
push
xchg
jmp
jbe
loope
outsl
xchg
imul
inc
int3
sti
push
insl
mov
pop
xor
push
loope
pop
inc
adc
in
sbb
ret
adcb
pusha
testl
mov
add
testl
std
xor
cmp
fdivrs
add
adc
orb
loop
mov
jbe
and
fmull
je
xor
das
cmpsb
dec
mov
jmp
push
sbb
xor
dec
mov
jns
mov
rcl
hlt
mov
mov
insl
std
push
jmp
cwtl
lock
xchg
jge
dec
push
lret
dec
xor
jmp
pop
idivl
imul
ret
mov
clc
lahf
ffreep
sub
jge
push
shrl
cs
dec
xchg
push
push
lret
jno
adc
xlat
ret
int
mov
xchg
push
pop
lock
shl
sbb
xor
hlt
dec
cmc
pop
out
popf
test
test
mov
stos
aas
es
or
subl
xlat
lret
mov
jbe
or
out
aam
int3
mov
icebp
cli
shrl
mov
repnz
ljmp
cmp
test
scas
adc
lahf
icebp
test
cmp
mov
int3
inc
out
and
xchg
mov
ret
sahf
mov
push
adcl
loopne
sub
dec
inc
and
xor
mov
jge
fucomip
sbb
pop
pop
loopne
loop
clc
mov
push
sub
mov
ja
lcall
cld
jbe
cwtl
xchg
pop
adc
sbb
mov
dec
ret
movsl
sub
cld
shrb
insb
adc
iret
lcall
stos
dec
mov
pop
test
rorb
dec
dec
dec
cmc
sbb
mov
jnp
jns
push
pop
out
int
ja
inc
push
xchg
push
fcoms
int
mov
sbb
stos
add
push
pusha
mov
add
loop
call
mov
sarb
repnz
in
inc
enter
int3
lods
cmpsb
mov
jo
out
cmp
iret
sub
jb
jl
push
mov
fldenv
inc
lea
ret
mov
aas
test
ds
lret
push
pop
shrb
cmpsb
add
imul
add
ss
aad
push
repnz
push
pop
push
and
or
sbb
inc
xchg
lea
lea
leave
stos
dec
jb
pop
out
cltd
mov
out
aad
inc
into
xchg
ret
xor
and
push
fisttpl
xchg
and
dec
aam
inc
psubb
cmpsl
ret
push
mov
rol
fimull
rclb
stos
sub
pop
mov
fidivs
xchg
inc
jmp
jbe
pop
push
in
jne
dec
jo
push
sub
xchg
cmpsl
nop
xorb
je
dec
subb
mov
pushf
xchg
lock
jo
xor
lret
pop
xchg
cmpsl
cmpsb
sbb
inc
pop
cmp
inc
add
jp
mov
nop
hlt
shr
lods
outsb
jmp
sbb
sahf
pop
xchg
add
pop
popf
mov
and
adc
cmpsb
fdivr
shll
fdivrl
push
pop
xor
pop
outsb
sbb
adc
int3
xchg
out
popf
stos
jg
push
stc
cmp
lock
rorl
add
push
orb
or
lret
popf
fwait
push
in
mov
insb
sti
sbb
cmpsb
sar
pop
movsb
pusha
mov
test
push
xor
lods
sarb
test
aaa
les
leave
aad
dec
pop
and
adc
lret
outsb
mov
mov
outsl
repz
fs
andl
jl
jno
adc
pop
iret
jmp
inc
andb
mov
addr16
or
or
push
aam
loop
dec
cmpsb
jo
mov
jmp
jmp
mov
rcr
cmp
js
push
sbb
mov
adc
push
mov
aaa
or
jmp
and
and
jnp
cld
ret
out
rcrl
mov
or
sbb
andb
sub
lea
test
aas
xchg
mov
pop
popf
jno
lea
push
jp
xchg
ds
fwait
pusha
jnp
stc
jae
movsl
jae
fdivl
adcl
mov
test
cli
rolb
imul
dec
adc
mov
xor
imul
push
mov
inc
das
cmpsb
into
aas
cmc
lock
pop
pop
scas
add
pop
mov
sbb
ss
test
inc
dec
enter
jecxz
call
mov
pop
out
mov
adc
lahf
pop
sbb
adc
leave
sub
ret
cmpl
dec
lods
in
jle
sub
cmpsb
dec
sbb
push
ja
sbb
push
clc
aaa
inc
pop
icebp
cmp
jne
push
imul
jae
sub
jae
cmp
add
test
mov
mov
insl
mov
cmpsl
xor
cli
out
pop
mov
adc
jnp
mov
push
cld
js
sar
pop
xchg
or
cltd
popf
subl
psubsw
iret
imul
and
dec
xchg
iret
adc
jmp
jo
cs
je
push
ljmp
inc
mov
xlat
cmp
les
movsl
cs
cmp
fdivrl
out
fldenv
add
pop
lds
int
scas
push
in
jmp
in
xchg
inc
call
pop
mov
test
pop
popa
repz
sbb
iret
mov
or
stc
or
mov
mov
mov
push
in
sarl
dec
mov
mov
lods
fists
mov
repnz
lods
add
fcoml
pop
repnz
stc
popa
int3
cmp
out
xlat
jmp
std
jbe
xchg
sbb
iret
ja
fstpt
pushf
jne
mov
xlat
iret
adc
push
sub
cld
data16
mov
mov
jb
pop
pop
cmc
push
cmp
aam
adc
pop
pop
loope
gs
jns
pushf
push
sti
hlt
push
dec
jle
dec
mov
xor
mov
nop
xor
add
pusha
inc
stos
lods
jle
out
push
pop
mov
lret
adc
push
sarb
popf
push
mov
mov
cmp
adc
push
pop
or
imul
xchg
sub
mov
arpl
int
pop
xchg
es
hlt
leave
xlat
pop
fisubrs
sub
and
jnp
inc
mov
sbbl
mov
movsl
add
jl
cwtl
mov
sub
sarl
ds
lds
jg
movsb
xchg
imul
shl
decb
and
sbb
insb
jns
pop
xor
add
inc
add
pop
dec
mov
mov
mov
subb
icebp
sub
cwtl
and
push
clc
insl
mov
xchg
xchg
mov
in
mov
dec
sahf
ror
push
loop
sub
cwtl
aas
inc
aam
and
clc
ja
xchg
lods
int
test
lahf
dec
xchg
daa
aas
in
jge
test
xor
cmp
pop
add
adc
ret
xchg
test
push
mov
insl
mov
pusha
mov
movsb
fs
add
sub
js
cld
push
out
in
mov
scas
clc
cmc
pushf
ss
daa
mov
mov
lea
sbb
imul
or
inc
cmp
lret
insl
jns
mov
sub
mov
js
imul
mov
int3
adc
and
xorb
adc
rclb
lahf
test
imul
shll
imul
out
jg
or
xor
add
cmp
ficompl
inc
hlt
fcomps
sub
mov
inc
lahf
out
add
mov
add
aad
in
int3
mov
repz
loope
and
cmp
je
xchg
pop
xor
adc
jmp
push
dec
roll
in
adcl
pop
pusha
and
jo
cmpsl
jecxz
cwtl
insb
inc
and
cwtl
jl
rorl
movsl
dec
pop
je
mov
push
jp
into
and
out
clc
and
stos
aad
xor
movsl
lahf
das
mov
mov
sub
stc
ja
and
stos
sbb
inc
test
icebp
fbstp
sub
fcmovnu
xor
push
adc
iret
pop
lods
movsl
retw
sub
stos
sub
gs
repnz
cmp
pop
mov
pop
adc
push
jae
test
adc
push
mov
push
out
push
mov
movl
inc
xchg
mov
jo
add
sub
icebp
repz
dec
pop
pop
jmp
mov
aaa
aaa
popa
call
fisttpl
stos
jo
in
ret
rolb
xor
jns
inc
dec
andl
cs
fs
push
repz
gs
movsb
aam
lret
mov
and
sbb
fstl
divl
jb
inc
fimuls
inc
repz
ret
adc
adc
movsl
std
sbb
ss
xor
mov
test
and
pop
xchg
cs
popf
adc
adc
push
pop
jno
aas
insl
push
pop
insl
adc
sbb
mov
jl
mov
jecxz
insb
xor
aam
adc
mov
mov
dec
and
add
aam
adc
cmc
std
mov
sti
push
fisubl
mov
fwait
xchg
fidivl
sbb
hlt
inc
cmp
test
movsb
int
into
add
pop
pop
jb
mov
lods
cli
jnp
pop
xchg
xor
dec
cmp
lods
cmp
ret
xchg
stos
jmp
cmpl
adc
pop
push
mov
dec
sub
in
mov
adc
outsl
fs
fisttpl
cld
dec
sbb
dec
sub
out
sub
add
movsb
pushf
jae
xor
jecxz
fiadds
dec
out
mov
pop
movsb
lret
mov
clc
aas
jecxz
and
sub
call
push
or
enter
or
fwait
xor
int
cmp
dec
mov
push
adc
push
mov
mov
outsb
dec
inc
xor
aam
mov
sahf
pop
jmp
xchg
add
ja
sarb
dec
cmp
pop
out
jne
shlb
jp
mov
mov
loope
cmp
xorl
gs
inc
push
xor
push
dec
mov
jg
add
in
pop
int3
push
inc
test
mov
mov
push
in
lahf
cld
hlt
sub
adc
loopne
adc
popf
jle
popf
mov
insl
push
call
dec
out
scas
jle
push
pusha
and
dec
and
shrb
dec
mul
xor
add
jnp
push
enter
sub
int3
add
inc
push
add
cltd
add
int3
cmpl
push
push
pop
arpl
xchg
sbb
xchg
and
push
fwait
bound
mov
shlb
xor
add
andl
and
mull
loopne
cltd
pop
fs
xchg
sub
in
int
imull
test
sbb
jge
xor
ficompl
inc
gs
sbb
push
aaa
out
push
jne
mov
test
nop
mov
es
nop
xor
fs
rcrb
dec
cmpsb
rol
pop
clc
xchg
sbb
std
js
into
dec
mov
mov
mov
das
sarl
test
fwait
popf
add
dec
cli
loop
mov
add
mov
test
mov
cmpsl
frstor
in
inc
or
and
js
mov
fldl
jmp
sbb
arpl
sub
ljmp
divl
mov
dec
cmc
and
sub
jl
push
cmp
hlt
push
into
push
test
ds
jg
cmpsl
cmpsb
pop
mov
imul
sbb
sbb
or
dec
xchg
shlb
adc
fwait
aas
test
adc
inc
stc
jg
negb
dec
lock
js
mov
int
and
inc
stc
mov
in
iret
lret
gs
insb
adc
mov
test
sub
arpl
gs
mov
stos
sub
loop
mov
inc
mov
ret
push
sbb
inc
dec
loopne
rcrb
mov
inc
jl
negb
mov
jae
rolb
dec
jno
adc
jge
cmc
daa
mov
call
sub
das
jle
pop
xchg
cmp
bound
push
sbb
pop
jmp
mov
xlat
or
loop
pop
or
cmp
popf
idivl
add
sub
jg
mov
movb
inc
pop
jecxz
xchg
sarl
cmp
dec
inc
ja
xchg
mov
jmp
sbb
and
xchg
ja
inc
into
daa
aas
clc
cmp
xchg
xor
gs
jge
std
jmp
xchg
pop
mov
dec
ss
bound
push
fdivrl
gs
ja
imulb
fs
sbb
mov
movsl
mov
xchg
jo
jl
outsb
stc
aas
movsl
inc
xor
ret
rcr
xor
jns
and
es
std
clc
testl
xor
mov
js
fwait
outsb
cli
inc
add
fsubrl
jae
jge
jnp
popa
adc
xchg
lret
fidivrs
jmp
cmp
jbe
lods
loopne
mov
sbb
lea
push
loopne
xorb
das
add
pop
enter
pop
inc
xchg
adc
popa
gs
aad
popa
es
push
enter
fldl
xchg
outsb
inc
adc
mov
xchg
mov
fs
mov
insl
xor
rolb
outsb
jnp
xchg
inc
jg
lret
and
mov
push
cmp
xchg
movsl
imul
fwait
mov
push
cmp
bound
orb
lds
dec
stos
pusha
dec
and
dec
or
push
fisubl
test
mov
cmp
es
mov
aaa
out
leave
rorl
bound
push
xchg
icebp
lea
arpl
and
push
fdivr
mov
cmp
dec
insb
xor
cmpsb
popa
jmp
mov
pop
stos
xor
adc
push
inc
movl
arpl
loope
inc
movsb
push
hlt
adc
mov
sub
shrb
adc
pop
jno
xor
sub
mov
loopne
jno
push
js
mov
sub
shl
mov
inc
mov
inc
faddl
je
fistpl
jb
daa
roll
lods
xchg
pusha
adcb
repnz
adc
fdiv
push
sbb
andl
icebp
pop
les
or
fistpl
sbb
cmpl
dec
sub
and
jns
pop
add
mov
rolb
or
daa
mov
sub
push
jl
outsl
les
cltd
mov
out
inc
xor
aam
jns
mov
lret
xor
adc
call
and
adc
test
sbb
orb
xor
addr16
push
outsb
inc
lret
add
ret
sub
bound
mov
repnz
dec
xor
pop
arpl
sub
xor
aam
mov
stos
dec
std
addr16
dec
pusha
or
sub
ret
jbe
jg
addb
xchg
jl
xchg
out
add
insb
add
pop
pop
push
out
outsb
in
add
jb
movsl
scas
lret
ss
cmpsl
mov
jne
out
sub
in
aaa
mov
pop
dec
mov
mov
mov
jo
jns
int
outsb
popf
cmp
dec
mov
inc
lds
jp
lret
and
std
mov
sub
cmpsb
mov
loop
xor
dec
test
mov
mov
je
push
mov
stc
inc
cmp
fsubr
adc
fdivs
xor
outsb
popa
rcll
mov
dec
daa
push
outsb
icebp
jmp
movsb
xor
dec
orb
test
mov
push
arpl
bound
mov
das
adc
test
or
jns
rorl
fsubrs
mov
fisubrl
ljmp
imul
xchg
pushf
or
cmp
xchg
fwait
hlt
sbb
iret
adc
xlat
mov
lcall
loope
cs
jmp
test
ret
sbb
or
movsl
ds
outsb
pop
aas
fildll
pop
dec
mov
xor
add
push
xchg
pushf
movsl
lret
sub
test
int3
inc
addl
push
stos
cmp
lods
sbb
dec
cmp
into
gs
out
fxch
inc
dec
push
movsb
mov
pop
loopne
cmc
inc
sub
xor
dec
mov
outsb
pop
mov
adc
cld
jne
push
xchg
push
jle
adc
jne
xchg
lcall
cmp
popf
and
ss
fcmovne
xlat
mov
outsb
pop
add
arpl
or
pop
pop
inc
xor
mov
mov
cld
inc
cld
xor
stos
imul
pop
inc
and
mov
pop
or
push
scas
jmp
in
push
icebp
ja
outsb
jl
jmp
es
jg
loop
outsb
std
mov
jle
stos
jmp
clc
into
rclb
fisubl
icebp
cmp
xor
clc
mov
aad
int3
std
jb
jmp
pop
fucomp
jbe
lea
jp
aaa
out
cmp
mov
ret
test
cmpb
pop
outsb
pop
scas
fidivrl
xchg
xor
jl
cmpsl
pop
stos
xchg
jnp
mov
pop
imul
push
out
outsb
dec
push
xchg
mov
xchg
dec
xor
adcl
push
pop
pop
jmp
jp
sub
pop
pop
pop
lods
clc
pop
inc
mov
dec
aad
test
iret
mov
or
ficoms
xchg
inc
pop
aaa
and
pop
add
jnp
test
sbb
xchg
in
push
sbb
jg
fdivl
inc
xor
std
jns
adc
sbb
mov
test
adc
stos
push
test
cmp
sahf
rorl
ja
add
out
es
jno
mov
pushf
and
ret
and
fs
push
faddl
or
mov
aam
add
sub
jae
sub
xor
test
aas
add
aad
sub
sub
and
mov
jno
add
cltd
xchg
pop
roll
cmpl
rorb
stos
xor
jno
data16
mov
dec
int3
adc
addr16
inc
call
aaa
hlt
push
mov
movsb
loop
sub
in
movsb
push
fs
or
rcrb
outsl
dec
movsb
rcrl
addr16
jno
cli
xchg
std
stos
aas
lods
cmp
out
add
aas
fldl
dec
inc
aaa
scas
or
rcrl
dec
in
cmp
jg
xor
movl
mov
pop
lock
test
pushf
xchg
mov
test
dec
sti
jmp
sbb
pop
lods
push
inc
dec
lock
cmp
add
ljmp
pop
dec
gs
mov
inc
add
je
dec
call
hlt
cmp
xchg
outsb
jg
jns
fldt
push
shrb
fidivs
movsl
jle
sbbb
sbb
mov
mov
push
mov
test
push
shl
jbe
ret
ss
and
xor
mov
mov
adc
jns
js
bound
xor
lahf
movsl
cs
or
mov
js
out
addr16
sahf
mov
inc
in
cmp
in
out
test
push
test
filds
mov
mov
add
jmp
rclb
inc
inc
sub
scas
dec
int3
xchg
add
in
movsb
lahf
and
leave
or
call
cmp
pushf
inc
cmp
jmp
adc
pop
mov
testl
ficoml
inc
fs
cmp
mov
icebp
ja
pop
cmp
lods
loope
and
mov
rcl
or
nop
rol
mov
lods
sub
mov
out
in
ljmp
hlt
fldln2
inc
movsl
jo
add
xchg
pop
bound
push
inc
xchg
subl
xchg
pop
popf
jne
mov
in
ss
xor
stos
xor
pusha
jne
mov
adc
fs
mov
inc
test
xlat
adc
sub
adc
adc
pop
and
clc
sti
popf
jne
lcall
push
neg
push
sub
add
sub
std
add
inc
xchg
in
push
push
adc
jo
daa
and
aas
jp
push
sbb
xchg
or
lea
ja
aam
ds
mov
ljmp
je
gs
fs
data16
dec
fsubrp
sbb
push
add
dec
adc
popf
mov
xlat
pop
push
out
xor
mov
shrb
adc
or
push
aaa
mov
outsb
lock
push
cmp
stos
mov
dec
xor
add
in
jmp
ja
lods
adc
and
mov
fnsave
adc
jbe
bound
cltd
mov
lds
push
mov
push
ss
jnp
cltd
lcall
std
dec
sbb
jo
cmc
cmp
imul
mov
xchg
ffreep
outsl
call
fistps
push
sub
loopne
xchg
mov
mov
and
dec
int3
adcl
mov
out
mov
js
loopne
xor
inc
test
aaa
jle
or
hlt
jb
add
pop
pop
jmp
shl
add
js
fldt
scas
shrl
outsb
pop
iret
sbb
ret
adc
push
leave
sahf
sbb
arpl
or
push
bound
add
mov
gs
cmp
iret
push
mov
add
mov
ds
ja
dec
std
popf
loope
mov
dec
das
xchg
loop
loop
clc
mov
scas
or
dec
push
mov
aaa
mov
sbb
mov
jae
scas
push
movsb
cld
or
ljmp
add
out
dec
pushl
mov
or
inc
in
test
cmp
push
lea
jle
mov
add
js
repnz
fistpll
jbe
les
pop
mov
cs
adc
mov
push
adc
inc
ds
cmp
or
add
rclb
fucomp
es
pop
cmp
cmp
adc
sbb
jae
inc
push
sbb
cmp
clc
fstl
add
mov
inc
shr
bound
int
ret
std
jg
arpl
mov
fnstcw
xchg
jae
enter
sahf
dec
mov
mov
xor
xor
sbb
call
jmp
jns
mov
sbb
pop
fs
sti
repz
sub
out
lcall
int
js
mov
sub
cmp
neg
push
push
call
add
push
sub
add
pop
call
jo
sub
xor
lea
call
push
lea
lea
pop
xor
lea
push
call
not
dec
lea
push
lea
lea
pop
push
push
push
push
call
cmp
sub
push
push
call
pshufw
or
mov
lea
emms
push
call
xor
sub
add
mov
jmp
cmp
lea
cmp
push
call
cmp
lea
xor
ret
call
add
lea
lea
push
call
and
add
lea
mov
inc
push
xor
sub
lea
pop
dec
movl
mov
lea
lea
push
call
sub
sub
je
dec
lea
xor
push
call
xor
cmp
sub
push
mov
lea
pop
mov
push
call
push
mov
cmp
mov
cmp
pop
shr
add
lea
jmp
mov
and
xor
add
call
call
cmp
sub
not
push
push
push
push
push
push
call
push
push
push
push
call
nop
mov
mov
mov
add
mov
add
mov
lea
xor
mov
cmp
jle
and
xor
cmp
push
and
and
pop
lea
cmp
and
jbe
xor
cmp
add
mov
inc
mov
mov
xchg
push
lea
sub
inc
pop
add
lea
call
mov
mov
lea
mov
mov
lea
mov
sub
push
call
sub
sub
and
lea
lea
lea
push
call
add
push
call
call
jmp
push
ret
lea
lea
call
push
call
cmp
mov
sub
push
call
add
lea
call
push
push
call
and
lea
xor
lea
call
and
sub
push
call
push
call
add
lea
call
push
call
mov
mov
add
cmp
lea
push
call
call
call
lea
lea
lea
lea
mov
push
lea
lea
cmp
lea
cmp
inc
cmp
add
push
call
mov
sub
mov
mov
add
xor
push
call
pop
inc
cmp
jne
call
push
cmp
mov
pop
pusha
push
call
cmp
cmp
cmp
sub
and
xor
and
mov
sub
not
add
lea
mov
push
dec
sub
cmp
sub
pop
call
call
jb
lea
sub
add
xor
xor
cmp
lea
nop
cmp
add
and
lea
dec
add
popa
cmp
jne
sub
sub
call
dec
lea
lea
mov
push
call
add
not
lea
lea
add
lea
lea
cmp
push
call
mov
xor
into
cmp
insl
mov
dec
and
jne
jg
lds
dec
lods
rolb
out
push
push
fmull
pop
mov
popa
arpl
imul
mov
fs
daa
xor
sub
std
mov
add
test
mov
out
mov
mov
test
push
ret
addr16
jp
mov
xchg
mov
scas
scas
cmp
aam
jo
mov
mov
xchg
cmp
jge
mov
stos
in
inc
rcl
loopne
shlb
push
sbb
ficompl
mov
in
mov
call
arpl
jle
out
and
or
decl
cli
mov
test
add
xor
popf
push
sahf
add
inc
push
sbb
fldt
xchg
pop
rcrb
scas
rolb
cmpsb
cs
mov
leave
xor
cmp
int3
in
aas
mov
orb
dec
mov
sbb
stos
int3
mov
push
push
or
ljmp
push
pop
jmp
aaa
loope
cmp
test
jo
aas
mov
xchg
and
xor
clc
mov
add
test
jne
je
fbld
xchg
xchg
xchg
imul
push
pushf
jne
lahf
mov
movsl
cmpsb
int
and
lods
pop
push
push
loopne
clc
fwait
mov
dec
out
sbb
lods
mov
ss
in
ds
inc
cmp
cld
inc
sub
cli
and
rcr
mov
lea
repnz
cmpsb
insb
sbb
out
adc
repz
hlt
clc
xor
std
mov
inc
ljmp
or
or
mov
jnp
push
test
or
xor
out
sbb
sbb
and
je
mov
ja
jmp
mov
and
sahf
insl
pop
lock
xor
push
push
enter
dec
dec
push
dec
mov
mov
ficomps
pop
rorl
or
daa
push
pop
sbb
out
adc
sbb
enter
pop
cmp
xchg
adc
lock
mov
test
pop
or
add
lahf
xchg
imul
or
mov
mov
pop
xor
shr
scas
lahf
mov
fidivl
inc
sub
lods
mov
lret
inc
add
icebp
ds
lods
add
shlb
decl
sub
push
hlt
icebp
outsl
call
push
fisttpl
popa
stc
dec
sahf
shll
clc
stc
dec
add
push
mov
cld
std
xor
int
aad
cmp
sub
out
and
adc
sbb
push
sbb
bound
test
sub
pop
or
inc
adc
cmp
add
mov
cmp
sub
pop
rcrl
imul
jmp
fdivl
addr16
xor
sbb
insl
repz
cmp
dec
jp
dec
mov
movsb
dec
mov
test
mov
fcoms
push
loope
sbb
fwait
pushf
popf
lods
lcall
xor
test
arpl
lods
and
pushfw
inc
ss
jmp
mov
lds
add
ss
sbb
cmpsb
jnp
rcl
sub
mov
xchg
fdivs
and
jb
mov
jge
jmp
sbb
in
cmc
or
jb
mov
daa
push
mov
pop
or
mov
in
adc
adc
xor
dec
out
movsb
xchg
cmp
cwtl
and
and
sbb
int3
fsts
mov
adc
or
add
cmp
jge
and
lea
xor
cmp
sub
dec
mov
push
call
xor
je
and
add
sub
call
and
jne
lea
cmp
sub
push
call
push
sub
lea
pop
ret
jbe
add
add
sub
and
sub
lea
mov
push
push
push
push
call
xor
cmp
jo
xor
cmp
add
mov
je
and
sub
cmp
push
call
push
lea
sub
pop
ret
add
sub
xor
js
out
int
xor
mov
stos
lcall
je
mov
lea
cmp
push
push
call
jbe
not
xor
cmp
lea
cmp
mov
push
call
sub
add
lea
lea
push
call
jbe
add
inc
cmp
cmp
mov
jbe
xor
lea
xor
nop
sub
ret
mov
inc
xor
cmp
and
xor
push
mov
sub
push
inc
lea
pop
lea
cmp
xor
xor
call
xor
cmp
lea
je
and
cmp
lea
not
lea
sub
mov
inc
mov
push
call
lea
lea
add
pop
mov
lea
lea
inc
push
push
call
leave
ret
lea
lea
sub
cmp
push
mov
sub
mov
not
jge
lea
and
lea
push
call
mov
add
cmp
call
push
mov
cmp
pop
xor
lea
lea
and
call
lea
xor
lea
push
push
call
pop
mov
xor
and
leave
ret
mov
sub
push
mov
pusha
mov
and
push
mov
add
popl
mov
mov
movzbl
mov
mov
mov
mov
add
mov
popa
leave
ret
mov
neg
push
lea
add
pop
mov
sub
mov
not
neg
cmp
incb
add
nop
add
cmp
jne
cmp
mov
call
mov
mov
inc
decb
inc
cmp
jne
cmp
cmp
not
call
ret
push
mov
sub
mov
xor
mov
push
call
jmp
not
and
and
pusha
movb
mov
mov
movl
mov
lods
stos
test
je
loop
sub
neg
mov
call
popa
and
nop
nop
nop
leave
ret
sub
mov
add
push
call
jb
mov
add
not
push
call
xor
sub
lea
xor
push
cmp
xor
pop
mov
add
mov
push
cmp
lea
cmp
add
pop
mov
add
push
and
sub
lea
inc
pop
lea
call
push
mov
add
pop
push
call
ret
lea
add
add
xor
mov
push
mov
sub
add
sub
mov
cmp
push
and
sub
push
call
mov
push
xor
xor
mov
xor
push
call
pop
cmp
je
call
lea
mov
xor
push
push
push
push
push
push
call
add
add
cmp
and
push
push
call
pop
add
mov
cmp
jne
add
sub
leave
ret
xor
lea
push
mov
sub
je
and
inc
sub
push
pop
mov
mov
inc
cmp
je
xor
cmp
add
nop
sub
cmp
cmp
jne
mov
sub
cmp
lea
leave
ret
neg
mov
mov
lea
push
call
sub
cmp
jo
add
and
sub
lea
je
xor
sub
cmp
call
push
call
push
cmp
or
pop
ret
add
cmp
mov
cmp
cmp
lea
mov
add
fisubs
add
add
pop
add
xchg
push
add
add
lret
add
add
add
add
add
add
imul
add
add
pop
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
inc
inc
dec
xor
cs
insb
add
inc
push
xor
cs
insb
add
scas
add
mov
add
add
loop
add
repnz
cld
add
or
add
sbb
add
add
add
dec
add
pop
add
jo
add
jle
add
mov
add
add
mov
add
add
add
scas
add
mov
add
add
loop
add
repnz
cld
add
or
add
sbb
add
add
add
dec
add
pop
add
jo
add
jle
add
mov
add
add
mov
add
add
add
add
inc
imul
add
add
inc
insb
imul
jb
add
add
fs
imul
add
jne
insb
push
arpl
add
outsb
fs
imul
inc
add
add
je
outsb
jne
add
inc
gs
gs
popa
addr16
outsl
jae
add
inc
gs
outsl
jo
imul
add
dec
outsb
jbe
insb
imul
je
add
add
inc
push
jo
jb
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
outsb
imul
push
arpl
add
jae
push
jne
je
gs
popa
add
add
je
popa
jb
je
outsl
jae
add
push
push
jb
je
add
push
push
jb
outsl
jb
add
add
imul
je
jo
add
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
push
jb
arpl
outsl
jo
jo
outsb
jne
js
add
add
fs
je
push
imul
add
loop
add
lock
add
or
add
push
add
ds
add
push
push
add
lcall
add
push
add
ljmp
add
imul
add
add
cmp
add
dec
imul
add
add
jle
add
mov
add
imul
add
add
loop
add
lock
add
or
add
push
add
ds
add
push
push
add
lcall
add
push
add
ljmp
add
imul
add
add
cmp
add
dec
imul
add
add
jle
add
mov
add
imul
add
add
fs
je
insl
inc
add
add
inc
popa
arpl
jo
gs
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
outsb
fs
je
insl
inc
add
add
je
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jne
jb
outsb
arpl
outsl
jb
popa
je
add
add
inc
gs
imul
push
jo
arpl
add
add
je
js
je
outsl
fs
jb
arpl
jae
add
add
je
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
jb
arpl
jae
gs
jo
add
add
je
imul
je
add
add
je
gs
imul
inc
insb
outsl
bound
dec
outsl
arpl
add
add
inc
bound
addr16
jb
jae
outsb
je
add
dec
outsl
popa
fs
imul
add
add
push
gs
jb
push
inc
add
add
jae
outsb
fs
push
add
add
imul
bound
add
add
imul
jb
popa
add
add
push
outsb
insl
popa
jo
imul
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
popa
je
add
add
insb
jae
jb
insl
jo
add
add
insb
jae
jb
jo
inc
add
add
insb
jae
jb
outsb
inc
add
imul
add
push
add
push
add
add
push
push
add
add
je
add
subb
add
add
imul
add
push
add
push
add
add
push
push
add
add
je
add
subb
add
add
add
inc
fs
outsl
outsb
je
gs
jne
arpl
add
add
inc
insb
outsl
jae
inc
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
gs
dec
bound
arpl
add
inc
imul
add
add
je
gs
arpl
popa
jo
add
add
je
gs
jb
jae
inc
outsl
insb
outsl
jb
add
push
gs
imul
outsl
jb
add
add
je
gs
inc
outsl
insb
outsl
jb
add
imul
push
imul
sub
add
cmp
add
dec
imul
pop
imul
insb
imul
jl
add
nop
imul
sahf
imul
lods
imul
mov
imul
add
add
add
add
imul
sub
add
cmp
add
dec
imul
pop
imul
insb
imul
jl
add
nop
imul
sahf
imul
lods
imul
mov
imul
add
add
add
inc
gs
jb
jbe
je
dec
bound
arpl
arpl
imul
gs
insb
outsl
jae
dec
gs
add
push
gs
gs
gs
dec
gs
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
addr16
outsb
jne
dec
gs
add
add
addr16
outsb
jne
dec
gs
js
add
add
addr16
outsb
jne
push
popa
insb
jne
inc
add
add
addr16
gs
gs
arpl
imul
addr16
outsl
popa
fs
gs
add
add
addr16
jo
outsb
dec
gs
add
add
addr16
jne
jb
push
popa
insb
jne
inc
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
jb
push
outsl
push
gs
data16
ljmp
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
imul
loop
inc
add
imul
pop
addr16
add
inc
add
inc
add
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
add
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
imul
pop
gs
add
imul
out
imul
mov
add
gs
add
inc
add
add
