call
in
add
decl
pushl
push
push
push
call
leave
ret
imul
mov
adc
mov
mov
orl
cmpb
fistps
jmp
imul
aad
cli
andl
insl
fs
mov
cmp
ljmp
sub
xchg
sbb
add
dec
pusha
cmc
cli
insl
loop
jne
dec
outsl
mov
test
fs
cli
imul
mov
ds
cmc
scas
andl
fsubs
pusha
fcmovnu
in
cmpb
es
lcall
pop
roll
mov
ds
sbb
sti
das
clc
in
ds
ds
jns,pn
scas
cmpl
sbbb
xchg
add
dec
lcall
shlb
test
add
aad
sbb
outsl
jg
imul
mov
fs
jns
add
loopne
pusha
imul
loop
imul
fs
lock
scas
dec
cltd
mov
scas
cltd
sbb
bound
sbb
outsb
lcall
insl
imulb
es
lcall
xchg
jns
subl
bound
scas
mov
cltd
dec
xchg
in
add
fs
xchg
test
xchg
cli
imul
pop
xor
jp
mov
jns
test
ffreep
xchg
lcall
inc
orl
jg
ds
pusha
loop
orl
inc
mov
jb
jo
fbstp
mov
imul
inc
imul
test
outsb
sub
mov
add
push
adc
sti
adc
add
add
or
sbb
sbbl
mov
dec
jne
jne
and
mov
xor
dec
das
xor
mov
aad
ds
sub
add
lret
mov
sbb
cltd
orl
push
xchg
scas
push
cmc
jns
inc
cwtl
push
jo
sbb
fadds
gs
imul
push
sti
sbb
pusha
es
sub
pop
mov
fs
sub
fiaddl
insl
pusha
subl
hlt
fadds
test
mov
repnz
xor
add
mov
mov
adcl
sahf
ds
mov
lods
lret
push
add
mov
mov
adc
mov
test
mov
push
aad
fwait
ret
loopne
aad
orb
or
jns
sub
cld
fisttps
push
mov
sbb
jns
inc
cmpsl
pop
outsl
xor
cli
mov
in
adc
inc
test
jb
fs
pop
push
xchg
adc
fs
test
sub
jp
and
cmp
jne
xor
frstor
xchg
adc
pop
fcoms
scas
lcall
push
add
adc
mov
or
inc
inc
sbb
push
mov
add
fcmovu
or
fchs
push
push
lret
or
xor
ljmp
xor
mov
xor
sub
pushl
pop
pop
adc
inc
xor
je
mov
lock
sbb
outsl
test
jb
push
adc
fisttps
mov
add
mov
das
add
pusha
ss
add
std
mov
pushl
xor
test
lcall
or
out
ficompl
push
add
fisubrl
test
xlat
iret
adc
sbb
mov
inc
insb
es
xchg
daa
jns
int3
dec
pusha
sbb
sti
fscale
rcll
dec
xor
pop
cmp
insl
mov
push
pop
ret
push
jecxz
into
xchg
popf
lods
clts
ficoml
cmc
adc
cld
push
and
ds
inc
xor
std
lcall
pop
sbb
sbb
cld
pop
aas
fsts
inc
or
sbb
adc
jnp
jecxz
sub
iret
fdivrp
fisttpll
push
pop
pushf
mov
outsb
out
xor
fs
jl
sub
aas
js
addb
nop
inc
sub
and
adc
cwtl
mov
imul
fidivl
inc
int
push
adc
insl
push
lods
inc
incb
push
jg
fs
mov
negb
js
pop
sbb
push
neg
insl
add
enter
push
fdivrl
rol
jg
in
gs
out
push
imul
loopne
push
push
cmpl
adc
push
push
ja
clc
call
je
mov
jmp
movsb
mov
sub
inc
inc
xor
mov
and
loopne
std
das
cmp
dec
lret
mov
jbe
sbb
mov
jg
iret
int3
xor
sbbl
cmp
pop
cld
aaa
out
jmp
inc
adc
mov
ds
jmp
mov
inc
rclb
inc
xor
add
xor
adc
push
pushl
xor
aam
lds
in
or
cwtl
es
inc
jg
fwait
sti
jno
fstl
fwait
fwait
add
pop
arpl
inc
push
int3
jb
or
out
decb
xchg
mov
jge
push
ljmp
cltd
push
sbb
test
cltd
mov
or
cmp
incl
mov
jo
dec
dec
add
and
pushl
cmp
adc
jge
jns
xchg
xchg
mov
fisubs
cmp
ljmp
ret
push
pushf
int3
add
pop
js
in
fdivl
incb
dec
addr16
out
mov
and
fcmovnbe
out
mov
into
inc
cmp
adc
inc
or
dec
dec
push
push
add
lock
mov
lcall
fcomps
jbe
lock
push
xor
xchg
ja
pop
xor
div
pop
push
sbb
call
popf
xchg
xchg
sbb
and
fcompl
mov
scas
outsb
mov
mov
inc
add
dec
pop
imul
imul
dec
pop
jp
xchg
dec
mov
jg
les
mov
mov
fdivrl
xchg
mov
sub
lock
lock
shl
mov
in
push
negl
sbb
popa
das
cmpsb
daa
and
in
out
adc
pop
push
jns
cli
mov
neg
sbb
pop
cmp
jns
lret
xor
out
incb
push
inc
push
or
arpl
mov
mov
popa
icebp
vpandn
cmpsl
xchg
in
insb
sbb
out
out
loope
idiv
ljmp
fsubrl
xchg
dec
inc
mov
sbb
out
aam
cltd
inc
jmp
adc
sbb
pop
mov
js
pop
fsubrp
lcall
cld
jg
add
into
pop
imul
inc
mov
pop
fcomip
lds
push
pop
xor
mov
mov
mov
lret
aas
call
push
jb
lret
repz
lods
add
sti
lahf
pop
sti
push
lret
fisubl
lahf
xorb
mov
xor
subb
js
mov
idiv
scas
incl
in
stos
inc
and
push
fs
movsb
and
dec
and
incl
ljmp
dec
pop
fbstp
inc
test
xlat
adc
jecxz
ret
and
jmp
sbb
fwait
testl
ss
mov
pushf
mov
imul
out
andb
add
jge
pop
fildl
inc
push
jle
incl
rol
test
jae
clc
std
insl
xchg
pop
push
loop
rorl
incl
or
into
mov
inc
test
call
jg
dec
cmpsl
sub
sti
int3
enter
mov
loop
xor
sub
sarb
push
jge
mov
roll
mov
stos
adc
nop
push
adc
leave
sbb
adc
pop
ds
call
pop
jle
lret
imul
mov
gs
bound
mov
aam
lods
jb
xlat
pop
sbb
arpl
sub
jmp
dec
dec
rol
leave
adc
xchg
fadds
xchg
test
add
xchg
sti
lea
or
mov
xchg
and
xor
push
xchg
pop
ljmp
fstl
jno
lods
inc
repz
jnp
sub
pop
xor
ja
xor
loopne
push
xor
or
ss
jge
shrl
in
dec
pushf
ljmp
jnp
jbe
notl
and
cmp
cmp
repnz
ss
roll
sub
lea
xchg
add
test
aad
outsl
pusha
cmc
outsl
xor
jb
stos
sbb
xor
mov
jecxz
or
xor
movsl
dec
dec
out
pushl
data16
test
stc
int
pop
data16
out
lods
sete
into
sub
push
cmp
jle
imul
imul
add
pushl
fldt
out
xor
insl
add
dec
imul
sub
jecxz
mov
scas
fs
lds
adc
push
xlat
aas
fadd
or
test
xor
xchg
or
jg
sar
or
stos
mov
push
jbe
jo
sbb
cmp
aaa
add
jb
xorb
xor
insb
in
fdivr
mov
fistpll
cmpsl
gs
mov
push
js
add
inc
std
andl
mov
out
pop
cmp
pop
fcomps
movl
cld
dec
dec
rcrl
dec
aad
sub
mov
add
nop
fstl
loop
xor
cld
jle
pop
cld
in
jecxz
xchg
mov
sub
or
inc
add
pop
add
decl
shlb
movsb
scas
lcall
mov
mov
adc
dec
je
fnsave
jo
mov
jmp
loopne
jle
filds
jne
call
movaps
adc
in
idivl
push
nop
rorb
dec
fnsave
stc
adc
fnstsw
cmpb
sbb
das
lds
jg
jmp
inc
inc
in
leave
and
into
add
test
jg
xchg
add
xchg
mov
sar
sub
fidivrs
pop
sbb
je
xchg
ss
lods
pop
lret
push
adc
pop
scas
insb
rcrl
and
outsl
push
cld
repnz
pusha
hlt
call
mov
sbb
jbe
jnp
dec
mov
cld
out
cmp
cmp
add
cltd
jb
in
scas
jmp
popl
mov
mov
adc
xchg
loop
bound
shlb
xchg
sarl
rolb
mov
push
fnsave
cmp
pop
decl
neg
call
xor
mov
ds
out
fxch
hlt
dec
pop
int3
pop
cmp
mov
add
dec
imul
jmp
mov
in
xchg
inc
cmpsl
ss
andl
mov
clc
ljmp
sub
pop
pop
mov
jmp
icebp
sub
into
dec
sbb
dec
in
cmc
sti
push
cli
addr16
pop
pusha
lea
push
decl
movsb
cmp
xlat
or
ljmp
adc
rorl
mov
inc
cmp
xor
sub
mov
pop
fistl
mov
jo
lahf
fs
adc
mov
int
in
pushf
sub
sar
int
push
inc
mov
sbb
lret
sti
mov
cld
in
xchg
outsl
mov
hlt
in
jmp
xor
sub
into
int
clc
ffree
mov
je
xchg
sub
jecxz
add
sub
mov
imul
jge
sahf
cli
adc
arpl
or
arpl
das
lock
add
xlat
loop
lock
jmp
dec
in
repz
push
inc
mov
dec
sub
jbe
inc
fs
ret
cltd
repz
dec
lods
sbb
cli
push
daa
aam
cld
cltd
push
popa
xor
pop
outsb
dec
xchg
jg
fildll
in
sub
stos
sbb
sub
mov
xchg
aaa
inc
outsb
xor
mov
and
cmp
out
push
push
sbb
rorb
add
pop
dec
outsb
sbb
test
vmread
aaa
jno
pop
pop
stc
jno
jge
pushl
cli
divb
push
cld
cli
push
xor
clc
jbe
clc
aad
xchg
push
cmpsl
and
idivl
imul
repnz
fisubl
mov
push
push
cltd
sahf
sub
sar
sti
test
or
mov
pop
das
xor
out
sbb
fidivs
ficoms
xchg
mov
cmp
std
movsb
imul
popf
mov
imul
loop
ja
mov
mov
lret
outsb
fimull
cmp
mov
push
pop
jge
mov
sbb
std
iret
mov
out
enter
stc
insb
mov
scas
mov
mov
pop
or
sub
dec
cmp
clc
lahf
cwtl
ja
jae
jg
clc
and
xchg
sti
movsb
ret
mov
sti
jmp
mov
and
aam
mov
clc
jg
std
push
test
pop
jmp
and
mov
jmp
push
and
xchg
mov
cwtl
jecxz
cmp
push
popf
stos
ficoml
push
iret
mov
and
std
mov
adc
fisubrs
xlat
mov
adc
cmp
jg
pop
and
jmp
cmp
xorl
jecxz
mov
xlat
inc
lds
sub
cmp
ja
jmp
in
inc
cltd
ja
sub
or
lret
jnp
in
cmp
mov
movsl
push
add
in
xor
fnstsw
pop
popa
ljmp
dec
mov
sti
or
push
cmc
cmp
rcl
mov
push
xchg
ja
sti
mov
adc
ds
add
stos
mov
aas
sbb
out
sub
xor
and
mov
clc
incl
adc
int
cwtl
in
dec
or
cld
cmp
pop
popa
out
or
popf
lcall
aas
xchg
std
xor
fdivr
jmp
pop
cmpsb
mov
xchg
cli
aas
xchg
xchg
adc
or
jg
fbld
shl
jns
mov
sub
inc
dec
inc
sub
lods
and
fnstcw
mov
ret
push
or
aas
lock
or
adc
jle
or
outsl
loopne
xor
lea
divl
into
js
cmc
mov
mov
inc
sub
mov
test
mov
pop
mov
je
mov
mov
inc
jnp
outsb
mov
lret
adc
mov
ja
jne
scas
pop
jge
bnd
jmp
ja
pushf
nop
daa
push
inc
scas
xlat
cmpsb
mov
sbb
cmpsl
les
push
xchg
jmp
clc
xor
xor
in
movsl
push
push
mov
jge
ror
mov
sarl
xorl
pusha
ds
aas
mov
xor
lret
mov
xor
mov
xchg
cmp
mov
or
or
push
bound
adc
jmp
outsl
inc
adc
clc
pop
pop
push
mov
out
jl
jecxz
fsts
sub
sbb
out
ss
push
jbe
ja
pop
ficomps
xchg
sarb
and
std
push
xchg
sbb
xor
mov
mov
jae
inc
push
lahf
fidivrl
subb
add
or
fimull
inc
mov
test
mov
pop
mov
dec
mov
stos
aam
sbb
leave
sbb
js
je
push
rorl
cwtl
stc
lcall
andl
jecxz
dec
clc
cmp
fwait
sti
and
cmc
dec
push
popa
in
or
mov
mov
push
bound
pop
xchg
xchg
dec
fsub
pushl
mov
sub
es
pop
rorl
iret
shlb
xor
bnd
stc
stc
cmp
pop
das
sub
dec
icebp
xchg
mov
jge
adc
nop
mov
jae
shlb
ja
dec
xlat
xlat
mov
out
lea
cltd
jecxz
popf
jecxz
test
mov
aam
xlat
dec
add
or
testl
xor
lock
mov
jge
xor
jmp
inc
call
lahf
mov
movsb
xor
nop
cmp
add
andb
jne
repz
xchg
rcrl
jo
int
out
sbb
adc
xor
lahf
pop
aas
push
xchg
sarb
push
dec
add
add
add
lret
xchg
ja
fdivrp
sub
add
shrl
js
push
jbe
mov
dec
movsl
sbb
jae
add
stos
pop
jle
aad
jl
lcall
out
dec
xor
add
mov
xchg
mov
jge
fcoml
imul
lahf
or
jg
fistl
xor
dec
cmp
pop
mov
aam
imul
fistpll
and
add
arpl
pop
leave
movl
jne
mov
adc
or
add
ja
stos
xchg
jo
cmp
lcall
ljmp
mov
inc
jle
mov
cld
out
lds
push
sub
ss
cld
cmp
dec
repnz
xchg
pushf
sub
test
lcall
adc
pop
xchg
and
cmp
in
fwait
cltd
sbb
mov
jb
mov
mov
fdiv
stc
sub
push
jg
incl
popf
cld
insb
and
stos
scas
push
lahf
and
fiadds
mov
stos
fisttpll
jnp
cli
inc
mov
out
fldcw
or
jl
aas
mov
in
add
test
in
data16
add
popa
scas
aad
das
push
jmp
xor
dec
ret
push
in
call
into
aas
lock
mov
xlat
lods
mov
movsl
sbb
cli
leave
fstl
jecxz
ret
mov
add
std
loopne
das
shl
adc
jns
mov
inc
out
fdivl
cwtl
mov
sarb
jb
sahf
icebp
incl
mov
adc
inc
push
loop
ds
std
jg
jns
leave
cmp
gs
std
xor
lods
or
movsb
or
mov
or
pop
aad
ja
mov
dec
outsl
cld
mov
out
in
sbb
cmp
fsubs
into
push
stos
addb
scas
icebp
push
mov
or
xchg
xchg
cmp
jl
inc
sbb
xor
sbb
loope
test
jnp
jbe
sub
call
xor
push
sahf
xchg
jmp
push
lahf
loope
bound
rclb
inc
call
cld
sbb
mov
and
jmp
cmpb
xchg
hlt
out
loop
out
add
test
lcall
mov
or
sete
jg
xchg
adc
mov
lods
stc
push
dec
push
xor
das
cli
mov
ret
jge
sbb
sub
mov
dec
jmp
sub
mov
fdiv
movsl
inc
dec
popf
rorl
cmc
mov
lods
cmp
or
mov
push
push
enter
cs
lock
jle
dec
dec
out
adc
push
adc
or
in
out
cmpsl
jl
movsb
testb
je
lahf
sbb
inc
std
outsl
mov
cmp
ja
psllq
xchg
aas
rorb
data16
lock
adc
or
pop
lret
nop
mov
push
sbbb
jge
inc
cld
mov
jae
mov
xchg
imul
test
pop
movsl
pushf
push
push
push
insb
cli
sub
test
bound
shlb
pusha
cld
lock
outsl
and
fisubl
es
push
cmp
and
lds
imul
lds
pop
mov
lods
ffreep
sbb
decl
int3
imul
sub
in
mov
iret
inc
outsl
pop
inc
repz
movsb
adc
imul
incl
xor
ret
loopne
pop
gs
shr
popf
mov
inc
mov
sahf
pop
pushf
jg
enter
pushf
jmp
push
cltd
int
jmp
xchg
aam
mov
cmpsl
ljmp
clc
pop
testb
scas
push
imul
xlat
lcall
jecxz
fsubs
add
xchg
sub
push
sarl
orb
fmuls
inc
sub
push
push
mov
xor
dec
xorl
out
jbe
std
cmp
push
cs
jg
clc
pop
mov
sub
dec
rorb
data16
mov
lahf
jmp
lock
in
and
pop
jnp
loopne
sbb
clc
xor
xor
imul
sub
push
jnp
push
sahf
mov
sub
stc
js,pn
loopne
jae
imul
xor
repz
movl
outsl
pop
fcoml
fadds
imull
aaa
inc
dec
jg
shlb
rorb
adc
mov
imulb
mov
loopne
jmp
mov
xor
inc
fisubrl
insl
scas
mov
lahf
xlat
ja
stos
push
pop
cmp
jo
ja
outsl
dec
call
sbb
xchg
sub
rolb
xchg
mov
addr16
ds
lahf
fs
out
push
push
add
inc
xchg
lahf
ror
lds
rdtsc
push
and
jne
inc
lock
scas
cmp
mov
call
stc
xor
push
movsl
jg
cmpl
loop
aas
call
cmp
test
sub
sub
pop
popa
push
aas
pop
push
cmp
lods
add
mov
or
cwtl
jo
sub
das
sub
cmp
fistpll
or
sub
or
inc
cmpsb
test
jmp
cmp
xor
ret
mov
fs
out
rolb
add
and
add
or
popf
mov
mov
jae
push
cmp
call
in
jge
call
cmpsl
add
push
add
call
inc
pop
lcall
or
jns
mov
xchg
add
das
fnstcw
pop
fcoml
cmp
decl
or
gs
adc
push
sbb
jb
jg
clc
dec
mov
jg
adcl
cmp
gs
call
jbe
std
inc
xchg
clc
orb
mov
push
mov
loope
test
add
cli
incl
or
cmp
fisttps
jmp
std
aaa
clc
hlt
mov
xchg
in
xchg
sarl
or
add
xchg
lahf
pop
push
icebp
sub
add
jge
int
aaa
les
loop
out
fmul
mov
ljmp
dec
cwtl
sub
adc
imul
cmp
mov
loopne
jnp
adc
jg
sti
mov
jecxz
cmpsb
sahf
push
jle
cltd
aam
sub
hlt
adc
js
pop
js
adc
push
mov
push
mov
in
adc
cmpsb
test
adc
dec
push
pushl
inc
xchg
jne
mov
jge
test
adc
jmp
enter
nop
inc
inc
loop
inc
cmp
cmp
into
jle
stc
enter
push
xor
mov
jns
jle
or
xchg
mov
repz
jg
int
fsubs
pop
inc
jmp
adc
pop
insl
mov
aas
rorb
or
popf
inc
pop
lret
gs
movsb
shrb
jg
std
dec
sar
sub
mov
out
adc
lock
jae
call
adc
xor
hlt
int3
aas
pop
pop
add
jp
xchg
dec
call
fdivrl
mov
add
adc
pop
dec
call
mov
inc
lock
or
addr16
add
mov
shl
mov
xchg
mov
loop
outsb
push
icebp
or
out
inc
push
push
int
jo
dec
js
push
inc
lods
lahf
push
popf
decl
arpl
movb
add
fwait
lock
aas
sub
mov
sbb
xor
out
jmp
xlat
or
jl
cmpsb
jg
negl
mov
mov
jne
daa
clc
into
loope
cmp
xor
rcll
aad
or
ljmp
xor
mov
mov
mov
fists
sbb
pop
jne
movsb
out
push
inc
dec
insb
push
das
ss
sbb
sti
stc
shll
sarl
pushl
arpl
lahf
mov
push
adc
adc
outsl
jmp
xor
sub
push
sbb
out
out
jg
arpl
adc
in
pusha
sub
cmpsl
sti
push
lods
lahf
jbe
pop
fsubrs
cmp
daa
sbb
sahf
sbb
cmp
mov
lret
cmpsb
push
mov
cmp
mov
and
mov
cld
and
push
jle
adc
pop
xor
sahf
flds
ja
mov
cmp
cld
cmpsl
mov
xlat
flds
sbb
mov
pop
jle
xor
cmp
jno
and
call
test
lcall
xchg
pop
sub
mov
sbb
mov
mov
xchg
mov
pushf
lock
incb
inc
sbb
mov
out
fsubrl
sub
lret
sbb
pop
jbe
out
loopne
cld
fildll
in
lret
sub
arpl
and
adc
add
fsubs
cmp
cmp
xchg
mov
fucomp
into
mulb
outsl
xchg
jae
fistpll
loopne
fcomp
inc
sub
lods
inc
or
sbb
stos
push
mov
or
xor
jmp
and
push
loope
hlt
test
iret
ja
or
inc
rolb
ret
sbb
dec
sbb
sbb
sub
cmp
pop
incl
addr16
rclb
fbstp
sahf
cltd
or
mov
dec
or
pusha
jg
das
ret
fwait
addb
dec
shrl
loope
rcrl
mov
mov
cmp
call
jge
jl
xchg
jae
xor
fildl
dec
adc
mov
cli
sarb
ljmp
and
pop
and
push
popl
mov
xor
loopne
clc
sbb
subl
insb
shlb
dec
or
xchg
xor
jge
jnp
or
jmp
inc
and
or
ret
cmp
push
fcoms
sub
pop
xor
negl
pusha
test
imul
xchg
push
mov
inc
xor
cmp
push
jg
push
xchg
jno
lahf
push
inc
pop
mov
xor
add
cmpsb
into
rcrl
or
or
or
jge
xchg
sbb
xor
ljmp
dec
xchg
and
xchg
mov
and
jno
lea
mov
jg
addr16
das
fisttpl
lock
pop
mov
inc
push
dec
or
mov
push
cmp
pusha
loope
sbb
sub
mov
mov
add
mov
imul
jg
fiadds
test
sbb
lcall
clc
aas
and
pushf
xor
push
int
cli
ja
int
repnz
dec
mov
adc
jle
xchg
icebp
aas
ret
std
test
das
xor
in
aaa
push
or
jg
add
stos
data16
sbb
call
dec
ss
push
in
cwtl
jo
popf
dec
sarb
test
insb
outsb
std
lcall
cmove
xor
sub
rorb
inc
pop
sbb
and
loope
out
lret
add
out
jnp
fistpll
push
xor
jl
jle
inc
ja
mov
aaa
or
mov
jg
mov
push
jmp
adc
mov
jl
data16
fisttps
sbb
cmp
jmp
ss
jno
sub
jnp
icebp
or
pop
mov
movaps
jnp
decl
lcall
dec
jns
in
sahf
dec
jbe
jecxz
jbe
pop
sbb
xchg
popf
mov
leave
xor
jmp
bound
out
cmp
inc
sub
and
sbb
repnz
xabort
lock
sbb
dec
bound
and
cmpsl
mov
xor
pop
xor
add
pop
faddl
pop
adc
and
fstps
mov
cli
fists
cmp
jmp
cmp
or
mov
mov
mov
jecxz
loope
pop
inc
jmp
push
adc
inc
dec
adc
in
mov
inc
pop
lahf
xor
sbb
sbb
pop
pop
ss
hlt
jbe
in
fdivrl
and
or
inc
pop
fsts
movsl
loop
add
add
lahf
mov
push
daa
dec
pop
repnz
fldenv
hlt
ret
inc
lcall
lods
mov
aas
shl
imul
in
adc
movsl
dec
loope
sti
jg
in
stos
in
inc
mov
addr16
imul
adc
insl
push
out
add
pop
bound
adc
dec
in
dec
xor
incb
leave
lea
xchg
into
sub
ret
lds
je
ret
cmp
jae
jge
jg
mov
xchg
lea
sub
aas
loopne
fistps
aas
shll
pop
jnp
fwait
add
and
mov
sbb
mov
idiv
icebp
call
xor
pusha
imul
inc
or
cmpsl
cli
pop
mov
mov
imul
out
or
mov
push
imul
jae
push
push
bound
dec
cmp
imul
pop
std
jnp
cmp
sub
mov
and
jb
cld
dec
cs
adc
and
xor
or
cmpb
jmp
out
inc
mov
out
daa
jg
cli
lret
xor
and
add
js
clc
test
das
loopne
sbb
mov
insl
cmp
dec
mov
gs
mov
jecxz
add
cs
jp
xor
addl
push
mov
xlat
lock
je
jg
mov
imul
push
fsts
sti
inc
mov
dec
pop
pop
cmpsb
add
addr16
iret
ret
dec
xchg
call
outsl
das
enter
sub
dec
dec
inc
jmp
es
push
outsb
loopne
stc
pop
pushf
movsb
add
mov
cmc
jge
jnp
inc
jbe
call
test
mov
or
stc
push
hlt
cltd
repnz
jb
std
dec
sub
jmp
or
add
clc
repnz
lods
jns
pusha
dec
cmp
jg
mov
sbb
leave
add
loop
addr16
push
jno
std
filds
fisubrs
cmp
push
test
add
pusha
stos
gs
adc
fistps
jmp
out
xor
add
xchg
lods
pop
insb
pop
imul
pop
stc
mov
insl
jmp
mov
mov
aad
lea
jle
outsb
sti
dec
dec
imul
loopne
out
xor
ja
out
pop
das
test
lock
dec
xchg
push
sbb
xor
test
andl
fwait
push
mov
in
lcall
loopne
ja
sti
leave
cmp
or
fs
jbe
lret
dec
jg
jnp
mov
xlat
add
orl
dec
out
and
jl
sub
add
imul
in
decl
popf
mov
xchg
push
lods
push
jg
popl
clc
incb
es
cld
dec
mov
xchg
push
stos
push
daa
inc
mov
ret
lds
jg
mov
dec
mov
or
lods
sti
pusha
insl
jae
dec
push
stos
mov
adc
movsb
mov
out
sbb
pop
jae
arpl
inc
scas
pop
fs
add
pop
movsl
outsl
adc
outsl
icebp
in
in
xchg
icebp
jnp
enter
imul
pop
cld
std
ss
sbb
or
decb
fmul
pusha
inc
jnp
push
jge
out
lock
cmp
in
xor
scas
movsb
and
xor
aad
pop
hlt
lret
and
and
leave
sbb
inc
loope
loope
loop
lcall
and
cli
inc
negl
sar
pop
stos
and
xor
cli
clc
iret
or
bound
add
hlt
aas
adc
scas
lret
fstl
test
jns
cmpsb
pusha
out
hlt
xor
dec
mov
adc
loopne
push
fistpll
xchg
insl
aaa
ficoml
mov
pusha
arpl
call
fisttpll
insl
hlt
jle
mov
mov
cmp
jnp
push
gs
xchg
add
sbb
imul
xchg
cs
mov
or
xor
es
push
dec
out
inc
adc
hlt
psraw
fs
mov
mov
pop
testl
inc
mov
lock
xor
xor
pop
in
ret
cmp
cmp
mov
dec
xchg
sahf
insl
ud0
in
lea
lahf
push
xchg
stos
mov
call
sbb
jnp
pusha
xchg
aad
enter
loopne
mov
out
lahf
lods
mov
arpl
shlb
clc
aas
add
ficompl
mov
jae
lods
lock
and
call
xor
jle
orl
push
push
enter
pop
mov
jmp
aad
into
leave
jne
fcompl
lock
cmp
sbbb
rorb
jo
out
jo
sti
pop
leave
mov
and
dec
jns
cmp
jg
repz
js
std
inc
leave
xor
lock
in
mov
push
push
lahf
pop
inc
outsl
daa
repz
mov
cwtl
lds
in
popa
sti
fucomip
testl
push
inc
or
sub
cs
jo
jns
sub
jecxz
pop
shrb
sbb
add
lock
cld
dec
sbb
in
jle
nop
loopne
mov
dec
pop
pop
loope
or
push
nopl
jle
icebp
cmc
fistps
mov
pop
push
adc
jne
jne
shl
or
fucom
mov
out
rorb
jg
mov
sbb
flds
xchg
sar
cmc
push
in
jns
ror
pop
or
sbb
out
push
jp
sub
lret
test
lods
inc
out
inc
stc
inc
lods
lods
out
mov
stos
dec
test
jg
pop
lret
mov
mov
fbstp
jae
call
fmulp
xor
xchg
insb
imul
mov
pavgb
pop
xor
les
outsl
icebp
lock
mov
sbb
imul
add
aas
or
lretw
in
insl
ret
andl
jg
fsubrs
push
push
jg
push
pop
js
loope
xlat
testb
xchg
je
pop
mov
in
cli
decl
push
into
mov
add
rclb
in
push
mov
stos
jbe
and
aas
xor
adc
sub
out
loop
sbb
lret
sbb
adc
fs
push
je
mov
out
lcall
jne
js
jle
imul
jo
arpl
lods
insl
or
clc
aaa
xchg
sti
sbb
test
add
fwait
or
cmp
stc
adc
sbb
stos
mov
outsl
or
push
fwait
fs
dec
fs
pop
out
cwtl
push
dec
xor
xor
clc
orl
rcrb
shlb
js
jecxz
or
push
imulb
adc
sbbl
out
pop
sbb
std
and
mov
loopne
push
les
orb
xor
sbb
pop
or
fnsave
mov
test
push
scas
mov
push
jle
dec
jmp
shrb
dec
lea
xchg
adc
mov
lock
add
clc
outsl
xor
sti
cmc
dec
movb
jecxz
add
sbb
xor
stos
into
pop
fwait
lods
ja
jo
out
jno
add
aam
xchg
xor
je
mov
fcomps
sahf
or
pop
mov
or
dec
fists
lock
mov
mov
imul
mov
iret
lea
out
fldl
fnsave
pop
xor
sub
xchg
aas
cmpsb
div
stos
lods
adc
addr16
jo
popa
sbb
stos
pop
pop
or
mov
or
add
ja
push
cmpsb
pusha
adc
pop
ret
cld
inc
sahf
sbbb
sbb
push
xor
or
pop
imul
int
dec
jns
shrb
dec
xchg
ds
mov
aaa
mov
pop
sub
lret
out
jmp
sub
inc
pushf
fmul
sub
sbb
jg
xchg
dec
cmpsl
movsb
xorl
stos
push
add
call
in
lods
test
or
sahf
jecxz
scas
test
aas
lds
ljmp
pop
outsl
adc
lahf
loop
imul
xchg
lock
jnp
lahf
push
icebp
and
fwait
pop
ret
add
dec
xchg
mov
mov
mov
outsl
popa
subb
test
repnz
mov
lods
rorl
push
pop
scas
or
sahf
jg
and
pop
or
mov
loopne
add
sarb
or
add
jp
outsb
sub
fdivrl
incb
cli
out
inc
mov
loopne
ret
xchg
shrd
aaa
inc
cmp
decl
sub
ljmp
cmp
jp
out
jecxz
and
jns
out
push
shrl
lds
mov
push
ret
ja
xchg
sti
sarl
xor
es
fs
icebp
jg
push
inc
dec
scas
aaa
hlt
es
clc
adc
cmp
out
jno
imul
fidivl
xchg
insl
ss
scas
sub
xor
rcll
and
movsb
dec
mov
fistps
mov
inc
test
jge
or
imul
inc
loope
mov
out
sub
push
ljmp
push
aas
adc
xor
incl
daa
lock
movsb
push
test
lcall
cmpsb
sub
dec
push
sbb
fdivl
decl
pop
push
pop
subl
std
jge
pop
cmp
mov
pusha
test
das
aas
pop
std
sbb
mov
pop
or
jmp
cld
out
and
cmp
jle
inc
jmp
pop
clc
xchg
sahf
out
xchg
push
data16
xchg
and
repz
cmp
mov
andl
hlt
mov
jo
xor
cli
stos
mov
dec
out
jg
jmp
jo
dec
faddl
xor
pop
aas
sti
popa
add
xchg
aaa
nop
pop
inc
xabort
decb
rol
sub
mov
and
test
mov
ljmp
jecxz
outsb
cli
mov
pop
sub
inc
ss
jl
mov
aad
mov
ret
cmp
pop
push
dec
icebp
aas
push
pop
add
sbb
dec
rol
inc
aas
shrl
pop
jl
cwtl
loopne
cltd
loop
sbb
shrl
sbb
and
inc
fnstsw
shrb
mov
aam
in
call
xchg
add
imul
sub
repz
arpl
lods
aas
add
add
jg
addr16
push
les
push
sbb
xor
and
imul
mov
shll
cmp
xchg
push
jno
pop
ds
inc
mov
jp
clc
test
sbb
pop
popa
sub
cld
out
js
mov
into
add
stc
jle
mov
fidivrl
add
inc
shrb
xchg
imul
dec
mov
in
push
mov
enter
ret
cmp
mov
stos
and
fwait
sbb
push
icebp
out
lea
hlt
aaa
mov
and
aaa
or
fwait
jmp
jg
pop
jo
cli
push
or
and
pop
cmp
outsl
loopne
call
jbe
arpl
inc
scas
out
cwtl
jns
dec
and
jmp
shlb
adc
jmp
jns
ja
push
in
std
pop
pop
pop
xor
mov
xor
lods
and
inc
jg
int3
adc
addb
enter
mov
cld
dec
add
add
popf
out
push
addr16
mov
inc
jp
cmp
test
push
clc
fucomip
xor
jmp
and
jp
das
repz
add
cmc
inc
addr16
sbb
fdivrp
xlat
cmpsl
jg
filds
test
jg
adc
adc
out
incl
call
cmp
jle
enter
and
es
pop
jns
into
mov
mov
clc
sbb
mov
dec
inc
dec
pop
sub
pop
fisttps
imull
xor
imul
xor
cmova
aam
das
and
incl
aad
cld
test
test
stc
mov
mov
mov
jno
inc
out
es
data16
ret
fisttps
jno
sbb
adc
loopne
mov
mov
lret
inc
aaa
dec
inc
sbb
mov
jmp
push
push
pushl
je
rorl
imull
jmp
dec
test
push
jl
orl
icebp
lahf
pusha
push
lret
andl
sub
jnp
leave
cmp
pop
dec
out
or
jg
cld
inc
mov
mov
cmc
or
stos
outsl
or
xlat
or
dec
adc
cmc
aas
mov
pop
aad
in
fidivrl
xor
and
stos
std
scas
sarl
jmp
lods
pop
jmp
sbb
adc
paddsb
mov
fs
stos
sti
jp
in
ja
adc
mov
sub
or
mov
mov
int3
cli
enter
ret
stos
push
les
mov
js
insl
out
call
dec
lret
imul
test
clc
sbb
jg
pop
test
adc
xchg
xchg
xor
dec
cmp
dec
in
add
lock
loopne
in
outsb
loop
out
xchg
cmp
dec
inc
icebp
loopne
jae
pop
incl
ja
push
leave
aam
into
mov
pop
xor
lock
shr
push
outsl
popl
scas
pop
xchg
cli
jmp
imul
mov
cmpsb
imul
hlt
xchg
xlat
jge
cltd
nop
pop
pushf
cld
cmp
push
cmpsb
sbb
addr16
sarb
sbbl
ret
cmc
jg
add
pop
loope
incb
test
xchg
inc
add
inc
stos
mov
fwait
and
mov
or
mov
push
pop
lock
mov
xchg
push
roll
add
dec
mov
dec
loopne
sbb
xlat
incb
inc
pushl
repnz
stc
xchg
arpl
testb
int3
mov
mov
mov
jno
out
jle
fs
push
cmp
outsl
imulb
inc
jmp
repnz
xchg
mov
stos
arpl
repz
sbb
and
lahf
sbb
xchg
jno
jae
or
pop
testl
push
and
mov
add
add
clc
scas
incl
pop
movsb
outsl
sub
sarb
imul
adc
leave
mov
cmp
shl
aas
adc
cli
dec
pop
jno
sbb
pusha
out
int3
dec
ficoml
push
xor
test
sub
xchg
or
adc
ss
dec
add
cmp
pop
loope
fldenv
test
push
mov
movb
nop
negb
pop
int
adc
push
jnp
mov
outsb
push
lcall
cld
xor
addr16
enterw
jne
push
mov
mov
and
out
cmpsl
out
lock
call
sbbb
shlb
aas
vpmacswd
lods
shld
sarl
mov
adc
pop
ljmp
sbb
outsb
jg
pusha
gs
aas
and
cmpsl
mov
inc
sqrtps
lock
or
and
inc
cld
sub
pop
inc
pop
mov
lret
jmp
pop
mov
dec
and
adc
push
cmp
push
or
push
les
xchg
scas
push
cmp
pop
das
arpl
ds
incl
xchg
mov
sbb
fcmovnbe
ja
jae
sub
or
pop
push
sub
cld
add
and
mov
push
sti
xchg
inc
jnp
xchg
notl
loop
jmp
ljmp
scas
mov
mov
dec
mov
jg
inc
into
adc
jne
psrad
jbe
push
and
iret
mov
adc
scas
xor
mov
outsl
test
add
jmp
iret
sahf
ja
add
and
fisubl
adc
std
mov
adc
das
dec
nop
xor
mov
in
xlat
lods
sub
fnstcw
mov
add
or
jg
and
adc
inc
cmpsb
popf
loope
out
and
jne
sbb
les
adc
out
aaa
xchg
sbb
dec
adcb
test
in
ds
sbb
cmc
psubb
out
fbstp
mov
pop
sub
outsl
add
ja
into
leave
outsb
mov
jl
lcall
push
std
cmp
sbb
aas
add
decl
leave
jno
arpl
pusha
aam
fstpt
jmp
mov
popf
mov
mov
orb
mov
je
pop
jns
fwait
push
or
icebp
pushf
inc
xor
and
mov
or
popf
test
sbb
aad
sbb
adc
outsb
idivl
test
loop
not
jmp
mov
std
mov
outsl
push
iret
ret
les
jns
icebp
jnp
cld
cmp
pop
out
or
fisubs
fldl
or
in
or
es
lock
lods
inc
cld
mov
outsl
xor
das
in
push
sbb
shll
mov
popf
lahf
aaa
icebp
dec
mov
dec
mov
push
movq
sbb
inc
sbbb
xchg
inc
mov
or
mov
mov
mov
cli
xchg
mov
xlat
xor
in
test
fisubl
test
or
pop
sbbl
loopne
shll
cmp
gs
dec
jg
pop
sub
ficoml
xchg
dec
js
pop
mov
jp
jnp
push
pop
xchg
jmp
decb
mov
gs
hlt
stos
gs
jne
loopne
cld
mov
shrl
mov
cli
mulb
mov
jecxz
sahf
lock
sbb
cld
pop
das
js
pusha
jl
mov
add
and
push
idivl
push
mov
ja
rcrb
cmp
lcall
dec
xor
gs
xor
subb
cmp
aas
adc
mov
ljmp
cmp
sbbb
insb
mov
mov
jns
fcomps
sbb
and
das
xor
shr
cmp
test
xorb
sahf
cld
mov
lock
pop
in
enter
leave
bound
inc
pushl
mov
out
jno
jle
adc
mov
or
add
mov
test
jp
leave
int
cld
inc
pop
les
ret
mov
or
ja
popf
mov
int
faddl
or
jno
sbb
aad
push
daa
popa
mov
adc
pop
xchg
ss
cmp
movsl
mov
test
xchg
aaa
popa
sbb
adc
mov
call
shll
mov
decl
insb
dec
stos
inc
xchg
cmpb
fcmovnb
sti
aas
or
cmp
lcall
mov
xchg
jno
jg
sbb
cmp
loopne
pop
das
cmp
mov
movsl
fstl
movsl
dec
out
jbe
gs
movb
iret
mov
lds
lods
sbb
or
jg
sti
idiv
xorl
cmp
push
pop
xor
loopnew
jo
xor
ja
lahf
mov
add
movsl
clc
shlb
mov
shrb
jo
fcomip
xchg
aas
pop
cmp
inc
sbb
adc
push
lahf
or
scas
add
out
int
bound
incl
xchg
scas
jle
jecxz
jle
jle
add
push
ds
addb
and
mov
aas
dec
push
notl
adc
push
pop
stc
cmpsl
stos
mov
and
jg
jmp
shlb
movsl
idivl
mov
sahf
leave
sbb
inc
xor
sarb
inc
jae
push
sbb
jo
pop
sarb
xchg
xchg
lods
ss
int3
leave
aad
stos
mov
or
jne
jne
mov
mov
or
mov
mov
xor
aam
fwait
push
int
push
xchg
cltd
cmp
inc
push
sahf
out
cwtl
bound
jp
jg
icebp
incl
jle
jne
mov
pop
pop
or
jmp
mov
add
out
inc
lds
push
dec
insb
lock
mov
inc
sub
pop
jecxz
loope
sbb
pop
inc
or
mov
xchg
dec
ja
jmp
xor
xorl
icebp
aas
loop
mov
div
mov
outsl
mov
fdivr
add
cmpsl
dec
test
loope
mov
add
imul
sub
pop
xor
ret
and
pop
sub
idivl
fs
aad
sbb
arpl
je,pn
arpl
mov
cmc
popf
in
in
cs
fisubrl
int3
mov
pop
icebp
or
jb
popf
scas
dec
int
add
adc
clc
pop
jmp
xchg
fsubrl
adc
sarl
rclb
mov
insl
ret
popa
je
inc
fstps
cmpsl
fucomip
addr16
nop
mov
xlat
ljmp
mov
hlt
outsl
iret
cli
sti
adc
test
mov
pop
push
rorb
hlt
arpl
lret
jno
out
in
mov
fs
mov
jle
pop
ljmp
mov
loop
outsb
movsb
iret
les
aam
incl
add
inc
aas
pop
xchg
insb
mov
cmp
fdivr
cmp
ret
mov
loope
push
pop
jmp
sbb
mov
sbb
xadd
subl
mov
add
jle
push
jg
add
stc
cltd
lods
push
or
jns
je
push
bound
movsl
inc
jge
rcrl
fstpl
lock
cmp
jb
ret
fcomip
jg
mov
iret
arpl
dec
sub
incl
pop
pushl
xchg
into
sbb
adc
dec
rol
adc
jge,pn
jo
xchg
cli
adc
std
jg
mov
cs
xor
push
mov
out
ja
xchg
push
and
jae
sbb
sbb
negl
xchg
mov
cmp
cli
pop
out
inc
cs
adc
adc
stc
jg
jg
shr
mov
aaa
mov
cmp
ljmp
lret
aam
icebp
popf
mov
stc
loop
shr
cmc
scas
jae
inc
add
xchg
cwtl
inc
std
inc
std
jo
mov
adc
clc
sub
or
add
arpl
pop
add
test
jg
orl
jns
xchg
out
rcrl
pushl
pop
jp
mov
jl
cld
clc
dec
loope
add
stos
xor
add
arpl
inc
mov
clc
lahf
xor
inc
and
dec
andb
mov
or
or
pop
cmp
out
mov
mov
pop
cmp
cmp
or
pop
dec
jg
sti
push
lds
adc
stc
xchg
xor
mov
lret
dec
test
jl
cwtl
adc
add
inc
fistpll
insl
in
mov
mov
dec
jecxz
sahf
cli
inc
jmp
xchg
cmp
pusha
or
lret
sub
jp
bswap
in
sbb
into
rclb
cltd
mov
in
fdivrl
pop
sub
iret
add
or
push
loope
pushf
and
inc
sahf
sub
je
lahf
out
add
and
pop
lcall
pop
adcl
les
push
push
and
push
fildl
adc
shll
sarb
outsl
pop
or
mov
test
jae
daa
fdivr
jmp
xor
xor
mov
cmp
outsl
out
cmp
push
inc
inc
cmp
mov
or
add
pop
jns
aas
cmpsl
outsl
sub
lret
int
in
stc
dec
pop
sub
aaa
pop
push
cmp
pop
rolb
insb
out
filds
sbb
and
out
hlt
dec
int3
dec
div
sar
dec
adc
das
fdivrl
das
neg
mov
mov
pop
adc
leave
pop
cli
mov
popa
aas
call
clc
ja
inc
pop
jne
fwait
cltd
xor
loopne
nop
push
ljmp
stos
ljmp
sahf
sbbb
psubsw
xchg
mov
mov
cmc
aas
ljmp
notl
or
sub
sbb
sbb
or
lahf
int
call
add
popa
pop
repz
outsl
sub
fnstsw
push
mov
lock
hlt
mov
enter
pop
add
cmp
test
das
xor
add
sbb
loopne
fs
rcrl
jbe
and
mov
std
jg
xchg
les
push
stos
out
pop
jbe
mov
dec
push
out
fistps
rorb
adc
call
pop
mov
movsl
mov
adc
jae
add
repnz
mov
add
mulb
xchg
hlt
jae
ja
ljmp
mov
scas
push
mov
hlt
leave
xor
test
cmc
pop
out
mov
out
or
jge
cli
mov
add
adc
cmp
mov
stos
jg
sub
rcll
sti
pop
ljmp
pop
lea
insb
mov
scas
xchg
jnp
out
cmp
and
jg
std
lods
sbb
fmull
pop
pop
jecxz
pop
push
loopne
add
mov
add
es
call
das
add
jmp
popa
test
jl
cs
ja
or
out
sti
sbb
test
imul
sub
mov
lock
jo
adc
lock
and
loopne
inc
ja
dec
sbb
mov
sub
pop
jne
adc
sarl
dec
imul
fildll
dec
and
xor
push
xor
xlat
mov
hlt
inc
sahf
outsb
aad
and
push
arpl
mov
and
incl
inc
or
and
ffreep
loope
imul
sarl
cmpsl
or
aaa
fldt
imul
xor
or
mov
adc
ret
lahf
pushf
or
out
pop
in
std
push
jg
cmpsl
sub
fisttps
mov
clc
sub
jg
cli
fistpll
pop
out
fistpll
sahf
jae
xchg
push
mov
inc
test
mov
fidivrl
mov
mov
data16
xlat
movsl
mov
sarb
sbb
mov
mov
inc
push
insb
mov
not
out
pop
mov
jmp
loop
aaa
iret
push
mov
sbb
es
cli
ud0
hlt
push
stc
mov
insl
mov
loopne
push
lahf
cli
push
mov
js
mov
dec
out
xchg
xor
add
cmp
js
pop
push
mov
ljmp
xor
adc
fistps
adc
aaa
xchg
mov
pshufw
arpl
aad
test
fnstsw
aad
sahf
sub
push
fs
xlat
incl
xor
pop
xorl
xor
cmp
mov
daa
xchg
push
cli
out
push
ss
stos
or
pop
out
pushl
lock
jae
out
ror
int3
in
insb
jg
pop
or
jecxz
sti
not
shrb
xor
bnd
cwtl
cmp
fcmovne
mov
std
push
pop
add
rcrb
xor
cmp
xchg
adc
cmp
mov
popf
addr16
loope
jmp
fstps
mov
lcall
cmpsb
fimull
out
jg
inc
js
push
loope
mov
dec
es
push
aas
mov
push
outsl
mov
scas
pop
cwtl
and
add
pop
arpl
sarl
sub
test
sub
popa
push
pop
mov
pop
out
rorb
xor
cmpsl
cmpsb
fndisi(8087
pop
adc
scas
aam
in
das
lds
std
dec
sti
xchg
push
mov
push
test
xor
pop
mov
or
lret
sarb
and
push
rol
xchg
cmp
aas
mov
insl
loop
xor
mov
jo
int3
leave
xchg
test
jnp
mov
push
dec
add
mov
or
xor
dec
imul
rorl
cmp
test
or
adc
lea
rclb
lock
in
pop
les
pop
mov
ja
jg
xchg
lret
inc
scas
call
xchg
stc
add
lea
push
int
shll
movsb
inc
lea
loop
mov
xorl
jmp
jl
in
or
cs
aam
ja
movsb
ljmp
ficoms
subb
ljmp
mov
popa
test
adc
push
and
in
stos
inc
test
mov
or
add
mov
lock
popa
nop
pop
pop
and
mov
stos
imul
jg
cmp
arpl
iret
mov
or
aad
lea
inc
mov
pusha
arpl
scas
pop
pop
dec
shlb
pop
outsl
jno
sub
jo
cmpb
dec
aas
ret
fdivrl
and
mov
xchg
and
sti
fnsave
mov
xchg
jo
lret
aas
jl
pop
std
lcall
inc
incl
andb
jmp
ja
jg
sti
je
mov
xchg
push
sbbl
pop
pop
cwtl
loop
pop
jg
pop
add
fdivrs
dec
jne
outsl
call
and
loope
pop
cld
addl
inc
pop
jo
cli
add
jmp
or
jl
test
jae
sbb
pop
mov
jb
testl
dec
pop
in
xor
inc
gs
decb
xchg
mov
mov
aad
push
jle
test
fcoml
mov
roll
pop
loope,pn
xor
cmp
jno
push
loopne
mov
icebp
cmc
or
vunpckhps
inc
les
mov
jbe
lahf
push
fldt
lahf
ret
orb
xor
adc
aam
cmp
mov
test
push
ret
ret
ror
jne
jge
push
arpl
jle
cmp
cmpl
mov
inc
aaa
push
repz
jecxz
and
out
pop
lcall
cmp
dec
lcall
sbb
pushf
cmpsl
sarb
jge
push
mov
xor
mov
clc
lcall
std
outsl
loopne
cmpsl
sub
jb
fldl
aam
popa
cs
jge
sti
into
xchg
call
push
push
fdiv
out
jle
out
jno
add
push
xchg
adc
sbb
xchg
es
loop
clc
xlat
sub
cli
addr16
and
cmp
cmp
mov
pop
xchg
jle
pop
mov
cld
mov
icebp
fs
lods
rolb
int3
xor
jecxz
cli
sbb
imul
push
push
in
fistpl
in
ljmp
xchg
push
out
or
xor
jle
push
adc
mov
cld
push
cmp
xor
push
mov
rcrl
in
inc
clc
xchg
bound
aam
sarl
cli
lcall
incl
decb
stos
shlb
sub
cmp
sbb
decl
cmc
xchg
addr16
lret
out
out
xlat
push
sbb
testl
addr16
cmp
dec
dec
outsb
inc
lock
inc
xchg
mov
pop
into
stos
aad
sti
sbb
push
jle
cmp
call
cmp
das
mov
jne
sbb
mov
sbb
inc
daa
scas
push
adc
push
or
incl
addr16
jae
test
mov
addl
mov
pusha
test
mov
in
or
mov
rorb
add
clc
loope
mov
add
or
ljmp
add
mov
or
loopne
mov
scas
sbb
jmp
cltd
mov
sub
xchg
scas
lds
aas
pop
sti
mov
xor
add
push
test
xchg
lret
sbb
add
inc
pop
ljmp
data16
inc
js
popf
cmp
arpl
adc
sti
xchg
pop
mov
repnz
into
mov
adc
sti
xor
cltd
bound
xor
jbe
fildl
push
clc
out
push
aaa
scas
fsub
mov
fstps
mov
jp
or
pop
es
jne
mov
mov
dec
or
sti
andl
cmp
jge
mov
sub
arpl
test
jmp
push
cmc
pop
pop
imul
jg
es
push
test
jp
add
xor
out
sub
outsb
jp
sbb
andb
pushl
lods
mov
mov
fiadds
jmp
push
pop
out
sub
adc
icebp
pop
or
stos
lret
fs
popf
cmc
and
in
cld
cli
jecxz
pop
jge
ret
outsl
add
sarb
sbb
jne
cmp
fbld
clc
imul
into
mov
std
popa
pop
and
jge
xchg
movsw
rclb
sub
jg
add
repz
push
pop
push
cmp
es
jle
fcomps
cld
popf
loopne
ficoml
clc
addb
outsb
pop
pop
xlat
addl
imul
js
add
test
push
call
out
loopne
insl
push
hlt
aad
pop
aaa
or
les
stos
pushl
dec
xchg
das
rorb
jnp
pop
stos
sbb
lahf
ret
pop
cmp
cmc
cmc
ret
testb
aas
fs
arpl
jmp
mov
xchg
stos
mov
sub
lock
mov
js
jnp
jno
sbb
push
mov
sub
in
ss
movsb
xor
fmull
mov
fs
test
pop
or
cli
aaa
orb
popf
xchg
mov
jmp
mov
lret
leave
hlt
or
sar
pop
xchg
jae
shll
std
insb
outsl
dec
xadd
cmp
inc
lcall
clc
dec
dec
and
int3
cmc
aaa
pop
xorb
in
lret
es
stc
movsl
mov
testl
js
test
inc
jg
lock
pop
test
pusha
fsubs
adc
mov
subb
std
add
in
mov
dec
push
cmpl
cmp
dec
outsb
dec
add
inc
outsb
add
cmp
outsl
test
jbe
jo
cmp
pop
faddl
fxch
and
aaa
fimull
sub
push
xor
adc
in
sbb
insb
jl
jb
add
psubsb
pop
xchg
nop
lahf
and
fldl
sbb
cs
ss
data16
or
loope
xchg
jmp
decb
fstps
testl
xor
clc
filds
mov
es
stos
inc
movsb
fidivl
std
mov
mov
add
lock
jo
loopne
out
push
push
int
mov
das
mov
dec
jnp
or
sbb
adc
inc
icebp
xchg
or
sub
std
shrl
lds
out
mov
popf
aaa
jge
adcb
add
decb
pop
outsl
cmp
push
out
xchg
andl
adc
inc
adcl
jne
adc
push
push
dec
outsl
sti
pop
idivl
add
jbe
push
sbb
lcall
testl
push
inc
in
mov
orl
mov
test
int
inc
mov
in
fildll
pushl
pop
ja
out
xor
int3
les
push
cmp
xor
insb
inc
hlt
iret
ljmp
sti
and
jmp
lahf
lock
aaa
rorl
call
adcl
popf
movsl
adc
sbb
aas
mov
out
fs
push
sahf
clc
orb
sbb
out
pop
pop
insl
mov
sub
mov
ret
xor
int3
outsb
sbb
imulb
loopne
add
je
faddp
or
outsb
ud0
sbb
push
cld
sub
add
pushf
sbb
mov
icebp
imul
fldl
jno
mov
loope
xchg
push
cli
pop
lahf
std
jg
sbb
mov
xchg
filds
sub
jg
fistps
inc
inc
jl
int3
cmp
test
cmp
cmp
subb
and
movsb
jno
imul
push
mov
lods
rsm
insl
addl
divb
in
push
lods
in
daa
cli
out
inc
mov
sti
pop
es
shll
outsl
and
jmp
or
cmp
jmp
jmp
in
mov
in
stos
mov
push
jmp
in
mov
leave
sar
dec
push
wbinvd
inc
shll
std
xchg
stos
and
cmp
mov
or
pop
rorl
pop
inc
jg
jmp
sti
test
scas
shlb
jo
sub
sti
pop
adc
and
cmp
ljmp
jg
aaa
pusha
cmp
in
pause
ja
dec
ljmp
addl
jae
lcall
mov
out
repz
aad
jp
cwtl
out
push
inc
lds
aaa
jecxz
sbb
xlat
aam
les
mov
into
sbb
call
push
gs
xchg
test
push
cli
data16
iret
pop
pop
imul
mov
mov
arpl
incl
xor
adc
call
mov
in
lds
adc
icebp
lahf
hlt
aaa
dec
pop
data16
cmc
pop
cmp
outsl
sar
pop
jge
and
leave
or
lock
pop
pop
inc
cmp
or
inc
cld
xor
add
pop
mov
fldt
out
loope
imul
popf
dec
imul
mov
mov
add
xorl
sbb
test
rorl
movsb
jge
sub
sub
pop
sub
sub
cmp
push
rcl
jns
gs
adc
or
mov
push
and
rorb
out
ds
jg
rcll
test
lret
insl
jno
mov
xor
mov
pop
mov
sti
call
adc
add
mov
scas
sub
pop
in
std
mov
hlt
pshufw
stos
cmpsb
mov
sub
jl
mov
mov
push
xor
imul
mov
pop
jae,pt
stos
subl
mov
rorl
imul
shll
xchg
je
dec
das
je
outsl
sub
jg
mov
aas
scas
jmp
aaa
and
outsl
inc
jg
lcall
sub
adc
out
mov
cmpb
xchg
cmp
jp
mov
loopne
popf
mov
enter
ljmp
fstps
fsubrl
cmp
or
test
mov
push
inc
mov
data16
outsl
clc
decl
fnstsw
pop
xor
sub
xchg
dec
and
rorb
addr16
ss
enter
inc
rcrb
or
enter
ja
daa
pop
call
mov
dec
add
mov
push
add
stos
scas
insb
push
adc
adc
lcall
int
es
and
lea
mov
jns
aam
insl
leave
mov
test
pop
loope
dec
fists
scas
pusha
jae
and
sbb
iret
or
pop
add
cltd
pmuludq
add
cmp
frstor
data16
stc
mov
pop
push
je
pop
xorl
jle
pshufw
jl
jl
outsb
push
stc
lret
push
out
inc
sbb
in
lods
out
mov
faddl
call
movsb
cwtl
arpl
inc
iret
or
xchg
std
cvtdq2ps
insb
cmpl
push
mov
add
push
sti
into
adc
inc
push
call
jae
pop
xlat
inc
and
dec
loop
fnstenv
out
or
mull
xor
cmp
outsl
sub
lahf
loopne
sbb
or
mov
sub
mov
stos
cmp
mov
jb
je
outsb
xor
mov
enter
repz
dec
lcall
neg
adc
js
adc
jl
jnp
mov
sti
lahf
andb
pusha
mov
mov
ja
cli
pushl
lea
adc
inc
sbb
mov
push
int3
or
lar
jno
mov
xchg
and
sbb
and
pop
in
dec
mov
inc
test
notl
inc
adc
loope
aaa
out
xchg
sbb
sub
pop
lahf
push
xchg
push
dec
dec
stc
scas
in
pop
jns
in
sbb
or
in
jecxz
addr16
sar
xchg
and
xchg
testb
andl
icebp
ja
inc
and
xchg
cs
jmp
sub
fwait
and
cmp
cld
icebp
fidivrs
cmp
aam
inc
push
knotw
mov
and
out
loopne
or
inc
stos
outsl
pop
cli
push
ret
pop
inc
out
fnstenv
shl
cld
out
mov
and
xchg
int
jno
iret
fisubl
or
lret
jo
aaa
arpl
arpl
mov
xchg
inc
sub
jge
mov
jg
pushf
push
inc
pop
mov
cltd
or
xlat
xchg
test
push
xor
pop
lea
das
xchg
cmp
scas
inc
pop
dec
fbld
aad
in
je
add
mov
das
mov
ja
and
push
sub
jge
lds
aam
sti
lahf
or
mov
mov
dec
jecxz
clc
inc
jle
je
lahf
mov
out
push
mov
fnstsw
shll
dec
fistps
aam
inc
es
testl
cltd
mov
lods
ds
int3
lea
jg
xchg
rorl
sub
out
push
scas
and
push
insl
cmp
std
aam
or
pop
dec
call
cmp
push
aad
pop
shrb
cld
daa
loopne
or
push
mov
mov
lock
pop
jno
xor
int3
ret
in
imul
jge
sbb
sti
nop
inc
sub
cmpsl
ror
aas
ret
mov
sub
movsl
ljmp
lahf
mov
jg
rol
push
jbe
fstl
sti
call
xor
xor
xchg
mov
mov
cltd
fisttpl
mov
cmp
fistps
les
xlat
adc
nop
fisttpl
dec
rcll
jne
shlb
lock
jecxz
daa
dec
push
sti
aam
fxch
and
cmc
outsl
inc
scas
ds
out
sar
mov
xor
enter
movsb
push
outsl
outsb
cltd
sub
push
ret
iret
dec
lock
or
ficompl
out
xor
fstl
ficomps
outsl
in
das
cmpsl
cmp
and
sub
xchg
pop
std
sbb
fmull
loop
mov
sbb
mov
mov
cmpsb
mov
hlt
pop
push
cmp
cmp
jbe
jge
sti
lahf
and
test
les
push
push
test
push
pushl
icebp
xor
sbb
mov
imul
inc
lret
addr16
xor
addb
stos
scas
cs
lahf
stc
xor
pop
xchg
fisttps
mov
push
aad
and
lahf
loope
inc
and
adc
inc
sahf
rcr
rcll
sbb
ror
inc
rorl
sub
dec
jg
fcompl
fistps
xchg
ret
adc
lcall
daa
cs
jge
dec
andl
mov
rol
inc
mov
jle
popf
lock
mov
aas
imul
xchg
loopne
push
adc
mov
pop
popa
fs
inc
iret
lock
add
stos
sub
inc
jmp
icebp
cmp
pop
mov
imul
mov
push
dec
mov
call
jmp
pop
or
inc
fistps
cmp
xlat
sbb
xchg
mov
cli
rclb
xlat
push
jg
sub
inc
outsb
mov
cmpsl
jae
mov
sbb
pushf
inc
iret
cltd
shll
clc
mov
xor
push
inc
jne
lea
add
xchg
cmpsl
inc
ret
loopne
fistps
mov
loopne
adc
cld
lahf
loope
iret
scas
fiadds
xchg
xchg
ds
pop
movsl
sub
decl
sub
decb
sbb
push
mov
xlat
adc
arpl
lcall
sub
and
mov
fcompl
xor
pop
test
lods
cmp
incl
mov
sub
in
cmp
push
test
cli
daa
shlb
std
push
ror
inc
or
mov
cs
mov
movsb
sbb
out
cvtpi2ps
jno
xchg
xor
sbb
xchg
jo
lcall
xor
jg
adc
into
in
add
or
mov
jnp
test
inc
fs
adc
adc
lods
push
clc
adc
in
push
push
dec
mov
jg
divl
push
xlat
ffree
pop
cmp
dec
mov
adc
cmp
cmp
sbb
ret
mov
mov
dec
scas
sub
cld
fistpll
push
icebp
sarb
rcrb
add
inc
mov
sub
inc
int3
mov
pushf
xchg
test
jne
test
mov
in
push
aas
les
in
addl
push
cwtl
arpl
incl
add
rolb
dec
lock
mov
cmp
sti
gs
cld
add
adc
jg
sub
mov
cmp
pop
stos
addb
orl
mov
push
js
fsubl
in
fldenv
inc
inc
xor
adc
lods
dec
adc
add
pushl
push
mov
ljmp
lret
in
popl
jns
scas
push
sbb
mov
mov
jmp
mov
fdiv
cld
aad
popa
movaps
outsl
out
xchg
cli
repz
and
mov
das
mov
xchg
lret
adc
cmp
and
repz
stc
and
cltd
mov
into
mov
test
cli
je
jle
mov
adc
sub
scas
cmp
out
and
mov
push
push
and
ljmp
aas
call
outsb
loopne
ret
xchg
popf
sub
leave
jmp
cld
mov
and
sti
jns
pop
in
lock
cwtl
aad
aam
xor
xor
or
mov
sub
das
inc
xorb
cld
inc
jmp
gs
fistps
in
add
ror
roll
cli
prefetchnta
inc
adc
enter
outsl
cmp
xor
push
jle
mov
sub
pop
add
repnz
mov
pop
dec
push
fisubl
pop
hlt
xchg
pop
jg,pt
icebp
pop
xchg
movsb
add
sti
jg
std
push
lods
pop
xor
scas
mov
icebp
mov
cld
ja
add
idivb
iret
mov
pop
mov
mov
add
sbb
add
mov
addr16
mov
mov
jmp
out
out
cs
mov
pop
mov
popa
mov
rorl
mov
or
push
sbb
pusha
dec
cmc
lret
add
xor
push
rcll
mov
or
pop
cmp
mov
enter
jl
jnp
mov
mov
test
bound
icebp
adc
aad
popf
adc
ljmp
gs
mov
test
rcll
mov
ss
sbb
clc
jg
out
push
or
enter
mov
sbb
cmp
adc
call
idivb
dec
xchg
icebp
sti
cmpsl
mov
int
insb
jne
inc
and
outsl
sub
mov
push
pop
push
decl
leave
clc
push
push
pop
adc
jle
lret
xchg
adc
ja
shll
ja
fs
add
dec
ror
fdivrl
in
sub
iret
pop
loopne
ja
test
cli
fs
fs
inc
out
push
pop
ret
or
lods
lret
pop
xor
jae
pop
addr16
mov
mov
dec
rcr
sbb
cmp
loope
loopne
cld
pop
pop
call
pop
xchg
lret
or
or
orl
pop
je
les
addr16
fidivl
neg
popf
lods
aas
pushf
test
faddp
insl
pop
icebp
dec
mov
stos
cs
pusha
sbbl
cs
and
test
mov
std
add
out
in
imul
decl
ljmp
in
es
mov
fisttps
add
arpl
std
insl
mov
ljmp
rcll
xchg
add
or
scas
adc
lahf
in
jecxz
cmp
push
jmp
pushf
jmp
loop
in
mov
shl
mov
sti
psllq
xor
insl
pop
xor
add
xor
and
cmp
idivl
ljmp
idivl
and
cmp
adc
sbb
iret
icebp
idiv
or
in
iret
xor
xchg
add
inc
scas
cltd
addr16
loopne
mov
lds
data16
shr
jnp
jg
sub
movsb
cmp
xor
ret
mov
sti
push
pop
dec
cli
pop
imul
sarl
and
push
xor
mov
xor
aas
mov
jg
push
pop
mov
movsl
jbe
push
es
cmp
movsl
pop
aaa
lock
sarl
dec
jnp
cmp
repz
in
lds
cmp
call
out
mov
add
push
int3
ds
and
mov
mov
ja
xlat
pushl
and
and
es
mov
pop
loop
sarl
call
lods
add
jbe
cmc
jae
into
loopne
dec
es
scas
fists
out
jno
je
add
std
push
cli
or
scas
xorl
leave
rcl
inc
out
outsb
dec
imul
daa
and
cmpsb
push
adc
mov
push
xlat
cmpsl
lods
mov
out
rorl
sbb
loop
cli
scas
push
mov
fwait
in
mov
sbb
out
jg
cmp
loop
mov
xchg
xor
fwait
aas
rcrb
jo
fnsave
or
stos
pop
xchg
mov
xchg
movsb
clc
pop
negl
cmpsb
cld
jle
pop
push
mov
popf
pushf
ja
mov
sub
or
out
or
in
int3
insl
rcrb
adc
mov
or
gs
std
add
ret
enter
cmpsl
js
movsb
std
lods
push
cld
notb
mov
arpl
lods
shll
jmp
arpl
idivl
pop
incl
xlat
ds
cmp
stc
push
push
dec
aad
stc
jo
cmp
dec
daa
sub
or
les
mov
mov
jecxz
int3
add
jg
pop
push
adc
push
mov
sti
sub
sub
push
add
out
mov
testl
sbb
dec
rorl
and
or
mov
ja
or
mov
movsb
sti
and
in
jo
xchg
xchg
or
test
les
cwtl
inc
arpl
add
cmp
pop
mov
pop
pop
adc
cmp
in
jg
push
jecxz
cmp
pop
add
in
cli
cmp
movsb
es
sahf
sub
jge
lods
outsl
pop
jmp
or
pop
dec
je
and
outsl
in
inc
sbb
filds
push
scas
clc
push
inc
xor
cli
cmp
repz
clc
jle
sbb
cwtl
mov
mov
inc
aas
sahf
push
lcall
mov
stos
mov
dec
call
cld
push
dec
and
adc
dec
leave
or
mov
cmp
outsl
pandn
xor
push
sbb
push
pop
pop
loop
pop
cmp
cmp
xor
inc
imul
dec
inc
sub
aaa
jb
jno
push
sbb
stc
ret
sti
sbb
adc
in
cmpsb
movntps
loope
push
pusha
hlt
push
testl
adc
adc
cld
xchg
test
out
lock
and
mov
jno
inc
loopne
inc
pop
pop
xor
cmpsl
movsb
movsl
adc
js
adc
inc
sub
iret
mov
imul
cmpsl
ret
xlat
or
pop
test
push
pop
test
and
lds
lock
orb
push
fists
aaa
cwtl
test
mov
leave
fiadds
movsl
push
popf
sahf
test
mov
nop
in
imul
inc
pavgb
sarb
decl
insl
les
testb
addb
sbb
filds
lods
mov
scas
cld
push
sub
call
fnsave
mov
sbb
aaa
sbb
mov
push
lahf
mov
ljmp
push
aas
mov
cwtl
cmp
orb
cld
xchg
leave
cmp
popa
jno
xlat
leave
pop
inc
rcll
aad
mov
cli
dec
faddl
and
sbbb
or
das
icebp
pop
shr
mov
sahf
dec
test
push
pop
add
clc
out
mov
sbb
movsb
fdivrs
sub
mov
movsb
dec
loope
lcall
in
pushl
jo
mov
incb
cmp
nop
mov
ret
adc
sbb
dec
ret
fadds
cmp
xchg
jmp
cltd
mov
aas
inc
xchg
mov
arpl
incl
add
pop
ret
cmp
push
call
mov
enter
or
jns
clc
idivb
sbb
fadd
inc
lahf
jae
xchg
sub
sarl
push
shll
rcrb
push
or
cmpsl
mov
cli
stos
insl
mov
xchg
test
sbb
fildll
push
stos
mov
push
lcall
and
je
xchg
dec
xchg
mov
sbb
mov
cltd
das
mov
ja
ja
les
inc
cli
iret
pop
aas
adc
cmp
sub
stc
rcrb
jp
cli
dec
xor
adc
test
and
xchg
mov
sub
xchg
pop
jg
test
aas
js
popa
push
cli
in
mov
jo
xor
push
pop
inc
inc
scas
xor
aas
negl
sbb
push
push
fidivrl
dec
jo
popf
cmc
cmp
loop
mov
mov
jmp
roll
mov
rcr
js
sub
mov
dec
mov
ds
lret
daa
insl
mov
lcall
ljmp
fwait
jge
and
out
or
dec
das
or
xchg
lret
loopne
or
and
add
add
pop
loopne
clc
iret
adc
mov
xchg
jo
ficoms
icebp
in
loop
insb
mov
and
shl
mov
push
push
mov
lahf
icebp
jmp
out
addr16
adc
pop
mov
jbe
and
jmp
dec
jle
lock
int3
sub
nop
jne
jg
in
dec
lret
push
mov
test
fnstcw
mov
aas
mov
adc
popa
and
adc
and
lcall
js
xchg
adc
bound
or
sbb
mov
jg
icebp
lahf
cmp
lahf
mov
ja
pop
out
sbb
std
out
add
xchg
mov
mov
std
notl
stos
mov
out
lret
mov
sub
mov
push
and
inc
loopne
pusha
dec
cmpb
call
lods
inc
int3
push
fnstcw
push
invlpg
stos
xlat
jmp
addr16
pop
inc
mov
inc
inc
mov
out
out
jns
xchg
insl
add
ret
fists
mov
mov
adc
jecxz
pusha
out
cwtl
js
jg
addr16
lock
xorl
xchg
imul
mov
loope
pop
cmp
rolb
mov
mov
jecxz
dec
sub
sbb
arpl
mov
negl
into
jbe
ds
xor
lahf
pop
push
popf
adc
fiadds
out
sub
xchg
addl
push
mov
sub
jecxz
fdivrs
add
es
inc
xchg
loop
ret
div
imul
or
cmp
popf
shlb
adc
inc
call
add
push
and
test
popl
loope
add
jnp
pusha
sub
add
cmpsl
sbb
addb
ja
roll
stc
xchg
or
add
pop
in
mov
rorb
xor
pop
aas
aam
add
pushf
xor
sbb
icebp
cwtl
cld
lahf
add
scas
idivb
sarl
cmp
pusha
jo
cmp
pop
jecxz
push
adc
gs
mov
call
jbe
push
jb
aam
inc
ffreep
mov
fists
addr16
aas
cmc
movsb
inc
xor
loopne
jns
xor
sbb
iret
cli
lret
add
jl
hlt
jecxz
mov
cs
mov
jo
incl
in
jnp
mov
decb
push
jp
sti
xlat
or
cmp
mov
call
stos
adc
cli
or
sbb
sbb
push
cmc
pop
ud0
fldcw
adc
sub
jnp
adc
filds
das
push
cmpsb
pop
popaw
mov
lahf
lret
fwait
adc
fwait
cwtl
enter
scas
pop
rcll
fbstp
sbb
mov
cs
fimuls
jg
std
or
xlat
icebp
pop
xor
push
push
fsubrl
testb
es
push
daa
push
lcall
cmc
xlat
hlt
mov
inc
outsb
int3
enter
push
and
push
mov
arpl
pop
std
mov
sbb
cs
out
loope
mov
push
mov
pop
cltd
in
test
jne
mov
lahf
inc
push
inc
mov
lock
pop
ss
sahf
jle
mov
shlb
cwtl
mov
inc
mov
mov
inc
mov
adc
mov
iret
cltd
clc
insl
notl
pop
inc
jno
lock
sub
mov
testl
jmp
int3
movb
jp
mov
int
das
jo
comiss
jnp
pop
ret
and
hlt
mov
lock
cmp
xchg
mov
icebp
outsl
pop
fistpl
sub
in
sub
and
shll
cwtd
incl
jp
test
iret
aad
cltd
jnp
loop
stos
fnsave
cmpsl
jne
mov
xchg
push
jmp
xchg
xchg
mov
fmull
das
fs
sbbl
adcb
xchg
sbb
int
xchg
mov
mov
mov
divl
mov
push
popa
sbbl
mov
fists
out
aad
and
sbb
in
stos
repz
xor
mov
outsl
or
mov
sbb
push
and
pop
sbb
and
inc
subb
aaa
ret
or
movsl
mov
lock
push
pop
fistps
mov
xchg
cmp
mov
xchg
sti
push
leave
fimuls
insl
sti
ja
push
rorb
jne
add
push
push
hlt
jg
xchg
lock
add
addr16
in
add
sub
sub
jmp
jae
mov
xlat
mov
inc
and
dec
jg
mov
inc
fcoms
dec
sub
push
mov
mov
lret
in
lcall
out
add
sub
dec
adc
sub
pusha
add
ja
pushf
mov
cld
push
push
sbb
cltd
aam
cli
out
in
push
inc
jg
or
add
test
mov
test
mov
jns
ds
gs
sbb
xor
cli
cmc
cmpl
sbb
add
gs
pushl
xchg
aad
adc
es
dec
sbbb
cli
cli
filds
push
cmpl
test
fs
cmc
not
imul
xor
fbld
ljmp
pusha
aad
lcall
jns
ds
subb
sbb
cmc
adc
mov
xchg
lcall
mov
mov
es
mov
sbb
test
scas
cltd
fbld
aad
hlt
pop
cwtl
push
push
lcall
scas
jne
or
cmc
es
cli
test
loop
fs
fadd
sbb
ss
pop
and
cmpb
imul
push
or
sbb
lods
lcall
add
gs
loop,pn
mov
add
xorl
insl
js
fists
pusha
rorl
jo
adcb
imul
add
lcall
jns
pusha
add
outsb
dec
imul
sbb
dec
push
mov
dec
fbld
cli
nop
scas
lods
mov
shr
sbb
pop
or
cli
mov
jns
andl
orb
mov
lcall
std
or
fisttps
fdivl
clc
mov
insl
fbstp
pusha
cltd
cmc
test
outsl
push
ret
das
mov
jns
imul
xchg
test
or
mov
inc
pusha
adc
fdivl
repnz
jl
gs
fcomip
adc
scas
cltd
ds
add
push
mov
or
fs
test
mov
mov
add
add
filds
imul
and
lock
or
jne
cmc
outsl
in
aaa
adc
imul
mov
jns
test
mov
adc
push
mov
addl
xor
adcl
xor
cld
jne
mov
fldt
mov
lods
adc
loopne
add
in
push
cltd
lods
xchg
pusha
mov
add
ds
dec
cs
sub
fs
jle
pop
or
sub
jne
gs
jns
aad
pop
bound
or
cli
aam
xchg
gs
sbb
test
imul
cmc
push
fistpll
shll
mov
mov
loope
insb
mov
mov
or
mov
pusha
pushf
scas
imul
cwtl
fs
push
stos
test
push
push
scas
cwtl
dec
or
fidivl
pop
ds
es
push
adc
imul
ficoms
inc
pushf
adc
gs
sub
insl
cli
cltd
ficoml
mov
or
cwtl
inc
push
pusha
adc
xorl
in
shrl
jb
sub
outsb
xchg
mov
add
pop
add
lock
add
daa
push
sub
mov
jg
xchg
mov
cli
add
xchg
addr16
xchg
cmp
mov
fchs
rol
mov
lret
pop
inc
test
mov
xor
movb
loope
sub
mov
push
adc
inc
mov
push
inc
or
sbb
stos
inc
lcall
lock
fs
lock
jl
cmp
sub
mov
and
pusha
sub
mov
gs
pop
subl
movsb
cmp
inc
adc
push
cmp
test
cli
inc
adc
lcall
add
orb
popa
xor
sahf
xor
cmpsb
jp
roll
add
jl
pusha
lods
push
ds
loop
mov
cli
data16
sub
scas
test
insl
and
dec
fs
dec
push
dec
ss
sub
mov
testb
jmp
pop
aad
mov
mov
sbb
xor
loop
pusha
adcb
inc
loop
rol
test
jb
sbb
aam
jbe
inc
dec
pusha
fisubl
pushf
push
pop
xchg
lcall
stos
fisubs
mov
adc
fidivl
or
jle
mov
sub
adc
out
fistps
dec
pusha
sbb
lods
push
cli
jne
insb
incb
faddl
or
loope
je
dec
push
rcll
xor
jo
add
cltd
repnz
cmp
hlt
and
insb
or
xor
in
jns
add
pop
push
xchg
bnd
fs
xchg
popf
dec
or
andb
fsubs
pusha
sahf
sbb
and
fcmovbe
push
test
push
jbe
ret
xchg
ss
mov
lret
es
call
sbb
sub
lods
xchg
inc
orb
aam
mov
cmpsb
es
dec
pusha
ret
cli
push
sbb
or
add
addl
add
mov
fsubs
pushf
repnz
aad
add
insl
or
mov
push
call
mov
cmc
lods
andb
ss
rorl
push
ljmp
lock
jbe
adc
ret
push
popa
push
lods
lcall
pop
mov
jl
cmc
scas
inc
jno
cmpsb
and
adc
hlt
ds
push
or
inc
ljmp
push
mov
jle
cli
insl
adc
mov
pushf
jns
jns
addl
sbb
mov
cli
aad
mov
mov
sub
es
push
mov
mov
test
outsb
addl
xchg
inc
mov
add
and
js
mov
pushf
mov
xchg
push
lret
mov
mov
gs
xchg
push
cltd
xor
sahf
sti
call
dec
mov
or
pusha
jnp
adc
mov
fsubs
cltd
xor
xor
cmp
push
push
mov
fistps
test
add
add
push
test
scas
scas
add
dec
in
loop
mov
bound
stos
dec
push
loopne
pop
cltd
adc
test
mov
jbe
lock
sarl
push
test
or
hlt
cs
push
jns
test
pop
push
insl
pop
cmp
mov
adc
enter
jnp
pusha
dec
in
lock
pop
aam
mov
ret
aam
pusha
jo
lock
outsb
into
xor
cltd
push
mov
insl
xor
xor
cli
subb
cli
int
sub
sbb
jb
sbb
dec
dec
adc
or
inc
xchg
fiaddl
gs
push
or
cmp
xorl
loop
mov
popa
cmpsb
es
movsb
les
cmp
sahf
scas
test
and
push
push
pop
dec
push
fisttpll
or
sbbl
xchg
xchg
stos
lret
xchg
dec
in
mov
cmp
xchg
or
fwait
sbb
cltd
insl
test
jne
add
add
mov
xchg
lcall
mov
fs
xor
and
outsb
jns
stos
or
xor
inc
les
fwait
sahf
sahf
mov
imul
dec
scas
adc
data16
jbe
mov
mov
push
inc
xchg
mov
add
jp
or
jo
xchg
push
loopne
sbb
cmp
call
pop
adc
cmpsb
insl
adc
je
inc
xchg
aad
movb
push
add
sbbb
mov
sbbl
gs
int3
mov
add
mov
jbe
xor
push
inc
out
adc
pusha
or
pusha
es
mov
inc
and
mov
int3
push
fists
cmp
adc
dec
xorb
or
xchg
loopne
push
mov
push
cltd
dec
dec
movb
add
orb
mov
cltd
pop
test
loop
orl
sahf
loopne
imul
pop
sbb
xlat
inc
push
sub
adc
aad
mov
in
xor
pop
in
jbe
movb
pusha
adcb
insl
add
push
andl
jo
or
and
push
test
sbb
scas
push
or
insb
jle
push
add
pop
mov
shlb
mov
mov
cltd
jns
push
xor
int3
inc
fmull
test
rorb
xor
or
bound
scas
add
lods
push
xor
orb
mov
mov
shll
jl
fimuls
lds
in
push
push
ret
fadds
adc
testl
sbb
lea
mov
mov
in
mov
sub
add
xor
sub
mov
dec
mov
test
jl
test
pop
jg
mov
imul
add
inc
lock
dec
cmp
sbb
pop
mov
adc
inc
xor
pop
bound
mov
and
dec
or
or
push
js
andb
ljmp
cli
data16
push
xchg
dec
sub
testb
inc
es
mov
xchg
jne
les
mov
fimull
fbld
ds
or
dec
ss
mov
xchg
dec
gs
mov
rcll
dec
jb
mov
cwtl
or
mov
loop
stos
sub
das
or
push
push
out
out
pushf
push
mov
stos
or
xor
mov
lods
sbb
rorl
xor
mov
dec
outsb
push
test
sbb
or
into
call
adc
mov
lcall
in
mov
and
gs
lods
jb
pop
bnd
mov
dec
mov
aad
fcoms
inc
scas
mov
xor
jne
pusha
aad
xor
push
scas
or
aad
add
add
cmpb
mov
add
add
jne
xor
cs
filds
sub
jp
sub
or
ds
adc
aad
add
nop
mov
adcl
insl
sahf
ds
mov
mov
inc
or
jns
dec
xchg
inc
in
sbb
sbbb
or
stos
xchg
adc
rclb
es
add
and
mov
lea
ds
pusha
xchg
les
scas
jne
xor
loopne
push
mov
imul
push
mov
xor
nop
ss
mov
sbb
into
cli
jp
imul
es
xchg
popa
xor
push
mov
lods
dec
cmp
call
push
adc
sub
je
test
xor
mov
pop
inc
xorl
add
lock
inc
or
into
loop
jns
mov
inc
cmp
xor
insl
dec
shlb
out
out
aam
and
and
inc
mov
xchg
lcall
xchg
scas
int3
add
and
roll
fs
adc
test
push
jns
gs
pop
cmc
ds
cwtl
cltd
rclb
push
adc
xor
mov
adc
movb
call
mov
add
fsubrl
mov
adc
xor
lods
adc
mov
dec
push
test
add
add
inc
adc
scas
sbbl
sbb
pushf
push
mov
insl
js
cmpl
xor
cmc
ljmp
adc
and
dec
dec
mov
sbb
add
mov
pop
jmp
pop
sbb
sub
out
mov
xchg
enter
loop
sarl
and
and
xor
jns
add
or
repnz
and
sbb
enter
gs
sub
sub
sub
sbb
aad
je
cli
enter
and
js
push
inc
xchg
add
adc
enter
mov
shl
sbb
push
adc
cwtl
cltd
sbb
insl
jne
sbb
push
xor
cli
lcall
xorb
scas
and
es
inc
popw
xor
xchg
gs
loopne
rorl
inc
cmpsb
jns
lods
jne
adc
mov
int3
bound
push
pop
jbe
sub
test
daa
daa
or
jp
filds
xchg
scas
dec
mov
jns
sbb
adc
cmp
orl
sub
je
or
push
inc
mov
addl
push
pop
test
push
rorb
xchg
xor
or
xchg
ds
gs
or
mov
subb
loopne
mov
mov
mov
cmp
adcl
ds
inc
or
cmpsb
xchg
fcom
xchg
dec
xor
jbe
mov
add
clc
add
push
je
xchg
mov
and
sbb
bound
push
xchg
cmp
loopne
xor
sub
cltd
test
sub
push
mov
hlt
push
adc
mov
movsb
ds
shlb
lcall
mov
or
inc
cli
mov
cmp
sbb
mov
dec
cmp
jbe
sbb
int3
movsb
sub
mov
cmp
mov
jb
cli
testb
inc
ret
test
cmpsb
nop
dec
sub
sbb
lods
bound
stos
adc
xor
push
dec
xor
roll
adc
shlb
xor
fisubs
push
xchg
inc
and
inc
je
imul
fists
ror
test
jle
loopne
adc
bound
fs
fcoms
sub
mov
insl
cli
and
push
push
sbbb
and
mov
loop
inc
push
inc
xor
jns
in
test
xchg
sbb
lock
jne
fs
inc
dec
and
cmpb
ljmp
shll
pop
push
sahf
adc
mov
es
inc
in
imul
addl
pusha
push
sbbl
adc
scas
imul
sbb
mov
or
lods
ds
cli
loop
stos
adc
cs
push
in
dec
aad
lods
shl
mov
push
aaa
andl
ret
cmc
fs
add
xchg
lret
adc
ds
call
test
test
cmpsb
mov
imul
mov
ss
scas
rorb
les
es
push
scas
add
xchg
cld
adc
mov
pusha
xchg
ds
mov
test
stos
pop
shl
mov
in
cmpsb
es
dec
mov
mov
dec
pop
insl
lods
inc
pusha
mov
or
sbb
inc
mov
pushf
ret
mov
mov
loop
add
sbbb
xor
mov
scas
sbb
es
pusha
cmc
lcall
outsb
test
addb
jns
adc
mov
mov
push
aad
jne
add
clc
inc
cli
push
aad
fldt
addb
adc
xchg
loop
xchg
jo
sub
and
lret
dec
add
sbb
pusha
xchg
push
insl
aad
or
mov
dec
pop
or
adc
jo
aam
rol
daa
fidivl
fs
sub
or
int3
adc
imul
add
in
xchg
shl
jne
dec
test
nop
jbe
sub
mov
gs
lock
or
push
or
mov
xor
jae
adc
lret
adc
or
mov
mov
jle
mov
shrl
cltd
pop
scas
adcb
sbb
cmc
jp
lcall
sub
mov
jb
pop
fistpll
int3
int3
sub
cltd
pop
pop
ds
mov
out
nop
sub
dec
movsb
mov
sbb
xchg
test
pop
loop
mov
and
push
shl
loop
sarb
cld
lods
aad
mov
push
and
xchg
pop
dec
mov
push
fimuls
xor
dec
and
je
gs
xchg
or
inc
and
mov
bound
add
push
cli
push
dec
push
and
inc
jae
repnz
xor
rclb
mov
mov
adc
xor
sub
push
push
add
dec
adc
xchg
and
sbb
jns
mov
push
rcll
jl
call
mov
aam
mov
sub
fdivrl
add
fwait
lcall
xchg
in
sbbb
pop
insl
clc
cmp
xor
out
addl
jbe
push
aas
aam
cltd
dec
pushf
fcoms
add
inc
mov
mov
and
inc
xor
xor
fs
cltd
fisubl
xchg
imul
jmp
je
test
or
adc
cwtl
add
adc
sub
cli
pop
dec
push
mov
or
cltd
adc
lcall
pop
inc
test
scas
cmpsb
test
dec
mov
sbb
xchg
shlb
repnz
ja
ljmp
addr16
xchg
test
negl
pushl
popf
sbb
add
add
je
jecxz
cmc
aaa
mov
in
add
jg
mov
add
enter
cwtl
push
sub
es
inc
addl
dec
sbb
xchg
ret
push
push
push
fs
sub
inc
push
or
dec
js
jns
add
mov
and
add
adcl
add
loope
add
lock
test
xor
cli
mov
adc
addl
sub
shrb
filds
sbb
xchg
jne
rcr
adc
mov
lock
pop
and
adc
gs
cmc
cli
loop
lds
cmc
adc
imul
mov
mov
out
cltd
insl
jne
add
push
test
adc
sbb
dec
push
add
enter
push
push
and
data16
dec
ds
sub
push
pop
push
cmpl
loop
jns
push
mov
or
adcb
sbb
cmp
xchg
cwtl
scas
mov
push
cmp
push
and
pop
inc
dec
cmp
pusha
es
lcall
js
mov
adc
cli
lcall
cs
lret
enter
jne
push
cli
jo
dec
sub
or
data16
orb
push
andl
add
inc
shlb
adc
hlt
dec
je
dec
mov
cld
ret
sbb
js
shlb
ja
pusha
jne
shrb
dec
add
adc
jb
es
in
cltd
int3
push
xor
adc
je
mov
inc
les
add
out
dec
pop
jmp
es
cli
sarb
lret
add
movsb
sbbb
push
cs
or
inc
dec
xchg
aaa
inc
xchg
jns
sbb
ljmp
and
push
push
and
dec
xor
dec
or
enter
xchg
mov
xor
mov
mov
xchg
test
ljmp
xor
pop
js
and
lods
push
xorl
pop
popf
jb
xchg
xor
cli
cli
mov
push
out
andb
xchg
adc
mov
loopne
shlb
add
and
into
fsubs
mov
xor
add
pushf
adc
jne
cltd
xlat
test
xchg
jne
mov
stos
shr
or
jne
adc
push
inc
fistps
ret
sub
mov
clc
andl
mov
repnz
adc
pusha
test
pusha
sbb
mov
inc
jbe
cmp
and
call
test
cs
dec
or
push
adc
mov
xor
jne
xor
scas
or
fisubrl
and
in
icebp
scas
xchg
hlt
fcoml
mov
or
inc
cmp
popl
push
loopne
inc
lea
jg
stos
loopne
add
sub
sbb
repnz
dec
push
sbb
movsl
xor
ror
push
loop
es
and
sbb
inc
or
int3
and
jne
and
or
loopne
push
test
dec
xchg
fisubrl
popa
push
cld
bound
pop
loopne
movsb
rcl
popa
push
pop
out
pusha
es
fadds
xor
shlb
mov
adc
mov
gs
push
push
pusha
js
xorb
je
sbbb
mov
mov
mov
sbb
sbbb
adc
xor
mov
xor
add
pop
test
or
cli
mov
jb
push
jmp
adc
mov
pop
mov
rorb
mov
jns
into
mov
sub
fs
repnz
push
or
cmc
inc
add
fbstp
movsb
aad
mov
xchg
adc
data16
mov
adcl
dec
or
loopne
gs
lret
int3
add
sbb
les
vandpd
mov
push
cmp
stos
scas
sahf
jns
loope
das
outsb
cli
andb
mov
insb
mov
push
shlb
repnz
outsb
mov
jns
into
rcl
dec
mov
and
add
data16
jb
cltd
aad
mov
decb
push
add
cltd
push
subl
shr
mov
test
scas
lods
stos
jb
or
ds
mov
fcoml
hlt
mov
dec
jbe
mov
insb
int
lcall
pushf
andb
dec
and
and
or
addl
sub
mov
fadds
adc
push
cltd
test
xchg
je
sbb
and
inc
and
push
test
lods
add
mov
clc
imul
fisubrs
push
mov
cwtl
add
xor
mov
outsb
cmp
loop
and
push
andl
fs
movsb
movsb
and
test
into
mov
xchg
jb
cld
pusha
mov
inc
push
fildll
or
stos
xchg
ds
xor
cld
or
jo
mov
inc
lods
sbbb
xchg
in
jbe
inc
icebp
push
fs
dec
es
adc
call
mov
push
mov
dec
imul
andb
mov
add
cmpsb
mov
imul
or
les
and
andb
mov
cmpb
add
jo
sub
sub
ret
out
hlt
sbb
fidivrl
sbb
or
mov
ret
ret
jp
cli
jg
xor
addl
out
pop
jne
leave
in
pop
cmp
and
pusha
add
imul
inc
push
ret
cmc
mov
or
cli
in
rcrl
cli
into
out
mov
lods
xchg
pushf
fadd
and
cltd
or
sub
mov
lock
scas
adc
xor
loop
orb
push
stos
fs
push
cwtl
xorb
pusha
shrb
leave
test
imul
nop
xchg
adcl
or
insb
dec
mov
mov
xor
rorl
adc
xchg
or
insl
mov
xchg
imul
outsb
scas
dec
inc
add
mov
xor
adc
add
pop
and
xchg
dec
pop
or
xor
inc
roll
mov
insb
scas
ret
pusha
jp
mov
xor
fiadds
inc
mov
xchg
call
or
sub
or
mov
jbe
add
xchg
imul
shrb
inc
cltd
movsb
mov
pusha
lods
imul
inc
jne
mov
mov
les
sbb
add
xor
sbb
pop
mov
mov
sub
nop
add
mov
sub
call
ret
and
insb
pop
adc
inc
aaa
pusha
xchg
adc
sbb
sbb
cltd
cmpsb
cmp
cli
or
sbb
mov
daa
js
es
inc
and
ret
xchg
cs
inc
xor
push
sub
add
add
hlt
cltd
mov
andb
loopne
add
inc
ret
or
subl
add
ds
inc
lcall
shlb
dec
xchg
add
cmc
adc
or
adc
cmp
adc
clc
insl
pop
mov
fidivl
add
add
xchg
jmp
add
faddl
clc
mov
adc
jb
add
enter
test
inc
popa
push
push
addb
cs
mov
mov
xchg
clc
nop
in
add
mov
pusha
pop
insb
mov
mov
mov
push
pop
test
orl
aam
sbbb
adc
mov
mov
push
adcl
or
pusha
or
cmp
push
gs
add
push
aaa
into
fbstp
and
ljmp
sub
xchg
int3
mov
pusha
or
shl
sub
rolb
lock
movsb
and
hlt
mov
es
lock
clc
loop
sub
std
lea
lret
push
std
aaa
mov
imul
mov
inc
sub
sbb
mov
add
cli
mov
lock
mov
cltd
out
sti
xlat
fbld
lcall
test
loop
jl
imul
adc
inc
mov
mov
xchg
mov
mov
addl
adc
jbe
adc
add
lea
in
mov
or
xchg
pushf
push
xor
cmp
mov
add
pusha
adc
sub
lret
push
lcall
jb
in
jns
adc
or
push
lret
int3
fsubp
lret
mov
push
and
call
xor
dec
or
subl
and
lods
les
mov
xchg
mov
lcall
add
add
push
push
lods
loop
xchg
or
lods
dec
and
xorl
fs
mov
cmp
add
jp
xchg
xchg
add
inc
mov
sbb
cli
lcall
sbbb
sub
test
dec
mov
ficoms
inc
mov
push
push
scas
mov
push
pop
or
fists
inc
adcb
mov
push
cltd
js
inc
cs
cltd
mov
or
outsb
mov
push
pop
jae
pop
jne
je
pop
lods
test
or
push
imul
inc
adc
inc
je
cs
push
mov
insl
cmpsb
xchg
add
int3
jb
aam
xchg
or
test
ljmp
dec
orb
je
subl
stos
adc
adc
fists
dec
xchg
out
sbb
shl
sbb
mov
sbb
sbbl
and
xor
xchg
cltd
push
dec
mov
sub
or
fadd
ljmp
jle
xchg
push
adc
mov
insl
jo
add
inc
sub
pop
add
imul
push
rorb
adc
mov
push
lret
test
addb
xchg
aad
arpl
cmp
addl
jo
mov
sub
dec
stos
test
je
pop
sbb
cli
xor
mov
imul
sub
push
mov
subl
or
adc
add
cltd
mov
adc
in
sub
jb
cs
push
imul
dec
add
jle
adc
mov
cld
cmpsb
sub
dec
clc
cwtd
push
test
js
test
enter
lcall
sbb
jl
aad
jne
subl
and
adc
out
test
inc
add
and
jle
je
lock
loop
es
decl
or
push
ret
adc
sbb
mov
jge
aad
sub
push
hlt
aam
adc
cli
clc
push
hlt
decl
subl
ret
inc
add
sub
imul
and
cmp
and
mov
or
loop,pt
mov
add
je
hlt
adc
mov
imul
push
push
addb
add
insb
cltd
cmp
mov
adc
lea
inc
in
dec
push
cmpsl
jo
ss
push
cltd
fs
add
pop
dec
subb
in
xchg
jns
xor
push
xchg
push
cmc
or
or
push
pusha
movsb
push
cmp
or
inc
pusha
sbb
popa
xchg
or
push
xchg
and
push
gs
subl
lods
add
loopne
hlt
mov
aad
cli
xchg
jp
push
dec
add
push
and
push
movsb
cltd
xchg
xor
inc
aam
mov
dec
mov
nop
int3
es
data16
inc
xor
insl
mov
add
loop
stos
or
insb
dec
test
mov
jl
push
push
mov
sbb
and
lret
shrb
add
lock
push
lods
add
xchg
cmp
sbb
mov
add
orb
test
cs
jp
fcoms
cwtl
mov
sub
jb
cmc
fsubs
nop
fidivl
dec
roll
nop
fs
faddp
addb
add
add
inc
je
fildll
xchg
add
cmp
jne
loop
add
and
pop
stos
adc
add
test
rorb
xchg
adc
sub
inc
jb
dec
adc
in
in
push
pusha
mov
adc
dec
mov
lret
sub
insl
jbe,pt
dec
adc
aad
ficoml
test
inc
aaa
pop
pop
dec
imul
addl
adc
cmp
fsubs
es
rcl
xor
sub
in
xchg
push
or
addl
inc
mov
hlt
fadd
andb
cmc
es
stos
mov
fdivl
adc
dec
test
xor
sbb
inc
and
filds
xchg
lret
test
fcomps
adcl
mov
cmp
cltd
mov
mov
dec
pop
cmp
xchg
jl
mov
sbb
outsb
adc
add
test
sbb
add
fisubl
fistps
cltd
add
orb
xchg
pop
push
movsl
in
je
into
xorb
cmp
faddl
xchg
and
aam
or
out
sbb
orb
popa
cmpsb
push
into
or
cs
and
dec
cmc
pop
aam
repnz
insl
pop
imul
ss
int
push
pushl
sub
push
lock
cld
push
mov
cmpsb
inc
sbb
sub
pop
inc
or
call
add
sub
inc
sbb
mov
mov
or
dec
hlt
mov
stos
dec
or
test
mov
inc
mov
add
mov
push
xor
scas
xor
and
add
iret
scas
test
dec
or
add
iret
or
mov
add
fadd
loopne
pop
mov
bswap
and
push
push
outsb
sub
mov
rolb
clc
cli
inc
mov
inc
fsubrs
in
or
nop
dec
inc
and
add
daa
rclb
ja
adc
add
adc
add
sbb
add
movl
jmp
sbb
pusha
ror
hlt
fcoml
jne
arpl
cmp
pop
mov
test
xor
sbb
pusha
inc
call
dec
popf
push
adc
fisttpll
test
mov
xchg
bound
cmc
fimuls
sub
mov
dec
add
inc
stos
inc
adc
sbb
int3
add
or
push
mov
or
aam
andl
pop
adc
fisttpl
insb
sbb
mov
nop
mov
xchg
sbb
nop
push
lcall
and
and
imul
and
mov
cli
je
push
add
cs
inc
fs
mov
cli
or
pusha
adc
xchg
push
xchg
loopne
push
mov
insb
mov
and
inc
pop
ss
add
add
pop
add
fiaddl
les
dec
adc
jo
mov
mov
cmpb
push
adc
jne
add
xchg
inc
bound
in
cli
cmc
lcall
jbe
movsb
and
lods
mov
lods
pop
push
adc
mov
mov
xchg
lret
sarb
or
or
sub
mov
sbb
mov
test
mulb
and
dec
xchg
aam
push
inc
add
pusha
cmpsb
mov
test
inc
xchg
or
sbbl
and
in
sbb
test
rorb
sahf
movsl
mov
mov
imul
inc
data16
xchg
sub
aam
fsubs
stos
adc
adcb
push
data16
mov
mov
add
push
aaa
mov
add
syscall
inc
adc
add
repz
pusha
xor
push
loopne
push
pop
adc
pushf
jns
outsb
stos
adc
movsl
add
mov
test
fcoms
js
or
ds
orb
test
mov
fs
xor
dec
jns
mov
out
je
push
and
ds
js
shrb
insl
test
or
mov
mov
dec
fsubs
adc
push
and
scas
push
fsubl
sbb
inc
mov
add
pusha
jns
imul
cmp
imul
mov
inc
xchg
or
lock
jne
rclb
mov
mov
dec
sub
jne
loope
addl
sub
xor
dec
adc
mov
push
cmc
cli
rcl
xchg
mov
les
cltd
in
fiadds
scas
fwait
subb
notb
adc
mov
add
test
inc
and
xchg
xor
ds
xchg
ss
sub
orb
inc
lcall
mov
inc
test
mov
stc
ljmp
stos
inc
xorb
jne
xor
scas
cld
test
add
xor
pop
loopne
push
je
adc
loopne
jmp
ret
mov
add
and
je
cs
add
mov
or
inc
shlb
lcall
movsb
aad
aaa
lods
jl
adc
jns
loop
mov
or
inc
mov
scas
xchg
inc
loop
cli
cmpsb
in
inc
dec
push
in
push
ficoms
pusha
push
ret
outsb
mov
in
pop
mov
lods
add
ljmp
fs
cltd
ds
jle
orl
orb
xchg
push
es
mov
stos
xchg
adcl
inc
lock
jo
sbb
mov
lcall
add
adc
clc
jle
dec
push
xor
js
xor
ret
sbb
bound
sbb
imul
adc
test
sbb
mov
sbb
mov
mov
test
sbb
fildl
adc
popa
jo
add
pop
pop
xor
call
xchg
lock
cld
sub
dec
adc
mov
lcall
cli
loopne
xor
push
cltd
dec
adc
imul
xchg
rcr
sarb
cmpsb
js
filds
jbe
cmpsb
xchg
jno
mov
pop
push
cmpsb
add
and
jne
fsubrs
inc
push
daa
dec
repnz
push
fisttps
push
xchg
bound
cmpsb
push
in
sarb
add
sub
adc
je
inc
pusha
push
mov
xor
adc
sbb
subl
adc
xor
add
or
call
pusha
inc
mov
test
pusha
push
inc
push
ficomps
fs
subb
sbb
nop
add
mov
insl
adc
iret
push
mov
sub
mov
xchg
jne
jne
sbbb
push
sbb
adc
or
jl
orl
je
mov
fadds
mov
hlt
gs
shlb
pop
mov
stos
mov
xor
jne
cltd
dec
pop
inc
xchg
lret
ljmp
sbb
enter
xchg
push
push
push
cltd
adc
jb
xor
jl
push
xchg
mov
das
or
sahf
sbb
cmp
adcb
gs
test
xor
sbb
ret
mov
mov
daa
call
inc
sub
fldlg2
sbb
add
fwait
jo
adc
push
and
pusha
inc
pushf
jo
inc
push
mov
hlt
pusha
clc
adcb
cmp
push
cmp
jns
push
push
sahf
fdivrl
shrb
push
jns
or
leave
xor
push
loopne
xchg
push
mov
add
xchg
add
ror
sbb
decb
inc
jl
add
sub
shlb
add
roll
call
adcb
aad
nop
stos
imul
adc
xor
add
lods
cmp
jnp
mov
test
lods
cli
mov
movsl
jb
and
stos
ror
cltd
faddl
dec
or
lcall
jb
add
add
add
test
sbb
sub
test
test
mov
mov
mov
test
push
dec
js
pop
or
adc
inc
cmp
add
mov
push
or
mov
sub
or
inc
cmp
cmc
add
inc
adc
testb
xor
cmpsb
xchg
sbb
jo
push
lcall
adc
and
sbb
add
loopne
out
push
adc
sub
mov
inc
sub
inc
popa
push
inc
jae
in
inc
xor
insl
in
mov
aad
inc
pop
push
cs
ljmp
push
mov
cli
mov
push
xchg
js
aad
jge
mov
xchg
fs
sbb
test
test
call
test
mov
enter
xchg
dec
cwtl
inc
jle
dec
aaa
popa
stos
nop
repnz
cmc
and
xor
sub
movsb
inc
fs
test
adc
dec
add
adc
lods
and
jns
jae
mov
xor
insl
je
ror
dec
das
insb
stos
xorl
je
fbstp
jo
lock
push
pop
cltd
outsb
jl
shr
xchg
in
addb
ds
jbe
dec
sub
mov
pop
es
push
stos
or
push
ds
mov
shrb
mov
shrl
add
jp
xchg
push
cs
lret
xorb
ss
cmp
push
loop
les
push
dec
and
push
push
test
cltd
push
mov
add
shr
mov
lods
int3
loopne
xchg
jb
out
or
aad
popa
js
mov
add
aad
jle
sub
push
test
cmp
insb
pop
sub
dec
call
cltd
add
inc
and
ss
cltd
cwtl
lcall
adc
add
and
insb
adc
iret
aad
push
xor
sbb
mov
fwait
mov
and
insb
adc
icebp
jp
cli
fsubrs
jb
lcall
cwtl
cmc
xchg
andb
pop
sbb
mov
loope,pt
adc
lcall
xchg
push
ret
dec
pushw
cmp
mov
add
call
jl
fiadds
fimull
push
mov
adc
push
sbb
pop
dec
cmp
inc
mov
in
xchg
call
aad
xor
andb
adc
mov
or
mov
pop
orb
mov
imul
pop
mov
or
push
enter
rclb
inc
push
or
and
pop
test
movsb
or
sbb
pop
or
cwtl
fwait
adc
xchg
and
inc
addr16
mov
or
jle
es
add
shrl
popa
inc
test
cmp
fldl
call
mov
xchg
push
je
subl
movsl
mov
sbb
add
push
push
push
inc
mov
xorl
mov
enter
aad
loop
cltd
shll
jbe
push
lock
xchg
mov
js
jb
mov
push
adc
data16
xchg
loopne
mov
sub
pop
lret
push
inc
sub
insl
lret
incb
lret
and
enter
add
pushf
test
rclb
cmpsb
jo
insb
push
mov
cmp
sbb
repnz
add
mov
add
fdivr
bound
add
xor
and
or
mov
sbb
mov
xorb
and
lcall
rorl
fadd
clc
add
ret
inc
gs
mov
data16
dec
cltd
fldenv
test
shrb
jne
repnz
mov
sbb
cld
stos
shrb
adc
xor
rolb
or
or
xchg
nop
shlb
imul
push
push
cmpsb
pop
loope
cmp
stos
xchg
cmc
rorb
and
decb
mov
adc
sub
es
xor
outsb
xchg
or
push
or
xor
fisubl
inc
sub
xor
xchg
xchg
ret
mov
mov
scas
xor
popl
pop
jmp
movsb
adc
push
add
and
adc
jl
mov
push
dec
jecxz
sub
pop
cmpl
mov
push
mov
mov
sarb
in
sub
lock
jmp
jne
pop
aad
xor
enter
ret
and
cmc
or
fadds
push
push
fwait
jo
push
add
mov
xor
sahf
xor
dec
add
pop
hlt
inc
cs
jno
mov
inc
jne
mov
aad
jecxz
add
faddl
adcb
addb
stos
addl
pusha
add
sub
aam
mov
jo
mov
or
add
sbb
inc
mov
test
push
or
push
les
cmp
or
sub
add
and
in
mov
xor
nop
jl
into
or
cwtd
pop
dec
inc
out
test
add
mov
lods
jns
ret
in
insb
mov
adc
nop
and
cmc
mov
xor
stos
adc
or
adc
call
fs
outsb
adc
xorb
add
and
test
inc
rorl
mov
pop
mov
in
xor
push
test
or
clc
sbbb
scas
ds
shrb
sbb
inc
sbb
and
push
adc
in
shl
inc
adc
cltd
or
mov
ret
add
and
rorl
lret
loopne
insl
lcall
mov
imul
or
add
cmc
movsb
xchg
int3
fimull
cmpsb
dec
and
jo
sub
mov
mov
es
xor
orl
aad
mov
es
nop
inc
cltd
xchg
mov
inc
pusha
loop
jnp
mov
sbb
pusha
or
cmp
dec
test
jl
icebp
sbb
sbb
sbb
roll
xor
data16
lcall
test
add
sub
nop
cmp
enter
shlb
and
push
mov
sbb
mov
sub
push
cmpl
insb
mov
lock
cs
nop
push
cwtd
cmc
add
add
andl
xor
into
cli
lods
add
sbb
mov
jb
sahf
ret
dec
add
sbb
xchg
and
pop
push
adc
mov
pop
sub
xchg
andw
addl
negb
push
push
or
xchg
call
test
xchg
mov
mov
xor
imul
sbb
jb
mov
jp
pop
mov
pop
and
push
mov
push
shlb
push
add
lcall
bound
xchg
adc
push
add
clc
jle
movb
adcl
stos
push
lret
js
pop
rolb
pusha
sbbb
adc
adc
hlt
adcb
mov
xchg
cld
jecxz
mov
repnz
pop
lock
les
pusha
lret
jb
sbb
je
lcall
and
bound
and
or
jl
xor
int3
push
cmp
ljmp
stos
fadds
push
xchg
ljmp
and
es
pusha
mov
or
or
mov
xor
inc
scas
mov
dec
fcompl
and
outsb
and
cmp
mov
loop
cmp
mov
push
jbe
loop
int3
loop
adc
and
inc
xor
shlb
mov
or
add
jbe
sbb
mov
sarb
and
jne
loopne
inc
call
sbbb
sub
andb
loopne
shl
out
bound
dec
in
dec
fisubs
or
testb
xchg
or
es
xor
add
pop
dec
mov
loop
out
loopne
cmp
sub
xchg
leave
dec
inc
fsubs
inc
dec
xchg
scas
xchg
mov
fs
addb
addb
mov
mov
mov
sub
adc
scas
insb
xchg
adc
adc
fidivrl
mov
popa
test
dec
push
mov
xchg
out
pusha
push
mov
adc
or
cmpsb
inc
cmp
ljmp
push
pop
loopne
pop
cmp
sbb
movsb
pop
push
sub
mov
mov
xchg
pop
adc
push
inc
jo
rolb
or
inc
fidivl
rclb
inc
sub
xor
or
andb
sbb
add
in
lcall
pusha
inc
inc
pusha
jo
pusha
add
mov
xor
or
addb
mov
jb
sub
test
jle
add
mov
mov
dec
bt
mov
add
adc
mov
xchg
inc
mov
dec
sbb
sub
or
pusha
xor
movb
loopne
mov
push
inc
loop
outsb
into
gs
push
sbb
adc
test
xchg
testb
ret
rcrb
rclb
or
test
jp
adcb
mov
int3
mov
xchg
xchg
dec
ljmp
and
push
cmpsb
addb
mov
pusha
pusha
scas
sbb
adc
add
jo
js
cli
push
movb
xor
adc
inc
mov
xor
sub
and
or
push
gs
imul
mov
ljmp
addb
mov
dec
cmp
pusha
int
loope
pop
push
scas
mov
push
cli
insb
cli
sbb
cli
aad
cmp
outsb
sarb
popf
je
add
rorb
xor
mov
addb
mov
cmp
dec
sub
loop
xor
inc
mov
add
jo
add
adc
mov
xor
sbb
cmp
cmc
sbb
cli
pop
mov
xor
push
push
or
or
test
mov
xor
sbb
fwait
or
fs
test
add
sbb
pop
inc
inc
lea
mov
add
stos
adc
rclb
es
lock
cli
pop
cltd
or
test
dec
and
mov
cmp
int3
scas
stos
sub
or
dec
cmp
pop
ret
enter
mov
pushw
push
mov
xchg
sub
xor
push
mov
sub
dec
call
orb
cltd
cli
mov
pushf
popa
push
mov
pushf
in
push
test
lcall
add
cmp
loopne
adc
sub
lock
xchg
inc
xchg
mov
push
mov
loop
push
inc
or
test
lock
mov
mov
lret
dec
cmp
jp
inc
and
add
or
lods
shll
mov
adc
xchg
push
stos
call
add
scas
mov
and
push
jo
popa
or
aad
cltd
orb
or
pusha
adc
push
inc
mov
sbb
and
add
mov
dec
sub
fiaddl
mov
and
ds
test
xchg
dec
inc
cwtl
push
ds
lret
or
in
int3
out
lcallw
jbe
mov
adc
xchg
cltd
or
adc
and
push
or
or
adc
push
outsb
mov
push
xor
jo
test
dec
jne
ret
and
xor
add
ret
pop
dec
push
inc
in
mov
cs
int3
sbb
lret
adc
mov
test
push
or
clc
push
data16
mov
dec
and
mov
rcll
jl
insl
cltd
aad
add
dec
inc
adc
nop
dec
or
mov
and
mov
cs
aam
aad
add
repnz
inc
sbb
xor
mov
cmp
es
les
inc
rcll
mov
lret
push
sub
xchg
push
orl
ljmp
shll
add
sbb
or
cli
jg
lcall
inc
movsl
pop
in
ret
addb
inc
out
adc
fsubrl
fs
les
ret
test
xchg
jne
mov
test
push
and
push
push
stos
xchg
cmp
push
or
adc
ficoml
dec
push
mov
dec
rorl
into
cmp
call
cmp
into
mov
mov
push
pop
inc
inc
add
stos
xchg
push
out
jo
or
loop
lcall
push
cld
add
xor
inc
inc
mov
and
clc
ficoml
xor
test
pop
push
cmc
or
adc
cmp
jmp
aam
dec
sbb
jns
adc
xchg
test
and
dec
js
mov
ret
cmp
xchg
add
mov
data16
inc
sub
add
fistpll
xchg
and
adc
add
lods
cmpb
add
stos
mov
fwait
jb
cli
lret
sbb
scas
bound
xchg
fs
inc
and
push
mov
mov
int
test
inc
adcb
sahf
movsb
xor
xor
mov
and
xchg
loopne
or
xchg
push
add
add
lret
lret
sahf
es
and
aad
test
xchg
adc
enter
adc
push
push
adc
xor
rorb
jbe
sbb
sbb
xor
or
lcall
push
pop
test
es
ds
add
mov
daa
adc
xor
pop
out
scas
mov
orl
and
popa
inc
loopne
and
dec
scas
mov
pop
test
lods
xor
add
inc
test
imul
dec
dec
add
mov
xchg
sbbl
push
scas
cs
or
loopne
mov
pop
cmp
dec
jns
fiadds
sub
loop
mov
cmp
pop
push
jl
push
jae
lret
add
inc
xchg
cmp
adc
in
add
jno
inc
dec
test
inc
dec
add
test
jns
sub
and
or
aam
in
cmp
xchg
data16
lret
pop
or
sub
jo
fidivs
stos
cmp
jb
dec
sub
adc
adc
add
jne
les
fadd
jne
call
adc
dec
shlb
sahf
jo
addb
inc
mov
sub
push
push
dec
pusha
call
xor
mov
pusha
xor
lods
cs
adc
ja
fimuls
sub
enter
shrb
and
jbe
in
add
inc
sti
mov
pop
ss
pop
js
xchg
adc
bound
imulb
test
les
rorb
add
push
cwtl
cmc
cmc
test
sub
sahf
out
push
inc
test
or
in
bound
or
adc
or
sbb
or
jl
fs
je
mov
mov
mov
mov
push
mov
js
insl
clc
xor
push
cmpsb
mov
es
sbbb
mov
fdivs
xchg
adc
fs
test
sbb
loop
xor
or
adc
add
test
push
xchg
pop
data16
test
mov
stos
rcrb
push
or
lcall
inc
in
sahf
adc
dec
cs
xor
xor
dec
mov
outsl
push
mov
adc
push
les
sbb
test
cmp
and
stos
ss
aaa
dec
sbbb
push
pushf
xor
or
adc
jbe
mov
pusha
xor
or
dec
imul
jl
shrb
jns
xor
shll
or
jle
test
add
bound
and
xor
cmp
inc
push
insl
dec
mov
push
dec
add
lods
enter
ds
mov
and
dec
sub
dec
loope
fdivr
sub
and
dec
mov
push
xorl
cmp
jns
adc
dec
jo
enter
jo
lods
jl,pt
xor
adc
js
push
and
lds
jb
push
or
test
adc
out
inc
int
or
adc
es
sarb
nop
js
add
adc
inc
adc
xor
mov
xchg
fs
sbb
stos
cmp
xchg
rolb
pop
andl
or
push
test
loop
outsb
inc
test
xor
ljmp
sub
int3
jb
orl
aad
cmc
adc
adc
into
rorb
xor
push
shl
orb
cmp
sbb
pusha
sub
aad
inc
push
mov
mov
xor
xchg
nop
mov
add
cmc
lcall
and
push
mov
in
xchg
adc
outsb
xchg
add
adcb
aam
fsubr
test
sbbb
mov
out
inc
xor
les
in
outsb
in
das
fiaddl
daa
test
shll
sub
add
push
out
jo
aad
es
sub
mov
aaa
fs
jp
movsb
dec
cmp
mov
inc
jb
loope
adc
pusha
dec
jne
mov
insl
test
mov
mov
loopne
push
and
cmc
and
add
sbb
test
insb
push
adc
sub
ds
test
inc
add
bound
and
and
dec
cmp
or
sbb
cmp
adc
sahf
sbb
test
scas
inc
dec
jle
test
dec
cmpb
jle
or
inc
jne
imul
inc
or
adc
mov
xchg
test
je
push
test
push
fs
addl
adc
cs
les
xor
or
jbe
push
aam
sbb
xchg
xchg
push
movsl
or
orl
dec
or
js
pop
add
push
lods
xor
add
pop
cmp
mov
mov
cld
adc
dec
int3
sahf
adc
test
gs
rol
aam
add
les
mov
pop
push
inc
sub
push
in
je
int3
scas
mov
scas
lcall
shrb
or
inc
jle
push
lcall
notb
or
lods
xor
cmp
popa
mov
push
cltd
int3
add
adc
rorb
lods
test
fs
data16
aad
push
loop
aad
and
mov
dec
ret
mov
lcall
xchg
sbb
cli
push
test
adc
xchg
xorl
push
dec
into
mov
imul
jne
and
push
aam
xchg
xor
movb
push
ds
sar
xor
adc
inc
pusha
xchg
xchg
sbb
ret
fs
call
mov
xchg
add
test
fs
add
xchg
movsb
mov
and
xor
loop
dec
addb
jbe
fiaddl
jb
les
loopne
cmp
xchg
test
cld
add
ss
jo
les
sbb
cli
rolb
mov
mov
test
add
mov
jno
jns
or
insl
leave
or
lods
loopne
add
repnz
scas
inc
and
adc
out
movsb
sbb
orb
jne
call
mov
add
test
pop
xchg
xchg
movsb
cmc
or
popa
add
stos
es
mov
sub
adc
xchg
push
out
mov
push
ds
cmp
fs
cli
ds
mov
or
jecxz
xor
sub
and
sbb
dec
jns
cwtl
jne
popa
push
push
lods
lock
insl
fldl
push
imul
in
add
pop
outsb
sbb
adc
pusha
or
ss
adcb
add
test
inc
or
add
jb
mov
or
movsb
jns
fimuls
cmpsb
add
push
cmc
pop
jmp
imul
xorl
and
adc
xchg
push
pushf
test
xchg
or
xor
inc
xchg
testb
mov
sbb
mov
inc
loop
push
in
push
ds
adc
push
je
sub
cmpsb
xor
mov
movsb
loopne
inc
pop
mov
adc
inc
sub
stos
add
add
cwtl
fs
pop
movsl
inc
aaa
dec
les
jne
xor
aam
scas
add
adc
push
adc
cli
push
xor
xor
mov
ljmp
pusha
mov
xor
fistps
addl
mov
cmpsb
xor
xor
add
aam
mov
dec
sar
imul
aad
lcall
pusha
adc
gs
ss
jl
cltd
push
loopne
xchg
loopne
into
cmp
adc
lods
nop
pop
in
aam
or
xor
add
enter
add
jo
cmpsb
mov
adc
pop
pop
dec
or
mov
insb
xchg
pusha
adc
add
ds
push
test
ret
sbb
pop
push
adc
movsl
xchg
les
add
inc
mov
inc
adc
fs
test
inc
jl
cltd
push
dec
sbb
xchg
sub
sbb
imul
out
add
push
mov
les
add
sahf
push
stos
pop
xor
loop
xchg
leave
sbb
dec
sub
mov
leave
inc
les
sub
xchg
ljmp
jo
xor
xor
push
push
or
add
cmpsl
push
and
imul
mov
cmp
into
mov
out
adc
nop
cltd
or
ror
lret
fs
pushf
dec
add
push
test
repnz
push
popa
sahf
gs
cwtl
mov
movsb
ljmp
outsl
lret
jp
cmpsb
xor
fsubrs
aam
mov
jne
or
or
mov
mov
sub
mov
mov
mov
aad
sub
mov
inc
dec
push
scas
and
pop
test
add
movsb
aad
das
js
mov
emms
add
sahf
xchg
inc
inc
push
inc
clc
idivl
mov
push
mov
xchg
add
adc
out
xchg
mov
mov
jl
sbb
adc
mov
xor
fisubrs
test
adc
pop
sbb
lods
cwtl
es
lcall
adc
es
lcall
push
ljmp
cmp
mov
inc
mov
ret
scas
mov
adc
fmuls
inc
or
cs
sbb
xchg
sbb
add
cli
mov
inc
mov
sub
enter
mov
repnz
or
xor
or
enter
insb
cltd
xor
lret
shlb
dec
shlb
dec
sbb
enter
fiadds
inc
or
pusha
xchg
mov
add
adc
dec
and
pushf
add
aam
add
pop
or
or
mov
pusha
adc
push
push
cmp
jo
add
inc
fsubrl
ret
mov
dec
subl
dec
xchg
pop
loop
adc
or
adc
xchg
push
or
adc
mov
movsb
cltd
xchg
ljmp
push
pop
mov
notb
push
sbbb
or
mov
lcall
push
stos
out
or
ret
adc
push
jb
xor
push
push
ret
inc
or
inc
adc
pop
inc
and
or
xorb
sub
cmpb
xchg
bound
sub
or
loopne
pop
imul
adcb
scas
push
xchg
adc
popa
push
pop
je
stos
xchg
cltd
adc
cmp
mov
sub
xorl
add
xor
inc
inc
enter
dec
push
lcall
es
adc
pop
rol
dec
bound
mov
test
addb
fmull
add
scas
pusha
push
fistpll
lcall
jb
es
ret
aam
xor
cmp
sub
add
pusha
test
or
sbb
adc
mov
enter
add
sub
data16
sbb
sbb
cmp
loope
jne
push
insb
cltd
les
or
and
or
mov
je
add
aad
cmp
and
or
and
outsb
inc
loope
add
loopne
push
sbb
mov
xor
pusha
pop
push
cmc
push
sbb
dec
fbstp
push
aaa
mov
sub
adc
mov
out
push
or
and
in
inc
mov
leave
imul
cmpb
xchg
das
in
push
repz
cmc
dec
adc
sbb
push
sub
jmp
dec
adc
jg
mov
imul
lds
sub
push
and
loope
test
insb
sbb
movsb
fsubs
and
cmc
gs
cltd
test
retw
cld
js
or
add
adc
shlb
dec
orb
js
xchg
ljmp
adc
insl
mov
adc
sub
inc
aam
pop
mov
sbb
push
jp
cmp
adc
ss
xchg
loopne
sahf
push
movsl
and
hlt
mov
add
xchg
pop
inc
or
add
loopne
ret
cmp
and
adc
cld
jbe
cmp
rclb
pop
fbld
subb
and
loope
pop
adc
cmc
sub
xor
fsubrl
sahf
mov
mov
stos
fs
loopne
lcall
cltd
pusha
or
jns
sub
test
loop
adc
repnz
jo
and
add
dec
mov
orb
mov
xchg
xor
push
pop
push
pop
xchg
xor
mov
adc
inc
push
ret
sbb
xchg
movsb
cmc
inc
lcall
and
mov
push
cltd
mov
les
enter
push
or
jp
mov
and
and
mov
call
and
pop
aam
xchg
inc
mov
push
cs
movsb
or
inc
add
les
ds
lret
test
jl
or
out
cmpb
and
cwtl
dec
ret
add
sbb
mov
lods
xchg
stos
enter
addb
push
outsb
test
mov
roll
sbb
adc
int3
outsb
lret
int3
jl
push
xor
xchg
fistpll
dec
mov
jne
cwtl
out
dec
xor
inc
fiaddl
sub
cmp
adc
rol
dec
pop
fdivl
mov
add
cmpsb
xchg
cmp
sub
stos
push
orb
adc
add
lret
enter
lock
add
lretw
and
adc
mov
adc
dec
push
mov
sub
xor
loop
andb
xchg
lret
dec
rclb
and
jl
es
es
inc
fadds
dec
add
add
add
enter
cmp
loop
adc
rcr
mov
test
les
add
inc
gs
call
adc
fisubs
adc
push
push
ds
push
cmp
and
adc
push
lods
jns
pop
rol
and
enter
or
inc
push
movsl
aad
cmp
incl
ja
inc
hlt
push
push
push
push
pop
icebp
fs
ss
mov
cld
daa
mov
ret
push
addr16
pushf
sub
dec
fsubrs
adc
inc
or
lock
sub
push
aam
mov
ret
lock
jnp
inc
adc
sub
add
fisubrs
lcall
inc
cmp
sbb
inc
mov
addb
mov
inc
data16
add
mov
and
add
gs
mov
cmp
mov
add
stos
sub
cmp
xor
xor
pop
loope
pop
test
in
mov
mov
push
pushf
nop
push
pop
sbb
call
fmulp
mov
test
or
cmp
pop
jo
cli
adcl
and
mov
or
sub
dec
js
jo
xorb
and
cmpl
mov
or
scas
repnz
adc
xchg
xchg
add
push
sbb
jb
sahf
cmpb
or
stos
clc
cltd
lods
add
lods
fs
mov
and
pop
ret
nop
ret
ds
aad
lcall
test
push
sub
xor
in
sbbl
fmull
mov
add
mov
pusha
faddl
popa
test
or
lods
push
enter
xchg
sub
adc
push
mov
push
adc
jb
mov
and
sbb
inc
scas
push
fs
es
add
icebp
push
test
sub
addb
xchg
fsts
cmpl
jp
jne
mov
stos
inc
adc
add
mov
mov
aam
cwtl
shrb
stos
inc
test
push
or
subl
nop
inc
mov
ljmp
dec
jo
stos
push
fidivrl
int3
mov
and
test
adc
hlt
cli
xchg
mov
push
fadds
inc
push
or
xor
cwtl
dec
dec
pop
mov
xchg
add
into
cwtl
sbb
mov
mov
push
dec
add
mov
fs
test
shlb
sub
adc
sbb
sbb
add
decb
aam
dec
push
mov
movsl
cmpsb
or
movsb
xchg
xchg
mov
push
ds
pop
dec
cs
daa
mov
addb
cltd
cmc
xchg
xchg
rcrb
dec
and
bound
adc
dec
lcall
sbb
or
sub
or
popa
sub
lcall
mov
and
cld
into
and
sub
sbbl
jb
rcrb
mov
adc
mov
xchg
push
pop
xchg
or
or
xchg
dec
dec
andb
sbb
stos
inc
pusha
mov
inc
dec
sbb
xlat
push
adc
ss
and
lret
and
jl
pop
inc
les
out
cmpsb
sbb
cwtl
out
jbe
cmc
repz
push
sbb
mov
push
or
xor
imul
inc
push
add
adc
push
add
mov
adc
test
add
outsb
dec
repnz
and
in
or
and
add
je
fs
mov
and
mov
push
call
adc
mov
in
test
push
les
lret
pusha
sbbb
push
lret
inc
hlt
xor
mov
popa
jp
mov
dec
xchg
stos
xor
cmp
adcb
mov
leave
loope
in
pusha
lcall
or
sbb
scas
xchg
sbb
mov
cld
popa
push
and
and
dec
adc
adc
mov
jo
rcrb
mov
dec
outsb
leave
dec
jl
add
fs
sbb
movsb
test
fcoml
sbb
imul
aad
dec
andl
xor
push
add
xor
mov
xlat
lret
xchg
xor
mov
pop
inc
dec
sbb
mov
sbb
pop
xor
push
gs
sbb
lret
pusha
adc
mov
xor
cmpsb
adc
sahf
adc
sbb
or
sbb
mov
xchg
fmuls
je
es
imul
cs
mov
stos
ljmp
xor
xor
loopne
mov
xchg
data16
or
and
adc
gs
rorb
adc
sbb
sbb
push
push
jb
cli
sbbb
dec
add
pop
xor
out
jo
jo
sub
out
xor
fsubp
jbe
sbb
add
jp
hlt
les
adc
cmp
push
or
mov
int3
mov
scas
adc
dec
mov
les
xor
ljmp
test
add
aad
push
pop
inc
fcomps
mov
push
push
sbb
retw
loopne
or
add
xor
mov
xchg
pusha
adcb
pushf
and
call
or
repnz
sub
inc
push
add
mov
mov
dec
mov
jmp
mov
add
cwtl
cmp
inc
rol
mov
xchg
test
stos
and
enter
es
add
or
cmp
adc
nop
mov
add
cwtl
and
xchg
xor
or
les
loope
aad
push
pusha
lcall
cmp
icebp
gs
orl
push
xchg
hlt
loop
lods
inc
mov
mov
pop
xchg
sub
adc
jg
mov
mov
mov
or
push
inc
and
mov
js
adc
in
or
nop
sbb
sbb
cmp
dec
add
or
dec
adc
outsb
leave
sbb
in
add
inc
out
nop
cmp
or
inc
movsb
xchg
add
enter
pop
idiv
xor
xor
cmp
or
addb
add
adcb
mov
fadds
cs
sbbb
dec
lret
hlt
and
xchg
cli
ficoms
mov
roll
sub
push
dec
or
and
jo
jb
clc
cmpsb
adc
and
mov
add
popa
add
test
adc
push
push
jb
xor
inc
inc
or
sbb
add
call
adc
xor
je
lea
out
cltd
inc
push
pop
cmc
add
orb
ret
dec
ljmp
cwtl
mov
lods
lock
jo
add
xchg
push
or
inc
push
lock
adc
pop
mov
adcl
dec
lods
outsb
lret
xchg
push
lcall
adc
pusha
pop
pop
xor
rclb
jb
ret
ds
sbb
push
bound
add
loop
ret
pop
xchg
push
add
and
inc
inc
or
push
test
pusha
add
inc
shl
in
dec
fdivr
mov
shrb
push
pop
or
push
push
mov
jo
add
pop
sbb
cmp
hlt
int3
aam
sbb
cwtl
ret
or
fdivl
push
pop
mov
push
sub
adcl
in
cwtl
sbb
bound
mov
enter
mov
xor
push
dec
push
loopne
sbb
and
sbb
loop
call
dec
pusha
or
addb
and
xor
subb
aam
mov
jne
lods
add
jo
adc
nop
push
and
add
daa
in
fsubrs
jbe
add
lea
fs
push
adcl
cmp
xchg
xor
dec
and
es
mov
jnp
xchg
jns
fdivrs
cmp
xchg
jb
dec
sub
in
add
and
addb
xchg
in
add
insl
inc
mov
push
pusha
and
out
push
cli
mov
inc
xchg
gs
ss
cmpsb
mov
dec
sbb
sbb
jns
test
and
cltd
mov
xor
push
inc
ljmp
pop
sbb
sub
mov
xchg
or
jbe
ds
ret
inc
mov
clc
sub
roll
inc
push
ljmp
fsts
scas
cld
enter
push
jp
fs
mov
and
shlb
sbb
adc
test
mov
mov
rcr
sub
mov
cwtl
test
andb
dec
push
and
negb
xchg
mov
xchg
inc
sub
lret
push
sbb
xor
lods
xor
fcompl
push
int3
push
xchg
adcl
adc
je
fs
xor
mov
ret
and
rcll
les
or
mov
enter
dec
scas
xchg
push
fadd
adcb
out
cmpsb
or
les
xor
add
call
test
aaa
movsb
xor
adc
push
push
add
fsubrl
ljmp
sbb
sub
xchg
faddl
and
inc
in
jne
shll
mov
sbb
movsb
ds
or
push
cwtl
enter
push
data16
mov
int3
hlt
cmp
xor
and
aam
xor
scas
inc
test
adc
gs
jb
inc
jl
inc
test
xor
fsubrs
add
add
ds
mov
shlb
mov
mov
pusha
gs
pop
in
push
or
sub
es
mov
and
xchg
dec
dec
insb
mov
sahf
adc
xor
cltd
pushw
or
sbb
and
inc
sbbl
xchg
fbstp
dec
inc
inc
hlt
mov
add
inc
sub
sbb
inc
je
lret
aad
pusha
or
cmp
int3
inc
test
cld
pusha
and
mov
xchg
jne
les
imul
push
lea
push
mov
add
faddl
int3
dec
gs
sbb
ljmp
lock
add
inc
js
mov
cli
jno
mov
inc
fisubrs
and
cltd
dec
sub
adc
test
push
fmull
add
push
mov
sar
lcall
jb
fs
es
pop
push
sbb
mov
xor
loop
xor
mov
enter
xor
xor
xor
xor
dec
not
andl
es
jb
xor
sub
inc
and
pop
call
adc
sbb
adc
ret
and
or
xor
xchg
xor
lcall
enter
andb
jae
adc
sbb
cs
faddl
jle
inc
add
ret
call
or
add
xchg
and
add
pop
xchg
rcr
es
xor
ds
or
add
mov
shll
sbb
subb
andb
adc
pusha
jne
add
loop,pt
mov
push
dec
test
jle
gs
adc
cltd
rorb
push
ret
xchg
inc
sub
pop
pop
mov
icebp
adc
add
or
mov
rorb
sub
lea
mov
inc
mov
pusha
dec
inc
pushf
xchg
adc
xchg
mul
bound
sub
es
loop
mov
loop
xchg
into
cltd
sarb
fs
loop
mov
xchg
scas
repnz
test
add
in
jp
outsb
or
test
inc
mov
jns
push
sbb
or
mov
subb
cltd
pusha
mov
mov
repnz
or
push
lock
inc
mov
sub
aam
fdivrl
or
or
or
sbb
add
push
inc
sub
scas
pop
in
es
jle
clc
mov
pop
mov
movb
ds
mov
xchg
dec
fs
mov
pop
js
cmp
mov
sbbb
add
test
cmpsb
pop
mov
push
cmp
aam
inc
call
in
inc
push
push
jmp
xchg
fmul
or
xor
xor
cld
shlb
test
cltd
cmp
int3
movsl
push
mov
outsb
xor
pop
sub
gs
dec
clc
cli
and
test
jo
sbb
or
add
jo
cmpsb
add
or
fcoms
lock
imul
insb
pop
push
lret
data16
sbb
push
fiaddl
add
in
nop
leave
push
xchg
xor
xor
sub
mov
cmpb
inc
das
xor
push
dec
mov
ret
les
push
fwait
loop,pt
rorb
dec
push
mov
mov
loop
mov
cmp
call
fldt
and
cmp
insl
int3
push
sub
and
xchg
pop
loope
add
out
out
cmc
movb
insb
add
int3
scas
ret
push
xchg
jle
or
lcall
pop
out
cmp
fbstp
xorl
inc
loopne
imul
mov
or
inc
push
cld
and
xor
push
adc
xor
scas
push
xchg
nop
arpl
ds
mov
mov
ds
in
sub
or
movsb
loopne
or
jb
push
inc
and
loopne
sbb
js
push
or
add
mov
rcll
dec
js
push
jb
inc
add
test
push
jb
dec
push
push
aad
movhps
repz
testl
cmpsl
add
lcall
roll
cmc
mov
test
push
stos
inc
and
cmp
add
adc
movsl
addb
sub
adc
lret
and
dec
add
cwtl
out
push
jo
mov
jb
and
mov
adc
rclb
mov
mov
add
jl
cld
add
push
xchg
in
dec
into
cmp
mov
adc
jns
test
mov
fimuls
fs
insl
sbb
jbe
sbb
test
mov
cld
aam
adc
push
int3
jp
mov
les
add
adcb
push
inc
cli
cli
aam
or
xchg
mov
imul
mov
cmp
or
ds
mov
dec
dec
stos
add
or
ret
sub
inc
mov
mov
and
adc
in
or
insb
push
push
fs
mov
cmpsl
xor
cmp
push
out
ds
mov
js
and
mov
inc
mov
pushf
arpl
fmull
int3
push
push
fadd
push
stos
imul
jl
rclb
xchg
stos
cs
movsb
imul
sub
add
xchg
cltd
push
mov
dec
dec
jne
arpl
adc
enter
adc
mov
add
test
and
add
je
fs
les
outsb
mov
mov
mov
in
xchg
pop
orl
cwtl
lock
dec
adc
aam
cltd
add
out
sbb
push
test
stos
mov
or
or
inc
push
adc
dec
dec
sub
mov
push
test
scas
push
sarb
fdivp
test
inc
pusha
xor
mov
int3
inc
cwtl
pusha
add
adc
andl
pusha
mov
rorb
fiaddl
mov
add
push
in
into
or
dec
movsb
test
push
xor
mov
mov
lods
and
ljmp
cltd
fcoml
mov
aam
add
data16
or
inc
sub
xor
mov
es
pusha
xor
pop
sahf
xchg
test
xor
sub
xor
xchg
cwtl
pop
mov
aaa
mov
addl
pop
or
push
ljmp
out
jns
jns,pt
leave
jne
ds
add
nop
dec
jo
adc
adc
add
dec
inc
or
or
sub
clc
xor
or
fs
in
mov
xchg
push
xchg
lret
sbb
js
lcall
popa
jnp
dec
rorb
in
jp
roll
adc
ljmp
mov
ror
or
sub
sbb
loopne
insl
mov
les
sub
push
shlb
dec
outsb
clc
es
or
lods
pop
in
and
lcall
outsb
ret
push
add
xchg
fs
dec
cmpsb
insl
je
test
lcall
ret
pusha
mov
or
sbb
add
lods
and
add
jle
mov
dec
add
cmpsl
pop
nop
and
sbbl
call
cmpsb
insb
adcb
sbb
jl
test
sub
and
or
test
int
mov
inc
outsb
push
and
adcb
negb
popa
mov
loop
push
jmp
loope
into
mov
int
push
sahf
je
jne
adc
out
sbb
push
xor
orb
adc
dec
and
mov
rcrb
sub
xchg
cld
and
add
and
aam
nop
fldcw
pop
test
adc
or
jo
or
add
add
ret
into
cs
cmpsb
sbbb
sbb
adc
movsb
sbb
mov
orl
loop
out
adcb
xor
shlb
or
cmp
fcomp
inc
sbbl
add
shrb
outsb
mov
mov
divb
out
loop
es
sbb
ljmp
pop
dec
jo
xchg
sbb
push
cmpb
jne
sbb
lret
or
test
cwtl
jb
xor
addb
loop
scas
xchg
cld
adcb
add
add
xchg
scas
adc
stos
sbb
adc
imul
inc
dec
test
test
push
sbbb
push
cmp
sbb
lcall
lods
aad
loop
xchg
cltd
test
sbb
int3
xchg
xor
in
sbb
pop
ss
sbb
sbb
loopne
xorl
enter
call
jne
add
add
xchg
testb
cld
loop
mov
push
pop
push
and
ret
and
xchg
nop
lods
xchg
in
imul
push
orl
pop
lods
adc
int3
orl
inc
mov
lcall
cmp
jb
roll
addb
into
or
pusha
jo
xor
in
or
test
call
call
aam
enter
cmpsl
dec
adc
lock
call
push
stos
ja
mov
movsb
insb
push
mov
add
dec
lret
loop
test
leave
loope
mov
mov
push
cmpsb
pop
pop
and
int3
push
mov
xchg
mov
addb
mov
gs
push
out
sbb
push
cld
push
fstl
sub
lcall
xchg
mov
inc
sub
scas
sbb
adc
inc
imul
push
and
mov
dec
test
xchg
lcall
mov
movsb
pusha
add
test
xor
adc
inc
cmp
or
add
jl
stos
rolb
fs
cltd
fs
mov
and
outsb
xchg
xchg
subl
pusha
xchg
mov
fdivrs
adc
mov
mov
xorl
xchg
lret
call
sub
add
mov
push
add
stos
or
inc
fdivl
insb
or
jne
add
test
xor
mov
sub
adc
push
push
in
adcb
dec
mov
jne
ljmp
stos
lcall
out
cmc
push
jecxz
nop
ss
or
cwtl
or
cwtl
adc
or
lret
icebp
into
xorl
pop
cmp
jno
dec
jbe
ds
in
shlb
xchg
out
stos
sub
call
dec
inc
cmp
pushf
cmp
popa
sbb
out
dec
test
mov
jb
add
pop
and
enter
adc
fs
andb
les
pop
ret
dec
test
test
dec
mov
mov
push
ret
or
and
inc
in
jb
insb
nop
push
sbb
adc
mov
jo
ljmp
scas
cmpsb
xor
sbbb
xchg
xor
and
decb
addr16
cmp
or
mov
or
mov
data16
addb
and
xchg
mov
sub
cwtl
or
mov
add
inc
fdivrl
sub
xor
cltd
and
shrb
adc
sub
stos
dec
rorb
xchg
pusha
stos
dec
insb
es
xchg
shrl
cltd
idiv
lret
mov
xor
cltd
ss
jo
cltd
sub
and
popa
adc
into
sbb
jle
adc
xchg
fdivs
loopne
pushf
hlt
scas
mov
inc
fs
or
rolb
push
ss
sbb
and
dec
or
call
inc
sub
in
into
jge
jge
mov
cwtl
std
ret
mov
sub
les
cld
or
xchg
pop
xor
outsb
sbb
dec
mov
pushf
xchg
sub
inc
subl
sbb
call
dec
js
nop
or
or
cmp
popa
es
pop
mov
mov
cli
and
mov
in
pop
mov
aaa
dec
push
gs
jo
mov
insl
mov
xchg
pop
sbb
mov
into
sbb
lcall
sub
jb
add
adc
sub
mov
mov
ret
xchg
mov
xor
adc
push
nop
aam
and
adcb
push
movsl
cmp
shr
inc
fistpll
test
fisubl
loopne
push
int
xor
je
mov
xchg
xor
cmp
ret
dec
sbb
in
and
fs
test
loop
adcl
mov
add
dec
loopne
mov
dec
mov
mov
adc
pusha
inc
xchg
adc
push
js
sarb
xchg
ljmp
fadds
xorb
add
dec
cs
movsb
mov
roll
fsubrl
add
out
sub
sbb
cli
or
fcoms
loop
sub
or
push
subb
andb
mov
xchg
add
pop
addb
or
fcompl
cmp
es
cltd
jne
int3
test
rorl
pop
inc
and
pop
outsb
pop
push
push
test
push
cmpsb
mov
cmpsb
dec
inc
popa
push
push
adc
les
add
push
mov
test
sarl
out
aad
roll
mov
data16
inc
rolb
add
cmpb
inc
sub
stos
add
data16
adc
imul
dec
lock
popa
cwtl
pushf
cld
outsb
movb
mov
aam
adc
and
add
mov
test
pop
outsb
jo
xchg
dec
scas
stos
xor
or
push
lods
xchg
imul
push
cwtl
imul
cmp
xor
push
pop
sbb
lods
cli
mov
mov
jp
ljmp
push
enter
mov
inc
cmp
pop
nop
rorl
leave
mov
pop
in
dec
sub
jbe
mov
or
push
add
pusha
or
xchg
dec
mov
mov
cltd
ret
mov
jbe
int
sbb
push
inc
mov
cli
lcall
jo
je
add
sub
ljmp
sub
jns
mov
mov
dec
adc
es
xor
push
adc
loop
mov
loope
inc
cli
cmp
adc
cmp
cs
pop
sub
imul
or
pop
aam
insl
add
inc
or
mov
ret
pop
scas
cmp
loopne
stos
popa
lcall
cmp
inc
adcb
adc
sbbl
push
sahf
je
adc
test
sub
jbe
dec
add
lods
lods
fs
xchg
ret
call
faddl
pop
xor
data16
addb
hlt
aad
cltd
cmpb
adc
test
sbb
clc
test
or
out
push
loopne
sub
in
add
les
inc
xchg
testb
or
test
inc
sub
mov
mov
enter
jp
fs
lcall
mov
dec
in
sbb
scas
sbb
mov
into
int3
dec
aad
adc
test
cmpsb
pusha
push
pop
xchg
mov
mov
push
into
dec
add
pop
push
or
fcom
adc
and
xor
add
adc
jo
adc
inc
inc
pop
lock
test
test
sub
add
push
out
pop
fs
inc
mov
sbb
cmp
add
nop
aam
or
cmp
in
call
sub
insl
lcall
adc
ret
xchg
movsb
pop
adc
add
shlb
sub
loop
mov
pusha
or
addb
data16
pop
imul
jle
xor
fs
cs
sbb
mov
insl
cmpsb
push
adc
out
inc
push
push
sub
and
cmc
je
es
add
dec
cmpsb
dec
outsb
lcall
gs
add
ret
cli
xchg
and
pop
scas
adc
adc
scas
js
mov
ds
sub
ds
sub
mov
sbb
xchg
loope
mov
js
test
int3
dec
add
and
xchg
xor
into
rcrb
rolb
adc
lret
inc
repnz
es
mov
int3
xchg
inc
or
xchg
mov
mov
js
cmp
mov
lcall
add
xor
mov
dec
inc
int3
cmp
sub
sub
or
push
mov
push
dec
add
xor
push
push
lcall
mov
add
jp
push
into
scas
mov
insb
and
xchg
dec
and
shrl
xchg
mov
jmp
mul
push
add
add
sub
dec
xor
outsl
sub
sub
push
push
inc
incl
inc
sbb
dec
mov
inc
sbb
adc
xor
adc
incb
negb
iret
rolb
push
add
mov
arpl
adcb
dec
lahf
and
test
xchg
aam
pushf
push
push
adc
dec
int3
and
xor
dec
xchg
push
dec
idivl
lcall
orb
js,pt
shrl
addb
and
xchg
add
pusha
sub
cltd
push
push
inc
cld
xchg
mov
stos
sub
cs
loop
cmp
js
fisttps
push
enter
mov
mov
xchg
gs
cwtl
subl
aam
scas
test
push
cltd
lcall
mov
leave
and
mov
mov
lock
pop
add
jns
xor
insl
cltd
int3
cltd
mov
test
push
push
pop
data16
jle
gs
push
add
push
mov
imul
les
mov
inc
dec
or
out
loopne
xor
dec
fsubrs
es
sarl
loopne
and
mov
xchg
lret
cli
xchg
dec
addb
cmc
mov
push
jle,pt
jp
popf
sbb
mov
xor
add
dec
xor
push
and
out
dec
mov
sbb
sbb
mov
mov
add
cmp
pusha
xchg
add
and
cltd
cmp
test
add
or
and
jb
xor
es
add
in
mov
push
jb
sbb
sbb
push
push
loop
loope
ss
fs
push
es
mov
sub
xor
je
add
xor
pop
xor
insl
cmpsb
pop
cmp
sbb
add
push
xchg
xorl
adc
mov
insl
mov
mov
rclb
pushf
xor
data16
or
in
cwtl
mov
in
pusha
cmpsb
sbb
cltd
push
or
scas
addb
adc
xor
pop
push
xchg
loop
sub
int3
mov
add
jbe
clc
xor
inc
faddl
pushf
adcb
inc
pusha
in
push
inc
loop
stos
cmp
sub
subl
push
dec
xchg
push
inc
or
xchg
sbb
sub
test
pushf
and
orl
jno
shrb
outsb
int3
mov
cmc
cli
sub
push
xchg
pop
push
adc
sbb
bound
add
inc
pop
in
lods
inc
mov
push
repnz
fisubs
data16
roll
and
sub
or
mov
add
insl
rorb
cwtl
scas
or
inc
add
lods
and
xchg
xor
push
sbb
inc
xor
mov
cltd
cs
and
inc
adc
adc
rolb
sub
xor
lret
xchg
shlb
or
ret
dec
enter
jae
and
cld
or
je
dec
pusha
cmp
mov
push
dec
xor
add
and
in
mov
pop
xchg
add
and
cltd
push
add
xor
sbbb
and
sbb
pop
xor
dec
push
push
mov
out
rol
jle
shll
dec
mov
sbb
mov
xor
add
dec
or
add
dec
mov
lret
popa
test
in
dec
add
add
cltd
dec
xchg
dec
mov
dec
inc
inc
sbb
or
cltd
add
call
rcrb
js
push
in
test
add
xchg
xor
fs
mov
sbb
mov
out
pushf
xor
cmp
movsb
or
inc
inc
pop
int3
lcall
int3
adc
jge
andl
xchg
and
movsb
jl
fs
out
inc
dec
xor
dec
adc
xchg
or
xchg
add
fcoml
push
adc
dec
test
data16
push
push
push
cld
cmp
xor
pop
adc
pop
sub
imul
sbb
faddl
push
rorl
add
xchg
sub
dec
faddp
cld
insb
cltd
inc
add
adc
mov
sub
dec
sub
sbb
adc
scas
xchg
cli
cltd
xorb
and
jb
adc
xor
test
rcrb
call
mov
inc
push
pusha
mov
inc
xchg
mov
xchg
mov
dec
loope
inc
je
pop
int3
sbbb
adcl
aad
mov
inc
sub
loopne
fs
jbe
imul
loope
int3
adcb
push
cmpsb
push
es
add
dec
sbb
mov
jb
loope
sbb
dec
jbe
mov
sub
lds
mov
mov
addl
pop
pop
cs
pusha
add
decb
test
inc
inc
mov
mov
and
fcoms
pop
push
inc
cli
andb
or
dec
jb
imul
test
dec
push
shlb
daa
int3
mov
shrb
test
mov
adcb
aad
test
inc
pusha
cmc
push
push
shrb
aad
ss
scas
add
rolb
enter
mov
adc
mov
xor
push
loopne
or
inc
cld
testb
add
sbb
sbb
icebp
mov
inc
mov
add
push
cmp
loopne
push
adc
mov
inc
test
mov
adc
sub
enter
je
add
mov
data16
sub
sub
or
mov
xor
cmp
xor
wbinvd
add
xchg
or
ds
in
sbb
cmp
sbb
add
adc
cld
xchg
jo
sub
fmull
cmpsb
jae
mov
movsb
and
mov
xchg
es
out
js
movsb
xor
ss
mov
out
push
clc
xor
rorl
dec
fdivs
gs
cwtl
pushf
mov
scas
dec
push
mov
fcomps
rolb
dec
movsl
adc
test
add
mov
test
or
push
xchg
xchg
insb
jl
andb
gs
rcl
lock
lods
push
mov
enter
mov
lods
add
xchg
xchg
je
dec
test
sub
pusha
adc
aam
sahf
test
cltd
add
loop
pop
cmpsb
sbb
hlt
rorb
adc
enter
push
scas
adc
xchg
and
ds
imul
loopne
mov
push
lods
mov
inc
add
test
loopne
sub
loopne
inc
aad
call
xchg
inc
js
add
push
and
push
out
nop
cli
xor
loopne
xor
pop
mov
xor
or
inc
popa
sbb
sbb
sarb
push
or
out
inc
cmp
add
fmull
mov
and
adc
dec
xor
faddl
xor
cltd
pop
popa
es
or
js
mov
add
enter
ret
xor
dec
xchg
dec
inc
and
or
and
lock
push
andb
adc
adc
dec
and
and
adc
insb
jo
and
je
mov
add
je
dec
insb
sub
mov
jae
fs
hlt
mov
les
adc
scas
mov
pop
clc
adc
pop
test
es
add
adc
mov
shrl
xchg
dec
gs
jle
jns
xor
add
add
push
popa
or
adc
lcall
in
lret
and
inc
jne
fmuls
insb
push
push
mov
pusha
xor
push
loop
mov
pop
or
push
xchg
mov
push
stos
pop
es
js
loopne
loopne
dec
xor
pop
es
shlb
aaa
and
dec
push
add
sbb
or
inc
fisubl
add
adc
clc
mov
inc
lret
xor
jecxz
sbb
roll
dec
xchg
mov
sahf
or
les
in
orb
adc
cli
or
or
and
ret
scas
and
xor
cs
shrb
lcall
data16
jp
sub
popl
shrb
int3
movsb
dec
nop
mov
xchg
rolb
sbbb
or
mov
imul
mov
movsl
push
into
jbe
or
addl
xabort
test
push
daa
loope
sub
mov
add
and
fs
pop
adc
push
adc
dec
push
fcmovbe
fsubs
pop
adc
sub
adc
aam
and
ss
push
cli
pop
or
and
enter
xor
stos
hlt
mov
sbb
inc
cli
gs
adc
lcall
pusha
lret
xor
and
push
and
ljmp
push
sub
lock
dec
push
adc
sbb
test
and
mov
adc
xor
add
cmp
data16
fistl
xchg
shlb
push
loop
imul
push
mov
inc
dec
and
add
in
lret
test
sub
shl
sub
cmc
sub
adc
or
add
cmc
inc
mov
aam
xor
lret
mov
nop
fidivrl
sbb
dec
shlb
insl
aam
into
mov
sub
pop
dec
mov
mov
cwtl
fwait
shlb
gs
xchg
mov
hlt
mov
xchg
jb
add
mov
ljmp
cmp
cli
or
test
push
pop
int3
and
popa
mov
mov
lds
inc
enter
cmpsb
lcall
es
adc
push
or
clc
cld
add
adc
sbb
int3
push
aad
add
daa
stos
xor
mov
addl
or
pop
adc
and
int3
loop
dec
mov
mov
loope
mov
outsb
inc
cs
data16
loop
or
inc
test
out
cmp
pop
cld
xchg
divb
pop
sbbl
insl
fcoms
or
push
test
xor
inc
mov
lods
xchg
loopne
dec
movsb
push
subb
xchg
dec
push
add
or
jae,pn
mov
mov
dec
inc
clc
insl
or
xchg
test
cmp
push
aam
cltd
dec
pop
loop
add
test
jle
sahf
insb
scas
js
jo
sbb
mov
inc
int3
push
add
add
xor
xchg
xchg
cs
ret
add
fisubrs
test
dec
push
aam
loopne
sbb
lods
inc
and
scas
mov
push
xchg
add
cmp
aad
jb
aam
jbe
bound
in
push
sbb
inc
addb
stos
imul
mov
sub
xchg
sarb
jb
add
mov
clc
push
sub
mov
or
push
adc
mov
cs
push
xchg
add
repnz
push
add
mov
inc
enter
in
sbb
ret
sbb
or
mov
es
outsb
mov
cwtl
rclb
push
lcall
ss
pushf
xchg
dec
push
push
jo
dec
cmp
movsb
push
jo
sub
jp
shlb
xchg
sbb
push
xchg
inc
dec
sahf
sbb
add
ficoml
sahf
int3
dec
lock
pop
jle
lret
pop
pop
sub
add
push
jo
add
test
adc
sbb
movsl
movsb
push
cs
sbb
push
adc
gs
and
push
mov
adc
or
enter
ljmp
xor
movb
push
push
je
cmp
and
fs
mov
sbb
loop
dec
ficoml
xchg
push
cmp
sahf
es
pusha
sbb
rorb
je
add
es
inc
bound
mov
push
cs
cwtl
or
push
bound
fisttps
adc
inc
pusha
cli
and
push
cmpsb
add
les
or
lock
inc
xchg
jb
insb
es
ret
mov
rclb
sub
lods
test
cmp
xchg
enter
add
sub
pop
xor
or
mov
cli
jle
add
sbb
add
dec
inc
movsl
add
cli
cltd
push
mov
sbb
fisubl
leave
add
jo
sbb
cmp
push
lods
sub
bound
add
popa
out
push
movsb
repnz
inc
leave
mov
sub
pop
or
inc
mov
inc
leave
gs
mov
push
cmp
rolb
xor
gs
add
hlt
test
xchg
rolb
cmp
add
sub
loopne
push
or
inc
xchg
andb
add
test
xor
mov
xor
inc
sbb
cld
cli
test
test
out
popa
cwtl
sbb
dec
fs
in
and
or
add
pop
in
dec
outsb
mov
imul
push
cli
lcall
fsubrs
repnz
mov
loopne
cmp
mov
add
mov
fiaddl
out
dec
pop
add
add
adc
push
xchg
or
adc
add
insb
jnp
ss
fcoms
sbb
mov
in
arpl
lret
push
mov
scas
sahf
sub
clc
inc
or
inc
mov
push
push
roll
adc
jmp
push
sbb
mov
and
ljmp
inc
sbb
pop
call
push
push
mov
jo
push
mov
or
in
add
shl
aam
push
push
std
pop
shlb
cmpsb
or
movb
add
adc
cmp
sub
call
aam
pushf
push
xchg
rolb
inc
andl
inc
je
aad
mov
push
mov
sbb
mov
jle
xchg
ret
mov
pop
into
add
cmc
stos
mov
mov
xchg
push
xchg
test
ds
mov
dec
invd
outsb
push
jo
mov
or
jp
aaa
aad
mov
and
add
pushf
lret
dec
ret
xchg
adc
fs
je
adc
pusha
jns
push
dec
add
addb
jb
push
cli
scas
cmp
rolb
repnz
sub
cmp
mov
add
scas
ret
or
loop
add
mov
aam
aad
cmpsb
inc
add
outsb
inc
lret
loope
sbb
lods
cmp
push
push
or
cmpsb
mov
aad
jl
loop
xor
cli
sbb
jbe
cmp
push
inc
pop
ret
in
data16
int3
and
sub
add
stos
sbb
add
adc
lcall
dec
mov
adc
mov
sbb
jne
mov
pop
dec
mov
mov
adc
mov
cs
dec
sub
or
xor
xchg
es
aam
js
je
adcb
jp
cltd
fwait
sub
xchg
cmp
popa
adc
shrb
cmp
cmc
imul
jne
ret
or
subb
shlb
xor
jns
mov
imul
or
sub
lcall
les
stos
cmp
add
mov
into
lcall
mov
shlb
imul
xor
push
insl
and
pusha
adc
push
inc
sbb
addb
xor
fdivr
fbld
mov
push
or
jbe
sbbb
push
cwtl
cmpl
adc
sbb
sbb
xchg
pusha
es
ss
xchg
lret
or
hlt
xchg
push
xor
lret
cld
in
loope
and
inc
out
push
rcrl
lcall
mov
xchg
hlt
gs
xchg
xor
clc
xchg
cs
mov
push
dec
mov
mov
fisubs
mov
or
inc
bound
or
nop
adcl
test
nop
sub
jb
xor
xor
aam
push
mov
inc
es
mov
cli
push
cmpsb
les
or
and
aaa
mov
rolb
lret
xchg
lods
lds
and
add
mov
push
aad
dec
setno
stos
fsqrt
push
cli
dec
test
lea
xchg
ret
inc
scas
jp
add
stos
addl
fdivl
mov
imul
xchg
or
and
pop
sbb
sub
and
or
sbb
and
fs
xor
dec
jbe
cmp
flds
xchg
fs
xor
sbb
imul
aam
add
test
rolb
xor
dec
push
mov
idivb
dec
es
inc
in
adc
add
fcoml
xor
cmp
rclb
cs
test
stos
test
popf
and
loope
sbb
mov
mov
add
sub
repnz
ds
push
xchg
xor
mov
test
test
push
into
xchg
shlb
mov
mov
ss
addb
cmp
scas
push
mov
adcb
icebp
dec
jns
ret
mov
inc
in
lcall
xchg
rolb
jl
jne
dec
xor
dec
push
pop
scas
ljmp
add
sub
outsb
add
cmpb
xchg
push
jb
pop
sbb
inc
test
insl
xchg
insb
and
mov
adc
dec
inc
lret
and
sbb
ljmp
push
sub
pusha
mov
pusha
cltd
lret
test
xchg
xchg
xor
adc
add
movb
gs
pop
lods
xor
cmp
ret
mov
dec
fs
add
sub
clc
aad
push
stos
xchg
ficomps
enter
loopne
adc
mov
or
nop
loop
loop
into
xchg
ret
xchg
push
add
bound
sahf
inc
pop
das
sbbl
notb
fwait
add
mov
addb
mov
decb
inc
outsb
or
xchg
rolb
or
daa
add
aam
mov
inc
and
mov
xchg
and
es
adc
add
mov
movsb
mov
push
inc
xor
inc
lcall
mov
je
loope
inc
push
add
mov
pusha
pusha
or
je
dec
push
cltd
dec
ret
fdivs
nop
mov
jmp
mov
movsb
xchg
push
xchg
mov
and
or
dec
test
push
xor
lcall
inc
or
mov
adc
aam
decl
xchg
pop
sub
cmp
popa
push
sbb
add
add
mov
sbb
add
pop
out
sti
fildl
push
sub
pushl
loopne
dec
pop
pop
imul
adc
sbb
mov
fimuls
testl
mov
divb
xchg
fisubrl
add
push
mov
cmpsb
xchg
add
sbb
scas
sbb
cmp
fs
inc
xor
cltd
insb
jne
mov
and
and
test
dec
dec
outsb
xor
push
push
in
jns
into
orb
push
or
jl
sbb
test
sbb
xor
shlb
or
scas
divb
hlt
in
push
pop
push
nop
bound
mov
mov
rcrb
test
sub
test
or
pop
outsb
pop
fcoms
lock
or
and
xchg
pop
xor
jb
pop
daa
xchg
cld
jne
cmp
lcall
or
or
add
jbe
in
add
mov
ds
lods
cmc
mov
or
dec
sbb
sbbb
xchg
push
pusha
hlt
inc
ljmp
insl
mov
mov
adc
xor
lock
mov
les
mov
cwtl
dec
xchg
mov
xor
mov
faddl
shlb
mov
fs
out
add
faddl
xchg
icebp
gs
scas
stos
jl
and
or
cwtl
nop
adc
es
jo
or
inc
lock
ljmp
lcall
pop
pop
sbb
mov
js
or
insb
imul
outsb
test
mov
cwtl
lretw
push
es
mov
adcb
sbb
bound
inc
dec
loope
fiaddl
jo
insb
fidivrl
mov
ret
cmpsb
cmp
pop
push
pop
mov
push
push
cmc
les
pusha
clc
addl
xchg
dec
add
pushf
cwtl
jmp
or
les
cli
xchg
add
sub
test
push
pusha
add
mov
jo
pusha
jo
add
mov
inc
xor
dec
or
adc
sub
pushf
mov
cmpl
push
ret
inc
cs
add
pusha
ss
cmpsb
ds
sub
les
sub
lcall
and
xchg
push
ffree
jecxz
lcall
or
inc
dec
rorb
push
jmp
aad
fs
jo
or
add
into
bound
adc
mov
sbb
sbb
inc
pusha
push
scas
add
sbb
push
add
testb
inc
push
je
or
aas
ret
mov
mov
fidivrl
mov
mov
push
fisttpll
clc
sub
inc
add
push
fldl
ret
lods
add
inc
adc
shll
and
orb
cld
inc
mov
xorb
inc
push
pop
pop
adc
subb
dec
sbb
adc
push
mov
adc
cltd
in
jl
and
rol
into
mov
sbbb
lods
pop
inc
inc
dec
sbb
mov
andb
push
mov
sbb
ret
fisubrs
and
lock
add
lcall
push
enter
jae
xor
lret
rcrb
pushf
push
aam
xor
gs
cltd
dec
loop
push
loop
add
xchg
fs
push
inc
push
xorb
xor
cltd
scas
je
aam
call
stos
add
sbb
clc
push
cmc
clc
cltd
mov
jo
fimull
sub
adc
xchg
add
fisubs
inc
dec
mov
add
add
add
jo
or
repnz
insl
xchg
add
push
pop
or
inc
jb
mov
bound
les
jo
push
or
andb
and
clc
ret
aam
push
fs
mov
imul
mov
inc
push
lcall
mov
push
mov
or
pop
cmp
adc
mov
pop
adc
shrb
add
or
pusha
push
xchg
push
xlat
push
cmpsb
mov
loopne
cmp
mov
adc
and
sub
fisubrs
adcl
aam
aad
xchg
jge
int3
xor
fsubrl
popa
sbb
mov
add
scas
add
rcrl
cmp
or
add
mov
mov
mov
ret
push
sub
cmp
or
aaa
xor
and
push
pop
and
dec
add
mov
jl
dec
ret
adc
pusha
and
es
ds
push
imul
mov
adc
push
dec
xor
cmpsb
xor
adc
xor
ds
loopne
cmp
adc
pop
test
sub
into
push
lcall
xchg
add
aad
sub
sub
xor
es
pusha
inc
je
sub
adc
aad
or
scas
rolb
push
push
push
add
fmul
jo
pop
jo
mov
imulb
add
test
mov
cmp
mov
decb
cltd
mov
jno
cltd
fcoml
ds
imul
cmpsb
in
mov
insl
inc
sub
sbb
xchg
enter
push
inc
mov
stos
mov
jne
dec
adc
out
inc
fsubl
mov
xor
mov
movsl
hlt
nop
in
loopne
mov
int3
jne
sub
subb
mov
or
cwtl
add
mov
ds
or
das
or
pop
inc
loop
add
movsb
sbb
les
es
cwtl
add
cmpsb
ret
or
sbb
or
add
push
jb
push
sbb
add
lret
stos
sahf
xor
or
sbb
mov
and
dec
sub
and
jb
xor
outsb
xor
test
movsb
mov
mov
dec
cs
push
cmpsb
mov
negb
pop
pop
sbb
push
adc
mov
add
js
jne
bound
mov
dec
cmpsb
scas
xor
xor
mov
incb
les
sub
test
ret
lock
cmc
mov
cmp
adc
cmp
adc
rorl
fsubl
mov
int3
loope
mov
sbb
xchg
dec
jb
xchg
stos
adc
mov
jns
in
ret
jne
out
mov
hlt
inc
cli
sub
test
int3
in
adc
add
or
and
cmp
mov
lret
fimuls
test
inc
lret
leave
gs
lret
mov
inc
shlb
cld
test
les
sahf
int
and
ljmp
dec
out
pop
jl
insb
or
or
es
js
add
xor
pop
ret
and
je
add
add
and
adc
adc
sbb
aam
sub
pusha
jne
xchg
lret
push
or
sub
shlb
inc
movsb
loope
inc
inc
jle
insl
test
pop
cmp
jb
cmpsb
mov
and
or
inc
bound
pusha
add
sbb
enter
adc
repnz
pusha
cwtl
outsb
fs
mov
dec
add
insb
and
push
mov
add
pop
dec
adc
shll
xor
cmp
call
stos
out
and
xchg
lret
hlt
fiadds
mov
dec
push
cltd
loop
pop
les
mov
ret
and
add
xor
cmpsb
outsb
push
and
sub
xor
add
adc
mov
pusha
or
movb
and
imul
sub
and
mov
mov
cmp
adc
add
nop
add
lcall
pop
mov
std
mov
into
adc
add
sub
movl
adc
es
sarl
js
lods
mov
xchg
adc
push
push
push
es
inc
inc
popa
adc
andb
xchg
push
in
test
push
xchg
movb
movsl
and
xchg
sub
push
dec
js
jle
adc
xchg
ret
inc
pop
subb
xor
and
dec
cmp
sbb
jnp
pop
mov
inc
mov
js
sub
push
inc
sbb
decb
push
sbb
adc
into
dec
and
mov
scas
or
xor
ss
lret
inc
cmpb
ds
sbb
dec
jb
or
xor
scas
dec
mov
je
xor
sbb
hlt
shrb
test
sbb
decb
xor
and
ss
push
adc
add
ds
ret
dec
sub
enter
mov
into
mov
push
shrb
movsl
popa
mov
jl
bound
cli
lods
fcmovu
test
dec
fs
mov
push
addb
shlb
int3
inc
cmp
addb
jle
ljmp
pop
jo
adcl
push
shlb
daa
add
jo
rolb
adc
enter
orl
shll
push
pop
add
cmpsl
xchg
dec
insl
or
dec
jbe
xchg
popf
lods
cmpl
loopne
pop
inc
hlt
imul
add
mov
push
push
xor
pusha
inc
jl
sub
out
push
xor
pusha
jo
sub
or
or
and
inc
mov
dec
scas
lahf
or
add
cmpsb
jb
mov
or
cli
sbb
pop
test
scas
scas
gs
xlat
dec
loope
cmp
shlb
push
mov
rolb
sub
mov
rcrb
inc
and
pop
loop
and
pop
addb
mov
sbb
push
add
cli
rcl
push
mov
push
test
add
push
jle
dec
mov
add
mov
cmp
gs
adc
add
jne
mov
pop
add
pusha
jle
add
jo
enter
nop
cwtl
lock
add
mov
push
mov
fs
imul
in
add
ret
enter
popa
push
adc
pop
int3
or
push
ret
push
add
xor
push
push
inc
jo
xchg
rorb
subb
gs
push
cltd
or
dec
adc
data16
cld
push
push
stos
jns
sahf
or
iret
mov
in
in
out
adc
sub
aam
test
outsb
ret
mov
add
mov
push
inc
or
xchg
push
or
rolb
mov
sbb
push
adc
cmp
or
xor
mov
xchg
stos
sbb
adc
xchg
ret
lcall
xorb
sub
or
lock
inc
fs
cli
push
jo
repnz
adc
imul
xor
fs
dec
lcall
sbb
jmp
add
loopne
stos
push
xchg
dec
xor
adc
aam
shlb
push
dec
rclb
mov
movsb
push
adc
je
inc
mov
lods
int3
sub
mov
xor
sub
jb
scas
loop
xor
jo
add
add
sub
aad
test
imul
mov
mov
fists
cltd
mov
in
sub
inc
jl
sub
cld
pop
sub
add
imul
and
aam
mov
add
jb
push
dec
rcll
xchg
aam
pushf
mov
sub
lcall
test
sub
mov
mov
sbb
jb
cmp
test
adc
adc
mov
mov
es
mov
lret
mov
add
pop
push
pop
push
mov
pusha
mov
sahf
movb
adc
pop
enter
or
jae
aam
mov
ret
dec
push
and
adc
push
scas
cmp
out
mov
jb
push
xchg
test
xor
mov
add
sub
pusha
push
push
xor
or
mov
add
subl
cmpsb
bound
pop
mov
mov
adc
adc
push
dec
sbb
cmpsl
lods
sbb
mov
scas
sub
mov
sbbb
and
and
xor
xchg
and
xor
add
mov
lods
stos
es
mov
lods
sbb
xchg
add
mov
ret
mov
cld
pop
push
mov
fs
adc
inc
into
or
addb
outsb
mov
mov
add
mov
add
inc
push
fdivl
sub
inc
dec
sub
push
andb
push
mull
test
les
dec
inc
adc
cltd
add
add
add
pop
pop
mov
jno
fidivs
and
push
push
push
out
lock
cmc
jg
in
lea
sti
mov
add
cs
pop
add
jne
mov
rorl
rcrb
imul
mov
push
mov
ss
pusha
push
cld
cli
cmp
and
fs
les
push
and
ljmp
ds
sub
and
jbe
cmpb
cwtl
sub
or
js
xchg
dec
in
leave
add
and
pop
sbb
loop
push
sbb
xor
pop
pop
or
xchg
mov
xchg
orb
jmp
pop
ss
hlt
xor
or
sbb
cmp
sub
and
gs
pop
loope
dec
ficoml
add
adc
jp
imul
mov
ficoml
sub
cmp
inc
add
add
les
add
sub
js
inc
cmp
xchg
and
add
mov
mov
push
mov
xor
sub
fistpll
icebp
movsb
or
cmp
or
lret
push
js
mov
and
adc
in
push
movsl
sbb
inc
sub
divb
bound
fcomps
xor
add
mov
test
cltd
sbb
call
adc
adc
rcll
add
ds
add
jp
loop
add
inc
ljmp
xchg
jo
nop
xor
sbb
ret
add
mov
sbb
add
cmp
loopne
data16
pop
xorb
js
notb
pop
add
cmp
bnd
dec
shll
or
push
test
dec
xor
nop
add
xchg
push
sub
data16
mov
add
les
dec
shrb
sub
cmp
cwtl
inc
daa
adc
xchg
es
adc
inc
jl
lods
cmc
mov
imul
sti
test
adc
clc
inc
xor
mov
add
mov
addb
inc
insb
add
shll
dec
sub
sbb
mov
inc
ret
xor
fsubs
push
fs
xchg
mov
jbe
aam
idivb
scas
adc
push
loopne
xor
ret
ret
mov
adc
sti
and
push
scas
movb
xor
sarb
es
push
add
sub
pusha
dec
ret
mov
or
sub
fnstcw
jo
into
sub
or
mov
negb
inc
sbb
or
sbb
loop
and
push
ds
xchg
data16
das
push
cli
sti
sbb
dec
loope
icebp
test
lock
and
xor
or
and
adc
lods
in
or
in
push
ret
push
sbb
cli
inc
xor
insl
inc
cmp
mov
xchg
mov
xor
cmp
adc
mov
cs
and
repnz
loope
push
sub
xchg
leave
bound
xchg
adc
xchg
shlb
cmpsb
es
add
aad
cli
xchg
add
xor
das
xchg
clc
add
or
pusha
add
adc
add
dec
rolb
and
test
lods
xchg
adc
imul
ret
stos
adcb
or
js
rcll
sub
adc
cmpsb
dec
gs
aam
lcall
int3
cmp
pop
sub
sub
dec
cwtl
addl
mov
nop
loop
movsb
mov
mov
insb
setne
or
cltd
lock
add
push
dec
add
sub
push
dec
call
aam
or
mov
ljmp
jb
fs
cmpsb
out
es
and
aam
jo
out
pusha
jl
cmpsb
push
mov
int3
or
dec
fs
ficompl
add
ret
jo
add
int3
sbb
mov
mov
sbb
push
lods
ds
stos
les
add
xchg
sbb
mov
adc
jmp
flds
cmpsb
mov
aam
xor
ds
test
lock
inc
xchg
js
sahf
orb
adc
ficompl
andl
inc
push
data16
popa
add
adc
xchg
mov
and
scas
and
adc
sub
insl
nop
sbb
ret
pusha
movsl
xchg
sbb
push
add
and
xchg
dec
hlt
and
xor
push
inc
rclb
rolb
or
inc
fmuls
pop
cmp
and
push
inc
sub
push
mov
enter
mov
es
popa
int3
pusha
add
dec
popa
xchg
push
or
movsb
movsb
or
inc
mov
loopne
fs
add
in
mov
gs
test
pushf
out
adc
add
gs
xchg
add
pop
roll
jne
mov
sbb
and
add
mov
mov
cwtl
push
es
faddp
cmp
push
in
bound
push
jne
xchg
adc
adc
mov
dec
xor
cs
popa
mov
xchg
add
mov
or
push
sbb
ljmp
je
cmp
decl
jge
in
outsl
sub
sbb
inc
xor
mov
jle
test
rcrb
adc
mov
add
sbb
or
fcoml
and
test
fidivrl
push
mov
push
inc
ret
push
loop
shll
dec
dec
and
and
je
stos
add
inc
lods
mov
subl
or
xchg
stos
pop
dec
dec
fs
sahf
rcrb
inc
and
pop
push
adc
divb
nop
sbb
mov
dec
inc
popa
lcall
mov
call
nop
jmp
add
mov
sbb
xchg
push
mov
outsb
cmp
xchg
andb
nop
inc
jp
jp
pushf
sbb
call
xchg
add
dec
jp
xor
ss
outsb
neg
orb
inc
xchg
push
pushf
movsb
sbb
mov
lcall
xor
orb
or
fs
adc
pop
sub
nop
mov
push
xchg
ds
and
xor
jne
mov
hlt
push
or
cmp
jb
push
cwtl
dec
sub
enter
and
data16
sub
shlb
xchg
inc
mov
jo
or
pushw
or
dec
out
xorl
xor
pop
and
adc
inc
int3
dec
clc
popa
push
lods
enter
orb
sbb
add
xor
shlb
shrb
jb
insl
and
andl
or
pop
xor
mov
outsb
mov
lret
sub
or
inc
stos
cwtl
shrb
movsb
ficoms
mov
test
dec
pushf
inc
bound
pusha
and
xor
or
pop
rcrl
lcall
push
jb
mov
dec
push
dec
shrb
or
add
cltd
add
sahf
mov
ret
fdivs
adc
pop
gs
dec
mov
sbb
mov
in
adc
xor
pusha
jl
push
lock
subl
fsubrl
test
push
shlb
and
sub
test
lret
mov
test
movb
adc
rclb
mov
push
or
cmpb
mov
cmp
cltd
test
adc
push
es
sub
inc
or
lock
mov
add
sbb
push
mov
or
xchg
or
jp
xchg
cltd
dec
insl
hlt
adc
pushf
inc
outsl
adc
das
push
mov
in
mov
mov
xor
jo
or
push
add
and
gs
add
jg
push
out
jge
stos
adc
and
lods
push
xchg
iret
rolb
adc
dec
jbe
jo
inc
xor
and
and
add
adc
sbb
add
dec
push
mov
test
fsubs
dec
push
sub
mov
test
push
test
inc
cltd
dec
out
inc
add
and
sub
nop
inc
inc
sub
cwtl
roll
xchg
scas
adc
hlt
pop
gs
adcb
je
mov
pop
mov
cli
cmpsb
aad
dec
and
ljmp
add
or
pop
push
hlt
pusha
mov
mov
adc
mov
mov
jb
and
jp
push
rorb
ret
adc
insb
lcall
xchg
mov
int3
adc
adc
repnz
and
inc
or
insl
test
sbb
mov
inc
dec
sbb
push
sbb
add
pop
mov
inc
inc
add
int3
mov
sbb
push
sarb
push
andl
hlt
pop
mov
push
mov
dec
mov
dec
imulb
dec
loopne
dec
outsb
in
cld
or
pop
xor
fisubrs
sub
es
int3
shl
mov
xchg
mov
repnz
inc
cwtl
sbb
mov
dec
cmp
pop
lret
es
or
dec
cli
push
stos
adc
test
pusha
test
hlt
adc
test
adc
and
test
xchg
inc
xor
lock
orb
mov
pop
aaa
les
movb
add
xchg
cmp
inc
sbb
xorb
push
adc
adc
ret
pop
adc
push
mov
sbb
jae
ss
sbb
or
lret
inc
daa
xchg
pusha
adc
es
sbbl
sbb
and
pop
jo
ljmp
aad
or
inc
inc
xchg
push
mov
in
sbb
roll
int
xchg
repnz
or
les
stos
inc
dec
xor
cmpsb
cs
adc
push
cld
addb
push
mov
or
inc
add
rcl
inc
test
dec
fisubrs
test
fcoml
push
mov
addl
insb
imul
lret
add
add
aam
cmp
xor
push
push
push
xor
cmp
add
dec
pusha
xor
sub
movsl
push
enter
inc
and
adc
lret
cmp
gs
adc
aas
and
jnp
lahf
push
mov
leave
ret
sbb
mov
mov
stc
and
adc
loop
add
or
les
mov
push
aaa
scas
and
dec
mov
and
cld
push
adc
test
ret
js
xchg
jle
mov
mov
push
es
dec
mov
outsl
and
inc
sub
data16
inc
add
iret
inc
mov
mov
sub
mov
insb
xor
sbb
mov
cmp
mov
lods
adcb
push
les
pop
sbb
lods
sub
out
rorb
rcrb
fs
subl
es
mov
ljmp
rorb
push
adc
jo
and
in
adc
cmp
data16
sbb
adc
xor
sbb
adc
nop
push
hlt
dec
cmp
test
jle
push
nop
push
cmpsl
xchg
stos
xchg
add
cmpsb
les
push
sbb
sub
sub
aam
pop
insb
sbb
addb
xor
test
sarb
loop
fwait
pop
addb
xor
es
push
push
loop
add
cmpb
xchg
dec
mov
les
add
sbb
push
add
ret
pop
cltd
mov
rorb
add
xchg
ret
add
ss
push
and
inc
xor
mov
aam
retw
adc
adc
les
mov
dec
sbb
pop
and
mov
sbb
cli
add
mov
sbb
test
and
addb
fiaddl
add
xchg
inc
pusha
cmp
dec
fdivrl
inc
mov
mov
and
add
aad
cltd
and
mov
push
sbb
pop
sbb
mov
xor
inc
push
xchg
mov
xchg
dec
in
fs
in
daa
xor
push
adc
jo,pn
dec
loope
int3
cmpb
and
add
sbb
xorl
xor
popa
sub
xor
adc
mov
xor
xchg
sub
aam
pop
sbbb
jl,pt
mov
outsb
mov
dec
call
out
mov
into
add
add
xchg
add
pusha
add
jno
and
cwtl
dec
dec
mov
mov
and
test
in
imul
push
push
out
jle
add
mov
add
xor
push
inc
or
xchg
xor
push
add
clc
gs
or
cli
out
pusha
nop
int3
mov
stos
fsubrs
pop
mov
hlt
test
cmpb
sbb
fildl
xor
xchg
push
and
je
or
pop
dec
leave
xor
fbstp
test
jo
sbb
es
mov
inc
xchg
outsb
mov
mov
and
cmpsb
adc
mov
add
xor
test
sub
fs
inc
imul
mov
mov
push
mov
insl
push
xchg
mov
xchg
or
movsb
out
cmp
mov
mov
fcomps
test
dec
decl
jae
ret
sahf
push
ret
lods
pop
cwtl
add
repz
mov
add
inc
pushl
sub
mov
and
mov
call
clc
add
add
xor
mov
fdivrs
repz
xorl
les
repz
add
jno
cltd
icebp
dec
mov
pushf
mov
mov
imul
js
push
aam
jge
xlat
sub
nop
out
out
inc
stos
repz
cld
jg
push
dec
add
add
clc
push
test
pop
aaa
sub
pop
mov
fistps
loop
sub
push
pop
sub
ret
test
cs
inc
sub
mov
dec
into
cltd
inc
xor
inc
mov
and
sub
mov
loop
es
mov
aam
or
dec
mov
cmp
jbe
xchg
ret
pushf
mov
jp
test
add
test
add
push
or
jo
cs
pop
push
rcrb
movsl
push
int3
inc
inc
mov
in
mov
test
cmp
lcall
sub
orb
repnz
adc
inc
out
sub
inc
mov
dec
inc
xlat
ret
mov
add
ret
add
lods
aaa
cs
cmp
or
sbb
int3
and
test
push
test
push
adc
mov
ficomps
jns
lret
or
and
sub
icebp
add
sbb
notb
aam
adc
pop
pop
add
dec
daa
cmpsl
add
mulb
push
cmc
scas
lock
and
ljmp
pop
sbbb
call
adc
mov
insb
in
adc
jbe
dec
mov
push
or
shrl
and
cli
xchg
push
xchg
fcoml
pusha
loop
repnz
sbb
xchg
filds
mov
sbb
mov
push
dec
aam
movsb
push
lret
insb
adc
jne
fmul
mov
pop
loop
push
loop
test
sbb
dec
jb
negb
ss
adc
xor
mov
test
scas
add
pop
xchg
sub
gs
cwtl
sbb
les
and
mov
or
inc
adc
rclb
in
inc
sub
xor
faddl
adc
bound
enter
fdivs
push
sbb
cwtl
dec
mov
mov
bound
test
and
lret
lods
dec
fsub
adc
loop
pop
xchg
dec
jb
es
dec
addl
ror
out
adcl
mov
fiadds
add
in
mov
fcomps
pop
nop
mov
push
push
xchg
jp
mov
xchg
inc
or
cmp
xchg
xor
jo
fucom
pusha
cmp
xor
push
or
movsl
and
xor
cmp
ds
push
mov
mov
int3
bound
les
fdivl
movsb
xchg
xchg
and
mov
into
pop
jb
out
add
test
adc
fdivs
insl
pushf
loop
jg
or
push
push
lods
add
clc
sahf
subl
loop
jmp
sbb
mov
ror
dec
mov
xchg
jecxz
and
add
shlb
sbb
mov
pop
lcall
inc
push
jne
cmpsb
sub
xor
add
mov
cmp
jb
push
pop
outsb
mov
adc
test
call
xchg
mov
and
push
inc
fsubs
ss
cmpsl
cmc
lods
nop
loopne
inc
inc
sub
push
outsb
inc
popa
fdivrl
or
sahf
mov
pop
mov
and
jl
adc
pop
xchg
add
sbb
or
xchg
inc
aad
jae
mov
gs
push
dec
push
stos
and
in
shlb
es
xchg
push
xor
adc
mov
sub
adc
imul
and
insl
mov
pusha
test
and
and
dec
adc
xchg
add
ljmp
mov
enter
and
and
jbe
push
adc
xor
pop
lcall
dec
cmp
adc
xchg
cmpsb
and
push
mov
cmpl
jb
push
andb
jne
cli
fidivrl
add
pop
loopne
cmp
ss
mov
inc
xchg
ret
call
movsl
push
dec
scas
repnz
push
jo
sbb
mov
pop
cmp
cmpsb
sarb
sbb
push
mov
add
pusha
fsubrl
or
shr
and
scas
pop
jp
enter
adc
or
adc
cmp
xor
stos
fsubs
sbb
mov
xchg
mov
adcb
or
push
sbb
into
mov
inc
push
fs
xchg
sbb
inc
xchg
aad
sbbl
mov
orb
xor
in
into
sbb
xor
adc
and
mov
xchg
mov
int3
sub
rorb
movsb
sbb
ficompl
push
sbb
inc
subb
movsb
in
shr
lock
inc
les
jae
in
xor
lock
adc
jle
ss
cwtl
or
andl
outsb
lret
fisubs
inc
sbb
fs
es
in
cmpb
dec
adc
hlt
je,pt
xchg
orb
xchg
and
add
mov
dec
sbb
pusha
orl
out
mov
inc
jecxz
fs
lcall
jo
pusha
xchg
pop
push
mov
out
mov
js
test
es
pop
sbb
cmpsb
aaa
mov
cmp
fistpll
jno
or
adc
inc
push
inc
add
outsl
adc
and
inc
repnz
mov
add
sub
xchg
push
push
add
sbb
push
sub
adc
jecxz
jecxz
mov
mov
adc
mov
arpl
cmpsb
xchg
push
mov
aam
leave
ret
mov
addl
push
ret
lock
call
cwtl
inc
mov
out
pop
sub
addl
dec
cmp
test
inc
inc
add
int3
jns
xor
push
add
int3
int3
lcall
jle
sbb
insb
shlb
push
nop
or
adc
xor
movsb
sub
cmp
in
dec
mov
es
add
pop
test
fs
add
inc
inc
mov
and
mov
xor
and
lods
notb
lock
stos
mov
pop
adcl
sbb
bound
dec
cmp
out
inc
xor
add
xchg
hlt
xchg
add
cmp
cwtl
rolb
xchg
bound
mov
inc
mov
test
sbb
mov
adc
jne
push
cmp
nop
flds
add
mov
aad
data16
rclb
and
inc
sub
enter
push
or
movsl
jo
aam
rolb
mov
jb
mov
dec
jb
jbe
into
add
lods
mov
pop
mov
xor
mov
hlt
dec
push
shrl
mov
scas
shlb
daa
dec
les
xchg
push
mov
cs
cli
addb
leave
sbb
mov
mov
scas
addl
sub
sub
jo
xor
push
xchg
dec
mov
js
push
push
push
and
lcall
rorl
pusha
jbe
sbb
pop
nop
add
call
inc
xchg
push
rclb
jle
insl
test
test
and
adc
nop
mov
addb
cltd
and
out
mov
pusha
push
pop
inc
mov
cmp
add
inc
or
gs
cltd
dec
inc
mov
int3
cmp
out
shrb
mov
push
ret
jns
mov
or
cmp
sbb
push
sbb
mov
jo
mov
loop
inc
adc
ss
cwtl
cmp
pusha
sub
inc
push
orl
sbb
or
hlt
inc
inc
gs
cmp
les
rolb
dec
es
mov
and
int3
fs
mov
mov
into
adc
int3
mov
loop
cmp
and
push
js
addl
daa
pusha
or
and
adc
push
fcoml
mov
and
lock
sahf
adc
push
mov
pop
xchg
pop
push
sub
dec
call
movsl
in
mov
push
or
add
xor
jecxz
push
mov
inc
jp
mov
mov
out
fsubp
insb
push
mov
inc
mov
adc
push
and
pop
inc
sub
or
or
nop
xchg
jo
pop
rol
adc
add
inc
js
cmp
popa
xlat
sub
or
aaa
mov
shlb
and
insb
addl
js
mov
pop
inc
insl
inc
inc
mov
xor
and
jo
imul
cli
mov
ljmp
push
pop
xor
add
push
loopne
cs
pop
add
jl
inc
mov
hlt
sub
hlt
ds
scas
rolb
add
adc
jne
je
cmp
xor
mov
popa
push
inc
dec
test
lcall
imul
push
inc
add
lret
push
push
adc
test
aad
xor
push
shll
test
add
jnp
mov
test
and
es
pusha
cwtl
jl
nop
subb
xor
sub
popa
xor
notb
mov
or
inc
mov
mov
movsb
dec
pusha
push
xchg
int3
jl
xor
xchg
push
pushw
and
dec
xlat
leave
mov
add
ss
cmp
arpl
mov
and
shrb
jo
push
out
mov
or
cmpsb
aam
fidivrs
pop
sbb
adc
cwtl
and
ficompl
data16
mov
sub
incb
adc
adc
rclb
inc
lods
inc
adc
imul
out
call
sub
div
mov
xchg
push
leave
fdivs
cltd
dec
jo
adc
fs
add
lret
sbb
xchg
add
add
leave
in
or
in
cwtl
adc
inc
lcall
mov
xor
mov
test
jb
les
loopne
add
mov
sahf
dec
mov
push
jle
cwtl
inc
sub
inc
or
sub
inc
inc
fcoml
orb
xchg
xor
push
cwtl
ret
fdivrl
adc
ret
pop
xchg
fimull
inc
or
inc
add
xchg
xchg
dec
pop
sub
or
adc
insl
pop
push
push
cwtl
dec
sub
ret
cwtl
jp
bound
inc
or
sbb
lret
add
test
jo
mov
cwtl
pusha
mov
test
jl,pn
add
cmp
sub
cwtl
sbb
adc
movsb
addl
cltd
mov
xor
loope
fsubr
loop
add
mov
jns
and
or
outsb
add
leave
and
sbb
push
add
shrl
loopne
cli
test
dec
fmuls
aas
in
icebp
xchg
pop
mov
dec
call
inc
mov
cmove
push
push
mov
les
sbb
ffree
push
sbb
mov
push
arpl
jp
pop
xor
jmp
add
dec
push
inc
adcl
loopne
call
push
shlb
or
test
add
test
mov
test
fs
movb
lods
add
sbb
mov
scas
sbb
inc
cmp
push
adc
loop
pusha
cmpsb
inc
xorb
adc
data16
push
and
test
or
adcb
cwtl
int3
rcrb
xor
dec
adc
and
or
lds
adc
and
enter
push
and
ljmp
or
arpl
jle
mov
cwtl
or
hlt
test
adc
or
sub
orb
call
movsb
jp
gs
cs
rclb
mov
hlt
es
cmp
lcall
dec
idiv
adc
adc
and
add
mov
adc
or
addl
xchg
scas
or
sbb
jmp
gs
dec
mov
adc
sbb
add
fidivs
xor
inc
mov
mov
pop
xchg
movsb
add
push
or
repnz
cltd
test
loope
ret
pusha
sbb
pop
int3
and
fldt
push
add
adc
jo
push
xchg
neg
mov
adc
fs
inc
add
clc
jp
mov
xor
into
mov
test
pop
add
test
mov
add
mov
loopne
jne
dec
xor
cltd
mov
cltd
and
inc
pop
cmpsb
mov
mov
add
rcrl
pop
leave
ficomps
adc
pop
rolb
and
jle
test
pop
or
mov
test
cltd
adcb
popf
xchg
and
filds
les
out
addb
mov
test
mov
or
fmuls
or
sbb
lcall
add
xor
jne
into
ret
test
rolb
divb
cmpsl
fs
jl
int
sub
mov
add
insb
sub
in
push
cmc
insl
inc
fidivl
push
adc
jp
sbbb
sub
sbb
xor
xchg
mov
xchg
je
cltd
outsb
adc
pop
xor
fimuls
and
mov
cmp
cwtl
cwtl
aad
and
add
and
sbb
jne
gs
dec
mov
add
in
call
or
pop
pop
sub
int3
es
xchg
leave
hlt
xor
pushf
xchg
xor
out
mov
or
push
fstl
pop
fidivrl
jno
jbe
mov
jecxz
sub
inc
push
sahf
enter
jge
jp
scas
push
lods
sub
xor
and
push
push
push
lret
not
jmp
jle
xchg
addl
push
push
inc
or
push
push
out
nop
mov
jmp
jb
jmp
repnz
push
push
fs
mov
inc
and
add
dec
or
mov
xchg
and
adc
clc
dec
cmc
push
aam
cli
insl
sbb
xchg
dec
and
jb
int3
jo
sbb
cmp
push
sub
or
add
stos
xor
fiaddl
xchg
or
sbb
xchg
dec
ds
int
push
addb
orl
clc
sbb
adc
or
add
jb
popf
xchg
cli
es
mov
or
lods
mov
ret
add
adc
sbb
fisubrs
sbb
mov
push
shl
call
xchg
adc
insl
cltd
cmpsb
xchg
sbb
push
insb
push
push
test
adc
sbb
inc
adc
sbb
and
inc
cmp
pop
and
sbb
xor
pop
pusha
and
mov
pop
add
es
subb
ljmp
and
and
movsl
mov
cltd
jo
add
fwait
cmp
out
cmp
pop
mov
inc
gs
push
lcall
js
and
xchg
inc
sub
movsb
pop
test
mov
lods
int3
sbbb
and
lret
pusha
mov
mov
add
adcb
movb
cli
test
jbe
or
add
add
add
add
mov
ret
lods
dec
out
dec
sub
bound
inc
push
pusha
fmul
add
push
or
inc
dec
mov
dec
icebp
xchg
push
xchg
js
shlb
mov
imul
add
push
cs
nop
scas
and
test
sbb
add
ficoms
mov
sbb
lods
add
fs
adc
add
int3
lods
or
enter
add
add
inc
push
loop
insb
xchg
leave
xor
sbb
or
loope
inc
mov
push
or
inc
lods
sbb
push
scas
jbe
mov
enter
xor
mov
sbb
adc
sub
lock
popa
js
or
daa
or
call
pusha
mov
or
cli
scas
int
test
push
pushf
mov
add
dec
or
cmp
add
popa
fbstp
xchg
fists
loopne
nop
inc
scas
loop
sbb
push
test
adc
mov
and
cmp
mov
push
add
addb
lret
mov
or
add
push
or
add
stos
scas
cmp
sarb
sbb
test
add
add
adc
pop
mov
push
scas
xlat
push
adc
or
and
xchg
mov
add
cli
ret
or
and
pushf
push
bound
push
push
push
dec
jl
sbb
mov
test
or
adc
fs
lods
pusha
sub
push
lret
dec
into
jo
fsubl
or
pushf
inc
xor
cmc
push
mov
and
push
xchg
pop
into
dec
adc
scas
mov
mov
cs
test
add
push
add
xchg
sbb
add
popa
push
pop
push
cltd
cwtl
add
xchg
xchg
lret
or
ljmp
je
out
test
mov
or
ret
lods
sub
sub
push
push
cli
test
lret
popa
or
sub
rorb
cltd
sub
inc
enter
xchg
out
adc
fs
ljmp
inc
or
add
mov
addb
mov
xchg
mov
adc
inc
nop
xchg
sub
xor
dec
adc
lret
xor
pop
les
jl
sub
movsb
and
fs
shll
mov
cmc
dec
and
es
and
adc
or
mov
ror
es
push
out
aam
mov
es
sbb
mov
pusha
add
shlb
les
scas
or
lods
or
mov
lret
xchg
mov
pop
push
cs
dec
leave
mov
cwtl
cmc
test
inc
push
cld
add
stos
push
or
ljmp
dec
add
pop
inc
test
xor
jmp
mov
data16
adc
adc
andb
sbb
jecxz
test
mov
ret
in
bound
stos
cmp
push
mov
pop
test
aad
adc
mov
add
cltd
dec
dec
sbb
and
fidivrl
push
les
ss
push
add
xor
push
add
mov
xor
push
fidivs
ret
pop
or
adc
push
mov
in
and
rol
roll
sbb
add
mov
xchg
sbbl
inc
mov
mov
add
xor
add
jmp
aaa
mov
imul
lcall
andl
push
adc
push
sub
imul
jbe
mov
shlb
inc
xor
cs
lea
sub
sbb
adc
inc
add
sbb
mov
cmpsb
xor
subb
xor
mov
mov
fdivl
shl
cwtl
inc
mov
mov
stos
fcoms
push
or
fs
decl
adc
xchg
cmpb
push
push
dec
loopne
mov
lock
or
xorl
xchg
lcall
dec
sub
es
or
sbbl
cmpsb
sbb
xchg
sbb
aam
xchg
data16
inc
dec
pop
fs
sub
dec
mov
pusha
adc
data16
enter
sbb
orb
xor
xchg
dec
movsb
push
inc
xorb
or
xor
mov
jo
insb
sbb
and
cs
xchg
test
int3
pop
xor
lret
mov
decb
test
call
inc
mov
enter
stos
insb
push
inc
sub
sbb
test
sbb
in
add
push
jo
add
int3
xchg
gs
mov
pusha
fdivs
mov
mov
xor
adc
outsb
pop
data16
push
xchg
sub
sbb
push
adc
xor
dec
js
or
xchg
or
orl
or
and
add
xchg
mov
and
shl
andb
or
je
add
xor
xor
cmp
cmp
sbb
pop
and
movsb
dec
inc
or
dec
adc
jo
mov
xor
and
cli
or
faddl
ror
sbb
notb
or
mov
mov
dec
loop
xor
or
and
mov
shlb
cli
pop
or
push
mov
stos
adc
cld
loop
or
enter
and
dec
cli
andb
mov
insl
xchg
testb
js
insb
gs
aam
ret
dec
out
cli
add
clc
aad
cli
xchg
adc
mov
subb
jne
mov
mov
add
push
adc
dec
and
sub
int3
cmc
cs
fsubrl
pop
test
int3
adc
and
fisubs
jo
pusha
sbb
loope
popa
jne
fdivrp
xor
inc
lods
sbbl
scas
push
es
add
push
xor
and
push
and
sbb
xchg
and
push
push
movsb
adc
pop
or
test
cli
rorb
daa
test
cmp
sbb
dec
inc
cmpsl
fs
fcmovbe
test
in
pusha
xchg
lock
test
add
xor
out
push
test
aam
push
insl
mov
adc
and
push
mov
sbb
and
cmp
inc
sub
and
ficomps
cltd
rcll
inc
push
or
aad
fbld
and
ljmp
mov
mov
xor
dec
add
and
rorb
loope
dec
mov
test
mov
les
and
mov
orl
adc
push
mov
or
mov
jle
add
mov
lret
cs
mov
dec
and
add
int3
lods
es
test
fs
lock
push
adc
mov
dec
or
mov
push
sbb
jb
xchg
flds
inc
aam
ret
in
imul
je
sbb
mov
inc
jb
rcpps
and
xor
sbb
mov
ret
dec
xor
roll
xor
inc
inc
test
and
push
rcrb
int3
push
aad
fmul
sub
pop
mov
sbb
xor
out
cwtl
or
add
sbb
lock
sub
sub
push
xchg
pop
pop
xchg
mov
pop
dec
or
or
data16
sbb
push
dec
sub
push
inc
lret
add
push
adc
das
lret
or
sbb
inc
add
movsb
and
xchg
aam
and
pop
rolb
push
xchg
jbe
adc
or
les
jle
rolb
ret
ret
pushf
xor
sub
or
lods
push
mov
or
rcl
call
mov
xor
test
inc
je
cli
and
fsubrp
bound
lcall
adc
xor
mov
sbb
fldcw
aam
or
add
add
fs
dec
movsl
and
or
orb
xchg
push
cli
shlb
loop
lods
adc
in
cli
dec
scas
fsubs
cwtl
add
and
push
lret
insb
xchg
js
xchg
pushf
pop
sub
ficoms
mov
nop
mov
mov
cmp
js
enter
stos
mov
cmp
jbe
xor
or
and
lret
add
call
sbb
sbb
fwait
xor
out
inc
ret
test
cmpsb
add
aam
push
xorl
sub
daa
cmc
mov
addb
and
ljmp
into
fcoml
and
mov
fcoml
dec
mov
pop
pop
neg
test
bound
ds
leave
js
mov
int
shrl
negb
lods
pop
jb
xor
and
and
test
inc
push
sahf
sbb
add
sub
xor
or
lret
fstpt
sbb
movsb
push
test
loope
add
sbb
imul
pop
mov
cmp
xchg
and
pop
adc
or
dec
push
lcall
add
push
cmp
loopne
incb
nop
inc
fildll
sbbl
les
insb
push
push
cmp
test
adc
sbb
scas
rolb
inc
in
add
xorb
mov
mov
pushf
inc
test
dec
or
nop
jo
fs
pop
xor
rolb
or
in
add
inc
push
jl
aad
xor
push
insb
sbb
xchg
pushf
into
dec
mov
push
and
test
sub
clc
lods
adc
dec
mov
js
or
or
add
push
push
add
add
mov
sub
and
inc
xchg
add
or
cmc
dec
jp
movb
xor
inc
adc
fsubl
dec
dec
or
dec
lret
and
dec
mov
imul
outsb
ret
cmp
jp
push
ds
xor
adc
ret
loopne
inc
xchg
mov
dec
cmp
sbb
inc
cs
and
mov
test
inc
sbbb
sbb
mov
xor
mov
add
jp
or
mov
sbb
cmc
push
mov
insb
test
pop
mov
push
sub
mov
cmp
mov
dec
ret
mov
loopne
adc
push
loopne
sub
pusha
bound
loopne
pop
outsb
es
inc
or
add
xor
dec
dec
enter
gs
imul
jl
lret
and
xchg
jb
push
jbe
orb
fistpll
cmpsl
fs
inc
in
sbb
insl
add
andb
push
sbb
les
sbb
xchg
sbb
push
rorl
repnz
or
inc
rclb
add
clc
cmp
test
dec
and
inc
fisubrs
sbb
rclb
push
sbb
movsl
xchg
jle
dec
dec
test
pop
cmpsb
mov
add
and
out
fs
mov
leave
inc
mov
and
inc
mov
sbbl
cltd
pop
inc
pop
adc
mov
add
inc
rcr
inc
and
gs
ds
int3
enter
rorl
or
dec
xor
in
jo
add
or
test
inc
sub
data16
outsb
sbb
pusha
sbbb
subb
scas
sbbl
out
dec
bound
fs
inc
push
or
test
add
roll
pop
xchg
pusha
clc
fwait
sahf
and
pop
lahf
ja
mov
lahf
sbb
inc
fsubrl
push
pop
mov
loope
pop
adc
iret
hlt
sti
gs
add
add
push
push
add
push
and
mov
cld
pop
inc
xor
int3
push
pushf
rcrb
dec
lcall
lock
test
les
jb
pop
add
add
andl
and
inc
inc
insb
imulb
jbe
adc
movsl
push
nop
ret
lods
mov
push
imul
add
cwtl
push
add
xor
and
mov
push
sbb
arpl
pop
pop
push
cli
arpl
jne
or
ss
mov
mov
fmuls
cld
or
inc
sub
jb
sub
dec
add
sub
test
push
and
shrl
jle
adc
test
divb
nop
push
push
mov
or
pop
xor
sub
pushf
xchg
les
clc
dec
cmp
mov
pop
out
hlt
and
dec
add
or
or
xchg
inc
mov
dec
add
push
sub
es
or
jno
xchg
orb
dec
cwtl
lret
movsb
mov
dec
jl
mov
sahf
mov
adc
inc
sbb
cwtl
pusha
dec
outsb
add
xchg
leave
imul
dec
andb
mov
or
push
mov
sbbb
mov
cwtl
add
lea
dec
adc
orb
shlb
rcll
loop,pn
or
xor
and
lods
mov
and
lret
xchg
sbb
js
scas
sbb
pushf
pop
lock
popa
sub
mov
dec
hlt
and
scas
xchg
pusha
adc
je
mov
cs
call
clc
push
test
push
adc
adc
loope,pt
or
call
ror
xor
dec
clc
or
js
or
push
dec
and
cli
out
lods
inc
xchg
pop
add
andl
mov
orb
add
sub
mov
xor
pop
sahf
inc
sub
and
push
mov
push
mov
inc
outsb
mov
adc
pop
push
fisubrs
push
ficoml
xchg
inc
inc
sbbb
mov
sbb
mov
and
sbb
int
xchg
sahf
aam
cli
test
push
xor
add
nop
dec
ficomps
and
sbb
ds
bound
es
dec
dec
mov
lods
and
jb
out
pusha
fsubs
inc
hlt
pusha
mov
add
in
sub
stos
jl
aad
stos
leave
xor
pushf
add
xor
push
test
inc
dec
add
aad
aam
adc
mov
xchg
ds
adc
push
push
and
xchg
and
scas
mov
mov
call
push
sub
mov
mov
shrb
ds
add
popf
movsb
insl
add
adc
add
xor
test
inc
inc
add
push
inc
mov
dec
sub
pop
dec
and
stos
adc
pop
pop
es
or
in
xor
inc
ret
dec
push
inc
sbb
jb
mov
dec
sub
mov
pop
xor
add
test
inc
cmp
mov
movsb
jo
xor
es
jl
ret
popa
cmp
ljmp
sbb
shlb
call
scas
sbb
imul
movsb
hlt
add
mov
je
lret
mov
orb
nop
cmc
ljmp
xchg
rcrl
and
add
mov
enter
fs
clc
push
pusha
cs
jp
add
pusha
xchg
cmp
cltd
push
data16
lcall
sbb
xchg
movsb
stos
pop
ljmp
aam
xchg
test
nop
jne
sub
loop
inc
lods
into
and
hlt
cmp
and
test
test
push
lret
or
jb
and
loopne
sub
xor
sahf
mov
and
mov
rolb
adcb
add
bound
cwtl
jbe
xchg
or
sub
out
addb
inc
sbb
xorb
jns
shrl
xor
leave
mov
ffreep
les
sbbb
dec
es
jbe
ret
out
adcl
adcl
push
imul
adc
jle
sub
fcoml
pop
inc
popa
cli
mov
pushf
aam
imul
mov
jle
insl
mov
xor
int
cmc
jne
int3
ljmp
mov
jo
nop
hlt
sub
fdivl
orb
inc
cltd
pop
add
js
ss
insl
sbb
mov
sub
enter
pushf
lahf
fs
cltd
xor
jbe
dec
sbb
and
enter
ret
and
add
push
stos
and
mov
loope
or
push
dec
sarb
dec
mov
push
cmp
orb
decl
push
outsl
mov
loope
out
or
orl
fcoms
dec
hlt
call
pusha
xchg
adc
sbb
push
out
mov
cmp
push
cmpsl
xchg
cwtl
and
lret
mov
or
inc
data16
daa
loopne
push
pushf
cmp
mov
test
push
pushaw
and
stos
test
callw
mov
movsb
cmp
and
inc
dec
clc
cs
movsl
sub
push
cmp
adc
push
pop
sbb
ds
scas
call
mov
popf
sub
repnz
or
and
mov
push
adc
cwtl
rolb
cmp
xchg
add
ds
xchg
push
push
aaa
cwtl
add
push
rcrb
and
mov
and
and
or
mov
lods
je
pusha
test
pusha
push
test
push
add
mov
sub
pusha
sub
dec
es
cwtl
or
add
sbb
cmpsb
js
mov
es
push
test
mov
dec
add
fisubl
cwtl
inc
add
int3
jo
inc
mov
or
dec
mov
scas
dec
xchg
inc
add
xchg
lea
mov
and
add
adc
xchg
pop
adc
out
jge
clc
cmpsb
lock
add
sbb
add
inc
mov
xor
add
je
sbb
pushf
stos
and
faddl
add
into
loop
add
movsb
jo
and
test
clc
mov
xor
add
cli
push
add
adc
nop
adc
ret
fimuls
aaa
pop
jp
repnz
add
mov
adc
mov
sbb
or
xchg
mov
pusha
add
xchg
int3
addb
xor
and
or
or
push
nop
aaa
movsl
call
xor
xchg
and
je
add
xorl
cmp
push
xlat
xor
outsb
scas
jb
and
adc
mov
sarb
mov
sub
add
xchg
jp
sub
popf
in
inc
dec
inc
push
imul
xchg
jo
out
push
pop
cmp
pop
adcb
inc
cmpsb
xchg
adc
sbb
or
test
jb
cmp
sub
inc
insl
sbb
and
sub
and
pop
push
xor
cbtw
mov
xlat
cmp
jl
xor
xchg
adc
bound
dec
pop
mov
addb
lcall
test
fisubrl
and
pop
cmp
hlt
pushl
sbb
pop
test
mov
sub
mov
out
xor
enter
cli
dec
sub
sub
add
andl
pop
adc
add
inc
add
cmp
sub
outsl
mov
mov
popl
mov
mov
dec
in
push
arpl
xlat
xor
cmp
jbe
cmp
dec
adc
sti
lods
xor
cmp
add
bound
outsb
jae
jle
and
clc
mov
jnp
daa
insb
sarb
xchg
in
out
xchg
movhlps
pop
mov
aad
cmp
add
adc
fistpll
xor
cmp
dec
adc
sbb
jmp
subb
rclb
rcrb
sbb
cli
add
sbb
aad
inc
xchg
jp
mov
adc
enter
test
sbb
ret
sub
call
idivb
or
mov
or
and
movb
hlt
push
in
mov
loopne
add
inc
outsb
sbb
xor
add
popa
mov
stos
xchg
push
xor
mov
xchg
or
ljmp
xor
fs
cmpsb
and
add
xchg
xchg
cmp
inc
pusha
sbb
push
dec
mov
test
mov
mov
adc
jo
lods
outsb
inc
or
lret
nop
xor
jb
adc
call
out
pushf
cs
test
les
hlt
or
mov
fsubrs
adc
xchg
leave
add
lea
addb
loop
add
stos
mov
cld
scas
scas
or
or
es
adc
add
add
or
lret
call
ljmp
add
cmpsl
jae
cmp
push
cwtl
mov
imul
sbb
sub
push
pop
dec
xchg
adc
jns
xchg
cwtl
stos
sbb
mov
add
add
push
dec
fmul
cmp
sbb
inc
orb
or
test
or
mov
sbb
mov
and
push
mov
test
js
add
mov
add
rcll
or
push
rolb
test
sbb
mov
mov
loopne
push
xor
mov
push
test
cli
movb
cltd
test
lcall
sub
and
jbe
inc
mov
or
int3
push
jbe
add
add
mov
cs
sub
xchg
cmpsb
pop
nop
sbb
inc
mov
stos
mov
lcall
sahf
orb
enter
sub
sarb
je
mov
jns
imul
mov
rolb
adc
or
inc
xor
and
push
mov
fs
cmc
loop
and
xchg
outsb
ljmp
or
mov
sub
adc
xor
lcall
mov
pop
dec
lret
clc
cmpsb
jb
add
mov
adc
andl
sbb
dec
or
jl
cs
rorl
and
nop
or
jb
cmpsb
mov
fbld
xchg
adc
data16
lock
or
orb
enterw
test
push
insl
cmc
pop
and
mov
es
adcl
cwtl
dec
mov
sub
jp
jo
inc
push
jb
outsb
mov
jbe
push
inc
inc
pusha
mov
pop
data16
out
xchg
or
xchg
jo
jns
sbbb
mov
mov
push
inc
or
xchg
mov
ret
xchg
lcall
xchg
or
mov
add
ret
push
lds
mov
adcb
add
ret
mov
jp
test
nop
push
mov
sbb
mov
sbb
dec
mov
xchg
push
test
inc
pop
loopne
ljmp
adc
lcall
mov
inc
pusha
jp
add
xchg
sub
sub
dec
lods
inc
inc
mov
xor
cmpsb
xor
or
adcl
push
xchg
aam
and
mov
and
push
dec
adc
mov
add
sbb
loopne
mov
xor
outsb
or
fwait
dec
sub
cmc
orb
and
cwtl
adc
enter
adc
ret
push
clc
clc
nop
or
adc
mov
or
adc
push
xor
or
out
pop
lcall
aad
xchg
push
or
dec
mov
je
push
xchg
les
loop
shr
cli
xor
dec
push
lret
dec
sub
popa
push
dec
fdivrs
mov
jo
push
mov
sbb
and
xchg
rorb
fs
adc
hlt
xor
or
rcrb
push
or
push
adcb
mov
repnz
insl
js
add
ds
or
xor
jb
leave
sub
mov
mov
nop
dec
les
jbe
test
sbb
mov
shrb
sub
cs
pop
ds
inc
push
inc
ss
inc
pusha
retw
shlb
or
lock
xchg
add
or
pop
clc
inc
add
sub
rolb
dec
mov
cs
sbb
mov
adcl
loop
and
fs
dec
push
xchg
inc
jl
adc
inc
add
push
fs
and
mov
ret
dec
orb
adc
dec
and
sub
stos
add
inc
jo
push
jge
xor
stc
les
fisttps
mov
pop
or
rclb
sbb
add
xor
dec
xor
daa
hlt
mov
pop
add
das
jno
fdivr
cmp
cli
inc
add
pushf
or
insb
fisttpll
jmp
fwait
push
add
in
ljmp
addl
adcb
loop
or
sbb
push
inc
cmp
or
xchg
add
cmp
out
mov
lcall
jp
or
outsb
mov
scas
adc
pusha
sbb
ret
movsl
xchg
push
jo
mov
lods
mov
and
xor
loope
sub
sbb
mov
test
or
and
pop
sub
in
rorb
and
sub
lret
or
mov
mov
cmc
and
popa
or
pop
xchg
int3
cli
es
cwtl
lret
xchg
test
or
leave
inc
paddusb
in
sbb
jo
sbb
push
dec
inc
dec
or
sbb
and
adc
daa
pusha
adc
inc
shlb
mov
cmp
push
cmp
mov
cmp
cwtl
or
fdiv
fs
mov
add
mov
mov
insb
jbe
xor
inc
cmp
je
dec
and
add
sbb
fsub
insb
stos
jmp
ret
or
add
shlb
shlb
xor
lcall
and
xabort
adc
ret
add
push
jp
or
add
inc
add
inc
add
cwtl
dec
mov
loopne
pushf
add
pusha
dec
or
mov
mov
push
aad
dec
dec
inc
pusha
js
pop
mov
pop
mov
fisubrs
adc
push
adc
rclb
adc
add
mov
out
pushf
add
mov
add
push
dec
and
xor
adc
add
cs
add
pushf
cmp
ret
sbb
test
rcr
scas
jne
pop
insl
sub
sub
push
or
addb
scas
js
scas
cmp
cmp
mov
push
ficoml
lret
shlb
lcall
add
cmp
fwait
shrl
pop
gs
adc
mov
xor
in
add
sub
rorb
push
push
aam
xchg
xor
fsubrp
xor
adc
pusha
dec
int
xchg
loopne
cmp
sbb
mov
ret
dec
add
jb
mov
jo
sub
cs
leave
fadds
and
scas
subb
sbb
mov
and
xchg
pop
xchg
add
mov
xor
loopne
pop
or
pop
and
adc
cli
pop
sbb
mov
push
fsubl
push
xchg
or
scas
jge
add
sahf
adc
push
dec
add
inc
fwait
std
add
pop
in
stos
pusha
sub
dec
loop
sahf
lcall
and
mov
add
inc
int3
push
cwtl
lods
sbb
sub
or
inc
dec
lret
sub
inc
out
inc
movsl
popa
mov
int3
jne
fcoml
sub
xchg
hlt
adc
adc
inc
mov
mov
dec
out
les
mov
data16
push
es
or
sub
add
je
pusha
test
sahf
mov
pop
data16
or
push
inc
cs
jae
ljmp
dec
or
adc
pop
cmp
pushf
test
cmpsb
jo
sub
jbe
sbb
test
jbe
ss
add
js
push
hlt
mov
aam
cwtl
inc
test
add
fs
push
in
pop
imul
add
in
sbb
push
cli
and
es
mov
push
inc
sub
xchg
mov
adc
inc
mov
pop
xor
aad
mov
pop
xor
lods
adc
cmc
mov
mov
es
pop
adc
mov
add
push
lret
inc
cwtl
add
add
sub
dec
rol
orl
or
or
sbb
mov
notb
dec
xor
sub
or
sbb
push
dec
dec
insb
sub
shll
inc
lods
adc
cmp
mov
in
sbb
test
sahf
push
cltd
mov
or
pushf
push
sub
ficoml
and
lock
lcall
pop
add
or
mov
sub
cltd
sbb
xchg
retw
mov
stos
xor
adc
push
bound
movsb
mov
mov
sbb
dec
scas
mov
add
jp
or
movsl
pusha
mov
cld
fcoml
adcb
mov
add
bound
cmp
xor
and
mov
scas
pop
add
sbb
test
pop
sub
dec
lcall
push
aad
pusha
movsb
mov
test
mov
adc
and
fisubrs
ret
and
pusha
jp,pt
dec
inc
sbb
and
xchg
sub
and
ss
adc
adc
data16
loopne
bound
push
dec
add
andb
mov
inc
mov
loope
mov
cltd
push
or
subb
mov
push
insb
test
add
add
or
mov
fcmovne
sahf
cmp
adc
or
push
sub
pusha
push
ds
filds
shl
in
inc
js
outsb
outsl
leave
mov
movsb
cwtl
cmp
std
stos
test
sub
loope
add
inc
dec
add
jg
ja
push
add
sbb
cmpsb
xchg
xor
adc
mov
jg
testl
push
push
aam
insb
es
pop
or
fistps
pop
outsb
or
mov
clc
jg
sbb
add
loop
loope
popa
dec
shrb
inc
xor
dec
adc
loop
test
or
sbb
lret
fists
dec
es
shlb
add
push
lcall
push
sub
pop
xchg
es
int
xor
mov
test
cmc
push
faddl
test
and
test
dec
sub
xor
adc
push
mov
xor
loopne
cmp
and
ret
and
fiadds
or
popa
inc
mov
loopne
push
add
or
or
int3
or
ljmp
scas
mov
call
add
cltd
popa
ss
xchg
dec
and
or
push
loopne
sbb
mov
fdivr
xor
ret
add
mov
push
cwtl
push
sbb
and
dec
adcb
dec
bound
sbb
dec
call
pop
mov
adc
mov
movsl
add
push
in
sbb
dec
bound
jb
dec
add
sub
jo
gs
sbb
adc
ds
ret
gs
push
push
cs
mov
or
and
adc
xor
sub
ret
cmp
add
sbb
loopne
mov
repnz
inc
sub
js
popa
inc
test
pop
pusha
and
mov
ss
flds
insb
dec
ret
push
rcl
or
sbb
sub
xchg
aam
mov
andb
and
test
ljmp
movsb
rclb
rcll
inc
sbb
or
test
xor
loop
pusha
cwtl
sbb
mov
mov
pusha
and
hlt
insb
pop
bound
fs
or
test
lret
or
mov
push
cmp
int3
or
inc
xor
jb
mov
jo
and
inc
inc
xor
dec
adc
inc
xor
sub
lods
inc
unpckhps
imul
cld
fs
andb
bound
cltd
cmpsb
ret
or
test
cld
test
test
and
mov
mov
jo
mov
inc
mov
adc
or
cli
push
lock
add
stos
mov
jo
fs
je
clc
and
cs
test
mov
test
bound
ret
and
pop
or
add
popa
scas
xor
clc
test
xchg
add
addb
movsl
sbb
push
cmpsl
scas
jne
nop
or
add
or
or
rcrb
ljmp
xchg
push
sbb
cwtl
lock
push
leave
jge
mov
mov
cli
popa
add
cmp
and
inc
cwtl
or
mov
ljmp
adc
popa
xchg
ljmp
or
xor
outsb
shrb
or
or
mov
xor
test
jae
push
orb
stos
xchg
fs
lcall
shl
jmp
mov
push
jecxz
mov
sbb
inc
nop
xor
test
sub
add
pop
push
imul
or
jo
loopne
sahf
push
pushf
pop
push
pop
adc
or
add
repnz
mov
add
mov
test
xor
pop
test
inc
test
dec
xorb
jne
sbbl
jb
insb
roll
xchg
movsb
jne
fidivrl
dec
pusha
cmpsb
scas
pop
sub
fidivl
xor
popa
adc
push
xchg
test
mov
pop
mov
sub
je
dec
sub
out
gs
push
add
push
mov
jle
stos
xchg
cwtl
loop
js
lret
add
sbb
daa
idivb
and
xor
movsb
rorb
inc
sub
and
mov
addl
xor
call
and
gs
dec
pop
push
aad
add
mov
ljmp
int
sbb
or
adc
je,pt
add
xchg
and
pop
xchg
and
mov
adc
bound
sub
movb
adc
push
test
lcall
int3
jb
das
repnz
cmp
ljmp
fcomps
or
inc
imul
fs
mov
adc
test
dec
clc
lret
inc
inc
push
mov
lock
cld
clc
mov
ret
in
rolb
mov
mov
cmp
lret
or
xor
mov
xchg
clc
test
sub
adc
ret
or
mov
lcall
repnz
movb
adc
in
adcb
or
pusha
and
les
push
call
adc
inc
repnz
call
mov
ljmp
es
cld
add
xchg
rcrb
es
sbb
add
aad
aad
mov
test
sub
les
faddl
or
dec
inc
mov
inc
and
loope
loope
js
fsubrs
jl
mov
in
scas
push
push
adc
cmp
movsl
fsubrl
mov
add
lret
push
inc
dec
mov
dec
adc
sbb
sub
add
and
aas
cmpb
rolb
bound
mov
sbb
push
sbb
sub
push
sti
xor
sub
sub
pop
sub
push
ss
adc
ret
fs
outsl
lahf
sub
js
push
jb
fstps
rorb
jo
loop
leave
movsl
cmp
or
outsb
xchg
movsb
add
gs
movsb
rolb
xchg
ficompl
dec
arpl
mov
movsl
push
dec
sub
cwtl
movb
data16
or
inc
adc
fadds
js
push
js
rolb
and
loop
lds
mov
adcb
push
add
cwtl
test
pusha
mov
bound
jo
push
aam
es
mov
test
and
or
inc
push
pusha
mov
or
mov
mov
out
xor
inc
fistpll
push
mov
xchg
rolb
loop
or
or
and
sbb
push
inc
inc
or
dec
es
js
test
or
loopne
adc
in
mov
outsl
bound
dec
adc
sar
stos
pop
js
enter
adc
lods
push
dec
and
fsubrs
test
sbb
movsb
je
es
push
xchg
push
insl
test
mov
add
aad
loop
mov
dec
add
or
jb
or
sub
cmp
push
push
add
and
jo
mov
mov
push
mov
xorb
ret
cmpsb
and
test
push
push
inc
add
add
push
push
add
in
clc
and
sbb
jle
jb
push
out
jo
fs
add
fidivrl
pop
xchg
inc
in
cwtl
xchg
push
xchg
push
mov
ss
xchg
xchg
or
mov
mov
push
or
mov
addb
pusha
adc
xor
ret
inc
and
nop
in
jmp
or
loopne
shrb
out
xchg
mov
inc
cmpsl
inc
cmc
mov
or
mov
dec
js
cwtl
fcmove
or
inc
ror
cmp
jne
xor
insb
addl
add
lock
cltd
addb
jle
xor
xchg
lcall
xchg
sbb
mov
dec
shrb
into
dec
inc
or
xchg
inc
pop
or
les
mov
xchg
ret
or
shlb
inc
dec
mov
xor
pusha
cwtl
call
ror
gs
inc
or
sarb
sbb
ss
jb
pusha
test
push
dec
xor
cwtl
in
loop
ret
inc
shlb
std
push
and
scas
mov
jo
pop
adc
xchg
adc
insl
aam
pushf
nop
ret
sbbb
inc
pop
dec
or
push
test
fsts
cmpsb
sub
xchg
fnstcw
idiv
call
cmpsb
xchg
fsubs
mov
or
mov
push
xor
push
test
push
test
outsb
cmp
xchg
int3
ds
sbbl
pop
xor
es
jl
mov
adc
push
adc
and
sub
fs
insl
sub
divb
sbb
cltd
adc
adc
mov
out
xchg
and
movsb
cmp
outsb
lods
add
add
inc
xchg
xor
or
mov
daa
popa
adc
mov
mov
sbb
fs
andl
mov
sub
call
pop
push
lcall
sub
xchg
push
fisubs
rcr
les
cmpsb
xchg
sub
or
nop
es
movsb
test
mov
add
pusha
shrb
popa
cbtw
mov
nop
cmp
push
inc
xchg
test
test
mov
mov
adc
inc
sbb
dec
fcompl
dec
push
adc
add
push
inc
inc
cltd
dec
in
sbb
or
push
or
cltd
lcall
xchg
clc
cwtl
gs
mov
test
sub
ret
mov
add
xchg
push
push
xchg
add
cs
aam
sbb
pusha
and
dec
sahf
and
cmpsb
in
adc
sub
loopne
ljmp
cmpsb
jbe
or
nop
adc
add
sbb
cltd
outsb
mov
dec
sbb
cmpsl
inc
stos
out
add
sub
dec
and
movsb
or
inc
mov
and
in
sbb
test
outsl
add
mov
adc
push
inc
adc
cld
jl
push
sub
adc
movsb
es
cmpb
ljmp
push
mov
ljmp
test
xchg
push
jne,pn
jo
fstl
clc
push
nop
xchg
add
sbbb
testb
inc
int3
fdivs
mov
push
adc
sub
and
scas
mov
pushw
xor
or
push
push
and
push
adc
dec
enter
xchg
add
sub
stos
enter
int3
lret
lods
inc
mov
je
adc
dec
add
mov
scas
ss
or
or
sbbl
scas
int3
mov
cs
sahf
jl
shrl
sbb
in
int3
sub
push
xor
cmp
inc
push
or
sahf
pop
lds
mov
or
sbb
dec
or
sti
lcall
repz
pop
sbb
sbb
lods
mov
cwtl
clc
jbe
sbb
push
aam
adc
or
mov
enter
sbb
jbe
dec
jp
cli
enter
xor
push
push
adcl
sub
cmp
ljmp
sbb
xchg
cmp
adc
jnp
or
push
add
inc
xchg
dec
rorw
or
push
xchg
sub
mov
ror
int3
test
repnz
aad
xchg
jne
or
jo
inc
and
push
inc
pusha
ss
add
sbb
add
aad
or
in
cmovb
or
fisubl
push
es
or
ror
or
pusha
cs
push
cmp
insb
mov
lret
popa
inc
mov
cltd
sbb
fs
or
xor
jne
jb
sub
leave
add
mov
mov
mov
fcoms
add
or
int3
aam
adc
roll
in
lret
sbb
inc
push
or
sub
and
lock
xchg
fiaddl
cmp
and
add
into
xorb
adc
xchg
add
dec
and
mul
inc
loopne
loopne
push
sub
inc
dec
or
fmuls
inc
mov
jo
popa
das
fiadds
jle
add
xor
les
pop
push
lret
mov
sarl
push
push
or
push
xor
xchg
sbb
cmpb
dec
stos
inc
pusha
shlb
loopne
dec
mov
sub
mov
push
loopne
fcomps
leave
sbb
test
add
js
rorl
test
mov
add
mov
push
pop
ljmp
imul
jo
cmc
jbe
inc
fs
xchg
jle
cs
popa
bound
mov
and
movb
nop
ds
int3
or
mov
xor
lods
and
loop
fsubr
rolb
xchg
int3
inc
data16
cmp
push
mov
sbb
es
adc
xor
inc
cmp
dec
adc
test
xchg
sbb
fadds
inc
data16
shlb
or
and
ret
inc
dec
mov
lods
data16
movsb
adcb
mov
xchg
pushf
ret
mov
lcall
dec
nop
mov
add
cwtl
cmpsb
fmull
lret
jp
rol
mov
inc
mov
cmp
xlat
mov
or
clc
xor
mov
ja
mov
arpl
mov
lret
fs
fisttps
in
sub
mov
es
and
and
jp
ljmp
or
insb
or
xor
sub
int3
sub
repnz
adc
push
mov
mov
push
add
arpl
mov
popa
out
ds
dec
cli
incb
cmp
addb
inc
mov
jbe
or
enter
inc
es
into
fadds
or
or
or
mov
mov
stos
push
test
sbb
dec
adc
or
scas
or
sub
cwtl
inc
jb
test
dec
add
push
and
dec
sbb
dec
rclb
xchg
nop
push
fmull
add
dec
mov
add
int3
test
xor
call
es
sbb
or
loopne
pusha
add
xor
ret
loop
push
or
mov
pop
add
insb
pop
push
mov
xchg
cmpb
and
xor
inc
sub
dec
enter
sub
mov
add
inc
cltd
xor
mov
cltd
pusha
push
mov
stos
mov
pop
xchg
mov
sbb
jb
xchg
inc
sub
loopne
add
sub
inc
sbb
ret
xor
dec
jbe
or
dec
jb
hlt
cs
add
push
cmp
nop
sub
mov
out
push
xchg
sub
add
and
loopne
inc
sbbb
sub
push
mov
mov
test
xchg
into
insb
test
mov
sbbb
sub
dec
es
sub
es
mov
movsb
movsb
fisubs
inc
or
cmp
bound
or
mov
push
xchg
insl
int3
sbb
dec
inc
push
xchg
dec
cmpsb
clc
xchg
push
jo
es
xchg
dec
stos
mov
test
mov
or
aam
push
xchg
xchg
xchg
and
mov
shlb
mov
xor
jne
bswap
sub
adc
sub
push
dec
dec
insb
faddl
shl
and
xor
cmp
dec
scas
dec
dec
dec
or
or
push
or
or
stos
mov
mov
or
cmp
adc
or
add
sbbb
jle
ljmp
sbb
adc
xchg
cmpsb
cld
jl
push
and
out
pusha
ss
js
push
sub
dec
inc
xor
dec
inc
mov
shrb
jp
es
adc
or
incl
xor
dec
sti
ljmp
int
arpl
les
xchg
pop
or
add
ljmp
sbb
inc
push
mov
or
push
lods
incl
lcall
jle
mov
aad
inc
cwtl
adc
aad
inc
loope
fdivrs
fdivl
or
add
sbb
enter
and
inc
adc
inc
retw
movsb
and
mov
enter
pop
mov
sub
enter
or
dec
cwtl
add
inc
pop
mov
dec
add
fiaddl
add
sbb
in
push
adc
add
mov
mov
loope
in
movsb
adc
andb
dec
push
mov
push
dec
push
or
dec
mov
cli
orb
add
inc
adc
xor
pushaw
mov
jmp
dec
test
xor
jl
cld
inc
add
mov
lcall
sbb
loop
ret
mov
mov
inc
cli
mov
push
loop
subb
gs
adc
add
or
cltd
or
cltd
or
xor
dec
mov
icebp
xor
loope
or
scas
jp
aad
test
mov
mov
rclb
js
dec
mov
xor
addb
outsb
xchg
fcmovbe
dec
pop
sbb
mov
xor
pop
orl
jo
pushf
inc
mov
or
push
jmp
in
adc
nop
lret
test
int3
add
loopne
aam
mov
mov
dec
movsb
stos
cwtl
and
and
popa
dec
rcrb
test
dec
add
adcb
or
xor
adcb
mov
sbb
inc
cwtl
sub
add
in
shl
and
and
and
inc
add
cld
lcall
into
enter
inc
shrl
mov
sbbb
or
push
fidivs
subb
imul
add
rcrl
sbb
add
lock
aam
sahf
sbb
cltd
dec
fdiv
fsubs
test
cli
jl
mov
and
mov
fistps
xor
xorb
mov
sub
push
or
push
test
mov
add
and
call
cld
push
es
dec
lcall
pop
aam
mov
and
and
xchg
popa
or
movsb
xchg
loopne
mov
orl
lods
mov
push
pop
push
cmp
sub
xchg
mov
clc
sbb
mov
fcomp
sub
dec
loope
insl
es
push
and
dec
rorb
decl
sub
jecxz
mov
mov
sbb
dec
add
cli
into
das
out
data16
adc
mov
push
sub
cmp
mov
or
loope
je
clc
push
mov
adc
or
shlb
in
bound
or
add
and
jb
pushf
adcb
xchg
sbb
or
add
xchg
dec
adc
push
dec
jns
dec
adc
loopne
addb
enter
adc
dec
dec
add
es
fidivl
insl
push
or
sbb
sub
inc
aam
xchg
add
outsb
hlt
sbb
push
mov
pop
pop
push
bndldx
xchg
push
adc
cld
sbb
mov
add
inc
mov
mov
gs
and
pusha
sar
push
shlb
and
mov
xchg
mov
dec
cmpb
push
cmc
aad
dec
stos
ljmp
inc
adc
pushw
xor
pop
inc
daa
add
out
pushf
subb
sbb
xor
mov
dec
enter
sub
pusha
sbb
adc
test
es
int3
inc
inc
test
ds
sbbl
dec
inc
sub
sbb
lret
les
or
dec
add
mov
inc
out
xor
movsb
xor
mov
cs
shlb
test
mov
rcr
mov
adc
lret
push
inc
shrb
loop
adc
mov
sub
movsb
dec
rolb
cmp
sub
add
int3
mov
pop
das
lret
lret
mov
sahf
jp
movsb
nop
cltd
mov
dec
add
pop
pop
into
pusha
cmp
xorb
nop
lret
jle
repnz
and
dec
es
and
in
fisubs
pushw
sub
sbb
cs
fcoms
add
add
fcompl
and
aad
sbb
inc
sbbb
int3
pusha
cwtl
cmp
inc
sbb
and
inc
and
pop
add
in
dec
inc
dec
pusha
test
jle
flds
xchg
dec
adc
add
or
and
test
pushf
stos
aad
mov
pusha
lock
leave
mov
cmpsb
es
adc
fs
add
mov
pusha
adc
add
mov
sub
addl
in
push
dec
xor
rcl
bound
dec
mov
les
test
loope
inc
outsb
xchg
aam
adc
test
cmp
and
sbbb
je
push
sub
scas
mov
sbb
sub
stos
sbb
aam
xchg
xor
dec
push
pop
sbb
jle
push
ret
or
and
add
lods
fdivrs
scas
xorb
aaa
mov
push
jbe
mov
and
mov
xchg
sbb
and
inc
cmc
cld
or
dec
push
push
xor
jo,pn
inc
push
mov
pushf
cmp
push
ret
mov
leave
or
sub
push
int3
mov
and
add
sub
dec
lock
addb
dec
jo
add
imul
add
push
insb
or
mov
push
mov
push
lret
popa
outsb
call
xor
mov
dec
push
mov
into
dec
pop
or
popa
lcall
ret
cmpsb
cmp
xor
add
jb
scas
fmuls
sub
sbb
cwtl
enter
pop
or
in
dec
pusha
mov
xchg
adc
xor
jnp
ret
push
add
sub
cmp
js
mov
lods
adc
cltd
or
enter
mov
sbb
mov
test
ret
loopne
adc
fidivrl
es
dec
xchg
fisubrs
andb
xchg
fdivrl
int3
int3
adc
addb
inc
xor
xchg
sub
lcall
addb
xchg
or
cmp
mov
add
addl
sbb
popa
and
mov
shlb
sub
xorb
sbbl
mov
scas
or
jo
jno
cmp
and
add
push
add
adc
cmp
mov
mov
adc
or
cmp
and
cltd
sub
hlt
xor
cmp
xor
mov
orl
stos
aam
xchg
pop
popf
xor
jns
push
and
push
cmovae
mov
dec
xchg
sbb
adc
add
pop
stos
mov
inc
adc
pop
adc
test
adc
loop
cltd
inc
add
jl
andb
pop
dec
js
add
cltd
dec
cltd
sub
loop
or
es
call
les
ljmp
push
shrl
adcb
cmc
test
xchg
idivb
ret
int3
or
xor
and
cli
ds
bound
fnstenv
push
lret
loope
int3
pop
ljmp
cli
and
pusha
popa
aad
je
jle
mov
mov
enter
fs
adc
ffreep
push
cmp
test
inc
pusha
push
pusha
lcall
pop
nop
in
rolb
inc
lods
xor
dec
stos
adc
js
push
pop
movsb
xor
loopne,pn
cld
fadd
pop
mov
test
movsb
lock
addl
loope
push
jo
out
in
pusha
frstor
inc
enter
mov
dec
sti
jb
ljmp
pop
and
sub
cmp
mov
adc
push
les
add
fs
sbb
sub
mov
aad
mov
hlt
xchg
popa
jb
inc
sbb
mov
enter
xchg
mov
pop
fsubs
aad
movsb
or
pusha
push
mov
ljmp
fdiv
movsb
push
fldt
dec
sub
xor
mov
ss
xchg
xchg
pop
in
dec
test
fimuls
nop
xor
jb
nop
lods
push
jb
xchg
popa
dec
xor
push
mov
outsb
xchg
sbb
adc
dec
in
fadds
dec
and
mov
inc
insl
cmc
fdivrl
adc
bound
and
es
and
jp
push
or
sahf
dec
jecxz
test
movsb
outsb
dec
bound
push
adc
add
add
aam
mov
test
nop
sbb
xchg
add
add
test
add
jle
bound
adc
nop
push
push
and
adc
fcmovbe
out
push
mov
push
aad
push
adc
lret
js
push
xor
lret
int3
repnz
pop
scas
cld
imul
adc
sbb
sbb
and
push
mov
cmp
ret
add
test
rolb
test
shl
or
push
pop
or
jle
jle
add
movsb
fs
int3
dec
mov
aam
adc
sbb
mov
inc
inc
aad
test
sbb
fs
rol
adc
and
xchg
test
mov
dec
push
push
pop
push
adc
sbb
fisubl
sbbb
add
ret
mov
push
sbb
addb
and
jbe
dec
or
push
cli
mov
jle
test
mov
mov
mov
lods
add
inc
cli
imul
jp
int
mov
adc
or
pusha
sbb
sub
and
xor
push
imul
gs
add
dec
push
xchg
and
push
xchg
roll
mov
mulb
xchg
dec
and
lret
stos
push
or
test
add
insl
rcl
andb
pop
mov
mov
je
pop
mov
je
and
sub
subl
cmpsb
push
cmpb
adc
add
nop
outsb
fdivrs
ret
or
xchg
inc
or
out
dec
inc
jne
and
es
ret
mov
call
movsb
ljmp
int3
gs
adc
mov
and
rolb
add
adc
or
xchg
xor
jo
nop
pusha
jbe
sahf
add
xor
gs
mov
in
sub
ret
sti
mov
push
push
subb
das
nop
push
push
sbb
ljmp
fisubs
pop
outsb
insl
movsl
xchg
xchg
inc
xor
or
repnz
and
leave
sub
int3
fs
cltd
testb
test
xchg
rcr
movsb
pop
adc
jb
adc
or
fbld
test
in
insl
jle
les
adc
cli
es
inc
adc
jo
imul
or
xchg
inc
es
dec
je
cli
adc
adc
cs
push
andl
inc
and
fcmovb
add
pop
sar
sub
cltd
push
push
scas
add
dec
or
pop
es
or
cmp
pop
mov
addr16
or
push
push
movsl
in
inc
shlb
mov
sbb
loope
adc
pusha
bound
add
xchg
inc
loopne
pop
pop
cltd
cmp
lods
sbbb
push
shl
jb
or
cwtl
pop
es
imul
pusha
fsubl
mov
shrb
dec
loopne
jbe
xchg
dec
and
push
xchg
mov
add
pop
lcall
sub
scas
ds
scas
sub
and
fdivrs
pop
repnz
ss
and
push
push
add
out
adc
cli
xor
lcall
je
adc
inc
dec
add
loop
das
shl
enter
sbb
js
sub
aaa
loope
mov
xchg
shlb
cld
add
or
xchg
nop
pop
test
lods
add
mov
shlb
out
sub
xor
imulb
adc
pusha
cld
rorl
xchg
popf
adc
repnz
mov
enter
add
add
stos
push
inc
xchg
mov
add
insb
movsb
cmpsb
pop
out
add
push
cmp
outsb
cmc
and
and
and
and
mov
mov
shlb
dec
jl
push
xchg
push
sbb
out
sbb
int
or
loop
test
inc
push
clc
ss
xor
test
add
je
adc
mov
test
and
xchg
or
mov
data16
int3
dec
bound
ss
addb
sbb
inc
and
and
andl
or
dec
add
pop
clc
mov
add
mov
rolb
xchg
inc
add
adc
sbb
rclb
and
adc
or
mov
test
mov
inc
inc
fisubs
movsl
adc
outsb
stos
les
xlat
xchg
or
es
cltd
sbb
add
out
inc
incl
stos
push
or
jg
cld
fsubrl
add
enter
or
push
nop
jp
pop
add
dec
sbb
inc
pop
sahf
lcall
inc
dec
cmp
fs
pop
js
xor
xor
jb
hlt
adc
xchg
mov
hlt
xor
dec
loope
clc
push
push
add
rorl
mov
cmpsb
adc
xor
movsl
mov
push
dec
dec
jb
xor
mov
ljmp
xchg
sbb
adc
andl
push
bound
sub
loop
test
test
mov
sbbb
outsb
sub
sahf
movsb
push
and
mov
cwtl
test
pusha
aad
cmpsb
sbbb
test
push
and
add
jb
xor
add
fwait
lcall
sbb
or
enter
cltd
lock
les
push
rorb
out
and
add
fs
push
pop
fdivrs
lret
stos
cmp
mov
sub
mov
or
adc
lcall
inc
inc
orb
lea
aam
pop
push
or
lret
cmp
or
cmpsb
xor
adc
out
sahf
push
inc
shlb
inc
jo
sbb
adc
sub
inc
sub
add
ret
cs
or
scas
dec
or
and
mov
ljmp
orb
or
push
leavew
ljmp
xor
addb
faddp
inc
scas
inc
lock
push
cld
scas
and
push
lret
xor
outsb
inc
inc
adc
or
mov
add
insb
orl
push
test
sub
and
scas
or
in
mov
mov
sbb
or
scas
and
and
push
push
ds
xchg
dec
pop
and
adc
mov
xchg
add
sbb
xchg
jne
xchg
fs
or
leave
sub
dec
jbe
adc
xchg
and
mov
movsb
mov
popa
sbb
mov
mov
mov
pop
cmp
jle
or
and
dec
popa
adc
adc
jno
or
loopne
xor
sub
xchg
dec
add
lock
mov
cs
mov
push
inc
adc
xor
jne
or
xchg
mov
cs
mov
cmpsb
and
mov
mov
sub
cwtl
mov
pop
cmp
xchg
loopne
fistpll
pop
fidivl
inc
sub
jg
sub
add
dec
mov
add
sbb
inc
sbb
lret
sbbb
add
xchg
sbb
mov
les
dec
or
push
add
mov
xlat
fdivs
into
cmp
jb
sbb
incb
add
fistpl
fdivr
xor
jmp
fistpll
sbb
push
clc
mov
jmp
add
cmc
decl
or
add
loopne
insb
adc
or
cmp
xor
adc
fsubs
ljmp
aam
and
fdivrl
cli
adc
loop
es
js
sub
add
mov
push
xchg
mov
and
shlb
test
mov
aam
cmp
jo
xchg
gs
dec
and
push
fcompl
push
cli
orb
test
mov
andl
xchg
ret
or
lcall
jb
or
dec
lret
or
xchg
inc
push
sbb
sar
pop
test
test
mov
andl
dec
adc
ret
call
inc
xor
in
roll
pop
xor
cs
roll
rol
cmp
add
push
pusha
in
add
sub
or
enter
inc
cmpsb
repnz
xchg
mov
je
push
xchg
mov
and
add
fdivs
dec
jo
adc
out
dec
and
pop
popa
push
xchg
push
adc
cs
lock
popa
and
pop
push
jecxz
ret
xor
insb
data16
mov
add
int3
mov
inc
push
and
es
out
cmp
insb
shlb
dec
les
es
ret
jo
loop
adc
or
or
or
jne
xor
jo
leave
push
and
cmp
or
shrb
sbb
mov
pop
or
hlt
gs
shrl
mov
dec
add
and
mov
rol
test
xchg
insb
jb
mov
test
cwtl
or
out
shll
and
cmc
stos
mov
sbb
jae
imul
pop
push
cmp
adcb
push
andl
jbe
or
cmp
xchg
lret
and
loopne
push
dec
dec
mov
cltd
adc
push
xchg
sub
push
xor
inc
push
pop
and
sub
adc
pop
sbb
sbbl
sbb
inc
hlt
xchg
push
sbb
mov
lock
add
mov
into
sarb
adc
or
sub
cli
movsb
add
adc
shlb
mov
lea
xor
hlt
pop
daa
adc
in
test
aaa
and
pop
add
sbb
jb
fsubrl
aad
inc
imul
adc
mov
jbe
rorb
dec
inc
shll
outsb
adc
sub
in
test
add
sub
pop
xchg
xor
pop
int3
daa
std
dec
push
addl
jp
ljmp
rol
pop
mov
shl
cmpsb
outsl
or
scas
inc
mov
dec
popf
sub
xor
stos
aad
inc
push
or
push
sbb
dec
sbb
add
adc
cmp
mov
subb
nop
add
xchg
sub
and
shlb
mov
push
lcall
xor
or
sbb
or
ss
push
ss
ds
scas
fs
outsb
sahf
sbbb
pop
test
test
dec
push
push
mov
push
jb
fistl
js
xor
cmp
lret
adc
cli
xchg
xor
push
bound
aad
sub
out
fdivrl
ret
sbb
pop
add
mov
mov
mov
xor
lret
inc
cwtl
inc
sbb
dec
xchg
ss
fs
and
scas
movsb
scas
push
enter
lods
repnz
sbb
sti
jno
cmpb
scas
insb
dec
mov
lret
bound
dec
add
rolb
mov
mov
ret
xchg
sbb
xchg
adc
pushf
nop
in
xchg
notb
clc
push
xchg
enter
and
mov
add
mov
shlb
lret
cmpsb
sub
pop
and
or
ret
loop
cwtl
test
inc
mov
bound
xchg
das
cmpb
sub
adc
jae
xor
data16
push
add
jae
bound
test
or
dec
cmp
sbb
orl
ss
test
inc
or
mov
lock
mov
lret
pusha
sbb
sbb
xchg
push
sahf
add
loopne
pushf
les
insl
or
add
and
fdivrl
fdivrl
cwtl
pop
mov
lret
gs
and
test
pop
test
pop
into
mov
add
push
testb
or
and
add
cmp
ss
enter
mov
or
nop
pop
mov
lcall
adcl
add
mov
sub
mov
cs
add
inc
xor
pop
push
or
hlt
loopne
push
xchg
dec
and
xchg
data16
push
push
enter
inc
sub
jb
adc
ret
dec
pusha
sbb
pop
xchg
sub
push
add
pushf
shlb
inc
push
add
cmp
add
xchg
add
mov
inc
xlat
mov
pop
jl
mov
adc
pop
lods
sbb
popf
cltd
aam
cs
inc
or
jne
inc
jmp
lea
adc
shl
mov
jb
and
fdiv
mov
rol
shlb
fildl
jmp
push
inc
cmp
mov
roll
pop
cs
cld
mov
push
and
cmp
mov
push
inc
or
xor
scas
push
push
lods
movsl
mov
mov
xor
cmpsb
movsb
popaw
or
in
dec
addb
cwtl
mov
scas
ss
mov
test
xor
jl
cltd
push
aad
andl
dec
xchg
xor
and
test
outsb
test
test
mov
xchg
cli
insb
adc
lods
cmp
popa
mov
mov
xor
out
mov
xchg
sbb
xchg
aam
push
orl
push
mov
les
sub
shlb
or
enter
jb
les
ret
or
inc
add
xor
orb
mov
push
pop
ficoml
push
cwtl
bound
js
dec
cmpsb
es
idivb
push
add
xchg
shrb
rolb
test
sbb
pop
sub
push
test
fs
inc
inc
rclb
mov
inc
mov
add
es
fwait
aam
cs
or
xchg
les
loop
pop
adc
push
inc
xor
xor
push
scas
xchg
rcrl
insl
push
test
nop
nop
sub
sbb
xor
test
mov
xchg
mov
adc
sbbb
test
shlb
out
inc
sbbb
loop
insb
ret
int3
adc
clc
xor
movsl
push
data16
xor
inc
mov
mov
cmp
add
sahf
add
mov
or
xor
rclb
mov
adc
imul
subb
in
dec
adc
mov
pop
pop
xchg
js
aad
mov
xor
and
outsb
ficoml
cmp
hlt
mov
sub
cmpsb
sub
imul
cli
scas
mov
andb
mov
mov
testb
and
push
sbb
adc
adc
cmp
gs
cmpb
sub
lods
pop
ljmp
fdivrl
add
test
bound
in
cwtl
cli
xor
faddl
dec
adc
dec
xor
outsb
or
pusha
sbb
mov
cmp
push
push
xorl
insb
jo
mov
dec
pop
jp
int3
cmc
push
mov
xor
cmpb
mov
sub
movsb
nop
xchg
add
mov
shll
pop
dec
inc
pusha
sbb
stos
lods
adc
and
cmp
sub
xorl
pop
cmp
inc
xchg
lret
scas
xchg
xor
push
lcall
ja
mov
aaa
mov
mov
movsl
or
in
pop
lret
stos
ret
shrl
mov
fnstenv
nop
call
inc
in
push
sbb
push
push
and
adc
int
pop
enter
call
dec
sub
and
jb
adc
or
and
dec
jne
jmp
and
pusha
imul
mov
jne
or
add
test
adc
out
ficomps
adc
movsl
add
sub
mov
ss
fidivs
fbld
lret
pop
lods
xchg
push
or
xchg
adc
and
add
sub
adc
dec
mulb
push
inc
daa
add
test
or
dec
hlt
insl
adc
dec
das
push
in
and
arpl
pusha
cs
push
adcl
cmpsb
push
inc
divb
lcall
push
mov
int3
xchg
rcll
idiv
test
or
xor
fisubl
ds
add
les
xor
xor
push
test
loopne
jne
js
and
sbb
orl
je
lea
mov
xchg
int3
loopne
fsubrl
loop
and
xor
ret
mov
enter
sbb
fdivrs
inc
dec
movsb
cmp
and
push
sbb
loop
xchg
or
fidivs
aam
mov
add
push
test
adc
mov
in
out
push
dec
or
ljmp
or
jp
mov
sbb
dec
dec
loop
cwtl
enter
les
inc
dec
mov
or
subl
pop
add
push
leave
lcall
adc
pushf
xchg
pop
jb
push
cli
outsl
sbb
shrl
mov
or
loopne
sbb
dec
into
pushf
mov
xor
cmp
xor
cltd
rcl
test
lods
push
pop
mov
bound
je
or
stos
or
push
or
sbb
sbb
test
cli
rcrb
xor
adc
add
pop
cltd
dec
and
push
cmpsb
dec
xor
gs
add
das
call
and
add
cmp
lods
inc
push
add
call
loopne
lret
xor
add
rolb
rolb
and
add
mov
inc
or
inc
jbe
int3
adc
sub
in
jo
out
hlt
dec
sub
inc
pop
addb
dec
sub
xor
dec
inc
popa
loop
mov
insb
mov
scas
dec
add
push
stos
dec
cmp
ljmp
push
jle
lcall
jo
sub
sahf
mov
push
push
adc
mov
xor
xor
adc
int
add
dec
adc
mov
xchg
adc
out
add
or
faddl
push
hlt
repz
sbb
bound
ja
notb
loop
dec
mov
or
add
sbb
sub
mov
daa
movsl
mov
addb
ror
xchg
inc
insl
lret
add
and
cwtl
add
rorb
scas
add
xchg
mov
mov
mov
dec
xor
dec
sub
and
adcb
dec
rolb
xchg
mov
push
lods
sub
xchg
pushf
int3
sub
mov
sbb
nop
loop
mov
add
xchg
jno
fmull
adc
rorl
or
orl
mov
and
push
stos
or
adcl
push
pop
add
imul
adc
cmp
shlb
sbb
push
mov
rcrb
inc
mov
cs
push
mov
add
push
mov
pusha
nop
inc
xorl
mov
jo
push
mov
cmpsb
jle
notb
mov
pushf
fs
xchg
jbe
adc
sbb
rol
into
loope
cmp
cmpsb
xor
inc
sbb
and
pop
xchg
cmp
sub
and
push
push
ret
cld
jp
data16
adc
js
sbb
or
rcr
jbe
dec
xor
test
jl
adc
or
xor
cmp
fidivl
stos
dec
mov
shl
mov
jae
pop
adc
xor
cmp
dec
push
sub
lock
xchg
shrl
mov
adc
sub
movsb
cmp
int3
mov
pop
xchg
add
movsl
cld
and
add
test
mov
in
fnstcw
nop
adc
add
mov
xchg
inc
mov
cmovnp
ret
enter
adc
ja
add
fimuls
mov
or
es
mov
add
fwait
push
xor
movsl
jo
ljmp
rorb
in
adc
push
cmpb
xchg
adcb
or
divl
pop
mov
adc
xchg
sub
add
inc
lock
lock
roll
push
sub
adc
adc
or
cltd
notb
push
pop
sbb
or
adc
in
inc
loop
xor
lock
add
fs
and
or
inc
enter
add
jle
ds
loop
and
les
xor
fmuls
pusha
or
add
push
imul
cld
inc
sbb
sbb
xchg
xor
adc
and
xor
lock
mov
pop
loop
out
loopne
add
xor
add
ds
mov
mov
xor
add
test
rcl
jo
jbe
std
je
leave
adcb
in
or
stos
test
adc
jb
cmpsb
cli
ss
ss
pop
bound
pop
subl
jo
push
inc
pusha
xchg
lods
mov
outsb
insb
loop
push
push
push
cmp
mov
sub
inc
push
xchg
push
sub
dec
outsb
sbb
adc
adcb
adc
push
inc
push
and
push
xchg
sbb
insb
jo
and
and
cmc
scas
es
mov
mov
adc
add
dec
sarb
push
and
jo
cmp
dec
adc
insb
cmp
push
js
xchg
pop
bound
push
sahf
mov
loop
cltd
dec
inc
inc
and
orb
cs
or
out
push
stos
lret
lcall
test
jne
cmpsb
nop
or
xchg
cs
lock
ds
xchg
mov
adc
and
sub
lock
xor
loopne
push
jo
adcl
dec
cmpb
mov
clc
insb
lea
dec
test
hlt
aam
loopne
lret
push
inc
or
adc
roll
mov
rcrb
xchg
lret
dec
sub
push
xchg
xor
and
sub
inc
and
imul
outsl
sbb
mov
mov
dec
cltd
je
push
cmp
scas
cltd
ficoml
jo
mov
pop
adc
push
loopne
xchg
push
xchg
ds
pop
cmpsb
add
sub
sub
test
call
add
imul
push
xchg
adc
dec
jne
imul
inc
lods
inc
nop
pop
xor
in
jo
hlt
loop
mov
adc
movsl
sub
cmpsb
push
xchg
outsb
bound
pop
divb
cwtl
and
dec
orb
and
bnd
and
cmpl
scas
push
xor
cli
dec
mov
bound
insl
cmp
or
pop
movsb
dec
lock
cs
stos
mov
xchg
pop
xchg
outsb
pusha
es
push
or
jbe
sub
xchg
outsb
fs
lret
dec
or
data16
mov
xchg
icebp
adc
ret
xchg
inc
mov
orb
pop
or
adc
mov
dec
mov
xor
mov
nop
enter
xorb
push
inc
hlt
pop
push
pop
and
nop
ds
mov
mov
sbb
mov
lods
add
sub
daa
ljmp
push
adc
test
inc
fisubs
dec
les
jbe
xchg
sbb
and
clc
or
jp
add
add
mov
pop
dec
into
hlt
cltd
mov
push
jp
mov
les
add
sbb
xchg
sarl
xchg
push
mov
xchg
cmp
cld
incb
and
inc
mov
test
push
pop
notb
in
mov
xor
xchg
xor
pop
xor
and
test
sub
and
xchg
sbbb
shlb
leave
pop
sarb
movsl
inc
add
jp
dec
mov
push
adc
sub
sub
or
pushf
or
inc
gs
ljmp
mov
dec
pop
popa
add
xor
mov
add
popf
add
sbb
imul
ret
imul
adc
push
faddl
sub
dec
jb
pop
repnz
mov
push
enter
or
inc
sub
dec
add
or
xchg
lret
enter
lea
adc
xchg
ret
pop
loopne
data16
push
cld
mov
les
sbb
sub
or
mov
mov
sbb
int
cmpsb
in
js
cmp
sbb
add
or
or
lods
push
cmp
es
inc
dec
enter
add
push
mov
adc
inc
xor
shlb
testb
sbbb
imul
push
sbbb
in
les
jecxz
and
rcrb
cld
sbb
xchg
sub
mov
jl
add
xor
pusha
mov
add
outsb
push
movsl
inc
xchg
ret
add
or
in
lods
popa
xchg
add
fs
mov
and
mov
jmp
dec
add
shl
js
mov
cltd
aam
les
rcrb
dec
dec
insl
sbb
test
mov
hlt
inc
fs
inc
push
pop
sahf
adc
fs
or
mov
ret
movsl
and
sub
and
cs
adc
xchg
sub
xor
xor
lcall
dec
fsubrp
js
and
out
inc
and
cltd
fcmovnb
test
push
test
and
xor
and
mov
popa
and
bound
cwtl
add
or
xor
dec
out
add
into
and
sbb
sbbb
inc
dec
cmp
cmp
enter
push
stos
js
pop
xor
mov
xor
testb
shrb
imulb
mov
push
stc
clc
push
and
xor
adc
andb
mov
pop
cmp
xchg
sub
pop
or
or
mov
mov
ret
ficoms
sbb
push
xchg
mov
mov
mov
mov
in
xor
inc
rclb
int3
push
int
sbb
adc
test
pop
jo
push
sub
or
lods
rolb
test
jne
cmp
dec
inc
sbb
mov
pop
or
sbb
hlt
int3
jne
add
adc
cltd
xchg
xor
and
dec
orb
adc
xlat
pop
repnz
orb
mov
fs
das
xchg
shrb
add
cmpsb
add
inc
sbb
ds
lods
test
or
bound
or
int3
int3
push
cli
aam
and
rcll
imul
sbb
push
dec
xchg
dec
sbb
scas
mov
adc
orb
push
fsts
xchg
repnz
adcl
mov
loopne
or
clc
aad
bound
shrl
adc
in
cs
push
xor
clc
push
push
xchg
jo
je
xchg
mov
ljmp
ret
pop
hlt
or
notb
xor
sbbl
jne
pusha
push
or
lock
inc
push
mov
cwtl
ret
dec
sub
fdivs
push
and
hlt
mov
sarb
add
sbb
jp
adc
aam
xchg
pop
movsb
mov
dec
pop
fsubr
pusha
add
inc
call
int3
sbb
pusha
and
loopne
mov
xchg
cwtl
jo,pn
daa
push
into
shlb
xchg
sahf
or
jl
push
test
and
and
add
xor
aam
or
dec
mov
rcll
inc
out
pop
adc
pop
and
mov
mov
jbe
mov
xor
jo
mov
loop
mov
adc
push
and
cmp
or
adc
xchg
mov
cmpsl
loope
jle
push
dec
stos
test
inc
cmpsb
nop
mov
or
bound
shl
popa
add
loop
push
popf
and
ds
in
adc
dec
push
dec
scas
push
and
dec
mov
lret
sub
sub
or
xor
int3
mov
mov
cmp
je
mov
mov
je
sbbl
fs
ret
call
add
test
jg
test
ja
adc
pushf
mov
mov
int3
fcoms
add
xchg
dec
fnsave
adc
test
push
and
dec
shrb
add
pop
fdivs
ret
push
add
push
xchg
mov
inc
enter
or
xor
push
testb
cwtl
push
sub
jb
or
mov
push
inc
push
push
pushf
push
add
aad
sub
add
inc
sub
outsb
lret
shll
inc
mov
call
push
push
push
mov
sbb
loop
push
pop
dec
in
push
dec
cmp
cmc
add
pop
mov
or
add
lret
sbb
ljmp
add
inc
mov
xchg
sbb
pusha
fiaddl
mov
adc
jb
lcall
addl
push
ret
test
mov
les
enter
sub
mov
xchg
mov
hlt
jne
int3
je
adc
das
mov
outsb
nop
les
or
pushf
movsb
push
xchg
adc
add
hlt
test
adc
and
inc
pusha
hlt
sbb
dec
xor
mov
and
imul
stos
mov
sbb
lods
test
test
aam
mov
xor
adc
mov
shlb
jp
test
adc
inc
mov
add
push
scas
shlw
and
lods
shlb
or
bound
je
cmc
and
cmp
jbe
add
adc
test
loop
and
rolb
in
adcb
or
or
mul
add
dec
mov
ljmp
jp
shrb
mov
mov
and
xchg
or
jo
lods
test
test
and
stos
adc
pusha
inc
ljmp
push
rclb
test
cmpsb
shl
data16
push
test
mov
ror
inc
xor
cbtw
dec
test
imul
mov
nop
jp
and
loop
cmp
sub
scas
dec
inc
sub
push
or
cmp
inc
add
inc
sbb
mov
cmpsl
fcoml
int3
ret
adc
push
insb
jns
test
in
mov
dec
into
scas
sbb
inc
cmp
and
lods
nop
sbb
pop
sbb
add
es
xchg
cmp
mov
and
aam
les
inc
pop
pushf
outsl
jno,pn
or
push
inc
sbb
data16
leave
pop
test
rcr
in
fcompl
ret
sub
pop
lods
push
lcall
sub
fisttps
daa
adcb
xor
orb
data16
xchg
push
fiadds
dec
mov
cli
cmp
mov
mov
sbbl
xor
dec
cmp
bound
mov
inc
insl
sub
cwtl
sbb
add
test
ret
or
je
lret
aad
and
addb
push
mov
stos
cli
dec
lods
inc
adc
sbb
shlb
cmp
mov
xchg
fstps
insb
enter
push
xor
lods
add
fs
leave
inc
cmp
rcrb
and
call
daa
out
sbb
adc
loop
stos
inc
daa
mov
sbb
mov
add
mov
push
jo
add
jb
and
xchg
or
or
adc
jmp
adc
xchg
mov
mov
repnz
xor
clc
add
test
scas
ljmp
shlb
inc
adc
inc
push
pop
xor
add
mov
xchg
dec
std
xchg
fs
mov
or
sahf
leave
sub
sahf
jb
and
dec
xchg
and
lret
inc
add
stos
dec
test
add
adc
adc
popa
xor
push
subl
movb
mov
pusha
push
sahf
mov
rorb
andb
fld1
insl
mov
shlb
aam
pop
ss
adc
adc
inc
and
xor
and
lods
lcall
inc
inc
mov
and
dec
and
xchg
push
adc
cmpsb
sbb
dec
inc
jle
and
sbb
test
or
mov
sub
and
test
inc
mov
jb
pusha
mov
lcall
jns
imul
rorl
shr
jo
add
rorb
out
or
xchg
ret
divb
jl
inc
add
jp
xor
stos
rclb
out
fisttps
add
enter
cwtl
sub
add
adc
test
or
hlt
js
mov
pop
xchg
xor
push
or
dec
push
or
dec
mov
add
movb
push
adc
test
sub
fs
es
push
xchg
enter
movsb
mov
or
icebp
sbb
push
repnz
cmpsb
insb
xchg
jl
movsb
nop
rorb
data16
aam
mov
test
xchg
movsl
pop
scas
xor
push
ds
dec
daa
dec
jb
mov
push
leave
sbb
out
dec
ljmp
inc
shlb
movsb
mov
add
inc
loopne
xchg
push
stos
sub
or
push
push
xor
inc
shrb
sbb
push
rorb
dec
sbb
hlt
imul
mov
fdivl
ljmp
inc
xchg
push
pop
sbb
add
dec
fs
mov
or
or
sub
mov
test
jl
or
sbb
add
inc
shrl
inc
or
in
nop
popa
or
xor
push
and
ret
stos
mov
dec
cmp
movsb
insl
data16
nop
xchg
ret
cli
cmp
cwtl
jo
or
test
test
inc
arpl
or
rorb
test
pop
lods
push
dec
jp
cli
and
and
addl
push
mov
pop
aad
lcall
and
add
and
ret
cltd
cli
stos
or
mov
cmp
lcall
repnz
ljmp
dec
mov
xor
jle
push
sbb
andl
pop
xorb
xchg
sub
sbb
pop
pop
dec
xor
lock
add
and
mov
xorb
cld
sub
mov
pop
cmp
jb
shrl
dec
movsb
sbb
add
or
pusha
and
test
xchg
sahf
dec
dec
es
adc
ret
pop
adc
sbb
push
dec
and
test
repnz
xor
xchg
ds
cmc
mov
clc
scas
test
xor
xchg
scas
add
test
insl
adc
and
mov
mov
loop
out
or
add
fs
sbb
add
mov
es
shll
push
mov
xor
push
pop
lods
and
mov
hlt
mov
fwait
jo
push
xor
andl
inc
sub
xor
shll
xchg
add
or
call
orl
loopne
or
jbe
sub
xchg
leave
mov
call
lods
mov
addb
pop
es
pusha
cmp
loop
es
push
lcall
subl
sbb
dec
les
xor
or
pop
add
push
or
push
or
insl
mov
add
and
pop
jl
add
ss
movsb
push
cmc
cmp
xchg
pop
xlat
xchg
addr16
cmp
clc
rclb
mov
sub
popa
xchg
mov
and
loop
mov
adc
push
es
ds
or
xor
cmp
movsb
jp
adcl
fcomps
xor
and
lods
mov
popa
add
mov
lcall
dec
inc
ljmp
push
mov
xor
or
sub
out
andl
pop
in
sahf
dec
jecxz
shlb
push
call
cmpsb
jo
push
lret
dec
repnz
mov
cmc
xchg
xchg
sbb
cmpsl
push
ss
aam
or
je
add
inc
or
lock
fsubrs
stos
xchg
push
and
xchg
insb
cmpsl
shlb
rolb
dec
add
out
lcall
cmp
lods
jo
adc
push
mov
push
aam
and
into
add
nop
xchg
gs
sbb
loopne
cmpsb
cltd
mov
ret
pusha
cld
loope
or
stos
dec
dec
mov
add
add
jns
bound
add
sub
mov
sbb
pop
outsb
loop
addb
fbld
xor
mov
cld
xor
sbb
add
pushf
mov
pop
arpl
lcall
test
loop
inc
or
test
push
push
push
mov
pop
xor
push
outsb
test
and
adcb
push
int
xchg
and
push
xchg
mov
jo
mov
push
sbb
push
xor
and
push
inc
nop
leave
les
sarb
cli
xchg
inc
sub
nop
imul
movsb
sbbb
xor
push
jo
push
push
push
sub
hlt
and
adcl
lret
es
into
mov
clc
sub
add
test
lret
inc
leave
or
pusha
mov
addb
inc
test
nop
and
mov
jno
mov
loop
inc
test
pushf
xor
popa
add
xor
test
dec
and
gs
rclb
call
dec
dec
pop
rclb
mov
pusha
adcb
or
je
nop
jo
adc
test
dec
xchg
test
mov
repnz
popa
lods
add
inc
lcall
cmc
bound
inc
add
fadds
loopne
imul
jbe
mov
mov
in
and
int3
and
clc
cmp
push
pop
push
xor
data16
movl
mov
leave
hlt
xchg
add
adc
sbb
adc
mov
mov
add
push
xchg
push
shlb
sbb
js
out
data16
dec
pusha
mov
lret
xor
hlt
jp
call
lret
xor
xor
lods
add
xchg
sbbb
test
adcb
jb
xchg
les
addb
push
pusha
mov
cmp
mov
push
push
bound
pop
pop
jo
sbb
push
jo
fdivl
cmp
xchg
insl
es
mov
stos
add
cmp
mov
push
xor
mov
mov
xchg
sub
mov
andl
push
dec
mov
dec
call
cs
sbb
data16
jmp
and
pop
jb
sbb
data16
pop
pop
adc
gs
adc
int3
adc
add
dec
push
xor
add
enter
data16
adcl
les
rclb
push
lcall
lret
rcrl
lods
mov
push
push
and
mov
subl
test
push
mov
or
add
pushf
adc
stos
add
insl
adc
dec
or
add
push
push
lods
add
pop
or
jmp
mov
test
aam
add
sbb
jle
fadd
jb
cs
sub
inc
in
and
push
cmp
push
pushf
add
mov
and
ret
sbb
adc
mov
out
mov
dec
inc
fsub
cwtl
dec
jno
bound
dec
mov
in
test
icebp
xor
xor
dec
loopne
inc
test
and
push
fidivl
add
or
and
xchg
adc
stos
movsb
rol
ljmp
push
inc
or
pusha
xchg
les
xchg
into
addl
and
add
into
or
mov
loope
add
or
ss
add
cwtl
xchg
out
lock
or
mov
ljmp
and
adcb
sub
subb
popa
push
sbb
into
jbe
mov
cmpsl
call
mov
mov
push
and
add
lret
xor
cmp
insb
sbb
cltd
mov
leave
xorb
cmp
jle
les
sub
ret
push
add
dec
ret
call
and
scas
and
aad
aaa
loop
outsb
pop
rorl
xchg
inc
adc
add
xor
mov
jnp
in
jg
xor
iret
sbb
cmp
dec
push
daa
xor
outsl
inc
adc
mov
xchg
cmp
xchg
jne
mov
sbb
push
dec
cmp
into
rclb
xorl
or
out
adc
xor
mov
adc
xchg
shl
pop
mov
pusha
adc
sub
dec
add
lcall
mov
bound
xchg
cmpb
dec
fs
mov
pop
sub
inc
inc
test
or
xor
and
clc
sub
and
push
and
add
cmp
mov
and
add
hlt
adc
bound
ds
push
dec
push
xchg
xchg
rorb
xchg
pop
aam
mov
push
ret
dec
data16
xor
shlb
xchg
sbb
mov
or
sub
pop
hlt
nop
pushf
dec
das
or
sbb
mov
adc
loop
ret
dec
test
add
lret
push
addr16
pop
and
push
add
push
push
loopne
pop
and
add
pop
or
push
negb
cmpsb
fisubl
add
jecxz
sub
xor
jecxz
push
add
nop
aam
or
xor
cltd
sub
adc
xchg
jl
test
imul
adcl
push
cli
int3
pusha
faddl
ret
add
insb
sbb
pop
xchg
xor
push
xor
ret
xchg
cmp
int3
or
lods
pop
movsb
int3
dec
je
enter
out
test
push
adc
push
mov
lock
xchg
and
inc
inc
mov
cwtl
add
popa
add
mov
imul
or
test
pusha
push
pusha
mov
xchg
orb
add
es
push
ss
pop
dec
test
xchg
sub
mov
es
add
pusha
hlt
bound
jl
dec
loopne
mov
sbb
add
mov
inc
test
pop
call
cli
inc
nop
dec
xorb
lods
insl
loop
sbb
popa
adc
or
fcoms
or
xor
ljmp
loopne
or
dec
mov
push
sub
cwtl
inc
jo
mov
sbbb
xor
xor
inc
outsl
add
or
inc
ret
subl
push
mov
or
outsb
dec
loop
adc
sbb
cmp
add
fimull
xor
or
xchg
shlb
mov
orl
add
pop
mov
ret
or
or
jo
clc
cli
sub
or
sbb
pop
pop
dec
sbb
ficoml
aam
pop
lock
in
push
push
shl
push
xchg
incl
mov
ljmp
sub
xchg
mov
out
push
popa
cmp
xchg
aad
test
add
insb
mov
nop
clc
pusha
inc
add
xchg
insb
cli
pusha
and
orb
dec
or
push
pop
call
pusha
adc
jb
pop
mov
test
inc
mov
and
mov
mov
push
outsb
sbb
cmp
and
stos
cli
adcb
mov
mov
fdiv
push
in
adc
inc
adc
cs
adc
jo
sub
rolb
mov
fs
dec
sub
inc
or
mov
mov
adc
push
pop
cmp
test
pop
and
dec
movsb
push
sahf
sub
jbe
lcall
push
aad
pusha
or
or
xchg
dec
les
cwtl
fidivs
inc
sbb
add
push
xor
sbb
xchg
ret
test
lock
mov
xchg
add
cmp
ds
rorb
je
and
aam
adc
adc
pop
clc
cmp
stos
addb
mov
xchg
xchg
movsb
push
shlb
test
lret
mov
insl
mov
popa
push
add
les
loope
adc
push
cld
lret
lock
aam
xchg
call
and
or
add
cltd
sub
in
cwtl
mov
add
push
imulb
add
jl
ret
shlb
lods
dec
mov
mov
addb
test
sub
cmp
sub
cltd
mov
cld
jbe
push
cmp
rclb
sbb
jle
sbb
or
sbb
cmp
pop
pushw
lret
movsb
dec
jp
movsb
ret
mov
add
fdivs
push
call
sbb
insb
je
fwait
cmp
je
sub
add
inc
add
sub
cmpsb
ror
and
rclb
mov
orb
and
dec
lods
xchg
xchg
rorl
out
js
fs
ss
or
push
xlat
push
loop
pop
es
xor
je
lock
sbb
adc
aad
insb
leave
push
rclb
sbb
shl
pop
push
or
int3
pop
lcall
cmp
outsb
test
jbe
xor
adc
insb
push
and
add
cmpsb
cmpsb
cwtl
mov
add
mov
jle
xor
push
cli
pop
int
xchg
inc
jp
cwtl
mov
pushf
jns
ret
or
subb
cli
ljmp
aas
xchg
push
xlat
mov
loop
ror
or
gs
sbb
sub
test
test
test
add
arpl
xor
rorb
ret
shlb
xor
pop
fs
and
inc
adc
fisttps
rcll
or
cwtl
add
pop
pop
ds
test
or
adcb
stos
mov
push
mov
push
lcall
cli
xorb
push
sub
adc
es
mov
aam
jl
xchg
mov
jle
js
and
push
xor
in
or
pop
sbb
jp
and
sub
and
jbe
pop
es
xchg
dec
xor
push
or
dec
ljmp
clc
dec
pop
dec
or
jl
or
cs
xor
add
or
out
xchg
movsb
sbb
or
push
cmp
rcrl
out
mov
pop
cmpsl
add
mov
push
sbb
inc
sub
mov
cs
loop
sub
and
inc
or
push
stos
push
rorb
sbb
sbb
add
mov
ret
push
es
inc
mov
outsb
sbb
aam
push
cmpb
cmpsb
test
pusha
cmp
or
push
inc
cmpsb
sbbb
xor
jb
push
cmp
jno
adc
ret
test
loope
pop
add
cltd
or
add
xor
adc
xchg
jns
adc
ss
mov
ljmp
adcl
rclb
adc
dec
and
mov
xchg
xchg
adc
pushf
or
movsb
xchg
bound
ror
cmpsb
in
fcoml
add
pusha
aad
mov
cmp
sbb
ss
mov
xor
pusha
dec
push
dec
cmp
lock
jle
adc
fcmovb
or
add
push
push
test
add
mov
xchg
nop
add
fisttps
lea
aad
xchg
push
fwait
cmp
xchg
pop
xchg
addl
xor
ds
ficoml
inc
xor
cmc
sub
push
mov
xchg
push
pop
fdivr
and
push
mov
dec
push
mov
insb
inc
pusha
out
and
mov
push
xchg
call
js
sbb
fs
lret
sub
ficompl
fcoml
dec
sub
xor
jle
mov
out
rcll
mov
mov
lods
sub
or
push
push
inc
add
movsl
xor
das
sbbb
out
pushf
pop
dec
mov
incl
cmp
xchg
mov
data16
add
xor
clc
push
pop
inc
jo
and
cmp
ss
push
mov
adc
rcrb
add
lcall
dec
xorb
inc
pop
sbb
fcoml
mov
dec
mov
push
adc
dec
aas
add
aad
inc
adc
ret
pop
fidivs
xchg
sbb
inc
mov
cmp
inc
cmp
roll
xor
and
mov
push
adc
push
in
sub
or
rorl
nop
or
sub
mov
mov
push
sbb
sub
pusha
in
ret
add
lret
sbb
mov
push
inc
mov
xchg
test
mov
pop
adc
outsb
shrl
cmp
adc
aam
push
dec
sub
cmp
pop
or
jne
pusha
out
dec
push
push
cmpsb
dec
mov
cli
enter
fs
clc
and
rcrb
push
pop
mov
xchg
dec
or
scas
adc
aad
movsl
imulb
ret
pop
mov
push
jp
and
popa
xor
xchg
and
add
add
xchg
cmp
and
bnd
or
cwtl
or
push
nop
push
sbb
out
cmp
adcl
test
push
out
add
inc
jle
lock
lods
mov
hlt
test
dec
test
div
test
aam
rcl
add
push
pop
cmpsl
sub
jb
and
scas
push
or
je
mov
dec
sub
push
jo
ret
push
movsl
dec
loop
je
add
add
cli
fcomps
add
inc
cmp
mov
insb
cwtl
cs
or
and
mov
or
xchg
pop
jno
lock
push
inc
inc
popa
add
jo
xor
pop
adc
repnz
bound
int3
xor
and
xor
add
xchg
cmc
inc
and
mov
lock
mov
dec
cmp
cltd
adc
mov
loop
subl
cs
adcl
cmc
xor
fs
cmp
xchg
popa
push
xorb
dec
inc
add
add
jbe
sub
aaa
and
push
xchg
mov
pushf
mov
mov
xchg
or
jp
or
and
test
fisubl
sbb
jns
fidivrs
add
or
sbb
dec
push
dec
sub
pop
dec
cmp
into
icebp
pusha
cli
aaa
ljmp
jbe
xlat
add
dec
mov
ljmp
push
rcrb
repz
rclb
scas
popf
cs
and
cmc
add
fcomps
adc
push
mov
adcb
cmpsb
adc
lods
scas
sbb
and
push
mov
pusha
addl
orl
add
adcb
inc
add
xor
add
enter
sbb
add
xor
ds
pop
adc
adc
push
push
cmp
jbe
aad
mov
and
in
jb
dec
nop
push
das
or
shrb
push
cmp
sbb
aad
shlb
dec
or
and
dec
mov
aad
sbb
cli
mov
mov
inc
sbb
and
inc
lret
loopne
jb
push
and
cwtl
mov
mov
jl
es
sahf
pop
push
pusha
or
adc
movsb
pusha
mov
lods
addb
ret
pusha
push
les
inc
popf
cmpsb
cmp
rcll
sbbb
jmp
leave
loope
or
mov
xor
ss
icebp
and
pop
inc
les
imul
xor
xchg
inc
and
pop
fiadds
or
push
cmpsb
outsb
cwtl
adcb
test
or
cwtl
into
dec
dec
or
xor
into
sub
inc
or
and
aam
and
add
jle
gs
add
mov
pop
sbb
add
add
test
cs
ret
xor
pushf
xchg
adc
jb
adc
sub
sahf
mov
nop
mov
push
lock
push
push
and
push
in
andb
dec
sub
mov
les
imul
and
shlb
shlb
adc
aad
sub
xchg
mov
movl
inc
and
xchg
test
adc
sbb
pop
xchg
push
xchg
mov
mov
bound
xchg
imul
test
jbe
test
inc
cs
mov
and
inc
push
or
jo
ss
inc
lock
push
push
xchg
xchg
adc
mov
add
sbb
and
call
xchg
cltd
jo
sahf
mov
mov
imul
lret
cmp
and
dec
call
sub
xor
cmp
xor
sub
push
in
jns
dec
cmp
or
fs
nop
ficompl
enter
pusha
and
add
push
cmp
cltd
dec
sub
push
mov
xor
mov
adcl
in
cmp
or
xor
sbbb
ret
shlb
add
in
ss
adc
or
add
or
sbb
add
ljmp
pop
movsb
xor
push
adc
inc
jecxz,pn
loop
sbb
lods
adc
jle
add
movsb
test
fdivr
or
inc
popf
mov
or
or
and
dec
inc
push
xchg
push
loopne
ds
push
test
inc
adcb
movsl
nop
push
mov
jno
aaa
mov
pusha
inc
mov
and
sbb
test
xchg
mov
dec
add
or
xchg
or
sbb
popf
ret
sbb
or
xor
pop
push
xchg
int3
sub
mov
aam
adcb
call
cli
cwtl
or
cltd
inc
xor
push
mov
add
mov
adc
dec
sbb
jge
fisubl
andl
jns
fs
cs
mov
mov
or
xchg
scas
adc
xchg
adc
xorb
and
mov
xor
xor
xorb
sbb
push
ret
inc
and
mov
popa
add
inc
and
or
or
andb
pushf
inc
and
sbb
dec
jecxz
push
adc
push
inc
adc
add
sub
pushf
cmp
add
adc
sub
add
or
test
jmp
movsb
pop
test
pop
insb
mov
push
daa
mov
out
xor
addr16
sub
sub
cmpsb
xchg
scas
outsb
dec
mov
es
fwait
testb
dec
xchg
lret
loop
pop
sbb
push
add
les
ds
es
or
movsl
mov
daa
lds
inc
lcall
sbb
mov
xor
jp
mov
movsl
and
adc
cmpsb
popa
jo
pusha
fcompl
adc
xchg
mov
push
lcall
mov
fs
add
call
cmc
fidivs
push
inc
je
add
sbb
sbb
or
add
rorb
shr
cmp
jne
test
cs
and
sub
add
leave
mov
mov
sub
shl
rclb
orb
mov
test
retw
add
lret
mov
hlt
orb
jl
xchg
add
or
inc
dec
jle
add
loopne
push
xchg
xchg
sbb
scas
pusha
mov
nop
mov
mov
sbb
dec
mov
dec
notb
push
data16
xor
lcall
test
loop
int3
xor
push
push
sbb
out
fs
aaa
xor
adc
rolb
push
ficomps
push
leave
jp
aaa
ficoms
push
test
scas
sbbl
lock
std
repnz
sbb
adc
rorl
inc
add
jb
out
xlat
mov
adc
clc
push
push
add
lret
inc
pop
dec
mov
hlt
mov
fldenv
fs
add
add
sub
mov
test
or
add
inc
sub
lcall
sub
ljmp
or
sub
dec
or
push
push
or
les
inc
cmp
adc
lret
inc
in
dec
test
imul
add
iret
adc
je
test
arpl
xchg
fs
adc
push
test
sbb
pushf
xor
pusha
push
inc
mov
popf
inc
and
jle,pt
push
cs
aam
jno
lret
in
pop
mov
pop
cs
jle
dec
sbb
xchg
cmp
inc
shll
loopne
xor
pop
add
jle
test
or
cltd
stos
and
mov
mov
aam
bound
or
dec
cs
xchg
insl
loop
adc
push
jbe
mov
cmpsl
dec
mov
lret
sub
adc
or
adc
clc
fs
jb
push
jns
dec
jb
inc
imul
aam
push
jbe
mov
dec
les
push
enter
orb
in
mov
add
rclb
dec
mov
popa
and
bound
inc
popa
fidivl
xchg
add
rorb
cli
rorb
xor
xor
xchg
inc
sub
xor
ss
aam
sbbl
push
test
pusha
xor
ds
scas
inc
mov
or
xchg
pop
adc
loopne
clc
scas
mov
dec
es
xor
inc
sub
add
and
dec
dec
shlb
sbbb
call
movsb
adc
nop
pusha
mov
adc
nop
dec
inc
pop
cltd
ljmp
cltd
rclb
lcall
add
nop
or
jmp
outsb
add
popa
adc
push
jo
sbb
inc
sub
rclb
and
pushf
cmpsb
faddl
xchg
mov
add
fbld
inc
lret
addl
mov
add
fistpl
push
push
push
out
xor
xchg
test
jne
mov
sbb
mov
sbb
pop
pusha
dec
add
movsb
mov
rolb
jbe
cs
pop
jns
in
movb
mov
mulb
xor
cwtl
pop
fs
or
sbbb
filds
lock
test
rclb
hlt
jbe
mov
mov
cwtl
lret
hlt
into
or
test
movsl
in
clc
faddl
push
inc
mov
ss
outsb
adc
xchg
push
orl
jp
jbe
cli
pushl
paddd
mov
repnz
popf
cmp
mov
cmpsl
cmp
imul
xchg
pop
or
loope,pn
fnstenv
add
mov
lods
les
inc
mov
fidivl
orl
shlb
mov
loop
dec
mov
add
add
push
inc
or
sbb
test
dec
push
xchg
mov
fsubrp
mov
ss
or
mov
mov
adc
adc
jbe
add
nop
lret
or
xchg
sbb
dec
mov
pushf
sbb
adc
adc
pop
or
movsl
add
or
mov
ss
xor
pushf
push
popf
add
shl
and
dec
inc
sbb
mov
cmp
and
sbb
adc
mov
xorb
adc
ror
xor
pushf
pushf
call
adc
mov
add
add
xchg
test
insb
push
testb
loopne
cmp
inc
and
cmp
dec
dec
cltd
subb
test
pop
mov
inc
add
xor
mov
xchg
inc
and
in
out
dec
sub
cwtl
stos
xchg
xor
popa
bound
sbb
ret
xor
dec
bound
movlps
pop
inc
je
pusha
mov
fdivs
pusha
sub
pop
aam
mov
push
lret
sub
adc
rclb
push
pushf
ret
jae
cld
mov
mov
adc
and
mov
and
cmpsb
xchg
or
testb
add
aam
dec
push
and
add
xor
or
lret
adc
scas
cwtl
fs
jp
cmp
xchg
dec
inc
cmp
sahf
cmp
int3
out
sub
add
and
cs
sub
mov
andb
add
fimull
jo
stos
sarb
fsubrl
leave
push
sub
sub
push
add
add
jp
mov
ficompl
add
out
out
sbb
xchg
cmp
sbb
push
mov
ds
mov
adc
inc
inc
inc
test
dec
test
xchg
dec
cwtl
or
cmc
pushf
inc
test
dec
sbb
pop
outsb
mov
add
pop
mov
nop
ljmp
fs
or
add
sub
inc
ret
push
sbb
leave
push
push
es
stos
mov
lret
inc
mov
adc
inc
xor
xchg
sub
jp
push
push
dec
scas
pop
pop
cmc
mov
jnp
mov
add
aaa
clc
pop
add
xor
popa
pop
popa
lods
mov
and
push
inc
pusha
movb
cmc
or
xor
adc
sub
aaa
push
or
xor
lahf
sub
aam
mov
lret
shll
fdiv
adc
popa
xchg
cli
mov
xor
aad
dec
xor
sbb
or
and
test
addr16
popa
xchg
xor
mov
sub
mov
sbb
push
loopne
mov
adc
mov
or
lock
mov
sbb
xor
adc
es
sahf
icebp
cmp
mov
mov
xor
fwait
or
js
jecxz
call
dec
cs
movsb
in
add
test
mov
inc
adc
xor
test
xchg
add
pusha
cltd
in
movsb
adc
das
loope
outsb
aam
push
mov
pop
inc
mov
rcr
stos
rolb
add
push
pusha
mov
add
adc
mov
lret
xchg
xor
insb
jbe
mov
mov
bound
add
or
rolb
adc
pop
test
mov
js
adc
push
mov
add
adc
mov
cwtl
ss
ret
xchg
inc
sub
add
xor
arpl
or
push
testl
inc
addl
add
pusha
mov
shll
xor
or
dec
pusha
sub
fimuls
int
mov
les
fisubrs
addl
xchg
inc
sub
mov
sbb
inc
add
inc
pop
ljmp
fcmovbe
dec
in
inc
sub
fcoml
in
mov
cltd
xchg
subb
add
and
es
test
es
sub
das
sub
push
ret
cmp
pop
xor
push
and
pusha
adc
add
lretw
dec
or
push
in
jnp
pop
inc
mov
jecxz
enter
loop
cltd
sbb
cmpsb
and
sub
sbb
and
xor
pop
mov
inc
cmp
and
adc
in
inc
push
mov
int3
repnz
orb
mov
mov
sub
into
lcall
dec
mov
rorb
rorl
sbb
or
out
or
shlb
lret
bound
mov
imul
or
rcll
push
push
pop
js
sub
fidivrl
sub
inc
cwtl
shlb
movsb
les
or
sbb
xchg
stos
aad
mov
mov
adcb
inc
ljmp
dec
movb
adc
inc
push
xor
sub
js
push
inc
mov
xor
xor
js
sarb
xor
lret
sub
push
dec
sub
cwtl
mov
push
and
outsl
pop
or
insb
cmp
fmul
add
out
int3
hlt
cmpsb
call
cwtl
push
outsb
sbb
rorl
loop
sbb
cmp
adc
pop
shll
jo
fcoms
adc
and
xorb
sahf
sub
pusha
sbb
sbb
aam
stos
xorl
adc
mov
lcall
jo
sub
bound
xchg
loop
adc
push
leave
adc
dec
sub
adcb
cmp
adc
inc
add
ret
add
add
mov
in
pop
andb
ficompl
mov
and
sbb
lret
push
cwtl
ret
bound
cmp
imul
data16
ror
lods
xchg
in
xchg
mov
add
mov
or
mov
mov
adc
mov
xor
test
leave
sahf
mov
call
xor
adc
xchg
decb
dec
push
sbb
clc
inc
xor
pop
mov
adc
ret
mov
jns
or
xchg
sbb
push
movsl
and
add
gs
dec
adc
xchg
pusha
or
pop
hlt
push
add
and
mov
add
mov
test
and
push
xchg
push
xchg
dec
jbe
jne
test
push
dec
add
fdivs
mov
pop
xor
mov
adc
shr
xor
dec
and
es
mov
push
mov
jl,pt
push
pop
mov
stos
aam
xchg
loopne
loop
insl
or
add
fdivs
ret
rol
or
dec
inc
lock
cmp
sahf
test
aam
pop
dec
cmp
lcall
cmpb
cmp
into
cmp
add
or
or
shll
out
hlt
mov
or
fimull
push
popa
push
fs
add
nop
pusha
jp
mov
mov
aam
mov
popl
xor
ficoms
call
sbb
xchg
adc
sbb
pop
adcb
push
and
mov
mov
jl
add
adc
push
xor
cs
and
jp
mov
inc
shrb
xchg
ljmp
mov
adc
lock
add
pop
jne
in
add
inc
jb
xchg
pop
aad
cmpb
scas
pop
sbb
jp
jne
xchg
fs
or
xor
add
push
sbb
fcmovbe
in
adc
fidivrs
mov
addl
dec
inc
push
add
xchg
test
cwtl
movsb
xor
inc
or
and
ljmp
data16
mov
mov
test
push
mov
sub
sbb
adc
dec
xchg
fdivl
adc
sbb
cli
pusha
add
sbb
add
pusha
cmpsb
cs
jge
es
in
dec
xor
cmpsb
bound
mov
cwtl
hlt
sahf
dec
sub
add
rcrb
add
idiv
rclb
xchg
mov
cwtl
and
rol
jo
inc
loop
inc
push
add
pop
dec
sbb
pusha
mov
xor
mov
mov
add
cmc
sahf
test
adc
push
xor
outsb
repnz
jb
pushf
pop
test
and
loop
shlb
lret
lock
inc
dec
aam
mov
adc
ds
cmc
sub
xorl
or
cli
or
and
rolb
dec
fdivr
aad
dec
je
lds
push
adc
pop
rorb
nop
cmp
ss
outsb
push
cmp
movsb
scas
pop
jle
xor
pop
or
push
outsb
mov
cmp
inc
hlt
push
add
sub
dec
pushf
pop
push
mov
pop
inc
pop
cmpl
add
mov
fisubs
xor
sub
xchg
addb
out
and
cmpsl
and
jbe
pusha
sbb
and
mov
int3
inc
sbb
dec
jo
and
adc
push
ret
movsl
xor
cli
pop
loop
jb
sub
mov
xor
xor
aam
inc
cmpsb
aad
push
or
roll
jb
mov
stos
sbb
adc
sbb
inc
inc
fcom
movsb
mov
in
or
and
loopne
aam
or
sub
rorb
push
push
adc
xchg
test
je
xchg
push
and
jne
pop
mov
rolb
shrb
fs
cmp
data16
and
or
in
adc
and
lret
and
push
adc
lock
xchg
test
dec
pop
xchg
cmpsb
pop
mov
adc
inc
push
lcall
nop
mov
inc
sbb
rolb
outsb
enter
loopne
cmp
test
arpl
xor
dec
dec
cmp
hlt
rcrb
pop
divb
mov
jo
inc
aam
push
fsubp
lock
dec
adc
push
xor
and
pusha
insb
inc
enter
mov
add
adc
inc
pop
jo
or
lcall
push
add
lock
subb
adc
or
in
stc
dec
mov
fsubrl
inc
or
and
jo
fisubs
loope
jne
fsubp
push
push
cmp
sarb
sbb
add
in
mov
inc
loopne
imull
adc
das
sub
in
mov
sbb
adc
movsb
out
negl
add
rol
sub
mov
dec
mov
mov
ja
lcall
adc
push
sub
dec
sub
xchg
out
sub
xchg
pop
scas
jge
popf
jb
movsb
pop
lcall
loopne
push
insl
and
int3
push
movups
aam
sub
pop
fwait
pop
outsl
fs
mov
orb
sub
pusha
cmp
dec
push
inc
push
addl
xchg
test
insl
sub
push
and
xor
jmp
sbb
sbb
xor
cwtl
cmp
aas
repnz
and
js
xor
sub
jge
push
test
rclb
cmpsb
xchg
dec
pop
xchg
jb
dec
push
andb
or
push
dec
jo
dec
aad
add
loopne
lea
add
xchg
test
addb
push
and
and
cmp
shlb
insb
xchg
sub
mov
nop
pop
jb
push
orb
sbb
inc
dec
dec
cmp
sbb
repnz
arpl
mov
sbb
and
dec
adc
lret
and
fidivrs
gs
notb
xchg
in
and
pop
test
test
pusha
xchg
add
jecxz
int3
xor
and
loop
test
and
in
nop
sbb
or
test
dec
adc
xchg
insb
inc
mov
adc
inc
roll
sub
xchg
xchg
je
incl
cwtl
push
mov
adc
pmaxub
mov
daa
lods
mov
mov
or
sub
repnz
imul
sbb
add
lret
xchg
add
enter
data16
cld
loop
movsb
or
test
fmuls
cs
or
inc
dec
pop
inc
push
repnz
mov
pusha
sub
adc
pusha
shrb
mov
push
xchg
rcr
sub
cmpb
adc
jne
enter
adc
inc
dec
insl
or
or
fsubrs
into
call
scas
xor
mov
icebp
test
es
jp
xor
fs
nop
adc
add
in
cltd
cmp
out
loop
test
test
sub
aaa
dec
ss
insb
or
inc
push
xor
mov
push
sub
dec
push
xchg
aad
sub
jb
jb
xchg
add
ret
les
out
test
dec
jle
lret
cmpb
mov
inc
sub
je
inc
xchg
and
dec
in
xchg
add
enter
insl
sub
cmpsb
lcall
in
or
mov
fildll
add
inc
jle
adc
sub
js
fsubrl
push
lret
dec
inc
pop
xchg
or
xchg
sub
xchg
and
es
sahf
pop
adc
mov
push
and
xchg
mov
pusha
fidivrl
in
inc
and
addl
dec
cmp
or
add
int3
je
sbb
sbb
push
xchg
xor
es
sbb
lods
pop
push
inc
lods
fisttps
mov
rcll
inc
js
por
lret
inc
add
push
clc
push
mov
push
ss
sub
call
insl
dec
xor
or
and
mov
sub
ret
rcll
and
mov
pop
ret
xor
shlb
enter
adc
push
adc
inc
push
fdivrs
fildll
dec
pushl
sbb
xchg
jae
ret
sub
leave
ret
mov
and
out
xor
add
out
or
xor
dec
test
fs
mov
jo
mov
inc
dec
jb
in
inc
es
dec
in
inc
mov
dec
ss
and
push
mov
adc
sub
xchg
movsl
rclb
fdivs
mov
or
push
dec
adc
addb
cmp
push
int3
xor
mov
xor
mov
sub
push
xchg
or
cld
cwtl
imul
inc
add
ret
mov
aad
fs
cmp
push
inc
xchg
in
les
push
sub
in
fs
inc
mov
jo
add
xchg
test
xchg
add
cs
jne
int3
pusha
or
call
enter
adc
out
xchg
mov
loop
xchg
int3
inc
nop
dec
mov
rcrb
call
mov
inc
inc
sub
adc
sbb
lods
addl
or
rcl
addb
lock
movsl
xchg
cs
in
xor
loop
adc
add
cmp
sub
adc
push
cmp
push
and
jbe
push
mov
adc
mov
outsb
jl
inc
outsb
or
mov
popa
adc
add
sub
ljmp
add
push
mov
scas
js
xchg
adcl
sbb
dec
mov
es
and
inc
shl
sub
cmp
xor
dec
das
movsb
rcr
ret
xchg
fldt
dec
addr16
xchg
mov
or
cmc
inc
xor
adc
pusha
cmp
mov
int3
mov
imul
lcall
and
jmp
xchg
or
and
jo
jb
ret
and
loop
mov
add
lock
mov
fisubrs
jne
sub
pop
mov
cmp
xor
jo
sub
cwtl
push
nop
push
jae
pop
inc
jle
inc
pop
and
push
push
nop
cmp
sub
dec
push
lret
aam
je
and
add
pop
xchg
shll
xchg
mov
mov
je
inc
dec
nop
inc
insl
rolb
fs
add
fs
pusha
push
inc
popa
xor
sbb
jecxz
adc
out
cmc
shlb
addb
orb
pusha
imul
xchg
xchg
xor
sub
hlt
or
imul
xchg
push
adc
pop
and
inc
or
jecxz
jg
push
push
lods
ds
xor
xor
inc
dec
lret
sub
or
call
inc
mov
inc
mov
push
xor
test
scas
push
xchg
cmpsb
cltd
sub
adc
dec
jle
data16
dec
out
sub
ss
push
adc
mov
rolb
insb
cmpsb
insb
bound
pusha
push
fdivrp
nop
sbb
sbb
inc
sarb
addl
scas
ljmp
clc
movsb
pop
fadd
push
sbb
pushf
add
mov
hlt
pusha
xor
pusha
sahf
push
clc
xchg
in
add
sub
pusha
xor
sarb
popa
cs
callw
dec
push
sbb
xchg
adc
cmpb
movsb
addb
push
dec
popa
cwtl
add
xchg
xor
dec
push
add
jbe
mov
xchg
int3
loopne
dec
sahf
pop
cld
mov
sub
ret
or
nop
cs
es
sbb
nop
mov
incb
lret
and
jo
push
mov
int3
in
mov
fists
adc
and
in
fcoml
add
aam
adc
jle
jle
sahf
push
fmull
and
add
test
xorb
inc
mov
push
outsb
ret
adc
cs
mov
adc
inc
idivb
xchg
or
pop
icebp
mov
inc
mulb
sbb
je
push
add
mov
pop
lock
scas
shlb
or
in
inc
cld
or
inc
jb
push
dec
and
adc
xchg
shrb
cltd
adc
mov
outsb
and
add
mov
inc
lea
dec
outsb
enter
fs
jo
ss
or
ret
or
in
lret
and
in
push
push
mov
stos
cwtl
pusha
dec
jle
mov
sbb
lock
andl
push
cwtl
inc
ficoml
les
hlt
ljmp
mov
or
loopne
jbe
and
add
lret
cltd
loopne
js
data16
cmp
pusha
cmpb
rolb
enter
dec
scas
es
cltd
or
push
mov
mov
addb
mov
pop
test
add
sbb
mov
xor
jne
and
insl
adc
push
xchg
mov
subl
popf
pushf
xor
mov
bound
push
or
lea
sub
dec
sub
int3
add
xchg
and
mov
and
ret
cmp
filds
pop
mov
and
mov
mov
add
adc
pop
sub
cld
in
adc
pop
faddl
xor
stos
mov
aam
gs
aam
jp
jbe
xor
xchg
ret
and
mov
sbb
or
adc
add
xchg
cwtl
mov
or
push
mov
sub
mov
int3
lock
imul
les
sahf
dec
sub
and
add
mov
inc
mov
push
mov
adc
xorl
aad
adc
leave
adc
inc
cmp
cmp
push
data16
sbb
inc
pop
enter
adc
or
int3
pushf
xchg
pop
jp
out
mov
test
in
inc
inc
cwtl
mov
leave
dec
cwtl
scas
jbe
mov
pusha
pushf
add
or
outsb
cltd
add
pushf
cmpsb
add
gs
repnz
adc
push
jae
mov
fiaddl
jbe
sub
movsb
je
loopne
add
das
push
push
inc
xchg
mov
pop
push
es
and
fdivs
fadd
sbb
fs
lret
add
faddl
adc
mov
sub
aad
cltd
cmp
inc
push
fisubrl
cmp
xchg
cltd
adc
add
or
sbb
or
test
enter
mov
or
mov
pop
ss
pop
mov
addb
ret
imul
test
cmp
add
and
lods
jae
mov
test
loope
aam
cmp
shrb
add
cli
pop
es
insl
sub
sub
sub
pushf
xchg
xor
sub
cmc
and
es
push
addl
cmp
pop
rolb
ljmp
or
cwtl
pop
ljmp
pop
bound
adc
push
inc
ror
div
test
add
pop
mov
imul
push
mov
test
xchg
bound
add
xor
ss
test
push
or
andl
add
and
push
pop
test
ret
mov
into
loop
push
sub
dec
mov
xor
nop
push
pop
mov
and
mov
test
mov
add
cmp
orb
jne
xchg
mov
gs
sub
sbb
ret
shl
mov
push
cs
add
pop
xchg
add
add
sbb
mov
int
and
sbb
inc
loope
jmp
push
adcb
dec
mov
sbb
or
aaa
push
xchg
inc
or
pushf
gs
jmp
ds
out
cs
xchg
subb
xor
loop
aad
cmp
inc
ret
inc
std
pop
test
jp
nop
push
orb
ficomps
mov
or
mov
gs
or
js
or
push
lcall
push
stos
clc
gs
dec
push
dec
popa
or
cmpsb
cmp
fcoml
xchg
subl
cs
sar
cmp
ficomps
pusha
adc
push
push
nop
lret
jb
add
mov
call
cmc
sbb
pop
add
sbb
push
clc
and
movsb
and
adc
bound
add
pop
mov
inc
in
and
rorb
adc
mov
cs
or
loop
push
scas
test
cwtl
xchg
xor
sub
sbb
add
dec
je
cmpsl
test
adc
and
test
xchg
and
bound
xchg
mov
mov
mov
sub
push
add
inc
mov
sub
pusha
mov
repnz
fisubl
rcll
inc
add
dec
dec
or
movsl
in
mov
adc
jb
and
xchg
lods
sub
sub
add
adc
subb
int3
dec
test
and
inc
dec
sub
sbb
cli
push
or
dec
sub
push
push
add
nop
mov
lcall
or
test
les
mov
shlb
inc
sub
cmp
test
andb
dec
or
shlb
cmpsb
add
push
test
xchg
jo
test
xor
andb
popa
xchg
imul
pop
es
inc
or
aam
mov
add
pushf
hlt
aam
push
mov
or
push
movsb
push
add
cwtl
dec
je
les
test
xchg
clc
test
push
movsb
pop
mov
pop
dec
adc
xchg
loop
xchg
or
xor
pushf
sbb
sbb
adc
cld
clc
loope
popa
jo
mov
xchg
js
push
int3
push
sbbl
lock
and
and
xor
and
xchg
cmp
adc
mov
arpl
cmp
orb
xor
sbb
push
dec
lret
pop
mov
adc
adc
mov
pusha
stos
mov
xor
add
mov
sub
in
inc
mov
cwtl
mov
test
xchg
xchg
mov
or
xor
push
dec
push
rorb
xor
cmc
mov
inc
orb
into
mov
cli
sarb
clc
sub
and
add
cmpsl
in
inc
and
xchg
mov
cmp
das
test
and
add
push
push
pop
imul
pop
cmc
mov
mov
jbe
loop
testl
clc
push
jne
sbb
rcrb
data16
daa
or
sub
mov
pop
bnd
andb
mov
adcb
loopne
push
lock
out
in
add
test
bound
lea
mov
icebp
pusha
jb
lock
imul
cli
cli
loopne
mov
xchg
cmp
mov
lret
inc
shl
or
enter
mov
push
mov
mov
xchg
pop
push
lock
add
popf
push
adc
cmp
mov
js
dec
push
and
push
xor
ret
sub
xor
int3
inc
or
imul
fs
jle
sub
lea
bound
sub
test
xor
mov
lret
xchg
sub
fs
cmc
lret
dec
mov
add
mov
cmp
fs
xchg
cmpsb
sbb
push
shll
xchg
cmp
mov
or
adc
jbe
repnz
jmp
outsl
mov
inc
pop
in
xor
xchg
pop
ss
push
int3
sbb
aam
xor
mov
xchg
orl
inc
cld
add
dec
and
cli
add
or
sahf
nop
cwtl
jp
movsb
test
and
cltd
cmp
stos
sub
xchg
popf
jo
jne
fdiv
dec
test
mov
cmp
pushf
push
and
xor
pusha
rcl
cltd
push
test
ror
push
sahf
xchg
push
pop
or
sahf
movsl
cmpsb
out
mov
pop
mov
mov
cltd
mov
sub
daa
shrl
mov
sub
add
or
test
inc
jmp
call
sub
sub
sbb
jne
fs
ss
and
into
insb
add
loop
pusha
cmp
cmp
je
push
mov
add
mov
jge
mov
es
movsl
xchg
sahf
xorb
fidivs
dec
mov
push
into
xchg
loop
cli
pop
mov
adc
push
jb
jo
mov
cmp
pop
rcll
aam
mov
shr
sbb
fs
inc
adc
fcomps
mov
xchg
stos
hlt
push
insb
sub
sbb
sub
outsb
or
add
mov
in
and
and
sub
push
cwtl
xor
pop
mov
mov
adc
mov
cltd
cmp
push
cmpw
popa
fnsave
push
lret
sub
inc
stos
loop
push
stos
add
xor
mov
and
cwtl
adc
xchg
xchg
fs
sbb
clc
aas
jb
in
je
sub
in
data16
loope
ret
mov
push
xorb
test
lock
mov
popa
mov
lea
lcall
shlb
adc
adc
add
fidivs
xor
mov
cs
lret
push
push
out
push
mov
add
fiadds
ds
xchg
in
mov
xchg
push
sbb
and
xchg
xor
push
addr16
add
out
inc
xchg
or
and
lock
push
and
add
test
sbb
sub
mov
push
sbb
adc
cmp
cmp
lret
or
gs
fiaddl
rcrl
cmp
adc
in
pusha
or
rolb
popf
mov
test
sarb
shlb
pop
ljmp
mov
mov
jle
fdivrs
or
int3
subl
inc
add
sub
test
push
mov
inc
add
movsb
mov
pop
mov
es
adc
mov
scas
add
jo
mov
cmp
ror
imul
xor
loopne
add
sbb
mov
shlb
mov
inc
shlb
push
push
dec
loop
jl
dec
jp
push
mov
js
cmp
adc
xchg
or
imul
je
es
mov
dec
cmp
insb
xchg
xor
xor
xchg
dec
inc
push
push
add
push
ficoms
mov
inc
sub
pop
add
loop
adc
xchg
cwtl
jb
sbb
cmp
mov
fsubs
test
inc
out
lods
nop
ret
xchg
adc
sbb
lods
add
jb
orb
mov
mov
add
pushf
daa
jnp
adc
jle
add
pop
mov
add
push
add
add
inc
fisubl
sbb
lret
and
int3
test
shlb
aaa
orl
dec
add
stos
mov
ret
or
adc
adc
mov
adc
mov
push
pushf
cli
mov
movsb
scas
or
cmp
push
or
ror
fs
cmp
clc
addb
mov
cmpl
je
jp
rclb
data16
xchg
rcll
leave
sub
xor
mov
jb,pt
inc
or
pop
into
sub
mov
mov
jle
adc
jne
sahf
cmpl
les
cld
cltd
dec
add
sbb
fs
xchg
aad
or
mov
test
rorl
int3
push
add
inc
test
mov
dec
es
jne
movsb
inc
dec
inc
add
mov
jno
and
push
or
fdivrs
add
push
cmp
mov
mov
loope
test
dec
scas
icebp
movsb
out
xchg
jb
sbb
jmp
dec
add
fcmovu
nop
push
leave
xchg
cmp
xchg
fmul
mov
xor
xor
ret
jbe
add
call
cmpb
sub
mov
xchg
pushf
mov
addb
cmp
xchg
addps
loop
test
jnp
adc
movsb
nop
xchg
in
bound
push
inc
adc
pusha
add
jo
mov
sbb
and
pop
loope
pop
jo
insl
push
es
aad
rorb
inc
dec
xchg
jbe
mov
and
movsb
push
add
into
jo
cs
mov
mov
add
inc
data16
sub
ret
test
insb
cli
aam
pop
add
into
test
add
or
mov
cmp
cs
sarl
subb
xchg
add
sub
enter
jp,pn
dec
lret
subb
and
add
test
cltd
loopne
les
or
xorl
cmp
cltd
mov
cltd
sbb
and
pop
lods
mov
arpl
add
stos
mov
sbb
push
add
addl
test
clc
push
sbb
sub
les
and
sbb
or
jo
js
push
hlt
xor
fs
adc
push
add
loopne
adc
test
pop
push
jle
test
pop
int
addb
jmp
sub
push
push
dec
push
add
mov
inc
sub
sbb
adc
sbbb
enter
push
dec
shll
or
test
sub
lret
dec
pusha
inc
and
lcall
xchg
lods
xchg
dec
adc
int3
mov
or
adc
adc
sbb
and
or
adc
divb
inc
popa
clc
jb
mov
push
bound
in
adc
cmp
sub
imul
or
mov
fmull
inc
rclb
shrb
lret
mov
push
bound
inc
or
pusha
test
or
mov
dec
lods
dec
xor
pop
xchg
rclb
lcall
in
scas
clc
xchg
adc
add
sub
add
xor
pusha
inc
ret
sub
push
lcall
adcl
dec
and
pusha
xor
ds
test
or
and
adc
mov
adc
inc
loopne
dec
rcrb
cmp
mov
jl
int3
or
push
test
adc
cmp
ret
les
jns
or
cmp
aas
fsqrt
fwait
sub
ret
mov
push
add
fsubrs
loopne
sbb
lea
cld
inc
sbb
pop
aam
push
push
mov
ljmp
test
jo
and
icebp
fs
mov
fbstp
roll
cmp
push
push
push
adc
je
insb
fs
jecxz
inc
pop
cltd
or
inc
cmpsl
les
aam
and
xor
xchg
xchg
add
rcrl
adcb
dec
cmp
push
add
andb
and
ss
andl
ret
xchg
jo
push
pop
mov
add
inc
jns
cmpsl
or
and
add
or
aad
and
enter
xor
jl
xor
xor
es
enter
dec
fcoml
sbbb
in
mov
push
add
mov
push
mov
outsl
fmuls
inc
fisubrl
int3
outsb
out
mov
leave
sub
cmp
mov
jo
mov
push
cwtl
push
jo
pusha
faddl
push
fisubrl
int3
sbb
xor
loop
enter
sub
ret
ljmp
movsw
hlt
xor
xor
mov
sbb
test
test
bound
or
ficomps
dec
or
add
cli
pop
sbb
subb
xchg
dec
pop
mov
mov
and
pop
push
adc
jp
fs
rolb
sarb
fs
inc
mov
inc
je
aad
sub
push
inc
add
cmpsb
dec
enter
dec
add
jp
ds
xchg
adc
push
and
loop
and
pop
mov
pop
add
adcl
xchg
mov
out
in
ret
loopne
int3
loope
add
add
clc
push
sub
add
fmulp
pusha
and
and
int3
bound
call
andl
pop
push
dec
mov
mov
add
cmp
pushf
aam
pop
or
je
push
push
insl
pop
imul
push
add
movsl
in
mov
sub
lcall
out
imul
xchg
pop
xchg
xor
orb
and
enter
xlat
pop
add
jb
scas
adc
pop
xor
ret
add
add
adc
inc
adc
mov
lret
dec
outsb
lret
lcall
mov
sbb
or
clc
sbb
add
add
mov
mov
dec
lcall
add
inc
xor
adc
fcmovbe
or
es
lret
popa
lods
subb
in
push
xchg
nop
nop
lret
mov
adc
fmuls
xor
nop
pushf
insb
jp
jg
or
mov
in
cmp
mov
cmc
ret
cltd
push
dec
push
cmp
mov
lods
insb
inc
data16
rcrb
adc
sbb
cld
orl
xor
aam
subb
push
mov
sbb
dec
es
mov
and
xchg
add
add
shrb
push
nop
xor
or
push
es
dec
inc
dec
xchg
popa
and
dec
push
loopne,pn
cmp
rorb
push
inc
cmpb
sbb
loopne
inc
fs
inc
ficoms
push
sbb
or
cmp
ret
push
lret
fsubl
xor
fcompl
push
js
push
xchg
lret
or
or
and
pushf
cmp
sbb
cmc
sub
push
dec
insb
decb
jbe
push
rcrb
sub
ljmp
sbb
sbb
out
and
lods
inc
filds
and
out
add
add
call
in
mov
loop
cmp
and
clc
add
push
or
add
addl
or
dec
mov
add
inc
xchg
je
push
jae
add
jae
or
loop
cmc
ficomps
test
mov
jo
jp
movsb
and
aad
cltd
or
pop
sahf
dec
mov
int3
adc
adc
pushf
mov
adc
or
mov
enter
mov
stos
int3
add
scas
cld
bound
pushf
xchg
and
adc
ret
dec
cmp
and
adc
dec
xor
mov
scas
je
sub
fisubs
adcl
push
arpl
lret
jl
mov
loopne
int3
xchg
sarb
mov
cs
sub
or
clc
js
and
dec
sahf
adc
or
push
cmp
outsl
movsb
mov
lcall
and
inc
shlb
aaa
add
adc
ss
pop
mov
mov
out
pusha
neg
push
addl
add
js
sbb
xor
dec
inc
inc
insl
or
push
pop
pop
add
shrb
inc
or
mov
daa
mov
xchg
ret
cmpsb
orb
pushf
cld
mov
movsb
cmp
sub
mov
insb
data16
inc
push
or
mov
inc
data16
cwtl
mov
out
roll
add
xchg
xchg
push
stos
mov
push
sahf
adc
push
push
sbb
daa
in
cmp
add
ret
addb
inc
cmp
arpl
jecxz
mov
pusha
or
outsl
subl
inc
test
repnz
mov
push
int
xchg
test
lcall
dec
sahf
mov
mov
and
cwtl
sub
sub
or
ds
adc
loop
adc
or
mov
cmp
sub
sbb
add
enter
xor
or
pop
mov
or
and
fs
pop
add
loope
insb
xchg
int3
lret
and
mov
sbb
dec
push
cltd
and
adc
rclb
mov
dec
ret
mov
xchg
call
es
add
mov
xchg
sbb
pop
lret
je
fwait
inc
mov
lods
out
mov
ret
inc
inc
mov
sahf
mov
je
xchg
push
rorl
rolb
mov
in
je
pop
es
xor
stos
and
sarl
fdivl
xchg
mov
je
jle
mov
ss
test
ret
loope
insb
pushf
lods
push
cmpsb
jbe
test
adc
or
shlb
rclb
call
inc
dec
mov
ret
test
addb
jle
repnz
scas
aam
in
pop
push
or
in
dec
ret
add
mov
loop
xchg
pusha
and
lcall
jno
in
push
mov
xchg
scas
jo
sub
es
mov
cli
pop
nop
rcrb
shlb
pop
or
gs
xor
hlt
dec
mov
push
rolb
sbb
gs
jl
sub
inc
or
fiadds
pop
sub
popf
scas
test
xor
mov
cld
jp
data16
cmp
push
add
rcrb
dec
mov
stos
xor
or
inc
inc
insl
test
orb
adc
add
xchg
data16
add
fs
imulb
in
xchg
add
push
rcrb
xorb
xchg
xorl
pop
sbb
and
inc
push
mov
push
addl
xor
or
sbb
stos
inc
xchg
xchg
loope
pop
adc
bound
cli
sahf
lods
inc
xor
mov
push
je
cmp
ret
pop
shlb
mov
dec
cs
xor
cmpb
fs
sbbb
xchg
sahf
add
inc
and
cs
jo
pusha
ret
and
push
pushl
inc
adc
adc
add
ficoml
push
inc
add
push
test
xor
or
cltd
jmp
push
mov
mov
rorl
dec
sub
inc
push
gs
scas
sub
call
xchg
lcall
add
fistl
or
sarb
push
mov
cmp
push
mov
xor
cmp
push
push
push
mov
inc
call
inc
test
rolb
push
xchg
sarb
push
mov
mov
or
add
and
lret
loope
mov
mov
xchg
ss
xor
shrb
es
test
dec
xchg
mov
nop
ds
sbb
inc
xor
mov
ret
push
push
ret
or
push
test
push
shrl
stos
mov
test
jl
mov
cwtl
or
sub
push
cltd
dec
sub
adc
ret
push
test
roll
xchg
push
cmp
test
jp
pop
dec
xchg
and
adc
sub
jo
inc
pop
and
jo
pop
shlb
add
loope
mov
dec
rcrb
add
loopne
in
popf
add
ret
mov
inc
popa
add
pop
fs
dec
adc
cli
xor
xchg
test
adcb
jp
in
scas
cmp
inc
pop
loopne
inc
or
insl
mov
adc
jae
mov
pop
inc
push
fsub
xchg
mov
inc
mov
inc
imul
add
mov
or
or
arpl
fadd
cwtl
and
xchg
jbe
mov
sub
xchg
subl
sbb
andb
pop
add
xor
push
addb
insl
cli
push
cwtl
mov
xor
push
mov
inc
xor
adc
and
test
add
adc
add
jle
cltd
andb
mov
adc
push
fs
xchg
jle
or
cs
out
and
pusha
inc
mov
mov
add
add
xor
add
jns
js
stos
dec
test
pop
mov
add
xchg
into
push
popa
or
xorb
sub
lcall
sahf
movsl
dec
or
cltd
jp
sbb
push
mov
insl
in
es
cmp
lock
lcall
mov
sub
push
inc
sti
shr
into
jo
ret
xor
test
pop
mov
repnz
mov
pop
and
leave
ret
sub
adc
dec
cmp
js
or
call
mov
add
cmc
test
or
fidivl
call
jge
lock
movsb
call
push
and
mov
sub
sub
pop
sbb
mov
and
pop
push
mov
jp
add
and
adc
add
pop
push
xchg
mov
dec
outsb
cmp
pushf
pop
or
jne
sbb
push
lcall
repnz
mov
cmp
xchg
or
xor
or
scas
or
or
and
add
loop
sbb
adcb
mov
pop
and
jns
pop
cwtl
ret
aam
jl
mov
divb
aam
xor
mov
push
sub
push
call
mov
add
push
leave
fiaddl
xchg
test
orb
dec
loopne
shrb
mov
push
ficoml
or
add
pop
xchg
adc
cmp
enter
gs
mov
gs
xor
xchg
adc
adc
push
sub
or
or
sahf
or
fbld
sub
mov
or
adc
and
cmp
xchg
xchg
cmp
jl
jo
push
xchg
nop
inc
or
jb
imul
enter
inc
dec
jb
sub
xor
inc
cmpsb
xor
inc
dec
scas
push
mov
call
and
je
dec
sbb
mov
int3
xor
or
inc
lods
xor
mov
movsl
cmp
loop
mov
xor
cwtl
mov
imul
cmp
mov
sahf
jbe
inc
sbb
cmp
and
push
gs
add
addl
imulb
or
or
call
pop
incb
mov
jle
add
sbb
add
loop
test
inc
jbe
and
loop
outsb
cmp
add
dec
sbb
add
rcrb
push
cltd
test
mov
or
js
push
sahf
jbe
inc
enter
es
pop
push
loop
push
inc
mov
mov
nop
nop
sbb
xchg
aam
push
mov
repnz
add
inc
or
or
mov
inc
sbb
push
lock
xchg
and
add
xchg
inc
jbe
jle
add
sbb
sub
inc
dec
insl
mov
dec
or
xor
xchg
and
or
scas
pop
sub
cmp
fmul
add
cmpsb
jo
push
xchg
inc
les
test
jl
xor
or
jb
sbb
lods
fmul
or
insb
xchg
and
jp
ljmp
int3
sbb
and
mov
js
adc
mov
shll
and
lcall
pusha
mov
xchg
in
scas
inc
daa
or
mov
mov
cmp
andb
push
mov
adcb
sbb
lret
mov
es
adc
sub
nop
mov
inc
and
insb
push
push
sbbb
inc
jnp
mov
xorb
jb
insl
cld
or
mulb
dec
and
scas
jne
sub
lret
push
mov
mov
addb
xor
or
xchg
sbb
dec
sbb
dec
push
repnz
call
push
sbb
ret
mov
rclb
sbb
and
imul
push
xchg
xor
xor
mov
andb
pop
sar
xchg
add
jb
es
pusha
adc
pusha
mov
subb
int3
xchg
xchg
sbb
xor
cmp
add
cmp
xor
pop
sbb
es
les
lcall
push
inc
mov
jle
cmpsb
pushf
mov
aad
test
mov
pusha
loopne
mov
xor
ror
or
inc
and
repnz
rcrb
cltd
fs
pop
pop
xchg
es
jne
mov
pop
mov
jne
push
enter
xchg
or
pop
mov
jns
or
mov
inc
mov
push
dec
fsubr
rorb
push
adc
rol
cmp
xor
add
pop
mov
adc
inc
xchg
loope
loopne
adc
mov
push
xchg
xchg
and
sbb
aad
sub
inc
cmp
mov
rorb
xor
xor
sbb
dec
mov
shlb
and
rcrl
mov
xchg
adc
add
pop
clc
xor
aaa
add
xor
or
or
sub
and
or
and
xor
ficoms
sbbb
outsb
data16
mov
mov
add
mov
mov
jp
cmp
mov
pop
dec
xchg
insl
and
and
pushf
push
push
sub
out
fsubs
push
add
add
ret
mov
mov
push
dec
shlb
cs
and
nop
fsub
push
cmp
sub
test
push
out
ret
cs
pop
mov
pushf
and
adc
call
dec
jle
insb
enter
pop
or
cli
mov
sub
cltd
add
pop
popa
sub
fs
jmp
sub
inc
ljmp
mov
movsb
sbb
mov
push
outsl
roll
inc
sti
and
scas
in
adc
or
jg
pop
ret
pop
lahf
cmp
cmp
aam
hlt
cmp
mov
mov
sub
and
lds
and
dec
xchg
scas
test
dec
loopne
xchg
xchg
fidivrl
push
dec
mov
jo
jb
cli
dec
sarb
sub
fsub
nop
dec
pop
and
sub
repnz
sub
dec
push
fmull
or
or
or
sub
dec
loopne
add
and
pusha
inc
loopne
ret
xor
xchg
pop
loope,pn
fdivrs
add
ret
cmp
bound
int3
hlt
mov
das
or
pushw
dec
addb
test
js
adc
cmp
mov
push
movsl
gs
sbb
sub
push
sbb
pop
adc
adc
ds
ds
jb
push
push
mov
test
outsb
sub
mov
dec
sub
outsb
sub
rorb
outsb
xchg
movsb
andps
or
cmp
test
mov
push
xchg
push
hlt
push
and
ficoms
xchg
sbb
pushf
movsb
lcall
add
fsts
fisubrs
push
scas
inc
bound
lret
mov
gs
xor
inc
mov
int3
lret
mov
scas
insb
ret
or
cwtl
scas
push
xchg
pop
dec
cli
and
xor
add
add
or
mov
xchg
push
loop
jb
push
or
sbb
orl
or
xor
xchg
adc
inc
sbb
sbb
adc
repnz
pop
mov
shlb
fimull
fcmovbe
adc
add
sarb
out
inc
pop
pusha
and
add
dec
ljmp
push
sbb
test
repnz
dec
add
fdivl
and
inc
sub
daa
aam
xchg
xchg
nop
inc
sarb
push
mov
add
cwtl
mov
push
cs
add
out
adcl
jbe
inc
popa
leave
adc
enter
icebp
add
jp
sub
fisttps
dec
mov
bound
cmp
cmp
and
mov
pop
aaa
mov
pop
shlb
mov
cltd
rolb
in
bound
jb
lea
repnz
xlat
xchg
sbb
xchg
mov
pop
xorb
and
mov
dec
push
cltd
jno
movsb
xor
and
add
rolb
int3
jns
add
data16
addb
sbb
leave
add
add
fsubs
xchg
dec
mov
push
jnp
dec
arpl
lock
ja
jg
call
inc
out
add
iret
mov
cs
fidivl
stos
sub
adcb
loopne
or
test
mov
mov
add
insb
jo
jecxz
and
or
push
ret
add
inc
pop
xchg
js
inc
mov
sbb
mov
add
sbb
dec
and
popa
mov
sahf
cmc
ss
inc
mov
xor
stos
mov
and
push
push
mov
mov
movsb
data16
adc
xor
adc
call
and
fsubl
bound
xchg
push
sbb
inc
incb
push
mov
mov
xchg
into
push
loop
adcb
inc
je
fs
test
adc
inc
cwtl
shlb
inc
sbb
or
fmull
add
jne
mov
cwtl
xorb
adc
cltd
movsl
sbb
push
ficoml
mov
adc
or
or
push
xchg
fidivs
xchg
ret
pop
fs
push
and
fsubrs
cli
inc
mov
adc
fists
ds
jl
or
or
sub
or
lock
popa
add
sub
and
pusha
xchg
or
inc
sbb
or
adc
js
test
ljmp
add
xchg
mov
decb
inc
push
add
aam
loopne
mov
cwtl
or
push
cmc
xor
es
or
dec
or
js
adc
mov
test
sbb
push
dec
xor
es
in
dec
xchg
leave
sbb
jo
or
add
dec
dec
jp
sbb
pushf
and
adc
push
add
cltd
sub
push
mov
xor
cmp
lock
or
inc
and
cs
mov
xor
hlt
mov
or
and
xchg
mov
xchg
loope
into
mov
mov
inc
sbb
in
or
test
lock
and
js
jle
add
push
dec
sarb
inc
scas
idivb
nop
adc
test
xor
cli
ds
add
sub
jle
xchg
or
je
loopne
or
add
scas
dec
xorl
or
bound
pop
add
into
adc
test
inc
and
or
sub
pusha
cmp
xor
add
inc
out
xchg
and
fs
je
scas
adc
test
ret
int3
in
xorl
adc
push
mov
test
adc
aam
add
adc
push
jo
push
add
stos
pop
dec
sub
adc
pushf
sbb
inc
jmp
mov
adcb
aam
adc
cmp
test
cs
cmc
add
mov
push
push
fnsave
jp
xor
sbb
mov
jg
mov
dec
cmpb
shrl
lret
roll
shll
dec
adc
loop
fs
sbb
cmp
sub
add
add
push
add
pop
fcomps
shlb
lcall
sbb
sahf
xchg
cli
adc
insb
cmp
xchg
orl
loope
adc
dec
aam
call
repnz
lcall
cli
sahf
push
mov
or
loopne
out
inc
or
mov
xchg
sub
mov
cwtl
xchg
mov
push
sbb
dec
inc
enter
test
gs
les
add
mov
jo
es
dec
xor
rolb
sbbb
test
addb
lret
pusha
cltd
loope
les
xchg
aam
sahf
cmp
adcb
adc
ds
fs
jbe
or
inc
mov
mov
pushf
sbb
mov
test
nop
add
cltd
mov
das
push
push
jbe
xor
movsl
and
sbb
and
daa
add
test
test
inc
add
pop
inc
and
inc
lock
mov
sub
stos
mov
add
jp
rolb
push
rolb
rclb
pop
and
jle
loop
loop
mov
push
pushf
pop
lret
mov
add
xchg
or
cmp
xchg
scas
push
fidivrs
or
call
xchg
push
and
rclb
test
inc
pop
add
add
push
add
add
enter
push
and
jp
or
push
data16
dec
mov
inc
mov
adc
sbb
sarb
dec
or
dec
xor
dec
cmp
inc
loopne
and
sbb
jp
andl
or
xor
and
mov
lods
sub
sbb
negb
xor
int3
insl
clc
stos
mov
sbb
dec
fsubl
adcb
inc
jbe
cs
in
shlb
or
dec
and
aam
push
jbe
or
out
or
add
mov
int3
and
out
ds
es
ret
or
sbb
add
and
jo
lcall
mov
and
ds
fs
lcall
ret
push
sub
pop
dec
data16
pop
and
xor
jne
push
add
cwtl
or
test
loopne
mov
rclb
cld
sarb
mov
sbb
scas
enter
cmp
pop
cs
push
les
imul
scas
adc
in
pop
mov
insl
xor
sbb
cmp
sub
and
adc
adc
sbb
je
fs
sub
xor
and
test
mov
nop
aam
nop
sbb
push
inc
mov
inc
and
mov
bound
inc
test
gs
insb
and
push
addb
es
dec
in
sbb
xchg
fs
adc
pop
push
add
enter
or
and
mov
dec
ret
lret
add
lcall
xor
and
loopne
xchg
adc
ret
sarb
and
lcall
es
lods
fcoml
jne
aam
test
sbb
add
mov
cli
pop
add
cwtl
leave
add
and
test
sbb
nop
push
xchg
call
int3
lock
sbb
pop
xchg
fadd
cmp
jo
ficoml
repnz
adc
push
pushf
cmpl
movsl
or
inc
or
or
push
xchg
or
mov
inc
add
sbb
loop
push
nop
add
mov
add
add
cmp
adc
fs
mov
pop
pop
sub
add
push
or
adc
xchg
or
mov
jl
push
pop
leave
sub
xchg
cmp
or
and
int3
lret
or
lret
push
loopne
lock
lcall
test
imul
add
cmp
jo
mov
cli
or
loop
test
hlt
push
push
addb
adc
or
data16
cs
push
xor
xchg
int3
and
outsb
add
inc
sbb
mov
push
or
adc
pop
mov
sbb
mov
push
jp
or
jle
push
lods
or
add
repnz
sub
cwtl
mov
loopne
dec
scas
cld
mov
int3
test
mov
ret
in
push
push
pop
xor
and
cmp
bt
push
imul
jo
and
scas
rolb
xchg
cmpsb
sub
xchg
fists
inc
add
pusha
inc
jbe
push
inc
or
push
jbe
mov
scas
out
les
cwtl
add
cld
popl
movsb
sbbb
cmp
int3
push
push
xchg
movsl
and
jecxz
scas
and
cmp
add
mov
cltd
mov
cmp
movsb
push
daa
xor
movsl
push
xor
insl
sub
pop
pop
lods
mov
push
cmp
test
sub
enter
scas
push
mov
xchg
add
nop
mov
inc
cli
fsubl
push
and
jl
scas
add
ss
ret
and
pushf
insb
jo
or
mov
adc
adc
pop
js
shlb
dec
dec
xchg
pop
dec
adc
data16
dec
xor
addl
stos
aam
lcall
add
cmpsb
push
lret
dec
sub
mov
adc
cmpsb
out
imul
add
xchg
in
or
or
and
adc
xor
sub
dec
ficomps
clc
dec
xchg
lret
cmpsb
insl
sub
adc
pop
cmc
dec
movsb
dec
push
jbe
jle
insb
bound
ljmp
or
insb
xor
add
dec
loop
xchg
xor
cli
mov
adc
push
mov
add
ss
mov
push
mov
push
mov
or
shlb
sub
jp
mov
push
insb
cmpb
popa
hlt
and
mov
and
or
add
add
dec
xchg
sbb
lock
jl
or
dec
into
inc
adc
leave
and
rolb
cs
popf
inc
sub
ret
sbb
mov
dec
mov
pop
movb
sbbl
sub
xor
mov
in
inc
incb
adc
scas
adc
and
or
jbe
test
push
dec
popa
sub
lock
popf
pop
mov
cmp
and
add
push
loop
pusha
sub
es
or
mov
sbb
insb
shll
hlt
lods
mov
hlt
addl
out
dec
and
jb
sbb
pop
gs
xchg
inc
sub
lret
add
enter
test
test
pop
jns
add
xchg
cli
push
or
pop
scas
dec
cld
fs
push
xchg
inc
test
loop
mov
push
add
sub
dec
cbtw
add
icebp
add
xchg
xor
sbb
sbb
pop
test
push
mov
lret
enter
mov
sub
test
jp
pusha
sub
aam
mov
and
and
inc
mov
mov
andb
popa
xchg
add
and
adc
inc
sub
inc
sbb
movsl
adc
push
xor
rcrb
xchg
mov
dec
jo
inc
inc
subl
repnz
inc
jb
push
lods
mov
sub
xchg
xor
add
out
xchg
or
xchg
xor
ret
and
xor
cmp
add
mov
sbb
or
mov
pop
inc
add
pop
call
sub
mov
cwtl
push
cld
lahf
popl
pop
test
lret
in
ret
adc
scas
pop
sub
mov
mov
and
es
cwtl
loope
stos
je
popa
imul
mov
sbb
aad
sahf
and
mov
aad
xchg
add
pushf
negb
sub
gs
int3
xor
movsb
loop
cltd
or
mov
xor
xor
movsl
movsl
sbb
or
push
dec
dec
pusha
ss
cmp
xor
ret
mov
cmp
mov
bound
sahf
orl
sti
xor
cltd
dec
into
push
inc
push
add
sbb
jmp
hlt
cmp
lcall
cltd
push
mov
adc
add
outsb
and
xchg
xchg
mov
add
xor
add
cli
hlt
push
add
push
lcall
add
sahf
or
push
cmpsb
push
xchg
cld
push
add
mov
dec
mov
in
pusha
jbe
mov
adc
xchg
ret
or
outsb
in
sub
jae
mov
sbb
ret
or
ljmp
push
inc
mov
dec
mov
and
or
mov
dec
mov
mov
clc
loop
mov
and
inc
sahf
inc
xchg
orb
cmpsb
sbb
movsb
stos
sub
adc
jns
xor
adc
add
cmp
sub
dec
pop
mov
mov
adc
lods
add
and
inc
bound
movsb
xor
mov
outsb
andl
add
sub
jne
andb
je
loop
add
rcrb
mov
adc
pushf
add
orb
pop
enter
jne
xor
es
add
push
loopne
cld
or
or
nop
and
aam
push
dec
mov
arpl
jno
mov
ds
push
mov
sbb
fidivl
xor
popfw
xchg
int3
loop
xor
add
or
and
push
addr16
andl
lret
js
jo
push
add
add
in
or
xchg
add
cmp
xchg
loop
sub
xchg
fsubrs
sub
add
add
cmpsb
sub
gs
data16
cmp
negb
xchg
mov
xorb
sbb
sbb
data16
test
mov
fcoms
dec
and
push
sbb
or
aam
test
nop
and
sub
sbb
aam
stos
or
inc
sbb
ret
add
movsb
mov
popa
pop
subb
je
lock
cmp
xor
insb
pop
cli
inc
clc
cmp
clc
dec
mov
mov
ret
add
pop
add
pop
loope
add
sti
dec
dec
add
in
pop
or
xorb
ret
aad
lock
push
mov
stos
enter
xchg
les
mov
lods
inc
xor
jo
inc
dec
inc
inc
call
orl
into
mov
adc
popf
sub
jp
or
sbb
mov
pop
xor
mov
sub
inc
ret
xor
sub
mov
es
lret
xchg
or
fcmovbe
push
mov
lcall
adc
inc
add
fs
clc
fcoms
pop
push
fcompl
push
ret
outsb
add
dec
js
dec
rorb
lods
dec
pop
addb
inc
enter
ret
mov
add
sbb
cmp
sub
mov
mov
mov
sbb
dec
inc
inc
and
xchg
dec
pusha
es
jbe
xchg
int3
ret
out
leave
add
int3
mov
sub
test
ret
and
dec
movsb
adc
test
sub
sbb
stos
add
sbb
inc
popa
nop
adc
stos
push
or
scas
cwtl
ret
lret
adc
mov
lods
pop
and
xor
add
jb
scas
xchg
faddl
xchg
push
loop
nop
cmp
out
adc
push
pushf
sub
sub
sbb
repnz
xchg
push
inc
mov
faddl
les
or
insb
mov
dec
ss
adc
imul
mov
ljmp
pusha
stos
movsb
cmpb
hlt
add
nop
ljmp
in
pop
xchg
sbb
mov
aaa
adc
pop
in
add
shrb
adc
and
push
loopne
lret
clc
mov
mov
lcall
andl
subb
jbe
fisubrl
sub
push
cmp
lret
int3
pusha
or
fisubrl
adc
insl
rolb
js
test
ret
push
js
and
inc
loope
into
pop
test
adc
push
ljmp
mov
cmpsb
add
add
push
and
sbb
enter
fs
test
or
addl
add
push
test
xor
cmp
aam
add
lcall
push
add
loop
cwtl
lods
adcb
pop
adc
mov
xor
das
adc
push
ds
dec
loope
loopne
scas
mov
cmp
lock
fs
mov
mov
mov
sub
jp
dec
sub
bound
int3
sub
movsl
mov
movsb
daa
mov
xor
and
ds
push
or
mov
adc
sbb
mov
js
movsb
xchg
xor
mov
inc
or
adc
mov
inc
push
inc
adc
xor
cs
cmpsb
xor
sbb
test
jl
addb
xchg
xor
push
add
and
subb
xchg
test
push
dec
outsl
push
dec
out
adcb
add
xor
xor
mov
in
and
lcall
jge
add
and
pop
sahf
scas
fiadds
mov
movb
inc
xchg
add
inc
cld
hlt
mov
or
pop
nop
adc
imul
and
cmp
sahf
pop
leave
daa
jns
xchg
sbb
add
adc
cli
adc
movsl
xchg
mov
cltd
cmp
je
enter
loop
xor
aad
add
ss
je
mov
into
mov
adc
test
cmp
sub
add
sub
and
sbb
cwtl
or
ss
jle
xor
sbb
pusha
mov
sbb
xorb
push
add
out
add
sbb
bnd
fsts
inc
hlt
push
push
lret
push
or
mov
push
and
fs
cmp
inc
inc
push
aam
push
cltd
push
inc
add
dec
fmuls
adc
xchg
and
insb
pusha
in
out
nop
cmp
jo
jo
stos
hlt
mov
shlb
push
orb
aaa
mov
fsubs
adc
imul
adc
xchg
insb
dec
and
or
sub
and
mov
or
nop
mov
add
dec
push
mov
fs
sbb
cli
sbb
leave
xchg
pop
mov
sub
adc
add
je
adc
outsl
xchg
sbb
or
nop
push
cli
mov
in
ss
dec
add
data16
xor
out
inc
imul
dec
sub
and
pusha
adc
rcrb
xchg
lret
and
mov
or
lcall
push
cld
dec
xor
add
out
pop
jp
mov
mov
sahf
ret
sub
ljmp
adc
mov
pop
jb
pop
push
mov
daa
pushf
mov
lcall
xchg
mov
mov
cmp
loopne
add
pop
test
lea
adc
aam
addb
aam
cmp
add
cld
repnz
add
test
xchg
xchg
dec
test
adc
pop
aam
xor
jb
pusha
mov
or
fs
clc
mov
jbe
pusha
repnz
dec
cmp
xchg
divb
push
xor
cli
outsb
fcoms
add
bound
aad
xchg
jo
sbb
pop
inc
push
push
outsl
xorb
and
fmuls
sbbb
or
or
lcall
nop
push
cmp
and
mov
sub
push
jo
mov
sbb
mov
pop
push
ret
pop
es
push
adcb
dec
adc
dec
or
push
subl
test
gs
dec
out
or
mov
insb
dec
push
xor
add
hlt
and
adc
dec
add
or
out
fcoms
mov
push
ret
xor
inc
cmp
fcom
jp
and
ss
add
push
adc
sub
loopne
inc
push
mov
or
push
cmp
mov
lret
pop
mov
and
xor
and
inc
mov
scas
ficoml
loopne
ret
or
cwtl
lret
mov
inc
sub
xor
sbb
mov
jb
push
push
data16
sbb
xor
jo
ret
mov
mov
jge
xchg
pop
mov
push
pusha
jo
out
or
pop
or
pop
dec
jne
mov
leave
add
cmpb
inc
fldcw
test
add
aam
and
notb
sbb
cmc
mov
inc
mov
ret
popa
clc
cld
mov
popa
and
and
pop
xor
dec
add
lock
adc
rclb
adc
cli
faddl
inc
push
inc
lea
gs
dec
inc
mov
movsb
xchg
and
fs
test
add
cmp
in
mov
cmp
jo
jp
or
rolb
or
int3
sub
fnstenv
mov
cmpb
sbb
xor
mov
and
or
add
mov
jo
test
cwtl
mov
inc
test
lret
cmp
jne
jb
push
and
mov
loope
fnsetpm(287
fsubs
inc
loope
push
pop
push
popa
xor
loopne
mov
push
pop
mov
mov
adc
addb
or
lock
lods
mov
js
add
push
add
sub
adcl
mov
pushl
dec
jne
jl
mov
nop
cmc
xor
lret
jmp
push
or
mov
inc
dec
cli
in
push
push
push
movsl
popa
add
dec
les
cwtl
and
enter
les
call
or
add
xchg
or
xchg
add
add
movsb
mul
mov
add
push
sbb
sub
push
inc
dec
cmp
mov
push
xor
test
icebp
call
sbbb
add
es
push
inc
dec
lock
xchg
push
call
dec
dec
insl
xchg
add
addb
sub
cmp
mov
mov
cli
and
inc
ret
or
add
movsb
in
dec
adc
adc
sbb
sub
mov
push
sub
and
int3
nop
fs
xchg
cmp
call
or
loope
mov
shrb
nop
mov
pop
lods
jo
movmskps
fcoms
add
push
cmpsb
cmpsb
jo
add
or
add
hlt
shrl
ret
insl
push
sbb
gs
adc
push
int3
adcb
enter
push
sbb
and
mov
push
mov
int3
pop
pop
sbb
add
add
dec
test
movsl
mov
or
loop,pn
cmp
push
push
dec
or
add
loop
push
push
xor
sub
push
mov
dec
adc
fcomp
cmp
push
adc
pusha
adc
pop
in
pop
aam
push
rcll
enter
sbb
push
pusha
push
or
sarb
in
push
in
loop
adc
loopne
orl
rol
es
ds
sbbl
mov
pusha
pushf
jo
or
test
sbb
addl
xor
shl
cmpb
out
dec
dec
push
inc
dec
and
mov
dec
ficomps
lcall
and
test
jb
pop
add
sub
sub
sub
pop
xor
loop
inc
or
pop
fdivl
imul
cmc
call
shrb
xchg
jbe
and
mov
xor
ljmp
lods
dec
pop
jp
mulb
xchg
stos
les
or
mov
dec
inc
std
mov
loopne
seto
outsb
sbb
orb
and
mov
imul
int3
inc
push
test
and
fadds
mov
lods
sbb
fs
xchg
into
add
dec
fcoml
clc
ljmp
mov
ss
lcall
xor
cmp
jp
or
rcrb
push
lods
xchg
xor
cmp
inc
mov
xchg
imul
cmp
jns
adc
cmc
push
mov
shll
add
and
ret
lock
mov
pop
xchg
push
cmp
push
pop
mov
mov
callw
add
mov
inc
addr16
push
push
in
pop
or
pop
pop
push
cli
jecxz
add
jbe
es
pusha
sub
jb
or
pusha
adc
and
xor
jb
out
push
add
sbb
movsl
andb
pusha
pop
mov
and
cmpl
orl
ret
movsb
scas
adc
adc
adc
xchg
push
je
push
mov
adc
and
lcall
test
sub
xor
and
sbb
dec
mov
movsl
test
mov
dec
sahf
mov
dec
cmc
test
inc
test
nop
in
sbb
es
mov
movsb
cmp
jb
test
mov
xorl
adc
aam
ror
ljmp
pusha
push
and
leave
and
dec
stos
push
cwtl
out
mov
ss
xchg
enter
mov
int3
inc
pusha
mov
mov
xchg
aad
popa
test
pushf
sub
fdivrs
dec
loopne
ss
push
sbb
add
mov
or
in
add
into
xchg
add
outsb
xor
int3
and
and
mov
mov
jecxz
shll
xorb
hlt
and
mov
pop
inc
inc
inc
cli
sbb
ret
and
add
pop
sbb
divb
inc
xor
dec
cmp
push
inc
inc
js
xchg
push
sub
inc
add
or
push
xor
jne
aad
push
or
xor
add
inc
cli
mov
dec
loope
cmpsb
cli
add
add
mov
rcl
sub
jl
sbbl
xchg
mov
mov
pop
addb
or
loopne
pop
mov
adc
or
inc
out
mov
nop
call
or
mov
push
mov
mov
pop
jl
mov
pusha
test
xor
or
andb
mov
hlt
ret
and
hlt
insb
and
push
sbb
adc
lods
dec
adc
clc
push
pop
pusha
adc
call
xor
or
es
mov
cmp
inc
push
lods
sub
pop
nop
imul
test
xchg
aam
push
dec
cmp
sti
cwtl
dec
add
or
mov
adc
sub
xor
test
jne
cmpsb
fdivp
adc
jo
lods
dec
insl
pusha
in
mov
xor
mov
inc
inc
inc
cmp
sbb
mov
stos
test
xor
or
push
adc
mov
cmp
xchg
fisubrs
xor
pusha
mov
pop
sbb
movsl
add
xchg
push
dec
or
in
mov
popa
adc
pop
loop
add
daa
jo
lret
or
shll
cmp
and
ret
jo
mov
mov
cld
sbb
movsb
xchg
pop
ret
hlt
adc
mov
ja
pop
add
mov
hlt
lret
inc
mov
mov
jb
adc
or
or
add
pusha
mov
fisubrl
mov
cmpsb
mov
divb
jp
pusha
mov
mov
or
add
mov
mov
ret
hlt
sbb
add
pushf
nop
shlb
shl
aam
mov
adc
ljmp
sub
loopne
sbb
xor
cli
mov
jo
xorb
cmp
lcall
sbb
adcl
mov
cmp
fcomps
fiadds
outsb
cmpl
mov
ret
and
sbb
mov
or
cltd
xor
push
sub
icebp
xor
jb
loopne
jmp
xor
faddl
xor
out
cmp
sub
xchg
add
mov
lea
fs
enter
sub
cld
enter
xchg
test
nop
cmp
cwtl
xchg
shlb
subb
mov
add
or
sub
sbb
push
and
into
xchg
jbe
sbb
das
sbb
mov
mov
push
js
xchg
adc
or
cltd
push
cli
fisubs
xor
imul
xchg
in
dec
data16
fadd
mov
sub
jno
test
and
mov
xchg
adc
pop
stos
lret
int3
or
icebp
adc
je
dec
add
dec
inc
inc
shlb
cld
push
aad
mov
inc
outsl
push
mov
or
mov
push
stos
sub
sbb
cli
and
mov
pusha
push
and
mov
jne
mov
cs
outsb
push
xchg
leave
xchg
or
cmp
xchg
sub
mov
add
mov
shrl
push
sbb
push
dec
add
fs
push
fildll
and
outsb
andb
inc
mov
scas
notb
iret
cmovnp
inc
cld
jae
je
cld
pusha
mov
add
adc
negl
mov
add
sbb
mov
push
cmp
test
pop
loop
push
inc
mov
jg
loop
jmp
int3
inc
stc
sbb
push
sbb
dec
push
add
adc
mov
and
mov
test
and
add
hlt
add
repnz
push
loope
sbb
xchg
ds
inc
or
sub
xor
fmul
test
push
or
or
sub
enter
imul
jbe
mov
or
stos
and
mov
jne
jge
xor
pop
cs
lea
aad
sbbl
fwait
movb
fsubrl
rcrb
stos
adc
adc
mov
ss
int3
or
out
dec
adc
push
xor
loopne
gs
out
sub
xor
mov
dec
cwtl
fcomi
cli
fdivl
dec
sub
sbb
enter
dec
scas
cmpsb
add
or
pusha
inc
mov
sbb
xchg
push
or
add
inc
dec
push
sbb
fiadds
lcall
jo
inc
mov
mov
in
shlb
cmp
dec
mov
roll
lcall
sahf
add
push
into
push
dec
sub
jo
leave
sub
xchg
pop
mov
cwtl
hlt
jbe
inc
rorl
xchg
adc
andl
jecxz
mov
inc
add
orb
xlat
fwait
jp
push
cli
in
or
cmp
cltd
dec
xor
cmp
mov
pushf
adc
sub
lea
or
pushf
je
and
xor
ror
test
cmp
mov
cmpsl
xchg
xor
push
dec
mov
scas
push
pop
push
pop
or
in
aam
pop
movsl
xor
fmull
stos
xor
cld
sbb
and
push
add
adc
pop
push
ror
aam
inc
js
into
fcomps
xchg
dec
sub
push
xchg
xor
xchg
pushf
dec
inc
inc
lock
push
bound
push
loop
or
and
inc
movsl
mov
jne
adc
xor
mov
push
aam
mov
ret
or
push
outsb
xor
mov
loop
and
xchg
or
mov
adc
mov
pusha
sbb
es
ljmp
dec
push
es
lret
and
add
aam
lcall
hlt
xchg
sbb
mov
add
add
sbb
sbb
or
andb
sbb
mov
pop
cmc
das
xchg
push
xchg
inc
outsb
dec
dec
call
cmp
dec
insl
jg
or
ds
mov
ret
push
scas
xchg
fldcw
or
jo
add
test
adcb
cmp
push
data16
adcl
inc
popa
stos
push
mov
xchg
xchg
push
and
xchg
pusha
cmpsb
dec
push
dec
lock
push
xchg
aam
nop
xchg
es
bound
loopne
in
or
and
sbb
sahf
xchg
cmp
mov
jle
ret
mov
mov
ret
dec
aam
adc
add
in
cwtl
or
lods
dec
es
mov
sub
inc
push
push
inc
pop
pop
pusha
pushf
cltd
shl
inc
xor
es
inc
sbb
arpl
mov
dec
outsl
shrb
mov
xchg
enter
sbb
mov
test
nop
push
cmpsb
jl
sbb
adc
xlat
mov
or
mov
mov
xchg
cwtl
ljmp
mov
dec
xor
stos
mov
sub
xchg
dec
fstenv
addb
mov
aam
or
xchg
popa
gs
hlt
pop
ficompl
xor
inc
insb
shlb
jne
aam
ret
adc
dec
or
sahf
and
test
movsl
mov
shl
jp
push
adc
rorb
pusha
dec
lcall
int3
loop
add
int3
xchg
je
or
pusha
outsb
ss
cmp
dec
fs
push
sub
test
orb
mov
test
lret
fdivrl
movsb
cld
in
dec
xor
xchg
cltd
sbb
xor
dec
cwtl
loopne
add
adc
push
inc
add
movsb
hlt
addl
inc
mov
add
dec
in
and
test
or
es
and
sub
xacquire
jo
outsb
mulb
sbb
jb
mov
adcb
data16
shlb
bound
push
dec
push
out
mov
push
push
lret
movsb
inc
popa
mov
xor
cmc
adc
jne
pop
cmp
nop
in
test
cmp
loopne
add
xor
dec
xlat
inc
imul
loop
mov
add
adc
xor
cmp
mov
scas
pop
fs
jo
cli
jo
popa
adc
mov
add
stos
mov
fcoml
push
or
out
ljmp
sbb
test
push
jns
mov
mov
push
cmp
or
fsubr
sub
dec
push
sub
mov
sbb
sub
or
cli
jg
push
rcl
lds
jl
js
cmp
adc
loopne
xchg
scas
stc
lret
and
sub
clc
push
push
sbb
loop
mov
adc
jae
rcrl
inc
call
jle
xor
pushl
mov
ss
sbb
cmp
scas
test
dec
xor
addr16
or
mov
push
jmp
pop
stos
add
jne
inc
inc
lcall
enter
push
xchg
es
je
pusha
lcall
outsb
loope
dec
bound
rorb
mov
xor
outsb
gs
cmp
test
ss
jb
dec
jb
add
xor
adc
adc
rcrb
scas
and
jne
xor
sbb
inc
push
sub
push
inc
sub
push
push
rcrb
push
xchg
fs
fcmovbe
stos
pop
push
in
insl
loopne
add
andl
inc
es
repnz
push
xchg
jo
test
dec
sbbb
and
repnz
and
push
and
mov
sbbl
cmp
in
test
xor
ljmp
lods
daa
mov
cmp
mov
xor
ficoml
in
dec
pop
mov
test
mov
mov
pop
push
lock
enter
lods
dec
sub
xorl
push
pusha
add
and
addb
jo
ljmp
cmp
popf
push
push
dec
jo
lods
adc
xor
add
fiadds
inc
dec
inc
mov
and
loope
mov
sbb
mov
cltd
cltd
rolb
mov
aad
cli
mov
push
cmc
add
mov
mov
cltd
mov
adc
mov
xchg
or
or
cltd
sbb
out
push
shlb
enter
mov
andb
dec
add
jle
js
and
cltd
pop
rorb
imul
int3
cmp
inc
mov
cmp
adc
or
fcoml
ljmp
js
xchg
inc
je
nop
xor
xor
sub
test
and
imul
enter
test
or
cmp
je
test
mov
test
hlt
fsubs
out
test
lcall
negb
jp
inc
or
cmp
jb
lods
js
data16
and
notb
ficomps
andl
xchg
xchg
fs
or
inc
adc
push
pop
in
or
or
xor
test
jle
int3
int3
test
pusha
andb
mov
mov
sbb
mov
adc
push
pop
push
incb
and
aad
mov
test
mov
dec
xor
sub
push
and
rclb
fiaddl
ficompl
push
jb
es
add
stos
pop
into
ret
xchg
push
dec
cli
xchg
sbb
pop
les
dec
clc
flds
loopne
adc
push
inc
jmp
les
add
add
aam
jle
pop
mov
xchg
imul
js
pop
cmp
mov
jp
stos
xor
pop
dec
lods
imul
out
ret
mov
outsl
mov
mov
loop
fs
and
inc
daa
clc
fidivs
ret
and
add
xchg
add
xchg
dec
and
mov
repnz
es
sub
outsl
mov
sub
sub
push
jl
push
pushf
xor
daa
ds
test
pushf
adc
jo
jp
xchg
mov
xorl
cmp
push
cmp
enter
dec
jb
test
or
fisubs
mov
mov
sub
mov
je
js
xor
int3
sbb
sbb
xchg
lods
orb
xor
xchg
mov
mov
or
mov
pop
mov
dec
adc
add
inc
enter
and
bound
les
pop
test
push
dec
adc
out
cmp
and
pop
xor
mov
test
lret
pusha
and
out
lahf
loop
push
pusha
ret
inc
orb
loopne
or
mov
int3
les
data16
ret
sbb
test
ds
sub
dec
rcrb
sbb
mov
sbb
adc
stos
dec
cmpb
pop
insb
jbe
orb
dec
imulb
push
cli
and
shrb
add
or
cwtl
add
cwtl
les
rcrb
mov
or
adc
loop
cmpsb
cwtl
lcall
enter
add
push
add
jo
mov
add
lret
inc
inc
sbb
xchg
orl
mov
fdivs
or
out
addl
sbb
int3
xchg
or
xor
inc
and
orb
pop
sub
push
push
mov
fcoml
movb
dec
inc
mov
dec
push
cmpsb
loopne
repnz
or
mov
or
or
roll
test
inc
loope
scas
mov
lock
xchg
and
xor
lock
scas
jle
mov
mulb
cmpb
ror
jbe
lcall
or
jne
push
gs
mov
push
dec
cmp
or
xorl
jecxz
mov
xor
dec
dec
mov
add
scas
outsb
orl
fisubl
and
sbb
aad
imul
cmpl
subb
fimull
xor
nop
sbb
cmp
aaa
in
mulb
addb
cmp
out
xchg
mov
pop
xlat
pop
enter
mov
cmc
std
inc
jno
dec
cmp
push
xchg
push
dec
add
pop
adc
sbb
data16
pop
rorb
je
mov
sub
inc
mov
push
test
test
loopne
push
xor
lea
pusha
mov
cs
mov
sub
movsb
adc
es
xor
mov
andb
shrl
mov
sub
bound
xorb
into
add
xor
daa
adc
sbb
xor
dec
inc
xchg
lods
adc
lods
xor
and
and
fs
mov
cmpb
lret
enter
cmpsl
cs
cld
xchg
imulb
inc
mov
ret
pop
outsb
int3
jp
lds
push
mov
jne
inc
sub
jo
pusha
data16
gs
inc
push
adc
mov
pusha
and
inc
stos
mov
adc
inc
test
inc
dec
lcall
and
stos
or
sbb
pusha
dec
sub
and
mov
movsl
dec
ss
xchg
or
test
and
cmp
es
sahf
xchg
jmp
add
sbb
imul
sub
inc
movsl
test
xor
ss
sub
movb
add
test
bound
shrl
sub
int3
mov
pop
fs
cwtl
inc
sub
add
pusha
push
cmp
fs
dec
lret
pop
clc
cli
js
and
or
bound
mov
dec
dec
rcr
subb
and
mov
pop
test
xor
sahf
or
sub
loopne
xchg
mov
cmc
push
lods
pop
fiaddl
sub
lcall
into
sbb
xchg
dec
cmp
dec
pop
sbb
jmp
add
cwtl
push
inc
and
and
and
insb
add
lcall
insb
cmp
pusha
xor
aaa
movsb
push
xchg
pushl
push
pop
pop
das
loop
dec
loope
xchg
cmpsb
and
xor
and
add
pop
in
rorb
sub
sbb
fs
jne
stos
mov
mov
and
inc
test
xor
andb
push
mov
pop
shlb
adc
enter
add
cmp
ret
xchg
sahf
lods
sub
pushf
ret
add
sbb
mov
sub
orb
or
loopne
cmp
push
dec
xorb
test
into
push
adc
aas
push
mov
movsl
jle
daa
cmp
push
pushf
adc
cld
xchg
inc
mov
movsb
push
mov
and
lea
dec
or
xor
bound
pop
dec
inc
outsb
sbb
adc
xchg
sbb
push
ret
sahf
pop
or
add
xor
jo
cwtl
loop
adc
ret
shlb
mov
ror
jns
add
cmp
int3
xchg
sbbb
inc
mov
loope
mov
dec
sbb
test
dec
xchg
pop
and
add
test
adc
sub
and
cli
test
and
pusha
sahf
test
cmp
mov
adc
dec
and
test
test
sbb
orb
stos
test
inc
or
push
cmp
scas
push
ret
dec
xchg
cmp
lcall
and
mov
xchg
mov
movsb
dec
or
add
inc
inc
movsb
cmpsb
mov
sub
stos
add
lret
pusha
xor
xchg
xchg
pop
xchg
fldcw
inc
push
call
mov
ret
mov
xchg
adc
xchg
dec
xor
or
adc
push
sbbb
xor
bound
add
xor
pusha
xchg
push
stos
xor
and
ret
sub
cmp
sub
and
xchg
jb
push
pop
push
mov
test
sbb
pop
add
push
push
fadds
js
addb
js
test
xor
add
sbbb
faddl
push
adc
cmpsl
ds
loopne
lret
add
fsubs
add
inc
ss
ss
add
jb
fsubrp
and
movsb
or
and
dec
insb
add
lods
loop
inc
test
jo
jbe
jae
and
push
dec
loopne
stos
fidivrs
lods
mov
push
xlat
cmpb
sub
stos
test
sbb
or
hlt
lea
mov
add
out
fdivs
ret
mov
xchg
dec
or
pop
es
sub
mov
adc
add
lods
mov
fsubs
inc
shrb
gs
xor
mov
js
lods
inc
mov
shlb
cmp
and
inc
sbb
xchg
test
ss
sub
and
add
add
dec
inc
and
mov
decb
adc
shrl
or
shlb
add
and
test
mov
shrl
and
jo
ss
popa
xchg
pop
jb
lcall
cs
lods
add
adcb
sub
add
lods
imul
mov
dec
fists
hlt
cmp
cmp
fisubrs
roll
lahf
xor
push
mov
pop
dec
daa
dec
dec
inc
stos
sbb
push
or
add
mov
ljmp
pushf
jmp
inc
xor
sub
test
xor
xor
hlt
ds
dec
push
sbb
add
lret
sahf
mov
aam
into
nop
cltd
subl
mov
outsb
xor
mov
dec
cwtl
and
jb
or
fadds
and
lcall
jne
ret
add
loope
sub
mov
mov
lcall
xor
rorb
lret
mov
pop
sub
rcll
pop
pop
cli
ds
rorb
enter
outsb
xor
dec
in
test
test
hlt
and
call
enter
cmpsb
inc
imul
xor
xchg
push
xchg
movsb
mov
add
ljmp
xchg
aad
pusha
popa
insb
push
stos
mov
imul
call
cmpsb
sbb
push
push
push
incb
xchg
insb
and
loopne
mov
sub
cmpsb
ret
push
push
or
movsb
mov
push
orb
pop
ret
cwtl
sub
mov
int
sub
mov
sahf
lcall
inc
push
imul
outsb
sub
mov
leave
in
mov
movsb
mov
int3
dec
mov
or
sbb
movsl
or
sbb
mov
or
sub
xchg
push
shlb
in
sub
add
xor
test
sbb
cmp
in
rclb
xchg
adc
or
xchg
lock
nop
push
cwtl
out
xchg
inc
or
add
and
sub
add
into
loop
xchg
mov
cwtl
fimuls
add
or
xor
dec
js
mov
sub
cmp
andb
popa
add
mov
clc
ljmp
add
cmp
sbb
and
mov
ds
and
add
cwtl
push
pusha
fs
mov
pop
pop
adc
js
jb
insb
or
cmp
cmp
adc
rol
pop
outsb
pop
and
jle
sahf
les
stos
mov
sbb
fidivl
dec
nop
inc
dec
mov
sbb
pop
repnz
pusha
dec
add
add
and
loopne
andb
outsl
inc
mov
pusha
push
jecxz
fs
add
or
push
sbb
incb
add
fmull
inc
into
dec
mov
dec
pop
loope
xlat
dec
movsb
adc
or
push
cld
aad
pop
xchg
add
pusha
push
add
out
dec
add
mov
in
es
es
mov
adc
pop
call
or
cli
push
sub
mov
je
sbb
bound
lret
and
pusha
loopne
push
inc
movsb
mov
dec
fs
or
sbb
cs
loope
lock
sbb
ds
adc
push
mov
mov
push
and
imul
dec
andb
test
adc
add
dec
lret
or
loop
cwtl
cs
inc
push
mov
add
add
inc
push
in
sub
or
je
ljmp
dec
sub
lea
mov
outsb
adc
sahf
in
es
mov
and
adc
jp
addb
scas
insb
and
sub
dec
jbe
int3
fs
xchg
orb
dec
and
ljmp
add
es
dec
js
jb
mov
mov
fbld
and
mov
xor
push
movsl
and
xor
ljmp
adc
pop
inc
pop
cmp
mov
inc
sub
mov
adc
clc
mov
or
pop
popa
and
inc
mov
xchg
mov
xor
lods
or
loope
loop
cmp
xchg
adc
push
mov
pusha
xchg
in
dec
inc
sub
mov
inc
cmp
int3
xchg
sbbb
rolb
sub
inc
gs
and
fsubp
dec
sbb
pusha
and
pusha
test
movsb
or
jp
mov
inc
cmp
jb
cmp
adc
orb
sub
or
int3
or
sub
adc
push
xchg
xor
out
dec
movsb
adc
sarb
add
add
mov
popa
mov
mov
fs
jb
subl
test
testb
lcall
push
dec
push
aad
pushf
sbb
lret
test
push
and
pusha
xchg
and
lods
mov
loopne
xchg
dec
sbb
fsubrs
add
mov
lcall
fcomps
mov
pop
pop
into
outsb
adcb
cmp
mov
sub
sub
jl
or
dec
xchg
rcll
enter
rorb
test
xchg
pop
and
out
push
adc
movsb
mov
or
ss
jbe
and
faddp
jp
movsl
mov
adc
push
xor
mov
ljmp
and
or
mov
call
cmc
ljmp
mov
mov
add
sub
sar
xor
movsl
js
mov
movsl
ror
dec
sahf
les
ret
add
test
cmpsb
xchg
xor
mov
xor
cmpsb
and
sbb
inc
dec
mov
xor
mov
push
rcrb
jp
dec
out
cmpsl
and
test
dec
daa
cmp
and
sbb
mov
addl
mov
test
sub
inc
inc
pusha
pop
addb
or
cltd
inc
jo
mov
pushw
push
xchg
enter
loopne
dec
ret
or
dec
loopne
and
adc
aaa
dec
orb
test
inc
sbb
add
faddl
pop
mov
test
test
loopne
lret
add
es
push
and
and
or
inc
xchg
dec
and
push
and
mov
mov
enter
sbb
dec
sub
pop
dec
and
inc
inc
xor
test
or
push
sub
xorb
pushf
pop
call
les
sbb
pop
daa
jp
cli
xor
dec
dec
push
push
jle
pop
push
pop
add
xor
add
adc
pop
mov
cmp
and
and
inc
push
push
push
pusha
and
inc
fimuls
mov
test
xchg
dec
or
or
sbb
mov
push
mov
cld
dec
mov
cwtl
movsb
mov
mov
or
push
add
push
cmp
dec
add
pop
test
pushf
das
leave
fs
divb
xor
mov
mov
sbb
sbb
lcall
sbb
int3
dec
ret
inc
mov
fs
ss
test
mov
sub
mov
add
add
loope
dec
mov
cwtl
cmp
cmc
mov
pushw
mov
xchg
xor
xchg
cmc
jb
xchg
test
je
pop
or
fcomip
cmp
mov
cltd
fs
mov
daa
sbb
xchg
add
repnz
xlat
mov
adc
xor
and
mov
and
pop
test
pop
xchg
addb
les
pop
mov
pusha
mov
out
decb
aad
rolb
sub
mov
cmp
pop
or
add
test
test
mov
push
pop
je
cmp
pop
cli
pop
dec
ljmp
test
push
lcall
jle
add
push
push
rcr
leave
repz
pop
outsb
and
and
adc
rol
inc
or
mov
mov
mov
mov
pusha
cwtl
insb
or
scas
lods
test
adc
adc
or
ds
popa
adc
or
pop
lock
add
sub
add
cmp
jmp
js
push
sub
sub
adc
fcmove
xor
ds
pop
cmp
andb
adc
cltd
ljmp
add
in
xor
rcrb
sub
call
cmp
popa
imul
add
push
xchg
xchg
jle
jne
aad
dec
inc
or
dec
inc
or
popa
dec
inc
mov
movsb
adc
cltd
xor
add
shlb
lods
adc
pop
xor
push
xor
fldl
sbb
add
push
inc
testb
mov
push
xor
cltd
and
aad
and
sub
push
inc
shlb
add
push
push
adc
cmpsb
push
xor
lock
int3
push
mov
aam
add
dec
lods
sub
xchg
enter
adc
lcall
nop
es
leave
dec
push
xor
add
mov
mov
or
dec
bound
and
inc
sub
fcoml
adc
dec
inc
daa
je
push
mov
add
sarb
sbb
mov
les
push
xor
push
in
adc
mov
push
adc
nop
mov
ret
sahf
insb
test
mov
sbb
test
mov
add
adc
pop
mov
addb
xor
pop
sbb
js
and
push
insl
mov
lret
cmp
sub
imul
xchg
inc
movsb
push
sub
push
rorb
pusha
rclb
adc
or
mov
xor
jbe
pusha
subb
bound
xchg
es
je
ret
xor
pop
js
sub
inc
dec
push
jl
loope
push
xor
dec
fcoml
fidivrs
scas
sbb
inc
dec
in
xchg
jbe
cmpb
movsb
mov
jp
and
icebp
and
ficompl
mov
push
add
lcall
cmp
lock
dec
jne
add
nop
es
push
sbb
ss
add
pop
push
gs
pop
pop
pop
xchg
push
inc
mov
inc
rcr
loop
cmp
add
pop
push
push
pusha
je
inc
dec
loopne
imul
jmp
xchg
cld
push
push
push
stc
cs
cmc
bound
fistl
pushf
icebp
or
stc
es
sub
ds
or
lods
dec
adc
fisubrs
inc
xchg
add
stos
aam
sbb
mov
addb
cli
cwtl
and
cwtl
push
mov
xchg
cmpl
aam
and
out
inc
pop
push
push
ret
sbbb
add
inc
je
xchg
or
stos
subb
and
cwtl
dec
push
test
adc
and
int3
add
xchg
shlb
sbb
jo
dec
mov
add
push
and
add
dec
insb
cmp
or
pusha
add
sbb
popa
insl
mov
or
inc
es
sub
add
add
add
inc
inc
cwtl
xor
pop
add
jp
sbbb
rcrb
insl
cmp
mov
sbb
sbb
rorb
inc
dec
ss
bound
loopne
out
call
nop
int3
int3
hlt
jb
cmp
mov
xor
pop
jbe
push
cmc
call
into
dec
add
pop
lods
inc
rorb
jl
sbb
dec
and
and
addr16
scas
jmp
mov
add
inc
cmp
shlb
inc
add
cmpl
adc
pop
inc
push
add
pop
bound
push
sbb
aam
fisubrs
xchg
call
or
or
test
loopne
inc
in
mov
movsl
gs
cmp
loop
aam
dec
jne
mov
add
inc
xor
add
cwtl
adcb
mov
adc
lods
jl
es
mov
jo
pop
shlb
sub
inc
and
or
pop
inc
rolb
loop
aam
cmp
lcall
xor
aad
pusha
and
dec
fsubp
sbb
push
inc
mov
divb
adcb
mov
les
out
lea
andb
dec
cwtl
and
cli
or
lock
and
push
sub
mov
or
inc
push
mov
dec
loop
ret
js
data16
pop
sbb
fadds
rcr
pop
inc
xchg
jo
sub
push
out
xor
xor
bndstx
outsb
adc
lock
add
mov
ljmp
add
dec
jp
mov
nop
int3
repnz
adc
xor
xor
pop
push
ljmp
adc
add
push
repnz
adc
nop
and
pop
jge
and
add
daa
int3
icebp
sbb
aas
add
push
daa
cld
add
pop
jg
pop
inc
mov
gs
xor
gs
shr
jle
inc
pop
sbb
pop
add
add
popa
imul
and
push
xor
jp
ljmp
fisubrl
dec
sbbb
adc
les
lret
xchg
loopne
test
xchg
jp,pn
cmp
dec
lock
inc
test
cmc
in
addb
jbe
xor
push
out
jle
sbbb
hlt
testb
mov
xchg
es
push
or
adc
js
inc
or
scas
add
or
lcall
ret
push
add
dec
sbb
xchg
inc
sahf
test
jmp
or
push
mov
push
loope
movsb
and
sbb
push
es
dec
add
out
push
mov
sbb
mov
stos
fcomps
sahf
orb
rcrb
mov
sbb
scas
jle
add
sub
pop
dec
sub
xor
xchg
push
sub
rol
xchg
cwtl
mov
nop
sbb
loop
xor
and
sbb
loop
je
shll
push
inc
outsb
out
dec
adc
mov
adcb
sbb
fcoml
dec
cmp
lcall
add
sbb
push
inc
mov
test
cli
xor
js
jne
es
pop
sbb
adc
rcll
loope
loop
imul
adc
push
mov
les
push
test
test
dec
or
enter
jno
clc
mov
adc
clc
dec
sub
dec
loopne
es
inc
and
or
dec
lods
mov
add
or
cmp
int3
fadd
add
test
popf
or
lock
and
pop
and
call
jle
add
inc
inc
jp
or
gs
lock
sahf
cwtl
enter
fs
test
push
lcall
pop
mov
xor
sbbb
sub
es
stos
mov
dec
sub
mov
imul
es
adcb
orb
out
dec
xor
add
inc
adc
sub
bound
add
imul
or
add
pop
arpl
xor
push
push
or
jbe
add
mov
and
popa
sbb
mov
mov
subb
dec
sub
xchg
lea
or
mov
and
loop
push
daa
inc
cmp
add
jbe
fsubs
xor
cs
xor
mov
and
scas
push
clc
xor
inc
imul
sarb
cmp
add
mov
sbb
cltd
mov
les
push
mov
out
xchg
rorl
cmpsb
add
ss
arpl
iret
ja
sbb
pop
fidivl
push
dec
and
pop
xchg
je
std
add
in
mov
mov
dec
leave
dec
jo
inc
pop
push
adc
ds
sbb
or
nop
inc
add
and
xor
inc
gs
sbbb
and
xchg
pop
fdivs
stos
cli
mov
outsb
ljmp
push
mov
ss
pop
xor
sbb
pop
pushf
jns
mov
shrb
dec
lret
push
xchg
sahf
dec
jbe
and
sbb
cli
sbb
mov
mov
dec
ljmp
add
lods
and
push
fdivs
push
dec
mov
sbb
pop
je
xor
inc
insb
nop
dec
adc
sbb
enter
fsubs
test
or
add
mov
xor
into
mov
jp
jb
add
cltd
fcoms
sbb
adcb
cwtl
push
outsb
xorb
or
ret
testb
jno
dec
push
push
mov
push
add
jp
sbb
cmp
push
rorl
and
js
jb
roll
pop
mov
movb
xor
or
subb
lods
pop
lretw
push
test
data16
adc
ret
push
adc
adc
nop
sbb
add
jbe
mov
fs
imul
je
mov
int3
rclb
push
insb
fcomps
inc
out
xchg
push
je
cmpsl
int3
and
mov
mov
push
out
mov
mov
xor
push
pusha
pop
jbe
adc
xchg
mov
inc
popa
lret
loop
or
cld
xchg
add
sub
pop
and
hlt
cmpsb
or
insb
add
test
mov
push
pushf
sub
aam
dec
cmp
cmp
hlt
mov
pushf
xchg
fiaddl
es
push
push
int
mov
adc
pop
dec
dec
imul
xchg
push
dec
xor
test
out
aam
scas
push
push
mov
inc
test
jle
lods
dec
cmp
add
js
cli
test
adc
mov
xchg
rorl
icebp
and
andb
and
ret
xor
jb
cmp
and
xchg
fadds
xchg
xchg
xchg
les
ljmp
nop
cmp
jmp
aad
jmp
adc
decb
dec
pop
in
and
cli
dec
nop
inc
mov
push
pop
aam
sub
jl
push
cmp
adc
fdiv
pop
adc
inc
dec
gs
adcb
push
ret
mov
or
or
and
fs
pop
adc
es
or
jge
imul
fwait
and
inc
ret
aad
mov
mov
popf
mov
jb
mov
push
jae
mov
scas
testb
xchg
mov
adc
sub
lcall
cs
scas
or
mov
testb
add
aam
sub
xchg
xor
call
xchg
int3
push
push
fdivr
dec
mov
add
fcomps
icebp
sbb
fsubs
int3
inc
data16
inc
scas
push
in
lret
cmp
sbbb
pop
jo
xchg
pop
xor
inc
js
pusha
dec
dec
loope
dec
lods
xor
nop
loopne
sarb
push
mov
mov
inc
sbbl
sbb
jp
push
mov
ss
xchg
mov
clc
mov
mov
push
mov
xchg
data16
nop
xchg
add
push
fdivrs
fiadds
sub
lds
scas
jbe
shrb
pusha
sbb
push
scas
inc
cltd
push
inc
cli
cld
jge
jo
cmpsb
push
dec
je
test
push
lcall
cmp
jae
popa
xor
or
bound
mov
ficoms
dec
xor
int3
shlb
or
shrb
jb
pop
and
outsb
sub
inc
inc
or
loop
out
push
xchg
xor
and
dec
or
push
mov
push
and
mov
scas
add
sub
je
rolb
orb
mov
lret
adc
sbb
mov
or
mov
call
ret
jo
loopne
add
pop
test
pop
mov
inc
or
xor
add
mov
add
pop
test
pusha
jl
cld
fs
sbb
adc
mov
push
inc
push
nop
and
rcrb
sub
or
xchg
push
sbb
adc
cmp
add
xchg
xchg
cwtl
es
addb
mov
dec
add
movsl
adc
mov
cmpsl
jne
dec
push
cmp
and
or
sbb
test
sarb
inc
mov
mov
test
mov
or
cmpsb
rorb
mov
cld
jb
inc
mov
int3
lret
and
push
dec
cwtl
movsb
or
mov
pusha
and
or
mov
cld
add
add
cltd
push
add
or
int3
ds
shlb
shl
mov
jl
inc
adc
sub
sub
jecxz
add
lock
mov
das
and
rcrl
cli
jbe
xchg
sub
test
xor
pop
or
pop
xchg
xchg
outsb
aas
int3
ljmp
jecxz
mov
dec
aam
adc
add
jp
int3
xor
sub
or
es
add
adc
sarl
ret
loop
cmp
mov
nop
push
mov
dec
cwtl
dec
leave
push
stos
jl
fcoms
or
dec
ljmp
pushl
test
dec
ret
mov
dec
pop
fimull
test
push
cli
sbbb
insb
in
call
test
sbb
add
inc
add
adcb
int3
in
jno
lock
cwtl
adc
sub
add
int3
out
dec
loop
add
inc
and
sub
dec
inc
push
add
mov
cmp
mov
callw
adc
xchg
nop
pop
pop
adc
push
and
push
les
push
insl
dec
insl
ret
lcall
pushf
in
mov
add
outsb
ss
jl
movb
sub
mov
pop
mov
inc
xorl
clc
sbbl
mov
je
fs
sbb
mov
mov
adc
cmp
or
dec
lods
pop
movb
movsl
cmpsb
dec
mov
out
sub
mov
mov
dec
fcomps
cwtl
add
cmp
dec
dec
mov
nop
inc
add
adc
sub
adc
arpl
push
inc
add
adc
inc
mov
xchg
inc
push
push
jo
les
sbb
je
mov
sub
movsb
shrb
xor
adc
cltd
and
or
or
push
insb
and
rorb
sbbb
fcmovu
inc
dec
or
cltd
mov
lcall
dec
fs
add
xor
cld
or
shrb
push
ljmp
mov
add
inc
push
scas
and
add
fcmovu
push
ss
mov
adc
sbb
pusha
bound
add
dec
sub
xchg
adc
js
jo
les
push
sbb
or
and
cmpsb
jo
cwtl
aam
push
ljmp
mov
cmp
insb
mov
cmp
mov
loopne
and
mov
push
negb
cli
add
lcall
dec
sbb
dec
mov
sub
add
adc
xor
lret
insb
enter
xor
pop
xorb
test
test
mov
or
and
pop
sbb
xor
adc
pop
cmpb
scas
dec
fs
adc
or
rorb
mov
sub
in
cld
cmp
push
pusha
test
jo
push
mov
add
outsb
cmpsb
add
add
push
shlb
loopne
pop
mov
rol
add
lock
cltd
les
xor
sbb
or
or
cmc
jb
adc
xchg
xor
andb
push
adc
xchg
dec
lock
xchg
sub
sub
hlt
push
xchg
cli
push
nop
add
not
bswap
mov
push
in
test
mov
inc
out
pop
cli
aas
pop
sub
pop
sbb
je
imul
push
repnz
mov
push
loopne
push
sub
and
aad
adc
xor
xchg
add
or
inc
push
scas
push
leave
inc
gs
cmp
cmp
adc
inc
and
movsb
repnz
movsb
xor
mov
scas
or
dec
sbb
repnz
sbb
ds
sub
test
inc
inc
insl
ss
mov
xor
inc
push
xchg
nop
enter
xchg
dec
sub
cld
mov
mov
jo
test
ss
inc
cltd
ljmp
mov
push
sbb
add
nop
xchg
lods
and
or
inc
jns
pop
mov
fsubrs
insl
testb
and
adc
push
jbe
cmp
pop
lret
dec
sub
inc
cmp
jb
sub
add
pop
pop
mov
push
and
jo
sub
sub
sbb
add
cltd
sub
push
and
ljmp
aam
jo
bound
jbe
test
movsb
xchg
jl
fcomps
pusha
xchg
sbb
popa
inc
inc
outsb
jae
pushf
xchg
lret
or
add
test
pusha
push
test
ss
sbb
fcomp
aam
fsubrs
inc
aad
dec
and
cmp
mov
cwtl
fadds
sub
scas
mov
add
cmpb
mov
push
push
nop
sub
mov
movsb
push
and
and
and
push
sbb
and
pusha
sub
aad
int3
add
sahf
shrb
shlb
sbb
xchg
add
push
xchg
add
loop
es
or
xchg
ds
sahf
add
xchg
testb
inc
and
and
mov
sbb
xchg
loope
sbb
pop
inc
push
mov
push
lock
jo
add
test
imulb
adc
inc
xor
or
adc
leave
adcb
mov
or
sub
dec
cmpsb
mov
inc
mov
pop
cmpb
scas
lcall
and
gs
xchg
or
outsb
mov
push
dec
and
inc
add
push
sbb
adc
lea
loopne
orb
adc
test
lcall
pop
subb
cmpsb
insl
xchg
adc
movsl
push
push
lret
loope
loop
cwtl
mov
cwtl
adc
loopne
cmpsb
dec
fiadds
lock
shrb
sub
cmpsb
test
xchg
pop
xchg
loopne
sbb
mov
sbb
aad
rorb
daa
imul
pusha
xchg
mov
sbb
sbb
inc
xor
pop
dec
adc
cmp
mov
ret
pusha
cmp
push
jo
jl
dec
jmp
lods
or
jb
add
push
adc
test
pusha
fnsave
or
loope
sbbl
sarb
push
pushf
popa
test
sbb
add
add
ficoml
cmpsb
cmp
js
and
adc
enter
mov
xor
fisubrl
push
neg
test
xor
shll
pusha
pop
dec
mov
sub
int3
inc
loope
in
dec
test
push
shlb
xchg
ficoml
dec
adc
xor
or
dec
push
sbb
add
in
fbld
xchg
movsl
popa
es
xor
fs
cld
or
jo
pop
adc
mov
gs
inc
jl
or
sub
pop
jo
adc
jne
and
sub
out
inc
add
adc
roll
push
scas
mov
cwtl
mov
insl
aam
sbbl
and
adc
and
cmpsb
fistps
xor
lret
lcall
xor
pusha
pop
mov
fisttpll
jp
cmp
sub
push
data16
push
mov
pop
cmp
ret
pushf
pusha
xor
and
add
mov
lcall
or
dec
fs
add
nop
and
adc
xchg
dec
sbb
pop
mov
or
loop
loopne
adc
jo
add
push
jo
jl
aam
rcrl
sbb
adc
xor
les
xchg
cmp
lea
fimull
popa
sub
cmp
imul
xor
ds
shlb
cmpsl
lea
popf
pusha
mov
adc
pushf
jb
nop
push
fidivs
xor
cmpsb
nop
dec
cs
cmp
mov
sbb
dec
ret
sub
in
adc
aam
jb
add
xor
inc
mov
movsl
xchg
ret
add
and
mov
adc
xor
jb
imulb
add
icebp
scas
mov
xchg
das
jecxz
adcl
fsubs
ret
push
add
adc
das
cmp
cmp
es
fidivl
mov
add
lock
inc
ror
push
adc
ljmp
rcl
orb
cltd
or
or
insl
inc
inc
mov
xchg
add
mov
mov
dec
and
jmp
scas
fcmovb
pop
lret
or
int3
and
mov
mov
lds
add
ret
testb
or
sbb
ret
pop
cmc
or
xchg
nop
inc
add
mov
push
nop
and
inc
mov
inc
jle
adc
sub
mov
push
test
pusha
xor
mov
push
xor
xor
pop
lock
sub
mov
push
hlt
rorb
inc
sbb
xor
inc
push
sarb
inc
and
mov
gs
cmpsb
outsb
adc
lock
push
push
pusha
add
and
pop
or
in
mov
lcall
sbb
pop
insb
xor
movsb
nop
push
mov
xor
dec
ljmp
xor
mov
push
icebp
inc
xor
xchg
jne
xorl
call
bound
addl
and
and
dec
add
in
or
push
mov
and
mov
andb
add
xorb
dec
sub
or
push
insb
cmp
pusha
xchg
add
das
mov
xor
push
dec
inc
xor
test
sbb
adc
int
xchg
add
test
mov
xor
xchg
xchg
cmp
xor
enter
cltd
enter
or
loopne
call
push
mov
mov
sub
out
push
sub
sub
mov
mov
addb
testb
lret
data16
aam
movsb
pop
mov
mov
loop
sahf
push
add
xor
sub
adc
or
call
xchg
add
mov
je
cmc
pop
fs
sub
xchg
push
push
enter
scas
mov
jl
jb
ljmp
xchg
ds
or
sbb
dec
dec
dec
xchg
rolb
fs
lret
rclb
adc
mov
imul
outsb
push
cmp
dec
jle
and
inc
xchg
or
lret
and
ret
pop
mov
adc
and
dec
pop
test
inc
test
add
xchg
add
ljmp
and
sub
mov
cmpsb
es
adc
mov
or
inc
add
pop
jo
les
ret
cmpl
sahf
faddl
inc
dec
fmull
sub
add
inc
mov
hlt
mov
and
lret
adcb
sahf
xchg
and
sbb
pop
and
adc
dec
xor
sub
lds
cltd
pop
inc
mov
xchg
pop
inc
jecxz
push
shlb
mov
xor
xor
xorb
es
adc
lcall
cwtl
xchg
add
insb
pop
pop
aam
mov
and
inc
xchg
call
fs
je
mov
test
add
add
inc
outsb
add
dec
cmp
in
sub
pop
mov
mov
enter
cmp
nop
or
insb
add
movb
add
dec
test
rcl
inc
dec
push
or
enter
sub
sub
add
es
adc
or
jle
cwtl
or
push
dec
adc
or
push
cmp
movsl
add
jecxz
inc
add
sub
rclb
add
and
aam
mov
lcall
xor
lcall
inc
sbb
js
xchg
inc
or
adc
xchg
lods
add
jo
das
add
xor
test
pusha
mov
jbe
mov
sub
jp
call
inc
and
or
cmpsb
adc
fld
mov
es
loopne
fsubs
jl
add
es
pop
ret
push
aam
shll
rcll
sub
dec
lock
dec
add
mov
int3
adc
mov
hlt
xchg
ss
xchg
sbb
add
inc
or
adc
sbb
ss
cld
sbb
xchg
in
cmpsb
add
jnp
xor
out
jl
dec
loopne
mov
jb
push
mov
outsb
adc
adc
add
or
cwtl
adc
lods
or
add
idiv
xor
add
mov
xor
and
add
push
sub
push
test
mov
andb
ret
sub
je
inc
cs
loope
ret
inc
dec
cs
xchg
mov
ret
add
sub
call
xchg
lret
sbb
and
pop
mov
sbb
mov
lods
adc
and
mov
ljmp
scas
jbe
jle
inc
fs
jle
andb
push
push
add
nop
cmp
test
jle
hlt
sar
sbb
and
push
ljmp
ds
dec
jnp
pop
push
xor
dec
rolb
hlt
inc
dec
aas
adc
nop
popa
es
inc
test
into
inc
adc
jnp
sbb
mov
mov
or
sarl
xchg
inc
add
or
inc
or
add
lret
aas
ja
jo
sbbb
sbb
add
fiadds
mov
es
and
mov
mov
xor
dec
nop
dec
sub
xchg
adc
outsb
in
pusha
sub
aam
in
js
dec
pop
dec
test
je
nop
fsubl
add
rcll
cs
fadds
mov
inc
out
sub
fidivl
dec
add
dec
xchg
xchg
cmp
cwtl
cmp
rol
ss
sub
es
xchg
add
or
push
adc
inc
xchg
dec
inc
push
dec
js
push
test
dec
push
jb
mov
cmp
jl
adc
xor
adc
lock
movsl
loope
jle
add
push
nop
dec
add
es
cli
xor
out
mov
and
cmpsb
faddp
in
in
adcb
xchg
pop
sbb
xchg
sub
orb
out
xchg
add
xchg
mov
jl
ret
and
push
pop
and
outsb
push
or
ljmp
fsts
add
sub
adc
nop
and
add
rolb
mov
cmp
push
add
jo
test
loopne
mov
mov
cmpb
roll
push
sbb
push
cmp
push
or
dec
mov
sbb
fs
or
push
push
cmpsb
or
loop
cli
push
enter
mov
push
int3
aam
popa
sub
xchg
xchg
xor
adc
mov
inc
out
les
inc
pusha
data16
mov
add
mov
push
inc
rol
hlt
mov
aad
or
test
rolb
push
cli
jo
loope
xchg
les
cmp
jnp
dec
lods
call
push
add
sub
aad
mov
and
xorb
addb
mov
pop
pop
dec
adc
js
mov
cmp
addb
add
test
xor
insl
int3
dec
test
pop
mov
cmpsb
and
movsb
sbb
mov
pop
pop
pushf
call
push
sbbb
mov
add
and
cs
add
mov
or
add
jle
mov
sbb
dec
mov
pop
sbb
add
cmc
push
xchg
or
les
xor
mov
add
fisubrl
negb
sub
rolb
lods
mov
or
mov
pusha
cmp
pop
dec
in
sub
imul
es
jo
sub
inc
xor
and
stos
loopne
cli
aas
cmp
jge
pop
jp
mov
loop
add
mov
push
inc
call
inc
popa
cwtl
adc
fsubs
add
or
sub
imul
cld
xor
clc
movsb
fsubl
sub
inc
cli
sbb
addr16
das
jbe,pt
outsb
pop
dec
fdivrp
mov
int
xchg
lods
xor
rclb
jp
nop
push
ffree
int3
sarb
fcoml
or
inc
inc
push
cmpsb
mov
push
inc
test
andl
xor
or
inc
cmpsb
adc
mov
ljmp
mov
rol
sub
out
cltd
pop
xor
inc
invd
data16
lcall
pop
jp
mov
mov
shr
sbb
jle
imul
push
dec
dec
shlb
ficoms
jle
push
push
add
push
and
xor
je
add
in
push
sbbb
and
hlt
loopne
and
xchg
xchg
inc
adc
pushf
adc
jo
and
dec
or
sub
xor
lcall
dec
xchg
sbb
icebp
xchg
sub
push
cltd
cmc
je
jl
rcrb
push
sbb
rorb
push
pop
dec
scas
sbb
rclb
dec
add
adc
nop
pushf
xchg
sbb
push
pop
mov
cld
cltd
mov
mov
pop
sbb
push
int
dec
mov
sahf
jns
xchg
add
enter
loop
add
sbb
sbb
hlt
push
adc
and
push
cmc
mov
pop
push
cmp
loope
int3
mov
adc
hlt
dec
loop
mov
sbb
mov
popa
in
add
sbb
jb
push
or
or
sbb
loopne
ficomps
sbb
test
push
cmpsb
adc
xchg
mov
mov
push
adc
leave
test
jb
pop
xor
xchg
jne
out
mov
les
push
or
adc
and
jns
or
lock
ss
lcall
or
call
ljmp
xorb
mov
push
les
mov
ss
jae,pn
js
test
rclb
cmc
loope
mov
aam
pop
or
xchg
inc
xor
test
push
xor
xor
xchg
pop
lods
mov
mov
fdivl
popa
movsb
mov
xchg
mov
lret
xchg
leave
and
inc
sub
outsb
push
push
mov
ss
add
mov
aam
out
cld
dec
cli
cmp
test
adc
aad
add
add
mov
pop
adc
sub
push
leave
gs
sbb
jno
rcll
into
add
mov
and
flds
ja
or
subb
addb
push
add
dec
jg
addb
out
aaa
xchg
ja
sbb
push
or
in
enter
xchg
add
sub
leave
fs
or
mov
cmpsb
add
add
add
or
xor
or
sub
sub
add
dec
xchg
xor
es
inc
adc
dec
xor
dec
push
inc
adc
xor
inc
or
xor
mov
xor
fstl
adc
ljmp
xchg
test
lcall
xor
adcb
or
pop
clc
mov
and
or
mov
cs
dec
test
inc
pop
xor
in
dec
popf
lcall
inc
mov
push
dec
stos
mov
cwtl
nop
push
insl
lods
mov
dec
or
lcall
sub
fisubrl
lcall
mov
sbb
xchg
scas
sbb
data16
push
loope
dec
hlt
cli
mov
add
dec
sbb
pop
lret
ds
mov
mov
pusha
pop
add
cmp
pop
shlb
add
dec
shlb
inc
test
and
cltd
shlb
jl
jo
test
fwait
xor
jb
pop
dec
andb
and
roll
gs
mov
xor
and
add
sub
dec
or
scas
mov
dec
in
fcmovnbe
mov
cmc
loopne
inc
dec
xor
aad
adc
stos
lcall
pusha
insb
test
addl
pusha
pusha
jne
test
add
adcl
add
bound
mov
adc
inc
fmull
nop
shrb
mov
dec
dec
enter
adc
imul
les
or
leave
sahf
xchg
shrb
in
or
clc
nop
push
les
lret
xor
js
adc
mov
je
nop
loope
mov
dec
clc
xchg
fucomip
xchg
rol
insl
mov
imul
adc
add
stos
xorb
and
push
dec
dec
aam
dec
leave
inc
ds
daa
jne
push
es
mov
sub
pop
push
and
or
or
and
pop
lcall
lea
cmp
nop
adc
rclb
gs
jp
adc
push
xchg
or
cmpsb
repnz
adc
adc
xchg
or
jo
dec
stos
lcall
xor
cmp
and
or
add
enter
add
in
sub
fs
lcall
ds
mov
adc
mov
out
push
jle
imul
ds
adc
add
xor
dec
cmp
rolb
loop
gs
jne
rcl
mov
or
insl
lret
shr
adc
or
gs
es
rcrb
outsb
xchg
faddl
push
dec
popa
test
bound
xor
int3
mov
jo
scas
mov
testb
or
xchg
hlt
inc
subb
imul
add
add
mov
test
and
mov
add
add
push
xchg
mov
mov
xchg
add
jmp
xor
sbb
cli
mov
jp
add
pop
sub
jb
fildl
push
mov
xchg
lret
xchg
ljmp
pushf
ficoml
xchg
imul
rcrl
jns
pusha
nop
dec
daa
xor
mov
ds
mov
mov
add
cmc
mov
pop
add
rclb
cld
jo
data16
jp
cmc
xor
jo
lcall
push
mov
push
push
inc
and
jle
mov
xchg
mov
dec
mov
and
push
or
dec
insb
test
mov
loop
fiaddl
xchg
inc
es
sarb
add
repnz
add
xor
mov
sbbb
inc
loopne
lcall
movsb
bound
add
rclb
add
sbb
and
mov
lret
or
add
add
xchg
pop
mov
jo
mov
cli
test
in
mov
les
adc
mov
add
into
loopne
sbb
xchg
es
pop
test
jmp
mov
and
mov
ljmp
jne
xchg
rorl
push
pushf
ljmp
insl
add
dec
xor
fs
pop
and
test
arpl
fdivs
dec
int
or
fstenv
sbb
adc
mov
push
jl
cmpb
subl
xor
inc
jmp
test
push
inc
es
ret
add
enter
popa
adc
cwtl
fsubl
xchg
cs
mov
add
adc
xchg
add
lods
add
call
mov
xchg
pusha
scas
add
stos
insl
cmc
xor
sbbb
aad
sub
cmpb
adc
sub
shlb
dec
addb
and
cmpsb
adc
push
mov
ljmp
sub
cmpsl
sti
sbb
es
jno
jmp
add
mov
es
lcall
sub
pop
xchg
lcall
outsb
imul
mov
mov
mov
push
or
ljmp
adc
cmp
or
inc
dec
mov
xor
lea
mov
movb
push
pusha
mov
adc
mov
push
mov
sub
mov
sub
scas
push
dec
orl
inc
adc
dec
and
xor
insb
sbb
xchg
dec
xor
pop
xchg
inc
pushf
adc
xchg
push
lahf
xor
adc
xchg
mov
or
pop
and
clc
and
sub
xor
and
push
jmp
cs
and
sbb
call
inc
and
nop
inc
cmp
jbe
mov
aam
jnp
push
movsb
rcr
inc
fsubrs
das
mov
mov
xor
jb
mov
adc
adc
pop
in
fbstp
add
sub
and
aam
mov
cmp
sbb
rclb
adc
push
dec
xor
int3
or
dec
add
mov
rcrl
sbb
lcall
sub
movsb
lock
push
mov
cmp
pop
xchg
mov
push
rcl
sbb
push
add
sbb
outsb
andl
push
stos
push
orb
loopne
les
xchg
mov
fmuls
sbb
cmpsb
jns
push
dec
daa
mov
nop
shl
scas
push
sbb
and
pop
adc
sub
shrb
mov
pop
jb
xchg
scas
ret
or
and
pop
aad
xor
inc
movsb
test
or
inc
xchg
dec
pop
xchg
and
in
or
jo
subb
cs
data16
lock
ret
out
sub
adc
and
adc
mov
mov
inc
cltd
ret
loop
je
inc
or
int3
push
test
mov
inc
popa
lret
sub
add
adc
adc
mov
dec
or
or
icebp
xchg
gs
loop
pop
mov
and
imul
adc
sbb
cli
and
pop
mov
not
jb
popa
test
test
jle
cmp
lcall
and
or
and
mov
add
fwait
push
pushf
dec
rcrb
sbb
insb
loopne
or
sbb
pusha
push
cwtl
lea
inc
add
adc
inc
mov
sbb
mov
dec
xchg
sbb
or
ljmp
push
dec
shlb
add
adcb
call
xor
sbb
push
push
inc
shlb
insl
add
dec
and
or
add
aad
xchg
pusha
aad
js
or
repnz
adc
push
hlt
rolb
add
xchg
ret
bound
push
loop
test
adcb
daa
dec
xchg
movsl
test
pop
and
mov
dec
mov
xchg
lods
add
pop
add
xor
add
jo
cmp
xchg
sub
sahf
and
pushf
in
out
popa
xor
es
hlt
test
push
add
cli
ret
sub
dec
lock
cltd
loope
popf
push
in
sbb
jo
xor
mov
rcrb
sub
dec
push
test
xor
adc
les
mov
clc
fsubr
push
add
mov
adc
push
bswap
into
mov
sbb
test
mov
adc
push
push
or
cli
sub
add
call
add
dec
cli
or
adc
and
mov
push
cmpb
cmpsb
nop
cmp
xor
pop
ss
scas
sbb
mov
sbb
dec
test
test
fsubs
xchg
add
add
pusha
in
xor
push
adcb
es
jo
or
add
pop
xor
loop,pt
or
lods
and
stos
or
jne
rcrl
or
add
push
adc
addb
into
inc
rolb
mov
scas
call
cld
fdivrl
stos
ret
sbb
loopne
adc
cltd
cmpsb
xor
testb
andb
jbe
or
addl
cmpsb
sub
imul
sbb
push
push
cwtl
mov
jbe
adc
inc
xchg
or
push
sub
aad
jmp
or
scas
sub
sub
cwtl
add
cmpsb
xchg
jge
adc
xchg
scas
sahf
or
or
cwtl
sahf
jb
test
loop
sub
pop
test
or
and
pop
xchg
xor
adc
add
gs
sub
jo
cmp
or
dec
sub
cmp
popa
dec
sub
xchg
jb
bound
imul
aaa
push
bswap
ss
push
ret
inc
cli
loop
sub
lods
pop
mov
mov
outsl
pop
mov
pop
lret
mov
int3
push
mov
cmpb
add
lods
mov
xchg
test
add
int3
dec
rorl
adc
xor
loope
jb
mov
ja
cmp
pop
sarl
insl
das
out
in
out
push
loope
leave
js
es
dec
adc
inc
xchg
ret
out
adcl
or
xchg
lret
cli
jp
loop
push
lret
pusha
js
mov
jb
cltd
cli
sbb
loope
bound
lcall
jbe
cs
jbe
xor
xchg
or
adc
mov
jo
pusha
xor
jbe
or
out
dec
enter
movsbl
popa
inc
add
mov
inc
dec
fcomps
xchg
cwtl
mov
inc
push
xchg
sbb
and
test
push
cld
sbb
mov
addr16
sub
andb
or
clts
mov
mov
in
and
mov
subl
pusha
xorl
mov
rclb
add
js
repnz
roll
stos
nop
add
test
inc
xchg
xor
out
cli
pop
push
sub
pop
add
push
dec
cvtpi2ps
out
ret
insb
call
or
adc
adc
leave
or
sub
je
pushf
out
pushf
push
adc
call
adc
loop
dec
pusha
leave
mov
nop
test
mov
push
es
test
pop
nop
shll
mov
mov
shll
mov
loop
lcall
ds
push
add
pop
or
cli
es
xor
xchg
addb
in
or
clc
data16
arpl
or
fsubr
sbb
xchg
jne
jl
dec
insb
fldenv
mov
sub
sub
mov
loop
aam
cmp
jno
aam
cwtl
js
jo
cmp
hlt
pop
dec
jb
loop
movsb
cmp
pusha
cmp
andl
test
or
pop
and
add
xor
xchg
rorl
inc
mov
sbb
in
and
xorb
sub
and
cs
add
popa
or
push
cwtl
dec
addb
mov
test
push
loop
cmpl
les
ljmp
cltd
jne
mov
pop
pusha
pushf
insl
add
lcall
mov
in
lret
cwtl
sbb
push
pop
push
testb
or
aam
cmpsb
xchg
xchg
nop
aam
push
cmpsb
imul
add
mov
xor
or
shl
dec
xor
adc
stos
and
nop
loopne
push
es
or
pusha
xchg
push
sub
add
push
es
mov
stc
sbb
add
test
pop
insl
loopne
pop
adc
sub
xorl
ljmp
jl
push
je
cli
test
in
ret
push
orl
inc
loope
call
or
pop
mov
mov
and
xor
push
fidivrl
sarb
or
movsb
int3
js
add
mov
and
fisubrs
and
das
add
int3
dec
push
pop
add
pop
pusha
cmpsb
and
sar
inc
fs
cmpsb
mov
sub
inc
dec
xor
pusha
sbb
push
add
push
xchg
mov
mov
mov
ret
or
out
stos
mov
push
mov
loopne
arpl
sbb
les
inc
popf
sub
mov
test
mov
cmpb
or
cmpsb
dec
pusha
lret
popa
call
inc
stos
add
test
or
add
adc
lcall
fists
test
fsts
sarl
push
inc
add
xor
add
jp
xor
pop
add
movsl
push
xor
imul
dec
cmpsl
das
xchg
arpl
andb
ds
hlt
xor
jp
add
mov
pop
sbb
loop
pusha
and
roll
xor
mov
add
mov
shlb
out
ss
adcl
adc
xor
adc
jl
sbb
mov
lret
push
test
cmpsb
out
cmpsb
orl
inc
xor
pop
pusha
decb
mov
loopne
lret
pushf
push
mov
xor
mov
nop
xor
pusha
push
sub
lret
xchg
and
mov
cs
test
adc
nop
inc
sub
nop
fisubl
sbb
int3
lods
mov
sub
add
or
nop
add
fs
mov
push
sub
incb
inc
ret
adcb
mov
mov
test
call
add
aad
ret
test
test
out
dec
ljmp
mov
sbb
xchg
push
inc
mov
xchg
sub
test
sub
push
out
jo
test
les
adc
add
subl
xor
sub
or
scas
xchg
pop
inc
inc
add
int3
mov
call
and
or
inc
cli
hlt
jne
rorb
scas
mov
mov
push
push
int3
xor
pop
mov
push
mov
xor
cmp
adc
outsb
pop
shlb
cwtl
xchg
data16
in
dec
inc
dec
dec
loopne
enter
pop
sbbb
and
jmp
xchg
sbb
and
dec
test
gs
or
outsb
pop
mov
test
mov
mov
adc
pop
add
xchg
mov
push
or
xchg
call
dec
inc
add
loop
test
inc
out
in
sub
dec
orb
cmc
pop
adc
push
rorb
mov
and
fisubs
lods
xchg
leave
sbb
xor
mov
and
adc
xchg
and
push
inc
fs
add
fadds
lret
sub
or
les
inc
fcmovbe
pushf
sbbl
fnstenv
xor
je
cs
sub
sahf
les
mov
cmp
aam
orb
and
mov
dec
movb
roll
push
jbe
into
insb
test
mov
mov
xor
ret
gs
lret
les
inc
sub
in
add
and
imul
test
mov
loope
gs
jo
push
push
mov
pop
xor
pusha
enter
push
inc
sub
movsl
xchg
xchg
nop
fs
adc
push
inc
pushf
scas
pop
or
mov
aaa
cmp
or
hlt
lret
les
xorl
ror
fs
dec
and
dec
or
or
add
add
cwtl
push
inc
loope
push
pop
mov
add
in
xchg
xor
cmp
cli
loope
dec
lods
fmull
xchg
rclb
mov
mov
adc
fadds
mov
ds
push
and
inc
hlt
push
pop
nop
bound
pop
xchg
cmc
xorb
pop
or
cmp
or
nop
sarb
aad
add
fimuls
cs
or
xor
add
fisubrl
and
add
fisubrl
loope
movsl
rcr
ds
jae
outsb
pop
dec
cmp
push
nop
mov
lea
inc
addl
cmp
add
jns
mov
mov
arpl
sub
mov
dec
mov
or
dec
adc
call
add
xchg
adc
loop
jo
add
call
loope
nop
test
ret
jo
pusha
test
jo
adc
pop
inc
xor
xor
mov
add
mov
dec
push
faddl
inc
jne
or
xorb
test
int3
call
inc
xchg
orb
add
outsb
push
or
sbb
or
cmp
mov
or
xchg
fmul
outsl
mov
add
sub
rclb
dec
cmp
add
inc
rolb
inc
sub
inc
dec
xor
je
outsb
push
xchg
fidivs
dec
and
scas
dec
imul
cmp
adc
vandps
dec
push
lret
loop
xor
mov
xor
mov
mov
in
js
mov
les
add
test
ds
or
dec
push
test
inc
aam
pusha
push
das
push
lcallw
les
sub
pushf
dec
dec
loopne
mov
or
push
xor
jecxz
mov
jb
addb
test
push
sarl
insl
xor
ret
fcmove
popa
push
mov
sub
sbb
imul
cli
outsb
mov
mov
sub
or
stos
jne
aam
dec
loopne
movb
mov
sub
cltd
pop
imul
xor
push
push
push
xor
imul
push
loop
mov
mov
es
dec
add
hlt
xchg
pop
int3
adc
rcl
ficoms
data16
sbb
ret
or
and
adc
jp
push
sbb
xchg
xor
mov
xchg
mov
add
adc
imul
sbb
xchg
roll
sbbl
cwtl
mov
cli
fisubs
mov
xchg
ret
sub
jo
add
lock
xor
in
sub
outsl
mov
mov
roll
add
and
adc
into
ljmp
pop
imul
ljmp
arpl
add
add
inc
jp
es
rcrb
push
fadds
int3
pop
jle
pop
or
and
mov
dec
icebp
add
sbb
cmpsb
pusha
insl
cmp
pop
ret
sbb
mov
add
dec
sahf
mov
sub
sub
xchg
cmp
inc
jo
fcoms
lret
test
sub
mov
fsubrl
push
out
pusha
push
test
xor
push
lock
lcall
mov
pushf
inc
sbb
adc
push
lock
gs
in
add
popa
int3
inc
mov
inc
sbb
and
xchg
scas
lds
or
call
test
jo
add
enter
lods
lods
addb
push
mov
or
pusha
sub
repnz
inc
loopne
inc
clc
add
xchg
xchg
xor
sub
xor
mov
loop
push
test
mov
add
sub
mov
inc
and
and
cs
jg
pushf
stos
imul
xor
inc
xor
int
cwtl
inc
push
xor
sbbl
adc
ret
sbb
test
out
test
xor
adc
cmpsl
or
sub
inc
test
and
icebp
xor
enter
cwtl
movsl
scas
or
push
sbb
outsb
mov
or
and
subb
and
mov
dec
xchg
add
inc
data16
ds
add
testb
push
pusha
test
xor
add
push
sahf
xor
pop
mov
gs
xor
lock
mov
call
sbb
sub
data16
push
aam
hlt
cmc
dec
mov
push
sbb
add
add
popa
daa
sub
loopne
adc
insb
imul
add
rcrb
sarl
jle
pop
push
adc
sarl
je
sub
cli
mov
dec
ret
xchg
test
adc
in
mov
push
and
js
mov
xor
test
or
mov
test
mov
jo
or
add
xchg
ljmp
gs
sbb
orb
push
push
sbb
sbb
es
insb
add
dec
in
outsb
inc
sbb
dec
ret
dec
cmpsb
test
sub
loopne
or
popf
xchg
dec
sahf
cli
pop
popa
cltd
rolb
push
add
adc
fs
xchg
enter
js
adc
xchg
add
push
sbb
or
lcall
outsb
jb
popa
js
shlb
cltd
rcll
jl
les
data16
out
push
repnz
insb
and
push
push
les
mov
sub
mov
push
inc
lods
fs
cmp
and
cs
int3
lret
adc
or
push
or
out
add
mov
rolb
movsb
dec
sbbb
xor
adc
fs
add
and
pop
mov
dec
sub
xchg
xor
fmul
xchg
or
rolb
cmp
xchg
or
push
inc
aam
add
mov
dec
loope
outsb
sahf
sbb
push
pushf
hlt
inc
cmp
and
mov
jl
sbb
push
js
fiaddl
dec
dec
loope
and
xor
shlb
pop
mov
sbbl
nop
adc
dec
sbb
movb
and
jo
lea
idivb
loopne
pusha
xor
jl
mov
and
mov
sbb
sub
es
xchg
pop
dec
cmp
mov
imul
cmp
xor
push
cs
mov
add
push
and
mov
in
mov
pushf
test
int3
jmp
xor
ret
into
inc
cmp
nop
push
loope
inc
rolb
or
xor
dec
mov
lcall
push
add
push
lea
mov
pusha
pusha
adc
addr16
add
pop
adc
orb
in
xlat
or
xor
pop
push
sbb
call
add
dec
loope
into
sub
inc
adc
js
or
add
xchg
sbb
divl
lods
sbb
sub
out
hlt
aam
add
push
daa
xor
pop
mov
dec
inc
int
adc
int3
sub
leave
data16
adc
sub
add
sub
push
push
loope
xor
rcll
pop
push
or
testl
loop
add
out
fsub
sahf
jne
pusha
xchg
orl
ret
xchg
scas
jl
ret
mov
addb
xchg
in
sbb
xor
xchg
adc
lret
lock
sbb
xchg
push
add
je
and
lret
xchg
pop
repnz
and
dec
push
cmp
inc
gs
scas
es
add
push
sahf
pop
cli
mov
loopne
je
lea
add
jp
adc
and
loopne
test
or
dec
xor
xor
sbb
add
insl
call
sbb
stos
cmc
pusha
mov
in
ret
fldenv
dec
loop
faddl
push
adc
push
mov
and
data16
in
mov
jb
js,pt
aad
xchg
mov
mov
loopne
and
sub
add
push
and
cbtw
dec
push
enter
add
pop
adc
fimull
dec
push
fs
out
mov
cwtl
cmp
mov
push
or
enter
nop
cmp
cmp
and
push
sbb
add
loop
fmull
xorb
sbb
mov
adc
mov
dec
adc
addb
jle
xchg
inc
or
xor
test
sub
jnp
jne
cwtl
fs
mov
ds
fs
lret
jp
cmc
xor
mov
mov
enter
leave
add
nop
adc
adc
testb
fisubs
into
adcb
xor
add
mov
cmpsl
orl
pop
fisubrl
mov
fisttps
insl
sub
dec
dec
add
push
jl
out
and
lret
pop
cltd
cld
push
fadd
xor
xor
and
jnp
inc
xor
test
xor
in
add
mov
loopne
ljmp
mov
xor
dec
and
adc
dec
and
add
and
ficoml
pushf
notb
mov
inc
sub
push
add
cmp
adc
mov
xchg
fcmovbe
rolb
jge
sbb
dec
sbb
push
push
cli
lret
test
subl
xchg
sub
fidivs
inc
andl
sbb
mov
jp
test
stos
xorb
insb
lcall
and
and
add
test
push
or
or
pop
into
xchg
pop
rolb
push
jp
cli
ficoms
and
push
jp
or
arpl
movsb
mov
loop
ret
ret
jecxz
pop
test
mov
mov
xchg
adc
and
pop
push
xchg
pop
mov
dec
add
xchg
sub
adcb
bound
mov
cwtl
roll
mov
adc
mov
inc
ds
mov
data16
inc
xchg
inc
loopne
or
add
dec
decb
test
add
pusha
push
insb
andl
pushf
pushf
push
sbb
adc
shlb
push
test
xor
fiaddl
mov
sub
clc
sbb
inc
fsubs
imul
cld
insl
nop
adc
and
adc
push
insl
in
je
cmpsb
daa
shlb
test
mov
dec
add
shll
add
mov
icebp
in
sub
push
adcl
xchg
and
pop
mov
adc
xor
je
adc
cmpsb
add
mov
mov
or
and
xor
inc
shrl
and
or
add
xorb
add
add
sbb
sub
test
call
cwtl
sbb
sbb
js
add
sbb
test
test
jo
repnz
cli
loopne
inc
add
sub
mov
adcl
dec
test
rcr
js
lock
push
mov
cwtl
or
andb
mov
gs
dec
cmp
push
test
dec
cwtl
mov
push
push
out
add
mov
mov
insb
pusha
loopne
gs
gs
adc
mov
ss
int
push
adc
mov
and
aam
lcall
adc
add
sbb
inc
loop
lret
mov
mov
mov
jb
clc
xchg
test
inc
outsl
push
add
fcoml
add
cmc
sub
addb
xchg
mov
aad
nop
add
jbe
cmp
lret
and
cs
loope
lcall
mov
push
ljmp
subb
sbb
push
sub
add
xlat
push
inc
orl
xor
mov
jo
movsb
xor
sahf
mov
add
add
push
shll
or
add
sbbb
mov
adc
cmp
and
jb
mov
sbb
xchg
add
push
adc
push
xchg
rorb
movsl
mov
jle
and
pop
add
nop
lret
sub
adc
cmp
cmpsb
sbb
rclb
call
inc
ret
inc
or
xor
popf
add
cs
cwtl
add
jb
add
test
jns
enter
inc
sbb
jp
cwtl
int3
push
mov
orl
lock
sbb
test
movsb
add
jecxz
nop
inc
jl
pop
movb
shlb
int3
dec
popa
jle
adc
xchg
test
sbb
les
mov
rcrl
add
add
cli
add
cmp
push
je
cmp
jp
xor
xor
scas
mov
push
pop
sub
inc
sub
outsb
sub
mov
cld
jne
and
rcrb
cmp
mov
push
or
in
cli
add
xchg
or
out
push
add
mov
stos
pop
xchg
sbb
add
test
and
sub
or
gs
push
cmp
push
push
add
scas
dec
inc
ss
xchg
stos
sub
dec
mov
adc
pop
add
call
inc
hlt
insw
cmp
mov
adc
jne
mov
dec
cmpsb
sbb
popa
push
pusha
sbb
inc
imul
les
xor
add
push
add
xchg
stos
dec
sbb
cmp
cmp
inc
dec
cmpsb
test
pushf
sub
mov
push
sub
or
push
sub
xchg
or
test
mov
ljmp
mov
pop
addb
sbb
js
push
add
mov
in
rorl
stos
mov
push
push
add
test
push
and
cmpsl
add
data16
inc
inc
das
call
aam
sub
push
push
mov
jno
sub
jo
xchg
sub
loop
sub
dec
mov
aam
outsb
inc
fisttps
add
adc
pushf
inc
cmpsl
push
js
lock
add
pop
ds
loope
pop
fs
mov
rorb
pop
sbb
cli
negb
jb
push
xor
lret
sub
push
inc
push
fdivrs
and
loopne
push
je
lcall
es
and
adc
inc
cmp
jo
mov
push
lcall
push
and
cwtl
push
add
loopne
adc
mov
or
in
jl
add
add
add
pop
sub
stos
loopne
mov
loop
add
push
ljmp
push
sub
popa
and
xor
scas
sub
add
mov
adc
out
add
rorb
aam
shlb
adc
call
bound
loopne
add
fisubl
jb
test
test
es
or
mov
inc
xchg
or
ret
and
xchg
add
adc
push
je
lcall
hlt
aad
and
or
mov
and
xor
xor
or
pop
fisubrl
mov
ret
rclb
mov
dec
rcrb
mov
pusha
mov
bound
sbb
jo
jo
push
jp
loopne
push
dec
jns
scas
mov
movsl
push
enter
les
orl
sub
xor
scas
bound
cltd
mov
enter
scas
or
jle
dec
sub
mov
adc
test
sub
es
push
cwtl
adc
xor
inc
test
push
pop
inc
inc
and
inc
sbb
xor
or
and
xchg
xchg
mov
mov
movsb
inc
mov
popf
sbb
aam
dec
inc
sub
inc
push
int3
fs
push
cmp
pop
les
bound
add
jo
xor
inc
repnz
movsb
adc
test
pop
sbb
jecxz
xchg
mov
mov
into
push
add
jb
mov
add
bound
or
add
pushf
ds
cmpsb
pop
mov
jo
push
cld
inc
and
mov
and
and
inc
add
gs
dec
pop
rolb
add
and
xor
inc
dec
in
inc
sbb
fisttps
addl
dec
ret
loopne
loopne
outsb
lcall
push
outsb
mov
jg
jg
movsb
dec
clc
ret
xor
dec
cmp
icebp
xor
imul
xor
ret
mov
adc
enter
aad
loopne
test
sub
test
repnz
jo
loop
push
dec
pusha
cmpsb
xchg
inc
dec
stos
inc
mov
int3
pusha
mov
inc
jno
test
add
xor
dec
adc
test
push
add
bound
add
cli
test
push
push
xchg
push
pop
rolb
movsb
pop
mov
aam
sub
xorl
dec
and
shlb
adc
inc
xor
inc
and
sub
ret
or
xorb
test
call
add
inc
inc
adc
and
add
dec
dec
xor
ljmp
or
mov
fs
clc
data16
dec
or
hlt
push
and
inc
inc
sbb
xchg
leave
pusha
add
mov
cwtl
shlb
mov
mov
jp
mov
mov
mov
enter
sbb
mov
jbe
ret
sarl
xor
pushf
cs
dec
xor
mov
add
les
pusha
xor
xor
add
adc
sub
insb
cmp
mov
test
mov
jp
xchg
ficoml
jle
dec
add
mov
push
je
pusha
inc
movsl
lods
pop
rolb
sbb
or
addb
adc
adcb
push
add
mov
fs
sbb
pop
push
or
pop
test
orb
and
mov
or
inc
or
or
mov
sub
lret
fildl
and
dec
dec
push
sub
lods
pushf
stos
push
add
shr
cmc
icebp
js
inc
add
and
mov
retw
loopne
outsl
push
jo
stos
lock
xor
hlt
xor
pusha
add
lods
inc
jp
ljmp
cmpsb
imul
pop
push
mov
sarl
movsb
xor
js
dec
fmuls
repnz
insl
movsb
dec
sbb
cmp
mov
xor
mov
inc
sbb
rcrb
mov
bound
add
xchg
push
push
push
mov
xchg
sub
das
inc
sub
rcl
lcall
or
js
inc
cltd
shlb
mov
dec
adc
pop
inc
rorl
dec
insb
jp
push
jno
test
cwtl
ljmp
push
and
aam
rcll
xchg
add
cld
clc
or
add
sbb
cwtl
jo
cld
mov
xor
clc
push
aad
push
sbb
or
or
push
mov
sub
loope
sbb
inc
loop
mov
xor
add
xchg
dec
rcll
add
mov
push
add
lods
or
outsb
rolb
dec
imul
jle
pop
and
xor
or
jo
and
testb
cli
dec
lock
test
mov
cmpsb
inc
mov
jns
incb
or
jo
xor
adc
lret
sub
loop
addb
test
dec
adc
and
jo
dec
inc
cmp
pusha
or
dec
push
ss
ds
inc
test
rorb
pusha
push
or
pop
mov
les
xor
pop
mov
sahf
imul
xchg
or
js
pop
mov
test
and
dec
push
xor
cmp
xor
sbbb
inc
sarb
pusha
loopne
adc
sub
scas
mov
in
dec
icebp
xor
or
sbb
jne
cli
in
in
add
shll
and
xchg
fs
mov
scas
dec
fmul
andb
je
pop
dec
fs
add
lret
cmp
adc
xor
sbb
dec
xor
andb
inc
mov
divb
mov
or
adc
outsb
gs
push
rcl
ljmp
dec
push
or
mov
sub
dec
sbb
call
cmp
test
cmpsb
pusha
fmuls
loopne
xor
mov
jns
mov
xchg
aam
insl
out
mov
dec
cwtl
cltd
pop
pusha
les
cltd
or
hlt
lock
mov
or
or
xchg
test
lea
mov
test
fwait
xchg
jbe
dec
rol
fimuls
add
push
test
pusha
cmpsb
insb
add
bound
add
movsb
xchg
enter
xchg
mov
inc
mov
sbbl
int3
cwtl
dec
push
add
push
add
popa
add
repnz
pusha
add
fisubl
dec
push
sub
nop
push
inc
ds
sarl
xchg
mov
daa
mov
add
push
daa
push
add
adcl
sub
dec
test
es
inc
and
pusha
jbe
add
icebp
push
inc
mov
inc
int3
pop
jns
xchg
sbb
sbb
sbb
adc
add
jg
push
std
call
jge
scas
pop
mov
es
sub
stos
aam
push
and
sbb
loopne
push
mov
lods
test
xor
pop
mov
mov
xor
pop
sbb
xchg
testb
dec
mov
mov
sbb
bound
add
or
sbb
and
mov
pop
stos
ljmp
xchg
loop
pop
pusha
bound
adc
pop
xor
add
dec
or
dec
xor
pop
push
clc
outsb
adc
cli
adcb
sbb
lret
sub
adc
cli
sbb
test
loop
push
xor
xor
cli
mov
scas
sub
insb
andl
je
or
stos
ss
popa
adc
nop
sbb
and
add
sub
lods
or
cwtl
mov
sbbl
clc
loop
jecxz
enter
data16
or
inc
fs
jo
add
je
lock
or
popf
add
or
sbb
mov
call
outsb
lcall
mov
dec
dec
jp
scas
inc
movsl
mov
out
addl
repnz
xor
cwtl
fs
xchg
adc
cmp
enter
mov
aad
xchg
or
inc
and
inc
jmp
in
test
mov
shlb
adc
imul
and
mov
xor
sbb
and
or
or
mov
add
inc
sub
push
sbb
dec
adc
jb
pop
sahf
mov
or
or
bound
mov
mov
and
mov
mov
in
add
leave
cmp
mulb
sub
adc
hlt
pusha
mov
stos
aad
add
sbb
dec
push
fcmovu
aad
and
rclb
xor
sub
push
or
jne
loop
dec
mov
cmp
xchg
scas
jo
sbb
sub
popa
xor
push
aaa
addl
pusha
dec
mov
daa
or
xor
jo
add
aaa
lcall
xor
test
push
cs
lock
scas
mov
mov
mov
aad
or
add
jns
adc
xchg
les
add
add
test
clc
movsb
mov
popa
sub
or
sbb
movsb
xchg
inc
and
popa
or
cwtl
inc
test
int3
loop
jmp
inc
push
test
mov
rcl
jbe
add
cmp
and
xchg
or
push
lret
sub
push
push
lds
inc
scas
cmp
lds
adc
or
xchg
or
cmc
dec
sbb
sub
xorb
lret
mov
and
int3
pusha
and
push
push
int3
or
cvtdq2ps
adc
xchg
adc
cmpsl
push
sbb
xchg
sub
inc
popa
and
inc
xor
mov
js
into
in
mov
jp
enter
sbb
dec
je
dec
lret
lcall
add
inc
mov
mov
test
lock
cmp
sub
test
xorl
ret
add
gs
xchg
andb
or
sbb
add
add
or
mov
or
ret
dec
inc
test
test
test
stos
or
jge
xor
mov
jle,pn
loop
lret
rolb
add
xor
xor
add
push
sbb
jp
or
cltd
cmp
and
adc
and
cwtl
xor
in
mov
mov
xor
pop
jo
push
addb
subb
sub
inc
push
ss
rorl
ret
xchg
xor
push
cmp
scas
test
push
sbb
in
dec
movsl
nop
or
sbb
data16
jno
sbb
push
push
pop
mov
sub
and
dec
cltd
mov
and
arpl
and
pusha
push
fcoms
inc
into
sub
push
ret
jl
dec
xor
imul
pop
push
mov
stos
xchg
addb
add
or
xor
ret
sub
lods
jl
xor
add
ret
xchg
inc
jle
fs
rorb
nop
add
loope
cmpsb
push
shlb
test
dec
fisubl
icebp
add
ds
movb
jo
inc
or
add
xchg
enter
push
push
xor
cmc
xchg
dec
add
mov
adc
sahf
dec
mov
inc
rorb
push
cld
enter
fadds
inc
cld
and
scas
sbb
jo
mov
push
sbb
test
cmp
dec
lcall
inc
mov
cmc
lret
or
adcl
ds
adc
lcall
js
push
lcall
push
push
enter
les
std
call
inc
sub
lahf
jmp
and
push
ljmp
push
xor
adc
xchg
ret
jne
or
add
dec
repnz
fstpl
pop
movsl
and
stos
fs
repnz
adcb
cmp
call
lods
xorb
cmpsb
aaa
and
push
sub
inc
adc
lods
push
shlb
int3
add
incb
push
mov
add
or
out
mov
push
sarb
out
jb
push
outsb
out
adc
pop
cmpl
sbbb
imul
js
mov
in
mov
sbbb
add
pusha
jbe
push
loopne
data16
sub
adc
or
push
dec
xor
inc
jl
sbb
sbbb
dec
dec
inc
fs
or
add
loopne
or
orb
and
inc
mov
and
add
inc
mov
dec
divb
into
jb
sbb
add
subb
test
mov
dec
fs
adc
or
sbb
sahf
cli
bound
nop
and
movsl
mov
inc
xor
inc
xchg
sbb
dec
dec
xor
test
fwait
jo
mov
or
dec
data16
dec
mov
jno
mov
loopne
sbb
mov
or
sub
push
dec
push
dec
fidivrs
ret
les
ss
lods
aad
arpl
scas
clc
jne
rol
xorb
clc
je
or
insb
dec
dec
sbb
rolb
xchg
sbb
push
orl
inc
add
adc
loop
clc
rorl
pop
loopne
in
enter
add
test
xchg
lock
es
lock
imul
xor
push
pop
mov
hlt
mov
pop
imul
mov
cld
or
pop
xor
or
mov
and
mov
ret
push
add
xchg
add
clc
or
fwait
dec
pop
pop
clc
mov
add
push
push
call
cwtl
fdivl
dec
cwtl
into
les
xor
push
sbb
imul
fmull
sbb
mov
inc
or
dec
sub
adc
or
lret
fcoml
cmp
dec
inc
and
in
jl
mov
sub
sbb
pop
xchg
push
outsb
insb
add
adc
pop
pop
xchg
sbb
repnz
add
inc
les
cli
dec
test
ljmp
fadd
add
or
inc
push
push
iret
movsl
pop
pop
xor
push
dec
push
dec
inc
mov
dec
push
imul
inc
aam
test
xorb
pop
pusha
je
and
dec
lock
addl
rcr
imul
adc
xchg
test
push
outsb
fistpll
jbe
sbb
push
mov
fmuls
das
add
jne
adc
and
mov
sbb
or
lcall
sbb
lds
sub
rol
adc
test
and
push
inc
pop
push
rcll
inc
orb
dec
xor
adc
cmpsb
lock
jg
nop
or
add
adc
into
fisubs
xor
mov
cmc
or
or
pop
mov
movsb
xor
or
sbb
adc
pop
or
jbe
test
and
in
xor
add
insb
rorb
inc
cmp
mov
int3
add
or
adc
test
or
inc
jb
nop
mov
test
je
pop
mov
add
sub
faddl
add
fisttps
rorl
loop
lret
add
cmp
mov
adc
push
adc
subb
into
inc
loop
fdivr
mov
sbbb
pusha
jo
push
mov
insb
cs
popa
lock
adc
leave
push
push
cmp
sub
inc
inc
sbb
adc
jbe
push
lcall
sahf
cmpsb
mov
add
push
test
pusha
and
jmp
pusha
fs
jno
jp
outsb
inc
push
adc
xor
sbb
xchg
push
cltd
loop
jl
push
sub
jo
gs
popa
and
mov
and
inc
mov
fistps
sub
or
dec
dec
testb
sbb
add
mov
imul
pusha
and
adc
and
mov
fs
xorb
or
hlt
sbb
inc
mov
cmp
lahf
orb
mov
shll
rol
loop
hlt
shll
jb
cmpsb
mov
or
imul
je
cmpsb
push
rol
addb
dec
icebp
jb
pop
xor
push
loop
in
fcomp
test
leave
movb
inc
dec
rcrb
add
stos
jns
xchg
inc
sub
inc
xchg
into
pusha
rcll
sbb
pop
inc
pusha
jp
dec
mov
mov
mov
mov
jo
repz
mov
clc
addb
lcall
or
mov
shlb
ret
xor
xchg
pop
inc
je
dec
inc
nop
push
mov
sbb
loop
xchg
xchg
pop
xchg
push
inc
loopne
sbb
sbb
out
or
pushf
mov
and
jo
outsb
lret
or
push
fld
test
push
adcb
push
test
subb
mov
rclb
cmp
push
into
cwtl
sub
addb
add
xor
sarb
loope
adc
outsb
mov
cli
dec
sub
push
inc
dec
sub
and
cmp
sbb
call
test
mov
movsb
or
cmp
and
sub
jle
insb
enter
inc
jb
sbb
cmp
xchg
cmp
cmpsl
jno
mov
test
pusha
je
push
adc
pop
xor
dec
fcmovu
loop
pusha
and
adc
or
mov
sbb
cltd
or
sub
pop
and
mov
or
outsb
xor
gs
cmp
mov
jb
xchg
shll
dec
or
adc
test
fcoms
stos
mov
hlt
loopne
ds
je
int3
ds
fs
add
or
mov
mov
push
push
xor
lods
enter
test
movsb
xchg
adc
scas
data16
sub
mov
mov
movsb
fs
sub
les
test
push
lods
andl
divb
cmp
bound
bound
out
fcom
sbb
mov
add
mov
mov
cmc
aam
add
jbe
jl
or
cmp
rolb
hlt
push
andb
cli
int3
ret
sbb
mov
es
and
jo
ds
aaa
and
adc
and
pop
push
and
inc
int3
sub
pop
xor
and
mov
inc
or
push
and
mov
fcoms
inc
sub
scas
add
pop
inc
adc
xchg
hlt
push
ljmp
mov
add
inc
sub
lret
xor
mov
xor
sbb
add
mov
xchg
sub
sbb
and
jne
insb
dec
sub
cs
push
and
test
test
inc
or
addb
dec
popf
insb
loopne
sbb
mov
cwtl
cmpsb
inc
push
movsl
sahf
jle
jne
push
cmpl
push
xor
push
or
dec
nop
out
mov
ljmp
xor
iret
add
inc
xor
or
sbb
movb
enter
andb
push
mov
inc
add
add
lods
sub
imul
es
sbb
add
mov
and
adc
dec
loopne
push
push
movsb
lret
lods
and
out
sbb
xchg
mov
pusha
xchg
sub
movsb
arpl
insl
dec
and
sub
aad
sbb
movsb
pop
lods
cld
adc
dec
xchg
sbb
nop
push
push
and
xor
pop
push
popa
inc
adc
push
cmp
cmp
int3
inc
cli
pop
sbb
or
push
les
pop
pusha
add
mov
mov
in
and
add
mov
xor
push
nop
out
fiaddl
nop
pop
shlb
add
add
add
lds
je
pop
cmpsb
es
push
addl
sub
lods
dec
ss
xchg
cmp
dec
test
adc
push
pop
imul
cwtl
sbb
ss
push
xor
les
adc
nop
mov
jp
test
testb
inc
push
into
xchg
and
xchg
js
adcl
mov
push
push
lods
inc
mov
adc
outsl
test
xchg
or
pusha
sub
push
fimuls
jno
add
pop
jb
sahf
fsubs
push
and
aam
dec
jo
data16
cs
es
stos
pop
add
ss
mov
testb
mov
mov
or
js
test
mov
pusha
lret
out
push
mov
mov
or
rolb
loopne
dec
push
jle
xchg
and
movsb
mov
cwtl
adc
inc
shrb
add
add
xor
es
mov
sub
add
mov
sub
fs
xchg
cmp
test
rcr
imul
add
push
mov
push
orb
push
inc
push
sbb
repnz
jb
roll
rcr
sbb
mov
add
or
or
divb
mov
pop
orl
xchg
orb
inc
or
pusha
push
dec
inc
adc
add
add
xchg
inc
scas
add
lcall
cmp
pusha
and
sub
adc
xor
push
mov
ret
int3
dec
js
adcb
adc
and
pop
shlb
into
jae
sub
in
cmp
fdivrs
adc
movsb
cs
xchg
mov
test
lock
fcom
ret
bound
and
mov
jmp
cmc
push
jp
aaa
sub
fcoms
push
dec
loop
xor
xchg
push
les
faddl
call
bound
sbb
xchg
int3
xorb
pop
xchg
test
jp
jns
cli
or
xor
scas
inc
adc
mov
xor
cs
cwtl
jo
scas
imul
jb
pop
add
mov
mov
add
or
inc
and
je
lret
add
dec
sbb
jbe
cli
mov
mov
test
xchg
adcb
or
push
adc
inc
mov
dec
mov
inc
push
mov
mov
loope
and
push
add
nop
es
adc
adc
add
inc
push
push
push
aad
add
leave
xorb
fcoms
mov
movsl
pushf
xlat
xor
cltd
and
cmpsb
fisubs
pop
xchg
les
or
adcb
xor
dec
or
dec
push
dec
ljmp
daa
cs
add
les
cmp
bound
and
pop
outsb
sbb
jno
ds
mov
pop
sub
ret
push
ds
or
mov
pop
pop
into
add
ljmp
mov
xor
push
xchg
mov
add
ds
frstor
push
or
rolb
mov
icebp
nop
sbb
dec
bound
push
addl
dec
loopne
dec
push
pop
or
sbb
push
sub
or
xchg
add
sub
pop
dec
dec
les
inc
cli
movsl
repnz
pop
sbb
sub
and
jbe
xchg
les
xor
adc
or
es
pop
mov
sbb
sbb
sahf
cli
es
bound
andb
sbb
jo
mov
mov
xchg
adc
pop
mov
dec
loope
dec
mov
addl
ret
dec
push
push
fsubl
mov
pusha
push
stos
dec
xor
mov
subb
lods
adc
and
loop
mov
ss
das
inc
dec
ljmp
cmp
adc
and
sbb
xchg
add
int3
daa
push
and
add
scas
push
ret
sbb
bound
cmp
sar
xchg
or
ret
repnz
or
dec
insb
ljmp
xor
lock
mov
dec
sub
es
test
mov
inc
xor
mov
pushf
dec
loope
jge
mov
or
pop
mov
shrb
cli
push
dec
add
rol
mov
and
ficompl
or
pop
xor
mov
mov
sbb
loope
pop
andl
adc
mov
or
gs
enter
and
add
aaa
inc
xor
adc
mov
bound
test
gs
dec
push
call
jb
shll
add
xor
loope
popa
and
pop
test
rclb
sbb
adc
push
sbb
pop
enter
rcrl
shlb
adc
add
rclb
fnstcw
xchg
xchg
and
push
mov
cmp
inc
push
push
imul
sub
push
mov
fs
inc
and
insb
lock
cwtl
popa
add
or
pop
or
sub
push
inc
test
mov
and
out
inc
mov
inc
inc
lret
xchg
cwtl
add
adc
cmp
test
pusha
or
out
es
and
sbbb
lret
inc
dec
pop
clc
xchg
or
or
jo
xchg
rorb
fdivs
add
fwait
sbb
movsl
and
das
add
shlb
fisubrs
push
jb
or
in
push
add
jns
in
nop
shl
cmp
add
adc
add
adc
fisubl
and
dec
push
and
rclb
mov
inc
mov
xchg
cltd
dec
clc
clc
pushf
call
xor
cbtw
shrb
or
dec
cltd
rol
adc
jo
xor
mov
fcompl
xor
data16
xchg
shlb
fisubrl
add
mov
cmpsb
add
ret
xor
stc
hlt
and
sbb
sbb
pop
push
xchg
vfnmsub213ss
cmovo
inc
dec
sub
cmpsl
inc
mov
dec
xor
hlt
mov
adc
adc
mov
jo
sbb
test
nop
mov
adcb
cmpsb
mov
push
and
sub
push
test
jne
sub
adc
pusha
sub
mov
shlb
add
sbb
rclb
push
cwtl
sub
sbb
sbb
sbb
js
push
adc
and
push
test
add
test
ret
stos
out
inc
sub
push
jne
pop
dec
mov
dec
out
sub
popa
mov
gs
push
push
sub
mov
inc
dec
mov
loopne
aad
add
ljmp
push
pop
and
inc
sub
mov
xchg
xor
fsubrl
arpl
fiadds
pusha
sub
pusha
cmp
mov
or
gs
cli
test
or
and
inc
popa
ret
cmp
les
ret
movsb
ficoml
nop
mov
cmp
push
popf
test
cli
repnz
inc
and
bound
or
add
pop
xor
mov
xor
jge
jle
scas
cwtl
adc
add
fdivl
jae
jl
sbb
mov
insb
and
adc
xchg
mov
add
rolb
aam
add
add
adc
lds
xor
push
mov
fs
test
push
mov
insb
mov
dec
inc
push
or
jl
mov
psubusb
or
sahf
jno
sub
mov
or
add
sub
push
adc
scas
pop
adc
inc
add
or
pushf
xchg
adc
les
repnz
dec
sbb
push
repnz
and
sbb
xchg
ss
add
dec
mov
push
push
push
and
xor
test
es
sbb
insl
jbe
cmpb
mov
or
sbb
xchg
and
xor
xchg
lea
ret
dec
cmpsb
test
add
adc
nop
loopne
and
inc
test
je
mov
cmp
and
lcall
sub
jne
mov
add
lret
add
mov
sbb
movsb
mov
mov
add
xchg
cwtl
xor
les
mov
mov
adc
push
push
and
inc
push
pusha
push
nop
lock
and
mov
push
mov
loope
addr16
sarb
mov
mov
and
pusha
repnz
add
jp
add
dec
add
js
xchg
mov
adc
cmp
cmp
push
ror
or
daa
mov
out
mov
fimull
cs
push
rorb
mov
insb
negb
gs
leave
gs
stos
mov
and
test
adc
dec
add
adc
gs
jns
je
dec
or
fs
dec
or
mov
push
mov
subl
shlb
mov
rorl
das
push
sub
sbb
test
nop
test
xchg
add
fmul
jne
or
sub
lea
fidivs
nop
cmpsb
xchg
dec
cwtl
mov
cmp
jb
dec
mov
popa
push
add
sbb
daa
sahf
test
in
cmp
test
or
xor
and
adc
mov
xchg
and
xchg
int3
xchg
pushf
mov
and
lods
adc
into
xchg
jl
dec
and
lds
aad
sub
add
mov
lods
dec
inc
or
arpl
test
and
push
loope,pn
adc
movsb
inc
cltd
pop
inc
mov
pop
mov
gs
pop
adcb
push
add
andb
orb
popa
movsl
add
cmpsb
adcl
adcb
aad
pop
jbe
insl
ds
sub
push
inc
andb
and
movb
mov
popa
lcall
push
or
adc
popa
insl
lods
inc
inc
call
imul
mov
loop
mov
imul
data16
xchg
pop
and
andb
xor
adc
dec
pop
push
outsb
push
test
or
jp
jae
or
dec
inc
addb
scas
repnz
adc
loope
jb
repnz
and
sub
mov
rcl
adc
and
movsb
xchg
pop
bound
call
mov
fiadds
mov
addb
pusha
shlb
cltd
out
sbb
fadds
push
dec
call
cltd
pusha
int
sbb
rolb
xor
or
roll
jle
mov
push
xor
rcr
sbb
or
push
popa
sbb
mov
sbb
fidivs
adc
and
lods
int3
loopne
int3
mulb
repnz
or
gs
mov
adc
subb
les
sbb
leave
dec
js
or
or
jo
lcall
adc
pop
sub
mov
loop
add
push
call
dec
addb
xor
ficoml
xor
lcall
and
and
jo
adc
pop
xor
test
sbb
jo
push
inc
faddl
lea
push
ss
lods
xchg
or
enter
push
fisttps
fdivs
test
and
mov
mulb
push
sbb
adc
xor
call
mov
pop
mov
xor
ret
adc
shrb
push
call
icebp
std
mov
jb
js
cmp
sub
sbb
dec
xor
xchg
xor
gs
xchg
outsb
push
xchg
adc
mov
rcrb
cmpsb
push
lcall
dec
add
stos
cmpsb
pop
mov
sub
mov
cld
rorb
test
fs
cs
lret
mov
test
jmp
push
xchg
sbb
xchg
insb
lret
xor
jno
push
test
add
mov
shlb
mov
nop
fdivrs
add
out
add
sbb
scas
add
ret
loop
cld
test
xchg
dec
sub
insb
inc
sub
mov
dec
test
add
popa
sub
jo
cwtl
in
or
xor
xchg
nop
add
xchg
pusha
sub
or
lea
cmp
rolb
mov
dec
and
subb
test
lods
roll
ljmp
int3
pop
dec
in
inc
sub
rcrb
sbb
sub
loopne
push
repnz
fcomps
sbb
push
pop
nop
scas
lea
addr16
sahf
pusha
mov
add
fs
orb
adc
out
les
xor
dec
test
jns
mov
lock
mov
push
and
pop
push
sbbb
jo
cmp
xor
pushf
add
cltd
or
fsub
popa
sbb
call
add
int3
add
or
fdiv
les
and
fmul
movsb
push
and
push
test
sbb
nop
push
dec
inc
inc
gs
and
xor
dec
ss
loopne
sbb
repnz
mov
sahf
bound
inc
cmpsb
pusha
and
or
fs
xor
roll
pushf
push
ret
xchg
mov
mov
mov
scas
inc
shrl
test
int3
jp
ret
rcr
fmuls
xchg
fs
add
arpl
movsb
nop
or
push
xchg
test
add
and
mov
mov
sbbb
push
inc
daa
test
fdiv
sub
leave
or
mov
push
cmpsb
xchg
xchg
int3
xchg
mov
les
test
mov
xchg
push
xchg
add
cld
mov
les
fdivl
or
add
cmp
test
mov
inc
in
xchg
movsb
mov
and
dec
pusha
cmpsb
adc
add
push
or
inc
daa
dec
je
dec
hlt
lcall
push
mov
sub
aad
aas
scas
insl
popa
sub
loopne
enter
repnz
aam
movsb
dec
ss
mov
add
add
lcall
rclb
or
xchg
xchg
pushf
outsb
outsb
fcoml
insb
notb
dec
lret
and
sbb
sbb
pop
lods
movsl
movsl
inc
addr16
shrb
inc
cmp
mov
test
movsb
jp
es
shlb
lods
mov
mov
loope
inc
dec
add
hlt
roll
dec
movb
dec
or
movb
pop
xchg
pop
or
les
push
pusha
hlt
es
add
sub
dec
add
sub
out
dec
test
inc
push
int3
fcomps
mov
mov
test
adc
int3
push
or
and
movb
enter
mov
mov
test
filds
add
push
daa
mov
lods
cmp
or
xor
jb
inc
fiaddl
subb
adcb
notb
adc
movsb
pushf
sub
or
hlt
inc
lret
popa
imulb
outsb
cld
xchg
pusha
add
loop
lret
push
pop
repnz
push
add
data16
cld
cwtl
fnstcw
mov
or
sbb
fsubs
and
dec
push
xchg
dec
rcrw
orl
test
add
push
mov
push
mov
insb
push
mov
add
cltd
mov
loop
sbb
add
pop
fstl
movsb
lods
inc
and
ds
push
adc
dec
jo
sub
pop
in
xchg
cltd
aam
cmpb
xor
pop
mov
pop
es
gs
pushf
pushf
adc
nop
ret
add
and
in
lock
xchg
cs
andl
push
sub
and
and
cmp
movsl
mov
adc
push
push
or
push
add
dec
adc
mov
in
mov
fcompl
add
or
mov
es
int
jle
fdivs
xchg
bound
bound
add
jo
add
enter
and
mov
pop
test
sub
lock
icebp
push
pusha
rolb
adc
mov
clc
cmp
xor
adc
push
loopne
xor
movsb
cmp
sub
sbb
xchg
or
outsb
loop
or
or
aad
add
shlb
pop
mov
and
xchg
push
sub
mov
mov
je
pop
and
aaa
pusha
push
pop
mov
stos
aad
mov
xchg
add
les
movsl
gs
aam
js
cltd
dec
or
popa
add
mov
add
je
or
xchg
sub
in
sbb
imul
adc
lcall
sub
je
cli
addb
xchg
or
fs
or
test
mov
add
in
mov
adc
and
mov
loop
xor
cmp
lods
mov
sub
cmpsb
lcall
push
xor
dec
jecxz
add
sbbb
xchg
enter
les
add
je
or
iret
cmpsb
and
sbb
adc
xor
add
sbb
cwtl
or
inc
mov
inc
cmp
xor
orl
loopne
sub
andb
inc
mov
xchg
xor
inc
cmp
nop
mov
jbe
and
inc
and
test
ljmp
scas
nop
divb
push
push
xchg
or
and
ljmp
mov
rcrb
mov
es
sub
test
xchg
adcl
add
xchg
mov
cwtl
les
dec
sub
cmp
les
or
lcall
fcmove
nop
mov
data16
xchg
or
rolb
shlb
sub
sbb
mov
push
addl
or
pushf
test
sub
sbb
jo
sub
pop
or
sbb
pop
jbe
mov
gs
or
mov
loopne
xchg
sbbb
pusha
mov
mov
ljmp
and
inc
push
inc
in
add
xchg
xor
orb
cmp
jne
pop
xor
xor
mov
and
mov
sbb
inc
jecxz
cli
push
sub
test
loopne
add
and
pushf
addb
sahf
fisubrs
movsb
push
xchg
movsb
out
sub
les
inc
shlb
dec
add
scas
adc
pusha
ltr
scas
xchg
adc
sbb
sbb
mov
push
or
mov
xor
shl
mov
jne
adc
sbbl
popa
inc
xor
fbld
pop
jle
xchg
test
mov
adc
push
movb
xor
sahf
movsb
push
ficoml
pop
xor
pushf
lock
fmul
dec
add
xchg
jb
ljmp
push
mov
lock
ret
or
xor
fisubs
add
push
fs
xorb
inc
ds
addb
add
xchg
or
dec
xor
pop
mov
cmp
jno
or
mov
rclb
or
cmp
or
cmp
xor
adcb
adcb
xor
test
mov
sub
pop
clc
sbb
stos
xor
sub
mov
mov
jl
push
cltd
push
ljmp
push
insb
test
adc
push
or
mov
jp
sbbb
push
pop
jbe
sbb
adc
test
add
sarb
loop
lcall
gs
inc
mov
push
lret
sbb
add
sbb
jecxz
mov
in
push
lcall
xor
fdivl
es
sub
add
aam
popf
xchg
cmp
sub
sbb
aad
xchg
inc
xchg
mov
xor
xor
ljmp
sub
or
rcrb
xor
sbb
rcrb
insb
addb
adc
jp
rorb
cwtl
and
mov
or
and
sub
out
push
sbb
inc
mov
test
xor
or
dec
jge
cltd
dec
lcall
mov
ret
add
add
cmpl
sbb
adc
dec
loopne
dec
loop
xor
sahf
call
mov
mov
pop
enter
mov
ds
shl
xor
ret
in
inc
lods
in
ljmp
les
sub
jb
test
cltd
push
or
into
pushf
dec
push
mov
cltd
adc
sbb
mov
add
test
inc
call
xchg
jp
xchg
imul
loop
add
xor
movsb
and
dec
inc
lods
or
xchg
mov
xor
call
shlb
mov
sub
clc
aad
ret
and
jmp
gs
and
sub
adc
mov
xchg
mov
jo
movsb
jl
insb
cli
add
pusha
cli
add
cltd
lret
jle
cmp
or
dec
mov
mov
add
dec
js
movb
add
js
and
and
push
mov
push
mov
mov
cmp
outsl
dec
popa
xor
aam
js
sbb
sub
nop
and
sbb
sbb
arpl
jo
push
rol
mov
xchg
outsb
sbb
dec
or
push
xor
ret
and
push
add
xchg
xchg
dec
rorb
or
into
or
ret
add
push
push
fsub
and
call
inc
movsb
in
sahf
add
sbb
mov
out
sbb
adc
adc
dec
or
add
add
sbb
sub
inc
add
and
ss
xor
lea
add
push
jo
push
call
mov
or
addl
test
mov
sbb
inc
push
lret
cwtl
rclb
sub
movsb
xchg
mov
inc
add
loope
cmp
adcl
push
out
inc
add
adc
lcall
icebp
and
fnstenv
pop
adc
nop
pop
xor
call
xor
adc
add
fiadds
push
inc
jo
xor
and
dec
pop
xchg
shll
xchg
cmp
icebp
or
dec
sbb
or
loope
adc
inc
call
int3
inc
jp
adc
adcb
dec
add
leave
mov
bound
push
xor
dec
pop
loop
mov
clc
andb
test
mov
jp
and
inc
mov
push
and
add
sub
call
loopne
add
xchg
jl
insl
sub
shlb
sub
lret
push
loop
or
xor
push
mov
imul
xor
daa
in
push
push
fcomps
adc
sbb
pushf
fsts
mov
pop
les
jb
roll
jp
in
scas
pop
pop
jne
or
xchg
out
pusha
test
gs
dec
push
pusha
inc
pop
daa
xor
jl
push
jb
es
dec
push
inc
xchg
add
inc
lcall
add
adc
fidivs
ss
cmp
inc
pusha
mov
or
out
rcr
push
jp
nop
ret
test
cmp
aam
or
pop
mov
bound
addb
push
adc
push
mov
jp
xchg
ret
mov
push
xchg
into
push
scas
cmp
addb
gs
jmp
sub
inc
sub
inc
clc
loop
mov
out
jb
jb
call
in
call
lahf
lock
jnp
push
or
inc
lahf
fistl
mov
add
mov
inc
push
cwtl
leave
ss
pusha
aad
adc
mov
enter
adc
mov
xchg
imul
or
scas
add
out
adc
fdivl
or
sbb
lods
push
xor
push
or
adc
inc
xchg
adc
inc
pusha
adc
or
mov
adc
push
add
inc
mov
fsubl
xor
adc
dec
movsb
sbbb
cltd
cmp
jp
nop
xor
dec
xor
push
add
es
xor
jle
sbbb
dec
and
inc
repnz
outsb
test
inc
ret
push
sbb
push
pop
cltd
mov
jne
mov
andb
pop
test
imulb
ret
adc
inc
rorb
sub
mov
adc
test
sbb
shrb
nop
lcall
call
rolb
lds
outsb
mov
jle
mov
or
xorl
loop
inc
pusha
or
push
rclb
mov
loopne
subb
mov
pop
orb
or
xor
push
dec
and
in
dec
test
xchg
xchg
test
mov
xchg
sub
jne
je
js
idiv
jb
call
jns
push
xor
leave
mov
inc
in
negb
cmp
aad
mov
mov
push
inc
jp
add
enter
sbb
and
push
imul
lods
inc
test
les
sub
push
je
into
addl
movsb
or
dec
inc
inc
out
mov
sbb
push
push
xchg
mov
in
nop
es
lock
movsl
andb
add
pushf
and
xchg
push
inc
mov
mov
ficoml
test
inc
dec
adc
and
or
and
loopne
dec
sbb
push
es
jne
add
cmp
sub
inc
push
mov
sbb
loop
xchg
xchg
sbb
inc
sahf
es
call
dec
popa
cwtl
mov
in
test
dec
adcb
sub
movsb
mov
sbb
and
repnz
pop
push
orb
lea
cli
fs
sbb
add
adc
push
fdivrl
sub
sahf
jns
inc
loope
sbb
inc
sub
pushf
pop
test
sbb
insb
ss
das
xchg
or
dec
pop
mov
cwtl
cmp
sub
into
fs
pusha
adcb
jle
scas
or
inc
in
insl
push
jmp
adc
mov
sub
push
jne
cli
cmp
push
push
inc
push
lahf
insb
test
cs
aad
pop
fwait
adc
and
jb
lock
mov
test
cld
push
inc
inc
pop
sti
xor
mov
dec
sbb
mov
pusha
lcall
sbb
sub
jl
negb
mov
ret
push
pop
jp
xor
adcb
mov
and
cli
dec
dec
mov
inc
mov
add
sub
sub
pusha
and
add
push
cmp
into
hlt
test
inc
mov
mov
aam
stos
add
mov
push
xchg
or
mov
inc
push
lret
sahf
in
push
push
sbb
in
dec
rolb
aam
adc
lret
inc
push
push
mov
add
xor
loopne
mov
or
or
ds
and
pusha
les
inc
sub
push
nop
es
pop
gs
pop
fisubrl
xor
inc
push
addl
dec
lcall
sahf
inc
mov
push
loopne
lock
jp
fmul
pop
dec
sbb
xor
xor
mov
cltd
inc
and
pop
inc
sub
push
ljmp
or
inc
data16
or
popa
mov
jbe
in
lea
and
or
push
push
xor
fidivl
cmpsb
test
add
mov
popf
and
rolb
inc
add
cld
mov
gs
rorb
pop
js
adc
push
dec
adc
pusha
jb
pusha
or
scas
popa
cmp
xor
sub
xchg
dec
popf
xchg
add
loopne
scas
rorb
mov
sub
fisubrl
push
sbb
mov
loop
jl
mov
cmpsl
gs
test
xchg
mov
faddl
mov
inc
cmp
outsb
lods
fldl
or
shl
mov
mov
dec
adcl
lods
mov
mov
push
dec
add
inc
insl
imul
and
adc
cmp
mov
inc
add
insl
push
sub
in
mov
pop
mov
cmp
addb
add
push
inc
nop
sub
adc
je
adc
pop
mov
xchg
xor
loop
xor
pop
mov
into
inc
cmp
nop
ret
outsb
lcall
pop
and
cwtl
in
fisubs
add
call
push
mov
sbb
cld
and
adc
xor
loop
pusha
and
push
out
decl
ret
fneni(8087
mov
insl
mov
jmp
adc
mov
cmp
nop
pop
fcomp
xor
xchg
adc
sub
mov
in
inc
scas
jl
mov
ds
xor
jne
imul
adc
jmp
adc
mov
xchg
pusha
sbb
jae
pusha
push
push
xchg
adc
pusha
or
xchg
adc
test
inc
rcrb
sub
adc
aaa
int3
and
scas
fs
lret
or
testb
addb
mov
loope
sbb
in
stos
adc
and
idivb
cli
jp
xor
dec
bound
inc
test
in
and
aam
or
pusha
inc
rorb
xchg
dec
enter
shl
popa
add
add
mov
xchg
mov
int3
fs
jbe
add
and
fldenv
test
ret
push
inc
cltd
mov
dec
mov
xchg
imul
leave
dec
cmp
jb
jns
orb
xor
adc
add
xor
adcb
and
int3
es
adc
push
mov
add
mov
sub
movsb
je
pusha
cwtl
mov
ret
nop
xor
dec
or
sub
ljmp
lret
or
push
imul
and
pusha
test
imul
mov
adc
jb
outsb
sub
out
dec
sbbb
in
int3
les
add
imul
enter
inc
pushf
sub
or
push
mov
mov
insl
or
push
loopne
and
pop
xchg
and
adcb
gs
or
jnp
cs
pop
inc
adc
movsb
cltd
pusha
xor
mov
les
fs
pushf
movsb
test
and
les
test
jo
mov
scas
add
or
lret
scas
xchg
dec
shrb
sub
sbb
ret
add
int3
mov
pushw
sbb
push
repnz
add
fisubrs
push
add
enter
add
call
mov
pop
dec
andb
lcall
lea
loope
sbb
shlb
mov
or
shrb
pop
inc
mov
add
test
sbb
mov
push
mov
scas
adc
fisubrs
xchg
push
sub
cmpsb
pop
mov
test
je
mov
es
or
or
mov
push
cmpl
mov
jns
daa
ret
sahf
in
arpl
xchg
mov
and
xchg
and
adc
test
xchg
jo
pop
and
or
and
inc
inc
testb
pop
xchg
ss
or
cmp
stos
xor
cld
push
inc
push
dec
dec
cli
insl
push
fs
jb
cltd
push
jnp
mov
imul
push
xor
adc
push
jl
mov
and
movsb
lods
stos
cmc
call
sbb
xchg
sbb
leave
sub
inc
flds
mov
adc
push
es
adcl
test
adc
cwtl
dec
sbb
subl
mov
test
jo
mov
jp
ret
add
push
add
mov
cmpsb
out
sub
and
adc
dec
xchg
add
push
scas
sbb
mov
mov
add
and
mov
pop
loop
imul
sbb
test
xor
push
insl
repnz
inc
mov
pushf
ds
cmp
mov
jb
push
orb
add
pop
mov
or
xor
movsl
sbb
add
inc
adc
mov
fimuls
test
fisubrl
mov
leave
ljmp
mov
cwtl
rclb
inc
inc
cwtl
mov
add
nop
adc
movsb
pushf
ret
xchg
mov
inc
pusha
cmpsb
les
push
xor
xor
stos
or
inc
test
or
pusha
push
sub
inc
xchg
mov
jo
push
add
or
inc
jb
data16
push
sbb
adc
add
arpl
xchg
and
nop
push
fwait
adc
push
adc
inc
and
push
loop
mov
and
push
nop
or
movb
sahf
add
add
ds
jo
mov
or
icebp
mov
mov
push
xchg
adc
test
add
sbb
fsubr
pop
outsb
dec
out
mov
xchg
movsb
call
and
adc
and
sbb
sbb
adc
or
adc
mov
add
loopne
xchg
or
add
add
dec
call
lods
rolb
or
pop
xor
sub
cmp
cmp
add
pop
pop
cmp
jb
movsl
push
xor
lcall
mov
dec
sub
shrb
test
mov
in
inc
mov
insb
fcoms
subb
pop
push
sarb
and
push
push
dec
aam
push
push
out
inc
push
les
cwtl
aad
adc
xchg
ret
inc
pop
add
loope
jae
or
add
dec
pushf
orb
ljmp
push
sub
and
shlb
xchg
shlb
jo
rcrb
mov
xchg
cmp
mov
mov
add
and
sbb
cmp
ret
push
jbe
loop
lds
insl
sbb
pop
cmpsb
loop
xchg
cmp
rcl
add
bound
pop
sub
or
add
xor
adc
mov
mov
sbb
and
add
dec
xchg
shlb
or
rolb
dec
or
inc
lock
and
insb
mov
sub
bound
and
insl
or
into
xchg
mov
mov
pop
sbbl
into
add
mov
or
sbb
pusha
sbb
test
and
ds
lret
ret
cltd
pushf
orb
pop
sahf
mov
add
push
lret
dec
inc
ret
mov
inc
test
ss
sub
sub
js
mov
mov
dec
popl
cmp
test
jl
and
rclb
cld
mov
xchg
mulb
xor
lret
xor
fsubr
ret
xor
loope
lods
inc
je
mov
data16
mov
cmp
cld
test
xchg
lret
ret
dec
orb
xor
sbb
cld
xchg
and
xchg
xchg
push
rolb
pop
insl
sub
rcrb
push
cmpsb
mov
addr16
cltd
cmp
push
dec
and
insl
or
je
loope
add
bound
sbb
adc
loop,pt
loopne
xor
mov
pusha
push
inc
add
or
jo
add
add
lods
leave
lret
lock
dec
mov
jle
adc
xor
inc
popa
and
insl
sbb
mov
xchg
mov
mov
jno
adcb
push
sbb
xchg
lods
push
and
adc
and
nop
ret
push
or
addb
js
jo
test
out
and
mov
pop
adc
and
inc
add
push
pop
dec
je
dec
jb
dec
push
add
and
inc
arpl
xchg
pop
push
add
test
clc
nop
adc
test
dec
xor
xor
mov
add
jb
sub
test
pop
adc
test
xchg
dec
pop
daa
movsb
icebp
xor
shl
jb
dec
data16
push
xchg
xchg
push
xchg
out
mov
or
scas
mov
stos
cmpsb
xchg
lret
lods
push
aad
cmp
loop
dec
sub
adc
lcall
mov
lret
jo
es
in
lods
sbb
or
sbb
pop
mov
mov
rcl
cmp
adc
popf
add
mov
pop
int3
pushf
les
cmp
cmp
dec
xorb
push
add
inc
sub
add
pop
scas
adc
loope
inc
cmpb
mov
mov
scas
sub
pop
push
loop
scas
mov
inc
or
pop
dec
enter
mov
xchg
add
test
xor
lods
push
jle
mov
rcrl
dec
inc
or
add
loopne
scas
cwtl
push
xor
and
cmp
stos
and
or
mov
cwtl
push
dec
mov
pop
or
inc
cmpb
xchg
loop
adc
and
cltd
dec
jo
rclb
and
sbb
jbe
mov
lcall
xchg
mov
mov
push
shlb
xor
fiaddl
add
cld
push
mov
pop
data16
je
push
push
sbb
faddp
ss
adc
insb
in
add
add
movsb
cwtl
dec
imul
test
xor
mov
push
sbb
add
adc
sub
mov
adc
dec
xchg
cmc
xchg
mov
push
add
fidivl
rorb
test
rorb
ror
push
ljmp
jle
ficompl
cmp
andb
add
push
or
lahf
test
test
mov
add
rorb
lcall
dec
adc
cmp
adc
mov
shlb
loopne
and
mov
lea
loop
mov
push
push
xor
les
js
mov
adc
mov
push
xchg
aam
and
inc
or
add
call
cli
ss
cmc
mov
or
adc
mov
push
lock
ret
inc
pusha
or
test
add
add
cltd
cmp
or
mov
sbb
mov
and
push
movsl
push
aad
inc
aad
push
shlb
test
or
mov
in
popa
movsb
and
mov
cli
add
insb
add
mov
dec
jo
gs
cltd
xor
inc
lret
icebp
repnz
jbe
and
and
mov
push
xor
mov
mov
je
cwtl
add
mov
inc
mov
sbb
mov
add
mov
cltd
adc
push
or
pop
loopne
push
fs
cmp
imul
mov
out
enter
inc
mov
adcb
add
aam
xchg
dec
or
mov
inc
insb
sbb
inc
jne
add
mov
push
ss
mov
or
daa
mov
or
xor
mov
push
push
sub
ret
loopne
adc
mov
add
mov
cltd
movsb
sub
inc
inc
repnz
dec
push
cmp
dec
lock
lods
test
jne
or
test
push
xor
xor
ljmp
into
add
xor
pusha
adc
bound
push
bound
adc
lods
mov
jp
mov
loop
cmc
sub
lods
add
loope
push
add
orl
adc
mov
addl
dec
push
mov
leave
bound
and
add
add
cmp
mov
mov
icebp
xchg
xor
push
push
mov
push
incb
int3
and
rcl
mov
cmp
test
push
add
mov
int3
out
push
xor
mov
or
lock
or
data16
mov
add
push
mov
or
and
push
push
push
sahf
gs
es
mov
push
pop
ljmp
sarb
ds
cli
ds
and
cwtl
sahf
sbb
dec
dec
shrb
mov
mov
cwtl
cltd
nop
mov
dec
je
or
lret
and
mov
inc
es
mov
or
fsubs
or
leave
and
popa
js
xor
sub
or
test
sub
pushf
jp
push
and
shll
inc
cli
dec
and
xchg
adc
push
jp
add
push
push
xor
mov
push
daa
rclb
cmpsb
push
leave
and
sbb
xchg
enter
test
imul
lret
dec
or
pusha
add
shll
js
lret
popf
adc
mov
sbb
add
pop
adc
sub
cltd
and
adc
push
xor
dec
call
pop
inc
les
andb
or
in
mov
inc
jmp
imul
and
fcom
mov
mov
mov
adc
dec
loopne
add
ss
pusha
dec
sub
adc
mov
sub
pusha
sbb
xor
dec
cwtl
inc
xchg
jbe
sbb
fs
nop
scas
movsb
sub
pusha
push
inc
mov
in
mov
add
sahf
xor
or
js
sub
fidivs
mov
repz
pop
mov
add
mov
cltd
loope
mov
or
cmovno
into
push
int3
popa
dec
nop
push
rorb
pushf
adcb
cltd
inc
ret
je,pt
ja
add
push
mov
inc
add
sbb
in
dec
fists
sub
sbb
enter
jnp
and
cmp
rol
or
orb
dec
test
mov
jb
dec
push
insb
add
sub
mov
popa
xor
stos
sub
adc
cld
inc
push
bound
ja,pt
ljmp
dec
add
jecxz
sbb
mov
je,pn
mov
mov
cltd
adc
shrb
addl
inc
insl
ficompl
mov
add
mov
hlt
pop
jb
inc
add
or
loop
jo
pop
or
cmpsb
add
ret
inc
mov
jbe
xor
xchg
sub
sahf
add
cmp
jae
push
cmpsb
faddl
and
mov
insl
mov
or
and
fadd
adc
mov
hlt
xor
pop
or
insb
xchg
cmc
add
cmpsb
sub
jp
adc
int3
and
nop
imul
push
data16
out
xchg
ds
mov
loop
mov
adcb
push
xor
dec
add
loope
int3
inc
pusha
mov
adc
pusha
or
popa
xchg
push
js
movsb
mov
or
add
mov
nop
or
je
test
sub
sbb
push
bound
ret
lret
add
pop
xor
in
in
inc
mov
je
bound
adc
es
push
mov
sbb
popf
dec
cvtdq2ps
test
lcall
lock
sbb
cwtl
sbb
insb
push
and
or
inc
sub
sahf
xor
dec
add
adc
rcll
mov
jmp
or
fbstp
movl
xchg
xchg
rolb
push
dec
xor
lods
push
loop
mov
test
mov
loopne
test
cmpsb
jo
stos
imul
fs
pop
adc
mov
dec
or
cmpsb
and
call
inc
fsubrl
jp
jo
sbbb
filds
or
cmp
test
sub
cli
mov
mov
jo
mov
adcb
cwtl
mov
fadd
pop
xchg
pop
mov
repnz
js
in
push
js
adc
add
add
and
push
xor
mov
mov
js
push
cwtl
add
mov
sub
test
inc
int3
mov
or
and
sub
push
cwtl
cld
adc
scas
or
and
insl
inc
lods
test
inc
push
into
jne
je
mov
orb
and
adc
adc
enter
sbb
mov
sbb
lcall
push
js
adcb
sbb
cwtl
lock
jp
pop
push
pusha
cmp
cs
movsl
xchg
imul
xchg
mov
inc
dec
push
add
arpl
xchg
sbb
mov
xor
and
dec
cmp
cmp
cmc
and
sbb
sbb
adc
push
or
imul
dec
cmp
push
add
mov
cmpsb
push
sbb
adc
and
or
shrb
dec
inc
cmpsb
push
xchg
adc
mov
push
sbb
loopne
cltd
inc
jo
out
loopne
mov
inc
push
pop
push
test
sub
cs
sbb
cmpsb
mov
push
andb
and
cmp
inc
mov
data16
or
in
mov
andl
push
mov
and
loop
jp
mov
clc
ljmp
mov
int3
adc
xchg
in
inc
xor
imul
xchg
imul
dec
ret
shrl
push
xchg
and
mov
lods
xor
inc
push
sbb
add
sbb
jle
dec
dec
push
xorb
xor
add
mov
or
aam
dec
loopne
je
insb
pop
xor
insb
rorb
sub
leave
cmp
popa
sub
add
sbb
orl
ss
push
push
or
dec
inc
inc
xchg
pop
test
add
jbe
mov
popa
jo
or
aaa
sub
adcb
mov
stos
int3
jne
clc
lcall
push
cltd
pop
shl
sub
xor
xor
xor
movsl
sbb
ss
je
push
dec
sbbb
adc
into
push
loop
lods
data16
sub
jb
sub
imul
jb
gs
ljmp
cwtl
adc
aam
adcb
cltd
and
xchg
nop
push
inc
xchg
xor
movsl
mov
or
adc
sub
xor
shr
pusha
add
mov
cmp
or
add
shlb
sub
adc
sbb
rorb
loop
adc
mov
push
and
inc
push
adc
mov
adc
xchg
adcb
es
mov
and
pushf
or
push
sub
scas
cli
inc
cmp
push
jnp
or
out
imul
orb
push
sub
insb
stos
cmc
cs
daa
inc
ljmp
mov
insl
add
shlb
lea
ds
add
sub
jo
mov
inc
cmp
sbbl
or
mov
mov
sub
lods
lret
movsb
and
cmc
insb
mov
pusha
cmp
xchg
cltd
out
inc
dec
add
adc
jno
repnz
or
shrb
mov
mov
add
xchg
test
xchg
mov
es
sub
ret
or
pusha
cmp
ficoml
ds
xchg
and
arpl
inc
insb
sbb
xor
inc
ljmp
mov
in
mov
repnz
adcb
sbb
xchg
mov
or
push
rcrb
mov
cli
imul
cmp
lret
and
or
sub
ficoms
or
xchg
testb
hlt
cmp
mov
add
outsb
add
adc
xchg
mov
lcall
rolb
xor
loopne
lret
jb
cmp
adc
push
orb
mov
pusha
dec
ret
sbb
fistpll
enter
cmpsb
add
add
push
ja
adc
fisubs
inc
mov
sub
pop
mov
pop
cwtl
test
and
incb
mov
cmpsb
gs
fs
adc
adc
loopne
adc
jp
or
push
shrb
jecxz
leave
xor
push
jecxz
add
rolb
lret
rol
or
add
add
fs
cmpsb
and
mov
or
dec
clc
call
into
pop
cmp
adc
cmp
mov
and
mov
mov
inc
pop
adc
push
or
adc
enter
ljmp
push
push
loopne
xorl
and
mov
bound
xor
mov
dec
loop
fdivr
xor
push
adc
rclb
popa
adc
movsb
jo
add
leave
mov
xchg
fisubrl
sub
push
sbb
sub
xchg
movsb
xor
xchg
adc
lret
push
and
add
xchg
and
pop
xorb
mov
inc
or
hlt
gs
fwait
push
jp
push
add
nop
adc
mov
test
push
xor
mov
xchg
sbb
sub
and
lret
repnz
es
hlt
sbb
movb
inc
inc
test
or
rorb
inc
push
sbbl
rcl
pop
or
and
pop
jns
mov
push
sub
and
xorb
out
je
es
cmp
out
mov
pop
sbb
add
add
insb
cli
sbbl
mov
adc
push
sbb
and
loopne
mov
xchg
pop
fcmovu
arpl
inc
insl
xchg
shll
rcl
push
pusha
and
sub
jno
mov
out
test
adc
jbe
gs
sub
orb
or
ret
and
adc
rclb
push
es
insb
push
add
add
fisubl
xor
cmpsb
loopne
and
add
add
xchg
dec
adc
shrb
cltd
pop
xor
mov
adc
test
and
clc
cmp
mov
inc
dec
and
scas
push
inc
inc
movsb
nop
add
sbb
adc
jmp
stos
jb
ss
mov
adc
dec
lret
rclb
cmp
gs
xor
shlb
pop
rcrb
lret
jo
fs
roll
xor
mov
mov
pop
fwait
jb
push
and
dec
cwtl
push
adc
test
shll
push
cwtl
inc
or
add
outsb
and
arpl
daa
add
jl
mov
test
mov
fs
sub
and
xor
sub
cmp
dec
andb
xchg
pushf
inc
and
dec
jl
mov
out
xchg
adc
call
cli
sub
cs
rorb
sub
pop
adc
xchg
scas
int3
xchg
push
sub
pop
arpl
rorl
call
mov
sbb
push
addr16
addr16
pop
adc
push
into
xchg
leave
orl
popa
cwtl
loopne
outsb
ret
jno
dec
repnz
mov
xor
cltd
sub
loopne
or
push
pusha
push
dec
add
mov
cli
imul
bound
adc
les
sbb
rol
add
mov
xchg
dec
pusha
push
sbbl
cmp
add
mov
and
lcall
or
push
shl
pusha
sbb
out
lret
ds
adc
cmpsb
xorb
shl
jb
es
jl
data16
xchg
loopne
jnp
sar
mov
xor
test
and
mov
aad
jne
js
add
jo
dec
mov
ds
dec
push
adc
adc
test
pop
ret
xchg
les
lock
cmc
inc
adc
movsb
jbe
js
cmc
es
pop
imul
adc
aam
shrl
sub
add
addb
aam
dec
and
lods
cltd
loopne
inc
jbe
mov
cmp
cmc
loopne
aam
mov
mov
es
loopne
xchg
nop
xchg
rorl
mov
fs
sbb
adc
adc
in
lock
test
mov
xor
add
jge
addb
loopne
push
push
pop
shrb
jb
negb
pushf
or
enter
and
add
sbbb
jo
xor
sbb
shrb
mov
or
sub
ret
sub
xchg
inc
inc
mov
and
sub
es
add
mov
out
xchg
test
dec
push
and
cli
or
test
sub
or
adc
lahf
xorb
rorb
push
dec
ret
sbb
inc
mov
pusha
sbb
mov
inc
or
add
add
outsb
fs
inc
rol
xor
hlt
mov
xor
xor
pop
sub
js
add
xchg
inc
or
ss
xchg
rorb
xor
ss
nop
add
push
xor
int3
fs
mov
sbb
lock
shlb
xor
or
pusha
nop
lret
push
decb
subl
orl
xchg
lea
xchg
movsb
or
je
cmc
ret
sub
xor
jo
jo
data16
cmp
or
xchg
mov
mov
jmp
cld
jno
and
xchg
adc
mov
test
cmp
nop
dec
push
dec
push
subl
ss
jbe
adc
loopne
or
push
xchg
sbb
xor
sbb
or
mov
mov
adc
jle
popa
das
and
jl
test
mov
add
add
mov
inc
pusha
pusha
aam
jne
sub
enter
cli
push
adc
ret
cmpsb
enter
jo
cwtl
or
mov
xchg
loop
rolb
or
xchg
fdivrl
mov
mov
cwtl
imul
mov
mov
js
dec
test
xor
mov
adcb
cmpsb
sub
xor
mov
mov
je
ss
and
insl
loopne
fs
mov
inc
icebp
adc
cld
cs
jae
or
push
push
dec
pop
je
inc
or
fisubrs
add
dec
adc
js
lcall
scas
lock
dec
xor
test
xchg
test
mov
bound
mov
dec
insb
leave
add
js
or
ss
sbb
lock
add
sbb
or
mov
rorb
or
mov
xchg
adc
xchg
movsb
loop
lcall
call
outsb
je
xchg
movsb
mov
add
pusha
and
or
push
sahf
push
add
nop
cltd
and
dec
pop
or
mov
or
mov
cmpsb
pop
mov
mov
pop
pop
sbb
add
mov
jge
adc
pusha
xchg
pop
xor
cli
pushf
mov
int3
dec
sbb
sahf
add
sbb
lock
push
nop
mov
aam
dec
mov
dec
add
xchg
push
add
sbb
lods
int
lcall
dec
xor
inc
mov
adc
pop
mov
leave
add
or
sbb
cs
data16
jne
push
add
es
pop
mov
and
call
test
mov
dec
enter
xchg
test
jmp
pushf
and
cmc
clc
mov
xor
fisubrs
orb
push
es
inc
xor
aam
sbb
or
es
outsb
sub
xor
add
mov
sub
dec
push
adc
push
and
xchg
jo
test
test
push
mov
mov
movsb
aam
enter
push
and
outsb
xchg
outsb
incl
add
cmp
or
mov
rclb
popf
pop
jle
sbb
dec
movsl
xchg
dec
mov
xchg
jle
cmp
push
adc
addr16
sbb
xchg
data16
fs
add
cmp
sub
xchg
adc
leave
mov
roll
sub
adcl
and
sbb
daa
and
add
js
inc
jae
xchg
xorl
test
mov
sbb
xor
clc
and
cwtl
or
mov
cwtd
sub
xchg
mov
push
sub
rcl
out
pop
sbb
mov
gs
fiadds
in
jb
and
addr16
shl
loopne
repnz
adc
andb
int3
inc
mov
push
jp
lea
or
and
pop
cmpl
out
and
jbe
jbe
andb
pusha
and
enter
fistps
adc
inc
add
orl
mov
lret
adc
push
sub
mov
mov
cmp
or
aam
dec
test
js
sbbb
sub
xor
cmp
adcl
xchg
movl
add
mov
je
nop
nop
dec
nop
xchg
movsl
ss
push
mov
mov
xor
sub
or
cmp
sbbb
adcl
ss
inc
mov
xor
dec
or
dec
adc
nop
orl
into
add
sahf
add
inc
mov
mov
push
loop
into
mov
ss
mov
ficoms
and
movsb
sub
cwtl
sbb
push
ret
or
xchg
outsb
push
or
lds
mov
ljmp
ret
add
dec
pushf
sub
or
adc
inc
pop
outsb
dec
lods
mov
add
adc
add
or
dec
out
and
jo
add
movsb
mov
pop
addr16
jb
cmc
icebp
xchg
and
cmpsb
jb
and
dec
sbb
enter
push
adc
test
inc
leave
subb
add
es
push
add
mov
pop
inc
cwtl
mov
enter
cmp
shll
hlt
xchg
imul
pop
jo
cmp
mov
xchg
xor
icebp
and
mov
sbb
es
adc
fs
xchg
fs
adc
test
aam
and
loop
rol
xchg
or
aad
add
jg,pt
fsubs
xor
cs
jmp
mov
aam
pop
adc
pop
add
popa
xchg
mov
int3
orb
or
sub
fcmovb
lret
les
add
test
int3
xor
das
daa
add
xor
or
push
enter
inc
push
cmpsb
lcall
clc
and
jl
orb
mov
fs
in
adc
add
jns
push
movb
sub
dec
call
lock
or
les
rorb
bound
fimull
cwtl
nop
push
addb
cmc
add
sbb
mov
or
inc
and
push
outsb
push
xor
loopne
adc
jb
add
sub
xchg
mov
aam
xchg
push
jp
adc
cmp
or
test
xchg
mov
test
movsb
and
pusha
imul
mov
aam
pusha
movsb
mov
in
addr16
insl
xor
add
sub
hlt
rclb
addb
fsubl
sbb
dec
xchg
push
adc
fidivrl
sub
sbb
rcr
and
adc
sarb
mov
pop
je
pop
inc
nop
or
inc
sub
xor
hlt
mov
mov
movsl
adc
add
push
and
cwtl
loop
mov
add
fs
inc
ljmp
dec
pop
cmp
mov
xor
in
lcall
test
test
and
adc
ss
insl
jb
and
loopne
cld
inc
mov
fcompl
adc
test
enter
ds
gs
sub
jle
fcoml
in
xor
xor
leave
ret
sub
cwtl
sbb
sahf
pop
and
mov
scas
les
enter
xor
inc
jp
dec
dec
xorb
adc
mov
rcl
test
pop
push
shll
bound
push
mov
bound
adc
adc
push
mov
sub
loop
rorl
repnz
cmpsb
mov
push
mov
aam
outsb
stos
adc
orb
mov
mov
inc
test
push
clc
dec
test
add
mov
add
add
ror
loope
adc
fs
cmp
test
rcrl
mov
ljmp
and
or
dec
push
and
sub
leave
add
push
cmp
filds
leave
xchg
fisubl
cmc
clc
jmp
adc
fsts
cmpsl
jle
dec
loopne
mov
mov
mov
pushf
adc
sbb
rolb
pop
xor
sarb
loopne
add
imul
test
andb
push
lods
mov
and
mov
xor
cmpsb
fsubs
bound
push
ljmp
add
enter
inc
dec
jbe
inc
add
jb
inc
ds
or
or
xor
popa
adc
rolb
inc
and
inc
incb
shlb
loopne
push
sbb
ret
mov
cmpsl
mov
enter
and
sbb
rclb
dec
jp
adc
inc
int3
push
cltd
or
mov
insl
or
push
pop
xchg
fs
or
cltd
nop
pop
add
push
jp
mov
gs
mov
cmpsb
mov
jo
jecxz
dec
sbb
pop
out
xorb
adc
mov
mov
sub
inc
push
jo
andb
or
test
push
rcl
dec
xor
fs
push
rolb
or
pop
and
mov
jbe
aam
sbb
jb
dec
xchg
leave
in
repnz
inc
push
ret
loopne
loop
mov
rcl
jne
sbb
imul
test
sbb
add
adc
rolb
je
cmp
sub
mov
lret
inc
push
lods
inc
inc
bound
jle
call
out
test
sbb
inc
lods
mov
mov
dec
jl
fcom
addr16
mulb
add
rolb
xor
push
adc
mov
adc
rcr
leave
dec
es
test
dec
inc
sub
mov
mov
push
mov
roll
xchg
or
add
or
enter
mov
or
je
add
cmpb
mov
cltd
mov
dec
insl
xchg
test
test
push
ret
and
incb
addl
push
add
add
add
add
int3
and
loop
movb
add
lods
mov
mov
sub
pop
outsl
or
adc
pop
xor
lods
or
rcrb
inc
add
lock
inc
popa
pusha
pop
mov
dec
in
cmpsb
or
xchg
xor
cwtl
fs
jne
pop
sbb
cmp
movsb
rolb
mov
lret
enter
cmp
sbb
mov
arpl
out
sbb
add
outsb
sarb
loopne
sub
les
inc
inc
mov
mov
or
jmp
mov
adc
mov
push
sub
push
jl
jno
jmp
mov
xchg
adc
nop
or
jns
loopne
es
sub
xor
dec
sub
cltd
insb
or
sbb
or
mov
mov
inc
cwtl
jle
test
mov
cmp
sbb
sbb
je
add
push
adc
pushf
mov
bound
add
xor
dec
mov
in
pop
mov
sub
add
xchg
rorb
cmp
mov
push
adc
fistpll
push
shlb
inc
cmp
mov
mov
sub
movsl
and
and
xchg
insb
pusha
andb
adc
ds
xchg
mov
cmpsb
xchg
enter
mov
mov
mov
aam
enter
decb
jb
sub
test
nop
rolb
jb
sub
fcoml
xor
lret
and
push
cmc
xor
push
enter
pop
add
or
fisubs
xchg
or
hlt
sub
push
dec
or
adc
test
pop
sbb
mov
push
inc
sub
mov
sbb
insl
data16
mov
test
inc
push
test
loope
mov
add
lret
sub
test
mov
jno
mov
xor
sbbl
dec
xor
pushf
sbb
sbb
jp
push
adc
mov
or
fs
sbb
fisttpl
and
int3
popa
sub
xchg
addb
cwtl
cmp
test
add
jb
rolb
adc
fmul
push
int
clc
jb
filds
and
dec
and
xchg
jo
mov
push
adc
pop
mov
push
sub
inc
jo
in
mov
xchg
cltd
inc
xor
js
mov
mov
sbb
add
scas
add
sbb
lcall
pushf
je
fs
popf
mov
enter
loope
add
cmp
sbb
mov
mov
and
mov
je
insl
ret
test
inc
or
inc
cmp
mov
adc
push
sbb
sbb
jne
int3
push
mov
cmp
lds
or
icebp
bound
sbb
sbb
dec
mov
jo
test
xchg
jl
mov
sub
sub
jbe
jo
mov
in
cli
jp
les
adc
subb
xor
dec
xchg
in
into
adc
add
test
mov
add
and
js
imul
push
xor
mov
push
es
pushf
je
and
and
cs
call
jl
fsubrp
dec
dec
push
adc
push
and
cmpsl
hlt
sub
call
cwtl
sahf
ss
mov
data16
nop
adc
mov
xchg
loopne
sbbb
sub
int3
mov
mov
pusha
fs
sbb
or
loopne
outsb
nop
lods
andb
cmpsb
xchg
fs
popa
jl
pop
nop
fsts
mov
fs
adc
add
push
nop
popf
and
mov
push
ljmp
test
push
cmp
cmpsb
push
leave
inc
adc
xchg
jb
or
loopne
sbb
push
pusha
nop
dec
xor
ss
dec
dec
sbb
or
push
or
mov
lcall
cmp
add
mov
push
cmpsb
xor
lods
test
jo
addb
xor
push
push
pop
ret
lcall
inc
or
pop
xchg
mov
cs
add
dec
pop
lcall
dec
and
gs
mov
jle
push
adc
lret
repnz
and
sbb
data16
mov
sbbl
adc
leave
add
push
sbb
adc
bound
cs
fcoml
inc
imul
xor
in
leave
or
loopne
sub
and
push
mov
pop
sbb
push
in
cli
cmp
xor
test
adc
xor
inc
lcall
xchg
or
and
or
dec
popf
cmpsb
int3
cli
xlat
pop
xchg
sbb
adc
gs
sub
aad
mulps
loope
fdivl
or
and
dec
rcrb
dec
or
out
add
movsb
and
inc
lcall
mov
xchg
sbb
xchg
ds
in
fsub
adc
add
sub
push
lcall
and
cmc
rcll
add
add
add
jg
mov
jle
ret
rorb
and
mov
movsl
mov
jmp
pop
and
pop
or
fs
movsl
xor
mov
sub
or
or
xchg
dec
or
inc
or
or
adc
adc
or
gs
xorb
adc
jbe
loop
loop
cld
add
adc
adc
adc
mov
out
scas
cltd
scas
push
enter
xchg
inc
cs
xchg
inc
je
inc
inc
data16
push
xor
flds
sahf
pop
mov
or
xor
ds
sbb
sbb
mov
add
mov
adcb
fmul
or
pop
adc
lock
adcb
push
rorb
mov
push
add
push
xor
add
faddl
sub
sarb
inc
fcompl
les
mov
or
int3
mov
mov
or
cwtl
or
push
adc
sahf
andb
loop
fcomps
or
jp
inc
andl
mov
push
aam
or
out
add
int3
jle
xor
in
or
and
aad
and
or
mov
add
lret
rol
or
add
pop
jb
adc
dec
xchg
data16
mov
or
pop
je
and
jo
or
mov
jp
sbb
or
inc
xor
cli
cmc
adc
cs
pop
sub
test
dec
out
push
pop
test
adc
push
cmpsb
mov
cltd
cld
outsb
pusha
sub
orb
inc
and
ficompl
pop
cwtl
bound
sub
mov
lock
cmp
adc
cmp
and
mov
and
xchg
sub
add
cmp
cmp
and
dec
inc
dec
mov
cld
xor
add
movsl
xchg
cmpsb
sbb
adc
and
dec
and
jne
jo
mov
pusha
call
mov
sahf
adc
dec
orb
mov
push
or
push
mov
cmp
dec
cmp
rcll
dec
adc
cwtl
int3
test
es
and
add
mov
dec
loope
jb
mov
or
sahf
or
xchg
subb
adc
mov
rorb
push
hlt
adc
fs
or
xor
mov
dec
cmp
pop
push
pop
jbe
adc
jbe
fucomip
data16
and
lret
test
jg
test
mov
rcrb
hlt
dec
ret
repnz
shlb
push
js
stos
xchg
mov
mov
push
xchg
movsb
xor
test
shlb
sub
mov
xor
or
scas
outsb
inc
rclb
adc
in
pushf
push
int3
push
cld
pop
xor
xchg
add
or
xor
pop
dec
daa
jne
mov
and
xor
xchg
adc
dec
push
mov
cmp
push
mov
mov
adc
or
sub
jo
dec
or
pop
fadd
xorl
push
nop
sbb
push
test
cli
xlat
in
xchg
shlb
jle
xchg
movsl
jo
fmulp
and
loopne
sub
sbb
mov
jle
cmp
ljmp
rolb
rcrl
and
addb
ret
jb
imulb
scas
sub
add
jp
add
insb
or
push
arpl
ficoms
cmp
cltd
enter
sub
nop
cmp
dec
enter
add
or
cmpsb
loop
fs
and
sub
and
jp
addb
aam
int3
push
in
adc
jp
shl
test
in
loop
add
jbe
fcom
aad
aad
mov
push
popa
mov
idivb
sbb
inc
jns
pop
jbe
adc
in
fcomps
ljmp
mov
xor
mov
lcall
cwtl
aam
inc
push
add
cs
shrl
js
testb
popf
insb
pop
pop
sub
inc
xchg
or
nop
sbb
sbb
cli
clc
add
int3
rcrb
nop
loope
pop
sub
inc
aaa
int3
loop
pop
add
out
cltd
lret
insb
dec
es
cmc
push
mov
or
dec
add
xchg
call
or
pusha
and
push
xchg
or
push
add
sub
sbb
and
xchg
sbb
add
adc
in
dec
pusha
or
and
push
push
into
in
test
orb
dec
push
adc
add
xchg
mov
cmc
and
aam
rorb
les
es
fs
add
xor
shlb
add
fsubl
and
dec
xor
in
xchg
jb
hlt
pop
mov
enter
or
call
pop
fisubrl
or
mov
ret
rol
sub
jmp
push
sbb
sti
inc
push
je
add
jno
and
cmp
mov
push
in
and
mov
sbb
push
or
dec
in
pushf
lcall
shl
sbb
add
pusha
cmp
cmp
lret
popa
xchg
popf
dec
into
clc
push
inc
imul
inc
sub
dec
xor
mov
rcll
rclb
lret
cmp
shll
push
mov
daa
inc
cmpsb
out
stos
dec
inc
xor
mov
push
or
push
dec
mov
inc
push
pusha
sub
rcrb
jbe
xchg
or
pushf
inc
or
and
and
pop
sbb
sbb
ss
inc
or
xchg
sub
push
in
push
lret
xchg
stos
mov
add
add
dec
outsb
lods
mov
push
sbb
fisubrs
cmc
dec
cmp
inc
xor
inc
invd
sub
and
dec
jno
dec
or
cmp
leave
and
popa
lods
sahf
xchg
dec
and
xchg
lods
or
dec
aad
mov
cmp
sahf
pop
sub
xchg
inc
sbb
sbb
roll
dec
cwtl
push
dec
push
adc
roll
js
dec
sbbb
into
dec
dec
loop
sbb
add
or
insl
sub
imul
lret
or
ret
adc
cs
dec
cmp
push
cs
dec
rolb
popa
inc
jb
ss
or
adc
add
scas
sbb
push
and
adc
mov
aam
adc
decb
xchg
rclb
lret
mov
mov
and
mov
out
mov
insb
lods
hlt
sbb
mov
outsb
je
adcl
and
inc
xor
popf
inc
jle
mov
push
and
push
mov
cmp
lods
adc
jle
add
xor
inc
push
sbb
cmpl
push
or
mov
push
sub
mov
and
dec
int3
dec
sahf
test
push
repnz
loop
mov
or
xor
dec
imul
cwtl
or
into
les
pop
pop
mov
test
popa
inc
in
mov
mov
nop
add
call
or
inc
sub
addb
out
mov
loop
subb
xor
stos
call
cs
es
js
pop
add
pop
int3
ret
inc
inc
or
add
loopne
dec
es
insb
test
push
int3
inc
pop
clc
jo
xchg
rcll
nop
rol
mov
sbb
mov
lret
je
fldcw
ret
xor
icebp
fimuls
xchg
adc
adc
or
inc
lock
cli
shl
or
and
cwtl
sbbb
fidivl
or
cmp
pop
nop
or
or
add
and
rorl
test
xlat
sbb
mov
inc
sbb
cli
test
adc
add
mov
fisubl
xor
cwtl
lcall
inc
sub
subb
int3
inc
lea
add
lcall
ds
push
sbb
fsub
pop
and
ret
sub
test
and
inc
add
push
xor
cmp
ret
xchg
xchg
repnz
cmp
aaa
int3
pop
push
jb
cmp
dec
js
sub
or
sbb
mulb
and
dec
pop
mov
cmp
cwtl
add
add
add
add
mov
pushf
and
xor
or
movsb
orb
push
sub
mov
dec
or
mov
outsl
mov
addb
pushf
adc
inc
adc
cwtl
xor
push
push
pop
dec
xchg
or
xor
addb
adc
sbb
fiadds
test
scas
xor
addr16
sub
fdivrl
or
push
cmp
mov
mov
adc
jp
or
ret
add
loopne
mov
sub
add
or
push
jb
xor
scas
loopne
push
mov
and
push
push
pushf
add
sub
stos
lods
inc
push
add
xchg
push
pushf
popa
and
push
push
jle
xor
adc
pop
aam
rclb
and
pushf
fcoms
fcomps
and
inc
or
sub
sub
xor
mov
add
sbb
lret
jb
mov
push
adc
or
bound
lods
adc
mov
lods
sahf
adc
dec
pop
xchg
daa
push
test
mov
js
xchg
add
inc
outsl
ret
sarb
pusha
mov
or
adc
jle
imul
ret
push
dec
jl
inc
mov
test
pop
data16
subb
or
jmp
sub
and
and
stos
dec
push
mov
xchg
xchg
mov
test
push
rcrl
insb
sub
jp
xor
js
ret
push
sub
push
sahf
mov
dec
pusha
gs
and
rclb
mov
test
and
adcl
pop
jnp
cmp
add
shrl
shr
xor
callw
mov
pusha
xchg
ret
xchg
cltd
inc
add
adc
mov
add
cli
lret
mov
jp
imul
xchg
pushf
imul
or
cli
sahf
sbb
jo
test
xchg
mov
xchg
mov
pop
push
enter
hlt
sub
and
add
and
mov
rclb
inc
test
sub
push
adc
inc
inc
lock
subb
test
mov
scas
fdiv
push
jmp
jne
inc
or
loope
addb
nop
rcrb
int3
push
or
push
cs
add
aam
sbb
mov
movsb
add
out
jbe
add
and
cmp
pop
cs
push
push
jbe
push
call
adc
lods
xchg
test
test
and
sub
popf
sub
sub
inc
push
bound
cmp
xchg
jns
imul
inc
or
xchg
dec
cli
adc
cmpsb
xor
in
ret
push
push
add
add
xchg
and
xchg
enter
out
and
dec
mov
and
loopne
xlat
mov
adc
in
xchg
mov
out
cld
les
push
cmpsb
ds
sbb
mov
adc
cwtl
add
xor
inc
mov
ret
rcl
add
mov
xchg
test
inc
cli
imul
mov
push
out
cwtl
int3
sub
aad
adc
rclb
sub
ret
xchg
add
xchg
sbb
push
jbe
inc
movb
xchg
scas
dec
adc
jl
adc
mov
call
clc
pop
xchg
xor
jb
cmpsl
movsb
xor
adc
and
cmp
dec
mov
or
push
sub
inc
or
mov
and
icebp
fsubs
mov
lcall
in
xchg
add
ds
stos
mov
pushf
or
je
cltd
mov
mov
pop
andb
enter
push
inc
xchg
adc
stos
xor
pop
xchg
sahf
adc
dec
loope
mov
add
or
inc
or
sbb
rorb
jecxz
insb
push
insb
or
add
loope
shlb
mov
add
dec
enter
add
fimuls
or
mov
mov
aam
jp
mov
dec
pusha
jle
roll
inc
ljmp
mov
clc
and
push
fwait
or
inc
lods
test
cwtl
or
dec
imul
mov
or
push
addl
push
sahf
call
repnz
cld
ljmp
inc
or
sub
jle
pusha
push
dec
adc
push
adc
lret
cwtl
or
dec
pusha
sub
sbb
or
scas
sahf
cmpsb
cmp
sbbl
data16
xor
sbb
add
sub
ds
hlt
and
push
fs
aad
or
dec
and
pop
cld
cld
xor
popf
pushf
int3
fs
sbb
inc
es
mov
or
sub
xchg
pusha
jl
and
push
adc
mov
and
data16
scas
adc
mov
mov
mov
and
cwtl
fisubrs
inc
and
test
sahf
ds
inc
xchg
int3
push
scas
push
xchg
add
inc
lcall
ror
addb
cld
sbb
sub
sbb
inc
mov
sbbl
push
add
cli
rclb
loopne
mov
pusha
adc
fidivrl
push
cmp
insb
push
faddl
adc
cltd
js
rorl
mov
mov
sub
lods
adc
sub
lods
pusha
inc
add
popa
cs
cli
pushaw
and
gs
lret
and
cmp
and
and
lods
or
sub
sub
adc
jnp
sub
subl
roll
mov
pusha
dec
subb
push
sbb
test
fcomps
test
xchg
pop
es
cmc
push
add
xchg
in
inc
jbe
add
sub
call
test
rcll
push
xchg
inc
loopne
xchg
jle
cmp
test
adc
cltd
dec
add
push
loop
or
js
inc
es
inc
dec
jo
fsubrs
xchg
push
or
cmp
or
lret
imul
cwtl
lock
or
ds
test
add
and
push
cmpsb
pop
add
bound
pop
and
and
insb
or
sbb
out
and
xor
mov
nop
bound
lea
sub
adc
sarl
mov
xor
push
aad
js
xor
xchg
push
notb
mov
mov
mov
add
or
mov
or
jb
add
mov
call
and
test
xor
xor
dec
push
mov
movsb
les
adc
pop
push
repz
xor
testb
lcall
inc
insl
mov
cmp
dec
xchg
push
dec
push
lods
mov
mov
or
xchg
adc
add
mov
and
cmpsb
push
movsb
or
leave
inc
sbb
add
adc
add
ss
and
test
sbb
xor
fs
pop
sub
loop
adc
adc
jp
mov
mov
sub
lcall
xor
xchg
or
pop
sbb
push
test
jp
xor
adc
sub
jle
adcb
insb
mov
mov
push
push
push
adcb
xchg
sub
adc
loope
xchg
xchg
stos
or
or
add
sub
push
mov
ret
test
add
jb
xchg
xor
int3
mov
inc
xchg
pop
add
je
and
pop
roll
jle
clc
jo
lea
add
inc
sbb
sbb
xchg
adc
sbbb
fcmove
dec
jb
fsubl
add
add
fs
cs
push
pop
hlt
or
fwait
jo
mov
inc
scas
mov
or
sbb
daa
sub
push
and
leave
dec
inc
push
add
add
dec
adc
nop
test
stos
call
push
aam
ss
sub
mov
mov
test
and
inc
add
add
scas
insb
out
mov
add
xorl
in
sub
dec
sbb
mov
mov
rolb
push
adc
xchg
mov
fs
mov
add
sbb
mov
enter
pop
pusha
xchg
xor
or
adc
call
in
add
decl
pushl
push
push
push
call
leave
ret
imul
mov
adc
mov
mov
orl
cmpb
fistps
jmp
imul
aad
cli
andl
insl
fs
mov
cmp
ljmp
sub
xchg
sbb
add
dec
pusha
cmc
cli
insl
loop
jne
dec
outsl
mov
test
fs
cli
imul
mov
ds
cmc
scas
andl
fsubs
pusha
fcmovnu
in
cmpb
es
lcall
pop
roll
mov
ds
sbb
sti
das
clc
in
ds
ds
jns,pn
scas
cmpl
sbbb
xchg
add
dec
lcall
shlb
test
add
aad
sbb
outsl
jg
imul
mov
fs
jns
add
loopne
pusha
imul
loop
imul
fs
lock
scas
dec
cltd
mov
scas
cltd
sbb
bound
sbb
outsb
lcall
insl
imulb
es
lcall
xchg
jns
subl
bound
scas
mov
cltd
dec
xchg
in
add
fs
xchg
test
xchg
cli
imul
pop
xor
jp
mov
jns
test
ffreep
xchg
lcall
inc
orl
jg
ds
pusha
loop
orl
inc
mov
jb
jo
fbstp
mov
imul
inc
imul
test
outsb
sub
mov
add
push
adc
sti
adc
add
add
or
sbb
sbbl
mov
dec
jne
jne
and
mov
xor
dec
das
xor
mov
aad
ds
sub
add
lret
mov
sbb
cltd
orl
push
xchg
scas
push
cmc
jns
inc
cwtl
push
jo
sbb
fadds
gs
imul
push
sti
sbb
pusha
es
sub
pop
mov
fs
sub
fiaddl
insl
pusha
subl
hlt
fadds
test
mov
repnz
xor
add
mov
mov
adcl
sahf
ds
mov
lods
lret
push
add
mov
mov
adc
mov
test
mov
push
aad
fwait
ret
loopne
aad
orb
or
jns
sub
cld
fisttps
push
mov
sbb
jns
inc
cmpsl
pop
outsl
xor
cli
mov
in
adc
inc
test
jb
fs
pop
push
xchg
adc
fs
test
sub
jp
and
cmp
jne
xor
frstor
xchg
adc
pop
fcoms
scas
lcall
push
add
adc
mov
or
inc
inc
sbb
push
mov
add
fcmovu
or
fchs
push
push
lret
or
xor
ljmp
xor
mov
xor
sub
pushl
pop
pop
adc
inc
xor
je
mov
lock
sbb
outsl
test
jb
push
adc
fisttps
mov
add
mov
das
add
pusha
ss
add
std
mov
pushl
xor
test
lcall
or
out
ficompl
push
add
fisubrl
test
xlat
iret
adc
sbb
mov
inc
insb
es
xchg
daa
jns
int3
dec
pusha
sbb
sti
fscale
rcll
dec
xor
pop
cmp
insl
mov
push
pop
ret
push
jecxz
into
xchg
popf
lods
clts
ficoml
cmc
adc
cld
push
and
ds
inc
xor
std
lcall
pop
sbb
sbb
cld
pop
aas
fsts
inc
or
sbb
adc
jnp
jecxz
sub
iret
fdivrp
fisttpll
push
pop
pushf
mov
outsb
out
xor
fs
jl
sub
aas
js
addb
nop
inc
sub
and
adc
cwtl
mov
imul
fidivl
inc
int
push
adc
insl
push
lods
inc
incb
push
jg
fs
mov
negb
js
pop
sbb
push
neg
insl
add
enter
push
fdivrl
rol
jg
in
gs
out
push
imul
loopne
push
push
cmpl
adc
push
push
ja
clc
call
je
mov
jmp
movsb
mov
sub
inc
inc
xor
mov
and
loopne
std
das
cmp
dec
lret
mov
jbe
sbb
mov
jg
iret
int3
xor
sbbl
cmp
pop
cld
aaa
out
jmp
inc
adc
mov
ds
jmp
mov
inc
rclb
inc
xor
add
xor
adc
push
pushl
xor
aam
lds
in
or
cwtl
es
inc
jg
fwait
sti
jno
fstl
fwait
fwait
add
pop
arpl
inc
push
int3
jb
or
out
decb
xchg
mov
jge
push
ljmp
cltd
push
sbb
test
cltd
mov
or
cmp
incl
mov
jo
dec
dec
add
and
pushl
cmp
adc
jge
jns
xchg
xchg
mov
fisubs
cmp
ljmp
ret
push
pushf
int3
add
pop
js
in
fdivl
incb
dec
addr16
out
mov
and
fcmovnbe
out
mov
into
inc
cmp
adc
inc
or
dec
dec
push
push
add
lock
mov
lcall
fcomps
jbe
lock
push
xor
xchg
ja
pop
xor
div
pop
push
sbb
call
popf
xchg
xchg
sbb
and
fcompl
mov
scas
outsb
mov
mov
inc
add
dec
pop
imul
imul
dec
pop
jp
xchg
dec
mov
jg
les
mov
mov
fdivrl
xchg
mov
sub
lock
lock
shl
mov
in
push
negl
sbb
popa
das
cmpsb
daa
and
in
out
adc
pop
push
jns
cli
mov
neg
sbb
pop
cmp
jns
lret
xor
out
incb
push
inc
push
or
arpl
mov
mov
popa
icebp
vpandn
cmpsl
xchg
in
insb
sbb
out
out
loope
idiv
ljmp
fsubrl
xchg
dec
inc
mov
sbb
out
aam
cltd
inc
jmp
adc
sbb
pop
mov
js
pop
fsubrp
lcall
cld
jg
add
into
pop
imul
inc
mov
pop
fcomip
lds
push
pop
xor
mov
mov
mov
lret
aas
call
push
jb
lret
repz
lods
add
sti
lahf
pop
sti
push
lret
fisubl
lahf
xorb
mov
xor
subb
js
mov
idiv
scas
incl
in
stos
inc
and
push
fs
movsb
and
dec
and
incl
ljmp
dec
pop
fbstp
inc
test
xlat
adc
jecxz
ret
and
jmp
sbb
fwait
testl
ss
mov
pushf
mov
imul
out
andb
add
jge
pop
fildl
inc
push
jle
incl
rol
test
jae
clc
std
insl
xchg
pop
push
loop
rorl
incl
or
into
mov
inc
test
call
jg
dec
cmpsl
sub
sti
int3
enter
mov
loop
xor
sub
sarb
push
jge
mov
roll
mov
stos
adc
nop
push
adc
leave
sbb
adc
pop
ds
call
pop
jle
lret
imul
mov
gs
bound
mov
aam
lods
jb
xlat
pop
sbb
arpl
sub
jmp
dec
dec
rol
leave
adc
xchg
fadds
xchg
test
add
xchg
sti
lea
or
mov
xchg
and
xor
push
xchg
pop
ljmp
fstl
jno
lods
inc
repz
jnp
sub
pop
xor
ja
xor
loopne
push
xor
or
ss
jge
shrl
in
dec
pushf
ljmp
jnp
jbe
notl
and
cmp
cmp
repnz
ss
roll
sub
lea
xchg
add
test
aad
outsl
pusha
cmc
outsl
xor
jb
stos
sbb
xor
mov
jecxz
or
xor
movsl
dec
dec
out
pushl
data16
test
stc
int
pop
data16
out
lods
sete
into
sub
push
cmp
jle
imul
imul
add
pushl
fldt
out
xor
insl
add
dec
imul
sub
jecxz
mov
scas
fs
lds
adc
push
xlat
aas
fadd
or
test
xor
xchg
or
jg
sar
or
stos
mov
push
jbe
jo
sbb
cmp
aaa
add
jb
xorb
xor
insb
in
fdivr
mov
fistpll
cmpsl
gs
mov
push
js
add
inc
std
andl
mov
out
pop
cmp
pop
fcomps
movl
cld
dec
dec
rcrl
dec
aad
sub
mov
add
nop
fstl
loop
xor
cld
jle
pop
cld
in
jecxz
xchg
mov
sub
or
inc
add
pop
add
decl
shlb
movsb
scas
lcall
mov
mov
adc
dec
je
fnsave
jo
mov
jmp
loopne
jle
filds
jne
call
movaps
adc
in
idivl
push
nop
rorb
dec
fnsave
stc
adc
fnstsw
cmpb
sbb
das
lds
jg
jmp
inc
inc
in
leave
and
into
add
test
jg
xchg
add
xchg
mov
sar
sub
fidivrs
pop
sbb
je
xchg
ss
lods
pop
lret
push
adc
pop
scas
insb
rcrl
and
outsl
push
cld
repnz
pusha
hlt
call
mov
sbb
jbe
jnp
dec
mov
cld
out
cmp
cmp
add
cltd
jb
in
scas
jmp
popl
mov
mov
adc
xchg
loop
bound
shlb
xchg
sarl
rolb
mov
push
fnsave
cmp
pop
decl
neg
call
xor
mov
ds
out
fxch
hlt
dec
pop
int3
pop
cmp
mov
add
dec
imul
jmp
mov
in
xchg
inc
cmpsl
ss
andl
mov
clc
ljmp
sub
pop
pop
mov
jmp
icebp
sub
into
dec
sbb
dec
in
cmc
sti
push
cli
addr16
pop
pusha
lea
push
decl
movsb
cmp
xlat
or
ljmp
adc
rorl
mov
inc
cmp
xor
sub
mov
pop
fistl
mov
jo
lahf
fs
adc
mov
int
in
pushf
sub
sar
int
push
inc
mov
sbb
lret
sti
mov
cld
in
xchg
outsl
mov
hlt
in
jmp
xor
sub
into
int
clc
ffree
mov
je
xchg
sub
jecxz
add
sub
mov
imul
jge
sahf
cli
adc
arpl
or
arpl
das
lock
add
xlat
loop
lock
jmp
dec
in
repz
push
inc
mov
dec
sub
jbe
inc
fs
ret
cltd
repz
dec
lods
sbb
cli
push
daa
aam
cld
cltd
push
popa
xor
pop
outsb
dec
xchg
jg
fildll
in
sub
stos
sbb
sub
mov
xchg
aaa
inc
outsb
xor
mov
and
cmp
out
push
push
sbb
rorb
add
pop
dec
outsb
sbb
test
vmread
aaa
jno
pop
pop
stc
jno
jge
pushl
cli
divb
push
cld
cli
push
xor
clc
jbe
clc
aad
xchg
push
cmpsl
and
idivl
imul
repnz
fisubl
mov
push
push
cltd
sahf
sub
sar
sti
test
or
mov
pop
das
xor
out
sbb
fidivs
ficoms
xchg
mov
cmp
std
movsb
imul
popf
mov
imul
loop
ja
mov
mov
lret
outsb
fimull
cmp
mov
push
pop
jge
mov
sbb
std
iret
mov
out
enter
stc
insb
mov
scas
mov
mov
pop
or
sub
dec
cmp
clc
lahf
cwtl
ja
jae
jg
clc
and
xchg
sti
movsb
ret
mov
sti
jmp
mov
and
aam
mov
clc
jg
std
push
test
pop
jmp
and
mov
jmp
push
and
xchg
mov
cwtl
jecxz
cmp
push
popf
stos
ficoml
push
iret
mov
and
std
mov
adc
fisubrs
xlat
mov
adc
cmp
jg
pop
and
jmp
cmp
xorl
jecxz
mov
xlat
inc
lds
sub
cmp
ja
jmp
in
inc
cltd
ja
sub
or
lret
jnp
in
cmp
mov
movsl
push
add
in
xor
fnstsw
pop
popa
ljmp
dec
mov
sti
or
push
cmc
cmp
rcl
mov
push
xchg
ja
sti
mov
adc
ds
add
stos
mov
aas
sbb
out
sub
xor
and
mov
clc
incl
adc
int
cwtl
in
dec
or
cld
cmp
pop
popa
out
or
popf
lcall
aas
xchg
std
xor
fdivr
jmp
pop
cmpsb
mov
xchg
cli
aas
xchg
xchg
adc
or
jg
fbld
shl
jns
mov
sub
inc
dec
inc
sub
lods
and
fnstcw
mov
ret
push
or
aas
lock
or
adc
jle
or
outsl
loopne
xor
lea
divl
into
js
cmc
mov
mov
inc
sub
mov
test
mov
pop
mov
je
mov
mov
inc
jnp
outsb
mov
lret
adc
mov
ja
jne
scas
pop
jge
bnd
jmp
ja
pushf
nop
daa
push
inc
scas
xlat
cmpsb
mov
sbb
cmpsl
les
push
xchg
jmp
clc
xor
xor
in
movsl
push
push
mov
jge
ror
mov
sarl
xorl
pusha
ds
aas
mov
xor
lret
mov
xor
mov
xchg
cmp
mov
or
or
push
bound
adc
jmp
outsl
inc
adc
clc
pop
pop
push
mov
out
jl
jecxz
fsts
sub
sbb
out
ss
push
jbe
ja
pop
ficomps
xchg
sarb
and
std
push
xchg
sbb
xor
mov
mov
jae
inc
push
lahf
fidivrl
subb
add
or
fimull
inc
mov
test
mov
pop
mov
dec
mov
stos
aam
sbb
leave
sbb
js
je
push
rorl
cwtl
stc
lcall
andl
jecxz
dec
clc
cmp
fwait
sti
and
cmc
dec
push
popa
in
or
mov
mov
push
bound
pop
xchg
xchg
dec
fsub
pushl
mov
sub
es
pop
rorl
iret
shlb
xor
bnd
stc
stc
cmp
pop
das
sub
dec
icebp
xchg
mov
jge
adc
nop
mov
jae
shlb
ja
dec
xlat
xlat
mov
out
lea
cltd
jecxz
popf
jecxz
test
mov
aam
xlat
dec
add
or
testl
xor
lock
mov
jge
xor
jmp
inc
call
lahf
mov
movsb
xor
nop
cmp
add
andb
jne
repz
xchg
rcrl
jo
int
out
sbb
adc
xor
lahf
pop
aas
push
xchg
sarb
push
dec
add
add
add
lret
xchg
ja
fdivrp
sub
add
shrl
js
push
jbe
mov
dec
movsl
sbb
jae
add
stos
pop
jle
aad
jl
lcall
out
dec
xor
add
mov
xchg
mov
jge
fcoml
imul
lahf
or
jg
fistl
xor
dec
cmp
pop
mov
aam
imul
fistpll
and
add
arpl
pop
leave
movl
jne
mov
adc
or
add
ja
stos
xchg
jo
cmp
lcall
ljmp
mov
inc
jle
mov
cld
out
lds
push
sub
ss
cld
cmp
dec
repnz
xchg
pushf
sub
test
lcall
adc
pop
xchg
and
cmp
in
fwait
cltd
sbb
mov
jb
mov
mov
fdiv
stc
sub
push
jg
incl
popf
cld
insb
and
stos
scas
push
lahf
and
fiadds
mov
stos
fisttpll
jnp
cli
inc
mov
out
fldcw
or
jl
aas
mov
in
add
test
in
data16
add
popa
scas
aad
das
push
jmp
xor
dec
ret
push
in
call
into
aas
lock
mov
xlat
lods
mov
movsl
sbb
cli
leave
fstl
jecxz
ret
mov
add
std
loopne
das
shl
adc
jns
mov
inc
out
fdivl
cwtl
mov
sarb
jb
sahf
icebp
incl
mov
adc
inc
push
loop
ds
std
jg
jns
leave
cmp
gs
std
xor
lods
or
movsb
or
mov
or
pop
aad
ja
mov
dec
outsl
cld
mov
out
in
sbb
cmp
fsubs
into
push
stos
addb
scas
icebp
push
mov
or
xchg
xchg
cmp
jl
inc
sbb
xor
sbb
loope
test
jnp
jbe
sub
call
xor
push
sahf
xchg
jmp
push
lahf
loope
bound
rclb
inc
call
cld
sbb
mov
and
jmp
cmpb
xchg
hlt
out
loop
out
add
test
lcall
mov
or
sete
jg
xchg
adc
mov
lods
stc
push
dec
push
xor
das
cli
mov
ret
jge
sbb
sub
mov
dec
jmp
sub
mov
fdiv
movsl
inc
dec
popf
rorl
cmc
mov
lods
cmp
or
mov
push
push
enter
cs
lock
jle
dec
dec
out
adc
push
adc
or
in
out
cmpsl
jl
movsb
testb
je
lahf
sbb
inc
std
outsl
mov
cmp
ja
psllq
xchg
aas
rorb
data16
lock
adc
or
pop
lret
nop
mov
push
sbbb
jge
inc
cld
mov
jae
mov
xchg
imul
test
pop
movsl
pushf
push
push
push
insb
cli
sub
test
bound
shlb
pusha
cld
lock
outsl
and
fisubl
es
push
cmp
and
lds
imul
lds
pop
mov
lods
ffreep
sbb
decl
int3
imul
sub
in
mov
iret
inc
outsl
pop
inc
repz
movsb
adc
imul
incl
xor
ret
loopne
pop
gs
shr
popf
mov
inc
mov
sahf
pop
pushf
jg
enter
pushf
jmp
push
cltd
int
jmp
xchg
aam
mov
cmpsl
ljmp
clc
pop
testb
scas
push
imul
xlat
lcall
jecxz
fsubs
add
xchg
sub
push
sarl
orb
fmuls
inc
sub
push
push
mov
xor
dec
xorl
out
jbe
std
cmp
push
cs
jg
clc
pop
mov
sub
dec
rorb
data16
mov
lahf
jmp
lock
in
and
pop
jnp
loopne
sbb
clc
xor
xor
imul
sub
push
jnp
push
sahf
mov
sub
stc
js,pn
loopne
jae
imul
xor
repz
movl
outsl
pop
fcoml
fadds
imull
aaa
inc
dec
jg
shlb
rorb
adc
mov
imulb
mov
loopne
jmp
mov
xor
inc
fisubrl
insl
scas
mov
lahf
xlat
ja
stos
push
pop
cmp
jo
ja
outsl
dec
call
sbb
xchg
sub
rolb
xchg
mov
addr16
ds
lahf
fs
out
push
push
add
inc
xchg
lahf
ror
lds
rdtsc
push
and
jne
inc
lock
scas
cmp
mov
call
stc
xor
push
movsl
jg
cmpl
loop
aas
call
cmp
test
sub
sub
pop
popa
push
aas
pop
push
cmp
lods
add
mov
or
cwtl
jo
sub
das
sub
cmp
fistpll
or
sub
or
inc
cmpsb
test
jmp
cmp
xor
ret
mov
fs
out
rolb
add
and
add
or
popf
mov
mov
jae
push
cmp
call
in
jge
call
cmpsl
add
push
add
call
inc
pop
lcall
or
jns
mov
xchg
add
das
fnstcw
pop
fcoml
cmp
decl
or
gs
adc
push
sbb
jb
jg
clc
dec
mov
jg
adcl
cmp
gs
call
jbe
std
inc
xchg
clc
orb
mov
push
mov
loope
test
add
cli
incl
or
cmp
fisttps
jmp
std
aaa
clc
hlt
mov
xchg
in
xchg
sarl
or
add
xchg
lahf
pop
push
icebp
sub
add
jge
int
aaa
les
loop
out
fmul
mov
ljmp
dec
cwtl
sub
adc
imul
cmp
mov
loopne
jnp
adc
jg
sti
mov
jecxz
cmpsb
sahf
push
jle
cltd
aam
sub
hlt
adc
js
pop
js
adc
push
mov
push
mov
in
adc
cmpsb
test
adc
dec
push
pushl
inc
xchg
jne
mov
jge
test
adc
jmp
enter
nop
inc
inc
loop
inc
cmp
cmp
into
jle
stc
enter
push
xor
mov
jns
jle
or
xchg
mov
repz
jg
int
fsubs
pop
inc
jmp
adc
pop
insl
mov
aas
rorb
or
popf
inc
pop
lret
gs
movsb
shrb
jg
std
dec
sar
sub
mov
out
adc
lock
jae
call
adc
xor
hlt
int3
aas
pop
pop
add
jp
xchg
dec
call
fdivrl
mov
add
adc
pop
dec
call
mov
inc
lock
or
addr16
add
mov
shl
mov
xchg
mov
loop
outsb
push
icebp
or
out
inc
push
push
int
jo
dec
js
push
inc
lods
lahf
push
popf
decl
arpl
movb
add
fwait
lock
aas
sub
mov
sbb
xor
out
jmp
xlat
or
jl
cmpsb
jg
negl
mov
mov
jne
daa
clc
into
loope
cmp
xor
rcll
aad
or
ljmp
xor
mov
mov
mov
fists
sbb
pop
jne
movsb
out
push
inc
dec
insb
push
das
ss
sbb
sti
stc
shll
sarl
pushl
arpl
lahf
mov
push
adc
adc
outsl
jmp
xor
sub
push
sbb
out
out
jg
arpl
adc
in
pusha
sub
cmpsl
sti
push
lods
lahf
jbe
pop
fsubrs
cmp
daa
sbb
sahf
sbb
cmp
mov
lret
cmpsb
push
mov
cmp
mov
and
mov
cld
and
push
jle
adc
pop
xor
sahf
flds
ja
mov
cmp
cld
cmpsl
mov
xlat
flds
sbb
mov
pop
jle
xor
cmp
jno
and
call
test
lcall
xchg
pop
sub
mov
sbb
mov
mov
xchg
mov
pushf
lock
incb
inc
sbb
mov
out
fsubrl
sub
lret
sbb
pop
jbe
out
loopne
cld
fildll
in
lret
sub
arpl
and
adc
add
fsubs
cmp
cmp
xchg
mov
fucomp
into
mulb
outsl
xchg
jae
fistpll
loopne
fcomp
inc
sub
lods
inc
or
sbb
stos
push
mov
or
xor
jmp
and
push
loope
hlt
test
iret
ja
or
inc
rolb
ret
sbb
dec
sbb
sbb
sub
cmp
pop
incl
addr16
rclb
fbstp
sahf
cltd
or
mov
dec
or
pusha
jg
das
ret
fwait
addb
dec
shrl
loope
rcrl
mov
mov
cmp
call
jge
jl
xchg
jae
xor
fildl
dec
adc
mov
cli
sarb
ljmp
and
pop
and
push
popl
mov
xor
loopne
clc
sbb
subl
insb
shlb
dec
or
xchg
xor
jge
jnp
or
jmp
inc
and
or
ret
cmp
push
fcoms
sub
pop
xor
negl
pusha
test
imul
xchg
push
mov
inc
xor
cmp
push
jg
push
xchg
jno
lahf
push
inc
pop
mov
xor
add
cmpsb
into
rcrl
or
or
or
jge
xchg
sbb
xor
ljmp
dec
xchg
and
xchg
mov
and
jno
lea
mov
jg
addr16
das
fisttpl
lock
pop
mov
inc
push
dec
or
mov
push
cmp
pusha
loope
sbb
sub
mov
mov
add
mov
imul
jg
fiadds
test
sbb
lcall
clc
aas
and
pushf
xor
push
int
cli
ja
int
repnz
dec
mov
adc
jle
xchg
icebp
aas
ret
std
test
das
xor
in
aaa
push
or
jg
add
stos
data16
sbb
call
dec
ss
push
in
cwtl
jo
popf
dec
sarb
test
insb
outsb
std
lcall
cmove
xor
sub
rorb
inc
pop
sbb
and
loope
out
lret
add
out
jnp
fistpll
push
xor
jl
jle
inc
ja
mov
aaa
or
mov
jg
mov
push
jmp
adc
mov
jl
data16
fisttps
sbb
cmp
jmp
ss
jno
sub
jnp
icebp
or
pop
mov
movaps
jnp
decl
lcall
dec
jns
in
sahf
dec
jbe
jecxz
jbe
pop
sbb
xchg
popf
mov
leave
xor
jmp
bound
out
cmp
inc
sub
and
sbb
repnz
xabort
lock
sbb
dec
bound
and
cmpsl
mov
xor
pop
xor
add
pop
faddl
pop
adc
and
fstps
mov
cli
fists
cmp
jmp
cmp
or
mov
mov
mov
jecxz
loope
pop
inc
jmp
push
adc
inc
dec
adc
in
mov
inc
pop
lahf
xor
sbb
sbb
pop
pop
ss
hlt
jbe
in
fdivrl
and
or
inc
pop
fsts
movsl
loop
add
add
lahf
mov
push
daa
dec
pop
repnz
fldenv
hlt
ret
inc
lcall
lods
mov
aas
shl
imul
in
adc
movsl
dec
loope
sti
jg
in
stos
in
inc
mov
addr16
imul
adc
insl
push
out
add
pop
bound
adc
dec
in
dec
xor
incb
leave
lea
xchg
into
sub
ret
lds
je
ret
cmp
jae
jge
jg
mov
xchg
lea
sub
aas
loopne
fistps
aas
shll
pop
jnp
fwait
add
and
mov
sbb
mov
idiv
icebp
call
xor
pusha
imul
inc
or
cmpsl
cli
pop
mov
mov
imul
out
or
mov
push
imul
jae
push
push
bound
dec
cmp
imul
pop
std
jnp
cmp
sub
mov
and
jb
cld
dec
cs
adc
and
xor
or
cmpb
jmp
out
inc
mov
out
daa
jg
cli
lret
xor
and
add
js
clc
test
das
loopne
sbb
mov
insl
cmp
dec
mov
gs
mov
jecxz
add
cs
jp
xor
addl
push
mov
xlat
lock
je
jg
mov
imul
push
fsts
sti
inc
mov
dec
pop
pop
cmpsb
add
addr16
iret
ret
dec
xchg
call
outsl
das
enter
sub
dec
dec
inc
jmp
es
push
outsb
loopne
stc
pop
pushf
movsb
add
mov
cmc
jge
jnp
inc
jbe
call
test
mov
or
stc
push
hlt
cltd
repnz
jb
std
dec
sub
jmp
or
add
clc
repnz
lods
jns
pusha
dec
cmp
jg
mov
sbb
leave
add
loop
addr16
push
jno
std
filds
fisubrs
cmp
push
test
add
pusha
stos
gs
adc
fistps
jmp
out
xor
add
xchg
lods
pop
insb
pop
imul
pop
stc
mov
insl
jmp
mov
mov
aad
lea
jle
outsb
sti
dec
dec
imul
loopne
out
xor
ja
out
pop
das
test
lock
dec
xchg
push
sbb
xor
test
andl
fwait
push
mov
in
lcall
loopne
ja
sti
leave
cmp
or
fs
jbe
lret
dec
jg
jnp
mov
xlat
add
orl
dec
out
and
jl
sub
add
imul
in
decl
popf
mov
xchg
push
lods
push
jg
popl
clc
incb
es
cld
dec
mov
xchg
push
stos
push
daa
inc
mov
ret
lds
jg
mov
dec
mov
or
lods
sti
pusha
insl
jae
dec
push
stos
mov
adc
movsb
mov
out
sbb
pop
jae
arpl
inc
scas
pop
fs
add
pop
movsl
outsl
adc
outsl
icebp
in
in
xchg
icebp
jnp
enter
imul
pop
cld
std
ss
sbb
or
decb
fmul
pusha
inc
jnp
push
jge
out
lock
cmp
in
xor
scas
movsb
and
xor
aad
pop
hlt
lret
and
and
leave
sbb
inc
loope
loope
loop
lcall
and
cli
inc
negl
sar
pop
stos
and
xor
cli
clc
iret
or
bound
add
hlt
aas
adc
scas
lret
fstl
test
jns
cmpsb
pusha
out
hlt
xor
dec
mov
adc
loopne
push
fistpll
xchg
insl
aaa
ficoml
mov
pusha
arpl
call
fisttpll
insl
hlt
jle
mov
mov
cmp
jnp
push
gs
xchg
add
sbb
imul
xchg
cs
mov
or
xor
es
push
dec
out
inc
adc
hlt
psraw
fs
mov
mov
pop
testl
inc
mov
lock
xor
xor
pop
in
ret
cmp
cmp
mov
dec
xchg
sahf
insl
ud0
in
lea
lahf
push
xchg
stos
mov
call
sbb
jnp
pusha
xchg
aad
enter
loopne
mov
out
lahf
lods
mov
arpl
shlb
clc
aas
add
ficompl
mov
jae
lods
lock
and
call
xor
jle
orl
push
push
enter
pop
mov
jmp
aad
into
leave
jne
fcompl
lock
cmp
sbbb
rorb
jo
out
jo
sti
pop
leave
mov
and
dec
jns
cmp
jg
repz
js
std
inc
leave
xor
lock
in
mov
push
push
lahf
pop
inc
outsl
daa
repz
mov
cwtl
lds
in
popa
sti
fucomip
testl
push
inc
or
sub
cs
jo
jns
sub
jecxz
pop
shrb
sbb
add
lock
cld
dec
sbb
in
jle
nop
loopne
mov
dec
pop
pop
loope
or
push
nopl
jle
icebp
cmc
fistps
mov
pop
push
adc
jne
jne
shl
or
fucom
mov
out
rorb
jg
mov
sbb
flds
xchg
sar
cmc
push
in
jns
ror
pop
or
sbb
out
push
jp
sub
lret
test
lods
inc
out
inc
stc
inc
lods
lods
out
mov
stos
dec
test
jg
pop
lret
mov
mov
fbstp
jae
call
fmulp
xor
xchg
insb
imul
mov
pavgb
pop
xor
les
outsl
icebp
lock
mov
sbb
imul
add
aas
or
lretw
in
insl
ret
andl
jg
fsubrs
push
push
jg
push
pop
js
loope
xlat
testb
xchg
je
pop
mov
in
cli
decl
push
into
mov
add
rclb
in
push
mov
stos
jbe
and
aas
xor
adc
sub
out
loop
sbb
lret
sbb
adc
fs
push
je
mov
out
lcall
jne
js
jle
imul
jo
arpl
lods
insl
or
clc
aaa
xchg
sti
sbb
test
add
fwait
or
cmp
stc
adc
sbb
stos
mov
outsl
or
push
fwait
fs
dec
fs
pop
out
cwtl
push
dec
xor
xor
clc
orl
rcrb
shlb
js
jecxz
or
push
imulb
adc
sbbl
out
pop
sbb
std
and
mov
loopne
push
les
orb
xor
sbb
pop
or
fnsave
mov
test
push
scas
mov
push
jle
dec
jmp
shrb
dec
lea
xchg
adc
mov
lock
add
clc
outsl
xor
sti
cmc
dec
movb
jecxz
add
sbb
xor
stos
into
pop
fwait
lods
ja
jo
out
jno
add
aam
xchg
xor
je
mov
fcomps
sahf
or
pop
mov
or
dec
fists
lock
mov
mov
imul
mov
iret
lea
out
fldl
fnsave
pop
xor
sub
xchg
aas
cmpsb
div
stos
lods
adc
addr16
jo
popa
sbb
stos
pop
pop
or
mov
or
add
ja
push
cmpsb
pusha
adc
pop
ret
cld
inc
sahf
sbbb
sbb
push
xor
or
pop
imul
int
dec
jns
shrb
dec
xchg
ds
mov
aaa
mov
pop
sub
lret
out
jmp
sub
inc
pushf
fmul
sub
sbb
jg
xchg
dec
cmpsl
movsb
xorl
stos
push
add
call
in
lods
test
or
sahf
jecxz
scas
test
aas
lds
ljmp
pop
outsl
adc
lahf
loop
imul
xchg
lock
jnp
lahf
push
icebp
and
fwait
pop
ret
add
dec
xchg
mov
mov
mov
outsl
popa
subb
test
repnz
mov
lods
rorl
push
pop
scas
or
sahf
jg
and
pop
or
mov
loopne
add
sarb
or
add
jp
outsb
sub
fdivrl
incb
cli
out
inc
mov
loopne
ret
xchg
shrd
aaa
inc
cmp
decl
sub
ljmp
cmp
jp
out
jecxz
and
jns
out
push
shrl
lds
mov
push
ret
ja
xchg
sti
sarl
xor
es
fs
icebp
jg
push
inc
dec
scas
aaa
hlt
es
clc
adc
cmp
out
jno
imul
fidivl
xchg
insl
ss
scas
sub
xor
rcll
and
movsb
dec
mov
fistps
mov
inc
test
jge
or
imul
inc
loope
mov
out
sub
push
ljmp
push
aas
adc
xor
incl
daa
lock
movsb
push
test
lcall
cmpsb
sub
dec
push
sbb
fdivl
decl
pop
push
pop
subl
std
jge
pop
cmp
mov
pusha
test
das
aas
pop
std
sbb
mov
pop
or
jmp
cld
out
and
cmp
jle
inc
jmp
pop
clc
xchg
sahf
out
xchg
push
data16
xchg
and
repz
cmp
mov
andl
hlt
mov
jo
xor
cli
stos
mov
dec
out
jg
jmp
jo
dec
faddl
xor
pop
aas
sti
popa
add
xchg
aaa
nop
pop
inc
xabort
decb
rol
sub
mov
and
test
mov
ljmp
jecxz
outsb
cli
mov
pop
sub
inc
ss
jl
mov
aad
mov
ret
cmp
pop
push
dec
icebp
aas
push
pop
add
sbb
dec
rol
inc
aas
shrl
pop
jl
cwtl
loopne
cltd
loop
sbb
shrl
sbb
and
inc
fnstsw
shrb
mov
aam
in
call
xchg
add
imul
sub
repz
arpl
lods
aas
add
add
jg
addr16
push
les
push
sbb
xor
and
imul
mov
shll
cmp
xchg
push
jno
pop
ds
inc
mov
jp
clc
test
sbb
pop
popa
sub
cld
out
js
mov
into
add
stc
jle
mov
fidivrl
add
inc
shrb
xchg
imul
dec
mov
in
push
mov
enter
ret
cmp
mov
stos
and
fwait
sbb
push
icebp
out
lea
hlt
aaa
mov
and
aaa
or
fwait
jmp
jg
pop
jo
cli
push
or
and
pop
cmp
outsl
loopne
call
jbe
arpl
inc
scas
out
cwtl
jns
dec
and
jmp
shlb
adc
jmp
jns
ja
push
in
std
pop
pop
pop
xor
mov
xor
lods
and
inc
jg
int3
adc
addb
enter
mov
cld
dec
add
add
popf
out
push
addr16
mov
inc
jp
cmp
test
push
clc
fucomip
xor
jmp
and
jp
das
repz
add
cmc
inc
addr16
sbb
fdivrp
xlat
cmpsl
jg
filds
test
jg
adc
adc
out
incl
call
cmp
jle
enter
and
es
pop
jns
into
mov
mov
clc
sbb
mov
dec
inc
dec
pop
sub
pop
fisttps
imull
xor
imul
xor
cmova
aam
das
and
incl
aad
cld
test
test
stc
mov
mov
mov
jno
inc
out
es
data16
ret
fisttps
jno
sbb
adc
loopne
mov
mov
lret
inc
aaa
dec
inc
sbb
mov
jmp
push
push
pushl
je
rorl
imull
jmp
dec
test
push
jl
orl
icebp
lahf
pusha
push
lret
andl
sub
jnp
leave
cmp
pop
dec
out
or
jg
cld
inc
mov
mov
cmc
or
stos
outsl
or
xlat
or
dec
adc
cmc
aas
mov
pop
aad
in
fidivrl
xor
and
stos
std
scas
sarl
jmp
lods
pop
jmp
sbb
adc
paddsb
mov
fs
stos
sti
jp
in
ja
adc
mov
sub
or
mov
mov
int3
cli
enter
ret
stos
push
les
mov
js
insl
out
call
dec
lret
imul
test
clc
sbb
jg
pop
test
adc
xchg
xchg
xor
dec
cmp
dec
in
add
lock
loopne
in
outsb
loop
out
xchg
cmp
dec
inc
icebp
loopne
jae
pop
incl
ja
push
leave
aam
into
mov
pop
xor
lock
shr
push
outsl
popl
scas
pop
xchg
cli
jmp
imul
mov
cmpsb
imul
hlt
xchg
xlat
jge
cltd
nop
pop
pushf
cld
cmp
push
cmpsb
sbb
addr16
sarb
sbbl
ret
cmc
jg
add
pop
loope
incb
test
xchg
inc
add
inc
stos
mov
fwait
and
mov
or
mov
push
pop
lock
mov
xchg
push
roll
add
dec
mov
dec
loopne
sbb
xlat
incb
inc
pushl
repnz
stc
xchg
arpl
testb
int3
mov
mov
mov
jno
out
jle
fs
push
cmp
outsl
imulb
inc
jmp
repnz
xchg
mov
stos
arpl
repz
sbb
and
lahf
sbb
xchg
jno
jae
or
pop
testl
push
and
mov
add
add
clc
scas
incl
pop
movsb
outsl
sub
sarb
imul
adc
leave
mov
cmp
shl
aas
adc
cli
dec
pop
jno
sbb
pusha
out
int3
dec
ficoml
push
xor
test
sub
xchg
or
adc
ss
dec
add
cmp
pop
loope
fldenv
test
push
mov
movb
nop
negb
pop
int
adc
push
jnp
mov
outsb
push
lcall
cld
xor
addr16
enterw
jne
push
mov
mov
and
out
cmpsl
out
lock
call
sbbb
shlb
aas
vpmacswd
lods
shld
sarl
mov
adc
pop
ljmp
sbb
outsb
jg
pusha
gs
aas
and
cmpsl
mov
inc
sqrtps
lock
or
and
inc
cld
sub
pop
inc
pop
mov
lret
jmp
pop
mov
dec
and
adc
push
cmp
push
or
push
les
xchg
scas
push
cmp
pop
das
arpl
ds
incl
xchg
mov
sbb
fcmovnbe
ja
jae
sub
or
pop
push
sub
cld
add
and
mov
push
sti
xchg
inc
jnp
xchg
notl
loop
jmp
ljmp
scas
mov
mov
dec
mov
jg
inc
into
adc
jne
psrad
jbe
push
and
iret
mov
adc
scas
xor
mov
outsl
test
add
jmp
iret
sahf
ja
add
and
fisubl
adc
std
mov
adc
das
dec
nop
xor
mov
in
xlat
lods
sub
fnstcw
mov
add
or
jg
and
adc
inc
cmpsb
popf
loope
out
and
jne
sbb
les
adc
out
aaa
xchg
sbb
dec
adcb
test
in
ds
sbb
cmc
psubb
out
fbstp
mov
pop
sub
outsl
add
ja
into
leave
outsb
mov
jl
lcall
push
std
cmp
sbb
aas
add
decl
leave
jno
arpl
pusha
aam
fstpt
jmp
mov
popf
mov
mov
orb
mov
je
pop
jns
fwait
push
or
icebp
pushf
inc
xor
and
mov
or
popf
test
sbb
aad
sbb
adc
outsb
idivl
test
loop
not
jmp
mov
std
mov
outsl
push
iret
ret
les
jns
icebp
jnp
cld
cmp
pop
out
or
fisubs
fldl
or
in
or
es
lock
lods
inc
cld
mov
outsl
xor
das
in
push
sbb
shll
mov
popf
lahf
aaa
icebp
dec
mov
dec
mov
push
movq
sbb
inc
sbbb
xchg
inc
mov
or
mov
mov
mov
cli
xchg
mov
xlat
xor
in
test
fisubl
test
or
pop
sbbl
loopne
shll
cmp
gs
dec
jg
pop
sub
ficoml
xchg
dec
js
pop
mov
jp
jnp
push
pop
xchg
jmp
decb
mov
gs
hlt
stos
gs
jne
loopne
cld
mov
shrl
mov
cli
mulb
mov
jecxz
sahf
lock
sbb
cld
pop
das
js
pusha
jl
mov
add
and
push
idivl
push
mov
ja
rcrb
cmp
lcall
dec
xor
gs
xor
subb
cmp
aas
adc
mov
ljmp
cmp
sbbb
insb
mov
mov
jns
fcomps
sbb
and
das
xor
shr
cmp
test
xorb
sahf
cld
mov
lock
pop
in
enter
leave
bound
inc
pushl
mov
out
jno
jle
adc
mov
or
add
mov
test
jp
leave
int
cld
inc
pop
les
ret
mov
or
ja
popf
mov
int
faddl
or
jno
sbb
aad
push
daa
popa
mov
adc
pop
xchg
ss
cmp
movsl
mov
test
xchg
aaa
popa
sbb
adc
mov
call
shll
mov
decl
insb
dec
stos
inc
xchg
cmpb
fcmovnb
sti
aas
or
cmp
lcall
mov
xchg
jno
jg
sbb
cmp
loopne
pop
das
cmp
mov
movsl
fstl
movsl
dec
out
jbe
gs
movb
iret
mov
lds
lods
sbb
or
jg
sti
idiv
xorl
cmp
push
pop
xor
loopnew
jo
xor
ja
lahf
mov
add
movsl
clc
shlb
mov
shrb
jo
fcomip
xchg
aas
pop
cmp
inc
sbb
adc
push
lahf
or
scas
add
out
int
bound
incl
xchg
scas
jle
jecxz
jle
jle
add
push
ds
addb
and
mov
aas
dec
push
notl
adc
push
pop
stc
cmpsl
stos
mov
and
jg
jmp
shlb
movsl
idivl
mov
sahf
leave
sbb
inc
xor
sarb
inc
jae
push
sbb
jo
pop
sarb
xchg
xchg
lods
ss
int3
leave
aad
stos
mov
or
jne
jne
mov
mov
or
mov
mov
xor
aam
fwait
push
int
push
xchg
cltd
cmp
inc
push
sahf
out
cwtl
bound
jp
jg
icebp
incl
jle
jne
mov
pop
pop
or
jmp
mov
add
out
inc
lds
push
dec
insb
lock
mov
inc
sub
pop
jecxz
loope
sbb
pop
inc
or
mov
xchg
dec
ja
jmp
xor
xorl
icebp
aas
loop
mov
div
mov
outsl
mov
fdivr
add
cmpsl
dec
test
loope
mov
add
imul
sub
pop
xor
ret
and
pop
sub
idivl
fs
aad
sbb
arpl
je,pn
arpl
mov
cmc
popf
in
in
cs
fisubrl
int3
mov
pop
icebp
or
jb
popf
scas
dec
int
add
adc
clc
pop
jmp
xchg
fsubrl
adc
sarl
rclb
mov
insl
ret
popa
je
inc
fstps
cmpsl
fucomip
addr16
nop
mov
xlat
ljmp
mov
hlt
outsl
iret
cli
sti
adc
test
mov
pop
push
rorb
hlt
arpl
lret
jno
out
in
mov
fs
mov
jle
pop
ljmp
mov
loop
outsb
movsb
iret
les
aam
incl
add
inc
aas
pop
xchg
insb
mov
cmp
fdivr
cmp
ret
mov
loope
push
pop
jmp
sbb
mov
sbb
xadd
subl
mov
add
jle
push
jg
add
stc
cltd
lods
push
or
jns
je
push
bound
movsl
inc
jge
rcrl
fstpl
lock
cmp
jb
ret
fcomip
jg
mov
iret
arpl
dec
sub
incl
pop
pushl
xchg
into
sbb
adc
dec
rol
adc
jge,pn
jo
xchg
cli
adc
std
jg
mov
cs
xor
push
mov
out
ja
xchg
push
and
jae
sbb
sbb
negl
xchg
mov
cmp
cli
pop
out
inc
cs
adc
adc
stc
jg
jg
shr
mov
aaa
mov
cmp
ljmp
lret
aam
icebp
popf
mov
stc
loop
shr
cmc
scas
jae
inc
add
xchg
cwtl
inc
std
inc
std
jo
mov
adc
clc
sub
or
add
arpl
pop
add
test
jg
orl
jns
xchg
out
rcrl
pushl
pop
jp
mov
jl
cld
clc
dec
loope
add
stos
xor
add
arpl
inc
mov
clc
lahf
xor
inc
and
dec
andb
mov
or
or
pop
cmp
out
mov
mov
pop
cmp
cmp
or
pop
dec
jg
sti
push
lds
adc
stc
xchg
xor
mov
lret
dec
test
jl
cwtl
adc
add
inc
fistpll
insl
in
mov
mov
dec
jecxz
sahf
cli
inc
jmp
xchg
cmp
pusha
or
lret
sub
jp
bswap
in
sbb
into
rclb
cltd
mov
in
fdivrl
pop
sub
iret
add
or
push
loope
pushf
and
inc
sahf
sub
je
lahf
out
add
and
pop
lcall
pop
adcl
les
push
push
and
push
fildl
adc
shll
sarb
outsl
pop
or
mov
test
jae
daa
fdivr
jmp
xor
xor
mov
cmp
outsl
out
cmp
push
inc
inc
cmp
mov
or
add
pop
jns
aas
cmpsl
outsl
sub
lret
int
in
stc
dec
pop
sub
aaa
pop
push
cmp
pop
rolb
insb
out
filds
sbb
and
out
hlt
dec
int3
dec
div
sar
dec
adc
das
fdivrl
das
neg
mov
mov
pop
adc
leave
pop
cli
mov
popa
aas
call
clc
ja
inc
pop
jne
fwait
cltd
xor
loopne
nop
push
ljmp
stos
ljmp
sahf
sbbb
psubsw
xchg
mov
mov
cmc
aas
ljmp
notl
or
sub
sbb
sbb
or
lahf
int
call
add
popa
pop
repz
outsl
sub
fnstsw
push
mov
lock
hlt
mov
enter
pop
add
cmp
test
das
xor
add
sbb
loopne
fs
rcrl
jbe
and
mov
std
jg
xchg
les
push
stos
out
pop
jbe
mov
dec
push
out
fistps
rorb
adc
call
pop
mov
movsl
mov
adc
jae
add
repnz
mov
add
mulb
xchg
hlt
jae
ja
ljmp
mov
scas
push
mov
hlt
leave
xor
test
cmc
pop
out
mov
out
or
jge
cli
mov
add
adc
cmp
mov
stos
jg
sub
rcll
sti
pop
ljmp
pop
lea
insb
mov
scas
xchg
jnp
out
cmp
and
jg
std
lods
sbb
fmull
pop
pop
jecxz
pop
push
loopne
add
mov
add
es
call
das
add
jmp
popa
test
jl
cs
ja
or
out
sti
sbb
test
imul
sub
mov
lock
jo
adc
lock
and
loopne
inc
ja
dec
sbb
mov
sub
pop
jne
adc
sarl
dec
imul
fildll
dec
and
xor
push
xor
xlat
mov
hlt
inc
sahf
outsb
aad
and
push
arpl
mov
and
incl
inc
or
and
ffreep
loope
imul
sarl
cmpsl
or
aaa
fldt
imul
xor
or
mov
adc
ret
lahf
pushf
or
out
pop
in
std
push
jg
cmpsl
sub
fisttps
mov
clc
sub
jg
cli
fistpll
pop
out
fistpll
sahf
jae
xchg
push
mov
inc
test
mov
fidivrl
mov
mov
data16
xlat
movsl
mov
sarb
sbb
mov
mov
inc
push
insb
mov
not
out
pop
mov
jmp
loop
aaa
iret
push
mov
sbb
es
cli
ud0
hlt
push
stc
mov
insl
mov
loopne
push
lahf
cli
push
mov
js
mov
dec
out
xchg
xor
add
cmp
js
pop
push
mov
ljmp
xor
adc
fistps
adc
aaa
xchg
mov
pshufw
arpl
aad
test
fnstsw
aad
sahf
sub
push
fs
xlat
incl
xor
pop
xorl
xor
cmp
mov
daa
xchg
push
cli
out
push
ss
stos
or
pop
out
pushl
lock
jae
out
ror
int3
in
insb
jg
pop
or
jecxz
sti
not
shrb
xor
bnd
cwtl
cmp
fcmovne
mov
std
push
pop
add
rcrb
xor
cmp
xchg
adc
cmp
mov
popf
addr16
loope
jmp
fstps
mov
lcall
cmpsb
fimull
out
jg
inc
js
push
loope
mov
dec
es
push
aas
mov
push
outsl
mov
scas
pop
cwtl
and
add
pop
arpl
sarl
sub
test
sub
popa
push
pop
mov
pop
out
rorb
xor
cmpsl
cmpsb
fndisi(8087
pop
adc
scas
aam
in
das
lds
std
dec
sti
xchg
push
mov
push
test
xor
pop
mov
or
lret
sarb
and
push
rol
xchg
cmp
aas
mov
insl
loop
xor
mov
jo
int3
leave
xchg
test
jnp
mov
push
dec
add
mov
or
xor
dec
imul
rorl
cmp
test
or
adc
lea
rclb
lock
in
pop
les
pop
mov
ja
jg
xchg
lret
inc
scas
call
xchg
stc
add
lea
push
int
shll
movsb
inc
lea
loop
mov
xorl
jmp
jl
in
or
cs
aam
ja
movsb
ljmp
ficoms
subb
ljmp
mov
popa
test
adc
push
and
in
stos
inc
test
mov
or
add
mov
lock
popa
nop
pop
pop
and
mov
stos
imul
jg
cmp
arpl
iret
mov
or
aad
lea
inc
mov
pusha
arpl
scas
pop
pop
dec
shlb
pop
outsl
jno
sub
jo
cmpb
dec
aas
ret
fdivrl
and
mov
xchg
and
sti
fnsave
mov
xchg
jo
lret
aas
jl
pop
std
lcall
inc
incl
andb
jmp
ja
jg
sti
je
mov
xchg
push
sbbl
pop
pop
cwtl
loop
pop
jg
pop
add
fdivrs
dec
jne
outsl
call
and
loope
pop
cld
addl
inc
pop
jo
cli
add
jmp
or
jl
test
jae
sbb
pop
mov
jb
testl
dec
pop
in
xor
inc
gs
decb
xchg
mov
mov
aad
push
jle
test
fcoml
mov
roll
pop
loope,pn
xor
cmp
jno
push
loopne
mov
icebp
cmc
or
vunpckhps
inc
les
mov
jbe
lahf
push
fldt
lahf
ret
orb
xor
adc
aam
cmp
mov
test
push
ret
ret
ror
jne
jge
push
arpl
jle
cmp
cmpl
mov
inc
aaa
push
repz
jecxz
and
out
pop
lcall
cmp
dec
lcall
sbb
pushf
cmpsl
sarb
jge
push
mov
xor
mov
clc
lcall
std
outsl
loopne
cmpsl
sub
jb
fldl
aam
popa
cs
jge
sti
into
xchg
call
push
push
fdiv
out
jle
out
jno
add
push
xchg
adc
sbb
xchg
es
loop
clc
xlat
sub
cli
addr16
and
cmp
cmp
mov
pop
xchg
jle
pop
mov
cld
mov
icebp
fs
lods
rolb
int3
xor
jecxz
cli
sbb
imul
push
push
in
fistpl
in
ljmp
xchg
push
out
or
xor
jle
push
adc
mov
cld
push
cmp
xor
push
mov
rcrl
in
inc
clc
xchg
bound
aam
sarl
cli
lcall
incl
decb
stos
shlb
sub
cmp
sbb
decl
cmc
xchg
addr16
lret
out
out
xlat
push
sbb
testl
addr16
cmp
dec
dec
outsb
inc
lock
inc
xchg
mov
pop
into
stos
aad
sti
sbb
push
jle
cmp
call
cmp
das
mov
jne
sbb
mov
sbb
inc
daa
scas
push
adc
push
or
incl
addr16
jae
test
mov
addl
mov
pusha
test
mov
in
or
mov
rorb
add
clc
loope
mov
add
or
ljmp
add
mov
or
loopne
mov
scas
sbb
jmp
cltd
mov
sub
xchg
scas
lds
aas
pop
sti
mov
xor
add
push
test
xchg
lret
sbb
add
inc
pop
ljmp
data16
inc
js
popf
cmp
arpl
adc
sti
xchg
pop
mov
repnz
into
mov
adc
sti
xor
cltd
bound
xor
jbe
fildl
push
clc
out
push
aaa
scas
fsub
mov
fstps
mov
jp
or
pop
es
jne
mov
mov
dec
or
sti
andl
cmp
jge
mov
sub
arpl
test
jmp
push
cmc
pop
pop
imul
jg
es
push
test
jp
add
xor
out
sub
outsb
jp
sbb
andb
pushl
lods
mov
mov
fiadds
jmp
push
pop
out
sub
adc
icebp
pop
or
stos
lret
fs
popf
cmc
and
in
cld
cli
jecxz
pop
jge
ret
outsl
add
sarb
sbb
jne
cmp
fbld
clc
imul
into
mov
std
popa
pop
and
jge
xchg
movsw
rclb
sub
jg
add
repz
push
pop
push
cmp
es
jle
fcomps
cld
popf
loopne
ficoml
clc
addb
outsb
pop
pop
xlat
addl
imul
js
add
test
push
call
out
loopne
insl
push
hlt
aad
pop
aaa
or
les
stos
pushl
dec
xchg
das
rorb
jnp
pop
stos
sbb
lahf
ret
pop
cmp
cmc
cmc
ret
testb
aas
fs
arpl
jmp
mov
xchg
stos
mov
sub
lock
mov
js
jnp
jno
sbb
push
mov
sub
in
ss
movsb
xor
fmull
mov
fs
test
pop
or
cli
aaa
orb
popf
xchg
mov
jmp
mov
lret
leave
hlt
or
sar
pop
xchg
jae
shll
std
insb
outsl
dec
xadd
cmp
inc
lcall
clc
dec
dec
and
int3
cmc
aaa
pop
xorb
in
lret
es
stc
movsl
mov
testl
js
test
inc
jg
lock
pop
test
pusha
fsubs
adc
mov
subb
std
add
in
mov
dec
push
cmpl
cmp
dec
outsb
dec
add
inc
outsb
add
cmp
outsl
test
jbe
jo
cmp
pop
faddl
fxch
and
aaa
fimull
sub
push
xor
adc
in
sbb
insb
jl
jb
add
psubsb
pop
xchg
nop
lahf
and
fldl
sbb
cs
ss
data16
or
loope
xchg
jmp
decb
fstps
testl
xor
clc
filds
mov
es
stos
inc
movsb
fidivl
std
mov
mov
add
lock
jo
loopne
out
push
push
int
mov
das
mov
dec
jnp
or
sbb
adc
inc
icebp
xchg
or
sub
std
shrl
lds
out
mov
popf
aaa
jge
adcb
add
decb
pop
outsl
cmp
push
out
xchg
andl
adc
inc
adcl
jne
adc
push
push
dec
outsl
sti
pop
idivl
add
jbe
push
sbb
lcall
testl
push
inc
in
mov
orl
mov
test
int
inc
mov
in
fildll
pushl
pop
ja
out
xor
int3
les
push
cmp
xor
insb
inc
hlt
iret
ljmp
sti
and
jmp
lahf
lock
aaa
rorl
call
adcl
popf
movsl
adc
sbb
aas
mov
out
fs
push
sahf
clc
orb
sbb
out
pop
pop
insl
mov
sub
mov
ret
xor
int3
outsb
sbb
imulb
loopne
add
je
faddp
or
outsb
ud0
sbb
push
cld
sub
add
pushf
sbb
mov
icebp
imul
fldl
jno
mov
loope
xchg
push
cli
pop
lahf
std
jg
sbb
mov
xchg
filds
sub
jg
fistps
inc
inc
jl
int3
cmp
test
cmp
cmp
subb
and
movsb
jno
imul
push
mov
lods
rsm
insl
addl
divb
in
push
lods
in
daa
cli
out
inc
mov
sti
pop
es
shll
outsl
and
jmp
or
cmp
jmp
jmp
in
mov
in
stos
mov
push
jmp
in
mov
leave
sar
dec
push
wbinvd
inc
shll
std
xchg
stos
and
cmp
mov
or
pop
rorl
pop
inc
jg
jmp
sti
test
scas
shlb
jo
sub
sti
pop
adc
and
cmp
ljmp
jg
aaa
pusha
cmp
in
pause
ja
dec
ljmp
addl
jae
lcall
mov
out
repz
aad
jp
cwtl
out
push
inc
lds
aaa
jecxz
sbb
xlat
aam
les
mov
into
sbb
call
push
gs
xchg
test
push
cli
data16
iret
pop
pop
imul
mov
mov
arpl
incl
xor
adc
call
mov
in
lds
adc
icebp
lahf
hlt
aaa
dec
pop
data16
cmc
pop
cmp
outsl
sar
pop
jge
and
leave
or
lock
pop
pop
inc
cmp
or
inc
cld
xor
add
pop
mov
fldt
out
loope
imul
popf
dec
imul
mov
mov
add
xorl
sbb
test
rorl
movsb
jge
sub
sub
pop
sub
sub
cmp
push
rcl
jns
gs
adc
or
mov
push
and
rorb
out
ds
jg
rcll
test
lret
insl
jno
mov
xor
mov
pop
mov
sti
call
adc
add
mov
scas
sub
pop
in
std
mov
hlt
pshufw
stos
cmpsb
mov
sub
jl
mov
mov
push
xor
imul
mov
pop
jae,pt
stos
subl
mov
rorl
imul
shll
xchg
je
dec
das
je
outsl
sub
jg
mov
aas
scas
jmp
aaa
and
outsl
inc
jg
lcall
sub
adc
out
mov
cmpb
xchg
cmp
jp
mov
loopne
popf
mov
enter
ljmp
fstps
fsubrl
cmp
or
test
mov
push
inc
mov
data16
outsl
clc
decl
fnstsw
pop
xor
sub
xchg
dec
and
rorb
addr16
ss
enter
inc
rcrb
or
enter
ja
daa
pop
call
mov
dec
add
mov
push
add
stos
scas
insb
push
adc
adc
lcall
int
es
and
lea
mov
jns
aam
insl
leave
mov
test
pop
loope
dec
fists
scas
pusha
jae
and
sbb
iret
or
pop
add
cltd
pmuludq
add
cmp
frstor
data16
stc
mov
pop
push
je
pop
xorl
jle
pshufw
jl
jl
outsb
push
stc
lret
push
out
inc
sbb
in
lods
out
mov
faddl
call
movsb
cwtl
arpl
inc
iret
or
xchg
std
cvtdq2ps
insb
cmpl
push
mov
add
push
sti
into
adc
inc
push
call
jae
pop
xlat
inc
and
dec
loop
fnstenv
out
or
mull
xor
cmp
outsl
sub
lahf
loopne
sbb
or
mov
sub
mov
stos
cmp
mov
jb
je
outsb
xor
mov
enter
repz
dec
lcall
neg
adc
js
adc
jl
jnp
mov
sti
lahf
andb
pusha
mov
mov
ja
cli
pushl
lea
adc
inc
sbb
mov
push
int3
or
lar
jno
mov
xchg
and
sbb
and
pop
in
dec
mov
inc
test
notl
inc
adc
loope
aaa
out
xchg
sbb
sub
pop
lahf
push
xchg
push
dec
dec
stc
scas
in
pop
jns
in
sbb
or
in
jecxz
addr16
sar
xchg
and
xchg
testb
andl
icebp
ja
inc
and
xchg
cs
jmp
sub
fwait
and
cmp
cld
icebp
fidivrs
cmp
aam
inc
push
knotw
mov
and
out
loopne
or
inc
stos
outsl
pop
cli
push
ret
pop
inc
out
fnstenv
shl
cld
out
mov
and
xchg
int
jno
iret
fisubl
or
lret
jo
aaa
arpl
arpl
mov
xchg
inc
sub
jge
mov
jg
pushf
push
inc
pop
mov
cltd
or
xlat
xchg
test
push
xor
pop
lea
das
xchg
cmp
scas
inc
pop
dec
fbld
aad
in
je
add
mov
das
mov
ja
and
push
sub
jge
lds
aam
sti
lahf
or
mov
mov
dec
jecxz
clc
inc
jle
je
lahf
mov
out
push
mov
fnstsw
shll
dec
fistps
aam
inc
es
testl
cltd
mov
lods
ds
int3
lea
jg
xchg
rorl
sub
out
push
scas
and
push
insl
cmp
std
aam
or
pop
dec
call
cmp
push
aad
pop
shrb
cld
daa
loopne
or
push
mov
mov
lock
pop
jno
xor
int3
ret
in
imul
jge
sbb
sti
nop
inc
sub
cmpsl
ror
aas
ret
mov
sub
movsl
ljmp
lahf
mov
jg
rol
push
jbe
fstl
sti
call
xor
xor
xchg
mov
mov
cltd
fisttpl
mov
cmp
fistps
les
xlat
adc
nop
fisttpl
dec
rcll
jne
shlb
lock
jecxz
daa
dec
push
sti
aam
fxch
and
cmc
outsl
inc
scas
ds
out
sar
mov
xor
enter
movsb
push
outsl
outsb
cltd
sub
push
ret
iret
dec
lock
or
ficompl
out
xor
fstl
ficomps
outsl
in
das
cmpsl
cmp
and
sub
xchg
pop
std
sbb
fmull
loop
mov
sbb
mov
mov
cmpsb
mov
hlt
pop
push
cmp
cmp
jbe
jge
sti
lahf
and
test
les
push
push
test
push
pushl
icebp
xor
sbb
mov
imul
inc
lret
addr16
xor
addb
stos
scas
cs
lahf
stc
xor
pop
xchg
fisttps
mov
push
aad
and
lahf
loope
inc
and
adc
inc
sahf
rcr
rcll
sbb
ror
inc
rorl
sub
dec
jg
fcompl
fistps
xchg
ret
adc
lcall
daa
cs
jge
dec
andl
mov
rol
inc
mov
jle
popf
lock
mov
aas
imul
xchg
loopne
push
adc
mov
pop
popa
fs
inc
iret
lock
add
stos
sub
inc
jmp
icebp
cmp
pop
mov
imul
mov
push
dec
mov
call
jmp
pop
or
inc
fistps
cmp
xlat
sbb
xchg
mov
cli
rclb
xlat
push
jg
sub
inc
outsb
mov
cmpsl
jae
mov
sbb
pushf
inc
iret
cltd
shll
clc
mov
xor
push
inc
jne
lea
add
xchg
cmpsl
inc
ret
loopne
fistps
mov
loopne
adc
cld
lahf
loope
iret
scas
fiadds
xchg
xchg
ds
pop
movsl
sub
decl
sub
decb
sbb
push
mov
xlat
adc
arpl
lcall
sub
and
mov
fcompl
xor
pop
test
lods
cmp
incl
mov
sub
in
cmp
push
test
cli
daa
shlb
std
push
ror
inc
or
mov
cs
mov
movsb
sbb
out
cvtpi2ps
jno
xchg
xor
sbb
xchg
jo
lcall
xor
jg
adc
into
in
add
or
mov
jnp
test
inc
fs
adc
adc
lods
push
clc
adc
in
push
push
dec
mov
jg
divl
push
xlat
ffree
pop
cmp
dec
mov
adc
cmp
cmp
sbb
ret
mov
mov
dec
scas
sub
cld
fistpll
push
icebp
sarb
rcrb
add
inc
mov
sub
inc
int3
mov
pushf
xchg
test
jne
test
mov
in
push
aas
les
in
addl
push
cwtl
arpl
incl
add
rolb
dec
lock
mov
cmp
sti
gs
cld
add
adc
jg
sub
mov
cmp
pop
stos
addb
orl
mov
push
js
fsubl
in
fldenv
inc
inc
xor
adc
lods
dec
adc
add
pushl
push
mov
ljmp
lret
in
popl
jns
scas
push
sbb
mov
mov
jmp
mov
fdiv
cld
aad
popa
movaps
outsl
out
xchg
cli
repz
and
mov
das
mov
xchg
lret
adc
cmp
and
repz
stc
and
cltd
mov
into
mov
test
cli
je
jle
mov
adc
sub
scas
cmp
out
and
mov
push
push
and
ljmp
aas
call
outsb
loopne
ret
xchg
popf
sub
leave
jmp
cld
mov
and
sti
jns
pop
in
lock
cwtl
aad
aam
xor
xor
or
mov
sub
das
inc
xorb
cld
inc
jmp
gs
fistps
in
add
ror
roll
cli
prefetchnta
inc
adc
enter
outsl
cmp
xor
push
jle
mov
sub
pop
add
repnz
mov
pop
dec
push
fisubl
pop
hlt
xchg
pop
jg,pt
icebp
pop
xchg
movsb
add
sti
jg
std
push
lods
pop
xor
scas
mov
icebp
mov
cld
ja
add
idivb
iret
mov
pop
mov
mov
add
sbb
add
mov
addr16
mov
mov
jmp
out
out
cs
mov
pop
mov
popa
mov
rorl
mov
or
push
sbb
pusha
dec
cmc
lret
add
xor
push
rcll
mov
or
pop
cmp
mov
enter
jl
jnp
mov
mov
test
bound
icebp
adc
aad
popf
adc
ljmp
gs
mov
test
rcll
mov
ss
sbb
clc
jg
out
push
or
enter
mov
sbb
cmp
adc
call
idivb
dec
xchg
icebp
sti
cmpsl
mov
int
insb
jne
inc
and
outsl
sub
mov
push
pop
push
decl
leave
clc
push
push
pop
adc
jle
lret
xchg
adc
ja
shll
ja
fs
add
dec
ror
fdivrl
in
sub
iret
pop
loopne
ja
test
cli
fs
fs
inc
out
push
pop
ret
or
lods
lret
pop
xor
jae
pop
addr16
mov
mov
dec
rcr
sbb
cmp
loope
loopne
cld
pop
pop
call
pop
xchg
lret
or
or
orl
pop
je
les
addr16
fidivl
neg
popf
lods
aas
pushf
test
faddp
insl
pop
icebp
dec
mov
stos
cs
pusha
sbbl
cs
and
test
mov
std
add
out
in
imul
decl
ljmp
in
es
mov
fisttps
add
arpl
std
insl
mov
ljmp
rcll
xchg
add
or
scas
adc
lahf
in
jecxz
cmp
push
jmp
pushf
jmp
loop
in
mov
shl
mov
sti
psllq
xor
insl
pop
xor
add
xor
and
cmp
idivl
ljmp
idivl
and
cmp
adc
sbb
iret
icebp
idiv
or
in
iret
xor
xchg
add
inc
scas
cltd
addr16
loopne
mov
lds
data16
shr
jnp
jg
sub
movsb
cmp
xor
ret
mov
sti
push
pop
dec
cli
pop
imul
sarl
and
push
xor
mov
xor
aas
mov
jg
push
pop
mov
movsl
jbe
push
es
cmp
movsl
pop
aaa
lock
sarl
dec
jnp
cmp
repz
in
lds
cmp
call
out
mov
add
push
int3
ds
and
mov
mov
ja
xlat
pushl
and
and
es
mov
pop
loop
sarl
call
lods
add
jbe
cmc
jae
into
loopne
dec
es
scas
fists
out
jno
je
add
std
push
cli
or
scas
xorl
leave
rcl
inc
out
outsb
dec
imul
daa
and
cmpsb
push
adc
mov
push
xlat
cmpsl
lods
mov
out
rorl
sbb
loop
cli
scas
push
mov
fwait
in
mov
sbb
out
jg
cmp
loop
mov
xchg
xor
fwait
aas
rcrb
jo
fnsave
or
stos
pop
xchg
mov
xchg
movsb
clc
pop
negl
cmpsb
cld
jle
pop
push
mov
popf
pushf
ja
mov
sub
or
out
or
in
int3
insl
rcrb
adc
mov
or
gs
std
add
ret
enter
cmpsl
js
movsb
std
lods
push
cld
notb
mov
arpl
lods
shll
jmp
arpl
idivl
pop
incl
xlat
ds
cmp
stc
push
push
dec
aad
stc
jo
cmp
dec
daa
sub
or
les
mov
mov
jecxz
int3
add
jg
pop
push
adc
push
mov
sti
sub
sub
push
add
out
mov
testl
sbb
dec
rorl
and
or
mov
ja
or
mov
movsb
sti
and
in
jo
xchg
xchg
or
test
les
cwtl
inc
arpl
add
cmp
pop
mov
pop
pop
adc
cmp
in
jg
push
jecxz
cmp
pop
add
in
cli
cmp
movsb
es
sahf
sub
jge
lods
outsl
pop
jmp
or
pop
dec
je
and
outsl
in
inc
sbb
filds
push
scas
clc
push
inc
xor
cli
cmp
repz
clc
jle
sbb
cwtl
mov
mov
inc
aas
sahf
push
lcall
mov
stos
mov
dec
call
cld
push
dec
and
adc
dec
leave
or
mov
cmp
outsl
pandn
xor
push
sbb
push
pop
pop
loop
pop
cmp
cmp
xor
inc
imul
dec
inc
sub
aaa
jb
jno
push
sbb
stc
ret
sti
sbb
adc
in
cmpsb
movntps
loope
push
pusha
hlt
push
testl
adc
adc
cld
xchg
test
out
lock
and
mov
jno
inc
loopne
inc
pop
pop
xor
cmpsl
movsb
movsl
adc
js
adc
inc
sub
iret
mov
imul
cmpsl
ret
xlat
or
pop
test
push
pop
test
and
lds
lock
orb
push
fists
aaa
cwtl
test
mov
leave
fiadds
movsl
push
popf
sahf
test
mov
nop
in
imul
inc
pavgb
sarb
decl
insl
les
testb
addb
sbb
filds
lods
mov
scas
cld
push
sub
call
fnsave
mov
sbb
aaa
sbb
mov
push
lahf
mov
ljmp
push
aas
mov
cwtl
cmp
orb
cld
xchg
leave
cmp
popa
jno
xlat
leave
pop
inc
rcll
aad
mov
cli
dec
faddl
and
sbbb
or
das
icebp
pop
shr
mov
sahf
dec
test
push
pop
add
clc
out
mov
sbb
movsb
fdivrs
sub
mov
movsb
dec
loope
lcall
in
pushl
jo
mov
incb
cmp
nop
mov
ret
adc
sbb
dec
ret
fadds
cmp
xchg
jmp
cltd
mov
aas
inc
xchg
mov
arpl
incl
add
pop
ret
cmp
push
call
mov
enter
or
jns
clc
idivb
sbb
fadd
inc
lahf
jae
xchg
sub
sarl
push
shll
rcrb
push
or
cmpsl
mov
cli
stos
insl
mov
xchg
test
sbb
fildll
push
stos
mov
push
lcall
and
je
xchg
dec
xchg
mov
sbb
mov
cltd
das
mov
ja
ja
les
inc
cli
iret
pop
aas
adc
cmp
sub
stc
rcrb
jp
cli
dec
xor
adc
test
and
xchg
mov
sub
xchg
pop
jg
test
aas
js
popa
push
cli
in
mov
jo
xor
push
pop
inc
inc
scas
xor
aas
negl
sbb
push
push
fidivrl
dec
jo
popf
cmc
cmp
loop
mov
mov
jmp
roll
mov
rcr
js
sub
mov
dec
mov
ds
lret
daa
insl
mov
lcall
ljmp
fwait
jge
and
out
or
dec
das
or
xchg
lret
loopne
or
and
add
add
pop
loopne
clc
iret
adc
mov
xchg
jo
ficoms
icebp
in
loop
insb
mov
and
shl
mov
push
push
mov
lahf
icebp
jmp
out
addr16
adc
pop
mov
jbe
and
jmp
dec
jle
lock
int3
sub
nop
jne
jg
in
dec
lret
push
mov
test
fnstcw
mov
aas
mov
adc
popa
and
adc
and
lcall
js
xchg
adc
bound
or
sbb
mov
jg
icebp
lahf
cmp
lahf
mov
ja
pop
out
sbb
std
out
add
xchg
mov
mov
std
notl
stos
mov
out
lret
mov
sub
mov
push
and
inc
loopne
pusha
dec
cmpb
call
lods
inc
int3
push
fnstcw
push
invlpg
stos
xlat
jmp
addr16
pop
inc
mov
inc
inc
mov
out
out
jns
xchg
insl
add
ret
fists
mov
mov
adc
jecxz
pusha
out
cwtl
js
jg
addr16
lock
xorl
xchg
imul
mov
loope
pop
cmp
rolb
mov
mov
jecxz
dec
sub
sbb
arpl
mov
negl
into
jbe
ds
xor
lahf
pop
push
popf
adc
fiadds
out
sub
xchg
addl
push
mov
sub
jecxz
fdivrs
add
es
inc
xchg
loop
ret
div
imul
or
cmp
popf
shlb
adc
inc
call
add
push
and
test
popl
loope
add
jnp
pusha
sub
add
cmpsl
sbb
addb
ja
roll
stc
xchg
or
add
pop
in
mov
rorb
xor
pop
aas
aam
add
pushf
xor
sbb
icebp
cwtl
cld
lahf
add
scas
idivb
sarl
cmp
pusha
jo
cmp
pop
jecxz
push
adc
gs
mov
call
jbe
push
jb
aam
inc
ffreep
mov
fists
addr16
aas
cmc
movsb
inc
xor
loopne
jns
xor
sbb
iret
cli
lret
add
jl
hlt
jecxz
mov
cs
mov
jo
incl
in
jnp
mov
decb
push
jp
sti
xlat
or
cmp
mov
call
stos
adc
cli
or
sbb
sbb
push
cmc
pop
ud0
fldcw
adc
sub
jnp
adc
filds
das
push
cmpsb
pop
popaw
mov
lahf
lret
fwait
adc
fwait
cwtl
enter
scas
pop
rcll
fbstp
sbb
mov
cs
fimuls
jg
std
or
xlat
icebp
pop
xor
push
push
fsubrl
testb
es
push
daa
push
lcall
cmc
xlat
hlt
mov
inc
outsb
int3
enter
push
and
push
mov
arpl
pop
std
mov
sbb
cs
out
loope
mov
push
mov
pop
cltd
in
test
jne
mov
lahf
inc
push
inc
mov
lock
pop
ss
sahf
jle
mov
shlb
cwtl
mov
inc
mov
mov
inc
mov
adc
mov
iret
cltd
clc
insl
notl
pop
inc
jno
lock
sub
mov
testl
jmp
int3
movb
jp
mov
int
das
jo
comiss
jnp
pop
ret
and
hlt
mov
lock
cmp
xchg
mov
icebp
outsl
pop
fistpl
sub
in
sub
and
shll
cwtd
incl
jp
test
iret
aad
cltd
jnp
loop
stos
fnsave
cmpsl
jne
mov
xchg
push
jmp
xchg
xchg
mov
fmull
das
fs
sbbl
adcb
xchg
sbb
int
xchg
mov
mov
mov
divl
mov
push
popa
sbbl
mov
fists
out
aad
and
sbb
in
stos
repz
xor
mov
outsl
or
mov
sbb
push
and
pop
sbb
and
inc
subb
aaa
ret
or
movsl
mov
lock
push
pop
fistps
mov
xchg
cmp
mov
xchg
sti
push
leave
fimuls
insl
sti
ja
push
rorb
jne
add
push
push
hlt
jg
xchg
lock
add
addr16
in
add
sub
sub
jmp
jae
mov
xlat
mov
inc
and
dec
jg
mov
inc
fcoms
dec
sub
push
mov
mov
lret
in
lcall
out
add
sub
dec
adc
sub
pusha
add
ja
pushf
mov
cld
push
push
sbb
cltd
aam
cli
out
in
push
inc
jg
or
add
test
mov
test
mov
jns
ds
gs
sbb
xor
cli
cmc
cmpl
sbb
add
gs
pushl
xchg
aad
adc
es
dec
sbbb
cli
cli
filds
push
cmpl
test
fs
cmc
not
imul
xor
fbld
ljmp
pusha
aad
lcall
jns
ds
subb
sbb
cmc
adc
mov
xchg
lcall
mov
mov
es
mov
sbb
test
scas
cltd
fbld
aad
hlt
pop
cwtl
push
push
lcall
scas
jne
or
cmc
es
cli
test
loop
fs
fadd
sbb
ss
pop
and
cmpb
imul
push
or
sbb
lods
lcall
add
gs
loop,pn
mov
add
xorl
insl
js
fists
pusha
rorl
jo
adcb
imul
add
lcall
jns
pusha
add
outsb
dec
imul
sbb
dec
push
mov
dec
fbld
cli
nop
scas
lods
mov
shr
sbb
pop
or
cli
mov
jns
andl
orb
mov
lcall
std
or
fisttps
fdivl
clc
mov
insl
fbstp
pusha
cltd
cmc
test
outsl
push
ret
das
mov
jns
imul
xchg
test
or
mov
inc
pusha
adc
fdivl
repnz
jl
gs
fcomip
adc
scas
cltd
ds
add
push
mov
or
fs
test
mov
mov
add
add
filds
imul
and
lock
or
jne
cmc
outsl
in
aaa
adc
imul
mov
jns
test
mov
adc
push
mov
addl
xor
adcl
xor
cld
jne
mov
fldt
mov
lods
adc
loopne
add
in
push
cltd
lods
xchg
pusha
mov
add
ds
dec
cs
sub
fs
jle
pop
or
sub
jne
gs
jns
aad
pop
bound
or
cli
aam
xchg
gs
sbb
test
imul
cmc
push
fistpll
shll
mov
mov
loope
insb
mov
mov
or
mov
pusha
pushf
scas
imul
cwtl
fs
push
stos
test
push
push
scas
cwtl
dec
or
fidivl
pop
ds
es
push
adc
imul
ficoms
inc
pushf
adc
gs
sub
insl
cli
cltd
ficoml
mov
or
cwtl
inc
push
pusha
adc
xorl
in
shrl
jb
sub
outsb
xchg
mov
add
pop
add
lock
add
daa
push
sub
mov
jg
xchg
mov
cli
add
xchg
addr16
xchg
cmp
mov
fchs
rol
mov
lret
pop
inc
test
mov
xor
movb
loope
sub
mov
push
adc
inc
mov
push
inc
or
sbb
stos
inc
lcall
lock
fs
lock
jl
cmp
sub
mov
and
pusha
sub
mov
gs
pop
subl
movsb
cmp
inc
adc
push
cmp
test
cli
inc
adc
lcall
add
orb
popa
xor
sahf
xor
cmpsb
jp
roll
add
jl
pusha
lods
push
ds
loop
mov
cli
data16
sub
scas
test
insl
and
dec
fs
dec
push
dec
ss
sub
mov
testb
jmp
pop
aad
mov
mov
sbb
xor
loop
pusha
adcb
inc
loop
rol
test
jb
sbb
aam
jbe
inc
dec
pusha
fisubl
pushf
push
pop
xchg
lcall
stos
fisubs
mov
adc
fidivl
or
jle
mov
sub
adc
out
fistps
dec
pusha
sbb
lods
push
cli
jne
insb
incb
faddl
or
loope
je
dec
push
rcll
xor
jo
add
cltd
repnz
cmp
hlt
and
insb
or
xor
in
jns
add
pop
push
xchg
bnd
fs
xchg
popf
dec
or
andb
fsubs
pusha
sahf
sbb
and
fcmovbe
push
test
push
jbe
ret
xchg
ss
mov
lret
es
call
sbb
sub
lods
xchg
inc
orb
aam
mov
cmpsb
es
dec
pusha
ret
cli
push
sbb
or
add
addl
add
mov
fsubs
pushf
repnz
aad
add
insl
or
mov
push
call
mov
cmc
lods
andb
ss
rorl
push
ljmp
lock
jbe
adc
ret
push
popa
push
lods
lcall
pop
mov
jl
cmc
scas
inc
jno
cmpsb
and
adc
hlt
ds
push
or
inc
ljmp
push
mov
jle
cli
insl
adc
mov
pushf
jns
jns
addl
sbb
mov
cli
aad
mov
mov
sub
es
push
mov
mov
test
outsb
addl
xchg
inc
mov
add
and
js
mov
pushf
mov
xchg
push
lret
mov
mov
gs
xchg
push
cltd
xor
sahf
sti
call
dec
mov
or
pusha
jnp
adc
mov
fsubs
cltd
xor
xor
cmp
push
push
mov
fistps
test
add
add
push
test
scas
scas
add
dec
in
loop
mov
bound
stos
dec
push
loopne
pop
cltd
adc
test
mov
jbe
lock
sarl
push
test
or
hlt
cs
push
jns
test
pop
push
insl
pop
cmp
mov
adc
enter
jnp
pusha
dec
in
lock
pop
aam
mov
ret
aam
pusha
jo
lock
outsb
into
xor
cltd
push
mov
insl
xor
xor
cli
subb
cli
int
sub
sbb
jb
sbb
dec
dec
adc
or
inc
xchg
fiaddl
gs
push
or
cmp
xorl
loop
mov
popa
cmpsb
es
movsb
les
cmp
sahf
scas
test
and
push
push
pop
dec
push
fisttpll
or
sbbl
xchg
xchg
stos
lret
xchg
dec
in
mov
cmp
xchg
or
fwait
sbb
cltd
insl
test
jne
add
add
mov
xchg
lcall
mov
fs
xor
and
outsb
jns
stos
or
xor
inc
les
fwait
sahf
sahf
mov
imul
dec
scas
adc
data16
jbe
mov
mov
push
inc
xchg
mov
add
jp
or
jo
xchg
push
loopne
sbb
cmp
call
pop
adc
cmpsb
insl
adc
je
inc
xchg
aad
movb
push
add
sbbb
mov
sbbl
gs
int3
mov
add
mov
jbe
xor
push
inc
out
adc
pusha
or
pusha
es
mov
inc
and
mov
int3
push
fists
cmp
adc
dec
xorb
or
xchg
loopne
push
mov
push
cltd
dec
dec
movb
add
orb
mov
cltd
pop
test
loop
orl
sahf
loopne
imul
pop
sbb
xlat
inc
push
sub
adc
aad
mov
in
xor
pop
in
jbe
movb
pusha
adcb
insl
add
push
andl
jo
or
and
push
test
sbb
scas
push
or
insb
jle
push
add
pop
mov
shlb
mov
mov
cltd
jns
push
xor
int3
inc
fmull
test
rorb
xor
or
bound
scas
add
lods
push
xor
orb
mov
mov
shll
jl
fimuls
lds
in
push
push
ret
fadds
adc
testl
sbb
lea
mov
mov
in
mov
sub
add
xor
sub
mov
dec
mov
test
jl
test
pop
jg
mov
imul
add
inc
lock
dec
cmp
sbb
pop
mov
adc
inc
xor
pop
bound
mov
and
dec
or
or
push
js
andb
ljmp
cli
data16
push
xchg
dec
sub
testb
inc
es
mov
xchg
jne
les
mov
fimull
fbld
ds
or
dec
ss
mov
xchg
dec
gs
mov
rcll
dec
jb
mov
cwtl
or
mov
loop
stos
sub
das
or
push
push
out
out
pushf
push
mov
stos
or
xor
mov
lods
sbb
rorl
xor
mov
dec
outsb
push
test
sbb
or
into
call
adc
mov
lcall
in
mov
and
gs
lods
jb
pop
bnd
mov
dec
mov
aad
fcoms
inc
scas
mov
xor
jne
pusha
aad
xor
push
scas
or
aad
add
add
cmpb
mov
add
add
jne
xor
cs
filds
sub
jp
sub
or
ds
adc
aad
add
nop
mov
adcl
insl
sahf
ds
mov
mov
inc
or
jns
dec
xchg
inc
in
sbb
sbbb
or
stos
xchg
adc
rclb
es
add
and
mov
lea
ds
pusha
xchg
les
scas
jne
xor
loopne
push
mov
imul
push
mov
xor
nop
ss
mov
sbb
into
cli
jp
imul
es
xchg
popa
xor
push
mov
lods
dec
cmp
call
push
adc
sub
je
test
xor
mov
pop
inc
xorl
add
lock
inc
or
into
loop
jns
mov
inc
cmp
xor
insl
dec
shlb
out
out
aam
and
and
inc
mov
xchg
lcall
xchg
scas
int3
add
and
roll
fs
adc
test
push
jns
gs
pop
cmc
ds
cwtl
cltd
rclb
push
adc
xor
mov
adc
movb
call
mov
add
fsubrl
mov
adc
xor
lods
adc
mov
dec
push
test
add
add
inc
adc
scas
sbbl
sbb
pushf
push
mov
insl
js
cmpl
xor
cmc
ljmp
adc
and
dec
dec
mov
sbb
add
mov
pop
jmp
pop
sbb
sub
out
mov
xchg
enter
loop
sarl
and
and
xor
jns
add
or
repnz
and
sbb
enter
gs
sub
sub
sub
sbb
aad
je
cli
enter
and
js
push
inc
xchg
add
adc
enter
mov
shl
sbb
push
adc
cwtl
cltd
sbb
insl
jne
sbb
push
xor
cli
lcall
xorb
scas
and
es
inc
popw
xor
xchg
gs
loopne
rorl
inc
cmpsb
jns
lods
jne
adc
mov
int3
bound
push
pop
jbe
sub
test
daa
daa
or
jp
filds
xchg
scas
dec
mov
jns
sbb
adc
cmp
orl
sub
je
or
push
inc
mov
addl
push
pop
test
push
rorb
xchg
xor
or
xchg
ds
gs
or
mov
subb
loopne
mov
mov
mov
cmp
adcl
ds
inc
or
cmpsb
xchg
fcom
xchg
dec
xor
jbe
mov
add
clc
add
push
je
xchg
mov
and
sbb
bound
push
xchg
cmp
loopne
xor
sub
cltd
test
sub
push
mov
hlt
push
adc
mov
movsb
ds
shlb
lcall
mov
or
inc
cli
mov
cmp
sbb
mov
dec
cmp
jbe
sbb
int3
movsb
sub
mov
cmp
mov
jb
cli
testb
inc
ret
test
cmpsb
nop
dec
sub
sbb
lods
bound
stos
adc
xor
push
dec
xor
roll
adc
shlb
xor
fisubs
push
xchg
inc
and
inc
je
imul
fists
ror
test
jle
loopne
adc
bound
fs
fcoms
sub
mov
insl
cli
and
push
push
sbbb
and
mov
loop
inc
push
inc
xor
jns
in
test
xchg
sbb
lock
jne
fs
inc
dec
and
cmpb
ljmp
shll
pop
push
sahf
adc
mov
es
inc
in
imul
addl
pusha
push
sbbl
adc
scas
imul
sbb
mov
or
lods
ds
cli
loop
stos
adc
cs
push
in
dec
aad
lods
shl
mov
push
aaa
andl
ret
cmc
fs
add
xchg
lret
adc
ds
call
test
test
cmpsb
mov
imul
mov
ss
scas
rorb
les
es
push
scas
add
xchg
cld
adc
mov
pusha
xchg
ds
mov
test
stos
pop
shl
mov
in
cmpsb
es
dec
mov
mov
dec
pop
insl
lods
inc
pusha
mov
or
sbb
inc
mov
pushf
ret
mov
mov
loop
add
sbbb
xor
mov
scas
sbb
es
pusha
cmc
lcall
outsb
test
addb
jns
adc
mov
mov
push
aad
jne
add
clc
inc
cli
push
aad
fldt
addb
adc
xchg
loop
xchg
jo
sub
and
lret
dec
add
sbb
pusha
xchg
push
insl
aad
or
mov
dec
pop
or
adc
jo
aam
rol
daa
fidivl
fs
sub
or
int3
adc
imul
add
in
xchg
shl
jne
dec
test
nop
jbe
sub
mov
gs
lock
or
push
or
mov
xor
jae
adc
lret
adc
or
mov
mov
jle
mov
shrl
cltd
pop
scas
adcb
sbb
cmc
jp
lcall
sub
mov
jb
pop
fistpll
int3
int3
sub
cltd
pop
pop
ds
mov
out
nop
sub
dec
movsb
mov
sbb
xchg
test
pop
loop
mov
and
push
shl
loop
sarb
cld
lods
aad
mov
push
and
xchg
pop
dec
mov
push
fimuls
xor
dec
and
je
gs
xchg
or
inc
and
mov
bound
add
push
cli
push
dec
push
and
inc
jae
repnz
xor
rclb
mov
mov
adc
xor
sub
push
push
add
dec
adc
xchg
and
sbb
jns
mov
push
rcll
jl
call
mov
aam
mov
sub
fdivrl
add
fwait
lcall
xchg
in
sbbb
pop
insl
clc
cmp
xor
out
addl
jbe
push
aas
aam
cltd
dec
pushf
fcoms
add
inc
mov
mov
and
inc
xor
xor
fs
cltd
fisubl
xchg
imul
jmp
je
test
or
adc
cwtl
add
adc
sub
cli
pop
dec
push
mov
or
cltd
adc
lcall
pop
inc
test
scas
cmpsb
test
dec
mov
sbb
xchg
shlb
repnz
ja
ljmp
addr16
xchg
test
negl
pushl
popf
sbb
add
add
je
jecxz
cmc
aaa
mov
in
add
jg
mov
add
enter
cwtl
push
sub
es
inc
addl
dec
sbb
xchg
ret
push
push
push
fs
sub
inc
push
or
dec
js
jns
add
mov
and
add
adcl
add
loope
add
lock
test
xor
cli
mov
adc
addl
sub
shrb
filds
sbb
xchg
jne
rcr
adc
mov
lock
pop
and
adc
gs
cmc
cli
loop
lds
cmc
adc
imul
mov
mov
out
cltd
insl
jne
add
push
test
adc
sbb
dec
push
add
enter
push
push
and
data16
dec
ds
sub
push
pop
push
cmpl
loop
jns
push
mov
or
adcb
sbb
cmp
xchg
cwtl
scas
mov
push
cmp
push
and
pop
inc
dec
cmp
pusha
es
lcall
js
mov
adc
cli
lcall
cs
lret
enter
jne
push
cli
jo
dec
sub
or
data16
orb
push
andl
add
inc
shlb
adc
hlt
dec
je
dec
mov
cld
ret
sbb
js
shlb
ja
pusha
jne
shrb
dec
add
adc
jb
es
in
cltd
int3
push
xor
adc
je
mov
inc
les
add
out
dec
pop
jmp
es
cli
sarb
lret
add
movsb
sbbb
push
cs
or
inc
dec
xchg
aaa
inc
xchg
jns
sbb
ljmp
and
push
push
and
dec
xor
dec
or
enter
xchg
mov
xor
mov
mov
xchg
test
ljmp
xor
pop
js
and
lods
push
xorl
pop
popf
jb
xchg
xor
cli
cli
mov
push
out
andb
xchg
adc
mov
loopne
shlb
add
and
into
fsubs
mov
xor
add
pushf
adc
jne
cltd
xlat
test
xchg
jne
mov
stos
shr
or
jne
adc
push
inc
fistps
ret
sub
mov
clc
andl
mov
repnz
adc
pusha
test
pusha
sbb
mov
inc
jbe
cmp
and
call
test
cs
dec
or
push
adc
mov
xor
jne
xor
scas
or
fisubrl
and
in
icebp
scas
xchg
hlt
fcoml
mov
or
inc
cmp
popl
push
loopne
inc
lea
jg
stos
loopne
add
sub
sbb
repnz
dec
push
sbb
movsl
xor
ror
push
loop
es
and
sbb
inc
or
int3
and
jne
and
or
loopne
push
test
dec
xchg
fisubrl
popa
push
cld
bound
pop
loopne
movsb
rcl
popa
push
pop
out
pusha
es
fadds
xor
shlb
mov
adc
mov
gs
push
push
pusha
js
xorb
je
sbbb
mov
mov
mov
sbb
sbbb
adc
xor
mov
xor
add
pop
test
or
cli
mov
jb
push
jmp
adc
mov
pop
mov
rorb
mov
jns
into
mov
sub
fs
repnz
push
or
cmc
inc
add
fbstp
movsb
aad
mov
xchg
adc
data16
mov
adcl
dec
or
loopne
gs
lret
int3
add
sbb
les
vandpd
mov
push
cmp
stos
scas
sahf
jns
loope
das
outsb
cli
andb
mov
insb
mov
push
shlb
repnz
outsb
mov
jns
into
rcl
dec
mov
and
add
data16
jb
cltd
aad
mov
decb
push
add
cltd
push
subl
shr
mov
test
scas
lods
stos
jb
or
ds
mov
fcoml
hlt
mov
dec
jbe
mov
insb
int
lcall
pushf
andb
dec
and
and
or
addl
sub
mov
fadds
adc
push
cltd
test
xchg
je
sbb
and
inc
and
push
test
lods
add
mov
clc
imul
fisubrs
push
mov
cwtl
add
xor
mov
outsb
cmp
loop
and
push
andl
fs
movsb
movsb
and
test
into
mov
xchg
jb
cld
pusha
mov
inc
push
fildll
or
stos
xchg
ds
xor
cld
or
jo
mov
inc
lods
sbbb
xchg
in
jbe
inc
icebp
push
fs
dec
es
adc
call
mov
push
mov
dec
imul
andb
mov
add
cmpsb
mov
imul
or
les
and
andb
mov
cmpb
add
jo
sub
sub
ret
out
hlt
sbb
fidivrl
sbb
or
mov
ret
ret
jp
cli
jg
xor
addl
out
pop
jne
leave
in
pop
cmp
and
pusha
add
imul
inc
push
ret
cmc
mov
or
cli
in
rcrl
cli
into
out
mov
lods
xchg
pushf
fadd
and
cltd
or
sub
mov
lock
scas
adc
xor
loop
orb
push
stos
fs
push
cwtl
xorb
pusha
shrb
leave
test
imul
nop
xchg
adcl
or
insb
dec
mov
mov
xor
rorl
adc
xchg
or
insl
mov
xchg
imul
outsb
scas
dec
inc
add
mov
xor
adc
add
pop
and
xchg
dec
pop
or
xor
inc
roll
mov
insb
scas
ret
pusha
jp
mov
xor
fiadds
inc
mov
xchg
call
or
sub
or
mov
jbe
add
xchg
imul
shrb
inc
cltd
movsb
mov
pusha
lods
imul
inc
jne
mov
mov
les
sbb
add
xor
sbb
pop
mov
mov
sub
nop
add
mov
sub
call
ret
and
insb
pop
adc
inc
aaa
pusha
xchg
adc
sbb
sbb
cltd
cmpsb
cmp
cli
or
sbb
mov
daa
js
es
inc
and
ret
xchg
cs
inc
xor
push
sub
add
add
hlt
cltd
mov
andb
loopne
add
inc
ret
or
subl
add
ds
inc
lcall
shlb
dec
xchg
add
cmc
adc
or
adc
cmp
adc
clc
insl
pop
mov
fidivl
add
add
xchg
jmp
add
faddl
clc
mov
adc
jb
add
enter
test
inc
popa
push
push
addb
cs
mov
mov
xchg
clc
nop
in
add
mov
pusha
pop
insb
mov
mov
mov
push
pop
test
orl
aam
sbbb
adc
mov
mov
push
adcl
or
pusha
or
cmp
push
gs
add
push
aaa
into
fbstp
and
ljmp
sub
xchg
int3
mov
pusha
or
shl
sub
rolb
lock
movsb
and
hlt
mov
es
lock
clc
loop
sub
std
lea
lret
push
std
aaa
mov
imul
mov
inc
sub
sbb
mov
add
cli
mov
lock
mov
cltd
out
sti
xlat
fbld
lcall
test
loop
jl
imul
adc
inc
mov
mov
xchg
mov
mov
addl
adc
jbe
adc
add
lea
in
mov
or
xchg
pushf
push
xor
cmp
mov
add
pusha
adc
sub
lret
push
lcall
jb
in
jns
adc
or
push
lret
int3
fsubp
lret
mov
push
and
call
xor
dec
or
subl
and
lods
les
mov
xchg
mov
lcall
add
add
push
push
lods
loop
xchg
or
lods
dec
and
xorl
fs
mov
cmp
add
jp
xchg
xchg
add
inc
mov
sbb
cli
lcall
sbbb
sub
test
dec
mov
ficoms
inc
mov
push
push
scas
mov
push
pop
or
fists
inc
adcb
mov
push
cltd
js
inc
cs
cltd
mov
or
outsb
mov
push
pop
jae
pop
jne
je
pop
lods
test
or
push
imul
inc
adc
inc
je
cs
push
mov
insl
cmpsb
xchg
add
int3
jb
aam
xchg
or
test
ljmp
dec
orb
je
subl
stos
adc
adc
fists
dec
xchg
out
sbb
shl
sbb
mov
sbb
sbbl
and
xor
xchg
cltd
push
dec
mov
sub
or
fadd
ljmp
jle
xchg
push
adc
mov
insl
jo
add
inc
sub
pop
add
imul
push
rorb
adc
mov
push
lret
test
addb
xchg
aad
arpl
cmp
addl
jo
mov
sub
dec
stos
test
je
pop
sbb
cli
xor
mov
imul
sub
push
mov
subl
or
adc
add
cltd
mov
adc
in
sub
jb
cs
push
imul
dec
add
jle
adc
mov
cld
cmpsb
sub
dec
clc
cwtd
push
test
js
test
enter
lcall
sbb
jl
aad
jne
subl
and
adc
out
test
inc
add
and
jle
je
lock
loop
es
decl
or
push
ret
adc
sbb
mov
jge
aad
sub
push
hlt
aam
adc
cli
clc
push
hlt
decl
subl
ret
inc
add
sub
imul
and
cmp
and
mov
or
loop,pt
mov
add
je
hlt
adc
mov
imul
push
push
addb
add
insb
cltd
cmp
mov
adc
lea
inc
in
dec
push
cmpsl
jo
ss
push
cltd
fs
add
pop
dec
subb
in
xchg
jns
xor
push
xchg
push
cmc
or
or
push
pusha
movsb
push
cmp
or
inc
pusha
sbb
popa
xchg
or
push
xchg
and
push
gs
subl
lods
add
loopne
hlt
mov
aad
cli
xchg
jp
push
dec
add
push
and
push
movsb
cltd
xchg
xor
inc
aam
mov
dec
mov
nop
int3
es
data16
inc
xor
insl
mov
add
loop
stos
or
insb
dec
test
mov
jl
push
push
mov
sbb
and
lret
shrb
add
lock
push
lods
add
xchg
cmp
sbb
mov
add
orb
test
cs
jp
fcoms
cwtl
mov
sub
jb
cmc
fsubs
nop
fidivl
dec
roll
nop
fs
faddp
addb
add
add
inc
je
fildll
xchg
add
cmp
jne
loop
add
and
pop
stos
adc
add
test
rorb
xchg
adc
sub
inc
jb
dec
adc
in
in
push
pusha
mov
adc
dec
mov
lret
sub
insl
jbe,pt
dec
adc
aad
ficoml
test
inc
aaa
pop
pop
dec
imul
addl
adc
cmp
fsubs
es
rcl
xor
sub
in
xchg
push
or
addl
inc
mov
hlt
fadd
andb
cmc
es
stos
mov
fdivl
adc
dec
test
xor
sbb
inc
and
filds
xchg
lret
test
fcomps
adcl
mov
cmp
cltd
mov
mov
dec
pop
cmp
xchg
jl
mov
sbb
outsb
adc
add
test
sbb
add
fisubl
fistps
cltd
add
orb
xchg
pop
push
movsl
in
je
into
xorb
cmp
faddl
xchg
and
aam
or
out
sbb
orb
popa
cmpsb
push
into
or
cs
and
dec
cmc
pop
aam
repnz
insl
pop
imul
ss
int
push
pushl
sub
push
lock
cld
push
mov
cmpsb
inc
sbb
sub
pop
inc
or
call
add
sub
inc
sbb
mov
mov
or
dec
hlt
mov
stos
dec
or
test
mov
inc
mov
add
mov
push
xor
scas
xor
and
add
iret
scas
test
dec
or
add
iret
or
mov
add
fadd
loopne
pop
mov
bswap
and
push
push
outsb
sub
mov
rolb
clc
cli
inc
mov
inc
fsubrs
in
or
nop
dec
inc
and
add
daa
rclb
ja
adc
add
adc
add
sbb
add
movl
jmp
sbb
pusha
ror
hlt
fcoml
jne
arpl
cmp
pop
mov
test
xor
sbb
pusha
inc
call
dec
popf
push
adc
fisttpll
test
mov
xchg
bound
cmc
fimuls
sub
mov
dec
add
inc
stos
inc
adc
sbb
int3
add
or
push
mov
or
aam
andl
pop
adc
fisttpl
insb
sbb
mov
nop
mov
xchg
sbb
nop
push
lcall
and
and
imul
and
mov
cli
je
push
add
cs
inc
fs
mov
cli
or
pusha
adc
xchg
push
xchg
loopne
push
mov
insb
mov
and
inc
pop
ss
add
add
pop
add
fiaddl
les
dec
adc
jo
mov
mov
cmpb
push
adc
jne
add
xchg
inc
bound
in
cli
cmc
lcall
jbe
movsb
and
lods
mov
lods
pop
push
adc
mov
mov
xchg
lret
sarb
or
or
sub
mov
sbb
mov
test
mulb
and
dec
xchg
aam
push
inc
add
pusha
cmpsb
mov
test
inc
xchg
or
sbbl
and
in
sbb
test
rorb
sahf
movsl
mov
mov
imul
inc
data16
xchg
sub
aam
fsubs
stos
adc
adcb
push
data16
mov
mov
add
push
aaa
mov
add
syscall
inc
adc
add
repz
pusha
xor
push
loopne
push
pop
adc
pushf
jns
outsb
stos
adc
movsl
add
mov
test
fcoms
js
or
ds
orb
test
mov
fs
xor
dec
jns
mov
out
je
push
and
ds
js
shrb
insl
test
or
mov
mov
dec
fsubs
adc
push
and
scas
push
fsubl
sbb
inc
mov
add
pusha
jns
imul
cmp
imul
mov
inc
xchg
or
lock
jne
rclb
mov
mov
dec
sub
jne
loope
addl
sub
xor
dec
adc
mov
push
cmc
cli
rcl
xchg
mov
les
cltd
in
fiadds
scas
fwait
subb
notb
adc
mov
add
test
inc
and
xchg
xor
ds
xchg
ss
sub
orb
inc
lcall
mov
inc
test
mov
stc
ljmp
stos
inc
xorb
jne
xor
scas
cld
test
add
xor
pop
loopne
push
je
adc
loopne
jmp
ret
mov
add
and
je
cs
add
mov
or
inc
shlb
lcall
movsb
aad
aaa
lods
jl
adc
jns
loop
mov
or
inc
mov
scas
xchg
inc
loop
cli
cmpsb
in
inc
dec
push
in
push
ficoms
pusha
push
ret
outsb
mov
in
pop
mov
lods
add
ljmp
fs
cltd
ds
jle
orl
orb
xchg
push
es
mov
stos
xchg
adcl
inc
lock
jo
sbb
mov
lcall
add
adc
clc
jle
dec
push
xor
js
xor
ret
sbb
bound
sbb
imul
adc
test
sbb
mov
sbb
mov
mov
test
sbb
fildl
adc
popa
jo
add
pop
pop
xor
call
xchg
lock
cld
sub
dec
adc
mov
lcall
cli
loopne
xor
push
cltd
dec
adc
imul
xchg
rcr
sarb
cmpsb
js
filds
jbe
cmpsb
xchg
jno
mov
pop
push
cmpsb
add
and
jne
fsubrs
inc
push
daa
dec
repnz
push
fisttps
push
xchg
bound
cmpsb
push
in
sarb
add
sub
adc
je
inc
pusha
push
mov
xor
adc
sbb
subl
adc
xor
add
or
call
pusha
inc
mov
test
pusha
push
inc
push
ficomps
fs
subb
sbb
nop
add
mov
insl
adc
iret
push
mov
sub
mov
xchg
jne
jne
sbbb
push
sbb
adc
or
jl
orl
je
mov
fadds
mov
hlt
gs
shlb
pop
mov
stos
mov
xor
jne
cltd
dec
pop
inc
xchg
lret
ljmp
sbb
enter
xchg
push
push
push
cltd
adc
jb
xor
jl
push
xchg
mov
das
or
sahf
sbb
cmp
adcb
gs
test
xor
sbb
ret
mov
mov
daa
call
inc
sub
fldlg2
sbb
add
fwait
jo
adc
push
and
pusha
inc
pushf
jo
inc
push
mov
hlt
pusha
clc
adcb
cmp
push
cmp
jns
push
push
sahf
fdivrl
shrb
push
jns
or
leave
xor
push
loopne
xchg
push
mov
add
xchg
add
ror
sbb
decb
inc
jl
add
sub
shlb
add
roll
call
adcb
aad
nop
stos
imul
adc
xor
add
lods
cmp
jnp
mov
test
lods
cli
mov
movsl
jb
and
stos
ror
cltd
faddl
dec
or
lcall
jb
add
add
add
test
sbb
sub
test
test
mov
mov
mov
test
push
dec
js
pop
or
adc
inc
cmp
add
mov
push
or
mov
sub
or
inc
cmp
cmc
add
inc
adc
testb
xor
cmpsb
xchg
sbb
jo
push
lcall
adc
and
sbb
add
loopne
out
push
adc
sub
mov
inc
sub
inc
popa
push
inc
jae
in
inc
xor
insl
in
mov
aad
inc
pop
push
cs
ljmp
push
mov
cli
mov
push
xchg
js
aad
jge
mov
xchg
fs
sbb
test
test
call
test
mov
enter
xchg
dec
cwtl
inc
jle
dec
aaa
popa
stos
nop
repnz
cmc
and
xor
sub
movsb
inc
fs
test
adc
dec
add
adc
lods
and
jns
jae
mov
xor
insl
je
ror
dec
das
insb
stos
xorl
je
fbstp
jo
lock
push
pop
cltd
outsb
jl
shr
xchg
in
addb
ds
jbe
dec
sub
mov
pop
es
push
stos
or
push
ds
mov
shrb
mov
shrl
add
jp
xchg
push
cs
lret
xorb
ss
cmp
push
loop
les
push
dec
and
push
push
test
cltd
push
mov
add
shr
mov
lods
int3
loopne
xchg
jb
out
or
aad
popa
js
mov
add
aad
jle
sub
push
test
cmp
insb
pop
sub
dec
call
cltd
add
inc
and
ss
cltd
cwtl
lcall
adc
add
and
insb
adc
iret
aad
push
xor
sbb
mov
fwait
mov
and
insb
adc
icebp
jp
cli
fsubrs
jb
lcall
cwtl
cmc
xchg
andb
pop
sbb
mov
loope,pt
adc
lcall
xchg
push
ret
dec
pushw
cmp
mov
add
call
jl
fiadds
fimull
push
mov
adc
push
sbb
pop
dec
cmp
inc
mov
in
xchg
call
aad
xor
andb
adc
mov
or
mov
pop
orb
mov
imul
pop
mov
or
push
enter
rclb
inc
push
or
and
pop
test
movsb
or
sbb
pop
or
cwtl
fwait
adc
xchg
and
inc
addr16
mov
or
jle
es
add
shrl
popa
inc
test
cmp
fldl
call
mov
xchg
push
je
subl
movsl
mov
sbb
add
push
push
push
inc
mov
xorl
mov
enter
aad
loop
cltd
shll
jbe
push
lock
xchg
mov
js
jb
mov
push
adc
data16
xchg
loopne
mov
sub
pop
lret
push
inc
sub
insl
lret
incb
lret
and
enter
add
pushf
test
rclb
cmpsb
jo
insb
push
mov
cmp
sbb
repnz
add
mov
add
fdivr
bound
add
xor
and
or
mov
sbb
mov
xorb
and
lcall
rorl
fadd
clc
add
ret
inc
gs
mov
data16
dec
cltd
fldenv
test
shrb
jne
repnz
mov
sbb
cld
stos
shrb
adc
xor
rolb
or
or
xchg
nop
shlb
imul
push
push
cmpsb
pop
loope
cmp
stos
xchg
cmc
rorb
and
decb
mov
adc
sub
es
xor
outsb
xchg
or
push
or
xor
fisubl
inc
sub
xor
xchg
xchg
ret
mov
mov
scas
xor
popl
pop
jmp
movsb
adc
push
add
and
adc
jl
mov
push
dec
jecxz
sub
pop
cmpl
mov
push
mov
mov
sarb
in
sub
lock
jmp
jne
pop
aad
xor
enter
ret
and
cmc
or
fadds
push
push
fwait
jo
push
add
mov
xor
sahf
xor
dec
add
pop
hlt
inc
cs
jno
mov
inc
jne
mov
aad
jecxz
add
faddl
adcb
addb
stos
addl
pusha
add
sub
aam
mov
jo
mov
or
add
sbb
inc
mov
test
push
or
push
les
cmp
or
sub
add
and
in
mov
xor
nop
jl
into
or
cwtd
pop
dec
inc
out
test
add
mov
lods
jns
ret
in
insb
mov
adc
nop
and
cmc
mov
xor
stos
adc
or
adc
call
fs
outsb
adc
xorb
add
and
test
inc
rorl
mov
pop
mov
in
xor
push
test
or
clc
sbbb
scas
ds
shrb
sbb
inc
sbb
and
push
adc
in
shl
inc
adc
cltd
or
mov
ret
add
and
rorl
lret
loopne
insl
lcall
mov
imul
or
add
cmc
movsb
xchg
int3
fimull
cmpsb
dec
and
jo
sub
mov
mov
es
xor
orl
aad
mov
es
nop
inc
cltd
xchg
mov
inc
pusha
loop
jnp
mov
sbb
pusha
or
cmp
dec
test
jl
icebp
sbb
sbb
sbb
roll
xor
data16
lcall
test
add
sub
nop
cmp
enter
shlb
and
push
mov
sbb
mov
sub
push
cmpl
insb
mov
lock
cs
nop
push
cwtd
cmc
add
add
andl
xor
into
cli
lods
add
sbb
mov
jb
sahf
ret
dec
add
sbb
xchg
and
pop
push
adc
mov
pop
sub
xchg
andw
addl
negb
push
push
or
xchg
call
test
xchg
mov
mov
xor
imul
sbb
jb
mov
jp
pop
mov
pop
and
push
mov
push
shlb
push
add
lcall
bound
xchg
adc
push
add
clc
jle
movb
adcl
stos
push
lret
js
pop
rolb
pusha
sbbb
adc
adc
hlt
adcb
mov
xchg
cld
jecxz
mov
repnz
pop
lock
les
pusha
lret
jb
sbb
je
lcall
and
bound
and
or
jl
xor
int3
push
cmp
ljmp
stos
fadds
push
xchg
ljmp
and
es
pusha
mov
or
or
mov
xor
inc
scas
mov
dec
fcompl
and
outsb
and
cmp
mov
loop
cmp
mov
push
jbe
loop
int3
loop
adc
and
inc
xor
shlb
mov
or
add
jbe
sbb
mov
sarb
and
jne
loopne
inc
call
sbbb
sub
andb
loopne
shl
out
bound
dec
in
dec
fisubs
or
testb
xchg
or
es
xor
add
pop
dec
mov
loop
out
loopne
cmp
sub
xchg
leave
dec
inc
fsubs
inc
dec
xchg
scas
xchg
mov
fs
addb
addb
mov
mov
mov
sub
adc
scas
insb
xchg
adc
adc
fidivrl
mov
popa
test
dec
push
mov
xchg
out
pusha
push
mov
adc
or
cmpsb
inc
cmp
ljmp
push
pop
loopne
pop
cmp
sbb
movsb
pop
push
sub
mov
mov
xchg
pop
adc
push
inc
jo
rolb
or
inc
fidivl
rclb
inc
sub
xor
or
andb
sbb
add
in
lcall
pusha
inc
inc
pusha
jo
pusha
add
mov
xor
or
addb
mov
jb
sub
test
jle
add
mov
mov
dec
bt
mov
add
adc
mov
xchg
inc
mov
dec
sbb
sub
or
pusha
xor
movb
loopne
mov
push
inc
loop
outsb
into
gs
push
sbb
adc
test
xchg
testb
ret
rcrb
rclb
or
test
jp
adcb
mov
int3
mov
xchg
xchg
dec
ljmp
and
push
cmpsb
addb
mov
pusha
pusha
scas
sbb
adc
add
jo
js
cli
push
movb
xor
adc
inc
mov
xor
sub
and
or
push
gs
imul
mov
ljmp
addb
mov
dec
cmp
pusha
int
loope
pop
push
scas
mov
push
cli
insb
cli
sbb
cli
aad
cmp
outsb
sarb
popf
je
add
rorb
xor
mov
addb
mov
cmp
dec
sub
loop
xor
inc
mov
add
jo
add
adc
mov
xor
sbb
cmp
cmc
sbb
cli
pop
mov
xor
push
push
or
or
test
mov
xor
sbb
fwait
or
fs
test
add
sbb
pop
inc
inc
lea
mov
add
stos
adc
rclb
es
lock
cli
pop
cltd
or
test
dec
and
mov
cmp
int3
scas
stos
sub
or
dec
cmp
pop
ret
enter
mov
pushw
push
mov
xchg
sub
xor
push
mov
sub
dec
call
orb
cltd
cli
mov
pushf
popa
push
mov
pushf
in
push
test
lcall
add
cmp
loopne
adc
sub
lock
xchg
inc
xchg
mov
push
mov
loop
push
inc
or
test
lock
mov
mov
lret
dec
cmp
jp
inc
and
add
or
lods
shll
mov
adc
xchg
push
stos
call
add
scas
mov
and
push
jo
popa
or
aad
cltd
orb
or
pusha
adc
push
inc
mov
sbb
and
add
mov
dec
sub
fiaddl
mov
and
ds
test
xchg
dec
inc
cwtl
push
ds
lret
or
in
int3
out
lcallw
jbe
mov
adc
xchg
cltd
or
adc
and
push
or
or
adc
push
outsb
mov
push
xor
jo
test
dec
jne
ret
and
xor
add
ret
pop
dec
push
inc
in
mov
cs
int3
sbb
lret
adc
mov
test
push
or
clc
push
data16
mov
dec
and
mov
rcll
jl
insl
cltd
aad
add
dec
inc
adc
nop
dec
or
mov
and
mov
cs
aam
aad
add
repnz
inc
sbb
xor
mov
cmp
es
les
inc
rcll
mov
lret
push
sub
xchg
push
orl
ljmp
shll
add
sbb
or
cli
jg
lcall
inc
movsl
pop
in
ret
addb
inc
out
adc
fsubrl
fs
les
ret
test
xchg
jne
mov
test
push
and
push
push
stos
xchg
cmp
push
or
adc
ficoml
dec
push
mov
dec
rorl
into
cmp
call
cmp
into
mov
mov
push
pop
inc
inc
add
stos
xchg
push
out
jo
or
loop
lcall
push
cld
add
xor
inc
inc
mov
and
clc
ficoml
xor
test
pop
push
cmc
or
adc
cmp
jmp
aam
dec
sbb
jns
adc
xchg
test
and
dec
js
mov
ret
cmp
xchg
add
mov
data16
inc
sub
add
fistpll
xchg
and
adc
add
lods
cmpb
add
stos
mov
fwait
jb
cli
lret
sbb
scas
bound
xchg
fs
inc
and
push
mov
mov
int
test
inc
adcb
sahf
movsb
xor
xor
mov
and
xchg
loopne
or
xchg
push
add
add
lret
lret
sahf
es
and
aad
test
xchg
adc
enter
adc
push
push
adc
xor
rorb
jbe
sbb
sbb
xor
or
lcall
push
pop
test
es
ds
add
mov
daa
adc
xor
pop
out
scas
mov
orl
and
popa
inc
loopne
and
dec
scas
mov
pop
test
lods
xor
add
inc
test
imul
dec
dec
add
mov
xchg
sbbl
push
scas
cs
or
loopne
mov
pop
cmp
dec
jns
fiadds
sub
loop
mov
cmp
pop
push
jl
push
jae
lret
add
inc
xchg
cmp
adc
in
add
jno
inc
dec
test
inc
dec
add
test
jns
sub
and
or
aam
in
cmp
xchg
data16
lret
pop
or
sub
jo
fidivs
stos
cmp
jb
dec
sub
adc
adc
add
jne
les
fadd
jne
call
adc
dec
shlb
sahf
jo
addb
inc
mov
sub
push
push
dec
pusha
call
xor
mov
pusha
xor
lods
cs
adc
ja
fimuls
sub
enter
shrb
and
jbe
in
add
inc
sti
mov
pop
ss
pop
js
xchg
adc
bound
imulb
test
les
rorb
add
push
cwtl
cmc
cmc
test
sub
sahf
out
push
inc
test
or
in
bound
or
adc
or
sbb
or
jl
fs
je
mov
mov
mov
mov
push
mov
js
insl
clc
xor
push
cmpsb
mov
es
sbbb
mov
fdivs
xchg
adc
fs
test
sbb
loop
xor
or
adc
add
test
push
xchg
pop
data16
test
mov
stos
rcrb
push
or
lcall
inc
in
sahf
adc
dec
cs
xor
xor
dec
mov
outsl
push
mov
adc
push
les
sbb
test
cmp
and
stos
ss
aaa
dec
sbbb
push
pushf
xor
or
adc
jbe
mov
pusha
xor
or
dec
imul
jl
shrb
jns
xor
shll
or
jle
test
add
bound
and
xor
cmp
inc
push
insl
dec
mov
push
dec
add
lods
enter
ds
mov
and
dec
sub
dec
loope
fdivr
sub
and
dec
mov
push
xorl
cmp
jns
adc
dec
jo
enter
jo
lods
jl,pt
xor
adc
js
push
and
lds
jb
push
or
test
adc
out
inc
int
or
adc
es
sarb
nop
js
add
adc
inc
adc
xor
mov
xchg
fs
sbb
stos
cmp
xchg
rolb
pop
andl
or
push
test
loop
outsb
inc
test
xor
ljmp
sub
int3
jb
orl
aad
cmc
adc
adc
into
rorb
xor
push
shl
orb
cmp
sbb
pusha
sub
aad
inc
push
mov
mov
xor
xchg
nop
mov
add
cmc
lcall
and
push
mov
in
xchg
adc
outsb
xchg
add
adcb
aam
fsubr
test
sbbb
mov
out
inc
xor
les
in
outsb
in
das
fiaddl
daa
test
shll
sub
add
push
out
jo
aad
es
sub
mov
aaa
fs
jp
movsb
dec
cmp
mov
inc
jb
loope
adc
pusha
dec
jne
mov
insl
test
mov
mov
loopne
push
and
cmc
and
add
sbb
test
insb
push
adc
sub
ds
test
inc
add
bound
and
and
dec
cmp
or
sbb
cmp
adc
sahf
sbb
test
scas
inc
dec
jle
test
dec
cmpb
jle
or
inc
jne
imul
inc
or
adc
mov
xchg
test
je
push
test
push
fs
addl
adc
cs
les
xor
or
jbe
push
aam
sbb
xchg
xchg
push
movsl
or
orl
dec
or
js
pop
add
push
lods
xor
add
pop
cmp
mov
mov
cld
adc
dec
int3
sahf
adc
test
gs
rol
aam
add
les
mov
pop
push
inc
sub
push
in
je
int3
scas
mov
scas
lcall
shrb
or
inc
jle
push
lcall
notb
or
lods
xor
cmp
popa
mov
push
cltd
int3
add
adc
rorb
lods
test
fs
data16
aad
push
loop
aad
and
mov
dec
ret
mov
lcall
xchg
sbb
cli
push
test
adc
xchg
xorl
push
dec
into
mov
imul
jne
and
push
aam
xchg
xor
movb
push
ds
sar
xor
adc
inc
pusha
xchg
xchg
sbb
ret
fs
call
mov
xchg
add
test
fs
add
xchg
movsb
mov
and
xor
loop
dec
addb
jbe
fiaddl
jb
les
loopne
cmp
xchg
test
cld
add
ss
jo
les
sbb
cli
rolb
mov
mov
test
add
mov
jno
jns
or
insl
leave
or
lods
loopne
add
repnz
scas
inc
and
adc
out
movsb
sbb
orb
jne
call
mov
add
test
pop
xchg
xchg
movsb
cmc
or
popa
add
stos
es
mov
sub
adc
xchg
push
out
mov
push
ds
cmp
fs
cli
ds
mov
or
jecxz
xor
sub
and
sbb
dec
jns
cwtl
jne
popa
push
push
lods
lock
insl
fldl
push
imul
in
add
pop
outsb
sbb
adc
pusha
or
ss
adcb
add
test
inc
or
add
jb
mov
or
movsb
jns
fimuls
cmpsb
add
push
cmc
pop
jmp
imul
xorl
and
adc
xchg
push
pushf
test
xchg
or
xor
inc
xchg
testb
mov
sbb
mov
inc
loop
push
in
push
ds
adc
push
je
sub
cmpsb
xor
mov
movsb
loopne
inc
pop
mov
adc
inc
sub
stos
add
add
cwtl
fs
pop
movsl
inc
aaa
dec
les
jne
xor
aam
scas
add
adc
push
adc
cli
push
xor
xor
mov
ljmp
pusha
mov
xor
fistps
addl
mov
cmpsb
xor
xor
add
aam
mov
dec
sar
imul
aad
lcall
pusha
adc
gs
ss
jl
cltd
push
loopne
xchg
loopne
into
cmp
adc
lods
nop
pop
in
aam
or
xor
add
enter
add
jo
cmpsb
mov
adc
pop
pop
dec
or
mov
insb
xchg
pusha
adc
add
ds
push
test
ret
sbb
pop
push
adc
movsl
xchg
les
add
inc
mov
inc
adc
fs
test
inc
jl
cltd
push
dec
sbb
xchg
sub
sbb
imul
out
add
push
mov
les
add
sahf
push
stos
pop
xor
loop
xchg
leave
sbb
dec
sub
mov
leave
inc
les
sub
xchg
ljmp
jo
xor
xor
push
push
or
add
cmpsl
push
and
imul
mov
cmp
into
mov
out
adc
nop
cltd
or
ror
lret
fs
pushf
dec
add
push
test
repnz
push
popa
sahf
gs
cwtl
mov
movsb
ljmp
outsl
lret
jp
cmpsb
xor
fsubrs
aam
mov
jne
or
or
mov
mov
sub
mov
mov
mov
aad
sub
mov
inc
dec
push
scas
and
pop
test
add
movsb
aad
das
js
mov
emms
add
sahf
xchg
inc
inc
push
inc
clc
idivl
mov
push
mov
xchg
add
adc
out
xchg
mov
mov
jl
sbb
adc
mov
xor
fisubrs
test
adc
pop
sbb
lods
cwtl
es
lcall
adc
es
lcall
push
ljmp
cmp
mov
inc
mov
ret
scas
mov
adc
fmuls
inc
or
cs
sbb
xchg
sbb
add
cli
mov
inc
mov
sub
enter
mov
repnz
or
xor
or
enter
insb
cltd
xor
lret
shlb
dec
shlb
dec
sbb
enter
fiadds
inc
or
pusha
xchg
mov
add
adc
dec
and
pushf
add
aam
add
pop
or
or
mov
pusha
adc
push
push
cmp
jo
add
inc
fsubrl
ret
mov
dec
subl
dec
xchg
pop
loop
adc
or
adc
xchg
push
or
adc
mov
movsb
cltd
xchg
ljmp
push
pop
mov
notb
push
sbbb
or
mov
lcall
push
stos
out
or
ret
adc
push
jb
xor
push
push
ret
inc
or
inc
adc
pop
inc
and
or
xorb
sub
cmpb
xchg
bound
sub
or
loopne
pop
imul
adcb
scas
push
xchg
adc
popa
push
pop
je
stos
xchg
cltd
adc
cmp
mov
sub
xorl
add
xor
inc
inc
enter
dec
push
lcall
es
adc
pop
rol
dec
bound
mov
test
addb
fmull
add
scas
pusha
push
fistpll
lcall
jb
es
ret
aam
xor
cmp
sub
add
pusha
test
or
sbb
adc
mov
enter
add
sub
data16
sbb
sbb
cmp
loope
jne
push
insb
cltd
les
or
and
or
mov
je
add
aad
cmp
and
or
and
outsb
inc
loope
add
loopne
push
sbb
mov
xor
pusha
pop
push
cmc
push
sbb
dec
fbstp
push
aaa
mov
sub
adc
mov
out
push
or
and
in
inc
mov
leave
imul
cmpb
xchg
das
in
push
repz
cmc
dec
adc
sbb
push
sub
jmp
dec
adc
jg
mov
imul
lds
sub
push
and
loope
test
insb
sbb
movsb
fsubs
and
cmc
gs
cltd
test
retw
cld
js
or
add
adc
shlb
dec
orb
js
xchg
ljmp
adc
insl
mov
adc
sub
inc
aam
pop
mov
sbb
push
jp
cmp
adc
ss
xchg
loopne
sahf
push
movsl
and
hlt
mov
add
xchg
pop
inc
or
add
loopne
ret
cmp
and
adc
cld
jbe
cmp
rclb
pop
fbld
subb
and
loope
pop
adc
cmc
sub
xor
fsubrl
sahf
mov
mov
stos
fs
loopne
lcall
cltd
pusha
or
jns
sub
test
loop
adc
repnz
jo
and
add
dec
mov
orb
mov
xchg
xor
push
pop
push
pop
xchg
xor
mov
adc
inc
push
ret
sbb
xchg
movsb
cmc
inc
lcall
and
mov
push
cltd
mov
les
enter
push
or
jp
mov
and
and
mov
call
and
pop
aam
xchg
inc
mov
push
cs
movsb
or
inc
add
les
ds
lret
test
jl
or
out
cmpb
and
cwtl
dec
ret
add
sbb
mov
lods
xchg
stos
enter
addb
push
outsb
test
mov
roll
sbb
adc
int3
outsb
lret
int3
jl
push
xor
xchg
fistpll
dec
mov
jne
cwtl
out
dec
xor
inc
fiaddl
sub
cmp
adc
rol
dec
pop
fdivl
mov
add
cmpsb
xchg
cmp
sub
stos
push
orb
adc
add
lret
enter
lock
add
lretw
and
adc
mov
adc
dec
push
mov
sub
xor
loop
andb
xchg
lret
dec
rclb
and
jl
es
es
inc
fadds
dec
add
add
add
enter
cmp
loop
adc
rcr
mov
test
les
add
inc
gs
call
adc
fisubs
adc
push
push
ds
push
cmp
and
adc
push
lods
jns
pop
rol
and
enter
or
inc
push
movsl
aad
cmp
incl
ja
inc
hlt
push
push
push
push
pop
icebp
fs
ss
mov
cld
daa
mov
ret
push
addr16
pushf
sub
dec
fsubrs
adc
inc
or
lock
sub
push
aam
mov
ret
lock
jnp
inc
adc
sub
add
fisubrs
lcall
inc
cmp
sbb
inc
mov
addb
mov
inc
data16
add
mov
and
add
gs
mov
cmp
mov
add
stos
sub
cmp
xor
xor
pop
loope
pop
test
in
mov
mov
push
pushf
nop
push
pop
sbb
call
fmulp
mov
test
or
cmp
pop
jo
cli
adcl
and
mov
or
sub
dec
js
jo
xorb
and
cmpl
mov
or
scas
repnz
adc
xchg
xchg
add
push
sbb
jb
sahf
cmpb
or
stos
clc
cltd
lods
add
lods
fs
mov
and
pop
ret
nop
ret
ds
aad
lcall
test
push
sub
xor
in
sbbl
fmull
mov
add
mov
pusha
faddl
popa
test
or
lods
push
enter
xchg
sub
adc
push
mov
push
adc
jb
mov
and
sbb
inc
scas
push
fs
es
add
icebp
push
test
sub
addb
xchg
fsts
cmpl
jp
jne
mov
stos
inc
adc
add
mov
mov
aam
cwtl
shrb
stos
inc
test
push
or
subl
nop
inc
mov
ljmp
dec
jo
stos
push
fidivrl
int3
mov
and
test
adc
hlt
cli
xchg
mov
push
fadds
inc
push
or
xor
cwtl
dec
dec
pop
mov
xchg
add
into
cwtl
sbb
mov
mov
push
dec
add
mov
fs
test
shlb
sub
adc
sbb
sbb
add
decb
aam
dec
push
mov
movsl
cmpsb
or
movsb
xchg
xchg
mov
push
ds
pop
dec
cs
daa
mov
addb
cltd
cmc
xchg
xchg
rcrb
dec
and
bound
adc
dec
lcall
sbb
or
sub
or
popa
sub
lcall
mov
and
cld
into
and
sub
sbbl
jb
rcrb
mov
adc
mov
xchg
push
pop
xchg
or
or
xchg
dec
dec
andb
sbb
stos
inc
pusha
mov
inc
dec
sbb
xlat
push
adc
ss
and
lret
and
jl
pop
inc
les
out
cmpsb
sbb
cwtl
out
jbe
cmc
repz
push
sbb
mov
push
or
xor
imul
inc
push
add
adc
push
add
mov
adc
test
add
outsb
dec
repnz
and
in
or
and
add
je
fs
mov
and
mov
push
call
adc
mov
in
test
push
les
lret
pusha
sbbb
push
lret
inc
hlt
xor
mov
popa
jp
mov
dec
xchg
stos
xor
cmp
adcb
mov
leave
loope
in
pusha
lcall
or
sbb
scas
xchg
sbb
mov
cld
popa
push
and
and
dec
adc
adc
mov
jo
rcrb
mov
dec
outsb
leave
dec
jl
add
fs
sbb
movsb
test
fcoml
sbb
imul
aad
dec
andl
xor
push
add
xor
mov
xlat
lret
xchg
xor
mov
pop
inc
dec
sbb
mov
sbb
pop
xor
push
gs
sbb
lret
pusha
adc
mov
xor
cmpsb
adc
sahf
adc
sbb
or
sbb
mov
xchg
fmuls
je
es
imul
cs
mov
stos
ljmp
xor
xor
loopne
mov
xchg
data16
or
and
adc
gs
rorb
adc
sbb
sbb
push
push
jb
cli
sbbb
dec
add
pop
xor
out
jo
jo
sub
out
xor
fsubp
jbe
sbb
add
jp
hlt
les
adc
cmp
push
or
mov
int3
mov
scas
adc
dec
mov
les
xor
ljmp
test
add
aad
push
pop
inc
fcomps
mov
push
push
sbb
retw
loopne
or
add
xor
mov
xchg
pusha
adcb
pushf
and
call
or
repnz
sub
inc
push
add
mov
mov
dec
mov
jmp
mov
add
cwtl
cmp
inc
rol
mov
xchg
test
stos
and
enter
es
add
or
cmp
adc
nop
mov
add
cwtl
and
xchg
xor
or
les
loope
aad
push
pusha
lcall
cmp
icebp
gs
orl
push
xchg
hlt
loop
lods
inc
mov
mov
pop
xchg
sub
adc
jg
mov
mov
mov
or
push
inc
and
mov
js
adc
in
or
nop
sbb
sbb
cmp
dec
add
or
dec
adc
outsb
leave
sbb
in
add
inc
out
nop
cmp
or
inc
movsb
xchg
add
enter
pop
idiv
xor
xor
cmp
or
addb
add
adcb
mov
fadds
cs
sbbb
dec
lret
hlt
and
xchg
cli
ficoms
mov
roll
sub
push
dec
or
and
jo
jb
clc
cmpsb
adc
and
mov
add
popa
add
test
adc
push
push
jb
xor
inc
inc
or
sbb
add
call
adc
xor
je
lea
out
cltd
inc
push
pop
cmc
add
orb
ret
dec
ljmp
cwtl
mov
lods
lock
jo
add
xchg
push
or
inc
push
lock
adc
pop
mov
adcl
dec
lods
outsb
lret
xchg
push
lcall
adc
pusha
pop
pop
xor
rclb
jb
ret
ds
sbb
push
bound
add
loop
ret
pop
xchg
push
add
and
inc
inc
or
push
test
pusha
add
inc
shl
in
dec
fdivr
mov
shrb
push
pop
or
push
push
mov
jo
add
pop
sbb
cmp
hlt
int3
aam
sbb
cwtl
ret
or
fdivl
push
pop
mov
push
sub
adcl
in
cwtl
sbb
bound
mov
enter
mov
xor
push
dec
push
loopne
sbb
and
sbb
loop
call
dec
pusha
or
addb
and
xor
subb
aam
mov
jne
lods
add
jo
adc
nop
push
and
add
daa
in
fsubrs
jbe
add
lea
fs
push
adcl
cmp
xchg
xor
dec
and
es
mov
jnp
xchg
jns
fdivrs
cmp
xchg
jb
dec
sub
in
add
and
addb
xchg
in
add
insl
inc
mov
push
pusha
and
out
push
cli
mov
inc
xchg
gs
ss
cmpsb
mov
dec
sbb
sbb
jns
test
and
cltd
mov
xor
push
inc
ljmp
pop
sbb
sub
mov
xchg
or
jbe
ds
ret
inc
mov
clc
sub
roll
inc
push
ljmp
fsts
scas
cld
enter
push
jp
fs
mov
and
shlb
sbb
adc
test
mov
mov
rcr
sub
mov
cwtl
test
andb
dec
push
and
negb
xchg
mov
xchg
inc
sub
lret
push
sbb
xor
lods
xor
fcompl
push
int3
push
xchg
adcl
adc
je
fs
xor
mov
ret
and
rcll
les
or
mov
enter
dec
scas
xchg
push
fadd
adcb
out
cmpsb
or
les
xor
add
call
test
aaa
movsb
xor
adc
push
push
add
fsubrl
ljmp
sbb
sub
xchg
faddl
and
inc
in
jne
shll
mov
sbb
movsb
ds
or
push
cwtl
enter
push
data16
mov
int3
hlt
cmp
xor
and
aam
xor
scas
inc
test
adc
gs
jb
inc
jl
inc
test
xor
fsubrs
add
add
ds
mov
shlb
mov
mov
pusha
gs
pop
in
push
or
sub
es
mov
and
xchg
dec
dec
insb
mov
sahf
adc
xor
cltd
pushw
or
sbb
and
inc
sbbl
xchg
fbstp
dec
inc
inc
hlt
mov
add
inc
sub
sbb
inc
je
lret
aad
pusha
or
cmp
int3
inc
test
cld
pusha
and
mov
xchg
jne
les
imul
push
lea
push
mov
add
faddl
int3
dec
gs
sbb
ljmp
lock
add
inc
js
mov
cli
jno
mov
inc
fisubrs
and
cltd
dec
sub
adc
test
push
fmull
add
push
mov
sar
lcall
jb
fs
es
pop
push
sbb
mov
xor
loop
xor
mov
enter
xor
xor
xor
xor
dec
not
andl
es
jb
xor
sub
inc
and
pop
call
adc
sbb
adc
ret
and
or
xor
xchg
xor
lcall
enter
andb
jae
adc
sbb
cs
faddl
jle
inc
add
ret
call
or
add
xchg
and
add
pop
xchg
rcr
es
xor
ds
or
add
mov
shll
sbb
subb
andb
adc
pusha
jne
add
loop,pt
mov
push
dec
test
jle
gs
adc
cltd
rorb
push
ret
xchg
inc
sub
pop
pop
mov
icebp
adc
add
or
mov
rorb
sub
lea
mov
inc
mov
pusha
dec
inc
pushf
xchg
adc
xchg
mul
bound
sub
es
loop
mov
loop
xchg
into
cltd
sarb
fs
loop
mov
xchg
scas
repnz
test
add
in
jp
outsb
or
test
inc
mov
jns
push
sbb
or
mov
subb
cltd
pusha
mov
mov
repnz
or
push
lock
inc
mov
sub
aam
fdivrl
or
or
or
sbb
add
push
inc
sub
scas
pop
in
es
jle
clc
mov
pop
mov
movb
ds
mov
xchg
dec
fs
mov
pop
js
cmp
mov
sbbb
add
test
cmpsb
pop
mov
push
cmp
aam
inc
call
in
inc
push
push
jmp
xchg
fmul
or
xor
xor
cld
shlb
test
cltd
cmp
int3
movsl
push
mov
outsb
xor
pop
sub
gs
dec
clc
cli
and
test
jo
sbb
or
add
jo
cmpsb
add
or
fcoms
lock
imul
insb
pop
push
lret
data16
sbb
push
fiaddl
add
in
nop
leave
push
xchg
xor
xor
sub
mov
cmpb
inc
das
xor
push
dec
mov
ret
les
push
fwait
loop,pt
rorb
dec
push
mov
mov
loop
mov
cmp
call
fldt
and
cmp
insl
int3
push
sub
and
xchg
pop
loope
add
out
out
cmc
movb
insb
add
int3
scas
ret
push
xchg
jle
or
lcall
pop
out
cmp
fbstp
xorl
inc
loopne
imul
mov
or
inc
push
cld
and
xor
push
adc
xor
scas
push
xchg
nop
arpl
ds
mov
mov
ds
in
sub
or
movsb
loopne
or
jb
push
inc
and
loopne
sbb
js
push
or
add
mov
rcll
dec
js
push
jb
inc
add
test
push
jb
dec
push
push
aad
movhps
repz
testl
cmpsl
add
lcall
roll
cmc
mov
test
push
stos
inc
and
cmp
add
adc
movsl
addb
sub
adc
lret
and
dec
add
cwtl
out
push
jo
mov
jb
and
mov
adc
rclb
mov
mov
add
jl
cld
add
push
xchg
in
dec
into
cmp
mov
adc
jns
test
mov
fimuls
fs
insl
sbb
jbe
sbb
test
mov
cld
aam
adc
push
int3
jp
mov
les
add
adcb
push
inc
cli
cli
aam
or
xchg
mov
imul
mov
cmp
or
ds
mov
dec
dec
stos
add
or
ret
sub
inc
mov
mov
and
adc
in
or
insb
push
push
fs
mov
cmpsl
xor
cmp
push
out
ds
mov
js
and
mov
inc
mov
pushf
arpl
fmull
int3
push
push
fadd
push
stos
imul
jl
rclb
xchg
stos
cs
movsb
imul
sub
add
xchg
cltd
push
mov
dec
dec
jne
arpl
adc
enter
adc
mov
add
test
and
add
je
fs
les
outsb
mov
mov
mov
in
xchg
pop
orl
cwtl
lock
dec
adc
aam
cltd
add
out
sbb
push
test
stos
mov
or
or
inc
push
adc
dec
dec
sub
mov
push
test
scas
push
sarb
fdivp
test
inc
pusha
xor
mov
int3
inc
cwtl
pusha
add
adc
andl
pusha
mov
rorb
fiaddl
mov
add
push
in
into
or
dec
movsb
test
push
xor
mov
mov
lods
and
ljmp
cltd
fcoml
mov
aam
add
data16
or
inc
sub
xor
mov
es
pusha
xor
pop
sahf
xchg
test
xor
sub
xor
xchg
cwtl
pop
mov
aaa
mov
addl
pop
or
push
ljmp
out
jns
jns,pt
leave
jne
ds
add
nop
dec
jo
adc
adc
add
dec
inc
or
or
sub
clc
xor
or
fs
in
mov
xchg
push
xchg
lret
sbb
js
lcall
popa
jnp
dec
rorb
in
jp
roll
adc
ljmp
mov
ror
or
sub
sbb
loopne
insl
mov
les
sub
push
shlb
dec
outsb
clc
es
or
lods
pop
in
and
lcall
outsb
ret
push
add
xchg
fs
dec
cmpsb
insl
je
test
lcall
ret
pusha
mov
or
sbb
add
lods
and
add
jle
mov
dec
add
cmpsl
pop
nop
and
sbbl
call
cmpsb
insb
adcb
sbb
jl
test
sub
and
or
test
int
mov
inc
outsb
push
and
adcb
negb
popa
mov
loop
push
jmp
loope
into
mov
int
push
sahf
je
jne
adc
out
sbb
push
xor
orb
adc
dec
and
mov
rcrb
sub
xchg
cld
and
add
and
aam
nop
fldcw
pop
test
adc
or
jo
or
add
add
ret
into
cs
cmpsb
sbbb
sbb
adc
movsb
sbb
mov
orl
loop
out
adcb
xor
shlb
or
cmp
fcomp
inc
sbbl
add
shrb
outsb
mov
mov
divb
out
loop
es
sbb
ljmp
pop
dec
jo
xchg
sbb
push
cmpb
jne
sbb
lret
or
test
cwtl
jb
xor
addb
loop
scas
xchg
cld
adcb
add
add
xchg
scas
adc
stos
sbb
adc
imul
inc
dec
test
test
push
sbbb
push
cmp
sbb
lcall
lods
aad
loop
xchg
cltd
test
sbb
int3
xchg
xor
in
sbb
pop
ss
sbb
sbb
loopne
xorl
enter
call
jne
add
add
xchg
testb
cld
loop
mov
push
pop
push
and
ret
and
xchg
nop
lods
xchg
in
imul
push
orl
pop
lods
adc
int3
orl
inc
mov
lcall
cmp
jb
roll
addb
into
or
pusha
jo
xor
in
or
test
call
call
aam
enter
cmpsl
dec
adc
lock
call
push
stos
ja
mov
movsb
insb
push
mov
add
dec
lret
loop
test
leave
loope
mov
mov
push
cmpsb
pop
pop
and
int3
push
mov
xchg
mov
addb
mov
gs
push
out
sbb
push
cld
push
fstl
sub
lcall
xchg
mov
inc
sub
scas
sbb
adc
inc
imul
push
and
mov
dec
test
xchg
lcall
mov
movsb
pusha
add
test
xor
adc
inc
cmp
or
add
jl
stos
rolb
fs
cltd
fs
mov
and
outsb
xchg
xchg
subl
pusha
xchg
mov
fdivrs
adc
mov
mov
xorl
xchg
lret
call
sub
add
mov
push
add
stos
or
inc
fdivl
insb
or
jne
add
test
xor
mov
sub
adc
push
push
in
adcb
dec
mov
jne
ljmp
stos
lcall
out
cmc
push
jecxz
nop
ss
or
cwtl
or
cwtl
adc
or
lret
icebp
into
xorl
pop
cmp
jno
dec
jbe
ds
in
shlb
xchg
out
stos
sub
call
dec
inc
cmp
pushf
cmp
popa
sbb
out
dec
test
mov
jb
add
pop
and
enter
adc
fs
andb
les
pop
ret
dec
test
test
dec
mov
mov
push
ret
or
and
inc
in
jb
insb
nop
push
sbb
adc
mov
jo
ljmp
scas
cmpsb
xor
sbbb
xchg
xor
and
decb
addr16
cmp
or
mov
or
mov
data16
addb
and
xchg
mov
sub
cwtl
or
mov
add
inc
fdivrl
sub
xor
cltd
and
shrb
adc
sub
stos
dec
rorb
xchg
pusha
stos
dec
insb
es
xchg
shrl
cltd
idiv
lret
mov
xor
cltd
ss
jo
cltd
sub
and
popa
adc
into
sbb
jle
adc
xchg
fdivs
loopne
pushf
hlt
scas
mov
inc
fs
or
rolb
push
ss
sbb
and
dec
or
call
inc
sub
in
into
jge
jge
mov
cwtl
std
ret
mov
sub
les
cld
or
xchg
pop
xor
outsb
sbb
dec
mov
pushf
xchg
sub
inc
subl
sbb
call
dec
js
nop
or
or
cmp
popa
es
pop
mov
mov
cli
and
mov
in
pop
mov
aaa
dec
push
gs
jo
mov
insl
mov
xchg
pop
sbb
mov
into
sbb
lcall
sub
jb
add
adc
sub
mov
mov
ret
xchg
mov
xor
adc
push
nop
aam
and
adcb
push
movsl
cmp
shr
inc
fistpll
test
fisubl
loopne
push
int
xor
je
mov
xchg
xor
cmp
ret
dec
sbb
in
and
fs
test
loop
adcl
mov
add
dec
loopne
mov
dec
mov
mov
adc
pusha
inc
xchg
adc
push
js
sarb
xchg
ljmp
fadds
xorb
add
dec
cs
movsb
mov
roll
fsubrl
add
out
sub
sbb
cli
or
fcoms
loop
sub
or
push
subb
andb
mov
xchg
add
pop
addb
or
fcompl
cmp
es
cltd
jne
int3
test
rorl
pop
inc
and
pop
outsb
pop
push
push
test
push
cmpsb
mov
cmpsb
dec
inc
popa
push
push
adc
les
add
push
mov
test
sarl
out
aad
roll
mov
data16
inc
rolb
add
cmpb
inc
sub
stos
add
data16
adc
imul
dec
lock
popa
cwtl
pushf
cld
outsb
movb
mov
aam
adc
and
add
mov
test
pop
outsb
jo
xchg
dec
scas
stos
xor
or
push
lods
xchg
imul
push
cwtl
imul
cmp
xor
push
pop
sbb
lods
cli
mov
mov
jp
ljmp
push
enter
mov
inc
cmp
pop
nop
rorl
leave
mov
pop
in
dec
sub
jbe
mov
or
push
add
pusha
or
xchg
dec
mov
mov
cltd
ret
mov
jbe
int
sbb
push
inc
mov
cli
lcall
jo
je
add
sub
ljmp
sub
jns
mov
mov
dec
adc
es
xor
push
adc
loop
mov
loope
inc
cli
cmp
adc
cmp
cs
pop
sub
imul
or
pop
aam
insl
add
inc
or
mov
ret
pop
scas
cmp
loopne
stos
popa
lcall
cmp
inc
adcb
adc
sbbl
push
sahf
je
adc
test
sub
jbe
dec
add
lods
lods
fs
xchg
ret
call
faddl
pop
xor
data16
addb
hlt
aad
cltd
cmpb
adc
test
sbb
clc
test
or
out
push
loopne
sub
in
add
les
inc
xchg
testb
or
test
inc
sub
mov
mov
enter
jp
fs
lcall
mov
dec
in
sbb
scas
sbb
mov
into
int3
dec
aad
adc
test
cmpsb
pusha
push
pop
xchg
mov
mov
push
into
dec
add
pop
push
or
fcom
adc
and
xor
add
adc
jo
adc
inc
inc
pop
lock
test
test
sub
add
push
out
pop
fs
inc
mov
sbb
cmp
add
nop
aam
or
cmp
in
call
sub
insl
lcall
adc
ret
xchg
movsb
pop
adc
add
shlb
sub
loop
mov
pusha
or
addb
data16
pop
imul
jle
xor
fs
cs
sbb
mov
insl
cmpsb
push
adc
out
inc
push
push
sub
and
cmc
je
es
add
dec
cmpsb
dec
outsb
lcall
gs
add
ret
cli
xchg
and
pop
scas
adc
adc
scas
js
mov
ds
sub
ds
sub
mov
sbb
xchg
loope
mov
js
test
int3
dec
add
and
xchg
xor
into
rcrb
rolb
adc
lret
inc
repnz
es
mov
int3
xchg
inc
or
xchg
mov
mov
js
cmp
mov
lcall
add
xor
mov
dec
inc
int3
cmp
sub
sub
or
push
mov
push
dec
add
xor
push
push
lcall
mov
add
jp
push
into
scas
mov
insb
and
xchg
dec
and
shrl
xchg
mov
jmp
mul
push
add
add
sub
dec
xor
outsl
sub
sub
push
push
inc
incl
inc
sbb
dec
mov
inc
sbb
adc
xor
adc
incb
negb
iret
rolb
push
add
mov
arpl
adcb
dec
lahf
and
test
xchg
aam
pushf
push
push
adc
dec
int3
and
xor
dec
xchg
push
dec
idivl
lcall
orb
js,pt
shrl
addb
and
xchg
add
pusha
sub
cltd
push
push
inc
cld
xchg
mov
stos
sub
cs
loop
cmp
js
fisttps
push
enter
mov
mov
xchg
gs
cwtl
subl
aam
scas
test
push
cltd
lcall
mov
leave
and
mov
mov
lock
pop
add
jns
xor
insl
cltd
int3
cltd
mov
test
push
push
pop
data16
jle
gs
push
add
push
mov
imul
les
mov
inc
dec
or
out
loopne
xor
dec
fsubrs
es
sarl
loopne
and
mov
xchg
lret
cli
xchg
dec
addb
cmc
mov
push
jle,pt
jp
popf
sbb
mov
xor
add
dec
xor
push
and
out
dec
mov
sbb
sbb
mov
mov
add
cmp
pusha
xchg
add
and
cltd
cmp
test
add
or
and
jb
xor
es
add
in
mov
push
jb
sbb
sbb
push
push
loop
loope
ss
fs
push
es
mov
sub
xor
je
add
xor
pop
xor
insl
cmpsb
pop
cmp
sbb
add
push
xchg
xorl
adc
mov
insl
mov
mov
rclb
pushf
xor
data16
or
in
cwtl
mov
in
pusha
cmpsb
sbb
cltd
push
or
scas
addb
adc
xor
pop
push
xchg
loop
sub
int3
mov
add
jbe
clc
xor
inc
faddl
pushf
adcb
inc
pusha
in
push
inc
loop
stos
cmp
sub
subl
push
dec
xchg
push
inc
or
xchg
sbb
sub
test
pushf
and
orl
jno
shrb
outsb
int3
mov
cmc
cli
sub
push
xchg
pop
push
adc
sbb
bound
add
inc
pop
in
lods
inc
mov
push
repnz
fisubs
data16
roll
and
sub
or
mov
add
insl
rorb
cwtl
scas
or
inc
add
lods
and
xchg
xor
push
sbb
inc
xor
mov
cltd
cs
and
inc
adc
adc
rolb
sub
xor
lret
xchg
shlb
or
ret
dec
enter
jae
and
cld
or
je
dec
pusha
cmp
mov
push
dec
xor
add
and
in
mov
pop
xchg
add
and
cltd
push
add
xor
sbbb
and
sbb
pop
xor
dec
push
push
mov
out
rol
jle
shll
dec
mov
sbb
mov
xor
add
dec
or
add
dec
mov
lret
popa
test
in
dec
add
add
cltd
dec
xchg
dec
mov
dec
inc
inc
sbb
or
cltd
add
call
rcrb
js
push
in
test
add
xchg
xor
fs
mov
sbb
mov
out
pushf
xor
cmp
movsb
or
inc
inc
pop
int3
lcall
int3
adc
jge
andl
xchg
and
movsb
jl
fs
out
inc
dec
xor
dec
adc
xchg
or
xchg
add
fcoml
push
adc
dec
test
data16
push
push
push
cld
cmp
xor
pop
adc
pop
sub
imul
sbb
faddl
push
rorl
add
xchg
sub
dec
faddp
cld
insb
cltd
inc
add
adc
mov
sub
dec
sub
sbb
adc
scas
xchg
cli
cltd
xorb
and
jb
adc
xor
test
rcrb
call
mov
inc
push
pusha
mov
inc
xchg
mov
xchg
mov
dec
loope
inc
je
pop
int3
sbbb
adcl
aad
mov
inc
sub
loopne
fs
jbe
imul
loope
int3
adcb
push
cmpsb
push
es
add
dec
sbb
mov
jb
loope
sbb
dec
jbe
mov
sub
lds
mov
mov
addl
pop
pop
cs
pusha
add
decb
test
inc
inc
mov
mov
and
fcoms
pop
push
inc
cli
andb
or
dec
jb
imul
test
dec
push
shlb
daa
int3
mov
shrb
test
mov
adcb
aad
test
inc
pusha
cmc
push
push
shrb
aad
ss
scas
add
rolb
enter
mov
adc
mov
xor
push
loopne
or
inc
cld
testb
add
sbb
sbb
icebp
mov
inc
mov
add
push
cmp
loopne
push
adc
mov
inc
test
mov
adc
sub
enter
je
add
mov
data16
sub
sub
or
mov
xor
cmp
xor
wbinvd
add
xchg
or
ds
in
sbb
cmp
sbb
add
adc
cld
xchg
jo
sub
fmull
cmpsb
jae
mov
movsb
and
mov
xchg
es
out
js
movsb
xor
ss
mov
out
push
clc
xor
rorl
dec
fdivs
gs
cwtl
pushf
mov
scas
dec
push
mov
fcomps
rolb
dec
movsl
adc
test
add
mov
test
or
push
xchg
xchg
insb
jl
andb
gs
rcl
lock
lods
push
mov
enter
mov
lods
add
xchg
xchg
je
dec
test
sub
pusha
adc
aam
sahf
test
cltd
add
loop
pop
cmpsb
sbb
hlt
rorb
adc
enter
push
scas
adc
xchg
and
ds
imul
loopne
mov
push
lods
mov
inc
add
test
loopne
sub
loopne
inc
aad
call
xchg
inc
js
add
push
and
push
out
nop
cli
xor
loopne
xor
pop
mov
xor
or
inc
popa
sbb
sbb
sarb
push
or
out
inc
cmp
add
fmull
mov
and
adc
dec
xor
faddl
xor
cltd
pop
popa
es
or
js
mov
add
enter
ret
xor
dec
xchg
dec
inc
and
or
and
lock
push
andb
adc
adc
dec
and
and
adc
insb
jo
and
je
mov
add
je
dec
insb
sub
mov
jae
fs
hlt
mov
les
adc
scas
mov
pop
clc
adc
pop
test
es
add
adc
mov
shrl
xchg
dec
gs
jle
jns
xor
add
add
push
popa
or
adc
lcall
in
lret
and
inc
jne
fmuls
insb
push
push
mov
pusha
xor
push
loop
mov
pop
or
push
xchg
mov
push
stos
pop
es
js
loopne
loopne
dec
xor
pop
es
shlb
aaa
and
dec
push
add
sbb
or
inc
fisubl
add
adc
clc
mov
inc
lret
xor
jecxz
sbb
roll
dec
xchg
mov
sahf
or
les
in
orb
adc
cli
or
or
and
ret
scas
and
xor
cs
shrb
lcall
data16
jp
sub
popl
shrb
int3
movsb
dec
nop
mov
xchg
rolb
sbbb
or
mov
imul
mov
movsl
push
into
jbe
or
addl
xabort
test
push
daa
loope
sub
mov
add
and
fs
pop
adc
push
adc
dec
push
fcmovbe
fsubs
pop
adc
sub
adc
aam
and
ss
push
cli
pop
or
and
enter
xor
stos
hlt
mov
sbb
inc
cli
gs
adc
lcall
pusha
lret
xor
and
push
and
ljmp
push
sub
lock
dec
push
adc
sbb
test
and
mov
adc
xor
add
cmp
data16
fistl
xchg
shlb
push
loop
imul
push
mov
inc
dec
and
add
in
lret
test
sub
shl
sub
cmc
sub
adc
or
add
cmc
inc
mov
aam
xor
lret
mov
nop
fidivrl
sbb
dec
shlb
insl
aam
into
mov
sub
pop
dec
mov
mov
cwtl
fwait
shlb
gs
xchg
mov
hlt
mov
xchg
jb
add
mov
ljmp
cmp
cli
or
test
push
pop
int3
and
popa
mov
mov
lds
inc
enter
cmpsb
lcall
es
adc
push
or
clc
cld
add
adc
sbb
int3
push
aad
add
daa
stos
xor
mov
addl
or
pop
adc
and
int3
loop
dec
mov
mov
loope
mov
outsb
inc
cs
data16
loop
or
inc
test
out
cmp
pop
cld
xchg
divb
pop
sbbl
insl
fcoms
or
push
test
xor
inc
mov
lods
xchg
loopne
dec
movsb
push
subb
xchg
dec
push
add
or
jae,pn
mov
mov
dec
inc
clc
insl
or
xchg
test
cmp
push
aam
cltd
dec
pop
loop
add
test
jle
sahf
insb
scas
js
jo
sbb
mov
inc
int3
push
add
add
xor
xchg
xchg
cs
ret
add
fisubrs
test
dec
push
aam
loopne
sbb
lods
inc
and
scas
mov
push
xchg
add
cmp
aad
jb
aam
jbe
bound
in
push
sbb
inc
addb
stos
imul
mov
sub
xchg
sarb
jb
add
mov
clc
push
sub
mov
or
push
adc
mov
cs
push
xchg
add
repnz
push
add
mov
inc
enter
in
sbb
ret
sbb
or
mov
es
outsb
mov
cwtl
rclb
push
lcall
ss
pushf
xchg
dec
push
push
jo
dec
cmp
movsb
push
jo
sub
jp
shlb
xchg
sbb
push
xchg
inc
dec
sahf
sbb
add
ficoml
sahf
int3
dec
lock
pop
jle
lret
pop
pop
sub
add
push
jo
add
test
adc
sbb
movsl
movsb
push
cs
sbb
push
adc
gs
and
push
mov
adc
or
enter
ljmp
xor
movb
push
push
je
cmp
and
fs
mov
sbb
loop
dec
ficoml
xchg
push
cmp
sahf
es
pusha
sbb
rorb
je
add
es
inc
bound
mov
push
cs
cwtl
or
push
bound
fisttps
adc
inc
pusha
cli
and
push
cmpsb
add
les
or
lock
inc
xchg
jb
insb
es
ret
mov
rclb
sub
lods
test
cmp
xchg
enter
add
sub
pop
xor
or
mov
cli
jle
add
sbb
add
dec
inc
movsl
add
cli
cltd
push
mov
sbb
fisubl
leave
add
jo
sbb
cmp
push
lods
sub
bound
add
popa
out
push
movsb
repnz
inc
leave
mov
sub
pop
or
inc
mov
inc
leave
gs
mov
push
cmp
rolb
xor
gs
add
hlt
test
xchg
rolb
cmp
add
sub
loopne
push
or
inc
xchg
andb
add
test
xor
mov
xor
inc
sbb
cld
cli
test
test
out
popa
cwtl
sbb
dec
fs
in
and
or
add
pop
in
dec
outsb
mov
imul
push
cli
lcall
fsubrs
repnz
mov
loopne
cmp
mov
add
mov
fiaddl
out
dec
pop
add
add
adc
push
xchg
or
adc
add
insb
jnp
ss
fcoms
sbb
mov
in
arpl
lret
push
mov
scas
sahf
sub
clc
inc
or
inc
mov
push
push
roll
adc
jmp
push
sbb
mov
and
ljmp
inc
sbb
pop
call
push
push
mov
jo
push
mov
or
in
add
shl
aam
push
push
std
pop
shlb
cmpsb
or
movb
add
adc
cmp
sub
call
aam
pushf
push
xchg
rolb
inc
andl
inc
je
aad
mov
push
mov
sbb
mov
jle
xchg
ret
mov
pop
into
add
cmc
stos
mov
mov
xchg
push
xchg
test
ds
mov
dec
invd
outsb
push
jo
mov
or
jp
aaa
aad
mov
and
add
pushf
lret
dec
ret
xchg
adc
fs
je
adc
pusha
jns
push
dec
add
addb
jb
push
cli
scas
cmp
rolb
repnz
sub
cmp
mov
add
scas
ret
or
loop
add
mov
aam
aad
cmpsb
inc
add
outsb
inc
lret
loope
sbb
lods
cmp
push
push
or
cmpsb
mov
aad
jl
loop
xor
cli
sbb
jbe
cmp
push
inc
pop
ret
in
data16
int3
and
sub
add
stos
sbb
add
adc
lcall
dec
mov
adc
mov
sbb
jne
mov
pop
dec
mov
mov
adc
mov
cs
dec
sub
or
xor
xchg
es
aam
js
je
adcb
jp
cltd
fwait
sub
xchg
cmp
popa
adc
shrb
cmp
cmc
imul
jne
ret
or
subb
shlb
xor
jns
mov
imul
or
sub
lcall
les
stos
cmp
add
mov
into
lcall
mov
shlb
imul
xor
push
insl
and
pusha
adc
push
inc
sbb
addb
xor
fdivr
fbld
mov
push
or
jbe
sbbb
push
cwtl
cmpl
adc
sbb
sbb
xchg
pusha
es
ss
xchg
lret
or
hlt
xchg
push
xor
lret
cld
in
loope
and
inc
out
push
rcrl
lcall
mov
xchg
hlt
gs
xchg
xor
clc
xchg
cs
mov
push
dec
mov
mov
fisubs
mov
or
inc
bound
or
nop
adcl
test
nop
sub
jb
xor
xor
aam
push
mov
inc
es
mov
cli
push
cmpsb
les
or
and
aaa
mov
rolb
lret
xchg
lods
lds
and
add
mov
push
aad
dec
setno
stos
fsqrt
push
cli
dec
test
lea
xchg
ret
inc
scas
jp
add
stos
addl
fdivl
mov
imul
xchg
or
and
pop
sbb
sub
and
or
sbb
and
fs
xor
dec
jbe
cmp
flds
xchg
fs
xor
sbb
imul
aam
add
test
rolb
xor
dec
push
mov
idivb
dec
es
inc
in
adc
add
fcoml
xor
cmp
rclb
cs
test
stos
test
popf
and
loope
sbb
mov
mov
add
sub
repnz
ds
push
xchg
xor
mov
test
test
push
into
xchg
shlb
mov
mov
ss
addb
cmp
scas
push
mov
adcb
icebp
dec
jns
ret
mov
inc
in
lcall
xchg
rolb
jl
jne
dec
xor
dec
push
pop
scas
ljmp
add
sub
outsb
add
cmpb
xchg
push
jb
pop
sbb
inc
test
insl
xchg
insb
and
mov
adc
dec
inc
lret
and
sbb
ljmp
push
sub
pusha
mov
pusha
cltd
lret
test
xchg
xchg
xor
adc
add
movb
gs
pop
lods
xor
cmp
ret
mov
dec
fs
add
sub
clc
aad
push
stos
xchg
ficomps
enter
loopne
adc
mov
or
nop
loop
loop
into
xchg
ret
xchg
push
add
bound
sahf
inc
pop
das
sbbl
notb
fwait
add
mov
addb
mov
decb
inc
outsb
or
xchg
rolb
or
daa
add
aam
mov
inc
and
mov
xchg
and
es
adc
add
mov
movsb
mov
push
inc
xor
inc
lcall
mov
je
loope
inc
push
add
mov
pusha
pusha
or
je
dec
push
cltd
dec
ret
fdivs
nop
mov
jmp
mov
movsb
xchg
push
xchg
mov
and
or
dec
test
push
xor
lcall
inc
or
mov
adc
aam
decl
xchg
pop
sub
cmp
popa
push
sbb
add
add
mov
sbb
add
pop
out
sti
fildl
push
sub
pushl
loopne
dec
pop
pop
imul
adc
sbb
mov
fimuls
testl
mov
divb
xchg
fisubrl
add
push
mov
cmpsb
xchg
add
sbb
scas
sbb
cmp
fs
inc
xor
cltd
insb
jne
mov
and
and
test
dec
dec
outsb
xor
push
push
in
jns
into
orb
push
or
jl
sbb
test
sbb
xor
shlb
or
scas
divb
hlt
in
push
pop
push
nop
bound
mov
mov
rcrb
test
sub
test
or
pop
outsb
pop
fcoms
lock
or
and
xchg
pop
xor
jb
pop
daa
xchg
cld
jne
cmp
lcall
or
or
add
jbe
in
add
mov
ds
lods
cmc
mov
or
dec
sbb
sbbb
xchg
push
pusha
hlt
inc
ljmp
insl
mov
mov
adc
xor
lock
mov
les
mov
cwtl
dec
xchg
mov
xor
mov
faddl
shlb
mov
fs
out
add
faddl
xchg
icebp
gs
scas
stos
jl
and
or
cwtl
nop
adc
es
jo
or
inc
lock
ljmp
lcall
pop
pop
sbb
mov
js
or
insb
imul
outsb
test
mov
cwtl
lretw
push
es
mov
adcb
sbb
bound
inc
dec
loope
fiaddl
jo
insb
fidivrl
mov
ret
cmpsb
cmp
pop
push
pop
mov
push
push
cmc
les
pusha
clc
addl
xchg
dec
add
pushf
cwtl
jmp
or
les
cli
xchg
add
sub
test
push
pusha
add
mov
jo
pusha
jo
add
mov
inc
xor
dec
or
adc
sub
pushf
mov
cmpl
push
ret
inc
cs
add
pusha
ss
cmpsb
ds
sub
les
sub
lcall
and
xchg
push
ffree
jecxz
lcall
or
inc
dec
rorb
push
jmp
aad
fs
jo
or
add
into
bound
adc
mov
sbb
sbb
inc
pusha
push
scas
add
sbb
push
add
testb
inc
push
je
or
aas
ret
mov
mov
fidivrl
mov
mov
push
fisttpll
clc
sub
inc
add
push
fldl
ret
lods
add
inc
adc
shll
and
orb
cld
inc
mov
xorb
inc
push
pop
pop
adc
subb
dec
sbb
adc
push
mov
adc
cltd
in
jl
and
rol
into
mov
sbbb
lods
pop
inc
inc
dec
sbb
mov
andb
push
mov
sbb
ret
fisubrs
and
lock
add
lcall
push
enter
jae
xor
lret
rcrb
pushf
push
aam
xor
gs
cltd
dec
loop
push
loop
add
xchg
fs
push
inc
push
xorb
xor
cltd
scas
je
aam
call
stos
add
sbb
clc
push
cmc
clc
cltd
mov
jo
fimull
sub
adc
xchg
add
fisubs
inc
dec
mov
add
add
add
jo
or
repnz
insl
xchg
add
push
pop
or
inc
jb
mov
bound
les
jo
push
or
andb
and
clc
ret
aam
push
fs
mov
imul
mov
inc
push
lcall
mov
push
mov
or
pop
cmp
adc
mov
pop
adc
shrb
add
or
pusha
push
xchg
push
xlat
push
cmpsb
mov
loopne
cmp
mov
adc
and
sub
fisubrs
adcl
aam
aad
xchg
jge
int3
xor
fsubrl
popa
sbb
mov
add
scas
add
rcrl
cmp
or
add
mov
mov
mov
ret
push
sub
cmp
or
aaa
xor
and
push
pop
and
dec
add
mov
jl
dec
ret
adc
pusha
and
es
ds
push
imul
mov
adc
push
dec
xor
cmpsb
xor
adc
xor
ds
loopne
cmp
adc
pop
test
sub
into
push
lcall
xchg
add
aad
sub
sub
xor
es
pusha
inc
je
sub
adc
aad
or
scas
rolb
push
push
push
add
fmul
jo
pop
jo
mov
imulb
add
test
mov
cmp
mov
decb
cltd
mov
jno
cltd
fcoml
ds
imul
cmpsb
in
mov
insl
inc
sub
sbb
xchg
enter
push
inc
mov
stos
mov
jne
dec
adc
out
inc
fsubl
mov
xor
mov
movsl
hlt
nop
in
loopne
mov
int3
jne
sub
subb
mov
or
cwtl
add
mov
ds
or
das
or
pop
inc
loop
add
movsb
sbb
les
es
cwtl
add
cmpsb
ret
or
sbb
or
add
push
jb
push
sbb
add
lret
stos
sahf
xor
or
sbb
mov
and
dec
sub
and
jb
xor
outsb
xor
test
movsb
mov
mov
dec
cs
push
cmpsb
mov
negb
pop
pop
sbb
push
adc
mov
add
js
jne
bound
mov
dec
cmpsb
scas
xor
xor
mov
incb
les
sub
test
ret
lock
cmc
mov
cmp
adc
cmp
adc
rorl
fsubl
mov
int3
loope
mov
sbb
xchg
dec
jb
xchg
stos
adc
mov
jns
in
ret
jne
out
mov
hlt
inc
cli
sub
test
int3
in
adc
add
or
and
cmp
mov
lret
fimuls
test
inc
lret
leave
gs
lret
mov
inc
shlb
cld
test
les
sahf
int
and
ljmp
dec
out
pop
jl
insb
or
or
es
js
add
xor
pop
ret
and
je
add
add
and
adc
adc
sbb
aam
sub
pusha
jne
xchg
lret
push
or
sub
shlb
inc
movsb
loope
inc
inc
jle
insl
test
pop
cmp
jb
cmpsb
mov
and
or
inc
bound
pusha
add
sbb
enter
adc
repnz
pusha
cwtl
outsb
fs
mov
dec
add
insb
and
push
mov
add
pop
dec
adc
shll
xor
cmp
call
stos
out
and
xchg
lret
hlt
fiadds
mov
dec
push
cltd
loop
pop
les
mov
ret
and
add
xor
cmpsb
outsb
push
and
sub
xor
add
adc
mov
pusha
or
movb
and
imul
sub
and
mov
mov
cmp
adc
add
nop
add
lcall
pop
mov
std
mov
into
adc
add
sub
movl
adc
es
sarl
js
lods
mov
xchg
adc
push
push
push
es
inc
inc
popa
adc
andb
xchg
push
in
test
push
xchg
movb
movsl
and
xchg
sub
push
dec
js
jle
adc
xchg
ret
inc
pop
subb
xor
and
dec
cmp
sbb
jnp
pop
mov
inc
mov
js
sub
push
inc
sbb
decb
push
sbb
adc
into
dec
and
mov
scas
or
xor
ss
lret
inc
cmpb
ds
sbb
dec
jb
or
xor
scas
dec
mov
je
xor
sbb
hlt
shrb
test
sbb
decb
xor
and
ss
push
adc
add
ds
ret
dec
sub
enter
mov
into
mov
push
shrb
movsl
popa
mov
jl
bound
cli
lods
fcmovu
test
dec
fs
mov
push
addb
shlb
int3
inc
cmp
addb
jle
ljmp
pop
jo
adcl
push
shlb
daa
add
jo
rolb
adc
enter
orl
shll
push
pop
add
cmpsl
xchg
dec
insl
or
dec
jbe
xchg
popf
lods
cmpl
loopne
pop
inc
hlt
imul
add
mov
push
push
xor
pusha
inc
jl
sub
out
push
xor
pusha
jo
sub
or
or
and
inc
mov
dec
scas
lahf
or
add
cmpsb
jb
mov
or
cli
sbb
pop
test
scas
scas
gs
xlat
dec
loope
cmp
shlb
push
mov
rolb
sub
mov
rcrb
inc
and
pop
loop
and
pop
addb
mov
sbb
push
add
cli
rcl
push
mov
push
test
add
push
jle
dec
mov
add
mov
cmp
gs
adc
add
jne
mov
pop
add
pusha
jle
add
jo
enter
nop
cwtl
lock
add
mov
push
mov
fs
imul
in
add
ret
enter
popa
push
adc
pop
int3
or
push
ret
push
add
xor
push
push
inc
jo
xchg
rorb
subb
gs
push
cltd
or
dec
adc
data16
cld
push
push
stos
jns
sahf
or
iret
mov
in
in
out
adc
sub
aam
test
outsb
ret
mov
add
mov
push
inc
or
xchg
push
or
rolb
mov
sbb
push
adc
cmp
or
xor
mov
xchg
stos
sbb
adc
xchg
ret
lcall
xorb
sub
or
lock
inc
fs
cli
push
jo
repnz
adc
imul
xor
fs
dec
lcall
sbb
jmp
add
loopne
stos
push
xchg
dec
xor
adc
aam
shlb
push
dec
rclb
mov
movsb
push
adc
je
inc
mov
lods
int3
sub
mov
xor
sub
jb
scas
loop
xor
jo
add
add
sub
aad
test
imul
mov
mov
fists
cltd
mov
in
sub
inc
jl
sub
cld
pop
sub
add
imul
and
aam
mov
add
jb
push
dec
rcll
xchg
aam
pushf
mov
sub
lcall
test
sub
mov
mov
sbb
jb
cmp
test
adc
adc
mov
mov
es
mov
lret
mov
add
pop
push
pop
push
mov
pusha
mov
sahf
movb
adc
pop
enter
or
jae
aam
mov
ret
dec
push
and
adc
push
scas
cmp
out
mov
jb
push
xchg
test
xor
mov
add
sub
pusha
push
push
xor
or
mov
add
subl
cmpsb
bound
pop
mov
mov
adc
adc
push
dec
sbb
cmpsl
lods
sbb
mov
scas
sub
mov
sbbb
and
and
xor
xchg
and
xor
add
mov
lods
stos
es
mov
lods
sbb
xchg
add
mov
ret
mov
cld
pop
push
mov
fs
adc
inc
into
or
addb
outsb
mov
mov
add
mov
add
inc
push
fdivl
sub
inc
dec
sub
push
andb
push
mull
test
les
dec
inc
adc
cltd
add
add
add
pop
pop
mov
jno
fidivs
and
push
push
push
out
lock
cmc
jg
in
lea
sti
mov
add
cs
pop
add
jne
mov
rorl
rcrb
imul
mov
push
mov
ss
pusha
push
cld
cli
cmp
and
fs
les
push
and
ljmp
ds
sub
and
jbe
cmpb
cwtl
sub
or
js
xchg
dec
in
leave
add
and
pop
sbb
loop
push
sbb
xor
pop
pop
or
xchg
mov
xchg
orb
jmp
pop
ss
hlt
xor
or
sbb
cmp
sub
and
gs
pop
loope
dec
ficoml
add
adc
jp
imul
mov
ficoml
sub
cmp
inc
add
add
les
add
sub
js
inc
cmp
xchg
and
add
mov
mov
push
mov
xor
sub
fistpll
icebp
movsb
or
cmp
or
lret
push
js
mov
and
adc
in
push
movsl
sbb
inc
sub
divb
bound
fcomps
xor
add
mov
test
cltd
sbb
call
adc
adc
rcll
add
ds
add
jp
loop
add
inc
ljmp
xchg
jo
nop
xor
sbb
ret
add
mov
sbb
add
cmp
loopne
data16
pop
xorb
js
notb
pop
add
cmp
bnd
dec
shll
or
push
test
dec
xor
nop
add
xchg
push
sub
data16
mov
add
les
dec
shrb
sub
cmp
cwtl
inc
daa
adc
xchg
es
adc
inc
jl
lods
cmc
mov
imul
sti
test
adc
clc
inc
xor
mov
add
mov
addb
inc
insb
add
shll
dec
sub
sbb
mov
inc
ret
xor
fsubs
push
fs
xchg
mov
jbe
aam
idivb
scas
adc
push
loopne
xor
ret
ret
mov
adc
sti
and
push
scas
movb
xor
sarb
es
push
add
sub
pusha
dec
ret
mov
or
sub
fnstcw
jo
into
sub
or
mov
negb
inc
sbb
or
sbb
loop
and
push
ds
xchg
data16
das
push
cli
sti
sbb
dec
loope
icebp
test
lock
and
xor
or
and
adc
lods
in
or
in
push
ret
push
sbb
cli
inc
xor
insl
inc
cmp
mov
xchg
mov
xor
cmp
adc
mov
cs
and
repnz
loope
push
sub
xchg
leave
bound
xchg
adc
xchg
shlb
cmpsb
es
add
aad
cli
xchg
add
xor
das
xchg
clc
add
or
pusha
add
adc
add
dec
rolb
and
test
lods
xchg
adc
imul
ret
stos
adcb
or
js
rcll
sub
adc
cmpsb
dec
gs
aam
lcall
int3
cmp
pop
sub
sub
dec
cwtl
addl
mov
nop
loop
movsb
mov
mov
insb
setne
or
cltd
lock
add
push
dec
add
sub
push
dec
call
aam
or
mov
ljmp
jb
fs
cmpsb
out
es
and
aam
jo
out
pusha
jl
cmpsb
push
mov
int3
or
dec
fs
ficompl
add
ret
jo
add
int3
sbb
mov
mov
sbb
push
lods
ds
stos
les
add
xchg
sbb
mov
adc
jmp
flds
cmpsb
mov
aam
xor
ds
test
lock
inc
xchg
js
sahf
orb
adc
ficompl
andl
inc
push
data16
popa
add
adc
xchg
mov
and
scas
and
adc
sub
insl
nop
sbb
ret
pusha
movsl
xchg
sbb
push
add
and
xchg
dec
hlt
and
xor
push
inc
rclb
rolb
or
inc
fmuls
pop
cmp
and
push
inc
sub
push
mov
enter
mov
es
popa
int3
pusha
add
dec
popa
xchg
push
or
movsb
movsb
or
inc
mov
loopne
fs
add
in
mov
gs
test
pushf
out
adc
add
gs
xchg
add
pop
roll
jne
mov
sbb
and
add
mov
mov
cwtl
push
es
faddp
cmp
push
in
bound
push
jne
xchg
adc
adc
mov
dec
xor
cs
popa
mov
xchg
add
mov
or
push
sbb
ljmp
je
cmp
decl
jge
in
outsl
sub
sbb
inc
xor
mov
jle
test
rcrb
adc
mov
add
sbb
or
fcoml
and
test
fidivrl
push
mov
push
inc
ret
push
loop
shll
dec
dec
and
and
je
stos
add
inc
lods
mov
subl
or
xchg
stos
pop
dec
dec
fs
sahf
rcrb
inc
and
pop
push
adc
divb
nop
sbb
mov
dec
inc
popa
lcall
mov
call
nop
jmp
add
mov
sbb
xchg
push
mov
outsb
cmp
xchg
andb
nop
inc
jp
jp
pushf
sbb
call
xchg
add
dec
jp
xor
ss
outsb
neg
orb
inc
xchg
push
pushf
movsb
sbb
mov
lcall
xor
orb
or
fs
adc
pop
sub
nop
mov
push
xchg
ds
and
xor
jne
mov
hlt
push
or
cmp
jb
push
cwtl
dec
sub
enter
and
data16
sub
shlb
xchg
inc
mov
jo
or
pushw
or
dec
out
xorl
xor
pop
and
adc
inc
int3
dec
clc
popa
push
lods
enter
orb
sbb
add
xor
shlb
shrb
jb
insl
and
andl
or
pop
xor
mov
outsb
mov
lret
sub
or
inc
stos
cwtl
shrb
movsb
ficoms
mov
test
dec
pushf
inc
bound
pusha
and
xor
or
pop
rcrl
lcall
push
jb
mov
dec
push
dec
shrb
or
add
cltd
add
sahf
mov
ret
fdivs
adc
pop
gs
dec
mov
sbb
mov
in
adc
xor
pusha
jl
push
lock
subl
fsubrl
test
push
shlb
and
sub
test
lret
mov
test
movb
adc
rclb
mov
push
or
cmpb
mov
cmp
cltd
test
adc
push
es
sub
inc
or
lock
mov
add
sbb
push
mov
or
xchg
or
jp
xchg
cltd
dec
insl
hlt
adc
pushf
inc
outsl
adc
das
push
mov
in
mov
mov
xor
jo
or
push
add
and
gs
add
jg
push
out
jge
stos
adc
and
lods
push
xchg
iret
rolb
adc
dec
jbe
jo
inc
xor
and
and
add
adc
sbb
add
dec
push
mov
test
fsubs
dec
push
sub
mov
test
push
test
inc
cltd
dec
out
inc
add
and
sub
nop
inc
inc
sub
cwtl
roll
xchg
scas
adc
hlt
pop
gs
adcb
je
mov
pop
mov
cli
cmpsb
aad
dec
and
ljmp
add
or
pop
push
hlt
pusha
mov
mov
adc
mov
mov
jb
and
jp
push
rorb
ret
adc
insb
lcall
xchg
mov
int3
adc
adc
repnz
and
inc
or
insl
test
sbb
mov
inc
dec
sbb
push
sbb
add
pop
mov
inc
inc
add
int3
mov
sbb
push
sarb
push
andl
hlt
pop
mov
push
mov
dec
mov
dec
imulb
dec
loopne
dec
outsb
in
cld
or
pop
xor
fisubrs
sub
es
int3
shl
mov
xchg
mov
repnz
inc
cwtl
sbb
mov
dec
cmp
pop
lret
es
or
dec
cli
push
stos
adc
test
pusha
test
hlt
adc
test
adc
and
test
xchg
inc
xor
lock
orb
mov
pop
aaa
les
movb
add
xchg
cmp
inc
sbb
xorb
push
adc
adc
ret
pop
adc
push
mov
sbb
jae
ss
sbb
or
lret
inc
daa
xchg
pusha
adc
es
sbbl
sbb
and
pop
jo
ljmp
aad
or
inc
inc
xchg
push
mov
in
sbb
roll
int
xchg
repnz
or
les
stos
inc
dec
xor
cmpsb
cs
adc
push
cld
addb
push
mov
or
inc
add
rcl
inc
test
dec
fisubrs
test
fcoml
push
mov
addl
insb
imul
lret
add
add
aam
cmp
xor
push
push
push
xor
cmp
add
dec
pusha
xor
sub
movsl
push
enter
inc
and
adc
lret
cmp
gs
adc
aas
and
jnp
lahf
push
mov
leave
ret
sbb
mov
mov
stc
and
adc
loop
add
or
les
mov
push
aaa
scas
and
dec
mov
and
cld
push
adc
test
ret
js
xchg
jle
mov
mov
push
es
dec
mov
outsl
and
inc
sub
data16
inc
add
iret
inc
mov
mov
sub
mov
insb
xor
sbb
mov
cmp
mov
lods
adcb
push
les
pop
sbb
lods
sub
out
rorb
rcrb
fs
subl
es
mov
ljmp
rorb
push
adc
jo
and
in
adc
cmp
data16
sbb
adc
xor
sbb
adc
nop
push
hlt
dec
cmp
test
jle
push
nop
push
cmpsl
xchg
stos
xchg
add
cmpsb
les
push
sbb
sub
sub
aam
pop
insb
sbb
addb
xor
test
sarb
loop
fwait
pop
addb
xor
es
push
push
loop
add
cmpb
xchg
dec
mov
les
add
sbb
push
add
ret
pop
cltd
mov
rorb
add
xchg
ret
add
ss
push
and
inc
xor
mov
aam
retw
adc
adc
les
mov
dec
sbb
pop
and
mov
sbb
cli
add
mov
sbb
test
and
addb
fiaddl
add
xchg
inc
pusha
cmp
dec
fdivrl
inc
mov
mov
and
add
aad
cltd
and
mov
push
sbb
pop
sbb
mov
xor
inc
push
xchg
mov
xchg
dec
in
fs
in
daa
xor
push
adc
jo,pn
dec
loope
int3
cmpb
and
add
sbb
xorl
xor
popa
sub
xor
adc
mov
xor
xchg
sub
aam
pop
sbbb
jl,pt
mov
outsb
mov
dec
call
out
mov
into
add
add
xchg
add
pusha
add
jno
and
cwtl
dec
dec
mov
mov
and
test
in
imul
push
push
out
jle
add
mov
add
xor
push
inc
or
xchg
xor
push
add
clc
gs
or
cli
out
pusha
nop
int3
mov
stos
fsubrs
pop
mov
hlt
test
cmpb
sbb
fildl
xor
xchg
push
and
je
or
pop
dec
leave
xor
fbstp
test
jo
sbb
es
mov
inc
xchg
outsb
mov
mov
and
cmpsb
adc
mov
add
xor
test
sub
fs
inc
imul
mov
mov
push
mov
insl
push
xchg
mov
xchg
or
movsb
out
cmp
mov
mov
fcomps
test
dec
decl
jae
ret
sahf
push
ret
lods
pop
cwtl
add
repz
mov
add
inc
pushl
sub
mov
and
mov
call
clc
add
add
xor
mov
fdivrs
repz
xorl
les
repz
add
jno
cltd
icebp
dec
mov
pushf
mov
mov
imul
js
push
aam
jge
xlat
sub
nop
out
out
inc
stos
repz
cld
jg
push
dec
add
add
clc
push
test
pop
aaa
sub
pop
mov
fistps
loop
sub
push
pop
sub
ret
test
cs
inc
sub
mov
dec
into
cltd
inc
xor
inc
mov
and
sub
mov
loop
es
mov
aam
or
dec
mov
cmp
jbe
xchg
ret
pushf
mov
jp
test
add
test
add
push
or
jo
cs
pop
push
rcrb
movsl
push
int3
inc
inc
mov
in
mov
test
cmp
lcall
sub
orb
repnz
adc
inc
out
sub
inc
mov
dec
inc
xlat
ret
mov
add
ret
add
lods
aaa
cs
cmp
or
sbb
int3
and
test
push
test
push
adc
mov
ficomps
jns
lret
or
and
sub
icebp
add
sbb
notb
aam
adc
pop
pop
add
dec
daa
cmpsl
add
mulb
push
cmc
scas
lock
and
ljmp
pop
sbbb
call
adc
mov
insb
in
adc
jbe
dec
mov
push
or
shrl
and
cli
xchg
push
xchg
fcoml
pusha
loop
repnz
sbb
xchg
filds
mov
sbb
mov
push
dec
aam
movsb
push
lret
insb
adc
jne
fmul
mov
pop
loop
push
loop
test
sbb
dec
jb
negb
ss
adc
xor
mov
test
scas
add
pop
xchg
sub
gs
cwtl
sbb
les
and
mov
or
inc
adc
rclb
in
inc
sub
xor
faddl
adc
bound
enter
fdivs
push
sbb
cwtl
dec
mov
mov
bound
test
and
lret
lods
dec
fsub
adc
loop
pop
xchg
dec
jb
es
dec
addl
ror
out
adcl
mov
fiadds
add
in
mov
fcomps
pop
nop
mov
push
push
xchg
jp
mov
xchg
inc
or
cmp
xchg
xor
jo
fucom
pusha
cmp
xor
push
or
movsl
and
xor
cmp
ds
push
mov
mov
int3
bound
les
fdivl
movsb
xchg
xchg
and
mov
into
pop
jb
out
add
test
adc
fdivs
insl
pushf
loop
jg
or
push
push
lods
add
clc
sahf
subl
loop
jmp
sbb
mov
ror
dec
mov
xchg
jecxz
and
add
shlb
sbb
mov
pop
lcall
inc
push
jne
cmpsb
sub
xor
add
mov
cmp
jb
push
pop
outsb
mov
adc
test
call
xchg
mov
and
push
inc
fsubs
ss
cmpsl
cmc
lods
nop
loopne
inc
inc
sub
push
outsb
inc
popa
fdivrl
or
sahf
mov
pop
mov
and
jl
adc
pop
xchg
add
sbb
or
xchg
inc
aad
jae
mov
gs
push
dec
push
stos
and
in
shlb
es
xchg
push
xor
adc
mov
sub
adc
imul
and
insl
mov
pusha
test
and
and
dec
adc
xchg
add
ljmp
mov
enter
and
and
jbe
push
adc
xor
pop
lcall
dec
cmp
adc
xchg
cmpsb
and
push
mov
cmpl
jb
push
andb
jne
cli
fidivrl
add
pop
loopne
cmp
ss
mov
inc
xchg
ret
call
movsl
push
dec
scas
repnz
push
jo
sbb
mov
pop
cmp
cmpsb
sarb
sbb
push
mov
add
pusha
fsubrl
or
shr
and
scas
pop
jp
enter
adc
or
adc
cmp
xor
stos
fsubs
sbb
mov
xchg
mov
adcb
or
push
sbb
into
mov
inc
push
fs
xchg
sbb
inc
xchg
aad
sbbl
mov
orb
xor
in
into
sbb
xor
adc
and
mov
xchg
mov
int3
sub
rorb
movsb
sbb
ficompl
push
sbb
inc
subb
movsb
in
shr
lock
inc
les
jae
in
xor
lock
adc
jle
ss
cwtl
or
andl
outsb
lret
fisubs
inc
sbb
fs
es
in
cmpb
dec
adc
hlt
je,pt
xchg
orb
xchg
and
add
mov
dec
sbb
pusha
orl
out
mov
inc
jecxz
fs
lcall
jo
pusha
xchg
pop
push
mov
out
mov
js
test
es
pop
sbb
cmpsb
aaa
mov
cmp
fistpll
jno
or
adc
inc
push
inc
add
outsl
adc
and
inc
repnz
mov
add
sub
xchg
push
push
add
sbb
push
sub
adc
jecxz
jecxz
mov
mov
adc
mov
arpl
cmpsb
xchg
push
mov
aam
leave
ret
mov
addl
push
ret
lock
call
cwtl
inc
mov
out
pop
sub
addl
dec
cmp
test
inc
inc
add
int3
jns
xor
push
add
int3
int3
lcall
jle
sbb
insb
shlb
push
nop
or
adc
xor
movsb
sub
cmp
in
dec
mov
es
add
pop
test
fs
add
inc
inc
mov
and
mov
xor
and
lods
notb
lock
stos
mov
pop
adcl
sbb
bound
dec
cmp
out
inc
xor
add
xchg
hlt
xchg
add
cmp
cwtl
rolb
xchg
bound
mov
inc
mov
test
sbb
mov
adc
jne
push
cmp
nop
flds
add
mov
aad
data16
rclb
and
inc
sub
enter
push
or
movsl
jo
aam
rolb
mov
jb
mov
dec
jb
jbe
into
add
lods
mov
pop
mov
xor
mov
hlt
dec
push
shrl
mov
scas
shlb
daa
dec
les
xchg
push
mov
cs
cli
addb
leave
sbb
mov
mov
scas
addl
sub
sub
jo
xor
push
xchg
dec
mov
js
push
push
push
and
lcall
rorl
pusha
jbe
sbb
pop
nop
add
call
inc
xchg
push
rclb
jle
insl
test
test
and
adc
nop
mov
addb
cltd
and
out
mov
pusha
push
pop
inc
mov
cmp
add
inc
or
gs
cltd
dec
inc
mov
int3
cmp
out
shrb
mov
push
ret
jns
mov
or
cmp
sbb
push
sbb
mov
jo
mov
loop
inc
adc
ss
cwtl
cmp
pusha
sub
inc
push
orl
sbb
or
hlt
inc
inc
gs
cmp
les
rolb
dec
es
mov
and
int3
fs
mov
mov
into
adc
int3
mov
loop
cmp
and
push
js
addl
daa
pusha
or
and
adc
push
fcoml
mov
and
lock
sahf
adc
push
mov
pop
xchg
pop
push
sub
dec
call
movsl
in
mov
push
or
add
xor
jecxz
push
mov
inc
jp
mov
mov
out
fsubp
insb
push
mov
inc
mov
adc
push
and
pop
inc
sub
or
or
nop
xchg
jo
pop
rol
adc
add
inc
js
cmp
popa
xlat
sub
or
aaa
mov
shlb
and
insb
addl
js
mov
pop
inc
insl
inc
inc
mov
xor
and
jo
imul
cli
mov
ljmp
push
pop
xor
add
push
loopne
cs
pop
add
jl
inc
mov
hlt
sub
hlt
ds
scas
rolb
add
adc
jne
je
cmp
xor
mov
popa
push
inc
dec
test
lcall
imul
push
inc
add
lret
push
push
adc
test
aad
xor
push
shll
test
add
jnp
mov
test
and
es
pusha
cwtl
jl
nop
subb
xor
sub
popa
xor
notb
mov
or
inc
mov
mov
movsb
dec
pusha
push
xchg
int3
jl
xor
xchg
push
pushw
and
dec
xlat
leave
mov
add
ss
cmp
arpl
mov
and
shrb
jo
push
out
mov
or
cmpsb
aam
fidivrs
pop
sbb
adc
cwtl
and
ficompl
data16
mov
sub
incb
adc
adc
rclb
inc
lods
inc
adc
imul
out
call
sub
div
mov
xchg
push
leave
fdivs
cltd
dec
jo
adc
fs
add
lret
sbb
xchg
add
add
leave
in
or
in
cwtl
adc
inc
lcall
mov
xor
mov
test
jb
les
loopne
add
mov
sahf
dec
mov
push
jle
cwtl
inc
sub
inc
or
sub
inc
inc
fcoml
orb
xchg
xor
push
cwtl
ret
fdivrl
adc
ret
pop
xchg
fimull
inc
or
inc
add
xchg
xchg
dec
pop
sub
or
adc
insl
pop
push
push
cwtl
dec
sub
ret
cwtl
jp
bound
inc
or
sbb
lret
add
test
jo
mov
cwtl
pusha
mov
test
jl,pn
add
cmp
sub
cwtl
sbb
adc
movsb
addl
cltd
mov
xor
loope
fsubr
loop
add
mov
jns
and
or
outsb
add
leave
and
sbb
push
add
shrl
loopne
cli
test
dec
fmuls
aas
in
icebp
xchg
pop
mov
dec
call
inc
mov
cmove
push
push
mov
les
sbb
ffree
push
sbb
mov
push
arpl
jp
pop
xor
jmp
add
dec
push
inc
adcl
loopne
call
push
shlb
or
test
add
test
mov
test
fs
movb
lods
add
sbb
mov
scas
sbb
inc
cmp
push
adc
loop
pusha
cmpsb
inc
xorb
adc
data16
push
and
test
or
adcb
cwtl
int3
rcrb
xor
dec
adc
and
or
lds
adc
and
enter
push
and
ljmp
or
arpl
jle
mov
cwtl
or
hlt
test
adc
or
sub
orb
call
movsb
jp
gs
cs
rclb
mov
hlt
es
cmp
lcall
dec
idiv
adc
adc
and
add
mov
adc
or
addl
xchg
scas
or
sbb
jmp
gs
dec
mov
adc
sbb
add
fidivs
xor
inc
mov
mov
pop
xchg
movsb
add
push
or
repnz
cltd
test
loope
ret
pusha
sbb
pop
int3
and
fldt
push
add
adc
jo
push
xchg
neg
mov
adc
fs
inc
add
clc
jp
mov
xor
into
mov
test
pop
add
test
mov
add
mov
loopne
jne
dec
xor
cltd
mov
cltd
and
inc
pop
cmpsb
mov
mov
add
rcrl
pop
leave
ficomps
adc
pop
rolb
and
jle
test
pop
or
mov
test
cltd
adcb
popf
xchg
and
filds
les
out
addb
mov
test
mov
or
fmuls
or
sbb
lcall
add
xor
jne
into
ret
test
rolb
divb
cmpsl
fs
jl
int
sub
mov
add
insb
sub
in
push
cmc
insl
inc
fidivl
push
adc
jp
sbbb
sub
sbb
xor
xchg
mov
xchg
je
cltd
outsb
adc
pop
xor
fimuls
and
mov
cmp
cwtl
cwtl
aad
and
add
and
sbb
jne
gs
dec
mov
add
in
call
or
pop
pop
sub
int3
es
xchg
leave
hlt
xor
pushf
xchg
xor
out
mov
or
push
fstl
pop
fidivrl
jno
jbe
mov
jecxz
sub
inc
push
sahf
enter
jge
jp
scas
push
lods
sub
xor
and
push
push
push
lret
not
jmp
jle
xchg
addl
push
push
inc
or
push
push
out
nop
mov
jmp
jb
jmp
repnz
push
push
fs
mov
inc
and
add
dec
or
mov
xchg
and
adc
clc
dec
cmc
push
aam
cli
insl
sbb
xchg
dec
and
jb
int3
jo
sbb
cmp
push
sub
or
add
stos
xor
fiaddl
xchg
or
sbb
xchg
dec
ds
int
push
addb
orl
clc
sbb
adc
or
add
jb
popf
xchg
cli
es
mov
or
lods
mov
ret
add
adc
sbb
fisubrs
sbb
mov
push
shl
call
xchg
adc
insl
cltd
cmpsb
xchg
sbb
push
insb
push
push
test
adc
sbb
inc
adc
sbb
and
inc
cmp
pop
and
sbb
xor
pop
pusha
and
mov
pop
add
es
subb
ljmp
and
and
movsl
mov
cltd
jo
add
fwait
cmp
out
cmp
pop
mov
inc
gs
push
lcall
js
and
xchg
inc
sub
movsb
pop
test
mov
lods
int3
sbbb
and
lret
pusha
mov
mov
add
adcb
movb
cli
test
jbe
or
add
add
add
add
mov
ret
lods
dec
out
dec
sub
bound
inc
push
pusha
fmul
add
push
or
inc
dec
mov
dec
icebp
xchg
push
xchg
js
shlb
mov
imul
add
push
cs
nop
scas
and
test
sbb
add
ficoms
mov
sbb
lods
add
fs
adc
add
int3
lods
or
enter
add
add
inc
push
loop
insb
xchg
leave
xor
sbb
or
loope
inc
mov
push
or
inc
lods
sbb
push
scas
jbe
mov
enter
xor
mov
sbb
adc
sub
lock
popa
js
or
daa
or
call
pusha
mov
or
cli
scas
int
test
push
pushf
mov
add
dec
or
cmp
add
popa
fbstp
xchg
fists
loopne
nop
inc
scas
loop
sbb
push
test
adc
mov
and
cmp
mov
push
add
addb
lret
mov
or
add
push
or
add
stos
scas
cmp
sarb
sbb
test
add
add
adc
pop
mov
push
scas
xlat
push
adc
or
and
xchg
mov
add
cli
ret
or
and
pushf
push
bound
push
push
push
dec
jl
sbb
mov
test
or
adc
fs
lods
pusha
sub
push
lret
dec
into
jo
fsubl
or
pushf
inc
xor
cmc
push
mov
and
push
xchg
pop
into
dec
adc
scas
mov
mov
cs
test
add
push
add
xchg
sbb
add
popa
push
pop
push
cltd
cwtl
add
xchg
xchg
lret
or
ljmp
je
out
test
mov
or
ret
lods
sub
sub
push
push
cli
test
lret
popa
or
sub
rorb
cltd
sub
inc
enter
xchg
out
adc
fs
ljmp
inc
or
add
mov
addb
mov
xchg
mov
adc
inc
nop
xchg
sub
xor
dec
adc
lret
xor
pop
les
jl
sub
movsb
and
fs
shll
mov
cmc
dec
and
es
and
adc
or
mov
ror
es
push
out
aam
mov
es
sbb
mov
pusha
add
shlb
les
scas
or
lods
or
mov
lret
xchg
mov
pop
push
cs
dec
leave
mov
cwtl
cmc
test
inc
push
cld
add
stos
push
or
ljmp
dec
add
pop
inc
test
xor
jmp
mov
data16
adc
adc
andb
sbb
jecxz
test
mov
ret
in
bound
stos
cmp
push
mov
pop
test
aad
adc
mov
add
cltd
dec
dec
sbb
and
fidivrl
push
les
ss
push
add
xor
push
add
mov
xor
push
fidivs
ret
pop
or
adc
push
mov
in
and
rol
roll
sbb
add
mov
xchg
sbbl
inc
mov
mov
add
xor
add
jmp
aaa
mov
imul
lcall
andl
push
adc
push
sub
imul
jbe
mov
shlb
inc
xor
cs
lea
sub
sbb
adc
inc
add
sbb
mov
cmpsb
xor
subb
xor
mov
mov
fdivl
shl
cwtl
inc
mov
mov
stos
fcoms
push
or
fs
decl
adc
xchg
cmpb
push
push
dec
loopne
mov
lock
or
xorl
xchg
lcall
dec
sub
es
or
sbbl
cmpsb
sbb
xchg
sbb
aam
xchg
data16
inc
dec
pop
fs
sub
dec
mov
pusha
adc
data16
enter
sbb
orb
xor
xchg
dec
movsb
push
inc
xorb
or
xor
mov
jo
insb
sbb
and
cs
xchg
test
int3
pop
xor
lret
mov
decb
test
call
inc
mov
enter
stos
insb
push
inc
sub
sbb
test
sbb
in
add
push
jo
add
int3
xchg
gs
mov
pusha
fdivs
mov
mov
xor
adc
outsb
pop
data16
push
xchg
sub
sbb
push
adc
xor
dec
js
or
xchg
or
orl
or
and
add
xchg
mov
and
shl
andb
or
je
add
xor
xor
cmp
cmp
sbb
pop
and
movsb
dec
inc
or
dec
adc
jo
mov
xor
and
cli
or
faddl
ror
sbb
notb
or
mov
mov
dec
loop
xor
or
and
mov
shlb
cli
pop
or
push
mov
stos
adc
cld
loop
or
enter
and
dec
cli
andb
mov
insl
xchg
testb
js
insb
gs
aam
ret
dec
out
cli
add
clc
aad
cli
xchg
adc
mov
subb
jne
mov
mov
add
push
adc
dec
and
sub
int3
cmc
cs
fsubrl
pop
test
int3
adc
and
fisubs
jo
pusha
sbb
loope
popa
jne
fdivrp
xor
inc
lods
sbbl
scas
push
es
add
push
xor
and
push
and
sbb
xchg
and
push
push
movsb
adc
pop
or
test
cli
rorb
daa
test
cmp
sbb
dec
inc
cmpsl
fs
fcmovbe
test
in
pusha
xchg
lock
test
add
xor
out
push
test
aam
push
insl
mov
adc
and
push
mov
sbb
and
cmp
inc
sub
and
ficomps
cltd
rcll
inc
push
or
aad
fbld
and
ljmp
mov
mov
xor
dec
add
and
rorb
loope
dec
mov
test
mov
les
and
mov
orl
adc
push
mov
or
mov
jle
add
mov
lret
cs
mov
dec
and
add
int3
lods
es
test
fs
lock
push
adc
mov
dec
or
mov
push
sbb
jb
xchg
flds
inc
aam
ret
in
imul
je
sbb
mov
inc
jb
rcpps
and
xor
sbb
mov
ret
dec
xor
roll
xor
inc
inc
test
and
push
rcrb
int3
push
aad
fmul
sub
pop
mov
sbb
xor
out
cwtl
or
add
sbb
lock
sub
sub
push
xchg
pop
pop
xchg
mov
pop
dec
or
or
data16
sbb
push
dec
sub
push
inc
lret
add
push
adc
das
lret
or
sbb
inc
add
movsb
and
xchg
aam
and
pop
rolb
push
xchg
jbe
adc
or
les
jle
rolb
ret
ret
pushf
xor
sub
or
lods
push
mov
or
rcl
call
mov
xor
test
inc
je
cli
and
fsubrp
bound
lcall
adc
xor
mov
sbb
fldcw
aam
or
add
add
fs
dec
movsl
and
or
orb
xchg
push
cli
shlb
loop
lods
adc
in
cli
dec
scas
fsubs
cwtl
add
and
push
lret
insb
xchg
js
xchg
pushf
pop
sub
ficoms
mov
nop
mov
mov
cmp
js
enter
stos
mov
cmp
jbe
xor
or
and
lret
add
call
sbb
sbb
fwait
xor
out
inc
ret
test
cmpsb
add
aam
push
xorl
sub
daa
cmc
mov
addb
and
ljmp
into
fcoml
and
mov
fcoml
dec
mov
pop
pop
neg
test
bound
ds
leave
js
mov
int
shrl
negb
lods
pop
jb
xor
and
and
test
inc
push
sahf
sbb
add
sub
xor
or
lret
fstpt
sbb
movsb
push
test
loope
add
sbb
imul
pop
mov
cmp
xchg
and
pop
adc
or
dec
push
lcall
add
push
cmp
loopne
incb
nop
inc
fildll
sbbl
les
insb
push
push
cmp
test
adc
sbb
scas
rolb
inc
in
add
xorb
mov
mov
pushf
inc
test
dec
or
nop
jo
fs
pop
xor
rolb
or
in
add
inc
push
jl
aad
xor
push
insb
sbb
xchg
pushf
into
dec
mov
push
and
test
sub
clc
lods
adc
dec
mov
js
or
or
add
push
push
add
add
mov
sub
and
inc
xchg
add
or
cmc
dec
jp
movb
xor
inc
adc
fsubl
dec
dec
or
dec
lret
and
dec
mov
imul
outsb
ret
cmp
jp
push
ds
xor
adc
ret
loopne
inc
xchg
mov
dec
cmp
sbb
inc
cs
and
mov
test
inc
sbbb
sbb
mov
xor
mov
add
jp
or
mov
sbb
cmc
push
mov
insb
test
pop
mov
push
sub
mov
cmp
mov
dec
ret
mov
loopne
adc
push
loopne
sub
pusha
bound
loopne
pop
outsb
es
inc
or
add
xor
dec
dec
enter
gs
imul
jl
lret
and
xchg
jb
push
jbe
orb
fistpll
cmpsl
fs
inc
in
sbb
insl
add
andb
push
sbb
les
sbb
xchg
sbb
push
rorl
repnz
or
inc
rclb
add
clc
cmp
test
dec
and
inc
fisubrs
sbb
rclb
push
sbb
movsl
xchg
jle
dec
dec
test
pop
cmpsb
mov
add
and
out
fs
mov
leave
inc
mov
and
inc
mov
sbbl
cltd
pop
inc
pop
adc
mov
add
inc
rcr
inc
and
gs
ds
int3
enter
rorl
or
dec
xor
in
jo
add
or
test
inc
sub
data16
outsb
sbb
pusha
sbbb
subb
scas
sbbl
out
dec
bound
fs
inc
push
or
test
add
roll
pop
xchg
pusha
clc
fwait
sahf
and
pop
lahf
ja
mov
lahf
sbb
inc
fsubrl
push
pop
mov
loope
pop
adc
iret
hlt
sti
gs
add
add
push
push
add
push
and
mov
cld
pop
inc
xor
int3
push
pushf
rcrb
dec
lcall
lock
test
les
jb
pop
add
add
andl
and
inc
inc
insb
imulb
jbe
adc
movsl
push
nop
ret
lods
mov
push
imul
add
cwtl
push
add
xor
and
mov
push
sbb
arpl
pop
pop
push
cli
arpl
jne
or
ss
mov
mov
fmuls
cld
or
inc
sub
jb
sub
dec
add
sub
test
push
and
shrl
jle
adc
test
divb
nop
push
push
mov
or
pop
xor
sub
pushf
xchg
les
clc
dec
cmp
mov
pop
out
hlt
and
dec
add
or
or
xchg
inc
mov
dec
add
push
sub
es
or
jno
xchg
orb
dec
cwtl
lret
movsb
mov
dec
jl
mov
sahf
mov
adc
inc
sbb
cwtl
pusha
dec
outsb
add
xchg
leave
imul
dec
andb
mov
or
push
mov
sbbb
mov
cwtl
add
lea
dec
adc
orb
shlb
rcll
loop,pn
or
xor
and
lods
mov
and
lret
xchg
sbb
js
scas
sbb
pushf
pop
lock
popa
sub
mov
dec
hlt
and
scas
xchg
pusha
adc
je
mov
cs
call
clc
push
test
push
adc
adc
loope,pt
or
call
ror
xor
dec
clc
or
js
or
push
dec
and
cli
out
lods
inc
xchg
pop
add
andl
mov
orb
add
sub
mov
xor
pop
sahf
inc
sub
and
push
mov
push
mov
inc
outsb
mov
adc
pop
push
fisubrs
push
ficoml
xchg
inc
inc
sbbb
mov
sbb
mov
and
sbb
int
xchg
sahf
aam
cli
test
push
xor
add
nop
dec
ficomps
and
sbb
ds
bound
es
dec
dec
mov
lods
and
jb
out
pusha
fsubs
inc
hlt
pusha
mov
add
in
sub
stos
jl
aad
stos
leave
xor
pushf
add
xor
push
test
inc
dec
add
aad
aam
adc
mov
xchg
ds
adc
push
push
and
xchg
and
scas
mov
mov
call
push
sub
mov
mov
shrb
ds
add
popf
movsb
insl
add
adc
add
xor
test
inc
inc
add
push
inc
mov
dec
sub
pop
dec
and
stos
adc
pop
pop
es
or
in
xor
inc
ret
dec
push
inc
sbb
jb
mov
dec
sub
mov
pop
xor
add
test
inc
cmp
mov
movsb
jo
xor
es
jl
ret
popa
cmp
ljmp
sbb
shlb
call
scas
sbb
imul
movsb
hlt
add
mov
je
lret
mov
orb
nop
cmc
ljmp
xchg
rcrl
and
add
mov
enter
fs
clc
push
pusha
cs
jp
add
pusha
xchg
cmp
cltd
push
data16
lcall
sbb
xchg
movsb
stos
pop
ljmp
aam
xchg
test
nop
jne
sub
loop
inc
lods
into
and
hlt
cmp
and
test
test
push
lret
or
jb
and
loopne
sub
xor
sahf
mov
and
mov
rolb
adcb
add
bound
cwtl
jbe
xchg
or
sub
out
addb
inc
sbb
xorb
jns
shrl
xor
leave
mov
ffreep
les
sbbb
dec
es
jbe
ret
out
adcl
adcl
push
imul
adc
jle
sub
fcoml
pop
inc
popa
cli
mov
pushf
aam
imul
mov
jle
insl
mov
xor
int
cmc
jne
int3
ljmp
mov
jo
nop
hlt
sub
fdivl
orb
inc
cltd
pop
add
js
ss
insl
sbb
mov
sub
enter
pushf
lahf
fs
cltd
xor
jbe
dec
sbb
and
enter
ret
and
add
push
stos
and
mov
loope
or
push
dec
sarb
dec
mov
push
cmp
orb
decl
push
outsl
mov
loope
out
or
orl
fcoms
dec
hlt
call
pusha
xchg
adc
sbb
push
out
mov
cmp
push
cmpsl
xchg
cwtl
and
lret
mov
or
inc
data16
daa
loopne
push
pushf
cmp
mov
test
push
pushaw
and
stos
test
callw
mov
movsb
cmp
and
inc
dec
clc
cs
movsl
sub
push
cmp
adc
push
pop
sbb
ds
scas
call
mov
popf
sub
repnz
or
and
mov
push
adc
cwtl
rolb
cmp
xchg
add
ds
xchg
push
push
aaa
cwtl
add
push
rcrb
and
mov
and
and
or
mov
lods
je
pusha
test
pusha
push
test
push
add
mov
sub
pusha
sub
dec
es
cwtl
or
add
sbb
cmpsb
js
mov
es
push
test
mov
dec
add
fisubl
cwtl
inc
add
int3
jo
inc
mov
or
dec
mov
scas
dec
xchg
inc
add
xchg
lea
mov
and
add
adc
xchg
pop
adc
out
jge
clc
cmpsb
lock
add
sbb
add
inc
mov
xor
add
je
sbb
pushf
stos
and
faddl
add
into
loop
add
movsb
jo
and
test
clc
mov
xor
add
cli
push
add
adc
nop
adc
ret
fimuls
aaa
pop
jp
repnz
add
mov
adc
mov
sbb
or
xchg
mov
pusha
add
xchg
int3
addb
xor
and
or
or
push
nop
aaa
movsl
call
xor
xchg
and
je
add
xorl
cmp
push
xlat
xor
outsb
scas
jb
and
adc
mov
sarb
mov
sub
add
xchg
jp
sub
popf
in
inc
dec
inc
push
imul
xchg
jo
out
push
pop
cmp
pop
adcb
inc
cmpsb
xchg
adc
sbb
or
test
jb
cmp
sub
inc
insl
sbb
and
sub
and
pop
push
xor
cbtw
mov
xlat
cmp
jl
xor
xchg
adc
bound
dec
pop
mov
addb
lcall
test
fisubrl
and
pop
cmp
hlt
pushl
sbb
pop
test
mov
sub
mov
out
xor
enter
cli
dec
sub
sub
add
andl
pop
adc
add
inc
add
cmp
sub
outsl
mov
mov
popl
mov
mov
dec
in
push
arpl
xlat
xor
cmp
jbe
cmp
dec
adc
sti
lods
xor
cmp
add
bound
outsb
jae
jle
and
clc
mov
jnp
daa
insb
sarb
xchg
in
out
xchg
movhlps
pop
mov
aad
cmp
add
adc
fistpll
xor
cmp
dec
adc
sbb
jmp
subb
rclb
rcrb
sbb
cli
add
sbb
aad
inc
xchg
jp
mov
adc
enter
test
sbb
ret
sub
call
idivb
or
mov
or
and
movb
hlt
push
in
mov
loopne
add
inc
outsb
sbb
xor
add
popa
mov
stos
xchg
push
xor
mov
xchg
or
ljmp
xor
fs
cmpsb
and
add
xchg
xchg
cmp
inc
pusha
sbb
push
dec
mov
test
mov
mov
adc
jo
lods
outsb
inc
or
lret
nop
xor
jb
adc
call
out
pushf
cs
test
les
hlt
or
mov
fsubrs
adc
xchg
leave
add
lea
addb
loop
add
stos
mov
cld
scas
scas
or
or
es
adc
add
add
or
lret
call
ljmp
add
cmpsl
jae
cmp
push
cwtl
mov
imul
sbb
sub
push
pop
dec
xchg
adc
jns
xchg
cwtl
stos
sbb
mov
add
add
push
dec
fmul
cmp
sbb
inc
orb
or
test
or
mov
sbb
mov
and
push
mov
test
js
add
mov
add
rcll
or
push
rolb
test
sbb
mov
mov
loopne
push
xor
mov
push
test
cli
movb
cltd
test
lcall
sub
and
jbe
inc
mov
or
int3
push
jbe
add
add
mov
cs
sub
xchg
cmpsb
pop
nop
sbb
inc
mov
stos
mov
lcall
sahf
orb
enter
sub
sarb
je
mov
jns
imul
mov
rolb
adc
or
inc
xor
and
push
mov
fs
cmc
loop
and
xchg
outsb
ljmp
or
mov
sub
adc
xor
lcall
mov
pop
dec
lret
clc
cmpsb
jb
add
mov
adc
andl
sbb
dec
or
jl
cs
rorl
and
nop
or
jb
cmpsb
mov
fbld
xchg
adc
data16
lock
or
orb
enterw
test
push
insl
cmc
pop
and
mov
es
adcl
cwtl
dec
mov
sub
jp
jo
inc
push
jb
outsb
mov
jbe
push
inc
inc
pusha
mov
pop
data16
out
xchg
or
xchg
jo
jns
sbbb
mov
mov
push
inc
or
xchg
mov
ret
xchg
lcall
xchg
or
mov
add
ret
push
lds
mov
adcb
add
ret
mov
jp
test
nop
push
mov
sbb
mov
sbb
dec
mov
xchg
push
test
inc
pop
loopne
ljmp
adc
lcall
mov
inc
pusha
jp
add
xchg
sub
sub
dec
lods
inc
inc
mov
xor
cmpsb
xor
or
adcl
push
xchg
aam
and
mov
and
push
dec
adc
mov
add
sbb
loopne
mov
xor
outsb
or
fwait
dec
sub
cmc
orb
and
cwtl
adc
enter
adc
ret
push
clc
clc
nop
or
adc
mov
or
adc
push
xor
or
out
pop
lcall
aad
xchg
push
or
dec
mov
je
push
xchg
les
loop
shr
cli
xor
dec
push
lret
dec
sub
popa
push
dec
fdivrs
mov
jo
push
mov
sbb
and
xchg
rorb
fs
adc
hlt
xor
or
rcrb
push
or
push
adcb
mov
repnz
insl
js
add
ds
or
xor
jb
leave
sub
mov
mov
nop
dec
les
jbe
test
sbb
mov
shrb
sub
cs
pop
ds
inc
push
inc
ss
inc
pusha
retw
shlb
or
lock
xchg
add
or
pop
clc
inc
add
sub
rolb
dec
mov
cs
sbb
mov
adcl
loop
and
fs
dec
push
xchg
inc
jl
adc
inc
add
push
fs
and
mov
ret
dec
orb
adc
dec
and
sub
stos
add
inc
jo
push
jge
xor
stc
les
fisttps
mov
pop
or
rclb
sbb
add
xor
dec
xor
daa
hlt
mov
pop
add
das
jno
fdivr
cmp
cli
inc
add
pushf
or
insb
fisttpll
jmp
fwait
push
add
in
ljmp
addl
adcb
loop
or
sbb
push
inc
cmp
or
xchg
add
cmp
out
mov
lcall
jp
or
outsb
mov
scas
adc
pusha
sbb
ret
movsl
xchg
push
jo
mov
lods
mov
and
xor
loope
sub
sbb
mov
test
or
and
pop
sub
in
rorb
and
sub
lret
or
mov
mov
cmc
and
popa
or
pop
xchg
int3
cli
es
cwtl
lret
xchg
test
or
leave
inc
paddusb
in
sbb
jo
sbb
push
dec
inc
dec
or
sbb
and
adc
daa
pusha
adc
inc
shlb
mov
cmp
push
cmp
mov
cmp
cwtl
or
fdiv
fs
mov
add
mov
mov
insb
jbe
xor
inc
cmp
je
dec
and
add
sbb
fsub
insb
stos
jmp
ret
or
add
shlb
shlb
xor
lcall
and
xabort
adc
ret
add
push
jp
or
add
inc
add
inc
add
cwtl
dec
mov
loopne
pushf
add
pusha
dec
or
mov
mov
push
aad
dec
dec
inc
pusha
js
pop
mov
pop
mov
fisubrs
adc
push
adc
rclb
adc
add
mov
out
pushf
add
mov
add
push
dec
and
xor
adc
add
cs
add
pushf
cmp
ret
sbb
test
rcr
scas
jne
pop
insl
sub
sub
push
or
addb
scas
js
scas
cmp
cmp
mov
push
ficoml
lret
shlb
lcall
add
cmp
fwait
shrl
pop
gs
adc
mov
xor
in
add
sub
rorb
push
push
aam
xchg
xor
fsubrp
xor
adc
pusha
dec
int
xchg
loopne
cmp
sbb
mov
ret
dec
add
jb
mov
jo
sub
cs
leave
fadds
and
scas
subb
sbb
mov
and
xchg
pop
xchg
add
mov
xor
loopne
pop
or
pop
and
adc
cli
pop
sbb
mov
push
fsubl
push
xchg
or
scas
jge
add
sahf
adc
push
dec
add
inc
fwait
std
add
pop
in
stos
pusha
sub
dec
loop
sahf
lcall
and
mov
add
inc
int3
push
cwtl
lods
sbb
sub
or
inc
dec
lret
sub
inc
out
inc
movsl
popa
mov
int3
jne
fcoml
sub
xchg
hlt
adc
adc
inc
mov
mov
dec
out
les
mov
data16
push
es
or
sub
add
je
pusha
test
sahf
mov
pop
data16
or
push
inc
cs
jae
ljmp
dec
or
adc
pop
cmp
pushf
test
cmpsb
jo
sub
jbe
sbb
test
jbe
ss
add
js
push
hlt
mov
aam
cwtl
inc
test
add
fs
push
in
pop
imul
add
in
sbb
push
cli
and
es
mov
push
inc
sub
xchg
mov
adc
inc
mov
pop
xor
aad
mov
pop
xor
lods
adc
cmc
mov
mov
es
pop
adc
mov
add
push
lret
inc
cwtl
add
add
sub
dec
rol
orl
or
or
sbb
mov
notb
dec
xor
sub
or
sbb
push
dec
dec
insb
sub
shll
inc
lods
adc
cmp
mov
in
sbb
test
sahf
push
cltd
mov
or
pushf
push
sub
ficoml
and
lock
lcall
pop
add
or
mov
sub
cltd
sbb
xchg
retw
mov
stos
xor
adc
push
bound
movsb
mov
mov
sbb
dec
scas
mov
add
jp
or
movsl
pusha
mov
cld
fcoml
adcb
mov
add
bound
cmp
xor
and
mov
scas
pop
add
sbb
test
pop
sub
dec
lcall
push
aad
pusha
movsb
mov
test
mov
adc
and
fisubrs
ret
and
pusha
jp,pt
dec
inc
sbb
and
xchg
sub
and
ss
adc
adc
data16
loopne
bound
push
dec
add
andb
mov
inc
mov
loope
mov
cltd
push
or
subb
mov
push
insb
test
add
add
or
mov
fcmovne
sahf
cmp
adc
or
push
sub
pusha
push
ds
filds
shl
in
inc
js
outsb
outsl
leave
mov
movsb
cwtl
cmp
std
stos
test
sub
loope
add
inc
dec
add
jg
ja
push
add
sbb
cmpsb
xchg
xor
adc
mov
jg
testl
push
push
aam
insb
es
pop
or
fistps
pop
outsb
or
mov
clc
jg
sbb
add
loop
loope
popa
dec
shrb
inc
xor
dec
adc
loop
test
or
sbb
lret
fists
dec
es
shlb
add
push
lcall
push
sub
pop
xchg
es
int
xor
mov
test
cmc
push
faddl
test
and
test
dec
sub
xor
adc
push
mov
xor
loopne
cmp
and
ret
and
fiadds
or
popa
inc
mov
loopne
push
add
or
or
int3
or
ljmp
scas
mov
call
add
cltd
popa
ss
xchg
dec
and
or
push
loopne
sbb
mov
fdivr
xor
ret
add
mov
push
cwtl
push
sbb
and
dec
adcb
dec
bound
sbb
dec
call
pop
mov
adc
mov
movsl
add
push
in
sbb
dec
bound
jb
dec
add
sub
jo
gs
sbb
adc
ds
ret
gs
push
push
cs
mov
or
and
adc
xor
sub
ret
cmp
add
sbb
loopne
mov
repnz
inc
sub
js
popa
inc
test
pop
pusha
and
mov
ss
flds
insb
dec
ret
push
rcl
or
sbb
sub
xchg
aam
mov
andb
and
test
ljmp
movsb
rclb
rcll
inc
sbb
or
test
xor
loop
pusha
cwtl
sbb
mov
mov
pusha
and
hlt
insb
pop
bound
fs
or
test
lret
or
mov
push
cmp
int3
or
inc
xor
jb
mov
jo
and
inc
inc
xor
dec
adc
inc
xor
sub
lods
inc
unpckhps
imul
cld
fs
andb
bound
cltd
cmpsb
ret
or
test
cld
test
test
and
mov
mov
jo
mov
inc
mov
adc
or
cli
push
lock
add
stos
mov
jo
fs
je
clc
and
cs
test
mov
test
bound
ret
and
pop
or
add
popa
scas
xor
clc
test
xchg
add
addb
movsl
sbb
push
cmpsl
scas
jne
nop
or
add
or
or
rcrb
ljmp
xchg
push
sbb
cwtl
lock
push
leave
jge
mov
mov
cli
popa
add
cmp
and
inc
cwtl
or
mov
ljmp
adc
popa
xchg
ljmp
or
xor
outsb
shrb
or
or
mov
xor
test
jae
push
orb
stos
xchg
fs
lcall
shl
jmp
mov
push
jecxz
mov
sbb
inc
nop
xor
test
sub
add
pop
push
imul
or
jo
loopne
sahf
push
pushf
pop
push
pop
adc
or
add
repnz
mov
add
mov
test
xor
pop
test
inc
test
dec
xorb
jne
sbbl
jb
insb
roll
xchg
movsb
jne
fidivrl
dec
pusha
cmpsb
scas
pop
sub
fidivl
xor
popa
adc
push
xchg
test
mov
pop
mov
sub
je
dec
sub
out
gs
push
add
push
mov
jle
stos
xchg
cwtl
loop
js
lret
add
sbb
daa
idivb
and
xor
movsb
rorb
inc
sub
and
mov
addl
xor
call
and
gs
dec
pop
push
aad
add
mov
ljmp
int
sbb
or
adc
je,pt
add
xchg
and
pop
xchg
and
mov
adc
bound
sub
movb
adc
push
test
lcall
int3
jb
das
repnz
cmp
ljmp
fcomps
or
inc
imul
fs
mov
adc
test
dec
clc
lret
inc
inc
push
mov
lock
cld
clc
mov
ret
in
rolb
mov
mov
cmp
lret
or
xor
mov
xchg
clc
test
sub
adc
ret
or
mov
lcall
repnz
movb
adc
in
adcb
or
pusha
and
les
push
call
adc
inc
repnz
call
mov
ljmp
es
cld
add
xchg
rcrb
es
sbb
add
aad
aad
mov
test
sub
les
faddl
or
dec
inc
mov
inc
and
loope
loope
js
fsubrs
jl
mov
in
scas
push
push
adc
cmp
movsl
fsubrl
mov
add
lret
push
inc
dec
mov
dec
adc
sbb
sub
add
and
aas
cmpb
rolb
bound
mov
sbb
push
sbb
sub
push
sti
xor
sub
sub
pop
sub
push
ss
adc
ret
fs
outsl
lahf
sub
js
push
jb
fstps
rorb
jo
loop
leave
movsl
cmp
or
outsb
xchg
movsb
add
gs
movsb
rolb
xchg
ficompl
dec
arpl
mov
movsl
push
dec
sub
cwtl
movb
data16
or
inc
adc
fadds
js
push
js
rolb
and
loop
lds
mov
adcb
push
add
cwtl
test
pusha
mov
bound
jo
push
aam
es
mov
test
and
or
inc
push
pusha
mov
or
mov
mov
out
xor
inc
fistpll
push
mov
xchg
rolb
loop
or
or
and
sbb
push
inc
inc
or
dec
es
js
test
or
loopne
adc
in
mov
outsl
bound
dec
adc
sar
stos
pop
js
enter
adc
lods
push
dec
and
fsubrs
test
sbb
movsb
je
es
push
xchg
push
insl
test
mov
add
aad
loop
mov
dec
add
or
jb
or
sub
cmp
push
push
add
and
jo
mov
mov
push
mov
xorb
ret
cmpsb
and
test
push
push
inc
add
add
push
push
add
in
clc
and
sbb
jle
jb
push
out
jo
fs
add
fidivrl
pop
xchg
inc
in
cwtl
xchg
push
xchg
push
mov
ss
xchg
xchg
or
mov
mov
push
or
mov
addb
pusha
adc
xor
ret
inc
and
nop
in
jmp
or
loopne
shrb
out
xchg
mov
inc
cmpsl
inc
cmc
mov
or
mov
dec
js
cwtl
fcmove
or
inc
ror
cmp
jne
xor
insb
addl
add
lock
cltd
addb
jle
xor
xchg
lcall
xchg
sbb
mov
dec
shrb
into
dec
inc
or
xchg
inc
pop
or
les
mov
xchg
ret
or
shlb
inc
dec
mov
xor
pusha
cwtl
call
ror
gs
inc
or
sarb
sbb
ss
jb
pusha
test
push
dec
xor
cwtl
in
loop
ret
inc
shlb
std
push
and
scas
mov
jo
pop
adc
xchg
adc
insl
aam
pushf
nop
ret
sbbb
inc
pop
dec
or
push
test
fsts
cmpsb
sub
xchg
fnstcw
idiv
call
cmpsb
xchg
fsubs
mov
or
mov
push
xor
push
test
push
test
outsb
cmp
xchg
int3
ds
sbbl
pop
xor
es
jl
mov
adc
push
adc
and
sub
fs
insl
sub
divb
sbb
cltd
adc
adc
mov
out
xchg
and
movsb
cmp
outsb
lods
add
add
inc
xchg
xor
or
mov
daa
popa
adc
mov
mov
sbb
fs
andl
mov
sub
call
pop
push
lcall
sub
xchg
push
fisubs
rcr
les
cmpsb
xchg
sub
or
nop
es
movsb
test
mov
add
pusha
shrb
popa
cbtw
mov
nop
cmp
push
inc
xchg
test
test
mov
mov
adc
inc
sbb
dec
fcompl
dec
push
adc
add
push
inc
inc
cltd
dec
in
sbb
or
push
or
cltd
lcall
xchg
clc
cwtl
gs
mov
test
sub
ret
mov
add
xchg
push
push
xchg
add
cs
aam
sbb
pusha
and
dec
sahf
and
cmpsb
in
adc
sub
loopne
ljmp
cmpsb
jbe
or
nop
adc
add
sbb
cltd
outsb
mov
dec
sbb
cmpsl
inc
stos
out
add
sub
dec
and
movsb
or
inc
mov
and
in
sbb
test
outsl
add
mov
adc
push
inc
adc
cld
jl
push
sub
adc
movsb
es
cmpb
ljmp
push
mov
ljmp
test
xchg
push
jne,pn
jo
fstl
clc
push
nop
xchg
add
sbbb
testb
inc
int3
fdivs
mov
push
adc
sub
and
scas
mov
pushw
xor
or
push
push
and
push
adc
dec
enter
xchg
add
sub
stos
enter
int3
lret
lods
inc
mov
je
adc
dec
add
mov
scas
ss
or
or
sbbl
scas
int3
mov
cs
sahf
jl
shrl
sbb
in
int3
sub
push
xor
cmp
inc
push
or
sahf
pop
lds
mov
or
sbb
dec
or
sti
lcall
repz
pop
sbb
sbb
lods
mov
cwtl
clc
jbe
sbb
push
aam
adc
or
mov
enter
sbb
jbe
dec
jp
cli
enter
xor
push
push
adcl
sub
cmp
ljmp
sbb
xchg
cmp
adc
jnp
or
push
add
inc
xchg
dec
rorw
or
push
xchg
sub
mov
ror
int3
test
repnz
aad
xchg
jne
or
jo
inc
and
push
inc
pusha
ss
add
sbb
add
aad
or
in
cmovb
or
fisubl
push
es
or
ror
or
pusha
cs
push
cmp
insb
mov
lret
popa
inc
mov
cltd
sbb
fs
or
xor
jne
jb
sub
leave
add
mov
mov
mov
fcoms
add
or
int3
aam
adc
roll
in
lret
sbb
inc
push
or
sub
and
lock
xchg
fiaddl
cmp
and
add
into
xorb
adc
xchg
add
dec
and
mul
inc
loopne
loopne
push
sub
inc
dec
or
fmuls
inc
mov
jo
popa
das
fiadds
jle
add
xor
les
pop
push
lret
mov
sarl
push
push
or
push
xor
xchg
sbb
cmpb
dec
stos
inc
pusha
shlb
loopne
dec
mov
sub
mov
push
loopne
fcomps
leave
sbb
test
add
js
rorl
test
mov
add
mov
push
pop
ljmp
imul
jo
cmc
jbe
inc
fs
xchg
jle
cs
popa
bound
mov
and
movb
nop
ds
int3
or
mov
xor
lods
and
loop
fsubr
rolb
xchg
int3
inc
data16
cmp
push
mov
sbb
es
adc
xor
inc
cmp
dec
adc
test
xchg
sbb
fadds
inc
data16
shlb
or
and
ret
inc
dec
mov
lods
data16
movsb
adcb
mov
xchg
pushf
ret
mov
lcall
dec
nop
mov
add
cwtl
cmpsb
fmull
lret
jp
rol
mov
inc
mov
cmp
xlat
mov
or
clc
xor
mov
ja
mov
arpl
mov
lret
fs
fisttps
in
sub
mov
es
and
and
jp
ljmp
or
insb
or
xor
sub
int3
sub
repnz
adc
push
mov
mov
push
add
arpl
mov
popa
out
ds
dec
cli
incb
cmp
addb
inc
mov
jbe
or
enter
inc
es
into
fadds
or
or
or
mov
mov
stos
push
test
sbb
dec
adc
or
scas
or
sub
cwtl
inc
jb
test
dec
add
push
and
dec
sbb
dec
rclb
xchg
nop
push
fmull
add
dec
mov
add
int3
test
xor
call
es
sbb
or
loopne
pusha
add
xor
ret
loop
push
or
mov
pop
add
insb
pop
push
mov
xchg
cmpb
and
xor
inc
sub
dec
enter
sub
mov
add
inc
cltd
xor
mov
cltd
pusha
push
mov
stos
mov
pop
xchg
mov
sbb
jb
xchg
inc
sub
loopne
add
sub
inc
sbb
ret
xor
dec
jbe
or
dec
jb
hlt
cs
add
push
cmp
nop
sub
mov
out
push
xchg
sub
add
and
loopne
inc
sbbb
sub
push
mov
mov
test
xchg
into
insb
test
mov
sbbb
sub
dec
es
sub
es
mov
movsb
movsb
fisubs
inc
or
cmp
bound
or
mov
push
xchg
insl
int3
sbb
dec
inc
push
xchg
dec
cmpsb
clc
xchg
push
jo
es
xchg
dec
stos
mov
test
mov
or
aam
push
xchg
xchg
xchg
and
mov
shlb
mov
xor
jne
bswap
sub
adc
sub
push
dec
dec
insb
faddl
shl
and
xor
cmp
dec
scas
dec
dec
dec
or
or
push
or
or
stos
mov
mov
or
cmp
adc
or
add
sbbb
jle
ljmp
sbb
adc
xchg
cmpsb
cld
jl
push
and
out
pusha
ss
js
push
sub
dec
inc
xor
dec
inc
mov
shrb
jp
es
adc
or
incl
xor
dec
sti
ljmp
int
arpl
les
xchg
pop
or
add
ljmp
sbb
inc
push
mov
or
push
lods
incl
lcall
jle
mov
aad
inc
cwtl
adc
aad
inc
loope
fdivrs
fdivl
or
add
sbb
enter
and
inc
adc
inc
retw
movsb
and
mov
enter
pop
mov
sub
enter
or
dec
cwtl
add
inc
pop
mov
dec
add
fiaddl
add
sbb
in
push
adc
add
mov
mov
loope
in
movsb
adc
andb
dec
push
mov
push
dec
push
or
dec
mov
cli
orb
add
inc
adc
xor
pushaw
mov
jmp
dec
test
xor
jl
cld
inc
add
mov
lcall
sbb
loop
ret
mov
mov
inc
cli
mov
push
loop
subb
gs
adc
add
or
cltd
or
cltd
or
xor
dec
mov
icebp
xor
loope
or
scas
jp
aad
test
mov
mov
rclb
js
dec
mov
xor
addb
outsb
xchg
fcmovbe
dec
pop
sbb
mov
xor
pop
orl
jo
pushf
inc
mov
or
push
jmp
in
adc
nop
lret
test
int3
add
loopne
aam
mov
mov
dec
movsb
stos
cwtl
and
and
popa
dec
rcrb
test
dec
add
adcb
or
xor
adcb
mov
sbb
inc
cwtl
sub
add
in
shl
and
and
and
inc
add
cld
lcall
into
enter
inc
shrl
mov
sbbb
or
push
fidivs
subb
imul
add
rcrl
sbb
add
lock
aam
sahf
sbb
cltd
dec
fdiv
fsubs
test
cli
jl
mov
and
mov
fistps
xor
xorb
mov
sub
push
or
push
test
mov
add
and
call
cld
push
es
dec
lcall
pop
aam
mov
and
and
xchg
popa
or
movsb
xchg
loopne
mov
orl
lods
mov
push
pop
push
cmp
sub
xchg
mov
clc
sbb
mov
fcomp
sub
dec
loope
insl
es
push
and
dec
rorb
decl
sub
jecxz
mov
mov
sbb
dec
add
cli
into
das
out
data16
adc
mov
push
sub
cmp
mov
or
loope
je
clc
push
mov
adc
or
shlb
in
bound
or
add
and
jb
pushf
adcb
xchg
sbb
or
add
xchg
dec
adc
push
dec
jns
dec
adc
loopne
addb
enter
adc
dec
dec
add
es
fidivl
insl
push
or
sbb
sub
inc
aam
xchg
add
outsb
hlt
sbb
push
mov
pop
pop
push
bndldx
xchg
push
adc
cld
sbb
mov
add
inc
mov
mov
gs
and
pusha
sar
push
shlb
and
mov
xchg
mov
dec
cmpb
push
cmc
aad
dec
stos
ljmp
inc
adc
pushw
xor
pop
inc
daa
add
out
pushf
subb
sbb
xor
mov
dec
enter
sub
pusha
sbb
adc
test
es
int3
inc
inc
test
ds
sbbl
dec
inc
sub
sbb
lret
les
or
dec
add
mov
inc
out
xor
movsb
xor
mov
cs
shlb
test
mov
rcr
mov
adc
lret
push
inc
shrb
loop
adc
mov
sub
movsb
dec
rolb
cmp
sub
add
int3
mov
pop
das
lret
lret
mov
sahf
jp
movsb
nop
cltd
mov
dec
add
pop
pop
into
pusha
cmp
xorb
nop
lret
jle
repnz
and
dec
es
and
in
fisubs
pushw
sub
sbb
cs
fcoms
add
add
fcompl
and
aad
sbb
inc
sbbb
int3
pusha
cwtl
cmp
inc
sbb
and
inc
and
pop
add
in
dec
inc
dec
pusha
test
jle
flds
xchg
dec
adc
add
or
and
test
pushf
stos
aad
mov
pusha
lock
leave
mov
cmpsb
es
adc
fs
add
mov
pusha
adc
add
mov
sub
addl
in
push
dec
xor
rcl
bound
dec
mov
les
test
loope
inc
outsb
xchg
aam
adc
test
cmp
and
sbbb
je
push
sub
scas
mov
sbb
sub
stos
sbb
aam
xchg
xor
dec
push
pop
sbb
jle
push
ret
or
and
add
lods
fdivrs
scas
xorb
aaa
mov
push
jbe
mov
and
mov
xchg
sbb
and
inc
cmc
cld
or
dec
push
push
xor
jo,pn
inc
push
mov
pushf
cmp
push
ret
mov
leave
or
sub
push
int3
mov
and
add
sub
dec
lock
addb
dec
jo
add
imul
add
push
insb
or
mov
push
mov
push
lret
popa
outsb
call
xor
mov
dec
push
mov
into
dec
pop
or
popa
lcall
ret
cmpsb
cmp
xor
add
jb
scas
fmuls
sub
sbb
cwtl
enter
pop
or
in
dec
pusha
mov
xchg
adc
xor
jnp
ret
push
add
sub
cmp
js
mov
lods
adc
cltd
or
enter
mov
sbb
mov
test
ret
loopne
adc
fidivrl
es
dec
xchg
fisubrs
andb
xchg
fdivrl
int3
int3
adc
addb
inc
xor
xchg
sub
lcall
addb
xchg
or
cmp
mov
add
addl
sbb
popa
and
mov
shlb
sub
xorb
sbbl
mov
scas
or
jo
jno
cmp
and
add
push
add
adc
cmp
mov
mov
adc
or
cmp
and
cltd
sub
hlt
xor
cmp
xor
mov
orl
stos
aam
xchg
pop
popf
xor
jns
push
and
push
cmovae
mov
dec
xchg
sbb
adc
add
pop
stos
mov
inc
adc
pop
adc
test
adc
loop
cltd
inc
add
jl
andb
pop
dec
js
add
cltd
dec
cltd
sub
loop
or
es
call
les
ljmp
push
shrl
adcb
cmc
test
xchg
idivb
ret
int3
or
xor
and
cli
ds
bound
fnstenv
push
lret
loope
int3
pop
ljmp
cli
and
pusha
popa
aad
je
jle
mov
mov
enter
fs
adc
ffreep
push
cmp
test
inc
pusha
push
pusha
lcall
pop
nop
in
rolb
inc
lods
xor
dec
stos
adc
js
push
pop
movsb
xor
loopne,pn
cld
fadd
pop
mov
test
movsb
lock
addl
loope
push
jo
out
in
pusha
frstor
inc
enter
mov
dec
sti
jb
ljmp
pop
and
sub
cmp
mov
adc
push
les
add
fs
sbb
sub
mov
aad
mov
hlt
xchg
popa
jb
inc
sbb
mov
enter
xchg
mov
pop
fsubs
aad
movsb
or
pusha
push
mov
ljmp
fdiv
movsb
push
fldt
dec
sub
xor
mov
ss
xchg
xchg
pop
in
dec
test
fimuls
nop
xor
jb
nop
lods
push
jb
xchg
popa
dec
xor
push
mov
outsb
xchg
sbb
adc
dec
in
fadds
dec
and
mov
inc
insl
cmc
fdivrl
adc
bound
and
es
and
jp
push
or
sahf
dec
jecxz
test
movsb
outsb
dec
bound
push
adc
add
add
aam
mov
test
nop
sbb
xchg
add
add
test
add
jle
bound
adc
nop
push
push
and
adc
fcmovbe
out
push
mov
push
aad
push
adc
lret
js
push
xor
lret
int3
repnz
pop
scas
cld
imul
adc
sbb
sbb
and
push
mov
cmp
ret
add
test
rolb
test
shl
or
push
pop
or
jle
jle
add
movsb
fs
int3
dec
mov
aam
adc
sbb
mov
inc
inc
aad
test
sbb
fs
rol
adc
and
xchg
test
mov
dec
push
push
pop
push
adc
sbb
fisubl
sbbb
add
ret
mov
push
sbb
addb
and
jbe
dec
or
push
cli
mov
jle
test
mov
mov
mov
lods
add
inc
cli
imul
jp
int
mov
adc
or
pusha
sbb
sub
and
xor
push
imul
gs
add
dec
push
xchg
and
push
xchg
roll
mov
mulb
xchg
dec
and
lret
stos
push
or
test
add
insl
rcl
andb
pop
mov
mov
je
pop
mov
je
and
sub
subl
cmpsb
push
cmpb
adc
add
nop
outsb
fdivrs
ret
or
xchg
inc
or
out
dec
inc
jne
and
es
ret
mov
call
movsb
ljmp
int3
gs
adc
mov
and
rolb
add
adc
or
xchg
xor
jo
nop
pusha
jbe
sahf
add
xor
gs
mov
in
sub
ret
sti
mov
push
push
subb
das
nop
push
push
sbb
ljmp
fisubs
pop
outsb
insl
movsl
xchg
xchg
inc
xor
or
repnz
and
leave
sub
int3
fs
cltd
testb
test
xchg
rcr
movsb
pop
adc
jb
adc
or
fbld
test
in
insl
jle
les
adc
cli
es
inc
adc
jo
imul
or
xchg
inc
es
dec
je
cli
adc
adc
cs
push
andl
inc
and
fcmovb
add
pop
sar
sub
cltd
push
push
scas
add
dec
or
pop
es
or
cmp
pop
mov
addr16
or
push
push
movsl
in
inc
shlb
mov
sbb
loope
adc
pusha
bound
add
xchg
inc
loopne
pop
pop
cltd
cmp
lods
sbbb
push
shl
jb
or
cwtl
pop
es
imul
pusha
fsubl
mov
shrb
dec
loopne
jbe
xchg
dec
and
push
xchg
mov
add
pop
lcall
sub
scas
ds
scas
sub
and
fdivrs
pop
repnz
ss
and
push
push
add
out
adc
cli
xor
lcall
je
adc
inc
dec
add
loop
das
shl
enter
sbb
js
sub
aaa
loope
mov
xchg
shlb
cld
add
or
xchg
nop
pop
test
lods
add
mov
shlb
out
sub
xor
imulb
adc
pusha
cld
rorl
xchg
popf
adc
repnz
mov
enter
add
add
stos
push
inc
xchg
mov
add
insb
movsb
cmpsb
pop
out
add
push
cmp
outsb
cmc
and
and
and
and
mov
mov
shlb
dec
jl
push
xchg
push
sbb
out
sbb
int
or
loop
test
inc
push
clc
ss
xor
test
add
je
adc
mov
test
and
xchg
or
mov
data16
int3
dec
bound
ss
addb
sbb
inc
and
and
andl
or
dec
add
pop
clc
mov
add
mov
rolb
xchg
inc
add
adc
sbb
rclb
and
adc
or
mov
test
mov
inc
inc
fisubs
movsl
adc
outsb
stos
les
xlat
xchg
or
es
cltd
sbb
add
out
inc
incl
stos
push
or
jg
cld
fsubrl
add
enter
or
push
nop
jp
pop
add
dec
sbb
inc
pop
sahf
lcall
inc
dec
cmp
fs
pop
js
xor
xor
jb
hlt
adc
xchg
mov
hlt
xor
dec
loope
clc
push
push
add
rorl
mov
cmpsb
adc
xor
movsl
mov
push
dec
dec
jb
xor
mov
ljmp
xchg
sbb
adc
andl
push
bound
sub
loop
test
test
mov
sbbb
outsb
sub
sahf
movsb
push
and
mov
cwtl
test
pusha
aad
cmpsb
sbbb
test
push
and
add
jb
xor
add
fwait
lcall
sbb
or
enter
cltd
lock
les
push
rorb
out
and
add
fs
push
pop
fdivrs
lret
stos
cmp
mov
sub
mov
or
adc
lcall
inc
inc
orb
lea
aam
pop
push
or
lret
cmp
or
cmpsb
xor
adc
out
sahf
push
inc
shlb
inc
jo
sbb
adc
sub
inc
sub
add
ret
cs
or
scas
dec
or
and
mov
ljmp
orb
or
push
leavew
ljmp
xor
addb
faddp
inc
scas
inc
lock
push
cld
scas
and
push
lret
xor
outsb
inc
inc
adc
or
mov
add
insb
orl
push
test
sub
and
scas
or
in
mov
mov
sbb
or
scas
and
and
push
push
ds
xchg
dec
pop
and
adc
mov
xchg
add
sbb
xchg
jne
xchg
fs
or
leave
sub
dec
jbe
adc
xchg
and
mov
movsb
mov
popa
sbb
mov
mov
mov
pop
cmp
jle
or
and
dec
popa
adc
adc
jno
or
loopne
xor
sub
xchg
dec
add
lock
mov
cs
mov
push
inc
adc
xor
jne
or
xchg
mov
cs
mov
cmpsb
and
mov
mov
sub
cwtl
mov
pop
cmp
xchg
loopne
fistpll
pop
fidivl
inc
sub
jg
sub
add
dec
mov
add
sbb
inc
sbb
lret
sbbb
add
xchg
sbb
mov
les
dec
or
push
add
mov
xlat
fdivs
into
cmp
jb
sbb
incb
add
fistpl
fdivr
xor
jmp
fistpll
sbb
push
clc
mov
jmp
add
cmc
decl
or
add
loopne
insb
adc
or
cmp
xor
adc
fsubs
ljmp
aam
and
fdivrl
cli
adc
loop
es
js
sub
add
mov
push
xchg
mov
and
shlb
test
mov
aam
cmp
jo
xchg
gs
dec
and
push
fcompl
push
cli
orb
test
mov
andl
xchg
ret
or
lcall
jb
or
dec
lret
or
xchg
inc
push
sbb
sar
pop
test
test
mov
andl
dec
adc
ret
call
inc
xor
in
roll
pop
xor
cs
roll
rol
cmp
add
push
pusha
in
add
sub
or
enter
inc
cmpsb
repnz
xchg
mov
je
push
xchg
mov
and
add
fdivs
dec
jo
adc
out
dec
and
pop
popa
push
xchg
push
adc
cs
lock
popa
and
pop
push
jecxz
ret
xor
insb
data16
mov
add
int3
mov
inc
push
and
es
out
cmp
insb
shlb
dec
les
es
ret
jo
loop
adc
or
or
or
jne
xor
jo
leave
push
and
cmp
or
shrb
sbb
mov
pop
or
hlt
gs
shrl
mov
dec
add
and
mov
rol
test
xchg
insb
jb
mov
test
cwtl
or
out
shll
and
cmc
stos
mov
sbb
jae
imul
pop
push
cmp
adcb
push
andl
jbe
or
cmp
xchg
lret
and
loopne
push
dec
dec
mov
cltd
adc
push
xchg
sub
push
xor
inc
push
pop
and
sub
adc
pop
sbb
sbbl
sbb
inc
hlt
xchg
push
sbb
mov
lock
add
mov
into
sarb
adc
or
sub
cli
movsb
add
adc
shlb
mov
lea
xor
hlt
pop
daa
adc
in
test
aaa
and
pop
add
sbb
jb
fsubrl
aad
inc
imul
adc
mov
jbe
rorb
dec
inc
shll
outsb
adc
sub
in
test
add
sub
pop
xchg
xor
pop
int3
daa
std
dec
push
addl
jp
ljmp
rol
pop
mov
shl
cmpsb
outsl
or
scas
inc
mov
dec
popf
sub
xor
stos
aad
inc
push
or
push
sbb
dec
sbb
add
adc
cmp
mov
subb
nop
add
xchg
sub
and
shlb
mov
push
lcall
xor
or
sbb
or
ss
push
ss
ds
scas
fs
outsb
sahf
sbbb
pop
test
test
dec
push
push
mov
push
jb
fistl
js
xor
cmp
lret
adc
cli
xchg
xor
push
bound
aad
sub
out
fdivrl
ret
sbb
pop
add
mov
mov
mov
xor
lret
inc
cwtl
inc
sbb
dec
xchg
ss
fs
and
scas
movsb
scas
push
enter
lods
repnz
sbb
sti
jno
cmpb
scas
insb
dec
mov
lret
bound
dec
add
rolb
mov
mov
ret
xchg
sbb
xchg
adc
pushf
nop
in
xchg
notb
clc
push
xchg
enter
and
mov
add
mov
shlb
lret
cmpsb
sub
pop
and
or
ret
loop
cwtl
test
inc
mov
bound
xchg
das
cmpb
sub
adc
jae
xor
data16
push
add
jae
bound
test
or
dec
cmp
sbb
orl
ss
test
inc
or
mov
lock
mov
lret
pusha
sbb
sbb
xchg
push
sahf
add
loopne
pushf
les
insl
or
add
and
fdivrl
fdivrl
cwtl
pop
mov
lret
gs
and
test
pop
test
pop
into
mov
add
push
testb
or
and
add
cmp
ss
enter
mov
or
nop
pop
mov
lcall
adcl
add
mov
sub
mov
cs
add
inc
xor
pop
push
or
hlt
loopne
push
xchg
dec
and
xchg
data16
push
push
enter
inc
sub
jb
adc
ret
dec
pusha
sbb
pop
xchg
sub
push
add
pushf
shlb
inc
push
add
cmp
add
xchg
add
mov
inc
xlat
mov
pop
jl
mov
adc
pop
lods
sbb
popf
cltd
aam
cs
inc
or
jne
inc
jmp
lea
adc
shl
mov
jb
and
fdiv
mov
rol
shlb
fildl
jmp
push
inc
cmp
mov
roll
pop
cs
cld
mov
push
and
cmp
mov
push
inc
or
xor
scas
push
push
lods
movsl
mov
mov
xor
cmpsb
movsb
popaw
or
in
dec
addb
cwtl
mov
scas
ss
mov
test
xor
jl
cltd
push
aad
andl
dec
xchg
xor
and
test
outsb
test
test
mov
xchg
cli
insb
adc
lods
cmp
popa
mov
mov
xor
out
mov
xchg
sbb
xchg
aam
push
orl
push
mov
les
sub
shlb
or
enter
jb
les
ret
or
inc
add
xor
orb
mov
push
pop
ficoml
push
cwtl
bound
js
dec
cmpsb
es
idivb
push
add
xchg
shrb
rolb
test
sbb
pop
sub
push
test
fs
inc
inc
rclb
mov
inc
mov
add
es
fwait
aam
cs
or
xchg
les
loop
pop
adc
push
inc
xor
xor
push
scas
xchg
rcrl
insl
push
test
nop
nop
sub
sbb
xor
test
mov
xchg
mov
adc
sbbb
test
shlb
out
inc
sbbb
loop
insb
ret
int3
adc
clc
xor
movsl
push
data16
xor
inc
mov
mov
cmp
add
sahf
add
mov
or
xor
rclb
mov
adc
imul
subb
in
dec
adc
mov
pop
pop
xchg
js
aad
mov
xor
and
outsb
ficoml
cmp
hlt
mov
sub
cmpsb
sub
imul
cli
scas
mov
andb
mov
mov
testb
and
push
sbb
adc
adc
cmp
gs
cmpb
sub
lods
pop
ljmp
fdivrl
add
test
bound
in
cwtl
cli
xor
faddl
dec
adc
dec
xor
outsb
or
pusha
sbb
mov
cmp
push
push
xorl
insb
jo
mov
dec
pop
jp
int3
cmc
push
mov
xor
cmpb
mov
sub
movsb
nop
xchg
add
mov
shll
pop
dec
inc
pusha
sbb
stos
lods
adc
and
cmp
sub
xorl
pop
cmp
inc
xchg
lret
scas
xchg
xor
push
lcall
ja
mov
aaa
mov
mov
movsl
or
in
pop
lret
stos
ret
shrl
mov
fnstenv
nop
call
inc
in
push
sbb
push
push
and
adc
int
pop
enter
call
dec
sub
and
jb
adc
or
and
dec
jne
jmp
and
pusha
imul
mov
jne
or
add
test
adc
out
ficomps
adc
movsl
add
sub
mov
ss
fidivs
fbld
lret
pop
lods
xchg
push
or
xchg
adc
and
add
sub
adc
dec
mulb
push
inc
daa
add
test
or
dec
hlt
insl
adc
dec
das
push
in
and
arpl
pusha
cs
push
adcl
cmpsb
push
inc
divb
lcall
push
mov
int3
xchg
rcll
idiv
test
or
xor
fisubl
ds
add
les
xor
xor
push
test
loopne
jne
js
and
sbb
orl
je
lea
mov
xchg
int3
loopne
fsubrl
loop
and
xor
ret
mov
enter
sbb
fdivrs
inc
dec
movsb
cmp
and
push
sbb
loop
xchg
or
fidivs
aam
mov
add
push
test
adc
mov
in
out
push
dec
or
ljmp
or
jp
mov
sbb
dec
dec
loop
cwtl
enter
les
inc
dec
mov
or
subl
pop
add
push
leave
lcall
adc
pushf
xchg
pop
jb
push
cli
outsl
sbb
shrl
mov
or
loopne
sbb
dec
into
pushf
mov
xor
cmp
xor
cltd
rcl
test
lods
push
pop
mov
bound
je
or
stos
or
push
or
sbb
sbb
test
cli
rcrb
xor
adc
add
pop
cltd
dec
and
push
cmpsb
dec
xor
gs
add
das
call
and
add
cmp
lods
inc
push
add
call
loopne
lret
xor
add
rolb
rolb
and
add
mov
inc
or
inc
jbe
int3
adc
sub
in
jo
out
hlt
dec
sub
inc
pop
addb
dec
sub
xor
dec
inc
popa
loop
mov
insb
mov
scas
dec
add
push
stos
dec
cmp
ljmp
push
jle
lcall
jo
sub
sahf
mov
push
push
adc
mov
xor
xor
adc
int
add
dec
adc
mov
xchg
adc
out
add
or
faddl
push
hlt
repz
sbb
bound
ja
notb
loop
dec
mov
or
add
sbb
sub
mov
daa
movsl
mov
addb
ror
xchg
inc
insl
lret
add
and
cwtl
add
rorb
scas
add
xchg
mov
mov
mov
dec
xor
dec
sub
and
adcb
dec
rolb
xchg
mov
push
lods
sub
xchg
pushf
int3
sub
mov
sbb
nop
loop
mov
add
xchg
jno
fmull
adc
rorl
or
orl
mov
and
push
stos
or
adcl
push
pop
add
imul
adc
cmp
shlb
sbb
push
mov
rcrb
inc
mov
cs
push
mov
add
push
mov
pusha
nop
inc
xorl
mov
jo
push
mov
cmpsb
jle
notb
mov
pushf
fs
xchg
jbe
adc
sbb
rol
into
loope
cmp
cmpsb
xor
inc
sbb
and
pop
xchg
cmp
sub
and
push
push
ret
cld
jp
data16
adc
js
sbb
or
rcr
jbe
dec
xor
test
jl
adc
or
xor
cmp
fidivl
stos
dec
mov
shl
mov
jae
pop
adc
xor
cmp
dec
push
sub
lock
xchg
shrl
mov
adc
sub
movsb
cmp
int3
mov
pop
xchg
add
movsl
cld
and
add
test
mov
in
fnstcw
nop
adc
add
mov
xchg
inc
mov
cmovnp
ret
enter
adc
ja
add
fimuls
mov
or
es
mov
add
fwait
push
xor
movsl
jo
ljmp
rorb
in
adc
push
cmpb
xchg
adcb
or
divl
pop
mov
adc
xchg
sub
add
inc
lock
lock
roll
push
sub
adc
adc
or
cltd
notb
push
pop
sbb
or
adc
in
inc
loop
xor
lock
add
fs
and
or
inc
enter
add
jle
ds
loop
and
les
xor
fmuls
pusha
or
add
push
imul
cld
inc
sbb
sbb
xchg
xor
adc
and
xor
lock
mov
pop
loop
out
loopne
add
xor
add
ds
mov
mov
xor
add
test
rcl
jo
jbe
std
je
leave
adcb
in
or
stos
test
adc
jb
cmpsb
cli
ss
ss
pop
bound
pop
subl
jo
push
inc
pusha
xchg
lods
mov
outsb
insb
loop
push
push
push
cmp
mov
sub
inc
push
xchg
push
sub
dec
outsb
sbb
adc
adcb
adc
push
inc
push
and
push
xchg
sbb
insb
jo
and
and
cmc
scas
es
mov
mov
adc
add
dec
sarb
push
and
jo
cmp
dec
adc
insb
cmp
push
js
xchg
pop
bound
push
sahf
mov
loop
cltd
dec
inc
inc
and
orb
cs
or
out
push
stos
lret
lcall
test
jne
cmpsb
nop
or
xchg
cs
lock
ds
xchg
mov
adc
and
sub
lock
xor
loopne
push
jo
adcl
dec
cmpb
mov
clc
insb
lea
dec
test
hlt
aam
loopne
lret
push
inc
or
adc
roll
mov
rcrb
xchg
lret
dec
sub
push
xchg
xor
and
sub
inc
and
imul
outsl
sbb
mov
mov
dec
cltd
je
push
cmp
scas
cltd
ficoml
jo
mov
pop
adc
push
loopne
xchg
push
xchg
ds
pop
cmpsb
add
sub
sub
test
call
add
imul
push
xchg
adc
dec
jne
imul
inc
lods
inc
nop
pop
xor
in
jo
hlt
loop
mov
adc
movsl
sub
cmpsb
push
xchg
outsb
bound
pop
divb
cwtl
and
dec
orb
and
bnd
and
cmpl
scas
push
xor
cli
dec
mov
bound
insl
cmp
or
pop
movsb
dec
lock
cs
stos
mov
xchg
pop
xchg
outsb
pusha
es
push
or
jbe
sub
xchg
outsb
fs
lret
dec
or
data16
mov
xchg
icebp
adc
ret
xchg
inc
mov
orb
pop
or
adc
mov
dec
mov
xor
mov
nop
enter
xorb
push
inc
hlt
pop
push
pop
and
nop
ds
mov
mov
sbb
mov
lods
add
sub
daa
ljmp
push
adc
test
inc
fisubs
dec
les
jbe
xchg
sbb
and
clc
or
jp
add
add
mov
pop
dec
into
hlt
cltd
mov
push
jp
mov
les
add
sbb
xchg
sarl
xchg
push
mov
xchg
cmp
cld
incb
and
inc
mov
test
push
pop
notb
in
mov
xor
xchg
xor
pop
xor
and
test
sub
and
xchg
sbbb
shlb
leave
pop
sarb
movsl
inc
add
jp
dec
mov
push
adc
sub
sub
or
pushf
or
inc
gs
ljmp
mov
dec
pop
popa
add
xor
mov
add
popf
add
sbb
imul
ret
imul
adc
push
faddl
sub
dec
jb
pop
repnz
mov
push
enter
or
inc
sub
dec
add
or
xchg
lret
enter
lea
adc
xchg
ret
pop
loopne
data16
push
cld
mov
les
sbb
sub
or
mov
mov
sbb
int
cmpsb
in
js
cmp
sbb
add
or
or
lods
push
cmp
es
inc
dec
enter
add
push
mov
adc
inc
xor
shlb
testb
sbbb
imul
push
sbbb
in
les
jecxz
and
rcrb
cld
sbb
xchg
sub
mov
jl
add
xor
pusha
mov
add
outsb
push
movsl
inc
xchg
ret
add
or
in
lods
popa
xchg
add
fs
mov
and
mov
jmp
dec
add
shl
js
mov
cltd
aam
les
rcrb
dec
dec
insl
sbb
test
mov
hlt
inc
fs
inc
push
pop
sahf
adc
fs
or
mov
ret
movsl
and
sub
and
cs
adc
xchg
sub
xor
xor
lcall
dec
fsubrp
js
and
out
inc
and
cltd
fcmovnb
test
push
test
and
xor
and
mov
popa
and
bound
cwtl
add
or
xor
dec
out
add
into
and
sbb
sbbb
inc
dec
cmp
cmp
enter
push
stos
js
pop
xor
mov
xor
testb
shrb
imulb
mov
push
stc
clc
push
and
xor
adc
andb
mov
pop
cmp
xchg
sub
pop
or
or
mov
mov
ret
ficoms
sbb
push
xchg
mov
mov
mov
mov
in
xor
inc
rclb
int3
push
int
sbb
adc
test
pop
jo
push
sub
or
lods
rolb
test
jne
cmp
dec
inc
sbb
mov
pop
or
sbb
hlt
int3
jne
add
adc
cltd
xchg
xor
and
dec
orb
adc
xlat
pop
repnz
orb
mov
fs
das
xchg
shrb
add
cmpsb
add
inc
sbb
ds
lods
test
or
bound
or
int3
int3
push
cli
aam
and
rcll
imul
sbb
push
dec
xchg
dec
sbb
scas
mov
adc
orb
push
fsts
xchg
repnz
adcl
mov
loopne
or
clc
aad
bound
shrl
adc
in
cs
push
xor
clc
push
push
xchg
jo
je
xchg
mov
ljmp
ret
pop
hlt
or
notb
xor
sbbl
jne
pusha
push
or
lock
inc
push
mov
cwtl
ret
dec
sub
fdivs
push
and
hlt
mov
sarb
add
sbb
jp
adc
aam
xchg
pop
movsb
mov
dec
pop
fsubr
pusha
add
inc
call
int3
sbb
pusha
and
loopne
mov
xchg
cwtl
jo,pn
daa
push
into
shlb
xchg
sahf
or
jl
push
test
and
and
add
xor
aam
or
dec
mov
rcll
inc
out
pop
adc
pop
and
mov
mov
jbe
mov
xor
jo
mov
loop
mov
adc
push
and
cmp
or
adc
xchg
mov
cmpsl
loope
jle
push
dec
stos
test
inc
cmpsb
nop
mov
or
bound
shl
popa
add
loop
push
popf
and
ds
in
adc
dec
push
dec
scas
push
and
dec
mov
lret
sub
sub
or
xor
int3
mov
mov
cmp
je
mov
mov
je
sbbl
fs
ret
call
add
test
jg
test
ja
adc
pushf
mov
mov
int3
fcoms
add
xchg
dec
fnsave
adc
test
push
and
dec
shrb
add
pop
fdivs
ret
push
add
push
xchg
mov
inc
enter
or
xor
push
testb
cwtl
push
sub
jb
or
mov
push
inc
push
push
pushf
push
add
aad
sub
add
inc
sub
outsb
lret
shll
inc
mov
call
push
push
push
mov
sbb
loop
push
pop
dec
in
push
dec
cmp
cmc
add
pop
mov
or
add
lret
sbb
ljmp
add
inc
mov
xchg
sbb
pusha
fiaddl
mov
adc
jb
lcall
addl
push
ret
test
mov
les
enter
sub
mov
xchg
mov
hlt
jne
int3
je
adc
das
mov
outsb
nop
les
or
pushf
movsb
push
xchg
adc
add
hlt
test
adc
and
inc
pusha
hlt
sbb
dec
xor
mov
and
imul
stos
mov
sbb
lods
test
test
aam
mov
xor
adc
mov
shlb
jp
test
adc
inc
mov
add
push
scas
shlw
and
lods
shlb
or
bound
je
cmc
and
cmp
jbe
add
adc
test
loop
and
rolb
in
adcb
or
or
mul
add
dec
mov
ljmp
jp
shrb
mov
mov
and
xchg
or
jo
lods
test
test
and
stos
adc
pusha
inc
ljmp
push
rclb
test
cmpsb
shl
data16
push
test
mov
ror
inc
xor
cbtw
dec
test
imul
mov
nop
jp
and
loop
cmp
sub
scas
dec
inc
sub
push
or
cmp
inc
add
inc
sbb
mov
cmpsl
fcoml
int3
ret
adc
push
insb
jns
test
in
mov
dec
into
scas
sbb
inc
cmp
and
lods
nop
sbb
pop
sbb
add
es
xchg
cmp
mov
and
aam
les
inc
pop
pushf
outsl
jno,pn
or
push
inc
sbb
data16
leave
pop
test
rcr
in
fcompl
ret
sub
pop
lods
push
lcall
sub
fisttps
daa
adcb
xor
orb
data16
xchg
push
fiadds
dec
mov
cli
cmp
mov
mov
sbbl
xor
dec
cmp
bound
mov
inc
insl
sub
cwtl
sbb
add
test
ret
or
je
lret
aad
and
addb
push
mov
stos
cli
dec
lods
inc
adc
sbb
shlb
cmp
mov
xchg
fstps
insb
enter
push
xor
lods
add
fs
leave
inc
cmp
rcrb
and
call
daa
out
sbb
adc
loop
stos
inc
daa
mov
sbb
mov
add
mov
push
jo
add
jb
and
xchg
or
or
adc
jmp
adc
xchg
mov
mov
repnz
xor
clc
add
test
scas
ljmp
shlb
inc
adc
inc
push
pop
xor
add
mov
xchg
dec
std
xchg
fs
mov
or
sahf
leave
sub
sahf
jb
and
dec
xchg
and
lret
inc
add
stos
dec
test
add
adc
adc
popa
xor
push
subl
movb
mov
pusha
push
sahf
mov
rorb
andb
fld1
insl
mov
shlb
aam
pop
ss
adc
adc
inc
and
xor
and
lods
lcall
inc
inc
mov
and
dec
and
xchg
push
adc
cmpsb
sbb
dec
inc
jle
and
sbb
test
or
mov
sub
and
test
inc
mov
jb
pusha
mov
lcall
jns
imul
rorl
shr
jo
add
rorb
out
or
xchg
ret
divb
jl
inc
add
jp
xor
stos
rclb
out
fisttps
add
enter
cwtl
sub
add
adc
test
or
hlt
js
mov
pop
xchg
xor
push
or
dec
push
or
dec
mov
add
movb
push
adc
test
sub
fs
es
push
xchg
enter
movsb
mov
or
icebp
sbb
push
repnz
cmpsb
insb
xchg
jl
movsb
nop
rorb
data16
aam
mov
test
xchg
movsl
pop
scas
xor
push
ds
dec
daa
dec
jb
mov
push
leave
sbb
out
dec
ljmp
inc
shlb
movsb
mov
add
inc
loopne
xchg
push
stos
sub
or
push
push
xor
inc
shrb
sbb
push
rorb
dec
sbb
hlt
imul
mov
fdivl
ljmp
inc
xchg
push
pop
sbb
add
dec
fs
mov
or
or
sub
mov
test
jl
or
sbb
add
inc
shrl
inc
or
in
nop
popa
or
xor
push
and
ret
stos
mov
dec
cmp
movsb
insl
data16
nop
xchg
ret
cli
cmp
cwtl
jo
or
test
test
inc
arpl
or
rorb
test
pop
lods
push
dec
jp
cli
and
and
addl
push
mov
pop
aad
lcall
and
add
and
ret
cltd
cli
stos
or
mov
cmp
lcall
repnz
ljmp
dec
mov
xor
jle
push
sbb
andl
pop
xorb
xchg
sub
sbb
pop
pop
dec
xor
lock
add
and
mov
xorb
cld
sub
mov
pop
cmp
jb
shrl
dec
movsb
sbb
add
or
pusha
and
test
xchg
sahf
dec
dec
es
adc
ret
pop
adc
sbb
push
dec
and
test
repnz
xor
xchg
ds
cmc
mov
clc
scas
test
xor
xchg
scas
add
test
insl
adc
and
mov
mov
loop
out
or
add
fs
sbb
add
mov
es
shll
push
mov
xor
push
pop
lods
and
mov
hlt
mov
fwait
jo
push
xor
andl
inc
sub
xor
shll
xchg
add
or
call
orl
loopne
or
jbe
sub
xchg
leave
mov
call
lods
mov
addb
pop
es
pusha
cmp
loop
es
push
lcall
subl
sbb
dec
les
xor
or
pop
add
push
or
push
or
insl
mov
add
and
pop
jl
add
ss
movsb
push
cmc
cmp
xchg
pop
xlat
xchg
addr16
cmp
clc
rclb
mov
sub
popa
xchg
mov
and
loop
mov
adc
push
es
ds
or
xor
cmp
movsb
jp
adcl
fcomps
xor
and
lods
mov
popa
add
mov
lcall
dec
inc
ljmp
push
mov
xor
or
sub
out
andl
pop
in
sahf
dec
jecxz
shlb
push
call
cmpsb
jo
push
lret
dec
repnz
mov
cmc
xchg
xchg
sbb
cmpsl
push
ss
aam
or
je
add
inc
or
lock
fsubrs
stos
xchg
push
and
xchg
insb
cmpsl
shlb
rolb
dec
add
out
lcall
cmp
lods
jo
adc
push
mov
push
aam
and
into
add
nop
xchg
gs
sbb
loopne
cmpsb
cltd
mov
ret
pusha
cld
loope
or
stos
dec
dec
mov
add
add
jns
bound
add
sub
mov
sbb
pop
outsb
loop
addb
fbld
xor
mov
cld
xor
sbb
add
pushf
mov
pop
arpl
lcall
test
loop
inc
or
test
push
push
push
mov
pop
xor
push
outsb
test
and
adcb
push
int
xchg
and
push
xchg
mov
jo
mov
push
sbb
push
xor
and
push
inc
nop
leave
les
sarb
cli
xchg
inc
sub
nop
imul
movsb
sbbb
xor
push
jo
push
push
push
sub
hlt
and
adcl
lret
es
into
mov
clc
sub
add
test
lret
inc
leave
or
pusha
mov
addb
inc
test
nop
and
mov
jno
mov
loop
inc
test
pushf
xor
popa
add
xor
test
dec
and
gs
rclb
call
dec
dec
pop
rclb
mov
pusha
adcb
or
je
nop
jo
adc
test
dec
xchg
test
mov
repnz
popa
lods
add
inc
lcall
cmc
bound
inc
add
fadds
loopne
imul
jbe
mov
mov
in
and
int3
and
clc
cmp
push
pop
push
xor
data16
movl
mov
leave
hlt
xchg
add
adc
sbb
adc
mov
mov
add
push
xchg
push
shlb
sbb
js
out
data16
dec
pusha
mov
lret
xor
hlt
jp
call
lret
xor
xor
lods
add
xchg
sbbb
test
adcb
jb
xchg
les
addb
push
pusha
mov
cmp
mov
push
push
bound
pop
pop
jo
sbb
push
jo
fdivl
cmp
xchg
insl
es
mov
stos
add
cmp
mov
push
xor
mov
mov
xchg
sub
mov
andl
push
dec
mov
dec
call
cs
sbb
data16
jmp
and
pop
jb
sbb
data16
pop
pop
adc
gs
adc
int3
adc
add
dec
push
xor
add
enter
data16
adcl
les
rclb
push
lcall
lret
rcrl
lods
mov
push
push
and
mov
subl
test
push
mov
or
add
pushf
adc
stos
add
insl
adc
dec
or
add
push
push
lods
add
pop
or
jmp
mov
test
aam
add
sbb
jle
fadd
jb
cs
sub
inc
in
and
push
cmp
push
pushf
add
mov
and
ret
sbb
adc
mov
out
mov
dec
inc
fsub
cwtl
dec
jno
bound
dec
mov
in
test
icebp
xor
xor
dec
loopne
inc
test
and
push
fidivl
add
or
and
xchg
adc
stos
movsb
rol
ljmp
push
inc
or
pusha
xchg
les
xchg
into
addl
and
add
into
or
mov
loope
add
or
ss
add
cwtl
xchg
out
lock
or
mov
ljmp
and
adcb
sub
subb
popa
push
sbb
into
jbe
mov
cmpsl
call
mov
mov
push
and
add
lret
xor
cmp
insb
sbb
cltd
mov
leave
xorb
cmp
jle
les
sub
ret
push
add
dec
ret
call
and
scas
and
aad
aaa
loop
outsb
pop
rorl
xchg
inc
adc
add
xor
mov
jnp
in
jg
xor
iret
sbb
cmp
dec
push
daa
xor
outsl
inc
adc
mov
xchg
cmp
xchg
jne
mov
sbb
push
dec
cmp
into
rclb
xorl
or
out
adc
xor
mov
adc
xchg
shl
pop
mov
pusha
adc
sub
dec
add
lcall
mov
bound
xchg
cmpb
dec
fs
mov
pop
sub
inc
inc
test
or
xor
and
clc
sub
and
push
and
add
cmp
mov
and
add
hlt
adc
bound
ds
push
dec
push
xchg
xchg
rorb
xchg
pop
aam
mov
push
ret
dec
data16
xor
shlb
xchg
sbb
mov
or
sub
pop
hlt
nop
pushf
dec
das
or
sbb
mov
adc
loop
ret
dec
test
add
lret
push
addr16
pop
and
push
add
push
push
loopne
pop
and
add
pop
or
push
negb
cmpsb
fisubl
add
jecxz
sub
xor
jecxz
push
add
nop
aam
or
xor
cltd
sub
adc
xchg
jl
test
imul
adcl
push
cli
int3
pusha
faddl
ret
add
insb
sbb
pop
xchg
xor
push
xor
ret
xchg
cmp
int3
or
lods
pop
movsb
int3
dec
je
enter
out
test
push
adc
push
mov
lock
xchg
and
inc
inc
mov
cwtl
add
popa
add
mov
imul
or
test
pusha
push
pusha
mov
xchg
orb
add
es
push
ss
pop
dec
test
xchg
sub
mov
es
add
pusha
hlt
bound
jl
dec
loopne
mov
sbb
add
mov
inc
test
pop
call
cli
inc
nop
dec
xorb
lods
insl
loop
sbb
popa
adc
or
fcoms
or
xor
ljmp
loopne
or
dec
mov
push
sub
cwtl
inc
jo
mov
sbbb
xor
xor
inc
outsl
add
or
inc
ret
subl
push
mov
or
outsb
dec
loop
adc
sbb
cmp
add
fimull
xor
or
xchg
shlb
mov
orl
add
pop
mov
ret
or
or
jo
clc
cli
sub
or
sbb
pop
pop
dec
sbb
ficoml
aam
pop
lock
in
push
push
shl
push
xchg
incl
mov
ljmp
sub
xchg
mov
out
push
popa
cmp
xchg
aad
test
add
insb
mov
nop
clc
pusha
inc
add
xchg
insb
cli
pusha
and
orb
dec
or
push
pop
call
pusha
adc
jb
pop
mov
test
inc
mov
and
mov
mov
push
outsb
sbb
cmp
and
stos
cli
adcb
mov
mov
fdiv
push
in
adc
inc
adc
cs
adc
jo
sub
rolb
mov
fs
dec
sub
inc
or
mov
mov
adc
push
pop
cmp
test
pop
and
dec
movsb
push
sahf
sub
jbe
lcall
push
aad
pusha
or
or
xchg
dec
les
cwtl
fidivs
inc
sbb
add
push
xor
sbb
xchg
ret
test
lock
mov
xchg
add
cmp
ds
rorb
je
and
aam
adc
adc
pop
clc
cmp
stos
addb
mov
xchg
xchg
movsb
push
shlb
test
lret
mov
insl
mov
popa
push
add
les
loope
adc
push
cld
lret
lock
aam
xchg
call
and
or
add
cltd
sub
in
cwtl
mov
add
push
imulb
add
jl
ret
shlb
lods
dec
mov
mov
addb
test
sub
cmp
sub
cltd
mov
cld
jbe
push
cmp
rclb
sbb
jle
sbb
or
sbb
cmp
pop
pushw
lret
movsb
dec
jp
movsb
ret
mov
add
fdivs
push
call
sbb
insb
je
fwait
cmp
je
sub
add
inc
add
sub
cmpsb
ror
and
rclb
mov
orb
and
dec
lods
xchg
xchg
rorl
out
js
fs
ss
or
push
xlat
push
loop
pop
es
xor
je
lock
sbb
adc
aad
insb
leave
push
rclb
sbb
shl
pop
push
or
int3
pop
lcall
cmp
outsb
test
jbe
xor
adc
insb
push
and
add
cmpsb
cmpsb
cwtl
mov
add
mov
jle
xor
push
cli
pop
int
xchg
inc
jp
cwtl
mov
pushf
jns
ret
or
subb
cli
ljmp
aas
xchg
push
xlat
mov
loop
ror
or
gs
sbb
sub
test
test
test
add
arpl
xor
rorb
ret
shlb
xor
pop
fs
and
inc
adc
fisttps
rcll
or
cwtl
add
pop
pop
ds
test
or
adcb
stos
mov
push
mov
push
lcall
cli
xorb
push
sub
adc
es
mov
aam
jl
xchg
mov
jle
js
and
push
xor
in
or
pop
sbb
jp
and
sub
and
jbe
pop
es
xchg
dec
xor
push
or
dec
ljmp
clc
dec
pop
dec
or
jl
or
cs
xor
add
or
out
xchg
movsb
sbb
or
push
cmp
rcrl
out
mov
pop
cmpsl
add
mov
push
sbb
inc
sub
mov
cs
loop
sub
and
inc
or
push
stos
push
rorb
sbb
sbb
add
mov
ret
push
es
inc
mov
outsb
sbb
aam
push
cmpb
cmpsb
test
pusha
cmp
or
push
inc
cmpsb
sbbb
xor
jb
push
cmp
jno
adc
ret
test
loope
pop
add
cltd
or
add
xor
adc
xchg
jns
adc
ss
mov
ljmp
adcl
rclb
adc
dec
and
mov
xchg
xchg
adc
pushf
or
movsb
xchg
bound
ror
cmpsb
in
fcoml
add
pusha
aad
mov
cmp
sbb
ss
mov
xor
pusha
dec
push
dec
cmp
lock
jle
adc
fcmovb
or
add
push
push
test
add
mov
xchg
nop
add
fisttps
lea
aad
xchg
push
fwait
cmp
xchg
pop
xchg
addl
xor
ds
ficoml
inc
xor
cmc
sub
push
mov
xchg
push
pop
fdivr
and
push
mov
dec
push
mov
insb
inc
pusha
out
and
mov
push
xchg
call
js
sbb
fs
lret
sub
ficompl
fcoml
dec
sub
xor
jle
mov
out
rcll
mov
mov
lods
sub
or
push
push
inc
add
movsl
xor
das
sbbb
out
pushf
pop
dec
mov
incl
cmp
xchg
mov
data16
add
xor
clc
push
pop
inc
jo
and
cmp
ss
push
mov
adc
rcrb
add
lcall
dec
xorb
inc
pop
sbb
fcoml
mov
dec
mov
push
adc
dec
aas
add
aad
inc
adc
ret
pop
fidivs
xchg
sbb
inc
mov
cmp
inc
cmp
roll
xor
and
mov
push
adc
push
in
sub
or
rorl
nop
or
sub
mov
mov
push
sbb
sub
pusha
in
ret
add
lret
sbb
mov
push
inc
mov
xchg
test
mov
pop
adc
outsb
shrl
cmp
adc
aam
push
dec
sub
cmp
pop
or
jne
pusha
out
dec
push
push
cmpsb
dec
mov
cli
enter
fs
clc
and
rcrb
push
pop
mov
xchg
dec
or
scas
adc
aad
movsl
imulb
ret
pop
mov
push
jp
and
popa
xor
xchg
and
add
add
xchg
cmp
and
bnd
or
cwtl
or
push
nop
push
sbb
out
cmp
adcl
test
push
out
add
inc
jle
lock
lods
mov
hlt
test
dec
test
div
test
aam
rcl
add
push
pop
cmpsl
sub
jb
and
scas
push
or
je
mov
dec
sub
push
jo
ret
push
movsl
dec
loop
je
add
add
cli
fcomps
add
inc
cmp
mov
insb
cwtl
cs
or
and
mov
or
xchg
pop
jno
lock
push
inc
inc
popa
add
jo
xor
pop
adc
repnz
bound
int3
xor
and
xor
add
xchg
cmc
inc
and
mov
lock
mov
dec
cmp
cltd
adc
mov
loop
subl
cs
adcl
cmc
xor
fs
cmp
xchg
popa
push
xorb
dec
inc
add
add
jbe
sub
aaa
and
push
xchg
mov
pushf
mov
mov
xchg
or
jp
or
and
test
fisubl
sbb
jns
fidivrs
add
or
sbb
dec
push
dec
sub
pop
dec
cmp
into
icebp
pusha
cli
aaa
ljmp
jbe
xlat
add
dec
mov
ljmp
push
rcrb
repz
rclb
scas
popf
cs
and
cmc
add
fcomps
adc
push
mov
adcb
cmpsb
adc
lods
scas
sbb
and
push
mov
pusha
addl
orl
add
adcb
inc
add
xor
add
enter
sbb
add
xor
ds
pop
adc
adc
push
push
cmp
jbe
aad
mov
and
in
jb
dec
nop
push
das
or
shrb
push
cmp
sbb
aad
shlb
dec
or
and
dec
mov
aad
sbb
cli
mov
mov
inc
sbb
and
inc
lret
loopne
jb
push
and
cwtl
mov
mov
jl
es
sahf
pop
push
pusha
or
adc
movsb
pusha
mov
lods
addb
ret
pusha
push
les
inc
popf
cmpsb
cmp
rcll
sbbb
jmp
leave
loope
or
mov
xor
ss
icebp
and
pop
inc
les
imul
xor
xchg
inc
and
pop
fiadds
or
push
cmpsb
outsb
cwtl
adcb
test
or
cwtl
into
dec
dec
or
xor
into
sub
inc
or
and
aam
and
add
jle
gs
add
mov
pop
sbb
add
add
test
cs
ret
xor
pushf
xchg
adc
jb
adc
sub
sahf
mov
nop
mov
push
lock
push
push
and
push
in
andb
dec
sub
mov
les
imul
and
shlb
shlb
adc
aad
sub
xchg
mov
movl
inc
and
xchg
test
adc
sbb
pop
xchg
push
xchg
mov
mov
bound
xchg
imul
test
jbe
test
inc
cs
mov
and
inc
push
or
jo
ss
inc
lock
push
push
xchg
xchg
adc
mov
add
sbb
and
call
xchg
cltd
jo
sahf
mov
mov
imul
lret
cmp
and
dec
call
sub
xor
cmp
xor
sub
push
in
jns
dec
cmp
or
fs
nop
ficompl
enter
pusha
and
add
push
cmp
cltd
dec
sub
push
mov
xor
mov
adcl
in
cmp
or
xor
sbbb
ret
shlb
add
in
ss
adc
or
add
or
sbb
add
ljmp
pop
movsb
xor
push
adc
inc
jecxz,pn
loop
sbb
lods
adc
jle
add
movsb
test
fdivr
or
inc
popf
mov
or
or
and
dec
inc
push
xchg
push
loopne
ds
push
test
inc
adcb
movsl
nop
push
mov
jno
aaa
mov
pusha
inc
mov
and
sbb
test
xchg
mov
dec
add
or
xchg
or
sbb
popf
ret
sbb
or
xor
pop
push
xchg
int3
sub
mov
aam
adcb
call
cli
cwtl
or
cltd
inc
xor
push
mov
add
mov
adc
dec
sbb
jge
fisubl
andl
jns
fs
cs
mov
mov
or
xchg
scas
adc
xchg
adc
xorb
and
mov
xor
xor
xorb
sbb
push
ret
inc
and
mov
popa
add
inc
and
or
or
andb
pushf
inc
and
sbb
dec
jecxz
push
adc
push
inc
adc
add
sub
pushf
cmp
add
adc
sub
add
or
test
jmp
movsb
pop
test
pop
insb
mov
push
daa
mov
out
xor
addr16
sub
sub
cmpsb
xchg
scas
outsb
dec
mov
es
fwait
testb
dec
xchg
lret
loop
pop
sbb
push
add
les
ds
es
or
movsl
mov
daa
lds
inc
lcall
sbb
mov
xor
jp
mov
movsl
and
adc
cmpsb
popa
jo
pusha
fcompl
adc
xchg
mov
push
lcall
mov
fs
add
call
cmc
fidivs
push
inc
je
add
sbb
sbb
or
add
rorb
shr
cmp
jne
test
cs
and
sub
add
leave
mov
mov
sub
shl
rclb
orb
mov
test
retw
add
lret
mov
hlt
orb
jl
xchg
add
or
inc
dec
jle
add
loopne
push
xchg
xchg
sbb
scas
pusha
mov
nop
mov
mov
sbb
dec
mov
dec
notb
push
data16
xor
lcall
test
loop
int3
xor
push
push
sbb
out
fs
aaa
xor
adc
rolb
push
ficomps
push
leave
jp
aaa
ficoms
push
test
scas
sbbl
lock
std
repnz
sbb
adc
rorl
inc
add
jb
out
xlat
mov
adc
clc
push
push
add
lret
inc
pop
dec
mov
hlt
mov
fldenv
fs
add
add
sub
mov
test
or
add
inc
sub
lcall
sub
ljmp
or
sub
dec
or
push
push
or
les
inc
cmp
adc
lret
inc
in
dec
test
imul
add
iret
adc
je
test
arpl
xchg
fs
adc
push
test
sbb
pushf
xor
pusha
push
inc
mov
popf
inc
and
jle,pt
push
cs
aam
jno
lret
in
pop
mov
pop
cs
jle
dec
sbb
xchg
cmp
inc
shll
loopne
xor
pop
add
jle
test
or
cltd
stos
and
mov
mov
aam
bound
or
dec
cs
xchg
insl
loop
adc
push
jbe
mov
cmpsl
dec
mov
lret
sub
adc
or
adc
clc
fs
jb
push
jns
dec
jb
inc
imul
aam
push
jbe
mov
dec
les
push
enter
orb
in
mov
add
rclb
dec
mov
popa
and
bound
inc
popa
fidivl
xchg
add
rorb
cli
rorb
xor
xor
xchg
inc
sub
xor
ss
aam
sbbl
push
test
pusha
xor
ds
scas
inc
mov
or
xchg
pop
adc
loopne
clc
scas
mov
dec
es
xor
inc
sub
add
and
dec
dec
shlb
sbbb
call
movsb
adc
nop
pusha
mov
adc
nop
dec
inc
pop
cltd
ljmp
cltd
rclb
lcall
add
nop
or
jmp
outsb
add
popa
adc
push
jo
sbb
inc
sub
rclb
and
pushf
cmpsb
faddl
xchg
mov
add
fbld
inc
lret
addl
mov
add
fistpl
push
push
push
out
xor
xchg
test
jne
mov
sbb
mov
sbb
pop
pusha
dec
add
movsb
mov
rolb
jbe
cs
pop
jns
in
movb
mov
mulb
xor
cwtl
pop
fs
or
sbbb
filds
lock
test
rclb
hlt
jbe
mov
mov
cwtl
lret
hlt
into
or
test
movsl
in
clc
faddl
push
inc
mov
ss
outsb
adc
xchg
push
orl
jp
jbe
cli
pushl
paddd
mov
repnz
popf
cmp
mov
cmpsl
cmp
imul
xchg
pop
or
loope,pn
fnstenv
add
mov
lods
les
inc
mov
fidivl
orl
shlb
mov
loop
dec
mov
add
add
push
inc
or
sbb
test
dec
push
xchg
mov
fsubrp
mov
ss
or
mov
mov
adc
adc
jbe
add
nop
lret
or
xchg
sbb
dec
mov
pushf
sbb
adc
adc
pop
or
movsl
add
or
mov
ss
xor
pushf
push
popf
add
shl
and
dec
inc
sbb
mov
cmp
and
sbb
adc
mov
xorb
adc
ror
xor
pushf
pushf
call
adc
mov
add
add
xchg
test
insb
push
testb
loopne
cmp
inc
and
cmp
dec
dec
cltd
subb
test
pop
mov
inc
add
xor
mov
xchg
inc
and
in
out
dec
sub
cwtl
stos
xchg
xor
popa
bound
sbb
ret
xor
dec
bound
movlps
pop
inc
je
pusha
mov
fdivs
pusha
sub
pop
aam
mov
push
lret
sub
adc
rclb
push
pushf
ret
jae
cld
mov
mov
adc
and
mov
and
cmpsb
xchg
or
testb
add
aam
dec
push
and
add
xor
or
lret
adc
scas
cwtl
fs
jp
cmp
xchg
dec
inc
cmp
sahf
cmp
int3
out
sub
add
and
cs
sub
mov
andb
add
fimull
jo
stos
sarb
fsubrl
leave
push
sub
sub
push
add
add
jp
mov
ficompl
add
out
out
sbb
xchg
cmp
sbb
push
mov
ds
mov
adc
inc
inc
inc
test
dec
test
xchg
dec
cwtl
or
cmc
pushf
inc
test
dec
sbb
pop
outsb
mov
add
pop
mov
nop
ljmp
fs
or
add
sub
inc
ret
push
sbb
leave
push
push
es
stos
mov
lret
inc
mov
adc
inc
xor
xchg
sub
jp
push
push
dec
scas
pop
pop
cmc
mov
jnp
mov
add
aaa
clc
pop
add
xor
popa
pop
popa
lods
mov
and
push
inc
pusha
movb
cmc
or
xor
adc
sub
aaa
push
or
xor
lahf
sub
aam
mov
lret
shll
fdiv
adc
popa
xchg
cli
mov
xor
aad
dec
xor
sbb
or
and
test
addr16
popa
xchg
xor
mov
sub
mov
sbb
push
loopne
mov
adc
mov
or
lock
mov
sbb
xor
adc
es
sahf
icebp
cmp
mov
mov
xor
fwait
or
js
jecxz
call
dec
cs
movsb
in
add
test
mov
inc
adc
xor
test
xchg
add
pusha
cltd
in
movsb
adc
das
loope
outsb
aam
push
mov
pop
inc
mov
rcr
stos
rolb
add
push
pusha
mov
add
adc
mov
lret
xchg
xor
insb
jbe
mov
mov
bound
add
or
rolb
adc
pop
test
mov
js
adc
push
mov
add
adc
mov
cwtl
ss
ret
xchg
inc
sub
add
xor
arpl
or
push
testl
inc
addl
add
pusha
mov
shll
xor
or
dec
pusha
sub
fimuls
int
mov
les
fisubrs
addl
xchg
inc
sub
mov
sbb
inc
add
inc
pop
ljmp
fcmovbe
dec
in
inc
sub
fcoml
in
mov
cltd
xchg
subb
add
and
es
test
es
sub
das
sub
push
ret
cmp
pop
xor
push
and
pusha
adc
add
lretw
dec
or
push
in
jnp
pop
inc
mov
jecxz
enter
loop
cltd
sbb
cmpsb
and
sub
sbb
and
xor
pop
mov
inc
cmp
and
adc
in
inc
push
mov
int3
repnz
orb
mov
mov
sub
into
lcall
dec
mov
rorb
rorl
sbb
or
out
or
shlb
lret
bound
mov
imul
or
rcll
push
push
pop
js
sub
fidivrl
sub
inc
cwtl
shlb
movsb
les
or
sbb
xchg
stos
aad
mov
mov
adcb
inc
ljmp
dec
movb
adc
inc
push
xor
sub
js
push
inc
mov
xor
xor
js
sarb
xor
lret
sub
push
dec
sub
cwtl
mov
push
and
outsl
pop
or
insb
cmp
fmul
add
out
int3
hlt
cmpsb
call
cwtl
push
outsb
sbb
rorl
loop
sbb
cmp
adc
pop
shll
jo
fcoms
adc
and
xorb
sahf
sub
pusha
sbb
sbb
aam
stos
xorl
adc
mov
lcall
jo
sub
bound
xchg
loop
adc
push
leave
adc
dec
sub
adcb
cmp
adc
inc
add
ret
add
add
mov
in
pop
andb
ficompl
mov
and
sbb
lret
push
cwtl
ret
bound
cmp
imul
data16
ror
lods
xchg
in
xchg
mov
add
mov
or
mov
mov
adc
mov
xor
test
leave
sahf
mov
call
xor
adc
xchg
decb
dec
push
sbb
clc
inc
xor
pop
mov
adc
ret
mov
jns
or
xchg
sbb
push
movsl
and
add
gs
dec
adc
xchg
pusha
or
pop
hlt
push
add
and
mov
add
mov
test
and
push
xchg
push
xchg
dec
jbe
jne
test
push
dec
add
fdivs
mov
pop
xor
mov
adc
shr
xor
dec
and
es
mov
push
mov
jl,pt
push
pop
mov
stos
aam
xchg
loopne
loop
insl
or
add
fdivs
ret
rol
or
dec
inc
lock
cmp
sahf
test
aam
pop
dec
cmp
lcall
cmpb
cmp
into
cmp
add
or
or
shll
out
hlt
mov
or
fimull
push
popa
push
fs
add
nop
pusha
jp
mov
mov
aam
mov
popl
xor
ficoms
call
sbb
xchg
adc
sbb
pop
adcb
push
and
mov
mov
jl
add
adc
push
xor
cs
and
jp
mov
inc
shrb
xchg
ljmp
mov
adc
lock
add
pop
jne
in
add
inc
jb
xchg
pop
aad
cmpb
scas
pop
sbb
jp
jne
xchg
fs
or
xor
add
push
sbb
fcmovbe
in
adc
fidivrs
mov
addl
dec
inc
push
add
xchg
test
cwtl
movsb
xor
inc
or
and
ljmp
data16
mov
mov
test
push
mov
sub
sbb
adc
dec
xchg
fdivl
adc
sbb
cli
pusha
add
sbb
add
pusha
cmpsb
cs
jge
es
in
dec
xor
cmpsb
bound
mov
cwtl
hlt
sahf
dec
sub
add
rcrb
add
idiv
rclb
xchg
mov
cwtl
and
rol
jo
inc
loop
inc
push
add
pop
dec
sbb
pusha
mov
xor
mov
mov
add
cmc
sahf
test
adc
push
xor
outsb
repnz
jb
pushf
pop
test
and
loop
shlb
lret
lock
inc
dec
aam
mov
adc
ds
cmc
sub
xorl
or
cli
or
and
rolb
dec
fdivr
aad
dec
je
lds
push
adc
pop
rorb
nop
cmp
ss
outsb
push
cmp
movsb
scas
pop
jle
xor
pop
or
push
outsb
mov
cmp
inc
hlt
push
add
sub
dec
pushf
pop
push
mov
pop
inc
pop
cmpl
add
mov
fisubs
xor
sub
xchg
addb
out
and
cmpsl
and
jbe
pusha
sbb
and
mov
int3
inc
sbb
dec
jo
and
adc
push
ret
movsl
xor
cli
pop
loop
jb
sub
mov
xor
xor
aam
inc
cmpsb
aad
push
or
roll
jb
mov
stos
sbb
adc
sbb
inc
inc
fcom
movsb
mov
in
or
and
loopne
aam
or
sub
rorb
push
push
adc
xchg
test
je
xchg
push
and
jne
pop
mov
rolb
shrb
fs
cmp
data16
and
or
in
adc
and
lret
and
push
adc
lock
xchg
test
dec
pop
xchg
cmpsb
pop
mov
adc
inc
push
lcall
nop
mov
inc
sbb
rolb
outsb
enter
loopne
cmp
test
arpl
xor
dec
dec
cmp
hlt
rcrb
pop
divb
mov
jo
inc
aam
push
fsubp
lock
dec
adc
push
xor
and
pusha
insb
inc
enter
mov
add
adc
inc
pop
jo
or
lcall
push
add
lock
subb
adc
or
in
stc
dec
mov
fsubrl
inc
or
and
jo
fisubs
loope
jne
fsubp
push
push
cmp
sarb
sbb
add
in
mov
inc
loopne
imull
adc
das
sub
in
mov
sbb
adc
movsb
out
negl
add
rol
sub
mov
dec
mov
mov
ja
lcall
adc
push
sub
dec
sub
xchg
out
sub
xchg
pop
scas
jge
popf
jb
movsb
pop
lcall
loopne
push
insl
and
int3
push
movups
aam
sub
pop
fwait
pop
outsl
fs
mov
orb
sub
pusha
cmp
dec
push
inc
push
addl
xchg
test
insl
sub
push
and
xor
jmp
sbb
sbb
xor
cwtl
cmp
aas
repnz
and
js
xor
sub
jge
push
test
rclb
cmpsb
xchg
dec
pop
xchg
jb
dec
push
andb
or
push
dec
jo
dec
aad
add
loopne
lea
add
xchg
test
addb
push
and
and
cmp
shlb
insb
xchg
sub
mov
nop
pop
jb
push
orb
sbb
inc
dec
dec
cmp
sbb
repnz
arpl
mov
sbb
and
dec
adc
lret
and
fidivrs
gs
notb
xchg
in
and
pop
test
test
pusha
xchg
add
jecxz
int3
xor
and
loop
test
and
in
nop
sbb
or
test
dec
adc
xchg
insb
inc
mov
adc
inc
roll
sub
xchg
xchg
je
incl
cwtl
push
mov
adc
pmaxub
mov
daa
lods
mov
mov
or
sub
repnz
imul
sbb
add
lret
xchg
add
enter
data16
cld
loop
movsb
or
test
fmuls
cs
or
inc
dec
pop
inc
push
repnz
mov
pusha
sub
adc
pusha
shrb
mov
push
xchg
rcr
sub
cmpb
adc
jne
enter
adc
inc
dec
insl
or
or
fsubrs
into
call
scas
xor
mov
icebp
test
es
jp
xor
fs
nop
adc
add
in
cltd
cmp
out
loop
test
test
sub
aaa
dec
ss
insb
or
inc
push
xor
mov
push
sub
dec
push
xchg
aad
sub
jb
jb
xchg
add
ret
les
out
test
dec
jle
lret
cmpb
mov
inc
sub
je
inc
xchg
and
dec
in
xchg
add
enter
insl
sub
cmpsb
lcall
in
or
mov
fildll
add
inc
jle
adc
sub
js
fsubrl
push
lret
dec
inc
pop
xchg
or
xchg
sub
xchg
and
es
sahf
pop
adc
mov
push
and
xchg
mov
pusha
fidivrl
in
inc
and
addl
dec
cmp
or
add
int3
je
sbb
sbb
push
xchg
xor
es
sbb
lods
pop
push
inc
lods
fisttps
mov
rcll
inc
js
por
lret
inc
add
push
clc
push
mov
push
ss
sub
call
insl
dec
xor
or
and
mov
sub
ret
rcll
and
mov
pop
ret
xor
shlb
enter
adc
push
adc
inc
push
fdivrs
fildll
dec
pushl
sbb
xchg
jae
ret
sub
leave
ret
mov
and
out
xor
add
out
or
xor
dec
test
fs
mov
jo
mov
inc
dec
jb
in
inc
es
dec
in
inc
mov
dec
ss
and
push
mov
adc
sub
xchg
movsl
rclb
fdivs
mov
or
push
dec
adc
addb
cmp
push
int3
xor
mov
xor
mov
sub
push
xchg
or
cld
cwtl
imul
inc
add
ret
mov
aad
fs
cmp
push
inc
xchg
in
les
push
sub
in
fs
inc
mov
jo
add
xchg
test
xchg
add
cs
jne
int3
pusha
or
call
enter
adc
out
xchg
mov
loop
xchg
int3
inc
nop
dec
mov
rcrb
call
mov
inc
inc
sub
adc
sbb
lods
addl
or
rcl
addb
lock
movsl
xchg
cs
in
xor
loop
adc
add
cmp
sub
adc
push
cmp
push
and
jbe
push
mov
adc
mov
outsb
jl
inc
outsb
or
mov
popa
adc
add
sub
ljmp
add
push
mov
scas
js
xchg
adcl
sbb
dec
mov
es
and
inc
shl
sub
cmp
xor
dec
das
movsb
rcr
ret
xchg
fldt
dec
addr16
xchg
mov
or
cmc
inc
xor
adc
pusha
cmp
mov
int3
mov
imul
lcall
and
jmp
xchg
or
and
jo
jb
ret
and
loop
mov
add
lock
mov
fisubrs
jne
sub
pop
mov
cmp
xor
jo
sub
cwtl
push
nop
push
jae
pop
inc
jle
inc
pop
and
push
push
nop
cmp
sub
dec
push
lret
aam
je
and
add
pop
xchg
shll
xchg
mov
mov
je
inc
dec
nop
inc
insl
rolb
fs
add
fs
pusha
push
inc
popa
xor
sbb
jecxz
adc
out
cmc
shlb
addb
orb
pusha
imul
xchg
xchg
xor
sub
hlt
or
imul
xchg
push
adc
pop
and
inc
or
jecxz
jg
push
push
lods
ds
xor
xor
inc
dec
lret
sub
or
call
inc
mov
inc
mov
push
xor
test
scas
push
xchg
cmpsb
cltd
sub
adc
dec
jle
data16
dec
out
sub
ss
push
adc
mov
rolb
insb
cmpsb
insb
bound
pusha
push
fdivrp
nop
sbb
sbb
inc
sarb
addl
scas
ljmp
clc
movsb
pop
fadd
push
sbb
pushf
add
mov
hlt
pusha
xor
pusha
sahf
push
clc
xchg
in
add
sub
pusha
xor
sarb
popa
cs
callw
dec
push
sbb
xchg
adc
cmpb
movsb
addb
push
dec
popa
cwtl
add
xchg
xor
dec
push
add
jbe
mov
xchg
int3
loopne
dec
sahf
pop
cld
mov
sub
ret
or
nop
cs
es
sbb
nop
mov
incb
lret
and
jo
push
mov
int3
in
mov
fists
adc
and
in
fcoml
add
aam
adc
jle
jle
sahf
push
fmull
and
add
test
xorb
inc
mov
push
outsb
ret
adc
cs
mov
adc
inc
idivb
xchg
or
pop
icebp
mov
inc
mulb
sbb
je
push
add
mov
pop
lock
scas
shlb
or
in
inc
cld
or
inc
jb
push
dec
and
adc
xchg
shrb
cltd
adc
mov
outsb
and
add
mov
inc
lea
dec
outsb
enter
fs
jo
ss
or
ret
or
in
lret
and
in
push
push
mov
stos
cwtl
pusha
dec
jle
mov
sbb
lock
andl
push
cwtl
inc
ficoml
les
hlt
ljmp
mov
or
loopne
jbe
and
add
lret
cltd
loopne
js
data16
cmp
pusha
cmpb
rolb
enter
dec
scas
es
cltd
or
push
mov
mov
addb
mov
pop
test
add
sbb
mov
xor
jne
and
insl
adc
push
xchg
mov
subl
popf
pushf
xor
mov
bound
push
or
lea
sub
dec
sub
int3
add
xchg
and
mov
and
ret
cmp
filds
pop
mov
and
mov
mov
add
adc
pop
sub
cld
in
adc
pop
faddl
xor
stos
mov
aam
gs
aam
jp
jbe
xor
xchg
ret
and
mov
sbb
or
adc
add
xchg
cwtl
mov
or
push
mov
sub
mov
int3
lock
imul
les
sahf
dec
sub
and
add
mov
inc
mov
push
mov
adc
xorl
aad
adc
leave
adc
inc
cmp
cmp
push
data16
sbb
inc
pop
enter
adc
or
int3
pushf
xchg
pop
jp
out
mov
test
in
inc
inc
cwtl
mov
leave
dec
cwtl
scas
jbe
mov
pusha
pushf
add
or
outsb
cltd
add
pushf
cmpsb
add
gs
repnz
adc
push
jae
mov
fiaddl
jbe
sub
movsb
je
loopne
add
das
push
push
inc
xchg
mov
pop
push
es
and
fdivs
fadd
sbb
fs
lret
add
faddl
adc
mov
sub
aad
cltd
cmp
inc
push
fisubrl
cmp
xchg
cltd
adc
add
or
sbb
or
test
enter
mov
or
mov
pop
ss
pop
mov
addb
ret
imul
test
cmp
add
and
lods
jae
mov
test
loope
aam
cmp
shrb
add
cli
pop
es
insl
sub
sub
sub
pushf
xchg
xor
sub
cmc
and
es
push
addl
cmp
pop
rolb
ljmp
or
cwtl
pop
ljmp
pop
bound
adc
push
inc
ror
div
test
add
pop
mov
imul
push
mov
test
xchg
bound
add
xor
ss
test
push
or
andl
add
and
push
pop
test
ret
mov
into
loop
push
sub
dec
mov
xor
nop
push
pop
mov
and
mov
test
mov
add
cmp
orb
jne
xchg
mov
gs
sub
sbb
ret
shl
mov
push
cs
add
pop
xchg
add
add
sbb
mov
int
and
sbb
inc
loope
jmp
push
adcb
dec
mov
sbb
or
aaa
push
xchg
inc
or
pushf
gs
jmp
ds
out
cs
xchg
subb
xor
loop
aad
cmp
inc
ret
inc
std
pop
test
jp
nop
push
orb
ficomps
mov
or
mov
gs
or
js
or
push
lcall
push
stos
clc
gs
dec
push
dec
popa
or
cmpsb
cmp
fcoml
xchg
subl
cs
sar
cmp
ficomps
pusha
adc
push
push
nop
lret
jb
add
mov
call
cmc
sbb
pop
add
sbb
push
clc
and
movsb
and
adc
bound
add
pop
mov
inc
in
and
rorb
adc
mov
cs
or
loop
push
scas
test
cwtl
xchg
xor
sub
sbb
add
dec
je
cmpsl
test
adc
and
test
xchg
and
bound
xchg
mov
mov
mov
sub
push
add
inc
mov
sub
pusha
mov
repnz
fisubl
rcll
inc
add
dec
dec
or
movsl
in
mov
adc
jb
and
xchg
lods
sub
sub
add
adc
subb
int3
dec
test
and
inc
dec
sub
sbb
cli
push
or
dec
sub
push
push
add
nop
mov
lcall
or
test
les
mov
shlb
inc
sub
cmp
test
andb
dec
or
shlb
cmpsb
add
push
test
xchg
jo
test
xor
andb
popa
xchg
imul
pop
es
inc
or
aam
mov
add
pushf
hlt
aam
push
mov
or
push
movsb
push
add
cwtl
dec
je
les
test
xchg
clc
test
push
movsb
pop
mov
pop
dec
adc
xchg
loop
xchg
or
xor
pushf
sbb
sbb
adc
cld
clc
loope
popa
jo
mov
xchg
js
push
int3
push
sbbl
lock
and
and
xor
and
xchg
cmp
adc
mov
arpl
cmp
orb
xor
sbb
push
dec
lret
pop
mov
adc
adc
mov
pusha
stos
mov
xor
add
mov
sub
in
inc
mov
cwtl
mov
test
xchg
xchg
mov
or
xor
push
dec
push
rorb
xor
cmc
mov
inc
orb
into
mov
cli
sarb
clc
sub
and
add
cmpsl
in
inc
and
xchg
mov
cmp
das
test
and
add
push
push
pop
imul
pop
cmc
mov
mov
jbe
loop
testl
clc
push
jne
sbb
rcrb
data16
daa
or
sub
mov
pop
bnd
andb
mov
adcb
loopne
push
lock
out
in
add
test
bound
lea
mov
icebp
pusha
jb
lock
imul
cli
cli
loopne
mov
xchg
cmp
mov
lret
inc
shl
or
enter
mov
push
mov
mov
xchg
pop
push
lock
add
popf
push
adc
cmp
mov
js
dec
push
and
push
xor
ret
sub
xor
int3
inc
or
imul
fs
jle
sub
lea
bound
sub
test
xor
mov
lret
xchg
sub
fs
cmc
lret
dec
mov
add
mov
cmp
fs
xchg
cmpsb
sbb
push
shll
xchg
cmp
mov
or
adc
jbe
repnz
jmp
outsl
mov
inc
pop
in
xor
xchg
pop
ss
push
int3
sbb
aam
xor
mov
xchg
orl
inc
cld
add
dec
and
cli
add
or
sahf
nop
cwtl
jp
movsb
test
and
cltd
cmp
stos
sub
xchg
popf
jo
jne
fdiv
dec
test
mov
cmp
pushf
push
and
xor
pusha
rcl
cltd
push
test
ror
push
sahf
xchg
push
pop
or
sahf
movsl
cmpsb
out
mov
pop
mov
mov
cltd
mov
sub
daa
shrl
mov
sub
add
or
test
inc
jmp
call
sub
sub
sbb
jne
fs
ss
and
into
insb
add
loop
pusha
cmp
cmp
je
push
mov
add
mov
jge
mov
es
movsl
xchg
sahf
xorb
fidivs
dec
mov
push
into
xchg
loop
cli
pop
mov
adc
push
jb
jo
mov
cmp
pop
rcll
aam
mov
shr
sbb
fs
inc
adc
fcomps
mov
xchg
stos
hlt
push
insb
sub
sbb
sub
outsb
or
add
mov
in
and
and
sub
push
cwtl
xor
pop
mov
mov
adc
mov
cltd
cmp
push
cmpw
popa
fnsave
push
lret
sub
inc
stos
loop
push
stos
add
xor
mov
and
cwtl
adc
xchg
xchg
fs
sbb
clc
aas
jb
in
je
sub
in
data16
loope
ret
mov
push
xorb
test
lock
mov
popa
mov
lea
lcall
shlb
adc
adc
add
fidivs
xor
mov
cs
lret
push
push
out
push
mov
add
fiadds
ds
xchg
in
mov
xchg
push
sbb
and
xchg
xor
push
addr16
add
out
inc
xchg
or
and
lock
push
and
add
test
sbb
sub
mov
push
sbb
adc
cmp
cmp
lret
or
gs
fiaddl
rcrl
cmp
adc
in
pusha
or
rolb
popf
mov
test
sarb
shlb
pop
ljmp
mov
mov
jle
fdivrs
or
int3
subl
inc
add
sub
test
push
mov
inc
add
movsb
mov
pop
mov
es
adc
mov
scas
add
jo
mov
cmp
ror
imul
xor
loopne
add
sbb
mov
shlb
mov
inc
shlb
push
push
dec
loop
jl
dec
jp
push
mov
js
cmp
adc
xchg
or
imul
je
es
mov
dec
cmp
insb
xchg
xor
xor
xchg
dec
inc
push
push
add
push
ficoms
mov
inc
sub
pop
add
loop
adc
xchg
cwtl
jb
sbb
cmp
mov
fsubs
test
inc
out
lods
nop
ret
xchg
adc
sbb
lods
add
jb
orb
mov
mov
add
pushf
daa
jnp
adc
jle
add
pop
mov
add
push
add
add
inc
fisubl
sbb
lret
and
int3
test
shlb
aaa
orl
dec
add
stos
mov
ret
or
adc
adc
mov
adc
mov
push
pushf
cli
mov
movsb
scas
or
cmp
push
or
ror
fs
cmp
clc
addb
mov
cmpl
je
jp
rclb
data16
xchg
rcll
leave
sub
xor
mov
jb,pt
inc
or
pop
into
sub
mov
mov
jle
adc
jne
sahf
cmpl
les
cld
cltd
dec
add
sbb
fs
xchg
aad
or
mov
test
rorl
int3
push
add
inc
test
mov
dec
es
jne
movsb
inc
dec
inc
add
mov
jno
and
push
or
fdivrs
add
push
cmp
mov
mov
loope
test
dec
scas
icebp
movsb
out
xchg
jb
sbb
jmp
dec
add
fcmovu
nop
push
leave
xchg
cmp
xchg
fmul
mov
xor
xor
ret
jbe
add
call
cmpb
sub
mov
xchg
pushf
mov
addb
cmp
xchg
addps
loop
test
jnp
adc
movsb
nop
xchg
in
bound
push
inc
adc
pusha
add
jo
mov
sbb
and
pop
loope
pop
jo
insl
push
es
aad
rorb
inc
dec
xchg
jbe
mov
and
movsb
push
add
into
jo
cs
mov
mov
add
inc
data16
sub
ret
test
insb
cli
aam
pop
add
into
test
add
or
mov
cmp
cs
sarl
subb
xchg
add
sub
enter
jp,pn
dec
lret
subb
and
add
test
cltd
loopne
les
or
xorl
cmp
cltd
mov
cltd
sbb
and
pop
lods
mov
arpl
add
stos
mov
sbb
push
add
addl
test
clc
push
sbb
sub
les
and
sbb
or
jo
js
push
hlt
xor
fs
adc
push
add
loopne
adc
test
pop
push
jle
test
pop
int
addb
jmp
sub
push
push
dec
push
add
mov
inc
sub
sbb
adc
sbbb
enter
push
dec
shll
or
test
sub
lret
dec
pusha
inc
and
lcall
xchg
lods
xchg
dec
adc
int3
mov
or
adc
adc
sbb
and
or
adc
divb
inc
popa
clc
jb
mov
push
bound
in
adc
cmp
sub
imul
or
mov
fmull
inc
rclb
shrb
lret
mov
push
bound
inc
or
pusha
test
or
mov
dec
lods
dec
xor
pop
xchg
rclb
lcall
in
scas
clc
xchg
adc
add
sub
add
xor
pusha
inc
ret
sub
push
lcall
adcl
dec
and
pusha
xor
ds
test
or
and
adc
mov
adc
inc
loopne
dec
rcrb
cmp
mov
jl
int3
or
push
test
adc
cmp
ret
les
jns
or
cmp
aas
fsqrt
fwait
sub
ret
mov
push
add
fsubrs
loopne
sbb
lea
cld
inc
sbb
pop
aam
push
push
mov
ljmp
test
jo
and
icebp
fs
mov
fbstp
roll
cmp
push
push
push
adc
je
insb
fs
jecxz
inc
pop
cltd
or
inc
cmpsl
les
aam
and
xor
xchg
xchg
add
rcrl
adcb
dec
cmp
push
add
andb
and
ss
andl
ret
xchg
jo
push
pop
mov
add
inc
jns
cmpsl
or
and
add
or
aad
and
enter
xor
jl
xor
xor
es
enter
dec
fcoml
sbbb
in
mov
push
add
mov
push
mov
outsl
fmuls
inc
fisubrl
int3
outsb
out
mov
leave
sub
cmp
mov
jo
mov
push
cwtl
push
jo
pusha
faddl
push
fisubrl
int3
sbb
xor
loop
enter
sub
ret
ljmp
movsw
hlt
xor
xor
mov
sbb
test
test
bound
or
ficomps
dec
or
add
cli
pop
sbb
subb
xchg
dec
pop
mov
mov
and
pop
push
adc
jp
fs
rolb
sarb
fs
inc
mov
inc
je
aad
sub
push
inc
add
cmpsb
dec
enter
dec
add
jp
ds
xchg
adc
push
and
loop
and
pop
mov
pop
add
adcl
xchg
mov
out
in
ret
loopne
int3
loope
add
add
clc
push
sub
add
fmulp
pusha
and
and
int3
bound
call
andl
pop
push
dec
mov
mov
add
cmp
pushf
aam
pop
or
je
push
push
insl
pop
imul
push
add
movsl
in
mov
sub
lcall
out
imul
xchg
pop
xchg
xor
orb
and
enter
xlat
pop
add
jb
scas
adc
pop
xor
ret
add
add
adc
inc
adc
mov
lret
dec
outsb
lret
lcall
mov
sbb
or
clc
sbb
add
add
mov
mov
dec
lcall
add
inc
xor
adc
fcmovbe
or
es
lret
popa
lods
subb
in
push
xchg
nop
nop
lret
mov
adc
fmuls
xor
nop
pushf
insb
jp
jg
or
mov
in
cmp
mov
cmc
ret
cltd
push
dec
push
cmp
mov
lods
insb
inc
data16
rcrb
adc
sbb
cld
orl
xor
aam
subb
push
mov
sbb
dec
es
mov
and
xchg
add
add
shrb
push
nop
xor
or
push
es
dec
inc
dec
xchg
popa
and
dec
push
loopne,pn
cmp
rorb
push
inc
cmpb
sbb
loopne
inc
fs
inc
ficoms
push
sbb
or
cmp
ret
push
lret
fsubl
xor
fcompl
push
js
push
xchg
lret
or
or
and
pushf
cmp
sbb
cmc
sub
push
dec
insb
decb
jbe
push
rcrb
sub
ljmp
sbb
sbb
out
and
lods
inc
filds
and
out
add
add
call
in
mov
loop
cmp
and
clc
add
push
or
add
addl
or
dec
mov
add
inc
xchg
je
push
jae
add
jae
or
loop
cmc
ficomps
test
mov
jo
jp
movsb
and
aad
cltd
or
pop
sahf
dec
mov
int3
adc
adc
pushf
mov
adc
or
mov
enter
mov
stos
int3
add
scas
cld
bound
pushf
xchg
and
adc
ret
dec
cmp
and
adc
dec
xor
mov
scas
je
sub
fisubs
adcl
push
arpl
lret
jl
mov
loopne
int3
xchg
sarb
mov
cs
sub
or
clc
js
and
dec
sahf
adc
or
push
cmp
outsl
movsb
mov
lcall
and
inc
shlb
aaa
add
adc
ss
pop
mov
mov
out
pusha
neg
push
addl
add
js
sbb
xor
dec
inc
inc
insl
or
push
pop
pop
add
shrb
inc
or
mov
daa
mov
xchg
ret
cmpsb
orb
pushf
cld
mov
movsb
cmp
sub
mov
insb
data16
inc
push
or
mov
inc
data16
cwtl
mov
out
roll
add
xchg
xchg
push
stos
mov
push
sahf
adc
push
push
sbb
daa
in
cmp
add
ret
addb
inc
cmp
arpl
jecxz
mov
pusha
or
outsl
subl
inc
test
repnz
mov
push
int
xchg
test
lcall
dec
sahf
mov
mov
and
cwtl
sub
sub
or
ds
adc
loop
adc
or
mov
cmp
sub
sbb
add
enter
xor
or
pop
mov
or
and
fs
pop
add
loope
insb
xchg
int3
lret
and
mov
sbb
dec
push
cltd
and
adc
rclb
mov
dec
ret
mov
xchg
call
es
add
mov
xchg
sbb
pop
lret
je
fwait
inc
mov
lods
out
mov
ret
inc
inc
mov
sahf
mov
je
xchg
push
rorl
rolb
mov
in
je
pop
es
xor
stos
and
sarl
fdivl
xchg
mov
je
jle
mov
ss
test
ret
loope
insb
pushf
lods
push
cmpsb
jbe
test
adc
or
shlb
rclb
call
inc
dec
mov
ret
test
addb
jle
repnz
scas
aam
in
pop
push
or
in
dec
ret
add
mov
loop
xchg
pusha
and
lcall
jno
in
push
mov
xchg
scas
jo
sub
es
mov
cli
pop
nop
rcrb
shlb
pop
or
gs
xor
hlt
dec
mov
push
rolb
sbb
gs
jl
sub
inc
or
fiadds
pop
sub
popf
scas
test
xor
mov
cld
jp
data16
cmp
push
add
rcrb
dec
mov
stos
xor
or
inc
inc
insl
test
orb
adc
add
xchg
data16
add
fs
imulb
in
xchg
add
push
rcrb
xorb
xchg
xorl
pop
sbb
and
inc
push
mov
push
addl
xor
or
sbb
stos
inc
xchg
xchg
loope
pop
adc
bound
cli
sahf
lods
inc
xor
mov
push
je
cmp
ret
pop
shlb
mov
dec
cs
xor
cmpb
fs
sbbb
xchg
sahf
add
inc
and
cs
jo
pusha
ret
and
push
pushl
inc
adc
adc
add
ficoml
push
inc
add
push
test
xor
or
cltd
jmp
push
mov
mov
rorl
dec
sub
inc
push
gs
scas
sub
call
xchg
lcall
add
fistl
or
sarb
push
mov
cmp
push
mov
xor
cmp
push
push
push
mov
inc
call
inc
test
rolb
push
xchg
sarb
push
mov
mov
or
add
and
lret
loope
mov
mov
xchg
ss
xor
shrb
es
test
dec
xchg
mov
nop
ds
sbb
inc
xor
mov
ret
push
push
ret
or
push
test
push
shrl
stos
mov
test
jl
mov
cwtl
or
sub
push
cltd
dec
sub
adc
ret
push
test
roll
xchg
push
cmp
test
jp
pop
dec
xchg
and
adc
sub
jo
inc
pop
and
jo
pop
shlb
add
loope
mov
dec
rcrb
add
loopne
in
popf
add
ret
mov
inc
popa
add
pop
fs
dec
adc
cli
xor
xchg
test
adcb
jp
in
scas
cmp
inc
pop
loopne
inc
or
insl
mov
adc
jae
mov
pop
inc
push
fsub
xchg
mov
inc
mov
inc
imul
add
mov
or
or
arpl
fadd
cwtl
and
xchg
jbe
mov
sub
xchg
subl
sbb
andb
pop
add
xor
push
addb
insl
cli
push
cwtl
mov
xor
push
mov
inc
xor
adc
and
test
add
adc
add
jle
cltd
andb
mov
adc
push
fs
xchg
jle
or
cs
out
and
pusha
inc
mov
mov
add
add
xor
add
jns
js
stos
dec
test
pop
mov
add
xchg
into
push
popa
or
xorb
sub
lcall
sahf
movsl
dec
or
cltd
jp
sbb
push
mov
insl
in
es
cmp
lock
lcall
mov
sub
push
inc
sti
shr
into
jo
ret
xor
test
pop
mov
repnz
mov
pop
and
leave
ret
sub
adc
dec
cmp
js
or
call
mov
add
cmc
test
or
fidivl
call
jge
lock
movsb
call
push
and
mov
sub
sub
pop
sbb
mov
and
pop
push
mov
jp
add
and
adc
add
pop
push
xchg
mov
dec
outsb
cmp
pushf
pop
or
jne
sbb
push
lcall
repnz
mov
cmp
xchg
or
xor
or
scas
or
or
and
add
loop
sbb
adcb
mov
pop
and
jns
pop
cwtl
ret
aam
jl
mov
divb
aam
xor
mov
push
sub
push
call
mov
add
push
leave
fiaddl
xchg
test
orb
dec
loopne
shrb
mov
push
ficoml
or
add
pop
xchg
adc
cmp
enter
gs
mov
gs
xor
xchg
adc
adc
push
sub
or
or
sahf
or
fbld
sub
mov
or
adc
and
cmp
xchg
xchg
cmp
jl
jo
push
xchg
nop
inc
or
jb
imul
enter
inc
dec
jb
sub
xor
inc
cmpsb
xor
inc
dec
scas
push
mov
call
and
je
dec
sbb
mov
int3
xor
or
inc
lods
xor
mov
movsl
cmp
loop
mov
xor
cwtl
mov
imul
cmp
mov
sahf
jbe
inc
sbb
cmp
and
push
gs
add
addl
imulb
or
or
call
pop
incb
mov
jle
add
sbb
add
loop
test
inc
jbe
and
loop
outsb
cmp
add
dec
sbb
add
rcrb
push
cltd
test
mov
or
js
push
sahf
jbe
inc
enter
es
pop
push
loop
push
inc
mov
mov
nop
nop
sbb
xchg
aam
push
mov
repnz
add
inc
or
or
mov
inc
sbb
push
lock
xchg
and
add
xchg
inc
jbe
jle
add
sbb
sub
inc
dec
insl
mov
dec
or
xor
xchg
and
or
scas
pop
sub
cmp
fmul
add
cmpsb
jo
push
xchg
inc
les
test
jl
xor
or
jb
sbb
lods
fmul
or
insb
xchg
and
jp
ljmp
int3
sbb
and
mov
js
adc
mov
shll
and
lcall
pusha
mov
xchg
in
scas
inc
daa
or
mov
mov
cmp
andb
push
mov
adcb
sbb
lret
mov
es
adc
sub
nop
mov
inc
and
insb
push
push
sbbb
inc
jnp
mov
xorb
jb
insl
cld
or
mulb
dec
and
scas
jne
sub
lret
push
mov
mov
addb
xor
or
xchg
sbb
dec
sbb
dec
push
repnz
call
push
sbb
ret
mov
rclb
sbb
and
imul
push
xchg
xor
xor
mov
andb
pop
sar
xchg
add
jb
es
pusha
adc
pusha
mov
subb
int3
xchg
xchg
sbb
xor
cmp
add
cmp
xor
pop
sbb
es
les
lcall
push
inc
mov
jle
cmpsb
pushf
mov
aad
test
mov
pusha
loopne
mov
xor
ror
or
inc
and
repnz
rcrb
cltd
fs
pop
pop
xchg
es
jne
mov
pop
mov
jne
push
enter
xchg
or
pop
mov
jns
or
mov
inc
mov
push
dec
fsubr
rorb
push
adc
rol
cmp
xor
add
pop
mov
adc
inc
xchg
loope
loopne
adc
mov
push
xchg
xchg
and
sbb
aad
sub
inc
cmp
mov
rorb
xor
xor
sbb
dec
mov
shlb
and
rcrl
mov
xchg
adc
add
pop
clc
xor
aaa
add
xor
or
or
sub
and
or
and
xor
ficoms
sbbb
outsb
data16
mov
mov
add
mov
mov
jp
cmp
mov
pop
dec
xchg
insl
and
and
pushf
push
push
sub
out
fsubs
push
add
add
ret
mov
mov
push
dec
shlb
cs
and
nop
fsub
push
cmp
sub
test
push
out
ret
cs
pop
mov
pushf
and
adc
call
dec
jle
insb
enter
pop
or
cli
mov
sub
cltd
add
pop
popa
sub
fs
jmp
sub
inc
ljmp
mov
movsb
sbb
mov
push
outsl
roll
inc
sti
and
scas
in
adc
or
jg
pop
ret
pop
lahf
cmp
cmp
aam
hlt
cmp
mov
mov
sub
and
lds
and
dec
xchg
scas
test
dec
loopne
xchg
xchg
fidivrl
push
dec
mov
jo
jb
cli
dec
sarb
sub
fsub
nop
dec
pop
and
sub
repnz
sub
dec
push
fmull
or
or
or
sub
dec
loopne
add
and
pusha
inc
loopne
ret
xor
xchg
pop
loope,pn
fdivrs
add
ret
cmp
bound
int3
hlt
mov
das
or
pushw
dec
addb
test
js
adc
cmp
mov
push
movsl
gs
sbb
sub
push
sbb
pop
adc
adc
ds
ds
jb
push
push
mov
test
outsb
sub
mov
dec
sub
outsb
sub
rorb
outsb
xchg
movsb
andps
or
cmp
test
mov
push
xchg
push
hlt
push
and
ficoms
xchg
sbb
pushf
movsb
lcall
add
fsts
fisubrs
push
scas
inc
bound
lret
mov
gs
xor
inc
mov
int3
lret
mov
scas
insb
ret
or
cwtl
scas
push
xchg
pop
dec
cli
and
xor
add
add
or
mov
xchg
push
loop
jb
push
or
sbb
orl
or
xor
xchg
adc
inc
sbb
sbb
adc
repnz
pop
mov
shlb
fimull
fcmovbe
adc
add
sarb
out
inc
pop
pusha
and
add
dec
ljmp
push
sbb
test
repnz
dec
add
fdivl
and
inc
sub
daa
aam
xchg
xchg
nop
inc
sarb
push
mov
add
cwtl
mov
push
cs
add
out
adcl
jbe
inc
popa
leave
adc
enter
icebp
add
jp
sub
fisttps
dec
mov
bound
cmp
cmp
and
mov
pop
aaa
mov
pop
shlb
mov
cltd
rolb
in
bound
jb
lea
repnz
xlat
xchg
sbb
xchg
mov
pop
xorb
and
mov
dec
push
cltd
jno
movsb
xor
and
add
rolb
int3
jns
add
data16
addb
sbb
leave
add
add
fsubs
xchg
dec
mov
push
jnp
dec
arpl
lock
ja
jg
call
inc
out
add
iret
mov
cs
fidivl
stos
sub
adcb
loopne
or
test
mov
mov
add
insb
jo
jecxz
and
or
push
ret
add
inc
pop
xchg
js
inc
mov
sbb
mov
add
sbb
dec
and
popa
mov
sahf
cmc
ss
inc
mov
xor
stos
mov
and
push
push
mov
mov
movsb
data16
adc
xor
adc
call
and
fsubl
bound
xchg
push
sbb
inc
incb
push
mov
mov
xchg
into
push
loop
adcb
inc
je
fs
test
adc
inc
cwtl
shlb
inc
sbb
or
fmull
add
jne
mov
cwtl
xorb
adc
cltd
movsl
sbb
push
ficoml
mov
adc
or
or
push
xchg
fidivs
xchg
ret
pop
fs
push
and
fsubrs
cli
inc
mov
adc
fists
ds
jl
or
or
sub
or
lock
popa
add
sub
and
pusha
xchg
or
inc
sbb
or
adc
js
test
ljmp
add
xchg
mov
decb
inc
push
add
aam
loopne
mov
cwtl
or
push
cmc
xor
es
or
dec
or
js
adc
mov
test
sbb
push
dec
xor
es
in
dec
xchg
leave
sbb
jo
or
add
dec
dec
jp
sbb
pushf
and
adc
push
add
cltd
sub
push
mov
xor
cmp
lock
or
inc
and
cs
mov
xor
hlt
mov
or
and
xchg
mov
xchg
loope
into
mov
mov
inc
sbb
in
or
test
lock
and
js
jle
add
push
dec
sarb
inc
scas
idivb
nop
adc
test
xor
cli
ds
add
sub
jle
xchg
or
je
loopne
or
add
scas
dec
xorl
or
bound
pop
add
into
adc
test
inc
and
or
sub
pusha
cmp
xor
add
inc
out
xchg
and
fs
je
scas
adc
test
ret
int3
in
xorl
adc
push
mov
test
adc
aam
add
adc
push
jo
push
add
stos
pop
dec
sub
adc
pushf
sbb
inc
jmp
mov
adcb
aam
adc
cmp
test
cs
cmc
add
mov
push
push
fnsave
jp
xor
sbb
mov
jg
mov
dec
cmpb
shrl
lret
roll
shll
dec
adc
loop
fs
sbb
cmp
sub
add
add
push
add
pop
fcomps
shlb
lcall
sbb
sahf
xchg
cli
adc
insb
cmp
xchg
orl
loope
adc
dec
aam
call
repnz
lcall
cli
sahf
push
mov
or
loopne
out
inc
or
mov
xchg
sub
mov
cwtl
xchg
mov
push
sbb
dec
inc
enter
test
gs
les
add
mov
jo
es
dec
xor
rolb
sbbb
test
addb
lret
pusha
cltd
loope
les
xchg
aam
sahf
cmp
adcb
adc
ds
fs
jbe
or
inc
mov
mov
pushf
sbb
mov
test
nop
add
cltd
mov
das
push
push
jbe
xor
movsl
and
sbb
and
daa
add
test
test
inc
add
pop
inc
and
inc
lock
mov
sub
stos
mov
add
jp
rolb
push
rolb
rclb
pop
and
jle
loop
loop
mov
push
pushf
pop
lret
mov
add
xchg
or
cmp
xchg
scas
push
fidivrs
or
call
xchg
push
and
rclb
test
inc
pop
add
add
push
add
add
enter
push
and
jp
or
push
data16
dec
mov
inc
mov
adc
sbb
sarb
dec
or
dec
xor
dec
cmp
inc
loopne
and
sbb
jp
andl
or
xor
and
mov
lods
sub
sbb
negb
xor
int3
insl
clc
stos
mov
sbb
dec
fsubl
adcb
inc
jbe
cs
in
shlb
or
dec
and
aam
push
jbe
or
out
or
add
mov
int3
and
out
ds
es
ret
or
sbb
add
and
jo
lcall
mov
and
ds
fs
lcall
ret
push
sub
pop
dec
data16
pop
and
xor
jne
push
add
cwtl
or
test
loopne
mov
rclb
cld
sarb
mov
sbb
scas
enter
cmp
pop
cs
push
les
imul
scas
adc
in
pop
mov
insl
xor
sbb
cmp
sub
and
adc
adc
sbb
je
fs
sub
xor
and
test
mov
nop
aam
nop
sbb
push
inc
mov
inc
and
mov
bound
inc
test
gs
insb
and
push
addb
es
dec
in
sbb
xchg
fs
adc
pop
push
add
enter
or
and
mov
dec
ret
lret
add
lcall
xor
and
loopne
xchg
adc
ret
sarb
and
lcall
es
lods
fcoml
jne
aam
test
sbb
add
mov
cli
pop
add
cwtl
leave
add
and
test
sbb
nop
push
xchg
call
int3
lock
sbb
pop
xchg
fadd
cmp
jo
ficoml
repnz
adc
push
pushf
cmpl
movsl
or
inc
or
or
push
xchg
or
mov
inc
add
sbb
loop
push
nop
add
mov
add
add
cmp
adc
fs
mov
pop
pop
sub
add
push
or
adc
xchg
or
mov
jl
push
pop
leave
sub
xchg
cmp
or
and
int3
lret
or
lret
push
loopne
lock
lcall
test
imul
add
cmp
jo
mov
cli
or
loop
test
hlt
push
push
addb
adc
or
data16
cs
push
xor
xchg
int3
and
outsb
add
inc
sbb
mov
push
or
adc
pop
mov
sbb
mov
push
jp
or
jle
push
lods
or
add
repnz
sub
cwtl
mov
loopne
dec
scas
cld
mov
int3
test
mov
ret
in
push
push
pop
xor
and
cmp
bt
push
imul
jo
and
scas
rolb
xchg
cmpsb
sub
xchg
fists
inc
add
pusha
inc
jbe
push
inc
or
push
jbe
mov
scas
out
les
cwtl
add
cld
popl
movsb
sbbb
cmp
int3
push
push
xchg
movsl
and
jecxz
scas
and
cmp
add
mov
cltd
mov
cmp
movsb
push
daa
xor
movsl
push
xor
insl
sub
pop
pop
lods
mov
push
cmp
test
sub
enter
scas
push
mov
xchg
add
nop
mov
inc
cli
fsubl
push
and
jl
scas
add
ss
ret
and
pushf
insb
jo
or
mov
adc
adc
pop
js
shlb
dec
dec
xchg
pop
dec
adc
data16
dec
xor
addl
stos
aam
lcall
add
cmpsb
push
lret
dec
sub
mov
adc
cmpsb
out
imul
add
xchg
in
or
or
and
adc
xor
sub
dec
ficomps
clc
dec
xchg
lret
cmpsb
insl
sub
adc
pop
cmc
dec
movsb
dec
push
jbe
jle
insb
bound
ljmp
or
insb
xor
add
dec
loop
xchg
xor
cli
mov
adc
push
mov
add
ss
mov
push
mov
push
mov
or
shlb
sub
jp
mov
push
insb
cmpb
popa
hlt
and
mov
and
or
add
add
dec
xchg
sbb
lock
jl
or
dec
into
inc
adc
leave
and
rolb
cs
popf
inc
sub
ret
sbb
mov
dec
mov
pop
movb
sbbl
sub
xor
mov
in
inc
incb
adc
scas
adc
and
or
jbe
test
push
dec
popa
sub
lock
popf
pop
mov
cmp
and
add
push
loop
pusha
sub
es
or
mov
sbb
insb
shll
hlt
lods
mov
hlt
addl
out
dec
and
jb
sbb
pop
gs
xchg
inc
sub
lret
add
enter
test
test
pop
jns
add
xchg
cli
push
or
pop
scas
dec
cld
fs
push
xchg
inc
test
loop
mov
push
add
sub
dec
cbtw
add
icebp
add
xchg
xor
sbb
sbb
pop
test
push
mov
lret
enter
mov
sub
test
jp
pusha
sub
aam
mov
and
and
inc
mov
mov
andb
popa
xchg
add
and
adc
inc
sub
inc
sbb
movsl
adc
push
xor
rcrb
xchg
mov
dec
jo
inc
inc
subl
repnz
inc
jb
push
lods
mov
sub
xchg
xor
add
out
xchg
or
xchg
xor
ret
and
xor
cmp
add
mov
sbb
or
mov
pop
inc
add
pop
call
sub
mov
cwtl
push
cld
lahf
popl
pop
test
lret
in
ret
adc
scas
pop
sub
mov
mov
and
es
cwtl
loope
stos
je
popa
imul
mov
sbb
aad
sahf
and
mov
aad
xchg
add
pushf
negb
sub
gs
int3
xor
movsb
loop
cltd
or
mov
xor
xor
movsl
movsl
sbb
or
push
dec
dec
pusha
ss
cmp
xor
ret
mov
cmp
mov
bound
sahf
orl
sti
xor
cltd
dec
into
push
inc
push
add
sbb
jmp
hlt
cmp
lcall
cltd
push
mov
adc
add
outsb
and
xchg
xchg
mov
add
xor
add
cli
hlt
push
add
push
lcall
add
sahf
or
push
cmpsb
push
xchg
cld
push
add
mov
dec
mov
in
pusha
jbe
mov
adc
xchg
ret
or
outsb
in
sub
jae
mov
sbb
ret
or
ljmp
push
inc
mov
dec
mov
and
or
mov
dec
mov
mov
clc
loop
mov
and
inc
sahf
inc
xchg
orb
cmpsb
sbb
movsb
stos
sub
adc
jns
xor
adc
add
cmp
sub
dec
pop
mov
mov
adc
lods
add
and
inc
bound
movsb
xor
mov
outsb
andl
add
sub
jne
andb
je
loop
add
rcrb
mov
adc
pushf
add
orb
pop
enter
jne
xor
es
add
push
loopne
cld
or
or
nop
and
aam
push
dec
mov
arpl
jno
mov
ds
push
mov
sbb
fidivl
xor
popfw
xchg
int3
loop
xor
add
or
and
push
addr16
andl
lret
js
jo
push
add
add
in
or
xchg
add
cmp
xchg
loop
sub
xchg
fsubrs
sub
add
add
cmpsb
sub
gs
data16
cmp
negb
xchg
mov
xorb
sbb
sbb
data16
test
mov
fcoms
dec
and
push
sbb
or
aam
test
nop
and
sub
sbb
aam
stos
or
inc
sbb
ret
add
movsb
mov
popa
pop
subb
je
lock
cmp
xor
insb
pop
cli
inc
clc
cmp
clc
dec
mov
mov
ret
add
pop
add
pop
loope
add
sti
dec
dec
add
in
pop
or
xorb
ret
aad
lock
push
mov
stos
enter
xchg
les
mov
lods
inc
xor
jo
inc
dec
inc
inc
call
orl
into
mov
adc
popf
sub
jp
or
sbb
mov
pop
xor
mov
sub
inc
ret
xor
sub
mov
es
lret
xchg
or
fcmovbe
push
mov
lcall
adc
inc
add
fs
clc
fcoms
pop
push
fcompl
push
ret
outsb
add
dec
js
dec
rorb
lods
dec
pop
addb
inc
enter
ret
mov
add
sbb
cmp
sub
mov
mov
mov
sbb
dec
inc
inc
and
xchg
dec
pusha
es
jbe
xchg
int3
ret
out
leave
add
int3
mov
sub
test
ret
and
dec
movsb
adc
test
sub
sbb
stos
add
sbb
inc
popa
nop
adc
stos
push
or
scas
cwtl
ret
lret
adc
mov
lods
pop
and
xor
add
jb
scas
xchg
faddl
xchg
push
loop
nop
cmp
out
adc
push
pushf
sub
sub
sbb
repnz
xchg
push
inc
mov
faddl
les
or
insb
mov
dec
ss
adc
imul
mov
ljmp
pusha
stos
movsb
cmpb
hlt
add
nop
ljmp
in
pop
xchg
sbb
mov
aaa
adc
pop
in
add
shrb
adc
and
push
loopne
lret
clc
mov
mov
lcall
andl
subb
jbe
fisubrl
sub
push
cmp
lret
int3
pusha
or
fisubrl
adc
insl
rolb
js
test
ret
push
js
and
inc
loope
into
pop
test
adc
push
ljmp
mov
cmpsb
add
add
push
and
sbb
enter
fs
test
or
addl
add
push
test
xor
cmp
aam
add
lcall
push
add
loop
cwtl
lods
adcb
pop
adc
mov
xor
das
adc
push
ds
dec
loope
loopne
scas
mov
cmp
lock
fs
mov
mov
mov
sub
jp
dec
sub
bound
int3
sub
movsl
mov
movsb
daa
mov
xor
and
ds
push
or
mov
adc
sbb
mov
js
movsb
xchg
xor
mov
inc
or
adc
mov
inc
push
inc
adc
xor
cs
cmpsb
xor
sbb
test
jl
addb
xchg
xor
push
add
and
subb
xchg
test
push
dec
outsl
push
dec
out
adcb
add
xor
xor
mov
in
and
lcall
jge
add
and
pop
sahf
scas
fiadds
mov
movb
inc
xchg
add
inc
cld
hlt
mov
or
pop
nop
adc
imul
and
cmp
sahf
pop
leave
daa
jns
xchg
sbb
add
adc
cli
adc
movsl
xchg
mov
cltd
cmp
je
enter
loop
xor
aad
add
ss
je
mov
into
mov
adc
test
cmp
sub
add
sub
and
sbb
cwtl
or
ss
jle
xor
sbb
pusha
mov
sbb
xorb
push
add
out
add
sbb
bnd
fsts
inc
hlt
push
push
lret
push
or
mov
push
and
fs
cmp
inc
inc
push
aam
push
cltd
push
inc
add
dec
fmuls
adc
xchg
and
insb
pusha
in
out
nop
cmp
jo
jo
stos
hlt
mov
shlb
push
orb
aaa
mov
fsubs
adc
imul
adc
xchg
insb
dec
and
or
sub
and
mov
or
nop
mov
add
dec
push
mov
fs
sbb
cli
sbb
leave
xchg
pop
mov
sub
adc
add
je
adc
outsl
xchg
sbb
or
nop
push
cli
mov
in
ss
dec
add
data16
xor
out
inc
imul
dec
sub
and
pusha
adc
rcrb
xchg
lret
and
mov
or
lcall
push
cld
dec
xor
add
out
pop
jp
mov
mov
sahf
ret
sub
ljmp
adc
mov
pop
jb
pop
push
mov
daa
pushf
mov
lcall
xchg
mov
mov
cmp
loopne
add
pop
test
lea
adc
aam
addb
aam
cmp
add
cld
repnz
add
test
xchg
xchg
dec
test
adc
pop
aam
xor
jb
pusha
mov
or
fs
clc
mov
jbe
pusha
repnz
dec
cmp
xchg
divb
push
xor
cli
outsb
fcoms
add
bound
aad
xchg
jo
sbb
pop
inc
push
push
outsl
xorb
and
fmuls
sbbb
or
or
lcall
nop
push
cmp
and
mov
sub
push
jo
mov
sbb
mov
pop
push
ret
pop
es
push
adcb
dec
adc
dec
or
push
subl
test
gs
dec
out
or
mov
insb
dec
push
xor
add
hlt
and
adc
dec
add
or
out
fcoms
mov
push
ret
xor
inc
cmp
fcom
jp
and
ss
add
push
adc
sub
loopne
inc
push
mov
or
push
cmp
mov
lret
pop
mov
and
xor
and
inc
mov
scas
ficoml
loopne
ret
or
cwtl
lret
mov
inc
sub
xor
sbb
mov
jb
push
push
data16
sbb
xor
jo
ret
mov
mov
jge
xchg
pop
mov
push
pusha
jo
out
or
pop
or
pop
dec
jne
mov
leave
add
cmpb
inc
fldcw
test
add
aam
and
notb
sbb
cmc
mov
inc
mov
ret
popa
clc
cld
mov
popa
and
and
pop
xor
dec
add
lock
adc
rclb
adc
cli
faddl
inc
push
inc
lea
gs
dec
inc
mov
movsb
xchg
and
fs
test
add
cmp
in
mov
cmp
jo
jp
or
rolb
or
int3
sub
fnstenv
mov
cmpb
sbb
xor
mov
and
or
add
mov
jo
test
cwtl
mov
inc
test
lret
cmp
jne
jb
push
and
mov
loope
fnsetpm(287
fsubs
inc
loope
push
pop
push
popa
xor
loopne
mov
push
pop
mov
mov
adc
addb
or
lock
lods
mov
js
add
push
add
sub
adcl
mov
pushl
dec
jne
jl
mov
nop
cmc
xor
lret
jmp
push
or
mov
inc
dec
cli
in
push
push
push
movsl
popa
add
dec
les
cwtl
and
enter
les
call
or
add
xchg
or
xchg
add
add
movsb
mul
mov
add
push
sbb
sub
push
inc
dec
cmp
mov
push
xor
test
icebp
call
sbbb
add
es
push
inc
dec
lock
xchg
push
call
dec
dec
insl
xchg
add
addb
sub
cmp
mov
mov
cli
and
inc
ret
or
add
movsb
in
dec
adc
adc
sbb
sub
mov
push
sub
and
int3
nop
fs
xchg
cmp
call
or
loope
mov
shrb
nop
mov
pop
lods
jo
movmskps
fcoms
add
push
cmpsb
cmpsb
jo
add
or
add
hlt
shrl
ret
insl
push
sbb
gs
adc
push
int3
adcb
enter
push
sbb
and
mov
push
mov
int3
pop
pop
sbb
add
add
dec
test
movsl
mov
or
loop,pn
cmp
push
push
dec
or
add
loop
push
push
xor
sub
push
mov
dec
adc
fcomp
cmp
push
adc
pusha
adc
pop
in
pop
aam
push
rcll
enter
sbb
push
pusha
push
or
sarb
in
push
in
loop
adc
loopne
orl
rol
es
ds
sbbl
mov
pusha
pushf
jo
or
test
sbb
addl
xor
shl
cmpb
out
dec
dec
push
inc
dec
and
mov
dec
ficomps
lcall
and
test
jb
pop
add
sub
sub
sub
pop
xor
loop
inc
or
pop
fdivl
imul
cmc
call
shrb
xchg
jbe
and
mov
xor
ljmp
lods
dec
pop
jp
mulb
xchg
stos
les
or
mov
dec
inc
std
mov
loopne
seto
outsb
sbb
orb
and
mov
imul
int3
inc
push
test
and
fadds
mov
lods
sbb
fs
xchg
into
add
dec
fcoml
clc
ljmp
mov
ss
lcall
xor
cmp
jp
or
rcrb
push
lods
xchg
xor
cmp
inc
mov
xchg
imul
cmp
jns
adc
cmc
push
mov
shll
add
and
ret
lock
mov
pop
xchg
push
cmp
push
pop
mov
mov
callw
add
mov
inc
addr16
push
push
in
pop
or
pop
pop
push
cli
jecxz
add
jbe
es
pusha
sub
jb
or
pusha
adc
and
xor
jb
out
push
add
sbb
movsl
andb
pusha
pop
mov
and
cmpl
orl
ret
movsb
scas
adc
adc
adc
xchg
push
je
push
mov
adc
and
lcall
test
sub
xor
and
sbb
dec
mov
movsl
test
mov
dec
sahf
mov
dec
cmc
test
inc
test
nop
in
sbb
es
mov
movsb
cmp
jb
test
mov
xorl
adc
aam
ror
ljmp
pusha
push
and
leave
and
dec
stos
push
cwtl
out
mov
ss
xchg
enter
mov
int3
inc
pusha
mov
mov
xchg
aad
popa
test
pushf
sub
fdivrs
dec
loopne
ss
push
sbb
add
mov
or
in
add
into
xchg
add
outsb
xor
int3
and
and
mov
mov
jecxz
shll
xorb
hlt
and
mov
pop
inc
inc
inc
cli
sbb
ret
and
add
pop
sbb
divb
inc
xor
dec
cmp
push
inc
inc
js
xchg
push
sub
inc
add
or
push
xor
jne
aad
push
or
xor
add
inc
cli
mov
dec
loope
cmpsb
cli
add
add
mov
rcl
sub
jl
sbbl
xchg
mov
mov
pop
addb
or
loopne
pop
mov
adc
or
inc
out
mov
nop
call
or
mov
push
mov
mov
pop
jl
mov
pusha
test
xor
or
andb
mov
hlt
ret
and
hlt
insb
and
push
sbb
adc
lods
dec
adc
clc
push
pop
pusha
adc
call
xor
or
es
mov
cmp
inc
push
lods
sub
pop
nop
imul
test
xchg
aam
push
dec
cmp
sti
cwtl
dec
add
or
mov
adc
sub
xor
test
jne
cmpsb
fdivp
adc
jo
lods
dec
insl
pusha
in
mov
xor
mov
inc
inc
inc
cmp
sbb
mov
stos
test
xor
or
push
adc
mov
cmp
xchg
fisubrs
xor
pusha
mov
pop
sbb
movsl
add
xchg
push
dec
or
in
mov
popa
adc
pop
loop
add
daa
jo
lret
or
shll
cmp
and
ret
jo
mov
mov
cld
sbb
movsb
xchg
pop
ret
hlt
adc
mov
ja
pop
add
mov
hlt
lret
inc
mov
mov
jb
adc
or
or
add
pusha
mov
fisubrl
mov
cmpsb
mov
divb
jp
pusha
mov
mov
or
add
mov
mov
ret
hlt
sbb
add
pushf
nop
shlb
shl
aam
mov
adc
ljmp
sub
loopne
sbb
xor
cli
mov
jo
xorb
cmp
lcall
sbb
adcl
mov
cmp
fcomps
fiadds
outsb
cmpl
mov
ret
and
sbb
mov
or
cltd
xor
push
sub
icebp
xor
jb
loopne
jmp
xor
faddl
xor
out
cmp
sub
xchg
add
mov
lea
fs
enter
sub
cld
enter
xchg
test
nop
cmp
cwtl
xchg
shlb
subb
mov
add
or
sub
sbb
push
and
into
xchg
jbe
sbb
das
sbb
mov
mov
push
js
xchg
adc
or
cltd
push
cli
fisubs
xor
imul
xchg
in
dec
data16
fadd
mov
sub
jno
test
and
mov
xchg
adc
pop
stos
lret
int3
or
icebp
adc
je
dec
add
dec
inc
inc
shlb
cld
push
aad
mov
inc
outsl
push
mov
or
mov
push
stos
sub
sbb
cli
and
mov
pusha
push
and
mov
jne
mov
cs
outsb
push
xchg
leave
xchg
or
cmp
xchg
sub
mov
add
mov
shrl
push
sbb
push
dec
add
fs
push
fildll
and
outsb
andb
inc
mov
scas
notb
iret
cmovnp
inc
cld
jae
je
cld
pusha
mov
add
adc
negl
mov
add
sbb
mov
push
cmp
test
pop
loop
push
inc
mov
jg
loop
jmp
int3
inc
stc
sbb
push
sbb
dec
push
add
adc
mov
and
mov
test
and
add
hlt
add
repnz
push
loope
sbb
xchg
ds
inc
or
sub
xor
fmul
test
push
or
or
sub
enter
imul
jbe
mov
or
stos
and
mov
jne
jge
xor
pop
cs
lea
aad
sbbl
fwait
movb
fsubrl
rcrb
stos
adc
adc
mov
ss
int3
or
out
dec
adc
push
xor
loopne
gs
out
sub
xor
mov
dec
cwtl
fcomi
cli
fdivl
dec
sub
sbb
enter
dec
scas
cmpsb
add
or
pusha
inc
mov
sbb
xchg
push
or
add
inc
dec
push
sbb
fiadds
lcall
jo
inc
mov
mov
in
shlb
cmp
dec
mov
roll
lcall
sahf
add
push
into
push
dec
sub
jo
leave
sub
xchg
pop
mov
cwtl
hlt
jbe
inc
rorl
xchg
adc
andl
jecxz
mov
inc
add
orb
xlat
fwait
jp
push
cli
in
or
cmp
cltd
dec
xor
cmp
mov
pushf
adc
sub
lea
or
pushf
je
and
xor
ror
test
cmp
mov
cmpsl
xchg
xor
push
dec
mov
scas
push
pop
push
pop
or
in
aam
pop
movsl
xor
fmull
stos
xor
cld
sbb
and
push
add
adc
pop
push
ror
aam
inc
js
into
fcomps
xchg
dec
sub
push
xchg
xor
xchg
pushf
dec
inc
inc
lock
push
bound
push
loop
or
and
inc
movsl
mov
jne
adc
xor
mov
push
aam
mov
ret
or
push
outsb
xor
mov
loop
and
xchg
or
mov
adc
mov
pusha
sbb
es
ljmp
dec
push
es
lret
and
add
aam
lcall
hlt
xchg
sbb
mov
add
add
sbb
sbb
or
andb
sbb
mov
pop
cmc
das
xchg
push
xchg
inc
outsb
dec
dec
call
cmp
dec
insl
jg
or
ds
mov
ret
push
scas
xchg
fldcw
or
jo
add
test
adcb
cmp
push
data16
adcl
inc
popa
stos
push
mov
xchg
xchg
push
and
xchg
pusha
cmpsb
dec
push
dec
lock
push
xchg
aam
nop
xchg
es
bound
loopne
in
or
and
sbb
sahf
xchg
cmp
mov
jle
ret
mov
mov
ret
dec
aam
adc
add
in
cwtl
or
lods
dec
es
mov
sub
inc
push
push
inc
pop
pop
pusha
pushf
cltd
shl
inc
xor
es
inc
sbb
arpl
mov
dec
outsl
shrb
mov
xchg
enter
sbb
mov
test
nop
push
cmpsb
jl
sbb
adc
xlat
mov
or
mov
mov
xchg
cwtl
ljmp
mov
dec
xor
stos
mov
sub
xchg
dec
fstenv
addb
mov
aam
or
xchg
popa
gs
hlt
pop
ficompl
xor
inc
insb
shlb
jne
aam
ret
adc
dec
or
sahf
and
test
movsl
mov
shl
jp
push
adc
rorb
pusha
dec
lcall
int3
loop
add
int3
xchg
je
or
pusha
outsb
ss
cmp
dec
fs
push
sub
test
orb
mov
test
lret
fdivrl
movsb
cld
in
dec
xor
xchg
cltd
sbb
xor
dec
cwtl
loopne
add
adc
push
inc
add
movsb
hlt
addl
inc
mov
add
dec
in
and
test
or
es
and
sub
xacquire
jo
outsb
mulb
sbb
jb
mov
adcb
data16
shlb
bound
push
dec
push
out
mov
push
push
lret
movsb
inc
popa
mov
xor
cmc
adc
jne
pop
cmp
nop
in
test
cmp
loopne
add
xor
dec
xlat
inc
imul
loop
mov
add
adc
xor
cmp
mov
scas
pop
fs
jo
cli
jo
popa
adc
mov
add
stos
mov
fcoml
push
or
out
ljmp
sbb
test
push
jns
mov
mov
push
cmp
or
fsubr
sub
dec
push
sub
mov
sbb
sub
or
cli
jg
push
rcl
lds
jl
js
cmp
adc
loopne
xchg
scas
stc
lret
and
sub
clc
push
push
sbb
loop
mov
adc
jae
rcrl
inc
call
jle
xor
pushl
mov
ss
sbb
cmp
scas
test
dec
xor
addr16
or
mov
push
jmp
pop
stos
add
jne
inc
inc
lcall
enter
push
xchg
es
je
pusha
lcall
outsb
loope
dec
bound
rorb
mov
xor
outsb
gs
cmp
test
ss
jb
dec
jb
add
xor
adc
adc
rcrb
scas
and
jne
xor
sbb
inc
push
sub
push
inc
sub
push
push
rcrb
push
xchg
fs
fcmovbe
stos
pop
push
in
insl
loopne
add
andl
inc
es
repnz
push
xchg
jo
test
dec
sbbb
and
repnz
and
push
and
mov
sbbl
cmp
in
test
xor
ljmp
lods
daa
mov
cmp
mov
xor
ficoml
in
dec
pop
mov
test
mov
mov
pop
push
lock
enter
lods
dec
sub
xorl
push
pusha
add
and
addb
jo
ljmp
cmp
popf
push
push
dec
jo
lods
adc
xor
add
fiadds
inc
dec
inc
mov
and
loope
mov
sbb
mov
cltd
cltd
rolb
mov
aad
cli
mov
push
cmc
add
mov
mov
cltd
mov
adc
mov
xchg
or
or
cltd
sbb
out
push
shlb
enter
mov
andb
dec
add
jle
js
and
cltd
pop
rorb
imul
int3
cmp
inc
mov
cmp
adc
or
fcoml
ljmp
js
xchg
inc
je
nop
xor
xor
sub
test
and
imul
enter
test
or
cmp
je
test
mov
test
hlt
fsubs
out
test
lcall
negb
jp
inc
or
cmp
jb
lods
js
data16
and
notb
ficomps
andl
xchg
xchg
fs
or
inc
adc
push
pop
in
or
or
xor
test
jle
int3
int3
test
pusha
andb
mov
mov
sbb
mov
adc
push
pop
push
incb
and
aad
mov
test
mov
dec
xor
sub
push
and
rclb
fiaddl
ficompl
push
jb
es
add
stos
pop
into
ret
xchg
push
dec
cli
xchg
sbb
pop
les
dec
clc
flds
loopne
adc
push
inc
jmp
les
add
add
aam
jle
pop
mov
xchg
imul
js
pop
cmp
mov
jp
stos
xor
pop
dec
lods
imul
out
ret
mov
outsl
mov
mov
loop
fs
and
inc
daa
clc
fidivs
ret
and
add
xchg
add
xchg
dec
and
mov
repnz
es
sub
outsl
mov
sub
sub
push
jl
push
pushf
xor
daa
ds
test
pushf
adc
jo
jp
xchg
mov
xorl
cmp
push
cmp
enter
dec
jb
test
or
fisubs
mov
mov
sub
mov
je
js
xor
int3
sbb
sbb
xchg
lods
orb
xor
xchg
mov
mov
or
mov
pop
mov
dec
adc
add
inc
enter
and
bound
les
pop
test
push
dec
adc
out
cmp
and
pop
xor
mov
test
lret
pusha
and
out
lahf
loop
push
pusha
ret
inc
orb
loopne
or
mov
int3
les
data16
ret
sbb
test
ds
sub
dec
rcrb
sbb
mov
sbb
adc
stos
dec
cmpb
pop
insb
jbe
orb
dec
imulb
push
cli
and
shrb
add
or
cwtl
add
cwtl
les
rcrb
mov
or
adc
loop
cmpsb
cwtl
lcall
enter
add
push
add
jo
mov
add
lret
inc
inc
sbb
xchg
orl
mov
fdivs
or
out
addl
sbb
int3
xchg
or
xor
inc
and
orb
pop
sub
push
push
mov
fcoml
movb
dec
inc
mov
dec
push
cmpsb
loopne
repnz
or
mov
or
or
roll
test
inc
loope
scas
mov
lock
xchg
and
xor
lock
scas
jle
mov
mulb
cmpb
ror
jbe
lcall
or
jne
push
gs
mov
push
dec
cmp
or
xorl
jecxz
mov
xor
dec
dec
mov
add
scas
outsb
orl
fisubl
and
sbb
aad
imul
cmpl
subb
fimull
xor
nop
sbb
cmp
aaa
in
mulb
addb
cmp
out
xchg
mov
pop
xlat
pop
enter
mov
cmc
std
inc
jno
dec
cmp
push
xchg
push
dec
add
pop
adc
sbb
data16
pop
rorb
je
mov
sub
inc
mov
push
test
test
loopne
push
xor
lea
pusha
mov
cs
mov
sub
movsb
adc
es
xor
mov
andb
shrl
mov
sub
bound
xorb
into
add
xor
daa
adc
sbb
xor
dec
inc
xchg
lods
adc
lods
xor
and
and
fs
mov
cmpb
lret
enter
cmpsl
cs
cld
xchg
imulb
inc
mov
ret
pop
outsb
int3
jp
lds
push
mov
jne
inc
sub
jo
pusha
data16
gs
inc
push
adc
mov
pusha
and
inc
stos
mov
adc
inc
test
inc
dec
lcall
and
stos
or
sbb
pusha
dec
sub
and
mov
movsl
dec
ss
xchg
or
test
and
cmp
es
sahf
xchg
jmp
add
sbb
imul
sub
inc
movsl
test
xor
ss
sub
movb
add
test
bound
shrl
sub
int3
mov
pop
fs
cwtl
inc
sub
add
pusha
push
cmp
fs
dec
lret
pop
clc
cli
js
and
or
bound
mov
dec
dec
rcr
subb
and
mov
pop
test
xor
sahf
or
sub
loopne
xchg
mov
cmc
push
lods
pop
fiaddl
sub
lcall
into
sbb
xchg
dec
cmp
dec
pop
sbb
jmp
add
cwtl
push
inc
and
and
and
insb
add
lcall
insb
cmp
pusha
xor
aaa
movsb
push
xchg
pushl
push
pop
pop
das
loop
dec
loope
xchg
cmpsb
and
xor
and
add
pop
in
rorb
sub
sbb
fs
jne
stos
mov
mov
and
inc
test
xor
andb
push
mov
pop
shlb
adc
enter
add
cmp
ret
xchg
sahf
lods
sub
pushf
ret
add
sbb
mov
sub
orb
or
loopne
cmp
push
dec
xorb
test
into
push
adc
aas
push
mov
movsl
jle
daa
cmp
push
pushf
adc
cld
xchg
inc
mov
movsb
push
mov
and
lea
dec
or
xor
bound
pop
dec
inc
outsb
sbb
adc
xchg
sbb
push
ret
sahf
pop
or
add
xor
jo
cwtl
loop
adc
ret
shlb
mov
ror
jns
add
cmp
int3
xchg
sbbb
inc
mov
loope
mov
dec
sbb
test
dec
xchg
pop
and
add
test
adc
sub
and
cli
test
and
pusha
sahf
test
cmp
mov
adc
dec
and
test
test
sbb
orb
stos
test
inc
or
push
cmp
scas
push
ret
dec
xchg
cmp
lcall
and
mov
xchg
mov
movsb
dec
or
add
inc
inc
movsb
cmpsb
mov
sub
stos
add
lret
pusha
xor
xchg
xchg
pop
xchg
fldcw
inc
push
call
mov
ret
mov
xchg
adc
xchg
dec
xor
or
adc
push
sbbb
xor
bound
add
xor
pusha
xchg
push
stos
xor
and
ret
sub
cmp
sub
and
xchg
jb
push
pop
push
mov
test
sbb
pop
add
push
push
fadds
js
addb
js
test
xor
add
sbbb
faddl
push
adc
cmpsl
ds
loopne
lret
add
fsubs
add
inc
ss
ss
add
jb
fsubrp
and
movsb
or
and
dec
insb
add
lods
loop
inc
test
jo
jbe
jae
and
push
dec
loopne
stos
fidivrs
lods
mov
push
xlat
cmpb
sub
stos
test
sbb
or
hlt
lea
mov
add
out
fdivs
ret
mov
xchg
dec
or
pop
es
sub
mov
adc
add
lods
mov
fsubs
inc
shrb
gs
xor
mov
js
lods
inc
mov
shlb
cmp
and
inc
sbb
xchg
test
ss
sub
and
add
add
dec
inc
and
mov
decb
adc
shrl
or
shlb
add
and
test
mov
shrl
and
jo
ss
popa
xchg
pop
jb
lcall
cs
lods
add
adcb
sub
add
lods
imul
mov
dec
fists
hlt
cmp
cmp
fisubrs
roll
lahf
xor
push
mov
pop
dec
daa
dec
dec
inc
stos
sbb
push
or
add
mov
ljmp
pushf
jmp
inc
xor
sub
test
xor
xor
hlt
ds
dec
push
sbb
add
lret
sahf
mov
aam
into
nop
cltd
subl
mov
outsb
xor
mov
dec
cwtl
and
jb
or
fadds
and
lcall
jne
ret
add
loope
sub
mov
mov
lcall
xor
rorb
lret
mov
pop
sub
rcll
pop
pop
cli
ds
rorb
enter
outsb
xor
dec
in
test
test
hlt
and
call
enter
cmpsb
inc
imul
xor
xchg
push
xchg
movsb
mov
add
ljmp
xchg
aad
pusha
popa
insb
push
stos
mov
imul
call
cmpsb
sbb
push
push
push
incb
xchg
insb
and
loopne
mov
sub
cmpsb
ret
push
push
or
movsb
mov
push
orb
pop
ret
cwtl
sub
mov
int
sub
mov
sahf
lcall
inc
push
imul
outsb
sub
mov
leave
in
mov
movsb
mov
int3
dec
mov
or
sbb
movsl
or
sbb
mov
or
sub
xchg
push
shlb
in
sub
add
xor
test
sbb
cmp
in
rclb
xchg
adc
or
xchg
lock
nop
push
cwtl
out
xchg
inc
or
add
and
sub
add
into
loop
xchg
mov
cwtl
fimuls
add
or
xor
dec
js
mov
sub
cmp
andb
popa
add
mov
clc
ljmp
add
cmp
sbb
and
mov
ds
and
add
cwtl
push
pusha
fs
mov
pop
pop
adc
js
jb
insb
or
cmp
cmp
adc
rol
pop
outsb
pop
and
jle
sahf
les
stos
mov
sbb
fidivl
dec
nop
inc
dec
mov
sbb
pop
repnz
pusha
dec
add
add
and
loopne
andb
outsl
inc
mov
pusha
push
jecxz
fs
add
or
push
sbb
incb
add
fmull
inc
into
dec
mov
dec
pop
loope
xlat
dec
movsb
adc
or
push
cld
aad
pop
xchg
add
pusha
push
add
out
dec
add
mov
in
es
es
mov
adc
pop
call
or
cli
push
sub
mov
je
sbb
bound
lret
and
pusha
loopne
push
inc
movsb
mov
dec
fs
or
sbb
cs
loope
lock
sbb
ds
adc
push
mov
mov
push
and
imul
dec
andb
test
adc
add
dec
lret
or
loop
cwtl
cs
inc
push
mov
add
add
inc
push
in
sub
or
je
ljmp
dec
sub
lea
mov
outsb
adc
sahf
in
es
mov
and
adc
jp
addb
scas
insb
and
sub
dec
jbe
int3
fs
xchg
orb
dec
and
ljmp
add
es
dec
js
jb
mov
mov
fbld
and
mov
xor
push
movsl
and
xor
ljmp
adc
pop
inc
pop
cmp
mov
inc
sub
mov
adc
clc
mov
or
pop
popa
and
inc
mov
xchg
mov
xor
lods
or
loope
loop
cmp
xchg
adc
push
mov
pusha
xchg
in
dec
inc
sub
mov
inc
cmp
int3
xchg
sbbb
rolb
sub
inc
gs
and
fsubp
dec
sbb
pusha
and
pusha
test
movsb
or
jp
mov
inc
cmp
jb
cmp
adc
orb
sub
or
int3
or
sub
adc
push
xchg
xor
out
dec
movsb
adc
sarb
add
add
mov
popa
mov
mov
fs
jb
subl
test
testb
lcall
push
dec
push
aad
pushf
sbb
lret
test
push
and
pusha
xchg
and
lods
mov
loopne
xchg
dec
sbb
fsubrs
add
mov
lcall
fcomps
mov
pop
pop
into
outsb
adcb
cmp
mov
sub
sub
jl
or
dec
xchg
rcll
enter
rorb
test
xchg
pop
and
out
push
adc
movsb
mov
or
ss
jbe
and
faddp
jp
movsl
mov
adc
push
xor
mov
ljmp
and
or
mov
call
cmc
ljmp
mov
mov
add
sub
sar
xor
movsl
js
mov
movsl
ror
dec
sahf
les
ret
add
test
cmpsb
xchg
xor
mov
xor
cmpsb
and
sbb
inc
dec
mov
xor
mov
push
rcrb
jp
dec
out
cmpsl
and
test
dec
daa
cmp
and
sbb
mov
addl
mov
test
sub
inc
inc
pusha
pop
addb
or
cltd
inc
jo
mov
pushw
push
xchg
enter
loopne
dec
ret
or
dec
loopne
and
adc
aaa
dec
orb
test
inc
sbb
add
faddl
pop
mov
test
test
loopne
lret
add
es
push
and
and
or
inc
xchg
dec
and
push
and
mov
mov
enter
sbb
dec
sub
pop
dec
and
inc
inc
xor
test
or
push
sub
xorb
pushf
pop
call
les
sbb
pop
daa
jp
cli
xor
dec
dec
push
push
jle
pop
push
pop
add
xor
add
adc
pop
mov
cmp
and
and
inc
push
push
push
pusha
and
inc
fimuls
mov
test
xchg
dec
or
or
sbb
mov
push
mov
cld
dec
mov
cwtl
movsb
mov
mov
or
push
add
push
cmp
dec
add
pop
test
pushf
das
leave
fs
divb
xor
mov
mov
sbb
sbb
lcall
sbb
int3
dec
ret
inc
mov
fs
ss
test
mov
sub
mov
add
add
loope
dec
mov
cwtl
cmp
cmc
mov
pushw
mov
xchg
xor
xchg
cmc
jb
xchg
test
je
pop
or
fcomip
cmp
mov
cltd
fs
mov
daa
sbb
xchg
add
repnz
xlat
mov
adc
xor
and
mov
and
pop
test
pop
xchg
addb
les
pop
mov
pusha
mov
out
decb
aad
rolb
sub
mov
cmp
pop
or
add
test
test
mov
push
pop
je
cmp
pop
cli
pop
dec
ljmp
test
push
lcall
jle
add
push
push
rcr
leave
repz
pop
outsb
and
and
adc
rol
inc
or
mov
mov
mov
mov
pusha
cwtl
insb
or
scas
lods
test
adc
adc
or
ds
popa
adc
or
pop
lock
add
sub
add
cmp
jmp
js
push
sub
sub
adc
fcmove
xor
ds
pop
cmp
andb
adc
cltd
ljmp
add
in
xor
rcrb
sub
call
cmp
popa
imul
add
push
xchg
xchg
jle
jne
aad
dec
inc
or
dec
inc
or
popa
dec
inc
mov
movsb
adc
cltd
xor
add
shlb
lods
adc
pop
xor
push
xor
fldl
sbb
add
push
inc
testb
mov
push
xor
cltd
and
aad
and
sub
push
inc
shlb
add
push
push
adc
cmpsb
push
xor
lock
int3
push
mov
aam
add
dec
lods
sub
xchg
enter
adc
lcall
nop
es
leave
dec
push
xor
add
mov
mov
or
dec
bound
and
inc
sub
fcoml
adc
dec
inc
daa
je
push
mov
add
sarb
sbb
mov
les
push
xor
push
in
adc
mov
push
adc
nop
mov
ret
sahf
insb
test
mov
sbb
test
mov
add
adc
pop
mov
addb
xor
pop
sbb
js
and
push
insl
mov
lret
cmp
sub
imul
xchg
inc
movsb
push
sub
push
rorb
pusha
rclb
adc
or
mov
xor
jbe
pusha
subb
bound
xchg
es
je
ret
xor
pop
js
sub
inc
dec
push
jl
loope
push
xor
dec
fcoml
fidivrs
scas
sbb
inc
dec
in
xchg
jbe
cmpb
movsb
mov
jp
and
icebp
and
ficompl
mov
push
add
lcall
cmp
lock
dec
jne
add
nop
es
push
sbb
ss
add
pop
push
gs
pop
pop
pop
xchg
push
inc
mov
inc
rcr
loop
cmp
add
pop
push
push
pusha
je
inc
dec
loopne
imul
jmp
xchg
cld
push
push
push
stc
cs
cmc
bound
fistl
pushf
icebp
or
stc
es
sub
ds
or
lods
dec
adc
fisubrs
inc
xchg
add
stos
aam
sbb
mov
addb
cli
cwtl
and
cwtl
push
mov
xchg
cmpl
aam
and
out
inc
pop
push
push
ret
sbbb
add
inc
je
xchg
or
stos
subb
and
cwtl
dec
push
test
adc
and
int3
add
xchg
shlb
sbb
jo
dec
mov
add
push
and
add
dec
insb
cmp
or
pusha
add
sbb
popa
insl
mov
or
inc
es
sub
add
add
add
inc
inc
cwtl
xor
pop
add
jp
sbbb
rcrb
insl
cmp
mov
sbb
sbb
rorb
inc
dec
ss
bound
loopne
out
call
nop
int3
int3
hlt
jb
cmp
mov
xor
pop
jbe
push
cmc
call
into
dec
add
pop
lods
inc
rorb
jl
sbb
dec
and
and
addr16
scas
jmp
mov
add
inc
cmp
shlb
inc
add
cmpl
adc
pop
inc
push
add
pop
bound
push
sbb
aam
fisubrs
xchg
call
or
or
test
loopne
inc
in
mov
movsl
gs
cmp
loop
aam
dec
jne
mov
add
inc
xor
add
cwtl
adcb
mov
adc
lods
jl
es
mov
jo
pop
shlb
sub
inc
and
or
pop
inc
rolb
loop
aam
cmp
lcall
xor
aad
pusha
and
dec
fsubp
sbb
push
inc
mov
divb
adcb
mov
les
out
lea
andb
dec
cwtl
and
cli
or
lock
and
push
sub
mov
or
inc
push
mov
dec
loop
ret
js
data16
pop
sbb
fadds
rcr
pop
inc
xchg
jo
sub
push
out
xor
xor
bndstx
outsb
adc
lock
add
mov
ljmp
add
dec
jp
mov
nop
int3
repnz
adc
xor
xor
pop
push
ljmp
adc
add
push
repnz
adc
nop
and
pop
jge
and
add
daa
int3
icebp
sbb
aas
add
push
daa
cld
add
pop
jg
pop
inc
mov
gs
xor
gs
shr
jle
inc
pop
sbb
pop
add
add
popa
imul
and
push
xor
jp
ljmp
fisubrl
dec
sbbb
adc
les
lret
xchg
loopne
test
xchg
jp,pn
cmp
dec
lock
inc
test
cmc
in
addb
jbe
xor
push
out
jle
sbbb
hlt
testb
mov
xchg
es
push
or
adc
js
inc
or
scas
add
or
lcall
ret
push
add
dec
sbb
xchg
inc
sahf
test
jmp
or
push
mov
push
loope
movsb
and
sbb
push
es
dec
add
out
push
mov
sbb
mov
stos
fcomps
sahf
orb
rcrb
mov
sbb
scas
jle
add
sub
pop
dec
sub
xor
xchg
push
sub
rol
xchg
cwtl
mov
nop
sbb
loop
xor
and
sbb
loop
je
shll
push
inc
outsb
out
dec
adc
mov
adcb
sbb
fcoml
dec
cmp
lcall
add
sbb
push
inc
mov
test
cli
xor
js
jne
es
pop
sbb
adc
rcll
loope
loop
imul
adc
push
mov
les
push
test
test
dec
or
enter
jno
clc
mov
adc
clc
dec
sub
dec
loopne
es
inc
and
or
dec
lods
mov
add
or
cmp
int3
fadd
add
test
popf
or
lock
and
pop
and
call
jle
add
inc
inc
jp
or
gs
lock
sahf
cwtl
enter
fs
test
push
lcall
pop
mov
xor
sbbb
sub
es
stos
mov
dec
sub
mov
imul
es
adcb
orb
out
dec
xor
add
inc
adc
sub
bound
add
imul
or
add
pop
arpl
xor
push
push
or
jbe
add
mov
and
popa
sbb
mov
mov
subb
dec
sub
xchg
lea
or
mov
and
loop
push
daa
inc
cmp
add
jbe
fsubs
xor
cs
xor
mov
and
scas
push
clc
xor
inc
imul
sarb
cmp
add
mov
sbb
cltd
mov
les
push
mov
out
xchg
rorl
cmpsb
add
ss
arpl
iret
ja
sbb
pop
fidivl
push
dec
and
pop
xchg
je
std
add
in
mov
mov
dec
leave
dec
jo
inc
pop
push
adc
ds
sbb
or
nop
inc
add
and
xor
inc
gs
sbbb
and
xchg
pop
fdivs
stos
cli
mov
outsb
ljmp
push
mov
ss
pop
xor
sbb
pop
pushf
jns
mov
shrb
dec
lret
push
xchg
sahf
dec
jbe
and
sbb
cli
sbb
mov
mov
dec
ljmp
add
lods
and
push
fdivs
push
dec
mov
sbb
pop
je
xor
inc
insb
nop
dec
adc
sbb
enter
fsubs
test
or
add
mov
xor
into
mov
jp
jb
add
cltd
fcoms
sbb
adcb
cwtl
push
outsb
xorb
or
ret
testb
jno
dec
push
push
mov
push
add
jp
sbb
cmp
push
rorl
and
js
jb
roll
pop
mov
movb
xor
or
subb
lods
pop
lretw
push
test
data16
adc
ret
push
adc
adc
nop
sbb
add
jbe
mov
fs
imul
je
mov
int3
rclb
push
insb
fcomps
inc
out
xchg
push
je
cmpsl
int3
and
mov
mov
push
out
mov
mov
xor
push
pusha
pop
jbe
adc
xchg
mov
inc
popa
lret
loop
or
cld
xchg
add
sub
pop
and
hlt
cmpsb
or
insb
add
test
mov
push
pushf
sub
aam
dec
cmp
cmp
hlt
mov
pushf
xchg
fiaddl
es
push
push
int
mov
adc
pop
dec
dec
imul
xchg
push
dec
xor
test
out
aam
scas
push
push
mov
inc
test
jle
lods
dec
cmp
add
js
cli
test
adc
mov
xchg
rorl
icebp
and
andb
and
ret
xor
jb
cmp
and
xchg
fadds
xchg
xchg
xchg
les
ljmp
nop
cmp
jmp
aad
jmp
adc
decb
dec
pop
in
and
cli
dec
nop
inc
mov
push
pop
aam
sub
jl
push
cmp
adc
fdiv
pop
adc
inc
dec
gs
adcb
push
ret
mov
or
or
and
fs
pop
adc
es
or
jge
imul
fwait
and
inc
ret
aad
mov
mov
popf
mov
jb
mov
push
jae
mov
scas
testb
xchg
mov
adc
sub
lcall
cs
scas
or
mov
testb
add
aam
sub
xchg
xor
call
xchg
int3
push
push
fdivr
dec
mov
add
fcomps
icebp
sbb
fsubs
int3
inc
data16
inc
scas
push
in
lret
cmp
sbbb
pop
jo
xchg
pop
xor
inc
js
pusha
dec
dec
loope
dec
lods
xor
nop
loopne
sarb
push
mov
mov
inc
sbbl
sbb
jp
push
mov
ss
xchg
mov
clc
mov
mov
push
mov
xchg
data16
nop
xchg
add
push
fdivrs
fiadds
sub
lds
scas
jbe
shrb
pusha
sbb
push
scas
inc
cltd
push
inc
cli
cld
jge
jo
cmpsb
push
dec
je
test
push
lcall
cmp
jae
popa
xor
or
bound
mov
ficoms
dec
xor
int3
shlb
or
shrb
jb
pop
and
outsb
sub
inc
inc
or
loop
out
push
xchg
xor
and
dec
or
push
mov
push
and
mov
scas
add
sub
je
rolb
orb
mov
lret
adc
sbb
mov
or
mov
call
ret
jo
loopne
add
pop
test
pop
mov
inc
or
xor
add
mov
add
pop
test
pusha
jl
cld
fs
sbb
adc
mov
push
inc
push
nop
and
rcrb
sub
or
xchg
push
sbb
adc
cmp
add
xchg
xchg
cwtl
es
addb
mov
dec
add
movsl
adc
mov
cmpsl
jne
dec
push
cmp
and
or
sbb
test
sarb
inc
mov
mov
test
mov
or
cmpsb
rorb
mov
cld
jb
inc
mov
int3
lret
and
push
dec
cwtl
movsb
or
mov
pusha
and
or
mov
cld
add
add
cltd
push
add
or
int3
ds
shlb
shl
mov
jl
inc
adc
sub
sub
jecxz
add
lock
mov
das
and
rcrl
cli
jbe
xchg
sub
test
xor
pop
or
pop
xchg
xchg
outsb
aas
int3
ljmp
jecxz
mov
dec
aam
adc
add
jp
int3
xor
sub
or
es
add
adc
sarl
ret
loop
cmp
mov
nop
push
mov
dec
cwtl
dec
leave
push
stos
jl
fcoms
or
dec
ljmp
pushl
test
dec
ret
mov
dec
pop
fimull
test
push
cli
sbbb
insb
in
call
test
sbb
add
inc
add
adcb
int3
in
jno
lock
cwtl
adc
sub
add
int3
out
dec
loop
add
inc
and
sub
dec
inc
push
add
mov
cmp
mov
callw
adc
xchg
nop
pop
pop
adc
push
and
push
les
push
insl
dec
insl
ret
lcall
pushf
in
mov
add
outsb
ss
jl
movb
sub
mov
pop
mov
inc
xorl
clc
sbbl
mov
je
fs
sbb
mov
mov
adc
cmp
or
dec
lods
pop
movb
movsl
cmpsb
dec
mov
out
sub
mov
mov
dec
fcomps
cwtl
add
cmp
dec
dec
mov
nop
inc
add
adc
sub
adc
arpl
push
inc
add
adc
inc
mov
xchg
inc
push
push
jo
les
sbb
je
mov
sub
movsb
shrb
xor
adc
cltd
and
or
or
push
insb
and
rorb
sbbb
fcmovu
inc
dec
or
cltd
mov
lcall
dec
fs
add
xor
cld
or
shrb
push
ljmp
mov
add
inc
push
scas
and
add
fcmovu
push
ss
mov
adc
sbb
pusha
bound
add
dec
sub
xchg
adc
js
jo
les
push
sbb
or
and
cmpsb
jo
cwtl
aam
push
ljmp
mov
cmp
insb
mov
cmp
mov
loopne
and
mov
push
negb
cli
add
lcall
dec
sbb
dec
mov
sub
add
adc
xor
lret
insb
enter
xor
pop
xorb
test
test
mov
or
and
pop
sbb
xor
adc
pop
cmpb
scas
dec
fs
adc
or
rorb
mov
sub
in
cld
cmp
push
pusha
test
jo
push
mov
add
outsb
cmpsb
add
add
push
shlb
loopne
pop
mov
rol
add
lock
cltd
les
xor
sbb
or
or
cmc
jb
adc
xchg
xor
andb
push
adc
xchg
dec
lock
xchg
sub
sub
hlt
push
xchg
cli
push
nop
add
not
bswap
mov
push
in
test
mov
inc
out
pop
cli
aas
pop
sub
pop
sbb
je
imul
push
repnz
mov
push
loopne
push
sub
and
aad
adc
xor
xchg
add
or
inc
push
scas
push
leave
inc
gs
cmp
cmp
adc
inc
and
movsb
repnz
movsb
xor
mov
scas
or
dec
sbb
repnz
sbb
ds
sub
test
inc
inc
insl
ss
mov
xor
inc
push
xchg
nop
enter
xchg
dec
sub
cld
mov
mov
jo
test
ss
inc
cltd
ljmp
mov
push
sbb
add
nop
xchg
lods
and
or
inc
jns
pop
mov
fsubrs
insl
testb
and
adc
push
jbe
cmp
pop
lret
dec
sub
inc
cmp
jb
sub
add
pop
pop
mov
push
and
jo
sub
sub
sbb
add
cltd
sub
push
and
ljmp
aam
jo
bound
jbe
test
movsb
xchg
jl
fcomps
pusha
xchg
sbb
popa
inc
inc
outsb
jae
pushf
xchg
lret
or
add
test
pusha
push
test
ss
sbb
fcomp
aam
fsubrs
inc
aad
dec
and
cmp
mov
cwtl
fadds
sub
scas
mov
add
cmpb
mov
push
push
nop
sub
mov
movsb
push
and
and
and
push
sbb
and
pusha
sub
aad
int3
add
sahf
shrb
shlb
sbb
xchg
add
push
xchg
add
loop
es
or
xchg
ds
sahf
add
xchg
testb
inc
and
and
mov
sbb
xchg
loope
sbb
pop
inc
push
mov
push
lock
jo
add
test
imulb
adc
inc
xor
or
adc
leave
adcb
mov
or
sub
dec
cmpsb
mov
inc
mov
pop
cmpb
scas
lcall
and
gs
xchg
or
outsb
mov
push
dec
and
inc
add
push
sbb
adc
lea
loopne
orb
adc
test
lcall
pop
subb
cmpsb
insl
xchg
adc
movsl
push
push
lret
loope
loop
cwtl
mov
cwtl
adc
loopne
cmpsb
dec
fiadds
lock
shrb
sub
cmpsb
test
xchg
pop
xchg
loopne
sbb
mov
sbb
aad
rorb
daa
imul
pusha
xchg
mov
sbb
sbb
inc
xor
pop
dec
adc
cmp
mov
ret
pusha
cmp
push
jo
jl
dec
jmp
lods
or
jb
add
push
adc
test
pusha
fnsave
or
loope
sbbl
sarb
push
pushf
popa
test
sbb
add
add
ficoml
cmpsb
cmp
js
and
adc
enter
mov
xor
fisubrl
push
neg
test
xor
shll
pusha
pop
dec
mov
sub
int3
inc
loope
in
dec
test
push
shlb
xchg
ficoml
dec
adc
xor
or
dec
push
sbb
add
in
fbld
xchg
movsl
popa
es
xor
fs
cld
or
jo
pop
adc
mov
gs
inc
jl
or
sub
pop
jo
adc
jne
and
sub
out
inc
add
adc
roll
push
scas
mov
cwtl
mov
insl
aam
sbbl
and
adc
and
cmpsb
fistps
xor
lret
lcall
xor
pusha
pop
mov
fisttpll
jp
cmp
sub
push
data16
push
mov
pop
cmp
ret
pushf
pusha
xor
and
add
mov
lcall
or
dec
fs
add
nop
and
adc
xchg
dec
sbb
pop
mov
or
loop
loopne
adc
jo
add
push
jo
jl
aam
rcrl
sbb
adc
xor
les
xchg
cmp
lea
fimull
popa
sub
cmp
imul
xor
ds
shlb
cmpsl
lea
popf
pusha
mov
adc
pushf
jb
nop
push
fidivs
xor
cmpsb
nop
dec
cs
cmp
mov
sbb
dec
ret
sub
in
adc
aam
jb
add
xor
inc
mov
movsl
xchg
ret
add
and
mov
adc
xor
jb
imulb
add
icebp
scas
mov
xchg
das
jecxz
adcl
fsubs
ret
push
add
adc
das
cmp
cmp
es
fidivl
mov
add
lock
inc
ror
push
adc
ljmp
rcl
orb
cltd
or
or
insl
inc
inc
mov
xchg
add
mov
mov
dec
and
jmp
scas
fcmovb
pop
lret
or
int3
and
mov
mov
lds
add
ret
testb
or
sbb
ret
pop
cmc
or
xchg
nop
inc
add
mov
push
nop
and
inc
mov
inc
jle
adc
sub
mov
push
test
pusha
xor
mov
push
xor
xor
pop
lock
sub
mov
push
hlt
rorb
inc
sbb
xor
inc
push
sarb
inc
and
mov
gs
cmpsb
outsb
adc
lock
push
push
pusha
add
and
pop
or
in
mov
lcall
sbb
pop
insb
xor
movsb
nop
push
mov
xor
dec
ljmp
xor
mov
push
icebp
inc
xor
xchg
jne
xorl
call
bound
addl
and
and
dec
add
in
or
push
mov
and
mov
andb
add
xorb
dec
sub
or
push
insb
cmp
pusha
xchg
add
das
mov
xor
push
dec
inc
xor
test
sbb
adc
int
xchg
add
test
mov
xor
xchg
xchg
cmp
xor
enter
cltd
enter
or
loopne
call
push
mov
mov
sub
out
push
sub
sub
mov
mov
addb
testb
lret
data16
aam
movsb
pop
mov
mov
loop
sahf
push
add
xor
sub
adc
or
call
xchg
add
mov
je
cmc
pop
fs
sub
xchg
push
push
enter
scas
mov
jl
jb
ljmp
xchg
ds
or
sbb
dec
dec
dec
xchg
rolb
fs
lret
rclb
adc
mov
imul
outsb
push
cmp
dec
jle
and
inc
xchg
or
lret
and
ret
pop
mov
adc
and
dec
pop
test
inc
test
add
xchg
add
ljmp
and
sub
mov
cmpsb
es
adc
mov
or
inc
add
pop
jo
les
ret
cmpl
sahf
faddl
inc
dec
fmull
sub
add
inc
mov
hlt
mov
and
lret
adcb
sahf
xchg
and
sbb
pop
and
adc
dec
xor
sub
lds
cltd
pop
inc
mov
xchg
pop
inc
jecxz
push
shlb
mov
xor
xor
xorb
es
adc
lcall
cwtl
xchg
add
insb
pop
pop
aam
mov
and
inc
xchg
call
fs
je
mov
test
add
add
inc
outsb
add
dec
cmp
in
sub
pop
mov
mov
enter
cmp
nop
or
insb
add
movb
add
dec
test
rcl
inc
dec
push
or
enter
sub
sub
add
es
adc
or
jle
cwtl
or
push
dec
adc
or
push
cmp
movsl
add
jecxz
inc
add
sub
rclb
add
and
aam
mov
lcall
xor
lcall
inc
sbb
js
xchg
inc
or
adc
xchg
lods
add
jo
das
add
xor
test
pusha
mov
jbe
mov
sub
jp
call
inc
and
or
cmpsb
adc
fld
mov
es
loopne
fsubs
jl
add
es
pop
ret
push
aam
shll
rcll
sub
dec
lock
dec
add
mov
int3
adc
mov
hlt
xchg
ss
xchg
sbb
add
inc
or
adc
sbb
ss
cld
sbb
xchg
in
cmpsb
add
jnp
xor
out
jl
dec
loopne
mov
jb
push
mov
outsb
adc
adc
add
or
cwtl
adc
lods
or
add
idiv
xor
add
mov
xor
and
add
push
sub
push
test
mov
andb
ret
sub
je
inc
cs
loope
ret
inc
dec
cs
xchg
mov
ret
add
sub
call
xchg
lret
sbb
and
pop
mov
sbb
mov
lods
adc
and
mov
ljmp
scas
jbe
jle
inc
fs
jle
andb
push
push
add
nop
cmp
test
jle
hlt
sar
sbb
and
push
ljmp
ds
dec
jnp
pop
push
xor
dec
rolb
hlt
inc
dec
aas
adc
nop
popa
es
inc
test
into
inc
adc
jnp
sbb
mov
mov
or
sarl
xchg
inc
add
or
inc
or
add
lret
aas
ja
jo
sbbb
sbb
add
fiadds
mov
es
and
mov
mov
xor
dec
nop
dec
sub
xchg
adc
outsb
in
pusha
sub
aam
in
js
dec
pop
dec
test
je
nop
fsubl
add
rcll
cs
fadds
mov
inc
out
sub
fidivl
dec
add
dec
xchg
xchg
cmp
cwtl
cmp
rol
ss
sub
es
xchg
add
or
push
adc
inc
xchg
dec
inc
push
dec
js
push
test
dec
push
jb
mov
cmp
jl
adc
xor
adc
lock
movsl
loope
jle
add
push
nop
dec
add
es
cli
xor
out
mov
and
cmpsb
faddp
in
in
adcb
xchg
pop
sbb
xchg
sub
orb
out
xchg
add
xchg
mov
jl
ret
and
push
pop
and
outsb
push
or
ljmp
fsts
add
sub
adc
nop
and
add
rolb
mov
cmp
push
add
jo
test
loopne
mov
mov
cmpb
roll
push
sbb
push
cmp
push
or
dec
mov
sbb
fs
or
push
push
cmpsb
or
loop
cli
push
enter
mov
push
int3
aam
popa
sub
xchg
xchg
xor
adc
mov
inc
out
les
inc
pusha
data16
mov
add
mov
push
inc
rol
hlt
mov
aad
or
test
rolb
push
cli
jo
loope
xchg
les
cmp
jnp
dec
lods
call
push
add
sub
aad
mov
and
xorb
addb
mov
pop
pop
dec
adc
js
mov
cmp
addb
add
test
xor
insl
int3
dec
test
pop
mov
cmpsb
and
movsb
sbb
mov
pop
pop
pushf
call
push
sbbb
mov
add
and
cs
add
mov
or
add
jle
mov
sbb
dec
mov
pop
sbb
add
cmc
push
xchg
or
les
xor
mov
add
fisubrl
negb
sub
rolb
lods
mov
or
mov
pusha
cmp
pop
dec
in
sub
imul
es
jo
sub
inc
xor
and
stos
loopne
cli
aas
cmp
jge
pop
jp
mov
loop
add
mov
push
inc
call
inc
popa
cwtl
adc
fsubs
add
or
sub
imul
cld
xor
clc
movsb
fsubl
sub
inc
cli
sbb
addr16
das
jbe,pt
outsb
pop
dec
fdivrp
mov
int
xchg
lods
xor
rclb
jp
nop
push
ffree
int3
sarb
fcoml
or
inc
inc
push
cmpsb
mov
push
inc
test
andl
xor
or
inc
cmpsb
adc
mov
ljmp
mov
rol
sub
out
cltd
pop
xor
inc
invd
data16
lcall
pop
jp
mov
mov
shr
sbb
jle
imul
push
dec
dec
shlb
ficoms
jle
push
push
add
push
and
xor
je
add
in
push
sbbb
and
hlt
loopne
and
xchg
xchg
inc
adc
pushf
adc
jo
and
dec
or
sub
xor
lcall
dec
xchg
sbb
icebp
xchg
sub
push
cltd
cmc
je
jl
rcrb
push
sbb
rorb
push
pop
dec
scas
sbb
rclb
dec
add
adc
nop
pushf
xchg
sbb
push
pop
mov
cld
cltd
mov
mov
pop
sbb
push
int
dec
mov
sahf
jns
xchg
add
enter
loop
add
sbb
sbb
hlt
push
adc
and
push
cmc
mov
pop
push
cmp
loope
int3
mov
adc
hlt
dec
loop
mov
sbb
mov
popa
in
add
sbb
jb
push
or
or
sbb
loopne
ficomps
sbb
test
push
cmpsb
adc
xchg
mov
mov
push
adc
leave
test
jb
pop
xor
xchg
jne
out
mov
les
push
or
adc
and
jns
or
lock
ss
lcall
or
call
ljmp
xorb
mov
push
les
mov
ss
jae,pn
js
test
rclb
cmc
loope
mov
aam
pop
or
xchg
inc
xor
test
push
xor
xor
xchg
pop
lods
mov
mov
fdivl
popa
movsb
mov
xchg
mov
lret
xchg
leave
and
inc
sub
outsb
push
push
mov
ss
add
mov
aam
out
cld
dec
cli
cmp
test
adc
aad
add
add
mov
pop
adc
sub
push
leave
gs
sbb
jno
rcll
into
add
mov
and
flds
ja
or
subb
addb
push
add
dec
jg
addb
out
aaa
xchg
ja
sbb
push
or
in
enter
xchg
add
sub
leave
fs
or
mov
cmpsb
add
add
add
or
xor
or
sub
sub
add
dec
xchg
xor
es
inc
adc
dec
xor
dec
push
inc
adc
xor
inc
or
xor
mov
xor
fstl
adc
ljmp
xchg
test
lcall
xor
adcb
or
pop
clc
mov
and
or
mov
cs
dec
test
inc
pop
xor
in
dec
popf
lcall
inc
mov
push
dec
stos
mov
cwtl
nop
push
insl
lods
mov
dec
or
lcall
sub
fisubrl
lcall
mov
sbb
xchg
scas
sbb
data16
push
loope
dec
hlt
cli
mov
add
dec
sbb
pop
lret
ds
mov
mov
pusha
pop
add
cmp
pop
shlb
add
dec
shlb
inc
test
and
cltd
shlb
jl
jo
test
fwait
xor
jb
pop
dec
andb
and
roll
gs
mov
xor
and
add
sub
dec
or
scas
mov
dec
in
fcmovnbe
mov
cmc
loopne
inc
dec
xor
aad
adc
stos
lcall
pusha
insb
test
addl
pusha
pusha
jne
test
add
adcl
add
bound
mov
adc
inc
fmull
nop
shrb
mov
dec
dec
enter
adc
imul
les
or
leave
sahf
xchg
shrb
in
or
clc
nop
push
les
lret
xor
js
adc
mov
je
nop
loope
mov
dec
clc
xchg
fucomip
xchg
rol
insl
mov
imul
adc
add
stos
xorb
and
push
dec
dec
aam
dec
leave
inc
ds
daa
jne
push
es
mov
sub
pop
push
and
or
or
and
pop
lcall
lea
cmp
nop
adc
rclb
gs
jp
adc
push
xchg
or
cmpsb
repnz
adc
adc
xchg
or
jo
dec
stos
lcall
xor
cmp
and
or
add
enter
add
in
sub
fs
lcall
ds
mov
adc
mov
out
push
jle
imul
ds
adc
add
xor
dec
cmp
rolb
loop
gs
jne
rcl
mov
or
insl
lret
shr
adc
or
gs
es
rcrb
outsb
xchg
faddl
push
dec
popa
test
bound
xor
int3
mov
jo
scas
mov
testb
or
xchg
hlt
inc
subb
imul
add
add
mov
test
and
mov
add
add
push
xchg
mov
mov
xchg
add
jmp
xor
sbb
cli
mov
jp
add
pop
sub
jb
fildl
push
mov
xchg
lret
xchg
ljmp
pushf
ficoml
xchg
imul
rcrl
jns
pusha
nop
dec
daa
xor
mov
ds
mov
mov
add
cmc
mov
pop
add
rclb
cld
jo
data16
jp
cmc
xor
jo
lcall
push
mov
push
push
inc
and
jle
mov
xchg
mov
dec
mov
and
push
or
dec
insb
test
mov
loop
fiaddl
xchg
inc
es
sarb
add
repnz
add
xor
mov
sbbb
inc
loopne
lcall
movsb
bound
add
rclb
add
sbb
and
mov
lret
or
add
add
xchg
pop
mov
jo
mov
cli
test
in
mov
les
adc
mov
add
into
loopne
sbb
xchg
es
pop
test
jmp
mov
and
mov
ljmp
jne
xchg
rorl
push
pushf
ljmp
insl
add
dec
xor
fs
pop
and
test
arpl
fdivs
dec
int
or
fstenv
sbb
adc
mov
push
jl
cmpb
subl
xor
inc
jmp
test
push
inc
es
ret
add
enter
popa
adc
cwtl
fsubl
xchg
cs
mov
add
adc
xchg
add
lods
add
call
mov
xchg
pusha
scas
add
stos
insl
cmc
xor
sbbb
aad
sub
cmpb
adc
sub
shlb
dec
addb
and
cmpsb
adc
push
mov
ljmp
sub
cmpsl
sti
sbb
es
jno
jmp
add
mov
es
lcall
sub
pop
xchg
lcall
outsb
imul
mov
mov
mov
push
or
ljmp
adc
cmp
or
inc
dec
mov
xor
lea
mov
movb
push
pusha
mov
adc
mov
push
mov
sub
mov
sub
scas
push
dec
orl
inc
adc
dec
and
xor
insb
sbb
xchg
dec
xor
pop
xchg
inc
pushf
adc
xchg
push
lahf
xor
adc
xchg
mov
or
pop
and
clc
and
sub
xor
and
push
jmp
cs
and
sbb
call
inc
and
nop
inc
cmp
jbe
mov
aam
jnp
push
movsb
rcr
inc
fsubrs
das
mov
mov
xor
jb
mov
adc
adc
pop
in
fbstp
add
sub
and
aam
mov
cmp
sbb
rclb
adc
push
dec
xor
int3
or
dec
add
mov
rcrl
sbb
lcall
sub
movsb
lock
push
mov
cmp
pop
xchg
mov
push
rcl
sbb
push
add
sbb
outsb
andl
push
stos
push
orb
loopne
les
xchg
mov
fmuls
sbb
cmpsb
jns
push
dec
daa
mov
nop
shl
scas
push
sbb
and
pop
adc
sub
shrb
mov
pop
jb
xchg
scas
ret
or
and
pop
aad
xor
inc
movsb
test
or
inc
xchg
dec
pop
xchg
and
in
or
jo
subb
cs
data16
lock
ret
out
sub
adc
and
adc
mov
mov
inc
cltd
ret
loop
je
inc
or
int3
push
test
mov
inc
popa
lret
sub
add
adc
adc
mov
dec
or
or
icebp
xchg
gs
loop
pop
mov
and
imul
adc
sbb
cli
and
pop
mov
not
jb
popa
test
test
jle
cmp
lcall
and
or
and
mov
add
fwait
push
pushf
dec
rcrb
sbb
insb
loopne
or
sbb
pusha
push
cwtl
lea
inc
add
adc
inc
mov
sbb
mov
dec
xchg
sbb
or
ljmp
push
dec
shlb
add
adcb
call
xor
sbb
push
push
inc
shlb
insl
add
dec
and
or
add
aad
xchg
pusha
aad
js
or
repnz
adc
push
hlt
rolb
add
xchg
ret
bound
push
loop
test
adcb
daa
dec
xchg
movsl
test
pop
and
mov
dec
mov
xchg
lods
add
pop
add
xor
add
jo
cmp
xchg
sub
sahf
and
pushf
in
out
popa
xor
es
hlt
test
push
add
cli
ret
sub
dec
lock
cltd
loope
popf
push
in
sbb
jo
xor
mov
rcrb
sub
dec
push
test
xor
adc
les
mov
clc
fsubr
push
add
mov
adc
push
bswap
into
mov
sbb
test
mov
adc
push
push
or
cli
sub
add
call
add
dec
cli
or
adc
and
mov
push
cmpb
cmpsb
nop
cmp
xor
pop
ss
scas
sbb
mov
sbb
dec
test
test
fsubs
xchg
add
add
pusha
in
xor
push
adcb
es
jo
or
add
pop
xor
loop,pt
or
lods
and
stos
or
jne
rcrl
or
add
push
adc
addb
into
inc
rolb
mov
scas
call
cld
fdivrl
stos
ret
sbb
loopne
adc
cltd
cmpsb
xor
testb
andb
jbe
or
addl
cmpsb
sub
imul
sbb
push
push
cwtl
mov
jbe
adc
inc
xchg
or
push
sub
aad
jmp
or
scas
sub
sub
cwtl
add
cmpsb
xchg
jge
adc
xchg
scas
sahf
or
or
cwtl
sahf
jb
test
loop
sub
pop
test
or
and
pop
xchg
xor
adc
add
gs
sub
jo
cmp
or
dec
sub
cmp
popa
dec
sub
xchg
jb
bound
imul
aaa
push
bswap
ss
push
ret
inc
cli
loop
sub
lods
pop
mov
mov
outsl
pop
mov
pop
lret
mov
int3
push
mov
cmpb
add
lods
mov
xchg
test
add
int3
dec
rorl
adc
xor
loope
jb
mov
ja
cmp
pop
sarl
insl
das
out
in
out
push
loope
leave
js
es
dec
adc
inc
xchg
ret
out
adcl
or
xchg
lret
cli
jp
loop
push
lret
pusha
js
mov
jb
cltd
cli
sbb
loope
bound
lcall
jbe
cs
jbe
xor
xchg
or
adc
mov
jo
pusha
xor
jbe
or
out
dec
enter
movsbl
popa
inc
add
mov
inc
dec
fcomps
xchg
cwtl
mov
inc
push
xchg
sbb
and
test
push
cld
sbb
mov
addr16
sub
andb
or
clts
mov
mov
in
and
mov
subl
pusha
xorl
mov
rclb
add
js
repnz
roll
stos
nop
add
test
inc
xchg
xor
out
cli
pop
push
sub
pop
add
push
dec
cvtpi2ps
out
ret
insb
call
or
adc
adc
leave
or
sub
je
pushf
out
pushf
push
adc
call
adc
loop
dec
pusha
leave
mov
nop
test
mov
push
es
test
pop
nop
shll
mov
mov
shll
mov
loop
lcall
ds
push
add
pop
or
cli
es
xor
xchg
addb
in
or
clc
data16
arpl
or
fsubr
sbb
xchg
jne
jl
dec
insb
fldenv
mov
sub
sub
mov
loop
aam
cmp
jno
aam
cwtl
js
jo
cmp
hlt
pop
dec
jb
loop
movsb
cmp
pusha
cmp
andl
test
or
pop
and
add
xor
xchg
rorl
inc
mov
sbb
in
and
xorb
sub
and
cs
add
popa
or
push
cwtl
dec
addb
mov
test
push
loop
cmpl
les
ljmp
cltd
jne
mov
pop
pusha
pushf
insl
add
lcall
mov
in
lret
cwtl
sbb
push
pop
push
testb
or
aam
cmpsb
xchg
xchg
nop
aam
push
cmpsb
imul
add
mov
xor
or
shl
dec
xor
adc
stos
and
nop
loopne
push
es
or
pusha
xchg
push
sub
add
push
es
mov
stc
sbb
add
test
pop
insl
loopne
pop
adc
sub
xorl
ljmp
jl
push
je
cli
test
in
ret
push
orl
inc
loope
call
or
pop
mov
mov
and
xor
push
fidivrl
sarb
or
movsb
int3
js
add
mov
and
fisubrs
and
das
add
int3
dec
push
pop
add
pop
pusha
cmpsb
and
sar
inc
fs
cmpsb
mov
sub
inc
dec
xor
pusha
sbb
push
add
push
xchg
mov
mov
mov
ret
or
out
stos
mov
push
mov
loopne
arpl
sbb
les
inc
popf
sub
mov
test
mov
cmpb
or
cmpsb
dec
pusha
lret
popa
call
inc
stos
add
test
or
add
adc
lcall
fists
test
fsts
sarl
push
inc
add
xor
add
jp
xor
pop
add
movsl
push
xor
imul
dec
cmpsl
das
xchg
arpl
andb
ds
hlt
xor
jp
add
mov
pop
sbb
loop
pusha
and
roll
xor
mov
add
mov
shlb
out
ss
adcl
adc
xor
adc
jl
sbb
mov
lret
push
test
cmpsb
out
cmpsb
orl
inc
xor
pop
pusha
decb
mov
loopne
lret
pushf
push
mov
xor
mov
nop
xor
pusha
push
sub
lret
xchg
and
mov
cs
test
adc
nop
inc
sub
nop
fisubl
sbb
int3
lods
mov
sub
add
or
nop
add
fs
mov
push
sub
incb
inc
ret
adcb
mov
mov
test
call
add
aad
ret
test
test
out
dec
ljmp
mov
sbb
xchg
push
inc
mov
xchg
sub
test
sub
push
out
jo
test
les
adc
add
subl
xor
sub
or
scas
xchg
pop
inc
inc
add
int3
mov
call
and
or
inc
cli
hlt
jne
rorb
scas
mov
mov
push
push
int3
xor
pop
mov
push
mov
xor
cmp
adc
outsb
pop
shlb
cwtl
xchg
data16
in
dec
inc
dec
dec
loopne
enter
pop
sbbb
and
jmp
xchg
sbb
and
dec
test
gs
or
outsb
pop
mov
test
mov
mov
adc
pop
add
xchg
mov
push
or
xchg
call
dec
inc
add
loop
test
inc
out
in
sub
dec
orb
cmc
pop
adc
push
rorb
mov
and
fisubs
lods
xchg
leave
sbb
xor
mov
and
adc
xchg
and
push
inc
fs
add
fadds
lret
sub
or
les
inc
fcmovbe
pushf
sbbl
fnstenv
xor
je
cs
sub
sahf
les
mov
cmp
aam
orb
and
mov
dec
movb
roll
push
jbe
into
insb
test
mov
mov
xor
ret
gs
lret
les
inc
sub
in
add
and
imul
test
mov
loope
gs
jo
push
push
mov
pop
xor
pusha
enter
push
inc
sub
movsl
xchg
xchg
nop
fs
adc
push
inc
pushf
scas
pop
or
mov
aaa
cmp
or
hlt
lret
les
xorl
ror
fs
dec
and
dec
or
or
add
add
cwtl
push
inc
loope
push
pop
mov
add
in
xchg
xor
cmp
cli
loope
dec
lods
fmull
xchg
rclb
mov
mov
adc
fadds
mov
ds
push
and
inc
hlt
push
pop
nop
bound
pop
xchg
cmc
xorb
pop
or
cmp
or
nop
sarb
aad
add
fimuls
cs
or
xor
add
fisubrl
and
add
fisubrl
loope
movsl
rcr
ds
jae
outsb
pop
dec
cmp
push
nop
mov
lea
inc
addl
cmp
add
jns
mov
mov
arpl
sub
mov
dec
mov
or
dec
adc
call
add
xchg
adc
loop
jo
add
call
loope
nop
test
ret
jo
pusha
test
jo
adc
pop
inc
xor
xor
mov
add
mov
dec
push
faddl
inc
jne
or
xorb
test
int3
call
inc
xchg
orb
add
outsb
push
or
sbb
or
cmp
mov
or
xchg
fmul
outsl
mov
add
sub
rclb
dec
cmp
add
inc
rolb
inc
sub
inc
dec
xor
je
outsb
push
xchg
fidivs
dec
and
scas
dec
imul
cmp
adc
vandps
dec
push
lret
loop
xor
mov
xor
mov
mov
in
js
mov
les
add
test
ds
or
dec
push
test
inc
aam
pusha
push
das
push
lcallw
les
sub
pushf
dec
dec
loopne
mov
or
push
xor
jecxz
mov
jb
addb
test
push
sarl
insl
xor
ret
fcmove
popa
push
mov
sub
sbb
imul
cli
outsb
mov
mov
sub
or
stos
jne
aam
dec
loopne
movb
mov
sub
cltd
pop
imul
xor
push
push
push
xor
imul
push
loop
mov
mov
es
dec
add
hlt
xchg
pop
int3
adc
rcl
ficoms
data16
sbb
ret
or
and
adc
jp
push
sbb
xchg
xor
mov
xchg
mov
add
adc
imul
sbb
xchg
roll
sbbl
cwtl
mov
cli
fisubs
mov
xchg
ret
sub
jo
add
lock
xor
in
sub
outsl
mov
mov
roll
add
and
adc
into
ljmp
pop
imul
ljmp
arpl
add
add
inc
jp
es
rcrb
push
fadds
int3
pop
jle
pop
or
and
mov
dec
icebp
add
sbb
cmpsb
pusha
insl
cmp
pop
ret
sbb
mov
add
dec
sahf
mov
sub
sub
xchg
cmp
inc
jo
fcoms
lret
test
sub
mov
fsubrl
push
out
pusha
push
test
xor
push
lock
lcall
mov
pushf
inc
sbb
adc
push
lock
gs
in
add
popa
int3
inc
mov
inc
sbb
and
xchg
scas
lds
or
call
test
jo
add
enter
lods
lods
addb
push
mov
or
pusha
sub
repnz
inc
loopne
inc
clc
add
xchg
xchg
xor
sub
xor
mov
loop
push
test
mov
add
sub
mov
inc
and
and
cs
jg
pushf
stos
imul
xor
inc
xor
int
cwtl
inc
push
xor
sbbl
adc
ret
sbb
test
out
test
xor
adc
cmpsl
or
sub
inc
test
and
icebp
xor
enter
cwtl
movsl
scas
or
push
sbb
outsb
mov
or
and
subb
and
mov
dec
xchg
add
inc
data16
ds
add
testb
push
pusha
test
xor
add
push
sahf
xor
pop
mov
gs
xor
lock
mov
call
sbb
sub
data16
push
aam
hlt
cmc
dec
mov
push
sbb
add
add
popa
daa
sub
loopne
adc
insb
imul
add
rcrb
sarl
jle
pop
push
adc
sarl
je
sub
cli
mov
dec
ret
xchg
test
adc
in
mov
push
and
js
mov
xor
test
or
mov
test
mov
jo
or
add
xchg
ljmp
gs
sbb
orb
push
push
sbb
sbb
es
insb
add
dec
in
outsb
inc
sbb
dec
ret
dec
cmpsb
test
sub
loopne
or
popf
xchg
dec
sahf
cli
pop
popa
cltd
rolb
push
add
adc
fs
xchg
enter
js
adc
xchg
add
push
sbb
or
lcall
outsb
jb
popa
js
shlb
cltd
rcll
jl
les
data16
out
push
repnz
insb
and
push
push
les
mov
sub
mov
push
inc
lods
fs
cmp
and
cs
int3
lret
adc
or
push
or
out
add
mov
rolb
movsb
dec
sbbb
xor
adc
fs
add
and
pop
mov
dec
sub
xchg
xor
fmul
xchg
or
rolb
cmp
xchg
or
push
inc
aam
add
mov
dec
loope
outsb
sahf
sbb
push
pushf
hlt
inc
cmp
and
mov
jl
sbb
push
js
fiaddl
dec
dec
loope
and
xor
shlb
pop
mov
sbbl
nop
adc
dec
sbb
movb
and
jo
lea
idivb
loopne
pusha
xor
jl
mov
and
mov
sbb
sub
es
xchg
pop
dec
cmp
mov
imul
cmp
xor
push
cs
mov
add
push
and
mov
in
mov
pushf
test
int3
jmp
xor
ret
into
inc
cmp
nop
push
loope
inc
rolb
or
xor
dec
mov
lcall
push
add
push
lea
mov
pusha
pusha
adc
addr16
add
pop
adc
orb
in
xlat
or
xor
pop
push
sbb
call
add
dec
loope
into
sub
inc
adc
js
or
add
xchg
sbb
divl
lods
sbb
sub
out
hlt
aam
add
push
daa
xor
pop
mov
dec
inc
int
adc
int3
sub
leave
data16
adc
sub
add
sub
push
push
loope
xor
rcll
pop
push
or
testl
loop
add
out
fsub
sahf
jne
pusha
xchg
orl
ret
xchg
scas
jl
ret
mov
addb
xchg
in
sbb
xor
xchg
adc
lret
lock
sbb
xchg
push
add
je
and
lret
xchg
pop
repnz
and
dec
push
cmp
inc
gs
scas
es
add
push
sahf
pop
cli
mov
loopne
je
lea
add
jp
adc
and
loopne
test
or
dec
xor
xor
sbb
add
insl
call
sbb
stos
cmc
pusha
mov
in
ret
fldenv
dec
loop
faddl
push
adc
push
mov
and
data16
in
mov
jb
js,pt
aad
xchg
mov
mov
loopne
and
sub
add
push
and
cbtw
dec
push
enter
add
pop
adc
fimull
dec
push
fs
out
mov
cwtl
cmp
mov
push
or
enter
nop
cmp
cmp
and
push
sbb
add
loop
fmull
xorb
sbb
mov
adc
mov
dec
adc
addb
jle
xchg
inc
or
xor
test
sub
jnp
jne
cwtl
fs
mov
ds
fs
lret
jp
cmc
xor
mov
mov
enter
leave
add
nop
adc
adc
testb
fisubs
into
adcb
xor
add
mov
cmpsl
orl
pop
fisubrl
mov
fisttps
insl
sub
dec
dec
add
push
jl
out
and
lret
pop
cltd
cld
push
fadd
xor
xor
and
jnp
inc
xor
test
xor
in
add
mov
loopne
ljmp
mov
xor
dec
and
adc
dec
and
add
and
ficoml
pushf
notb
mov
inc
sub
push
add
cmp
adc
mov
xchg
fcmovbe
rolb
jge
sbb
dec
sbb
push
push
cli
lret
test
subl
xchg
sub
fidivs
inc
andl
sbb
mov
jp
test
stos
xorb
insb
lcall
and
and
add
test
push
or
or
pop
into
xchg
pop
rolb
push
jp
cli
ficoms
and
push
jp
or
arpl
movsb
mov
loop
ret
ret
jecxz
pop
test
mov
mov
xchg
adc
and
pop
push
xchg
pop
mov
dec
add
xchg
sub
adcb
bound
mov
cwtl
roll
mov
adc
mov
inc
ds
mov
data16
inc
xchg
inc
loopne
or
add
dec
decb
test
add
pusha
push
insb
andl
pushf
pushf
push
sbb
adc
shlb
push
test
xor
fiaddl
mov
sub
clc
sbb
inc
fsubs
imul
cld
insl
nop
adc
and
adc
push
insl
in
je
cmpsb
daa
shlb
test
mov
dec
add
shll
add
mov
icebp
in
sub
push
adcl
xchg
and
pop
mov
adc
xor
je
adc
cmpsb
add
mov
mov
or
and
xor
inc
shrl
and
or
add
xorb
add
add
sbb
sub
test
call
cwtl
sbb
sbb
js
add
sbb
test
test
jo
repnz
cli
loopne
inc
add
sub
mov
adcl
dec
test
rcr
js
lock
push
mov
cwtl
or
andb
mov
gs
dec
cmp
push
test
dec
cwtl
mov
push
push
out
add
mov
mov
insb
pusha
loopne
gs
gs
adc
mov
ss
int
push
adc
mov
and
aam
lcall
adc
add
sbb
inc
loop
lret
mov
mov
mov
jb
clc
xchg
test
inc
outsl
push
add
fcoml
add
cmc
sub
addb
xchg
mov
aad
nop
add
jbe
cmp
lret
and
cs
loope
lcall
mov
push
ljmp
subb
sbb
push
sub
add
xlat
push
inc
orl
xor
mov
jo
movsb
xor
sahf
mov
add
add
push
shll
or
add
sbbb
mov
adc
cmp
and
jb
mov
sbb
xchg
add
push
adc
push
xchg
rorb
movsl
mov
jle
and
pop
add
nop
lret
sub
adc
cmp
cmpsb
sbb
rclb
call
inc
ret
inc
or
xor
popf
add
cs
cwtl
add
jb
add
test
jns
enter
inc
sbb
jp
cwtl
int3
push
mov
orl
lock
sbb
test
movsb
add
jecxz
nop
inc
jl
pop
movb
shlb
int3
dec
popa
jle
adc
xchg
test
sbb
les
mov
rcrl
add
add
cli
add
cmp
push
je
cmp
jp
xor
xor
scas
mov
push
pop
sub
inc
sub
outsb
sub
mov
cld
jne
and
rcrb
cmp
mov
push
or
in
cli
add
xchg
or
out
push
add
mov
stos
pop
xchg
sbb
add
test
and
sub
or
gs
push
cmp
push
push
add
scas
dec
inc
ss
xchg
stos
sub
dec
mov
adc
pop
add
call
inc
hlt
insw
cmp
mov
adc
jne
mov
dec
cmpsb
sbb
popa
push
pusha
sbb
inc
imul
les
xor
add
push
add
xchg
stos
dec
sbb
cmp
cmp
inc
dec
cmpsb
test
pushf
sub
mov
push
sub
or
push
sub
xchg
or
test
mov
ljmp
mov
pop
addb
sbb
js
push
add
mov
in
rorl
stos
mov
push
push
add
test
push
and
cmpsl
add
data16
inc
inc
das
call
aam
sub
push
push
mov
jno
sub
jo
xchg
sub
loop
sub
dec
mov
aam
outsb
inc
fisttps
add
adc
pushf
inc
cmpsl
push
js
lock
add
pop
ds
loope
pop
fs
mov
rorb
pop
sbb
cli
negb
jb
push
xor
lret
sub
push
inc
push
fdivrs
and
loopne
push
je
lcall
es
and
adc
inc
cmp
jo
mov
push
lcall
push
and
cwtl
push
add
loopne
adc
mov
or
in
jl
add
add
add
pop
sub
stos
loopne
mov
loop
add
push
ljmp
push
sub
popa
and
xor
scas
sub
add
mov
adc
out
add
rorb
aam
shlb
adc
call
bound
loopne
add
fisubl
jb
test
test
es
or
mov
inc
xchg
or
ret
and
xchg
add
adc
push
je
lcall
hlt
aad
and
or
mov
and
xor
xor
or
pop
fisubrl
mov
ret
rclb
mov
dec
rcrb
mov
pusha
mov
bound
sbb
jo
jo
push
jp
loopne
push
dec
jns
scas
mov
movsl
push
enter
les
orl
sub
xor
scas
bound
cltd
mov
enter
scas
or
jle
dec
sub
mov
adc
test
sub
es
push
cwtl
adc
xor
inc
test
push
pop
inc
inc
and
inc
sbb
xor
or
and
xchg
xchg
mov
mov
movsb
inc
mov
popf
sbb
aam
dec
inc
sub
inc
push
int3
fs
push
cmp
pop
les
bound
add
jo
xor
inc
repnz
movsb
adc
test
pop
sbb
jecxz
xchg
mov
mov
into
push
add
jb
mov
add
bound
or
add
pushf
ds
cmpsb
pop
mov
jo
push
cld
inc
and
mov
and
and
inc
add
gs
dec
pop
rolb
add
and
xor
inc
dec
in
inc
sbb
fisttps
addl
dec
ret
loopne
loopne
outsb
lcall
push
outsb
mov
jg
jg
movsb
dec
clc
ret
xor
dec
cmp
icebp
xor
imul
xor
ret
mov
adc
enter
aad
loopne
test
sub
test
repnz
jo
loop
push
dec
pusha
cmpsb
xchg
inc
dec
stos
inc
mov
int3
pusha
mov
inc
jno
test
add
xor
dec
adc
test
push
add
bound
add
cli
test
push
push
xchg
push
pop
rolb
movsb
pop
mov
aam
sub
xorl
dec
and
shlb
adc
inc
xor
inc
and
sub
ret
or
xorb
test
call
add
inc
inc
adc
and
add
dec
dec
xor
ljmp
or
mov
fs
clc
data16
dec
or
hlt
push
and
inc
inc
sbb
xchg
leave
pusha
add
mov
cwtl
shlb
mov
mov
jp
mov
mov
mov
enter
sbb
mov
jbe
ret
sarl
xor
pushf
cs
dec
xor
mov
add
les
pusha
xor
xor
add
adc
sub
insb
cmp
mov
test
mov
jp
xchg
ficoml
jle
dec
add
mov
push
je
pusha
inc
movsl
lods
pop
rolb
sbb
or
addb
adc
adcb
push
add
mov
fs
sbb
pop
push
or
pop
test
orb
and
mov
or
inc
or
or
mov
sub
lret
fildl
and
dec
dec
push
sub
lods
pushf
stos
push
add
shr
cmc
icebp
js
inc
add
and
mov
retw
loopne
outsl
push
jo
stos
lock
xor
hlt
xor
pusha
add
lods
inc
jp
ljmp
cmpsb
imul
pop
push
mov
sarl
movsb
xor
js
dec
fmuls
repnz
insl
movsb
dec
sbb
cmp
mov
xor
mov
inc
sbb
rcrb
mov
bound
add
xchg
push
push
push
mov
xchg
sub
das
inc
sub
rcl
lcall
or
js
inc
cltd
shlb
mov
dec
adc
pop
inc
rorl
dec
insb
jp
push
jno
test
cwtl
ljmp
push
and
aam
rcll
xchg
add
cld
clc
or
add
sbb
cwtl
jo
cld
mov
xor
clc
push
aad
push
sbb
or
or
push
mov
sub
loope
sbb
inc
loop
mov
xor
add
xchg
dec
rcll
add
mov
push
add
lods
or
outsb
rolb
dec
imul
jle
pop
and
xor
or
jo
and
testb
cli
dec
lock
test
mov
cmpsb
inc
mov
jns
incb
or
jo
xor
adc
lret
sub
loop
addb
test
dec
adc
and
jo
dec
inc
cmp
pusha
or
dec
push
ss
ds
inc
test
rorb
pusha
push
or
pop
mov
les
xor
pop
mov
sahf
imul
xchg
or
js
pop
mov
test
and
dec
push
xor
cmp
xor
sbbb
inc
sarb
pusha
loopne
adc
sub
scas
mov
in
dec
icebp
xor
or
sbb
jne
cli
in
in
add
shll
and
xchg
fs
mov
scas
dec
fmul
andb
je
pop
dec
fs
add
lret
cmp
adc
xor
sbb
dec
xor
andb
inc
mov
divb
mov
or
adc
outsb
gs
push
rcl
ljmp
dec
push
or
mov
sub
dec
sbb
call
cmp
test
cmpsb
pusha
fmuls
loopne
xor
mov
jns
mov
xchg
aam
insl
out
mov
dec
cwtl
cltd
pop
pusha
les
cltd
or
hlt
lock
mov
or
or
xchg
test
lea
mov
test
fwait
xchg
jbe
dec
rol
fimuls
add
push
test
pusha
cmpsb
insb
add
bound
add
movsb
xchg
enter
xchg
mov
inc
mov
sbbl
int3
cwtl
dec
push
add
push
add
popa
add
repnz
pusha
add
fisubl
dec
push
sub
nop
push
inc
ds
sarl
xchg
mov
daa
mov
add
push
daa
push
add
adcl
sub
dec
test
es
inc
and
pusha
jbe
add
icebp
push
inc
mov
inc
int3
pop
jns
xchg
sbb
sbb
sbb
adc
add
jg
push
std
call
jge
scas
pop
mov
es
sub
stos
aam
push
and
sbb
loopne
push
mov
lods
test
xor
pop
mov
mov
xor
pop
sbb
xchg
testb
dec
mov
mov
sbb
bound
add
or
sbb
and
mov
pop
stos
ljmp
xchg
loop
pop
pusha
bound
adc
pop
xor
add
dec
or
dec
xor
pop
push
clc
outsb
adc
cli
adcb
sbb
lret
sub
adc
cli
sbb
test
loop
push
xor
xor
cli
mov
scas
sub
insb
andl
je
or
stos
ss
popa
adc
nop
sbb
and
add
sub
lods
or
cwtl
mov
sbbl
clc
loop
jecxz
enter
data16
or
inc
fs
jo
add
je
lock
or
popf
add
or
sbb
mov
call
outsb
lcall
mov
dec
dec
jp
scas
inc
movsl
mov
out
addl
repnz
xor
cwtl
fs
xchg
adc
cmp
enter
mov
aad
xchg
or
inc
and
inc
jmp
in
test
mov
shlb
adc
imul
and
mov
xor
sbb
and
or
or
mov
add
inc
sub
push
sbb
dec
adc
jb
pop
sahf
mov
or
or
bound
mov
mov
and
mov
mov
in
add
leave
cmp
mulb
sub
adc
hlt
pusha
mov
stos
aad
add
sbb
dec
push
fcmovu
aad
and
rclb
xor
sub
push
or
jne
loop
dec
mov
cmp
xchg
scas
jo
sbb
sub
popa
xor
push
aaa
addl
pusha
dec
mov
daa
or
xor
jo
add
aaa
lcall
xor
test
push
cs
lock
scas
mov
mov
mov
aad
or
add
jns
adc
xchg
les
add
add
test
clc
movsb
mov
popa
sub
or
sbb
movsb
xchg
inc
and
popa
or
cwtl
inc
test
int3
loop
jmp
inc
push
test
mov
rcl
jbe
add
cmp
and
xchg
or
push
lret
sub
push
push
lds
inc
scas
cmp
lds
adc
or
xchg
or
cmc
dec
sbb
sub
xorb
lret
mov
and
int3
pusha
and
push
push
int3
or
cvtdq2ps
adc
xchg
adc
cmpsl
push
sbb
xchg
sub
inc
popa
and
inc
xor
mov
js
into
in
mov
jp
enter
sbb
dec
je
dec
lret
lcall
add
inc
mov
mov
test
lock
cmp
sub
test
xorl
ret
add
gs
xchg
andb
or
sbb
add
add
or
mov
or
ret
dec
inc
test
test
test
stos
or
jge
xor
mov
jle,pn
loop
lret
rolb
add
xor
xor
add
push
sbb
jp
or
cltd
cmp
and
adc
and
cwtl
xor
in
mov
mov
xor
pop
jo
push
addb
subb
sub
inc
push
ss
rorl
ret
xchg
xor
push
cmp
scas
test
push
sbb
in
dec
movsl
nop
or
sbb
data16
jno
sbb
push
push
pop
mov
sub
and
dec
cltd
mov
and
arpl
and
pusha
push
fcoms
inc
into
sub
push
ret
jl
dec
xor
imul
pop
push
mov
stos
xchg
addb
add
or
xor
ret
sub
lods
jl
xor
add
ret
xchg
inc
jle
fs
rorb
nop
add
loope
cmpsb
push
shlb
test
dec
fisubl
icebp
add
ds
movb
jo
inc
or
add
xchg
enter
push
push
xor
cmc
xchg
dec
add
mov
adc
sahf
dec
mov
inc
rorb
push
cld
enter
fadds
inc
cld
and
scas
sbb
jo
mov
push
sbb
test
cmp
dec
lcall
inc
mov
cmc
lret
or
adcl
ds
adc
lcall
js
push
lcall
push
push
enter
les
std
call
inc
sub
lahf
jmp
and
push
ljmp
push
xor
adc
xchg
ret
jne
or
add
dec
repnz
fstpl
pop
movsl
and
stos
fs
repnz
adcb
cmp
call
lods
xorb
cmpsb
aaa
and
push
sub
inc
adc
lods
push
shlb
int3
add
incb
push
mov
add
or
out
mov
push
sarb
out
jb
push
outsb
out
adc
pop
cmpl
sbbb
imul
js
mov
in
mov
sbbb
add
pusha
jbe
push
loopne
data16
sub
adc
or
push
dec
xor
inc
jl
sbb
sbbb
dec
dec
inc
fs
or
add
loopne
or
orb
and
inc
mov
and
add
inc
mov
dec
divb
into
jb
sbb
add
subb
test
mov
dec
fs
adc
or
sbb
sahf
cli
bound
nop
and
movsl
mov
inc
xor
inc
xchg
sbb
dec
dec
xor
test
fwait
jo
mov
or
dec
data16
dec
mov
jno
mov
loopne
sbb
mov
or
sub
push
dec
push
dec
fidivrs
ret
les
ss
lods
aad
arpl
scas
clc
jne
rol
xorb
clc
je
or
insb
dec
dec
sbb
rolb
xchg
sbb
push
orl
inc
add
adc
loop
clc
rorl
pop
loopne
in
enter
add
test
xchg
lock
es
lock
imul
xor
push
pop
mov
hlt
mov
pop
imul
mov
cld
or
pop
xor
or
mov
and
mov
ret
push
add
xchg
add
clc
or
fwait
dec
pop
pop
clc
mov
add
push
push
call
cwtl
fdivl
dec
cwtl
into
les
xor
push
sbb
imul
fmull
sbb
mov
inc
or
dec
sub
adc
or
lret
fcoml
cmp
dec
inc
and
in
jl
mov
sub
sbb
pop
xchg
push
outsb
insb
add
adc
pop
pop
xchg
sbb
repnz
add
inc
les
cli
dec
test
ljmp
fadd
add
or
inc
push
push
iret
movsl
pop
pop
xor
push
dec
push
dec
inc
mov
dec
push
imul
inc
aam
test
xorb
pop
pusha
je
and
dec
lock
addl
rcr
imul
adc
xchg
test
push
outsb
fistpll
jbe
sbb
push
mov
fmuls
das
add
jne
adc
and
mov
sbb
or
lcall
sbb
lds
sub
rol
adc
test
and
push
inc
pop
push
rcll
inc
orb
dec
xor
adc
cmpsb
lock
jg
nop
or
add
adc
into
fisubs
xor
mov
cmc
or
or
pop
mov
movsb
xor
or
sbb
adc
pop
or
jbe
test
and
in
xor
add
insb
rorb
inc
cmp
mov
int3
add
or
adc
test
or
inc
jb
nop
mov
test
je
pop
mov
add
sub
faddl
add
fisttps
rorl
loop
lret
add
cmp
mov
adc
push
adc
subb
into
inc
loop
fdivr
mov
sbbb
pusha
jo
push
mov
insb
cs
popa
lock
adc
leave
push
push
cmp
sub
inc
inc
sbb
adc
jbe
push
lcall
sahf
cmpsb
mov
add
push
test
pusha
and
jmp
pusha
fs
jno
jp
outsb
inc
push
adc
xor
sbb
xchg
push
cltd
loop
jl
push
sub
jo
gs
popa
and
mov
and
inc
mov
fistps
sub
or
dec
dec
testb
sbb
add
mov
imul
pusha
and
adc
and
mov
fs
xorb
or
hlt
sbb
inc
mov
cmp
lahf
orb
mov
shll
rol
loop
hlt
shll
jb
cmpsb
mov
or
imul
je
cmpsb
push
rol
addb
dec
icebp
jb
pop
xor
push
loop
in
fcomp
test
leave
movb
inc
dec
rcrb
add
stos
jns
xchg
inc
sub
inc
xchg
into
pusha
rcll
sbb
pop
inc
pusha
jp
dec
mov
mov
mov
mov
jo
repz
mov
clc
addb
lcall
or
mov
shlb
ret
xor
xchg
pop
inc
je
dec
inc
nop
push
mov
sbb
loop
xchg
xchg
pop
xchg
push
inc
loopne
sbb
sbb
out
or
pushf
mov
and
jo
outsb
lret
or
push
fld
test
push
adcb
push
test
subb
mov
rclb
cmp
push
into
cwtl
sub
addb
add
xor
sarb
loope
adc
outsb
mov
cli
dec
sub
push
inc
dec
sub
and
cmp
sbb
call
test
mov
movsb
or
cmp
and
sub
jle
insb
enter
inc
jb
sbb
cmp
xchg
cmp
cmpsl
jno
mov
test
pusha
je
push
adc
pop
xor
dec
fcmovu
loop
pusha
and
adc
or
mov
sbb
cltd
or
sub
pop
and
mov
or
outsb
xor
gs
cmp
mov
jb
xchg
shll
dec
or
adc
test
fcoms
stos
mov
hlt
loopne
ds
je
int3
ds
fs
add
or
mov
mov
push
push
xor
lods
enter
test
movsb
xchg
adc
scas
data16
sub
mov
mov
movsb
fs
sub
les
test
push
lods
andl
divb
cmp
bound
bound
out
fcom
sbb
mov
add
mov
mov
cmc
aam
add
jbe
jl
or
cmp
rolb
hlt
push
andb
cli
int3
ret
sbb
mov
es
and
jo
ds
aaa
and
adc
and
pop
push
and
inc
int3
sub
pop
xor
and
mov
inc
or
push
and
mov
fcoms
inc
sub
scas
add
pop
inc
adc
xchg
hlt
push
ljmp
mov
add
inc
sub
lret
xor
mov
xor
sbb
add
mov
xchg
sub
sbb
and
jne
insb
dec
sub
cs
push
and
test
test
inc
or
addb
dec
popf
insb
loopne
sbb
mov
cwtl
cmpsb
inc
push
movsl
sahf
jle
jne
push
cmpl
push
xor
push
or
dec
nop
out
mov
ljmp
xor
iret
add
inc
xor
or
sbb
movb
enter
andb
push
mov
inc
add
add
lods
sub
imul
es
sbb
add
mov
and
adc
dec
loopne
push
push
movsb
lret
lods
and
out
sbb
xchg
mov
pusha
xchg
sub
movsb
arpl
insl
dec
and
sub
aad
sbb
movsb
pop
lods
cld
adc
dec
xchg
sbb
nop
push
push
and
xor
pop
push
popa
inc
adc
push
cmp
cmp
int3
inc
cli
pop
sbb
or
push
les
pop
pusha
add
mov
mov
in
and
add
mov
xor
push
nop
out
fiaddl
nop
pop
shlb
add
add
add
lds
je
pop
cmpsb
es
push
addl
sub
lods
dec
ss
xchg
cmp
dec
test
adc
push
pop
imul
cwtl
sbb
ss
push
xor
les
adc
nop
mov
jp
test
testb
inc
push
into
xchg
and
xchg
js
adcl
mov
push
push
lods
inc
mov
adc
outsl
test
xchg
or
pusha
sub
push
fimuls
jno
add
pop
jb
sahf
fsubs
push
and
aam
dec
jo
data16
cs
es
stos
pop
add
ss
mov
testb
mov
mov
or
js
test
mov
pusha
lret
out
push
mov
mov
or
rolb
loopne
dec
push
jle
xchg
and
movsb
mov
cwtl
adc
inc
shrb
add
add
xor
es
mov
sub
add
mov
sub
fs
xchg
cmp
test
rcr
imul
add
push
mov
push
orb
push
inc
push
sbb
repnz
jb
roll
rcr
sbb
mov
add
or
or
divb
mov
pop
orl
xchg
orb
inc
or
pusha
push
dec
inc
adc
add
add
xchg
inc
scas
add
lcall
cmp
pusha
and
sub
adc
xor
push
mov
ret
int3
dec
js
adcb
adc
and
pop
shlb
into
jae
sub
in
cmp
fdivrs
adc
movsb
cs
xchg
mov
test
lock
fcom
ret
bound
and
mov
jmp
cmc
push
jp
aaa
sub
fcoms
push
dec
loop
xor
xchg
push
les
faddl
call
bound
sbb
xchg
int3
xorb
pop
xchg
test
jp
jns
cli
or
xor
scas
inc
adc
mov
xor
cs
cwtl
jo
scas
imul
jb
pop
add
mov
mov
add
or
inc
and
je
lret
add
dec
sbb
jbe
cli
mov
mov
test
xchg
adcb
or
push
adc
inc
mov
dec
mov
inc
push
mov
mov
loope
and
push
add
nop
es
adc
adc
add
inc
push
push
push
aad
add
leave
xorb
fcoms
mov
movsl
pushf
xlat
xor
cltd
and
cmpsb
fisubs
pop
xchg
les
or
adcb
xor
dec
or
dec
push
dec
ljmp
daa
cs
add
les
cmp
bound
and
pop
outsb
sbb
jno
ds
mov
pop
sub
ret
push
ds
or
mov
pop
pop
into
add
ljmp
mov
xor
push
xchg
mov
add
ds
frstor
push
or
rolb
mov
icebp
nop
sbb
dec
bound
push
addl
dec
loopne
dec
push
pop
or
sbb
push
sub
or
xchg
add
sub
pop
dec
dec
les
inc
cli
movsl
repnz
pop
sbb
sub
and
jbe
xchg
les
xor
adc
or
es
pop
mov
sbb
sbb
sahf
cli
es
bound
andb
sbb
jo
mov
mov
xchg
adc
pop
mov
dec
loope
dec
mov
addl
ret
dec
push
push
fsubl
mov
pusha
push
stos
dec
xor
mov
subb
lods
adc
and
loop
mov
ss
das
inc
dec
ljmp
cmp
adc
and
sbb
xchg
add
int3
daa
push
and
add
scas
push
ret
sbb
bound
cmp
sar
xchg
or
ret
repnz
or
dec
insb
ljmp
xor
lock
mov
dec
sub
es
test
mov
inc
xor
mov
pushf
dec
loope
jge
mov
or
pop
mov
shrb
cli
push
dec
add
rol
mov
and
ficompl
or
pop
xor
mov
mov
sbb
loope
pop
andl
adc
mov
or
gs
enter
and
add
aaa
inc
xor
adc
mov
bound
test
gs
dec
push
call
jb
shll
add
xor
loope
popa
and
pop
test
rclb
sbb
adc
push
sbb
pop
enter
rcrl
shlb
adc
add
rclb
fnstcw
xchg
xchg
and
push
mov
cmp
inc
push
push
imul
sub
push
mov
fs
inc
and
insb
lock
cwtl
popa
add
or
pop
or
sub
push
inc
test
mov
and
out
inc
mov
inc
inc
lret
xchg
cwtl
add
adc
cmp
test
pusha
or
out
es
and
sbbb
lret
inc
dec
pop
clc
xchg
or
or
jo
xchg
rorb
fdivs
add
fwait
sbb
movsl
and
das
add
shlb
fisubrs
push
jb
or
in
push
add
jns
in
nop
shl
cmp
add
adc
add
adc
fisubl
and
dec
push
and
rclb
mov
inc
mov
xchg
cltd
dec
clc
clc
pushf
call
xor
cbtw
shrb
or
dec
cltd
rol
adc
jo
xor
mov
fcompl
xor
data16
xchg
shlb
fisubrl
add
mov
cmpsb
add
ret
xor
stc
hlt
and
sbb
sbb
pop
push
xchg
vfnmsub213ss
cmovo
inc
dec
sub
cmpsl
inc
mov
dec
xor
hlt
mov
adc
adc
mov
jo
sbb
test
nop
mov
adcb
cmpsb
mov
push
and
sub
push
test
jne
sub
adc
pusha
sub
mov
shlb
add
sbb
rclb
push
cwtl
sub
sbb
sbb
sbb
js
push
adc
and
push
test
add
test
ret
stos
out
inc
sub
push
jne
pop
dec
mov
dec
out
sub
popa
mov
gs
push
push
sub
mov
inc
dec
mov
loopne
aad
add
ljmp
push
pop
and
inc
sub
mov
xchg
xor
fsubrl
arpl
fiadds
pusha
sub
pusha
cmp
mov
or
gs
cli
test
or
and
inc
popa
ret
cmp
les
ret
movsb
ficoml
nop
mov
cmp
push
popf
test
cli
repnz
inc
and
bound
or
add
pop
xor
mov
xor
jge
jle
scas
cwtl
adc
add
fdivl
jae
jl
sbb
mov
insb
and
adc
xchg
mov
add
rolb
aam
add
add
adc
lds
xor
push
mov
fs
test
push
mov
insb
mov
dec
inc
push
or
jl
mov
psubusb
or
sahf
jno
sub
mov
or
add
sub
push
adc
scas
pop
adc
inc
add
or
pushf
xchg
adc
les
repnz
dec
sbb
push
repnz
and
sbb
xchg
ss
add
dec
mov
push
push
push
and
xor
test
es
sbb
insl
jbe
cmpb
mov
or
sbb
xchg
and
xor
xchg
lea
ret
dec
cmpsb
test
add
adc
nop
loopne
and
inc
test
je
mov
cmp
and
lcall
sub
jne
mov
add
lret
add
mov
sbb
movsb
mov
mov
add
xchg
cwtl
xor
les
mov
mov
adc
push
push
and
inc
push
pusha
push
nop
lock
and
mov
push
mov
loope
addr16
sarb
mov
mov
and
pusha
repnz
add
jp
add
dec
add
js
xchg
mov
adc
cmp
cmp
push
ror
or
daa
mov
out
mov
fimull
cs
push
rorb
mov
insb
negb
gs
leave
gs
stos
mov
and
test
adc
dec
add
adc
gs
jns
je
dec
or
fs
dec
or
mov
push
mov
subl
shlb
mov
rorl
das
push
sub
sbb
test
nop
test
xchg
add
fmul
jne
or
sub
lea
fidivs
nop
cmpsb
xchg
dec
cwtl
mov
cmp
jb
dec
mov
popa
push
add
sbb
daa
sahf
test
in
cmp
test
or
xor
and
adc
mov
xchg
and
xchg
int3
xchg
pushf
mov
and
lods
adc
into
xchg
jl
dec
and
lds
aad
sub
add
mov
lods
dec
inc
or
arpl
test
and
push
loope,pn
adc
movsb
inc
cltd
pop
inc
mov
pop
mov
gs
pop
adcb
push
add
andb
orb
popa
movsl
add
cmpsb
adcl
adcb
aad
pop
jbe
insl
ds
sub
push
inc
andb
and
movb
mov
popa
lcall
push
or
adc
popa
insl
lods
inc
inc
call
imul
mov
loop
mov
imul
data16
xchg
pop
and
andb
xor
adc
dec
pop
push
outsb
push
test
or
jp
jae
or
dec
inc
addb
scas
repnz
adc
loope
jb
repnz
and
sub
mov
rcl
adc
and
movsb
xchg
pop
bound
call
mov
fiadds
mov
addb
pusha
shlb
cltd
out
sbb
fadds
push
dec
call
cltd
pusha
int
sbb
rolb
xor
or
roll
jle
mov
push
xor
rcr
sbb
or
push
popa
sbb
mov
sbb
fidivs
adc
and
lods
int3
loopne
int3
mulb
repnz
or
gs
mov
adc
subb
les
sbb
leave
dec
js
or
or
jo
lcall
adc
pop
sub
mov
loop
add
push
call
dec
addb
xor
ficoml
xor
lcall
and
and
jo
adc
pop
xor
test
sbb
jo
push
inc
faddl
lea
push
ss
lods
xchg
or
enter
push
fisttps
fdivs
test
and
mov
mulb
push
sbb
adc
xor
call
mov
pop
mov
xor
ret
adc
shrb
push
call
icebp
std
mov
jb
js
cmp
sub
sbb
dec
xor
xchg
xor
gs
xchg
outsb
push
xchg
adc
mov
rcrb
cmpsb
push
lcall
dec
add
stos
cmpsb
pop
mov
sub
mov
cld
rorb
test
fs
cs
lret
mov
test
jmp
push
xchg
sbb
xchg
insb
lret
xor
jno
push
test
add
mov
shlb
mov
nop
fdivrs
add
out
add
sbb
scas
add
ret
loop
cld
test
xchg
dec
sub
insb
inc
sub
mov
dec
test
add
popa
sub
jo
cwtl
in
or
xor
xchg
nop
add
xchg
pusha
sub
or
lea
cmp
rolb
mov
dec
and
subb
test
lods
roll
ljmp
int3
pop
dec
in
inc
sub
rcrb
sbb
sub
loopne
push
repnz
fcomps
sbb
push
pop
nop
scas
lea
addr16
sahf
pusha
mov
add
fs
orb
adc
out
les
xor
dec
test
jns
mov
lock
mov
push
and
pop
push
sbbb
jo
cmp
xor
pushf
add
cltd
or
fsub
popa
sbb
call
add
int3
add
or
fdiv
les
and
fmul
movsb
push
and
push
test
sbb
nop
push
dec
inc
inc
gs
and
xor
dec
ss
loopne
sbb
repnz
mov
sahf
bound
inc
cmpsb
pusha
and
or
fs
xor
roll
pushf
push
ret
xchg
mov
mov
mov
scas
inc
shrl
test
int3
jp
ret
rcr
fmuls
xchg
fs
add
arpl
movsb
nop
or
push
xchg
test
add
and
mov
mov
sbbb
push
inc
daa
test
fdiv
sub
leave
or
mov
push
cmpsb
xchg
xchg
int3
xchg
mov
les
test
mov
xchg
push
xchg
add
cld
mov
les
fdivl
or
add
cmp
test
mov
inc
in
xchg
movsb
mov
and
dec
pusha
cmpsb
adc
add
push
or
inc
daa
dec
je
dec
hlt
lcall
push
mov
sub
aad
aas
scas
insl
popa
sub
loopne
enter
repnz
aam
movsb
dec
ss
mov
add
add
lcall
rclb
or
xchg
xchg
pushf
outsb
outsb
fcoml
insb
notb
dec
lret
and
sbb
sbb
pop
lods
movsl
movsl
inc
addr16
shrb
inc
cmp
mov
test
movsb
jp
es
shlb
lods
mov
mov
loope
inc
dec
add
hlt
roll
dec
movb
dec
or
movb
pop
xchg
pop
or
les
push
pusha
hlt
es
add
sub
dec
add
sub
out
dec
test
inc
push
int3
fcomps
mov
mov
test
adc
int3
push
or
and
movb
enter
mov
mov
test
filds
add
push
daa
mov
lods
cmp
or
xor
jb
inc
fiaddl
subb
adcb
notb
adc
movsb
pushf
sub
or
hlt
inc
lret
popa
imulb
outsb
cld
xchg
pusha
add
loop
lret
push
pop
repnz
push
add
data16
cld
cwtl
fnstcw
mov
or
sbb
fsubs
and
dec
push
xchg
dec
rcrw
orl
test
add
push
mov
push
mov
insb
push
mov
add
cltd
mov
loop
sbb
add
pop
fstl
movsb
lods
inc
and
ds
push
adc
dec
jo
sub
pop
in
xchg
cltd
aam
cmpb
xor
pop
mov
pop
es
gs
pushf
pushf
adc
nop
ret
add
and
in
lock
xchg
cs
andl
push
sub
and
and
cmp
movsl
mov
adc
push
push
or
push
add
dec
adc
mov
in
mov
fcompl
add
or
mov
es
int
jle
fdivs
xchg
bound
bound
add
jo
add
enter
and
mov
pop
test
sub
lock
icebp
push
pusha
rolb
adc
mov
clc
cmp
xor
adc
push
loopne
xor
movsb
cmp
sub
sbb
xchg
or
outsb
loop
or
or
aad
add
shlb
pop
mov
and
xchg
push
sub
mov
mov
je
pop
and
aaa
pusha
push
pop
mov
stos
aad
mov
xchg
add
les
movsl
gs
aam
js
cltd
dec
or
popa
add
mov
add
je
or
xchg
sub
in
sbb
imul
adc
lcall
sub
je
cli
addb
xchg
or
fs
or
test
mov
add
in
mov
adc
and
mov
loop
xor
cmp
lods
mov
sub
cmpsb
lcall
push
xor
dec
jecxz
add
sbbb
xchg
enter
les
add
je
or
iret
cmpsb
and
sbb
adc
xor
add
sbb
cwtl
or
inc
mov
inc
cmp
xor
orl
loopne
sub
andb
inc
mov
xchg
xor
inc
cmp
nop
mov
jbe
and
inc
and
test
ljmp
scas
nop
divb
push
push
xchg
or
and
ljmp
mov
rcrb
mov
es
sub
test
xchg
adcl
add
xchg
mov
cwtl
les
dec
sub
cmp
les
or
lcall
fcmove
nop
mov
data16
xchg
or
rolb
shlb
sub
sbb
mov
push
addl
or
pushf
test
sub
sbb
jo
sub
pop
or
sbb
pop
jbe
mov
gs
or
mov
loopne
xchg
sbbb
pusha
mov
mov
ljmp
and
inc
push
inc
in
add
xchg
xor
orb
cmp
jne
pop
xor
xor
mov
and
mov
sbb
inc
jecxz
cli
push
sub
test
loopne
add
and
pushf
addb
sahf
fisubrs
movsb
push
xchg
movsb
out
sub
les
inc
shlb
dec
add
scas
adc
pusha
ltr
scas
xchg
adc
sbb
sbb
mov
push
or
mov
xor
shl
mov
jne
adc
sbbl
popa
inc
xor
fbld
pop
jle
xchg
test
mov
adc
push
movb
xor
sahf
movsb
push
ficoml
pop
xor
pushf
lock
fmul
dec
add
xchg
jb
ljmp
push
mov
lock
ret
or
xor
fisubs
add
push
fs
xorb
inc
ds
addb
add
xchg
or
dec
xor
pop
mov
cmp
jno
or
mov
rclb
or
cmp
or
cmp
xor
adcb
adcb
xor
test
mov
sub
pop
clc
sbb
stos
xor
sub
mov
mov
jl
push
cltd
push
ljmp
push
insb
test
adc
push
or
mov
jp
sbbb
push
pop
jbe
sbb
adc
test
add
sarb
loop
lcall
gs
inc
mov
push
lret
sbb
add
sbb
jecxz
mov
in
push
lcall
xor
fdivl
es
sub
add
aam
popf
xchg
cmp
sub
sbb
aad
xchg
inc
xchg
mov
xor
xor
ljmp
sub
or
rcrb
xor
sbb
rcrb
insb
addb
adc
jp
rorb
cwtl
and
mov
or
and
sub
out
push
sbb
inc
mov
test
xor
or
dec
jge
cltd
dec
lcall
mov
ret
add
add
cmpl
sbb
adc
dec
loopne
dec
loop
xor
sahf
call
mov
mov
pop
enter
mov
ds
shl
xor
ret
in
inc
lods
in
ljmp
les
sub
jb
test
cltd
push
or
into
pushf
dec
push
mov
cltd
adc
sbb
mov
add
test
inc
call
xchg
jp
xchg
imul
loop
add
xor
movsb
and
dec
inc
lods
or
xchg
mov
xor
call
shlb
mov
sub
clc
aad
ret
and
jmp
gs
and
sub
adc
mov
xchg
mov
jo
movsb
jl
insb
cli
add
pusha
cli
add
cltd
lret
jle
cmp
or
dec
mov
mov
add
dec
js
movb
add
js
and
and
push
mov
push
mov
mov
cmp
outsl
dec
popa
xor
aam
js
sbb
sub
nop
and
sbb
sbb
arpl
jo
push
rol
mov
xchg
outsb
sbb
dec
or
push
xor
ret
and
push
add
xchg
xchg
dec
rorb
or
into
or
ret
add
push
push
fsub
and
call
inc
movsb
in
sahf
add
sbb
mov
out
sbb
adc
adc
dec
or
add
add
sbb
sub
inc
add
and
ss
xor
lea
add
push
jo
push
call
mov
or
addl
test
mov
sbb
inc
push
lret
cwtl
rclb
sub
movsb
xchg
mov
inc
add
loope
cmp
adcl
push
out
inc
add
adc
lcall
icebp
and
fnstenv
pop
adc
nop
pop
xor
call
xor
adc
add
fiadds
push
inc
jo
xor
and
dec
pop
xchg
shll
xchg
cmp
icebp
or
dec
sbb
or
loope
adc
inc
call
int3
inc
jp
adc
adcb
dec
add
leave
mov
bound
push
xor
dec
pop
loop
mov
clc
andb
test
mov
jp
and
inc
mov
push
and
add
sub
call
loopne
add
xchg
jl
insl
sub
shlb
sub
lret
push
loop
or
xor
push
mov
imul
xor
daa
in
push
push
fcomps
adc
sbb
pushf
fsts
mov
pop
les
jb
roll
jp
in
scas
pop
pop
jne
or
xchg
out
pusha
test
gs
dec
push
pusha
inc
pop
daa
xor
jl
push
jb
es
dec
push
inc
xchg
add
inc
lcall
add
adc
fidivs
ss
cmp
inc
pusha
mov
or
out
rcr
push
jp
nop
ret
test
cmp
aam
or
pop
mov
bound
addb
push
adc
push
mov
jp
xchg
ret
mov
push
xchg
into
push
scas
cmp
addb
gs
jmp
sub
inc
sub
inc
clc
loop
mov
out
jb
jb
call
in
call
lahf
lock
jnp
push
or
inc
lahf
fistl
mov
add
mov
inc
push
cwtl
leave
ss
pusha
aad
adc
mov
enter
adc
mov
xchg
imul
or
scas
add
out
adc
fdivl
or
sbb
lods
push
xor
push
or
adc
inc
xchg
adc
inc
pusha
adc
or
mov
adc
push
add
inc
mov
fsubl
xor
adc
dec
movsb
sbbb
cltd
cmp
jp
nop
xor
dec
xor
push
add
es
xor
jle
sbbb
dec
and
inc
repnz
outsb
test
inc
ret
push
sbb
push
pop
cltd
mov
jne
mov
andb
pop
test
imulb
ret
adc
inc
rorb
sub
mov
adc
test
sbb
shrb
nop
lcall
call
rolb
lds
outsb
mov
jle
mov
or
xorl
loop
inc
pusha
or
push
rclb
mov
loopne
subb
mov
pop
orb
or
xor
push
dec
and
in
dec
test
xchg
xchg
test
mov
xchg
sub
jne
je
js
idiv
jb
call
jns
push
xor
leave
mov
inc
in
negb
cmp
aad
mov
mov
push
inc
jp
add
enter
sbb
and
push
imul
lods
inc
test
les
sub
push
je
into
addl
movsb
or
dec
inc
inc
out
mov
sbb
push
push
xchg
mov
in
nop
es
lock
movsl
andb
add
pushf
and
xchg
push
inc
mov
mov
ficoml
test
inc
dec
adc
and
or
and
loopne
dec
sbb
push
es
jne
add
cmp
sub
inc
push
mov
sbb
loop
xchg
xchg
sbb
inc
sahf
es
call
dec
popa
cwtl
mov
in
test
dec
adcb
sub
movsb
mov
sbb
and
repnz
pop
push
orb
lea
cli
fs
sbb
add
adc
push
fdivrl
sub
sahf
jns
inc
loope
sbb
inc
sub
pushf
pop
test
sbb
insb
ss
das
xchg
or
dec
pop
mov
cwtl
cmp
sub
into
fs
pusha
adcb
jle
scas
or
inc
in
insl
push
jmp
adc
mov
sub
push
jne
cli
cmp
push
push
inc
push
lahf
insb
test
cs
aad
pop
fwait
adc
and
jb
lock
mov
test
cld
push
inc
inc
pop
sti
xor
mov
dec
sbb
mov
pusha
lcall
sbb
sub
jl
negb
mov
ret
push
pop
jp
xor
adcb
mov
and
cli
dec
dec
mov
inc
mov
add
sub
sub
pusha
and
add
push
cmp
into
hlt
test
inc
mov
mov
aam
stos
add
mov
push
xchg
or
mov
inc
push
lret
sahf
in
push
push
sbb
in
dec
rolb
aam
adc
lret
inc
push
push
mov
add
xor
loopne
mov
or
or
ds
and
pusha
les
inc
sub
push
nop
es
pop
gs
pop
fisubrl
xor
inc
push
addl
dec
lcall
sahf
inc
mov
push
loopne
lock
jp
fmul
pop
dec
sbb
xor
xor
mov
cltd
inc
and
pop
inc
sub
push
ljmp
or
inc
data16
or
popa
mov
jbe
in
lea
and
or
push
push
xor
fidivl
cmpsb
test
add
mov
popf
and
rolb
inc
add
cld
mov
gs
rorb
pop
js
adc
push
dec
adc
pusha
jb
pusha
or
scas
popa
cmp
xor
sub
xchg
dec
popf
xchg
add
loopne
scas
rorb
mov
sub
fisubrl
push
sbb
mov
loop
jl
mov
cmpsl
gs
test
xchg
mov
faddl
mov
inc
cmp
outsb
lods
fldl
or
shl
mov
mov
dec
adcl
lods
mov
mov
push
dec
add
inc
insl
imul
and
adc
cmp
mov
inc
add
insl
push
sub
in
mov
pop
mov
cmp
addb
add
push
inc
nop
sub
adc
je
adc
pop
mov
xchg
xor
loop
xor
pop
mov
into
inc
cmp
nop
ret
outsb
lcall
pop
and
cwtl
in
fisubs
add
call
push
mov
sbb
cld
and
adc
xor
loop
pusha
and
push
out
decl
ret
fneni(8087
mov
insl
mov
jmp
adc
mov
cmp
nop
pop
fcomp
xor
xchg
adc
sub
mov
in
inc
scas
jl
mov
ds
xor
jne
imul
adc
jmp
adc
mov
xchg
pusha
sbb
jae
pusha
push
push
xchg
adc
pusha
or
xchg
adc
test
inc
rcrb
sub
adc
aaa
int3
and
scas
fs
lret
or
testb
addb
mov
loope
sbb
in
stos
adc
and
idivb
cli
jp
xor
dec
bound
inc
test
in
and
aam
or
pusha
inc
rorb
xchg
dec
enter
shl
popa
add
add
mov
xchg
mov
int3
fs
jbe
add
and
fldenv
test
ret
push
inc
cltd
mov
dec
mov
xchg
imul
leave
dec
cmp
jb
jns
orb
xor
adc
add
xor
adcb
and
int3
es
adc
push
mov
add
mov
sub
movsb
je
pusha
cwtl
mov
ret
nop
xor
dec
or
sub
ljmp
lret
or
push
imul
and
pusha
test
imul
mov
adc
jb
outsb
sub
out
dec
sbbb
in
int3
les
add
imul
enter
inc
pushf
sub
or
push
mov
mov
insl
or
push
loopne
and
pop
xchg
and
adcb
gs
or
jnp
cs
pop
inc
adc
movsb
cltd
pusha
xor
mov
les
fs
pushf
movsb
test
and
les
test
jo
mov
scas
add
or
lret
scas
xchg
dec
shrb
sub
sbb
ret
add
int3
mov
pushw
sbb
push
repnz
add
fisubrs
push
add
enter
add
call
mov
pop
dec
andb
lcall
lea
loope
sbb
shlb
mov
or
shrb
pop
inc
mov
add
test
sbb
mov
push
mov
scas
adc
fisubrs
xchg
push
sub
cmpsb
pop
mov
test
je
mov
es
or
or
mov
push
cmpl
mov
jns
daa
ret
sahf
in
arpl
xchg
mov
and
xchg
and
adc
test
xchg
jo
pop
and
or
and
inc
inc
testb
pop
xchg
ss
or
cmp
stos
xor
cld
push
inc
push
dec
dec
cli
insl
push
fs
jb
cltd
push
jnp
mov
imul
push
xor
adc
push
jl
mov
and
movsb
lods
stos
cmc
call
sbb
xchg
sbb
leave
sub
inc
flds
mov
adc
push
es
adcl
test
adc
cwtl
dec
sbb
subl
mov
test
jo
mov
jp
ret
add
push
add
mov
cmpsb
out
sub
and
adc
dec
xchg
add
push
scas
sbb
mov
mov
add
and
mov
pop
loop
imul
sbb
test
xor
push
insl
repnz
inc
mov
pushf
ds
cmp
mov
jb
push
orb
add
pop
mov
or
xor
movsl
sbb
add
inc
adc
mov
fimuls
test
fisubrl
mov
leave
ljmp
mov
cwtl
rclb
inc
inc
cwtl
mov
add
nop
adc
movsb
pushf
ret
xchg
mov
inc
pusha
cmpsb
les
push
xor
xor
stos
or
inc
test
or
pusha
push
sub
inc
xchg
mov
jo
push
add
or
inc
jb
data16
push
sbb
adc
add
arpl
xchg
and
nop
push
fwait
adc
push
adc
inc
and
push
loop
mov
and
push
nop
or
movb
sahf
add
add
ds
jo
mov
or
icebp
mov
mov
push
xchg
adc
test
add
sbb
fsubr
pop
outsb
dec
out
mov
xchg
movsb
call
and
adc
and
sbb
sbb
adc
or
adc
mov
add
loopne
xchg
or
add
add
dec
call
lods
rolb
or
pop
xor
sub
cmp
cmp
add
pop
pop
cmp
jb
movsl
push
xor
lcall
mov
dec
sub
shrb
test
mov
in
inc
mov
insb
fcoms
subb
pop
push
sarb
and
push
push
dec
aam
push
push
out
inc
push
les
cwtl
aad
adc
xchg
ret
inc
pop
add
loope
jae
or
add
dec
pushf
orb
ljmp
push
sub
and
shlb
xchg
shlb
jo
rcrb
mov
xchg
cmp
mov
mov
add
and
sbb
cmp
ret
push
jbe
loop
lds
insl
sbb
pop
cmpsb
loop
xchg
cmp
rcl
add
bound
pop
sub
or
add
xor
adc
mov
mov
sbb
and
add
dec
xchg
shlb
or
rolb
dec
or
inc
lock
and
insb
mov
sub
bound
and
insl
or
into
xchg
mov
mov
pop
sbbl
into
add
mov
or
sbb
pusha
sbb
test
and
ds
lret
ret
cltd
pushf
orb
pop
sahf
mov
add
push
lret
dec
inc
ret
mov
inc
test
ss
sub
sub
js
mov
mov
dec
popl
cmp
test
jl
and
rclb
cld
mov
xchg
mulb
xor
lret
xor
fsubr
ret
xor
loope
lods
inc
je
mov
data16
mov
cmp
cld
test
xchg
lret
ret
dec
orb
xor
sbb
cld
xchg
and
xchg
xchg
push
rolb
pop
insl
sub
rcrb
push
cmpsb
mov
addr16
cltd
cmp
push
dec
and
insl
or
je
loope
add
bound
sbb
adc
loop,pt
loopne
xor
mov
pusha
push
inc
add
or
jo
add
add
lods
leave
lret
lock
dec
mov
jle
adc
xor
inc
popa
and
insl
sbb
mov
xchg
mov
mov
jno
adcb
push
sbb
xchg
lods
push
and
adc
and
nop
ret
push
or
addb
js
jo
test
out
and
mov
pop
adc
and
inc
add
push
pop
dec
je
dec
jb
dec
push
add
and
inc
arpl
xchg
pop
push
add
test
clc
nop
adc
test
dec
xor
xor
mov
add
jb
sub
test
pop
adc
test
xchg
dec
pop
daa
movsb
icebp
xor
shl
jb
dec
data16
push
xchg
xchg
push
xchg
out
mov
or
scas
mov
stos
cmpsb
xchg
lret
lods
push
aad
cmp
loop
dec
sub
adc
lcall
mov
lret
jo
es
in
lods
sbb
or
sbb
pop
mov
mov
rcl
cmp
adc
popf
add
mov
pop
int3
pushf
les
cmp
cmp
dec
xorb
push
add
inc
sub
add
pop
scas
adc
loope
inc
cmpb
mov
mov
scas
sub
pop
push
loop
scas
mov
inc
or
pop
dec
enter
mov
xchg
add
test
xor
lods
push
jle
mov
rcrl
dec
inc
or
add
loopne
scas
cwtl
push
xor
and
cmp
stos
and
or
mov
cwtl
push
dec
mov
pop
or
inc
cmpb
xchg
loop
adc
and
cltd
dec
jo
rclb
and
sbb
jbe
mov
lcall
xchg
mov
mov
push
shlb
xor
fiaddl
add
cld
push
mov
pop
data16
je
push
push
sbb
faddp
ss
adc
insb
in
add
add
movsb
cwtl
dec
imul
test
xor
mov
push
sbb
add
adc
sub
mov
adc
dec
xchg
cmc
xchg
mov
push
add
fidivl
rorb
test
rorb
ror
push
ljmp
jle
ficompl
cmp
andb
add
push
or
lahf
test
test
mov
add
rorb
lcall
dec
adc
cmp
adc
mov
shlb
loopne
and
mov
lea
loop
mov
push
push
xor
les
js
mov
adc
mov
push
xchg
aam
and
inc
or
add
call
cli
ss
cmc
mov
or
adc
mov
push
lock
ret
inc
pusha
or
test
add
add
cltd
cmp
or
mov
sbb
mov
and
push
movsl
push
aad
inc
aad
push
shlb
test
or
mov
in
popa
movsb
and
mov
cli
add
insb
add
mov
dec
jo
gs
cltd
xor
inc
lret
icebp
repnz
jbe
and
and
mov
push
xor
mov
mov
je
cwtl
add
mov
inc
mov
sbb
mov
add
mov
cltd
adc
push
or
pop
loopne
push
fs
cmp
imul
mov
out
enter
inc
mov
adcb
add
aam
xchg
dec
or
mov
inc
insb
sbb
inc
jne
add
mov
push
ss
mov
or
daa
mov
or
xor
mov
push
push
sub
ret
loopne
adc
mov
add
mov
cltd
movsb
sub
inc
inc
repnz
dec
push
cmp
dec
lock
lods
test
jne
or
test
push
xor
xor
ljmp
into
add
xor
pusha
adc
bound
push
bound
adc
lods
mov
jp
mov
loop
cmc
sub
lods
add
loope
push
add
orl
adc
mov
addl
dec
push
mov
leave
bound
and
add
add
cmp
mov
mov
icebp
xchg
xor
push
push
mov
push
incb
int3
and
rcl
mov
cmp
test
push
add
mov
int3
out
push
xor
mov
or
lock
or
data16
mov
add
push
mov
or
and
push
push
push
sahf
gs
es
mov
push
pop
ljmp
sarb
ds
cli
ds
and
cwtl
sahf
sbb
dec
dec
shrb
mov
mov
cwtl
cltd
nop
mov
dec
je
or
lret
and
mov
inc
es
mov
or
fsubs
or
leave
and
popa
js
xor
sub
or
test
sub
pushf
jp
push
and
shll
inc
cli
dec
and
xchg
adc
push
jp
add
push
push
xor
mov
push
daa
rclb
cmpsb
push
leave
and
sbb
xchg
enter
test
imul
lret
dec
or
pusha
add
shll
js
lret
popf
adc
mov
sbb
add
pop
adc
sub
cltd
and
adc
push
xor
dec
call
pop
inc
les
andb
or
in
mov
inc
jmp
imul
and
fcom
mov
mov
mov
adc
dec
loopne
add
ss
pusha
dec
sub
adc
mov
sub
pusha
sbb
xor
dec
cwtl
inc
xchg
jbe
sbb
fs
nop
scas
movsb
sub
pusha
push
inc
mov
in
mov
add
sahf
xor
or
js
sub
fidivs
mov
repz
pop
mov
add
mov
cltd
loope
mov
or
cmovno
into
push
int3
popa
dec
nop
push
rorb
pushf
adcb
cltd
inc
ret
je,pt
ja
add
push
mov
inc
add
sbb
in
dec
fists
sub
sbb
enter
jnp
and
cmp
rol
or
orb
dec
test
mov
jb
dec
push
insb
add
sub
mov
popa
xor
stos
sub
adc
cld
inc
push
bound
ja,pt
ljmp
dec
add
jecxz
sbb
mov
je,pn
mov
mov
cltd
adc
shrb
addl
inc
insl
ficompl
mov
add
mov
hlt
pop
jb
inc
add
or
loop
jo
pop
or
cmpsb
add
ret
inc
mov
jbe
xor
xchg
sub
sahf
add
cmp
jae
push
cmpsb
faddl
and
mov
insl
mov
or
and
fadd
adc
mov
hlt
xor
pop
or
insb
xchg
cmc
add
cmpsb
sub
jp
adc
int3
and
nop
imul
push
data16
out
xchg
ds
mov
loop
mov
adcb
push
xor
dec
add
loope
int3
inc
pusha
mov
adc
pusha
or
popa
xchg
push
js
movsb
mov
or
add
mov
nop
or
je
test
sub
sbb
push
bound
ret
lret
add
pop
xor
in
in
inc
mov
je
bound
adc
es
push
mov
sbb
popf
dec
cvtdq2ps
test
lcall
lock
sbb
cwtl
sbb
insb
push
and
or
inc
sub
sahf
xor
dec
add
adc
rcll
mov
jmp
or
fbstp
movl
xchg
xchg
rolb
push
dec
xor
lods
push
loop
mov
test
mov
loopne
test
cmpsb
jo
stos
imul
fs
pop
adc
mov
dec
or
cmpsb
and
call
inc
fsubrl
jp
jo
sbbb
filds
or
cmp
test
sub
cli
mov
mov
jo
mov
adcb
cwtl
mov
fadd
pop
xchg
pop
mov
repnz
js
in
push
js
adc
add
add
and
push
xor
mov
mov
js
push
cwtl
add
mov
sub
test
inc
int3
mov
or
and
sub
push
cwtl
cld
adc
scas
or
and
insl
inc
lods
test
inc
push
into
jne
je
mov
orb
and
adc
adc
enter
sbb
mov
sbb
lcall
push
js
adcb
sbb
cwtl
lock
jp
pop
push
pusha
cmp
cs
movsl
xchg
imul
xchg
mov
inc
dec
push
add
arpl
xchg
sbb
mov
xor
and
dec
cmp
cmp
cmc
and
sbb
sbb
adc
push
or
imul
dec
cmp
push
add
mov
cmpsb
push
sbb
adc
and
or
shrb
dec
inc
cmpsb
push
xchg
adc
mov
push
sbb
loopne
cltd
inc
jo
out
loopne
mov
inc
push
pop
push
test
sub
cs
sbb
cmpsb
mov
push
andb
and
cmp
inc
mov
data16
or
in
mov
andl
push
mov
and
loop
jp
mov
clc
ljmp
mov
int3
adc
xchg
in
inc
xor
imul
xchg
imul
dec
ret
shrl
push
xchg
and
mov
lods
xor
inc
push
sbb
add
sbb
jle
dec
dec
push
xorb
xor
add
mov
or
aam
dec
loopne
je
insb
pop
xor
insb
rorb
sub
leave
cmp
popa
sub
add
sbb
orl
ss
push
push
or
dec
inc
inc
xchg
pop
test
add
jbe
mov
popa
jo
or
aaa
sub
adcb
mov
stos
int3
jne
clc
lcall
push
cltd
pop
shl
sub
xor
xor
xor
movsl
sbb
ss
je
push
dec
sbbb
adc
into
push
loop
lods
data16
sub
jb
sub
imul
jb
gs
ljmp
cwtl
adc
aam
adcb
cltd
and
xchg
nop
push
inc
xchg
xor
movsl
mov
or
adc
sub
xor
shr
pusha
add
mov
cmp
or
add
shlb
sub
adc
sbb
rorb
loop
adc
mov
push
and
inc
push
adc
mov
adc
xchg
adcb
es
mov
and
pushf
or
push
sub
scas
cli
inc
cmp
push
jnp
or
out
imul
orb
push
sub
insb
stos
cmc
cs
daa
inc
ljmp
mov
insl
add
shlb
lea
ds
add
sub
jo
mov
inc
cmp
sbbl
or
mov
mov
sub
lods
lret
movsb
and
cmc
insb
mov
pusha
cmp
xchg
cltd
out
inc
dec
add
adc
jno
repnz
or
shrb
mov
mov
add
xchg
test
xchg
mov
es
sub
ret
or
pusha
cmp
ficoml
ds
xchg
and
arpl
inc
insb
sbb
xor
inc
ljmp
mov
in
mov
repnz
adcb
sbb
xchg
mov
or
push
rcrb
mov
cli
imul
cmp
lret
and
or
sub
ficoms
or
xchg
testb
hlt
cmp
mov
add
outsb
add
adc
xchg
mov
lcall
rolb
xor
loopne
lret
jb
cmp
adc
push
orb
mov
pusha
dec
ret
sbb
fistpll
enter
cmpsb
add
add
push
ja
adc
fisubs
inc
mov
sub
pop
mov
pop
cwtl
test
and
incb
mov
cmpsb
gs
fs
adc
adc
loopne
adc
jp
or
push
shrb
jecxz
leave
xor
push
jecxz
add
rolb
lret
rol
or
add
add
fs
cmpsb
and
mov
or
dec
clc
call
into
pop
cmp
adc
cmp
mov
and
mov
mov
inc
pop
adc
push
or
adc
enter
ljmp
push
push
loopne
xorl
and
mov
bound
xor
mov
dec
loop
fdivr
xor
push
adc
rclb
popa
adc
movsb
jo
add
leave
mov
xchg
fisubrl
sub
push
sbb
sub
xchg
movsb
xor
xchg
adc
lret
push
and
add
xchg
and
pop
xorb
mov
inc
or
hlt
gs
fwait
push
jp
push
add
nop
adc
mov
test
push
xor
mov
xchg
sbb
sub
and
lret
repnz
es
hlt
sbb
movb
inc
inc
test
or
rorb
inc
push
sbbl
rcl
pop
or
and
pop
jns
mov
push
sub
and
xorb
out
je
es
cmp
out
mov
pop
sbb
add
add
insb
cli
sbbl
mov
adc
push
sbb
and
loopne
mov
xchg
pop
fcmovu
arpl
inc
insl
xchg
shll
rcl
push
pusha
and
sub
jno
mov
out
test
adc
jbe
gs
sub
orb
or
ret
and
adc
rclb
push
es
insb
push
add
add
fisubl
xor
cmpsb
loopne
and
add
add
xchg
dec
adc
shrb
cltd
pop
xor
mov
adc
test
and
clc
cmp
mov
inc
dec
and
scas
push
inc
inc
movsb
nop
add
sbb
adc
jmp
stos
jb
ss
mov
adc
dec
lret
rclb
cmp
gs
xor
shlb
pop
rcrb
lret
jo
fs
roll
xor
mov
mov
pop
fwait
jb
push
and
dec
cwtl
push
adc
test
shll
push
cwtl
inc
or
add
outsb
and
arpl
daa
add
jl
mov
test
mov
fs
sub
and
xor
sub
cmp
dec
andb
xchg
pushf
inc
and
dec
jl
mov
out
xchg
adc
call
cli
sub
cs
rorb
sub
pop
adc
xchg
scas
int3
xchg
push
sub
pop
arpl
rorl
call
mov
sbb
push
addr16
addr16
pop
adc
push
into
xchg
leave
orl
popa
cwtl
loopne
outsb
ret
jno
dec
repnz
mov
xor
cltd
sub
loopne
or
push
pusha
push
dec
add
mov
cli
imul
bound
adc
les
sbb
rol
add
mov
xchg
dec
pusha
push
sbbl
cmp
add
mov
and
lcall
or
push
shl
pusha
sbb
out
lret
ds
adc
cmpsb
xorb
shl
jb
es
jl
data16
xchg
loopne
jnp
sar
mov
xor
test
and
mov
aad
jne
js
add
jo
dec
mov
ds
dec
push
adc
adc
test
pop
ret
xchg
les
lock
cmc
inc
adc
movsb
jbe
js
cmc
es
pop
imul
adc
aam
shrl
sub
add
addb
aam
dec
and
lods
cltd
loopne
inc
jbe
mov
cmp
cmc
loopne
aam
mov
mov
es
loopne
xchg
nop
xchg
rorl
mov
fs
sbb
adc
adc
in
lock
test
mov
xor
add
jge
addb
loopne
push
push
pop
shrb
jb
negb
pushf
or
enter
and
add
sbbb
jo
xor
sbb
shrb
mov
or
sub
ret
sub
xchg
inc
inc
mov
and
sub
es
add
mov
out
xchg
test
dec
push
and
cli
or
test
sub
or
adc
lahf
xorb
rorb
push
dec
ret
sbb
inc
mov
pusha
sbb
mov
inc
or
add
add
outsb
fs
inc
rol
xor
hlt
mov
xor
xor
pop
sub
js
add
xchg
inc
or
ss
xchg
rorb
xor
ss
nop
add
push
xor
int3
fs
mov
sbb
lock
shlb
xor
or
pusha
nop
lret
push
decb
subl
orl
xchg
lea
xchg
movsb
or
je
cmc
ret
sub
xor
jo
jo
data16
cmp
or
xchg
mov
mov
jmp
cld
jno
and
xchg
adc
mov
test
cmp
nop
dec
push
dec
push
subl
ss
jbe
adc
loopne
or
push
xchg
sbb
xor
sbb
or
mov
mov
adc
jle
popa
das
and
jl
test
mov
add
add
mov
inc
pusha
pusha
aam
jne
sub
enter
cli
push
adc
ret
cmpsb
enter
jo
cwtl
or
mov
xchg
loop
rolb
or
xchg
fdivrl
mov
mov
cwtl
imul
mov
mov
js
dec
test
xor
mov
adcb
cmpsb
sub
xor
mov
mov
je
ss
and
insl
loopne
fs
mov
inc
icebp
adc
cld
cs
jae
or
push
push
dec
pop
je
inc
or
fisubrs
add
dec
adc
js
lcall
scas
lock
dec
xor
test
xchg
test
mov
bound
mov
dec
insb
leave
add
js
or
ss
sbb
lock
add
sbb
or
mov
rorb
or
mov
xchg
adc
xchg
movsb
loop
lcall
call
outsb
je
xchg
movsb
mov
add
pusha
and
or
push
sahf
push
add
nop
cltd
and
dec
pop
or
mov
or
mov
cmpsb
pop
mov
mov
pop
pop
sbb
add
mov
jge
adc
pusha
xchg
pop
xor
cli
pushf
mov
int3
dec
sbb
sahf
add
sbb
lock
push
nop
mov
aam
dec
mov
dec
add
xchg
push
add
sbb
lods
int
lcall
dec
xor
inc
mov
adc
pop
mov
leave
add
or
sbb
cs
data16
jne
push
add
es
pop
mov
and
call
test
mov
dec
enter
xchg
test
jmp
pushf
and
cmc
clc
mov
xor
fisubrs
orb
push
es
inc
xor
aam
sbb
or
es
outsb
sub
xor
add
mov
sub
dec
push
adc
push
and
xchg
jo
test
test
push
mov
mov
movsb
aam
enter
push
and
outsb
xchg
outsb
incl
add
cmp
or
mov
rclb
popf
pop
jle
sbb
dec
movsl
xchg
dec
mov
xchg
jle
cmp
push
adc
addr16
sbb
xchg
data16
fs
add
cmp
sub
xchg
adc
leave
mov
roll
sub
adcl
and
sbb
daa
and
add
js
inc
jae
xchg
xorl
test
mov
sbb
xor
clc
and
cwtl
or
mov
cwtd
sub
xchg
mov
push
sub
rcl
out
pop
sbb
mov
gs
fiadds
in
jb
and
addr16
shl
loopne
repnz
adc
andb
int3
inc
mov
push
jp
lea
or
and
pop
cmpl
out
and
jbe
jbe
andb
pusha
and
enter
fistps
adc
inc
add
orl
mov
lret
adc
push
sub
mov
mov
cmp
or
aam
dec
test
js
sbbb
sub
xor
cmp
adcl
xchg
movl
add
mov
je
nop
nop
dec
nop
xchg
movsl
ss
push
mov
mov
xor
sub
or
cmp
sbbb
adcl
ss
inc
mov
xor
dec
or
dec
adc
nop
orl
into
add
sahf
add
inc
mov
mov
push
loop
into
mov
ss
mov
ficoms
and
movsb
sub
cwtl
sbb
push
ret
or
xchg
outsb
push
or
lds
mov
ljmp
ret
add
dec
pushf
sub
or
adc
inc
pop
outsb
dec
lods
mov
add
adc
add
or
dec
out
and
jo
add
movsb
mov
pop
addr16
jb
cmc
icebp
xchg
and
cmpsb
jb
and
dec
sbb
enter
push
adc
test
inc
leave
subb
add
es
push
add
mov
pop
inc
cwtl
mov
enter
cmp
shll
hlt
xchg
imul
pop
jo
cmp
mov
xchg
xor
icebp
and
mov
sbb
es
adc
fs
xchg
fs
adc
test
aam
and
loop
rol
xchg
or
aad
add
jg,pt
fsubs
xor
cs
jmp
mov
aam
pop
adc
pop
add
popa
xchg
mov
int3
orb
or
sub
fcmovb
lret
les
add
test
int3
xor
das
daa
add
xor
or
push
enter
inc
push
cmpsb
lcall
clc
and
jl
orb
mov
fs
in
adc
add
jns
push
movb
sub
dec
call
lock
or
les
rorb
bound
fimull
cwtl
nop
push
addb
cmc
add
sbb
mov
or
inc
and
push
outsb
push
xor
loopne
adc
jb
add
sub
xchg
mov
aam
xchg
push
jp
adc
cmp
or
test
xchg
mov
test
movsb
and
pusha
imul
mov
aam
pusha
movsb
mov
in
addr16
insl
xor
add
sub
hlt
rclb
addb
fsubl
sbb
dec
xchg
push
adc
fidivrl
sub
sbb
rcr
and
adc
sarb
mov
pop
je
pop
inc
nop
or
inc
sub
xor
hlt
mov
mov
movsl
adc
add
push
and
cwtl
loop
mov
add
fs
inc
ljmp
dec
pop
cmp
mov
xor
in
lcall
test
test
and
adc
ss
insl
jb
and
loopne
cld
inc
mov
fcompl
adc
test
enter
ds
gs
sub
jle
fcoml
in
xor
xor
leave
ret
sub
cwtl
sbb
sahf
pop
and
mov
scas
les
enter
xor
inc
jp
dec
dec
xorb
adc
mov
rcl
test
pop
push
shll
bound
push
mov
bound
adc
adc
push
mov
sub
loop
rorl
repnz
cmpsb
mov
push
mov
aam
outsb
stos
adc
orb
mov
mov
inc
test
push
clc
dec
test
add
mov
add
add
ror
loope
adc
fs
cmp
test
rcrl
mov
ljmp
and
or
dec
push
and
sub
leave
add
push
cmp
filds
leave
xchg
fisubl
cmc
clc
jmp
adc
fsts
cmpsl
jle
dec
loopne
mov
mov
mov
pushf
adc
sbb
rolb
pop
xor
sarb
loopne
add
imul
test
andb
push
lods
mov
and
mov
xor
cmpsb
fsubs
bound
push
ljmp
add
enter
inc
dec
jbe
inc
add
jb
inc
ds
or
or
xor
popa
adc
rolb
inc
and
inc
incb
shlb
loopne
push
sbb
ret
mov
cmpsl
mov
enter
and
sbb
rclb
dec
jp
adc
inc
int3
push
cltd
or
mov
insl
or
push
pop
xchg
fs
or
cltd
nop
pop
add
push
jp
mov
gs
mov
cmpsb
mov
jo
jecxz
dec
sbb
pop
out
xorb
adc
mov
mov
sub
inc
push
jo
andb
or
test
push
rcl
dec
xor
fs
push
rolb
or
pop
and
mov
jbe
aam
sbb
jb
dec
xchg
leave
in
repnz
inc
push
ret
loopne
loop
mov
rcl
jne
sbb
imul
test
sbb
add
adc
rolb
je
cmp
sub
mov
lret
inc
push
lods
inc
inc
bound
jle
call
out
test
sbb
inc
lods
mov
mov
dec
jl
fcom
addr16
mulb
add
rolb
xor
push
adc
mov
adc
rcr
leave
dec
es
test
dec
inc
sub
mov
mov
push
mov
roll
xchg
or
add
or
enter
mov
or
je
add
cmpb
mov
cltd
mov
dec
insl
xchg
test
test
push
ret
and
incb
addl
push
add
add
add
add
int3
and
loop
movb
add
lods
mov
mov
sub
pop
outsl
or
adc
pop
xor
lods
or
rcrb
inc
add
lock
inc
popa
pusha
pop
mov
dec
in
cmpsb
or
xchg
xor
cwtl
fs
jne
pop
sbb
cmp
movsb
rolb
mov
lret
enter
cmp
sbb
mov
arpl
out
sbb
add
outsb
sarb
loopne
sub
les
inc
inc
mov
mov
or
jmp
mov
adc
mov
push
sub
push
jl
jno
jmp
mov
xchg
adc
nop
or
jns
loopne
es
sub
xor
dec
sub
cltd
insb
or
sbb
or
mov
mov
inc
cwtl
jle
test
mov
cmp
sbb
sbb
je
add
push
adc
pushf
mov
bound
add
xor
dec
mov
in
pop
mov
sub
add
xchg
rorb
cmp
mov
push
adc
fistpll
push
shlb
inc
cmp
mov
mov
sub
movsl
and
and
xchg
insb
pusha
andb
adc
ds
xchg
mov
cmpsb
xchg
enter
mov
mov
mov
aam
enter
decb
jb
sub
test
nop
rolb
jb
sub
fcoml
xor
lret
and
push
cmc
xor
push
enter
pop
add
or
fisubs
xchg
or
hlt
sub
push
dec
or
adc
test
pop
sbb
mov
push
inc
sub
mov
sbb
insl
data16
mov
test
inc
push
test
loope
mov
add
lret
sub
test
mov
jno
mov
xor
sbbl
dec
xor
pushf
sbb
sbb
jp
push
adc
mov
or
fs
sbb
fisttpl
and
int3
popa
sub
xchg
addb
cwtl
cmp
test
add
jb
rolb
adc
fmul
push
int
clc
jb
filds
and
dec
and
xchg
jo
mov
push
adc
pop
mov
push
sub
inc
jo
in
mov
xchg
cltd
inc
xor
js
mov
mov
sbb
add
scas
add
sbb
lcall
pushf
je
fs
popf
mov
enter
loope
add
cmp
sbb
mov
mov
and
mov
je
insl
ret
test
inc
or
inc
cmp
mov
adc
push
sbb
sbb
jne
int3
push
mov
cmp
lds
or
icebp
bound
sbb
sbb
dec
mov
jo
test
xchg
jl
mov
sub
sub
jbe
jo
mov
in
cli
jp
les
adc
subb
xor
dec
xchg
in
into
adc
add
test
mov
add
and
js
imul
push
xor
mov
push
es
pushf
je
and
and
cs
call
jl
fsubrp
dec
dec
push
adc
push
and
cmpsl
hlt
sub
call
cwtl
sahf
ss
mov
data16
nop
adc
mov
xchg
loopne
sbbb
sub
int3
mov
mov
pusha
fs
sbb
or
loopne
outsb
nop
lods
andb
cmpsb
xchg
fs
popa
jl
pop
nop
fsts
mov
fs
adc
add
push
nop
popf
and
mov
push
ljmp
test
push
cmp
cmpsb
push
leave
inc
adc
xchg
jb
or
loopne
sbb
push
pusha
nop
dec
xor
ss
dec
dec
sbb
or
push
or
mov
lcall
cmp
add
mov
push
cmpsb
xor
lods
test
jo
addb
xor
push
push
pop
ret
lcall
inc
or
pop
xchg
mov
cs
add
dec
pop
lcall
dec
and
gs
mov
jle
push
adc
lret
repnz
and
sbb
data16
mov
sbbl
adc
leave
add
push
sbb
adc
bound
cs
fcoml
inc
imul
xor
in
leave
or
loopne
sub
and
push
mov
pop
sbb
push
in
cli
cmp
xor
test
adc
xor
inc
lcall
xchg
or
and
or
dec
popf
cmpsb
int3
cli
xlat
pop
xchg
sbb
adc
gs
sub
aad
mulps
loope
fdivl
or
and
dec
rcrb
dec
or
out
add
movsb
and
inc
lcall
mov
xchg
sbb
xchg
ds
in
fsub
adc
add
sub
push
lcall
and
cmc
rcll
add
add
add
jg
mov
jle
ret
rorb
and
mov
movsl
mov
jmp
pop
and
pop
or
fs
movsl
xor
mov
sub
or
or
xchg
dec
or
inc
or
or
adc
adc
or
gs
xorb
adc
jbe
loop
loop
cld
add
adc
adc
adc
mov
out
scas
cltd
scas
push
enter
xchg
inc
cs
xchg
inc
je
inc
inc
data16
push
xor
flds
sahf
pop
mov
or
xor
ds
sbb
sbb
mov
add
mov
adcb
fmul
or
pop
adc
lock
adcb
push
rorb
mov
push
add
push
xor
add
faddl
sub
sarb
inc
fcompl
les
mov
or
int3
mov
mov
or
cwtl
or
push
adc
sahf
andb
loop
fcomps
or
jp
inc
andl
mov
push
aam
or
out
add
int3
jle
xor
in
or
and
aad
and
or
mov
add
lret
rol
or
add
pop
jb
adc
dec
xchg
data16
mov
or
pop
je
and
jo
or
mov
jp
sbb
or
inc
xor
cli
cmc
adc
cs
pop
sub
test
dec
out
push
pop
test
adc
push
cmpsb
mov
cltd
cld
outsb
pusha
sub
orb
inc
and
ficompl
pop
cwtl
bound
sub
mov
lock
cmp
adc
cmp
and
mov
and
xchg
sub
add
cmp
cmp
and
dec
inc
dec
mov
cld
xor
add
movsl
xchg
cmpsb
sbb
adc
and
dec
and
jne
jo
mov
pusha
call
mov
sahf
adc
dec
orb
mov
push
or
push
mov
cmp
dec
cmp
rcll
dec
adc
cwtl
int3
test
es
and
add
mov
dec
loope
jb
mov
or
sahf
or
xchg
subb
adc
mov
rorb
push
hlt
adc
fs
or
xor
mov
dec
cmp
pop
push
pop
jbe
adc
jbe
fucomip
data16
and
lret
test
jg
test
mov
rcrb
hlt
dec
ret
repnz
shlb
push
js
stos
xchg
mov
mov
push
xchg
movsb
xor
test
shlb
sub
mov
xor
or
scas
outsb
inc
rclb
adc
in
pushf
push
int3
push
cld
pop
xor
xchg
add
or
xor
pop
dec
daa
jne
mov
and
xor
xchg
adc
dec
push
mov
cmp
push
mov
mov
adc
or
sub
jo
dec
or
pop
fadd
xorl
push
nop
sbb
push
test
cli
xlat
in
xchg
shlb
jle
xchg
movsl
jo
fmulp
and
loopne
sub
sbb
mov
jle
cmp
ljmp
rolb
rcrl
and
addb
ret
jb
imulb
scas
sub
add
jp
add
insb
or
push
arpl
ficoms
cmp
cltd
enter
sub
nop
cmp
dec
enter
add
or
cmpsb
loop
fs
and
sub
and
jp
addb
aam
int3
push
in
adc
jp
shl
test
in
loop
add
jbe
fcom
aad
aad
mov
push
popa
mov
idivb
sbb
inc
jns
pop
jbe
adc
in
fcomps
ljmp
mov
xor
mov
lcall
cwtl
aam
inc
push
add
cs
shrl
js
testb
popf
insb
pop
pop
sub
inc
xchg
or
nop
sbb
sbb
cli
clc
add
int3
rcrb
nop
loope
pop
sub
inc
aaa
int3
loop
pop
add
out
cltd
lret
insb
dec
es
cmc
push
mov
or
dec
add
xchg
call
or
pusha
and
push
xchg
or
push
add
sub
sbb
and
xchg
sbb
add
adc
in
dec
pusha
or
and
push
push
into
in
test
orb
dec
push
adc
add
xchg
mov
cmc
and
aam
rorb
les
es
fs
add
xor
shlb
add
fsubl
and
dec
xor
in
xchg
jb
hlt
pop
mov
enter
or
call
pop
fisubrl
or
mov
ret
rol
sub
jmp
push
sbb
sti
inc
push
je
add
jno
and
cmp
mov
push
in
and
mov
sbb
push
or
dec
in
pushf
lcall
shl
sbb
add
pusha
cmp
cmp
lret
popa
xchg
popf
dec
into
clc
push
inc
imul
inc
sub
dec
xor
mov
rcll
rclb
lret
cmp
shll
push
mov
daa
inc
cmpsb
out
stos
dec
inc
xor
mov
push
or
push
dec
mov
inc
push
pusha
sub
rcrb
jbe
xchg
or
pushf
inc
or
and
and
pop
sbb
sbb
ss
inc
or
xchg
sub
push
in
push
lret
xchg
stos
mov
add
add
dec
outsb
lods
mov
push
sbb
fisubrs
cmc
dec
cmp
inc
xor
inc
invd
sub
and
dec
jno
dec
or
cmp
leave
and
popa
lods
sahf
xchg
dec
and
xchg
lods
or
dec
aad
mov
cmp
sahf
pop
sub
xchg
inc
sbb
sbb
roll
dec
cwtl
push
dec
push
adc
roll
js
dec
sbbb
into
dec
dec
loop
sbb
add
or
insl
sub
imul
lret
or
ret
adc
cs
dec
cmp
push
cs
dec
rolb
popa
inc
jb
ss
or
adc
add
scas
sbb
push
and
adc
mov
aam
adc
decb
xchg
rclb
lret
mov
mov
and
mov
out
mov
insb
lods
hlt
sbb
mov
outsb
je
adcl
and
inc
xor
popf
inc
jle
mov
push
and
push
mov
cmp
lods
adc
jle
add
xor
inc
push
sbb
cmpl
push
or
mov
push
sub
mov
and
dec
int3
dec
sahf
test
push
repnz
loop
mov
or
xor
dec
imul
cwtl
or
into
les
pop
pop
mov
test
popa
inc
in
mov
mov
nop
add
call
or
inc
sub
addb
out
mov
loop
subb
xor
stos
call
cs
es
js
pop
add
pop
int3
ret
inc
inc
or
add
loopne
dec
es
insb
test
push
int3
inc
pop
clc
jo
xchg
rcll
nop
rol
mov
sbb
mov
lret
je
fldcw
ret
xor
icebp
fimuls
xchg
adc
adc
or
inc
lock
cli
shl
or
and
cwtl
sbbb
fidivl
or
cmp
pop
nop
or
or
add
and
rorl
test
xlat
sbb
mov
inc
sbb
cli
test
adc
add
mov
fisubl
xor
cwtl
lcall
inc
sub
subb
int3
inc
lea
add
lcall
ds
push
sbb
fsub
pop
and
ret
sub
test
and
inc
add
push
xor
cmp
ret
xchg
xchg
repnz
cmp
aaa
int3
pop
push
jb
cmp
dec
js
sub
or
sbb
mulb
and
dec
pop
mov
cmp
cwtl
add
add
add
add
mov
pushf
and
xor
or
movsb
orb
push
sub
mov
dec
or
mov
outsl
mov
addb
pushf
adc
inc
adc
cwtl
xor
push
push
pop
dec
xchg
or
xor
addb
adc
sbb
fiadds
test
scas
xor
addr16
sub
fdivrl
or
push
cmp
mov
mov
adc
jp
or
ret
add
loopne
mov
sub
add
or
push
jb
xor
scas
loopne
push
mov
and
push
push
pushf
add
sub
stos
lods
inc
push
add
xchg
push
pushf
popa
and
push
push
jle
xor
adc
pop
aam
rclb
and
pushf
fcoms
fcomps
and
inc
or
sub
sub
xor
mov
add
sbb
lret
jb
mov
push
adc
or
bound
lods
adc
mov
lods
sahf
adc
dec
pop
xchg
daa
push
test
mov
js
xchg
add
inc
outsl
ret
sarb
pusha
mov
or
adc
jle
imul
ret
push
dec
jl
inc
mov
test
pop
data16
subb
or
jmp
sub
and
and
stos
dec
push
mov
xchg
xchg
mov
test
push
rcrl
insb
sub
jp
xor
js
ret
push
sub
push
sahf
mov
dec
pusha
gs
and
rclb
mov
test
and
adcl
pop
jnp
cmp
add
shrl
shr
xor
callw
mov
pusha
xchg
ret
xchg
cltd
inc
add
adc
mov
add
cli
lret
mov
jp
imul
xchg
pushf
imul
or
cli
sahf
sbb
jo
test
xchg
mov
xchg
mov
pop
push
enter
hlt
sub
and
add
and
mov
rclb
inc
test
sub
push
adc
inc
inc
lock
subb
test
mov
scas
fdiv
push
jmp
jne
inc
or
loope
addb
nop
rcrb
int3
push
or
push
cs
add
aam
sbb
mov
movsb
add
out
jbe
add
and
cmp
pop
cs
push
push
jbe
push
call
adc
lods
xchg
test
test
and
sub
popf
sub
sub
inc
push
bound
cmp
xchg
jns
imul
inc
or
xchg
dec
cli
adc
cmpsb
xor
in
ret
push
push
add
add
xchg
and
xchg
enter
out
and
dec
mov
and
loopne
xlat
mov
adc
in
xchg
mov
out
cld
les
push
cmpsb
ds
sbb
mov
adc
cwtl
add
xor
inc
mov
ret
rcl
add
mov
xchg
test
inc
cli
imul
mov
push
out
cwtl
int3
sub
aad
adc
rclb
sub
ret
xchg
add
xchg
sbb
push
jbe
inc
movb
xchg
scas
dec
adc
jl
adc
mov
call
clc
pop
xchg
xor
jb
cmpsl
movsb
xor
adc
and
cmp
dec
mov
or
push
sub
inc
or
mov
and
icebp
fsubs
mov
lcall
in
xchg
add
ds
stos
mov
pushf
or
je
cltd
mov
mov
pop
andb
enter
push
inc
xchg
adc
stos
xor
pop
xchg
sahf
adc
dec
loope
mov
add
or
inc
or
sbb
rorb
jecxz
insb
push
insb
or
add
loope
shlb
mov
add
dec
enter
add
fimuls
or
mov
mov
aam
jp
mov
dec
pusha
jle
roll
inc
ljmp
mov
clc
and
push
fwait
or
inc
lods
test
cwtl
or
dec
imul
mov
or
push
addl
push
sahf
call
repnz
cld
ljmp
inc
or
sub
jle
pusha
push
dec
adc
push
adc
lret
cwtl
or
dec
pusha
sub
sbb
or
scas
sahf
cmpsb
cmp
sbbl
data16
xor
sbb
add
sub
ds
hlt
and
push
fs
aad
or
dec
and
pop
cld
cld
xor
popf
pushf
int3
fs
sbb
inc
es
mov
or
sub
xchg
pusha
jl
and
push
adc
mov
and
data16
scas
adc
mov
mov
mov
and
cwtl
fisubrs
inc
and
test
sahf
ds
inc
xchg
int3
push
scas
push
xchg
add
inc
lcall
ror
addb
cld
sbb
sub
sbb
inc
mov
sbbl
push
add
cli
rclb
loopne
mov
pusha
adc
fidivrl
push
cmp
insb
push
faddl
adc
cltd
js
rorl
mov
mov
sub
lods
adc
sub
lods
pusha
inc
add
popa
cs
cli
pushaw
and
gs
lret
and
cmp
and
and
lods
or
sub
sub
adc
jnp
sub
subl
roll
mov
pusha
dec
subb
push
sbb
test
fcomps
test
xchg
pop
es
cmc
push
add
xchg
in
inc
jbe
add
sub
call
test
rcll
push
xchg
inc
loopne
xchg
jle
cmp
test
adc
cltd
dec
add
push
loop
or
js
inc
es
inc
dec
jo
fsubrs
xchg
push
or
cmp
or
lret
imul
cwtl
lock
or
ds
test
add
and
push
cmpsb
pop
add
bound
pop
and
and
insb
or
sbb
out
and
xor
mov
nop
bound
lea
sub
adc
sarl
mov
xor
push
aad
js
xor
xchg
push
notb
mov
mov
mov
add
or
mov
or
jb
add
mov
call
and
test
xor
xor
dec
push
mov
movsb
les
adc
pop
push
repz
xor
testb
lcall
inc
insl
mov
cmp
dec
xchg
push
dec
push
lods
mov
mov
or
xchg
adc
add
mov
and
cmpsb
push
movsb
or
leave
inc
sbb
add
adc
add
ss
and
test
sbb
xor
fs
pop
sub
loop
adc
adc
jp
mov
mov
sub
lcall
xor
xchg
or
pop
sbb
push
test
jp
xor
adc
sub
jle
adcb
insb
mov
mov
push
push
push
adcb
xchg
sub
adc
loope
xchg
xchg
stos
or
or
add
sub
push
mov
ret
test
add
jb
xchg
xor
int3
mov
inc
xchg
pop
add
je
and
pop
roll
jle
clc
jo
lea
add
inc
sbb
sbb
xchg
adc
sbbb
fcmove
dec
jb
fsubl
add
add
fs
cs
push
pop
hlt
or
fwait
jo
mov
inc
scas
mov
or
sbb
daa
sub
push
and
leave
dec
inc
push
add
add
dec
adc
nop
test
stos
call
push
aam
ss
sub
mov
mov
test
and
inc
add
add
scas
insb
out
mov
add
xorl
in
sub
dec
sbb
mov
mov
rolb
push
adc
xchg
mov
fs
mov
add
sbb
mov
enter
pop
pusha
xchg
xor
or
adc
es
adcb
and
adcb
push
pop
adcb
mov
or
shrb
mov
mov
fidivrl
lock
js
stos
sarb
jb
fs
push
scas
mov
jbe
add
sbb
fs
add
push
or
push
loop
cltd
rolb
adc
xchg
dec
sub
push
aad
pop
sub
cltd
xor
dec
and
sahf
js
cli
pop
and
push
mulb
adc
mov
xchg
xchg
inc
sub
mov
sub
add
jbe
loopne
sbbb
mov
pop
or
mov
jb
sub
jnp
repnz
sub
orb
xor
in
push
dec
test
cwtl
mov
scas
mov
push
push
nop
lret
sbb
or
and
imul
bound
adc
enter
inc
fs
bound
test
add
aam
jbe
push
aam
adc
cwtl
xchg
cmpsb
int3
adc
mov
mov
jmp
or
mov
js
adc
and
cmp
xchg
dec
sub
arpl
cmpsb
cltd
cli
cli
adc
and
pop
pop
sub
cmp
add
pusha
or
int3
mov
xchg
push
mov
dec
clc
jle
xchg
push
roll
or
repnz
scas
fiaddl
adc
add
sbb
shlb
dec
enter
shrb
sbb
insb
lret
xchg
lret
hlt
mov
push
lcall
xor
pushf
enter
sub
mov
and
sbb
mov
inc
mov
mov
cmpsb
sub
dec
cmp
fidivrs
shlb
mov
sbb
mov
mov
in
loope
push
andl
mov
aam
xor
inc
xor
xor
inc
xor
push
inc
jbe
int3
loop
cmp
inc
pop
dec
ffree
sub
add
imul
repnz
loop
or
push
mov
or
xor
jle
cmp
push
and
inc
or
add
push
cwtl
mov
mov
call
bound
mov
lret
sub
mov
sbb
mov
add
add
adc
cmpsb
loop
push
ror
sub
outsb
cli
sub
pushf
mov
adc
sarl
orb
aam
dec
cwtl
mov
dec
lret
mov
xor
insb
scas
loopne
cwtl
inc
scas
xor
and
xor
xchg
and
and
test
push
or
hlt
push
addb
or
adc
add
inc
jno
cltd
fdiv
xor
shlb
je
loop
add
jecxz
mov
js
cmp
inc
xchg
adc
mov
in
loopne
sbb
cltd
and
mov
xchg
ror
push
pushf
cs
cmp
sbb
add
adc
enter
xchg
nop
ficoml
xor
fsubrl
sub
imul
and
ljmp
ljmp
jl
xchg
dec
xor
and
add
addl
xchg
push
push
insl
out
ds
ljmp
jo
cmp
mov
and
and
scas
ss
mov
adc
mov
jge
inc
mov
enter
dec
mov
incl
jb
and
adc
xor
in
cmp
mov
in
jne
push
pop
es
add
jo
mov
or
ret
xor
xchg
xchg
adc
mov
test
cwtl
cmp
mov
inc
add
xor
xchg
nop
dec
dec
sarb
cli
je
dec
and
test
dec
mov
jb
nop
xor
imul
push
sub
sbb
adc
test
into
jle
pop
sbb
jo
inc
cwtl
popa
test
in
xchg
das
add
push
pushf
mov
sub
and
popa
adc
dec
sbbb
loope
xor
pusha
nop
leave
xor
mulb
out
mov
loop
add
roll
xor
inc
lock
add
gs
push
cmp
jno
loop
pusha
sub
adc
ret
hlt
fdivrl
test
push
cmp
and
push
add
xchg
rolb
test
ljmp
clc
stos
repnz
xchg
test
mov
cmp
jle
or
add
sbb
add
sbb
ret
in
aam
dec
push
fdivrp
or
shrl
cmp
add
or
and
sbb
dec
popa
into
fsubrs
mov
and
out
pop
mov
sbb
sub
inc
lea
adcb
sub
pusha
push
mov
in
jnp
dec
rolb
jl
push
sbb
dec
mov
test
andb
loop
or
movsb
mov
xor
or
call
push
push
pop
adc
cmp
sub
cmpsb
test
pop
xor
push
dec
cwtl
push
cs
inc
loopnew
les
fadds
adc
add
add
hlt
xchg
inc
mov
mov
dec
adc
clc
or
rolb
add
and
sub
xchg
subb
ljmp
push
adc
xchg
mov
in
adc
ret
xchg
inc
nop
ret
aam
movsb
mov
xor
cwtl
adc
push
xor
sbb
xor
mov
orl
fdivl
cmp
cmp
ljmpw
add
add
jo
add
nop
inc
xor
pop
dec
pusha
dec
or
lcall
call
xchg
or
pop
test
or
sbb
clc
stos
adc
adc
cmpsb
jbe
sar
pause
mov
sbb
cmp
lea
xor
jp
mov
jnp
dec
cmp
ljmp
inc
inc
popa
shlb
fs
or
push
fidivrl
aam
test
dec
mov
mov
xor
imul
test
sub
mov
or
pop
add
or
daa
les
jecxz
pop
test
inc
ds
sbb
push
xor
or
or
inc
add
ret
inc
stos
insb
into
test
js
or
scas
push
add
inc
add
push
dec
jo
cmp
inc
movsl
int3
gs
xchg
in
cmpsb
cwtl
inc
xor
rclb
or
cmp
orl
cld
dec
data16
sub
sbb
es
cli
nop
cwtl
sub
pushf
enter
test
mov
movsl
mov
fidivl
aaa
jno
mov
jp
jl
imul
inc
lock
inc
loop
xlat
adc
and
inc
lcall
test
add
mov
into
aad
les
inc
gs
ret
ficoms
adc
pusha
sbb
loope
or
es
cmp
ret
shrb
push
push
loope
in
hlt
xor
pop
push
cmp
mov
sub
add
fimuls
cmp
and
shrb
sbb
das
xchg
repnz
mov
pusha
push
push
add
outsb
movsb
ljmp
nop
xor
daa
jb
and
in
mov
xchg
loop
inc
and
push
loope
push
lods
push
add
adc
xor
mov
repnz
xor
inc
nop
or
and
pushf
and
sbb
cmc
movsb
adcb
sub
push
mov
add
pop
mov
push
test
mov
subb
andb
les
cli
js
add
and
and
xchg
xlat
xchg
push
push
add
sbb
xor
xor
mov
jl
mov
or
mov
adc
mov
push
shll
or
jns
mov
subb
fidivl
loop
xchg
addb
cltd
pop
lcall
adc
in
mov
test
jbe
mov
push
orb
mov
add
insb
lret
dec
xchg
push
dec
loope
xor
test
cmp
jns
mov
clc
shlb
sub
es
lcall
decl
stos
lods
or
aam
fs
ss
pop
addb
adc
cli
xor
mov
inc
sbb
cld
fs
jo
and
dec
mov
mov
add
add
mov
mov
test
insl
or
push
dec
sbb
cmp
popa
cmp
dec
push
sbb
mov
mov
in
add
and
or
imul
or
fisubl
xchg
popa
movsb
mov
inc
dec
jle
into
and
sbb
aam
andb
or
in
int3
repnz
inc
in
xchg
jbe
rcrb
add
pop
pop
gs
pop
mov
xor
add
add
mov
mov
sbb
jp
test
xchg
inc
add
lcall
paddb
mov
add
add
cmp
clc
xchg
mov
es
rcrl
and
or
push
mov
enter
hlt
and
subl
or
jle
lret
mov
loopne
push
enter
mov
xchg
hlt
and
xchg
les
push
cmp
jae
daa
mov
dec
pushf
push
adc
mov
push
aad
pusha
fimuls
lock
mov
inc
push
cmp
rorl
mov
push
ds
insl
loopne
aad
mov
movsb
cmp
push
nop
popa
inc
adc
insb
mov
fs
and
xchg
scas
sub
shr
cs
cmpsb
cmp
mov
mov
push
inc
subb
test
inc
popa
sbb
sub
mov
and
into
dec
xchg
pop
or
pop
push
cmp
or
add
outsl
pop
dec
lar
cltd
imul
ds
or
mov
aam
mov
xorb
cmp
push
sahf
xchg
dec
and
inc
push
pop
call
or
fs
adc
mov
add
adc
shl
addl
les
daa
or
lods
cs
rcrb
xorb
ss
mov
add
add
sbb
inc
push
dec
movsb
xchg
repnz
sub
jle
pop
push
lcall
out
mov
push
les
ds
xchg
je
xchg
push
add
or
xorb
inc
notb
or
mov
popa
orb
or
cmp
push
inc
add
ja
xorb
ja
adc
inc
stos
test
xor
nop
outsb
pop
xor
push
push
popa
loop
adc
imul
pop
gs
add
ss
pop
xor
dec
call
sub
scas
dec
pop
cmp
cmp
and
add
das
pop
loopnew
es
rclb
test
xchg
imul
movsl
loope
adc
cli
push
sub
leave
mov
movsl
sbb
mov
popa
sub
mov
or
push
adc
mov
push
cwtl
xorl
stos
mov
push
fsubrl
xchg
js
cli
sahf
stos
imul
js
outsl
inc
lock
fimull
adc
push
xchg
ss
jmp
mov
test
test
and
or
xchg
test
and
call
sub
push
or
cmp
lock
or
or
adc
and
or
into
adc
adc
insb
adc
push
mov
and
es
mov
pop
pop
adc
cmc
adc
js
pop
adc
adc
cmp
pushf
xor
lock
ret
sbb
push
adcl
jo
mov
loopne
repnz
push
sbb
jle
mov
cmc
sahf
or
add
jbe
pop
push
loopne
insb
es
test
ljmp
ret
xchg
inc
popf
pop
or
push
pusha
adc
bound
xorb
push
adc
inc
add
dec
loop
jl
addl
mov
mov
test
cmp
dec
and
mov
add
sbb
and
shlb
push
inc
sub
mov
adcl
and
data16
nop
pushf
push
or
xor
and
test
les
outsl
add
lock
sbb
and
adc
or
rolb
mov
and
fmuls
pop
and
out
rorb
xor
xorl
xchg
dec
and
ret
push
push
cs
pop
loope
xor
movsb
aad
xor
data16
xchg
andb
sarb
cmp
xchg
js
dec
mov
mov
enter
jp
jo
pop
jp
lods
xchg
or
loop
shlb
mov
or
out
test
xor
jl
xchg
sub
je
xchg
and
sub
cli
jns
mov
mov
jecxz
mov
loope
lock
mov
int3
and
les
mov
pop
sbbb
shrb
into
mov
mov
adcl
rclb
adc
mov
pop
rcrb
push
inc
das
mov
ds
test
outsl
adc
leave
adc
add
mov
test
inc
xorb
lock
add
mov
add
cmpsb
mov
sub
pusha
call
movsb
les
ljmp
movb
scas
cld
fisubl
dec
mov
clc
add
adc
es
ret
push
pop
ss
inc
inc
loope
and
ficoml
jbe
rorb
bound
or
dec
fnstsw
jb
pop
fsubl
and
pop
adc
shlb
pop
cli
xchg
xor
stos
pushf
add
sbbl
add
aad
mov
add
adc
sub
push
pop
cmp
xchg
xor
test
xor
sbb
addl
sbb
add
or
gs
pusha
fadd
clc
sub
sbb
inc
movsl
pop
pop
je
mov
adc
inc
sarb
push
add
add
xor
dec
test
push
hlt
sub
sbbb
push
sub
mov
and
push
or
push
or
xorb
inc
enter
mov
add
adc
push
sahf
hlt
add
clc
mov
jo
add
xor
xchg
out
pop
mulb
or
ret
popf
insb
mov
dec
and
loope
sbb
fcmovu
rolb
je
cmpb
jb
bound
test
inc
stos
out
adc
test
push
enter
add
jp
sbbb
jp
adc
outsb
ret
dec
test
test
adc
cld
and
jo
pop
sub
cmp
xchg
jne
xor
push
loop
or
pop
dec
jne
jne
mov
mov
inc
addb
cwtl
test
pop
jge
lcall
push
dec
xchg
pop
pusha
push
or
sub
nop
scas
xchg
jbe
rolb
roll
shrb
aam
imul
xchg
adc
test
aam
cmc
lods
mov
sub
rcrl
or
nop
ret
and
lcall
mov
add
insl
sbb
mov
mov
fidivrl
add
int3
pop
sahf
cmp
cltd
inc
and
outsb
add
or
push
lods
inc
mov
mov
lock
push
or
xor
sub
and
ret
or
ss
xor
inc
mov
dec
push
lret
lock
popa
add
sbb
dec
mov
mov
inc
sub
test
lret
jbe
cli
push
push
xchg
push
jp
stos
movsb
or
shlb
daa
adc
mov
dec
or
roll
or
fsubl
cmc
stos
cltd
in
gs
mov
cwtl
insb
test
movsl
add
or
test
sub
add
push
pop
mov
ds
mov
mov
cmp
cmp
lock
or
aam
push
or
sahf
push
fs
or
lret
nop
fcmovbe
add
adc
inc
lret
add
sub
aam
es
movsb
pusha
and
lret
push
add
add
or
cmp
out
int3
or
or
xchg
pop
call
dec
xorb
pop
pusha
fs
and
cld
fs
pop
and
cmpsl
cmpsb
add
add
test
bound
imul
mov
adc
insl
push
push
xchg
and
sub
mov
jl
fs
bound
jo
arpl
into
hlt
loop
jo
inc
test
insl
test
xor
dec
mov
pop
add
inc
xor
mov
arpl
push
jbe
jo
pop
add
or
add
mov
xor
shl
pusha
mov
push
adc
ret
loopne
or
adc
test
push
fcompl
or
xchg
call
not
lret
incb
mov
inc
test
stos
loopne
int3
or
cld
in
pusha
sub
mov
lret
sub
es
mov
or
mov
shrb
clc
adcb
pusha
dec
bound
dec
cmp
test
loop
mov
adc
mov
push
rolb
mov
dec
rorb
jne
inc
in
cltd
and
out
popa
inc
in
nop
dec
sub
sbb
hlt
mov
sbb
mov
adc
fs
pusha
jo
insb
fs
ret
rclb
pusha
outsb
mov
cld
js
adc
and
xchg
push
cmp
mulb
sub
xchg
or
mov
mov
or
sarb
dec
mov
dec
test
mov
inc
sbb
cli
inc
add
push
sbb
inc
xor
xor
repz
test
test
xor
adc
sbb
jecxz
adc
js
or
sub
into
or
adcb
xchg
push
add
lret
sub
add
nop
dec
dec
clc
add
loop
dec
or
and
es
dec
inc
or
push
xor
js
insb
sub
mov
xor
dec
cwtl
movsb
mov
sbb
test
adc
je
cs
add
and
cmpsb
add
push
push
jp
jo
push
test
sbb
hlt
push
cmc
js
xor
pushf
lcall
enter
andl
add
cld
fcompl
mov
xor
adc
sbb
adc
mov
cmp
inc
add
dec
mov
push
mov
popa
sbb
movsl
jl
nop
jo
in
push
sub
xor
cmp
push
test
xor
cltd
stos
out
dec
dec
loope
xchg
jp
xor
mov
sub
int3
mov
sbb
mov
in
and
and
mov
and
mov
inc
mov
jle
arpl
cwtl
sbb
xor
adc
push
bound
sub
jne
or
adcb
fs
or
pusha
popl
shll
mov
or
or
xor
movsl
pusha
das
sub
and
dec
inc
sub
push
xor
and
mov
xor
data16
cli
mov
add
or
je
or
or
add
push
bound
push
mov
push
testb
adc
ret
jbe
adc
dec
inc
fs
aam
jo
lcall
lock
loope
cmp
outsb
push
subb
sub
es
sub
data16
out
data16
mov
cmpsb
inc
pop
xor
jb
loopne
enter
nop
xchg
add
leave
and
mov
imul
mov
xchg
addl
cmp
popa
bound
jl
xorb
jbe
test
mov
inc
add
or
inc
insb
jle
lock
lea
add
int3
xchg
mov
andl
nop
mov
add
mov
xchg
lods
or
data16
sub
jo
mov
mov
in
jae
insb
sub
mov
test
inc
hlt
fmulp
mov
dec
dec
scas
insb
pop
das
inc
xor
mov
adc
cmp
adc
or
inc
cmp
adc
insb
add
xorl
cmp
sub
lret
or
xchg
insb
mov
xchg
ljmp
jl
aam
popa
push
or
sahf
xor
push
push
and
mov
adc
mov
mov
fiadds
add
xchg
or
out
inc
adc
cltd
or
addr16
bound
inc
sub
mov
movsl
xor
add
add
bound
add
inc
and
roll
xor
or
and
cs
ljmp
lret
mov
lret
inc
sbb
push
or
test
inc
gs
lock
mov
pusha
inc
imul
cmp
enter
xchg
add
pop
inc
mov
cmp
gs
shlb
inc
fcoml
pop
dec
push
xchg
or
pop
fs
enter
mov
sbb
aam
xchg
or
add
xchg
push
inc
es
into
sbb
rclb
sbb
movsl
mov
add
xor
cmp
or
sub
adc
xor
mov
into
mov
inc
inc
inc
pop
xchg
or
nop
or
movsb
dec
xor
out
adc
and
or
or
stos
pusha
sub
pushf
or
dec
or
into
clc
and
bound
mov
add
jo
adcl
push
adcb
inc
mov
mov
pushf
mov
push
test
ljmp
movsb
xor
add
add
faddl
and
cwtl
lea
adc
repnz
add
mov
popa
push
test
jae
and
ret
xor
cmp
dec
sbbb
jb
dec
test
or
pop
shll
push
daa
roll
mov
int3
inc
xor
sbb
clc
push
or
mov
rcrb
and
pusha
fsubrl
push
push
call
adc
pop
leave
add
mov
enter
popa
add
push
mov
mov
mov
or
cmp
aad
cmc
mov
sub
sub
inc
jno
mov
dec
add
sub
mov
clc
xor
gs
dec
test
aam
mov
orb
enter
and
adc
or
add
sar
mov
inc
xor
xor
or
xchg
in
cmp
ljmp
sbb
xor
mov
pop
in
insb
jne
or
adc
lods
clc
mov
pusha
inc
add
movb
sub
push
les
inc
xchg
add
xor
or
or
hlt
mov
fildll
inc
inc
xor
mov
pusha
in
mov
inc
add
push
xor
cs
pop
mov
nop
dec
dec
xchg
push
xor
rolb
add
in
push
roll
sbb
lods
pusha
dec
push
xor
xchg
rolb
mov
cwtl
xor
add
lea
pusha
imul
mov
sbb
lret
push
xchg
stos
lods
imul
inc
pusha
shlb
loopne
subb
test
mov
sbb
stos
pop
dec
fsubrs
loope
pop
test
xchg
mov
mov
add
push
mov
repnz
xchg
or
xor
xor
add
mov
test
mov
sub
xor
enter
or
dec
adc
adc
lret
loopne
gs
stos
addb
repnz
inc
xchg
dec
cli
sbb
push
pop
inc
imul
push
outsl
hlt
int3
cmc
push
xchg
xchg
jo
bound
sbbb
and
fstpl
jo
stos
add
push
movsb
add
jo
mov
js
cmp
movsl
dec
inc
pop
js
insb
jo
pop
push
inc
or
leave
mov
je
and
test
cltd
rcrb
jo
les
and
pop
push
push
pop
cmp
push
mov
sbbl
xor
add
lods
mov
cmp
xchg
push
jb
enter
dec
pop
inc
sbb
inc
add
adc
push
jo
push
sub
mov
push
fiaddl
mov
adc
sub
push
popa
outsb
inc
dec
push
das
dec
cwtl
dec
or
popa
inc
jp
or
cltd
fbstp
mov
pop
sbb
sub
cmp
push
dec
dec
inc
add
sub
insb
dec
dec
add
adc
adc
fs
hlt
push
dec
add
test
orl
dec
push
rorl
mov
push
es
jne
push
and
inc
mov
adc
subl
cli
dec
pusha
adc
jp
js
fsubl
add
or
pusha
cmp
jb
push
add
into
into
xchg
mov
mov
cmpsb
incl
imul
nop
pop
mov
or
add
aam
jmp
les
add
or
clc
dec
xor
jecxz
add
inc
jo
loop
je
mov
add
dec
es
sub
add
addl
dec
pop
lret
add
add
adc
and
hlt
and
pop
es
sub
cltd
and
xchg
jo
into
sarb
or
cli
jp
inc
sbb
fsubs
rorl
mov
inc
and
pop
clc
add
rcl
bound
mov
push
in
fs
push
pop
pop
les
push
xchg
repnz
dec
or
push
cmpsl
jne
and
dec
sbb
dec
and
inc
sub
adc
inc
outsb
add
inc
or
insb
out
mov
jns
xchg
enter
aaa
es
ss
add
pusha
add
clc
in
in
or
popa
xchg
xlat
pop
or
cmp
push
add
inc
lock
mov
xor
shlb
xor
test
and
sbb
xor
push
and
fs
lcall
jecxz
add
and
bnd
or
ret
sbb
mov
js
mov
loope
sbb
add
shr
jp
sub
pop
push
sbb
add
jns
push
ret
js
xchg
adc
push
nop
add
and
add
sbb
ds
xor
xor
and
shlb
jl
ret
and
dec
fs
loop
pop
andb
pusha
sub
sub
movsl
and
add
ds
pop
add
pusha
subb
fdivl
pop
push
xchg
sbbb
xchg
fiadds
jns
cmc
sbb
popa
jl
test
xchg
fcoms
mov
sub
hlt
adc
cmp
inc
and
xchg
push
je
sub
push
add
ds
push
pop
mov
sub
or
pop
repnz
add
fcomp
sahf
ss
xor
mov
add
pusha
inc
sbb
pusha
test
pusha
and
xor
pusha
lret
cmc
xchg
lock
xchg
in
mov
lcall
and
push
shrb
xchg
jo
adc
push
inc
dec
lcall
or
xchg
stos
ret
xchg
and
sbb
stos
xchg
xor
inc
aad
lret
sub
or
xor
or
push
push
add
mov
or
cs
out
add
jmp
cmpsl
ja
and
sub
lret
dec
loopne
xchg
cmc
pusha
gs
pop
jns
loopne
leave
and
inc
data16
lcallw
dec
or
adc
fiaddl
jo
jbe
jl
xchg
test
adcl
adc
jnp
outsb
jle
das
sbb
dec
cltd
enter
imul
sub
jmp
sub
mov
xor
js
mov
js
les
push
inc
and
bound
lock
cmp
into
dec
enter
dec
mov
sbb
lret
sub
andb
push
clc
push
xchg
movsb
sbb
call
sbb
xchg
push
outsb
jo
adc
or
pop
add
add
fs
insb
inc
xchg
push
push
dec
fidivl
inc
sub
int3
mov
or
add
mov
inc
xchg
add
add
loope
sarb
adc
sbb
clc
cmp
mov
xor
sbb
push
pop
mov
dec
adc
add
fs
dec
leave
cmp
xchg
adc
sbb
add
mov
push
je
push
xorb
xor
out
cmc
xchg
dec
mov
mov
pop
sahf
or
inc
xchg
dec
add
les
gs
or
xchg
gs
insl
sbb
fisubs
and
pop
cltd
test
adc
adc
xor
dec
lcall
negb
push
push
hlt
addb
inc
xchg
popf
dec
test
jp
rcr
sbb
lcall
mov
xchg
xchg
dec
imul
cmp
inc
jo
dec
sbb
data16
or
adc
push
and
xor
sub
push
mov
push
test
jo
es
dec
sbb
cmpsb
sub
sub
cltd
lcall
add
dec
push
xor
add
xchg
xor
repnz
xchg
loopne
call
sub
lds
lods
push
and
push
mov
hlt
add
inc
xor
sub
sub
xchg
xchg
lods
mov
pslld
cmpsb
je
add
sbb
sbb
cmpsl
pusha
add
movsl
pusha
in
mov
loopne
jbe
in
dec
dec
push
fisubl
push
mov
xchg
imulb
add
cld
jl
inc
inc
mov
ljmp
test
xchg
leave
push
xor
rcl
les
mov
enter
mov
ss
sbb
push
push
cs
faddl
jge
sub
loope
lret
inc
or
mov
test
cli
inc
add
adc
or
sub
lret
push
ljmp
add
sbb
leave
clc
jl
addb
xor
adc
push
rorb
xor
dec
fcomps
int3
add
cmpsl
xchg
add
movsb
fisubl
dec
bswap
cs
nop
add
movsb
xchg
xchg
xchg
mov
adc
sub
pop
cmpsb
data16
test
test
push
mov
xchg
mov
popf
push
and
push
enter
xor
sub
xchg
testb
adcl
push
cmp
test
out
mov
push
rorb
nop
inc
movb
xor
jo
add
fs
clc
xchg
pop
lea
adc
add
mov
shlb
mov
mov
xchg
cmp
loop
add
push
shlb
inc
shlb
jbe
inc
pop
add
pop
or
pusha
test
jle
sahf
adc
ret
dec
adc
adc
adc
sbb
add
inc
adcb
je
xor
cmp
pop
adc
inc
insb
sub
mov
or
push
sahf
adc
jo
dec
jo
or
push
push
mov
jbe
mov
cli
lret
test
clc
add
xor
sub
pushf
pusha
sbb
push
or
xor
fdivs
nop
sub
sub
out
fmuls
in
adc
out
mov
andl
bound
cvtdq2ps
fs
cld
inc
arpl
cmp
push
mov
adc
add
xor
and
or
sbb
pushf
jl
insb
sarb
xor
adc
adc
rclb
cmp
dec
or
jecxz
dec
push
cmp
mov
test
cmp
pusha
inc
mov
clc
fimull
push
adc
outsb
or
dec
adc
bound
jp
inc
ret
sahf
hlt
adc
inc
add
and
add
mov
mov
lock
adc
adc
insb
mov
add
mov
add
lcall
cli
sub
xor
test
sub
fsubl
sar
mov
bound
or
pushl
xor
cs
dec
pop
mov
sub
sbb
push
jl
aad
nop
cmp
imul
inc
sahf
cmp
in
and
or
scas
fildll
es
jns
test
subb
inc
pusha
inc
mov
push
add
push
inc
dec
stos
mov
adc
orb
loopne
add
dec
loope
xchg
pusha
adc
add
fisubl
dec
js
and
xchg
lock
add
enter
pop
data16
sbb
fcmovne
mov
out
or
aam
push
add
test
loop
shl
out
es
and
push
es
imul
pop
lret
test
xor
fisubrl
lods
sbb
cli
mov
ret
sbb
add
mov
fs
repnz
inc
and
mov
xchg
testb
jbe
xchg
ret
pushf
jp
mov
mov
dec
and
js
dec
ljmp
jae
mov
sbb
and
test
sarl
jp
fs
mov
sbb
xchg
dec
or
out
sub
xor
push
into
sub
add
pop
cld
xchg
adcl
test
mov
inc
xor
add
add
lods
push
nop
and
mov
dec
cmc
insb
jo
sub
push
push
andb
dec
xor
shrb
rolb
adc
sbb
or
jb
loop
ds
movsb
and
cs
insb
mov
test
pop
out
pop
inc
xor
pop
xchg
xchg
stos
or
xor
sub
pusha
jbe
or
add
adcl
add
dec
adc
or
sbb
stos
cmp
xchg
hlt
push
xor
cmc
test
cli
add
add
test
setno
aam
sbb
test
andl
addr16
push
rorb
mov
loope
push
sbbb
xchg
adc
pop
call
and
adc
or
xchg
fldcw
push
adc
sbb
mov
add
or
popa
push
push
sbb
jp
fiadds
fs
add
cmc
data16
ret
cmp
sbbl
jo
cmpsb
mov
mov
in
repnz
pop
aad
inc
xorb
sub
add
adc
pop
in
sub
sbb
test
mov
mov
fs
subb
inc
ret
testl
in
sub
movsl
and
loopne
sbb
pop
es
lret
gs
sbb
push
mov
push
pusha
test
push
pop
sub
mov
or
add
out
jb
movsl
movsb
adc
cmpsb
nop
xor
add
push
mov
int3
int3
push
mov
mov
dec
aam
cmp
pusha
repnz
fcoml
ljmp
mov
inc
popf
inc
push
lret
inc
aam
in
or
pop
xchg
fdivl
mov
inc
jo
jb
test
or
or
add
nop
pop
cli
inc
and
adc
push
and
lock
mov
shll
adcl
dec
dec
or
cli
movb
mov
enter
insl
mov
cmc
xchg
pop
adc
mov
cmp
je
scas
cs
or
sub
sub
jns
leave
sub
in
push
mov
mov
rolb
jle
cmp
in
xchg
inc
xor
out
or
jne
daa
int3
in
and
add
add
cmp
or
loop
dec
enter
sub
ret
fs
and
scas
pop
dec
xor
lods
xchg
ds
mov
shrb
jae
sub
pop
inc
and
push
xchg
outsl
cmp
aad
jmp
fs
sub
add
cmp
push
inc
jle
js,pn
inc
sub
push
out
js
loopne
dec
jb
lods
adc
push
daa
and
cmc
test
mov
js
mov
sbb
cwtl
cli
mov
int3
or
dec
loope
int3
mov
icebp
mov
in
cmpsl
jno
gs
push
insl
fsubl
sub
gs
push
mov
es
or
mov
lock
pop
push
js
xor
mov
inc
pop
sahf
ljmp
fistps
push
fidivrs
and
mov
dec
xlat
pop
sbbw
es
add
or
popa
jo
adc
shlb
pop
mov
mov
push
dec
lock
cs
add
inc
inc
xor
ljmp
add
mov
push
js
mov
xor
add
test
add
adc
add
mov
xor
xor
test
and
add
and
pop
mov
lock
cwtl
or
cli
sbb
nop
cmp
mov
mov
mov
aam
out
xchg
push
adc
push
cmp
pop
inc
xor
add
loopne
inc
std
fwait
and
sahf
push
add
inc
inc
dec
dec
add
call
cwtl
push
enter
jo
push
sbb
and
mov
test
les
jle
mov
sub
cmc
movsl
push
jnp
adc
add
adc
add
dec
cmp
pop
push
inc
push
xor
xchg
and
xor
jbe
ss
rcrb
insb
cs
push
lahf
ss
stos
dec
push
xchg
adcb
jl
cwtl
movsl
or
loopne
mov
loop
or
push
xchg
movsl
imul
scas
js
cmc
pop
push
xchg
aam
adc
mov
leave
loope
push
callw
dec
pusha
adc
sbbl
push
lods
jp
lock
insl
pusha
pop
mov
mov
inc
outsb
adc
test
add
xor
sub
cwtl
int3
mov
dec
and
sbb
and
movsb
xchg
cmpsl
sub
aam
insb
and
or
test
add
imul
dec
movsb
xor
es
loope
fsubs
shlb
push
push
cmpb
sub
ret
mov
fistpll
dec
xchg
jo
je
cmpsb
adc
sbb
mov
or
push
mov
xchg
cmp
mov
pusha
lock
js
xor
pusha
cli
subb
dec
pop
mov
push
test
mov
popa
nop
sbb
or
adc
outsb
mov
add
push
cmp
sbb
ret
push
pop
adc
or
push
mov
and
dec
outsb
jne
imul
add
push
cli
inc
shrb
nop
inc
insl
pushf
sub
adc
adc
mov
or
cltd
pop
sbb
cs
adc
add
loop
jle
mov
mov
clc
cmpsl
cmpsb
scas
pusha
push
add
xor
jne
mov
add
mov
adc
sbb
push
and
sarb
pop
pop
and
jns
sub
or
fdivrl
pushf
pop
bound
fldcw
add
rcrb
lea
lea
insl
sbb
shrb
rcll
xchg
test
sub
sbbb
push
out
stos
push
push
jo
xchg
gs
mov
jecxz
sbbb
pop
add
fs
sub
jbe,pn
inc
add
or
cli
cmp
mov
out
and
mov
sbb
jb
es
lret
ljmp
fidivl
test
xor
dec
lcall
xor
xchg
inc
pop
pop
test
dec
cld
outsl
fdivr
sub
mov
pusha
inc
inc
cmp
lock
add
cmpsb
mov
repnz
les
mov
ss
add
stos
sub
lods
movb
hlt
push
ss
xchg
outsl
push
cli
pushf
jle
pop
inc
cmpsb
push
jl
xor
fcoml
sbb
inc
sub
arpl
shrb
push
cmp
add
movsb
add
push
adc
adcb
bound
and
mov
push
mov
and
xchg
xchg
cmpsb
cltd
fs
outsb
dec
or
mov
fisubrl
mov
push
and
rcl
adc
out
cmp
sub
push
mov
adc
xor
mov
lea
pop
add
into
data16
adc
xchg
push
sbb
and
insb
test
add
mov
test
pop
cmp
test
cmp
shlb
flds
adc
cmpl
adc
push
rolb
and
push
push
dec
les
ret
add
addb
or
add
enter
push
je
test
inc
das
rorb
xchg
insl
jl
sub
nop
insl
stos
js
push
pop
aas
lods
or
or
dec
dec
lods
gs
xor
push
inc
dec
ret
neg
sbb
add
test
mov
adc
ss
aam
push
testb
and
inc
add
add
push
xchg
adc
das
inc
lock
sub
mov
mov
push
testb
or
fs
cld
sub
push
xor
sbb
lods
aad
and
dec
nop
cmp
or
pushf
push
pop
test
push
sbb
xchg
sbb
adc
inc
dec
mov
mov
adc
andl
loop
in
cmc
mov
lret
ds
add
bound
add
xorl
jp
or
jnp
jp
xchg
xchg
or
pusha
push
inc
xor
jne
inc
cwtl
lock
dec
ss
hlt
mov
cs
cltd
cmp
mov
mov
js
adc
ret
and
jle
add
jbe
dec
dec
or
xchg
ljmp
cmp
push
xchg
insb
in
adc
insb
push
adc
loope
js
dec
shrb
fisubs
sub
adc
fiadds
int3
pusha
mov
push
jbe
jg
xchg
inc
fisubs
repnz
dec
and
xor
mov
test
shlb
imul
adc
es
mov
loope
jno
pushf
or
mov
jle
cli
lret
mov
mov
aad
dec
cmp
pusha
push
and
add
movsb
fsubl
inc
add
cs
xor
call
enter
orb
mov
sub
cli
mov
nop
mov
cltd
fadd
in
fcmove
insb
dec
mov
in
or
mov
cwtl
rolb
notb
cwtl
dec
out
fistl
js
mov
add
xchg
add
leave
mov
push
add
pop
mov
mov
adc
pop
dec
sbb
mov
call
lcall
out
xor
adc
movb
or
inc
xor
dec
mov
insb
or
mov
sbb
add
add
mov
or
add
es
pusha
mov
jle
mov
test
jle
in
xor
jo
pop
lcall
add
and
or
adc
and
jmp
or
shll
and
insb
cltd
xchg
stos
nop
outsb
sbb
mov
inc
push
add
pop
rcrb
push
xor
sahf
jle
or
add
and
dec
punpckhbw
ljmp
inc
mov
in
loop
cmp
cmp
or
sub
sub
mov
or
mov
lret
sub
stos
lods
and
add
imul
and
test
dec
daa
mov
sahf
sbb
js
movsb
mov
xchg
mov
xor
dec
sub
hlt
sub
cmpsb
add
adc
mov
xchg
ficoms
orb
jb
mov
cs
imulb
xchg
xchg
fwait
adc
callw
mov
fs
and
sbb
cwtl
push
add
test
pop
and
push
jl
into
dec
rcl
out
adc
dec
inc
add
mov
pusha
loop
test
clc
xchg
gs
sbb
add
and
xor
test
jo
lods
sub
dec
loopne
xor
orl
sbb
xchg
nop
mov
rolb
sub
and
mov
xchg
xchg
mov
sbb
inc
call
rol
or
adcl
orb
dec
repnz
or
addb
sbb
enter
dec
fs
mov
jmp
push
fdivs
je
rcrb
xchg
add
test
push
std
cld
clc
cmp
sub
and
ret
dec
aam
pop
js
pop
cltd
dec
test
add
loopne
gs
dec
stos
loope
or
les
mov
test
xchg
or
mov
int3
jo
dec
xchg
inc
sub
je
fiadds
lods
leave
lods
and
mov
adc
cltd
mov
movsb
inc
adc
movsb
jbe
mov
repnz
shrb
insb
orb
int
xchg
xchg
gs
insl
popf
fadds
adc
ret
add
push
add
mov
add
dec
outsb
lcall
push
pop
cs
mov
add
and
push
and
in
dec
mov
js
sbbb
das
orb
popa
sub
push
stos
and
adc
test
push
andl
xchg
mov
add
or
mov
adc
push
dec
and
ret
into
xor
dec
les
ret
data16
dec
lcall
adc
les
rorb
cmp
jo
and
adc
push
push
xchg
dec
loop
mov
sbb
xchg
insb
or
dec
movsl
xor
mov
cmp
jp
mov
dec
sbb
xchg
sahf
mov
xor
xchg
cli
lock
push
mov
cli
xor
mov
dec
ds
or
mov
add
jo
adc
sahf
test
inc
mov
cltd
or
dec
sub
addb
sbb
push
or
mov
push
inc
jl
mov
mov
sub
xchg
and
xor
xor
and
xchg
xor
pusha
push
add
dec
js
rcrl
int3
mov
loopne
and
xor
mov
xor
shr
or
add
aam
les
sub
sbb
aad
add
movsb
arpl
xchg
xchg
add
loopne
ret
sahf
aam
xchg
or
lcall
fcomps
fmull
inc
mov
jae
mov
mov
xor
mov
sahf
ret
xor
cmp
add
cmp
cmp
orb
xchg
xor
jo
and
outsb
ds
sbb
push
pop
shll
xchg
push
cmp
or
xchg
mov
out
fwait
dec
jl
inc
add
jo
mov
push
out
outsl
adc
push
mov
mov
pushf
sub
pushf
mov
and
inc
push
fsubs
xorl
mov
inc
sub
push
out
clc
inc
arpl
incl
insl
cmpsb
mov
xchg
sub
push
xchg
out
push
pop
jo
pop
inc
adc
ret
xor
shlb
adc
leave
or
and
int
cmp
or
adc
incb
adc
andb
mov
dec
pop
cmp
push
or
xchg
xor
add
or
mov
mov
cmpl
add
cmp
pop
mov
xchg
leave
and
lods
xchg
mov
dec
ret
add
inc
icebp
adc
in
mov
rorb
loope
clc
inc
or
ret
ljmp
bound
and
sbb
lret
test
ret
xchg
mov
insb
shlb
jo
xor
mov
push
bound
inc
dec
lods
xorl
jne
mov
test
int3
sub
fsubrl
and
cmp
pushf
adc
mov
jb
sub
dec
pusha
push
and
adc
push
inc
xlat
adc
lods
xorl
add
xor
add
test
or
xor
jb
cmp
adc
push
int3
sub
xchg
pop
push
rcrb
sub
ljmp
test
jo
popa
xchg
and
mov
inc
sub
and
xorb
mov
xchg
or
push
dec
rolb
sbb
xor
or
pop
cs
mov
dec
ds
or
add
and
addb
push
test
push
xor
cs
adcb
mov
ret
mov
mov
sub
dec
push
or
jl
push
ret
repnz
xorl
and
cs
mov
int3
pusha
jbe
jne,pn
mov
fcomps
adc
mov
pop
out
push
mov
push
xchg
pop
mov
das
ret
pop
mov
sbb
andb
cwtl
mov
movsb
adc
sarl
dec
sub
xor
xchg
add
data16
mov
popf
xor
adc
adc
add
sbb
or
adc
add
add
push
xor
and
xchg
out
test
mov
xor
into
adc
adc
dec
adc
adc
pop
push
notb
xchg
xchg
push
and
cltd
or
in
pop
add
adc
or
inc
push
mov
or
mov
sbb
pop
rclb
sbb
outsb
cmp
arpl
cmpsb
inc
mov
dec
lret
add
xor
xchg
adcb
cld
loopne
outsl
pop
adc
incl
adc
cltd
iret
out
mov
cmp
mov
ret
les
mov
xor
ss
pop
mov
test
adc
out
and
int
xchg
add
or
or
cmp
add
ret
and
sub
add
je
jbe
add
xchg
int3
movb
movsb
out
mov
mov
mov
adc
test
push
pusha
les
jbe
adc
pop
adc
inc
pop
dec
or
cmp
lods
cs
adc
cmp
lcall
mov
cmpsb
add
adc
shlb
insb
xor
mov
insl
add
xchg
jne
add
sbbl
popf
add
ljmp
push
test
es
aam
or
into
jp
and
movsb
and
xchg
and
or
add
dec
sbb
aam
push
xor
cmp
int
loope
sbb
add
mov
mov
add
cld
lret
add
ljmp
shlb
mov
pop
cs
dec
dec
test
sahf
loopne
sub
xchg
nop
loop
pusha
xor
cmp
mov
fwait
in
sub
int3
test
or
test
mov
outsb
sub
loop
arpl
mov
sbb
sbbb
data16
ret
and
fmulp
adcb
jp
xor
out
loope
xchg
pop
push
test
cwtl
mov
dec
sbbb
xchg
push
push
mov
test
add
and
lret
push
push
daa
push
dec
xor
sbbb
test
cwtl
je
addl
lods
es
pusha
adc
mov
jle
nop
sbb
daa
and
mov
js
sbb
xchg
jo
push
pop
mov
jns
sbb
sahf
add
int3
ss
cmp
mov
sbb
add
sbb
push
js
sbb
adc
js
mov
pop
sbb
mov
sub
add
aaa
pusha
xchg
fidivs
or
loopne
xchg
sub
shrb
cmc
pop
scas
test
and
lods
or
mov
xor
imul
mov
sbb
test
lods
lods
or
dec
inc
mov
dec
push
loopne
jns
xor
ds
mov
mov
jb
sbb
inc
inc
adc
and
cld
dec
sti
cmp
loope
jmp
pop
jp
mov
mov
in
aaa
or
dec
add
fs
fmuls
and
adc
nop
xchg
dec
dec
mov
mov
xchg
scas
xchg
jle
lock
sar
out
add
into
repnz
or
insb
dec
mov
cmpsb
mov
mov
adc
adc
insb
xchg
fsts
test
sub
cmpsb
jb
inc
xor
out
pushf
push
sbb
inc
sub
push
dec
sub
fmuls
or
cmc
test
push
xchg
jb
push
enter
popa
mov
lcall
xor
mov
in
and
loop
test
pop
or
adc
sbb
jo
inc
sbb
inc
mov
add
in
jle
loopne
leave
dec
out
pop
push
add
lcall
fiaddl
cltd
jne
or
dec
rcr
cmovno
imul
xor
call
lods
push
push
xor
mov
push
or
je
stos
push
inc
test
ret
test
mov
icebp
adc
push
sarb
mov
and
movb
add
mov
xor
and
ficoml
xchg
ret
lret
and
and
xchg
cmp
adc
je
jo
cmp
or
or
pop
mov
hlt
sub
sub
sbb
mov
and
adc
adc
or
mov
jo
jle
sub
mov
cmp
nop
push
cmp
shlb
adcb
lahf
cmp
loopne
xchg
lock
loop
add
adc
sbbb
mov
scas
mov
push
es
scas
ficoms
gs
orb
fisttps
cmp
popa
cs
or
jbe
push
mov
adc
jo
lods
add
sbb
jo
xchg
lock
mov
dec
and
cmp
dec
xchg
dec
add
inc
push
cmp
xorb
xor
inc
test
les
lock
insl
cwtl
cmpl
xchg
popa
ss
cmp
cltd
push
xchg
adc
push
and
push
mov
jb
les
jb
mov
mov
xor
push
sub
push
clc
add
and
push
add
adc
cmpl
add
adc
pusha
ljmp
jbe
loop
aam
adc
lea
clc
push
loop
popa
aam
and
xor
adc
scas
push
cmp
mov
add
mov
outsb
dec
rcrl
rol
adc
test
xchg
mov
mov
outsb
or
jbe
push
and
cmc
imul
add
loop
push
cwtd
add
js
lods
xchg
mov
mov
push
sub
and
lds
test
push
or
out
fsubrs
push
lret
or
ror
rolb
mov
les
cmpsb
xor
loope
hlt
andb
mov
jmp
adc
out
ficoms
dec
jo
test
sub
pushf
add
and
shrl
dec
mov
dec
xor
push
or
enter
adc
mov
nop
je
mov
cld
mov
cmpb
push
xchg
ds
and
adcl
or
dec
adc
push
rcl
adc
cs
out
pop
push
xchg
fisubl
mov
or
pop
sbb
sub
mov
ret
adc
cmp
adcb
test
cmp
ret
xor
xchg
or
inc
sub
xchg
lcall
insl
jle
mov
dec
add
push
pop
leave
test
cmpsb
js
xchg
push
jb
and
xor
ds
add
xchg
cltd
sbb
xchg
dec
rclb
mov
mov
xor
ret
add
aaa
adc
inc
adc
sub
xchg
add
test
add
rcrb
fs
movsb
addr16
add
xor
adc
add
enter
dec
mov
movsb
xor
subb
mov
cmp
add
push
dec
xchg
pop
arpl
popa
sarb
xchg
dec
adc
push
and
movsl
push
sbb
add
xchg
inc
sbb
push
inc
cmpsb
and
inc
dec
sbb
sub
dec
pop
xchg
pop
sub
mov
nop
or
aam
and
sub
sub
or
xchg
dec
cwtl
neg
xor
movsl
xor
push
jl
movsb
ret
js
orl
sbb
xor
or
les
sub
dec
roll
in
add
push
inc
pop
pop
sub
mov
imul
cmp
and
mov
dec
loopne
insb
add
add
cmpsb
xor
inc
add
inc
subb
and
jg
das
gs
push
roll
sub
xchg
les
je
test
mov
test
or
in
xor
jb
das
mov
addr16
stos
inc
fs
loope
pop
and
sub
dec
dec
cmpsb
mov
cmp
nop
inc
push
mov
and
push
xor
das
leave
mov
xlat
pop
and
data16
icebp
add
add
cmp
bound
jmp
jb
test
inc
sub
xor
dec
dec
lret
ljmp
mov
movsb
mov
add
mov
lret
and
mov
in
cmp
xor
mov
cwtl
pop
lcall
mov
add
dec
add
and
or
mov
pop
cmp
mov
popa
test
pop
dec
scas
int3
xor
popa
adc
or
movsl
add
sbbb
pusha
cwtl
popa
or
and
mov
sub
imul
shl
pop
cmpsb
and
jo
mov
es
xchg
xchg
and
jb
xor
inc
sub
data16
and
int3
sbb
push
clc
fcmovbe
pop
inc
mov
xor
addb
xor
mov
fbld
xor
or
adc
out
dec
or
add
and
or
loopne
or
push
fs
es
adc
adc
adc
pop
push
or
jb
push
push
int3
scas
fadd
push
ret
call
lods
push
or
test
push
cmp
outsb
imul
xchg
pop
cltd
nop
sbb
arpl
or
jae
mov
dec
popa
insb
or
dec
mov
or
mov
mov
xor
stos
adc
inc
lods
push
push
in
gs
and
push
mov
mov
jl
inc
jbe
ds
icebp
pop
sbb
notb
sbb
call
inc
popa
pop
shll
lods
xlat
fisttpl
nop
add
les
mov
push
add
cmpsb
mov
xor
inc
push
mov
div
xor
xor
subb
pop
test
or
jp
data16
cmp
inc
add
fcmovb
scas
xor
jge
out
test
inc
dec
inc
sbb
add
sub
sbb
sub
addl
pop
dec
cwtl
mov
int3
or
sbb
or
pop
jb
push
inc
and
scas
cmpsl
and
sahf
jp
call
jo
adc
or
repnz
bound
into
lret
xchg
inc
adc
mov
lahf
daa
fistl
push
jb
gs
inc
cmp
fs
insb
add
cld
push
mov
sbb
mov
cld
xchg
test
or
mov
les
fisubs
xchg
test
fsub
or
or
loopne
xor
test
movl
sub
dec
push
add
inc
aam
push
xchg
sub
mov
call
orl
xchg
lret
lret
mov
push
cmp
repnz
ljmp
cmpsb
push
xchg
push
dec
in
loopne
int3
rclb
push
jns
sub
scas
and
sbb
push
mov
jecxz
or
mov
add
fs
and
or
xchg
movsl
mov
and
pop
adc
add
mov
stos
inc
xor
sbb
xor
mov
inc
nop
dec
sub
das
push
push
add
xchg
mov
fadd
inc
cs
pusha
dec
adc
add
dec
rorb
cmc
cmc
fcomps
or
out
push
and
and
daa
test
cmp
inc
add
sbb
sub
and
sbb
les
adc
xor
inc
and
xchg
and
and
out
pusha
add
and
aam
inc
and
xor
xchg
int3
and
mov
test
ds
sbb
out
dec
insw
push
sbb
pop
repnz
lock
jo
gs
inc
pop
cmc
adc
es
xor
and
js
lcall
shlb
mov
int3
je
sbb
and
movsb
add
add
into
pusha
mov
dec
jb
cmpsb
mov
into
mov
xchg
lcall
test
or
adc
bound
xor
js
pop
test
jp
sbb
or
pusha
pop
sbb
ret
jle
test
or
ss
adc
adc
fs
or
mov
sbb
sub
sbb
push
gs
insb
pop
jo
bound
mov
movsl
cmp
adc
push
push
lcall
mov
call
pop
mov
mov
jb
sbb
pushf
ret
dec
mov
add
pop
and
in
dec
pushf
rolb
addr16
scas
hlt
dec
bound
jns
xchg
popa
add
pop
mov
mov
cmpsb
jne
xchg
inc
test
mov
or
leave
clc
push
jo
sub
inc
inc
dec
pop
push
xor
test
cs
mov
arpl
adcl
sbb
mov
push
cltd
mov
cs
scas
xorb
pop
push
fsubs
mov
adc
dec
orb
ret
or
sub
cwtl
push
subb
xchg
hlt
xchg
dec
push
dec
inc
pop
dec
inc
loope
andb
movb
insl
adc
or
loope
adc
cltd
jmp
xor
xchg
mov
push
jo
insb
or
xor
lods
sub
lcall
cmpsb
ss
jno
add
outsb
sbb
cmpsb
je
xor
popa
dec
add
arpl
fsubrp
popa
add
sahf
jo
xchg
subb
cltd
fs
mov
sub
test
test
inc
push
adc
xor
stos
adc
pop
xlat
insb
jns
mov
imul
cs
icebp
fadd
xor
insl
push
subl
cld
dec
leave
rolb
aam
pop
test
bound
test
cmpsl
test
xchg
mov
adc
pusha
xor
xchg
pop
push
mov
jb
movsb
loop
xchg
roll
mov
test
lret
or
push
push
xchg
scas
dec
jne
ret
xor
int3
sbb
sub
fmuls
insb
sbb
or
aad
add
xchg
ds
or
mov
sub
out
jo
inc
cwtl
sbb
data16
mov
aam
cli
adc
mov
xchg
dec
andnps
mov
and
outsb
sbb
push
adc
ret
pop
mov
mov
pop
xorl
outsl
adc
int3
sbb
int3
jne
cs
mov
xchg
mov
sub
add
sbb
lcall
and
sbb
lock
xchg
adc
pop
pushf
aad
push
test
fsubs
xchg
pop
popa
cs
into
pop
mov
ds
or
inc
xor
shr
push
push
adc
or
dec
adc
imul
cmp
repnz
shlb
sub
rcrb
movsl
add
aad
mov
mov
push
cs
or
xchg
cwtl
xor
mov
push
movsb
fcoml
mov
pushf
add
push
ljmp
je
cmp
push
test
xchg
imulb
or
or
pop
adc
cli
lods
insb
sbb
ror
adc
in
aam
adc
mul
inc
inc
je
test
inc
out
lret
daa
add
jp
enter
or
mov
mov
fidivl
add
pop
and
mov
fdivl
dec
push
jecxz
aad
or
das
mov
mov
inc
xor
adcb
xor
test
incb
ret
xchg
fs
loopne
dec
lock
dec
mov
xchg
fsubl
out
jo
popa
xorb
jno
or
cltd
or
sub
sub
lret
xor
sbbb
mov
cmc
adc
and
adc
push
bound
xor
adc
data16
pop
add
xchg
pop
js
and
iret
xchg
xchg
add
lods
imul
jo
dec
inc
or
mov
pushf
jb
dec
enter
ret
dec
dec
add
push
int3
mov
adc
test
fcompl
sbb
hlt
addr16
movsl
lock
or
notb
push
dec
mov
pop
mov
cmpsb
push
push
into
and
sbb
out
divb
leave
js
pop
fbld
sbb
ljmp
xchg
and
sub
lret
movsb
gs
sbb
lcall
ds
leave
dec
sbb
sahf
call
sbb
test
and
scas
mov
loopne
and
add
adc
fisubrl
xchg
sub
xchg
out
mov
xor
test
xor
adc
lcall
cmp
jp
or
or
xor
mov
add
adc
push
add
js
test
xchg
dec
notb
int3
adc
xor
dec
mov
xchg
lret
cmpsb
xchg
mov
push
add
cmpsb
cli
cmp
cltd
mov
test
cld
rorb
add
mov
mov
pop
jl
sahf
cmp
fimull
xchg
aam
push
ret
movb
ss
fadd
nop
and
push
cmpsl
mov
imul
ret
movsb
push
loope
hlt
mov
mov
ret
in
and
or
mov
popa
inc
roll
add
add
dec
mov
mov
ret
mov
rcl
xchg
lock
inc
rcrl
jb
xchg
cs
mov
out
sub
ret
add
mov
mov
sub
add
cmc
loope
es
insb
insl
inc
add
pop
ljmp
and
adcl
adc
and
mov
dec
mov
or
xchg
or
nop
cmp
pusha
daa
or
xchg
adc
das
lret
or
cwtl
lret
mov
add
jno
sub
sub
sub
add
int3
push
ss
push
cli
dec
les
xchg
adc
lret
sbbl
inc
pushw
loop
test
cmp
mov
mov
stos
jo
or
dec
ss
je
and
hlt
push
scas
sub
jo
mov
sbb
inc
mov
xchg
push
pop
mov
jo
push
xchg
xor
clc
rcr
and
js
push
pop
and
ss
add
xor
dec
sub
cli
jne
mov
add
push
into
or
and
adc
add
jecxz
inc
dec
jp
mov
rol
xor
xor
bound
sbb
jns
push
cmpsb
mov
cmp
cmpsb
push
loopne
xchg
or
mov
pop
dec
clc
adc
mov
jp
bound
xor
inc
adc
imul
out
push
and
dec
fs
xchg
inc
push
cmp
shll
add
loopne
cmp
pop
inc
or
dec
shrb
adc
push
xchg
dec
or
aam
push
stos
test
mov
shlb
or
fsub
das
adc
cmp
pop
in
sbb
pusha
dec
and
imul
mov
fwait
pop
push
jo
mov
inc
xchg
arpl
pusha
or
adc
xor
cmp
test
mov
inc
imul
dec
mov
jl
xorl
lods
lcall
bound
adc
push
les
orb
adc
ficomps
aam
and
xorb
sbbl
push
and
dec
rolb
addb
push
xor
cltd
adc
xor
mov
call
shlb
add
add
sbb
sub
paddq
faddl
push
dec
mov
popa
xchg
sahf
adc
in
mov
inc
popf
ret
or
les
push
xchg
andb
fadds
pop
dec
add
pop
cmp
arpl
inc
fcoml
addb
inc
cmp
add
mov
mov
or
pop
sub
mov
fadds
mov
inc
gs
cs
int3
rorb
fcmovbe
pusha
and
icebp
adc
sub
es
dec
push
cs
dec
mov
cs
popa
imul
out
fcoms
jle
inc
push
mov
pushf
cmpsb
cmpsb
jb
inc
push
sbb
sub
add
shlb
pop
pop
dec
popf
inc
jo
fisubrl
sbb
js
cmp
and
pop
inc
pop
pop
test
mov
mov
mov
jecxz
ret
or
loope
int3
lock
add
push
cli
arpl
or
nop
mov
add
xchg
xor
aaa
add
mov
andb
pusha
xchg
lods
push
pop
and
orb
pusha
fisubl
lret
jo
dec
pusha
and
je
lcall
push
ds
inc
push
inc
mov
jp
push
or
sub
and
and
cli
or
dec
push
xchg
shlb
add
mov
xchg
mov
and
or
out
shlb
es
and
inc
mov
insl
inc
jbe
movb
setns
in
xor
or
push
pop
xchg
adc
pop
sar
add
subb
adc
or
pop
rol
xchg
hlt
shl
push
xchg
xchg
ljmp
shl
or
xchg
add
into
rolb
ljmp
adc
mov
je
jle
lods
or
push
pop
fisubrl
test
outsb
add
ss
cmpb
es
sbb
fsub
mov
imul
addl
movsb
adc
mov
jbe
mov
lcall
mov
push
xchg
shlb
imul
add
adc
sub
push
adc
add
loop
fcoml
add
inc
push
sbb
dec
dec
xor
dec
ret
mov
mov
mov
js
bound
mov
add
add
loop
xor
fisubrs
mov
or
pop
push
imul
sub
movsl
and
or
or
push
pushf
add
adc
and
mov
lods
or
gs
dec
and
pusha
pop
rcrb
fdivrl
int3
adcb
test
shrb
push
cltd
mov
or
xor
sbb
add
sub
xorb
sbb
outsb
add
add
xchg
adcl
add
pop
mov
jo
rclb
insb
xchg
push
orb
or
pushf
push
shlb
fcomps
cltd
gs
pop
rolb
cs
push
jne
ret
add
fcmove
add
int3
lcall
push
mov
adc
mov
test
out
mov
adc
adc
sahf
cmpsb
out
mov
lods
adc
sbb
in
cld
inc
aam
stc
mov
loop
xchg
cmpsl
pushf
cmp
imul
or
push
push
pop
fadds
add
fs
push
adc
jo
orb
ret
cmpsb
xor
lock
mov
xchg
sbb
ret
mov
pop
ffreep
xor
xchg
mov
add
fs
pop
enter
cmp
mov
xchg
push
push
xor
mov
add
adc
fisubl
rcl
outsb
or
inc
js
mov
inc
lods
adc
push
adc
and
pop
cmp
test
cltd
lret
push
mov
pusha
ret
sbb
addb
dec
or
xchg
insb
inc
fcoms
int3
add
or
fld
out
sbb
push
mov
int3
add
sbb
mov
push
and
dec
loope
push
sbb
nop
sub
ds
imul
dec
movsl
dec
xchg
sbb
or
xor
push
push
or
ds
adc
jp
cmp
cmpsb
stos
adc
push
es
rclb
divb
adc
pop
push
and
dec
hlt
mov
es
cwtl
insb
or
sub
movsb
mov
adc
ljmp
mov
push
shlb
push
adc
xor
push
orb
faddl
inc
push
and
test
int3
or
and
lods
les
and
push
nop
sbb
mov
fisubrl
xor
mov
aam
push
fs
push
pusha
cmpsb
cmpsb
xchg
ror
or
and
dec
or
or
xchg
lcall
xchg
ret
add
div
push
adc
and
and
or
int3
cmp
jae
sub
jp
sbb
xor
add
add
push
ret
dec
jle
push
pop
xchg
pop
clc
test
xchg
adc
mov
push
sbb
add
nop
loope
aam
nop
or
push
xchg
add
gs
dec
mov
lea
mov
add
and
add
jbe
mov
add
adc
dec
shlb
jbe
xor
dec
sub
lret
pushf
xchg
cmp
adc
scas
inc
mov
xchg
adc
xchg
mov
cwtl
push
fdivrs
and
or
sahf
enter
andl
repnz
xchg
adc
mov
in
or
cli
pop
mov
push
xor
push
movsl
xchg
mov
jne
aaa
adc
adc
cmpsb
push
jne
es
test
out
pop
pop
pusha
add
sub
jo
stos
push
push
inc
mov
push
adc
mov
jl
pop
add
add
dec
dec
cmc
and
and
sbb
xor
sub
or
loop
mov
mov
bound
hlt
int3
ss
addb
fs
dec
push
xor
jbe
mov
insb
pusha
enter
jbe
push
xor
dec
testb
sub
push
and
add
es
sub
ret
test
adc
into
sub
xchg
cmp
jbe
aam
mov
adc
cmp
push
mov
add
mov
jl
les
sub
inc
loop
push
add
mov
push
dec
addb
jl
test
ret
lock
mov
in
out
inc
shl
mov
dec
subb
mov
mov
lods
call
sub
pop
inc
push
sub
ljmp
scas
jl
add
sub
int3
and
jo
sbb
sti
and
push
shlb
mov
mov
inc
ljmp
mov
mov
test
xchg
es
xor
pusha
call
sbb
jle
movsb
or
and
mov
dec
sub
sub
push
popa
push
mov
clc
or
mov
jb
xor
mov
and
xchg
rorb
andl
pop
test
inc
jecxz
adc
add
inc
and
sbb
push
fimull
ret
or
fcoms
inc
ret
in
pop
movsb
aam
mov
adc
jb
dec
push
dec
mov
mov
mov
push
popf
sbb
mov
xor
daa
sbb
cmp
xchg
fs
int3
mov
sbb
movsb
loopne
aam
mov
hlt
mov
adc
adc
or
sbb
arpl
sbb
mov
push
or
push
test
test
xor
fldpi
dec
push
sbb
int3
cwtl
push
cltd
pusha
and
mov
cmp
lcall
sub
aam
mov
push
cmp
fs
mov
xor
andb
ljmp
lret
dec
inc
lods
add
in
push
leave
xchg
and
push
cltd
ljmp
test
dec
push
or
pop
add
cld
mov
fdiv
jns
call
and
jmp
jp
mov
cmp
pushf
push
sar
dec
stos
or
mov
inc
push
inc
int3
cwtl
roll
loopne
lods
add
lret
jl
push
lret
add
add
dec
int
cwtl
lock
loopne
add
out
or
jae
sub
sbb
arpl
xor
push
imulb
int3
push
push
addl
push
inc
test
add
add
movsl
mov
js
push
jl
and
pop
jb
add
pop
jbe
clts
jmp
or
test
mov
lods
aam
aam
inc
dec
lods
push
imul
rorb
adc
add
pop
mov
data16
int3
adc
ret
mov
add
mov
push
mov
orb
aad
mov
dec
mov
aam
js
les
sbb
pusha
adc
mov
test
movsb
inc
pushf
adc
push
enter
fcoml
or
adc
jb
pusha
sbb
lock
jb
fbld
or
adc
shrl
inc
rol
and
adc
out
adc
dec
in
and
insb
repnz
enter
daa
sbb
in
xchg
adc
fiaddl
mov
sbb
jl
add
dec
push
dec
push
lcall
push
sub
fdivrl
test
movsl
mov
mov
nop
pop
loopne
daa
hlt
insl
imul
ret
jo
adcb
jo
and
ret
sub
in
fs
fimuls
mov
addl
mov
mov
inc
lea
xchg
mov
dec
cli
sahf
add
mov
mov
imul
mov
add
jle
dec
xchg
loopne
and
or
inc
mov
shll
fistpl
xchg
cmp
dec
pop
push
push
ss
adc
push
and
mov
daa
or
or
into
inc
xor
or
mov
call
adcl
shlb
add
adc
xor
add
push
mov
scas
xchg
rorb
cmp
and
xor
inc
inc
sbbb
add
push
rol
mov
pop
jo
mov
dec
test
jb
and
xor
xor
mov
jecxz
or
cltd
add
xor
lcall
add
sub
ljmp
mov
call
loopne
rcl
mov
cmp
xchg
push
outsb
fcoml
fldt
fs
insb
push
sub
dec
lret
cwtl
push
sbb
mov
cmc
scas
push
adc
sbb
jo
sbb
push
pop
ljmp
adc
cmp
add
add
push
inc
mov
and
loop
xor
adc
sbb
inc
xchg
in
cltd
cli
sbb
adc
add
les
push
push
ret
xor
test
xchg
sbb
nop
xchg
xchg
add
cmp
xchg
outsb
movsb
dec
ret
dec
cli
enter
pop
test
and
mov
sub
mov
daa
xor
pusha
xor
in
inc
cwtl
add
or
sbb
imul
add
xor
mov
jge
in
add
lea
or
or
push
push
daa
pop
push
sub
test
mov
jne
or
pop
push
in
adc
fsts
loopne
cmpsb
jb
push
dec
add
movsl
xchg
xor
sbb
sub
into
daa
mov
int
sub
xchg
mov
cmp
inc
and
adc
call
test
sbb
jecxz
mov
sbb
imulb
daa
and
fbstp
and
test
addl
mov
fs
sbb
xor
test
dec
sbb
dec
push
nop
mov
nop
inc
orb
xchg
mov
mov
sbb
pop
xchg
sbb
nop
into
loope
adc
adc
test
pop
pop
xchg
addl
or
sahf
clc
cwtl
and
push
mov
inc
and
lods
push
sahf
or
cltd
or
enter
pop
sub
rclb
adcb
aam
lods
mov
mov
cli
xor
addb
popa
imul
mov
pusha
movsb
xchg
sub
loopne
sub
and
add
cmp
jle
mov
lock
lock
scas
dec
and
adc
jo
push
hlt
xchg
loop
out
push
pusha
dec
dec
mov
adcl
popa
push
ret
and
testb
push
inc
add
nop
test
fsub
or
or
loop
and
dec
push
push
arpl
or
inc
add
sahf
lcall
gs
adc
loop
mov
nop
dec
and
sbb
mov
lret
and
dec
xor
xor
test
add
jl
adc
add
jnp
xor
mov
dec
jle
mov
test
add
clc
mov
call
dec
cli
push
or
stos
mov
push
dec
mov
inc
dec
xor
mov
ficomps
dec
or
mov
xchg
mov
js
sbb
dec
push
inc
out
loopne
add
fisubs
and
nop
mov
or
pop
fwait
shrb
loopne
dec
orb
or
push
xor
call
push
aad
test
leave
ret
mov
lea
push
push
and
mov
fs
adc
adc
ficoml
xor
shrl
mov
cmc
pusha
cmp
pusha
pushaw
loope
dec
mov
mov
push
sub
mov
call
add
loopne
fdivl
xchg
xor
push
cltd
push
sub
lret
xor
jl
push
enter
add
mov
add
and
dec
bound
int3
dec
adc
ds
popf
cmp
jo
cs
mov
push
cltd
adc
add
adc
xor
lret
push
xchg
mov
pusha
lock
clc
lods
adc
shl
cmpsb
mov
cmp
and
adc
adc
mov
xchg
inc
mov
addb
je,pn
push
imul
mov
dec
mov
movsb
subl
hlt
ret
sbb
dec
and
xchg
inc
ss
mov
es
into
insb
pop
insl
sbb
xchg
or
dec
and
xchg
adc
pop
and
test
pop
sub
adcl
dec
push
cld
dec
xchg
test
in
dec
adc
push
adc
mov
lcall
orb
je
cmp
mov
push
add
adc
push
mov
jb
or
xor
xchg
pop
cmc
push
add
pop
mov
int3
movsl
mov
inc
and
lcall
pop
andl
push
test
mov
stos
data16
pushf
sbb
jo
add
shll
mov
jp
inc
inc
loope
mov
or
fs
lea
mov
push
jae
and
clc
jbe
inc
and
sbb
sahf
inc
popa
add
push
insb
and
sbb
movsl
cwtl
mov
pop
sbb
hlt
adc
jne
or
gs
push
mov
adc
fmull
sub
cli
daa
lea
sbb
fs
add
mov
push
add
add
call
jb
cmp
adc
jo
add
push
ret
mov
fs
pushl
lret
in
addr16
sub
fisttpl
jb
mov
xchg
push
lock
mov
push
lock
insl
xchg
ss
fs
inc
xchg
int3
mov
xor
adc
or
dec
xorl
js
push
push
mov
adc
xchg
or
aam
add
push
push
orb
or
add
dec
and
add
push
sub
dec
or
ret
pop
push
jb
insl
push
sbb
xor
add
cmp
imul
movb
cmpsb
loope
adc
dec
or
sub
push
and
sub
jo
adc
add
or
fiadds
push
rorl
sub
add
or
push
rcrb
mov
test
or
lds
insl
repnz
add
mov
mov
push
pop
inc
push
ds
sbb
mov
push
mov
sub
mov
and
sbb
inc
ret
test
xchg
and
inc
and
test
adc
outsb
rorb
hlt
xchg
mov
inc
sbb
dec
sub
sbb
mov
pop
push
mov
jle
mov
mov
push
adc
sub
outsb
test
insb
xchg
sub
adc
test
mov
add
cmpsb
data16
or
push
add
pop
adc
xchg
addb
or
pop
xchg
ror
ljmp
push
push
movb
mov
sub
insb
adcl
mov
orb
adc
cwtl
clc
cltd
add
cltd
or
pusha
push
les
data16
and
sbb
sub
and
push
jo
sub
hlt
jo
shlb
and
rolb
push
inc
bound
pop
inc
into
aad
pop
pop
xor
mov
jo
hlt
int3
pop
or
sarb
mov
insl
add
adc
xor
jge
das
mov
fbld
cwtl
popf
cld
idivb
cmp
cwtl
add
mov
sbbb
mov
add
mov
xchg
xchg
sbb
faddp
inc
lcall
sbb
loop
fidivrs
or
lcall
jl
mov
mov
jo
adc
test
ljmp
lcall
push
cld
pushf
and
inc
xchg
sbbb
and
lods
movsb
sub
fiadds
cmp
ds
or
jne
popf
lock
add
sbb
push
mov
aad
outsb
data16
xchg
sub
sub
loope
sbb
adc
test
stos
jp
inc
dec
cmpsb
repnz
ret
test
add
lcall
dec
push
pop
mov
lcall
ljmp
fisubrs
push
addr16
or
adc
or
adc
xor
or
or
push
ret
shlb
mov
shlb
pusha
or
inc
xor
pop
loopne
adc
js
fs
and
jns
test
xchg
jbe
xchg
test
shrb
pop
add
aad
adc
mov
adc
mov
fs
test
pop
cli
test
or
push
nop
and
mov
mov
add
pushf
inc
jp
movsb
mov
or
xchg
mov
xor
clc
adc
sub
cli
dec
dec
shlb
shrb
inc
inc
inc
jo
dec
adc
lods
sub
cmc
adc
sbb
and
sbb
mov
adc
insb
lods
pop
ret
sub
push
cmpsb
add
int3
mov
movsb
call
lods
push
and
dec
mov
and
jle
and
mov
pop
dec
test
add
dec
inc
or
cmp
jo
sbb
inc
sbb
les
in
jp
sbb
sbb
and
push
loopne
pushf
int3
sub
xor
mov
je
xor
negb
and
mov
and
or
adc
shlb
sbb
andb
out
mov
fsubrl
rcr
loope
adc
push
outsl
sbb
sub
ret
mov
adc
and
dec
test
int3
scas
dec
js
or
pop
movsb
inc
or
popa
adc
pop
push
adc
bound
and
sbb
js
mov
or
sub
call
jno
sbb
pop
cltd
outsb
cmp
mov
jne
add
test
rclb
into
shl
push
add
orb
mov
xchg
sub
pop
rolb
andb
adc
push
or
mov
xchg
adc
stos
test
scas
fs
test
pop
xchg
sbb
or
pop
or
mov
test
push
sub
push
movsb
sbb
notb
inc
dec
mov
xorb
shrl
les
sub
adc
and
adc
jmp
pop
xor
test
nop
inc
push
add
xorl
pop
xlat
aam
aad
and
add
js
pop
cltd
rclb
js
dec
test
addb
fwait
jo
cmpsl
push
adc
add
ss
clc
inc
push
or
xchg
int3
add
or
mov
loope
xchg
mov
ljmp
jle
andb
dec
mov
mov
sub
and
add
sub
mov
adc
repnz
mov
xor
push
popa
inc
mov
push
mov
adc
sub
push
aad
mov
fidivl
loopne
push
test
stos
test
and
and
outsb
jecxz
adc
ficomps
cltd
or
inc
bound
mov
push
popa
cwtl
or
jle
jb
inc
or
rclb
rol
int3
into
push
enter
push
or
push
or
loope
adc
data16
aad
les
daa
test
nop
cmp
add
enter
cmpsl
data16
or
adc
add
mov
dec
loopne
scas
mov
add
subb
or
push
xchg
adc
or
or
mov
dec
popa
shll
call
movsb
sbb
inc
and
xchg
jno
or
jb
insb
cmp
out
push
insl
sub
sbb
xorl
insb
loope
sub
xchg
adc
outsb
pop
adc
inc
inc
test
adc
bound
dec
xchg
imul
fwait
decb
andb
xchg
dec
shl
jp
cwtl
sbb
lods
outsb
movsb
fs
xor
xor
and
pop
add
orb
sub
dec
das
je
pop
sub
call
pop
and
ret
and
adcb
fs
mov
cli
adc
adc
add
jno
and
lock
cmp
sbb
mov
and
push
sbb
mov
or
jb,pt
mov
adc
sub
sub
inc
nop
or
add
push
ret
shll
fs
inc
adc
int3
sbb
inc
add
mov
pop
adc
dec
cmpsb
in
loope
or
les
pushf
or
push
push
jmp
enter
sbb
out
es
add
fisubrl
scas
dec
ret
shlb
in
xchg
jno
sbb
push
lods
push
inc
inc
movsl
lock
xchg
pop
jo
imul
repnz
sahf
adc
and
aad
cmpb
scas
es
push
dec
push
fdivr
hlt
test
mov
cmp
fidivs
push
in
arpl
add
cmpsb
sbb
dec
jp
jo
mov
or
jb
dec
or
adc
mov
push
addb
jne
adc
xchg
push
shll
lcall
sbb
push
or
mov
xor
cmp
push
xchg
lret
mov
cmp
test
xor
sbb
xchg
test
add
sbb
mov
sub
inc
mov
add
lcall
mov
adcb
mov
adc
xchg
sbb
or
sbb
and
adc
lret
adc
cs
cmpsl
adc
add
pop
push
pop
add
fs
addb
xor
xor
add
add
ds
test
xchg
icebp
sub
inc
sub
add
mov
push
cmp
inc
push
xor
lods
pop
test
adc
mov
adcb
and
in
xchg
sbb
inc
dec
cltd
adc
dec
or
sbbb
xor
add
mov
xor
push
push
adc
mov
or
lock
insl
adc
adc
or
add
stos
stos
cmp
aam
inc
inc
fs
or
inc
es
jl
dec
mov
sub
rcrb
and
sbb
dec
loope
sub
mov
in
sub
xor
mov
adc
rcll
adc
cltd
mov
push
jns
in
scas
or
bound
hlt
xlat
dec
popa
in
pop
cltd
dec
in
mov
jo
lea
mov
imul
cmc
push
mov
cwtl
loopne
add
pusha
movsb
int3
xchg
test
inc
es
int3
xor
cmc
xor
es
mov
inc
sbb
sub
mov
leave
sahf
or
adc
js
dec
jl
sub
xor
pop
lock
or
or
ret
loope
sbb
mov
ds
data16
xchg
xchg
xchg
ret
xor
push
les
adc
jbe
mov
xor
sbb
and
js
outsb
mov
gs
jne
cmp
sbb
test
push
pushf
or
jo
repnz
xchg
dec
push
dec
inc
inc
arpl
adc
push
xor
test
aam
push
and
adc
fs
leave
inc
xchg
test
inc
cltd
push
movsb
xor
pop
mov
leave
pop
icebp
inc
push
lcall
pop
mov
jo
aam
std
mov
mov
and
roll
and
enter
int3
cmc
push
aam
dec
xchg
pop
xchg
cmp
scas
mov
cmp
subl
lods
inc
shll
loop
insl
test
sahf
subl
loopne
rcrb
sbb
and
and
add
addl
mov
mov
mov
bound
xchg
sub
popa
or
inc
pusha
xor
mov
xchg
adc
orb
and
movsb
push
and
cwtl
push
rol
sbb
push
push
jp
fwait
in
cli
jbe
cwtl
ficoml
push
stos
mov
cmpsb
add
and
dec
test
mov
inc
mov
inc
add
pusha
xor
rorl
sub
imul
pop
push
rolb
lcall
imul
xchg
sahf
out
jne
push
mov
test
cmp
fs
mov
xchg
orb
jb
lret
rclb
popa
add
lret
popa
test
adc
jp
add
aam
call
or
sbb
dec
mov
insb
cwtl
pop
xchg
test
insb
rolb
xor
xor
cmpsb
aad
push
add
je
popa
mov
mov
mov
and
cmp
mov
jo
ss
ljmp
pop
cmp
xor
mov
pop
add
and
dec
push
in
je
mov
cltd
xchg
enter
ret
and
rorb
int3
mov
add
loop
fs
mov
dec
push
sub
sub
or
pusha
add
xor
push
mov
test
orb
loop
lcall
sahf
test
movsb
jl
dec
push
test
mov
mov
add
bound
add
push
jp
subl
in
ss
out
cmp
cmc
add
js
stos
test
jns
or
inc
je
movsb
mov
push
add
and
sbb
sbb
xor
adc
dec
call
imul
adc
adcl
adc
and
pop
add
lods
stos
outsb
aad
cmp
pusha
push
addl
mov
outsb
xchg
aam
ret
shlb
dec
mov
cli
clc
adc
xorl
push
hlt
xor
and
push
mov
push
mov
push
std
les
adc
dec
jmp
lds
push
push
cmp
std
in
or
lret
dec
or
adc
or
mov
or
andb
and
imul
adc
dec
add
inc
adc
push
scas
mov
popa
jb
inc
in
test
xchg
loop
or
or
sub
mov
jle
mov
fcomp
sbbb
cmpl
push
or
xchg
mov
xchg
loope
xchg
ret
mov
sub
in
push
push
lods
add
add
cmp
fidivl
cmp
jno
sbb
pop
pushf
add
and
fs
ret
add
push
cli
cltd
mov
or
jo
movsl
nop
stos
sbb
inc
imul
in
and
cmp
xchg
rclb
add
cwtl
add
xchg
stos
cmc
push
or
jp
jb
pop
movb
mov
fdivrs
lods
xchg
pop
dec
sbb
mov
add
pop
cli
push
cmp
mov
add
and
sbb
inc
mov
insl
inc
mov
and
fisubrl
pop
hlt
pusha
mov
mov
dec
xchg
mov
sbb
xchg
sbb
sub
mov
bound
mov
xor
cmc
or
lret
sub
pop
orb
or
loopne
adc
add
jp
pop
lret
and
ret
loope
enter
aam
rcll
sub
and
inc
sbb
dec
or
loop
mov
add
loopne
cmp
sbb
mov
mov
shl
mov
adc
push
insb
and
lret
and
mov
dec
sub
dec
clc
sahf
lret
aaa
dec
sbb
or
cltd
test
movsb
loopnew
push
mov
adc
or
lcall
outsb
dec
mov
test
mov
rol
add
and
xchg
xchg
push
cmp
sarb
mov
out
sbb
rolb
push
pop
ficoml
scas
inc
jo
or
daa
sbb
cwtl
pop
cwtl
addb
lcall
inc
pop
cltd
sub
mov
rorb
lret
or
aad
cltd
enter
sbb
push
cmpsb
cmp
or
push
pop
inc
inc
pusha
sbb
sub
dec
js
push
clc
pusha
pusha
ds
sbbb
inc
js
pop
mov
sbb
nop
adc
inc
xor
es
add
test
mov
xchg
ret
add
adc
es
inc
pop
xchg
jo
inc
inc
xchg
xchg
stos
mov
dec
xor
add
mov
adc
aam
or
ljmp
int3
and
leave
or
push
loopne,pn
pop
mov
fs
dec
xor
nop
repnz
movsl
fdivrl
add
ds
add
add
and
push
mov
or
cmp
cmc
or
mov
xor
xchg
daa
add
xor
repnz
xor
xchg
and
movsl
mov
adc
jb
inc
cltd
xchg
xchg
dec
test
fsubrs
inc
xor
in
int3
xor
mov
mov
ret
push
push
sbb
js
push
add
and
shrb
push
dec
lcall
shrb
push
push
popa
mov
dec
mov
and
dec
or
dec
in
fs
ja
ret
add
in
je
dec
ret
add
enter
dec
adc
repnz
test
addl
pop
dec
mov
lcall
xchg
sbb
jb
dec
mov
or
les
dec
mov
es
cld
or
sbbl
pusha
mov
shlb
push
cmp
movsb
cld
inc
cli
or
gs
jo
mov
sbb
rolb
lret
add
or
addb
sbbb
lcall
cwtl
ror
data16
cmp
les
or
cwtl
sbb
mov
test
push
cs
pushf
sbb
cltd
push
inc
cmp
push
ss
add
insb
add
xchg
cwtl
loopne
cmp
sbb
add
sbb
stos
jb
pop
add
mov
and
cld
cwtl
dec
lods
and
sub
cmp
xchg
mov
jne
inc
add
inc
cmp
test
adc
dec
mov
ret
or
inc
jo
mov
ret
push
arpl
pop
cmpsb
jne
pusha
xchg
jo
jbe
xchg
add
inc
fildl
push
push
mov
sahf
mov
insl
cli
mov
fdivrl
pusha
cmp
push
addb
dec
je
or
xchg
mov
sbb
xchg
dec
or
cwtl
inc
into
subl
adc
mov
mov
sbb
rclb
cli
popf
insl
loopne
xor
loop
insb
dec
popa
sbb
jne
xchg
into
xchg
daa
cwtl
movsl
mov
push
jb
ret
addb
lock
sub
cmpsl
jo
xor
and
sbb
in
addb
les
sbb
add
sbb
lods
cwtl
adc
stos
adc
jo
inc
mov
mov
xchg
and
push
ret
inc
xchg
int3
mov
xchg
test
sbb
mov
mov
xchg
mov
and
fidivrs
sub
sbb
xchg
je
test
dec
lea
xor
push
xor
sahf
inc
and
pusha
and
dec
mov
cmp
test
push
int3
xor
loopne
add
andb
test
push
scas
ljmp
dec
dec
lods
xchg
rol
cmpsl
xor
dec
xor
mov
xchg
xor
inc
push
dec
test
loopne
sbb
orb
call
or
aad
pop
mov
adcb
adc
outsb
loopne
call
shlb
xchg
dec
nop
pushf
push
mov
cwtl
mov
or
popa
xchg
inc
or
movsl
mov
pusha
adc
add
loopne
jge
lcall
ljmp
xchg
push
out
in
inc
movsb
insb
lcall
sbb
cwtl
ror
inc
movsb
add
or
mov
cmp
pop
popl
or
xor
and
mov
cli
or
dec
mov
cmp
or
adc
addl
pusha
cli
cmpl
and
leave
call
mov
orb
dec
sbb
mov
add
negb
adc
jo
out
xor
sbb
mov
rolb
ficoms
test
lcall
xor
lock
adcl
adc
sub
in
add
cld
lock
fbstp
dec
les
sbb
push
lcall
adc
addl
push
lods
cwtl
xchg
or
hlt
into
xor
and
inc
xchg
jo
fcompl
add
ds
gs
nop
pop
cld
mov
xchg
ss
jb
xchg
mov
adc
mov
xchg
sub
inc
and
mov
dec
cmp
gs
adc
out
pop
and
xchg
mov
aam
push
push
push
xchg
xor
sbb
cli
sbb
jne
ret
xchg
fsts
rorb
adc
push
orb
andb
sbb
dec
jecxz
adc
pop
add
les
xchg
or
adc
test
jmp
sbb
cmp
es
fistl
mov
add
cmc
adcb
arpl
inc
fistpll
inc
and
adc
in
pop
or
mov
push
push
cmp
adc
adc
pop
add
jge
ds
pop
or
or
add
aam
ljmp
hlt
and
lret
js
and
ret
je
or
add
inc
es
sarb
add
add
push
push
sbb
or
sahf
pusha
fs
cmp
movsl
add
fcoml
pop
inc
addb
pop
mov
xchg
add
pusha
repnz
cld
push
adc
and
lret
adc
test
loopne,pt
cli
cmp
add
jb
or
inc
mov
sbbb
nop
dec
outsl
js
xor
xor
and
dec
xor
sub
xchg
inc
rcrb
ret
sub
xabort
sbb
and
xorb
and
lret
dec
or
and
ret
dec
insl
mov
mov
test
cmpsb
sahf
dec
add
push
mov
and
push
inc
mov
mov
pop
rcrb
mov
cmp
mov
sbb
add
clc
outsb
lret
push
adc
dec
pop
xchg
imul
push
pop
aam
test
sbb
int3
push
add
pop
test
scas
inc
bound
cmpsb
sbbl
cmp
rcrb
push
add
fsubr
mov
jb
add
pop
sub
and
inc
shll
and
in
jl
or
mov
cltd
call
xchg
inc
bt
sub
adc
xchg
and
adc
cwtl
push
or
sbb
jp
adc
sbb
mov
sbb
or
push
outsb
add
push
cltd
xor
sbb
sbbb
mov
adcb
xchg
fadd
sbb
outsb
mov
decb
adc
mov
call
testb
inc
test
ret
orb
adcl
adc
cmpsb
xor
popf
and
add
decb
jne
adcb
fdiv
divb
add
add
ret
in
xor
push
jb
mov
add
hlt
out
mov
add
jo
inc
out
push
and
pop
push
add
and
xor
andb
int3
xchg
mov
dec
dec
dec
fcoml
test
or
and
ret
mov
mov
mov
es
cli
incl
dec
insb
insl
or
aam
cwtl
xor
push
mov
dec
test
mov
mov
xchg
lret
test
pusha
add
pop
xor
add
test
and
push
and
shlb
mov
adcb
cmp
push
inc
push
and
cmp
push
ret
mov
or
shlb
les
mov
mov
nop
xchg
pop
incb
adc
adc
movsb
mov
mov
or
int3
lcall
aad
fcompl
push
orb
xor
int3
push
and
outsb
cmpsb
ljmp
cwtl
and
loop
push
dec
fs
inc
nop
repnz
dec
mov
jbe
cltd
xor
lock
lods
test
add
orl
loopne
lcall
ficomps
rorb
cmp
pushf
inc
xchg
mov
fs
pop
lcall
jb
loope
pusha
add
rol
mov
and
push
test
push
inc
ret
or
cmp
jb
or
and
pop
mov
xchg
mov
bound
cli
cmpsb
add
lods
aaa
dec
ficoms
mov
sub
mov
xchg
xchg
adc
and
and
adc
or
nop
xchg
add
mov
or
adc
js
and
push
test
aam
dec
pop
and
sub
push
push
mov
dec
xor
push
or
cld
dec
inc
mov
pop
fwait
xchg
mov
add
scas
fmuls
pop
hlt
inc
sub
inc
adc
xor
pop
jb
nop
mov
mov
out
inc
add
cs
hlt
adc
jo
add
xor
add
xchg
mov
sub
or
mov
test
cmp
xorb
sbb
sarb
xchg
addb
inc
sub
sbb
fsubrl
popa
xor
jbe
sub
aad
or
push
sbb
mov
clc
mov
mov
lcall
cmp
add
adc
cmpsb
xor
sbb
rorb
push
call
or
rclb
mov
daa
rcrl
mov
push
rolb
lock
sub
or
jb
inc
dec
adc
and
xchg
in
push
xor
adc
cmp
sbb
mov
adc
or
enter
es
mov
cmp
aam
std
subb
inc
rcl
cmp
push
adc
xchg
sbb
push
or
mov
mov
fadds
mov
mov
lret
add
add
dec
mov
gs
es
stos
sbb
inc
adcb
pusha
adc
jns,pt
jp
pop
xchg
sbbb
and
dec
into
add
push
adc
test
sbb
sbb
pushf
dec
or
inc
mov
add
mov
into
adc
int3
outsb
lock
xchg
sbb
sub
sbb
adc
and
and
add
jns
dec
fbstp
loop
dec
or
cmc
movb
xor
sbb
scas
lods
dec
sub
aad
push
insb
xacquire
adc
xchg
push
rcll
cmpb
sbb
mov
mov
pop
push
sub
push
ljmp
cmp
fs
add
inc
sub
popa
pop
fistl
or
outsl
dec
cmpsb
xchg
xchg
sub
xchg
lcall
test
mov
adc
cwtl
or
mov
xor
and
cltd
lret
js
or
lods
int3
loop
sbb
insb
cwtl
ret
cli
cs
add
lock
test
mov
mov
dec
insb
cmp
jbe
sub
insl
mov
dec
xor
pushf
test
xchg
mov
xor
add
sub
sbb
mov
pusha
xchg
jnp
cmp
clc
and
cmp
es
les
lret
and
call
xchg
push
cmpsb
imul
sub
mov
lods
gs
shlb
cmpsb
xchg
cltd
insb
push
inc
xorl
ljmp
into
xchg
repnz
pop
xor
fsubr
fs
add
dec
fimuls
pop
and
mov
adc
ss
dec
add
mov
ds
or
sub
xchg
cli
mov
scas
add
and
call
sbb
mov
test
sub
cmp
je
or
dec
dec
cwtl
jo
add
pop
outsb
pusha
inc
hlt
add
stos
push
jmp
js
adc
push
xor
in
jp
or
xor
pusha
sub
push
mov
popf
sub
adc
xor
adc
faddl
pushf
inc
into
mov
push
sub
mov
cmovo
cmpb
add
push
sub
push
cwtl
and
nop
pop
cli
sahf
dec
push
leave
mov
ret
pusha
pop
shlb
scas
pop
add
pusha
lock
fisttpll
clc
xchg
jp
fs
adc
add
insl
popa
dec
adc
clc
dec
outsl
add
fiadds
sbb
push
dec
ret
pop
insb
hlt
jle
dec
sub
lret
enter
sbb
shl
sub
cmp
in
bound
cltd
push
popa
mov
add
es
lret
rclb
sbb
cmp
js
cmpsb
test
mov
pop
add
rolb
sub
push
mov
mov
push
in
xor
fmul
add
sub
xchg
or
cs
jbe
cmp
and
ret
push
or
jbe
add
shl
push
dec
push
cmpl
int3
sub
sub
ret
xchg
call
push
jbe
push
and
pushf
push
lock
push
test
je
xor
cltd
movsb
adc
repnz
loope
inc
shrb
jbe
popa
rolb
inc
dec
inc
call
adc
add
and
add
xchg
imul
mov
pushf
inc
sbbb
and
dec
test
xor
pusha
stos
test
inc
faddp
pusha
das
sarl
cld
mov
mov
lea
cmp
add
outsl
sbb
int3
aam
fsubrs
xor
inc
sub
xchg
in
loopne
add
xchg
rcl
loopne
push
mov
xor
sahf
adc
pop
push
push
push
es
rcl
adc
mov
mov
and
push
outsb
push
xor
and
into
adcb
add
pop
ret
cmpb
push
adc
adc
or
xor
sbb
cmc
or
sar
rorb
jo
out
movsb
int3
dec
xor
cmp
inc
sbb
and
pusha
daa
sbb
out
test
loop
shll
mov
les
fdiv
mov
xchg
push
xor
dec
mov
fmul
lret
mov
pop
bound
xchg
add
and
xchg
mov
fiaddl
dec
dec
sub
adc
add
pop
inc
push
cltd
cmpb
fs
push
adc
ret
or
jb
sbb
adc
repnz
dec
sub
push
decb
ret
enter
movb
or
clc
sub
lods
inc
pusha
fisubrs
add
push
cld
gs
adc
pop
bound
dec
sbb
bound
or
adc
or
insb
mov
pusha
jns
fchs
adcl
or
std
mov
in
aam
or
sar
xchg
pop
and
cwtl
es
push
nop
mov
stos
cmpsb
and
int3
dec
je
lock
sub
or
mov
inc
inc
sub
sbb
xchg
and
cmpsb
xorb
rcll
mov
ljmp
in
push
xor
fs
cltd
ffreep
cs
inc
cmp
sub
mov
dec
orb
mov
fs
data16
ret
push
lret
mov
or
mov
fsts
xchg
mov
and
les
sbb
xchg
rclb
xchg
push
mov
and
push
adc
fcoml
xorb
in
xor
lock
add
sub
loope
inc
cmpsb
cmp
add
aam
xchg
pop
scas
ret
popf
add
mov
and
jle
adc
and
xor
lods
xchg
pop
es
fmul
int3
addb
cmp
adc
add
mov
add
add
je
adc
xor
mov
push
add
fwait
bound
pop
add
test
or
jns
sub
call
aad
call
aam
inc
jne
mov
and
push
xchg
clc
inc
or
test
adc
cs
xchg
popa
sbb
pusha
ret
or
inc
cs
pop
das
rorb
in
sub
and
dec
sub
or
pushf
or
mov
ds
enter
les
aas
dec
mov
fsubrl
add
sbb
enter
sub
jo
sub
mov
rorb
xchg
nop
adc
adc
addb
nop
xchg
data16
loopne
call
addr16
test
test
sub
hlt
dec
inc
cltd
push
mov
add
mov
sbb
in
or
mov
stos
loope
lret
push
or
sbb
mov
shll
or
xchg
cmp
popa
rclb
insb
jle
add
mov
sbb
cld
addb
mov
mov
les
pop
hlt
or
adc
es
xor
test
lret
sub
xor
and
test
xchg
in
push
cs
dec
movsb
push
sbb
inc
cmpsb
push
and
and
adc
xchg
xor
mov
add
notb
mov
xorl
xorl
jp
hlt
andb
add
jo
push
ficompl
adc
dec
ds
jg
pop
das
jp
dec
push
stos
inc
jo
adc
lahf
lods
cmpb
inc
sub
loopne
adc
in
cmp
insl
dec
outsb
dec
pop
ficoms
test
mov
fsubl
insl
adc
pusha
xor
movsl
lock
leave
pop
push
mov
pushf
inc
or
pushf
sub
jo
dec
in
cmp
cwtl
movb
xchg
pop
push
jecxz
xchg
imul
inc
ljmp
popf
xchg
and
addl
andl
rolb
pusha
movsb
sbb
inc
cld
movsl
xchg
cmc
xor
push
jl
add
xlat
push
add
and
rclb
clc
loope
dec
popa
cmp
mov
out
and
loop
push
dec
sbb
push
loopne
pop
sbb
call
mov
mov
or
add
jmp
xchg
inc
into
and
das
add
adc
sub
mov
push
xchg
cmp
inc
loop
dec
adc
adc
inc
and
dec
and
lcall
pop
pop
testb
or
or
outsb
inc
sarb
pop
or
pusha
mov
rcrb
cltd
mov
jae
jp
dec
mov
pushf
orb
sbb
sbb
add
pop
sbb
xchg
mov
adc
mov
hlt
enter
or
and
addb
inc
sub
and
sub
sbb
add
inc
xor
rorl
mov
aam
adc
ret
mov
jle
xor
lret
add
jmp
adc
sbb
arpl
and
mov
test
push
push
in
into
or
arpl
in
lock
inc
inc
ret
les
dec
movsl
adc
dec
inc
clc
ljmp
hlt
and
add
adc
and
popa
pusha
dec
xor
ror
dec
popf
and
nop
call
dec
jl
xchg
pushf
mov
inc
mov
mov
adc
faddl
les
mov
popa
orb
ljmp
push
add
adc
sub
push
mov
xor
sbb
inc
sbb
dec
data16
jb
test
sbb
sbb
sbb
add
dec
lret
sbb
mov
jb
and
mov
into
cmp
mov
inc
es
subb
or
mov
inc
and
lret
inc
adc
test
mov
xchg
fsubrs
subb
lcall
inc
mov
aad
stc
test
adc
push
iret
mov
aad
test
push
push
sbb
jb
mov
insl
ljmp
mov
adcb
ljmp
inc
mov
inc
jo
subb
js
cmpsb
and
sbb
popa
xor
ret
cmpsb
pusha
lahf
je
pop
mov
pusha
pop
and
xor
movb
xchg
mov
rcrl
adc
add
adc
sub
sbb
jb
and
sbb
mov
xchg
mov
xchg
adc
mov
fiadds
out
ret
mov
adc
insb
pop
pop
dec
and
add
jle
jns
daa
dec
pop
loopne
sbb
xor
cli
push
xor
ret
fcoms
pushf
addb
jb
cmp
xor
loopne
cmpsb
outsb
jbe
sub
ds
je
inc
mov
adc
and
nop
add
pusha
pop
lea
insb
adc
ljmp
or
xor
insl
sbb
cmp
mov
scas
pop
lds
push
je
fidivrl
sbb
adc
push
shrb
andb
inc
jo
inc
dec
shlb
or
pusha
nop
test
pusha
and
jecxz,pt
inc
inc
jle
cwtl
inc
cmp
mov
outsb
sbb
mov
sub
lret
dec
sub
push
xor
mov
xchg
pop
fmul
je
lret
outsb
inc
adc
loopne
xchg
xchg
add
inc
mov
repnz
inc
jbe
inc
jns
stos
xchg
les
les
mov
push
insb
gs
es
lcall
ret
xchg
sbb
xchg
mov
ret
mov
fs
or
sahf
jbe
frstor
adc
or
inc
pusha
js,pt
dec
or
mov
test
sub
or
addb
mov
nop
popf
inc
jl
les
xor
jle
mov
add
lret
dec
lods
and
xorb
add
add
and
xor
rclb
adc
int3
js
in
les
dec
movb
and
pop
sub
adc
add
jl
ss
enter
cmp
push
dec
inc
push
xor
push
mov
cmpsb
add
mov
push
sbb
sbb
fadds
or
xor
inc
lea
ficomps
inc
mov
pop
sbb
ljmp
dec
adc
cli
decb
mov
and
mov
cli
mov
xor
xor
cli
pop
lock
loop
sbb
ret
mov
inc
dec
mov
sbb
pushf
je
les
xchg
sbb
leave
cmp
dec
dec
lods
outsb
lret
test
adc
mov
xchg
xchg
lock
aad
sbb
push
mov
shrb
sbb
flds
pop
sbb
adc
dec
fcomps
popf
add
lods
mov
pusha
js
mov
lcall
add
rorb
shrb
shlb
lods
cmp
fcoml
jo
scas
lods
insl
arpl
fidivs
inc
mov
shrb
cmp
inc
es
sbb
mov
mov
push
add
add
sub
loop
xor
test
fcoml
ret
pop
cmpsb
xor
inc
aam
ret
dec
test
call
test
mov
gs
loop
mov
rorb
adc
mov
loopne
ret
add
push
hlt
jecxz
push
xchg
mov
push
dec
loopne
mov
pusha
add
xor
xor
les
adc
pop
data16
lret
mov
jp
mov
ss
scas
sub
adc
add
mov
jo
push
push
pop
and
push
add
jl
and
add
and
cmp
dec
cmp
lcall
cmp
int3
mov
cmp
ficoml
push
popa
mov
sbb
push
ss
es
es
mov
or
sbb
and
bound
push
inc
jle
pop
imul
into
andl
push
or
add
lret
bound
pop
pop
shlb
lcall
sbbl
cwtl
mov
cltd
adc
or
in
sbb
add
mov
mov
loope
bnd
popf
xchg
sbb
add
inc
movsb
clc
jns
xchg
sbbb
and
loopne
mov
and
jl
inc
xchg
sbb
jmp
xor
rolb
fs
pop
or
xor
cmp
es
inc
sub
mov
or
fimuls
xchg
push
mov
adc
xchg
adc
inc
inc
sbb
gs
or
pop
sub
cmp
ret
or
test
mov
or
mov
andb
mov
inc
xchg
and
inc
dec
mov
or
mov
push
mov
xchg
popa
aam
je
nop
lds
pop
mov
jo
sbb
nop
pop
orb
ficomps
or
push
pop
out
fs
dec
sahf
movb
pop
cmpsb
pushf
adc
loop
cltd
push
dec
sahf
scas
lock
faddl
popa
ret
jle
or
cld
xor
inc
movsb
cmp
mov
subl
gs
call
mov
fs
leave
ljmp
add
dec
sbb
pop
xor
rolb
shlb
pusha
sbb
test
pop
jb
subb
dec
insl
rclb
movsb
outsl
add
les
inc
sub
imul
cwtl
dec
jb
add
inc
nop
imul
lret
sbb
stos
push
push
dec
pusha
cs
adc
shrb
lcall
inc
cmp
ljmp
dec
dec
popa
mov
or
nop
jo
mov
inc
test
lock
addl
mov
rorb
and
push
shlb
dec
or
mov
sub
movsb
andb
bound
cs
ret
and
push
push
add
inc
sub
mov
and
add
or
xchg
inc
sarb
dec
loopne
movl
add
ds
add
jbe
add
or
and
movsl
push
add
push
test
repnz
and
pusha
or
push
mov
loopne
cltd
shlb
sbb
inc
enter
and
pop
orb
in
mov
je
nop
and
add
aam
push
cbtw
loopne
bound
idiv
dec
xchg
push
stos
add
pusha
ss
adc
aam
es
inc
add
jp
stos
shrl
outsb
into
cmc
test
xor
fidivrs
test
push
pop
pusha
pushf
idivb
loopne
adc
cli
es
add
pop
add
add
stos
movsb
xchg
leave
dec
sub
in
andl
inc
add
nop
lret
pop
and
shrb
addb
cli
lcall
out
aam
lcall
data16
inc
sub
adc
or
or
mov
or
cs
clc
sub
pop
sbb
ljmp
push
andb
mov
gs
push
in
enter
ficoml
insb
test
cmp
inc
es
push
popf
mov
add
add
je
dec
sub
mov
push
inc
mov
pop
push
cmp
test
into
loop
sub
xor
nop
fs
call
les
call
pop
sbb
aam
loop
lcall
add
xor
push
insb
popa
sbb
mov
or
int3
test
rcrb
and
add
add
or
cld
xor
sub
int3
mov
inc
sbb
scas
cli
les
pop
or
adc
stos
pusha
sbb
mov
dec
jecxz
and
xchg
leave
cmp
xchg
clc
cmpsb
cmpsl
loopne
cmc
inc
mov
dec
inc
inc
sub
cmp
and
leave
mov
push
jb
add
inc
cmpsb
idivb
cmp
xchg
pushf
flds
and
add
dec
and
jo
enter
and
mov
js
xchg
inc
push
xchg
lcall
pop
imul
es
add
loopne
jbe
pop
mov
push
pop
pop
hlt
add
mov
gs
xchg
pop
sbb
and
ret
ficoms
je
and
clc
outsb
mov
add
add
nop
sub
test
or
fsubs
or
pop
jo
mov
xor
inc
mov
fcom
xchg
pushf
lcall
pusha
leave
pushf
movb
jns
jbe
xor
mov
push
xchg
pusha
js
add
shrb
gs
leave
inc
in
mov
cmp
inc
bound
insb
movsb
xchg
movsb
sbb
mov
shlb
dec
or
and
and
nop
cs
andb
adc
xor
mov
adcb
leave
or
fcoml
inc
nop
and
sub
cmp
xor
xchg
cmp
mov
cmpsb
xchg
scas
andb
xor
xchg
mov
aad
xor
or
push
xchg
push
pop
rolb
es
repz
adcl
pushf
xor
movsb
or
dec
add
stos
sbbb
xchg
aam
nop
nop
mov
push
adc
subb
inc
xor
xor
loopne
mov
insb
pusha
xchg
rcl
xchg
sbb
adc
add
adcl
jo
cltd
xor
pop
xor
ret
mov
out
repnz
or
xor
adcl
aam
or
sbb
mov
sub
sub
loopne
mov
and
mov
in
sbb
insb
or
gs
and
xchg
mov
push
jle
pop
adcb
xchg
mov
adc
xchg
in
and
sbb
sbb
jns
inc
shrb
sub
and
cltd
sbb
push
pusha
andb
sbb
push
sbb
pop
in
push
mov
xchg
add
and
dec
fiaddl
mov
mov
cmp
xor
rolb
sti
hlt
xorl
rcrl
sub
mov
xor
mov
sarb
lcall
scas
sub
js
adcb
xchg
mulb
mov
and
mov
dec
push
cmpb
lea
lret
adc
dec
sbb
loop
adc
xchg
inc
test
es
test
scas
enter
xor
mov
mov
pusha
nop
jo
or
cwtl
cltd
push
cwtl
inc
popf
mov
data16
or
push
nop
test
add
loopne
mov
and
sbb
je
or
xchg
dec
subb
bound
data16
and
ret
lcall
add
dec
xor
mov
fbstp
push
mov
xchg
adc
dec
mov
jns
adcb
jne
sub
enter
sbb
data16
dec
sbb
shrb
loop
ret
and
mov
popa
clc
lcall
push
mov
testb
push
adc
test
sbb
inc
fs
adc
sbb
scas
out
jle
xchg
fiaddl
out
push
sarb
pusha
pop
xor
jle
in
mov
xchg
jne
sub
cli
dec
rol
inc
xor
cwtl
cmp
mov
inc
test
cwtl
dec
popf
mov
xchg
dec
in
push
rcr
add
rol
scas
js
das
inc
cs
mov
inc
adc
pusha
mov
adcb
cmp
loopne
mov
and
xor
mov
or
test
and
mov
add
loopne
adc
dec
or
sub
negb
jb
inc
loopne
pop
int
lret
dec
filds
push
dec
shrb
add
dec
iret
cld
scas
test
test
mov
and
pop
and
or
sbb
test
jb
jne
cmpsb
cli
scas
push
xchg
sarl
ss
add
loop
scas
jle
rcrb
mov
pop
enter
icebp
push
cmc
dec
loop
push
push
xor
push
test
cld
or
sub
sbb
sbb
ljmp
test
or
push
push
xor
orb
dec
insb
or
sub
insb
xchg
outsb
sub
movsl
andb
mov
imul
shrb
jo
push
test
or
ss
subl
enter
add
insl
sti
sub
pushf
test
cmp
or
into
and
dec
add
or
mov
fimuls
sub
and
mov
cmp
loop
lcall
nop
xor
test
xchg
pusha
lds
or
gs
fmulp
inc
xchg
sbb
je
es
and
movsb
add
int3
pop
jle
test
add
nop
mov
sub
lock
xchg
in
test
adc
add
xor
cli
cld
mov
xchg
xchg
inc
ficoml
xchg
xor
clc
push
push
sbb
sub
cli
repnz
add
shll
sbb
call
outsb
rcl
or
pop
jl
jle
pop
imul
adc
push
xchg
add
sbb
rorb
sbb
and
cmpl
or
loopne
test
cli
mov
dec
adc
ljmp
xchg
and
push
cltd
adcb
or
mov
outsb
inc
mov
cmp
push
inc
and
pusha
ss
sub
sbb
mov
and
cli
cmp
gs
fwait
xchg
dec
add
xor
adc
adc
and
cmpsb
scas
aam
mov
xchg
push
and
or
cmp
push
mov
push
cmp
addb
ret
lock
test
adc
insb
inc
inc
push
adc
into
push
mov
mov
insb
and
insb
sub
dec
sbb
mov
fs
and
push
pop
es
sbb
add
mov
mulb
call
jne
push
lcall
xchg
mov
sub
test
push
dec
nop
lret
pop
push
sbb
addr16
bnd
ds
or
movsb
pop
fcmovb
push
sbbb
pusha
mov
rolb
loope
sbb
or
and
insl
cwtl
push
cmp
mov
ss
jo
inc
mov
mov
lock
mov
and
xchg
lock
rcll
sbb
sbb
mov
push
clc
dec
adc
loopne
cs
inc
dec
mov
dec
rorb
cmp
xchg
mov
cld
mov
leave
sbb
adc
or
mov
dec
sub
adc
adc
sbb
adc
movsl
or
dec
mov
addb
lcall
les
adc
rcrb
and
dec
hlt
mov
rorb
inc
xor
adc
ficompl
test
sbb
aam
add
mov
daa
movsb
and
sbb
push
js
inc
inc
or
sub
mov
data16
or
lock
lods
inc
cmp
xor
xor
cmpsb
test
sbb
ret
mov
pusha
push
push
popf
sub
addb
mov
mov
aam
fimuls
dec
incb
ret
scas
insb
test
jb
dec
es
xchg
enter
xor
mov
xchg
adc
dec
mov
pop
adc
in
fs
and
int3
mov
push
hlt
mov
inc
nop
out
dec
ss
in
push
dec
lret
mov
inc
or
in
ss
mov
xor
imul
or
add
dec
cmp
push
inc
or
jb
dec
adc
pusha
test
jl
lret
mov
sbbb
call
cmp
ret
cli
or
or
push
lcall
jl
pop
pop
xor
mov
push
aam
inc
xchg
xchg
cmc
ret
and
xor
cmp
lock
xor
addb
test
mov
call
xor
inc
push
cs
or
add
mov
test
bnd
cmp
jae
adc
dec
rolb
push
mov
pop
or
sub
fs
add
dec
cli
fiaddl
pushf
sbb
sbb
pop
and
cmp
dec
or
sbb
mov
add
dec
ret
dec
xorb
pop
nop
jmp
and
lret
pushw
pusha
push
add
mov
mov
test
movsb
test
xor
push
mov
add
cmp
rolb
lock
ss
scas
ret
imul
into
js
pop
cmpsl
aam
test
adc
imul
scas
mov
pop
xchg
jb
inc
mov
rorb
cmc
xor
sahf
lcall
nop
ficoml
sub
dec
xchg
ret
add
lock
pusha
fisubs
ljmp
stos
and
or
bound
adc
and
xor
mov
sbb
or
add
push
xor
ret
adc
sbb
add
add
cwtl
je
dec
or
mov
loopne
push
es
and
sbb
test
push
mov
mov
sahf
sbb
mov
adc
push
ss
mov
je,pt
mov
dec
adc
gs
add
mov
inc
jo
inc
push
xor
cwtl
out
push
scas
or
xchg
rolb
into
js
push
bound
mov
and
movsb
or
cmp
mov
popa
sub
inc
or
add
push
pop
rorb
lds
les
dec
xchg
and
mov
leave
sbb
mov
push
daa
or
xor
test
movsl
xchg
subb
xor
push
rclb
sbb
fisubl
test
cmp
add
lods
inc
mov
data16
test
pop
or
mov
mov
sub
inc
inc
mov
add
ds
and
mov
mov
adc
xor
push
xor
cs
test
les
inc
mov
mov
cmp
or
scas
bnd
or
fs
dec
mov
mov
mov
insl
jl
add
ret
rcrb
into
pop
scas
and
cmpsb
xor
adcl
mov
push
cltd
lret
xor
mov
pushf
and
movsb
pop
jb
and
dec
adc
clc
mov
pop
or
or
and
into
loop
mov
es
fmul
add
pushf
scas
xor
loopne
mov
loop
pop
test
lret
xor
add
cs
cmpl
cmc
pop
andl
sub
sbb
subb
or
cmp
fs
cmpsb
inc
and
aam
ds
test
mov
add
and
aam
rcrl
lret
sub
push
outsb
dec
es
data16
fadds
cmp
rorb
inc
dec
out
or
push
subb
or
cltd
add
popa
movsb
test
push
out
push
add
sahf
mov
jmp
rcrl
xchg
mov
mov
adcl
into
sbb
sbbb
stos
mov
mov
pusha
adc
addb
push
sbb
rorl
and
push
jbe
push
inc
sub
sti
pop
cli
and
test
mov
sbb
mov
jp
fs
jl
cmpsb
mov
and
scas
bound
push
mov
rol
xchg
nop
xor
out
inc
mov
stos
mov
repz
jns
jp
ret
sbb
test
add
shlb
jo
xchg
xor
and
pop
movb
mov
push
jge
dec
push
adc
mov
aad
sbbb
loope
ds
ret
mov
mov
imul
inc
in
aam
or
and
sbbb
test
and
dec
xchg
xor
sbb
ss
add
jp
inc
push
and
push
add
or
push
inc
scas
enter
in
cmpb
mov
or
and
mov
sbb
and
mov
or
xor
xor
or
lret
cltd
xchg
mov
or
test
mov
pop
inc
mov
lock
push
push
xor
clc
lods
or
int3
xchg
into
stos
or
xchg
xor
adc
mov
sbb
jbe
leave
dec
lods
movsb
and
fmull
cmp
push
pop
and
jb
inc
dec
dec
xor
enter
subl
inc
or
and
data16
outsb
test
mov
insb
or
mov
movsl
in
push
and
push
dec
push
mov
and
mov
or
shl
push
in
int3
xor
push
andb
loop
andb
jne
out
add
pop
inc
mov
sub
xor
popa
xor
push
xor
sub
cmp
add
pop
add
add
mov
xchg
scas
mov
or
xchg
push
cmp
dec
jp
mov
and
push
inc
sub
cmpb
shrb
sbb
xchg
push
int3
add
add
add
popa
clc
xor
dec
loop
repnz
loope
mov
dec
pushf
pusha
sbb
sbb
xor
es
pop
sub
mov
les
insl
and
and
pushl
test
pop
push
xchg
push
push
cld
subb
and
pop
test
mov
push
mov
orb
sub
or
mov
mov
lock
movsb
pop
inc
test
push
push
add
and
movsl
dec
or
jns
adc
and
pop
inc
inc
jno
push
sbb
inc
insb
sbb
dec
popa
nop
push
movsb
add
add
data16
lret
pop
pop
push
dec
xor
sbb
mov
int3
mov
test
mov
sbb
and
inc
pop
inc
inc
xor
sbb
sbb
cs
shrb
sbb
xchg
pushf
inc
hlt
cs
or
cmc
and
mov
adc
je
cs
push
adc
add
push
mov
enter
fs
or
dec
cwtl
pop
jbe
mov
xor
jl
add
or
cmp
adc
enter
mov
mov
push
mov
and
loope
pusha
or
cli
icebp
push
sahf
pusha
cs
test
mov
push
adc
xchg
js
mov
and
xor
or
jbe
rorb
dec
ret
mov
stos
rolb
es
xorl
sbb
nop
xchg
xor
lods
add
cld
loop
cmc
es
mov
cs
test
dec
pushf
inc
insl
es
test
fimull
test
dec
outsl
dec
inc
add
xchg
add
fs
xor
jo
inc
pop
scas
es
inc
in
and
or
pop
mov
inc
xor
inc
subb
shrl
push
xor
popa
test
sbb
andl
bound
hlt
sbb
rolb
sbb
shrl
dec
and
fdiv
add
aad
sub
dec
mov
jp
add
xorl
les
xorl
xor
inc
jo
loopne
ret
fdivrp
push
inc
push
dec
or
sbb
add
es
stos
ficompl
add
sbb
andb
divl
movsb
xchg
adc
push
push
cmpsb
jne
cwtl
cltd
aam
ret
cltd
test
or
xor
push
mov
mov
xchg
outsb
hlt
cmc
mov
add
es
xchg
add
test
movsb
loope
test
cli
dec
push
ret
inc
mov
bound
xchg
ret
mov
xchg
mov
push
inc
or
mov
stos
loop
mov
loopne
mov
movsl
sbb
push
clc
xabort
int
mov
xchg
shlb
loope
fs
bound
mov
dec
add
sarb
xor
dec
pusha
inc
dec
sub
mov
push
fdivl
loopne
sbb
push
cwtl
add
or
sub
or
insl
mov
or
jbe
fists
push
cmp
adc
mov
cmc
adc
es
xor
sbb
xchg
dec
subb
js
jns
dec
mov
xchg
inc
and
adc
and
and
inc
sub
adc
cmp
lret
push
or
and
inc
mov
mov
rolb
cld
mov
int3
test
add
push
inc
mov
sbb
add
cmc
adc
dec
xchg
adc
scas
push
lods
scas
gs
aaa
movsb
and
add
dec
outsb
lods
push
pop
jb
mov
test
pushf
mov
ret
xor
inc
and
into
xchg
inc
jb
shrb
cmpsb
aad
loop
sub
ret
mov
add
dec
and
movsb
jp
movsb
adcb
xchg
lods
test
mov
push
mov
xor
mov
dec
popa
xchg
dec
mov
in
add
and
mov
mov
dec
test
mov
jl
pop
and
adc
adc
add
fnop
mov
pop
push
jns
pop
cli
loope
adc
ds
and
cmp
enter
jbe
mov
add
shlb
in
push
add
mov
insl
cwtl
xchg
pop
pop
fs
call
addb
sbb
add
cwtl
add
mov
mov
cs
inc
ret
jb
xchg
test
add
sub
jl
lret
pop
or
mov
into
test
xor
mov
fs
xor
ljmp
or
mov
mov
and
ss
sub
or
out
mov
and
ljmp
movsb
addl
mov
rorb
pop
sub
cli
mov
or
mov
popa
xchg
rclb
dec
lea
ss
push
loop
mov
or
test
push
movsl
test
sbb
and
mov
adc
push
ret
adc
shrb
add
fs
in
mov
pop
sahf
add
mov
sub
pop
notb
mov
cmp
sbb
sar
nop
inc
loopne
push
mov
mov
rolb
orl
int3
and
sub
mov
sub
hlt
xchg
sbb
jmp
call
push
insl
mov
push
ljmp
fnstsw
pop
data16
or
cltd
js
xor
add
cmpsb
dec
dec
add
movsb
xor
nop
cltd
test
jbe
jb
dec
test
jb
stos
fldt
pushf
dec
inc
in
push
cs
mov
xor
cmp
push
test
push
push
cs
mov
mov
inc
mov
les
push
mov
je
sbb
jne
or
dec
sbbb
ret
dec
cmp
in
cltd
add
rol
inc
mov
jns
subl
out
jno
push
inc
add
dec
gs
add
xor
pop
and
inc
and
cmp
and
es
and
dec
mov
lods
jb
lods
jbe
ret
cmc
push
dec
test
mov
test
les
inc
flds
test
inc
movsb
aad
or
sbb
lret
mov
push
and
sub
add
mov
mov
data16
loopne
pushf
adc
test
loope
sub
enter
and
xchg
cwtl
and
je
cmpb
cs
sbb
inc
sub
xchg
and
jno
movb
orb
sbb
fiadds
or
xor
pusha
adc
cmp
pop
and
or
push
cmc
gs
pop
pop
fsts
movsb
imul
ss
push
andb
pop
test
jns
fcmovb
test
sbb
stos
inc
add
xchg
sbb
dec
sub
mov
out
inc
mov
or
jg
and
pop
adc
loop
mov
aad
xlat
cmp
and
movsl
popa
push
mov
sbb
cmp
mov
aam
mov
or
mov
clc
int3
movsb
jb
xor
fadds
pushf
mov
jo
inc
enter
and
jl
add
mov
xor
dec
inc
push
mov
cld
test
inc
cmpsl
or
ret
bound
js
xor
es
es
repnz
push
aam
and
push
call
into
orb
mov
cmpsb
ret
mov
xchg
and
subb
data16
xchg
sbb
sub
cld
mov
subb
cld
je
ret
mov
add
push
movsb
mov
ficomps
test
in
or
test
push
adc
mov
sahf
fnstcw
pop
stos
bound
flds
jg
dec
js
fnsave
andb
lea
dec
jl
test
xchg
push
or
in
push
sbb
hlt
loopne
movsb
jp
nop
cwtl
push
mov
or
dec
or
adc
into
push
dec
sub
shll
add
outsb
xor
fsin
enter
add
mov
fs
sbb
data16
addb
stos
add
sbb
inc
sbb
mov
sbb
sub
inc
sub
in
into
or
push
aad
inc
cwtl
inc
in
data16
add
xchg
inc
clc
fsubr
and
cmp
nop
dec
and
or
jns
jb
or
sbb
xor
add
dec
cmpsl
and
add
jecxz
scas
adc
mov
xchg
and
cli
rcrb
dec
sub
sub
xor
je
dec
add
addr16
sbb
xchg
lret
push
inc
cs
jo
add
jo
into
xchg
test
and
rcl
repnz
push
andl
and
xor
mov
dec
jle
je
mov
les
fs
fwait
adc
dec
insl
push
lock
and
cmpsb
or
or
pop
mov
lcall
jl
xor
loopne
add
popa
xchg
stos
outsb
clc
mov
jp
mov
add
loopne
sbb
mov
inc
or
or
dec
lret
push
xchg
push
add
es
jne
or
push
push
xchg
cmpb
xor
sub
jl
and
pop
cld
sbb
int3
jb
js
bound
sbb
pop
push
jl
call
pusha
xchg
and
jne
test
and
jo
add
rorb
cmp
cli
xor
gs
nop
push
sub
stos
xor
cltd
lret
ds
and
andl
inc
xor
push
loop
ficoml
jle
dec
rol
and
cld
rolb
add
cli
sbb
jp
and
gs
outsb
add
dec
rorb
ret
cmp
ret
popa
push
sbb
push
xor
test
test
jle
mov
mov
clc
imul
cmp
add
pushf
fcompl
pusha
out
push
push
push
push
pusha
mov
cwtl
movsb
bound
xor
sbb
mov
in
movsl
xorb
mov
mov
push
add
xor
insl
add
mov
add
or
pop
aam
cmpsl
addb
iret
push
sub
clc
jae
roll
decb
movsb
mov
add
pop
xchg
lods
loop
test
push
pop
add
movsb
ficoml
in
push
shlb
mov
dec
shll
dec
loope
pushf
and
jo
xor
inc
mov
dec
adc
pop
adc
push
lret
or
cli
and
adc
lods
xchg
mov
in
push
pop
leave
add
xorl
fcoms
dec
xchg
pop
inc
mov
mov
xor
add
inc
cltd
loopne
inc
cmp
popa
xchg
in
pop
xor
movsl
hlt
add
ljmp
addl
pop
inc
cmp
data16
dec
cmp
gs
stos
cli
push
adc
or
insb
sub
pop
xor
int3
sbb
adc
jns
and
add
sahf
ss
and
inc
xor
mov
fwait
test
insb
mov
adc
dec
shr
mov
jb
popa
mov
mov
add
adc
push
or
fsub
mov
cli
inc
btr
andb
and
outsl
xor
test
shl
lock
data16
loop
sub
or
mov
or
test
adc
pop
or
into
xor
call
add
orl
subb
xchg
and
add
add
xor
ss
inc
cmp
and
xor
add
orl
movsb
inc
xchg
or
and
pushf
xor
jo
dec
mov
pusha
cs
adc
hlt
add
xor
pushf
repnz
cltd
add
inc
jo
ss
xor
sbb
nop
lea
inc
pop
inc
xchg
movsb
es
xchg
adc
and
jns
push
sub
ds
and
les
mov
lods
push
mov
sbb
inc
out
movsb
enter
pop
notb
ret
lock
pop
xchg
and
xchg
sbb
sbb
fcoms
inc
or
or
pop
xchg
xor
test
dec
lcall
push
or
lret
mov
mov
xor
sbb
pushf
mov
dec
add
push
popa
mov
mov
ficoms
xchg
jo
cmp
mov
sub
or
or
mov
les
fiaddl
dec
mov
sbb
repnz
enter
je
inc
or
dec
or
scas
and
andb
popa
push
jmp
rcrl
xor
ljmp
outsb
sti
sbb
push
push
shlb
enter
mov
outsb
test
sub
pop
and
pop
bound
push
xchg
mov
adc
call
or
int3
sbb
sub
add
mov
mov
fbld
cld
add
sbb
pushf
mov
pop
test
insb
mov
xchg
scas
push
xchg
add
fs
add
mov
xchg
and
cmpsb
pop
xor
outsl
push
out
add
pusha
ret
xchg
or
orb
sbb
andb
pop
xor
fsubrl
andl
jo
add
jp
dec
xchg
push
je
or
shlb
cwtl
xchg
add
sbbb
and
loope
and
push
push
test
add
in
inc
cmp
cmp
subb
aad
mov
pusha
mov
dec
jno
ficoml
addb
sbbb
or
or
into
mov
enter
inc
push
mov
adc
push
pop
into
mov
dec
mov
pop
divb
je
sbb
scas
dec
pop
jne
adc
fcoms
mov
stos
stos
les
enter
lret
dec
mov
add
or
icebp
nop
and
shlb
lret
mov
rcrb
add
sbb
push
cli
es
push
push
xor
inc
gs
cld
and
push
fdivl
lcall
insl
enter
add
dec
pop
inc
push
pop
inc
movsb
in
lcall
push
add
xchg
gs
dec
fs
mov
or
rcrl
and
insb
add
add
imul
pusha
pop
adc
inc
sbb
sbb
or
xor
adc
scas
and
adcb
ljmp
pushf
pop
imul
adc
sbb
add
jl
pusha
mov
mov
push
push
sub
inc
and
scas
sbbb
bound
sbb
mov
and
adc
sbb
and
and
xchg
push
adc
cmp
adc
pusha
and
cmc
dec
xchg
rcrb
or
rclb
test
adc
inc
cwtl
test
sbb
xchg
rcrb
sub
mov
loop
inc
data16
clc
jo
ds
mov
mov
aaa
xchg
or
sub
cld
jmp
loop
lock
jg
jmp
movsb
pop
adc
shlb
adc
or
xchg
mov
inc
dec
sbb
dec
push
cmpsb
push
lcall
xchg
popa
mov
ret
call
adc
xchg
data16
sub
mov
dec
inc
inc
sub
mov
fs
add
mov
call
or
cmpsb
mov
les
fs
add
mov
lods
mov
push
jb
and
je
into
mov
rorl
lock
insb
sbb
loop
mov
cwtl
fidivrs
out
mov
ljmp
and
popa
lcall
push
dec
xchg
mulb
mov
popa
push
xchg
xchg
ds
lea
xlat
xor
and
and
decb
je
mov
jp
xchg
sub
pusha
movsb
mov
dec
pusha
sarb
jne
inc
outsb
dec
push
mov
xor
test
mov
cmc
inc
ffree
add
les
add
bound
jl
int3
push
and
stos
push
mov
rcrb
xorb
in
and
dec
rorb
leave
fs
ljmp
fsubs
mov
daa
fs
mov
xchg
test
and
in
mov
mov
pusha
sbb
enter
add
call
leave
pusha
andb
loope
dec
mov
test
inc
mov
sbb
xor
aad
mov
xor
cmpsb
push
or
and
and
adc
xchg
push
cmp
movsb
adc
test
jp
mov
aam
cltd
mov
sub
xchg
mov
insl
or
nop
imul
dec
lods
addr16
imul
fdivl
sub
mov
add
orl
add
inc
cmc
ficoml
cmp
cwtl
mov
mov
xchg
mov
push
inc
or
mov
and
bound
mov
and
inc
in
mov
lret
and
sub
hlt
push
lret
test
movsl
movsl
mov
sub
ljmp
sbb
push
aad
adc
arpl
dec
sbb
mov
sbb
add
sub
add
add
or
rolb
mov
ret
in
ret
xor
mov
xor
pusha
and
loopne
mov
pop
mov
and
outsl
add
pushl
les
sbbl
js
repnz
xchg
cmp
sbb
pusha
adc
sub
in
push
test
enter
cwtl
dec
mov
cwtl
mov
dec
and
ret
sbb
or
mov
sub
hlt
sub
pop
mov
xor
add
aam
xchg
fs
and
mov
add
sbb
fs
adc
or
nop
test
and
or
inc
lods
jo
xchg
int
outsl
inc
ret
jle
or
xchg
mov
push
notb
pop
mov
lcall
clc
call
pop
scas
mov
fildl
jno
or
dec
rcrb
insl
cwtl
push
jecxz
add
adc
cltd
repnz
jl
mov
push
scas
shlb
add
sarb
or
mov
movsb
mov
jp
fiadds
lcall
subb
cs
or
call
rorb
inc
pop
or
push
push
xchg
adc
xchg
lods
loop
lahf
mov
or
mov
xchg
sub
and
mov
mov
sbb
adc
pop
push
lock
bound
adc
inc
pop
cmp
dec
loopne
add
bound
es
inc
inc
enter
xor
and
arpl
loop
mov
mov
test
xchg
mov
mov
lret
int3
rcr
mov
aad
fsubs
mov
inc
mov
xor
mov
adc
push
ficoml
push
adc
and
aam
adc
mov
add
add
fcoms
adc
mov
sbb
jnp
out
mov
and
jp
sub
add
movsb
pusha
shr
sub
popa
es
cli
push
inc
movsl
push
shrl
clc
inc
bound
mov
adc
adc
movsb
dec
mov
js
rcl
sub
and
dec
sub
pop
xor
mov
aad
or
fs
out
mov
enter
push
cmp
push
add
xchg
and
ds
adc
in
mov
or
test
sub
mov
popl
add
mov
rolb
and
aam
add
inc
mov
fdivrs
bound
add
xor
pushf
jp
cld
movsb
add
push
push
sub
mov
popf
add
sbb
or
lcall
or
inc
jns
shr
stos
popa
cli
and
lds
cmp
movsl
adc
test
ret
test
ror
ds
adc
sub
inc
or
ret
xchg
ret
sub
gs
dec
inc
and
clc
mov
dec
xor
cmp
add
xchg
and
cwtl
jle
add
aam
inc
xchg
sarb
aaa
add
loope
sbb
inc
inc
scas
and
or
das
mov
sub
js
popa
nop
mov
xor
pop
mov
add
adc
enter
xor
fimull
or
rclb
in
add
and
cli
jo
mov
cmp
mov
test
sbb
je
xchg
push
and
push
and
xor
push
add
xchg
or
sbb
add
test
orb
sub
sbb
mov
cmpsb
addl
rolb
aad
inc
mov
jne
sub
adc
insl
inc
movsb
das
and
mov
adc
mov
lcall
mov
popa
xchg
ds
jo
mov
mov
ljmp
cwtl
or
push
sbb
test
pusha
ret
dec
dec
add
adc
push
mov
lcall
loop
or
add
dec
hlt
ret
test
mov
ret
sarl
into
nop
adc
mov
jo
sub
jp
cwtl
dec
nop
mov
enter
enter
add
xor
xor
cmc
lods
scas
pusha
push
pop
push
orb
adc
outsl
cmp
sub
push
sbb
jnp
adc
fs
dec
sbb
sub
xchg
adcl
or
dec
or
or
outsb
pop
push
popa
sub
or
xor
lcall
jo
xor
or
inc
loop
or
jb
xchg
xor
insb
out
sbbb
sbbb
dec
mov
nop
dec
pop
sbb
sub
in
dec
lock
or
enter
addb
cs
cli
in
dec
mov
orl
lcall
pop
push
cmpsb
push
mov
jb
dec
or
fs
sahf
push
shll
ljmp
inc
data16
mov
mov
gs
pushf
push
mov
aad
push
push
sub
xor
mov
inc
orb
clc
jle
mov
or
mov
mov
fstpt
add
adc
cli
add
pushf
ljmp
ficoml
inc
shrb
adc
sbb
andl
or
sbb
push
push
negb
dec
loope
insb
mov
jns
mov
push
or
cmpsb
adc
call
sar
or
push
sub
or
mov
test
ror
xchg
push
enter
sub
pusha
or
add
jb
dec
mov
xor
lods
inc
inc
test
dec
out
fdivrl
push
sbb
into
les
jb
and
push
xchg
cmp
cmp
ds
adc
enter
pop
add
nop
inc
cmpsl
mov
push
cltd
or
jmp
inc
jle
lret
and
jb
adcb
and
mov
sbb
push
dec
lock
sub
mov
jmp
jbe
jp
jb
jbe
lods
test
fs
test
sbb
or
sbb
xchg
or
xor
xor
call
add
adcb
push
dec
loopne
outsl
lret
pusha
and
jbe
call
dec
gs
and
ret
pop
push
orl
jmp
pop
hlt
int3
addl
mov
nop
push
movsb
or
bound
lret
sahf
add
lea
mov
mov
test
andb
ret
lods
and
adc
pop
cmpsb
add
rolb
mov
pushf
mov
inc
xor
dec
insl
enter
dec
sub
xchg
dec
ret
rclb
xchg
mov
shr
push
pushf
addb
lods
xor
cwtl
and
js
decb
mov
inc
and
jle
xchg
rcrb
mov
mov
add
fistps
dec
sub
add
and
in
push
sub
sub
or
lods
and
fidivrs
icebp
xchg
mov
add
inc
scas
mov
mov
das
push
call
arpl
xor
sbb
hlt
push
adc
mov
xorb
cli
ss
lock
orl
or
push
or
cli
jp
and
mov
pop
enter
ret
mov
test
leave
xor
out
lcall
mov
or
sbb
jp
mov
add
int3
loop
add
mov
orb
push
sbb
loopne
lcall
mov
adc
test
loop
cmp
test
push
mov
leave
clc
sub
and
sbb
lcall
daa
dec
addb
or
ret
ja
and
inc
sub
inc
pushf
loope
andb
dec
lods
mov
add
add
xor
sbb
inc
cli
and
add
add
out
mov
jp
mov
loope
je
cltd
adc
sub
jo
push
loop
xchg
sbb
adc
dec
sub
mov
popa
cmp
xor
and
mov
adc
ss
sub
add
push
cmc
and
and
and
iret
sahf
push
call
push
push
fs
jp
jb
leave
or
mov
or
xchg
or
mov
xchg
sbb
or
mov
nop
andb
repnz
push
subb
push
xchg
mov
ret
add
es
inc
test
and
and
mov
adc
dec
notb
inc
imul
dec
jl
xchg
xchg
and
sub
adc
push
add
and
out
adc
aam
sub
das
pop
push
les
arpl
loope
ds
testb
cwtl
mov
mov
je
dec
in
addw
sahf
fs
push
mov
movb
add
fcomps
inc
cwtl
stos
push
and
or
push
nop
or
cmp
call
sub
push
mulb
add
dec
or
xchg
cmp
xor
loop
or
xchg
adcl
sbb
push
xchg
in
fcoms
rcrl
sub
inc
data16
sub
fs
loop
sub
int3
or
sbb
loop
inc
ror
inc
outsb
lret
cmp
xchg
add
aam
inc
shr
hlt
mov
mov
ret
xchg
or
subb
int
ret
fisubs
mov
inc
mov
aad
push
icebp
xor
xchg
dec
mov
stos
and
es
push
in
push
pop
or
movsb
scas
scas
xchg
mov
addl
mov
enter
dec
add
xor
mov
orb
hlt
mov
sub
xor
jb
jbe
add
inc
cli
push
sub
push
mov
dec
sbbl
clc
lock
arpl
add
dec
inc
ss
mov
cwtd
lock
es
mov
mov
or
adc
test
ror
sahf
lahf
xor
push
xlat
rcll
nop
add
ret
pop
cli
push
xor
xchg
out
dec
dec
lahf
fdivrs
cmp
push
add
xchg
pop
fsubr
fadd
sbb
push
addb
push
pusha
out
or
jle
cmp
jns
jno
pusha
push
cld
lret
es
hlt
dec
ss
stos
cmc
call
stos
insb
pusha
inc
outsb
shlb
pusha
xchg
add
sub
dec
and
imul
les
mul
orb
insb
imul
mov
mov
add
xchg
ljmp
jp
dec
test
or
mov
add
mov
push
push
mov
es
popa
loop
pop
test
sbb
mov
mov
sub
cmp
pop
xorb
cmpsb
or
repnz
insl
sbb
fmuls
add
xchg
inc
sub
popa
dec
dec
fidivrs
movb
inc
add
or
cwtl
dec
add
xchg
xorb
loopne
ret
sub
mov
les
ret
push
xor
in
dec
aam
jne
xor
bound
hlt
and
push
push
inc
dec
push
orb
loopne
jmp
out
mov
xor
mov
shrb
data16
add
mov
fsubl
call
xor
inc
fdivl
push
pop
xchg
xchg
enter
dec
inc
cs
or
sub
sbb
xchg
fcomp
add
push
xchg
xor
out
adc
sbb
cmp
dec
push
push
dec
sub
or
and
hlt
int3
loop
pusha
fists
adc
cs
sub
imul
adc
mov
shrb
lcall
cli
mov
cmp
cltd
mov
rolb
xor
cwtl
push
pushf
xchg
adc
dec
or
hlt
dec
scas
test
sbbl
and
mov
je
push
fadds
fs
push
pop
adc
push
mov
add
fmull
lret
and
pop
push
and
cmc
cmp
es
sub
js
push
aad
add
xchg
adc
aad
inc
aaa
pop
cmp
mov
push
leave
inc
sbb
ret
test
xor
addr16
dec
sub
sbb
inc
push
inc
dec
push
sub
fs
test
and
lea
dec
push
jno
pop
push
xlat
rclb
inc
into
mov
pop
xor
xchg
cs
xor
push
dec
push
enter
sbb
or
rcl
loop
jne
test
lret
adc
xor
ljmp
mov
adc
inc
or
pushl
pop
in
movsl
mov
fsubl
movb
or
and
push
fcompl
addb
inc
dec
add
into
fcomps
xchg
enter
jl
xchg
xor
add
xchg
icebp
xor
push
xorb
or
ret
fisubrs
or
fld
xor
cmp
orl
mov
push
jle
cltd
test
or
ret
mov
mov
fisubrs
jo
test
jle
or
cltd
adc
ds
rcrl
or
xchg
inc
enter
scas
inc
dec
leave
ret
dec
sub
cmpsl
or
lcall
addr16
sbb
add
lock
ficoms
sbb
and
mov
mov
xor
test
dec
mov
cmp
jo
push
cmpsb
sbb
mov
xor
xchg
inc
push
sbb
bound
add
add
sahf
nop
in
shll
adc
dec
adc
add
dec
sub
lods
pop
scas
mov
sub
dec
or
sbb
jmp
sbb
fidivrs
sbb
sbb
sub
cwtl
bound
mov
inc
dec
pop
pop
jp
add
push
test
ret
xor
xchg
and
sbb
cwtl
sarb
add
or
dec
push
cmp
shlb
mov
and
or
sub
mov
xor
cmp
addl
popa
inc
dec
ficoml
bound
movsb
xchg
nop
mov
data16
nop
inc
dec
jecxz
outsb
adc
movsb
xor
add
adc
data16
loop
test
stos
out
adc
push
ljmp
cwtl
adc
sbb
mov
loopne
imul
or
cmc
or
push
test
fwait
addb
jno
shlb
xchg
out
loop
inc
and
add
arpl
mov
es
negb
call
rcrb
jp
lods
adc
stos
ret
hlt
and
pop
notb
movsb
sub
rclb
enter
dec
push
popa
shl
inc
mov
sub
pop
inc
or
bound
or
aaa
push
js
nop
sub
cmp
jo
or
push
ret
lea
mov
sbb
out
jns
inc
or
daa
loopne
enter
add
ds
sub
ds
loopne
lcall
or
cmp
push
mov
add
addb
push
lock
and
push
push
addl
scas
hlt
and
pusha
int
sub
testb
inc
mov
ret
adc
add
xchg
out
pushf
push
test
push
sbb
sbb
addb
ret
or
enter
pop
mov
imul
add
loopne
je
push
adc
xchg
jbe
cli
cmpsl
pop
dec
test
xor
fisubrl
add
pusha
add
shl
sbb
dec
loopne
add
es
and
adc
pop
data16
xchg
and
jb
test
push
inc
dec
pusha
sub
neg
sbb
jmp
lods
imul
pop
push
adc
cmpsb
adc
mov
fbstp
add
jne
out
add
sub
mov
xor
sub
cmpb
adc
inc
loopne
pusha
stos
push
xchg
ret
sub
cs
pop
or
cwtl
les
popl
cltd
pop
mov
fsts
cwtl
test
test
cli
lds
or
mov
test
adc
outsb
imul
cmp
add
add
mov
cli
fcoms
or
mov
sarl
dec
lcall
and
and
cs
shll
xchg
add
add
xor
into
popf
test
add
roll
dec
sbb
shlb
subb
push
adcb
aad
and
xorl
adc
sub
xor
cmp
dec
jp
mov
rcrb
cmp
mov
in
add
push
cwtl
dec
cs
xchg
imul
dec
dec
push
rcrl
inc
xor
out
mov
rcll
pop
inc
imul
push
push
pusha
or
add
imul
ljmp
cmp
and
adc
or
andb
and
mov
mov
mov
push
sbb
es
push
xchg
in
add
inc
mov
push
adc
adc
xorb
out
xchg
mov
dec
and
mov
xor
xor
mov
and
mov
and
adcl
lods
mov
mov
inc
daa
mov
pop
jne
mov
cmp
sbb
sahf
ret
les
ljmp
and
pop
jbe
lods
mov
or
sbb
stc
mov
out
nop
pop
add
mov
cmp
dec
push
orb
cmc
push
test
adcb
and
shlb
adc
enter
nop
nop
lods
ficoms
inc
pop
addb
aad
mov
popa
pusha
adc
inc
add
and
xchg
push
adc
xchg
pusha
cwtl
lret
mov
push
loopne
or
rcll
inc
imul
out
sub
mov
daa
add
add
mov
jp
add
sahf
orb
arpl
dec
aam
or
mov
jo
pusha
and
add
les
sub
add
xchg
sbb
sub
mov
cli
or
enter
xor
sub
int3
mov
nop
jo
mov
in
push
xchg
test
push
loopne
loopne
fildll
imul
or
sbbl
sbb
mov
and
add
adc
pop
cld
es
mov
push
imul
lahf
sbbb
sbb
adcb
js
xchg
inc
lret
and
adc
sbb
add
sbb
aam
push
adcb
lcall
jp
cwtl
add
adc
pop
outsb
dec
lea
sub
cmp
cmp
adc
sbb
push
sbb
dec
push
inc
jge
addb
es
jno
test
add
in
stc
push
test
mov
or
dec
dec
cwtl
out
in
adc
es
je
dec
mov
mov
movsb
cmpsb
add
add
xchg
cwtl
into
nop
jno
out
and
ret
mov
or
dec
jp
jp
xor
mov
aam
xchg
insb
mov
fsubs
and
or
dec
imul
and
ret
and
lods
test
sbb
je
out
dec
pop
lret
or
sbb
and
jmp
fidivl
sbb
cli
or
pop
pop
sbb
sub
adc
or
push
mov
repnz
insb
mov
inc
push
adc
pop
lcall
or
inc
js
sbbl
mov
xor
or
popa
mov
sbb
mov
lock
xor
in
ljmp
mulb
add
enter
push
push
adcl
fs
lret
sub
cld
dec
add
lds
push
dec
and
out
fildll
mov
push
push
xor
sub
nop
adc
sub
dec
and
add
push
inc
or
pop
rol
add
fsubs
mov
sbb
test
fstl
fidivs
adc
sbb
dec
cmp
sub
fcoml
fisubs
rcr
icebp
cmpsl
test
mov
orb
mov
jp
clc
js
jne
cmp
pusha
cltd
mov
mov
enter
dec
addb
das
push
and
xchg
adc
fs
imul
dec
sub
pusha
mov
pushf
xchg
pusha
cwtl
and
and
scas
aad
adc
xchg
imul
orb
mov
hlt
shr
xchg
pusha
data16
jle
gs
lods
xchg
push
shlb
add
adc
and
or
jb
jbe
scas
xchg
inc
nop
loopne
or
xchg
or
mov
loope
and
es
sbb
bound
jo
dec
pusha
xor
mov
xchg
cmpb
or
jb
and
ds
jae
mov
jo
or
or
mov
add
rcl
mov
sub
enter
push
mov
cmp
push
sbbb
cwtl
and
lods
xchg
and
sbb
sbb
enter
fdiv
and
pop
xorb
dec
pusha
sub
insl
cltd
jo
pop
ss
loopne
mov
mov
cmc
and
or
mov
mov
mov
dec
arpl
and
pusha
xchg
adc
mov
xorl
popf
gs
je
pop
and
loopne
andb
add
lods
outsb
test
jne
xor
clc
ficoms
xor
push
and
inc
ljmp
jbe
xchg
outsb
inc
das
xor
mov
jae
xor
add
mov
and
add
stos
mov
adc
repnz
xchg
dec
lods
push
inc
insb
adcb
mov
push
sub
sbb
scas
inc
add
and
push
xchg
xchg
and
or
push
outsb
ret
outsb
push
lcall
or
dec
add
add
andb
add
xchg
daa
icebp
push
js
enter
or
data16
pop
setl
push
dec
data16
ds
popa
cmp
push
cli
dec
xor
sub
push
test
xor
dec
sbb
add
or
popa
mov
cwtl
add
mov
movsb
xor
movb
loop
add
pop
mov
jg
std
and
scas
xchg
mov
pop
addb
dec
cmp
sbb
inc
nop
inc
mov
mov
push
scas
lea
movb
add
mov
mov
in
ss
and
xchg
lcall
cwtl
test
cmpsb
mov
mov
or
mov
push
into
leave
sub
leave
push
sub
sbb
and
adc
data16
mov
mov
xchg
aad
pusha
push
xchg
rcrb
adc
xor
jle
fists
loop
cli
mov
push
or
adc
inc
or
add
cmp
or
jbe
sbbb
fcoms
jl
into
loop
push
popa
push
fidivrl
subb
incb
clc
ret
hlt
in
cmpsb
push
rorl
jne
adc
adc
mov
stos
cmpsb
push
mov
adc
test
fidivs
imul
pusha
mov
loopne
fdivl
nop
rclb
cmpsb
test
in
mov
xchg
andl
sbb
inc
cmp
out
mov
fadds
mov
mov
jecxz
pop
loop
pushf
push
xchg
xchg
shlb
movsb
inc
add
mov
mov
mov
outsb
mov
ljmp
test
or
subb
xchg
inc
insb
pop
mov
pop
popa
orb
mov
push
lods
or
cmp
and
mov
popa
sub
jo
push
or
adcb
xchg
imulb
adc
mov
pusha
dec
test
fsubp
jns
add
inc
ss
clc
jns
daa
add
nop
daa
aaa
fs
lret
clc
mov
jp
sub
inc
adc
adc
rolb
loopne
inc
pop
rol
sub
add
mov
pop
push
imul
test
and
add
mov
imul
add
sbb
test
adc
sub
fsubrl
jecxz
pushf
dec
xchg
les
test
xchg
mov
push
adc
push
shl
js
into
mov
es
add
cmp
insb
sahf
or
test
mov
je
enter
mov
and
jno
in
fs
xor
adc
inc
faddl
push
orb
add
ss
sbb
add
push
push
call
xor
or
xchg
repnz
xor
sub
cmp
cmp
cwtl
movsl
push
mov
not
or
aad
dec
or
enter
mov
lcall
ljmp
or
je
in
push
xchg
xor
adc
add
aas
or
das
lods
pusha
jl
mov
sub
lcall
adc
add
rcrb
inc
mov
mov
enter
cmpsb
xchg
pushf
js
mov
sbb
hlt
out
enter
out
cli
pop
fldl
sub
or
push
inc
add
out
cltd
add
or
dec
xchg
jb
lcall
cli
int3
add
dec
pushfw
pop
and
mov
aaa
or
push
xchg
xchg
mov
add
xor
test
sbb
sub
inc
mov
add
rolb
adc
xor
xchg
lcall
pop
xor
ret
cli
shll
push
pushf
xchg
mov
pusha
mov
xchg
sbb
push
sbb
cmp
sub
scas
lock
sbb
or
mov
movsb
ss
lcall
ret
jecxz
cmp
andl
divb
fmul
push
test
pushf
mov
ficoml
and
popa
ss
push
cmpsb
pop
sbb
push
ret
add
mov
xchg
fistl
cmpsb
mov
scas
orb
xor
imulb
sub
es
and
shrb
inc
dec
bound
out
xor
mov
and
adc
fwait
lods
cmp
push
hlt
and
addl
xor
sbb
add
lock
and
ss
addb
fs
push
dec
nop
pop
sub
mov
mov
pop
sbb
add
and
dec
jle
in
adc
pop
cli
mov
push
rolb
and
pop
adc
mov
insl
lods
and
xchg
or
pop
push
jp
call
outsb
les
enter
add
add
ss
add
outsb
stos
adc
push
push
jo
push
data16
adc
add
lock
push
ret
add
adc
addb
xorl
mov
fdivr
xor
sub
pushf
test
das
sbb
xchg
fildl
jb
xor
ficompl
inc
ret
push
in
xchg
xchg
adc
mov
jne
jo
call
pop
and
decl
repnz
add
mov
test
xor
int
lock
inc
sbb
rolb
jle
add
scas
add
adc
push
sbb
jo
out
push
xchg
add
lock
ret
lock
pop
hlt
push
push
jl
add
add
and
xchg
inc
xor
test
xchg
inc
pop
dec
adc
add
daa
ds
add
xchg
add
popa
push
sar
push
je
dec
sub
pop
nop
push
or
jp
test
or
movsb
or
add
test
mov
add
or
sbb
and
xchg
push
dec
sub
push
ljmp
lret
adc
dec
loop
ljmp
mov
pop
sub
adc
inc
and
pop
adc
inc
sub
adc
loop
and
sub
das
pusha
and
jmp
cmp
mov
and
cli
jo
mov
mov
in
and
jb
xchg
lods
cmpsb
movsl
add
pusha
xchg
xchg
shlb
js
ret
adcl
cmc
push
sub
scas
push
sbb
inc
push
movsl
cmp
xor
pusha
xor
dec
xor
xor
cmpsb
push
lods
pop
repnz
add
xchg
stos
xchg
or
jp
les
mov
cmp
js
cmpsb
mov
xlat
add
push
or
adc
and
mov
dec
add
or
push
bound
mov
shlb
add
inc
pop
pusha
inc
sub
mov
sub
or
xor
les
jl
mov
mov
and
cmp
add
cwtl
fiaddl
or
xchg
and
dec
or
dec
dec
or
sub
or
adc
lret
mov
xchg
and
mov
loopne
pusha
mov
es
fs
jo
push
jo
cwtl
dec
jp
pushf
sub
cmp
xchg
pushf
rcpps
xor
ret
or
sbb
ljmp
push
and
pop
es
movsb
pop
sbb
cmc
fidivs
or
adc
cwtl
xor
in
hlt
data16
cmp
divb
pop
sub
fs
xor
pop
adc
push
pushf
addb
add
xchg
pop
bound
imul
sbb
add
or
push
push
xchg
adc
push
test
jp
and
test
mov
aad
shrb
jo
inc
call
ja
insl
fwait
test
inc
shl
imul
jp
push
outsl
mov
shr
es
push
adc
or
rolb
sub
push
push
sbb
roll
and
add
bound
dec
inc
or
pop
and
jle
or
adc
les
jmp
mov
icebp
add
mov
js
mov
test
push
jmp
ret
data16
jo
inc
call
sbbb
mov
movsl
and
pop
sub
insl
out
adc
mov
pop
sbb
mov
loopne
sbb
or
cmp
fwait
xchg
cltd
adcb
sbb
cmp
push
dec
inc
hlt
add
push
hlt
add
mov
or
lods
sbb
je
and
mov
add
xchg
xchg
stos
and
adc
test
cld
hlt
nop
rol
orl
cmpb
pop
xorl
adc
cli
xchg
adc
lods
mov
pusha
pop
pop
and
pusha
cmp
xchg
stos
mov
and
sbb
or
cltd
mov
test
adc
fcomps
dec
sub
mov
int3
push
cmpsb
pusha
andb
popa
mov
jns
jge
movsl
adc
jo
enter
pop
or
shrb
push
sbb
adc
fildl
mov
test
push
lock
data16
adc
divb
add
adc
int3
decb
jmp
cs
pushf
push
sbb
sbb
xchg
lods
and
fs
xchg
adcb
rorb
xor
push
or
imul
xchg
cli
mov
flds
push
ret
sbbb
push
add
test
sbb
sub
adc
pushf
enter
dec
test
push
adc
xor
loop
sahf
loope
sbb
test
cmp
test
push
xchg
mov
je
jno
int3
sub
xchg
sub
sub
xchg
pushf
ret
adc
add
sbb
dec
push
sub
pop
jmp
adc
add
addb
add
in
pop
test
dec
fsubr
cmp
mov
loop
or
test
ljmp
cmc
or
inc
cmp
xchg
mov
ret
out
mov
sub
adc
mov
adc
out
xchg
cwtl
js
mov
mov
in
leave
aam
mov
or
fs
dec
cs
lods
movb
das
pop
and
hlt
xchg
xchg
shll
pop
jp
andb
test
cmc
xchg
add
adc
xor
xchg
mov
and
add
dec
xor
outsb
add
bound
out
lret
or
dec
lret
or
repnz
push
adc
sbb
and
call
das
sub
push
hlt
adc
sbb
popf
mov
push
xor
inc
pusha
add
fmull
push
push
mov
inc
inc
sbb
fdivrl
push
out
inc
ret
dec
nop
mov
adc
ret
jp
data16
cmpl
rolb
sub
ret
and
es
inc
add
push
mov
lcall
fsubrp
and
or
ret
fs
in
jbe
js
xchg
scas
push
xchg
cmp
mov
mov
cltd
xchg
les
mov
pop
ret
add
xor
inc
adc
pushf
cwtl
mov
xchg
dec
aam
push
out
dec
data16
mov
add
cs
in
push
xor
orb
fs
or
lret
add
sbb
adcb
adcl
mov
push
mov
cwtl
test
or
inc
imul
sbb
push
push
mov
sahf
pusha
test
add
mov
out
test
fs
push
xchg
and
push
rolb
pop
or
adc
mov
xchg
xchg
add
insl
xor
push
xchg
pusha
das
fdivl
shlb
adc
ret
adcb
rorb
scas
mov
aad
lret
mov
pop
cwtl
cmp
cmp
and
pusha
add
insb
and
arpl
sub
cmp
or
pop
mov
pusha
add
pop
inc
xchg
adcl
lods
mov
sar
es
xchg
add
mov
adc
leave
repnz
es
dec
sbb
push
scas
adc
xor
or
aam
rclb
int3
rclb
sbb
xor
dec
cmp
xor
loopne
test
out
test
xchg
push
or
jl
jb
insl
pop
mov
adc
dec
cli
repnz
xchg
sbb
sub
xchg
or
or
orb
rclb
inc
or
into
xor
cltd
xorb
push
and
loop
xor
pop
test
cli
verw
dec
les
rolb
orl
inc
inc
adc
lock
test
adc
push
adc
es
inc
cmpsl
pop
cmpsb
cld
subl
hlt
mov
xchg
pusha
adcb
cmp
les
and
or
leave
ds
aad
push
xchg
loopne
cwtl
xchg
add
aas
and
and
mov
mov
inc
inc
xor
sub
inc
cmp
adc
jae
xchg
xor
ds
ljmp
jmp
cmp
adc
mov
jo
fstl
mov
mov
push
enter
or
adc
inc
or
cmp
sub
mov
into
mov
adc
push
test
ljmp
in
repnz
addb
cmp
ret
sbb
and
dec
push
and
sub
shlb
mov
das
ss
movsb
and
and
leave
mov
lcall
loop
dec
in
je
mov
push
les
inc
xorb
je
inc
cmp
mov
insl
lods
mov
rclb
js
and
push
pop
addb
cs
or
mov
loope
xchg
sbb
lods
sub
adc
idivb
push
mov
xchg
mov
enter
loop
test
js
repnz
sbb
ss
and
xor
shlb
orb
in
mov
or
test
lock
loopne
icebp
xchg
js
adc
push
nop
ds
cltd
add
jb
sarl
rolb
xchg
hlt
and
sahf
jl
xchg
leave
and
push
push
lods
daa
and
add
cmp
mov
jb
dec
cmpsl
orl
add
xchg
and
mov
xor
xor
mov
jl
or
push
xor
mov
jp
test
sbb
inc
mov
cmp
push
out
leave
push
sub
mov
dec
xchg
pusha
sbb
push
mov
cmpl
movsb
xor
addl
jne
adc
push
in
xchg
xor
xor
movsb
and
push
les
inc
in
ljmp
adc
es
sarl
fwait
mov
add
mov
dec
add
add
test
movb
fs
ds
mov
and
cmpsb
push
into
sbb
aad
push
loopne
inc
mov
or
pop
cmpsb
mov
movsb
test
push
inc
pop
sbb
adc
in
outsb
cmp
jmp
push
jle
xchg
xchg
mov
mov
repnz
adc
push
into
push
cmp
pop
mov
cld
movb
dec
shrl
cld
cli
xchg
testb
dec
loopne
push
xchg
and
test
movsb
andl
in
add
sahf
cld
add
or
xchg
in
sbb
shrb
pop
xchg
sbb
popa
daa
push
xor
adc
lret
and
xor
mov
pop
ret
mov
ljmp
mov
jbe
xchg
shl
negb
out
add
subb
adc
loop
dec
mov
and
cmp
fisubrs
dec
popa
adc
jb
xchg
pop
or
and
cmp
pop
cli
inc
inc
push
aaa
fcoml
lock
lods
in
and
sbb
nop
enter
ret
xor
mov
adc
mov
push
clc
filds
daa
xor
add
data16
dec
add
push
popa
enter
inc
enter
and
jnp
sub
cltd
or
mov
add
cmp
and
xchg
or
dec
sub
ljmp
cld
xor
movsb
xchg
test
mov
dec
adc
pop
stos
mov
test
push
scas
test
cltd
xchg
sbb
les
xchg
mov
les
or
adc
and
xchg
dec
push
dec
dec
sub
loopne
lods
nop
push
gs
fs
les
cmpsb
pushf
adc
push
and
cwtl
sbbb
push
cmpb
cmc
push
hlt
cli
insl
or
inc
es
and
sub
sbb
add
cld
mov
or
inc
adc
ds
sub
lcall
dec
pusha
inc
push
mov
fiaddl
mov
xchg
cmp
lock
mov
pusha
lret
inc
pop
loopne
push
outsl
xorl
enter
and
push
sub
popf
add
or
pop
addb
scas
shlb
sbb
xor
test
xchg
cmc
xchg
movsb
dec
test
pop
sbb
es
mov
mov
mov
push
mov
sbb
add
adc
sub
adc
and
gs
push
cmp
add
push
lret
dec
div
sub
pop
jo
sbb
push
or
test
sbb
xor
add
mov
inc
jp
js
xor
or
jp
movsb
xchg
cwtl
fld
dec
mov
fdivrl
mov
imul
dec
cwtl
movsb
add
cmpsb
and
pop
pop
pop
push
cmp
test
enter
adc
aam
ret
pop
sar
push
fcoml
dec
ret
inc
cltd
xchg
mov
xor
add
fs
jle
inc
cmp
data16
xchg
andb
sbb
mov
inc
lret
add
js
and
addl
mov
lods
insl
subl
fwait
jnp
mov
add
fmuls
sbb
cli
xchg
push
cld
imul
daa
icebp
sbb
pusha
hlt
pop
xchg
sbb
loop
xor
loop
xchg
sbb
cwtl
sub
test
inc
sub
adc
outsb
sbb
pop
sub
ljmp
sub
lcall
cld
mov
sbb
insb
add
mov
or
dec
int3
pusha
inc
and
mov
xor
test
movsb
xchg
and
add
or
adc
push
mov
xchg
adcb
sbb
dec
jl
sbb
pushf
les
es
sbb
mov
test
pop
mov
cltd
jl
call
ret
sbb
xor
fidivl
loopne
or
test
xchg
or
sub
andb
rcl
xchg
add
mov
lret
cli
jle
cltd
xor
sub
js
xor
in
and
bswap
jb
xchg
sub
js
inc
imul
loop
push
adc
cmp
mov
xorb
bound
faddl
xchg
add
or
cmp
fs
and
dec
pop
add
lret
insb
scas
jl
call
sub
sub
mov
mov
add
popa
xchg
and
mov
loop
add
adc
xor
xor
lods
push
dec
test
jbe
loop
fnstcw
adcl
push
cwtl
aam
out
rcrb
gs
xor
or
mov
stos
mov
enter
ret
mov
pushf
shl
fsub
test
int3
sub
xchg
pop
xchg
pop
data16
mov
adc
adc
add
xchg
shl
xor
xchg
or
xor
test
push
lret
orb
mov
add
pop
sub
cs
or
call
xor
bound
inc
pop
and
adc
sbb
daa
subl
and
adc
js
add
mov
add
or
adc
cmp
nop
push
inc
or
rcll
mov
addr16
pop
cmp
outsb
dec
fcomp
es
lret
push
pushf
stos
mov
or
mov
mov
adc
xor
cmp
adc
mov
mov
push
fdivrp
xchg
cld
fistpl
decb
or
jb
jnp
movsl
test
loop
mov
sarl
fldl
push
sub
inc
pushf
and
outsb
mov
push
push
add
xchg
leave
movsb
faddp
adc
es
xchg
popf
or
scas
cli
jecxz
jbe
mov
aam
sbb
add
mov
lods
mov
sbb
mov
push
call
pusha
data16
add
lods
or
push
inc
sbb
jbe
repnz
orl
rcr
push
daa
push
mov
andl
cltd
aam
mov
or
ds
cltd
int3
push
pushf
mov
dec
pop
dec
add
sub
ficompl
loopne
dec
outsb
adc
je
adc
cmp
dec
xor
js
push
xchg
int3
pushf
test
js
xchg
mov
ret
adc
inc
gs
lea
sub
push
sub
orl
sub
outsb
sub
inc
data16
push
shll
sar
sbb
xchg
popa
es
adc
cmp
sub
rorb
ds
or
and
adc
dec
pusha
psubd
and
adc
imul
and
or
jl
lcall
in
cmp
in
push
js
mov
imul
mov
xor
int3
sahf
and
xchg
cmp
sub
mov
test
and
stos
or
andb
push
xchg
cs
add
mov
xchg
mov
ljmp
fbld
inc
sub
jo
shlb
mov
subl
cltd
dec
loop
gs
rcrb
cmp
push
cwtd
dec
xor
in
adc
cmp
rolb
sbb
cmpsb
inc
or
jnp
push
add
and
int3
xor
sub
lcall
xchg
fistpll
insl
sbb
jb
and
sbb
xchg
sar
orl
or
and
inc
sub
mov
adcb
ss
mov
test
pushf
lods
mov
jb
push
shlb
movsl
inc
and
outsb
sbb
push
mov
inc
or
adc
mov
inc
push
add
sbb
sub
lcall
push
xchg
jno
adc
mov
and
mov
dec
xor
test
add
adc
ret
push
lods
and
mov
add
dec
sbb
adc
dec
mov
sub
lock
and
loopne
or
xor
or
lock
insl
dec
add
add
jbe
sub
and
adc
xchg
lods
and
adc
nop
push
add
add
addl
orb
push
stos
stos
pop
and
mov
outsb
jne
push
imul
popa
je
push
push
gs
push
je
outsl
insb
sub
outsl
jne
je
outsl
imul
bound
inc
imulb
in
jb
gs
dec
gs
jo
outsb
and
jle
jo
outsb
mov
imul
je
bound
xor
lcall
gs
mov
jnp
scas
insl
push
imul
insb
gs
push
jl
js
fstps
xor
insb
aaa
jb
jne
add
sub
jg
out
out
outsl
jae
push
sbb
pop
adc
in
cltd
fldt
push
cmpsb
mov
sbb
test
add
xor
dec
imul
outsl
insl
jo
sahf
shlb
orb
mov
in
fstps
mov
subb
jnp
je
outsl
push
pop
xorl
jo
adc
push
jae
inc
gs
pop
adc
sub
dec
dec
dec
addr16
addr16
fildl
jbe
jb
popa
jo
mov
jns
cmp
cmp
push
call
pop
fimull
or
mov
je
popa
mov
in
jo
push
outsb
push
dec
bound
jbe
movsl
pusha
adc
fldt
rorb
mov
lahf
inc
push
loope
fistl
jne
fs
subl
cmp
inc
outsl
outsl
xor
push
push
dec
shrl
mov
fsubs
cmp
pop
jns
gs
sbb
push
jp
sahf
arpl
arpl
shll
ret
out
jb
push
push
test
lds
mov
push
mov
leave
popf
mov
mov
and
inc
test
jae
push
add
cmpsl
jo
rorb
mov
mov
outsb
jnp
pop
int3
cmpsl
dec
jae
and
pop
insb
ja
inc
push
fldenv
and
jne
cmp
jb
cmp
jge
sti
push
sub
loope
je
loopne
xor
and
jne
dec
xchg
jg
inc
iret
shrb
je
imul
dec
sbb
out
in
sbb
jp
push
test
popl
inc
ret
mov
add
test
pushf
inc
adc
pop
lods
mov
push
fs
pushf
loop
fwait
cmp
mov
sbb
mov
mov
cmc
push
test
test
sub
mov
mov
mov
scas
push
dec
es
popa
jb
fnstcw
cld
in
test
fldl
jo
xor
or
outsl
andb
sub
gs
jmp
cmp
jae
xor
inc
jo
jne
adcb
lods
dec
mov
inc
sub
popf
jecxz
dec
inc
dec
inc
sub
lea
push
ss
testb
clc
icebp
xor
subb
sub
or
inc
sahf
xor
push
push
sub
dec
add
push
add
stos
push
loop
or
loope
out
dec
mov
cmpsb
jae
inc
data16
das
shl
inc
insb
jae,pn
js
mov
mov
int3
lea
mov
jbe
push
roll
clc
fwait
outsb
andl
pusha
push
cwtl
in
dec
jp
arpl
and
int3
stos
dec
fldcw
dec
pop
push
sub
ljmp
inc
or
fsubrl
or
push
push
lret
fsubs
mov
add
andl
mov
push
pop
add
jb
ljmp
out
mov
lcall
and
shll
sub
insl
outsl
cmc
sbb
sbb
fs
lea
fstpt
cmp
inc
je
outsb
imul
pop
andl
and
shrl
mov
sbb
adc
add
xor
push
adc
or
bound
pop
inc
in
cltd
xchg
sbb
ss
nop
jns
sub
stos
xor
int
dec
mov
sub
pop
sbb
xor
and
sub
insb
xor
aaa
jnp
imul
cmp
in
mov
dec
inc
or
pop
adc
movsb
adc
loopne
stos
pop
push
and
addl
fdivrs
xchg
pusha
in
cmc
pushf
popa
shlb
imul
pop
fld
sub
jns
and
mov
add
jnp
ljmp
test
or
dec
nop
fcoms
push
popa
push
orl
and
mov
pop
aaa
inc
cmpsb
and
sbb
jbe
sbb
std
dec
push
popa
pusha
mov
rcrl
mov
jo
and
sarb
mov
cs
stos
in
pop
pop
mov
int3
add
fadds
aaa
pusha
add
insb
fsubl
test
xor
jb
je
adc
adc
inc
add
outsb
jae
inc
fisubl
jo
jae
arpl
and
ret
fdivrl
mov
cmp
or
or
jbe
xor
or
std
dec
dec
push
pop
add
pusha
pop
inc
jno
push
xor
inc
adc
fisttpll
pushf
dec
or
mov
mov
pop
and
cmp
test
mov
pop
icebp
fs
arpl
imul
pavgw
mov
sub
inc
jp
sbbl
push
lods
jb
das
mov
add
add
push
push
rorb
mov
shll
mov
decb
mov
dec
cli
popa
mov
mov
mov
fidivs
push
add
fimuls
push
xor
nop
or
mov
fcmovu
ja
xchg
mov
idivb
inc
adc
mov
arpl
jo
stos
nop
jmp
fs
fidivrl
dec
push
jo
inc
or
inc
and
mov
insl
inc
sub
mov
imul
scas
inc
lea
jb
roll
sbb
sbb
ret
inc
insb
addr16
inc
xor
sbb
mov
das
enter
push
fists
push
mov
dec
dec
in
aam
rorl
imul
cmp
insb
divl
ret
push
push
popl
push
stos
push
subb
sahf
push
cmp
push
push
inc
mov
adc
jo
inc
push
sti
dec
adc
sbb
add
pop
dec
arpl
mov
adc
scas
adc
inc
ds
mov
imul
push
aad
mov
adc
sbb
aad
sub
nop
adc
jecxz
stos
js
imul
pusha
push
nop
loopne
cld
ret
call
pushf
enter
movsb
xchg
xor
cmp
inc
fdivrs
push
xor
ja
inc
fisttpll
bound
fs
je
push
dec
je
xor
mov
pop
js
fbstp
sbb
pusha
xor
xchg
mov
adc
mov
adc
mov
cmp
clc
pop
mov
xchg
enter
jb
inc
stos
push
jecxz
pop
shlb
mov
ja
mov
mov
data16
mov
lcall
dec
push
push
pusha
xor
push
add
hlt
pop
popa
mov
leave
pop
dec
fsubrs
xor
xchg
imul
jo
xchg
fidivrs
push
movsb
xorl
fistl
pushw
jb
movsl
cs
mov
adc
xor
out
int3
stos
sub
ret
div
aaa
aas
sti
pop
push
aad
xchg
jmp
aaa
push
xchg
add
xadd
inc
insb
jo
dec
lock
jbe
je
xor
add
inc
fisubrs
pop
out
es
pop
bound
sbb
adc
lods
fs
pop
dec
or
or
in
jnp
adc
into
sub
dec
mov
or
sbb
xor
cmp
cmpsb
fisttps
nop
arpl
add
inc
lds
add
hlt
rcll
das
int3
mov
pop
lcall
fnsave
pop
xlat
inc
pop
and
mov
enter
fnstenv
aad
mov
dec
jnp
test
ror
push
mov
es
cmovno
push
sub
fstl
pop
inc
movb
xchg
mov
mov
mov
add
out
push
popa
push
inc
jbe
or
mov
cmp
rcll
test
or
push
imul
mov
inc
jae
cmpsb
aad
jno
push
or
roll
aad
je
xchg
out
int3
in
cmp
imul
inc
lcall
les
lahf
cld
incl
add
add
cmovs
push
clc
add
add
add
or
mov
adc
adc
aaa
dec
mov
pop
mov
add
pop
add
movlps
mov
js
inc
or
add
adc
xor
add
je,pn
addl
add
xlat
pop
cmpsb
xchg
and
sub
mov
out
and
and
iret
inc
cs
dec
push
add
rcr
in
dec
lcall
arpl
negb
sbb
out
cwtl
add
xchg
and
nop
mov
add
test
dec
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
